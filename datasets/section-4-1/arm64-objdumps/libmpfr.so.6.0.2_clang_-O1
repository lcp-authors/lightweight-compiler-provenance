
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpfr.so.6.0.2_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000be00 <.init>:
    be00:	stp	x29, x30, [sp, #-16]!
    be04:	mov	x29, sp
    be08:	bl	d260 <__gmpfr_flags@plt>
    be0c:	ldp	x29, x30, [sp], #16
    be10:	ret

Disassembly of section .plt:

000000000000be20 <mpfr_agm@plt-0x20>:
    be20:	stp	x16, x30, [sp, #-16]!
    be24:	adrp	x16, 72000 <__gmpfr_l2b@@Base+0x2f0>
    be28:	ldr	x17, [x16, #4088]
    be2c:	add	x16, x16, #0xff8
    be30:	br	x17
    be34:	nop
    be38:	nop
    be3c:	nop

000000000000be40 <mpfr_agm@plt>:
    be40:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    be44:	ldr	x17, [x16]
    be48:	add	x16, x16, #0x0
    be4c:	br	x17

000000000000be50 <memcpy@plt>:
    be50:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    be54:	ldr	x17, [x16, #8]
    be58:	add	x16, x16, #0x8
    be5c:	br	x17

000000000000be60 <__gmpz_get_si@plt>:
    be60:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    be64:	ldr	x17, [x16, #16]
    be68:	add	x16, x16, #0x10
    be6c:	br	x17

000000000000be70 <__gmpz_abs@plt>:
    be70:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    be74:	ldr	x17, [x16, #24]
    be78:	add	x16, x16, #0x18
    be7c:	br	x17

000000000000be80 <__gmpz_tdiv_r_2exp@plt>:
    be80:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    be84:	ldr	x17, [x16, #32]
    be88:	add	x16, x16, #0x20
    be8c:	br	x17

000000000000be90 <mpfr_set_ld@plt>:
    be90:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    be94:	ldr	x17, [x16, #40]
    be98:	add	x16, x16, #0x28
    be9c:	br	x17

000000000000bea0 <mpfr_mul_ui@plt>:
    bea0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bea4:	ldr	x17, [x16, #48]
    bea8:	add	x16, x16, #0x30
    beac:	br	x17

000000000000beb0 <__gmpn_tdiv_qr@plt>:
    beb0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    beb4:	ldr	x17, [x16, #56]
    beb8:	add	x16, x16, #0x38
    bebc:	br	x17

000000000000bec0 <mpfr_cot@plt>:
    bec0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bec4:	ldr	x17, [x16, #64]
    bec8:	add	x16, x16, #0x40
    becc:	br	x17

000000000000bed0 <mpfr_set_si_2exp@plt>:
    bed0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bed4:	ldr	x17, [x16, #72]
    bed8:	add	x16, x16, #0x48
    bedc:	br	x17

000000000000bee0 <__gmpz_scan1@plt>:
    bee0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bee4:	ldr	x17, [x16, #80]
    bee8:	add	x16, x16, #0x50
    beec:	br	x17

000000000000bef0 <mpfr_random_deviate_value@plt>:
    bef0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bef4:	ldr	x17, [x16, #88]
    bef8:	add	x16, x16, #0x58
    befc:	br	x17

000000000000bf00 <strlen@plt>:
    bf00:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf04:	ldr	x17, [x16, #96]
    bf08:	add	x16, x16, #0x60
    bf0c:	br	x17

000000000000bf10 <fputs@plt>:
    bf10:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf14:	ldr	x17, [x16, #104]
    bf18:	add	x16, x16, #0x68
    bf1c:	br	x17

000000000000bf20 <__gmpz_tdiv_qr@plt>:
    bf20:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf24:	ldr	x17, [x16, #112]
    bf28:	add	x16, x16, #0x70
    bf2c:	br	x17

000000000000bf30 <__gmpn_copyd@plt>:
    bf30:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf34:	ldr	x17, [x16, #120]
    bf38:	add	x16, x16, #0x78
    bf3c:	br	x17

000000000000bf40 <mpfr_cosh@plt>:
    bf40:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf44:	ldr	x17, [x16, #128]
    bf48:	add	x16, x16, #0x80
    bf4c:	br	x17

000000000000bf50 <mpfr_tanh@plt>:
    bf50:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf54:	ldr	x17, [x16, #136]
    bf58:	add	x16, x16, #0x88
    bf5c:	br	x17

000000000000bf60 <__gmpn_add_1@plt>:
    bf60:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf64:	ldr	x17, [x16, #144]
    bf68:	add	x16, x16, #0x90
    bf6c:	br	x17

000000000000bf70 <mpfr_free_cache@plt>:
    bf70:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf74:	ldr	x17, [x16, #152]
    bf78:	add	x16, x16, #0x98
    bf7c:	br	x17

000000000000bf80 <mpfr_ui_pow_ui@plt>:
    bf80:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf84:	ldr	x17, [x16, #160]
    bf88:	add	x16, x16, #0xa0
    bf8c:	br	x17

000000000000bf90 <__gmpz_tdiv_q@plt>:
    bf90:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bf94:	ldr	x17, [x16, #168]
    bf98:	add	x16, x16, #0xa8
    bf9c:	br	x17

000000000000bfa0 <__gmpfr_ceil_exp2@plt>:
    bfa0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bfa4:	ldr	x17, [x16, #176]
    bfa8:	add	x16, x16, #0xb0
    bfac:	br	x17

000000000000bfb0 <mpfr_set_nan@plt>:
    bfb0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bfb4:	ldr	x17, [x16, #184]
    bfb8:	add	x16, x16, #0xb8
    bfbc:	br	x17

000000000000bfc0 <__gmpz_cdiv_q_2exp@plt>:
    bfc0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bfc4:	ldr	x17, [x16, #192]
    bfc8:	add	x16, x16, #0xc0
    bfcc:	br	x17

000000000000bfd0 <mpfr_sub@plt>:
    bfd0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bfd4:	ldr	x17, [x16, #200]
    bfd8:	add	x16, x16, #0xc8
    bfdc:	br	x17

000000000000bfe0 <__gmpn_set_str@plt>:
    bfe0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bfe4:	ldr	x17, [x16, #208]
    bfe8:	add	x16, x16, #0xd0
    bfec:	br	x17

000000000000bff0 <mpfr_mul_2si@plt>:
    bff0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    bff4:	ldr	x17, [x16, #216]
    bff8:	add	x16, x16, #0xd8
    bffc:	br	x17

000000000000c000 <mpfr_gamma_one_and_two_third@plt>:
    c000:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c004:	ldr	x17, [x16, #224]
    c008:	add	x16, x16, #0xe0
    c00c:	br	x17

000000000000c010 <mpfr_cmp_z@plt>:
    c010:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c014:	ldr	x17, [x16, #232]
    c018:	add	x16, x16, #0xe8
    c01c:	br	x17

000000000000c020 <mpfr_fits_intmax_p@plt>:
    c020:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c024:	ldr	x17, [x16, #240]
    c028:	add	x16, x16, #0xf0
    c02c:	br	x17

000000000000c030 <mpfr_init@plt>:
    c030:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c034:	ldr	x17, [x16, #248]
    c038:	add	x16, x16, #0xf8
    c03c:	br	x17

000000000000c040 <mpfr_tan@plt>:
    c040:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c044:	ldr	x17, [x16, #256]
    c048:	add	x16, x16, #0x100
    c04c:	br	x17

000000000000c050 <mpfr_fdump@plt>:
    c050:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c054:	ldr	x17, [x16, #264]
    c058:	add	x16, x16, #0x108
    c05c:	br	x17

000000000000c060 <__gmpz_cmpabs_ui@plt>:
    c060:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c064:	ldr	x17, [x16, #272]
    c068:	add	x16, x16, #0x110
    c06c:	br	x17

000000000000c070 <mpfr_strtofr@plt>:
    c070:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c074:	ldr	x17, [x16, #280]
    c078:	add	x16, x16, #0x118
    c07c:	br	x17

000000000000c080 <mpfr_vasnprintf_aux@plt>:
    c080:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c084:	ldr	x17, [x16, #288]
    c088:	add	x16, x16, #0x120
    c08c:	br	x17

000000000000c090 <__gmpz_sub_ui@plt>:
    c090:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c094:	ldr	x17, [x16, #296]
    c098:	add	x16, x16, #0x128
    c09c:	br	x17

000000000000c0a0 <mpfr_ubf_zexp2exp@plt>:
    c0a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c0a4:	ldr	x17, [x16, #304]
    c0a8:	add	x16, x16, #0x130
    c0ac:	br	x17

000000000000c0b0 <__gmp_get_memory_functions@plt>:
    c0b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c0b4:	ldr	x17, [x16, #312]
    c0b8:	add	x16, x16, #0x138
    c0bc:	br	x17

000000000000c0c0 <__gmpz_sqrt@plt>:
    c0c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c0c4:	ldr	x17, [x16, #320]
    c0c8:	add	x16, x16, #0x140
    c0cc:	br	x17

000000000000c0d0 <__gmpfr_int_ceil_log2@plt>:
    c0d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c0d4:	ldr	x17, [x16, #328]
    c0d8:	add	x16, x16, #0x148
    c0dc:	br	x17

000000000000c0e0 <mpfr_mulhigh_n@plt>:
    c0e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c0e4:	ldr	x17, [x16, #336]
    c0e8:	add	x16, x16, #0x150
    c0ec:	br	x17

000000000000c0f0 <mpfr_set_erangeflag@plt>:
    c0f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c0f4:	ldr	x17, [x16, #344]
    c0f8:	add	x16, x16, #0x158
    c0fc:	br	x17

000000000000c100 <mpfr_get_ui@plt>:
    c100:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c104:	ldr	x17, [x16, #352]
    c108:	add	x16, x16, #0x160
    c10c:	br	x17

000000000000c110 <__gmpz_set_ui@plt>:
    c110:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c114:	ldr	x17, [x16, #360]
    c118:	add	x16, x16, #0x168
    c11c:	br	x17

000000000000c120 <__gmpn_lshift@plt>:
    c120:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c124:	ldr	x17, [x16, #368]
    c128:	add	x16, x16, #0x170
    c12c:	br	x17

000000000000c130 <__gmpfr_floor_log2@plt>:
    c130:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c134:	ldr	x17, [x16, #376]
    c138:	add	x16, x16, #0x178
    c13c:	br	x17

000000000000c140 <__gmpn_rshift@plt>:
    c140:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c144:	ldr	x17, [x16, #384]
    c148:	add	x16, x16, #0x180
    c14c:	br	x17

000000000000c150 <mpfr_cmp_d@plt>:
    c150:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c154:	ldr	x17, [x16, #392]
    c158:	add	x16, x16, #0x188
    c15c:	br	x17

000000000000c160 <__cxa_finalize@plt>:
    c160:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c164:	ldr	x17, [x16, #400]
    c168:	add	x16, x16, #0x190
    c16c:	br	x17

000000000000c170 <sprintf@plt>:
    c170:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c174:	ldr	x17, [x16, #408]
    c178:	add	x16, x16, #0x198
    c17c:	br	x17

000000000000c180 <putc@plt>:
    c180:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c184:	ldr	x17, [x16, #416]
    c188:	add	x16, x16, #0x1a0
    c18c:	br	x17

000000000000c190 <mpfr_get_d@plt>:
    c190:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c194:	ldr	x17, [x16, #424]
    c198:	add	x16, x16, #0x1a8
    c19c:	br	x17

000000000000c1a0 <mpfr_set_f@plt>:
    c1a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c1a4:	ldr	x17, [x16, #432]
    c1a8:	add	x16, x16, #0x1b0
    c1ac:	br	x17

000000000000c1b0 <mpfr_mul@plt>:
    c1b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c1b4:	ldr	x17, [x16, #440]
    c1b8:	add	x16, x16, #0x1b8
    c1bc:	br	x17

000000000000c1c0 <mpfr_sub_z@plt>:
    c1c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c1c4:	ldr	x17, [x16, #448]
    c1c8:	add	x16, x16, #0x1c0
    c1cc:	br	x17

000000000000c1d0 <mpfr_neg@plt>:
    c1d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c1d4:	ldr	x17, [x16, #456]
    c1d8:	add	x16, x16, #0x1c8
    c1dc:	br	x17

000000000000c1e0 <mpfr_exp10@plt>:
    c1e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c1e4:	ldr	x17, [x16, #464]
    c1e8:	add	x16, x16, #0x1d0
    c1ec:	br	x17

000000000000c1f0 <mpfr_pow@plt>:
    c1f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c1f4:	ldr	x17, [x16, #472]
    c1f8:	add	x16, x16, #0x1d8
    c1fc:	br	x17

000000000000c200 <fputc@plt>:
    c200:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c204:	ldr	x17, [x16, #480]
    c208:	add	x16, x16, #0x1e0
    c20c:	br	x17

000000000000c210 <mpfr_cmp2@plt>:
    c210:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c214:	ldr	x17, [x16, #488]
    c218:	add	x16, x16, #0x1e8
    c21c:	br	x17

000000000000c220 <mpfr_tmp_allocate@plt>:
    c220:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c224:	ldr	x17, [x16, #496]
    c228:	add	x16, x16, #0x1f0
    c22c:	br	x17

000000000000c230 <mpfr_nextbelow@plt>:
    c230:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c234:	ldr	x17, [x16, #504]
    c238:	add	x16, x16, #0x1f8
    c23c:	br	x17

000000000000c240 <__gmpz_sub@plt>:
    c240:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c244:	ldr	x17, [x16, #512]
    c248:	add	x16, x16, #0x200
    c24c:	br	x17

000000000000c250 <mpfr_random_deviate_clear@plt>:
    c250:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c254:	ldr	x17, [x16, #520]
    c258:	add	x16, x16, #0x208
    c25c:	br	x17

000000000000c260 <mpfr_get_z@plt>:
    c260:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c264:	ldr	x17, [x16, #528]
    c268:	add	x16, x16, #0x210
    c26c:	br	x17

000000000000c270 <__gmpn_com@plt>:
    c270:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c274:	ldr	x17, [x16, #536]
    c278:	add	x16, x16, #0x218
    c27c:	br	x17

000000000000c280 <mpfr_exp_3@plt>:
    c280:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c284:	ldr	x17, [x16, #544]
    c288:	add	x16, x16, #0x220
    c28c:	br	x17

000000000000c290 <__gmpz_fdiv_q@plt>:
    c290:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c294:	ldr	x17, [x16, #552]
    c298:	add	x16, x16, #0x228
    c29c:	br	x17

000000000000c2a0 <mpfr_set_d@plt>:
    c2a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c2a4:	ldr	x17, [x16, #560]
    c2a8:	add	x16, x16, #0x230
    c2ac:	br	x17

000000000000c2b0 <mpfr_fits_ulong_p@plt>:
    c2b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c2b4:	ldr	x17, [x16, #568]
    c2b8:	add	x16, x16, #0x238
    c2bc:	br	x17

000000000000c2c0 <__gmpn_sub_n@plt>:
    c2c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c2c4:	ldr	x17, [x16, #576]
    c2c8:	add	x16, x16, #0x240
    c2cc:	br	x17

000000000000c2d0 <mpfr_clear_cache@plt>:
    c2d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c2d4:	ldr	x17, [x16, #584]
    c2d8:	add	x16, x16, #0x248
    c2dc:	br	x17

000000000000c2e0 <mpfr_div_ui2@plt>:
    c2e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c2e4:	ldr	x17, [x16, #592]
    c2e8:	add	x16, x16, #0x250
    c2ec:	br	x17

000000000000c2f0 <__gmpz_fits_slong_p@plt>:
    c2f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c2f4:	ldr	x17, [x16, #600]
    c2f8:	add	x16, x16, #0x258
    c2fc:	br	x17

000000000000c300 <localeconv@plt>:
    c300:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c304:	ldr	x17, [x16, #608]
    c308:	add	x16, x16, #0x260
    c30c:	br	x17

000000000000c310 <__gmpz_cdiv_q_ui@plt>:
    c310:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c314:	ldr	x17, [x16, #616]
    c318:	add	x16, x16, #0x268
    c31c:	br	x17

000000000000c320 <mpfr_frac@plt>:
    c320:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c324:	ldr	x17, [x16, #624]
    c328:	add	x16, x16, #0x270
    c32c:	br	x17

000000000000c330 <mpfr_set_prec@plt>:
    c330:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c334:	ldr	x17, [x16, #632]
    c338:	add	x16, x16, #0x278
    c33c:	br	x17

000000000000c340 <__gmpz_cmpabs@plt>:
    c340:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c344:	ldr	x17, [x16, #640]
    c348:	add	x16, x16, #0x280
    c34c:	br	x17

000000000000c350 <mpfr_pow_z@plt>:
    c350:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c354:	ldr	x17, [x16, #648]
    c358:	add	x16, x16, #0x288
    c35c:	br	x17

000000000000c360 <mpfr_powerof2_raw@plt>:
    c360:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c364:	ldr	x17, [x16, #656]
    c368:	add	x16, x16, #0x290
    c36c:	br	x17

000000000000c370 <__gmpz_setbit@plt>:
    c370:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c374:	ldr	x17, [x16, #664]
    c378:	add	x16, x16, #0x298
    c37c:	br	x17

000000000000c380 <__gmpfr_isqrt@plt>:
    c380:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c384:	ldr	x17, [x16, #672]
    c388:	add	x16, x16, #0x2a0
    c38c:	br	x17

000000000000c390 <mpfr_rint_trunc@plt>:
    c390:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c394:	ldr	x17, [x16, #680]
    c398:	add	x16, x16, #0x2a8
    c39c:	br	x17

000000000000c3a0 <mpfr_overflow@plt>:
    c3a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c3a4:	ldr	x17, [x16, #688]
    c3a8:	add	x16, x16, #0x2b0
    c3ac:	br	x17

000000000000c3b0 <mpfr_cmp_ui_2exp@plt>:
    c3b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c3b4:	ldr	x17, [x16, #696]
    c3b8:	add	x16, x16, #0x2b8
    c3bc:	br	x17

000000000000c3c0 <__gmpz_divexact@plt>:
    c3c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c3c4:	ldr	x17, [x16, #704]
    c3c8:	add	x16, x16, #0x2c0
    c3cc:	br	x17

000000000000c3d0 <mpfr_pow_ui@plt>:
    c3d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c3d4:	ldr	x17, [x16, #712]
    c3d8:	add	x16, x16, #0x2c8
    c3dc:	br	x17

000000000000c3e0 <mpfr_ubf_mul_exact@plt>:
    c3e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c3e4:	ldr	x17, [x16, #720]
    c3e8:	add	x16, x16, #0x2d0
    c3ec:	br	x17

000000000000c3f0 <__gmpn_cmp@plt>:
    c3f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c3f4:	ldr	x17, [x16, #728]
    c3f8:	add	x16, x16, #0x2d8
    c3fc:	br	x17

000000000000c400 <mpfr_mpz_init@plt>:
    c400:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c404:	ldr	x17, [x16, #736]
    c408:	add	x16, x16, #0x2e0
    c40c:	br	x17

000000000000c410 <__gmpz_set@plt>:
    c410:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c414:	ldr	x17, [x16, #744]
    c418:	add	x16, x16, #0x2e8
    c41c:	br	x17

000000000000c420 <mpfr_bernoulli_freecache@plt>:
    c420:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c424:	ldr	x17, [x16, #752]
    c428:	add	x16, x16, #0x2f0
    c42c:	br	x17

000000000000c430 <__gmpz_fac_ui@plt>:
    c430:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c434:	ldr	x17, [x16, #760]
    c438:	add	x16, x16, #0x2f8
    c43c:	br	x17

000000000000c440 <__gmpfr_vasprintf@plt>:
    c440:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c444:	ldr	x17, [x16, #768]
    c448:	add	x16, x16, #0x300
    c44c:	br	x17

000000000000c450 <__gmpz_tstbit@plt>:
    c450:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c454:	ldr	x17, [x16, #776]
    c458:	add	x16, x16, #0x308
    c45c:	br	x17

000000000000c460 <__gmpz_mul@plt>:
    c460:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c464:	ldr	x17, [x16, #784]
    c468:	add	x16, x16, #0x310
    c46c:	br	x17

000000000000c470 <__gmpfr_set_uj_2exp@plt>:
    c470:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c474:	ldr	x17, [x16, #792]
    c478:	add	x16, x16, #0x318
    c47c:	br	x17

000000000000c480 <mpfr_fits_uintmax_p@plt>:
    c480:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c484:	ldr	x17, [x16, #800]
    c488:	add	x16, x16, #0x320
    c48c:	br	x17

000000000000c490 <mpfr_sincos_fast@plt>:
    c490:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c494:	ldr	x17, [x16, #808]
    c498:	add	x16, x16, #0x328
    c49c:	br	x17

000000000000c4a0 <mpfr_z_sub@plt>:
    c4a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c4a4:	ldr	x17, [x16, #816]
    c4a8:	add	x16, x16, #0x330
    c4ac:	br	x17

000000000000c4b0 <__gmpz_tdiv_q_ui@plt>:
    c4b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c4b4:	ldr	x17, [x16, #824]
    c4b8:	add	x16, x16, #0x338
    c4bc:	br	x17

000000000000c4c0 <__gmp_vasprintf@plt>:
    c4c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c4c4:	ldr	x17, [x16, #832]
    c4c8:	add	x16, x16, #0x340
    c4cc:	br	x17

000000000000c4d0 <mpfr_sub_si@plt>:
    c4d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c4d4:	ldr	x17, [x16, #840]
    c4d8:	add	x16, x16, #0x348
    c4dc:	br	x17

000000000000c4e0 <__gmpz_neg@plt>:
    c4e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c4e4:	ldr	x17, [x16, #848]
    c4e8:	add	x16, x16, #0x350
    c4ec:	br	x17

000000000000c4f0 <mpfr_clear@plt>:
    c4f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c4f4:	ldr	x17, [x16, #856]
    c4f8:	add	x16, x16, #0x358
    c4fc:	br	x17

000000000000c500 <__gmpz_perfect_square_p@plt>:
    c500:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c504:	ldr	x17, [x16, #864]
    c508:	add	x16, x16, #0x360
    c50c:	br	x17

000000000000c510 <__gmpfr_set_sj@plt>:
    c510:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c514:	ldr	x17, [x16, #872]
    c518:	add	x16, x16, #0x368
    c51c:	br	x17

000000000000c520 <mpfr_log@plt>:
    c520:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c524:	ldr	x17, [x16, #880]
    c528:	add	x16, x16, #0x370
    c52c:	br	x17

000000000000c530 <mpfr_lgamma@plt>:
    c530:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c534:	ldr	x17, [x16, #888]
    c538:	add	x16, x16, #0x378
    c53c:	br	x17

000000000000c540 <__gmpfr_cuberoot@plt>:
    c540:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c544:	ldr	x17, [x16, #896]
    c548:	add	x16, x16, #0x380
    c54c:	br	x17

000000000000c550 <__gmp_asprintf@plt>:
    c550:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c554:	ldr	x17, [x16, #904]
    c558:	add	x16, x16, #0x388
    c55c:	br	x17

000000000000c560 <mpfr_setmax@plt>:
    c560:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c564:	ldr	x17, [x16, #912]
    c568:	add	x16, x16, #0x390
    c56c:	br	x17

000000000000c570 <__gmpz_swap@plt>:
    c570:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c574:	ldr	x17, [x16, #920]
    c578:	add	x16, x16, #0x398
    c57c:	br	x17

000000000000c580 <mpfr_sub1sp@plt>:
    c580:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c584:	ldr	x17, [x16, #928]
    c588:	add	x16, x16, #0x3a0
    c58c:	br	x17

000000000000c590 <__gmpz_mul_ui@plt>:
    c590:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c594:	ldr	x17, [x16, #936]
    c598:	add	x16, x16, #0x3a8
    c59c:	br	x17

000000000000c5a0 <__gmpz_size@plt>:
    c5a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c5a4:	ldr	x17, [x16, #944]
    c5a8:	add	x16, x16, #0x3b0
    c5ac:	br	x17

000000000000c5b0 <memset@plt>:
    c5b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c5b4:	ldr	x17, [x16, #952]
    c5b8:	add	x16, x16, #0x3b8
    c5bc:	br	x17

000000000000c5c0 <mpfr_nextabove@plt>:
    c5c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c5c4:	ldr	x17, [x16, #960]
    c5c8:	add	x16, x16, #0x3c0
    c5cc:	br	x17

000000000000c5d0 <__gmpz_fdiv_q_2exp@plt>:
    c5d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c5d4:	ldr	x17, [x16, #968]
    c5d8:	add	x16, x16, #0x3c8
    c5dc:	br	x17

000000000000c5e0 <mpfr_divhigh_n@plt>:
    c5e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c5e4:	ldr	x17, [x16, #976]
    c5e8:	add	x16, x16, #0x3d0
    c5ec:	br	x17

000000000000c5f0 <mpfr_random_deviate_init@plt>:
    c5f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c5f4:	ldr	x17, [x16, #984]
    c5f8:	add	x16, x16, #0x3d8
    c5fc:	br	x17

000000000000c600 <mpfr_integer_p@plt>:
    c600:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c604:	ldr	x17, [x16, #992]
    c608:	add	x16, x16, #0x3e0
    c60c:	br	x17

000000000000c610 <mpfr_mpz_clear@plt>:
    c610:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c614:	ldr	x17, [x16, #1000]
    c618:	add	x16, x16, #0x3e8
    c61c:	br	x17

000000000000c620 <__gmpf_set_ui@plt>:
    c620:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c624:	ldr	x17, [x16, #1008]
    c628:	add	x16, x16, #0x3f0
    c62c:	br	x17

000000000000c630 <mpfr_get_si@plt>:
    c630:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c634:	ldr	x17, [x16, #1016]
    c638:	add	x16, x16, #0x3f8
    c63c:	br	x17

000000000000c640 <mpfr_add@plt>:
    c640:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c644:	ldr	x17, [x16, #1024]
    c648:	add	x16, x16, #0x400
    c64c:	br	x17

000000000000c650 <mpfr_clears@plt>:
    c650:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c654:	ldr	x17, [x16, #1032]
    c658:	add	x16, x16, #0x408
    c65c:	br	x17

000000000000c660 <mpfr_reallocate_func@plt>:
    c660:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c664:	ldr	x17, [x16, #1040]
    c668:	add	x16, x16, #0x410
    c66c:	br	x17

000000000000c670 <mpfr_log2@plt>:
    c670:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c674:	ldr	x17, [x16, #1048]
    c678:	add	x16, x16, #0x418
    c67c:	br	x17

000000000000c680 <mpfr_erf@plt>:
    c680:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c684:	ldr	x17, [x16, #1056]
    c688:	add	x16, x16, #0x420
    c68c:	br	x17

000000000000c690 <mpfr_set@plt>:
    c690:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c694:	ldr	x17, [x16, #1064]
    c698:	add	x16, x16, #0x428
    c69c:	br	x17

000000000000c6a0 <__gmpz_mul_2exp@plt>:
    c6a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c6a4:	ldr	x17, [x16, #1072]
    c6a8:	add	x16, x16, #0x430
    c6ac:	br	x17

000000000000c6b0 <mpfr_floor@plt>:
    c6b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c6b4:	ldr	x17, [x16, #1080]
    c6b8:	add	x16, x16, #0x438
    c6bc:	br	x17

000000000000c6c0 <mpfr_round@plt>:
    c6c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c6c4:	ldr	x17, [x16, #1088]
    c6c8:	add	x16, x16, #0x440
    c6cc:	br	x17

000000000000c6d0 <mpfr_free_pool@plt>:
    c6d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c6d4:	ldr	x17, [x16, #1096]
    c6d8:	add	x16, x16, #0x448
    c6dc:	br	x17

000000000000c6e0 <mpfr_set_z@plt>:
    c6e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c6e4:	ldr	x17, [x16, #1104]
    c6e8:	add	x16, x16, #0x450
    c6ec:	br	x17

000000000000c6f0 <__gmpz_get_ui@plt>:
    c6f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c6f4:	ldr	x17, [x16, #1112]
    c6f8:	add	x16, x16, #0x458
    c6fc:	br	x17

000000000000c700 <mpfr_fma@plt>:
    c700:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c704:	ldr	x17, [x16, #1120]
    c708:	add	x16, x16, #0x460
    c70c:	br	x17

000000000000c710 <mpfr_add_ui@plt>:
    c710:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c714:	ldr	x17, [x16, #1128]
    c718:	add	x16, x16, #0x468
    c71c:	br	x17

000000000000c720 <mpfr_clear_flags@plt>:
    c720:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c724:	ldr	x17, [x16, #1136]
    c728:	add	x16, x16, #0x470
    c72c:	br	x17

000000000000c730 <mpfr_roundeven@plt>:
    c730:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c734:	ldr	x17, [x16, #1144]
    c738:	add	x16, x16, #0x478
    c73c:	br	x17

000000000000c740 <__gmpn_add@plt>:
    c740:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c744:	ldr	x17, [x16, #1152]
    c748:	add	x16, x16, #0x480
    c74c:	br	x17

000000000000c750 <__gmpz_addmul@plt>:
    c750:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c754:	ldr	x17, [x16, #1160]
    c758:	add	x16, x16, #0x488
    c75c:	br	x17

000000000000c760 <getc@plt>:
    c760:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c764:	ldr	x17, [x16, #1168]
    c768:	add	x16, x16, #0x490
    c76c:	br	x17

000000000000c770 <mpfr_setmin@plt>:
    c770:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c774:	ldr	x17, [x16, #1176]
    c778:	add	x16, x16, #0x498
    c77c:	br	x17

000000000000c780 <mpfr_mul_2ui@plt>:
    c780:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c784:	ldr	x17, [x16, #1184]
    c788:	add	x16, x16, #0x4a0
    c78c:	br	x17

000000000000c790 <__gmp_urandomm_ui@plt>:
    c790:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c794:	ldr	x17, [x16, #1192]
    c798:	add	x16, x16, #0x4a8
    c79c:	br	x17

000000000000c7a0 <__gmpz_root@plt>:
    c7a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c7a4:	ldr	x17, [x16, #1200]
    c7a8:	add	x16, x16, #0x4b0
    c7ac:	br	x17

000000000000c7b0 <mpfr_ui_div@plt>:
    c7b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c7b4:	ldr	x17, [x16, #1208]
    c7b8:	add	x16, x16, #0x4b8
    c7bc:	br	x17

000000000000c7c0 <mpfr_rint@plt>:
    c7c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c7c4:	ldr	x17, [x16, #1216]
    c7c8:	add	x16, x16, #0x4c0
    c7cc:	br	x17

000000000000c7d0 <mpfr_random_deviate_tstbit@plt>:
    c7d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c7d4:	ldr	x17, [x16, #1224]
    c7d8:	add	x16, x16, #0x4c8
    c7dc:	br	x17

000000000000c7e0 <mpfr_sinh@plt>:
    c7e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c7e4:	ldr	x17, [x16, #1232]
    c7e8:	add	x16, x16, #0x4d0
    c7ec:	br	x17

000000000000c7f0 <__gmpz_pow_ui@plt>:
    c7f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c7f4:	ldr	x17, [x16, #1240]
    c7f8:	add	x16, x16, #0x4d8
    c7fc:	br	x17

000000000000c800 <mpfr_set_str_binary@plt>:
    c800:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c804:	ldr	x17, [x16, #1248]
    c808:	add	x16, x16, #0x4e0
    c80c:	br	x17

000000000000c810 <mpfr_can_round_raw@plt>:
    c810:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c814:	ldr	x17, [x16, #1256]
    c818:	add	x16, x16, #0x4e8
    c81c:	br	x17

000000000000c820 <__gmpz_add_ui@plt>:
    c820:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c824:	ldr	x17, [x16, #1264]
    c828:	add	x16, x16, #0x4f0
    c82c:	br	x17

000000000000c830 <mpfr_round_p@plt>:
    c830:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c834:	ldr	x17, [x16, #1272]
    c838:	add	x16, x16, #0x4f8
    c83c:	br	x17

000000000000c840 <mpfr_cache@plt>:
    c840:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c844:	ldr	x17, [x16, #1280]
    c848:	add	x16, x16, #0x500
    c84c:	br	x17

000000000000c850 <__gmon_start__@plt>:
    c850:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c854:	ldr	x17, [x16, #1288]
    c858:	add	x16, x16, #0x508
    c85c:	br	x17

000000000000c860 <mpfr_add_d@plt>:
    c860:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c864:	ldr	x17, [x16, #1296]
    c868:	add	x16, x16, #0x510
    c86c:	br	x17

000000000000c870 <__gmpn_sqr@plt>:
    c870:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c874:	ldr	x17, [x16, #1304]
    c878:	add	x16, x16, #0x518
    c87c:	br	x17

000000000000c880 <mpfr_underflow@plt>:
    c880:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c884:	ldr	x17, [x16, #1312]
    c888:	add	x16, x16, #0x520
    c88c:	br	x17

000000000000c890 <mpfr_cmp_si_2exp@plt>:
    c890:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c894:	ldr	x17, [x16, #1320]
    c898:	add	x16, x16, #0x528
    c89c:	br	x17

000000000000c8a0 <abort@plt>:
    c8a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c8a4:	ldr	x17, [x16, #1328]
    c8a8:	add	x16, x16, #0x530
    c8ac:	br	x17

000000000000c8b0 <mpfr_trunc@plt>:
    c8b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c8b4:	ldr	x17, [x16, #1336]
    c8b8:	add	x16, x16, #0x538
    c8bc:	br	x17

000000000000c8c0 <mpfr_sqr@plt>:
    c8c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c8c4:	ldr	x17, [x16, #1344]
    c8c8:	add	x16, x16, #0x540
    c8cc:	br	x17

000000000000c8d0 <mpfr_tmp_free@plt>:
    c8d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c8d4:	ldr	x17, [x16, #1352]
    c8d8:	add	x16, x16, #0x548
    c8dc:	br	x17

000000000000c8e0 <mpfr_div_2si@plt>:
    c8e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c8e4:	ldr	x17, [x16, #1360]
    c8e8:	add	x16, x16, #0x550
    c8ec:	br	x17

000000000000c8f0 <__gmpn_sub_1@plt>:
    c8f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c8f4:	ldr	x17, [x16, #1368]
    c8f8:	add	x16, x16, #0x558
    c8fc:	br	x17

000000000000c900 <mpfr_cos@plt>:
    c900:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c904:	ldr	x17, [x16, #1376]
    c908:	add	x16, x16, #0x560
    c90c:	br	x17

000000000000c910 <__gmpz_realloc2@plt>:
    c910:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c914:	ldr	x17, [x16, #1384]
    c918:	add	x16, x16, #0x568
    c91c:	br	x17

000000000000c920 <mpfr_sin@plt>:
    c920:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c924:	ldr	x17, [x16, #1392]
    c928:	add	x16, x16, #0x570
    c92c:	br	x17

000000000000c930 <mpfr_nexttozero@plt>:
    c930:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c934:	ldr	x17, [x16, #1400]
    c938:	add	x16, x16, #0x578
    c93c:	br	x17

000000000000c940 <__gmpn_mul_n@plt>:
    c940:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c944:	ldr	x17, [x16, #1408]
    c948:	add	x16, x16, #0x580
    c94c:	br	x17

000000000000c950 <mpfr_add_z@plt>:
    c950:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c954:	ldr	x17, [x16, #1416]
    c958:	add	x16, x16, #0x588
    c95c:	br	x17

000000000000c960 <mpfr_sqrhigh_n@plt>:
    c960:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c964:	ldr	x17, [x16, #1424]
    c968:	add	x16, x16, #0x590
    c96c:	br	x17

000000000000c970 <mpfr_swap@plt>:
    c970:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c974:	ldr	x17, [x16, #1432]
    c978:	add	x16, x16, #0x598
    c97c:	br	x17

000000000000c980 <__gmpz_scan0@plt>:
    c980:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c984:	ldr	x17, [x16, #1440]
    c988:	add	x16, x16, #0x5a0
    c98c:	br	x17

000000000000c990 <__gmpn_submul_1@plt>:
    c990:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c994:	ldr	x17, [x16, #1448]
    c998:	add	x16, x16, #0x5a8
    c99c:	br	x17

000000000000c9a0 <mpfr_mul_z@plt>:
    c9a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c9a4:	ldr	x17, [x16, #1456]
    c9a8:	add	x16, x16, #0x5b0
    c9ac:	br	x17

000000000000c9b0 <__gmpz_ui_pow_ui@plt>:
    c9b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c9b4:	ldr	x17, [x16, #1464]
    c9b8:	add	x16, x16, #0x5b8
    c9bc:	br	x17

000000000000c9c0 <mpfr_set_z_2exp@plt>:
    c9c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c9c4:	ldr	x17, [x16, #1472]
    c9c8:	add	x16, x16, #0x5c0
    c9cc:	br	x17

000000000000c9d0 <mpfr_get_str@plt>:
    c9d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c9d4:	ldr	x17, [x16, #1480]
    c9d8:	add	x16, x16, #0x5c8
    c9dc:	br	x17

000000000000c9e0 <mpfr_remquo@plt>:
    c9e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c9e4:	ldr	x17, [x16, #1488]
    c9e8:	add	x16, x16, #0x5d0
    c9ec:	br	x17

000000000000c9f0 <__gmpn_copyi@plt>:
    c9f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    c9f4:	ldr	x17, [x16, #1496]
    c9f8:	add	x16, x16, #0x5d8
    c9fc:	br	x17

000000000000ca00 <mpfr_sub_ui@plt>:
    ca00:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca04:	ldr	x17, [x16, #1504]
    ca08:	add	x16, x16, #0x5e0
    ca0c:	br	x17

000000000000ca10 <mpfr_round_near_x@plt>:
    ca10:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca14:	ldr	x17, [x16, #1512]
    ca18:	add	x16, x16, #0x5e8
    ca1c:	br	x17

000000000000ca20 <__gmp_fprintf@plt>:
    ca20:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca24:	ldr	x17, [x16, #1520]
    ca28:	add	x16, x16, #0x5f0
    ca2c:	br	x17

000000000000ca30 <__gmpq_set_ui@plt>:
    ca30:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca34:	ldr	x17, [x16, #1528]
    ca38:	add	x16, x16, #0x5f8
    ca3c:	br	x17

000000000000ca40 <__gmpz_divexact_ui@plt>:
    ca40:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca44:	ldr	x17, [x16, #1536]
    ca48:	add	x16, x16, #0x600
    ca4c:	br	x17

000000000000ca50 <mpfr_get_ld@plt>:
    ca50:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca54:	ldr	x17, [x16, #1544]
    ca58:	add	x16, x16, #0x608
    ca5c:	br	x17

000000000000ca60 <mpfr_random_deviate_swap@plt>:
    ca60:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca64:	ldr	x17, [x16, #1552]
    ca68:	add	x16, x16, #0x610
    ca6c:	br	x17

000000000000ca70 <__gmpn_add_n@plt>:
    ca70:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca74:	ldr	x17, [x16, #1560]
    ca78:	add	x16, x16, #0x618
    ca7c:	br	x17

000000000000ca80 <mpfr_set_inf@plt>:
    ca80:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca84:	ldr	x17, [x16, #1568]
    ca88:	add	x16, x16, #0x620
    ca8c:	br	x17

000000000000ca90 <mpfr_yn@plt>:
    ca90:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ca94:	ldr	x17, [x16, #1576]
    ca98:	add	x16, x16, #0x628
    ca9c:	br	x17

000000000000caa0 <mpfr_si_sub@plt>:
    caa0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    caa4:	ldr	x17, [x16, #1584]
    caa8:	add	x16, x16, #0x630
    caac:	br	x17

000000000000cab0 <__gmpn_get_str@plt>:
    cab0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cab4:	ldr	x17, [x16, #1592]
    cab8:	add	x16, x16, #0x638
    cabc:	br	x17

000000000000cac0 <mpfr_set_ui_2exp@plt>:
    cac0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cac4:	ldr	x17, [x16, #1600]
    cac8:	add	x16, x16, #0x640
    cacc:	br	x17

000000000000cad0 <mpfr_lngamma@plt>:
    cad0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cad4:	ldr	x17, [x16, #1608]
    cad8:	add	x16, x16, #0x648
    cadc:	br	x17

000000000000cae0 <__gmpz_fdiv_q_ui@plt>:
    cae0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cae4:	ldr	x17, [x16, #1616]
    cae8:	add	x16, x16, #0x650
    caec:	br	x17

000000000000caf0 <mpfr_div@plt>:
    caf0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    caf4:	ldr	x17, [x16, #1624]
    caf8:	add	x16, x16, #0x658
    cafc:	br	x17

000000000000cb00 <__ctype_b_loc@plt>:
    cb00:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb04:	ldr	x17, [x16, #1632]
    cb08:	add	x16, x16, #0x660
    cb0c:	br	x17

000000000000cb10 <__gmpz_clear@plt>:
    cb10:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb14:	ldr	x17, [x16, #1640]
    cb18:	add	x16, x16, #0x668
    cb1c:	br	x17

000000000000cb20 <strtol@plt>:
    cb20:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb24:	ldr	x17, [x16, #1648]
    cb28:	add	x16, x16, #0x670
    cb2c:	br	x17

000000000000cb30 <fread@plt>:
    cb30:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb34:	ldr	x17, [x16, #1656]
    cb38:	add	x16, x16, #0x678
    cb3c:	br	x17

000000000000cb40 <mpfr_nexttoinf@plt>:
    cb40:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb44:	ldr	x17, [x16, #1664]
    cb48:	add	x16, x16, #0x680
    cb4c:	br	x17

000000000000cb50 <__gmpz_mul_si@plt>:
    cb50:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb54:	ldr	x17, [x16, #1672]
    cb58:	add	x16, x16, #0x688
    cb5c:	br	x17

000000000000cb60 <mpfr_atan@plt>:
    cb60:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb64:	ldr	x17, [x16, #1680]
    cb68:	add	x16, x16, #0x690
    cb6c:	br	x17

000000000000cb70 <mpfr_set4@plt>:
    cb70:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb74:	ldr	x17, [x16, #1688]
    cb78:	add	x16, x16, #0x698
    cb7c:	br	x17

000000000000cb80 <mpfr_rootn_ui@plt>:
    cb80:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb84:	ldr	x17, [x16, #1696]
    cb88:	add	x16, x16, #0x6a0
    cb8c:	br	x17

000000000000cb90 <mpfr_set_str@plt>:
    cb90:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cb94:	ldr	x17, [x16, #1704]
    cb98:	add	x16, x16, #0x6a8
    cb9c:	br	x17

000000000000cba0 <__gmpf_neg@plt>:
    cba0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cba4:	ldr	x17, [x16, #1712]
    cba8:	add	x16, x16, #0x6b0
    cbac:	br	x17

000000000000cbb0 <mpfr_fac_ui@plt>:
    cbb0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cbb4:	ldr	x17, [x16, #1720]
    cbb8:	add	x16, x16, #0x6b8
    cbbc:	br	x17

000000000000cbc0 <mpfr_pow_general@plt>:
    cbc0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cbc4:	ldr	x17, [x16, #1728]
    cbc8:	add	x16, x16, #0x6c0
    cbcc:	br	x17

000000000000cbd0 <mpfr_log1p@plt>:
    cbd0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cbd4:	ldr	x17, [x16, #1736]
    cbd8:	add	x16, x16, #0x6c8
    cbdc:	br	x17

000000000000cbe0 <mpfr_sgn@plt>:
    cbe0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cbe4:	ldr	x17, [x16, #1744]
    cbe8:	add	x16, x16, #0x6d0
    cbec:	br	x17

000000000000cbf0 <mpfr_round_raw_4@plt>:
    cbf0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cbf4:	ldr	x17, [x16, #1752]
    cbf8:	add	x16, x16, #0x6d8
    cbfc:	br	x17

000000000000cc00 <ungetc@plt>:
    cc00:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc04:	ldr	x17, [x16, #1760]
    cc08:	add	x16, x16, #0x6e0
    cc0c:	br	x17

000000000000cc10 <__gmpz_tdiv_q_2exp@plt>:
    cc10:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc14:	ldr	x17, [x16, #1768]
    cc18:	add	x16, x16, #0x6e8
    cc1c:	br	x17

000000000000cc20 <mpfr_exp@plt>:
    cc20:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc24:	ldr	x17, [x16, #1776]
    cc28:	add	x16, x16, #0x6f0
    cc2c:	br	x17

000000000000cc30 <mpfr_round_raw_2@plt>:
    cc30:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc34:	ldr	x17, [x16, #1784]
    cc38:	add	x16, x16, #0x6f8
    cc3c:	br	x17

000000000000cc40 <__gmpz_cdiv_q@plt>:
    cc40:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc44:	ldr	x17, [x16, #1792]
    cc48:	add	x16, x16, #0x700
    cc4c:	br	x17

000000000000cc50 <__gmpn_neg@plt>:
    cc50:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc54:	ldr	x17, [x16, #1800]
    cc58:	add	x16, x16, #0x708
    cc5c:	br	x17

000000000000cc60 <mpfr_add1@plt>:
    cc60:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc64:	ldr	x17, [x16, #1808]
    cc68:	add	x16, x16, #0x710
    cc6c:	br	x17

000000000000cc70 <mpfr_fits_slong_p@plt>:
    cc70:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc74:	ldr	x17, [x16, #1816]
    cc78:	add	x16, x16, #0x718
    cc7c:	br	x17

000000000000cc80 <__gmpn_mul@plt>:
    cc80:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc84:	ldr	x17, [x16, #1824]
    cc88:	add	x16, x16, #0x720
    cc8c:	br	x17

000000000000cc90 <mpfr_gamma@plt>:
    cc90:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cc94:	ldr	x17, [x16, #1832]
    cc98:	add	x16, x16, #0x728
    cc9c:	br	x17

000000000000cca0 <__gmpn_divrem_1@plt>:
    cca0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cca4:	ldr	x17, [x16, #1840]
    cca8:	add	x16, x16, #0x730
    ccac:	br	x17

000000000000ccb0 <mpfr_powerof2_raw2@plt>:
    ccb0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ccb4:	ldr	x17, [x16, #1848]
    ccb8:	add	x16, x16, #0x738
    ccbc:	br	x17

000000000000ccc0 <mpfr_random_deviate_reset@plt>:
    ccc0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ccc4:	ldr	x17, [x16, #1856]
    ccc8:	add	x16, x16, #0x740
    cccc:	br	x17

000000000000ccd0 <mpfr_add_si@plt>:
    ccd0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ccd4:	ldr	x17, [x16, #1864]
    ccd8:	add	x16, x16, #0x748
    ccdc:	br	x17

000000000000cce0 <__gmpz_cmp_si@plt>:
    cce0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cce4:	ldr	x17, [x16, #1872]
    cce8:	add	x16, x16, #0x750
    ccec:	br	x17

000000000000ccf0 <mpfr_rand_raw@plt>:
    ccf0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ccf4:	ldr	x17, [x16, #1880]
    ccf8:	add	x16, x16, #0x758
    ccfc:	br	x17

000000000000cd00 <mpfr_div_si@plt>:
    cd00:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd04:	ldr	x17, [x16, #1888]
    cd08:	add	x16, x16, #0x760
    cd0c:	br	x17

000000000000cd10 <mpfr_bernoulli_cache@plt>:
    cd10:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd14:	ldr	x17, [x16, #1896]
    cd18:	add	x16, x16, #0x768
    cd1c:	br	x17

000000000000cd20 <mpfr_sqrt_ui@plt>:
    cd20:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd24:	ldr	x17, [x16, #1904]
    cd28:	add	x16, x16, #0x770
    cd2c:	br	x17

000000000000cd30 <mpfr_set_q@plt>:
    cd30:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd34:	ldr	x17, [x16, #1912]
    cd38:	add	x16, x16, #0x778
    cd3c:	br	x17

000000000000cd40 <__gmpn_popcount@plt>:
    cd40:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd44:	ldr	x17, [x16, #1920]
    cd48:	add	x16, x16, #0x780
    cd4c:	br	x17

000000000000cd50 <mpfr_exp_2@plt>:
    cd50:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd54:	ldr	x17, [x16, #1928]
    cd58:	add	x16, x16, #0x788
    cd5c:	br	x17

000000000000cd60 <__gmpz_submul@plt>:
    cd60:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd64:	ldr	x17, [x16, #1936]
    cd68:	add	x16, x16, #0x790
    cd6c:	br	x17

000000000000cd70 <mpfr_free_str@plt>:
    cd70:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd74:	ldr	x17, [x16, #1944]
    cd78:	add	x16, x16, #0x798
    cd7c:	br	x17

000000000000cd80 <__gmpz_mod@plt>:
    cd80:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd84:	ldr	x17, [x16, #1952]
    cd88:	add	x16, x16, #0x7a0
    cd8c:	br	x17

000000000000cd90 <mpfr_si_div@plt>:
    cd90:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cd94:	ldr	x17, [x16, #1960]
    cd98:	add	x16, x16, #0x7a8
    cd9c:	br	x17

000000000000cda0 <mpfr_beta@plt>:
    cda0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cda4:	ldr	x17, [x16, #1968]
    cda8:	add	x16, x16, #0x7b0
    cdac:	br	x17

000000000000cdb0 <fwrite@plt>:
    cdb0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cdb4:	ldr	x17, [x16, #1976]
    cdb8:	add	x16, x16, #0x7b8
    cdbc:	br	x17

000000000000cdc0 <__gmpz_cmp@plt>:
    cdc0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cdc4:	ldr	x17, [x16, #1984]
    cdc8:	add	x16, x16, #0x7c0
    cdcc:	br	x17

000000000000cdd0 <mpfr_abort_prec_max@plt>:
    cdd0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cdd4:	ldr	x17, [x16, #1992]
    cdd8:	add	x16, x16, #0x7c8
    cddc:	br	x17

000000000000cde0 <mpfr_div_2ui@plt>:
    cde0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cde4:	ldr	x17, [x16, #2000]
    cde8:	add	x16, x16, #0x7d0
    cdec:	br	x17

000000000000cdf0 <mpfr_mpz_init2@plt>:
    cdf0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cdf4:	ldr	x17, [x16, #2008]
    cdf8:	add	x16, x16, #0x7d8
    cdfc:	br	x17

000000000000ce00 <strcpy@plt>:
    ce00:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce04:	ldr	x17, [x16, #2016]
    ce08:	add	x16, x16, #0x7e0
    ce0c:	br	x17

000000000000ce10 <__gmpfr_set_sj_2exp@plt>:
    ce10:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce14:	ldr	x17, [x16, #2024]
    ce18:	add	x16, x16, #0x7e8
    ce1c:	br	x17

000000000000ce20 <mpfr_sqrt@plt>:
    ce20:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce24:	ldr	x17, [x16, #2032]
    ce28:	add	x16, x16, #0x7f0
    ce2c:	br	x17

000000000000ce30 <strncat@plt>:
    ce30:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce34:	ldr	x17, [x16, #2040]
    ce38:	add	x16, x16, #0x7f8
    ce3c:	br	x17

000000000000ce40 <__gmpfr_ceil_log2@plt>:
    ce40:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce44:	ldr	x17, [x16, #2048]
    ce48:	add	x16, x16, #0x800
    ce4c:	br	x17

000000000000ce50 <mpfr_mul_si@plt>:
    ce50:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce54:	ldr	x17, [x16, #2056]
    ce58:	add	x16, x16, #0x808
    ce5c:	br	x17

000000000000ce60 <mpfr_prec_round@plt>:
    ce60:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce64:	ldr	x17, [x16, #2064]
    ce68:	add	x16, x16, #0x810
    ce6c:	br	x17

000000000000ce70 <mpfr_ceil@plt>:
    ce70:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce74:	ldr	x17, [x16, #2072]
    ce78:	add	x16, x16, #0x818
    ce7c:	br	x17

000000000000ce80 <mpfr_min_prec@plt>:
    ce80:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce84:	ldr	x17, [x16, #2080]
    ce88:	add	x16, x16, #0x820
    ce8c:	br	x17

000000000000ce90 <mpfr_cmp3@plt>:
    ce90:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ce94:	ldr	x17, [x16, #2088]
    ce98:	add	x16, x16, #0x828
    ce9c:	br	x17

000000000000cea0 <mpfr_cmpabs@plt>:
    cea0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cea4:	ldr	x17, [x16, #2096]
    cea8:	add	x16, x16, #0x830
    ceac:	br	x17

000000000000ceb0 <__gmpz_add@plt>:
    ceb0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ceb4:	ldr	x17, [x16, #2104]
    ceb8:	add	x16, x16, #0x838
    cebc:	br	x17

000000000000cec0 <mpfr_extract@plt>:
    cec0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cec4:	ldr	x17, [x16, #2112]
    cec8:	add	x16, x16, #0x840
    cecc:	br	x17

000000000000ced0 <mpfr_eint@plt>:
    ced0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    ced4:	ldr	x17, [x16, #2120]
    ced8:	add	x16, x16, #0x848
    cedc:	br	x17

000000000000cee0 <mpfr_digamma@plt>:
    cee0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cee4:	ldr	x17, [x16, #2128]
    cee8:	add	x16, x16, #0x850
    ceec:	br	x17

000000000000cef0 <mpfr_less_p@plt>:
    cef0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cef4:	ldr	x17, [x16, #2136]
    cef8:	add	x16, x16, #0x858
    cefc:	br	x17

000000000000cf00 <mpfr_ui_pow@plt>:
    cf00:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf04:	ldr	x17, [x16, #2144]
    cf08:	add	x16, x16, #0x860
    cf0c:	br	x17

000000000000cf10 <mpfr_round_raw@plt>:
    cf10:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf14:	ldr	x17, [x16, #2152]
    cf18:	add	x16, x16, #0x868
    cf1c:	br	x17

000000000000cf20 <mpfr_random_deviate_less@plt>:
    cf20:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf24:	ldr	x17, [x16, #2160]
    cf28:	add	x16, x16, #0x870
    cf2c:	br	x17

000000000000cf30 <mpfr_ui_sub@plt>:
    cf30:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf34:	ldr	x17, [x16, #2168]
    cf38:	add	x16, x16, #0x878
    cf3c:	br	x17

000000000000cf40 <mpfr_equal_p@plt>:
    cf40:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf44:	ldr	x17, [x16, #2176]
    cf48:	add	x16, x16, #0x880
    cf4c:	br	x17

000000000000cf50 <mpfr_sub1@plt>:
    cf50:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf54:	ldr	x17, [x16, #2184]
    cf58:	add	x16, x16, #0x888
    cf5c:	br	x17

000000000000cf60 <mpfr_init2@plt>:
    cf60:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf64:	ldr	x17, [x16, #2192]
    cf68:	add	x16, x16, #0x890
    cf6c:	br	x17

000000000000cf70 <__gmpz_init2@plt>:
    cf70:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf74:	ldr	x17, [x16, #2200]
    cf78:	add	x16, x16, #0x898
    cf7c:	br	x17

000000000000cf80 <__gmpn_scan1@plt>:
    cf80:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf84:	ldr	x17, [x16, #2208]
    cf88:	add	x16, x16, #0x8a0
    cf8c:	br	x17

000000000000cf90 <__gmpn_sub@plt>:
    cf90:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cf94:	ldr	x17, [x16, #2216]
    cf98:	add	x16, x16, #0x8a8
    cf9c:	br	x17

000000000000cfa0 <mpfr_ubf_exp_less_p@plt>:
    cfa0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cfa4:	ldr	x17, [x16, #2224]
    cfa8:	add	x16, x16, #0x8b0
    cfac:	br	x17

000000000000cfb0 <mpfr_get_z_2exp@plt>:
    cfb0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cfb4:	ldr	x17, [x16, #2232]
    cfb8:	add	x16, x16, #0x8b8
    cfbc:	br	x17

000000000000cfc0 <strncpy@plt>:
    cfc0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cfc4:	ldr	x17, [x16, #2240]
    cfc8:	add	x16, x16, #0x8c0
    cfcc:	br	x17

000000000000cfd0 <mpfr_set_1_2@plt>:
    cfd0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cfd4:	ldr	x17, [x16, #2248]
    cfd8:	add	x16, x16, #0x8c8
    cfdc:	br	x17

000000000000cfe0 <__gmpq_div_2exp@plt>:
    cfe0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cfe4:	ldr	x17, [x16, #2256]
    cfe8:	add	x16, x16, #0x8d0
    cfec:	br	x17

000000000000cff0 <mpfr_ubf_diff_exp@plt>:
    cff0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    cff4:	ldr	x17, [x16, #2264]
    cff8:	add	x16, x16, #0x8d8
    cffc:	br	x17

000000000000d000 <__gmp_urandomb_ui@plt>:
    d000:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d004:	ldr	x17, [x16, #2272]
    d008:	add	x16, x16, #0x8e0
    d00c:	br	x17

000000000000d010 <__gmpz_cmp_ui@plt>:
    d010:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d014:	ldr	x17, [x16, #2280]
    d018:	add	x16, x16, #0x8e8
    d01c:	br	x17

000000000000d020 <mpfr_check_range@plt>:
    d020:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d024:	ldr	x17, [x16, #2288]
    d028:	add	x16, x16, #0x8f0
    d02c:	br	x17

000000000000d030 <mpfr_assert_fail@plt>:
    d030:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d034:	ldr	x17, [x16, #2296]
    d038:	add	x16, x16, #0x8f8
    d03c:	br	x17

000000000000d040 <__gmpz_init@plt>:
    d040:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d044:	ldr	x17, [x16, #2304]
    d048:	add	x16, x16, #0x900
    d04c:	br	x17

000000000000d050 <__gmpz_sizeinbase@plt>:
    d050:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d054:	ldr	x17, [x16, #2312]
    d058:	add	x16, x16, #0x908
    d05c:	br	x17

000000000000d060 <__gmpz_set_si@plt>:
    d060:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d064:	ldr	x17, [x16, #2320]
    d068:	add	x16, x16, #0x910
    d06c:	br	x17

000000000000d070 <mpfr_ceil_mul@plt>:
    d070:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d074:	ldr	x17, [x16, #2328]
    d078:	add	x16, x16, #0x918
    d07c:	br	x17

000000000000d080 <mpfr_number_p@plt>:
    d080:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d084:	ldr	x17, [x16, #2336]
    d088:	add	x16, x16, #0x920
    d08c:	br	x17

000000000000d090 <mpfr_scale2@plt>:
    d090:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d094:	ldr	x17, [x16, #2344]
    d098:	add	x16, x16, #0x928
    d09c:	br	x17

000000000000d0a0 <mpfr_add1sp@plt>:
    d0a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d0a4:	ldr	x17, [x16, #2352]
    d0a8:	add	x16, x16, #0x930
    d0ac:	br	x17

000000000000d0b0 <__gmpz_powm_ui@plt>:
    d0b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d0b4:	ldr	x17, [x16, #2360]
    d0b8:	add	x16, x16, #0x938
    d0bc:	br	x17

000000000000d0c0 <mpfr_get_d_2exp@plt>:
    d0c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d0c4:	ldr	x17, [x16, #2368]
    d0c8:	add	x16, x16, #0x940
    d0cc:	br	x17

000000000000d0d0 <mpfr_mpn_exp@plt>:
    d0d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d0d4:	ldr	x17, [x16, #2376]
    d0d8:	add	x16, x16, #0x948
    d0dc:	br	x17

000000000000d0e0 <printf@plt>:
    d0e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d0e4:	ldr	x17, [x16, #2384]
    d0e8:	add	x16, x16, #0x950
    d0ec:	br	x17

000000000000d0f0 <__errno_location@plt>:
    d0f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d0f4:	ldr	x17, [x16, #2392]
    d0f8:	add	x16, x16, #0x958
    d0fc:	br	x17

000000000000d100 <mpfr_jn@plt>:
    d100:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d104:	ldr	x17, [x16, #2400]
    d108:	add	x16, x16, #0x960
    d10c:	br	x17

000000000000d110 <putchar@plt>:
    d110:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d114:	ldr	x17, [x16, #2408]
    d118:	add	x16, x16, #0x968
    d11c:	br	x17

000000000000d120 <mpfr_free_func@plt>:
    d120:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d124:	ldr	x17, [x16, #2416]
    d128:	add	x16, x16, #0x970
    d12c:	br	x17

000000000000d130 <__gmpz_addmul_ui@plt>:
    d130:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d134:	ldr	x17, [x16, #2424]
    d138:	add	x16, x16, #0x978
    d13c:	br	x17

000000000000d140 <mpfr_sin_cos@plt>:
    d140:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d144:	ldr	x17, [x16, #2432]
    d148:	add	x16, x16, #0x980
    d14c:	br	x17

000000000000d150 <mpfr_inits2@plt>:
    d150:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d154:	ldr	x17, [x16, #2440]
    d158:	add	x16, x16, #0x988
    d15c:	br	x17

000000000000d160 <mpfr_div_ui@plt>:
    d160:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d164:	ldr	x17, [x16, #2448]
    d168:	add	x16, x16, #0x990
    d16c:	br	x17

000000000000d170 <mpfr_fmodquo@plt>:
    d170:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d174:	ldr	x17, [x16, #2456]
    d178:	add	x16, x16, #0x998
    d17c:	br	x17

000000000000d180 <mpfr_div_z@plt>:
    d180:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d184:	ldr	x17, [x16, #2464]
    d188:	add	x16, x16, #0x9a0
    d18c:	br	x17

000000000000d190 <mpfr_exp2@plt>:
    d190:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d194:	ldr	x17, [x16, #2472]
    d198:	add	x16, x16, #0x9a8
    d19c:	br	x17

000000000000d1a0 <mpfr_odd_p@plt>:
    d1a0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d1a4:	ldr	x17, [x16, #2480]
    d1a8:	add	x16, x16, #0x9b0
    d1ac:	br	x17

000000000000d1b0 <__gmpn_divrem@plt>:
    d1b0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d1b4:	ldr	x17, [x16, #2488]
    d1b8:	add	x16, x16, #0x9b8
    d1bc:	br	x17

000000000000d1c0 <__gmpn_sqrtrem@plt>:
    d1c0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d1c4:	ldr	x17, [x16, #2496]
    d1c8:	add	x16, x16, #0x9c0
    d1cc:	br	x17

000000000000d1d0 <__gmpn_addmul_1@plt>:
    d1d0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d1d4:	ldr	x17, [x16, #2504]
    d1d8:	add	x16, x16, #0x9c8
    d1dc:	br	x17

000000000000d1e0 <fprintf@plt>:
    d1e0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d1e4:	ldr	x17, [x16, #2512]
    d1e8:	add	x16, x16, #0x9d0
    d1ec:	br	x17

000000000000d1f0 <mpfr_allocate_func@plt>:
    d1f0:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d1f4:	ldr	x17, [x16, #2520]
    d1f8:	add	x16, x16, #0x9d8
    d1fc:	br	x17

000000000000d200 <__gmpz_urandomb@plt>:
    d200:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d204:	ldr	x17, [x16, #2528]
    d208:	add	x16, x16, #0x9e0
    d20c:	br	x17

000000000000d210 <mpfr_remainder@plt>:
    d210:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d214:	ldr	x17, [x16, #2536]
    d218:	add	x16, x16, #0x9e8
    d21c:	br	x17

000000000000d220 <mpfr_cbrt@plt>:
    d220:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d224:	ldr	x17, [x16, #2544]
    d228:	add	x16, x16, #0x9f0
    d22c:	br	x17

000000000000d230 <__gmpn_mul_1@plt>:
    d230:	adrp	x16, 73000 <mpfr_agm@@Base+0x64090>
    d234:	ldr	x17, [x16, #2552]
    d238:	add	x16, x16, #0x9f8
    d23c:	br	x17

000000000000d240 <__gmpfr_emin@plt>:
    d240:	stp	x2, x3, [sp, #-16]!
    d244:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
    d248:	adrp	x3, 72000 <__gmpfr_l2b@@Base+0x2f0>
    d24c:	ldr	x2, [x2, #4064]

000000000000d250 <__gmpfr_emax@plt>:
    d250:	add	x3, x3, #0xfe8
    d254:	br	x2
    d258:	nop
    d25c:	nop

Disassembly of section .text:

000000000000d260 <mpfr_get_emin@@Base-0xd4>:
    d260:	adrp	x0, 72000 <__gmpfr_l2b@@Base+0x2f0>
    d264:	ldr	x0, [x0, #4024]
    d268:	cbz	x0, d270 <__gmpfr_cache_const_log2@plt>
    d26c:	b	c850 <__gmon_start__@plt>
    d270:	ret
    d274:	nop
    d278:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d27c:	add	x0, x0, #0xb48
    d280:	adrp	x1, 73000 <mpfr_agm@@Base+0x64090>
    d284:	add	x1, x1, #0xb48
    d288:	cmp	x1, x0
    d28c:	b.eq	d2a4 <*ABS*+0x110@plt+0x4>  // b.none
    d290:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
    d294:	ldr	x1, [x1, #3936]
    d298:	cbz	x1, d2a4 <*ABS*+0x110@plt+0x4>
    d29c:	mov	x16, x1
    d2a0:	br	x16
    d2a4:	ret
    d2a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d2ac:	add	x0, x0, #0xb48
    d2b0:	adrp	x1, 73000 <mpfr_agm@@Base+0x64090>
    d2b4:	add	x1, x1, #0xb48
    d2b8:	sub	x1, x1, x0
    d2bc:	lsr	x2, x1, #63
    d2c0:	add	x1, x2, x1, asr #3
    d2c4:	cmp	xzr, x1, asr #1
    d2c8:	asr	x1, x1, #1
    d2cc:	b.eq	d2e4 <__gmpfr_default_rounding_mode@plt+0x4>  // b.none
    d2d0:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
    d2d4:	ldr	x2, [x2, #4056]
    d2d8:	cbz	x2, d2e4 <__gmpfr_default_rounding_mode@plt+0x4>
    d2dc:	mov	x16, x2
    d2e0:	br	x16
    d2e4:	ret
    d2e8:	stp	x29, x30, [sp, #-32]!
    d2ec:	mov	x29, sp
    d2f0:	str	x19, [sp, #16]
    d2f4:	adrp	x19, 73000 <mpfr_agm@@Base+0x64090>
    d2f8:	ldrb	w0, [x19, #2888]
    d2fc:	cbnz	w0, d324 <__gmpfr_cache_const_catalan@plt+0x4>
    d300:	adrp	x0, 72000 <__gmpfr_l2b@@Base+0x2f0>
    d304:	ldr	x0, [x0, #3952]
    d308:	cbz	x0, d318 <__gmpfr_cache_const_euler@plt+0x8>
    d30c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d310:	ldr	x0, [x0, #2880]
    d314:	bl	c160 <__cxa_finalize@plt>
    d318:	bl	d278 <__gmpfr_cache_const_log2@plt+0x8>
    d31c:	mov	w0, #0x1                   	// #1
    d320:	strb	w0, [x19, #2888]
    d324:	ldr	x19, [sp, #16]
    d328:	ldp	x29, x30, [sp], #32
    d32c:	ret
    d330:	b	d2a8 <*ABS*+0x110@plt+0x8>

000000000000d334 <mpfr_get_emin@@Base>:
    d334:	stp	x29, x30, [sp, #-16]!
    d338:	mov	x29, sp
    d33c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d340:	ldr	x1, [x0, #2736]
    d344:	add	x0, x0, #0xab0
    d348:	blr	x1
    d34c:	mrs	x8, tpidr_el0
    d350:	ldr	x0, [x8, x0]
    d354:	ldp	x29, x30, [sp], #16
    d358:	ret

000000000000d35c <mpfr_set_emin@@Base>:
    d35c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    d360:	add	x9, x0, x9
    d364:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
    d368:	cmp	x9, x10
    d36c:	b.hi	d3a4 <*ABS*+0x168@plt+0x34>  // b.pmore
    d370:	stp	x29, x30, [sp, #-16]!
    d374:	mov	x29, sp
    d378:	mov	x8, x0
    d37c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d380:	ldr	x1, [x0, #2736]
    d384:	add	x0, x0, #0xab0
    d388:	blr	x1
    d38c:	mov	x9, x0
    d390:	mrs	x10, tpidr_el0
    d394:	mov	w0, wzr
    d398:	str	x8, [x10, x9]
    d39c:	ldp	x29, x30, [sp], #16
    d3a0:	ret
    d3a4:	mov	w0, #0x1                   	// #1
    d3a8:	ret

000000000000d3ac <mpfr_get_emin_min@@Base>:
    d3ac:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    d3b0:	ret

000000000000d3b4 <mpfr_get_emin_max@@Base>:
    d3b4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    d3b8:	ret

000000000000d3bc <mpfr_get_emax@@Base>:
    d3bc:	stp	x29, x30, [sp, #-16]!
    d3c0:	mov	x29, sp
    d3c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d3c8:	ldr	x1, [x0, #2768]
    d3cc:	add	x0, x0, #0xad0
    d3d0:	blr	x1
    d3d4:	mrs	x8, tpidr_el0
    d3d8:	ldr	x0, [x8, x0]
    d3dc:	ldp	x29, x30, [sp], #16
    d3e0:	ret

000000000000d3e4 <mpfr_set_emax@@Base>:
    d3e4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    d3e8:	add	x9, x0, x9
    d3ec:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
    d3f0:	cmp	x9, x10
    d3f4:	b.hi	d42c <mpfr_set_emax@@Base+0x48>  // b.pmore
    d3f8:	stp	x29, x30, [sp, #-16]!
    d3fc:	mov	x29, sp
    d400:	mov	x8, x0
    d404:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d408:	ldr	x1, [x0, #2768]
    d40c:	add	x0, x0, #0xad0
    d410:	blr	x1
    d414:	mov	x9, x0
    d418:	mrs	x10, tpidr_el0
    d41c:	mov	w0, wzr
    d420:	str	x8, [x10, x9]
    d424:	ldp	x29, x30, [sp], #16
    d428:	ret
    d42c:	mov	w0, #0x1                   	// #1
    d430:	ret

000000000000d434 <mpfr_get_emax_min@@Base>:
    d434:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    d438:	ret

000000000000d43c <mpfr_get_emax_max@@Base>:
    d43c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    d440:	ret

000000000000d444 <mpfr_flags_clear@@Base>:
    d444:	stp	x29, x30, [sp, #-16]!
    d448:	mov	x29, sp
    d44c:	eor	w8, w0, #0x3f
    d450:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d454:	ldr	x1, [x0, #2800]
    d458:	add	x0, x0, #0xaf0
    d45c:	blr	x1
    d460:	mrs	x9, tpidr_el0
    d464:	ldr	w10, [x9, x0]
    d468:	and	w8, w10, w8
    d46c:	str	w8, [x9, x0]
    d470:	ldp	x29, x30, [sp], #16
    d474:	ret

000000000000d478 <mpfr_flags_set@@Base>:
    d478:	stp	x29, x30, [sp, #-16]!
    d47c:	mov	x29, sp
    d480:	mov	w8, w0
    d484:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d488:	ldr	x1, [x0, #2800]
    d48c:	add	x0, x0, #0xaf0
    d490:	blr	x1
    d494:	mrs	x9, tpidr_el0
    d498:	ldr	w10, [x9, x0]
    d49c:	orr	w8, w10, w8
    d4a0:	str	w8, [x9, x0]
    d4a4:	ldp	x29, x30, [sp], #16
    d4a8:	ret

000000000000d4ac <mpfr_flags_test@@Base>:
    d4ac:	stp	x29, x30, [sp, #-16]!
    d4b0:	mov	x29, sp
    d4b4:	mov	w8, w0
    d4b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d4bc:	ldr	x1, [x0, #2800]
    d4c0:	add	x0, x0, #0xaf0
    d4c4:	blr	x1
    d4c8:	mrs	x9, tpidr_el0
    d4cc:	ldr	w9, [x9, x0]
    d4d0:	and	w0, w9, w8
    d4d4:	ldp	x29, x30, [sp], #16
    d4d8:	ret

000000000000d4dc <mpfr_flags_save@@Base>:
    d4dc:	stp	x29, x30, [sp, #-16]!
    d4e0:	mov	x29, sp
    d4e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d4e8:	ldr	x1, [x0, #2800]
    d4ec:	add	x0, x0, #0xaf0
    d4f0:	blr	x1
    d4f4:	mrs	x8, tpidr_el0
    d4f8:	ldr	w0, [x8, x0]
    d4fc:	ldp	x29, x30, [sp], #16
    d500:	ret

000000000000d504 <mpfr_flags_restore@@Base>:
    d504:	stp	x29, x30, [sp, #-16]!
    d508:	mov	x29, sp
    d50c:	mov	w8, w1
    d510:	mov	w9, w0
    d514:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d518:	ldr	x1, [x0, #2800]
    d51c:	add	x0, x0, #0xaf0
    d520:	blr	x1
    d524:	mrs	x10, tpidr_el0
    d528:	ldr	w11, [x10, x0]
    d52c:	eor	w12, w8, #0x3f
    d530:	and	w8, w8, w9
    d534:	and	w11, w11, w12
    d538:	orr	w8, w11, w8
    d53c:	str	w8, [x10, x0]
    d540:	ldp	x29, x30, [sp], #16
    d544:	ret

000000000000d548 <mpfr_clear_flags@@Base>:
    d548:	stp	x29, x30, [sp, #-16]!
    d54c:	mov	x29, sp
    d550:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d554:	ldr	x1, [x0, #2800]
    d558:	add	x0, x0, #0xaf0
    d55c:	blr	x1
    d560:	mrs	x8, tpidr_el0
    d564:	str	wzr, [x8, x0]
    d568:	ldp	x29, x30, [sp], #16
    d56c:	ret

000000000000d570 <mpfr_clear_underflow@@Base>:
    d570:	stp	x29, x30, [sp, #-16]!
    d574:	mov	x29, sp
    d578:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d57c:	ldr	x1, [x0, #2800]
    d580:	add	x0, x0, #0xaf0
    d584:	blr	x1
    d588:	mrs	x8, tpidr_el0
    d58c:	ldr	w9, [x8, x0]
    d590:	and	w9, w9, #0x3e
    d594:	str	w9, [x8, x0]
    d598:	ldp	x29, x30, [sp], #16
    d59c:	ret

000000000000d5a0 <mpfr_clear_overflow@@Base>:
    d5a0:	stp	x29, x30, [sp, #-16]!
    d5a4:	mov	x29, sp
    d5a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d5ac:	ldr	x1, [x0, #2800]
    d5b0:	add	x0, x0, #0xaf0
    d5b4:	blr	x1
    d5b8:	mrs	x8, tpidr_el0
    d5bc:	ldr	w9, [x8, x0]
    d5c0:	mov	w10, #0x3d                  	// #61
    d5c4:	and	w9, w9, w10
    d5c8:	str	w9, [x8, x0]
    d5cc:	ldp	x29, x30, [sp], #16
    d5d0:	ret

000000000000d5d4 <mpfr_clear_divby0@@Base>:
    d5d4:	stp	x29, x30, [sp, #-16]!
    d5d8:	mov	x29, sp
    d5dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d5e0:	ldr	x1, [x0, #2800]
    d5e4:	add	x0, x0, #0xaf0
    d5e8:	blr	x1
    d5ec:	mrs	x8, tpidr_el0
    d5f0:	ldr	w9, [x8, x0]
    d5f4:	and	w9, w9, #0x1f
    d5f8:	str	w9, [x8, x0]
    d5fc:	ldp	x29, x30, [sp], #16
    d600:	ret

000000000000d604 <mpfr_clear_nanflag@@Base>:
    d604:	stp	x29, x30, [sp, #-16]!
    d608:	mov	x29, sp
    d60c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d610:	ldr	x1, [x0, #2800]
    d614:	add	x0, x0, #0xaf0
    d618:	blr	x1
    d61c:	mrs	x8, tpidr_el0
    d620:	ldr	w9, [x8, x0]
    d624:	mov	w10, #0x3b                  	// #59
    d628:	and	w9, w9, w10
    d62c:	str	w9, [x8, x0]
    d630:	ldp	x29, x30, [sp], #16
    d634:	ret

000000000000d638 <mpfr_clear_inexflag@@Base>:
    d638:	stp	x29, x30, [sp, #-16]!
    d63c:	mov	x29, sp
    d640:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d644:	ldr	x1, [x0, #2800]
    d648:	add	x0, x0, #0xaf0
    d64c:	blr	x1
    d650:	mrs	x8, tpidr_el0
    d654:	ldr	w9, [x8, x0]
    d658:	mov	w10, #0x37                  	// #55
    d65c:	and	w9, w9, w10
    d660:	str	w9, [x8, x0]
    d664:	ldp	x29, x30, [sp], #16
    d668:	ret

000000000000d66c <mpfr_clear_erangeflag@@Base>:
    d66c:	stp	x29, x30, [sp, #-16]!
    d670:	mov	x29, sp
    d674:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d678:	ldr	x1, [x0, #2800]
    d67c:	add	x0, x0, #0xaf0
    d680:	blr	x1
    d684:	mrs	x8, tpidr_el0
    d688:	ldr	w9, [x8, x0]
    d68c:	mov	w10, #0x2f                  	// #47
    d690:	and	w9, w9, w10
    d694:	str	w9, [x8, x0]
    d698:	ldp	x29, x30, [sp], #16
    d69c:	ret

000000000000d6a0 <mpfr_set_underflow@@Base>:
    d6a0:	stp	x29, x30, [sp, #-16]!
    d6a4:	mov	x29, sp
    d6a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d6ac:	ldr	x1, [x0, #2800]
    d6b0:	add	x0, x0, #0xaf0
    d6b4:	blr	x1
    d6b8:	mrs	x8, tpidr_el0
    d6bc:	ldr	w9, [x8, x0]
    d6c0:	orr	w9, w9, #0x1
    d6c4:	str	w9, [x8, x0]
    d6c8:	ldp	x29, x30, [sp], #16
    d6cc:	ret

000000000000d6d0 <mpfr_set_overflow@@Base>:
    d6d0:	stp	x29, x30, [sp, #-16]!
    d6d4:	mov	x29, sp
    d6d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d6dc:	ldr	x1, [x0, #2800]
    d6e0:	add	x0, x0, #0xaf0
    d6e4:	blr	x1
    d6e8:	mrs	x8, tpidr_el0
    d6ec:	ldr	w9, [x8, x0]
    d6f0:	orr	w9, w9, #0x2
    d6f4:	str	w9, [x8, x0]
    d6f8:	ldp	x29, x30, [sp], #16
    d6fc:	ret

000000000000d700 <mpfr_set_divby0@@Base>:
    d700:	stp	x29, x30, [sp, #-16]!
    d704:	mov	x29, sp
    d708:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d70c:	ldr	x1, [x0, #2800]
    d710:	add	x0, x0, #0xaf0
    d714:	blr	x1
    d718:	mrs	x8, tpidr_el0
    d71c:	ldr	w9, [x8, x0]
    d720:	orr	w9, w9, #0x20
    d724:	str	w9, [x8, x0]
    d728:	ldp	x29, x30, [sp], #16
    d72c:	ret

000000000000d730 <mpfr_set_nanflag@@Base>:
    d730:	stp	x29, x30, [sp, #-16]!
    d734:	mov	x29, sp
    d738:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d73c:	ldr	x1, [x0, #2800]
    d740:	add	x0, x0, #0xaf0
    d744:	blr	x1
    d748:	mrs	x8, tpidr_el0
    d74c:	ldr	w9, [x8, x0]
    d750:	orr	w9, w9, #0x4
    d754:	str	w9, [x8, x0]
    d758:	ldp	x29, x30, [sp], #16
    d75c:	ret

000000000000d760 <mpfr_set_inexflag@@Base>:
    d760:	stp	x29, x30, [sp, #-16]!
    d764:	mov	x29, sp
    d768:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d76c:	ldr	x1, [x0, #2800]
    d770:	add	x0, x0, #0xaf0
    d774:	blr	x1
    d778:	mrs	x8, tpidr_el0
    d77c:	ldr	w9, [x8, x0]
    d780:	orr	w9, w9, #0x8
    d784:	str	w9, [x8, x0]
    d788:	ldp	x29, x30, [sp], #16
    d78c:	ret

000000000000d790 <mpfr_set_erangeflag@@Base>:
    d790:	stp	x29, x30, [sp, #-16]!
    d794:	mov	x29, sp
    d798:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d79c:	ldr	x1, [x0, #2800]
    d7a0:	add	x0, x0, #0xaf0
    d7a4:	blr	x1
    d7a8:	mrs	x8, tpidr_el0
    d7ac:	ldr	w9, [x8, x0]
    d7b0:	orr	w9, w9, #0x10
    d7b4:	str	w9, [x8, x0]
    d7b8:	ldp	x29, x30, [sp], #16
    d7bc:	ret

000000000000d7c0 <mpfr_check_range@@Base>:
    d7c0:	stp	x29, x30, [sp, #-32]!
    d7c4:	ldr	x9, [x0, #16]
    d7c8:	mov	x10, #0x4                   	// #4
    d7cc:	movk	x10, #0x8000, lsl #48
    d7d0:	str	x19, [sp, #16]
    d7d4:	cmp	x9, x10
    d7d8:	mov	w19, w1
    d7dc:	mov	x29, sp
    d7e0:	b.lt	d868 <mpfr_check_range@@Base+0xa8>  // b.tstop
    d7e4:	mov	x8, x0
    d7e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d7ec:	ldr	x1, [x0, #2736]
    d7f0:	add	x0, x0, #0xab0
    d7f4:	blr	x1
    d7f8:	mrs	x11, tpidr_el0
    d7fc:	ldr	x10, [x11, x0]
    d800:	cmp	x9, x10
    d804:	b.lt	d89c <mpfr_check_range@@Base+0xdc>  // b.tstop
    d808:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d80c:	ldr	x1, [x0, #2768]
    d810:	add	x0, x0, #0xad0
    d814:	blr	x1
    d818:	ldr	x10, [x11, x0]
    d81c:	cmp	x9, x10
    d820:	b.gt	d8b4 <mpfr_check_range@@Base+0xf4>
    d824:	mov	w8, #0x1                   	// #1
    d828:	tbz	w8, #0, d85c <mpfr_check_range@@Base+0x9c>
    d82c:	cbz	w19, d858 <mpfr_check_range@@Base+0x98>
    d830:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d834:	ldr	x1, [x0, #2800]
    d838:	add	x0, x0, #0xaf0
    d83c:	blr	x1
    d840:	mrs	x8, tpidr_el0
    d844:	ldr	w9, [x8, x0]
    d848:	orr	w9, w9, #0x8
    d84c:	str	w9, [x8, x0]
    d850:	mov	w0, w19
    d854:	b	d85c <mpfr_check_range@@Base+0x9c>
    d858:	mov	w0, wzr
    d85c:	ldr	x19, [sp, #16]
    d860:	ldp	x29, x30, [sp], #32
    d864:	ret
    d868:	cbz	w19, d82c <mpfr_check_range@@Base+0x6c>
    d86c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    d870:	cmp	x9, x8
    d874:	b.ne	d82c <mpfr_check_range@@Base+0x6c>  // b.any
    d878:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d87c:	ldr	x1, [x0, #2800]
    d880:	add	x0, x0, #0xaf0
    d884:	blr	x1
    d888:	mrs	x8, tpidr_el0
    d88c:	ldr	w9, [x8, x0]
    d890:	orr	w9, w9, #0x2
    d894:	str	w9, [x8, x0]
    d898:	b	d82c <mpfr_check_range@@Base+0x6c>
    d89c:	cbnz	w2, d90c <mpfr_check_range@@Base+0x14c>
    d8a0:	add	x9, x9, #0x1
    d8a4:	cmp	x9, x10
    d8a8:	b.ge	d8cc <mpfr_check_range@@Base+0x10c>  // b.tcont
    d8ac:	mov	w2, #0x1                   	// #1
    d8b0:	b	d90c <mpfr_check_range@@Base+0x14c>
    d8b4:	ldr	w9, [x8, #8]
    d8b8:	mov	x0, x8
    d8bc:	mov	w1, w2
    d8c0:	mov	w2, w9
    d8c4:	bl	c3a0 <mpfr_overflow@plt>
    d8c8:	b	d920 <mpfr_check_range@@Base+0x160>
    d8cc:	mov	x0, x8
    d8d0:	str	x8, [x29, #24]
    d8d4:	bl	c360 <mpfr_powerof2_raw@plt>
    d8d8:	cbz	w0, d8f4 <mpfr_check_range@@Base+0x134>
    d8dc:	ldr	x8, [x29, #24]
    d8e0:	ldr	w8, [x8, #8]
    d8e4:	tbnz	w8, #31, d8fc <mpfr_check_range@@Base+0x13c>
    d8e8:	ldr	x8, [x29, #24]
    d8ec:	tbz	w19, #31, d8ac <mpfr_check_range@@Base+0xec>
    d8f0:	b	d908 <mpfr_check_range@@Base+0x148>
    d8f4:	ldr	x8, [x29, #24]
    d8f8:	b	d908 <mpfr_check_range@@Base+0x148>
    d8fc:	ldr	x8, [x29, #24]
    d900:	cmp	w19, #0x1
    d904:	b.lt	d8ac <mpfr_check_range@@Base+0xec>  // b.tstop
    d908:	mov	w2, wzr
    d90c:	ldr	w9, [x8, #8]
    d910:	mov	x0, x8
    d914:	mov	w1, w2
    d918:	mov	w2, w9
    d91c:	bl	c880 <mpfr_underflow@plt>
    d920:	mov	w8, wzr
    d924:	tbnz	wzr, #0, d82c <mpfr_check_range@@Base+0x6c>
    d928:	b	d85c <mpfr_check_range@@Base+0x9c>

000000000000d92c <mpfr_underflow@@Base>:
    d92c:	stp	x29, x30, [sp, #-48]!
    d930:	str	x21, [sp, #16]
    d934:	stp	x20, x19, [sp, #32]
    d938:	mov	w19, w2
    d93c:	mov	x20, x0
    d940:	cmp	w1, #0x1
    d944:	mrs	x21, tpidr_el0
    d948:	mov	x29, sp
    d94c:	b.eq	d95c <mpfr_underflow@@Base+0x30>  // b.none
    d950:	add	w8, w1, w19, lsr #31
    d954:	cmp	w8, #0x3
    d958:	b.ne	d96c <mpfr_underflow@@Base+0x40>  // b.any
    d95c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    d960:	str	x8, [x20, #16]
    d964:	mov	w8, #0xffffffff            	// #-1
    d968:	b	d98c <mpfr_underflow@@Base+0x60>
    d96c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d970:	ldr	x1, [x0, #2736]
    d974:	add	x0, x0, #0xab0
    d978:	blr	x1
    d97c:	ldr	x1, [x21, x0]
    d980:	mov	x0, x20
    d984:	bl	c770 <mpfr_setmin@plt>
    d988:	mov	w8, #0x1                   	// #1
    d98c:	str	w19, [x20, #8]
    d990:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    d994:	ldr	x1, [x0, #2800]
    d998:	add	x0, x0, #0xaf0
    d99c:	blr	x1
    d9a0:	ldr	w9, [x21, x0]
    d9a4:	mov	w10, #0x9                   	// #9
    d9a8:	cmp	w19, #0x0
    d9ac:	ldp	x20, x19, [sp, #32]
    d9b0:	orr	w9, w9, w10
    d9b4:	str	w9, [x21, x0]
    d9b8:	ldr	x21, [sp, #16]
    d9bc:	cneg	w8, w8, le
    d9c0:	mov	w0, w8
    d9c4:	ldp	x29, x30, [sp], #48
    d9c8:	ret

000000000000d9cc <mpfr_overflow@@Base>:
    d9cc:	stp	x29, x30, [sp, #-48]!
    d9d0:	str	x21, [sp, #16]
    d9d4:	stp	x20, x19, [sp, #32]
    d9d8:	mov	w19, w2
    d9dc:	mov	x20, x0
    d9e0:	cmp	w1, #0x1
    d9e4:	mrs	x21, tpidr_el0
    d9e8:	mov	x29, sp
    d9ec:	b.eq	d9fc <mpfr_overflow@@Base+0x30>  // b.none
    d9f0:	add	w8, w1, w19, lsr #31
    d9f4:	cmp	w8, #0x3
    d9f8:	b.ne	da20 <mpfr_overflow@@Base+0x54>  // b.any
    d9fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    da00:	ldr	x1, [x0, #2768]
    da04:	add	x0, x0, #0xad0
    da08:	blr	x1
    da0c:	ldr	x1, [x21, x0]
    da10:	mov	x0, x20
    da14:	bl	c560 <mpfr_setmax@plt>
    da18:	mov	w8, #0xffffffff            	// #-1
    da1c:	b	da2c <mpfr_overflow@@Base+0x60>
    da20:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    da24:	str	x8, [x20, #16]
    da28:	mov	w8, #0x1                   	// #1
    da2c:	str	w19, [x20, #8]
    da30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    da34:	ldr	x1, [x0, #2800]
    da38:	add	x0, x0, #0xaf0
    da3c:	blr	x1
    da40:	ldr	w9, [x21, x0]
    da44:	mov	w10, #0xa                   	// #10
    da48:	cmp	w19, #0x0
    da4c:	ldp	x20, x19, [sp, #32]
    da50:	orr	w9, w9, w10
    da54:	str	w9, [x21, x0]
    da58:	ldr	x21, [sp, #16]
    da5c:	cneg	w8, w8, le
    da60:	mov	w0, w8
    da64:	ldp	x29, x30, [sp], #48
    da68:	ret

000000000000da6c <mpfr_underflow_p@@Base>:
    da6c:	stp	x29, x30, [sp, #-16]!
    da70:	mov	x29, sp
    da74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    da78:	ldr	x1, [x0, #2800]
    da7c:	add	x0, x0, #0xaf0
    da80:	blr	x1
    da84:	mrs	x8, tpidr_el0
    da88:	ldr	w8, [x8, x0]
    da8c:	and	w0, w8, #0x1
    da90:	ldp	x29, x30, [sp], #16
    da94:	ret

000000000000da98 <mpfr_overflow_p@@Base>:
    da98:	stp	x29, x30, [sp, #-16]!
    da9c:	mov	x29, sp
    daa0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    daa4:	ldr	x1, [x0, #2800]
    daa8:	add	x0, x0, #0xaf0
    daac:	blr	x1
    dab0:	mrs	x8, tpidr_el0
    dab4:	ldr	w8, [x8, x0]
    dab8:	and	w0, w8, #0x2
    dabc:	ldp	x29, x30, [sp], #16
    dac0:	ret

000000000000dac4 <mpfr_divby0_p@@Base>:
    dac4:	stp	x29, x30, [sp, #-16]!
    dac8:	mov	x29, sp
    dacc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    dad0:	ldr	x1, [x0, #2800]
    dad4:	add	x0, x0, #0xaf0
    dad8:	blr	x1
    dadc:	mrs	x8, tpidr_el0
    dae0:	ldr	w8, [x8, x0]
    dae4:	and	w0, w8, #0x20
    dae8:	ldp	x29, x30, [sp], #16
    daec:	ret

000000000000daf0 <mpfr_nanflag_p@@Base>:
    daf0:	stp	x29, x30, [sp, #-16]!
    daf4:	mov	x29, sp
    daf8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    dafc:	ldr	x1, [x0, #2800]
    db00:	add	x0, x0, #0xaf0
    db04:	blr	x1
    db08:	mrs	x8, tpidr_el0
    db0c:	ldr	w8, [x8, x0]
    db10:	and	w0, w8, #0x4
    db14:	ldp	x29, x30, [sp], #16
    db18:	ret

000000000000db1c <mpfr_inexflag_p@@Base>:
    db1c:	stp	x29, x30, [sp, #-16]!
    db20:	mov	x29, sp
    db24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    db28:	ldr	x1, [x0, #2800]
    db2c:	add	x0, x0, #0xaf0
    db30:	blr	x1
    db34:	mrs	x8, tpidr_el0
    db38:	ldr	w8, [x8, x0]
    db3c:	and	w0, w8, #0x8
    db40:	ldp	x29, x30, [sp], #16
    db44:	ret

000000000000db48 <mpfr_erangeflag_p@@Base>:
    db48:	stp	x29, x30, [sp, #-16]!
    db4c:	mov	x29, sp
    db50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    db54:	ldr	x1, [x0, #2800]
    db58:	add	x0, x0, #0xaf0
    db5c:	blr	x1
    db60:	mrs	x8, tpidr_el0
    db64:	ldr	w8, [x8, x0]
    db68:	and	w0, w8, #0x10
    db6c:	ldp	x29, x30, [sp], #16
    db70:	ret

000000000000db74 <mpfr_extract@@Base>:
    db74:	stp	x29, x30, [sp, #-64]!
    db78:	stp	x24, x23, [sp, #16]
    db7c:	stp	x22, x21, [sp, #32]
    db80:	stp	x20, x19, [sp, #48]
    db84:	ldr	x9, [x1]
    db88:	mov	w8, #0x1                   	// #1
    db8c:	lsl	x23, x8, x2
    db90:	cmp	w2, #0x0
    db94:	lsr	x8, x23, #1
    db98:	csinc	x21, x8, xzr, ne  // ne = any
    db9c:	sub	x8, x9, #0x1
    dba0:	add	x9, x9, #0x3e
    dba4:	cmp	x8, #0x0
    dba8:	csel	x8, x9, x8, lt  // lt = tstop
    dbac:	asr	x8, x8, #6
    dbb0:	mov	x20, x1
    dbb4:	mov	x19, x0
    dbb8:	lsr	x9, x21, #31
    dbbc:	add	x22, x8, #0x1
    dbc0:	mov	x29, sp
    dbc4:	cbnz	x9, dc78 <mpfr_extract@@Base+0x104>
    dbc8:	lsl	x1, x21, #6
    dbcc:	mov	x0, x19
    dbd0:	bl	c910 <__gmpz_realloc2@plt>
    dbd4:	ldr	x0, [x19, #8]
    dbd8:	subs	x24, x23, x22
    dbdc:	b.ls	dc10 <mpfr_extract@@Base+0x9c>  // b.plast
    dbe0:	lsl	x2, x21, #3
    dbe4:	mov	w1, wzr
    dbe8:	bl	c5b0 <memset@plt>
    dbec:	subs	x8, x22, x21
    dbf0:	b.cc	dc2c <mpfr_extract@@Base+0xb8>  // b.lo, b.ul, b.last
    dbf4:	ldr	x9, [x19, #8]
    dbf8:	ldr	x1, [x20, #24]
    dbfc:	add	x0, x9, x24, lsl #3
    dc00:	cmp	x0, x1
    dc04:	b.eq	dc2c <mpfr_extract@@Base+0xb8>  // b.none
    dc08:	lsl	x2, x8, #3
    dc0c:	b	dc28 <mpfr_extract@@Base+0xb4>
    dc10:	ldr	x8, [x20, #24]
    dc14:	add	x8, x8, x22, lsl #3
    dc18:	sub	x1, x8, x23, lsl #3
    dc1c:	cmp	x0, x1
    dc20:	b.eq	dc2c <mpfr_extract@@Base+0xb8>  // b.none
    dc24:	lsl	x2, x21, #3
    dc28:	bl	be50 <memcpy@plt>
    dc2c:	sub	x8, x21, #0x1
    dc30:	cmn	x8, #0x1
    dc34:	b.eq	dc50 <mpfr_extract@@Base+0xdc>  // b.none
    dc38:	ldr	x9, [x19, #8]
    dc3c:	ldr	x9, [x9, x8, lsl #3]
    dc40:	sub	x8, x8, #0x1
    dc44:	cbz	x9, dc30 <mpfr_extract@@Base+0xbc>
    dc48:	add	x8, x8, #0x2
    dc4c:	b	dc54 <mpfr_extract@@Base+0xe0>
    dc50:	mov	x8, xzr
    dc54:	ldr	w9, [x20, #8]
    dc58:	cmp	w9, #0x0
    dc5c:	cneg	w8, w8, lt  // lt = tstop
    dc60:	str	w8, [x19, #4]
    dc64:	ldp	x20, x19, [sp, #48]
    dc68:	ldp	x22, x21, [sp, #32]
    dc6c:	ldp	x24, x23, [sp, #16]
    dc70:	ldp	x29, x30, [sp], #64
    dc74:	ret
    dc78:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    dc7c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    dc80:	add	x0, x0, #0xeb0
    dc84:	add	x2, x2, #0xeba
    dc88:	mov	w1, #0x28                  	// #40
    dc8c:	bl	d030 <mpfr_assert_fail@plt>
    dc90:	b	dbc8 <mpfr_extract@@Base+0x54>

000000000000dc94 <__gmpfr_ceil_exp2@@Base>:
    dc94:	str	d8, [sp, #-32]!
    dc98:	mov	x8, #0x4090000000000000    	// #4652218415073722368
    dc9c:	mov	v8.16b, v0.16b
    dca0:	fmov	d0, x8
    dca4:	fcmp	d8, d0
    dca8:	stp	x29, x30, [sp, #16]
    dcac:	mov	x29, sp
    dcb0:	b.hi	dcf0 <__gmpfr_ceil_exp2@@Base+0x5c>  // b.pmore
    dcb4:	fcvtzs	x8, d8
    dcb8:	scvtf	d0, x8
    dcbc:	fcmp	d0, d8
    dcc0:	cset	w10, ne  // ne = any
    dcc4:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
    dcc8:	add	x8, x10, x8
    dccc:	add	x9, x9, x8, lsl #52
    dcd0:	ldp	x29, x30, [sp, #16]
    dcd4:	cmn	x8, #0x3fd
    dcd8:	and	x8, x9, #0x7ff0000000000000
    dcdc:	mov	x9, #0x10000000000000      	// #4503599627370496
    dce0:	csel	x8, x9, x8, lt  // lt = tstop
    dce4:	fmov	d0, x8
    dce8:	ldr	d8, [sp], #32
    dcec:	ret
    dcf0:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    dcf4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    dcf8:	add	x0, x0, #0xede
    dcfc:	add	x2, x2, #0xeeb
    dd00:	mov	w1, #0x26                  	// #38
    dd04:	bl	d030 <mpfr_assert_fail@plt>
    dd08:	b	dcb4 <__gmpfr_ceil_exp2@@Base+0x20>

000000000000dd0c <__gmpfr_ceil_log2@@Base>:
    dd0c:	stp	x29, x30, [sp, #-32]!
    dd10:	stp	x20, x19, [sp, #16]
    dd14:	fmov	x20, d0
    dd18:	ubfx	x19, x20, #52, #11
    dd1c:	cmp	x19, #0x7fe
    dd20:	mov	x29, sp
    dd24:	b.cs	dd58 <__gmpfr_ceil_log2@@Base+0x4c>  // b.hs, b.nlast
    dd28:	and	x8, x20, #0x800fffffffffffff
    dd2c:	orr	x8, x8, #0x3ff0000000000000
    dd30:	fmov	d0, #1.000000000000000000e+00
    dd34:	fmov	d1, x8
    dd38:	mov	x9, #0xfffffffffffffc01    	// #-1023
    dd3c:	fcmp	d1, d0
    dd40:	mov	x8, #0xfffffffffffffc02    	// #-1022
    dd44:	csel	x8, x8, x9, ne  // ne = any
    dd48:	add	x0, x8, x19
    dd4c:	ldp	x20, x19, [sp, #16]
    dd50:	ldp	x29, x30, [sp], #32
    dd54:	ret
    dd58:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    dd5c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    dd60:	add	x0, x0, #0xef7
    dd64:	add	x2, x2, #0xf04
    dd68:	mov	w1, #0x28                  	// #40
    dd6c:	bl	d030 <mpfr_assert_fail@plt>
    dd70:	b	dd28 <__gmpfr_ceil_log2@@Base+0x1c>

000000000000dd74 <__gmpfr_floor_log2@@Base>:
    dd74:	stp	x29, x30, [sp, #-32]!
    dd78:	fmov	x8, d0
    dd7c:	ubfx	x8, x8, #52, #11
    dd80:	str	x19, [sp, #16]
    dd84:	cmp	x8, #0x7fe
    dd88:	sub	x19, x8, #0x3ff
    dd8c:	mov	x29, sp
    dd90:	b.cs	dda4 <__gmpfr_floor_log2@@Base+0x30>  // b.hs, b.nlast
    dd94:	mov	x0, x19
    dd98:	ldr	x19, [sp, #16]
    dd9c:	ldp	x29, x30, [sp], #32
    dda0:	ret
    dda4:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    dda8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    ddac:	add	x0, x0, #0xf0f
    ddb0:	add	x2, x2, #0xf04
    ddb4:	mov	w1, #0x25                  	// #37
    ddb8:	bl	d030 <mpfr_assert_fail@plt>
    ddbc:	b	dd94 <__gmpfr_floor_log2@@Base+0x20>

000000000000ddc0 <mpfr_add@@Base>:
    ddc0:	sub	sp, sp, #0x30
    ddc4:	stp	x29, x30, [sp, #32]
    ddc8:	ldr	x9, [x1, #16]
    ddcc:	mov	x10, #0x2                   	// #2
    ddd0:	movk	x10, #0x8000, lsl #48
    ddd4:	add	x12, x10, #0x3
    ddd8:	mov	x8, x1
    dddc:	cmp	x9, x12
    dde0:	add	x29, sp, #0x20
    dde4:	b.lt	de3c <mpfr_add@@Base+0x7c>  // b.tstop
    dde8:	ldr	x11, [x2, #16]
    ddec:	cmp	x11, x12
    ddf0:	b.lt	de3c <mpfr_add@@Base+0x7c>  // b.tstop
    ddf4:	ldr	w13, [x8, #8]
    ddf8:	ldr	w14, [x2, #8]
    ddfc:	ldr	x12, [x0]
    de00:	ldr	x10, [x8]
    de04:	cmp	w13, w14
    de08:	b.ne	de90 <mpfr_add@@Base+0xd0>  // b.any
    de0c:	cmp	x12, x10
    de10:	b.ne	de7c <mpfr_add@@Base+0xbc>  // b.any
    de14:	ldr	x12, [x2]
    de18:	cmp	x10, x12
    de1c:	b.ne	de7c <mpfr_add@@Base+0xbc>  // b.any
    de20:	mov	x1, x8
    de24:	bl	d0a0 <mpfr_add1sp@plt>
    de28:	mov	w1, w0
    de2c:	ldp	x29, x30, [sp, #32]
    de30:	mov	w0, w1
    de34:	add	sp, sp, #0x30
    de38:	ret
    de3c:	cmp	x9, x10
    de40:	b.eq	de50 <mpfr_add@@Base+0x90>  // b.none
    de44:	ldr	x11, [x2, #16]
    de48:	cmp	x11, x10
    de4c:	b.ne	debc <mpfr_add@@Base+0xfc>  // b.any
    de50:	str	x10, [x0, #16]
    de54:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    de58:	ldr	x1, [x0, #2800]
    de5c:	add	x0, x0, #0xaf0
    de60:	blr	x1
    de64:	mrs	x8, tpidr_el0
    de68:	ldr	w9, [x8, x0]
    de6c:	mov	w1, wzr
    de70:	orr	w9, w9, #0x4
    de74:	str	w9, [x8, x0]
    de78:	b	de2c <mpfr_add@@Base+0x6c>
    de7c:	cmp	x9, x11
    de80:	b.ge	deb0 <mpfr_add@@Base+0xf0>  // b.tcont
    de84:	mov	x1, x2
    de88:	mov	x2, x8
    de8c:	b	deb4 <mpfr_add@@Base+0xf4>
    de90:	cmp	x12, x10
    de94:	b.ne	e024 <mpfr_add@@Base+0x264>  // b.any
    de98:	ldr	x9, [x2]
    de9c:	cmp	x10, x9
    dea0:	b.ne	e024 <mpfr_add@@Base+0x264>  // b.any
    dea4:	mov	x1, x8
    dea8:	bl	c580 <mpfr_sub1sp@plt>
    deac:	b	de28 <mpfr_add@@Base+0x68>
    deb0:	mov	x1, x8
    deb4:	bl	cc60 <mpfr_add1@plt>
    deb8:	b	de28 <mpfr_add@@Base+0x68>
    debc:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
    dec0:	cmp	x9, x12
    dec4:	b.ne	def0 <mpfr_add@@Base+0x130>  // b.any
    dec8:	cmp	x11, x12
    decc:	b.ne	dee0 <mpfr_add@@Base+0x120>  // b.any
    ded0:	ldr	w9, [x8, #8]
    ded4:	ldr	w11, [x2, #8]
    ded8:	cmp	w9, w11
    dedc:	b.ne	de50 <mpfr_add@@Base+0x90>  // b.any
    dee0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    dee4:	str	x9, [x0, #16]
    dee8:	ldr	w8, [x8, #8]
    deec:	b	df04 <mpfr_add@@Base+0x144>
    def0:	cmp	x11, x12
    def4:	b.ne	df10 <mpfr_add@@Base+0x150>  // b.any
    def8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    defc:	str	x8, [x0, #16]
    df00:	ldr	w8, [x2, #8]
    df04:	mov	w1, wzr
    df08:	str	w8, [x0, #8]
    df0c:	b	de2c <mpfr_add@@Base+0x6c>
    df10:	stur	x8, [x29, #-8]
    df14:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    df18:	cmp	x9, x8
    df1c:	str	w3, [sp, #12]
    df20:	str	x2, [sp]
    df24:	str	x0, [sp, #16]
    df28:	b.ne	df68 <mpfr_add@@Base+0x1a8>  // b.any
    df2c:	cmp	x11, x8
    df30:	b.ne	df84 <mpfr_add@@Base+0x1c4>  // b.any
    df34:	ldur	x8, [x29, #-8]
    df38:	ldr	w9, [x8, #8]
    df3c:	ldr	w8, [sp, #12]
    df40:	cmp	w8, #0x3
    df44:	b.ne	dfdc <mpfr_add@@Base+0x21c>  // b.any
    df48:	cmp	w9, #0x1
    df4c:	mov	w8, #0xffffffff            	// #-1
    df50:	b.lt	dff4 <mpfr_add@@Base+0x234>  // b.tstop
    df54:	ldr	x9, [sp]
    df58:	ldr	w9, [x9, #8]
    df5c:	cmp	w9, #0x1
    df60:	cneg	w8, w8, ge  // ge = tcont
    df64:	b	dff4 <mpfr_add@@Base+0x234>
    df68:	ldur	x12, [x29, #-8]
    df6c:	cmp	x11, x8
    df70:	ldr	w3, [x12, #8]
    df74:	b.ne	df9c <mpfr_add@@Base+0x1dc>  // b.any
    df78:	ldr	x0, [sp, #16]
    df7c:	ldur	x1, [x29, #-8]
    df80:	b	df90 <mpfr_add@@Base+0x1d0>
    df84:	ldr	x1, [sp]
    df88:	ldr	x0, [sp, #16]
    df8c:	ldr	w3, [x1, #8]
    df90:	ldr	w2, [sp, #12]
    df94:	bl	cb70 <mpfr_set4@plt>
    df98:	b	de28 <mpfr_add@@Base+0x68>
    df9c:	ldr	x8, [sp]
    dfa0:	ldr	w8, [x8, #8]
    dfa4:	cmp	w3, w8
    dfa8:	b.ne	e00c <mpfr_add@@Base+0x24c>  // b.any
    dfac:	add	x8, x10, #0x2
    dfb0:	cmp	x9, x8
    dfb4:	b.eq	e030 <mpfr_add@@Base+0x270>  // b.none
    dfb8:	cmp	x11, x8
    dfbc:	b.eq	e030 <mpfr_add@@Base+0x270>  // b.none
    dfc0:	cmp	x9, x11
    dfc4:	b.lt	e040 <mpfr_add@@Base+0x280>  // b.tstop
    dfc8:	ldr	x0, [sp, #16]
    dfcc:	ldur	x1, [x29, #-8]
    dfd0:	ldr	x2, [sp]
    dfd4:	ldr	w3, [sp, #12]
    dfd8:	b	deb4 <mpfr_add@@Base+0xf4>
    dfdc:	mov	w8, #0x1                   	// #1
    dfe0:	tbz	w9, #31, dff4 <mpfr_add@@Base+0x234>
    dfe4:	ldr	x9, [sp]
    dfe8:	ldr	w9, [x9, #8]
    dfec:	cmp	w9, #0x0
    dff0:	cneg	w8, w8, lt  // lt = tstop
    dff4:	ldr	x9, [sp, #16]
    dff8:	mov	w1, wzr
    dffc:	str	w8, [x9, #8]
    e000:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    e004:	str	x8, [x9, #16]
    e008:	b	de2c <mpfr_add@@Base+0x6c>
    e00c:	ldr	x0, [sp, #16]
    e010:	ldur	x1, [x29, #-8]
    e014:	ldr	x2, [sp]
    e018:	ldr	w3, [sp, #12]
    e01c:	bl	cf50 <mpfr_sub1@plt>
    e020:	b	de28 <mpfr_add@@Base+0x68>
    e024:	mov	x1, x8
    e028:	bl	cf50 <mpfr_sub1@plt>
    e02c:	b	de28 <mpfr_add@@Base+0x68>
    e030:	ldur	x0, [x29, #-8]
    e034:	ldr	x1, [sp]
    e038:	bl	cfa0 <mpfr_ubf_exp_less_p@plt>
    e03c:	cbz	w0, dfc8 <mpfr_add@@Base+0x208>
    e040:	ldr	x0, [sp, #16]
    e044:	ldr	x1, [sp]
    e048:	ldur	x2, [x29, #-8]
    e04c:	ldr	w3, [sp, #12]
    e050:	b	deb4 <mpfr_add@@Base+0xf4>

000000000000e054 <mpfr_add1@@Base>:
    e054:	stp	x29, x30, [sp, #-96]!
    e058:	stp	x28, x27, [sp, #16]
    e05c:	stp	x26, x25, [sp, #32]
    e060:	stp	x24, x23, [sp, #48]
    e064:	stp	x22, x21, [sp, #64]
    e068:	stp	x20, x19, [sp, #80]
    e06c:	mov	x29, sp
    e070:	sub	sp, sp, #0x60
    e074:	ldr	x14, [x1, #16]
    e078:	mov	x23, #0x4                   	// #4
    e07c:	movk	x23, #0x8000, lsl #48
    e080:	mov	x27, x2
    e084:	mov	x28, x1
    e088:	cmp	x14, x23
    e08c:	mov	x21, x0
    e090:	b.eq	e4a4 <mpfr_add1@@Base+0x450>  // b.none
    e094:	stur	xzr, [x29, #-8]
    e098:	ldr	x25, [x21]
    e09c:	ldr	x8, [x28]
    e0a0:	ldr	x9, [x27]
    e0a4:	ldr	x22, [x21, #24]
    e0a8:	sub	x10, x25, #0x1
    e0ac:	add	x11, x25, #0x3e
    e0b0:	sub	x12, x8, #0x1
    e0b4:	cmp	x10, #0x0
    e0b8:	ldr	x15, [x28, #24]
    e0bc:	add	x8, x8, #0x3e
    e0c0:	sub	x13, x9, #0x1
    e0c4:	csel	x10, x11, x10, lt  // lt = tstop
    e0c8:	cmp	x12, #0x0
    e0cc:	ldr	x19, [x27, #24]
    e0d0:	add	x9, x9, #0x3e
    e0d4:	csel	x8, x8, x12, lt  // lt = tstop
    e0d8:	cmp	x13, #0x0
    e0dc:	asr	x24, x8, #6
    e0e0:	csel	x8, x9, x13, lt  // lt = tstop
    e0e4:	asr	x10, x10, #6
    e0e8:	asr	x20, x8, #6
    e0ec:	stp	x10, x15, [x29, #-48]
    e0f0:	add	x10, x10, #0x1
    e0f4:	add	x26, x24, #0x1
    e0f8:	cmp	x22, x15
    e0fc:	add	x8, x20, #0x1
    e100:	stp	x8, x10, [x29, #-24]
    e104:	stp	x14, x21, [x29, #-64]
    e108:	b.eq	e4f4 <mpfr_add1@@Base+0x4a0>  // b.none
    e10c:	cmp	x22, x19
    e110:	b.eq	e11c <mpfr_add1@@Base+0xc8>  // b.none
    e114:	stur	x19, [x29, #-32]
    e118:	b	e16c <mpfr_add1@@Base+0x118>
    e11c:	ldur	x8, [x29, #-24]
    e120:	lsl	x21, x8, #3
    e124:	cmp	x21, #0x4, lsl #12
    e128:	b.hi	e664 <mpfr_add1@@Base+0x610>  // b.pmore
    e12c:	add	x9, x21, #0xf
    e130:	mov	x8, sp
    e134:	and	x9, x9, #0xfffffffffffffff0
    e138:	sub	x0, x8, x9
    e13c:	mov	sp, x0
    e140:	cmp	x22, x0
    e144:	stur	x0, [x29, #-32]
    e148:	b.eq	e168 <mpfr_add1@@Base+0x114>  // b.none
    e14c:	mov	x1, x22
    e150:	mov	x2, x21
    e154:	mov	w19, w3
    e158:	bl	be50 <memcpy@plt>
    e15c:	ldur	x10, [x29, #-16]
    e160:	ldur	x14, [x29, #-64]
    e164:	mov	w3, w19
    e168:	ldur	x21, [x29, #-56]
    e16c:	ldr	w8, [x28, #8]
    e170:	lsl	x19, x10, #6
    e174:	cmp	w3, #0x3
    e178:	str	w8, [x21, #8]
    e17c:	b.eq	e19c <mpfr_add1@@Base+0x148>  // b.none
    e180:	cmp	w3, #0x2
    e184:	b.ne	e1ac <mpfr_add1@@Base+0x158>  // b.any
    e188:	ldr	w8, [x28, #8]
    e18c:	cmp	w8, #0x1
    e190:	mov	w8, #0x4                   	// #4
    e194:	csinc	w3, w8, wzr, ge  // ge = tcont
    e198:	b	e1ac <mpfr_add1@@Base+0x158>
    e19c:	ldr	w8, [x28, #8]
    e1a0:	cmp	w8, #0x0
    e1a4:	mov	w8, #0x4                   	// #4
    e1a8:	csinc	w3, w8, wzr, lt  // lt = tstop
    e1ac:	ldr	x8, [x27, #16]
    e1b0:	cmp	x8, x23
    e1b4:	sub	x23, x19, x25
    e1b8:	mov	w25, w3
    e1bc:	b.eq	e554 <mpfr_add1@@Base+0x500>  // b.none
    e1c0:	sub	x27, x14, x8
    e1c4:	cmp	x19, x27
    e1c8:	b.ls	e574 <mpfr_add1@@Base+0x520>  // b.plast
    e1cc:	mvn	x8, x27
    e1d0:	add	x8, x19, x8
    e1d4:	add	x9, x8, #0x3f
    e1d8:	cmp	x8, #0x0
    e1dc:	csel	x8, x9, x8, lt  // lt = tstop
    e1e0:	asr	x8, x8, #6
    e1e4:	cmp	x8, x20
    e1e8:	add	x28, x8, #0x1
    e1ec:	b.gt	e5b0 <mpfr_add1@@Base+0x55c>
    e1f0:	add	x8, x27, #0x3f
    e1f4:	cmp	x27, #0x0
    e1f8:	csel	x8, x8, x27, lt  // lt = tstop
    e1fc:	asr	x20, x8, #6
    e200:	sub	x8, x10, x20
    e204:	add	x21, x22, x8, lsl #3
    e208:	lsl	x2, x20, #3
    e20c:	mov	x0, x21
    e210:	mov	w1, wzr
    e214:	bl	c5b0 <memset@plt>
    e218:	ldp	x9, x8, [x29, #-32]
    e21c:	sub	w3, w27, w20, lsl #6
    e220:	sub	x21, x21, x28, lsl #3
    e224:	sub	x8, x8, x28
    e228:	add	x1, x9, x8, lsl #3
    e22c:	cbz	w3, e5d4 <mpfr_add1@@Base+0x580>
    e230:	mov	x0, x21
    e234:	mov	x2, x28
    e238:	bl	c140 <__gmpn_rshift@plt>
    e23c:	ldur	x20, [x29, #-48]
    e240:	cmp	x21, x22
    e244:	b.hi	e65c <mpfr_add1@@Base+0x608>  // b.pmore
    e248:	cmp	x24, x20
    e24c:	b.ge	e26c <mpfr_add1@@Base+0x218>  // b.tcont
    e250:	ldur	x8, [x29, #-16]
    e254:	ldur	x2, [x29, #-40]
    e258:	mov	x3, x26
    e25c:	sub	x8, x8, x26
    e260:	add	x0, x22, x8, lsl #3
    e264:	mov	x1, x0
    e268:	b	e284 <mpfr_add1@@Base+0x230>
    e26c:	ldur	x3, [x29, #-16]
    e270:	ldur	x9, [x29, #-40]
    e274:	mov	x0, x22
    e278:	mov	x1, x22
    e27c:	sub	x8, x26, x3
    e280:	add	x2, x9, x8, lsl #3
    e284:	bl	ca70 <__gmpn_add_n@plt>
    e288:	mov	w3, w25
    e28c:	cbnz	x0, e5f0 <mpfr_add1@@Base+0x59c>
    e290:	mov	w28, #0xffffffff            	// #-1
    e294:	mov	w21, #0xffffffff            	// #-1
    e298:	mov	w8, wzr
    e29c:	cmp	w8, #0xf
    e2a0:	b.eq	e414 <mpfr_add1@@Base+0x3c0>  // b.none
    e2a4:	cmp	w8, #0xe
    e2a8:	b.eq	e760 <mpfr_add1@@Base+0x70c>  // b.none
    e2ac:	cbnz	w8, e78c <mpfr_add1@@Base+0x738>
    e2b0:	cbz	w23, e324 <mpfr_add1@@Base+0x2d0>
    e2b4:	tbz	w21, #31, e324 <mpfr_add1@@Base+0x2d0>
    e2b8:	ldr	x10, [x22]
    e2bc:	mov	x8, #0xffffffffffffffff    	// #-1
    e2c0:	lsl	x9, x8, x23
    e2c4:	sub	w11, w23, #0x1
    e2c8:	bic	x8, x10, x9
    e2cc:	cmp	w23, #0x2
    e2d0:	and	x10, x10, x9
    e2d4:	lsr	x21, x8, x11
    e2d8:	str	x10, [x22]
    e2dc:	b.lt	e304 <mpfr_add1@@Base+0x2b0>  // b.tstop
    e2e0:	mvn	x9, x9
    e2e4:	lsr	x9, x9, #1
    e2e8:	ands	x8, x8, x9
    e2ec:	b.eq	e300 <mpfr_add1@@Base+0x2ac>  // b.none
    e2f0:	cmp	x8, x9
    e2f4:	b.ne	e314 <mpfr_add1@@Base+0x2c0>  // b.any
    e2f8:	mov	w28, #0x1                   	// #1
    e2fc:	b	e304 <mpfr_add1@@Base+0x2b0>
    e300:	mov	w28, wzr
    e304:	mov	w8, wzr
    e308:	cmp	w8, #0xf
    e30c:	b.ne	e320 <mpfr_add1@@Base+0x2cc>  // b.any
    e310:	b	e414 <mpfr_add1@@Base+0x3c0>
    e314:	mov	w8, #0xf                   	// #15
    e318:	cmp	w8, #0xf
    e31c:	b.eq	e414 <mpfr_add1@@Base+0x3c0>  // b.none
    e320:	cbnz	w8, e78c <mpfr_add1@@Base+0x738>
    e324:	add	x8, x27, #0x3f
    e328:	cmp	x27, #0x0
    e32c:	csel	x8, x8, x27, lt  // lt = tstop
    e330:	asr	x10, x8, #6
    e334:	ldur	x8, [x29, #-16]
    e338:	cmp	x24, x20
    e33c:	sub	x9, x8, x10
    e340:	b.gt	e820 <mpfr_add1@@Base+0x7cc>
    e344:	cmp	w28, #0x1
    e348:	b.eq	e414 <mpfr_add1@@Base+0x3c0>  // b.none
    e34c:	ldur	x8, [x29, #-24]
    e350:	subs	x8, x8, x9
    e354:	b.ge	e364 <mpfr_add1@@Base+0x310>  // b.tcont
    e358:	mov	w28, wzr
    e35c:	bic	w21, w21, w21, asr #31
    e360:	b	e414 <mpfr_add1@@Base+0x3c0>
    e364:	cmp	x27, x19
    e368:	b.ls	e378 <mpfr_add1@@Base+0x324>  // b.plast
    e36c:	bic	w21, w21, w21, asr #31
    e370:	mov	w28, #0x1                   	// #1
    e374:	b	e414 <mpfr_add1@@Base+0x3c0>
    e378:	sub	x9, x27, x10, lsl #6
    e37c:	cbnz	w9, e390 <mpfr_add1@@Base+0x33c>
    e380:	cbnz	x8, e390 <mpfr_add1@@Base+0x33c>
    e384:	mov	w28, wzr
    e388:	bic	w21, w21, w21, asr #31
    e38c:	b	e404 <mpfr_add1@@Base+0x3b0>
    e390:	cbz	w9, e3a8 <mpfr_add1@@Base+0x354>
    e394:	ldur	x12, [x29, #-32]
    e398:	neg	w9, w9
    e39c:	ldr	x10, [x12, x8, lsl #3]
    e3a0:	lsl	x9, x10, x9
    e3a4:	b	e3b4 <mpfr_add1@@Base+0x360>
    e3a8:	ldur	x12, [x29, #-32]
    e3ac:	sub	x8, x8, #0x1
    e3b0:	ldr	x9, [x12, x8, lsl #3]
    e3b4:	lsr	x10, x9, #63
    e3b8:	and	x11, x9, #0x7fffffffffffffff
    e3bc:	cmp	w21, #0x0
    e3c0:	csel	w21, w10, w21, lt  // lt = tstop
    e3c4:	csel	x9, x11, x9, lt  // lt = tstop
    e3c8:	cmp	w3, #0x5
    e3cc:	b.ne	e3e0 <mpfr_add1@@Base+0x38c>  // b.any
    e3d0:	cbnz	x9, e3e0 <mpfr_add1@@Base+0x38c>
    e3d4:	mov	w28, wzr
    e3d8:	mov	w8, #0xf                   	// #15
    e3dc:	b	e400 <mpfr_add1@@Base+0x3ac>
    e3e0:	cbnz	x9, e3f8 <mpfr_add1@@Base+0x3a4>
    e3e4:	sub	x9, x12, #0x8
    e3e8:	cbz	x8, e3d4 <mpfr_add1@@Base+0x380>
    e3ec:	ldr	x10, [x9, x8, lsl #3]
    e3f0:	sub	x8, x8, #0x1
    e3f4:	cbz	x10, e3e8 <mpfr_add1@@Base+0x394>
    e3f8:	mov	w8, wzr
    e3fc:	mov	w28, #0x1                   	// #1
    e400:	cbnz	w8, e408 <mpfr_add1@@Base+0x3b4>
    e404:	mov	w8, wzr
    e408:	cmp	w8, #0xf
    e40c:	b.eq	e414 <mpfr_add1@@Base+0x3c0>  // b.none
    e410:	cbnz	w8, e78c <mpfr_add1@@Base+0x738>
    e414:	cmp	w3, #0x5
    e418:	b.hi	e6c8 <mpfr_add1@@Base+0x674>  // b.pmore
    e41c:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x1854>
    e420:	mov	w8, w3
    e424:	add	x9, x9, #0xf1d
    e428:	adr	x10, e438 <mpfr_add1@@Base+0x3e4>
    e42c:	ldrb	w11, [x9, x8]
    e430:	add	x10, x10, x11, lsl #2
    e434:	br	x10
    e438:	cbz	w28, e454 <mpfr_add1@@Base+0x400>
    e43c:	ldur	x2, [x29, #-16]
    e440:	cbnz	w21, e468 <mpfr_add1@@Base+0x414>
    e444:	b	e480 <mpfr_add1@@Base+0x42c>
    e448:	orr	w8, w21, w28
    e44c:	cbnz	w8, e480 <mpfr_add1@@Base+0x42c>
    e450:	b	e498 <mpfr_add1@@Base+0x444>
    e454:	ldur	x2, [x29, #-16]
    e458:	cbz	w21, e498 <mpfr_add1@@Base+0x444>
    e45c:	ldr	x8, [x22]
    e460:	lsr	x8, x8, x23
    e464:	tbz	w8, #0, e480 <mpfr_add1@@Base+0x42c>
    e468:	ldur	x19, [x29, #-56]
    e46c:	ldr	w8, [x19, #8]
    e470:	cmp	w8, #0x1
    e474:	mov	w8, #0xffffffff            	// #-1
    e478:	cneg	w26, w8, ge  // ge = tcont
    e47c:	b	e71c <mpfr_add1@@Base+0x6c8>
    e480:	ldur	x19, [x29, #-56]
    e484:	ldr	w8, [x19, #8]
    e488:	cmp	w8, #0x0
    e48c:	mov	w8, #0xffffffff            	// #-1
    e490:	cneg	w26, w8, lt  // lt = tstop
    e494:	b	e738 <mpfr_add1@@Base+0x6e4>
    e498:	ldur	x19, [x29, #-56]
    e49c:	mov	w26, wzr
    e4a0:	b	e738 <mpfr_add1@@Base+0x6e4>
    e4a4:	add	x0, x28, #0x20
    e4a8:	mov	w19, w3
    e4ac:	bl	c0a0 <mpfr_ubf_zexp2exp@plt>
    e4b0:	mov	w3, w19
    e4b4:	mov	x8, x0
    e4b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    e4bc:	ldr	x1, [x0, #2768]
    e4c0:	add	x0, x0, #0xad0
    e4c4:	blr	x1
    e4c8:	mov	x14, x8
    e4cc:	mrs	x8, tpidr_el0
    e4d0:	ldr	x8, [x8, x0]
    e4d4:	cmp	x14, x8
    e4d8:	b.le	e094 <mpfr_add1@@Base+0x40>
    e4dc:	ldr	w2, [x28, #8]
    e4e0:	mov	x0, x21
    e4e4:	mov	w1, w3
    e4e8:	bl	c3a0 <mpfr_overflow@plt>
    e4ec:	mov	w26, w0
    e4f0:	b	e78c <mpfr_add1@@Base+0x738>
    e4f4:	lsl	x21, x26, #3
    e4f8:	cmp	x21, #0x4, lsl #12
    e4fc:	stur	w3, [x29, #-72]
    e500:	b.hi	ebdc <mpfr_add1@@Base+0xb88>  // b.pmore
    e504:	add	x9, x21, #0xf
    e508:	mov	x8, sp
    e50c:	and	x9, x9, #0xfffffffffffffff0
    e510:	sub	x0, x8, x9
    e514:	mov	sp, x0
    e518:	cmp	x22, x0
    e51c:	stur	x0, [x29, #-40]
    e520:	b.eq	e53c <mpfr_add1@@Base+0x4e8>  // b.none
    e524:	mov	x1, x22
    e528:	mov	x2, x21
    e52c:	bl	be50 <memcpy@plt>
    e530:	ldur	x0, [x29, #-40]
    e534:	ldur	x10, [x29, #-16]
    e538:	ldur	x14, [x29, #-64]
    e53c:	ldur	x21, [x29, #-56]
    e540:	ldur	w3, [x29, #-72]
    e544:	cmp	x22, x19
    e548:	csel	x19, x0, x19, eq  // eq = none
    e54c:	stur	x19, [x29, #-32]
    e550:	b	e16c <mpfr_add1@@Base+0x118>
    e554:	mov	x0, x28
    e558:	mov	x1, x27
    e55c:	bl	cff0 <mpfr_ubf_diff_exp@plt>
    e560:	ldur	x10, [x29, #-16]
    e564:	mov	w3, w25
    e568:	mov	x27, x0
    e56c:	cmp	x19, x27
    e570:	b.hi	e1cc <mpfr_add1@@Base+0x178>  // b.pmore
    e574:	ldur	x20, [x29, #-48]
    e578:	cmp	x24, x20
    e57c:	b.lt	ebf4 <mpfr_add1@@Base+0xba0>  // b.tstop
    e580:	ldur	x9, [x29, #-40]
    e584:	sub	x8, x26, x10
    e588:	add	x1, x9, x8, lsl #3
    e58c:	cmp	x22, x1
    e590:	b.eq	e5a4 <mpfr_add1@@Base+0x550>  // b.none
    e594:	lsl	x2, x10, #3
    e598:	mov	x0, x22
    e59c:	bl	be50 <memcpy@plt>
    e5a0:	mov	w3, w25
    e5a4:	mov	w28, #0xffffffff            	// #-1
    e5a8:	mov	w21, #0xffffffff            	// #-1
    e5ac:	b	e2b0 <mpfr_add1@@Base+0x25c>
    e5b0:	ldur	x20, [x29, #-24]
    e5b4:	mov	x0, x22
    e5b8:	mov	w1, wzr
    e5bc:	sub	x8, x28, x20
    e5c0:	lsl	x2, x8, #3
    e5c4:	bl	c5b0 <memset@plt>
    e5c8:	ldur	x10, [x29, #-16]
    e5cc:	mov	x28, x20
    e5d0:	b	e1f0 <mpfr_add1@@Base+0x19c>
    e5d4:	ldur	x20, [x29, #-48]
    e5d8:	cmp	x21, x1
    e5dc:	b.eq	e248 <mpfr_add1@@Base+0x1f4>  // b.none
    e5e0:	lsl	x2, x28, #3
    e5e4:	mov	x0, x21
    e5e8:	bl	be50 <memcpy@plt>
    e5ec:	b	e248 <mpfr_add1@@Base+0x1f4>
    e5f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    e5f4:	ldr	x1, [x0, #2768]
    e5f8:	add	x0, x0, #0xad0
    e5fc:	blr	x1
    e600:	mrs	x8, tpidr_el0
    e604:	ldr	x8, [x8, x0]
    e608:	ldur	x11, [x29, #-64]
    e60c:	cmp	x11, x8
    e610:	b.eq	ec38 <mpfr_add1@@Base+0xbe4>  // b.none
    e614:	ldr	x8, [x22]
    e618:	add	x11, x11, #0x1
    e61c:	stur	x11, [x29, #-64]
    e620:	lsr	x9, x8, x23
    e624:	and	w21, w9, #0x1
    e628:	cbz	w23, ec68 <mpfr_add1@@Base+0xc14>
    e62c:	and	x9, x23, #0xffffffff
    e630:	mov	x10, #0xffffffffffffffff    	// #-1
    e634:	lsl	x9, x10, x9
    e638:	bics	x10, x8, x9
    e63c:	and	x8, x8, x9, lsl #1
    e640:	str	x8, [x22]
    e644:	b.eq	e684 <mpfr_add1@@Base+0x630>  // b.none
    e648:	mvn	x8, x9
    e64c:	cmp	x10, x8
    e650:	mov	w8, #0x1                   	// #1
    e654:	cneg	w28, w8, ne  // ne = any
    e658:	b	e688 <mpfr_add1@@Base+0x634>
    e65c:	stur	x0, [x21, #-8]
    e660:	b	e248 <mpfr_add1@@Base+0x1f4>
    e664:	sub	x0, x29, #0x8
    e668:	mov	x1, x21
    e66c:	mov	w19, w3
    e670:	bl	c220 <mpfr_tmp_allocate@plt>
    e674:	ldur	x10, [x29, #-16]
    e678:	ldur	x14, [x29, #-64]
    e67c:	mov	w3, w19
    e680:	b	e140 <mpfr_add1@@Base+0xec>
    e684:	mov	w28, wzr
    e688:	ldur	x2, [x29, #-16]
    e68c:	mov	w3, #0x1                   	// #1
    e690:	mov	x0, x22
    e694:	mov	x1, x22
    e698:	bl	c140 <__gmpn_rshift@plt>
    e69c:	lsl	x8, x20, #3
    e6a0:	ldr	x9, [x22, x8]
    e6a4:	mov	w3, w25
    e6a8:	eor	x9, x9, #0x8000000000000000
    e6ac:	str	x9, [x22, x8]
    e6b0:	cbz	w23, e298 <mpfr_add1@@Base+0x244>
    e6b4:	tbz	w28, #31, e298 <mpfr_add1@@Base+0x244>
    e6b8:	mov	w8, #0xf                   	// #15
    e6bc:	cmp	w8, #0xf
    e6c0:	b.ne	e2a4 <mpfr_add1@@Base+0x250>  // b.any
    e6c4:	b	e414 <mpfr_add1@@Base+0x3c0>
    e6c8:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    e6cc:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    e6d0:	add	x0, x0, #0xf23
    e6d4:	add	x2, x2, #0xf2a
    e6d8:	mov	w1, #0x221                 	// #545
    e6dc:	bl	d030 <mpfr_assert_fail@plt>
    e6e0:	mov	w3, w25
    e6e4:	orr	w8, w21, w28
    e6e8:	cbz	w8, e70c <mpfr_add1@@Base+0x6b8>
    e6ec:	ldur	x19, [x29, #-56]
    e6f0:	ldr	w8, [x19, #8]
    e6f4:	cmp	w8, #0x1
    e6f8:	mov	w8, #0xffffffff            	// #-1
    e6fc:	cneg	w26, w8, ge  // ge = tcont
    e700:	ldur	x2, [x29, #-16]
    e704:	cbnz	w26, e71c <mpfr_add1@@Base+0x6c8>
    e708:	b	e738 <mpfr_add1@@Base+0x6e4>
    e70c:	ldur	x19, [x29, #-56]
    e710:	mov	w26, wzr
    e714:	ldur	x2, [x29, #-16]
    e718:	cbz	w26, e738 <mpfr_add1@@Base+0x6e4>
    e71c:	mov	w8, #0x1                   	// #1
    e720:	lsl	x3, x8, x23
    e724:	mov	x0, x22
    e728:	mov	x1, x22
    e72c:	bl	bf60 <__gmpn_add_1@plt>
    e730:	cbnz	x0, e7e8 <mpfr_add1@@Base+0x794>
    e734:	mov	w3, w25
    e738:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    e73c:	ldr	x1, [x0, #2736]
    e740:	add	x0, x0, #0xab0
    e744:	blr	x1
    e748:	mrs	x8, tpidr_el0
    e74c:	ldr	x8, [x8, x0]
    e750:	ldur	x9, [x29, #-64]
    e754:	cmp	x9, x8
    e758:	b.lt	e7bc <mpfr_add1@@Base+0x768>  // b.tstop
    e75c:	str	x9, [x19, #16]
    e760:	ldur	x0, [x29, #-8]
    e764:	cbnz	x0, e7b0 <mpfr_add1@@Base+0x75c>
    e768:	cbz	w26, e78c <mpfr_add1@@Base+0x738>
    e76c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    e770:	ldr	x1, [x0, #2800]
    e774:	add	x0, x0, #0xaf0
    e778:	blr	x1
    e77c:	mrs	x8, tpidr_el0
    e780:	ldr	w9, [x8, x0]
    e784:	orr	w9, w9, #0x8
    e788:	str	w9, [x8, x0]
    e78c:	mov	w0, w26
    e790:	mov	sp, x29
    e794:	ldp	x20, x19, [sp, #80]
    e798:	ldp	x22, x21, [sp, #64]
    e79c:	ldp	x24, x23, [sp, #48]
    e7a0:	ldp	x26, x25, [sp, #32]
    e7a4:	ldp	x28, x27, [sp, #16]
    e7a8:	ldp	x29, x30, [sp], #96
    e7ac:	ret
    e7b0:	bl	c8d0 <mpfr_tmp_free@plt>
    e7b4:	cbnz	w26, e76c <mpfr_add1@@Base+0x718>
    e7b8:	b	e78c <mpfr_add1@@Base+0x738>
    e7bc:	cbnz	w3, e8e4 <mpfr_add1@@Base+0x890>
    e7c0:	sub	x8, x8, #0x1
    e7c4:	cmp	x9, x8
    e7c8:	b.lt	e7e0 <mpfr_add1@@Base+0x78c>  // b.tstop
    e7cc:	tbnz	w26, #31, e8dc <mpfr_add1@@Base+0x888>
    e7d0:	ldur	x19, [x29, #-56]
    e7d4:	mov	x0, x19
    e7d8:	bl	c360 <mpfr_powerof2_raw@plt>
    e7dc:	cbz	w0, e8e0 <mpfr_add1@@Base+0x88c>
    e7e0:	mov	w3, #0x1                   	// #1
    e7e4:	b	e8e4 <mpfr_add1@@Base+0x890>
    e7e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    e7ec:	ldr	x1, [x0, #2768]
    e7f0:	add	x0, x0, #0xad0
    e7f4:	blr	x1
    e7f8:	mrs	x8, tpidr_el0
    e7fc:	ldr	x8, [x8, x0]
    e800:	ldur	x9, [x29, #-64]
    e804:	cmp	x9, x8
    e808:	b.eq	ed64 <mpfr_add1@@Base+0xd10>  // b.none
    e80c:	add	x9, x9, #0x1
    e810:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    e814:	stur	x9, [x29, #-64]
    e818:	str	x8, [x22, x20, lsl #3]
    e81c:	b	e734 <mpfr_add1@@Base+0x6e0>
    e820:	mov	x19, x23
    e824:	cmp	x9, #0x0
    e828:	mov	w10, #0xf                   	// #15
    e82c:	b.gt	e860 <mpfr_add1@@Base+0x80c>
    e830:	cbnz	w28, e860 <mpfr_add1@@Base+0x80c>
    e834:	mov	w28, #0x1                   	// #1
    e838:	mov	w8, #0xf                   	// #15
    e83c:	cbz	w8, e914 <mpfr_add1@@Base+0x8c0>
    e840:	cmp	w8, #0xe
    e844:	b.eq	e760 <mpfr_add1@@Base+0x70c>  // b.none
    e848:	ldur	x20, [x29, #-48]
    e84c:	cmp	w8, #0xf
    e850:	mov	w3, w25
    e854:	mov	x23, x19
    e858:	b.eq	e414 <mpfr_add1@@Base+0x3c0>  // b.none
    e85c:	b	e78c <mpfr_add1@@Base+0x738>
    e860:	ldp	x8, x14, [x29, #-48]
    e864:	mov	w13, w25
    e868:	mvn	x8, x8
    e86c:	add	x15, x8, x24
    e870:	b	e88c <mpfr_add1@@Base+0x838>
    e874:	cmp	x15, #0x0
    e878:	csel	w8, w10, wzr, eq  // eq = none
    e87c:	csinc	w28, w28, wzr, ne  // ne = any
    e880:	cinc	x9, x9, ne  // ne = any
    e884:	sub	x15, x15, #0x1
    e888:	cbnz	w8, e83c <mpfr_add1@@Base+0x7e8>
    e88c:	tbz	x9, #63, e8fc <mpfr_add1@@Base+0x8a8>
    e890:	ldr	x11, [x14, x15, lsl #3]
    e894:	cmp	w28, #0x1
    e898:	b.lt	e8b4 <mpfr_add1@@Base+0x860>  // b.tstop
    e89c:	cmp	w13, #0x5
    e8a0:	mov	w8, #0xf                   	// #15
    e8a4:	b.eq	e884 <mpfr_add1@@Base+0x830>  // b.none
    e8a8:	cmn	x11, #0x1
    e8ac:	b.eq	e874 <mpfr_add1@@Base+0x820>  // b.none
    e8b0:	b	e884 <mpfr_add1@@Base+0x830>
    e8b4:	lsr	x8, x11, #63
    e8b8:	orr	x12, x11, #0x8000000000000000
    e8bc:	cmp	w21, #0x0
    e8c0:	csel	w21, w8, w21, lt  // lt = tstop
    e8c4:	csel	x8, x12, x11, lt  // lt = tstop
    e8c8:	cmn	x8, #0x1
    e8cc:	mov	w28, #0x1                   	// #1
    e8d0:	b.eq	e874 <mpfr_add1@@Base+0x820>  // b.none
    e8d4:	mov	w8, #0xf                   	// #15
    e8d8:	b	e884 <mpfr_add1@@Base+0x830>
    e8dc:	ldur	x19, [x29, #-56]
    e8e0:	mov	w3, wzr
    e8e4:	ldr	w2, [x19, #8]
    e8e8:	mov	x0, x19
    e8ec:	mov	w1, w3
    e8f0:	bl	c880 <mpfr_underflow@plt>
    e8f4:	mov	w26, w0
    e8f8:	b	e760 <mpfr_add1@@Base+0x70c>
    e8fc:	ldur	x8, [x29, #-24]
    e900:	add	x10, x15, #0x1
    e904:	subs	x20, x8, x9
    e908:	b.ge	e924 <mpfr_add1@@Base+0x8d0>  // b.tcont
    e90c:	mov	x24, x10
    e910:	b	ecfc <mpfr_add1@@Base+0xca8>
    e914:	ldur	x20, [x29, #-48]
    e918:	mov	w3, w25
    e91c:	mov	x23, x19
    e920:	b	e414 <mpfr_add1@@Base+0x3c0>
    e924:	add	x8, x27, #0x3f
    e928:	cmp	x27, #0x0
    e92c:	csel	x8, x8, x27, lt  // lt = tstop
    e930:	and	x8, x8, #0xffffffffffffffc0
    e934:	mov	x24, x15
    e938:	sub	x27, x27, x8
    e93c:	cbnz	w27, e950 <mpfr_add1@@Base+0x8fc>
    e940:	cbnz	x20, e950 <mpfr_add1@@Base+0x8fc>
    e944:	mov	w8, #0x12                  	// #18
    e948:	mov	x24, x10
    e94c:	b	ecf0 <mpfr_add1@@Base+0xc9c>
    e950:	cbz	x9, e964 <mpfr_add1@@Base+0x910>
    e954:	ldur	x8, [x29, #-32]
    e958:	ldr	x8, [x8, x20, lsl #3]
    e95c:	stur	x8, [x29, #-24]
    e960:	b	e968 <mpfr_add1@@Base+0x914>
    e964:	stur	xzr, [x29, #-24]
    e968:	tbnz	w28, #31, eafc <mpfr_add1@@Base+0xaa8>
    e96c:	mov	x24, x10
    e970:	cmp	w25, #0x5
    e974:	b.ne	e980 <mpfr_add1@@Base+0x92c>  // b.any
    e978:	mov	w8, #0xf                   	// #15
    e97c:	b	ecf0 <mpfr_add1@@Base+0xc9c>
    e980:	mov	w8, #0x40                  	// #64
    e984:	and	x9, x27, #0xffffffff
    e988:	stur	x9, [x29, #-80]
    e98c:	mov	w9, #0x1                   	// #1
    e990:	sub	w8, w8, w27
    e994:	stur	x8, [x29, #-72]
    e998:	lsl	x8, x9, x19
    e99c:	mov	x9, x24
    e9a0:	stur	x8, [x29, #-88]
    e9a4:	b	e9b8 <mpfr_add1@@Base+0x964>
    e9a8:	mov	w8, #0x12                  	// #18
    e9ac:	mov	x24, x9
    e9b0:	mov	x9, x24
    e9b4:	cbnz	w8, ecf0 <mpfr_add1@@Base+0xc9c>
    e9b8:	subs	x24, x9, #0x1
    e9bc:	b.lt	eb2c <mpfr_add1@@Base+0xad8>  // b.tstop
    e9c0:	cbz	w27, e9fc <mpfr_add1@@Base+0x9a8>
    e9c4:	tbnz	x20, #63, e9a8 <mpfr_add1@@Base+0x954>
    e9c8:	ldur	x8, [x29, #-24]
    e9cc:	ldur	x9, [x29, #-72]
    e9d0:	lsl	x8, x8, x9
    e9d4:	sub	x9, x20, #0x1
    e9d8:	cbz	x20, ea10 <mpfr_add1@@Base+0x9bc>
    e9dc:	ldur	x10, [x29, #-32]
    e9e0:	ldur	x11, [x29, #-80]
    e9e4:	mov	x20, x9
    e9e8:	ldr	x10, [x10, x9, lsl #3]
    e9ec:	stur	x10, [x29, #-24]
    e9f0:	lsr	x10, x10, x11
    e9f4:	add	x8, x10, x8
    e9f8:	b	ea14 <mpfr_add1@@Base+0x9c0>
    e9fc:	cbz	x20, e9a8 <mpfr_add1@@Base+0x954>
    ea00:	ldur	x8, [x29, #-32]
    ea04:	sub	x20, x20, #0x1
    ea08:	ldr	x8, [x8, x20, lsl #3]
    ea0c:	b	ea14 <mpfr_add1@@Base+0x9c0>
    ea10:	mov	x20, x9
    ea14:	ldur	x9, [x29, #-40]
    ea18:	ldr	x9, [x9, x24, lsl #3]
    ea1c:	adds	x23, x9, x8
    ea20:	b.cc	eaac <mpfr_add1@@Base+0xa58>  // b.lo, b.ul, b.last
    ea24:	eor	w28, w28, #0x1
    ea28:	cbz	w28, ea34 <mpfr_add1@@Base+0x9e0>
    ea2c:	mov	w8, #0xf                   	// #15
    ea30:	b	e9b0 <mpfr_add1@@Base+0x95c>
    ea34:	eor	w21, w21, #0x1
    ea38:	cbz	w21, ea44 <mpfr_add1@@Base+0x9f0>
    ea3c:	mov	w28, wzr
    ea40:	b	eaac <mpfr_add1@@Base+0xa58>
    ea44:	ldur	x2, [x29, #-16]
    ea48:	ldur	x3, [x29, #-88]
    ea4c:	mov	x0, x22
    ea50:	mov	x1, x22
    ea54:	bl	bf60 <__gmpn_add_1@plt>
    ea58:	cbz	x0, eaa4 <mpfr_add1@@Base+0xa50>
    ea5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    ea60:	ldr	x1, [x0, #2768]
    ea64:	add	x0, x0, #0xad0
    ea68:	blr	x1
    ea6c:	mrs	x8, tpidr_el0
    ea70:	ldr	x8, [x8, x0]
    ea74:	ldur	x9, [x29, #-64]
    ea78:	cmp	x9, x8
    ea7c:	b.eq	ead8 <mpfr_add1@@Base+0xa84>  // b.none
    ea80:	ldur	x8, [x29, #-64]
    ea84:	mov	w28, wzr
    ea88:	mov	w21, wzr
    ea8c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
    ea90:	add	x8, x8, #0x1
    ea94:	stur	x8, [x29, #-64]
    ea98:	ldur	x8, [x29, #-48]
    ea9c:	str	x9, [x22, x8, lsl #3]
    eaa0:	b	eaac <mpfr_add1@@Base+0xa58>
    eaa4:	mov	w28, wzr
    eaa8:	mov	w21, wzr
    eaac:	cbz	x23, eac0 <mpfr_add1@@Base+0xa6c>
    eab0:	cbnz	w28, eac0 <mpfr_add1@@Base+0xa6c>
    eab4:	mov	w28, #0x1                   	// #1
    eab8:	mov	w8, #0xf                   	// #15
    eabc:	b	e9b0 <mpfr_add1@@Base+0x95c>
    eac0:	cmp	w28, #0x0
    eac4:	mov	x8, #0xffffffffffffffff    	// #-1
    eac8:	ccmp	x23, x8, #0x4, ne  // ne = any
    eacc:	mov	w8, #0xf                   	// #15
    ead0:	csel	w8, w8, wzr, ne  // ne = any
    ead4:	b	e9b0 <mpfr_add1@@Base+0x95c>
    ead8:	ldur	x0, [x29, #-56]
    eadc:	mov	w1, w25
    eae0:	ldr	w2, [x0, #8]
    eae4:	bl	c3a0 <mpfr_overflow@plt>
    eae8:	mov	w26, w0
    eaec:	mov	w28, wzr
    eaf0:	mov	w21, wzr
    eaf4:	mov	w8, #0xe                   	// #14
    eaf8:	b	e9b0 <mpfr_add1@@Base+0x95c>
    eafc:	cbz	w27, eb58 <mpfr_add1@@Base+0xb04>
    eb00:	ldur	x9, [x29, #-24]
    eb04:	neg	w8, w27
    eb08:	subs	x20, x20, #0x1
    eb0c:	lsl	x8, x9, x8
    eb10:	b.lt	eb64 <mpfr_add1@@Base+0xb10>  // b.tstop
    eb14:	ldur	x9, [x29, #-32]
    eb18:	ldr	x9, [x9, x20, lsl #3]
    eb1c:	stur	x9, [x29, #-24]
    eb20:	lsr	x9, x9, x27
    eb24:	add	x8, x9, x8
    eb28:	b	eb64 <mpfr_add1@@Base+0xb10>
    eb2c:	mov	w8, #0xf                   	// #15
    eb30:	cbnz	w28, ecec <mpfr_add1@@Base+0xc98>
    eb34:	tbnz	x20, #63, ecec <mpfr_add1@@Base+0xc98>
    eb38:	cbz	w27, ec70 <mpfr_add1@@Base+0xc1c>
    eb3c:	ldur	x10, [x29, #-24]
    eb40:	neg	w8, w27
    eb44:	lsl	x8, x10, x8
    eb48:	cbz	x8, ec70 <mpfr_add1@@Base+0xc1c>
    eb4c:	mov	w28, #0x1                   	// #1
    eb50:	mov	w8, #0xf                   	// #15
    eb54:	b	ecec <mpfr_add1@@Base+0xc98>
    eb58:	ldur	x8, [x29, #-32]
    eb5c:	sub	x20, x20, #0x1
    eb60:	ldr	x8, [x8, x20, lsl #3]
    eb64:	ldur	x9, [x29, #-40]
    eb68:	ldr	x9, [x9, x24, lsl #3]
    eb6c:	adds	x23, x9, x8
    eb70:	b.cc	ecb0 <mpfr_add1@@Base+0xc5c>  // b.lo, b.ul, b.last
    eb74:	tbnz	w21, #31, eb80 <mpfr_add1@@Base+0xb2c>
    eb78:	eor	w21, w21, #0x1
    eb7c:	cbnz	w21, ecb0 <mpfr_add1@@Base+0xc5c>
    eb80:	ldur	x2, [x29, #-16]
    eb84:	mov	w8, #0x1                   	// #1
    eb88:	lsl	x3, x8, x19
    eb8c:	mov	x0, x22
    eb90:	mov	x1, x22
    eb94:	bl	bf60 <__gmpn_add_1@plt>
    eb98:	cbz	x0, ecb0 <mpfr_add1@@Base+0xc5c>
    eb9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    eba0:	ldr	x1, [x0, #2768]
    eba4:	add	x0, x0, #0xad0
    eba8:	blr	x1
    ebac:	mrs	x8, tpidr_el0
    ebb0:	ldr	x8, [x8, x0]
    ebb4:	ldur	x9, [x29, #-64]
    ebb8:	cmp	x9, x8
    ebbc:	b.ne	ec94 <mpfr_add1@@Base+0xc40>  // b.any
    ebc0:	ldur	x0, [x29, #-56]
    ebc4:	mov	w1, w25
    ebc8:	ldr	w2, [x0, #8]
    ebcc:	bl	c3a0 <mpfr_overflow@plt>
    ebd0:	mov	w26, w0
    ebd4:	mov	w8, #0xe                   	// #14
    ebd8:	b	ecdc <mpfr_add1@@Base+0xc88>
    ebdc:	sub	x0, x29, #0x8
    ebe0:	mov	x1, x21
    ebe4:	bl	c220 <mpfr_tmp_allocate@plt>
    ebe8:	ldur	x10, [x29, #-16]
    ebec:	ldur	x14, [x29, #-64]
    ebf0:	b	e518 <mpfr_add1@@Base+0x4c4>
    ebf4:	ldur	x8, [x29, #-40]
    ebf8:	sub	x20, x10, x26
    ebfc:	add	x0, x22, x20, lsl #3
    ec00:	cmp	x0, x8
    ec04:	b.eq	ec14 <mpfr_add1@@Base+0xbc0>  // b.none
    ec08:	ldur	x1, [x29, #-40]
    ec0c:	lsl	x2, x26, #3
    ec10:	bl	be50 <memcpy@plt>
    ec14:	lsl	x2, x20, #3
    ec18:	mov	x0, x22
    ec1c:	mov	w1, wzr
    ec20:	bl	c5b0 <memset@plt>
    ec24:	ldur	x20, [x29, #-48]
    ec28:	mov	w28, #0xffffffff            	// #-1
    ec2c:	mov	w21, #0xffffffff            	// #-1
    ec30:	mov	w3, w25
    ec34:	b	e2b0 <mpfr_add1@@Base+0x25c>
    ec38:	ldur	x0, [x29, #-56]
    ec3c:	mov	w1, w3
    ec40:	ldr	w2, [x0, #8]
    ec44:	bl	c3a0 <mpfr_overflow@plt>
    ec48:	mov	w3, w25
    ec4c:	mov	w26, w0
    ec50:	mov	w28, #0xffffffff            	// #-1
    ec54:	mov	w8, #0xe                   	// #14
    ec58:	mov	w21, #0xffffffff            	// #-1
    ec5c:	cmp	w8, #0xf
    ec60:	b.ne	e2a4 <mpfr_add1@@Base+0x250>  // b.any
    ec64:	b	e414 <mpfr_add1@@Base+0x3c0>
    ec68:	mov	w28, #0xffffffff            	// #-1
    ec6c:	b	e688 <mpfr_add1@@Base+0x634>
    ec70:	ldur	x8, [x29, #-32]
    ec74:	mov	w28, #0x1                   	// #1
    ec78:	sub	x10, x8, #0x8
    ec7c:	mov	w8, #0xf                   	// #15
    ec80:	cbz	x20, ece4 <mpfr_add1@@Base+0xc90>
    ec84:	ldr	x11, [x10, x20, lsl #3]
    ec88:	sub	x20, x20, #0x1
    ec8c:	cbz	x11, ec80 <mpfr_add1@@Base+0xc2c>
    ec90:	b	ecec <mpfr_add1@@Base+0xc98>
    ec94:	ldur	x8, [x29, #-64]
    ec98:	ldur	x9, [x29, #-48]
    ec9c:	mov	w21, wzr
    eca0:	add	x8, x8, #0x1
    eca4:	stur	x8, [x29, #-64]
    eca8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    ecac:	str	x8, [x22, x9, lsl #3]
    ecb0:	tbz	w21, #31, ecc4 <mpfr_add1@@Base+0xc70>
    ecb4:	lsl	x8, x23, #1
    ecb8:	bfxil	x8, x23, #62, #1
    ecbc:	lsr	x21, x23, #63
    ecc0:	mov	x23, x8
    ecc4:	cmp	x23, #0x0
    ecc8:	add	x8, x23, #0x1
    eccc:	cset	w28, ne  // ne = any
    ecd0:	cmp	x8, #0x1
    ecd4:	mov	w8, #0xf                   	// #15
    ecd8:	csel	w8, w8, wzr, hi  // hi = pmore
    ecdc:	cbnz	w8, ecf0 <mpfr_add1@@Base+0xc9c>
    ece0:	b	e970 <mpfr_add1@@Base+0x91c>
    ece4:	mov	w8, wzr
    ece8:	mov	w28, wzr
    ecec:	mov	x24, x9
    ecf0:	cbz	w8, ed5c <mpfr_add1@@Base+0xd08>
    ecf4:	cmp	w8, #0x12
    ecf8:	b.ne	e83c <mpfr_add1@@Base+0x7e8>  // b.any
    ecfc:	tbz	w28, #31, ed30 <mpfr_add1@@Base+0xcdc>
    ed00:	ldur	x8, [x29, #-40]
    ed04:	mov	x9, x24
    ed08:	sub	x9, x24, #0x1
    ed0c:	cmp	w21, #0x0
    ed10:	ldr	x8, [x8, x9, lsl #3]
    ed14:	mov	x24, x9
    ed18:	and	x10, x8, #0x7fffffffffffffff
    ed1c:	lsr	x9, x8, #63
    ed20:	csel	x8, x10, x8, lt  // lt = tstop
    ed24:	csel	w21, w9, w21, lt  // lt = tstop
    ed28:	cmp	x8, #0x0
    ed2c:	cset	w28, ne  // ne = any
    ed30:	cmp	w25, #0x5
    ed34:	mov	w8, #0xf                   	// #15
    ed38:	b.eq	e83c <mpfr_add1@@Base+0x7e8>  // b.none
    ed3c:	cbnz	w28, e83c <mpfr_add1@@Base+0x7e8>
    ed40:	ldur	x8, [x29, #-40]
    ed44:	sub	x8, x8, #0x8
    ed48:	cbz	x24, ed5c <mpfr_add1@@Base+0xd08>
    ed4c:	ldr	x9, [x8, x24, lsl #3]
    ed50:	sub	x24, x24, #0x1
    ed54:	cbz	x9, ed48 <mpfr_add1@@Base+0xcf4>
    ed58:	b	e834 <mpfr_add1@@Base+0x7e0>
    ed5c:	mov	w8, wzr
    ed60:	b	e83c <mpfr_add1@@Base+0x7e8>
    ed64:	ldr	w2, [x19, #8]
    ed68:	mov	x0, x19
    ed6c:	mov	w1, w25
    ed70:	bl	c3a0 <mpfr_overflow@plt>
    ed74:	mov	w26, w0
    ed78:	b	e760 <mpfr_add1@@Base+0x70c>

000000000000ed7c <mpfr_add_ui@@Base>:
    ed7c:	sub	sp, sp, #0x80
    ed80:	stp	x20, x19, [sp, #112]
    ed84:	mov	w19, w3
    ed88:	mov	x8, x1
    ed8c:	mov	x20, x0
    ed90:	stp	x29, x30, [sp, #32]
    ed94:	str	x27, [sp, #48]
    ed98:	stp	x26, x25, [sp, #64]
    ed9c:	stp	x24, x23, [sp, #80]
    eda0:	stp	x22, x21, [sp, #96]
    eda4:	add	x29, sp, #0x20
    eda8:	cbz	x2, eecc <mpfr_add_ui@@Base+0x150>
    edac:	ldr	x10, [x8, #16]
    edb0:	mov	x9, #0x2                   	// #2
    edb4:	movk	x9, #0x8000, lsl #48
    edb8:	add	x11, x9, #0x2
    edbc:	cmp	x10, x11
    edc0:	b.lt	eee4 <mpfr_add_ui@@Base+0x168>  // b.tstop
    edc4:	add	x10, x29, #0x18
    edc8:	clz	x12, x2
    edcc:	mov	w9, #0x40                  	// #64
    edd0:	mov	w11, #0x1                   	// #1
    edd4:	str	x10, [sp, #24]
    edd8:	lsl	x10, x2, x12
    eddc:	str	x9, [sp]
    ede0:	str	w11, [sp, #8]
    ede4:	str	x10, [x29, #24]
    ede8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    edec:	ldr	x1, [x0, #2800]
    edf0:	add	x0, x0, #0xaf0
    edf4:	blr	x1
    edf8:	mrs	x24, tpidr_el0
    edfc:	ldr	w26, [x24, x0]
    ee00:	mov	x21, x0
    ee04:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    ee08:	ldr	x1, [x0, #2736]
    ee0c:	add	x0, x0, #0xab0
    ee10:	blr	x1
    ee14:	ldr	x25, [x24, x0]
    ee18:	mov	x22, x0
    ee1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    ee20:	ldr	x1, [x0, #2768]
    ee24:	add	x0, x0, #0xad0
    ee28:	blr	x1
    ee2c:	ldr	x27, [x24, x0]
    ee30:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
    ee34:	mov	x23, x0
    ee38:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
    ee3c:	str	x11, [x24, x0]
    ee40:	sub	x9, x9, x12
    ee44:	mov	x2, sp
    ee48:	mov	x0, x20
    ee4c:	mov	x1, x8
    ee50:	mov	w3, w19
    ee54:	str	x10, [x24, x22]
    ee58:	str	x9, [sp, #16]
    ee5c:	bl	c640 <mpfr_add@plt>
    ee60:	ldr	w8, [x24, x21]
    ee64:	str	x25, [x24, x22]
    ee68:	str	x27, [x24, x23]
    ee6c:	mov	w9, w0
    ee70:	orr	w8, w8, w26
    ee74:	str	w8, [x24, x21]
    ee78:	ldr	x10, [x20, #16]
    ee7c:	cmp	x10, x27
    ee80:	b.gt	ef2c <mpfr_add_ui@@Base+0x1b0>
    ee84:	cmp	x10, x25
    ee88:	b.lt	ef2c <mpfr_add_ui@@Base+0x1b0>  // b.tstop
    ee8c:	cbz	w9, eea8 <mpfr_add_ui@@Base+0x12c>
    ee90:	orr	w8, w8, #0x8
    ee94:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    ee98:	ldr	x1, [x0, #2800]
    ee9c:	add	x0, x0, #0xaf0
    eea0:	blr	x1
    eea4:	str	w8, [x24, x0]
    eea8:	ldp	x20, x19, [sp, #112]
    eeac:	ldp	x22, x21, [sp, #96]
    eeb0:	ldp	x24, x23, [sp, #80]
    eeb4:	ldp	x26, x25, [sp, #64]
    eeb8:	ldr	x27, [sp, #48]
    eebc:	ldp	x29, x30, [sp, #32]
    eec0:	mov	w0, w9
    eec4:	add	sp, sp, #0x80
    eec8:	ret
    eecc:	ldr	w3, [x8, #8]
    eed0:	mov	x0, x20
    eed4:	mov	x1, x8
    eed8:	mov	w2, w19
    eedc:	bl	cb70 <mpfr_set4@plt>
    eee0:	b	ef68 <mpfr_add_ui@@Base+0x1ec>
    eee4:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
    eee8:	cmp	x10, x11
    eeec:	b.eq	ef40 <mpfr_add_ui@@Base+0x1c4>  // b.none
    eef0:	mov	x8, #0x2                   	// #2
    eef4:	movk	x8, #0x8000, lsl #48
    eef8:	cmp	x10, x8
    eefc:	b.ne	ef54 <mpfr_add_ui@@Base+0x1d8>  // b.any
    ef00:	str	x9, [x20, #16]
    ef04:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    ef08:	ldr	x1, [x0, #2800]
    ef0c:	add	x0, x0, #0xaf0
    ef10:	blr	x1
    ef14:	mrs	x8, tpidr_el0
    ef18:	ldr	w10, [x8, x0]
    ef1c:	mov	w9, wzr
    ef20:	orr	w10, w10, #0x4
    ef24:	str	w10, [x8, x0]
    ef28:	b	eea8 <mpfr_add_ui@@Base+0x12c>
    ef2c:	mov	x0, x20
    ef30:	mov	w1, w9
    ef34:	mov	w2, w19
    ef38:	bl	d020 <mpfr_check_range@plt>
    ef3c:	b	ef68 <mpfr_add_ui@@Base+0x1ec>
    ef40:	str	x11, [x20, #16]
    ef44:	ldr	w8, [x8, #8]
    ef48:	mov	w9, wzr
    ef4c:	str	w8, [x20, #8]
    ef50:	b	eea8 <mpfr_add_ui@@Base+0x12c>
    ef54:	mov	x0, x20
    ef58:	mov	x1, x2
    ef5c:	mov	x2, xzr
    ef60:	mov	w3, w19
    ef64:	bl	cac0 <mpfr_set_ui_2exp@plt>
    ef68:	mov	w9, w0
    ef6c:	b	eea8 <mpfr_add_ui@@Base+0x12c>

000000000000ef70 <mpfr_agm@@Base>:
    ef70:	stp	x29, x30, [sp, #-96]!
    ef74:	stp	x28, x27, [sp, #16]
    ef78:	stp	x26, x25, [sp, #32]
    ef7c:	stp	x24, x23, [sp, #48]
    ef80:	stp	x22, x21, [sp, #64]
    ef84:	stp	x20, x19, [sp, #80]
    ef88:	mov	x29, sp
    ef8c:	sub	sp, sp, #0x150
    ef90:	sub	x8, x29, #0x14
    ef94:	stur	w3, [x8, #-256]
    ef98:	ldr	x8, [x2, #16]
    ef9c:	mov	x11, #0x2                   	// #2
    efa0:	movk	x11, #0x8000, lsl #48
    efa4:	add	x9, x11, #0x2
    efa8:	mov	x21, x2
    efac:	mov	x23, x1
    efb0:	cmp	x8, x9
    efb4:	mov	x22, x0
    efb8:	b.lt	f848 <mpfr_agm@@Base+0x8d8>  // b.tstop
    efbc:	ldr	x10, [x23, #16]
    efc0:	cmp	x10, x9
    efc4:	b.lt	f848 <mpfr_agm@@Base+0x8d8>  // b.tstop
    efc8:	ldr	w8, [x21, #8]
    efcc:	tbnz	w8, #31, f85c <mpfr_agm@@Base+0x8ec>
    efd0:	ldr	w8, [x23, #8]
    efd4:	tbnz	w8, #31, f85c <mpfr_agm@@Base+0x8ec>
    efd8:	ldr	x19, [x22]
    efdc:	subs	x20, x19, #0x1
    efe0:	b.eq	eff4 <mpfr_agm@@Base+0x84>  // b.none
    efe4:	b.le	f8a4 <mpfr_agm@@Base+0x934>
    efe8:	clz	x8, x20
    efec:	mov	w9, #0x40                  	// #64
    eff0:	sub	x20, x9, x8
    eff4:	mov	w2, #0x1                   	// #1
    eff8:	mov	x0, x21
    effc:	mov	x1, x23
    f000:	mov	w27, #0x1                   	// #1
    f004:	bl	ce90 <mpfr_cmp3@plt>
    f008:	cbz	w0, f888 <mpfr_agm@@Base+0x918>
    f00c:	sub	x8, x29, #0x28
    f010:	stur	x22, [x8, #-256]
    f014:	add	x8, x20, x19
    f018:	add	x9, x8, #0xe
    f01c:	add	x10, x8, #0x4d
    f020:	cmp	x9, #0x0
    f024:	add	x20, x8, #0xf
    f028:	csel	x8, x10, x9, lt  // lt = tstop
    f02c:	asr	x8, x8, #6
    f030:	cmp	w0, #0x0
    f034:	add	x8, x8, #0x1
    f038:	sub	x9, x29, #0x8
    f03c:	csel	x22, x23, x21, gt
    f040:	stur	x8, [x9, #-256]
    f044:	csel	x21, x21, x23, gt
    f048:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f04c:	ldr	x1, [x0, #2800]
    f050:	add	x0, x0, #0xaf0
    f054:	blr	x1
    f058:	mrs	x25, tpidr_el0
    f05c:	ldr	w8, [x25, x0]
    f060:	sub	x9, x29, #0x2c
    f064:	stur	w8, [x9, #-256]
    f068:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f06c:	ldr	x1, [x0, #2736]
    f070:	add	x0, x0, #0xab0
    f074:	blr	x1
    f078:	ldr	x9, [x25, x0]
    f07c:	sub	x10, x29, #0x38
    f080:	mov	x8, x0
    f084:	stur	x9, [x10, #-256]
    f088:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f08c:	ldr	x1, [x0, #2768]
    f090:	add	x0, x0, #0xad0
    f094:	blr	x1
    f098:	sub	x9, x29, #0x20
    f09c:	stur	xzr, [x9, #-256]
    f0a0:	ldr	x9, [x25, x0]
    f0a4:	sub	x10, x29, #0x40
    f0a8:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
    f0ac:	stur	xzr, [x29, #-208]
    f0b0:	stur	x9, [x10, #-256]
    f0b4:	sub	x9, x29, #0x14
    f0b8:	ldur	w9, [x9, #-256]
    f0bc:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
    f0c0:	str	x10, [x25, x8]
    f0c4:	str	x11, [x25, x0]
    f0c8:	cmp	w9, #0x0
    f0cc:	cinc	x8, x19, eq  // eq = none
    f0d0:	sub	x9, x29, #0x10
    f0d4:	stur	x8, [x9, #-256]
    f0d8:	mov	w8, #0x40                  	// #64
    f0dc:	sub	x9, x29, #0x48
    f0e0:	stur	x8, [x9, #-256]
    f0e4:	sub	x8, x29, #0x8
    f0e8:	ldur	x8, [x8, #-256]
    f0ec:	lsl	x23, x8, #3
    f0f0:	cmp	x23, #0x4, lsl #12
    f0f4:	b.hi	f6d8 <mpfr_agm@@Base+0x768>  // b.pmore
    f0f8:	add	x9, x23, #0xf
    f0fc:	mov	x8, sp
    f100:	and	x9, x9, #0xfffffffffffffff0
    f104:	sub	x0, x8, x9
    f108:	mov	sp, x0
    f10c:	cmp	x23, #0x4, lsl #12
    f110:	stur	x20, [x29, #-40]
    f114:	stur	x0, [x29, #-16]
    f118:	stur	w27, [x29, #-32]
    f11c:	b.hi	f138 <mpfr_agm@@Base+0x1c8>  // b.pmore
    f120:	add	x9, x23, #0xf
    f124:	mov	x8, sp
    f128:	and	x9, x9, #0xfffffffffffffff0
    f12c:	sub	x0, x8, x9
    f130:	mov	sp, x0
    f134:	b	f144 <mpfr_agm@@Base+0x1d4>
    f138:	sub	x0, x29, #0xd0
    f13c:	mov	x1, x23
    f140:	bl	c220 <mpfr_tmp_allocate@plt>
    f144:	cmp	x23, #0x4, lsl #12
    f148:	stur	x20, [x29, #-72]
    f14c:	stur	x0, [x29, #-48]
    f150:	stur	w27, [x29, #-64]
    f154:	b.hi	f170 <mpfr_agm@@Base+0x200>  // b.pmore
    f158:	add	x9, x23, #0xf
    f15c:	mov	x8, sp
    f160:	and	x9, x9, #0xfffffffffffffff0
    f164:	sub	x0, x8, x9
    f168:	mov	sp, x0
    f16c:	b	f17c <mpfr_agm@@Base+0x20c>
    f170:	sub	x0, x29, #0xd0
    f174:	mov	x1, x23
    f178:	bl	c220 <mpfr_tmp_allocate@plt>
    f17c:	cmp	x23, #0x4, lsl #12
    f180:	stur	x20, [x29, #-104]
    f184:	stur	x0, [x29, #-80]
    f188:	stur	w27, [x29, #-96]
    f18c:	b.hi	f1a8 <mpfr_agm@@Base+0x238>  // b.pmore
    f190:	add	x9, x23, #0xf
    f194:	mov	x8, sp
    f198:	and	x9, x9, #0xfffffffffffffff0
    f19c:	sub	x0, x8, x9
    f1a0:	mov	sp, x0
    f1a4:	b	f1b4 <mpfr_agm@@Base+0x244>
    f1a8:	sub	x0, x29, #0xd0
    f1ac:	mov	x1, x23
    f1b0:	bl	c220 <mpfr_tmp_allocate@plt>
    f1b4:	stur	x20, [x29, #-136]
    f1b8:	stur	x0, [x29, #-112]
    f1bc:	stur	w27, [x29, #-128]
    f1c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f1c4:	ldr	x1, [x0, #2800]
    f1c8:	add	x0, x0, #0xaf0
    f1cc:	blr	x1
    f1d0:	mov	x23, x0
    f1d4:	str	wzr, [x25, x0]
    f1d8:	sub	x0, x29, #0x28
    f1dc:	mov	x1, x22
    f1e0:	mov	x2, x21
    f1e4:	mov	w3, wzr
    f1e8:	bl	c1b0 <mpfr_mul@plt>
    f1ec:	sub	x0, x29, #0x48
    f1f0:	mov	x1, x22
    f1f4:	mov	x2, x21
    f1f8:	mov	w3, wzr
    f1fc:	bl	c640 <mpfr_add@plt>
    f200:	ldr	w24, [x25, x23]
    f204:	tst	w24, #0x3
    f208:	b.eq	f388 <mpfr_agm@@Base+0x418>  // b.none
    f20c:	sub	x8, x29, #0x20
    f210:	ldur	x8, [x8, #-256]
    f214:	cbnz	x8, f318 <mpfr_agm@@Base+0x3a8>
    f218:	ldr	x23, [x22, #16]
    f21c:	ldr	x19, [x21, #16]
    f220:	tbnz	w24, #1, f284 <mpfr_agm@@Base+0x314>
    f224:	cmp	x19, #0x0
    f228:	b.gt	f334 <mpfr_agm@@Base+0x3c4>
    f22c:	cmp	x23, x19
    f230:	b.gt	f334 <mpfr_agm@@Base+0x3c4>
    f234:	add	x8, x23, x19
    f238:	mov	x9, #0xc000000000000003    	// #-4611686018427387901
    f23c:	mov	x10, #0x4                   	// #4
    f240:	sub	x9, x9, x8
    f244:	movk	x10, #0xc000, lsl #48
    f248:	sub	x8, x10, x8
    f24c:	cmp	x9, #0x0
    f250:	csel	x8, x8, x9, lt  // lt = tstop
    f254:	cmp	x9, #0x1
    f258:	asr	x10, x8, #1
    f25c:	b.gt	f2cc <mpfr_agm@@Base+0x35c>
    f260:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f264:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
    f268:	mov	w1, #0xc3                  	// #195
    f26c:	add	x0, x0, #0xf40
    f270:	add	x2, x2, #0xe
    f274:	mov	x24, x10
    f278:	bl	d030 <mpfr_assert_fail@plt>
    f27c:	mov	x10, x24
    f280:	b	f2cc <mpfr_agm@@Base+0x35c>
    f284:	add	x8, x19, x23
    f288:	mov	x9, #0x4000000000000000    	// #4611686018427387904
    f28c:	cmp	x8, x9
    f290:	b.lt	f2b0 <mpfr_agm@@Base+0x340>  // b.tstop
    f294:	mov	x9, #0x2                   	// #2
    f298:	movk	x9, #0xc000, lsl #48
    f29c:	add	x8, x8, x9
    f2a0:	cmp	x8, #0x0
    f2a4:	cinc	x8, x8, lt  // lt = tstop
    f2a8:	neg	x10, x8, asr #1
    f2ac:	b	f2cc <mpfr_agm@@Base+0x35c>
    f2b0:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
    f2b4:	cmp	x19, x8
    f2b8:	b.ne	f350 <mpfr_agm@@Base+0x3e0>  // b.any
    f2bc:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
    f2c0:	cmp	x23, x8
    f2c4:	b.le	f36c <mpfr_agm@@Base+0x3fc>
    f2c8:	mov	x10, #0xffffffffffffffff    	// #-1
    f2cc:	ldr	x8, [x22]
    f2d0:	add	x9, x10, x23
    f2d4:	stur	x8, [x29, #-168]
    f2d8:	ldr	w8, [x22, #8]
    f2dc:	stur	w8, [x29, #-160]
    f2e0:	ldr	x8, [x22, #24]
    f2e4:	sub	x22, x29, #0xa8
    f2e8:	stp	x9, x8, [x29, #-152]
    f2ec:	ldr	x8, [x21]
    f2f0:	sub	x9, x29, #0x20
    f2f4:	stur	x10, [x9, #-256]
    f2f8:	add	x9, x10, x19
    f2fc:	stur	x8, [x29, #-200]
    f300:	ldr	w8, [x21, #8]
    f304:	stur	w8, [x29, #-192]
    f308:	ldr	x8, [x21, #24]
    f30c:	sub	x21, x29, #0xc8
    f310:	stp	x9, x8, [x29, #-184]
    f314:	b	f1c0 <mpfr_agm@@Base+0x250>
    f318:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f31c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    f320:	mov	w1, #0x8d                  	// #141
    f324:	add	x0, x0, #0xf40
    f328:	add	x2, x2, #0xf4e
    f32c:	bl	d030 <mpfr_assert_fail@plt>
    f330:	b	f218 <mpfr_agm@@Base+0x2a8>
    f334:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f338:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    f33c:	mov	w1, #0xc1                  	// #193
    f340:	add	x0, x0, #0xf40
    f344:	add	x2, x2, #0xffa
    f348:	bl	d030 <mpfr_assert_fail@plt>
    f34c:	b	f234 <mpfr_agm@@Base+0x2c4>
    f350:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f354:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    f358:	mov	w1, #0xaf                  	// #175
    f35c:	add	x0, x0, #0xf40
    f360:	add	x2, x2, #0xf5b
    f364:	bl	d030 <mpfr_assert_fail@plt>
    f368:	b	f2bc <mpfr_agm@@Base+0x34c>
    f36c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f370:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    f374:	mov	w1, #0xb3                  	// #179
    f378:	add	x0, x0, #0xf40
    f37c:	add	x2, x2, #0xfab
    f380:	bl	d030 <mpfr_assert_fail@plt>
    f384:	b	f2c8 <mpfr_agm@@Base+0x358>
    f388:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f38c:	ldr	x1, [x0, #2800]
    f390:	add	x0, x0, #0xaf0
    f394:	blr	x1
    f398:	str	wzr, [x25, x0]
    f39c:	sub	x0, x29, #0x28
    f3a0:	sub	x1, x29, #0x28
    f3a4:	mov	w2, wzr
    f3a8:	bl	ce20 <mpfr_sqrt@plt>
    f3ac:	sub	x0, x29, #0x48
    f3b0:	sub	x1, x29, #0x48
    f3b4:	mov	w2, #0x1                   	// #1
    f3b8:	mov	w3, wzr
    f3bc:	bl	cde0 <mpfr_div_2ui@plt>
    f3c0:	add	x8, x20, #0x1
    f3c4:	add	x9, x20, #0x2
    f3c8:	cmp	x8, #0x0
    f3cc:	csinc	x8, x9, x20, lt  // lt = tstop
    f3d0:	mov	x19, xzr
    f3d4:	sub	x26, x20, #0x2
    f3d8:	asr	x23, x8, #1
    f3dc:	mov	w24, #0x1                   	// #1
    f3e0:	stur	xzr, [x29, #-256]
    f3e4:	sub	x0, x29, #0x28
    f3e8:	sub	x1, x29, #0x48
    f3ec:	sub	x2, x29, #0xd8
    f3f0:	bl	c210 <mpfr_cmp2@plt>
    f3f4:	cbz	w0, f5cc <mpfr_agm@@Base+0x65c>
    f3f8:	ldur	x8, [x29, #-216]
    f3fc:	cmp	x8, x26
    f400:	b.gt	f5cc <mpfr_agm@@Base+0x65c>
    f404:	sub	x0, x29, #0x88
    f408:	sub	x1, x29, #0x28
    f40c:	sub	x2, x29, #0x48
    f410:	mov	w3, wzr
    f414:	bl	c640 <mpfr_add@plt>
    f418:	sub	x0, x29, #0x88
    f41c:	sub	x1, x29, #0x88
    f420:	mov	w2, #0x1                   	// #1
    f424:	mov	w3, wzr
    f428:	bl	cde0 <mpfr_div_2ui@plt>
    f42c:	ldur	x8, [x29, #-216]
    f430:	cmp	x20, x8, lsl #2
    f434:	b.ge	f4e0 <mpfr_agm@@Base+0x570>  // b.tcont
    f438:	sub	x0, x29, #0xf8
    f43c:	mov	x1, x23
    f440:	bl	cf60 <mpfr_init2@plt>
    f444:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f448:	ldr	x1, [x0, #2800]
    f44c:	add	x0, x0, #0xaf0
    f450:	blr	x1
    f454:	mov	x28, x0
    f458:	str	wzr, [x25, x0]
    f45c:	sub	x0, x29, #0xf8
    f460:	sub	x1, x29, #0x48
    f464:	sub	x2, x29, #0x28
    f468:	mov	w3, wzr
    f46c:	bl	bfd0 <mpfr_sub@plt>
    f470:	sub	x0, x29, #0xf8
    f474:	sub	x1, x29, #0xf8
    f478:	mov	w2, wzr
    f47c:	bl	c8c0 <mpfr_sqr@plt>
    f480:	sub	x0, x29, #0xf8
    f484:	sub	x1, x29, #0xf8
    f488:	mov	w2, #0x4                   	// #4
    f48c:	mov	w3, wzr
    f490:	bl	cde0 <mpfr_div_2ui@plt>
    f494:	sub	x0, x29, #0xf8
    f498:	sub	x1, x29, #0xf8
    f49c:	sub	x2, x29, #0x88
    f4a0:	mov	w3, wzr
    f4a4:	bl	caf0 <mpfr_div@plt>
    f4a8:	ldrb	w8, [x25, x28]
    f4ac:	tbnz	w8, #0, f574 <mpfr_agm@@Base+0x604>
    f4b0:	sub	x0, x29, #0x48
    f4b4:	sub	x1, x29, #0x88
    f4b8:	sub	x2, x29, #0xf8
    f4bc:	mov	w3, wzr
    f4c0:	bl	bfd0 <mpfr_sub@plt>
    f4c4:	ldur	x8, [x29, #-120]
    f4c8:	ldur	x9, [x29, #-56]
    f4cc:	sub	x0, x29, #0xf8
    f4d0:	sub	x19, x8, x9
    f4d4:	bl	c4f0 <mpfr_clear@plt>
    f4d8:	mov	w8, wzr
    f4dc:	cbz	w8, f5c8 <mpfr_agm@@Base+0x658>
    f4e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f4e4:	ldr	x1, [x0, #2800]
    f4e8:	add	x0, x0, #0xaf0
    f4ec:	blr	x1
    f4f0:	mov	x28, x0
    f4f4:	str	wzr, [x25, x0]
    f4f8:	sub	x0, x29, #0x68
    f4fc:	sub	x1, x29, #0x28
    f500:	sub	x2, x29, #0x48
    f504:	mov	w3, wzr
    f508:	bl	c1b0 <mpfr_mul@plt>
    f50c:	ldr	w8, [x25, x28]
    f510:	tbz	w8, #1, f5a4 <mpfr_agm@@Base+0x634>
    f514:	ldur	x9, [x29, #-24]
    f518:	ldur	x10, [x29, #-56]
    f51c:	mov	x12, #0x2                   	// #2
    f520:	movk	x12, #0xc000, lsl #48
    f524:	add	x11, x9, x10
    f528:	add	x11, x11, x12
    f52c:	cmp	x11, #0x0
    f530:	ldur	x12, [x29, #-256]
    f534:	cinc	x11, x11, lt  // lt = tstop
    f538:	asr	x11, x11, #1
    f53c:	sub	x9, x9, x11
    f540:	sub	x10, x10, x11
    f544:	sub	x12, x12, x11
    f548:	stur	x9, [x29, #-24]
    f54c:	mov	w9, #0x3d                  	// #61
    f550:	stur	x12, [x29, #-256]
    f554:	stur	x10, [x29, #-56]
    f558:	and	w8, w8, w9
    f55c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f560:	ldr	x1, [x0, #2800]
    f564:	add	x0, x0, #0xaf0
    f568:	blr	x1
    f56c:	str	w8, [x25, x0]
    f570:	b	f404 <mpfr_agm@@Base+0x494>
    f574:	sub	x0, x29, #0xf8
    f578:	bl	c4f0 <mpfr_clear@plt>
    f57c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f580:	ldr	x1, [x0, #2800]
    f584:	add	x0, x0, #0xaf0
    f588:	blr	x1
    f58c:	ldr	w8, [x25, x0]
    f590:	and	w8, w8, #0x3e
    f594:	str	w8, [x25, x0]
    f598:	mov	w8, #0x1                   	// #1
    f59c:	cbnz	w8, f4e0 <mpfr_agm@@Base+0x570>
    f5a0:	b	f5c8 <mpfr_agm@@Base+0x658>
    f5a4:	sub	x0, x29, #0x28
    f5a8:	sub	x1, x29, #0x68
    f5ac:	mov	w2, wzr
    f5b0:	bl	ce20 <mpfr_sqrt@plt>
    f5b4:	sub	x0, x29, #0x48
    f5b8:	sub	x1, x29, #0x88
    f5bc:	bl	c970 <mpfr_swap@plt>
    f5c0:	add	x24, x24, #0x1
    f5c4:	mov	w8, #0x1                   	// #1
    f5c8:	tbnz	w8, #0, f3e4 <mpfr_agm@@Base+0x474>
    f5cc:	cmn	x24, #0x1
    f5d0:	b.eq	f6e8 <mpfr_agm@@Base+0x778>  // b.none
    f5d4:	mov	x23, #0x2                   	// #2
    f5d8:	cmn	x24, #0x2
    f5dc:	movk	x23, #0x8000, lsl #48
    f5e0:	b.eq	f6f8 <mpfr_agm@@Base+0x788>  // b.none
    f5e4:	add	x8, x24, #0x1
    f5e8:	clz	x8, x8
    f5ec:	mov	w9, #0x40                  	// #64
    f5f0:	sub	x8, x9, x8
    f5f4:	add	x9, x20, #0x3
    f5f8:	cmp	x20, #0x0
    f5fc:	csel	x9, x9, x20, lt  // lt = tstop
    f600:	cmp	x8, x9, asr #2
    f604:	b.gt	f678 <mpfr_agm@@Base+0x708>
    f608:	ldur	x8, [x29, #-56]
    f60c:	add	x9, x23, #0x2
    f610:	cmp	x8, x9
    f614:	b.lt	f678 <mpfr_agm@@Base+0x708>  // b.tstop
    f618:	ldur	x9, [x29, #-72]
    f61c:	add	x8, x24, x24, lsl #3
    f620:	lsl	x8, x8, #1
    f624:	add	x11, x8, #0x32
    f628:	sub	x12, x9, #0x1
    f62c:	add	x9, x9, #0x3e
    f630:	cmp	x12, #0x0
    f634:	csel	x9, x9, x12, lt  // lt = tstop
    f638:	cmn	x8, #0x32
    f63c:	asr	x8, x9, #6
    f640:	add	x1, x8, #0x1
    f644:	sub	x8, x29, #0x10
    f648:	ldur	x0, [x29, #-48]
    f64c:	clz	x11, x11
    f650:	ldur	x3, [x8, #-256]
    f654:	sub	x11, x11, #0x40
    f658:	sub	x10, x20, x19
    f65c:	csel	x9, xzr, x11, eq  // eq = none
    f660:	add	x2, x10, x9
    f664:	bl	c830 <mpfr_round_p@plt>
    f668:	cbz	w0, f678 <mpfr_agm@@Base+0x708>
    f66c:	mov	w8, wzr
    f670:	tbnz	w8, #0, f0e4 <mpfr_agm@@Base+0x174>
    f674:	b	f738 <mpfr_agm@@Base+0x7c8>
    f678:	sub	x9, x29, #0x48
    f67c:	ldur	x9, [x9, #-256]
    f680:	sub	x8, x23, x20
    f684:	sub	x8, x8, #0x103
    f688:	cmp	x9, x8
    f68c:	mov	x8, x9
    f690:	b.gt	f714 <mpfr_agm@@Base+0x7a4>
    f694:	add	x20, x20, x8
    f698:	cmp	x20, #0x0
    f69c:	sub	x8, x20, #0x1
    f6a0:	add	x9, x20, #0x3e
    f6a4:	cinc	x10, x20, lt  // lt = tstop
    f6a8:	cmp	x8, #0x0
    f6ac:	csel	x8, x9, x8, lt  // lt = tstop
    f6b0:	asr	x8, x8, #6
    f6b4:	add	x8, x8, #0x1
    f6b8:	sub	x9, x29, #0x8
    f6bc:	asr	x10, x10, #1
    f6c0:	sub	x11, x29, #0x48
    f6c4:	stur	x8, [x9, #-256]
    f6c8:	mov	w8, #0x1                   	// #1
    f6cc:	stur	x10, [x11, #-256]
    f6d0:	tbnz	w8, #0, f0e4 <mpfr_agm@@Base+0x174>
    f6d4:	b	f738 <mpfr_agm@@Base+0x7c8>
    f6d8:	sub	x0, x29, #0xd0
    f6dc:	mov	x1, x23
    f6e0:	bl	c220 <mpfr_tmp_allocate@plt>
    f6e4:	b	f10c <mpfr_agm@@Base+0x19c>
    f6e8:	mov	x23, #0x2                   	// #2
    f6ec:	mov	x8, xzr
    f6f0:	movk	x23, #0x8000, lsl #48
    f6f4:	b	f5f4 <mpfr_agm@@Base+0x684>
    f6f8:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f6fc:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
    f700:	mov	w1, #0x11a                 	// #282
    f704:	add	x0, x0, #0xf40
    f708:	add	x2, x2, #0x1a
    f70c:	bl	d030 <mpfr_assert_fail@plt>
    f710:	b	f5e4 <mpfr_agm@@Base+0x674>
    f714:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f718:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
    f71c:	mov	w1, #0x11f                 	// #287
    f720:	add	x0, x0, #0xf40
    f724:	add	x2, x2, #0x26
    f728:	bl	d030 <mpfr_assert_fail@plt>
    f72c:	sub	x8, x29, #0x48
    f730:	ldur	x8, [x8, #-256]
    f734:	b	f694 <mpfr_agm@@Base+0x724>
    f738:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f73c:	ldr	x1, [x0, #2800]
    f740:	add	x0, x0, #0xaf0
    f744:	blr	x1
    f748:	ldr	w8, [x25, x0]
    f74c:	mov	w9, #0x37                  	// #55
    f750:	tst	w8, w9
    f754:	sub	x9, x29, #0x28
    f758:	ldur	x19, [x9, #-256]
    f75c:	sub	x9, x29, #0x38
    f760:	ldur	x20, [x9, #-256]
    f764:	b.ne	f8c0 <mpfr_agm@@Base+0x950>  // b.any
    f768:	sub	x8, x29, #0x14
    f76c:	ldur	w3, [x29, #-64]
    f770:	ldur	w2, [x8, #-256]
    f774:	sub	x1, x29, #0x48
    f778:	mov	x0, x19
    f77c:	bl	cb70 <mpfr_set4@plt>
    f780:	sub	x9, x29, #0x20
    f784:	ldur	x9, [x9, #-256]
    f788:	ldur	x10, [x29, #-256]
    f78c:	ldr	x8, [x19, #16]
    f790:	mov	w21, w0
    f794:	add	x9, x10, x9
    f798:	sub	x8, x8, x9
    f79c:	str	x8, [x19, #16]
    f7a0:	ldur	x8, [x29, #-208]
    f7a4:	cbnz	x8, f928 <mpfr_agm@@Base+0x9b8>
    f7a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f7ac:	ldr	x1, [x0, #2800]
    f7b0:	add	x0, x0, #0xaf0
    f7b4:	blr	x1
    f7b8:	sub	x8, x29, #0x2c
    f7bc:	ldur	w9, [x8, #-256]
    f7c0:	str	w9, [x25, x0]
    f7c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f7c8:	ldr	x1, [x0, #2736]
    f7cc:	add	x0, x0, #0xab0
    f7d0:	blr	x1
    f7d4:	str	x20, [x25, x0]
    f7d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f7dc:	ldr	x1, [x0, #2768]
    f7e0:	add	x0, x0, #0xad0
    f7e4:	blr	x1
    f7e8:	sub	x8, x29, #0x40
    f7ec:	ldur	x10, [x8, #-256]
    f7f0:	str	x10, [x25, x0]
    f7f4:	ldr	x8, [x19, #16]
    f7f8:	cmp	x8, x10
    f7fc:	b.gt	f934 <mpfr_agm@@Base+0x9c4>
    f800:	cmp	x8, x20
    f804:	b.lt	f934 <mpfr_agm@@Base+0x9c4>  // b.tstop
    f808:	cbz	w21, f824 <mpfr_agm@@Base+0x8b4>
    f80c:	orr	w8, w9, #0x8
    f810:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f814:	ldr	x1, [x0, #2800]
    f818:	add	x0, x0, #0xaf0
    f81c:	blr	x1
    f820:	str	w8, [x25, x0]
    f824:	mov	w0, w21
    f828:	mov	sp, x29
    f82c:	ldp	x20, x19, [sp, #80]
    f830:	ldp	x22, x21, [sp, #64]
    f834:	ldp	x24, x23, [sp, #48]
    f838:	ldp	x26, x25, [sp, #32]
    f83c:	ldp	x28, x27, [sp, #16]
    f840:	ldp	x29, x30, [sp], #96
    f844:	ret
    f848:	cmp	x8, x11
    f84c:	b.eq	f85c <mpfr_agm@@Base+0x8ec>  // b.none
    f850:	ldr	x9, [x23, #16]
    f854:	cmp	x9, x11
    f858:	b.ne	f950 <mpfr_agm@@Base+0x9e0>  // b.any
    f85c:	str	x11, [x22, #16]
    f860:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f864:	ldr	x1, [x0, #2800]
    f868:	add	x0, x0, #0xaf0
    f86c:	blr	x1
    f870:	mrs	x8, tpidr_el0
    f874:	ldr	w9, [x8, x0]
    f878:	mov	w21, wzr
    f87c:	orr	w9, w9, #0x4
    f880:	str	w9, [x8, x0]
    f884:	b	f824 <mpfr_agm@@Base+0x8b4>
    f888:	sub	x8, x29, #0x14
    f88c:	ldr	w3, [x21, #8]
    f890:	ldur	w2, [x8, #-256]
    f894:	mov	x0, x22
    f898:	mov	x1, x21
    f89c:	bl	cb70 <mpfr_set4@plt>
    f8a0:	b	f948 <mpfr_agm@@Base+0x9d8>
    f8a4:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f8a8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
    f8ac:	add	x0, x0, #0xf40
    f8b0:	add	x2, x2, #0xf46
    f8b4:	mov	w1, #0x5f                  	// #95
    f8b8:	bl	d030 <mpfr_assert_fail@plt>
    f8bc:	b	efe8 <mpfr_agm@@Base+0x78>
    f8c0:	tbnz	w8, #1, f9bc <mpfr_agm@@Base+0xa4c>
    f8c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f8c8:	ldr	x1, [x0, #2800]
    f8cc:	add	x0, x0, #0xaf0
    f8d0:	blr	x1
    f8d4:	ldrb	w8, [x25, x0]
    f8d8:	tbnz	w8, #0, f9d8 <mpfr_agm@@Base+0xa68>
    f8dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f8e0:	ldr	x1, [x0, #2800]
    f8e4:	add	x0, x0, #0xaf0
    f8e8:	blr	x1
    f8ec:	ldrb	w8, [x25, x0]
    f8f0:	tbnz	w8, #5, f9f4 <mpfr_agm@@Base+0xa84>
    f8f4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    f8f8:	ldr	x1, [x0, #2800]
    f8fc:	add	x0, x0, #0xaf0
    f900:	blr	x1
    f904:	ldrb	w8, [x25, x0]
    f908:	tbz	w8, #2, f768 <mpfr_agm@@Base+0x7f8>
    f90c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f910:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
    f914:	add	x0, x0, #0xf40
    f918:	add	x2, x2, #0xc4
    f91c:	mov	w1, #0x12a                 	// #298
    f920:	bl	d030 <mpfr_assert_fail@plt>
    f924:	b	f768 <mpfr_agm@@Base+0x7f8>
    f928:	mov	x0, x8
    f92c:	bl	c8d0 <mpfr_tmp_free@plt>
    f930:	b	f7a8 <mpfr_agm@@Base+0x838>
    f934:	sub	x8, x29, #0x14
    f938:	ldur	w2, [x8, #-256]
    f93c:	mov	x0, x19
    f940:	mov	w1, w21
    f944:	bl	d020 <mpfr_check_range@plt>
    f948:	mov	w21, w0
    f94c:	b	f824 <mpfr_agm@@Base+0x8b4>
    f950:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    f954:	cmp	x8, x10
    f958:	b.eq	f97c <mpfr_agm@@Base+0xa0c>  // b.none
    f95c:	cmp	x9, x10
    f960:	b.eq	f97c <mpfr_agm@@Base+0xa0c>  // b.none
    f964:	mov	w8, #0x1                   	// #1
    f968:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f96c:	mov	w21, wzr
    f970:	str	w8, [x22, #8]
    f974:	str	x9, [x22, #16]
    f978:	b	f824 <mpfr_agm@@Base+0x8b4>
    f97c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    f980:	cmp	x8, x10
    f984:	b.eq	f85c <mpfr_agm@@Base+0x8ec>  // b.none
    f988:	cmp	x9, x10
    f98c:	b.eq	f85c <mpfr_agm@@Base+0x8ec>  // b.none
    f990:	ldr	w8, [x21, #8]
    f994:	cmp	w8, #0x1
    f998:	b.lt	f85c <mpfr_agm@@Base+0x8ec>  // b.tstop
    f99c:	ldr	w9, [x23, #8]
    f9a0:	cmp	w9, #0x1
    f9a4:	b.lt	f85c <mpfr_agm@@Base+0x8ec>  // b.tstop
    f9a8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    f9ac:	mov	w21, wzr
    f9b0:	str	x9, [x22, #16]
    f9b4:	str	w8, [x22, #8]
    f9b8:	b	f824 <mpfr_agm@@Base+0x8b4>
    f9bc:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f9c0:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
    f9c4:	add	x0, x0, #0xf40
    f9c8:	add	x2, x2, #0x69
    f9cc:	mov	w1, #0x127                 	// #295
    f9d0:	bl	d030 <mpfr_assert_fail@plt>
    f9d4:	b	f8c4 <mpfr_agm@@Base+0x954>
    f9d8:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f9dc:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
    f9e0:	add	x0, x0, #0xf40
    f9e4:	add	x2, x2, #0x87
    f9e8:	mov	w1, #0x128                 	// #296
    f9ec:	bl	d030 <mpfr_assert_fail@plt>
    f9f0:	b	f8dc <mpfr_agm@@Base+0x96c>
    f9f4:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
    f9f8:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
    f9fc:	add	x0, x0, #0xf40
    fa00:	add	x2, x2, #0xa5
    fa04:	mov	w1, #0x129                 	// #297
    fa08:	bl	d030 <mpfr_assert_fail@plt>
    fa0c:	b	f8f4 <mpfr_agm@@Base+0x984>

000000000000fa10 <mpfr_clear@@Base>:
    fa10:	stp	x29, x30, [sp, #-32]!
    fa14:	str	x19, [sp, #16]
    fa18:	mov	x19, x0
    fa1c:	ldr	x0, [x0, #24]
    fa20:	mov	x29, sp
    fa24:	ldr	x8, [x0, #-8]!
    fa28:	lsl	x8, x8, #3
    fa2c:	add	x1, x8, #0x8
    fa30:	bl	d120 <mpfr_free_func@plt>
    fa34:	str	xzr, [x19, #24]
    fa38:	ldr	x19, [sp, #16]
    fa3c:	ldp	x29, x30, [sp], #32
    fa40:	ret

000000000000fa44 <mpfr_cmp3@@Base>:
    fa44:	stp	x29, x30, [sp, #-16]!
    fa48:	ldr	x10, [x0, #16]
    fa4c:	ldr	w9, [x1, #8]
    fa50:	mov	x11, #0x2                   	// #2
    fa54:	movk	x11, #0x8000, lsl #48
    fa58:	add	x8, x11, #0x2
    fa5c:	cmp	x10, x8
    fa60:	mul	w9, w9, w2
    fa64:	mov	x29, sp
    fa68:	b.lt	fb3c <mpfr_cmp3@@Base+0xf8>  // b.tstop
    fa6c:	ldr	x12, [x1, #16]
    fa70:	cmp	x12, x8
    fa74:	b.lt	fb3c <mpfr_cmp3@@Base+0xf8>  // b.tstop
    fa78:	ldr	w8, [x0, #8]
    fa7c:	cmp	w9, w8
    fa80:	b.ne	fa9c <mpfr_cmp3@@Base+0x58>  // b.any
    fa84:	cmp	x10, x12
    fa88:	b.le	fa94 <mpfr_cmp3@@Base+0x50>
    fa8c:	mov	w8, w9
    fa90:	b	fa9c <mpfr_cmp3@@Base+0x58>
    fa94:	b.ge	faa8 <mpfr_cmp3@@Base+0x64>  // b.tcont
    fa98:	neg	w8, w9
    fa9c:	mov	w0, w8
    faa0:	ldp	x29, x30, [sp], #16
    faa4:	ret
    faa8:	ldr	x10, [x0]
    faac:	ldr	x11, [x1]
    fab0:	ldr	x8, [x0, #24]
    fab4:	sub	x12, x10, #0x1
    fab8:	add	x10, x10, #0x3e
    fabc:	cmp	x12, #0x0
    fac0:	csel	x10, x10, x12, lt  // lt = tstop
    fac4:	sub	x13, x11, #0x1
    fac8:	asr	x12, x10, #6
    facc:	ldr	x10, [x1, #24]
    fad0:	add	x11, x11, #0x3e
    fad4:	cmp	x13, #0x0
    fad8:	csel	x11, x11, x13, lt  // lt = tstop
    fadc:	asr	x11, x11, #6
    fae0:	orr	x13, x11, x12
    fae4:	tbnz	x13, #63, fb0c <mpfr_cmp3@@Base+0xc8>
    fae8:	ldr	x13, [x8, x12, lsl #3]
    faec:	ldr	x14, [x10, x11, lsl #3]
    faf0:	cmp	x13, x14
    faf4:	b.hi	fa8c <mpfr_cmp3@@Base+0x48>  // b.pmore
    faf8:	b.cc	fa98 <mpfr_cmp3@@Base+0x54>  // b.lo, b.ul, b.last
    fafc:	sub	x12, x12, #0x1
    fb00:	sub	x11, x11, #0x1
    fb04:	orr	x13, x11, x12
    fb08:	tbz	x13, #63, fae8 <mpfr_cmp3@@Base+0xa4>
    fb0c:	tbnz	x12, #63, fb24 <mpfr_cmp3@@Base+0xe0>
    fb10:	ldr	x13, [x8, x12, lsl #3]
    fb14:	cbnz	x13, fa8c <mpfr_cmp3@@Base+0x48>
    fb18:	cmp	x12, #0x0
    fb1c:	sub	x12, x12, #0x1
    fb20:	b.gt	fb10 <mpfr_cmp3@@Base+0xcc>
    fb24:	tbnz	x11, #63, fb98 <mpfr_cmp3@@Base+0x154>
    fb28:	ldr	x8, [x10, x11, lsl #3]
    fb2c:	cbnz	x8, fa98 <mpfr_cmp3@@Base+0x54>
    fb30:	subs	x11, x11, #0x1
    fb34:	b.ge	fb28 <mpfr_cmp3@@Base+0xe4>  // b.tcont
    fb38:	b	fa9c <mpfr_cmp3@@Base+0x58>
    fb3c:	cmp	x10, x11
    fb40:	b.eq	fb50 <mpfr_cmp3@@Base+0x10c>  // b.none
    fb44:	ldr	x8, [x1, #16]
    fb48:	cmp	x8, x11
    fb4c:	b.ne	fb78 <mpfr_cmp3@@Base+0x134>  // b.any
    fb50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    fb54:	ldr	x1, [x0, #2800]
    fb58:	add	x0, x0, #0xaf0
    fb5c:	blr	x1
    fb60:	mrs	x9, tpidr_el0
    fb64:	ldr	w10, [x9, x0]
    fb68:	mov	w8, wzr
    fb6c:	orr	w10, w10, #0x10
    fb70:	str	w10, [x9, x0]
    fb74:	b	fa9c <mpfr_cmp3@@Base+0x58>
    fb78:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
    fb7c:	cmp	x10, x11
    fb80:	b.ne	fba0 <mpfr_cmp3@@Base+0x15c>  // b.any
    fb84:	cmp	x8, x11
    fb88:	b.ne	fbc0 <mpfr_cmp3@@Base+0x17c>  // b.any
    fb8c:	ldr	w8, [x0, #8]
    fb90:	cmp	w9, w8
    fb94:	b.ne	fbc0 <mpfr_cmp3@@Base+0x17c>  // b.any
    fb98:	mov	w8, wzr
    fb9c:	b	fa9c <mpfr_cmp3@@Base+0x58>
    fba0:	cmp	x8, x11
    fba4:	b.eq	fa98 <mpfr_cmp3@@Base+0x54>  // b.none
    fba8:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    fbac:	cmp	x10, x11
    fbb0:	b.ne	fbc0 <mpfr_cmp3@@Base+0x17c>  // b.any
    fbb4:	cmp	x8, x11
    fbb8:	csneg	w8, wzr, w9, eq  // eq = none
    fbbc:	b	fa9c <mpfr_cmp3@@Base+0x58>
    fbc0:	ldr	w8, [x0, #8]
    fbc4:	b	fa9c <mpfr_cmp3@@Base+0x58>

000000000000fbc8 <mpfr_cmp@@Base>:
    fbc8:	stp	x29, x30, [sp, #-16]!
    fbcc:	mov	w2, #0x1                   	// #1
    fbd0:	mov	x29, sp
    fbd4:	bl	ce90 <mpfr_cmp3@plt>
    fbd8:	ldp	x29, x30, [sp], #16
    fbdc:	ret

000000000000fbe0 <mpfr_cmpabs@@Base>:
    fbe0:	stp	x29, x30, [sp, #-16]!
    fbe4:	ldr	x8, [x0, #16]
    fbe8:	mov	x9, #0x2                   	// #2
    fbec:	movk	x9, #0x8000, lsl #48
    fbf0:	add	x10, x9, #0x2
    fbf4:	cmp	x8, x10
    fbf8:	mov	x29, sp
    fbfc:	b.lt	fcc8 <mpfr_cmpabs@@Base+0xe8>  // b.tstop
    fc00:	ldr	x11, [x1, #16]
    fc04:	cmp	x11, x10
    fc08:	b.lt	fcc8 <mpfr_cmpabs@@Base+0xe8>  // b.tstop
    fc0c:	cmp	x8, x11
    fc10:	b.le	fc20 <mpfr_cmpabs@@Base+0x40>
    fc14:	mov	w0, #0x1                   	// #1
    fc18:	ldp	x29, x30, [sp], #16
    fc1c:	ret
    fc20:	b.ge	fc30 <mpfr_cmpabs@@Base+0x50>  // b.tcont
    fc24:	mov	w0, #0xffffffff            	// #-1
    fc28:	ldp	x29, x30, [sp], #16
    fc2c:	ret
    fc30:	ldr	x8, [x0]
    fc34:	ldr	x9, [x1]
    fc38:	ldr	x10, [x0, #24]
    fc3c:	sub	x11, x8, #0x1
    fc40:	add	x8, x8, #0x3e
    fc44:	cmp	x11, #0x0
    fc48:	csel	x8, x8, x11, lt  // lt = tstop
    fc4c:	sub	x12, x9, #0x1
    fc50:	asr	x11, x8, #6
    fc54:	ldr	x8, [x1, #24]
    fc58:	add	x9, x9, #0x3e
    fc5c:	cmp	x12, #0x0
    fc60:	csel	x9, x9, x12, lt  // lt = tstop
    fc64:	asr	x9, x9, #6
    fc68:	orr	x12, x11, x9
    fc6c:	tbnz	x12, #63, fc94 <mpfr_cmpabs@@Base+0xb4>
    fc70:	ldr	x12, [x10, x11, lsl #3]
    fc74:	ldr	x13, [x8, x9, lsl #3]
    fc78:	cmp	x12, x13
    fc7c:	b.hi	fc14 <mpfr_cmpabs@@Base+0x34>  // b.pmore
    fc80:	b.cc	fc24 <mpfr_cmpabs@@Base+0x44>  // b.lo, b.ul, b.last
    fc84:	sub	x11, x11, #0x1
    fc88:	sub	x9, x9, #0x1
    fc8c:	orr	x12, x11, x9
    fc90:	tbz	x12, #63, fc70 <mpfr_cmpabs@@Base+0x90>
    fc94:	tbnz	x11, #63, fcac <mpfr_cmpabs@@Base+0xcc>
    fc98:	ldr	x12, [x10, x11, lsl #3]
    fc9c:	cbnz	x12, fc14 <mpfr_cmpabs@@Base+0x34>
    fca0:	cmp	x11, #0x0
    fca4:	sub	x11, x11, #0x1
    fca8:	b.gt	fc98 <mpfr_cmpabs@@Base+0xb8>
    fcac:	mov	w0, wzr
    fcb0:	tbnz	x9, #63, fc28 <mpfr_cmpabs@@Base+0x48>
    fcb4:	ldr	x10, [x8, x9, lsl #3]
    fcb8:	cbnz	x10, fc24 <mpfr_cmpabs@@Base+0x44>
    fcbc:	subs	x9, x9, #0x1
    fcc0:	b.ge	fcb4 <mpfr_cmpabs@@Base+0xd4>  // b.tcont
    fcc4:	b	fc28 <mpfr_cmpabs@@Base+0x48>
    fcc8:	cmp	x8, x9
    fccc:	b.eq	fcdc <mpfr_cmpabs@@Base+0xfc>  // b.none
    fcd0:	ldr	x10, [x1, #16]
    fcd4:	cmp	x10, x9
    fcd8:	b.ne	fd0c <mpfr_cmpabs@@Base+0x12c>  // b.any
    fcdc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    fce0:	ldr	x1, [x0, #2800]
    fce4:	add	x0, x0, #0xaf0
    fce8:	blr	x1
    fcec:	mov	x8, x0
    fcf0:	mrs	x9, tpidr_el0
    fcf4:	ldr	w10, [x9, x8]
    fcf8:	mov	w0, wzr
    fcfc:	orr	w10, w10, #0x10
    fd00:	str	w10, [x9, x8]
    fd04:	ldp	x29, x30, [sp], #16
    fd08:	ret
    fd0c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    fd10:	cmp	x8, x9
    fd14:	b.ne	fd20 <mpfr_cmpabs@@Base+0x140>  // b.any
    fd18:	cmp	x10, x9
    fd1c:	b	fd30 <mpfr_cmpabs@@Base+0x150>
    fd20:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    fd24:	cmp	x10, x9
    fd28:	b.ne	fc24 <mpfr_cmpabs@@Base+0x44>  // b.any
    fd2c:	cmp	x8, x9
    fd30:	cset	w0, ne  // ne = any
    fd34:	ldp	x29, x30, [sp], #16
    fd38:	ret

000000000000fd3c <mpfr_cmp_si_2exp@@Base>:
    fd3c:	stp	x29, x30, [sp, #-16]!
    fd40:	ldr	x10, [x0, #16]
    fd44:	cmp	x1, #0x0
    fd48:	mov	w8, #0xffffffff            	// #-1
    fd4c:	cneg	w9, w8, ge  // ge = tcont
    fd50:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    fd54:	cmp	x10, x8
    fd58:	mov	x29, sp
    fd5c:	b.le	fe24 <mpfr_cmp_si_2exp@@Base+0xe8>
    fd60:	ldr	w8, [x0, #8]
    fd64:	cbz	x1, fdc4 <mpfr_cmp_si_2exp@@Base+0x88>
    fd68:	cmp	w8, w9
    fd6c:	b.ne	fdc4 <mpfr_cmp_si_2exp@@Base+0x88>  // b.any
    fd70:	cmp	x1, #0x0
    fd74:	cneg	x8, x1, mi  // mi = first
    fd78:	cmp	x10, x2
    fd7c:	b.le	fdc0 <mpfr_cmp_si_2exp@@Base+0x84>
    fd80:	mov	x11, #0xffffffffffffffbe    	// #-66
    fd84:	movk	x11, #0x3fff, lsl #48
    fd88:	cmp	x2, x11
    fd8c:	b.gt	fd9c <mpfr_cmp_si_2exp@@Base+0x60>
    fd90:	add	x11, x2, #0x40
    fd94:	cmp	x10, x11
    fd98:	b.gt	fdb4 <mpfr_cmp_si_2exp@@Base+0x78>
    fd9c:	clz	x11, x8
    fda0:	mov	w12, #0x40                  	// #64
    fda4:	sub	w10, w10, w2
    fda8:	sub	w12, w12, w11
    fdac:	cmp	w12, w10
    fdb0:	b.ge	fdbc <mpfr_cmp_si_2exp@@Base+0x80>  // b.tcont
    fdb4:	mov	w8, w9
    fdb8:	b	fdc4 <mpfr_cmp_si_2exp@@Base+0x88>
    fdbc:	b.le	fdd0 <mpfr_cmp_si_2exp@@Base+0x94>
    fdc0:	neg	w8, w9
    fdc4:	mov	w0, w8
    fdc8:	ldp	x29, x30, [sp], #16
    fdcc:	ret
    fdd0:	ldr	x10, [x0]
    fdd4:	ldr	x12, [x0, #24]
    fdd8:	lsl	x8, x8, x11
    fddc:	sub	x13, x10, #0x1
    fde0:	add	x10, x10, #0x3e
    fde4:	cmp	x13, #0x0
    fde8:	csel	x10, x10, x13, lt  // lt = tstop
    fdec:	asr	x10, x10, #6
    fdf0:	ldr	x13, [x12, x10, lsl #3]
    fdf4:	cmp	x13, x8
    fdf8:	b.hi	fdb4 <mpfr_cmp_si_2exp@@Base+0x78>  // b.pmore
    fdfc:	b.cc	fdc0 <mpfr_cmp_si_2exp@@Base+0x84>  // b.lo, b.ul, b.last
    fe00:	sub	x8, x12, #0x8
    fe04:	subs	x11, x10, #0x1
    fe08:	b.lt	fe1c <mpfr_cmp_si_2exp@@Base+0xe0>  // b.tstop
    fe0c:	ldr	x12, [x8, x10, lsl #3]
    fe10:	mov	x10, x11
    fe14:	cbz	x12, fe04 <mpfr_cmp_si_2exp@@Base+0xc8>
    fe18:	b	fdb4 <mpfr_cmp_si_2exp@@Base+0x78>
    fe1c:	mov	w8, wzr
    fe20:	b	fdc4 <mpfr_cmp_si_2exp@@Base+0x88>
    fe24:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    fe28:	cmp	x10, x8
    fe2c:	b.eq	fe44 <mpfr_cmp_si_2exp@@Base+0x108>  // b.none
    fe30:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    fe34:	cmp	x10, x8
    fe38:	b.ne	fe50 <mpfr_cmp_si_2exp@@Base+0x114>  // b.any
    fe3c:	ldr	w8, [x0, #8]
    fe40:	b	fdc4 <mpfr_cmp_si_2exp@@Base+0x88>
    fe44:	cmp	x1, #0x0
    fe48:	csneg	w8, wzr, w9, eq  // eq = none
    fe4c:	b	fdc4 <mpfr_cmp_si_2exp@@Base+0x88>
    fe50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    fe54:	ldr	x1, [x0, #2800]
    fe58:	add	x0, x0, #0xaf0
    fe5c:	blr	x1
    fe60:	mrs	x9, tpidr_el0
    fe64:	ldr	w10, [x9, x0]
    fe68:	mov	w8, wzr
    fe6c:	orr	w10, w10, #0x10
    fe70:	str	w10, [x9, x0]
    fe74:	b	fdc4 <mpfr_cmp_si_2exp@@Base+0x88>

000000000000fe78 <mpfr_cmp_si@@Base>:
    fe78:	stp	x29, x30, [sp, #-16]!
    fe7c:	mov	x2, xzr
    fe80:	mov	x29, sp
    fe84:	bl	c890 <mpfr_cmp_si_2exp@plt>
    fe88:	ldp	x29, x30, [sp], #16
    fe8c:	ret

000000000000fe90 <mpfr_cmp_ui_2exp@@Base>:
    fe90:	stp	x29, x30, [sp, #-16]!
    fe94:	ldr	x8, [x0, #16]
    fe98:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    fe9c:	mov	x29, sp
    fea0:	cmp	x8, x9
    fea4:	b.le	ff6c <mpfr_cmp_ui_2exp@@Base+0xdc>
    fea8:	ldr	w9, [x0, #8]
    feac:	tbnz	w9, #31, ff30 <mpfr_cmp_ui_2exp@@Base+0xa0>
    feb0:	cbz	x1, ff20 <mpfr_cmp_ui_2exp@@Base+0x90>
    feb4:	cmp	x8, x2
    feb8:	b.le	ff30 <mpfr_cmp_ui_2exp@@Base+0xa0>
    febc:	mov	x9, #0xffffffffffffffbe    	// #-66
    fec0:	movk	x9, #0x3fff, lsl #48
    fec4:	cmp	x2, x9
    fec8:	b.gt	fed8 <mpfr_cmp_ui_2exp@@Base+0x48>
    fecc:	add	x9, x2, #0x40
    fed0:	cmp	x8, x9
    fed4:	b.gt	ff20 <mpfr_cmp_ui_2exp@@Base+0x90>
    fed8:	clz	x9, x1
    fedc:	mov	w10, #0x40                  	// #64
    fee0:	sub	w8, w8, w2
    fee4:	sub	w10, w10, w9
    fee8:	cmp	w10, w8
    feec:	b.lt	ff20 <mpfr_cmp_ui_2exp@@Base+0x90>  // b.tstop
    fef0:	b.gt	ff30 <mpfr_cmp_ui_2exp@@Base+0xa0>
    fef4:	ldr	x8, [x0]
    fef8:	ldr	x10, [x0, #24]
    fefc:	lsl	x9, x1, x9
    ff00:	sub	x11, x8, #0x1
    ff04:	add	x8, x8, #0x3e
    ff08:	cmp	x11, #0x0
    ff0c:	csel	x8, x8, x11, lt  // lt = tstop
    ff10:	asr	x8, x8, #6
    ff14:	ldr	x11, [x10, x8, lsl #3]
    ff18:	cmp	x11, x9
    ff1c:	b.ls	ff2c <mpfr_cmp_ui_2exp@@Base+0x9c>  // b.plast
    ff20:	mov	w0, #0x1                   	// #1
    ff24:	ldp	x29, x30, [sp], #16
    ff28:	ret
    ff2c:	b.cs	ff3c <mpfr_cmp_ui_2exp@@Base+0xac>  // b.hs, b.nlast
    ff30:	mov	w0, #0xffffffff            	// #-1
    ff34:	ldp	x29, x30, [sp], #16
    ff38:	ret
    ff3c:	sub	x9, x10, #0x8
    ff40:	mov	w0, #0x1                   	// #1
    ff44:	subs	x10, x8, #0x1
    ff48:	b.lt	ff60 <mpfr_cmp_ui_2exp@@Base+0xd0>  // b.tstop
    ff4c:	ldr	x11, [x9, x8, lsl #3]
    ff50:	mov	x8, x10
    ff54:	cbz	x11, ff44 <mpfr_cmp_ui_2exp@@Base+0xb4>
    ff58:	ldp	x29, x30, [sp], #16
    ff5c:	ret
    ff60:	mov	w0, wzr
    ff64:	ldp	x29, x30, [sp], #16
    ff68:	ret
    ff6c:	b.eq	ffb0 <mpfr_cmp_ui_2exp@@Base+0x120>  // b.none
    ff70:	mov	x9, #0x2                   	// #2
    ff74:	movk	x9, #0x8000, lsl #48
    ff78:	cmp	x8, x9
    ff7c:	b.ne	ffbc <mpfr_cmp_ui_2exp@@Base+0x12c>  // b.any
    ff80:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
    ff84:	ldr	x1, [x0, #2800]
    ff88:	add	x0, x0, #0xaf0
    ff8c:	blr	x1
    ff90:	mov	x8, x0
    ff94:	mrs	x9, tpidr_el0
    ff98:	ldr	w10, [x9, x8]
    ff9c:	mov	w0, wzr
    ffa0:	orr	w10, w10, #0x10
    ffa4:	str	w10, [x9, x8]
    ffa8:	ldp	x29, x30, [sp], #16
    ffac:	ret
    ffb0:	ldr	w0, [x0, #8]
    ffb4:	ldp	x29, x30, [sp], #16
    ffb8:	ret
    ffbc:	cmp	x1, #0x0
    ffc0:	csetm	w0, ne  // ne = any
    ffc4:	ldp	x29, x30, [sp], #16
    ffc8:	ret

000000000000ffcc <mpfr_cmp_ui@@Base>:
    ffcc:	stp	x29, x30, [sp, #-16]!
    ffd0:	mov	x2, xzr
    ffd4:	mov	x29, sp
    ffd8:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
    ffdc:	ldp	x29, x30, [sp], #16
    ffe0:	ret

000000000000ffe4 <mpfr_greater_p@@Base>:
    ffe4:	stp	x29, x30, [sp, #-16]!
    ffe8:	ldr	x9, [x0, #16]
    ffec:	mov	x8, #0x2                   	// #2
    fff0:	movk	x8, #0x8000, lsl #48
    fff4:	mov	x29, sp
    fff8:	cmp	x9, x8
    fffc:	b.eq	1000c <mpfr_greater_p@@Base+0x28>  // b.none
   10000:	ldr	x9, [x1, #16]
   10004:	cmp	x9, x8
   10008:	b.ne	10018 <mpfr_greater_p@@Base+0x34>  // b.any
   1000c:	mov	w0, wzr
   10010:	ldp	x29, x30, [sp], #16
   10014:	ret
   10018:	mov	w2, #0x1                   	// #1
   1001c:	bl	ce90 <mpfr_cmp3@plt>
   10020:	cmp	w0, #0x0
   10024:	cset	w0, gt
   10028:	ldp	x29, x30, [sp], #16
   1002c:	ret

0000000000010030 <mpfr_greaterequal_p@@Base>:
   10030:	stp	x29, x30, [sp, #-16]!
   10034:	ldr	x9, [x0, #16]
   10038:	mov	x8, #0x2                   	// #2
   1003c:	movk	x8, #0x8000, lsl #48
   10040:	mov	x29, sp
   10044:	cmp	x9, x8
   10048:	b.eq	10058 <mpfr_greaterequal_p@@Base+0x28>  // b.none
   1004c:	ldr	x9, [x1, #16]
   10050:	cmp	x9, x8
   10054:	b.ne	10064 <mpfr_greaterequal_p@@Base+0x34>  // b.any
   10058:	mov	w0, wzr
   1005c:	ldp	x29, x30, [sp], #16
   10060:	ret
   10064:	mov	w2, #0x1                   	// #1
   10068:	bl	ce90 <mpfr_cmp3@plt>
   1006c:	mvn	w8, w0
   10070:	lsr	w0, w8, #31
   10074:	ldp	x29, x30, [sp], #16
   10078:	ret

000000000001007c <mpfr_less_p@@Base>:
   1007c:	stp	x29, x30, [sp, #-16]!
   10080:	ldr	x9, [x0, #16]
   10084:	mov	x8, #0x2                   	// #2
   10088:	movk	x8, #0x8000, lsl #48
   1008c:	mov	x29, sp
   10090:	cmp	x9, x8
   10094:	b.eq	100a4 <mpfr_less_p@@Base+0x28>  // b.none
   10098:	ldr	x9, [x1, #16]
   1009c:	cmp	x9, x8
   100a0:	b.ne	100b0 <mpfr_less_p@@Base+0x34>  // b.any
   100a4:	mov	w0, wzr
   100a8:	ldp	x29, x30, [sp], #16
   100ac:	ret
   100b0:	mov	w2, #0x1                   	// #1
   100b4:	bl	ce90 <mpfr_cmp3@plt>
   100b8:	lsr	w0, w0, #31
   100bc:	ldp	x29, x30, [sp], #16
   100c0:	ret

00000000000100c4 <mpfr_lessequal_p@@Base>:
   100c4:	stp	x29, x30, [sp, #-16]!
   100c8:	ldr	x9, [x0, #16]
   100cc:	mov	x8, #0x2                   	// #2
   100d0:	movk	x8, #0x8000, lsl #48
   100d4:	mov	x29, sp
   100d8:	cmp	x9, x8
   100dc:	b.eq	100ec <mpfr_lessequal_p@@Base+0x28>  // b.none
   100e0:	ldr	x9, [x1, #16]
   100e4:	cmp	x9, x8
   100e8:	b.ne	100f8 <mpfr_lessequal_p@@Base+0x34>  // b.any
   100ec:	mov	w0, wzr
   100f0:	ldp	x29, x30, [sp], #16
   100f4:	ret
   100f8:	mov	w2, #0x1                   	// #1
   100fc:	bl	ce90 <mpfr_cmp3@plt>
   10100:	cmp	w0, #0x1
   10104:	cset	w0, lt  // lt = tstop
   10108:	ldp	x29, x30, [sp], #16
   1010c:	ret

0000000000010110 <mpfr_lessgreater_p@@Base>:
   10110:	stp	x29, x30, [sp, #-16]!
   10114:	ldr	x9, [x0, #16]
   10118:	mov	x8, #0x2                   	// #2
   1011c:	movk	x8, #0x8000, lsl #48
   10120:	mov	x29, sp
   10124:	cmp	x9, x8
   10128:	b.eq	10138 <mpfr_lessgreater_p@@Base+0x28>  // b.none
   1012c:	ldr	x9, [x1, #16]
   10130:	cmp	x9, x8
   10134:	b.ne	10144 <mpfr_lessgreater_p@@Base+0x34>  // b.any
   10138:	mov	w0, wzr
   1013c:	ldp	x29, x30, [sp], #16
   10140:	ret
   10144:	mov	w2, #0x1                   	// #1
   10148:	bl	ce90 <mpfr_cmp3@plt>
   1014c:	cmp	w0, #0x0
   10150:	cset	w0, ne  // ne = any
   10154:	ldp	x29, x30, [sp], #16
   10158:	ret

000000000001015c <mpfr_equal_p@@Base>:
   1015c:	stp	x29, x30, [sp, #-16]!
   10160:	ldr	x9, [x0, #16]
   10164:	mov	x8, #0x2                   	// #2
   10168:	movk	x8, #0x8000, lsl #48
   1016c:	mov	x29, sp
   10170:	cmp	x9, x8
   10174:	b.eq	10184 <mpfr_equal_p@@Base+0x28>  // b.none
   10178:	ldr	x9, [x1, #16]
   1017c:	cmp	x9, x8
   10180:	b.ne	10190 <mpfr_equal_p@@Base+0x34>  // b.any
   10184:	mov	w0, wzr
   10188:	ldp	x29, x30, [sp], #16
   1018c:	ret
   10190:	mov	w2, #0x1                   	// #1
   10194:	bl	ce90 <mpfr_cmp3@plt>
   10198:	cmp	w0, #0x0
   1019c:	cset	w0, eq  // eq = none
   101a0:	ldp	x29, x30, [sp], #16
   101a4:	ret

00000000000101a8 <mpfr_unordered_p@@Base>:
   101a8:	ldr	x9, [x0, #16]
   101ac:	mov	x8, #0x2                   	// #2
   101b0:	movk	x8, #0x8000, lsl #48
   101b4:	cmp	x9, x8
   101b8:	b.ne	101c4 <mpfr_unordered_p@@Base+0x1c>  // b.any
   101bc:	mov	w0, #0x1                   	// #1
   101c0:	ret
   101c4:	ldr	x9, [x1, #16]
   101c8:	cmp	x9, x8
   101cc:	cset	w0, eq  // eq = none
   101d0:	ret

00000000000101d4 <mpfr_div_2exp@@Base>:
   101d4:	stp	x29, x30, [sp, #-16]!
   101d8:	mov	x29, sp
   101dc:	bl	cde0 <mpfr_div_2ui@plt>
   101e0:	ldp	x29, x30, [sp], #16
   101e4:	ret

00000000000101e8 <mpfr_div_2si@@Base>:
   101e8:	stp	x29, x30, [sp, #-80]!
   101ec:	stp	x26, x25, [sp, #16]
   101f0:	stp	x24, x23, [sp, #32]
   101f4:	stp	x22, x21, [sp, #48]
   101f8:	stp	x20, x19, [sp, #64]
   101fc:	ldr	x24, [x1, #16]
   10200:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   10204:	mov	w20, w3
   10208:	mov	x19, x0
   1020c:	cmp	x24, x8
   10210:	mov	x29, sp
   10214:	b.le	104dc <mpfr_div_2si@@Base+0x2f4>
   10218:	mov	x21, x2
   1021c:	cmp	x19, x1
   10220:	b.eq	10270 <mpfr_div_2si@@Base+0x88>  // b.none
   10224:	ldr	w8, [x1, #8]
   10228:	ldr	x22, [x19, #24]
   1022c:	str	w8, [x19, #8]
   10230:	ldr	x8, [x19]
   10234:	ldr	x9, [x1]
   10238:	cmp	x8, x9
   1023c:	b.ne	10280 <mpfr_div_2si@@Base+0x98>  // b.any
   10240:	ldr	x1, [x1, #24]
   10244:	cmp	x22, x1
   10248:	b.eq	10270 <mpfr_div_2si@@Base+0x88>  // b.none
   1024c:	sub	x8, x9, #0x1
   10250:	add	x9, x9, #0x3e
   10254:	cmp	x8, #0x0
   10258:	csel	x8, x9, x8, lt  // lt = tstop
   1025c:	asr	x8, x8, #6
   10260:	lsl	x8, x8, #3
   10264:	add	x2, x8, #0x8
   10268:	mov	x0, x22
   1026c:	bl	be50 <memcpy@plt>
   10270:	mov	w25, wzr
   10274:	cmp	x21, #0x1
   10278:	b.ge	103e0 <mpfr_div_2si@@Base+0x1f8>  // b.tcont
   1027c:	b	10414 <mpfr_div_2si@@Base+0x22c>
   10280:	sub	x10, x9, #0x1
   10284:	add	x11, x9, #0x3e
   10288:	sub	x13, x8, #0x1
   1028c:	cmp	x10, #0x0
   10290:	add	x14, x8, #0x3e
   10294:	csel	x10, x11, x10, lt  // lt = tstop
   10298:	cmp	x13, #0x0
   1029c:	asr	x12, x10, #6
   102a0:	csel	x10, x14, x13, lt  // lt = tstop
   102a4:	asr	x26, x10, #6
   102a8:	add	x13, x12, #0x1
   102ac:	cmp	x8, x9
   102b0:	add	x2, x26, #0x1
   102b4:	b.ge	10508 <mpfr_div_2si@@Base+0x320>  // b.tcont
   102b8:	ldr	x11, [x1, #24]
   102bc:	neg	w8, w8
   102c0:	ands	x9, x8, #0x3f
   102c4:	mvn	x10, x26
   102c8:	add	x8, x11, x13, lsl #3
   102cc:	add	x8, x8, x10, lsl #3
   102d0:	b.eq	10538 <mpfr_div_2si@@Base+0x350>  // b.none
   102d4:	ldr	x10, [x8]
   102d8:	sub	x9, x9, #0x1
   102dc:	mov	w14, #0x1                   	// #1
   102e0:	lsl	x14, x14, x9
   102e4:	sub	x15, x14, #0x1
   102e8:	and	x9, x10, x14
   102ec:	and	x10, x10, x15
   102f0:	cbz	w20, 102f8 <mpfr_div_2si@@Base+0x110>
   102f4:	cbnz	x9, 10320 <mpfr_div_2si@@Base+0x138>
   102f8:	cbnz	x10, 10320 <mpfr_div_2si@@Base+0x138>
   102fc:	sub	x13, x13, x2
   10300:	cbz	x13, 10320 <mpfr_div_2si@@Base+0x138>
   10304:	mvn	x10, x26
   10308:	add	x12, x10, x12
   1030c:	ldr	x10, [x11, x12, lsl #3]
   10310:	subs	x12, x12, #0x1
   10314:	cset	w13, cs  // cs = hs, nlast
   10318:	cbnz	x10, 10320 <mpfr_div_2si@@Base+0x138>
   1031c:	tbnz	w13, #0, 1030c <mpfr_div_2si@@Base+0x124>
   10320:	lsl	x23, x14, #1
   10324:	cmp	w20, #0x5
   10328:	b.eq	103ac <mpfr_div_2si@@Base+0x1c4>  // b.none
   1032c:	cmp	w20, #0x1
   10330:	b.eq	10360 <mpfr_div_2si@@Base+0x178>  // b.none
   10334:	cbnz	w20, 10350 <mpfr_div_2si@@Base+0x168>
   10338:	cbz	x9, 10360 <mpfr_div_2si@@Base+0x178>
   1033c:	cbnz	x10, 10384 <mpfr_div_2si@@Base+0x19c>
   10340:	ldr	x9, [x8]
   10344:	tst	x9, x23
   10348:	b.ne	10384 <mpfr_div_2si@@Base+0x19c>  // b.any
   1034c:	b	10368 <mpfr_div_2si@@Base+0x180>
   10350:	ldr	w11, [x1, #8]
   10354:	add	w11, w20, w11, lsr #31
   10358:	cmp	w11, #0x3
   1035c:	b.ne	1037c <mpfr_div_2si@@Base+0x194>  // b.any
   10360:	orr	x9, x10, x9
   10364:	cbz	x9, 103ac <mpfr_div_2si@@Base+0x1c4>
   10368:	ldr	w9, [x1, #8]
   1036c:	neg	w25, w9
   10370:	cmp	x22, x8
   10374:	b.ne	103b8 <mpfr_div_2si@@Base+0x1d0>  // b.any
   10378:	b	103c8 <mpfr_div_2si@@Base+0x1e0>
   1037c:	orr	x9, x10, x9
   10380:	cbz	x9, 103ac <mpfr_div_2si@@Base+0x1c4>
   10384:	ldr	w25, [x1, #8]
   10388:	mov	x0, x22
   1038c:	mov	x1, x8
   10390:	mov	x3, x23
   10394:	bl	bf60 <__gmpn_add_1@plt>
   10398:	cbz	x0, 103c8 <mpfr_div_2si@@Base+0x1e0>
   1039c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   103a0:	add	x24, x24, #0x1
   103a4:	str	x8, [x22, x26, lsl #3]
   103a8:	b	103c8 <mpfr_div_2si@@Base+0x1e0>
   103ac:	mov	w25, wzr
   103b0:	cmp	x22, x8
   103b4:	b.eq	103c8 <mpfr_div_2si@@Base+0x1e0>  // b.none
   103b8:	lsl	x2, x2, #3
   103bc:	mov	x0, x22
   103c0:	mov	x1, x8
   103c4:	bl	be50 <memcpy@plt>
   103c8:	ldr	x8, [x22]
   103cc:	neg	x9, x23
   103d0:	and	x8, x8, x9
   103d4:	str	x8, [x22]
   103d8:	cmp	x21, #0x1
   103dc:	b.lt	10414 <mpfr_div_2si@@Base+0x22c>  // b.tstop
   103e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   103e4:	ldr	x1, [x0, #2736]
   103e8:	add	x0, x0, #0xab0
   103ec:	blr	x1
   103f0:	mrs	x8, tpidr_el0
   103f4:	ldr	x8, [x8, x0]
   103f8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   103fc:	sub	x9, x9, x21
   10400:	cmp	x8, x9
   10404:	b.gt	104a8 <mpfr_div_2si@@Base+0x2c0>
   10408:	add	x9, x8, x21
   1040c:	cmp	x24, x9
   10410:	b.lt	104a8 <mpfr_div_2si@@Base+0x2c0>  // b.tstop
   10414:	cmp	x21, #0x0
   10418:	b.gt	10450 <mpfr_div_2si@@Base+0x268>
   1041c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10420:	ldr	x1, [x0, #2768]
   10424:	add	x0, x0, #0xad0
   10428:	blr	x1
   1042c:	mrs	x8, tpidr_el0
   10430:	ldr	x8, [x8, x0]
   10434:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   10438:	sub	x9, x9, x21
   1043c:	cmp	x8, x9
   10440:	b.lt	104f0 <mpfr_div_2si@@Base+0x308>  // b.tstop
   10444:	add	x8, x8, x21
   10448:	cmp	x24, x8
   1044c:	b.gt	104f0 <mpfr_div_2si@@Base+0x308>
   10450:	sub	x8, x24, x21
   10454:	str	x8, [x19, #16]
   10458:	mov	w8, #0x1                   	// #1
   1045c:	cbz	w8, 10490 <mpfr_div_2si@@Base+0x2a8>
   10460:	cbz	w25, 1048c <mpfr_div_2si@@Base+0x2a4>
   10464:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10468:	ldr	x1, [x0, #2800]
   1046c:	add	x0, x0, #0xaf0
   10470:	blr	x1
   10474:	mrs	x8, tpidr_el0
   10478:	ldr	w9, [x8, x0]
   1047c:	orr	w9, w9, #0x8
   10480:	str	w9, [x8, x0]
   10484:	mov	w0, w25
   10488:	b	10490 <mpfr_div_2si@@Base+0x2a8>
   1048c:	mov	w0, wzr
   10490:	ldp	x20, x19, [sp, #64]
   10494:	ldp	x22, x21, [sp, #48]
   10498:	ldp	x24, x23, [sp, #32]
   1049c:	ldp	x26, x25, [sp, #16]
   104a0:	ldp	x29, x30, [sp], #80
   104a4:	ret
   104a8:	cbnz	w20, 105a0 <mpfr_div_2si@@Base+0x3b8>
   104ac:	mov	x9, #0x4000000000000000    	// #4611686018427387904
   104b0:	sub	x9, x9, x21
   104b4:	cmp	x8, x9
   104b8:	b.gt	1059c <mpfr_div_2si@@Base+0x3b4>
   104bc:	add	x8, x8, x21
   104c0:	sub	x8, x8, #0x1
   104c4:	cmp	x24, x8
   104c8:	b.lt	1059c <mpfr_div_2si@@Base+0x3b4>  // b.tstop
   104cc:	ldr	w8, [x19, #8]
   104d0:	tbnz	w8, #31, 10588 <mpfr_div_2si@@Base+0x3a0>
   104d4:	tbz	w25, #31, 10590 <mpfr_div_2si@@Base+0x3a8>
   104d8:	b	105b8 <mpfr_div_2si@@Base+0x3d0>
   104dc:	ldr	w3, [x1, #8]
   104e0:	mov	x0, x19
   104e4:	mov	w2, w20
   104e8:	bl	cb70 <mpfr_set4@plt>
   104ec:	b	10490 <mpfr_div_2si@@Base+0x2a8>
   104f0:	ldr	w2, [x19, #8]
   104f4:	mov	x0, x19
   104f8:	mov	w1, w20
   104fc:	bl	c3a0 <mpfr_overflow@plt>
   10500:	mov	w8, wzr
   10504:	b	1045c <mpfr_div_2si@@Base+0x274>
   10508:	ldr	x1, [x1, #24]
   1050c:	sub	x23, x2, x13
   10510:	add	x0, x22, x23, lsl #3
   10514:	cmp	x0, x1
   10518:	b.eq	10524 <mpfr_div_2si@@Base+0x33c>  // b.none
   1051c:	lsl	x2, x13, #3
   10520:	bl	be50 <memcpy@plt>
   10524:	lsl	x2, x23, #3
   10528:	mov	x0, x22
   1052c:	mov	w1, wzr
   10530:	bl	c5b0 <memset@plt>
   10534:	b	10270 <mpfr_div_2si@@Base+0x88>
   10538:	ldur	x10, [x8, #-8]
   1053c:	and	x9, x10, #0x8000000000000000
   10540:	and	x10, x10, #0x7fffffffffffffff
   10544:	cbz	w20, 10554 <mpfr_div_2si@@Base+0x36c>
   10548:	cbz	x9, 10554 <mpfr_div_2si@@Base+0x36c>
   1054c:	mov	w23, #0x1                   	// #1
   10550:	b	10324 <mpfr_div_2si@@Base+0x13c>
   10554:	mov	w23, #0x1                   	// #1
   10558:	cbnz	x10, 10324 <mpfr_div_2si@@Base+0x13c>
   1055c:	sub	x13, x12, x2
   10560:	cbz	x13, 10324 <mpfr_div_2si@@Base+0x13c>
   10564:	sub	x10, x12, x26
   10568:	sub	x12, x10, #0x2
   1056c:	mov	w23, #0x1                   	// #1
   10570:	ldr	x10, [x11, x12, lsl #3]
   10574:	subs	x12, x12, #0x1
   10578:	cset	w13, cs  // cs = hs, nlast
   1057c:	cbnz	x10, 10324 <mpfr_div_2si@@Base+0x13c>
   10580:	tbnz	w13, #0, 10570 <mpfr_div_2si@@Base+0x388>
   10584:	b	10324 <mpfr_div_2si@@Base+0x13c>
   10588:	cmp	w25, #0x1
   1058c:	b.ge	105b8 <mpfr_div_2si@@Base+0x3d0>  // b.tcont
   10590:	mov	x0, x19
   10594:	bl	c360 <mpfr_powerof2_raw@plt>
   10598:	cbz	w0, 105b8 <mpfr_div_2si@@Base+0x3d0>
   1059c:	mov	w20, #0x1                   	// #1
   105a0:	ldr	w2, [x19, #8]
   105a4:	mov	x0, x19
   105a8:	mov	w1, w20
   105ac:	bl	c880 <mpfr_underflow@plt>
   105b0:	mov	w8, wzr
   105b4:	b	1045c <mpfr_div_2si@@Base+0x274>
   105b8:	mov	w20, wzr
   105bc:	b	105a0 <mpfr_div_2si@@Base+0x3b8>

00000000000105c0 <mpfr_div_2ui@@Base>:
   105c0:	stp	x29, x30, [sp, #-80]!
   105c4:	stp	x22, x21, [sp, #48]
   105c8:	stp	x20, x19, [sp, #64]
   105cc:	mov	w21, w3
   105d0:	mov	x19, x0
   105d4:	stp	x26, x25, [sp, #16]
   105d8:	stp	x24, x23, [sp, #32]
   105dc:	mov	x29, sp
   105e0:	cbz	x2, 1083c <mpfr_div_2ui@@Base+0x27c>
   105e4:	ldr	x24, [x1, #16]
   105e8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   105ec:	cmp	x24, x8
   105f0:	b.le	1083c <mpfr_div_2ui@@Base+0x27c>
   105f4:	mov	x20, x2
   105f8:	cmp	x19, x1
   105fc:	b.eq	1064c <mpfr_div_2ui@@Base+0x8c>  // b.none
   10600:	ldr	w8, [x1, #8]
   10604:	ldr	x22, [x19, #24]
   10608:	str	w8, [x19, #8]
   1060c:	ldr	x8, [x19]
   10610:	ldr	x9, [x1]
   10614:	cmp	x8, x9
   10618:	b.ne	10654 <mpfr_div_2ui@@Base+0x94>  // b.any
   1061c:	ldr	x1, [x1, #24]
   10620:	cmp	x22, x1
   10624:	b.eq	1064c <mpfr_div_2ui@@Base+0x8c>  // b.none
   10628:	sub	x8, x9, #0x1
   1062c:	add	x9, x9, #0x3e
   10630:	cmp	x8, #0x0
   10634:	csel	x8, x9, x8, lt  // lt = tstop
   10638:	asr	x8, x8, #6
   1063c:	lsl	x8, x8, #3
   10640:	add	x2, x8, #0x8
   10644:	mov	x0, x22
   10648:	bl	be50 <memcpy@plt>
   1064c:	mov	w25, wzr
   10650:	b	107ac <mpfr_div_2ui@@Base+0x1ec>
   10654:	sub	x10, x9, #0x1
   10658:	add	x11, x9, #0x3e
   1065c:	sub	x13, x8, #0x1
   10660:	cmp	x10, #0x0
   10664:	add	x14, x8, #0x3e
   10668:	csel	x10, x11, x10, lt  // lt = tstop
   1066c:	cmp	x13, #0x0
   10670:	asr	x12, x10, #6
   10674:	csel	x10, x14, x13, lt  // lt = tstop
   10678:	asr	x26, x10, #6
   1067c:	add	x13, x12, #0x1
   10680:	cmp	x8, x9
   10684:	add	x2, x26, #0x1
   10688:	b.ge	1086c <mpfr_div_2ui@@Base+0x2ac>  // b.tcont
   1068c:	ldr	x11, [x1, #24]
   10690:	neg	w8, w8
   10694:	ands	x9, x8, #0x3f
   10698:	mvn	x10, x26
   1069c:	add	x8, x11, x13, lsl #3
   106a0:	add	x8, x8, x10, lsl #3
   106a4:	b.eq	108a0 <mpfr_div_2ui@@Base+0x2e0>  // b.none
   106a8:	ldr	x10, [x8]
   106ac:	sub	x9, x9, #0x1
   106b0:	mov	w14, #0x1                   	// #1
   106b4:	lsl	x14, x14, x9
   106b8:	sub	x15, x14, #0x1
   106bc:	and	x9, x10, x14
   106c0:	and	x10, x10, x15
   106c4:	cbz	w21, 106cc <mpfr_div_2ui@@Base+0x10c>
   106c8:	cbnz	x9, 106f4 <mpfr_div_2ui@@Base+0x134>
   106cc:	cbnz	x10, 106f4 <mpfr_div_2ui@@Base+0x134>
   106d0:	sub	x13, x13, x2
   106d4:	cbz	x13, 106f4 <mpfr_div_2ui@@Base+0x134>
   106d8:	mvn	x10, x26
   106dc:	add	x12, x10, x12
   106e0:	ldr	x10, [x11, x12, lsl #3]
   106e4:	subs	x12, x12, #0x1
   106e8:	cset	w13, cs  // cs = hs, nlast
   106ec:	cbnz	x10, 106f4 <mpfr_div_2ui@@Base+0x134>
   106f0:	tbnz	w13, #0, 106e0 <mpfr_div_2ui@@Base+0x120>
   106f4:	lsl	x23, x14, #1
   106f8:	cmp	w21, #0x5
   106fc:	b.eq	10780 <mpfr_div_2ui@@Base+0x1c0>  // b.none
   10700:	cmp	w21, #0x1
   10704:	b.eq	10734 <mpfr_div_2ui@@Base+0x174>  // b.none
   10708:	cbnz	w21, 10724 <mpfr_div_2ui@@Base+0x164>
   1070c:	cbz	x9, 10734 <mpfr_div_2ui@@Base+0x174>
   10710:	cbnz	x10, 10758 <mpfr_div_2ui@@Base+0x198>
   10714:	ldr	x9, [x8]
   10718:	tst	x9, x23
   1071c:	b.ne	10758 <mpfr_div_2ui@@Base+0x198>  // b.any
   10720:	b	1073c <mpfr_div_2ui@@Base+0x17c>
   10724:	ldr	w11, [x1, #8]
   10728:	add	w11, w21, w11, lsr #31
   1072c:	cmp	w11, #0x3
   10730:	b.ne	10750 <mpfr_div_2ui@@Base+0x190>  // b.any
   10734:	orr	x9, x10, x9
   10738:	cbz	x9, 10780 <mpfr_div_2ui@@Base+0x1c0>
   1073c:	ldr	w9, [x1, #8]
   10740:	neg	w25, w9
   10744:	cmp	x22, x8
   10748:	b.ne	1078c <mpfr_div_2ui@@Base+0x1cc>  // b.any
   1074c:	b	1079c <mpfr_div_2ui@@Base+0x1dc>
   10750:	orr	x9, x10, x9
   10754:	cbz	x9, 10780 <mpfr_div_2ui@@Base+0x1c0>
   10758:	ldr	w25, [x1, #8]
   1075c:	mov	x0, x22
   10760:	mov	x1, x8
   10764:	mov	x3, x23
   10768:	bl	bf60 <__gmpn_add_1@plt>
   1076c:	cbz	x0, 1079c <mpfr_div_2ui@@Base+0x1dc>
   10770:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   10774:	add	x24, x24, #0x1
   10778:	str	x8, [x22, x26, lsl #3]
   1077c:	b	1079c <mpfr_div_2ui@@Base+0x1dc>
   10780:	mov	w25, wzr
   10784:	cmp	x22, x8
   10788:	b.eq	1079c <mpfr_div_2ui@@Base+0x1dc>  // b.none
   1078c:	lsl	x2, x2, #3
   10790:	mov	x0, x22
   10794:	mov	x1, x8
   10798:	bl	be50 <memcpy@plt>
   1079c:	ldr	x8, [x22]
   107a0:	neg	x9, x23
   107a4:	and	x8, x8, x9
   107a8:	str	x8, [x22]
   107ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   107b0:	ldr	x1, [x0, #2736]
   107b4:	add	x0, x0, #0xab0
   107b8:	blr	x1
   107bc:	mrs	x22, tpidr_el0
   107c0:	ldr	x8, [x22, x0]
   107c4:	sub	x8, x24, x8
   107c8:	add	x8, x8, #0x1
   107cc:	cmp	x8, x20
   107d0:	b.ls	10850 <mpfr_div_2ui@@Base+0x290>  // b.plast
   107d4:	tbz	x20, #63, 107e8 <mpfr_div_2ui@@Base+0x228>
   107d8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   107dc:	adds	x20, x20, x8
   107e0:	add	x24, x24, x8
   107e4:	b.mi	107dc <mpfr_div_2ui@@Base+0x21c>  // b.first
   107e8:	sub	x8, x24, x20
   107ec:	str	x8, [x19, #16]
   107f0:	mov	w8, #0x1                   	// #1
   107f4:	cbz	w8, 10824 <mpfr_div_2ui@@Base+0x264>
   107f8:	cbz	w25, 10820 <mpfr_div_2ui@@Base+0x260>
   107fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10800:	ldr	x1, [x0, #2800]
   10804:	add	x0, x0, #0xaf0
   10808:	blr	x1
   1080c:	ldr	w8, [x22, x0]
   10810:	orr	w8, w8, #0x8
   10814:	str	w8, [x22, x0]
   10818:	mov	w0, w25
   1081c:	b	10824 <mpfr_div_2ui@@Base+0x264>
   10820:	mov	w0, wzr
   10824:	ldp	x20, x19, [sp, #64]
   10828:	ldp	x22, x21, [sp, #48]
   1082c:	ldp	x24, x23, [sp, #32]
   10830:	ldp	x26, x25, [sp, #16]
   10834:	ldp	x29, x30, [sp], #80
   10838:	ret
   1083c:	ldr	w3, [x1, #8]
   10840:	mov	x0, x19
   10844:	mov	w2, w21
   10848:	bl	cb70 <mpfr_set4@plt>
   1084c:	b	10824 <mpfr_div_2ui@@Base+0x264>
   10850:	cbnz	w21, 10910 <mpfr_div_2ui@@Base+0x350>
   10854:	cmp	x8, x20
   10858:	b.cc	10904 <mpfr_div_2ui@@Base+0x344>  // b.lo, b.ul, b.last
   1085c:	ldr	w8, [x19, #8]
   10860:	tbnz	w8, #31, 108f0 <mpfr_div_2ui@@Base+0x330>
   10864:	tbz	w25, #31, 108f8 <mpfr_div_2ui@@Base+0x338>
   10868:	b	1090c <mpfr_div_2ui@@Base+0x34c>
   1086c:	ldr	x1, [x1, #24]
   10870:	sub	x23, x2, x13
   10874:	add	x0, x22, x23, lsl #3
   10878:	cmp	x0, x1
   1087c:	b.eq	10888 <mpfr_div_2ui@@Base+0x2c8>  // b.none
   10880:	lsl	x2, x13, #3
   10884:	bl	be50 <memcpy@plt>
   10888:	lsl	x2, x23, #3
   1088c:	mov	x0, x22
   10890:	mov	w1, wzr
   10894:	bl	c5b0 <memset@plt>
   10898:	mov	w25, wzr
   1089c:	b	107ac <mpfr_div_2ui@@Base+0x1ec>
   108a0:	ldur	x10, [x8, #-8]
   108a4:	and	x9, x10, #0x8000000000000000
   108a8:	and	x10, x10, #0x7fffffffffffffff
   108ac:	cbz	w21, 108bc <mpfr_div_2ui@@Base+0x2fc>
   108b0:	cbz	x9, 108bc <mpfr_div_2ui@@Base+0x2fc>
   108b4:	mov	w23, #0x1                   	// #1
   108b8:	b	106f8 <mpfr_div_2ui@@Base+0x138>
   108bc:	mov	w23, #0x1                   	// #1
   108c0:	cbnz	x10, 106f8 <mpfr_div_2ui@@Base+0x138>
   108c4:	sub	x13, x12, x2
   108c8:	cbz	x13, 106f8 <mpfr_div_2ui@@Base+0x138>
   108cc:	sub	x10, x12, x26
   108d0:	sub	x12, x10, #0x2
   108d4:	mov	w23, #0x1                   	// #1
   108d8:	ldr	x10, [x11, x12, lsl #3]
   108dc:	subs	x12, x12, #0x1
   108e0:	cset	w13, cs  // cs = hs, nlast
   108e4:	cbnz	x10, 106f8 <mpfr_div_2ui@@Base+0x138>
   108e8:	tbnz	w13, #0, 108d8 <mpfr_div_2ui@@Base+0x318>
   108ec:	b	106f8 <mpfr_div_2ui@@Base+0x138>
   108f0:	cmp	w25, #0x1
   108f4:	b.ge	1090c <mpfr_div_2ui@@Base+0x34c>  // b.tcont
   108f8:	mov	x0, x19
   108fc:	bl	c360 <mpfr_powerof2_raw@plt>
   10900:	cbz	w0, 1090c <mpfr_div_2ui@@Base+0x34c>
   10904:	mov	w21, #0x1                   	// #1
   10908:	b	10910 <mpfr_div_2ui@@Base+0x350>
   1090c:	mov	w21, wzr
   10910:	ldr	w2, [x19, #8]
   10914:	mov	x0, x19
   10918:	mov	w1, w21
   1091c:	bl	c880 <mpfr_underflow@plt>
   10920:	mov	w8, wzr
   10924:	cbnz	w8, 107f8 <mpfr_div_2ui@@Base+0x238>
   10928:	b	10824 <mpfr_div_2ui@@Base+0x264>

000000000001092c <mpfr_div@@Base>:
   1092c:	stp	x29, x30, [sp, #-96]!
   10930:	stp	x28, x27, [sp, #16]
   10934:	stp	x26, x25, [sp, #32]
   10938:	stp	x24, x23, [sp, #48]
   1093c:	stp	x22, x21, [sp, #64]
   10940:	stp	x20, x19, [sp, #80]
   10944:	mov	x29, sp
   10948:	sub	sp, sp, #0xa0
   1094c:	ldr	x8, [x1, #16]
   10950:	mov	x9, #0x2                   	// #2
   10954:	movk	x9, #0x8000, lsl #48
   10958:	add	x10, x9, #0x2
   1095c:	mov	x22, x2
   10960:	mov	x21, x1
   10964:	cmp	x8, x10
   10968:	mov	x19, x0
   1096c:	b.lt	10f90 <mpfr_div@@Base+0x664>  // b.tstop
   10970:	ldr	x23, [x22, #16]
   10974:	cmp	x23, x10
   10978:	b.lt	10f90 <mpfr_div@@Base+0x664>  // b.tstop
   1097c:	ldr	x9, [x21]
   10980:	ldr	x24, [x19]
   10984:	mov	w28, w3
   10988:	cmp	x9, x24
   1098c:	b.ne	10a10 <mpfr_div@@Base+0xe4>  // b.any
   10990:	ldr	x10, [x22]
   10994:	cmp	x10, x24
   10998:	b.ne	10a10 <mpfr_div@@Base+0xe4>  // b.any
   1099c:	cmp	x24, #0x3f
   109a0:	b.gt	109c0 <mpfr_div@@Base+0x94>
   109a4:	mov	x0, x19
   109a8:	mov	x1, x21
   109ac:	mov	x2, x22
   109b0:	mov	w3, w28
   109b4:	bl	11a28 <mpfr_div@@Base+0x10fc>
   109b8:	mov	w8, w0
   109bc:	b	10e4c <mpfr_div@@Base+0x520>
   109c0:	cmp	x24, #0x40
   109c4:	b.eq	109ec <mpfr_div@@Base+0xc0>  // b.none
   109c8:	cmp	x24, #0x7f
   109cc:	b.gt	109ec <mpfr_div@@Base+0xc0>
   109d0:	mov	x0, x19
   109d4:	mov	x1, x21
   109d8:	mov	x2, x22
   109dc:	mov	w3, w28
   109e0:	bl	11d10 <mpfr_div@@Base+0x13e4>
   109e4:	mov	w8, w0
   109e8:	b	10e4c <mpfr_div@@Base+0x520>
   109ec:	cmp	x24, #0x40
   109f0:	b.ne	10a10 <mpfr_div@@Base+0xe4>  // b.any
   109f4:	mov	x0, x19
   109f8:	mov	x1, x21
   109fc:	mov	x2, x22
   10a00:	mov	w3, w28
   10a04:	bl	12080 <mpfr_div@@Base+0x1754>
   10a08:	mov	w8, w0
   10a0c:	b	10e4c <mpfr_div@@Base+0x520>
   10a10:	ldr	x20, [x22]
   10a14:	sub	x10, x9, #0x1
   10a18:	add	x9, x9, #0x3e
   10a1c:	cmp	x10, #0x0
   10a20:	ldr	x16, [x19, #24]
   10a24:	ldr	x18, [x21, #24]
   10a28:	csel	x26, x9, x10, lt  // lt = tstop
   10a2c:	sub	x9, x20, #0x1
   10a30:	ldr	x17, [x22, #24]
   10a34:	sub	x11, x24, #0x1
   10a38:	add	x10, x20, #0x3e
   10a3c:	cmp	x9, #0x0
   10a40:	add	x12, x24, #0x3e
   10a44:	csel	x27, x10, x9, lt  // lt = tstop
   10a48:	cmp	x11, #0x0
   10a4c:	csel	x25, x12, x11, lt  // lt = tstop
   10a50:	cmp	x20, #0x40
   10a54:	mrs	x11, tpidr_el0
   10a58:	stur	x11, [x29, #-48]
   10a5c:	b.gt	10aa0 <mpfr_div@@Base+0x174>
   10a60:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10a64:	ldr	x1, [x0, #2736]
   10a68:	add	x0, x0, #0xab0
   10a6c:	blr	x1
   10a70:	ldr	x9, [x11, x0]
   10a74:	sub	x10, x8, #0x40
   10a78:	cmp	x9, x10
   10a7c:	b.gt	10aa0 <mpfr_div@@Base+0x174>
   10a80:	sub	x8, x8, #0x3f
   10a84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10a88:	ldr	x1, [x0, #2768]
   10a8c:	add	x0, x0, #0xad0
   10a90:	blr	x1
   10a94:	ldr	x9, [x11, x0]
   10a98:	cmp	x8, x9
   10a9c:	b.le	10e70 <mpfr_div@@Base+0x544>
   10aa0:	cmp	x24, #0x7c1
   10aa4:	stp	x17, x16, [x29, #-32]
   10aa8:	stur	x18, [x29, #-40]
   10aac:	b.lt	10adc <mpfr_div@@Base+0x1b0>  // b.tstop
   10ab0:	sub	x4, x29, #0x4
   10ab4:	mov	x0, x19
   10ab8:	mov	x1, x21
   10abc:	mov	x2, x22
   10ac0:	mov	w3, w28
   10ac4:	bl	12330 <mpfr_div@@Base+0x1a04>
   10ac8:	ldp	x18, x17, [x29, #-40]
   10acc:	ldur	x16, [x29, #-24]
   10ad0:	cbz	w0, 10adc <mpfr_div@@Base+0x1b0>
   10ad4:	ldur	w8, [x29, #-4]
   10ad8:	b	10e4c <mpfr_div@@Base+0x520>
   10adc:	stur	xzr, [x29, #-16]
   10ae0:	ldr	w8, [x21, #8]
   10ae4:	ldr	w9, [x22, #8]
   10ae8:	asr	x26, x26, #6
   10aec:	asr	x27, x27, #6
   10af0:	asr	x10, x25, #6
   10af4:	mul	w15, w9, w8
   10af8:	str	w15, [x19, #8]
   10afc:	ldr	x8, [x18, x26, lsl #3]
   10b00:	ldr	x9, [x17, x27, lsl #3]
   10b04:	add	x23, x10, #0x1
   10b08:	stur	x10, [x29, #-128]
   10b0c:	stur	x23, [x29, #-72]
   10b10:	cmp	x8, x9
   10b14:	b.eq	10ffc <mpfr_div@@Base+0x6d0>  // b.none
   10b18:	cset	w25, hi  // hi = pmore
   10b1c:	ldr	x8, [x21, #16]
   10b20:	ldr	x9, [x22, #16]
   10b24:	cmp	w28, #0x1
   10b28:	mov	w11, #0x2                   	// #2
   10b2c:	cset	w12, eq  // eq = none
   10b30:	cmp	w15, #0x0
   10b34:	cinc	w11, w11, ge  // ge = tcont
   10b38:	ldr	w10, [x19]
   10b3c:	cmp	w11, w28
   10b40:	sub	x8, x8, x9
   10b44:	cset	w9, eq  // eq = none
   10b48:	orr	w9, w12, w9
   10b4c:	stp	w9, w15, [x29, #-104]
   10b50:	add	x9, x27, #0x1
   10b54:	stur	x9, [x29, #-64]
   10b58:	neg	w9, w10
   10b5c:	mov	x14, xzr
   10b60:	add	x17, x26, #0x1
   10b64:	stur	x27, [x29, #-96]
   10b68:	cmp	x24, #0x601
   10b6c:	add	x27, x8, x25
   10b70:	and	w13, w9, #0x3f
   10b74:	stur	w11, [x29, #-140]
   10b78:	stur	w28, [x29, #-52]
   10b7c:	stur	x13, [x29, #-80]
   10b80:	stur	x17, [x29, #-120]
   10b84:	stur	x25, [x29, #-136]
   10b88:	b.lt	10b94 <mpfr_div@@Base+0x268>  // b.tstop
   10b8c:	cmp	x20, #0x601
   10b90:	b.ge	11038 <mpfr_div@@Base+0x70c>  // b.tcont
   10b94:	orr	w8, w13, w28
   10b98:	mov	x26, x16
   10b9c:	stur	x14, [x29, #-88]
   10ba0:	cbz	w8, 110c8 <mpfr_div@@Base+0x79c>
   10ba4:	lsl	x24, x23, #4
   10ba8:	cmp	x24, #0x4, lsl #12
   10bac:	lsl	x21, x23, #1
   10bb0:	stur	x27, [x29, #-112]
   10bb4:	b.hi	110f4 <mpfr_div@@Base+0x7c8>  // b.pmore
   10bb8:	add	x9, x24, #0xf
   10bbc:	mov	x8, sp
   10bc0:	and	x9, x9, #0xfffffffffffffff0
   10bc4:	sub	x22, x8, x9
   10bc8:	mov	sp, x22
   10bcc:	subs	x28, x17, x21
   10bd0:	b.ge	11114 <mpfr_div@@Base+0x7e8>  // b.tcont
   10bd4:	mov	x20, x25
   10bd8:	sub	x25, x21, x17
   10bdc:	lsl	x24, x25, #3
   10be0:	mov	x0, x22
   10be4:	mov	w1, wzr
   10be8:	mov	x2, x24
   10bec:	mov	x27, x17
   10bf0:	bl	c5b0 <memset@plt>
   10bf4:	add	x0, x22, x24
   10bf8:	cbz	w20, 10c1c <mpfr_div@@Base+0x2f0>
   10bfc:	ldur	x1, [x29, #-40]
   10c00:	mov	w3, #0x1                   	// #1
   10c04:	mov	x2, x27
   10c08:	bl	c140 <__gmpn_rshift@plt>
   10c0c:	add	x8, x22, x25, lsl #3
   10c10:	mov	x20, xzr
   10c14:	stur	x0, [x8, #-8]
   10c18:	b	10c38 <mpfr_div@@Base+0x30c>
   10c1c:	ldur	x1, [x29, #-40]
   10c20:	cmp	x0, x1
   10c24:	b.eq	10c34 <mpfr_div@@Base+0x308>  // b.none
   10c28:	ldur	x8, [x29, #-120]
   10c2c:	lsl	x2, x8, #3
   10c30:	bl	be50 <memcpy@plt>
   10c34:	mov	x20, xzr
   10c38:	ldur	x8, [x29, #-64]
   10c3c:	ldur	x10, [x29, #-32]
   10c40:	stur	x28, [x29, #-152]
   10c44:	subs	x27, x8, x23
   10c48:	b.lt	11130 <mpfr_div@@Base+0x804>  // b.tstop
   10c4c:	cmp	x26, x10
   10c50:	b.eq	10c5c <mpfr_div@@Base+0x330>  // b.none
   10c54:	add	x24, x10, x27, lsl #3
   10c58:	b	10c9c <mpfr_div@@Base+0x370>
   10c5c:	lsl	x1, x23, #3
   10c60:	cmp	x1, #0x4, lsl #12
   10c64:	b.hi	11290 <mpfr_div@@Base+0x964>  // b.pmore
   10c68:	add	x9, x1, #0xf
   10c6c:	mov	x8, sp
   10c70:	and	x9, x9, #0xfffffffffffffff0
   10c74:	sub	x24, x8, x9
   10c78:	mov	sp, x24
   10c7c:	cmp	x10, x24
   10c80:	b.eq	10c9c <mpfr_div@@Base+0x370>  // b.none
   10c84:	ldur	x8, [x29, #-64]
   10c88:	mov	x0, x24
   10c8c:	mov	x1, x10
   10c90:	lsl	x2, x8, #3
   10c94:	bl	be50 <memcpy@plt>
   10c98:	ldur	x10, [x29, #-32]
   10c9c:	mov	x0, x10
   10ca0:	mov	x1, x27
   10ca4:	bl	125e4 <mpfr_div@@Base+0x1cb8>
   10ca8:	cmp	w0, #0x0
   10cac:	mov	x8, xzr
   10cb0:	cset	w28, ne  // ne = any
   10cb4:	add	x2, x22, x8, lsl #3
   10cb8:	sub	x3, x21, x8
   10cbc:	sub	x5, x23, x8
   10cc0:	mov	x0, x26
   10cc4:	mov	x1, xzr
   10cc8:	mov	x4, x24
   10ccc:	bl	d1b0 <__gmpn_divrem@plt>
   10cd0:	cbz	x20, 10cdc <mpfr_div@@Base+0x3b0>
   10cd4:	mov	w25, #0x1                   	// #1
   10cd8:	b	10cf8 <mpfr_div@@Base+0x3cc>
   10cdc:	mov	x24, x0
   10ce0:	mov	x0, x22
   10ce4:	mov	x1, x23
   10ce8:	bl	125e4 <mpfr_div@@Base+0x1cb8>
   10cec:	cmp	w0, #0x0
   10cf0:	mov	x0, x24
   10cf4:	cset	w25, ne  // ne = any
   10cf8:	ldp	x13, x2, [x29, #-80]
   10cfc:	ldur	x12, [x29, #-48]
   10d00:	ldur	x16, [x29, #-24]
   10d04:	ldur	x14, [x29, #-88]
   10d08:	cmp	x23, x2
   10d0c:	orr	x24, x28, x25
   10d10:	b.ne	11144 <mpfr_div@@Base+0x818>  // b.any
   10d14:	ldr	x8, [x26]
   10d18:	mov	x9, #0xffffffffffffffff    	// #-1
   10d1c:	lsl	x9, x9, x13
   10d20:	bic	x28, x8, x9
   10d24:	sub	w8, w13, #0x1
   10d28:	ldr	x10, [x26]
   10d2c:	ldur	x15, [x29, #-96]
   10d30:	orr	x9, x28, x24
   10d34:	cmp	x9, #0x0
   10d38:	cset	w11, ne  // ne = any
   10d3c:	cmp	x15, x23
   10d40:	eor	x10, x10, x28
   10d44:	str	x10, [x26]
   10d48:	stur	w11, [x29, #-4]
   10d4c:	b.ge	11184 <mpfr_div@@Base+0x858>  // b.tcont
   10d50:	ldur	w10, [x29, #-52]
   10d54:	cbnz	w10, 111f0 <mpfr_div@@Base+0x8c4>
   10d58:	mov	w9, #0x1                   	// #1
   10d5c:	lsl	x8, x9, x8
   10d60:	and	x14, x28, x8
   10d64:	eor	x8, x14, x28
   10d68:	orr	x24, x8, x25
   10d6c:	ldur	w28, [x29, #-52]
   10d70:	ldur	x27, [x29, #-112]
   10d74:	ldur	w8, [x29, #-104]
   10d78:	tbnz	w8, #0, 10dc8 <mpfr_div@@Base+0x49c>
   10d7c:	orr	x8, x24, x14
   10d80:	cbz	x8, 10dc8 <mpfr_div@@Base+0x49c>
   10d84:	cbz	w28, 10e98 <mpfr_div@@Base+0x56c>
   10d88:	mov	w8, #0x1                   	// #1
   10d8c:	lsl	x3, x8, x13
   10d90:	mov	x0, x16
   10d94:	mov	x1, x16
   10d98:	stur	w8, [x29, #-4]
   10d9c:	bl	bf60 <__gmpn_add_1@plt>
   10da0:	ldur	x10, [x29, #-24]
   10da4:	ldur	x12, [x29, #-48]
   10da8:	cbz	x0, 10dd8 <mpfr_div@@Base+0x4ac>
   10dac:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   10db0:	cmp	x27, x8
   10db4:	ldur	x8, [x29, #-128]
   10db8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   10dbc:	cinc	x27, x27, ne  // ne = any
   10dc0:	str	x9, [x10, x8, lsl #3]
   10dc4:	b	10dd8 <mpfr_div@@Base+0x4ac>
   10dc8:	orr	x8, x24, x14
   10dcc:	cmp	x8, #0x0
   10dd0:	csetm	w8, ne  // ne = any
   10dd4:	stur	w8, [x29, #-4]
   10dd8:	ldur	x0, [x29, #-16]
   10ddc:	cbnz	x0, 110a4 <mpfr_div@@Base+0x778>
   10de0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10de4:	ldr	x1, [x0, #2768]
   10de8:	add	x0, x0, #0xad0
   10dec:	blr	x1
   10df0:	ldr	x8, [x12, x0]
   10df4:	cmp	x27, x8
   10df8:	b.gt	110b0 <mpfr_div@@Base+0x784>
   10dfc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10e00:	ldr	x1, [x0, #2736]
   10e04:	add	x0, x0, #0xab0
   10e08:	blr	x1
   10e0c:	ldr	x8, [x12, x0]
   10e10:	cmp	x27, x8
   10e14:	b.lt	111c4 <mpfr_div@@Base+0x898>  // b.tstop
   10e18:	str	x27, [x19, #16]
   10e1c:	ldur	w8, [x29, #-4]
   10e20:	ldur	w9, [x29, #-100]
   10e24:	mul	w8, w8, w9
   10e28:	stur	w8, [x29, #-4]
   10e2c:	cbz	w8, 10e4c <mpfr_div@@Base+0x520>
   10e30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10e34:	ldr	x1, [x0, #2800]
   10e38:	add	x0, x0, #0xaf0
   10e3c:	blr	x1
   10e40:	ldr	w9, [x12, x0]
   10e44:	orr	w9, w9, #0x8
   10e48:	str	w9, [x12, x0]
   10e4c:	mov	w0, w8
   10e50:	mov	sp, x29
   10e54:	ldp	x20, x19, [sp, #80]
   10e58:	ldp	x22, x21, [sp, #64]
   10e5c:	ldp	x24, x23, [sp, #48]
   10e60:	ldp	x26, x25, [sp, #32]
   10e64:	ldp	x28, x27, [sp, #16]
   10e68:	ldp	x29, x30, [sp], #96
   10e6c:	ret
   10e70:	ldr	w8, [x22, #8]
   10e74:	ldr	x2, [x17]
   10e78:	cmp	w8, #0x1
   10e7c:	b.lt	10ecc <mpfr_div@@Base+0x5a0>  // b.tstop
   10e80:	mov	x0, x19
   10e84:	mov	x1, x21
   10e88:	mov	w3, w28
   10e8c:	bl	d160 <mpfr_div_ui@plt>
   10e90:	stur	w0, [x29, #-4]
   10e94:	b	10f04 <mpfr_div@@Base+0x5d8>
   10e98:	cbz	x14, 10f88 <mpfr_div@@Base+0x65c>
   10e9c:	cbnz	x24, 10d88 <mpfr_div@@Base+0x45c>
   10ea0:	ldr	x8, [x16]
   10ea4:	mov	w9, #0x1                   	// #1
   10ea8:	lsl	x9, x9, x13
   10eac:	and	x10, x8, x9
   10eb0:	tst	x8, x9
   10eb4:	mov	w8, #0xffffffff            	// #-1
   10eb8:	cneg	w8, w8, ne  // ne = any
   10ebc:	stur	w8, [x29, #-4]
   10ec0:	cbnz	x10, 10d88 <mpfr_div@@Base+0x45c>
   10ec4:	ldur	x12, [x29, #-48]
   10ec8:	b	10dd8 <mpfr_div@@Base+0x4ac>
   10ecc:	cmp	w28, #0x3
   10ed0:	mov	w8, #0x2                   	// #2
   10ed4:	csel	w8, w8, w28, eq  // eq = none
   10ed8:	cmp	w28, #0x2
   10edc:	mov	w9, #0x3                   	// #3
   10ee0:	csel	w3, w9, w8, eq  // eq = none
   10ee4:	mov	x0, x19
   10ee8:	mov	x1, x21
   10eec:	bl	d160 <mpfr_div_ui@plt>
   10ef0:	neg	w8, w0
   10ef4:	stur	w8, [x29, #-4]
   10ef8:	ldr	w8, [x19, #8]
   10efc:	neg	w8, w8
   10f00:	str	w8, [x19, #8]
   10f04:	ldr	x8, [x19, #16]
   10f08:	sub	x8, x8, x23
   10f0c:	str	x8, [x19, #16]
   10f10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10f14:	ldr	x1, [x0, #2768]
   10f18:	add	x0, x0, #0xad0
   10f1c:	blr	x1
   10f20:	ldur	x11, [x29, #-48]
   10f24:	ldr	x9, [x11, x0]
   10f28:	sub	x10, x9, #0x40
   10f2c:	cmp	x8, x10
   10f30:	b.gt	11348 <mpfr_div@@Base+0xa1c>
   10f34:	add	x10, x8, #0x40
   10f38:	str	x10, [x19, #16]
   10f3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10f40:	ldr	x1, [x0, #2736]
   10f44:	add	x0, x0, #0xab0
   10f48:	blr	x1
   10f4c:	ldur	w8, [x29, #-4]
   10f50:	cmp	x10, x9
   10f54:	b.gt	11350 <mpfr_div@@Base+0xa24>
   10f58:	ldr	x9, [x11, x0]
   10f5c:	cmp	x10, x9
   10f60:	b.lt	11350 <mpfr_div@@Base+0xa24>  // b.tstop
   10f64:	cbz	w8, 10e4c <mpfr_div@@Base+0x520>
   10f68:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10f6c:	ldr	x1, [x0, #2800]
   10f70:	add	x0, x0, #0xaf0
   10f74:	blr	x1
   10f78:	ldr	w9, [x11, x0]
   10f7c:	orr	w9, w9, #0x8
   10f80:	str	w9, [x11, x0]
   10f84:	b	10e4c <mpfr_div@@Base+0x520>
   10f88:	mov	w8, #0xffffffff            	// #-1
   10f8c:	b	10dd4 <mpfr_div@@Base+0x4a8>
   10f90:	cmp	x8, x9
   10f94:	b.eq	10fa4 <mpfr_div@@Base+0x678>  // b.none
   10f98:	ldr	x10, [x22, #16]
   10f9c:	cmp	x10, x9
   10fa0:	b.ne	10fd0 <mpfr_div@@Base+0x6a4>  // b.any
   10fa4:	str	x9, [x19, #16]
   10fa8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   10fac:	ldr	x1, [x0, #2800]
   10fb0:	add	x0, x0, #0xaf0
   10fb4:	blr	x1
   10fb8:	mrs	x9, tpidr_el0
   10fbc:	ldr	w10, [x9, x0]
   10fc0:	mov	w8, wzr
   10fc4:	orr	w10, w10, #0x4
   10fc8:	str	w10, [x9, x0]
   10fcc:	b	10e4c <mpfr_div@@Base+0x520>
   10fd0:	ldr	w12, [x21, #8]
   10fd4:	ldr	w13, [x22, #8]
   10fd8:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   10fdc:	cmp	x8, x11
   10fe0:	mul	w12, w13, w12
   10fe4:	str	w12, [x19, #8]
   10fe8:	b.ne	111fc <mpfr_div@@Base+0x8d0>  // b.any
   10fec:	cmp	x10, x11
   10ff0:	b.eq	10fa4 <mpfr_div@@Base+0x678>  // b.none
   10ff4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10ff8:	b	11208 <mpfr_div@@Base+0x8dc>
   10ffc:	sub	x8, x17, #0x8
   11000:	sub	x9, x18, #0x8
   11004:	mov	x10, x27
   11008:	mov	x11, x26
   1100c:	cbz	x10, 11214 <mpfr_div@@Base+0x8e8>
   11010:	cbz	x11, 11214 <mpfr_div@@Base+0x8e8>
   11014:	ldr	x13, [x9, x11, lsl #3]
   11018:	ldr	x14, [x8, x10, lsl #3]
   1101c:	sub	x12, x11, #0x1
   11020:	sub	x1, x10, #0x1
   11024:	mov	x10, x1
   11028:	cmp	x13, x14
   1102c:	mov	x11, x12
   11030:	b.eq	1100c <mpfr_div@@Base+0x6e0>  // b.none
   11034:	b	1121c <mpfr_div@@Base+0x8f0>
   11038:	ldur	x8, [x29, #-128]
   1103c:	add	x21, x8, #0x2
   11040:	lsl	x23, x21, #4
   11044:	cmp	x23, #0x4, lsl #12
   11048:	lsl	x20, x21, #1
   1104c:	b.hi	11760 <mpfr_div@@Base+0xe34>  // b.pmore
   11050:	add	x9, x23, #0xf
   11054:	mov	x8, sp
   11058:	and	x9, x9, #0xfffffffffffffff0
   1105c:	sub	x22, x8, x9
   11060:	mov	sp, x22
   11064:	subs	x25, x20, x17
   11068:	b.le	11780 <mpfr_div@@Base+0xe54>
   1106c:	add	x8, x22, x20, lsl #3
   11070:	mvn	x9, x26
   11074:	add	x0, x8, x9, lsl #3
   11078:	cmp	x0, x18
   1107c:	b.eq	11090 <mpfr_div@@Base+0x764>  // b.none
   11080:	ldur	x8, [x29, #-120]
   11084:	ldur	x1, [x29, #-40]
   11088:	lsl	x2, x8, #3
   1108c:	bl	be50 <memcpy@plt>
   11090:	lsl	x2, x25, #3
   11094:	mov	x0, x22
   11098:	mov	w1, wzr
   1109c:	bl	c5b0 <memset@plt>
   110a0:	b	1179c <mpfr_div@@Base+0xe70>
   110a4:	bl	c8d0 <mpfr_tmp_free@plt>
   110a8:	ldur	x12, [x29, #-48]
   110ac:	b	10de0 <mpfr_div@@Base+0x4b4>
   110b0:	ldur	w2, [x29, #-100]
   110b4:	mov	x0, x19
   110b8:	mov	w1, w28
   110bc:	bl	c3a0 <mpfr_overflow@plt>
   110c0:	mov	w8, w0
   110c4:	b	10e4c <mpfr_div@@Base+0x520>
   110c8:	ldur	x8, [x29, #-128]
   110cc:	add	x23, x8, #0x2
   110d0:	lsl	x1, x23, #3
   110d4:	cmp	x1, #0x4, lsl #12
   110d8:	b.hi	119b0 <mpfr_div@@Base+0x1084>  // b.pmore
   110dc:	add	x9, x1, #0xf
   110e0:	mov	x8, sp
   110e4:	and	x9, x9, #0xfffffffffffffff0
   110e8:	sub	x26, x8, x9
   110ec:	mov	sp, x26
   110f0:	b	10ba4 <mpfr_div@@Base+0x278>
   110f4:	sub	x0, x29, #0x10
   110f8:	mov	x1, x24
   110fc:	bl	c220 <mpfr_tmp_allocate@plt>
   11100:	ldur	x17, [x29, #-120]
   11104:	ldur	x18, [x29, #-40]
   11108:	mov	x22, x0
   1110c:	subs	x28, x17, x21
   11110:	b.lt	10bd4 <mpfr_div@@Base+0x2a8>  // b.tstop
   11114:	add	x1, x18, x28, lsl #3
   11118:	cbz	w25, 11248 <mpfr_div@@Base+0x91c>
   1111c:	mov	w3, #0x1                   	// #1
   11120:	mov	x0, x22
   11124:	mov	x2, x21
   11128:	bl	c140 <__gmpn_rshift@plt>
   1112c:	b	11260 <mpfr_div@@Base+0x934>
   11130:	ldur	x8, [x29, #-64]
   11134:	mov	x28, xzr
   11138:	mov	x24, x10
   1113c:	sub	x8, x23, x8
   11140:	b	10cb4 <mpfr_div@@Base+0x388>
   11144:	add	x1, x26, #0x8
   11148:	cmp	x16, x1
   1114c:	b.eq	11178 <mpfr_div@@Base+0x84c>  // b.none
   11150:	ldur	x8, [x29, #-72]
   11154:	mov	x28, x0
   11158:	mov	x0, x16
   1115c:	lsl	x2, x8, #3
   11160:	bl	be50 <memcpy@plt>
   11164:	ldp	x14, x13, [x29, #-88]
   11168:	ldur	x2, [x29, #-72]
   1116c:	ldur	x16, [x29, #-24]
   11170:	ldur	x12, [x29, #-48]
   11174:	mov	x0, x28
   11178:	ldr	x28, [x26]
   1117c:	mov	w8, #0x3f                  	// #63
   11180:	b	10d28 <mpfr_div@@Base+0x3fc>
   11184:	cbz	x9, 1126c <mpfr_div@@Base+0x940>
   11188:	ldur	w10, [x29, #-52]
   1118c:	mov	w9, #0x1                   	// #1
   11190:	lsl	x8, x9, x8
   11194:	and	x8, x28, x8
   11198:	cmp	w10, #0x0
   1119c:	csel	x14, x8, x14, eq  // eq = none
   111a0:	csel	x8, x8, xzr, eq  // eq = none
   111a4:	eor	x9, x8, x28
   111a8:	cmp	x9, #0x1
   111ac:	stur	x0, [x29, #-160]
   111b0:	b.ls	112ac <mpfr_div@@Base+0x980>  // b.plast
   111b4:	ldur	x27, [x29, #-112]
   111b8:	mov	w8, #0x1c                  	// #28
   111bc:	mov	x24, x9
   111c0:	b	116a4 <mpfr_div@@Base+0xd78>
   111c4:	cbnz	w28, 11414 <mpfr_div@@Base+0xae8>
   111c8:	sub	x8, x8, #0x1
   111cc:	cmp	x27, x8
   111d0:	b.lt	111e8 <mpfr_div@@Base+0x8bc>  // b.tstop
   111d4:	ldur	w8, [x29, #-4]
   111d8:	tbnz	w8, #31, 11410 <mpfr_div@@Base+0xae4>
   111dc:	mov	x0, x19
   111e0:	bl	c360 <mpfr_powerof2_raw@plt>
   111e4:	cbz	w0, 11410 <mpfr_div@@Base+0xae4>
   111e8:	mov	w28, #0x1                   	// #1
   111ec:	b	11414 <mpfr_div@@Base+0xae8>
   111f0:	cmp	x9, #0x0
   111f4:	cset	w24, ne  // ne = any
   111f8:	b	10d6c <mpfr_div@@Base+0x440>
   111fc:	cmp	x10, x11
   11200:	b.ne	11304 <mpfr_div@@Base+0x9d8>  // b.any
   11204:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   11208:	mov	w8, wzr
   1120c:	str	x9, [x19, #16]
   11210:	b	10e4c <mpfr_div@@Base+0x520>
   11214:	mov	x1, x10
   11218:	mov	x12, x11
   1121c:	ldr	x8, [x18, x12, lsl #3]
   11220:	ldr	x9, [x17, x1, lsl #3]
   11224:	cmp	x8, x9
   11228:	b.ne	10b18 <mpfr_div@@Base+0x1ec>  // b.any
   1122c:	mov	w23, w15
   11230:	cbz	x1, 11368 <mpfr_div@@Base+0xa3c>
   11234:	mov	x0, x17
   11238:	bl	125e4 <mpfr_div@@Base+0x1cb8>
   1123c:	cmp	w0, #0x0
   11240:	cset	w25, eq  // eq = none
   11244:	b	1136c <mpfr_div@@Base+0xa40>
   11248:	cmp	x1, x22
   1124c:	b.eq	1125c <mpfr_div@@Base+0x930>  // b.none
   11250:	mov	x0, x22
   11254:	mov	x2, x24
   11258:	bl	be50 <memcpy@plt>
   1125c:	mov	x0, xzr
   11260:	cbz	x0, 11278 <mpfr_div@@Base+0x94c>
   11264:	mov	w20, #0x1                   	// #1
   11268:	b	10c38 <mpfr_div@@Base+0x30c>
   1126c:	ldur	w28, [x29, #-52]
   11270:	ldur	x27, [x29, #-112]
   11274:	b	10dd8 <mpfr_div@@Base+0x4ac>
   11278:	ldur	x0, [x29, #-40]
   1127c:	mov	x1, x28
   11280:	bl	125e4 <mpfr_div@@Base+0x1cb8>
   11284:	cmp	w0, #0x0
   11288:	cset	w20, ne  // ne = any
   1128c:	b	10c38 <mpfr_div@@Base+0x30c>
   11290:	sub	x0, x29, #0x10
   11294:	bl	c220 <mpfr_tmp_allocate@plt>
   11298:	ldur	x10, [x29, #-32]
   1129c:	mov	x24, x0
   112a0:	cmp	x10, x24
   112a4:	b.ne	10c84 <mpfr_div@@Base+0x358>  // b.any
   112a8:	b	10c9c <mpfr_div@@Base+0x370>
   112ac:	ldur	x8, [x29, #-64]
   112b0:	stp	x9, x14, [x29, #-96]
   112b4:	lsl	x1, x8, #3
   112b8:	cmp	x1, #0x4, lsl #12
   112bc:	b.hi	11a18 <mpfr_div@@Base+0x10ec>  // b.pmore
   112c0:	add	x9, x1, #0xf
   112c4:	mov	x8, sp
   112c8:	and	x9, x9, #0xfffffffffffffff0
   112cc:	sub	x8, x8, x9
   112d0:	mov	x25, x8
   112d4:	mov	sp, x8
   112d8:	ldr	x8, [x26]
   112dc:	cmp	x23, x27
   112e0:	mov	x0, x25
   112e4:	eor	x8, x8, x28
   112e8:	str	x8, [x26]
   112ec:	b.ge	11380 <mpfr_div@@Base+0xa54>  // b.tcont
   112f0:	ldur	x1, [x29, #-32]
   112f4:	mov	x2, x27
   112f8:	mov	x3, x26
   112fc:	mov	x4, x23
   11300:	b	11390 <mpfr_div@@Base+0xa64>
   11304:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   11308:	cmp	x10, x11
   1130c:	b.ne	113b4 <mpfr_div@@Base+0xa88>  // b.any
   11310:	cmp	x8, x11
   11314:	b.eq	10fa4 <mpfr_div@@Base+0x678>  // b.none
   11318:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1131c:	str	x8, [x19, #16]
   11320:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   11324:	ldr	x1, [x0, #2800]
   11328:	add	x0, x0, #0xaf0
   1132c:	blr	x1
   11330:	mrs	x9, tpidr_el0
   11334:	ldr	w10, [x9, x0]
   11338:	mov	w8, wzr
   1133c:	orr	w10, w10, #0x20
   11340:	str	w10, [x9, x0]
   11344:	b	10e4c <mpfr_div@@Base+0x520>
   11348:	ldr	w2, [x19, #8]
   1134c:	b	110b4 <mpfr_div@@Base+0x788>
   11350:	mov	x0, x19
   11354:	mov	w1, w8
   11358:	mov	w2, w28
   1135c:	bl	d020 <mpfr_check_range@plt>
   11360:	mov	w8, w0
   11364:	b	10e4c <mpfr_div@@Base+0x520>
   11368:	mov	w25, #0x1                   	// #1
   1136c:	mov	w15, w23
   11370:	ldur	x16, [x29, #-24]
   11374:	ldur	x23, [x29, #-72]
   11378:	ldur	x18, [x29, #-40]
   1137c:	b	10b1c <mpfr_div@@Base+0x1f0>
   11380:	ldur	x3, [x29, #-32]
   11384:	mov	x1, x26
   11388:	mov	x2, x23
   1138c:	mov	x4, x27
   11390:	bl	cc80 <__gmpn_mul@plt>
   11394:	ldur	x8, [x29, #-160]
   11398:	cbz	x8, 113c0 <mpfr_div@@Base+0xa94>
   1139c:	ldur	x2, [x29, #-32]
   113a0:	add	x0, x25, x23, lsl #3
   113a4:	mov	x1, x0
   113a8:	mov	x3, x27
   113ac:	bl	ca70 <__gmpn_add_n@plt>
   113b0:	b	113c4 <mpfr_div@@Base+0xa98>
   113b4:	mov	w8, wzr
   113b8:	str	x11, [x19, #16]
   113bc:	b	10e4c <mpfr_div@@Base+0x520>
   113c0:	mov	x0, xzr
   113c4:	ldr	x8, [x26]
   113c8:	eor	x8, x8, x28
   113cc:	str	x8, [x26]
   113d0:	mov	x26, x0
   113d4:	cbz	x0, 113e0 <mpfr_div@@Base+0xab4>
   113d8:	mov	w0, #0x1                   	// #1
   113dc:	b	113f0 <mpfr_div@@Base+0xac4>
   113e0:	add	x0, x25, x27, lsl #3
   113e4:	mov	x1, x22
   113e8:	mov	x2, x23
   113ec:	bl	c3f0 <__gmpn_cmp@plt>
   113f0:	cbnz	w0, 11438 <mpfr_div@@Base+0xb0c>
   113f4:	ldur	x8, [x29, #-120]
   113f8:	mov	x0, x25
   113fc:	mov	x1, x27
   11400:	subs	x3, x8, x21
   11404:	b.ge	1142c <mpfr_div@@Base+0xb00>  // b.tcont
   11408:	bl	125e4 <mpfr_div@@Base+0x1cb8>
   1140c:	b	11438 <mpfr_div@@Base+0xb0c>
   11410:	mov	w28, wzr
   11414:	ldur	w2, [x29, #-100]
   11418:	mov	x0, x19
   1141c:	mov	w1, w28
   11420:	bl	c880 <mpfr_underflow@plt>
   11424:	mov	w8, w0
   11428:	b	10e4c <mpfr_div@@Base+0x520>
   1142c:	ldur	x2, [x29, #-40]
   11430:	ldur	x4, [x29, #-136]
   11434:	bl	1260c <mpfr_div@@Base+0x1ce0>
   11438:	cmp	w0, #0x0
   1143c:	b.le	1144c <mpfr_div@@Base+0xb20>
   11440:	cbz	x26, 11458 <mpfr_div@@Base+0xb2c>
   11444:	mov	w8, #0x1                   	// #1
   11448:	b	11570 <mpfr_div@@Base+0xc44>
   1144c:	ldur	x8, [x29, #-96]
   11450:	csinc	x24, x8, xzr, eq  // eq = none
   11454:	b	115b0 <mpfr_div@@Base+0xc84>
   11458:	cbz	x20, 114b8 <mpfr_div@@Base+0xb8c>
   1145c:	ldur	x9, [x29, #-152]
   11460:	mov	x8, xzr
   11464:	subs	x9, x9, x27
   11468:	csel	x26, x9, xzr, gt
   1146c:	ldur	x9, [x29, #-136]
   11470:	cbz	w9, 11480 <mpfr_div@@Base+0xb54>
   11474:	ldur	x8, [x29, #-40]
   11478:	ldr	x8, [x8, x26, lsl #3]
   1147c:	and	x8, x8, #0x1
   11480:	ldur	x9, [x29, #-152]
   11484:	cmp	x9, x27
   11488:	b.ge	114c4 <mpfr_div@@Base+0xb98>  // b.tcont
   1148c:	cbz	x8, 114d0 <mpfr_div@@Base+0xba4>
   11490:	ldur	x9, [x29, #-152]
   11494:	add	x8, x25, x27, lsl #3
   11498:	mov	w2, #0x1                   	// #1
   1149c:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   114a0:	sub	x8, x8, x9, lsl #3
   114a4:	sub	x0, x8, #0x8
   114a8:	mov	x1, x0
   114ac:	bl	c8f0 <__gmpn_sub_1@plt>
   114b0:	mov	x3, x0
   114b4:	b	114d4 <mpfr_div@@Base+0xba8>
   114b8:	mov	x21, xzr
   114bc:	mov	x3, xzr
   114c0:	b	1152c <mpfr_div@@Base+0xc00>
   114c4:	cbz	x8, 114f8 <mpfr_div@@Base+0xbcc>
   114c8:	mov	w21, #0x1                   	// #1
   114cc:	b	1150c <mpfr_div@@Base+0xbe0>
   114d0:	mov	x3, xzr
   114d4:	ldur	x2, [x29, #-152]
   114d8:	ldur	x1, [x29, #-40]
   114dc:	add	x8, x25, x27, lsl #3
   114e0:	ldur	x4, [x29, #-136]
   114e4:	sub	x0, x8, x2, lsl #3
   114e8:	bl	12794 <mpfr_div@@Base+0x1e68>
   114ec:	mov	x3, x0
   114f0:	mov	x21, xzr
   114f4:	b	1152c <mpfr_div@@Base+0xc00>
   114f8:	ldur	x0, [x29, #-40]
   114fc:	mov	x1, x26
   11500:	bl	125e4 <mpfr_div@@Base+0x1cb8>
   11504:	cmp	w0, #0x0
   11508:	cset	w21, ne  // ne = any
   1150c:	ldur	x8, [x29, #-40]
   11510:	mov	x0, x25
   11514:	mov	x2, x27
   11518:	mov	x3, x21
   1151c:	add	x1, x8, x26, lsl #3
   11520:	ldur	x4, [x29, #-136]
   11524:	bl	12794 <mpfr_div@@Base+0x1e68>
   11528:	mov	x3, x0
   1152c:	add	x26, x25, x27, lsl #3
   11530:	mov	x0, x26
   11534:	mov	x1, x26
   11538:	mov	x2, x23
   1153c:	bl	c8f0 <__gmpn_sub_1@plt>
   11540:	mov	x0, x26
   11544:	mov	x1, x26
   11548:	mov	x2, x22
   1154c:	mov	x3, x23
   11550:	bl	c2c0 <__gmpn_sub_n@plt>
   11554:	ldur	x1, [x29, #-32]
   11558:	ldur	x2, [x29, #-64]
   1155c:	mov	x0, x25
   11560:	bl	c3f0 <__gmpn_cmp@plt>
   11564:	cmp	w0, #0x0
   11568:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   1156c:	csinc	w8, w0, wzr, eq  // eq = none
   11570:	cmp	w8, #0x0
   11574:	b.le	1159c <mpfr_div@@Base+0xc70>
   11578:	ldur	w8, [x29, #-52]
   1157c:	cbz	w8, 115c4 <mpfr_div@@Base+0xc98>
   11580:	ldur	w8, [x29, #-104]
   11584:	cbz	w8, 115e8 <mpfr_div@@Base+0xcbc>
   11588:	ldur	x13, [x29, #-80]
   1158c:	mov	w8, #0xffffffff            	// #-1
   11590:	mov	w9, #0x1e                  	// #30
   11594:	cmp	w13, #0x0
   11598:	b	11688 <mpfr_div@@Base+0xd5c>
   1159c:	ldur	x9, [x29, #-96]
   115a0:	cmp	x9, #0x1
   115a4:	b.ne	115fc <mpfr_div@@Base+0xcd0>  // b.any
   115a8:	cmp	w8, #0x0
   115ac:	cset	w24, ne  // ne = any
   115b0:	mov	w8, #0x1c                  	// #28
   115b4:	ldur	x12, [x29, #-48]
   115b8:	ldur	x16, [x29, #-24]
   115bc:	ldp	x13, x2, [x29, #-80]
   115c0:	b	1169c <mpfr_div@@Base+0xd70>
   115c4:	ldur	x8, [x29, #-80]
   115c8:	cmp	w8, #0x1
   115cc:	b.ne	11610 <mpfr_div@@Base+0xce4>  // b.any
   115d0:	ldur	x8, [x29, #-88]
   115d4:	cbz	x8, 1174c <mpfr_div@@Base+0xe20>
   115d8:	mov	w13, #0x1                   	// #1
   115dc:	stur	w13, [x29, #-4]
   115e0:	mov	w8, #0x1d                  	// #29
   115e4:	b	11690 <mpfr_div@@Base+0xd64>
   115e8:	ldur	x13, [x29, #-80]
   115ec:	mov	w8, #0x1                   	// #1
   115f0:	mov	w9, #0x1d                  	// #29
   115f4:	cmp	w13, #0x0
   115f8:	b	11688 <mpfr_div@@Base+0xd5c>
   115fc:	ldur	x9, [x29, #-88]
   11600:	cbz	x9, 1163c <mpfr_div@@Base+0xd10>
   11604:	stur	w8, [x29, #-4]
   11608:	mov	w8, #0x12                  	// #18
   1160c:	b	115b4 <mpfr_div@@Base+0xc88>
   11610:	ldp	x14, x13, [x29, #-88]
   11614:	ldur	x12, [x29, #-48]
   11618:	ldur	x16, [x29, #-24]
   1161c:	ldur	x2, [x29, #-72]
   11620:	ldur	x27, [x29, #-112]
   11624:	cmp	x14, #0x0
   11628:	mov	w8, #0x1                   	// #1
   1162c:	cneg	w8, w8, ne  // ne = any
   11630:	stur	w8, [x29, #-4]
   11634:	mov	w8, #0x1d                  	// #29
   11638:	b	116a4 <mpfr_div@@Base+0xd78>
   1163c:	ldur	w12, [x29, #-52]
   11640:	ldur	w11, [x29, #-140]
   11644:	ldur	x13, [x29, #-80]
   11648:	mov	w9, #0x1d                  	// #29
   1164c:	cmp	w12, #0x0
   11650:	cset	w10, eq  // eq = none
   11654:	cmp	w11, w12
   11658:	orr	w8, w8, w13
   1165c:	cset	w11, ne  // ne = any
   11660:	cmp	w12, #0x1
   11664:	cset	w12, ne  // ne = any
   11668:	cmp	w8, #0x0
   1166c:	cset	w8, ne  // ne = any
   11670:	and	w11, w12, w11
   11674:	and	w8, w8, w11
   11678:	orr	w8, w10, w8
   1167c:	csetm	w12, ne  // ne = any
   11680:	cmp	w8, #0x0
   11684:	csinc	w8, w12, wzr, eq  // eq = none
   11688:	stur	w8, [x29, #-4]
   1168c:	cinc	w8, w9, eq  // eq = none
   11690:	ldur	x12, [x29, #-48]
   11694:	ldur	x16, [x29, #-24]
   11698:	ldur	x2, [x29, #-72]
   1169c:	ldur	x27, [x29, #-112]
   116a0:	ldur	x14, [x29, #-88]
   116a4:	ldur	w28, [x29, #-52]
   116a8:	sub	w9, w8, #0x12
   116ac:	cmp	w9, #0xd
   116b0:	b.hi	10e4c <mpfr_div@@Base+0x520>  // b.pmore
   116b4:	adrp	x8, 5a000 <mpfr_free_pool@@Base+0x2854>
   116b8:	add	x8, x8, #0xe8
   116bc:	adr	x10, 10d74 <mpfr_div@@Base+0x448>
   116c0:	ldrh	w11, [x8, x9, lsl #1]
   116c4:	add	x10, x10, x11, lsl #2
   116c8:	br	x10
   116cc:	ldur	x2, [x29, #-72]
   116d0:	mov	w8, #0x1                   	// #1
   116d4:	lsl	x3, x8, x13
   116d8:	mov	x0, x16
   116dc:	mov	x1, x16
   116e0:	mov	x20, x13
   116e4:	bl	c8f0 <__gmpn_sub_1@plt>
   116e8:	ldur	x8, [x29, #-160]
   116ec:	ldur	x2, [x29, #-72]
   116f0:	ldur	x16, [x29, #-24]
   116f4:	mov	x13, x20
   116f8:	sub	x8, x8, x0
   116fc:	stur	x8, [x29, #-160]
   11700:	mov	w8, #0x1                   	// #1
   11704:	lsl	x3, x8, x13
   11708:	mov	x0, x16
   1170c:	mov	x1, x16
   11710:	bl	c8f0 <__gmpn_sub_1@plt>
   11714:	ldur	x8, [x29, #-160]
   11718:	ldur	x16, [x29, #-24]
   1171c:	ldur	x12, [x29, #-48]
   11720:	sub	x8, x8, x0
   11724:	stur	x8, [x29, #-160]
   11728:	ldur	x8, [x29, #-160]
   1172c:	cbz	x8, 10dd8 <mpfr_div@@Base+0x4ac>
   11730:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   11734:	cmp	x27, x8
   11738:	ldur	x8, [x29, #-128]
   1173c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   11740:	cinc	x27, x27, ne  // ne = any
   11744:	str	x9, [x16, x8, lsl #3]
   11748:	b	10dd8 <mpfr_div@@Base+0x4ac>
   1174c:	mov	w8, #0xffffffff            	// #-1
   11750:	mov	w13, wzr
   11754:	stur	w8, [x29, #-4]
   11758:	mov	w8, #0x1f                  	// #31
   1175c:	b	11690 <mpfr_div@@Base+0xd64>
   11760:	sub	x0, x29, #0x10
   11764:	mov	x1, x23
   11768:	bl	c220 <mpfr_tmp_allocate@plt>
   1176c:	ldur	x17, [x29, #-120]
   11770:	ldur	x18, [x29, #-40]
   11774:	mov	x22, x0
   11778:	subs	x25, x20, x17
   1177c:	b.gt	1106c <mpfr_div@@Base+0x740>
   11780:	add	x8, x18, x17, lsl #3
   11784:	sub	x1, x8, x20, lsl #3
   11788:	cmp	x1, x22
   1178c:	b.eq	1179c <mpfr_div@@Base+0xe70>  // b.none
   11790:	mov	x0, x22
   11794:	mov	x2, x23
   11798:	bl	be50 <memcpy@plt>
   1179c:	ldur	x8, [x29, #-64]
   117a0:	lsl	x23, x21, #3
   117a4:	subs	x25, x21, x8
   117a8:	b.le	11808 <mpfr_div@@Base+0xedc>
   117ac:	cmp	x23, #0x4, lsl #12
   117b0:	b.hi	11a04 <mpfr_div@@Base+0x10d8>  // b.pmore
   117b4:	add	x9, x23, #0xf
   117b8:	mov	x8, sp
   117bc:	and	x9, x9, #0xfffffffffffffff0
   117c0:	sub	x26, x8, x9
   117c4:	mov	sp, x26
   117c8:	ldur	x9, [x29, #-96]
   117cc:	add	x8, x26, x21, lsl #3
   117d0:	mvn	x9, x9
   117d4:	add	x0, x8, x9, lsl #3
   117d8:	ldur	x8, [x29, #-32]
   117dc:	cmp	x0, x8
   117e0:	b.eq	117f4 <mpfr_div@@Base+0xec8>  // b.none
   117e4:	ldur	x8, [x29, #-64]
   117e8:	ldur	x1, [x29, #-32]
   117ec:	lsl	x2, x8, #3
   117f0:	bl	be50 <memcpy@plt>
   117f4:	lsl	x2, x25, #3
   117f8:	mov	x0, x26
   117fc:	mov	w1, wzr
   11800:	bl	c5b0 <memset@plt>
   11804:	b	11824 <mpfr_div@@Base+0xef8>
   11808:	ldur	x8, [x29, #-32]
   1180c:	ldur	x9, [x29, #-64]
   11810:	ldur	x10, [x29, #-128]
   11814:	add	x8, x8, x9, lsl #3
   11818:	mov	x9, #0xfffffffffffffffe    	// #-2
   1181c:	sub	x9, x9, x10
   11820:	add	x26, x8, x9, lsl #3
   11824:	ldur	w28, [x29, #-52]
   11828:	cmp	x23, #0x4, lsl #12
   1182c:	b.hi	119c8 <mpfr_div@@Base+0x109c>  // b.pmore
   11830:	add	x9, x23, #0xf
   11834:	mov	x8, sp
   11838:	and	x9, x9, #0xfffffffffffffff0
   1183c:	sub	x23, x8, x9
   11840:	mov	sp, x23
   11844:	mov	x0, x23
   11848:	mov	x1, x22
   1184c:	mov	x2, x26
   11850:	mov	x3, x21
   11854:	bl	c5e0 <mpfr_divhigh_n@plt>
   11858:	mov	x22, x0
   1185c:	cmn	x24, #0xbf
   11860:	lsl	x24, x21, #6
   11864:	b.le	119dc <mpfr_div@@Base+0x10b0>
   11868:	orr	x8, x20, #0x1
   1186c:	clz	x8, x8
   11870:	orr	x8, x8, #0xffffffffffffffc0
   11874:	cmp	x22, #0x1
   11878:	add	x22, x8, x24
   1187c:	b.ne	118a8 <mpfr_div@@Base+0xf7c>  // b.any
   11880:	mov	w3, #0x1                   	// #1
   11884:	mov	x0, x23
   11888:	mov	x1, x23
   1188c:	mov	x2, x21
   11890:	bl	c140 <__gmpn_rshift@plt>
   11894:	ldur	x8, [x29, #-72]
   11898:	lsl	x8, x8, #3
   1189c:	ldr	x9, [x23, x8]
   118a0:	orr	x9, x9, #0x8000000000000000
   118a4:	str	x9, [x23, x8]
   118a8:	ldr	x8, [x19]
   118ac:	cmp	w28, #0x0
   118b0:	mov	x0, x23
   118b4:	mov	x1, x21
   118b8:	cinc	x3, x8, eq  // eq = none
   118bc:	mov	x2, x22
   118c0:	bl	c830 <mpfr_round_p@plt>
   118c4:	cbz	w0, 119f8 <mpfr_div@@Base+0x10cc>
   118c8:	ldur	x16, [x29, #-24]
   118cc:	add	x21, x23, #0x8
   118d0:	cmp	x16, x21
   118d4:	b.eq	118f0 <mpfr_div@@Base+0xfc4>  // b.none
   118d8:	ldur	x8, [x29, #-72]
   118dc:	mov	x0, x16
   118e0:	mov	x1, x21
   118e4:	lsl	x2, x8, #3
   118e8:	bl	be50 <memcpy@plt>
   118ec:	ldur	x16, [x29, #-24]
   118f0:	ldur	x13, [x29, #-80]
   118f4:	ldr	x8, [x16]
   118f8:	mov	x9, #0xffffffffffffffff    	// #-1
   118fc:	lsl	x9, x9, x13
   11900:	and	x8, x8, x9
   11904:	str	x8, [x16]
   11908:	cbz	w28, 11928 <mpfr_div@@Base+0xffc>
   1190c:	ldur	w8, [x29, #-104]
   11910:	cbz	w8, 11940 <mpfr_div@@Base+0x1014>
   11914:	mov	x14, xzr
   11918:	mov	w8, #0xffffffff            	// #-1
   1191c:	mov	w9, #0x12                  	// #18
   11920:	stur	w8, [x29, #-4]
   11924:	b	1197c <mpfr_div@@Base+0x1050>
   11928:	cbz	w13, 1194c <mpfr_div@@Base+0x1020>
   1192c:	ldr	x8, [x21]
   11930:	sub	w9, w13, #0x1
   11934:	lsr	x8, x8, x9
   11938:	and	x14, x8, #0x1
   1193c:	b	11954 <mpfr_div@@Base+0x1028>
   11940:	mov	x14, xzr
   11944:	mov	w9, #0x13                  	// #19
   11948:	b	1197c <mpfr_div@@Base+0x1050>
   1194c:	ldr	x8, [x23]
   11950:	lsr	x14, x8, #63
   11954:	cbz	x14, 11964 <mpfr_div@@Base+0x1038>
   11958:	ldur	w28, [x29, #-52]
   1195c:	mov	w9, #0x13                  	// #19
   11960:	b	11974 <mpfr_div@@Base+0x1048>
   11964:	ldur	w28, [x29, #-52]
   11968:	mov	w8, #0xffffffff            	// #-1
   1196c:	stur	w8, [x29, #-4]
   11970:	mov	w9, #0x12                  	// #18
   11974:	ldur	x16, [x29, #-24]
   11978:	ldur	x13, [x29, #-80]
   1197c:	cmp	w9, #0x13
   11980:	b.eq	119a8 <mpfr_div@@Base+0x107c>  // b.none
   11984:	ldur	x12, [x29, #-48]
   11988:	cmp	w9, #0x12
   1198c:	b.eq	10dd8 <mpfr_div@@Base+0x4ac>  // b.none
   11990:	ldur	x23, [x29, #-72]
   11994:	ldur	x18, [x29, #-40]
   11998:	ldur	x25, [x29, #-136]
   1199c:	ldur	x17, [x29, #-120]
   119a0:	cbz	w9, 10b94 <mpfr_div@@Base+0x268>
   119a4:	b	10e4c <mpfr_div@@Base+0x520>
   119a8:	ldur	x2, [x29, #-72]
   119ac:	b	10d88 <mpfr_div@@Base+0x45c>
   119b0:	sub	x0, x29, #0x10
   119b4:	bl	c220 <mpfr_tmp_allocate@plt>
   119b8:	ldur	x17, [x29, #-120]
   119bc:	ldur	x18, [x29, #-40]
   119c0:	mov	x26, x0
   119c4:	b	10ba4 <mpfr_div@@Base+0x278>
   119c8:	sub	x0, x29, #0x10
   119cc:	mov	x1, x23
   119d0:	bl	c220 <mpfr_tmp_allocate@plt>
   119d4:	mov	x23, x0
   119d8:	b	11844 <mpfr_div@@Base+0xf18>
   119dc:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   119e0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   119e4:	add	x0, x0, #0x108
   119e8:	add	x2, x2, #0x10e
   119ec:	mov	w1, #0x442                 	// #1090
   119f0:	bl	d030 <mpfr_assert_fail@plt>
   119f4:	b	11868 <mpfr_div@@Base+0xf3c>
   119f8:	mov	x14, xzr
   119fc:	mov	w9, wzr
   11a00:	b	11974 <mpfr_div@@Base+0x1048>
   11a04:	sub	x0, x29, #0x10
   11a08:	mov	x1, x23
   11a0c:	bl	c220 <mpfr_tmp_allocate@plt>
   11a10:	mov	x26, x0
   11a14:	b	117c8 <mpfr_div@@Base+0xe9c>
   11a18:	sub	x0, x29, #0x10
   11a1c:	bl	c220 <mpfr_tmp_allocate@plt>
   11a20:	mov	x25, x0
   11a24:	b	112d8 <mpfr_div@@Base+0x9ac>
   11a28:	stp	x29, x30, [sp, #-16]!
   11a2c:	ldp	x13, x10, [x1, #16]
   11a30:	ldp	x17, x12, [x2, #16]
   11a34:	ldr	x11, [x0]
   11a38:	mov	w15, #0x1                   	// #1
   11a3c:	ldr	x18, [x10]
   11a40:	ldr	x14, [x12]
   11a44:	neg	x10, x11
   11a48:	lsl	x10, x15, x10
   11a4c:	mov	x8, x0
   11a50:	cmp	x18, x14
   11a54:	csel	x15, x14, xzr, cs  // cs = hs, nlast
   11a58:	sub	x18, x18, x15
   11a5c:	lsr	x15, x14, #52
   11a60:	ldr	x9, [x0, #24]
   11a64:	adrp	x0, 5a000 <mpfr_free_pool@@Base+0x2854>
   11a68:	and	x15, x15, #0xff8
   11a6c:	add	x0, x0, #0x908
   11a70:	sub	x15, x15, #0x800
   11a74:	adrp	x16, 5a000 <mpfr_free_pool@@Base+0x2854>
   11a78:	ldr	x0, [x0, x15]
   11a7c:	add	x16, x16, #0x108
   11a80:	ldr	x15, [x16, x15]
   11a84:	lsr	x16, x14, #24
   11a88:	add	x16, x16, #0x1
   11a8c:	mov	x4, #0xffffffffffffffff    	// #-1
   11a90:	mul	x0, x0, x16
   11a94:	eor	x0, x4, x0, lsr #40
   11a98:	mov	x12, #0x1000000000000000    	// #1152921504606846976
   11a9c:	add	x15, x15, x0
   11aa0:	msub	x12, x15, x16, x12
   11aa4:	mul	x12, x12, x15
   11aa8:	and	x0, x14, #0x1
   11aac:	lsr	x12, x12, #47
   11ab0:	sub	x16, x14, #0x1
   11ab4:	add	x15, x12, x15, lsl #13
   11ab8:	neg	x0, x0
   11abc:	lsr	x16, x16, #1
   11ac0:	and	x0, x15, x0
   11ac4:	add	x16, x16, #0x1
   11ac8:	lsr	x0, x0, #1
   11acc:	msub	x16, x15, x16, x0
   11ad0:	lsl	x0, x15, #31
   11ad4:	umulh	x15, x15, x16
   11ad8:	add	x15, x0, x15, lsr #1
   11adc:	cset	w12, cs  // cs = hs, nlast
   11ae0:	umulh	x15, x18, x15
   11ae4:	add	x16, x15, x18
   11ae8:	sub	x4, x10, #0x1
   11aec:	lsr	x0, x16, x12
   11af0:	add	x5, x0, #0x2
   11af4:	lsr	x15, x4, #1
   11af8:	and	x4, x5, x15
   11afc:	cmp	x4, #0x3
   11b00:	sub	x13, x13, x17
   11b04:	mov	x29, sp
   11b08:	b.cc	11c6c <mpfr_div@@Base+0x1340>  // b.lo, b.ul, b.last
   11b0c:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   11b10:	lsr	x11, x14, x11
   11b14:	and	x14, x0, x11
   11b18:	mov	w15, #0x1                   	// #1
   11b1c:	orr	x11, x0, #0x8000000000000000
   11b20:	neg	x16, x10
   11b24:	and	x16, x11, x16
   11b28:	str	x16, [x9]
   11b2c:	ldr	w11, [x1, #8]
   11b30:	ldr	w17, [x2, #8]
   11b34:	add	x12, x13, x12
   11b38:	mul	w2, w17, w11
   11b3c:	str	w2, [x8, #8]
   11b40:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   11b44:	ldr	x1, [x0, #2768]
   11b48:	add	x0, x0, #0xad0
   11b4c:	blr	x1
   11b50:	mrs	x11, tpidr_el0
   11b54:	ldr	x13, [x11, x0]
   11b58:	cmp	x12, x13
   11b5c:	b.gt	11c58 <mpfr_div@@Base+0x132c>
   11b60:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   11b64:	ldr	x1, [x0, #2736]
   11b68:	add	x0, x0, #0xab0
   11b6c:	blr	x1
   11b70:	ldr	x13, [x11, x0]
   11b74:	cmp	x12, x13
   11b78:	b.lt	11cd4 <mpfr_div@@Base+0x13a8>  // b.tstop
   11b7c:	mov	w0, wzr
   11b80:	cmp	w3, #0x5
   11b84:	str	x12, [x8, #16]
   11b88:	b.eq	11c44 <mpfr_div@@Base+0x1318>  // b.none
   11b8c:	orr	x13, x14, x15
   11b90:	cbz	x13, 11c44 <mpfr_div@@Base+0x1318>
   11b94:	cmp	w3, #0x1
   11b98:	b.eq	11bc8 <mpfr_div@@Base+0x129c>  // b.none
   11b9c:	cbnz	w3, 11bbc <mpfr_div@@Base+0x1290>
   11ba0:	cbz	x14, 11bc8 <mpfr_div@@Base+0x129c>
   11ba4:	ldr	x13, [x9]
   11ba8:	adds	x10, x13, x10
   11bac:	str	x10, [x9]
   11bb0:	b.eq	11bf4 <mpfr_div@@Base+0x12c8>  // b.none
   11bb4:	cbnz	w2, 11c24 <mpfr_div@@Base+0x12f8>
   11bb8:	b	11c4c <mpfr_div@@Base+0x1320>
   11bbc:	add	w13, w3, w2, lsr #31
   11bc0:	cmp	w13, #0x3
   11bc4:	b.ne	11ba4 <mpfr_div@@Base+0x1278>  // b.any
   11bc8:	cbz	w2, 11c4c <mpfr_div@@Base+0x1320>
   11bcc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   11bd0:	ldr	x1, [x0, #2800]
   11bd4:	add	x0, x0, #0xaf0
   11bd8:	blr	x1
   11bdc:	ldr	w8, [x11, x0]
   11be0:	orr	w8, w8, #0x8
   11be4:	str	w8, [x11, x0]
   11be8:	neg	w0, w2
   11bec:	ldp	x29, x30, [sp], #16
   11bf0:	ret
   11bf4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   11bf8:	str	x10, [x9]
   11bfc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   11c00:	ldr	x1, [x0, #2768]
   11c04:	add	x0, x0, #0xad0
   11c08:	blr	x1
   11c0c:	ldr	x9, [x11, x0]
   11c10:	cmp	x12, x9
   11c14:	b.ge	11c58 <mpfr_div@@Base+0x132c>  // b.tcont
   11c18:	add	x9, x12, #0x1
   11c1c:	str	x9, [x8, #16]
   11c20:	cbz	w2, 11c4c <mpfr_div@@Base+0x1320>
   11c24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   11c28:	ldr	x1, [x0, #2800]
   11c2c:	add	x0, x0, #0xaf0
   11c30:	blr	x1
   11c34:	ldr	w8, [x11, x0]
   11c38:	orr	w8, w8, #0x8
   11c3c:	str	w8, [x11, x0]
   11c40:	mov	w0, w2
   11c44:	ldp	x29, x30, [sp], #16
   11c48:	ret
   11c4c:	mov	w0, wzr
   11c50:	ldp	x29, x30, [sp], #16
   11c54:	ret
   11c58:	mov	x0, x8
   11c5c:	mov	w1, w3
   11c60:	bl	c3a0 <mpfr_overflow@plt>
   11c64:	ldp	x29, x30, [sp], #16
   11c68:	ret
   11c6c:	mov	x0, xzr
   11c70:	umulh	x4, x16, x14
   11c74:	mul	x5, x16, x14
   11c78:	subs	x17, x0, x5
   11c7c:	sbc	x18, x18, x4
   11c80:	cbnz	x18, 11c8c <mpfr_div@@Base+0x1360>
   11c84:	cmp	x17, x14
   11c88:	b.cc	11cb0 <mpfr_div@@Base+0x1384>  // b.lo, b.ul, b.last
   11c8c:	neg	x0, x14
   11c90:	add	x4, x0, x17
   11c94:	subs	x17, x17, x14
   11c98:	cset	w5, cc  // cc = lo, ul, last
   11c9c:	subs	x18, x18, x5
   11ca0:	add	x16, x16, #0x1
   11ca4:	b.ne	11c90 <mpfr_div@@Base+0x1364>  // b.any
   11ca8:	cmp	x4, x14
   11cac:	b.cs	11c90 <mpfr_div@@Base+0x1364>  // b.hs, b.nlast
   11cb0:	and	x14, x16, x12
   11cb4:	lsr	x0, x16, x12
   11cb8:	mov	x16, #0x8000000000000000    	// #-9223372036854775808
   11cbc:	orr	x17, x17, x14
   11cc0:	lsr	x11, x16, x11
   11cc4:	and	x15, x0, x15
   11cc8:	and	x14, x0, x11
   11ccc:	orr	x15, x17, x15
   11cd0:	b	11b1c <mpfr_div@@Base+0x11f0>
   11cd4:	cbnz	w3, 11cfc <mpfr_div@@Base+0x13d0>
   11cd8:	sub	x9, x13, #0x1
   11cdc:	cmp	x12, x9
   11ce0:	b.lt	11cf8 <mpfr_div@@Base+0x13cc>  // b.tstop
   11ce4:	mov	w3, wzr
   11ce8:	cbnz	x15, 11cfc <mpfr_div@@Base+0x13d0>
   11cec:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   11cf0:	cmp	x16, x9
   11cf4:	b.ne	11cfc <mpfr_div@@Base+0x13d0>  // b.any
   11cf8:	mov	w3, #0x1                   	// #1
   11cfc:	mov	x0, x8
   11d00:	mov	w1, w3
   11d04:	bl	c880 <mpfr_underflow@plt>
   11d08:	ldp	x29, x30, [sp], #16
   11d0c:	ret
   11d10:	sub	sp, sp, #0x90
   11d14:	stp	x29, x30, [sp, #48]
   11d18:	stp	x28, x27, [sp, #64]
   11d1c:	stp	x26, x25, [sp, #80]
   11d20:	stp	x24, x23, [sp, #96]
   11d24:	stp	x22, x21, [sp, #112]
   11d28:	stp	x20, x19, [sp, #128]
   11d2c:	ldp	x8, x10, [x1, #16]
   11d30:	ldp	x9, x11, [x2, #16]
   11d34:	ldr	x13, [x0]
   11d38:	str	x2, [sp, #16]
   11d3c:	ldp	x25, x2, [x10]
   11d40:	ldp	x24, x23, [x11]
   11d44:	ldr	x28, [x0, #24]
   11d48:	neg	x12, x13
   11d4c:	mov	w27, #0x1                   	// #1
   11d50:	mov	x22, x1
   11d54:	cmp	x2, x23
   11d58:	lsl	x26, x27, x12
   11d5c:	add	x29, sp, #0x30
   11d60:	b.hi	11d74 <mpfr_div@@Base+0x1448>  // b.pmore
   11d64:	cset	w10, eq  // eq = none
   11d68:	cmp	x25, x24
   11d6c:	cset	w11, cs  // cs = hs, nlast
   11d70:	and	w27, w10, w11
   11d74:	sub	x19, x26, #0x1
   11d78:	mov	x21, x0
   11d7c:	mov	w20, w3
   11d80:	str	x13, [sp, #8]
   11d84:	cbz	w27, 11d94 <mpfr_div@@Base+0x1468>
   11d88:	subs	x10, x25, x24
   11d8c:	sbc	x2, x2, x23
   11d90:	mov	x25, x10
   11d94:	sub	x8, x8, x9
   11d98:	sub	x0, x29, #0x8
   11d9c:	sub	x1, x29, #0x10
   11da0:	mov	x3, x25
   11da4:	mov	x4, x23
   11da8:	mov	x5, x24
   11dac:	str	x8, [sp, #24]
   11db0:	bl	127f4 <mpfr_div@@Base+0x1ec8>
   11db4:	ldur	x9, [x29, #-16]
   11db8:	add	x8, x9, #0x15
   11dbc:	and	x8, x8, x19, lsr #1
   11dc0:	cmp	x8, #0x15
   11dc4:	b.ls	11df8 <mpfr_div@@Base+0x14cc>  // b.plast
   11dc8:	mov	w9, #0x1                   	// #1
   11dcc:	cbz	w27, 11ec0 <mpfr_div@@Base+0x1594>
   11dd0:	ldp	x8, x10, [x29, #-16]
   11dd4:	ldr	x18, [sp, #24]
   11dd8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   11ddc:	and	x12, x8, #0x1
   11de0:	add	x18, x18, #0x1
   11de4:	extr	x8, x10, x8, #1
   11de8:	bfxil	x11, x10, #1, #63
   11dec:	orr	x9, x12, x9
   11df0:	stp	x8, x11, [x29, #-16]
   11df4:	b	11ec4 <mpfr_div@@Base+0x1598>
   11df8:	ldp	x14, x8, [x29, #-16]
   11dfc:	umulh	x10, x9, x24
   11e00:	mul	x13, x9, x23
   11e04:	umulh	x12, x9, x23
   11e08:	adds	x10, x10, x13
   11e0c:	sub	x12, x25, x12
   11e10:	cset	w13, cs  // cs = hs, nlast
   11e14:	mul	x15, x8, x24
   11e18:	mul	x11, x9, x24
   11e1c:	sub	x12, x12, x13
   11e20:	umulh	x13, x8, x24
   11e24:	adds	x10, x15, x10
   11e28:	sub	x12, x12, x13
   11e2c:	cset	w13, cs  // cs = hs, nlast
   11e30:	cmp	x11, #0x0
   11e34:	csetm	x15, ne  // ne = any
   11e38:	sub	x10, x15, x10
   11e3c:	orr	x11, x10, x11
   11e40:	msub	x12, x8, x23, x12
   11e44:	cmp	x11, #0x0
   11e48:	sub	x12, x12, x13
   11e4c:	cset	w11, ne  // ne = any
   11e50:	mneg	x9, x9, x24
   11e54:	sub	x12, x12, x11
   11e58:	neg	x11, x14
   11e5c:	b	11e80 <mpfr_div@@Base+0x1554>
   11e60:	cset	w13, eq  // eq = none
   11e64:	cmp	x9, x24
   11e68:	cset	w14, cc  // cc = lo, ul, last
   11e6c:	and	w13, w13, w14
   11e70:	subs	x14, x9, x24
   11e74:	sbc	x10, x10, x23
   11e78:	sub	x12, x12, x13
   11e7c:	mov	x9, x14
   11e80:	cbnz	x12, 11e98 <mpfr_div@@Base+0x156c>
   11e84:	cmp	x10, x23
   11e88:	b.hi	11e98 <mpfr_div@@Base+0x156c>  // b.pmore
   11e8c:	b.ne	11eb0 <mpfr_div@@Base+0x1584>  // b.any
   11e90:	cmp	x9, x24
   11e94:	b.cc	11eb0 <mpfr_div@@Base+0x1584>  // b.lo, b.ul, b.last
   11e98:	subs	x11, x11, #0x1
   11e9c:	cinc	x8, x8, eq  // eq = none
   11ea0:	cmp	x10, x23
   11ea4:	b.cs	11e60 <mpfr_div@@Base+0x1534>  // b.hs, b.nlast
   11ea8:	mov	w13, #0x1                   	// #1
   11eac:	b	11e70 <mpfr_div@@Base+0x1544>
   11eb0:	neg	x11, x11
   11eb4:	orr	x9, x9, x10
   11eb8:	stp	x11, x8, [x29, #-16]
   11ebc:	cbnz	w27, 11dd0 <mpfr_div@@Base+0x14a4>
   11ec0:	ldr	x18, [sp, #24]
   11ec4:	ldp	x13, x10, [x29, #-16]
   11ec8:	ldr	x12, [sp, #16]
   11ecc:	neg	x8, x26
   11ed0:	and	x11, x13, x8
   11ed4:	stp	x11, x10, [x28]
   11ed8:	ldr	w8, [x22, #8]
   11edc:	ldr	w12, [x12, #8]
   11ee0:	mul	w2, w12, w8
   11ee4:	str	w2, [x21, #8]
   11ee8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   11eec:	ldr	x1, [x0, #2768]
   11ef0:	add	x0, x0, #0xad0
   11ef4:	blr	x1
   11ef8:	mrs	x8, tpidr_el0
   11efc:	ldr	x12, [x8, x0]
   11f00:	cmp	x18, x12
   11f04:	b.le	11f18 <mpfr_div@@Base+0x15ec>
   11f08:	mov	x0, x21
   11f0c:	mov	w1, w20
   11f10:	bl	c3a0 <mpfr_overflow@plt>
   11f14:	b	11f90 <mpfr_div@@Base+0x1664>
   11f18:	ldr	x0, [sp, #8]
   11f1c:	mov	w12, #0x7f                  	// #127
   11f20:	mov	w14, #0x1                   	// #1
   11f24:	sub	x12, x12, x0
   11f28:	lsl	x12, x14, x12
   11f2c:	and	x12, x13, x12
   11f30:	and	x13, x13, x19
   11f34:	eor	x13, x13, x12
   11f38:	orr	x9, x13, x9
   11f3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   11f40:	ldr	x1, [x0, #2736]
   11f44:	add	x0, x0, #0xab0
   11f48:	blr	x1
   11f4c:	ldr	x13, [x8, x0]
   11f50:	cmp	x18, x13
   11f54:	b.ge	11fb0 <mpfr_div@@Base+0x1684>  // b.tcont
   11f58:	cbnz	w20, 11f84 <mpfr_div@@Base+0x1658>
   11f5c:	sub	x8, x13, #0x1
   11f60:	cmp	x18, x8
   11f64:	b.lt	11f80 <mpfr_div@@Base+0x1654>  // b.tstop
   11f68:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   11f6c:	cmp	x10, x8
   11f70:	mov	w20, wzr
   11f74:	b.ne	11f84 <mpfr_div@@Base+0x1658>  // b.any
   11f78:	orr	x8, x9, x11
   11f7c:	cbnz	x8, 11f84 <mpfr_div@@Base+0x1658>
   11f80:	mov	w20, #0x1                   	// #1
   11f84:	mov	x0, x21
   11f88:	mov	w1, w20
   11f8c:	bl	c880 <mpfr_underflow@plt>
   11f90:	ldp	x20, x19, [sp, #128]
   11f94:	ldp	x22, x21, [sp, #112]
   11f98:	ldp	x24, x23, [sp, #96]
   11f9c:	ldp	x26, x25, [sp, #80]
   11fa0:	ldp	x28, x27, [sp, #64]
   11fa4:	ldp	x29, x30, [sp, #48]
   11fa8:	add	sp, sp, #0x90
   11fac:	ret
   11fb0:	mov	w0, wzr
   11fb4:	cmp	w20, #0x5
   11fb8:	str	x18, [x21, #16]
   11fbc:	b.eq	11f90 <mpfr_div@@Base+0x1664>  // b.none
   11fc0:	orr	x9, x9, x12
   11fc4:	cbz	x9, 11f90 <mpfr_div@@Base+0x1664>
   11fc8:	cmp	w20, #0x1
   11fcc:	b.eq	12050 <mpfr_div@@Base+0x1724>  // b.none
   11fd0:	cbnz	w20, 12044 <mpfr_div@@Base+0x1718>
   11fd4:	cbz	x12, 12050 <mpfr_div@@Base+0x1724>
   11fd8:	ldp	x9, x10, [x28]
   11fdc:	adds	x9, x9, x26
   11fe0:	str	x9, [x28]
   11fe4:	cinc	x9, x10, eq  // eq = none
   11fe8:	str	x9, [x28, #8]
   11fec:	cbnz	x9, 1201c <mpfr_div@@Base+0x16f0>
   11ff0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   11ff4:	str	x9, [x28, #8]
   11ff8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   11ffc:	ldr	x1, [x0, #2768]
   12000:	add	x0, x0, #0xad0
   12004:	blr	x1
   12008:	ldr	x9, [x8, x0]
   1200c:	cmp	x18, x9
   12010:	b.ge	11f08 <mpfr_div@@Base+0x15dc>  // b.tcont
   12014:	add	x9, x18, #0x1
   12018:	str	x9, [x21, #16]
   1201c:	cbz	w2, 12078 <mpfr_div@@Base+0x174c>
   12020:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12024:	ldr	x1, [x0, #2800]
   12028:	add	x0, x0, #0xaf0
   1202c:	blr	x1
   12030:	ldr	w9, [x8, x0]
   12034:	orr	w9, w9, #0x8
   12038:	str	w9, [x8, x0]
   1203c:	mov	w0, w2
   12040:	b	11f90 <mpfr_div@@Base+0x1664>
   12044:	add	w9, w20, w2, lsr #31
   12048:	cmp	w9, #0x3
   1204c:	b.ne	11fd8 <mpfr_div@@Base+0x16ac>  // b.any
   12050:	cbz	w2, 12078 <mpfr_div@@Base+0x174c>
   12054:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12058:	ldr	x1, [x0, #2800]
   1205c:	add	x0, x0, #0xaf0
   12060:	blr	x1
   12064:	ldr	w9, [x8, x0]
   12068:	orr	w9, w9, #0x8
   1206c:	str	w9, [x8, x0]
   12070:	neg	w0, w2
   12074:	b	11f90 <mpfr_div@@Base+0x1664>
   12078:	mov	w0, wzr
   1207c:	b	11f90 <mpfr_div@@Base+0x1664>
   12080:	stp	x29, x30, [sp, #-16]!
   12084:	ldp	x12, x13, [x2, #16]
   12088:	ldp	x11, x10, [x1, #16]
   1208c:	mov	x8, x0
   12090:	ldr	x9, [x0, #24]
   12094:	ldr	x13, [x13]
   12098:	ldr	x14, [x10]
   1209c:	adrp	x10, 5a000 <mpfr_free_pool@@Base+0x2854>
   120a0:	add	x10, x10, #0x908
   120a4:	lsr	x0, x13, #52
   120a8:	and	x0, x0, #0xff8
   120ac:	sub	x0, x0, #0x800
   120b0:	adrp	x15, 5a000 <mpfr_free_pool@@Base+0x2854>
   120b4:	ldr	x10, [x10, x0]
   120b8:	add	x15, x15, #0x108
   120bc:	ldr	x15, [x15, x0]
   120c0:	lsr	x0, x13, #24
   120c4:	add	x0, x0, #0x1
   120c8:	mov	x17, #0xffffffffffffffff    	// #-1
   120cc:	mul	x10, x10, x0
   120d0:	eor	x10, x17, x10, lsr #40
   120d4:	mov	x18, #0x1000000000000000    	// #1152921504606846976
   120d8:	add	x10, x15, x10
   120dc:	msub	x18, x10, x0, x18
   120e0:	mul	x18, x18, x10
   120e4:	mov	x16, xzr
   120e8:	and	x17, x13, #0x1
   120ec:	lsr	x18, x18, #47
   120f0:	sub	x15, x13, #0x1
   120f4:	sub	x17, x16, x17
   120f8:	add	x10, x18, x10, lsl #13
   120fc:	lsr	x15, x15, #1
   12100:	and	x17, x10, x17
   12104:	cmp	x14, x13
   12108:	add	x15, x15, #0x1
   1210c:	lsr	x17, x17, #1
   12110:	csel	x0, x13, x16, cs  // cs = hs, nlast
   12114:	lsl	x18, x10, #31
   12118:	msub	x15, x10, x15, x17
   1211c:	umulh	x10, x10, x15
   12120:	sub	x0, x14, x0
   12124:	add	x10, x18, x10, lsr #1
   12128:	umulh	x10, x0, x10
   1212c:	add	x15, x10, x0
   12130:	mov	x29, sp
   12134:	umulh	x17, x15, x13
   12138:	mul	x18, x15, x13
   1213c:	subs	x10, x16, x18
   12140:	sbc	x16, x0, x17
   12144:	cbnz	x16, 12150 <mpfr_div@@Base+0x1824>
   12148:	cmp	x10, x13
   1214c:	b.cc	12174 <mpfr_div@@Base+0x1848>  // b.lo, b.ul, b.last
   12150:	neg	x17, x13
   12154:	add	x18, x17, x10
   12158:	subs	x10, x10, x13
   1215c:	cset	w0, cc  // cc = lo, ul, last
   12160:	subs	x16, x16, x0
   12164:	add	x15, x15, #0x1
   12168:	b.ne	12154 <mpfr_div@@Base+0x1828>  // b.any
   1216c:	cmp	x18, x13
   12170:	b.cs	12154 <mpfr_div@@Base+0x1828>  // b.hs, b.nlast
   12174:	cmp	x14, x13
   12178:	sub	x11, x11, x12
   1217c:	b.cc	12198 <mpfr_div@@Base+0x186c>  // b.lo, b.ul, b.last
   12180:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   12184:	and	x13, x15, #0x1
   12188:	bfxil	x12, x15, #1, #63
   1218c:	add	x11, x11, #0x1
   12190:	str	x12, [x9]
   12194:	b	121bc <mpfr_div@@Base+0x1890>
   12198:	lsl	x12, x10, #1
   1219c:	cmp	x12, x10
   121a0:	cset	w14, cc  // cc = lo, ul, last
   121a4:	subs	x12, x12, x13
   121a8:	cset	w13, cs  // cs = hs, nlast
   121ac:	orr	w13, w14, w13
   121b0:	cmp	w13, #0x0
   121b4:	str	x15, [x9]
   121b8:	csel	x10, x12, x10, ne  // ne = any
   121bc:	ldr	w12, [x1, #8]
   121c0:	ldr	w14, [x2, #8]
   121c4:	mul	w2, w14, w12
   121c8:	str	w2, [x8, #8]
   121cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   121d0:	ldr	x1, [x0, #2768]
   121d4:	add	x0, x0, #0xad0
   121d8:	blr	x1
   121dc:	mrs	x12, tpidr_el0
   121e0:	ldr	x14, [x12, x0]
   121e4:	cmp	x11, x14
   121e8:	b.gt	122dc <mpfr_div@@Base+0x19b0>
   121ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   121f0:	ldr	x1, [x0, #2736]
   121f4:	add	x0, x0, #0xab0
   121f8:	blr	x1
   121fc:	ldr	x14, [x12, x0]
   12200:	cmp	x11, x14
   12204:	b.lt	122f0 <mpfr_div@@Base+0x19c4>  // b.tstop
   12208:	mov	w0, wzr
   1220c:	cmp	w3, #0x5
   12210:	str	x11, [x8, #16]
   12214:	b.eq	12290 <mpfr_div@@Base+0x1964>  // b.none
   12218:	orr	x10, x13, x10
   1221c:	cbz	x10, 12290 <mpfr_div@@Base+0x1964>
   12220:	cmp	w3, #0x1
   12224:	b.eq	122a4 <mpfr_div@@Base+0x1978>  // b.none
   12228:	cbnz	w3, 12298 <mpfr_div@@Base+0x196c>
   1222c:	cbz	x13, 122a4 <mpfr_div@@Base+0x1978>
   12230:	ldr	x10, [x9]
   12234:	adds	x10, x10, #0x1
   12238:	str	x10, [x9]
   1223c:	b.cc	1226c <mpfr_div@@Base+0x1940>  // b.lo, b.ul, b.last
   12240:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   12244:	str	x10, [x9]
   12248:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1224c:	ldr	x1, [x0, #2768]
   12250:	add	x0, x0, #0xad0
   12254:	blr	x1
   12258:	ldr	x9, [x12, x0]
   1225c:	cmp	x11, x9
   12260:	b.ge	122dc <mpfr_div@@Base+0x19b0>  // b.tcont
   12264:	add	x9, x11, #0x1
   12268:	str	x9, [x8, #16]
   1226c:	cbz	w2, 122d0 <mpfr_div@@Base+0x19a4>
   12270:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12274:	ldr	x1, [x0, #2800]
   12278:	add	x0, x0, #0xaf0
   1227c:	blr	x1
   12280:	ldr	w8, [x12, x0]
   12284:	orr	w8, w8, #0x8
   12288:	str	w8, [x12, x0]
   1228c:	mov	w0, w2
   12290:	ldp	x29, x30, [sp], #16
   12294:	ret
   12298:	add	w10, w3, w2, lsr #31
   1229c:	cmp	w10, #0x3
   122a0:	b.ne	12230 <mpfr_div@@Base+0x1904>  // b.any
   122a4:	cbz	w2, 122d0 <mpfr_div@@Base+0x19a4>
   122a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   122ac:	ldr	x1, [x0, #2800]
   122b0:	add	x0, x0, #0xaf0
   122b4:	blr	x1
   122b8:	ldr	w8, [x12, x0]
   122bc:	orr	w8, w8, #0x8
   122c0:	str	w8, [x12, x0]
   122c4:	neg	w0, w2
   122c8:	ldp	x29, x30, [sp], #16
   122cc:	ret
   122d0:	mov	w0, wzr
   122d4:	ldp	x29, x30, [sp], #16
   122d8:	ret
   122dc:	mov	x0, x8
   122e0:	mov	w1, w3
   122e4:	bl	c3a0 <mpfr_overflow@plt>
   122e8:	ldp	x29, x30, [sp], #16
   122ec:	ret
   122f0:	cbnz	w3, 1231c <mpfr_div@@Base+0x19f0>
   122f4:	sub	x12, x14, #0x1
   122f8:	cmp	x11, x12
   122fc:	b.lt	12318 <mpfr_div@@Base+0x19ec>  // b.tstop
   12300:	mov	w3, wzr
   12304:	cbnz	x10, 1231c <mpfr_div@@Base+0x19f0>
   12308:	ldr	x9, [x9]
   1230c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   12310:	cmp	x9, x10
   12314:	b.ne	1231c <mpfr_div@@Base+0x19f0>  // b.any
   12318:	mov	w3, #0x1                   	// #1
   1231c:	mov	x0, x8
   12320:	mov	w1, w3
   12324:	bl	c880 <mpfr_underflow@plt>
   12328:	ldp	x29, x30, [sp], #16
   1232c:	ret
   12330:	sub	sp, sp, #0xa0
   12334:	stp	x29, x30, [sp, #64]
   12338:	stp	x28, x27, [sp, #80]
   1233c:	stp	x26, x25, [sp, #96]
   12340:	stp	x24, x23, [sp, #112]
   12344:	stp	x22, x21, [sp, #128]
   12348:	stp	x20, x19, [sp, #144]
   1234c:	ldr	x8, [x0]
   12350:	add	x29, sp, #0x40
   12354:	mov	x21, x0
   12358:	sub	x0, x29, #0x10
   1235c:	mov	x27, x4
   12360:	mov	w28, w3
   12364:	mov	x23, x2
   12368:	mov	x22, x1
   1236c:	add	x26, x8, #0x40
   12370:	bl	c400 <mpfr_mpz_init@plt>
   12374:	add	x0, sp, #0x20
   12378:	bl	c400 <mpfr_mpz_init@plt>
   1237c:	add	x0, sp, #0x10
   12380:	bl	c400 <mpfr_mpz_init@plt>
   12384:	add	x0, sp, #0x20
   12388:	mov	x1, x22
   1238c:	bl	cfb0 <mpfr_get_z_2exp@plt>
   12390:	mov	x22, x0
   12394:	add	x0, sp, #0x10
   12398:	mov	x1, x23
   1239c:	bl	cfb0 <mpfr_get_z_2exp@plt>
   123a0:	mov	x20, x0
   123a4:	add	x0, sp, #0x10
   123a8:	mov	w1, #0x2                   	// #2
   123ac:	bl	d050 <__gmpz_sizeinbase@plt>
   123b0:	subs	x25, x0, x26
   123b4:	b.le	123d4 <mpfr_div@@Base+0x1aa8>
   123b8:	add	x0, sp, #0x10
   123bc:	add	x1, sp, #0x10
   123c0:	mov	x2, x25
   123c4:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   123c8:	add	x20, x25, x20
   123cc:	mov	x24, x26
   123d0:	b	123d8 <mpfr_div@@Base+0x1aac>
   123d4:	mov	x24, x0
   123d8:	add	x0, sp, #0x20
   123dc:	mov	w1, #0x2                   	// #2
   123e0:	bl	d050 <__gmpz_sizeinbase@plt>
   123e4:	add	x8, x24, x26
   123e8:	subs	x24, x0, x8
   123ec:	b.le	12408 <mpfr_div@@Base+0x1adc>
   123f0:	add	x0, sp, #0x20
   123f4:	add	x1, sp, #0x20
   123f8:	mov	x2, x24
   123fc:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   12400:	add	x22, x24, x22
   12404:	b	12424 <mpfr_div@@Base+0x1af8>
   12408:	b.ge	12424 <mpfr_div@@Base+0x1af8>  // b.tcont
   1240c:	sub	x24, x8, x0
   12410:	add	x0, sp, #0x20
   12414:	add	x1, sp, #0x20
   12418:	mov	x2, x24
   1241c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   12420:	sub	x22, x22, x24
   12424:	sub	x0, x29, #0x10
   12428:	add	x1, sp, #0x20
   1242c:	add	x2, sp, #0x10
   12430:	bl	bf90 <__gmpz_tdiv_q@plt>
   12434:	sub	x0, x29, #0x10
   12438:	mov	w1, #0x2                   	// #2
   1243c:	bl	d050 <__gmpz_sizeinbase@plt>
   12440:	sub	x19, x0, x26
   12444:	add	x24, x19, #0x1
   12448:	sub	x0, x29, #0x10
   1244c:	mov	x1, x24
   12450:	bl	bee0 <__gmpz_scan1@plt>
   12454:	cmp	w28, #0x0
   12458:	mov	w8, #0x3f                  	// #63
   1245c:	cinc	x8, x8, ne  // ne = any
   12460:	add	x19, x8, x19
   12464:	cmp	x0, x19
   12468:	b.cs	12584 <mpfr_div@@Base+0x1c58>  // b.hs, b.nlast
   1246c:	sub	x0, x29, #0x10
   12470:	mov	x1, x24
   12474:	bl	c980 <__gmpz_scan0@plt>
   12478:	cmp	x0, x19
   1247c:	b.cs	12584 <mpfr_div@@Base+0x1c58>  // b.hs, b.nlast
   12480:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12484:	ldr	x1, [x0, #2800]
   12488:	add	x0, x0, #0xaf0
   1248c:	blr	x1
   12490:	mov	x23, x27
   12494:	mrs	x27, tpidr_el0
   12498:	ldr	w8, [x27, x0]
   1249c:	mov	x24, x0
   124a0:	str	w8, [sp, #12]
   124a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   124a8:	ldr	x1, [x0, #2736]
   124ac:	add	x0, x0, #0xab0
   124b0:	blr	x1
   124b4:	ldr	x19, [x27, x0]
   124b8:	mov	x25, x0
   124bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   124c0:	ldr	x1, [x0, #2768]
   124c4:	add	x0, x0, #0xad0
   124c8:	blr	x1
   124cc:	mov	w2, w28
   124d0:	ldr	x28, [x27, x0]
   124d4:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   124d8:	str	x8, [x27, x25]
   124dc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   124e0:	mov	x26, x0
   124e4:	str	x8, [x27, x0]
   124e8:	sub	x1, x29, #0x10
   124ec:	mov	x0, x21
   124f0:	str	w2, [sp, #8]
   124f4:	bl	c6e0 <mpfr_set_z@plt>
   124f8:	ldr	w12, [sp, #12]
   124fc:	str	w0, [x23]
   12500:	str	x19, [x27, x25]
   12504:	str	x28, [x27, x26]
   12508:	str	w12, [x27, x24]
   1250c:	ldr	x9, [x21, #16]
   12510:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   12514:	sub	x10, x22, x20
   12518:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
   1251c:	cmp	x9, x8
   12520:	add	x8, x9, x10
   12524:	str	x8, [x21, #16]
   12528:	cset	w10, gt
   1252c:	cmp	x9, x11
   12530:	mov	x14, #0x3fffffffffffffff    	// #4611686018427387903
   12534:	ldr	w1, [x23]
   12538:	cset	w11, ne  // ne = any
   1253c:	cmp	x9, x14
   12540:	and	w9, w10, w11
   12544:	cset	w10, ne  // ne = any
   12548:	mov	x20, x23
   1254c:	cmp	x8, x28
   12550:	and	w22, w10, w9
   12554:	b.gt	125d4 <mpfr_div@@Base+0x1ca8>
   12558:	cmp	x8, x19
   1255c:	b.lt	125d4 <mpfr_div@@Base+0x1ca8>  // b.tstop
   12560:	cbz	w1, 1258c <mpfr_div@@Base+0x1c60>
   12564:	orr	w8, w12, #0x8
   12568:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1256c:	ldr	x1, [x0, #2800]
   12570:	add	x0, x0, #0xaf0
   12574:	blr	x1
   12578:	str	w8, [x27, x0]
   1257c:	ldr	w0, [x20]
   12580:	b	12590 <mpfr_div@@Base+0x1c64>
   12584:	mov	w22, wzr
   12588:	b	12598 <mpfr_div@@Base+0x1c6c>
   1258c:	mov	w0, wzr
   12590:	mov	x23, x20
   12594:	str	w0, [x23]
   12598:	sub	x0, x29, #0x10
   1259c:	bl	c610 <mpfr_mpz_clear@plt>
   125a0:	add	x0, sp, #0x20
   125a4:	bl	c610 <mpfr_mpz_clear@plt>
   125a8:	add	x0, sp, #0x10
   125ac:	bl	c610 <mpfr_mpz_clear@plt>
   125b0:	mov	w0, w22
   125b4:	ldp	x20, x19, [sp, #144]
   125b8:	ldp	x22, x21, [sp, #128]
   125bc:	ldp	x24, x23, [sp, #112]
   125c0:	ldp	x26, x25, [sp, #96]
   125c4:	ldp	x28, x27, [sp, #80]
   125c8:	ldp	x29, x30, [sp, #64]
   125cc:	add	sp, sp, #0xa0
   125d0:	ret
   125d4:	ldr	w2, [sp, #8]
   125d8:	mov	x0, x21
   125dc:	bl	d020 <mpfr_check_range@plt>
   125e0:	b	12590 <mpfr_div@@Base+0x1c64>
   125e4:	sub	x8, x0, #0x8
   125e8:	mov	w0, #0x1                   	// #1
   125ec:	subs	x9, x1, #0x1
   125f0:	b.lt	12604 <mpfr_div@@Base+0x1cd8>  // b.tstop
   125f4:	ldr	x10, [x8, x1, lsl #3]
   125f8:	mov	x1, x9
   125fc:	cbz	x10, 125ec <mpfr_div@@Base+0x1cc0>
   12600:	ret
   12604:	mov	w0, wzr
   12608:	ret
   1260c:	subs	x9, x1, x3
   12610:	mov	x8, x0
   12614:	b.ge	12670 <mpfr_div@@Base+0x1d44>  // b.tcont
   12618:	cmp	x1, #0x1
   1261c:	b.lt	126c8 <mpfr_div@@Base+0x1d9c>  // b.tstop
   12620:	add	x9, x2, x3, lsl #3
   12624:	mov	w0, wzr
   12628:	sub	x9, x9, #0x8
   1262c:	sub	x8, x8, #0x8
   12630:	mov	x10, x1
   12634:	cbz	w4, 12644 <mpfr_div@@Base+0x1d18>
   12638:	ldp	x12, x11, [x9]
   1263c:	extr	x11, x11, x12, #1
   12640:	b	12648 <mpfr_div@@Base+0x1d1c>
   12644:	ldr	x11, [x9]
   12648:	ldr	x12, [x8, x10, lsl #3]
   1264c:	cmp	x12, x11
   12650:	csinv	w11, w0, wzr, cs  // cs = hs, nlast
   12654:	csinc	w0, w11, wzr, ls  // ls = plast
   12658:	cmp	x10, #0x2
   1265c:	b.lt	126cc <mpfr_div@@Base+0x1da0>  // b.tstop
   12660:	sub	x10, x10, #0x1
   12664:	sub	x9, x9, #0x8
   12668:	cbz	w0, 12634 <mpfr_div@@Base+0x1d08>
   1266c:	b	126cc <mpfr_div@@Base+0x1da0>
   12670:	cmp	x3, #0x1
   12674:	b.lt	12730 <mpfr_div@@Base+0x1e04>  // b.tstop
   12678:	add	x10, x8, x1, lsl #3
   1267c:	sub	x11, x10, #0x8
   12680:	add	x10, x2, x3, lsl #3
   12684:	cbz	w4, 12694 <mpfr_div@@Base+0x1d68>
   12688:	ldp	x10, x12, [x10, #-8]
   1268c:	extr	x10, x12, x10, #1
   12690:	b	12698 <mpfr_div@@Base+0x1d6c>
   12694:	ldur	x10, [x10, #-8]
   12698:	ldr	x12, [x11], #-8
   1269c:	cmp	x12, x10
   126a0:	csetm	w10, cc  // cc = lo, ul, last
   126a4:	csinc	w10, w10, wzr, ls  // ls = plast
   126a8:	cmp	x3, #0x2
   126ac:	b.lt	126b8 <mpfr_div@@Base+0x1d8c>  // b.tstop
   126b0:	sub	x3, x3, #0x1
   126b4:	cbz	w10, 12680 <mpfr_div@@Base+0x1d54>
   126b8:	cbz	w4, 12738 <mpfr_div@@Base+0x1e0c>
   126bc:	ldr	x11, [x2]
   126c0:	lsl	x11, x11, #63
   126c4:	b	1273c <mpfr_div@@Base+0x1e10>
   126c8:	mov	w0, wzr
   126cc:	cmp	w0, #0x0
   126d0:	cset	w9, eq  // eq = none
   126d4:	cbnz	w0, 1271c <mpfr_div@@Base+0x1df0>
   126d8:	sub	x8, x3, x1
   126dc:	cmp	x8, #0x1
   126e0:	b.lt	1271c <mpfr_div@@Base+0x1df0>  // b.tstop
   126e4:	add	x9, x2, x8, lsl #3
   126e8:	cbz	w4, 126f8 <mpfr_div@@Base+0x1dcc>
   126ec:	ldp	x9, x10, [x9, #-8]
   126f0:	extr	x10, x10, x9, #1
   126f4:	b	126fc <mpfr_div@@Base+0x1dd0>
   126f8:	ldur	x10, [x9, #-8]
   126fc:	cmp	x10, #0x0
   12700:	cset	w9, eq  // eq = none
   12704:	cmp	x8, #0x2
   12708:	b.lt	12714 <mpfr_div@@Base+0x1de8>  // b.tstop
   1270c:	sub	x8, x8, #0x1
   12710:	tbnz	w9, #0, 126e4 <mpfr_div@@Base+0x1db8>
   12714:	cmp	x10, #0x0
   12718:	csetm	w0, ne  // ne = any
   1271c:	cbz	w4, 1272c <mpfr_div@@Base+0x1e00>
   12720:	cbz	w9, 1272c <mpfr_div@@Base+0x1e00>
   12724:	ldr	x8, [x2]
   12728:	sbfx	x0, x8, #0, #1
   1272c:	ret
   12730:	mov	w10, wzr
   12734:	cbnz	w4, 126bc <mpfr_div@@Base+0x1d90>
   12738:	mov	x11, xzr
   1273c:	cmp	w10, #0x0
   12740:	cset	w12, eq  // eq = none
   12744:	cbnz	w10, 12780 <mpfr_div@@Base+0x1e54>
   12748:	cmp	x9, #0x1
   1274c:	b.lt	12780 <mpfr_div@@Base+0x1e54>  // b.tstop
   12750:	sub	x8, x8, #0x8
   12754:	ldr	x10, [x8, x9, lsl #3]
   12758:	cmp	x10, x11
   1275c:	csetm	w10, cc  // cc = lo, ul, last
   12760:	csinc	w10, w10, wzr, ls  // ls = plast
   12764:	cmp	w10, #0x0
   12768:	mov	x11, xzr
   1276c:	cset	w12, eq  // eq = none
   12770:	cbnz	w10, 12780 <mpfr_div@@Base+0x1e54>
   12774:	cmp	x9, #0x1
   12778:	sub	x9, x9, #0x1
   1277c:	b.gt	12754 <mpfr_div@@Base+0x1e28>
   12780:	cmp	x11, #0x0
   12784:	cset	w8, ne  // ne = any
   12788:	tst	w12, w8
   1278c:	csinv	w0, w10, wzr, eq  // eq = none
   12790:	ret
   12794:	cbnz	x2, 127c0 <mpfr_div@@Base+0x1e94>
   12798:	mov	x0, x3
   1279c:	ret
   127a0:	cmp	x3, #0x0
   127a4:	cset	w9, ne  // ne = any
   127a8:	cmn	x8, #0x1
   127ac:	cset	w10, eq  // eq = none
   127b0:	and	w3, w9, w10
   127b4:	str	x8, [x0], #8
   127b8:	add	x1, x1, #0x8
   127bc:	cbz	x2, 12798 <mpfr_div@@Base+0x1e6c>
   127c0:	cbz	w4, 127d0 <mpfr_div@@Base+0x1ea4>
   127c4:	ldp	x9, x8, [x1]
   127c8:	extr	x8, x8, x9, #1
   127cc:	b	127d4 <mpfr_div@@Base+0x1ea8>
   127d0:	ldr	x8, [x1]
   127d4:	ldr	x9, [x0]
   127d8:	sub	x2, x2, #0x1
   127dc:	subs	x10, x9, x8
   127e0:	cmp	x9, x8
   127e4:	sub	x8, x10, x3
   127e8:	b.cs	127a0 <mpfr_div@@Base+0x1e74>  // b.hs, b.nlast
   127ec:	mov	w3, #0x1                   	// #1
   127f0:	b	127b4 <mpfr_div@@Base+0x1e88>
   127f4:	cmn	x4, #0x1
   127f8:	b.eq	12914 <mpfr_div@@Base+0x1fe8>  // b.none
   127fc:	add	x8, x4, #0x1
   12800:	lsr	x12, x8, #52
   12804:	adrp	x10, 5a000 <mpfr_free_pool@@Base+0x2854>
   12808:	and	x12, x12, #0xff8
   1280c:	add	x10, x10, #0x908
   12810:	sub	x12, x12, #0x800
   12814:	adrp	x9, 5a000 <mpfr_free_pool@@Base+0x2854>
   12818:	ldr	x10, [x10, x12]
   1281c:	add	x9, x9, #0x108
   12820:	ldr	x9, [x9, x12]
   12824:	lsr	x12, x8, #24
   12828:	add	x12, x12, #0x1
   1282c:	mov	x11, #0xffffffffffffffff    	// #-1
   12830:	mul	x10, x10, x12
   12834:	eor	x10, x11, x10, lsr #40
   12838:	mov	x11, #0x1000000000000000    	// #1152921504606846976
   1283c:	add	x9, x9, x10
   12840:	msub	x11, x9, x12, x11
   12844:	mul	x11, x11, x9
   12848:	and	x8, x8, #0x1
   1284c:	lsr	x11, x11, #47
   12850:	neg	x8, x8
   12854:	add	x9, x11, x9, lsl #13
   12858:	lsr	x10, x4, #1
   1285c:	and	x8, x9, x8
   12860:	add	x10, x10, #0x1
   12864:	lsr	x8, x8, #1
   12868:	msub	x8, x9, x10, x8
   1286c:	umulh	x8, x9, x8
   12870:	lsl	x9, x9, #31
   12874:	add	x8, x9, x8, lsr #1
   12878:	umulh	x9, x2, x8
   1287c:	add	x9, x9, x2
   12880:	mul	x11, x9, x4
   12884:	umulh	x12, x9, x5
   12888:	mul	x13, x9, x5
   1288c:	adds	x11, x11, x12
   12890:	umulh	x10, x9, x4
   12894:	cset	w14, cs  // cs = hs, nlast
   12898:	cmp	x13, #0x0
   1289c:	sub	x12, x2, x10
   128a0:	cinc	x10, x11, ne  // ne = any
   128a4:	cset	w13, ne  // ne = any
   128a8:	cmp	x10, #0x0
   128ac:	sub	x11, x12, x14
   128b0:	cset	w12, eq  // eq = none
   128b4:	subs	x14, x3, x10
   128b8:	and	w15, w13, w12
   128bc:	cset	w12, cc  // cc = lo, ul, last
   128c0:	umulh	x13, x14, x8
   128c4:	sub	x11, x11, x12
   128c8:	adds	x12, x14, x13
   128cc:	sub	x11, x11, x15
   128d0:	cinc	x9, x9, cs  // cs = hs, nlast
   128d4:	add	x9, x9, x11
   128d8:	cbz	x11, 12908 <mpfr_div@@Base+0x1fdc>
   128dc:	add	x12, x13, x3
   128e0:	add	x13, x13, x8
   128e4:	add	x13, x13, x3
   128e8:	madd	x12, x8, x11, x12
   128ec:	sub	x13, x13, x10
   128f0:	cmp	x13, x8
   128f4:	cinc	x9, x9, cc  // cc = lo, ul, last
   128f8:	subs	x11, x11, #0x1
   128fc:	add	x13, x13, x8
   12900:	b.ne	128f0 <mpfr_div@@Base+0x1fc4>  // b.any
   12904:	sub	x12, x12, x10
   12908:	str	x9, [x0]
   1290c:	str	x12, [x1]
   12910:	ret
   12914:	mov	x8, xzr
   12918:	b	12878 <mpfr_div@@Base+0x1f4c>

000000000001291c <mpfr_div_ui@@Base>:
   1291c:	stp	x29, x30, [sp, #-96]!
   12920:	stp	x28, x27, [sp, #16]
   12924:	stp	x26, x25, [sp, #32]
   12928:	stp	x24, x23, [sp, #48]
   1292c:	stp	x22, x21, [sp, #64]
   12930:	stp	x20, x19, [sp, #80]
   12934:	mov	x29, sp
   12938:	sub	sp, sp, #0x30
   1293c:	ldr	x10, [x1, #16]
   12940:	mov	x8, #0x2                   	// #2
   12944:	movk	x8, #0x8000, lsl #48
   12948:	add	x9, x8, #0x2
   1294c:	mov	x23, x2
   12950:	mov	x21, x1
   12954:	cmp	x10, x9
   12958:	mov	x19, x0
   1295c:	b.lt	12d50 <mpfr_div_ui@@Base+0x434>  // b.tstop
   12960:	mov	w22, w3
   12964:	subs	x20, x23, #0x1
   12968:	b.ls	12d88 <mpfr_div_ui@@Base+0x46c>  // b.plast
   1296c:	tst	x23, x20
   12970:	b.eq	12da4 <mpfr_div_ui@@Base+0x488>  // b.none
   12974:	ldr	w8, [x21, #8]
   12978:	stur	x10, [x29, #-32]
   1297c:	stur	w22, [x29, #-20]
   12980:	str	w8, [x19, #8]
   12984:	stur	xzr, [x29, #-8]
   12988:	ldr	x8, [x21]
   1298c:	ldr	x9, [x19]
   12990:	ldr	x24, [x21, #24]
   12994:	ldr	x21, [x19, #24]
   12998:	sub	x10, x8, #0x1
   1299c:	add	x8, x8, #0x3e
   129a0:	sub	x11, x9, #0x1
   129a4:	cmp	x10, #0x0
   129a8:	add	x9, x9, #0x3e
   129ac:	csel	x8, x8, x10, lt  // lt = tstop
   129b0:	cmp	x11, #0x0
   129b4:	csel	x9, x9, x11, lt  // lt = tstop
   129b8:	asr	x20, x9, #6
   129bc:	asr	x8, x8, #6
   129c0:	add	x25, x20, #0x2
   129c4:	add	x28, x8, #0x1
   129c8:	lsl	x1, x25, #3
   129cc:	cmp	x1, #0x4, lsl #12
   129d0:	sub	x26, x25, x28
   129d4:	b.hi	12dd0 <mpfr_div_ui@@Base+0x4b4>  // b.pmore
   129d8:	add	x9, x1, #0xf
   129dc:	mov	x8, sp
   129e0:	and	x9, x9, #0xfffffffffffffff0
   129e4:	sub	x27, x8, x9
   129e8:	mov	sp, x27
   129ec:	add	x8, x20, #0x1
   129f0:	stur	x8, [x29, #-16]
   129f4:	tbnz	x26, #63, 12a0c <mpfr_div_ui@@Base+0xf0>
   129f8:	mov	x0, x27
   129fc:	mov	x1, x26
   12a00:	mov	x2, x24
   12a04:	mov	x3, x28
   12a08:	b	12a1c <mpfr_div_ui@@Base+0x100>
   12a0c:	sub	x2, x24, x26, lsl #3
   12a10:	mov	x0, x27
   12a14:	mov	x1, xzr
   12a18:	mov	x3, x25
   12a1c:	mov	x4, x23
   12a20:	bl	cca0 <__gmpn_divrem_1@plt>
   12a24:	ldur	x2, [x29, #-16]
   12a28:	mov	x25, x0
   12a2c:	mov	x22, xzr
   12a30:	tbz	x26, #63, 12a5c <mpfr_div_ui@@Base+0x140>
   12a34:	mov	x8, xzr
   12a38:	mov	x22, xzr
   12a3c:	neg	x9, x26
   12a40:	ldr	x10, [x24, x8, lsl #3]
   12a44:	cmp	x10, #0x0
   12a48:	csinc	x22, x22, xzr, eq  // eq = none
   12a4c:	cbnz	x22, 12a5c <mpfr_div_ui@@Base+0x140>
   12a50:	add	x8, x8, #0x1
   12a54:	cmp	x8, x9
   12a58:	b.lt	12a40 <mpfr_div_ui@@Base+0x124>  // b.tstop
   12a5c:	ldr	w9, [x19]
   12a60:	ldr	x8, [x27, x2, lsl #3]
   12a64:	stur	x20, [x29, #-40]
   12a68:	neg	w9, w9
   12a6c:	and	w20, w9, #0x3f
   12a70:	cbz	x8, 12acc <mpfr_div_ui@@Base+0x1b0>
   12a74:	mov	x1, x27
   12a78:	ldr	x9, [x1], #8
   12a7c:	clz	x23, x8
   12a80:	mov	x0, x21
   12a84:	mov	w3, w23
   12a88:	lsl	x24, x9, x23
   12a8c:	bl	c120 <__gmpn_lshift@plt>
   12a90:	ldr	x8, [x27]
   12a94:	ldr	x9, [x21]
   12a98:	neg	x10, x23
   12a9c:	lsr	x8, x8, x10
   12aa0:	orr	x8, x9, x8
   12aa4:	str	x8, [x21]
   12aa8:	cbz	w20, 12b1c <mpfr_div_ui@@Base+0x200>
   12aac:	sub	w9, w20, #0x1
   12ab0:	mov	w10, #0x1                   	// #1
   12ab4:	lsl	x9, x10, x9
   12ab8:	and	x27, x8, x9
   12abc:	sub	x9, x9, #0x1
   12ac0:	and	x8, x8, x9
   12ac4:	orr	x8, x8, x24
   12ac8:	b	12b24 <mpfr_div_ui@@Base+0x208>
   12acc:	cmp	x21, x27
   12ad0:	b.eq	12ae4 <mpfr_div_ui@@Base+0x1c8>  // b.none
   12ad4:	lsl	x2, x2, #3
   12ad8:	mov	x0, x21
   12adc:	mov	x1, x27
   12ae0:	bl	be50 <memcpy@plt>
   12ae4:	ldur	x8, [x29, #-32]
   12ae8:	sub	x28, x8, #0x40
   12aec:	cbz	w20, 12c98 <mpfr_div_ui@@Base+0x37c>
   12af0:	ldr	x8, [x27]
   12af4:	sub	w9, w20, #0x1
   12af8:	mov	w10, #0x1                   	// #1
   12afc:	lsl	x9, x10, x9
   12b00:	ldur	w26, [x29, #-20]
   12b04:	sub	x10, x9, #0x1
   12b08:	and	x27, x8, x9
   12b0c:	and	x8, x8, x10
   12b10:	orr	x9, x22, x25
   12b14:	orr	x22, x9, x8
   12b18:	b	12b38 <mpfr_div_ui@@Base+0x21c>
   12b1c:	and	x27, x24, #0x8000000000000000
   12b20:	and	x8, x24, #0x7fffffffffffffff
   12b24:	orr	x9, x22, x25
   12b28:	orr	x22, x9, x8
   12b2c:	ldur	x8, [x29, #-32]
   12b30:	ldur	w26, [x29, #-20]
   12b34:	sub	x28, x8, x23
   12b38:	ldr	x8, [x21]
   12b3c:	mov	w9, #0x1                   	// #1
   12b40:	lsl	x24, x9, x20
   12b44:	neg	x9, x24
   12b48:	and	x8, x8, x9
   12b4c:	str	x8, [x21]
   12b50:	ldur	x0, [x29, #-8]
   12b54:	cbnz	x0, 12de0 <mpfr_div_ui@@Base+0x4c4>
   12b58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12b5c:	ldr	x1, [x0, #2736]
   12b60:	add	x0, x0, #0xab0
   12b64:	blr	x1
   12b68:	mrs	x20, tpidr_el0
   12b6c:	ldr	x8, [x20, x0]
   12b70:	sub	x8, x8, #0x1
   12b74:	cmp	x28, x8
   12b78:	b.lt	12de8 <mpfr_div_ui@@Base+0x4cc>  // b.tstop
   12b7c:	orr	x8, x22, x27
   12b80:	cbz	x8, 12e00 <mpfr_div_ui@@Base+0x4e4>
   12b84:	cmp	w26, #0x3
   12b88:	b.eq	12bb0 <mpfr_div_ui@@Base+0x294>  // b.none
   12b8c:	cmp	w26, #0x2
   12b90:	b.ne	12ba4 <mpfr_div_ui@@Base+0x288>  // b.any
   12b94:	ldr	w8, [x19, #8]
   12b98:	cmp	w8, #0x1
   12b9c:	mov	w8, #0x4                   	// #4
   12ba0:	csinc	w26, w8, wzr, ge  // ge = tcont
   12ba4:	cmp	w26, #0x5
   12ba8:	b.ne	12bc8 <mpfr_div_ui@@Base+0x2ac>  // b.any
   12bac:	b	12bf0 <mpfr_div_ui@@Base+0x2d4>
   12bb0:	ldr	w8, [x19, #8]
   12bb4:	cmp	w8, #0x0
   12bb8:	mov	w8, #0x4                   	// #4
   12bbc:	csinc	w26, w8, wzr, lt  // lt = tstop
   12bc0:	cmp	w26, #0x5
   12bc4:	b.eq	12bf0 <mpfr_div_ui@@Base+0x2d4>  // b.none
   12bc8:	cmp	w26, #0x4
   12bcc:	b.eq	12be0 <mpfr_div_ui@@Base+0x2c4>  // b.none
   12bd0:	cmp	w26, #0x1
   12bd4:	b.eq	12bf0 <mpfr_div_ui@@Base+0x2d4>  // b.none
   12bd8:	cbz	x27, 12bf0 <mpfr_div_ui@@Base+0x2d4>
   12bdc:	cbz	x22, 12cf8 <mpfr_div_ui@@Base+0x3dc>
   12be0:	ldr	w23, [x19, #8]
   12be4:	mov	w8, #0x1                   	// #1
   12be8:	cbnz	w8, 12c00 <mpfr_div_ui@@Base+0x2e4>
   12bec:	b	12c18 <mpfr_div_ui@@Base+0x2fc>
   12bf0:	ldr	w9, [x19, #8]
   12bf4:	mov	w8, wzr
   12bf8:	neg	w23, w9
   12bfc:	cbz	w8, 12c18 <mpfr_div_ui@@Base+0x2fc>
   12c00:	ldur	x2, [x29, #-16]
   12c04:	mov	x0, x21
   12c08:	mov	x1, x21
   12c0c:	mov	x3, x24
   12c10:	bl	bf60 <__gmpn_add_1@plt>
   12c14:	cbnz	x0, 12e20 <mpfr_div_ui@@Base+0x504>
   12c18:	str	x28, [x19, #16]
   12c1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12c20:	ldr	x1, [x0, #2736]
   12c24:	add	x0, x0, #0xab0
   12c28:	blr	x1
   12c2c:	ldr	x8, [x20, x0]
   12c30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12c34:	ldr	x1, [x0, #2768]
   12c38:	add	x0, x0, #0xad0
   12c3c:	blr	x1
   12c40:	cmp	x28, x8
   12c44:	b.lt	12e08 <mpfr_div_ui@@Base+0x4ec>  // b.tstop
   12c48:	ldr	x8, [x20, x0]
   12c4c:	cmp	x28, x8
   12c50:	b.gt	12e08 <mpfr_div_ui@@Base+0x4ec>
   12c54:	cbz	w23, 12c74 <mpfr_div_ui@@Base+0x358>
   12c58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12c5c:	ldr	x1, [x0, #2800]
   12c60:	add	x0, x0, #0xaf0
   12c64:	blr	x1
   12c68:	ldr	w8, [x20, x0]
   12c6c:	orr	w8, w8, #0x8
   12c70:	str	w8, [x20, x0]
   12c74:	mov	w0, w23
   12c78:	mov	sp, x29
   12c7c:	ldp	x20, x19, [sp, #80]
   12c80:	ldp	x22, x21, [sp, #64]
   12c84:	ldp	x24, x23, [sp, #48]
   12c88:	ldp	x26, x25, [sp, #32]
   12c8c:	ldp	x28, x27, [sp, #16]
   12c90:	ldp	x29, x30, [sp], #96
   12c94:	ret
   12c98:	sub	x8, x23, x25
   12c9c:	cmp	x25, x8
   12ca0:	b.cs	12ce0 <mpfr_div_ui@@Base+0x3c4>  // b.hs, b.nlast
   12ca4:	mov	w27, wzr
   12ca8:	tbz	x26, #63, 12cc4 <mpfr_div_ui@@Base+0x3a8>
   12cac:	lsr	x8, x23, #1
   12cb0:	cmp	x25, x8
   12cb4:	b.ne	12cc4 <mpfr_div_ui@@Base+0x3a8>  // b.any
   12cb8:	mvn	x8, x26
   12cbc:	ldr	x8, [x24, x8, lsl #3]
   12cc0:	lsr	x27, x8, #63
   12cc4:	cbz	w27, 12d14 <mpfr_div_ui@@Base+0x3f8>
   12cc8:	mvn	x8, x26
   12ccc:	ldr	x9, [x24, x8, lsl #3]
   12cd0:	lsl	x22, x9, #1
   12cd4:	cbz	x22, 12d20 <mpfr_div_ui@@Base+0x404>
   12cd8:	ldur	w26, [x29, #-20]
   12cdc:	b	12b38 <mpfr_div_ui@@Base+0x21c>
   12ce0:	ldur	w26, [x29, #-20]
   12ce4:	lsl	x8, x25, #1
   12ce8:	sub	x8, x8, x23
   12cec:	orr	x22, x22, x8
   12cf0:	mov	w27, #0x1                   	// #1
   12cf4:	b	12b38 <mpfr_div_ui@@Base+0x21c>
   12cf8:	ldr	x8, [x21]
   12cfc:	ldr	w9, [x19, #8]
   12d00:	tst	x8, x24
   12d04:	cset	w8, ne  // ne = any
   12d08:	cneg	w23, w9, eq  // eq = none
   12d0c:	cbnz	w8, 12c00 <mpfr_div_ui@@Base+0x2e4>
   12d10:	b	12c18 <mpfr_div_ui@@Base+0x2fc>
   12d14:	ldur	w26, [x29, #-20]
   12d18:	orr	x22, x22, x25
   12d1c:	b	12b38 <mpfr_div_ui@@Base+0x21c>
   12d20:	ldur	w26, [x29, #-20]
   12d24:	mov	x9, xzr
   12d28:	cmp	x9, x8
   12d2c:	b.ge	12d48 <mpfr_div_ui@@Base+0x42c>  // b.tcont
   12d30:	ldr	x10, [x24, x9, lsl #3]
   12d34:	add	x9, x9, #0x1
   12d38:	cmp	x10, #0x0
   12d3c:	cset	w22, ne  // ne = any
   12d40:	cbz	x10, 12d28 <mpfr_div_ui@@Base+0x40c>
   12d44:	b	12b38 <mpfr_div_ui@@Base+0x21c>
   12d48:	mov	x22, xzr
   12d4c:	b	12b38 <mpfr_div_ui@@Base+0x21c>
   12d50:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   12d54:	cmp	x10, x9
   12d58:	b.eq	12e68 <mpfr_div_ui@@Base+0x54c>  // b.none
   12d5c:	mov	x9, #0x2                   	// #2
   12d60:	movk	x9, #0x8000, lsl #48
   12d64:	cmp	x10, x9
   12d68:	b.ne	12e74 <mpfr_div_ui@@Base+0x558>  // b.any
   12d6c:	str	x8, [x19, #16]
   12d70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12d74:	ldr	x1, [x0, #2800]
   12d78:	add	x0, x0, #0xaf0
   12d7c:	blr	x1
   12d80:	mov	w23, wzr
   12d84:	b	12ea4 <mpfr_div_ui@@Base+0x588>
   12d88:	cbz	x23, 12e34 <mpfr_div_ui@@Base+0x518>
   12d8c:	ldr	w3, [x21, #8]
   12d90:	mov	x0, x19
   12d94:	mov	x1, x21
   12d98:	mov	w2, w22
   12d9c:	bl	cb70 <mpfr_set4@plt>
   12da0:	b	12e18 <mpfr_div_ui@@Base+0x4fc>
   12da4:	cmp	x23, #0x1
   12da8:	b.eq	12eb8 <mpfr_div_ui@@Base+0x59c>  // b.none
   12dac:	cbz	x23, 12ec0 <mpfr_div_ui@@Base+0x5a4>
   12db0:	clz	x8, x20
   12db4:	mov	w9, #0x40                  	// #64
   12db8:	sub	x2, x9, x8
   12dbc:	mov	x0, x19
   12dc0:	mov	x1, x21
   12dc4:	mov	w3, w22
   12dc8:	bl	c8e0 <mpfr_div_2si@plt>
   12dcc:	b	12e18 <mpfr_div_ui@@Base+0x4fc>
   12dd0:	sub	x0, x29, #0x8
   12dd4:	bl	c220 <mpfr_tmp_allocate@plt>
   12dd8:	mov	x27, x0
   12ddc:	b	129ec <mpfr_div_ui@@Base+0xd0>
   12de0:	bl	c8d0 <mpfr_tmp_free@plt>
   12de4:	b	12b58 <mpfr_div_ui@@Base+0x23c>
   12de8:	ldr	w2, [x19, #8]
   12dec:	cmp	w26, #0x0
   12df0:	csinc	w1, w26, wzr, ne  // ne = any
   12df4:	mov	x0, x19
   12df8:	bl	c880 <mpfr_underflow@plt>
   12dfc:	b	12e18 <mpfr_div_ui@@Base+0x4fc>
   12e00:	mov	w23, wzr
   12e04:	b	12c18 <mpfr_div_ui@@Base+0x2fc>
   12e08:	mov	x0, x19
   12e0c:	mov	w1, w23
   12e10:	mov	w2, w26
   12e14:	bl	d020 <mpfr_check_range@plt>
   12e18:	mov	w23, w0
   12e1c:	b	12c74 <mpfr_div_ui@@Base+0x358>
   12e20:	ldur	x9, [x29, #-40]
   12e24:	add	x28, x28, #0x1
   12e28:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   12e2c:	str	x8, [x21, x9, lsl #3]
   12e30:	b	12c18 <mpfr_div_ui@@Base+0x2fc>
   12e34:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   12e38:	str	x8, [x19, #16]
   12e3c:	ldr	w8, [x21, #8]
   12e40:	str	w8, [x19, #8]
   12e44:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12e48:	ldr	x1, [x0, #2800]
   12e4c:	add	x0, x0, #0xaf0
   12e50:	blr	x1
   12e54:	mrs	x8, tpidr_el0
   12e58:	ldr	w9, [x8, x0]
   12e5c:	orr	w9, w9, #0x20
   12e60:	str	w9, [x8, x0]
   12e64:	b	12c74 <mpfr_div_ui@@Base+0x358>
   12e68:	mov	w23, wzr
   12e6c:	str	x9, [x19, #16]
   12e70:	b	12e84 <mpfr_div_ui@@Base+0x568>
   12e74:	cbz	x23, 12e90 <mpfr_div_ui@@Base+0x574>
   12e78:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   12e7c:	mov	w23, wzr
   12e80:	str	x8, [x19, #16]
   12e84:	ldr	w8, [x21, #8]
   12e88:	str	w8, [x19, #8]
   12e8c:	b	12c74 <mpfr_div_ui@@Base+0x358>
   12e90:	str	x8, [x19, #16]
   12e94:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   12e98:	ldr	x1, [x0, #2800]
   12e9c:	add	x0, x0, #0xaf0
   12ea0:	blr	x1
   12ea4:	mrs	x8, tpidr_el0
   12ea8:	ldr	w9, [x8, x0]
   12eac:	orr	w9, w9, #0x4
   12eb0:	str	w9, [x8, x0]
   12eb4:	b	12c74 <mpfr_div_ui@@Base+0x358>
   12eb8:	mov	x2, xzr
   12ebc:	b	12dbc <mpfr_div_ui@@Base+0x4a0>
   12ec0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   12ec4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   12ec8:	add	x0, x0, #0x11e
   12ecc:	add	x2, x2, #0x127
   12ed0:	mov	w1, #0x5e                  	// #94
   12ed4:	bl	d030 <mpfr_assert_fail@plt>
   12ed8:	b	12db0 <mpfr_div_ui@@Base+0x494>

0000000000012edc <mpfr_fdump@@Base>:
   12edc:	sub	sp, sp, #0x80
   12ee0:	stp	x29, x30, [sp, #32]
   12ee4:	stp	x28, x27, [sp, #48]
   12ee8:	stp	x26, x25, [sp, #64]
   12eec:	stp	x24, x23, [sp, #80]
   12ef0:	stp	x22, x21, [sp, #96]
   12ef4:	stp	x20, x19, [sp, #112]
   12ef8:	ldr	w8, [x1, #8]
   12efc:	mov	x20, x1
   12f00:	mov	x19, x0
   12f04:	add	x29, sp, #0x20
   12f08:	tbz	w8, #31, 12f18 <mpfr_fdump@@Base+0x3c>
   12f0c:	mov	w0, #0x2d                  	// #45
   12f10:	mov	x1, x19
   12f14:	bl	c200 <fputc@plt>
   12f18:	ldr	x8, [x20, #16]
   12f1c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   12f20:	cmp	x8, x9
   12f24:	b.eq	12f50 <mpfr_fdump@@Base+0x74>  // b.none
   12f28:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   12f2c:	cmp	x8, x9
   12f30:	b.eq	12f60 <mpfr_fdump@@Base+0x84>  // b.none
   12f34:	mov	x9, #0x2                   	// #2
   12f38:	movk	x9, #0x8000, lsl #48
   12f3c:	cmp	x8, x9
   12f40:	b.ne	12f7c <mpfr_fdump@@Base+0xa0>  // b.any
   12f44:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   12f48:	add	x0, x0, #0x12f
   12f4c:	b	12f68 <mpfr_fdump@@Base+0x8c>
   12f50:	mov	w0, #0x30                  	// #48
   12f54:	mov	x1, x19
   12f58:	bl	c200 <fputc@plt>
   12f5c:	b	13144 <mpfr_fdump@@Base+0x268>
   12f60:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   12f64:	add	x0, x0, #0x975
   12f68:	mov	w1, #0x5                   	// #5
   12f6c:	mov	w2, #0x1                   	// #1
   12f70:	mov	x3, x19
   12f74:	bl	cdb0 <fwrite@plt>
   12f78:	b	13144 <mpfr_fdump@@Base+0x268>
   12f7c:	ldr	x8, [x20, #24]
   12f80:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   12f84:	add	x0, x0, #0x135
   12f88:	mov	w1, #0x2                   	// #2
   12f8c:	stp	x20, x8, [sp, #8]
   12f90:	ldr	x24, [x20]
   12f94:	mov	w2, #0x1                   	// #1
   12f98:	mov	x3, x19
   12f9c:	bl	cdb0 <fwrite@plt>
   12fa0:	cmn	x24, #0x3e
   12fa4:	b.lt	13070 <mpfr_fdump@@Base+0x194>  // b.tstop
   12fa8:	sub	x8, x24, #0x1
   12fac:	add	x9, x24, #0x3e
   12fb0:	cmp	x8, #0x0
   12fb4:	csel	x8, x9, x8, lt  // lt = tstop
   12fb8:	mov	w22, wzr
   12fbc:	mov	w10, #0x1                   	// #1
   12fc0:	mov	w23, #0x30                  	// #48
   12fc4:	sub	x26, x29, #0x4
   12fc8:	mov	w27, #0x54                  	// #84
   12fcc:	asr	x28, x8, #6
   12fd0:	mov	x8, x24
   12fd4:	stur	w10, [x29, #-8]
   12fd8:	b	12ff0 <mpfr_fdump@@Base+0x114>
   12fdc:	mov	x24, xzr
   12fe0:	cmp	x28, #0x0
   12fe4:	sub	x28, x28, #0x1
   12fe8:	mov	x8, x24
   12fec:	b.le	13074 <mpfr_fdump@@Base+0x198>
   12ff0:	ldr	x9, [sp, #16]
   12ff4:	ldr	x20, [x9, x28, lsl #3]
   12ff8:	ldur	w9, [x29, #-8]
   12ffc:	cbz	w9, 13018 <mpfr_fdump@@Base+0x13c>
   13000:	tbnz	x20, #63, 13014 <mpfr_fdump@@Base+0x138>
   13004:	add	w9, w22, #0x1
   13008:	mov	w10, #0x4e                  	// #78
   1300c:	strb	w10, [x26, w22, sxtw]
   13010:	mov	w22, w9
   13014:	stur	wzr, [x29, #-8]
   13018:	sub	x24, x8, #0x40
   1301c:	sub	x21, x8, #0x1
   13020:	mov	x25, #0x8000000000000000    	// #-9223372036854775808
   13024:	b	13034 <mpfr_fdump@@Base+0x158>
   13028:	lsr	x25, x25, #1
   1302c:	sub	x21, x21, #0x1
   13030:	cbz	x25, 12fe0 <mpfr_fdump@@Base+0x104>
   13034:	tst	x25, x20
   13038:	cinc	w0, w23, ne  // ne = any
   1303c:	mov	x1, x19
   13040:	bl	c180 <putc@plt>
   13044:	cbnz	x21, 13028 <mpfr_fdump@@Base+0x14c>
   13048:	sub	x8, x25, #0x1
   1304c:	tst	x8, x20
   13050:	b.eq	12fdc <mpfr_fdump@@Base+0x100>  // b.none
   13054:	mov	w0, #0x5b                  	// #91
   13058:	mov	x1, x19
   1305c:	bl	c180 <putc@plt>
   13060:	add	w8, w22, #0x1
   13064:	strb	w27, [x26, w22, sxtw]
   13068:	mov	w22, w8
   1306c:	b	13028 <mpfr_fdump@@Base+0x14c>
   13070:	mov	w22, wzr
   13074:	tbz	x24, #63, 13084 <mpfr_fdump@@Base+0x1a8>
   13078:	mov	w0, #0x5d                  	// #93
   1307c:	mov	x1, x19
   13080:	bl	c180 <putc@plt>
   13084:	ldr	x9, [sp, #8]
   13088:	mov	x8, #0x4                   	// #4
   1308c:	movk	x8, #0x8000, lsl #48
   13090:	ldr	x21, [x9, #16]
   13094:	cmp	x21, x8
   13098:	b.ne	130b8 <mpfr_fdump@@Base+0x1dc>  // b.any
   1309c:	adrp	x1, 5b000 <mpfr_free_pool@@Base+0x3854>
   130a0:	add	x2, x9, #0x20
   130a4:	add	x1, x1, #0x138
   130a8:	mov	x0, x19
   130ac:	bl	ca20 <__gmp_fprintf@plt>
   130b0:	mov	w8, #0x55                  	// #85
   130b4:	b	13114 <mpfr_fdump@@Base+0x238>
   130b8:	adrp	x1, 5b000 <mpfr_free_pool@@Base+0x3854>
   130bc:	add	x1, x1, #0x13d
   130c0:	mov	x0, x19
   130c4:	mov	x2, x21
   130c8:	bl	d1e0 <fprintf@plt>
   130cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   130d0:	ldr	x1, [x0, #2736]
   130d4:	add	x0, x0, #0xab0
   130d8:	blr	x1
   130dc:	mrs	x8, tpidr_el0
   130e0:	ldr	x9, [x8, x0]
   130e4:	cmp	x21, x9
   130e8:	b.ge	130f4 <mpfr_fdump@@Base+0x218>  // b.tcont
   130ec:	mov	w8, #0x3c                  	// #60
   130f0:	b	13114 <mpfr_fdump@@Base+0x238>
   130f4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   130f8:	ldr	x1, [x0, #2768]
   130fc:	add	x0, x0, #0xad0
   13100:	blr	x1
   13104:	ldr	x8, [x8, x0]
   13108:	cmp	x21, x8
   1310c:	b.le	13124 <mpfr_fdump@@Base+0x248>
   13110:	mov	w8, #0x3e                  	// #62
   13114:	add	w9, w22, #0x1
   13118:	sub	x10, x29, #0x4
   1311c:	strb	w8, [x10, w22, sxtw]
   13120:	mov	w22, w9
   13124:	cbz	w22, 13144 <mpfr_fdump@@Base+0x268>
   13128:	adrp	x1, 5b000 <mpfr_free_pool@@Base+0x3854>
   1312c:	sub	x8, x29, #0x4
   13130:	add	x1, x1, #0x142
   13134:	sub	x2, x29, #0x4
   13138:	mov	x0, x19
   1313c:	strb	wzr, [x8, w22, sxtw]
   13140:	bl	d1e0 <fprintf@plt>
   13144:	mov	w0, #0xa                   	// #10
   13148:	mov	x1, x19
   1314c:	bl	c180 <putc@plt>
   13150:	ldp	x20, x19, [sp, #112]
   13154:	ldp	x22, x21, [sp, #96]
   13158:	ldp	x24, x23, [sp, #80]
   1315c:	ldp	x26, x25, [sp, #64]
   13160:	ldp	x28, x27, [sp, #48]
   13164:	ldp	x29, x30, [sp, #32]
   13168:	add	sp, sp, #0x80
   1316c:	ret

0000000000013170 <mpfr_dump@@Base>:
   13170:	stp	x29, x30, [sp, #-16]!
   13174:	adrp	x8, 72000 <__gmpfr_l2b@@Base+0x2f0>
   13178:	ldr	x8, [x8, #3992]
   1317c:	mov	x1, x0
   13180:	mov	x29, sp
   13184:	ldr	x8, [x8]
   13188:	mov	x0, x8
   1318c:	bl	c050 <mpfr_fdump@plt>
   13190:	ldp	x29, x30, [sp], #16
   13194:	ret

0000000000013198 <mpfr_eq@@Base>:
   13198:	ldr	x8, [x0, #16]
   1319c:	mov	x10, #0x2                   	// #2
   131a0:	movk	x10, #0x8000, lsl #48
   131a4:	add	x11, x10, #0x2
   131a8:	cmp	x8, x11
   131ac:	b.lt	133c0 <mpfr_eq@@Base+0x228>  // b.tstop
   131b0:	ldr	x9, [x1, #16]
   131b4:	cmp	x9, x11
   131b8:	b.lt	133c0 <mpfr_eq@@Base+0x228>  // b.tstop
   131bc:	cmp	x8, x9
   131c0:	mov	w8, wzr
   131c4:	b.ne	133b8 <mpfr_eq@@Base+0x220>  // b.any
   131c8:	ldr	w9, [x0, #8]
   131cc:	ldr	w10, [x1, #8]
   131d0:	cmp	w9, w10
   131d4:	b.ne	133b8 <mpfr_eq@@Base+0x220>  // b.any
   131d8:	ldr	x8, [x0]
   131dc:	ldr	x9, [x1]
   131e0:	sub	x10, x8, #0x1
   131e4:	add	x8, x8, #0x3e
   131e8:	sub	x11, x9, #0x1
   131ec:	cmp	x10, #0x0
   131f0:	add	x9, x9, #0x3e
   131f4:	csel	x8, x8, x10, lt  // lt = tstop
   131f8:	cmp	x11, #0x0
   131fc:	csel	x9, x9, x11, lt  // lt = tstop
   13200:	asr	x8, x8, #6
   13204:	asr	x9, x9, #6
   13208:	cmp	x9, x8
   1320c:	add	x10, x9, #0x1
   13210:	csel	x11, x1, x0, gt
   13214:	csel	x13, x0, x1, gt
   13218:	add	x12, x8, #0x1
   1321c:	csinc	x10, x10, x8, gt
   13220:	ldr	x8, [x13, #24]
   13224:	ldr	x11, [x11, #24]
   13228:	csinc	x9, x12, x9, gt
   1322c:	cmp	x10, x9
   13230:	b.le	132b4 <mpfr_eq@@Base+0x11c>
   13234:	lsl	x12, x9, #6
   13238:	cmp	x12, x2
   1323c:	b.cs	132f4 <mpfr_eq@@Base+0x15c>  // b.hs, b.nlast
   13240:	eor	x13, x9, #0xffffffff
   13244:	sub	x12, x2, x12
   13248:	add	x13, x13, x10
   1324c:	cmp	x12, #0x3f
   13250:	mvn	w14, w13
   13254:	lsr	w15, w14, #31
   13258:	cset	w14, hi  // hi = pmore
   1325c:	tbnz	w13, #31, 132c0 <mpfr_eq@@Base+0x128>
   13260:	subs	x18, x12, #0x40
   13264:	b.cc	132c0 <mpfr_eq@@Base+0x128>  // b.lo, b.ul, b.last
   13268:	sbfiz	x16, x13, #3, #32
   1326c:	ldr	x16, [x11, x16]
   13270:	cbnz	x16, 132c0 <mpfr_eq@@Base+0x128>
   13274:	sxtw	x16, w13
   13278:	sub	x17, x11, #0x8
   1327c:	cmp	x16, #0x0
   13280:	cset	w15, gt
   13284:	cmp	x18, #0x3f
   13288:	mov	x12, x18
   1328c:	cset	w14, hi  // hi = pmore
   13290:	subs	x13, x16, #0x1
   13294:	b.lt	132bc <mpfr_eq@@Base+0x124>  // b.tstop
   13298:	cmp	x12, #0x3f
   1329c:	b.ls	132bc <mpfr_eq@@Base+0x124>  // b.plast
   132a0:	ldr	x0, [x17, x16, lsl #3]
   132a4:	sub	x18, x12, #0x40
   132a8:	mov	x16, x13
   132ac:	cbz	x0, 1327c <mpfr_eq@@Base+0xe4>
   132b0:	b	132c0 <mpfr_eq@@Base+0x128>
   132b4:	mov	x12, x10
   132b8:	b	132f8 <mpfr_eq@@Base+0x160>
   132bc:	sub	w13, w16, #0x1
   132c0:	cbz	w15, 132f4 <mpfr_eq@@Base+0x15c>
   132c4:	cmp	x12, #0x3f
   132c8:	b.hi	132dc <mpfr_eq@@Base+0x144>  // b.pmore
   132cc:	ldr	x15, [x11, w13, sxtw #3]
   132d0:	neg	x12, x12
   132d4:	lsr	x12, x15, x12
   132d8:	cbnz	x12, 132ec <mpfr_eq@@Base+0x154>
   132dc:	cbz	w14, 132f4 <mpfr_eq@@Base+0x15c>
   132e0:	ldr	x13, [x11, w13, sxtw #3]
   132e4:	mov	x12, x9
   132e8:	cbz	x13, 132f8 <mpfr_eq@@Base+0x160>
   132ec:	mov	w0, wzr
   132f0:	ret
   132f4:	mov	x12, x9
   132f8:	sub	x13, x2, #0x1
   132fc:	lsl	x14, x12, #6
   13300:	lsr	x13, x13, #6
   13304:	cmp	x14, x2
   13308:	add	x15, x13, #0x1
   1330c:	csel	x14, x14, x2, cc  // cc = lo, ul, last
   13310:	cmp	x12, x15
   13314:	csinc	x12, x12, x13, ls  // ls = plast
   13318:	csel	x13, x2, x14, hi  // hi = pmore
   1331c:	cmp	x12, #0x2
   13320:	sub	x15, x12, #0x1
   13324:	b.lt	13378 <mpfr_eq@@Base+0x1e0>  // b.tstop
   13328:	cmp	x13, #0x40
   1332c:	b.cc	13378 <mpfr_eq@@Base+0x1e0>  // b.lo, b.ul, b.last
   13330:	add	x14, x8, x9, lsl #3
   13334:	add	x17, x11, x10, lsl #3
   13338:	sub	x16, x14, #0x8
   1333c:	sub	x17, x17, #0x8
   13340:	ldr	x14, [x17]
   13344:	ldr	x18, [x16]
   13348:	cmp	x14, x18
   1334c:	b.ne	132ec <mpfr_eq@@Base+0x154>  // b.any
   13350:	sub	x13, x13, #0x40
   13354:	cmp	x15, #0x2
   13358:	sub	x14, x15, #0x1
   1335c:	b.lt	1337c <mpfr_eq@@Base+0x1e4>  // b.tstop
   13360:	sub	x16, x16, #0x8
   13364:	cmp	x13, #0x3f
   13368:	sub	x17, x17, #0x8
   1336c:	mov	x15, x14
   13370:	b.hi	13340 <mpfr_eq@@Base+0x1a8>  // b.pmore
   13374:	b	1337c <mpfr_eq@@Base+0x1e4>
   13378:	mov	x14, x15
   1337c:	sub	x10, x10, x12
   13380:	add	x10, x11, x10, lsl #3
   13384:	ldr	x10, [x10, x14, lsl #3]
   13388:	sub	x11, x9, x12
   1338c:	ands	x9, x13, #0x3f
   13390:	add	x8, x8, x11, lsl #3
   13394:	b.eq	133ac <mpfr_eq@@Base+0x214>  // b.none
   13398:	ldr	x8, [x8, x14, lsl #3]
   1339c:	neg	x9, x9
   133a0:	lsr	x10, x10, x9
   133a4:	lsr	x8, x8, x9
   133a8:	b	133b0 <mpfr_eq@@Base+0x218>
   133ac:	ldr	x8, [x8, x14, lsl #3]
   133b0:	cmp	x10, x8
   133b4:	cset	w8, eq  // eq = none
   133b8:	mov	w0, w8
   133bc:	ret
   133c0:	cmp	x8, x10
   133c4:	b.eq	132ec <mpfr_eq@@Base+0x154>  // b.none
   133c8:	ldr	x9, [x1, #16]
   133cc:	cmp	x9, x10
   133d0:	b.eq	132ec <mpfr_eq@@Base+0x154>  // b.none
   133d4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   133d8:	cmp	x8, x10
   133dc:	b.ne	133f8 <mpfr_eq@@Base+0x260>  // b.any
   133e0:	cmp	x9, x10
   133e4:	b.ne	133f8 <mpfr_eq@@Base+0x260>  // b.any
   133e8:	ldr	w8, [x0, #8]
   133ec:	ldr	w9, [x1, #8]
   133f0:	cmp	w8, w9
   133f4:	b	133b4 <mpfr_eq@@Base+0x21c>
   133f8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   133fc:	cmp	x8, x10
   13400:	cset	w8, eq  // eq = none
   13404:	cmp	x9, x10
   13408:	cset	w9, eq  // eq = none
   1340c:	and	w0, w8, w9
   13410:	ret

0000000000013414 <mpfr_exp10@@Base>:
   13414:	stp	x29, x30, [sp, #-16]!
   13418:	mov	w3, w2
   1341c:	mov	x2, x1
   13420:	mov	w1, #0xa                   	// #10
   13424:	mov	x29, sp
   13428:	bl	cf00 <mpfr_ui_pow@plt>
   1342c:	ldp	x29, x30, [sp], #16
   13430:	ret

0000000000013434 <mpfr_exp2@@Base>:
   13434:	sub	sp, sp, #0xb0
   13438:	stp	x29, x30, [sp, #80]
   1343c:	stp	x28, x27, [sp, #96]
   13440:	stp	x26, x25, [sp, #112]
   13444:	stp	x24, x23, [sp, #128]
   13448:	stp	x22, x21, [sp, #144]
   1344c:	stp	x20, x19, [sp, #160]
   13450:	ldr	x8, [x1, #16]
   13454:	mov	x10, #0x4                   	// #4
   13458:	movk	x10, #0x8000, lsl #48
   1345c:	mov	w20, w2
   13460:	mov	x22, x1
   13464:	cmp	x8, x10
   13468:	mov	x19, x0
   1346c:	add	x29, sp, #0x50
   13470:	b.lt	13800 <mpfr_exp2@@Base+0x3cc>  // b.tstop
   13474:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13478:	ldr	x1, [x0, #2736]
   1347c:	add	x0, x0, #0xab0
   13480:	blr	x1
   13484:	mrs	x26, tpidr_el0
   13488:	ldr	x8, [x26, x0]
   1348c:	mov	x0, x22
   13490:	mov	x2, xzr
   13494:	sub	x1, x8, #0x2
   13498:	bl	c890 <mpfr_cmp_si_2exp@plt>
   1349c:	cmp	w0, #0x0
   134a0:	b.le	1384c <mpfr_exp2@@Base+0x418>
   134a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   134a8:	ldr	x1, [x0, #2768]
   134ac:	add	x0, x0, #0xad0
   134b0:	blr	x1
   134b4:	ldr	x1, [x26, x0]
   134b8:	mov	x0, x22
   134bc:	mov	x2, xzr
   134c0:	bl	c890 <mpfr_cmp_si_2exp@plt>
   134c4:	tbz	w0, #31, 13864 <mpfr_exp2@@Base+0x430>
   134c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   134cc:	ldr	x1, [x0, #2800]
   134d0:	add	x0, x0, #0xaf0
   134d4:	blr	x1
   134d8:	ldr	w25, [x26, x0]
   134dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   134e0:	ldr	x1, [x0, #2736]
   134e4:	add	x0, x0, #0xab0
   134e8:	blr	x1
   134ec:	ldr	x27, [x26, x0]
   134f0:	mov	x8, x0
   134f4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   134f8:	ldr	x1, [x0, #2768]
   134fc:	add	x0, x0, #0xad0
   13500:	blr	x1
   13504:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   13508:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   1350c:	ldr	x28, [x26, x0]
   13510:	str	x9, [x26, x8]
   13514:	str	x10, [x26, x0]
   13518:	ldr	x8, [x22, #16]
   1351c:	tbnz	x8, #63, 1352c <mpfr_exp2@@Base+0xf8>
   13520:	mov	w9, wzr
   13524:	cbnz	w9, 137dc <mpfr_exp2@@Base+0x3a8>
   13528:	b	1354c <mpfr_exp2@@Base+0x118>
   1352c:	ldr	x9, [x19]
   13530:	neg	x2, x8
   13534:	add	x8, x9, #0x1
   13538:	cmp	x8, x2
   1353c:	b.cc	13878 <mpfr_exp2@@Base+0x444>  // b.lo, b.ul, b.last
   13540:	mov	w9, wzr
   13544:	cbz	w9, 13520 <mpfr_exp2@@Base+0xec>
   13548:	cbnz	w9, 137dc <mpfr_exp2@@Base+0x3a8>
   1354c:	mov	w1, #0x1                   	// #1
   13550:	mov	x0, x22
   13554:	bl	c630 <mpfr_get_si@plt>
   13558:	ldr	x1, [x22]
   1355c:	mov	x21, x0
   13560:	sub	x0, x29, #0x20
   13564:	bl	cf60 <mpfr_init2@plt>
   13568:	sub	x0, x29, #0x20
   1356c:	mov	x1, x22
   13570:	mov	x2, x21
   13574:	mov	w3, wzr
   13578:	bl	c4d0 <mpfr_sub_si@plt>
   1357c:	ldur	x8, [x29, #-16]
   13580:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   13584:	cmp	x8, x9
   13588:	b.ne	135a8 <mpfr_exp2@@Base+0x174>  // b.any
   1358c:	mov	w1, #0x1                   	// #1
   13590:	mov	x0, x19
   13594:	mov	x2, xzr
   13598:	mov	w3, wzr
   1359c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   135a0:	mov	w22, wzr
   135a4:	b	136f4 <mpfr_exp2@@Base+0x2c0>
   135a8:	ldr	x24, [x19]
   135ac:	subs	x23, x24, #0x1
   135b0:	add	x22, x24, #0x5
   135b4:	b.eq	13980 <mpfr_exp2@@Base+0x54c>  // b.none
   135b8:	b.le	13988 <mpfr_exp2@@Base+0x554>
   135bc:	clz	x8, x23
   135c0:	mov	w9, #0x40                  	// #64
   135c4:	sub	x8, x9, x8
   135c8:	add	x22, x22, x8
   135cc:	add	x0, sp, #0x10
   135d0:	mov	x1, x22
   135d4:	bl	cf60 <mpfr_init2@plt>
   135d8:	cmp	w20, #0x0
   135dc:	mov	w8, #0x40                  	// #64
   135e0:	cinc	x24, x24, eq  // eq = none
   135e4:	str	x8, [sp, #8]
   135e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   135ec:	ldr	x1, [x0, #2784]
   135f0:	add	x0, x0, #0xae0
   135f4:	blr	x1
   135f8:	add	x1, x26, x0
   135fc:	add	x0, sp, #0x10
   13600:	mov	w2, #0x2                   	// #2
   13604:	bl	c840 <mpfr_cache@plt>
   13608:	add	x0, sp, #0x10
   1360c:	sub	x1, x29, #0x20
   13610:	add	x2, sp, #0x10
   13614:	mov	w3, #0x2                   	// #2
   13618:	bl	c1b0 <mpfr_mul@plt>
   1361c:	ldr	x23, [sp, #32]
   13620:	add	x0, sp, #0x10
   13624:	add	x1, sp, #0x10
   13628:	mov	w2, wzr
   1362c:	bl	cc20 <mpfr_exp@plt>
   13630:	ldr	x8, [sp, #32]
   13634:	mov	x9, #0x4                   	// #4
   13638:	movk	x9, #0x8000, lsl #48
   1363c:	cmp	x8, x9
   13640:	b.lt	13678 <mpfr_exp2@@Base+0x244>  // b.tstop
   13644:	ldr	x8, [sp, #16]
   13648:	sub	x9, x22, x23
   1364c:	sub	x2, x9, #0x2
   13650:	ldr	x0, [sp, #40]
   13654:	sub	x9, x8, #0x1
   13658:	add	x8, x8, #0x3e
   1365c:	cmp	x9, #0x0
   13660:	csel	x8, x8, x9, lt  // lt = tstop
   13664:	asr	x8, x8, #6
   13668:	add	x1, x8, #0x1
   1366c:	mov	x3, x24
   13670:	bl	c830 <mpfr_round_p@plt>
   13674:	cbnz	w0, 136d4 <mpfr_exp2@@Base+0x2a0>
   13678:	mov	x8, #0x4                   	// #4
   1367c:	ldr	x23, [sp, #8]
   13680:	movk	x8, #0x8000, lsl #48
   13684:	sub	x8, x8, x22
   13688:	sub	x8, x8, #0x105
   1368c:	cmp	x23, x8
   13690:	b.gt	136b8 <mpfr_exp2@@Base+0x284>
   13694:	add	x22, x23, x22
   13698:	cmp	x22, #0x0
   1369c:	cinc	x8, x22, lt  // lt = tstop
   136a0:	asr	x8, x8, #1
   136a4:	add	x0, sp, #0x10
   136a8:	mov	x1, x22
   136ac:	str	x8, [sp, #8]
   136b0:	bl	c330 <mpfr_set_prec@plt>
   136b4:	b	135e8 <mpfr_exp2@@Base+0x1b4>
   136b8:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
   136bc:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   136c0:	mov	w1, #0x86                  	// #134
   136c4:	add	x0, x0, #0xee4
   136c8:	add	x2, x2, #0x154
   136cc:	bl	d030 <mpfr_assert_fail@plt>
   136d0:	b	13694 <mpfr_exp2@@Base+0x260>
   136d4:	ldr	w3, [sp, #24]
   136d8:	add	x1, sp, #0x10
   136dc:	mov	x0, x19
   136e0:	mov	w2, w20
   136e4:	bl	cb70 <mpfr_set4@plt>
   136e8:	mov	w22, w0
   136ec:	add	x0, sp, #0x10
   136f0:	bl	c4f0 <mpfr_clear@plt>
   136f4:	sub	x0, x29, #0x20
   136f8:	bl	c4f0 <mpfr_clear@plt>
   136fc:	cbnz	w20, 13734 <mpfr_exp2@@Base+0x300>
   13700:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13704:	ldr	x1, [x0, #2736]
   13708:	add	x0, x0, #0xab0
   1370c:	blr	x1
   13710:	ldr	x8, [x26, x0]
   13714:	sub	x8, x8, #0x1
   13718:	cmp	x21, x8
   1371c:	b.ne	13734 <mpfr_exp2@@Base+0x300>  // b.any
   13720:	ldr	x8, [x19, #16]
   13724:	cbnz	x8, 13734 <mpfr_exp2@@Base+0x300>
   13728:	mov	x0, x19
   1372c:	bl	c360 <mpfr_powerof2_raw@plt>
   13730:	cbnz	w0, 139b0 <mpfr_exp2@@Base+0x57c>
   13734:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13738:	ldr	x1, [x0, #2800]
   1373c:	add	x0, x0, #0xaf0
   13740:	blr	x1
   13744:	mov	x23, x0
   13748:	str	wzr, [x26, x0]
   1374c:	mov	x0, x19
   13750:	mov	x1, x19
   13754:	mov	x2, x21
   13758:	mov	w3, w20
   1375c:	bl	bff0 <mpfr_mul_2si@plt>
   13760:	ldr	w9, [x26, x23]
   13764:	cmp	w0, #0x0
   13768:	csel	w8, w22, w0, eq  // eq = none
   1376c:	orr	w9, w9, w25
   13770:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13774:	ldr	x1, [x0, #2800]
   13778:	add	x0, x0, #0xaf0
   1377c:	blr	x1
   13780:	str	w9, [x26, x0]
   13784:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13788:	ldr	x1, [x0, #2736]
   1378c:	add	x0, x0, #0xab0
   13790:	blr	x1
   13794:	str	x27, [x26, x0]
   13798:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1379c:	ldr	x1, [x0, #2768]
   137a0:	add	x0, x0, #0xad0
   137a4:	blr	x1
   137a8:	str	x28, [x26, x0]
   137ac:	ldr	x10, [x19, #16]
   137b0:	cmp	x10, x28
   137b4:	b.gt	1392c <mpfr_exp2@@Base+0x4f8>
   137b8:	cmp	x10, x27
   137bc:	b.lt	1392c <mpfr_exp2@@Base+0x4f8>  // b.tstop
   137c0:	cbz	w8, 137dc <mpfr_exp2@@Base+0x3a8>
   137c4:	orr	w9, w9, #0x8
   137c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   137cc:	ldr	x1, [x0, #2800]
   137d0:	add	x0, x0, #0xaf0
   137d4:	blr	x1
   137d8:	str	w9, [x26, x0]
   137dc:	ldp	x20, x19, [sp, #160]
   137e0:	ldp	x22, x21, [sp, #144]
   137e4:	ldp	x24, x23, [sp, #128]
   137e8:	ldp	x26, x25, [sp, #112]
   137ec:	ldp	x28, x27, [sp, #96]
   137f0:	ldp	x29, x30, [sp, #80]
   137f4:	mov	w0, w8
   137f8:	add	sp, sp, #0xb0
   137fc:	ret
   13800:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   13804:	cmp	x8, x9
   13808:	b.eq	13940 <mpfr_exp2@@Base+0x50c>  // b.none
   1380c:	mov	x9, #0x2                   	// #2
   13810:	movk	x9, #0x8000, lsl #48
   13814:	cmp	x8, x9
   13818:	b.ne	13964 <mpfr_exp2@@Base+0x530>  // b.any
   1381c:	sub	x8, x10, #0x2
   13820:	str	x8, [x19, #16]
   13824:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13828:	ldr	x1, [x0, #2800]
   1382c:	add	x0, x0, #0xaf0
   13830:	blr	x1
   13834:	mrs	x9, tpidr_el0
   13838:	ldr	w10, [x9, x0]
   1383c:	mov	w8, wzr
   13840:	orr	w10, w10, #0x4
   13844:	str	w10, [x9, x0]
   13848:	b	137dc <mpfr_exp2@@Base+0x3a8>
   1384c:	cmp	w20, #0x0
   13850:	csinc	w1, w20, wzr, ne  // ne = any
   13854:	mov	w2, #0x1                   	// #1
   13858:	mov	x0, x19
   1385c:	bl	c880 <mpfr_underflow@plt>
   13860:	b	13978 <mpfr_exp2@@Base+0x544>
   13864:	mov	w2, #0x1                   	// #1
   13868:	mov	x0, x19
   1386c:	mov	w1, w20
   13870:	bl	c3a0 <mpfr_overflow@plt>
   13874:	b	13978 <mpfr_exp2@@Base+0x544>
   13878:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1387c:	ldr	x1, [x0, #2800]
   13880:	add	x0, x0, #0xaf0
   13884:	blr	x1
   13888:	str	wzr, [x26, x0]
   1388c:	ldr	w8, [x22, #8]
   13890:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   13894:	ldr	x1, [x1, #3928]
   13898:	mov	x0, x19
   1389c:	cmp	w8, #0x0
   138a0:	cset	w3, gt
   138a4:	mov	w4, w20
   138a8:	bl	ca10 <mpfr_round_near_x@plt>
   138ac:	cbz	w0, 139a4 <mpfr_exp2@@Base+0x570>
   138b0:	mov	w8, w0
   138b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   138b8:	ldr	x1, [x0, #2800]
   138bc:	add	x0, x0, #0xaf0
   138c0:	blr	x1
   138c4:	ldr	w9, [x26, x0]
   138c8:	orr	w25, w9, w25
   138cc:	str	w25, [x26, x0]
   138d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   138d4:	ldr	x1, [x0, #2736]
   138d8:	add	x0, x0, #0xab0
   138dc:	blr	x1
   138e0:	str	x27, [x26, x0]
   138e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   138e8:	ldr	x1, [x0, #2768]
   138ec:	add	x0, x0, #0xad0
   138f0:	blr	x1
   138f4:	str	x28, [x26, x0]
   138f8:	ldr	x9, [x19, #16]
   138fc:	cmp	x9, x28
   13900:	b.gt	139d4 <mpfr_exp2@@Base+0x5a0>
   13904:	cmp	x9, x27
   13908:	b.lt	139d4 <mpfr_exp2@@Base+0x5a0>  // b.tstop
   1390c:	orr	w9, w25, #0x8
   13910:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13914:	ldr	x1, [x0, #2800]
   13918:	add	x0, x0, #0xaf0
   1391c:	blr	x1
   13920:	str	w9, [x26, x0]
   13924:	mov	w9, #0x1                   	// #1
   13928:	b	139a8 <mpfr_exp2@@Base+0x574>
   1392c:	mov	x0, x19
   13930:	mov	w1, w8
   13934:	mov	w2, w20
   13938:	bl	d020 <mpfr_check_range@plt>
   1393c:	b	13978 <mpfr_exp2@@Base+0x544>
   13940:	ldr	w10, [x22, #8]
   13944:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   13948:	mov	w12, #0x1                   	// #1
   1394c:	mov	w8, wzr
   13950:	cmp	w10, #0x0
   13954:	csel	x9, x9, x11, gt
   13958:	str	x9, [x19, #16]
   1395c:	str	w12, [x19, #8]
   13960:	b	137dc <mpfr_exp2@@Base+0x3a8>
   13964:	mov	w1, #0x1                   	// #1
   13968:	mov	x0, x19
   1396c:	mov	x2, xzr
   13970:	mov	w3, w20
   13974:	bl	cac0 <mpfr_set_ui_2exp@plt>
   13978:	mov	w8, w0
   1397c:	b	137dc <mpfr_exp2@@Base+0x3a8>
   13980:	mov	x8, xzr
   13984:	b	135c8 <mpfr_exp2@@Base+0x194>
   13988:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x1854>
   1398c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   13990:	add	x0, x0, #0xee4
   13994:	add	x2, x2, #0x14b
   13998:	mov	w1, #0x73                  	// #115
   1399c:	bl	d030 <mpfr_assert_fail@plt>
   139a0:	b	135bc <mpfr_exp2@@Base+0x188>
   139a4:	mov	w9, wzr
   139a8:	cbnz	w9, 13544 <mpfr_exp2@@Base+0x110>
   139ac:	b	13540 <mpfr_exp2@@Base+0x10c>
   139b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   139b4:	ldr	x1, [x0, #2736]
   139b8:	add	x0, x0, #0xab0
   139bc:	blr	x1
   139c0:	ldr	x8, [x26, x0]
   139c4:	orr	w9, w25, #0x1
   139c8:	str	x8, [x19, #16]
   139cc:	mov	w8, #0x1                   	// #1
   139d0:	b	13770 <mpfr_exp2@@Base+0x33c>
   139d4:	mov	x0, x19
   139d8:	mov	w1, w8
   139dc:	mov	w2, w20
   139e0:	bl	d020 <mpfr_check_range@plt>
   139e4:	mov	w8, w0
   139e8:	b	13924 <mpfr_exp2@@Base+0x4f0>

00000000000139ec <mpfr_exp_3@@Base>:
   139ec:	sub	sp, sp, #0x170
   139f0:	stp	x29, x30, [sp, #272]
   139f4:	stp	x28, x27, [sp, #288]
   139f8:	stp	x26, x25, [sp, #304]
   139fc:	stp	x24, x23, [sp, #320]
   13a00:	stp	x22, x21, [sp, #336]
   13a04:	stp	x20, x19, [sp, #352]
   13a08:	add	x29, sp, #0x110
   13a0c:	str	w2, [sp, #40]
   13a10:	mov	x19, x1
   13a14:	mov	x22, x0
   13a18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13a1c:	ldr	x1, [x0, #2800]
   13a20:	add	x0, x0, #0xaf0
   13a24:	blr	x1
   13a28:	mrs	x11, tpidr_el0
   13a2c:	ldr	w8, [x11, x0]
   13a30:	str	w8, [sp, #36]
   13a34:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13a38:	ldr	x1, [x0, #2736]
   13a3c:	add	x0, x0, #0xab0
   13a40:	blr	x1
   13a44:	ldr	x9, [x11, x0]
   13a48:	mov	x8, x0
   13a4c:	str	x9, [sp, #24]
   13a50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13a54:	ldr	x1, [x0, #2768]
   13a58:	add	x0, x0, #0xad0
   13a5c:	blr	x1
   13a60:	ldr	x9, [x11, x0]
   13a64:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   13a68:	str	x10, [x11, x0]
   13a6c:	str	x11, [sp, #104]
   13a70:	str	x9, [sp, #16]
   13a74:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   13a78:	str	x9, [x11, x8]
   13a7c:	ldr	x8, [x19]
   13a80:	cmp	x8, #0x1
   13a84:	b.eq	140c8 <mpfr_exp_3@@Base+0x6dc>  // b.none
   13a88:	b.le	140d0 <mpfr_exp_3@@Base+0x6e4>
   13a8c:	ldr	x8, [x19]
   13a90:	mov	w9, #0x3a                  	// #58
   13a94:	sub	x8, x8, #0x1
   13a98:	clz	x8, x8
   13a9c:	sub	w8, w9, w8
   13aa0:	ldr	x1, [x19]
   13aa4:	ldr	x21, [x19, #16]
   13aa8:	bic	w8, w8, w8, asr #31
   13aac:	sub	x0, x29, #0x48
   13ab0:	str	x8, [sp, #96]
   13ab4:	bl	cf60 <mpfr_init2@plt>
   13ab8:	ldr	w3, [x19, #8]
   13abc:	sub	x0, x29, #0x48
   13ac0:	mov	w2, #0x3                   	// #3
   13ac4:	mov	x1, x19
   13ac8:	bl	cb70 <mpfr_set4@plt>
   13acc:	cmp	x21, #0x1
   13ad0:	b.lt	13af8 <mpfr_exp_3@@Base+0x10c>  // b.tstop
   13ad4:	sub	x0, x29, #0x48
   13ad8:	mov	x1, x19
   13adc:	mov	x2, x21
   13ae0:	mov	w3, wzr
   13ae4:	bl	cde0 <mpfr_div_2ui@plt>
   13ae8:	ldur	x8, [x29, #-56]
   13aec:	mov	x23, x21
   13af0:	mov	x21, x8
   13af4:	b	13afc <mpfr_exp_3@@Base+0x110>
   13af8:	mov	x23, xzr
   13afc:	ldr	x19, [x22]
   13b00:	ldr	x8, [sp, #96]
   13b04:	add	x8, x19, x8
   13b08:	cmp	x8, #0x1
   13b0c:	b.eq	140ec <mpfr_exp_3@@Base+0x700>  // b.none
   13b10:	b.le	140f4 <mpfr_exp_3@@Base+0x708>
   13b14:	ldr	x8, [x22]
   13b18:	ldr	x9, [sp, #96]
   13b1c:	add	x8, x9, x8
   13b20:	sub	x8, x8, #0x1
   13b24:	clz	x8, x8
   13b28:	mov	w9, #0x40                  	// #64
   13b2c:	sub	x8, x9, x8
   13b30:	add	x24, x8, x19
   13b34:	add	x8, x23, #0x22
   13b38:	add	x25, x8, x24
   13b3c:	sub	x0, x29, #0x28
   13b40:	mov	x1, x25
   13b44:	str	x8, [sp, #56]
   13b48:	sub	x19, x29, #0x28
   13b4c:	bl	cf60 <mpfr_init2@plt>
   13b50:	sub	x0, x29, #0x68
   13b54:	mov	x1, x25
   13b58:	sub	x20, x29, #0x68
   13b5c:	bl	cf60 <mpfr_init2@plt>
   13b60:	sub	x0, x29, #0x78
   13b64:	bl	c400 <mpfr_mpz_init@plt>
   13b68:	ldr	w9, [sp, #40]
   13b6c:	mov	w8, #0x60                  	// #96
   13b70:	sub	x8, x8, x21
   13b74:	stp	x22, x8, [sp, #72]
   13b78:	cmp	w9, #0x0
   13b7c:	cset	w8, eq  // eq = none
   13b80:	str	x8, [sp, #48]
   13b84:	csinc	w8, w9, wzr, ne  // ne = any
   13b88:	cmp	x23, #0x0
   13b8c:	str	w8, [sp, #12]
   13b90:	csel	x8, x19, x20, gt
   13b94:	sub	x27, x23, #0x1
   13b98:	str	x8, [sp, #64]
   13b9c:	mov	w8, #0x40                  	// #64
   13ba0:	str	wzr, [sp, #44]
   13ba4:	str	x8, [sp, #120]
   13ba8:	str	x23, [sp, #88]
   13bac:	b	13bc4 <mpfr_exp_3@@Base+0x1d8>
   13bb0:	mov	x8, xzr
   13bb4:	cbnz	x8, 13ee4 <mpfr_exp_3@@Base+0x4f8>
   13bb8:	ldr	x25, [sp, #112]
   13bbc:	mov	w9, wzr
   13bc0:	tbz	w9, #0, 14038 <mpfr_exp_3@@Base+0x64c>
   13bc4:	subs	x19, x25, #0x1
   13bc8:	str	x24, [sp, #136]
   13bcc:	str	x25, [sp, #112]
   13bd0:	b.eq	13fcc <mpfr_exp_3@@Base+0x5e0>  // b.none
   13bd4:	b.le	13fd4 <mpfr_exp_3@@Base+0x5e8>
   13bd8:	clz	x8, x19
   13bdc:	mov	w9, #0x40                  	// #64
   13be0:	sub	w23, w9, w8
   13be4:	sub	w22, w23, #0x4
   13be8:	add	w8, w22, w22, lsl #1
   13bec:	sbfiz	x0, x8, #4, #32
   13bf0:	sub	w19, w23, #0x6
   13bf4:	str	x8, [sp, #128]
   13bf8:	stur	x0, [x29, #-128]
   13bfc:	bl	d1f0 <mpfr_allocate_func@plt>
   13c00:	subs	w28, w23, #0x5
   13c04:	mov	x25, x0
   13c08:	b.lt	13c34 <mpfr_exp_3@@Base+0x248>  // b.tstop
   13c0c:	ldr	x8, [sp, #128]
   13c10:	mov	x24, xzr
   13c14:	mov	x20, x25
   13c18:	sxtw	x26, w8
   13c1c:	mov	x0, x20
   13c20:	bl	c400 <mpfr_mpz_init@plt>
   13c24:	add	x24, x24, #0x1
   13c28:	cmp	x24, x26
   13c2c:	add	x20, x20, #0x10
   13c30:	b.lt	13c1c <mpfr_exp_3@@Base+0x230>  // b.tstop
   13c34:	lsl	w8, w22, #1
   13c38:	sbfiz	x26, x8, #3, #32
   13c3c:	mov	x0, x26
   13c40:	bl	d1f0 <mpfr_allocate_func@plt>
   13c44:	mov	x20, x0
   13c48:	sub	x0, x29, #0x78
   13c4c:	sub	x1, x29, #0x48
   13c50:	mov	w2, wzr
   13c54:	bl	cec0 <mpfr_extract@plt>
   13c58:	ldr	x2, [sp, #80]
   13c5c:	sub	x0, x29, #0x68
   13c60:	sub	x1, x29, #0x78
   13c64:	mov	w3, w28
   13c68:	mov	x4, x25
   13c6c:	mov	x5, x20
   13c70:	bl	14110 <mpfr_exp_3@@Base+0x724>
   13c74:	mov	w22, #0x20                  	// #32
   13c78:	sub	x0, x29, #0x68
   13c7c:	sub	x1, x29, #0x68
   13c80:	mov	w2, #0x3                   	// #3
   13c84:	bl	c8c0 <mpfr_sqr@plt>
   13c88:	subs	w22, w22, #0x1
   13c8c:	b.ne	13c78 <mpfr_exp_3@@Base+0x28c>  // b.any
   13c90:	ldr	x8, [sp, #96]
   13c94:	cmp	w19, w8
   13c98:	csel	w28, w8, w19, gt
   13c9c:	cmp	w28, #0x1
   13ca0:	b.lt	13d30 <mpfr_exp_3@@Base+0x344>  // b.tstop
   13ca4:	mov	w24, wzr
   13ca8:	mov	w22, #0x80                  	// #128
   13cac:	add	w2, w24, #0x1
   13cb0:	sub	x0, x29, #0x78
   13cb4:	sub	x1, x29, #0x48
   13cb8:	bl	cec0 <mpfr_extract@plt>
   13cbc:	ldur	w8, [x29, #-116]
   13cc0:	cbz	w8, 13cf4 <mpfr_exp_3@@Base+0x308>
   13cc4:	sub	x2, x22, x21
   13cc8:	sub	x0, x29, #0x28
   13ccc:	sub	x1, x29, #0x78
   13cd0:	mov	w3, w19
   13cd4:	mov	x4, x25
   13cd8:	mov	x5, x20
   13cdc:	bl	14110 <mpfr_exp_3@@Base+0x724>
   13ce0:	sub	x0, x29, #0x68
   13ce4:	sub	x1, x29, #0x68
   13ce8:	sub	x2, x29, #0x28
   13cec:	mov	w3, #0x3                   	// #3
   13cf0:	bl	c1b0 <mpfr_mul@plt>
   13cf4:	lsr	x8, x22, #62
   13cf8:	cbnz	x8, 13d14 <mpfr_exp_3@@Base+0x328>
   13cfc:	add	w24, w24, #0x1
   13d00:	lsl	x22, x22, #1
   13d04:	cmp	w24, w28
   13d08:	sub	w19, w19, #0x1
   13d0c:	b.lt	13cac <mpfr_exp_3@@Base+0x2c0>  // b.tstop
   13d10:	b	13d30 <mpfr_exp_3@@Base+0x344>
   13d14:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   13d18:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   13d1c:	mov	w1, #0xf5                  	// #245
   13d20:	add	x0, x0, #0x198
   13d24:	add	x2, x2, #0x1e3
   13d28:	bl	d030 <mpfr_assert_fail@plt>
   13d2c:	b	13cfc <mpfr_exp_3@@Base+0x310>
   13d30:	cmp	w23, #0x5
   13d34:	b.lt	13d60 <mpfr_exp_3@@Base+0x374>  // b.tstop
   13d38:	ldr	x8, [sp, #128]
   13d3c:	mov	x22, xzr
   13d40:	mov	x19, x25
   13d44:	sxtw	x23, w8
   13d48:	mov	x0, x19
   13d4c:	bl	c610 <mpfr_mpz_clear@plt>
   13d50:	add	x22, x22, #0x1
   13d54:	cmp	x22, x23
   13d58:	add	x19, x19, #0x10
   13d5c:	b.lt	13d48 <mpfr_exp_3@@Base+0x35c>  // b.tstop
   13d60:	ldur	x1, [x29, #-128]
   13d64:	mov	x0, x25
   13d68:	bl	d120 <mpfr_free_func@plt>
   13d6c:	mov	x0, x20
   13d70:	mov	x1, x26
   13d74:	bl	d120 <mpfr_free_func@plt>
   13d78:	ldr	x8, [sp, #88]
   13d7c:	cmp	x8, #0x1
   13d80:	b.lt	13e58 <mpfr_exp_3@@Base+0x46c>  // b.tstop
   13d84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13d88:	ldr	x1, [x0, #2800]
   13d8c:	add	x0, x0, #0xaf0
   13d90:	blr	x1
   13d94:	cmp	x8, #0x2
   13d98:	ldr	x8, [sp, #104]
   13d9c:	ldp	x20, x22, [sp, #64]
   13da0:	ldr	x24, [sp, #136]
   13da4:	str	wzr, [x8, x0]
   13da8:	b.lt	13dcc <mpfr_exp_3@@Base+0x3e0>  // b.tstop
   13dac:	mov	x19, xzr
   13db0:	sub	x0, x29, #0x68
   13db4:	sub	x1, x29, #0x68
   13db8:	mov	w2, #0x3                   	// #3
   13dbc:	bl	c8c0 <mpfr_sqr@plt>
   13dc0:	add	x19, x19, #0x1
   13dc4:	cmp	x27, x19
   13dc8:	b.gt	13db0 <mpfr_exp_3@@Base+0x3c4>
   13dcc:	sub	x0, x29, #0x28
   13dd0:	sub	x1, x29, #0x68
   13dd4:	mov	w2, #0x3                   	// #3
   13dd8:	bl	c8c0 <mpfr_sqr@plt>
   13ddc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13de0:	ldr	x1, [x0, #2800]
   13de4:	add	x0, x0, #0xaf0
   13de8:	blr	x1
   13dec:	ldr	x8, [sp, #104]
   13df0:	ldr	w8, [x8, x0]
   13df4:	tbnz	w8, #1, 1400c <mpfr_exp_3@@Base+0x620>
   13df8:	tbz	w8, #0, 13e60 <mpfr_exp_3@@Base+0x474>
   13dfc:	sub	x0, x29, #0x68
   13e00:	sub	x1, x29, #0x68
   13e04:	mov	w2, #0x1                   	// #1
   13e08:	mov	w3, #0x3                   	// #3
   13e0c:	mov	w19, #0x1                   	// #1
   13e10:	bl	c780 <mpfr_mul_2ui@plt>
   13e14:	sub	x0, x29, #0x28
   13e18:	sub	x1, x29, #0x68
   13e1c:	mov	w2, #0x3                   	// #3
   13e20:	bl	c8c0 <mpfr_sqr@plt>
   13e24:	ldur	x8, [x29, #-24]
   13e28:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   13e2c:	cmp	x8, x9
   13e30:	b.ne	13e64 <mpfr_exp_3@@Base+0x478>  // b.any
   13e34:	ldr	w1, [sp, #12]
   13e38:	mov	w2, #0x1                   	// #1
   13e3c:	mov	x0, x22
   13e40:	bl	c880 <mpfr_underflow@plt>
   13e44:	ldr	w8, [sp, #36]
   13e48:	str	w0, [sp, #44]
   13e4c:	mov	w9, wzr
   13e50:	orr	w8, w8, #0x1
   13e54:	b	1402c <mpfr_exp_3@@Base+0x640>
   13e58:	ldp	x20, x22, [sp, #64]
   13e5c:	ldr	x24, [sp, #136]
   13e60:	mov	w19, wzr
   13e64:	ldr	x8, [x20, #16]
   13e68:	mov	x9, #0xfffffffffffffeff    	// #-257
   13e6c:	movk	x9, #0x7fff, lsl #48
   13e70:	add	x9, x9, #0x105
   13e74:	cmp	x8, x9
   13e78:	b.lt	13f78 <mpfr_exp_3@@Base+0x58c>  // b.tstop
   13e7c:	ldr	x8, [x20]
   13e80:	ldr	x9, [x22]
   13e84:	ldr	x0, [x20, #24]
   13e88:	mov	x2, x24
   13e8c:	sub	x10, x8, #0x1
   13e90:	add	x8, x8, #0x3e
   13e94:	cmp	x10, #0x0
   13e98:	csel	x8, x8, x10, lt  // lt = tstop
   13e9c:	asr	x8, x8, #6
   13ea0:	add	x1, x8, #0x1
   13ea4:	ldr	x8, [sp, #48]
   13ea8:	add	x3, x9, x8
   13eac:	bl	c830 <mpfr_round_p@plt>
   13eb0:	cbz	w0, 13f78 <mpfr_exp_3@@Base+0x58c>
   13eb4:	ldr	w3, [x20, #8]
   13eb8:	ldr	w2, [sp, #40]
   13ebc:	mov	x0, x22
   13ec0:	mov	x1, x20
   13ec4:	bl	cb70 <mpfr_set4@plt>
   13ec8:	str	w0, [sp, #44]
   13ecc:	cbz	w19, 13bb0 <mpfr_exp_3@@Base+0x1c4>
   13ed0:	ldr	x8, [x22, #16]
   13ed4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   13ed8:	cmp	x8, x9
   13edc:	cset	w8, gt
   13ee0:	cbz	x8, 13bb8 <mpfr_exp_3@@Base+0x1cc>
   13ee4:	ldr	w20, [sp, #40]
   13ee8:	ldr	x19, [x22, #16]
   13eec:	mov	x2, #0xfffffffffffffffe    	// #-2
   13ef0:	mov	x0, x22
   13ef4:	mov	x1, x22
   13ef8:	mov	w3, w20
   13efc:	bl	bff0 <mpfr_mul_2si@plt>
   13f00:	cbz	w0, 13bb8 <mpfr_exp_3@@Base+0x1cc>
   13f04:	mov	w8, w0
   13f08:	cbnz	w20, 13f5c <mpfr_exp_3@@Base+0x570>
   13f0c:	ldr	w9, [sp, #44]
   13f10:	tbz	w9, #31, 13f5c <mpfr_exp_3@@Base+0x570>
   13f14:	ldr	x9, [x22, #16]
   13f18:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   13f1c:	cmp	x9, x10
   13f20:	b.ne	13f5c <mpfr_exp_3@@Base+0x570>  // b.any
   13f24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   13f28:	ldr	x1, [x0, #2736]
   13f2c:	add	x0, x0, #0xab0
   13f30:	blr	x1
   13f34:	ldr	x9, [sp, #104]
   13f38:	ldr	x9, [x9, x0]
   13f3c:	add	x9, x9, #0x1
   13f40:	cmp	x19, x9
   13f44:	b.ne	13f5c <mpfr_exp_3@@Base+0x570>  // b.any
   13f48:	mov	w1, #0x2                   	// #2
   13f4c:	mov	w2, #0x1                   	// #1
   13f50:	mov	x0, x22
   13f54:	bl	c880 <mpfr_underflow@plt>
   13f58:	mov	w8, w0
   13f5c:	ldr	w10, [sp, #36]
   13f60:	ldr	x25, [sp, #112]
   13f64:	mov	w9, wzr
   13f68:	str	w8, [sp, #44]
   13f6c:	orr	w10, w10, #0x1
   13f70:	str	w10, [sp, #36]
   13f74:	b	13bc0 <mpfr_exp_3@@Base+0x1d4>
   13f78:	ldr	x19, [sp, #120]
   13f7c:	mov	x8, #0xfffffffffffffeff    	// #-257
   13f80:	movk	x8, #0x7fff, lsl #48
   13f84:	sub	x8, x8, x24
   13f88:	cmp	x19, x8
   13f8c:	b.gt	13ff0 <mpfr_exp_3@@Base+0x604>
   13f90:	add	x24, x24, x19
   13f94:	cmp	x24, #0x0
   13f98:	cinc	x8, x24, lt  // lt = tstop
   13f9c:	asr	x8, x8, #1
   13fa0:	str	x8, [sp, #120]
   13fa4:	ldr	x8, [sp, #56]
   13fa8:	sub	x0, x29, #0x28
   13fac:	add	x25, x8, x24
   13fb0:	mov	x1, x25
   13fb4:	bl	c330 <mpfr_set_prec@plt>
   13fb8:	sub	x0, x29, #0x68
   13fbc:	mov	x1, x25
   13fc0:	bl	c330 <mpfr_set_prec@plt>
   13fc4:	mov	w9, #0x1                   	// #1
   13fc8:	b	13bc0 <mpfr_exp_3@@Base+0x1d4>
   13fcc:	mov	w23, wzr
   13fd0:	b	13be4 <mpfr_exp_3@@Base+0x1f8>
   13fd4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   13fd8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   13fdc:	mov	w1, #0xd8                  	// #216
   13fe0:	add	x0, x0, #0x198
   13fe4:	add	x2, x2, #0x1d8
   13fe8:	bl	d030 <mpfr_assert_fail@plt>
   13fec:	b	13bd8 <mpfr_exp_3@@Base+0x1ec>
   13ff0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   13ff4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   13ff8:	mov	w1, #0x146                 	// #326
   13ffc:	add	x0, x0, #0x198
   14000:	add	x2, x2, #0x207
   14004:	bl	d030 <mpfr_assert_fail@plt>
   14008:	b	13f90 <mpfr_exp_3@@Base+0x5a4>
   1400c:	ldr	w1, [sp, #40]
   14010:	mov	w2, #0x1                   	// #1
   14014:	mov	x0, x22
   14018:	bl	c3a0 <mpfr_overflow@plt>
   1401c:	ldr	w8, [sp, #36]
   14020:	mov	w9, wzr
   14024:	str	w0, [sp, #44]
   14028:	orr	w8, w8, #0x2
   1402c:	ldr	x25, [sp, #112]
   14030:	str	w8, [sp, #36]
   14034:	b	13bc0 <mpfr_exp_3@@Base+0x1d4>
   14038:	sub	x0, x29, #0x78
   1403c:	bl	c610 <mpfr_mpz_clear@plt>
   14040:	sub	x0, x29, #0x68
   14044:	bl	c4f0 <mpfr_clear@plt>
   14048:	sub	x0, x29, #0x28
   1404c:	bl	c4f0 <mpfr_clear@plt>
   14050:	sub	x0, x29, #0x48
   14054:	bl	c4f0 <mpfr_clear@plt>
   14058:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1405c:	ldr	x1, [x0, #2800]
   14060:	add	x0, x0, #0xaf0
   14064:	blr	x1
   14068:	ldr	x8, [sp, #104]
   1406c:	ldr	w9, [sp, #36]
   14070:	str	w9, [x8, x0]
   14074:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14078:	ldr	x1, [x0, #2736]
   1407c:	add	x0, x0, #0xab0
   14080:	blr	x1
   14084:	ldr	x9, [sp, #24]
   14088:	str	x9, [x8, x0]
   1408c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14090:	ldr	x1, [x0, #2768]
   14094:	add	x0, x0, #0xad0
   14098:	blr	x1
   1409c:	ldr	x9, [sp, #16]
   140a0:	ldp	x20, x19, [sp, #352]
   140a4:	ldp	x22, x21, [sp, #336]
   140a8:	ldp	x24, x23, [sp, #320]
   140ac:	str	x9, [x8, x0]
   140b0:	ldr	w0, [sp, #44]
   140b4:	ldp	x26, x25, [sp, #304]
   140b8:	ldp	x28, x27, [sp, #288]
   140bc:	ldp	x29, x30, [sp, #272]
   140c0:	add	sp, sp, #0x170
   140c4:	ret
   140c8:	mov	w8, #0xfffffffa            	// #-6
   140cc:	b	13aa0 <mpfr_exp_3@@Base+0xb4>
   140d0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   140d4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   140d8:	add	x0, x0, #0x198
   140dc:	add	x2, x2, #0x19f
   140e0:	mov	w1, #0xb7                  	// #183
   140e4:	bl	d030 <mpfr_assert_fail@plt>
   140e8:	b	13a8c <mpfr_exp_3@@Base+0xa0>
   140ec:	mov	x8, xzr
   140f0:	b	13b30 <mpfr_exp_3@@Base+0x144>
   140f4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   140f8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   140fc:	add	x0, x0, #0x198
   14100:	add	x2, x2, #0x1b7
   14104:	mov	w1, #0xcb                  	// #203
   14108:	bl	d030 <mpfr_assert_fail@plt>
   1410c:	b	13b14 <mpfr_exp_3@@Base+0x128>
   14110:	sub	sp, sp, #0xf0
   14114:	stp	x29, x30, [sp, #144]
   14118:	stp	x28, x27, [sp, #160]
   1411c:	stp	x26, x25, [sp, #176]
   14120:	stp	x24, x23, [sp, #192]
   14124:	stp	x22, x21, [sp, #208]
   14128:	stp	x20, x19, [sp, #224]
   1412c:	ldr	x23, [x0]
   14130:	mov	x20, x5
   14134:	mov	x22, x4
   14138:	mov	w24, w3
   1413c:	mov	x25, x2
   14140:	cmp	w3, #0x3f
   14144:	mov	x27, x1
   14148:	add	x29, sp, #0x90
   1414c:	str	x0, [sp, #8]
   14150:	b.cs	145c0 <mpfr_exp_3@@Base+0xbd4>  // b.hs, b.nlast
   14154:	sxtw	x8, w24
   14158:	add	x9, x8, #0x1
   1415c:	add	x8, x22, x9, lsl #4
   14160:	lsl	w19, w9, #1
   14164:	mov	x0, x27
   14168:	mov	x1, xzr
   1416c:	stur	x8, [x29, #-48]
   14170:	add	x21, x22, w19, sxtw #4
   14174:	str	x9, [sp, #24]
   14178:	add	x28, x20, x9, lsl #3
   1417c:	bl	bee0 <__gmpz_scan1@plt>
   14180:	mov	x26, x0
   14184:	tbnz	x0, #63, 145dc <mpfr_exp_3@@Base+0xbf0>
   14188:	mov	x0, x27
   1418c:	mov	x1, x27
   14190:	mov	x2, x26
   14194:	str	x20, [sp, #16]
   14198:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   1419c:	mov	x0, x21
   141a0:	mov	x1, x27
   141a4:	bl	c410 <__gmpz_set@plt>
   141a8:	cmp	w24, #0x2
   141ac:	b.lt	141d8 <mpfr_exp_3@@Base+0x7ec>  // b.tstop
   141b0:	mov	w8, w24
   141b4:	sub	x20, x8, #0x1
   141b8:	mov	x1, x21
   141bc:	add	x27, x1, #0x10
   141c0:	mov	x0, x27
   141c4:	mov	x2, x1
   141c8:	bl	c460 <__gmpz_mul@plt>
   141cc:	subs	x20, x20, #0x1
   141d0:	mov	x1, x27
   141d4:	b.ne	141bc <mpfr_exp_3@@Base+0x7d0>  // b.any
   141d8:	sub	x8, x25, x26
   141dc:	mov	w1, #0x1                   	// #1
   141e0:	mov	x0, x22
   141e4:	str	x21, [sp]
   141e8:	stur	x8, [x29, #-16]
   141ec:	bl	c110 <__gmpz_set_ui@plt>
   141f0:	ldur	x0, [x29, #-48]
   141f4:	mov	w1, #0x1                   	// #1
   141f8:	bl	c110 <__gmpz_set_ui@plt>
   141fc:	ldr	x8, [sp, #16]
   14200:	mov	x25, xzr
   14204:	mov	w20, wzr
   14208:	cmp	x23, #0x1
   1420c:	str	xzr, [x8]
   14210:	ldr	x8, [sp, #24]
   14214:	str	xzr, [x28]
   14218:	str	x23, [sp, #72]
   1421c:	stur	x22, [x29, #-24]
   14220:	lsl	x27, x8, #4
   14224:	b.lt	143ec <mpfr_exp_3@@Base+0xa00>  // b.tstop
   14228:	cbz	w24, 143ec <mpfr_exp_3@@Base+0xa00>
   1422c:	sxtw	x8, w19
   14230:	ldr	x9, [sp, #16]
   14234:	lsl	x8, x8, #4
   14238:	str	x8, [sp, #32]
   1423c:	ldr	x8, [sp, #24]
   14240:	sub	x9, x9, #0x8
   14244:	mov	x26, xzr
   14248:	mov	w21, wzr
   1424c:	mov	w24, w24
   14250:	str	x9, [sp, #40]
   14254:	mov	w9, #0x1                   	// #1
   14258:	lsl	x8, x8, #3
   1425c:	stur	x8, [x29, #-32]
   14260:	stp	x27, x28, [sp, #56]
   14264:	str	x24, [sp, #48]
   14268:	sxtw	x8, w21
   1426c:	add	x20, x8, #0x1
   14270:	lsl	x19, x20, #4
   14274:	add	x25, x9, #0x1
   14278:	add	x0, x22, x19
   1427c:	mov	x1, x25
   14280:	str	xzr, [x28, x20, lsl #3]
   14284:	stur	x9, [x29, #-40]
   14288:	bl	c110 <__gmpz_set_ui@plt>
   1428c:	ldur	x8, [x29, #-48]
   14290:	mov	x1, x25
   14294:	add	x0, x8, x19
   14298:	bl	c110 <__gmpz_set_ui@plt>
   1429c:	mov	x9, x25
   142a0:	tbnz	w9, #0, 143d4 <mpfr_exp_3@@Base+0x9e8>
   142a4:	ldr	x8, [sp, #40]
   142a8:	ldr	x22, [sp, #32]
   142ac:	add	w10, w21, #0x1
   142b0:	sbfiz	x24, x10, #4, #32
   142b4:	mov	x23, xzr
   142b8:	add	x21, x27, x24
   142bc:	add	x20, x8, w10, sxtw #3
   142c0:	mov	x27, x9
   142c4:	stur	x10, [x29, #-64]
   142c8:	stur	x9, [x29, #-56]
   142cc:	ldur	x26, [x29, #-24]
   142d0:	add	x28, x26, x21
   142d4:	add	x25, x26, x22
   142d8:	mov	x0, x28
   142dc:	mov	x1, x28
   142e0:	mov	x2, x25
   142e4:	bl	c460 <__gmpz_mul@plt>
   142e8:	sub	x19, x28, #0x10
   142ec:	add	x26, x26, x24
   142f0:	mov	x0, x19
   142f4:	mov	x1, x19
   142f8:	mov	x2, x26
   142fc:	bl	c460 <__gmpz_mul@plt>
   14300:	ldur	x8, [x29, #-16]
   14304:	mov	x0, x19
   14308:	mov	x1, x19
   1430c:	lsl	x2, x8, x23
   14310:	stur	x2, [x29, #-8]
   14314:	bl	c6a0 <__gmpz_mul_2exp@plt>
   14318:	mov	x0, x19
   1431c:	mov	x1, x19
   14320:	mov	x2, x28
   14324:	bl	ceb0 <__gmpz_add@plt>
   14328:	sub	x0, x26, #0x10
   1432c:	mov	x1, x0
   14330:	mov	x2, x26
   14334:	bl	c460 <__gmpz_mul@plt>
   14338:	ldur	x10, [x29, #-32]
   1433c:	ldur	x13, [x29, #-8]
   14340:	add	x23, x23, #0x1
   14344:	mov	w9, w27
   14348:	ldr	x8, [x20, x10]
   1434c:	lsr	x27, x27, #1
   14350:	sub	x21, x21, #0x10
   14354:	sub	x24, x24, #0x10
   14358:	add	x8, x8, #0x1
   1435c:	str	x8, [x20, x10]
   14360:	ldr	w8, [x26, #4]
   14364:	ldr	x10, [x26, #8]
   14368:	ldr	w11, [x25, #4]
   1436c:	ldr	x12, [x25, #8]
   14370:	cmp	w8, #0x0
   14374:	cneg	w8, w8, mi  // mi = first
   14378:	add	x10, x10, w8, uxtw #3
   1437c:	ldur	x10, [x10, #-8]
   14380:	cmp	w11, #0x0
   14384:	cneg	w11, w11, mi  // mi = first
   14388:	add	x12, x12, w11, uxtw #3
   1438c:	ldur	x12, [x12, #-8]
   14390:	clz	x10, x10
   14394:	mvn	x10, x10
   14398:	add	x10, x13, x10
   1439c:	ldr	x13, [x20]
   143a0:	clz	x12, x12
   143a4:	add	x8, x10, x8, lsl #6
   143a8:	add	x8, x8, x12
   143ac:	add	x8, x8, x13
   143b0:	sub	x26, x8, x11, lsl #6
   143b4:	stp	x26, x26, [x20], #-8
   143b8:	add	x22, x22, #0x10
   143bc:	tbz	w9, #1, 142cc <mpfr_exp_3@@Base+0x8e0>
   143c0:	ldp	x8, x9, [x29, #-64]
   143c4:	ldur	x22, [x29, #-24]
   143c8:	ldp	x24, x27, [sp, #48]
   143cc:	sub	w20, w8, w23
   143d0:	ldp	x28, x23, [sp, #64]
   143d4:	ldur	x25, [x29, #-40]
   143d8:	cmp	x26, x23
   143dc:	b.ge	143ec <mpfr_exp_3@@Base+0xa00>  // b.tcont
   143e0:	lsr	x8, x9, x24
   143e4:	mov	w21, w20
   143e8:	cbz	x8, 14268 <mpfr_exp_3@@Base+0x87c>
   143ec:	ldr	x22, [sp]
   143f0:	cmp	w20, #0x1
   143f4:	b.lt	144ac <mpfr_exp_3@@Base+0xac0>  // b.tstop
   143f8:	ldur	x9, [x29, #-24]
   143fc:	sxtw	x8, w20
   14400:	mov	x28, x27
   14404:	mov	x21, xzr
   14408:	add	x24, x9, w20, sxtw #4
   1440c:	ldr	x9, [sp, #24]
   14410:	add	x20, x8, #0x1
   14414:	add	x8, x8, x9
   14418:	ldr	x9, [sp, #16]
   1441c:	add	x27, x9, x8, lsl #3
   14420:	mov	x26, x27
   14424:	ldr	x8, [x26, #-8]!
   14428:	add	x19, x24, x28
   1442c:	mov	x0, x19
   14430:	mov	x1, x19
   14434:	add	x2, x22, x8, lsl #4
   14438:	bl	c460 <__gmpz_mul@plt>
   1443c:	sub	x23, x19, #0x10
   14440:	mov	x0, x23
   14444:	mov	x1, x23
   14448:	mov	x2, x24
   1444c:	bl	c460 <__gmpz_mul@plt>
   14450:	ldr	x8, [x27]
   14454:	mov	w9, #0x1                   	// #1
   14458:	mov	x0, x23
   1445c:	mov	x1, x23
   14460:	lsl	x8, x9, x8
   14464:	add	x21, x8, x21
   14468:	ldur	x8, [x29, #-16]
   1446c:	mul	x2, x21, x8
   14470:	bl	c6a0 <__gmpz_mul_2exp@plt>
   14474:	mov	x0, x23
   14478:	mov	x1, x23
   1447c:	mov	x2, x19
   14480:	bl	ceb0 <__gmpz_add@plt>
   14484:	sub	x19, x24, #0x10
   14488:	mov	x0, x19
   1448c:	mov	x1, x19
   14490:	mov	x2, x24
   14494:	bl	c460 <__gmpz_mul@plt>
   14498:	sub	x20, x20, #0x1
   1449c:	cmp	x20, #0x1
   144a0:	mov	x27, x26
   144a4:	mov	x24, x19
   144a8:	b.gt	14424 <mpfr_exp_3@@Base+0xa38>
   144ac:	ldur	x19, [x29, #-24]
   144b0:	ldr	x8, [sp, #24]
   144b4:	ldr	x20, [sp, #72]
   144b8:	add	x8, x19, x8, lsl #4
   144bc:	ldr	w9, [x8, #4]
   144c0:	ldr	x8, [x8, #8]
   144c4:	cmp	w9, #0x0
   144c8:	cneg	w9, w9, mi  // mi = first
   144cc:	add	x8, x8, w9, uxtw #3
   144d0:	ldur	x8, [x8, #-8]
   144d4:	lsl	x9, x9, #6
   144d8:	clz	x8, x8
   144dc:	sub	x8, x9, x8
   144e0:	subs	x22, x8, x20, lsl #1
   144e4:	b.mi	144fc <mpfr_exp_3@@Base+0xb10>  // b.first
   144e8:	ldur	x0, [x29, #-48]
   144ec:	mov	x2, x22
   144f0:	mov	x1, x0
   144f4:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   144f8:	b	1450c <mpfr_exp_3@@Base+0xb20>
   144fc:	ldur	x0, [x29, #-48]
   14500:	neg	x2, x22
   14504:	mov	x1, x0
   14508:	bl	c6a0 <__gmpz_mul_2exp@plt>
   1450c:	ldr	w8, [x19, #4]
   14510:	ldr	x9, [x19, #8]
   14514:	ldur	x21, [x29, #-16]
   14518:	cmp	w8, #0x0
   1451c:	cneg	w8, w8, mi  // mi = first
   14520:	add	x9, x9, w8, uxtw #3
   14524:	ldur	x9, [x9, #-8]
   14528:	lsl	x8, x8, #6
   1452c:	clz	x9, x9
   14530:	sub	x8, x8, x9
   14534:	sub	x23, x8, x20
   14538:	cmp	x23, #0x1
   1453c:	b.lt	14554 <mpfr_exp_3@@Base+0xb68>  // b.tstop
   14540:	mov	x0, x19
   14544:	mov	x1, x19
   14548:	mov	x2, x23
   1454c:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   14550:	b	14564 <mpfr_exp_3@@Base+0xb78>
   14554:	neg	x2, x23
   14558:	mov	x0, x19
   1455c:	mov	x1, x19
   14560:	bl	c6a0 <__gmpz_mul_2exp@plt>
   14564:	ldur	x20, [x29, #-48]
   14568:	mov	x2, x19
   1456c:	mov	x0, x20
   14570:	mov	x1, x20
   14574:	bl	bf90 <__gmpz_tdiv_q@plt>
   14578:	ldr	x19, [sp, #8]
   1457c:	mov	w2, #0x3                   	// #3
   14580:	mov	x1, x20
   14584:	mov	x0, x19
   14588:	bl	c6e0 <mpfr_set_z@plt>
   1458c:	ldr	x8, [x19, #16]
   14590:	msub	x9, x25, x21, x22
   14594:	sub	x9, x9, x23
   14598:	add	x8, x9, x8
   1459c:	str	x8, [x19, #16]
   145a0:	ldp	x20, x19, [sp, #224]
   145a4:	ldp	x22, x21, [sp, #208]
   145a8:	ldp	x24, x23, [sp, #192]
   145ac:	ldp	x26, x25, [sp, #176]
   145b0:	ldp	x28, x27, [sp, #160]
   145b4:	ldp	x29, x30, [sp, #144]
   145b8:	add	sp, sp, #0xf0
   145bc:	ret
   145c0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   145c4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   145c8:	add	x0, x0, #0x198
   145cc:	add	x2, x2, #0x255
   145d0:	mov	w1, #0x34                  	// #52
   145d4:	bl	d030 <mpfr_assert_fail@plt>
   145d8:	b	14154 <mpfr_exp_3@@Base+0x768>
   145dc:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   145e0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   145e4:	add	x0, x0, #0x198
   145e8:	add	x2, x2, #0x278
   145ec:	mov	w1, #0x3d                  	// #61
   145f0:	bl	d030 <mpfr_assert_fail@plt>
   145f4:	b	14188 <mpfr_exp_3@@Base+0x79c>

00000000000145f8 <mpfr_exp@@Base>:
   145f8:	sub	sp, sp, #0xa0
   145fc:	stp	x29, x30, [sp, #64]
   14600:	stp	x28, x27, [sp, #80]
   14604:	stp	x26, x25, [sp, #96]
   14608:	stp	x24, x23, [sp, #112]
   1460c:	stp	x22, x21, [sp, #128]
   14610:	stp	x20, x19, [sp, #144]
   14614:	ldr	x9, [x1, #16]
   14618:	mov	x8, #0x2                   	// #2
   1461c:	movk	x8, #0x8000, lsl #48
   14620:	add	x10, x8, #0x2
   14624:	mov	w20, w2
   14628:	mov	x21, x1
   1462c:	cmp	x9, x10
   14630:	mov	x19, x0
   14634:	add	x29, sp, #0x40
   14638:	b.lt	14810 <mpfr_exp@@Base+0x218>  // b.tstop
   1463c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14640:	ldr	x1, [x0, #2768]
   14644:	add	x0, x0, #0xad0
   14648:	blr	x1
   1464c:	mrs	x27, tpidr_el0
   14650:	ldr	x22, [x27, x0]
   14654:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14658:	ldr	x1, [x0, #2624]
   1465c:	add	x0, x0, #0xa40
   14660:	blr	x1
   14664:	ldr	x8, [x27, x0]
   14668:	cmp	x22, x8
   1466c:	b.ne	14858 <mpfr_exp@@Base+0x260>  // b.any
   14670:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14674:	ldr	x1, [x0, #2560]
   14678:	add	x0, x0, #0xa00
   1467c:	blr	x1
   14680:	add	x1, x27, x0
   14684:	mov	w2, #0x1                   	// #1
   14688:	mov	x0, x21
   1468c:	bl	ce90 <mpfr_cmp3@plt>
   14690:	tbz	w0, #31, 14964 <mpfr_exp@@Base+0x36c>
   14694:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14698:	ldr	x1, [x0, #2736]
   1469c:	add	x0, x0, #0xab0
   146a0:	blr	x1
   146a4:	ldr	x22, [x27, x0]
   146a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   146ac:	ldr	x1, [x0, #2640]
   146b0:	add	x0, x0, #0xa50
   146b4:	blr	x1
   146b8:	ldr	x8, [x27, x0]
   146bc:	cmp	x22, x8
   146c0:	b.ne	14978 <mpfr_exp@@Base+0x380>  // b.any
   146c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   146c8:	ldr	x1, [x0, #2592]
   146cc:	add	x0, x0, #0xa20
   146d0:	blr	x1
   146d4:	add	x1, x27, x0
   146d8:	mov	w2, #0x1                   	// #1
   146dc:	mov	x0, x21
   146e0:	bl	ce90 <mpfr_cmp3@plt>
   146e4:	cmp	w0, #0x0
   146e8:	b.le	14ab4 <mpfr_exp@@Base+0x4bc>
   146ec:	ldr	x9, [x21, #16]
   146f0:	ldr	x8, [x19]
   146f4:	tbz	x9, #63, 14704 <mpfr_exp@@Base+0x10c>
   146f8:	neg	x9, x9
   146fc:	cmp	x8, x9
   14700:	b.cc	14acc <mpfr_exp@@Base+0x4d4>  // b.lo, b.ul, b.last
   14704:	mov	w9, #0x61a8                	// #25000
   14708:	cmp	x8, x9
   1470c:	b.ge	14b34 <mpfr_exp@@Base+0x53c>  // b.tcont
   14710:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14714:	ldr	x1, [x0, #2800]
   14718:	add	x0, x0, #0xaf0
   1471c:	blr	x1
   14720:	ldr	w25, [x27, x0]
   14724:	mov	x22, x0
   14728:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1472c:	ldr	x1, [x0, #2736]
   14730:	add	x0, x0, #0xab0
   14734:	blr	x1
   14738:	ldr	x26, [x27, x0]
   1473c:	mov	x23, x0
   14740:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14744:	ldr	x1, [x0, #2768]
   14748:	add	x0, x0, #0xad0
   1474c:	blr	x1
   14750:	ldr	x28, [x27, x0]
   14754:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   14758:	str	x8, [x27, x23]
   1475c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   14760:	mov	x24, x0
   14764:	str	x8, [x27, x0]
   14768:	mov	x0, x19
   1476c:	mov	x1, x21
   14770:	mov	w2, w20
   14774:	bl	cd50 <mpfr_exp_2@plt>
   14778:	ldr	w9, [x27, x22]
   1477c:	mov	w8, w0
   14780:	str	x26, [x27, x23]
   14784:	str	x28, [x27, x24]
   14788:	orr	w9, w9, w25
   1478c:	str	w9, [x27, x22]
   14790:	ldr	x9, [x19, #16]
   14794:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14798:	ldr	x1, [x0, #2736]
   1479c:	add	x0, x0, #0xab0
   147a0:	blr	x1
   147a4:	ldr	x10, [x27, x0]
   147a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   147ac:	ldr	x1, [x0, #2768]
   147b0:	add	x0, x0, #0xad0
   147b4:	blr	x1
   147b8:	cmp	x9, x10
   147bc:	b.lt	14b4c <mpfr_exp@@Base+0x554>  // b.tstop
   147c0:	ldr	x10, [x27, x0]
   147c4:	cmp	x9, x10
   147c8:	b.gt	14b4c <mpfr_exp@@Base+0x554>
   147cc:	cbz	w8, 147ec <mpfr_exp@@Base+0x1f4>
   147d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   147d4:	ldr	x1, [x0, #2800]
   147d8:	add	x0, x0, #0xaf0
   147dc:	blr	x1
   147e0:	ldr	w9, [x27, x0]
   147e4:	orr	w9, w9, #0x8
   147e8:	str	w9, [x27, x0]
   147ec:	ldp	x20, x19, [sp, #144]
   147f0:	ldp	x22, x21, [sp, #128]
   147f4:	ldp	x24, x23, [sp, #112]
   147f8:	ldp	x26, x25, [sp, #96]
   147fc:	ldp	x28, x27, [sp, #80]
   14800:	ldp	x29, x30, [sp, #64]
   14804:	mov	w0, w8
   14808:	add	sp, sp, #0xa0
   1480c:	ret
   14810:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   14814:	cmp	x9, x10
   14818:	b.eq	14b94 <mpfr_exp@@Base+0x59c>  // b.none
   1481c:	mov	x10, #0x2                   	// #2
   14820:	movk	x10, #0x8000, lsl #48
   14824:	cmp	x9, x10
   14828:	b.ne	14bb8 <mpfr_exp@@Base+0x5c0>  // b.any
   1482c:	str	x8, [x19, #16]
   14830:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14834:	ldr	x1, [x0, #2800]
   14838:	add	x0, x0, #0xaf0
   1483c:	blr	x1
   14840:	mrs	x9, tpidr_el0
   14844:	ldr	w10, [x9, x0]
   14848:	mov	w8, wzr
   1484c:	orr	w10, w10, #0x4
   14850:	str	w10, [x9, x0]
   14854:	b	147ec <mpfr_exp@@Base+0x1f4>
   14858:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1485c:	ldr	x1, [x0, #2800]
   14860:	add	x0, x0, #0xaf0
   14864:	blr	x1
   14868:	ldr	w8, [x27, x0]
   1486c:	mov	x23, x0
   14870:	str	w8, [sp, #20]
   14874:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14878:	ldr	x1, [x0, #2736]
   1487c:	add	x0, x0, #0xab0
   14880:	blr	x1
   14884:	ldr	x28, [x27, x0]
   14888:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   1488c:	mov	x24, x0
   14890:	str	x8, [x27, x0]
   14894:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14898:	ldr	x1, [x0, #2768]
   1489c:	add	x0, x0, #0xad0
   148a0:	blr	x1
   148a4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   148a8:	mov	w9, #0x40                  	// #64
   148ac:	sub	x10, x29, #0x8
   148b0:	mov	w11, #0x1                   	// #1
   148b4:	mov	x25, x0
   148b8:	str	x8, [x27, x0]
   148bc:	str	x9, [sp, #24]
   148c0:	str	x10, [sp, #48]
   148c4:	str	w11, [sp, #32]
   148c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   148cc:	ldr	x1, [x0, #2560]
   148d0:	add	x0, x0, #0xa00
   148d4:	blr	x1
   148d8:	add	x26, x27, x0
   148dc:	mov	w8, #0x20                  	// #32
   148e0:	str	x8, [x26]
   148e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   148e8:	ldr	x1, [x0, #2576]
   148ec:	add	x0, x0, #0xa10
   148f0:	blr	x1
   148f4:	add	x8, x27, x0
   148f8:	add	x0, sp, #0x18
   148fc:	mov	x1, x22
   14900:	mov	x2, xzr
   14904:	mov	w3, wzr
   14908:	str	x8, [x26, #24]
   1490c:	str	w11, [x26, #8]
   14910:	bl	bed0 <mpfr_set_si_2exp@plt>
   14914:	adrp	x8, 72000 <__gmpfr_l2b@@Base+0x2f0>
   14918:	adrp	x9, 72000 <__gmpfr_l2b@@Base+0x2f0>
   1491c:	ldr	x8, [x8, #4048]
   14920:	ldr	x9, [x9, #3984]
   14924:	cmp	x22, #0x0
   14928:	add	x2, sp, #0x18
   1492c:	mov	w3, #0x2                   	// #2
   14930:	csel	x1, x9, x8, lt  // lt = tstop
   14934:	mov	x0, x26
   14938:	bl	c1b0 <mpfr_mul@plt>
   1493c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14940:	ldr	x1, [x0, #2624]
   14944:	add	x0, x0, #0xa40
   14948:	blr	x1
   1494c:	ldr	w8, [sp, #20]
   14950:	str	x22, [x27, x0]
   14954:	str	x28, [x27, x24]
   14958:	str	x22, [x27, x25]
   1495c:	str	w8, [x27, x23]
   14960:	b	14670 <mpfr_exp@@Base+0x78>
   14964:	mov	w2, #0x1                   	// #1
   14968:	mov	x0, x19
   1496c:	mov	w1, w20
   14970:	bl	c3a0 <mpfr_overflow@plt>
   14974:	b	14bcc <mpfr_exp@@Base+0x5d4>
   14978:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1497c:	ldr	x1, [x0, #2800]
   14980:	add	x0, x0, #0xaf0
   14984:	blr	x1
   14988:	ldr	w8, [x27, x0]
   1498c:	mov	x23, x0
   14990:	str	w8, [sp, #20]
   14994:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14998:	ldr	x1, [x0, #2768]
   1499c:	add	x0, x0, #0xad0
   149a0:	blr	x1
   149a4:	ldr	x8, [x27, x0]
   149a8:	mov	x24, x0
   149ac:	str	x8, [sp, #8]
   149b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   149b4:	ldr	x1, [x0, #2736]
   149b8:	add	x0, x0, #0xab0
   149bc:	blr	x1
   149c0:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   149c4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   149c8:	mov	w10, #0x3f                  	// #63
   149cc:	sub	x11, x29, #0x8
   149d0:	mov	w12, #0x1                   	// #1
   149d4:	mov	x25, x0
   149d8:	str	x8, [x27, x0]
   149dc:	str	x9, [x27, x24]
   149e0:	str	x10, [sp, #24]
   149e4:	str	x11, [sp, #48]
   149e8:	str	w12, [sp, #32]
   149ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   149f0:	ldr	x1, [x0, #2592]
   149f4:	add	x0, x0, #0xa20
   149f8:	blr	x1
   149fc:	add	x26, x27, x0
   14a00:	mov	w8, #0x20                  	// #32
   14a04:	str	x8, [x26]
   14a08:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14a0c:	ldr	x1, [x0, #2608]
   14a10:	add	x0, x0, #0xa30
   14a14:	blr	x1
   14a18:	add	x8, x27, x0
   14a1c:	add	x0, sp, #0x18
   14a20:	mov	x1, x22
   14a24:	mov	x2, xzr
   14a28:	mov	w3, wzr
   14a2c:	str	x8, [x26, #24]
   14a30:	str	w12, [x26, #8]
   14a34:	bl	bed0 <mpfr_set_si_2exp@plt>
   14a38:	add	x0, sp, #0x18
   14a3c:	add	x1, sp, #0x18
   14a40:	mov	w2, #0x2                   	// #2
   14a44:	mov	w3, wzr
   14a48:	mov	w28, #0x2                   	// #2
   14a4c:	bl	ca00 <mpfr_sub_ui@plt>
   14a50:	cmp	x22, #0x0
   14a54:	cinc	w2, w28, ge  // ge = tcont
   14a58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14a5c:	ldr	x1, [x0, #2784]
   14a60:	add	x0, x0, #0xae0
   14a64:	blr	x1
   14a68:	add	x1, x27, x0
   14a6c:	mov	x0, x26
   14a70:	bl	c840 <mpfr_cache@plt>
   14a74:	add	x2, sp, #0x18
   14a78:	mov	w3, #0x3                   	// #3
   14a7c:	mov	x0, x26
   14a80:	mov	x1, x26
   14a84:	bl	c1b0 <mpfr_mul@plt>
   14a88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14a8c:	ldr	x1, [x0, #2640]
   14a90:	add	x0, x0, #0xa50
   14a94:	blr	x1
   14a98:	ldr	w8, [sp, #20]
   14a9c:	str	x22, [x27, x0]
   14aa0:	str	x22, [x27, x25]
   14aa4:	str	w8, [x27, x23]
   14aa8:	ldr	x8, [sp, #8]
   14aac:	str	x8, [x27, x24]
   14ab0:	b	146c4 <mpfr_exp@@Base+0xcc>
   14ab4:	cmp	w20, #0x0
   14ab8:	csinc	w1, w20, wzr, ne  // ne = any
   14abc:	mov	w2, #0x1                   	// #1
   14ac0:	mov	x0, x19
   14ac4:	bl	c880 <mpfr_underflow@plt>
   14ac8:	b	14bcc <mpfr_exp@@Base+0x5d4>
   14acc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14ad0:	ldr	x1, [x0, #2736]
   14ad4:	add	x0, x0, #0xab0
   14ad8:	blr	x1
   14adc:	ldr	x22, [x27, x0]
   14ae0:	mov	x8, x0
   14ae4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14ae8:	ldr	x1, [x0, #2768]
   14aec:	add	x0, x0, #0xad0
   14af0:	blr	x1
   14af4:	ldr	x23, [x27, x0]
   14af8:	ldr	w21, [x21, #8]
   14afc:	str	xzr, [x27, x8]
   14b00:	mov	w8, #0x2                   	// #2
   14b04:	str	x8, [x27, x0]
   14b08:	orr	w8, w20, #0x2
   14b0c:	mov	w9, #0x1                   	// #1
   14b10:	cmp	w8, #0x3
   14b14:	str	w9, [x19, #8]
   14b18:	b.ne	14b60 <mpfr_exp@@Base+0x568>  // b.any
   14b1c:	tbz	w21, #31, 14b60 <mpfr_exp@@Base+0x568>
   14b20:	mov	x0, x19
   14b24:	mov	x1, xzr
   14b28:	bl	c560 <mpfr_setmax@plt>
   14b2c:	mov	w8, #0xffffffff            	// #-1
   14b30:	b	14bd8 <mpfr_exp@@Base+0x5e0>
   14b34:	mov	x0, x19
   14b38:	mov	x1, x21
   14b3c:	mov	w2, w20
   14b40:	bl	c280 <mpfr_exp_3@plt>
   14b44:	mov	w8, w0
   14b48:	b	14790 <mpfr_exp@@Base+0x198>
   14b4c:	mov	x0, x19
   14b50:	mov	w1, w8
   14b54:	mov	w2, w20
   14b58:	bl	d020 <mpfr_check_range@plt>
   14b5c:	b	14bcc <mpfr_exp@@Base+0x5d4>
   14b60:	mov	w1, #0x1                   	// #1
   14b64:	mov	x0, x19
   14b68:	bl	c770 <mpfr_setmin@plt>
   14b6c:	cmp	w21, #0x1
   14b70:	b.lt	14bd4 <mpfr_exp@@Base+0x5dc>  // b.tstop
   14b74:	cmp	w20, #0x4
   14b78:	b.eq	14b84 <mpfr_exp@@Base+0x58c>  // b.none
   14b7c:	cmp	w20, #0x2
   14b80:	b.ne	14bd4 <mpfr_exp@@Base+0x5dc>  // b.any
   14b84:	mov	x0, x19
   14b88:	bl	c5c0 <mpfr_nextabove@plt>
   14b8c:	mov	w8, #0x1                   	// #1
   14b90:	b	14bd8 <mpfr_exp@@Base+0x5e0>
   14b94:	ldr	w9, [x21, #8]
   14b98:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   14b9c:	mov	w12, #0x1                   	// #1
   14ba0:	mov	w8, wzr
   14ba4:	cmp	w9, #0x0
   14ba8:	csel	x9, x10, x11, gt
   14bac:	str	x9, [x19, #16]
   14bb0:	str	w12, [x19, #8]
   14bb4:	b	147ec <mpfr_exp@@Base+0x1f4>
   14bb8:	mov	w1, #0x1                   	// #1
   14bbc:	mov	x0, x19
   14bc0:	mov	x2, xzr
   14bc4:	mov	w3, w20
   14bc8:	bl	cac0 <mpfr_set_ui_2exp@plt>
   14bcc:	mov	w8, w0
   14bd0:	b	147ec <mpfr_exp@@Base+0x1f4>
   14bd4:	neg	w8, w21
   14bd8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14bdc:	ldr	x1, [x0, #2736]
   14be0:	add	x0, x0, #0xab0
   14be4:	blr	x1
   14be8:	str	x22, [x27, x0]
   14bec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14bf0:	ldr	x1, [x0, #2768]
   14bf4:	add	x0, x0, #0xad0
   14bf8:	blr	x1
   14bfc:	str	x23, [x27, x0]
   14c00:	b	14790 <mpfr_exp@@Base+0x198>

0000000000014c04 <mpfr_frac@@Base>:
   14c04:	sub	sp, sp, #0x90
   14c08:	stp	x29, x30, [sp, #48]
   14c0c:	stp	x28, x27, [sp, #64]
   14c10:	stp	x26, x25, [sp, #80]
   14c14:	stp	x24, x23, [sp, #96]
   14c18:	stp	x22, x21, [sp, #112]
   14c1c:	stp	x20, x19, [sp, #128]
   14c20:	ldr	x8, [x1, #16]
   14c24:	mov	x9, #0x2                   	// #2
   14c28:	movk	x9, #0x8000, lsl #48
   14c2c:	mov	x20, x0
   14c30:	cmp	x8, x9
   14c34:	add	x29, sp, #0x30
   14c38:	b.eq	14f3c <mpfr_frac@@Base+0x338>  // b.none
   14c3c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   14c40:	mov	x21, x1
   14c44:	cmp	x8, x9
   14c48:	b.eq	14f24 <mpfr_frac@@Base+0x320>  // b.none
   14c4c:	mov	x0, x21
   14c50:	mov	w19, w2
   14c54:	bl	c600 <mpfr_integer_p@plt>
   14c58:	cbnz	w0, 14f24 <mpfr_frac@@Base+0x320>
   14c5c:	ldr	x8, [x21, #16]
   14c60:	cmp	x8, #0x0
   14c64:	b.le	14ccc <mpfr_frac@@Base+0xc8>
   14c68:	ldr	x9, [x21]
   14c6c:	add	x10, x8, #0x3f
   14c70:	ldr	x22, [x21, #24]
   14c74:	str	w19, [sp, #8]
   14c78:	sub	x11, x9, #0x1
   14c7c:	add	x9, x9, #0x3e
   14c80:	cmp	x11, #0x0
   14c84:	csel	x9, x9, x11, lt  // lt = tstop
   14c88:	cmp	x8, #0x0
   14c8c:	csel	x10, x10, x8, lt  // lt = tstop
   14c90:	asr	x9, x9, #6
   14c94:	asr	x11, x10, #6
   14c98:	sub	x23, x9, x11
   14c9c:	ldr	x9, [x22, x23, lsl #3]
   14ca0:	and	x10, x10, #0xffffffffffffffc0
   14ca4:	sub	x19, x8, x10
   14ca8:	lsl	x24, x9, x19
   14cac:	cbz	x24, 14ce8 <mpfr_frac@@Base+0xe4>
   14cb0:	clz	x27, x24
   14cb4:	add	w25, w27, w19
   14cb8:	cmp	w25, #0x40
   14cbc:	neg	x26, x27
   14cc0:	b.ge	14fb8 <mpfr_frac@@Base+0x3b4>  // b.tcont
   14cc4:	lsl	x28, x24, x27
   14cc8:	b	14d18 <mpfr_frac@@Base+0x114>
   14ccc:	ldr	w3, [x21, #8]
   14cd0:	mov	x0, x20
   14cd4:	mov	x1, x21
   14cd8:	mov	w2, w19
   14cdc:	bl	cb70 <mpfr_set4@plt>
   14ce0:	mov	w8, w0
   14ce4:	b	14f00 <mpfr_frac@@Base+0x2fc>
   14ce8:	add	x24, x22, x23, lsl #3
   14cec:	ldr	x8, [x24, #-8]!
   14cf0:	sub	x19, x19, #0x40
   14cf4:	sub	x23, x23, #0x1
   14cf8:	cbz	x8, 14cec <mpfr_frac@@Base+0xe8>
   14cfc:	add	x8, x23, #0x1
   14d00:	cmp	x8, #0x0
   14d04:	b.le	14fd4 <mpfr_frac@@Base+0x3d0>
   14d08:	ldr	x8, [x24]
   14d0c:	clz	x25, x8
   14d10:	sub	x26, x19, x25
   14d14:	lsl	x28, x8, x25
   14d18:	ldr	x8, [x20]
   14d1c:	mov	x24, x20
   14d20:	sub	x9, x8, #0x1
   14d24:	add	x8, x8, #0x3e
   14d28:	cmp	x9, #0x0
   14d2c:	csel	x8, x8, x9, lt  // lt = tstop
   14d30:	cmp	x23, x8, asr #6
   14d34:	b.le	14d4c <mpfr_frac@@Base+0x148>
   14d38:	lsl	x8, x23, #6
   14d3c:	add	x1, x8, #0x40
   14d40:	add	x0, sp, #0x10
   14d44:	add	x24, sp, #0x10
   14d48:	bl	cf60 <mpfr_init2@plt>
   14d4c:	ldr	x8, [x24]
   14d50:	ldr	w9, [x21, #8]
   14d54:	sub	x10, x8, #0x1
   14d58:	add	x8, x8, #0x3e
   14d5c:	cmp	x10, #0x0
   14d60:	csel	x8, x8, x10, lt  // lt = tstop
   14d64:	asr	x27, x8, #6
   14d68:	subs	x19, x27, x23
   14d6c:	str	w9, [x24, #8]
   14d70:	b.lt	14f68 <mpfr_frac@@Base+0x364>  // b.tstop
   14d74:	ldr	x21, [x24, #24]
   14d78:	cbz	w25, 14f88 <mpfr_frac@@Base+0x384>
   14d7c:	cbz	x23, 14d98 <mpfr_frac@@Base+0x194>
   14d80:	add	x0, x21, x19, lsl #3
   14d84:	mov	x1, x22
   14d88:	mov	x2, x23
   14d8c:	mov	w3, w25
   14d90:	bl	c120 <__gmpn_lshift@plt>
   14d94:	b	14d9c <mpfr_frac@@Base+0x198>
   14d98:	mov	x0, xzr
   14d9c:	orr	x8, x0, x28
   14da0:	str	x8, [x21, x27, lsl #3]
   14da4:	cmp	x19, #0x1
   14da8:	b.lt	14dbc <mpfr_frac@@Base+0x1b8>  // b.tstop
   14dac:	lsl	x2, x19, #3
   14db0:	mov	x0, x21
   14db4:	mov	w1, wzr
   14db8:	bl	c5b0 <memset@plt>
   14dbc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14dc0:	ldr	x1, [x0, #2800]
   14dc4:	add	x0, x0, #0xaf0
   14dc8:	blr	x1
   14dcc:	mrs	x22, tpidr_el0
   14dd0:	ldr	w23, [x22, x0]
   14dd4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14dd8:	ldr	x1, [x0, #2736]
   14ddc:	add	x0, x0, #0xab0
   14de0:	blr	x1
   14de4:	ldr	x25, [x22, x0]
   14de8:	mov	x8, x0
   14dec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14df0:	ldr	x1, [x0, #2768]
   14df4:	add	x0, x0, #0xad0
   14df8:	blr	x1
   14dfc:	ldr	x28, [x22, x0]
   14e00:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   14e04:	str	x9, [x22, x8]
   14e08:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   14e0c:	cmp	x24, x20
   14e10:	str	x8, [x22, x0]
   14e14:	b.eq	14e44 <mpfr_frac@@Base+0x240>  // b.none
   14e18:	ldr	w3, [x24, #8]
   14e1c:	ldr	w2, [sp, #8]
   14e20:	mov	x0, x20
   14e24:	mov	x1, x24
   14e28:	str	xzr, [x24, #16]
   14e2c:	bl	cb70 <mpfr_set4@plt>
   14e30:	str	w0, [sp, #12]
   14e34:	mov	x0, x24
   14e38:	bl	c4f0 <mpfr_clear@plt>
   14e3c:	add	x19, x20, #0x10
   14e40:	b	14e84 <mpfr_frac@@Base+0x280>
   14e44:	mov	x19, x20
   14e48:	str	x26, [x19, #16]!
   14e4c:	ldr	w8, [x20, #8]
   14e50:	ldr	x4, [x20]
   14e54:	ldr	w5, [sp, #8]
   14e58:	lsl	x9, x27, #6
   14e5c:	add	x2, x9, #0x40
   14e60:	lsr	w3, w8, #31
   14e64:	add	x6, sp, #0xc
   14e68:	mov	x0, x21
   14e6c:	mov	x1, x21
   14e70:	bl	cf10 <mpfr_round_raw@plt>
   14e74:	cbz	w0, 14e90 <mpfr_frac@@Base+0x28c>
   14e78:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   14e7c:	mov	w26, #0x1                   	// #1
   14e80:	str	x8, [x21, x27, lsl #3]
   14e84:	ldr	x8, [x19]
   14e88:	add	x8, x8, x26
   14e8c:	str	x8, [x19]
   14e90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14e94:	ldr	x1, [x0, #2800]
   14e98:	add	x0, x0, #0xaf0
   14e9c:	blr	x1
   14ea0:	str	w23, [x22, x0]
   14ea4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14ea8:	ldr	x1, [x0, #2736]
   14eac:	add	x0, x0, #0xab0
   14eb0:	blr	x1
   14eb4:	str	x25, [x22, x0]
   14eb8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14ebc:	ldr	x1, [x0, #2768]
   14ec0:	add	x0, x0, #0xad0
   14ec4:	blr	x1
   14ec8:	str	x28, [x22, x0]
   14ecc:	ldr	x9, [x20, #16]
   14ed0:	ldr	w8, [sp, #12]
   14ed4:	cmp	x9, x28
   14ed8:	b.gt	14fa4 <mpfr_frac@@Base+0x3a0>
   14edc:	cmp	x9, x25
   14ee0:	b.lt	14fa4 <mpfr_frac@@Base+0x3a0>  // b.tstop
   14ee4:	cbz	w8, 14f00 <mpfr_frac@@Base+0x2fc>
   14ee8:	orr	w9, w23, #0x8
   14eec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14ef0:	ldr	x1, [x0, #2800]
   14ef4:	add	x0, x0, #0xaf0
   14ef8:	blr	x1
   14efc:	str	w9, [x22, x0]
   14f00:	ldp	x20, x19, [sp, #128]
   14f04:	ldp	x22, x21, [sp, #112]
   14f08:	ldp	x24, x23, [sp, #96]
   14f0c:	ldp	x26, x25, [sp, #80]
   14f10:	ldp	x28, x27, [sp, #64]
   14f14:	ldp	x29, x30, [sp, #48]
   14f18:	mov	w0, w8
   14f1c:	add	sp, sp, #0x90
   14f20:	ret
   14f24:	ldr	w9, [x21, #8]
   14f28:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   14f2c:	mov	w8, wzr
   14f30:	str	x10, [x20, #16]
   14f34:	str	w9, [x20, #8]
   14f38:	b	14f00 <mpfr_frac@@Base+0x2fc>
   14f3c:	str	x9, [x20, #16]
   14f40:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   14f44:	ldr	x1, [x0, #2800]
   14f48:	add	x0, x0, #0xaf0
   14f4c:	blr	x1
   14f50:	mrs	x9, tpidr_el0
   14f54:	ldr	w10, [x9, x0]
   14f58:	mov	w8, wzr
   14f5c:	orr	w10, w10, #0x4
   14f60:	str	w10, [x9, x0]
   14f64:	b	14f00 <mpfr_frac@@Base+0x2fc>
   14f68:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   14f6c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   14f70:	add	x0, x0, #0x292
   14f74:	add	x2, x2, #0x2af
   14f78:	mov	w1, #0x6b                  	// #107
   14f7c:	bl	d030 <mpfr_assert_fail@plt>
   14f80:	ldr	x21, [x24, #24]
   14f84:	cbnz	w25, 14d7c <mpfr_frac@@Base+0x178>
   14f88:	add	x0, x21, x19, lsl #3
   14f8c:	add	x2, x23, #0x1
   14f90:	mov	x1, x22
   14f94:	bl	bf30 <__gmpn_copyd@plt>
   14f98:	cmp	x19, #0x1
   14f9c:	b.ge	14dac <mpfr_frac@@Base+0x1a8>  // b.tcont
   14fa0:	b	14dbc <mpfr_frac@@Base+0x1b8>
   14fa4:	ldr	w2, [sp, #8]
   14fa8:	mov	x0, x20
   14fac:	mov	w1, w8
   14fb0:	bl	d020 <mpfr_check_range@plt>
   14fb4:	b	14ce0 <mpfr_frac@@Base+0xdc>
   14fb8:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   14fbc:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   14fc0:	add	x0, x0, #0x292
   14fc4:	add	x2, x2, #0x299
   14fc8:	mov	w1, #0x50                  	// #80
   14fcc:	bl	d030 <mpfr_assert_fail@plt>
   14fd0:	b	14cc4 <mpfr_frac@@Base+0xc0>
   14fd4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   14fd8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   14fdc:	add	x0, x0, #0x292
   14fe0:	add	x2, x2, #0x2a7
   14fe4:	mov	w1, #0x59                  	// #89
   14fe8:	bl	d030 <mpfr_assert_fail@plt>
   14fec:	b	14d08 <mpfr_frac@@Base+0x104>

0000000000014ff0 <mpfr_frexp@@Base>:
   14ff0:	stp	x29, x30, [sp, #-80]!
   14ff4:	stp	x26, x25, [sp, #16]
   14ff8:	stp	x24, x23, [sp, #32]
   14ffc:	stp	x22, x21, [sp, #48]
   15000:	stp	x20, x19, [sp, #64]
   15004:	ldr	x8, [x2, #16]
   15008:	mov	x9, #0x2                   	// #2
   1500c:	movk	x9, #0x8000, lsl #48
   15010:	add	x10, x9, #0x2
   15014:	mov	x22, x2
   15018:	mov	x20, x1
   1501c:	cmp	x8, x10
   15020:	mov	x23, x0
   15024:	mov	x29, sp
   15028:	b.lt	150ec <mpfr_frexp@@Base+0xfc>  // b.tstop
   1502c:	mov	w21, w3
   15030:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   15034:	ldr	x1, [x0, #2800]
   15038:	add	x0, x0, #0xaf0
   1503c:	blr	x1
   15040:	mrs	x25, tpidr_el0
   15044:	ldr	w26, [x25, x0]
   15048:	str	wzr, [x25, x0]
   1504c:	ldr	w3, [x22, #8]
   15050:	mov	x24, x0
   15054:	mov	x0, x20
   15058:	mov	x1, x22
   1505c:	mov	w2, w21
   15060:	bl	cb70 <mpfr_set4@plt>
   15064:	ldr	w8, [x25, x24]
   15068:	mov	w19, w0
   1506c:	str	w26, [x25, x24]
   15070:	tbnz	w8, #1, 15120 <mpfr_frexp@@Base+0x130>
   15074:	ldr	x8, [x20, #16]
   15078:	str	x8, [x23]
   1507c:	str	xzr, [x20, #16]
   15080:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   15084:	ldr	x1, [x0, #2736]
   15088:	add	x0, x0, #0xab0
   1508c:	blr	x1
   15090:	ldr	x8, [x25, x0]
   15094:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   15098:	ldr	x1, [x0, #2768]
   1509c:	add	x0, x0, #0xad0
   150a0:	blr	x1
   150a4:	cmp	x8, #0x0
   150a8:	b.gt	15168 <mpfr_frexp@@Base+0x178>
   150ac:	ldr	x8, [x25, x0]
   150b0:	tbnz	x8, #63, 15168 <mpfr_frexp@@Base+0x178>
   150b4:	cbz	w19, 150d0 <mpfr_frexp@@Base+0xe0>
   150b8:	orr	w8, w26, #0x8
   150bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   150c0:	ldr	x1, [x0, #2800]
   150c4:	add	x0, x0, #0xaf0
   150c8:	blr	x1
   150cc:	str	w8, [x25, x0]
   150d0:	mov	w0, w19
   150d4:	ldp	x20, x19, [sp, #64]
   150d8:	ldp	x22, x21, [sp, #48]
   150dc:	ldp	x24, x23, [sp, #32]
   150e0:	ldp	x26, x25, [sp, #16]
   150e4:	ldp	x29, x30, [sp], #80
   150e8:	ret
   150ec:	cmp	x8, x9
   150f0:	b.ne	15180 <mpfr_frexp@@Base+0x190>  // b.any
   150f4:	str	x9, [x20, #16]
   150f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   150fc:	ldr	x1, [x0, #2800]
   15100:	add	x0, x0, #0xaf0
   15104:	blr	x1
   15108:	mrs	x8, tpidr_el0
   1510c:	ldr	w9, [x8, x0]
   15110:	mov	w19, wzr
   15114:	orr	w9, w9, #0x4
   15118:	str	w9, [x8, x0]
   1511c:	b	150d0 <mpfr_frexp@@Base+0xe0>
   15120:	ldr	x8, [x22, #16]
   15124:	mov	x2, #0xffffffffffffffff    	// #-1
   15128:	mov	x0, x20
   1512c:	mov	w3, w21
   15130:	add	x8, x8, #0x1
   15134:	str	x8, [x23]
   15138:	ldrsw	x1, [x22, #8]
   1513c:	bl	bed0 <mpfr_set_si_2exp@plt>
   15140:	cmp	w0, #0x0
   15144:	csel	w19, w19, w0, eq  // eq = none
   15148:	cbz	w19, 150d0 <mpfr_frexp@@Base+0xe0>
   1514c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   15150:	ldr	x1, [x0, #2800]
   15154:	add	x0, x0, #0xaf0
   15158:	blr	x1
   1515c:	ldr	w8, [x25, x0]
   15160:	orr	w8, w8, #0x8
   15164:	b	150cc <mpfr_frexp@@Base+0xdc>
   15168:	mov	x0, x20
   1516c:	mov	w1, w19
   15170:	mov	w2, w21
   15174:	bl	d020 <mpfr_check_range@plt>
   15178:	mov	w19, w0
   1517c:	b	150d0 <mpfr_frexp@@Base+0xe0>
   15180:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15184:	cmp	x8, x9
   15188:	b.ne	151a0 <mpfr_frexp@@Base+0x1b0>  // b.any
   1518c:	str	x9, [x20, #16]
   15190:	ldr	w8, [x22, #8]
   15194:	mov	w19, wzr
   15198:	str	w8, [x20, #8]
   1519c:	b	150d0 <mpfr_frexp@@Base+0xe0>
   151a0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   151a4:	str	x8, [x20, #16]
   151a8:	ldr	w8, [x22, #8]
   151ac:	mov	w19, wzr
   151b0:	str	w8, [x20, #8]
   151b4:	str	xzr, [x23]
   151b8:	b	150d0 <mpfr_frexp@@Base+0xe0>

00000000000151bc <mpfr_get_d@@Base>:
   151bc:	sub	sp, sp, #0x40
   151c0:	stp	x29, x30, [sp, #16]
   151c4:	stp	x22, x21, [sp, #32]
   151c8:	stp	x20, x19, [sp, #48]
   151cc:	ldr	x19, [x0, #16]
   151d0:	mov	x8, #0x2                   	// #2
   151d4:	movk	x8, #0x8000, lsl #48
   151d8:	add	x9, x8, #0x2
   151dc:	cmp	x19, x9
   151e0:	add	x29, sp, #0x10
   151e4:	b.lt	152bc <mpfr_get_d@@Base+0x100>  // b.tstop
   151e8:	ldr	w20, [x0, #8]
   151ec:	mov	w8, #0x2                   	// #2
   151f0:	cmp	w20, #0x0
   151f4:	cinc	w8, w8, lt  // lt = tstop
   151f8:	cmp	w1, #0x4
   151fc:	csel	w5, w8, w1, eq  // eq = none
   15200:	cmn	x19, #0x432
   15204:	b.le	152d0 <mpfr_get_d@@Base+0x114>
   15208:	cmp	x19, #0x401
   1520c:	b.ge	15304 <mpfr_get_d@@Base+0x148>  // b.tcont
   15210:	add	w8, w19, #0x432
   15214:	cmn	x19, #0x3fd
   15218:	mov	w9, #0x35                  	// #53
   1521c:	ldr	x1, [x0, #24]
   15220:	ldr	x2, [x0]
   15224:	csel	w22, w8, w9, lt  // lt = tstop
   15228:	sub	w8, w22, #0x1
   1522c:	lsr	w3, w20, #31
   15230:	add	w9, w22, #0x3e
   15234:	cmp	w8, #0x0
   15238:	sxtw	x4, w22
   1523c:	add	x0, sp, #0x8
   15240:	csel	w21, w9, w8, lt  // lt = tstop
   15244:	bl	cbf0 <mpfr_round_raw_4@plt>
   15248:	cbnz	w0, 15328 <mpfr_get_d@@Base+0x16c>
   1524c:	ldr	d0, [sp, #8]
   15250:	mov	x8, #0x3bf0000000000000    	// #4318952042648305664
   15254:	fmov	d2, x8
   15258:	cmp	w22, #0x41
   1525c:	ucvtf	d1, d0
   15260:	fmul	d0, d1, d2
   15264:	b.lt	15294 <mpfr_get_d@@Base+0xd8>  // b.tstop
   15268:	asr	w9, w21, #6
   1526c:	add	w9, w9, #0x1
   15270:	mov	w8, #0x1                   	// #1
   15274:	sxtw	x9, w9
   15278:	mov	x10, #0x3bf0000000000000    	// #4318952042648305664
   1527c:	fadd	d0, d0, d1
   15280:	add	x8, x8, #0x1
   15284:	fmov	d2, x10
   15288:	cmp	x8, x9
   1528c:	fmul	d0, d0, d2
   15290:	b.lt	1527c <mpfr_get_d@@Base+0xc0>  // b.tstop
   15294:	mov	w0, w19
   15298:	bl	d090 <mpfr_scale2@plt>
   1529c:	fneg	d1, d0
   152a0:	cmp	w20, #0x0
   152a4:	fcsel	d0, d1, d0, lt  // lt = tstop
   152a8:	ldp	x20, x19, [sp, #48]
   152ac:	ldp	x22, x21, [sp, #32]
   152b0:	ldp	x29, x30, [sp, #16]
   152b4:	add	sp, sp, #0x40
   152b8:	ret
   152bc:	cmp	x19, x8
   152c0:	b.ne	15330 <mpfr_get_d@@Base+0x174>  // b.any
   152c4:	mov	x8, #0x7ff8000000000000    	// #9221120237041090560
   152c8:	fmov	d0, x8
   152cc:	b	152a8 <mpfr_get_d@@Base+0xec>
   152d0:	tbnz	w20, #31, 15358 <mpfr_get_d@@Base+0x19c>
   152d4:	cmp	w5, #0x2
   152d8:	b.eq	153b0 <mpfr_get_d@@Base+0x1f4>  // b.none
   152dc:	cbnz	w5, 153b8 <mpfr_get_d@@Base+0x1fc>
   152e0:	mov	w1, #0x1                   	// #1
   152e4:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   152e8:	bl	c890 <mpfr_cmp_si_2exp@plt>
   152ec:	mov	x8, #0x10000000000000      	// #4503599627370496
   152f0:	cmp	w0, #0x0
   152f4:	fmov	d0, xzr
   152f8:	fmov	d1, x8
   152fc:	fcsel	d0, d1, d0, gt
   15300:	b	153c8 <mpfr_get_d@@Base+0x20c>
   15304:	tbnz	w20, #31, 1537c <mpfr_get_d@@Base+0x1c0>
   15308:	orr	w8, w5, #0x2
   1530c:	mov	x9, #0x7ff0000000000000    	// #9218868437227405312
   15310:	mov	x10, #0x7fefffffffffffff    	// #9218868437227405311
   15314:	cmp	w8, #0x3
   15318:	fmov	d0, x9
   1531c:	fmov	d1, x10
   15320:	fcsel	d0, d1, d0, eq  // eq = none
   15324:	b	152a8 <mpfr_get_d@@Base+0xec>
   15328:	fmov	d0, #1.000000000000000000e+00
   1532c:	b	15294 <mpfr_get_d@@Base+0xd8>
   15330:	ldr	w8, [x0, #8]
   15334:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15338:	cmp	x19, x9
   1533c:	b.ne	1539c <mpfr_get_d@@Base+0x1e0>  // b.any
   15340:	mov	x9, #0x7ff0000000000000    	// #9218868437227405312
   15344:	mov	x10, #0xfff0000000000000    	// #-4503599627370496
   15348:	cmp	w8, #0x0
   1534c:	fmov	d0, x9
   15350:	fmov	d1, x10
   15354:	b	152a4 <mpfr_get_d@@Base+0xe8>
   15358:	cmp	w5, #0x3
   1535c:	b.eq	153c0 <mpfr_get_d@@Base+0x204>  // b.none
   15360:	cbnz	w5, 15374 <mpfr_get_d@@Base+0x1b8>
   15364:	mov	x1, #0xffffffffffffffff    	// #-1
   15368:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   1536c:	bl	c890 <mpfr_cmp_si_2exp@plt>
   15370:	tbnz	w0, #31, 153c0 <mpfr_get_d@@Base+0x204>
   15374:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   15378:	b	153c4 <mpfr_get_d@@Base+0x208>
   1537c:	sub	w8, w5, #0x1
   15380:	mov	x9, #0xfff0000000000000    	// #-4503599627370496
   15384:	mov	x10, #0xffefffffffffffff    	// #-4503599627370497
   15388:	cmp	w8, #0x2
   1538c:	fmov	d0, x9
   15390:	fmov	d1, x10
   15394:	fcsel	d0, d1, d0, cc  // cc = lo, ul, last
   15398:	b	152a8 <mpfr_get_d@@Base+0xec>
   1539c:	cmp	w8, #0x0
   153a0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   153a4:	fmov	d0, xzr
   153a8:	fmov	d1, x8
   153ac:	b	152a4 <mpfr_get_d@@Base+0xe8>
   153b0:	mov	x8, #0x10000000000000      	// #4503599627370496
   153b4:	b	153c4 <mpfr_get_d@@Base+0x208>
   153b8:	fmov	d0, xzr
   153bc:	b	153c8 <mpfr_get_d@@Base+0x20c>
   153c0:	mov	x8, #0x8010000000000000    	// #-9218868437227405312
   153c4:	fmov	d0, x8
   153c8:	fcmp	d0, #0.0
   153cc:	b.eq	152a8 <mpfr_get_d@@Base+0xec>  // b.none
   153d0:	mov	x8, #0x3cb0000000000000    	// #4372995238176751616
   153d4:	fmov	d1, x8
   153d8:	fmul	d0, d0, d1
   153dc:	b	152a8 <mpfr_get_d@@Base+0xec>

00000000000153e0 <mpfr_get_d1@@Base>:
   153e0:	stp	x29, x30, [sp, #-16]!
   153e4:	mov	x29, sp
   153e8:	mov	x8, x0
   153ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   153f0:	ldr	x1, [x0, #2864]
   153f4:	add	x0, x0, #0xb30
   153f8:	blr	x1
   153fc:	mrs	x9, tpidr_el0
   15400:	ldr	w1, [x9, x0]
   15404:	mov	x0, x8
   15408:	bl	c190 <mpfr_get_d@plt>
   1540c:	ldp	x29, x30, [sp], #16
   15410:	ret

0000000000015414 <mpfr_get_d_2exp@@Base>:
   15414:	sub	sp, sp, #0x50
   15418:	stp	x29, x30, [sp, #32]
   1541c:	stp	x20, x19, [sp, #64]
   15420:	ldr	x8, [x1, #16]
   15424:	str	x21, [sp, #48]
   15428:	mov	x21, #0x4                   	// #4
   1542c:	movk	x21, #0x8000, lsl #48
   15430:	mov	x20, x1
   15434:	cmp	x8, x21
   15438:	mov	x19, x0
   1543c:	add	x29, sp, #0x20
   15440:	b.lt	15504 <mpfr_get_d_2exp@@Base+0xf0>  // b.tstop
   15444:	ldr	x8, [x20]
   15448:	mov	x0, sp
   1544c:	mov	w1, w2
   15450:	str	x8, [sp]
   15454:	ldr	w8, [x20, #8]
   15458:	str	w8, [sp, #8]
   1545c:	ldr	x8, [x20, #24]
   15460:	stp	xzr, x8, [sp, #16]
   15464:	bl	c190 <mpfr_get_d@plt>
   15468:	ldr	x8, [x20, #16]
   1546c:	cmp	x8, x21
   15470:	b.ge	1547c <mpfr_get_d_2exp@@Base+0x68>  // b.tcont
   15474:	mov	x20, xzr
   15478:	b	154ec <mpfr_get_d_2exp@@Base+0xd8>
   1547c:	fmov	d1, #1.000000000000000000e+00
   15480:	fcmp	d0, d1
   15484:	fmov	d2, #5.000000000000000000e-01
   15488:	b.ne	154a0 <mpfr_get_d_2exp@@Base+0x8c>  // b.any
   1548c:	add	x20, x8, #0x1
   15490:	mov	v0.16b, v2.16b
   15494:	fcmp	d0, d2
   15498:	b.ge	154cc <mpfr_get_d_2exp@@Base+0xb8>  // b.tcont
   1549c:	b	154d4 <mpfr_get_d_2exp@@Base+0xc0>
   154a0:	fmov	d3, #-1.000000000000000000e+00
   154a4:	fcmp	d0, d3
   154a8:	b.ne	154c0 <mpfr_get_d_2exp@@Base+0xac>  // b.any
   154ac:	add	x20, x8, #0x1
   154b0:	fmov	d0, #-5.000000000000000000e-01
   154b4:	fcmp	d0, d2
   154b8:	b.ge	154cc <mpfr_get_d_2exp@@Base+0xb8>  // b.tcont
   154bc:	b	154d4 <mpfr_get_d_2exp@@Base+0xc0>
   154c0:	mov	x20, x8
   154c4:	fcmp	d0, d2
   154c8:	b.lt	154d4 <mpfr_get_d_2exp@@Base+0xc0>  // b.tstop
   154cc:	fcmp	d0, d1
   154d0:	b.mi	154ec <mpfr_get_d_2exp@@Base+0xd8>  // b.first
   154d4:	fmov	d1, #-5.000000000000000000e-01
   154d8:	fcmp	d0, d1
   154dc:	b.hi	15550 <mpfr_get_d_2exp@@Base+0x13c>  // b.pmore
   154e0:	fmov	d1, #-1.000000000000000000e+00
   154e4:	fcmp	d0, d1
   154e8:	b.le	15550 <mpfr_get_d_2exp@@Base+0x13c>
   154ec:	str	x20, [x19]
   154f0:	ldp	x20, x19, [sp, #64]
   154f4:	ldr	x21, [sp, #48]
   154f8:	ldp	x29, x30, [sp, #32]
   154fc:	add	sp, sp, #0x50
   15500:	ret
   15504:	str	xzr, [x19]
   15508:	ldr	x9, [x20, #16]
   1550c:	sub	x8, x21, #0x2
   15510:	cmp	x9, x8
   15514:	b.ne	15524 <mpfr_get_d_2exp@@Base+0x110>  // b.any
   15518:	mov	x8, #0x7ff8000000000000    	// #9221120237041090560
   1551c:	fmov	d0, x8
   15520:	b	154f0 <mpfr_get_d_2exp@@Base+0xdc>
   15524:	ldr	w8, [x20, #8]
   15528:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1552c:	cmp	x9, x10
   15530:	b.ne	15574 <mpfr_get_d_2exp@@Base+0x160>  // b.any
   15534:	mov	x9, #0x7ff0000000000000    	// #9218868437227405312
   15538:	mov	x10, #0xfff0000000000000    	// #-4503599627370496
   1553c:	cmp	w8, #0x0
   15540:	fmov	d0, x9
   15544:	fmov	d1, x10
   15548:	fcsel	d0, d1, d0, lt  // lt = tstop
   1554c:	b	154f0 <mpfr_get_d_2exp@@Base+0xdc>
   15550:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   15554:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   15558:	add	x0, x0, #0x2b8
   1555c:	add	x2, x2, #0x2c0
   15560:	mov	w1, #0xae                  	// #174
   15564:	str	d0, [x29, #24]
   15568:	bl	d030 <mpfr_assert_fail@plt>
   1556c:	ldr	d0, [x29, #24]
   15570:	b	154ec <mpfr_get_d_2exp@@Base+0xd8>
   15574:	cmp	w8, #0x0
   15578:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   1557c:	fmov	d0, xzr
   15580:	fmov	d1, x8
   15584:	fcsel	d0, d1, d0, lt  // lt = tstop
   15588:	b	154f0 <mpfr_get_d_2exp@@Base+0xdc>

000000000001558c <mpfr_get_exp@@Base>:
   1558c:	stp	x29, x30, [sp, #-32]!
   15590:	ldr	x8, [x0, #16]
   15594:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15598:	str	x19, [sp, #16]
   1559c:	mov	x19, x0
   155a0:	cmp	x8, x9
   155a4:	mov	x29, sp
   155a8:	b.le	155bc <mpfr_get_exp@@Base+0x30>
   155ac:	ldr	x0, [x19, #16]
   155b0:	ldr	x19, [sp, #16]
   155b4:	ldp	x29, x30, [sp], #32
   155b8:	ret
   155bc:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   155c0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   155c4:	add	x0, x0, #0x2f9
   155c8:	add	x2, x2, #0x303
   155cc:	mov	w1, #0x1d                  	// #29
   155d0:	bl	d030 <mpfr_assert_fail@plt>
   155d4:	b	155ac <mpfr_get_exp@@Base+0x20>

00000000000155d8 <mpfr_ceil_mul@@Base>:
   155d8:	sub	sp, sp, #0x40
   155dc:	stp	x29, x30, [sp, #32]
   155e0:	str	x19, [sp, #48]
   155e4:	adrp	x11, 72000 <__gmpfr_l2b@@Base+0x2f0>
   155e8:	ldr	x11, [x11, #4016]
   155ec:	sxtw	x9, w1
   155f0:	add	x29, sp, #0x20
   155f4:	mov	x8, x0
   155f8:	sxtw	x10, w2
   155fc:	add	x9, x11, x9, lsl #6
   15600:	mov	w12, #0x3f                  	// #63
   15604:	add	x13, x29, #0x18
   15608:	mov	w14, #0x1                   	// #1
   1560c:	add	x9, x9, x10, lsl #5
   15610:	mov	x0, sp
   15614:	mov	w3, #0x2                   	// #2
   15618:	mov	x1, x8
   1561c:	mov	x2, xzr
   15620:	str	x12, [sp]
   15624:	str	x13, [sp, #24]
   15628:	sub	x19, x9, #0x80
   1562c:	str	w14, [sp, #8]
   15630:	bl	bed0 <mpfr_set_si_2exp@plt>
   15634:	mov	x0, sp
   15638:	mov	x1, sp
   1563c:	mov	w3, #0x2                   	// #2
   15640:	mov	x2, x19
   15644:	bl	c1b0 <mpfr_mul@plt>
   15648:	mov	x0, sp
   1564c:	mov	w1, #0x2                   	// #2
   15650:	bl	c630 <mpfr_get_si@plt>
   15654:	ldr	x19, [sp, #48]
   15658:	ldp	x29, x30, [sp, #32]
   1565c:	add	sp, sp, #0x40
   15660:	ret

0000000000015664 <mpfr_get_str@@Base>:
   15664:	stp	x29, x30, [sp, #-96]!
   15668:	stp	x28, x27, [sp, #16]
   1566c:	stp	x26, x25, [sp, #32]
   15670:	stp	x24, x23, [sp, #48]
   15674:	stp	x22, x21, [sp, #64]
   15678:	stp	x20, x19, [sp, #80]
   1567c:	mov	x29, sp
   15680:	sub	sp, sp, #0xa0
   15684:	cmn	w2, #0x24
   15688:	b.ge	15694 <mpfr_get_str@@Base+0x30>  // b.tcont
   1568c:	mov	x0, xzr
   15690:	b	160dc <mpfr_get_str@@Base+0xa78>
   15694:	mov	w23, w2
   15698:	mov	x12, x0
   1569c:	cmp	w2, #0x3e
   156a0:	mov	x0, xzr
   156a4:	b.gt	160dc <mpfr_get_str@@Base+0xa78>
   156a8:	add	w8, w23, #0x1
   156ac:	cmp	w8, #0x3
   156b0:	b.cc	160dc <mpfr_get_str@@Base+0xa78>  // b.lo, b.ul, b.last
   156b4:	sub	w9, w23, #0x2
   156b8:	adrp	x10, 5b000 <mpfr_free_pool@@Base+0x3854>
   156bc:	adrp	x11, 5b000 <mpfr_free_pool@@Base+0x3854>
   156c0:	ldr	x8, [x4, #16]
   156c4:	mov	x13, #0xfffffffffffffeff    	// #-257
   156c8:	add	x10, x10, #0x935
   156cc:	add	x11, x11, #0x910
   156d0:	cmp	w9, #0x23
   156d4:	movk	x13, #0x7fff, lsl #48
   156d8:	csel	x26, x11, x10, cc  // cc = lo, ul, last
   156dc:	cmp	w23, #0x0
   156e0:	add	x9, x13, #0x103
   156e4:	cneg	w10, w23, mi  // mi = first
   156e8:	cmp	w5, #0x5
   156ec:	mov	x27, x4
   156f0:	csel	w19, wzr, w5, eq  // eq = none
   156f4:	cmp	x8, x9
   156f8:	b.eq	160fc <mpfr_get_str@@Base+0xa98>  // b.none
   156fc:	ldr	w20, [x27, #8]
   15700:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15704:	cmp	x8, x9
   15708:	stur	w10, [x29, #-84]
   1570c:	lsr	x21, x20, #31
   15710:	b.eq	16148 <mpfr_get_str@@Base+0xae4>  // b.none
   15714:	mov	x24, x3
   15718:	mov	x28, x1
   1571c:	mov	x22, x12
   15720:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   15724:	ldr	x1, [x0, #2800]
   15728:	add	x0, x0, #0xaf0
   1572c:	blr	x1
   15730:	mrs	x10, tpidr_el0
   15734:	ldr	w8, [x10, x0]
   15738:	stur	w8, [x29, #-140]
   1573c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   15740:	ldr	x1, [x0, #2736]
   15744:	add	x0, x0, #0xab0
   15748:	blr	x1
   1574c:	ldr	x9, [x10, x0]
   15750:	mov	x8, x0
   15754:	stur	x9, [x29, #-136]
   15758:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1575c:	ldr	x1, [x0, #2768]
   15760:	add	x0, x0, #0xad0
   15764:	blr	x1
   15768:	ldr	x9, [x10, x0]
   1576c:	stp	x9, x10, [x29, #-128]
   15770:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   15774:	str	x9, [x10, x8]
   15778:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   1577c:	str	x8, [x10, x0]
   15780:	cbz	x3, 158dc <mpfr_get_str@@Base+0x278>
   15784:	mov	x13, x22
   15788:	cbz	x22, 15908 <mpfr_get_str@@Base+0x2a4>
   1578c:	stur	x13, [x29, #-56]
   15790:	tbnz	w20, #31, 15920 <mpfr_get_str@@Base+0x2bc>
   15794:	ldr	x8, [x27, #16]
   15798:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1579c:	cmp	x8, x9
   157a0:	b.ne	15818 <mpfr_get_str@@Base+0x1b4>  // b.any
   157a4:	ldur	x20, [x29, #-56]
   157a8:	mov	w1, #0x30                  	// #48
   157ac:	mov	x2, x24
   157b0:	mov	x19, x13
   157b4:	mov	x0, x20
   157b8:	bl	c5b0 <memset@plt>
   157bc:	strb	wzr, [x20, x24]
   157c0:	str	xzr, [x28]
   157c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   157c8:	ldr	x1, [x0, #2800]
   157cc:	add	x0, x0, #0xaf0
   157d0:	blr	x1
   157d4:	ldur	x8, [x29, #-120]
   157d8:	ldur	w9, [x29, #-140]
   157dc:	str	w9, [x8, x0]
   157e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   157e4:	ldr	x1, [x0, #2736]
   157e8:	add	x0, x0, #0xab0
   157ec:	blr	x1
   157f0:	ldur	x9, [x29, #-136]
   157f4:	str	x9, [x8, x0]
   157f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   157fc:	ldr	x1, [x0, #2768]
   15800:	add	x0, x0, #0xad0
   15804:	blr	x1
   15808:	ldur	x9, [x29, #-128]
   1580c:	str	x9, [x8, x0]
   15810:	mov	x0, x19
   15814:	b	160dc <mpfr_get_str@@Base+0xa78>
   15818:	ldr	x9, [x27, #24]
   1581c:	ldur	w21, [x29, #-84]
   15820:	stur	x28, [x29, #-112]
   15824:	stur	x24, [x29, #-64]
   15828:	stp	x27, x9, [x29, #-48]
   1582c:	sub	w9, w21, #0x1
   15830:	tst	w21, w9
   15834:	stur	x13, [x29, #-152]
   15838:	b.ne	15934 <mpfr_get_str@@Base+0x2d0>  // b.any
   1583c:	mov	w9, w21
   15840:	mov	w10, #0x3f                  	// #63
   15844:	clz	x9, x9
   15848:	sub	w9, w10, w9
   1584c:	sub	x11, x8, #0x1
   15850:	sxtw	x21, w9
   15854:	sdiv	x25, x11, x21
   15858:	msub	x8, x25, x21, x8
   1585c:	cmp	x8, #0x1
   15860:	csel	x9, x21, xzr, lt  // lt = tstop
   15864:	sub	x12, x24, #0x1
   15868:	add	x28, x9, x8
   1586c:	madd	x24, x12, x21, x28
   15870:	sub	x8, x24, #0x1
   15874:	cset	w27, lt  // lt = tstop
   15878:	add	x9, x24, #0x3e
   1587c:	cmp	x8, #0x0
   15880:	csel	x8, x9, x8, lt  // lt = tstop
   15884:	asr	x8, x8, #6
   15888:	add	x23, x8, #0x2
   1588c:	lsl	x1, x23, #3
   15890:	add	x20, x8, #0x1
   15894:	cmp	x1, #0x4, lsl #12
   15898:	stur	xzr, [x29, #-16]
   1589c:	b.hi	16184 <mpfr_get_str@@Base+0xb20>  // b.pmore
   158a0:	add	x9, x1, #0xf
   158a4:	mov	x8, sp
   158a8:	and	x9, x9, #0xfffffffffffffff0
   158ac:	sub	x22, x8, x9
   158b0:	mov	sp, x22
   158b4:	ldur	x10, [x29, #-48]
   158b8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   158bc:	sub	x27, x25, x27
   158c0:	ldr	x8, [x10, #16]
   158c4:	ldr	x2, [x10]
   158c8:	cmp	x8, x9
   158cc:	lsl	x8, x20, #6
   158d0:	b.ne	15f78 <mpfr_get_str@@Base+0x914>  // b.any
   158d4:	mov	w3, wzr
   158d8:	b	15f80 <mpfr_get_str@@Base+0x91c>
   158dc:	ldur	w1, [x29, #-84]
   158e0:	ldr	x8, [x27]
   158e4:	mov	w2, #0x1                   	// #1
   158e8:	sub	w9, w1, #0x1
   158ec:	tst	w1, w9
   158f0:	cset	w9, eq  // eq = none
   158f4:	sub	x0, x8, x9
   158f8:	bl	d070 <mpfr_ceil_mul@plt>
   158fc:	add	x24, x0, #0x1
   15900:	mov	x13, x22
   15904:	cbnz	x22, 1578c <mpfr_get_str@@Base+0x128>
   15908:	add	w8, w21, #0x1
   1590c:	add	x0, x24, x8
   15910:	bl	d1f0 <mpfr_allocate_func@plt>
   15914:	mov	x13, x0
   15918:	stur	x13, [x29, #-56]
   1591c:	tbz	w20, #31, 15794 <mpfr_get_str@@Base+0x130>
   15920:	mov	w8, #0x2d                  	// #45
   15924:	mov	x9, x13
   15928:	strb	w8, [x9], #1
   1592c:	stur	x9, [x29, #-56]
   15930:	b	15794 <mpfr_get_str@@Base+0x130>
   15934:	cmp	w19, #0x3
   15938:	mov	w9, #0x2                   	// #2
   1593c:	mov	w10, #0x3                   	// #3
   15940:	csel	w9, w9, w19, eq  // eq = none
   15944:	cmp	w19, #0x2
   15948:	csel	w9, w10, w9, eq  // eq = none
   1594c:	cmp	w20, #0x0
   15950:	csel	w9, w9, w19, lt  // lt = tstop
   15954:	sub	x0, x8, #0x1
   15958:	mov	w2, #0x1                   	// #1
   1595c:	mov	w1, w21
   15960:	stur	w9, [x29, #-80]
   15964:	bl	d070 <mpfr_ceil_mul@plt>
   15968:	mov	x25, x0
   1596c:	mov	x0, x24
   15970:	mov	w1, w21
   15974:	mov	w2, wzr
   15978:	bl	d070 <mpfr_ceil_mul@plt>
   1597c:	sub	x8, x25, x24
   15980:	subs	x9, x24, x25
   15984:	add	x20, x0, #0x1
   15988:	csel	x3, x8, x9, lt  // lt = tstop
   1598c:	cbz	x0, 16194 <mpfr_get_str@@Base+0xb30>
   15990:	mov	x19, x0
   15994:	cmp	x0, #0x0
   15998:	b.le	161a4 <mpfr_get_str@@Base+0xb40>
   1599c:	clz	x8, x19
   159a0:	mov	w9, #0x40                  	// #64
   159a4:	sub	x8, x9, x8
   159a8:	add	x21, x20, x8
   159ac:	cbz	x3, 159d0 <mpfr_get_str@@Base+0x36c>
   159b0:	subs	x19, x3, #0x1
   159b4:	b.eq	161d0 <mpfr_get_str@@Base+0xb6c>  // b.none
   159b8:	b.le	161d8 <mpfr_get_str@@Base+0xb74>
   159bc:	clz	x8, x19
   159c0:	mov	w9, #0x40                  	// #64
   159c4:	sub	x8, x9, x8
   159c8:	add	x8, x8, x8, lsl #1
   159cc:	add	x21, x8, x21
   159d0:	mov	w8, #0x40                  	// #64
   159d4:	stur	x8, [x29, #-160]
   159d8:	stur	w23, [x29, #-76]
   159dc:	stur	x21, [x29, #-72]
   159e0:	sub	x8, x21, #0x1
   159e4:	add	x9, x21, #0x3e
   159e8:	cmp	x8, #0x0
   159ec:	csel	x8, x9, x8, lt  // lt = tstop
   159f0:	asr	x26, x8, #6
   159f4:	add	x19, x26, #0x1
   159f8:	lsl	x20, x19, #3
   159fc:	cmp	x20, #0x4, lsl #12
   15a00:	stur	xzr, [x29, #-16]
   15a04:	b.hi	15ea0 <mpfr_get_str@@Base+0x83c>  // b.pmore
   15a08:	add	x9, x20, #0xf
   15a0c:	mov	x8, sp
   15a10:	and	x9, x9, #0xfffffffffffffff0
   15a14:	sub	x22, x8, x9
   15a18:	mov	sp, x22
   15a1c:	ldr	x8, [x27]
   15a20:	stp	x3, x25, [x29, #-32]
   15a24:	sub	x9, x8, #0x1
   15a28:	add	x8, x8, #0x3e
   15a2c:	cmp	x9, #0x0
   15a30:	csel	x8, x8, x9, lt  // lt = tstop
   15a34:	asr	x27, x8, #6
   15a38:	cmp	x24, x25
   15a3c:	add	x21, x27, #0x1
   15a40:	b.ne	15a64 <mpfr_get_str@@Base+0x400>  // b.any
   15a44:	subs	x23, x21, x19
   15a48:	b.ls	15b9c <mpfr_get_str@@Base+0x538>  // b.plast
   15a4c:	ldur	x0, [x29, #-40]
   15a50:	mov	x1, xzr
   15a54:	bl	cf80 <__gmpn_scan1@plt>
   15a58:	cmp	x0, x23, lsl #6
   15a5c:	cset	w24, cs  // cs = hs, nlast
   15a60:	b	15ba0 <mpfr_get_str@@Base+0x53c>
   15a64:	ldur	w2, [x29, #-84]
   15a68:	sub	x1, x29, #0x8
   15a6c:	mov	x0, x22
   15a70:	mov	x4, x19
   15a74:	bl	d0d0 <mpfr_mpn_exp@plt>
   15a78:	cmn	x0, #0x1
   15a7c:	mov	x23, x0
   15a80:	cset	w8, eq  // eq = none
   15a84:	cmp	x24, x25
   15a88:	b.le	15bec <mpfr_get_str@@Base+0x588>
   15a8c:	ldur	x11, [x29, #-40]
   15a90:	cmn	x23, #0x1
   15a94:	mvn	x9, x26
   15a98:	cset	w10, eq  // eq = none
   15a9c:	add	x8, x11, x21, lsl #3
   15aa0:	add	x8, x8, x9, lsl #3
   15aa4:	subs	x25, x21, x19
   15aa8:	csel	x24, x8, x11, cs  // cs = hs, nlast
   15aac:	cset	w8, ls  // ls = plast
   15ab0:	csel	x21, x19, x21, cs  // cs = hs, nlast
   15ab4:	and	w27, w8, w10
   15ab8:	b.ls	15ad8 <mpfr_get_str@@Base+0x474>  // b.plast
   15abc:	cmn	x23, #0x1
   15ac0:	b.ne	15ad8 <mpfr_get_str@@Base+0x474>  // b.any
   15ac4:	ldur	x0, [x29, #-40]
   15ac8:	mov	x1, xzr
   15acc:	bl	cf80 <__gmpn_scan1@plt>
   15ad0:	cmp	x0, x25, lsl #6
   15ad4:	cset	w27, cs  // cs = hs, nlast
   15ad8:	add	x8, x21, x19
   15adc:	cmp	x23, #0x1
   15ae0:	mov	w9, #0x2                   	// #2
   15ae4:	lsl	x1, x8, #3
   15ae8:	csinc	x25, x9, x23, lt  // lt = tstop
   15aec:	cmp	x1, #0x4, lsl #12
   15af0:	b.hi	15ec8 <mpfr_get_str@@Base+0x864>  // b.pmore
   15af4:	add	x9, x1, #0xf
   15af8:	mov	x8, sp
   15afc:	and	x9, x9, #0xfffffffffffffff0
   15b00:	sub	x23, x8, x9
   15b04:	mov	sp, x23
   15b08:	mov	x0, x23
   15b0c:	mov	x1, x22
   15b10:	mov	x2, x19
   15b14:	mov	x3, x24
   15b18:	mov	x4, x21
   15b1c:	bl	cc80 <__gmpn_mul@plt>
   15b20:	ldur	x8, [x29, #-48]
   15b24:	ldur	x9, [x29, #-8]
   15b28:	mov	x0, x23
   15b2c:	mov	x1, xzr
   15b30:	ldr	x8, [x8, #16]
   15b34:	add	x8, x9, x8
   15b38:	stur	x8, [x29, #-8]
   15b3c:	bl	cf80 <__gmpn_scan1@plt>
   15b40:	add	x8, x21, x26
   15b44:	ldr	x8, [x23, x8, lsl #3]
   15b48:	cmp	x0, x21, lsl #6
   15b4c:	cset	w9, cs  // cs = hs, nlast
   15b50:	and	w24, w27, w9
   15b54:	add	x21, x23, x21, lsl #3
   15b58:	tbnz	x8, #63, 15e18 <mpfr_get_str@@Base+0x7b4>
   15b5c:	mov	w3, #0x1                   	// #1
   15b60:	mov	x0, x22
   15b64:	mov	x1, x21
   15b68:	mov	x2, x19
   15b6c:	bl	c120 <__gmpn_lshift@plt>
   15b70:	ldur	x8, [x21, #-8]
   15b74:	ldr	x9, [x22]
   15b78:	ldur	x27, [x29, #-48]
   15b7c:	ldur	w23, [x29, #-76]
   15b80:	ldur	x21, [x29, #-72]
   15b84:	orr	x8, x9, x8, lsr #63
   15b88:	str	x8, [x22]
   15b8c:	ldur	x8, [x29, #-8]
   15b90:	sub	x8, x8, #0x1
   15b94:	stur	x8, [x29, #-8]
   15b98:	b	15e3c <mpfr_get_str@@Base+0x7d8>
   15b9c:	mov	w24, #0x1                   	// #1
   15ba0:	ldur	w23, [x29, #-76]
   15ba4:	cmp	x21, x19
   15ba8:	eor	w25, w24, #0x1
   15bac:	b.cs	15c84 <mpfr_get_str@@Base+0x620>  // b.hs, b.nlast
   15bb0:	ldur	x1, [x29, #-40]
   15bb4:	add	x8, x22, x19, lsl #3
   15bb8:	mvn	x9, x27
   15bbc:	add	x0, x8, x9, lsl #3
   15bc0:	cmp	x0, x1
   15bc4:	b.eq	15bd0 <mpfr_get_str@@Base+0x56c>  // b.none
   15bc8:	lsl	x2, x21, #3
   15bcc:	bl	be50 <memcpy@plt>
   15bd0:	sub	x8, x19, x21
   15bd4:	lsl	x2, x8, #3
   15bd8:	mov	x0, x22
   15bdc:	mov	w1, wzr
   15be0:	bl	c5b0 <memset@plt>
   15be4:	ldur	x27, [x29, #-48]
   15be8:	b	15ca8 <mpfr_get_str@@Base+0x644>
   15bec:	lsl	x2, x19, #4
   15bf0:	cmp	x2, #0x4, lsl #12
   15bf4:	stur	w8, [x29, #-88]
   15bf8:	b.hi	15ed8 <mpfr_get_str@@Base+0x874>  // b.pmore
   15bfc:	add	x9, x2, #0xf
   15c00:	mov	x8, sp
   15c04:	and	x9, x9, #0xfffffffffffffff0
   15c08:	sub	x25, x8, x9
   15c0c:	mov	sp, x25
   15c10:	lsl	x8, x26, #3
   15c14:	add	x1, x8, #0x10
   15c18:	cmp	x1, #0x4, lsl #12
   15c1c:	stur	x8, [x29, #-104]
   15c20:	b.hi	15ef4 <mpfr_get_str@@Base+0x890>  // b.pmore
   15c24:	add	x9, x1, #0xf
   15c28:	mov	x8, sp
   15c2c:	and	x9, x9, #0xfffffffffffffff0
   15c30:	sub	x26, x8, x9
   15c34:	mov	sp, x26
   15c38:	cmp	x20, #0x4, lsl #12
   15c3c:	lsl	x24, x19, #1
   15c40:	b.hi	15cbc <mpfr_get_str@@Base+0x658>  // b.pmore
   15c44:	add	x9, x20, #0xf
   15c48:	mov	x8, sp
   15c4c:	and	x9, x9, #0xfffffffffffffff0
   15c50:	sub	x8, x8, x9
   15c54:	stur	x8, [x29, #-96]
   15c58:	mov	sp, x8
   15c5c:	subs	x28, x24, x21
   15c60:	b.hi	15cdc <mpfr_get_str@@Base+0x678>  // b.pmore
   15c64:	ldp	x27, x8, [x29, #-48]
   15c68:	add	x8, x8, x21, lsl #3
   15c6c:	sub	x1, x8, x24, lsl #3
   15c70:	cmp	x1, x25
   15c74:	b.eq	15d10 <mpfr_get_str@@Base+0x6ac>  // b.none
   15c78:	mov	x0, x25
   15c7c:	bl	be50 <memcpy@plt>
   15c80:	b	15d10 <mpfr_get_str@@Base+0x6ac>
   15c84:	ldp	x27, x8, [x29, #-48]
   15c88:	mvn	x9, x26
   15c8c:	add	x8, x8, x21, lsl #3
   15c90:	add	x1, x8, x9, lsl #3
   15c94:	cmp	x1, x22
   15c98:	b.eq	15ca8 <mpfr_get_str@@Base+0x644>  // b.none
   15c9c:	mov	x0, x22
   15ca0:	mov	x2, x20
   15ca4:	bl	be50 <memcpy@plt>
   15ca8:	ldr	x8, [x27, #16]
   15cac:	ldur	x21, [x29, #-72]
   15cb0:	sub	x8, x8, x19, lsl #6
   15cb4:	stur	x8, [x29, #-8]
   15cb8:	b	15e3c <mpfr_get_str@@Base+0x7d8>
   15cbc:	sub	x0, x29, #0x10
   15cc0:	mov	x1, x20
   15cc4:	mov	x28, x2
   15cc8:	bl	c220 <mpfr_tmp_allocate@plt>
   15ccc:	mov	x2, x28
   15cd0:	stur	x0, [x29, #-96]
   15cd4:	subs	x28, x24, x21
   15cd8:	b.ls	15c64 <mpfr_get_str@@Base+0x600>  // b.plast
   15cdc:	ldur	x1, [x29, #-40]
   15ce0:	add	x8, x25, x24, lsl #3
   15ce4:	mvn	x9, x27
   15ce8:	add	x0, x8, x9, lsl #3
   15cec:	cmp	x0, x1
   15cf0:	b.eq	15cfc <mpfr_get_str@@Base+0x698>  // b.none
   15cf4:	lsl	x2, x21, #3
   15cf8:	bl	be50 <memcpy@plt>
   15cfc:	lsl	x2, x28, #3
   15d00:	mov	x0, x25
   15d04:	mov	w1, wzr
   15d08:	bl	c5b0 <memset@plt>
   15d0c:	ldur	x27, [x29, #-48]
   15d10:	ldur	x28, [x29, #-112]
   15d14:	subs	x21, x21, x24
   15d18:	b.ls	15d48 <mpfr_get_str@@Base+0x6e4>  // b.plast
   15d1c:	cmn	x23, #0x1
   15d20:	b.ne	15d48 <mpfr_get_str@@Base+0x6e4>  // b.any
   15d24:	ldur	x0, [x29, #-40]
   15d28:	mov	x1, xzr
   15d2c:	cset	w27, eq  // eq = none
   15d30:	bl	cf80 <__gmpn_scan1@plt>
   15d34:	cmp	x0, x21, lsl #6
   15d38:	cset	w8, cs  // cs = hs, nlast
   15d3c:	and	w8, w27, w8
   15d40:	ldur	x27, [x29, #-48]
   15d44:	stur	w8, [x29, #-88]
   15d48:	ldur	x21, [x29, #-96]
   15d4c:	mov	x0, x26
   15d50:	mov	x2, xzr
   15d54:	mov	x3, x25
   15d58:	mov	x1, x21
   15d5c:	mov	x4, x24
   15d60:	mov	x5, x22
   15d64:	mov	x6, x19
   15d68:	bl	beb0 <__gmpn_tdiv_qr@plt>
   15d6c:	ldr	x8, [x27, #16]
   15d70:	ldur	x9, [x29, #-8]
   15d74:	sub	x8, x8, x19, lsl #7
   15d78:	sub	x8, x8, x9
   15d7c:	stur	x8, [x29, #-8]
   15d80:	ldur	w8, [x29, #-88]
   15d84:	cbz	w8, 15da0 <mpfr_get_str@@Base+0x73c>
   15d88:	mov	x0, x21
   15d8c:	mov	x1, x19
   15d90:	bl	cd40 <__gmpn_popcount@plt>
   15d94:	cmp	x0, #0x0
   15d98:	cset	w24, eq  // eq = none
   15d9c:	b	15da4 <mpfr_get_str@@Base+0x740>
   15da0:	mov	w24, wzr
   15da4:	ldr	x8, [x26, x19, lsl #3]
   15da8:	ldur	x21, [x29, #-72]
   15dac:	cmp	x8, #0x1
   15db0:	b.ne	15de8 <mpfr_get_str@@Base+0x784>  // b.any
   15db4:	mov	w3, #0x1                   	// #1
   15db8:	mov	x0, x22
   15dbc:	mov	x1, x26
   15dc0:	mov	x2, x19
   15dc4:	bl	c140 <__gmpn_rshift@plt>
   15dc8:	ldur	x9, [x29, #-104]
   15dcc:	ldr	x8, [x22, x9]
   15dd0:	orr	x8, x8, #0x8000000000000000
   15dd4:	str	x8, [x22, x9]
   15dd8:	ldur	x8, [x29, #-8]
   15ddc:	add	x8, x8, #0x1
   15de0:	stur	x8, [x29, #-8]
   15de4:	b	15e00 <mpfr_get_str@@Base+0x79c>
   15de8:	cmp	x22, x26
   15dec:	b.eq	15e00 <mpfr_get_str@@Base+0x79c>  // b.none
   15df0:	mov	x0, x22
   15df4:	mov	x1, x26
   15df8:	mov	x2, x20
   15dfc:	bl	be50 <memcpy@plt>
   15e00:	add	x8, x23, #0x2
   15e04:	cmn	x23, #0x1
   15e08:	ldur	w23, [x29, #-76]
   15e0c:	mov	w9, #0x2                   	// #2
   15e10:	csel	x25, x9, x8, eq  // eq = none
   15e14:	b	15e3c <mpfr_get_str@@Base+0x7d8>
   15e18:	ldur	w23, [x29, #-76]
   15e1c:	cmp	x21, x22
   15e20:	b.eq	15e34 <mpfr_get_str@@Base+0x7d0>  // b.none
   15e24:	mov	x0, x22
   15e28:	mov	x1, x21
   15e2c:	mov	x2, x20
   15e30:	bl	be50 <memcpy@plt>
   15e34:	ldur	x27, [x29, #-48]
   15e38:	ldur	x21, [x29, #-72]
   15e3c:	ldur	w8, [x29, #-80]
   15e40:	ldur	x4, [x29, #-8]
   15e44:	cmp	w24, #0x0
   15e48:	csinv	x5, x25, xzr, eq  // eq = none
   15e4c:	str	w8, [sp, #-16]!
   15e50:	ldp	x24, x0, [x29, #-64]
   15e54:	mov	x1, x28
   15e58:	mov	x2, x22
   15e5c:	mov	x3, x19
   15e60:	mov	w6, w23
   15e64:	mov	x7, x24
   15e68:	bl	161fc <mpfr_get_str@@Base+0xb98>
   15e6c:	add	sp, sp, #0x10
   15e70:	ldur	x8, [x29, #-16]
   15e74:	mov	w19, w0
   15e78:	cbnz	x8, 15ebc <mpfr_get_str@@Base+0x858>
   15e7c:	ldur	x25, [x29, #-24]
   15e80:	cmn	w19, #0x3
   15e84:	b.ne	15f0c <mpfr_get_str@@Base+0x8a8>  // b.any
   15e88:	ldur	x3, [x29, #-32]
   15e8c:	cmp	x24, x25
   15e90:	add	x25, x25, #0x1
   15e94:	sub	x9, x3, #0x1
   15e98:	csinc	x3, x9, x3, gt
   15e9c:	b	159e0 <mpfr_get_str@@Base+0x37c>
   15ea0:	sub	x0, x29, #0x10
   15ea4:	mov	x1, x20
   15ea8:	mov	x21, x3
   15eac:	bl	c220 <mpfr_tmp_allocate@plt>
   15eb0:	mov	x3, x21
   15eb4:	mov	x22, x0
   15eb8:	b	15a1c <mpfr_get_str@@Base+0x3b8>
   15ebc:	mov	x0, x8
   15ec0:	bl	c8d0 <mpfr_tmp_free@plt>
   15ec4:	b	15e7c <mpfr_get_str@@Base+0x818>
   15ec8:	sub	x0, x29, #0x10
   15ecc:	bl	c220 <mpfr_tmp_allocate@plt>
   15ed0:	mov	x23, x0
   15ed4:	b	15b08 <mpfr_get_str@@Base+0x4a4>
   15ed8:	sub	x0, x29, #0x10
   15edc:	mov	x1, x2
   15ee0:	mov	x24, x2
   15ee4:	bl	c220 <mpfr_tmp_allocate@plt>
   15ee8:	mov	x2, x24
   15eec:	mov	x25, x0
   15ef0:	b	15c10 <mpfr_get_str@@Base+0x5ac>
   15ef4:	sub	x0, x29, #0x10
   15ef8:	mov	x24, x2
   15efc:	bl	c220 <mpfr_tmp_allocate@plt>
   15f00:	mov	x2, x24
   15f04:	mov	x26, x0
   15f08:	b	15c38 <mpfr_get_str@@Base+0x5d4>
   15f0c:	ldur	x3, [x29, #-32]
   15f10:	cbz	w19, 15fd0 <mpfr_get_str@@Base+0x96c>
   15f14:	cmp	w19, #0x3
   15f18:	b.ne	15fd8 <mpfr_get_str@@Base+0x974>  // b.any
   15f1c:	ldur	x9, [x29, #-160]
   15f20:	mov	x8, #0xfffffffffffffeff    	// #-257
   15f24:	movk	x8, #0x7fff, lsl #48
   15f28:	sub	x8, x8, x21
   15f2c:	cmp	x9, x8
   15f30:	mov	x8, x9
   15f34:	b.gt	15f50 <mpfr_get_str@@Base+0x8ec>
   15f38:	add	x21, x21, x8
   15f3c:	cmp	x21, #0x0
   15f40:	cinc	x8, x21, lt  // lt = tstop
   15f44:	asr	x8, x8, #1
   15f48:	stur	x8, [x29, #-160]
   15f4c:	b	159dc <mpfr_get_str@@Base+0x378>
   15f50:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   15f54:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   15f58:	mov	w1, #0x9f9                 	// #2553
   15f5c:	add	x0, x0, #0x97b
   15f60:	add	x2, x2, #0x99a
   15f64:	mov	x19, x3
   15f68:	bl	d030 <mpfr_assert_fail@plt>
   15f6c:	ldur	x8, [x29, #-160]
   15f70:	mov	x3, x19
   15f74:	b	15f38 <mpfr_get_str@@Base+0x8d4>
   15f78:	ldr	w9, [x10, #8]
   15f7c:	lsr	w3, w9, #31
   15f80:	ldur	x1, [x29, #-40]
   15f84:	sub	x6, x29, #0x8
   15f88:	mov	x0, x22
   15f8c:	mov	x4, x24
   15f90:	mov	w5, w19
   15f94:	sub	x25, x8, x24
   15f98:	bl	cf10 <mpfr_round_raw@plt>
   15f9c:	sxtw	x8, w0
   15fa0:	str	x8, [x22, x20, lsl #3]
   15fa4:	cbz	w0, 16004 <mpfr_get_str@@Base+0x9a0>
   15fa8:	ldur	x24, [x29, #-64]
   15fac:	cmp	x28, x21
   15fb0:	b.ne	16010 <mpfr_get_str@@Base+0x9ac>  // b.any
   15fb4:	mov	x0, x22
   15fb8:	mov	x1, x22
   15fbc:	mov	x2, x23
   15fc0:	mov	w3, w21
   15fc4:	bl	c140 <__gmpn_rshift@plt>
   15fc8:	add	x27, x27, #0x1
   15fcc:	b	16014 <mpfr_get_str@@Base+0x9b0>
   15fd0:	ldur	w9, [x29, #-140]
   15fd4:	b	15fe0 <mpfr_get_str@@Base+0x97c>
   15fd8:	ldur	w9, [x29, #-140]
   15fdc:	orr	w9, w9, #0x8
   15fe0:	ldr	x8, [x28]
   15fe4:	add	x8, x8, x25
   15fe8:	str	x8, [x28]
   15fec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   15ff0:	ldr	x1, [x0, #2800]
   15ff4:	add	x0, x0, #0xaf0
   15ff8:	blr	x1
   15ffc:	ldur	x8, [x29, #-120]
   16000:	b	160a4 <mpfr_get_str@@Base+0xa40>
   16004:	ldur	x19, [x29, #-112]
   16008:	ldur	x24, [x29, #-64]
   1600c:	b	16018 <mpfr_get_str@@Base+0x9b4>
   16010:	mov	x20, x23
   16014:	ldur	x19, [x29, #-112]
   16018:	cbz	x25, 16040 <mpfr_get_str@@Base+0x9dc>
   1601c:	mov	x0, x22
   16020:	mov	x1, x22
   16024:	mov	x2, x20
   16028:	mov	w3, w25
   1602c:	bl	c140 <__gmpn_rshift@plt>
   16030:	sub	x8, x20, #0x1
   16034:	ldr	x9, [x22, x8, lsl #3]
   16038:	cmp	x9, #0x0
   1603c:	csel	x20, x8, x20, eq  // eq = none
   16040:	ldur	x0, [x29, #-56]
   16044:	ldur	w1, [x29, #-84]
   16048:	mov	x2, x22
   1604c:	mov	x3, x20
   16050:	bl	cab0 <__gmpn_get_str@plt>
   16054:	cbz	x24, 16074 <mpfr_get_str@@Base+0xa10>
   16058:	ldur	x8, [x29, #-56]
   1605c:	mov	x9, x24
   16060:	ldrb	w10, [x8]
   16064:	subs	x9, x9, #0x1
   16068:	ldrb	w10, [x26, x10]
   1606c:	strb	w10, [x8], #1
   16070:	b.ne	16060 <mpfr_get_str@@Base+0x9fc>  // b.any
   16074:	ldur	x8, [x29, #-56]
   16078:	strb	wzr, [x8, x24]
   1607c:	add	x8, x27, #0x1
   16080:	str	x8, [x19]
   16084:	ldur	x0, [x29, #-16]
   16088:	cbnz	x0, 161c8 <mpfr_get_str@@Base+0xb64>
   1608c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   16090:	ldr	x1, [x0, #2800]
   16094:	add	x0, x0, #0xaf0
   16098:	blr	x1
   1609c:	ldur	x8, [x29, #-120]
   160a0:	ldur	w9, [x29, #-140]
   160a4:	str	w9, [x8, x0]
   160a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   160ac:	ldr	x1, [x0, #2736]
   160b0:	add	x0, x0, #0xab0
   160b4:	blr	x1
   160b8:	ldur	x9, [x29, #-136]
   160bc:	str	x9, [x8, x0]
   160c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   160c4:	ldr	x1, [x0, #2768]
   160c8:	add	x0, x0, #0xad0
   160cc:	blr	x1
   160d0:	ldur	x9, [x29, #-128]
   160d4:	str	x9, [x8, x0]
   160d8:	ldur	x0, [x29, #-152]
   160dc:	mov	sp, x29
   160e0:	ldp	x20, x19, [sp, #80]
   160e4:	ldp	x22, x21, [sp, #64]
   160e8:	ldp	x24, x23, [sp, #48]
   160ec:	ldp	x26, x25, [sp, #32]
   160f0:	ldp	x28, x27, [sp, #16]
   160f4:	ldp	x29, x30, [sp], #96
   160f8:	ret
   160fc:	cbnz	x12, 1610c <mpfr_get_str@@Base+0xaa8>
   16100:	mov	w0, #0x6                   	// #6
   16104:	bl	d1f0 <mpfr_allocate_func@plt>
   16108:	mov	x12, x0
   1610c:	mov	w9, #0x4e40                	// #20032
   16110:	mov	w8, #0x40                  	// #64
   16114:	movk	w9, #0x4e61, lsl #16
   16118:	strh	w8, [x12, #4]
   1611c:	str	w9, [x12]
   16120:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   16124:	ldr	x1, [x0, #2800]
   16128:	add	x0, x0, #0xaf0
   1612c:	blr	x1
   16130:	mrs	x8, tpidr_el0
   16134:	ldr	w9, [x8, x0]
   16138:	orr	w9, w9, #0x4
   1613c:	str	w9, [x8, x0]
   16140:	mov	x0, x12
   16144:	b	160dc <mpfr_get_str@@Base+0xa78>
   16148:	cbnz	x12, 16158 <mpfr_get_str@@Base+0xaf4>
   1614c:	orr	x0, x21, #0x6
   16150:	bl	d1f0 <mpfr_allocate_func@plt>
   16154:	mov	x12, x0
   16158:	adrp	x8, 5b000 <mpfr_free_pool@@Base+0x3854>
   1615c:	adrp	x9, 5b000 <mpfr_free_pool@@Base+0x3854>
   16160:	add	x8, x8, #0x975
   16164:	add	x9, x9, #0x974
   16168:	cmp	w20, #0x0
   1616c:	csel	x1, x9, x8, lt  // lt = tstop
   16170:	mov	x0, x12
   16174:	mov	x19, x12
   16178:	bl	ce00 <strcpy@plt>
   1617c:	mov	x0, x19
   16180:	b	160dc <mpfr_get_str@@Base+0xa78>
   16184:	sub	x0, x29, #0x10
   16188:	bl	c220 <mpfr_tmp_allocate@plt>
   1618c:	mov	x22, x0
   16190:	b	158b4 <mpfr_get_str@@Base+0x250>
   16194:	mov	x8, xzr
   16198:	add	x21, x20, x8
   1619c:	cbnz	x3, 159b0 <mpfr_get_str@@Base+0x34c>
   161a0:	b	159d0 <mpfr_get_str@@Base+0x36c>
   161a4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   161a8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   161ac:	add	x0, x0, #0x97b
   161b0:	add	x2, x2, #0x985
   161b4:	mov	w1, #0x983                 	// #2435
   161b8:	mov	x21, x3
   161bc:	bl	d030 <mpfr_assert_fail@plt>
   161c0:	mov	x3, x21
   161c4:	b	1599c <mpfr_get_str@@Base+0x338>
   161c8:	bl	c8d0 <mpfr_tmp_free@plt>
   161cc:	b	1608c <mpfr_get_str@@Base+0xa28>
   161d0:	mov	x8, xzr
   161d4:	b	159cc <mpfr_get_str@@Base+0x368>
   161d8:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   161dc:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   161e0:	add	x0, x0, #0x97b
   161e4:	add	x2, x2, #0x990
   161e8:	mov	w1, #0x985                 	// #2437
   161ec:	mov	x20, x3
   161f0:	bl	d030 <mpfr_assert_fail@plt>
   161f4:	mov	x3, x20
   161f8:	b	159bc <mpfr_get_str@@Base+0x358>
   161fc:	stp	x29, x30, [sp, #-96]!
   16200:	stp	x28, x27, [sp, #16]
   16204:	stp	x26, x25, [sp, #32]
   16208:	stp	x24, x23, [sp, #48]
   1620c:	stp	x22, x21, [sp, #64]
   16210:	stp	x20, x19, [sp, #80]
   16214:	mov	x29, sp
   16218:	sub	sp, sp, #0x30
   1621c:	mov	x19, x7
   16220:	mov	w21, w6
   16224:	mov	x22, x5
   16228:	mov	x25, x4
   1622c:	mov	x26, x3
   16230:	mov	x27, x2
   16234:	cmp	x4, #0x1
   16238:	mov	x20, x0
   1623c:	stur	x1, [x29, #-24]
   16240:	b.ge	164d0 <mpfr_get_str@@Base+0xe6c>  // b.tcont
   16244:	lsl	x28, x26, #6
   16248:	neg	x8, x28
   1624c:	cmp	x8, x25
   16250:	b.ge	164ec <mpfr_get_str@@Base+0xe88>  // b.tcont
   16254:	ldr	w24, [x29, #96]
   16258:	sub	w8, w21, #0x2
   1625c:	adrp	x9, 5b000 <mpfr_free_pool@@Base+0x3854>
   16260:	adrp	x10, 5b000 <mpfr_free_pool@@Base+0x3854>
   16264:	add	x9, x9, #0x935
   16268:	add	x10, x10, #0x910
   1626c:	cmp	w8, #0x23
   16270:	csel	x23, x10, x9, cc  // cc = lo, ul, last
   16274:	cmp	w21, #0x0
   16278:	cneg	w21, w21, mi  // mi = first
   1627c:	stur	xzr, [x29, #-16]
   16280:	tbnz	x22, #63, 162a4 <mpfr_get_str@@Base+0xc40>
   16284:	add	x8, x28, x25
   16288:	cmp	w24, #0x0
   1628c:	sub	x2, x28, x22
   16290:	cinc	x3, x8, eq  // eq = none
   16294:	mov	x0, x27
   16298:	mov	x1, x26
   1629c:	bl	c830 <mpfr_round_p@plt>
   162a0:	cbz	w0, 16330 <mpfr_get_str@@Base+0xccc>
   162a4:	add	x8, x25, #0x3f
   162a8:	cmp	x25, #0x0
   162ac:	csel	x8, x8, x25, lt  // lt = tstop
   162b0:	asr	x9, x8, #6
   162b4:	stur	x19, [x29, #-32]
   162b8:	mov	x19, x20
   162bc:	sub	x20, x27, x9, lsl #3
   162c0:	and	x8, x8, #0xffffffffffffffc0
   162c4:	add	x4, x28, x25
   162c8:	sub	x6, x29, #0x4
   162cc:	mov	x0, x20
   162d0:	mov	x1, x27
   162d4:	mov	x2, x28
   162d8:	mov	w3, wzr
   162dc:	mov	w5, w24
   162e0:	stur	x22, [x29, #-48]
   162e4:	stur	w21, [x29, #-36]
   162e8:	neg	x21, x9
   162ec:	sub	x22, x25, x8
   162f0:	bl	cf10 <mpfr_round_raw@plt>
   162f4:	cbz	w0, 16314 <mpfr_get_str@@Base+0xcb0>
   162f8:	cbz	x22, 1633c <mpfr_get_str@@Base+0xcd8>
   162fc:	mvn	x8, x22
   16300:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   16304:	lsr	x8, x9, x8
   16308:	add	x9, x27, x26, lsl #3
   1630c:	stur	x8, [x9, #-8]
   16310:	b	16350 <mpfr_get_str@@Base+0xcec>
   16314:	cbz	x22, 16350 <mpfr_get_str@@Base+0xcec>
   16318:	sub	x2, x26, x21
   1631c:	neg	w3, w22
   16320:	mov	x0, x20
   16324:	mov	x1, x20
   16328:	bl	c140 <__gmpn_rshift@plt>
   1632c:	b	16350 <mpfr_get_str@@Base+0xcec>
   16330:	mov	w8, #0x3                   	// #3
   16334:	stur	w8, [x29, #-4]
   16338:	b	1649c <mpfr_get_str@@Base+0xe38>
   1633c:	sxtw	x8, w0
   16340:	add	x9, x27, x26, lsl #3
   16344:	sub	x21, x21, #0x1
   16348:	stur	x8, [x9, #-8]
   1634c:	str	xzr, [x27, x21, lsl #3]
   16350:	mov	x22, x19
   16354:	ldur	x19, [x29, #-32]
   16358:	add	x1, x19, #0x3
   1635c:	cmp	x1, #0x4, lsl #12
   16360:	b.hi	16510 <mpfr_get_str@@Base+0xeac>  // b.pmore
   16364:	add	x9, x1, #0xf
   16368:	mov	x8, sp
   1636c:	and	x9, x9, #0xfffffffffffffff0
   16370:	sub	x25, x8, x9
   16374:	mov	sp, x25
   16378:	add	x2, x27, x21, lsl #3
   1637c:	sub	x3, x26, x21
   16380:	ldur	w21, [x29, #-36]
   16384:	mov	x0, x25
   16388:	mov	w1, w21
   1638c:	bl	cab0 <__gmpn_get_str@plt>
   16390:	mov	x26, x0
   16394:	subs	x20, x0, x19
   16398:	b.cc	16520 <mpfr_get_str@@Base+0xebc>  // b.lo, b.ul, b.last
   1639c:	add	x8, x19, #0x1
   163a0:	cmp	x26, x8
   163a4:	ldur	x8, [x29, #-24]
   163a8:	str	x20, [x8]
   163ac:	b.ne	16478 <mpfr_get_str@@Base+0xe14>  // b.any
   163b0:	ldur	w8, [x29, #-4]
   163b4:	cbnz	w8, 163c4 <mpfr_get_str@@Base+0xd60>
   163b8:	add	x9, x26, x25
   163bc:	ldurb	w9, [x9, #-1]
   163c0:	cbz	w9, 16478 <mpfr_get_str@@Base+0xe14>
   163c4:	cbnz	w24, 16408 <mpfr_get_str@@Base+0xda4>
   163c8:	add	x9, x26, x25
   163cc:	ldurb	w9, [x9, #-1]
   163d0:	lsl	w9, w9, #1
   163d4:	cmp	w9, w21
   163d8:	b.ne	16400 <mpfr_get_str@@Base+0xd9c>  // b.any
   163dc:	ldur	x9, [x29, #-48]
   163e0:	tbz	x9, #63, 164c8 <mpfr_get_str@@Base+0xe64>
   163e4:	cbnz	w8, 164c8 <mpfr_get_str@@Base+0xe64>
   163e8:	add	x8, x26, x25
   163ec:	ldurb	w8, [x8, #-2]
   163f0:	tst	w8, #0x1
   163f4:	mov	w8, #0x2                   	// #2
   163f8:	cinc	w24, w8, eq  // eq = none
   163fc:	b	16408 <mpfr_get_str@@Base+0xda4>
   16400:	mov	w8, #0x2                   	// #2
   16404:	cinc	w24, w8, lt  // lt = tstop
   16408:	cmp	w24, #0x4
   1640c:	b.eq	16418 <mpfr_get_str@@Base+0xdb4>  // b.none
   16410:	cmp	w24, #0x2
   16414:	b.ne	16470 <mpfr_get_str@@Base+0xe0c>  // b.any
   16418:	add	x8, x26, x25
   1641c:	ldurb	w8, [x8, #-1]
   16420:	cbz	w8, 16468 <mpfr_get_str@@Base+0xe04>
   16424:	cmp	x26, #0x1
   16428:	b.ls	1653c <mpfr_get_str@@Base+0xed8>  // b.plast
   1642c:	add	x11, x26, x25
   16430:	mov	x9, x11
   16434:	ldrb	w8, [x9, #-2]!
   16438:	sub	w10, w21, #0x1
   1643c:	cmp	w10, w8
   16440:	b.ne	16460 <mpfr_get_str@@Base+0xdfc>  // b.any
   16444:	sub	x9, x11, #0x3
   16448:	ldrb	w8, [x9]
   1644c:	strb	wzr, [x9, #1]
   16450:	sub	x9, x9, #0x1
   16454:	cmp	w10, w8
   16458:	b.eq	16448 <mpfr_get_str@@Base+0xde4>  // b.none
   1645c:	add	x9, x9, #0x1
   16460:	add	w8, w8, #0x1
   16464:	strb	w8, [x9]
   16468:	mov	w8, #0x1                   	// #1
   1646c:	b	16474 <mpfr_get_str@@Base+0xe10>
   16470:	mov	w8, #0xffffffff            	// #-1
   16474:	stur	w8, [x29, #-4]
   16478:	cbz	x19, 16498 <mpfr_get_str@@Base+0xe34>
   1647c:	mov	x8, x22
   16480:	mov	x9, x19
   16484:	ldrb	w10, [x25], #1
   16488:	subs	x9, x9, #0x1
   1648c:	ldrb	w10, [x23, x10]
   16490:	strb	w10, [x8], #1
   16494:	b.ne	16484 <mpfr_get_str@@Base+0xe20>  // b.any
   16498:	strb	wzr, [x22, x19]
   1649c:	ldur	x0, [x29, #-16]
   164a0:	cbnz	x0, 16508 <mpfr_get_str@@Base+0xea4>
   164a4:	ldur	w0, [x29, #-4]
   164a8:	mov	sp, x29
   164ac:	ldp	x20, x19, [sp, #80]
   164b0:	ldp	x22, x21, [sp, #64]
   164b4:	ldp	x24, x23, [sp, #48]
   164b8:	ldp	x26, x25, [sp, #32]
   164bc:	ldp	x28, x27, [sp, #16]
   164c0:	ldp	x29, x30, [sp], #96
   164c4:	ret
   164c8:	mov	w8, #0xfffffffd            	// #-3
   164cc:	b	16334 <mpfr_get_str@@Base+0xcd0>
   164d0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   164d4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   164d8:	add	x0, x0, #0x97b
   164dc:	add	x2, x2, #0x9e0
   164e0:	mov	w1, #0x62                  	// #98
   164e4:	bl	d030 <mpfr_assert_fail@plt>
   164e8:	b	16244 <mpfr_get_str@@Base+0xbe0>
   164ec:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   164f0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   164f4:	add	x0, x0, #0x97b
   164f8:	add	x2, x2, #0x9e7
   164fc:	mov	w1, #0x64                  	// #100
   16500:	bl	d030 <mpfr_assert_fail@plt>
   16504:	b	16254 <mpfr_get_str@@Base+0xbf0>
   16508:	bl	c8d0 <mpfr_tmp_free@plt>
   1650c:	b	164a4 <mpfr_get_str@@Base+0xe40>
   16510:	sub	x0, x29, #0x10
   16514:	bl	c220 <mpfr_tmp_allocate@plt>
   16518:	mov	x25, x0
   1651c:	b	16378 <mpfr_get_str@@Base+0xd14>
   16520:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   16524:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   16528:	add	x0, x0, #0x97b
   1652c:	add	x2, x2, #0x9fb
   16530:	mov	w1, #0x9d                  	// #157
   16534:	bl	d030 <mpfr_assert_fail@plt>
   16538:	b	1639c <mpfr_get_str@@Base+0xd38>
   1653c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   16540:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   16544:	add	x0, x0, #0x97b
   16548:	add	x2, x2, #0xa08
   1654c:	mov	w1, #0xd2                  	// #210
   16550:	bl	d030 <mpfr_assert_fail@plt>
   16554:	b	1642c <mpfr_get_str@@Base+0xdc8>

0000000000016558 <mpfr_free_str@@Base>:
   16558:	stp	x29, x30, [sp, #-32]!
   1655c:	str	x19, [sp, #16]
   16560:	mov	x29, sp
   16564:	mov	x19, x0
   16568:	bl	bf00 <strlen@plt>
   1656c:	add	x1, x0, #0x1
   16570:	mov	x0, x19
   16574:	bl	d120 <mpfr_free_func@plt>
   16578:	ldr	x19, [sp, #16]
   1657c:	ldp	x29, x30, [sp], #32
   16580:	ret

0000000000016584 <mpfr_init@@Base>:
   16584:	stp	x29, x30, [sp, #-16]!
   16588:	mov	x29, sp
   1658c:	mov	x8, x0
   16590:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   16594:	ldr	x1, [x0, #2752]
   16598:	add	x0, x0, #0xac0
   1659c:	blr	x1
   165a0:	mrs	x9, tpidr_el0
   165a4:	ldr	x1, [x9, x0]
   165a8:	mov	x0, x8
   165ac:	bl	cf60 <mpfr_init2@plt>
   165b0:	ldp	x29, x30, [sp], #16
   165b4:	ret

00000000000165b8 <__gmpfr_inp_str@@Base>:
   165b8:	sub	sp, sp, #0x70
   165bc:	stp	x29, x30, [sp, #16]
   165c0:	stp	x22, x21, [sp, #80]
   165c4:	add	x29, sp, #0x10
   165c8:	mov	x21, x0
   165cc:	mov	w0, #0x64                  	// #100
   165d0:	stp	x28, x27, [sp, #32]
   165d4:	stp	x26, x25, [sp, #48]
   165d8:	stp	x24, x23, [sp, #64]
   165dc:	stp	x20, x19, [sp, #96]
   165e0:	stur	w3, [x29, #-4]
   165e4:	mov	w19, w2
   165e8:	mov	x23, x1
   165ec:	bl	d1f0 <mpfr_allocate_func@plt>
   165f0:	mov	x22, x0
   165f4:	mov	x28, #0xffffffffffffffff    	// #-1
   165f8:	mov	x0, x23
   165fc:	bl	c760 <getc@plt>
   16600:	mov	w24, w0
   16604:	bl	cb00 <__ctype_b_loc@plt>
   16608:	ldr	x8, [x0]
   1660c:	add	x28, x28, #0x1
   16610:	ldrh	w8, [x8, w24, sxtw #1]
   16614:	tbnz	w8, #13, 165f8 <__gmpfr_inp_str@@Base+0x40>
   16618:	mov	x25, x0
   1661c:	mov	x20, xzr
   16620:	mov	w26, #0x64                  	// #100
   16624:	cmp	x20, x26
   16628:	b.cc	1664c <__gmpfr_inp_str@@Base+0x94>  // b.lo, b.ul, b.last
   1662c:	add	x8, x26, x26, lsl #1
   16630:	lsr	x27, x8, #1
   16634:	mov	x0, x22
   16638:	mov	x1, x26
   1663c:	mov	x2, x27
   16640:	bl	c660 <mpfr_reallocate_func@plt>
   16644:	mov	x22, x0
   16648:	mov	x26, x27
   1664c:	cmn	w24, #0x1
   16650:	b.eq	16684 <__gmpfr_inp_str@@Base+0xcc>  // b.none
   16654:	ldr	x8, [x25]
   16658:	ldrh	w8, [x8, w24, sxtw #1]
   1665c:	tbnz	w8, #13, 16684 <__gmpfr_inp_str@@Base+0xcc>
   16660:	mov	x0, x23
   16664:	add	x27, x20, #0x1
   16668:	strb	w24, [x22, x20]
   1666c:	bl	c760 <getc@plt>
   16670:	mov	w24, w0
   16674:	mov	x20, x27
   16678:	cmp	x20, x26
   1667c:	b.cs	1662c <__gmpfr_inp_str@@Base+0x74>  // b.hs, b.nlast
   16680:	b	1664c <__gmpfr_inp_str@@Base+0x94>
   16684:	mov	w0, w24
   16688:	mov	x1, x23
   1668c:	bl	cc00 <ungetc@plt>
   16690:	ldur	w3, [x29, #-4]
   16694:	mov	x0, x21
   16698:	mov	x1, x22
   1669c:	mov	w2, w19
   166a0:	strb	wzr, [x22, x20]
   166a4:	bl	cb90 <mpfr_set_str@plt>
   166a8:	mov	w19, w0
   166ac:	mov	x0, x22
   166b0:	mov	x1, x26
   166b4:	bl	d120 <mpfr_free_func@plt>
   166b8:	add	x8, x28, x20
   166bc:	cmn	w19, #0x1
   166c0:	ldp	x20, x19, [sp, #96]
   166c4:	ldp	x22, x21, [sp, #80]
   166c8:	ldp	x24, x23, [sp, #64]
   166cc:	ldp	x26, x25, [sp, #48]
   166d0:	ldp	x28, x27, [sp, #32]
   166d4:	ldp	x29, x30, [sp, #16]
   166d8:	csel	x0, xzr, x8, eq  // eq = none
   166dc:	add	sp, sp, #0x70
   166e0:	ret

00000000000166e4 <mpfr_integer_p@@Base>:
   166e4:	stp	x29, x30, [sp, #-48]!
   166e8:	stp	x20, x19, [sp, #32]
   166ec:	ldr	x19, [x0, #16]
   166f0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   166f4:	str	x21, [sp, #16]
   166f8:	mov	x29, sp
   166fc:	cmp	x19, x8
   16700:	b.le	16784 <mpfr_integer_p@@Base+0xa0>
   16704:	cmp	x19, #0x1
   16708:	b.lt	16768 <mpfr_integer_p@@Base+0x84>  // b.tstop
   1670c:	ldr	x8, [x0]
   16710:	cmp	x19, x8
   16714:	b.cs	16770 <mpfr_integer_p@@Base+0x8c>  // b.hs, b.nlast
   16718:	sub	x9, x8, #0x1
   1671c:	add	x8, x8, #0x3e
   16720:	ldr	x21, [x0, #24]
   16724:	cmp	x9, #0x0
   16728:	add	x10, x19, #0x3f
   1672c:	csel	x8, x8, x9, lt  // lt = tstop
   16730:	cmp	x19, #0x0
   16734:	asr	x8, x8, #6
   16738:	csel	x9, x10, x19, lt  // lt = tstop
   1673c:	subs	x20, x8, x9, asr #6
   16740:	b.mi	16794 <mpfr_integer_p@@Base+0xb0>  // b.first
   16744:	ldr	x8, [x21, x20, lsl #3]
   16748:	lsl	x8, x8, x19
   1674c:	cbnz	x8, 16768 <mpfr_integer_p@@Base+0x84>
   16750:	sub	x8, x21, #0x8
   16754:	subs	x9, x20, #0x1
   16758:	b.lt	16770 <mpfr_integer_p@@Base+0x8c>  // b.tstop
   1675c:	ldr	x10, [x8, x20, lsl #3]
   16760:	mov	x20, x9
   16764:	cbz	x10, 16754 <mpfr_integer_p@@Base+0x70>
   16768:	mov	w0, wzr
   1676c:	b	16774 <mpfr_integer_p@@Base+0x90>
   16770:	mov	w0, #0x1                   	// #1
   16774:	ldp	x20, x19, [sp, #32]
   16778:	ldr	x21, [sp, #16]
   1677c:	ldp	x29, x30, [sp], #48
   16780:	ret
   16784:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   16788:	cmp	x19, x8
   1678c:	cset	w0, eq  // eq = none
   16790:	b	16774 <mpfr_integer_p@@Base+0x90>
   16794:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   16798:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1679c:	add	x0, x0, #0xa15
   167a0:	add	x2, x2, #0xa21
   167a4:	mov	w1, #0x34                  	// #52
   167a8:	bl	d030 <mpfr_assert_fail@plt>
   167ac:	b	16744 <mpfr_integer_p@@Base+0x60>

00000000000167b0 <mpfr_inf_p@@Base>:
   167b0:	ldr	x8, [x0, #16]
   167b4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   167b8:	cmp	x8, x9
   167bc:	cset	w0, eq  // eq = none
   167c0:	ret

00000000000167c4 <mpfr_nan_p@@Base>:
   167c4:	ldr	x8, [x0, #16]
   167c8:	mov	x9, #0x2                   	// #2
   167cc:	movk	x9, #0x8000, lsl #48
   167d0:	cmp	x8, x9
   167d4:	cset	w0, eq  // eq = none
   167d8:	ret

00000000000167dc <mpfr_number_p@@Base>:
   167dc:	ldr	x8, [x0, #16]
   167e0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   167e4:	orr	x8, x8, #0x1
   167e8:	cmp	x8, x9
   167ec:	cset	w0, ne  // ne = any
   167f0:	ret

00000000000167f4 <mpfr_const_log2_internal@@Base>:
   167f4:	stp	x29, x30, [sp, #-96]!
   167f8:	stp	x28, x27, [sp, #16]
   167fc:	stp	x26, x25, [sp, #32]
   16800:	stp	x24, x23, [sp, #48]
   16804:	stp	x22, x21, [sp, #64]
   16808:	stp	x20, x19, [sp, #80]
   1680c:	mov	x29, sp
   16810:	sub	sp, sp, #0x120
   16814:	ldr	x21, [x0]
   16818:	mov	w8, #0x9                   	// #9
   1681c:	mov	x9, #0xfffffffffffffeff    	// #-257
   16820:	movk	x9, #0x7fff, lsl #48
   16824:	cmp	x21, #0x42d
   16828:	cinc	x8, x8, cs  // cs = hs, nlast
   1682c:	add	x23, x8, x21
   16830:	cmp	x23, x9
   16834:	stur	xzr, [x29, #-224]
   16838:	b.gt	16bb8 <mpfr_const_log2_internal@@Base+0x3c4>
   1683c:	sub	x8, x23, #0x1
   16840:	add	x9, x23, #0x3e
   16844:	cmp	x8, #0x0
   16848:	csel	x8, x9, x8, lt  // lt = tstop
   1684c:	asr	x8, x8, #6
   16850:	mov	w20, w1
   16854:	cmp	x23, #0x201
   16858:	add	x19, x8, #0x1
   1685c:	sub	x8, x29, #0x8
   16860:	stur	x0, [x8, #-256]
   16864:	b.lt	1687c <mpfr_const_log2_internal@@Base+0x88>  // b.tstop
   16868:	lsl	x0, x19, #4
   1686c:	stur	x0, [x29, #-216]
   16870:	bl	d1f0 <mpfr_allocate_func@plt>
   16874:	stur	x0, [x29, #-208]
   16878:	b	16888 <mpfr_const_log2_internal@@Base+0x94>
   1687c:	sub	x8, x29, #0xd8
   16880:	add	x8, x8, #0x10
   16884:	stp	xzr, x8, [x29, #-216]
   16888:	ldur	x8, [x29, #-208]
   1688c:	cmp	w20, #0x0
   16890:	mov	x22, #0x5555555555555555    	// #6148914691236517205
   16894:	cinc	x10, x21, eq  // eq = none
   16898:	stur	x8, [x29, #-16]
   1689c:	add	x8, x8, x19, lsl #3
   168a0:	sub	x11, x29, #0x10
   168a4:	mov	w9, #0x1                   	// #1
   168a8:	movk	x22, #0x5556
   168ac:	stur	x10, [x11, #-256]
   168b0:	stp	x8, x23, [x29, #-48]
   168b4:	mov	w8, #0x40                  	// #64
   168b8:	sub	x10, x29, #0x18
   168bc:	stur	w9, [x29, #-32]
   168c0:	stur	x23, [x29, #-72]
   168c4:	stur	x8, [x10, #-256]
   168c8:	stur	w20, [x29, #-252]
   168cc:	stur	x21, [x29, #-248]
   168d0:	smulh	x8, x23, x22
   168d4:	stur	w9, [x29, #-64]
   168d8:	add	x9, x23, #0x2
   168dc:	add	x19, x8, x8, lsr #63
   168e0:	cmp	x9, #0x5
   168e4:	add	x8, x19, #0x1
   168e8:	stur	x8, [x29, #-240]
   168ec:	b.cc	16adc <mpfr_const_log2_internal@@Base+0x2e8>  // b.lo, b.ul, b.last
   168f0:	cmp	x8, #0x1
   168f4:	b.ls	16af4 <mpfr_const_log2_internal@@Base+0x300>  // b.plast
   168f8:	clz	x8, x19
   168fc:	mov	w9, #0x40                  	// #64
   16900:	sub	x22, x9, x8
   16904:	add	x24, x22, #0x1
   16908:	add	x8, x24, x24, lsl #1
   1690c:	lsl	x1, x8, #4
   16910:	cmp	x1, #0x4, lsl #12
   16914:	b.hi	16ae4 <mpfr_const_log2_internal@@Base+0x2f0>  // b.pmore
   16918:	add	x9, x1, #0xf
   1691c:	mov	x8, sp
   16920:	and	x9, x9, #0xfffffffffffffff0
   16924:	sub	x25, x8, x9
   16928:	mov	sp, x25
   1692c:	add	x28, x25, x24, lsl #4
   16930:	add	x27, x25, x24, lsl #5
   16934:	lsl	x8, x22, #4
   16938:	stur	x8, [x29, #-232]
   1693c:	cbz	x24, 1697c <mpfr_const_log2_internal@@Base+0x188>
   16940:	ldur	x8, [x29, #-232]
   16944:	mov	x20, xzr
   16948:	add	x21, x8, #0x10
   1694c:	add	x8, x25, x22, lsl #5
   16950:	add	x26, x8, #0x20
   16954:	add	x19, x25, x21
   16958:	add	x0, x25, x20
   1695c:	bl	c400 <mpfr_mpz_init@plt>
   16960:	add	x0, x19, x20
   16964:	bl	c400 <mpfr_mpz_init@plt>
   16968:	add	x0, x26, x20
   1696c:	bl	c400 <mpfr_mpz_init@plt>
   16970:	add	x20, x20, #0x10
   16974:	cmp	x21, x20
   16978:	b.ne	16958 <mpfr_const_log2_internal@@Base+0x164>  // b.any
   1697c:	ldur	x4, [x29, #-240]
   16980:	mov	x0, x25
   16984:	mov	x1, x28
   16988:	mov	x2, x27
   1698c:	mov	x3, xzr
   16990:	mov	w5, wzr
   16994:	bl	16bf4 <mpfr_const_log2@@Base+0x38>
   16998:	sub	x0, x29, #0x28
   1699c:	mov	x1, x25
   169a0:	mov	w2, wzr
   169a4:	bl	c6e0 <mpfr_set_z@plt>
   169a8:	sub	x0, x29, #0x48
   169ac:	mov	x1, x27
   169b0:	mov	w2, wzr
   169b4:	bl	c6e0 <mpfr_set_z@plt>
   169b8:	sub	x0, x29, #0x28
   169bc:	sub	x1, x29, #0x28
   169c0:	sub	x2, x29, #0x48
   169c4:	mov	w3, wzr
   169c8:	bl	caf0 <mpfr_div@plt>
   169cc:	cbz	x24, 16a0c <mpfr_const_log2_internal@@Base+0x218>
   169d0:	ldur	x8, [x29, #-232]
   169d4:	mov	x20, xzr
   169d8:	add	x19, x8, #0x10
   169dc:	add	x8, x25, x22, lsl #5
   169e0:	add	x21, x8, #0x20
   169e4:	add	x22, x25, x19
   169e8:	add	x0, x25, x20
   169ec:	bl	c610 <mpfr_mpz_clear@plt>
   169f0:	add	x0, x22, x20
   169f4:	bl	c610 <mpfr_mpz_clear@plt>
   169f8:	add	x0, x21, x20
   169fc:	bl	c610 <mpfr_mpz_clear@plt>
   16a00:	add	x20, x20, #0x10
   16a04:	cmp	x19, x20
   16a08:	b.ne	169e8 <mpfr_const_log2_internal@@Base+0x1f4>  // b.any
   16a0c:	ldur	x21, [x29, #-248]
   16a10:	mov	w8, #0x93e0                	// #37856
   16a14:	movk	w8, #0x4, lsl #16
   16a18:	mov	x19, #0xfffffffffffffeff    	// #-257
   16a1c:	cmp	x21, x8
   16a20:	movk	x19, #0x7fff, lsl #48
   16a24:	b.cc	16b58 <mpfr_const_log2_internal@@Base+0x364>  // b.lo, b.ul, b.last
   16a28:	ldur	x8, [x29, #-24]
   16a2c:	add	x9, x19, #0x105
   16a30:	cmp	x8, x9
   16a34:	b.lt	16a6c <mpfr_const_log2_internal@@Base+0x278>  // b.tstop
   16a38:	ldur	x8, [x29, #-40]
   16a3c:	ldur	x0, [x29, #-16]
   16a40:	sub	x2, x23, #0x2
   16a44:	sub	x9, x8, #0x1
   16a48:	add	x8, x8, #0x3e
   16a4c:	cmp	x9, #0x0
   16a50:	csel	x8, x8, x9, lt  // lt = tstop
   16a54:	asr	x8, x8, #6
   16a58:	add	x1, x8, #0x1
   16a5c:	sub	x8, x29, #0x10
   16a60:	ldur	x3, [x8, #-256]
   16a64:	bl	c830 <mpfr_round_p@plt>
   16a68:	cbnz	w0, 16b58 <mpfr_const_log2_internal@@Base+0x364>
   16a6c:	sub	x9, x29, #0x18
   16a70:	ldur	x22, [x9, #-256]
   16a74:	sub	x8, x19, x23
   16a78:	cmp	x22, x8
   16a7c:	b.gt	16b3c <mpfr_const_log2_internal@@Base+0x348>
   16a80:	add	x23, x23, x22
   16a84:	cmp	x23, #0x0
   16a88:	mov	x22, #0x5555555555555555    	// #6148914691236517205
   16a8c:	cinc	x8, x23, lt  // lt = tstop
   16a90:	cmp	x23, x19
   16a94:	movk	x22, #0x5556
   16a98:	b.gt	16bb8 <mpfr_const_log2_internal@@Base+0x3c4>
   16a9c:	asr	x8, x8, #1
   16aa0:	sub	x9, x29, #0x18
   16aa4:	stur	x8, [x9, #-256]
   16aa8:	sub	x8, x23, #0x1
   16aac:	add	x9, x23, #0x3e
   16ab0:	cmp	x8, #0x0
   16ab4:	ldur	x1, [x29, #-216]
   16ab8:	csel	x8, x9, x8, lt  // lt = tstop
   16abc:	asr	x8, x8, #6
   16ac0:	add	x19, x8, #0x1
   16ac4:	lsl	x2, x19, #4
   16ac8:	stur	x2, [x29, #-216]
   16acc:	cbz	x1, 16b10 <mpfr_const_log2_internal@@Base+0x31c>
   16ad0:	ldur	x0, [x29, #-208]
   16ad4:	bl	c660 <mpfr_reallocate_func@plt>
   16ad8:	b	16b18 <mpfr_const_log2_internal@@Base+0x324>
   16adc:	mov	x22, xzr
   16ae0:	b	16904 <mpfr_const_log2_internal@@Base+0x110>
   16ae4:	sub	x0, x29, #0xe0
   16ae8:	bl	c220 <mpfr_tmp_allocate@plt>
   16aec:	mov	x25, x0
   16af0:	b	1692c <mpfr_const_log2_internal@@Base+0x138>
   16af4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   16af8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   16afc:	mov	w1, #0x94                  	// #148
   16b00:	add	x0, x0, #0xa29
   16b04:	add	x2, x2, #0xa36
   16b08:	bl	d030 <mpfr_assert_fail@plt>
   16b0c:	b	168f8 <mpfr_const_log2_internal@@Base+0x104>
   16b10:	mov	x0, x2
   16b14:	bl	d1f0 <mpfr_allocate_func@plt>
   16b18:	mov	x8, x0
   16b1c:	mov	w9, #0x1                   	// #1
   16b20:	stur	x8, [x29, #-16]
   16b24:	add	x8, x8, x19, lsl #3
   16b28:	stur	x0, [x29, #-208]
   16b2c:	stur	w9, [x29, #-32]
   16b30:	stur	x23, [x29, #-72]
   16b34:	stp	x8, x23, [x29, #-48]
   16b38:	b	168d0 <mpfr_const_log2_internal@@Base+0xdc>
   16b3c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   16b40:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   16b44:	mov	w1, #0xb1                  	// #177
   16b48:	add	x0, x0, #0xa29
   16b4c:	add	x2, x2, #0xa3e
   16b50:	bl	d030 <mpfr_assert_fail@plt>
   16b54:	b	16a80 <mpfr_const_log2_internal@@Base+0x28c>
   16b58:	sub	x8, x29, #0x8
   16b5c:	ldur	w3, [x29, #-32]
   16b60:	ldur	x0, [x8, #-256]
   16b64:	ldur	w2, [x29, #-252]
   16b68:	sub	x1, x29, #0x28
   16b6c:	bl	cb70 <mpfr_set4@plt>
   16b70:	ldur	x1, [x29, #-216]
   16b74:	mov	w19, w0
   16b78:	cbz	x1, 16b84 <mpfr_const_log2_internal@@Base+0x390>
   16b7c:	ldur	x0, [x29, #-208]
   16b80:	bl	d120 <mpfr_free_func@plt>
   16b84:	ldur	x0, [x29, #-224]
   16b88:	cbnz	x0, 16bb0 <mpfr_const_log2_internal@@Base+0x3bc>
   16b8c:	mov	w0, w19
   16b90:	mov	sp, x29
   16b94:	ldp	x20, x19, [sp, #80]
   16b98:	ldp	x22, x21, [sp, #64]
   16b9c:	ldp	x24, x23, [sp, #48]
   16ba0:	ldp	x26, x25, [sp, #32]
   16ba4:	ldp	x28, x27, [sp, #16]
   16ba8:	ldp	x29, x30, [sp], #96
   16bac:	ret
   16bb0:	bl	c8d0 <mpfr_tmp_free@plt>
   16bb4:	b	16b8c <mpfr_const_log2_internal@@Base+0x398>
   16bb8:	bl	cdd0 <mpfr_abort_prec_max@plt>

0000000000016bbc <mpfr_const_log2@@Base>:
   16bbc:	stp	x29, x30, [sp, #-16]!
   16bc0:	mov	x29, sp
   16bc4:	mov	w2, w1
   16bc8:	mov	x8, x0
   16bcc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   16bd0:	ldr	x1, [x0, #2784]
   16bd4:	add	x0, x0, #0xae0
   16bd8:	blr	x1
   16bdc:	mrs	x9, tpidr_el0
   16be0:	add	x1, x9, x0
   16be4:	mov	x0, x8
   16be8:	bl	c840 <mpfr_cache@plt>
   16bec:	ldp	x29, x30, [sp], #16
   16bf0:	ret
   16bf4:	stp	x29, x30, [sp, #-96]!
   16bf8:	add	x8, x3, #0x1
   16bfc:	stp	x24, x23, [sp, #48]
   16c00:	stp	x22, x21, [sp, #64]
   16c04:	stp	x20, x19, [sp, #80]
   16c08:	mov	x23, x3
   16c0c:	mov	x20, x2
   16c10:	mov	x19, x1
   16c14:	cmp	x8, x4
   16c18:	mov	x21, x0
   16c1c:	str	x27, [sp, #16]
   16c20:	stp	x26, x25, [sp, #32]
   16c24:	mov	x29, sp
   16c28:	b.ne	16c64 <mpfr_const_log2@@Base+0xa8>  // b.any
   16c2c:	cbz	x23, 16d94 <mpfr_const_log2@@Base+0x1d8>
   16c30:	mov	x0, x19
   16c34:	mov	x1, x23
   16c38:	bl	c110 <__gmpz_set_ui@plt>
   16c3c:	mov	x0, x19
   16c40:	mov	x1, x19
   16c44:	bl	c4e0 <__gmpz_neg@plt>
   16c48:	lsr	x8, x23, #61
   16c4c:	cbnz	x8, 16da8 <mpfr_const_log2@@Base+0x1ec>
   16c50:	mov	w1, #0x4                   	// #4
   16c54:	bfi	x1, x23, #3, #61
   16c58:	mov	x0, x20
   16c5c:	bl	c110 <__gmpz_set_ui@plt>
   16c60:	b	16de4 <mpfr_const_log2@@Base+0x228>
   16c64:	mov	x24, x4
   16c68:	lsr	x8, x4, #1
   16c6c:	and	w9, w23, w24
   16c70:	add	x8, x8, x23, lsr #1
   16c74:	and	x9, x9, #0x1
   16c78:	add	x26, x8, x9
   16c7c:	mov	w22, w5
   16c80:	mov	w5, #0x1                   	// #1
   16c84:	mov	x0, x21
   16c88:	mov	x1, x19
   16c8c:	mov	x2, x20
   16c90:	mov	x3, x23
   16c94:	mov	x4, x26
   16c98:	bl	16bf4 <mpfr_const_log2@@Base+0x38>
   16c9c:	add	x27, x21, #0x10
   16ca0:	add	x25, x19, #0x10
   16ca4:	add	x23, x20, #0x10
   16ca8:	mov	x0, x27
   16cac:	mov	x1, x25
   16cb0:	mov	x2, x23
   16cb4:	mov	x3, x26
   16cb8:	mov	x4, x24
   16cbc:	mov	w5, w22
   16cc0:	bl	16bf4 <mpfr_const_log2@@Base+0x38>
   16cc4:	mov	x0, x21
   16cc8:	mov	x1, x21
   16ccc:	mov	x2, x23
   16cd0:	bl	c460 <__gmpz_mul@plt>
   16cd4:	mov	x0, x27
   16cd8:	mov	x1, x27
   16cdc:	mov	x2, x19
   16ce0:	bl	c460 <__gmpz_mul@plt>
   16ce4:	mov	x0, x21
   16ce8:	mov	x1, x21
   16cec:	mov	x2, x27
   16cf0:	bl	ceb0 <__gmpz_add@plt>
   16cf4:	cbz	w22, 16d08 <mpfr_const_log2@@Base+0x14c>
   16cf8:	mov	x0, x19
   16cfc:	mov	x1, x19
   16d00:	mov	x2, x25
   16d04:	bl	c460 <__gmpz_mul@plt>
   16d08:	mov	x0, x20
   16d0c:	mov	x1, x20
   16d10:	mov	x2, x23
   16d14:	bl	c460 <__gmpz_mul@plt>
   16d18:	mov	x0, x21
   16d1c:	mov	x1, xzr
   16d20:	bl	bee0 <__gmpz_scan1@plt>
   16d24:	cbz	x0, 16df0 <mpfr_const_log2@@Base+0x234>
   16d28:	mov	x23, x0
   16d2c:	mov	x0, x20
   16d30:	mov	x1, xzr
   16d34:	bl	bee0 <__gmpz_scan1@plt>
   16d38:	cmp	x0, x23
   16d3c:	csel	x23, x0, x23, cc  // cc = lo, ul, last
   16d40:	cbz	w22, 16d58 <mpfr_const_log2@@Base+0x19c>
   16d44:	mov	x0, x19
   16d48:	mov	x1, xzr
   16d4c:	bl	bee0 <__gmpz_scan1@plt>
   16d50:	cmp	x0, x23
   16d54:	csel	x23, x0, x23, cc  // cc = lo, ul, last
   16d58:	cbz	x23, 16df0 <mpfr_const_log2@@Base+0x234>
   16d5c:	mov	x0, x21
   16d60:	mov	x1, x21
   16d64:	mov	x2, x23
   16d68:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   16d6c:	mov	x0, x20
   16d70:	mov	x1, x20
   16d74:	mov	x2, x23
   16d78:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   16d7c:	cbz	w22, 16df0 <mpfr_const_log2@@Base+0x234>
   16d80:	mov	x0, x19
   16d84:	mov	x1, x19
   16d88:	mov	x2, x23
   16d8c:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   16d90:	b	16df0 <mpfr_const_log2@@Base+0x234>
   16d94:	mov	w1, #0x3                   	// #3
   16d98:	mov	x0, x19
   16d9c:	bl	c110 <__gmpz_set_ui@plt>
   16da0:	lsr	x8, x23, #61
   16da4:	cbz	x8, 16c50 <mpfr_const_log2@@Base+0x94>
   16da8:	mov	x0, x20
   16dac:	mov	x1, x23
   16db0:	bl	c110 <__gmpz_set_ui@plt>
   16db4:	mov	w2, #0x1                   	// #1
   16db8:	mov	x0, x20
   16dbc:	mov	x1, x20
   16dc0:	bl	c6a0 <__gmpz_mul_2exp@plt>
   16dc4:	mov	w2, #0x1                   	// #1
   16dc8:	mov	x0, x20
   16dcc:	mov	x1, x20
   16dd0:	bl	c820 <__gmpz_add_ui@plt>
   16dd4:	mov	w2, #0x2                   	// #2
   16dd8:	mov	x0, x20
   16ddc:	mov	x1, x20
   16de0:	bl	c6a0 <__gmpz_mul_2exp@plt>
   16de4:	mov	x0, x21
   16de8:	mov	x1, x19
   16dec:	bl	c410 <__gmpz_set@plt>
   16df0:	ldp	x20, x19, [sp, #80]
   16df4:	ldp	x22, x21, [sp, #64]
   16df8:	ldp	x24, x23, [sp, #48]
   16dfc:	ldp	x26, x25, [sp, #32]
   16e00:	ldr	x27, [sp, #16]
   16e04:	ldp	x29, x30, [sp], #96
   16e08:	ret

0000000000016e0c <mpfr_log@@Base>:
   16e0c:	sub	sp, sp, #0x160
   16e10:	stp	x29, x30, [sp, #256]
   16e14:	stp	x28, x27, [sp, #272]
   16e18:	stp	x26, x25, [sp, #288]
   16e1c:	stp	x24, x23, [sp, #304]
   16e20:	stp	x22, x21, [sp, #320]
   16e24:	stp	x20, x19, [sp, #336]
   16e28:	ldr	x25, [x1, #16]
   16e2c:	mov	x23, #0x2                   	// #2
   16e30:	movk	x23, #0x8000, lsl #48
   16e34:	add	x8, x23, #0x2
   16e38:	mov	x21, x1
   16e3c:	cmp	x25, x8
   16e40:	mov	x19, x0
   16e44:	add	x29, sp, #0x100
   16e48:	b.lt	172f0 <mpfr_log@@Base+0x4e4>  // b.tstop
   16e4c:	ldr	w8, [x21, #8]
   16e50:	tbnz	w8, #31, 173b4 <mpfr_log@@Base+0x5a8>
   16e54:	mov	w22, w2
   16e58:	cmp	x25, #0x1
   16e5c:	b.ne	16e78 <mpfr_log@@Base+0x6c>  // b.any
   16e60:	mov	w1, #0x1                   	// #1
   16e64:	mov	x0, x21
   16e68:	mov	x2, xzr
   16e6c:	mov	w20, #0x1                   	// #1
   16e70:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   16e74:	cbz	w0, 17380 <mpfr_log@@Base+0x574>
   16e78:	ldr	x27, [x19]
   16e7c:	subs	x20, x27, #0x1
   16e80:	b.eq	17344 <mpfr_log@@Base+0x538>  // b.none
   16e84:	b.le	17364 <mpfr_log@@Base+0x558>
   16e88:	clz	x8, x20
   16e8c:	mov	w9, #0x80                  	// #128
   16e90:	sub	w8, w9, w8, lsl #1
   16e94:	sxtw	x8, w8
   16e98:	add	x9, x8, x27
   16e9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   16ea0:	ldr	x1, [x0, #2800]
   16ea4:	add	x0, x0, #0xaf0
   16ea8:	blr	x1
   16eac:	mrs	x26, tpidr_el0
   16eb0:	ldr	w12, [x26, x0]
   16eb4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   16eb8:	ldr	x1, [x0, #2736]
   16ebc:	add	x0, x0, #0xab0
   16ec0:	blr	x1
   16ec4:	ldr	x13, [x26, x0]
   16ec8:	mov	x8, x0
   16ecc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   16ed0:	ldr	x1, [x0, #2768]
   16ed4:	add	x0, x0, #0xad0
   16ed8:	blr	x1
   16edc:	ldr	x14, [x26, x0]
   16ee0:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   16ee4:	str	x10, [x26, x8]
   16ee8:	sub	x8, x23, #0x10d
   16eec:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   16ef0:	cmp	x9, x8
   16ef4:	str	x11, [x26, x0]
   16ef8:	b.gt	173e0 <mpfr_log@@Base+0x5d4>
   16efc:	add	x8, x9, #0x9
   16f00:	add	x10, x9, #0x48
   16f04:	cmp	x8, #0x0
   16f08:	csel	x8, x10, x8, lt  // lt = tstop
   16f0c:	asr	x8, x8, #6
   16f10:	add	x20, x9, #0xa
   16f14:	cmp	x9, #0x1f7
   16f18:	add	x28, x8, #0x1
   16f1c:	str	w12, [sp, #32]
   16f20:	stp	x14, x13, [sp, #16]
   16f24:	b.lt	16f3c <mpfr_log@@Base+0x130>  // b.tstop
   16f28:	lsl	x0, x28, #4
   16f2c:	str	x0, [sp, #40]
   16f30:	bl	d1f0 <mpfr_allocate_func@plt>
   16f34:	str	x0, [sp, #48]
   16f38:	b	16f48 <mpfr_log@@Base+0x13c>
   16f3c:	add	x8, sp, #0x28
   16f40:	add	x8, x8, #0x10
   16f44:	stp	xzr, x8, [sp, #40]
   16f48:	ldr	x8, [sp, #48]
   16f4c:	stur	x20, [x29, #-40]
   16f50:	stur	x20, [x29, #-72]
   16f54:	str	w22, [sp, #36]
   16f58:	cmp	w22, #0x0
   16f5c:	adrp	x22, 72000 <__gmpfr_l2b@@Base+0x2f0>
   16f60:	adrp	x23, 72000 <__gmpfr_l2b@@Base+0x2f0>
   16f64:	ldr	x22, [x22, #3976]
   16f68:	ldr	x23, [x23, #3928]
   16f6c:	mov	x24, #0x4                   	// #4
   16f70:	stur	x8, [x29, #-16]
   16f74:	add	x8, x8, x28, lsl #3
   16f78:	mov	w9, #0x1                   	// #1
   16f7c:	movk	x24, #0x8000, lsl #48
   16f80:	cinc	x27, x27, eq  // eq = none
   16f84:	stur	x8, [x29, #-48]
   16f88:	mov	w8, #0x40                  	// #64
   16f8c:	stur	w9, [x29, #-32]
   16f90:	stur	w9, [x29, #-64]
   16f94:	str	x8, [sp, #8]
   16f98:	add	x8, x20, #0x3
   16f9c:	add	x9, x20, #0x4
   16fa0:	cmp	x8, #0x0
   16fa4:	csel	x8, x9, x8, lt  // lt = tstop
   16fa8:	asr	x8, x8, #1
   16fac:	sub	x28, x8, x25
   16fb0:	sub	x0, x29, #0x48
   16fb4:	mov	x1, x21
   16fb8:	mov	x2, x28
   16fbc:	mov	w3, wzr
   16fc0:	bl	bff0 <mpfr_mul_2si@plt>
   16fc4:	sub	x0, x29, #0x28
   16fc8:	sub	x2, x29, #0x48
   16fcc:	mov	x1, x22
   16fd0:	mov	w3, wzr
   16fd4:	bl	caf0 <mpfr_div@plt>
   16fd8:	sub	x0, x29, #0x48
   16fdc:	sub	x2, x29, #0x28
   16fe0:	mov	x1, x23
   16fe4:	mov	w3, wzr
   16fe8:	bl	be40 <mpfr_agm@plt>
   16fec:	sub	x0, x29, #0x48
   16ff0:	sub	x1, x29, #0x48
   16ff4:	mov	w2, #0x1                   	// #1
   16ff8:	mov	w3, wzr
   16ffc:	bl	c780 <mpfr_mul_2ui@plt>
   17000:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17004:	ldr	x1, [x0, #2848]
   17008:	add	x0, x0, #0xb20
   1700c:	blr	x1
   17010:	add	x1, x26, x0
   17014:	sub	x0, x29, #0x28
   17018:	mov	w2, wzr
   1701c:	bl	c840 <mpfr_cache@plt>
   17020:	sub	x0, x29, #0x48
   17024:	sub	x1, x29, #0x28
   17028:	sub	x2, x29, #0x48
   1702c:	mov	w3, wzr
   17030:	bl	caf0 <mpfr_div@plt>
   17034:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17038:	ldr	x1, [x0, #2784]
   1703c:	add	x0, x0, #0xae0
   17040:	blr	x1
   17044:	add	x1, x26, x0
   17048:	sub	x0, x29, #0x28
   1704c:	mov	w2, wzr
   17050:	bl	c840 <mpfr_cache@plt>
   17054:	sub	x0, x29, #0x28
   17058:	sub	x1, x29, #0x28
   1705c:	mov	x2, x28
   17060:	mov	w3, wzr
   17064:	bl	ce50 <mpfr_mul_si@plt>
   17068:	sub	x0, x29, #0x28
   1706c:	sub	x1, x29, #0x48
   17070:	sub	x2, x29, #0x28
   17074:	mov	w3, wzr
   17078:	bl	bfd0 <mpfr_sub@plt>
   1707c:	ldur	x8, [x29, #-24]
   17080:	cmp	x8, x24
   17084:	b.lt	170dc <mpfr_log@@Base+0x2d0>  // b.tstop
   17088:	ldur	x9, [x29, #-56]
   1708c:	cmp	x9, x24
   17090:	b.lt	170dc <mpfr_log@@Base+0x2d0>  // b.tstop
   17094:	ldur	x10, [x29, #-40]
   17098:	sub	x8, x9, x8
   1709c:	ldur	x0, [x29, #-16]
   170a0:	bic	x28, x8, x8, asr #63
   170a4:	sub	x9, x10, #0x1
   170a8:	add	x10, x10, #0x3e
   170ac:	cmp	x9, #0x0
   170b0:	csel	x9, x10, x9, lt  // lt = tstop
   170b4:	sub	x8, x20, x28
   170b8:	asr	x9, x9, #6
   170bc:	add	x1, x9, #0x1
   170c0:	sub	x2, x8, #0x4
   170c4:	mov	x3, x27
   170c8:	bl	c830 <mpfr_round_p@plt>
   170cc:	cbz	w0, 170f8 <mpfr_log@@Base+0x2ec>
   170d0:	mov	w8, wzr
   170d4:	tbnz	w8, #0, 16f98 <mpfr_log@@Base+0x18c>
   170d8:	b	17228 <mpfr_log@@Base+0x41c>
   170dc:	subs	x28, x20, #0x1
   170e0:	b.eq	171e0 <mpfr_log@@Base+0x3d4>  // b.none
   170e4:	b.le	171e8 <mpfr_log@@Base+0x3dc>
   170e8:	clz	x8, x28
   170ec:	mov	w9, #0x40                  	// #64
   170f0:	sub	x8, x9, x8
   170f4:	b	17114 <mpfr_log@@Base+0x308>
   170f8:	subs	x8, x20, #0x1
   170fc:	b.eq	17110 <mpfr_log@@Base+0x304>  // b.none
   17100:	b.le	17204 <mpfr_log@@Base+0x3f8>
   17104:	clz	x8, x8
   17108:	mov	w9, #0x40                  	// #64
   1710c:	sub	x8, x9, x8
   17110:	add	x8, x8, x28
   17114:	mov	x28, #0x2                   	// #2
   17118:	ldr	x9, [sp, #8]
   1711c:	add	x20, x8, x20
   17120:	movk	x28, #0x8000, lsl #48
   17124:	sub	x8, x28, x20
   17128:	sub	x8, x8, #0x103
   1712c:	cmp	x9, x8
   17130:	mov	x8, x9
   17134:	b.gt	171c0 <mpfr_log@@Base+0x3b4>
   17138:	add	x20, x20, x8
   1713c:	sub	x9, x28, #0x103
   17140:	cmp	x20, #0x0
   17144:	cinc	x8, x20, lt  // lt = tstop
   17148:	cmp	x20, x9
   1714c:	b.gt	173e0 <mpfr_log@@Base+0x5d4>
   17150:	asr	x8, x8, #1
   17154:	str	x8, [sp, #8]
   17158:	sub	x8, x20, #0x1
   1715c:	add	x9, x20, #0x3e
   17160:	cmp	x8, #0x0
   17164:	ldr	x1, [sp, #40]
   17168:	csel	x8, x9, x8, lt  // lt = tstop
   1716c:	asr	x8, x8, #6
   17170:	add	x28, x8, #0x1
   17174:	lsl	x2, x28, #4
   17178:	str	x2, [sp, #40]
   1717c:	cbz	x1, 1718c <mpfr_log@@Base+0x380>
   17180:	ldr	x0, [sp, #48]
   17184:	bl	c660 <mpfr_reallocate_func@plt>
   17188:	b	17194 <mpfr_log@@Base+0x388>
   1718c:	mov	x0, x2
   17190:	bl	d1f0 <mpfr_allocate_func@plt>
   17194:	mov	x9, x0
   17198:	mov	w8, #0x1                   	// #1
   1719c:	stur	x9, [x29, #-16]
   171a0:	add	x9, x9, x28, lsl #3
   171a4:	str	x0, [sp, #48]
   171a8:	stur	x20, [x29, #-72]
   171ac:	stur	w8, [x29, #-32]
   171b0:	stp	x9, x20, [x29, #-48]
   171b4:	stur	w8, [x29, #-64]
   171b8:	tbnz	w8, #0, 16f98 <mpfr_log@@Base+0x18c>
   171bc:	b	17228 <mpfr_log@@Base+0x41c>
   171c0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   171c4:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   171c8:	mov	w1, #0xb5                  	// #181
   171cc:	add	x0, x0, #0xa81
   171d0:	add	x2, x2, #0x26
   171d4:	bl	d030 <mpfr_assert_fail@plt>
   171d8:	ldr	x8, [sp, #8]
   171dc:	b	17138 <mpfr_log@@Base+0x32c>
   171e0:	mov	x8, xzr
   171e4:	b	17114 <mpfr_log@@Base+0x308>
   171e8:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   171ec:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   171f0:	mov	w1, #0xb2                  	// #178
   171f4:	add	x0, x0, #0xa81
   171f8:	add	x2, x2, #0xa87
   171fc:	bl	d030 <mpfr_assert_fail@plt>
   17200:	b	170e8 <mpfr_log@@Base+0x2dc>
   17204:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   17208:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1720c:	mov	w1, #0xac                  	// #172
   17210:	add	x0, x0, #0xa81
   17214:	add	x2, x2, #0xa87
   17218:	str	x8, [sp]
   1721c:	bl	d030 <mpfr_assert_fail@plt>
   17220:	ldr	x8, [sp]
   17224:	b	17104 <mpfr_log@@Base+0x2f8>
   17228:	ldr	w20, [sp, #36]
   1722c:	ldur	w3, [x29, #-32]
   17230:	sub	x1, x29, #0x28
   17234:	mov	x0, x19
   17238:	mov	w2, w20
   1723c:	bl	cb70 <mpfr_set4@plt>
   17240:	ldr	x1, [sp, #40]
   17244:	mov	w21, w0
   17248:	cbz	x1, 17254 <mpfr_log@@Base+0x448>
   1724c:	ldr	x0, [sp, #48]
   17250:	bl	d120 <mpfr_free_func@plt>
   17254:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17258:	ldr	x1, [x0, #2800]
   1725c:	add	x0, x0, #0xaf0
   17260:	blr	x1
   17264:	ldr	w9, [sp, #32]
   17268:	str	w9, [x26, x0]
   1726c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17270:	ldr	x1, [x0, #2736]
   17274:	add	x0, x0, #0xab0
   17278:	blr	x1
   1727c:	ldr	x10, [sp, #24]
   17280:	str	x10, [x26, x0]
   17284:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17288:	ldr	x1, [x0, #2768]
   1728c:	add	x0, x0, #0xad0
   17290:	blr	x1
   17294:	ldr	x11, [sp, #16]
   17298:	str	x11, [x26, x0]
   1729c:	ldr	x8, [x19, #16]
   172a0:	cmp	x8, x11
   172a4:	b.gt	1734c <mpfr_log@@Base+0x540>
   172a8:	cmp	x8, x10
   172ac:	b.lt	1734c <mpfr_log@@Base+0x540>  // b.tstop
   172b0:	cbz	w21, 172cc <mpfr_log@@Base+0x4c0>
   172b4:	orr	w8, w9, #0x8
   172b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   172bc:	ldr	x1, [x0, #2800]
   172c0:	add	x0, x0, #0xaf0
   172c4:	blr	x1
   172c8:	str	w8, [x26, x0]
   172cc:	mov	w0, w21
   172d0:	ldp	x20, x19, [sp, #336]
   172d4:	ldp	x22, x21, [sp, #320]
   172d8:	ldp	x24, x23, [sp, #304]
   172dc:	ldp	x26, x25, [sp, #288]
   172e0:	ldp	x28, x27, [sp, #272]
   172e4:	ldp	x29, x30, [sp, #256]
   172e8:	add	sp, sp, #0x160
   172ec:	ret
   172f0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   172f4:	cmp	x25, x8
   172f8:	b.eq	17394 <mpfr_log@@Base+0x588>  // b.none
   172fc:	mov	x8, #0x2                   	// #2
   17300:	movk	x8, #0x8000, lsl #48
   17304:	cmp	x25, x8
   17308:	b.eq	173b4 <mpfr_log@@Base+0x5a8>  // b.none
   1730c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   17310:	mov	w9, #0xffffffff            	// #-1
   17314:	str	x8, [x19, #16]
   17318:	str	w9, [x19, #8]
   1731c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17320:	ldr	x1, [x0, #2800]
   17324:	add	x0, x0, #0xaf0
   17328:	blr	x1
   1732c:	mrs	x8, tpidr_el0
   17330:	ldr	w9, [x8, x0]
   17334:	mov	w21, wzr
   17338:	orr	w9, w9, #0x20
   1733c:	str	w9, [x8, x0]
   17340:	b	172cc <mpfr_log@@Base+0x4c0>
   17344:	mov	x8, xzr
   17348:	b	16e98 <mpfr_log@@Base+0x8c>
   1734c:	mov	x0, x19
   17350:	mov	w1, w21
   17354:	mov	w2, w20
   17358:	bl	d020 <mpfr_check_range@plt>
   1735c:	mov	w21, w0
   17360:	b	172cc <mpfr_log@@Base+0x4c0>
   17364:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   17368:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x1854>
   1736c:	add	x0, x0, #0xa81
   17370:	add	x2, x2, #0xf46
   17374:	mov	w1, #0x70                  	// #112
   17378:	bl	d030 <mpfr_assert_fail@plt>
   1737c:	b	16e88 <mpfr_log@@Base+0x7c>
   17380:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   17384:	mov	w21, wzr
   17388:	str	x8, [x19, #16]
   1738c:	str	w20, [x19, #8]
   17390:	b	172cc <mpfr_log@@Base+0x4c0>
   17394:	ldr	w8, [x21, #8]
   17398:	tbnz	w8, #31, 173b4 <mpfr_log@@Base+0x5a8>
   1739c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   173a0:	mov	w9, #0x1                   	// #1
   173a4:	mov	w21, wzr
   173a8:	str	x8, [x19, #16]
   173ac:	str	w9, [x19, #8]
   173b0:	b	172cc <mpfr_log@@Base+0x4c0>
   173b4:	str	x23, [x19, #16]
   173b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   173bc:	ldr	x1, [x0, #2800]
   173c0:	add	x0, x0, #0xaf0
   173c4:	blr	x1
   173c8:	mrs	x8, tpidr_el0
   173cc:	ldr	w9, [x8, x0]
   173d0:	mov	w21, wzr
   173d4:	orr	w9, w9, #0x4
   173d8:	str	w9, [x8, x0]
   173dc:	b	172cc <mpfr_log@@Base+0x4c0>
   173e0:	bl	cdd0 <mpfr_abort_prec_max@plt>

00000000000173e4 <mpfr_modf@@Base>:
   173e4:	stp	x29, x30, [sp, #-48]!
   173e8:	stp	x22, x21, [sp, #16]
   173ec:	stp	x20, x19, [sp, #32]
   173f0:	mov	w22, w3
   173f4:	mov	x20, x1
   173f8:	mov	x21, x0
   173fc:	cmp	x0, x1
   17400:	mov	x19, x2
   17404:	mov	x29, sp
   17408:	b.eq	175d8 <mpfr_modf@@Base+0x1f4>  // b.none
   1740c:	ldr	x8, [x19, #16]
   17410:	mov	x9, #0x2                   	// #2
   17414:	movk	x9, #0x8000, lsl #48
   17418:	add	x10, x9, #0x2
   1741c:	cmp	x8, x10
   17420:	b.lt	175f4 <mpfr_modf@@Base+0x210>  // b.tstop
   17424:	cmp	x8, #0x0
   17428:	b.le	1746c <mpfr_modf@@Base+0x88>
   1742c:	ldr	x9, [x19]
   17430:	cmp	x8, x9
   17434:	b.ge	17490 <mpfr_modf@@Base+0xac>  // b.tcont
   17438:	cmp	x21, x19
   1743c:	b.eq	17500 <mpfr_modf@@Base+0x11c>  // b.none
   17440:	mov	x0, x21
   17444:	mov	x1, x19
   17448:	mov	w2, w22
   1744c:	bl	c390 <mpfr_rint_trunc@plt>
   17450:	mov	w21, w0
   17454:	mov	x0, x20
   17458:	mov	x1, x19
   1745c:	mov	w2, w22
   17460:	bl	c320 <mpfr_frac@plt>
   17464:	mov	w20, w0
   17468:	b	17530 <mpfr_modf@@Base+0x14c>
   1746c:	cmp	x20, x19
   17470:	b.eq	174b4 <mpfr_modf@@Base+0xd0>  // b.none
   17474:	ldr	w3, [x19, #8]
   17478:	mov	x0, x20
   1747c:	mov	x1, x19
   17480:	mov	w2, w22
   17484:	bl	cb70 <mpfr_set4@plt>
   17488:	mov	w8, w0
   1748c:	b	174b8 <mpfr_modf@@Base+0xd4>
   17490:	cmp	x21, x19
   17494:	b.eq	17580 <mpfr_modf@@Base+0x19c>  // b.none
   17498:	ldr	w3, [x19, #8]
   1749c:	mov	x0, x21
   174a0:	mov	x1, x19
   174a4:	mov	w2, w22
   174a8:	bl	cb70 <mpfr_set4@plt>
   174ac:	mov	w8, w0
   174b0:	b	17584 <mpfr_modf@@Base+0x1a0>
   174b4:	mov	w8, wzr
   174b8:	ldr	w9, [x19, #8]
   174bc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   174c0:	str	x10, [x21, #16]
   174c4:	str	w9, [x21, #8]
   174c8:	cbz	w8, 175c4 <mpfr_modf@@Base+0x1e0>
   174cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   174d0:	ldr	x1, [x0, #2800]
   174d4:	add	x0, x0, #0xaf0
   174d8:	blr	x1
   174dc:	mrs	x9, tpidr_el0
   174e0:	ldr	w10, [x9, x0]
   174e4:	cmp	w8, #0x1
   174e8:	mov	w8, #0x4                   	// #4
   174ec:	mov	w11, #0x8                   	// #8
   174f0:	orr	w10, w10, #0x8
   174f4:	str	w10, [x9, x0]
   174f8:	csel	w8, w11, w8, lt  // lt = tstop
   174fc:	b	175c4 <mpfr_modf@@Base+0x1e0>
   17500:	cmp	x20, x19
   17504:	b.eq	17668 <mpfr_modf@@Base+0x284>  // b.none
   17508:	mov	x0, x20
   1750c:	mov	x1, x19
   17510:	mov	w2, w22
   17514:	bl	c320 <mpfr_frac@plt>
   17518:	mov	w20, w0
   1751c:	mov	x0, x21
   17520:	mov	x1, x19
   17524:	mov	w2, w22
   17528:	bl	c390 <mpfr_rint_trunc@plt>
   1752c:	mov	w21, w0
   17530:	cmp	w21, #0x1
   17534:	mov	w8, #0x1                   	// #1
   17538:	cinc	w8, w8, lt  // lt = tstop
   1753c:	cmp	w21, #0x0
   17540:	mov	w9, #0x4                   	// #4
   17544:	mov	w10, #0x8                   	// #8
   17548:	csel	w8, wzr, w8, eq  // eq = none
   1754c:	cmp	w20, #0x1
   17550:	csel	w9, w10, w9, lt  // lt = tstop
   17554:	cmp	w20, #0x0
   17558:	csel	w9, wzr, w9, eq  // eq = none
   1755c:	orr	w8, w9, w8
   17560:	cbz	w8, 175c4 <mpfr_modf@@Base+0x1e0>
   17564:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17568:	ldr	x1, [x0, #2800]
   1756c:	add	x0, x0, #0xaf0
   17570:	blr	x1
   17574:	mrs	x9, tpidr_el0
   17578:	ldr	w10, [x9, x0]
   1757c:	b	175bc <mpfr_modf@@Base+0x1d8>
   17580:	mov	w8, wzr
   17584:	ldr	w9, [x19, #8]
   17588:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1758c:	str	x10, [x20, #16]
   17590:	str	w9, [x20, #8]
   17594:	cbz	w8, 175c4 <mpfr_modf@@Base+0x1e0>
   17598:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1759c:	ldr	x1, [x0, #2800]
   175a0:	add	x0, x0, #0xaf0
   175a4:	blr	x1
   175a8:	mrs	x9, tpidr_el0
   175ac:	ldr	w10, [x9, x0]
   175b0:	cmp	w8, #0x1
   175b4:	mov	w8, #0x1                   	// #1
   175b8:	cinc	w8, w8, lt  // lt = tstop
   175bc:	orr	w10, w10, #0x8
   175c0:	str	w10, [x9, x0]
   175c4:	ldp	x20, x19, [sp, #32]
   175c8:	ldp	x22, x21, [sp, #16]
   175cc:	mov	w0, w8
   175d0:	ldp	x29, x30, [sp], #48
   175d4:	ret
   175d8:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   175dc:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   175e0:	add	x0, x0, #0xa8f
   175e4:	add	x2, x2, #0xa96
   175e8:	mov	w1, #0x2b                  	// #43
   175ec:	bl	d030 <mpfr_assert_fail@plt>
   175f0:	b	1740c <mpfr_modf@@Base+0x28>
   175f4:	cmp	x8, x9
   175f8:	b.ne	17628 <mpfr_modf@@Base+0x244>  // b.any
   175fc:	str	x9, [x21, #16]
   17600:	str	x9, [x20, #16]
   17604:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17608:	ldr	x1, [x0, #2800]
   1760c:	add	x0, x0, #0xaf0
   17610:	blr	x1
   17614:	mrs	x9, tpidr_el0
   17618:	ldr	w10, [x9, x0]
   1761c:	mov	w8, wzr
   17620:	orr	w10, w10, #0x4
   17624:	b	175c0 <mpfr_modf@@Base+0x1dc>
   17628:	ldr	w9, [x19, #8]
   1762c:	str	w9, [x21, #8]
   17630:	ldr	w10, [x19, #8]
   17634:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   17638:	cmp	x8, x9
   1763c:	mov	w8, wzr
   17640:	str	w10, [x20, #8]
   17644:	b.ne	17658 <mpfr_modf@@Base+0x274>  // b.any
   17648:	str	x9, [x21, #16]
   1764c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   17650:	str	x9, [x20, #16]
   17654:	b	175c4 <mpfr_modf@@Base+0x1e0>
   17658:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1765c:	str	x9, [x21, #16]
   17660:	str	x9, [x20, #16]
   17664:	b	175c4 <mpfr_modf@@Base+0x1e0>
   17668:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1766c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   17670:	add	x0, x0, #0xa8f
   17674:	add	x2, x2, #0xaa1
   17678:	mov	w1, #0x60                  	// #96
   1767c:	bl	d030 <mpfr_assert_fail@plt>
   17680:	b	17508 <mpfr_modf@@Base+0x124>

0000000000017684 <mpfr_mul_2exp@@Base>:
   17684:	stp	x29, x30, [sp, #-16]!
   17688:	mov	x29, sp
   1768c:	bl	c780 <mpfr_mul_2ui@plt>
   17690:	ldp	x29, x30, [sp], #16
   17694:	ret

0000000000017698 <mpfr_mul_2si@@Base>:
   17698:	stp	x29, x30, [sp, #-80]!
   1769c:	stp	x26, x25, [sp, #16]
   176a0:	stp	x24, x23, [sp, #32]
   176a4:	stp	x22, x21, [sp, #48]
   176a8:	stp	x20, x19, [sp, #64]
   176ac:	ldr	x24, [x1, #16]
   176b0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   176b4:	mov	w20, w3
   176b8:	mov	x19, x0
   176bc:	cmp	x24, x8
   176c0:	mov	x29, sp
   176c4:	b.le	17968 <mpfr_mul_2si@@Base+0x2d0>
   176c8:	mov	x21, x2
   176cc:	cmp	x19, x1
   176d0:	b.eq	17720 <mpfr_mul_2si@@Base+0x88>  // b.none
   176d4:	ldr	w8, [x1, #8]
   176d8:	ldr	x22, [x19, #24]
   176dc:	str	w8, [x19, #8]
   176e0:	ldr	x8, [x19]
   176e4:	ldr	x9, [x1]
   176e8:	cmp	x8, x9
   176ec:	b.ne	1772c <mpfr_mul_2si@@Base+0x94>  // b.any
   176f0:	ldr	x1, [x1, #24]
   176f4:	cmp	x22, x1
   176f8:	b.eq	17720 <mpfr_mul_2si@@Base+0x88>  // b.none
   176fc:	sub	x8, x9, #0x1
   17700:	add	x9, x9, #0x3e
   17704:	cmp	x8, #0x0
   17708:	csel	x8, x9, x8, lt  // lt = tstop
   1770c:	asr	x8, x8, #6
   17710:	lsl	x8, x8, #3
   17714:	add	x2, x8, #0x8
   17718:	mov	x0, x22
   1771c:	bl	be50 <memcpy@plt>
   17720:	mov	w25, wzr
   17724:	tbz	x21, #63, 1788c <mpfr_mul_2si@@Base+0x1f4>
   17728:	b	178c0 <mpfr_mul_2si@@Base+0x228>
   1772c:	sub	x10, x9, #0x1
   17730:	add	x11, x9, #0x3e
   17734:	sub	x13, x8, #0x1
   17738:	cmp	x10, #0x0
   1773c:	add	x14, x8, #0x3e
   17740:	csel	x10, x11, x10, lt  // lt = tstop
   17744:	cmp	x13, #0x0
   17748:	asr	x12, x10, #6
   1774c:	csel	x10, x14, x13, lt  // lt = tstop
   17750:	asr	x26, x10, #6
   17754:	add	x13, x12, #0x1
   17758:	cmp	x8, x9
   1775c:	add	x2, x26, #0x1
   17760:	b.ge	179b0 <mpfr_mul_2si@@Base+0x318>  // b.tcont
   17764:	ldr	x11, [x1, #24]
   17768:	neg	w8, w8
   1776c:	ands	x9, x8, #0x3f
   17770:	mvn	x10, x26
   17774:	add	x8, x11, x13, lsl #3
   17778:	add	x8, x8, x10, lsl #3
   1777c:	b.eq	179e8 <mpfr_mul_2si@@Base+0x350>  // b.none
   17780:	ldr	x10, [x8]
   17784:	sub	x9, x9, #0x1
   17788:	mov	w14, #0x1                   	// #1
   1778c:	lsl	x14, x14, x9
   17790:	sub	x15, x14, #0x1
   17794:	and	x9, x10, x14
   17798:	and	x10, x10, x15
   1779c:	cbz	w20, 177d4 <mpfr_mul_2si@@Base+0x13c>
   177a0:	cbz	x9, 177d4 <mpfr_mul_2si@@Base+0x13c>
   177a4:	lsl	x23, x14, #1
   177a8:	cmp	w20, #0x5
   177ac:	b.eq	1785c <mpfr_mul_2si@@Base+0x1c4>  // b.none
   177b0:	cmp	w20, #0x1
   177b4:	b.eq	17810 <mpfr_mul_2si@@Base+0x178>  // b.none
   177b8:	cbnz	w20, 17800 <mpfr_mul_2si@@Base+0x168>
   177bc:	cbz	x9, 17810 <mpfr_mul_2si@@Base+0x178>
   177c0:	cbnz	x10, 17834 <mpfr_mul_2si@@Base+0x19c>
   177c4:	ldr	x9, [x8]
   177c8:	tst	x9, x23
   177cc:	b.ne	17834 <mpfr_mul_2si@@Base+0x19c>  // b.any
   177d0:	b	17818 <mpfr_mul_2si@@Base+0x180>
   177d4:	cbnz	x10, 177a4 <mpfr_mul_2si@@Base+0x10c>
   177d8:	sub	x13, x13, x2
   177dc:	cbz	x13, 177a4 <mpfr_mul_2si@@Base+0x10c>
   177e0:	mvn	x10, x26
   177e4:	add	x12, x10, x12
   177e8:	ldr	x10, [x11, x12, lsl #3]
   177ec:	subs	x12, x12, #0x1
   177f0:	cset	w13, cs  // cs = hs, nlast
   177f4:	cbnz	x10, 177a4 <mpfr_mul_2si@@Base+0x10c>
   177f8:	tbnz	w13, #0, 177e8 <mpfr_mul_2si@@Base+0x150>
   177fc:	b	177a4 <mpfr_mul_2si@@Base+0x10c>
   17800:	ldr	w11, [x1, #8]
   17804:	add	w11, w20, w11, lsr #31
   17808:	cmp	w11, #0x3
   1780c:	b.ne	1782c <mpfr_mul_2si@@Base+0x194>  // b.any
   17810:	orr	x9, x10, x9
   17814:	cbz	x9, 1785c <mpfr_mul_2si@@Base+0x1c4>
   17818:	ldr	w9, [x1, #8]
   1781c:	neg	w25, w9
   17820:	cmp	x22, x8
   17824:	b.ne	17868 <mpfr_mul_2si@@Base+0x1d0>  // b.any
   17828:	b	17878 <mpfr_mul_2si@@Base+0x1e0>
   1782c:	orr	x9, x10, x9
   17830:	cbz	x9, 1785c <mpfr_mul_2si@@Base+0x1c4>
   17834:	ldr	w25, [x1, #8]
   17838:	mov	x0, x22
   1783c:	mov	x1, x8
   17840:	mov	x3, x23
   17844:	bl	bf60 <__gmpn_add_1@plt>
   17848:	cbz	x0, 17878 <mpfr_mul_2si@@Base+0x1e0>
   1784c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   17850:	add	x24, x24, #0x1
   17854:	str	x8, [x22, x26, lsl #3]
   17858:	b	17878 <mpfr_mul_2si@@Base+0x1e0>
   1785c:	mov	w25, wzr
   17860:	cmp	x22, x8
   17864:	b.eq	17878 <mpfr_mul_2si@@Base+0x1e0>  // b.none
   17868:	lsl	x2, x2, #3
   1786c:	mov	x0, x22
   17870:	mov	x1, x8
   17874:	bl	be50 <memcpy@plt>
   17878:	ldr	x8, [x22]
   1787c:	neg	x9, x23
   17880:	and	x8, x8, x9
   17884:	str	x8, [x22]
   17888:	tbnz	x21, #63, 178c0 <mpfr_mul_2si@@Base+0x228>
   1788c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17890:	ldr	x1, [x0, #2768]
   17894:	add	x0, x0, #0xad0
   17898:	blr	x1
   1789c:	mrs	x8, tpidr_el0
   178a0:	ldr	x8, [x8, x0]
   178a4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   178a8:	add	x9, x21, x9
   178ac:	cmp	x8, x9
   178b0:	b.lt	17950 <mpfr_mul_2si@@Base+0x2b8>  // b.tstop
   178b4:	sub	x8, x8, x21
   178b8:	cmp	x24, x8
   178bc:	b.gt	17950 <mpfr_mul_2si@@Base+0x2b8>
   178c0:	tbz	x21, #63, 178f8 <mpfr_mul_2si@@Base+0x260>
   178c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   178c8:	ldr	x1, [x0, #2736]
   178cc:	add	x0, x0, #0xab0
   178d0:	blr	x1
   178d4:	mrs	x8, tpidr_el0
   178d8:	ldr	x8, [x8, x0]
   178dc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   178e0:	add	x9, x21, x9
   178e4:	cmp	x8, x9
   178e8:	b.gt	1797c <mpfr_mul_2si@@Base+0x2e4>
   178ec:	sub	x9, x8, x21
   178f0:	cmp	x24, x9
   178f4:	b.lt	1797c <mpfr_mul_2si@@Base+0x2e4>  // b.tstop
   178f8:	add	x8, x24, x21
   178fc:	str	x8, [x19, #16]
   17900:	mov	w8, #0x1                   	// #1
   17904:	cbz	w8, 17938 <mpfr_mul_2si@@Base+0x2a0>
   17908:	cbz	w25, 17934 <mpfr_mul_2si@@Base+0x29c>
   1790c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17910:	ldr	x1, [x0, #2800]
   17914:	add	x0, x0, #0xaf0
   17918:	blr	x1
   1791c:	mrs	x8, tpidr_el0
   17920:	ldr	w9, [x8, x0]
   17924:	orr	w9, w9, #0x8
   17928:	str	w9, [x8, x0]
   1792c:	mov	w0, w25
   17930:	b	17938 <mpfr_mul_2si@@Base+0x2a0>
   17934:	mov	w0, wzr
   17938:	ldp	x20, x19, [sp, #64]
   1793c:	ldp	x22, x21, [sp, #48]
   17940:	ldp	x24, x23, [sp, #32]
   17944:	ldp	x26, x25, [sp, #16]
   17948:	ldp	x29, x30, [sp], #80
   1794c:	ret
   17950:	ldr	w2, [x19, #8]
   17954:	mov	x0, x19
   17958:	mov	w1, w20
   1795c:	bl	c3a0 <mpfr_overflow@plt>
   17960:	mov	w8, wzr
   17964:	b	17904 <mpfr_mul_2si@@Base+0x26c>
   17968:	ldr	w3, [x1, #8]
   1796c:	mov	x0, x19
   17970:	mov	w2, w20
   17974:	bl	cb70 <mpfr_set4@plt>
   17978:	b	17938 <mpfr_mul_2si@@Base+0x2a0>
   1797c:	cbnz	w20, 17a50 <mpfr_mul_2si@@Base+0x3b8>
   17980:	mov	x9, #0x4000000000000000    	// #4611686018427387904
   17984:	add	x9, x21, x9
   17988:	cmp	x8, x9
   1798c:	b.gt	17a4c <mpfr_mul_2si@@Base+0x3b4>
   17990:	mvn	x9, x21
   17994:	add	x8, x8, x9
   17998:	cmp	x24, x8
   1799c:	b.lt	17a4c <mpfr_mul_2si@@Base+0x3b4>  // b.tstop
   179a0:	ldr	w8, [x19, #8]
   179a4:	tbnz	w8, #31, 17a38 <mpfr_mul_2si@@Base+0x3a0>
   179a8:	tbz	w25, #31, 17a40 <mpfr_mul_2si@@Base+0x3a8>
   179ac:	b	17a68 <mpfr_mul_2si@@Base+0x3d0>
   179b0:	ldr	x1, [x1, #24]
   179b4:	sub	x23, x2, x13
   179b8:	add	x0, x22, x23, lsl #3
   179bc:	cmp	x0, x1
   179c0:	b.eq	179cc <mpfr_mul_2si@@Base+0x334>  // b.none
   179c4:	lsl	x2, x13, #3
   179c8:	bl	be50 <memcpy@plt>
   179cc:	lsl	x2, x23, #3
   179d0:	mov	x0, x22
   179d4:	mov	w1, wzr
   179d8:	bl	c5b0 <memset@plt>
   179dc:	mov	w25, wzr
   179e0:	tbz	x21, #63, 1788c <mpfr_mul_2si@@Base+0x1f4>
   179e4:	b	178c0 <mpfr_mul_2si@@Base+0x228>
   179e8:	ldur	x10, [x8, #-8]
   179ec:	and	x9, x10, #0x8000000000000000
   179f0:	and	x10, x10, #0x7fffffffffffffff
   179f4:	cbz	w20, 17a04 <mpfr_mul_2si@@Base+0x36c>
   179f8:	cbz	x9, 17a04 <mpfr_mul_2si@@Base+0x36c>
   179fc:	mov	w23, #0x1                   	// #1
   17a00:	b	177a8 <mpfr_mul_2si@@Base+0x110>
   17a04:	mov	w23, #0x1                   	// #1
   17a08:	cbnz	x10, 177a8 <mpfr_mul_2si@@Base+0x110>
   17a0c:	sub	x13, x12, x2
   17a10:	cbz	x13, 177a8 <mpfr_mul_2si@@Base+0x110>
   17a14:	sub	x10, x12, x26
   17a18:	sub	x12, x10, #0x2
   17a1c:	mov	w23, #0x1                   	// #1
   17a20:	ldr	x10, [x11, x12, lsl #3]
   17a24:	subs	x12, x12, #0x1
   17a28:	cset	w13, cs  // cs = hs, nlast
   17a2c:	cbnz	x10, 177a8 <mpfr_mul_2si@@Base+0x110>
   17a30:	tbnz	w13, #0, 17a20 <mpfr_mul_2si@@Base+0x388>
   17a34:	b	177a8 <mpfr_mul_2si@@Base+0x110>
   17a38:	cmp	w25, #0x1
   17a3c:	b.ge	17a68 <mpfr_mul_2si@@Base+0x3d0>  // b.tcont
   17a40:	mov	x0, x19
   17a44:	bl	c360 <mpfr_powerof2_raw@plt>
   17a48:	cbz	w0, 17a68 <mpfr_mul_2si@@Base+0x3d0>
   17a4c:	mov	w20, #0x1                   	// #1
   17a50:	ldr	w2, [x19, #8]
   17a54:	mov	x0, x19
   17a58:	mov	w1, w20
   17a5c:	bl	c880 <mpfr_underflow@plt>
   17a60:	mov	w8, wzr
   17a64:	b	17904 <mpfr_mul_2si@@Base+0x26c>
   17a68:	mov	w20, wzr
   17a6c:	b	17a50 <mpfr_mul_2si@@Base+0x3b8>

0000000000017a70 <mpfr_mul_2ui@@Base>:
   17a70:	stp	x29, x30, [sp, #-64]!
   17a74:	stp	x22, x21, [sp, #32]
   17a78:	stp	x20, x19, [sp, #48]
   17a7c:	mov	w20, w3
   17a80:	mov	x21, x0
   17a84:	cmp	x0, x1
   17a88:	mov	x22, x2
   17a8c:	stp	x24, x23, [sp, #16]
   17a90:	mov	x29, sp
   17a94:	b.eq	17ab0 <mpfr_mul_2ui@@Base+0x40>  // b.none
   17a98:	ldr	w3, [x1, #8]
   17a9c:	mov	x0, x21
   17aa0:	mov	w2, w20
   17aa4:	bl	cb70 <mpfr_set4@plt>
   17aa8:	mov	w19, w0
   17aac:	b	17ab4 <mpfr_mul_2ui@@Base+0x44>
   17ab0:	mov	w19, wzr
   17ab4:	ldr	x8, [x21, #16]
   17ab8:	mov	x9, #0x4                   	// #4
   17abc:	movk	x9, #0x8000, lsl #48
   17ac0:	cmp	x8, x9
   17ac4:	b.lt	17b40 <mpfr_mul_2ui@@Base+0xd0>  // b.tstop
   17ac8:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   17acc:	tbz	x22, #63, 17af8 <mpfr_mul_2ui@@Base+0x88>
   17ad0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   17ad4:	mov	x0, x21
   17ad8:	mov	x1, x21
   17adc:	mov	w3, w20
   17ae0:	add	x22, x22, x24
   17ae4:	bl	c780 <mpfr_mul_2ui@plt>
   17ae8:	cmp	w0, #0x0
   17aec:	csel	w23, w23, w0, eq  // eq = none
   17af0:	cbz	w0, 17acc <mpfr_mul_2ui@@Base+0x5c>
   17af4:	b	17b44 <mpfr_mul_2ui@@Base+0xd4>
   17af8:	ldr	x8, [x21, #16]
   17afc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17b00:	ldr	x1, [x0, #2768]
   17b04:	add	x0, x0, #0xad0
   17b08:	blr	x1
   17b0c:	mrs	x9, tpidr_el0
   17b10:	ldr	x9, [x9, x0]
   17b14:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   17b18:	add	x10, x22, x10
   17b1c:	cmp	x9, x10
   17b20:	b.lt	17b5c <mpfr_mul_2ui@@Base+0xec>  // b.tstop
   17b24:	sub	x9, x9, x22
   17b28:	cmp	x8, x9
   17b2c:	b.gt	17b5c <mpfr_mul_2ui@@Base+0xec>
   17b30:	add	x8, x8, x22
   17b34:	str	x8, [x21, #16]
   17b38:	mov	w8, #0x1                   	// #1
   17b3c:	cbz	w8, 17b44 <mpfr_mul_2ui@@Base+0xd4>
   17b40:	mov	w23, w19
   17b44:	mov	w0, w23
   17b48:	ldp	x20, x19, [sp, #48]
   17b4c:	ldp	x22, x21, [sp, #32]
   17b50:	ldp	x24, x23, [sp, #16]
   17b54:	ldp	x29, x30, [sp], #64
   17b58:	ret
   17b5c:	ldr	w2, [x21, #8]
   17b60:	mov	x0, x21
   17b64:	mov	w1, w20
   17b68:	bl	c3a0 <mpfr_overflow@plt>
   17b6c:	mov	w23, w0
   17b70:	mov	w8, wzr
   17b74:	cbnz	w8, 17b40 <mpfr_mul_2ui@@Base+0xd0>
   17b78:	b	17b44 <mpfr_mul_2ui@@Base+0xd4>

0000000000017b7c <mpfr_mul@@Base>:
   17b7c:	stp	x29, x30, [sp, #-96]!
   17b80:	stp	x28, x27, [sp, #16]
   17b84:	stp	x26, x25, [sp, #32]
   17b88:	stp	x24, x23, [sp, #48]
   17b8c:	stp	x22, x21, [sp, #64]
   17b90:	stp	x20, x19, [sp, #80]
   17b94:	mov	x29, sp
   17b98:	sub	sp, sp, #0xc0
   17b9c:	ldr	x17, [x1, #16]
   17ba0:	mov	x8, #0x2                   	// #2
   17ba4:	movk	x8, #0x8000, lsl #48
   17ba8:	add	x9, x8, #0x2
   17bac:	mov	x22, x2
   17bb0:	mov	x26, x1
   17bb4:	cmp	x17, x9
   17bb8:	mov	x19, x0
   17bbc:	b.lt	18070 <mpfr_mul@@Base+0x4f4>  // b.tstop
   17bc0:	ldr	x18, [x22, #16]
   17bc4:	cmp	x18, x9
   17bc8:	b.lt	18070 <mpfr_mul@@Base+0x4f4>  // b.tstop
   17bcc:	ldr	x25, [x19]
   17bd0:	ldr	x23, [x26]
   17bd4:	ldr	x20, [x22]
   17bd8:	mov	w16, w3
   17bdc:	cmp	x25, x23
   17be0:	b.ne	17c94 <mpfr_mul@@Base+0x118>  // b.any
   17be4:	cmp	x25, x20
   17be8:	b.ne	17c94 <mpfr_mul@@Base+0x118>  // b.any
   17bec:	cmp	x25, #0x3f
   17bf0:	b.gt	17c14 <mpfr_mul@@Base+0x98>
   17bf4:	mov	x0, x19
   17bf8:	mov	x1, x26
   17bfc:	mov	x2, x22
   17c00:	mov	w3, w16
   17c04:	mov	x4, x25
   17c08:	bl	187c4 <mpfr_mul@@Base+0xc48>
   17c0c:	mov	w27, w0
   17c10:	b	1804c <mpfr_mul@@Base+0x4d0>
   17c14:	cmp	x25, #0x40
   17c18:	b.eq	17c44 <mpfr_mul@@Base+0xc8>  // b.none
   17c1c:	cmp	x25, #0x7f
   17c20:	b.gt	17c44 <mpfr_mul@@Base+0xc8>
   17c24:	mov	x0, x19
   17c28:	mov	x1, x26
   17c2c:	mov	x2, x22
   17c30:	mov	w3, w16
   17c34:	mov	x4, x25
   17c38:	bl	189f8 <mpfr_mul@@Base+0xe7c>
   17c3c:	mov	w27, w0
   17c40:	b	1804c <mpfr_mul@@Base+0x4d0>
   17c44:	cmp	x25, #0x40
   17c48:	b.ne	17c68 <mpfr_mul@@Base+0xec>  // b.any
   17c4c:	mov	x0, x19
   17c50:	mov	x1, x26
   17c54:	mov	x2, x22
   17c58:	mov	w3, w16
   17c5c:	bl	18cd4 <mpfr_mul@@Base+0x1158>
   17c60:	mov	w27, w0
   17c64:	b	1804c <mpfr_mul@@Base+0x4d0>
   17c68:	sub	x8, x25, #0x81
   17c6c:	cmp	x8, #0x3e
   17c70:	b.hi	17c94 <mpfr_mul@@Base+0x118>  // b.pmore
   17c74:	mov	x0, x19
   17c78:	mov	x1, x26
   17c7c:	mov	x2, x22
   17c80:	mov	w3, w16
   17c84:	mov	x4, x25
   17c88:	bl	18ecc <mpfr_mul@@Base+0x1350>
   17c8c:	mov	w27, w0
   17c90:	b	1804c <mpfr_mul@@Base+0x4d0>
   17c94:	ldr	w3, [x26, #8]
   17c98:	ldr	w6, [x22, #8]
   17c9c:	add	x24, x20, x23
   17ca0:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   17ca4:	cmp	x24, x8
   17ca8:	b.cs	180d0 <mpfr_mul@@Base+0x554>  // b.hs, b.nlast
   17cac:	sub	x8, x23, #0x1
   17cb0:	add	x9, x23, #0x3e
   17cb4:	sub	x10, x20, #0x1
   17cb8:	cmp	x8, #0x0
   17cbc:	add	x11, x20, #0x3e
   17cc0:	csel	x8, x9, x8, lt  // lt = tstop
   17cc4:	cmp	x10, #0x0
   17cc8:	asr	x28, x8, #6
   17ccc:	csel	x8, x11, x10, lt  // lt = tstop
   17cd0:	sub	x12, x24, #0x1
   17cd4:	asr	x20, x8, #6
   17cd8:	add	x13, x24, #0x3e
   17cdc:	cmp	x12, #0x0
   17ce0:	add	x27, x28, #0x1
   17ce4:	add	x21, x20, #0x1
   17ce8:	csel	x8, x13, x12, lt  // lt = tstop
   17cec:	add	x7, x21, x27
   17cf0:	asr	x0, x8, #6
   17cf4:	lsl	x1, x7, #3
   17cf8:	add	x5, x0, #0x1
   17cfc:	cmp	x1, #0x4, lsl #12
   17d00:	stur	xzr, [x29, #-16]
   17d04:	b.hi	18114 <mpfr_mul@@Base+0x598>  // b.pmore
   17d08:	add	x9, x1, #0xf
   17d0c:	mov	x8, sp
   17d10:	and	x9, x9, #0xfffffffffffffff0
   17d14:	sub	x23, x8, x9
   17d18:	mov	sp, x23
   17d1c:	cmp	x28, x20
   17d20:	csel	x2, x21, x27, lt  // lt = tstop
   17d24:	csel	x4, x27, x21, lt  // lt = tstop
   17d28:	csel	x10, x26, x22, lt  // lt = tstop
   17d2c:	csel	x11, x22, x26, lt  // lt = tstop
   17d30:	cmp	x2, #0x2
   17d34:	stp	x10, x11, [x29, #-120]
   17d38:	b.gt	17e30 <mpfr_mul@@Base+0x2b4>
   17d3c:	ldr	x9, [x11, #24]
   17d40:	ldr	x10, [x10, #24]
   17d44:	cmp	x2, #0x1
   17d48:	ldr	x11, [x9]
   17d4c:	ldr	x12, [x10]
   17d50:	umulh	x8, x11, x12
   17d54:	mul	x11, x12, x11
   17d58:	stp	x11, x8, [x23]
   17d5c:	b.eq	17dc8 <mpfr_mul@@Base+0x24c>  // b.none
   17d60:	ldr	x11, [x9, #8]
   17d64:	ldr	x13, [x10]
   17d68:	mov	x12, xzr
   17d6c:	umulh	x14, x11, x13
   17d70:	mul	x13, x13, x11
   17d74:	adds	x11, x8, x13
   17d78:	adc	x8, x14, x12
   17d7c:	cmp	x4, #0x1
   17d80:	stp	x11, x8, [x23, #8]
   17d84:	b.eq	17dc8 <mpfr_mul@@Base+0x24c>  // b.none
   17d88:	ldr	x10, [x10, #8]
   17d8c:	ldp	x13, x9, [x9]
   17d90:	mov	x12, xzr
   17d94:	umulh	x15, x9, x10
   17d98:	umulh	x14, x13, x10
   17d9c:	mul	x9, x9, x10
   17da0:	mul	x13, x10, x13
   17da4:	adds	x10, x14, x9
   17da8:	adc	x9, x15, x12
   17dac:	adds	x12, x11, x13
   17db0:	adc	x8, x8, x10
   17db4:	cmp	x8, x10
   17db8:	stp	x8, x9, [x23, #16]
   17dbc:	cinc	x8, x9, cc  // cc = lo, ul, last
   17dc0:	str	x12, [x23, #8]
   17dc4:	str	x8, [x23, #24]
   17dc8:	sub	x9, x7, x5
   17dcc:	lsr	x27, x8, #63
   17dd0:	add	x23, x23, x9, lsl #3
   17dd4:	tbnz	x8, #63, 17e84 <mpfr_mul@@Base+0x308>
   17dd8:	stur	x27, [x29, #-136]
   17ddc:	mov	w27, w3
   17de0:	mov	w3, #0x1                   	// #1
   17de4:	mov	x25, x0
   17de8:	mov	x0, x23
   17dec:	mov	x1, x23
   17df0:	mov	x2, x5
   17df4:	mov	x22, x18
   17df8:	mov	w20, w16
   17dfc:	mov	x21, x17
   17e00:	mov	x26, x5
   17e04:	mov	w28, w6
   17e08:	bl	c120 <__gmpn_lshift@plt>
   17e0c:	mov	w3, w27
   17e10:	ldur	x27, [x29, #-136]
   17e14:	mov	w6, w28
   17e18:	mov	x5, x26
   17e1c:	mov	x0, x25
   17e20:	mov	x18, x22
   17e24:	mov	x17, x21
   17e28:	mov	w16, w20
   17e2c:	b	17e84 <mpfr_mul@@Base+0x308>
   17e30:	cmp	x4, #0x15
   17e34:	stp	x0, x18, [x29, #-96]
   17e38:	stp	w6, w3, [x29, #-104]
   17e3c:	b.ge	18204 <mpfr_mul@@Base+0x688>  // b.tcont
   17e40:	mov	x21, x7
   17e44:	mov	x26, x5
   17e48:	mov	x22, x17
   17e4c:	mov	w28, w16
   17e50:	ldr	x1, [x11, #24]
   17e54:	ldr	x3, [x10, #24]
   17e58:	mov	x0, x23
   17e5c:	bl	cc80 <__gmpn_mul@plt>
   17e60:	sub	x8, x21, x26
   17e64:	lsr	x27, x0, #63
   17e68:	mov	x5, x26
   17e6c:	add	x23, x23, x8, lsl #3
   17e70:	tbz	x0, #63, 182cc <mpfr_mul@@Base+0x750>
   17e74:	ldp	x0, x18, [x29, #-96]
   17e78:	ldp	w6, w3, [x29, #-104]
   17e7c:	mov	w16, w28
   17e80:	mov	x17, x22
   17e84:	ldr	x8, [x19]
   17e88:	add	x9, x18, x17
   17e8c:	stur	x9, [x29, #-88]
   17e90:	add	x9, x27, x9
   17e94:	sub	x21, x9, #0x1
   17e98:	sub	x9, x8, #0x1
   17e9c:	ldr	x26, [x19, #24]
   17ea0:	add	x10, x8, #0x3e
   17ea4:	cmp	x9, #0x0
   17ea8:	csel	x9, x10, x9, lt  // lt = tstop
   17eac:	asr	x28, x9, #6
   17eb0:	mul	w25, w6, w3
   17eb4:	cmp	x8, x24
   17eb8:	add	x2, x28, #0x1
   17ebc:	b.ge	18154 <mpfr_mul@@Base+0x5d8>  // b.tcont
   17ec0:	neg	w8, w8
   17ec4:	add	x9, x23, x5, lsl #3
   17ec8:	mvn	x10, x28
   17ecc:	ands	x8, x8, #0x3f
   17ed0:	add	x1, x9, x10, lsl #3
   17ed4:	b.eq	181b4 <mpfr_mul@@Base+0x638>  // b.none
   17ed8:	ldr	x9, [x1]
   17edc:	sub	x8, x8, #0x1
   17ee0:	mov	w10, #0x1                   	// #1
   17ee4:	lsl	x10, x10, x8
   17ee8:	sub	x11, x10, #0x1
   17eec:	and	x8, x9, x10
   17ef0:	and	x9, x9, x11
   17ef4:	cbz	w16, 17f3c <mpfr_mul@@Base+0x3c0>
   17ef8:	cbz	x8, 17f3c <mpfr_mul@@Base+0x3c0>
   17efc:	lsl	x24, x10, #1
   17f00:	cmp	w16, #0x5
   17f04:	b.eq	17f68 <mpfr_mul@@Base+0x3ec>  // b.none
   17f08:	cmp	w16, #0x1
   17f0c:	b.eq	17f80 <mpfr_mul@@Base+0x404>  // b.none
   17f10:	cbnz	w16, 17f74 <mpfr_mul@@Base+0x3f8>
   17f14:	cbz	x8, 17f80 <mpfr_mul@@Base+0x404>
   17f18:	mov	x20, x27
   17f1c:	mov	w22, w16
   17f20:	cbnz	x9, 17fbc <mpfr_mul@@Base+0x440>
   17f24:	ldr	x8, [x1]
   17f28:	tst	x8, x24
   17f2c:	b.ne	17fbc <mpfr_mul@@Base+0x440>  // b.any
   17f30:	neg	w27, w25
   17f34:	mov	w16, w22
   17f38:	b	17f90 <mpfr_mul@@Base+0x414>
   17f3c:	cbnz	x9, 17efc <mpfr_mul@@Base+0x380>
   17f40:	sub	x11, x5, x2
   17f44:	cbz	x11, 17efc <mpfr_mul@@Base+0x380>
   17f48:	mvn	x9, x28
   17f4c:	add	x11, x9, x0
   17f50:	ldr	x9, [x23, x11, lsl #3]
   17f54:	subs	x11, x11, #0x1
   17f58:	cset	w12, cs  // cs = hs, nlast
   17f5c:	cbnz	x9, 17efc <mpfr_mul@@Base+0x380>
   17f60:	tbnz	w12, #0, 17f50 <mpfr_mul@@Base+0x3d4>
   17f64:	b	17efc <mpfr_mul@@Base+0x380>
   17f68:	mov	x20, x27
   17f6c:	mov	w27, wzr
   17f70:	b	17f90 <mpfr_mul@@Base+0x414>
   17f74:	add	w10, w16, w25, lsr #31
   17f78:	cmp	w10, #0x3
   17f7c:	b.ne	17fac <mpfr_mul@@Base+0x430>  // b.any
   17f80:	orr	x8, x9, x8
   17f84:	cmp	x8, #0x0
   17f88:	mov	x20, x27
   17f8c:	csneg	w27, wzr, w25, eq  // eq = none
   17f90:	mov	w22, w16
   17f94:	cmp	x26, x1
   17f98:	b.eq	17fd0 <mpfr_mul@@Base+0x454>  // b.none
   17f9c:	lsl	x2, x2, #3
   17fa0:	mov	x0, x26
   17fa4:	bl	be50 <memcpy@plt>
   17fa8:	b	17fd0 <mpfr_mul@@Base+0x454>
   17fac:	mov	x20, x27
   17fb0:	mov	w22, w16
   17fb4:	orr	x8, x9, x8
   17fb8:	cbz	x8, 183e8 <mpfr_mul@@Base+0x86c>
   17fbc:	mov	x0, x26
   17fc0:	mov	x3, x24
   17fc4:	bl	bf60 <__gmpn_add_1@plt>
   17fc8:	mov	w27, w25
   17fcc:	cbnz	x0, 1833c <mpfr_mul@@Base+0x7c0>
   17fd0:	ldr	x8, [x26]
   17fd4:	neg	x9, x24
   17fd8:	and	x8, x8, x9
   17fdc:	str	x8, [x26]
   17fe0:	ldur	x0, [x29, #-16]
   17fe4:	cbnz	x0, 18194 <mpfr_mul@@Base+0x618>
   17fe8:	str	x21, [x19, #16]
   17fec:	str	w25, [x19, #8]
   17ff0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   17ff4:	ldr	x1, [x0, #2768]
   17ff8:	add	x0, x0, #0xad0
   17ffc:	blr	x1
   18000:	mrs	x8, tpidr_el0
   18004:	ldr	x9, [x8, x0]
   18008:	cmp	x21, x9
   1800c:	b.gt	1819c <mpfr_mul@@Base+0x620>
   18010:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18014:	ldr	x1, [x0, #2736]
   18018:	add	x0, x0, #0xab0
   1801c:	blr	x1
   18020:	ldr	x9, [x8, x0]
   18024:	cmp	x21, x9
   18028:	b.lt	181d0 <mpfr_mul@@Base+0x654>  // b.tstop
   1802c:	cbz	w27, 1804c <mpfr_mul@@Base+0x4d0>
   18030:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18034:	ldr	x1, [x0, #2800]
   18038:	add	x0, x0, #0xaf0
   1803c:	blr	x1
   18040:	ldr	w9, [x8, x0]
   18044:	orr	w9, w9, #0x8
   18048:	str	w9, [x8, x0]
   1804c:	mov	w0, w27
   18050:	mov	sp, x29
   18054:	ldp	x20, x19, [sp, #80]
   18058:	ldp	x22, x21, [sp, #64]
   1805c:	ldp	x24, x23, [sp, #48]
   18060:	ldp	x26, x25, [sp, #32]
   18064:	ldp	x28, x27, [sp, #16]
   18068:	ldp	x29, x30, [sp], #96
   1806c:	ret
   18070:	cmp	x17, x8
   18074:	b.eq	180a8 <mpfr_mul@@Base+0x52c>  // b.none
   18078:	ldr	x10, [x22, #16]
   1807c:	cmp	x10, x8
   18080:	b.eq	180a8 <mpfr_mul@@Base+0x52c>  // b.none
   18084:	ldr	w9, [x26, #8]
   18088:	ldr	w12, [x22, #8]
   1808c:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   18090:	cmp	x17, x11
   18094:	mul	w9, w12, w9
   18098:	b.ne	18320 <mpfr_mul@@Base+0x7a4>  // b.any
   1809c:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   180a0:	cmp	x10, x11
   180a4:	b.ne	18334 <mpfr_mul@@Base+0x7b8>  // b.any
   180a8:	str	x8, [x19, #16]
   180ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   180b0:	ldr	x1, [x0, #2800]
   180b4:	add	x0, x0, #0xaf0
   180b8:	blr	x1
   180bc:	mrs	x8, tpidr_el0
   180c0:	ldr	w9, [x8, x0]
   180c4:	mov	w27, wzr
   180c8:	orr	w9, w9, #0x4
   180cc:	b	18048 <mpfr_mul@@Base+0x4cc>
   180d0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   180d4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   180d8:	add	x0, x0, #0xaab
   180dc:	add	x2, x2, #0xab1
   180e0:	mov	w1, #0x318                 	// #792
   180e4:	stur	x18, [x29, #-88]
   180e8:	stur	w16, [x29, #-124]
   180ec:	mov	x27, x17
   180f0:	mov	w28, w3
   180f4:	mov	w21, w6
   180f8:	bl	d030 <mpfr_assert_fail@plt>
   180fc:	ldur	x18, [x29, #-88]
   18100:	ldur	w16, [x29, #-124]
   18104:	mov	w6, w21
   18108:	mov	w3, w28
   1810c:	mov	x17, x27
   18110:	b	17cac <mpfr_mul@@Base+0x130>
   18114:	stp	x0, x18, [x29, #-96]
   18118:	sub	x0, x29, #0x10
   1811c:	stur	w16, [x29, #-124]
   18120:	mov	x23, x17
   18124:	stur	x5, [x29, #-112]
   18128:	stp	w6, w3, [x29, #-104]
   1812c:	stur	x7, [x29, #-136]
   18130:	bl	c220 <mpfr_tmp_allocate@plt>
   18134:	ldur	x7, [x29, #-136]
   18138:	ldp	w6, w3, [x29, #-104]
   1813c:	ldur	x5, [x29, #-112]
   18140:	mov	x17, x23
   18144:	ldur	w16, [x29, #-124]
   18148:	mov	x23, x0
   1814c:	ldp	x0, x18, [x29, #-96]
   18150:	b	17d1c <mpfr_mul@@Base+0x1a0>
   18154:	sub	x24, x2, x5
   18158:	add	x0, x26, x24, lsl #3
   1815c:	mov	x20, x27
   18160:	mov	w22, w16
   18164:	cmp	x0, x23
   18168:	b.eq	18178 <mpfr_mul@@Base+0x5fc>  // b.none
   1816c:	lsl	x2, x5, #3
   18170:	mov	x1, x23
   18174:	bl	be50 <memcpy@plt>
   18178:	lsl	x2, x24, #3
   1817c:	mov	x0, x26
   18180:	mov	w1, wzr
   18184:	bl	c5b0 <memset@plt>
   18188:	mov	w27, wzr
   1818c:	ldur	x0, [x29, #-16]
   18190:	cbz	x0, 17fe8 <mpfr_mul@@Base+0x46c>
   18194:	bl	c8d0 <mpfr_tmp_free@plt>
   18198:	b	17fe8 <mpfr_mul@@Base+0x46c>
   1819c:	mov	x0, x19
   181a0:	mov	w1, w22
   181a4:	mov	w2, w25
   181a8:	bl	c3a0 <mpfr_overflow@plt>
   181ac:	mov	w27, w0
   181b0:	b	1804c <mpfr_mul@@Base+0x4d0>
   181b4:	ldur	x9, [x1, #-8]
   181b8:	and	x8, x9, #0x8000000000000000
   181bc:	and	x9, x9, #0x7fffffffffffffff
   181c0:	cbz	w16, 182ec <mpfr_mul@@Base+0x770>
   181c4:	cbz	x8, 182ec <mpfr_mul@@Base+0x770>
   181c8:	mov	w24, #0x1                   	// #1
   181cc:	b	17f00 <mpfr_mul@@Base+0x384>
   181d0:	cbnz	w22, 183f8 <mpfr_mul@@Base+0x87c>
   181d4:	ldur	x8, [x29, #-88]
   181d8:	add	x8, x20, x8
   181dc:	cmp	x8, x9
   181e0:	b.lt	181fc <mpfr_mul@@Base+0x680>  // b.tstop
   181e4:	ldur	x0, [x29, #-112]
   181e8:	bl	c360 <mpfr_powerof2_raw@plt>
   181ec:	cbz	w0, 183f4 <mpfr_mul@@Base+0x878>
   181f0:	ldur	x0, [x29, #-120]
   181f4:	bl	c360 <mpfr_powerof2_raw@plt>
   181f8:	cbz	w0, 183f4 <mpfr_mul@@Base+0x878>
   181fc:	mov	w22, #0x1                   	// #1
   18200:	b	183f8 <mpfr_mul@@Base+0x87c>
   18204:	ldr	x14, [x11, #24]
   18208:	ldr	x13, [x10, #24]
   1820c:	ldr	x8, [x14]
   18210:	stp	x4, x2, [x29, #-160]
   18214:	cbnz	x8, 18220 <mpfr_mul@@Base+0x6a4>
   18218:	ldr	x8, [x14, #8]
   1821c:	cbz	x8, 184f0 <mpfr_mul@@Base+0x974>
   18220:	ldr	x8, [x13]
   18224:	cbnz	x8, 18230 <mpfr_mul@@Base+0x6b4>
   18228:	ldr	x8, [x13, #8]
   1822c:	cbz	x8, 184f0 <mpfr_mul@@Base+0x974>
   18230:	ldr	x8, [x19]
   18234:	stur	w16, [x29, #-124]
   18238:	sub	x9, x8, #0x1
   1823c:	add	x8, x8, #0x3e
   18240:	cmp	x9, #0x0
   18244:	csel	x8, x8, x9, lt  // lt = tstop
   18248:	asr	x8, x8, #6
   1824c:	add	x22, x8, #0x2
   18250:	cmp	x22, x4
   18254:	csel	x12, x22, x4, lt  // lt = tstop
   18258:	cmn	x12, #0x1
   1825c:	lsl	x21, x12, #6
   18260:	b.eq	18410 <mpfr_mul@@Base+0x894>  // b.none
   18264:	tbnz	x12, #63, 1849c <mpfr_mul@@Base+0x920>
   18268:	add	x8, x12, #0x1
   1826c:	clz	x8, x8
   18270:	mov	w9, #0x40                  	// #64
   18274:	sub	x8, x9, x8
   18278:	sub	x15, x21, x8
   1827c:	sub	x8, x2, x12
   18280:	sub	x9, x4, x12
   18284:	add	x1, x14, x8, lsl #3
   18288:	sub	x8, x15, #0x5
   1828c:	cmp	x25, x8
   18290:	add	x8, x13, x9, lsl #3
   18294:	stur	x15, [x29, #-144]
   18298:	b.gt	18418 <mpfr_mul@@Base+0x89c>
   1829c:	add	x28, x23, x7, lsl #3
   182a0:	mov	x26, x5
   182a4:	mov	x22, x17
   182a8:	mov	x21, x7
   182ac:	cmp	x11, x10
   182b0:	sub	x0, x28, x12, lsl #4
   182b4:	stur	x12, [x29, #-136]
   182b8:	b.eq	18368 <mpfr_mul@@Base+0x7ec>  // b.none
   182bc:	mov	x2, x8
   182c0:	mov	x3, x12
   182c4:	bl	c0e0 <mpfr_mulhigh_n@plt>
   182c8:	b	18370 <mpfr_mul@@Base+0x7f4>
   182cc:	mov	w3, #0x1                   	// #1
   182d0:	mov	x0, x23
   182d4:	mov	x1, x23
   182d8:	mov	x2, x5
   182dc:	mov	x20, x5
   182e0:	bl	c120 <__gmpn_lshift@plt>
   182e4:	mov	x5, x20
   182e8:	b	17e74 <mpfr_mul@@Base+0x2f8>
   182ec:	mov	w24, #0x1                   	// #1
   182f0:	cbnz	x9, 17f00 <mpfr_mul@@Base+0x384>
   182f4:	sub	x10, x0, x2
   182f8:	cbz	x10, 17f00 <mpfr_mul@@Base+0x384>
   182fc:	sub	x9, x0, x28
   18300:	sub	x10, x9, #0x2
   18304:	mov	w24, #0x1                   	// #1
   18308:	ldr	x9, [x23, x10, lsl #3]
   1830c:	subs	x10, x10, #0x1
   18310:	cset	w11, cs  // cs = hs, nlast
   18314:	cbnz	x9, 17f00 <mpfr_mul@@Base+0x384>
   18318:	tbnz	w11, #0, 18308 <mpfr_mul@@Base+0x78c>
   1831c:	b	17f00 <mpfr_mul@@Base+0x384>
   18320:	cmp	x10, x11
   18324:	b.ne	18354 <mpfr_mul@@Base+0x7d8>  // b.any
   18328:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1832c:	cmp	x17, x10
   18330:	b.eq	180a8 <mpfr_mul@@Base+0x52c>  // b.none
   18334:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   18338:	b	18358 <mpfr_mul@@Base+0x7dc>
   1833c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   18340:	str	x8, [x26, x28, lsl #3]
   18344:	ldur	x8, [x29, #-88]
   18348:	mov	w27, w25
   1834c:	add	x21, x20, x8
   18350:	b	17fd0 <mpfr_mul@@Base+0x454>
   18354:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   18358:	mov	w27, wzr
   1835c:	str	w9, [x19, #8]
   18360:	str	x8, [x19, #16]
   18364:	b	1804c <mpfr_mul@@Base+0x4d0>
   18368:	mov	x2, x12
   1836c:	bl	c960 <mpfr_sqrhigh_n@plt>
   18370:	add	x8, x27, x20
   18374:	ldr	x8, [x23, x8, lsl #3]
   18378:	ldur	w10, [x29, #-124]
   1837c:	mov	x1, x26
   18380:	mov	x9, x21
   18384:	lsr	x20, x8, #63
   18388:	tbz	x8, #63, 18470 <mpfr_mul@@Base+0x8f4>
   1838c:	sub	x8, x9, x1
   18390:	ldur	x9, [x29, #-144]
   18394:	cmp	w10, #0x5
   18398:	csinc	w10, w10, wzr, ne  // ne = any
   1839c:	stur	x20, [x29, #-136]
   183a0:	add	x9, x9, x20
   183a4:	add	x20, x23, x8, lsl #3
   183a8:	cmp	w10, #0x0
   183ac:	sub	x2, x9, #0x1
   183b0:	cinc	x3, x25, eq  // eq = none
   183b4:	mov	x0, x20
   183b8:	mov	w28, w10
   183bc:	bl	c830 <mpfr_round_p@plt>
   183c0:	cmp	w0, #0x0
   183c4:	mov	w8, #0x12                  	// #18
   183c8:	csel	w8, w8, wzr, eq  // eq = none
   183cc:	csel	x23, x23, x20, eq  // eq = none
   183d0:	cbz	w8, 18740 <mpfr_mul@@Base+0xbc4>
   183d4:	ldp	x4, x2, [x29, #-160]
   183d8:	ldp	x10, x11, [x29, #-120]
   183dc:	cmp	w8, #0x12
   183e0:	b.eq	17e50 <mpfr_mul@@Base+0x2d4>  // b.none
   183e4:	b	1804c <mpfr_mul@@Base+0x4d0>
   183e8:	mov	w27, wzr
   183ec:	mov	w16, w22
   183f0:	b	17f90 <mpfr_mul@@Base+0x414>
   183f4:	mov	w22, wzr
   183f8:	mov	x0, x19
   183fc:	mov	w1, w22
   18400:	mov	w2, w25
   18404:	bl	c880 <mpfr_underflow@plt>
   18408:	mov	w27, w0
   1840c:	b	1804c <mpfr_mul@@Base+0x4d0>
   18410:	mov	x8, xzr
   18414:	b	18278 <mpfr_mul@@Base+0x6fc>
   18418:	stp	x22, x1, [x29, #-184]
   1841c:	mov	x21, x7
   18420:	mov	x26, x5
   18424:	mov	x22, x17
   18428:	mov	w28, w16
   1842c:	stur	x8, [x29, #-192]
   18430:	cmp	x2, #0x16
   18434:	mov	w8, #0x12                  	// #18
   18438:	stur	x12, [x29, #-168]
   1843c:	b.lt	1875c <mpfr_mul@@Base+0xbe0>  // b.tstop
   18440:	ldur	x9, [x29, #-144]
   18444:	add	x9, x9, #0x3b
   18448:	cmp	x25, x9
   1844c:	b.gt	1875c <mpfr_mul@@Base+0xbe0>
   18450:	ldur	x8, [x29, #-152]
   18454:	ldur	x9, [x29, #-168]
   18458:	cmp	x8, x9
   1845c:	b.le	18598 <mpfr_mul@@Base+0xa1c>
   18460:	ldur	x8, [x29, #-176]
   18464:	sub	x8, x8, #0x8
   18468:	stur	x8, [x29, #-176]
   1846c:	b	185f8 <mpfr_mul@@Base+0xa7c>
   18470:	ldur	x9, [x29, #-136]
   18474:	mov	w3, #0x1                   	// #1
   18478:	sub	x8, x28, x9, lsl #3
   1847c:	sub	x0, x8, #0x8
   18480:	add	x2, x9, #0x1
   18484:	mov	x1, x0
   18488:	bl	c120 <__gmpn_lshift@plt>
   1848c:	ldur	w10, [x29, #-124]
   18490:	mov	x9, x21
   18494:	mov	x1, x26
   18498:	b	1838c <mpfr_mul@@Base+0x810>
   1849c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   184a0:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   184a4:	add	x0, x0, #0xaab
   184a8:	add	x2, x2, #0x1a
   184ac:	mov	w1, #0x398                 	// #920
   184b0:	mov	x28, x11
   184b4:	stp	x17, x7, [x29, #-144]
   184b8:	mov	x26, x5
   184bc:	stp	x22, x13, [x29, #-184]
   184c0:	stur	x12, [x29, #-168]
   184c4:	stur	x14, [x29, #-192]
   184c8:	bl	d030 <mpfr_assert_fail@plt>
   184cc:	ldp	x14, x22, [x29, #-192]
   184d0:	ldp	x13, x12, [x29, #-176]
   184d4:	ldp	x17, x7, [x29, #-144]
   184d8:	ldur	x10, [x29, #-120]
   184dc:	ldur	w16, [x29, #-124]
   184e0:	ldp	x4, x2, [x29, #-160]
   184e4:	mov	x5, x26
   184e8:	mov	x11, x28
   184ec:	b	18268 <mpfr_mul@@Base+0x6ec>
   184f0:	ldur	x0, [x29, #-16]
   184f4:	mov	x25, x14
   184f8:	mov	x20, x13
   184fc:	mov	x21, x7
   18500:	mov	x26, x5
   18504:	mov	x22, x17
   18508:	mov	w28, w16
   1850c:	cbnz	x0, 18794 <mpfr_mul@@Base+0xc18>
   18510:	ldr	x8, [x25]
   18514:	cbnz	x8, 1852c <mpfr_mul@@Base+0x9b0>
   18518:	ldr	x9, [x25, #8]!
   1851c:	ldur	x8, [x29, #-152]
   18520:	sub	x8, x8, #0x1
   18524:	stur	x8, [x29, #-152]
   18528:	cbz	x9, 18518 <mpfr_mul@@Base+0x99c>
   1852c:	ldr	x8, [x20]
   18530:	cbnz	x8, 18548 <mpfr_mul@@Base+0x9cc>
   18534:	ldr	x9, [x20, #8]!
   18538:	ldur	x8, [x29, #-160]
   1853c:	sub	x8, x8, #0x1
   18540:	stur	x8, [x29, #-160]
   18544:	cbz	x9, 18534 <mpfr_mul@@Base+0x9b8>
   18548:	ldp	x10, x11, [x29, #-120]
   1854c:	ldr	w8, [x11, #8]
   18550:	cmp	x11, x10
   18554:	stur	w8, [x29, #-40]
   18558:	ldur	x8, [x29, #-152]
   1855c:	ldr	x9, [x11, #16]
   18560:	lsl	x8, x8, #6
   18564:	stp	x9, x25, [x29, #-32]
   18568:	stur	x8, [x29, #-48]
   1856c:	b.eq	18720 <mpfr_mul@@Base+0xba4>  // b.none
   18570:	ldur	x9, [x29, #-120]
   18574:	sub	x2, x29, #0x50
   18578:	ldr	w8, [x9, #8]
   1857c:	stur	w8, [x29, #-72]
   18580:	ldur	x8, [x29, #-160]
   18584:	ldr	x9, [x9, #16]
   18588:	lsl	x8, x8, #6
   1858c:	stp	x9, x20, [x29, #-64]
   18590:	stur	x8, [x29, #-80]
   18594:	b	18724 <mpfr_mul@@Base+0xba8>
   18598:	ldur	x8, [x29, #-168]
   1859c:	lsl	x8, x8, #3
   185a0:	add	x1, x8, #0x8
   185a4:	cmp	x1, #0x4, lsl #12
   185a8:	stur	x8, [x29, #-136]
   185ac:	b.hi	187a4 <mpfr_mul@@Base+0xc28>  // b.pmore
   185b0:	add	x9, x1, #0xf
   185b4:	mov	x8, sp
   185b8:	and	x9, x9, #0xfffffffffffffff0
   185bc:	sub	x8, x8, x9
   185c0:	stur	x8, [x29, #-176]
   185c4:	mov	sp, x8
   185c8:	ldur	x0, [x29, #-176]
   185cc:	ldur	x8, [x29, #-112]
   185d0:	str	xzr, [x0], #8
   185d4:	ldr	x9, [x8, #24]
   185d8:	ldur	x8, [x29, #-152]
   185dc:	add	x8, x9, x8, lsl #3
   185e0:	ldur	x9, [x29, #-168]
   185e4:	sub	x1, x8, x9, lsl #3
   185e8:	cmp	x1, x0
   185ec:	b.eq	185f8 <mpfr_mul@@Base+0xa7c>  // b.none
   185f0:	ldur	x2, [x29, #-136]
   185f4:	bl	be50 <memcpy@plt>
   185f8:	ldp	x8, x9, [x29, #-120]
   185fc:	cmp	x9, x8
   18600:	b.eq	18684 <mpfr_mul@@Base+0xb08>  // b.none
   18604:	ldur	x8, [x29, #-160]
   18608:	ldur	x9, [x29, #-184]
   1860c:	cmp	x9, x8
   18610:	b.ge	18624 <mpfr_mul@@Base+0xaa8>  // b.tcont
   18614:	ldur	x8, [x29, #-192]
   18618:	sub	x8, x8, #0x8
   1861c:	stur	x8, [x29, #-192]
   18620:	b	18684 <mpfr_mul@@Base+0xb08>
   18624:	ldur	x8, [x29, #-168]
   18628:	lsl	x8, x8, #3
   1862c:	add	x1, x8, #0x8
   18630:	cmp	x1, #0x4, lsl #12
   18634:	stur	x8, [x29, #-136]
   18638:	b.hi	187b4 <mpfr_mul@@Base+0xc38>  // b.pmore
   1863c:	add	x9, x1, #0xf
   18640:	mov	x8, sp
   18644:	and	x9, x9, #0xfffffffffffffff0
   18648:	sub	x8, x8, x9
   1864c:	stur	x8, [x29, #-192]
   18650:	mov	sp, x8
   18654:	ldur	x0, [x29, #-192]
   18658:	ldur	x8, [x29, #-120]
   1865c:	str	xzr, [x0], #8
   18660:	ldr	x9, [x8, #24]
   18664:	ldur	x8, [x29, #-160]
   18668:	add	x8, x9, x8, lsl #3
   1866c:	ldur	x9, [x29, #-168]
   18670:	sub	x1, x8, x9, lsl #3
   18674:	cmp	x1, x0
   18678:	b.eq	18684 <mpfr_mul@@Base+0xb08>  // b.none
   1867c:	ldur	x2, [x29, #-136]
   18680:	bl	be50 <memcpy@plt>
   18684:	ldur	x8, [x29, #-168]
   18688:	add	x9, x8, #0x1
   1868c:	cmn	x8, #0x2
   18690:	lsl	x8, x9, #6
   18694:	stp	x8, x9, [x29, #-144]
   18698:	b.eq	18764 <mpfr_mul@@Base+0xbe8>  // b.none
   1869c:	b.le	1876c <mpfr_mul@@Base+0xbf0>
   186a0:	ldur	x8, [x29, #-168]
   186a4:	mov	w9, #0x40                  	// #64
   186a8:	add	x8, x8, #0x2
   186ac:	clz	x8, x8
   186b0:	sub	x8, x9, x8
   186b4:	ldur	x9, [x29, #-136]
   186b8:	lsl	x9, x9, #1
   186bc:	subs	x9, x9, x21
   186c0:	stur	x9, [x29, #-168]
   186c4:	ldur	x9, [x29, #-144]
   186c8:	sub	x8, x9, x8
   186cc:	stur	x8, [x29, #-144]
   186d0:	b.le	18700 <mpfr_mul@@Base+0xb84>
   186d4:	ldur	x8, [x29, #-136]
   186d8:	lsl	x1, x8, #4
   186dc:	cmp	x1, #0x4, lsl #12
   186e0:	b.hi	18788 <mpfr_mul@@Base+0xc0c>  // b.pmore
   186e4:	add	x9, x1, #0xf
   186e8:	mov	x8, sp
   186ec:	and	x9, x9, #0xfffffffffffffff0
   186f0:	sub	x0, x8, x9
   186f4:	mov	sp, x0
   186f8:	ldur	x8, [x29, #-168]
   186fc:	add	x23, x0, x8, lsl #3
   18700:	ldur	x8, [x29, #-192]
   18704:	ldp	x10, x11, [x29, #-120]
   18708:	ldur	x1, [x29, #-176]
   1870c:	ldur	x12, [x29, #-136]
   18710:	mov	x17, x22
   18714:	mov	x5, x26
   18718:	mov	x7, x21
   1871c:	b	1829c <mpfr_mul@@Base+0x720>
   18720:	sub	x2, x29, #0x30
   18724:	sub	x1, x29, #0x30
   18728:	mov	x0, x19
   1872c:	mov	w3, w28
   18730:	bl	c1b0 <mpfr_mul@plt>
   18734:	mov	w27, w0
   18738:	mov	w8, #0x1                   	// #1
   1873c:	cbnz	w8, 183d4 <mpfr_mul@@Base+0x858>
   18740:	ldp	x0, x18, [x29, #-96]
   18744:	ldp	w6, w3, [x29, #-104]
   18748:	ldur	x27, [x29, #-136]
   1874c:	mov	w16, w28
   18750:	mov	x17, x22
   18754:	mov	x5, x26
   18758:	b	17e84 <mpfr_mul@@Base+0x308>
   1875c:	cbnz	w8, 183d4 <mpfr_mul@@Base+0x858>
   18760:	b	18740 <mpfr_mul@@Base+0xbc4>
   18764:	mov	x8, xzr
   18768:	b	186b4 <mpfr_mul@@Base+0xb38>
   1876c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   18770:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   18774:	add	x0, x0, #0xaab
   18778:	add	x2, x2, #0x1a
   1877c:	mov	w1, #0x3c0                 	// #960
   18780:	bl	d030 <mpfr_assert_fail@plt>
   18784:	b	186a0 <mpfr_mul@@Base+0xb24>
   18788:	sub	x0, x29, #0x10
   1878c:	bl	c220 <mpfr_tmp_allocate@plt>
   18790:	b	186f8 <mpfr_mul@@Base+0xb7c>
   18794:	bl	c8d0 <mpfr_tmp_free@plt>
   18798:	ldr	x8, [x25]
   1879c:	cbnz	x8, 1852c <mpfr_mul@@Base+0x9b0>
   187a0:	b	18518 <mpfr_mul@@Base+0x99c>
   187a4:	sub	x0, x29, #0x10
   187a8:	bl	c220 <mpfr_tmp_allocate@plt>
   187ac:	stur	x0, [x29, #-176]
   187b0:	b	185c8 <mpfr_mul@@Base+0xa4c>
   187b4:	sub	x0, x29, #0x10
   187b8:	bl	c220 <mpfr_tmp_allocate@plt>
   187bc:	stur	x0, [x29, #-192]
   187c0:	b	18654 <mpfr_mul@@Base+0xad8>
   187c4:	stp	x29, x30, [sp, #-16]!
   187c8:	ldp	x13, x9, [x2, #16]
   187cc:	ldp	x12, x10, [x1, #16]
   187d0:	neg	x11, x4
   187d4:	mov	x8, x0
   187d8:	ldr	x15, [x9]
   187dc:	ldr	x14, [x10]
   187e0:	ldr	x10, [x0, #24]
   187e4:	mov	w9, #0x1                   	// #1
   187e8:	lsl	x11, x9, x11
   187ec:	add	x9, x13, x12
   187f0:	umulh	x16, x14, x15
   187f4:	mul	x14, x15, x14
   187f8:	mov	x29, sp
   187fc:	tbnz	x16, #63, 1880c <mpfr_mul@@Base+0xc90>
   18800:	sub	x9, x9, #0x1
   18804:	extr	x16, x16, x14, #63
   18808:	lsl	x14, x14, #1
   1880c:	neg	x17, x11
   18810:	and	x15, x16, x17
   18814:	str	x15, [x10]
   18818:	ldr	w12, [x1, #8]
   1881c:	ldr	w13, [x2, #8]
   18820:	mul	w2, w13, w12
   18824:	str	w2, [x8, #8]
   18828:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1882c:	ldr	x1, [x0, #2768]
   18830:	add	x0, x0, #0xad0
   18834:	blr	x1
   18838:	mrs	x12, tpidr_el0
   1883c:	ldr	x13, [x12, x0]
   18840:	cmp	x9, x13
   18844:	b.gt	1896c <mpfr_mul@@Base+0xdf0>
   18848:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   1884c:	sub	x18, x11, #0x1
   18850:	lsr	x13, x13, x4
   18854:	and	x13, x16, x13
   18858:	and	x16, x16, x18
   1885c:	eor	x16, x16, x13
   18860:	orr	x14, x16, x14
   18864:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18868:	ldr	x1, [x0, #2736]
   1886c:	add	x0, x0, #0xab0
   18870:	blr	x1
   18874:	ldr	x16, [x12, x0]
   18878:	cmp	x9, x16
   1887c:	b.lt	18980 <mpfr_mul@@Base+0xe04>  // b.tstop
   18880:	mov	w0, wzr
   18884:	cmp	w3, #0x5
   18888:	str	x9, [x8, #16]
   1888c:	b.eq	18958 <mpfr_mul@@Base+0xddc>  // b.none
   18890:	orr	x15, x14, x13
   18894:	cbz	x15, 18958 <mpfr_mul@@Base+0xddc>
   18898:	cmp	w3, #0x1
   1889c:	b.eq	188dc <mpfr_mul@@Base+0xd60>  // b.none
   188a0:	cbnz	w3, 188d0 <mpfr_mul@@Base+0xd54>
   188a4:	cbz	x13, 188dc <mpfr_mul@@Base+0xd60>
   188a8:	cbnz	x14, 188b8 <mpfr_mul@@Base+0xd3c>
   188ac:	ldr	x13, [x10]
   188b0:	tst	x13, x11
   188b4:	b.eq	188dc <mpfr_mul@@Base+0xd60>  // b.none
   188b8:	ldr	x13, [x10]
   188bc:	adds	x11, x13, x11
   188c0:	str	x11, [x10]
   188c4:	b.eq	18908 <mpfr_mul@@Base+0xd8c>  // b.none
   188c8:	cbnz	w2, 18938 <mpfr_mul@@Base+0xdbc>
   188cc:	b	18960 <mpfr_mul@@Base+0xde4>
   188d0:	add	w13, w3, w2, lsr #31
   188d4:	cmp	w13, #0x3
   188d8:	b.ne	188b8 <mpfr_mul@@Base+0xd3c>  // b.any
   188dc:	cbz	w2, 18960 <mpfr_mul@@Base+0xde4>
   188e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   188e4:	ldr	x1, [x0, #2800]
   188e8:	add	x0, x0, #0xaf0
   188ec:	blr	x1
   188f0:	ldr	w8, [x12, x0]
   188f4:	orr	w8, w8, #0x8
   188f8:	str	w8, [x12, x0]
   188fc:	neg	w0, w2
   18900:	ldp	x29, x30, [sp], #16
   18904:	ret
   18908:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   1890c:	str	x11, [x10]
   18910:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18914:	ldr	x1, [x0, #2768]
   18918:	add	x0, x0, #0xad0
   1891c:	blr	x1
   18920:	ldr	x10, [x12, x0]
   18924:	cmp	x9, x10
   18928:	b.ge	1896c <mpfr_mul@@Base+0xdf0>  // b.tcont
   1892c:	add	x9, x9, #0x1
   18930:	str	x9, [x8, #16]
   18934:	cbz	w2, 18960 <mpfr_mul@@Base+0xde4>
   18938:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1893c:	ldr	x1, [x0, #2800]
   18940:	add	x0, x0, #0xaf0
   18944:	blr	x1
   18948:	ldr	w8, [x12, x0]
   1894c:	orr	w8, w8, #0x8
   18950:	str	w8, [x12, x0]
   18954:	mov	w0, w2
   18958:	ldp	x29, x30, [sp], #16
   1895c:	ret
   18960:	mov	w0, wzr
   18964:	ldp	x29, x30, [sp], #16
   18968:	ret
   1896c:	mov	x0, x8
   18970:	mov	w1, w3
   18974:	bl	c3a0 <mpfr_overflow@plt>
   18978:	ldp	x29, x30, [sp], #16
   1897c:	ret
   18980:	cmp	x15, x17
   18984:	sub	x16, x16, #0x1
   18988:	b.ne	189bc <mpfr_mul@@Base+0xe40>  // b.any
   1898c:	cmp	x9, x16
   18990:	b.ne	189bc <mpfr_mul@@Base+0xe40>  // b.any
   18994:	cbnz	w3, 1899c <mpfr_mul@@Base+0xe20>
   18998:	cbnz	x13, 18880 <mpfr_mul@@Base+0xd04>
   1899c:	cmp	w3, #0x4
   189a0:	b.eq	189b4 <mpfr_mul@@Base+0xe38>  // b.none
   189a4:	mvn	w17, w2
   189a8:	add	w17, w3, w17, lsr #31
   189ac:	cmp	w17, #0x3
   189b0:	b.ne	189bc <mpfr_mul@@Base+0xe40>  // b.any
   189b4:	orr	x17, x14, x13
   189b8:	cbnz	x17, 18880 <mpfr_mul@@Base+0xd04>
   189bc:	cbnz	w3, 189e4 <mpfr_mul@@Base+0xe68>
   189c0:	cmp	x9, x16
   189c4:	b.lt	189e0 <mpfr_mul@@Base+0xe64>  // b.tstop
   189c8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   189cc:	cmp	x15, x9
   189d0:	mov	w3, wzr
   189d4:	b.ne	189e4 <mpfr_mul@@Base+0xe68>  // b.any
   189d8:	orr	x9, x14, x13
   189dc:	cbnz	x9, 189e4 <mpfr_mul@@Base+0xe68>
   189e0:	mov	w3, #0x1                   	// #1
   189e4:	mov	x0, x8
   189e8:	mov	w1, w3
   189ec:	bl	c880 <mpfr_underflow@plt>
   189f0:	ldp	x29, x30, [sp], #16
   189f4:	ret
   189f8:	stp	x29, x30, [sp, #-16]!
   189fc:	ldp	x11, x12, [x1, #16]
   18a00:	ldp	x13, x16, [x2, #16]
   18a04:	mov	x8, x0
   18a08:	ldr	x9, [x0, #24]
   18a0c:	ldp	x5, x18, [x12]
   18a10:	ldp	x0, x17, [x16]
   18a14:	neg	x10, x4
   18a18:	mov	w15, #0x1                   	// #1
   18a1c:	umulh	x12, x18, x17
   18a20:	mul	x16, x17, x18
   18a24:	umulh	x6, x18, x0
   18a28:	adds	x16, x6, x16
   18a2c:	lsl	x10, x15, x10
   18a30:	umulh	x6, x5, x17
   18a34:	cinc	x12, x12, cs  // cs = hs, nlast
   18a38:	adds	x16, x6, x16
   18a3c:	sub	x14, x10, #0x1
   18a40:	add	x6, x16, #0x2
   18a44:	and	x6, x6, x14, lsr #2
   18a48:	cinc	x12, x12, cs  // cs = hs, nlast
   18a4c:	cmp	x6, #0x2
   18a50:	mov	x29, sp
   18a54:	b.ls	18bf8 <mpfr_mul@@Base+0x107c>  // b.plast
   18a58:	mov	w17, #0x1                   	// #1
   18a5c:	add	x11, x13, x11
   18a60:	tbnz	x12, #63, 18a74 <mpfr_mul@@Base+0xef8>
   18a64:	sub	x11, x11, #0x1
   18a68:	extr	x12, x12, x16, #63
   18a6c:	extr	x16, x16, x17, #63
   18a70:	lsl	x17, x17, #1
   18a74:	neg	x5, x10
   18a78:	and	x18, x16, x5
   18a7c:	stp	x18, x12, [x9]
   18a80:	ldr	w13, [x1, #8]
   18a84:	ldr	w0, [x2, #8]
   18a88:	mul	w2, w0, w13
   18a8c:	str	w2, [x8, #8]
   18a90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18a94:	ldr	x1, [x0, #2768]
   18a98:	add	x0, x0, #0xad0
   18a9c:	blr	x1
   18aa0:	mrs	x13, tpidr_el0
   18aa4:	ldr	x0, [x13, x0]
   18aa8:	cmp	x11, x0
   18aac:	b.gt	18be4 <mpfr_mul@@Base+0x1068>
   18ab0:	mov	w0, #0x7f                  	// #127
   18ab4:	mov	w1, #0x1                   	// #1
   18ab8:	sub	x0, x0, x4
   18abc:	lsl	x0, x1, x0
   18ac0:	and	x14, x16, x14
   18ac4:	and	x16, x16, x0
   18ac8:	eor	x14, x14, x16
   18acc:	orr	x15, x17, x15
   18ad0:	orr	x14, x15, x14
   18ad4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18ad8:	ldr	x1, [x0, #2736]
   18adc:	add	x0, x0, #0xab0
   18ae0:	blr	x1
   18ae4:	ldr	x15, [x13, x0]
   18ae8:	cmp	x11, x15
   18aec:	b.lt	18c4c <mpfr_mul@@Base+0x10d0>  // b.tstop
   18af0:	mov	w0, wzr
   18af4:	cmp	w3, #0x5
   18af8:	str	x11, [x8, #16]
   18afc:	b.eq	18bd0 <mpfr_mul@@Base+0x1054>  // b.none
   18b00:	orr	x12, x14, x16
   18b04:	cbz	x12, 18bd0 <mpfr_mul@@Base+0x1054>
   18b08:	cmp	w3, #0x1
   18b0c:	b.eq	18b54 <mpfr_mul@@Base+0xfd8>  // b.none
   18b10:	cbnz	w3, 18b48 <mpfr_mul@@Base+0xfcc>
   18b14:	cbz	x16, 18b54 <mpfr_mul@@Base+0xfd8>
   18b18:	cbnz	x14, 18b28 <mpfr_mul@@Base+0xfac>
   18b1c:	ldr	x12, [x9]
   18b20:	tst	x12, x10
   18b24:	b.eq	18b54 <mpfr_mul@@Base+0xfd8>  // b.none
   18b28:	ldp	x12, x14, [x9]
   18b2c:	adds	x10, x12, x10
   18b30:	str	x10, [x9]
   18b34:	cinc	x10, x14, eq  // eq = none
   18b38:	str	x10, [x9, #8]
   18b3c:	cbz	x10, 18b80 <mpfr_mul@@Base+0x1004>
   18b40:	cbnz	w2, 18bb0 <mpfr_mul@@Base+0x1034>
   18b44:	b	18bd8 <mpfr_mul@@Base+0x105c>
   18b48:	add	w12, w3, w2, lsr #31
   18b4c:	cmp	w12, #0x3
   18b50:	b.ne	18b28 <mpfr_mul@@Base+0xfac>  // b.any
   18b54:	cbz	w2, 18bd8 <mpfr_mul@@Base+0x105c>
   18b58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18b5c:	ldr	x1, [x0, #2800]
   18b60:	add	x0, x0, #0xaf0
   18b64:	blr	x1
   18b68:	ldr	w8, [x13, x0]
   18b6c:	orr	w8, w8, #0x8
   18b70:	str	w8, [x13, x0]
   18b74:	neg	w0, w2
   18b78:	ldp	x29, x30, [sp], #16
   18b7c:	ret
   18b80:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   18b84:	str	x10, [x9, #8]
   18b88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18b8c:	ldr	x1, [x0, #2768]
   18b90:	add	x0, x0, #0xad0
   18b94:	blr	x1
   18b98:	ldr	x9, [x13, x0]
   18b9c:	cmp	x11, x9
   18ba0:	b.ge	18be4 <mpfr_mul@@Base+0x1068>  // b.tcont
   18ba4:	add	x9, x11, #0x1
   18ba8:	str	x9, [x8, #16]
   18bac:	cbz	w2, 18bd8 <mpfr_mul@@Base+0x105c>
   18bb0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18bb4:	ldr	x1, [x0, #2800]
   18bb8:	add	x0, x0, #0xaf0
   18bbc:	blr	x1
   18bc0:	ldr	w8, [x13, x0]
   18bc4:	orr	w8, w8, #0x8
   18bc8:	str	w8, [x13, x0]
   18bcc:	mov	w0, w2
   18bd0:	ldp	x29, x30, [sp], #16
   18bd4:	ret
   18bd8:	mov	w0, wzr
   18bdc:	ldp	x29, x30, [sp], #16
   18be0:	ret
   18be4:	mov	x0, x8
   18be8:	mov	w1, w3
   18bec:	bl	c3a0 <mpfr_overflow@plt>
   18bf0:	ldp	x29, x30, [sp], #16
   18bf4:	ret
   18bf8:	mul	x18, x0, x18
   18bfc:	umulh	x6, x5, x0
   18c00:	adds	x18, x6, x18
   18c04:	cinc	x16, x16, cs  // cs = hs, nlast
   18c08:	mul	x17, x5, x17
   18c0c:	mul	x15, x5, x0
   18c10:	cset	w0, cs  // cs = hs, nlast
   18c14:	cmp	x16, #0x0
   18c18:	cset	w5, eq  // eq = none
   18c1c:	adds	x17, x18, x17
   18c20:	cinc	x16, x16, cs  // cs = hs, nlast
   18c24:	and	w18, w0, w5
   18c28:	cset	w0, cs  // cs = hs, nlast
   18c2c:	cmp	x16, #0x0
   18c30:	add	x12, x12, x18
   18c34:	cset	w18, eq  // eq = none
   18c38:	and	w18, w0, w18
   18c3c:	add	x12, x12, x18
   18c40:	add	x11, x13, x11
   18c44:	tbz	x12, #63, 18a64 <mpfr_mul@@Base+0xee8>
   18c48:	b	18a74 <mpfr_mul@@Base+0xef8>
   18c4c:	cmp	x18, x5
   18c50:	sub	x15, x15, #0x1
   18c54:	b.ne	18c90 <mpfr_mul@@Base+0x1114>  // b.any
   18c58:	cmn	x12, #0x1
   18c5c:	b.ne	18c90 <mpfr_mul@@Base+0x1114>  // b.any
   18c60:	cmp	x11, x15
   18c64:	b.ne	18c90 <mpfr_mul@@Base+0x1114>  // b.any
   18c68:	cbnz	w3, 18c70 <mpfr_mul@@Base+0x10f4>
   18c6c:	cbnz	x16, 18af0 <mpfr_mul@@Base+0xf74>
   18c70:	cmp	w3, #0x4
   18c74:	b.eq	18c88 <mpfr_mul@@Base+0x110c>  // b.none
   18c78:	mvn	w17, w2
   18c7c:	add	w17, w3, w17, lsr #31
   18c80:	cmp	w17, #0x3
   18c84:	b.ne	18c90 <mpfr_mul@@Base+0x1114>  // b.any
   18c88:	orr	x17, x14, x16
   18c8c:	cbnz	x17, 18af0 <mpfr_mul@@Base+0xf74>
   18c90:	cbnz	w3, 18cc0 <mpfr_mul@@Base+0x1144>
   18c94:	cmp	x11, x15
   18c98:	b.ge	18ca4 <mpfr_mul@@Base+0x1128>  // b.tcont
   18c9c:	mov	w3, #0x1                   	// #1
   18ca0:	b	18cc0 <mpfr_mul@@Base+0x1144>
   18ca4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   18ca8:	cmp	x12, x9
   18cac:	b.ne	18cbc <mpfr_mul@@Base+0x1140>  // b.any
   18cb0:	orr	x9, x14, x16
   18cb4:	orr	x9, x9, x18
   18cb8:	cbz	x9, 18c9c <mpfr_mul@@Base+0x1120>
   18cbc:	mov	w3, wzr
   18cc0:	mov	x0, x8
   18cc4:	mov	w1, w3
   18cc8:	bl	c880 <mpfr_underflow@plt>
   18ccc:	ldp	x29, x30, [sp], #16
   18cd0:	ret
   18cd4:	stp	x29, x30, [sp, #-16]!
   18cd8:	ldp	x11, x9, [x1, #16]
   18cdc:	ldp	x12, x10, [x2, #16]
   18ce0:	mov	x8, x0
   18ce4:	mov	x29, sp
   18ce8:	ldr	x14, [x9]
   18cec:	ldr	x15, [x10]
   18cf0:	ldr	x10, [x0, #24]
   18cf4:	add	x9, x12, x11
   18cf8:	umulh	x13, x14, x15
   18cfc:	mul	x11, x15, x14
   18d00:	tbnz	x13, #63, 18d10 <mpfr_mul@@Base+0x1194>
   18d04:	sub	x9, x9, #0x1
   18d08:	extr	x13, x13, x11, #63
   18d0c:	lsl	x11, x11, #1
   18d10:	str	x13, [x10]
   18d14:	ldr	w12, [x1, #8]
   18d18:	ldr	w14, [x2, #8]
   18d1c:	mul	w2, w14, w12
   18d20:	str	w2, [x8, #8]
   18d24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18d28:	ldr	x1, [x0, #2768]
   18d2c:	add	x0, x0, #0xad0
   18d30:	blr	x1
   18d34:	mrs	x12, tpidr_el0
   18d38:	ldr	x14, [x12, x0]
   18d3c:	cmp	x9, x14
   18d40:	b.gt	18e40 <mpfr_mul@@Base+0x12c4>
   18d44:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18d48:	ldr	x1, [x0, #2736]
   18d4c:	add	x0, x0, #0xab0
   18d50:	blr	x1
   18d54:	ldr	x14, [x12, x0]
   18d58:	cmp	x9, x14
   18d5c:	b.lt	18e54 <mpfr_mul@@Base+0x12d8>  // b.tstop
   18d60:	mov	w0, wzr
   18d64:	cmp	w3, #0x5
   18d68:	str	x9, [x8, #16]
   18d6c:	b.eq	18df4 <mpfr_mul@@Base+0x1278>  // b.none
   18d70:	cbz	x11, 18df4 <mpfr_mul@@Base+0x1278>
   18d74:	cmp	w3, #0x1
   18d78:	b.eq	18e08 <mpfr_mul@@Base+0x128c>  // b.none
   18d7c:	cbnz	w3, 18dfc <mpfr_mul@@Base+0x1280>
   18d80:	tbz	x11, #63, 18e08 <mpfr_mul@@Base+0x128c>
   18d84:	and	x11, x11, #0x7fffffffffffffff
   18d88:	cbnz	x11, 18d94 <mpfr_mul@@Base+0x1218>
   18d8c:	ldrb	w11, [x10]
   18d90:	tbz	w11, #0, 18e08 <mpfr_mul@@Base+0x128c>
   18d94:	ldr	x11, [x10]
   18d98:	adds	x11, x11, #0x1
   18d9c:	str	x11, [x10]
   18da0:	b.cc	18dd0 <mpfr_mul@@Base+0x1254>  // b.lo, b.ul, b.last
   18da4:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   18da8:	str	x11, [x10]
   18dac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18db0:	ldr	x1, [x0, #2768]
   18db4:	add	x0, x0, #0xad0
   18db8:	blr	x1
   18dbc:	ldr	x10, [x12, x0]
   18dc0:	cmp	x9, x10
   18dc4:	b.ge	18e40 <mpfr_mul@@Base+0x12c4>  // b.tcont
   18dc8:	add	x9, x9, #0x1
   18dcc:	str	x9, [x8, #16]
   18dd0:	cbz	w2, 18e34 <mpfr_mul@@Base+0x12b8>
   18dd4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18dd8:	ldr	x1, [x0, #2800]
   18ddc:	add	x0, x0, #0xaf0
   18de0:	blr	x1
   18de4:	ldr	w8, [x12, x0]
   18de8:	orr	w8, w8, #0x8
   18dec:	str	w8, [x12, x0]
   18df0:	mov	w0, w2
   18df4:	ldp	x29, x30, [sp], #16
   18df8:	ret
   18dfc:	add	w11, w3, w2, lsr #31
   18e00:	cmp	w11, #0x3
   18e04:	b.ne	18d94 <mpfr_mul@@Base+0x1218>  // b.any
   18e08:	cbz	w2, 18e34 <mpfr_mul@@Base+0x12b8>
   18e0c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18e10:	ldr	x1, [x0, #2800]
   18e14:	add	x0, x0, #0xaf0
   18e18:	blr	x1
   18e1c:	ldr	w8, [x12, x0]
   18e20:	orr	w8, w8, #0x8
   18e24:	str	w8, [x12, x0]
   18e28:	neg	w0, w2
   18e2c:	ldp	x29, x30, [sp], #16
   18e30:	ret
   18e34:	mov	w0, wzr
   18e38:	ldp	x29, x30, [sp], #16
   18e3c:	ret
   18e40:	mov	x0, x8
   18e44:	mov	w1, w3
   18e48:	bl	c3a0 <mpfr_overflow@plt>
   18e4c:	ldp	x29, x30, [sp], #16
   18e50:	ret
   18e54:	cmn	x13, #0x1
   18e58:	sub	x14, x14, #0x1
   18e5c:	b.ne	18e94 <mpfr_mul@@Base+0x1318>  // b.any
   18e60:	cmp	x9, x14
   18e64:	b.ne	18e94 <mpfr_mul@@Base+0x1318>  // b.any
   18e68:	cbnz	w3, 18e70 <mpfr_mul@@Base+0x12f4>
   18e6c:	tbnz	x11, #63, 18d60 <mpfr_mul@@Base+0x11e4>
   18e70:	cmp	w3, #0x4
   18e74:	b.ne	18e80 <mpfr_mul@@Base+0x1304>  // b.any
   18e78:	cbnz	x11, 18d60 <mpfr_mul@@Base+0x11e4>
   18e7c:	b	18e94 <mpfr_mul@@Base+0x1318>
   18e80:	cbz	x11, 18e94 <mpfr_mul@@Base+0x1318>
   18e84:	mvn	w15, w2
   18e88:	add	w15, w3, w15, lsr #31
   18e8c:	cmp	w15, #0x3
   18e90:	b.eq	18d60 <mpfr_mul@@Base+0x11e4>  // b.none
   18e94:	cbnz	w3, 18eb8 <mpfr_mul@@Base+0x133c>
   18e98:	cmp	x9, x14
   18e9c:	b.lt	18eb4 <mpfr_mul@@Base+0x1338>  // b.tstop
   18ea0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   18ea4:	cmp	x13, x9
   18ea8:	mov	w3, wzr
   18eac:	b.ne	18eb8 <mpfr_mul@@Base+0x133c>  // b.any
   18eb0:	cbnz	x11, 18eb8 <mpfr_mul@@Base+0x133c>
   18eb4:	mov	w3, #0x1                   	// #1
   18eb8:	mov	x0, x8
   18ebc:	mov	w1, w3
   18ec0:	bl	c880 <mpfr_underflow@plt>
   18ec4:	ldp	x29, x30, [sp], #16
   18ec8:	ret
   18ecc:	sub	sp, sp, #0x90
   18ed0:	stp	x29, x30, [sp, #48]
   18ed4:	stp	x28, x27, [sp, #64]
   18ed8:	stp	x26, x25, [sp, #80]
   18edc:	stp	x24, x23, [sp, #96]
   18ee0:	stp	x22, x21, [sp, #112]
   18ee4:	stp	x20, x19, [sp, #128]
   18ee8:	mov	x22, x2
   18eec:	mov	x23, x1
   18ef0:	ldp	x27, x1, [x1, #16]
   18ef4:	ldp	x28, x2, [x2, #16]
   18ef8:	neg	x8, x4
   18efc:	mov	w9, #0x1                   	// #1
   18f00:	lsl	x25, x9, x8
   18f04:	ldp	x11, x8, [x1, #8]
   18f08:	ldp	x13, x9, [x2, #8]
   18f0c:	ldr	x12, [x2]
   18f10:	mov	w10, #0x2                   	// #2
   18f14:	umulh	x12, x8, x12
   18f18:	mul	x15, x13, x8
   18f1c:	mul	x16, x11, x9
   18f20:	adds	x15, x16, x15
   18f24:	cset	w16, cs  // cs = hs, nlast
   18f28:	csinc	x10, x10, xzr, cs  // cs = hs, nlast
   18f2c:	adds	x12, x12, x15
   18f30:	ldr	x14, [x1]
   18f34:	csel	x10, x16, x10, cc  // cc = lo, ul, last
   18f38:	umulh	x15, x11, x13
   18f3c:	adds	x12, x12, x15
   18f40:	ldr	x24, [x0, #24]
   18f44:	umulh	x14, x14, x9
   18f48:	cinc	x10, x10, cs  // cs = hs, nlast
   18f4c:	adds	x12, x14, x12
   18f50:	sub	x26, x25, #0x1
   18f54:	add	x14, x12, #0x4
   18f58:	and	x14, x14, x26, lsr #2
   18f5c:	mov	x21, x4
   18f60:	mov	x19, x0
   18f64:	cinc	x10, x10, cs  // cs = hs, nlast
   18f68:	cmp	x14, #0x5
   18f6c:	mov	w20, w3
   18f70:	add	x29, sp, #0x30
   18f74:	b.cc	1917c <mpfr_mul@@Base+0x1600>  // b.lo, b.ul, b.last
   18f78:	umulh	x13, x8, x13
   18f7c:	umulh	x15, x8, x9
   18f80:	madd	x8, x9, x8, x13
   18f84:	umulh	x11, x11, x9
   18f88:	mov	w16, #0x2                   	// #2
   18f8c:	add	x17, x11, x8
   18f90:	cmp	x8, x13
   18f94:	add	x9, x10, x17
   18f98:	cset	w8, cc  // cc = lo, ul, last
   18f9c:	csinc	x13, x16, xzr, cc  // cc = lo, ul, last
   18fa0:	cmp	x17, x11
   18fa4:	csel	x8, x8, x13, cs  // cs = hs, nlast
   18fa8:	cmp	x9, x10
   18fac:	cinc	x8, x8, cc  // cc = lo, ul, last
   18fb0:	mov	w14, #0x1                   	// #1
   18fb4:	add	x10, x8, x15
   18fb8:	mov	w16, #0x1                   	// #1
   18fbc:	add	x8, x28, x27
   18fc0:	tbnz	x10, #63, 18fd8 <mpfr_mul@@Base+0x145c>
   18fc4:	sub	x8, x8, #0x1
   18fc8:	extr	x10, x10, x9, #63
   18fcc:	extr	x9, x9, x12, #63
   18fd0:	extr	x12, x12, x16, #63
   18fd4:	lsl	x16, x16, #1
   18fd8:	neg	x17, x25
   18fdc:	and	x13, x12, x17
   18fe0:	stp	x9, x10, [x24, #8]
   18fe4:	str	x13, [x24]
   18fe8:	ldr	w11, [x23, #8]
   18fec:	ldr	w15, [x22, #8]
   18ff0:	mul	w2, w15, w11
   18ff4:	str	w2, [x19, #8]
   18ff8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   18ffc:	ldr	x1, [x0, #2768]
   19000:	add	x0, x0, #0xad0
   19004:	blr	x1
   19008:	mrs	x11, tpidr_el0
   1900c:	ldr	x15, [x11, x0]
   19010:	cmp	x8, x15
   19014:	b.gt	1916c <mpfr_mul@@Base+0x15f0>
   19018:	mov	w15, #0xbf                  	// #191
   1901c:	mov	w18, #0x1                   	// #1
   19020:	sub	x15, x15, x21
   19024:	lsl	x15, x18, x15
   19028:	and	x0, x12, x26
   1902c:	and	x15, x12, x15
   19030:	eor	x12, x0, x15
   19034:	orr	x14, x16, x14
   19038:	orr	x12, x14, x12
   1903c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19040:	ldr	x1, [x0, #2736]
   19044:	add	x0, x0, #0xab0
   19048:	blr	x1
   1904c:	ldr	x14, [x11, x0]
   19050:	cmp	x8, x14
   19054:	b.lt	191a4 <mpfr_mul@@Base+0x1628>  // b.tstop
   19058:	mov	w0, wzr
   1905c:	cmp	w20, #0x5
   19060:	str	x8, [x19, #16]
   19064:	b.eq	1914c <mpfr_mul@@Base+0x15d0>  // b.none
   19068:	orr	x9, x12, x15
   1906c:	cbz	x9, 1914c <mpfr_mul@@Base+0x15d0>
   19070:	cmp	w20, #0x1
   19074:	b.eq	190cc <mpfr_mul@@Base+0x1550>  // b.none
   19078:	cbnz	w20, 190c0 <mpfr_mul@@Base+0x1544>
   1907c:	cbz	x15, 190cc <mpfr_mul@@Base+0x1550>
   19080:	cbnz	x12, 19090 <mpfr_mul@@Base+0x1514>
   19084:	ldr	x9, [x24]
   19088:	tst	x9, x25
   1908c:	b.eq	190cc <mpfr_mul@@Base+0x1550>  // b.none
   19090:	ldp	x9, x10, [x24]
   19094:	ldr	x12, [x24, #16]
   19098:	adds	x9, x9, x25
   1909c:	cinc	x10, x10, eq  // eq = none
   190a0:	stp	x9, x10, [x24]
   190a4:	orr	x9, x10, x9
   190a8:	cmp	x9, #0x0
   190ac:	cinc	x9, x12, eq  // eq = none
   190b0:	str	x9, [x24, #16]
   190b4:	cbz	x9, 190f4 <mpfr_mul@@Base+0x1578>
   190b8:	cbnz	w2, 19124 <mpfr_mul@@Base+0x15a8>
   190bc:	b	19148 <mpfr_mul@@Base+0x15cc>
   190c0:	add	w9, w20, w2, lsr #31
   190c4:	cmp	w9, #0x3
   190c8:	b.ne	19090 <mpfr_mul@@Base+0x1514>  // b.any
   190cc:	cbz	w2, 19148 <mpfr_mul@@Base+0x15cc>
   190d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   190d4:	ldr	x1, [x0, #2800]
   190d8:	add	x0, x0, #0xaf0
   190dc:	blr	x1
   190e0:	ldr	w8, [x11, x0]
   190e4:	orr	w8, w8, #0x8
   190e8:	str	w8, [x11, x0]
   190ec:	neg	w0, w2
   190f0:	b	1914c <mpfr_mul@@Base+0x15d0>
   190f4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   190f8:	str	x9, [x24, #16]
   190fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19100:	ldr	x1, [x0, #2768]
   19104:	add	x0, x0, #0xad0
   19108:	blr	x1
   1910c:	ldr	x9, [x11, x0]
   19110:	cmp	x8, x9
   19114:	b.ge	1916c <mpfr_mul@@Base+0x15f0>  // b.tcont
   19118:	add	x8, x8, #0x1
   1911c:	str	x8, [x19, #16]
   19120:	cbz	w2, 19148 <mpfr_mul@@Base+0x15cc>
   19124:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19128:	ldr	x1, [x0, #2800]
   1912c:	add	x0, x0, #0xaf0
   19130:	blr	x1
   19134:	ldr	w8, [x11, x0]
   19138:	orr	w8, w8, #0x8
   1913c:	str	w8, [x11, x0]
   19140:	mov	w0, w2
   19144:	b	1914c <mpfr_mul@@Base+0x15d0>
   19148:	mov	w0, wzr
   1914c:	ldp	x20, x19, [sp, #128]
   19150:	ldp	x22, x21, [sp, #112]
   19154:	ldp	x24, x23, [sp, #96]
   19158:	ldp	x26, x25, [sp, #80]
   1915c:	ldp	x28, x27, [sp, #64]
   19160:	ldp	x29, x30, [sp, #48]
   19164:	add	sp, sp, #0x90
   19168:	ret
   1916c:	mov	x0, x19
   19170:	mov	w1, w20
   19174:	bl	c3a0 <mpfr_overflow@plt>
   19178:	b	1914c <mpfr_mul@@Base+0x15d0>
   1917c:	mov	x0, sp
   19180:	mov	w3, #0x3                   	// #3
   19184:	bl	c940 <__gmpn_mul_n@plt>
   19188:	ldp	x11, x8, [sp]
   1918c:	ldp	x9, x10, [sp, #32]
   19190:	ldp	x16, x12, [sp, #16]
   19194:	orr	x14, x11, x8
   19198:	add	x8, x28, x27
   1919c:	tbz	x10, #63, 18fc4 <mpfr_mul@@Base+0x1448>
   191a0:	b	18fd8 <mpfr_mul@@Base+0x145c>
   191a4:	cmp	x13, x17
   191a8:	sub	x14, x14, #0x1
   191ac:	b.ne	191ec <mpfr_mul@@Base+0x1670>  // b.any
   191b0:	and	x16, x9, x10
   191b4:	cmn	x16, #0x1
   191b8:	b.ne	191ec <mpfr_mul@@Base+0x1670>  // b.any
   191bc:	cmp	x8, x14
   191c0:	b.ne	191ec <mpfr_mul@@Base+0x1670>  // b.any
   191c4:	cbnz	w20, 191cc <mpfr_mul@@Base+0x1650>
   191c8:	cbnz	x15, 19058 <mpfr_mul@@Base+0x14dc>
   191cc:	cmp	w20, #0x4
   191d0:	b.eq	191e4 <mpfr_mul@@Base+0x1668>  // b.none
   191d4:	mvn	w16, w2
   191d8:	add	w16, w20, w16, lsr #31
   191dc:	cmp	w16, #0x3
   191e0:	b.ne	191ec <mpfr_mul@@Base+0x1670>  // b.any
   191e4:	orr	x16, x12, x15
   191e8:	cbnz	x16, 19058 <mpfr_mul@@Base+0x14dc>
   191ec:	cbnz	w20, 19224 <mpfr_mul@@Base+0x16a8>
   191f0:	cmp	x8, x14
   191f4:	b.ge	19200 <mpfr_mul@@Base+0x1684>  // b.tcont
   191f8:	mov	w20, #0x1                   	// #1
   191fc:	b	19224 <mpfr_mul@@Base+0x16a8>
   19200:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   19204:	cmp	x10, x8
   19208:	mov	w20, wzr
   1920c:	b.ne	19224 <mpfr_mul@@Base+0x16a8>  // b.any
   19210:	cbnz	x9, 19224 <mpfr_mul@@Base+0x16a8>
   19214:	orr	x8, x12, x15
   19218:	orr	x8, x8, x13
   1921c:	cbz	x8, 191f8 <mpfr_mul@@Base+0x167c>
   19220:	mov	w20, wzr
   19224:	mov	x0, x19
   19228:	mov	w1, w20
   1922c:	bl	c880 <mpfr_underflow@plt>
   19230:	b	1914c <mpfr_mul@@Base+0x15d0>

0000000000019234 <mpfr_mul_ui@@Base>:
   19234:	stp	x29, x30, [sp, #-80]!
   19238:	stp	x26, x25, [sp, #16]
   1923c:	stp	x24, x23, [sp, #32]
   19240:	stp	x22, x21, [sp, #48]
   19244:	stp	x20, x19, [sp, #64]
   19248:	mov	x29, sp
   1924c:	sub	sp, sp, #0x10
   19250:	ldr	x9, [x1, #16]
   19254:	mov	x8, #0x2                   	// #2
   19258:	movk	x8, #0x8000, lsl #48
   1925c:	add	x10, x8, #0x2
   19260:	mov	x22, x2
   19264:	mov	x20, x1
   19268:	cmp	x9, x10
   1926c:	mov	x19, x0
   19270:	b.lt	19500 <mpfr_mul_ui@@Base+0x2cc>  // b.tstop
   19274:	mov	w21, w3
   19278:	subs	x23, x22, #0x1
   1927c:	b.hi	192a0 <mpfr_mul_ui@@Base+0x6c>  // b.pmore
   19280:	cbz	x22, 1951c <mpfr_mul_ui@@Base+0x2e8>
   19284:	ldr	w3, [x20, #8]
   19288:	mov	x0, x19
   1928c:	mov	x1, x20
   19290:	mov	w2, w21
   19294:	bl	cb70 <mpfr_set4@plt>
   19298:	mov	w24, w0
   1929c:	b	19530 <mpfr_mul_ui@@Base+0x2fc>
   192a0:	tst	x22, x23
   192a4:	b.eq	19568 <mpfr_mul_ui@@Base+0x334>  // b.none
   192a8:	ldr	x8, [x20]
   192ac:	stur	xzr, [x29, #-8]
   192b0:	sub	x9, x8, #0x1
   192b4:	add	x8, x8, #0x3e
   192b8:	cmp	x9, #0x0
   192bc:	csel	x8, x8, x9, lt  // lt = tstop
   192c0:	asr	x8, x8, #6
   192c4:	add	x25, x8, #0x2
   192c8:	lsl	x1, x25, #3
   192cc:	cmp	x1, #0x4, lsl #12
   192d0:	add	x23, x8, #0x1
   192d4:	b.hi	19598 <mpfr_mul_ui@@Base+0x364>  // b.pmore
   192d8:	add	x9, x1, #0xf
   192dc:	mov	x8, sp
   192e0:	and	x9, x9, #0xfffffffffffffff0
   192e4:	sub	x24, x8, x9
   192e8:	mov	sp, x24
   192ec:	ldr	x1, [x20, #24]
   192f0:	mov	x0, x24
   192f4:	mov	x2, x23
   192f8:	mov	x3, x22
   192fc:	bl	d230 <__gmpn_mul_1@plt>
   19300:	str	x0, [x24, x23, lsl #3]
   19304:	tbnz	x0, #63, 195a8 <mpfr_mul_ui@@Base+0x374>
   19308:	clz	x22, x0
   1930c:	mov	x0, x24
   19310:	mov	x1, x24
   19314:	mov	x2, x25
   19318:	mov	w3, w22
   1931c:	bl	c120 <__gmpn_lshift@plt>
   19320:	ldr	x8, [x19]
   19324:	lsl	x9, x25, #6
   19328:	mov	w10, #0x3e                  	// #62
   1932c:	sub	x11, x9, #0x1
   19330:	bfi	x10, x25, #6, #58
   19334:	cmp	x11, #0x0
   19338:	sub	x12, x8, #0x1
   1933c:	ldr	x23, [x19, #24]
   19340:	csel	x10, x10, x11, lt  // lt = tstop
   19344:	add	x13, x8, #0x3e
   19348:	cmp	x12, #0x0
   1934c:	csel	x12, x13, x12, lt  // lt = tstop
   19350:	asr	x10, x10, #6
   19354:	asr	x26, x12, #6
   19358:	add	x11, x10, #0x1
   1935c:	cmp	x8, x9
   19360:	add	x2, x26, #0x1
   19364:	b.ge	195b0 <mpfr_mul_ui@@Base+0x37c>  // b.tcont
   19368:	neg	w8, w8
   1936c:	add	x9, x24, x11, lsl #3
   19370:	mvn	x12, x26
   19374:	ands	x8, x8, #0x3f
   19378:	add	x1, x9, x12, lsl #3
   1937c:	b.eq	195f0 <mpfr_mul_ui@@Base+0x3bc>  // b.none
   19380:	ldr	x9, [x1]
   19384:	sub	x8, x8, #0x1
   19388:	mov	w12, #0x1                   	// #1
   1938c:	lsl	x12, x12, x8
   19390:	sub	x13, x12, #0x1
   19394:	and	x8, x9, x12
   19398:	and	x9, x9, x13
   1939c:	cbz	w21, 193d4 <mpfr_mul_ui@@Base+0x1a0>
   193a0:	cbz	x8, 193d4 <mpfr_mul_ui@@Base+0x1a0>
   193a4:	lsl	x25, x12, #1
   193a8:	cmp	w21, #0x5
   193ac:	b.eq	19458 <mpfr_mul_ui@@Base+0x224>  // b.none
   193b0:	cmp	w21, #0x1
   193b4:	b.eq	19410 <mpfr_mul_ui@@Base+0x1dc>  // b.none
   193b8:	cbnz	w21, 19400 <mpfr_mul_ui@@Base+0x1cc>
   193bc:	cbz	x8, 19410 <mpfr_mul_ui@@Base+0x1dc>
   193c0:	cbnz	x9, 19434 <mpfr_mul_ui@@Base+0x200>
   193c4:	ldr	x8, [x1]
   193c8:	tst	x8, x25
   193cc:	b.ne	19434 <mpfr_mul_ui@@Base+0x200>  // b.any
   193d0:	b	19418 <mpfr_mul_ui@@Base+0x1e4>
   193d4:	cbnz	x9, 193a4 <mpfr_mul_ui@@Base+0x170>
   193d8:	sub	x11, x11, x2
   193dc:	cbz	x11, 193a4 <mpfr_mul_ui@@Base+0x170>
   193e0:	mvn	x9, x26
   193e4:	add	x10, x9, x10
   193e8:	ldr	x9, [x24, x10, lsl #3]
   193ec:	subs	x10, x10, #0x1
   193f0:	cset	w11, cs  // cs = hs, nlast
   193f4:	cbnz	x9, 193a4 <mpfr_mul_ui@@Base+0x170>
   193f8:	tbnz	w11, #0, 193e8 <mpfr_mul_ui@@Base+0x1b4>
   193fc:	b	193a4 <mpfr_mul_ui@@Base+0x170>
   19400:	ldr	w10, [x20, #8]
   19404:	add	w10, w21, w10, lsr #31
   19408:	cmp	w10, #0x3
   1940c:	b.ne	1942c <mpfr_mul_ui@@Base+0x1f8>  // b.any
   19410:	orr	x8, x9, x8
   19414:	cbz	x8, 19458 <mpfr_mul_ui@@Base+0x224>
   19418:	ldr	w8, [x20, #8]
   1941c:	neg	w24, w8
   19420:	cmp	x23, x1
   19424:	b.ne	19464 <mpfr_mul_ui@@Base+0x230>  // b.any
   19428:	b	19470 <mpfr_mul_ui@@Base+0x23c>
   1942c:	orr	x8, x9, x8
   19430:	cbz	x8, 19458 <mpfr_mul_ui@@Base+0x224>
   19434:	ldr	w24, [x20, #8]
   19438:	mov	x0, x23
   1943c:	mov	x3, x25
   19440:	bl	bf60 <__gmpn_add_1@plt>
   19444:	cbz	x0, 19470 <mpfr_mul_ui@@Base+0x23c>
   19448:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   1944c:	sub	w22, w22, #0x1
   19450:	str	x8, [x23, x26, lsl #3]
   19454:	b	19470 <mpfr_mul_ui@@Base+0x23c>
   19458:	mov	w24, wzr
   1945c:	cmp	x23, x1
   19460:	b.eq	19470 <mpfr_mul_ui@@Base+0x23c>  // b.none
   19464:	lsl	x2, x2, #3
   19468:	mov	x0, x23
   1946c:	bl	be50 <memcpy@plt>
   19470:	ldr	x8, [x23]
   19474:	neg	x9, x25
   19478:	and	x8, x8, x9
   1947c:	str	x8, [x23]
   19480:	ldur	x0, [x29, #-8]
   19484:	cbnz	x0, 195e8 <mpfr_mul_ui@@Base+0x3b4>
   19488:	mov	w8, #0x40                  	// #64
   1948c:	sub	w9, w8, w22
   19490:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19494:	ldr	x1, [x0, #2768]
   19498:	add	x0, x0, #0xad0
   1949c:	blr	x1
   194a0:	mrs	x8, tpidr_el0
   194a4:	ldr	x10, [x8, x0]
   194a8:	sxtw	x9, w9
   194ac:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
   194b0:	add	x11, x9, x11
   194b4:	cmp	x10, x11
   194b8:	b.lt	19550 <mpfr_mul_ui@@Base+0x31c>  // b.tstop
   194bc:	ldr	x11, [x20, #16]
   194c0:	sub	x10, x10, x9
   194c4:	cmp	x11, x10
   194c8:	b.gt	19550 <mpfr_mul_ui@@Base+0x31c>
   194cc:	add	x9, x11, x9
   194d0:	str	x9, [x19, #16]
   194d4:	ldr	w9, [x20, #8]
   194d8:	str	w9, [x19, #8]
   194dc:	cbz	w24, 19530 <mpfr_mul_ui@@Base+0x2fc>
   194e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   194e4:	ldr	x1, [x0, #2800]
   194e8:	add	x0, x0, #0xaf0
   194ec:	blr	x1
   194f0:	ldr	w9, [x8, x0]
   194f4:	orr	w9, w9, #0x8
   194f8:	str	w9, [x8, x0]
   194fc:	b	19530 <mpfr_mul_ui@@Base+0x2fc>
   19500:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   19504:	cmp	x9, x10
   19508:	b.eq	1960c <mpfr_mul_ui@@Base+0x3d8>  // b.none
   1950c:	mov	x10, #0x2                   	// #2
   19510:	movk	x10, #0x8000, lsl #48
   19514:	cmp	x9, x10
   19518:	b.eq	1961c <mpfr_mul_ui@@Base+0x3e8>  // b.none
   1951c:	mov	w24, wzr
   19520:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   19524:	str	x8, [x19, #16]
   19528:	ldr	w8, [x20, #8]
   1952c:	str	w8, [x19, #8]
   19530:	mov	w0, w24
   19534:	mov	sp, x29
   19538:	ldp	x20, x19, [sp, #64]
   1953c:	ldp	x22, x21, [sp, #48]
   19540:	ldp	x24, x23, [sp, #32]
   19544:	ldp	x26, x25, [sp, #16]
   19548:	ldp	x29, x30, [sp], #80
   1954c:	ret
   19550:	ldr	w2, [x20, #8]
   19554:	mov	x0, x19
   19558:	mov	w1, w21
   1955c:	bl	c3a0 <mpfr_overflow@plt>
   19560:	mov	w24, w0
   19564:	b	19530 <mpfr_mul_ui@@Base+0x2fc>
   19568:	cmp	x22, #0x1
   1956c:	b.eq	19678 <mpfr_mul_ui@@Base+0x444>  // b.none
   19570:	cbz	x22, 19680 <mpfr_mul_ui@@Base+0x44c>
   19574:	clz	x8, x23
   19578:	mov	w9, #0x40                  	// #64
   1957c:	sub	x2, x9, x8
   19580:	mov	x0, x19
   19584:	mov	x1, x20
   19588:	mov	w3, w21
   1958c:	bl	bff0 <mpfr_mul_2si@plt>
   19590:	mov	w24, w0
   19594:	b	19530 <mpfr_mul_ui@@Base+0x2fc>
   19598:	sub	x0, x29, #0x8
   1959c:	bl	c220 <mpfr_tmp_allocate@plt>
   195a0:	mov	x24, x0
   195a4:	b	192ec <mpfr_mul_ui@@Base+0xb8>
   195a8:	mov	w22, wzr
   195ac:	b	19320 <mpfr_mul_ui@@Base+0xec>
   195b0:	sub	x25, x2, x11
   195b4:	add	x0, x23, x25, lsl #3
   195b8:	cmp	x0, x24
   195bc:	b.eq	195cc <mpfr_mul_ui@@Base+0x398>  // b.none
   195c0:	lsl	x2, x11, #3
   195c4:	mov	x1, x24
   195c8:	bl	be50 <memcpy@plt>
   195cc:	lsl	x2, x25, #3
   195d0:	mov	x0, x23
   195d4:	mov	w1, wzr
   195d8:	bl	c5b0 <memset@plt>
   195dc:	mov	w24, wzr
   195e0:	ldur	x0, [x29, #-8]
   195e4:	cbz	x0, 19488 <mpfr_mul_ui@@Base+0x254>
   195e8:	bl	c8d0 <mpfr_tmp_free@plt>
   195ec:	b	19488 <mpfr_mul_ui@@Base+0x254>
   195f0:	ldur	x9, [x1, #-8]
   195f4:	and	x8, x9, #0x8000000000000000
   195f8:	and	x9, x9, #0x7fffffffffffffff
   195fc:	cbz	w21, 19644 <mpfr_mul_ui@@Base+0x410>
   19600:	cbz	x8, 19644 <mpfr_mul_ui@@Base+0x410>
   19604:	mov	w25, #0x1                   	// #1
   19608:	b	193a8 <mpfr_mul_ui@@Base+0x174>
   1960c:	cbz	x22, 1961c <mpfr_mul_ui@@Base+0x3e8>
   19610:	mov	w24, wzr
   19614:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   19618:	b	19524 <mpfr_mul_ui@@Base+0x2f0>
   1961c:	str	x8, [x19, #16]
   19620:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19624:	ldr	x1, [x0, #2800]
   19628:	add	x0, x0, #0xaf0
   1962c:	blr	x1
   19630:	mrs	x8, tpidr_el0
   19634:	ldr	w9, [x8, x0]
   19638:	mov	w24, wzr
   1963c:	orr	w9, w9, #0x4
   19640:	b	194f8 <mpfr_mul_ui@@Base+0x2c4>
   19644:	mov	w25, #0x1                   	// #1
   19648:	cbnz	x9, 193a8 <mpfr_mul_ui@@Base+0x174>
   1964c:	sub	x11, x10, x2
   19650:	cbz	x11, 193a8 <mpfr_mul_ui@@Base+0x174>
   19654:	sub	x9, x10, x26
   19658:	sub	x10, x9, #0x2
   1965c:	mov	w25, #0x1                   	// #1
   19660:	ldr	x9, [x24, x10, lsl #3]
   19664:	subs	x10, x10, #0x1
   19668:	cset	w11, cs  // cs = hs, nlast
   1966c:	cbnz	x9, 193a8 <mpfr_mul_ui@@Base+0x174>
   19670:	tbnz	w11, #0, 19660 <mpfr_mul_ui@@Base+0x42c>
   19674:	b	193a8 <mpfr_mul_ui@@Base+0x174>
   19678:	mov	x2, xzr
   1967c:	b	19580 <mpfr_mul_ui@@Base+0x34c>
   19680:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   19684:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   19688:	add	x0, x0, #0xafe
   1968c:	add	x2, x2, #0x127
   19690:	mov	w1, #0x4c                  	// #76
   19694:	bl	d030 <mpfr_assert_fail@plt>
   19698:	b	19574 <mpfr_mul_ui@@Base+0x340>

000000000001969c <mpfr_neg@@Base>:
   1969c:	stp	x29, x30, [sp, #-16]!
   196a0:	cmp	x0, x1
   196a4:	mov	x29, sp
   196a8:	b.ne	196d8 <mpfr_neg@@Base+0x3c>  // b.any
   196ac:	ldr	w8, [x0, #8]
   196b0:	mov	x9, #0x2                   	// #2
   196b4:	movk	x9, #0x8000, lsl #48
   196b8:	neg	w8, w8
   196bc:	str	w8, [x0, #8]
   196c0:	ldr	x8, [x1, #16]
   196c4:	mov	w0, wzr
   196c8:	cmp	x8, x9
   196cc:	b.eq	196ec <mpfr_neg@@Base+0x50>  // b.none
   196d0:	ldp	x29, x30, [sp], #16
   196d4:	ret
   196d8:	ldr	w8, [x1, #8]
   196dc:	neg	w3, w8
   196e0:	bl	cb70 <mpfr_set4@plt>
   196e4:	ldp	x29, x30, [sp], #16
   196e8:	ret
   196ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   196f0:	ldr	x1, [x0, #2800]
   196f4:	add	x0, x0, #0xaf0
   196f8:	blr	x1
   196fc:	mov	x8, x0
   19700:	mrs	x9, tpidr_el0
   19704:	ldr	w10, [x9, x8]
   19708:	mov	w0, wzr
   1970c:	orr	w10, w10, #0x4
   19710:	str	w10, [x9, x8]
   19714:	ldp	x29, x30, [sp], #16
   19718:	ret

000000000001971c <mpfr_nexttozero@@Base>:
   1971c:	stp	x29, x30, [sp, #-48]!
   19720:	stp	x20, x19, [sp, #32]
   19724:	ldr	x8, [x0, #16]
   19728:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1972c:	mov	x19, x0
   19730:	str	x21, [sp, #16]
   19734:	cmp	x8, x9
   19738:	mov	x29, sp
   1973c:	b.le	19790 <mpfr_nexttozero@@Base+0x74>
   19740:	ldr	x8, [x19]
   19744:	ldr	x20, [x19, #24]
   19748:	mov	w9, #0x1                   	// #1
   1974c:	sub	x10, x8, #0x1
   19750:	add	x11, x8, #0x3e
   19754:	cmp	x10, #0x0
   19758:	csel	x10, x11, x10, lt  // lt = tstop
   1975c:	neg	w8, w8
   19760:	asr	x21, x10, #6
   19764:	add	x2, x21, #0x1
   19768:	lsl	x3, x9, x8
   1976c:	mov	x0, x20
   19770:	mov	x1, x20
   19774:	bl	c8f0 <__gmpn_sub_1@plt>
   19778:	ldr	x8, [x20, x21, lsl #3]
   1977c:	tbz	x8, #63, 197b8 <mpfr_nexttozero@@Base+0x9c>
   19780:	ldp	x20, x19, [sp, #32]
   19784:	ldr	x21, [sp, #16]
   19788:	ldp	x29, x30, [sp], #48
   1978c:	ret
   19790:	b.ne	197f8 <mpfr_nexttozero@@Base+0xdc>  // b.any
   19794:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19798:	ldr	x1, [x0, #2768]
   1979c:	add	x0, x0, #0xad0
   197a0:	blr	x1
   197a4:	mrs	x8, tpidr_el0
   197a8:	ldr	x1, [x8, x0]
   197ac:	mov	x0, x19
   197b0:	bl	c560 <mpfr_setmax@plt>
   197b4:	b	19780 <mpfr_nexttozero@@Base+0x64>
   197b8:	ldr	x8, [x19, #16]
   197bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   197c0:	ldr	x1, [x0, #2736]
   197c4:	add	x0, x0, #0xab0
   197c8:	blr	x1
   197cc:	mrs	x9, tpidr_el0
   197d0:	ldr	x9, [x9, x0]
   197d4:	cmp	x8, x9
   197d8:	b.eq	19834 <mpfr_nexttozero@@Base+0x118>  // b.none
   197dc:	sub	x8, x8, #0x1
   197e0:	str	x8, [x19, #16]
   197e4:	lsl	x8, x21, #3
   197e8:	ldr	x9, [x20, x8]
   197ec:	orr	x9, x9, #0x8000000000000000
   197f0:	str	x9, [x20, x8]
   197f4:	b	19780 <mpfr_nexttozero@@Base+0x64>
   197f8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   197fc:	cmp	x8, x9
   19800:	b.ne	19840 <mpfr_nexttozero@@Base+0x124>  // b.any
   19804:	ldr	w8, [x19, #8]
   19808:	neg	w8, w8
   1980c:	str	w8, [x19, #8]
   19810:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19814:	ldr	x1, [x0, #2736]
   19818:	add	x0, x0, #0xab0
   1981c:	blr	x1
   19820:	mrs	x8, tpidr_el0
   19824:	ldr	x1, [x8, x0]
   19828:	mov	x0, x19
   1982c:	bl	c770 <mpfr_setmin@plt>
   19830:	b	19780 <mpfr_nexttozero@@Base+0x64>
   19834:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   19838:	str	x8, [x19, #16]
   1983c:	b	19780 <mpfr_nexttozero@@Base+0x64>
   19840:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   19844:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   19848:	add	x0, x0, #0xb07
   1984c:	add	x2, x2, #0xb0e
   19850:	mov	w1, #0x2b                  	// #43
   19854:	bl	d030 <mpfr_assert_fail@plt>
   19858:	b	19804 <mpfr_nexttozero@@Base+0xe8>

000000000001985c <mpfr_nexttoinf@@Base>:
   1985c:	stp	x29, x30, [sp, #-48]!
   19860:	stp	x20, x19, [sp, #32]
   19864:	ldr	x8, [x0, #16]
   19868:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1986c:	mov	x19, x0
   19870:	str	x21, [sp, #16]
   19874:	cmp	x8, x9
   19878:	mov	x29, sp
   1987c:	b.le	198cc <mpfr_nexttoinf@@Base+0x70>
   19880:	ldr	x8, [x19]
   19884:	ldr	x20, [x19, #24]
   19888:	mov	w9, #0x1                   	// #1
   1988c:	sub	x10, x8, #0x1
   19890:	add	x11, x8, #0x3e
   19894:	cmp	x10, #0x0
   19898:	csel	x10, x11, x10, lt  // lt = tstop
   1989c:	neg	w8, w8
   198a0:	asr	x21, x10, #6
   198a4:	add	x2, x21, #0x1
   198a8:	lsl	x3, x9, x8
   198ac:	mov	x0, x20
   198b0:	mov	x1, x20
   198b4:	bl	bf60 <__gmpn_add_1@plt>
   198b8:	cbnz	x0, 198fc <mpfr_nexttoinf@@Base+0xa0>
   198bc:	ldp	x20, x19, [sp, #32]
   198c0:	ldr	x21, [sp, #16]
   198c4:	ldp	x29, x30, [sp], #48
   198c8:	ret
   198cc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   198d0:	cmp	x8, x9
   198d4:	b.ne	198bc <mpfr_nexttoinf@@Base+0x60>  // b.any
   198d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   198dc:	ldr	x1, [x0, #2736]
   198e0:	add	x0, x0, #0xab0
   198e4:	blr	x1
   198e8:	mrs	x8, tpidr_el0
   198ec:	ldr	x1, [x8, x0]
   198f0:	mov	x0, x19
   198f4:	bl	c770 <mpfr_setmin@plt>
   198f8:	b	198bc <mpfr_nexttoinf@@Base+0x60>
   198fc:	ldr	x8, [x19, #16]
   19900:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19904:	ldr	x1, [x0, #2768]
   19908:	add	x0, x0, #0xad0
   1990c:	blr	x1
   19910:	mrs	x9, tpidr_el0
   19914:	ldr	x9, [x9, x0]
   19918:	cmp	x8, x9
   1991c:	b.eq	19934 <mpfr_nexttoinf@@Base+0xd8>  // b.none
   19920:	add	x8, x8, #0x1
   19924:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   19928:	str	x8, [x19, #16]
   1992c:	str	x9, [x20, x21, lsl #3]
   19930:	b	198bc <mpfr_nexttoinf@@Base+0x60>
   19934:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   19938:	str	x8, [x19, #16]
   1993c:	b	198bc <mpfr_nexttoinf@@Base+0x60>

0000000000019940 <mpfr_nextabove@@Base>:
   19940:	stp	x29, x30, [sp, #-16]!
   19944:	ldr	x8, [x0, #16]
   19948:	mov	x9, #0x2                   	// #2
   1994c:	movk	x9, #0x8000, lsl #48
   19950:	mov	x29, sp
   19954:	cmp	x8, x9
   19958:	b.eq	1997c <mpfr_nextabove@@Base+0x3c>  // b.none
   1995c:	ldr	w8, [x0, #8]
   19960:	tbnz	w8, #31, 19970 <mpfr_nextabove@@Base+0x30>
   19964:	bl	cb40 <mpfr_nexttoinf@plt>
   19968:	ldp	x29, x30, [sp], #16
   1996c:	ret
   19970:	bl	c930 <mpfr_nexttozero@plt>
   19974:	ldp	x29, x30, [sp], #16
   19978:	ret
   1997c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19980:	ldr	x1, [x0, #2800]
   19984:	add	x0, x0, #0xaf0
   19988:	blr	x1
   1998c:	mrs	x8, tpidr_el0
   19990:	ldr	w9, [x8, x0]
   19994:	orr	w9, w9, #0x4
   19998:	str	w9, [x8, x0]
   1999c:	ldp	x29, x30, [sp], #16
   199a0:	ret

00000000000199a4 <mpfr_nextbelow@@Base>:
   199a4:	stp	x29, x30, [sp, #-16]!
   199a8:	ldr	x8, [x0, #16]
   199ac:	mov	x9, #0x2                   	// #2
   199b0:	movk	x9, #0x8000, lsl #48
   199b4:	mov	x29, sp
   199b8:	cmp	x8, x9
   199bc:	b.eq	199e0 <mpfr_nextbelow@@Base+0x3c>  // b.none
   199c0:	ldr	w8, [x0, #8]
   199c4:	tbnz	w8, #31, 199d4 <mpfr_nextbelow@@Base+0x30>
   199c8:	bl	c930 <mpfr_nexttozero@plt>
   199cc:	ldp	x29, x30, [sp], #16
   199d0:	ret
   199d4:	bl	cb40 <mpfr_nexttoinf@plt>
   199d8:	ldp	x29, x30, [sp], #16
   199dc:	ret
   199e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   199e4:	ldr	x1, [x0, #2800]
   199e8:	add	x0, x0, #0xaf0
   199ec:	blr	x1
   199f0:	mrs	x8, tpidr_el0
   199f4:	ldr	w9, [x8, x0]
   199f8:	orr	w9, w9, #0x4
   199fc:	str	w9, [x8, x0]
   19a00:	ldp	x29, x30, [sp], #16
   19a04:	ret

0000000000019a08 <mpfr_nexttoward@@Base>:
   19a08:	stp	x29, x30, [sp, #-32]!
   19a0c:	ldr	x9, [x0, #16]
   19a10:	mov	x8, #0x2                   	// #2
   19a14:	movk	x8, #0x8000, lsl #48
   19a18:	str	x19, [sp, #16]
   19a1c:	cmp	x9, x8
   19a20:	mov	x29, sp
   19a24:	b.eq	19a70 <mpfr_nexttoward@@Base+0x68>  // b.none
   19a28:	ldr	x9, [x1, #16]
   19a2c:	mov	x19, x0
   19a30:	cmp	x9, x8
   19a34:	b.eq	19a6c <mpfr_nexttoward@@Base+0x64>  // b.none
   19a38:	mov	w2, #0x1                   	// #1
   19a3c:	mov	x0, x19
   19a40:	bl	ce90 <mpfr_cmp3@plt>
   19a44:	cbz	w0, 19a60 <mpfr_nexttoward@@Base+0x58>
   19a48:	tbnz	w0, #31, 19a58 <mpfr_nexttoward@@Base+0x50>
   19a4c:	mov	x0, x19
   19a50:	bl	c230 <mpfr_nextbelow@plt>
   19a54:	b	19a60 <mpfr_nexttoward@@Base+0x58>
   19a58:	mov	x0, x19
   19a5c:	bl	c5c0 <mpfr_nextabove@plt>
   19a60:	ldr	x19, [sp, #16]
   19a64:	ldp	x29, x30, [sp], #32
   19a68:	ret
   19a6c:	str	x8, [x19, #16]
   19a70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   19a74:	ldr	x1, [x0, #2800]
   19a78:	add	x0, x0, #0xaf0
   19a7c:	blr	x1
   19a80:	mrs	x8, tpidr_el0
   19a84:	ldr	w9, [x8, x0]
   19a88:	orr	w9, w9, #0x4
   19a8c:	str	w9, [x8, x0]
   19a90:	b	19a60 <mpfr_nexttoward@@Base+0x58>

0000000000019a94 <__gmpfr_out_str@@Base>:
   19a94:	stp	x29, x30, [sp, #-64]!
   19a98:	sub	w8, w1, #0x2
   19a9c:	str	x23, [sp, #16]
   19aa0:	stp	x22, x21, [sp, #32]
   19aa4:	stp	x20, x19, [sp, #48]
   19aa8:	mov	w22, w4
   19aac:	mov	x20, x3
   19ab0:	mov	x23, x2
   19ab4:	mov	w21, w1
   19ab8:	cmp	w8, #0x3d
   19abc:	mov	x19, x0
   19ac0:	mov	x29, sp
   19ac4:	b.cs	19c00 <__gmpfr_out_str@@Base+0x16c>  // b.hs, b.nlast
   19ac8:	ldr	x8, [x20, #16]
   19acc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   19ad0:	cmp	x8, x9
   19ad4:	b.le	19c1c <__gmpfr_out_str@@Base+0x188>
   19ad8:	add	x1, x29, #0x18
   19adc:	mov	x0, xzr
   19ae0:	mov	w2, w21
   19ae4:	mov	x3, x23
   19ae8:	mov	x4, x20
   19aec:	mov	w5, w22
   19af0:	bl	c9d0 <mpfr_get_str@plt>
   19af4:	mov	x22, x0
   19af8:	bl	bf00 <strlen@plt>
   19afc:	ldrb	w8, [x22]
   19b00:	add	x20, x0, #0x1
   19b04:	mov	x23, x22
   19b08:	cmp	w8, #0x2d
   19b0c:	b.ne	19b28 <__gmpfr_out_str@@Base+0x94>  // b.any
   19b10:	mov	w0, #0x2d                  	// #45
   19b14:	mov	x1, x19
   19b18:	bl	c200 <fputc@plt>
   19b1c:	cmn	w0, #0x1
   19b20:	b.eq	19bd8 <__gmpfr_out_str@@Base+0x144>  // b.none
   19b24:	add	x23, x22, #0x1
   19b28:	ldrb	w0, [x23], #1
   19b2c:	mov	x1, x19
   19b30:	bl	c200 <fputc@plt>
   19b34:	cmn	w0, #0x1
   19b38:	b.eq	19bd8 <__gmpfr_out_str@@Base+0x144>  // b.none
   19b3c:	bl	c300 <localeconv@plt>
   19b40:	ldr	x8, [x0]
   19b44:	ldrb	w8, [x8, #1]
   19b48:	cbz	w8, 19b54 <__gmpfr_out_str@@Base+0xc0>
   19b4c:	mov	w0, #0x2e                  	// #46
   19b50:	b	19b60 <__gmpfr_out_str@@Base+0xcc>
   19b54:	bl	c300 <localeconv@plt>
   19b58:	ldr	x8, [x0]
   19b5c:	ldrb	w0, [x8]
   19b60:	mov	x1, x19
   19b64:	bl	c200 <fputc@plt>
   19b68:	cmn	w0, #0x1
   19b6c:	b.eq	19bd8 <__gmpfr_out_str@@Base+0x144>  // b.none
   19b70:	mov	x0, x23
   19b74:	mov	x1, x19
   19b78:	bl	bf10 <fputs@plt>
   19b7c:	mov	w23, w0
   19b80:	mov	x0, x22
   19b84:	mov	x1, x20
   19b88:	bl	d120 <mpfr_free_func@plt>
   19b8c:	cmn	w23, #0x1
   19b90:	b.eq	19be4 <__gmpfr_out_str@@Base+0x150>  // b.none
   19b94:	ldr	x8, [x29, #24]
   19b98:	subs	x2, x8, #0x1
   19b9c:	str	x2, [x29, #24]
   19ba0:	b.eq	19be8 <__gmpfr_out_str@@Base+0x154>  // b.none
   19ba4:	adrp	x8, 5b000 <mpfr_free_pool@@Base+0x3854>
   19ba8:	adrp	x9, 5b000 <mpfr_free_pool@@Base+0x3854>
   19bac:	add	x8, x8, #0xb70
   19bb0:	add	x9, x9, #0xb6b
   19bb4:	cmp	w21, #0xb
   19bb8:	csel	x1, x9, x8, lt  // lt = tstop
   19bbc:	mov	x0, x19
   19bc0:	bl	d1e0 <fprintf@plt>
   19bc4:	cmp	w0, #0x0
   19bc8:	csel	w8, wzr, w0, lt  // lt = tstop
   19bcc:	tbnz	w0, #31, 19be4 <__gmpfr_out_str@@Base+0x150>
   19bd0:	add	x20, x20, x8
   19bd4:	b	19be8 <__gmpfr_out_str@@Base+0x154>
   19bd8:	mov	x0, x22
   19bdc:	mov	x1, x20
   19be0:	bl	d120 <mpfr_free_func@plt>
   19be4:	mov	x20, xzr
   19be8:	mov	x0, x20
   19bec:	ldp	x20, x19, [sp, #48]
   19bf0:	ldp	x22, x21, [sp, #32]
   19bf4:	ldr	x23, [sp, #16]
   19bf8:	ldp	x29, x30, [sp], #64
   19bfc:	ret
   19c00:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   19c04:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   19c08:	add	x0, x0, #0xb46
   19c0c:	add	x2, x2, #0xb50
   19c10:	mov	w1, #0x2c                  	// #44
   19c14:	bl	d030 <mpfr_assert_fail@plt>
   19c18:	b	19ac8 <__gmpfr_out_str@@Base+0x34>
   19c1c:	b.eq	19c3c <__gmpfr_out_str@@Base+0x1a8>  // b.none
   19c20:	mov	x9, #0x2                   	// #2
   19c24:	movk	x9, #0x8000, lsl #48
   19c28:	cmp	x8, x9
   19c2c:	b.ne	19c54 <__gmpfr_out_str@@Base+0x1c0>  // b.any
   19c30:	adrp	x1, 5b000 <mpfr_free_pool@@Base+0x3854>
   19c34:	add	x1, x1, #0x12f
   19c38:	b	19c70 <__gmpfr_out_str@@Base+0x1dc>
   19c3c:	ldr	w8, [x20, #8]
   19c40:	adrp	x9, 5b000 <mpfr_free_pool@@Base+0x3854>
   19c44:	adrp	x10, 5b000 <mpfr_free_pool@@Base+0x3854>
   19c48:	add	x9, x9, #0x974
   19c4c:	add	x10, x10, #0x975
   19c50:	b	19c68 <__gmpfr_out_str@@Base+0x1d4>
   19c54:	ldr	w8, [x20, #8]
   19c58:	adrp	x9, 5b000 <mpfr_free_pool@@Base+0x3854>
   19c5c:	adrp	x10, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   19c60:	add	x9, x9, #0xb68
   19c64:	add	x10, x10, #0x8ca
   19c68:	cmp	w8, #0x0
   19c6c:	csel	x1, x10, x9, gt
   19c70:	mov	x0, x19
   19c74:	bl	d1e0 <fprintf@plt>
   19c78:	bic	w20, w0, w0, asr #31
   19c7c:	b	19be8 <__gmpfr_out_str@@Base+0x154>

0000000000019c80 <mpfr_printf@@Base>:
   19c80:	sub	sp, sp, #0x130
   19c84:	stp	x29, x30, [sp, #272]
   19c88:	add	x29, sp, #0x110
   19c8c:	mov	x10, #0xffffffffffffffc8    	// #-56
   19c90:	mov	x11, sp
   19c94:	add	x12, sp, #0x88
   19c98:	movk	x10, #0xff80, lsl #32
   19c9c:	add	x13, x29, #0x20
   19ca0:	add	x11, x11, #0x80
   19ca4:	add	x12, x12, #0x38
   19ca8:	sub	x9, x29, #0x28
   19cac:	stp	x11, x10, [x29, #-24]
   19cb0:	stp	x13, x12, [x29, #-40]
   19cb4:	stp	q0, q1, [sp]
   19cb8:	ldp	q0, q1, [x9]
   19cbc:	mov	x8, x0
   19cc0:	stp	x1, x2, [sp, #136]
   19cc4:	sub	x0, x29, #0x8
   19cc8:	sub	x2, x29, #0x50
   19ccc:	mov	x1, x8
   19cd0:	stp	x28, x19, [sp, #288]
   19cd4:	stp	x3, x4, [sp, #152]
   19cd8:	stp	x5, x6, [sp, #168]
   19cdc:	str	x7, [sp, #184]
   19ce0:	stp	q2, q3, [sp, #32]
   19ce4:	stp	q4, q5, [sp, #64]
   19ce8:	stp	q6, q7, [sp, #96]
   19cec:	stp	q0, q1, [x29, #-80]
   19cf0:	bl	c440 <__gmpfr_vasprintf@plt>
   19cf4:	tbnz	w0, #31, 19d1c <mpfr_printf@@Base+0x9c>
   19cf8:	ldur	x1, [x29, #-8]
   19cfc:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   19d00:	add	x0, x0, #0xb75
   19d04:	bl	d0e0 <printf@plt>
   19d08:	ldur	x8, [x29, #-8]
   19d0c:	mov	w19, w0
   19d10:	mov	x0, x8
   19d14:	bl	cd70 <mpfr_free_str@plt>
   19d18:	b	19d2c <mpfr_printf@@Base+0xac>
   19d1c:	ldur	x0, [x29, #-8]
   19d20:	cbz	x0, 19d28 <mpfr_printf@@Base+0xa8>
   19d24:	bl	cd70 <mpfr_free_str@plt>
   19d28:	mov	w19, #0xffffffff            	// #-1
   19d2c:	mov	w0, w19
   19d30:	ldp	x28, x19, [sp, #288]
   19d34:	ldp	x29, x30, [sp, #272]
   19d38:	add	sp, sp, #0x130
   19d3c:	ret

0000000000019d40 <__gmpfr_vasprintf@@Base>:
   19d40:	sub	sp, sp, #0x30
   19d44:	stp	x29, x30, [sp, #32]
   19d48:	ldp	q1, q0, [x2]
   19d4c:	mov	x3, x1
   19d50:	mov	x4, sp
   19d54:	mov	x1, xzr
   19d58:	mov	x2, xzr
   19d5c:	add	x29, sp, #0x20
   19d60:	stp	q1, q0, [sp]
   19d64:	bl	c080 <mpfr_vasnprintf_aux@plt>
   19d68:	ldp	x29, x30, [sp, #32]
   19d6c:	add	sp, sp, #0x30
   19d70:	ret

0000000000019d74 <__gmpfr_vprintf@@Base>:
   19d74:	sub	sp, sp, #0x40
   19d78:	stp	x29, x30, [sp, #32]
   19d7c:	str	x19, [sp, #48]
   19d80:	ldp	q1, q0, [x1]
   19d84:	add	x29, sp, #0x20
   19d88:	mov	x8, x0
   19d8c:	add	x0, x29, #0x18
   19d90:	mov	x2, sp
   19d94:	mov	x1, x8
   19d98:	stp	q1, q0, [sp]
   19d9c:	bl	c440 <__gmpfr_vasprintf@plt>
   19da0:	ldr	x1, [x29, #24]
   19da4:	tbnz	w0, #31, 19dc8 <__gmpfr_vprintf@@Base+0x54>
   19da8:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   19dac:	add	x0, x0, #0xb75
   19db0:	bl	d0e0 <printf@plt>
   19db4:	ldr	x8, [x29, #24]
   19db8:	mov	w19, w0
   19dbc:	mov	x0, x8
   19dc0:	bl	cd70 <mpfr_free_str@plt>
   19dc4:	b	19dd8 <__gmpfr_vprintf@@Base+0x64>
   19dc8:	cbz	x1, 19dd4 <__gmpfr_vprintf@@Base+0x60>
   19dcc:	mov	x0, x1
   19dd0:	bl	cd70 <mpfr_free_str@plt>
   19dd4:	mov	w19, #0xffffffff            	// #-1
   19dd8:	mov	w0, w19
   19ddc:	ldr	x19, [sp, #48]
   19de0:	ldp	x29, x30, [sp, #32]
   19de4:	add	sp, sp, #0x40
   19de8:	ret

0000000000019dec <__gmpfr_fprintf@@Base>:
   19dec:	sub	sp, sp, #0x120
   19df0:	stp	x29, x30, [sp, #256]
   19df4:	add	x29, sp, #0x100
   19df8:	mov	x9, #0xffffffffffffffd0    	// #-48
   19dfc:	mov	x10, sp
   19e00:	add	x11, sp, #0x80
   19e04:	movk	x9, #0xff80, lsl #32
   19e08:	add	x12, x29, #0x20
   19e0c:	add	x10, x10, #0x80
   19e10:	add	x11, x11, #0x30
   19e14:	sub	x8, x29, #0x28
   19e18:	stp	x10, x9, [x29, #-24]
   19e1c:	stp	x12, x11, [x29, #-40]
   19e20:	stp	q1, q2, [sp, #16]
   19e24:	str	q0, [sp]
   19e28:	ldp	q0, q1, [x8]
   19e2c:	stp	x28, x19, [sp, #272]
   19e30:	mov	x19, x0
   19e34:	stp	x2, x3, [sp, #128]
   19e38:	sub	x0, x29, #0x8
   19e3c:	sub	x2, x29, #0x50
   19e40:	stp	x4, x5, [sp, #144]
   19e44:	stp	x6, x7, [sp, #160]
   19e48:	stp	q3, q4, [sp, #48]
   19e4c:	stp	q5, q6, [sp, #80]
   19e50:	str	q7, [sp, #112]
   19e54:	stp	q0, q1, [x29, #-80]
   19e58:	bl	c440 <__gmpfr_vasprintf@plt>
   19e5c:	tbnz	w0, #31, 19e88 <__gmpfr_fprintf@@Base+0x9c>
   19e60:	ldur	x2, [x29, #-8]
   19e64:	adrp	x1, 5b000 <mpfr_free_pool@@Base+0x3854>
   19e68:	add	x1, x1, #0xb75
   19e6c:	mov	x0, x19
   19e70:	bl	d1e0 <fprintf@plt>
   19e74:	ldur	x8, [x29, #-8]
   19e78:	mov	w19, w0
   19e7c:	mov	x0, x8
   19e80:	bl	cd70 <mpfr_free_str@plt>
   19e84:	b	19e98 <__gmpfr_fprintf@@Base+0xac>
   19e88:	ldur	x0, [x29, #-8]
   19e8c:	cbz	x0, 19e94 <__gmpfr_fprintf@@Base+0xa8>
   19e90:	bl	cd70 <mpfr_free_str@plt>
   19e94:	mov	w19, #0xffffffff            	// #-1
   19e98:	mov	w0, w19
   19e9c:	ldp	x28, x19, [sp, #272]
   19ea0:	ldp	x29, x30, [sp, #256]
   19ea4:	add	sp, sp, #0x120
   19ea8:	ret

0000000000019eac <__gmpfr_vfprintf@@Base>:
   19eac:	sub	sp, sp, #0x40
   19eb0:	stp	x29, x30, [sp, #32]
   19eb4:	str	x19, [sp, #48]
   19eb8:	ldp	q1, q0, [x2]
   19ebc:	add	x29, sp, #0x20
   19ec0:	mov	x19, x0
   19ec4:	add	x0, x29, #0x18
   19ec8:	mov	x2, sp
   19ecc:	stp	q1, q0, [sp]
   19ed0:	bl	c440 <__gmpfr_vasprintf@plt>
   19ed4:	ldr	x2, [x29, #24]
   19ed8:	tbnz	w0, #31, 19f00 <__gmpfr_vfprintf@@Base+0x54>
   19edc:	adrp	x1, 5b000 <mpfr_free_pool@@Base+0x3854>
   19ee0:	add	x1, x1, #0xb75
   19ee4:	mov	x0, x19
   19ee8:	bl	d1e0 <fprintf@plt>
   19eec:	ldr	x8, [x29, #24]
   19ef0:	mov	w19, w0
   19ef4:	mov	x0, x8
   19ef8:	bl	cd70 <mpfr_free_str@plt>
   19efc:	b	19f10 <__gmpfr_vfprintf@@Base+0x64>
   19f00:	cbz	x2, 19f0c <__gmpfr_vfprintf@@Base+0x60>
   19f04:	mov	x0, x2
   19f08:	bl	cd70 <mpfr_free_str@plt>
   19f0c:	mov	w19, #0xffffffff            	// #-1
   19f10:	mov	w0, w19
   19f14:	ldr	x19, [sp, #48]
   19f18:	ldp	x29, x30, [sp, #32]
   19f1c:	add	sp, sp, #0x40
   19f20:	ret

0000000000019f24 <mpfr_sprintf@@Base>:
   19f24:	sub	sp, sp, #0x130
   19f28:	stp	x29, x30, [sp, #256]
   19f2c:	add	x29, sp, #0x100
   19f30:	mov	x9, #0xffffffffffffffd0    	// #-48
   19f34:	mov	x10, sp
   19f38:	add	x11, sp, #0x80
   19f3c:	movk	x9, #0xff80, lsl #32
   19f40:	add	x12, x29, #0x30
   19f44:	add	x10, x10, #0x80
   19f48:	add	x11, x11, #0x30
   19f4c:	sub	x8, x29, #0x28
   19f50:	stp	x10, x9, [x29, #-24]
   19f54:	stp	x12, x11, [x29, #-40]
   19f58:	stp	q1, q2, [sp, #16]
   19f5c:	str	q0, [sp]
   19f60:	ldp	q0, q1, [x8]
   19f64:	stp	x20, x19, [sp, #288]
   19f68:	mov	x19, x0
   19f6c:	stp	x2, x3, [sp, #128]
   19f70:	sub	x0, x29, #0x8
   19f74:	sub	x2, x29, #0x50
   19f78:	stp	x28, x21, [sp, #272]
   19f7c:	stp	x4, x5, [sp, #144]
   19f80:	stp	x6, x7, [sp, #160]
   19f84:	stp	q3, q4, [sp, #48]
   19f88:	stp	q5, q6, [sp, #80]
   19f8c:	str	q7, [sp, #112]
   19f90:	stp	q0, q1, [x29, #-80]
   19f94:	bl	c440 <__gmpfr_vasprintf@plt>
   19f98:	tbnz	w0, #31, 19fc8 <mpfr_sprintf@@Base+0xa4>
   19f9c:	ldur	x21, [x29, #-8]
   19fa0:	mov	x0, x21
   19fa4:	bl	bf00 <strlen@plt>
   19fa8:	mov	x20, x0
   19fac:	add	x2, x0, #0x1
   19fb0:	mov	x0, x19
   19fb4:	mov	x1, x21
   19fb8:	bl	be50 <memcpy@plt>
   19fbc:	mov	x0, x21
   19fc0:	bl	cd70 <mpfr_free_str@plt>
   19fc4:	b	19fd8 <mpfr_sprintf@@Base+0xb4>
   19fc8:	ldur	x0, [x29, #-8]
   19fcc:	cbz	x0, 19fd4 <mpfr_sprintf@@Base+0xb0>
   19fd0:	bl	cd70 <mpfr_free_str@plt>
   19fd4:	mov	w20, #0xffffffff            	// #-1
   19fd8:	mov	w0, w20
   19fdc:	ldp	x20, x19, [sp, #288]
   19fe0:	ldp	x28, x21, [sp, #272]
   19fe4:	ldp	x29, x30, [sp, #256]
   19fe8:	add	sp, sp, #0x130
   19fec:	ret

0000000000019ff0 <__gmpfr_vsprintf@@Base>:
   19ff0:	sub	sp, sp, #0x50
   19ff4:	stp	x29, x30, [sp, #32]
   19ff8:	str	x21, [sp, #48]
   19ffc:	stp	x20, x19, [sp, #64]
   1a000:	ldp	q1, q0, [x2]
   1a004:	add	x29, sp, #0x20
   1a008:	mov	x19, x0
   1a00c:	add	x0, x29, #0x18
   1a010:	mov	x2, sp
   1a014:	stp	q1, q0, [sp]
   1a018:	bl	c440 <__gmpfr_vasprintf@plt>
   1a01c:	ldr	x21, [x29, #24]
   1a020:	tbnz	w0, #31, 1a04c <__gmpfr_vsprintf@@Base+0x5c>
   1a024:	mov	x0, x21
   1a028:	bl	bf00 <strlen@plt>
   1a02c:	mov	x20, x0
   1a030:	add	x2, x0, #0x1
   1a034:	mov	x0, x19
   1a038:	mov	x1, x21
   1a03c:	bl	be50 <memcpy@plt>
   1a040:	mov	x0, x21
   1a044:	bl	cd70 <mpfr_free_str@plt>
   1a048:	b	1a05c <__gmpfr_vsprintf@@Base+0x6c>
   1a04c:	cbz	x21, 1a058 <__gmpfr_vsprintf@@Base+0x68>
   1a050:	mov	x0, x21
   1a054:	bl	cd70 <mpfr_free_str@plt>
   1a058:	mov	w20, #0xffffffff            	// #-1
   1a05c:	mov	w0, w20
   1a060:	ldp	x20, x19, [sp, #64]
   1a064:	ldr	x21, [sp, #48]
   1a068:	ldp	x29, x30, [sp, #32]
   1a06c:	add	sp, sp, #0x50
   1a070:	ret

000000000001a074 <mpfr_snprintf@@Base>:
   1a074:	sub	sp, sp, #0x100
   1a078:	stp	x29, x30, [sp, #240]
   1a07c:	add	x29, sp, #0xf0
   1a080:	mov	x9, #0xffffffffffffffd8    	// #-40
   1a084:	mov	x10, sp
   1a088:	sub	x11, x29, #0x68
   1a08c:	movk	x9, #0xff80, lsl #32
   1a090:	add	x12, x29, #0x10
   1a094:	add	x10, x10, #0x80
   1a098:	add	x11, x11, #0x28
   1a09c:	stp	x10, x9, [x29, #-16]
   1a0a0:	stp	x12, x11, [x29, #-32]
   1a0a4:	stp	x3, x4, [x29, #-104]
   1a0a8:	stp	x5, x6, [x29, #-88]
   1a0ac:	stur	x7, [x29, #-72]
   1a0b0:	stp	q1, q2, [sp, #16]
   1a0b4:	str	q0, [sp]
   1a0b8:	ldp	q0, q1, [x29, #-32]
   1a0bc:	mov	x8, x2
   1a0c0:	mov	x2, x1
   1a0c4:	mov	x1, x0
   1a0c8:	sub	x4, x29, #0x40
   1a0cc:	mov	x0, xzr
   1a0d0:	mov	x3, x8
   1a0d4:	stp	q3, q4, [sp, #48]
   1a0d8:	stp	q5, q6, [sp, #80]
   1a0dc:	str	q7, [sp, #112]
   1a0e0:	stp	q0, q1, [x29, #-64]
   1a0e4:	bl	c080 <mpfr_vasnprintf_aux@plt>
   1a0e8:	ldp	x29, x30, [sp, #240]
   1a0ec:	add	sp, sp, #0x100
   1a0f0:	ret

000000000001a0f4 <__gmpfr_vsnprintf@@Base>:
   1a0f4:	sub	sp, sp, #0x30
   1a0f8:	stp	x29, x30, [sp, #32]
   1a0fc:	ldp	q1, q0, [x3]
   1a100:	mov	x8, x2
   1a104:	mov	x2, x1
   1a108:	mov	x1, x0
   1a10c:	mov	x4, sp
   1a110:	mov	x0, xzr
   1a114:	mov	x3, x8
   1a118:	add	x29, sp, #0x20
   1a11c:	stp	q1, q0, [sp]
   1a120:	bl	c080 <mpfr_vasnprintf_aux@plt>
   1a124:	ldp	x29, x30, [sp, #32]
   1a128:	add	sp, sp, #0x30
   1a12c:	ret

000000000001a130 <mpfr_asprintf@@Base>:
   1a130:	sub	sp, sp, #0x110
   1a134:	stp	x29, x30, [sp, #240]
   1a138:	add	x29, sp, #0xf0
   1a13c:	mov	x8, #0xffffffffffffffd0    	// #-48
   1a140:	mov	x9, sp
   1a144:	sub	x10, x29, #0x70
   1a148:	movk	x8, #0xff80, lsl #32
   1a14c:	add	x11, x29, #0x20
   1a150:	add	x9, x9, #0x80
   1a154:	add	x10, x10, #0x30
   1a158:	stp	x9, x8, [x29, #-16]
   1a15c:	stp	x11, x10, [x29, #-32]
   1a160:	stp	x2, x3, [x29, #-112]
   1a164:	stp	x4, x5, [x29, #-96]
   1a168:	stp	x6, x7, [x29, #-80]
   1a16c:	stp	q1, q2, [sp, #16]
   1a170:	str	q0, [sp]
   1a174:	ldp	q0, q1, [x29, #-32]
   1a178:	sub	x2, x29, #0x40
   1a17c:	stp	x28, x19, [sp, #256]
   1a180:	mov	x19, x0
   1a184:	stp	q3, q4, [sp, #48]
   1a188:	stp	q5, q6, [sp, #80]
   1a18c:	str	q7, [sp, #112]
   1a190:	stp	q0, q1, [x29, #-64]
   1a194:	bl	c440 <__gmpfr_vasprintf@plt>
   1a198:	tbz	w0, #31, 1a1ac <mpfr_asprintf@@Base+0x7c>
   1a19c:	ldr	x0, [x19]
   1a1a0:	cbz	x0, 1a1a8 <mpfr_asprintf@@Base+0x78>
   1a1a4:	bl	cd70 <mpfr_free_str@plt>
   1a1a8:	mov	w0, #0xffffffff            	// #-1
   1a1ac:	ldp	x28, x19, [sp, #256]
   1a1b0:	ldp	x29, x30, [sp, #240]
   1a1b4:	add	sp, sp, #0x110
   1a1b8:	ret

000000000001a1bc <mpfr_vasnprintf_aux@@Base>:
   1a1bc:	stp	x29, x30, [sp, #-96]!
   1a1c0:	stp	x28, x27, [sp, #16]
   1a1c4:	stp	x26, x25, [sp, #32]
   1a1c8:	stp	x24, x23, [sp, #48]
   1a1cc:	stp	x22, x21, [sp, #64]
   1a1d0:	stp	x20, x19, [sp, #80]
   1a1d4:	mov	x29, sp
   1a1d8:	sub	sp, sp, #0x100
   1a1dc:	mov	x22, x4
   1a1e0:	mov	x28, x3
   1a1e4:	stur	x1, [x29, #-240]
   1a1e8:	mov	x11, x0
   1a1ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1a1f0:	ldr	x1, [x0, #2800]
   1a1f4:	add	x0, x0, #0xaf0
   1a1f8:	blr	x1
   1a1fc:	mrs	x26, tpidr_el0
   1a200:	ldr	w8, [x26, x0]
   1a204:	stur	w8, [x29, #-212]
   1a208:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1a20c:	ldr	x1, [x0, #2736]
   1a210:	add	x0, x0, #0xab0
   1a214:	blr	x1
   1a218:	ldr	x9, [x26, x0]
   1a21c:	mov	x8, x0
   1a220:	stur	x9, [x29, #-208]
   1a224:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1a228:	ldr	x1, [x0, #2768]
   1a22c:	add	x0, x0, #0xad0
   1a230:	blr	x1
   1a234:	stur	x11, [x29, #-200]
   1a238:	orr	x11, x11, x2
   1a23c:	ldr	x20, [x26, x0]
   1a240:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   1a244:	cmp	x11, #0x0
   1a248:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   1a24c:	str	x9, [x26, x8]
   1a250:	cset	w8, ne  // ne = any
   1a254:	str	x10, [x26, x0]
   1a258:	lsl	x1, x8, #12
   1a25c:	sub	x0, x29, #0x28
   1a260:	stp	x2, x8, [x29, #-232]
   1a264:	bl	1b034 <mpfr_vasnprintf_aux@@Base+0xe78>
   1a268:	ldp	q1, q0, [x22]
   1a26c:	stur	x28, [x29, #-184]
   1a270:	stp	q1, q0, [x29, #-112]
   1a274:	ldrb	w8, [x28]
   1a278:	cbz	w8, 1adb4 <mpfr_vasnprintf_aux@@Base+0xbf8>
   1a27c:	mov	w23, #0x2f                  	// #47
   1a280:	mov	w24, #0xcccd                	// #52429
   1a284:	movk	w23, #0x8000, lsl #16
   1a288:	movk	w24, #0xccc, lsl #16
   1a28c:	mov	w21, #0x7fffffff            	// #2147483647
   1a290:	stur	wzr, [x29, #-188]
   1a294:	stur	x20, [x29, #-248]
   1a298:	mov	x20, x28
   1a29c:	ldrb	w8, [x20]
   1a2a0:	cmp	w8, #0x25
   1a2a4:	b.eq	1a2b4 <mpfr_vasnprintf_aux@@Base+0xf8>  // b.none
   1a2a8:	cbz	w8, 1adbc <mpfr_vasnprintf_aux@@Base+0xc00>
   1a2ac:	add	x20, x20, #0x1
   1a2b0:	b	1a29c <mpfr_vasnprintf_aux@@Base+0xe0>
   1a2b4:	mov	x25, x20
   1a2b8:	ldrb	w8, [x25, #1]!
   1a2bc:	cmp	w8, #0x25
   1a2c0:	b.eq	1a568 <mpfr_vasnprintf_aux@@Base+0x3ac>  // b.none
   1a2c4:	sub	x0, x29, #0x50
   1a2c8:	bl	1b074 <mpfr_vasnprintf_aux@@Base+0xeb8>
   1a2cc:	sub	x1, x29, #0x50
   1a2d0:	mov	x0, x25
   1a2d4:	bl	1b098 <mpfr_vasnprintf_aux@@Base+0xedc>
   1a2d8:	mov	x28, x0
   1a2dc:	b	1a2f4 <mpfr_vasnprintf_aux@@Base+0x138>
   1a2e0:	cmp	w8, #0x2a
   1a2e4:	b.eq	1a354 <mpfr_vasnprintf_aux@@Base+0x198>  // b.none
   1a2e8:	cbz	w8, 1a3c0 <mpfr_vasnprintf_aux@@Base+0x204>
   1a2ec:	mov	w8, #0xb                   	// #11
   1a2f0:	cbnz	w8, 1a3b8 <mpfr_vasnprintf_aux@@Base+0x1fc>
   1a2f4:	ldrb	w8, [x28]
   1a2f8:	sub	w9, w8, #0x30
   1a2fc:	cmp	w9, #0xa
   1a300:	b.cs	1a2e0 <mpfr_vasnprintf_aux@@Base+0x124>  // b.hs, b.nlast
   1a304:	ldur	w8, [x29, #-76]
   1a308:	add	w9, w8, w8, lsl #2
   1a30c:	lsl	w9, w9, #1
   1a310:	cmp	w8, w24
   1a314:	csel	w8, w9, w21, lt  // lt = tstop
   1a318:	stur	w8, [x29, #-76]
   1a31c:	ldrb	w19, [x28]
   1a320:	sub	w25, w19, #0x30
   1a324:	cmp	w25, #0xa
   1a328:	b.cs	1a39c <mpfr_vasnprintf_aux@@Base+0x1e0>  // b.hs, b.nlast
   1a32c:	ldur	w9, [x29, #-76]
   1a330:	sub	w10, w23, w19
   1a334:	mov	w8, wzr
   1a338:	add	x28, x28, #0x1
   1a33c:	add	w11, w25, w9
   1a340:	cmp	w9, w10
   1a344:	csel	w9, w21, w11, gt
   1a348:	stur	w9, [x29, #-76]
   1a34c:	cbz	w8, 1a2f4 <mpfr_vasnprintf_aux@@Base+0x138>
   1a350:	b	1a3b8 <mpfr_vasnprintf_aux@@Base+0x1fc>
   1a354:	ldrsw	x8, [x22, #24]
   1a358:	tbz	w8, #31, 1a36c <mpfr_vasnprintf_aux@@Base+0x1b0>
   1a35c:	add	w9, w8, #0x8
   1a360:	cmp	w9, #0x0
   1a364:	str	w9, [x22, #24]
   1a368:	b.le	1a390 <mpfr_vasnprintf_aux@@Base+0x1d4>
   1a36c:	ldr	x8, [x22]
   1a370:	add	x9, x8, #0x8
   1a374:	str	x9, [x22]
   1a378:	ldr	w8, [x8]
   1a37c:	add	x28, x28, #0x1
   1a380:	stur	w8, [x29, #-76]
   1a384:	mov	w8, #0xb                   	// #11
   1a388:	cbz	w8, 1a2f4 <mpfr_vasnprintf_aux@@Base+0x138>
   1a38c:	b	1a3b8 <mpfr_vasnprintf_aux@@Base+0x1fc>
   1a390:	ldr	x9, [x22, #8]
   1a394:	add	x8, x9, x8
   1a398:	b	1a378 <mpfr_vasnprintf_aux@@Base+0x1bc>
   1a39c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a3a0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a3a4:	mov	w1, #0x80f                 	// #2063
   1a3a8:	add	x0, x0, #0xc8d
   1a3ac:	add	x2, x2, #0xc99
   1a3b0:	bl	d030 <mpfr_assert_fail@plt>
   1a3b4:	b	1a32c <mpfr_vasnprintf_aux@@Base+0x170>
   1a3b8:	cmp	w8, #0xb
   1a3bc:	b.ne	1adb0 <mpfr_vasnprintf_aux@@Base+0xbf4>  // b.any
   1a3c0:	ldur	w8, [x29, #-76]
   1a3c4:	tbz	w8, #31, 1a3e8 <mpfr_vasnprintf_aux@@Base+0x22c>
   1a3c8:	ldurb	w9, [x29, #-80]
   1a3cc:	mov	w11, #0x80000001            	// #-2147483647
   1a3d0:	neg	w10, w8
   1a3d4:	cmp	w8, w11
   1a3d8:	orr	w8, w9, #0x4
   1a3dc:	sturb	w8, [x29, #-80]
   1a3e0:	stur	w10, [x29, #-76]
   1a3e4:	b.le	1a5f4 <mpfr_vasnprintf_aux@@Base+0x438>
   1a3e8:	ldrb	w8, [x28]
   1a3ec:	cmp	w8, #0x2e
   1a3f0:	b.ne	1a4d8 <mpfr_vasnprintf_aux@@Base+0x31c>  // b.any
   1a3f4:	mov	w25, #0x1                   	// #1
   1a3f8:	b	1a424 <mpfr_vasnprintf_aux@@Base+0x268>
   1a3fc:	ldrsw	x8, [x22, #24]
   1a400:	tbnz	w8, #31, 1a494 <mpfr_vasnprintf_aux@@Base+0x2d8>
   1a404:	ldr	x9, [x22]
   1a408:	add	x8, x9, #0x8
   1a40c:	str	x8, [x22]
   1a410:	ldr	w9, [x9]
   1a414:	mov	w8, wzr
   1a418:	add	x25, x25, #0x1
   1a41c:	stur	w9, [x29, #-72]
   1a420:	tbz	w8, #0, 1a4cc <mpfr_vasnprintf_aux@@Base+0x310>
   1a424:	ldrb	w8, [x28, x25]
   1a428:	sub	w9, w8, #0x30
   1a42c:	cmp	w9, #0xa
   1a430:	b.cs	1a480 <mpfr_vasnprintf_aux@@Base+0x2c4>  // b.hs, b.nlast
   1a434:	ldur	w8, [x29, #-72]
   1a438:	add	w9, w8, w8, lsl #2
   1a43c:	lsl	w9, w9, #1
   1a440:	cmp	w8, w24
   1a444:	csel	w8, w9, w21, lt  // lt = tstop
   1a448:	stur	w8, [x29, #-72]
   1a44c:	ldrb	w27, [x28, x25]
   1a450:	sub	w19, w27, #0x30
   1a454:	cmp	w19, #0xa
   1a458:	b.cs	1a4b0 <mpfr_vasnprintf_aux@@Base+0x2f4>  // b.hs, b.nlast
   1a45c:	ldur	w8, [x29, #-72]
   1a460:	sub	w9, w23, w27
   1a464:	add	x25, x25, #0x1
   1a468:	add	w10, w19, w8
   1a46c:	cmp	w8, w9
   1a470:	csel	w8, w21, w10, gt
   1a474:	stur	w8, [x29, #-72]
   1a478:	mov	w8, #0x1                   	// #1
   1a47c:	b	1a420 <mpfr_vasnprintf_aux@@Base+0x264>
   1a480:	cmp	w8, #0x2a
   1a484:	b.eq	1a3fc <mpfr_vasnprintf_aux@@Base+0x240>  // b.none
   1a488:	cbz	w8, 1a4cc <mpfr_vasnprintf_aux@@Base+0x310>
   1a48c:	mov	w8, wzr
   1a490:	b	1a420 <mpfr_vasnprintf_aux@@Base+0x264>
   1a494:	add	w9, w8, #0x8
   1a498:	cmp	w9, #0x0
   1a49c:	str	w9, [x22, #24]
   1a4a0:	b.gt	1a404 <mpfr_vasnprintf_aux@@Base+0x248>
   1a4a4:	ldr	x9, [x22, #8]
   1a4a8:	add	x9, x9, x8
   1a4ac:	b	1a410 <mpfr_vasnprintf_aux@@Base+0x254>
   1a4b0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a4b4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a4b8:	mov	w1, #0x81a                 	// #2074
   1a4bc:	add	x0, x0, #0xc8d
   1a4c0:	add	x2, x2, #0xc99
   1a4c4:	bl	d030 <mpfr_assert_fail@plt>
   1a4c8:	b	1a45c <mpfr_vasnprintf_aux@@Base+0x2a0>
   1a4cc:	cmp	x25, #0x1
   1a4d0:	add	x28, x28, x25
   1a4d4:	b.ne	1a4e0 <mpfr_vasnprintf_aux@@Base+0x324>  // b.any
   1a4d8:	mov	w8, #0xffffffff            	// #-1
   1a4dc:	stur	w8, [x29, #-72]
   1a4e0:	sub	x1, x29, #0x50
   1a4e4:	mov	x0, x28
   1a4e8:	bl	1b118 <mpfr_vasnprintf_aux@@Base+0xf5c>
   1a4ec:	ldur	w25, [x29, #-56]
   1a4f0:	mov	x28, x0
   1a4f4:	cmp	w25, #0x10
   1a4f8:	b.eq	1a5d8 <mpfr_vasnprintf_aux@@Base+0x41c>  // b.none
   1a4fc:	cmp	w25, #0xf
   1a500:	b.ne	1a5b4 <mpfr_vasnprintf_aux@@Base+0x3f8>  // b.any
   1a504:	ldrb	w8, [x28]
   1a508:	sub	w9, w8, #0x2a
   1a50c:	cmp	w9, #0x30
   1a510:	b.hi	1a560 <mpfr_vasnprintf_aux@@Base+0x3a4>  // b.pmore
   1a514:	adrp	x11, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a518:	add	x11, x11, #0xb78
   1a51c:	adr	x8, 1a52c <mpfr_vasnprintf_aux@@Base+0x370>
   1a520:	ldrb	w10, [x11, x9]
   1a524:	add	x8, x8, x10, lsl #2
   1a528:	br	x8
   1a52c:	ldrsw	x8, [x22, #24]
   1a530:	add	x28, x28, #0x1
   1a534:	tbz	w8, #31, 1a548 <mpfr_vasnprintf_aux@@Base+0x38c>
   1a538:	add	w9, w8, #0x8
   1a53c:	cmp	w9, #0x0
   1a540:	str	w9, [x22, #24]
   1a544:	b.le	1a5e8 <mpfr_vasnprintf_aux@@Base+0x42c>
   1a548:	ldr	x8, [x22]
   1a54c:	add	x9, x8, #0x8
   1a550:	str	x9, [x22]
   1a554:	ldr	w8, [x8]
   1a558:	stur	w8, [x29, #-52]
   1a55c:	b	1a5b4 <mpfr_vasnprintf_aux@@Base+0x3f8>
   1a560:	cbnz	w8, 1a588 <mpfr_vasnprintf_aux@@Base+0x3cc>
   1a564:	b	1a5b4 <mpfr_vasnprintf_aux@@Base+0x3f8>
   1a568:	ldrb	w8, [x20, #2]!
   1a56c:	mov	w9, #0x1                   	// #1
   1a570:	stur	w9, [x29, #-188]
   1a574:	cbnz	w8, 1a29c <mpfr_vasnprintf_aux@@Base+0xe0>
   1a578:	b	1adbc <mpfr_vasnprintf_aux@@Base+0xc00>
   1a57c:	mov	w8, #0x3                   	// #3
   1a580:	b	1a59c <mpfr_vasnprintf_aux@@Base+0x3e0>
   1a584:	add	x28, x28, #0x1
   1a588:	stur	wzr, [x29, #-52]
   1a58c:	b	1a5b4 <mpfr_vasnprintf_aux@@Base+0x3f8>
   1a590:	mov	w8, #0x2                   	// #2
   1a594:	b	1a59c <mpfr_vasnprintf_aux@@Base+0x3e0>
   1a598:	mov	w8, #0x4                   	// #4
   1a59c:	add	x28, x28, #0x1
   1a5a0:	stur	w8, [x29, #-52]
   1a5a4:	b	1a5b4 <mpfr_vasnprintf_aux@@Base+0x3f8>
   1a5a8:	mov	w8, #0x1                   	// #1
   1a5ac:	add	x28, x28, #0x1
   1a5b0:	stur	w8, [x29, #-52]
   1a5b4:	ldrb	w19, [x28]
   1a5b8:	ldp	q0, q1, [x29, #-80]
   1a5bc:	sub	x0, x29, #0xa0
   1a5c0:	sturb	w19, [x29, #-48]
   1a5c4:	ldur	x8, [x29, #-48]
   1a5c8:	stp	q0, q1, [x29, #-160]
   1a5cc:	stur	x8, [x29, #-128]
   1a5d0:	bl	1b1f8 <mpfr_vasnprintf_aux@@Base+0x103c>
   1a5d4:	cbnz	w0, 1a610 <mpfr_vasnprintf_aux@@Base+0x454>
   1a5d8:	ldrb	w8, [x28]
   1a5dc:	mov	x20, x28
   1a5e0:	cbnz	w8, 1a29c <mpfr_vasnprintf_aux@@Base+0xe0>
   1a5e4:	b	1adbc <mpfr_vasnprintf_aux@@Base+0xc00>
   1a5e8:	ldr	x9, [x22, #8]
   1a5ec:	add	x8, x9, x8
   1a5f0:	b	1a554 <mpfr_vasnprintf_aux@@Base+0x398>
   1a5f4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a5f8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a5fc:	mov	w1, #0x815                 	// #2069
   1a600:	add	x0, x0, #0xc8d
   1a604:	add	x2, x2, #0xcac
   1a608:	bl	d030 <mpfr_assert_fail@plt>
   1a60c:	b	1a3e8 <mpfr_vasnprintf_aux@@Base+0x22c>
   1a610:	mov	x8, x28
   1a614:	ldrb	w9, [x8], #1
   1a618:	cmp	w9, #0x0
   1a61c:	csel	x28, x28, x8, eq  // eq = none
   1a620:	cmp	w19, #0x6e
   1a624:	b.eq	1a684 <mpfr_vasnprintf_aux@@Base+0x4c8>  // b.none
   1a628:	cbz	w19, 1adc0 <mpfr_vasnprintf_aux@@Base+0xc04>
   1a62c:	sub	w8, w25, #0x1
   1a630:	cmp	w8, #0xe
   1a634:	b.hi	1a7d8 <mpfr_vasnprintf_aux@@Base+0x61c>  // b.pmore
   1a638:	adrp	x11, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a63c:	add	x11, x11, #0xbb8
   1a640:	adr	x9, 1a650 <mpfr_vasnprintf_aux@@Base+0x494>
   1a644:	ldrb	w10, [x11, x8]
   1a648:	add	x9, x9, x10, lsl #2
   1a64c:	br	x9
   1a650:	ldr	w8, [x22, #24]
   1a654:	tbz	w8, #31, 1a668 <mpfr_vasnprintf_aux@@Base+0x4ac>
   1a658:	add	w8, w8, #0x8
   1a65c:	cmp	w8, #0x1
   1a660:	str	w8, [x22, #24]
   1a664:	b.lt	1a674 <mpfr_vasnprintf_aux@@Base+0x4b8>  // b.tstop
   1a668:	ldr	x8, [x22]
   1a66c:	add	x8, x8, #0x8
   1a670:	str	x8, [x22]
   1a674:	mov	w8, #0x1                   	// #1
   1a678:	stur	w8, [x29, #-188]
   1a67c:	ldur	x20, [x29, #-248]
   1a680:	b	1a7ac <mpfr_vasnprintf_aux@@Base+0x5f0>
   1a684:	ldrsw	x8, [x22, #24]
   1a688:	tbz	w8, #31, 1a69c <mpfr_vasnprintf_aux@@Base+0x4e0>
   1a68c:	add	w9, w8, #0x8
   1a690:	cmp	w9, #0x0
   1a694:	str	w9, [x22, #24]
   1a698:	b.le	1a7cc <mpfr_vasnprintf_aux@@Base+0x610>
   1a69c:	ldr	x8, [x22]
   1a6a0:	add	x9, x8, #0x8
   1a6a4:	str	x9, [x22]
   1a6a8:	ldur	x1, [x29, #-184]
   1a6ac:	ldr	x19, [x8]
   1a6b0:	ldur	w8, [x29, #-188]
   1a6b4:	sub	x27, x20, x1
   1a6b8:	cbz	w8, 1a744 <mpfr_vasnprintf_aux@@Base+0x588>
   1a6bc:	add	x1, x27, #0x1
   1a6c0:	cmp	x1, #0x4, lsl #12
   1a6c4:	stur	xzr, [x29, #-168]
   1a6c8:	b.hi	1ad38 <mpfr_vasnprintf_aux@@Base+0xb7c>  // b.pmore
   1a6cc:	add	x9, x1, #0xf
   1a6d0:	mov	x8, sp
   1a6d4:	and	x9, x9, #0xfffffffffffffff0
   1a6d8:	sub	x25, x8, x9
   1a6dc:	mov	sp, x25
   1a6e0:	ldur	x1, [x29, #-184]
   1a6e4:	ldur	x20, [x29, #-248]
   1a6e8:	mov	x0, x25
   1a6ec:	mov	x2, x27
   1a6f0:	bl	cfc0 <strncpy@plt>
   1a6f4:	strb	wzr, [x25, x27]
   1a6f8:	ldp	q0, q1, [x29, #-112]
   1a6fc:	sub	x0, x29, #0xb0
   1a700:	sub	x2, x29, #0xa0
   1a704:	mov	x1, x25
   1a708:	stp	q0, q1, [x29, #-160]
   1a70c:	bl	c4c0 <__gmp_vasprintf@plt>
   1a710:	tbnz	w0, #31, 1a7b8 <mpfr_vasnprintf_aux@@Base+0x5fc>
   1a714:	ldur	x1, [x29, #-176]
   1a718:	sxtw	x2, w0
   1a71c:	sub	x0, x29, #0x28
   1a720:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1a724:	ldur	x0, [x29, #-176]
   1a728:	bl	cd70 <mpfr_free_str@plt>
   1a72c:	ldur	x0, [x29, #-168]
   1a730:	cbnz	x0, 1ad48 <mpfr_vasnprintf_aux@@Base+0xb8c>
   1a734:	mov	w8, wzr
   1a738:	stur	wzr, [x29, #-188]
   1a73c:	cbnz	wzr, 1a764 <mpfr_vasnprintf_aux@@Base+0x5a8>
   1a740:	b	1a760 <mpfr_vasnprintf_aux@@Base+0x5a4>
   1a744:	cmp	x1, x20
   1a748:	b.eq	1a758 <mpfr_vasnprintf_aux@@Base+0x59c>  // b.none
   1a74c:	sub	x0, x29, #0x28
   1a750:	mov	x2, x27
   1a754:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1a758:	ldur	x20, [x29, #-248]
   1a75c:	stur	wzr, [x29, #-188]
   1a760:	mov	w8, wzr
   1a764:	cbnz	w8, 1a7a8 <mpfr_vasnprintf_aux@@Base+0x5ec>
   1a768:	ldur	w8, [x29, #-56]
   1a76c:	sub	w8, w8, #0x1
   1a770:	cmp	w8, #0xe
   1a774:	b.hi	1aaa8 <mpfr_vasnprintf_aux@@Base+0x8ec>  // b.pmore
   1a778:	adrp	x11, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a77c:	add	x11, x11, #0xba9
   1a780:	adr	x9, 1a790 <mpfr_vasnprintf_aux@@Base+0x5d4>
   1a784:	ldrb	w10, [x11, x8]
   1a788:	add	x9, x9, x10, lsl #2
   1a78c:	br	x9
   1a790:	ldur	x8, [x29, #-16]
   1a794:	str	x8, [x19]
   1a798:	ldp	q1, q0, [x22]
   1a79c:	mov	w8, wzr
   1a7a0:	stur	x28, [x29, #-184]
   1a7a4:	stp	q1, q0, [x29, #-112]
   1a7a8:	cbnz	w8, 1af54 <mpfr_vasnprintf_aux@@Base+0xd98>
   1a7ac:	ldrb	w8, [x28]
   1a7b0:	cbnz	w8, 1a298 <mpfr_vasnprintf_aux@@Base+0xdc>
   1a7b4:	b	1adc4 <mpfr_vasnprintf_aux@@Base+0xc08>
   1a7b8:	ldur	x0, [x29, #-168]
   1a7bc:	cbnz	x0, 1ad50 <mpfr_vasnprintf_aux@@Base+0xb94>
   1a7c0:	mov	w8, #0x15                  	// #21
   1a7c4:	cbnz	w8, 1a764 <mpfr_vasnprintf_aux@@Base+0x5a8>
   1a7c8:	b	1a760 <mpfr_vasnprintf_aux@@Base+0x5a4>
   1a7cc:	ldr	x9, [x22, #8]
   1a7d0:	add	x8, x9, x8
   1a7d4:	b	1a6a8 <mpfr_vasnprintf_aux@@Base+0x4ec>
   1a7d8:	sub	w8, w19, #0x41
   1a7dc:	cmp	w8, #0x37
   1a7e0:	mov	w9, #0x1                   	// #1
   1a7e4:	stur	w9, [x29, #-188]
   1a7e8:	b.hi	1a67c <mpfr_vasnprintf_aux@@Base+0x4c0>  // b.pmore
   1a7ec:	adrp	x11, 5b000 <mpfr_free_pool@@Base+0x3854>
   1a7f0:	add	x11, x11, #0xbc7
   1a7f4:	adr	x9, 1a650 <mpfr_vasnprintf_aux@@Base+0x494>
   1a7f8:	ldrb	w10, [x11, x8]
   1a7fc:	add	x9, x9, x10, lsl #2
   1a800:	ldur	x20, [x29, #-248]
   1a804:	br	x9
   1a808:	ldr	w8, [x22, #28]
   1a80c:	tbz	w8, #31, 1a8d0 <mpfr_vasnprintf_aux@@Base+0x714>
   1a810:	add	w8, w8, #0x10
   1a814:	cmp	w8, #0x1
   1a818:	str	w8, [x22, #28]
   1a81c:	b.ge	1a8d0 <mpfr_vasnprintf_aux@@Base+0x714>  // b.tcont
   1a820:	b	1a8dc <mpfr_vasnprintf_aux@@Base+0x720>
   1a824:	sub	w8, w19, #0x58
   1a828:	cmp	w8, #0x20
   1a82c:	mov	w9, #0x1                   	// #1
   1a830:	stur	w9, [x29, #-188]
   1a834:	b.hi	1a67c <mpfr_vasnprintf_aux@@Base+0x4c0>  // b.pmore
   1a838:	mov	x10, #0x1001                	// #4097
   1a83c:	ldur	x20, [x29, #-248]
   1a840:	mov	w9, #0x1                   	// #1
   1a844:	movk	x10, #0x2082, lsl #16
   1a848:	lsl	x9, x9, x8
   1a84c:	movk	x10, #0x1, lsl #32
   1a850:	tst	x9, x10
   1a854:	b.eq	1ac94 <mpfr_vasnprintf_aux@@Base+0xad8>  // b.none
   1a858:	ldr	w8, [x22, #24]
   1a85c:	tbz	w8, #31, 1a8d0 <mpfr_vasnprintf_aux@@Base+0x714>
   1a860:	b	1a8c0 <mpfr_vasnprintf_aux@@Base+0x704>
   1a864:	ldr	w8, [x22, #28]
   1a868:	tbz	w8, #31, 1a87c <mpfr_vasnprintf_aux@@Base+0x6c0>
   1a86c:	add	w8, w8, #0x10
   1a870:	cmp	w8, #0x1
   1a874:	str	w8, [x22, #28]
   1a878:	b.lt	1a674 <mpfr_vasnprintf_aux@@Base+0x4b8>  // b.tstop
   1a87c:	ldr	x8, [x22]
   1a880:	add	x8, x8, #0xf
   1a884:	and	x8, x8, #0xfffffffffffffff0
   1a888:	add	x8, x8, #0x10
   1a88c:	b	1a670 <mpfr_vasnprintf_aux@@Base+0x4b4>
   1a890:	ldr	w8, [x22, #24]
   1a894:	tbz	w8, #31, 1a8a8 <mpfr_vasnprintf_aux@@Base+0x6ec>
   1a898:	add	w8, w8, #0x8
   1a89c:	cmp	w8, #0x1
   1a8a0:	str	w8, [x22, #24]
   1a8a4:	b.lt	1a8b4 <mpfr_vasnprintf_aux@@Base+0x6f8>  // b.tstop
   1a8a8:	ldr	x8, [x22]
   1a8ac:	add	x8, x8, #0x8
   1a8b0:	str	x8, [x22]
   1a8b4:	ldr	w8, [x22, #24]
   1a8b8:	ldur	x20, [x29, #-248]
   1a8bc:	tbz	w8, #31, 1a8d0 <mpfr_vasnprintf_aux@@Base+0x714>
   1a8c0:	add	w8, w8, #0x8
   1a8c4:	cmp	w8, #0x1
   1a8c8:	str	w8, [x22, #24]
   1a8cc:	b.lt	1a8dc <mpfr_vasnprintf_aux@@Base+0x720>  // b.tstop
   1a8d0:	ldr	x8, [x22]
   1a8d4:	add	x8, x8, #0x8
   1a8d8:	str	x8, [x22]
   1a8dc:	mov	w8, #0x1                   	// #1
   1a8e0:	stur	w8, [x29, #-188]
   1a8e4:	b	1a7ac <mpfr_vasnprintf_aux@@Base+0x5f0>
   1a8e8:	ldrsw	x8, [x22, #24]
   1a8ec:	tbz	w8, #31, 1a900 <mpfr_vasnprintf_aux@@Base+0x744>
   1a8f0:	add	w9, w8, #0x8
   1a8f4:	cmp	w9, #0x0
   1a8f8:	str	w9, [x22, #24]
   1a8fc:	b.le	1acd0 <mpfr_vasnprintf_aux@@Base+0xb14>
   1a900:	ldr	x8, [x22]
   1a904:	add	x9, x8, #0x8
   1a908:	str	x9, [x22]
   1a90c:	ldr	x19, [x8]
   1a910:	ldur	x8, [x29, #-184]
   1a914:	sub	x27, x20, x8
   1a918:	ldur	w8, [x29, #-188]
   1a91c:	cbz	w8, 1ab34 <mpfr_vasnprintf_aux@@Base+0x978>
   1a920:	add	x1, x27, #0x1
   1a924:	cmp	x1, #0x4, lsl #12
   1a928:	stur	xzr, [x29, #-168]
   1a92c:	b.hi	1ad60 <mpfr_vasnprintf_aux@@Base+0xba4>  // b.pmore
   1a930:	add	x9, x1, #0xf
   1a934:	mov	x8, sp
   1a938:	and	x9, x9, #0xfffffffffffffff0
   1a93c:	sub	x25, x8, x9
   1a940:	mov	sp, x25
   1a944:	ldur	x1, [x29, #-184]
   1a948:	ldur	x20, [x29, #-248]
   1a94c:	mov	x0, x25
   1a950:	mov	x2, x27
   1a954:	bl	cfc0 <strncpy@plt>
   1a958:	strb	wzr, [x25, x27]
   1a95c:	ldp	q0, q1, [x29, #-112]
   1a960:	sub	x0, x29, #0xb0
   1a964:	sub	x2, x29, #0xa0
   1a968:	mov	x1, x25
   1a96c:	stp	q0, q1, [x29, #-160]
   1a970:	bl	c4c0 <__gmp_vasprintf@plt>
   1a974:	tbnz	w0, #31, 1aca8 <mpfr_vasnprintf_aux@@Base+0xaec>
   1a978:	ldur	x1, [x29, #-176]
   1a97c:	sxtw	x2, w0
   1a980:	sub	x0, x29, #0x28
   1a984:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1a988:	ldur	x0, [x29, #-176]
   1a98c:	bl	cd70 <mpfr_free_str@plt>
   1a990:	ldur	x0, [x29, #-168]
   1a994:	cbnz	x0, 1ad80 <mpfr_vasnprintf_aux@@Base+0xbc4>
   1a998:	mov	w8, wzr
   1a99c:	stur	wzr, [x29, #-188]
   1a9a0:	cbnz	wzr, 1ab58 <mpfr_vasnprintf_aux@@Base+0x99c>
   1a9a4:	b	1ab54 <mpfr_vasnprintf_aux@@Base+0x998>
   1a9a8:	sub	w9, w19, #0x41
   1a9ac:	cmp	w9, #0x26
   1a9b0:	mov	w8, #0x2                   	// #2
   1a9b4:	b.hi	1ace8 <mpfr_vasnprintf_aux@@Base+0xb2c>  // b.pmore
   1a9b8:	mov	w10, #0x1                   	// #1
   1a9bc:	lsl	x9, x10, x9
   1a9c0:	mov	x10, #0x71                  	// #113
   1a9c4:	movk	x10, #0x73, lsl #32
   1a9c8:	tst	x9, x10
   1a9cc:	b.eq	1ace8 <mpfr_vasnprintf_aux@@Base+0xb2c>  // b.none
   1a9d0:	ldrsw	x8, [x22, #24]
   1a9d4:	tbz	w8, #31, 1a9e8 <mpfr_vasnprintf_aux@@Base+0x82c>
   1a9d8:	add	w9, w8, #0x8
   1a9dc:	cmp	w9, #0x0
   1a9e0:	str	w9, [x22, #24]
   1a9e4:	b.le	1acdc <mpfr_vasnprintf_aux@@Base+0xb20>
   1a9e8:	ldr	x8, [x22]
   1a9ec:	add	x9, x8, #0x8
   1a9f0:	str	x9, [x22]
   1a9f4:	ldr	x19, [x8]
   1a9f8:	ldur	x8, [x29, #-184]
   1a9fc:	sub	x27, x20, x8
   1aa00:	ldur	w8, [x29, #-188]
   1aa04:	cbz	w8, 1ac28 <mpfr_vasnprintf_aux@@Base+0xa6c>
   1aa08:	add	x1, x27, #0x1
   1aa0c:	cmp	x1, #0x4, lsl #12
   1aa10:	stur	xzr, [x29, #-168]
   1aa14:	b.hi	1ad70 <mpfr_vasnprintf_aux@@Base+0xbb4>  // b.pmore
   1aa18:	add	x9, x1, #0xf
   1aa1c:	mov	x8, sp
   1aa20:	and	x9, x9, #0xfffffffffffffff0
   1aa24:	sub	x25, x8, x9
   1aa28:	mov	sp, x25
   1aa2c:	ldur	x1, [x29, #-184]
   1aa30:	ldur	x20, [x29, #-248]
   1aa34:	mov	x0, x25
   1aa38:	mov	x2, x27
   1aa3c:	bl	cfc0 <strncpy@plt>
   1aa40:	strb	wzr, [x25, x27]
   1aa44:	ldp	q0, q1, [x29, #-112]
   1aa48:	sub	x0, x29, #0xb0
   1aa4c:	sub	x2, x29, #0xa0
   1aa50:	mov	x1, x25
   1aa54:	stp	q0, q1, [x29, #-160]
   1aa58:	bl	c4c0 <__gmp_vasprintf@plt>
   1aa5c:	tbnz	w0, #31, 1acbc <mpfr_vasnprintf_aux@@Base+0xb00>
   1aa60:	ldur	x1, [x29, #-176]
   1aa64:	sxtw	x2, w0
   1aa68:	sub	x0, x29, #0x28
   1aa6c:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1aa70:	ldur	x0, [x29, #-176]
   1aa74:	bl	cd70 <mpfr_free_str@plt>
   1aa78:	ldur	x0, [x29, #-168]
   1aa7c:	cbnz	x0, 1ad88 <mpfr_vasnprintf_aux@@Base+0xbcc>
   1aa80:	mov	w8, wzr
   1aa84:	stur	wzr, [x29, #-188]
   1aa88:	cbnz	wzr, 1ac4c <mpfr_vasnprintf_aux@@Base+0xa90>
   1aa8c:	b	1ac48 <mpfr_vasnprintf_aux@@Base+0xa8c>
   1aa90:	ldur	x8, [x29, #-16]
   1aa94:	strb	w8, [x19]
   1aa98:	b	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>
   1aa9c:	ldur	x8, [x29, #-16]
   1aaa0:	strh	w8, [x19]
   1aaa4:	b	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>
   1aaa8:	ldur	x8, [x29, #-16]
   1aaac:	str	w8, [x19]
   1aab0:	b	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>
   1aab4:	ldur	x1, [x29, #-16]
   1aab8:	mov	x0, x19
   1aabc:	bl	c620 <__gmpf_set_ui@plt>
   1aac0:	b	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>
   1aac4:	ldur	x1, [x29, #-16]
   1aac8:	mov	w2, #0x1                   	// #1
   1aacc:	mov	x0, x19
   1aad0:	bl	ca30 <__gmpq_set_ui@plt>
   1aad4:	b	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>
   1aad8:	ldrsw	x8, [x22, #24]
   1aadc:	tbz	w8, #31, 1aaf0 <mpfr_vasnprintf_aux@@Base+0x934>
   1aae0:	add	w9, w8, #0x8
   1aae4:	cmp	w9, #0x0
   1aae8:	str	w9, [x22, #24]
   1aaec:	b.le	1acfc <mpfr_vasnprintf_aux@@Base+0xb40>
   1aaf0:	ldr	x8, [x22]
   1aaf4:	add	x9, x8, #0x8
   1aaf8:	str	x9, [x22]
   1aafc:	ldr	x8, [x8]
   1ab00:	tbnz	x8, #63, 1ad0c <mpfr_vasnprintf_aux@@Base+0xb50>
   1ab04:	cbnz	x8, 1ad10 <mpfr_vasnprintf_aux@@Base+0xb54>
   1ab08:	b	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>
   1ab0c:	ldur	x1, [x29, #-16]
   1ab10:	mov	x0, x19
   1ab14:	bl	c110 <__gmpz_set_ui@plt>
   1ab18:	b	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>
   1ab1c:	ldur	x1, [x29, #-16]
   1ab20:	ldur	w3, [x29, #-52]
   1ab24:	mov	x0, x19
   1ab28:	mov	x2, xzr
   1ab2c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   1ab30:	b	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>
   1ab34:	ldur	x1, [x29, #-184]
   1ab38:	cmp	x1, x20
   1ab3c:	b.eq	1ab4c <mpfr_vasnprintf_aux@@Base+0x990>  // b.none
   1ab40:	sub	x0, x29, #0x28
   1ab44:	mov	x2, x27
   1ab48:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1ab4c:	ldur	x20, [x29, #-248]
   1ab50:	stur	wzr, [x29, #-188]
   1ab54:	mov	w8, wzr
   1ab58:	cbnz	w8, 1a7a8 <mpfr_vasnprintf_aux@@Base+0x5ec>
   1ab5c:	ldurb	w8, [x29, #-47]
   1ab60:	ldurb	w9, [x29, #-80]
   1ab64:	adrp	x11, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   1ab68:	add	x11, x11, #0x8ca
   1ab6c:	cmp	w8, #0x30
   1ab70:	adrp	x8, 60000 <mpfr_bases@@Base+0x408>
   1ab74:	add	x8, x8, #0x423
   1ab78:	csel	x2, x11, x8, eq  // eq = none
   1ab7c:	adrp	x11, 5b000 <mpfr_free_pool@@Base+0x3854>
   1ab80:	tst	w9, #0x1
   1ab84:	add	x11, x11, #0xcd9
   1ab88:	csel	x3, x8, x11, eq  // eq = none
   1ab8c:	adrp	x11, 5b000 <mpfr_free_pool@@Base+0x3854>
   1ab90:	tst	w9, #0x8
   1ab94:	add	x11, x11, #0xcdb
   1ab98:	csel	x4, x8, x11, eq  // eq = none
   1ab9c:	adrp	x11, 60000 <mpfr_bases@@Base+0x408>
   1aba0:	tst	w9, #0x2
   1aba4:	add	x11, x11, #0x407
   1aba8:	ldp	q0, q1, [x22]
   1abac:	ldurb	w10, [x29, #-48]
   1abb0:	csel	x5, x8, x11, eq  // eq = none
   1abb4:	adrp	x11, 5b000 <mpfr_free_pool@@Base+0x3854>
   1abb8:	tst	w9, #0x4
   1abbc:	add	x11, x11, #0xcdd
   1abc0:	csel	x6, x8, x11, eq  // eq = none
   1abc4:	tst	w9, #0x10
   1abc8:	adrp	x9, 5b000 <mpfr_free_pool@@Base+0x3854>
   1abcc:	add	x9, x9, #0xcdf
   1abd0:	stp	q0, q1, [x29, #-112]
   1abd4:	csel	x7, x8, x9, eq  // eq = none
   1abd8:	sub	x0, x29, #0xa0
   1abdc:	str	w10, [sp, #-16]!
   1abe0:	adrp	x1, 5b000 <mpfr_free_pool@@Base+0x3854>
   1abe4:	add	x1, x1, #0xcc4
   1abe8:	bl	c170 <sprintf@plt>
   1abec:	add	sp, sp, #0x10
   1abf0:	ldp	w2, w3, [x29, #-76]
   1abf4:	sub	x0, x29, #0xa8
   1abf8:	sub	x1, x29, #0xa0
   1abfc:	mov	x4, x19
   1ac00:	bl	c550 <__gmp_asprintf@plt>
   1ac04:	ldur	x1, [x29, #-168]
   1ac08:	sxtw	x2, w0
   1ac0c:	sub	x0, x29, #0x28
   1ac10:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1ac14:	ldur	x0, [x29, #-168]
   1ac18:	bl	cd70 <mpfr_free_str@plt>
   1ac1c:	mov	w8, wzr
   1ac20:	stur	x28, [x29, #-184]
   1ac24:	b	1a7a8 <mpfr_vasnprintf_aux@@Base+0x5ec>
   1ac28:	ldur	x1, [x29, #-184]
   1ac2c:	cmp	x1, x20
   1ac30:	b.eq	1ac40 <mpfr_vasnprintf_aux@@Base+0xa84>  // b.none
   1ac34:	sub	x0, x29, #0x28
   1ac38:	mov	x2, x27
   1ac3c:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1ac40:	ldur	x20, [x29, #-248]
   1ac44:	stur	wzr, [x29, #-188]
   1ac48:	mov	w8, wzr
   1ac4c:	cbnz	w8, 1acec <mpfr_vasnprintf_aux@@Base+0xb30>
   1ac50:	ldp	q1, q0, [x22]
   1ac54:	ldur	x8, [x29, #-200]
   1ac58:	stp	q1, q0, [x29, #-112]
   1ac5c:	cbnz	x8, 1ac68 <mpfr_vasnprintf_aux@@Base+0xaac>
   1ac60:	ldur	x8, [x29, #-232]
   1ac64:	stur	x8, [x29, #-64]
   1ac68:	ldp	q0, q1, [x29, #-80]
   1ac6c:	ldur	x8, [x29, #-48]
   1ac70:	sub	x0, x29, #0x28
   1ac74:	sub	x2, x29, #0xa0
   1ac78:	mov	x1, x19
   1ac7c:	stp	q0, q1, [x29, #-160]
   1ac80:	stur	x8, [x29, #-128]
   1ac84:	bl	1b388 <mpfr_vasnprintf_aux@@Base+0x11cc>
   1ac88:	mov	w8, wzr
   1ac8c:	stur	x28, [x29, #-184]
   1ac90:	b	1acec <mpfr_vasnprintf_aux@@Base+0xb30>
   1ac94:	cmp	x8, #0xb
   1ac98:	b.eq	1a858 <mpfr_vasnprintf_aux@@Base+0x69c>  // b.none
   1ac9c:	cmp	x8, #0x1b
   1aca0:	b.eq	1a858 <mpfr_vasnprintf_aux@@Base+0x69c>  // b.none
   1aca4:	b	1a7ac <mpfr_vasnprintf_aux@@Base+0x5f0>
   1aca8:	ldur	x0, [x29, #-168]
   1acac:	cbnz	x0, 1ad90 <mpfr_vasnprintf_aux@@Base+0xbd4>
   1acb0:	mov	w8, #0x15                  	// #21
   1acb4:	cbnz	w8, 1ab58 <mpfr_vasnprintf_aux@@Base+0x99c>
   1acb8:	b	1ab54 <mpfr_vasnprintf_aux@@Base+0x998>
   1acbc:	ldur	x0, [x29, #-168]
   1acc0:	cbnz	x0, 1ada0 <mpfr_vasnprintf_aux@@Base+0xbe4>
   1acc4:	mov	w8, #0x15                  	// #21
   1acc8:	cbnz	w8, 1ac4c <mpfr_vasnprintf_aux@@Base+0xa90>
   1accc:	b	1ac48 <mpfr_vasnprintf_aux@@Base+0xa8c>
   1acd0:	ldr	x9, [x22, #8]
   1acd4:	add	x8, x9, x8
   1acd8:	b	1a90c <mpfr_vasnprintf_aux@@Base+0x750>
   1acdc:	ldr	x9, [x22, #8]
   1ace0:	add	x8, x9, x8
   1ace4:	b	1a9f4 <mpfr_vasnprintf_aux@@Base+0x838>
   1ace8:	ldur	x20, [x29, #-248]
   1acec:	cbz	w8, 1a7ac <mpfr_vasnprintf_aux@@Base+0x5f0>
   1acf0:	cmp	w8, #0x2
   1acf4:	b.eq	1a7ac <mpfr_vasnprintf_aux@@Base+0x5f0>  // b.none
   1acf8:	b	1af54 <mpfr_vasnprintf_aux@@Base+0xd98>
   1acfc:	ldr	x9, [x22, #8]
   1ad00:	add	x8, x9, x8
   1ad04:	ldr	x8, [x8]
   1ad08:	tbz	x8, #63, 1ab04 <mpfr_vasnprintf_aux@@Base+0x948>
   1ad0c:	neg	x8, x8
   1ad10:	ldur	x9, [x29, #-16]
   1ad14:	cmp	x8, #0x1
   1ad18:	str	x9, [x19]
   1ad1c:	b.eq	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>  // b.none
   1ad20:	lsl	x8, x8, #3
   1ad24:	add	x0, x19, #0x8
   1ad28:	sub	x2, x8, #0x8
   1ad2c:	mov	w1, wzr
   1ad30:	bl	c5b0 <memset@plt>
   1ad34:	b	1a798 <mpfr_vasnprintf_aux@@Base+0x5dc>
   1ad38:	sub	x0, x29, #0xa8
   1ad3c:	bl	c220 <mpfr_tmp_allocate@plt>
   1ad40:	mov	x25, x0
   1ad44:	b	1a6e0 <mpfr_vasnprintf_aux@@Base+0x524>
   1ad48:	bl	c8d0 <mpfr_tmp_free@plt>
   1ad4c:	b	1a734 <mpfr_vasnprintf_aux@@Base+0x578>
   1ad50:	bl	c8d0 <mpfr_tmp_free@plt>
   1ad54:	mov	w8, #0x15                  	// #21
   1ad58:	cbnz	w8, 1a764 <mpfr_vasnprintf_aux@@Base+0x5a8>
   1ad5c:	b	1a760 <mpfr_vasnprintf_aux@@Base+0x5a4>
   1ad60:	sub	x0, x29, #0xa8
   1ad64:	bl	c220 <mpfr_tmp_allocate@plt>
   1ad68:	mov	x25, x0
   1ad6c:	b	1a944 <mpfr_vasnprintf_aux@@Base+0x788>
   1ad70:	sub	x0, x29, #0xa8
   1ad74:	bl	c220 <mpfr_tmp_allocate@plt>
   1ad78:	mov	x25, x0
   1ad7c:	b	1aa2c <mpfr_vasnprintf_aux@@Base+0x870>
   1ad80:	bl	c8d0 <mpfr_tmp_free@plt>
   1ad84:	b	1a998 <mpfr_vasnprintf_aux@@Base+0x7dc>
   1ad88:	bl	c8d0 <mpfr_tmp_free@plt>
   1ad8c:	b	1aa80 <mpfr_vasnprintf_aux@@Base+0x8c4>
   1ad90:	bl	c8d0 <mpfr_tmp_free@plt>
   1ad94:	mov	w8, #0x15                  	// #21
   1ad98:	cbnz	w8, 1ab58 <mpfr_vasnprintf_aux@@Base+0x99c>
   1ad9c:	b	1ab54 <mpfr_vasnprintf_aux@@Base+0x998>
   1ada0:	bl	c8d0 <mpfr_tmp_free@plt>
   1ada4:	mov	w8, #0x15                  	// #21
   1ada8:	cbnz	w8, 1ac4c <mpfr_vasnprintf_aux@@Base+0xa90>
   1adac:	b	1ac48 <mpfr_vasnprintf_aux@@Base+0xa8c>
   1adb0:	b	1afe0 <mpfr_vasnprintf_aux@@Base+0xe24>
   1adb4:	stur	wzr, [x29, #-188]
   1adb8:	b	1adc4 <mpfr_vasnprintf_aux@@Base+0xc08>
   1adbc:	mov	x28, x20
   1adc0:	ldur	x20, [x29, #-248]
   1adc4:	ldur	x19, [x29, #-184]
   1adc8:	cmp	x19, x28
   1adcc:	b.eq	1ae98 <mpfr_vasnprintf_aux@@Base+0xcdc>  // b.none
   1add0:	ldur	w8, [x29, #-188]
   1add4:	sub	x22, x28, x19
   1add8:	cbz	w8, 1ae5c <mpfr_vasnprintf_aux@@Base+0xca0>
   1addc:	add	x1, x22, #0x1
   1ade0:	cmp	x1, #0x4, lsl #12
   1ade4:	stur	xzr, [x29, #-168]
   1ade8:	b.hi	1b004 <mpfr_vasnprintf_aux@@Base+0xe48>  // b.pmore
   1adec:	add	x9, x1, #0xf
   1adf0:	mov	x8, sp
   1adf4:	and	x9, x9, #0xfffffffffffffff0
   1adf8:	sub	x23, x8, x9
   1adfc:	mov	sp, x23
   1ae00:	mov	x0, x23
   1ae04:	mov	x1, x19
   1ae08:	mov	x2, x22
   1ae0c:	bl	cfc0 <strncpy@plt>
   1ae10:	strb	wzr, [x23, x22]
   1ae14:	ldp	q0, q1, [x29, #-112]
   1ae18:	sub	x0, x29, #0xb0
   1ae1c:	sub	x2, x29, #0xa0
   1ae20:	mov	x1, x23
   1ae24:	stp	q0, q1, [x29, #-160]
   1ae28:	bl	c4c0 <__gmp_vasprintf@plt>
   1ae2c:	tbnz	w0, #31, 1ae7c <mpfr_vasnprintf_aux@@Base+0xcc0>
   1ae30:	ldur	x1, [x29, #-176]
   1ae34:	sxtw	x2, w0
   1ae38:	sub	x0, x29, #0x28
   1ae3c:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1ae40:	ldur	x0, [x29, #-176]
   1ae44:	bl	cd70 <mpfr_free_str@plt>
   1ae48:	ldur	x0, [x29, #-168]
   1ae4c:	cbnz	x0, 1b014 <mpfr_vasnprintf_aux@@Base+0xe58>
   1ae50:	mov	w8, wzr
   1ae54:	cbnz	wzr, 1ae8c <mpfr_vasnprintf_aux@@Base+0xcd0>
   1ae58:	b	1ae6c <mpfr_vasnprintf_aux@@Base+0xcb0>
   1ae5c:	sub	x0, x29, #0x28
   1ae60:	mov	x1, x19
   1ae64:	mov	x2, x22
   1ae68:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1ae6c:	mov	w8, wzr
   1ae70:	cmp	w8, #0x15
   1ae74:	b.ne	1ae94 <mpfr_vasnprintf_aux@@Base+0xcd8>  // b.any
   1ae78:	b	1af5c <mpfr_vasnprintf_aux@@Base+0xda0>
   1ae7c:	ldur	x0, [x29, #-168]
   1ae80:	cbnz	x0, 1b024 <mpfr_vasnprintf_aux@@Base+0xe68>
   1ae84:	mov	w8, #0x15                  	// #21
   1ae88:	cbz	w8, 1ae6c <mpfr_vasnprintf_aux@@Base+0xcb0>
   1ae8c:	cmp	w8, #0x15
   1ae90:	b.eq	1af5c <mpfr_vasnprintf_aux@@Base+0xda0>  // b.none
   1ae94:	cbnz	w8, 1afe0 <mpfr_vasnprintf_aux@@Base+0xe24>
   1ae98:	ldur	x22, [x29, #-16]
   1ae9c:	ldur	w21, [x29, #-212]
   1aea0:	cmn	x22, #0x1
   1aea4:	b.eq	1af6c <mpfr_vasnprintf_aux@@Base+0xdb0>  // b.none
   1aea8:	mov	w8, #0x7fffffff            	// #2147483647
   1aeac:	cmp	x22, x8
   1aeb0:	b.gt	1af6c <mpfr_vasnprintf_aux@@Base+0xdb0>
   1aeb4:	ldur	x19, [x29, #-200]
   1aeb8:	cbz	x19, 1aed8 <mpfr_vasnprintf_aux@@Base+0xd1c>
   1aebc:	ldur	x0, [x29, #-40]
   1aec0:	ldur	x1, [x29, #-24]
   1aec4:	add	w8, w22, #0x1
   1aec8:	sxtw	x2, w8
   1aecc:	bl	c660 <mpfr_reallocate_func@plt>
   1aed0:	str	x0, [x19]
   1aed4:	b	1af10 <mpfr_vasnprintf_aux@@Base+0xd54>
   1aed8:	ldur	x10, [x29, #-232]
   1aedc:	cbz	x10, 1af10 <mpfr_vasnprintf_aux@@Base+0xd54>
   1aee0:	sxtw	x8, w22
   1aee4:	ldur	x1, [x29, #-40]
   1aee8:	ldur	x0, [x29, #-240]
   1aeec:	sub	x9, x10, #0x1
   1aef0:	cmp	x8, x10
   1aef4:	csel	x19, x8, x9, cc  // cc = lo, ul, last
   1aef8:	mov	x2, x19
   1aefc:	bl	cfc0 <strncpy@plt>
   1af00:	strb	wzr, [x0, x19]
   1af04:	ldur	x0, [x29, #-40]
   1af08:	ldur	x1, [x29, #-24]
   1af0c:	bl	d120 <mpfr_free_func@plt>
   1af10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1af14:	ldr	x1, [x0, #2800]
   1af18:	add	x0, x0, #0xaf0
   1af1c:	blr	x1
   1af20:	str	w21, [x26, x0]
   1af24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1af28:	ldr	x1, [x0, #2736]
   1af2c:	add	x0, x0, #0xab0
   1af30:	blr	x1
   1af34:	ldur	x8, [x29, #-208]
   1af38:	str	x8, [x26, x0]
   1af3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1af40:	ldr	x1, [x0, #2768]
   1af44:	add	x0, x0, #0xad0
   1af48:	blr	x1
   1af4c:	str	x20, [x26, x0]
   1af50:	b	1afe0 <mpfr_vasnprintf_aux@@Base+0xe24>
   1af54:	cmp	w8, #0x15
   1af58:	b.ne	1afe0 <mpfr_vasnprintf_aux@@Base+0xe24>  // b.any
   1af5c:	ldur	x8, [x29, #-16]
   1af60:	ldur	w21, [x29, #-212]
   1af64:	cmn	x8, #0x1
   1af68:	b.ne	1af7c <mpfr_vasnprintf_aux@@Base+0xdc0>  // b.any
   1af6c:	orr	w21, w21, #0x10
   1af70:	bl	d0f0 <__errno_location@plt>
   1af74:	mov	w8, #0x4b                  	// #75
   1af78:	str	w8, [x0]
   1af7c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1af80:	ldr	x1, [x0, #2800]
   1af84:	add	x0, x0, #0xaf0
   1af88:	blr	x1
   1af8c:	str	w21, [x26, x0]
   1af90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1af94:	ldr	x1, [x0, #2736]
   1af98:	add	x0, x0, #0xab0
   1af9c:	blr	x1
   1afa0:	ldur	x8, [x29, #-208]
   1afa4:	str	x8, [x26, x0]
   1afa8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1afac:	ldr	x1, [x0, #2768]
   1afb0:	add	x0, x0, #0xad0
   1afb4:	blr	x1
   1afb8:	ldur	x8, [x29, #-200]
   1afbc:	str	x20, [x26, x0]
   1afc0:	cbz	x8, 1afc8 <mpfr_vasnprintf_aux@@Base+0xe0c>
   1afc4:	str	xzr, [x8]
   1afc8:	ldur	x8, [x29, #-224]
   1afcc:	cbz	w8, 1afdc <mpfr_vasnprintf_aux@@Base+0xe20>
   1afd0:	ldur	x0, [x29, #-40]
   1afd4:	ldur	x1, [x29, #-24]
   1afd8:	bl	d120 <mpfr_free_func@plt>
   1afdc:	mov	w22, #0xffffffff            	// #-1
   1afe0:	mov	w0, w22
   1afe4:	mov	sp, x29
   1afe8:	ldp	x20, x19, [sp, #80]
   1afec:	ldp	x22, x21, [sp, #64]
   1aff0:	ldp	x24, x23, [sp, #48]
   1aff4:	ldp	x26, x25, [sp, #32]
   1aff8:	ldp	x28, x27, [sp, #16]
   1affc:	ldp	x29, x30, [sp], #96
   1b000:	ret
   1b004:	sub	x0, x29, #0xa8
   1b008:	bl	c220 <mpfr_tmp_allocate@plt>
   1b00c:	mov	x23, x0
   1b010:	b	1ae00 <mpfr_vasnprintf_aux@@Base+0xc44>
   1b014:	bl	c8d0 <mpfr_tmp_free@plt>
   1b018:	mov	w8, wzr
   1b01c:	cbnz	wzr, 1ae8c <mpfr_vasnprintf_aux@@Base+0xcd0>
   1b020:	b	1ae6c <mpfr_vasnprintf_aux@@Base+0xcb0>
   1b024:	bl	c8d0 <mpfr_tmp_free@plt>
   1b028:	mov	w8, #0x15                  	// #21
   1b02c:	cbnz	w8, 1ae8c <mpfr_vasnprintf_aux@@Base+0xcd0>
   1b030:	b	1ae6c <mpfr_vasnprintf_aux@@Base+0xcb0>
   1b034:	stp	x29, x30, [sp, #-32]!
   1b038:	stp	x20, x19, [sp, #16]
   1b03c:	mov	x20, x1
   1b040:	mov	x19, x0
   1b044:	mov	x29, sp
   1b048:	cbz	x1, 1b064 <mpfr_vasnprintf_aux@@Base+0xea8>
   1b04c:	mov	x0, x20
   1b050:	bl	d1f0 <mpfr_allocate_func@plt>
   1b054:	str	x0, [x19]
   1b058:	strb	wzr, [x0]
   1b05c:	ldr	x8, [x19]
   1b060:	str	x8, [x19, #8]
   1b064:	stp	x20, xzr, [x19, #16]
   1b068:	ldp	x20, x19, [sp, #16]
   1b06c:	ldp	x29, x30, [sp], #32
   1b070:	ret
   1b074:	ldrb	w8, [x0]
   1b078:	mov	w9, #0x1                   	// #1
   1b07c:	mov	w10, #0x2000                	// #8192
   1b080:	stur	xzr, [x0, #4]
   1b084:	and	w8, w8, #0xe0
   1b088:	stp	x9, xzr, [x0, #16]
   1b08c:	strb	w8, [x0]
   1b090:	strh	w10, [x0, #32]
   1b094:	ret
   1b098:	adrp	x8, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b09c:	add	x8, x8, #0xbff
   1b0a0:	mov	w9, #0x30                  	// #48
   1b0a4:	b	1b0b8 <mpfr_vasnprintf_aux@@Base+0xefc>
   1b0a8:	ldrb	w10, [x1]
   1b0ac:	orr	w10, w10, #0x10
   1b0b0:	strb	w10, [x1]
   1b0b4:	add	x0, x0, #0x1
   1b0b8:	ldrb	w10, [x0]
   1b0bc:	sub	w10, w10, #0x20
   1b0c0:	cmp	w10, #0x10
   1b0c4:	b.hi	1b114 <mpfr_vasnprintf_aux@@Base+0xf58>  // b.pmore
   1b0c8:	adr	x11, 1b0a8 <mpfr_vasnprintf_aux@@Base+0xeec>
   1b0cc:	ldrb	w12, [x8, x10]
   1b0d0:	add	x11, x11, x12, lsl #2
   1b0d4:	br	x11
   1b0d8:	ldrb	w10, [x1]
   1b0dc:	orr	w10, w10, #0x2
   1b0e0:	b	1b0b0 <mpfr_vasnprintf_aux@@Base+0xef4>
   1b0e4:	ldrb	w10, [x1]
   1b0e8:	orr	w10, w10, #0x1
   1b0ec:	b	1b0b0 <mpfr_vasnprintf_aux@@Base+0xef4>
   1b0f0:	ldrb	w10, [x1]
   1b0f4:	orr	w10, w10, #0x8
   1b0f8:	b	1b0b0 <mpfr_vasnprintf_aux@@Base+0xef4>
   1b0fc:	ldrb	w10, [x1]
   1b100:	orr	w10, w10, #0x4
   1b104:	b	1b0b0 <mpfr_vasnprintf_aux@@Base+0xef4>
   1b108:	strb	w9, [x1, #33]
   1b10c:	add	x0, x0, #0x1
   1b110:	b	1b0b8 <mpfr_vasnprintf_aux@@Base+0xefc>
   1b114:	ret
   1b118:	ldrb	w8, [x0]
   1b11c:	sub	w8, w8, #0x46
   1b120:	cmp	w8, #0x34
   1b124:	b.hi	1b1f4 <mpfr_vasnprintf_aux@@Base+0x1038>  // b.pmore
   1b128:	adrp	x9, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b12c:	add	x9, x9, #0xc10
   1b130:	adr	x10, 1b140 <mpfr_vasnprintf_aux@@Base+0xf84>
   1b134:	ldrb	w11, [x9, x8]
   1b138:	add	x10, x10, x11, lsl #2
   1b13c:	br	x10
   1b140:	add	x0, x0, #0x1
   1b144:	mov	w8, #0x9                   	// #9
   1b148:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b14c:	add	x0, x0, #0x1
   1b150:	mov	w8, #0x8                   	// #8
   1b154:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b158:	add	x0, x0, #0x1
   1b15c:	mov	w8, #0xb                   	// #11
   1b160:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b164:	add	x0, x0, #0x1
   1b168:	mov	w8, #0xc                   	// #12
   1b16c:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b170:	add	x0, x0, #0x1
   1b174:	mov	w8, #0xe                   	// #14
   1b178:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b17c:	add	x0, x0, #0x1
   1b180:	mov	w8, #0xa                   	// #10
   1b184:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b188:	add	x0, x0, #0x1
   1b18c:	mov	w8, #0xf                   	// #15
   1b190:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b194:	add	x0, x0, #0x1
   1b198:	mov	w8, #0xd                   	// #13
   1b19c:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b1a0:	ldrb	w8, [x0, #1]!
   1b1a4:	mov	w9, #0x1                   	// #1
   1b1a8:	cmp	w8, #0x68
   1b1ac:	cinc	w8, w9, ne  // ne = any
   1b1b0:	cinc	x0, x0, eq  // eq = none
   1b1b4:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b1b8:	add	x0, x0, #0x1
   1b1bc:	mov	w8, #0x5                   	// #5
   1b1c0:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b1c4:	ldrb	w8, [x0, #1]!
   1b1c8:	mov	w9, #0x3                   	// #3
   1b1cc:	cmp	w8, #0x6c
   1b1d0:	cinc	w8, w9, eq  // eq = none
   1b1d4:	cinc	x0, x0, eq  // eq = none
   1b1d8:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b1dc:	add	x0, x0, #0x1
   1b1e0:	mov	w8, #0x7                   	// #7
   1b1e4:	b	1b1f0 <mpfr_vasnprintf_aux@@Base+0x1034>
   1b1e8:	add	x0, x0, #0x1
   1b1ec:	mov	w8, #0x6                   	// #6
   1b1f0:	str	w8, [x1, #24]
   1b1f4:	ret
   1b1f8:	ldrb	w9, [x0, #32]
   1b1fc:	sub	w9, w9, #0x41
   1b200:	cmp	w9, #0x37
   1b204:	b.hi	1b2a0 <mpfr_vasnprintf_aux@@Base+0x10e4>  // b.pmore
   1b208:	adrp	x10, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b20c:	add	x10, x10, #0xc45
   1b210:	adr	x11, 1b228 <mpfr_vasnprintf_aux@@Base+0x106c>
   1b214:	ldrb	w12, [x10, x9]
   1b218:	add	x11, x11, x12, lsl #2
   1b21c:	mov	x8, x0
   1b220:	mov	w0, #0xffffffff            	// #-1
   1b224:	br	x11
   1b228:	ldr	w8, [x8, #24]
   1b22c:	cmp	w8, #0xf
   1b230:	b.hi	1b28c <mpfr_vasnprintf_aux@@Base+0x10d0>  // b.pmore
   1b234:	mov	w0, #0x1                   	// #1
   1b238:	lsl	w9, w0, w8
   1b23c:	mov	w10, #0x8201                	// #33281
   1b240:	tst	w9, w10
   1b244:	b.eq	1b28c <mpfr_vasnprintf_aux@@Base+0x10d0>  // b.none
   1b248:	ret
   1b24c:	ldr	w8, [x8, #24]
   1b250:	cmp	w8, #0xf
   1b254:	b.cs	1b264 <mpfr_vasnprintf_aux@@Base+0x10a8>  // b.hs, b.nlast
   1b258:	mov	w9, #0x7c7f                	// #31871
   1b25c:	lsr	w9, w9, w8
   1b260:	tbnz	w9, #0, 1b298 <mpfr_vasnprintf_aux@@Base+0x10dc>
   1b264:	cmp	w8, #0x7
   1b268:	cset	w0, eq  // eq = none
   1b26c:	ret
   1b270:	ldr	w8, [x8, #24]
   1b274:	cmp	w8, #0x0
   1b278:	cset	w9, eq  // eq = none
   1b27c:	cmp	w8, #0x3
   1b280:	cset	w8, eq  // eq = none
   1b284:	orr	w0, w9, w8
   1b288:	ret
   1b28c:	cmp	w8, #0x8
   1b290:	cset	w0, eq  // eq = none
   1b294:	ret
   1b298:	mov	w0, #0x1                   	// #1
   1b29c:	ret
   1b2a0:	mov	w0, wzr
   1b2a4:	ret
   1b2a8:	ldr	w8, [x8, #24]
   1b2ac:	cmp	w8, #0xf
   1b2b0:	cset	w0, eq  // eq = none
   1b2b4:	ret
   1b2b8:	ldr	w8, [x8, #24]
   1b2bc:	cmp	w8, #0x0
   1b2c0:	cset	w0, eq  // eq = none
   1b2c4:	ret
   1b2c8:	stp	x29, x30, [sp, #-48]!
   1b2cc:	str	x21, [sp, #16]
   1b2d0:	mov	x21, x1
   1b2d4:	mov	x1, x2
   1b2d8:	stp	x20, x19, [sp, #32]
   1b2dc:	mov	x29, sp
   1b2e0:	mov	x19, x2
   1b2e4:	mov	x20, x0
   1b2e8:	bl	1b54c <mpfr_vasnprintf_aux@@Base+0x1390>
   1b2ec:	cbz	w0, 1b2f8 <mpfr_vasnprintf_aux@@Base+0x113c>
   1b2f0:	mov	w0, #0x1                   	// #1
   1b2f4:	b	1b34c <mpfr_vasnprintf_aux@@Base+0x1190>
   1b2f8:	ldr	x8, [x20, #16]
   1b2fc:	cbz	x8, 1b348 <mpfr_vasnprintf_aux@@Base+0x118c>
   1b300:	mvn	x9, x19
   1b304:	cmp	x8, x9
   1b308:	b.cs	1b35c <mpfr_vasnprintf_aux@@Base+0x11a0>  // b.hs, b.nlast
   1b30c:	ldp	x9, x8, [x20]
   1b310:	ldr	x10, [x20, #16]
   1b314:	add	x8, x8, x19
   1b318:	add	x9, x9, x10
   1b31c:	cmp	x8, x9
   1b320:	b.cs	1b378 <mpfr_vasnprintf_aux@@Base+0x11bc>  // b.hs, b.nlast
   1b324:	ldr	x0, [x20, #8]
   1b328:	mov	x1, x21
   1b32c:	mov	x2, x19
   1b330:	bl	ce30 <strncat@plt>
   1b334:	ldr	x8, [x20, #8]
   1b338:	mov	w0, wzr
   1b33c:	add	x8, x8, x19
   1b340:	str	x8, [x20, #8]
   1b344:	b	1b34c <mpfr_vasnprintf_aux@@Base+0x1190>
   1b348:	mov	w0, wzr
   1b34c:	ldp	x20, x19, [sp, #32]
   1b350:	ldr	x21, [sp, #16]
   1b354:	ldp	x29, x30, [sp], #48
   1b358:	ret
   1b35c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b360:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b364:	add	x0, x0, #0xc8d
   1b368:	add	x2, x2, #0xce1
   1b36c:	mov	w1, #0x27e                 	// #638
   1b370:	bl	d030 <mpfr_assert_fail@plt>
   1b374:	b	1b30c <mpfr_vasnprintf_aux@@Base+0x1150>
   1b378:	mov	x0, x20
   1b37c:	mov	x1, x19
   1b380:	bl	1b584 <mpfr_vasnprintf_aux@@Base+0x13c8>
   1b384:	b	1b324 <mpfr_vasnprintf_aux@@Base+0x1168>
   1b388:	sub	sp, sp, #0xd0
   1b38c:	stp	x29, x30, [sp, #176]
   1b390:	stp	x20, x19, [sp, #192]
   1b394:	ldr	x8, [x2, #32]
   1b398:	ldp	q1, q0, [x2]
   1b39c:	mov	x20, x2
   1b3a0:	mov	x19, x0
   1b3a4:	add	x0, sp, #0x30
   1b3a8:	mov	x2, sp
   1b3ac:	add	x29, sp, #0xb0
   1b3b0:	str	x8, [sp, #32]
   1b3b4:	stp	q1, q0, [sp]
   1b3b8:	bl	1b63c <mpfr_vasnprintf_aux@@Base+0x1480>
   1b3bc:	tbnz	x0, #63, 1b4e4 <mpfr_vasnprintf_aux@@Base+0x1328>
   1b3c0:	ldr	x8, [x20, #16]
   1b3c4:	cbz	x8, 1b4f0 <mpfr_vasnprintf_aux@@Base+0x1334>
   1b3c8:	ldr	w8, [sp, #48]
   1b3cc:	cbnz	w8, 1b3e4 <mpfr_vasnprintf_aux@@Base+0x1228>
   1b3d0:	ldr	x2, [sp, #56]
   1b3d4:	cbz	x2, 1b3e4 <mpfr_vasnprintf_aux@@Base+0x1228>
   1b3d8:	mov	w1, #0x20                  	// #32
   1b3dc:	mov	x0, x19
   1b3e0:	bl	1bc74 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   1b3e4:	ldrb	w1, [sp, #64]
   1b3e8:	cbz	w1, 1b3f8 <mpfr_vasnprintf_aux@@Base+0x123c>
   1b3ec:	mov	w2, #0x1                   	// #1
   1b3f0:	mov	x0, x19
   1b3f4:	bl	1bc74 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   1b3f8:	ldr	x1, [sp, #72]
   1b3fc:	cbz	x1, 1b40c <mpfr_vasnprintf_aux@@Base+0x1250>
   1b400:	ldr	x2, [sp, #80]
   1b404:	mov	x0, x19
   1b408:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1b40c:	ldr	w8, [sp, #48]
   1b410:	cmp	w8, #0x1
   1b414:	b.ne	1b42c <mpfr_vasnprintf_aux@@Base+0x1270>  // b.any
   1b418:	ldr	x2, [sp, #56]
   1b41c:	cbz	x2, 1b42c <mpfr_vasnprintf_aux@@Base+0x1270>
   1b420:	mov	w1, #0x30                  	// #48
   1b424:	mov	x0, x19
   1b428:	bl	1bc74 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   1b42c:	ldr	x8, [sp, #96]
   1b430:	cbz	x8, 1b514 <mpfr_vasnprintf_aux@@Base+0x1358>
   1b434:	ldrb	w4, [sp, #88]
   1b438:	ldp	x1, x2, [sp, #96]
   1b43c:	cbnz	w4, 1b530 <mpfr_vasnprintf_aux@@Base+0x1374>
   1b440:	mov	x0, x19
   1b444:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1b448:	ldrsw	x2, [sp, #112]
   1b44c:	cbz	w2, 1b45c <mpfr_vasnprintf_aux@@Base+0x12a0>
   1b450:	mov	w1, #0x30                  	// #48
   1b454:	mov	x0, x19
   1b458:	bl	1bc74 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   1b45c:	ldrb	w1, [sp, #116]
   1b460:	cbz	w1, 1b470 <mpfr_vasnprintf_aux@@Base+0x12b4>
   1b464:	mov	w2, #0x1                   	// #1
   1b468:	mov	x0, x19
   1b46c:	bl	1bc74 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   1b470:	ldrsw	x2, [sp, #120]
   1b474:	cbz	w2, 1b484 <mpfr_vasnprintf_aux@@Base+0x12c8>
   1b478:	mov	w1, #0x30                  	// #48
   1b47c:	mov	x0, x19
   1b480:	bl	1bc74 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   1b484:	ldr	x1, [sp, #128]
   1b488:	cbz	x1, 1b498 <mpfr_vasnprintf_aux@@Base+0x12dc>
   1b48c:	ldr	x2, [sp, #136]
   1b490:	mov	x0, x19
   1b494:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1b498:	ldrsw	x2, [sp, #144]
   1b49c:	cbz	w2, 1b4ac <mpfr_vasnprintf_aux@@Base+0x12f0>
   1b4a0:	mov	w1, #0x30                  	// #48
   1b4a4:	mov	x0, x19
   1b4a8:	bl	1bc74 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   1b4ac:	ldr	x1, [sp, #152]
   1b4b0:	cbz	x1, 1b4c0 <mpfr_vasnprintf_aux@@Base+0x1304>
   1b4b4:	ldr	x2, [sp, #160]
   1b4b8:	mov	x0, x19
   1b4bc:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1b4c0:	ldr	w8, [sp, #48]
   1b4c4:	cmp	w8, #0x2
   1b4c8:	b.ne	1b4fc <mpfr_vasnprintf_aux@@Base+0x1340>  // b.any
   1b4cc:	ldr	x2, [sp, #56]
   1b4d0:	cbz	x2, 1b4fc <mpfr_vasnprintf_aux@@Base+0x1340>
   1b4d4:	mov	w1, #0x20                  	// #32
   1b4d8:	mov	x0, x19
   1b4dc:	bl	1bc74 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   1b4e0:	b	1b4fc <mpfr_vasnprintf_aux@@Base+0x1340>
   1b4e4:	mov	x8, #0xffffffffffffffff    	// #-1
   1b4e8:	str	x8, [x19, #24]
   1b4ec:	b	1b504 <mpfr_vasnprintf_aux@@Base+0x1348>
   1b4f0:	mov	x1, x0
   1b4f4:	mov	x0, x19
   1b4f8:	bl	1b54c <mpfr_vasnprintf_aux@@Base+0x1390>
   1b4fc:	ldr	x0, [sp, #168]
   1b500:	bl	1bf78 <mpfr_vasnprintf_aux@@Base+0x1dbc>
   1b504:	ldp	x20, x19, [sp, #192]
   1b508:	ldp	x29, x30, [sp, #176]
   1b50c:	add	sp, sp, #0xd0
   1b510:	ret
   1b514:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b518:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b51c:	add	x0, x0, #0xc8d
   1b520:	add	x2, x2, #0xd33
   1b524:	mov	w1, #0x7a3                 	// #1955
   1b528:	bl	d030 <mpfr_assert_fail@plt>
   1b52c:	b	1b434 <mpfr_vasnprintf_aux@@Base+0x1278>
   1b530:	ldrsw	x3, [sp, #112]
   1b534:	mov	x0, x19
   1b538:	bl	1bd48 <mpfr_vasnprintf_aux@@Base+0x1b8c>
   1b53c:	cbz	w0, 1b45c <mpfr_vasnprintf_aux@@Base+0x12a0>
   1b540:	mov	x8, #0xffffffffffffffff    	// #-1
   1b544:	str	x8, [x19, #24]
   1b548:	b	1b4fc <mpfr_vasnprintf_aux@@Base+0x1340>
   1b54c:	ldr	x8, [x0, #24]
   1b550:	cmn	x8, #0x1
   1b554:	b.eq	1b578 <mpfr_vasnprintf_aux@@Base+0x13bc>  // b.none
   1b558:	adds	x9, x8, x1
   1b55c:	cset	w8, cs  // cs = hs, nlast
   1b560:	orr	x8, x8, x9, lsr #63
   1b564:	cmp	x8, #0x0
   1b568:	csinv	x9, x9, xzr, eq  // eq = none
   1b56c:	str	x9, [x0, #24]
   1b570:	mov	w0, w8
   1b574:	ret
   1b578:	mov	w8, #0x1                   	// #1
   1b57c:	mov	w0, w8
   1b580:	ret
   1b584:	stp	x29, x30, [sp, #-64]!
   1b588:	str	x23, [sp, #16]
   1b58c:	stp	x22, x21, [sp, #32]
   1b590:	stp	x20, x19, [sp, #48]
   1b594:	ldp	x22, x21, [x0]
   1b598:	add	x23, x1, #0x1, lsl #12
   1b59c:	and	x20, x23, #0xfffffffffffff000
   1b5a0:	mov	x19, x0
   1b5a4:	cmp	x20, x1
   1b5a8:	mov	x29, sp
   1b5ac:	b.cc	1b604 <mpfr_vasnprintf_aux@@Base+0x1448>  // b.lo, b.ul, b.last
   1b5b0:	cbz	x20, 1b604 <mpfr_vasnprintf_aux@@Base+0x1448>
   1b5b4:	ldr	x8, [x19, #16]
   1b5b8:	orr	x9, x23, #0xfff
   1b5bc:	eor	x9, x9, #0xfffffffffffff000
   1b5c0:	sub	x21, x21, x22
   1b5c4:	cmp	x8, x9
   1b5c8:	b.cs	1b620 <mpfr_vasnprintf_aux@@Base+0x1464>  // b.hs, b.nlast
   1b5cc:	ldr	x1, [x19, #16]
   1b5d0:	ldr	x0, [x19]
   1b5d4:	add	x2, x1, x20
   1b5d8:	bl	c660 <mpfr_reallocate_func@plt>
   1b5dc:	ldr	x8, [x19, #16]
   1b5e0:	add	x9, x0, x21
   1b5e4:	str	x0, [x19]
   1b5e8:	add	x8, x8, x20
   1b5ec:	stp	x9, x8, [x19, #8]
   1b5f0:	ldp	x20, x19, [sp, #48]
   1b5f4:	ldp	x22, x21, [sp, #32]
   1b5f8:	ldr	x23, [sp, #16]
   1b5fc:	ldp	x29, x30, [sp], #64
   1b600:	ret
   1b604:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b608:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b60c:	add	x0, x0, #0xc8d
   1b610:	add	x2, x2, #0xcff
   1b614:	mov	w1, #0x260                 	// #608
   1b618:	bl	d030 <mpfr_assert_fail@plt>
   1b61c:	b	1b5b4 <mpfr_vasnprintf_aux@@Base+0x13f8>
   1b620:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b624:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1b628:	add	x0, x0, #0xc8d
   1b62c:	add	x2, x2, #0xd17
   1b630:	mov	w1, #0x265                 	// #613
   1b634:	bl	d030 <mpfr_assert_fail@plt>
   1b638:	b	1b5cc <mpfr_vasnprintf_aux@@Base+0x1410>
   1b63c:	sub	sp, sp, #0x80
   1b640:	stp	x29, x30, [sp, #64]
   1b644:	stp	x22, x21, [sp, #96]
   1b648:	stp	x20, x19, [sp, #112]
   1b64c:	ldrb	w8, [x2]
   1b650:	mov	x20, x2
   1b654:	mov	x21, x1
   1b658:	mov	x19, x0
   1b65c:	str	x23, [sp, #80]
   1b660:	add	x29, sp, #0x40
   1b664:	tbnz	w8, #2, 1b678 <mpfr_vasnprintf_aux@@Base+0x14bc>
   1b668:	ldrb	w8, [x20, #33]
   1b66c:	cmp	w8, #0x30
   1b670:	cset	w8, eq  // eq = none
   1b674:	b	1b67c <mpfr_vasnprintf_aux@@Base+0x14c0>
   1b678:	mov	w8, #0x2                   	// #2
   1b67c:	mov	x22, #0x4                   	// #4
   1b680:	mov	w0, #0x10                  	// #16
   1b684:	movk	x22, #0x8000, lsl #48
   1b688:	str	w8, [x19]
   1b68c:	str	xzr, [x19, #8]
   1b690:	strb	wzr, [x19, #16]
   1b694:	str	wzr, [x19, #72]
   1b698:	stp	xzr, xzr, [x19, #24]
   1b69c:	strb	wzr, [x19, #40]
   1b6a0:	stp	xzr, xzr, [x19, #48]
   1b6a4:	stur	xzr, [x19, #61]
   1b6a8:	stp	xzr, xzr, [x19, #80]
   1b6ac:	str	wzr, [x19, #96]
   1b6b0:	stp	xzr, xzr, [x19, #104]
   1b6b4:	bl	d1f0 <mpfr_allocate_func@plt>
   1b6b8:	str	x0, [x19, #120]
   1b6bc:	bl	1bfc4 <mpfr_vasnprintf_aux@@Base+0x1e08>
   1b6c0:	ldrb	w9, [x20, #32]
   1b6c4:	ldr	x8, [x21, #16]
   1b6c8:	mov	w11, #0x71                  	// #113
   1b6cc:	sub	w10, w9, #0x41
   1b6d0:	cmp	w10, #0x7
   1b6d4:	lsr	w11, w11, w10
   1b6d8:	cset	w12, cc  // cc = lo, ul, last
   1b6dc:	cmp	x8, x22
   1b6e0:	and	w22, w11, w12
   1b6e4:	b.lt	1b96c <mpfr_vasnprintf_aux@@Base+0x17b0>  // b.tstop
   1b6e8:	b.eq	1b9c4 <mpfr_vasnprintf_aux@@Base+0x1808>  // b.none
   1b6ec:	cmp	w10, #0x25
   1b6f0:	b.hi	1b7a8 <mpfr_vasnprintf_aux@@Base+0x15ec>  // b.pmore
   1b6f4:	mov	w9, #0x1                   	// #1
   1b6f8:	mov	x11, #0x1                   	// #1
   1b6fc:	lsl	x9, x9, x10
   1b700:	movk	x11, #0x3, lsl #32
   1b704:	tst	x9, x11
   1b708:	b.ne	1b75c <mpfr_vasnprintf_aux@@Base+0x15a0>  // b.any
   1b70c:	mov	w9, #0x1                   	// #1
   1b710:	lsl	x9, x9, x10
   1b714:	tst	x9, #0x1000000010
   1b718:	b.ne	1b788 <mpfr_vasnprintf_aux@@Base+0x15cc>  // b.any
   1b71c:	mov	w9, #0x1                   	// #1
   1b720:	lsl	x9, x9, x10
   1b724:	tst	x9, #0x2000000020
   1b728:	b.eq	1b7a8 <mpfr_vasnprintf_aux@@Base+0x15ec>  // b.none
   1b72c:	ldr	w8, [x20, #8]
   1b730:	tbz	w8, #31, 1b73c <mpfr_vasnprintf_aux@@Base+0x1580>
   1b734:	mov	w8, #0x6                   	// #6
   1b738:	str	w8, [x20, #8]
   1b73c:	ldr	x8, [x20, #32]
   1b740:	ldp	q1, q0, [x20]
   1b744:	add	x2, sp, #0x10
   1b748:	mov	x0, x19
   1b74c:	mov	x1, x21
   1b750:	mov	x3, xzr
   1b754:	str	x8, [sp, #48]
   1b758:	b	1b854 <mpfr_vasnprintf_aux@@Base+0x1698>
   1b75c:	ldr	x8, [x20, #32]
   1b760:	ldp	q1, q0, [x20]
   1b764:	add	x2, sp, #0x10
   1b768:	mov	x0, x19
   1b76c:	mov	x1, x21
   1b770:	str	x8, [sp, #48]
   1b774:	stp	q1, q0, [sp, #16]
   1b778:	bl	1c008 <mpfr_vasnprintf_aux@@Base+0x1e4c>
   1b77c:	cmn	w0, #0x1
   1b780:	b.ne	1b89c <mpfr_vasnprintf_aux@@Base+0x16e0>  // b.any
   1b784:	b	1b938 <mpfr_vasnprintf_aux@@Base+0x177c>
   1b788:	ldr	x8, [x20, #32]
   1b78c:	ldp	q1, q0, [x20]
   1b790:	add	x2, sp, #0x10
   1b794:	mov	x0, x19
   1b798:	mov	x1, x21
   1b79c:	mov	x3, xzr
   1b7a0:	str	x8, [sp, #48]
   1b7a4:	b	1b88c <mpfr_vasnprintf_aux@@Base+0x16d0>
   1b7a8:	ldr	w9, [x20, #8]
   1b7ac:	ldr	x11, [x21]
   1b7b0:	mov	w10, #0x6                   	// #6
   1b7b4:	cmp	w9, #0x0
   1b7b8:	csinc	w9, w9, wzr, ne  // ne = any
   1b7bc:	csel	w22, w10, w9, lt  // lt = tstop
   1b7c0:	cmp	x8, #0x1
   1b7c4:	sub	x9, x11, x8
   1b7c8:	b.lt	1b7e8 <mpfr_vasnprintf_aux@@Base+0x162c>  // b.tstop
   1b7cc:	mov	x10, #0x5555555555555555    	// #6148914691236517205
   1b7d0:	add	x8, x8, #0x2
   1b7d4:	movk	x10, #0x5556
   1b7d8:	smulh	x8, x8, x10
   1b7dc:	add	x8, x8, x8, lsr #63
   1b7e0:	bic	x9, x9, x9, asr #63
   1b7e4:	add	x9, x9, x8
   1b7e8:	ldr	w5, [x20, #28]
   1b7ec:	sxtw	x23, w22
   1b7f0:	cmp	x9, x23
   1b7f4:	csel	x3, x9, x23, lt  // lt = tstop
   1b7f8:	mov	x1, sp
   1b7fc:	mov	w2, #0xa                   	// #10
   1b800:	mov	x0, xzr
   1b804:	mov	x4, x21
   1b808:	bl	c9d0 <mpfr_get_str@plt>
   1b80c:	str	x0, [sp, #8]
   1b810:	mov	x1, x0
   1b814:	ldr	x0, [x19, #120]
   1b818:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1b81c:	ldr	x8, [sp]
   1b820:	cmp	x8, x23
   1b824:	b.gt	1b868 <mpfr_vasnprintf_aux@@Base+0x16ac>
   1b828:	cmn	x8, #0x3
   1b82c:	b.lt	1b868 <mpfr_vasnprintf_aux@@Base+0x16ac>  // b.tstop
   1b830:	sub	w8, w22, w8
   1b834:	str	w8, [x20, #8]
   1b838:	ldr	x9, [x20, #32]
   1b83c:	ldp	q1, q0, [x20]
   1b840:	add	x2, sp, #0x10
   1b844:	mov	x3, sp
   1b848:	mov	x0, x19
   1b84c:	mov	x1, x21
   1b850:	str	x9, [sp, #48]
   1b854:	stp	q1, q0, [sp, #16]
   1b858:	bl	1c498 <mpfr_vasnprintf_aux@@Base+0x22dc>
   1b85c:	cmn	w0, #0x1
   1b860:	b.ne	1b89c <mpfr_vasnprintf_aux@@Base+0x16e0>  // b.any
   1b864:	b	1b938 <mpfr_vasnprintf_aux@@Base+0x177c>
   1b868:	sub	w8, w22, #0x1
   1b86c:	str	w8, [x20, #8]
   1b870:	ldr	x9, [x20, #32]
   1b874:	ldp	q1, q0, [x20]
   1b878:	add	x2, sp, #0x10
   1b87c:	mov	x3, sp
   1b880:	mov	x0, x19
   1b884:	mov	x1, x21
   1b888:	str	x9, [sp, #48]
   1b88c:	stp	q1, q0, [sp, #16]
   1b890:	bl	1ca64 <mpfr_vasnprintf_aux@@Base+0x28a8>
   1b894:	cmn	w0, #0x1
   1b898:	b.eq	1b938 <mpfr_vasnprintf_aux@@Base+0x177c>  // b.none
   1b89c:	ldr	x8, [x19, #32]
   1b8a0:	tbnz	x8, #63, 1b938 <mpfr_vasnprintf_aux@@Base+0x177c>
   1b8a4:	ldr	x9, [x19, #56]
   1b8a8:	tbnz	x9, #63, 1b938 <mpfr_vasnprintf_aux@@Base+0x177c>
   1b8ac:	ldrb	w11, [x19, #16]
   1b8b0:	ldrsw	x10, [x19, #64]
   1b8b4:	ldrb	w12, [x19, #40]
   1b8b8:	add	w8, w9, w8
   1b8bc:	cmp	w11, #0x0
   1b8c0:	cinc	w8, w8, ne  // ne = any
   1b8c4:	add	w8, w10, w8
   1b8c8:	cbz	w12, 1b8e8 <mpfr_vasnprintf_aux@@Base+0x172c>
   1b8cc:	add	x9, x9, x10
   1b8d0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1b8d4:	sub	x9, x9, #0x1
   1b8d8:	movk	x10, #0xaaab
   1b8dc:	umulh	x9, x9, x10
   1b8e0:	lsr	x9, x9, #1
   1b8e4:	add	w8, w8, w9
   1b8e8:	ldr	x10, [x19, #88]
   1b8ec:	tbnz	x10, #63, 1b938 <mpfr_vasnprintf_aux@@Base+0x177c>
   1b8f0:	ldr	x9, [x19, #112]
   1b8f4:	tbnz	x9, #63, 1b938 <mpfr_vasnprintf_aux@@Base+0x177c>
   1b8f8:	ldrb	w11, [x19, #68]
   1b8fc:	ldr	w12, [x19, #72]
   1b900:	ldr	w13, [x19, #96]
   1b904:	add	w10, w8, w10
   1b908:	ldr	w8, [x20, #4]
   1b90c:	add	w9, w10, w9
   1b910:	cmp	w11, #0x0
   1b914:	add	w9, w9, w12
   1b918:	cinc	w9, w9, ne  // ne = any
   1b91c:	add	w9, w9, w13
   1b920:	subs	w10, w8, w9
   1b924:	b.ls	1b930 <mpfr_vasnprintf_aux@@Base+0x1774>  // b.plast
   1b928:	mov	w9, w8
   1b92c:	str	x10, [x19, #8]
   1b930:	mov	w0, w9
   1b934:	b	1b954 <mpfr_vasnprintf_aux@@Base+0x1798>
   1b938:	ldr	x0, [x19, #120]
   1b93c:	bl	1bf78 <mpfr_vasnprintf_aux@@Base+0x1dbc>
   1b940:	str	xzr, [x19, #24]
   1b944:	str	xzr, [x19, #48]
   1b948:	str	xzr, [x19, #80]
   1b94c:	str	xzr, [x19, #104]
   1b950:	mov	x0, #0xffffffffffffffff    	// #-1
   1b954:	ldp	x20, x19, [sp, #112]
   1b958:	ldp	x22, x21, [sp, #96]
   1b95c:	ldr	x23, [sp, #80]
   1b960:	ldp	x29, x30, [sp, #64]
   1b964:	add	sp, sp, #0x80
   1b968:	ret
   1b96c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1b970:	cmp	x8, x10
   1b974:	b.eq	1ba14 <mpfr_vasnprintf_aux@@Base+0x1858>  // b.none
   1b978:	mov	x10, #0x2                   	// #2
   1b97c:	movk	x10, #0x8000, lsl #48
   1b980:	cmp	x8, x10
   1b984:	b.ne	1ba7c <mpfr_vasnprintf_aux@@Base+0x18c0>  // b.any
   1b988:	ldr	w8, [x19]
   1b98c:	cmp	w8, #0x1
   1b990:	b.ne	1b998 <mpfr_vasnprintf_aux@@Base+0x17dc>  // b.any
   1b994:	str	wzr, [x19]
   1b998:	mov	w8, #0x3                   	// #3
   1b99c:	mov	w0, #0x4                   	// #4
   1b9a0:	str	x8, [x19, #56]
   1b9a4:	bl	d1f0 <mpfr_allocate_func@plt>
   1b9a8:	mov	w8, #0x616e                	// #24942
   1b9ac:	mov	w9, #0x414e                	// #16718
   1b9b0:	mov	x1, x0
   1b9b4:	cmp	w22, #0x0
   1b9b8:	movk	w8, #0x6e, lsl #16
   1b9bc:	movk	w9, #0x4e, lsl #16
   1b9c0:	b	1ba0c <mpfr_vasnprintf_aux@@Base+0x1850>
   1b9c4:	ldr	w8, [x19]
   1b9c8:	cmp	w8, #0x1
   1b9cc:	b.ne	1b9d4 <mpfr_vasnprintf_aux@@Base+0x1818>  // b.any
   1b9d0:	str	wzr, [x19]
   1b9d4:	ldr	w8, [x21, #8]
   1b9d8:	tbz	w8, #31, 1b9e4 <mpfr_vasnprintf_aux@@Base+0x1828>
   1b9dc:	mov	w8, #0x2d                  	// #45
   1b9e0:	strb	w8, [x19, #16]
   1b9e4:	mov	w8, #0x3                   	// #3
   1b9e8:	mov	w0, #0x4                   	// #4
   1b9ec:	str	x8, [x19, #56]
   1b9f0:	bl	d1f0 <mpfr_allocate_func@plt>
   1b9f4:	mov	w8, #0x6275                	// #25205
   1b9f8:	mov	w9, #0x4255                	// #16981
   1b9fc:	mov	x1, x0
   1ba00:	cmp	w22, #0x0
   1ba04:	movk	w8, #0x66, lsl #16
   1ba08:	movk	w9, #0x46, lsl #16
   1ba0c:	csel	w8, w9, w8, ne  // ne = any
   1ba10:	b	1ba68 <mpfr_vasnprintf_aux@@Base+0x18ac>
   1ba14:	ldr	w8, [x19]
   1ba18:	cmp	w8, #0x1
   1ba1c:	b.ne	1ba24 <mpfr_vasnprintf_aux@@Base+0x1868>  // b.any
   1ba20:	str	wzr, [x19]
   1ba24:	ldr	w8, [x21, #8]
   1ba28:	tbz	w8, #31, 1ba34 <mpfr_vasnprintf_aux@@Base+0x1878>
   1ba2c:	mov	w8, #0x2d                  	// #45
   1ba30:	strb	w8, [x19, #16]
   1ba34:	mov	w8, #0x3                   	// #3
   1ba38:	mov	w0, #0x4                   	// #4
   1ba3c:	str	x8, [x19, #56]
   1ba40:	bl	d1f0 <mpfr_allocate_func@plt>
   1ba44:	mov	w8, #0x4255                	// #16981
   1ba48:	mov	w9, #0x6275                	// #25205
   1ba4c:	movk	w8, #0x46, lsl #16
   1ba50:	movk	w9, #0x66, lsl #16
   1ba54:	add	w8, w8, #0xbf4
   1ba58:	add	w9, w9, #0xbf4
   1ba5c:	cmp	w22, #0x0
   1ba60:	mov	x1, x0
   1ba64:	csel	w8, w8, w9, ne  // ne = any
   1ba68:	str	w8, [x0]
   1ba6c:	ldr	x0, [x19, #120]
   1ba70:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1ba74:	str	x0, [x19, #48]
   1ba78:	b	1b89c <mpfr_vasnprintf_aux@@Base+0x16e0>
   1ba7c:	ldr	w8, [x21, #8]
   1ba80:	tbnz	w8, #31, 1baa8 <mpfr_vasnprintf_aux@@Base+0x18ec>
   1ba84:	ldrb	w8, [x20]
   1ba88:	mov	w10, #0xa                   	// #10
   1ba8c:	tst	w8, w10
   1ba90:	b.eq	1bab0 <mpfr_vasnprintf_aux@@Base+0x18f4>  // b.none
   1ba94:	tst	w8, #0x8
   1ba98:	mov	w8, #0x2b                  	// #43
   1ba9c:	mov	w10, #0x20                  	// #32
   1baa0:	csel	w8, w10, w8, eq  // eq = none
   1baa4:	b	1baac <mpfr_vasnprintf_aux@@Base+0x18f0>
   1baa8:	mov	w8, #0x2d                  	// #45
   1baac:	strb	w8, [x19, #16]
   1bab0:	orr	w8, w9, #0x20
   1bab4:	cmp	w8, #0x61
   1bab8:	b.ne	1bafc <mpfr_vasnprintf_aux@@Base+0x1940>  // b.any
   1babc:	mov	w8, #0x2                   	// #2
   1bac0:	mov	w0, #0x3                   	// #3
   1bac4:	str	x8, [x19, #32]
   1bac8:	bl	d1f0 <mpfr_allocate_func@plt>
   1bacc:	mov	w8, #0x30                  	// #48
   1bad0:	cmp	w22, #0x0
   1bad4:	mov	w9, #0x78                  	// #120
   1bad8:	mov	w10, #0x58                  	// #88
   1badc:	strb	w8, [x0]
   1bae0:	csel	w8, w10, w9, ne  // ne = any
   1bae4:	strb	w8, [x0, #1]
   1bae8:	strb	wzr, [x0, #2]
   1baec:	mov	x1, x0
   1baf0:	ldr	x0, [x19, #120]
   1baf4:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1baf8:	str	x0, [x19, #24]
   1bafc:	mov	w8, #0x1                   	// #1
   1bb00:	mov	w0, #0x2                   	// #2
   1bb04:	str	x8, [x19, #56]
   1bb08:	bl	d1f0 <mpfr_allocate_func@plt>
   1bb0c:	mov	w8, #0x30                  	// #48
   1bb10:	strh	w8, [x0]
   1bb14:	mov	x1, x0
   1bb18:	ldr	x0, [x19, #120]
   1bb1c:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1bb20:	str	x0, [x19, #48]
   1bb24:	ldr	w8, [x20, #8]
   1bb28:	cmp	w8, #0x1
   1bb2c:	b.lt	1bb48 <mpfr_vasnprintf_aux@@Base+0x198c>  // b.tstop
   1bb30:	ldrb	w8, [x20, #32]
   1bb34:	orr	w8, w8, #0x20
   1bb38:	cmp	w8, #0x67
   1bb3c:	b.ne	1bb68 <mpfr_vasnprintf_aux@@Base+0x19ac>  // b.any
   1bb40:	ldrb	w8, [x20]
   1bb44:	tbnz	w8, #0, 1bb68 <mpfr_vasnprintf_aux@@Base+0x19ac>
   1bb48:	ldrb	w8, [x20]
   1bb4c:	tbz	w8, #0, 1bbcc <mpfr_vasnprintf_aux@@Base+0x1a10>
   1bb50:	bl	c300 <localeconv@plt>
   1bb54:	ldr	x8, [x0]
   1bb58:	ldrb	w8, [x8, #1]
   1bb5c:	cbz	w8, 1bbbc <mpfr_vasnprintf_aux@@Base+0x1a00>
   1bb60:	mov	w8, #0x2e                  	// #46
   1bb64:	b	1bbc8 <mpfr_vasnprintf_aux@@Base+0x1a0c>
   1bb68:	bl	c300 <localeconv@plt>
   1bb6c:	ldr	x8, [x0]
   1bb70:	ldrb	w8, [x8, #1]
   1bb74:	cbz	w8, 1bb80 <mpfr_vasnprintf_aux@@Base+0x19c4>
   1bb78:	mov	w8, #0x2e                  	// #46
   1bb7c:	b	1bb8c <mpfr_vasnprintf_aux@@Base+0x19d0>
   1bb80:	bl	c300 <localeconv@plt>
   1bb84:	ldr	x8, [x0]
   1bb88:	ldrb	w8, [x8]
   1bb8c:	strb	w8, [x19, #68]
   1bb90:	ldrb	w8, [x20, #32]
   1bb94:	orr	w8, w8, #0x20
   1bb98:	cmp	w8, #0x67
   1bb9c:	b.ne	1bbb0 <mpfr_vasnprintf_aux@@Base+0x19f4>  // b.any
   1bba0:	ldr	w8, [x20, #8]
   1bba4:	sub	w8, w8, #0x1
   1bba8:	str	w8, [x19, #96]
   1bbac:	b	1bbcc <mpfr_vasnprintf_aux@@Base+0x1a10>
   1bbb0:	ldr	w8, [x20, #8]
   1bbb4:	str	w8, [x19, #96]
   1bbb8:	b	1bbcc <mpfr_vasnprintf_aux@@Base+0x1a10>
   1bbbc:	bl	c300 <localeconv@plt>
   1bbc0:	ldr	x8, [x0]
   1bbc4:	ldrb	w8, [x8]
   1bbc8:	strb	w8, [x19, #68]
   1bbcc:	ldrb	w8, [x20, #32]
   1bbd0:	sub	w9, w8, #0x41
   1bbd4:	cmp	w9, #0x24
   1bbd8:	b.hi	1b89c <mpfr_vasnprintf_aux@@Base+0x16e0>  // b.pmore
   1bbdc:	mov	w10, #0x1                   	// #1
   1bbe0:	lsl	x9, x10, x9
   1bbe4:	mov	x10, #0x11                  	// #17
   1bbe8:	movk	x10, #0x13, lsl #32
   1bbec:	tst	x9, x10
   1bbf0:	b.eq	1b89c <mpfr_vasnprintf_aux@@Base+0x16e0>  // b.none
   1bbf4:	orr	w8, w8, #0x20
   1bbf8:	mov	w9, #0x3                   	// #3
   1bbfc:	cmp	w8, #0x65
   1bc00:	cinc	x8, x9, eq  // eq = none
   1bc04:	add	x0, x8, #0x1
   1bc08:	str	x8, [x19, #112]
   1bc0c:	bl	d1f0 <mpfr_allocate_func@plt>
   1bc10:	ldrb	w8, [x20, #32]
   1bc14:	mov	x1, x0
   1bc18:	orr	w8, w8, #0x20
   1bc1c:	cmp	w8, #0x65
   1bc20:	b.ne	1bc4c <mpfr_vasnprintf_aux@@Base+0x1a90>  // b.any
   1bc24:	adrp	x8, 5b000 <mpfr_free_pool@@Base+0x3854>
   1bc28:	adrp	x9, 5b000 <mpfr_free_pool@@Base+0x3854>
   1bc2c:	add	x8, x8, #0xd50
   1bc30:	add	x9, x9, #0xd4b
   1bc34:	cmp	w22, #0x0
   1bc38:	csel	x8, x9, x8, ne  // ne = any
   1bc3c:	ldrb	w9, [x8, #4]
   1bc40:	ldr	w8, [x8]
   1bc44:	strb	w9, [x1, #4]
   1bc48:	b	1bc60 <mpfr_vasnprintf_aux@@Base+0x1aa4>
   1bc4c:	mov	w8, #0x2b50                	// #11088
   1bc50:	movk	w8, #0x30, lsl #16
   1bc54:	orr	w9, w8, #0x20
   1bc58:	cmp	w22, #0x0
   1bc5c:	csel	w8, w8, w9, ne  // ne = any
   1bc60:	str	w8, [x1]
   1bc64:	ldr	x0, [x19, #120]
   1bc68:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1bc6c:	str	x0, [x19, #104]
   1bc70:	b	1b89c <mpfr_vasnprintf_aux@@Base+0x16e0>
   1bc74:	stp	x29, x30, [sp, #-48]!
   1bc78:	str	x21, [sp, #16]
   1bc7c:	mov	w21, w1
   1bc80:	mov	x1, x2
   1bc84:	stp	x20, x19, [sp, #32]
   1bc88:	mov	x29, sp
   1bc8c:	mov	x19, x2
   1bc90:	mov	x20, x0
   1bc94:	bl	1b54c <mpfr_vasnprintf_aux@@Base+0x1390>
   1bc98:	cbz	w0, 1bca4 <mpfr_vasnprintf_aux@@Base+0x1ae8>
   1bc9c:	mov	w0, #0x1                   	// #1
   1bca0:	b	1bd0c <mpfr_vasnprintf_aux@@Base+0x1b50>
   1bca4:	ldr	x8, [x20, #16]
   1bca8:	cbz	x8, 1bce4 <mpfr_vasnprintf_aux@@Base+0x1b28>
   1bcac:	mvn	x9, x19
   1bcb0:	cmp	x8, x9
   1bcb4:	b.cs	1bd1c <mpfr_vasnprintf_aux@@Base+0x1b60>  // b.hs, b.nlast
   1bcb8:	ldp	x9, x8, [x20]
   1bcbc:	ldr	x10, [x20, #16]
   1bcc0:	add	x8, x8, x19
   1bcc4:	add	x9, x9, x10
   1bcc8:	cmp	x8, x9
   1bccc:	b.cs	1bd38 <mpfr_vasnprintf_aux@@Base+0x1b7c>  // b.hs, b.nlast
   1bcd0:	ldr	x0, [x20, #8]
   1bcd4:	cmp	x19, #0x1
   1bcd8:	b.ne	1bcec <mpfr_vasnprintf_aux@@Base+0x1b30>  // b.any
   1bcdc:	strb	w21, [x0]
   1bce0:	b	1bcf8 <mpfr_vasnprintf_aux@@Base+0x1b3c>
   1bce4:	mov	w0, wzr
   1bce8:	b	1bd0c <mpfr_vasnprintf_aux@@Base+0x1b50>
   1bcec:	mov	w1, w21
   1bcf0:	mov	x2, x19
   1bcf4:	bl	c5b0 <memset@plt>
   1bcf8:	ldr	x8, [x20, #8]
   1bcfc:	mov	w0, wzr
   1bd00:	add	x9, x8, x19
   1bd04:	str	x9, [x20, #8]
   1bd08:	strb	wzr, [x8, x19]
   1bd0c:	ldp	x20, x19, [sp, #32]
   1bd10:	ldr	x21, [sp, #16]
   1bd14:	ldp	x29, x30, [sp], #48
   1bd18:	ret
   1bd1c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1bd20:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1bd24:	add	x0, x0, #0xc8d
   1bd28:	add	x2, x2, #0xd17
   1bd2c:	mov	w1, #0x29a                 	// #666
   1bd30:	bl	d030 <mpfr_assert_fail@plt>
   1bd34:	b	1bcb8 <mpfr_vasnprintf_aux@@Base+0x1afc>
   1bd38:	mov	x0, x20
   1bd3c:	mov	x1, x19
   1bd40:	bl	1b584 <mpfr_vasnprintf_aux@@Base+0x13c8>
   1bd44:	b	1bcd0 <mpfr_vasnprintf_aux@@Base+0x1b14>
   1bd48:	stp	x29, x30, [sp, #-96]!
   1bd4c:	stp	x24, x23, [sp, #48]
   1bd50:	stp	x22, x21, [sp, #64]
   1bd54:	stp	x20, x19, [sp, #80]
   1bd58:	mov	x23, x3
   1bd5c:	mov	x22, x2
   1bd60:	mov	x20, x1
   1bd64:	tst	w4, #0xff
   1bd68:	mov	x19, x0
   1bd6c:	str	x27, [sp, #16]
   1bd70:	stp	x26, x25, [sp, #32]
   1bd74:	mov	x29, sp
   1bd78:	b.eq	1be20 <mpfr_vasnprintf_aux@@Base+0x1c64>  // b.none
   1bd7c:	mvn	x8, x23
   1bd80:	cmp	x8, x22
   1bd84:	b.cc	1be34 <mpfr_vasnprintf_aux@@Base+0x1c78>  // b.lo, b.ul, b.last
   1bd88:	add	x8, x23, x22
   1bd8c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1bd90:	sub	x25, x8, #0x1
   1bd94:	movk	x9, #0xaaab
   1bd98:	umulh	x9, x25, x9
   1bd9c:	lsr	x24, x9, #1
   1bda0:	mvn	x9, x24
   1bda4:	cmp	x8, x9
   1bda8:	b.hi	1be34 <mpfr_vasnprintf_aux@@Base+0x1c78>  // b.pmore
   1bdac:	add	x23, x24, x8
   1bdb0:	mov	x0, x19
   1bdb4:	mov	x1, x23
   1bdb8:	mov	w21, w4
   1bdbc:	bl	1b54c <mpfr_vasnprintf_aux@@Base+0x1390>
   1bdc0:	cbnz	w0, 1be34 <mpfr_vasnprintf_aux@@Base+0x1c78>
   1bdc4:	ldr	x8, [x19, #16]
   1bdc8:	cbz	x8, 1be70 <mpfr_vasnprintf_aux@@Base+0x1cb4>
   1bdcc:	mvn	x9, x23
   1bdd0:	cmp	x8, x9
   1bdd4:	add	x26, x24, x24, lsl #1
   1bdd8:	b.cs	1bf4c <mpfr_vasnprintf_aux@@Base+0x1d90>  // b.hs, b.nlast
   1bddc:	ldp	x9, x8, [x19]
   1bde0:	ldr	x10, [x19, #16]
   1bde4:	sub	x26, x25, x26
   1bde8:	add	x8, x8, x23
   1bdec:	add	x9, x9, x10
   1bdf0:	cmp	x8, x9
   1bdf4:	b.cs	1bf68 <mpfr_vasnprintf_aux@@Base+0x1dac>  // b.hs, b.nlast
   1bdf8:	ldr	x0, [x19, #8]
   1bdfc:	cmp	x26, x22
   1be00:	add	x23, x26, #0x1
   1be04:	mov	x1, x20
   1be08:	b.cs	1be78 <mpfr_vasnprintf_aux@@Base+0x1cbc>  // b.hs, b.nlast
   1be0c:	mov	x2, x23
   1be10:	bl	be50 <memcpy@plt>
   1be14:	add	x20, x20, x23
   1be18:	sub	x22, x22, x23
   1be1c:	b	1be98 <mpfr_vasnprintf_aux@@Base+0x1cdc>
   1be20:	mov	x0, x19
   1be24:	mov	x1, x20
   1be28:	mov	x2, x22
   1be2c:	bl	1b2c8 <mpfr_vasnprintf_aux@@Base+0x110c>
   1be30:	cbz	w0, 1be54 <mpfr_vasnprintf_aux@@Base+0x1c98>
   1be34:	mov	w0, #0x1                   	// #1
   1be38:	ldp	x20, x19, [sp, #80]
   1be3c:	ldp	x22, x21, [sp, #64]
   1be40:	ldp	x24, x23, [sp, #48]
   1be44:	ldp	x26, x25, [sp, #32]
   1be48:	ldr	x27, [sp, #16]
   1be4c:	ldp	x29, x30, [sp], #96
   1be50:	ret
   1be54:	mov	w1, #0x30                  	// #48
   1be58:	mov	x0, x19
   1be5c:	mov	x2, x23
   1be60:	bl	1bc74 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   1be64:	cmp	w0, #0x0
   1be68:	cset	w0, ne  // ne = any
   1be6c:	b	1be38 <mpfr_vasnprintf_aux@@Base+0x1c7c>
   1be70:	mov	w0, wzr
   1be74:	b	1be38 <mpfr_vasnprintf_aux@@Base+0x1c7c>
   1be78:	mov	x2, x22
   1be7c:	bl	be50 <memcpy@plt>
   1be80:	ldr	x8, [x19, #8]
   1be84:	sub	x2, x23, x22
   1be88:	mov	w1, #0x30                  	// #48
   1be8c:	add	x0, x8, x22
   1be90:	bl	c5b0 <memset@plt>
   1be94:	mov	x22, xzr
   1be98:	ldr	x8, [x19, #8]
   1be9c:	cmp	x25, #0x3
   1bea0:	add	x8, x8, x23
   1bea4:	str	x8, [x19, #8]
   1bea8:	b.cc	1bf40 <mpfr_vasnprintf_aux@@Base+0x1d84>  // b.lo, b.ul, b.last
   1beac:	mov	x23, xzr
   1beb0:	mov	w25, #0x30                  	// #48
   1beb4:	mov	w26, #0x3030                	// #12336
   1beb8:	mov	w27, #0x3                   	// #3
   1bebc:	add	x9, x8, #0x1
   1bec0:	str	x9, [x19, #8]
   1bec4:	strb	w21, [x8]
   1bec8:	cbz	x22, 1bf08 <mpfr_vasnprintf_aux@@Base+0x1d4c>
   1becc:	ldr	x0, [x19, #8]
   1bed0:	subs	x8, x22, #0x3
   1bed4:	b.cc	1bf18 <mpfr_vasnprintf_aux@@Base+0x1d5c>  // b.lo, b.ul, b.last
   1bed8:	ldrb	w9, [x20, #2]
   1bedc:	ldrh	w10, [x20], #3
   1bee0:	mov	x22, x8
   1bee4:	strb	w9, [x0, #2]
   1bee8:	strh	w10, [x0]
   1beec:	ldr	x8, [x19, #8]
   1bef0:	add	x23, x23, #0x1
   1bef4:	cmp	x23, x24
   1bef8:	add	x8, x8, #0x3
   1befc:	str	x8, [x19, #8]
   1bf00:	b.cc	1bebc <mpfr_vasnprintf_aux@@Base+0x1d00>  // b.lo, b.ul, b.last
   1bf04:	b	1bf40 <mpfr_vasnprintf_aux@@Base+0x1d84>
   1bf08:	ldr	x8, [x19, #8]
   1bf0c:	strb	w25, [x8, #2]
   1bf10:	strh	w26, [x8]
   1bf14:	b	1beec <mpfr_vasnprintf_aux@@Base+0x1d30>
   1bf18:	mov	x1, x20
   1bf1c:	mov	x2, x22
   1bf20:	bl	be50 <memcpy@plt>
   1bf24:	ldr	x8, [x19, #8]
   1bf28:	sub	x2, x27, x22
   1bf2c:	mov	w1, #0x30                  	// #48
   1bf30:	add	x0, x8, x22
   1bf34:	bl	c5b0 <memset@plt>
   1bf38:	mov	x22, xzr
   1bf3c:	b	1beec <mpfr_vasnprintf_aux@@Base+0x1d30>
   1bf40:	mov	w0, wzr
   1bf44:	strb	wzr, [x8]
   1bf48:	b	1be38 <mpfr_vasnprintf_aux@@Base+0x1c7c>
   1bf4c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1bf50:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1bf54:	add	x0, x0, #0xc8d
   1bf58:	add	x2, x2, #0xdfe
   1bf5c:	mov	w1, #0x2d6                 	// #726
   1bf60:	bl	d030 <mpfr_assert_fail@plt>
   1bf64:	b	1bddc <mpfr_vasnprintf_aux@@Base+0x1c20>
   1bf68:	mov	x0, x19
   1bf6c:	mov	x1, x23
   1bf70:	bl	1b584 <mpfr_vasnprintf_aux@@Base+0x13c8>
   1bf74:	b	1bdf8 <mpfr_vasnprintf_aux@@Base+0x1c3c>
   1bf78:	stp	x29, x30, [sp, #-32]!
   1bf7c:	stp	x20, x19, [sp, #16]
   1bf80:	mov	x29, sp
   1bf84:	cbz	x0, 1bfb8 <mpfr_vasnprintf_aux@@Base+0x1dfc>
   1bf88:	mov	x19, x0
   1bf8c:	b	1bfa8 <mpfr_vasnprintf_aux@@Base+0x1dec>
   1bf90:	ldr	x20, [x19, #8]
   1bf94:	mov	w1, #0x10                  	// #16
   1bf98:	mov	x0, x19
   1bf9c:	bl	d120 <mpfr_free_func@plt>
   1bfa0:	mov	x19, x20
   1bfa4:	cbz	x20, 1bfb8 <mpfr_vasnprintf_aux@@Base+0x1dfc>
   1bfa8:	ldr	x0, [x19]
   1bfac:	cbz	x0, 1bf90 <mpfr_vasnprintf_aux@@Base+0x1dd4>
   1bfb0:	bl	cd70 <mpfr_free_str@plt>
   1bfb4:	b	1bf90 <mpfr_vasnprintf_aux@@Base+0x1dd4>
   1bfb8:	ldp	x20, x19, [sp, #16]
   1bfbc:	ldp	x29, x30, [sp], #32
   1bfc0:	ret
   1bfc4:	stp	xzr, xzr, [x0]
   1bfc8:	ret
   1bfcc:	stp	x29, x30, [sp, #-32]!
   1bfd0:	stp	x20, x19, [sp, #16]
   1bfd4:	mov	x19, x1
   1bfd8:	mov	x29, sp
   1bfdc:	mov	x20, x0
   1bfe0:	ldr	x0, [x0, #8]
   1bfe4:	cbnz	x0, 1bfdc <mpfr_vasnprintf_aux@@Base+0x1e20>
   1bfe8:	mov	w0, #0x10                  	// #16
   1bfec:	bl	d1f0 <mpfr_allocate_func@plt>
   1bff0:	str	x0, [x20, #8]
   1bff4:	stp	x19, xzr, [x0]
   1bff8:	mov	x0, x19
   1bffc:	ldp	x20, x19, [sp, #16]
   1c000:	ldp	x29, x30, [sp], #32
   1c004:	ret
   1c008:	sub	sp, sp, #0x70
   1c00c:	stp	x29, x30, [sp, #48]
   1c010:	stp	x24, x23, [sp, #64]
   1c014:	stp	x22, x21, [sp, #80]
   1c018:	stp	x20, x19, [sp, #96]
   1c01c:	ldr	w8, [x1, #8]
   1c020:	ldrb	w23, [x2, #32]
   1c024:	mov	x20, x2
   1c028:	mov	x21, x1
   1c02c:	mov	x19, x0
   1c030:	add	x29, sp, #0x30
   1c034:	tbnz	w8, #31, 1c05c <mpfr_vasnprintf_aux@@Base+0x1ea0>
   1c038:	ldrb	w8, [x20]
   1c03c:	mov	w9, #0xa                   	// #10
   1c040:	tst	w8, w9
   1c044:	b.eq	1c064 <mpfr_vasnprintf_aux@@Base+0x1ea8>  // b.none
   1c048:	tst	w8, #0x8
   1c04c:	mov	w8, #0x2b                  	// #43
   1c050:	mov	w9, #0x20                  	// #32
   1c054:	csel	w8, w9, w8, eq  // eq = none
   1c058:	b	1c060 <mpfr_vasnprintf_aux@@Base+0x1ea4>
   1c05c:	mov	w8, #0x2d                  	// #45
   1c060:	strb	w8, [x19, #16]
   1c064:	orr	w8, w23, #0x20
   1c068:	cmp	w8, #0x61
   1c06c:	b.ne	1c0b0 <mpfr_vasnprintf_aux@@Base+0x1ef4>  // b.any
   1c070:	mov	w8, #0x2                   	// #2
   1c074:	mov	w0, #0x3                   	// #3
   1c078:	str	x8, [x19, #32]
   1c07c:	bl	d1f0 <mpfr_allocate_func@plt>
   1c080:	mov	w8, #0x30                  	// #48
   1c084:	cmp	w23, #0x41
   1c088:	mov	w9, #0x78                  	// #120
   1c08c:	mov	w10, #0x58                  	// #88
   1c090:	strb	w8, [x0]
   1c094:	csel	w8, w10, w9, eq  // eq = none
   1c098:	strb	w8, [x0, #1]
   1c09c:	strb	wzr, [x0, #2]
   1c0a0:	mov	x1, x0
   1c0a4:	ldr	x0, [x19, #120]
   1c0a8:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c0ac:	str	x0, [x19, #24]
   1c0b0:	mov	w8, #0x1                   	// #1
   1c0b4:	str	x8, [x19, #56]
   1c0b8:	ldrb	w24, [x20, #32]
   1c0bc:	ldrsw	x8, [x20, #8]
   1c0c0:	mov	w9, #0x10                  	// #16
   1c0c4:	mov	w10, #0x2                   	// #2
   1c0c8:	cmp	w24, #0x62
   1c0cc:	csel	w1, w10, w9, eq  // eq = none
   1c0d0:	cbz	w8, 1c144 <mpfr_vasnprintf_aux@@Base+0x1f88>
   1c0d4:	ldr	x9, [x20, #32]
   1c0d8:	ldp	q0, q1, [x20]
   1c0dc:	cmp	w8, #0x0
   1c0e0:	csinc	x2, xzr, x8, lt  // lt = tstop
   1c0e4:	sub	x0, x29, #0x8
   1c0e8:	mov	x4, sp
   1c0ec:	mov	x3, x21
   1c0f0:	str	x9, [sp, #32]
   1c0f4:	stp	q0, q1, [sp]
   1c0f8:	bl	1ccfc <mpfr_vasnprintf_aux@@Base+0x2b40>
   1c0fc:	ldr	x8, [x19, #120]
   1c100:	mov	x22, x0
   1c104:	mov	x1, x22
   1c108:	mov	x0, x8
   1c10c:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c110:	ldr	w8, [x21, #8]
   1c114:	cmp	w8, #0x0
   1c118:	cinc	x22, x22, lt  // lt = tstop
   1c11c:	str	x22, [x19, #48]
   1c120:	ldur	x8, [x29, #-8]
   1c124:	cmp	w24, #0x62
   1c128:	b.ne	1c184 <mpfr_vasnprintf_aux@@Base+0x1fc8>  // b.any
   1c12c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   1c130:	cmp	x8, x9
   1c134:	b.eq	1c460 <mpfr_vasnprintf_aux@@Base+0x22a4>  // b.none
   1c138:	ldur	x8, [x29, #-8]
   1c13c:	sub	x8, x8, #0x1
   1c140:	b	1c19c <mpfr_vasnprintf_aux@@Base+0x1fe0>
   1c144:	ldr	w22, [x20, #28]
   1c148:	mov	x0, x21
   1c14c:	mov	w2, w22
   1c150:	bl	1ce30 <mpfr_vasnprintf_aux@@Base+0x2c74>
   1c154:	cbz	w0, 1c38c <mpfr_vasnprintf_aux@@Base+0x21d0>
   1c158:	mov	w0, #0x2                   	// #2
   1c15c:	bl	d1f0 <mpfr_allocate_func@plt>
   1c160:	mov	w8, #0x31                  	// #49
   1c164:	strh	w8, [x0]
   1c168:	mov	x22, x0
   1c16c:	ldr	x0, [x19, #120]
   1c170:	mov	x1, x22
   1c174:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c178:	str	x0, [x19, #48]
   1c17c:	ldr	x8, [x21, #16]
   1c180:	b	1c19c <mpfr_vasnprintf_aux@@Base+0x1fe0>
   1c184:	mov	x9, #0xe000000000000001    	// #-2305843009213693951
   1c188:	cmp	x8, x9
   1c18c:	b.le	1c47c <mpfr_vasnprintf_aux@@Base+0x22c0>
   1c190:	ldur	x8, [x29, #-8]
   1c194:	lsl	x8, x8, #2
   1c198:	sub	x8, x8, #0x4
   1c19c:	cmp	w23, #0x41
   1c1a0:	stur	x8, [x29, #-8]
   1c1a4:	b.ne	1c210 <mpfr_vasnprintf_aux@@Base+0x2054>  // b.any
   1c1a8:	adrp	x8, 5b000 <mpfr_free_pool@@Base+0x3854>
   1c1ac:	add	x8, x8, #0xc7d
   1c1b0:	mov	x9, x22
   1c1b4:	b	1c1c4 <mpfr_vasnprintf_aux@@Base+0x2008>
   1c1b8:	mov	w10, #0x46                  	// #70
   1c1bc:	strb	w10, [x9]
   1c1c0:	add	x9, x9, #0x1
   1c1c4:	ldrb	w11, [x9]
   1c1c8:	sub	w10, w11, #0x61
   1c1cc:	cmp	w10, #0x5
   1c1d0:	b.hi	1c1f0 <mpfr_vasnprintf_aux@@Base+0x2034>  // b.pmore
   1c1d4:	adr	x11, 1c1b8 <mpfr_vasnprintf_aux@@Base+0x1ffc>
   1c1d8:	ldrb	w12, [x8, x10]
   1c1dc:	add	x11, x11, x12, lsl #2
   1c1e0:	mov	w10, #0x41                  	// #65
   1c1e4:	br	x11
   1c1e8:	mov	w10, #0x42                  	// #66
   1c1ec:	b	1c1bc <mpfr_vasnprintf_aux@@Base+0x2000>
   1c1f0:	cbnz	w11, 1c1c0 <mpfr_vasnprintf_aux@@Base+0x2004>
   1c1f4:	b	1c210 <mpfr_vasnprintf_aux@@Base+0x2054>
   1c1f8:	mov	w10, #0x43                  	// #67
   1c1fc:	b	1c1bc <mpfr_vasnprintf_aux@@Base+0x2000>
   1c200:	mov	w10, #0x44                  	// #68
   1c204:	b	1c1bc <mpfr_vasnprintf_aux@@Base+0x2000>
   1c208:	mov	w10, #0x45                  	// #69
   1c20c:	b	1c1bc <mpfr_vasnprintf_aux@@Base+0x2000>
   1c210:	ldrb	w8, [x20, #32]
   1c214:	cmp	w8, #0x62
   1c218:	b.eq	1c224 <mpfr_vasnprintf_aux@@Base+0x2068>  // b.none
   1c21c:	ldr	w8, [x20, #8]
   1c220:	cbz	w8, 1c280 <mpfr_vasnprintf_aux@@Base+0x20c4>
   1c224:	add	x21, x22, #0x1
   1c228:	mov	x0, x21
   1c22c:	bl	bf00 <strlen@plt>
   1c230:	ldr	w8, [x20, #8]
   1c234:	tbnz	w8, #31, 1c248 <mpfr_vasnprintf_aux@@Base+0x208c>
   1c238:	lsr	x9, x0, #31
   1c23c:	cbz	x9, 1c26c <mpfr_vasnprintf_aux@@Base+0x20b0>
   1c240:	mov	w0, #0xffffffff            	// #-1
   1c244:	b	1c374 <mpfr_vasnprintf_aux@@Base+0x21b8>
   1c248:	subs	x9, x0, #0x1
   1c24c:	b.cc	1c260 <mpfr_vasnprintf_aux@@Base+0x20a4>  // b.lo, b.ul, b.last
   1c250:	ldrb	w10, [x22, x0]
   1c254:	mov	x0, x9
   1c258:	cmp	w10, #0x30
   1c25c:	b.eq	1c248 <mpfr_vasnprintf_aux@@Base+0x208c>  // b.none
   1c260:	add	x0, x9, #0x1
   1c264:	lsr	x9, x0, #31
   1c268:	cbnz	x9, 1c240 <mpfr_vasnprintf_aux@@Base+0x2084>
   1c26c:	cbz	x0, 1c280 <mpfr_vasnprintf_aux@@Base+0x20c4>
   1c270:	subs	w8, w8, w0
   1c274:	stp	x21, x0, [x19, #80]
   1c278:	b.le	1c280 <mpfr_vasnprintf_aux@@Base+0x20c4>
   1c27c:	str	w8, [x19, #96]
   1c280:	ldr	x8, [x19, #88]
   1c284:	cbnz	x8, 1c290 <mpfr_vasnprintf_aux@@Base+0x20d4>
   1c288:	ldrb	w8, [x20]
   1c28c:	tbz	w8, #0, 1c2b8 <mpfr_vasnprintf_aux@@Base+0x20fc>
   1c290:	bl	c300 <localeconv@plt>
   1c294:	ldr	x8, [x0]
   1c298:	ldrb	w8, [x8, #1]
   1c29c:	cbz	w8, 1c2a8 <mpfr_vasnprintf_aux@@Base+0x20ec>
   1c2a0:	mov	w8, #0x2e                  	// #46
   1c2a4:	b	1c2b4 <mpfr_vasnprintf_aux@@Base+0x20f8>
   1c2a8:	bl	c300 <localeconv@plt>
   1c2ac:	ldr	x8, [x0]
   1c2b0:	ldrb	w8, [x8]
   1c2b4:	strb	w8, [x19, #68]
   1c2b8:	mov	w8, #0x3                   	// #3
   1c2bc:	str	x8, [x19, #112]
   1c2c0:	ldur	x8, [x29, #-8]
   1c2c4:	cmp	x8, #0x0
   1c2c8:	cneg	x8, x8, mi  // mi = first
   1c2cc:	cmp	x8, #0xa
   1c2d0:	b.cc	1c300 <mpfr_vasnprintf_aux@@Base+0x2144>  // b.lo, b.ul, b.last
   1c2d4:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   1c2d8:	mov	w9, #0x3                   	// #3
   1c2dc:	movk	x10, #0xcccd
   1c2e0:	umulh	x11, x8, x10
   1c2e4:	cmp	x8, #0x63
   1c2e8:	lsr	x8, x11, #3
   1c2ec:	add	x9, x9, #0x1
   1c2f0:	b.hi	1c2e0 <mpfr_vasnprintf_aux@@Base+0x2124>  // b.pmore
   1c2f4:	add	x0, x9, #0x1
   1c2f8:	str	x9, [x19, #112]
   1c2fc:	b	1c304 <mpfr_vasnprintf_aux@@Base+0x2148>
   1c300:	mov	w0, #0x4                   	// #4
   1c304:	bl	d1f0 <mpfr_allocate_func@plt>
   1c308:	ldr	x8, [x19, #120]
   1c30c:	mov	x20, x0
   1c310:	mov	x1, x20
   1c314:	mov	x0, x8
   1c318:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c31c:	cmp	w23, #0x41
   1c320:	mov	w8, #0x70                  	// #112
   1c324:	mov	w9, #0x50                  	// #80
   1c328:	str	x0, [x19, #104]
   1c32c:	csel	w8, w9, w8, eq  // eq = none
   1c330:	mov	x0, sp
   1c334:	strb	w8, [sp]
   1c338:	strb	wzr, [sp, #1]
   1c33c:	mov	x19, sp
   1c340:	bl	bf00 <strlen@plt>
   1c344:	mov	w9, #0x2b25                	// #11045
   1c348:	ldur	x2, [x29, #-8]
   1c34c:	add	x8, x19, x0
   1c350:	movk	w9, #0x312e, lsl #16
   1c354:	str	w9, [x8]
   1c358:	mov	w9, #0x6c31                	// #27697
   1c35c:	movk	w9, #0x64, lsl #16
   1c360:	mov	x1, sp
   1c364:	mov	x0, x20
   1c368:	stur	w9, [x8, #3]
   1c36c:	bl	c170 <sprintf@plt>
   1c370:	asr	w0, w0, #31
   1c374:	ldp	x20, x19, [sp, #96]
   1c378:	ldp	x22, x21, [sp, #80]
   1c37c:	ldp	x24, x23, [sp, #64]
   1c380:	ldp	x29, x30, [sp, #48]
   1c384:	add	sp, sp, #0x70
   1c388:	ret
   1c38c:	cmp	w24, #0x62
   1c390:	b.ne	1c3c4 <mpfr_vasnprintf_aux@@Base+0x2208>  // b.any
   1c394:	mov	w0, #0x2                   	// #2
   1c398:	bl	d1f0 <mpfr_allocate_func@plt>
   1c39c:	mov	w8, #0x31                  	// #49
   1c3a0:	strh	w8, [x0]
   1c3a4:	mov	x22, x0
   1c3a8:	ldr	x0, [x19, #120]
   1c3ac:	mov	x1, x22
   1c3b0:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c3b4:	str	x0, [x19, #48]
   1c3b8:	ldr	x8, [x21, #16]
   1c3bc:	sub	x8, x8, #0x1
   1c3c0:	b	1c19c <mpfr_vasnprintf_aux@@Base+0x1fe0>
   1c3c4:	ldr	x8, [x21]
   1c3c8:	ldr	x9, [x21, #24]
   1c3cc:	sub	x10, x8, #0x1
   1c3d0:	add	x8, x8, #0x3e
   1c3d4:	cmp	x10, #0x0
   1c3d8:	csel	x8, x8, x10, lt  // lt = tstop
   1c3dc:	asr	x8, x8, #6
   1c3e0:	ldr	x8, [x9, x8, lsl #3]
   1c3e4:	cmp	w22, #0x4
   1c3e8:	lsr	x24, x8, #60
   1c3ec:	b.eq	1c424 <mpfr_vasnprintf_aux@@Base+0x2268>  // b.none
   1c3f0:	cmp	w22, #0x3
   1c3f4:	b.eq	1c414 <mpfr_vasnprintf_aux@@Base+0x2258>  // b.none
   1c3f8:	cmp	w22, #0x2
   1c3fc:	b.ne	1c41c <mpfr_vasnprintf_aux@@Base+0x2260>  // b.any
   1c400:	ldr	w9, [x21, #8]
   1c404:	cmp	w9, #0x0
   1c408:	b.gt	1c424 <mpfr_vasnprintf_aux@@Base+0x2268>
   1c40c:	cmp	w22, #0x3
   1c410:	b.ne	1c41c <mpfr_vasnprintf_aux@@Base+0x2260>  // b.any
   1c414:	ldr	w9, [x21, #8]
   1c418:	tbnz	w9, #31, 1c424 <mpfr_vasnprintf_aux@@Base+0x2268>
   1c41c:	cbnz	w22, 1c428 <mpfr_vasnprintf_aux@@Base+0x226c>
   1c420:	tbz	x8, #59, 1c428 <mpfr_vasnprintf_aux@@Base+0x226c>
   1c424:	add	x24, x24, #0x1
   1c428:	mov	w0, #0x2                   	// #2
   1c42c:	bl	d1f0 <mpfr_allocate_func@plt>
   1c430:	adrp	x8, 5b000 <mpfr_free_pool@@Base+0x3854>
   1c434:	add	x8, x8, #0xda7
   1c438:	ldrb	w8, [x8, x24]
   1c43c:	strb	wzr, [x0, #1]
   1c440:	mov	x22, x0
   1c444:	mov	x1, x22
   1c448:	strb	w8, [x0]
   1c44c:	ldr	x0, [x19, #120]
   1c450:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c454:	str	x0, [x19, #48]
   1c458:	ldr	x8, [x21, #16]
   1c45c:	b	1c198 <mpfr_vasnprintf_aux@@Base+0x1fdc>
   1c460:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1c464:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1c468:	add	x0, x0, #0xc8d
   1c46c:	add	x2, x2, #0xd83
   1c470:	mov	w1, #0x428                 	// #1064
   1c474:	bl	d030 <mpfr_assert_fail@plt>
   1c478:	b	1c138 <mpfr_vasnprintf_aux@@Base+0x1f7c>
   1c47c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1c480:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1c484:	add	x0, x0, #0xc8d
   1c488:	add	x2, x2, #0xd55
   1c48c:	mov	w1, #0x41f                 	// #1055
   1c490:	bl	d030 <mpfr_assert_fail@plt>
   1c494:	b	1c190 <mpfr_vasnprintf_aux@@Base+0x1fd4>
   1c498:	sub	sp, sp, #0x80
   1c49c:	stp	x29, x30, [sp, #48]
   1c4a0:	stp	x24, x23, [sp, #80]
   1c4a4:	stp	x22, x21, [sp, #96]
   1c4a8:	stp	x20, x19, [sp, #112]
   1c4ac:	ldrb	w8, [x2, #32]
   1c4b0:	mov	x22, x3
   1c4b4:	mov	x20, x2
   1c4b8:	mov	x21, x1
   1c4bc:	orr	w24, w8, #0x20
   1c4c0:	and	w8, w24, #0xff
   1c4c4:	cmp	w8, #0x67
   1c4c8:	mov	x19, x0
   1c4cc:	str	x25, [sp, #64]
   1c4d0:	add	x29, sp, #0x30
   1c4d4:	b.ne	1c50c <mpfr_vasnprintf_aux@@Base+0x2350>  // b.any
   1c4d8:	ldrb	w8, [x20]
   1c4dc:	and	w23, w8, #0x1
   1c4e0:	ldr	w8, [x21, #8]
   1c4e4:	tbnz	w8, #31, 1c518 <mpfr_vasnprintf_aux@@Base+0x235c>
   1c4e8:	ldrb	w8, [x20]
   1c4ec:	mov	w9, #0xa                   	// #10
   1c4f0:	tst	w8, w9
   1c4f4:	b.eq	1c520 <mpfr_vasnprintf_aux@@Base+0x2364>  // b.none
   1c4f8:	tst	w8, #0x8
   1c4fc:	mov	w8, #0x2b                  	// #43
   1c500:	mov	w9, #0x20                  	// #32
   1c504:	csel	w8, w9, w8, eq  // eq = none
   1c508:	b	1c51c <mpfr_vasnprintf_aux@@Base+0x2360>
   1c50c:	mov	w23, #0x1                   	// #1
   1c510:	ldr	w8, [x21, #8]
   1c514:	tbz	w8, #31, 1c4e8 <mpfr_vasnprintf_aux@@Base+0x232c>
   1c518:	mov	w8, #0x2d                  	// #45
   1c51c:	strb	w8, [x19, #16]
   1c520:	ldr	x8, [x21, #16]
   1c524:	cmp	x8, #0x0
   1c528:	b.le	1c554 <mpfr_vasnprintf_aux@@Base+0x2398>
   1c52c:	mov	x0, x21
   1c530:	bl	1ced4 <mpfr_vasnprintf_aux@@Base+0x2d18>
   1c534:	mov	w8, #0x7fffffff            	// #2147483647
   1c538:	cmp	x0, x8
   1c53c:	str	x0, [x29, #24]
   1c540:	b.gt	1c830 <mpfr_vasnprintf_aux@@Base+0x2674>
   1c544:	cbz	x22, 1c62c <mpfr_vasnprintf_aux@@Base+0x2470>
   1c548:	ldp	x8, x22, [x22]
   1c54c:	str	x8, [x29, #24]
   1c550:	b	1c670 <mpfr_vasnprintf_aux@@Base+0x24b4>
   1c554:	mov	w25, #0x1                   	// #1
   1c558:	mov	w0, #0x2                   	// #2
   1c55c:	str	x25, [x19, #56]
   1c560:	bl	d1f0 <mpfr_allocate_func@plt>
   1c564:	mov	w8, #0x30                  	// #48
   1c568:	strh	w8, [x0]
   1c56c:	mov	x1, x0
   1c570:	ldr	x0, [x19, #120]
   1c574:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c578:	str	x0, [x19, #48]
   1c57c:	ldr	w8, [x20, #8]
   1c580:	cbz	w8, 1c5d4 <mpfr_vasnprintf_aux@@Base+0x2418>
   1c584:	mov	x0, x21
   1c588:	bl	1ced4 <mpfr_vasnprintf_aux@@Base+0x2d18>
   1c58c:	str	x0, [x29, #24]
   1c590:	ldrsw	x8, [x20, #8]
   1c594:	neg	x9, x8
   1c598:	cmp	x0, x9
   1c59c:	b.ge	1c6d8 <mpfr_vasnprintf_aux@@Base+0x251c>  // b.tcont
   1c5a0:	ldr	w8, [x20, #28]
   1c5a4:	sub	w9, w8, #0x1
   1c5a8:	cmp	w9, #0x4
   1c5ac:	b.hi	1c8f0 <mpfr_vasnprintf_aux@@Base+0x2734>  // b.pmore
   1c5b0:	adrp	x8, 5b000 <mpfr_free_pool@@Base+0x3854>
   1c5b4:	add	x8, x8, #0xc83
   1c5b8:	adr	x10, 1c5cc <mpfr_vasnprintf_aux@@Base+0x2410>
   1c5bc:	ldrb	w11, [x8, x9]
   1c5c0:	add	x10, x10, x11, lsl #2
   1c5c4:	mov	w22, #0x1                   	// #1
   1c5c8:	br	x10
   1c5cc:	mov	w22, wzr
   1c5d0:	b	1c998 <mpfr_vasnprintf_aux@@Base+0x27dc>
   1c5d4:	ldr	x8, [x21]
   1c5d8:	str	w25, [sp, #8]
   1c5dc:	str	x8, [sp]
   1c5e0:	ldr	x8, [x21, #16]
   1c5e4:	str	x8, [sp, #16]
   1c5e8:	ldr	x8, [x21, #24]
   1c5ec:	str	x8, [sp, #24]
   1c5f0:	ldr	w8, [x20, #28]
   1c5f4:	cmp	w8, #0x4
   1c5f8:	b.hi	1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>  // b.pmore
   1c5fc:	adrp	x9, 5b000 <mpfr_free_pool@@Base+0x3854>
   1c600:	add	x9, x9, #0xc88
   1c604:	adr	x10, 1c614 <mpfr_vasnprintf_aux@@Base+0x2458>
   1c608:	ldrb	w11, [x9, x8]
   1c60c:	add	x10, x10, x11, lsl #2
   1c610:	br	x10
   1c614:	fmov	d0, #5.000000000000000000e-01
   1c618:	mov	x0, sp
   1c61c:	bl	c150 <mpfr_cmp_d@plt>
   1c620:	cmp	w0, #0x1
   1c624:	b.ge	1c8b0 <mpfr_vasnprintf_aux@@Base+0x26f4>  // b.tcont
   1c628:	b	1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>
   1c62c:	ldrsw	x8, [x20, #8]
   1c630:	ldr	x9, [x20, #32]
   1c634:	ldp	q0, q1, [x20]
   1c638:	mov	x4, sp
   1c63c:	add	x8, x0, x8
   1c640:	add	x2, x8, #0x1
   1c644:	add	x0, x29, #0x18
   1c648:	mov	w1, #0xa                   	// #10
   1c64c:	mov	x3, x21
   1c650:	str	x9, [sp, #32]
   1c654:	stp	q0, q1, [sp]
   1c658:	bl	1ccfc <mpfr_vasnprintf_aux@@Base+0x2b40>
   1c65c:	ldr	x8, [x19, #120]
   1c660:	mov	x22, x0
   1c664:	mov	x1, x22
   1c668:	mov	x0, x8
   1c66c:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c670:	ldr	w8, [x21, #8]
   1c674:	cmp	w8, #0x0
   1c678:	cinc	x21, x22, lt  // lt = tstop
   1c67c:	mov	x0, x21
   1c680:	str	x21, [x19, #48]
   1c684:	bl	bf00 <strlen@plt>
   1c688:	ldr	x8, [x29, #24]
   1c68c:	mov	x22, x0
   1c690:	cmp	x8, x0
   1c694:	b.ls	1c6a4 <mpfr_vasnprintf_aux@@Base+0x24e8>  // b.plast
   1c698:	sub	w8, w8, w22
   1c69c:	str	w8, [x19, #64]
   1c6a0:	mov	x8, x22
   1c6a4:	str	x8, [x19, #56]
   1c6a8:	ldrb	w8, [x20]
   1c6ac:	tbz	w8, #4, 1c7f8 <mpfr_vasnprintf_aux@@Base+0x263c>
   1c6b0:	bl	c300 <localeconv@plt>
   1c6b4:	ldr	x8, [x0, #8]
   1c6b8:	ldrb	w8, [x8]
   1c6bc:	cbz	w8, 1c7f4 <mpfr_vasnprintf_aux@@Base+0x2638>
   1c6c0:	bl	c300 <localeconv@plt>
   1c6c4:	ldr	x8, [x0, #8]
   1c6c8:	ldrb	w8, [x8, #1]
   1c6cc:	cbz	w8, 1c7e8 <mpfr_vasnprintf_aux@@Base+0x262c>
   1c6d0:	mov	w8, wzr
   1c6d4:	b	1c7f4 <mpfr_vasnprintf_aux@@Base+0x2638>
   1c6d8:	cbz	x22, 1c6e8 <mpfr_vasnprintf_aux@@Base+0x252c>
   1c6dc:	ldp	x8, x22, [x22]
   1c6e0:	str	x8, [x29, #24]
   1c6e4:	b	1c728 <mpfr_vasnprintf_aux@@Base+0x256c>
   1c6e8:	ldr	x9, [x20, #32]
   1c6ec:	ldp	q0, q1, [x20]
   1c6f0:	add	x8, x0, x8
   1c6f4:	add	x2, x8, #0x1
   1c6f8:	add	x0, x29, #0x18
   1c6fc:	mov	x4, sp
   1c700:	mov	w1, #0xa                   	// #10
   1c704:	mov	x3, x21
   1c708:	str	x9, [sp, #32]
   1c70c:	stp	q0, q1, [sp]
   1c710:	bl	1ccfc <mpfr_vasnprintf_aux@@Base+0x2b40>
   1c714:	ldr	x8, [x19, #120]
   1c718:	mov	x22, x0
   1c71c:	mov	x1, x22
   1c720:	mov	x0, x8
   1c724:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c728:	ldr	w8, [x21, #8]
   1c72c:	ldr	x25, [x29, #24]
   1c730:	cmp	w8, #0x0
   1c734:	cinc	x21, x22, lt  // lt = tstop
   1c738:	cmp	x25, #0x1
   1c73c:	b.ne	1c768 <mpfr_vasnprintf_aux@@Base+0x25ac>  // b.any
   1c740:	ldr	x8, [x19, #48]
   1c744:	and	w9, w24, #0xff
   1c748:	mov	w10, #0x31                  	// #49
   1c74c:	cmp	w9, #0x67
   1c750:	strb	w10, [x8]
   1c754:	b.ne	1c760 <mpfr_vasnprintf_aux@@Base+0x25a4>  // b.any
   1c758:	ldrb	w8, [x20]
   1c75c:	tbz	w8, #0, 1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>
   1c760:	ldr	w8, [x20, #8]
   1c764:	b	1c9d4 <mpfr_vasnprintf_aux@@Base+0x2818>
   1c768:	neg	w22, w25
   1c76c:	mov	x0, x21
   1c770:	str	x21, [x19, #80]
   1c774:	str	w22, [x19, #72]
   1c778:	bl	bf00 <strlen@plt>
   1c77c:	tbnz	w23, #0, 1c7a0 <mpfr_vasnprintf_aux@@Base+0x25e4>
   1c780:	sub	x8, x21, #0x1
   1c784:	subs	x9, x0, #0x1
   1c788:	b.cc	1c79c <mpfr_vasnprintf_aux@@Base+0x25e0>  // b.lo, b.ul, b.last
   1c78c:	ldrb	w10, [x8, x0]
   1c790:	mov	x0, x9
   1c794:	cmp	w10, #0x30
   1c798:	b.eq	1c784 <mpfr_vasnprintf_aux@@Base+0x25c8>  // b.none
   1c79c:	add	x0, x9, #0x1
   1c7a0:	lsr	x8, x0, #31
   1c7a4:	cbnz	x8, 1c830 <mpfr_vasnprintf_aux@@Base+0x2674>
   1c7a8:	and	w8, w24, #0xff
   1c7ac:	cmp	w8, #0x67
   1c7b0:	str	x0, [x19, #88]
   1c7b4:	b.ne	1c7c0 <mpfr_vasnprintf_aux@@Base+0x2604>  // b.any
   1c7b8:	ldrb	w8, [x20]
   1c7bc:	tbz	w8, #0, 1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>
   1c7c0:	ldrsw	x8, [x20, #8]
   1c7c4:	cmp	w8, #0x1
   1c7c8:	b.lt	1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>  // b.tstop
   1c7cc:	add	x9, x0, w22, sxtw
   1c7d0:	cmp	x9, x8
   1c7d4:	b.cs	1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>  // b.hs, b.nlast
   1c7d8:	sub	w9, w25, w0
   1c7dc:	add	w8, w9, w8
   1c7e0:	str	w8, [x19, #96]
   1c7e4:	b	1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>
   1c7e8:	bl	c300 <localeconv@plt>
   1c7ec:	ldr	x8, [x0, #8]
   1c7f0:	ldrb	w8, [x8]
   1c7f4:	strb	w8, [x19, #40]
   1c7f8:	ldr	x8, [x19, #56]
   1c7fc:	sub	x24, x22, x8
   1c800:	tbnz	w23, #0, 1c824 <mpfr_vasnprintf_aux@@Base+0x2668>
   1c804:	add	x9, x22, x21
   1c808:	add	x24, x24, #0x1
   1c80c:	sub	x9, x9, #0x1
   1c810:	ldrb	w10, [x9], #-1
   1c814:	subs	x24, x24, #0x1
   1c818:	b.eq	1c824 <mpfr_vasnprintf_aux@@Base+0x2668>  // b.none
   1c81c:	cmp	w10, #0x30
   1c820:	b.eq	1c810 <mpfr_vasnprintf_aux@@Base+0x2654>  // b.none
   1c824:	cbz	x24, 1c868 <mpfr_vasnprintf_aux@@Base+0x26ac>
   1c828:	lsr	x9, x24, #31
   1c82c:	cbz	x9, 1c838 <mpfr_vasnprintf_aux@@Base+0x267c>
   1c830:	mov	w0, #0xffffffff            	// #-1
   1c834:	b	1ca24 <mpfr_vasnprintf_aux@@Base+0x2868>
   1c838:	add	x21, x21, x8
   1c83c:	bl	c300 <localeconv@plt>
   1c840:	ldr	x8, [x0]
   1c844:	ldrb	w8, [x8, #1]
   1c848:	cbz	w8, 1c854 <mpfr_vasnprintf_aux@@Base+0x2698>
   1c84c:	mov	w8, #0x2e                  	// #46
   1c850:	b	1c860 <mpfr_vasnprintf_aux@@Base+0x26a4>
   1c854:	bl	c300 <localeconv@plt>
   1c858:	ldr	x8, [x0]
   1c85c:	ldrb	w8, [x8]
   1c860:	strb	w8, [x19, #68]
   1c864:	stp	x21, x24, [x19, #80]
   1c868:	cbz	w23, 1c8e0 <mpfr_vasnprintf_aux@@Base+0x2724>
   1c86c:	ldrsw	x8, [x20, #8]
   1c870:	cmp	x24, x8
   1c874:	b.cs	1c8e0 <mpfr_vasnprintf_aux@@Base+0x2724>  // b.hs, b.nlast
   1c878:	bl	c300 <localeconv@plt>
   1c87c:	ldr	x8, [x0]
   1c880:	ldrb	w8, [x8, #1]
   1c884:	cbz	w8, 1c8c0 <mpfr_vasnprintf_aux@@Base+0x2704>
   1c888:	mov	w8, #0x2e                  	// #46
   1c88c:	b	1c8cc <mpfr_vasnprintf_aux@@Base+0x2710>
   1c890:	ldr	w9, [x21, #8]
   1c894:	tbnz	w9, #31, 1c8b0 <mpfr_vasnprintf_aux@@Base+0x26f4>
   1c898:	cbz	w8, 1c614 <mpfr_vasnprintf_aux@@Base+0x2458>
   1c89c:	cmp	w8, #0x2
   1c8a0:	b.ne	1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>  // b.any
   1c8a4:	ldr	w9, [x21, #8]
   1c8a8:	cmp	w9, #0x0
   1c8ac:	b.le	1ca40 <mpfr_vasnprintf_aux@@Base+0x2884>
   1c8b0:	ldr	x8, [x19, #48]
   1c8b4:	mov	w9, #0x31                  	// #49
   1c8b8:	strb	w9, [x8]
   1c8bc:	b	1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>
   1c8c0:	bl	c300 <localeconv@plt>
   1c8c4:	ldr	x8, [x0]
   1c8c8:	ldrb	w8, [x8]
   1c8cc:	strb	w8, [x19, #68]
   1c8d0:	ldr	w8, [x20, #8]
   1c8d4:	ldr	w9, [x19, #88]
   1c8d8:	sub	w8, w8, w9
   1c8dc:	str	w8, [x19, #96]
   1c8e0:	ldrb	w8, [x20]
   1c8e4:	tbnz	w8, #0, 1c9f8 <mpfr_vasnprintf_aux@@Base+0x283c>
   1c8e8:	mov	w0, wzr
   1c8ec:	b	1ca24 <mpfr_vasnprintf_aux@@Base+0x2868>
   1c8f0:	ldr	x9, [x21]
   1c8f4:	mov	w10, #0x38                  	// #56
   1c8f8:	cmp	x9, #0x38
   1c8fc:	csel	x22, x9, x10, gt
   1c900:	cbnz	w8, 1ca48 <mpfr_vasnprintf_aux@@Base+0x288c>
   1c904:	add	x22, x22, #0x8
   1c908:	mov	x0, sp
   1c90c:	mov	x1, x22
   1c910:	bl	cf60 <mpfr_init2@plt>
   1c914:	mov	x0, sp
   1c918:	mov	x1, x22
   1c91c:	bl	c330 <mpfr_set_prec@plt>
   1c920:	ldrsw	x8, [x20, #8]
   1c924:	mov	x0, sp
   1c928:	mov	x2, xzr
   1c92c:	mov	w3, wzr
   1c930:	neg	x1, x8
   1c934:	bl	bed0 <mpfr_set_si_2exp@plt>
   1c938:	mov	x0, sp
   1c93c:	mov	x1, sp
   1c940:	mov	w2, #0x3                   	// #3
   1c944:	bl	c1e0 <mpfr_exp10@plt>
   1c948:	mov	x0, sp
   1c94c:	mov	x1, sp
   1c950:	mov	w2, #0x1                   	// #1
   1c954:	mov	w3, wzr
   1c958:	bl	cde0 <mpfr_div_2ui@plt>
   1c95c:	mov	x0, sp
   1c960:	mov	x1, x21
   1c964:	bl	cea0 <mpfr_cmpabs@plt>
   1c968:	add	x22, x22, #0x8
   1c96c:	cbz	w0, 1c914 <mpfr_vasnprintf_aux@@Base+0x2758>
   1c970:	lsr	w22, w0, #31
   1c974:	mov	x0, sp
   1c978:	bl	c4f0 <mpfr_clear@plt>
   1c97c:	b	1c998 <mpfr_vasnprintf_aux@@Base+0x27dc>
   1c980:	ldr	w8, [x21, #8]
   1c984:	cmp	w8, #0x0
   1c988:	cset	w22, gt
   1c98c:	b	1c998 <mpfr_vasnprintf_aux@@Base+0x27dc>
   1c990:	ldr	w8, [x21, #8]
   1c994:	lsr	w22, w8, #31
   1c998:	ldr	w8, [x20, #8]
   1c99c:	cbz	w22, 1c9d4 <mpfr_vasnprintf_aux@@Base+0x2818>
   1c9a0:	sub	w8, w8, #0x1
   1c9a4:	mov	w9, #0x1                   	// #1
   1c9a8:	mov	w0, #0x2                   	// #2
   1c9ac:	str	w8, [x19, #72]
   1c9b0:	str	x9, [x19, #88]
   1c9b4:	bl	d1f0 <mpfr_allocate_func@plt>
   1c9b8:	mov	w8, #0x31                  	// #49
   1c9bc:	strh	w8, [x0]
   1c9c0:	mov	x1, x0
   1c9c4:	ldr	x0, [x19, #120]
   1c9c8:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1c9cc:	str	x0, [x19, #80]
   1c9d0:	b	1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>
   1c9d4:	str	w8, [x19, #72]
   1c9d8:	ldrb	w8, [x20]
   1c9dc:	tbnz	w8, #0, 1c9f8 <mpfr_vasnprintf_aux@@Base+0x283c>
   1c9e0:	ldr	w8, [x19, #72]
   1c9e4:	cbnz	w8, 1c9f8 <mpfr_vasnprintf_aux@@Base+0x283c>
   1c9e8:	ldr	x8, [x19, #88]
   1c9ec:	cbnz	x8, 1c9f8 <mpfr_vasnprintf_aux@@Base+0x283c>
   1c9f0:	ldr	w8, [x19, #96]
   1c9f4:	cbz	w8, 1c8e8 <mpfr_vasnprintf_aux@@Base+0x272c>
   1c9f8:	bl	c300 <localeconv@plt>
   1c9fc:	ldr	x8, [x0]
   1ca00:	ldrb	w8, [x8, #1]
   1ca04:	cbz	w8, 1ca10 <mpfr_vasnprintf_aux@@Base+0x2854>
   1ca08:	mov	w8, #0x2e                  	// #46
   1ca0c:	b	1ca1c <mpfr_vasnprintf_aux@@Base+0x2860>
   1ca10:	bl	c300 <localeconv@plt>
   1ca14:	ldr	x8, [x0]
   1ca18:	ldrb	w8, [x8]
   1ca1c:	mov	w0, wzr
   1ca20:	strb	w8, [x19, #68]
   1ca24:	ldp	x20, x19, [sp, #112]
   1ca28:	ldp	x22, x21, [sp, #96]
   1ca2c:	ldp	x24, x23, [sp, #80]
   1ca30:	ldr	x25, [sp, #64]
   1ca34:	ldp	x29, x30, [sp, #48]
   1ca38:	add	sp, sp, #0x80
   1ca3c:	ret
   1ca40:	cbnz	w8, 1c9d8 <mpfr_vasnprintf_aux@@Base+0x281c>
   1ca44:	b	1c614 <mpfr_vasnprintf_aux@@Base+0x2458>
   1ca48:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1ca4c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1ca50:	add	x0, x0, #0xc8d
   1ca54:	add	x2, x2, #0xddc
   1ca58:	mov	w1, #0x58f                 	// #1423
   1ca5c:	bl	d030 <mpfr_assert_fail@plt>
   1ca60:	b	1c904 <mpfr_vasnprintf_aux@@Base+0x2748>
   1ca64:	sub	sp, sp, #0x80
   1ca68:	stp	x29, x30, [sp, #48]
   1ca6c:	stp	x26, x25, [sp, #64]
   1ca70:	stp	x24, x23, [sp, #80]
   1ca74:	stp	x22, x21, [sp, #96]
   1ca78:	stp	x20, x19, [sp, #112]
   1ca7c:	ldrb	w8, [x2, #32]
   1ca80:	mov	w9, #0x65                  	// #101
   1ca84:	mov	w10, #0x45                  	// #69
   1ca88:	mov	x20, x2
   1ca8c:	orr	w11, w8, #0x2
   1ca90:	orr	w24, w8, #0x20
   1ca94:	and	w8, w11, #0xff
   1ca98:	and	w11, w24, #0xff
   1ca9c:	cmp	w8, #0x47
   1caa0:	mov	x21, x1
   1caa4:	csel	w23, w10, w9, eq  // eq = none
   1caa8:	cmp	w11, #0x67
   1caac:	mov	x19, x0
   1cab0:	add	x29, sp, #0x30
   1cab4:	b.ne	1caec <mpfr_vasnprintf_aux@@Base+0x2930>  // b.any
   1cab8:	ldrb	w8, [x20]
   1cabc:	and	w25, w8, #0x1
   1cac0:	ldr	w8, [x21, #8]
   1cac4:	tbnz	w8, #31, 1cb00 <mpfr_vasnprintf_aux@@Base+0x2944>
   1cac8:	ldrb	w8, [x20]
   1cacc:	mov	w9, #0xa                   	// #10
   1cad0:	tst	w8, w9
   1cad4:	b.eq	1cb08 <mpfr_vasnprintf_aux@@Base+0x294c>  // b.none
   1cad8:	tst	w8, #0x8
   1cadc:	mov	w8, #0x2b                  	// #43
   1cae0:	mov	w9, #0x20                  	// #32
   1cae4:	csel	w8, w9, w8, eq  // eq = none
   1cae8:	b	1cb04 <mpfr_vasnprintf_aux@@Base+0x2948>
   1caec:	ldr	w8, [x20, #8]
   1caf0:	cmp	w8, #0x0
   1caf4:	cset	w25, gt
   1caf8:	ldr	w8, [x21, #8]
   1cafc:	tbz	w8, #31, 1cac8 <mpfr_vasnprintf_aux@@Base+0x290c>
   1cb00:	mov	w8, #0x2d                  	// #45
   1cb04:	strb	w8, [x19, #16]
   1cb08:	mov	w8, #0x1                   	// #1
   1cb0c:	str	x8, [x19, #56]
   1cb10:	cbz	x3, 1cb20 <mpfr_vasnprintf_aux@@Base+0x2964>
   1cb14:	ldp	x8, x22, [x3]
   1cb18:	stur	x8, [x29, #-8]
   1cb1c:	b	1cb64 <mpfr_vasnprintf_aux@@Base+0x29a8>
   1cb20:	ldrsw	x8, [x20, #8]
   1cb24:	ldr	x9, [x20, #32]
   1cb28:	ldp	q0, q1, [x20]
   1cb2c:	sub	x0, x29, #0x8
   1cb30:	cmp	w8, #0x0
   1cb34:	csinc	x2, xzr, x8, lt  // lt = tstop
   1cb38:	mov	x4, sp
   1cb3c:	mov	w1, #0xa                   	// #10
   1cb40:	mov	x3, x21
   1cb44:	str	x9, [sp, #32]
   1cb48:	stp	q0, q1, [sp]
   1cb4c:	bl	1ccfc <mpfr_vasnprintf_aux@@Base+0x2b40>
   1cb50:	ldr	x8, [x19, #120]
   1cb54:	mov	x22, x0
   1cb58:	mov	x1, x22
   1cb5c:	mov	x0, x8
   1cb60:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1cb64:	ldr	w8, [x21, #8]
   1cb68:	cmp	w8, #0x0
   1cb6c:	cinc	x26, x22, lt  // lt = tstop
   1cb70:	str	x26, [x19, #48]
   1cb74:	ldr	w22, [x20, #8]
   1cb78:	cbz	w22, 1cbe8 <mpfr_vasnprintf_aux@@Base+0x2a2c>
   1cb7c:	add	x21, x26, #0x1
   1cb80:	mov	x0, x21
   1cb84:	bl	bf00 <strlen@plt>
   1cb88:	tbnz	w25, #0, 1cba8 <mpfr_vasnprintf_aux@@Base+0x29ec>
   1cb8c:	subs	x8, x0, #0x1
   1cb90:	b.cc	1cba4 <mpfr_vasnprintf_aux@@Base+0x29e8>  // b.lo, b.ul, b.last
   1cb94:	ldrb	w9, [x26, x0]
   1cb98:	mov	x0, x8
   1cb9c:	cmp	w9, #0x30
   1cba0:	b.eq	1cb8c <mpfr_vasnprintf_aux@@Base+0x29d0>  // b.none
   1cba4:	add	x0, x8, #0x1
   1cba8:	lsr	x8, x0, #31
   1cbac:	cbz	x8, 1cbb8 <mpfr_vasnprintf_aux@@Base+0x29fc>
   1cbb0:	mov	w0, #0xffffffff            	// #-1
   1cbb4:	b	1cce0 <mpfr_vasnprintf_aux@@Base+0x2b24>
   1cbb8:	cbz	x0, 1cbe8 <mpfr_vasnprintf_aux@@Base+0x2a2c>
   1cbbc:	and	w8, w24, #0xff
   1cbc0:	cmp	w8, #0x67
   1cbc4:	stp	x21, x0, [x19, #80]
   1cbc8:	b.ne	1cbd4 <mpfr_vasnprintf_aux@@Base+0x2a18>  // b.any
   1cbcc:	ldrb	w8, [x20]
   1cbd0:	tbz	w8, #0, 1cbe8 <mpfr_vasnprintf_aux@@Base+0x2a2c>
   1cbd4:	cmp	w22, #0x1
   1cbd8:	b.lt	1cbe8 <mpfr_vasnprintf_aux@@Base+0x2a2c>  // b.tstop
   1cbdc:	subs	w8, w22, w0
   1cbe0:	b.le	1cbe8 <mpfr_vasnprintf_aux@@Base+0x2a2c>
   1cbe4:	str	w8, [x19, #96]
   1cbe8:	ldr	x8, [x19, #88]
   1cbec:	cbnz	x8, 1cbf8 <mpfr_vasnprintf_aux@@Base+0x2a3c>
   1cbf0:	ldrb	w8, [x20]
   1cbf4:	tbz	w8, #0, 1cc20 <mpfr_vasnprintf_aux@@Base+0x2a64>
   1cbf8:	bl	c300 <localeconv@plt>
   1cbfc:	ldr	x8, [x0]
   1cc00:	ldrb	w8, [x8, #1]
   1cc04:	cbz	w8, 1cc10 <mpfr_vasnprintf_aux@@Base+0x2a54>
   1cc08:	mov	w8, #0x2e                  	// #46
   1cc0c:	b	1cc1c <mpfr_vasnprintf_aux@@Base+0x2a60>
   1cc10:	bl	c300 <localeconv@plt>
   1cc14:	ldr	x8, [x0]
   1cc18:	ldrb	w8, [x8]
   1cc1c:	strb	w8, [x19, #68]
   1cc20:	ldur	x8, [x29, #-8]
   1cc24:	mov	w9, #0x1                   	// #1
   1cc28:	mov	w10, #0x3                   	// #3
   1cc2c:	sub	x11, x8, #0x1
   1cc30:	sub	x9, x9, x8
   1cc34:	cmp	x8, #0x0
   1cc38:	csel	x9, x11, x9, gt
   1cc3c:	cmp	x9, #0xa
   1cc40:	stur	x11, [x29, #-8]
   1cc44:	str	x10, [x19, #112]
   1cc48:	b.cc	1cc74 <mpfr_vasnprintf_aux@@Base+0x2ab8>  // b.lo, b.ul, b.last
   1cc4c:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   1cc50:	mov	w8, #0x3                   	// #3
   1cc54:	movk	x10, #0xcccd
   1cc58:	umulh	x11, x9, x10
   1cc5c:	cmp	x9, #0x63
   1cc60:	lsr	x9, x11, #3
   1cc64:	add	x8, x8, #0x1
   1cc68:	b.hi	1cc58 <mpfr_vasnprintf_aux@@Base+0x2a9c>  // b.pmore
   1cc6c:	cmp	x8, #0x3
   1cc70:	b.hi	1cc78 <mpfr_vasnprintf_aux@@Base+0x2abc>  // b.pmore
   1cc74:	mov	w8, #0x4                   	// #4
   1cc78:	add	x0, x8, #0x1
   1cc7c:	str	x8, [x19, #112]
   1cc80:	bl	d1f0 <mpfr_allocate_func@plt>
   1cc84:	ldr	x8, [x19, #120]
   1cc88:	mov	x20, x0
   1cc8c:	mov	x1, x20
   1cc90:	mov	x0, x8
   1cc94:	bl	1bfcc <mpfr_vasnprintf_aux@@Base+0x1e10>
   1cc98:	str	x0, [x19, #104]
   1cc9c:	mov	x0, sp
   1cca0:	strb	w23, [sp]
   1cca4:	strb	wzr, [sp, #1]
   1cca8:	mov	x19, sp
   1ccac:	bl	bf00 <strlen@plt>
   1ccb0:	mov	w9, #0x2b25                	// #11045
   1ccb4:	ldur	x2, [x29, #-8]
   1ccb8:	add	x8, x19, x0
   1ccbc:	movk	w9, #0x322e, lsl #16
   1ccc0:	str	w9, [x8]
   1ccc4:	mov	w9, #0x6c32                	// #27698
   1ccc8:	movk	w9, #0x64, lsl #16
   1cccc:	mov	x1, sp
   1ccd0:	mov	x0, x20
   1ccd4:	stur	w9, [x8, #3]
   1ccd8:	bl	c170 <sprintf@plt>
   1ccdc:	asr	w0, w0, #31
   1cce0:	ldp	x20, x19, [sp, #112]
   1cce4:	ldp	x22, x21, [sp, #96]
   1cce8:	ldp	x24, x23, [sp, #80]
   1ccec:	ldp	x26, x25, [sp, #64]
   1ccf0:	ldp	x29, x30, [sp, #48]
   1ccf4:	add	sp, sp, #0x80
   1ccf8:	ret
   1ccfc:	stp	x29, x30, [sp, #-96]!
   1cd00:	stp	x26, x25, [sp, #32]
   1cd04:	stp	x24, x23, [sp, #48]
   1cd08:	stp	x22, x21, [sp, #64]
   1cd0c:	stp	x20, x19, [sp, #80]
   1cd10:	ldr	x8, [x4, #16]
   1cd14:	mov	x22, x4
   1cd18:	mov	x19, x3
   1cd1c:	mov	x20, x2
   1cd20:	mov	w21, w1
   1cd24:	mov	x23, x0
   1cd28:	str	x27, [sp, #16]
   1cd2c:	mov	x29, sp
   1cd30:	cbz	x8, 1cd6c <mpfr_vasnprintf_aux@@Base+0x2bb0>
   1cd34:	ldr	w5, [x22, #28]
   1cd38:	mov	x0, xzr
   1cd3c:	mov	x1, x23
   1cd40:	mov	w2, w21
   1cd44:	mov	x3, x20
   1cd48:	mov	x4, x19
   1cd4c:	bl	c9d0 <mpfr_get_str@plt>
   1cd50:	ldp	x20, x19, [sp, #80]
   1cd54:	ldp	x22, x21, [sp, #64]
   1cd58:	ldp	x24, x23, [sp, #48]
   1cd5c:	ldp	x26, x25, [sp, #32]
   1cd60:	ldr	x27, [sp, #16]
   1cd64:	ldp	x29, x30, [sp], #96
   1cd68:	ret
   1cd6c:	cmp	w21, #0x25
   1cd70:	mov	w8, #0x3c                  	// #60
   1cd74:	mov	w9, #0x56                  	// #86
   1cd78:	mov	w10, #0x2f                  	// #47
   1cd7c:	csel	w8, w9, w8, lt  // lt = tstop
   1cd80:	cmp	w21, #0xb
   1cd84:	adrp	x24, 5b000 <mpfr_free_pool@@Base+0x3854>
   1cd88:	csel	w8, w10, w8, lt  // lt = tstop
   1cd8c:	adrp	x26, 5b000 <mpfr_free_pool@@Base+0x3854>
   1cd90:	mov	w25, #0x8                   	// #8
   1cd94:	add	x24, x24, #0xc8d
   1cd98:	add	w27, w8, w21
   1cd9c:	add	x26, x26, #0xdbf
   1cda0:	cmp	x25, x20
   1cda4:	b.cs	1cdb0 <mpfr_vasnprintf_aux@@Base+0x2bf4>  // b.hs, b.nlast
   1cda8:	mov	w5, #0x1                   	// #1
   1cdac:	b	1cdb8 <mpfr_vasnprintf_aux@@Base+0x2bfc>
   1cdb0:	ldr	w5, [x22, #28]
   1cdb4:	mov	x25, x20
   1cdb8:	mov	x0, xzr
   1cdbc:	mov	x1, x23
   1cdc0:	mov	w2, w21
   1cdc4:	mov	x3, x25
   1cdc8:	mov	x4, x19
   1cdcc:	bl	c9d0 <mpfr_get_str@plt>
   1cdd0:	cmp	x25, x20
   1cdd4:	b.eq	1cd50 <mpfr_vasnprintf_aux@@Base+0x2b94>  // b.none
   1cdd8:	mov	x8, x0
   1cddc:	ldrb	w9, [x8], #1
   1cde0:	cmp	w9, #0x2d
   1cde4:	csel	x8, x0, x8, ne  // ne = any
   1cde8:	sub	x9, x8, #0x1
   1cdec:	ldrb	w10, [x9, #1]!
   1cdf0:	cmp	w10, w27, uxtb
   1cdf4:	b.eq	1cdec <mpfr_vasnprintf_aux@@Base+0x2c30>  // b.none
   1cdf8:	add	x8, x8, x25
   1cdfc:	cmp	x9, x8
   1ce00:	b.cc	1cd50 <mpfr_vasnprintf_aux@@Base+0x2b94>  // b.lo, b.ul, b.last
   1ce04:	bl	cd70 <mpfr_free_str@plt>
   1ce08:	tbnz	x25, #63, 1ce1c <mpfr_vasnprintf_aux@@Base+0x2c60>
   1ce0c:	lsl	x25, x25, #1
   1ce10:	cmp	x25, x20
   1ce14:	b.cs	1cdb0 <mpfr_vasnprintf_aux@@Base+0x2bf4>  // b.hs, b.nlast
   1ce18:	b	1cda8 <mpfr_vasnprintf_aux@@Base+0x2bec>
   1ce1c:	mov	w1, #0x3df                 	// #991
   1ce20:	mov	x0, x24
   1ce24:	mov	x2, x26
   1ce28:	bl	d030 <mpfr_assert_fail@plt>
   1ce2c:	b	1ce0c <mpfr_vasnprintf_aux@@Base+0x2c50>
   1ce30:	cmp	w1, #0x2
   1ce34:	mov	w8, #0x4                   	// #4
   1ce38:	csinc	x8, x8, xzr, ne  // ne = any
   1ce3c:	cmp	w2, #0x1
   1ce40:	b.eq	1ceac <mpfr_vasnprintf_aux@@Base+0x2cf0>  // b.none
   1ce44:	cmp	w2, #0x2
   1ce48:	b.eq	1ce68 <mpfr_vasnprintf_aux@@Base+0x2cac>  // b.none
   1ce4c:	cmp	w2, #0x3
   1ce50:	b.ne	1ce70 <mpfr_vasnprintf_aux@@Base+0x2cb4>  // b.any
   1ce54:	ldr	w9, [x0, #8]
   1ce58:	cmp	w9, #0x0
   1ce5c:	b.gt	1ceac <mpfr_vasnprintf_aux@@Base+0x2cf0>
   1ce60:	cmp	w2, #0x2
   1ce64:	b.ne	1ce70 <mpfr_vasnprintf_aux@@Base+0x2cb4>  // b.any
   1ce68:	ldr	w9, [x0, #8]
   1ce6c:	tbnz	w9, #31, 1ceac <mpfr_vasnprintf_aux@@Base+0x2cf0>
   1ce70:	ldr	x9, [x0]
   1ce74:	cmp	x9, x8
   1ce78:	b.le	1ceac <mpfr_vasnprintf_aux@@Base+0x2cf0>
   1ce7c:	ldr	x10, [x0, #24]
   1ce80:	sub	x11, x9, #0x1
   1ce84:	add	x9, x9, #0x3e
   1ce88:	cmp	x11, #0x0
   1ce8c:	csel	x9, x9, x11, lt  // lt = tstop
   1ce90:	asr	x9, x9, #6
   1ce94:	ldr	x9, [x10, x9, lsl #3]
   1ce98:	neg	x10, x8
   1ce9c:	mov	x11, #0xffffffffffffffff    	// #-1
   1cea0:	lsl	x10, x11, x10
   1cea4:	bics	xzr, x10, x9
   1cea8:	b.eq	1ceb4 <mpfr_vasnprintf_aux@@Base+0x2cf8>  // b.none
   1ceac:	mov	w0, wzr
   1ceb0:	ret
   1ceb4:	eor	x8, x8, #0x3f
   1ceb8:	mov	w11, #0x1                   	// #1
   1cebc:	lsl	x8, x11, x8
   1cec0:	cmp	w2, #0x0
   1cec4:	csinv	x8, x8, x10, eq  // eq = none
   1cec8:	tst	x9, x8
   1cecc:	cset	w0, ne  // ne = any
   1ced0:	ret
   1ced4:	sub	sp, sp, #0x50
   1ced8:	stp	x29, x30, [sp, #32]
   1cedc:	stp	x20, x19, [sp, #64]
   1cee0:	ldr	x8, [x0]
   1cee4:	mov	w9, #0x40                  	// #64
   1cee8:	mov	x19, x0
   1ceec:	mov	x0, sp
   1cef0:	cmp	x8, #0x40
   1cef4:	csel	x1, x8, x9, gt
   1cef8:	str	x21, [sp, #48]
   1cefc:	add	x29, sp, #0x20
   1cf00:	bl	cf60 <mpfr_init2@plt>
   1cf04:	ldr	x0, [x19, #16]
   1cf08:	mov	w1, #0xa                   	// #10
   1cf0c:	mov	w2, #0x1                   	// #1
   1cf10:	bl	d070 <mpfr_ceil_mul@plt>
   1cf14:	sub	x21, x0, #0x1
   1cf18:	mov	x20, x0
   1cf1c:	mov	x0, sp
   1cf20:	mov	w3, #0x2                   	// #2
   1cf24:	mov	x1, x21
   1cf28:	mov	x2, xzr
   1cf2c:	bl	bed0 <mpfr_set_si_2exp@plt>
   1cf30:	mov	x0, sp
   1cf34:	mov	x2, sp
   1cf38:	mov	w1, #0xa                   	// #10
   1cf3c:	mov	w3, #0x2                   	// #2
   1cf40:	bl	cf00 <mpfr_ui_pow@plt>
   1cf44:	mov	x1, sp
   1cf48:	mov	x0, x19
   1cf4c:	bl	cea0 <mpfr_cmpabs@plt>
   1cf50:	sub	x8, x20, #0x2
   1cf54:	cmp	w0, #0x0
   1cf58:	mov	x0, sp
   1cf5c:	csel	x19, x8, x21, lt  // lt = tstop
   1cf60:	bl	c4f0 <mpfr_clear@plt>
   1cf64:	mov	x0, x19
   1cf68:	ldp	x20, x19, [sp, #64]
   1cf6c:	ldr	x21, [sp, #48]
   1cf70:	ldp	x29, x30, [sp, #32]
   1cf74:	add	sp, sp, #0x50
   1cf78:	ret

000000000001cf7c <mpfr_const_pi_internal@@Base>:
   1cf7c:	sub	sp, sp, #0x1b0
   1cf80:	stp	x29, x30, [sp, #336]
   1cf84:	stp	x28, x27, [sp, #352]
   1cf88:	stp	x26, x25, [sp, #368]
   1cf8c:	stp	x24, x23, [sp, #384]
   1cf90:	stp	x22, x21, [sp, #400]
   1cf94:	stp	x20, x19, [sp, #416]
   1cf98:	ldr	x22, [x0]
   1cf9c:	mov	x10, #0x1c72                	// #7282
   1cfa0:	movk	x10, #0x71c7, lsl #16
   1cfa4:	movk	x10, #0xc71c, lsl #32
   1cfa8:	add	x9, x22, #0x10
   1cfac:	mov	w19, w1
   1cfb0:	mov	x20, x0
   1cfb4:	mov	x26, xzr
   1cfb8:	movk	x10, #0x1c71, lsl #48
   1cfbc:	mov	x8, x9
   1cfc0:	add	x29, sp, #0x150
   1cfc4:	smulh	x12, x9, x10
   1cfc8:	add	x11, x26, #0x2
   1cfcc:	add	x12, x12, x12, lsr #63
   1cfd0:	add	x26, x26, #0x1
   1cfd4:	asr	x11, x12, x11
   1cfd8:	add	x8, x8, #0x3
   1cfdc:	add	x9, x9, #0x2
   1cfe0:	cbnz	x11, 1cfc4 <mpfr_const_pi_internal@@Base+0x48>
   1cfe4:	mov	x24, #0xfffffffffffffef1    	// #-271
   1cfe8:	movk	x24, #0x7fff, lsl #48
   1cfec:	sub	x9, x8, #0xd
   1cff0:	cmp	x9, x24
   1cff4:	b.gt	1d380 <mpfr_const_pi_internal@@Base+0x404>
   1cff8:	add	x9, x8, #0x3f
   1cffc:	cmp	x8, #0x0
   1d000:	csel	x9, x9, x8, lt  // lt = tstop
   1d004:	asr	x9, x9, #6
   1d008:	add	x23, x9, #0x1
   1d00c:	add	x9, x23, x23, lsl #2
   1d010:	cmp	x9, #0x11
   1d014:	add	x28, x8, #0x1
   1d018:	b.lt	1d030 <mpfr_const_pi_internal@@Base+0xb4>  // b.tstop
   1d01c:	lsl	x0, x9, #3
   1d020:	str	x0, [sp, #24]
   1d024:	bl	d1f0 <mpfr_allocate_func@plt>
   1d028:	str	x0, [sp, #32]
   1d02c:	b	1d03c <mpfr_const_pi_internal@@Base+0xc0>
   1d030:	add	x8, sp, #0x18
   1d034:	add	x8, x8, #0x10
   1d038:	stp	xzr, x8, [sp, #24]
   1d03c:	ldr	x8, [sp, #32]
   1d040:	cmp	w19, #0x0
   1d044:	mov	w11, #0x18                  	// #24
   1d048:	sub	x12, x24, x26
   1d04c:	add	x9, x8, x23, lsl #3
   1d050:	stp	x9, x28, [x29, #-48]
   1d054:	mov	w9, #0x40                  	// #64
   1d058:	str	x9, [sp, #8]
   1d05c:	cinc	x9, x22, eq  // eq = none
   1d060:	mov	w21, #0x1                   	// #1
   1d064:	stur	x8, [x29, #-16]
   1d068:	add	x10, x8, x23, lsl #4
   1d06c:	madd	x11, x23, x11, x8
   1d070:	add	x8, x8, x23, lsl #5
   1d074:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   1d078:	str	x9, [sp, #16]
   1d07c:	add	x9, x12, #0xd
   1d080:	stur	x28, [x29, #-136]
   1d084:	stp	x10, x28, [x29, #-80]
   1d088:	stp	x11, x28, [x29, #-112]
   1d08c:	stur	w21, [x29, #-32]
   1d090:	stur	w21, [x29, #-64]
   1d094:	stur	w21, [x29, #-96]
   1d098:	stur	w21, [x29, #-128]
   1d09c:	str	x9, [sp]
   1d0a0:	sub	x0, x29, #0x28
   1d0a4:	mov	w1, #0x1                   	// #1
   1d0a8:	mov	x2, xzr
   1d0ac:	mov	w3, wzr
   1d0b0:	str	x28, [sp, #168]
   1d0b4:	str	x8, [sp, #192]
   1d0b8:	str	w21, [sp, #176]
   1d0bc:	bl	cac0 <mpfr_set_ui_2exp@plt>
   1d0c0:	sub	x0, x29, #0x48
   1d0c4:	mov	w1, #0x1                   	// #1
   1d0c8:	mov	x2, xzr
   1d0cc:	mov	w3, wzr
   1d0d0:	bl	cac0 <mpfr_set_ui_2exp@plt>
   1d0d4:	sub	x0, x29, #0x68
   1d0d8:	mov	w1, #0x1                   	// #1
   1d0dc:	mov	x2, #0xffffffffffffffff    	// #-1
   1d0e0:	mov	w3, wzr
   1d0e4:	bl	cac0 <mpfr_set_ui_2exp@plt>
   1d0e8:	sub	x0, x29, #0x88
   1d0ec:	mov	w1, #0x1                   	// #1
   1d0f0:	mov	x2, #0xfffffffffffffffe    	// #-2
   1d0f4:	mov	w3, wzr
   1d0f8:	bl	cac0 <mpfr_set_ui_2exp@plt>
   1d0fc:	mov	x25, xzr
   1d100:	sub	x24, x28, #0x6
   1d104:	add	x27, x28, #0x1
   1d108:	add	x0, sp, #0xa8
   1d10c:	sub	x1, x29, #0x48
   1d110:	sub	x2, x29, #0x68
   1d114:	mov	w3, wzr
   1d118:	bl	c640 <mpfr_add@plt>
   1d11c:	add	x0, sp, #0xa8
   1d120:	add	x1, sp, #0xa8
   1d124:	mov	w2, #0x2                   	// #2
   1d128:	mov	w3, wzr
   1d12c:	bl	cde0 <mpfr_div_2ui@plt>
   1d130:	sub	x0, x29, #0x68
   1d134:	sub	x1, x29, #0x68
   1d138:	mov	w2, wzr
   1d13c:	bl	ce20 <mpfr_sqrt@plt>
   1d140:	sub	x0, x29, #0x28
   1d144:	sub	x1, x29, #0x28
   1d148:	sub	x2, x29, #0x68
   1d14c:	mov	w3, wzr
   1d150:	bl	c640 <mpfr_add@plt>
   1d154:	sub	x0, x29, #0x28
   1d158:	sub	x1, x29, #0x28
   1d15c:	mov	w2, #0x1                   	// #1
   1d160:	mov	w3, wzr
   1d164:	bl	cde0 <mpfr_div_2ui@plt>
   1d168:	sub	x0, x29, #0x48
   1d16c:	sub	x1, x29, #0x28
   1d170:	sub	x2, x29, #0x28
   1d174:	mov	w3, wzr
   1d178:	bl	c1b0 <mpfr_mul@plt>
   1d17c:	sub	x0, x29, #0x68
   1d180:	sub	x1, x29, #0x48
   1d184:	add	x2, sp, #0xa8
   1d188:	mov	w3, wzr
   1d18c:	bl	bfd0 <mpfr_sub@plt>
   1d190:	sub	x0, x29, #0x68
   1d194:	sub	x1, x29, #0x68
   1d198:	mov	w2, #0x1                   	// #1
   1d19c:	mov	w3, wzr
   1d1a0:	bl	c780 <mpfr_mul_2ui@plt>
   1d1a4:	add	x0, sp, #0xa8
   1d1a8:	sub	x1, x29, #0x48
   1d1ac:	sub	x2, x29, #0x68
   1d1b0:	mov	w3, wzr
   1d1b4:	bl	bfd0 <mpfr_sub@plt>
   1d1b8:	ldr	x8, [sp, #184]
   1d1bc:	add	x0, sp, #0xa8
   1d1c0:	add	x1, sp, #0xa8
   1d1c4:	mov	x2, x25
   1d1c8:	cmp	x8, x23
   1d1cc:	mov	w3, wzr
   1d1d0:	csneg	x22, x28, x8, eq  // eq = none
   1d1d4:	bl	c780 <mpfr_mul_2ui@plt>
   1d1d8:	sub	x0, x29, #0x88
   1d1dc:	sub	x1, x29, #0x88
   1d1e0:	add	x2, sp, #0xa8
   1d1e4:	mov	w3, wzr
   1d1e8:	bl	bfd0 <mpfr_sub@plt>
   1d1ec:	sub	x27, x27, #0x1
   1d1f0:	add	x25, x25, #0x1
   1d1f4:	cmp	x22, x27
   1d1f8:	sub	x24, x24, #0x2
   1d1fc:	b.lt	1d108 <mpfr_const_pi_internal@@Base+0x18c>  // b.tstop
   1d200:	sub	x0, x29, #0x48
   1d204:	sub	x1, x29, #0x68
   1d208:	sub	x2, x29, #0x88
   1d20c:	mov	w3, wzr
   1d210:	bl	caf0 <mpfr_div@plt>
   1d214:	ldur	x8, [x29, #-56]
   1d218:	mov	x22, #0xfffffffffffffef1    	// #-271
   1d21c:	movk	x22, #0x7fff, lsl #48
   1d220:	add	x9, x22, #0x113
   1d224:	cmp	x8, x9
   1d228:	b.lt	1d25c <mpfr_const_pi_internal@@Base+0x2e0>  // b.tstop
   1d22c:	ldur	x8, [x29, #-72]
   1d230:	ldur	x0, [x29, #-48]
   1d234:	ldr	x3, [sp, #16]
   1d238:	mov	x2, x24
   1d23c:	sub	x9, x8, #0x1
   1d240:	add	x8, x8, #0x3e
   1d244:	cmp	x9, #0x0
   1d248:	csel	x8, x8, x9, lt  // lt = tstop
   1d24c:	asr	x8, x8, #6
   1d250:	add	x1, x8, #0x1
   1d254:	bl	c830 <mpfr_round_p@plt>
   1d258:	cbnz	w0, 1d334 <mpfr_const_pi_internal@@Base+0x3b8>
   1d25c:	ldp	x8, x24, [sp]
   1d260:	sub	x8, x8, x28
   1d264:	cmp	x24, x8
   1d268:	b.gt	1d318 <mpfr_const_pi_internal@@Base+0x39c>
   1d26c:	add	x8, x28, x24
   1d270:	add	x8, x26, x8
   1d274:	add	x28, x8, #0x1
   1d278:	add	x10, x22, #0xe
   1d27c:	add	x9, x8, #0x2
   1d280:	cmp	x28, #0x0
   1d284:	csinc	x9, x9, x8, lt  // lt = tstop
   1d288:	cmp	x28, x10
   1d28c:	b.gt	1d380 <mpfr_const_pi_internal@@Base+0x404>
   1d290:	asr	x9, x9, #1
   1d294:	str	x9, [sp, #8]
   1d298:	add	x9, x8, #0x3f
   1d29c:	cmp	x8, #0x0
   1d2a0:	csel	x8, x9, x8, lt  // lt = tstop
   1d2a4:	ldr	x1, [sp, #24]
   1d2a8:	asr	x8, x8, #6
   1d2ac:	add	x24, x8, #0x1
   1d2b0:	add	x8, x24, x24, lsl #2
   1d2b4:	lsl	x2, x8, #3
   1d2b8:	str	x2, [sp, #24]
   1d2bc:	cbz	x1, 1d2cc <mpfr_const_pi_internal@@Base+0x350>
   1d2c0:	ldr	x0, [sp, #32]
   1d2c4:	bl	c660 <mpfr_reallocate_func@plt>
   1d2c8:	b	1d2d4 <mpfr_const_pi_internal@@Base+0x358>
   1d2cc:	mov	x0, x2
   1d2d0:	bl	d1f0 <mpfr_allocate_func@plt>
   1d2d4:	mov	x8, x0
   1d2d8:	mov	w11, #0x18                  	// #24
   1d2dc:	add	x9, x8, x24, lsl #3
   1d2e0:	add	x10, x8, x24, lsl #4
   1d2e4:	madd	x11, x24, x11, x8
   1d2e8:	str	x0, [sp, #32]
   1d2ec:	stur	x8, [x29, #-16]
   1d2f0:	add	x8, x8, x24, lsl #5
   1d2f4:	stp	x9, x28, [x29, #-48]
   1d2f8:	stur	w21, [x29, #-32]
   1d2fc:	stp	x10, x28, [x29, #-80]
   1d300:	stur	w21, [x29, #-64]
   1d304:	stp	x11, x28, [x29, #-112]
   1d308:	stur	w21, [x29, #-96]
   1d30c:	stur	x28, [x29, #-136]
   1d310:	stur	w21, [x29, #-128]
   1d314:	b	1d0a0 <mpfr_const_pi_internal@@Base+0x124>
   1d318:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1d31c:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   1d320:	mov	w1, #0x6c                  	// #108
   1d324:	add	x0, x0, #0xe21
   1d328:	add	x2, x2, #0x26
   1d32c:	bl	d030 <mpfr_assert_fail@plt>
   1d330:	b	1d26c <mpfr_const_pi_internal@@Base+0x2f0>
   1d334:	ldur	w3, [x29, #-64]
   1d338:	sub	x1, x29, #0x48
   1d33c:	mov	x0, x20
   1d340:	mov	w2, w19
   1d344:	bl	cb70 <mpfr_set4@plt>
   1d348:	ldr	x1, [sp, #24]
   1d34c:	mov	w19, w0
   1d350:	cbz	x1, 1d35c <mpfr_const_pi_internal@@Base+0x3e0>
   1d354:	ldr	x0, [sp, #32]
   1d358:	bl	d120 <mpfr_free_func@plt>
   1d35c:	mov	w0, w19
   1d360:	ldp	x20, x19, [sp, #416]
   1d364:	ldp	x22, x21, [sp, #400]
   1d368:	ldp	x24, x23, [sp, #384]
   1d36c:	ldp	x26, x25, [sp, #368]
   1d370:	ldp	x28, x27, [sp, #352]
   1d374:	ldp	x29, x30, [sp, #336]
   1d378:	add	sp, sp, #0x1b0
   1d37c:	ret
   1d380:	bl	cdd0 <mpfr_abort_prec_max@plt>

000000000001d384 <mpfr_const_pi@@Base>:
   1d384:	stp	x29, x30, [sp, #-16]!
   1d388:	mov	x29, sp
   1d38c:	mov	w2, w1
   1d390:	mov	x8, x0
   1d394:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1d398:	ldr	x1, [x0, #2848]
   1d39c:	add	x0, x0, #0xb20
   1d3a0:	blr	x1
   1d3a4:	mrs	x9, tpidr_el0
   1d3a8:	add	x1, x9, x0
   1d3ac:	mov	x0, x8
   1d3b0:	bl	c840 <mpfr_cache@plt>
   1d3b4:	ldp	x29, x30, [sp], #16
   1d3b8:	ret

000000000001d3bc <mpfr_pow_general@@Base>:
   1d3bc:	sub	sp, sp, #0x140
   1d3c0:	stp	x29, x30, [sp, #224]
   1d3c4:	stp	x28, x27, [sp, #240]
   1d3c8:	stp	x26, x25, [sp, #256]
   1d3cc:	stp	x24, x23, [sp, #272]
   1d3d0:	stp	x22, x21, [sp, #288]
   1d3d4:	stp	x20, x19, [sp, #304]
   1d3d8:	ldr	x8, [x1]
   1d3dc:	ldr	x27, [x0]
   1d3e0:	mov	w21, w3
   1d3e4:	mov	x19, x0
   1d3e8:	str	x8, [sp, #88]
   1d3ec:	mov	w8, #0x1                   	// #1
   1d3f0:	str	w8, [sp, #96]
   1d3f4:	ldr	x8, [x1, #16]
   1d3f8:	mov	x23, x2
   1d3fc:	add	x29, sp, #0xe0
   1d400:	str	x5, [sp, #32]
   1d404:	str	x8, [sp, #104]
   1d408:	ldr	x8, [x1, #24]
   1d40c:	str	w4, [sp, #16]
   1d410:	str	x8, [sp, #112]
   1d414:	ldr	w8, [x1, #8]
   1d418:	tbnz	w8, #31, 1d424 <mpfr_pow_general@@Base+0x68>
   1d41c:	str	wzr, [sp, #44]
   1d420:	b	1d450 <mpfr_pow_general@@Base+0x94>
   1d424:	mov	x0, x23
   1d428:	bl	d1a0 <mpfr_odd_p@plt>
   1d42c:	cbz	w0, 1d41c <mpfr_pow_general@@Base+0x60>
   1d430:	cmp	w21, #0x3
   1d434:	mov	w8, #0x2                   	// #2
   1d438:	mov	w9, #0x3                   	// #3
   1d43c:	csel	w8, w8, w21, eq  // eq = none
   1d440:	cmp	w21, #0x2
   1d444:	csel	w21, w9, w8, eq  // eq = none
   1d448:	mov	w8, #0x1                   	// #1
   1d44c:	str	w8, [sp, #44]
   1d450:	subs	x22, x27, #0x1
   1d454:	add	x20, x27, #0x9
   1d458:	b.eq	1d9a0 <mpfr_pow_general@@Base+0x5e4>  // b.none
   1d45c:	b.le	1d9a8 <mpfr_pow_general@@Base+0x5ec>
   1d460:	clz	x8, x22
   1d464:	mov	w9, #0x40                  	// #64
   1d468:	sub	x8, x9, x8
   1d46c:	add	x24, x20, x8
   1d470:	sub	x0, x29, #0x28
   1d474:	mov	x1, x24
   1d478:	bl	cf60 <mpfr_init2@plt>
   1d47c:	cmp	w21, #0x0
   1d480:	mov	w8, #0x40                  	// #64
   1d484:	str	wzr, [sp, #20]
   1d488:	mov	w26, wzr
   1d48c:	str	x8, [sp, #24]
   1d490:	mrs	x25, tpidr_el0
   1d494:	cinc	x28, x27, eq  // eq = none
   1d498:	csinc	w8, w21, wzr, ne  // ne = any
   1d49c:	str	w8, [sp, #12]
   1d4a0:	ldr	w8, [x23, #8]
   1d4a4:	sub	x0, x29, #0x28
   1d4a8:	add	x1, sp, #0x58
   1d4ac:	cmp	w8, #0x0
   1d4b0:	mov	w8, #0x2                   	// #2
   1d4b4:	cinc	w2, w8, lt  // lt = tstop
   1d4b8:	bl	c520 <mpfr_log@plt>
   1d4bc:	sub	x0, x29, #0x28
   1d4c0:	sub	x2, x29, #0x28
   1d4c4:	mov	w3, #0x2                   	// #2
   1d4c8:	mov	x1, x23
   1d4cc:	bl	c1b0 <mpfr_mul@plt>
   1d4d0:	cbz	w26, 1d51c <mpfr_pow_general@@Base+0x160>
   1d4d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1d4d8:	ldr	x1, [x0, #2784]
   1d4dc:	add	x0, x0, #0xae0
   1d4e0:	blr	x1
   1d4e4:	add	x1, x25, x0
   1d4e8:	sub	x0, x29, #0x48
   1d4ec:	mov	w2, #0x3                   	// #3
   1d4f0:	bl	c840 <mpfr_cache@plt>
   1d4f4:	sub	x0, x29, #0x48
   1d4f8:	sub	x1, x29, #0x48
   1d4fc:	sub	x2, x29, #0x68
   1d500:	mov	w3, #0x3                   	// #3
   1d504:	bl	c1b0 <mpfr_mul@plt>
   1d508:	sub	x0, x29, #0x28
   1d50c:	sub	x1, x29, #0x28
   1d510:	sub	x2, x29, #0x48
   1d514:	mov	w3, #0x2                   	// #2
   1d518:	bl	bfd0 <mpfr_sub@plt>
   1d51c:	ldur	x8, [x29, #-24]
   1d520:	ldur	x22, [x29, #-88]
   1d524:	add	x9, x8, #0x3
   1d528:	cmn	x8, #0x2
   1d52c:	csinc	x20, x9, xzr, gt
   1d530:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1d534:	ldr	x1, [x0, #2800]
   1d538:	add	x0, x0, #0xaf0
   1d53c:	blr	x1
   1d540:	mov	x27, x0
   1d544:	str	wzr, [x25, x0]
   1d548:	sub	x0, x29, #0x28
   1d54c:	sub	x1, x29, #0x28
   1d550:	mov	w2, wzr
   1d554:	bl	cc20 <mpfr_exp@plt>
   1d558:	ldur	x8, [x29, #-24]
   1d55c:	mov	x9, #0xfffffffffffffeff    	// #-257
   1d560:	movk	x9, #0x7fff, lsl #48
   1d564:	add	x9, x9, #0x105
   1d568:	cmp	x8, x9
   1d56c:	b.lt	1d5dc <mpfr_pow_general@@Base+0x220>  // b.tstop
   1d570:	ldr	w8, [x25, x27]
   1d574:	tbnz	w8, #0, 1d5dc <mpfr_pow_general@@Base+0x220>
   1d578:	ldur	x8, [x29, #-40]
   1d57c:	cmp	x22, x20
   1d580:	csel	x9, x22, x20, gt
   1d584:	cmp	w26, #0x0
   1d588:	sub	x10, x8, #0x1
   1d58c:	ldur	x0, [x29, #-16]
   1d590:	csinc	x9, x20, x9, eq  // eq = none
   1d594:	add	x8, x8, #0x3e
   1d598:	cmp	x10, #0x0
   1d59c:	csel	x8, x8, x10, lt  // lt = tstop
   1d5a0:	asr	x8, x8, #6
   1d5a4:	add	x1, x8, #0x1
   1d5a8:	sub	x2, x24, x9
   1d5ac:	mov	x3, x28
   1d5b0:	bl	c830 <mpfr_round_p@plt>
   1d5b4:	cbz	w0, 1d648 <mpfr_pow_general@@Base+0x28c>
   1d5b8:	ldur	w3, [x29, #-32]
   1d5bc:	sub	x1, x29, #0x28
   1d5c0:	mov	x0, x19
   1d5c4:	mov	w2, w21
   1d5c8:	bl	cb70 <mpfr_set4@plt>
   1d5cc:	str	w0, [sp, #84]
   1d5d0:	mov	w27, #0x1                   	// #1
   1d5d4:	cbz	w27, 1d4a0 <mpfr_pow_general@@Base+0xe4>
   1d5d8:	b	1d82c <mpfr_pow_general@@Base+0x470>
   1d5dc:	cbnz	w26, 1d7a8 <mpfr_pow_general@@Base+0x3ec>
   1d5e0:	ldur	x8, [x29, #-24]
   1d5e4:	mov	x9, #0xfffffffffffffeff    	// #-257
   1d5e8:	movk	x9, #0x7fff, lsl #48
   1d5ec:	add	x9, x9, #0x103
   1d5f0:	cmp	x8, x9
   1d5f4:	b.eq	1d7c4 <mpfr_pow_general@@Base+0x408>  // b.none
   1d5f8:	ldur	x8, [x29, #-24]
   1d5fc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1d600:	cmp	x8, x9
   1d604:	b.eq	1d6cc <mpfr_pow_general@@Base+0x310>  // b.none
   1d608:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1d60c:	cmp	x8, x9
   1d610:	b.ne	1d72c <mpfr_pow_general@@Base+0x370>  // b.any
   1d614:	ldr	w1, [sp, #12]
   1d618:	mov	w2, #0x1                   	// #1
   1d61c:	mov	x0, x19
   1d620:	mov	w27, #0x1                   	// #1
   1d624:	bl	c880 <mpfr_underflow@plt>
   1d628:	ldr	x9, [sp, #32]
   1d62c:	str	w0, [sp, #84]
   1d630:	cbz	x9, 1d5d4 <mpfr_pow_general@@Base+0x218>
   1d634:	ldr	w8, [x9]
   1d638:	mov	w10, #0x9                   	// #9
   1d63c:	orr	w8, w8, w10
   1d640:	str	w8, [x9]
   1d644:	b	1d5d0 <mpfr_pow_general@@Base+0x214>
   1d648:	ldp	w8, w9, [sp, #16]
   1d64c:	orr	w8, w9, w8
   1d650:	cbz	w8, 1d6a4 <mpfr_pow_general@@Base+0x2e8>
   1d654:	ldr	x20, [sp, #24]
   1d658:	mov	x8, #0xfffffffffffffeff    	// #-257
   1d65c:	movk	x8, #0x7fff, lsl #48
   1d660:	sub	x8, x8, x24
   1d664:	cmp	x20, x8
   1d668:	b.gt	1d7e0 <mpfr_pow_general@@Base+0x424>
   1d66c:	add	x24, x24, x20
   1d670:	cmp	x24, #0x0
   1d674:	cinc	x8, x24, lt  // lt = tstop
   1d678:	asr	x8, x8, #1
   1d67c:	sub	x0, x29, #0x28
   1d680:	mov	x1, x24
   1d684:	str	x8, [sp, #24]
   1d688:	bl	c330 <mpfr_set_prec@plt>
   1d68c:	cbz	w26, 1d69c <mpfr_pow_general@@Base+0x2e0>
   1d690:	sub	x0, x29, #0x48
   1d694:	mov	x1, x24
   1d698:	bl	c330 <mpfr_set_prec@plt>
   1d69c:	mov	w27, wzr
   1d6a0:	b	1d5d4 <mpfr_pow_general@@Base+0x218>
   1d6a4:	add	x1, sp, #0x58
   1d6a8:	add	x4, sp, #0x54
   1d6ac:	mov	x0, x19
   1d6b0:	mov	x2, x23
   1d6b4:	mov	w3, w21
   1d6b8:	bl	1d9c4 <mpfr_pow_general@@Base+0x608>
   1d6bc:	mov	w27, #0x1                   	// #1
   1d6c0:	cbz	w0, 1d79c <mpfr_pow_general@@Base+0x3e0>
   1d6c4:	str	wzr, [sp, #20]
   1d6c8:	b	1d5d4 <mpfr_pow_general@@Base+0x218>
   1d6cc:	ldr	w8, [x23, #8]
   1d6d0:	sub	x0, x29, #0x28
   1d6d4:	add	x1, sp, #0x58
   1d6d8:	cmp	w8, #0x0
   1d6dc:	mov	w8, #0x2                   	// #2
   1d6e0:	cinc	w2, w8, ge  // ge = tcont
   1d6e4:	bl	c520 <mpfr_log@plt>
   1d6e8:	sub	x0, x29, #0x28
   1d6ec:	sub	x2, x29, #0x28
   1d6f0:	mov	w3, #0x3                   	// #3
   1d6f4:	mov	x1, x23
   1d6f8:	bl	c1b0 <mpfr_mul@plt>
   1d6fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1d700:	ldr	x1, [x0, #2800]
   1d704:	add	x0, x0, #0xaf0
   1d708:	blr	x1
   1d70c:	mov	x27, x0
   1d710:	str	wzr, [x25, x0]
   1d714:	sub	x0, x29, #0x28
   1d718:	sub	x1, x29, #0x28
   1d71c:	mov	w2, #0x3                   	// #3
   1d720:	bl	cc20 <mpfr_exp@plt>
   1d724:	ldrb	w8, [x25, x27]
   1d728:	tbnz	w8, #1, 1d7fc <mpfr_pow_general@@Base+0x440>
   1d72c:	cmp	x24, #0x3f
   1d730:	b.gt	1d744 <mpfr_pow_general@@Base+0x388>
   1d734:	sub	x0, x29, #0x28
   1d738:	mov	w1, #0x40                  	// #64
   1d73c:	bl	c330 <mpfr_set_prec@plt>
   1d740:	mov	w24, #0x40                  	// #64
   1d744:	sub	x0, x29, #0x48
   1d748:	mov	x1, x24
   1d74c:	bl	cf60 <mpfr_init2@plt>
   1d750:	sub	x0, x29, #0x68
   1d754:	mov	w1, #0x40                  	// #64
   1d758:	bl	cf60 <mpfr_init2@plt>
   1d75c:	sub	x0, x29, #0x68
   1d760:	add	x1, sp, #0x58
   1d764:	mov	w2, wzr
   1d768:	bl	c670 <mpfr_log2@plt>
   1d76c:	sub	x0, x29, #0x68
   1d770:	sub	x2, x29, #0x68
   1d774:	mov	x1, x23
   1d778:	mov	w3, wzr
   1d77c:	bl	c1b0 <mpfr_mul@plt>
   1d780:	sub	x0, x29, #0x68
   1d784:	sub	x1, x29, #0x68
   1d788:	mov	w2, #0xffffffff            	// #-1
   1d78c:	bl	c7c0 <mpfr_rint@plt>
   1d790:	mov	w27, wzr
   1d794:	mov	w26, #0x1                   	// #1
   1d798:	b	1d5d4 <mpfr_pow_general@@Base+0x218>
   1d79c:	mov	w8, #0x1                   	// #1
   1d7a0:	str	w8, [sp, #20]
   1d7a4:	b	1d654 <mpfr_pow_general@@Base+0x298>
   1d7a8:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1d7ac:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1d7b0:	mov	w1, #0xcd                  	// #205
   1d7b4:	add	x0, x0, #0xe2c
   1d7b8:	add	x2, x2, #0xe3b
   1d7bc:	bl	d030 <mpfr_assert_fail@plt>
   1d7c0:	b	1d5e0 <mpfr_pow_general@@Base+0x224>
   1d7c4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1d7c8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1d7cc:	mov	w1, #0xce                  	// #206
   1d7d0:	add	x0, x0, #0xe2c
   1d7d4:	add	x2, x2, #0xe47
   1d7d8:	bl	d030 <mpfr_assert_fail@plt>
   1d7dc:	b	1d5f8 <mpfr_pow_general@@Base+0x23c>
   1d7e0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1d7e4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1d7e8:	mov	w1, #0x113                 	// #275
   1d7ec:	add	x0, x0, #0xe2c
   1d7f0:	add	x2, x2, #0xe80
   1d7f4:	bl	d030 <mpfr_assert_fail@plt>
   1d7f8:	b	1d66c <mpfr_pow_general@@Base+0x2b0>
   1d7fc:	mov	w2, #0x1                   	// #1
   1d800:	mov	x0, x19
   1d804:	mov	w1, w21
   1d808:	mov	w27, #0x1                   	// #1
   1d80c:	bl	c3a0 <mpfr_overflow@plt>
   1d810:	ldr	x8, [sp, #32]
   1d814:	str	w0, [sp, #84]
   1d818:	cbz	x8, 1d5d4 <mpfr_pow_general@@Base+0x218>
   1d81c:	ldr	x9, [sp, #32]
   1d820:	mov	w10, #0xa                   	// #10
   1d824:	ldr	w8, [x9]
   1d828:	b	1d63c <mpfr_pow_general@@Base+0x280>
   1d82c:	cbz	w26, 1d904 <mpfr_pow_general@@Base+0x548>
   1d830:	sub	x0, x29, #0x68
   1d834:	mov	w1, wzr
   1d838:	bl	c630 <mpfr_get_si@plt>
   1d83c:	mov	x22, x0
   1d840:	tbz	x0, #63, 1d898 <mpfr_pow_general@@Base+0x4dc>
   1d844:	cbnz	w21, 1d898 <mpfr_pow_general@@Base+0x4dc>
   1d848:	ldr	w8, [sp, #84]
   1d84c:	tbz	w8, #31, 1d898 <mpfr_pow_general@@Base+0x4dc>
   1d850:	ldr	x8, [x19, #16]
   1d854:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1d858:	ldr	x1, [x0, #2736]
   1d85c:	add	x0, x0, #0xab0
   1d860:	blr	x1
   1d864:	ldr	x9, [x25, x0]
   1d868:	mvn	x10, x22
   1d86c:	add	x9, x9, x10
   1d870:	cmp	x8, x9
   1d874:	b.ne	1d898 <mpfr_pow_general@@Base+0x4dc>  // b.any
   1d878:	mov	x0, x19
   1d87c:	bl	c360 <mpfr_powerof2_raw@plt>
   1d880:	cbz	w0, 1d898 <mpfr_pow_general@@Base+0x4dc>
   1d884:	ldr	x8, [x19]
   1d888:	cmp	x8, #0x2
   1d88c:	b.lt	1d94c <mpfr_pow_general@@Base+0x590>  // b.tstop
   1d890:	mov	x0, x19
   1d894:	bl	c5c0 <mpfr_nextabove@plt>
   1d898:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1d89c:	ldr	x1, [x0, #2800]
   1d8a0:	add	x0, x0, #0xaf0
   1d8a4:	blr	x1
   1d8a8:	str	wzr, [x25, x0]
   1d8ac:	mov	x0, x19
   1d8b0:	mov	x1, x19
   1d8b4:	mov	x2, x22
   1d8b8:	mov	w3, w21
   1d8bc:	bl	bff0 <mpfr_mul_2si@plt>
   1d8c0:	mov	w21, w0
   1d8c4:	ldr	x10, [sp, #32]
   1d8c8:	cbz	w21, 1d8f4 <mpfr_pow_general@@Base+0x538>
   1d8cc:	str	w21, [sp, #84]
   1d8d0:	cbz	x10, 1d8f4 <mpfr_pow_general@@Base+0x538>
   1d8d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1d8d8:	ldr	x1, [x0, #2800]
   1d8dc:	add	x0, x0, #0xaf0
   1d8e0:	blr	x1
   1d8e4:	ldr	w8, [x25, x0]
   1d8e8:	ldr	w9, [x10]
   1d8ec:	orr	w8, w9, w8
   1d8f0:	str	w8, [x10]
   1d8f4:	sub	x0, x29, #0x48
   1d8f8:	sub	x1, x29, #0x68
   1d8fc:	mov	x2, xzr
   1d900:	bl	c650 <mpfr_clears@plt>
   1d904:	sub	x0, x29, #0x28
   1d908:	bl	c4f0 <mpfr_clear@plt>
   1d90c:	ldr	w8, [sp, #44]
   1d910:	cbz	w8, 1d928 <mpfr_pow_general@@Base+0x56c>
   1d914:	mov	w8, #0xffffffff            	// #-1
   1d918:	str	w8, [x19, #8]
   1d91c:	ldr	w8, [sp, #84]
   1d920:	neg	w8, w8
   1d924:	str	w8, [sp, #84]
   1d928:	ldr	w0, [sp, #84]
   1d92c:	ldp	x20, x19, [sp, #304]
   1d930:	ldp	x22, x21, [sp, #288]
   1d934:	ldp	x24, x23, [sp, #272]
   1d938:	ldp	x26, x25, [sp, #256]
   1d93c:	ldp	x28, x27, [sp, #240]
   1d940:	ldp	x29, x30, [sp, #224]
   1d944:	add	sp, sp, #0x140
   1d948:	ret
   1d94c:	add	x1, x8, #0x1
   1d950:	add	x0, sp, #0x30
   1d954:	bl	cf60 <mpfr_init2@plt>
   1d958:	ldr	w3, [x19, #8]
   1d95c:	add	x0, sp, #0x30
   1d960:	mov	w2, #0x1                   	// #1
   1d964:	mov	x1, x19
   1d968:	bl	cb70 <mpfr_set4@plt>
   1d96c:	add	x0, sp, #0x30
   1d970:	bl	c5c0 <mpfr_nextabove@plt>
   1d974:	add	x1, sp, #0x30
   1d978:	mov	x0, x19
   1d97c:	mov	x2, x22
   1d980:	mov	w3, w21
   1d984:	bl	bff0 <mpfr_mul_2si@plt>
   1d988:	mov	w21, w0
   1d98c:	add	x0, sp, #0x30
   1d990:	bl	c4f0 <mpfr_clear@plt>
   1d994:	ldr	x10, [sp, #32]
   1d998:	cbnz	w21, 1d8cc <mpfr_pow_general@@Base+0x510>
   1d99c:	b	1d8f4 <mpfr_pow_general@@Base+0x538>
   1d9a0:	mov	x8, xzr
   1d9a4:	b	1d46c <mpfr_pow_general@@Base+0xb0>
   1d9a8:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1d9ac:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1d9b0:	add	x0, x0, #0xe2c
   1d9b4:	add	x2, x2, #0xe32
   1d9b8:	mov	w1, #0x9f                  	// #159
   1d9bc:	bl	d030 <mpfr_assert_fail@plt>
   1d9c0:	b	1d460 <mpfr_pow_general@@Base+0xa4>
   1d9c4:	sub	sp, sp, #0x80
   1d9c8:	stp	x29, x30, [sp, #64]
   1d9cc:	stp	x24, x23, [sp, #80]
   1d9d0:	stp	x22, x21, [sp, #96]
   1d9d4:	stp	x20, x19, [sp, #112]
   1d9d8:	ldr	w8, [x2, #8]
   1d9dc:	add	x29, sp, #0x40
   1d9e0:	tbnz	w8, #31, 1db30 <mpfr_pow_general@@Base+0x774>
   1d9e4:	mov	x21, x0
   1d9e8:	add	x0, sp, #0x20
   1d9ec:	mov	x19, x4
   1d9f0:	mov	w20, w3
   1d9f4:	mov	x23, x2
   1d9f8:	mov	x22, x1
   1d9fc:	bl	c400 <mpfr_mpz_init@plt>
   1da00:	add	x0, sp, #0x20
   1da04:	mov	x1, x23
   1da08:	bl	cfb0 <mpfr_get_z_2exp@plt>
   1da0c:	mov	x23, x0
   1da10:	add	x0, sp, #0x20
   1da14:	mov	x1, xzr
   1da18:	bl	bee0 <__gmpz_scan1@plt>
   1da1c:	mov	x24, x0
   1da20:	add	x0, sp, #0x20
   1da24:	add	x1, sp, #0x20
   1da28:	mov	x2, x24
   1da2c:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   1da30:	sub	x0, x29, #0x10
   1da34:	add	x24, x24, x23
   1da38:	bl	c400 <mpfr_mpz_init@plt>
   1da3c:	sub	x0, x29, #0x10
   1da40:	mov	x1, x22
   1da44:	bl	cfb0 <mpfr_get_z_2exp@plt>
   1da48:	mov	x22, x0
   1da4c:	sub	x0, x29, #0x10
   1da50:	mov	x1, xzr
   1da54:	bl	bee0 <__gmpz_scan1@plt>
   1da58:	mov	x23, x0
   1da5c:	sub	x0, x29, #0x10
   1da60:	sub	x1, x29, #0x10
   1da64:	mov	x2, x23
   1da68:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   1da6c:	add	x22, x23, x22
   1da70:	cbz	x24, 1dab8 <mpfr_pow_general@@Base+0x6fc>
   1da74:	tbz	w22, #0, 1da8c <mpfr_pow_general@@Base+0x6d0>
   1da78:	sub	x0, x29, #0x10
   1da7c:	sub	x1, x29, #0x10
   1da80:	mov	w2, #0x1                   	// #1
   1da84:	bl	c6a0 <__gmpz_mul_2exp@plt>
   1da88:	sub	x22, x22, #0x1
   1da8c:	sub	x0, x29, #0x10
   1da90:	bl	c500 <__gmpz_perfect_square_p@plt>
   1da94:	cbz	w0, 1db38 <mpfr_pow_general@@Base+0x77c>
   1da98:	sub	x0, x29, #0x10
   1da9c:	sub	x1, x29, #0x10
   1daa0:	bl	c0c0 <__gmpz_sqrt@plt>
   1daa4:	cmp	x22, #0x0
   1daa8:	cinc	x8, x22, lt  // lt = tstop
   1daac:	adds	x24, x24, #0x1
   1dab0:	asr	x22, x8, #1
   1dab4:	b.cc	1da74 <mpfr_pow_general@@Base+0x6b8>  // b.lo, b.ul, b.last
   1dab8:	ldur	w8, [x29, #-12]
   1dabc:	ldur	x9, [x29, #-8]
   1dac0:	mov	x0, sp
   1dac4:	cmp	w8, #0x0
   1dac8:	cneg	w8, w8, mi  // mi = first
   1dacc:	add	x9, x9, w8, uxtw #3
   1dad0:	ldur	x9, [x9, #-8]
   1dad4:	lsl	x8, x8, #6
   1dad8:	clz	x9, x9
   1dadc:	sub	x1, x8, x9
   1dae0:	bl	cf60 <mpfr_init2@plt>
   1dae4:	mov	x0, sp
   1dae8:	sub	x1, x29, #0x10
   1daec:	mov	w2, wzr
   1daf0:	bl	c6e0 <mpfr_set_z@plt>
   1daf4:	mov	x0, sp
   1daf8:	mov	x1, sp
   1dafc:	mov	x2, x22
   1db00:	mov	w3, wzr
   1db04:	bl	bff0 <mpfr_mul_2si@plt>
   1db08:	mov	x1, sp
   1db0c:	add	x2, sp, #0x20
   1db10:	mov	x0, x21
   1db14:	mov	w3, w20
   1db18:	bl	c350 <mpfr_pow_z@plt>
   1db1c:	str	w0, [x19]
   1db20:	mov	x0, sp
   1db24:	bl	c4f0 <mpfr_clear@plt>
   1db28:	mov	w19, #0x1                   	// #1
   1db2c:	b	1db3c <mpfr_pow_general@@Base+0x780>
   1db30:	mov	w19, wzr
   1db34:	b	1db4c <mpfr_pow_general@@Base+0x790>
   1db38:	mov	w19, wzr
   1db3c:	sub	x0, x29, #0x10
   1db40:	bl	c610 <mpfr_mpz_clear@plt>
   1db44:	add	x0, sp, #0x20
   1db48:	bl	c610 <mpfr_mpz_clear@plt>
   1db4c:	mov	w0, w19
   1db50:	ldp	x20, x19, [sp, #112]
   1db54:	ldp	x22, x21, [sp, #96]
   1db58:	ldp	x24, x23, [sp, #80]
   1db5c:	ldp	x29, x30, [sp, #64]
   1db60:	add	sp, sp, #0x80
   1db64:	ret

000000000001db68 <mpfr_pow@@Base>:
   1db68:	sub	sp, sp, #0xa0
   1db6c:	stp	x29, x30, [sp, #64]
   1db70:	stp	x28, x27, [sp, #80]
   1db74:	stp	x26, x25, [sp, #96]
   1db78:	stp	x24, x23, [sp, #112]
   1db7c:	stp	x22, x21, [sp, #128]
   1db80:	stp	x20, x19, [sp, #144]
   1db84:	ldr	x8, [x1, #16]
   1db88:	mov	x24, #0x2                   	// #2
   1db8c:	movk	x24, #0x8000, lsl #48
   1db90:	add	x9, x24, #0x2
   1db94:	mov	w20, w3
   1db98:	mov	x21, x2
   1db9c:	mov	x22, x1
   1dba0:	cmp	x8, x9
   1dba4:	mov	x19, x0
   1dba8:	add	x29, sp, #0x40
   1dbac:	b.lt	1e31c <mpfr_pow@@Base+0x7b4>  // b.tstop
   1dbb0:	ldr	x10, [x21, #16]
   1dbb4:	cmp	x10, x9
   1dbb8:	b.lt	1e31c <mpfr_pow@@Base+0x7b4>  // b.tstop
   1dbbc:	mov	x0, x21
   1dbc0:	bl	c600 <mpfr_integer_p@plt>
   1dbc4:	mov	w23, w0
   1dbc8:	cbnz	w0, 1dc00 <mpfr_pow@@Base+0x98>
   1dbcc:	ldr	w8, [x22, #8]
   1dbd0:	tbz	w8, #31, 1dc00 <mpfr_pow@@Base+0x98>
   1dbd4:	str	x24, [x19, #16]
   1dbd8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1dbdc:	ldr	x1, [x0, #2800]
   1dbe0:	add	x0, x0, #0xaf0
   1dbe4:	blr	x1
   1dbe8:	mrs	x8, tpidr_el0
   1dbec:	ldr	w9, [x8, x0]
   1dbf0:	mov	w24, wzr
   1dbf4:	orr	w9, w9, #0x4
   1dbf8:	str	w9, [x8, x0]
   1dbfc:	b	1e268 <mpfr_pow@@Base+0x700>
   1dc00:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   1dc04:	ldr	x1, [x1, #3928]
   1dc08:	mov	x0, x22
   1dc0c:	bl	cea0 <mpfr_cmpabs@plt>
   1dc10:	cbz	w0, 1dd04 <mpfr_pow@@Base+0x19c>
   1dc14:	mov	w25, w0
   1dc18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1dc1c:	ldr	x1, [x0, #2768]
   1dc20:	add	x0, x0, #0xad0
   1dc24:	blr	x1
   1dc28:	mrs	x27, tpidr_el0
   1dc2c:	ldr	x8, [x27, x0]
   1dc30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1dc34:	ldr	x1, [x0, #2736]
   1dc38:	add	x0, x0, #0xab0
   1dc3c:	blr	x1
   1dc40:	ldr	x9, [x27, x0]
   1dc44:	mov	w10, #0x3fffffff            	// #1073741823
   1dc48:	cmp	x8, x10
   1dc4c:	b.lt	1dc80 <mpfr_pow@@Base+0x118>  // b.tstop
   1dc50:	mov	x10, #0xffffffffc0000001    	// #-1073741823
   1dc54:	cmp	x9, x10
   1dc58:	b.gt	1dc80 <mpfr_pow@@Base+0x118>
   1dc5c:	ldr	x10, [x21, #16]
   1dc60:	cmp	x10, #0xf
   1dc64:	b.gt	1dc80 <mpfr_pow@@Base+0x118>
   1dc68:	ldr	x10, [x22, #16]
   1dc6c:	mov	w11, #0x7ffe                	// #32766
   1dc70:	add	x10, x10, x11
   1dc74:	mov	w11, #0xfffe                	// #65534
   1dc78:	cmp	x10, x11
   1dc7c:	b.cc	1dfa0 <mpfr_pow@@Base+0x438>  // b.lo, b.ul, b.last
   1dc80:	ldr	w10, [x21, #8]
   1dc84:	mul	w10, w10, w25
   1dc88:	cmp	w10, #0x1
   1dc8c:	b.lt	1dd14 <mpfr_pow@@Base+0x1ac>  // b.tstop
   1dc90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1dc94:	ldr	x1, [x0, #2800]
   1dc98:	add	x0, x0, #0xaf0
   1dc9c:	blr	x1
   1dca0:	ldr	w10, [x27, x0]
   1dca4:	stp	x9, x8, [x29, #-16]
   1dca8:	stur	w10, [x29, #-24]
   1dcac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1dcb0:	ldr	x1, [x0, #2736]
   1dcb4:	add	x0, x0, #0xab0
   1dcb8:	blr	x1
   1dcbc:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   1dcc0:	str	x8, [x27, x0]
   1dcc4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1dcc8:	ldr	x1, [x0, #2768]
   1dccc:	add	x0, x0, #0xad0
   1dcd0:	blr	x1
   1dcd4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   1dcd8:	str	x8, [x27, x0]
   1dcdc:	add	x0, sp, #0x8
   1dce0:	mov	w1, #0x35                  	// #53
   1dce4:	bl	cf60 <mpfr_init2@plt>
   1dce8:	ldr	w8, [x22, #8]
   1dcec:	cmp	w8, #0x1
   1dcf0:	b.lt	1dd44 <mpfr_pow@@Base+0x1dc>  // b.tstop
   1dcf4:	add	x0, sp, #0x8
   1dcf8:	mov	w2, #0x1                   	// #1
   1dcfc:	mov	x1, x22
   1dd00:	b	1dd68 <mpfr_pow@@Base+0x200>
   1dd04:	ldr	w8, [x22, #8]
   1dd08:	tbnz	w8, #31, 1dd18 <mpfr_pow@@Base+0x1b0>
   1dd0c:	mov	w1, #0x1                   	// #1
   1dd10:	b	1dd2c <mpfr_pow@@Base+0x1c4>
   1dd14:	b	1de40 <mpfr_pow@@Base+0x2d8>
   1dd18:	mov	x0, x21
   1dd1c:	bl	d1a0 <mpfr_odd_p@plt>
   1dd20:	cmp	w0, #0x0
   1dd24:	mov	w8, #0x1                   	// #1
   1dd28:	cneg	x1, x8, ne  // ne = any
   1dd2c:	mov	x0, x19
   1dd30:	mov	x2, xzr
   1dd34:	mov	w3, w20
   1dd38:	bl	bed0 <mpfr_set_si_2exp@plt>
   1dd3c:	mov	w24, w0
   1dd40:	b	1e268 <mpfr_pow@@Base+0x700>
   1dd44:	cmp	w25, #0x1
   1dd48:	mov	w8, #0x1                   	// #1
   1dd4c:	cinc	w2, w8, lt  // lt = tstop
   1dd50:	add	x0, sp, #0x8
   1dd54:	mov	x1, x22
   1dd58:	bl	c1d0 <mpfr_neg@plt>
   1dd5c:	add	x0, sp, #0x8
   1dd60:	add	x1, sp, #0x8
   1dd64:	mov	w2, #0x1                   	// #1
   1dd68:	bl	c670 <mpfr_log2@plt>
   1dd6c:	add	x0, sp, #0x8
   1dd70:	add	x1, sp, #0x8
   1dd74:	mov	w3, #0x1                   	// #1
   1dd78:	mov	x2, x21
   1dd7c:	mov	w28, #0x1                   	// #1
   1dd80:	bl	c1b0 <mpfr_mul@plt>
   1dd84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1dd88:	ldr	x1, [x0, #2768]
   1dd8c:	add	x0, x0, #0xad0
   1dd90:	blr	x1
   1dd94:	ldr	x1, [x27, x0]
   1dd98:	mov	x24, x0
   1dd9c:	add	x0, sp, #0x8
   1dda0:	mov	x2, xzr
   1dda4:	bl	c890 <mpfr_cmp_si_2exp@plt>
   1dda8:	mov	w26, w0
   1ddac:	add	x0, sp, #0x8
   1ddb0:	bl	c4f0 <mpfr_clear@plt>
   1ddb4:	ldur	w8, [x29, #-24]
   1ddb8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ddbc:	ldr	x1, [x0, #2800]
   1ddc0:	add	x0, x0, #0xaf0
   1ddc4:	blr	x1
   1ddc8:	ldur	x9, [x29, #-16]
   1ddcc:	str	w8, [x27, x0]
   1ddd0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ddd4:	ldr	x1, [x0, #2736]
   1ddd8:	add	x0, x0, #0xab0
   1dddc:	blr	x1
   1dde0:	ldur	x8, [x29, #-8]
   1dde4:	cmp	w26, #0x1
   1dde8:	str	x9, [x27, x0]
   1ddec:	str	x8, [x27, x24]
   1ddf0:	b.lt	1de04 <mpfr_pow@@Base+0x29c>  // b.tstop
   1ddf4:	ldr	w8, [x22, #8]
   1ddf8:	tbnz	w8, #31, 1de0c <mpfr_pow@@Base+0x2a4>
   1ddfc:	mov	w8, wzr
   1de00:	b	1de1c <mpfr_pow@@Base+0x2b4>
   1de04:	cbnz	w28, 1de40 <mpfr_pow@@Base+0x2d8>
   1de08:	b	1e268 <mpfr_pow@@Base+0x700>
   1de0c:	mov	x0, x21
   1de10:	bl	d1a0 <mpfr_odd_p@plt>
   1de14:	cmp	w0, #0x0
   1de18:	cset	w8, ne  // ne = any
   1de1c:	cmp	w8, #0x0
   1de20:	mov	w8, #0xffffffff            	// #-1
   1de24:	cneg	w2, w8, eq  // eq = none
   1de28:	mov	x0, x19
   1de2c:	mov	w1, w20
   1de30:	bl	c3a0 <mpfr_overflow@plt>
   1de34:	mov	w24, w0
   1de38:	mov	w28, wzr
   1de3c:	cbz	w28, 1e268 <mpfr_pow@@Base+0x700>
   1de40:	ldr	w9, [x21, #8]
   1de44:	ldr	x8, [x22, #16]
   1de48:	tbnz	w9, #31, 1de54 <mpfr_pow@@Base+0x2ec>
   1de4c:	tbz	x8, #63, 1dfa0 <mpfr_pow@@Base+0x438>
   1de50:	b	1de5c <mpfr_pow@@Base+0x2f4>
   1de54:	cmp	x8, #0x1
   1de58:	b.le	1dfa0 <mpfr_pow@@Base+0x438>
   1de5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1de60:	ldr	x1, [x0, #2800]
   1de64:	add	x0, x0, #0xaf0
   1de68:	blr	x1
   1de6c:	ldr	w9, [x27, x0]
   1de70:	stur	w9, [x29, #-24]
   1de74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1de78:	ldr	x1, [x0, #2736]
   1de7c:	add	x0, x0, #0xab0
   1de80:	blr	x1
   1de84:	ldr	x10, [x27, x0]
   1de88:	mov	x9, x0
   1de8c:	stur	x10, [x29, #-16]
   1de90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1de94:	ldr	x1, [x0, #2768]
   1de98:	add	x0, x0, #0xad0
   1de9c:	blr	x1
   1dea0:	ldr	x10, [x27, x0]
   1dea4:	mov	x12, #0x3fffffffffffffff    	// #4611686018427387903
   1dea8:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
   1deac:	mov	w13, #0x40                  	// #64
   1deb0:	mov	x14, sp
   1deb4:	mov	w15, #0x1                   	// #1
   1deb8:	str	x12, [x27, x0]
   1debc:	add	x0, sp, #0x8
   1dec0:	mov	x1, x8
   1dec4:	mov	x2, xzr
   1dec8:	mov	w3, wzr
   1decc:	str	x11, [x27, x9]
   1ded0:	str	x13, [sp, #8]
   1ded4:	str	x14, [sp, #32]
   1ded8:	stur	x10, [x29, #-8]
   1dedc:	str	w15, [sp, #16]
   1dee0:	bl	bed0 <mpfr_set_si_2exp@plt>
   1dee4:	cbnz	w0, 1e468 <mpfr_pow@@Base+0x900>
   1dee8:	ldr	w8, [x21, #8]
   1deec:	tbz	w8, #31, 1df08 <mpfr_pow@@Base+0x3a0>
   1def0:	add	x0, sp, #0x8
   1def4:	add	x1, sp, #0x8
   1def8:	mov	w2, #0x1                   	// #1
   1defc:	mov	w3, wzr
   1df00:	bl	ca00 <mpfr_sub_ui@plt>
   1df04:	cbnz	w0, 1e508 <mpfr_pow@@Base+0x9a0>
   1df08:	add	x0, sp, #0x8
   1df0c:	add	x1, sp, #0x8
   1df10:	mov	w3, #0x2                   	// #2
   1df14:	mov	x2, x21
   1df18:	bl	c1b0 <mpfr_mul@plt>
   1df1c:	ldr	w8, [x21, #8]
   1df20:	tbz	w8, #31, 1df2c <mpfr_pow@@Base+0x3c4>
   1df24:	add	x0, sp, #0x8
   1df28:	bl	c5c0 <mpfr_nextabove@plt>
   1df2c:	add	x0, sp, #0x8
   1df30:	mov	w1, #0x2                   	// #2
   1df34:	bl	c630 <mpfr_get_si@plt>
   1df38:	ldur	w9, [x29, #-24]
   1df3c:	mov	x8, x0
   1df40:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1df44:	ldr	x1, [x0, #2800]
   1df48:	add	x0, x0, #0xaf0
   1df4c:	blr	x1
   1df50:	ldur	x10, [x29, #-16]
   1df54:	str	w9, [x27, x0]
   1df58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1df5c:	ldr	x1, [x0, #2736]
   1df60:	add	x0, x0, #0xab0
   1df64:	blr	x1
   1df68:	ldur	x11, [x29, #-8]
   1df6c:	str	x10, [x27, x0]
   1df70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1df74:	ldr	x1, [x0, #2768]
   1df78:	add	x0, x0, #0xad0
   1df7c:	blr	x1
   1df80:	cmp	w20, #0x0
   1df84:	mov	w9, #0x1                   	// #1
   1df88:	cinc	x12, x9, eq  // eq = none
   1df8c:	sub	x10, x10, x12
   1df90:	cmp	x8, x10
   1df94:	str	x11, [x27, x0]
   1df98:	b.le	1e48c <mpfr_pow@@Base+0x924>
   1df9c:	cbz	w9, 1e268 <mpfr_pow@@Base+0x700>
   1dfa0:	cbz	w23, 1dfec <mpfr_pow@@Base+0x484>
   1dfa4:	ldr	x8, [x21, #16]
   1dfa8:	cmp	x8, #0x100
   1dfac:	b.gt	1dfec <mpfr_pow@@Base+0x484>
   1dfb0:	add	x0, sp, #0x8
   1dfb4:	bl	c400 <mpfr_mpz_init@plt>
   1dfb8:	add	x0, sp, #0x8
   1dfbc:	mov	x1, x21
   1dfc0:	mov	w2, wzr
   1dfc4:	bl	c260 <mpfr_get_z@plt>
   1dfc8:	add	x2, sp, #0x8
   1dfcc:	mov	x0, x19
   1dfd0:	mov	x1, x22
   1dfd4:	mov	w3, w20
   1dfd8:	bl	c350 <mpfr_pow_z@plt>
   1dfdc:	mov	w24, w0
   1dfe0:	add	x0, sp, #0x8
   1dfe4:	bl	c610 <mpfr_mpz_clear@plt>
   1dfe8:	b	1e268 <mpfr_pow@@Base+0x700>
   1dfec:	mov	x0, x22
   1dff0:	bl	c360 <mpfr_powerof2_raw@plt>
   1dff4:	cbz	w0, 1e160 <mpfr_pow@@Base+0x5f8>
   1dff8:	ldr	x23, [x22, #16]
   1dffc:	ldr	w22, [x22, #8]
   1e000:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e004:	ldr	x1, [x0, #2800]
   1e008:	add	x0, x0, #0xaf0
   1e00c:	blr	x1
   1e010:	ldr	w8, [x27, x0]
   1e014:	stur	w8, [x29, #-24]
   1e018:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e01c:	ldr	x1, [x0, #2736]
   1e020:	add	x0, x0, #0xab0
   1e024:	blr	x1
   1e028:	ldr	x9, [x27, x0]
   1e02c:	mov	x8, x0
   1e030:	stur	x9, [x29, #-16]
   1e034:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e038:	ldr	x1, [x0, #2768]
   1e03c:	add	x0, x0, #0xad0
   1e040:	blr	x1
   1e044:	ldr	x9, [x27, x0]
   1e048:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   1e04c:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   1e050:	str	x10, [x27, x8]
   1e054:	stur	x9, [x29, #-8]
   1e058:	str	x11, [x27, x0]
   1e05c:	ldr	x8, [x21]
   1e060:	add	x0, sp, #0x8
   1e064:	add	x1, x8, #0x40
   1e068:	bl	cf60 <mpfr_init2@plt>
   1e06c:	sub	x2, x23, #0x1
   1e070:	add	x0, sp, #0x8
   1e074:	mov	x1, x21
   1e078:	mov	w3, wzr
   1e07c:	bl	ce50 <mpfr_mul_si@plt>
   1e080:	cbnz	w0, 1e44c <mpfr_pow@@Base+0x8e4>
   1e084:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e088:	ldr	x1, [x0, #2800]
   1e08c:	add	x0, x0, #0xaf0
   1e090:	blr	x1
   1e094:	str	wzr, [x27, x0]
   1e098:	add	x1, sp, #0x8
   1e09c:	mov	x0, x19
   1e0a0:	mov	w2, w20
   1e0a4:	bl	d190 <mpfr_exp2@plt>
   1e0a8:	mov	w24, w0
   1e0ac:	add	x0, sp, #0x8
   1e0b0:	bl	c4f0 <mpfr_clear@plt>
   1e0b4:	tbz	w22, #31, 1e0d8 <mpfr_pow@@Base+0x570>
   1e0b8:	mov	x0, x21
   1e0bc:	bl	d1a0 <mpfr_odd_p@plt>
   1e0c0:	cbz	w0, 1e0d8 <mpfr_pow@@Base+0x570>
   1e0c4:	mov	x0, x19
   1e0c8:	mov	x1, x19
   1e0cc:	mov	w2, w20
   1e0d0:	bl	c1d0 <mpfr_neg@plt>
   1e0d4:	neg	w24, w24
   1e0d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e0dc:	ldr	x1, [x0, #2800]
   1e0e0:	add	x0, x0, #0xaf0
   1e0e4:	blr	x1
   1e0e8:	ldr	w8, [x27, x0]
   1e0ec:	ldur	w10, [x29, #-24]
   1e0f0:	ldur	x9, [x29, #-16]
   1e0f4:	orr	w8, w10, w8
   1e0f8:	stur	w8, [x29, #-24]
   1e0fc:	str	w8, [x27, x0]
   1e100:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e104:	ldr	x1, [x0, #2736]
   1e108:	add	x0, x0, #0xab0
   1e10c:	blr	x1
   1e110:	ldur	x11, [x29, #-8]
   1e114:	str	x9, [x27, x0]
   1e118:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e11c:	ldr	x1, [x0, #2768]
   1e120:	add	x0, x0, #0xad0
   1e124:	blr	x1
   1e128:	str	x11, [x27, x0]
   1e12c:	ldr	x10, [x19, #16]
   1e130:	cmp	x10, x11
   1e134:	b.gt	1e308 <mpfr_pow@@Base+0x7a0>
   1e138:	cmp	x10, x9
   1e13c:	b.lt	1e308 <mpfr_pow@@Base+0x7a0>  // b.tstop
   1e140:	cbz	w24, 1e268 <mpfr_pow@@Base+0x700>
   1e144:	orr	w8, w8, #0x8
   1e148:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e14c:	ldr	x1, [x0, #2800]
   1e150:	add	x0, x0, #0xaf0
   1e154:	blr	x1
   1e158:	str	w8, [x27, x0]
   1e15c:	b	1e268 <mpfr_pow@@Base+0x700>
   1e160:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e164:	ldr	x1, [x0, #2800]
   1e168:	add	x0, x0, #0xaf0
   1e16c:	blr	x1
   1e170:	ldr	w8, [x27, x0]
   1e174:	stur	w8, [x29, #-24]
   1e178:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e17c:	ldr	x1, [x0, #2736]
   1e180:	add	x0, x0, #0xab0
   1e184:	blr	x1
   1e188:	ldr	x9, [x27, x0]
   1e18c:	mov	x8, x0
   1e190:	stur	x9, [x29, #-16]
   1e194:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e198:	ldr	x1, [x0, #2768]
   1e19c:	add	x0, x0, #0xad0
   1e1a0:	blr	x1
   1e1a4:	ldr	x9, [x27, x0]
   1e1a8:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   1e1ac:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   1e1b0:	str	x10, [x27, x8]
   1e1b4:	stur	x9, [x29, #-8]
   1e1b8:	str	x11, [x27, x0]
   1e1bc:	ldr	w8, [x22, #8]
   1e1c0:	cmp	w8, #0x1
   1e1c4:	b.lt	1e1e0 <mpfr_pow@@Base+0x678>  // b.tstop
   1e1c8:	ldr	x8, [x22, #16]
   1e1cc:	mov	w9, #0x1                   	// #1
   1e1d0:	cmp	w25, #0x0
   1e1d4:	sub	x9, x9, x8
   1e1d8:	csel	x8, x8, x9, gt
   1e1dc:	b	1e204 <mpfr_pow@@Base+0x69c>
   1e1e0:	mov	x1, #0xffffffffffffffff    	// #-1
   1e1e4:	mov	x0, x22
   1e1e8:	mov	x2, xzr
   1e1ec:	bl	c890 <mpfr_cmp_si_2exp@plt>
   1e1f0:	ldr	x8, [x22, #16]
   1e1f4:	mov	w9, #0x1                   	// #1
   1e1f8:	cmp	w0, #0x0
   1e1fc:	sub	x9, x9, x8
   1e200:	csel	x8, x9, x8, gt
   1e204:	subs	x26, x8, #0x1
   1e208:	b.eq	1e4a4 <mpfr_pow@@Base+0x93c>  // b.none
   1e20c:	b.le	1e4ac <mpfr_pow@@Base+0x944>
   1e210:	clz	x8, x26
   1e214:	mov	w9, #0x40                  	// #64
   1e218:	sub	x8, x9, x8
   1e21c:	ldr	x9, [x21, #16]
   1e220:	add	x8, x9, x8
   1e224:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e228:	ldr	x1, [x0, #2800]
   1e22c:	add	x0, x0, #0xaf0
   1e230:	blr	x1
   1e234:	str	wzr, [x27, x0]
   1e238:	tbnz	x8, #63, 1e248 <mpfr_pow@@Base+0x6e0>
   1e23c:	mov	w9, wzr
   1e240:	cbnz	w9, 1e268 <mpfr_pow@@Base+0x700>
   1e244:	b	1e28c <mpfr_pow@@Base+0x724>
   1e248:	ldr	x9, [x19]
   1e24c:	neg	x2, x8
   1e250:	add	x8, x9, #0x1
   1e254:	cmp	x8, x2
   1e258:	b.cc	1e55c <mpfr_pow@@Base+0x9f4>  // b.lo, b.ul, b.last
   1e25c:	mov	w9, wzr
   1e260:	cbz	w9, 1e23c <mpfr_pow@@Base+0x6d4>
   1e264:	cbz	w9, 1e28c <mpfr_pow@@Base+0x724>
   1e268:	mov	w0, w24
   1e26c:	ldp	x20, x19, [sp, #144]
   1e270:	ldp	x22, x21, [sp, #128]
   1e274:	ldp	x24, x23, [sp, #112]
   1e278:	ldp	x26, x25, [sp, #96]
   1e27c:	ldp	x28, x27, [sp, #80]
   1e280:	ldp	x29, x30, [sp, #64]
   1e284:	add	sp, sp, #0xa0
   1e288:	ret
   1e28c:	sub	x5, x29, #0x18
   1e290:	mov	x0, x19
   1e294:	mov	x1, x22
   1e298:	mov	x2, x21
   1e29c:	mov	w3, w20
   1e2a0:	mov	w4, w23
   1e2a4:	bl	cbc0 <mpfr_pow_general@plt>
   1e2a8:	ldur	w8, [x29, #-24]
   1e2ac:	mov	w24, w0
   1e2b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e2b4:	ldr	x1, [x0, #2800]
   1e2b8:	add	x0, x0, #0xaf0
   1e2bc:	blr	x1
   1e2c0:	ldur	x9, [x29, #-16]
   1e2c4:	str	w8, [x27, x0]
   1e2c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e2cc:	ldr	x1, [x0, #2736]
   1e2d0:	add	x0, x0, #0xab0
   1e2d4:	blr	x1
   1e2d8:	ldur	x11, [x29, #-8]
   1e2dc:	str	x9, [x27, x0]
   1e2e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e2e4:	ldr	x1, [x0, #2768]
   1e2e8:	add	x0, x0, #0xad0
   1e2ec:	blr	x1
   1e2f0:	str	x11, [x27, x0]
   1e2f4:	ldr	x10, [x19, #16]
   1e2f8:	cmp	x10, x11
   1e2fc:	b.gt	1e308 <mpfr_pow@@Base+0x7a0>
   1e300:	cmp	x10, x9
   1e304:	b.ge	1e140 <mpfr_pow@@Base+0x5d8>  // b.tcont
   1e308:	mov	x0, x19
   1e30c:	mov	w1, w24
   1e310:	mov	w2, w20
   1e314:	bl	d020 <mpfr_check_range@plt>
   1e318:	b	1dd3c <mpfr_pow@@Base+0x1d4>
   1e31c:	ldr	x9, [x21, #16]
   1e320:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1e324:	cmp	x9, x10
   1e328:	b.eq	1e350 <mpfr_pow@@Base+0x7e8>  // b.none
   1e32c:	cmp	x8, x24
   1e330:	b.eq	1dbd4 <mpfr_pow@@Base+0x6c>  // b.none
   1e334:	cmp	x9, x24
   1e338:	b.ne	1e368 <mpfr_pow@@Base+0x800>  // b.any
   1e33c:	mov	w1, #0x1                   	// #1
   1e340:	mov	x0, x22
   1e344:	mov	x2, xzr
   1e348:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   1e34c:	cbnz	w0, 1dbd4 <mpfr_pow@@Base+0x6c>
   1e350:	mov	w1, #0x1                   	// #1
   1e354:	mov	x0, x19
   1e358:	mov	x2, xzr
   1e35c:	mov	w3, w20
   1e360:	bl	cac0 <mpfr_set_ui_2exp@plt>
   1e364:	b	1dd3c <mpfr_pow@@Base+0x1d4>
   1e368:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1e36c:	cmp	x9, x10
   1e370:	b.ne	1e3a4 <mpfr_pow@@Base+0x83c>  // b.any
   1e374:	cmp	x8, x10
   1e378:	b.ne	1e3ec <mpfr_pow@@Base+0x884>  // b.any
   1e37c:	ldr	w8, [x21, #8]
   1e380:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1e384:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1e388:	mov	w11, #0x1                   	// #1
   1e38c:	cmp	w8, #0x0
   1e390:	csel	x8, x10, x9, gt
   1e394:	mov	w24, wzr
   1e398:	str	x8, [x19, #16]
   1e39c:	str	w11, [x19, #8]
   1e3a0:	b	1e268 <mpfr_pow@@Base+0x700>
   1e3a4:	ldr	w9, [x22, #8]
   1e3a8:	mov	w20, #0x1                   	// #1
   1e3ac:	cmp	x8, x10
   1e3b0:	b.ne	1e424 <mpfr_pow@@Base+0x8bc>  // b.any
   1e3b4:	tbz	w9, #31, 1e3c8 <mpfr_pow@@Base+0x860>
   1e3b8:	mov	x0, x21
   1e3bc:	bl	d1a0 <mpfr_odd_p@plt>
   1e3c0:	cmp	w0, #0x0
   1e3c4:	cneg	w20, w20, ne  // ne = any
   1e3c8:	ldr	w8, [x21, #8]
   1e3cc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1e3d0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1e3d4:	mov	w24, wzr
   1e3d8:	cmp	w8, #0x0
   1e3dc:	csel	x8, x10, x9, gt
   1e3e0:	str	x8, [x19, #16]
   1e3e4:	str	w20, [x19, #8]
   1e3e8:	b	1e268 <mpfr_pow@@Base+0x700>
   1e3ec:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   1e3f0:	ldr	x1, [x1, #3928]
   1e3f4:	mov	x0, x22
   1e3f8:	bl	cea0 <mpfr_cmpabs@plt>
   1e3fc:	ldr	w8, [x21, #8]
   1e400:	mov	w9, #0x1                   	// #1
   1e404:	str	w9, [x19, #8]
   1e408:	mul	w8, w8, w0
   1e40c:	cmp	w8, #0x1
   1e410:	b.lt	1e4c8 <mpfr_pow@@Base+0x960>  // b.tstop
   1e414:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1e418:	mov	w24, wzr
   1e41c:	str	x8, [x19, #16]
   1e420:	b	1e268 <mpfr_pow@@Base+0x700>
   1e424:	tbz	w9, #31, 1e438 <mpfr_pow@@Base+0x8d0>
   1e428:	mov	x0, x21
   1e42c:	bl	d1a0 <mpfr_odd_p@plt>
   1e430:	cmp	w0, #0x0
   1e434:	cneg	w20, w20, ne  // ne = any
   1e438:	ldr	w8, [x21, #8]
   1e43c:	tbnz	w8, #31, 1e4d4 <mpfr_pow@@Base+0x96c>
   1e440:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1e444:	str	x8, [x19, #16]
   1e448:	b	1e4fc <mpfr_pow@@Base+0x994>
   1e44c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1e450:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1e454:	add	x0, x0, #0xe2c
   1e458:	add	x2, x2, #0xed3
   1e45c:	mov	w1, #0x289                 	// #649
   1e460:	bl	d030 <mpfr_assert_fail@plt>
   1e464:	b	1e084 <mpfr_pow@@Base+0x51c>
   1e468:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1e46c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1e470:	add	x0, x0, #0xe2c
   1e474:	add	x2, x2, #0xec8
   1e478:	mov	w1, #0x24b                 	// #587
   1e47c:	bl	d030 <mpfr_assert_fail@plt>
   1e480:	ldr	w8, [x21, #8]
   1e484:	tbz	w8, #31, 1df08 <mpfr_pow@@Base+0x3a0>
   1e488:	b	1def0 <mpfr_pow@@Base+0x388>
   1e48c:	ldr	w8, [x22, #8]
   1e490:	cmp	w20, #0x0
   1e494:	csinc	w24, w20, wzr, ne  // ne = any
   1e498:	tbnz	w8, #31, 1e524 <mpfr_pow@@Base+0x9bc>
   1e49c:	mov	w8, wzr
   1e4a0:	b	1e534 <mpfr_pow@@Base+0x9cc>
   1e4a4:	mov	x8, xzr
   1e4a8:	b	1e21c <mpfr_pow@@Base+0x6b4>
   1e4ac:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1e4b0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1e4b4:	add	x0, x0, #0xe2c
   1e4b8:	add	x2, x2, #0xee0
   1e4bc:	mov	w1, #0x2aa                 	// #682
   1e4c0:	bl	d030 <mpfr_assert_fail@plt>
   1e4c4:	b	1e210 <mpfr_pow@@Base+0x6a8>
   1e4c8:	tbz	w8, #31, 1e350 <mpfr_pow@@Base+0x7e8>
   1e4cc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1e4d0:	b	1e418 <mpfr_pow@@Base+0x8b0>
   1e4d4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1e4d8:	str	x8, [x19, #16]
   1e4dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e4e0:	ldr	x1, [x0, #2800]
   1e4e4:	add	x0, x0, #0xaf0
   1e4e8:	blr	x1
   1e4ec:	mrs	x8, tpidr_el0
   1e4f0:	ldr	w9, [x8, x0]
   1e4f4:	orr	w9, w9, #0x20
   1e4f8:	str	w9, [x8, x0]
   1e4fc:	mov	w24, wzr
   1e500:	str	w20, [x19, #8]
   1e504:	b	1e268 <mpfr_pow@@Base+0x700>
   1e508:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1e50c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1e510:	add	x0, x0, #0xe2c
   1e514:	add	x2, x2, #0xec8
   1e518:	mov	w1, #0x24f                 	// #591
   1e51c:	bl	d030 <mpfr_assert_fail@plt>
   1e520:	b	1df08 <mpfr_pow@@Base+0x3a0>
   1e524:	mov	x0, x21
   1e528:	bl	d1a0 <mpfr_odd_p@plt>
   1e52c:	cmp	w0, #0x0
   1e530:	cset	w8, ne  // ne = any
   1e534:	cmp	w8, #0x0
   1e538:	mov	w8, #0xffffffff            	// #-1
   1e53c:	cneg	w2, w8, eq  // eq = none
   1e540:	mov	x0, x19
   1e544:	mov	w1, w24
   1e548:	bl	c880 <mpfr_underflow@plt>
   1e54c:	mov	w24, w0
   1e550:	mov	w9, wzr
   1e554:	cbnz	w9, 1dfa0 <mpfr_pow@@Base+0x438>
   1e558:	b	1e268 <mpfr_pow@@Base+0x700>
   1e55c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e560:	ldr	x1, [x0, #2800]
   1e564:	add	x0, x0, #0xaf0
   1e568:	blr	x1
   1e56c:	str	wzr, [x27, x0]
   1e570:	ldr	w8, [x21, #8]
   1e574:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   1e578:	ldr	x1, [x1, #3928]
   1e57c:	mov	x0, x19
   1e580:	cmp	w8, #0x0
   1e584:	cset	w8, gt
   1e588:	eor	w3, w8, w25, lsr #31
   1e58c:	mov	w4, w20
   1e590:	bl	ca10 <mpfr_round_near_x@plt>
   1e594:	cbz	w0, 1e62c <mpfr_pow@@Base+0xac4>
   1e598:	mov	w8, w0
   1e59c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e5a0:	ldr	x1, [x0, #2800]
   1e5a4:	add	x0, x0, #0xaf0
   1e5a8:	blr	x1
   1e5ac:	ldr	w9, [x27, x0]
   1e5b0:	ldur	w11, [x29, #-24]
   1e5b4:	ldur	x10, [x29, #-16]
   1e5b8:	orr	w9, w11, w9
   1e5bc:	stur	w9, [x29, #-24]
   1e5c0:	str	w9, [x27, x0]
   1e5c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e5c8:	ldr	x1, [x0, #2736]
   1e5cc:	add	x0, x0, #0xab0
   1e5d0:	blr	x1
   1e5d4:	ldur	x12, [x29, #-8]
   1e5d8:	str	x10, [x27, x0]
   1e5dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e5e0:	ldr	x1, [x0, #2768]
   1e5e4:	add	x0, x0, #0xad0
   1e5e8:	blr	x1
   1e5ec:	str	x12, [x27, x0]
   1e5f0:	ldr	x11, [x19, #16]
   1e5f4:	cmp	x11, x12
   1e5f8:	b.gt	1e638 <mpfr_pow@@Base+0xad0>
   1e5fc:	cmp	x11, x10
   1e600:	b.lt	1e638 <mpfr_pow@@Base+0xad0>  // b.tstop
   1e604:	orr	w9, w9, #0x8
   1e608:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e60c:	ldr	x1, [x0, #2800]
   1e610:	add	x0, x0, #0xaf0
   1e614:	blr	x1
   1e618:	str	w9, [x27, x0]
   1e61c:	mov	w9, #0x1                   	// #1
   1e620:	mov	w24, w8
   1e624:	cbnz	w9, 1e260 <mpfr_pow@@Base+0x6f8>
   1e628:	b	1e25c <mpfr_pow@@Base+0x6f4>
   1e62c:	mov	w9, wzr
   1e630:	cbnz	w9, 1e260 <mpfr_pow@@Base+0x6f8>
   1e634:	b	1e25c <mpfr_pow@@Base+0x6f4>
   1e638:	mov	x0, x19
   1e63c:	mov	w1, w8
   1e640:	mov	w2, w20
   1e644:	bl	d020 <mpfr_check_range@plt>
   1e648:	mov	w24, w0
   1e64c:	mov	w9, #0x1                   	// #1
   1e650:	cbnz	w9, 1e260 <mpfr_pow@@Base+0x6f8>
   1e654:	b	1e25c <mpfr_pow@@Base+0x6f4>

000000000001e658 <mpfr_pow_si@@Base>:
   1e658:	sub	sp, sp, #0x100
   1e65c:	stp	x26, x25, [sp, #192]
   1e660:	stp	x22, x21, [sp, #224]
   1e664:	stp	x20, x19, [sp, #240]
   1e668:	mov	w20, w3
   1e66c:	mov	x25, x2
   1e670:	mov	x22, x1
   1e674:	mov	x21, x0
   1e678:	stp	x29, x30, [sp, #160]
   1e67c:	stp	x28, x27, [sp, #176]
   1e680:	stp	x24, x23, [sp, #208]
   1e684:	add	x29, sp, #0xa0
   1e688:	tbnz	x2, #63, 1e6c8 <mpfr_pow_si@@Base+0x70>
   1e68c:	mov	x0, x21
   1e690:	mov	x1, x22
   1e694:	mov	x2, x25
   1e698:	mov	w3, w20
   1e69c:	bl	c3d0 <mpfr_pow_ui@plt>
   1e6a0:	mov	w10, w0
   1e6a4:	ldp	x20, x19, [sp, #240]
   1e6a8:	ldp	x22, x21, [sp, #224]
   1e6ac:	ldp	x24, x23, [sp, #208]
   1e6b0:	ldp	x26, x25, [sp, #192]
   1e6b4:	ldp	x28, x27, [sp, #176]
   1e6b8:	ldp	x29, x30, [sp, #160]
   1e6bc:	mov	w0, w10
   1e6c0:	add	sp, sp, #0x100
   1e6c4:	ret
   1e6c8:	ldr	x8, [x22, #16]
   1e6cc:	mov	x19, #0x2                   	// #2
   1e6d0:	movk	x19, #0x8000, lsl #48
   1e6d4:	add	x9, x19, #0x2
   1e6d8:	cmp	x8, x9
   1e6dc:	b.lt	1ebf0 <mpfr_pow_si@@Base+0x598>  // b.tstop
   1e6e0:	ldrsw	x1, [x22, #8]
   1e6e4:	sub	x2, x8, #0x1
   1e6e8:	mov	x0, x22
   1e6ec:	bl	c890 <mpfr_cmp_si_2exp@plt>
   1e6f0:	cbz	w0, 1e7b8 <mpfr_pow_si@@Base+0x160>
   1e6f4:	ldr	x27, [x21]
   1e6f8:	neg	x23, x25
   1e6fc:	str	x21, [sp, #48]
   1e700:	clz	x21, x23
   1e704:	subs	x24, x27, #0x1
   1e708:	str	x25, [sp, #16]
   1e70c:	b.eq	1ec24 <mpfr_pow_si@@Base+0x5cc>  // b.none
   1e710:	b.le	1ec2c <mpfr_pow_si@@Base+0x5d4>
   1e714:	clz	x8, x24
   1e718:	mov	w9, #0x40                  	// #64
   1e71c:	sub	x8, x9, x8
   1e720:	sub	x9, x27, x21
   1e724:	add	x8, x9, x8
   1e728:	add	x24, x8, #0x43
   1e72c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e730:	ldr	x1, [x0, #2800]
   1e734:	add	x0, x0, #0xaf0
   1e738:	blr	x1
   1e73c:	mrs	x25, tpidr_el0
   1e740:	ldr	w8, [x25, x0]
   1e744:	str	w8, [sp, #60]
   1e748:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e74c:	ldr	x1, [x0, #2736]
   1e750:	add	x0, x0, #0xab0
   1e754:	blr	x1
   1e758:	ldr	x9, [x25, x0]
   1e75c:	mov	x8, x0
   1e760:	str	x9, [sp, #40]
   1e764:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e768:	ldr	x1, [x0, #2768]
   1e76c:	add	x0, x0, #0xad0
   1e770:	blr	x1
   1e774:	ldr	x9, [x25, x0]
   1e778:	mov	x1, x24
   1e77c:	str	x9, [sp, #32]
   1e780:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   1e784:	str	x9, [x25, x8]
   1e788:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   1e78c:	str	x8, [x25, x0]
   1e790:	sub	x0, x29, #0x20
   1e794:	bl	cf60 <mpfr_init2@plt>
   1e798:	ldr	x8, [x22, #16]
   1e79c:	cmp	x8, #0x1
   1e7a0:	b.lt	1e85c <mpfr_pow_si@@Base+0x204>  // b.tstop
   1e7a4:	ldr	w8, [x22, #8]
   1e7a8:	cmp	w8, #0x0
   1e7ac:	mov	w8, #0x2                   	// #2
   1e7b0:	cinc	w26, w8, le
   1e7b4:	b	1e860 <mpfr_pow_si@@Base+0x208>
   1e7b8:	ldr	x9, [x22, #16]
   1e7bc:	cmn	x25, #0x1
   1e7c0:	sub	x8, x9, #0x1
   1e7c4:	b.eq	1e808 <mpfr_pow_si@@Base+0x1b0>  // b.none
   1e7c8:	cmp	x9, #0x2
   1e7cc:	b.lt	1e808 <mpfr_pow_si@@Base+0x1b0>  // b.tstop
   1e7d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e7d4:	ldr	x1, [x0, #2736]
   1e7d8:	add	x0, x0, #0xab0
   1e7dc:	blr	x1
   1e7e0:	mrs	x10, tpidr_el0
   1e7e4:	ldr	x10, [x10, x0]
   1e7e8:	sub	x10, x10, #0x1
   1e7ec:	sdiv	x10, x10, x25
   1e7f0:	cmp	x8, x10
   1e7f4:	b.le	1e808 <mpfr_pow_si@@Base+0x1b0>
   1e7f8:	mov	x2, #0xbfffffffffffffff    	// #-4611686018427387905
   1e7fc:	tbz	w25, #0, 1e848 <mpfr_pow_si@@Base+0x1f0>
   1e800:	ldrsw	x1, [x22, #8]
   1e804:	b	1e84c <mpfr_pow_si@@Base+0x1f4>
   1e808:	cmn	x25, #0x1
   1e80c:	b.eq	1e840 <mpfr_pow_si@@Base+0x1e8>  // b.none
   1e810:	cmp	x9, #0x0
   1e814:	b.gt	1e840 <mpfr_pow_si@@Base+0x1e8>
   1e818:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e81c:	ldr	x1, [x0, #2768]
   1e820:	add	x0, x0, #0xad0
   1e824:	blr	x1
   1e828:	mrs	x10, tpidr_el0
   1e82c:	ldr	x10, [x10, x0]
   1e830:	sub	x10, x10, #0x1
   1e834:	sdiv	x10, x10, x25
   1e838:	cmp	x9, x10
   1e83c:	b.le	1ebe4 <mpfr_pow_si@@Base+0x58c>
   1e840:	mul	x2, x8, x25
   1e844:	tbnz	w25, #0, 1e800 <mpfr_pow_si@@Base+0x1a8>
   1e848:	mov	w1, #0x1                   	// #1
   1e84c:	mov	x0, x21
   1e850:	mov	w3, w20
   1e854:	bl	bed0 <mpfr_set_si_2exp@plt>
   1e858:	b	1e6a0 <mpfr_pow_si@@Base+0x48>
   1e85c:	mov	w26, #0x1                   	// #1
   1e860:	cmp	w20, #0x0
   1e864:	sub	x21, x21, #0x42
   1e868:	mov	w8, #0x40                  	// #64
   1e86c:	cinc	x27, x27, eq  // eq = none
   1e870:	str	x8, [sp, #24]
   1e874:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e878:	ldr	x1, [x0, #2800]
   1e87c:	add	x0, x0, #0xaf0
   1e880:	blr	x1
   1e884:	mov	x28, x0
   1e888:	str	wzr, [x25, x0]
   1e88c:	sub	x0, x29, #0x20
   1e890:	mov	w1, #0x1                   	// #1
   1e894:	mov	x2, x22
   1e898:	mov	w3, w26
   1e89c:	bl	c7b0 <mpfr_ui_div@plt>
   1e8a0:	ldrb	w8, [x25, x28]
   1e8a4:	tbnz	w8, #1, 1e92c <mpfr_pow_si@@Base+0x2d4>
   1e8a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e8ac:	ldr	x1, [x0, #2800]
   1e8b0:	add	x0, x0, #0xaf0
   1e8b4:	blr	x1
   1e8b8:	mov	x28, x0
   1e8bc:	str	wzr, [x25, x0]
   1e8c0:	sub	x0, x29, #0x20
   1e8c4:	sub	x1, x29, #0x20
   1e8c8:	mov	x2, x23
   1e8cc:	mov	w3, w20
   1e8d0:	bl	c3d0 <mpfr_pow_ui@plt>
   1e8d4:	ldr	w8, [x25, x28]
   1e8d8:	tbnz	w8, #1, 1e92c <mpfr_pow_si@@Base+0x2d4>
   1e8dc:	tbnz	w8, #0, 1e9dc <mpfr_pow_si@@Base+0x384>
   1e8e0:	ldur	x8, [x29, #-16]
   1e8e4:	add	x9, x19, #0x2
   1e8e8:	cmp	x8, x9
   1e8ec:	b.lt	1e988 <mpfr_pow_si@@Base+0x330>  // b.tstop
   1e8f0:	ldur	x8, [x29, #-32]
   1e8f4:	ldur	x0, [x29, #-8]
   1e8f8:	add	x2, x21, x24
   1e8fc:	mov	x3, x27
   1e900:	sub	x9, x8, #0x1
   1e904:	add	x8, x8, #0x3e
   1e908:	cmp	x9, #0x0
   1e90c:	csel	x8, x8, x9, lt  // lt = tstop
   1e910:	asr	x8, x8, #6
   1e914:	add	x1, x8, #0x1
   1e918:	bl	c830 <mpfr_round_p@plt>
   1e91c:	cbz	w0, 1e988 <mpfr_pow_si@@Base+0x330>
   1e920:	mov	w8, #0x8                   	// #8
   1e924:	cbz	w8, 1e874 <mpfr_pow_si@@Base+0x21c>
   1e928:	b	1eb1c <mpfr_pow_si@@Base+0x4c4>
   1e92c:	sub	x0, x29, #0x20
   1e930:	bl	c4f0 <mpfr_clear@plt>
   1e934:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e938:	ldr	x1, [x0, #2800]
   1e93c:	add	x0, x0, #0xaf0
   1e940:	blr	x1
   1e944:	ldr	w8, [sp, #60]
   1e948:	str	w8, [x25, x0]
   1e94c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e950:	ldr	x1, [x0, #2736]
   1e954:	add	x0, x0, #0xab0
   1e958:	blr	x1
   1e95c:	ldr	x8, [sp, #40]
   1e960:	str	x8, [x25, x0]
   1e964:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e968:	ldr	x1, [x0, #2768]
   1e96c:	add	x0, x0, #0xad0
   1e970:	blr	x1
   1e974:	ldr	x8, [sp, #32]
   1e978:	str	x8, [x25, x0]
   1e97c:	tbnz	w23, #0, 1e9c8 <mpfr_pow_si@@Base+0x370>
   1e980:	mov	w2, #0x1                   	// #1
   1e984:	b	1e9cc <mpfr_pow_si@@Base+0x374>
   1e988:	ldr	x9, [sp, #24]
   1e98c:	sub	x8, x19, x24
   1e990:	sub	x8, x8, #0x103
   1e994:	cmp	x9, x8
   1e998:	mov	x8, x9
   1e99c:	b.gt	1eae0 <mpfr_pow_si@@Base+0x488>
   1e9a0:	add	x24, x24, x8
   1e9a4:	cmp	x24, #0x0
   1e9a8:	cinc	x8, x24, lt  // lt = tstop
   1e9ac:	asr	x8, x8, #1
   1e9b0:	sub	x0, x29, #0x20
   1e9b4:	mov	x1, x24
   1e9b8:	str	x8, [sp, #24]
   1e9bc:	bl	c330 <mpfr_set_prec@plt>
   1e9c0:	mov	w8, wzr
   1e9c4:	b	1e924 <mpfr_pow_si@@Base+0x2cc>
   1e9c8:	ldr	w2, [x22, #8]
   1e9cc:	ldr	x0, [sp, #48]
   1e9d0:	mov	w1, w20
   1e9d4:	bl	c3a0 <mpfr_overflow@plt>
   1e9d8:	b	1ead4 <mpfr_pow_si@@Base+0x47c>
   1e9dc:	sub	x0, x29, #0x20
   1e9e0:	bl	c4f0 <mpfr_clear@plt>
   1e9e4:	cbz	w20, 1ea3c <mpfr_pow_si@@Base+0x3e4>
   1e9e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1e9ec:	ldr	x1, [x0, #2800]
   1e9f0:	add	x0, x0, #0xaf0
   1e9f4:	blr	x1
   1e9f8:	ldr	w8, [sp, #60]
   1e9fc:	str	w8, [x25, x0]
   1ea00:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ea04:	ldr	x1, [x0, #2736]
   1ea08:	add	x0, x0, #0xab0
   1ea0c:	blr	x1
   1ea10:	ldr	x8, [sp, #40]
   1ea14:	str	x8, [x25, x0]
   1ea18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ea1c:	ldr	x1, [x0, #2768]
   1ea20:	add	x0, x0, #0xad0
   1ea24:	blr	x1
   1ea28:	ldr	x8, [sp, #32]
   1ea2c:	str	x8, [x25, x0]
   1ea30:	tbnz	w23, #0, 1eac4 <mpfr_pow_si@@Base+0x46c>
   1ea34:	mov	w2, #0x1                   	// #1
   1ea38:	b	1eac8 <mpfr_pow_si@@Base+0x470>
   1ea3c:	sub	x0, x29, #0x40
   1ea40:	mov	w1, #0x2                   	// #2
   1ea44:	bl	cf60 <mpfr_init2@plt>
   1ea48:	add	x0, sp, #0x40
   1ea4c:	mov	w1, #0x40                  	// #64
   1ea50:	bl	cf60 <mpfr_init2@plt>
   1ea54:	ldr	x1, [sp, #16]
   1ea58:	add	x0, sp, #0x40
   1ea5c:	mov	x2, xzr
   1ea60:	mov	w3, wzr
   1ea64:	bl	bed0 <mpfr_set_si_2exp@plt>
   1ea68:	cbnz	w0, 1eb00 <mpfr_pow_si@@Base+0x4a8>
   1ea6c:	sub	x0, x29, #0x40
   1ea70:	add	x2, sp, #0x40
   1ea74:	mov	w4, #0x1                   	// #1
   1ea78:	mov	x1, x22
   1ea7c:	mov	w3, wzr
   1ea80:	mov	x5, xzr
   1ea84:	bl	cbc0 <mpfr_pow_general@plt>
   1ea88:	str	w0, [sp, #12]
   1ea8c:	add	x0, sp, #0x40
   1ea90:	bl	c4f0 <mpfr_clear@plt>
   1ea94:	ldur	w3, [x29, #-56]
   1ea98:	ldr	x0, [sp, #48]
   1ea9c:	sub	x1, x29, #0x40
   1eaa0:	mov	w2, wzr
   1eaa4:	bl	cb70 <mpfr_set4@plt>
   1eaa8:	sub	x0, x29, #0x40
   1eaac:	bl	c4f0 <mpfr_clear@plt>
   1eab0:	ldr	w8, [sp, #60]
   1eab4:	orr	w8, w8, #0x1
   1eab8:	str	w8, [sp, #60]
   1eabc:	mov	w8, #0x13                  	// #19
   1eac0:	b	1e924 <mpfr_pow_si@@Base+0x2cc>
   1eac4:	ldr	w2, [x22, #8]
   1eac8:	ldr	x0, [sp, #48]
   1eacc:	mov	w1, w20
   1ead0:	bl	c880 <mpfr_underflow@plt>
   1ead4:	str	w0, [sp, #8]
   1ead8:	mov	w8, #0x1                   	// #1
   1eadc:	b	1e924 <mpfr_pow_si@@Base+0x2cc>
   1eae0:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1eae4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1eae8:	mov	w1, #0xed                  	// #237
   1eaec:	add	x0, x0, #0xeeb
   1eaf0:	add	x2, x2, #0x154
   1eaf4:	bl	d030 <mpfr_assert_fail@plt>
   1eaf8:	ldr	x8, [sp, #24]
   1eafc:	b	1e9a0 <mpfr_pow_si@@Base+0x348>
   1eb00:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1eb04:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1eb08:	mov	w1, #0xd8                  	// #216
   1eb0c:	add	x0, x0, #0xeeb
   1eb10:	add	x2, x2, #0xed3
   1eb14:	bl	d030 <mpfr_assert_fail@plt>
   1eb18:	b	1ea6c <mpfr_pow_si@@Base+0x414>
   1eb1c:	cmp	w8, #0x13
   1eb20:	b.eq	1eb58 <mpfr_pow_si@@Base+0x500>  // b.none
   1eb24:	ldr	x19, [sp, #48]
   1eb28:	ldr	w21, [sp, #60]
   1eb2c:	cmp	w8, #0x8
   1eb30:	b.ne	1ebdc <mpfr_pow_si@@Base+0x584>  // b.any
   1eb34:	ldur	w3, [x29, #-24]
   1eb38:	sub	x1, x29, #0x20
   1eb3c:	mov	x0, x19
   1eb40:	mov	w2, w20
   1eb44:	bl	cb70 <mpfr_set4@plt>
   1eb48:	str	w0, [sp, #12]
   1eb4c:	sub	x0, x29, #0x20
   1eb50:	bl	c4f0 <mpfr_clear@plt>
   1eb54:	b	1eb60 <mpfr_pow_si@@Base+0x508>
   1eb58:	ldr	x19, [sp, #48]
   1eb5c:	ldr	w21, [sp, #60]
   1eb60:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1eb64:	ldr	x1, [x0, #2800]
   1eb68:	add	x0, x0, #0xaf0
   1eb6c:	blr	x1
   1eb70:	str	w21, [x25, x0]
   1eb74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1eb78:	ldr	x1, [x0, #2736]
   1eb7c:	add	x0, x0, #0xab0
   1eb80:	blr	x1
   1eb84:	ldr	x9, [sp, #40]
   1eb88:	str	x9, [x25, x0]
   1eb8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1eb90:	ldr	x1, [x0, #2768]
   1eb94:	add	x0, x0, #0xad0
   1eb98:	blr	x1
   1eb9c:	ldr	x10, [sp, #32]
   1eba0:	str	x10, [x25, x0]
   1eba4:	ldr	x8, [x19, #16]
   1eba8:	cmp	x8, x10
   1ebac:	b.gt	1ec78 <mpfr_pow_si@@Base+0x620>
   1ebb0:	cmp	x8, x9
   1ebb4:	b.lt	1ec78 <mpfr_pow_si@@Base+0x620>  // b.tstop
   1ebb8:	ldr	w10, [sp, #12]
   1ebbc:	cbz	w10, 1e6a4 <mpfr_pow_si@@Base+0x4c>
   1ebc0:	orr	w8, w21, #0x8
   1ebc4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ebc8:	ldr	x1, [x0, #2800]
   1ebcc:	add	x0, x0, #0xaf0
   1ebd0:	blr	x1
   1ebd4:	str	w8, [x25, x0]
   1ebd8:	b	1e6a4 <mpfr_pow_si@@Base+0x4c>
   1ebdc:	ldr	w10, [sp, #8]
   1ebe0:	b	1e6a4 <mpfr_pow_si@@Base+0x4c>
   1ebe4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1ebe8:	tbz	w25, #0, 1e848 <mpfr_pow_si@@Base+0x1f0>
   1ebec:	b	1e800 <mpfr_pow_si@@Base+0x1a8>
   1ebf0:	cmp	x8, x19
   1ebf4:	b.ne	1ec48 <mpfr_pow_si@@Base+0x5f0>  // b.any
   1ebf8:	str	x19, [x21, #16]
   1ebfc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ec00:	ldr	x1, [x0, #2800]
   1ec04:	add	x0, x0, #0xaf0
   1ec08:	blr	x1
   1ec0c:	mrs	x8, tpidr_el0
   1ec10:	ldr	w9, [x8, x0]
   1ec14:	mov	w10, wzr
   1ec18:	orr	w9, w9, #0x4
   1ec1c:	str	w9, [x8, x0]
   1ec20:	b	1e6a4 <mpfr_pow_si@@Base+0x4c>
   1ec24:	mov	x8, xzr
   1ec28:	b	1e720 <mpfr_pow_si@@Base+0xc8>
   1ec2c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1ec30:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1ec34:	add	x0, x0, #0xeeb
   1ec38:	add	x2, x2, #0x14b
   1ec3c:	mov	w1, #0x9d                  	// #157
   1ec40:	bl	d030 <mpfr_assert_fail@plt>
   1ec44:	b	1e714 <mpfr_pow_si@@Base+0xbc>
   1ec48:	ldr	w10, [x22, #8]
   1ec4c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1ec50:	cmp	w10, #0x0
   1ec54:	cset	w10, gt
   1ec58:	tst	x25, #0x1
   1ec5c:	cset	w11, eq  // eq = none
   1ec60:	cmp	x8, x9
   1ec64:	orr	w8, w11, w10
   1ec68:	b.ne	1ec8c <mpfr_pow_si@@Base+0x634>  // b.any
   1ec6c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1ec70:	str	x9, [x21, #16]
   1ec74:	b	1ecb0 <mpfr_pow_si@@Base+0x658>
   1ec78:	ldr	w1, [sp, #12]
   1ec7c:	mov	x0, x19
   1ec80:	mov	w2, w20
   1ec84:	bl	d020 <mpfr_check_range@plt>
   1ec88:	b	1e6a0 <mpfr_pow_si@@Base+0x48>
   1ec8c:	str	x9, [x21, #16]
   1ec90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ec94:	ldr	x1, [x0, #2800]
   1ec98:	add	x0, x0, #0xaf0
   1ec9c:	blr	x1
   1eca0:	mrs	x9, tpidr_el0
   1eca4:	ldr	w10, [x9, x0]
   1eca8:	orr	w10, w10, #0x20
   1ecac:	str	w10, [x9, x0]
   1ecb0:	cmp	w8, #0x0
   1ecb4:	mov	w8, #0x1                   	// #1
   1ecb8:	cneg	w8, w8, eq  // eq = none
   1ecbc:	mov	w10, wzr
   1ecc0:	str	w8, [x21, #8]
   1ecc4:	b	1e6a4 <mpfr_pow_si@@Base+0x4c>

000000000001ecc8 <mpfr_pow_ui@@Base>:
   1ecc8:	sub	sp, sp, #0xd0
   1eccc:	stp	x29, x30, [sp, #112]
   1ecd0:	stp	x28, x27, [sp, #128]
   1ecd4:	stp	x26, x25, [sp, #144]
   1ecd8:	stp	x24, x23, [sp, #160]
   1ecdc:	stp	x22, x21, [sp, #176]
   1ece0:	stp	x20, x19, [sp, #192]
   1ece4:	add	x29, sp, #0x70
   1ece8:	str	w3, [sp, #36]
   1ecec:	str	x0, [sp, #56]
   1ecf0:	cbz	x2, 1f07c <mpfr_pow_ui@@Base+0x3b4>
   1ecf4:	ldr	x9, [x1, #16]
   1ecf8:	mov	x8, #0x4                   	// #4
   1ecfc:	movk	x8, #0x8000, lsl #48
   1ed00:	mov	x22, x2
   1ed04:	mov	x21, x1
   1ed08:	cmp	x9, x8
   1ed0c:	b.lt	1f090 <mpfr_pow_ui@@Base+0x3c8>  // b.tstop
   1ed10:	cmp	x22, #0x2
   1ed14:	b.ls	1f0e8 <mpfr_pow_ui@@Base+0x420>  // b.plast
   1ed18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ed1c:	ldr	x1, [x0, #2800]
   1ed20:	add	x0, x0, #0xaf0
   1ed24:	blr	x1
   1ed28:	mrs	x28, tpidr_el0
   1ed2c:	ldr	w20, [x28, x0]
   1ed30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ed34:	ldr	x1, [x0, #2736]
   1ed38:	add	x0, x0, #0xab0
   1ed3c:	blr	x1
   1ed40:	ldr	x23, [x28, x0]
   1ed44:	mov	x8, x0
   1ed48:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ed4c:	ldr	x1, [x0, #2768]
   1ed50:	add	x0, x0, #0xad0
   1ed54:	blr	x1
   1ed58:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   1ed5c:	str	x9, [x28, x8]
   1ed60:	ldr	x8, [sp, #56]
   1ed64:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   1ed68:	ldr	x24, [x28, x0]
   1ed6c:	str	x10, [x28, x0]
   1ed70:	ldr	x8, [x8]
   1ed74:	str	w20, [sp, #32]
   1ed78:	stp	x24, x23, [sp, #16]
   1ed7c:	cmp	x8, #0x1
   1ed80:	add	x19, x8, #0x43
   1ed84:	b.eq	1f100 <mpfr_pow_ui@@Base+0x438>  // b.none
   1ed88:	b.le	1f108 <mpfr_pow_ui@@Base+0x440>
   1ed8c:	ldr	x8, [sp, #56]
   1ed90:	mov	w9, #0x40                  	// #64
   1ed94:	ldr	x8, [x8]
   1ed98:	sub	x8, x8, #0x1
   1ed9c:	clz	x8, x8
   1eda0:	sub	x8, x9, x8
   1eda4:	add	x1, x19, x8
   1eda8:	sub	x0, x29, #0x20
   1edac:	str	x1, [sp, #48]
   1edb0:	bl	cf60 <mpfr_init2@plt>
   1edb4:	ldr	w8, [x21, #8]
   1edb8:	mov	w9, #0x2                   	// #2
   1edbc:	mov	w10, #0x40                  	// #64
   1edc0:	mov	w26, #0x27                  	// #39
   1edc4:	cmp	w8, #0x0
   1edc8:	ldr	w8, [sp, #36]
   1edcc:	cinc	w25, w9, le
   1edd0:	str	x10, [sp, #8]
   1edd4:	cmp	w8, #0x0
   1edd8:	cset	w8, eq  // eq = none
   1eddc:	str	x8, [sp, #40]
   1ede0:	b	1edec <mpfr_pow_ui@@Base+0x124>
   1ede4:	mov	w8, wzr
   1ede8:	tbz	w8, #0, 1efb4 <mpfr_pow_ui@@Base+0x2ec>
   1edec:	mov	w23, #0xfffffffd            	// #-3
   1edf0:	mov	w24, #0x1                   	// #1
   1edf4:	mov	x8, x22
   1edf8:	lsr	x8, x8, #1
   1edfc:	add	w23, w23, #0x1
   1ee00:	add	x24, x24, #0x1
   1ee04:	cbnz	x8, 1edf8 <mpfr_pow_ui@@Base+0x130>
   1ee08:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ee0c:	ldr	x1, [x0, #2800]
   1ee10:	add	x0, x0, #0xaf0
   1ee14:	blr	x1
   1ee18:	str	wzr, [x28, x0]
   1ee1c:	sub	x0, x29, #0x20
   1ee20:	mov	w3, #0x2                   	// #2
   1ee24:	mov	x1, x21
   1ee28:	mov	x2, x21
   1ee2c:	bl	c1b0 <mpfr_mul@plt>
   1ee30:	add	w8, w23, #0x1
   1ee34:	mov	w27, w0
   1ee38:	lsr	x8, x22, x8
   1ee3c:	add	w20, w23, #0x2
   1ee40:	tbz	w8, #0, 1ee5c <mpfr_pow_ui@@Base+0x194>
   1ee44:	sub	x0, x29, #0x20
   1ee48:	sub	x1, x29, #0x20
   1ee4c:	mov	x2, x21
   1ee50:	mov	w3, w25
   1ee54:	bl	c1b0 <mpfr_mul@plt>
   1ee58:	orr	w27, w0, w27
   1ee5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1ee60:	ldr	x1, [x0, #2800]
   1ee64:	add	x0, x0, #0xaf0
   1ee68:	blr	x1
   1ee6c:	ldr	w19, [x28, x0]
   1ee70:	cmp	w20, #0x2
   1ee74:	b.cc	1eee0 <mpfr_pow_ui@@Base+0x218>  // b.lo, b.ul, b.last
   1ee78:	and	w8, w19, w26
   1ee7c:	cbnz	w8, 1eee0 <mpfr_pow_ui@@Base+0x218>
   1ee80:	mov	w23, w23
   1ee84:	sub	x0, x29, #0x20
   1ee88:	sub	x1, x29, #0x20
   1ee8c:	sub	x2, x29, #0x20
   1ee90:	mov	w3, #0x2                   	// #2
   1ee94:	bl	c1b0 <mpfr_mul@plt>
   1ee98:	lsr	x8, x22, x23
   1ee9c:	orr	w27, w0, w27
   1eea0:	tbz	w8, #0, 1eebc <mpfr_pow_ui@@Base+0x1f4>
   1eea4:	sub	x0, x29, #0x20
   1eea8:	sub	x1, x29, #0x20
   1eeac:	mov	x2, x21
   1eeb0:	mov	w3, w25
   1eeb4:	bl	c1b0 <mpfr_mul@plt>
   1eeb8:	orr	w27, w0, w27
   1eebc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1eec0:	ldr	x1, [x0, #2800]
   1eec4:	add	x0, x0, #0xaf0
   1eec8:	blr	x1
   1eecc:	ldr	w19, [x28, x0]
   1eed0:	subs	x23, x23, #0x1
   1eed4:	b.lt	1eee0 <mpfr_pow_ui@@Base+0x218>  // b.tstop
   1eed8:	and	w8, w19, w26
   1eedc:	cbz	w8, 1ee84 <mpfr_pow_ui@@Base+0x1bc>
   1eee0:	mov	w8, wzr
   1eee4:	cbz	w27, 1ede8 <mpfr_pow_ui@@Base+0x120>
   1eee8:	and	w9, w19, #0x3
   1eeec:	cbnz	w9, 1ede8 <mpfr_pow_ui@@Base+0x120>
   1eef0:	ldur	x8, [x29, #-16]
   1eef4:	mov	x9, #0x4                   	// #4
   1eef8:	movk	x9, #0x8000, lsl #48
   1eefc:	cmp	x8, x9
   1ef00:	b.lt	1ef44 <mpfr_pow_ui@@Base+0x27c>  // b.tstop
   1ef04:	ldur	x8, [x29, #-32]
   1ef08:	ldr	x9, [sp, #48]
   1ef0c:	ldur	x0, [x29, #-8]
   1ef10:	sub	x10, x8, #0x1
   1ef14:	sub	x2, x9, x24
   1ef18:	ldr	x9, [sp, #56]
   1ef1c:	add	x8, x8, #0x3e
   1ef20:	cmp	x10, #0x0
   1ef24:	csel	x8, x8, x10, lt  // lt = tstop
   1ef28:	asr	x8, x8, #6
   1ef2c:	ldr	x9, [x9]
   1ef30:	add	x1, x8, #0x1
   1ef34:	ldr	x8, [sp, #40]
   1ef38:	add	x3, x9, x8
   1ef3c:	bl	c830 <mpfr_round_p@plt>
   1ef40:	cbnz	w0, 1ede4 <mpfr_pow_ui@@Base+0x11c>
   1ef44:	ldr	x1, [sp, #48]
   1ef48:	mov	x8, #0x4                   	// #4
   1ef4c:	ldr	x9, [sp, #8]
   1ef50:	movk	x8, #0x8000, lsl #48
   1ef54:	sub	x8, x8, x1
   1ef58:	sub	x8, x8, #0x105
   1ef5c:	cmp	x9, x8
   1ef60:	mov	x8, x9
   1ef64:	b.gt	1ef90 <mpfr_pow_ui@@Base+0x2c8>
   1ef68:	add	x1, x1, x8
   1ef6c:	cmp	x1, #0x0
   1ef70:	cinc	x8, x1, lt  // lt = tstop
   1ef74:	asr	x8, x8, #1
   1ef78:	sub	x0, x29, #0x20
   1ef7c:	str	x8, [sp, #8]
   1ef80:	str	x1, [sp, #48]
   1ef84:	bl	c330 <mpfr_set_prec@plt>
   1ef88:	mov	w8, #0x1                   	// #1
   1ef8c:	b	1ede8 <mpfr_pow_ui@@Base+0x120>
   1ef90:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   1ef94:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1ef98:	mov	w1, #0x86                  	// #134
   1ef9c:	add	x0, x0, #0x6d5
   1efa0:	add	x2, x2, #0x99a
   1efa4:	bl	d030 <mpfr_assert_fail@plt>
   1efa8:	ldr	x8, [sp, #8]
   1efac:	ldr	x1, [sp, #48]
   1efb0:	b	1ef68 <mpfr_pow_ui@@Base+0x2a0>
   1efb4:	tst	w19, #0x3
   1efb8:	b.ne	1f124 <mpfr_pow_ui@@Base+0x45c>  // b.any
   1efbc:	ldr	x19, [sp, #56]
   1efc0:	ldur	w3, [x29, #-24]
   1efc4:	ldr	w2, [sp, #36]
   1efc8:	sub	x1, x29, #0x20
   1efcc:	mov	x0, x19
   1efd0:	bl	cb70 <mpfr_set4@plt>
   1efd4:	mov	w23, w0
   1efd8:	sub	x0, x29, #0x20
   1efdc:	bl	c4f0 <mpfr_clear@plt>
   1efe0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1efe4:	ldr	x1, [x0, #2800]
   1efe8:	add	x0, x0, #0xaf0
   1efec:	blr	x1
   1eff0:	ldr	w9, [sp, #32]
   1eff4:	str	w9, [x28, x0]
   1eff8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1effc:	ldr	x1, [x0, #2736]
   1f000:	add	x0, x0, #0xab0
   1f004:	blr	x1
   1f008:	ldr	x10, [sp, #24]
   1f00c:	str	x10, [x28, x0]
   1f010:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1f014:	ldr	x1, [x0, #2768]
   1f018:	add	x0, x0, #0xad0
   1f01c:	blr	x1
   1f020:	ldr	x11, [sp, #16]
   1f024:	str	x11, [x28, x0]
   1f028:	ldr	x8, [x19, #16]
   1f02c:	cmp	x8, x11
   1f030:	b.gt	1f1ac <mpfr_pow_ui@@Base+0x4e4>
   1f034:	cmp	x8, x10
   1f038:	b.lt	1f1ac <mpfr_pow_ui@@Base+0x4e4>  // b.tstop
   1f03c:	cbz	w23, 1f058 <mpfr_pow_ui@@Base+0x390>
   1f040:	orr	w8, w9, #0x8
   1f044:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1f048:	ldr	x1, [x0, #2800]
   1f04c:	add	x0, x0, #0xaf0
   1f050:	blr	x1
   1f054:	str	w8, [x28, x0]
   1f058:	mov	w0, w23
   1f05c:	ldp	x20, x19, [sp, #192]
   1f060:	ldp	x22, x21, [sp, #176]
   1f064:	ldp	x24, x23, [sp, #160]
   1f068:	ldp	x26, x25, [sp, #144]
   1f06c:	ldp	x28, x27, [sp, #128]
   1f070:	ldp	x29, x30, [sp, #112]
   1f074:	add	sp, sp, #0xd0
   1f078:	ret
   1f07c:	ldr	x0, [sp, #56]
   1f080:	ldr	w3, [sp, #36]
   1f084:	mov	w1, #0x1                   	// #1
   1f088:	bl	cac0 <mpfr_set_ui_2exp@plt>
   1f08c:	b	1f1d4 <mpfr_pow_ui@@Base+0x50c>
   1f090:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1f094:	cmp	x9, x8
   1f098:	b.eq	1f1dc <mpfr_pow_ui@@Base+0x514>  // b.none
   1f09c:	mov	x8, #0x2                   	// #2
   1f0a0:	movk	x8, #0x8000, lsl #48
   1f0a4:	cmp	x9, x8
   1f0a8:	b.ne	1f208 <mpfr_pow_ui@@Base+0x540>  // b.any
   1f0ac:	ldr	x9, [sp, #56]
   1f0b0:	mov	x8, #0x4                   	// #4
   1f0b4:	movk	x8, #0x8000, lsl #48
   1f0b8:	sub	x8, x8, #0x2
   1f0bc:	str	x8, [x9, #16]
   1f0c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1f0c4:	ldr	x1, [x0, #2800]
   1f0c8:	add	x0, x0, #0xaf0
   1f0cc:	blr	x1
   1f0d0:	mrs	x8, tpidr_el0
   1f0d4:	ldr	w9, [x8, x0]
   1f0d8:	mov	w23, wzr
   1f0dc:	orr	w9, w9, #0x4
   1f0e0:	str	w9, [x8, x0]
   1f0e4:	b	1f058 <mpfr_pow_ui@@Base+0x390>
   1f0e8:	b.ne	1f1c0 <mpfr_pow_ui@@Base+0x4f8>  // b.any
   1f0ec:	ldr	x0, [sp, #56]
   1f0f0:	ldr	w2, [sp, #36]
   1f0f4:	mov	x1, x21
   1f0f8:	bl	c8c0 <mpfr_sqr@plt>
   1f0fc:	b	1f1d4 <mpfr_pow_ui@@Base+0x50c>
   1f100:	mov	x8, xzr
   1f104:	b	1eda4 <mpfr_pow_ui@@Base+0xdc>
   1f108:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   1f10c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1f110:	add	x0, x0, #0x6d5
   1f114:	add	x2, x2, #0xef4
   1f118:	mov	w1, #0x5e                  	// #94
   1f11c:	bl	d030 <mpfr_assert_fail@plt>
   1f120:	b	1ed8c <mpfr_pow_ui@@Base+0xc4>
   1f124:	sub	x0, x29, #0x20
   1f128:	bl	c4f0 <mpfr_clear@plt>
   1f12c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1f130:	ldr	x1, [x0, #2800]
   1f134:	add	x0, x0, #0xaf0
   1f138:	blr	x1
   1f13c:	ldr	w8, [sp, #32]
   1f140:	str	w8, [x28, x0]
   1f144:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1f148:	ldr	x1, [x0, #2736]
   1f14c:	add	x0, x0, #0xab0
   1f150:	blr	x1
   1f154:	ldr	x8, [sp, #24]
   1f158:	str	x8, [x28, x0]
   1f15c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1f160:	ldr	x1, [x0, #2768]
   1f164:	add	x0, x0, #0xad0
   1f168:	blr	x1
   1f16c:	ldr	x8, [sp, #16]
   1f170:	str	x8, [x28, x0]
   1f174:	sub	x0, x29, #0x30
   1f178:	bl	c400 <mpfr_mpz_init@plt>
   1f17c:	sub	x0, x29, #0x30
   1f180:	mov	x1, x22
   1f184:	bl	c110 <__gmpz_set_ui@plt>
   1f188:	ldr	x0, [sp, #56]
   1f18c:	ldr	w3, [sp, #36]
   1f190:	sub	x2, x29, #0x30
   1f194:	mov	x1, x21
   1f198:	bl	c350 <mpfr_pow_z@plt>
   1f19c:	mov	w23, w0
   1f1a0:	sub	x0, x29, #0x30
   1f1a4:	bl	c610 <mpfr_mpz_clear@plt>
   1f1a8:	b	1f058 <mpfr_pow_ui@@Base+0x390>
   1f1ac:	ldr	x0, [sp, #56]
   1f1b0:	ldr	w2, [sp, #36]
   1f1b4:	mov	w1, w23
   1f1b8:	bl	d020 <mpfr_check_range@plt>
   1f1bc:	b	1f1d4 <mpfr_pow_ui@@Base+0x50c>
   1f1c0:	ldr	w3, [x21, #8]
   1f1c4:	ldr	x0, [sp, #56]
   1f1c8:	ldr	w2, [sp, #36]
   1f1cc:	mov	x1, x21
   1f1d0:	bl	cb70 <mpfr_set4@plt>
   1f1d4:	mov	w23, w0
   1f1d8:	b	1f058 <mpfr_pow_ui@@Base+0x390>
   1f1dc:	ldr	w9, [x21, #8]
   1f1e0:	and	x10, x22, #0x1
   1f1e4:	mov	w11, #0x1                   	// #1
   1f1e8:	mov	w23, wzr
   1f1ec:	cmn	w9, #0x1
   1f1f0:	ccmp	x10, #0x0, #0x4, le
   1f1f4:	ldr	x10, [sp, #56]
   1f1f8:	cneg	w9, w11, ne  // ne = any
   1f1fc:	str	w9, [x10, #8]
   1f200:	str	x8, [x10, #16]
   1f204:	b	1f058 <mpfr_pow_ui@@Base+0x390>
   1f208:	ldr	x9, [sp, #56]
   1f20c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1f210:	str	x8, [x9, #16]
   1f214:	tbz	w22, #0, 1f230 <mpfr_pow_ui@@Base+0x568>
   1f218:	ldr	w8, [x21, #8]
   1f21c:	cmp	w8, #0x1
   1f220:	b.ge	1f230 <mpfr_pow_ui@@Base+0x568>  // b.tcont
   1f224:	mov	w23, wzr
   1f228:	mov	w8, #0xffffffff            	// #-1
   1f22c:	b	1f238 <mpfr_pow_ui@@Base+0x570>
   1f230:	mov	w23, wzr
   1f234:	mov	w8, #0x1                   	// #1
   1f238:	ldr	x9, [sp, #56]
   1f23c:	str	w8, [x9, #8]
   1f240:	b	1f058 <mpfr_pow_ui@@Base+0x390>

000000000001f244 <mpfr_print_mant_binary@@Base>:
   1f244:	stp	x29, x30, [sp, #-80]!
   1f248:	stp	x20, x19, [sp, #64]
   1f24c:	mov	x20, x1
   1f250:	mov	x1, x0
   1f254:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1f258:	add	x0, x0, #0xf0c
   1f25c:	str	x25, [sp, #16]
   1f260:	stp	x24, x23, [sp, #32]
   1f264:	stp	x22, x21, [sp, #48]
   1f268:	mov	x29, sp
   1f26c:	mov	x19, x2
   1f270:	bl	d0e0 <printf@plt>
   1f274:	cmn	x19, #0x3e
   1f278:	b.lt	1f300 <mpfr_print_mant_binary@@Base+0xbc>  // b.tstop
   1f27c:	sub	x8, x19, #0x1
   1f280:	add	x9, x19, #0x3e
   1f284:	cmp	x8, #0x0
   1f288:	mov	w10, #0x1                   	// #1
   1f28c:	csel	x8, x9, x8, lt  // lt = tstop
   1f290:	mov	x21, xzr
   1f294:	sub	x22, x10, x19
   1f298:	asr	x23, x8, #6
   1f29c:	mov	w24, #0x30                  	// #48
   1f2a0:	b	1f2c0 <mpfr_print_mant_binary@@Base+0x7c>
   1f2a4:	mov	w0, #0x2e                  	// #46
   1f2a8:	add	x21, x21, #0x40
   1f2ac:	bl	d110 <putchar@plt>
   1f2b0:	cmp	x23, #0x0
   1f2b4:	sub	x23, x23, #0x1
   1f2b8:	add	x22, x22, #0x40
   1f2bc:	b.le	1f304 <mpfr_print_mant_binary@@Base+0xc0>
   1f2c0:	mov	x25, xzr
   1f2c4:	b	1f2d4 <mpfr_print_mant_binary@@Base+0x90>
   1f2c8:	sub	x25, x25, #0x1
   1f2cc:	cmn	w25, #0x40
   1f2d0:	b.eq	1f2a4 <mpfr_print_mant_binary@@Base+0x60>  // b.none
   1f2d4:	ldr	x8, [x20, x23, lsl #3]
   1f2d8:	add	x9, x25, #0x3f
   1f2dc:	lsr	x8, x8, x9
   1f2e0:	tst	x8, #0x1
   1f2e4:	cinc	w0, w24, ne  // ne = any
   1f2e8:	bl	d110 <putchar@plt>
   1f2ec:	cmp	x22, x25
   1f2f0:	b.ne	1f2c8 <mpfr_print_mant_binary@@Base+0x84>  // b.any
   1f2f4:	mov	w0, #0x5b                  	// #91
   1f2f8:	bl	d110 <putchar@plt>
   1f2fc:	b	1f2c8 <mpfr_print_mant_binary@@Base+0x84>
   1f300:	mov	x21, xzr
   1f304:	cmp	x21, x19
   1f308:	b.lt	1f314 <mpfr_print_mant_binary@@Base+0xd0>  // b.tstop
   1f30c:	mov	w0, #0x5d                  	// #93
   1f310:	bl	d110 <putchar@plt>
   1f314:	mov	w0, #0xa                   	// #10
   1f318:	bl	d110 <putchar@plt>
   1f31c:	ldp	x20, x19, [sp, #64]
   1f320:	ldp	x22, x21, [sp, #48]
   1f324:	ldp	x24, x23, [sp, #32]
   1f328:	ldr	x25, [sp, #16]
   1f32c:	ldp	x29, x30, [sp], #80
   1f330:	ret

000000000001f334 <mpfr_print_rnd_mode@@Base>:
   1f334:	cmp	w0, #0x5
   1f338:	b.hi	1f34c <mpfr_print_rnd_mode@@Base+0x18>  // b.pmore
   1f33c:	adrp	x8, 72000 <__gmpfr_l2b@@Base+0x2f0>
   1f340:	add	x8, x8, #0xc50
   1f344:	ldr	x0, [x8, w0, sxtw #3]
   1f348:	ret
   1f34c:	mov	x0, xzr
   1f350:	ret

000000000001f354 <mpfr_reldiff@@Base>:
   1f354:	sub	sp, sp, #0x50
   1f358:	stp	x29, x30, [sp, #32]
   1f35c:	stp	x22, x21, [sp, #48]
   1f360:	stp	x20, x19, [sp, #64]
   1f364:	ldr	x9, [x1, #16]
   1f368:	mov	x8, #0x2                   	// #2
   1f36c:	movk	x8, #0x8000, lsl #48
   1f370:	add	x10, x8, #0x2
   1f374:	mov	w21, w3
   1f378:	mov	x22, x2
   1f37c:	mov	x20, x1
   1f380:	cmp	x9, x10
   1f384:	mov	x19, x0
   1f388:	add	x29, sp, #0x20
   1f38c:	b.lt	1f42c <mpfr_reldiff@@Base+0xd8>  // b.tstop
   1f390:	ldr	x11, [x22, #16]
   1f394:	cmp	x11, x10
   1f398:	b.lt	1f42c <mpfr_reldiff@@Base+0xd8>  // b.tstop
   1f39c:	cmp	x19, x20
   1f3a0:	b.ne	1f3c4 <mpfr_reldiff@@Base+0x70>  // b.any
   1f3a4:	ldr	x1, [x20]
   1f3a8:	mov	x0, sp
   1f3ac:	bl	cf60 <mpfr_init2@plt>
   1f3b0:	ldr	w3, [x20, #8]
   1f3b4:	mov	x0, sp
   1f3b8:	mov	x1, x20
   1f3bc:	mov	w2, wzr
   1f3c0:	bl	cb70 <mpfr_set4@plt>
   1f3c4:	mov	x0, x19
   1f3c8:	mov	x1, x20
   1f3cc:	mov	x2, x22
   1f3d0:	mov	w3, w21
   1f3d4:	bl	bfd0 <mpfr_sub@plt>
   1f3d8:	mov	w3, #0x1                   	// #1
   1f3dc:	mov	x0, x19
   1f3e0:	mov	x1, x19
   1f3e4:	mov	w2, w21
   1f3e8:	bl	cb70 <mpfr_set4@plt>
   1f3ec:	cmp	x19, x20
   1f3f0:	mov	x8, sp
   1f3f4:	csel	x2, x8, x20, eq  // eq = none
   1f3f8:	mov	x0, x19
   1f3fc:	mov	x1, x19
   1f400:	mov	w3, w21
   1f404:	bl	caf0 <mpfr_div@plt>
   1f408:	cmp	x19, x20
   1f40c:	b.ne	1f418 <mpfr_reldiff@@Base+0xc4>  // b.any
   1f410:	mov	x0, sp
   1f414:	bl	c4f0 <mpfr_clear@plt>
   1f418:	ldp	x20, x19, [sp, #64]
   1f41c:	ldp	x22, x21, [sp, #48]
   1f420:	ldp	x29, x30, [sp, #32]
   1f424:	add	sp, sp, #0x50
   1f428:	ret
   1f42c:	cmp	x9, x8
   1f430:	b.eq	1f440 <mpfr_reldiff@@Base+0xec>  // b.none
   1f434:	ldr	x10, [x22, #16]
   1f438:	cmp	x10, x8
   1f43c:	b.ne	1f448 <mpfr_reldiff@@Base+0xf4>  // b.any
   1f440:	str	x8, [x19, #16]
   1f444:	b	1f418 <mpfr_reldiff@@Base+0xc4>
   1f448:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   1f44c:	cmp	x9, x11
   1f450:	b.ne	1f474 <mpfr_reldiff@@Base+0x120>  // b.any
   1f454:	cmp	x10, x11
   1f458:	b.ne	1f440 <mpfr_reldiff@@Base+0xec>  // b.any
   1f45c:	ldr	w9, [x22, #8]
   1f460:	ldr	w10, [x20, #8]
   1f464:	cmp	w9, w10
   1f468:	b.ne	1f440 <mpfr_reldiff@@Base+0xec>  // b.any
   1f46c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1f470:	b	1f440 <mpfr_reldiff@@Base+0xec>
   1f474:	cmp	x10, x11
   1f478:	b.ne	1f490 <mpfr_reldiff@@Base+0x13c>  // b.any
   1f47c:	ldr	w8, [x20, #8]
   1f480:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1f484:	str	x9, [x19, #16]
   1f488:	str	w8, [x19, #8]
   1f48c:	b	1f418 <mpfr_reldiff@@Base+0xc4>
   1f490:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1f494:	cmp	x9, x8
   1f498:	b.ne	1f39c <mpfr_reldiff@@Base+0x48>  // b.any
   1f49c:	ldrsw	x1, [x22, #8]
   1f4a0:	mov	x0, x19
   1f4a4:	mov	x2, xzr
   1f4a8:	mov	w3, w21
   1f4ac:	bl	bed0 <mpfr_set_si_2exp@plt>
   1f4b0:	b	1f418 <mpfr_reldiff@@Base+0xc4>

000000000001f4b4 <mpfr_round_raw@@Base>:
   1f4b4:	stp	x29, x30, [sp, #-96]!
   1f4b8:	stp	x22, x21, [sp, #64]
   1f4bc:	stp	x20, x19, [sp, #80]
   1f4c0:	mov	x21, x6
   1f4c4:	mov	w22, w3
   1f4c8:	mov	x20, x1
   1f4cc:	cmp	w5, #0x5
   1f4d0:	mov	x19, x0
   1f4d4:	stp	x28, x27, [sp, #16]
   1f4d8:	stp	x26, x25, [sp, #32]
   1f4dc:	stp	x24, x23, [sp, #48]
   1f4e0:	mov	x29, sp
   1f4e4:	b.ne	1f4f8 <mpfr_round_raw@@Base+0x44>  // b.any
   1f4e8:	mov	w9, wzr
   1f4ec:	mov	w5, #0x1                   	// #1
   1f4f0:	str	wzr, [x21]
   1f4f4:	b	1f4fc <mpfr_round_raw@@Base+0x48>
   1f4f8:	mov	w9, #0x1                   	// #1
   1f4fc:	sub	x8, x2, #0x1
   1f500:	add	x10, x2, #0x3e
   1f504:	cmp	x8, #0x0
   1f508:	add	x12, x4, #0x3f
   1f50c:	csel	x8, x10, x8, lt  // lt = tstop
   1f510:	cmp	x4, #0x0
   1f514:	asr	x11, x8, #6
   1f518:	csel	x8, x12, x4, lt  // lt = tstop
   1f51c:	cmp	x2, x4
   1f520:	add	x23, x11, #0x1
   1f524:	asr	x10, x8, #6
   1f528:	and	w8, w4, #0x3f
   1f52c:	b.le	1f7d0 <mpfr_round_raw@@Base+0x31c>
   1f530:	cbnz	w9, 1f548 <mpfr_round_raw@@Base+0x94>
   1f534:	cmp	w5, #0x1
   1f538:	b.eq	1f654 <mpfr_round_raw@@Base+0x1a0>  // b.none
   1f53c:	add	w9, w5, w22
   1f540:	cmp	w9, #0x3
   1f544:	b.eq	1f654 <mpfr_round_raw@@Base+0x1a0>  // b.none
   1f548:	sub	x26, x11, x10
   1f54c:	cmp	w8, #0x0
   1f550:	cinc	x24, x10, ne  // ne = any
   1f554:	ldr	x10, [x20, x26, lsl #3]
   1f558:	neg	w11, w8
   1f55c:	mov	x12, #0xffffffffffffffff    	// #-1
   1f560:	lsl	x11, x12, x11
   1f564:	mov	w9, #0x40                  	// #64
   1f568:	csinv	x25, x11, xzr, ne  // ne = any
   1f56c:	csinv	x11, x12, x11, eq  // eq = none
   1f570:	add	w12, w5, #0x1
   1f574:	sub	w9, w9, w8
   1f578:	cmp	w12, #0x1
   1f57c:	and	x27, x10, x11
   1f580:	b.hi	1f5fc <mpfr_round_raw@@Base+0x148>  // b.pmore
   1f584:	eor	w11, w8, #0x3f
   1f588:	mov	w10, #0x1                   	// #1
   1f58c:	lsl	x12, x10, x11
   1f590:	tst	x27, x12
   1f594:	b.eq	1f68c <mpfr_round_raw@@Base+0x1d8>  // b.none
   1f598:	cmn	w5, #0x1
   1f59c:	b.eq	1f814 <mpfr_round_raw@@Base+0x360>  // b.none
   1f5a0:	bics	xzr, x27, x12
   1f5a4:	bic	x11, x27, x12
   1f5a8:	cset	w10, eq  // eq = none
   1f5ac:	cbnz	x11, 1f694 <mpfr_round_raw@@Base+0x1e0>
   1f5b0:	cmp	x26, #0x1
   1f5b4:	b.lt	1f694 <mpfr_round_raw@@Base+0x1e0>  // b.tstop
   1f5b8:	sub	x11, x20, #0x8
   1f5bc:	ldr	x27, [x11, x26, lsl #3]
   1f5c0:	sub	x28, x26, #0x1
   1f5c4:	cmp	x27, #0x0
   1f5c8:	cset	w10, eq  // eq = none
   1f5cc:	cbnz	x27, 1f5dc <mpfr_round_raw@@Base+0x128>
   1f5d0:	cmp	x26, #0x1
   1f5d4:	mov	x26, x28
   1f5d8:	b.gt	1f5bc <mpfr_round_raw@@Base+0x108>
   1f5dc:	cbz	w10, 1f6a0 <mpfr_round_raw@@Base+0x1ec>
   1f5e0:	sub	x10, x23, x24
   1f5e4:	ldr	x10, [x20, x10, lsl #3]
   1f5e8:	eor	x11, x25, x25, lsl #1
   1f5ec:	ands	x27, x10, x11
   1f5f0:	b.eq	1f7a4 <mpfr_round_raw@@Base+0x2f0>  // b.none
   1f5f4:	mov	w10, #0x2                   	// #2
   1f5f8:	b	1f6a4 <mpfr_round_raw@@Base+0x1f0>
   1f5fc:	cmp	w5, #0x1
   1f600:	b.eq	1f6ec <mpfr_round_raw@@Base+0x238>  // b.none
   1f604:	add	w10, w5, w22
   1f608:	cmp	w10, #0x3
   1f60c:	b.eq	1f6ec <mpfr_round_raw@@Base+0x238>  // b.none
   1f610:	cmp	x27, #0x0
   1f614:	cset	w10, eq  // eq = none
   1f618:	cbnz	x27, 1f644 <mpfr_round_raw@@Base+0x190>
   1f61c:	cmp	x26, #0x1
   1f620:	b.lt	1f644 <mpfr_round_raw@@Base+0x190>  // b.tstop
   1f624:	sub	x11, x20, #0x8
   1f628:	ldr	x12, [x11, x26, lsl #3]
   1f62c:	cmp	x12, #0x0
   1f630:	cset	w10, eq  // eq = none
   1f634:	cbnz	x12, 1f644 <mpfr_round_raw@@Base+0x190>
   1f638:	cmp	x26, #0x1
   1f63c:	sub	x26, x26, #0x1
   1f640:	b.gt	1f628 <mpfr_round_raw@@Base+0x174>
   1f644:	cbz	w10, 1f774 <mpfr_round_raw@@Base+0x2c0>
   1f648:	add	x8, x20, x23, lsl #3
   1f64c:	str	wzr, [x21]
   1f650:	b	1f738 <mpfr_round_raw@@Base+0x284>
   1f654:	cmp	w8, #0x0
   1f658:	neg	w9, w8
   1f65c:	mov	x11, #0xffffffffffffffff    	// #-1
   1f660:	add	x8, x20, x23, lsl #3
   1f664:	cinc	x2, x10, ne  // ne = any
   1f668:	lsl	x9, x11, x9
   1f66c:	sub	x1, x8, x2, lsl #3
   1f670:	mov	x0, x19
   1f674:	csinv	x20, x9, xzr, ne  // ne = any
   1f678:	bl	c9f0 <__gmpn_copyi@plt>
   1f67c:	ldr	x8, [x19]
   1f680:	mov	w0, wzr
   1f684:	and	x8, x8, x20
   1f688:	b	1f754 <mpfr_round_raw@@Base+0x2a0>
   1f68c:	tbnz	w10, #0, 1f6ec <mpfr_round_raw@@Base+0x238>
   1f690:	b	1f758 <mpfr_round_raw@@Base+0x2a4>
   1f694:	mov	x27, x11
   1f698:	mov	x28, x26
   1f69c:	cbnz	w10, 1f5e0 <mpfr_round_raw@@Base+0x12c>
   1f6a0:	mov	w10, #0x1                   	// #1
   1f6a4:	mov	x26, x28
   1f6a8:	mov	w13, #0x1                   	// #1
   1f6ac:	lsl	w11, w22, w10
   1f6b0:	add	x12, x20, x23, lsl #3
   1f6b4:	cmp	w8, #0x0
   1f6b8:	lsl	x9, x13, x9
   1f6bc:	sub	w8, w10, w11
   1f6c0:	sub	x1, x12, x24, lsl #3
   1f6c4:	csinc	x3, x9, xzr, ne  // ne = any
   1f6c8:	mov	x0, x19
   1f6cc:	mov	x2, x24
   1f6d0:	str	w8, [x21]
   1f6d4:	bl	bf60 <__gmpn_add_1@plt>
   1f6d8:	ldr	x8, [x19]
   1f6dc:	mov	w10, wzr
   1f6e0:	and	x8, x8, x25
   1f6e4:	str	x8, [x19]
   1f6e8:	tbz	w10, #0, 1f758 <mpfr_round_raw@@Base+0x2a4>
   1f6ec:	cmp	x27, #0x0
   1f6f0:	cset	w8, eq  // eq = none
   1f6f4:	cbnz	x27, 1f720 <mpfr_round_raw@@Base+0x26c>
   1f6f8:	cmp	x26, #0x1
   1f6fc:	b.lt	1f720 <mpfr_round_raw@@Base+0x26c>  // b.tstop
   1f700:	sub	x9, x20, #0x8
   1f704:	ldr	x10, [x9, x26, lsl #3]
   1f708:	cmp	x10, #0x0
   1f70c:	cset	w8, eq  // eq = none
   1f710:	cbnz	x10, 1f720 <mpfr_round_raw@@Base+0x26c>
   1f714:	cmp	x26, #0x1
   1f718:	sub	x26, x26, #0x1
   1f71c:	b.gt	1f704 <mpfr_round_raw@@Base+0x250>
   1f720:	lsl	w9, w22, #1
   1f724:	cmp	w8, #0x0
   1f728:	sub	w9, w9, #0x1
   1f72c:	csel	w9, wzr, w9, ne  // ne = any
   1f730:	add	x8, x20, x23, lsl #3
   1f734:	str	w9, [x21]
   1f738:	sub	x1, x8, x24, lsl #3
   1f73c:	mov	x0, x19
   1f740:	mov	x2, x24
   1f744:	bl	c9f0 <__gmpn_copyi@plt>
   1f748:	mov	w0, wzr
   1f74c:	ldr	x8, [x19]
   1f750:	and	x8, x8, x25
   1f754:	str	x8, [x19]
   1f758:	ldp	x20, x19, [sp, #80]
   1f75c:	ldp	x22, x21, [sp, #64]
   1f760:	ldp	x24, x23, [sp, #48]
   1f764:	ldp	x26, x25, [sp, #32]
   1f768:	ldp	x28, x27, [sp, #16]
   1f76c:	ldp	x29, x30, [sp], #96
   1f770:	ret
   1f774:	mov	w10, #0x1                   	// #1
   1f778:	add	x11, x20, x23, lsl #3
   1f77c:	cmp	w8, #0x0
   1f780:	lsl	x9, x10, x9
   1f784:	sub	w8, w10, w22, lsl #1
   1f788:	sub	x1, x11, x24, lsl #3
   1f78c:	csinc	x3, x9, xzr, ne  // ne = any
   1f790:	mov	x0, x19
   1f794:	mov	x2, x24
   1f798:	str	w8, [x21]
   1f79c:	bl	bf60 <__gmpn_add_1@plt>
   1f7a0:	b	1f74c <mpfr_round_raw@@Base+0x298>
   1f7a4:	lsl	w8, w22, #2
   1f7a8:	add	x9, x20, x23, lsl #3
   1f7ac:	sub	w8, w8, #0x2
   1f7b0:	sub	x1, x9, x24, lsl #3
   1f7b4:	mov	x0, x19
   1f7b8:	mov	x2, x24
   1f7bc:	str	w8, [x21]
   1f7c0:	bl	c9f0 <__gmpn_copyi@plt>
   1f7c4:	mov	w0, wzr
   1f7c8:	mov	x26, x28
   1f7cc:	b	1f6d8 <mpfr_round_raw@@Base+0x224>
   1f7d0:	cmp	w8, #0x0
   1f7d4:	mvn	x8, x11
   1f7d8:	sub	x9, x10, x11
   1f7dc:	add	x8, x10, x8
   1f7e0:	csel	x8, x8, x9, eq  // eq = none
   1f7e4:	str	wzr, [x21]
   1f7e8:	lsl	x21, x8, #3
   1f7ec:	add	x0, x19, x21
   1f7f0:	mov	x1, x20
   1f7f4:	mov	x2, x23
   1f7f8:	bl	bf30 <__gmpn_copyd@plt>
   1f7fc:	mov	x0, x19
   1f800:	mov	w1, wzr
   1f804:	mov	x2, x21
   1f808:	bl	c5b0 <memset@plt>
   1f80c:	mov	w0, wzr
   1f810:	b	1f758 <mpfr_round_raw@@Base+0x2a4>
   1f814:	mov	w10, #0x2                   	// #2
   1f818:	b	1f6a8 <mpfr_round_raw@@Base+0x1f4>

000000000001f81c <mpfr_round_raw_2@@Base>:
   1f81c:	cmp	w4, #0x5
   1f820:	b.ne	1f82c <mpfr_round_raw_2@@Base+0x10>  // b.any
   1f824:	mov	w0, wzr
   1f828:	ret
   1f82c:	cmp	x1, x3
   1f830:	mov	w8, wzr
   1f834:	b.le	1f920 <mpfr_round_raw_2@@Base+0x104>
   1f838:	cmp	w4, #0x1
   1f83c:	b.eq	1f920 <mpfr_round_raw_2@@Base+0x104>  // b.none
   1f840:	add	w9, w4, w2
   1f844:	cmp	w9, #0x3
   1f848:	b.eq	1f920 <mpfr_round_raw_2@@Base+0x104>  // b.none
   1f84c:	sub	x8, x1, #0x1
   1f850:	add	x9, x1, #0x3e
   1f854:	cmp	x8, #0x0
   1f858:	add	x10, x3, #0x3f
   1f85c:	and	w12, w3, #0x3f
   1f860:	csel	x8, x9, x8, lt  // lt = tstop
   1f864:	cmp	x3, #0x0
   1f868:	mov	x11, #0xffffffffffffffff    	// #-1
   1f86c:	neg	w13, w12
   1f870:	csel	x10, x10, x3, lt  // lt = tstop
   1f874:	lsl	x9, x11, x13
   1f878:	asr	x8, x8, #6
   1f87c:	asr	x13, x10, #6
   1f880:	sub	x8, x8, x13
   1f884:	ldr	x13, [x0, x8, lsl #3]
   1f888:	tst	w3, #0x3f
   1f88c:	csinv	x11, x11, x9, eq  // eq = none
   1f890:	add	w14, w4, #0x1
   1f894:	cset	w10, ne  // ne = any
   1f898:	csinv	x9, x9, xzr, ne  // ne = any
   1f89c:	cmp	w14, #0x2
   1f8a0:	and	x11, x13, x11
   1f8a4:	b.cs	1f928 <mpfr_round_raw_2@@Base+0x10c>  // b.hs, b.nlast
   1f8a8:	eor	w12, w12, #0x3f
   1f8ac:	mov	w13, #0x1                   	// #1
   1f8b0:	lsl	x12, x13, x12
   1f8b4:	tst	x11, x12
   1f8b8:	b.eq	1f824 <mpfr_round_raw_2@@Base+0x8>  // b.none
   1f8bc:	cmn	w4, #0x1
   1f8c0:	b.eq	1f91c <mpfr_round_raw_2@@Base+0x100>  // b.none
   1f8c4:	bics	xzr, x11, x12
   1f8c8:	bic	x13, x11, x12
   1f8cc:	cset	w11, eq  // eq = none
   1f8d0:	cbnz	x13, 1f900 <mpfr_round_raw_2@@Base+0xe4>
   1f8d4:	cmp	x8, #0x1
   1f8d8:	b.lt	1f900 <mpfr_round_raw_2@@Base+0xe4>  // b.tstop
   1f8dc:	sub	x12, x0, #0x8
   1f8e0:	mov	x13, x8
   1f8e4:	ldr	x14, [x12, x13, lsl #3]
   1f8e8:	cmp	x14, #0x0
   1f8ec:	cset	w11, eq  // eq = none
   1f8f0:	cbnz	x14, 1f900 <mpfr_round_raw_2@@Base+0xe4>
   1f8f4:	cmp	x13, #0x1
   1f8f8:	sub	x13, x13, #0x1
   1f8fc:	b.gt	1f8e4 <mpfr_round_raw_2@@Base+0xc8>
   1f900:	cbz	w11, 1f91c <mpfr_round_raw_2@@Base+0x100>
   1f904:	sub	x8, x8, x10
   1f908:	add	x8, x0, x8, lsl #3
   1f90c:	ldr	x8, [x8, #8]
   1f910:	eor	x9, x9, x9, lsl #1
   1f914:	tst	x8, x9
   1f918:	b.eq	1f824 <mpfr_round_raw_2@@Base+0x8>  // b.none
   1f91c:	mov	w8, #0x1                   	// #1
   1f920:	mov	w0, w8
   1f924:	ret
   1f928:	cmp	x11, #0x0
   1f92c:	cset	w9, eq  // eq = none
   1f930:	cbnz	x11, 1f95c <mpfr_round_raw_2@@Base+0x140>
   1f934:	cmp	x8, #0x1
   1f938:	b.lt	1f95c <mpfr_round_raw_2@@Base+0x140>  // b.tstop
   1f93c:	sub	x10, x0, #0x8
   1f940:	ldr	x11, [x10, x8, lsl #3]
   1f944:	cmp	x11, #0x0
   1f948:	cset	w9, eq  // eq = none
   1f94c:	cbnz	x11, 1f95c <mpfr_round_raw_2@@Base+0x140>
   1f950:	cmp	x8, #0x1
   1f954:	sub	x8, x8, #0x1
   1f958:	b.gt	1f940 <mpfr_round_raw_2@@Base+0x124>
   1f95c:	eor	w0, w9, #0x1
   1f960:	ret

000000000001f964 <mpfr_round_raw_4@@Base>:
   1f964:	stp	x29, x30, [sp, #-64]!
   1f968:	cmp	w5, #0x5
   1f96c:	sub	x8, x2, #0x1
   1f970:	add	x9, x2, #0x3e
   1f974:	csinc	w11, w5, wzr, ne  // ne = any
   1f978:	cmp	x8, #0x0
   1f97c:	add	x10, x4, #0x3f
   1f980:	csel	x8, x9, x8, lt  // lt = tstop
   1f984:	cmp	x4, #0x0
   1f988:	asr	x9, x8, #6
   1f98c:	csel	x8, x10, x4, lt  // lt = tstop
   1f990:	stp	x22, x21, [sp, #32]
   1f994:	stp	x20, x19, [sp, #48]
   1f998:	mov	x20, x1
   1f99c:	mov	x19, x0
   1f9a0:	cmp	x2, x4
   1f9a4:	add	x21, x9, #0x1
   1f9a8:	asr	x12, x8, #6
   1f9ac:	and	w8, w4, #0x3f
   1f9b0:	str	x23, [sp, #16]
   1f9b4:	mov	x29, sp
   1f9b8:	b.le	1fba4 <mpfr_round_raw_4@@Base+0x240>
   1f9bc:	cmp	w11, #0x1
   1f9c0:	b.eq	1fab4 <mpfr_round_raw_4@@Base+0x150>  // b.none
   1f9c4:	add	w10, w11, w3
   1f9c8:	cmp	w10, #0x3
   1f9cc:	b.eq	1fab4 <mpfr_round_raw_4@@Base+0x150>  // b.none
   1f9d0:	sub	x10, x9, x12
   1f9d4:	ldr	x15, [x20, x10, lsl #3]
   1f9d8:	neg	w13, w8
   1f9dc:	mov	x14, #0xffffffffffffffff    	// #-1
   1f9e0:	cmp	w8, #0x0
   1f9e4:	lsl	x13, x14, x13
   1f9e8:	mov	w9, #0x40                  	// #64
   1f9ec:	csinv	x23, x13, xzr, ne  // ne = any
   1f9f0:	csinv	x13, x14, x13, eq  // eq = none
   1f9f4:	cinc	x22, x12, ne  // ne = any
   1f9f8:	add	w12, w11, #0x1
   1f9fc:	sub	w9, w9, w8
   1fa00:	cmp	w12, #0x2
   1fa04:	and	x13, x15, x13
   1fa08:	b.cs	1faec <mpfr_round_raw_4@@Base+0x188>  // b.hs, b.nlast
   1fa0c:	eor	w14, w8, #0x3f
   1fa10:	mov	w12, #0x1                   	// #1
   1fa14:	lsl	x14, x12, x14
   1fa18:	tst	x13, x14
   1fa1c:	b.eq	1fb4c <mpfr_round_raw_4@@Base+0x1e8>  // b.none
   1fa20:	cmn	w11, #0x1
   1fa24:	b.eq	1fa78 <mpfr_round_raw_4@@Base+0x114>  // b.none
   1fa28:	bics	xzr, x13, x14
   1fa2c:	bic	x12, x13, x14
   1fa30:	cset	w11, eq  // eq = none
   1fa34:	cbnz	x12, 1fa60 <mpfr_round_raw_4@@Base+0xfc>
   1fa38:	cmp	x10, #0x1
   1fa3c:	b.lt	1fa60 <mpfr_round_raw_4@@Base+0xfc>  // b.tstop
   1fa40:	sub	x12, x20, #0x8
   1fa44:	ldr	x13, [x12, x10, lsl #3]
   1fa48:	cmp	x13, #0x0
   1fa4c:	cset	w11, eq  // eq = none
   1fa50:	cbnz	x13, 1fa60 <mpfr_round_raw_4@@Base+0xfc>
   1fa54:	cmp	x10, #0x1
   1fa58:	sub	x10, x10, #0x1
   1fa5c:	b.gt	1fa44 <mpfr_round_raw_4@@Base+0xe0>
   1fa60:	cbz	w11, 1fa78 <mpfr_round_raw_4@@Base+0x114>
   1fa64:	sub	x10, x21, x22
   1fa68:	ldr	x10, [x20, x10, lsl #3]
   1fa6c:	eor	x11, x23, x23, lsl #1
   1fa70:	tst	x10, x11
   1fa74:	b.eq	1fb88 <mpfr_round_raw_4@@Base+0x224>  // b.none
   1fa78:	mov	w11, #0x1                   	// #1
   1fa7c:	add	x10, x20, x21, lsl #3
   1fa80:	lsl	x9, x11, x9
   1fa84:	cmp	w8, #0x0
   1fa88:	sub	x1, x10, x22, lsl #3
   1fa8c:	csinc	x3, x9, xzr, ne  // ne = any
   1fa90:	mov	x0, x19
   1fa94:	mov	x2, x22
   1fa98:	bl	bf60 <__gmpn_add_1@plt>
   1fa9c:	ldr	x8, [x19]
   1faa0:	mov	w12, wzr
   1faa4:	and	x8, x8, x23
   1faa8:	str	x8, [x19]
   1faac:	cbnz	w12, 1fb50 <mpfr_round_raw_4@@Base+0x1ec>
   1fab0:	b	1fb74 <mpfr_round_raw_4@@Base+0x210>
   1fab4:	cmp	w8, #0x0
   1fab8:	neg	w9, w8
   1fabc:	mov	x10, #0xffffffffffffffff    	// #-1
   1fac0:	add	x8, x20, x21, lsl #3
   1fac4:	cinc	x2, x12, ne  // ne = any
   1fac8:	lsl	x9, x10, x9
   1facc:	sub	x1, x8, x2, lsl #3
   1fad0:	mov	x0, x19
   1fad4:	csinv	x20, x9, xzr, ne  // ne = any
   1fad8:	bl	c9f0 <__gmpn_copyi@plt>
   1fadc:	ldr	x8, [x19]
   1fae0:	mov	w0, wzr
   1fae4:	and	x8, x8, x20
   1fae8:	b	1fb70 <mpfr_round_raw_4@@Base+0x20c>
   1faec:	cmp	x13, #0x0
   1faf0:	cset	w11, eq  // eq = none
   1faf4:	cbnz	x13, 1fb20 <mpfr_round_raw_4@@Base+0x1bc>
   1faf8:	cmp	x10, #0x1
   1fafc:	b.lt	1fb20 <mpfr_round_raw_4@@Base+0x1bc>  // b.tstop
   1fb00:	sub	x12, x20, #0x8
   1fb04:	ldr	x13, [x12, x10, lsl #3]
   1fb08:	cmp	x13, #0x0
   1fb0c:	cset	w11, eq  // eq = none
   1fb10:	cbnz	x13, 1fb20 <mpfr_round_raw_4@@Base+0x1bc>
   1fb14:	cmp	x10, #0x1
   1fb18:	sub	x10, x10, #0x1
   1fb1c:	b.gt	1fb04 <mpfr_round_raw_4@@Base+0x1a0>
   1fb20:	add	x10, x20, x21, lsl #3
   1fb24:	sub	x1, x10, x22, lsl #3
   1fb28:	cbnz	w11, 1fb58 <mpfr_round_raw_4@@Base+0x1f4>
   1fb2c:	mov	w10, #0x1                   	// #1
   1fb30:	lsl	x9, x10, x9
   1fb34:	cmp	w8, #0x0
   1fb38:	csinc	x3, x9, xzr, ne  // ne = any
   1fb3c:	mov	x0, x19
   1fb40:	mov	x2, x22
   1fb44:	bl	bf60 <__gmpn_add_1@plt>
   1fb48:	b	1fb68 <mpfr_round_raw_4@@Base+0x204>
   1fb4c:	cbz	w12, 1fb74 <mpfr_round_raw_4@@Base+0x210>
   1fb50:	add	x8, x20, x21, lsl #3
   1fb54:	sub	x1, x8, x22, lsl #3
   1fb58:	mov	x0, x19
   1fb5c:	mov	x2, x22
   1fb60:	bl	c9f0 <__gmpn_copyi@plt>
   1fb64:	mov	w0, wzr
   1fb68:	ldr	x8, [x19]
   1fb6c:	and	x8, x8, x23
   1fb70:	str	x8, [x19]
   1fb74:	ldp	x20, x19, [sp, #48]
   1fb78:	ldp	x22, x21, [sp, #32]
   1fb7c:	ldr	x23, [sp, #16]
   1fb80:	ldp	x29, x30, [sp], #64
   1fb84:	ret
   1fb88:	add	x8, x20, x21, lsl #3
   1fb8c:	sub	x1, x8, x22, lsl #3
   1fb90:	mov	x0, x19
   1fb94:	mov	x2, x22
   1fb98:	bl	c9f0 <__gmpn_copyi@plt>
   1fb9c:	mov	w0, wzr
   1fba0:	b	1fa9c <mpfr_round_raw_4@@Base+0x138>
   1fba4:	cmp	w8, #0x0
   1fba8:	mvn	x8, x9
   1fbac:	sub	x10, x12, x9
   1fbb0:	add	x8, x12, x8
   1fbb4:	csel	x8, x8, x10, eq  // eq = none
   1fbb8:	lsl	x22, x8, #3
   1fbbc:	add	x0, x19, x22
   1fbc0:	mov	x1, x20
   1fbc4:	mov	x2, x21
   1fbc8:	bl	bf30 <__gmpn_copyd@plt>
   1fbcc:	mov	x0, x19
   1fbd0:	mov	w1, wzr
   1fbd4:	mov	x2, x22
   1fbd8:	bl	c5b0 <memset@plt>
   1fbdc:	mov	w0, wzr
   1fbe0:	b	1fb74 <mpfr_round_raw_4@@Base+0x210>

000000000001fbe4 <mpfr_prec_round@@Base>:
   1fbe4:	stp	x29, x30, [sp, #-80]!
   1fbe8:	str	x25, [sp, #16]
   1fbec:	stp	x24, x23, [sp, #32]
   1fbf0:	stp	x22, x21, [sp, #48]
   1fbf4:	stp	x20, x19, [sp, #64]
   1fbf8:	mov	x29, sp
   1fbfc:	sub	sp, sp, #0x10
   1fc00:	mov	x22, #0xfffffffffffffeff    	// #-257
   1fc04:	movk	x22, #0x7fff, lsl #48
   1fc08:	sub	x23, x1, #0x1
   1fc0c:	mov	w21, w2
   1fc10:	mov	x19, x1
   1fc14:	cmp	x23, x22
   1fc18:	mov	x20, x0
   1fc1c:	b.cs	1fcf4 <mpfr_prec_round@@Base+0x110>  // b.hs, b.nlast
   1fc20:	ldr	x9, [x20]
   1fc24:	add	x8, x23, #0x3f
   1fc28:	cmp	x23, #0x0
   1fc2c:	csel	x8, x8, x23, lt  // lt = tstop
   1fc30:	asr	x25, x8, #6
   1fc34:	sub	x8, x9, #0x1
   1fc38:	add	x9, x9, #0x3e
   1fc3c:	cmp	x8, #0x0
   1fc40:	csel	x8, x9, x8, lt  // lt = tstop
   1fc44:	cmp	x25, x8, asr #6
   1fc48:	add	x23, x25, #0x1
   1fc4c:	b.gt	1fd10 <mpfr_prec_round@@Base+0x12c>
   1fc50:	ldr	x8, [x20, #16]
   1fc54:	add	x9, x22, #0x105
   1fc58:	cmp	x8, x9
   1fc5c:	b.lt	1fd44 <mpfr_prec_round@@Base+0x160>  // b.tstop
   1fc60:	lsl	x22, x23, #3
   1fc64:	cmp	x22, #0x4, lsl #12
   1fc68:	stur	xzr, [x29, #-8]
   1fc6c:	b.hi	1fd80 <mpfr_prec_round@@Base+0x19c>  // b.pmore
   1fc70:	add	x9, x22, #0xf
   1fc74:	mov	x8, sp
   1fc78:	and	x9, x9, #0xfffffffffffffff0
   1fc7c:	sub	x24, x8, x9
   1fc80:	mov	sp, x24
   1fc84:	ldr	x23, [x20, #24]
   1fc88:	ldr	w8, [x20, #8]
   1fc8c:	ldr	x2, [x20]
   1fc90:	add	x6, x29, #0x1c
   1fc94:	mov	x0, x24
   1fc98:	lsr	w3, w8, #31
   1fc9c:	mov	x1, x23
   1fca0:	mov	x4, x19
   1fca4:	mov	w5, w21
   1fca8:	bl	cf10 <mpfr_round_raw@plt>
   1fcac:	str	x19, [x20]
   1fcb0:	cbnz	w0, 1fd94 <mpfr_prec_round@@Base+0x1b0>
   1fcb4:	cmp	x23, x24
   1fcb8:	b.eq	1fccc <mpfr_prec_round@@Base+0xe8>  // b.none
   1fcbc:	mov	x0, x23
   1fcc0:	mov	x1, x24
   1fcc4:	mov	x2, x22
   1fcc8:	bl	be50 <memcpy@plt>
   1fccc:	ldur	x0, [x29, #-8]
   1fcd0:	cbnz	x0, 1fde4 <mpfr_prec_round@@Base+0x200>
   1fcd4:	ldr	w0, [x29, #28]
   1fcd8:	mov	sp, x29
   1fcdc:	ldp	x20, x19, [sp, #64]
   1fce0:	ldp	x22, x21, [sp, #48]
   1fce4:	ldp	x24, x23, [sp, #32]
   1fce8:	ldr	x25, [sp, #16]
   1fcec:	ldp	x29, x30, [sp], #80
   1fcf0:	ret
   1fcf4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   1fcf8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   1fcfc:	add	x0, x0, #0xf38
   1fd00:	add	x2, x2, #0xf45
   1fd04:	mov	w1, #0x3b                  	// #59
   1fd08:	bl	d030 <mpfr_assert_fail@plt>
   1fd0c:	b	1fc20 <mpfr_prec_round@@Base+0x3c>
   1fd10:	ldr	x0, [x20, #24]
   1fd14:	ldr	x8, [x0, #-8]!
   1fd18:	cmp	x25, x8
   1fd1c:	b.lt	1fc50 <mpfr_prec_round@@Base+0x6c>  // b.tstop
   1fd20:	lsl	x8, x8, #3
   1fd24:	lsl	x9, x23, #3
   1fd28:	add	x1, x8, #0x8
   1fd2c:	add	x2, x9, #0x8
   1fd30:	bl	c660 <mpfr_reallocate_func@plt>
   1fd34:	add	x8, x0, #0x8
   1fd38:	str	x8, [x20, #24]
   1fd3c:	str	x23, [x0]
   1fd40:	b	1fc50 <mpfr_prec_round@@Base+0x6c>
   1fd44:	add	x9, x22, #0x103
   1fd48:	cmp	x8, x9
   1fd4c:	str	x19, [x20]
   1fd50:	b.ne	1fdec <mpfr_prec_round@@Base+0x208>  // b.any
   1fd54:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1fd58:	ldr	x1, [x0, #2800]
   1fd5c:	add	x0, x0, #0xaf0
   1fd60:	blr	x1
   1fd64:	mov	x8, x0
   1fd68:	mrs	x9, tpidr_el0
   1fd6c:	ldr	w10, [x9, x8]
   1fd70:	mov	w0, wzr
   1fd74:	orr	w10, w10, #0x4
   1fd78:	str	w10, [x9, x8]
   1fd7c:	b	1fcd8 <mpfr_prec_round@@Base+0xf4>
   1fd80:	sub	x0, x29, #0x8
   1fd84:	mov	x1, x22
   1fd88:	bl	c220 <mpfr_tmp_allocate@plt>
   1fd8c:	mov	x24, x0
   1fd90:	b	1fc84 <mpfr_prec_round@@Base+0xa0>
   1fd94:	ldr	x8, [x20, #16]
   1fd98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   1fd9c:	ldr	x1, [x0, #2768]
   1fda0:	add	x0, x0, #0xad0
   1fda4:	blr	x1
   1fda8:	mrs	x9, tpidr_el0
   1fdac:	ldr	x9, [x9, x0]
   1fdb0:	cmp	x8, x9
   1fdb4:	b.eq	1fdf4 <mpfr_prec_round@@Base+0x210>  // b.none
   1fdb8:	add	x8, x8, #0x1
   1fdbc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   1fdc0:	cmp	x19, #0x41
   1fdc4:	str	x8, [x20, #16]
   1fdc8:	str	x9, [x23, x25, lsl #3]
   1fdcc:	b.lt	1fccc <mpfr_prec_round@@Base+0xe8>  // b.tstop
   1fdd0:	lsl	x2, x25, #3
   1fdd4:	mov	x0, x23
   1fdd8:	mov	w1, wzr
   1fddc:	bl	c5b0 <memset@plt>
   1fde0:	b	1fccc <mpfr_prec_round@@Base+0xe8>
   1fde4:	bl	c8d0 <mpfr_tmp_free@plt>
   1fde8:	b	1fcd4 <mpfr_prec_round@@Base+0xf0>
   1fdec:	mov	w0, wzr
   1fdf0:	b	1fcd8 <mpfr_prec_round@@Base+0xf4>
   1fdf4:	ldr	w2, [x20, #8]
   1fdf8:	mov	x0, x20
   1fdfc:	mov	w1, w21
   1fe00:	bl	c3a0 <mpfr_overflow@plt>
   1fe04:	b	1fccc <mpfr_prec_round@@Base+0xe8>

000000000001fe08 <mpfr_can_round@@Base>:
   1fe08:	stp	x29, x30, [sp, #-16]!
   1fe0c:	ldr	x8, [x0, #16]
   1fe10:	mov	x9, #0x4                   	// #4
   1fe14:	movk	x9, #0x8000, lsl #48
   1fe18:	mov	x29, sp
   1fe1c:	cmp	x8, x9
   1fe20:	b.lt	1fe68 <mpfr_can_round@@Base+0x60>  // b.tstop
   1fe24:	ldr	x9, [x0]
   1fe28:	ldr	x8, [x0, #24]
   1fe2c:	mov	x6, x4
   1fe30:	mov	w4, w2
   1fe34:	sub	x10, x9, #0x1
   1fe38:	add	x9, x9, #0x3e
   1fe3c:	cmp	x10, #0x0
   1fe40:	ldr	w2, [x0, #8]
   1fe44:	csel	x9, x9, x10, lt  // lt = tstop
   1fe48:	asr	x9, x9, #6
   1fe4c:	mov	w5, w3
   1fe50:	mov	x3, x1
   1fe54:	add	x1, x9, #0x1
   1fe58:	mov	x0, x8
   1fe5c:	bl	c810 <mpfr_can_round_raw@plt>
   1fe60:	ldp	x29, x30, [sp], #16
   1fe64:	ret
   1fe68:	mov	w0, wzr
   1fe6c:	ldp	x29, x30, [sp], #16
   1fe70:	ret

000000000001fe74 <mpfr_can_round_raw@@Base>:
   1fe74:	stp	x29, x30, [sp, #-96]!
   1fe78:	stp	x28, x27, [sp, #16]
   1fe7c:	stp	x26, x25, [sp, #32]
   1fe80:	stp	x24, x23, [sp, #48]
   1fe84:	stp	x22, x21, [sp, #64]
   1fe88:	stp	x20, x19, [sp, #80]
   1fe8c:	mov	x29, sp
   1fe90:	sub	sp, sp, #0x50
   1fe94:	mov	x21, x6
   1fe98:	mov	w23, w5
   1fe9c:	mov	w25, w4
   1fea0:	mov	x22, x3
   1fea4:	mov	w19, w2
   1fea8:	mov	x24, x1
   1feac:	cmp	x6, #0x0
   1feb0:	mov	x20, x0
   1feb4:	b.le	2039c <mpfr_can_round_raw@@Base+0x528>
   1feb8:	mov	w12, wzr
   1febc:	lsr	w8, w19, #31
   1fec0:	stur	w8, [x29, #-20]
   1fec4:	cbz	w25, 1fee8 <mpfr_can_round_raw@@Base+0x74>
   1fec8:	cmp	w25, #0x5
   1fecc:	b.eq	1fee8 <mpfr_can_round_raw@@Base+0x74>  // b.none
   1fed0:	ldur	w8, [x29, #-20]
   1fed4:	add	w8, w8, w25
   1fed8:	cmp	w8, #0x3
   1fedc:	ccmp	w25, #0x1, #0x4, ne  // ne = any
   1fee0:	mov	w8, #0x4                   	// #4
   1fee4:	csinc	w12, w8, wzr, ne  // ne = any
   1fee8:	cmp	w12, #0x0
   1feec:	cset	w8, ne  // ne = any
   1fef0:	cmp	w23, #0x5
   1fef4:	csel	w8, w8, w23, eq  // eq = none
   1fef8:	cbz	w8, 1ff18 <mpfr_can_round_raw@@Base+0xa4>
   1fefc:	ldur	w9, [x29, #-20]
   1ff00:	add	w9, w8, w9
   1ff04:	cmp	w9, #0x3
   1ff08:	ccmp	w8, #0x1, #0x4, ne  // ne = any
   1ff0c:	mov	w8, #0x4                   	// #4
   1ff10:	csinc	w4, w8, wzr, ne  // ne = any
   1ff14:	b	1ff1c <mpfr_can_round_raw@@Base+0xa8>
   1ff18:	mov	w4, wzr
   1ff1c:	cmp	w12, #0x0
   1ff20:	cinc	x8, x21, eq  // eq = none
   1ff24:	cmp	x8, x22
   1ff28:	b.gt	205dc <mpfr_can_round_raw@@Base+0x768>
   1ff2c:	b.ne	1ff44 <mpfr_can_round_raw@@Base+0xd0>  // b.any
   1ff30:	cmp	w12, #0x4
   1ff34:	mov	w27, wzr
   1ff38:	b.eq	20330 <mpfr_can_round_raw@@Base+0x4bc>  // b.none
   1ff3c:	cmp	w4, #0x1
   1ff40:	b.eq	20330 <mpfr_can_round_raw@@Base+0x4bc>  // b.none
   1ff44:	lsl	x25, x24, #6
   1ff48:	cmp	x25, x21
   1ff4c:	b.lt	203b8 <mpfr_can_round_raw@@Base+0x544>  // b.tstop
   1ff50:	cmp	x25, x22
   1ff54:	stur	x20, [x29, #-48]
   1ff58:	stur	w4, [x29, #-36]
   1ff5c:	b.lt	20404 <mpfr_can_round_raw@@Base+0x590>  // b.tstop
   1ff60:	stur	x8, [x29, #-72]
   1ff64:	sub	x8, x22, #0x1
   1ff68:	add	x9, x22, #0x3e
   1ff6c:	sub	x10, x21, #0x1
   1ff70:	cmp	x8, #0x0
   1ff74:	add	x11, x21, #0x3e
   1ff78:	csel	x8, x9, x8, lt  // lt = tstop
   1ff7c:	cmp	x10, #0x0
   1ff80:	csel	x9, x11, x10, lt  // lt = tstop
   1ff84:	asr	x25, x9, #6
   1ff88:	asr	x8, x8, #6
   1ff8c:	sub	x19, x24, x25
   1ff90:	sub	x23, x8, x25
   1ff94:	lsl	x27, x19, #3
   1ff98:	neg	w20, w22
   1ff9c:	neg	w26, w21
   1ffa0:	and	x28, x9, #0xffffffffffffffc0
   1ffa4:	cmp	x27, #0x4, lsl #12
   1ffa8:	add	x8, x23, #0x1
   1ffac:	stur	xzr, [x29, #-16]
   1ffb0:	stur	x8, [x29, #-32]
   1ffb4:	b.hi	20444 <mpfr_can_round_raw@@Base+0x5d0>  // b.pmore
   1ffb8:	add	x9, x27, #0xf
   1ffbc:	mov	x8, sp
   1ffc0:	and	x9, x9, #0xfffffffffffffff0
   1ffc4:	sub	x24, x8, x9
   1ffc8:	mov	sp, x24
   1ffcc:	and	w8, w26, #0x3f
   1ffd0:	stur	x8, [x29, #-64]
   1ffd4:	ldur	x8, [x29, #-32]
   1ffd8:	sub	x9, x21, x28
   1ffdc:	ldur	x28, [x29, #-48]
   1ffe0:	and	w20, w20, #0x3f
   1ffe4:	subs	x8, x19, x8
   1ffe8:	stur	x9, [x29, #-56]
   1ffec:	b.le	20014 <mpfr_can_round_raw@@Base+0x1a0>
   1fff0:	cmp	x24, x28
   1fff4:	b.eq	20014 <mpfr_can_round_raw@@Base+0x1a0>  // b.none
   1fff8:	lsl	x2, x8, #3
   1fffc:	mov	x0, x24
   20000:	mov	x1, x28
   20004:	mov	w26, w12
   20008:	bl	be50 <memcpy@plt>
   2000c:	ldur	w4, [x29, #-36]
   20010:	mov	w12, w26
   20014:	cbz	w12, 200fc <mpfr_can_round_raw@@Base+0x288>
   20018:	cmp	w12, #0x1
   2001c:	b.ne	20170 <mpfr_can_round_raw@@Base+0x2fc>  // b.any
   20020:	add	x26, x28, x27
   20024:	ldur	x8, [x26, #-8]
   20028:	ldur	w2, [x29, #-20]
   2002c:	ldur	x3, [x29, #-56]
   20030:	lsl	x1, x19, #6
   20034:	mov	x0, x28
   20038:	stur	x8, [x29, #-72]
   2003c:	bl	cc30 <mpfr_round_raw_2@plt>
   20040:	ldur	x2, [x29, #-32]
   20044:	mvn	x9, x23
   20048:	add	x8, x24, x27
   2004c:	mov	w10, #0x1                   	// #1
   20050:	lsl	x9, x9, #3
   20054:	mov	w28, w0
   20058:	add	x0, x8, x9
   2005c:	add	x1, x26, x9
   20060:	lsl	x3, x10, x20
   20064:	bl	bf60 <__gmpn_add_1@plt>
   20068:	cmp	x0, #0x0
   2006c:	cset	w8, ne  // ne = any
   20070:	cmp	x21, #0x81
   20074:	b.lt	201a4 <mpfr_can_round_raw@@Base+0x330>  // b.tstop
   20078:	ldur	w4, [x29, #-36]
   2007c:	cbz	x0, 200b8 <mpfr_can_round_raw@@Base+0x244>
   20080:	ldur	x8, [x29, #-48]
   20084:	mov	x9, xzr
   20088:	add	x10, x8, x19, lsl #3
   2008c:	ldr	x11, [x10, x9, lsl #3]
   20090:	add	x12, x9, #0x2
   20094:	cmn	x11, #0x1
   20098:	cset	w8, eq  // eq = none
   2009c:	cmp	x12, x25
   200a0:	b.ge	200b0 <mpfr_can_round_raw@@Base+0x23c>  // b.tcont
   200a4:	cmn	x11, #0x1
   200a8:	add	x9, x9, #0x1
   200ac:	b.eq	2008c <mpfr_can_round_raw@@Base+0x218>  // b.none
   200b0:	cmn	x11, #0x1
   200b4:	cset	w0, eq  // eq = none
   200b8:	cmp	x22, x21
   200bc:	b.ne	200c4 <mpfr_can_round_raw@@Base+0x250>  // b.any
   200c0:	cbz	x0, 202ec <mpfr_can_round_raw@@Base+0x478>
   200c4:	ldp	x10, x9, [x29, #-72]
   200c8:	lsr	x9, x10, x9
   200cc:	and	x9, x9, #0x1
   200d0:	sxtw	x10, w28
   200d4:	eor	x26, x9, x10
   200d8:	cbz	w8, 202f4 <mpfr_can_round_raw@@Base+0x480>
   200dc:	cmp	w4, #0x1
   200e0:	b.eq	202ec <mpfr_can_round_raw@@Base+0x478>  // b.none
   200e4:	cmp	w4, #0x4
   200e8:	b.ne	20608 <mpfr_can_round_raw@@Base+0x794>  // b.any
   200ec:	cmp	x22, x21
   200f0:	mov	w27, wzr
   200f4:	b.gt	20504 <mpfr_can_round_raw@@Base+0x690>
   200f8:	b	20328 <mpfr_can_round_raw@@Base+0x4b4>
   200fc:	ldur	x2, [x29, #-32]
   20100:	mvn	x9, x23
   20104:	add	x8, x24, x27
   20108:	add	x10, x28, x27
   2010c:	mov	w11, #0x1                   	// #1
   20110:	lsl	x9, x9, #3
   20114:	add	x0, x8, x9
   20118:	add	x1, x10, x9
   2011c:	lsl	x3, x11, x20
   20120:	stur	w12, [x29, #-76]
   20124:	bl	bf60 <__gmpn_add_1@plt>
   20128:	cmp	x0, #0x0
   2012c:	cset	w26, ne  // ne = any
   20130:	cmp	x21, #0x81
   20134:	b.lt	201b4 <mpfr_can_round_raw@@Base+0x340>  // b.tstop
   20138:	ldur	w4, [x29, #-36]
   2013c:	cbz	x0, 201b8 <mpfr_can_round_raw@@Base+0x344>
   20140:	mov	x8, xzr
   20144:	add	x9, x28, x19, lsl #3
   20148:	ldr	x10, [x9, x8, lsl #3]
   2014c:	add	x11, x8, #0x2
   20150:	cmn	x10, #0x1
   20154:	cset	w26, eq  // eq = none
   20158:	cmp	x11, x25
   2015c:	b.ge	201b8 <mpfr_can_round_raw@@Base+0x344>  // b.tcont
   20160:	cmn	x10, #0x1
   20164:	add	x8, x8, #0x1
   20168:	b.eq	20148 <mpfr_can_round_raw@@Base+0x2d4>  // b.none
   2016c:	b	201b8 <mpfr_can_round_raw@@Base+0x344>
   20170:	add	x8, x28, x19, lsl #3
   20174:	ldur	x8, [x8, #-8]
   20178:	ldp	x9, x3, [x29, #-64]
   2017c:	ldur	w2, [x29, #-20]
   20180:	lsl	x1, x19, #6
   20184:	mov	x0, x28
   20188:	lsr	x8, x8, x9
   2018c:	stur	w12, [x29, #-76]
   20190:	and	x26, x8, #0x1
   20194:	bl	cc30 <mpfr_round_raw_2@plt>
   20198:	sxtw	x8, w0
   2019c:	eor	x26, x26, x8
   201a0:	b	201f0 <mpfr_can_round_raw@@Base+0x37c>
   201a4:	ldur	w4, [x29, #-36]
   201a8:	cmp	x22, x21
   201ac:	b.eq	200c0 <mpfr_can_round_raw@@Base+0x24c>  // b.none
   201b0:	b	200c4 <mpfr_can_round_raw@@Base+0x250>
   201b4:	ldur	w4, [x29, #-36]
   201b8:	add	x8, x24, x19, lsl #3
   201bc:	ldur	w2, [x29, #-20]
   201c0:	ldur	x3, [x29, #-56]
   201c4:	ldur	x28, [x8, #-8]
   201c8:	lsl	x1, x19, #6
   201cc:	mov	x0, x24
   201d0:	bl	cc30 <mpfr_round_raw_2@plt>
   201d4:	cbnz	w26, 204d8 <mpfr_can_round_raw@@Base+0x664>
   201d8:	ldur	x8, [x29, #-64]
   201dc:	sxtw	x9, w0
   201e0:	lsr	x8, x28, x8
   201e4:	ldur	x28, [x29, #-48]
   201e8:	and	x8, x8, #0x1
   201ec:	eor	x26, x8, x9
   201f0:	ldur	x2, [x29, #-32]
   201f4:	mvn	x9, x23
   201f8:	add	x8, x24, x27
   201fc:	add	x27, x28, x27
   20200:	mov	w10, #0x1                   	// #1
   20204:	lsl	x9, x9, #3
   20208:	add	x0, x8, x9
   2020c:	add	x1, x27, x9
   20210:	lsl	x3, x10, x20
   20214:	bl	c8f0 <__gmpn_sub_1@plt>
   20218:	sub	x20, x19, #0x1
   2021c:	ldr	x8, [x24, x20, lsl #3]
   20220:	mov	x23, xzr
   20224:	cmp	x21, #0x41
   20228:	stur	x8, [x29, #-8]
   2022c:	b.lt	20264 <mpfr_can_round_raw@@Base+0x3f0>  // b.tstop
   20230:	mov	x3, x0
   20234:	cbz	x0, 20264 <mpfr_can_round_raw@@Base+0x3f0>
   20238:	mov	x23, xzr
   2023c:	sub	x0, x29, #0x8
   20240:	mov	w2, #0x1                   	// #1
   20244:	mov	x1, x27
   20248:	bl	c8f0 <__gmpn_sub_1@plt>
   2024c:	add	x23, x23, #0x1
   20250:	cmp	x23, x25
   20254:	b.ge	20264 <mpfr_can_round_raw@@Base+0x3f0>  // b.tcont
   20258:	mov	x3, x0
   2025c:	add	x27, x27, #0x8
   20260:	cbnz	x0, 2023c <mpfr_can_round_raw@@Base+0x3c8>
   20264:	cmp	x23, x25
   20268:	b.ne	202c8 <mpfr_can_round_raw@@Base+0x454>  // b.any
   2026c:	ldur	x8, [x29, #-8]
   20270:	tbnz	x8, #63, 202c8 <mpfr_can_round_raw@@Base+0x454>
   20274:	ldur	w4, [x29, #-36]
   20278:	cmp	w4, #0x1
   2027c:	b.eq	202ec <mpfr_can_round_raw@@Base+0x478>  // b.none
   20280:	ldur	w8, [x29, #-76]
   20284:	mov	w27, wzr
   20288:	cmp	w8, #0x0
   2028c:	cset	w8, eq  // eq = none
   20290:	cmp	w4, #0x4
   20294:	cset	w9, eq  // eq = none
   20298:	and	w8, w8, w9
   2029c:	tbnz	w8, #0, 20328 <mpfr_can_round_raw@@Base+0x4b4>
   202a0:	cbnz	x26, 20328 <mpfr_can_round_raw@@Base+0x4b4>
   202a4:	ldur	x8, [x29, #-56]
   202a8:	ldur	w2, [x29, #-20]
   202ac:	lsl	x1, x19, #6
   202b0:	mov	x0, x24
   202b4:	add	x3, x8, #0x1
   202b8:	bl	cc30 <mpfr_round_raw_2@plt>
   202bc:	cmp	w0, #0x0
   202c0:	cset	w27, ne  // ne = any
   202c4:	b	20328 <mpfr_can_round_raw@@Base+0x4b4>
   202c8:	ldur	x8, [x29, #-72]
   202cc:	ldur	w4, [x29, #-36]
   202d0:	cmp	x8, x22
   202d4:	b.ne	202f4 <mpfr_can_round_raw@@Base+0x480>  // b.any
   202d8:	cbnz	w4, 202ec <mpfr_can_round_raw@@Base+0x478>
   202dc:	ldr	x8, [x28, x20, lsl #3]
   202e0:	ldur	x9, [x29, #-64]
   202e4:	lsr	x8, x8, x9
   202e8:	tbz	w8, #0, 20354 <mpfr_can_round_raw@@Base+0x4e0>
   202ec:	mov	w27, wzr
   202f0:	b	20328 <mpfr_can_round_raw@@Base+0x4b4>
   202f4:	add	x8, x24, x19, lsl #3
   202f8:	ldur	x8, [x8, #-8]
   202fc:	ldp	x9, x3, [x29, #-64]
   20300:	ldur	w2, [x29, #-20]
   20304:	lsl	x1, x19, #6
   20308:	mov	x0, x24
   2030c:	lsr	x8, x8, x9
   20310:	and	x20, x8, #0x1
   20314:	bl	cc30 <mpfr_round_raw_2@plt>
   20318:	sxtw	x8, w0
   2031c:	eor	x8, x20, x8
   20320:	cmp	x26, x8
   20324:	cset	w27, eq  // eq = none
   20328:	ldur	x0, [x29, #-16]
   2032c:	cbnz	x0, 20464 <mpfr_can_round_raw@@Base+0x5f0>
   20330:	mov	w0, w27
   20334:	mov	sp, x29
   20338:	ldp	x20, x19, [sp, #80]
   2033c:	ldp	x22, x21, [sp, #64]
   20340:	ldp	x24, x23, [sp, #48]
   20344:	ldp	x26, x25, [sp, #32]
   20348:	ldp	x28, x27, [sp, #16]
   2034c:	ldp	x29, x30, [sp], #96
   20350:	ret
   20354:	lsl	x21, x19, #6
   20358:	ldur	w19, [x29, #-20]
   2035c:	ldur	x20, [x29, #-56]
   20360:	mov	w4, #0x1                   	// #1
   20364:	mov	x0, x28
   20368:	mov	x1, x21
   2036c:	mov	w2, w19
   20370:	mov	x3, x20
   20374:	bl	cc30 <mpfr_round_raw_2@plt>
   20378:	mov	w22, w0
   2037c:	mov	w4, #0x4                   	// #4
   20380:	mov	x0, x28
   20384:	mov	x1, x21
   20388:	mov	w2, w19
   2038c:	mov	x3, x20
   20390:	bl	cc30 <mpfr_round_raw_2@plt>
   20394:	cmp	w22, w0
   20398:	b	20324 <mpfr_can_round_raw@@Base+0x4b0>
   2039c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   203a0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   203a4:	add	x0, x0, #0xf38
   203a8:	add	x2, x2, #0xf93
   203ac:	mov	w1, #0xbf                  	// #191
   203b0:	bl	d030 <mpfr_assert_fail@plt>
   203b4:	b	1feb8 <mpfr_can_round_raw@@Base+0x44>
   203b8:	cmp	w12, w4
   203bc:	cset	w8, eq  // eq = none
   203c0:	cmp	w4, #0x0
   203c4:	cset	w9, eq  // eq = none
   203c8:	cmp	x21, x22
   203cc:	mov	w27, wzr
   203d0:	b.ge	20330 <mpfr_can_round_raw@@Base+0x4bc>  // b.tcont
   203d4:	orr	w8, w8, w9
   203d8:	cbz	w8, 20330 <mpfr_can_round_raw@@Base+0x4bc>
   203dc:	add	x8, x21, #0x1
   203e0:	cmp	x8, x22
   203e4:	b.ne	2043c <mpfr_can_round_raw@@Base+0x5c8>  // b.any
   203e8:	cmp	w12, #0x1
   203ec:	b.eq	2043c <mpfr_can_round_raw@@Base+0x5c8>  // b.none
   203f0:	mov	x0, x20
   203f4:	mov	x1, x24
   203f8:	bl	ccb0 <mpfr_powerof2_raw2@plt>
   203fc:	cbnz	w0, 205dc <mpfr_can_round_raw@@Base+0x768>
   20400:	b	2043c <mpfr_can_round_raw@@Base+0x5c8>
   20404:	mov	x0, x20
   20408:	mov	x1, x24
   2040c:	mov	w19, w12
   20410:	bl	ccb0 <mpfr_powerof2_raw2@plt>
   20414:	cbz	w0, 2046c <mpfr_can_round_raw@@Base+0x5f8>
   20418:	ldur	w8, [x29, #-36]
   2041c:	cmp	w8, #0x4
   20420:	b.eq	2042c <mpfr_can_round_raw@@Base+0x5b8>  // b.none
   20424:	cmp	w8, #0x1
   20428:	b.ne	20434 <mpfr_can_round_raw@@Base+0x5c0>  // b.any
   2042c:	cmp	w19, w8
   20430:	b.ne	205dc <mpfr_can_round_raw@@Base+0x768>  // b.any
   20434:	cmp	w19, #0x1
   20438:	b.ne	2051c <mpfr_can_round_raw@@Base+0x6a8>  // b.any
   2043c:	mov	w27, #0x1                   	// #1
   20440:	b	20330 <mpfr_can_round_raw@@Base+0x4bc>
   20444:	sub	x0, x29, #0x10
   20448:	mov	x1, x27
   2044c:	mov	w24, w12
   20450:	bl	c220 <mpfr_tmp_allocate@plt>
   20454:	ldur	w4, [x29, #-36]
   20458:	mov	w12, w24
   2045c:	mov	x24, x0
   20460:	b	1ffcc <mpfr_can_round_raw@@Base+0x158>
   20464:	bl	c8d0 <mpfr_tmp_free@plt>
   20468:	b	20330 <mpfr_can_round_raw@@Base+0x4bc>
   2046c:	ldur	w8, [x29, #-36]
   20470:	cbz	w8, 2052c <mpfr_can_round_raw@@Base+0x6b8>
   20474:	cmp	w19, w8
   20478:	b.ne	205e4 <mpfr_can_round_raw@@Base+0x770>  // b.any
   2047c:	cmp	x25, x21
   20480:	mov	w27, #0x1                   	// #1
   20484:	b.le	20330 <mpfr_can_round_raw@@Base+0x4bc>
   20488:	ldur	x10, [x29, #-48]
   2048c:	cbnz	w19, 20330 <mpfr_can_round_raw@@Base+0x4bc>
   20490:	add	x8, x21, #0x3f
   20494:	cmp	x21, #0x0
   20498:	csel	x8, x8, x21, lt  // lt = tstop
   2049c:	mov	x9, #0xffffffffffffffff    	// #-1
   204a0:	eor	x8, x9, x8, asr #6
   204a4:	add	x8, x8, x24
   204a8:	ldr	x8, [x10, x8, lsl #3]
   204ac:	mvn	w9, w21
   204b0:	lsr	x8, x8, x9
   204b4:	tbz	w8, #0, 2043c <mpfr_can_round_raw@@Base+0x5c8>
   204b8:	ldur	x0, [x29, #-48]
   204bc:	ldur	w2, [x29, #-20]
   204c0:	add	x3, x21, #0x1
   204c4:	mov	w4, #0x4                   	// #4
   204c8:	mov	x1, x25
   204cc:	bl	cc30 <mpfr_round_raw_2@plt>
   204d0:	cbnz	w0, 2043c <mpfr_can_round_raw@@Base+0x5c8>
   204d4:	b	205dc <mpfr_can_round_raw@@Base+0x768>
   204d8:	ldur	w9, [x29, #-36]
   204dc:	cmp	w9, #0x1
   204e0:	b.eq	202ec <mpfr_can_round_raw@@Base+0x478>  // b.none
   204e4:	add	x8, x21, #0x1
   204e8:	cmp	x8, x22
   204ec:	cset	w27, lt  // lt = tstop
   204f0:	cmp	w9, #0x4
   204f4:	b.ne	20328 <mpfr_can_round_raw@@Base+0x4b4>  // b.any
   204f8:	cmp	x8, x22
   204fc:	mov	w27, wzr
   20500:	b.ge	20328 <mpfr_can_round_raw@@Base+0x4b4>  // b.tcont
   20504:	ldur	x8, [x29, #-32]
   20508:	cmp	x19, x8
   2050c:	b.ne	20328 <mpfr_can_round_raw@@Base+0x4b4>  // b.any
   20510:	ldr	x8, [x24]
   20514:	cmp	x8, #0x0
   20518:	b	20324 <mpfr_can_round_raw@@Base+0x4b0>
   2051c:	add	x8, x21, #0x1
   20520:	cmp	x8, x22
   20524:	cset	w27, lt  // lt = tstop
   20528:	b	20330 <mpfr_can_round_raw@@Base+0x4bc>
   2052c:	add	x3, x21, #0x1
   20530:	cmp	x3, x22
   20534:	b.ne	20540 <mpfr_can_round_raw@@Base+0x6cc>  // b.any
   20538:	ldrb	w8, [x20]
   2053c:	tbnz	w8, #0, 205dc <mpfr_can_round_raw@@Base+0x768>
   20540:	cmp	x25, x21
   20544:	b.le	2043c <mpfr_can_round_raw@@Base+0x5c8>
   20548:	add	x8, x21, #0x3f
   2054c:	cmp	x21, #0x0
   20550:	csel	x8, x8, x21, lt  // lt = tstop
   20554:	mov	x9, #0xffffffffffffffff    	// #-1
   20558:	eor	x8, x9, x8, asr #6
   2055c:	ldur	x9, [x29, #-48]
   20560:	add	x8, x8, x24
   20564:	ldr	x8, [x9, x8, lsl #3]
   20568:	mvn	w9, w21
   2056c:	lsr	x8, x8, x9
   20570:	tbz	w8, #0, 2043c <mpfr_can_round_raw@@Base+0x5c8>
   20574:	ldur	x0, [x29, #-48]
   20578:	ldur	w2, [x29, #-20]
   2057c:	mov	w4, #0x4                   	// #4
   20580:	mov	x1, x25
   20584:	bl	cc30 <mpfr_round_raw_2@plt>
   20588:	cmp	w0, #0x0
   2058c:	cset	w27, ne  // ne = any
   20590:	cbz	w19, 20330 <mpfr_can_round_raw@@Base+0x4bc>
   20594:	ldur	x10, [x29, #-48]
   20598:	cbnz	w0, 20330 <mpfr_can_round_raw@@Base+0x4bc>
   2059c:	sub	x8, x21, #0x1
   205a0:	add	x9, x21, #0x3e
   205a4:	cmp	x8, #0x0
   205a8:	csel	x8, x9, x8, lt  // lt = tstop
   205ac:	mov	x9, #0xffffffffffffffff    	// #-1
   205b0:	eor	x8, x9, x8, asr #6
   205b4:	add	x8, x8, x24
   205b8:	ldr	x8, [x10, x8, lsl #3]
   205bc:	neg	w9, w21
   205c0:	cmp	w19, #0x1
   205c4:	cset	w10, eq  // eq = none
   205c8:	lsr	x8, x8, x9
   205cc:	tst	x8, #0x1
   205d0:	cset	w8, eq  // eq = none
   205d4:	eor	w27, w10, w8
   205d8:	b	20330 <mpfr_can_round_raw@@Base+0x4bc>
   205dc:	mov	w27, wzr
   205e0:	b	20330 <mpfr_can_round_raw@@Base+0x4bc>
   205e4:	ldur	w2, [x29, #-20]
   205e8:	mov	w4, #0x4                   	// #4
   205ec:	mov	x0, x20
   205f0:	mov	x1, x25
   205f4:	mov	x3, x21
   205f8:	bl	cc30 <mpfr_round_raw_2@plt>
   205fc:	cmp	w0, #0x0
   20600:	cset	w27, ne  // ne = any
   20604:	b	20330 <mpfr_can_round_raw@@Base+0x4bc>
   20608:	cmp	x26, #0x0
   2060c:	b	20324 <mpfr_can_round_raw@@Base+0x4b0>

0000000000020610 <mpfr_set4@@Base>:
   20610:	stp	x29, x30, [sp, #-64]!
   20614:	stp	x24, x23, [sp, #16]
   20618:	stp	x22, x21, [sp, #32]
   2061c:	stp	x20, x19, [sp, #48]
   20620:	str	w3, [x0, #8]
   20624:	ldr	x8, [x1, #16]
   20628:	mov	x9, #0x2                   	// #2
   2062c:	movk	x9, #0x8000, lsl #48
   20630:	add	x10, x9, #0x2
   20634:	str	x8, [x0, #16]
   20638:	ldr	x8, [x1, #16]
   2063c:	mov	x29, sp
   20640:	cmp	x8, x10
   20644:	b.lt	20844 <mpfr_set4@@Base+0x234>  // b.tstop
   20648:	ldr	x9, [x1]
   2064c:	ldr	x8, [x0]
   20650:	ldr	x20, [x0, #24]
   20654:	mov	x21, x0
   20658:	cmp	x9, x8
   2065c:	b.ne	20698 <mpfr_set4@@Base+0x88>  // b.any
   20660:	ldr	x1, [x1, #24]
   20664:	cmp	x20, x1
   20668:	b.eq	20690 <mpfr_set4@@Base+0x80>  // b.none
   2066c:	sub	x8, x9, #0x1
   20670:	add	x9, x9, #0x3e
   20674:	cmp	x8, #0x0
   20678:	csel	x8, x9, x8, lt  // lt = tstop
   2067c:	asr	x8, x8, #6
   20680:	lsl	x8, x8, #3
   20684:	add	x2, x8, #0x8
   20688:	mov	x0, x20
   2068c:	bl	be50 <memcpy@plt>
   20690:	mov	w0, wzr
   20694:	b	208d8 <mpfr_set4@@Base+0x2c8>
   20698:	sub	x10, x9, #0x1
   2069c:	add	x11, x9, #0x3e
   206a0:	sub	x12, x8, #0x1
   206a4:	cmp	x10, #0x0
   206a8:	add	x13, x8, #0x3e
   206ac:	csel	x10, x11, x10, lt  // lt = tstop
   206b0:	cmp	x12, #0x0
   206b4:	asr	x11, x10, #6
   206b8:	csel	x10, x13, x12, lt  // lt = tstop
   206bc:	asr	x24, x10, #6
   206c0:	mov	w22, w2
   206c4:	add	x12, x11, #0x1
   206c8:	cmp	x8, x9
   206cc:	add	x2, x24, #0x1
   206d0:	b.ge	20878 <mpfr_set4@@Base+0x268>  // b.tcont
   206d4:	ldr	x10, [x1, #24]
   206d8:	neg	w8, w8
   206dc:	mvn	x13, x24
   206e0:	mov	w19, w3
   206e4:	add	x9, x10, x12, lsl #3
   206e8:	ands	x8, x8, #0x3f
   206ec:	add	x1, x9, x13, lsl #3
   206f0:	b.eq	208ec <mpfr_set4@@Base+0x2dc>  // b.none
   206f4:	ldr	x9, [x1]
   206f8:	sub	x8, x8, #0x1
   206fc:	mov	w13, #0x1                   	// #1
   20700:	lsl	x13, x13, x8
   20704:	sub	x14, x13, #0x1
   20708:	and	x8, x9, x13
   2070c:	and	x9, x9, x14
   20710:	cbz	w22, 20754 <mpfr_set4@@Base+0x144>
   20714:	cbz	x8, 20754 <mpfr_set4@@Base+0x144>
   20718:	lsl	x23, x13, #1
   2071c:	cmp	w22, #0x5
   20720:	b.eq	2080c <mpfr_set4@@Base+0x1fc>  // b.none
   20724:	cmp	w22, #0x1
   20728:	b.eq	2078c <mpfr_set4@@Base+0x17c>  // b.none
   2072c:	cbnz	w22, 20780 <mpfr_set4@@Base+0x170>
   20730:	cbz	x8, 2078c <mpfr_set4@@Base+0x17c>
   20734:	cbnz	x9, 207ac <mpfr_set4@@Base+0x19c>
   20738:	ldr	x8, [x1]
   2073c:	tst	x8, x23
   20740:	b.ne	207ac <mpfr_set4@@Base+0x19c>  // b.any
   20744:	neg	w19, w19
   20748:	cmp	x20, x1
   2074c:	b.ne	20818 <mpfr_set4@@Base+0x208>  // b.any
   20750:	b	20824 <mpfr_set4@@Base+0x214>
   20754:	cbnz	x9, 20718 <mpfr_set4@@Base+0x108>
   20758:	sub	x12, x12, x2
   2075c:	cbz	x12, 20718 <mpfr_set4@@Base+0x108>
   20760:	mvn	x9, x24
   20764:	add	x11, x9, x11
   20768:	ldr	x9, [x10, x11, lsl #3]
   2076c:	subs	x11, x11, #0x1
   20770:	cset	w12, cs  // cs = hs, nlast
   20774:	cbnz	x9, 20718 <mpfr_set4@@Base+0x108>
   20778:	tbnz	w12, #0, 20768 <mpfr_set4@@Base+0x158>
   2077c:	b	20718 <mpfr_set4@@Base+0x108>
   20780:	add	w10, w22, w19, lsr #31
   20784:	cmp	w10, #0x3
   20788:	b.ne	207a4 <mpfr_set4@@Base+0x194>  // b.any
   2078c:	orr	x8, x9, x8
   20790:	cmp	x8, #0x0
   20794:	csneg	w19, wzr, w19, eq  // eq = none
   20798:	cmp	x20, x1
   2079c:	b.ne	20818 <mpfr_set4@@Base+0x208>  // b.any
   207a0:	b	20824 <mpfr_set4@@Base+0x214>
   207a4:	orr	x8, x9, x8
   207a8:	cbz	x8, 2080c <mpfr_set4@@Base+0x1fc>
   207ac:	mov	x0, x20
   207b0:	mov	x3, x23
   207b4:	bl	bf60 <__gmpn_add_1@plt>
   207b8:	cbz	x0, 20824 <mpfr_set4@@Base+0x214>
   207bc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   207c0:	str	x8, [x20, x24, lsl #3]
   207c4:	ldr	x8, [x21, #16]
   207c8:	add	x9, x8, #0x1
   207cc:	str	x9, [x21, #16]
   207d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   207d4:	ldr	x1, [x0, #2768]
   207d8:	add	x0, x0, #0xad0
   207dc:	blr	x1
   207e0:	mrs	x9, tpidr_el0
   207e4:	ldr	x9, [x9, x0]
   207e8:	cmp	x8, x9
   207ec:	b.lt	20824 <mpfr_set4@@Base+0x214>  // b.tstop
   207f0:	mov	x0, x21
   207f4:	mov	w1, w22
   207f8:	mov	w2, w19
   207fc:	bl	c3a0 <mpfr_overflow@plt>
   20800:	mov	w8, #0x1                   	// #1
   20804:	cbnz	w8, 2083c <mpfr_set4@@Base+0x22c>
   20808:	b	208a8 <mpfr_set4@@Base+0x298>
   2080c:	mov	w19, wzr
   20810:	cmp	x20, x1
   20814:	b.eq	20824 <mpfr_set4@@Base+0x214>  // b.none
   20818:	lsl	x2, x2, #3
   2081c:	mov	x0, x20
   20820:	bl	be50 <memcpy@plt>
   20824:	ldr	x9, [x20]
   20828:	neg	x10, x23
   2082c:	mov	w8, wzr
   20830:	and	x9, x9, x10
   20834:	str	x9, [x20]
   20838:	cbz	w8, 208a8 <mpfr_set4@@Base+0x298>
   2083c:	cbnz	w8, 208d8 <mpfr_set4@@Base+0x2c8>
   20840:	b	208b0 <mpfr_set4@@Base+0x2a0>
   20844:	cmp	x8, x9
   20848:	b.ne	20690 <mpfr_set4@@Base+0x80>  // b.any
   2084c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20850:	ldr	x1, [x0, #2800]
   20854:	add	x0, x0, #0xaf0
   20858:	blr	x1
   2085c:	mov	x8, x0
   20860:	mrs	x9, tpidr_el0
   20864:	ldr	w10, [x9, x8]
   20868:	mov	w0, wzr
   2086c:	orr	w10, w10, #0x4
   20870:	str	w10, [x9, x8]
   20874:	b	208d8 <mpfr_set4@@Base+0x2c8>
   20878:	ldr	x1, [x1, #24]
   2087c:	sub	x19, x2, x12
   20880:	add	x0, x20, x19, lsl #3
   20884:	cmp	x0, x1
   20888:	b.eq	20894 <mpfr_set4@@Base+0x284>  // b.none
   2088c:	lsl	x2, x12, #3
   20890:	bl	be50 <memcpy@plt>
   20894:	lsl	x2, x19, #3
   20898:	mov	x0, x20
   2089c:	mov	w1, wzr
   208a0:	bl	c5b0 <memset@plt>
   208a4:	mov	w19, wzr
   208a8:	mov	w8, wzr
   208ac:	cbnz	w8, 208d8 <mpfr_set4@@Base+0x2c8>
   208b0:	cbz	w19, 20690 <mpfr_set4@@Base+0x80>
   208b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   208b8:	ldr	x1, [x0, #2800]
   208bc:	add	x0, x0, #0xaf0
   208c0:	blr	x1
   208c4:	mrs	x8, tpidr_el0
   208c8:	ldr	w9, [x8, x0]
   208cc:	orr	w9, w9, #0x8
   208d0:	str	w9, [x8, x0]
   208d4:	mov	w0, w19
   208d8:	ldp	x20, x19, [sp, #48]
   208dc:	ldp	x22, x21, [sp, #32]
   208e0:	ldp	x24, x23, [sp, #16]
   208e4:	ldp	x29, x30, [sp], #64
   208e8:	ret
   208ec:	ldur	x9, [x1, #-8]
   208f0:	and	x8, x9, #0x8000000000000000
   208f4:	and	x9, x9, #0x7fffffffffffffff
   208f8:	cbz	w22, 20908 <mpfr_set4@@Base+0x2f8>
   208fc:	cbz	x8, 20908 <mpfr_set4@@Base+0x2f8>
   20900:	mov	w23, #0x1                   	// #1
   20904:	b	2071c <mpfr_set4@@Base+0x10c>
   20908:	mov	w23, #0x1                   	// #1
   2090c:	cbnz	x9, 2071c <mpfr_set4@@Base+0x10c>
   20910:	sub	x12, x11, x2
   20914:	cbz	x12, 2071c <mpfr_set4@@Base+0x10c>
   20918:	sub	x9, x11, x24
   2091c:	sub	x11, x9, #0x2
   20920:	mov	w23, #0x1                   	// #1
   20924:	ldr	x9, [x10, x11, lsl #3]
   20928:	subs	x11, x11, #0x1
   2092c:	cset	w12, cs  // cs = hs, nlast
   20930:	cbnz	x9, 2071c <mpfr_set4@@Base+0x10c>
   20934:	tbnz	w12, #0, 20924 <mpfr_set4@@Base+0x314>
   20938:	b	2071c <mpfr_set4@@Base+0x10c>

000000000002093c <mpfr_set@@Base>:
   2093c:	stp	x29, x30, [sp, #-16]!
   20940:	ldr	w3, [x1, #8]
   20944:	mov	x29, sp
   20948:	bl	cb70 <mpfr_set4@plt>
   2094c:	ldp	x29, x30, [sp], #16
   20950:	ret

0000000000020954 <mpfr_abs@@Base>:
   20954:	stp	x29, x30, [sp, #-16]!
   20958:	mov	w3, #0x1                   	// #1
   2095c:	mov	x29, sp
   20960:	bl	cb70 <mpfr_set4@plt>
   20964:	ldp	x29, x30, [sp], #16
   20968:	ret

000000000002096c <mpfr_set_1_2@@Base>:
   2096c:	stp	x29, x30, [sp, #-64]!
   20970:	stp	x24, x23, [sp, #16]
   20974:	stp	x22, x21, [sp, #32]
   20978:	stp	x20, x19, [sp, #48]
   2097c:	ldr	x8, [x1, #16]
   20980:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   20984:	mov	w20, w3
   20988:	mov	w21, w2
   2098c:	mov	x22, x1
   20990:	cmp	x8, x9
   20994:	mov	x19, x0
   20998:	mov	x29, sp
   2099c:	b.le	20b98 <mpfr_set_1_2@@Base+0x22c>
   209a0:	ldr	x24, [x19]
   209a4:	cmp	x24, #0x3f
   209a8:	b.gt	209f0 <mpfr_set_1_2@@Base+0x84>
   209ac:	ldr	x11, [x22]
   209b0:	mov	w9, #0x40                  	// #64
   209b4:	ldr	x8, [x19, #24]
   209b8:	ldr	x10, [x22, #24]
   209bc:	sub	x9, x9, x24
   209c0:	mov	w12, #0x1                   	// #1
   209c4:	lsl	x9, x12, x9
   209c8:	cmp	x11, #0x40
   209cc:	sub	x12, x9, #0x1
   209d0:	b.gt	20a48 <mpfr_set_1_2@@Base+0xdc>
   209d4:	ldr	x11, [x10]
   209d8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   209dc:	lsr	x10, x10, x24
   209e0:	and	x10, x11, x10
   209e4:	and	x12, x11, x12
   209e8:	eor	x12, x12, x10
   209ec:	b	20a64 <mpfr_set_1_2@@Base+0xf8>
   209f0:	mov	x0, x19
   209f4:	mov	x1, x22
   209f8:	mov	w2, w21
   209fc:	bl	c690 <mpfr_set@plt>
   20a00:	mov	w23, w0
   20a04:	cbnz	w21, 20a3c <mpfr_set_1_2@@Base+0xd0>
   20a08:	mul	w8, w23, w20
   20a0c:	cmp	w8, #0x1
   20a10:	b.lt	20a3c <mpfr_set_1_2@@Base+0xd0>  // b.tstop
   20a14:	mov	x0, x22
   20a18:	bl	ce80 <mpfr_min_prec@plt>
   20a1c:	add	x8, x24, #0x1
   20a20:	cmp	x0, x8
   20a24:	b.ne	20a3c <mpfr_set_1_2@@Base+0xd0>  // b.any
   20a28:	mov	x0, x19
   20a2c:	cmp	w20, #0x1
   20a30:	b.lt	20b78 <mpfr_set_1_2@@Base+0x20c>  // b.tstop
   20a34:	bl	c230 <mpfr_nextbelow@plt>
   20a38:	b	20b7c <mpfr_set_1_2@@Base+0x210>
   20a3c:	cmp	w23, #0x0
   20a40:	csel	w2, w20, w23, eq  // eq = none
   20a44:	b	20b80 <mpfr_set_1_2@@Base+0x214>
   20a48:	ldp	x14, x11, [x10]
   20a4c:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   20a50:	lsr	x10, x13, x24
   20a54:	and	x10, x11, x10
   20a58:	and	x12, x11, x12
   20a5c:	eor	x12, x12, x10
   20a60:	orr	x12, x12, x14
   20a64:	neg	x13, x9
   20a68:	and	x11, x11, x13
   20a6c:	str	x11, [x8]
   20a70:	ldr	w2, [x22, #8]
   20a74:	str	w2, [x19, #8]
   20a78:	ldr	x13, [x22, #16]
   20a7c:	mul	w11, w2, w20
   20a80:	cmp	w11, #0x1
   20a84:	str	x13, [x19, #16]
   20a88:	b.lt	20b00 <mpfr_set_1_2@@Base+0x194>  // b.tstop
   20a8c:	cmp	x10, #0x0
   20a90:	cset	w13, ne  // ne = any
   20a94:	cmp	x12, #0x0
   20a98:	cset	w14, eq  // eq = none
   20a9c:	tst	w14, w13
   20aa0:	csinc	x12, x12, xzr, eq  // eq = none
   20aa4:	csel	x10, xzr, x10, ne  // ne = any
   20aa8:	orr	x13, x10, x12
   20aac:	cbz	x13, 20b10 <mpfr_set_1_2@@Base+0x1a4>
   20ab0:	cmp	w21, #0x1
   20ab4:	b.eq	20b4c <mpfr_set_1_2@@Base+0x1e0>  // b.none
   20ab8:	cbnz	w21, 20b40 <mpfr_set_1_2@@Base+0x1d4>
   20abc:	cbz	x10, 20b4c <mpfr_set_1_2@@Base+0x1e0>
   20ac0:	cbnz	x12, 20ad0 <mpfr_set_1_2@@Base+0x164>
   20ac4:	ldr	x10, [x8]
   20ac8:	tst	x10, x9
   20acc:	b.eq	20b4c <mpfr_set_1_2@@Base+0x1e0>  // b.none
   20ad0:	ldr	x10, [x8]
   20ad4:	adds	x9, x10, x9
   20ad8:	str	x9, [x8]
   20adc:	b.eq	20bb0 <mpfr_set_1_2@@Base+0x244>  // b.none
   20ae0:	cbz	w2, 20b80 <mpfr_set_1_2@@Base+0x214>
   20ae4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20ae8:	ldr	x1, [x0, #2800]
   20aec:	add	x0, x0, #0xaf0
   20af0:	blr	x1
   20af4:	mrs	x8, tpidr_el0
   20af8:	ldr	w9, [x8, x0]
   20afc:	b	20b6c <mpfr_set_1_2@@Base+0x200>
   20b00:	sxtw	x13, w20
   20b04:	orr	x12, x12, x13
   20b08:	orr	x13, x10, x12
   20b0c:	cbnz	x13, 20ab0 <mpfr_set_1_2@@Base+0x144>
   20b10:	mov	w2, wzr
   20b14:	cbz	w20, 20b80 <mpfr_set_1_2@@Base+0x214>
   20b18:	cmp	w11, #0x1
   20b1c:	b.lt	20b80 <mpfr_set_1_2@@Base+0x214>  // b.tstop
   20b20:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20b24:	ldr	x1, [x0, #2800]
   20b28:	add	x0, x0, #0xaf0
   20b2c:	blr	x1
   20b30:	mrs	x8, tpidr_el0
   20b34:	ldr	w9, [x8, x0]
   20b38:	mov	w2, w20
   20b3c:	b	20b6c <mpfr_set_1_2@@Base+0x200>
   20b40:	add	w10, w21, w2, lsr #31
   20b44:	cmp	w10, #0x3
   20b48:	b.ne	20ad0 <mpfr_set_1_2@@Base+0x164>  // b.any
   20b4c:	cbz	w2, 20b80 <mpfr_set_1_2@@Base+0x214>
   20b50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20b54:	ldr	x1, [x0, #2800]
   20b58:	add	x0, x0, #0xaf0
   20b5c:	blr	x1
   20b60:	mrs	x8, tpidr_el0
   20b64:	ldr	w9, [x8, x0]
   20b68:	neg	w2, w2
   20b6c:	orr	w9, w9, #0x8
   20b70:	str	w9, [x8, x0]
   20b74:	b	20b80 <mpfr_set_1_2@@Base+0x214>
   20b78:	bl	c5c0 <mpfr_nextabove@plt>
   20b7c:	neg	w2, w20
   20b80:	ldp	x20, x19, [sp, #48]
   20b84:	ldp	x22, x21, [sp, #32]
   20b88:	ldp	x24, x23, [sp, #16]
   20b8c:	mov	w0, w2
   20b90:	ldp	x29, x30, [sp], #64
   20b94:	ret
   20b98:	mov	x0, x19
   20b9c:	mov	x1, x22
   20ba0:	mov	w2, w21
   20ba4:	bl	c690 <mpfr_set@plt>
   20ba8:	mov	w2, w20
   20bac:	b	20b80 <mpfr_set_1_2@@Base+0x214>
   20bb0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   20bb4:	str	x9, [x8]
   20bb8:	ldr	x8, [x19, #16]
   20bbc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20bc0:	ldr	x1, [x0, #2768]
   20bc4:	add	x0, x0, #0xad0
   20bc8:	blr	x1
   20bcc:	mrs	x9, tpidr_el0
   20bd0:	ldr	x9, [x9, x0]
   20bd4:	cmp	x8, x9
   20bd8:	b.ge	20bec <mpfr_set_1_2@@Base+0x280>  // b.tcont
   20bdc:	add	x8, x8, #0x1
   20be0:	str	x8, [x19, #16]
   20be4:	cbnz	w2, 20ae4 <mpfr_set_1_2@@Base+0x178>
   20be8:	b	20b80 <mpfr_set_1_2@@Base+0x214>
   20bec:	mov	x0, x19
   20bf0:	mov	w1, w21
   20bf4:	bl	c3a0 <mpfr_overflow@plt>
   20bf8:	mov	w2, w0
   20bfc:	b	20b80 <mpfr_set_1_2@@Base+0x214>

0000000000020c00 <mpfr_setmax@@Base>:
   20c00:	stp	x29, x30, [sp, #-16]!
   20c04:	ldr	x10, [x0]
   20c08:	ldr	x8, [x0, #24]
   20c0c:	mov	x11, #0xffffffffffffffff    	// #-1
   20c10:	mov	x29, sp
   20c14:	sub	x9, x10, #0x1
   20c18:	add	x12, x10, #0x3e
   20c1c:	cmp	x9, #0x0
   20c20:	csel	x9, x12, x9, lt  // lt = tstop
   20c24:	asr	x9, x9, #6
   20c28:	lsl	w12, w9, #6
   20c2c:	sub	w12, w12, w10
   20c30:	lsl	x11, x11, x12
   20c34:	cmp	x10, #0x41
   20c38:	str	x1, [x0, #16]
   20c3c:	str	x11, [x8]
   20c40:	b.lt	20c5c <mpfr_setmax@@Base+0x5c>  // b.tstop
   20c44:	cmp	x9, #0x1
   20c48:	add	x0, x8, #0x8
   20c4c:	csinc	x8, x9, xzr, gt
   20c50:	lsl	x2, x8, #3
   20c54:	mov	w1, #0xff                  	// #255
   20c58:	bl	c5b0 <memset@plt>
   20c5c:	ldp	x29, x30, [sp], #16
   20c60:	ret

0000000000020c64 <mpfr_setmin@@Base>:
   20c64:	stp	x29, x30, [sp, #-16]!
   20c68:	ldr	x8, [x0]
   20c6c:	str	x1, [x0, #16]
   20c70:	ldr	x0, [x0, #24]
   20c74:	mov	w1, wzr
   20c78:	sub	x9, x8, #0x1
   20c7c:	add	x8, x8, #0x3e
   20c80:	cmp	x9, #0x0
   20c84:	csel	x8, x8, x9, lt  // lt = tstop
   20c88:	asr	x8, x8, #6
   20c8c:	lsl	x2, x8, #3
   20c90:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   20c94:	mov	x29, sp
   20c98:	str	x8, [x0, x2]
   20c9c:	bl	c5b0 <memset@plt>
   20ca0:	ldp	x29, x30, [sp], #16
   20ca4:	ret

0000000000020ca8 <mpfr_set_d@@Base>:
   20ca8:	sub	sp, sp, #0x90
   20cac:	stp	x20, x19, [sp, #128]
   20cb0:	fcmp	d0, d0
   20cb4:	mov	x19, x0
   20cb8:	str	d8, [sp, #48]
   20cbc:	stp	x29, x30, [sp, #56]
   20cc0:	str	x27, [sp, #72]
   20cc4:	stp	x26, x25, [sp, #80]
   20cc8:	stp	x24, x23, [sp, #96]
   20ccc:	stp	x22, x21, [sp, #112]
   20cd0:	add	x29, sp, #0x30
   20cd4:	b.vs	20e0c <mpfr_set_d@@Base+0x164>
   20cd8:	mov	v8.16b, v0.16b
   20cdc:	fcmp	d0, #0.0
   20ce0:	b.eq	20e40 <mpfr_set_d@@Base+0x198>  // b.none
   20ce4:	mov	x8, #0x7fefffffffffffff    	// #9218868437227405311
   20ce8:	fmov	d0, x8
   20cec:	fcmp	d8, d0
   20cf0:	b.gt	20e5c <mpfr_set_d@@Base+0x1b4>
   20cf4:	mov	x8, #0xffefffffffffffff    	// #-4503599627370497
   20cf8:	fmov	d0, x8
   20cfc:	fcmp	d8, d0
   20d00:	b.mi	20e5c <mpfr_set_d@@Base+0x1b4>  // b.first
   20d04:	mov	w20, w1
   20d08:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20d0c:	ldr	x1, [x0, #2800]
   20d10:	add	x0, x0, #0xaf0
   20d14:	blr	x1
   20d18:	mrs	x24, tpidr_el0
   20d1c:	ldr	w25, [x24, x0]
   20d20:	mov	x21, x0
   20d24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20d28:	ldr	x1, [x0, #2736]
   20d2c:	add	x0, x0, #0xab0
   20d30:	blr	x1
   20d34:	ldr	x26, [x24, x0]
   20d38:	mov	x22, x0
   20d3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20d40:	ldr	x1, [x0, #2768]
   20d44:	add	x0, x0, #0xad0
   20d48:	blr	x1
   20d4c:	ldr	x27, [x24, x0]
   20d50:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   20d54:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   20d58:	mov	x23, x0
   20d5c:	add	x10, sp, #0x8
   20d60:	str	x8, [x24, x22]
   20d64:	str	x9, [x24, x0]
   20d68:	mov	w8, #0x35                  	// #53
   20d6c:	add	x0, sp, #0x8
   20d70:	mov	v0.16b, v8.16b
   20d74:	str	x10, [sp, #40]
   20d78:	str	x8, [sp, #16]
   20d7c:	bl	20e94 <mpfr_set_d@@Base+0x1ec>
   20d80:	fcmp	d8, #0.0
   20d84:	mov	w9, #0xffffffff            	// #-1
   20d88:	sxtw	x8, w0
   20d8c:	csinc	w3, w9, wzr, mi  // mi = first
   20d90:	add	x1, sp, #0x10
   20d94:	mov	x0, x19
   20d98:	mov	w2, w20
   20d9c:	str	x8, [sp, #32]
   20da0:	bl	cb70 <mpfr_set4@plt>
   20da4:	str	w25, [x24, x21]
   20da8:	str	x26, [x24, x22]
   20dac:	str	x27, [x24, x23]
   20db0:	ldr	x9, [x19, #16]
   20db4:	mov	w8, w0
   20db8:	cmp	x9, x27
   20dbc:	b.gt	20e7c <mpfr_set_d@@Base+0x1d4>
   20dc0:	cmp	x9, x26
   20dc4:	b.lt	20e7c <mpfr_set_d@@Base+0x1d4>  // b.tstop
   20dc8:	cbz	w8, 20de4 <mpfr_set_d@@Base+0x13c>
   20dcc:	orr	w9, w25, #0x8
   20dd0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20dd4:	ldr	x1, [x0, #2800]
   20dd8:	add	x0, x0, #0xaf0
   20ddc:	blr	x1
   20de0:	str	w9, [x24, x0]
   20de4:	ldp	x20, x19, [sp, #128]
   20de8:	ldp	x22, x21, [sp, #112]
   20dec:	ldp	x24, x23, [sp, #96]
   20df0:	ldp	x26, x25, [sp, #80]
   20df4:	ldr	x27, [sp, #72]
   20df8:	ldp	x29, x30, [sp, #56]
   20dfc:	ldr	d8, [sp, #48]
   20e00:	mov	w0, w8
   20e04:	add	sp, sp, #0x90
   20e08:	ret
   20e0c:	mov	x8, #0x2                   	// #2
   20e10:	movk	x8, #0x8000, lsl #48
   20e14:	str	x8, [x19, #16]
   20e18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20e1c:	ldr	x1, [x0, #2800]
   20e20:	add	x0, x0, #0xaf0
   20e24:	blr	x1
   20e28:	mrs	x9, tpidr_el0
   20e2c:	ldr	w10, [x9, x0]
   20e30:	mov	w8, wzr
   20e34:	orr	w10, w10, #0x4
   20e38:	str	w10, [x9, x0]
   20e3c:	b	20de4 <mpfr_set_d@@Base+0x13c>
   20e40:	fmov	x10, d8
   20e44:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   20e48:	cmp	x10, #0x0
   20e4c:	mov	w10, #0xffffffff            	// #-1
   20e50:	str	x9, [x19, #16]
   20e54:	cneg	w9, w10, ge  // ge = tcont
   20e58:	b	20e70 <mpfr_set_d@@Base+0x1c8>
   20e5c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   20e60:	fcmp	d8, #0.0
   20e64:	mov	w10, #0xffffffff            	// #-1
   20e68:	str	x9, [x19, #16]
   20e6c:	csinc	w9, w10, wzr, le
   20e70:	mov	w8, wzr
   20e74:	str	w9, [x19, #8]
   20e78:	b	20de4 <mpfr_set_d@@Base+0x13c>
   20e7c:	mov	x0, x19
   20e80:	mov	w1, w8
   20e84:	mov	w2, w20
   20e88:	bl	d020 <mpfr_check_range@plt>
   20e8c:	mov	w8, w0
   20e90:	b	20de4 <mpfr_set_d@@Base+0x13c>
   20e94:	fmov	x9, d0
   20e98:	ubfx	x8, x9, #52, #11
   20e9c:	lsl	x9, x9, #11
   20ea0:	cbz	w8, 20eb0 <mpfr_set_d@@Base+0x208>
   20ea4:	orr	x9, x9, #0x8000000000000000
   20ea8:	sub	w8, w8, #0x3fe
   20eac:	b	20ec4 <mpfr_set_d@@Base+0x21c>
   20eb0:	and	x8, x9, #0x7ffffffffffff800
   20eb4:	mov	w10, #0xfffffc03            	// #-1021
   20eb8:	clz	x11, x8
   20ebc:	lsl	x9, x8, x11
   20ec0:	sub	w8, w10, w11
   20ec4:	str	x9, [x0]
   20ec8:	mov	w0, w8
   20ecc:	ret

0000000000020ed0 <mpfr_set_default_prec@@Base>:
   20ed0:	stp	x29, x30, [sp, #-32]!
   20ed4:	mov	x9, #0xfffffffffffffeff    	// #-257
   20ed8:	sub	x8, x0, #0x1
   20edc:	movk	x9, #0x7fff, lsl #48
   20ee0:	str	x19, [sp, #16]
   20ee4:	mov	x19, x0
   20ee8:	cmp	x8, x9
   20eec:	mov	x29, sp
   20ef0:	b.cs	20f18 <mpfr_set_default_prec@@Base+0x48>  // b.hs, b.nlast
   20ef4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20ef8:	ldr	x1, [x0, #2752]
   20efc:	add	x0, x0, #0xac0
   20f00:	blr	x1
   20f04:	mrs	x8, tpidr_el0
   20f08:	str	x19, [x8, x0]
   20f0c:	ldr	x19, [sp, #16]
   20f10:	ldp	x29, x30, [sp], #32
   20f14:	ret
   20f18:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   20f1c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   20f20:	add	x0, x0, #0xf9d
   20f24:	add	x2, x2, #0xf45
   20f28:	mov	w1, #0x20                  	// #32
   20f2c:	bl	d030 <mpfr_assert_fail@plt>
   20f30:	b	20ef4 <mpfr_set_default_prec@@Base+0x24>

0000000000020f34 <mpfr_get_default_prec@@Base>:
   20f34:	stp	x29, x30, [sp, #-16]!
   20f38:	mov	x29, sp
   20f3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20f40:	ldr	x1, [x0, #2752]
   20f44:	add	x0, x0, #0xac0
   20f48:	blr	x1
   20f4c:	mrs	x8, tpidr_el0
   20f50:	ldr	x0, [x8, x0]
   20f54:	ldp	x29, x30, [sp], #16
   20f58:	ret

0000000000020f5c <mpfr_set_exp@@Base>:
   20f5c:	stp	x29, x30, [sp, #-16]!
   20f60:	ldr	x13, [x0, #16]
   20f64:	mov	x29, sp
   20f68:	mov	x8, x0
   20f6c:	mov	x9, x1
   20f70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20f74:	ldr	x1, [x0, #2736]
   20f78:	add	x0, x0, #0xab0
   20f7c:	blr	x1
   20f80:	mrs	x11, tpidr_el0
   20f84:	ldr	x12, [x11, x0]
   20f88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20f8c:	ldr	x1, [x0, #2768]
   20f90:	add	x0, x0, #0xad0
   20f94:	blr	x1
   20f98:	mov	x14, #0x4                   	// #4
   20f9c:	movk	x14, #0x8000, lsl #48
   20fa0:	mov	x10, x0
   20fa4:	cmp	x13, x14
   20fa8:	mov	w0, #0x1                   	// #1
   20fac:	b.lt	20fcc <mpfr_set_exp@@Base+0x70>  // b.tstop
   20fb0:	cmp	x12, x9
   20fb4:	b.gt	20fcc <mpfr_set_exp@@Base+0x70>
   20fb8:	ldr	x10, [x11, x10]
   20fbc:	cmp	x10, x9
   20fc0:	b.lt	20fcc <mpfr_set_exp@@Base+0x70>  // b.tstop
   20fc4:	mov	w0, wzr
   20fc8:	str	x9, [x8, #16]
   20fcc:	ldp	x29, x30, [sp], #16
   20fd0:	ret

0000000000020fd4 <mpfr_set_default_rounding_mode@@Base>:
   20fd4:	cmp	w0, #0x5
   20fd8:	b.hi	21004 <mpfr_set_default_rounding_mode@@Base+0x30>  // b.pmore
   20fdc:	stp	x29, x30, [sp, #-16]!
   20fe0:	mov	x29, sp
   20fe4:	mov	w8, w0
   20fe8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   20fec:	ldr	x1, [x0, #2864]
   20ff0:	add	x0, x0, #0xb30
   20ff4:	blr	x1
   20ff8:	mrs	x9, tpidr_el0
   20ffc:	str	w8, [x9, x0]
   21000:	ldp	x29, x30, [sp], #16
   21004:	ret

0000000000021008 <mpfr_get_default_rounding_mode@@Base>:
   21008:	stp	x29, x30, [sp, #-16]!
   2100c:	mov	x29, sp
   21010:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21014:	ldr	x1, [x0, #2864]
   21018:	add	x0, x0, #0xb30
   2101c:	blr	x1
   21020:	mrs	x8, tpidr_el0
   21024:	ldr	w0, [x8, x0]
   21028:	ldp	x29, x30, [sp], #16
   2102c:	ret

0000000000021030 <mpfr_set_f@@Base>:
   21030:	stp	x29, x30, [sp, #-96]!
   21034:	stp	x28, x27, [sp, #16]
   21038:	stp	x26, x25, [sp, #32]
   2103c:	stp	x24, x23, [sp, #48]
   21040:	stp	x22, x21, [sp, #64]
   21044:	stp	x20, x19, [sp, #80]
   21048:	mov	x29, sp
   2104c:	sub	sp, sp, #0x20
   21050:	ldr	w8, [x1, #4]
   21054:	mov	x20, x0
   21058:	cmp	w8, #0x0
   2105c:	cneg	w24, w8, mi  // mi = first
   21060:	cbz	w24, 210f8 <mpfr_set_f@@Base+0xc8>
   21064:	ldr	w9, [x20, #8]
   21068:	mov	w19, w2
   2106c:	mov	x21, x1
   21070:	mul	w8, w9, w8
   21074:	tbz	w8, #31, 21080 <mpfr_set_f@@Base+0x50>
   21078:	neg	w8, w9
   2107c:	str	w8, [x20, #8]
   21080:	ldr	x25, [x21, #16]
   21084:	ldr	x8, [x20]
   21088:	ldr	x23, [x20, #24]
   2108c:	add	x10, x25, x24, lsl #3
   21090:	sub	x9, x8, #0x1
   21094:	ldur	x10, [x10, #-8]
   21098:	add	x8, x8, #0x3e
   2109c:	cmp	x9, #0x0
   210a0:	csel	x8, x8, x9, lt  // lt = tstop
   210a4:	asr	x26, x8, #6
   210a8:	cmp	x26, x24
   210ac:	clz	x22, x10
   210b0:	b.ge	21110 <mpfr_set_f@@Base+0xe0>  // b.tcont
   210b4:	lsl	x8, x24, #6
   210b8:	cmp	w24, #0x800
   210bc:	lsl	x28, x24, #3
   210c0:	stp	x8, xzr, [x29, #-24]
   210c4:	b.hi	21168 <mpfr_set_f@@Base+0x138>  // b.pmore
   210c8:	add	x9, x28, #0xf
   210cc:	mov	x8, sp
   210d0:	and	x9, x9, #0xffffffff0
   210d4:	sub	x27, x8, x9
   210d8:	mov	sp, x27
   210dc:	cbz	w22, 2117c <mpfr_set_f@@Base+0x14c>
   210e0:	mov	x0, x27
   210e4:	mov	x1, x25
   210e8:	mov	x2, x24
   210ec:	mov	w3, w22
   210f0:	bl	c120 <__gmpn_lshift@plt>
   210f4:	b	21194 <mpfr_set_f@@Base+0x164>
   210f8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   210fc:	mov	w10, #0x1                   	// #1
   21100:	mov	w8, wzr
   21104:	str	x9, [x20, #16]
   21108:	str	w10, [x20, #8]
   2110c:	b	21278 <mpfr_set_f@@Base+0x248>
   21110:	add	x26, x26, #0x1
   21114:	add	x8, x23, x26, lsl #3
   21118:	sub	x0, x8, x24, lsl #3
   2111c:	cbz	w22, 21134 <mpfr_set_f@@Base+0x104>
   21120:	mov	x1, x25
   21124:	mov	x2, x24
   21128:	mov	w3, w22
   2112c:	bl	c120 <__gmpn_lshift@plt>
   21130:	b	21148 <mpfr_set_f@@Base+0x118>
   21134:	cmp	x0, x25
   21138:	b.eq	21148 <mpfr_set_f@@Base+0x118>  // b.none
   2113c:	lsl	x2, x24, #3
   21140:	mov	x1, x25
   21144:	bl	be50 <memcpy@plt>
   21148:	sub	x8, x26, x24
   2114c:	lsl	x2, x8, #3
   21150:	mov	x0, x23
   21154:	mov	w1, wzr
   21158:	bl	c5b0 <memset@plt>
   2115c:	mov	x8, xzr
   21160:	stur	wzr, [x29, #-4]
   21164:	b	211cc <mpfr_set_f@@Base+0x19c>
   21168:	sub	x0, x29, #0x10
   2116c:	mov	x1, x28
   21170:	bl	c220 <mpfr_tmp_allocate@plt>
   21174:	mov	x27, x0
   21178:	cbnz	w22, 210e0 <mpfr_set_f@@Base+0xb0>
   2117c:	cmp	x25, x27
   21180:	b.eq	21194 <mpfr_set_f@@Base+0x164>  // b.none
   21184:	mov	x0, x27
   21188:	mov	x1, x25
   2118c:	mov	x2, x28
   21190:	bl	be50 <memcpy@plt>
   21194:	ldr	w8, [x21, #4]
   21198:	ldr	x4, [x20]
   2119c:	ldur	x2, [x29, #-24]
   211a0:	sub	x6, x29, #0x4
   211a4:	lsr	w3, w8, #31
   211a8:	mov	x0, x23
   211ac:	mov	x1, x27
   211b0:	mov	w5, w19
   211b4:	bl	cf10 <mpfr_round_raw@plt>
   211b8:	mov	w24, w0
   211bc:	cbnz	w0, 2129c <mpfr_set_f@@Base+0x26c>
   211c0:	ldur	x0, [x29, #-16]
   211c4:	cbnz	x0, 212ac <mpfr_set_f@@Base+0x27c>
   211c8:	sxtw	x8, w24
   211cc:	ldr	x11, [x21, #8]
   211d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   211d4:	ldr	x1, [x0, #2768]
   211d8:	add	x0, x0, #0xad0
   211dc:	blr	x1
   211e0:	mrs	x9, tpidr_el0
   211e4:	ldr	x10, [x9, x0]
   211e8:	sub	x12, x10, #0x1
   211ec:	add	x13, x10, #0x3e
   211f0:	cmp	x12, #0x0
   211f4:	csel	x12, x13, x12, lt  // lt = tstop
   211f8:	asr	x12, x12, #6
   211fc:	add	x12, x12, #0x1
   21200:	cmp	x11, x12
   21204:	b.le	21220 <mpfr_set_f@@Base+0x1f0>
   21208:	ldr	w2, [x20, #8]
   2120c:	mov	x0, x20
   21210:	mov	w1, w19
   21214:	bl	c3a0 <mpfr_overflow@plt>
   21218:	mov	w8, w0
   2121c:	b	21278 <mpfr_set_f@@Base+0x248>
   21220:	lsl	x11, x11, #6
   21224:	sub	x11, x11, x22
   21228:	add	x11, x11, x8
   2122c:	str	x11, [x20, #16]
   21230:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21234:	ldr	x1, [x0, #2736]
   21238:	add	x0, x0, #0xab0
   2123c:	blr	x1
   21240:	ldur	w8, [x29, #-4]
   21244:	cmp	x11, x10
   21248:	b.gt	212b4 <mpfr_set_f@@Base+0x284>
   2124c:	ldr	x10, [x9, x0]
   21250:	cmp	x11, x10
   21254:	b.lt	212b4 <mpfr_set_f@@Base+0x284>  // b.tstop
   21258:	cbz	w8, 21278 <mpfr_set_f@@Base+0x248>
   2125c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21260:	ldr	x1, [x0, #2800]
   21264:	add	x0, x0, #0xaf0
   21268:	blr	x1
   2126c:	ldr	w10, [x9, x0]
   21270:	orr	w10, w10, #0x8
   21274:	str	w10, [x9, x0]
   21278:	mov	w0, w8
   2127c:	mov	sp, x29
   21280:	ldp	x20, x19, [sp, #80]
   21284:	ldp	x22, x21, [sp, #64]
   21288:	ldp	x24, x23, [sp, #48]
   2128c:	ldp	x26, x25, [sp, #32]
   21290:	ldp	x28, x27, [sp, #16]
   21294:	ldp	x29, x30, [sp], #96
   21298:	ret
   2129c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   212a0:	str	x8, [x23, x26, lsl #3]
   212a4:	ldur	x0, [x29, #-16]
   212a8:	cbz	x0, 211c8 <mpfr_set_f@@Base+0x198>
   212ac:	bl	c8d0 <mpfr_tmp_free@plt>
   212b0:	b	211c8 <mpfr_set_f@@Base+0x198>
   212b4:	mov	x0, x20
   212b8:	mov	w1, w8
   212bc:	mov	w2, w19
   212c0:	bl	d020 <mpfr_check_range@plt>
   212c4:	b	21218 <mpfr_set_f@@Base+0x1e8>

00000000000212c8 <mpfr_set_prec_raw@@Base>:
   212c8:	stp	x29, x30, [sp, #-32]!
   212cc:	mov	x9, #0xfffffffffffffeff    	// #-257
   212d0:	sub	x8, x1, #0x1
   212d4:	movk	x9, #0x7fff, lsl #48
   212d8:	stp	x20, x19, [sp, #16]
   212dc:	mov	x19, x1
   212e0:	cmp	x8, x9
   212e4:	mov	x20, x0
   212e8:	mov	x29, sp
   212ec:	b.cs	21310 <mpfr_set_prec_raw@@Base+0x48>  // b.hs, b.nlast
   212f0:	ldr	x8, [x20, #24]
   212f4:	ldur	x8, [x8, #-8]
   212f8:	cmp	x19, x8, lsl #6
   212fc:	b.gt	2132c <mpfr_set_prec_raw@@Base+0x64>
   21300:	str	x19, [x20]
   21304:	ldp	x20, x19, [sp, #16]
   21308:	ldp	x29, x30, [sp], #32
   2130c:	ret
   21310:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   21314:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   21318:	add	x0, x0, #0xfac
   2131c:	add	x2, x2, #0xfba
   21320:	mov	w1, #0x1c                  	// #28
   21324:	bl	d030 <mpfr_assert_fail@plt>
   21328:	b	212f0 <mpfr_set_prec_raw@@Base+0x28>
   2132c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x3854>
   21330:	adrp	x2, 5c000 <mpfr_l2b_62_1__tab@@Base+0x700>
   21334:	add	x0, x0, #0xfac
   21338:	add	x2, x2, #0x2
   2133c:	mov	w1, #0x1d                  	// #29
   21340:	bl	d030 <mpfr_assert_fail@plt>
   21344:	b	21300 <mpfr_set_prec_raw@@Base+0x38>

0000000000021348 <mpfr_set_prec@@Base>:
   21348:	stp	x29, x30, [sp, #-48]!
   2134c:	stp	x22, x21, [sp, #16]
   21350:	mov	x21, #0xfffffffffffffeff    	// #-257
   21354:	movk	x21, #0x7fff, lsl #48
   21358:	sub	x22, x1, #0x1
   2135c:	stp	x20, x19, [sp, #32]
   21360:	mov	x19, x1
   21364:	cmp	x22, x21
   21368:	mov	x20, x0
   2136c:	mov	x29, sp
   21370:	b.cs	213d4 <mpfr_set_prec@@Base+0x8c>  // b.hs, b.nlast
   21374:	ldr	x0, [x20, #24]
   21378:	add	x9, x22, #0x3f
   2137c:	cmp	x22, #0x0
   21380:	csel	x9, x9, x22, lt  // lt = tstop
   21384:	ldr	x8, [x0, #-8]!
   21388:	asr	x9, x9, #6
   2138c:	cmp	x9, x8
   21390:	b.lt	213b8 <mpfr_set_prec@@Base+0x70>  // b.tstop
   21394:	add	x22, x9, #0x1
   21398:	lsl	x8, x8, #3
   2139c:	add	x1, x8, #0x8
   213a0:	lsl	x8, x22, #3
   213a4:	add	x2, x8, #0x8
   213a8:	bl	c660 <mpfr_reallocate_func@plt>
   213ac:	add	x8, x0, #0x8
   213b0:	str	x8, [x20, #24]
   213b4:	str	x22, [x0]
   213b8:	add	x8, x21, #0x103
   213bc:	str	x19, [x20]
   213c0:	str	x8, [x20, #16]
   213c4:	ldp	x20, x19, [sp, #32]
   213c8:	ldp	x22, x21, [sp, #16]
   213cc:	ldp	x29, x30, [sp], #48
   213d0:	ret
   213d4:	adrp	x0, 5c000 <mpfr_l2b_62_1__tab@@Base+0x700>
   213d8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   213dc:	add	x0, x0, #0x5e
   213e0:	add	x2, x2, #0xfba
   213e4:	mov	w1, #0x1f                  	// #31
   213e8:	bl	d030 <mpfr_assert_fail@plt>
   213ec:	b	21374 <mpfr_set_prec@@Base+0x2c>

00000000000213f0 <mpfr_get_prec@@Base>:
   213f0:	ldr	x0, [x0]
   213f4:	ret

00000000000213f8 <mpfr_set_q@@Base>:
   213f8:	sub	sp, sp, #0xb0
   213fc:	stp	x29, x30, [sp, #80]
   21400:	stp	x28, x27, [sp, #96]
   21404:	stp	x26, x25, [sp, #112]
   21408:	stp	x24, x23, [sp, #128]
   2140c:	stp	x22, x21, [sp, #144]
   21410:	stp	x20, x19, [sp, #160]
   21414:	ldr	w9, [x1, #4]
   21418:	ldr	w10, [x1, #20]
   2141c:	mov	x19, x0
   21420:	add	x29, sp, #0x50
   21424:	cbz	w9, 215d4 <mpfr_set_q@@Base+0x1dc>
   21428:	cbz	w10, 215f0 <mpfr_set_q@@Base+0x1f8>
   2142c:	mov	w20, w2
   21430:	mov	x8, x1
   21434:	add	x21, x1, #0x10
   21438:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2143c:	ldr	x1, [x0, #2800]
   21440:	add	x0, x0, #0xaf0
   21444:	blr	x1
   21448:	mrs	x24, tpidr_el0
   2144c:	ldr	w25, [x24, x0]
   21450:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21454:	ldr	x1, [x0, #2736]
   21458:	add	x0, x0, #0xab0
   2145c:	blr	x1
   21460:	ldr	x26, [x24, x0]
   21464:	mov	x9, x0
   21468:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2146c:	ldr	x1, [x0, #2768]
   21470:	add	x0, x0, #0xad0
   21474:	blr	x1
   21478:	ldr	x27, [x24, x0]
   2147c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   21480:	str	x10, [x24, x9]
   21484:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   21488:	str	x9, [x24, x0]
   2148c:	sub	x0, x29, #0x20
   21490:	add	x2, sp, #0x8
   21494:	mov	x1, x8
   21498:	bl	21708 <mpfr_set_q@@Base+0x310>
   2149c:	mov	w22, w0
   214a0:	add	x0, sp, #0x10
   214a4:	mov	x2, sp
   214a8:	mov	x1, x21
   214ac:	bl	21708 <mpfr_set_q@@Base+0x310>
   214b0:	ldp	x8, x9, [sp]
   214b4:	sub	x28, x9, x8
   214b8:	mov	x8, #0x100000000000000     	// #72057594037927936
   214bc:	cmp	x28, x8
   214c0:	str	x28, [sp, #8]
   214c4:	b.ge	21610 <mpfr_set_q@@Base+0x218>  // b.tcont
   214c8:	mov	x8, #0xfeffffffffffffff    	// #-72057594037927937
   214cc:	cmp	x28, x8
   214d0:	b.le	21660 <mpfr_set_q@@Base+0x268>
   214d4:	mov	w23, w0
   214d8:	sub	x1, x29, #0x20
   214dc:	add	x2, sp, #0x10
   214e0:	mov	x0, x19
   214e4:	mov	w3, w20
   214e8:	bl	caf0 <mpfr_div@plt>
   214ec:	sxtw	x8, w22
   214f0:	sub	x8, x8, w23, sxtw
   214f4:	mov	w21, w0
   214f8:	add	x2, x8, x28, lsl #6
   214fc:	mov	x0, x19
   21500:	mov	x1, x19
   21504:	mov	w3, w20
   21508:	bl	bff0 <mpfr_mul_2si@plt>
   2150c:	mov	w8, w0
   21510:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21514:	ldr	x1, [x0, #2800]
   21518:	add	x0, x0, #0xaf0
   2151c:	blr	x1
   21520:	str	w25, [x24, x0]
   21524:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21528:	ldr	x1, [x0, #2736]
   2152c:	add	x0, x0, #0xab0
   21530:	blr	x1
   21534:	str	x26, [x24, x0]
   21538:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2153c:	ldr	x1, [x0, #2768]
   21540:	add	x0, x0, #0xad0
   21544:	blr	x1
   21548:	str	x27, [x24, x0]
   2154c:	cbnz	w8, 216b4 <mpfr_set_q@@Base+0x2bc>
   21550:	ldr	x8, [x19, #16]
   21554:	cmp	x8, x27
   21558:	b.gt	216bc <mpfr_set_q@@Base+0x2c4>
   2155c:	cmp	x8, x26
   21560:	b.lt	216bc <mpfr_set_q@@Base+0x2c4>  // b.tstop
   21564:	cbz	w21, 21580 <mpfr_set_q@@Base+0x188>
   21568:	orr	w8, w25, #0x8
   2156c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21570:	ldr	x1, [x0, #2800]
   21574:	add	x0, x0, #0xaf0
   21578:	blr	x1
   2157c:	str	w8, [x24, x0]
   21580:	add	x0, sp, #0x10
   21584:	bl	c4f0 <mpfr_clear@plt>
   21588:	sub	x0, x29, #0x20
   2158c:	bl	c4f0 <mpfr_clear@plt>
   21590:	cbz	w21, 215b0 <mpfr_set_q@@Base+0x1b8>
   21594:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21598:	ldr	x1, [x0, #2800]
   2159c:	add	x0, x0, #0xaf0
   215a0:	blr	x1
   215a4:	ldr	w8, [x24, x0]
   215a8:	orr	w8, w8, #0x8
   215ac:	str	w8, [x24, x0]
   215b0:	mov	w0, w21
   215b4:	ldp	x20, x19, [sp, #160]
   215b8:	ldp	x22, x21, [sp, #144]
   215bc:	ldp	x24, x23, [sp, #128]
   215c0:	ldp	x26, x25, [sp, #112]
   215c4:	ldp	x28, x27, [sp, #96]
   215c8:	ldp	x29, x30, [sp, #80]
   215cc:	add	sp, sp, #0xb0
   215d0:	ret
   215d4:	cbz	w10, 216d4 <mpfr_set_q@@Base+0x2dc>
   215d8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   215dc:	mov	w9, #0x1                   	// #1
   215e0:	mov	w21, wzr
   215e4:	str	x8, [x19, #16]
   215e8:	str	w9, [x19, #8]
   215ec:	b	215b0 <mpfr_set_q@@Base+0x1b8>
   215f0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   215f4:	cmp	w9, #0x0
   215f8:	mov	w9, #0x1                   	// #1
   215fc:	str	x8, [x19, #16]
   21600:	cneg	w8, w9, lt  // lt = tstop
   21604:	mov	w21, wzr
   21608:	str	w8, [x19, #8]
   2160c:	b	215b0 <mpfr_set_q@@Base+0x1b8>
   21610:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21614:	ldr	x1, [x0, #2800]
   21618:	add	x0, x0, #0xaf0
   2161c:	blr	x1
   21620:	str	w25, [x24, x0]
   21624:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21628:	ldr	x1, [x0, #2736]
   2162c:	add	x0, x0, #0xab0
   21630:	blr	x1
   21634:	str	x26, [x24, x0]
   21638:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2163c:	ldr	x1, [x0, #2768]
   21640:	add	x0, x0, #0xad0
   21644:	blr	x1
   21648:	str	x27, [x24, x0]
   2164c:	ldr	w2, [x19, #8]
   21650:	mov	x0, x19
   21654:	mov	w1, w20
   21658:	bl	c3a0 <mpfr_overflow@plt>
   2165c:	b	216cc <mpfr_set_q@@Base+0x2d4>
   21660:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21664:	ldr	x1, [x0, #2800]
   21668:	add	x0, x0, #0xaf0
   2166c:	blr	x1
   21670:	str	w25, [x24, x0]
   21674:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21678:	ldr	x1, [x0, #2736]
   2167c:	add	x0, x0, #0xab0
   21680:	blr	x1
   21684:	str	x26, [x24, x0]
   21688:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2168c:	ldr	x1, [x0, #2768]
   21690:	add	x0, x0, #0xad0
   21694:	blr	x1
   21698:	str	x27, [x24, x0]
   2169c:	ldr	w2, [x19, #8]
   216a0:	cmp	w20, #0x0
   216a4:	csinc	w1, w20, wzr, ne  // ne = any
   216a8:	mov	x0, x19
   216ac:	bl	c880 <mpfr_underflow@plt>
   216b0:	b	216cc <mpfr_set_q@@Base+0x2d4>
   216b4:	mov	w21, w8
   216b8:	b	21580 <mpfr_set_q@@Base+0x188>
   216bc:	mov	x0, x19
   216c0:	mov	w1, w21
   216c4:	mov	w2, w20
   216c8:	bl	d020 <mpfr_check_range@plt>
   216cc:	mov	w21, w0
   216d0:	b	21580 <mpfr_set_q@@Base+0x188>
   216d4:	mov	x8, #0x2                   	// #2
   216d8:	movk	x8, #0x8000, lsl #48
   216dc:	str	x8, [x19, #16]
   216e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   216e4:	ldr	x1, [x0, #2800]
   216e8:	add	x0, x0, #0xaf0
   216ec:	blr	x1
   216f0:	mrs	x8, tpidr_el0
   216f4:	ldr	w9, [x8, x0]
   216f8:	mov	w21, wzr
   216fc:	orr	w9, w9, #0x4
   21700:	str	w9, [x8, x0]
   21704:	b	215b0 <mpfr_set_q@@Base+0x1b8>
   21708:	stp	x29, x30, [sp, #-64]!
   2170c:	stp	x22, x21, [sp, #32]
   21710:	stp	x20, x19, [sp, #48]
   21714:	ldr	w8, [x1, #4]
   21718:	ldr	x21, [x1, #8]
   2171c:	mov	x20, x1
   21720:	mov	x19, x0
   21724:	cmp	w8, #0x0
   21728:	cneg	w22, w8, mi  // mi = first
   2172c:	str	x22, [x2]
   21730:	ldr	x8, [x21]
   21734:	str	x23, [sp, #16]
   21738:	mov	x29, sp
   2173c:	cbnz	x8, 2174c <mpfr_set_q@@Base+0x354>
   21740:	ldr	x8, [x21, #8]!
   21744:	sub	x22, x22, #0x1
   21748:	cbz	x8, 21740 <mpfr_set_q@@Base+0x348>
   2174c:	add	x8, x21, x22, lsl #3
   21750:	ldur	x8, [x8, #-8]
   21754:	mov	x0, x19
   21758:	clz	x23, x8
   2175c:	lsl	x8, x22, #6
   21760:	sub	x8, x8, x23
   21764:	cmp	x8, #0x1
   21768:	csinc	x1, x8, xzr, gt
   2176c:	bl	cf60 <mpfr_init2@plt>
   21770:	ldr	x0, [x19, #24]
   21774:	cbz	w23, 217b8 <mpfr_set_q@@Base+0x3c0>
   21778:	mov	x1, x21
   2177c:	mov	x2, x22
   21780:	mov	w3, w23
   21784:	bl	c120 <__gmpn_lshift@plt>
   21788:	ldr	w8, [x20, #4]
   2178c:	str	xzr, [x19, #16]
   21790:	neg	w0, w23
   21794:	ldr	x23, [sp, #16]
   21798:	cmp	w8, #0x0
   2179c:	cset	w8, ne  // ne = any
   217a0:	csinv	w8, w8, wzr, ge  // ge = tcont
   217a4:	str	w8, [x19, #8]
   217a8:	ldp	x20, x19, [sp, #48]
   217ac:	ldp	x22, x21, [sp, #32]
   217b0:	ldp	x29, x30, [sp], #64
   217b4:	ret
   217b8:	cmp	x0, x21
   217bc:	b.eq	21788 <mpfr_set_q@@Base+0x390>  // b.none
   217c0:	lsl	x2, x22, #3
   217c4:	mov	x1, x21
   217c8:	bl	be50 <memcpy@plt>
   217cc:	b	21788 <mpfr_set_q@@Base+0x390>

00000000000217d0 <mpfr_set_si@@Base>:
   217d0:	stp	x29, x30, [sp, #-16]!
   217d4:	mov	w3, w2
   217d8:	mov	x2, xzr
   217dc:	mov	x29, sp
   217e0:	bl	bed0 <mpfr_set_si_2exp@plt>
   217e4:	ldp	x29, x30, [sp], #16
   217e8:	ret

00000000000217ec <mpfr_set_str@@Base>:
   217ec:	sub	sp, sp, #0x20
   217f0:	stp	x29, x30, [sp, #16]
   217f4:	ldrb	w8, [x1]
   217f8:	add	x29, sp, #0x10
   217fc:	cbz	w8, 2182c <mpfr_set_str@@Base+0x40>
   21800:	mov	w4, w3
   21804:	mov	w3, w2
   21808:	add	x2, sp, #0x8
   2180c:	bl	c070 <mpfr_strtofr@plt>
   21810:	ldr	x8, [sp, #8]
   21814:	ldrb	w8, [x8]
   21818:	cmp	w8, #0x0
   2181c:	csetm	w0, ne  // ne = any
   21820:	ldp	x29, x30, [sp, #16]
   21824:	add	sp, sp, #0x20
   21828:	ret
   2182c:	mov	w0, #0xffffffff            	// #-1
   21830:	b	21820 <mpfr_set_str@@Base+0x34>

0000000000021834 <mpfr_init_set_str@@Base>:
   21834:	stp	x29, x30, [sp, #-48]!
   21838:	stp	x22, x21, [sp, #16]
   2183c:	stp	x20, x19, [sp, #32]
   21840:	mov	x29, sp
   21844:	mov	w19, w3
   21848:	mov	w20, w2
   2184c:	mov	x21, x1
   21850:	mov	x22, x0
   21854:	bl	c030 <mpfr_init@plt>
   21858:	mov	x0, x22
   2185c:	mov	x1, x21
   21860:	mov	w2, w20
   21864:	mov	w3, w19
   21868:	bl	cb90 <mpfr_set_str@plt>
   2186c:	ldp	x20, x19, [sp, #32]
   21870:	ldp	x22, x21, [sp, #16]
   21874:	ldp	x29, x30, [sp], #48
   21878:	ret

000000000002187c <mpfr_set_str_binary@@Base>:
   2187c:	stp	x29, x30, [sp, #-16]!
   21880:	ldrb	w8, [x1]
   21884:	mov	x29, sp
   21888:	cmp	w8, #0x2d
   2188c:	b.eq	218cc <mpfr_set_str_binary@@Base+0x50>  // b.none
   21890:	cmp	w8, #0x4e
   21894:	b.ne	218d4 <mpfr_set_str_binary@@Base+0x58>  // b.any
   21898:	mov	x8, #0x2                   	// #2
   2189c:	movk	x8, #0x8000, lsl #48
   218a0:	str	x8, [x0, #16]
   218a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   218a8:	ldr	x1, [x0, #2800]
   218ac:	add	x0, x0, #0xaf0
   218b0:	blr	x1
   218b4:	mrs	x8, tpidr_el0
   218b8:	ldr	w9, [x8, x0]
   218bc:	orr	w9, w9, #0x4
   218c0:	str	w9, [x8, x0]
   218c4:	ldp	x29, x30, [sp], #16
   218c8:	ret
   218cc:	mov	w8, #0x1                   	// #1
   218d0:	b	218dc <mpfr_set_str_binary@@Base+0x60>
   218d4:	cmp	w8, #0x2b
   218d8:	cset	w8, eq  // eq = none
   218dc:	ldrb	w8, [x1, x8]
   218e0:	cmp	w8, #0x49
   218e4:	b.ne	2190c <mpfr_set_str_binary@@Base+0x90>  // b.any
   218e8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   218ec:	str	x8, [x0, #16]
   218f0:	ldrb	w8, [x1]
   218f4:	cmp	w8, #0x2d
   218f8:	mov	w8, #0xffffffff            	// #-1
   218fc:	cneg	w8, w8, ne  // ne = any
   21900:	str	w8, [x0, #8]
   21904:	ldp	x29, x30, [sp], #16
   21908:	ret
   2190c:	mov	w3, #0x2                   	// #2
   21910:	mov	w4, #0x1                   	// #1
   21914:	mov	x2, xzr
   21918:	bl	c070 <mpfr_strtofr@plt>
   2191c:	cbnz	w0, 21928 <mpfr_set_str_binary@@Base+0xac>
   21920:	ldp	x29, x30, [sp], #16
   21924:	ret
   21928:	adrp	x0, 5c000 <mpfr_l2b_62_1__tab@@Base+0x700>
   2192c:	adrp	x2, 5c000 <mpfr_l2b_62_1__tab@@Base+0x700>
   21930:	add	x0, x0, #0x69
   21934:	add	x2, x2, #0x77
   21938:	mov	w1, #0x36                  	// #54
   2193c:	bl	d030 <mpfr_assert_fail@plt>
   21940:	ldp	x29, x30, [sp], #16
   21944:	ret

0000000000021948 <mpfr_set_ui@@Base>:
   21948:	stp	x29, x30, [sp, #-16]!
   2194c:	mov	w3, w2
   21950:	mov	x2, xzr
   21954:	mov	x29, sp
   21958:	bl	cac0 <mpfr_set_ui_2exp@plt>
   2195c:	ldp	x29, x30, [sp], #16
   21960:	ret

0000000000021964 <mpfr_set_z@@Base>:
   21964:	stp	x29, x30, [sp, #-16]!
   21968:	mov	w3, w2
   2196c:	mov	x2, xzr
   21970:	mov	x29, sp
   21974:	bl	c9c0 <mpfr_set_z_2exp@plt>
   21978:	ldp	x29, x30, [sp], #16
   2197c:	ret

0000000000021980 <mpfr_sqrt@@Base>:
   21980:	stp	x29, x30, [sp, #-96]!
   21984:	stp	x28, x27, [sp, #16]
   21988:	stp	x26, x25, [sp, #32]
   2198c:	stp	x24, x23, [sp, #48]
   21990:	stp	x22, x21, [sp, #64]
   21994:	stp	x20, x19, [sp, #80]
   21998:	mov	x29, sp
   2199c:	sub	sp, sp, #0x40
   219a0:	ldr	x9, [x1, #16]
   219a4:	mov	x8, #0x2                   	// #2
   219a8:	movk	x8, #0x8000, lsl #48
   219ac:	add	x10, x8, #0x2
   219b0:	mov	x22, x1
   219b4:	cmp	x9, x10
   219b8:	mov	x19, x0
   219bc:	b.lt	21dd0 <mpfr_sqrt@@Base+0x450>  // b.tstop
   219c0:	ldr	w9, [x22, #8]
   219c4:	tbnz	w9, #31, 21dd8 <mpfr_sqrt@@Base+0x458>
   219c8:	mov	w8, #0x1                   	// #1
   219cc:	str	w8, [x19, #8]
   219d0:	ldr	x20, [x19]
   219d4:	ldr	x9, [x22]
   219d8:	mov	w25, w2
   219dc:	cmp	x20, x9
   219e0:	b.ne	21a00 <mpfr_sqrt@@Base+0x80>  // b.any
   219e4:	cmp	x20, #0x3f
   219e8:	b.gt	21a08 <mpfr_sqrt@@Base+0x88>
   219ec:	mov	x0, x19
   219f0:	mov	x1, x22
   219f4:	mov	w2, w25
   219f8:	bl	21f14 <mpfr_sqrt@@Base+0x594>
   219fc:	b	21a44 <mpfr_sqrt@@Base+0xc4>
   21a00:	cbnz	w8, 21a50 <mpfr_sqrt@@Base+0xd0>
   21a04:	b	21dac <mpfr_sqrt@@Base+0x42c>
   21a08:	cmp	x20, #0x40
   21a0c:	b.eq	21a2c <mpfr_sqrt@@Base+0xac>  // b.none
   21a10:	cmp	x20, #0x7f
   21a14:	b.gt	21a2c <mpfr_sqrt@@Base+0xac>
   21a18:	mov	x0, x19
   21a1c:	mov	x1, x22
   21a20:	mov	w2, w25
   21a24:	bl	2223c <mpfr_sqrt@@Base+0x8bc>
   21a28:	b	21a44 <mpfr_sqrt@@Base+0xc4>
   21a2c:	cmp	x20, #0x40
   21a30:	b.ne	21ce4 <mpfr_sqrt@@Base+0x364>  // b.any
   21a34:	mov	x0, x19
   21a38:	mov	x1, x22
   21a3c:	mov	w2, w25
   21a40:	bl	22654 <mpfr_sqrt@@Base+0xcd4>
   21a44:	mov	w24, w0
   21a48:	mov	w8, wzr
   21a4c:	cbz	w8, 21dac <mpfr_sqrt@@Base+0x42c>
   21a50:	stur	xzr, [x29, #-8]
   21a54:	neg	w8, w20
   21a58:	and	w13, w8, #0x3f
   21a5c:	ldr	x8, [x19]
   21a60:	ldr	x10, [x22]
   21a64:	orr	w28, w13, w25
   21a68:	ldr	x23, [x19, #24]
   21a6c:	sub	x11, x8, #0x1
   21a70:	add	x8, x8, #0x3e
   21a74:	cmp	x11, #0x0
   21a78:	csel	x8, x8, x11, lt  // lt = tstop
   21a7c:	cmp	w28, #0x0
   21a80:	mov	w9, #0x40                  	// #64
   21a84:	sub	x12, x10, #0x1
   21a88:	cset	w11, eq  // eq = none
   21a8c:	asr	x8, x8, #6
   21a90:	add	x10, x10, #0x3e
   21a94:	csel	w20, w9, w13, eq  // eq = none
   21a98:	stp	x8, x11, [x29, #-48]
   21a9c:	cinc	x8, x8, eq  // eq = none
   21aa0:	cmp	x12, #0x0
   21aa4:	csel	x21, x10, x12, lt  // lt = tstop
   21aa8:	cmp	w20, #0x40
   21aac:	add	x27, x8, #0x1
   21ab0:	stur	w13, [x29, #-60]
   21ab4:	stur	x23, [x29, #-32]
   21ab8:	b.cc	21adc <mpfr_sqrt@@Base+0x15c>  // b.lo, b.ul, b.last
   21abc:	lsl	x1, x27, #3
   21ac0:	cmp	x1, #0x4, lsl #12
   21ac4:	b.hi	21eb8 <mpfr_sqrt@@Base+0x538>  // b.pmore
   21ac8:	add	x9, x1, #0xf
   21acc:	mov	x8, sp
   21ad0:	and	x9, x9, #0xfffffffffffffff0
   21ad4:	sub	x23, x8, x9
   21ad8:	mov	sp, x23
   21adc:	ldr	w8, [x22, #16]
   21ae0:	ldr	x26, [x22, #24]
   21ae4:	lsl	x24, x27, #1
   21ae8:	stur	x27, [x29, #-56]
   21aec:	lsl	x27, x27, #4
   21af0:	asr	x21, x21, #6
   21af4:	cmp	x27, #0x4, lsl #12
   21af8:	and	w8, w8, #0x1
   21afc:	stur	x8, [x29, #-16]
   21b00:	stp	w25, w28, [x29, #-24]
   21b04:	b.hi	21e20 <mpfr_sqrt@@Base+0x4a0>  // b.pmore
   21b08:	add	x9, x27, #0xf
   21b0c:	mov	x8, sp
   21b10:	and	x9, x9, #0xfffffffffffffff0
   21b14:	sub	x25, x8, x9
   21b18:	mov	sp, x25
   21b1c:	cmp	x21, x24
   21b20:	add	x28, x21, #0x1
   21b24:	b.ge	21e34 <mpfr_sqrt@@Base+0x4b4>  // b.tcont
   21b28:	subs	x27, x24, x28
   21b2c:	b.eq	21b40 <mpfr_sqrt@@Base+0x1c0>  // b.none
   21b30:	lsl	x2, x27, #3
   21b34:	mov	x0, x25
   21b38:	mov	w1, wzr
   21b3c:	bl	c5b0 <memset@plt>
   21b40:	ldur	x8, [x29, #-16]
   21b44:	cbnz	w8, 21b74 <mpfr_sqrt@@Base+0x1f4>
   21b48:	add	x8, x25, x24, lsl #3
   21b4c:	mvn	x9, x21
   21b50:	add	x0, x8, x9, lsl #3
   21b54:	cmp	x0, x26
   21b58:	b.eq	21b68 <mpfr_sqrt@@Base+0x1e8>  // b.none
   21b5c:	lsl	x2, x28, #3
   21b60:	mov	x1, x26
   21b64:	bl	be50 <memcpy@plt>
   21b68:	ldur	w28, [x29, #-24]
   21b6c:	mov	x27, xzr
   21b70:	b	21bbc <mpfr_sqrt@@Base+0x23c>
   21b74:	cbz	x27, 21ba0 <mpfr_sqrt@@Base+0x220>
   21b78:	add	x21, x25, x27, lsl #3
   21b7c:	mov	w3, #0x1                   	// #1
   21b80:	mov	x0, x21
   21b84:	mov	x1, x26
   21b88:	mov	x2, x28
   21b8c:	bl	c140 <__gmpn_rshift@plt>
   21b90:	ldur	w28, [x29, #-24]
   21b94:	mov	x27, xzr
   21b98:	stur	x0, [x21, #-8]
   21b9c:	b	21bbc <mpfr_sqrt@@Base+0x23c>
   21ba0:	mov	w3, #0x1                   	// #1
   21ba4:	mov	x0, x25
   21ba8:	mov	x1, x26
   21bac:	mov	x2, x28
   21bb0:	bl	c140 <__gmpn_rshift@plt>
   21bb4:	ldur	w28, [x29, #-24]
   21bb8:	mov	x27, x0
   21bbc:	mov	x0, x23
   21bc0:	mov	x1, xzr
   21bc4:	mov	x2, x25
   21bc8:	mov	x3, x24
   21bcc:	bl	d1c0 <__gmpn_sqrtrem@plt>
   21bd0:	ldr	x9, [x23]
   21bd4:	mov	w8, #0x1                   	// #1
   21bd8:	lsl	x8, x8, x20
   21bdc:	cmp	w20, #0x40
   21be0:	sub	x10, x8, #0x1
   21be4:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
   21be8:	and	x10, x9, x10
   21bec:	sub	x9, x9, x10
   21bf0:	str	x9, [x23]
   21bf4:	ldr	x12, [x22, #16]
   21bf8:	ldur	x14, [x29, #-16]
   21bfc:	orr	x11, x0, x27
   21c00:	orr	w13, w28, #0x2
   21c04:	add	x14, x12, x14
   21c08:	cmp	x14, #0x0
   21c0c:	cinc	x14, x14, lt  // lt = tstop
   21c10:	orr	x12, x10, x11
   21c14:	cmp	w13, #0x3
   21c18:	asr	x21, x14, #1
   21c1c:	b.eq	21c84 <mpfr_sqrt@@Base+0x304>  // b.none
   21c20:	cbz	x12, 21c84 <mpfr_sqrt@@Base+0x304>
   21c24:	ldur	x14, [x29, #-56]
   21c28:	cbz	w28, 21cb8 <mpfr_sqrt@@Base+0x338>
   21c2c:	ldp	x10, x9, [x29, #-48]
   21c30:	add	x8, x23, #0x8
   21c34:	ldur	x20, [x29, #-32]
   21c38:	mov	w24, #0x1                   	// #1
   21c3c:	add	x9, x10, x9
   21c40:	ldur	w10, [x29, #-20]
   21c44:	mov	x0, x20
   21c48:	cmp	w10, #0x0
   21c4c:	csel	x1, x8, x23, eq  // eq = none
   21c50:	ldur	w8, [x29, #-60]
   21c54:	csel	x22, x9, x14, eq  // eq = none
   21c58:	mov	x2, x22
   21c5c:	csel	w8, wzr, w8, eq  // eq = none
   21c60:	lsl	x3, x24, x8
   21c64:	bl	bf60 <__gmpn_add_1@plt>
   21c68:	cbz	x0, 21d2c <mpfr_sqrt@@Base+0x3ac>
   21c6c:	add	x8, x20, x22, lsl #3
   21c70:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   21c74:	add	x21, x21, #0x1
   21c78:	stur	x9, [x8, #-8]
   21c7c:	mov	w24, #0x1                   	// #1
   21c80:	b	21d2c <mpfr_sqrt@@Base+0x3ac>
   21c84:	cmp	x12, #0x0
   21c88:	csetm	w24, ne  // ne = any
   21c8c:	ldur	w8, [x29, #-20]
   21c90:	cbnz	w8, 21d2c <mpfr_sqrt@@Base+0x3ac>
   21c94:	ldur	x0, [x29, #-32]
   21c98:	add	x1, x23, #0x8
   21c9c:	cmp	x0, x1
   21ca0:	b.eq	21d2c <mpfr_sqrt@@Base+0x3ac>  // b.none
   21ca4:	ldp	x9, x8, [x29, #-48]
   21ca8:	add	x8, x9, x8
   21cac:	lsl	x2, x8, #3
   21cb0:	bl	be50 <memcpy@plt>
   21cb4:	b	21d2c <mpfr_sqrt@@Base+0x3ac>
   21cb8:	cmp	w20, #0x3f
   21cbc:	b.hi	21cf0 <mpfr_sqrt@@Base+0x370>  // b.pmore
   21cc0:	sub	w12, w20, #0x1
   21cc4:	mov	w13, #0x1                   	// #1
   21cc8:	lsl	x12, x13, x12
   21ccc:	tst	x10, x12
   21cd0:	b.eq	21d20 <mpfr_sqrt@@Base+0x3a0>  // b.none
   21cd4:	cbnz	x11, 21c2c <mpfr_sqrt@@Base+0x2ac>
   21cd8:	cmp	x10, x12
   21cdc:	b.eq	21d04 <mpfr_sqrt@@Base+0x384>  // b.none
   21ce0:	b	21c2c <mpfr_sqrt@@Base+0x2ac>
   21ce4:	mov	w8, #0x1                   	// #1
   21ce8:	cbnz	w8, 21a50 <mpfr_sqrt@@Base+0xd0>
   21cec:	b	21dac <mpfr_sqrt@@Base+0x42c>
   21cf0:	tbz	x10, #63, 21d20 <mpfr_sqrt@@Base+0x3a0>
   21cf4:	cbnz	x11, 21c2c <mpfr_sqrt@@Base+0x2ac>
   21cf8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   21cfc:	cmp	x10, x11
   21d00:	b.ne	21c2c <mpfr_sqrt@@Base+0x2ac>  // b.any
   21d04:	cmp	w20, #0x3f
   21d08:	b.hi	21d14 <mpfr_sqrt@@Base+0x394>  // b.pmore
   21d0c:	and	x8, x9, x8
   21d10:	b	21d1c <mpfr_sqrt@@Base+0x39c>
   21d14:	ldr	x8, [x23, #8]
   21d18:	and	x8, x8, #0x1
   21d1c:	cbnz	x8, 21c2c <mpfr_sqrt@@Base+0x2ac>
   21d20:	mov	w24, #0xffffffff            	// #-1
   21d24:	ldur	w8, [x29, #-20]
   21d28:	cbz	w8, 21c94 <mpfr_sqrt@@Base+0x314>
   21d2c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   21d30:	add	x8, x21, x8
   21d34:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   21d38:	cmp	x8, x9
   21d3c:	b.cs	21e60 <mpfr_sqrt@@Base+0x4e0>  // b.hs, b.nlast
   21d40:	str	x21, [x19, #16]
   21d44:	ldur	x0, [x29, #-8]
   21d48:	cbnz	x0, 21e7c <mpfr_sqrt@@Base+0x4fc>
   21d4c:	ldr	x9, [x19, #16]
   21d50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21d54:	ldr	x1, [x0, #2736]
   21d58:	add	x0, x0, #0xab0
   21d5c:	blr	x1
   21d60:	mrs	x8, tpidr_el0
   21d64:	ldr	x10, [x8, x0]
   21d68:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21d6c:	ldr	x1, [x0, #2768]
   21d70:	add	x0, x0, #0xad0
   21d74:	blr	x1
   21d78:	cmp	x9, x10
   21d7c:	b.lt	21e84 <mpfr_sqrt@@Base+0x504>  // b.tstop
   21d80:	ldr	x10, [x8, x0]
   21d84:	cmp	x9, x10
   21d88:	b.gt	21e84 <mpfr_sqrt@@Base+0x504>
   21d8c:	cbz	w24, 21dac <mpfr_sqrt@@Base+0x42c>
   21d90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21d94:	ldr	x1, [x0, #2800]
   21d98:	add	x0, x0, #0xaf0
   21d9c:	blr	x1
   21da0:	ldr	w9, [x8, x0]
   21da4:	orr	w9, w9, #0x8
   21da8:	str	w9, [x8, x0]
   21dac:	mov	w0, w24
   21db0:	mov	sp, x29
   21db4:	ldp	x20, x19, [sp, #80]
   21db8:	ldp	x22, x21, [sp, #64]
   21dbc:	ldp	x24, x23, [sp, #48]
   21dc0:	ldp	x26, x25, [sp, #32]
   21dc4:	ldp	x28, x27, [sp, #16]
   21dc8:	ldp	x29, x30, [sp], #96
   21dcc:	ret
   21dd0:	cmp	x9, x8
   21dd4:	b.ne	21e00 <mpfr_sqrt@@Base+0x480>  // b.any
   21dd8:	str	x8, [x19, #16]
   21ddc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   21de0:	ldr	x1, [x0, #2800]
   21de4:	add	x0, x0, #0xaf0
   21de8:	blr	x1
   21dec:	mrs	x8, tpidr_el0
   21df0:	ldr	w9, [x8, x0]
   21df4:	mov	w24, wzr
   21df8:	orr	w9, w9, #0x4
   21dfc:	b	21da8 <mpfr_sqrt@@Base+0x428>
   21e00:	ldr	w10, [x22, #8]
   21e04:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   21e08:	cmp	x9, x11
   21e0c:	b.ne	21e9c <mpfr_sqrt@@Base+0x51c>  // b.any
   21e10:	mov	w24, wzr
   21e14:	str	w10, [x19, #8]
   21e18:	str	x11, [x19, #16]
   21e1c:	b	21dac <mpfr_sqrt@@Base+0x42c>
   21e20:	sub	x0, x29, #0x8
   21e24:	mov	x1, x27
   21e28:	bl	c220 <mpfr_tmp_allocate@plt>
   21e2c:	mov	x25, x0
   21e30:	b	21b1c <mpfr_sqrt@@Base+0x19c>
   21e34:	ldur	x8, [x29, #-16]
   21e38:	sub	x28, x28, x24
   21e3c:	add	x1, x26, x28, lsl #3
   21e40:	cbnz	w8, 21ec8 <mpfr_sqrt@@Base+0x548>
   21e44:	cmp	x1, x25
   21e48:	b.eq	21e58 <mpfr_sqrt@@Base+0x4d8>  // b.none
   21e4c:	mov	x0, x25
   21e50:	mov	x2, x27
   21e54:	bl	be50 <memcpy@plt>
   21e58:	mov	x27, xzr
   21e5c:	b	21edc <mpfr_sqrt@@Base+0x55c>
   21e60:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   21e64:	adrp	x2, 5c000 <mpfr_l2b_62_1__tab@@Base+0x700>
   21e68:	add	x0, x0, #0x436
   21e6c:	add	x2, x2, #0x80
   21e70:	mov	w1, #0x2b5                 	// #693
   21e74:	bl	d030 <mpfr_assert_fail@plt>
   21e78:	b	21d40 <mpfr_sqrt@@Base+0x3c0>
   21e7c:	bl	c8d0 <mpfr_tmp_free@plt>
   21e80:	b	21d4c <mpfr_sqrt@@Base+0x3cc>
   21e84:	mov	x0, x19
   21e88:	mov	w1, w24
   21e8c:	mov	w2, w28
   21e90:	bl	d020 <mpfr_check_range@plt>
   21e94:	mov	w24, w0
   21e98:	b	21dac <mpfr_sqrt@@Base+0x42c>
   21e9c:	tbnz	w10, #31, 21dd8 <mpfr_sqrt@@Base+0x458>
   21ea0:	mov	w8, #0x1                   	// #1
   21ea4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   21ea8:	mov	w24, wzr
   21eac:	str	w8, [x19, #8]
   21eb0:	str	x9, [x19, #16]
   21eb4:	b	21dac <mpfr_sqrt@@Base+0x42c>
   21eb8:	sub	x0, x29, #0x8
   21ebc:	bl	c220 <mpfr_tmp_allocate@plt>
   21ec0:	mov	x23, x0
   21ec4:	b	21adc <mpfr_sqrt@@Base+0x15c>
   21ec8:	mov	w3, #0x1                   	// #1
   21ecc:	mov	x0, x25
   21ed0:	mov	x2, x24
   21ed4:	bl	c140 <__gmpn_rshift@plt>
   21ed8:	mov	x27, x0
   21edc:	cbz	x28, 21f0c <mpfr_sqrt@@Base+0x58c>
   21ee0:	ldur	w28, [x29, #-24]
   21ee4:	cbnz	x27, 21bbc <mpfr_sqrt@@Base+0x23c>
   21ee8:	ldp	x9, x8, [x29, #-48]
   21eec:	add	x8, x9, x8
   21ef0:	sub	x8, x21, x8, lsl #1
   21ef4:	sub	x8, x8, #0x2
   21ef8:	ldr	x27, [x26, x8, lsl #3]
   21efc:	subs	x8, x8, #0x1
   21f00:	b.cc	21bbc <mpfr_sqrt@@Base+0x23c>  // b.lo, b.ul, b.last
   21f04:	cbz	x27, 21ef8 <mpfr_sqrt@@Base+0x578>
   21f08:	b	21bbc <mpfr_sqrt@@Base+0x23c>
   21f0c:	ldur	w28, [x29, #-24]
   21f10:	b	21bbc <mpfr_sqrt@@Base+0x23c>
   21f14:	stp	x29, x30, [sp, #-16]!
   21f18:	ldp	x13, x14, [x1, #16]
   21f1c:	ldr	x12, [x0]
   21f20:	mov	x8, x0
   21f24:	mov	w11, #0x1                   	// #1
   21f28:	ldr	x18, [x14]
   21f2c:	ldr	x10, [x0, #24]
   21f30:	neg	x16, x12
   21f34:	and	x0, x13, #0x1
   21f38:	lsl	x11, x11, x16
   21f3c:	lsr	x16, x18, x0
   21f40:	lsr	x18, x16, #51
   21f44:	adrp	x15, 5c000 <mpfr_l2b_62_1__tab@@Base+0x700>
   21f48:	and	x18, x18, #0x1ff8
   21f4c:	add	x15, x15, #0x128
   21f50:	adrp	x17, 5d000 <mpfr_l2b_62_1__tab@@Base+0x1700>
   21f54:	sub	x18, x18, #0x800
   21f58:	add	x17, x17, #0x928
   21f5c:	ldr	x15, [x15, x18]
   21f60:	ldr	x17, [x17, x18]
   21f64:	lsr	x18, x16, #27
   21f68:	add	x13, x13, x0
   21f6c:	add	x0, x18, #0x1
   21f70:	lsl	x1, x15, #57
   21f74:	msub	x17, x0, x17, x1
   21f78:	lsr	x17, x17, #47
   21f7c:	mvn	x18, x18
   21f80:	add	x15, x17, x15, lsl #11
   21f84:	mul	x17, x15, x18
   21f88:	lsl	x18, x15, #10
   21f8c:	mul	x17, x17, x15
   21f90:	umulh	x15, x15, x17
   21f94:	lsr	x0, x16, #31
   21f98:	add	x15, x18, x15, lsr #6
   21f9c:	mul	x17, x15, x0
   21fa0:	lsr	x17, x17, #32
   21fa4:	cmp	x13, #0x0
   21fa8:	msub	x18, x17, x17, x16
   21fac:	mov	x0, #0x1ffffffff           	// #8589934591
   21fb0:	mov	w9, w2
   21fb4:	sub	x14, x11, #0x1
   21fb8:	cinc	x13, x13, lt  // lt = tstop
   21fbc:	cmp	x18, x0
   21fc0:	lsl	x0, x17, #1
   21fc4:	mov	x29, sp
   21fc8:	b.cc	21fec <mpfr_sqrt@@Base+0x66c>  // b.lo, b.ul, b.last
   21fcc:	add	x0, x0, #0x1
   21fd0:	mov	x1, #0x1fffffffe           	// #8589934590
   21fd4:	sub	x18, x18, x0
   21fd8:	add	x17, x17, #0x1
   21fdc:	cmp	x18, x1
   21fe0:	add	x0, x0, #0x2
   21fe4:	b.hi	21fd4 <mpfr_sqrt@@Base+0x654>  // b.pmore
   21fe8:	sub	x0, x0, #0x1
   21fec:	orr	x1, x0, #0x1
   21ff0:	cmp	x18, x0
   21ff4:	csel	x0, x1, xzr, hi  // hi = pmore
   21ff8:	sub	x18, x18, x0
   21ffc:	cinc	x17, x17, hi  // hi = pmore
   22000:	mul	x15, x18, x15
   22004:	extr	x15, x17, x15, #32
   22008:	add	x18, x15, #0x7
   2200c:	and	x18, x18, x14, lsr #1
   22010:	cmp	x18, #0x7
   22014:	asr	x13, x13, #1
   22018:	b.ls	22150 <mpfr_sqrt@@Base+0x7d0>  // b.plast
   2201c:	mov	w2, #0x1                   	// #1
   22020:	neg	x18, x11
   22024:	and	x17, x15, x18
   22028:	str	x17, [x10]
   2202c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22030:	ldr	x1, [x0, #2768]
   22034:	add	x0, x0, #0xad0
   22038:	blr	x1
   2203c:	mrs	x16, tpidr_el0
   22040:	ldr	x0, [x16, x0]
   22044:	cmp	x13, x0
   22048:	b.gt	22138 <mpfr_sqrt@@Base+0x7b8>
   2204c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   22050:	lsr	x12, x0, x12
   22054:	and	x12, x15, x12
   22058:	and	x14, x15, x14
   2205c:	eor	x14, x14, x12
   22060:	orr	x14, x14, x2
   22064:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22068:	ldr	x1, [x0, #2736]
   2206c:	add	x0, x0, #0xab0
   22070:	blr	x1
   22074:	ldr	x15, [x16, x0]
   22078:	cmp	x13, x15
   2207c:	b.lt	221b8 <mpfr_sqrt@@Base+0x838>  // b.tstop
   22080:	mov	w0, wzr
   22084:	cmp	w9, #0x5
   22088:	str	x13, [x8, #16]
   2208c:	b.eq	22108 <mpfr_sqrt@@Base+0x788>  // b.none
   22090:	cbz	x14, 22108 <mpfr_sqrt@@Base+0x788>
   22094:	cmp	w9, #0x3
   22098:	b.eq	22110 <mpfr_sqrt@@Base+0x790>  // b.none
   2209c:	cmp	w9, #0x1
   220a0:	b.eq	22110 <mpfr_sqrt@@Base+0x790>  // b.none
   220a4:	cbnz	w9, 220ac <mpfr_sqrt@@Base+0x72c>
   220a8:	cbz	x12, 22110 <mpfr_sqrt@@Base+0x790>
   220ac:	ldr	x12, [x10]
   220b0:	adds	x11, x12, x11
   220b4:	str	x11, [x10]
   220b8:	b.ne	220e8 <mpfr_sqrt@@Base+0x768>  // b.any
   220bc:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   220c0:	str	x11, [x10]
   220c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   220c8:	ldr	x1, [x0, #2768]
   220cc:	add	x0, x0, #0xad0
   220d0:	blr	x1
   220d4:	ldr	x10, [x16, x0]
   220d8:	cmp	x13, x10
   220dc:	b.ge	22138 <mpfr_sqrt@@Base+0x7b8>  // b.tcont
   220e0:	add	x9, x13, #0x1
   220e4:	str	x9, [x8, #16]
   220e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   220ec:	ldr	x1, [x0, #2800]
   220f0:	add	x0, x0, #0xaf0
   220f4:	blr	x1
   220f8:	ldr	w8, [x16, x0]
   220fc:	orr	w8, w8, #0x8
   22100:	str	w8, [x16, x0]
   22104:	mov	w0, #0x1                   	// #1
   22108:	ldp	x29, x30, [sp], #16
   2210c:	ret
   22110:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22114:	ldr	x1, [x0, #2800]
   22118:	add	x0, x0, #0xaf0
   2211c:	blr	x1
   22120:	ldr	w8, [x16, x0]
   22124:	orr	w8, w8, #0x8
   22128:	str	w8, [x16, x0]
   2212c:	mov	w0, #0xffffffff            	// #-1
   22130:	ldp	x29, x30, [sp], #16
   22134:	ret
   22138:	mov	w2, #0x1                   	// #1
   2213c:	mov	x0, x8
   22140:	mov	w1, w9
   22144:	bl	c3a0 <mpfr_overflow@plt>
   22148:	ldp	x29, x30, [sp], #16
   2214c:	ret
   22150:	cmp	w17, #0x0
   22154:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   22158:	csel	x15, x17, x15, ge  // ge = tcont
   2215c:	mov	x18, xzr
   22160:	umulh	x0, x15, x15
   22164:	mul	x1, x15, x15
   22168:	subs	x17, x18, x1
   2216c:	sbc	x16, x16, x0
   22170:	cbz	x16, 221b0 <mpfr_sqrt@@Base+0x830>
   22174:	lsl	x18, x15, #1
   22178:	b	221a0 <mpfr_sqrt@@Base+0x820>
   2217c:	subs	x17, x17, x15
   22180:	add	x15, x15, #0x1
   22184:	cset	w0, cc  // cc = lo, ul, last
   22188:	subs	x17, x17, x15
   2218c:	sub	x16, x16, x0
   22190:	cset	w0, cc  // cc = lo, ul, last
   22194:	subs	x16, x16, x0
   22198:	add	x18, x18, #0x2
   2219c:	b.eq	221b0 <mpfr_sqrt@@Base+0x830>  // b.none
   221a0:	cmp	x16, #0x1
   221a4:	b.ne	2217c <mpfr_sqrt@@Base+0x7fc>  // b.any
   221a8:	cmp	x17, x18
   221ac:	b.hi	2217c <mpfr_sqrt@@Base+0x7fc>  // b.pmore
   221b0:	orr	x2, x16, x17
   221b4:	b	22020 <mpfr_sqrt@@Base+0x6a0>
   221b8:	cmp	w9, #0x4
   221bc:	b.eq	22208 <mpfr_sqrt@@Base+0x888>  // b.none
   221c0:	cmp	w9, #0x2
   221c4:	b.eq	22208 <mpfr_sqrt@@Base+0x888>  // b.none
   221c8:	cbnz	w9, 22224 <mpfr_sqrt@@Base+0x8a4>
   221cc:	sub	x15, x15, #0x1
   221d0:	cmp	x13, x15
   221d4:	b.ne	221e4 <mpfr_sqrt@@Base+0x864>  // b.any
   221d8:	cmp	x17, x18
   221dc:	b.ne	221e4 <mpfr_sqrt@@Base+0x864>  // b.any
   221e0:	cbnz	x12, 22080 <mpfr_sqrt@@Base+0x700>
   221e4:	cmp	x13, x15
   221e8:	b.lt	22200 <mpfr_sqrt@@Base+0x880>  // b.tstop
   221ec:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   221f0:	cmp	x17, x9
   221f4:	mov	w9, wzr
   221f8:	b.ne	22224 <mpfr_sqrt@@Base+0x8a4>  // b.any
   221fc:	cbnz	x14, 22224 <mpfr_sqrt@@Base+0x8a4>
   22200:	mov	w9, #0x1                   	// #1
   22204:	b	22224 <mpfr_sqrt@@Base+0x8a4>
   22208:	sub	x15, x15, #0x1
   2220c:	cmp	x13, x15
   22210:	b.ne	22224 <mpfr_sqrt@@Base+0x8a4>  // b.any
   22214:	cmp	x17, x18
   22218:	b.ne	22224 <mpfr_sqrt@@Base+0x8a4>  // b.any
   2221c:	orr	x15, x14, x12
   22220:	cbnz	x15, 22080 <mpfr_sqrt@@Base+0x700>
   22224:	mov	w2, #0x1                   	// #1
   22228:	mov	x0, x8
   2222c:	mov	w1, w9
   22230:	bl	c880 <mpfr_underflow@plt>
   22234:	ldp	x29, x30, [sp], #16
   22238:	ret
   2223c:	sub	sp, sp, #0x90
   22240:	stp	x29, x30, [sp, #64]
   22244:	stp	x26, x25, [sp, #80]
   22248:	stp	x24, x23, [sp, #96]
   2224c:	stp	x22, x21, [sp, #112]
   22250:	stp	x20, x19, [sp, #128]
   22254:	ldp	x8, x10, [x1, #16]
   22258:	ldr	x24, [x0]
   2225c:	ldr	x21, [x0, #24]
   22260:	mov	w9, #0x80                  	// #128
   22264:	ldr	x11, [x10, #8]
   22268:	mov	w20, w2
   2226c:	mov	x19, x0
   22270:	sub	x9, x9, x24
   22274:	add	x29, sp, #0x40
   22278:	tbnz	w8, #0, 2228c <mpfr_sqrt@@Base+0x90c>
   2227c:	str	x11, [sp, #56]
   22280:	ldr	x10, [x10]
   22284:	stp	xzr, x10, [sp, #40]
   22288:	b	222b0 <mpfr_sqrt@@Base+0x930>
   2228c:	lsr	x11, x11, #1
   22290:	str	x11, [sp, #56]
   22294:	ldp	x12, x11, [x10]
   22298:	add	x8, x8, #0x1
   2229c:	extr	x11, x11, x12, #1
   222a0:	str	x11, [sp, #48]
   222a4:	ldr	x10, [x10]
   222a8:	lsl	x10, x10, #63
   222ac:	str	x10, [sp, #40]
   222b0:	cmp	x8, #0x0
   222b4:	mov	w26, #0x1                   	// #1
   222b8:	add	x10, sp, #0x20
   222bc:	cinc	x8, x8, lt  // lt = tstop
   222c0:	lsl	x23, x26, x9
   222c4:	add	x1, x10, #0x10
   222c8:	mov	x0, x21
   222cc:	asr	x22, x8, #1
   222d0:	sub	x25, x23, #0x1
   222d4:	bl	22930 <mpfr_sqrt@@Base+0xfb0>
   222d8:	ldr	x8, [x21]
   222dc:	add	x8, x8, #0x1a
   222e0:	and	x8, x8, x25, lsr #1
   222e4:	cmp	x8, #0x1e
   222e8:	b.ls	2243c <mpfr_sqrt@@Base+0xabc>  // b.plast
   222ec:	ldr	x11, [x21]
   222f0:	neg	x12, x23
   222f4:	and	x10, x11, x12
   222f8:	str	x10, [x21]
   222fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22300:	ldr	x1, [x0, #2768]
   22304:	add	x0, x0, #0xad0
   22308:	blr	x1
   2230c:	mrs	x8, tpidr_el0
   22310:	ldr	x9, [x8, x0]
   22314:	cmp	x22, x9
   22318:	b.gt	22428 <mpfr_sqrt@@Base+0xaa8>
   2231c:	mov	w9, #0x7f                  	// #127
   22320:	mov	w13, #0x1                   	// #1
   22324:	sub	x9, x9, x24
   22328:	lsl	x9, x13, x9
   2232c:	and	x9, x11, x9
   22330:	and	x11, x11, x25
   22334:	eor	x11, x11, x9
   22338:	orr	x11, x11, x26
   2233c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22340:	ldr	x1, [x0, #2736]
   22344:	add	x0, x0, #0xab0
   22348:	blr	x1
   2234c:	ldr	x13, [x8, x0]
   22350:	cmp	x22, x13
   22354:	b.lt	224dc <mpfr_sqrt@@Base+0xb5c>  // b.tstop
   22358:	mov	w0, wzr
   2235c:	cmp	w20, #0x5
   22360:	str	x22, [x19, #16]
   22364:	b.eq	2240c <mpfr_sqrt@@Base+0xa8c>  // b.none
   22368:	cbz	x11, 2240c <mpfr_sqrt@@Base+0xa8c>
   2236c:	cmp	w20, #0x3
   22370:	b.eq	223ec <mpfr_sqrt@@Base+0xa6c>  // b.none
   22374:	cmp	w20, #0x1
   22378:	b.eq	223ec <mpfr_sqrt@@Base+0xa6c>  // b.none
   2237c:	cbnz	w20, 22384 <mpfr_sqrt@@Base+0xa04>
   22380:	cbz	x9, 223ec <mpfr_sqrt@@Base+0xa6c>
   22384:	ldp	x9, x10, [x21]
   22388:	adds	x9, x9, x23
   2238c:	str	x9, [x21]
   22390:	cinc	x9, x10, eq  // eq = none
   22394:	str	x9, [x21, #8]
   22398:	cbnz	x9, 223c8 <mpfr_sqrt@@Base+0xa48>
   2239c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   223a0:	str	x9, [x21, #8]
   223a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   223a8:	ldr	x1, [x0, #2768]
   223ac:	add	x0, x0, #0xad0
   223b0:	blr	x1
   223b4:	ldr	x9, [x8, x0]
   223b8:	cmp	x22, x9
   223bc:	b.ge	22428 <mpfr_sqrt@@Base+0xaa8>  // b.tcont
   223c0:	add	x9, x22, #0x1
   223c4:	str	x9, [x19, #16]
   223c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   223cc:	ldr	x1, [x0, #2800]
   223d0:	add	x0, x0, #0xaf0
   223d4:	blr	x1
   223d8:	ldr	w9, [x8, x0]
   223dc:	orr	w9, w9, #0x8
   223e0:	str	w9, [x8, x0]
   223e4:	mov	w0, #0x1                   	// #1
   223e8:	b	2240c <mpfr_sqrt@@Base+0xa8c>
   223ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   223f0:	ldr	x1, [x0, #2800]
   223f4:	add	x0, x0, #0xaf0
   223f8:	blr	x1
   223fc:	ldr	w9, [x8, x0]
   22400:	orr	w9, w9, #0x8
   22404:	str	w9, [x8, x0]
   22408:	mov	w0, #0xffffffff            	// #-1
   2240c:	ldp	x20, x19, [sp, #128]
   22410:	ldp	x22, x21, [sp, #112]
   22414:	ldp	x24, x23, [sp, #96]
   22418:	ldp	x26, x25, [sp, #80]
   2241c:	ldp	x29, x30, [sp, #64]
   22420:	add	sp, sp, #0x90
   22424:	ret
   22428:	mov	w2, #0x1                   	// #1
   2242c:	mov	x0, x19
   22430:	mov	w1, w20
   22434:	bl	c3a0 <mpfr_overflow@plt>
   22438:	b	2240c <mpfr_sqrt@@Base+0xa8c>
   2243c:	mov	x0, sp
   22440:	mov	w2, #0x2                   	// #2
   22444:	mov	x1, x21
   22448:	str	xzr, [sp, #32]
   2244c:	bl	c870 <__gmpn_sqr@plt>
   22450:	mov	x0, sp
   22454:	add	x1, sp, #0x20
   22458:	mov	x2, sp
   2245c:	mov	w3, #0x3                   	// #3
   22460:	bl	c2c0 <__gmpn_sub_n@plt>
   22464:	ldp	x9, x8, [x21]
   22468:	ldr	x10, [sp, #16]
   2246c:	extr	x8, x8, x9, #63
   22470:	lsl	x9, x9, #1
   22474:	tbz	x10, #63, 22568 <mpfr_sqrt@@Base+0xbe8>
   22478:	ldp	x11, x12, [sp]
   2247c:	mov	w13, #0x1                   	// #1
   22480:	b	224a8 <mpfr_sqrt@@Base+0xb28>
   22484:	cmp	x11, x9
   22488:	cset	w14, cc  // cc = lo, ul, last
   2248c:	cmp	x12, x8
   22490:	cset	w15, eq  // eq = none
   22494:	and	w14, w14, w15
   22498:	cmp	w14, #0x0
   2249c:	cinc	x14, x13, ne  // ne = any
   224a0:	adds	x10, x14, x10
   224a4:	b.pl	22560 <mpfr_sqrt@@Base+0xbe0>  // b.nfrst
   224a8:	cmp	x9, #0x0
   224ac:	add	x11, x9, x11
   224b0:	cset	w14, eq  // eq = none
   224b4:	sub	x9, x9, #0x2
   224b8:	sub	x11, x11, #0x1
   224bc:	sub	x8, x8, x14
   224c0:	cmp	x11, x9
   224c4:	add	x12, x12, x8
   224c8:	cinc	x12, x12, cc  // cc = lo, ul, last
   224cc:	cmp	x12, x8
   224d0:	b.cs	22484 <mpfr_sqrt@@Base+0xb04>  // b.hs, b.nlast
   224d4:	mov	w14, #0x1                   	// #1
   224d8:	b	22498 <mpfr_sqrt@@Base+0xb18>
   224dc:	cmp	w20, #0x4
   224e0:	b.eq	22534 <mpfr_sqrt@@Base+0xbb4>  // b.none
   224e4:	cmp	w20, #0x2
   224e8:	b.eq	22534 <mpfr_sqrt@@Base+0xbb4>  // b.none
   224ec:	cbnz	w20, 2254c <mpfr_sqrt@@Base+0xbcc>
   224f0:	sub	x13, x13, #0x1
   224f4:	cmp	x22, x13
   224f8:	b.ne	22508 <mpfr_sqrt@@Base+0xb88>  // b.any
   224fc:	ldr	x14, [x21, #8]
   22500:	cmn	x14, #0x1
   22504:	b.eq	22644 <mpfr_sqrt@@Base+0xcc4>  // b.none
   22508:	cmp	x22, x13
   2250c:	b.lt	2252c <mpfr_sqrt@@Base+0xbac>  // b.tstop
   22510:	orr	x8, x11, x10
   22514:	mov	w20, wzr
   22518:	cbnz	x8, 2254c <mpfr_sqrt@@Base+0xbcc>
   2251c:	ldr	x8, [x21, #8]
   22520:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   22524:	cmp	x8, x9
   22528:	b.ne	2254c <mpfr_sqrt@@Base+0xbcc>  // b.any
   2252c:	mov	w20, #0x1                   	// #1
   22530:	b	2254c <mpfr_sqrt@@Base+0xbcc>
   22534:	sub	x13, x13, #0x1
   22538:	cmp	x22, x13
   2253c:	b.ne	2254c <mpfr_sqrt@@Base+0xbcc>  // b.any
   22540:	ldr	x13, [x21, #8]
   22544:	cmn	x13, #0x1
   22548:	b.eq	22630 <mpfr_sqrt@@Base+0xcb0>  // b.none
   2254c:	mov	w2, #0x1                   	// #1
   22550:	mov	x0, x19
   22554:	mov	w1, w20
   22558:	bl	c880 <mpfr_underflow@plt>
   2255c:	b	2240c <mpfr_sqrt@@Base+0xa8c>
   22560:	stp	x11, x12, [sp]
   22564:	str	x10, [sp, #16]
   22568:	mov	w10, #0x1                   	// #1
   2256c:	b	225bc <mpfr_sqrt@@Base+0xc3c>
   22570:	ldr	x13, [sp]
   22574:	cset	w14, eq  // eq = none
   22578:	cmp	x13, x9
   2257c:	cset	w13, ls  // ls = plast
   22580:	and	w13, w14, w13
   22584:	cmp	w13, #0x0
   22588:	ldr	x13, [sp]
   2258c:	cinc	x14, x10, ne  // ne = any
   22590:	sub	x11, x11, x14
   22594:	orr	x14, x9, #0x1
   22598:	cmp	x13, x9
   2259c:	sub	x13, x13, x14
   225a0:	str	x13, [sp]
   225a4:	cset	w13, ls  // ls = plast
   225a8:	cmn	x9, #0x2
   225ac:	sub	x12, x12, x13
   225b0:	add	x9, x9, #0x2
   225b4:	stp	x12, x11, [sp, #8]
   225b8:	cinc	x8, x8, eq  // eq = none
   225bc:	ldr	x11, [sp, #16]
   225c0:	cmp	x11, #0x1
   225c4:	b.hi	225f8 <mpfr_sqrt@@Base+0xc78>  // b.pmore
   225c8:	b.ne	2260c <mpfr_sqrt@@Base+0xc8c>  // b.any
   225cc:	ldr	x12, [sp, #8]
   225d0:	cmp	x12, x8
   225d4:	b.hi	225f8 <mpfr_sqrt@@Base+0xc78>  // b.pmore
   225d8:	cmp	x11, #0x1
   225dc:	b.ne	2260c <mpfr_sqrt@@Base+0xc8c>  // b.any
   225e0:	ldr	x12, [sp, #8]
   225e4:	cmp	x12, x8
   225e8:	b.ne	2260c <mpfr_sqrt@@Base+0xc8c>  // b.any
   225ec:	ldr	x12, [sp]
   225f0:	cmp	x12, x9
   225f4:	b.ls	2260c <mpfr_sqrt@@Base+0xc8c>  // b.plast
   225f8:	ldr	x12, [sp, #8]
   225fc:	subs	x12, x12, x8
   22600:	b.cs	22570 <mpfr_sqrt@@Base+0xbf0>  // b.hs, b.nlast
   22604:	mov	w13, #0x1                   	// #1
   22608:	b	22584 <mpfr_sqrt@@Base+0xc04>
   2260c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   22610:	extr	x9, x8, x9, #1
   22614:	bfxil	x10, x8, #1, #63
   22618:	stp	x9, x10, [x21]
   2261c:	ldp	x10, x8, [sp, #8]
   22620:	ldr	x9, [sp]
   22624:	orr	x8, x9, x8
   22628:	orr	x26, x8, x10
   2262c:	b	222ec <mpfr_sqrt@@Base+0x96c>
   22630:	cmp	x10, x12
   22634:	b.ne	2254c <mpfr_sqrt@@Base+0xbcc>  // b.any
   22638:	orr	x10, x11, x9
   2263c:	cbnz	x10, 22358 <mpfr_sqrt@@Base+0x9d8>
   22640:	b	2254c <mpfr_sqrt@@Base+0xbcc>
   22644:	cmp	x10, x12
   22648:	b.ne	22508 <mpfr_sqrt@@Base+0xb88>  // b.any
   2264c:	cbnz	x9, 22358 <mpfr_sqrt@@Base+0x9d8>
   22650:	b	22508 <mpfr_sqrt@@Base+0xb88>
   22654:	stp	x29, x30, [sp, #-16]!
   22658:	ldp	x12, x11, [x1, #16]
   2265c:	adrp	x15, 5c000 <mpfr_l2b_62_1__tab@@Base+0x700>
   22660:	add	x15, x15, #0x128
   22664:	adrp	x16, 5d000 <mpfr_l2b_62_1__tab@@Base+0x1700>
   22668:	ldr	x13, [x11]
   2266c:	and	x14, x12, #0x1
   22670:	add	x11, x12, x14
   22674:	add	x16, x16, #0x928
   22678:	and	w12, w12, w13
   2267c:	lsr	x13, x13, x14
   22680:	lsl	x14, x12, #63
   22684:	lsr	x12, x13, #51
   22688:	and	x12, x12, #0x1ff8
   2268c:	sub	x12, x12, #0x800
   22690:	ldr	x15, [x15, x12]
   22694:	ldr	x12, [x16, x12]
   22698:	lsr	x16, x13, #27
   2269c:	add	x17, x16, #0x1
   226a0:	lsl	x18, x15, #57
   226a4:	msub	x12, x17, x12, x18
   226a8:	lsr	x12, x12, #47
   226ac:	mvn	x16, x16
   226b0:	add	x12, x12, x15, lsl #11
   226b4:	mul	x15, x12, x16
   226b8:	lsl	x16, x12, #10
   226bc:	mul	x15, x15, x12
   226c0:	umulh	x12, x12, x15
   226c4:	lsr	x17, x13, #31
   226c8:	add	x12, x16, x12, lsr #6
   226cc:	ldr	x10, [x0, #24]
   226d0:	mul	x15, x12, x17
   226d4:	lsr	x15, x15, #32
   226d8:	cmp	x11, #0x0
   226dc:	msub	x16, x15, x15, x13
   226e0:	mov	x17, #0x1ffffffff           	// #8589934591
   226e4:	mov	w9, w2
   226e8:	mov	x8, x0
   226ec:	cinc	x11, x11, lt  // lt = tstop
   226f0:	cmp	x16, x17
   226f4:	lsl	x17, x15, #1
   226f8:	mov	x29, sp
   226fc:	b.cc	22720 <mpfr_sqrt@@Base+0xda0>  // b.lo, b.ul, b.last
   22700:	add	x17, x17, #0x1
   22704:	mov	x18, #0x1fffffffe           	// #8589934590
   22708:	sub	x16, x16, x17
   2270c:	add	x15, x15, #0x1
   22710:	cmp	x16, x18
   22714:	add	x17, x17, #0x2
   22718:	b.hi	22708 <mpfr_sqrt@@Base+0xd88>  // b.pmore
   2271c:	sub	x17, x17, #0x1
   22720:	orr	x18, x17, #0x1
   22724:	cmp	x16, x17
   22728:	csel	x18, x18, xzr, hi  // hi = pmore
   2272c:	sub	x16, x16, x18
   22730:	cinc	x15, x15, hi  // hi = pmore
   22734:	mul	x12, x16, x12
   22738:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   2273c:	cmp	w15, #0x0
   22740:	extr	x12, x15, x12, #32
   22744:	csel	x12, x17, x12, ge  // ge = tcont
   22748:	asr	x11, x11, #1
   2274c:	umulh	x16, x12, x12
   22750:	mul	x17, x12, x12
   22754:	subs	x15, x14, x17
   22758:	sbc	x13, x13, x16
   2275c:	cbz	x13, 2279c <mpfr_sqrt@@Base+0xe1c>
   22760:	lsl	x14, x12, #1
   22764:	b	2278c <mpfr_sqrt@@Base+0xe0c>
   22768:	subs	x15, x15, x12
   2276c:	add	x12, x12, #0x1
   22770:	cset	w16, cc  // cc = lo, ul, last
   22774:	subs	x15, x15, x12
   22778:	sub	x13, x13, x16
   2277c:	cset	w16, cc  // cc = lo, ul, last
   22780:	subs	x13, x13, x16
   22784:	add	x14, x14, #0x2
   22788:	b.eq	2279c <mpfr_sqrt@@Base+0xe1c>  // b.none
   2278c:	cmp	x13, #0x1
   22790:	b.ne	22768 <mpfr_sqrt@@Base+0xde8>  // b.any
   22794:	cmp	x15, x14
   22798:	b.hi	22768 <mpfr_sqrt@@Base+0xde8>  // b.pmore
   2279c:	cmp	x13, #0x0
   227a0:	cset	w14, ne  // ne = any
   227a4:	cmp	x15, x12
   227a8:	cset	w16, hi  // hi = pmore
   227ac:	str	x12, [x10]
   227b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   227b4:	ldr	x1, [x0, #2768]
   227b8:	add	x0, x0, #0xad0
   227bc:	blr	x1
   227c0:	mrs	x13, tpidr_el0
   227c4:	ldr	x17, [x13, x0]
   227c8:	cmp	x11, x17
   227cc:	b.gt	228ac <mpfr_sqrt@@Base+0xf2c>
   227d0:	orr	w16, w14, w16
   227d4:	orr	x14, x15, x16
   227d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   227dc:	ldr	x1, [x0, #2736]
   227e0:	add	x0, x0, #0xab0
   227e4:	blr	x1
   227e8:	ldr	x15, [x13, x0]
   227ec:	cmp	x11, x15
   227f0:	b.lt	228c4 <mpfr_sqrt@@Base+0xf44>  // b.tstop
   227f4:	mov	w0, wzr
   227f8:	cmp	w9, #0x5
   227fc:	str	x11, [x8, #16]
   22800:	b.eq	2287c <mpfr_sqrt@@Base+0xefc>  // b.none
   22804:	cbz	x14, 2287c <mpfr_sqrt@@Base+0xefc>
   22808:	cmp	w9, #0x3
   2280c:	b.eq	22884 <mpfr_sqrt@@Base+0xf04>  // b.none
   22810:	cmp	w9, #0x1
   22814:	b.eq	22884 <mpfr_sqrt@@Base+0xf04>  // b.none
   22818:	cbnz	w9, 22820 <mpfr_sqrt@@Base+0xea0>
   2281c:	tbz	w16, #0, 22884 <mpfr_sqrt@@Base+0xf04>
   22820:	ldr	x12, [x10]
   22824:	adds	x12, x12, #0x1
   22828:	str	x12, [x10]
   2282c:	b.cc	2285c <mpfr_sqrt@@Base+0xedc>  // b.lo, b.ul, b.last
   22830:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   22834:	str	x12, [x10]
   22838:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2283c:	ldr	x1, [x0, #2768]
   22840:	add	x0, x0, #0xad0
   22844:	blr	x1
   22848:	ldr	x10, [x13, x0]
   2284c:	cmp	x11, x10
   22850:	b.ge	228ac <mpfr_sqrt@@Base+0xf2c>  // b.tcont
   22854:	add	x9, x11, #0x1
   22858:	str	x9, [x8, #16]
   2285c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22860:	ldr	x1, [x0, #2800]
   22864:	add	x0, x0, #0xaf0
   22868:	blr	x1
   2286c:	ldr	w8, [x13, x0]
   22870:	orr	w8, w8, #0x8
   22874:	str	w8, [x13, x0]
   22878:	mov	w0, #0x1                   	// #1
   2287c:	ldp	x29, x30, [sp], #16
   22880:	ret
   22884:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22888:	ldr	x1, [x0, #2800]
   2288c:	add	x0, x0, #0xaf0
   22890:	blr	x1
   22894:	ldr	w8, [x13, x0]
   22898:	orr	w8, w8, #0x8
   2289c:	str	w8, [x13, x0]
   228a0:	mov	w0, #0xffffffff            	// #-1
   228a4:	ldp	x29, x30, [sp], #16
   228a8:	ret
   228ac:	mov	w2, #0x1                   	// #1
   228b0:	mov	x0, x8
   228b4:	mov	w1, w9
   228b8:	bl	c3a0 <mpfr_overflow@plt>
   228bc:	ldp	x29, x30, [sp], #16
   228c0:	ret
   228c4:	cmp	w9, #0x4
   228c8:	b.eq	22900 <mpfr_sqrt@@Base+0xf80>  // b.none
   228cc:	cmp	w9, #0x2
   228d0:	b.eq	22900 <mpfr_sqrt@@Base+0xf80>  // b.none
   228d4:	cbnz	w9, 22918 <mpfr_sqrt@@Base+0xf98>
   228d8:	sub	x9, x15, #0x1
   228dc:	cmp	x11, x9
   228e0:	b.lt	228f8 <mpfr_sqrt@@Base+0xf78>  // b.tstop
   228e4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   228e8:	cmp	x12, x9
   228ec:	mov	w9, wzr
   228f0:	b.ne	22918 <mpfr_sqrt@@Base+0xf98>  // b.any
   228f4:	cbnz	x14, 22918 <mpfr_sqrt@@Base+0xf98>
   228f8:	mov	w9, #0x1                   	// #1
   228fc:	b	22918 <mpfr_sqrt@@Base+0xf98>
   22900:	sub	x15, x15, #0x1
   22904:	cmp	x11, x15
   22908:	b.ne	22918 <mpfr_sqrt@@Base+0xf98>  // b.any
   2290c:	cmn	x12, #0x1
   22910:	b.ne	22918 <mpfr_sqrt@@Base+0xf98>  // b.any
   22914:	cbnz	x14, 227f4 <mpfr_sqrt@@Base+0xe74>
   22918:	mov	w2, #0x1                   	// #1
   2291c:	mov	x0, x8
   22920:	mov	w1, w9
   22924:	bl	c880 <mpfr_underflow@plt>
   22928:	ldp	x29, x30, [sp], #16
   2292c:	ret
   22930:	ldr	x12, [x1, #8]
   22934:	adrp	x8, 5c000 <mpfr_l2b_62_1__tab@@Base+0x700>
   22938:	add	x8, x8, #0x128
   2293c:	adrp	x9, 5d000 <mpfr_l2b_62_1__tab@@Base+0x1700>
   22940:	lsr	x11, x12, #51
   22944:	and	x11, x11, #0x1ff8
   22948:	sub	x11, x11, #0x800
   2294c:	add	x9, x9, #0x928
   22950:	ldr	x8, [x8, x11]
   22954:	ldr	x9, [x9, x11]
   22958:	lsr	x11, x12, #27
   2295c:	add	x13, x11, #0x1
   22960:	lsl	x14, x8, #57
   22964:	msub	x9, x9, x13, x14
   22968:	lsr	x9, x9, #47
   2296c:	add	x8, x9, x8, lsl #11
   22970:	mvn	x9, x11
   22974:	mul	x9, x8, x9
   22978:	mul	x9, x9, x8
   2297c:	umulh	x9, x8, x9
   22980:	lsl	x8, x8, #10
   22984:	add	x8, x8, x9, lsr #6
   22988:	mul	x9, x8, x8
   2298c:	umulh	x9, x9, x12
   22990:	mov	x13, #0x2000000000000000    	// #2305843009213693952
   22994:	add	x9, x9, #0x2
   22998:	sub	x9, x13, x9, lsr #1
   2299c:	mul	x9, x8, x9
   229a0:	lsr	x9, x9, #29
   229a4:	add	x9, x9, x8, lsl #33
   229a8:	umulh	x8, x9, x12
   229ac:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   229b0:	add	x8, x8, x12
   229b4:	cmp	x8, x14
   229b8:	mov	x10, xzr
   229bc:	csel	x8, x8, x14, hi  // hi = pmore
   229c0:	umulh	x13, x8, x8
   229c4:	mul	x14, x8, x8
   229c8:	subs	x11, x10, x14
   229cc:	sbc	x10, x12, x13
   229d0:	cmp	x10, #0x10
   229d4:	b.cs	22a8c <mpfr_sqrt@@Base+0x110c>  // b.hs, b.nlast
   229d8:	cmp	x10, #0x8
   229dc:	b.cs	22ab4 <mpfr_sqrt@@Base+0x1134>  // b.hs, b.nlast
   229e0:	cmp	x10, #0x4
   229e4:	b.cc	22a08 <mpfr_sqrt@@Base+0x1088>  // b.lo, b.ul, b.last
   229e8:	lsr	x13, x8, #62
   229ec:	lsl	x14, x8, #2
   229f0:	subs	x15, x11, x14
   229f4:	sbc	x10, x10, x13
   229f8:	add	x8, x8, #0x2
   229fc:	mov	x12, xzr
   22a00:	subs	x11, x15, #0x4
   22a04:	sbc	x10, x10, x12
   22a08:	lsl	x12, x8, #1
   22a0c:	b	22a2c <mpfr_sqrt@@Base+0x10ac>
   22a10:	lsr	x13, x8, #63
   22a14:	add	x14, x12, #0x1
   22a18:	subs	x15, x11, x14
   22a1c:	sbc	x10, x10, x13
   22a20:	add	x8, x8, #0x1
   22a24:	add	x12, x12, #0x2
   22a28:	mov	x11, x15
   22a2c:	cmp	x10, #0x1
   22a30:	b.hi	22a10 <mpfr_sqrt@@Base+0x1090>  // b.pmore
   22a34:	b.ne	22a40 <mpfr_sqrt@@Base+0x10c0>  // b.any
   22a38:	cmp	x11, x12
   22a3c:	b.hi	22a10 <mpfr_sqrt@@Base+0x1090>  // b.pmore
   22a40:	ldr	x12, [x1]
   22a44:	adds	x11, x12, x11
   22a48:	cinc	x10, x10, cs  // cs = hs, nlast
   22a4c:	extr	x11, x10, x11, #1
   22a50:	umulh	x12, x9, x11
   22a54:	adds	x13, x11, x12
   22a58:	lsr	x10, x10, #1
   22a5c:	adds	x9, x13, x9
   22a60:	cset	w14, cs  // cs = hs, nlast
   22a64:	cmp	x10, #0x0
   22a68:	cset	w15, ne  // ne = any
   22a6c:	csel	x9, x13, x9, eq  // eq = none
   22a70:	cmn	x11, x12
   22a74:	and	w11, w14, w15
   22a78:	cinc	x11, x11, cs  // cs = hs, nlast
   22a7c:	add	x10, x11, x10
   22a80:	add	x8, x10, x8
   22a84:	stp	x9, x8, [x0]
   22a88:	ret
   22a8c:	lsr	x13, x8, #60
   22a90:	lsl	x14, x8, #4
   22a94:	subs	x15, x11, x14
   22a98:	sbc	x10, x10, x13
   22a9c:	add	x8, x8, #0x8
   22aa0:	mov	x12, xzr
   22aa4:	subs	x11, x15, #0x40
   22aa8:	sbc	x10, x10, x12
   22aac:	cmp	x10, #0x8
   22ab0:	b.cc	229e0 <mpfr_sqrt@@Base+0x1060>  // b.lo, b.ul, b.last
   22ab4:	lsr	x13, x8, #61
   22ab8:	lsl	x14, x8, #3
   22abc:	subs	x15, x11, x14
   22ac0:	sbc	x10, x10, x13
   22ac4:	add	x8, x8, #0x4
   22ac8:	mov	x12, xzr
   22acc:	subs	x11, x15, #0x10
   22ad0:	sbc	x10, x10, x12
   22ad4:	cmp	x10, #0x4
   22ad8:	b.cs	229e8 <mpfr_sqrt@@Base+0x1068>  // b.hs, b.nlast
   22adc:	b	22a08 <mpfr_sqrt@@Base+0x1088>

0000000000022ae0 <mpfr_sqrt_ui@@Base>:
   22ae0:	sub	sp, sp, #0x80
   22ae4:	stp	x20, x19, [sp, #112]
   22ae8:	mov	x19, x0
   22aec:	stp	x29, x30, [sp, #32]
   22af0:	str	x27, [sp, #48]
   22af4:	stp	x26, x25, [sp, #64]
   22af8:	stp	x24, x23, [sp, #80]
   22afc:	stp	x22, x21, [sp, #96]
   22b00:	add	x29, sp, #0x20
   22b04:	cbz	x1, 22be4 <mpfr_sqrt_ui@@Base+0x104>
   22b08:	add	x9, x29, #0x18
   22b0c:	clz	x11, x1
   22b10:	mov	w8, #0x40                  	// #64
   22b14:	mov	w10, #0x1                   	// #1
   22b18:	str	x9, [sp, #24]
   22b1c:	lsl	x9, x1, x11
   22b20:	mov	w20, w2
   22b24:	str	x8, [sp]
   22b28:	str	w10, [sp, #8]
   22b2c:	str	x9, [x29, #24]
   22b30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22b34:	ldr	x1, [x0, #2800]
   22b38:	add	x0, x0, #0xaf0
   22b3c:	blr	x1
   22b40:	mrs	x24, tpidr_el0
   22b44:	ldr	w25, [x24, x0]
   22b48:	mov	x21, x0
   22b4c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22b50:	ldr	x1, [x0, #2736]
   22b54:	add	x0, x0, #0xab0
   22b58:	blr	x1
   22b5c:	ldr	x26, [x24, x0]
   22b60:	mov	x22, x0
   22b64:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22b68:	ldr	x1, [x0, #2768]
   22b6c:	add	x0, x0, #0xad0
   22b70:	blr	x1
   22b74:	ldr	x27, [x24, x0]
   22b78:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   22b7c:	mov	x23, x0
   22b80:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   22b84:	str	x10, [x24, x0]
   22b88:	sub	x8, x8, x11
   22b8c:	mov	x1, sp
   22b90:	mov	x0, x19
   22b94:	str	x9, [x24, x22]
   22b98:	str	x8, [sp, #16]
   22b9c:	bl	ce20 <mpfr_sqrt@plt>
   22ba0:	str	w25, [x24, x21]
   22ba4:	str	x26, [x24, x22]
   22ba8:	str	x27, [x24, x23]
   22bac:	ldr	x9, [x19, #16]
   22bb0:	mov	w8, w0
   22bb4:	cmp	x9, x27
   22bb8:	b.gt	22c1c <mpfr_sqrt_ui@@Base+0x13c>
   22bbc:	cmp	x9, x26
   22bc0:	b.lt	22c1c <mpfr_sqrt_ui@@Base+0x13c>  // b.tstop
   22bc4:	cbz	w8, 22bf8 <mpfr_sqrt_ui@@Base+0x118>
   22bc8:	orr	w9, w25, #0x8
   22bcc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22bd0:	ldr	x1, [x0, #2800]
   22bd4:	add	x0, x0, #0xaf0
   22bd8:	blr	x1
   22bdc:	str	w9, [x24, x0]
   22be0:	b	22bf8 <mpfr_sqrt_ui@@Base+0x118>
   22be4:	mov	w8, wzr
   22be8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   22bec:	mov	w10, #0x1                   	// #1
   22bf0:	str	x9, [x19, #16]
   22bf4:	str	w10, [x19, #8]
   22bf8:	ldp	x20, x19, [sp, #112]
   22bfc:	ldp	x22, x21, [sp, #96]
   22c00:	ldp	x24, x23, [sp, #80]
   22c04:	ldp	x26, x25, [sp, #64]
   22c08:	ldr	x27, [sp, #48]
   22c0c:	ldp	x29, x30, [sp, #32]
   22c10:	mov	w0, w8
   22c14:	add	sp, sp, #0x80
   22c18:	ret
   22c1c:	mov	x0, x19
   22c20:	mov	w1, w8
   22c24:	mov	w2, w20
   22c28:	bl	d020 <mpfr_check_range@plt>
   22c2c:	mov	w8, w0
   22c30:	b	22bf8 <mpfr_sqrt_ui@@Base+0x118>

0000000000022c34 <mpfr_sub@@Base>:
   22c34:	sub	sp, sp, #0x30
   22c38:	stp	x29, x30, [sp, #16]
   22c3c:	ldr	x9, [x1, #16]
   22c40:	mov	x10, #0x2                   	// #2
   22c44:	movk	x10, #0x8000, lsl #48
   22c48:	add	x12, x10, #0x3
   22c4c:	str	x19, [sp, #32]
   22c50:	mov	x8, x1
   22c54:	cmp	x9, x12
   22c58:	mov	x19, x0
   22c5c:	add	x29, sp, #0x10
   22c60:	b.lt	22cb8 <mpfr_sub@@Base+0x84>  // b.tstop
   22c64:	ldr	x11, [x2, #16]
   22c68:	cmp	x11, x12
   22c6c:	b.lt	22cb8 <mpfr_sub@@Base+0x84>  // b.tstop
   22c70:	ldr	w10, [x8, #8]
   22c74:	ldr	w12, [x2, #8]
   22c78:	cmp	w10, w12
   22c7c:	b.ne	22d0c <mpfr_sub@@Base+0xd8>  // b.any
   22c80:	ldr	x10, [x19]
   22c84:	ldr	x9, [x8]
   22c88:	cmp	x10, x9
   22c8c:	b.ne	22cfc <mpfr_sub@@Base+0xc8>  // b.any
   22c90:	ldr	x10, [x2]
   22c94:	cmp	x9, x10
   22c98:	b.ne	22cfc <mpfr_sub@@Base+0xc8>  // b.any
   22c9c:	mov	x0, x19
   22ca0:	mov	x1, x8
   22ca4:	bl	c580 <mpfr_sub1sp@plt>
   22ca8:	ldr	x19, [sp, #32]
   22cac:	ldp	x29, x30, [sp, #16]
   22cb0:	add	sp, sp, #0x30
   22cb4:	ret
   22cb8:	cmp	x9, x10
   22cbc:	b.eq	22ccc <mpfr_sub@@Base+0x98>  // b.none
   22cc0:	ldr	x11, [x2, #16]
   22cc4:	cmp	x11, x10
   22cc8:	b.ne	22d6c <mpfr_sub@@Base+0x138>  // b.any
   22ccc:	str	x10, [x19, #16]
   22cd0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   22cd4:	ldr	x1, [x0, #2800]
   22cd8:	add	x0, x0, #0xaf0
   22cdc:	blr	x1
   22ce0:	mov	x8, x0
   22ce4:	mrs	x9, tpidr_el0
   22ce8:	ldr	w10, [x9, x8]
   22cec:	mov	w0, wzr
   22cf0:	orr	w10, w10, #0x4
   22cf4:	str	w10, [x9, x8]
   22cf8:	b	22ca8 <mpfr_sub@@Base+0x74>
   22cfc:	mov	x0, x19
   22d00:	mov	x1, x8
   22d04:	bl	cf50 <mpfr_sub1@plt>
   22d08:	b	22ca8 <mpfr_sub@@Base+0x74>
   22d0c:	cmp	x9, x11
   22d10:	b.ge	22da8 <mpfr_sub@@Base+0x174>  // b.tcont
   22d14:	ldr	x11, [x19]
   22d18:	ldr	x9, [x8]
   22d1c:	cmp	w3, #0x3
   22d20:	mov	w10, #0x2                   	// #2
   22d24:	csel	w10, w10, w3, eq  // eq = none
   22d28:	cmp	w3, #0x2
   22d2c:	mov	w12, #0x3                   	// #3
   22d30:	csel	w3, w12, w10, eq  // eq = none
   22d34:	cmp	x11, x9
   22d38:	b.ne	22f04 <mpfr_sub@@Base+0x2d0>  // b.any
   22d3c:	ldr	x10, [x2]
   22d40:	cmp	x9, x10
   22d44:	b.ne	22f04 <mpfr_sub@@Base+0x2d0>  // b.any
   22d48:	mov	x0, x19
   22d4c:	mov	x1, x2
   22d50:	mov	x2, x8
   22d54:	bl	d0a0 <mpfr_add1sp@plt>
   22d58:	ldr	w8, [x19, #8]
   22d5c:	neg	w0, w0
   22d60:	neg	w8, w8
   22d64:	str	w8, [x19, #8]
   22d68:	b	22ca8 <mpfr_sub@@Base+0x74>
   22d6c:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   22d70:	cmp	x9, x12
   22d74:	b.ne	22dd4 <mpfr_sub@@Base+0x1a0>  // b.any
   22d78:	cmp	x11, x12
   22d7c:	b.ne	22d90 <mpfr_sub@@Base+0x15c>  // b.any
   22d80:	ldr	w9, [x8, #8]
   22d84:	ldr	w11, [x2, #8]
   22d88:	cmp	w9, w11
   22d8c:	b.eq	22ccc <mpfr_sub@@Base+0x98>  // b.none
   22d90:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   22d94:	str	x9, [x19, #16]
   22d98:	ldr	w8, [x8, #8]
   22d9c:	mov	w0, wzr
   22da0:	str	w8, [x19, #8]
   22da4:	b	22ca8 <mpfr_sub@@Base+0x74>
   22da8:	ldr	x10, [x19]
   22dac:	ldr	x9, [x8]
   22db0:	cmp	x10, x9
   22db4:	b.ne	22f14 <mpfr_sub@@Base+0x2e0>  // b.any
   22db8:	ldr	x10, [x2]
   22dbc:	cmp	x9, x10
   22dc0:	b.ne	22f14 <mpfr_sub@@Base+0x2e0>  // b.any
   22dc4:	mov	x0, x19
   22dc8:	mov	x1, x8
   22dcc:	bl	d0a0 <mpfr_add1sp@plt>
   22dd0:	b	22ca8 <mpfr_sub@@Base+0x74>
   22dd4:	cmp	x11, x12
   22dd8:	b.ne	22df0 <mpfr_sub@@Base+0x1bc>  // b.any
   22ddc:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   22de0:	str	x8, [x19, #16]
   22de4:	ldr	w8, [x2, #8]
   22de8:	mov	w0, wzr
   22dec:	b	22d60 <mpfr_sub@@Base+0x12c>
   22df0:	str	x8, [x29, #24]
   22df4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   22df8:	cmp	x9, x8
   22dfc:	stur	w3, [x29, #-4]
   22e00:	str	x2, [sp]
   22e04:	b.ne	22e44 <mpfr_sub@@Base+0x210>  // b.any
   22e08:	cmp	x11, x8
   22e0c:	b.ne	22e68 <mpfr_sub@@Base+0x234>  // b.any
   22e10:	ldr	x8, [x29, #24]
   22e14:	ldr	w9, [x8, #8]
   22e18:	ldur	w8, [x29, #-4]
   22e1c:	cmp	w8, #0x3
   22e20:	b.ne	22ea4 <mpfr_sub@@Base+0x270>  // b.any
   22e24:	cmp	w9, #0x1
   22e28:	mov	w8, #0xffffffff            	// #-1
   22e2c:	b.lt	22ebc <mpfr_sub@@Base+0x288>  // b.tstop
   22e30:	ldr	x9, [sp]
   22e34:	ldr	w9, [x9, #8]
   22e38:	cmp	w9, #0x0
   22e3c:	cneg	w8, w8, lt  // lt = tstop
   22e40:	b	22ebc <mpfr_sub@@Base+0x288>
   22e44:	ldr	x12, [x29, #24]
   22e48:	cmp	x11, x8
   22e4c:	ldr	w3, [x12, #8]
   22e50:	b.ne	22e7c <mpfr_sub@@Base+0x248>  // b.any
   22e54:	ldr	x1, [x29, #24]
   22e58:	ldur	w2, [x29, #-4]
   22e5c:	mov	x0, x19
   22e60:	bl	cb70 <mpfr_set4@plt>
   22e64:	b	22ca8 <mpfr_sub@@Base+0x74>
   22e68:	ldr	x1, [sp]
   22e6c:	ldur	w2, [x29, #-4]
   22e70:	mov	x0, x19
   22e74:	bl	c1d0 <mpfr_neg@plt>
   22e78:	b	22ca8 <mpfr_sub@@Base+0x74>
   22e7c:	ldr	x8, [sp]
   22e80:	ldr	w8, [x8, #8]
   22e84:	cmp	w3, w8
   22e88:	b.ne	22ed0 <mpfr_sub@@Base+0x29c>  // b.any
   22e8c:	ldr	x1, [x29, #24]
   22e90:	ldr	x2, [sp]
   22e94:	ldur	w3, [x29, #-4]
   22e98:	mov	x0, x19
   22e9c:	bl	cf50 <mpfr_sub1@plt>
   22ea0:	b	22ca8 <mpfr_sub@@Base+0x74>
   22ea4:	mov	w8, #0x1                   	// #1
   22ea8:	tbz	w9, #31, 22ebc <mpfr_sub@@Base+0x288>
   22eac:	ldr	x9, [sp]
   22eb0:	ldr	w9, [x9, #8]
   22eb4:	cmp	w9, #0x1
   22eb8:	cneg	w8, w8, ge  // ge = tcont
   22ebc:	str	w8, [x19, #8]
   22ec0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   22ec4:	mov	w0, wzr
   22ec8:	str	x8, [x19, #16]
   22ecc:	b	22ca8 <mpfr_sub@@Base+0x74>
   22ed0:	add	x8, x10, #0x2
   22ed4:	cmp	x9, x8
   22ed8:	b.eq	22f20 <mpfr_sub@@Base+0x2ec>  // b.none
   22edc:	cmp	x11, x8
   22ee0:	b.eq	22f20 <mpfr_sub@@Base+0x2ec>  // b.none
   22ee4:	cmp	x9, x11
   22ee8:	b.lt	22f30 <mpfr_sub@@Base+0x2fc>  // b.tstop
   22eec:	ldr	x1, [x29, #24]
   22ef0:	ldr	x2, [sp]
   22ef4:	ldur	w3, [x29, #-4]
   22ef8:	mov	x0, x19
   22efc:	bl	cc60 <mpfr_add1@plt>
   22f00:	b	22ca8 <mpfr_sub@@Base+0x74>
   22f04:	mov	x0, x19
   22f08:	mov	x1, x2
   22f0c:	mov	x2, x8
   22f10:	b	22f58 <mpfr_sub@@Base+0x324>
   22f14:	mov	x0, x19
   22f18:	mov	x1, x8
   22f1c:	b	22efc <mpfr_sub@@Base+0x2c8>
   22f20:	ldr	x0, [x29, #24]
   22f24:	ldr	x1, [sp]
   22f28:	bl	cfa0 <mpfr_ubf_exp_less_p@plt>
   22f2c:	cbz	w0, 22eec <mpfr_sub@@Base+0x2b8>
   22f30:	ldur	w8, [x29, #-4]
   22f34:	ldr	x1, [sp]
   22f38:	ldr	x2, [x29, #24]
   22f3c:	mov	w9, #0x2                   	// #2
   22f40:	cmp	w8, #0x3
   22f44:	csel	w9, w9, w8, eq  // eq = none
   22f48:	cmp	w8, #0x2
   22f4c:	mov	w8, #0x3                   	// #3
   22f50:	csel	w3, w8, w9, eq  // eq = none
   22f54:	mov	x0, x19
   22f58:	bl	cc60 <mpfr_add1@plt>
   22f5c:	b	22d58 <mpfr_sub@@Base+0x124>

0000000000022f60 <mpfr_sub1@@Base>:
   22f60:	stp	x29, x30, [sp, #-96]!
   22f64:	stp	x28, x27, [sp, #16]
   22f68:	stp	x26, x25, [sp, #32]
   22f6c:	stp	x24, x23, [sp, #48]
   22f70:	stp	x22, x21, [sp, #64]
   22f74:	stp	x20, x19, [sp, #80]
   22f78:	mov	x29, sp
   22f7c:	sub	sp, sp, #0x40
   22f80:	stur	xzr, [x29, #-16]
   22f84:	ldr	x8, [x0]
   22f88:	ldr	x20, [x0, #24]
   22f8c:	mov	x19, x2
   22f90:	mov	x21, x1
   22f94:	sub	x9, x8, #0x1
   22f98:	mov	x23, x0
   22f9c:	add	x8, x8, #0x3e
   22fa0:	cmp	x9, #0x0
   22fa4:	sub	x2, x29, #0x8
   22fa8:	mov	x0, x1
   22fac:	mov	x1, x19
   22fb0:	mov	w25, w3
   22fb4:	csel	x22, x8, x9, lt  // lt = tstop
   22fb8:	bl	c210 <mpfr_cmp2@plt>
   22fbc:	cbz	w0, 23660 <mpfr_sub1@@Base+0x700>
   22fc0:	ldr	w8, [x21, #8]
   22fc4:	cmp	w0, #0x0
   22fc8:	stur	w25, [x29, #-28]
   22fcc:	csel	x25, x19, x21, lt  // lt = tstop
   22fd0:	cneg	w8, w8, lt  // lt = tstop
   22fd4:	str	w8, [x23, #8]
   22fd8:	ldr	x24, [x25, #16]
   22fdc:	mov	x8, #0x4                   	// #4
   22fe0:	asr	x26, x22, #6
   22fe4:	movk	x8, #0x8000, lsl #48
   22fe8:	csel	x19, x21, x19, lt  // lt = tstop
   22fec:	cmp	x24, x8
   22ff0:	add	x9, x26, #0x1
   22ff4:	stur	x9, [x29, #-24]
   22ff8:	b.eq	236b0 <mpfr_sub1@@Base+0x750>  // b.none
   22ffc:	ldr	x9, [x19, #16]
   23000:	cmp	x9, x8
   23004:	b.eq	236a8 <mpfr_sub1@@Base+0x748>  // b.none
   23008:	ldr	x8, [x19, #16]
   2300c:	sub	x28, x24, x8
   23010:	ldr	x27, [x23]
   23014:	ldr	x8, [x25]
   23018:	cmp	x27, x8
   2301c:	csel	x9, x27, x8, gt
   23020:	add	x9, x9, #0x2
   23024:	cmp	x9, x28
   23028:	b.le	23680 <mpfr_sub1@@Base+0x720>
   2302c:	ldur	x10, [x29, #-8]
   23030:	sub	x9, x8, #0x1
   23034:	add	x8, x8, #0x3e
   23038:	cmp	x9, #0x0
   2303c:	csel	x8, x8, x9, lt  // lt = tstop
   23040:	neg	w9, w10
   23044:	stp	x26, x24, [x29, #-64]
   23048:	and	w26, w9, #0x3f
   2304c:	add	x9, x10, x26
   23050:	asr	x8, x8, #6
   23054:	add	x10, x9, #0x3f
   23058:	cmp	x9, #0x0
   2305c:	stp	x23, x27, [x29, #-48]
   23060:	add	x27, x8, #0x1
   23064:	csel	x21, x10, x9, lt  // lt = tstop
   23068:	cbz	w26, 236d0 <mpfr_sub1@@Base+0x770>
   2306c:	add	x23, x8, #0x2
   23070:	lsl	x1, x23, #3
   23074:	cmp	x1, #0x4, lsl #12
   23078:	b.hi	237c8 <mpfr_sub1@@Base+0x868>  // b.pmore
   2307c:	add	x9, x1, #0xf
   23080:	mov	x8, sp
   23084:	and	x9, x9, #0xfffffffffffffff0
   23088:	sub	x24, x8, x9
   2308c:	mov	sp, x24
   23090:	ldr	x1, [x25, #24]
   23094:	add	x0, x24, #0x8
   23098:	mov	x2, x27
   2309c:	mov	w3, w26
   230a0:	bl	c140 <__gmpn_rshift@plt>
   230a4:	mov	x27, x23
   230a8:	str	x0, [x24]
   230ac:	ldr	x8, [x19]
   230b0:	ldur	w9, [x29, #-8]
   230b4:	sub	x10, x8, #0x1
   230b8:	add	x8, x8, #0x3e
   230bc:	cmp	x10, #0x0
   230c0:	csel	x8, x8, x10, lt  // lt = tstop
   230c4:	sub	w9, w28, w9
   230c8:	asr	x8, x8, #6
   230cc:	ands	w23, w9, #0x3f
   230d0:	add	x22, x8, #0x1
   230d4:	b.eq	23718 <mpfr_sub1@@Base+0x7b8>  // b.none
   230d8:	add	x25, x8, #0x2
   230dc:	lsl	x1, x25, #3
   230e0:	cmp	x1, #0x4, lsl #12
   230e4:	b.hi	237d8 <mpfr_sub1@@Base+0x878>  // b.pmore
   230e8:	add	x9, x1, #0xf
   230ec:	mov	x8, sp
   230f0:	and	x9, x9, #0xfffffffffffffff0
   230f4:	sub	x26, x8, x9
   230f8:	mov	sp, x26
   230fc:	ldr	x1, [x19, #24]
   23100:	add	x0, x26, #0x8
   23104:	mov	x2, x22
   23108:	mov	w3, w23
   2310c:	bl	c140 <__gmpn_rshift@plt>
   23110:	mov	x22, x25
   23114:	str	x0, [x26]
   23118:	ldur	x10, [x29, #-8]
   2311c:	asr	x8, x21, #6
   23120:	subs	x9, x28, x10
   23124:	b.le	2313c <mpfr_sub1@@Base+0x1dc>
   23128:	add	x10, x9, #0x3f
   2312c:	cmp	x9, #0x0
   23130:	csel	x9, x10, x9, lt  // lt = tstop
   23134:	neg	x23, x9, asr #6
   23138:	b	23154 <mpfr_sub1@@Base+0x1f4>
   2313c:	sub	x9, x10, x28
   23140:	add	x10, x9, #0x3f
   23144:	add	x9, x9, #0x7e
   23148:	cmp	x10, #0x0
   2314c:	csel	x9, x9, x10, lt  // lt = tstop
   23150:	asr	x23, x9, #6
   23154:	ldur	x28, [x29, #-24]
   23158:	add	x21, x8, x28
   2315c:	subs	x9, x21, x27
   23160:	b.gt	23760 <mpfr_sub1@@Base+0x800>
   23164:	add	x8, x24, x27, lsl #3
   23168:	sub	x1, x8, x21, lsl #3
   2316c:	cmp	x20, x1
   23170:	b.eq	23180 <mpfr_sub1@@Base+0x220>  // b.none
   23174:	lsl	x2, x28, #3
   23178:	mov	x0, x20
   2317c:	bl	be50 <memcpy@plt>
   23180:	ldur	w25, [x29, #-28]
   23184:	add	x19, x23, x28
   23188:	cmp	x19, #0x1
   2318c:	b.lt	2322c <mpfr_sub1@@Base+0x2cc>  // b.tstop
   23190:	cmp	x22, x19
   23194:	tbnz	x23, #63, 231c0 <mpfr_sub1@@Base+0x260>
   23198:	b.ge	231e0 <mpfr_sub1@@Base+0x280>  // b.tcont
   2319c:	subs	x8, x23, x22
   231a0:	b.ge	2322c <mpfr_sub1@@Base+0x2cc>  // b.tcont
   231a4:	add	x9, x20, x28, lsl #3
   231a8:	add	x0, x9, x8, lsl #3
   231ac:	sub	x3, x22, x23
   231b0:	mov	x1, x0
   231b4:	mov	x2, x26
   231b8:	bl	c2c0 <__gmpn_sub_n@plt>
   231bc:	b	2322c <mpfr_sub1@@Base+0x2cc>
   231c0:	b.ge	231fc <mpfr_sub1@@Base+0x29c>  // b.tcont
   231c4:	add	x8, x20, x28, lsl #3
   231c8:	add	x8, x8, x23, lsl #3
   231cc:	sub	x0, x8, x22, lsl #3
   231d0:	mov	x1, x0
   231d4:	mov	x2, x26
   231d8:	mov	x3, x22
   231dc:	b	23210 <mpfr_sub1@@Base+0x2b0>
   231e0:	add	x8, x26, x22, lsl #3
   231e4:	sub	x2, x8, x19, lsl #3
   231e8:	mov	x0, x20
   231ec:	mov	x1, x20
   231f0:	mov	x3, x28
   231f4:	bl	c2c0 <__gmpn_sub_n@plt>
   231f8:	b	2322c <mpfr_sub1@@Base+0x2cc>
   231fc:	add	x8, x26, x22, lsl #3
   23200:	sub	x2, x8, x19, lsl #3
   23204:	mov	x0, x20
   23208:	mov	x1, x20
   2320c:	mov	x3, x19
   23210:	bl	c2c0 <__gmpn_sub_n@plt>
   23214:	add	x8, x20, x28, lsl #3
   23218:	mov	x3, x0
   2321c:	add	x0, x8, x23, lsl #3
   23220:	neg	x2, x23
   23224:	mov	x1, x0
   23228:	bl	c8f0 <__gmpn_sub_1@plt>
   2322c:	ldur	x9, [x29, #-40]
   23230:	lsl	x8, x28, #6
   23234:	ldr	x11, [x20]
   23238:	mov	w10, #0x1                   	// #1
   2323c:	sub	x9, x8, x9
   23240:	lsl	x3, x10, x9
   23244:	sub	x8, x3, #0x1
   23248:	and	x10, x11, x8
   2324c:	sub	x8, x11, x10
   23250:	cmp	w25, #0x5
   23254:	str	x8, [x20]
   23258:	b.eq	23288 <mpfr_sub1@@Base+0x328>  // b.none
   2325c:	ldur	x23, [x29, #-48]
   23260:	cbnz	w25, 23298 <mpfr_sub1@@Base+0x338>
   23264:	cbz	w9, 238c4 <mpfr_sub1@@Base+0x964>
   23268:	sub	w11, w9, #0x1
   2326c:	mov	w12, #0x1                   	// #1
   23270:	lsl	x11, x12, x11
   23274:	cmp	x10, x11
   23278:	b.ls	232c8 <mpfr_sub1@@Base+0x368>  // b.plast
   2327c:	ldur	x27, [x29, #-56]
   23280:	mov	w28, wzr
   23284:	b	23498 <mpfr_sub1@@Base+0x538>
   23288:	ldp	x27, x23, [x29, #-56]
   2328c:	mov	w19, wzr
   23290:	mov	w21, wzr
   23294:	b	234b8 <mpfr_sub1@@Base+0x558>
   23298:	ldr	w11, [x23, #8]
   2329c:	add	w11, w25, w11, lsr #31
   232a0:	cmp	w11, #0x3
   232a4:	csinc	w28, w25, wzr, ne  // ne = any
   232a8:	cbz	x10, 232f8 <mpfr_sub1@@Base+0x398>
   232ac:	ldur	x27, [x29, #-56]
   232b0:	cmp	w28, #0x1
   232b4:	b.ne	23498 <mpfr_sub1@@Base+0x538>  // b.any
   232b8:	mov	w21, wzr
   232bc:	mov	w25, #0x1                   	// #1
   232c0:	mov	w19, #0xffffffff            	// #-1
   232c4:	b	234b8 <mpfr_sub1@@Base+0x558>
   232c8:	cbz	x10, 232e8 <mpfr_sub1@@Base+0x388>
   232cc:	cmp	x10, x11
   232d0:	b.cs	232e8 <mpfr_sub1@@Base+0x388>  // b.hs, b.nlast
   232d4:	ldur	x27, [x29, #-56]
   232d8:	mov	w21, wzr
   232dc:	mov	w25, wzr
   232e0:	mov	w19, #0xffffffff            	// #-1
   232e4:	b	234b8 <mpfr_sub1@@Base+0x558>
   232e8:	cmp	x10, #0x0
   232ec:	cset	w10, ne  // ne = any
   232f0:	mov	w28, wzr
   232f4:	lsl	w10, w10, #1
   232f8:	sub	x11, x27, x21
   232fc:	sub	x12, x22, x19
   23300:	cmp	x11, #0x0
   23304:	cset	w14, gt
   23308:	cmp	x12, #0x0
   2330c:	cset	w15, gt
   23310:	b.gt	2333c <mpfr_sub1@@Base+0x3dc>
   23314:	cmp	x11, #0x1
   23318:	b.ge	2333c <mpfr_sub1@@Base+0x3dc>  // b.tcont
   2331c:	ldur	x27, [x29, #-56]
   23320:	mov	w19, wzr
   23324:	cbnz	w28, 23454 <mpfr_sub1@@Base+0x4f4>
   23328:	cbz	w10, 23454 <mpfr_sub1@@Base+0x4f4>
   2332c:	tst	x8, x3
   23330:	b.eq	2345c <mpfr_sub1@@Base+0x4fc>  // b.none
   23334:	tbz	w10, #31, 23280 <mpfr_sub1@@Base+0x320>
   23338:	b	235a4 <mpfr_sub1@@Base+0x644>
   2333c:	ldur	x27, [x29, #-56]
   23340:	mov	w16, wzr
   23344:	orr	w13, w28, w9
   23348:	mov	w19, #0x1                   	// #1
   2334c:	tbz	w14, #0, 23360 <mpfr_sub1@@Base+0x400>
   23350:	sub	x11, x11, #0x1
   23354:	ldr	x14, [x24, x11, lsl #3]
   23358:	tbnz	w15, #0, 23368 <mpfr_sub1@@Base+0x408>
   2335c:	b	23374 <mpfr_sub1@@Base+0x414>
   23360:	mov	x14, xzr
   23364:	tbz	w15, #0, 23374 <mpfr_sub1@@Base+0x414>
   23368:	cmp	x12, x22
   2336c:	sub	x12, x12, #0x1
   23370:	b.le	233a4 <mpfr_sub1@@Base+0x444>
   23374:	mov	x15, xzr
   23378:	cbz	w10, 233ac <mpfr_sub1@@Base+0x44c>
   2337c:	orr	w16, w13, w16
   23380:	cbz	w16, 233c4 <mpfr_sub1@@Base+0x464>
   23384:	tbnz	w10, #31, 233e8 <mpfr_sub1@@Base+0x488>
   23388:	cbz	w10, 23414 <mpfr_sub1@@Base+0x4b4>
   2338c:	cbnz	w28, 23474 <mpfr_sub1@@Base+0x514>
   23390:	cmp	x14, x15
   23394:	b.hi	23488 <mpfr_sub1@@Base+0x528>  // b.pmore
   23398:	cmp	x14, x15
   2339c:	b.cs	23414 <mpfr_sub1@@Base+0x4b4>  // b.hs, b.nlast
   233a0:	b	232d8 <mpfr_sub1@@Base+0x378>
   233a4:	ldr	x15, [x26, x12, lsl #3]
   233a8:	cbnz	w10, 2337c <mpfr_sub1@@Base+0x41c>
   233ac:	cmp	x14, x15
   233b0:	orr	w10, w16, #0xfffffffe
   233b4:	cset	w17, hi  // hi = pmore
   233b8:	csel	w10, w10, w17, cc  // cc = lo, ul, last
   233bc:	orr	w16, w13, w16
   233c0:	cbnz	w16, 23384 <mpfr_sub1@@Base+0x424>
   233c4:	tbnz	w10, #31, 23438 <mpfr_sub1@@Base+0x4d8>
   233c8:	eor	x16, x14, #0x8000000000000000
   233cc:	cmp	x15, #0x0
   233d0:	csel	x14, x14, x16, ge  // ge = tcont
   233d4:	cmp	w10, #0x0
   233d8:	cset	w10, ne  // ne = any
   233dc:	orr	x15, x15, #0x8000000000000000
   233e0:	lsl	w10, w10, #1
   233e4:	tbz	w10, #31, 23388 <mpfr_sub1@@Base+0x428>
   233e8:	cbnz	w28, 2359c <mpfr_sub1@@Base+0x63c>
   233ec:	mov	w21, wzr
   233f0:	cmp	w9, #0x0
   233f4:	b.gt	23658 <mpfr_sub1@@Base+0x6f8>
   233f8:	cmp	x14, x15
   233fc:	b.hi	23658 <mpfr_sub1@@Base+0x6f8>  // b.pmore
   23400:	cmn	w10, #0x1
   23404:	mov	w25, w21
   23408:	b.eq	234b8 <mpfr_sub1@@Base+0x558>  // b.none
   2340c:	cmp	x14, x15
   23410:	b.cc	235a4 <mpfr_sub1@@Base+0x644>  // b.lo, b.ul, b.last
   23414:	cmp	x11, #0x0
   23418:	cset	w14, gt
   2341c:	cmp	x12, #0x0
   23420:	cset	w15, gt
   23424:	mov	w16, #0x1                   	// #1
   23428:	b.gt	2334c <mpfr_sub1@@Base+0x3ec>
   2342c:	cmp	x11, #0x0
   23430:	b.gt	2334c <mpfr_sub1@@Base+0x3ec>
   23434:	b	23320 <mpfr_sub1@@Base+0x3c0>
   23438:	tbnz	x15, #63, 23448 <mpfr_sub1@@Base+0x4e8>
   2343c:	eor	x14, x14, #0x8000000000000000
   23440:	tbz	w10, #31, 23388 <mpfr_sub1@@Base+0x428>
   23444:	b	233e8 <mpfr_sub1@@Base+0x488>
   23448:	eor	x15, x15, #0x8000000000000000
   2344c:	tbz	w10, #31, 23388 <mpfr_sub1@@Base+0x428>
   23450:	b	233e8 <mpfr_sub1@@Base+0x488>
   23454:	mov	w21, w19
   23458:	b	234b4 <mpfr_sub1@@Base+0x554>
   2345c:	cmp	w10, #0x1
   23460:	mov	w8, #0x1                   	// #1
   23464:	mov	w21, wzr
   23468:	mov	w25, wzr
   2346c:	cneg	w19, w8, ge  // ge = tcont
   23470:	b	234b8 <mpfr_sub1@@Base+0x558>
   23474:	cmp	w28, #0x1
   23478:	b.ne	23498 <mpfr_sub1@@Base+0x538>  // b.any
   2347c:	mov	w21, wzr
   23480:	mov	w19, #0xffffffff            	// #-1
   23484:	b	234b4 <mpfr_sub1@@Base+0x554>
   23488:	cmp	w10, #0x2
   2348c:	mov	w21, wzr
   23490:	b.ne	23654 <mpfr_sub1@@Base+0x6f4>  // b.any
   23494:	mov	w28, w21
   23498:	ldur	x2, [x29, #-24]
   2349c:	mov	x0, x20
   234a0:	mov	x1, x20
   234a4:	bl	bf60 <__gmpn_add_1@plt>
   234a8:	cbnz	x0, 238d0 <mpfr_sub1@@Base+0x970>
   234ac:	mov	w21, wzr
   234b0:	mov	w19, #0x1                   	// #1
   234b4:	mov	w25, w28
   234b8:	ldur	x9, [x29, #-64]
   234bc:	ldr	x8, [x20, x9, lsl #3]
   234c0:	tbz	x8, #63, 237e8 <mpfr_sub1@@Base+0x888>
   234c4:	mov	w28, w25
   234c8:	ldur	x0, [x29, #-16]
   234cc:	cbnz	x0, 235c4 <mpfr_sub1@@Base+0x664>
   234d0:	ldur	x8, [x29, #-8]
   234d4:	cbz	x8, 235d0 <mpfr_sub1@@Base+0x670>
   234d8:	sub	x8, x8, x21
   234dc:	stur	x8, [x29, #-8]
   234e0:	sub	x20, x27, x8
   234e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   234e8:	ldr	x1, [x0, #2768]
   234ec:	add	x0, x0, #0xad0
   234f0:	blr	x1
   234f4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   234f8:	cmp	x27, x8
   234fc:	mrs	x21, tpidr_el0
   23500:	b.ne	23510 <mpfr_sub1@@Base+0x5b0>  // b.any
   23504:	ldr	x8, [x21, x0]
   23508:	cmp	x20, x8
   2350c:	b.le	237ac <mpfr_sub1@@Base+0x84c>
   23510:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   23514:	ldr	x1, [x0, #2736]
   23518:	add	x0, x0, #0xab0
   2351c:	blr	x1
   23520:	ldr	x8, [x21, x0]
   23524:	cmp	x20, x8
   23528:	b.lt	23614 <mpfr_sub1@@Base+0x6b4>  // b.tstop
   2352c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   23530:	ldr	x1, [x0, #2768]
   23534:	add	x0, x0, #0xad0
   23538:	blr	x1
   2353c:	ldr	x8, [x21, x0]
   23540:	cmp	x20, x8
   23544:	b.gt	23794 <mpfr_sub1@@Base+0x834>
   23548:	ldr	w8, [x23, #8]
   2354c:	str	x20, [x23, #16]
   23550:	mul	w24, w8, w19
   23554:	cbz	w24, 23578 <mpfr_sub1@@Base+0x618>
   23558:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2355c:	ldr	x1, [x0, #2800]
   23560:	add	x0, x0, #0xaf0
   23564:	blr	x1
   23568:	mrs	x8, tpidr_el0
   2356c:	ldr	w9, [x8, x0]
   23570:	orr	w9, w9, #0x8
   23574:	str	w9, [x8, x0]
   23578:	mov	w0, w24
   2357c:	mov	sp, x29
   23580:	ldp	x20, x19, [sp, #80]
   23584:	ldp	x22, x21, [sp, #64]
   23588:	ldp	x24, x23, [sp, #48]
   2358c:	ldp	x26, x25, [sp, #32]
   23590:	ldp	x28, x27, [sp, #16]
   23594:	ldp	x29, x30, [sp], #96
   23598:	ret
   2359c:	cmp	w28, #0x1
   235a0:	b.ne	234ac <mpfr_sub1@@Base+0x54c>  // b.any
   235a4:	ldur	x2, [x29, #-24]
   235a8:	mov	x0, x20
   235ac:	mov	x1, x20
   235b0:	bl	c8f0 <__gmpn_sub_1@plt>
   235b4:	mov	w21, wzr
   235b8:	mov	w19, #0xffffffff            	// #-1
   235bc:	ldur	x0, [x29, #-16]
   235c0:	cbz	x0, 234d0 <mpfr_sub1@@Base+0x570>
   235c4:	bl	c8d0 <mpfr_tmp_free@plt>
   235c8:	ldur	x8, [x29, #-8]
   235cc:	cbnz	x8, 234d8 <mpfr_sub1@@Base+0x578>
   235d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   235d4:	ldr	x1, [x0, #2768]
   235d8:	add	x0, x0, #0xad0
   235dc:	blr	x1
   235e0:	mrs	x8, tpidr_el0
   235e4:	ldr	x9, [x8, x0]
   235e8:	sub	x9, x9, x21
   235ec:	cmp	x27, x9
   235f0:	b.gt	23794 <mpfr_sub1@@Base+0x834>
   235f4:	add	x20, x27, x21
   235f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   235fc:	ldr	x1, [x0, #2736]
   23600:	add	x0, x0, #0xab0
   23604:	blr	x1
   23608:	ldr	x8, [x8, x0]
   2360c:	cmp	x20, x8
   23610:	b.ge	23548 <mpfr_sub1@@Base+0x5e8>  // b.tcont
   23614:	cbnz	w28, 23950 <mpfr_sub1@@Base+0x9f0>
   23618:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2361c:	ldr	x1, [x0, #2736]
   23620:	add	x0, x0, #0xab0
   23624:	blr	x1
   23628:	mrs	x8, tpidr_el0
   2362c:	ldr	x8, [x8, x0]
   23630:	sub	x8, x8, #0x1
   23634:	cmp	x20, x8
   23638:	b.lt	2364c <mpfr_sub1@@Base+0x6ec>  // b.tstop
   2363c:	tbnz	w19, #31, 2394c <mpfr_sub1@@Base+0x9ec>
   23640:	mov	x0, x23
   23644:	bl	c360 <mpfr_powerof2_raw@plt>
   23648:	cbz	w0, 2394c <mpfr_sub1@@Base+0x9ec>
   2364c:	mov	w28, #0x1                   	// #1
   23650:	b	23950 <mpfr_sub1@@Base+0x9f0>
   23654:	mov	w19, #0xffffffff            	// #-1
   23658:	mov	w25, w21
   2365c:	b	234b8 <mpfr_sub1@@Base+0x558>
   23660:	cmp	w25, #0x3
   23664:	mov	w8, #0xffffffff            	// #-1
   23668:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2366c:	cneg	w8, w8, ne  // ne = any
   23670:	mov	w24, wzr
   23674:	str	w8, [x23, #8]
   23678:	str	x9, [x23, #16]
   2367c:	b	23578 <mpfr_sub1@@Base+0x618>
   23680:	ldur	w9, [x29, #-28]
   23684:	cmp	w9, #0x5
   23688:	b.ne	237f8 <mpfr_sub1@@Base+0x898>  // b.any
   2368c:	ldr	w3, [x23, #8]
   23690:	mov	w2, #0x1                   	// #1
   23694:	mov	x0, x23
   23698:	mov	x1, x25
   2369c:	bl	cb70 <mpfr_set4@plt>
   236a0:	mov	w24, w0
   236a4:	b	23578 <mpfr_sub1@@Base+0x618>
   236a8:	cmp	x24, x8
   236ac:	b.ne	236bc <mpfr_sub1@@Base+0x75c>  // b.any
   236b0:	add	x0, x25, #0x20
   236b4:	bl	c0a0 <mpfr_ubf_zexp2exp@plt>
   236b8:	mov	x24, x0
   236bc:	mov	x0, x25
   236c0:	mov	x1, x19
   236c4:	bl	cff0 <mpfr_ubf_diff_exp@plt>
   236c8:	mov	x28, x0
   236cc:	b	23010 <mpfr_sub1@@Base+0xb0>
   236d0:	ldr	x24, [x25, #24]
   236d4:	cmp	x20, x24
   236d8:	b.ne	230ac <mpfr_sub1@@Base+0x14c>  // b.any
   236dc:	lsl	x23, x27, #3
   236e0:	cmp	x23, #0x4, lsl #12
   236e4:	b.hi	23b64 <mpfr_sub1@@Base+0xc04>  // b.pmore
   236e8:	add	x9, x23, #0xf
   236ec:	mov	x8, sp
   236f0:	and	x9, x9, #0xfffffffffffffff0
   236f4:	sub	x24, x8, x9
   236f8:	mov	sp, x24
   236fc:	cmp	x20, x24
   23700:	b.eq	230ac <mpfr_sub1@@Base+0x14c>  // b.none
   23704:	mov	x0, x24
   23708:	mov	x1, x20
   2370c:	mov	x2, x23
   23710:	bl	be50 <memcpy@plt>
   23714:	b	230ac <mpfr_sub1@@Base+0x14c>
   23718:	ldr	x26, [x19, #24]
   2371c:	cmp	x20, x26
   23720:	b.ne	23118 <mpfr_sub1@@Base+0x1b8>  // b.any
   23724:	lsl	x19, x22, #3
   23728:	cmp	x19, #0x4, lsl #12
   2372c:	b.hi	23aac <mpfr_sub1@@Base+0xb4c>  // b.pmore
   23730:	add	x9, x19, #0xf
   23734:	mov	x8, sp
   23738:	and	x9, x9, #0xfffffffffffffff0
   2373c:	sub	x26, x8, x9
   23740:	mov	sp, x26
   23744:	cmp	x20, x26
   23748:	b.eq	23118 <mpfr_sub1@@Base+0x1b8>  // b.none
   2374c:	mov	x0, x26
   23750:	mov	x1, x20
   23754:	mov	x2, x19
   23758:	bl	be50 <memcpy@plt>
   2375c:	b	23118 <mpfr_sub1@@Base+0x1b8>
   23760:	subs	x25, x27, x8
   23764:	b.le	238b0 <mpfr_sub1@@Base+0x950>
   23768:	lsl	x19, x9, #3
   2376c:	mov	x0, x20
   23770:	mov	w1, wzr
   23774:	mov	x2, x19
   23778:	bl	c5b0 <memset@plt>
   2377c:	add	x0, x20, x19
   23780:	cmp	x0, x24
   23784:	b.eq	23180 <mpfr_sub1@@Base+0x220>  // b.none
   23788:	lsl	x2, x25, #3
   2378c:	mov	x1, x24
   23790:	b	2317c <mpfr_sub1@@Base+0x21c>
   23794:	ldr	w2, [x23, #8]
   23798:	mov	x0, x23
   2379c:	mov	w1, w28
   237a0:	bl	c3a0 <mpfr_overflow@plt>
   237a4:	mov	w24, w0
   237a8:	b	23578 <mpfr_sub1@@Base+0x618>
   237ac:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   237b0:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   237b4:	add	x0, x0, #0x128
   237b8:	add	x2, x2, #0x12f
   237bc:	mov	w1, #0x298                 	// #664
   237c0:	bl	d030 <mpfr_assert_fail@plt>
   237c4:	b	23510 <mpfr_sub1@@Base+0x5b0>
   237c8:	sub	x0, x29, #0x10
   237cc:	bl	c220 <mpfr_tmp_allocate@plt>
   237d0:	mov	x24, x0
   237d4:	b	23090 <mpfr_sub1@@Base+0x130>
   237d8:	sub	x0, x29, #0x10
   237dc:	bl	c220 <mpfr_tmp_allocate@plt>
   237e0:	mov	x26, x0
   237e4:	b	230fc <mpfr_sub1@@Base+0x19c>
   237e8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   237ec:	mov	w21, #0x1                   	// #1
   237f0:	str	x8, [x20, x9, lsl #3]
   237f4:	b	234c4 <mpfr_sub1@@Base+0x564>
   237f8:	sub	x9, x8, #0x1
   237fc:	add	x10, x8, #0x3e
   23800:	sub	x12, x27, #0x1
   23804:	cmp	x9, #0x0
   23808:	str	x24, [x23, #16]
   2380c:	mov	x22, x23
   23810:	ldr	x23, [x23, #24]
   23814:	add	x13, x27, #0x3e
   23818:	csel	x9, x10, x9, lt  // lt = tstop
   2381c:	cmp	x12, #0x0
   23820:	asr	x11, x9, #6
   23824:	csel	x9, x13, x12, lt  // lt = tstop
   23828:	asr	x21, x9, #6
   2382c:	add	x12, x11, #0x1
   23830:	cmp	x27, x8
   23834:	add	x2, x21, #0x1
   23838:	b.ge	239b0 <mpfr_sub1@@Base+0xa50>  // b.tcont
   2383c:	ldr	x10, [x25, #24]
   23840:	neg	w8, w27
   23844:	mvn	x13, x21
   23848:	ands	x8, x8, #0x3f
   2384c:	add	x9, x10, x12, lsl #3
   23850:	add	x1, x9, x13, lsl #3
   23854:	b.eq	23a80 <mpfr_sub1@@Base+0xb20>  // b.none
   23858:	ldr	x9, [x1]
   2385c:	sub	x8, x8, #0x1
   23860:	mov	w13, #0x1                   	// #1
   23864:	ldur	w25, [x29, #-28]
   23868:	lsl	x13, x13, x8
   2386c:	sub	x14, x13, #0x1
   23870:	and	x8, x9, x13
   23874:	and	x9, x9, x14
   23878:	cbz	w25, 238e8 <mpfr_sub1@@Base+0x988>
   2387c:	cbz	x8, 238e8 <mpfr_sub1@@Base+0x988>
   23880:	lsl	x19, x13, #1
   23884:	cmp	w25, #0x1
   23888:	b.eq	23924 <mpfr_sub1@@Base+0x9c4>  // b.none
   2388c:	cbnz	w25, 23914 <mpfr_sub1@@Base+0x9b4>
   23890:	cbz	x8, 23924 <mpfr_sub1@@Base+0x9c4>
   23894:	cbnz	x9, 23970 <mpfr_sub1@@Base+0xa10>
   23898:	ldr	x9, [x1]
   2389c:	ldr	w8, [x22, #8]
   238a0:	tst	x9, x19
   238a4:	b.eq	23b58 <mpfr_sub1@@Base+0xbf8>  // b.none
   238a8:	lsl	w24, w8, #1
   238ac:	b	23974 <mpfr_sub1@@Base+0xa14>
   238b0:	lsl	x2, x28, #3
   238b4:	mov	x0, x20
   238b8:	mov	w1, wzr
   238bc:	bl	c5b0 <memset@plt>
   238c0:	b	23180 <mpfr_sub1@@Base+0x220>
   238c4:	mov	w10, wzr
   238c8:	mov	w28, wzr
   238cc:	b	232f8 <mpfr_sub1@@Base+0x398>
   238d0:	ldur	x9, [x29, #-64]
   238d4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   238d8:	mov	w19, #0x1                   	// #1
   238dc:	mov	w21, #0x1                   	// #1
   238e0:	str	x8, [x20, x9, lsl #3]
   238e4:	b	234b4 <mpfr_sub1@@Base+0x554>
   238e8:	cbnz	x9, 23880 <mpfr_sub1@@Base+0x920>
   238ec:	sub	x12, x12, x2
   238f0:	cbz	x12, 23880 <mpfr_sub1@@Base+0x920>
   238f4:	mvn	x9, x21
   238f8:	add	x11, x9, x11
   238fc:	ldr	x9, [x10, x11, lsl #3]
   23900:	subs	x11, x11, #0x1
   23904:	cset	w12, cs  // cs = hs, nlast
   23908:	cbnz	x9, 23880 <mpfr_sub1@@Base+0x920>
   2390c:	tbnz	w12, #0, 238fc <mpfr_sub1@@Base+0x99c>
   23910:	b	23880 <mpfr_sub1@@Base+0x920>
   23914:	ldr	w10, [x22, #8]
   23918:	add	w10, w25, w10, lsr #31
   2391c:	cmp	w10, #0x3
   23920:	b.ne	23968 <mpfr_sub1@@Base+0xa08>  // b.any
   23924:	orr	x8, x9, x8
   23928:	cbz	x8, 23ac8 <mpfr_sub1@@Base+0xb68>
   2392c:	ldr	w8, [x22, #8]
   23930:	neg	w24, w8
   23934:	cmp	x23, x1
   23938:	b.eq	23988 <mpfr_sub1@@Base+0xa28>  // b.none
   2393c:	lsl	x2, x2, #3
   23940:	mov	x0, x23
   23944:	bl	be50 <memcpy@plt>
   23948:	b	23988 <mpfr_sub1@@Base+0xa28>
   2394c:	mov	w28, wzr
   23950:	ldr	w2, [x23, #8]
   23954:	mov	x0, x23
   23958:	mov	w1, w28
   2395c:	bl	c880 <mpfr_underflow@plt>
   23960:	mov	w24, w0
   23964:	b	23578 <mpfr_sub1@@Base+0x618>
   23968:	orr	x8, x9, x8
   2396c:	cbz	x8, 23b4c <mpfr_sub1@@Base+0xbec>
   23970:	ldr	w24, [x22, #8]
   23974:	mov	x0, x23
   23978:	mov	x3, x19
   2397c:	bl	bf60 <__gmpn_add_1@plt>
   23980:	cbnz	x0, 23b04 <mpfr_sub1@@Base+0xba4>
   23984:	ldur	w25, [x29, #-28]
   23988:	ldr	x8, [x23]
   2398c:	neg	x9, x19
   23990:	and	x8, x8, x9
   23994:	str	x8, [x23]
   23998:	mov	x19, x22
   2399c:	cbz	w24, 239ec <mpfr_sub1@@Base+0xa8c>
   239a0:	ldr	w8, [x19, #8]
   239a4:	cmp	w24, w8, lsl #1
   239a8:	b.ne	23a34 <mpfr_sub1@@Base+0xad4>  // b.any
   239ac:	b	23a04 <mpfr_sub1@@Base+0xaa4>
   239b0:	ldr	x1, [x25, #24]
   239b4:	sub	x19, x2, x12
   239b8:	add	x0, x23, x19, lsl #3
   239bc:	cmp	x0, x1
   239c0:	b.eq	239cc <mpfr_sub1@@Base+0xa6c>  // b.none
   239c4:	lsl	x2, x12, #3
   239c8:	bl	be50 <memcpy@plt>
   239cc:	lsl	x2, x19, #3
   239d0:	mov	x0, x23
   239d4:	mov	w1, wzr
   239d8:	bl	c5b0 <memset@plt>
   239dc:	ldur	w25, [x29, #-28]
   239e0:	mov	w24, wzr
   239e4:	mov	x19, x22
   239e8:	cbnz	w24, 239a0 <mpfr_sub1@@Base+0xa40>
   239ec:	cmp	w25, #0x1
   239f0:	b.eq	23a04 <mpfr_sub1@@Base+0xaa4>  // b.none
   239f4:	ldr	w24, [x19, #8]
   239f8:	add	w8, w25, w24, lsr #31
   239fc:	cmp	w8, #0x3
   23a00:	b.ne	23a34 <mpfr_sub1@@Base+0xad4>  // b.any
   23a04:	ldur	x2, [x29, #-24]
   23a08:	mov	w9, #0x1                   	// #1
   23a0c:	mov	x0, x20
   23a10:	mov	x1, x20
   23a14:	lsl	w8, w2, #6
   23a18:	sub	w8, w8, w27
   23a1c:	lsl	x3, x9, x8
   23a20:	bl	c8f0 <__gmpn_sub_1@plt>
   23a24:	ldr	x8, [x20, x26, lsl #3]
   23a28:	tbz	x8, #63, 23b28 <mpfr_sub1@@Base+0xbc8>
   23a2c:	ldr	w8, [x19, #8]
   23a30:	neg	w24, w8
   23a34:	ldr	x9, [x19, #16]
   23a38:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   23a3c:	ldr	x1, [x0, #2768]
   23a40:	add	x0, x0, #0xad0
   23a44:	blr	x1
   23a48:	mrs	x8, tpidr_el0
   23a4c:	ldr	x10, [x8, x0]
   23a50:	cmp	x9, x10
   23a54:	b.gt	23a70 <mpfr_sub1@@Base+0xb10>
   23a58:	cbz	w24, 23578 <mpfr_sub1@@Base+0x618>
   23a5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   23a60:	ldr	x1, [x0, #2800]
   23a64:	add	x0, x0, #0xaf0
   23a68:	blr	x1
   23a6c:	b	2356c <mpfr_sub1@@Base+0x60c>
   23a70:	ldr	w2, [x19, #8]
   23a74:	mov	x0, x19
   23a78:	mov	w1, w25
   23a7c:	b	237a0 <mpfr_sub1@@Base+0x840>
   23a80:	ldur	x9, [x1, #-8]
   23a84:	ldur	w12, [x29, #-28]
   23a88:	and	x8, x9, #0x8000000000000000
   23a8c:	and	x9, x9, #0x7fffffffffffffff
   23a90:	cbz	w12, 23ad0 <mpfr_sub1@@Base+0xb70>
   23a94:	cbz	x8, 23ad0 <mpfr_sub1@@Base+0xb70>
   23a98:	mov	w19, #0x1                   	// #1
   23a9c:	ldur	w25, [x29, #-28]
   23aa0:	cmp	w25, #0x1
   23aa4:	b.ne	2388c <mpfr_sub1@@Base+0x92c>  // b.any
   23aa8:	b	23924 <mpfr_sub1@@Base+0x9c4>
   23aac:	sub	x0, x29, #0x10
   23ab0:	mov	x1, x19
   23ab4:	bl	c220 <mpfr_tmp_allocate@plt>
   23ab8:	mov	x26, x0
   23abc:	cmp	x20, x26
   23ac0:	b.ne	2374c <mpfr_sub1@@Base+0x7ec>  // b.any
   23ac4:	b	23118 <mpfr_sub1@@Base+0x1b8>
   23ac8:	mov	w24, wzr
   23acc:	b	23934 <mpfr_sub1@@Base+0x9d4>
   23ad0:	mov	w19, #0x1                   	// #1
   23ad4:	cbnz	x9, 23a9c <mpfr_sub1@@Base+0xb3c>
   23ad8:	sub	x12, x11, x2
   23adc:	cbz	x12, 23a9c <mpfr_sub1@@Base+0xb3c>
   23ae0:	sub	x9, x11, x21
   23ae4:	sub	x11, x9, #0x2
   23ae8:	mov	w19, #0x1                   	// #1
   23aec:	ldr	x9, [x10, x11, lsl #3]
   23af0:	subs	x11, x11, #0x1
   23af4:	cset	w12, cs  // cs = hs, nlast
   23af8:	cbnz	x9, 23a9c <mpfr_sub1@@Base+0xb3c>
   23afc:	tbnz	w12, #0, 23aec <mpfr_sub1@@Base+0xb8c>
   23b00:	b	23a9c <mpfr_sub1@@Base+0xb3c>
   23b04:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   23b08:	str	x8, [x23, x21, lsl #3]
   23b0c:	ldr	x8, [x22, #16]
   23b10:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   23b14:	cmp	x8, x9
   23b18:	b.eq	23984 <mpfr_sub1@@Base+0xa24>  // b.none
   23b1c:	add	x8, x8, #0x1
   23b20:	str	x8, [x22, #16]
   23b24:	b	23984 <mpfr_sub1@@Base+0xa24>
   23b28:	ldr	x8, [x19, #16]
   23b2c:	mov	x9, x26
   23b30:	sub	x8, x8, #0x1
   23b34:	str	x8, [x19, #16]
   23b38:	lsl	x8, x26, #3
   23b3c:	ldr	x9, [x20, x8]
   23b40:	orr	x9, x9, #0x8000000000000000
   23b44:	str	x9, [x20, x8]
   23b48:	b	23a2c <mpfr_sub1@@Base+0xacc>
   23b4c:	ldur	w25, [x29, #-28]
   23b50:	mov	w24, wzr
   23b54:	b	23934 <mpfr_sub1@@Base+0x9d4>
   23b58:	ldur	w25, [x29, #-28]
   23b5c:	neg	w24, w8, lsl #1
   23b60:	b	23934 <mpfr_sub1@@Base+0x9d4>
   23b64:	sub	x0, x29, #0x10
   23b68:	mov	x1, x23
   23b6c:	bl	c220 <mpfr_tmp_allocate@plt>
   23b70:	mov	x24, x0
   23b74:	cmp	x20, x24
   23b78:	b.ne	23704 <mpfr_sub1@@Base+0x7a4>  // b.any
   23b7c:	b	230ac <mpfr_sub1@@Base+0x14c>

0000000000023b80 <mpfr_sub_ui@@Base>:
   23b80:	sub	sp, sp, #0x80
   23b84:	stp	x20, x19, [sp, #112]
   23b88:	mov	w19, w3
   23b8c:	mov	x8, x1
   23b90:	mov	x20, x0
   23b94:	stp	x29, x30, [sp, #32]
   23b98:	str	x27, [sp, #48]
   23b9c:	stp	x26, x25, [sp, #64]
   23ba0:	stp	x24, x23, [sp, #80]
   23ba4:	stp	x22, x21, [sp, #96]
   23ba8:	add	x29, sp, #0x20
   23bac:	cbz	x2, 23cd0 <mpfr_sub_ui@@Base+0x150>
   23bb0:	ldr	x10, [x8, #16]
   23bb4:	mov	x9, #0x2                   	// #2
   23bb8:	movk	x9, #0x8000, lsl #48
   23bbc:	add	x11, x9, #0x2
   23bc0:	cmp	x10, x11
   23bc4:	b.lt	23ce8 <mpfr_sub_ui@@Base+0x168>  // b.tstop
   23bc8:	add	x10, x29, #0x18
   23bcc:	clz	x12, x2
   23bd0:	mov	w9, #0x40                  	// #64
   23bd4:	mov	w11, #0x1                   	// #1
   23bd8:	str	x10, [sp, #24]
   23bdc:	lsl	x10, x2, x12
   23be0:	str	x9, [sp]
   23be4:	str	w11, [sp, #8]
   23be8:	str	x10, [x29, #24]
   23bec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   23bf0:	ldr	x1, [x0, #2800]
   23bf4:	add	x0, x0, #0xaf0
   23bf8:	blr	x1
   23bfc:	mrs	x24, tpidr_el0
   23c00:	ldr	w26, [x24, x0]
   23c04:	mov	x21, x0
   23c08:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   23c0c:	ldr	x1, [x0, #2736]
   23c10:	add	x0, x0, #0xab0
   23c14:	blr	x1
   23c18:	ldr	x25, [x24, x0]
   23c1c:	mov	x22, x0
   23c20:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   23c24:	ldr	x1, [x0, #2768]
   23c28:	add	x0, x0, #0xad0
   23c2c:	blr	x1
   23c30:	ldr	x27, [x24, x0]
   23c34:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   23c38:	mov	x23, x0
   23c3c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   23c40:	str	x11, [x24, x0]
   23c44:	sub	x9, x9, x12
   23c48:	mov	x2, sp
   23c4c:	mov	x0, x20
   23c50:	mov	x1, x8
   23c54:	mov	w3, w19
   23c58:	str	x10, [x24, x22]
   23c5c:	str	x9, [sp, #16]
   23c60:	bl	bfd0 <mpfr_sub@plt>
   23c64:	ldr	w8, [x24, x21]
   23c68:	str	x25, [x24, x22]
   23c6c:	str	x27, [x24, x23]
   23c70:	mov	w9, w0
   23c74:	orr	w8, w8, w26
   23c78:	str	w8, [x24, x21]
   23c7c:	ldr	x10, [x20, #16]
   23c80:	cmp	x10, x27
   23c84:	b.gt	23d30 <mpfr_sub_ui@@Base+0x1b0>
   23c88:	cmp	x10, x25
   23c8c:	b.lt	23d30 <mpfr_sub_ui@@Base+0x1b0>  // b.tstop
   23c90:	cbz	w9, 23cac <mpfr_sub_ui@@Base+0x12c>
   23c94:	orr	w8, w8, #0x8
   23c98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   23c9c:	ldr	x1, [x0, #2800]
   23ca0:	add	x0, x0, #0xaf0
   23ca4:	blr	x1
   23ca8:	str	w8, [x24, x0]
   23cac:	ldp	x20, x19, [sp, #112]
   23cb0:	ldp	x22, x21, [sp, #96]
   23cb4:	ldp	x24, x23, [sp, #80]
   23cb8:	ldp	x26, x25, [sp, #64]
   23cbc:	ldr	x27, [sp, #48]
   23cc0:	ldp	x29, x30, [sp, #32]
   23cc4:	mov	w0, w9
   23cc8:	add	sp, sp, #0x80
   23ccc:	ret
   23cd0:	ldr	w3, [x8, #8]
   23cd4:	mov	x0, x20
   23cd8:	mov	x1, x8
   23cdc:	mov	w2, w19
   23ce0:	bl	cb70 <mpfr_set4@plt>
   23ce4:	b	23d40 <mpfr_sub_ui@@Base+0x1c0>
   23ce8:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   23cec:	cmp	x10, x11
   23cf0:	b.eq	23d48 <mpfr_sub_ui@@Base+0x1c8>  // b.none
   23cf4:	mov	x11, #0x2                   	// #2
   23cf8:	movk	x11, #0x8000, lsl #48
   23cfc:	cmp	x10, x11
   23d00:	b.ne	23bc8 <mpfr_sub_ui@@Base+0x48>  // b.any
   23d04:	str	x9, [x20, #16]
   23d08:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   23d0c:	ldr	x1, [x0, #2800]
   23d10:	add	x0, x0, #0xaf0
   23d14:	blr	x1
   23d18:	mrs	x8, tpidr_el0
   23d1c:	ldr	w10, [x8, x0]
   23d20:	mov	w9, wzr
   23d24:	orr	w10, w10, #0x4
   23d28:	str	w10, [x8, x0]
   23d2c:	b	23cac <mpfr_sub_ui@@Base+0x12c>
   23d30:	mov	x0, x20
   23d34:	mov	w1, w9
   23d38:	mov	w2, w19
   23d3c:	bl	d020 <mpfr_check_range@plt>
   23d40:	mov	w9, w0
   23d44:	b	23cac <mpfr_sub_ui@@Base+0x12c>
   23d48:	str	x11, [x20, #16]
   23d4c:	ldr	w8, [x8, #8]
   23d50:	mov	w9, wzr
   23d54:	str	w8, [x20, #8]
   23d58:	b	23cac <mpfr_sub_ui@@Base+0x12c>

0000000000023d5c <mpfr_rint@@Base>:
   23d5c:	sub	sp, sp, #0x80
   23d60:	stp	x29, x30, [sp, #32]
   23d64:	stp	x28, x27, [sp, #48]
   23d68:	stp	x26, x25, [sp, #64]
   23d6c:	stp	x24, x23, [sp, #80]
   23d70:	stp	x22, x21, [sp, #96]
   23d74:	stp	x20, x19, [sp, #112]
   23d78:	ldr	x25, [x1, #16]
   23d7c:	mov	x8, #0x2                   	// #2
   23d80:	movk	x8, #0x8000, lsl #48
   23d84:	add	x9, x8, #0x2
   23d88:	cmp	x25, x9
   23d8c:	mov	x19, x0
   23d90:	add	x29, sp, #0x20
   23d94:	b.lt	24264 <mpfr_rint@@Base+0x508>  // b.tstop
   23d98:	ldr	w8, [x1, #8]
   23d9c:	mov	w21, w2
   23da0:	cmp	w2, #0x1
   23da4:	str	w8, [x19, #8]
   23da8:	ldrsw	x20, [x1, #8]
   23dac:	b.eq	23dc8 <mpfr_rint@@Base+0x6c>  // b.none
   23db0:	cmp	w21, #0x2
   23db4:	b.eq	23dd0 <mpfr_rint@@Base+0x74>  // b.none
   23db8:	cmp	w21, #0x3
   23dbc:	b.ne	23ddc <mpfr_rint@@Base+0x80>  // b.any
   23dc0:	ubfx	x22, x20, #31, #1
   23dc4:	b	23de8 <mpfr_rint@@Base+0x8c>
   23dc8:	mov	w22, wzr
   23dcc:	b	23de8 <mpfr_rint@@Base+0x8c>
   23dd0:	cmp	w20, #0x0
   23dd4:	cset	w22, gt
   23dd8:	b	23de8 <mpfr_rint@@Base+0x8c>
   23ddc:	cmp	w21, #0x4
   23de0:	mov	w8, #0x1                   	// #1
   23de4:	cneg	w22, w8, ne  // ne = any
   23de8:	cmp	x25, #0x0
   23dec:	b.le	24298 <mpfr_rint@@Base+0x53c>
   23df0:	ldr	x8, [x1]
   23df4:	ldr	x9, [x19]
   23df8:	sub	x10, x25, #0x1
   23dfc:	ldr	x16, [x1, #24]
   23e00:	sub	x12, x8, #0x1
   23e04:	add	x8, x8, #0x3e
   23e08:	sub	x13, x9, #0x1
   23e0c:	cmp	x12, #0x0
   23e10:	add	x14, x9, #0x3e
   23e14:	neg	w9, w9
   23e18:	csel	x8, x8, x12, lt  // lt = tstop
   23e1c:	cmp	x13, #0x0
   23e20:	ldr	x15, [x19, #24]
   23e24:	add	x11, x25, #0x3e
   23e28:	and	w26, w9, #0x3f
   23e2c:	csel	x9, x14, x13, lt  // lt = tstop
   23e30:	cmp	x10, #0x0
   23e34:	stur	x20, [x29, #-8]
   23e38:	asr	x20, x9, #6
   23e3c:	csel	x9, x11, x10, lt  // lt = tstop
   23e40:	asr	x24, x8, #6
   23e44:	asr	x9, x9, #6
   23e48:	add	x8, x24, #0x1
   23e4c:	add	x23, x20, #0x1
   23e50:	cmp	x9, x24
   23e54:	stur	w21, [x29, #-12]
   23e58:	str	x19, [sp, #8]
   23e5c:	str	x25, [x19, #16]
   23e60:	b.le	23e74 <mpfr_rint@@Base+0x118>
   23e64:	mov	w27, wzr
   23e68:	mov	w19, wzr
   23e6c:	mov	x21, x8
   23e70:	b	23ed8 <mpfr_rint@@Base+0x17c>
   23e74:	add	x21, x9, #0x1
   23e78:	add	x9, x25, #0x3f
   23e7c:	cmp	x25, #0x0
   23e80:	csel	x9, x9, x25, lt  // lt = tstop
   23e84:	and	x9, x9, #0xffffffffffffffc0
   23e88:	sub	x27, x25, x9
   23e8c:	sub	x9, x8, x21
   23e90:	cbz	w27, 23ea8 <mpfr_rint@@Base+0x14c>
   23e94:	ldr	x10, [x16, x9, lsl #3]
   23e98:	lsl	x10, x10, x27
   23e9c:	cmp	x10, #0x0
   23ea0:	cset	w10, eq  // eq = none
   23ea4:	b	23eac <mpfr_rint@@Base+0x150>
   23ea8:	mov	w10, #0x1                   	// #1
   23eac:	cmp	w10, #0x0
   23eb0:	mov	w11, #0x2                   	// #2
   23eb4:	csel	w19, wzr, w11, ne  // ne = any
   23eb8:	cbz	w10, 23ed8 <mpfr_rint@@Base+0x17c>
   23ebc:	sub	x10, x16, #0x8
   23ec0:	subs	x11, x9, #0x1
   23ec4:	b.lt	23ed8 <mpfr_rint@@Base+0x17c>  // b.tstop
   23ec8:	ldr	x12, [x10, x9, lsl #3]
   23ecc:	mov	x9, x11
   23ed0:	cbz	x12, 23ec0 <mpfr_rint@@Base+0x164>
   23ed4:	mov	w19, #0x2                   	// #2
   23ed8:	subs	x28, x23, x21
   23edc:	b.ge	23f48 <mpfr_rint@@Base+0x1ec>  // b.tcont
   23ee0:	sub	x21, x8, x23
   23ee4:	add	x1, x16, x21, lsl #3
   23ee8:	cmp	x15, x1
   23eec:	b.eq	23f0c <mpfr_rint@@Base+0x1b0>  // b.none
   23ef0:	lsl	x2, x23, #3
   23ef4:	mov	x0, x15
   23ef8:	mov	x27, x15
   23efc:	mov	x28, x16
   23f00:	bl	be50 <memcpy@plt>
   23f04:	mov	x16, x28
   23f08:	mov	x15, x27
   23f0c:	mov	w27, w19
   23f10:	tbz	w22, #31, 24030 <mpfr_rint@@Base+0x2d4>
   23f14:	ldur	w8, [x29, #-12]
   23f18:	cbnz	w8, 23f30 <mpfr_rint@@Base+0x1d4>
   23f1c:	ldr	x8, [x15]
   23f20:	mov	w9, #0x1                   	// #1
   23f24:	lsl	x9, x9, x26
   23f28:	tst	x8, x9
   23f2c:	b.eq	2417c <mpfr_rint@@Base+0x420>  // b.none
   23f30:	cbz	w26, 24024 <mpfr_rint@@Base+0x2c8>
   23f34:	ldr	x8, [x15]
   23f38:	sub	w9, w26, #0x1
   23f3c:	lsr	x8, x8, x9
   23f40:	and	w22, w8, #0x1
   23f44:	b	24030 <mpfr_rint@@Base+0x2d4>
   23f48:	cmp	x15, x16
   23f4c:	sub	x20, x8, x21
   23f50:	b.eq	23f7c <mpfr_rint@@Base+0x220>  // b.none
   23f54:	add	x0, x15, x28, lsl #3
   23f58:	add	x1, x16, x20, lsl #3
   23f5c:	cmp	x0, x1
   23f60:	b.eq	23f7c <mpfr_rint@@Base+0x220>  // b.none
   23f64:	lsl	x2, x21, #3
   23f68:	mov	x23, x15
   23f6c:	mov	x24, x16
   23f70:	bl	be50 <memcpy@plt>
   23f74:	mov	x16, x24
   23f78:	mov	x15, x23
   23f7c:	mov	w8, #0x40                  	// #64
   23f80:	sub	w8, w8, w27
   23f84:	cmp	w27, #0x0
   23f88:	add	x24, x15, x28, lsl #3
   23f8c:	csel	w8, wzr, w8, eq  // eq = none
   23f90:	cbnz	x28, 23fc8 <mpfr_rint@@Base+0x26c>
   23f94:	cmp	w8, w26
   23f98:	mov	w27, w19
   23f9c:	b.ge	23fd8 <mpfr_rint@@Base+0x27c>  // b.tcont
   23fa0:	cbnz	w27, 23fd0 <mpfr_rint@@Base+0x274>
   23fa4:	ldr	x9, [x24]
   23fa8:	mov	w10, #0x1                   	// #1
   23fac:	lsl	x11, x10, x26
   23fb0:	lsl	x8, x10, x8
   23fb4:	sub	x8, x11, x8
   23fb8:	tst	x9, x8
   23fbc:	cset	w27, ne  // ne = any
   23fc0:	tbz	w22, #31, 24088 <mpfr_rint@@Base+0x32c>
   23fc4:	b	23fe0 <mpfr_rint@@Base+0x284>
   23fc8:	mov	w26, w8
   23fcc:	mov	w27, w19
   23fd0:	tbz	w22, #31, 24088 <mpfr_rint@@Base+0x32c>
   23fd4:	b	23fe0 <mpfr_rint@@Base+0x284>
   23fd8:	mov	w26, w8
   23fdc:	tbz	w22, #31, 24088 <mpfr_rint@@Base+0x32c>
   23fe0:	cbnz	x20, 23ff0 <mpfr_rint@@Base+0x294>
   23fe4:	cbnz	w26, 23ff0 <mpfr_rint@@Base+0x294>
   23fe8:	mov	w22, wzr
   23fec:	b	24088 <mpfr_rint@@Base+0x32c>
   23ff0:	ldur	w8, [x29, #-12]
   23ff4:	cbnz	w8, 2400c <mpfr_rint@@Base+0x2b0>
   23ff8:	ldr	x8, [x24]
   23ffc:	mov	w9, #0x1                   	// #1
   24000:	lsl	x9, x9, x26
   24004:	tst	x8, x9
   24008:	b.eq	24198 <mpfr_rint@@Base+0x43c>  // b.none
   2400c:	cbz	w26, 2407c <mpfr_rint@@Base+0x320>
   24010:	ldr	x8, [x24]
   24014:	sub	w9, w26, #0x1
   24018:	lsr	x8, x8, x9
   2401c:	and	w22, w8, #0x1
   24020:	b	24088 <mpfr_rint@@Base+0x32c>
   24024:	add	x8, x16, x21, lsl #3
   24028:	ldur	x8, [x8, #-8]
   2402c:	lsr	x22, x8, #63
   24030:	cbnz	w27, 2406c <mpfr_rint@@Base+0x310>
   24034:	cbz	w26, 24048 <mpfr_rint@@Base+0x2ec>
   24038:	ldr	x8, [x15]
   2403c:	neg	w9, w26
   24040:	lsl	x8, x8, x9
   24044:	cbnz	x8, 24060 <mpfr_rint@@Base+0x304>
   24048:	sub	x8, x16, #0x8
   2404c:	subs	x9, x21, #0x1
   24050:	b.lt	24068 <mpfr_rint@@Base+0x30c>  // b.tstop
   24054:	ldr	x10, [x8, x21, lsl #3]
   24058:	mov	x21, x9
   2405c:	cbz	x10, 2404c <mpfr_rint@@Base+0x2f0>
   24060:	mov	w27, #0x1                   	// #1
   24064:	b	2406c <mpfr_rint@@Base+0x310>
   24068:	mov	w27, wzr
   2406c:	mov	x24, x15
   24070:	mov	x21, x23
   24074:	cbnz	w26, 2409c <mpfr_rint@@Base+0x340>
   24078:	b	240b0 <mpfr_rint@@Base+0x354>
   2407c:	add	x8, x16, x20, lsl #3
   24080:	ldur	x8, [x8, #-8]
   24084:	lsr	x22, x8, #63
   24088:	lsl	x2, x28, #3
   2408c:	mov	x0, x15
   24090:	mov	w1, wzr
   24094:	bl	c5b0 <memset@plt>
   24098:	cbz	w26, 240b0 <mpfr_rint@@Base+0x354>
   2409c:	ldr	x8, [x24]
   240a0:	mov	x9, #0xffffffffffffffff    	// #-1
   240a4:	lsl	x9, x9, x26
   240a8:	and	x8, x8, x9
   240ac:	str	x8, [x24]
   240b0:	cbz	w27, 24110 <mpfr_rint@@Base+0x3b4>
   240b4:	mrs	x20, tpidr_el0
   240b8:	cbz	w22, 24130 <mpfr_rint@@Base+0x3d4>
   240bc:	mov	w8, #0x1                   	// #1
   240c0:	lsl	x3, x8, x26
   240c4:	mov	x0, x24
   240c8:	mov	x1, x24
   240cc:	mov	x2, x21
   240d0:	bl	bf60 <__gmpn_add_1@plt>
   240d4:	cbz	x0, 24130 <mpfr_rint@@Base+0x3d4>
   240d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   240dc:	ldr	x1, [x0, #2768]
   240e0:	add	x0, x0, #0xad0
   240e4:	blr	x1
   240e8:	ldr	x8, [x20, x0]
   240ec:	cmp	x25, x8
   240f0:	b.ne	24118 <mpfr_rint@@Base+0x3bc>  // b.any
   240f4:	ldr	x0, [sp, #8]
   240f8:	ldur	w1, [x29, #-12]
   240fc:	ldur	x2, [x29, #-8]
   24100:	bl	c3a0 <mpfr_overflow@plt>
   24104:	cmp	w0, #0x0
   24108:	cneg	w8, w27, lt  // lt = tstop
   2410c:	b	24158 <mpfr_rint@@Base+0x3fc>
   24110:	mov	w8, wzr
   24114:	b	24158 <mpfr_rint@@Base+0x3fc>
   24118:	ldr	x11, [sp, #8]
   2411c:	add	x8, x25, #0x1
   24120:	add	x9, x24, x21, lsl #3
   24124:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   24128:	str	x8, [x11, #16]
   2412c:	stur	x10, [x9, #-8]
   24130:	ldur	x8, [x29, #-8]
   24134:	cmp	w22, w8, lsr #31
   24138:	cneg	w8, w27, eq  // eq = none
   2413c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24140:	ldr	x1, [x0, #2800]
   24144:	add	x0, x0, #0xaf0
   24148:	blr	x1
   2414c:	ldr	w9, [x20, x0]
   24150:	orr	w9, w9, #0x8
   24154:	str	w9, [x20, x0]
   24158:	ldp	x20, x19, [sp, #112]
   2415c:	ldp	x22, x21, [sp, #96]
   24160:	ldp	x24, x23, [sp, #80]
   24164:	ldp	x26, x25, [sp, #64]
   24168:	ldp	x28, x27, [sp, #48]
   2416c:	ldp	x29, x30, [sp, #32]
   24170:	mov	w0, w8
   24174:	add	sp, sp, #0x80
   24178:	ret
   2417c:	cbz	w26, 241b4 <mpfr_rint@@Base+0x458>
   24180:	sub	x9, x9, #0x1
   24184:	sub	w10, w26, #0x1
   24188:	mov	w11, #0x1                   	// #1
   2418c:	and	x8, x8, x9
   24190:	lsl	x9, x11, x10
   24194:	b	241c0 <mpfr_rint@@Base+0x464>
   24198:	cbz	w26, 24214 <mpfr_rint@@Base+0x4b8>
   2419c:	sub	x9, x9, #0x1
   241a0:	sub	w10, w26, #0x1
   241a4:	mov	w11, #0x1                   	// #1
   241a8:	and	x8, x8, x9
   241ac:	lsl	x9, x11, x10
   241b0:	b	24220 <mpfr_rint@@Base+0x4c4>
   241b4:	add	x8, x16, x21, lsl #3
   241b8:	ldur	x8, [x8, #-8]
   241bc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   241c0:	cmp	x8, x9
   241c4:	cset	w22, hi  // hi = pmore
   241c8:	b.ne	24030 <mpfr_rint@@Base+0x2d4>  // b.any
   241cc:	cmp	w26, #0x0
   241d0:	cset	w8, eq  // eq = none
   241d4:	mvn	x9, x8
   241d8:	cmn	x21, x9
   241dc:	b.mi	24030 <mpfr_rint@@Base+0x2d4>  // b.first
   241e0:	sub	x9, x24, x20
   241e4:	add	x10, x20, x8
   241e8:	sub	x8, x9, x8
   241ec:	sub	x9, x24, x10
   241f0:	add	x9, x16, x9, lsl #3
   241f4:	sub	x9, x9, #0x8
   241f8:	ldr	x10, [x9]
   241fc:	cbnz	x10, 24254 <mpfr_rint@@Base+0x4f8>
   24200:	sub	x8, x8, #0x1
   24204:	cmp	x8, #0x1
   24208:	sub	x9, x9, #0x8
   2420c:	b.ge	241f8 <mpfr_rint@@Base+0x49c>  // b.tcont
   24210:	b	24030 <mpfr_rint@@Base+0x2d4>
   24214:	add	x8, x16, x20, lsl #3
   24218:	ldur	x8, [x8, #-8]
   2421c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   24220:	cmp	x8, x9
   24224:	cset	w22, hi  // hi = pmore
   24228:	b.ne	24088 <mpfr_rint@@Base+0x32c>  // b.any
   2422c:	cmp	w26, #0x0
   24230:	cset	w8, eq  // eq = none
   24234:	mvn	x8, x8
   24238:	adds	x8, x20, x8
   2423c:	b.mi	24088 <mpfr_rint@@Base+0x32c>  // b.first
   24240:	ldr	x9, [x16, x8, lsl #3]
   24244:	cbnz	x9, 2425c <mpfr_rint@@Base+0x500>
   24248:	subs	x8, x8, #0x1
   2424c:	b.ge	24240 <mpfr_rint@@Base+0x4e4>  // b.tcont
   24250:	b	24088 <mpfr_rint@@Base+0x32c>
   24254:	mov	w22, #0x1                   	// #1
   24258:	b	24030 <mpfr_rint@@Base+0x2d4>
   2425c:	mov	w22, #0x1                   	// #1
   24260:	b	24088 <mpfr_rint@@Base+0x32c>
   24264:	cmp	x25, x8
   24268:	b.ne	242c8 <mpfr_rint@@Base+0x56c>  // b.any
   2426c:	str	x8, [x19, #16]
   24270:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24274:	ldr	x1, [x0, #2800]
   24278:	add	x0, x0, #0xaf0
   2427c:	blr	x1
   24280:	mrs	x9, tpidr_el0
   24284:	ldr	w10, [x9, x0]
   24288:	mov	w8, wzr
   2428c:	orr	w10, w10, #0x4
   24290:	str	w10, [x9, x0]
   24294:	b	24158 <mpfr_rint@@Base+0x3fc>
   24298:	cbz	w22, 242f8 <mpfr_rint@@Base+0x59c>
   2429c:	cmp	w22, #0x0
   242a0:	b.le	242f4 <mpfr_rint@@Base+0x598>
   242a4:	mov	x0, x19
   242a8:	mov	x1, x20
   242ac:	mov	x2, xzr
   242b0:	mov	w3, w21
   242b4:	bl	bed0 <mpfr_set_si_2exp@plt>
   242b8:	cmp	w20, #0x0
   242bc:	mov	w8, #0x2                   	// #2
   242c0:	cneg	w8, w8, le
   242c4:	b	2430c <mpfr_rint@@Base+0x5b0>
   242c8:	ldr	w8, [x1, #8]
   242cc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   242d0:	cmp	x25, x9
   242d4:	str	w8, [x19, #8]
   242d8:	mov	w8, wzr
   242dc:	b.ne	242e8 <mpfr_rint@@Base+0x58c>  // b.any
   242e0:	str	x9, [x19, #16]
   242e4:	b	24158 <mpfr_rint@@Base+0x3fc>
   242e8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   242ec:	str	x9, [x19, #16]
   242f0:	b	24158 <mpfr_rint@@Base+0x3fc>
   242f4:	cbz	x25, 24330 <mpfr_rint@@Base+0x5d4>
   242f8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   242fc:	cmp	w20, #0x0
   24300:	mov	w9, #0xfffffffe            	// #-2
   24304:	str	x8, [x19, #16]
   24308:	cneg	w8, w9, le
   2430c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24310:	ldr	x1, [x0, #2800]
   24314:	add	x0, x0, #0xaf0
   24318:	blr	x1
   2431c:	mrs	x9, tpidr_el0
   24320:	ldr	w10, [x9, x0]
   24324:	orr	w10, w10, #0x8
   24328:	str	w10, [x9, x0]
   2432c:	b	24158 <mpfr_rint@@Base+0x3fc>
   24330:	cmn	w21, #0x1
   24334:	b.eq	242a4 <mpfr_rint@@Base+0x548>  // b.none
   24338:	mov	x0, x1
   2433c:	bl	c360 <mpfr_powerof2_raw@plt>
   24340:	cbnz	w0, 242f8 <mpfr_rint@@Base+0x59c>
   24344:	b	242a4 <mpfr_rint@@Base+0x548>

0000000000024348 <mpfr_roundeven@@Base>:
   24348:	stp	x29, x30, [sp, #-16]!
   2434c:	mov	w2, wzr
   24350:	mov	x29, sp
   24354:	bl	c7c0 <mpfr_rint@plt>
   24358:	ldp	x29, x30, [sp], #16
   2435c:	ret

0000000000024360 <mpfr_round@@Base>:
   24360:	stp	x29, x30, [sp, #-16]!
   24364:	mov	w2, #0xffffffff            	// #-1
   24368:	mov	x29, sp
   2436c:	bl	c7c0 <mpfr_rint@plt>
   24370:	ldp	x29, x30, [sp], #16
   24374:	ret

0000000000024378 <mpfr_trunc@@Base>:
   24378:	stp	x29, x30, [sp, #-16]!
   2437c:	mov	w2, #0x1                   	// #1
   24380:	mov	x29, sp
   24384:	bl	c7c0 <mpfr_rint@plt>
   24388:	ldp	x29, x30, [sp], #16
   2438c:	ret

0000000000024390 <mpfr_ceil@@Base>:
   24390:	stp	x29, x30, [sp, #-16]!
   24394:	mov	w2, #0x2                   	// #2
   24398:	mov	x29, sp
   2439c:	bl	c7c0 <mpfr_rint@plt>
   243a0:	ldp	x29, x30, [sp], #16
   243a4:	ret

00000000000243a8 <mpfr_floor@@Base>:
   243a8:	stp	x29, x30, [sp, #-16]!
   243ac:	mov	w2, #0x3                   	// #3
   243b0:	mov	x29, sp
   243b4:	bl	c7c0 <mpfr_rint@plt>
   243b8:	ldp	x29, x30, [sp], #16
   243bc:	ret

00000000000243c0 <mpfr_rint_roundeven@@Base>:
   243c0:	sub	sp, sp, #0x60
   243c4:	stp	x29, x30, [sp, #32]
   243c8:	stp	x24, x23, [sp, #48]
   243cc:	stp	x22, x21, [sp, #64]
   243d0:	stp	x20, x19, [sp, #80]
   243d4:	ldr	x8, [x1, #16]
   243d8:	mov	x9, #0x4                   	// #4
   243dc:	movk	x9, #0x8000, lsl #48
   243e0:	mov	w19, w2
   243e4:	mov	x21, x1
   243e8:	cmp	x8, x9
   243ec:	mov	x20, x0
   243f0:	add	x29, sp, #0x20
   243f4:	b.lt	24404 <mpfr_rint_roundeven@@Base+0x44>  // b.tstop
   243f8:	mov	x0, x21
   243fc:	bl	c600 <mpfr_integer_p@plt>
   24400:	cbz	w0, 24420 <mpfr_rint_roundeven@@Base+0x60>
   24404:	ldr	w3, [x21, #8]
   24408:	mov	x0, x20
   2440c:	mov	x1, x21
   24410:	mov	w2, w19
   24414:	bl	cb70 <mpfr_set4@plt>
   24418:	mov	w19, w0
   2441c:	b	24484 <mpfr_rint_roundeven@@Base+0xc4>
   24420:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24424:	ldr	x1, [x0, #2800]
   24428:	add	x0, x0, #0xaf0
   2442c:	blr	x1
   24430:	mrs	x23, tpidr_el0
   24434:	ldr	x1, [x21]
   24438:	ldr	w24, [x23, x0]
   2443c:	mov	x22, x0
   24440:	mov	x0, sp
   24444:	bl	cf60 <mpfr_init2@plt>
   24448:	mov	x0, sp
   2444c:	mov	x1, x21
   24450:	str	wzr, [x23, x22]
   24454:	bl	c730 <mpfr_roundeven@plt>
   24458:	ldr	w8, [x23, x22]
   2445c:	str	w24, [x23, x22]
   24460:	tbnz	w8, #1, 244a0 <mpfr_rint_roundeven@@Base+0xe0>
   24464:	ldr	w3, [sp, #8]
   24468:	mov	x1, sp
   2446c:	mov	x0, x20
   24470:	mov	w2, w19
   24474:	bl	cb70 <mpfr_set4@plt>
   24478:	mov	w19, w0
   2447c:	mov	x0, sp
   24480:	bl	c4f0 <mpfr_clear@plt>
   24484:	mov	w0, w19
   24488:	ldp	x20, x19, [sp, #80]
   2448c:	ldp	x22, x21, [sp, #64]
   24490:	ldp	x24, x23, [sp, #48]
   24494:	ldp	x29, x30, [sp, #32]
   24498:	add	sp, sp, #0x60
   2449c:	ret
   244a0:	ldr	w2, [x21, #8]
   244a4:	mov	x0, x20
   244a8:	mov	w1, w19
   244ac:	bl	c3a0 <mpfr_overflow@plt>
   244b0:	b	24478 <mpfr_rint_roundeven@@Base+0xb8>

00000000000244b4 <mpfr_rint_round@@Base>:
   244b4:	sub	sp, sp, #0x60
   244b8:	stp	x29, x30, [sp, #32]
   244bc:	stp	x24, x23, [sp, #48]
   244c0:	stp	x22, x21, [sp, #64]
   244c4:	stp	x20, x19, [sp, #80]
   244c8:	ldr	x8, [x1, #16]
   244cc:	mov	x9, #0x4                   	// #4
   244d0:	movk	x9, #0x8000, lsl #48
   244d4:	mov	w19, w2
   244d8:	mov	x21, x1
   244dc:	cmp	x8, x9
   244e0:	mov	x20, x0
   244e4:	add	x29, sp, #0x20
   244e8:	b.lt	244f8 <mpfr_rint_round@@Base+0x44>  // b.tstop
   244ec:	mov	x0, x21
   244f0:	bl	c600 <mpfr_integer_p@plt>
   244f4:	cbz	w0, 24514 <mpfr_rint_round@@Base+0x60>
   244f8:	ldr	w3, [x21, #8]
   244fc:	mov	x0, x20
   24500:	mov	x1, x21
   24504:	mov	w2, w19
   24508:	bl	cb70 <mpfr_set4@plt>
   2450c:	mov	w19, w0
   24510:	b	24578 <mpfr_rint_round@@Base+0xc4>
   24514:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24518:	ldr	x1, [x0, #2800]
   2451c:	add	x0, x0, #0xaf0
   24520:	blr	x1
   24524:	mrs	x23, tpidr_el0
   24528:	ldr	x1, [x21]
   2452c:	ldr	w24, [x23, x0]
   24530:	mov	x22, x0
   24534:	mov	x0, sp
   24538:	bl	cf60 <mpfr_init2@plt>
   2453c:	mov	x0, sp
   24540:	mov	x1, x21
   24544:	str	wzr, [x23, x22]
   24548:	bl	c6c0 <mpfr_round@plt>
   2454c:	ldr	w8, [x23, x22]
   24550:	str	w24, [x23, x22]
   24554:	tbnz	w8, #1, 24594 <mpfr_rint_round@@Base+0xe0>
   24558:	ldr	w3, [sp, #8]
   2455c:	mov	x1, sp
   24560:	mov	x0, x20
   24564:	mov	w2, w19
   24568:	bl	cb70 <mpfr_set4@plt>
   2456c:	mov	w19, w0
   24570:	mov	x0, sp
   24574:	bl	c4f0 <mpfr_clear@plt>
   24578:	mov	w0, w19
   2457c:	ldp	x20, x19, [sp, #80]
   24580:	ldp	x22, x21, [sp, #64]
   24584:	ldp	x24, x23, [sp, #48]
   24588:	ldp	x29, x30, [sp, #32]
   2458c:	add	sp, sp, #0x60
   24590:	ret
   24594:	ldr	w2, [x21, #8]
   24598:	mov	x0, x20
   2459c:	mov	w1, w19
   245a0:	bl	c3a0 <mpfr_overflow@plt>
   245a4:	b	2456c <mpfr_rint_round@@Base+0xb8>

00000000000245a8 <mpfr_rint_trunc@@Base>:
   245a8:	sub	sp, sp, #0x60
   245ac:	stp	x29, x30, [sp, #32]
   245b0:	stp	x24, x23, [sp, #48]
   245b4:	stp	x22, x21, [sp, #64]
   245b8:	stp	x20, x19, [sp, #80]
   245bc:	ldr	x8, [x1, #16]
   245c0:	mov	x9, #0x4                   	// #4
   245c4:	movk	x9, #0x8000, lsl #48
   245c8:	mov	w19, w2
   245cc:	mov	x21, x1
   245d0:	cmp	x8, x9
   245d4:	mov	x20, x0
   245d8:	add	x29, sp, #0x20
   245dc:	b.lt	245ec <mpfr_rint_trunc@@Base+0x44>  // b.tstop
   245e0:	mov	x0, x21
   245e4:	bl	c600 <mpfr_integer_p@plt>
   245e8:	cbz	w0, 24608 <mpfr_rint_trunc@@Base+0x60>
   245ec:	ldr	w3, [x21, #8]
   245f0:	mov	x0, x20
   245f4:	mov	x1, x21
   245f8:	mov	w2, w19
   245fc:	bl	cb70 <mpfr_set4@plt>
   24600:	mov	w19, w0
   24604:	b	24660 <mpfr_rint_trunc@@Base+0xb8>
   24608:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2460c:	ldr	x1, [x0, #2800]
   24610:	add	x0, x0, #0xaf0
   24614:	blr	x1
   24618:	mrs	x23, tpidr_el0
   2461c:	ldr	x1, [x21]
   24620:	ldr	w24, [x23, x0]
   24624:	mov	x22, x0
   24628:	mov	x0, sp
   2462c:	bl	cf60 <mpfr_init2@plt>
   24630:	mov	x0, sp
   24634:	mov	x1, x21
   24638:	bl	c8b0 <mpfr_trunc@plt>
   2463c:	ldr	w3, [sp, #8]
   24640:	mov	x1, sp
   24644:	mov	x0, x20
   24648:	mov	w2, w19
   2464c:	str	w24, [x23, x22]
   24650:	bl	cb70 <mpfr_set4@plt>
   24654:	mov	w19, w0
   24658:	mov	x0, sp
   2465c:	bl	c4f0 <mpfr_clear@plt>
   24660:	mov	w0, w19
   24664:	ldp	x20, x19, [sp, #80]
   24668:	ldp	x22, x21, [sp, #64]
   2466c:	ldp	x24, x23, [sp, #48]
   24670:	ldp	x29, x30, [sp, #32]
   24674:	add	sp, sp, #0x60
   24678:	ret

000000000002467c <mpfr_rint_ceil@@Base>:
   2467c:	sub	sp, sp, #0x60
   24680:	stp	x29, x30, [sp, #32]
   24684:	stp	x24, x23, [sp, #48]
   24688:	stp	x22, x21, [sp, #64]
   2468c:	stp	x20, x19, [sp, #80]
   24690:	ldr	x8, [x1, #16]
   24694:	mov	x9, #0x4                   	// #4
   24698:	movk	x9, #0x8000, lsl #48
   2469c:	mov	w19, w2
   246a0:	mov	x21, x1
   246a4:	cmp	x8, x9
   246a8:	mov	x20, x0
   246ac:	add	x29, sp, #0x20
   246b0:	b.lt	246c0 <mpfr_rint_ceil@@Base+0x44>  // b.tstop
   246b4:	mov	x0, x21
   246b8:	bl	c600 <mpfr_integer_p@plt>
   246bc:	cbz	w0, 246dc <mpfr_rint_ceil@@Base+0x60>
   246c0:	ldr	w3, [x21, #8]
   246c4:	mov	x0, x20
   246c8:	mov	x1, x21
   246cc:	mov	w2, w19
   246d0:	bl	cb70 <mpfr_set4@plt>
   246d4:	mov	w19, w0
   246d8:	b	24740 <mpfr_rint_ceil@@Base+0xc4>
   246dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   246e0:	ldr	x1, [x0, #2800]
   246e4:	add	x0, x0, #0xaf0
   246e8:	blr	x1
   246ec:	mrs	x23, tpidr_el0
   246f0:	ldr	x1, [x21]
   246f4:	ldr	w24, [x23, x0]
   246f8:	mov	x22, x0
   246fc:	mov	x0, sp
   24700:	bl	cf60 <mpfr_init2@plt>
   24704:	mov	x0, sp
   24708:	mov	x1, x21
   2470c:	str	wzr, [x23, x22]
   24710:	bl	ce70 <mpfr_ceil@plt>
   24714:	ldr	w8, [x23, x22]
   24718:	str	w24, [x23, x22]
   2471c:	tbnz	w8, #1, 2475c <mpfr_rint_ceil@@Base+0xe0>
   24720:	ldr	w3, [sp, #8]
   24724:	mov	x1, sp
   24728:	mov	x0, x20
   2472c:	mov	w2, w19
   24730:	bl	cb70 <mpfr_set4@plt>
   24734:	mov	w19, w0
   24738:	mov	x0, sp
   2473c:	bl	c4f0 <mpfr_clear@plt>
   24740:	mov	w0, w19
   24744:	ldp	x20, x19, [sp, #80]
   24748:	ldp	x22, x21, [sp, #64]
   2474c:	ldp	x24, x23, [sp, #48]
   24750:	ldp	x29, x30, [sp, #32]
   24754:	add	sp, sp, #0x60
   24758:	ret
   2475c:	mov	w2, #0x1                   	// #1
   24760:	mov	x0, x20
   24764:	mov	w1, w19
   24768:	bl	c3a0 <mpfr_overflow@plt>
   2476c:	b	24734 <mpfr_rint_ceil@@Base+0xb8>

0000000000024770 <mpfr_rint_floor@@Base>:
   24770:	sub	sp, sp, #0x60
   24774:	stp	x29, x30, [sp, #32]
   24778:	stp	x24, x23, [sp, #48]
   2477c:	stp	x22, x21, [sp, #64]
   24780:	stp	x20, x19, [sp, #80]
   24784:	ldr	x8, [x1, #16]
   24788:	mov	x9, #0x4                   	// #4
   2478c:	movk	x9, #0x8000, lsl #48
   24790:	mov	w19, w2
   24794:	mov	x21, x1
   24798:	cmp	x8, x9
   2479c:	mov	x20, x0
   247a0:	add	x29, sp, #0x20
   247a4:	b.lt	247b4 <mpfr_rint_floor@@Base+0x44>  // b.tstop
   247a8:	mov	x0, x21
   247ac:	bl	c600 <mpfr_integer_p@plt>
   247b0:	cbz	w0, 247d0 <mpfr_rint_floor@@Base+0x60>
   247b4:	ldr	w3, [x21, #8]
   247b8:	mov	x0, x20
   247bc:	mov	x1, x21
   247c0:	mov	w2, w19
   247c4:	bl	cb70 <mpfr_set4@plt>
   247c8:	mov	w19, w0
   247cc:	b	24834 <mpfr_rint_floor@@Base+0xc4>
   247d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   247d4:	ldr	x1, [x0, #2800]
   247d8:	add	x0, x0, #0xaf0
   247dc:	blr	x1
   247e0:	mrs	x23, tpidr_el0
   247e4:	ldr	x1, [x21]
   247e8:	ldr	w24, [x23, x0]
   247ec:	mov	x22, x0
   247f0:	mov	x0, sp
   247f4:	bl	cf60 <mpfr_init2@plt>
   247f8:	mov	x0, sp
   247fc:	mov	x1, x21
   24800:	str	wzr, [x23, x22]
   24804:	bl	c6b0 <mpfr_floor@plt>
   24808:	ldr	w8, [x23, x22]
   2480c:	str	w24, [x23, x22]
   24810:	tbnz	w8, #1, 24850 <mpfr_rint_floor@@Base+0xe0>
   24814:	ldr	w3, [sp, #8]
   24818:	mov	x1, sp
   2481c:	mov	x0, x20
   24820:	mov	w2, w19
   24824:	bl	cb70 <mpfr_set4@plt>
   24828:	mov	w19, w0
   2482c:	mov	x0, sp
   24830:	bl	c4f0 <mpfr_clear@plt>
   24834:	mov	w0, w19
   24838:	ldp	x20, x19, [sp, #80]
   2483c:	ldp	x22, x21, [sp, #64]
   24840:	ldp	x24, x23, [sp, #48]
   24844:	ldp	x29, x30, [sp, #32]
   24848:	add	sp, sp, #0x60
   2484c:	ret
   24850:	mov	w2, #0xffffffff            	// #-1
   24854:	mov	x0, x20
   24858:	mov	w1, w19
   2485c:	bl	c3a0 <mpfr_overflow@plt>
   24860:	b	24828 <mpfr_rint_floor@@Base+0xb8>

0000000000024864 <mpfr_ui_div@@Base>:
   24864:	sub	sp, sp, #0x80
   24868:	stp	x29, x30, [sp, #32]
   2486c:	stp	x26, x25, [sp, #64]
   24870:	stp	x24, x23, [sp, #80]
   24874:	stp	x22, x21, [sp, #96]
   24878:	stp	x20, x19, [sp, #112]
   2487c:	ldr	x9, [x2, #16]
   24880:	mov	x8, #0x2                   	// #2
   24884:	movk	x8, #0x8000, lsl #48
   24888:	add	x10, x8, #0x2
   2488c:	cmp	x9, x10
   24890:	mov	x19, x0
   24894:	str	x27, [sp, #48]
   24898:	add	x29, sp, #0x20
   2489c:	b.lt	249a8 <mpfr_ui_div@@Base+0x144>  // b.tstop
   248a0:	cbz	x1, 24a00 <mpfr_ui_div@@Base+0x19c>
   248a4:	add	x9, x29, #0x18
   248a8:	clz	x11, x1
   248ac:	mov	w8, #0x40                  	// #64
   248b0:	mov	w10, #0x1                   	// #1
   248b4:	str	x9, [sp, #24]
   248b8:	lsl	x9, x1, x11
   248bc:	mov	w20, w3
   248c0:	str	x8, [sp]
   248c4:	str	w10, [sp, #8]
   248c8:	str	x9, [x29, #24]
   248cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   248d0:	ldr	x1, [x0, #2800]
   248d4:	add	x0, x0, #0xaf0
   248d8:	blr	x1
   248dc:	mrs	x24, tpidr_el0
   248e0:	ldr	w26, [x24, x0]
   248e4:	mov	x21, x0
   248e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   248ec:	ldr	x1, [x0, #2736]
   248f0:	add	x0, x0, #0xab0
   248f4:	blr	x1
   248f8:	ldr	x25, [x24, x0]
   248fc:	mov	x22, x0
   24900:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24904:	ldr	x1, [x0, #2768]
   24908:	add	x0, x0, #0xad0
   2490c:	blr	x1
   24910:	ldr	x27, [x24, x0]
   24914:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   24918:	mov	x23, x0
   2491c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   24920:	str	x10, [x24, x0]
   24924:	sub	x8, x8, x11
   24928:	mov	x1, sp
   2492c:	mov	x0, x19
   24930:	str	x9, [x24, x22]
   24934:	str	x8, [sp, #16]
   24938:	bl	caf0 <mpfr_div@plt>
   2493c:	ldr	w8, [x24, x21]
   24940:	str	x25, [x24, x22]
   24944:	str	x27, [x24, x23]
   24948:	orr	w9, w8, w26
   2494c:	str	w9, [x24, x21]
   24950:	ldr	x10, [x19, #16]
   24954:	mov	w8, w0
   24958:	cmp	x10, x27
   2495c:	b.gt	24a18 <mpfr_ui_div@@Base+0x1b4>
   24960:	cmp	x10, x25
   24964:	b.lt	24a18 <mpfr_ui_div@@Base+0x1b4>  // b.tstop
   24968:	cbz	w8, 24984 <mpfr_ui_div@@Base+0x120>
   2496c:	orr	w9, w9, #0x8
   24970:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24974:	ldr	x1, [x0, #2800]
   24978:	add	x0, x0, #0xaf0
   2497c:	blr	x1
   24980:	str	w9, [x24, x0]
   24984:	ldp	x20, x19, [sp, #112]
   24988:	ldp	x22, x21, [sp, #96]
   2498c:	ldp	x24, x23, [sp, #80]
   24990:	ldp	x26, x25, [sp, #64]
   24994:	ldr	x27, [sp, #48]
   24998:	ldp	x29, x30, [sp, #32]
   2499c:	mov	w0, w8
   249a0:	add	sp, sp, #0x80
   249a4:	ret
   249a8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   249ac:	cmp	x9, x10
   249b0:	b.eq	24a00 <mpfr_ui_div@@Base+0x19c>  // b.none
   249b4:	mov	x10, #0x2                   	// #2
   249b8:	movk	x10, #0x8000, lsl #48
   249bc:	cmp	x9, x10
   249c0:	b.eq	24a30 <mpfr_ui_div@@Base+0x1cc>  // b.none
   249c4:	cbz	x1, 24a30 <mpfr_ui_div@@Base+0x1cc>
   249c8:	ldr	w8, [x2, #8]
   249cc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   249d0:	str	x9, [x19, #16]
   249d4:	str	w8, [x19, #8]
   249d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   249dc:	ldr	x1, [x0, #2800]
   249e0:	add	x0, x0, #0xaf0
   249e4:	blr	x1
   249e8:	mrs	x9, tpidr_el0
   249ec:	ldr	w10, [x9, x0]
   249f0:	mov	w8, wzr
   249f4:	orr	w10, w10, #0x20
   249f8:	str	w10, [x9, x0]
   249fc:	b	24984 <mpfr_ui_div@@Base+0x120>
   24a00:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   24a04:	str	x9, [x19, #16]
   24a08:	ldr	w9, [x2, #8]
   24a0c:	mov	w8, wzr
   24a10:	str	w9, [x19, #8]
   24a14:	b	24984 <mpfr_ui_div@@Base+0x120>
   24a18:	mov	x0, x19
   24a1c:	mov	w1, w8
   24a20:	mov	w2, w20
   24a24:	bl	d020 <mpfr_check_range@plt>
   24a28:	mov	w8, w0
   24a2c:	b	24984 <mpfr_ui_div@@Base+0x120>
   24a30:	str	x8, [x19, #16]
   24a34:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24a38:	ldr	x1, [x0, #2800]
   24a3c:	add	x0, x0, #0xaf0
   24a40:	blr	x1
   24a44:	mrs	x9, tpidr_el0
   24a48:	ldr	w10, [x9, x0]
   24a4c:	mov	w8, wzr
   24a50:	orr	w10, w10, #0x4
   24a54:	str	w10, [x9, x0]
   24a58:	b	24984 <mpfr_ui_div@@Base+0x120>

0000000000024a5c <mpfr_ui_sub@@Base>:
   24a5c:	sub	sp, sp, #0x80
   24a60:	stp	x20, x19, [sp, #112]
   24a64:	mov	w19, w3
   24a68:	mov	x20, x0
   24a6c:	stp	x29, x30, [sp, #32]
   24a70:	str	x27, [sp, #48]
   24a74:	stp	x26, x25, [sp, #64]
   24a78:	stp	x24, x23, [sp, #80]
   24a7c:	stp	x22, x21, [sp, #96]
   24a80:	add	x29, sp, #0x20
   24a84:	cbz	x1, 24ba4 <mpfr_ui_sub@@Base+0x148>
   24a88:	ldr	x9, [x2, #16]
   24a8c:	mov	x8, #0x2                   	// #2
   24a90:	movk	x8, #0x8000, lsl #48
   24a94:	add	x10, x8, #0x2
   24a98:	cmp	x9, x10
   24a9c:	b.lt	24bb8 <mpfr_ui_sub@@Base+0x15c>  // b.tstop
   24aa0:	add	x9, x29, #0x18
   24aa4:	clz	x11, x1
   24aa8:	mov	w8, #0x40                  	// #64
   24aac:	mov	w10, #0x1                   	// #1
   24ab0:	str	x9, [sp, #24]
   24ab4:	lsl	x9, x1, x11
   24ab8:	str	x8, [sp]
   24abc:	str	w10, [sp, #8]
   24ac0:	str	x9, [x29, #24]
   24ac4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24ac8:	ldr	x1, [x0, #2800]
   24acc:	add	x0, x0, #0xaf0
   24ad0:	blr	x1
   24ad4:	mrs	x24, tpidr_el0
   24ad8:	ldr	w26, [x24, x0]
   24adc:	mov	x21, x0
   24ae0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24ae4:	ldr	x1, [x0, #2736]
   24ae8:	add	x0, x0, #0xab0
   24aec:	blr	x1
   24af0:	ldr	x25, [x24, x0]
   24af4:	mov	x22, x0
   24af8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24afc:	ldr	x1, [x0, #2768]
   24b00:	add	x0, x0, #0xad0
   24b04:	blr	x1
   24b08:	ldr	x27, [x24, x0]
   24b0c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   24b10:	mov	x23, x0
   24b14:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   24b18:	str	x10, [x24, x0]
   24b1c:	sub	x8, x8, x11
   24b20:	mov	x1, sp
   24b24:	mov	x0, x20
   24b28:	mov	w3, w19
   24b2c:	str	x9, [x24, x22]
   24b30:	str	x8, [sp, #16]
   24b34:	bl	bfd0 <mpfr_sub@plt>
   24b38:	ldr	w8, [x24, x21]
   24b3c:	str	x25, [x24, x22]
   24b40:	str	x27, [x24, x23]
   24b44:	orr	w9, w8, w26
   24b48:	str	w9, [x24, x21]
   24b4c:	ldr	x10, [x20, #16]
   24b50:	mov	w8, w0
   24b54:	cmp	x10, x27
   24b58:	b.gt	24c00 <mpfr_ui_sub@@Base+0x1a4>
   24b5c:	cmp	x10, x25
   24b60:	b.lt	24c00 <mpfr_ui_sub@@Base+0x1a4>  // b.tstop
   24b64:	cbz	w8, 24b80 <mpfr_ui_sub@@Base+0x124>
   24b68:	orr	w9, w9, #0x8
   24b6c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24b70:	ldr	x1, [x0, #2800]
   24b74:	add	x0, x0, #0xaf0
   24b78:	blr	x1
   24b7c:	str	w9, [x24, x0]
   24b80:	ldp	x20, x19, [sp, #112]
   24b84:	ldp	x22, x21, [sp, #96]
   24b88:	ldp	x24, x23, [sp, #80]
   24b8c:	ldp	x26, x25, [sp, #64]
   24b90:	ldr	x27, [sp, #48]
   24b94:	ldp	x29, x30, [sp, #32]
   24b98:	mov	w0, w8
   24b9c:	add	sp, sp, #0x80
   24ba0:	ret
   24ba4:	mov	x0, x20
   24ba8:	mov	x1, x2
   24bac:	mov	w2, w19
   24bb0:	bl	c1d0 <mpfr_neg@plt>
   24bb4:	b	24c3c <mpfr_ui_sub@@Base+0x1e0>
   24bb8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   24bbc:	cmp	x9, x10
   24bc0:	b.eq	24c14 <mpfr_ui_sub@@Base+0x1b8>  // b.none
   24bc4:	mov	x10, #0x2                   	// #2
   24bc8:	movk	x10, #0x8000, lsl #48
   24bcc:	cmp	x9, x10
   24bd0:	b.ne	24c2c <mpfr_ui_sub@@Base+0x1d0>  // b.any
   24bd4:	str	x8, [x20, #16]
   24bd8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24bdc:	ldr	x1, [x0, #2800]
   24be0:	add	x0, x0, #0xaf0
   24be4:	blr	x1
   24be8:	mrs	x9, tpidr_el0
   24bec:	ldr	w10, [x9, x0]
   24bf0:	mov	w8, wzr
   24bf4:	orr	w10, w10, #0x4
   24bf8:	str	w10, [x9, x0]
   24bfc:	b	24b80 <mpfr_ui_sub@@Base+0x124>
   24c00:	mov	x0, x20
   24c04:	mov	w1, w8
   24c08:	mov	w2, w19
   24c0c:	bl	d020 <mpfr_check_range@plt>
   24c10:	b	24c3c <mpfr_ui_sub@@Base+0x1e0>
   24c14:	str	x10, [x20, #16]
   24c18:	ldr	w9, [x2, #8]
   24c1c:	mov	w8, wzr
   24c20:	neg	w9, w9
   24c24:	str	w9, [x20, #8]
   24c28:	b	24b80 <mpfr_ui_sub@@Base+0x124>
   24c2c:	mov	x0, x20
   24c30:	mov	x2, xzr
   24c34:	mov	w3, w19
   24c38:	bl	cac0 <mpfr_set_ui_2exp@plt>
   24c3c:	mov	w8, w0
   24c40:	b	24b80 <mpfr_ui_sub@@Base+0x124>

0000000000024c44 <mpfr_urandom@@Base>:
   24c44:	sub	sp, sp, #0x70
   24c48:	stp	x29, x30, [sp, #16]
   24c4c:	stp	x28, x27, [sp, #32]
   24c50:	stp	x26, x25, [sp, #48]
   24c54:	stp	x24, x23, [sp, #64]
   24c58:	stp	x22, x21, [sp, #80]
   24c5c:	stp	x20, x19, [sp, #96]
   24c60:	add	x29, sp, #0x10
   24c64:	str	w2, [sp, #4]
   24c68:	mov	x21, x1
   24c6c:	mov	x20, x0
   24c70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24c74:	ldr	x1, [x0, #2800]
   24c78:	add	x0, x0, #0xaf0
   24c7c:	blr	x1
   24c80:	mrs	x23, tpidr_el0
   24c84:	ldr	w8, [x23, x0]
   24c88:	str	w8, [sp]
   24c8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24c90:	ldr	x1, [x0, #2736]
   24c94:	add	x0, x0, #0xab0
   24c98:	blr	x1
   24c9c:	ldr	x25, [x23, x0]
   24ca0:	mov	x8, x0
   24ca4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24ca8:	ldr	x1, [x0, #2768]
   24cac:	add	x0, x0, #0xad0
   24cb0:	blr	x1
   24cb4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   24cb8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   24cbc:	ldr	x26, [x23, x0]
   24cc0:	str	x9, [x23, x8]
   24cc4:	str	x10, [x23, x0]
   24cc8:	ldr	x22, [x20, #24]
   24ccc:	ldr	x28, [x20]
   24cd0:	mov	x27, xzr
   24cd4:	mov	w8, #0x1                   	// #1
   24cd8:	mov	w19, #0x8                   	// #8
   24cdc:	mov	x24, #0xbfffffffffffffff    	// #-4611686018427387905
   24ce0:	str	xzr, [x20, #16]
   24ce4:	str	w8, [x20, #8]
   24ce8:	mov	w2, #0x8                   	// #8
   24cec:	mov	x0, x22
   24cf0:	mov	x1, x21
   24cf4:	bl	ccf0 <mpfr_rand_raw@plt>
   24cf8:	ldr	x8, [x22]
   24cfc:	clz	x9, x8
   24d00:	cmp	x8, #0x0
   24d04:	sub	w8, w9, #0x38
   24d08:	csel	w8, w19, w8, eq  // eq = none
   24d0c:	cmp	x27, x24
   24d10:	sxtw	x9, w8
   24d14:	csel	x9, x9, xzr, gt
   24d18:	cmp	w8, #0x8
   24d1c:	sub	x27, x27, x9
   24d20:	b.eq	24ce8 <mpfr_urandom@@Base+0xa4>  // b.none
   24d24:	subs	x2, x28, #0x1
   24d28:	b.eq	24e54 <mpfr_urandom@@Base+0x210>  // b.none
   24d2c:	mov	x0, x22
   24d30:	mov	x1, x21
   24d34:	bl	ccf0 <mpfr_rand_raw@plt>
   24d38:	ldr	x8, [x20]
   24d3c:	sub	x9, x8, #0x1
   24d40:	add	x8, x8, #0x3e
   24d44:	cmp	x9, #0x0
   24d48:	csel	x8, x8, x9, lt  // lt = tstop
   24d4c:	asr	x19, x8, #6
   24d50:	add	x2, x19, #0x1
   24d54:	lsl	x8, x2, #6
   24d58:	subs	x3, x8, x28
   24d5c:	b.eq	24d6c <mpfr_urandom@@Base+0x128>  // b.none
   24d60:	mov	x0, x22
   24d64:	mov	x1, x22
   24d68:	bl	c120 <__gmpn_lshift@plt>
   24d6c:	lsl	x8, x19, #3
   24d70:	ldr	x9, [x22, x8]
   24d74:	orr	x9, x9, #0x8000000000000000
   24d78:	str	x9, [x22, x8]
   24d7c:	add	x0, sp, #0x8
   24d80:	mov	w2, #0x1                   	// #1
   24d84:	mov	x1, x21
   24d88:	bl	ccf0 <mpfr_rand_raw@plt>
   24d8c:	ldr	w19, [sp, #4]
   24d90:	cmp	w19, #0x2
   24d94:	b.eq	24db0 <mpfr_urandom@@Base+0x16c>  // b.none
   24d98:	cmp	w19, #0x4
   24d9c:	b.eq	24db0 <mpfr_urandom@@Base+0x16c>  // b.none
   24da0:	mov	w8, #0xffffffff            	// #-1
   24da4:	cbnz	w19, 24dbc <mpfr_urandom@@Base+0x178>
   24da8:	ldr	x9, [sp, #8]
   24dac:	cbz	x9, 24dbc <mpfr_urandom@@Base+0x178>
   24db0:	mov	x0, x20
   24db4:	bl	c5c0 <mpfr_nextabove@plt>
   24db8:	mov	w8, #0x1                   	// #1
   24dbc:	ldr	x9, [x20, #16]
   24dc0:	add	x9, x9, x27
   24dc4:	str	x9, [x20, #16]
   24dc8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24dcc:	ldr	x1, [x0, #2800]
   24dd0:	add	x0, x0, #0xaf0
   24dd4:	blr	x1
   24dd8:	ldr	w10, [sp]
   24ddc:	str	w10, [x23, x0]
   24de0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24de4:	ldr	x1, [x0, #2736]
   24de8:	add	x0, x0, #0xab0
   24dec:	blr	x1
   24df0:	str	x25, [x23, x0]
   24df4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24df8:	ldr	x1, [x0, #2768]
   24dfc:	add	x0, x0, #0xad0
   24e00:	blr	x1
   24e04:	cmp	x9, x26
   24e08:	str	x26, [x23, x0]
   24e0c:	b.gt	24e60 <mpfr_urandom@@Base+0x21c>
   24e10:	cmp	x9, x25
   24e14:	b.lt	24e60 <mpfr_urandom@@Base+0x21c>  // b.tstop
   24e18:	orr	w9, w10, #0x8
   24e1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24e20:	ldr	x1, [x0, #2800]
   24e24:	add	x0, x0, #0xaf0
   24e28:	blr	x1
   24e2c:	str	w9, [x23, x0]
   24e30:	ldp	x20, x19, [sp, #96]
   24e34:	ldp	x22, x21, [sp, #80]
   24e38:	ldp	x24, x23, [sp, #64]
   24e3c:	ldp	x26, x25, [sp, #48]
   24e40:	ldp	x28, x27, [sp, #32]
   24e44:	ldp	x29, x30, [sp, #16]
   24e48:	mov	w0, w8
   24e4c:	add	sp, sp, #0x70
   24e50:	ret
   24e54:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   24e58:	str	x8, [x22]
   24e5c:	b	24d7c <mpfr_urandom@@Base+0x138>
   24e60:	mov	x0, x20
   24e64:	mov	w1, w8
   24e68:	mov	w2, w19
   24e6c:	bl	d020 <mpfr_check_range@plt>
   24e70:	mov	w8, w0
   24e74:	b	24e30 <mpfr_urandom@@Base+0x1ec>

0000000000024e78 <mpfr_rand_raw@@Base>:
   24e78:	sub	sp, sp, #0x40
   24e7c:	str	x21, [sp, #32]
   24e80:	stp	x20, x19, [sp, #48]
   24e84:	mov	x20, x2
   24e88:	mov	x21, x1
   24e8c:	cmp	x2, #0x0
   24e90:	mov	x19, x0
   24e94:	stp	x29, x30, [sp, #16]
   24e98:	add	x29, sp, #0x10
   24e9c:	b.le	24f04 <mpfr_rand_raw@@Base+0x8c>
   24ea0:	mov	x0, sp
   24ea4:	bl	c400 <mpfr_mpz_init@plt>
   24ea8:	mov	x0, sp
   24eac:	mov	x1, x21
   24eb0:	mov	x2, x20
   24eb4:	bl	d200 <__gmpz_urandomb@plt>
   24eb8:	ldr	x1, [sp, #8]
   24ebc:	cmp	x1, x19
   24ec0:	b.eq	24ee8 <mpfr_rand_raw@@Base+0x70>  // b.none
   24ec4:	sub	x8, x20, #0x1
   24ec8:	add	x9, x20, #0x3e
   24ecc:	cmp	x8, #0x0
   24ed0:	csel	x8, x9, x8, lt  // lt = tstop
   24ed4:	asr	x8, x8, #6
   24ed8:	lsl	x8, x8, #3
   24edc:	add	x2, x8, #0x8
   24ee0:	mov	x0, x19
   24ee4:	bl	be50 <memcpy@plt>
   24ee8:	mov	x0, sp
   24eec:	bl	c610 <mpfr_mpz_clear@plt>
   24ef0:	ldp	x20, x19, [sp, #48]
   24ef4:	ldr	x21, [sp, #32]
   24ef8:	ldp	x29, x30, [sp, #16]
   24efc:	add	sp, sp, #0x40
   24f00:	ret
   24f04:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   24f08:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   24f0c:	add	x0, x0, #0x167
   24f10:	add	x2, x2, #0x172
   24f14:	mov	w1, #0x26                  	// #38
   24f18:	bl	d030 <mpfr_assert_fail@plt>
   24f1c:	b	24ea0 <mpfr_rand_raw@@Base+0x28>

0000000000024f20 <mpfr_urandomb@@Base>:
   24f20:	stp	x29, x30, [sp, #-64]!
   24f24:	stp	x22, x21, [sp, #32]
   24f28:	stp	x20, x19, [sp, #48]
   24f2c:	ldr	x2, [x0]
   24f30:	ldr	x19, [x0, #24]
   24f34:	str	x23, [sp, #16]
   24f38:	mov	w8, #0x1                   	// #1
   24f3c:	sub	x9, x2, #0x1
   24f40:	add	x10, x2, #0x3e
   24f44:	cmp	x9, #0x0
   24f48:	csel	x9, x10, x9, lt  // lt = tstop
   24f4c:	asr	x23, x9, #6
   24f50:	add	x21, x23, #0x1
   24f54:	mov	x20, x0
   24f58:	str	w8, [x0, #8]
   24f5c:	lsl	w8, w21, #6
   24f60:	mov	x0, x19
   24f64:	mov	x29, sp
   24f68:	sub	w22, w8, w2
   24f6c:	bl	ccf0 <mpfr_rand_raw@plt>
   24f70:	cbz	w22, 24f88 <mpfr_urandomb@@Base+0x68>
   24f74:	mov	x0, x19
   24f78:	mov	x1, x19
   24f7c:	mov	x2, x21
   24f80:	mov	w3, w22
   24f84:	bl	c120 <__gmpn_lshift@plt>
   24f88:	cbz	x21, 24fb0 <mpfr_urandomb@@Base+0x90>
   24f8c:	mov	x21, xzr
   24f90:	mov	x22, xzr
   24f94:	ldr	x8, [x19, x23, lsl #3]
   24f98:	cbnz	x8, 24fc0 <mpfr_urandomb@@Base+0xa0>
   24f9c:	sub	x23, x23, #0x1
   24fa0:	sub	x22, x22, #0x40
   24fa4:	cmn	x23, #0x1
   24fa8:	sub	x21, x21, #0x8
   24fac:	b.ne	24f94 <mpfr_urandomb@@Base+0x74>  // b.any
   24fb0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   24fb4:	mov	w0, wzr
   24fb8:	str	x8, [x20, #16]
   24fbc:	b	2504c <mpfr_urandomb@@Base+0x12c>
   24fc0:	clz	x3, x8
   24fc4:	sub	x8, x22, x3
   24fc8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24fcc:	ldr	x1, [x0, #2736]
   24fd0:	add	x0, x0, #0xab0
   24fd4:	blr	x1
   24fd8:	mrs	x9, tpidr_el0
   24fdc:	ldr	x10, [x9, x0]
   24fe0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   24fe4:	ldr	x1, [x0, #2768]
   24fe8:	add	x0, x0, #0xad0
   24fec:	blr	x1
   24ff0:	cmp	x8, x10
   24ff4:	b.lt	25060 <mpfr_urandomb@@Base+0x140>  // b.tstop
   24ff8:	ldr	x10, [x9, x0]
   24ffc:	cmp	x8, x10
   25000:	b.gt	25060 <mpfr_urandomb@@Base+0x140>
   25004:	add	x2, x23, #0x1
   25008:	str	x8, [x20, #16]
   2500c:	cbz	w3, 25024 <mpfr_urandomb@@Base+0x104>
   25010:	sub	x0, x19, x21
   25014:	mov	x1, x19
   25018:	bl	c120 <__gmpn_lshift@plt>
   2501c:	cbnz	x22, 25038 <mpfr_urandomb@@Base+0x118>
   25020:	b	25048 <mpfr_urandomb@@Base+0x128>
   25024:	cbz	x22, 25048 <mpfr_urandomb@@Base+0x128>
   25028:	sub	x0, x19, x21
   2502c:	mov	x1, x19
   25030:	bl	bf30 <__gmpn_copyd@plt>
   25034:	cbz	x22, 25048 <mpfr_urandomb@@Base+0x128>
   25038:	neg	x2, x21
   2503c:	mov	x0, x19
   25040:	mov	w1, wzr
   25044:	bl	c5b0 <memset@plt>
   25048:	mov	w0, wzr
   2504c:	ldp	x20, x19, [sp, #48]
   25050:	ldp	x22, x21, [sp, #32]
   25054:	ldr	x23, [sp, #16]
   25058:	ldp	x29, x30, [sp], #64
   2505c:	ret
   25060:	mov	x8, #0x2                   	// #2
   25064:	movk	x8, #0x8000, lsl #48
   25068:	str	x8, [x20, #16]
   2506c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25070:	ldr	x1, [x0, #2800]
   25074:	add	x0, x0, #0xaf0
   25078:	blr	x1
   2507c:	ldr	w8, [x9, x0]
   25080:	orr	w8, w8, #0x4
   25084:	str	w8, [x9, x0]
   25088:	mov	w0, #0x1                   	// #1
   2508c:	b	2504c <mpfr_urandomb@@Base+0x12c>

0000000000025090 <mpfr_get_z_2exp@@Base>:
   25090:	stp	x29, x30, [sp, #-48]!
   25094:	stp	x22, x21, [sp, #16]
   25098:	stp	x20, x19, [sp, #32]
   2509c:	ldr	x8, [x1, #16]
   250a0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   250a4:	mov	x19, x0
   250a8:	mov	x29, sp
   250ac:	cmp	x8, x9
   250b0:	b.le	2514c <mpfr_get_z_2exp@@Base+0xbc>
   250b4:	ldr	x8, [x1]
   250b8:	mov	x9, #0x1fffff0000          	// #137438887936
   250bc:	movk	x9, #0xffc1
   250c0:	mov	x20, x1
   250c4:	sub	x10, x8, #0x1
   250c8:	add	x11, x8, #0x3e
   250cc:	cmp	x10, #0x0
   250d0:	csel	x10, x11, x10, lt  // lt = tstop
   250d4:	asr	x22, x10, #6
   250d8:	cmp	x8, x9
   250dc:	add	x21, x22, #0x1
   250e0:	b.ge	25180 <mpfr_get_z_2exp@@Base+0xf0>  // b.tcont
   250e4:	lsl	x1, x21, #6
   250e8:	mov	x0, x19
   250ec:	bl	c910 <__gmpz_realloc2@plt>
   250f0:	ldr	w8, [x20]
   250f4:	ldr	x0, [x19, #8]
   250f8:	ldr	x1, [x20, #24]
   250fc:	neg	w8, w8
   25100:	ands	w3, w8, #0x3f
   25104:	b.eq	2519c <mpfr_get_z_2exp@@Base+0x10c>  // b.none
   25108:	mov	x2, x21
   2510c:	bl	c140 <__gmpn_rshift@plt>
   25110:	ldr	w8, [x20, #8]
   25114:	mvn	w9, w22
   25118:	cmp	w8, #0x0
   2511c:	csel	x8, x9, x21, lt  // lt = tstop
   25120:	str	w8, [x19, #4]
   25124:	ldr	x8, [x20, #16]
   25128:	ldr	x9, [x20]
   2512c:	eor	x10, x8, #0x8000000000000000
   25130:	cmp	x10, x9
   25134:	b.cc	251b0 <mpfr_get_z_2exp@@Base+0x120>  // b.lo, b.ul, b.last
   25138:	sub	x0, x8, x9
   2513c:	ldp	x20, x19, [sp, #32]
   25140:	ldp	x22, x21, [sp, #16]
   25144:	ldp	x29, x30, [sp], #48
   25148:	ret
   2514c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   25150:	cmp	x8, x9
   25154:	b.ne	251d8 <mpfr_get_z_2exp@@Base+0x148>  // b.any
   25158:	mov	x0, x19
   2515c:	mov	x1, xzr
   25160:	bl	c110 <__gmpz_set_ui@plt>
   25164:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25168:	ldr	x1, [x0, #2736]
   2516c:	add	x0, x0, #0xab0
   25170:	blr	x1
   25174:	mrs	x8, tpidr_el0
   25178:	ldr	x0, [x8, x0]
   2517c:	b	2513c <mpfr_get_z_2exp@@Base+0xac>
   25180:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   25184:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   25188:	add	x0, x0, #0x17d
   2518c:	add	x2, x2, #0x189
   25190:	mov	w1, #0x3c                  	// #60
   25194:	bl	d030 <mpfr_assert_fail@plt>
   25198:	b	250e4 <mpfr_get_z_2exp@@Base+0x54>
   2519c:	cmp	x0, x1
   251a0:	b.eq	25110 <mpfr_get_z_2exp@@Base+0x80>  // b.none
   251a4:	lsl	x2, x21, #3
   251a8:	bl	be50 <memcpy@plt>
   251ac:	b	25110 <mpfr_get_z_2exp@@Base+0x80>
   251b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   251b4:	ldr	x1, [x0, #2800]
   251b8:	add	x0, x0, #0xaf0
   251bc:	blr	x1
   251c0:	mrs	x8, tpidr_el0
   251c4:	ldr	w9, [x8, x0]
   251c8:	orr	w9, w9, #0x10
   251cc:	str	w9, [x8, x0]
   251d0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   251d4:	b	2513c <mpfr_get_z_2exp@@Base+0xac>
   251d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   251dc:	ldr	x1, [x0, #2800]
   251e0:	add	x0, x0, #0xaf0
   251e4:	blr	x1
   251e8:	mrs	x8, tpidr_el0
   251ec:	ldr	w9, [x8, x0]
   251f0:	orr	w9, w9, #0x10
   251f4:	str	w9, [x8, x0]
   251f8:	b	25158 <mpfr_get_z_2exp@@Base+0xc8>

00000000000251fc <mpfr_swap@@Base>:
   251fc:	ldr	x8, [x0]
   25200:	ldr	x9, [x1]
   25204:	str	x8, [x1]
   25208:	str	x9, [x0]
   2520c:	ldr	w8, [x0, #8]
   25210:	ldr	w9, [x1, #8]
   25214:	str	w8, [x1, #8]
   25218:	str	w9, [x0, #8]
   2521c:	ldr	x8, [x0, #16]
   25220:	ldr	x9, [x1, #16]
   25224:	str	x8, [x1, #16]
   25228:	str	x9, [x0, #16]
   2522c:	ldr	x8, [x0, #24]
   25230:	ldr	x9, [x1, #24]
   25234:	str	x8, [x1, #24]
   25238:	str	x9, [x0, #24]
   2523c:	ret

0000000000025240 <mpfr_fac_ui@@Base>:
   25240:	sub	sp, sp, #0xa0
   25244:	stp	x20, x19, [sp, #144]
   25248:	mov	w19, w2
   2524c:	subs	x9, x1, #0x1
   25250:	mov	x20, x0
   25254:	stp	x29, x30, [sp, #64]
   25258:	stp	x28, x27, [sp, #80]
   2525c:	stp	x26, x25, [sp, #96]
   25260:	stp	x24, x23, [sp, #112]
   25264:	stp	x22, x21, [sp, #128]
   25268:	add	x29, sp, #0x40
   2526c:	b.ls	2550c <mpfr_fac_ui@@Base+0x2cc>  // b.plast
   25270:	mov	x25, #0xfffffffffffffeff    	// #-257
   25274:	mov	x21, x1
   25278:	movk	x25, #0x7fff, lsl #48
   2527c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25280:	ldr	x1, [x0, #2800]
   25284:	add	x0, x0, #0xaf0
   25288:	blr	x1
   2528c:	mrs	x12, tpidr_el0
   25290:	ldr	w8, [x12, x0]
   25294:	str	w8, [sp, #20]
   25298:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2529c:	ldr	x1, [x0, #2736]
   252a0:	add	x0, x0, #0xab0
   252a4:	blr	x1
   252a8:	ldr	x10, [x12, x0]
   252ac:	mov	x8, x0
   252b0:	str	x10, [sp, #8]
   252b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   252b8:	ldr	x1, [x0, #2768]
   252bc:	add	x0, x0, #0xad0
   252c0:	blr	x1
   252c4:	ldr	x10, [x12, x0]
   252c8:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   252cc:	str	x11, [x12, x0]
   252d0:	add	x0, sp, #0x20
   252d4:	str	x10, [sp]
   252d8:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   252dc:	str	x10, [x12, x8]
   252e0:	ldr	x24, [x20]
   252e4:	clz	x8, x9
   252e8:	mov	w9, #0x87                  	// #135
   252ec:	sub	w8, w9, w8, lsl #1
   252f0:	add	x22, x24, w8, sxtw
   252f4:	mov	x1, x22
   252f8:	str	x12, [sp, #24]
   252fc:	bl	cf60 <mpfr_init2@plt>
   25300:	cmp	w19, #0x0
   25304:	mov	w23, #0x40                  	// #64
   25308:	cinc	x26, x24, eq  // eq = none
   2530c:	mov	w27, #0x1                   	// #1
   25310:	add	x0, sp, #0x20
   25314:	mov	w1, #0x1                   	// #1
   25318:	mov	x2, xzr
   2531c:	mov	w3, w27
   25320:	bl	cac0 <mpfr_set_ui_2exp@plt>
   25324:	mov	w28, w0
   25328:	mov	w24, #0x2                   	// #2
   2532c:	add	x0, sp, #0x20
   25330:	add	x1, sp, #0x20
   25334:	mov	x2, x24
   25338:	mov	w3, w27
   2533c:	bl	bea0 <mpfr_mul_ui@plt>
   25340:	cmp	w28, #0x0
   25344:	add	x24, x24, #0x1
   25348:	csel	w28, w0, w28, eq  // eq = none
   2534c:	cmp	x24, x21
   25350:	b.ls	2532c <mpfr_fac_ui@@Base+0xec>  // b.plast
   25354:	subs	x24, x22, #0x1
   25358:	b.eq	2541c <mpfr_fac_ui@@Base+0x1dc>  // b.none
   2535c:	cmp	x22, #0x1
   25360:	b.le	25428 <mpfr_fac_ui@@Base+0x1e8>
   25364:	clz	x8, x24
   25368:	mov	w9, #0x40                  	// #64
   2536c:	sub	x8, x9, x8
   25370:	cbz	w28, 253b4 <mpfr_fac_ui@@Base+0x174>
   25374:	ldr	x9, [sp, #48]
   25378:	add	x10, x25, #0x105
   2537c:	cmp	x9, x10
   25380:	b.lt	253f0 <mpfr_fac_ui@@Base+0x1b0>  // b.tstop
   25384:	ldr	x9, [sp, #32]
   25388:	sub	x2, x24, x8
   2538c:	ldr	x0, [sp, #56]
   25390:	mov	x3, x26
   25394:	sub	x8, x9, #0x1
   25398:	add	x9, x9, #0x3e
   2539c:	cmp	x8, #0x0
   253a0:	csel	x8, x9, x8, lt  // lt = tstop
   253a4:	asr	x8, x8, #6
   253a8:	add	x1, x8, #0x1
   253ac:	bl	c830 <mpfr_round_p@plt>
   253b0:	cbz	w0, 253f0 <mpfr_fac_ui@@Base+0x1b0>
   253b4:	ldr	w3, [sp, #40]
   253b8:	add	x1, sp, #0x20
   253bc:	mov	x0, x20
   253c0:	mov	w2, w19
   253c4:	bl	cb70 <mpfr_set4@plt>
   253c8:	cbz	w28, 25460 <mpfr_fac_ui@@Base+0x220>
   253cc:	tbz	w28, #31, 253d8 <mpfr_fac_ui@@Base+0x198>
   253d0:	cmp	w0, #0x1
   253d4:	b.lt	25464 <mpfr_fac_ui@@Base+0x224>  // b.tstop
   253d8:	cmp	w28, #0x1
   253dc:	b.lt	253e4 <mpfr_fac_ui@@Base+0x1a4>  // b.tstop
   253e0:	tbz	w0, #31, 25464 <mpfr_fac_ui@@Base+0x224>
   253e4:	cmp	w27, #0x1
   253e8:	mov	w8, #0x1                   	// #1
   253ec:	cinc	w27, w8, eq  // eq = none
   253f0:	sub	x8, x25, x22
   253f4:	cmp	x23, x8
   253f8:	b.gt	25444 <mpfr_fac_ui@@Base+0x204>
   253fc:	add	x22, x22, x23
   25400:	cmp	x22, #0x0
   25404:	cinc	x8, x22, lt  // lt = tstop
   25408:	add	x0, sp, #0x20
   2540c:	mov	x1, x22
   25410:	asr	x23, x8, #1
   25414:	bl	c330 <mpfr_set_prec@plt>
   25418:	b	25310 <mpfr_fac_ui@@Base+0xd0>
   2541c:	mov	x8, xzr
   25420:	cbnz	w28, 25374 <mpfr_fac_ui@@Base+0x134>
   25424:	b	253b4 <mpfr_fac_ui@@Base+0x174>
   25428:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2542c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   25430:	mov	w1, #0x4d                  	// #77
   25434:	add	x0, x0, #0x19a
   25438:	add	x2, x2, #0x1a6
   2543c:	bl	d030 <mpfr_assert_fail@plt>
   25440:	b	25364 <mpfr_fac_ui@@Base+0x124>
   25444:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   25448:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2544c:	mov	w1, #0x64                  	// #100
   25450:	add	x0, x0, #0x19a
   25454:	add	x2, x2, #0x154
   25458:	bl	d030 <mpfr_assert_fail@plt>
   2545c:	b	253fc <mpfr_fac_ui@@Base+0x1bc>
   25460:	mov	w28, w0
   25464:	add	x0, sp, #0x20
   25468:	bl	c4f0 <mpfr_clear@plt>
   2546c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25470:	ldr	x1, [x0, #2800]
   25474:	add	x0, x0, #0xaf0
   25478:	blr	x1
   2547c:	ldr	x9, [sp, #24]
   25480:	ldr	w10, [sp, #20]
   25484:	str	w10, [x9, x0]
   25488:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2548c:	ldr	x1, [x0, #2736]
   25490:	add	x0, x0, #0xab0
   25494:	blr	x1
   25498:	ldr	x11, [sp, #8]
   2549c:	str	x11, [x9, x0]
   254a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   254a4:	ldr	x1, [x0, #2768]
   254a8:	add	x0, x0, #0xad0
   254ac:	blr	x1
   254b0:	ldr	x12, [sp]
   254b4:	str	x12, [x9, x0]
   254b8:	ldr	x8, [x20, #16]
   254bc:	cmp	x8, x12
   254c0:	b.gt	25524 <mpfr_fac_ui@@Base+0x2e4>
   254c4:	cmp	x8, x11
   254c8:	b.lt	25524 <mpfr_fac_ui@@Base+0x2e4>  // b.tstop
   254cc:	cbz	w28, 254e8 <mpfr_fac_ui@@Base+0x2a8>
   254d0:	orr	w8, w10, #0x8
   254d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   254d8:	ldr	x1, [x0, #2800]
   254dc:	add	x0, x0, #0xaf0
   254e0:	blr	x1
   254e4:	str	w8, [x9, x0]
   254e8:	mov	w0, w28
   254ec:	ldp	x20, x19, [sp, #144]
   254f0:	ldp	x22, x21, [sp, #128]
   254f4:	ldp	x24, x23, [sp, #112]
   254f8:	ldp	x26, x25, [sp, #96]
   254fc:	ldp	x28, x27, [sp, #80]
   25500:	ldp	x29, x30, [sp, #64]
   25504:	add	sp, sp, #0xa0
   25508:	ret
   2550c:	mov	w1, #0x1                   	// #1
   25510:	mov	x0, x20
   25514:	mov	x2, xzr
   25518:	mov	w3, w19
   2551c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   25520:	b	25534 <mpfr_fac_ui@@Base+0x2f4>
   25524:	mov	x0, x20
   25528:	mov	w1, w28
   2552c:	mov	w2, w19
   25530:	bl	d020 <mpfr_check_range@plt>
   25534:	mov	w28, w0
   25538:	b	254e8 <mpfr_fac_ui@@Base+0x2a8>

000000000002553c <mpfr_cosh@@Base>:
   2553c:	sub	sp, sp, #0x170
   25540:	stp	x29, x30, [sp, #272]
   25544:	stp	x28, x27, [sp, #288]
   25548:	stp	x26, x25, [sp, #304]
   2554c:	stp	x24, x23, [sp, #320]
   25550:	stp	x22, x21, [sp, #336]
   25554:	stp	x20, x19, [sp, #352]
   25558:	ldr	x9, [x1, #16]
   2555c:	mov	x27, #0xfffffffffffffeff    	// #-257
   25560:	movk	x27, #0x7fff, lsl #48
   25564:	add	x8, x27, #0x105
   25568:	mov	w19, w2
   2556c:	cmp	x9, x8
   25570:	mov	x20, x0
   25574:	add	x29, sp, #0x110
   25578:	b.lt	25910 <mpfr_cosh@@Base+0x3d4>  // b.tstop
   2557c:	mov	x22, x1
   25580:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25584:	ldr	x1, [x0, #2800]
   25588:	add	x0, x0, #0xaf0
   2558c:	blr	x1
   25590:	mrs	x26, tpidr_el0
   25594:	ldr	w23, [x26, x0]
   25598:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2559c:	ldr	x1, [x0, #2736]
   255a0:	add	x0, x0, #0xab0
   255a4:	blr	x1
   255a8:	ldr	x28, [x26, x0]
   255ac:	mov	x8, x0
   255b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   255b4:	ldr	x1, [x0, #2768]
   255b8:	add	x0, x0, #0xad0
   255bc:	blr	x1
   255c0:	ldr	x24, [x26, x0]
   255c4:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   255c8:	str	x10, [x26, x8]
   255cc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   255d0:	str	x8, [x26, x0]
   255d4:	tbnz	x9, #63, 255e0 <mpfr_cosh@@Base+0xa4>
   255d8:	mov	w8, wzr
   255dc:	b	255fc <mpfr_cosh@@Base+0xc0>
   255e0:	ldr	x8, [x20]
   255e4:	neg	x2, x9, lsl #1
   255e8:	add	x8, x8, #0x1
   255ec:	cmp	x2, x8
   255f0:	b.hi	25970 <mpfr_cosh@@Base+0x434>  // b.pmore
   255f4:	mov	w8, wzr
   255f8:	cbz	w8, 255d8 <mpfr_cosh@@Base+0x9c>
   255fc:	cmp	w8, #0x4
   25600:	b.eq	25880 <mpfr_cosh@@Base+0x344>  // b.none
   25604:	cbnz	w8, 258ec <mpfr_cosh@@Base+0x3b0>
   25608:	ldr	x8, [x22]
   2560c:	mov	w9, #0x1                   	// #1
   25610:	str	w23, [sp, #20]
   25614:	stur	x8, [x29, #-40]
   25618:	ldr	x8, [x22, #24]
   2561c:	stur	w9, [x29, #-32]
   25620:	stur	x8, [x29, #-16]
   25624:	ldr	x8, [x22, #16]
   25628:	stur	x8, [x29, #-24]
   2562c:	ldr	x23, [x20]
   25630:	subs	x25, x23, #0x1
   25634:	add	x22, x23, #0x3
   25638:	b.eq	259d4 <mpfr_cosh@@Base+0x498>  // b.none
   2563c:	b.le	259dc <mpfr_cosh@@Base+0x4a0>
   25640:	clz	x8, x25
   25644:	mov	w9, #0x40                  	// #64
   25648:	sub	x8, x9, x8
   2564c:	add	x22, x22, x8
   25650:	cmp	x22, x27
   25654:	b.gt	259f8 <mpfr_cosh@@Base+0x4bc>
   25658:	sub	x8, x22, #0x1
   2565c:	add	x9, x22, #0x3e
   25660:	cmp	x8, #0x0
   25664:	csel	x8, x9, x8, lt  // lt = tstop
   25668:	asr	x8, x8, #6
   2566c:	cmp	x22, #0x201
   25670:	add	x25, x8, #0x1
   25674:	b.lt	2568c <mpfr_cosh@@Base+0x150>  // b.tstop
   25678:	lsl	x0, x25, #4
   2567c:	str	x0, [sp, #24]
   25680:	bl	d1f0 <mpfr_allocate_func@plt>
   25684:	str	x0, [sp, #32]
   25688:	b	25698 <mpfr_cosh@@Base+0x15c>
   2568c:	add	x8, sp, #0x18
   25690:	add	x8, x8, #0x10
   25694:	stp	xzr, x8, [sp, #24]
   25698:	ldr	x8, [sp, #32]
   2569c:	cmp	w19, #0x0
   256a0:	mov	w9, #0x1                   	// #1
   256a4:	mov	w10, #0x40                  	// #64
   256a8:	cinc	x23, x23, eq  // eq = none
   256ac:	stur	x8, [x29, #-48]
   256b0:	add	x8, x8, x25, lsl #3
   256b4:	stur	x22, [x29, #-104]
   256b8:	str	x10, [sp, #8]
   256bc:	stur	w9, [x29, #-64]
   256c0:	stur	w9, [x29, #-96]
   256c4:	stp	x8, x22, [x29, #-80]
   256c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   256cc:	ldr	x1, [x0, #2800]
   256d0:	add	x0, x0, #0xaf0
   256d4:	blr	x1
   256d8:	mov	x25, x0
   256dc:	str	wzr, [x26, x0]
   256e0:	sub	x0, x29, #0x68
   256e4:	sub	x1, x29, #0x28
   256e8:	mov	w2, #0x3                   	// #3
   256ec:	bl	cc20 <mpfr_exp@plt>
   256f0:	ldrb	w8, [x26, x25]
   256f4:	tbnz	w8, #1, 257f8 <mpfr_cosh@@Base+0x2bc>
   256f8:	sub	x0, x29, #0x48
   256fc:	sub	x2, x29, #0x68
   25700:	mov	w1, #0x1                   	// #1
   25704:	mov	w3, #0x2                   	// #2
   25708:	bl	c7b0 <mpfr_ui_div@plt>
   2570c:	sub	x0, x29, #0x48
   25710:	sub	x1, x29, #0x68
   25714:	sub	x2, x29, #0x48
   25718:	mov	w3, #0x2                   	// #2
   2571c:	bl	c640 <mpfr_add@plt>
   25720:	sub	x0, x29, #0x48
   25724:	sub	x1, x29, #0x48
   25728:	mov	w2, #0x1                   	// #1
   2572c:	mov	w3, wzr
   25730:	bl	cde0 <mpfr_div_2ui@plt>
   25734:	ldur	x8, [x29, #-56]
   25738:	add	x9, x27, #0x105
   2573c:	cmp	x8, x9
   25740:	b.lt	25798 <mpfr_cosh@@Base+0x25c>  // b.tstop
   25744:	ldur	x8, [x29, #-72]
   25748:	ldur	x0, [x29, #-48]
   2574c:	sub	x2, x22, #0x3
   25750:	mov	x3, x23
   25754:	sub	x9, x8, #0x1
   25758:	add	x8, x8, #0x3e
   2575c:	cmp	x9, #0x0
   25760:	csel	x8, x8, x9, lt  // lt = tstop
   25764:	asr	x8, x8, #6
   25768:	add	x1, x8, #0x1
   2576c:	bl	c830 <mpfr_round_p@plt>
   25770:	cbz	w0, 25798 <mpfr_cosh@@Base+0x25c>
   25774:	ldur	w3, [x29, #-64]
   25778:	sub	x1, x29, #0x48
   2577c:	mov	x0, x20
   25780:	mov	w2, w19
   25784:	bl	cb70 <mpfr_set4@plt>
   25788:	mov	w21, w0
   2578c:	mov	w8, wzr
   25790:	tbnz	w8, #0, 256c8 <mpfr_cosh@@Base+0x18c>
   25794:	b	2586c <mpfr_cosh@@Base+0x330>
   25798:	ldr	x25, [sp, #8]
   2579c:	sub	x8, x27, x22
   257a0:	cmp	x25, x8
   257a4:	b.gt	25850 <mpfr_cosh@@Base+0x314>
   257a8:	add	x22, x22, x25
   257ac:	cmp	x22, #0x0
   257b0:	cinc	x8, x22, lt  // lt = tstop
   257b4:	cmp	x22, x27
   257b8:	b.gt	259f8 <mpfr_cosh@@Base+0x4bc>
   257bc:	asr	x8, x8, #1
   257c0:	str	x8, [sp, #8]
   257c4:	sub	x8, x22, #0x1
   257c8:	add	x9, x22, #0x3e
   257cc:	cmp	x8, #0x0
   257d0:	ldr	x1, [sp, #24]
   257d4:	csel	x8, x9, x8, lt  // lt = tstop
   257d8:	asr	x8, x8, #6
   257dc:	add	x25, x8, #0x1
   257e0:	lsl	x2, x25, #4
   257e4:	str	x2, [sp, #24]
   257e8:	cbz	x1, 25820 <mpfr_cosh@@Base+0x2e4>
   257ec:	ldr	x0, [sp, #32]
   257f0:	bl	c660 <mpfr_reallocate_func@plt>
   257f4:	b	25828 <mpfr_cosh@@Base+0x2ec>
   257f8:	mov	w2, #0x1                   	// #1
   257fc:	mov	x0, x20
   25800:	mov	w1, w19
   25804:	bl	c3a0 <mpfr_overflow@plt>
   25808:	ldr	w9, [sp, #20]
   2580c:	mov	w21, w0
   25810:	mov	w8, wzr
   25814:	orr	w9, w9, #0x2
   25818:	str	w9, [sp, #20]
   2581c:	b	25790 <mpfr_cosh@@Base+0x254>
   25820:	mov	x0, x2
   25824:	bl	d1f0 <mpfr_allocate_func@plt>
   25828:	mov	x9, x0
   2582c:	mov	w8, #0x1                   	// #1
   25830:	stur	x9, [x29, #-48]
   25834:	add	x9, x9, x25, lsl #3
   25838:	str	x0, [sp, #32]
   2583c:	stur	x22, [x29, #-104]
   25840:	stur	w8, [x29, #-64]
   25844:	stp	x9, x22, [x29, #-80]
   25848:	stur	w8, [x29, #-96]
   2584c:	b	25790 <mpfr_cosh@@Base+0x254>
   25850:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   25854:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   25858:	mov	w1, #0x76                  	// #118
   2585c:	add	x0, x0, #0x1b4
   25860:	add	x2, x2, #0x154
   25864:	bl	d030 <mpfr_assert_fail@plt>
   25868:	b	257a8 <mpfr_cosh@@Base+0x26c>
   2586c:	ldr	x1, [sp, #24]
   25870:	cbz	x1, 2587c <mpfr_cosh@@Base+0x340>
   25874:	ldr	x0, [sp, #32]
   25878:	bl	d120 <mpfr_free_func@plt>
   2587c:	ldr	w23, [sp, #20]
   25880:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25884:	ldr	x1, [x0, #2800]
   25888:	add	x0, x0, #0xaf0
   2588c:	blr	x1
   25890:	str	w23, [x26, x0]
   25894:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25898:	ldr	x1, [x0, #2736]
   2589c:	add	x0, x0, #0xab0
   258a0:	blr	x1
   258a4:	str	x28, [x26, x0]
   258a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   258ac:	ldr	x1, [x0, #2768]
   258b0:	add	x0, x0, #0xad0
   258b4:	blr	x1
   258b8:	str	x24, [x26, x0]
   258bc:	ldr	x8, [x20, #16]
   258c0:	cmp	x8, x24
   258c4:	b.gt	2595c <mpfr_cosh@@Base+0x420>
   258c8:	cmp	x8, x28
   258cc:	b.lt	2595c <mpfr_cosh@@Base+0x420>  // b.tstop
   258d0:	cbz	w21, 258ec <mpfr_cosh@@Base+0x3b0>
   258d4:	orr	w8, w23, #0x8
   258d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   258dc:	ldr	x1, [x0, #2800]
   258e0:	add	x0, x0, #0xaf0
   258e4:	blr	x1
   258e8:	str	w8, [x26, x0]
   258ec:	mov	w0, w21
   258f0:	ldp	x20, x19, [sp, #352]
   258f4:	ldp	x22, x21, [sp, #336]
   258f8:	ldp	x24, x23, [sp, #320]
   258fc:	ldp	x26, x25, [sp, #304]
   25900:	ldp	x28, x27, [sp, #288]
   25904:	ldp	x29, x30, [sp, #272]
   25908:	add	sp, sp, #0x170
   2590c:	ret
   25910:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   25914:	cmp	x9, x8
   25918:	b.eq	259a4 <mpfr_cosh@@Base+0x468>  // b.none
   2591c:	mov	x8, #0x2                   	// #2
   25920:	movk	x8, #0x8000, lsl #48
   25924:	cmp	x9, x8
   25928:	b.ne	259b8 <mpfr_cosh@@Base+0x47c>  // b.any
   2592c:	add	x8, x27, #0x103
   25930:	str	x8, [x20, #16]
   25934:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25938:	ldr	x1, [x0, #2800]
   2593c:	add	x0, x0, #0xaf0
   25940:	blr	x1
   25944:	mrs	x8, tpidr_el0
   25948:	ldr	w9, [x8, x0]
   2594c:	mov	w21, wzr
   25950:	orr	w9, w9, #0x4
   25954:	str	w9, [x8, x0]
   25958:	b	258ec <mpfr_cosh@@Base+0x3b0>
   2595c:	mov	x0, x20
   25960:	mov	w1, w21
   25964:	mov	w2, w19
   25968:	bl	d020 <mpfr_check_range@plt>
   2596c:	b	259cc <mpfr_cosh@@Base+0x490>
   25970:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   25974:	ldr	x1, [x1, #3928]
   25978:	mov	w3, #0x1                   	// #1
   2597c:	mov	x0, x20
   25980:	mov	w4, w19
   25984:	bl	ca10 <mpfr_round_near_x@plt>
   25988:	cmp	w0, #0x0
   2598c:	mov	w21, w0
   25990:	cset	w8, ne  // ne = any
   25994:	cbz	w0, 255f4 <mpfr_cosh@@Base+0xb8>
   25998:	lsl	w8, w8, #2
   2599c:	cbnz	w8, 255fc <mpfr_cosh@@Base+0xc0>
   259a0:	b	255d8 <mpfr_cosh@@Base+0x9c>
   259a4:	str	x8, [x20, #16]
   259a8:	mov	w8, #0x1                   	// #1
   259ac:	mov	w21, wzr
   259b0:	str	w8, [x20, #8]
   259b4:	b	258ec <mpfr_cosh@@Base+0x3b0>
   259b8:	mov	w1, #0x1                   	// #1
   259bc:	mov	x0, x20
   259c0:	mov	x2, xzr
   259c4:	mov	w3, w19
   259c8:	bl	cac0 <mpfr_set_ui_2exp@plt>
   259cc:	mov	w21, w0
   259d0:	b	258ec <mpfr_cosh@@Base+0x3b0>
   259d4:	mov	x8, xzr
   259d8:	b	2564c <mpfr_cosh@@Base+0x110>
   259dc:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   259e0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   259e4:	add	x0, x0, #0x1b4
   259e8:	add	x2, x2, #0x14b
   259ec:	mov	w1, #0x53                  	// #83
   259f0:	bl	d030 <mpfr_assert_fail@plt>
   259f4:	b	25640 <mpfr_cosh@@Base+0x104>
   259f8:	bl	cdd0 <mpfr_abort_prec_max@plt>

00000000000259fc <mpfr_sinh@@Base>:
   259fc:	sub	sp, sp, #0x180
   25a00:	stp	x29, x30, [sp, #288]
   25a04:	stp	x28, x27, [sp, #304]
   25a08:	stp	x26, x25, [sp, #320]
   25a0c:	stp	x24, x23, [sp, #336]
   25a10:	stp	x22, x21, [sp, #352]
   25a14:	stp	x20, x19, [sp, #368]
   25a18:	ldr	x8, [x1, #16]
   25a1c:	mov	x26, #0xfffffffffffffeff    	// #-257
   25a20:	movk	x26, #0x7fff, lsl #48
   25a24:	add	x9, x26, #0x105
   25a28:	cmp	x8, x9
   25a2c:	mov	x19, x0
   25a30:	add	x29, sp, #0x120
   25a34:	str	w2, [sp, #28]
   25a38:	str	x1, [sp, #32]
   25a3c:	b.lt	25f38 <mpfr_sinh@@Base+0x53c>  // b.tstop
   25a40:	tbnz	x8, #63, 25a50 <mpfr_sinh@@Base+0x54>
   25a44:	mov	w8, wzr
   25a48:	cbnz	w8, 25f14 <mpfr_sinh@@Base+0x518>
   25a4c:	b	25a74 <mpfr_sinh@@Base+0x78>
   25a50:	ldr	x9, [x19]
   25a54:	mov	w10, #0x2                   	// #2
   25a58:	sub	x2, x10, x8, lsl #1
   25a5c:	add	x8, x9, #0x1
   25a60:	cmp	x2, x8
   25a64:	b.hi	25f88 <mpfr_sinh@@Base+0x58c>  // b.pmore
   25a68:	mov	w8, wzr
   25a6c:	cbz	w8, 25a44 <mpfr_sinh@@Base+0x48>
   25a70:	cbnz	w8, 25f14 <mpfr_sinh@@Base+0x518>
   25a74:	ldr	x11, [sp, #32]
   25a78:	mov	w10, #0x1                   	// #1
   25a7c:	ldr	x9, [x11]
   25a80:	stur	x9, [x29, #-40]
   25a84:	ldr	x8, [x11, #24]
   25a88:	stur	w10, [x29, #-32]
   25a8c:	stur	x8, [x29, #-16]
   25a90:	ldr	x8, [x11, #16]
   25a94:	stur	x8, [x29, #-24]
   25a98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25a9c:	ldr	x1, [x0, #2800]
   25aa0:	add	x0, x0, #0xaf0
   25aa4:	blr	x1
   25aa8:	mrs	x27, tpidr_el0
   25aac:	ldr	w23, [x27, x0]
   25ab0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25ab4:	ldr	x1, [x0, #2736]
   25ab8:	add	x0, x0, #0xab0
   25abc:	blr	x1
   25ac0:	ldr	x24, [x27, x0]
   25ac4:	mov	x8, x0
   25ac8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25acc:	ldr	x1, [x0, #2768]
   25ad0:	add	x0, x0, #0xad0
   25ad4:	blr	x1
   25ad8:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   25adc:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   25ae0:	ldr	x25, [x27, x0]
   25ae4:	str	x10, [x27, x8]
   25ae8:	str	x11, [x27, x0]
   25aec:	ldr	x8, [x19]
   25af0:	cmp	x9, x8
   25af4:	csel	x20, x9, x8, gt
   25af8:	subs	x21, x20, #0x1
   25afc:	b.eq	25fb0 <mpfr_sinh@@Base+0x5b4>  // b.none
   25b00:	b.le	25fd0 <mpfr_sinh@@Base+0x5d4>
   25b04:	clz	x8, x21
   25b08:	mov	w9, #0x40                  	// #64
   25b0c:	sub	x8, x9, x8
   25b10:	ldur	x9, [x29, #-24]
   25b14:	add	x8, x20, x8
   25b18:	neg	x10, x9, lsl #1
   25b1c:	and	x9, x10, x9, asr #63
   25b20:	add	x8, x8, x9
   25b24:	add	x28, x8, #0x4
   25b28:	cmp	x28, x26
   25b2c:	b.gt	26008 <mpfr_sinh@@Base+0x60c>
   25b30:	sub	x8, x28, #0x1
   25b34:	add	x9, x28, #0x3e
   25b38:	cmp	x8, #0x0
   25b3c:	csel	x8, x9, x8, lt  // lt = tstop
   25b40:	asr	x8, x8, #6
   25b44:	cmp	x28, #0x201
   25b48:	add	x22, x8, #0x1
   25b4c:	str	w23, [sp, #24]
   25b50:	stp	x25, x24, [sp, #8]
   25b54:	b.lt	25b6c <mpfr_sinh@@Base+0x170>  // b.tstop
   25b58:	lsl	x0, x22, #4
   25b5c:	str	x0, [sp, #40]
   25b60:	bl	d1f0 <mpfr_allocate_func@plt>
   25b64:	str	x0, [sp, #48]
   25b68:	b	25b78 <mpfr_sinh@@Base+0x17c>
   25b6c:	add	x8, sp, #0x28
   25b70:	add	x8, x8, #0x10
   25b74:	stp	xzr, x8, [sp, #40]
   25b78:	ldr	w10, [sp, #28]
   25b7c:	ldr	x8, [sp, #48]
   25b80:	mov	w9, #0x1                   	// #1
   25b84:	mov	w24, #0x40                  	// #64
   25b88:	cmp	w10, #0x0
   25b8c:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   25b90:	cset	w20, eq  // eq = none
   25b94:	stur	x8, [x29, #-48]
   25b98:	add	x8, x8, x22, lsl #3
   25b9c:	stur	x28, [x29, #-104]
   25ba0:	stur	w9, [x29, #-64]
   25ba4:	stur	w9, [x29, #-96]
   25ba8:	stp	x8, x28, [x29, #-80]
   25bac:	b	25be0 <mpfr_sinh@@Base+0x1e4>
   25bb0:	ldr	x0, [sp, #48]
   25bb4:	bl	c660 <mpfr_reallocate_func@plt>
   25bb8:	mov	x9, x0
   25bbc:	mov	w8, #0x1                   	// #1
   25bc0:	stur	x9, [x29, #-48]
   25bc4:	add	x9, x9, x25, lsl #3
   25bc8:	str	x0, [sp, #48]
   25bcc:	stur	x28, [x29, #-104]
   25bd0:	stur	w8, [x29, #-64]
   25bd4:	stp	x9, x28, [x29, #-80]
   25bd8:	stur	w8, [x29, #-96]
   25bdc:	tbz	w8, #0, 25e8c <mpfr_sinh@@Base+0x490>
   25be0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25be4:	ldr	x1, [x0, #2800]
   25be8:	add	x0, x0, #0xaf0
   25bec:	blr	x1
   25bf0:	mov	x25, x0
   25bf4:	str	wzr, [x27, x0]
   25bf8:	sub	x0, x29, #0x48
   25bfc:	sub	x1, x29, #0x28
   25c00:	mov	w2, #0x3                   	// #3
   25c04:	bl	cc20 <mpfr_exp@plt>
   25c08:	ldrb	w8, [x27, x25]
   25c0c:	tbnz	w8, #1, 25d38 <mpfr_sinh@@Base+0x33c>
   25c10:	ldur	x21, [x29, #-56]
   25c14:	sub	x0, x29, #0x68
   25c18:	sub	x2, x29, #0x48
   25c1c:	mov	w1, #0x1                   	// #1
   25c20:	mov	w3, #0x2                   	// #2
   25c24:	bl	c7b0 <mpfr_ui_div@plt>
   25c28:	sub	x0, x29, #0x48
   25c2c:	sub	x1, x29, #0x48
   25c30:	sub	x2, x29, #0x68
   25c34:	mov	w3, wzr
   25c38:	bl	bfd0 <mpfr_sub@plt>
   25c3c:	sub	x0, x29, #0x48
   25c40:	sub	x1, x29, #0x48
   25c44:	mov	w2, #0x1                   	// #1
   25c48:	mov	w3, wzr
   25c4c:	bl	cde0 <mpfr_div_2ui@plt>
   25c50:	ldur	x8, [x29, #-56]
   25c54:	mov	x25, x28
   25c58:	cmp	x8, x23
   25c5c:	b.ne	25cbc <mpfr_sinh@@Base+0x2c0>  // b.any
   25c60:	add	x21, x25, x28
   25c64:	sub	x8, x26, x21
   25c68:	cmp	x24, x8
   25c6c:	b.gt	25e44 <mpfr_sinh@@Base+0x448>
   25c70:	add	x28, x21, x24
   25c74:	cmp	x28, #0x0
   25c78:	cinc	x8, x28, lt  // lt = tstop
   25c7c:	cmp	x28, x26
   25c80:	b.gt	26008 <mpfr_sinh@@Base+0x60c>
   25c84:	asr	x24, x8, #1
   25c88:	sub	x8, x28, #0x1
   25c8c:	add	x9, x28, #0x3e
   25c90:	cmp	x8, #0x0
   25c94:	ldr	x1, [sp, #40]
   25c98:	csel	x8, x9, x8, lt  // lt = tstop
   25c9c:	asr	x8, x8, #6
   25ca0:	add	x25, x8, #0x1
   25ca4:	lsl	x2, x25, #4
   25ca8:	str	x2, [sp, #40]
   25cac:	cbnz	x1, 25bb0 <mpfr_sinh@@Base+0x1b4>
   25cb0:	mov	x0, x2
   25cb4:	bl	d1f0 <mpfr_allocate_func@plt>
   25cb8:	b	25bb8 <mpfr_sinh@@Base+0x1bc>
   25cbc:	sub	x9, x21, x8
   25cc0:	cmn	x9, #0x2
   25cc4:	mov	x11, #0xfffffffffffffffe    	// #-2
   25cc8:	csel	x9, x9, x11, gt
   25ccc:	add	x10, x26, #0x105
   25cd0:	sub	x9, x28, x9
   25cd4:	cmp	x8, x10
   25cd8:	sub	x25, x9, #0x3
   25cdc:	b.lt	25c60 <mpfr_sinh@@Base+0x264>  // b.tstop
   25ce0:	ldur	x8, [x29, #-72]
   25ce4:	ldr	x9, [x19]
   25ce8:	ldur	x0, [x29, #-48]
   25cec:	mov	x2, x25
   25cf0:	sub	x10, x8, #0x1
   25cf4:	add	x8, x8, #0x3e
   25cf8:	cmp	x10, #0x0
   25cfc:	csel	x8, x8, x10, lt  // lt = tstop
   25d00:	asr	x8, x8, #6
   25d04:	add	x1, x8, #0x1
   25d08:	add	x3, x9, x20
   25d0c:	bl	c830 <mpfr_round_p@plt>
   25d10:	cbz	w0, 25c60 <mpfr_sinh@@Base+0x264>
   25d14:	ldr	x8, [sp, #32]
   25d18:	ldr	w2, [sp, #28]
   25d1c:	sub	x1, x29, #0x48
   25d20:	mov	x0, x19
   25d24:	ldr	w3, [x8, #8]
   25d28:	bl	cb70 <mpfr_set4@plt>
   25d2c:	mov	w22, w0
   25d30:	mov	w8, wzr
   25d34:	b	25bdc <mpfr_sinh@@Base+0x1e0>
   25d38:	sub	x0, x29, #0x68
   25d3c:	sub	x1, x29, #0x28
   25d40:	mov	w2, #0x1                   	// #1
   25d44:	mov	w3, #0x3                   	// #3
   25d48:	bl	cde0 <mpfr_div_2ui@plt>
   25d4c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25d50:	ldr	x1, [x0, #2800]
   25d54:	add	x0, x0, #0xaf0
   25d58:	blr	x1
   25d5c:	mov	x25, x0
   25d60:	str	wzr, [x27, x0]
   25d64:	sub	x0, x29, #0x48
   25d68:	sub	x1, x29, #0x68
   25d6c:	mov	w2, #0x3                   	// #3
   25d70:	bl	bf40 <mpfr_cosh@plt>
   25d74:	ldrb	w8, [x27, x25]
   25d78:	tbnz	w8, #1, 25e60 <mpfr_sinh@@Base+0x464>
   25d7c:	sub	x0, x29, #0x68
   25d80:	sub	x1, x29, #0x68
   25d84:	mov	w2, #0x3                   	// #3
   25d88:	bl	c7e0 <mpfr_sinh@plt>
   25d8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25d90:	ldr	x1, [x0, #2800]
   25d94:	add	x0, x0, #0xaf0
   25d98:	blr	x1
   25d9c:	mov	x25, x0
   25da0:	str	wzr, [x27, x0]
   25da4:	sub	x0, x29, #0x48
   25da8:	sub	x1, x29, #0x48
   25dac:	sub	x2, x29, #0x68
   25db0:	mov	w3, #0x3                   	// #3
   25db4:	bl	c1b0 <mpfr_mul@plt>
   25db8:	ldrb	w8, [x27, x25]
   25dbc:	tbnz	w8, #1, 25e60 <mpfr_sinh@@Base+0x464>
   25dc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25dc4:	ldr	x1, [x0, #2800]
   25dc8:	add	x0, x0, #0xaf0
   25dcc:	blr	x1
   25dd0:	mov	x25, x0
   25dd4:	str	wzr, [x27, x0]
   25dd8:	sub	x0, x29, #0x48
   25ddc:	sub	x1, x29, #0x48
   25de0:	mov	w2, #0x1                   	// #1
   25de4:	mov	w3, wzr
   25de8:	bl	c780 <mpfr_mul_2ui@plt>
   25dec:	ldrb	w8, [x27, x25]
   25df0:	tbnz	w8, #1, 25e60 <mpfr_sinh@@Base+0x464>
   25df4:	ldur	x8, [x29, #-56]
   25df8:	add	x9, x26, #0x105
   25dfc:	mov	x25, x28
   25e00:	cmp	x8, x9
   25e04:	b.lt	25c60 <mpfr_sinh@@Base+0x264>  // b.tstop
   25e08:	ldur	x8, [x29, #-72]
   25e0c:	ldr	x9, [x19]
   25e10:	ldur	x0, [x29, #-48]
   25e14:	sub	x2, x28, #0x3
   25e18:	sub	x10, x8, #0x1
   25e1c:	add	x8, x8, #0x3e
   25e20:	cmp	x10, #0x0
   25e24:	csel	x8, x8, x10, lt  // lt = tstop
   25e28:	asr	x8, x8, #6
   25e2c:	add	x1, x8, #0x1
   25e30:	add	x3, x9, x20
   25e34:	bl	c830 <mpfr_round_p@plt>
   25e38:	mov	x25, x28
   25e3c:	cbnz	w0, 25d14 <mpfr_sinh@@Base+0x318>
   25e40:	b	25c60 <mpfr_sinh@@Base+0x264>
   25e44:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   25e48:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   25e4c:	mov	w1, #0xaf                  	// #175
   25e50:	add	x0, x0, #0x210
   25e54:	add	x2, x2, #0x154
   25e58:	bl	d030 <mpfr_assert_fail@plt>
   25e5c:	b	25c70 <mpfr_sinh@@Base+0x274>
   25e60:	ldr	x8, [sp, #32]
   25e64:	ldr	w1, [sp, #28]
   25e68:	mov	x0, x19
   25e6c:	ldr	w2, [x8, #8]
   25e70:	bl	c3a0 <mpfr_overflow@plt>
   25e74:	ldr	w9, [sp, #24]
   25e78:	mov	w22, w0
   25e7c:	mov	w8, wzr
   25e80:	orr	w9, w9, #0x2
   25e84:	str	w9, [sp, #24]
   25e88:	b	25bdc <mpfr_sinh@@Base+0x1e0>
   25e8c:	ldr	x1, [sp, #40]
   25e90:	cbz	x1, 25e9c <mpfr_sinh@@Base+0x4a0>
   25e94:	ldr	x0, [sp, #48]
   25e98:	bl	d120 <mpfr_free_func@plt>
   25e9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25ea0:	ldr	x1, [x0, #2800]
   25ea4:	add	x0, x0, #0xaf0
   25ea8:	blr	x1
   25eac:	ldr	w9, [sp, #24]
   25eb0:	str	w9, [x27, x0]
   25eb4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25eb8:	ldr	x1, [x0, #2736]
   25ebc:	add	x0, x0, #0xab0
   25ec0:	blr	x1
   25ec4:	ldr	x10, [sp, #16]
   25ec8:	str	x10, [x27, x0]
   25ecc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25ed0:	ldr	x1, [x0, #2768]
   25ed4:	add	x0, x0, #0xad0
   25ed8:	blr	x1
   25edc:	ldr	x11, [sp, #8]
   25ee0:	str	x11, [x27, x0]
   25ee4:	ldr	x8, [x19, #16]
   25ee8:	cmp	x8, x11
   25eec:	b.gt	25fb8 <mpfr_sinh@@Base+0x5bc>
   25ef0:	cmp	x8, x10
   25ef4:	b.lt	25fb8 <mpfr_sinh@@Base+0x5bc>  // b.tstop
   25ef8:	cbz	w22, 25f14 <mpfr_sinh@@Base+0x518>
   25efc:	orr	w8, w9, #0x8
   25f00:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25f04:	ldr	x1, [x0, #2800]
   25f08:	add	x0, x0, #0xaf0
   25f0c:	blr	x1
   25f10:	str	w8, [x27, x0]
   25f14:	mov	w0, w22
   25f18:	ldp	x20, x19, [sp, #368]
   25f1c:	ldp	x22, x21, [sp, #352]
   25f20:	ldp	x24, x23, [sp, #336]
   25f24:	ldp	x26, x25, [sp, #320]
   25f28:	ldp	x28, x27, [sp, #304]
   25f2c:	ldp	x29, x30, [sp, #288]
   25f30:	add	sp, sp, #0x180
   25f34:	ret
   25f38:	add	x9, x26, #0x103
   25f3c:	cmp	x8, x9
   25f40:	b.ne	25f70 <mpfr_sinh@@Base+0x574>  // b.any
   25f44:	str	x9, [x19, #16]
   25f48:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   25f4c:	ldr	x1, [x0, #2800]
   25f50:	add	x0, x0, #0xaf0
   25f54:	blr	x1
   25f58:	mrs	x8, tpidr_el0
   25f5c:	ldr	w9, [x8, x0]
   25f60:	mov	w22, wzr
   25f64:	orr	w9, w9, #0x4
   25f68:	str	w9, [x8, x0]
   25f6c:	b	25f14 <mpfr_sinh@@Base+0x518>
   25f70:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   25f74:	cmp	x8, x9
   25f78:	b.ne	25fec <mpfr_sinh@@Base+0x5f0>  // b.any
   25f7c:	mov	w22, wzr
   25f80:	str	x9, [x19, #16]
   25f84:	b	25ff8 <mpfr_sinh@@Base+0x5fc>
   25f88:	ldr	x1, [sp, #32]
   25f8c:	ldr	w4, [sp, #28]
   25f90:	mov	w3, #0x1                   	// #1
   25f94:	mov	x0, x19
   25f98:	bl	ca10 <mpfr_round_near_x@plt>
   25f9c:	cmp	w0, #0x0
   25fa0:	mov	w22, w0
   25fa4:	cset	w8, ne  // ne = any
   25fa8:	cbnz	w0, 25a6c <mpfr_sinh@@Base+0x70>
   25fac:	b	25a68 <mpfr_sinh@@Base+0x6c>
   25fb0:	mov	x8, xzr
   25fb4:	b	25b10 <mpfr_sinh@@Base+0x114>
   25fb8:	ldr	w2, [sp, #28]
   25fbc:	mov	x0, x19
   25fc0:	mov	w1, w22
   25fc4:	bl	d020 <mpfr_check_range@plt>
   25fc8:	mov	w22, w0
   25fcc:	b	25f14 <mpfr_sinh@@Base+0x518>
   25fd0:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   25fd4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   25fd8:	add	x0, x0, #0x210
   25fdc:	add	x2, x2, #0x1a6
   25fe0:	mov	w1, #0x52                  	// #82
   25fe4:	bl	d030 <mpfr_assert_fail@plt>
   25fe8:	b	25b04 <mpfr_sinh@@Base+0x108>
   25fec:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   25ff0:	mov	w22, wzr
   25ff4:	str	x8, [x19, #16]
   25ff8:	ldr	x8, [sp, #32]
   25ffc:	ldr	w8, [x8, #8]
   26000:	str	w8, [x19, #8]
   26004:	b	25f14 <mpfr_sinh@@Base+0x518>
   26008:	bl	cdd0 <mpfr_abort_prec_max@plt>

000000000002600c <mpfr_tanh@@Base>:
   2600c:	sub	sp, sp, #0x170
   26010:	stp	x29, x30, [sp, #272]
   26014:	stp	x28, x27, [sp, #288]
   26018:	stp	x26, x25, [sp, #304]
   2601c:	stp	x24, x23, [sp, #320]
   26020:	stp	x22, x21, [sp, #336]
   26024:	stp	x20, x19, [sp, #352]
   26028:	ldr	x8, [x1, #16]
   2602c:	mov	x27, #0xfffffffffffffeff    	// #-257
   26030:	movk	x27, #0x7fff, lsl #48
   26034:	add	x9, x27, #0x105
   26038:	mov	w19, w2
   2603c:	mov	x22, x1
   26040:	cmp	x8, x9
   26044:	mov	x20, x0
   26048:	add	x29, sp, #0x110
   2604c:	b.lt	26458 <mpfr_tanh@@Base+0x44c>  // b.tstop
   26050:	tbnz	x8, #63, 26060 <mpfr_tanh@@Base+0x54>
   26054:	mov	w8, wzr
   26058:	cbnz	w8, 26434 <mpfr_tanh@@Base+0x428>
   2605c:	b	26084 <mpfr_tanh@@Base+0x78>
   26060:	ldr	x9, [x20]
   26064:	mov	w10, #0x1                   	// #1
   26068:	sub	x2, x10, x8, lsl #1
   2606c:	add	x8, x9, #0x1
   26070:	cmp	x2, x8
   26074:	b.hi	264a4 <mpfr_tanh@@Base+0x498>  // b.pmore
   26078:	mov	w8, wzr
   2607c:	cbz	w8, 26054 <mpfr_tanh@@Base+0x48>
   26080:	cbnz	w8, 26434 <mpfr_tanh@@Base+0x428>
   26084:	ldr	x8, [x22]
   26088:	mov	w26, #0x1                   	// #1
   2608c:	stur	x8, [x29, #-40]
   26090:	ldr	x8, [x22, #24]
   26094:	stur	w26, [x29, #-32]
   26098:	stur	x8, [x29, #-16]
   2609c:	ldr	x8, [x22, #16]
   260a0:	stur	x8, [x29, #-24]
   260a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   260a8:	ldr	x1, [x0, #2800]
   260ac:	add	x0, x0, #0xaf0
   260b0:	blr	x1
   260b4:	mrs	x25, tpidr_el0
   260b8:	ldr	w8, [x25, x0]
   260bc:	str	w8, [sp, #20]
   260c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   260c4:	ldr	x1, [x0, #2736]
   260c8:	add	x0, x0, #0xab0
   260cc:	blr	x1
   260d0:	ldr	x28, [x25, x0]
   260d4:	mov	x8, x0
   260d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   260dc:	ldr	x1, [x0, #2768]
   260e0:	add	x0, x0, #0xad0
   260e4:	blr	x1
   260e8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   260ec:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   260f0:	ldr	x24, [x25, x0]
   260f4:	str	x9, [x25, x8]
   260f8:	str	x10, [x25, x0]
   260fc:	ldr	x23, [x20]
   26100:	ldr	w21, [x22, #8]
   26104:	sub	x0, x29, #0x28
   26108:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   2610c:	mov	x2, xzr
   26110:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   26114:	str	x28, [sp, #8]
   26118:	tbz	w0, #31, 264cc <mpfr_tanh@@Base+0x4c0>
   2611c:	subs	x22, x23, #0x1
   26120:	b.eq	26540 <mpfr_tanh@@Base+0x534>  // b.none
   26124:	b.le	26548 <mpfr_tanh@@Base+0x53c>
   26128:	clz	x8, x22
   2612c:	mov	w9, #0x40                  	// #64
   26130:	sub	x8, x9, x8
   26134:	ldur	x9, [x29, #-24]
   26138:	ldur	x10, [x29, #-40]
   2613c:	add	x8, x23, x8
   26140:	neg	x11, x9
   26144:	and	x9, x11, x9, asr #63
   26148:	add	x8, x8, x9
   2614c:	add	x8, x8, #0x4
   26150:	cmp	x8, x10
   26154:	csel	x22, x10, x8, lt  // lt = tstop
   26158:	cmp	x22, x27
   2615c:	b.gt	26598 <mpfr_tanh@@Base+0x58c>
   26160:	sub	x8, x22, #0x1
   26164:	add	x9, x22, #0x3e
   26168:	cmp	x8, #0x0
   2616c:	csel	x8, x9, x8, lt  // lt = tstop
   26170:	asr	x8, x8, #6
   26174:	cmp	x22, #0x201
   26178:	add	x26, x8, #0x1
   2617c:	b.lt	26194 <mpfr_tanh@@Base+0x188>  // b.tstop
   26180:	lsl	x0, x26, #4
   26184:	str	x0, [sp, #24]
   26188:	bl	d1f0 <mpfr_allocate_func@plt>
   2618c:	str	x0, [sp, #32]
   26190:	b	261a0 <mpfr_tanh@@Base+0x194>
   26194:	add	x8, sp, #0x18
   26198:	add	x8, x8, #0x10
   2619c:	stp	xzr, x8, [sp, #24]
   261a0:	ldr	x8, [sp, #32]
   261a4:	mov	w9, #0x1                   	// #1
   261a8:	sub	x0, x29, #0x68
   261ac:	sub	x1, x29, #0x28
   261b0:	stur	x8, [x29, #-48]
   261b4:	add	x8, x8, x26, lsl #3
   261b8:	mov	w2, #0x1                   	// #1
   261bc:	mov	w3, wzr
   261c0:	stur	x22, [x29, #-104]
   261c4:	stur	w9, [x29, #-64]
   261c8:	stp	x8, x22, [x29, #-80]
   261cc:	stur	w9, [x29, #-96]
   261d0:	bl	c780 <mpfr_mul_2ui@plt>
   261d4:	sub	x0, x29, #0x68
   261d8:	sub	x1, x29, #0x68
   261dc:	mov	w2, wzr
   261e0:	bl	cc20 <mpfr_exp@plt>
   261e4:	ldur	x26, [x29, #-88]
   261e8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   261ec:	cmp	x26, x8
   261f0:	b.eq	264f0 <mpfr_tanh@@Base+0x4e4>  // b.none
   261f4:	cmp	w19, #0x0
   261f8:	mov	w8, #0x40                  	// #64
   261fc:	mov	w28, #0x3                   	// #3
   26200:	cinc	x23, x23, eq  // eq = none
   26204:	str	x8, [sp]
   26208:	sub	x0, x29, #0x48
   2620c:	sub	x1, x29, #0x68
   26210:	mov	w2, #0x1                   	// #1
   26214:	mov	w3, #0x3                   	// #3
   26218:	bl	c710 <mpfr_add_ui@plt>
   2621c:	sub	x0, x29, #0x68
   26220:	sub	x1, x29, #0x68
   26224:	mov	w2, #0x1                   	// #1
   26228:	mov	w3, #0x2                   	// #2
   2622c:	bl	ca00 <mpfr_sub_ui@plt>
   26230:	ldur	x8, [x29, #-88]
   26234:	sub	x0, x29, #0x48
   26238:	sub	x1, x29, #0x68
   2623c:	sub	x2, x29, #0x48
   26240:	mov	w3, wzr
   26244:	sub	x26, x26, x8
   26248:	bl	caf0 <mpfr_div@plt>
   2624c:	cmp	x26, #0x3
   26250:	csinc	x8, x28, x26, lt  // lt = tstop
   26254:	cmp	x22, #0x0
   26258:	cinc	x9, x22, lt  // lt = tstop
   2625c:	cmp	x8, x9, asr #1
   26260:	b.gt	262a8 <mpfr_tanh@@Base+0x29c>
   26264:	ldur	x9, [x29, #-56]
   26268:	add	x10, x27, #0x105
   2626c:	cmp	x9, x10
   26270:	b.lt	262a8 <mpfr_tanh@@Base+0x29c>  // b.tstop
   26274:	ldur	x9, [x29, #-72]
   26278:	mvn	x8, x8
   2627c:	add	x2, x22, x8
   26280:	ldur	x0, [x29, #-48]
   26284:	sub	x8, x9, #0x1
   26288:	add	x9, x9, #0x3e
   2628c:	cmp	x8, #0x0
   26290:	csel	x8, x9, x8, lt  // lt = tstop
   26294:	asr	x8, x8, #6
   26298:	add	x1, x8, #0x1
   2629c:	mov	x3, x23
   262a0:	bl	c830 <mpfr_round_p@plt>
   262a4:	cbnz	w0, 26398 <mpfr_tanh@@Base+0x38c>
   262a8:	ldur	x8, [x29, #-56]
   262ac:	cmp	x8, #0x1
   262b0:	b.eq	264f0 <mpfr_tanh@@Base+0x4e4>  // b.none
   262b4:	ldr	x26, [sp]
   262b8:	sub	x8, x27, x22
   262bc:	cmp	x26, x8
   262c0:	b.gt	2637c <mpfr_tanh@@Base+0x370>
   262c4:	add	x22, x22, x26
   262c8:	cmp	x22, #0x0
   262cc:	cinc	x8, x22, lt  // lt = tstop
   262d0:	cmp	x22, x27
   262d4:	b.gt	26598 <mpfr_tanh@@Base+0x58c>
   262d8:	asr	x10, x8, #1
   262dc:	sub	x8, x22, #0x1
   262e0:	add	x9, x22, #0x3e
   262e4:	cmp	x8, #0x0
   262e8:	ldr	x1, [sp, #24]
   262ec:	csel	x8, x9, x8, lt  // lt = tstop
   262f0:	asr	x8, x8, #6
   262f4:	add	x26, x8, #0x1
   262f8:	lsl	x2, x26, #4
   262fc:	str	x2, [sp, #24]
   26300:	str	x10, [sp]
   26304:	cbz	x1, 26314 <mpfr_tanh@@Base+0x308>
   26308:	ldr	x0, [sp, #32]
   2630c:	bl	c660 <mpfr_reallocate_func@plt>
   26310:	b	2631c <mpfr_tanh@@Base+0x310>
   26314:	mov	x0, x2
   26318:	bl	d1f0 <mpfr_allocate_func@plt>
   2631c:	mov	x8, x0
   26320:	str	x0, [sp, #32]
   26324:	mov	w9, #0x1                   	// #1
   26328:	stur	x8, [x29, #-48]
   2632c:	add	x8, x8, x26, lsl #3
   26330:	sub	x0, x29, #0x68
   26334:	sub	x1, x29, #0x28
   26338:	mov	w2, #0x1                   	// #1
   2633c:	mov	w3, wzr
   26340:	stur	w9, [x29, #-64]
   26344:	stur	x22, [x29, #-104]
   26348:	stp	x8, x22, [x29, #-80]
   2634c:	stur	w9, [x29, #-96]
   26350:	bl	c780 <mpfr_mul_2ui@plt>
   26354:	sub	x0, x29, #0x68
   26358:	sub	x1, x29, #0x68
   2635c:	mov	w2, wzr
   26360:	bl	cc20 <mpfr_exp@plt>
   26364:	ldur	x26, [x29, #-88]
   26368:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2636c:	mov	w28, #0x3                   	// #3
   26370:	cmp	x26, x8
   26374:	b.ne	26208 <mpfr_tanh@@Base+0x1fc>  // b.any
   26378:	b	264f0 <mpfr_tanh@@Base+0x4e4>
   2637c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   26380:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   26384:	mov	w1, #0x9a                  	// #154
   26388:	add	x0, x0, #0x218
   2638c:	add	x2, x2, #0x154
   26390:	bl	d030 <mpfr_assert_fail@plt>
   26394:	b	262c4 <mpfr_tanh@@Base+0x2b8>
   26398:	sub	x1, x29, #0x48
   2639c:	mov	x0, x20
   263a0:	mov	w2, w19
   263a4:	mov	w3, w21
   263a8:	bl	cb70 <mpfr_set4@plt>
   263ac:	mov	w21, w0
   263b0:	ldr	x1, [sp, #24]
   263b4:	ldr	x22, [sp, #8]
   263b8:	cbz	x1, 263c4 <mpfr_tanh@@Base+0x3b8>
   263bc:	ldr	x0, [sp, #32]
   263c0:	bl	d120 <mpfr_free_func@plt>
   263c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   263c8:	ldr	x1, [x0, #2800]
   263cc:	add	x0, x0, #0xaf0
   263d0:	blr	x1
   263d4:	ldr	w9, [sp, #20]
   263d8:	str	w9, [x25, x0]
   263dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   263e0:	ldr	x1, [x0, #2736]
   263e4:	add	x0, x0, #0xab0
   263e8:	blr	x1
   263ec:	str	x22, [x25, x0]
   263f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   263f4:	ldr	x1, [x0, #2768]
   263f8:	add	x0, x0, #0xad0
   263fc:	blr	x1
   26400:	str	x24, [x25, x0]
   26404:	ldr	x8, [x20, #16]
   26408:	cmp	x8, x24
   2640c:	b.gt	2652c <mpfr_tanh@@Base+0x520>
   26410:	cmp	x8, x22
   26414:	b.lt	2652c <mpfr_tanh@@Base+0x520>  // b.tstop
   26418:	cbz	w21, 26434 <mpfr_tanh@@Base+0x428>
   2641c:	orr	w8, w9, #0x8
   26420:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26424:	ldr	x1, [x0, #2800]
   26428:	add	x0, x0, #0xaf0
   2642c:	blr	x1
   26430:	str	w8, [x25, x0]
   26434:	mov	w0, w21
   26438:	ldp	x20, x19, [sp, #352]
   2643c:	ldp	x22, x21, [sp, #336]
   26440:	ldp	x24, x23, [sp, #320]
   26444:	ldp	x26, x25, [sp, #304]
   26448:	ldp	x28, x27, [sp, #288]
   2644c:	ldp	x29, x30, [sp, #272]
   26450:	add	sp, sp, #0x170
   26454:	ret
   26458:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2645c:	cmp	x8, x9
   26460:	b.eq	26564 <mpfr_tanh@@Base+0x558>  // b.none
   26464:	mov	x9, #0x2                   	// #2
   26468:	movk	x9, #0x8000, lsl #48
   2646c:	cmp	x8, x9
   26470:	b.ne	26580 <mpfr_tanh@@Base+0x574>  // b.any
   26474:	add	x8, x27, #0x103
   26478:	str	x8, [x20, #16]
   2647c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26480:	ldr	x1, [x0, #2800]
   26484:	add	x0, x0, #0xaf0
   26488:	blr	x1
   2648c:	mrs	x8, tpidr_el0
   26490:	ldr	w9, [x8, x0]
   26494:	mov	w21, wzr
   26498:	orr	w9, w9, #0x4
   2649c:	str	w9, [x8, x0]
   264a0:	b	26434 <mpfr_tanh@@Base+0x428>
   264a4:	mov	x0, x20
   264a8:	mov	x1, x22
   264ac:	mov	w3, wzr
   264b0:	mov	w4, w19
   264b4:	bl	ca10 <mpfr_round_near_x@plt>
   264b8:	cmp	w0, #0x0
   264bc:	mov	w21, w0
   264c0:	cset	w8, ne  // ne = any
   264c4:	cbnz	w0, 2607c <mpfr_tanh@@Base+0x70>
   264c8:	b	26078 <mpfr_tanh@@Base+0x6c>
   264cc:	add	x8, sp, #0x18
   264d0:	add	x9, x8, #0x10
   264d4:	add	x8, x8, #0x18
   264d8:	stur	w26, [x29, #-64]
   264dc:	stur	x26, [x29, #-104]
   264e0:	stp	xzr, x9, [sp, #24]
   264e4:	stur	x9, [x29, #-48]
   264e8:	stp	x8, x26, [x29, #-80]
   264ec:	stur	w26, [x29, #-96]
   264f0:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   264f4:	ldr	x1, [x1, #3928]
   264f8:	mov	x0, x20
   264fc:	mov	w2, wzr
   26500:	mov	w3, w21
   26504:	bl	cb70 <mpfr_set4@plt>
   26508:	cmp	w19, #0x1
   2650c:	b.eq	2651c <mpfr_tanh@@Base+0x510>  // b.none
   26510:	add	w8, w19, w21, lsr #31
   26514:	cmp	w8, #0x3
   26518:	b.ne	263b0 <mpfr_tanh@@Base+0x3a4>  // b.any
   2651c:	mov	x0, x20
   26520:	neg	w21, w21
   26524:	bl	c930 <mpfr_nexttozero@plt>
   26528:	b	263b0 <mpfr_tanh@@Base+0x3a4>
   2652c:	mov	x0, x20
   26530:	mov	w1, w21
   26534:	mov	w2, w19
   26538:	bl	d020 <mpfr_check_range@plt>
   2653c:	b	26578 <mpfr_tanh@@Base+0x56c>
   26540:	mov	x8, xzr
   26544:	b	26134 <mpfr_tanh@@Base+0x128>
   26548:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2654c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   26550:	add	x0, x0, #0x218
   26554:	add	x2, x2, #0x14b
   26558:	mov	w1, #0x60                  	// #96
   2655c:	bl	d030 <mpfr_assert_fail@plt>
   26560:	b	26128 <mpfr_tanh@@Base+0x11c>
   26564:	ldrsw	x1, [x22, #8]
   26568:	mov	x0, x20
   2656c:	mov	x2, xzr
   26570:	mov	w3, w19
   26574:	bl	bed0 <mpfr_set_si_2exp@plt>
   26578:	mov	w21, w0
   2657c:	b	26434 <mpfr_tanh@@Base+0x428>
   26580:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   26584:	str	x8, [x20, #16]
   26588:	ldr	w8, [x22, #8]
   2658c:	mov	w21, wzr
   26590:	str	w8, [x20, #8]
   26594:	b	26434 <mpfr_tanh@@Base+0x428>
   26598:	bl	cdd0 <mpfr_abort_prec_max@plt>

000000000002659c <mpfr_sinh_cosh@@Base>:
   2659c:	sub	sp, sp, #0x1b0
   265a0:	stp	x24, x23, [sp, #384]
   265a4:	stp	x22, x21, [sp, #400]
   265a8:	stp	x20, x19, [sp, #416]
   265ac:	mov	w20, w3
   265b0:	mov	x19, x1
   265b4:	mov	x21, x0
   265b8:	cmp	x0, x1
   265bc:	mov	x24, x2
   265c0:	stp	x29, x30, [sp, #336]
   265c4:	stp	x28, x27, [sp, #352]
   265c8:	stp	x26, x25, [sp, #368]
   265cc:	add	x29, sp, #0x150
   265d0:	b.eq	26af8 <mpfr_sinh_cosh@@Base+0x55c>  // b.none
   265d4:	ldr	x8, [x24, #16]
   265d8:	mov	x26, #0x2                   	// #2
   265dc:	movk	x26, #0x8000, lsl #48
   265e0:	add	x9, x26, #0x2
   265e4:	cmp	x8, x9
   265e8:	b.lt	26b14 <mpfr_sinh_cosh@@Base+0x578>  // b.tstop
   265ec:	ldr	x9, [x24]
   265f0:	mov	w10, #0x1                   	// #1
   265f4:	stur	x9, [x29, #-40]
   265f8:	ldr	x9, [x24, #24]
   265fc:	stur	w10, [x29, #-32]
   26600:	stp	x8, x9, [x29, #-24]
   26604:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26608:	ldr	x1, [x0, #2800]
   2660c:	add	x0, x0, #0xaf0
   26610:	blr	x1
   26614:	mrs	x28, tpidr_el0
   26618:	ldr	w25, [x28, x0]
   2661c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26620:	ldr	x1, [x0, #2736]
   26624:	add	x0, x0, #0xab0
   26628:	blr	x1
   2662c:	ldr	x9, [x28, x0]
   26630:	mov	x8, x0
   26634:	str	x9, [sp, #16]
   26638:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2663c:	ldr	x1, [x0, #2768]
   26640:	add	x0, x0, #0xad0
   26644:	blr	x1
   26648:	ldr	x9, [x28, x0]
   2664c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   26650:	str	x10, [x28, x0]
   26654:	str	x9, [sp, #8]
   26658:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2665c:	str	x9, [x28, x8]
   26660:	ldr	x8, [x19]
   26664:	ldr	x9, [x21]
   26668:	cmp	x8, x9
   2666c:	csel	x22, x8, x9, gt
   26670:	subs	x23, x22, #0x1
   26674:	b.eq	26b50 <mpfr_sinh_cosh@@Base+0x5b4>  // b.none
   26678:	b.le	26b88 <mpfr_sinh_cosh@@Base+0x5ec>
   2667c:	clz	x8, x23
   26680:	mov	w9, #0x40                  	// #64
   26684:	sub	x8, x9, x8
   26688:	add	x8, x8, x22
   2668c:	mov	x23, #0x2                   	// #2
   26690:	sub	x9, x26, #0x107
   26694:	movk	x23, #0x8000, lsl #48
   26698:	cmp	x8, x9
   2669c:	b.gt	26c10 <mpfr_sinh_cosh@@Base+0x674>
   266a0:	add	x9, x8, #0x3
   266a4:	add	x10, x8, #0x42
   266a8:	cmp	x9, #0x0
   266ac:	csel	x9, x10, x9, lt  // lt = tstop
   266b0:	asr	x9, x9, #6
   266b4:	add	x27, x9, #0x1
   266b8:	add	x9, x27, x27, lsl #1
   266bc:	cmp	x9, #0x11
   266c0:	add	x26, x8, #0x4
   266c4:	str	x24, [sp, #40]
   266c8:	str	w25, [sp, #28]
   266cc:	b.lt	266e4 <mpfr_sinh_cosh@@Base+0x148>  // b.tstop
   266d0:	lsl	x0, x9, #3
   266d4:	str	x0, [sp, #56]
   266d8:	bl	d1f0 <mpfr_allocate_func@plt>
   266dc:	str	x0, [sp, #64]
   266e0:	b	266f0 <mpfr_sinh_cosh@@Base+0x154>
   266e4:	add	x8, sp, #0x38
   266e8:	add	x8, x8, #0x10
   266ec:	stp	xzr, x8, [sp, #56]
   266f0:	ldr	x8, [sp, #64]
   266f4:	mov	w9, #0x1                   	// #1
   266f8:	cmp	w20, #0x0
   266fc:	stur	w9, [x29, #-64]
   26700:	stur	w9, [x29, #-96]
   26704:	stur	w9, [x29, #-128]
   26708:	stur	x8, [x29, #-48]
   2670c:	add	x9, x8, x27, lsl #3
   26710:	add	x8, x8, x27, lsl #4
   26714:	mov	w25, #0x40                  	// #64
   26718:	sub	x10, x23, #0x103
   2671c:	cset	w24, eq  // eq = none
   26720:	stp	x8, x26, [x29, #-112]
   26724:	stur	x26, [x29, #-136]
   26728:	str	x10, [sp, #48]
   2672c:	stp	x9, x26, [x29, #-80]
   26730:	b	26770 <mpfr_sinh_cosh@@Base+0x1d4>
   26734:	mov	x0, x2
   26738:	bl	d1f0 <mpfr_allocate_func@plt>
   2673c:	mov	x9, x0
   26740:	mov	w8, #0x1                   	// #1
   26744:	stur	x9, [x29, #-48]
   26748:	add	x10, x9, x22, lsl #3
   2674c:	add	x9, x9, x22, lsl #4
   26750:	str	x0, [sp, #64]
   26754:	stur	x26, [x29, #-136]
   26758:	stur	w8, [x29, #-64]
   2675c:	stur	w8, [x29, #-96]
   26760:	stp	x10, x26, [x29, #-80]
   26764:	stp	x9, x26, [x29, #-112]
   26768:	stur	w8, [x29, #-128]
   2676c:	tbz	w8, #0, 269bc <mpfr_sinh_cosh@@Base+0x420>
   26770:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26774:	ldr	x1, [x0, #2800]
   26778:	add	x0, x0, #0xaf0
   2677c:	blr	x1
   26780:	mov	x27, x0
   26784:	str	wzr, [x28, x0]
   26788:	sub	x0, x29, #0x48
   2678c:	sub	x1, x29, #0x28
   26790:	mov	w2, #0x3                   	// #3
   26794:	bl	cc20 <mpfr_exp@plt>
   26798:	ldrb	w8, [x28, x27]
   2679c:	tbnz	w8, #1, 26968 <mpfr_sinh_cosh@@Base+0x3cc>
   267a0:	ldur	x22, [x29, #-56]
   267a4:	sub	x0, x29, #0x88
   267a8:	sub	x2, x29, #0x48
   267ac:	mov	w1, #0x1                   	// #1
   267b0:	mov	w3, #0x2                   	// #2
   267b4:	bl	c7b0 <mpfr_ui_div@plt>
   267b8:	sub	x0, x29, #0x68
   267bc:	sub	x1, x29, #0x48
   267c0:	sub	x2, x29, #0x88
   267c4:	mov	w3, #0x2                   	// #2
   267c8:	bl	c640 <mpfr_add@plt>
   267cc:	sub	x0, x29, #0x48
   267d0:	sub	x1, x29, #0x48
   267d4:	sub	x2, x29, #0x88
   267d8:	mov	w3, wzr
   267dc:	bl	bfd0 <mpfr_sub@plt>
   267e0:	sub	x0, x29, #0x68
   267e4:	sub	x1, x29, #0x68
   267e8:	mov	w2, #0x1                   	// #1
   267ec:	mov	w3, wzr
   267f0:	bl	cde0 <mpfr_div_2ui@plt>
   267f4:	sub	x0, x29, #0x48
   267f8:	sub	x1, x29, #0x48
   267fc:	mov	w2, #0x1                   	// #1
   26800:	mov	w3, wzr
   26804:	bl	cde0 <mpfr_div_2ui@plt>
   26808:	ldur	x8, [x29, #-56]
   2680c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   26810:	mov	x27, x26
   26814:	cmp	x8, x9
   26818:	b.ne	26894 <mpfr_sinh_cosh@@Base+0x2f8>  // b.any
   2681c:	mov	x8, #0x2                   	// #2
   26820:	add	x22, x27, x26
   26824:	movk	x8, #0x8000, lsl #48
   26828:	sub	x8, x8, x22
   2682c:	sub	x8, x8, #0x103
   26830:	cmp	x25, x8
   26834:	b.gt	269a0 <mpfr_sinh_cosh@@Base+0x404>
   26838:	ldr	x9, [sp, #48]
   2683c:	add	x26, x22, x25
   26840:	cmp	x26, #0x0
   26844:	cinc	x8, x26, lt  // lt = tstop
   26848:	cmp	x26, x9
   2684c:	b.gt	26c10 <mpfr_sinh_cosh@@Base+0x674>
   26850:	asr	x25, x8, #1
   26854:	sub	x8, x26, #0x1
   26858:	add	x9, x26, #0x3e
   2685c:	cmp	x8, #0x0
   26860:	csel	x8, x9, x8, lt  // lt = tstop
   26864:	ldr	x1, [sp, #56]
   26868:	asr	x8, x8, #6
   2686c:	add	x22, x8, #0x1
   26870:	add	x8, x22, x22, lsl #1
   26874:	mov	x23, #0x2                   	// #2
   26878:	lsl	x2, x8, #3
   2687c:	movk	x23, #0x8000, lsl #48
   26880:	str	x2, [sp, #56]
   26884:	cbz	x1, 26734 <mpfr_sinh_cosh@@Base+0x198>
   26888:	ldr	x0, [sp, #64]
   2688c:	bl	c660 <mpfr_reallocate_func@plt>
   26890:	b	2673c <mpfr_sinh_cosh@@Base+0x1a0>
   26894:	sub	x9, x22, x8
   26898:	cmn	x9, #0x2
   2689c:	mov	x10, #0xfffffffffffffffe    	// #-2
   268a0:	csel	x9, x9, x10, gt
   268a4:	add	x22, x23, #0x2
   268a8:	sub	x9, x26, x9
   268ac:	cmp	x8, x22
   268b0:	sub	x27, x9, #0x3
   268b4:	b.lt	2681c <mpfr_sinh_cosh@@Base+0x280>  // b.tstop
   268b8:	ldur	x8, [x29, #-72]
   268bc:	ldr	x9, [x21]
   268c0:	ldur	x0, [x29, #-48]
   268c4:	mov	x2, x27
   268c8:	sub	x10, x8, #0x1
   268cc:	add	x8, x8, #0x3e
   268d0:	cmp	x10, #0x0
   268d4:	csel	x8, x8, x10, lt  // lt = tstop
   268d8:	asr	x8, x8, #6
   268dc:	add	x1, x8, #0x1
   268e0:	add	x3, x9, x24
   268e4:	bl	c830 <mpfr_round_p@plt>
   268e8:	cbz	w0, 2681c <mpfr_sinh_cosh@@Base+0x280>
   268ec:	ldur	x8, [x29, #-88]
   268f0:	cmp	x8, x22
   268f4:	b.lt	2681c <mpfr_sinh_cosh@@Base+0x280>  // b.tstop
   268f8:	ldur	x8, [x29, #-104]
   268fc:	ldr	x9, [x19]
   26900:	ldur	x0, [x29, #-80]
   26904:	mov	x2, x27
   26908:	sub	x10, x8, #0x1
   2690c:	add	x8, x8, #0x3e
   26910:	cmp	x10, #0x0
   26914:	csel	x8, x8, x10, lt  // lt = tstop
   26918:	asr	x8, x8, #6
   2691c:	add	x1, x8, #0x1
   26920:	add	x3, x9, x24
   26924:	bl	c830 <mpfr_round_p@plt>
   26928:	cbz	w0, 2681c <mpfr_sinh_cosh@@Base+0x280>
   2692c:	ldr	x8, [sp, #40]
   26930:	sub	x1, x29, #0x48
   26934:	mov	x0, x21
   26938:	mov	w2, w20
   2693c:	ldr	w3, [x8, #8]
   26940:	bl	cb70 <mpfr_set4@plt>
   26944:	ldur	w3, [x29, #-96]
   26948:	str	w0, [sp, #32]
   2694c:	sub	x1, x29, #0x68
   26950:	mov	x0, x19
   26954:	mov	w2, w20
   26958:	bl	cb70 <mpfr_set4@plt>
   2695c:	str	w0, [sp, #36]
   26960:	mov	w8, wzr
   26964:	b	2676c <mpfr_sinh_cosh@@Base+0x1d0>
   26968:	mov	w2, #0x1                   	// #1
   2696c:	mov	x0, x19
   26970:	mov	w1, w20
   26974:	bl	c3a0 <mpfr_overflow@plt>
   26978:	ldr	x1, [sp, #40]
   2697c:	str	w0, [sp, #36]
   26980:	mov	x0, x21
   26984:	mov	w2, w20
   26988:	bl	c7e0 <mpfr_sinh@plt>
   2698c:	ldr	w9, [sp, #28]
   26990:	mov	w8, wzr
   26994:	orr	w9, w9, #0x2
   26998:	stp	w9, w0, [sp, #28]
   2699c:	b	2676c <mpfr_sinh_cosh@@Base+0x1d0>
   269a0:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   269a4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   269a8:	mov	w1, #0x94                  	// #148
   269ac:	add	x0, x0, #0x1af
   269b0:	add	x2, x2, #0x1c4
   269b4:	bl	d030 <mpfr_assert_fail@plt>
   269b8:	b	26838 <mpfr_sinh_cosh@@Base+0x29c>
   269bc:	ldr	x1, [sp, #56]
   269c0:	cbz	x1, 269cc <mpfr_sinh_cosh@@Base+0x430>
   269c4:	ldr	x0, [sp, #64]
   269c8:	bl	d120 <mpfr_free_func@plt>
   269cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   269d0:	ldr	x1, [x0, #2800]
   269d4:	add	x0, x0, #0xaf0
   269d8:	blr	x1
   269dc:	ldr	w9, [sp, #28]
   269e0:	str	w9, [x28, x0]
   269e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   269e8:	ldr	x1, [x0, #2736]
   269ec:	add	x0, x0, #0xab0
   269f0:	blr	x1
   269f4:	ldr	x10, [sp, #16]
   269f8:	str	x10, [x28, x0]
   269fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26a00:	ldr	x1, [x0, #2768]
   26a04:	add	x0, x0, #0xad0
   26a08:	blr	x1
   26a0c:	ldr	x11, [sp, #8]
   26a10:	str	x11, [x28, x0]
   26a14:	ldr	x8, [x21, #16]
   26a18:	cmp	x8, x11
   26a1c:	b.gt	26b58 <mpfr_sinh_cosh@@Base+0x5bc>
   26a20:	cmp	x8, x10
   26a24:	b.lt	26b58 <mpfr_sinh_cosh@@Base+0x5bc>  // b.tstop
   26a28:	ldr	w21, [sp, #32]
   26a2c:	cbz	w21, 26a48 <mpfr_sinh_cosh@@Base+0x4ac>
   26a30:	orr	w8, w9, #0x8
   26a34:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26a38:	ldr	x1, [x0, #2800]
   26a3c:	add	x0, x0, #0xaf0
   26a40:	blr	x1
   26a44:	str	w8, [x28, x0]
   26a48:	ldr	w11, [sp, #36]
   26a4c:	ldr	x8, [x19, #16]
   26a50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26a54:	ldr	x1, [x0, #2736]
   26a58:	add	x0, x0, #0xab0
   26a5c:	blr	x1
   26a60:	ldr	x9, [x28, x0]
   26a64:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26a68:	ldr	x1, [x0, #2768]
   26a6c:	add	x0, x0, #0xad0
   26a70:	blr	x1
   26a74:	cmp	x8, x9
   26a78:	b.lt	26b70 <mpfr_sinh_cosh@@Base+0x5d4>  // b.tstop
   26a7c:	ldr	x9, [x28, x0]
   26a80:	cmp	x8, x9
   26a84:	b.gt	26b70 <mpfr_sinh_cosh@@Base+0x5d4>
   26a88:	cbz	w11, 26aa8 <mpfr_sinh_cosh@@Base+0x50c>
   26a8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26a90:	ldr	x1, [x0, #2800]
   26a94:	add	x0, x0, #0xaf0
   26a98:	blr	x1
   26a9c:	ldr	w8, [x28, x0]
   26aa0:	orr	w8, w8, #0x8
   26aa4:	str	w8, [x28, x0]
   26aa8:	cmp	w21, #0x1
   26aac:	mov	w8, #0x1                   	// #1
   26ab0:	cinc	w8, w8, lt  // lt = tstop
   26ab4:	cmp	w21, #0x0
   26ab8:	mov	w9, #0x4                   	// #4
   26abc:	mov	w10, #0x8                   	// #8
   26ac0:	csel	w8, wzr, w8, eq  // eq = none
   26ac4:	cmp	w11, #0x1
   26ac8:	csel	w9, w10, w9, lt  // lt = tstop
   26acc:	cmp	w11, #0x0
   26ad0:	csel	w9, wzr, w9, eq  // eq = none
   26ad4:	orr	w0, w9, w8
   26ad8:	ldp	x20, x19, [sp, #416]
   26adc:	ldp	x22, x21, [sp, #400]
   26ae0:	ldp	x24, x23, [sp, #384]
   26ae4:	ldp	x26, x25, [sp, #368]
   26ae8:	ldp	x28, x27, [sp, #352]
   26aec:	ldp	x29, x30, [sp, #336]
   26af0:	add	sp, sp, #0x1b0
   26af4:	ret
   26af8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   26afc:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   26b00:	add	x0, x0, #0x1af
   26b04:	add	x2, x2, #0x1bb
   26b08:	mov	w1, #0x28                  	// #40
   26b0c:	bl	d030 <mpfr_assert_fail@plt>
   26b10:	b	265d4 <mpfr_sinh_cosh@@Base+0x38>
   26b14:	cmp	x8, x26
   26b18:	b.ne	26ba4 <mpfr_sinh_cosh@@Base+0x608>  // b.any
   26b1c:	str	x26, [x19, #16]
   26b20:	str	x26, [x21, #16]
   26b24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26b28:	ldr	x1, [x0, #2800]
   26b2c:	add	x0, x0, #0xaf0
   26b30:	blr	x1
   26b34:	mov	x8, x0
   26b38:	mrs	x9, tpidr_el0
   26b3c:	ldr	w10, [x9, x8]
   26b40:	mov	w0, wzr
   26b44:	orr	w10, w10, #0x4
   26b48:	str	w10, [x9, x8]
   26b4c:	b	26ad8 <mpfr_sinh_cosh@@Base+0x53c>
   26b50:	mov	x8, xzr
   26b54:	b	26688 <mpfr_sinh_cosh@@Base+0xec>
   26b58:	ldr	w1, [sp, #32]
   26b5c:	mov	x0, x21
   26b60:	mov	w2, w20
   26b64:	bl	d020 <mpfr_check_range@plt>
   26b68:	mov	w21, w0
   26b6c:	b	26a48 <mpfr_sinh_cosh@@Base+0x4ac>
   26b70:	mov	x0, x19
   26b74:	mov	w1, w11
   26b78:	mov	w2, w20
   26b7c:	bl	d020 <mpfr_check_range@plt>
   26b80:	mov	w11, w0
   26b84:	b	26aa8 <mpfr_sinh_cosh@@Base+0x50c>
   26b88:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   26b8c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   26b90:	add	x0, x0, #0x1af
   26b94:	add	x2, x2, #0xa36
   26b98:	mov	w1, #0x60                  	// #96
   26b9c:	bl	d030 <mpfr_assert_fail@plt>
   26ba0:	b	2667c <mpfr_sinh_cosh@@Base+0xe0>
   26ba4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   26ba8:	cmp	x8, x9
   26bac:	b.ne	26bd0 <mpfr_sinh_cosh@@Base+0x634>  // b.any
   26bb0:	str	x9, [x21, #16]
   26bb4:	ldr	w8, [x24, #8]
   26bb8:	mov	w10, #0x1                   	// #1
   26bbc:	mov	w0, wzr
   26bc0:	str	w8, [x21, #8]
   26bc4:	str	x9, [x19, #16]
   26bc8:	str	w10, [x19, #8]
   26bcc:	b	26ad8 <mpfr_sinh_cosh@@Base+0x53c>
   26bd0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   26bd4:	str	x8, [x21, #16]
   26bd8:	ldr	w8, [x24, #8]
   26bdc:	mov	w1, #0x1                   	// #1
   26be0:	mov	x0, x19
   26be4:	mov	x2, xzr
   26be8:	mov	w3, w20
   26bec:	str	w8, [x21, #8]
   26bf0:	bl	cac0 <mpfr_set_ui_2exp@plt>
   26bf4:	cmp	w0, #0x1
   26bf8:	mov	w8, #0x4                   	// #4
   26bfc:	mov	w9, #0x8                   	// #8
   26c00:	csel	w8, w9, w8, lt  // lt = tstop
   26c04:	cmp	w0, #0x0
   26c08:	csel	w0, wzr, w8, eq  // eq = none
   26c0c:	b	26ad8 <mpfr_sinh_cosh@@Base+0x53c>
   26c10:	bl	cdd0 <mpfr_abort_prec_max@plt>

0000000000026c14 <mpfr_acosh@@Base>:
   26c14:	sub	sp, sp, #0xb0
   26c18:	stp	x29, x30, [sp, #80]
   26c1c:	stp	x28, x27, [sp, #96]
   26c20:	stp	x26, x25, [sp, #112]
   26c24:	stp	x24, x23, [sp, #128]
   26c28:	stp	x22, x21, [sp, #144]
   26c2c:	stp	x20, x19, [sp, #160]
   26c30:	ldr	x8, [x1, #16]
   26c34:	mov	x28, #0x2                   	// #2
   26c38:	movk	x28, #0x8000, lsl #48
   26c3c:	add	x9, x28, #0x2
   26c40:	mov	x21, x1
   26c44:	cmp	x8, x9
   26c48:	mov	x19, x0
   26c4c:	add	x29, sp, #0x50
   26c50:	str	w2, [sp, #12]
   26c54:	b.lt	26fcc <mpfr_acosh@@Base+0x3b8>  // b.tstop
   26c58:	mov	w1, #0x1                   	// #1
   26c5c:	mov	x0, x21
   26c60:	mov	x2, xzr
   26c64:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   26c68:	tbnz	w0, #31, 26ff0 <mpfr_acosh@@Base+0x3dc>
   26c6c:	cbz	w0, 2701c <mpfr_acosh@@Base+0x408>
   26c70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26c74:	ldr	x1, [x0, #2800]
   26c78:	add	x0, x0, #0xaf0
   26c7c:	blr	x1
   26c80:	mrs	x27, tpidr_el0
   26c84:	ldr	w8, [x27, x0]
   26c88:	str	w8, [sp, #8]
   26c8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26c90:	ldr	x1, [x0, #2736]
   26c94:	add	x0, x0, #0xab0
   26c98:	blr	x1
   26c9c:	ldr	x25, [x27, x0]
   26ca0:	mov	x8, x0
   26ca4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26ca8:	ldr	x1, [x0, #2768]
   26cac:	add	x0, x0, #0xad0
   26cb0:	blr	x1
   26cb4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   26cb8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   26cbc:	ldr	x23, [x27, x0]
   26cc0:	str	x9, [x27, x8]
   26cc4:	str	x10, [x27, x0]
   26cc8:	ldr	x24, [x19]
   26ccc:	subs	x22, x24, #0x1
   26cd0:	add	x20, x24, #0x4
   26cd4:	b.eq	27034 <mpfr_acosh@@Base+0x420>  // b.none
   26cd8:	b.le	2703c <mpfr_acosh@@Base+0x428>
   26cdc:	clz	x8, x22
   26ce0:	mov	w9, #0x40                  	// #64
   26ce4:	sub	x8, x9, x8
   26ce8:	add	x22, x20, x8
   26cec:	sub	x0, x29, #0x20
   26cf0:	mov	x1, x22
   26cf4:	bl	cf60 <mpfr_init2@plt>
   26cf8:	ldr	w8, [sp, #12]
   26cfc:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   26d00:	cmp	w8, #0x0
   26d04:	mov	w8, #0x40                  	// #64
   26d08:	cinc	x24, x24, eq  // eq = none
   26d0c:	str	x8, [sp]
   26d10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26d14:	ldr	x1, [x0, #2800]
   26d18:	add	x0, x0, #0xaf0
   26d1c:	blr	x1
   26d20:	mov	x26, x0
   26d24:	str	wzr, [x27, x0]
   26d28:	sub	x0, x29, #0x20
   26d2c:	mov	w3, #0x3                   	// #3
   26d30:	mov	x1, x21
   26d34:	mov	x2, x21
   26d38:	bl	c1b0 <mpfr_mul@plt>
   26d3c:	ldrb	w8, [x27, x26]
   26d40:	tbnz	w8, #1, 26e50 <mpfr_acosh@@Base+0x23c>
   26d44:	ldur	x26, [x29, #-16]
   26d48:	sub	x0, x29, #0x20
   26d4c:	sub	x1, x29, #0x20
   26d50:	mov	w2, #0x1                   	// #1
   26d54:	mov	w3, #0x3                   	// #3
   26d58:	bl	ca00 <mpfr_sub_ui@plt>
   26d5c:	ldur	x8, [x29, #-16]
   26d60:	cmp	x8, x20
   26d64:	b.eq	26eb8 <mpfr_acosh@@Base+0x2a4>  // b.none
   26d68:	sub	x0, x29, #0x20
   26d6c:	sub	x1, x29, #0x20
   26d70:	mov	w2, wzr
   26d74:	sub	x26, x26, x8
   26d78:	bl	ce20 <mpfr_sqrt@plt>
   26d7c:	sub	x0, x29, #0x20
   26d80:	sub	x1, x29, #0x20
   26d84:	mov	x2, x21
   26d88:	mov	w3, wzr
   26d8c:	bl	c640 <mpfr_add@plt>
   26d90:	sub	x0, x29, #0x20
   26d94:	sub	x1, x29, #0x20
   26d98:	mov	w2, wzr
   26d9c:	bl	c520 <mpfr_log@plt>
   26da0:	ldur	x8, [x29, #-16]
   26da4:	cmp	x26, #0x1
   26da8:	csinc	x9, x26, xzr, gt
   26dac:	sub	x8, x9, x8
   26db0:	add	x9, x8, #0x3
   26db4:	add	x8, x8, #0x4
   26db8:	cmp	x9, #0x0
   26dbc:	csel	x8, xzr, x8, lt  // lt = tstop
   26dc0:	ldur	x9, [x29, #-16]
   26dc4:	add	x10, x28, #0x2
   26dc8:	cmp	x9, x10
   26dcc:	b.lt	26e0c <mpfr_acosh@@Base+0x1f8>  // b.tstop
   26dd0:	ldur	x9, [x29, #-32]
   26dd4:	ldur	x0, [x29, #-8]
   26dd8:	sub	x2, x22, x8
   26ddc:	mov	x3, x24
   26de0:	sub	x10, x9, #0x1
   26de4:	add	x9, x9, #0x3e
   26de8:	cmp	x10, #0x0
   26dec:	csel	x9, x9, x10, lt  // lt = tstop
   26df0:	asr	x9, x9, #6
   26df4:	add	x1, x9, #0x1
   26df8:	bl	c830 <mpfr_round_p@plt>
   26dfc:	cbz	w0, 26e0c <mpfr_acosh@@Base+0x1f8>
   26e00:	mov	w8, wzr
   26e04:	tbnz	w8, #0, 26d10 <mpfr_acosh@@Base+0xfc>
   26e08:	b	26f18 <mpfr_acosh@@Base+0x304>
   26e0c:	ldr	x9, [sp]
   26e10:	sub	x8, x28, x22
   26e14:	sub	x8, x8, #0x103
   26e18:	cmp	x9, x8
   26e1c:	mov	x8, x9
   26e20:	b.gt	26ef8 <mpfr_acosh@@Base+0x2e4>
   26e24:	add	x22, x22, x8
   26e28:	cmp	x22, #0x0
   26e2c:	cinc	x8, x22, lt  // lt = tstop
   26e30:	asr	x8, x8, #1
   26e34:	sub	x0, x29, #0x20
   26e38:	mov	x1, x22
   26e3c:	str	x8, [sp]
   26e40:	bl	c330 <mpfr_set_prec@plt>
   26e44:	mov	w8, #0x1                   	// #1
   26e48:	tbnz	w8, #0, 26d10 <mpfr_acosh@@Base+0xfc>
   26e4c:	b	26f18 <mpfr_acosh@@Base+0x304>
   26e50:	sub	x0, x29, #0x20
   26e54:	mov	x1, x21
   26e58:	mov	w2, wzr
   26e5c:	bl	c520 <mpfr_log@plt>
   26e60:	ldur	x8, [x29, #-16]
   26e64:	add	x0, sp, #0x10
   26e68:	subs	x8, x22, x8
   26e6c:	csinc	x1, x8, xzr, gt
   26e70:	bl	cf60 <mpfr_init2@plt>
   26e74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26e78:	ldr	x1, [x0, #2784]
   26e7c:	add	x0, x0, #0xae0
   26e80:	blr	x1
   26e84:	add	x1, x27, x0
   26e88:	add	x0, sp, #0x10
   26e8c:	mov	w2, wzr
   26e90:	bl	c840 <mpfr_cache@plt>
   26e94:	sub	x0, x29, #0x20
   26e98:	sub	x1, x29, #0x20
   26e9c:	add	x2, sp, #0x10
   26ea0:	mov	w3, wzr
   26ea4:	bl	c640 <mpfr_add@plt>
   26ea8:	add	x0, sp, #0x10
   26eac:	bl	c4f0 <mpfr_clear@plt>
   26eb0:	mov	w8, #0x1                   	// #1
   26eb4:	b	26dc0 <mpfr_acosh@@Base+0x1ac>
   26eb8:	sub	x0, x29, #0x20
   26ebc:	mov	w2, #0x1                   	// #1
   26ec0:	mov	w3, #0x3                   	// #3
   26ec4:	mov	x1, x21
   26ec8:	bl	ca00 <mpfr_sub_ui@plt>
   26ecc:	sub	x0, x29, #0x20
   26ed0:	sub	x1, x29, #0x20
   26ed4:	mov	w2, #0x1                   	// #1
   26ed8:	mov	w3, wzr
   26edc:	bl	c780 <mpfr_mul_2ui@plt>
   26ee0:	sub	x0, x29, #0x20
   26ee4:	sub	x1, x29, #0x20
   26ee8:	mov	w2, wzr
   26eec:	bl	ce20 <mpfr_sqrt@plt>
   26ef0:	mov	w8, #0x1                   	// #1
   26ef4:	b	26dc0 <mpfr_acosh@@Base+0x1ac>
   26ef8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   26efc:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   26f00:	mov	w1, #0x92                  	// #146
   26f04:	add	x0, x0, #0x207
   26f08:	add	x2, x2, #0x154
   26f0c:	bl	d030 <mpfr_assert_fail@plt>
   26f10:	ldr	x8, [sp]
   26f14:	b	26e24 <mpfr_acosh@@Base+0x210>
   26f18:	ldur	w3, [x29, #-24]
   26f1c:	ldr	w2, [sp, #12]
   26f20:	sub	x1, x29, #0x20
   26f24:	mov	x0, x19
   26f28:	bl	cb70 <mpfr_set4@plt>
   26f2c:	mov	w21, w0
   26f30:	sub	x0, x29, #0x20
   26f34:	bl	c4f0 <mpfr_clear@plt>
   26f38:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26f3c:	ldr	x1, [x0, #2800]
   26f40:	add	x0, x0, #0xaf0
   26f44:	blr	x1
   26f48:	ldr	w9, [sp, #8]
   26f4c:	str	w9, [x27, x0]
   26f50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26f54:	ldr	x1, [x0, #2736]
   26f58:	add	x0, x0, #0xab0
   26f5c:	blr	x1
   26f60:	str	x25, [x27, x0]
   26f64:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26f68:	ldr	x1, [x0, #2768]
   26f6c:	add	x0, x0, #0xad0
   26f70:	blr	x1
   26f74:	str	x23, [x27, x0]
   26f78:	ldr	x8, [x19, #16]
   26f7c:	cmp	x8, x23
   26f80:	b.gt	27058 <mpfr_acosh@@Base+0x444>
   26f84:	cmp	x8, x25
   26f88:	b.lt	27058 <mpfr_acosh@@Base+0x444>  // b.tstop
   26f8c:	cbz	w21, 26fa8 <mpfr_acosh@@Base+0x394>
   26f90:	orr	w8, w9, #0x8
   26f94:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26f98:	ldr	x1, [x0, #2800]
   26f9c:	add	x0, x0, #0xaf0
   26fa0:	blr	x1
   26fa4:	str	w8, [x27, x0]
   26fa8:	mov	w0, w21
   26fac:	ldp	x20, x19, [sp, #160]
   26fb0:	ldp	x22, x21, [sp, #144]
   26fb4:	ldp	x24, x23, [sp, #128]
   26fb8:	ldp	x26, x25, [sp, #112]
   26fbc:	ldp	x28, x27, [sp, #96]
   26fc0:	ldp	x29, x30, [sp, #80]
   26fc4:	add	sp, sp, #0xb0
   26fc8:	ret
   26fcc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   26fd0:	cmp	x8, x9
   26fd4:	b.ne	26ff0 <mpfr_acosh@@Base+0x3dc>  // b.any
   26fd8:	ldr	w8, [x21, #8]
   26fdc:	cmp	w8, #0x1
   26fe0:	b.lt	26ff0 <mpfr_acosh@@Base+0x3dc>  // b.tstop
   26fe4:	mov	w21, wzr
   26fe8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   26fec:	b	27024 <mpfr_acosh@@Base+0x410>
   26ff0:	str	x28, [x19, #16]
   26ff4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   26ff8:	ldr	x1, [x0, #2800]
   26ffc:	add	x0, x0, #0xaf0
   27000:	blr	x1
   27004:	mrs	x8, tpidr_el0
   27008:	ldr	w9, [x8, x0]
   2700c:	mov	w21, wzr
   27010:	orr	w9, w9, #0x4
   27014:	str	w9, [x8, x0]
   27018:	b	26fa8 <mpfr_acosh@@Base+0x394>
   2701c:	mov	w21, wzr
   27020:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   27024:	mov	w9, #0x1                   	// #1
   27028:	str	x8, [x19, #16]
   2702c:	str	w9, [x19, #8]
   27030:	b	26fa8 <mpfr_acosh@@Base+0x394>
   27034:	mov	x8, xzr
   27038:	b	26ce8 <mpfr_acosh@@Base+0xd4>
   2703c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   27040:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   27044:	add	x0, x0, #0x207
   27048:	add	x2, x2, #0x14b
   2704c:	mov	w1, #0x53                  	// #83
   27050:	bl	d030 <mpfr_assert_fail@plt>
   27054:	b	26cdc <mpfr_acosh@@Base+0xc8>
   27058:	ldr	w2, [sp, #12]
   2705c:	mov	x0, x19
   27060:	mov	w1, w21
   27064:	bl	d020 <mpfr_check_range@plt>
   27068:	mov	w21, w0
   2706c:	b	26fa8 <mpfr_acosh@@Base+0x394>

0000000000027070 <mpfr_asinh@@Base>:
   27070:	sub	sp, sp, #0x90
   27074:	stp	x29, x30, [sp, #48]
   27078:	stp	x28, x27, [sp, #64]
   2707c:	stp	x26, x25, [sp, #80]
   27080:	stp	x24, x23, [sp, #96]
   27084:	stp	x22, x21, [sp, #112]
   27088:	stp	x20, x19, [sp, #128]
   2708c:	ldr	x8, [x1, #16]
   27090:	mov	x10, #0x2                   	// #2
   27094:	movk	x10, #0x8000, lsl #48
   27098:	add	x9, x10, #0x2
   2709c:	mov	x21, x1
   270a0:	cmp	x8, x9
   270a4:	mov	x19, x0
   270a8:	add	x29, sp, #0x30
   270ac:	b.lt	27364 <mpfr_asinh@@Base+0x2f4>  // b.tstop
   270b0:	mov	w20, w2
   270b4:	tbnz	x8, #63, 270c4 <mpfr_asinh@@Base+0x54>
   270b8:	mov	w8, wzr
   270bc:	cbnz	w8, 27340 <mpfr_asinh@@Base+0x2d0>
   270c0:	b	270e8 <mpfr_asinh@@Base+0x78>
   270c4:	ldr	x9, [x19]
   270c8:	mov	w10, #0x2                   	// #2
   270cc:	sub	x2, x10, x8, lsl #1
   270d0:	add	x8, x9, #0x1
   270d4:	cmp	x2, x8
   270d8:	b.hi	273b0 <mpfr_asinh@@Base+0x340>  // b.pmore
   270dc:	mov	w8, wzr
   270e0:	cbz	w8, 270b8 <mpfr_asinh@@Base+0x48>
   270e4:	cbnz	w8, 27340 <mpfr_asinh@@Base+0x2d0>
   270e8:	ldr	x25, [x19]
   270ec:	ldr	w22, [x21, #8]
   270f0:	subs	x24, x25, #0x1
   270f4:	add	x23, x25, #0x4
   270f8:	b.eq	273d8 <mpfr_asinh@@Base+0x368>  // b.none
   270fc:	b.le	273f8 <mpfr_asinh@@Base+0x388>
   27100:	clz	x8, x24
   27104:	mov	w9, #0x40                  	// #64
   27108:	sub	x8, x9, x8
   2710c:	add	x23, x23, x8
   27110:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27114:	ldr	x1, [x0, #2800]
   27118:	add	x0, x0, #0xaf0
   2711c:	blr	x1
   27120:	mrs	x28, tpidr_el0
   27124:	ldr	w8, [x28, x0]
   27128:	str	w8, [sp, #12]
   2712c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27130:	ldr	x1, [x0, #2736]
   27134:	add	x0, x0, #0xab0
   27138:	blr	x1
   2713c:	ldr	x26, [x28, x0]
   27140:	mov	x8, x0
   27144:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27148:	ldr	x1, [x0, #2768]
   2714c:	add	x0, x0, #0xad0
   27150:	blr	x1
   27154:	ldr	x27, [x28, x0]
   27158:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2715c:	str	x9, [x28, x8]
   27160:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   27164:	str	x8, [x28, x0]
   27168:	add	x0, sp, #0x10
   2716c:	mov	x1, x23
   27170:	bl	cf60 <mpfr_init2@plt>
   27174:	adrp	x8, 72000 <__gmpfr_l2b@@Base+0x2f0>
   27178:	adrp	x9, 72000 <__gmpfr_l2b@@Base+0x2f0>
   2717c:	ldr	x8, [x8, #4008]
   27180:	ldr	x9, [x9, #3944]
   27184:	cmp	w22, #0x0
   27188:	mov	w10, #0x40                  	// #64
   2718c:	str	x10, [sp]
   27190:	csel	x24, x9, x8, lt  // lt = tstop
   27194:	cmp	w20, #0x0
   27198:	cinc	x25, x25, eq  // eq = none
   2719c:	add	x0, sp, #0x10
   271a0:	mov	w3, #0x3                   	// #3
   271a4:	mov	x1, x21
   271a8:	mov	x2, x21
   271ac:	bl	c1b0 <mpfr_mul@plt>
   271b0:	add	x0, sp, #0x10
   271b4:	add	x1, sp, #0x10
   271b8:	mov	w2, #0x1                   	// #1
   271bc:	mov	w3, #0x3                   	// #3
   271c0:	bl	c710 <mpfr_add_ui@plt>
   271c4:	add	x0, sp, #0x10
   271c8:	add	x1, sp, #0x10
   271cc:	mov	w2, wzr
   271d0:	bl	ce20 <mpfr_sqrt@plt>
   271d4:	add	x0, sp, #0x10
   271d8:	add	x1, sp, #0x10
   271dc:	mov	x2, x21
   271e0:	mov	w3, wzr
   271e4:	blr	x24
   271e8:	add	x0, sp, #0x10
   271ec:	add	x1, sp, #0x10
   271f0:	mov	w2, wzr
   271f4:	bl	c520 <mpfr_log@plt>
   271f8:	ldr	x8, [sp, #32]
   271fc:	mov	x9, #0x2                   	// #2
   27200:	movk	x9, #0x8000, lsl #48
   27204:	add	x9, x9, #0x2
   27208:	cmp	x8, x9
   2720c:	b.lt	2724c <mpfr_asinh@@Base+0x1dc>  // b.tstop
   27210:	ldr	x9, [sp, #16]
   27214:	sub	x8, x8, #0x5
   27218:	cmn	x8, #0x1
   2721c:	csinv	x8, x8, xzr, lt  // lt = tstop
   27220:	add	x2, x8, x23
   27224:	sub	x8, x9, #0x1
   27228:	ldr	x0, [sp, #40]
   2722c:	add	x9, x9, #0x3e
   27230:	cmp	x8, #0x0
   27234:	csel	x8, x9, x8, lt  // lt = tstop
   27238:	asr	x8, x8, #6
   2723c:	add	x1, x8, #0x1
   27240:	mov	x3, x25
   27244:	bl	c830 <mpfr_round_p@plt>
   27248:	cbnz	w0, 272b0 <mpfr_asinh@@Base+0x240>
   2724c:	mov	x8, #0x2                   	// #2
   27250:	ldr	x9, [sp]
   27254:	movk	x8, #0x8000, lsl #48
   27258:	sub	x8, x8, x23
   2725c:	sub	x8, x8, #0x103
   27260:	cmp	x9, x8
   27264:	mov	x8, x9
   27268:	b.gt	27290 <mpfr_asinh@@Base+0x220>
   2726c:	add	x23, x23, x8
   27270:	cmp	x23, #0x0
   27274:	cinc	x8, x23, lt  // lt = tstop
   27278:	asr	x8, x8, #1
   2727c:	add	x0, sp, #0x10
   27280:	mov	x1, x23
   27284:	str	x8, [sp]
   27288:	bl	c330 <mpfr_set_prec@plt>
   2728c:	b	2719c <mpfr_asinh@@Base+0x12c>
   27290:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   27294:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   27298:	mov	w1, #0x6c                  	// #108
   2729c:	add	x0, x0, #0x20f
   272a0:	add	x2, x2, #0x154
   272a4:	bl	d030 <mpfr_assert_fail@plt>
   272a8:	ldr	x8, [sp]
   272ac:	b	2726c <mpfr_asinh@@Base+0x1fc>
   272b0:	add	x1, sp, #0x10
   272b4:	mov	x0, x19
   272b8:	mov	w2, w20
   272bc:	mov	w3, w22
   272c0:	bl	cb70 <mpfr_set4@plt>
   272c4:	mov	w22, w0
   272c8:	add	x0, sp, #0x10
   272cc:	bl	c4f0 <mpfr_clear@plt>
   272d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   272d4:	ldr	x1, [x0, #2800]
   272d8:	add	x0, x0, #0xaf0
   272dc:	blr	x1
   272e0:	ldr	w9, [sp, #12]
   272e4:	str	w9, [x28, x0]
   272e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   272ec:	ldr	x1, [x0, #2736]
   272f0:	add	x0, x0, #0xab0
   272f4:	blr	x1
   272f8:	str	x26, [x28, x0]
   272fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27300:	ldr	x1, [x0, #2768]
   27304:	add	x0, x0, #0xad0
   27308:	blr	x1
   2730c:	str	x27, [x28, x0]
   27310:	ldr	x8, [x19, #16]
   27314:	cmp	x8, x27
   27318:	b.gt	273e0 <mpfr_asinh@@Base+0x370>
   2731c:	cmp	x8, x26
   27320:	b.lt	273e0 <mpfr_asinh@@Base+0x370>  // b.tstop
   27324:	cbz	w22, 27340 <mpfr_asinh@@Base+0x2d0>
   27328:	orr	w8, w9, #0x8
   2732c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27330:	ldr	x1, [x0, #2800]
   27334:	add	x0, x0, #0xaf0
   27338:	blr	x1
   2733c:	str	w8, [x28, x0]
   27340:	mov	w0, w22
   27344:	ldp	x20, x19, [sp, #128]
   27348:	ldp	x22, x21, [sp, #112]
   2734c:	ldp	x24, x23, [sp, #96]
   27350:	ldp	x26, x25, [sp, #80]
   27354:	ldp	x28, x27, [sp, #64]
   27358:	ldp	x29, x30, [sp, #48]
   2735c:	add	sp, sp, #0x90
   27360:	ret
   27364:	cmp	x8, x10
   27368:	b.ne	27398 <mpfr_asinh@@Base+0x328>  // b.any
   2736c:	str	x10, [x19, #16]
   27370:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27374:	ldr	x1, [x0, #2800]
   27378:	add	x0, x0, #0xaf0
   2737c:	blr	x1
   27380:	mrs	x8, tpidr_el0
   27384:	ldr	w9, [x8, x0]
   27388:	mov	w22, wzr
   2738c:	orr	w9, w9, #0x4
   27390:	str	w9, [x8, x0]
   27394:	b	27340 <mpfr_asinh@@Base+0x2d0>
   27398:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2739c:	cmp	x8, x9
   273a0:	b.ne	27414 <mpfr_asinh@@Base+0x3a4>  // b.any
   273a4:	mov	w22, wzr
   273a8:	str	x9, [x19, #16]
   273ac:	b	27420 <mpfr_asinh@@Base+0x3b0>
   273b0:	mov	x0, x19
   273b4:	mov	x1, x21
   273b8:	mov	w3, wzr
   273bc:	mov	w4, w20
   273c0:	bl	ca10 <mpfr_round_near_x@plt>
   273c4:	cmp	w0, #0x0
   273c8:	mov	w22, w0
   273cc:	cset	w8, ne  // ne = any
   273d0:	cbnz	w0, 270e0 <mpfr_asinh@@Base+0x70>
   273d4:	b	270dc <mpfr_asinh@@Base+0x6c>
   273d8:	mov	x8, xzr
   273dc:	b	2710c <mpfr_asinh@@Base+0x9c>
   273e0:	mov	x0, x19
   273e4:	mov	w1, w22
   273e8:	mov	w2, w20
   273ec:	bl	d020 <mpfr_check_range@plt>
   273f0:	mov	w22, w0
   273f4:	b	27340 <mpfr_asinh@@Base+0x2d0>
   273f8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   273fc:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   27400:	add	x0, x0, #0x20f
   27404:	add	x2, x2, #0x14b
   27408:	mov	w1, #0x50                  	// #80
   2740c:	bl	d030 <mpfr_assert_fail@plt>
   27410:	b	27100 <mpfr_asinh@@Base+0x90>
   27414:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   27418:	mov	w22, wzr
   2741c:	str	x8, [x19, #16]
   27420:	ldr	w8, [x21, #8]
   27424:	str	w8, [x19, #8]
   27428:	b	27340 <mpfr_asinh@@Base+0x2d0>

000000000002742c <mpfr_atanh@@Base>:
   2742c:	sub	sp, sp, #0xe0
   27430:	stp	x29, x30, [sp, #128]
   27434:	stp	x28, x27, [sp, #144]
   27438:	stp	x26, x25, [sp, #160]
   2743c:	stp	x24, x23, [sp, #176]
   27440:	stp	x22, x21, [sp, #192]
   27444:	stp	x20, x19, [sp, #208]
   27448:	ldr	x8, [x1, #16]
   2744c:	mov	x27, #0x2                   	// #2
   27450:	movk	x27, #0x8000, lsl #48
   27454:	add	x9, x27, #0x2
   27458:	mov	x21, x1
   2745c:	cmp	x8, x9
   27460:	mov	x19, x0
   27464:	add	x29, sp, #0x80
   27468:	b.lt	277ac <mpfr_atanh@@Base+0x380>  // b.tstop
   2746c:	cmp	x8, #0x1
   27470:	b.ge	277d0 <mpfr_atanh@@Base+0x3a4>  // b.tcont
   27474:	mov	w20, w2
   27478:	tbnz	x8, #63, 27488 <mpfr_atanh@@Base+0x5c>
   2747c:	mov	w8, wzr
   27480:	cbnz	w8, 27788 <mpfr_atanh@@Base+0x35c>
   27484:	b	274ac <mpfr_atanh@@Base+0x80>
   27488:	ldr	x9, [x19]
   2748c:	mov	w10, #0x1                   	// #1
   27490:	sub	x2, x10, x8, lsl #1
   27494:	add	x8, x9, #0x1
   27498:	cmp	x2, x8
   2749c:	b.hi	27844 <mpfr_atanh@@Base+0x418>  // b.pmore
   274a0:	mov	w8, wzr
   274a4:	cbz	w8, 2747c <mpfr_atanh@@Base+0x50>
   274a8:	cbnz	w8, 27788 <mpfr_atanh@@Base+0x35c>
   274ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   274b0:	ldr	x1, [x0, #2800]
   274b4:	add	x0, x0, #0xaf0
   274b8:	blr	x1
   274bc:	mrs	x28, tpidr_el0
   274c0:	ldr	w8, [x28, x0]
   274c4:	str	w8, [sp, #28]
   274c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   274cc:	ldr	x1, [x0, #2736]
   274d0:	add	x0, x0, #0xab0
   274d4:	blr	x1
   274d8:	ldr	x9, [x28, x0]
   274dc:	mov	x8, x0
   274e0:	str	x9, [sp, #16]
   274e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   274e8:	ldr	x1, [x0, #2768]
   274ec:	add	x0, x0, #0xad0
   274f0:	blr	x1
   274f4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   274f8:	str	x9, [x28, x8]
   274fc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   27500:	ldr	x24, [x28, x0]
   27504:	str	x8, [x28, x0]
   27508:	ldr	x8, [x21]
   2750c:	mov	w10, #0x1                   	// #1
   27510:	stur	x8, [x29, #-32]
   27514:	ldr	x9, [x21, #24]
   27518:	stur	w10, [x29, #-24]
   2751c:	stur	x9, [x29, #-8]
   27520:	ldr	x9, [x21, #16]
   27524:	stur	x9, [x29, #-16]
   27528:	ldr	x22, [x19]
   2752c:	cmp	x8, x22
   27530:	csel	x23, x8, x22, gt
   27534:	subs	x25, x23, #0x1
   27538:	b.eq	2786c <mpfr_atanh@@Base+0x440>  // b.none
   2753c:	b.le	27874 <mpfr_atanh@@Base+0x448>
   27540:	clz	x8, x25
   27544:	mov	w9, #0x40                  	// #64
   27548:	sub	x8, x9, x8
   2754c:	add	x8, x23, x8
   27550:	add	x23, x8, #0x4
   27554:	add	x0, sp, #0x40
   27558:	mov	x1, x23
   2755c:	bl	cf60 <mpfr_init2@plt>
   27560:	add	x0, sp, #0x20
   27564:	mov	x1, x23
   27568:	bl	cf60 <mpfr_init2@plt>
   2756c:	cmp	w20, #0x0
   27570:	mov	w8, #0x40                  	// #64
   27574:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   27578:	cinc	x25, x22, eq  // eq = none
   2757c:	str	x8, [sp, #8]
   27580:	mov	x0, x22
   27584:	bl	c0d0 <__gmpfr_int_ceil_log2@plt>
   27588:	add	w8, w0, #0x1
   2758c:	ldur	x9, [x29, #-16]
   27590:	sxtw	x8, w8
   27594:	sdiv	x8, x22, x8
   27598:	mvn	x8, x8
   2759c:	cmp	x9, x8
   275a0:	b.le	2761c <mpfr_atanh@@Base+0x1f0>
   275a4:	add	x0, sp, #0x20
   275a8:	sub	x2, x29, #0x20
   275ac:	mov	w1, #0x1                   	// #1
   275b0:	mov	w3, #0x2                   	// #2
   275b4:	bl	cf30 <mpfr_ui_sub@plt>
   275b8:	add	x0, sp, #0x40
   275bc:	sub	x1, x29, #0x20
   275c0:	mov	w2, #0x1                   	// #1
   275c4:	mov	w3, #0x3                   	// #3
   275c8:	bl	c710 <mpfr_add_ui@plt>
   275cc:	add	x0, sp, #0x40
   275d0:	add	x1, sp, #0x40
   275d4:	add	x2, sp, #0x20
   275d8:	mov	w3, wzr
   275dc:	bl	caf0 <mpfr_div@plt>
   275e0:	add	x0, sp, #0x40
   275e4:	add	x1, sp, #0x40
   275e8:	mov	w2, wzr
   275ec:	bl	c520 <mpfr_log@plt>
   275f0:	add	x0, sp, #0x40
   275f4:	add	x1, sp, #0x40
   275f8:	mov	w2, #0x1                   	// #1
   275fc:	mov	w3, wzr
   27600:	bl	cde0 <mpfr_div_2ui@plt>
   27604:	ldr	x8, [sp, #80]
   27608:	sub	x8, x8, #0x5
   2760c:	cmn	x8, #0x1
   27610:	csinv	x8, x8, xzr, lt  // lt = tstop
   27614:	add	x2, x8, x23
   27618:	b	2762c <mpfr_atanh@@Base+0x200>
   2761c:	add	x0, sp, #0x40
   27620:	sub	x1, x29, #0x20
   27624:	bl	278a8 <mpfr_atanh@@Base+0x47c>
   27628:	sub	x2, x23, w0, sxtw
   2762c:	ldr	x8, [sp, #80]
   27630:	cmp	x8, x26
   27634:	b.eq	27670 <mpfr_atanh@@Base+0x244>  // b.none
   27638:	add	x9, x27, #0x2
   2763c:	cmp	x8, x9
   27640:	b.lt	2767c <mpfr_atanh@@Base+0x250>  // b.tstop
   27644:	ldr	x8, [sp, #64]
   27648:	ldr	x0, [sp, #88]
   2764c:	mov	x3, x25
   27650:	sub	x9, x8, #0x1
   27654:	add	x8, x8, #0x3e
   27658:	cmp	x9, #0x0
   2765c:	csel	x8, x8, x9, lt  // lt = tstop
   27660:	asr	x8, x8, #6
   27664:	add	x1, x8, #0x1
   27668:	bl	c830 <mpfr_round_p@plt>
   2766c:	cbz	w0, 2767c <mpfr_atanh@@Base+0x250>
   27670:	mov	w8, wzr
   27674:	tbnz	w8, #0, 27580 <mpfr_atanh@@Base+0x154>
   27678:	b	276ec <mpfr_atanh@@Base+0x2c0>
   2767c:	ldr	x9, [sp, #8]
   27680:	sub	x8, x27, x23
   27684:	sub	x8, x8, #0x103
   27688:	cmp	x9, x8
   2768c:	mov	x8, x9
   27690:	b.gt	276cc <mpfr_atanh@@Base+0x2a0>
   27694:	add	x23, x23, x8
   27698:	cmp	x23, #0x0
   2769c:	cinc	x8, x23, lt  // lt = tstop
   276a0:	asr	x8, x8, #1
   276a4:	add	x0, sp, #0x40
   276a8:	mov	x1, x23
   276ac:	str	x8, [sp, #8]
   276b0:	bl	c330 <mpfr_set_prec@plt>
   276b4:	add	x0, sp, #0x20
   276b8:	mov	x1, x23
   276bc:	bl	c330 <mpfr_set_prec@plt>
   276c0:	mov	w8, #0x1                   	// #1
   276c4:	tbnz	w8, #0, 27580 <mpfr_atanh@@Base+0x154>
   276c8:	b	276ec <mpfr_atanh@@Base+0x2c0>
   276cc:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   276d0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   276d4:	mov	w1, #0xca                  	// #202
   276d8:	add	x0, x0, #0x217
   276dc:	add	x2, x2, #0x154
   276e0:	bl	d030 <mpfr_assert_fail@plt>
   276e4:	ldr	x8, [sp, #8]
   276e8:	b	27694 <mpfr_atanh@@Base+0x268>
   276ec:	ldr	w3, [x21, #8]
   276f0:	add	x1, sp, #0x40
   276f4:	mov	x0, x19
   276f8:	mov	w2, w20
   276fc:	bl	cb70 <mpfr_set4@plt>
   27700:	mov	w22, w0
   27704:	add	x0, sp, #0x40
   27708:	bl	c4f0 <mpfr_clear@plt>
   2770c:	add	x0, sp, #0x20
   27710:	bl	c4f0 <mpfr_clear@plt>
   27714:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27718:	ldr	x1, [x0, #2800]
   2771c:	add	x0, x0, #0xaf0
   27720:	blr	x1
   27724:	ldr	w9, [sp, #28]
   27728:	str	w9, [x28, x0]
   2772c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27730:	ldr	x1, [x0, #2736]
   27734:	add	x0, x0, #0xab0
   27738:	blr	x1
   2773c:	ldr	x10, [sp, #16]
   27740:	str	x10, [x28, x0]
   27744:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27748:	ldr	x1, [x0, #2768]
   2774c:	add	x0, x0, #0xad0
   27750:	blr	x1
   27754:	str	x24, [x28, x0]
   27758:	ldr	x8, [x19, #16]
   2775c:	cmp	x8, x24
   27760:	b.gt	27890 <mpfr_atanh@@Base+0x464>
   27764:	cmp	x8, x10
   27768:	b.lt	27890 <mpfr_atanh@@Base+0x464>  // b.tstop
   2776c:	cbz	w22, 27788 <mpfr_atanh@@Base+0x35c>
   27770:	orr	w8, w9, #0x8
   27774:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27778:	ldr	x1, [x0, #2800]
   2777c:	add	x0, x0, #0xaf0
   27780:	blr	x1
   27784:	str	w8, [x28, x0]
   27788:	mov	w0, w22
   2778c:	ldp	x20, x19, [sp, #208]
   27790:	ldp	x22, x21, [sp, #192]
   27794:	ldp	x24, x23, [sp, #176]
   27798:	ldp	x26, x25, [sp, #160]
   2779c:	ldp	x28, x27, [sp, #144]
   277a0:	ldp	x29, x30, [sp, #128]
   277a4:	add	sp, sp, #0xe0
   277a8:	ret
   277ac:	and	x8, x8, #0xfffffffffffffffe
   277b0:	cmp	x8, x27
   277b4:	b.eq	27818 <mpfr_atanh@@Base+0x3ec>  // b.none
   277b8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   277bc:	str	x8, [x19, #16]
   277c0:	ldr	w8, [x21, #8]
   277c4:	mov	w22, wzr
   277c8:	str	w8, [x19, #8]
   277cc:	b	27788 <mpfr_atanh@@Base+0x35c>
   277d0:	b.ne	27818 <mpfr_atanh@@Base+0x3ec>  // b.any
   277d4:	mov	x0, x21
   277d8:	bl	c360 <mpfr_powerof2_raw@plt>
   277dc:	cbz	w0, 27818 <mpfr_atanh@@Base+0x3ec>
   277e0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   277e4:	str	x8, [x19, #16]
   277e8:	ldr	w8, [x21, #8]
   277ec:	str	w8, [x19, #8]
   277f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   277f4:	ldr	x1, [x0, #2800]
   277f8:	add	x0, x0, #0xaf0
   277fc:	blr	x1
   27800:	mrs	x8, tpidr_el0
   27804:	ldr	w9, [x8, x0]
   27808:	mov	w22, wzr
   2780c:	orr	w9, w9, #0x20
   27810:	str	w9, [x8, x0]
   27814:	b	27788 <mpfr_atanh@@Base+0x35c>
   27818:	str	x27, [x19, #16]
   2781c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27820:	ldr	x1, [x0, #2800]
   27824:	add	x0, x0, #0xaf0
   27828:	blr	x1
   2782c:	mrs	x8, tpidr_el0
   27830:	ldr	w9, [x8, x0]
   27834:	mov	w22, wzr
   27838:	orr	w9, w9, #0x4
   2783c:	str	w9, [x8, x0]
   27840:	b	27788 <mpfr_atanh@@Base+0x35c>
   27844:	mov	w3, #0x1                   	// #1
   27848:	mov	x0, x19
   2784c:	mov	x1, x21
   27850:	mov	w4, w20
   27854:	bl	ca10 <mpfr_round_near_x@plt>
   27858:	cmp	w0, #0x0
   2785c:	mov	w22, w0
   27860:	cset	w8, ne  // ne = any
   27864:	cbnz	w0, 274a4 <mpfr_atanh@@Base+0x78>
   27868:	b	274a0 <mpfr_atanh@@Base+0x74>
   2786c:	mov	x8, xzr
   27870:	b	2754c <mpfr_atanh@@Base+0x120>
   27874:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   27878:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2787c:	add	x0, x0, #0x217
   27880:	add	x2, x2, #0x1a6
   27884:	mov	w1, #0xa1                  	// #161
   27888:	bl	d030 <mpfr_assert_fail@plt>
   2788c:	b	27540 <mpfr_atanh@@Base+0x114>
   27890:	mov	x0, x19
   27894:	mov	w1, w22
   27898:	mov	w2, w20
   2789c:	bl	d020 <mpfr_check_range@plt>
   278a0:	mov	w22, w0
   278a4:	b	27788 <mpfr_atanh@@Base+0x35c>
   278a8:	sub	sp, sp, #0x90
   278ac:	stp	x29, x30, [sp, #96]
   278b0:	stp	x22, x21, [sp, #112]
   278b4:	stp	x20, x19, [sp, #128]
   278b8:	ldr	x19, [x0]
   278bc:	mov	x20, x0
   278c0:	mov	x21, x1
   278c4:	add	x0, sp, #0x20
   278c8:	mov	x1, x19
   278cc:	add	x29, sp, #0x60
   278d0:	bl	cf60 <mpfr_init2@plt>
   278d4:	mov	x0, sp
   278d8:	mov	x1, x19
   278dc:	bl	cf60 <mpfr_init2@plt>
   278e0:	sub	x0, x29, #0x20
   278e4:	mov	x1, x19
   278e8:	bl	cf60 <mpfr_init2@plt>
   278ec:	ldr	w3, [x21, #8]
   278f0:	add	x0, sp, #0x20
   278f4:	mov	w2, #0x5                   	// #5
   278f8:	mov	x1, x21
   278fc:	bl	cb70 <mpfr_set4@plt>
   27900:	ldr	w3, [sp, #40]
   27904:	add	x1, sp, #0x20
   27908:	mov	w2, #0x5                   	// #5
   2790c:	mov	x0, x20
   27910:	bl	cb70 <mpfr_set4@plt>
   27914:	sub	x0, x29, #0x20
   27918:	mov	w3, #0x5                   	// #5
   2791c:	mov	x1, x21
   27920:	mov	x2, x21
   27924:	bl	c1b0 <mpfr_mul@plt>
   27928:	mov	w22, #0xb                   	// #11
   2792c:	add	x0, sp, #0x20
   27930:	add	x1, sp, #0x20
   27934:	sub	x2, x29, #0x20
   27938:	mov	w3, #0x5                   	// #5
   2793c:	sub	x21, x22, #0x8
   27940:	bl	c1b0 <mpfr_mul@plt>
   27944:	mov	x0, sp
   27948:	add	x1, sp, #0x20
   2794c:	mov	w3, #0x5                   	// #5
   27950:	mov	x2, x21
   27954:	bl	d160 <mpfr_div_ui@plt>
   27958:	ldr	x8, [x20, #16]
   2795c:	ldr	x9, [sp, #16]
   27960:	sub	x8, x8, x19
   27964:	cmp	x9, x8
   27968:	b.le	27988 <mpfr_atanh@@Base+0x55c>
   2796c:	mov	x2, sp
   27970:	mov	w3, #0x5                   	// #5
   27974:	mov	x0, x20
   27978:	mov	x1, x20
   2797c:	bl	c640 <mpfr_add@plt>
   27980:	add	x22, x22, #0x2
   27984:	b	2792c <mpfr_atanh@@Base+0x500>
   27988:	lsr	x0, x22, #1
   2798c:	bl	c0d0 <__gmpfr_int_ceil_log2@plt>
   27990:	add	w8, w0, #0x2
   27994:	mov	w20, w0
   27998:	cmp	x19, w8, sxtw
   2799c:	b.le	279d0 <mpfr_atanh@@Base+0x5a4>
   279a0:	add	x0, sp, #0x20
   279a4:	bl	c4f0 <mpfr_clear@plt>
   279a8:	mov	x0, sp
   279ac:	bl	c4f0 <mpfr_clear@plt>
   279b0:	sub	x0, x29, #0x20
   279b4:	bl	c4f0 <mpfr_clear@plt>
   279b8:	mov	w0, w20
   279bc:	ldp	x20, x19, [sp, #128]
   279c0:	ldp	x22, x21, [sp, #112]
   279c4:	ldp	x29, x30, [sp, #96]
   279c8:	add	sp, sp, #0x90
   279cc:	ret
   279d0:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   279d4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   279d8:	add	x0, x0, #0x217
   279dc:	add	x2, x2, #0x21f
   279e0:	mov	w1, #0x56                  	// #86
   279e4:	bl	d030 <mpfr_assert_fail@plt>
   279e8:	b	279a0 <mpfr_atanh@@Base+0x574>

00000000000279ec <mpfr_atan@@Base>:
   279ec:	stp	x29, x30, [sp, #-96]!
   279f0:	stp	x28, x27, [sp, #16]
   279f4:	stp	x26, x25, [sp, #32]
   279f8:	stp	x24, x23, [sp, #48]
   279fc:	stp	x22, x21, [sp, #64]
   27a00:	stp	x20, x19, [sp, #80]
   27a04:	mov	x29, sp
   27a08:	sub	sp, sp, #0xdc0
   27a0c:	ldr	x8, [x1, #16]
   27a10:	mov	x9, #0xfffffffffffffeff    	// #-257
   27a14:	movk	x9, #0x7fff, lsl #48
   27a18:	add	x9, x9, #0x105
   27a1c:	mov	w25, w2
   27a20:	mov	x26, x1
   27a24:	cmp	x8, x9
   27a28:	mov	x28, x0
   27a2c:	b.lt	28254 <mpfr_atan@@Base+0x868>  // b.tstop
   27a30:	tbnz	x8, #63, 27a40 <mpfr_atan@@Base+0x54>
   27a34:	mov	w8, wzr
   27a38:	cbnz	w8, 28230 <mpfr_atan@@Base+0x844>
   27a3c:	b	27a64 <mpfr_atan@@Base+0x78>
   27a40:	ldr	x9, [x28]
   27a44:	mov	w10, #0x1                   	// #1
   27a48:	sub	x2, x10, x8, lsl #1
   27a4c:	add	x8, x9, #0x1
   27a50:	cmp	x2, x8
   27a54:	b.hi	282a8 <mpfr_atan@@Base+0x8bc>  // b.pmore
   27a58:	mov	w8, wzr
   27a5c:	cbz	w8, 27a34 <mpfr_atan@@Base+0x48>
   27a60:	cbnz	w8, 28230 <mpfr_atan@@Base+0x844>
   27a64:	ldr	x8, [x26]
   27a68:	mov	w9, #0x1                   	// #1
   27a6c:	stur	x8, [x29, #-40]
   27a70:	ldr	x8, [x26, #24]
   27a74:	stur	w9, [x29, #-32]
   27a78:	stur	x8, [x29, #-16]
   27a7c:	ldr	x8, [x26, #16]
   27a80:	stur	x8, [x29, #-24]
   27a84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27a88:	ldr	x1, [x0, #2800]
   27a8c:	add	x0, x0, #0xaf0
   27a90:	blr	x1
   27a94:	mrs	x10, tpidr_el0
   27a98:	ldr	w20, [x10, x0]
   27a9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27aa0:	ldr	x1, [x0, #2736]
   27aa4:	add	x0, x0, #0xab0
   27aa8:	blr	x1
   27aac:	ldr	x21, [x10, x0]
   27ab0:	mov	x8, x0
   27ab4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27ab8:	ldr	x1, [x0, #2768]
   27abc:	add	x0, x0, #0xad0
   27ac0:	blr	x1
   27ac4:	ldr	x24, [x10, x0]
   27ac8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   27acc:	str	x9, [x10, x8]
   27ad0:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   27ad4:	str	x8, [x10, x0]
   27ad8:	sub	x0, x29, #0x28
   27adc:	mov	w1, #0x1                   	// #1
   27ae0:	mov	x2, xzr
   27ae4:	str	x10, [sp, #40]
   27ae8:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   27aec:	cbz	w0, 282d0 <mpfr_atan@@Base+0x8e4>
   27af0:	ldr	x19, [x28]
   27af4:	mov	w22, w0
   27af8:	cmp	x19, #0x1
   27afc:	b.eq	282f0 <mpfr_atan@@Base+0x904>  // b.none
   27b00:	b.le	2830c <mpfr_atan@@Base+0x920>
   27b04:	ldr	x8, [x28]
   27b08:	mov	w9, #0x40                  	// #64
   27b0c:	sub	x8, x8, #0x1
   27b10:	clz	x8, x8
   27b14:	sub	x8, x9, x8
   27b18:	add	x19, x8, x19
   27b1c:	add	x23, x19, #0x44
   27b20:	sub	x0, x29, #0xb8
   27b24:	mov	x1, x23
   27b28:	bl	cdf0 <mpfr_mpz_init2@plt>
   27b2c:	mov	x8, #0xfffffffffffffeff    	// #-257
   27b30:	movk	x8, #0x7fff, lsl #48
   27b34:	sub	x8, x8, #0x44
   27b38:	cmp	x19, x8
   27b3c:	b.gt	28558 <mpfr_atan@@Base+0xb6c>
   27b40:	add	x8, x19, #0x43
   27b44:	add	x9, x19, #0x82
   27b48:	cmp	x8, #0x0
   27b4c:	csel	x8, x9, x8, lt  // lt = tstop
   27b50:	asr	x8, x8, #6
   27b54:	add	x27, x19, #0x4
   27b58:	cmp	x19, #0xbd
   27b5c:	add	x19, x8, #0x1
   27b60:	str	w20, [sp, #32]
   27b64:	stp	x24, x21, [sp, #16]
   27b68:	str	x26, [sp, #8]
   27b6c:	b.lt	27b84 <mpfr_atan@@Base+0x198>  // b.tstop
   27b70:	lsl	x0, x19, #5
   27b74:	str	x0, [sp, #72]
   27b78:	bl	d1f0 <mpfr_allocate_func@plt>
   27b7c:	str	x0, [sp, #80]
   27b80:	b	27b90 <mpfr_atan@@Base+0x1a4>
   27b84:	add	x8, sp, #0x48
   27b88:	add	x8, x8, #0x10
   27b8c:	stp	xzr, x8, [sp, #72]
   27b90:	ldr	x8, [sp, #80]
   27b94:	mov	w12, #0x18                  	// #24
   27b98:	cmp	w25, #0x0
   27b9c:	mov	w24, wzr
   27ba0:	stp	x8, x23, [x29, #-80]
   27ba4:	add	x9, x8, x19, lsl #3
   27ba8:	add	x10, x8, x19, lsl #4
   27bac:	madd	x8, x19, x12, x8
   27bb0:	mov	w11, #0x1                   	// #1
   27bb4:	str	w25, [sp, #36]
   27bb8:	mov	w25, #0x40                  	// #64
   27bbc:	stp	x9, x23, [x29, #-112]
   27bc0:	cset	w9, eq  // eq = none
   27bc4:	stur	x8, [x29, #-48]
   27bc8:	mov	w8, #0x40                  	// #64
   27bcc:	stur	x23, [x29, #-168]
   27bd0:	stur	w11, [x29, #-96]
   27bd4:	stur	w11, [x29, #-128]
   27bd8:	stur	w11, [x29, #-160]
   27bdc:	stur	w11, [x29, #-64]
   27be0:	stp	x10, x23, [x29, #-144]
   27be4:	str	x9, [sp, #48]
   27be8:	str	x8, [sp]
   27bec:	str	x28, [sp, #64]
   27bf0:	ldur	x8, [x29, #-24]
   27bf4:	mov	w9, #0x2                   	// #2
   27bf8:	sub	x9, x9, x8
   27bfc:	cmp	x8, #0x0
   27c00:	csinc	x8, x9, xzr, lt  // lt = tstop
   27c04:	add	x19, x8, x27
   27c08:	cmn	x19, #0x2
   27c0c:	b.eq	280d0 <mpfr_atan@@Base+0x6e4>  // b.none
   27c10:	b.le	280e0 <mpfr_atan@@Base+0x6f4>
   27c14:	add	x8, x19, #0x2
   27c18:	clz	x8, x8
   27c1c:	sub	w20, w25, w8
   27c20:	add	w23, w20, w20, lsl #1
   27c24:	subs	w21, w23, #0x3
   27c28:	b.eq	280d8 <mpfr_atan@@Base+0x6ec>  // b.none
   27c2c:	b.le	280fc <mpfr_atan@@Base+0x710>
   27c30:	sxtw	x8, w21
   27c34:	clz	x8, x8
   27c38:	sub	x21, x25, x8
   27c3c:	ldr	x9, [x28]
   27c40:	add	x8, x21, x19
   27c44:	add	x28, x8, #0x1
   27c48:	cmp	x9, #0x65
   27c4c:	b.lt	27c8c <mpfr_atan@@Base+0x2a0>  // b.tstop
   27c50:	cbz	x8, 27c68 <mpfr_atan@@Base+0x27c>
   27c54:	cmp	x28, #0x1
   27c58:	b.le	28118 <mpfr_atan@@Base+0x72c>
   27c5c:	add	x8, x21, x19
   27c60:	clz	x8, x8
   27c64:	sub	w8, w25, w8
   27c68:	cmp	w8, #0x0
   27c6c:	cinc	w8, w8, lt  // lt = tstop
   27c70:	asr	w8, w8, #1
   27c74:	sub	w8, w8, #0x3
   27c78:	sxtw	x19, w8
   27c7c:	sbfiz	x8, x8, #1, #32
   27c80:	add	x26, x8, #0x9
   27c84:	add	x28, x26, x28
   27c88:	b	27c94 <mpfr_atan@@Base+0x2a8>
   27c8c:	mov	x19, xzr
   27c90:	mov	x26, xzr
   27c94:	mov	x8, #0xfffffffffffffeff    	// #-257
   27c98:	movk	x8, #0x7fff, lsl #48
   27c9c:	cmp	x28, x8
   27ca0:	b.gt	28558 <mpfr_atan@@Base+0xb6c>
   27ca4:	sub	x8, x28, #0x1
   27ca8:	add	x9, x28, #0x3e
   27cac:	cmp	x8, #0x0
   27cb0:	ldr	x1, [sp, #72]
   27cb4:	csel	x8, x9, x8, lt  // lt = tstop
   27cb8:	asr	x8, x8, #6
   27cbc:	add	x21, x8, #0x1
   27cc0:	lsl	x2, x21, #5
   27cc4:	str	x2, [sp, #72]
   27cc8:	cbz	x1, 27cd8 <mpfr_atan@@Base+0x2ec>
   27ccc:	ldr	x0, [sp, #80]
   27cd0:	bl	c660 <mpfr_reallocate_func@plt>
   27cd4:	b	27ce0 <mpfr_atan@@Base+0x2f4>
   27cd8:	mov	x0, x2
   27cdc:	bl	d1f0 <mpfr_allocate_func@plt>
   27ce0:	mov	x8, x0
   27ce4:	mov	w11, #0x18                  	// #24
   27ce8:	str	w23, [sp, #60]
   27cec:	add	w23, w23, #0x3
   27cf0:	stp	x8, x28, [x29, #-80]
   27cf4:	add	x9, x8, x21, lsl #3
   27cf8:	add	x10, x8, x21, lsl #4
   27cfc:	madd	x8, x21, x11, x8
   27d00:	mov	w11, #0x1                   	// #1
   27d04:	cmp	w24, w23
   27d08:	str	x0, [sp, #80]
   27d0c:	stp	x9, x28, [x29, #-112]
   27d10:	stur	w11, [x29, #-96]
   27d14:	stp	x10, x28, [x29, #-144]
   27d18:	stur	w11, [x29, #-128]
   27d1c:	stur	x28, [x29, #-168]
   27d20:	stur	w11, [x29, #-160]
   27d24:	stur	x8, [x29, #-48]
   27d28:	stur	w11, [x29, #-64]
   27d2c:	b.cs	27d58 <mpfr_atan@@Base+0x36c>  // b.hs, b.nlast
   27d30:	mov	w8, w24
   27d34:	add	x9, sp, #0xd8
   27d38:	add	x24, x9, w24, uxtw #4
   27d3c:	sub	x21, x8, x23
   27d40:	mov	x0, x24
   27d44:	mov	x1, x28
   27d48:	bl	cdf0 <mpfr_mpz_init2@plt>
   27d4c:	adds	x21, x21, #0x1
   27d50:	add	x24, x24, #0x10
   27d54:	b.cc	27d40 <mpfr_atan@@Base+0x354>  // b.lo, b.ul, b.last
   27d58:	cmp	w22, #0x1
   27d5c:	b.lt	27d78 <mpfr_atan@@Base+0x38c>  // b.tstop
   27d60:	sub	x0, x29, #0x68
   27d64:	sub	x2, x29, #0x28
   27d68:	mov	w1, #0x1                   	// #1
   27d6c:	mov	w3, wzr
   27d70:	bl	c7b0 <mpfr_ui_div@plt>
   27d74:	b	27d8c <mpfr_atan@@Base+0x3a0>
   27d78:	ldur	w3, [x29, #-32]
   27d7c:	sub	x0, x29, #0x68
   27d80:	sub	x1, x29, #0x28
   27d84:	mov	w2, wzr
   27d88:	bl	cb70 <mpfr_set4@plt>
   27d8c:	ldur	x8, [x29, #-88]
   27d90:	neg	x21, x19
   27d94:	mov	x28, xzr
   27d98:	mov	x19, xzr
   27d9c:	cmp	x8, x21
   27da0:	b.le	27e4c <mpfr_atan@@Base+0x460>
   27da4:	mov	x24, xzr
   27da8:	b	27dd0 <mpfr_atan@@Base+0x3e4>
   27dac:	sub	x0, x29, #0x68
   27db0:	sub	x1, x29, #0x88
   27db4:	sub	x2, x29, #0x68
   27db8:	mov	w3, wzr
   27dbc:	bl	caf0 <mpfr_div@plt>
   27dc0:	ldur	x8, [x29, #-88]
   27dc4:	sub	x24, x24, #0x1
   27dc8:	cmp	x8, x21
   27dcc:	b.le	27e40 <mpfr_atan@@Base+0x454>
   27dd0:	sub	x0, x29, #0x88
   27dd4:	sub	x1, x29, #0x68
   27dd8:	mov	w2, wzr
   27ddc:	mov	x19, x8
   27de0:	bl	c8c0 <mpfr_sqr@plt>
   27de4:	sub	x0, x29, #0x88
   27de8:	sub	x1, x29, #0x88
   27dec:	mov	w2, #0x1                   	// #1
   27df0:	mov	w3, wzr
   27df4:	bl	c710 <mpfr_add_ui@plt>
   27df8:	sub	x0, x29, #0x88
   27dfc:	sub	x1, x29, #0x88
   27e00:	mov	w2, wzr
   27e04:	bl	ce20 <mpfr_sqrt@plt>
   27e08:	sub	x0, x29, #0x88
   27e0c:	sub	x1, x29, #0x88
   27e10:	mov	w2, #0x1                   	// #1
   27e14:	mov	w3, wzr
   27e18:	bl	ca00 <mpfr_sub_ui@plt>
   27e1c:	cmp	w22, #0x1
   27e20:	b.lt	27dac <mpfr_atan@@Base+0x3c0>  // b.tstop
   27e24:	cbnz	x24, 27dac <mpfr_atan@@Base+0x3c0>
   27e28:	sub	x0, x29, #0x68
   27e2c:	sub	x1, x29, #0x88
   27e30:	sub	x2, x29, #0x28
   27e34:	mov	w3, wzr
   27e38:	bl	c1b0 <mpfr_mul@plt>
   27e3c:	b	27dc0 <mpfr_atan@@Base+0x3d4>
   27e40:	mov	w8, #0x9                   	// #9
   27e44:	sub	x19, x8, x19, lsl #1
   27e48:	neg	x28, x24
   27e4c:	cmp	w20, #0x1
   27e50:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   27e54:	stur	x8, [x29, #-56]
   27e58:	b.lt	27fa0 <mpfr_atan@@Base+0x5b4>  // b.tstop
   27e5c:	ldur	x8, [x29, #-88]
   27e60:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   27e64:	cmp	x8, x9
   27e68:	b.eq	27fa0 <mpfr_atan@@Base+0x5b4>  // b.none
   27e6c:	mov	w21, #0x1                   	// #1
   27e70:	mov	w24, w20
   27e74:	mov	w25, #0x1                   	// #1
   27e78:	sub	x0, x29, #0x88
   27e7c:	sub	x1, x29, #0x68
   27e80:	mov	x2, x25
   27e84:	mov	w3, wzr
   27e88:	bl	c780 <mpfr_mul_2ui@plt>
   27e8c:	sub	x0, x29, #0x88
   27e90:	sub	x1, x29, #0x88
   27e94:	mov	w2, #0x1                   	// #1
   27e98:	bl	c7c0 <mpfr_rint@plt>
   27e9c:	ldur	x8, [x29, #-120]
   27ea0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   27ea4:	cmp	x8, x9
   27ea8:	b.eq	27f7c <mpfr_atan@@Base+0x590>  // b.none
   27eac:	sub	x0, x29, #0xb8
   27eb0:	sub	x1, x29, #0x88
   27eb4:	bl	cfb0 <mpfr_get_z_2exp@plt>
   27eb8:	neg	x2, x0
   27ebc:	sub	x0, x29, #0xb8
   27ec0:	sub	x1, x29, #0xb8
   27ec4:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   27ec8:	sub	x0, x29, #0x88
   27ecc:	sub	x1, x29, #0xb8
   27ed0:	mov	w2, wzr
   27ed4:	bl	c6e0 <mpfr_set_z@plt>
   27ed8:	sub	x0, x29, #0x88
   27edc:	sub	x1, x29, #0x88
   27ee0:	mov	x2, x25
   27ee4:	mov	w3, wzr
   27ee8:	bl	cde0 <mpfr_div_2ui@plt>
   27eec:	sub	x0, x29, #0xa8
   27ef0:	sub	x1, x29, #0xb8
   27ef4:	add	x4, sp, #0xd8
   27ef8:	mov	x2, x25
   27efc:	mov	w3, w24
   27f00:	bl	2855c <mpfr_atan@@Base+0xb70>
   27f04:	sub	x0, x29, #0xa8
   27f08:	sub	x1, x29, #0xa8
   27f0c:	sub	x2, x29, #0x88
   27f10:	mov	w3, wzr
   27f14:	bl	c1b0 <mpfr_mul@plt>
   27f18:	sub	x0, x29, #0x48
   27f1c:	sub	x1, x29, #0x48
   27f20:	sub	x2, x29, #0xa8
   27f24:	mov	w3, wzr
   27f28:	bl	c640 <mpfr_add@plt>
   27f2c:	sub	x0, x29, #0xa8
   27f30:	sub	x1, x29, #0x68
   27f34:	sub	x2, x29, #0x88
   27f38:	mov	w3, wzr
   27f3c:	bl	bfd0 <mpfr_sub@plt>
   27f40:	sub	x0, x29, #0x68
   27f44:	sub	x1, x29, #0x68
   27f48:	sub	x2, x29, #0x88
   27f4c:	mov	w3, wzr
   27f50:	bl	c1b0 <mpfr_mul@plt>
   27f54:	sub	x0, x29, #0x68
   27f58:	sub	x1, x29, #0x68
   27f5c:	mov	w2, #0x1                   	// #1
   27f60:	mov	w3, wzr
   27f64:	bl	c710 <mpfr_add_ui@plt>
   27f68:	sub	x0, x29, #0x68
   27f6c:	sub	x1, x29, #0xa8
   27f70:	sub	x2, x29, #0x68
   27f74:	mov	w3, wzr
   27f78:	bl	caf0 <mpfr_div@plt>
   27f7c:	cmp	w20, w21
   27f80:	b.ls	27fa0 <mpfr_atan@@Base+0x5b4>  // b.plast
   27f84:	ldur	x8, [x29, #-88]
   27f88:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   27f8c:	lsl	x25, x25, #1
   27f90:	sub	w24, w24, #0x1
   27f94:	cmp	x8, x9
   27f98:	add	w21, w21, #0x1
   27f9c:	b.ne	27e78 <mpfr_atan@@Base+0x48c>  // b.any
   27fa0:	sub	x0, x29, #0x48
   27fa4:	sub	x1, x29, #0x48
   27fa8:	sub	x2, x29, #0x68
   27fac:	mov	w3, wzr
   27fb0:	bl	c640 <mpfr_add@plt>
   27fb4:	sub	x0, x29, #0x48
   27fb8:	sub	x1, x29, #0x48
   27fbc:	mov	x2, x28
   27fc0:	mov	w3, wzr
   27fc4:	bl	c780 <mpfr_mul_2ui@plt>
   27fc8:	cmp	w22, #0x1
   27fcc:	b.lt	2801c <mpfr_atan@@Base+0x630>  // b.tstop
   27fd0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   27fd4:	ldr	x1, [x0, #2848]
   27fd8:	add	x0, x0, #0xb20
   27fdc:	blr	x1
   27fe0:	ldr	x8, [sp, #40]
   27fe4:	mov	w2, wzr
   27fe8:	add	x1, x8, x0
   27fec:	sub	x0, x29, #0x88
   27ff0:	bl	c840 <mpfr_cache@plt>
   27ff4:	sub	x0, x29, #0x88
   27ff8:	sub	x1, x29, #0x88
   27ffc:	mov	w2, #0x1                   	// #1
   28000:	mov	w3, wzr
   28004:	bl	cde0 <mpfr_div_2ui@plt>
   28008:	sub	x0, x29, #0x48
   2800c:	sub	x1, x29, #0x88
   28010:	sub	x2, x29, #0x48
   28014:	mov	w3, wzr
   28018:	bl	bfd0 <mpfr_sub@plt>
   2801c:	ldur	x8, [x29, #-56]
   28020:	mov	x9, #0xfffffffffffffeff    	// #-257
   28024:	ldr	x28, [sp, #64]
   28028:	movk	x9, #0x7fff, lsl #48
   2802c:	add	x9, x9, #0x105
   28030:	cmp	x8, x9
   28034:	mov	w8, #0x1                   	// #1
   28038:	mov	w25, #0x40                  	// #64
   2803c:	stur	w8, [x29, #-64]
   28040:	b.lt	28090 <mpfr_atan@@Base+0x6a4>  // b.tstop
   28044:	ldur	x8, [x29, #-72]
   28048:	add	x9, x26, x27
   2804c:	sub	x2, x9, x19
   28050:	ldr	x10, [x28]
   28054:	sub	x9, x8, #0x1
   28058:	add	x8, x8, #0x3e
   2805c:	cmp	x9, #0x0
   28060:	csel	x8, x8, x9, lt  // lt = tstop
   28064:	asr	x8, x8, #6
   28068:	add	x1, x8, #0x1
   2806c:	ldr	x8, [sp, #48]
   28070:	ldur	x0, [x29, #-48]
   28074:	add	x3, x10, x8
   28078:	bl	c830 <mpfr_round_p@plt>
   2807c:	cbz	w0, 28090 <mpfr_atan@@Base+0x6a4>
   28080:	mov	w8, wzr
   28084:	mov	w24, w23
   28088:	tbnz	w8, #0, 27bf0 <mpfr_atan@@Base+0x204>
   2808c:	b	28154 <mpfr_atan@@Base+0x768>
   28090:	ldr	x9, [sp]
   28094:	mov	x8, #0xfffffffffffffeff    	// #-257
   28098:	movk	x8, #0x7fff, lsl #48
   2809c:	sub	x8, x8, x27
   280a0:	cmp	x9, x8
   280a4:	mov	x8, x9
   280a8:	b.gt	28134 <mpfr_atan@@Base+0x748>
   280ac:	add	x27, x27, x8
   280b0:	cmp	x27, #0x0
   280b4:	cinc	x8, x27, lt  // lt = tstop
   280b8:	asr	x8, x8, #1
   280bc:	str	x8, [sp]
   280c0:	mov	w8, #0x1                   	// #1
   280c4:	mov	w24, w23
   280c8:	tbnz	w8, #0, 27bf0 <mpfr_atan@@Base+0x204>
   280cc:	b	28154 <mpfr_atan@@Base+0x768>
   280d0:	mov	w20, wzr
   280d4:	b	27c20 <mpfr_atan@@Base+0x234>
   280d8:	mov	x21, xzr
   280dc:	b	27c3c <mpfr_atan@@Base+0x250>
   280e0:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   280e4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   280e8:	mov	w1, #0x176                 	// #374
   280ec:	add	x0, x0, #0x420
   280f0:	add	x2, x2, #0x442
   280f4:	bl	d030 <mpfr_assert_fail@plt>
   280f8:	b	27c14 <mpfr_atan@@Base+0x228>
   280fc:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28100:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28104:	mov	w1, #0x178                 	// #376
   28108:	add	x0, x0, #0x420
   2810c:	add	x2, x2, #0x45d
   28110:	bl	d030 <mpfr_assert_fail@plt>
   28114:	b	27c30 <mpfr_atan@@Base+0x244>
   28118:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2811c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   28120:	mov	w1, #0x17f                 	// #383
   28124:	add	x0, x0, #0x420
   28128:	add	x2, x2, #0x985
   2812c:	bl	d030 <mpfr_assert_fail@plt>
   28130:	b	27c5c <mpfr_atan@@Base+0x270>
   28134:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28138:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2813c:	mov	w1, #0x1f6                 	// #502
   28140:	add	x0, x0, #0x420
   28144:	add	x2, x2, #0x46a
   28148:	bl	d030 <mpfr_assert_fail@plt>
   2814c:	ldr	x8, [sp]
   28150:	b	280ac <mpfr_atan@@Base+0x6c0>
   28154:	ldr	x8, [sp, #8]
   28158:	ldr	w2, [sp, #36]
   2815c:	sub	x1, x29, #0x48
   28160:	mov	x0, x28
   28164:	ldr	w3, [x8, #8]
   28168:	bl	cb70 <mpfr_set4@plt>
   2816c:	ldr	w8, [sp, #60]
   28170:	mov	w22, w0
   28174:	cmn	w8, #0x2
   28178:	b.lt	28194 <mpfr_atan@@Base+0x7a8>  // b.tstop
   2817c:	add	x21, sp, #0xd8
   28180:	mov	x0, x21
   28184:	bl	c610 <mpfr_mpz_clear@plt>
   28188:	subs	x23, x23, #0x1
   2818c:	add	x21, x21, #0x10
   28190:	b.ne	28180 <mpfr_atan@@Base+0x794>  // b.any
   28194:	sub	x0, x29, #0xb8
   28198:	bl	c610 <mpfr_mpz_clear@plt>
   2819c:	ldr	x1, [sp, #72]
   281a0:	ldr	x19, [sp, #16]
   281a4:	cbz	x1, 281b0 <mpfr_atan@@Base+0x7c4>
   281a8:	ldr	x0, [sp, #80]
   281ac:	bl	d120 <mpfr_free_func@plt>
   281b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   281b4:	ldr	x1, [x0, #2800]
   281b8:	add	x0, x0, #0xaf0
   281bc:	blr	x1
   281c0:	ldr	x8, [sp, #40]
   281c4:	ldr	w9, [sp, #32]
   281c8:	str	w9, [x8, x0]
   281cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   281d0:	ldr	x1, [x0, #2736]
   281d4:	add	x0, x0, #0xab0
   281d8:	blr	x1
   281dc:	ldr	x10, [sp, #24]
   281e0:	str	x10, [x8, x0]
   281e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   281e8:	ldr	x1, [x0, #2768]
   281ec:	add	x0, x0, #0xad0
   281f0:	blr	x1
   281f4:	str	x19, [x8, x0]
   281f8:	ldr	x8, [x28, #16]
   281fc:	ldr	w2, [sp, #36]
   28200:	cmp	x8, x19
   28204:	b.gt	282f8 <mpfr_atan@@Base+0x90c>
   28208:	cmp	x8, x10
   2820c:	b.lt	282f8 <mpfr_atan@@Base+0x90c>  // b.tstop
   28210:	cbz	w22, 28230 <mpfr_atan@@Base+0x844>
   28214:	orr	w8, w9, #0x8
   28218:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2821c:	ldr	x1, [x0, #2800]
   28220:	add	x0, x0, #0xaf0
   28224:	blr	x1
   28228:	ldr	x9, [sp, #40]
   2822c:	str	w8, [x9, x0]
   28230:	mov	w0, w22
   28234:	add	sp, sp, #0xdc0
   28238:	ldp	x20, x19, [sp, #80]
   2823c:	ldp	x22, x21, [sp, #64]
   28240:	ldp	x24, x23, [sp, #48]
   28244:	ldp	x26, x25, [sp, #32]
   28248:	ldp	x28, x27, [sp, #16]
   2824c:	ldp	x29, x30, [sp], #96
   28250:	ret
   28254:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   28258:	cmp	x8, x9
   2825c:	b.eq	28328 <mpfr_atan@@Base+0x93c>  // b.none
   28260:	mov	x9, #0x2                   	// #2
   28264:	movk	x9, #0x8000, lsl #48
   28268:	cmp	x8, x9
   2826c:	b.ne	283b0 <mpfr_atan@@Base+0x9c4>  // b.any
   28270:	mov	x8, #0xfffffffffffffeff    	// #-257
   28274:	movk	x8, #0x7fff, lsl #48
   28278:	add	x8, x8, #0x103
   2827c:	str	x8, [x28, #16]
   28280:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   28284:	ldr	x1, [x0, #2800]
   28288:	add	x0, x0, #0xaf0
   2828c:	blr	x1
   28290:	mrs	x8, tpidr_el0
   28294:	ldr	w9, [x8, x0]
   28298:	mov	w22, wzr
   2829c:	orr	w9, w9, #0x4
   282a0:	str	w9, [x8, x0]
   282a4:	b	28230 <mpfr_atan@@Base+0x844>
   282a8:	mov	x0, x28
   282ac:	mov	x1, x26
   282b0:	mov	w3, wzr
   282b4:	mov	w4, w25
   282b8:	bl	ca10 <mpfr_round_near_x@plt>
   282bc:	cmp	w0, #0x0
   282c0:	mov	w22, w0
   282c4:	cset	w8, ne  // ne = any
   282c8:	cbnz	w0, 27a5c <mpfr_atan@@Base+0x70>
   282cc:	b	27a58 <mpfr_atan@@Base+0x6c>
   282d0:	ldr	w19, [x26, #8]
   282d4:	mov	w2, w25
   282d8:	cmp	w19, #0x0
   282dc:	b.gt	2849c <mpfr_atan@@Base+0xab0>
   282e0:	cmp	w25, #0x2
   282e4:	b.ne	28490 <mpfr_atan@@Base+0xaa4>  // b.any
   282e8:	mov	w2, #0x3                   	// #3
   282ec:	b	2849c <mpfr_atan@@Base+0xab0>
   282f0:	mov	x8, xzr
   282f4:	b	27b18 <mpfr_atan@@Base+0x12c>
   282f8:	mov	x0, x28
   282fc:	mov	w1, w22
   28300:	bl	d020 <mpfr_check_range@plt>
   28304:	mov	w22, w0
   28308:	b	28230 <mpfr_atan@@Base+0x844>
   2830c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28310:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28314:	add	x0, x0, #0x420
   28318:	add	x2, x2, #0x427
   2831c:	mov	w1, #0x166                 	// #358
   28320:	bl	d030 <mpfr_assert_fail@plt>
   28324:	b	27b04 <mpfr_atan@@Base+0x118>
   28328:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2832c:	ldr	x1, [x0, #2800]
   28330:	add	x0, x0, #0xaf0
   28334:	blr	x1
   28338:	mrs	x19, tpidr_el0
   2833c:	ldr	w20, [x19, x0]
   28340:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   28344:	ldr	x1, [x0, #2736]
   28348:	add	x0, x0, #0xab0
   2834c:	blr	x1
   28350:	ldr	x21, [x19, x0]
   28354:	mov	x8, x0
   28358:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2835c:	ldr	x1, [x0, #2768]
   28360:	add	x0, x0, #0xad0
   28364:	blr	x1
   28368:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2836c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   28370:	ldr	x23, [x19, x0]
   28374:	str	x9, [x19, x8]
   28378:	str	x10, [x19, x0]
   2837c:	ldr	w8, [x26, #8]
   28380:	cmp	w8, #0x1
   28384:	b.lt	283c8 <mpfr_atan@@Base+0x9dc>  // b.tstop
   28388:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2838c:	ldr	x1, [x0, #2848]
   28390:	add	x0, x0, #0xb20
   28394:	blr	x1
   28398:	add	x1, x19, x0
   2839c:	mov	x0, x28
   283a0:	mov	w2, w25
   283a4:	bl	c840 <mpfr_cache@plt>
   283a8:	mov	w22, w0
   283ac:	b	2840c <mpfr_atan@@Base+0xa20>
   283b0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   283b4:	str	x8, [x28, #16]
   283b8:	ldr	w8, [x26, #8]
   283bc:	mov	w22, wzr
   283c0:	str	w8, [x28, #8]
   283c4:	b	28230 <mpfr_atan@@Base+0x844>
   283c8:	cmp	w25, #0x3
   283cc:	mov	w8, #0x2                   	// #2
   283d0:	csel	w8, w8, w25, eq  // eq = none
   283d4:	cmp	w25, #0x2
   283d8:	mov	w9, #0x3                   	// #3
   283dc:	csel	w2, w9, w8, eq  // eq = none
   283e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   283e4:	ldr	x1, [x0, #2848]
   283e8:	add	x0, x0, #0xb20
   283ec:	blr	x1
   283f0:	add	x1, x19, x0
   283f4:	mov	x0, x28
   283f8:	bl	c840 <mpfr_cache@plt>
   283fc:	ldr	w8, [x28, #8]
   28400:	neg	w22, w0
   28404:	neg	w8, w8
   28408:	str	w8, [x28, #8]
   2840c:	mov	w2, #0x1                   	// #1
   28410:	mov	x0, x28
   28414:	mov	x1, x28
   28418:	mov	w3, w25
   2841c:	bl	cde0 <mpfr_div_2ui@plt>
   28420:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   28424:	ldr	x1, [x0, #2800]
   28428:	add	x0, x0, #0xaf0
   2842c:	blr	x1
   28430:	str	w20, [x19, x0]
   28434:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   28438:	ldr	x1, [x0, #2736]
   2843c:	add	x0, x0, #0xab0
   28440:	blr	x1
   28444:	str	x21, [x19, x0]
   28448:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2844c:	ldr	x1, [x0, #2768]
   28450:	add	x0, x0, #0xad0
   28454:	blr	x1
   28458:	str	x23, [x19, x0]
   2845c:	ldr	x8, [x28, #16]
   28460:	cmp	x8, x23
   28464:	b.gt	28548 <mpfr_atan@@Base+0xb5c>
   28468:	cmp	x8, x21
   2846c:	b.lt	28548 <mpfr_atan@@Base+0xb5c>  // b.tstop
   28470:	cbz	w22, 28230 <mpfr_atan@@Base+0x844>
   28474:	orr	w8, w20, #0x8
   28478:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2847c:	ldr	x1, [x0, #2800]
   28480:	add	x0, x0, #0xaf0
   28484:	blr	x1
   28488:	str	w8, [x19, x0]
   2848c:	b	28230 <mpfr_atan@@Base+0x844>
   28490:	cmp	w25, #0x3
   28494:	mov	w8, #0x2                   	// #2
   28498:	csel	w2, w8, w25, eq  // eq = none
   2849c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   284a0:	ldr	x1, [x0, #2848]
   284a4:	add	x0, x0, #0xb20
   284a8:	blr	x1
   284ac:	ldr	x8, [sp, #40]
   284b0:	add	x1, x8, x0
   284b4:	mov	x0, x28
   284b8:	bl	c840 <mpfr_cache@plt>
   284bc:	mov	w22, w0
   284c0:	tbz	w19, #31, 284d4 <mpfr_atan@@Base+0xae8>
   284c4:	ldr	w8, [x28, #8]
   284c8:	neg	w22, w22
   284cc:	neg	w8, w8
   284d0:	str	w8, [x28, #8]
   284d4:	mov	w2, #0x2                   	// #2
   284d8:	mov	x0, x28
   284dc:	mov	x1, x28
   284e0:	mov	w3, w25
   284e4:	bl	cde0 <mpfr_div_2ui@plt>
   284e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   284ec:	ldr	x1, [x0, #2800]
   284f0:	add	x0, x0, #0xaf0
   284f4:	blr	x1
   284f8:	ldr	x8, [sp, #40]
   284fc:	str	w20, [x8, x0]
   28500:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   28504:	ldr	x1, [x0, #2736]
   28508:	add	x0, x0, #0xab0
   2850c:	blr	x1
   28510:	str	x21, [x8, x0]
   28514:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   28518:	ldr	x1, [x0, #2768]
   2851c:	add	x0, x0, #0xad0
   28520:	blr	x1
   28524:	str	x24, [x8, x0]
   28528:	ldr	x8, [x28, #16]
   2852c:	cmp	x8, x24
   28530:	b.gt	28548 <mpfr_atan@@Base+0xb5c>
   28534:	cmp	x8, x21
   28538:	b.lt	28548 <mpfr_atan@@Base+0xb5c>  // b.tstop
   2853c:	cbz	w22, 28230 <mpfr_atan@@Base+0x844>
   28540:	orr	w8, w20, #0x8
   28544:	b	28218 <mpfr_atan@@Base+0x82c>
   28548:	mov	x0, x28
   2854c:	mov	w1, w22
   28550:	mov	w2, w25
   28554:	b	28300 <mpfr_atan@@Base+0x914>
   28558:	bl	cdd0 <mpfr_abort_prec_max@plt>
   2855c:	stp	x29, x30, [sp, #-96]!
   28560:	stp	x28, x27, [sp, #16]
   28564:	stp	x26, x25, [sp, #32]
   28568:	stp	x24, x23, [sp, #48]
   2856c:	stp	x22, x21, [sp, #64]
   28570:	stp	x20, x19, [sp, #80]
   28574:	mov	x29, sp
   28578:	sub	sp, sp, #0x4c0
   2857c:	ldr	x8, [x0]
   28580:	mov	w25, w3
   28584:	mov	x21, x2
   28588:	mov	x19, x0
   2858c:	cmp	x8, #0xc0
   28590:	mov	x26, x1
   28594:	str	x4, [sp, #120]
   28598:	str	x8, [sp, #104]
   2859c:	b.gt	285d0 <mpfr_atan@@Base+0xbe4>
   285a0:	sub	x8, x21, #0x1
   285a4:	cmp	x8, #0x7
   285a8:	b.hi	285d0 <mpfr_atan@@Base+0xbe4>  // b.pmore
   285ac:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   285b0:	add	x9, x9, #0x230
   285b4:	adr	x10, 285c4 <mpfr_atan@@Base+0xbd8>
   285b8:	ldrh	w11, [x9, x8, lsl #1]
   285bc:	add	x10, x10, x11, lsl #2
   285c0:	br	x10
   285c4:	adrp	x1, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   285c8:	add	x1, x1, #0x240
   285cc:	b	28c94 <mpfr_atan@@Base+0x12a8>
   285d0:	sxtw	x8, w25
   285d4:	str	x19, [sp, #16]
   285d8:	add	x19, x8, #0x1
   285dc:	mov	x0, x26
   285e0:	mov	x1, x26
   285e4:	mov	x2, x26
   285e8:	lsl	x23, x19, #1
   285ec:	bl	c460 <__gmpz_mul@plt>
   285f0:	mov	x0, x26
   285f4:	mov	x1, xzr
   285f8:	lsl	x20, x21, #1
   285fc:	bl	bee0 <__gmpz_scan1@plt>
   28600:	cbz	x0, 28624 <mpfr_atan@@Base+0xc38>
   28604:	mov	x22, x0
   28608:	mov	x0, x26
   2860c:	mov	x1, x26
   28610:	mov	x2, x22
   28614:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   28618:	ldr	x21, [sp, #120]
   2861c:	sub	x22, x20, x22
   28620:	b	2862c <mpfr_atan@@Base+0xc40>
   28624:	ldr	x21, [sp, #120]
   28628:	mov	x22, x20
   2862c:	mov	w1, #0x1                   	// #1
   28630:	mov	x0, x26
   28634:	add	x27, x21, w19, sxtw #4
   28638:	add	x24, x21, x19, lsl #5
   2863c:	str	xzr, [sp, #696]
   28640:	bl	d010 <__gmpz_cmp_ui@plt>
   28644:	lsl	x8, x23, #4
   28648:	str	x8, [sp, #72]
   2864c:	str	x22, [sp, #128]
   28650:	stp	x27, x24, [sp, #48]
   28654:	str	x23, [sp, #8]
   28658:	str	x26, [sp, #88]
   2865c:	cbz	w0, 28a18 <mpfr_atan@@Base+0x102c>
   28660:	mov	x0, x27
   28664:	mov	x1, x26
   28668:	sxtw	x19, w19
   2866c:	bl	c410 <__gmpz_set@plt>
   28670:	cmp	w25, #0x1
   28674:	b.lt	286a0 <mpfr_atan@@Base+0xcb4>  // b.tstop
   28678:	add	w8, w25, #0x1
   2867c:	sub	x20, x8, #0x1
   28680:	mov	x1, x27
   28684:	add	x26, x1, #0x10
   28688:	mov	x0, x26
   2868c:	mov	x2, x1
   28690:	bl	c460 <__gmpz_mul@plt>
   28694:	subs	x20, x20, #0x1
   28698:	mov	x1, x26
   2869c:	b.ne	28684 <mpfr_atan@@Base+0xc98>  // b.any
   286a0:	mov	w8, w25
   286a4:	str	x8, [sp, #64]
   286a8:	add	x9, sp, #0xb8
   286ac:	add	x8, sp, #0x2b8
   286b0:	mov	x20, xzr
   286b4:	mov	w23, wzr
   286b8:	lsl	x10, x19, #4
   286bc:	sub	x9, x9, #0x8
   286c0:	sub	x8, x8, #0x8
   286c4:	str	wzr, [sp, #176]
   286c8:	stp	x9, x10, [sp, #32]
   286cc:	str	x8, [sp, #24]
   286d0:	sbfiz	x19, x23, #4, #32
   286d4:	str	x23, [sp, #96]
   286d8:	lsl	x8, x20, #1
   286dc:	mov	x23, x20
   286e0:	add	x20, x19, #0x10
   286e4:	add	x25, x24, x20
   286e8:	orr	x1, x8, #0x3
   286ec:	mov	x0, x25
   286f0:	bl	c110 <__gmpz_set_ui@plt>
   286f4:	add	x26, x21, x20
   286f8:	mov	x20, x23
   286fc:	ldp	x1, x23, [sp, #88]
   28700:	mov	w27, #0x1                   	// #1
   28704:	bfi	x27, x20, #1, #63
   28708:	mov	x0, x26
   2870c:	mov	x2, x27
   28710:	bl	c590 <__gmpz_mul_ui@plt>
   28714:	add	x28, x21, x19
   28718:	mov	x0, x28
   2871c:	mov	x1, x25
   28720:	mov	x2, x22
   28724:	bl	c6a0 <__gmpz_mul_2exp@plt>
   28728:	mov	x0, x28
   2872c:	mov	x1, x28
   28730:	mov	x2, x26
   28734:	bl	c240 <__gmpz_sub@plt>
   28738:	add	x0, x24, x19
   2873c:	mov	x1, x25
   28740:	mov	x2, x27
   28744:	bl	c590 <__gmpz_mul_ui@plt>
   28748:	add	x20, x20, #0x2
   2874c:	add	x8, sp, #0xb8
   28750:	mov	w9, #0x1                   	// #1
   28754:	str	x9, [x8, w23, sxtw #3]
   28758:	tbnz	w20, #1, 288cc <mpfr_atan@@Base+0xee0>
   2875c:	sxtw	x8, w23
   28760:	sub	x9, x8, #0x1
   28764:	str	x9, [sp, #112]
   28768:	ldr	x9, [sp, #72]
   2876c:	lsl	x11, x8, #4
   28770:	str	x20, [sp, #80]
   28774:	ubfx	x12, x20, #1, #31
   28778:	add	x20, x9, x11
   2877c:	ldp	x9, x24, [sp, #32]
   28780:	lsl	x8, x8, #3
   28784:	mov	x10, xzr
   28788:	add	x19, x9, x8
   2878c:	ldr	x9, [sp, #24]
   28790:	add	x13, x9, x8
   28794:	b	287d8 <mpfr_atan@@Base+0xdec>
   28798:	ldr	x9, [sp, #104]
   2879c:	ldr	w10, [sp, #176]
   287a0:	ldr	x21, [sp, #120]
   287a4:	str	x8, [x13], #-8
   287a8:	cmp	x8, x9
   287ac:	ldp	x9, x11, [sp, #152]
   287b0:	csinc	w10, w10, wzr, le
   287b4:	str	w10, [sp, #176]
   287b8:	ldr	x10, [sp, #168]
   287bc:	lsr	x12, x9, #1
   287c0:	sub	x20, x20, #0x10
   287c4:	sub	x11, x11, #0x10
   287c8:	sub	x19, x19, #0x8
   287cc:	add	x24, x24, #0x10
   287d0:	mov	w8, w9
   287d4:	tbnz	w9, #1, 288b8 <mpfr_atan@@Base+0xecc>
   287d8:	add	x26, x21, x20
   287dc:	add	x25, x21, x11
   287e0:	sub	x27, x26, #0x10
   287e4:	mov	x0, x25
   287e8:	mov	x1, x25
   287ec:	mov	x2, x27
   287f0:	stp	x13, x12, [sp, #144]
   287f4:	str	x10, [sp, #136]
   287f8:	add	x22, x10, #0x1
   287fc:	str	x11, [sp, #160]
   28800:	bl	c460 <__gmpz_mul@plt>
   28804:	add	x21, x21, x24
   28808:	add	x2, x21, #0x10
   2880c:	mov	x0, x25
   28810:	mov	x1, x25
   28814:	bl	c460 <__gmpz_mul@plt>
   28818:	sub	x28, x25, #0x10
   2881c:	mov	x0, x28
   28820:	mov	x1, x28
   28824:	mov	x2, x26
   28828:	bl	c460 <__gmpz_mul@plt>
   2882c:	ldr	x23, [sp, #128]
   28830:	mov	x0, x28
   28834:	mov	x1, x28
   28838:	str	x22, [sp, #168]
   2883c:	lsl	x2, x23, x22
   28840:	bl	c6a0 <__gmpz_mul_2exp@plt>
   28844:	mov	x0, x28
   28848:	mov	x1, x28
   2884c:	mov	x2, x25
   28850:	bl	ceb0 <__gmpz_add@plt>
   28854:	mov	x0, x27
   28858:	mov	x1, x27
   2885c:	mov	x2, x26
   28860:	bl	c460 <__gmpz_mul@plt>
   28864:	ldp	x12, x13, [sp, #136]
   28868:	mov	x11, #0xffffffffffffffff    	// #-1
   2886c:	add	x8, x12, #0x2
   28870:	str	x8, [x19]
   28874:	ldr	w9, [x21, #36]
   28878:	ldr	x10, [x21, #40]
   2887c:	lsl	x8, x23, x8
   28880:	cmp	w9, #0x0
   28884:	cneg	w9, w9, mi  // mi = first
   28888:	add	x10, x10, w9, uxtw #3
   2888c:	ldur	x10, [x10, #-8]
   28890:	eor	x9, x11, x9, lsl #6
   28894:	clz	x10, x10
   28898:	add	x8, x8, x10
   2889c:	ldr	x10, [sp, #112]
   288a0:	add	x8, x9, x8
   288a4:	cmp	x10, x12
   288a8:	b.eq	28798 <mpfr_atan@@Base+0xdac>  // b.none
   288ac:	ldur	x9, [x13, #-8]
   288b0:	add	x8, x9, x8
   288b4:	b	28798 <mpfr_atan@@Base+0xdac>
   288b8:	ldr	x23, [sp, #96]
   288bc:	ldr	x22, [sp, #128]
   288c0:	ldr	x24, [sp, #56]
   288c4:	ldr	x20, [sp, #80]
   288c8:	sub	w23, w23, w10
   288cc:	ldr	x8, [sp, #64]
   288d0:	add	w23, w23, #0x1
   288d4:	lsr	x8, x20, x8
   288d8:	cbnz	x8, 288e4 <mpfr_atan@@Base+0xef8>
   288dc:	ldr	w8, [sp, #176]
   288e0:	cbz	w8, 286d0 <mpfr_atan@@Base+0xce4>
   288e4:	cmp	w23, #0x2
   288e8:	str	x20, [sp, #80]
   288ec:	b.lt	289d0 <mpfr_atan@@Base+0xfe4>  // b.tstop
   288f0:	ldr	x9, [sp, #120]
   288f4:	mov	x10, x23
   288f8:	sxtw	x8, w23
   288fc:	add	x20, x8, #0x1
   28900:	add	x23, x9, w10, sxtw #4
   28904:	add	x9, sp, #0xb8
   28908:	add	x8, x9, w10, sxtw #3
   2890c:	mov	x19, xzr
   28910:	sub	x21, x8, #0x8
   28914:	mov	w22, #0x1                   	// #1
   28918:	b	28984 <mpfr_atan@@Base+0xf98>
   2891c:	sub	x27, x23, #0x20
   28920:	sub	x28, x24, #0x10
   28924:	mov	x0, x27
   28928:	mov	x1, x27
   2892c:	mov	x2, x28
   28930:	bl	c460 <__gmpz_mul@plt>
   28934:	ldr	x8, [x21], #-8
   28938:	mov	x0, x27
   2893c:	mov	x1, x27
   28940:	lsl	x8, x22, x8
   28944:	add	x19, x8, x19
   28948:	ldr	x8, [sp, #128]
   2894c:	mul	x2, x19, x8
   28950:	bl	c6a0 <__gmpz_mul_2exp@plt>
   28954:	mov	x0, x27
   28958:	mov	x1, x27
   2895c:	mov	x2, x25
   28960:	bl	ceb0 <__gmpz_add@plt>
   28964:	mov	x0, x26
   28968:	mov	x1, x26
   2896c:	mov	x2, x28
   28970:	bl	c460 <__gmpz_mul@plt>
   28974:	sub	x20, x20, #0x1
   28978:	cmp	x20, #0x2
   2897c:	mov	x23, x25
   28980:	b.le	289d0 <mpfr_atan@@Base+0xfe4>
   28984:	ldr	x8, [sp, #72]
   28988:	sub	x25, x23, #0x10
   2898c:	mov	x0, x25
   28990:	mov	x1, x25
   28994:	add	x24, x23, x8
   28998:	sub	x26, x24, #0x20
   2899c:	mov	x2, x26
   289a0:	bl	c460 <__gmpz_mul@plt>
   289a4:	ldr	x0, [sp, #88]
   289a8:	mov	w1, #0x1                   	// #1
   289ac:	bl	d010 <__gmpz_cmp_ui@plt>
   289b0:	cbz	w0, 2891c <mpfr_atan@@Base+0xf30>
   289b4:	ldur	x8, [x21, #-8]
   289b8:	ldr	x9, [sp, #48]
   289bc:	mov	x0, x25
   289c0:	mov	x1, x25
   289c4:	add	x2, x9, x8, lsl #4
   289c8:	bl	c460 <__gmpz_mul@plt>
   289cc:	b	2891c <mpfr_atan@@Base+0xf30>
   289d0:	ldr	x21, [sp, #120]
   289d4:	ldr	w8, [x21, #4]
   289d8:	ldr	x9, [x21, #8]
   289dc:	cmp	w8, #0x0
   289e0:	cneg	w8, w8, mi  // mi = first
   289e4:	add	x9, x9, w8, uxtw #3
   289e8:	ldur	x9, [x9, #-8]
   289ec:	lsl	x8, x8, #6
   289f0:	clz	x9, x9
   289f4:	sub	x8, x8, x9
   289f8:	ldr	x9, [sp, #104]
   289fc:	subs	x23, x8, x9, lsl #1
   28a00:	b.mi	28b90 <mpfr_atan@@Base+0x11a4>  // b.first
   28a04:	mov	x0, x21
   28a08:	mov	x1, x21
   28a0c:	mov	x2, x23
   28a10:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   28a14:	b	28ba0 <mpfr_atan@@Base+0x11b4>
   28a18:	ldr	x9, [sp, #104]
   28a1c:	mov	w8, #0x1                   	// #1
   28a20:	lsl	x8, x8, x25
   28a24:	udiv	x9, x9, x22
   28a28:	cmp	x9, x8
   28a2c:	csinc	x8, x8, x9, hi  // hi = pmore
   28a30:	str	x8, [sp, #176]
   28a34:	cbz	x8, 28cbc <mpfr_atan@@Base+0x12d0>
   28a38:	add	x8, sp, #0xb8
   28a3c:	mov	x20, xzr
   28a40:	mov	w23, wzr
   28a44:	sub	x8, x8, #0x8
   28a48:	str	x8, [sp, #168]
   28a4c:	b	28a60 <mpfr_atan@@Base+0x1074>
   28a50:	ldr	x8, [sp, #176]
   28a54:	add	w23, w23, #0x1
   28a58:	cmp	x8, x20
   28a5c:	b.ls	288e4 <mpfr_atan@@Base+0xef8>  // b.plast
   28a60:	sbfiz	x19, x23, #4, #32
   28a64:	add	x25, x24, x19
   28a68:	lsl	x8, x20, #1
   28a6c:	add	x26, x25, #0x10
   28a70:	orr	x1, x8, #0x3
   28a74:	mov	x0, x26
   28a78:	bl	c110 <__gmpz_set_ui@plt>
   28a7c:	add	x27, x21, x19
   28a80:	mov	x0, x27
   28a84:	mov	x1, x26
   28a88:	mov	x2, x22
   28a8c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   28a90:	mov	w28, #0x1                   	// #1
   28a94:	bfi	x28, x20, #1, #63
   28a98:	mov	x0, x27
   28a9c:	mov	x1, x27
   28aa0:	mov	x2, x28
   28aa4:	bl	c090 <__gmpz_sub_ui@plt>
   28aa8:	mov	x0, x25
   28aac:	mov	x1, x26
   28ab0:	mov	x2, x28
   28ab4:	bl	c590 <__gmpz_mul_ui@plt>
   28ab8:	add	x20, x20, #0x2
   28abc:	add	x8, sp, #0xb8
   28ac0:	mov	w9, #0x1                   	// #1
   28ac4:	str	x9, [x8, w23, sxtw #3]
   28ac8:	tbnz	w20, #1, 28a50 <mpfr_atan@@Base+0x1064>
   28acc:	mov	x9, x21
   28ad0:	sxtw	x8, w23
   28ad4:	add	x25, x9, x8, lsl #4
   28ad8:	ldr	x9, [sp, #168]
   28adc:	str	x23, [sp, #96]
   28ae0:	ldr	x23, [sp, #72]
   28ae4:	mov	x21, xzr
   28ae8:	str	x20, [sp, #80]
   28aec:	ubfx	x19, x20, #1, #31
   28af0:	add	x20, x9, x8, lsl #3
   28af4:	mov	x24, x22
   28af8:	add	x26, x25, x23
   28afc:	sub	x27, x26, #0x10
   28b00:	mov	x0, x25
   28b04:	mov	x1, x25
   28b08:	mov	x2, x27
   28b0c:	add	x22, x21, #0x1
   28b10:	bl	c460 <__gmpz_mul@plt>
   28b14:	sub	x28, x25, #0x10
   28b18:	mov	x0, x28
   28b1c:	mov	x1, x28
   28b20:	mov	x2, x26
   28b24:	bl	c460 <__gmpz_mul@plt>
   28b28:	lsl	x2, x24, x22
   28b2c:	mov	x0, x28
   28b30:	mov	x1, x28
   28b34:	bl	c6a0 <__gmpz_mul_2exp@plt>
   28b38:	mov	x0, x28
   28b3c:	mov	x1, x28
   28b40:	mov	x2, x25
   28b44:	bl	ceb0 <__gmpz_add@plt>
   28b48:	mov	x0, x27
   28b4c:	mov	x1, x27
   28b50:	mov	x2, x26
   28b54:	bl	c460 <__gmpz_mul@plt>
   28b58:	add	x8, x21, #0x2
   28b5c:	mov	w9, w19
   28b60:	lsr	x19, x19, #1
   28b64:	str	x8, [x20], #-8
   28b68:	mov	x21, x22
   28b6c:	mov	x25, x28
   28b70:	tbz	w9, #1, 28af8 <mpfr_atan@@Base+0x110c>
   28b74:	ldr	x23, [sp, #96]
   28b78:	mov	x22, x24
   28b7c:	ldr	x24, [sp, #56]
   28b80:	ldr	x20, [sp, #80]
   28b84:	sub	w23, w23, w21
   28b88:	ldr	x21, [sp, #120]
   28b8c:	b	28a50 <mpfr_atan@@Base+0x1064>
   28b90:	neg	x2, x23
   28b94:	mov	x0, x21
   28b98:	mov	x1, x21
   28b9c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   28ba0:	ldr	x8, [sp, #8]
   28ba4:	ldr	x22, [sp, #128]
   28ba8:	ldr	x20, [sp, #56]
   28bac:	add	x8, x21, x8, lsl #4
   28bb0:	ldr	w9, [x8, #4]
   28bb4:	ldr	x8, [x8, #8]
   28bb8:	cmp	w9, #0x0
   28bbc:	cneg	w9, w9, mi  // mi = first
   28bc0:	add	x8, x8, w9, uxtw #3
   28bc4:	ldur	x8, [x8, #-8]
   28bc8:	lsl	x9, x9, #6
   28bcc:	clz	x8, x8
   28bd0:	sub	x8, x9, x8
   28bd4:	ldr	x9, [sp, #104]
   28bd8:	subs	x19, x8, x9
   28bdc:	b.mi	28bf4 <mpfr_atan@@Base+0x1208>  // b.first
   28be0:	mov	x0, x20
   28be4:	mov	x1, x20
   28be8:	mov	x2, x19
   28bec:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   28bf0:	b	28c04 <mpfr_atan@@Base+0x1218>
   28bf4:	neg	x2, x19
   28bf8:	mov	x0, x20
   28bfc:	mov	x1, x20
   28c00:	bl	c6a0 <__gmpz_mul_2exp@plt>
   28c04:	mov	x0, x21
   28c08:	mov	x1, x21
   28c0c:	mov	x2, x20
   28c10:	bl	bf90 <__gmpz_tdiv_q@plt>
   28c14:	ldr	x20, [sp, #16]
   28c18:	mov	w2, #0x3                   	// #3
   28c1c:	mov	x1, x21
   28c20:	mov	x0, x20
   28c24:	bl	c6e0 <mpfr_set_z@plt>
   28c28:	ldr	x9, [sp, #80]
   28c2c:	ldr	x8, [x20, #16]
   28c30:	sub	w9, w9, #0x1
   28c34:	sxtw	x9, w9
   28c38:	msub	x9, x22, x9, x23
   28c3c:	sub	x9, x9, x19
   28c40:	add	x8, x9, x8
   28c44:	str	x8, [x20, #16]
   28c48:	b	28c9c <mpfr_atan@@Base+0x12b0>
   28c4c:	adrp	x1, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28c50:	add	x1, x1, #0x258
   28c54:	b	28c94 <mpfr_atan@@Base+0x12a8>
   28c58:	mov	x0, x26
   28c5c:	bl	c6f0 <__gmpz_get_ui@plt>
   28c60:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28c64:	mov	w8, #0x18                  	// #24
   28c68:	add	x9, x9, #0x240
   28c6c:	madd	x8, x0, x8, x9
   28c70:	add	x1, x8, #0x18
   28c74:	b	28c94 <mpfr_atan@@Base+0x12a8>
   28c78:	mov	x0, x26
   28c7c:	bl	c6f0 <__gmpz_get_ui@plt>
   28c80:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28c84:	mov	w8, #0x18                  	// #24
   28c88:	add	x9, x9, #0x240
   28c8c:	madd	x8, x0, x8, x9
   28c90:	add	x1, x8, #0x60
   28c94:	mov	x0, x19
   28c98:	bl	28ce0 <mpfr_atan@@Base+0x12f4>
   28c9c:	add	sp, sp, #0x4c0
   28ca0:	ldp	x20, x19, [sp, #80]
   28ca4:	ldp	x22, x21, [sp, #64]
   28ca8:	ldp	x24, x23, [sp, #48]
   28cac:	ldp	x26, x25, [sp, #32]
   28cb0:	ldp	x28, x27, [sp, #16]
   28cb4:	ldp	x29, x30, [sp], #96
   28cb8:	ret
   28cbc:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28cc0:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   28cc4:	add	x0, x0, #0x420
   28cc8:	add	x2, x2, #0x4b4
   28ccc:	mov	w1, #0xda                  	// #218
   28cd0:	bl	d030 <mpfr_assert_fail@plt>
   28cd4:	mov	x20, xzr
   28cd8:	mov	w23, wzr
   28cdc:	b	288e4 <mpfr_atan@@Base+0xef8>
   28ce0:	stp	x29, x30, [sp, #-48]!
   28ce4:	stp	x20, x19, [sp, #32]
   28ce8:	ldr	x8, [x0]
   28cec:	str	x21, [sp, #16]
   28cf0:	ldr	x20, [x0, #24]
   28cf4:	mov	x19, x0
   28cf8:	sub	x9, x8, #0x1
   28cfc:	add	x10, x8, #0x3e
   28d00:	cmp	x9, #0x0
   28d04:	neg	w21, w8
   28d08:	csel	x8, x10, x9, lt  // lt = tstop
   28d0c:	asr	x8, x8, #6
   28d10:	add	x2, x8, #0x1
   28d14:	mvn	x8, x8
   28d18:	add	x8, x1, x8, lsl #3
   28d1c:	add	x1, x8, #0x18
   28d20:	mov	x0, x20
   28d24:	mov	x29, sp
   28d28:	bl	c9f0 <__gmpn_copyi@plt>
   28d2c:	ldr	x8, [x20]
   28d30:	mov	x9, #0xffffffffffffffff    	// #-1
   28d34:	lsl	x9, x9, x21
   28d38:	ldr	x21, [sp, #16]
   28d3c:	and	x8, x8, x9
   28d40:	str	x8, [x20]
   28d44:	str	xzr, [x19, #16]
   28d48:	ldp	x20, x19, [sp, #32]
   28d4c:	ldp	x29, x30, [sp], #48
   28d50:	ret

0000000000028d54 <mpfr_cmp2@@Base>:
   28d54:	sub	sp, sp, #0x70
   28d58:	stp	x29, x30, [sp, #16]
   28d5c:	stp	x26, x25, [sp, #48]
   28d60:	stp	x24, x23, [sp, #64]
   28d64:	stp	x22, x21, [sp, #80]
   28d68:	stp	x20, x19, [sp, #96]
   28d6c:	str	xzr, [sp, #8]
   28d70:	ldr	x8, [x0, #16]
   28d74:	mov	x9, #0x4                   	// #4
   28d78:	movk	x9, #0x8000, lsl #48
   28d7c:	mov	x19, x2
   28d80:	mov	x20, x0
   28d84:	cmp	x8, x9
   28d88:	mov	x22, x1
   28d8c:	str	x27, [sp, #32]
   28d90:	add	x29, sp, #0x10
   28d94:	b.eq	28e58 <mpfr_cmp2@@Base+0x104>  // b.none
   28d98:	ldr	x10, [x22, #16]
   28d9c:	cmp	x10, x9
   28da0:	b.eq	28e58 <mpfr_cmp2@@Base+0x104>  // b.none
   28da4:	sub	x21, x8, x10
   28da8:	tbnz	x21, #63, 28e6c <mpfr_cmp2@@Base+0x118>
   28dac:	ldr	x8, [x20]
   28db0:	ldr	x9, [x22]
   28db4:	ldr	x23, [x20, #24]
   28db8:	ldr	x22, [x22, #24]
   28dbc:	sub	x10, x8, #0x1
   28dc0:	add	x8, x8, #0x3e
   28dc4:	sub	x11, x9, #0x1
   28dc8:	cmp	x10, #0x0
   28dcc:	add	x9, x9, #0x3e
   28dd0:	csel	x8, x8, x10, lt  // lt = tstop
   28dd4:	cmp	x11, #0x0
   28dd8:	csel	x9, x9, x11, lt  // lt = tstop
   28ddc:	asr	x8, x8, #6
   28de0:	asr	x26, x9, #6
   28de4:	mov	x24, xzr
   28de8:	cbz	x21, 28df4 <mpfr_cmp2@@Base+0xa0>
   28dec:	mov	w20, #0x1                   	// #1
   28df0:	b	28eb0 <mpfr_cmp2@@Base+0x15c>
   28df4:	orr	x9, x26, x8
   28df8:	tbnz	x9, #63, 28e20 <mpfr_cmp2@@Base+0xcc>
   28dfc:	ldr	x9, [x23, x8, lsl #3]
   28e00:	ldr	x10, [x22, x26, lsl #3]
   28e04:	cmp	x9, x10
   28e08:	b.ne	28e20 <mpfr_cmp2@@Base+0xcc>  // b.any
   28e0c:	sub	x8, x8, #0x1
   28e10:	sub	x26, x26, #0x1
   28e14:	orr	x9, x26, x8
   28e18:	add	x24, x24, #0x40
   28e1c:	tbz	x9, #63, 28dfc <mpfr_cmp2@@Base+0xa8>
   28e20:	tbnz	x8, #63, 290c8 <mpfr_cmp2@@Base+0x374>
   28e24:	mov	w20, #0x1                   	// #1
   28e28:	ldr	x9, [x23, x8, lsl #3]
   28e2c:	tbnz	x26, #63, 2911c <mpfr_cmp2@@Base+0x3c8>
   28e30:	ldr	x10, [x22, x26, lsl #3]
   28e34:	cmp	x9, x10
   28e38:	csel	x9, x26, x8, cc  // cc = lo, ul, last
   28e3c:	csel	x10, x23, x22, cc  // cc = lo, ul, last
   28e40:	csel	x26, x8, x26, cc  // cc = lo, ul, last
   28e44:	csinv	w20, w20, wzr, cs  // cs = hs, nlast
   28e48:	csel	x23, x22, x23, cc  // cc = lo, ul, last
   28e4c:	mov	x8, x9
   28e50:	mov	x22, x10
   28e54:	b	28eb0 <mpfr_cmp2@@Base+0x15c>
   28e58:	mov	x0, x20
   28e5c:	mov	x1, x22
   28e60:	bl	cff0 <mpfr_ubf_diff_exp@plt>
   28e64:	mov	x21, x0
   28e68:	tbz	x21, #63, 28dac <mpfr_cmp2@@Base+0x58>
   28e6c:	ldr	x8, [x22]
   28e70:	ldr	x9, [x20]
   28e74:	ldr	x23, [x22, #24]
   28e78:	ldr	x22, [x20, #24]
   28e7c:	sub	x10, x8, #0x1
   28e80:	add	x8, x8, #0x3e
   28e84:	cmp	x10, #0x0
   28e88:	csel	x8, x8, x10, lt  // lt = tstop
   28e8c:	sub	x10, x9, #0x1
   28e90:	add	x9, x9, #0x3e
   28e94:	cmp	x10, #0x0
   28e98:	csel	x9, x9, x10, lt  // lt = tstop
   28e9c:	mov	x24, xzr
   28ea0:	neg	x21, x21
   28ea4:	asr	x8, x8, #6
   28ea8:	asr	x26, x9, #6
   28eac:	mov	w20, #0xffffffff            	// #-1
   28eb0:	cmp	x21, #0x3f
   28eb4:	b.hi	28f6c <mpfr_cmp2@@Base+0x218>  // b.pmore
   28eb8:	ldr	x9, [x22, x26, lsl #3]
   28ebc:	lsr	x9, x9, x21
   28ec0:	str	x9, [sp, #8]
   28ec4:	cbz	x21, 28edc <mpfr_cmp2@@Base+0x188>
   28ec8:	ldr	x9, [x22, x26, lsl #3]
   28ecc:	neg	x10, x21
   28ed0:	sub	x26, x26, #0x1
   28ed4:	lsl	x25, x9, x10
   28ed8:	b	28ee4 <mpfr_cmp2@@Base+0x190>
   28edc:	mov	x25, xzr
   28ee0:	sub	x26, x26, #0x1
   28ee4:	ldr	x9, [x23, x8, lsl #3]
   28ee8:	ldr	x10, [sp, #8]
   28eec:	cmp	x26, #0x0
   28ef0:	sub	x27, x8, #0x1
   28ef4:	cset	w8, ge  // ge = tcont
   28ef8:	cmp	x25, #0x0
   28efc:	sub	x10, x9, x10
   28f00:	cset	w11, ne  // ne = any
   28f04:	cmp	x10, #0x1
   28f08:	mov	w9, #0x1                   	// #1
   28f0c:	str	x10, [sp]
   28f10:	b.ne	28f1c <mpfr_cmp2@@Base+0x1c8>  // b.any
   28f14:	orr	w8, w8, w11
   28f18:	cbnz	w8, 29008 <mpfr_cmp2@@Base+0x2b4>
   28f1c:	mov	x8, x26
   28f20:	tbz	w9, #0, 28f78 <mpfr_cmp2@@Base+0x224>
   28f24:	clz	x9, x10
   28f28:	mov	w11, #0x3f                  	// #63
   28f2c:	sub	w11, w11, w9
   28f30:	mov	w12, #0x1                   	// #1
   28f34:	lsl	x11, x12, x11
   28f38:	cmp	x10, x11
   28f3c:	add	x9, x9, x24
   28f40:	b.eq	28f80 <mpfr_cmp2@@Base+0x22c>  // b.none
   28f44:	str	x9, [x19]
   28f48:	mov	w0, w20
   28f4c:	ldp	x20, x19, [sp, #96]
   28f50:	ldp	x22, x21, [sp, #80]
   28f54:	ldp	x24, x23, [sp, #64]
   28f58:	ldp	x26, x25, [sp, #48]
   28f5c:	ldr	x27, [sp, #32]
   28f60:	ldp	x29, x30, [sp, #16]
   28f64:	add	sp, sp, #0x70
   28f68:	ret
   28f6c:	mov	x25, xzr
   28f70:	sub	x21, x21, #0x40
   28f74:	b	28ee4 <mpfr_cmp2@@Base+0x190>
   28f78:	sub	x9, x24, #0x1
   28f7c:	cbnz	x10, 28f44 <mpfr_cmp2@@Base+0x1f0>
   28f80:	tbnz	x27, #63, 28ff4 <mpfr_cmp2@@Base+0x2a0>
   28f84:	tbz	x8, #63, 28f8c <mpfr_cmp2@@Base+0x238>
   28f88:	cbz	x25, 28ff4 <mpfr_cmp2@@Base+0x2a0>
   28f8c:	subs	x10, x21, #0x40
   28f90:	b.cc	28f9c <mpfr_cmp2@@Base+0x248>  // b.lo, b.ul, b.last
   28f94:	mov	x21, x10
   28f98:	b	28fd0 <mpfr_cmp2@@Base+0x27c>
   28f9c:	str	x25, [sp, #8]
   28fa0:	tbnz	x8, #63, 28fc8 <mpfr_cmp2@@Base+0x274>
   28fa4:	ldr	x10, [x22, x8, lsl #3]
   28fa8:	lsr	x10, x10, x21
   28fac:	add	x10, x10, x25
   28fb0:	str	x10, [sp, #8]
   28fb4:	cbz	x21, 28fcc <mpfr_cmp2@@Base+0x278>
   28fb8:	ldr	x10, [x22, x8, lsl #3]
   28fbc:	neg	x11, x21
   28fc0:	lsl	x25, x10, x11
   28fc4:	b	28fcc <mpfr_cmp2@@Base+0x278>
   28fc8:	mov	x25, xzr
   28fcc:	sub	x8, x8, #0x1
   28fd0:	ldr	x10, [x23, x27, lsl #3]
   28fd4:	ldr	x11, [sp, #8]
   28fd8:	cmp	x10, x11
   28fdc:	b.ne	290bc <mpfr_cmp2@@Base+0x368>  // b.any
   28fe0:	sub	x10, x27, #0x1
   28fe4:	cmp	x27, #0x0
   28fe8:	mov	x27, x10
   28fec:	b.gt	28f84 <mpfr_cmp2@@Base+0x230>
   28ff0:	b	28ff8 <mpfr_cmp2@@Base+0x2a4>
   28ff4:	mov	x10, x27
   28ff8:	tbz	x10, #63, 28f44 <mpfr_cmp2@@Base+0x1f0>
   28ffc:	cbz	x25, 290d4 <mpfr_cmp2@@Base+0x380>
   29000:	add	x9, x9, #0x1
   29004:	b	28f44 <mpfr_cmp2@@Base+0x1f0>
   29008:	lsr	x8, x26, #63
   2900c:	eor	w11, w8, #0x1
   29010:	add	x8, x27, #0x1
   29014:	cmp	x8, #0x1
   29018:	b.lt	29024 <mpfr_cmp2@@Base+0x2d0>  // b.tstop
   2901c:	ldr	x8, [x23, x27, lsl #3]
   29020:	b	29028 <mpfr_cmp2@@Base+0x2d4>
   29024:	mov	x8, xzr
   29028:	str	x8, [x29, #24]
   2902c:	str	x25, [sp, #8]
   29030:	tbz	w11, #0, 29050 <mpfr_cmp2@@Base+0x2fc>
   29034:	ldr	x8, [x22, x26, lsl #3]
   29038:	cbz	x21, 29058 <mpfr_cmp2@@Base+0x304>
   2903c:	add	x8, x25, x8, lsr #1
   29040:	str	x8, [sp, #8]
   29044:	ldr	x8, [x22, x26, lsl #3]
   29048:	lsl	x25, x8, #63
   2904c:	b	29060 <mpfr_cmp2@@Base+0x30c>
   29050:	mov	x25, xzr
   29054:	b	29060 <mpfr_cmp2@@Base+0x30c>
   29058:	add	x8, x8, x25
   2905c:	str	x8, [sp, #8]
   29060:	mov	x0, sp
   29064:	add	x1, x29, #0x18
   29068:	add	x2, sp, #0x8
   2906c:	mov	w3, #0x1                   	// #1
   29070:	bl	c2c0 <__gmpn_sub_n@plt>
   29074:	ldr	x10, [sp]
   29078:	cmp	x26, #0x0
   2907c:	cset	w11, gt
   29080:	cmp	x25, #0x0
   29084:	cset	w12, ne  // ne = any
   29088:	cmp	x0, #0x1
   2908c:	sub	x8, x26, #0x1
   29090:	add	x24, x24, #0x40
   29094:	cset	w9, eq  // eq = none
   29098:	cmp	x10, #0x1
   2909c:	sub	x27, x27, #0x1
   290a0:	b.ne	28f20 <mpfr_cmp2@@Base+0x1cc>  // b.any
   290a4:	cmp	x0, #0x1
   290a8:	b.ne	28f20 <mpfr_cmp2@@Base+0x1cc>  // b.any
   290ac:	orr	w12, w11, w12
   290b0:	mov	x26, x8
   290b4:	tbz	w12, #0, 28f20 <mpfr_cmp2@@Base+0x1cc>
   290b8:	b	29010 <mpfr_cmp2@@Base+0x2bc>
   290bc:	cinc	x8, x9, cc  // cc = lo, ul, last
   290c0:	str	x8, [x19]
   290c4:	b	28f48 <mpfr_cmp2@@Base+0x1f4>
   290c8:	tbz	x26, #63, 29104 <mpfr_cmp2@@Base+0x3b0>
   290cc:	mov	w20, wzr
   290d0:	b	28f48 <mpfr_cmp2@@Base+0x1f4>
   290d4:	tbnz	x8, #63, 290f4 <mpfr_cmp2@@Base+0x3a0>
   290d8:	ldr	x10, [x22, x8, lsl #3]
   290dc:	cbnz	x10, 290f4 <mpfr_cmp2@@Base+0x3a0>
   290e0:	sub	x10, x8, #0x1
   290e4:	cmp	x8, #0x0
   290e8:	mov	x8, x10
   290ec:	b.gt	290d8 <mpfr_cmp2@@Base+0x384>
   290f0:	b	290f8 <mpfr_cmp2@@Base+0x3a4>
   290f4:	mov	x10, x8
   290f8:	mvn	x8, x10
   290fc:	add	x9, x9, x8, lsr #63
   29100:	b	28f44 <mpfr_cmp2@@Base+0x1f0>
   29104:	mov	w20, #0xffffffff            	// #-1
   29108:	mov	x8, x26
   2910c:	mov	x26, #0xffffffffffffffff    	// #-1
   29110:	mov	x23, x22
   29114:	ldr	x9, [x23, x8, lsl #3]
   29118:	tbz	x26, #63, 28e30 <mpfr_cmp2@@Base+0xdc>
   2911c:	cbnz	x9, 2913c <mpfr_cmp2@@Base+0x3e8>
   29120:	sub	x10, x23, #0x8
   29124:	subs	x11, x8, #0x1
   29128:	b.lt	290cc <mpfr_cmp2@@Base+0x378>  // b.tstop
   2912c:	ldr	x9, [x10, x8, lsl #3]
   29130:	add	x24, x24, #0x40
   29134:	mov	x8, x11
   29138:	cbz	x9, 29124 <mpfr_cmp2@@Base+0x3d0>
   2913c:	clz	x8, x9
   29140:	orr	x8, x8, x24
   29144:	str	x8, [x19]
   29148:	b	28f48 <mpfr_cmp2@@Base+0x1f4>

000000000002914c <mpfr_exp_2@@Base>:
   2914c:	sub	sp, sp, #0x190
   29150:	stp	x29, x30, [sp, #304]
   29154:	stp	x28, x27, [sp, #320]
   29158:	stp	x26, x25, [sp, #336]
   2915c:	stp	x24, x23, [sp, #352]
   29160:	stp	x22, x21, [sp, #368]
   29164:	stp	x20, x19, [sp, #384]
   29168:	ldr	x24, [x1, #16]
   2916c:	ldr	x27, [x0]
   29170:	mov	x21, x1
   29174:	mov	x28, x0
   29178:	cmn	x24, #0x1
   2917c:	add	x29, sp, #0x130
   29180:	str	w2, [sp, #52]
   29184:	b.lt	29234 <mpfr_exp_2@@Base+0xe8>  // b.tstop
   29188:	mov	w8, #0x3f                  	// #63
   2918c:	add	x9, sp, #0x40
   29190:	mov	w10, #0x1                   	// #1
   29194:	stur	x8, [x29, #-80]
   29198:	stur	x9, [x29, #-56]
   2919c:	stur	w10, [x29, #-72]
   291a0:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
   291a4:	ldr	x2, [x2, #3984]
   291a8:	sub	x0, x29, #0x50
   291ac:	mov	x1, x21
   291b0:	mov	w3, wzr
   291b4:	bl	caf0 <mpfr_div@plt>
   291b8:	ldur	x8, [x29, #-64]
   291bc:	cmp	x8, #0x1
   291c0:	b.lt	29234 <mpfr_exp_2@@Base+0xe8>  // b.tstop
   291c4:	ldur	x9, [x29, #-56]
   291c8:	ldur	w10, [x29, #-72]
   291cc:	neg	x8, x8
   291d0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   291d4:	ldr	x9, [x9]
   291d8:	lsr	x8, x9, x8
   291dc:	cmp	x8, #0x0
   291e0:	csneg	x9, x11, x8, lt  // lt = tstop
   291e4:	cmp	w10, #0x0
   291e8:	csel	x22, x8, x9, gt
   291ec:	cbz	x22, 2923c <mpfr_exp_2@@Base+0xf0>
   291f0:	cmp	x22, #0x0
   291f4:	cneg	x8, x22, mi  // mi = first
   291f8:	add	x8, x8, #0x1
   291fc:	clz	x8, x8
   29200:	mov	w9, #0x40                  	// #64
   29204:	sub	w8, w9, w8
   29208:	str	x8, [sp, #56]
   2920c:	cmp	x27, #0x63
   29210:	b.gt	29248 <mpfr_exp_2@@Base+0xfc>
   29214:	add	x8, x27, #0x1
   29218:	add	x9, x27, #0x2
   2921c:	cmp	x8, #0x0
   29220:	csinc	x8, x9, x27, lt  // lt = tstop
   29224:	asr	x0, x8, #1
   29228:	bl	c380 <__gmpfr_isqrt@plt>
   2922c:	add	x19, x0, #0x3
   29230:	b	29254 <mpfr_exp_2@@Base+0x108>
   29234:	mov	x22, xzr
   29238:	cbnz	x22, 291f0 <mpfr_exp_2@@Base+0xa4>
   2923c:	str	xzr, [sp, #56]
   29240:	cmp	x27, #0x63
   29244:	b.le	29214 <mpfr_exp_2@@Base+0xc8>
   29248:	lsl	x0, x27, #2
   2924c:	bl	c540 <__gmpfr_cuberoot@plt>
   29250:	mov	x19, x0
   29254:	sub	x8, x27, #0x1
   29258:	udiv	x8, x8, x19
   2925c:	lsl	x23, x8, #1
   29260:	cmn	x23, #0x14
   29264:	b.eq	29630 <mpfr_exp_2@@Base+0x4e4>  // b.none
   29268:	bic	x9, x24, x24, asr #63
   2926c:	add	x8, x23, #0x13
   29270:	add	x9, x27, x9
   29274:	clz	x8, x8
   29278:	add	x9, x9, x19, lsl #1
   2927c:	sub	x8, x9, x8
   29280:	add	x24, x8, #0x4a
   29284:	ldr	x8, [sp, #56]
   29288:	mov	x20, #0xfffffffffffffeff    	// #-257
   2928c:	movk	x20, #0x7fff, lsl #48
   29290:	sxtw	x8, w8
   29294:	add	x25, x24, x8
   29298:	cmp	x25, x20
   2929c:	str	x8, [sp, #8]
   292a0:	b.gt	2964c <mpfr_exp_2@@Base+0x500>
   292a4:	sub	x8, x25, #0x1
   292a8:	add	x9, x25, #0x3e
   292ac:	cmp	x8, #0x0
   292b0:	csel	x8, x9, x8, lt  // lt = tstop
   292b4:	asr	x8, x8, #6
   292b8:	cmp	x25, #0x201
   292bc:	add	x26, x8, #0x1
   292c0:	str	x28, [sp, #24]
   292c4:	b.lt	292dc <mpfr_exp_2@@Base+0x190>  // b.tstop
   292c8:	lsl	x0, x26, #4
   292cc:	str	x0, [sp, #64]
   292d0:	bl	d1f0 <mpfr_allocate_func@plt>
   292d4:	str	x0, [sp, #72]
   292d8:	b	292e8 <mpfr_exp_2@@Base+0x19c>
   292dc:	add	x8, sp, #0x40
   292e0:	add	x8, x8, #0x10
   292e4:	stp	xzr, x8, [sp, #64]
   292e8:	ldr	x8, [sp, #72]
   292ec:	mov	w23, #0x1                   	// #1
   292f0:	sub	x0, x29, #0x60
   292f4:	stur	x25, [x29, #-80]
   292f8:	stp	x8, x25, [x29, #-56]
   292fc:	add	x8, x8, x26, lsl #3
   29300:	stur	w23, [x29, #-72]
   29304:	stur	x8, [x29, #-24]
   29308:	stur	w23, [x29, #-40]
   2930c:	bl	c400 <mpfr_mpz_init@plt>
   29310:	ldr	w9, [sp, #52]
   29314:	mov	x8, #0xfffffffffffffffe    	// #-2
   29318:	sub	x8, x8, x19
   2931c:	mrs	x28, tpidr_el0
   29320:	cmp	w9, #0x0
   29324:	str	x8, [sp, #40]
   29328:	cinc	x8, x27, eq  // eq = none
   2932c:	str	x8, [sp, #32]
   29330:	mov	w8, #0x40                  	// #64
   29334:	str	x8, [sp, #16]
   29338:	cmp	x22, #0x0
   2933c:	cinc	w25, w23, lt  // lt = tstop
   29340:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   29344:	ldr	x1, [x0, #2784]
   29348:	add	x0, x0, #0xae0
   2934c:	blr	x1
   29350:	add	x1, x28, x0
   29354:	sub	x0, x29, #0x30
   29358:	mov	w2, w25
   2935c:	cneg	x26, x22, mi  // mi = first
   29360:	bl	c840 <mpfr_cache@plt>
   29364:	sub	x0, x29, #0x50
   29368:	sub	x1, x29, #0x30
   2936c:	mov	x2, x26
   29370:	mov	w3, w25
   29374:	bl	bea0 <mpfr_mul_ui@plt>
   29378:	tbz	x22, #63, 29388 <mpfr_exp_2@@Base+0x23c>
   2937c:	ldur	w8, [x29, #-72]
   29380:	neg	w8, w8
   29384:	stur	w8, [x29, #-72]
   29388:	sub	x0, x29, #0x50
   2938c:	sub	x2, x29, #0x50
   29390:	mov	w3, #0x2                   	// #2
   29394:	mov	x1, x21
   29398:	bl	bfd0 <mpfr_sub@plt>
   2939c:	ldur	x9, [x29, #-64]
   293a0:	ldur	w11, [x29, #-72]
   293a4:	add	x10, x20, #0x105
   293a8:	cmp	x9, x10
   293ac:	cset	w8, lt  // lt = tstop
   293b0:	tbz	w11, #31, 293d8 <mpfr_exp_2@@Base+0x28c>
   293b4:	cmp	x9, x10
   293b8:	b.lt	293d8 <mpfr_exp_2@@Base+0x28c>  // b.tstop
   293bc:	sub	x0, x29, #0x50
   293c0:	sub	x1, x29, #0x50
   293c4:	sub	x2, x29, #0x30
   293c8:	mov	w3, #0x2                   	// #2
   293cc:	sub	x22, x22, #0x1
   293d0:	bl	c640 <mpfr_add@plt>
   293d4:	b	2939c <mpfr_exp_2@@Base+0x250>
   293d8:	tbnz	w8, #0, 294ec <mpfr_exp_2@@Base+0x3a0>
   293dc:	ldr	x8, [sp, #56]
   293e0:	cmp	w8, #0x1
   293e4:	b.lt	293f8 <mpfr_exp_2@@Base+0x2ac>  // b.tstop
   293e8:	sub	x0, x29, #0x50
   293ec:	mov	w2, #0x2                   	// #2
   293f0:	mov	x1, x24
   293f4:	bl	ce60 <mpfr_prec_round@plt>
   293f8:	sub	x0, x29, #0x50
   293fc:	sub	x1, x29, #0x50
   29400:	mov	w3, #0x2                   	// #2
   29404:	mov	x2, x19
   29408:	bl	cde0 <mpfr_div_2ui@plt>
   2940c:	sub	x0, x29, #0x60
   29410:	sub	x1, x29, #0x50
   29414:	sub	x3, x29, #0x10
   29418:	mov	x2, x24
   2941c:	cmp	x27, #0x63
   29420:	b.gt	29434 <mpfr_exp_2@@Base+0x2e8>
   29424:	bl	29650 <mpfr_exp_2@@Base+0x504>
   29428:	mov	x25, x0
   2942c:	cbnz	x19, 29440 <mpfr_exp_2@@Base+0x2f4>
   29430:	b	29478 <mpfr_exp_2@@Base+0x32c>
   29434:	bl	29838 <mpfr_exp_2@@Base+0x6ec>
   29438:	mov	x25, x0
   2943c:	cbz	x19, 29478 <mpfr_exp_2@@Base+0x32c>
   29440:	ldur	x26, [x29, #-16]
   29444:	mov	x23, x19
   29448:	sub	x0, x29, #0x60
   2944c:	sub	x1, x29, #0x60
   29450:	sub	x2, x29, #0x60
   29454:	bl	c460 <__gmpz_mul@plt>
   29458:	sub	x0, x29, #0x60
   2945c:	sub	x1, x29, #0x60
   29460:	mov	x2, x24
   29464:	bl	29c90 <mpfr_exp_2@@Base+0xb44>
   29468:	subs	x23, x23, #0x1
   2946c:	add	x26, x0, x26, lsl #1
   29470:	b.ne	29448 <mpfr_exp_2@@Base+0x2fc>  // b.any
   29474:	stur	x26, [x29, #-16]
   29478:	ldur	x2, [x29, #-16]
   2947c:	sub	x0, x29, #0x30
   29480:	sub	x1, x29, #0x60
   29484:	mov	w3, wzr
   29488:	bl	c9c0 <mpfr_set_z_2exp@plt>
   2948c:	subs	x23, x25, #0x1
   29490:	b.eq	29584 <mpfr_exp_2@@Base+0x438>  // b.none
   29494:	cbz	x25, 2958c <mpfr_exp_2@@Base+0x440>
   29498:	clz	x8, x23
   2949c:	mov	w9, #0x40                  	// #64
   294a0:	sub	x8, x9, x8
   294a4:	ldur	x9, [x29, #-32]
   294a8:	add	x10, x20, #0x105
   294ac:	mov	w23, #0x1                   	// #1
   294b0:	cmp	x9, x10
   294b4:	b.lt	294ec <mpfr_exp_2@@Base+0x3a0>  // b.tstop
   294b8:	ldur	x9, [x29, #-48]
   294bc:	ldp	x3, x10, [sp, #32]
   294c0:	ldur	x0, [x29, #-24]
   294c4:	sub	x11, x9, #0x1
   294c8:	add	x9, x9, #0x3e
   294cc:	cmp	x11, #0x0
   294d0:	csel	x9, x9, x11, lt  // lt = tstop
   294d4:	add	x10, x10, x24
   294d8:	asr	x9, x9, #6
   294dc:	add	x1, x9, #0x1
   294e0:	sub	x2, x10, x8
   294e4:	bl	c830 <mpfr_round_p@plt>
   294e8:	cbnz	w0, 295c8 <mpfr_exp_2@@Base+0x47c>
   294ec:	ldr	x9, [sp, #16]
   294f0:	sub	x8, x20, x24
   294f4:	cmp	x9, x8
   294f8:	mov	x8, x9
   294fc:	b.gt	295a8 <mpfr_exp_2@@Base+0x45c>
   29500:	add	x24, x24, x8
   29504:	ldr	x8, [sp, #8]
   29508:	cmp	x24, #0x0
   2950c:	add	x25, x24, x8
   29510:	cinc	x8, x24, lt  // lt = tstop
   29514:	cmp	x25, x20
   29518:	b.gt	2964c <mpfr_exp_2@@Base+0x500>
   2951c:	asr	x8, x8, #1
   29520:	str	x8, [sp, #16]
   29524:	sub	x8, x25, #0x1
   29528:	add	x9, x25, #0x3e
   2952c:	cmp	x8, #0x0
   29530:	ldr	x1, [sp, #64]
   29534:	csel	x8, x9, x8, lt  // lt = tstop
   29538:	asr	x8, x8, #6
   2953c:	add	x26, x8, #0x1
   29540:	lsl	x2, x26, #4
   29544:	str	x2, [sp, #64]
   29548:	cbz	x1, 29558 <mpfr_exp_2@@Base+0x40c>
   2954c:	ldr	x0, [sp, #72]
   29550:	bl	c660 <mpfr_reallocate_func@plt>
   29554:	b	29560 <mpfr_exp_2@@Base+0x414>
   29558:	mov	x0, x2
   2955c:	bl	d1f0 <mpfr_allocate_func@plt>
   29560:	mov	x8, x0
   29564:	stp	x8, x25, [x29, #-56]
   29568:	add	x8, x8, x26, lsl #3
   2956c:	str	x0, [sp, #72]
   29570:	stur	x25, [x29, #-80]
   29574:	stur	w23, [x29, #-72]
   29578:	stur	x8, [x29, #-24]
   2957c:	stur	w23, [x29, #-40]
   29580:	b	29338 <mpfr_exp_2@@Base+0x1ec>
   29584:	mov	x8, xzr
   29588:	b	294a4 <mpfr_exp_2@@Base+0x358>
   2958c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   29590:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   29594:	mov	w1, #0xf5                  	// #245
   29598:	add	x0, x0, #0x4bb
   2959c:	add	x2, x2, #0x4d4
   295a0:	bl	d030 <mpfr_assert_fail@plt>
   295a4:	b	29498 <mpfr_exp_2@@Base+0x34c>
   295a8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   295ac:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   295b0:	mov	w1, #0x102                 	// #258
   295b4:	add	x0, x0, #0x4bb
   295b8:	add	x2, x2, #0x4dc
   295bc:	bl	d030 <mpfr_assert_fail@plt>
   295c0:	ldr	x8, [sp, #16]
   295c4:	b	29500 <mpfr_exp_2@@Base+0x3b4>
   295c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   295cc:	ldr	x1, [x0, #2800]
   295d0:	add	x0, x0, #0xaf0
   295d4:	blr	x1
   295d8:	str	wzr, [x28, x0]
   295dc:	ldr	x0, [sp, #24]
   295e0:	ldr	w3, [sp, #52]
   295e4:	sub	x1, x29, #0x30
   295e8:	mov	x2, x22
   295ec:	bl	bff0 <mpfr_mul_2si@plt>
   295f0:	mov	w19, w0
   295f4:	sub	x0, x29, #0x60
   295f8:	bl	c610 <mpfr_mpz_clear@plt>
   295fc:	ldr	x1, [sp, #64]
   29600:	cbz	x1, 2960c <mpfr_exp_2@@Base+0x4c0>
   29604:	ldr	x0, [sp, #72]
   29608:	bl	d120 <mpfr_free_func@plt>
   2960c:	mov	w0, w19
   29610:	ldp	x20, x19, [sp, #384]
   29614:	ldp	x22, x21, [sp, #368]
   29618:	ldp	x24, x23, [sp, #352]
   2961c:	ldp	x26, x25, [sp, #336]
   29620:	ldp	x28, x27, [sp, #320]
   29624:	ldp	x29, x30, [sp, #304]
   29628:	add	sp, sp, #0x190
   2962c:	ret
   29630:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   29634:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   29638:	add	x0, x0, #0x4bb
   2963c:	add	x2, x2, #0x4c3
   29640:	mov	w1, #0x9f                  	// #159
   29644:	bl	d030 <mpfr_assert_fail@plt>
   29648:	b	29268 <mpfr_exp_2@@Base+0x11c>
   2964c:	bl	cdd0 <mpfr_abort_prec_max@plt>
   29650:	sub	sp, sp, #0x80
   29654:	mov	w8, #0x1                   	// #1
   29658:	stp	x22, x21, [sp, #96]
   2965c:	mov	x21, x0
   29660:	sub	x8, x8, x2
   29664:	add	x0, sp, #0x10
   29668:	stp	x29, x30, [sp, #32]
   2966c:	stp	x28, x27, [sp, #48]
   29670:	stp	x26, x25, [sp, #64]
   29674:	stp	x24, x23, [sp, #80]
   29678:	stp	x20, x19, [sp, #112]
   2967c:	add	x29, sp, #0x20
   29680:	mov	x19, x3
   29684:	mov	x20, x2
   29688:	mov	x22, x1
   2968c:	str	x8, [x3]
   29690:	bl	c400 <mpfr_mpz_init@plt>
   29694:	mov	x0, sp
   29698:	bl	c400 <mpfr_mpz_init@plt>
   2969c:	add	x0, sp, #0x10
   296a0:	mov	w1, #0x1                   	// #1
   296a4:	bl	c110 <__gmpz_set_ui@plt>
   296a8:	mov	w1, #0x1                   	// #1
   296ac:	mov	x0, x21
   296b0:	bl	c110 <__gmpz_set_ui@plt>
   296b4:	sub	x2, x20, #0x1
   296b8:	mov	x0, x21
   296bc:	mov	x1, x21
   296c0:	bl	c6a0 <__gmpz_mul_2exp@plt>
   296c4:	mov	x0, sp
   296c8:	mov	x1, x22
   296cc:	bl	cfb0 <mpfr_get_z_2exp@plt>
   296d0:	mov	x22, x0
   296d4:	mov	x24, xzr
   296d8:	mov	x27, xzr
   296dc:	mov	w25, #0x3                   	// #3
   296e0:	mov	w26, #0x40                  	// #64
   296e4:	add	x0, sp, #0x10
   296e8:	add	x1, sp, #0x10
   296ec:	mov	x2, sp
   296f0:	add	x23, x27, #0x1
   296f4:	bl	c460 <__gmpz_mul@plt>
   296f8:	ldr	w8, [x21, #4]
   296fc:	ldr	x9, [x21, #8]
   29700:	ldr	w10, [sp, #20]
   29704:	ldr	x11, [sp, #24]
   29708:	cmp	w8, #0x0
   2970c:	cneg	w8, w8, mi  // mi = first
   29710:	add	x9, x9, w8, uxtw #3
   29714:	cmp	w10, #0x0
   29718:	ldur	x9, [x9, #-8]
   2971c:	cneg	w10, w10, mi  // mi = first
   29720:	add	x11, x11, w10, uxtw #3
   29724:	add	x28, x24, x22
   29728:	ldur	x11, [x11, #-8]
   2972c:	ldr	x12, [x19]
   29730:	add	x13, x28, x20
   29734:	clz	x9, x9
   29738:	add	x9, x13, x9
   2973c:	sub	x8, x9, x8, lsl #6
   29740:	clz	x11, x11
   29744:	sub	x8, x8, x12
   29748:	sub	x8, x8, x11
   2974c:	add	x2, x8, x10, lsl #6
   29750:	add	x0, sp, #0x10
   29754:	add	x1, sp, #0x10
   29758:	bl	29c90 <mpfr_exp_2@@Base+0xb44>
   2975c:	cmp	x23, #0x2
   29760:	mov	x24, x0
   29764:	b.cc	29780 <mpfr_exp_2@@Base+0x634>  // b.lo, b.ul, b.last
   29768:	tst	x23, x27
   2976c:	b.eq	297dc <mpfr_exp_2@@Base+0x690>  // b.none
   29770:	add	x0, sp, #0x10
   29774:	add	x1, sp, #0x10
   29778:	mov	x2, x23
   2977c:	bl	cae0 <__gmpz_fdiv_q_ui@plt>
   29780:	ldr	w8, [sp, #20]
   29784:	cbz	w8, 29800 <mpfr_exp_2@@Base+0x6b4>
   29788:	add	x2, sp, #0x10
   2978c:	mov	x0, x21
   29790:	mov	x1, x21
   29794:	add	x24, x24, x28
   29798:	bl	ceb0 <__gmpz_add@plt>
   2979c:	ldr	w8, [sp, #20]
   297a0:	ldr	x9, [sp, #24]
   297a4:	mov	x0, sp
   297a8:	mov	x1, sp
   297ac:	cmp	w8, #0x0
   297b0:	cneg	w8, w8, mi  // mi = first
   297b4:	add	x9, x9, w8, uxtw #3
   297b8:	ldur	x9, [x9, #-8]
   297bc:	lsl	x8, x8, #6
   297c0:	clz	x9, x9
   297c4:	sub	x2, x8, x9
   297c8:	bl	29c90 <mpfr_exp_2@@Base+0xb44>
   297cc:	add	x22, x0, x22
   297d0:	add	x25, x25, #0x3
   297d4:	mov	x27, x23
   297d8:	b	296e4 <mpfr_exp_2@@Base+0x598>
   297dc:	clz	x8, x27
   297e0:	sub	x8, x26, x8
   297e4:	cmp	x27, #0x0
   297e8:	csel	x2, xzr, x8, eq  // eq = none
   297ec:	add	x0, sp, #0x10
   297f0:	add	x1, sp, #0x10
   297f4:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   297f8:	ldr	w8, [sp, #20]
   297fc:	cbnz	w8, 29788 <mpfr_exp_2@@Base+0x63c>
   29800:	add	x0, sp, #0x10
   29804:	bl	c610 <mpfr_mpz_clear@plt>
   29808:	mov	x0, sp
   2980c:	bl	c610 <mpfr_mpz_clear@plt>
   29810:	add	x8, x27, #0x2
   29814:	mul	x0, x25, x8
   29818:	ldp	x20, x19, [sp, #112]
   2981c:	ldp	x22, x21, [sp, #96]
   29820:	ldp	x24, x23, [sp, #80]
   29824:	ldp	x26, x25, [sp, #64]
   29828:	ldp	x28, x27, [sp, #48]
   2982c:	ldp	x29, x30, [sp, #32]
   29830:	add	sp, sp, #0x80
   29834:	ret
   29838:	stp	x29, x30, [sp, #-96]!
   2983c:	stp	x28, x27, [sp, #16]
   29840:	stp	x26, x25, [sp, #32]
   29844:	stp	x24, x23, [sp, #48]
   29848:	stp	x22, x21, [sp, #64]
   2984c:	stp	x20, x19, [sp, #80]
   29850:	mov	x29, sp
   29854:	sub	sp, sp, #0x80
   29858:	ldr	x8, [x1, #16]
   2985c:	stur	x0, [x29, #-64]
   29860:	mov	x28, x3
   29864:	mov	x25, x1
   29868:	neg	x8, x8
   2986c:	sdiv	x0, x2, x8
   29870:	stur	x2, [x29, #-88]
   29874:	bl	c380 <__gmpfr_isqrt@plt>
   29878:	cmp	x0, #0x2
   2987c:	mov	w8, #0x2                   	// #2
   29880:	csel	x20, x0, x8, hi  // hi = pmore
   29884:	add	x19, x20, #0x1
   29888:	lsl	x1, x19, #4
   2988c:	cmp	x1, #0x4, lsl #12
   29890:	stur	xzr, [x29, #-56]
   29894:	b.hi	29c68 <mpfr_exp_2@@Base+0xb1c>  // b.pmore
   29898:	add	x9, x1, #0xf
   2989c:	mov	x8, sp
   298a0:	and	x9, x9, #0xfffffffffffffff0
   298a4:	sub	x22, x8, x9
   298a8:	mov	sp, x22
   298ac:	lsl	x1, x19, #3
   298b0:	cmp	x1, #0x4, lsl #12
   298b4:	b.hi	29c78 <mpfr_exp_2@@Base+0xb2c>  // b.pmore
   298b8:	add	x9, x1, #0xf
   298bc:	mov	x8, sp
   298c0:	and	x9, x9, #0xfffffffffffffff0
   298c4:	sub	x23, x8, x9
   298c8:	mov	sp, x23
   298cc:	sub	x0, x29, #0x30
   298d0:	bl	c400 <mpfr_mpz_init@plt>
   298d4:	sub	x0, x29, #0x20
   298d8:	bl	c400 <mpfr_mpz_init@plt>
   298dc:	sub	x0, x29, #0x10
   298e0:	bl	c400 <mpfr_mpz_init@plt>
   298e4:	ldur	x0, [x29, #-64]
   298e8:	mov	x1, xzr
   298ec:	bl	c110 <__gmpz_set_ui@plt>
   298f0:	ldur	x9, [x29, #-88]
   298f4:	mov	w8, #0x1                   	// #1
   298f8:	mov	x19, xzr
   298fc:	mov	x26, x22
   29900:	sub	x24, x8, x9
   29904:	str	x24, [x28]
   29908:	mov	x0, x26
   2990c:	bl	c400 <mpfr_mpz_init@plt>
   29910:	add	x19, x19, #0x1
   29914:	cmp	x19, x20
   29918:	add	x26, x26, #0x10
   2991c:	b.ls	29908 <mpfr_exp_2@@Base+0x7bc>  // b.plast
   29920:	add	x26, x22, #0x10
   29924:	mov	x0, x26
   29928:	mov	x1, x25
   2992c:	bl	cfb0 <mpfr_get_z_2exp@plt>
   29930:	mov	x2, x0
   29934:	str	x0, [x23, #8]
   29938:	mov	x0, x26
   2993c:	mov	x1, x26
   29940:	mov	x3, x24
   29944:	bl	29cf4 <mpfr_exp_2@@Base+0xba8>
   29948:	str	x0, [x23, #8]
   2994c:	sub	x0, x29, #0x10
   29950:	mov	x1, x26
   29954:	mov	x2, x26
   29958:	bl	c460 <__gmpz_mul@plt>
   2995c:	ldur	x8, [x29, #-88]
   29960:	add	x0, x22, #0x20
   29964:	sub	x1, x29, #0x10
   29968:	sub	x25, x8, #0x1
   2996c:	mov	x2, x25
   29970:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   29974:	cmp	x20, #0x3
   29978:	str	x24, [x23, #16]
   2997c:	b.cs	29c0c <mpfr_exp_2@@Base+0xac0>  // b.hs, b.nlast
   29980:	mov	w1, #0x1                   	// #1
   29984:	mov	x0, x22
   29988:	bl	c110 <__gmpz_set_ui@plt>
   2998c:	mov	x0, x22
   29990:	mov	x1, x22
   29994:	mov	x2, x25
   29998:	bl	c6a0 <__gmpz_mul_2exp@plt>
   2999c:	sub	x0, x29, #0x20
   299a0:	mov	w1, #0x1                   	// #1
   299a4:	str	x24, [x23]
   299a8:	bl	c110 <__gmpz_set_ui@plt>
   299ac:	ldur	x26, [x29, #-88]
   299b0:	sub	x8, x20, #0x1
   299b4:	add	x9, x22, x20, lsl #4
   299b8:	stur	x8, [x29, #-80]
   299bc:	neg	x10, x26
   299c0:	add	x8, x22, x8, lsl #4
   299c4:	mov	x19, xzr
   299c8:	mov	x13, xzr
   299cc:	stp	x10, x8, [x29, #-112]
   299d0:	sub	x8, x9, #0x20
   299d4:	stur	x9, [x29, #-96]
   299d8:	stur	x8, [x29, #-120]
   299dc:	mov	x24, x28
   299e0:	stur	x13, [x29, #-72]
   299e4:	cbz	x19, 29a24 <mpfr_exp_2@@Base+0x8d8>
   299e8:	mov	w8, #0x1                   	// #1
   299ec:	mov	x21, xzr
   299f0:	sub	x27, x8, x26
   299f4:	mov	x28, x22
   299f8:	lsl	x25, x21, #3
   299fc:	ldr	x2, [x23, x25]
   29a00:	mov	x0, x28
   29a04:	mov	x1, x28
   29a08:	mov	x3, x27
   29a0c:	bl	29cf4 <mpfr_exp_2@@Base+0xba8>
   29a10:	add	x21, x21, #0x1
   29a14:	cmp	x21, x20
   29a18:	add	x28, x28, #0x10
   29a1c:	str	x27, [x23, x25]
   29a20:	b.cc	299f8 <mpfr_exp_2@@Base+0x8ac>  // b.lo, b.ul, b.last
   29a24:	ldur	x21, [x29, #-80]
   29a28:	ldur	x1, [x29, #-104]
   29a2c:	mov	w8, #0x1                   	// #1
   29a30:	sub	x3, x8, x26
   29a34:	ldr	x2, [x23, x21, lsl #3]
   29a38:	sub	x0, x29, #0x10
   29a3c:	bl	29cf4 <mpfr_exp_2@@Base+0xba8>
   29a40:	mov	x27, x0
   29a44:	cbz	x21, 29a7c <mpfr_exp_2@@Base+0x930>
   29a48:	ldur	x28, [x29, #-120]
   29a4c:	ldur	x21, [x29, #-80]
   29a50:	add	x2, x19, x21
   29a54:	sub	x0, x29, #0x10
   29a58:	sub	x1, x29, #0x10
   29a5c:	bl	cae0 <__gmpz_fdiv_q_ui@plt>
   29a60:	sub	x0, x29, #0x10
   29a64:	sub	x1, x29, #0x10
   29a68:	mov	x2, x28
   29a6c:	bl	ceb0 <__gmpz_add@plt>
   29a70:	sub	x21, x21, #0x1
   29a74:	sub	x28, x28, #0x10
   29a78:	cbnz	x21, 29a50 <mpfr_exp_2@@Base+0x904>
   29a7c:	sub	x0, x29, #0x10
   29a80:	sub	x1, x29, #0x10
   29a84:	sub	x2, x29, #0x20
   29a88:	bl	c460 <__gmpz_mul@plt>
   29a8c:	mov	x28, x24
   29a90:	ldr	x3, [x24]
   29a94:	ldur	x24, [x29, #-72]
   29a98:	sub	x0, x29, #0x10
   29a9c:	sub	x1, x29, #0x10
   29aa0:	add	x2, x27, x24
   29aa4:	bl	29cf4 <mpfr_exp_2@@Base+0xba8>
   29aa8:	ldur	x0, [x29, #-64]
   29aac:	sub	x2, x29, #0x10
   29ab0:	mov	x1, x0
   29ab4:	bl	ceb0 <__gmpz_add@plt>
   29ab8:	ldur	x2, [x29, #-96]
   29abc:	sub	x0, x29, #0x10
   29ac0:	sub	x1, x29, #0x20
   29ac4:	bl	c460 <__gmpz_mul@plt>
   29ac8:	ldr	x27, [x23, x20, lsl #3]
   29acc:	sub	x0, x29, #0x30
   29ad0:	mov	w1, #0x1                   	// #1
   29ad4:	bl	c110 <__gmpz_set_ui@plt>
   29ad8:	mov	w21, #0x1                   	// #1
   29adc:	add	x2, x19, x21
   29ae0:	sub	x0, x29, #0x30
   29ae4:	sub	x1, x29, #0x30
   29ae8:	bl	c590 <__gmpz_mul_ui@plt>
   29aec:	add	x21, x21, #0x1
   29af0:	cmp	x21, x20
   29af4:	b.ls	29adc <mpfr_exp_2@@Base+0x990>  // b.plast
   29af8:	sub	x0, x29, #0x10
   29afc:	sub	x1, x29, #0x10
   29b00:	sub	x2, x29, #0x30
   29b04:	bl	c290 <__gmpz_fdiv_q@plt>
   29b08:	ldur	w8, [x29, #-12]
   29b0c:	add	x19, x19, x20
   29b10:	cbz	w8, 29ba8 <mpfr_exp_2@@Base+0xa5c>
   29b14:	sub	x0, x29, #0x20
   29b18:	sub	x1, x29, #0x10
   29b1c:	mov	x2, x26
   29b20:	add	x21, x27, x24
   29b24:	bl	29c90 <mpfr_exp_2@@Base+0xb44>
   29b28:	ldur	w8, [x29, #-28]
   29b2c:	add	x13, x21, x0
   29b30:	cbz	w8, 29ba0 <mpfr_exp_2@@Base+0xa54>
   29b34:	ldur	x9, [x29, #-24]
   29b38:	cmp	w8, #0x0
   29b3c:	cneg	w8, w8, mi  // mi = first
   29b40:	add	x9, x9, w8, uxtw #3
   29b44:	ldur	x9, [x9, #-8]
   29b48:	lsl	x8, x8, #6
   29b4c:	clz	x9, x9
   29b50:	sub	x8, x8, x9
   29b54:	ldur	x10, [x29, #-64]
   29b58:	ldur	x12, [x29, #-88]
   29b5c:	ldr	x11, [x28]
   29b60:	add	x8, x8, x13
   29b64:	ldr	w9, [x10, #4]
   29b68:	ldr	x10, [x10, #8]
   29b6c:	add	x12, x8, x12
   29b70:	sub	x11, x12, x11
   29b74:	cmp	w9, #0x0
   29b78:	cneg	w9, w9, mi  // mi = first
   29b7c:	add	x10, x10, w9, uxtw #3
   29b80:	ldur	x10, [x10, #-8]
   29b84:	clz	x10, x10
   29b88:	add	x10, x11, x10
   29b8c:	ldur	x11, [x29, #-112]
   29b90:	sub	x26, x10, x9, lsl #6
   29b94:	cmp	x8, x11
   29b98:	b.hi	299dc <mpfr_exp_2@@Base+0x890>  // b.pmore
   29b9c:	b	29ba8 <mpfr_exp_2@@Base+0xa5c>
   29ba0:	mov	w8, #0x1                   	// #1
   29ba4:	b	29b54 <mpfr_exp_2@@Base+0xa08>
   29ba8:	mov	x21, xzr
   29bac:	mov	x0, x22
   29bb0:	bl	c610 <mpfr_mpz_clear@plt>
   29bb4:	add	x21, x21, #0x1
   29bb8:	cmp	x21, x20
   29bbc:	add	x22, x22, #0x10
   29bc0:	b.ls	29bac <mpfr_exp_2@@Base+0xa60>  // b.plast
   29bc4:	ldur	x0, [x29, #-56]
   29bc8:	cbnz	x0, 29c88 <mpfr_exp_2@@Base+0xb3c>
   29bcc:	sub	x0, x29, #0x20
   29bd0:	bl	c610 <mpfr_mpz_clear@plt>
   29bd4:	sub	x0, x29, #0x10
   29bd8:	bl	c610 <mpfr_mpz_clear@plt>
   29bdc:	sub	x0, x29, #0x30
   29be0:	bl	c610 <mpfr_mpz_clear@plt>
   29be4:	add	x8, x19, #0x4
   29be8:	mul	x0, x8, x19
   29bec:	mov	sp, x29
   29bf0:	ldp	x20, x19, [sp, #80]
   29bf4:	ldp	x22, x21, [sp, #64]
   29bf8:	ldp	x24, x23, [sp, #48]
   29bfc:	ldp	x26, x25, [sp, #32]
   29c00:	ldp	x28, x27, [sp, #16]
   29c04:	ldp	x29, x30, [sp], #96
   29c08:	ret
   29c0c:	add	x27, x22, #0x30
   29c10:	mov	w19, #0x3                   	// #3
   29c14:	b	29c54 <mpfr_exp_2@@Base+0xb08>
   29c18:	lsl	x8, x19, #3
   29c1c:	and	x8, x8, #0xfffffffffffffff0
   29c20:	add	x1, x22, x8
   29c24:	sub	x0, x29, #0x10
   29c28:	mov	x2, x1
   29c2c:	bl	c460 <__gmpz_mul@plt>
   29c30:	sub	x1, x29, #0x10
   29c34:	mov	x0, x27
   29c38:	mov	x2, x25
   29c3c:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   29c40:	str	x24, [x23, x19, lsl #3]
   29c44:	add	x19, x19, #0x1
   29c48:	cmp	x19, x20
   29c4c:	add	x27, x27, #0x10
   29c50:	b.hi	29980 <mpfr_exp_2@@Base+0x834>  // b.pmore
   29c54:	tbz	w19, #0, 29c18 <mpfr_exp_2@@Base+0xacc>
   29c58:	sub	x1, x27, #0x10
   29c5c:	sub	x0, x29, #0x10
   29c60:	mov	x2, x26
   29c64:	b	29c2c <mpfr_exp_2@@Base+0xae0>
   29c68:	sub	x0, x29, #0x38
   29c6c:	bl	c220 <mpfr_tmp_allocate@plt>
   29c70:	mov	x22, x0
   29c74:	b	298ac <mpfr_exp_2@@Base+0x760>
   29c78:	sub	x0, x29, #0x38
   29c7c:	bl	c220 <mpfr_tmp_allocate@plt>
   29c80:	mov	x23, x0
   29c84:	b	298cc <mpfr_exp_2@@Base+0x780>
   29c88:	bl	c8d0 <mpfr_tmp_free@plt>
   29c8c:	b	29bcc <mpfr_exp_2@@Base+0xa80>
   29c90:	stp	x29, x30, [sp, #-32]!
   29c94:	ldr	w8, [x1, #4]
   29c98:	ldr	x9, [x1, #8]
   29c9c:	str	x19, [sp, #16]
   29ca0:	mov	x29, sp
   29ca4:	cmp	w8, #0x0
   29ca8:	cneg	w8, w8, mi  // mi = first
   29cac:	add	x9, x9, w8, uxtw #3
   29cb0:	ldur	x9, [x9, #-8]
   29cb4:	lsl	x8, x8, #6
   29cb8:	clz	x9, x9
   29cbc:	sub	x8, x8, x9
   29cc0:	subs	x19, x8, x2
   29cc4:	cset	w8, hi  // hi = pmore
   29cc8:	orr	x8, x8, x2, lsr #63
   29ccc:	cbz	x8, 29ce8 <mpfr_exp_2@@Base+0xb9c>
   29cd0:	mov	x2, x19
   29cd4:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   29cd8:	mov	x0, x19
   29cdc:	ldr	x19, [sp, #16]
   29ce0:	ldp	x29, x30, [sp], #32
   29ce4:	ret
   29ce8:	bl	c410 <__gmpz_set@plt>
   29cec:	mov	x19, xzr
   29cf0:	b	29cd8 <mpfr_exp_2@@Base+0xb8c>
   29cf4:	stp	x29, x30, [sp, #-32]!
   29cf8:	str	x19, [sp, #16]
   29cfc:	mov	x19, x3
   29d00:	subs	x8, x3, x2
   29d04:	mov	x29, sp
   29d08:	b.le	29d24 <mpfr_exp_2@@Base+0xbd8>
   29d0c:	mov	x2, x8
   29d10:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   29d14:	mov	x0, x19
   29d18:	ldr	x19, [sp, #16]
   29d1c:	ldp	x29, x30, [sp], #32
   29d20:	ret
   29d24:	sub	x2, x2, x19
   29d28:	bl	c6a0 <__gmpz_mul_2exp@plt>
   29d2c:	b	29d14 <mpfr_exp_2@@Base+0xbc8>

0000000000029d30 <mpfr_asin@@Base>:
   29d30:	sub	sp, sp, #0x90
   29d34:	stp	x29, x30, [sp, #48]
   29d38:	stp	x28, x27, [sp, #64]
   29d3c:	stp	x26, x25, [sp, #80]
   29d40:	stp	x24, x23, [sp, #96]
   29d44:	stp	x22, x21, [sp, #112]
   29d48:	stp	x20, x19, [sp, #128]
   29d4c:	ldr	x8, [x1, #16]
   29d50:	mov	x25, #0x2                   	// #2
   29d54:	movk	x25, #0x8000, lsl #48
   29d58:	add	x9, x25, #0x2
   29d5c:	mov	x21, x1
   29d60:	cmp	x8, x9
   29d64:	mov	x19, x0
   29d68:	add	x29, sp, #0x30
   29d6c:	b.lt	2a020 <mpfr_asin@@Base+0x2f0>  // b.tstop
   29d70:	mov	w20, w2
   29d74:	tbnz	x8, #63, 29d84 <mpfr_asin@@Base+0x54>
   29d78:	mov	w8, wzr
   29d7c:	cbnz	w8, 29ffc <mpfr_asin@@Base+0x2cc>
   29d80:	b	29da8 <mpfr_asin@@Base+0x78>
   29d84:	ldr	x9, [x19]
   29d88:	mov	w10, #0x2                   	// #2
   29d8c:	sub	x2, x10, x8, lsl #1
   29d90:	add	x8, x9, #0x1
   29d94:	cmp	x2, x8
   29d98:	b.hi	2a070 <mpfr_asin@@Base+0x340>  // b.pmore
   29d9c:	mov	w8, wzr
   29da0:	cbz	w8, 29d78 <mpfr_asin@@Base+0x48>
   29da4:	cbnz	w8, 29ffc <mpfr_asin@@Base+0x2cc>
   29da8:	ldr	x1, [x21]
   29dac:	add	x0, sp, #0x10
   29db0:	bl	cf60 <mpfr_init2@plt>
   29db4:	add	x0, sp, #0x10
   29db8:	mov	w3, #0x1                   	// #1
   29dbc:	mov	x1, x21
   29dc0:	mov	w2, wzr
   29dc4:	bl	cb70 <mpfr_set4@plt>
   29dc8:	add	x0, sp, #0x10
   29dcc:	mov	w1, #0x1                   	// #1
   29dd0:	mov	x2, xzr
   29dd4:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   29dd8:	mov	w22, w0
   29ddc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   29de0:	ldr	x1, [x0, #2800]
   29de4:	add	x0, x0, #0xaf0
   29de8:	blr	x1
   29dec:	mrs	x26, tpidr_el0
   29df0:	ldr	w23, [x26, x0]
   29df4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   29df8:	ldr	x1, [x0, #2736]
   29dfc:	add	x0, x0, #0xab0
   29e00:	blr	x1
   29e04:	ldr	x28, [x26, x0]
   29e08:	mov	x8, x0
   29e0c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   29e10:	ldr	x1, [x0, #2768]
   29e14:	add	x0, x0, #0xad0
   29e18:	blr	x1
   29e1c:	ldr	x24, [x26, x0]
   29e20:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   29e24:	str	x9, [x26, x8]
   29e28:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   29e2c:	str	x8, [x26, x0]
   29e30:	add	x0, sp, #0x10
   29e34:	str	w23, [sp, #12]
   29e38:	tbz	w22, #31, 2a098 <mpfr_asin@@Base+0x368>
   29e3c:	add	x2, sp, #0x10
   29e40:	mov	w1, #0x1                   	// #1
   29e44:	mov	w3, #0x3                   	// #3
   29e48:	bl	cf30 <mpfr_ui_sub@plt>
   29e4c:	ldr	x8, [sp, #32]
   29e50:	ldr	x10, [x19]
   29e54:	mov	w9, #0x2                   	// #2
   29e58:	cmp	w20, #0x0
   29e5c:	sub	x27, x9, x8
   29e60:	add	x8, x10, x27
   29e64:	mov	w11, #0x40                  	// #64
   29e68:	cset	w22, eq  // eq = none
   29e6c:	add	x23, x8, #0xa
   29e70:	str	x11, [sp]
   29e74:	add	x0, sp, #0x10
   29e78:	mov	x1, x23
   29e7c:	bl	c330 <mpfr_set_prec@plt>
   29e80:	add	x0, sp, #0x10
   29e84:	mov	x1, x21
   29e88:	mov	w2, wzr
   29e8c:	bl	c8c0 <mpfr_sqr@plt>
   29e90:	add	x0, sp, #0x10
   29e94:	add	x2, sp, #0x10
   29e98:	mov	w1, #0x1                   	// #1
   29e9c:	mov	w3, wzr
   29ea0:	bl	cf30 <mpfr_ui_sub@plt>
   29ea4:	add	x0, sp, #0x10
   29ea8:	add	x1, sp, #0x10
   29eac:	mov	w2, wzr
   29eb0:	bl	ce20 <mpfr_sqrt@plt>
   29eb4:	add	x0, sp, #0x10
   29eb8:	add	x2, sp, #0x10
   29ebc:	mov	x1, x21
   29ec0:	mov	w3, wzr
   29ec4:	bl	caf0 <mpfr_div@plt>
   29ec8:	add	x0, sp, #0x10
   29ecc:	add	x1, sp, #0x10
   29ed0:	mov	w2, wzr
   29ed4:	bl	cb60 <mpfr_atan@plt>
   29ed8:	ldr	x8, [sp, #32]
   29edc:	add	x9, x25, #0x2
   29ee0:	cmp	x8, x9
   29ee4:	b.lt	29f1c <mpfr_asin@@Base+0x1ec>  // b.tstop
   29ee8:	ldr	x8, [sp, #16]
   29eec:	ldr	x9, [x19]
   29ef0:	ldr	x0, [sp, #40]
   29ef4:	sub	x2, x23, x27
   29ef8:	sub	x10, x8, #0x1
   29efc:	add	x8, x8, #0x3e
   29f00:	cmp	x10, #0x0
   29f04:	csel	x8, x8, x10, lt  // lt = tstop
   29f08:	asr	x8, x8, #6
   29f0c:	add	x1, x8, #0x1
   29f10:	add	x3, x9, x22
   29f14:	bl	c830 <mpfr_round_p@plt>
   29f18:	cbnz	w0, 29f6c <mpfr_asin@@Base+0x23c>
   29f1c:	ldr	x9, [sp]
   29f20:	sub	x8, x25, x23
   29f24:	sub	x8, x8, #0x103
   29f28:	cmp	x9, x8
   29f2c:	mov	x8, x9
   29f30:	b.gt	29f4c <mpfr_asin@@Base+0x21c>
   29f34:	add	x23, x23, x8
   29f38:	cmp	x23, #0x0
   29f3c:	cinc	x8, x23, lt  // lt = tstop
   29f40:	asr	x8, x8, #1
   29f44:	str	x8, [sp]
   29f48:	b	29e74 <mpfr_asin@@Base+0x144>
   29f4c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   29f50:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   29f54:	mov	w1, #0x73                  	// #115
   29f58:	add	x0, x0, #0x51f
   29f5c:	add	x2, x2, #0x99a
   29f60:	bl	d030 <mpfr_assert_fail@plt>
   29f64:	ldr	x8, [sp]
   29f68:	b	29f34 <mpfr_asin@@Base+0x204>
   29f6c:	ldr	w3, [sp, #24]
   29f70:	add	x1, sp, #0x10
   29f74:	mov	x0, x19
   29f78:	mov	w2, w20
   29f7c:	bl	cb70 <mpfr_set4@plt>
   29f80:	mov	w22, w0
   29f84:	add	x0, sp, #0x10
   29f88:	bl	c4f0 <mpfr_clear@plt>
   29f8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   29f90:	ldr	x1, [x0, #2800]
   29f94:	add	x0, x0, #0xaf0
   29f98:	blr	x1
   29f9c:	ldr	w9, [sp, #12]
   29fa0:	str	w9, [x26, x0]
   29fa4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   29fa8:	ldr	x1, [x0, #2736]
   29fac:	add	x0, x0, #0xab0
   29fb0:	blr	x1
   29fb4:	str	x28, [x26, x0]
   29fb8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   29fbc:	ldr	x1, [x0, #2768]
   29fc0:	add	x0, x0, #0xad0
   29fc4:	blr	x1
   29fc8:	str	x24, [x26, x0]
   29fcc:	ldr	x8, [x19, #16]
   29fd0:	cmp	x8, x24
   29fd4:	b.gt	2a0f4 <mpfr_asin@@Base+0x3c4>
   29fd8:	cmp	x8, x28
   29fdc:	b.lt	2a0f4 <mpfr_asin@@Base+0x3c4>  // b.tstop
   29fe0:	cbz	w22, 29ffc <mpfr_asin@@Base+0x2cc>
   29fe4:	orr	w8, w9, #0x8
   29fe8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   29fec:	ldr	x1, [x0, #2800]
   29ff0:	add	x0, x0, #0xaf0
   29ff4:	blr	x1
   29ff8:	str	w8, [x26, x0]
   29ffc:	mov	w0, w22
   2a000:	ldp	x20, x19, [sp, #128]
   2a004:	ldp	x22, x21, [sp, #112]
   2a008:	ldp	x24, x23, [sp, #96]
   2a00c:	ldp	x26, x25, [sp, #80]
   2a010:	ldp	x28, x27, [sp, #64]
   2a014:	ldp	x29, x30, [sp, #48]
   2a018:	add	sp, sp, #0x90
   2a01c:	ret
   2a020:	and	x8, x8, #0xfffffffffffffffe
   2a024:	cmp	x8, x25
   2a028:	b.ne	2a058 <mpfr_asin@@Base+0x328>  // b.any
   2a02c:	str	x25, [x19, #16]
   2a030:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2a034:	ldr	x1, [x0, #2800]
   2a038:	add	x0, x0, #0xaf0
   2a03c:	blr	x1
   2a040:	mrs	x8, tpidr_el0
   2a044:	ldr	w9, [x8, x0]
   2a048:	mov	w22, wzr
   2a04c:	orr	w9, w9, #0x4
   2a050:	str	w9, [x8, x0]
   2a054:	b	29ffc <mpfr_asin@@Base+0x2cc>
   2a058:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2a05c:	str	x8, [x19, #16]
   2a060:	ldr	w8, [x21, #8]
   2a064:	mov	w22, wzr
   2a068:	str	w8, [x19, #8]
   2a06c:	b	29ffc <mpfr_asin@@Base+0x2cc>
   2a070:	mov	w3, #0x1                   	// #1
   2a074:	mov	x0, x19
   2a078:	mov	x1, x21
   2a07c:	mov	w4, w20
   2a080:	bl	ca10 <mpfr_round_near_x@plt>
   2a084:	cmp	w0, #0x0
   2a088:	mov	w22, w0
   2a08c:	cset	w8, ne  // ne = any
   2a090:	cbnz	w0, 29da0 <mpfr_asin@@Base+0x70>
   2a094:	b	29d9c <mpfr_asin@@Base+0x6c>
   2a098:	bl	c4f0 <mpfr_clear@plt>
   2a09c:	cbz	w22, 2a10c <mpfr_asin@@Base+0x3dc>
   2a0a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2a0a4:	ldr	x1, [x0, #2800]
   2a0a8:	add	x0, x0, #0xaf0
   2a0ac:	blr	x1
   2a0b0:	mov	x8, x0
   2a0b4:	str	w23, [x26, x0]
   2a0b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2a0bc:	ldr	x1, [x0, #2736]
   2a0c0:	add	x0, x0, #0xab0
   2a0c4:	blr	x1
   2a0c8:	str	x28, [x26, x0]
   2a0cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2a0d0:	ldr	x1, [x0, #2768]
   2a0d4:	add	x0, x0, #0xad0
   2a0d8:	blr	x1
   2a0dc:	orr	w9, w23, #0x4
   2a0e0:	mov	w22, wzr
   2a0e4:	str	x24, [x26, x0]
   2a0e8:	str	x25, [x19, #16]
   2a0ec:	str	w9, [x26, x8]
   2a0f0:	b	29ffc <mpfr_asin@@Base+0x2cc>
   2a0f4:	mov	x0, x19
   2a0f8:	mov	w1, w22
   2a0fc:	mov	w2, w20
   2a100:	bl	d020 <mpfr_check_range@plt>
   2a104:	mov	w22, w0
   2a108:	b	29ffc <mpfr_asin@@Base+0x2cc>
   2a10c:	ldr	w8, [x21, #8]
   2a110:	cmp	w8, #0x1
   2a114:	b.lt	2a140 <mpfr_asin@@Base+0x410>  // b.tstop
   2a118:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2a11c:	ldr	x1, [x0, #2848]
   2a120:	add	x0, x0, #0xb20
   2a124:	blr	x1
   2a128:	add	x1, x26, x0
   2a12c:	mov	x0, x19
   2a130:	mov	w2, w20
   2a134:	bl	c840 <mpfr_cache@plt>
   2a138:	mov	w22, w0
   2a13c:	b	2a184 <mpfr_asin@@Base+0x454>
   2a140:	cmp	w20, #0x3
   2a144:	mov	w8, #0x2                   	// #2
   2a148:	csel	w8, w8, w20, eq  // eq = none
   2a14c:	cmp	w20, #0x2
   2a150:	mov	w9, #0x3                   	// #3
   2a154:	csel	w2, w9, w8, eq  // eq = none
   2a158:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2a15c:	ldr	x1, [x0, #2848]
   2a160:	add	x0, x0, #0xb20
   2a164:	blr	x1
   2a168:	add	x1, x26, x0
   2a16c:	mov	x0, x19
   2a170:	bl	c840 <mpfr_cache@plt>
   2a174:	ldr	w8, [x19, #8]
   2a178:	neg	w22, w0
   2a17c:	neg	w8, w8
   2a180:	str	w8, [x19, #8]
   2a184:	mov	w2, #0x1                   	// #1
   2a188:	mov	x0, x19
   2a18c:	mov	x1, x19
   2a190:	mov	w3, w20
   2a194:	bl	cde0 <mpfr_div_2ui@plt>
   2a198:	b	29f8c <mpfr_asin@@Base+0x25c>

000000000002a19c <mpfr_const_euler_internal@@Base>:
   2a19c:	sub	sp, sp, #0x130
   2a1a0:	stp	x29, x30, [sp, #208]
   2a1a4:	stp	x28, x27, [sp, #224]
   2a1a8:	stp	x26, x25, [sp, #240]
   2a1ac:	stp	x24, x23, [sp, #256]
   2a1b0:	stp	x22, x21, [sp, #272]
   2a1b4:	stp	x20, x19, [sp, #288]
   2a1b8:	ldr	x26, [x0]
   2a1bc:	mov	w19, w1
   2a1c0:	mov	x20, x0
   2a1c4:	add	x0, sp, #0x18
   2a1c8:	add	x21, x26, #0x18
   2a1cc:	mov	x1, x21
   2a1d0:	add	x29, sp, #0xd0
   2a1d4:	bl	cf60 <mpfr_init2@plt>
   2a1d8:	add	x0, sp, #0x68
   2a1dc:	add	x27, sp, #0x68
   2a1e0:	bl	2a574 <mpfr_const_euler@@Base+0x38>
   2a1e4:	add	x0, sp, #0x58
   2a1e8:	bl	c400 <mpfr_mpz_init@plt>
   2a1ec:	add	x0, sp, #0x48
   2a1f0:	bl	c400 <mpfr_mpz_init@plt>
   2a1f4:	add	x0, sp, #0x38
   2a1f8:	bl	c400 <mpfr_mpz_init@plt>
   2a1fc:	add	x8, x27, #0x30
   2a200:	cmp	w19, #0x0
   2a204:	add	x22, x27, #0x20
   2a208:	add	x23, x27, #0x10
   2a20c:	add	x24, x27, #0x40
   2a210:	add	x25, x27, #0x50
   2a214:	cinc	x9, x26, eq  // eq = none
   2a218:	mov	x26, x8
   2a21c:	mov	w8, #0x40                  	// #64
   2a220:	str	x9, [sp, #16]
   2a224:	add	x1, x21, #0x5
   2a228:	add	x0, sp, #0x58
   2a22c:	str	x8, [sp, #8]
   2a230:	bl	c110 <__gmpz_set_ui@plt>
   2a234:	mov	w2, #0x3882                	// #14466
   2a238:	add	x0, sp, #0x58
   2a23c:	add	x1, sp, #0x58
   2a240:	movk	w2, #0xd, lsl #16
   2a244:	bl	c590 <__gmpz_mul_ui@plt>
   2a248:	mov	w2, #0x9680                	// #38528
   2a24c:	add	x0, sp, #0x58
   2a250:	add	x1, sp, #0x58
   2a254:	movk	w2, #0x98, lsl #16
   2a258:	bl	c310 <__gmpz_cdiv_q_ui@plt>
   2a25c:	add	x0, sp, #0x58
   2a260:	bl	c6f0 <__gmpz_get_ui@plt>
   2a264:	mov	x27, x0
   2a268:	add	x0, sp, #0x58
   2a26c:	mov	x1, x27
   2a270:	bl	c110 <__gmpz_set_ui@plt>
   2a274:	mov	w2, #0xd882                	// #55426
   2a278:	add	x0, sp, #0x58
   2a27c:	add	x1, sp, #0x58
   2a280:	movk	w2, #0x4b, lsl #16
   2a284:	bl	c590 <__gmpz_mul_ui@plt>
   2a288:	mov	w2, #0x4240                	// #16960
   2a28c:	add	x0, sp, #0x58
   2a290:	add	x1, sp, #0x58
   2a294:	movk	w2, #0xf, lsl #16
   2a298:	bl	c310 <__gmpz_cdiv_q_ui@plt>
   2a29c:	add	x0, sp, #0x58
   2a2a0:	add	x1, sp, #0x58
   2a2a4:	mov	w2, #0x1                   	// #1
   2a2a8:	bl	c820 <__gmpz_add_ui@plt>
   2a2ac:	add	x0, sp, #0x58
   2a2b0:	bl	c6f0 <__gmpz_get_ui@plt>
   2a2b4:	mov	x2, x0
   2a2b8:	add	x0, sp, #0x68
   2a2bc:	mov	x1, xzr
   2a2c0:	mov	x3, x27
   2a2c4:	mov	w4, wzr
   2a2c8:	bl	2a5bc <mpfr_const_euler@@Base+0x80>
   2a2cc:	mov	x0, x22
   2a2d0:	mov	x1, x22
   2a2d4:	mov	x2, x23
   2a2d8:	bl	ceb0 <__gmpz_add@plt>
   2a2dc:	add	x0, sp, #0x58
   2a2e0:	mov	x1, x22
   2a2e4:	mov	x2, x24
   2a2e8:	bl	c460 <__gmpz_mul@plt>
   2a2ec:	add	x0, sp, #0x48
   2a2f0:	mov	x1, x25
   2a2f4:	mov	x2, x21
   2a2f8:	bl	c6a0 <__gmpz_mul_2exp@plt>
   2a2fc:	add	x0, sp, #0x38
   2a300:	add	x1, sp, #0x48
   2a304:	add	x2, sp, #0x58
   2a308:	bl	bf90 <__gmpz_tdiv_q@plt>
   2a30c:	lsl	x4, x27, #1
   2a310:	mov	x0, x26
   2a314:	mov	x1, x24
   2a318:	mov	x2, x25
   2a31c:	mov	x3, xzr
   2a320:	mov	x5, x27
   2a324:	mov	w6, wzr
   2a328:	mov	x28, x26
   2a32c:	bl	2a828 <mpfr_const_euler@@Base+0x2ec>
   2a330:	add	x0, sp, #0x58
   2a334:	mov	x1, x23
   2a338:	mov	x2, x23
   2a33c:	bl	c460 <__gmpz_mul@plt>
   2a340:	add	x0, sp, #0x58
   2a344:	add	x1, sp, #0x58
   2a348:	mov	x2, x25
   2a34c:	bl	c460 <__gmpz_mul@plt>
   2a350:	add	x0, sp, #0x48
   2a354:	mov	x1, x22
   2a358:	mov	x2, x22
   2a35c:	bl	c460 <__gmpz_mul@plt>
   2a360:	add	x0, sp, #0x48
   2a364:	add	x1, sp, #0x48
   2a368:	mov	x2, x24
   2a36c:	bl	c460 <__gmpz_mul@plt>
   2a370:	add	x0, sp, #0x58
   2a374:	add	x1, sp, #0x58
   2a378:	mov	x2, x21
   2a37c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   2a380:	add	x0, sp, #0x58
   2a384:	add	x1, sp, #0x58
   2a388:	add	x2, sp, #0x48
   2a38c:	bl	bf90 <__gmpz_tdiv_q@plt>
   2a390:	add	x0, sp, #0x38
   2a394:	add	x1, sp, #0x38
   2a398:	add	x2, sp, #0x58
   2a39c:	bl	c240 <__gmpz_sub@plt>
   2a3a0:	subs	x26, x27, #0x1
   2a3a4:	b.eq	2a498 <mpfr_const_euler_internal@@Base+0x2fc>  // b.none
   2a3a8:	cbz	x27, 2a4a0 <mpfr_const_euler_internal@@Base+0x304>
   2a3ac:	clz	x8, x26
   2a3b0:	mov	w9, #0x40                  	// #64
   2a3b4:	sub	x8, x9, x8
   2a3b8:	add	x1, x8, x21
   2a3bc:	add	x0, sp, #0x18
   2a3c0:	bl	c330 <mpfr_set_prec@plt>
   2a3c4:	add	x0, sp, #0x18
   2a3c8:	mov	w3, #0x1                   	// #1
   2a3cc:	mov	x1, x27
   2a3d0:	mov	x2, xzr
   2a3d4:	bl	cac0 <mpfr_set_ui_2exp@plt>
   2a3d8:	add	x0, sp, #0x18
   2a3dc:	add	x1, sp, #0x18
   2a3e0:	mov	w2, #0x1                   	// #1
   2a3e4:	bl	c520 <mpfr_log@plt>
   2a3e8:	add	x0, sp, #0x18
   2a3ec:	add	x1, sp, #0x18
   2a3f0:	mov	w3, #0x1                   	// #1
   2a3f4:	mov	x2, x21
   2a3f8:	bl	c780 <mpfr_mul_2ui@plt>
   2a3fc:	add	x0, sp, #0x18
   2a400:	add	x1, sp, #0x38
   2a404:	add	x2, sp, #0x18
   2a408:	mov	w3, #0x1                   	// #1
   2a40c:	bl	c4a0 <mpfr_z_sub@plt>
   2a410:	add	x0, sp, #0x18
   2a414:	add	x1, sp, #0x18
   2a418:	mov	w3, #0x1                   	// #1
   2a41c:	mov	x2, x21
   2a420:	bl	cde0 <mpfr_div_2ui@plt>
   2a424:	ldr	x8, [sp, #40]
   2a428:	mov	x9, #0xfffffffffffffeff    	// #-257
   2a42c:	movk	x9, #0x7fff, lsl #48
   2a430:	add	x9, x9, #0x105
   2a434:	cmp	x8, x9
   2a438:	mov	x26, x28
   2a43c:	b.lt	2a46c <mpfr_const_euler_internal@@Base+0x2d0>  // b.tstop
   2a440:	ldp	x3, x8, [sp, #16]
   2a444:	ldr	x0, [sp, #48]
   2a448:	sub	x2, x21, #0x3
   2a44c:	sub	x9, x8, #0x1
   2a450:	add	x8, x8, #0x3e
   2a454:	cmp	x9, #0x0
   2a458:	csel	x8, x8, x9, lt  // lt = tstop
   2a45c:	asr	x8, x8, #6
   2a460:	add	x1, x8, #0x1
   2a464:	bl	c830 <mpfr_round_p@plt>
   2a468:	cbnz	w0, 2a4d8 <mpfr_const_euler_internal@@Base+0x33c>
   2a46c:	ldr	x27, [sp, #8]
   2a470:	mov	x8, #0xfffffffffffffeff    	// #-257
   2a474:	movk	x8, #0x7fff, lsl #48
   2a478:	sub	x8, x8, x21
   2a47c:	cmp	x27, x8
   2a480:	b.gt	2a4bc <mpfr_const_euler_internal@@Base+0x320>
   2a484:	add	x21, x21, x27
   2a488:	cmp	x21, #0x0
   2a48c:	cinc	x8, x21, lt  // lt = tstop
   2a490:	asr	x8, x8, #1
   2a494:	b	2a224 <mpfr_const_euler_internal@@Base+0x88>
   2a498:	mov	x8, xzr
   2a49c:	b	2a3b8 <mpfr_const_euler_internal@@Base+0x21c>
   2a4a0:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2a4a4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2a4a8:	mov	w1, #0xf9                  	// #249
   2a4ac:	add	x0, x0, #0x526
   2a4b0:	add	x2, x2, #0x534
   2a4b4:	bl	d030 <mpfr_assert_fail@plt>
   2a4b8:	b	2a3ac <mpfr_const_euler_internal@@Base+0x210>
   2a4bc:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2a4c0:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2a4c4:	mov	w1, #0x107                 	// #263
   2a4c8:	add	x0, x0, #0x526
   2a4cc:	add	x2, x2, #0x53c
   2a4d0:	bl	d030 <mpfr_assert_fail@plt>
   2a4d4:	b	2a484 <mpfr_const_euler_internal@@Base+0x2e8>
   2a4d8:	ldr	w3, [sp, #32]
   2a4dc:	add	x1, sp, #0x18
   2a4e0:	mov	x0, x20
   2a4e4:	mov	w2, w19
   2a4e8:	bl	cb70 <mpfr_set4@plt>
   2a4ec:	mov	w19, w0
   2a4f0:	add	x0, sp, #0x18
   2a4f4:	bl	c4f0 <mpfr_clear@plt>
   2a4f8:	add	x0, sp, #0x58
   2a4fc:	bl	c610 <mpfr_mpz_clear@plt>
   2a500:	add	x0, sp, #0x48
   2a504:	bl	c610 <mpfr_mpz_clear@plt>
   2a508:	add	x0, sp, #0x38
   2a50c:	bl	c610 <mpfr_mpz_clear@plt>
   2a510:	add	x0, sp, #0x68
   2a514:	bl	2a9d0 <mpfr_const_euler@@Base+0x494>
   2a518:	mov	w0, w19
   2a51c:	ldp	x20, x19, [sp, #288]
   2a520:	ldp	x22, x21, [sp, #272]
   2a524:	ldp	x24, x23, [sp, #256]
   2a528:	ldp	x26, x25, [sp, #240]
   2a52c:	ldp	x28, x27, [sp, #224]
   2a530:	ldp	x29, x30, [sp, #208]
   2a534:	add	sp, sp, #0x130
   2a538:	ret

000000000002a53c <mpfr_const_euler@@Base>:
   2a53c:	stp	x29, x30, [sp, #-16]!
   2a540:	mov	x29, sp
   2a544:	mov	w2, w1
   2a548:	mov	x8, x0
   2a54c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2a550:	ldr	x1, [x0, #2832]
   2a554:	add	x0, x0, #0xb10
   2a558:	blr	x1
   2a55c:	mrs	x9, tpidr_el0
   2a560:	add	x1, x9, x0
   2a564:	mov	x0, x8
   2a568:	bl	c840 <mpfr_cache@plt>
   2a56c:	ldp	x29, x30, [sp], #16
   2a570:	ret
   2a574:	stp	x29, x30, [sp, #-32]!
   2a578:	str	x19, [sp, #16]
   2a57c:	mov	x29, sp
   2a580:	mov	x19, x0
   2a584:	bl	c400 <mpfr_mpz_init@plt>
   2a588:	add	x0, x19, #0x10
   2a58c:	bl	c400 <mpfr_mpz_init@plt>
   2a590:	add	x0, x19, #0x20
   2a594:	bl	c400 <mpfr_mpz_init@plt>
   2a598:	add	x0, x19, #0x30
   2a59c:	bl	c400 <mpfr_mpz_init@plt>
   2a5a0:	add	x0, x19, #0x40
   2a5a4:	bl	c400 <mpfr_mpz_init@plt>
   2a5a8:	add	x0, x19, #0x50
   2a5ac:	bl	c400 <mpfr_mpz_init@plt>
   2a5b0:	ldr	x19, [sp, #16]
   2a5b4:	ldp	x29, x30, [sp], #32
   2a5b8:	ret
   2a5bc:	sub	sp, sp, #0x150
   2a5c0:	sub	x8, x2, x1
   2a5c4:	stp	x22, x21, [sp, #304]
   2a5c8:	stp	x20, x19, [sp, #320]
   2a5cc:	mov	x21, x3
   2a5d0:	mov	x22, x1
   2a5d4:	cmp	x8, #0x1
   2a5d8:	mov	x19, x0
   2a5dc:	stp	x29, x30, [sp, #240]
   2a5e0:	str	x28, [sp, #256]
   2a5e4:	stp	x26, x25, [sp, #272]
   2a5e8:	stp	x24, x23, [sp, #288]
   2a5ec:	add	x29, sp, #0xf0
   2a5f0:	b.ne	2a668 <mpfr_const_euler@@Base+0x12c>  // b.any
   2a5f4:	mov	x0, x19
   2a5f8:	mov	x1, x21
   2a5fc:	bl	c110 <__gmpz_set_ui@plt>
   2a600:	mov	x0, x19
   2a604:	mov	x1, x19
   2a608:	mov	x2, x19
   2a60c:	bl	c460 <__gmpz_mul@plt>
   2a610:	add	x20, x19, #0x10
   2a614:	add	x21, x22, #0x1
   2a618:	mov	x0, x20
   2a61c:	mov	x1, x21
   2a620:	bl	c110 <__gmpz_set_ui@plt>
   2a624:	mov	x0, x20
   2a628:	mov	x1, x20
   2a62c:	mov	x2, x20
   2a630:	bl	c460 <__gmpz_mul@plt>
   2a634:	add	x0, x19, #0x30
   2a638:	mov	w1, #0x1                   	// #1
   2a63c:	bl	c110 <__gmpz_set_ui@plt>
   2a640:	add	x0, x19, #0x40
   2a644:	mov	x1, x21
   2a648:	bl	c110 <__gmpz_set_ui@plt>
   2a64c:	add	x0, x19, #0x20
   2a650:	mov	x1, x19
   2a654:	bl	c410 <__gmpz_set@plt>
   2a658:	add	x0, x19, #0x50
   2a65c:	mov	x1, x19
   2a660:	bl	c410 <__gmpz_set@plt>
   2a664:	b	2a808 <mpfr_const_euler@@Base+0x2cc>
   2a668:	add	x8, x2, x22
   2a66c:	sub	x0, x29, #0x60
   2a670:	mov	w20, w4
   2a674:	mov	x23, x2
   2a678:	lsr	x24, x8, #1
   2a67c:	sub	x25, x29, #0x60
   2a680:	bl	2a574 <mpfr_const_euler@@Base+0x38>
   2a684:	add	x0, sp, #0x30
   2a688:	add	x26, sp, #0x30
   2a68c:	bl	2a574 <mpfr_const_euler@@Base+0x38>
   2a690:	sub	x0, x29, #0x60
   2a694:	mov	w4, #0x1                   	// #1
   2a698:	mov	x1, x22
   2a69c:	mov	x2, x24
   2a6a0:	mov	x3, x21
   2a6a4:	bl	2a5bc <mpfr_const_euler@@Base+0x80>
   2a6a8:	add	x0, sp, #0x30
   2a6ac:	mov	w4, #0x1                   	// #1
   2a6b0:	mov	x1, x24
   2a6b4:	mov	x2, x23
   2a6b8:	mov	x3, x21
   2a6bc:	bl	2a5bc <mpfr_const_euler@@Base+0x80>
   2a6c0:	add	x0, sp, #0x20
   2a6c4:	bl	c400 <mpfr_mpz_init@plt>
   2a6c8:	add	x0, sp, #0x10
   2a6cc:	bl	c400 <mpfr_mpz_init@plt>
   2a6d0:	mov	x0, sp
   2a6d4:	bl	c400 <mpfr_mpz_init@plt>
   2a6d8:	cbz	w20, 2a6ec <mpfr_const_euler@@Base+0x1b0>
   2a6dc:	sub	x1, x29, #0x60
   2a6e0:	add	x2, sp, #0x30
   2a6e4:	mov	x0, x19
   2a6e8:	bl	c460 <__gmpz_mul@plt>
   2a6ec:	add	x22, x26, #0x10
   2a6f0:	add	x0, x19, #0x10
   2a6f4:	add	x1, x25, #0x10
   2a6f8:	mov	x2, x22
   2a6fc:	bl	c460 <__gmpz_mul@plt>
   2a700:	add	x23, x25, #0x40
   2a704:	add	x21, x26, #0x40
   2a708:	add	x0, x19, #0x40
   2a70c:	mov	x1, x23
   2a710:	mov	x2, x21
   2a714:	bl	c460 <__gmpz_mul@plt>
   2a718:	add	x2, x26, #0x20
   2a71c:	add	x0, sp, #0x20
   2a720:	sub	x1, x29, #0x60
   2a724:	bl	c460 <__gmpz_mul@plt>
   2a728:	add	x2, x25, #0x20
   2a72c:	mov	x0, sp
   2a730:	mov	x1, x22
   2a734:	bl	c460 <__gmpz_mul@plt>
   2a738:	add	x0, x19, #0x20
   2a73c:	add	x1, sp, #0x20
   2a740:	mov	x2, sp
   2a744:	bl	ceb0 <__gmpz_add@plt>
   2a748:	cbz	w20, 2a778 <mpfr_const_euler@@Base+0x23c>
   2a74c:	add	x20, x19, #0x30
   2a750:	sub	x8, x29, #0x60
   2a754:	add	x1, x8, #0x30
   2a758:	mov	x0, x20
   2a75c:	mov	x2, x21
   2a760:	bl	c460 <__gmpz_mul@plt>
   2a764:	add	x8, sp, #0x30
   2a768:	add	x1, x8, #0x30
   2a76c:	mov	x0, x20
   2a770:	mov	x2, x23
   2a774:	bl	c750 <__gmpz_addmul@plt>
   2a778:	add	x8, sp, #0x30
   2a77c:	add	x2, x8, #0x50
   2a780:	add	x0, sp, #0x10
   2a784:	sub	x1, x29, #0x60
   2a788:	sub	x20, x29, #0x60
   2a78c:	bl	c460 <__gmpz_mul@plt>
   2a790:	add	x0, sp, #0x10
   2a794:	add	x1, sp, #0x10
   2a798:	mov	x2, x23
   2a79c:	bl	c460 <__gmpz_mul@plt>
   2a7a0:	add	x2, x20, #0x50
   2a7a4:	mov	x0, sp
   2a7a8:	mov	x1, x22
   2a7ac:	bl	c460 <__gmpz_mul@plt>
   2a7b0:	add	x2, x20, #0x30
   2a7b4:	mov	x0, sp
   2a7b8:	add	x1, sp, #0x20
   2a7bc:	bl	c750 <__gmpz_addmul@plt>
   2a7c0:	mov	x0, sp
   2a7c4:	mov	x1, sp
   2a7c8:	mov	x2, x21
   2a7cc:	bl	c460 <__gmpz_mul@plt>
   2a7d0:	add	x0, x19, #0x50
   2a7d4:	add	x1, sp, #0x10
   2a7d8:	mov	x2, sp
   2a7dc:	bl	ceb0 <__gmpz_add@plt>
   2a7e0:	sub	x0, x29, #0x60
   2a7e4:	bl	2a9d0 <mpfr_const_euler@@Base+0x494>
   2a7e8:	add	x0, sp, #0x30
   2a7ec:	bl	2a9d0 <mpfr_const_euler@@Base+0x494>
   2a7f0:	add	x0, sp, #0x20
   2a7f4:	bl	c610 <mpfr_mpz_clear@plt>
   2a7f8:	add	x0, sp, #0x10
   2a7fc:	bl	c610 <mpfr_mpz_clear@plt>
   2a800:	mov	x0, sp
   2a804:	bl	c610 <mpfr_mpz_clear@plt>
   2a808:	ldp	x20, x19, [sp, #320]
   2a80c:	ldp	x22, x21, [sp, #304]
   2a810:	ldp	x24, x23, [sp, #288]
   2a814:	ldp	x26, x25, [sp, #272]
   2a818:	ldr	x28, [sp, #256]
   2a81c:	ldp	x29, x30, [sp, #240]
   2a820:	add	sp, sp, #0x150
   2a824:	ret
   2a828:	sub	sp, sp, #0x80
   2a82c:	sub	x8, x4, x3
   2a830:	stp	x24, x23, [sp, #80]
   2a834:	stp	x22, x21, [sp, #96]
   2a838:	stp	x20, x19, [sp, #112]
   2a83c:	mov	x22, x5
   2a840:	mov	x24, x3
   2a844:	mov	x21, x2
   2a848:	mov	x20, x1
   2a84c:	cmp	x8, #0x1
   2a850:	mov	x19, x0
   2a854:	stp	x29, x30, [sp, #48]
   2a858:	stp	x26, x25, [sp, #64]
   2a85c:	add	x29, sp, #0x30
   2a860:	b.ne	2a8b8 <mpfr_const_euler@@Base+0x37c>  // b.any
   2a864:	cbz	x24, 2a990 <mpfr_const_euler@@Base+0x454>
   2a868:	lsl	x8, x24, #1
   2a86c:	sub	x1, x8, #0x1
   2a870:	mov	x0, x19
   2a874:	bl	c110 <__gmpz_set_ui@plt>
   2a878:	mov	w2, #0x3                   	// #3
   2a87c:	mov	x0, x19
   2a880:	mov	x1, x19
   2a884:	bl	c7f0 <__gmpz_pow_ui@plt>
   2a888:	lsl	x1, x24, #5
   2a88c:	mov	x0, x20
   2a890:	bl	c110 <__gmpz_set_ui@plt>
   2a894:	mov	x0, x20
   2a898:	mov	x1, x20
   2a89c:	mov	x2, x22
   2a8a0:	bl	c590 <__gmpz_mul_ui@plt>
   2a8a4:	mov	x0, x20
   2a8a8:	mov	x1, x20
   2a8ac:	mov	x2, x22
   2a8b0:	bl	c590 <__gmpz_mul_ui@plt>
   2a8b4:	b	2a9a8 <mpfr_const_euler@@Base+0x46c>
   2a8b8:	add	x8, x4, x24
   2a8bc:	sub	x0, x29, #0x10
   2a8c0:	mov	w23, w6
   2a8c4:	mov	x25, x4
   2a8c8:	lsr	x26, x8, #1
   2a8cc:	bl	c400 <mpfr_mpz_init@plt>
   2a8d0:	add	x0, sp, #0x10
   2a8d4:	bl	c400 <mpfr_mpz_init@plt>
   2a8d8:	mov	x0, sp
   2a8dc:	bl	c400 <mpfr_mpz_init@plt>
   2a8e0:	mov	w6, #0x1                   	// #1
   2a8e4:	mov	x0, x19
   2a8e8:	mov	x1, x20
   2a8ec:	mov	x2, x21
   2a8f0:	mov	x3, x24
   2a8f4:	mov	x4, x26
   2a8f8:	mov	x5, x22
   2a8fc:	bl	2a828 <mpfr_const_euler@@Base+0x2ec>
   2a900:	sub	x0, x29, #0x10
   2a904:	add	x1, sp, #0x10
   2a908:	mov	x2, sp
   2a90c:	mov	w6, #0x1                   	// #1
   2a910:	mov	x3, x26
   2a914:	mov	x4, x25
   2a918:	mov	x5, x22
   2a91c:	bl	2a828 <mpfr_const_euler@@Base+0x2ec>
   2a920:	add	x2, sp, #0x10
   2a924:	mov	x0, x21
   2a928:	mov	x1, x21
   2a92c:	bl	c460 <__gmpz_mul@plt>
   2a930:	mov	x0, sp
   2a934:	mov	x1, sp
   2a938:	mov	x2, x19
   2a93c:	bl	c460 <__gmpz_mul@plt>
   2a940:	mov	x2, sp
   2a944:	mov	x0, x21
   2a948:	mov	x1, x21
   2a94c:	bl	ceb0 <__gmpz_add@plt>
   2a950:	cbz	w23, 2a964 <mpfr_const_euler@@Base+0x428>
   2a954:	sub	x2, x29, #0x10
   2a958:	mov	x0, x19
   2a95c:	mov	x1, x19
   2a960:	bl	c460 <__gmpz_mul@plt>
   2a964:	add	x2, sp, #0x10
   2a968:	mov	x0, x20
   2a96c:	mov	x1, x20
   2a970:	bl	c460 <__gmpz_mul@plt>
   2a974:	sub	x0, x29, #0x10
   2a978:	bl	c610 <mpfr_mpz_clear@plt>
   2a97c:	add	x0, sp, #0x10
   2a980:	bl	c610 <mpfr_mpz_clear@plt>
   2a984:	mov	x0, sp
   2a988:	bl	c610 <mpfr_mpz_clear@plt>
   2a98c:	b	2a9b4 <mpfr_const_euler@@Base+0x478>
   2a990:	mov	w1, #0x1                   	// #1
   2a994:	mov	x0, x19
   2a998:	bl	c110 <__gmpz_set_ui@plt>
   2a99c:	lsl	x1, x22, #2
   2a9a0:	mov	x0, x20
   2a9a4:	bl	c110 <__gmpz_set_ui@plt>
   2a9a8:	mov	x0, x21
   2a9ac:	mov	x1, x19
   2a9b0:	bl	c410 <__gmpz_set@plt>
   2a9b4:	ldp	x20, x19, [sp, #112]
   2a9b8:	ldp	x22, x21, [sp, #96]
   2a9bc:	ldp	x24, x23, [sp, #80]
   2a9c0:	ldp	x26, x25, [sp, #64]
   2a9c4:	ldp	x29, x30, [sp, #48]
   2a9c8:	add	sp, sp, #0x80
   2a9cc:	ret
   2a9d0:	stp	x29, x30, [sp, #-32]!
   2a9d4:	str	x19, [sp, #16]
   2a9d8:	mov	x29, sp
   2a9dc:	mov	x19, x0
   2a9e0:	bl	c610 <mpfr_mpz_clear@plt>
   2a9e4:	add	x0, x19, #0x10
   2a9e8:	bl	c610 <mpfr_mpz_clear@plt>
   2a9ec:	add	x0, x19, #0x20
   2a9f0:	bl	c610 <mpfr_mpz_clear@plt>
   2a9f4:	add	x0, x19, #0x30
   2a9f8:	bl	c610 <mpfr_mpz_clear@plt>
   2a9fc:	add	x0, x19, #0x40
   2aa00:	bl	c610 <mpfr_mpz_clear@plt>
   2aa04:	add	x0, x19, #0x50
   2aa08:	bl	c610 <mpfr_mpz_clear@plt>
   2aa0c:	ldr	x19, [sp, #16]
   2aa10:	ldp	x29, x30, [sp], #32
   2aa14:	ret

000000000002aa18 <mpfr_cos@@Base>:
   2aa18:	sub	sp, sp, #0x1d0
   2aa1c:	stp	x29, x30, [sp, #368]
   2aa20:	stp	x28, x27, [sp, #384]
   2aa24:	stp	x26, x25, [sp, #400]
   2aa28:	stp	x24, x23, [sp, #416]
   2aa2c:	stp	x22, x21, [sp, #432]
   2aa30:	stp	x20, x19, [sp, #448]
   2aa34:	ldr	x19, [x1, #16]
   2aa38:	mov	x10, #0xfffffffffffffeff    	// #-257
   2aa3c:	movk	x10, #0x7fff, lsl #48
   2aa40:	add	x8, x10, #0x105
   2aa44:	mov	w27, w2
   2aa48:	cmp	x19, x8
   2aa4c:	mov	x20, x0
   2aa50:	add	x29, sp, #0x170
   2aa54:	b.lt	2af74 <mpfr_cos@@Base+0x55c>  // b.tstop
   2aa58:	mov	x21, x1
   2aa5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2aa60:	ldr	x1, [x0, #2800]
   2aa64:	add	x0, x0, #0xaf0
   2aa68:	blr	x1
   2aa6c:	mrs	x25, tpidr_el0
   2aa70:	ldr	w24, [x25, x0]
   2aa74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2aa78:	ldr	x1, [x0, #2736]
   2aa7c:	add	x0, x0, #0xab0
   2aa80:	blr	x1
   2aa84:	ldr	x23, [x25, x0]
   2aa88:	mov	x8, x0
   2aa8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2aa90:	ldr	x1, [x0, #2768]
   2aa94:	add	x0, x0, #0xad0
   2aa98:	blr	x1
   2aa9c:	ldr	x26, [x25, x0]
   2aaa0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2aaa4:	str	x9, [x25, x8]
   2aaa8:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2aaac:	str	x8, [x25, x0]
   2aab0:	tbnz	x19, #63, 2aac0 <mpfr_cos@@Base+0xa8>
   2aab4:	mov	w8, wzr
   2aab8:	cbnz	w8, 2b1a0 <mpfr_cos@@Base+0x788>
   2aabc:	b	2aae4 <mpfr_cos@@Base+0xcc>
   2aac0:	ldr	x8, [x20]
   2aac4:	mov	w9, #0x1                   	// #1
   2aac8:	sub	x2, x9, x19, lsl #1
   2aacc:	add	x8, x8, #0x1
   2aad0:	cmp	x2, x8
   2aad4:	b.hi	2afc8 <mpfr_cos@@Base+0x5b0>  // b.pmore
   2aad8:	mov	w8, wzr
   2aadc:	cbz	w8, 2aab4 <mpfr_cos@@Base+0x9c>
   2aae0:	cbnz	w8, 2b1a0 <mpfr_cos@@Base+0x788>
   2aae4:	str	x26, [sp, #80]
   2aae8:	ldr	x26, [x20]
   2aaec:	mov	w8, #0x7530                	// #30000
   2aaf0:	cmp	x26, x8
   2aaf4:	b.lt	2ab14 <mpfr_cos@@Base+0xfc>  // b.tstop
   2aaf8:	mov	x0, x20
   2aafc:	mov	x1, x21
   2ab00:	mov	w2, w27
   2ab04:	bl	2b1e0 <mpfr_cos@@Base+0x7c8>
   2ab08:	ldr	x19, [sp, #80]
   2ab0c:	mov	w22, w0
   2ab10:	b	2b134 <mpfr_cos@@Base+0x71c>
   2ab14:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   2ab18:	movk	x8, #0x5556
   2ab1c:	smulh	x8, x26, x8
   2ab20:	add	x0, x8, x8, lsr #63
   2ab24:	str	x23, [sp, #32]
   2ab28:	bl	c380 <__gmpfr_isqrt@plt>
   2ab2c:	subs	x22, x26, #0x1
   2ab30:	mov	x23, x0
   2ab34:	str	w27, [sp, #28]
   2ab38:	b.eq	2b074 <mpfr_cos@@Base+0x65c>  // b.none
   2ab3c:	b.le	2b084 <mpfr_cos@@Base+0x66c>
   2ab40:	clz	x8, x22
   2ab44:	mov	w9, #0x80                  	// #128
   2ab48:	mov	x28, #0xfffffffffffffeff    	// #-257
   2ab4c:	sub	w8, w9, w8, lsl #1
   2ab50:	movk	x28, #0x7fff, lsl #48
   2ab54:	sxtw	x8, w8
   2ab58:	add	x9, x26, x23, lsl #1
   2ab5c:	add	x27, x9, x8
   2ab60:	cmp	x19, #0x3
   2ab64:	add	x22, x27, #0x4
   2ab68:	str	x20, [sp, #48]
   2ab6c:	str	w24, [sp, #44]
   2ab70:	b.lt	2abac <mpfr_cos@@Base+0x194>  // b.tstop
   2ab74:	add	x8, x22, x19
   2ab78:	add	x9, x28, #0x2
   2ab7c:	cmp	x8, x9
   2ab80:	sub	x24, x8, #0x1
   2ab84:	b.ge	2b0ac <mpfr_cos@@Base+0x694>  // b.tcont
   2ab88:	sub	x0, x29, #0x88
   2ab8c:	mov	x1, x24
   2ab90:	bl	cf60 <mpfr_init2@plt>
   2ab94:	sub	x0, x29, #0x68
   2ab98:	mov	x1, x22
   2ab9c:	bl	cf60 <mpfr_init2@plt>
   2aba0:	mov	w8, #0x1                   	// #1
   2aba4:	str	w8, [sp, #76]
   2aba8:	b	2abb0 <mpfr_cos@@Base+0x198>
   2abac:	str	wzr, [sp, #76]
   2abb0:	sub	x8, x28, #0x4
   2abb4:	cmp	x27, x8
   2abb8:	b.gt	2b1dc <mpfr_cos@@Base+0x7c4>
   2abbc:	add	x8, x27, #0x3
   2abc0:	add	x9, x27, #0x42
   2abc4:	cmp	x8, #0x0
   2abc8:	ldr	w28, [sp, #76]
   2abcc:	csel	x8, x9, x8, lt  // lt = tstop
   2abd0:	asr	x8, x8, #6
   2abd4:	cmp	x27, #0x1fd
   2abd8:	add	x24, x8, #0x1
   2abdc:	b.lt	2abf4 <mpfr_cos@@Base+0x1dc>  // b.tstop
   2abe0:	lsl	x0, x24, #4
   2abe4:	str	x0, [sp, #88]
   2abe8:	bl	d1f0 <mpfr_allocate_func@plt>
   2abec:	str	x0, [sp, #96]
   2abf0:	b	2ac00 <mpfr_cos@@Base+0x1e8>
   2abf4:	add	x8, sp, #0x58
   2abf8:	add	x8, x8, #0x10
   2abfc:	stp	xzr, x8, [sp, #88]
   2ac00:	ldr	w27, [sp, #28]
   2ac04:	ldr	x8, [sp, #96]
   2ac08:	mov	x20, #0xfffffffffffffeff    	// #-257
   2ac0c:	mov	w9, #0x1                   	// #1
   2ac10:	cmp	w27, #0x0
   2ac14:	movk	x20, #0x7fff, lsl #48
   2ac18:	add	x10, x23, #0x1
   2ac1c:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   2ac20:	stur	x8, [x29, #-16]
   2ac24:	add	x8, x8, x24, lsl #3
   2ac28:	stur	w9, [x29, #-32]
   2ac2c:	stur	w9, [x29, #-64]
   2ac30:	cinc	x9, x26, eq  // eq = none
   2ac34:	mov	w26, #0x40                  	// #64
   2ac38:	str	xzr, [sp, #8]
   2ac3c:	stur	x22, [x29, #-72]
   2ac40:	stp	x9, x10, [sp, #56]
   2ac44:	stp	x8, x22, [x29, #-48]
   2ac48:	cbz	w28, 2acbc <mpfr_cos@@Base+0x2a4>
   2ac4c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ac50:	ldr	x1, [x0, #2848]
   2ac54:	add	x0, x0, #0xb20
   2ac58:	blr	x1
   2ac5c:	add	x1, x25, x0
   2ac60:	sub	x0, x29, #0x88
   2ac64:	mov	w2, wzr
   2ac68:	bl	c840 <mpfr_cache@plt>
   2ac6c:	sub	x0, x29, #0x88
   2ac70:	sub	x1, x29, #0x88
   2ac74:	mov	w2, #0x1                   	// #1
   2ac78:	mov	w3, wzr
   2ac7c:	bl	c780 <mpfr_mul_2ui@plt>
   2ac80:	sub	x0, x29, #0x68
   2ac84:	sub	x2, x29, #0x88
   2ac88:	mov	x1, x21
   2ac8c:	mov	w3, wzr
   2ac90:	bl	d210 <mpfr_remainder@plt>
   2ac94:	ldur	x8, [x29, #-88]
   2ac98:	cmp	x8, x23
   2ac9c:	b.eq	2ae80 <mpfr_cos@@Base+0x468>  // b.none
   2aca0:	str	x26, [sp, #16]
   2aca4:	mov	w20, w27
   2aca8:	sub	x0, x29, #0x28
   2acac:	sub	x1, x29, #0x68
   2acb0:	sub	x2, x29, #0x68
   2acb4:	mov	w3, #0x2                   	// #2
   2acb8:	b	2acd4 <mpfr_cos@@Base+0x2bc>
   2acbc:	mov	w20, w27
   2acc0:	sub	x0, x29, #0x28
   2acc4:	mov	w3, #0x2                   	// #2
   2acc8:	mov	x1, x21
   2accc:	mov	x2, x21
   2acd0:	str	x26, [sp, #16]
   2acd4:	bl	c1b0 <mpfr_mul@plt>
   2acd8:	ldur	x8, [x29, #-24]
   2acdc:	ldr	x10, [sp, #64]
   2ace0:	sub	x0, x29, #0x48
   2ace4:	sub	x1, x29, #0x28
   2ace8:	bic	x9, x8, x8, asr #63
   2acec:	add	x24, x10, x9, lsr #1
   2acf0:	lsl	x26, x24, #1
   2acf4:	sub	x8, x8, x26
   2acf8:	stur	x8, [x29, #-24]
   2acfc:	bl	2b210 <mpfr_cos@@Base+0x7f8>
   2ad00:	ldur	x8, [x29, #-40]
   2ad04:	mov	w27, w0
   2ad08:	ldur	x0, [x29, #-16]
   2ad0c:	mov	w10, #0x1                   	// #1
   2ad10:	sub	x9, x8, #0x1
   2ad14:	add	x8, x8, #0x3e
   2ad18:	cmp	x9, #0x0
   2ad1c:	csel	x8, x8, x9, lt  // lt = tstop
   2ad20:	asr	x8, x8, #6
   2ad24:	lsl	x28, x8, #3
   2ad28:	mov	w1, wzr
   2ad2c:	mov	x2, x28
   2ad30:	stur	w10, [x29, #-32]
   2ad34:	stur	x10, [x29, #-24]
   2ad38:	bl	c5b0 <memset@plt>
   2ad3c:	ldur	x8, [x29, #-16]
   2ad40:	cmp	x24, #0x1
   2ad44:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   2ad48:	str	x9, [x8, x28]
   2ad4c:	b.lt	2ad9c <mpfr_cos@@Base+0x384>  // b.tstop
   2ad50:	mov	x28, xzr
   2ad54:	sub	x0, x29, #0x48
   2ad58:	sub	x1, x29, #0x48
   2ad5c:	mov	w2, #0x2                   	// #2
   2ad60:	bl	c8c0 <mpfr_sqr@plt>
   2ad64:	ldur	x8, [x29, #-56]
   2ad68:	sub	x0, x29, #0x48
   2ad6c:	sub	x1, x29, #0x48
   2ad70:	sub	x2, x29, #0x28
   2ad74:	add	x8, x8, #0x1
   2ad78:	mov	w3, wzr
   2ad7c:	stur	x8, [x29, #-56]
   2ad80:	bl	bfd0 <mpfr_sub@plt>
   2ad84:	ldur	x8, [x29, #-56]
   2ad88:	cmp	x8, x23
   2ad8c:	b.eq	2ae6c <mpfr_cos@@Base+0x454>  // b.none
   2ad90:	add	x28, x28, #0x1
   2ad94:	cmp	x28, x24
   2ad98:	b.lt	2ad54 <mpfr_cos@@Base+0x33c>  // b.tstop
   2ad9c:	ldr	w28, [sp, #76]
   2ada0:	sxtw	x8, w27
   2ada4:	mov	w9, #0x1                   	// #1
   2ada8:	cmp	x24, #0x0
   2adac:	bfi	x9, x8, #1, #63
   2adb0:	mov	w8, #0x4                   	// #4
   2adb4:	csinc	x8, x8, xzr, eq  // eq = none
   2adb8:	cmp	w28, #0x0
   2adbc:	csel	x8, x8, xzr, ne  // ne = any
   2adc0:	add	x8, x8, x9
   2adc4:	subs	x24, x8, #0x1
   2adc8:	b.eq	2af44 <mpfr_cos@@Base+0x52c>  // b.none
   2adcc:	mov	w27, w20
   2add0:	mov	x20, #0xfffffffffffffeff    	// #-257
   2add4:	movk	x20, #0x7fff, lsl #48
   2add8:	b.le	2af58 <mpfr_cos@@Base+0x540>
   2addc:	clz	x8, x24
   2ade0:	mov	w9, #0x40                  	// #64
   2ade4:	sub	x8, x9, x8
   2ade8:	ldur	x24, [x29, #-56]
   2adec:	add	x9, x20, #0x105
   2adf0:	add	x26, x8, x26
   2adf4:	cmp	x24, x9
   2adf8:	b.lt	2ae30 <mpfr_cos@@Base+0x418>  // b.tstop
   2adfc:	ldur	x8, [x29, #-72]
   2ae00:	ldur	x0, [x29, #-48]
   2ae04:	ldr	x3, [sp, #56]
   2ae08:	add	x9, x24, x22
   2ae0c:	sub	x10, x8, #0x1
   2ae10:	add	x8, x8, #0x3e
   2ae14:	cmp	x10, #0x0
   2ae18:	csel	x8, x8, x10, lt  // lt = tstop
   2ae1c:	asr	x8, x8, #6
   2ae20:	add	x1, x8, #0x1
   2ae24:	sub	x2, x9, x26
   2ae28:	bl	c830 <mpfr_round_p@plt>
   2ae2c:	cbnz	w0, 2b0e8 <mpfr_cos@@Base+0x6d0>
   2ae30:	subs	x8, x22, x26
   2ae34:	b.le	2ae4c <mpfr_cos@@Base+0x434>
   2ae38:	cmp	x24, #0x1
   2ae3c:	b.ne	2ae4c <mpfr_cos@@Base+0x434>  // b.any
   2ae40:	ldr	x9, [sp, #56]
   2ae44:	cmp	x8, x9
   2ae48:	b.ge	2b0e0 <mpfr_cos@@Base+0x6c8>  // b.tcont
   2ae4c:	ldp	x8, x26, [sp, #8]
   2ae50:	cmp	x8, x24
   2ae54:	b.le	2ae80 <mpfr_cos@@Base+0x468>
   2ae58:	ldr	x8, [sp, #8]
   2ae5c:	str	x24, [sp, #8]
   2ae60:	add	x8, x22, x8
   2ae64:	sub	x22, x8, x24
   2ae68:	b	2ae80 <mpfr_cos@@Base+0x468>
   2ae6c:	ldr	w28, [sp, #76]
   2ae70:	ldr	x26, [sp, #16]
   2ae74:	mov	w27, w20
   2ae78:	mov	x20, #0xfffffffffffffeff    	// #-257
   2ae7c:	movk	x20, #0x7fff, lsl #48
   2ae80:	sub	x8, x20, x22
   2ae84:	cmp	x26, x8
   2ae88:	b.gt	2af28 <mpfr_cos@@Base+0x510>
   2ae8c:	add	x22, x22, x26
   2ae90:	cmp	x22, #0x0
   2ae94:	cinc	x8, x22, lt  // lt = tstop
   2ae98:	cmp	x22, x20
   2ae9c:	b.gt	2b1dc <mpfr_cos@@Base+0x7c4>
   2aea0:	asr	x26, x8, #1
   2aea4:	sub	x8, x22, #0x1
   2aea8:	add	x9, x22, #0x3e
   2aeac:	cmp	x8, #0x0
   2aeb0:	ldr	x1, [sp, #88]
   2aeb4:	csel	x8, x9, x8, lt  // lt = tstop
   2aeb8:	asr	x8, x8, #6
   2aebc:	add	x24, x8, #0x1
   2aec0:	lsl	x2, x24, #4
   2aec4:	str	x2, [sp, #88]
   2aec8:	cbz	x1, 2aed8 <mpfr_cos@@Base+0x4c0>
   2aecc:	ldr	x0, [sp, #96]
   2aed0:	bl	c660 <mpfr_reallocate_func@plt>
   2aed4:	b	2aee0 <mpfr_cos@@Base+0x4c8>
   2aed8:	mov	x0, x2
   2aedc:	bl	d1f0 <mpfr_allocate_func@plt>
   2aee0:	mov	x8, x0
   2aee4:	mov	w9, #0x1                   	// #1
   2aee8:	stur	x8, [x29, #-16]
   2aeec:	add	x8, x8, x24, lsl #3
   2aef0:	str	x0, [sp, #96]
   2aef4:	stur	w9, [x29, #-32]
   2aef8:	stur	x22, [x29, #-72]
   2aefc:	stp	x8, x22, [x29, #-48]
   2af00:	stur	w9, [x29, #-64]
   2af04:	cbz	w28, 2ac48 <mpfr_cos@@Base+0x230>
   2af08:	sub	x0, x29, #0x68
   2af0c:	mov	x1, x22
   2af10:	bl	c330 <mpfr_set_prec@plt>
   2af14:	add	x8, x22, x19
   2af18:	sub	x1, x8, #0x1
   2af1c:	sub	x0, x29, #0x88
   2af20:	bl	c330 <mpfr_set_prec@plt>
   2af24:	b	2ac48 <mpfr_cos@@Base+0x230>
   2af28:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2af2c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2af30:	mov	w1, #0x117                 	// #279
   2af34:	add	x0, x0, #0x7f9
   2af38:	add	x2, x2, #0x5cf
   2af3c:	bl	d030 <mpfr_assert_fail@plt>
   2af40:	b	2ae8c <mpfr_cos@@Base+0x474>
   2af44:	mov	w27, w20
   2af48:	mov	x20, #0xfffffffffffffeff    	// #-257
   2af4c:	mov	x8, xzr
   2af50:	movk	x20, #0x7fff, lsl #48
   2af54:	b	2ade8 <mpfr_cos@@Base+0x3d0>
   2af58:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2af5c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2af60:	mov	w1, #0xf8                  	// #248
   2af64:	add	x0, x0, #0x7f9
   2af68:	add	x2, x2, #0x4d4
   2af6c:	bl	d030 <mpfr_assert_fail@plt>
   2af70:	b	2addc <mpfr_cos@@Base+0x3c4>
   2af74:	and	x9, x19, #0xfffffffffffffffe
   2af78:	add	x8, x10, #0x103
   2af7c:	cmp	x9, x8
   2af80:	b.ne	2afb0 <mpfr_cos@@Base+0x598>  // b.any
   2af84:	str	x8, [x20, #16]
   2af88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2af8c:	ldr	x1, [x0, #2800]
   2af90:	add	x0, x0, #0xaf0
   2af94:	blr	x1
   2af98:	mrs	x8, tpidr_el0
   2af9c:	ldr	w9, [x8, x0]
   2afa0:	mov	w22, wzr
   2afa4:	orr	w9, w9, #0x4
   2afa8:	str	w9, [x8, x0]
   2afac:	b	2b1a0 <mpfr_cos@@Base+0x788>
   2afb0:	mov	w1, #0x1                   	// #1
   2afb4:	mov	x0, x20
   2afb8:	mov	x2, xzr
   2afbc:	mov	w3, w27
   2afc0:	bl	cac0 <mpfr_set_ui_2exp@plt>
   2afc4:	b	2b1d4 <mpfr_cos@@Base+0x7bc>
   2afc8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2afcc:	ldr	x1, [x0, #2800]
   2afd0:	add	x0, x0, #0xaf0
   2afd4:	blr	x1
   2afd8:	str	wzr, [x25, x0]
   2afdc:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   2afe0:	ldr	x1, [x1, #3928]
   2afe4:	mov	x0, x20
   2afe8:	mov	w3, wzr
   2afec:	mov	w4, w27
   2aff0:	bl	ca10 <mpfr_round_near_x@plt>
   2aff4:	cbz	w0, 2b0a0 <mpfr_cos@@Base+0x688>
   2aff8:	mov	w22, w0
   2affc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b000:	ldr	x1, [x0, #2800]
   2b004:	add	x0, x0, #0xaf0
   2b008:	blr	x1
   2b00c:	ldr	w8, [x25, x0]
   2b010:	orr	w24, w8, w24
   2b014:	str	w24, [x25, x0]
   2b018:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b01c:	ldr	x1, [x0, #2736]
   2b020:	add	x0, x0, #0xab0
   2b024:	blr	x1
   2b028:	str	x23, [x25, x0]
   2b02c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b030:	ldr	x1, [x0, #2768]
   2b034:	add	x0, x0, #0xad0
   2b038:	blr	x1
   2b03c:	str	x26, [x25, x0]
   2b040:	ldr	x8, [x20, #16]
   2b044:	cmp	x8, x26
   2b048:	b.gt	2b0c8 <mpfr_cos@@Base+0x6b0>
   2b04c:	cmp	x8, x23
   2b050:	b.lt	2b0c8 <mpfr_cos@@Base+0x6b0>  // b.tstop
   2b054:	orr	w8, w24, #0x8
   2b058:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b05c:	ldr	x1, [x0, #2800]
   2b060:	add	x0, x0, #0xaf0
   2b064:	blr	x1
   2b068:	str	w8, [x25, x0]
   2b06c:	mov	w8, #0x1                   	// #1
   2b070:	b	2b0a4 <mpfr_cos@@Base+0x68c>
   2b074:	mov	x28, #0xfffffffffffffeff    	// #-257
   2b078:	movk	x28, #0x7fff, lsl #48
   2b07c:	mov	x8, xzr
   2b080:	b	2ab58 <mpfr_cos@@Base+0x140>
   2b084:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b088:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b08c:	add	x0, x0, #0x7f9
   2b090:	add	x2, x2, #0x580
   2b094:	mov	w1, #0xb1                  	// #177
   2b098:	bl	d030 <mpfr_assert_fail@plt>
   2b09c:	b	2ab40 <mpfr_cos@@Base+0x128>
   2b0a0:	mov	w8, wzr
   2b0a4:	cbnz	w8, 2aadc <mpfr_cos@@Base+0xc4>
   2b0a8:	b	2aad8 <mpfr_cos@@Base+0xc0>
   2b0ac:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b0b0:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b0b4:	add	x0, x0, #0x7f9
   2b0b8:	add	x2, x2, #0x58c
   2b0bc:	mov	w1, #0xb9                  	// #185
   2b0c0:	bl	d030 <mpfr_assert_fail@plt>
   2b0c4:	b	2ab88 <mpfr_cos@@Base+0x170>
   2b0c8:	mov	x0, x20
   2b0cc:	mov	w1, w22
   2b0d0:	mov	w2, w27
   2b0d4:	bl	d020 <mpfr_check_range@plt>
   2b0d8:	mov	w22, w0
   2b0dc:	b	2b06c <mpfr_cos@@Base+0x654>
   2b0e0:	sub	x0, x29, #0x48
   2b0e4:	bl	c930 <mpfr_nexttozero@plt>
   2b0e8:	ldr	x20, [sp, #48]
   2b0ec:	ldur	w3, [x29, #-64]
   2b0f0:	sub	x1, x29, #0x48
   2b0f4:	mov	w2, w27
   2b0f8:	mov	x0, x20
   2b0fc:	bl	cb70 <mpfr_set4@plt>
   2b100:	ldr	x1, [sp, #88]
   2b104:	mov	w22, w0
   2b108:	cbz	x1, 2b114 <mpfr_cos@@Base+0x6fc>
   2b10c:	ldr	x0, [sp, #96]
   2b110:	bl	d120 <mpfr_free_func@plt>
   2b114:	ldr	w24, [sp, #44]
   2b118:	ldr	x23, [sp, #32]
   2b11c:	ldr	x19, [sp, #80]
   2b120:	cbz	w28, 2b134 <mpfr_cos@@Base+0x71c>
   2b124:	sub	x0, x29, #0x68
   2b128:	bl	c4f0 <mpfr_clear@plt>
   2b12c:	sub	x0, x29, #0x88
   2b130:	bl	c4f0 <mpfr_clear@plt>
   2b134:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b138:	ldr	x1, [x0, #2800]
   2b13c:	add	x0, x0, #0xaf0
   2b140:	blr	x1
   2b144:	str	w24, [x25, x0]
   2b148:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b14c:	ldr	x1, [x0, #2736]
   2b150:	add	x0, x0, #0xab0
   2b154:	blr	x1
   2b158:	str	x23, [x25, x0]
   2b15c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b160:	ldr	x1, [x0, #2768]
   2b164:	add	x0, x0, #0xad0
   2b168:	blr	x1
   2b16c:	str	x19, [x25, x0]
   2b170:	ldr	x8, [x20, #16]
   2b174:	cmp	x8, x19
   2b178:	b.gt	2b1c4 <mpfr_cos@@Base+0x7ac>
   2b17c:	cmp	x8, x23
   2b180:	b.lt	2b1c4 <mpfr_cos@@Base+0x7ac>  // b.tstop
   2b184:	cbz	w22, 2b1a0 <mpfr_cos@@Base+0x788>
   2b188:	orr	w8, w24, #0x8
   2b18c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b190:	ldr	x1, [x0, #2800]
   2b194:	add	x0, x0, #0xaf0
   2b198:	blr	x1
   2b19c:	str	w8, [x25, x0]
   2b1a0:	mov	w0, w22
   2b1a4:	ldp	x20, x19, [sp, #448]
   2b1a8:	ldp	x22, x21, [sp, #432]
   2b1ac:	ldp	x24, x23, [sp, #416]
   2b1b0:	ldp	x26, x25, [sp, #400]
   2b1b4:	ldp	x28, x27, [sp, #384]
   2b1b8:	ldp	x29, x30, [sp, #368]
   2b1bc:	add	sp, sp, #0x1d0
   2b1c0:	ret
   2b1c4:	mov	x0, x20
   2b1c8:	mov	w1, w22
   2b1cc:	mov	w2, w27
   2b1d0:	bl	d020 <mpfr_check_range@plt>
   2b1d4:	mov	w22, w0
   2b1d8:	b	2b1a0 <mpfr_cos@@Base+0x788>
   2b1dc:	bl	cdd0 <mpfr_abort_prec_max@plt>
   2b1e0:	stp	x29, x30, [sp, #-16]!
   2b1e4:	mov	w3, w2
   2b1e8:	mov	x2, x1
   2b1ec:	mov	x1, x0
   2b1f0:	mov	x0, xzr
   2b1f4:	mov	x29, sp
   2b1f8:	bl	c490 <mpfr_sincos_fast@plt>
   2b1fc:	asr	w8, w0, #2
   2b200:	cmp	w8, #0x2
   2b204:	csinv	w0, w8, wzr, ne  // ne = any
   2b208:	ldp	x29, x30, [sp], #16
   2b20c:	ret
   2b210:	sub	sp, sp, #0x80
   2b214:	stp	x29, x30, [sp, #48]
   2b218:	add	x29, sp, #0x30
   2b21c:	stp	x20, x19, [sp, #112]
   2b220:	mov	x19, x0
   2b224:	sub	x0, x29, #0x10
   2b228:	stp	x26, x25, [sp, #64]
   2b22c:	stp	x24, x23, [sp, #80]
   2b230:	stp	x22, x21, [sp, #96]
   2b234:	mov	x20, x1
   2b238:	bl	c400 <mpfr_mpz_init@plt>
   2b23c:	mov	x0, sp
   2b240:	bl	c400 <mpfr_mpz_init@plt>
   2b244:	add	x0, sp, #0x10
   2b248:	bl	c400 <mpfr_mpz_init@plt>
   2b24c:	sub	x0, x29, #0x10
   2b250:	mov	x1, x20
   2b254:	bl	cfb0 <mpfr_get_z_2exp@plt>
   2b258:	mov	x21, x0
   2b25c:	sub	x0, x29, #0x10
   2b260:	mov	x1, xzr
   2b264:	bl	bee0 <__gmpz_scan1@plt>
   2b268:	mov	x22, x0
   2b26c:	sub	x0, x29, #0x10
   2b270:	sub	x1, x29, #0x10
   2b274:	mov	x2, x22
   2b278:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   2b27c:	ldr	x8, [x20, #16]
   2b280:	ldr	x20, [x19]
   2b284:	neg	x8, x8
   2b288:	sdiv	x8, x20, x8
   2b28c:	cmp	x8, #0x0
   2b290:	cinc	x8, x8, eq  // eq = none
   2b294:	subs	x23, x8, #0x1
   2b298:	b.eq	2b438 <mpfr_cos@@Base+0xa20>  // b.none
   2b29c:	cbz	x8, 2b440 <mpfr_cos@@Base+0xa28>
   2b2a0:	clz	x8, x23
   2b2a4:	mov	w9, #0x84                  	// #132
   2b2a8:	sub	w8, w9, w8, lsl #1
   2b2ac:	sxtw	x24, w8
   2b2b0:	mov	x0, sp
   2b2b4:	mov	w1, #0x1                   	// #1
   2b2b8:	bl	c110 <__gmpz_set_ui@plt>
   2b2bc:	add	x20, x24, x20
   2b2c0:	mov	x0, sp
   2b2c4:	mov	x1, sp
   2b2c8:	mov	x2, x20
   2b2cc:	bl	c6a0 <__gmpz_mul_2exp@plt>
   2b2d0:	add	x0, sp, #0x10
   2b2d4:	mov	x1, sp
   2b2d8:	bl	c410 <__gmpz_set@plt>
   2b2dc:	add	x0, sp, #0x10
   2b2e0:	mov	w1, #0x2                   	// #2
   2b2e4:	bl	d050 <__gmpz_sizeinbase@plt>
   2b2e8:	cmp	x0, x24
   2b2ec:	b.ge	2b2f8 <mpfr_cos@@Base+0x8e0>  // b.tcont
   2b2f0:	mov	x21, xzr
   2b2f4:	b	2b3cc <mpfr_cos@@Base+0x9b4>
   2b2f8:	mov	x23, x0
   2b2fc:	mov	x25, xzr
   2b300:	add	x26, x22, x21
   2b304:	b	2b328 <mpfr_cos@@Base+0x910>
   2b308:	bl	ceb0 <__gmpz_add@plt>
   2b30c:	add	x0, sp, #0x10
   2b310:	mov	w1, #0x2                   	// #2
   2b314:	bl	d050 <__gmpz_sizeinbase@plt>
   2b318:	mov	x23, x0
   2b31c:	cmp	x0, x24
   2b320:	add	x25, x25, #0x2
   2b324:	b.lt	2b3c8 <mpfr_cos@@Base+0x9b0>  // b.tstop
   2b328:	sub	x0, x29, #0x10
   2b32c:	mov	w1, #0x2                   	// #2
   2b330:	add	x21, x25, #0x1
   2b334:	bl	d050 <__gmpz_sizeinbase@plt>
   2b338:	subs	x22, x0, x23
   2b33c:	b.le	2b354 <mpfr_cos@@Base+0x93c>
   2b340:	sub	x0, x29, #0x10
   2b344:	sub	x1, x29, #0x10
   2b348:	mov	x2, x22
   2b34c:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   2b350:	add	x26, x22, x26
   2b354:	add	x0, sp, #0x10
   2b358:	add	x1, sp, #0x10
   2b35c:	sub	x2, x29, #0x10
   2b360:	bl	c460 <__gmpz_mul@plt>
   2b364:	neg	x2, x26
   2b368:	add	x0, sp, #0x10
   2b36c:	add	x1, sp, #0x10
   2b370:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   2b374:	lsr	x8, x21, #32
   2b378:	cbnz	x8, 2b388 <mpfr_cos@@Base+0x970>
   2b37c:	add	x8, x25, #0x2
   2b380:	mul	x2, x8, x21
   2b384:	b	2b39c <mpfr_cos@@Base+0x984>
   2b388:	add	x0, sp, #0x10
   2b38c:	add	x1, sp, #0x10
   2b390:	mov	x2, x21
   2b394:	bl	cae0 <__gmpz_fdiv_q_ui@plt>
   2b398:	add	x2, x25, #0x2
   2b39c:	add	x0, sp, #0x10
   2b3a0:	add	x1, sp, #0x10
   2b3a4:	bl	cae0 <__gmpz_fdiv_q_ui@plt>
   2b3a8:	and	x8, x21, #0x3
   2b3ac:	mov	x0, sp
   2b3b0:	mov	x1, sp
   2b3b4:	add	x2, sp, #0x10
   2b3b8:	cmp	x8, #0x1
   2b3bc:	b.ne	2b308 <mpfr_cos@@Base+0x8f0>  // b.any
   2b3c0:	bl	c240 <__gmpz_sub@plt>
   2b3c4:	b	2b30c <mpfr_cos@@Base+0x8f4>
   2b3c8:	lsr	x21, x25, #1
   2b3cc:	mov	x1, sp
   2b3d0:	mov	x0, x19
   2b3d4:	mov	w2, wzr
   2b3d8:	bl	c6e0 <mpfr_set_z@plt>
   2b3dc:	mov	x0, x19
   2b3e0:	mov	x1, x19
   2b3e4:	mov	x2, x20
   2b3e8:	mov	w3, wzr
   2b3ec:	bl	cde0 <mpfr_div_2ui@plt>
   2b3f0:	sub	x0, x29, #0x10
   2b3f4:	bl	c610 <mpfr_mpz_clear@plt>
   2b3f8:	mov	x0, sp
   2b3fc:	bl	c610 <mpfr_mpz_clear@plt>
   2b400:	add	x0, sp, #0x10
   2b404:	bl	c610 <mpfr_mpz_clear@plt>
   2b408:	clz	x8, x21
   2b40c:	cmp	x21, #0x0
   2b410:	ldp	x20, x19, [sp, #112]
   2b414:	ldp	x22, x21, [sp, #96]
   2b418:	ldp	x24, x23, [sp, #80]
   2b41c:	ldp	x26, x25, [sp, #64]
   2b420:	ldp	x29, x30, [sp, #48]
   2b424:	mov	w9, #0x81                  	// #129
   2b428:	sub	w8, w9, w8, lsl #1
   2b42c:	csinc	w0, w8, wzr, ne  // ne = any
   2b430:	add	sp, sp, #0x80
   2b434:	ret
   2b438:	mov	w24, #0x4                   	// #4
   2b43c:	b	2b2b0 <mpfr_cos@@Base+0x898>
   2b440:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b444:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b448:	add	x0, x0, #0x7f9
   2b44c:	add	x2, x2, #0x612
   2b450:	mov	w1, #0x4e                  	// #78
   2b454:	bl	d030 <mpfr_assert_fail@plt>
   2b458:	b	2b2a0 <mpfr_cos@@Base+0x888>

000000000002b45c <mpfr_sin@@Base>:
   2b45c:	sub	sp, sp, #0xd0
   2b460:	stp	x29, x30, [sp, #112]
   2b464:	stp	x28, x27, [sp, #128]
   2b468:	stp	x26, x25, [sp, #144]
   2b46c:	stp	x24, x23, [sp, #160]
   2b470:	stp	x22, x21, [sp, #176]
   2b474:	stp	x20, x19, [sp, #192]
   2b478:	ldr	x24, [x1, #16]
   2b47c:	mov	x28, #0x2                   	// #2
   2b480:	movk	x28, #0x8000, lsl #48
   2b484:	add	x8, x28, #0x2
   2b488:	mov	x21, x1
   2b48c:	cmp	x24, x8
   2b490:	mov	x23, x0
   2b494:	add	x29, sp, #0x70
   2b498:	b.lt	2b8f0 <mpfr_sin@@Base+0x494>  // b.tstop
   2b49c:	mov	w25, w2
   2b4a0:	neg	x20, x24, lsl #1
   2b4a4:	tbnz	x24, #63, 2b4b4 <mpfr_sin@@Base+0x58>
   2b4a8:	mov	w8, wzr
   2b4ac:	cbnz	w8, 2b8cc <mpfr_sin@@Base+0x470>
   2b4b0:	b	2b4d4 <mpfr_sin@@Base+0x78>
   2b4b4:	ldr	x8, [x23]
   2b4b8:	add	x2, x20, #0x2
   2b4bc:	add	x8, x8, #0x1
   2b4c0:	cmp	x2, x8
   2b4c4:	b.hi	2b940 <mpfr_sin@@Base+0x4e4>  // b.pmore
   2b4c8:	mov	w8, wzr
   2b4cc:	cbz	w8, 2b4a8 <mpfr_sin@@Base+0x4c>
   2b4d0:	cbnz	w8, 2b8cc <mpfr_sin@@Base+0x470>
   2b4d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b4d8:	ldr	x1, [x0, #2800]
   2b4dc:	add	x0, x0, #0xaf0
   2b4e0:	blr	x1
   2b4e4:	mrs	x11, tpidr_el0
   2b4e8:	ldr	w19, [x11, x0]
   2b4ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b4f0:	ldr	x1, [x0, #2736]
   2b4f4:	add	x0, x0, #0xab0
   2b4f8:	blr	x1
   2b4fc:	ldr	x9, [x11, x0]
   2b500:	mov	x8, x0
   2b504:	str	x9, [sp, #16]
   2b508:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b50c:	ldr	x1, [x0, #2768]
   2b510:	add	x0, x0, #0xad0
   2b514:	blr	x1
   2b518:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2b51c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2b520:	ldr	x22, [x11, x0]
   2b524:	str	x9, [x11, x8]
   2b528:	str	x10, [x11, x0]
   2b52c:	ldr	x27, [x23]
   2b530:	mov	w8, #0x7530                	// #30000
   2b534:	str	x11, [sp, #40]
   2b538:	str	x22, [sp, #8]
   2b53c:	cmp	x27, x8
   2b540:	b.lt	2b55c <mpfr_sin@@Base+0x100>  // b.tstop
   2b544:	mov	x0, x23
   2b548:	mov	x1, x21
   2b54c:	mov	w2, w25
   2b550:	bl	2b9c0 <mpfr_sin@@Base+0x564>
   2b554:	mov	w22, w0
   2b558:	b	2b850 <mpfr_sin@@Base+0x3f4>
   2b55c:	str	w19, [sp]
   2b560:	subs	x19, x27, #0x1
   2b564:	b.eq	2b980 <mpfr_sin@@Base+0x524>  // b.none
   2b568:	b.le	2b988 <mpfr_sin@@Base+0x52c>
   2b56c:	clz	x8, x19
   2b570:	mov	w9, #0x40                  	// #64
   2b574:	sub	x8, x9, x8
   2b578:	add	x8, x8, x27
   2b57c:	add	x22, x8, #0x7
   2b580:	tbz	x24, #63, 2b598 <mpfr_sin@@Base+0x13c>
   2b584:	sub	x8, x28, x8
   2b588:	sub	x8, x8, #0x10a
   2b58c:	cmp	x20, x8
   2b590:	b.gt	2b9a4 <mpfr_sin@@Base+0x548>
   2b594:	add	x22, x22, x20
   2b598:	sub	x0, x29, #0x20
   2b59c:	bl	c030 <mpfr_init@plt>
   2b5a0:	add	x0, sp, #0x30
   2b5a4:	bl	c030 <mpfr_init@plt>
   2b5a8:	cmp	w25, #0x0
   2b5ac:	sub	x8, x28, #0x101
   2b5b0:	str	w25, [sp, #4]
   2b5b4:	mov	w20, #0x40                  	// #64
   2b5b8:	str	x8, [sp, #32]
   2b5bc:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   2b5c0:	cinc	x8, x27, eq  // eq = none
   2b5c4:	str	x8, [sp, #24]
   2b5c8:	cmp	x24, #0x2
   2b5cc:	b.lt	2b680 <mpfr_sin@@Base+0x224>  // b.tstop
   2b5d0:	ldr	x9, [sp, #32]
   2b5d4:	add	x8, x22, x24
   2b5d8:	sub	x27, x8, #0x1
   2b5dc:	cmp	x8, x9
   2b5e0:	b.ge	2b804 <mpfr_sin@@Base+0x3a8>  // b.tcont
   2b5e4:	sub	x0, x29, #0x20
   2b5e8:	mov	x1, x27
   2b5ec:	bl	c330 <mpfr_set_prec@plt>
   2b5f0:	add	x0, sp, #0x30
   2b5f4:	mov	x1, x22
   2b5f8:	bl	c330 <mpfr_set_prec@plt>
   2b5fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b600:	ldr	x1, [x0, #2848]
   2b604:	add	x0, x0, #0xb20
   2b608:	blr	x1
   2b60c:	ldr	x8, [sp, #40]
   2b610:	mov	w2, wzr
   2b614:	add	x1, x8, x0
   2b618:	sub	x0, x29, #0x20
   2b61c:	bl	c840 <mpfr_cache@plt>
   2b620:	sub	x0, x29, #0x20
   2b624:	sub	x1, x29, #0x20
   2b628:	mov	w2, #0x1                   	// #1
   2b62c:	mov	w3, wzr
   2b630:	bl	c780 <mpfr_mul_2ui@plt>
   2b634:	add	x0, sp, #0x30
   2b638:	sub	x2, x29, #0x20
   2b63c:	mov	x1, x21
   2b640:	mov	w3, wzr
   2b644:	bl	d210 <mpfr_remainder@plt>
   2b648:	sub	x0, x29, #0x20
   2b64c:	sub	x1, x29, #0x20
   2b650:	mov	w2, #0x1                   	// #1
   2b654:	mov	w3, wzr
   2b658:	bl	cde0 <mpfr_div_2ui@plt>
   2b65c:	ldr	w8, [sp, #56]
   2b660:	sub	x0, x29, #0x20
   2b664:	sub	x1, x29, #0x20
   2b668:	add	x2, sp, #0x30
   2b66c:	mov	w3, #0x1                   	// #1
   2b670:	cmp	w8, #0x1
   2b674:	b.lt	2b768 <mpfr_sin@@Base+0x30c>  // b.tstop
   2b678:	bl	bfd0 <mpfr_sub@plt>
   2b67c:	b	2b76c <mpfr_sin@@Base+0x310>
   2b680:	mov	x19, xzr
   2b684:	mov	x27, x21
   2b688:	ldr	w26, [x27, #8]
   2b68c:	sub	x0, x29, #0x20
   2b690:	mov	x1, x22
   2b694:	bl	c330 <mpfr_set_prec@plt>
   2b698:	sub	x0, x29, #0x20
   2b69c:	mov	w2, #0x4                   	// #4
   2b6a0:	mov	x1, x27
   2b6a4:	bl	c900 <mpfr_cos@plt>
   2b6a8:	sub	x0, x29, #0x20
   2b6ac:	sub	x1, x29, #0x20
   2b6b0:	sub	x2, x29, #0x20
   2b6b4:	mov	w3, #0x2                   	// #2
   2b6b8:	bl	c1b0 <mpfr_mul@plt>
   2b6bc:	sub	x0, x29, #0x20
   2b6c0:	sub	x2, x29, #0x20
   2b6c4:	mov	w1, #0x1                   	// #1
   2b6c8:	mov	w3, #0x1                   	// #1
   2b6cc:	bl	cf30 <mpfr_ui_sub@plt>
   2b6d0:	sub	x0, x29, #0x20
   2b6d4:	sub	x1, x29, #0x20
   2b6d8:	mov	w2, #0x1                   	// #1
   2b6dc:	bl	ce20 <mpfr_sqrt@plt>
   2b6e0:	tbz	w26, #31, 2b6f0 <mpfr_sin@@Base+0x294>
   2b6e4:	ldur	w8, [x29, #-24]
   2b6e8:	neg	w8, w8
   2b6ec:	stur	w8, [x29, #-24]
   2b6f0:	ldur	x8, [x29, #-16]
   2b6f4:	cmp	x8, x25
   2b6f8:	b.eq	2b7f0 <mpfr_sin@@Base+0x394>  // b.none
   2b6fc:	add	x9, x22, x19
   2b700:	add	x10, x28, #0x2
   2b704:	add	x9, x9, x8, lsl #1
   2b708:	cmp	x8, x10
   2b70c:	sub	x27, x9, #0x3
   2b710:	b.lt	2b744 <mpfr_sin@@Base+0x2e8>  // b.tstop
   2b714:	ldur	x8, [x29, #-32]
   2b718:	ldur	x0, [x29, #-8]
   2b71c:	ldr	x3, [sp, #24]
   2b720:	mov	x2, x27
   2b724:	sub	x9, x8, #0x1
   2b728:	add	x8, x8, #0x3e
   2b72c:	cmp	x9, #0x0
   2b730:	csel	x8, x8, x9, lt  // lt = tstop
   2b734:	asr	x8, x8, #6
   2b738:	add	x1, x8, #0x1
   2b73c:	bl	c830 <mpfr_round_p@plt>
   2b740:	cbnz	w0, 2b820 <mpfr_sin@@Base+0x3c4>
   2b744:	ldr	x8, [x23]
   2b748:	ldur	x9, [x29, #-16]
   2b74c:	subs	x8, x8, x27
   2b750:	csel	x8, x8, xzr, gt
   2b754:	cmp	x9, #0x1
   2b758:	add	x8, x8, x22
   2b75c:	cset	w9, eq  // eq = none
   2b760:	lsl	x22, x8, x9
   2b764:	b	2b788 <mpfr_sin@@Base+0x32c>
   2b768:	bl	c640 <mpfr_add@plt>
   2b76c:	ldr	x9, [sp, #64]
   2b770:	cmp	x9, x25
   2b774:	b.eq	2b788 <mpfr_sin@@Base+0x32c>  // b.none
   2b778:	mov	w8, #0x3                   	// #3
   2b77c:	sub	x8, x8, x22
   2b780:	cmp	x9, x8
   2b784:	b.ge	2b7b4 <mpfr_sin@@Base+0x358>  // b.tcont
   2b788:	sub	x8, x28, x22
   2b78c:	sub	x8, x8, #0x103
   2b790:	cmp	x20, x8
   2b794:	b.gt	2b7d4 <mpfr_sin@@Base+0x378>
   2b798:	add	x22, x22, x20
   2b79c:	cmp	x22, #0x0
   2b7a0:	cinc	x8, x22, lt  // lt = tstop
   2b7a4:	asr	x20, x8, #1
   2b7a8:	cmp	x24, #0x2
   2b7ac:	b.lt	2b680 <mpfr_sin@@Base+0x224>  // b.tstop
   2b7b0:	b	2b5d0 <mpfr_sin@@Base+0x174>
   2b7b4:	ldur	x9, [x29, #-16]
   2b7b8:	cmp	x9, x25
   2b7bc:	b.eq	2b788 <mpfr_sin@@Base+0x32c>  // b.none
   2b7c0:	cmp	x9, x8
   2b7c4:	b.lt	2b788 <mpfr_sin@@Base+0x32c>  // b.tstop
   2b7c8:	add	x27, sp, #0x30
   2b7cc:	mov	x19, #0xffffffffffffffff    	// #-1
   2b7d0:	b	2b688 <mpfr_sin@@Base+0x22c>
   2b7d4:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b7d8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b7dc:	mov	w1, #0xb9                  	// #185
   2b7e0:	add	x0, x0, #0x520
   2b7e4:	add	x2, x2, #0x5cf
   2b7e8:	bl	d030 <mpfr_assert_fail@plt>
   2b7ec:	b	2b798 <mpfr_sin@@Base+0x33c>
   2b7f0:	ldr	x8, [x21]
   2b7f4:	cmp	x22, x8
   2b7f8:	csel	x8, x22, x8, gt
   2b7fc:	lsl	x22, x8, #1
   2b800:	b	2b788 <mpfr_sin@@Base+0x32c>
   2b804:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b808:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b80c:	mov	w1, #0x74                  	// #116
   2b810:	add	x0, x0, #0x520
   2b814:	add	x2, x2, #0x58c
   2b818:	bl	d030 <mpfr_assert_fail@plt>
   2b81c:	b	2b5e4 <mpfr_sin@@Base+0x188>
   2b820:	ldr	w25, [sp, #4]
   2b824:	ldur	w3, [x29, #-24]
   2b828:	sub	x1, x29, #0x20
   2b82c:	mov	x0, x23
   2b830:	mov	w2, w25
   2b834:	bl	cb70 <mpfr_set4@plt>
   2b838:	mov	w22, w0
   2b83c:	sub	x0, x29, #0x20
   2b840:	bl	c4f0 <mpfr_clear@plt>
   2b844:	add	x0, sp, #0x30
   2b848:	bl	c4f0 <mpfr_clear@plt>
   2b84c:	ldr	w19, [sp]
   2b850:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b854:	ldr	x1, [x0, #2800]
   2b858:	add	x0, x0, #0xaf0
   2b85c:	blr	x1
   2b860:	ldr	x8, [sp, #40]
   2b864:	str	w19, [x8, x0]
   2b868:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b86c:	ldr	x1, [x0, #2736]
   2b870:	add	x0, x0, #0xab0
   2b874:	blr	x1
   2b878:	ldr	x9, [sp, #16]
   2b87c:	str	x9, [x8, x0]
   2b880:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b884:	ldr	x1, [x0, #2768]
   2b888:	add	x0, x0, #0xad0
   2b88c:	blr	x1
   2b890:	ldr	x10, [sp, #8]
   2b894:	str	x10, [x8, x0]
   2b898:	ldr	x8, [x23, #16]
   2b89c:	cmp	x8, x10
   2b8a0:	b.gt	2b968 <mpfr_sin@@Base+0x50c>
   2b8a4:	cmp	x8, x9
   2b8a8:	b.lt	2b968 <mpfr_sin@@Base+0x50c>  // b.tstop
   2b8ac:	cbz	w22, 2b8cc <mpfr_sin@@Base+0x470>
   2b8b0:	orr	w8, w19, #0x8
   2b8b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b8b8:	ldr	x1, [x0, #2800]
   2b8bc:	add	x0, x0, #0xaf0
   2b8c0:	blr	x1
   2b8c4:	ldr	x9, [sp, #40]
   2b8c8:	str	w8, [x9, x0]
   2b8cc:	mov	w0, w22
   2b8d0:	ldp	x20, x19, [sp, #192]
   2b8d4:	ldp	x22, x21, [sp, #176]
   2b8d8:	ldp	x24, x23, [sp, #160]
   2b8dc:	ldp	x26, x25, [sp, #144]
   2b8e0:	ldp	x28, x27, [sp, #128]
   2b8e4:	ldp	x29, x30, [sp, #112]
   2b8e8:	add	sp, sp, #0xd0
   2b8ec:	ret
   2b8f0:	and	x8, x24, #0xfffffffffffffffe
   2b8f4:	cmp	x8, x28
   2b8f8:	b.ne	2b928 <mpfr_sin@@Base+0x4cc>  // b.any
   2b8fc:	str	x28, [x23, #16]
   2b900:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2b904:	ldr	x1, [x0, #2800]
   2b908:	add	x0, x0, #0xaf0
   2b90c:	blr	x1
   2b910:	mrs	x8, tpidr_el0
   2b914:	ldr	w9, [x8, x0]
   2b918:	mov	w22, wzr
   2b91c:	orr	w9, w9, #0x4
   2b920:	str	w9, [x8, x0]
   2b924:	b	2b8cc <mpfr_sin@@Base+0x470>
   2b928:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2b92c:	str	x8, [x23, #16]
   2b930:	ldr	w8, [x21, #8]
   2b934:	mov	w22, wzr
   2b938:	str	w8, [x23, #8]
   2b93c:	b	2b8cc <mpfr_sin@@Base+0x470>
   2b940:	mov	x0, x23
   2b944:	mov	x1, x21
   2b948:	mov	w3, wzr
   2b94c:	mov	w4, w25
   2b950:	bl	ca10 <mpfr_round_near_x@plt>
   2b954:	cmp	w0, #0x0
   2b958:	mov	w22, w0
   2b95c:	cset	w8, ne  // ne = any
   2b960:	cbnz	w0, 2b4cc <mpfr_sin@@Base+0x70>
   2b964:	b	2b4c8 <mpfr_sin@@Base+0x6c>
   2b968:	mov	x0, x23
   2b96c:	mov	w1, w22
   2b970:	mov	w2, w25
   2b974:	bl	d020 <mpfr_check_range@plt>
   2b978:	mov	w22, w0
   2b97c:	b	2b8cc <mpfr_sin@@Base+0x470>
   2b980:	mov	x8, xzr
   2b984:	b	2b578 <mpfr_sin@@Base+0x11c>
   2b988:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b98c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b990:	add	x0, x0, #0x520
   2b994:	add	x2, x2, #0x580
   2b998:	mov	w1, #0x55                  	// #85
   2b99c:	bl	d030 <mpfr_assert_fail@plt>
   2b9a0:	b	2b56c <mpfr_sin@@Base+0x110>
   2b9a4:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b9a8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2b9ac:	add	x0, x0, #0x520
   2b9b0:	add	x2, x2, #0x61d
   2b9b4:	mov	w1, #0x60                  	// #96
   2b9b8:	bl	d030 <mpfr_assert_fail@plt>
   2b9bc:	b	2b594 <mpfr_sin@@Base+0x138>
   2b9c0:	stp	x29, x30, [sp, #-16]!
   2b9c4:	mov	w3, w2
   2b9c8:	mov	x2, x1
   2b9cc:	mov	x1, xzr
   2b9d0:	mov	x29, sp
   2b9d4:	bl	c490 <mpfr_sincos_fast@plt>
   2b9d8:	and	w8, w0, #0x3
   2b9dc:	cmp	w8, #0x2
   2b9e0:	csinv	w0, w8, wzr, ne  // ne = any
   2b9e4:	ldp	x29, x30, [sp], #16
   2b9e8:	ret

000000000002b9ec <mpfr_tan@@Base>:
   2b9ec:	sub	sp, sp, #0x150
   2b9f0:	stp	x29, x30, [sp, #240]
   2b9f4:	stp	x28, x27, [sp, #256]
   2b9f8:	stp	x26, x25, [sp, #272]
   2b9fc:	stp	x24, x23, [sp, #288]
   2ba00:	stp	x22, x21, [sp, #304]
   2ba04:	stp	x20, x19, [sp, #320]
   2ba08:	ldr	x8, [x1, #16]
   2ba0c:	mov	x25, #0xfffffffffffffeff    	// #-257
   2ba10:	movk	x25, #0x7fff, lsl #48
   2ba14:	add	x9, x25, #0x105
   2ba18:	mov	x21, x1
   2ba1c:	cmp	x8, x9
   2ba20:	mov	x19, x0
   2ba24:	add	x29, sp, #0xf0
   2ba28:	b.lt	2bd3c <mpfr_tan@@Base+0x350>  // b.tstop
   2ba2c:	mov	w20, w2
   2ba30:	tbnz	x8, #63, 2ba40 <mpfr_tan@@Base+0x54>
   2ba34:	mov	w8, wzr
   2ba38:	cbnz	w8, 2bd18 <mpfr_tan@@Base+0x32c>
   2ba3c:	b	2ba64 <mpfr_tan@@Base+0x78>
   2ba40:	ldr	x9, [x19]
   2ba44:	mov	w10, #0x1                   	// #1
   2ba48:	sub	x2, x10, x8, lsl #1
   2ba4c:	add	x8, x9, #0x1
   2ba50:	cmp	x2, x8
   2ba54:	b.hi	2bd90 <mpfr_tan@@Base+0x3a4>  // b.pmore
   2ba58:	mov	w8, wzr
   2ba5c:	cbz	w8, 2ba34 <mpfr_tan@@Base+0x48>
   2ba60:	cbnz	w8, 2bd18 <mpfr_tan@@Base+0x32c>
   2ba64:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ba68:	ldr	x1, [x0, #2800]
   2ba6c:	add	x0, x0, #0xaf0
   2ba70:	blr	x1
   2ba74:	mrs	x26, tpidr_el0
   2ba78:	ldr	w8, [x26, x0]
   2ba7c:	str	w8, [sp, #20]
   2ba80:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ba84:	ldr	x1, [x0, #2736]
   2ba88:	add	x0, x0, #0xab0
   2ba8c:	blr	x1
   2ba90:	ldr	x28, [x26, x0]
   2ba94:	mov	x8, x0
   2ba98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ba9c:	ldr	x1, [x0, #2768]
   2baa0:	add	x0, x0, #0xad0
   2baa4:	blr	x1
   2baa8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2baac:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2bab0:	ldr	x24, [x26, x0]
   2bab4:	str	x9, [x26, x8]
   2bab8:	str	x10, [x26, x0]
   2babc:	ldr	x23, [x19]
   2bac0:	subs	x22, x23, #0x1
   2bac4:	b.eq	2bdb8 <mpfr_tan@@Base+0x3cc>  // b.none
   2bac8:	b.le	2bdd8 <mpfr_tan@@Base+0x3ec>
   2bacc:	clz	x8, x22
   2bad0:	mov	w9, #0x40                  	// #64
   2bad4:	sub	x8, x9, x8
   2bad8:	add	x8, x8, x23
   2badc:	sub	x9, x25, #0xd
   2bae0:	cmp	x8, x9
   2bae4:	b.gt	2bdf4 <mpfr_tan@@Base+0x408>
   2bae8:	add	x9, x8, #0xc
   2baec:	add	x10, x8, #0x4b
   2baf0:	cmp	x9, #0x0
   2baf4:	csel	x9, x10, x9, lt  // lt = tstop
   2baf8:	asr	x9, x9, #6
   2bafc:	add	x22, x8, #0xd
   2bb00:	cmp	x8, #0x1f4
   2bb04:	add	x27, x9, #0x1
   2bb08:	b.lt	2bb20 <mpfr_tan@@Base+0x134>  // b.tstop
   2bb0c:	lsl	x0, x27, #4
   2bb10:	str	x0, [sp, #24]
   2bb14:	bl	d1f0 <mpfr_allocate_func@plt>
   2bb18:	str	x0, [sp, #32]
   2bb1c:	b	2bb2c <mpfr_tan@@Base+0x140>
   2bb20:	add	x8, sp, #0x18
   2bb24:	add	x8, x8, #0x10
   2bb28:	stp	xzr, x8, [sp, #24]
   2bb2c:	ldr	x8, [sp, #32]
   2bb30:	cmp	w20, #0x0
   2bb34:	mov	w9, #0x1                   	// #1
   2bb38:	mov	w10, #0x40                  	// #64
   2bb3c:	stur	x8, [x29, #-16]
   2bb40:	add	x8, x8, x27, lsl #3
   2bb44:	adrp	x27, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2bb48:	cinc	x23, x23, eq  // eq = none
   2bb4c:	add	x27, x27, #0x5cf
   2bb50:	str	x10, [sp, #8]
   2bb54:	stur	w9, [x29, #-32]
   2bb58:	stur	x22, [x29, #-72]
   2bb5c:	stp	x8, x22, [x29, #-48]
   2bb60:	sub	x0, x29, #0x28
   2bb64:	sub	x1, x29, #0x48
   2bb68:	mov	x2, x21
   2bb6c:	mov	w3, wzr
   2bb70:	stur	w9, [x29, #-64]
   2bb74:	bl	d140 <mpfr_sin_cos@plt>
   2bb78:	sub	x0, x29, #0x48
   2bb7c:	sub	x1, x29, #0x28
   2bb80:	sub	x2, x29, #0x48
   2bb84:	mov	w3, wzr
   2bb88:	bl	caf0 <mpfr_div@plt>
   2bb8c:	ldur	x8, [x29, #-56]
   2bb90:	add	x9, x25, #0x105
   2bb94:	cmp	x8, x9
   2bb98:	b.lt	2bbcc <mpfr_tan@@Base+0x1e0>  // b.tstop
   2bb9c:	ldur	x8, [x29, #-72]
   2bba0:	ldur	x0, [x29, #-48]
   2bba4:	sub	x2, x22, #0x2
   2bba8:	mov	x3, x23
   2bbac:	sub	x9, x8, #0x1
   2bbb0:	add	x8, x8, #0x3e
   2bbb4:	cmp	x9, #0x0
   2bbb8:	csel	x8, x8, x9, lt  // lt = tstop
   2bbbc:	asr	x8, x8, #6
   2bbc0:	add	x1, x8, #0x1
   2bbc4:	bl	c830 <mpfr_round_p@plt>
   2bbc8:	cbnz	w0, 2bc80 <mpfr_tan@@Base+0x294>
   2bbcc:	ldr	x9, [sp, #8]
   2bbd0:	sub	x8, x25, x22
   2bbd4:	cmp	x9, x8
   2bbd8:	mov	x8, x9
   2bbdc:	b.gt	2bc64 <mpfr_tan@@Base+0x278>
   2bbe0:	add	x22, x22, x8
   2bbe4:	cmp	x22, #0x0
   2bbe8:	cinc	x8, x22, lt  // lt = tstop
   2bbec:	cmp	x22, x25
   2bbf0:	b.gt	2bdf4 <mpfr_tan@@Base+0x408>
   2bbf4:	asr	x8, x8, #1
   2bbf8:	str	x8, [sp, #8]
   2bbfc:	sub	x8, x22, #0x1
   2bc00:	add	x9, x22, #0x3e
   2bc04:	cmp	x8, #0x0
   2bc08:	ldr	x1, [sp, #24]
   2bc0c:	csel	x8, x9, x8, lt  // lt = tstop
   2bc10:	asr	x8, x8, #6
   2bc14:	add	x8, x8, #0x1
   2bc18:	lsl	x2, x8, #4
   2bc1c:	str	x8, [sp]
   2bc20:	str	x2, [sp, #24]
   2bc24:	cbz	x1, 2bc34 <mpfr_tan@@Base+0x248>
   2bc28:	ldr	x0, [sp, #32]
   2bc2c:	bl	c660 <mpfr_reallocate_func@plt>
   2bc30:	b	2bc3c <mpfr_tan@@Base+0x250>
   2bc34:	mov	x0, x2
   2bc38:	bl	d1f0 <mpfr_allocate_func@plt>
   2bc3c:	ldr	x10, [sp]
   2bc40:	mov	x8, x0
   2bc44:	mov	w9, #0x1                   	// #1
   2bc48:	stur	x8, [x29, #-16]
   2bc4c:	add	x8, x8, x10, lsl #3
   2bc50:	str	x0, [sp, #32]
   2bc54:	stur	w9, [x29, #-32]
   2bc58:	stur	x22, [x29, #-72]
   2bc5c:	stp	x8, x22, [x29, #-48]
   2bc60:	b	2bb60 <mpfr_tan@@Base+0x174>
   2bc64:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2bc68:	mov	w1, #0x50                  	// #80
   2bc6c:	add	x0, x0, #0x421
   2bc70:	mov	x2, x27
   2bc74:	bl	d030 <mpfr_assert_fail@plt>
   2bc78:	ldr	x8, [sp, #8]
   2bc7c:	b	2bbe0 <mpfr_tan@@Base+0x1f4>
   2bc80:	ldur	w3, [x29, #-64]
   2bc84:	sub	x1, x29, #0x48
   2bc88:	mov	x0, x19
   2bc8c:	mov	w2, w20
   2bc90:	bl	cb70 <mpfr_set4@plt>
   2bc94:	ldr	x1, [sp, #24]
   2bc98:	mov	w22, w0
   2bc9c:	cbz	x1, 2bca8 <mpfr_tan@@Base+0x2bc>
   2bca0:	ldr	x0, [sp, #32]
   2bca4:	bl	d120 <mpfr_free_func@plt>
   2bca8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2bcac:	ldr	x1, [x0, #2800]
   2bcb0:	add	x0, x0, #0xaf0
   2bcb4:	blr	x1
   2bcb8:	ldr	w9, [sp, #20]
   2bcbc:	str	w9, [x26, x0]
   2bcc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2bcc4:	ldr	x1, [x0, #2736]
   2bcc8:	add	x0, x0, #0xab0
   2bccc:	blr	x1
   2bcd0:	str	x28, [x26, x0]
   2bcd4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2bcd8:	ldr	x1, [x0, #2768]
   2bcdc:	add	x0, x0, #0xad0
   2bce0:	blr	x1
   2bce4:	str	x24, [x26, x0]
   2bce8:	ldr	x8, [x19, #16]
   2bcec:	cmp	x8, x24
   2bcf0:	b.gt	2bdc0 <mpfr_tan@@Base+0x3d4>
   2bcf4:	cmp	x8, x28
   2bcf8:	b.lt	2bdc0 <mpfr_tan@@Base+0x3d4>  // b.tstop
   2bcfc:	cbz	w22, 2bd18 <mpfr_tan@@Base+0x32c>
   2bd00:	orr	w8, w9, #0x8
   2bd04:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2bd08:	ldr	x1, [x0, #2800]
   2bd0c:	add	x0, x0, #0xaf0
   2bd10:	blr	x1
   2bd14:	str	w8, [x26, x0]
   2bd18:	mov	w0, w22
   2bd1c:	ldp	x20, x19, [sp, #320]
   2bd20:	ldp	x22, x21, [sp, #304]
   2bd24:	ldp	x24, x23, [sp, #288]
   2bd28:	ldp	x26, x25, [sp, #272]
   2bd2c:	ldp	x28, x27, [sp, #256]
   2bd30:	ldp	x29, x30, [sp, #240]
   2bd34:	add	sp, sp, #0x150
   2bd38:	ret
   2bd3c:	and	x9, x8, #0xfffffffffffffffe
   2bd40:	add	x8, x25, #0x103
   2bd44:	cmp	x9, x8
   2bd48:	b.ne	2bd78 <mpfr_tan@@Base+0x38c>  // b.any
   2bd4c:	str	x8, [x19, #16]
   2bd50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2bd54:	ldr	x1, [x0, #2800]
   2bd58:	add	x0, x0, #0xaf0
   2bd5c:	blr	x1
   2bd60:	mrs	x8, tpidr_el0
   2bd64:	ldr	w9, [x8, x0]
   2bd68:	mov	w22, wzr
   2bd6c:	orr	w9, w9, #0x4
   2bd70:	str	w9, [x8, x0]
   2bd74:	b	2bd18 <mpfr_tan@@Base+0x32c>
   2bd78:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2bd7c:	str	x8, [x19, #16]
   2bd80:	ldr	w8, [x21, #8]
   2bd84:	mov	w22, wzr
   2bd88:	str	w8, [x19, #8]
   2bd8c:	b	2bd18 <mpfr_tan@@Base+0x32c>
   2bd90:	mov	w3, #0x1                   	// #1
   2bd94:	mov	x0, x19
   2bd98:	mov	x1, x21
   2bd9c:	mov	w4, w20
   2bda0:	bl	ca10 <mpfr_round_near_x@plt>
   2bda4:	cmp	w0, #0x0
   2bda8:	mov	w22, w0
   2bdac:	cset	w8, ne  // ne = any
   2bdb0:	cbnz	w0, 2ba5c <mpfr_tan@@Base+0x70>
   2bdb4:	b	2ba58 <mpfr_tan@@Base+0x6c>
   2bdb8:	mov	x8, xzr
   2bdbc:	b	2bad8 <mpfr_tan@@Base+0xec>
   2bdc0:	mov	x0, x19
   2bdc4:	mov	w1, w22
   2bdc8:	mov	w2, w20
   2bdcc:	bl	d020 <mpfr_check_range@plt>
   2bdd0:	mov	w22, w0
   2bdd4:	b	2bd18 <mpfr_tan@@Base+0x32c>
   2bdd8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2bddc:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2bde0:	add	x0, x0, #0x421
   2bde4:	add	x2, x2, #0x580
   2bde8:	mov	w1, #0x42                  	// #66
   2bdec:	bl	d030 <mpfr_assert_fail@plt>
   2bdf0:	b	2bacc <mpfr_tan@@Base+0xe0>
   2bdf4:	bl	cdd0 <mpfr_abort_prec_max@plt>

000000000002bdf8 <mpfr_fma@@Base>:
   2bdf8:	stp	x29, x30, [sp, #-96]!
   2bdfc:	stp	x28, x27, [sp, #16]
   2be00:	stp	x26, x25, [sp, #32]
   2be04:	stp	x24, x23, [sp, #48]
   2be08:	stp	x22, x21, [sp, #64]
   2be0c:	stp	x20, x19, [sp, #80]
   2be10:	mov	x29, sp
   2be14:	sub	sp, sp, #0x110
   2be18:	ldr	x11, [x1, #16]
   2be1c:	mov	x26, #0x4                   	// #4
   2be20:	movk	x26, #0x8000, lsl #48
   2be24:	mov	w24, w4
   2be28:	mov	x21, x3
   2be2c:	mov	x22, x2
   2be30:	mov	x23, x1
   2be34:	cmp	x11, x26
   2be38:	b.lt	2c228 <mpfr_fma@@Base+0x430>  // b.tstop
   2be3c:	ldr	x12, [x22, #16]
   2be40:	cmp	x12, x26
   2be44:	b.lt	2c228 <mpfr_fma@@Base+0x430>  // b.tstop
   2be48:	ldr	x9, [x21, #16]
   2be4c:	cmp	x9, x26
   2be50:	b.lt	2c228 <mpfr_fma@@Base+0x430>  // b.tstop
   2be54:	ldr	x8, [x23]
   2be58:	ldr	x10, [x22]
   2be5c:	stur	x0, [x29, #-256]
   2be60:	add	x27, x12, x11
   2be64:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2be68:	ldr	x1, [x0, #2768]
   2be6c:	add	x0, x0, #0xad0
   2be70:	blr	x1
   2be74:	mrs	x25, tpidr_el0
   2be78:	ldr	x11, [x25, x0]
   2be7c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2be80:	ldr	x1, [x0, #2736]
   2be84:	add	x0, x0, #0xab0
   2be88:	blr	x1
   2be8c:	cmp	x8, x10
   2be90:	b.ne	2c010 <mpfr_fma@@Base+0x218>  // b.any
   2be94:	cmp	x27, x11
   2be98:	b.gt	2c010 <mpfr_fma@@Base+0x218>
   2be9c:	ldr	x11, [x25, x0]
   2bea0:	cmp	x27, x11
   2bea4:	b.le	2c010 <mpfr_fma@@Base+0x218>
   2bea8:	cmp	x8, #0x3f
   2beac:	b.gt	2bf38 <mpfr_fma@@Base+0x140>
   2beb0:	ldr	x11, [x21]
   2beb4:	cmp	x11, x8
   2beb8:	b.ne	2bf38 <mpfr_fma@@Base+0x140>  // b.any
   2bebc:	ldur	x11, [x29, #-256]
   2bec0:	ldr	x11, [x11]
   2bec4:	cmp	x11, x8
   2bec8:	b.ne	2bf38 <mpfr_fma@@Base+0x140>  // b.any
   2becc:	ldr	x10, [x23, #24]
   2bed0:	ldr	x11, [x22, #24]
   2bed4:	lsl	x12, x8, #1
   2bed8:	sub	x13, x29, #0xf8
   2bedc:	ldr	x14, [x10]
   2bee0:	ldr	x11, [x11]
   2bee4:	sub	x10, x29, #0xc8
   2bee8:	stp	x9, x10, [x29, #-168]
   2beec:	umulh	x10, x14, x11
   2bef0:	mul	x11, x11, x14
   2bef4:	stur	x12, [x29, #-40]
   2bef8:	stur	x13, [x29, #-16]
   2befc:	stur	x12, [x29, #-184]
   2bf00:	stp	x11, x10, [x29, #-248]
   2bf04:	ldr	w12, [x23, #8]
   2bf08:	ldr	w13, [x22, #8]
   2bf0c:	cmp	x8, #0x20
   2bf10:	mul	w12, w13, w12
   2bf14:	stur	w12, [x29, #-32]
   2bf18:	ldr	w12, [x21, #8]
   2bf1c:	stur	w12, [x29, #-176]
   2bf20:	b.gt	2c1b4 <mpfr_fma@@Base+0x3bc>
   2bf24:	tbnz	x10, #63, 2c1dc <mpfr_fma@@Base+0x3e4>
   2bf28:	lsl	x8, x10, #1
   2bf2c:	stur	x8, [x29, #-248]
   2bf30:	sub	x27, x27, #0x1
   2bf34:	b	2c1e0 <mpfr_fma@@Base+0x3e8>
   2bf38:	sub	x9, x8, #0x1
   2bf3c:	add	x11, x8, #0x3e
   2bf40:	mov	w12, #0x1400                	// #5120
   2bf44:	cmp	x9, #0x0
   2bf48:	csel	x9, x11, x9, lt  // lt = tstop
   2bf4c:	cmp	x8, x12
   2bf50:	b.gt	2c010 <mpfr_fma@@Base+0x218>
   2bf54:	asr	x8, x9, #6
   2bf58:	add	x3, x8, #0x1
   2bf5c:	lsl	x1, x3, #4
   2bf60:	mov	w20, w24
   2bf64:	lsl	x24, x3, #1
   2bf68:	cmp	x1, #0x4, lsl #12
   2bf6c:	stur	xzr, [x29, #-184]
   2bf70:	b.hi	2c440 <mpfr_fma@@Base+0x648>  // b.pmore
   2bf74:	add	x9, x1, #0xf
   2bf78:	mov	x8, sp
   2bf7c:	and	x9, x9, #0xfffffffffffffff0
   2bf80:	sub	x25, x8, x9
   2bf84:	mov	sp, x25
   2bf88:	lsl	x8, x3, #7
   2bf8c:	mov	w9, #0x1                   	// #1
   2bf90:	stur	x25, [x29, #-16]
   2bf94:	stur	x8, [x29, #-40]
   2bf98:	stur	w9, [x29, #-32]
   2bf9c:	ldr	x1, [x23, #24]
   2bfa0:	ldr	x2, [x22, #24]
   2bfa4:	mov	x0, x25
   2bfa8:	bl	c940 <__gmpn_mul_n@plt>
   2bfac:	add	x8, x25, x24, lsl #3
   2bfb0:	ldur	x8, [x8, #-8]
   2bfb4:	tbnz	x8, #63, 2bfd0 <mpfr_fma@@Base+0x1d8>
   2bfb8:	mov	w3, #0x1                   	// #1
   2bfbc:	mov	x0, x25
   2bfc0:	mov	x1, x25
   2bfc4:	mov	x2, x24
   2bfc8:	bl	c120 <__gmpn_lshift@plt>
   2bfcc:	sub	x27, x27, #0x1
   2bfd0:	stur	x27, [x29, #-24]
   2bfd4:	ldr	w8, [x23, #8]
   2bfd8:	ldr	w9, [x22, #8]
   2bfdc:	ldur	x0, [x29, #-256]
   2bfe0:	sub	x1, x29, #0x28
   2bfe4:	mov	x2, x21
   2bfe8:	mul	w8, w9, w8
   2bfec:	mov	w3, w20
   2bff0:	stur	w8, [x29, #-32]
   2bff4:	bl	c640 <mpfr_add@plt>
   2bff8:	ldur	x8, [x29, #-184]
   2bffc:	mov	w24, w0
   2c000:	cbz	x8, 2c190 <mpfr_fma@@Base+0x398>
   2c004:	mov	x0, x8
   2c008:	bl	c8d0 <mpfr_tmp_free@plt>
   2c00c:	b	2c190 <mpfr_fma@@Base+0x398>
   2c010:	add	x19, x10, x8
   2c014:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   2c018:	cmp	x19, x8
   2c01c:	b.ge	2c240 <mpfr_fma@@Base+0x448>  // b.tcont
   2c020:	sub	x8, x26, #0x105
   2c024:	cmp	x19, x8
   2c028:	b.gt	2c494 <mpfr_fma@@Base+0x69c>
   2c02c:	cmp	x19, #0x401
   2c030:	b.lt	2c060 <mpfr_fma@@Base+0x268>  // b.tstop
   2c034:	sub	x8, x19, #0x1
   2c038:	add	x9, x19, #0x3e
   2c03c:	cmp	x8, #0x0
   2c040:	csel	x8, x9, x8, lt  // lt = tstop
   2c044:	asr	x8, x8, #6
   2c048:	lsl	x8, x8, #3
   2c04c:	add	x0, x8, #0x8
   2c050:	stur	x0, [x29, #-184]
   2c054:	bl	d1f0 <mpfr_allocate_func@plt>
   2c058:	stur	x0, [x29, #-176]
   2c05c:	b	2c06c <mpfr_fma@@Base+0x274>
   2c060:	sub	x8, x29, #0xb8
   2c064:	add	x8, x8, #0x10
   2c068:	stp	xzr, x8, [x29, #-184]
   2c06c:	ldur	x8, [x29, #-176]
   2c070:	mov	w9, #0x1                   	// #1
   2c074:	stur	x19, [x29, #-40]
   2c078:	stur	w9, [x29, #-32]
   2c07c:	stur	x8, [x29, #-16]
   2c080:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c084:	ldr	x1, [x0, #2800]
   2c088:	add	x0, x0, #0xaf0
   2c08c:	blr	x1
   2c090:	ldr	w20, [x25, x0]
   2c094:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c098:	ldr	x1, [x0, #2736]
   2c09c:	add	x0, x0, #0xab0
   2c0a0:	blr	x1
   2c0a4:	ldr	x28, [x25, x0]
   2c0a8:	mov	x8, x0
   2c0ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c0b0:	ldr	x1, [x0, #2768]
   2c0b4:	add	x0, x0, #0xad0
   2c0b8:	blr	x1
   2c0bc:	ldr	x19, [x25, x0]
   2c0c0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2c0c4:	str	x9, [x25, x8]
   2c0c8:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2c0cc:	str	x8, [x25, x0]
   2c0d0:	sub	x0, x29, #0x28
   2c0d4:	mov	x1, x23
   2c0d8:	mov	x2, x22
   2c0dc:	mov	w3, wzr
   2c0e0:	bl	c1b0 <mpfr_mul@plt>
   2c0e4:	sub	x8, x29, #0x4
   2c0e8:	stur	w24, [x8, #-256]
   2c0ec:	cbnz	w0, 2c25c <mpfr_fma@@Base+0x464>
   2c0f0:	ldur	x22, [x29, #-256]
   2c0f4:	sub	x1, x29, #0x28
   2c0f8:	mov	x2, x21
   2c0fc:	mov	w3, w24
   2c100:	mov	x0, x22
   2c104:	bl	c640 <mpfr_add@plt>
   2c108:	ldur	x1, [x29, #-184]
   2c10c:	mov	w24, w0
   2c110:	cbz	x1, 2c11c <mpfr_fma@@Base+0x324>
   2c114:	ldur	x0, [x29, #-176]
   2c118:	bl	d120 <mpfr_free_func@plt>
   2c11c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c120:	ldr	x1, [x0, #2800]
   2c124:	add	x0, x0, #0xaf0
   2c128:	blr	x1
   2c12c:	ldr	w8, [x25, x0]
   2c130:	orr	w8, w8, w20
   2c134:	str	w8, [x25, x0]
   2c138:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c13c:	ldr	x1, [x0, #2736]
   2c140:	add	x0, x0, #0xab0
   2c144:	blr	x1
   2c148:	str	x28, [x25, x0]
   2c14c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c150:	ldr	x1, [x0, #2768]
   2c154:	add	x0, x0, #0xad0
   2c158:	blr	x1
   2c15c:	str	x19, [x25, x0]
   2c160:	ldr	x9, [x22, #16]
   2c164:	cmp	x9, x19
   2c168:	b.gt	2c2b8 <mpfr_fma@@Base+0x4c0>
   2c16c:	cmp	x9, x28
   2c170:	b.lt	2c2b8 <mpfr_fma@@Base+0x4c0>  // b.tstop
   2c174:	cbz	w24, 2c190 <mpfr_fma@@Base+0x398>
   2c178:	orr	w8, w8, #0x8
   2c17c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c180:	ldr	x1, [x0, #2800]
   2c184:	add	x0, x0, #0xaf0
   2c188:	blr	x1
   2c18c:	str	w8, [x25, x0]
   2c190:	mov	w0, w24
   2c194:	mov	sp, x29
   2c198:	ldp	x20, x19, [sp, #80]
   2c19c:	ldp	x22, x21, [sp, #64]
   2c1a0:	ldp	x24, x23, [sp, #48]
   2c1a4:	ldp	x26, x25, [sp, #32]
   2c1a8:	ldp	x28, x27, [sp, #16]
   2c1ac:	ldp	x29, x30, [sp], #96
   2c1b0:	ret
   2c1b4:	ldr	x8, [x21, #24]
   2c1b8:	ldr	x8, [x8]
   2c1bc:	stp	xzr, x8, [x29, #-200]
   2c1c0:	tbnz	x10, #63, 2c1f4 <mpfr_fma@@Base+0x3fc>
   2c1c4:	extr	x8, x10, x11, #63
   2c1c8:	lsl	x9, x11, #1
   2c1cc:	sub	x10, x27, #0x1
   2c1d0:	stp	x9, x8, [x29, #-248]
   2c1d4:	stur	x10, [x29, #-24]
   2c1d8:	b	2c1f8 <mpfr_fma@@Base+0x400>
   2c1dc:	stur	x10, [x29, #-248]
   2c1e0:	stur	x27, [x29, #-24]
   2c1e4:	ldr	x8, [x21, #24]
   2c1e8:	ldr	x8, [x8]
   2c1ec:	stur	x8, [x29, #-200]
   2c1f0:	b	2c1f8 <mpfr_fma@@Base+0x400>
   2c1f4:	stur	x27, [x29, #-24]
   2c1f8:	sub	x0, x29, #0x28
   2c1fc:	sub	x1, x29, #0x28
   2c200:	sub	x2, x29, #0xb8
   2c204:	mov	w3, w24
   2c208:	bl	c640 <mpfr_add@plt>
   2c20c:	mov	w3, w0
   2c210:	ldur	x0, [x29, #-256]
   2c214:	sub	x1, x29, #0x28
   2c218:	mov	w2, w24
   2c21c:	bl	cfd0 <mpfr_set_1_2@plt>
   2c220:	mov	w24, w0
   2c224:	b	2c190 <mpfr_fma@@Base+0x398>
   2c228:	mov	x1, x23
   2c22c:	mov	x2, x22
   2c230:	mov	x3, x21
   2c234:	mov	w4, w24
   2c238:	bl	2c498 <mpfr_fma@@Base+0x6a0>
   2c23c:	b	2c220 <mpfr_fma@@Base+0x428>
   2c240:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2c244:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2c248:	add	x0, x0, #0x65c
   2c24c:	add	x2, x2, #0x662
   2c250:	mov	w1, #0xd5                  	// #213
   2c254:	bl	d030 <mpfr_assert_fail@plt>
   2c258:	b	2c020 <mpfr_fma@@Base+0x228>
   2c25c:	ldur	x8, [x29, #-24]
   2c260:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2c264:	cmp	x8, x9
   2c268:	b.ne	2c2d0 <mpfr_fma@@Base+0x4d8>  // b.any
   2c26c:	ldur	x1, [x29, #-184]
   2c270:	ldur	w24, [x29, #-32]
   2c274:	cbz	x1, 2c280 <mpfr_fma@@Base+0x488>
   2c278:	ldur	x0, [x29, #-176]
   2c27c:	bl	d120 <mpfr_free_func@plt>
   2c280:	ldr	w8, [x21, #8]
   2c284:	cmp	w24, w8
   2c288:	b.eq	2c320 <mpfr_fma@@Base+0x528>  // b.none
   2c28c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c290:	ldr	x1, [x0, #2768]
   2c294:	add	x0, x0, #0xad0
   2c298:	blr	x1
   2c29c:	ldr	x8, [x25, x0]
   2c2a0:	add	x8, x8, #0x3
   2c2a4:	cmp	x27, x8
   2c2a8:	b.ge	2c320 <mpfr_fma@@Base+0x528>  // b.tcont
   2c2ac:	mov	w8, #0x1                   	// #1
   2c2b0:	tbz	w8, #0, 2c190 <mpfr_fma@@Base+0x398>
   2c2b4:	b	2c37c <mpfr_fma@@Base+0x584>
   2c2b8:	sub	x8, x29, #0x4
   2c2bc:	ldur	w2, [x8, #-256]
   2c2c0:	mov	x0, x22
   2c2c4:	mov	w1, w24
   2c2c8:	bl	d020 <mpfr_check_range@plt>
   2c2cc:	b	2c220 <mpfr_fma@@Base+0x428>
   2c2d0:	ldr	x8, [x21, #16]
   2c2d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c2d8:	ldr	x1, [x0, #2736]
   2c2dc:	add	x0, x0, #0xab0
   2c2e0:	blr	x1
   2c2e4:	ldur	x9, [x29, #-256]
   2c2e8:	ldr	x10, [x21]
   2c2ec:	ldr	x1, [x25, x0]
   2c2f0:	ldr	x9, [x9]
   2c2f4:	sub	x8, x8, x1
   2c2f8:	add	x11, x9, #0x1
   2c2fc:	cmp	x10, x11
   2c300:	csinc	x9, x10, x9, gt
   2c304:	cmp	x8, x9
   2c308:	b.ge	2c458 <mpfr_fma@@Base+0x660>  // b.tcont
   2c30c:	ldur	x1, [x29, #-184]
   2c310:	cbz	x1, 2c37c <mpfr_fma@@Base+0x584>
   2c314:	ldur	x0, [x29, #-176]
   2c318:	bl	d120 <mpfr_free_func@plt>
   2c31c:	b	2c37c <mpfr_fma@@Base+0x584>
   2c320:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c324:	ldr	x1, [x0, #2800]
   2c328:	add	x0, x0, #0xaf0
   2c32c:	blr	x1
   2c330:	str	w20, [x25, x0]
   2c334:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c338:	ldr	x1, [x0, #2736]
   2c33c:	add	x0, x0, #0xab0
   2c340:	blr	x1
   2c344:	str	x28, [x25, x0]
   2c348:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c34c:	ldr	x1, [x0, #2768]
   2c350:	add	x0, x0, #0xad0
   2c354:	blr	x1
   2c358:	sub	x8, x29, #0x4
   2c35c:	str	x19, [x25, x0]
   2c360:	ldur	x0, [x29, #-256]
   2c364:	ldur	w1, [x8, #-256]
   2c368:	mov	w2, w24
   2c36c:	bl	c3a0 <mpfr_overflow@plt>
   2c370:	mov	w24, w0
   2c374:	mov	w8, wzr
   2c378:	tbz	wzr, #0, 2c190 <mpfr_fma@@Base+0x398>
   2c37c:	stur	xzr, [x29, #-200]
   2c380:	ldr	x8, [x23]
   2c384:	ldr	x9, [x22]
   2c388:	sub	x10, x8, #0x1
   2c38c:	add	x8, x8, #0x3e
   2c390:	cmp	x10, #0x0
   2c394:	csel	x8, x8, x10, lt  // lt = tstop
   2c398:	sub	x10, x9, #0x1
   2c39c:	add	x9, x9, #0x3e
   2c3a0:	cmp	x10, #0x0
   2c3a4:	asr	x8, x8, #6
   2c3a8:	csel	x9, x9, x10, lt  // lt = tstop
   2c3ac:	add	x8, x8, x9, asr #6
   2c3b0:	add	x24, x8, #0x2
   2c3b4:	lsl	x1, x24, #3
   2c3b8:	cmp	x1, #0x4, lsl #12
   2c3bc:	b.hi	2c480 <mpfr_fma@@Base+0x688>  // b.pmore
   2c3c0:	add	x9, x1, #0xf
   2c3c4:	mov	x8, sp
   2c3c8:	and	x9, x9, #0xfffffffffffffff0
   2c3cc:	sub	x0, x8, x9
   2c3d0:	mov	sp, x0
   2c3d4:	lsl	x8, x24, #6
   2c3d8:	stur	x0, [x29, #-224]
   2c3dc:	mov	w9, #0x1                   	// #1
   2c3e0:	sub	x0, x29, #0xf8
   2c3e4:	mov	x1, x23
   2c3e8:	mov	x2, x22
   2c3ec:	stur	x8, [x29, #-248]
   2c3f0:	stur	w9, [x29, #-240]
   2c3f4:	sub	x27, x29, #0xf8
   2c3f8:	bl	c3e0 <mpfr_ubf_mul_exact@plt>
   2c3fc:	bl	c720 <mpfr_clear_flags@plt>
   2c400:	sub	x8, x29, #0x4
   2c404:	ldur	x0, [x29, #-256]
   2c408:	ldur	w3, [x8, #-256]
   2c40c:	sub	x1, x29, #0xf8
   2c410:	mov	x2, x21
   2c414:	bl	c640 <mpfr_add@plt>
   2c418:	ldur	x8, [x29, #-232]
   2c41c:	mov	w24, w0
   2c420:	cmp	x8, x26
   2c424:	b.ne	2c430 <mpfr_fma@@Base+0x638>  // b.any
   2c428:	add	x0, x27, #0x20
   2c42c:	bl	c610 <mpfr_mpz_clear@plt>
   2c430:	ldur	x0, [x29, #-200]
   2c434:	cbnz	x0, 2c48c <mpfr_fma@@Base+0x694>
   2c438:	ldur	x22, [x29, #-256]
   2c43c:	b	2c11c <mpfr_fma@@Base+0x324>
   2c440:	sub	x0, x29, #0xb8
   2c444:	mov	x19, x3
   2c448:	bl	c220 <mpfr_tmp_allocate@plt>
   2c44c:	mov	x3, x19
   2c450:	mov	x25, x0
   2c454:	b	2bf88 <mpfr_fma@@Base+0x190>
   2c458:	mov	w8, #0x1                   	// #1
   2c45c:	sub	x0, x29, #0x28
   2c460:	stur	x8, [x29, #-40]
   2c464:	bl	c770 <mpfr_setmin@plt>
   2c468:	ldr	w8, [x23, #8]
   2c46c:	ldr	w9, [x22, #8]
   2c470:	mul	w8, w9, w8
   2c474:	stur	w8, [x29, #-32]
   2c478:	bl	c720 <mpfr_clear_flags@plt>
   2c47c:	b	2c0f0 <mpfr_fma@@Base+0x2f8>
   2c480:	sub	x0, x29, #0xc8
   2c484:	bl	c220 <mpfr_tmp_allocate@plt>
   2c488:	b	2c3d4 <mpfr_fma@@Base+0x5dc>
   2c48c:	bl	c8d0 <mpfr_tmp_free@plt>
   2c490:	b	2c438 <mpfr_fma@@Base+0x640>
   2c494:	bl	cdd0 <mpfr_abort_prec_max@plt>
   2c498:	stp	x29, x30, [sp, #-16]!
   2c49c:	ldr	x11, [x1, #16]
   2c4a0:	mov	x9, #0x2                   	// #2
   2c4a4:	movk	x9, #0x8000, lsl #48
   2c4a8:	mov	x29, sp
   2c4ac:	cmp	x11, x9
   2c4b0:	b.eq	2c4cc <mpfr_fma@@Base+0x6d4>  // b.none
   2c4b4:	ldr	x10, [x2, #16]
   2c4b8:	cmp	x10, x9
   2c4bc:	b.eq	2c4cc <mpfr_fma@@Base+0x6d4>  // b.none
   2c4c0:	ldr	x8, [x3, #16]
   2c4c4:	cmp	x8, x9
   2c4c8:	b.ne	2c500 <mpfr_fma@@Base+0x708>  // b.any
   2c4cc:	str	x9, [x0, #16]
   2c4d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c4d4:	ldr	x1, [x0, #2800]
   2c4d8:	add	x0, x0, #0xaf0
   2c4dc:	blr	x1
   2c4e0:	mrs	x8, tpidr_el0
   2c4e4:	ldr	w9, [x8, x0]
   2c4e8:	mov	w4, wzr
   2c4ec:	orr	w9, w9, #0x4
   2c4f0:	str	w9, [x8, x0]
   2c4f4:	mov	w0, w4
   2c4f8:	ldp	x29, x30, [sp], #16
   2c4fc:	ret
   2c500:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   2c504:	cmp	x11, x12
   2c508:	b.eq	2c534 <mpfr_fma@@Base+0x73c>  // b.none
   2c50c:	cmp	x10, x12
   2c510:	b.eq	2c534 <mpfr_fma@@Base+0x73c>  // b.none
   2c514:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2c518:	cmp	x8, x9
   2c51c:	b.ne	2c584 <mpfr_fma@@Base+0x78c>  // b.any
   2c520:	mov	w4, wzr
   2c524:	str	x9, [x0, #16]
   2c528:	ldr	w8, [x3, #8]
   2c52c:	str	w8, [x0, #8]
   2c530:	b	2c4f4 <mpfr_fma@@Base+0x6fc>
   2c534:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   2c538:	cmp	x11, x12
   2c53c:	b.eq	2c4cc <mpfr_fma@@Base+0x6d4>  // b.none
   2c540:	cmp	x10, x12
   2c544:	b.eq	2c4cc <mpfr_fma@@Base+0x6d4>  // b.none
   2c548:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   2c54c:	cmp	x8, x10
   2c550:	b.ne	2c5a4 <mpfr_fma@@Base+0x7ac>  // b.any
   2c554:	ldr	w10, [x1, #8]
   2c558:	ldr	w11, [x2, #8]
   2c55c:	ldr	w12, [x3, #8]
   2c560:	mul	w10, w11, w10
   2c564:	cmp	w10, w12
   2c568:	b.ne	2c4cc <mpfr_fma@@Base+0x6d4>  // b.any
   2c56c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2c570:	cmp	x8, x9
   2c574:	str	x9, [x0, #16]
   2c578:	b.ne	2c5a8 <mpfr_fma@@Base+0x7b0>  // b.any
   2c57c:	mov	w4, wzr
   2c580:	b	2c528 <mpfr_fma@@Base+0x730>
   2c584:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2c588:	cmp	x11, x9
   2c58c:	b.eq	2c5c0 <mpfr_fma@@Base+0x7c8>  // b.none
   2c590:	cmp	x10, x9
   2c594:	b.eq	2c5c0 <mpfr_fma@@Base+0x7c8>  // b.none
   2c598:	mov	w3, w4
   2c59c:	bl	c1b0 <mpfr_mul@plt>
   2c5a0:	b	2c60c <mpfr_fma@@Base+0x814>
   2c5a4:	str	x10, [x0, #16]
   2c5a8:	ldr	w8, [x1, #8]
   2c5ac:	ldr	w9, [x2, #8]
   2c5b0:	mov	w4, wzr
   2c5b4:	mul	w8, w9, w8
   2c5b8:	str	w8, [x0, #8]
   2c5bc:	b	2c4f4 <mpfr_fma@@Base+0x6fc>
   2c5c0:	cmp	x8, x9
   2c5c4:	b.ne	2c5f8 <mpfr_fma@@Base+0x800>  // b.any
   2c5c8:	ldr	w8, [x1, #8]
   2c5cc:	ldr	w9, [x2, #8]
   2c5d0:	cmp	w4, #0x3
   2c5d4:	mul	w9, w9, w8
   2c5d8:	b.ne	2c614 <mpfr_fma@@Base+0x81c>  // b.any
   2c5dc:	cmp	w9, #0x1
   2c5e0:	mov	w8, #0xffffffff            	// #-1
   2c5e4:	b.lt	2c628 <mpfr_fma@@Base+0x830>  // b.tstop
   2c5e8:	ldr	w9, [x3, #8]
   2c5ec:	cmp	w9, #0x1
   2c5f0:	cneg	w8, w8, ge  // ge = tcont
   2c5f4:	b	2c628 <mpfr_fma@@Base+0x830>
   2c5f8:	ldr	w8, [x3, #8]
   2c5fc:	mov	x1, x3
   2c600:	mov	w2, w4
   2c604:	mov	w3, w8
   2c608:	bl	cb70 <mpfr_set4@plt>
   2c60c:	mov	w4, w0
   2c610:	b	2c4f4 <mpfr_fma@@Base+0x6fc>
   2c614:	mov	w8, #0x1                   	// #1
   2c618:	tbz	w9, #31, 2c628 <mpfr_fma@@Base+0x830>
   2c61c:	ldr	w9, [x3, #8]
   2c620:	cmp	w9, #0x0
   2c624:	cneg	w8, w8, lt  // lt = tstop
   2c628:	str	w8, [x0, #8]
   2c62c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2c630:	mov	w4, wzr
   2c634:	str	x8, [x0, #16]
   2c638:	b	2c4f4 <mpfr_fma@@Base+0x6fc>

000000000002c63c <mpfr_fms@@Base>:
   2c63c:	sub	sp, sp, #0x30
   2c640:	stp	x29, x30, [sp, #32]
   2c644:	ldr	x8, [x3]
   2c648:	add	x29, sp, #0x20
   2c64c:	str	x8, [sp]
   2c650:	ldr	w8, [x3, #8]
   2c654:	neg	w8, w8
   2c658:	str	w8, [sp, #8]
   2c65c:	ldr	x8, [x3, #16]
   2c660:	str	x8, [sp, #16]
   2c664:	ldr	x8, [x3, #24]
   2c668:	mov	x3, sp
   2c66c:	str	x8, [sp, #24]
   2c670:	bl	c700 <mpfr_fma@plt>
   2c674:	ldp	x29, x30, [sp, #32]
   2c678:	add	sp, sp, #0x30
   2c67c:	ret

000000000002c680 <mpfr_hypot@@Base>:
   2c680:	sub	sp, sp, #0x100
   2c684:	stp	x29, x30, [sp, #160]
   2c688:	stp	x28, x27, [sp, #176]
   2c68c:	stp	x26, x25, [sp, #192]
   2c690:	stp	x24, x23, [sp, #208]
   2c694:	stp	x22, x21, [sp, #224]
   2c698:	stp	x20, x19, [sp, #240]
   2c69c:	ldr	x8, [x1, #16]
   2c6a0:	mov	x11, #0x2                   	// #2
   2c6a4:	movk	x11, #0x8000, lsl #48
   2c6a8:	add	x9, x11, #0x2
   2c6ac:	mov	w20, w3
   2c6b0:	mov	x21, x2
   2c6b4:	mov	x23, x1
   2c6b8:	cmp	x8, x9
   2c6bc:	mov	x26, x0
   2c6c0:	add	x29, sp, #0xa0
   2c6c4:	b.lt	2ca88 <mpfr_hypot@@Base+0x408>  // b.tstop
   2c6c8:	ldr	x10, [x21, #16]
   2c6cc:	cmp	x10, x9
   2c6d0:	b.lt	2ca88 <mpfr_hypot@@Base+0x408>  // b.tstop
   2c6d4:	mov	x0, x23
   2c6d8:	mov	x1, x21
   2c6dc:	bl	cea0 <mpfr_cmpabs@plt>
   2c6e0:	cmp	w0, #0x0
   2c6e4:	csel	x22, x23, x21, lt  // lt = tstop
   2c6e8:	csel	x21, x21, x23, lt  // lt = tstop
   2c6ec:	ldr	x25, [x26]
   2c6f0:	ldr	x8, [x21]
   2c6f4:	ldr	x24, [x21, #16]
   2c6f8:	ldr	x9, [x22, #16]
   2c6fc:	mov	w10, #0x2                   	// #2
   2c700:	cmp	x8, x25
   2c704:	csel	x11, x8, x25, gt
   2c708:	cmp	w20, #0x0
   2c70c:	sub	x9, x24, x9
   2c710:	cinc	x11, x11, eq  // eq = none
   2c714:	cmp	w20, #0x4
   2c718:	csel	w23, w10, w20, eq  // eq = none
   2c71c:	cmp	x9, x11, lsl #1
   2c720:	b.ls	2c770 <mpfr_hypot@@Base+0xf0>  // b.plast
   2c724:	cmp	w23, #0x2
   2c728:	b.eq	2cae0 <mpfr_hypot@@Base+0x460>  // b.none
   2c72c:	cmp	x8, x25
   2c730:	b.gt	2cb70 <mpfr_hypot@@Base+0x4f0>
   2c734:	mov	w3, #0x1                   	// #1
   2c738:	mov	x0, x26
   2c73c:	mov	x1, x21
   2c740:	mov	w2, w23
   2c744:	bl	cb70 <mpfr_set4@plt>
   2c748:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c74c:	ldr	x1, [x0, #2800]
   2c750:	add	x0, x0, #0xaf0
   2c754:	blr	x1
   2c758:	mrs	x8, tpidr_el0
   2c75c:	ldr	w9, [x8, x0]
   2c760:	mov	w21, #0xffffffff            	// #-1
   2c764:	orr	w9, w9, #0x8
   2c768:	str	w9, [x8, x0]
   2c76c:	b	2ca64 <mpfr_hypot@@Base+0x3e4>
   2c770:	ldr	x9, [x22]
   2c774:	str	x26, [sp, #48]
   2c778:	str	w23, [sp, #60]
   2c77c:	cmp	x8, x9
   2c780:	csel	x20, x8, x9, gt
   2c784:	subs	x19, x25, #0x1
   2c788:	b.eq	2cb30 <mpfr_hypot@@Base+0x4b0>  // b.none
   2c78c:	b.le	2cc68 <mpfr_hypot@@Base+0x5e8>
   2c790:	mov	x27, #0x2                   	// #2
   2c794:	clz	x8, x19
   2c798:	mov	w9, #0x40                  	// #64
   2c79c:	movk	x27, #0x8000, lsl #48
   2c7a0:	sub	x8, x9, x8
   2c7a4:	add	x8, x25, x8
   2c7a8:	add	x23, x8, #0x4
   2c7ac:	sub	x0, x29, #0x20
   2c7b0:	mov	x1, x23
   2c7b4:	bl	cf60 <mpfr_init2@plt>
   2c7b8:	sub	x0, x29, #0x40
   2c7bc:	mov	x1, x23
   2c7c0:	bl	cf60 <mpfr_init2@plt>
   2c7c4:	add	x0, sp, #0x40
   2c7c8:	mov	x1, x23
   2c7cc:	bl	cf60 <mpfr_init2@plt>
   2c7d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c7d4:	ldr	x1, [x0, #2800]
   2c7d8:	add	x0, x0, #0xaf0
   2c7dc:	blr	x1
   2c7e0:	mrs	x13, tpidr_el0
   2c7e4:	ldr	w8, [x13, x0]
   2c7e8:	str	w8, [sp, #28]
   2c7ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c7f0:	ldr	x1, [x0, #2736]
   2c7f4:	add	x0, x0, #0xab0
   2c7f8:	blr	x1
   2c7fc:	ldr	x9, [x13, x0]
   2c800:	mov	x8, x0
   2c804:	str	x9, [sp, #32]
   2c808:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c80c:	ldr	x1, [x0, #2768]
   2c810:	add	x0, x0, #0xad0
   2c814:	blr	x1
   2c818:	ldr	w12, [sp, #60]
   2c81c:	ldr	x9, [x13, x0]
   2c820:	mov	x11, #0x1fffffffffffffff    	// #2305843009213693951
   2c824:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2c828:	cmp	w12, #0x0
   2c82c:	str	x9, [sp, #16]
   2c830:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2c834:	mov	w12, #0x40                  	// #64
   2c838:	mov	w19, #0x2                   	// #2
   2c83c:	sub	x24, x11, x24
   2c840:	cinc	x25, x25, eq  // eq = none
   2c844:	mov	w26, #0x4                   	// #4
   2c848:	str	x12, [sp, #8]
   2c84c:	str	x9, [x13, x8]
   2c850:	str	x13, [sp, #40]
   2c854:	str	x10, [x13, x0]
   2c858:	sub	x0, x29, #0x40
   2c85c:	mov	w3, #0x1                   	// #1
   2c860:	mov	x1, x21
   2c864:	mov	x2, x24
   2c868:	bl	bff0 <mpfr_mul_2si@plt>
   2c86c:	mov	w28, w0
   2c870:	add	x0, sp, #0x40
   2c874:	mov	w3, #0x1                   	// #1
   2c878:	mov	x1, x22
   2c87c:	mov	x2, x24
   2c880:	bl	bff0 <mpfr_mul_2si@plt>
   2c884:	orr	w28, w0, w28
   2c888:	sub	x0, x29, #0x40
   2c88c:	sub	x1, x29, #0x40
   2c890:	mov	w2, #0x1                   	// #1
   2c894:	bl	c8c0 <mpfr_sqr@plt>
   2c898:	orr	w28, w28, w0
   2c89c:	sub	x0, x29, #0x20
   2c8a0:	add	x1, sp, #0x40
   2c8a4:	add	x2, sp, #0x40
   2c8a8:	sub	x3, x29, #0x40
   2c8ac:	mov	w4, #0x1                   	// #1
   2c8b0:	bl	c700 <mpfr_fma@plt>
   2c8b4:	orr	w28, w28, w0
   2c8b8:	sub	x0, x29, #0x20
   2c8bc:	sub	x1, x29, #0x20
   2c8c0:	mov	w2, #0x1                   	// #1
   2c8c4:	bl	ce20 <mpfr_sqrt@plt>
   2c8c8:	cmp	x23, x20
   2c8cc:	orr	w9, w28, w0
   2c8d0:	csel	x8, x26, x19, lt  // lt = tstop
   2c8d4:	cbz	w9, 2c918 <mpfr_hypot@@Base+0x298>
   2c8d8:	ldur	x9, [x29, #-16]
   2c8dc:	add	x10, x27, #0x2
   2c8e0:	cmp	x9, x10
   2c8e4:	b.lt	2c924 <mpfr_hypot@@Base+0x2a4>  // b.tstop
   2c8e8:	ldur	x9, [x29, #-32]
   2c8ec:	ldur	x0, [x29, #-8]
   2c8f0:	sub	x2, x23, x8
   2c8f4:	mov	x3, x25
   2c8f8:	sub	x10, x9, #0x1
   2c8fc:	add	x9, x9, #0x3e
   2c900:	cmp	x10, #0x0
   2c904:	csel	x9, x9, x10, lt  // lt = tstop
   2c908:	asr	x9, x9, #6
   2c90c:	add	x1, x9, #0x1
   2c910:	bl	c830 <mpfr_round_p@plt>
   2c914:	cbz	w0, 2c924 <mpfr_hypot@@Base+0x2a4>
   2c918:	mov	w8, wzr
   2c91c:	tbnz	w8, #0, 2c858 <mpfr_hypot@@Base+0x1d8>
   2c920:	b	2c9a0 <mpfr_hypot@@Base+0x320>
   2c924:	ldr	x9, [sp, #8]
   2c928:	sub	x8, x27, x23
   2c92c:	sub	x8, x8, #0x103
   2c930:	cmp	x9, x8
   2c934:	mov	x8, x9
   2c938:	b.gt	2c980 <mpfr_hypot@@Base+0x300>
   2c93c:	add	x23, x23, x8
   2c940:	cmp	x23, #0x0
   2c944:	cinc	x8, x23, lt  // lt = tstop
   2c948:	asr	x8, x8, #1
   2c94c:	sub	x0, x29, #0x20
   2c950:	mov	x1, x23
   2c954:	str	x8, [sp, #8]
   2c958:	bl	c330 <mpfr_set_prec@plt>
   2c95c:	sub	x0, x29, #0x40
   2c960:	mov	x1, x23
   2c964:	bl	c330 <mpfr_set_prec@plt>
   2c968:	add	x0, sp, #0x40
   2c96c:	mov	x1, x23
   2c970:	bl	c330 <mpfr_set_prec@plt>
   2c974:	mov	w8, #0x1                   	// #1
   2c978:	tbnz	w8, #0, 2c858 <mpfr_hypot@@Base+0x1d8>
   2c97c:	b	2c9a0 <mpfr_hypot@@Base+0x320>
   2c980:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2c984:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2c988:	mov	w1, #0xbd                  	// #189
   2c98c:	add	x0, x0, #0x6ac
   2c990:	add	x2, x2, #0x154
   2c994:	bl	d030 <mpfr_assert_fail@plt>
   2c998:	ldr	x8, [sp, #8]
   2c99c:	b	2c93c <mpfr_hypot@@Base+0x2bc>
   2c9a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2c9a4:	ldr	x1, [x0, #2800]
   2c9a8:	add	x0, x0, #0xaf0
   2c9ac:	blr	x1
   2c9b0:	ldp	x25, x20, [sp, #40]
   2c9b4:	ldr	w23, [sp, #60]
   2c9b8:	mov	x22, x0
   2c9bc:	sub	x1, x29, #0x20
   2c9c0:	str	wzr, [x25, x0]
   2c9c4:	mov	x0, x20
   2c9c8:	mov	x2, x24
   2c9cc:	mov	w3, w23
   2c9d0:	bl	c8e0 <mpfr_div_2si@plt>
   2c9d4:	ldr	w19, [x25, x22]
   2c9d8:	mov	w21, w0
   2c9dc:	sub	x0, x29, #0x20
   2c9e0:	bl	c4f0 <mpfr_clear@plt>
   2c9e4:	add	x0, sp, #0x40
   2c9e8:	bl	c4f0 <mpfr_clear@plt>
   2c9ec:	sub	x0, x29, #0x40
   2c9f0:	bl	c4f0 <mpfr_clear@plt>
   2c9f4:	ldr	w8, [sp, #28]
   2c9f8:	str	w8, [x25, x22]
   2c9fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ca00:	ldr	x1, [x0, #2736]
   2ca04:	add	x0, x0, #0xab0
   2ca08:	blr	x1
   2ca0c:	ldr	x9, [sp, #32]
   2ca10:	str	x9, [x25, x0]
   2ca14:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ca18:	ldr	x1, [x0, #2768]
   2ca1c:	add	x0, x0, #0xad0
   2ca20:	blr	x1
   2ca24:	ldr	x10, [sp, #16]
   2ca28:	str	x10, [x25, x0]
   2ca2c:	tbnz	w19, #1, 2cb40 <mpfr_hypot@@Base+0x4c0>
   2ca30:	ldr	x8, [x20, #16]
   2ca34:	cmp	x8, x10
   2ca38:	b.gt	2cb5c <mpfr_hypot@@Base+0x4dc>
   2ca3c:	cmp	x8, x9
   2ca40:	b.lt	2cb5c <mpfr_hypot@@Base+0x4dc>  // b.tstop
   2ca44:	cbz	w21, 2ca64 <mpfr_hypot@@Base+0x3e4>
   2ca48:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ca4c:	ldr	x1, [x0, #2800]
   2ca50:	add	x0, x0, #0xaf0
   2ca54:	blr	x1
   2ca58:	ldr	w8, [x25, x0]
   2ca5c:	orr	w8, w8, #0x8
   2ca60:	str	w8, [x25, x0]
   2ca64:	mov	w0, w21
   2ca68:	ldp	x20, x19, [sp, #240]
   2ca6c:	ldp	x22, x21, [sp, #224]
   2ca70:	ldp	x24, x23, [sp, #208]
   2ca74:	ldp	x26, x25, [sp, #192]
   2ca78:	ldp	x28, x27, [sp, #176]
   2ca7c:	ldp	x29, x30, [sp, #160]
   2ca80:	add	sp, sp, #0x100
   2ca84:	ret
   2ca88:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2ca8c:	cmp	x8, x9
   2ca90:	b.eq	2caa0 <mpfr_hypot@@Base+0x420>  // b.none
   2ca94:	ldr	x10, [x21, #16]
   2ca98:	cmp	x10, x9
   2ca9c:	b.ne	2cab4 <mpfr_hypot@@Base+0x434>  // b.any
   2caa0:	mov	w8, #0x1                   	// #1
   2caa4:	mov	w21, wzr
   2caa8:	str	x9, [x26, #16]
   2caac:	str	w8, [x26, #8]
   2cab0:	b	2ca64 <mpfr_hypot@@Base+0x3e4>
   2cab4:	cmp	x8, x11
   2cab8:	b.eq	2cc84 <mpfr_hypot@@Base+0x604>  // b.none
   2cabc:	cmp	x10, x11
   2cac0:	b.eq	2cc84 <mpfr_hypot@@Base+0x604>  // b.none
   2cac4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2cac8:	mov	w3, #0x1                   	// #1
   2cacc:	mov	x0, x26
   2cad0:	cmp	x8, x9
   2cad4:	b.ne	2ccb0 <mpfr_hypot@@Base+0x630>  // b.any
   2cad8:	mov	x1, x21
   2cadc:	b	2ccb4 <mpfr_hypot@@Base+0x634>
   2cae0:	mov	w3, #0x1                   	// #1
   2cae4:	mov	x0, x26
   2cae8:	mov	x1, x21
   2caec:	mov	w2, w23
   2caf0:	bl	cb70 <mpfr_set4@plt>
   2caf4:	cbnz	w0, 2cb10 <mpfr_hypot@@Base+0x490>
   2caf8:	mov	x0, x26
   2cafc:	bl	cb40 <mpfr_nexttoinf@plt>
   2cb00:	ldr	x8, [x26, #16]
   2cb04:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2cb08:	cmp	x8, x9
   2cb0c:	b.eq	2cd80 <mpfr_hypot@@Base+0x700>  // b.none
   2cb10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2cb14:	ldr	x1, [x0, #2800]
   2cb18:	add	x0, x0, #0xaf0
   2cb1c:	blr	x1
   2cb20:	mrs	x8, tpidr_el0
   2cb24:	ldr	w9, [x8, x0]
   2cb28:	mov	w21, #0x1                   	// #1
   2cb2c:	b	2c764 <mpfr_hypot@@Base+0xe4>
   2cb30:	mov	x27, #0x2                   	// #2
   2cb34:	movk	x27, #0x8000, lsl #48
   2cb38:	mov	x8, xzr
   2cb3c:	b	2c7a4 <mpfr_hypot@@Base+0x124>
   2cb40:	orr	w8, w8, #0x2
   2cb44:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2cb48:	ldr	x1, [x0, #2800]
   2cb4c:	add	x0, x0, #0xaf0
   2cb50:	blr	x1
   2cb54:	str	w8, [x25, x0]
   2cb58:	b	2ca30 <mpfr_hypot@@Base+0x3b0>
   2cb5c:	mov	x0, x20
   2cb60:	mov	w1, w21
   2cb64:	mov	w2, w23
   2cb68:	bl	d020 <mpfr_check_range@plt>
   2cb6c:	b	2ccbc <mpfr_hypot@@Base+0x63c>
   2cb70:	mov	w9, #0x1                   	// #1
   2cb74:	sub	x10, x8, #0x1
   2cb78:	str	x24, [x26, #16]
   2cb7c:	add	x8, x8, #0x3e
   2cb80:	str	w9, [x26, #8]
   2cb84:	cmp	x10, #0x0
   2cb88:	sub	x12, x25, #0x1
   2cb8c:	csel	x8, x8, x10, lt  // lt = tstop
   2cb90:	ldr	x10, [x21, #24]
   2cb94:	add	x13, x25, #0x3e
   2cb98:	cmp	x12, #0x0
   2cb9c:	ldr	x22, [x26, #24]
   2cba0:	asr	x11, x8, #6
   2cba4:	csel	x9, x13, x12, lt  // lt = tstop
   2cba8:	add	x13, x11, #0x1
   2cbac:	asr	x19, x9, #6
   2cbb0:	neg	w14, w25
   2cbb4:	add	x9, x10, x13, lsl #3
   2cbb8:	mvn	x12, x19
   2cbbc:	ands	x8, x14, #0x3f
   2cbc0:	add	x2, x19, #0x1
   2cbc4:	add	x1, x9, x12, lsl #3
   2cbc8:	b.eq	2cccc <mpfr_hypot@@Base+0x64c>  // b.none
   2cbcc:	ldr	x9, [x1]
   2cbd0:	sub	x8, x8, #0x1
   2cbd4:	mov	w12, #0x1                   	// #1
   2cbd8:	lsl	x12, x12, x8
   2cbdc:	sub	x14, x12, #0x1
   2cbe0:	and	x8, x9, x12
   2cbe4:	and	x9, x9, x14
   2cbe8:	cbz	w23, 2cbf0 <mpfr_hypot@@Base+0x570>
   2cbec:	cbnz	x8, 2cc18 <mpfr_hypot@@Base+0x598>
   2cbf0:	cbnz	x9, 2cc18 <mpfr_hypot@@Base+0x598>
   2cbf4:	sub	x13, x13, x2
   2cbf8:	cbz	x13, 2cc18 <mpfr_hypot@@Base+0x598>
   2cbfc:	mvn	x9, x19
   2cc00:	add	x11, x9, x11
   2cc04:	ldr	x9, [x10, x11, lsl #3]
   2cc08:	subs	x11, x11, #0x1
   2cc0c:	cset	w13, cs  // cs = hs, nlast
   2cc10:	cbnz	x9, 2cc18 <mpfr_hypot@@Base+0x598>
   2cc14:	tbnz	w13, #0, 2cc04 <mpfr_hypot@@Base+0x584>
   2cc18:	lsl	x21, x12, #1
   2cc1c:	cmp	w23, #0x5
   2cc20:	b.hi	2ccf4 <mpfr_hypot@@Base+0x674>  // b.pmore
   2cc24:	adrp	x11, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2cc28:	mov	w10, w23
   2cc2c:	add	x11, x11, #0x6a6
   2cc30:	adr	x12, 2cc44 <mpfr_hypot@@Base+0x5c4>
   2cc34:	ldrb	w13, [x11, x10]
   2cc38:	add	x12, x12, x13, lsl #2
   2cc3c:	mov	w20, wzr
   2cc40:	br	x12
   2cc44:	orr	x8, x9, x8
   2cc48:	cmp	x8, #0x0
   2cc4c:	csetm	w20, ne  // ne = any
   2cc50:	cmp	x22, x1
   2cc54:	b.eq	2cd10 <mpfr_hypot@@Base+0x690>  // b.none
   2cc58:	lsl	x2, x2, #3
   2cc5c:	mov	x0, x22
   2cc60:	bl	be50 <memcpy@plt>
   2cc64:	b	2cd10 <mpfr_hypot@@Base+0x690>
   2cc68:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2cc6c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2cc70:	add	x0, x0, #0x6ac
   2cc74:	add	x2, x2, #0xe32
   2cc78:	mov	w1, #0x8c                  	// #140
   2cc7c:	bl	d030 <mpfr_assert_fail@plt>
   2cc80:	b	2c790 <mpfr_hypot@@Base+0x110>
   2cc84:	str	x11, [x26, #16]
   2cc88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2cc8c:	ldr	x1, [x0, #2800]
   2cc90:	add	x0, x0, #0xaf0
   2cc94:	blr	x1
   2cc98:	mrs	x8, tpidr_el0
   2cc9c:	ldr	w9, [x8, x0]
   2cca0:	mov	w21, wzr
   2cca4:	orr	w9, w9, #0x4
   2cca8:	str	w9, [x8, x0]
   2ccac:	b	2ca64 <mpfr_hypot@@Base+0x3e4>
   2ccb0:	mov	x1, x23
   2ccb4:	mov	w2, w20
   2ccb8:	bl	cb70 <mpfr_set4@plt>
   2ccbc:	mov	w21, w0
   2ccc0:	b	2ca64 <mpfr_hypot@@Base+0x3e4>
   2ccc4:	cbnz	x8, 2ccfc <mpfr_hypot@@Base+0x67c>
   2ccc8:	b	2cc44 <mpfr_hypot@@Base+0x5c4>
   2cccc:	ldur	x9, [x1, #-8]
   2ccd0:	mov	w13, w23
   2ccd4:	and	x8, x9, #0x8000000000000000
   2ccd8:	and	x9, x9, #0x7fffffffffffffff
   2ccdc:	cbz	w23, 2cd4c <mpfr_hypot@@Base+0x6cc>
   2cce0:	cbz	x8, 2cd4c <mpfr_hypot@@Base+0x6cc>
   2cce4:	mov	w21, #0x1                   	// #1
   2cce8:	mov	w23, w13
   2ccec:	cmp	w23, #0x5
   2ccf0:	b.ls	2cc24 <mpfr_hypot@@Base+0x5a4>  // b.plast
   2ccf4:	orr	x8, x9, x8
   2ccf8:	cbz	x8, 2ce00 <mpfr_hypot@@Base+0x780>
   2ccfc:	mov	x0, x22
   2cd00:	mov	x3, x21
   2cd04:	bl	bf60 <__gmpn_add_1@plt>
   2cd08:	cbnz	x0, 2cda4 <mpfr_hypot@@Base+0x724>
   2cd0c:	mov	w20, #0x1                   	// #1
   2cd10:	ldr	x8, [x22]
   2cd14:	neg	x9, x21
   2cd18:	and	x8, x8, x9
   2cd1c:	str	x8, [x22]
   2cd20:	mov	w8, #0x1                   	// #1
   2cd24:	cbz	w8, 2ca64 <mpfr_hypot@@Base+0x3e4>
   2cd28:	cmp	w20, #0x0
   2cd2c:	csinv	w21, w20, wzr, ne  // ne = any
   2cd30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2cd34:	ldr	x1, [x0, #2800]
   2cd38:	add	x0, x0, #0xaf0
   2cd3c:	blr	x1
   2cd40:	mrs	x8, tpidr_el0
   2cd44:	ldr	w9, [x8, x0]
   2cd48:	b	2c764 <mpfr_hypot@@Base+0xe4>
   2cd4c:	mov	w21, #0x1                   	// #1
   2cd50:	cbnz	x9, 2cce8 <mpfr_hypot@@Base+0x668>
   2cd54:	sub	x12, x11, x2
   2cd58:	cbz	x12, 2cce8 <mpfr_hypot@@Base+0x668>
   2cd5c:	sub	x9, x11, x19
   2cd60:	sub	x11, x9, #0x2
   2cd64:	mov	w21, #0x1                   	// #1
   2cd68:	ldr	x9, [x10, x11, lsl #3]
   2cd6c:	subs	x11, x11, #0x1
   2cd70:	cset	w12, cs  // cs = hs, nlast
   2cd74:	cbnz	x9, 2cce8 <mpfr_hypot@@Base+0x668>
   2cd78:	tbnz	w12, #0, 2cd68 <mpfr_hypot@@Base+0x6e8>
   2cd7c:	b	2cce8 <mpfr_hypot@@Base+0x668>
   2cd80:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2cd84:	ldr	x1, [x0, #2800]
   2cd88:	add	x0, x0, #0xaf0
   2cd8c:	blr	x1
   2cd90:	mrs	x8, tpidr_el0
   2cd94:	ldr	w9, [x8, x0]
   2cd98:	orr	w9, w9, #0x2
   2cd9c:	str	w9, [x8, x0]
   2cda0:	b	2cb10 <mpfr_hypot@@Base+0x490>
   2cda4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   2cda8:	str	x8, [x22, x19, lsl #3]
   2cdac:	ldr	x8, [x26, #16]
   2cdb0:	mov	x10, x26
   2cdb4:	add	x9, x8, #0x1
   2cdb8:	str	x9, [x26, #16]
   2cdbc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2cdc0:	ldr	x1, [x0, #2768]
   2cdc4:	add	x0, x0, #0xad0
   2cdc8:	blr	x1
   2cdcc:	mrs	x9, tpidr_el0
   2cdd0:	ldr	x9, [x9, x0]
   2cdd4:	cmp	x8, x9
   2cdd8:	b.lt	2cd0c <mpfr_hypot@@Base+0x68c>  // b.tstop
   2cddc:	mov	w2, #0x1                   	// #1
   2cde0:	mov	x0, x26
   2cde4:	mov	w1, w23
   2cde8:	mov	w20, #0x1                   	// #1
   2cdec:	bl	c3a0 <mpfr_overflow@plt>
   2cdf0:	mov	w21, w0
   2cdf4:	mov	w8, wzr
   2cdf8:	cbz	w8, 2ca64 <mpfr_hypot@@Base+0x3e4>
   2cdfc:	b	2cd28 <mpfr_hypot@@Base+0x6a8>
   2ce00:	mov	w20, wzr
   2ce04:	cmp	x22, x1
   2ce08:	b.ne	2cc58 <mpfr_hypot@@Base+0x5d8>  // b.any
   2ce0c:	b	2cd10 <mpfr_hypot@@Base+0x690>

000000000002ce10 <mpfr_log1p@@Base>:
   2ce10:	sub	sp, sp, #0x90
   2ce14:	stp	x29, x30, [sp, #48]
   2ce18:	stp	x28, x27, [sp, #64]
   2ce1c:	stp	x26, x25, [sp, #80]
   2ce20:	stp	x24, x23, [sp, #96]
   2ce24:	stp	x22, x21, [sp, #112]
   2ce28:	stp	x20, x19, [sp, #128]
   2ce2c:	ldr	x8, [x1, #16]
   2ce30:	mov	x9, #0x2                   	// #2
   2ce34:	movk	x9, #0x8000, lsl #48
   2ce38:	add	x9, x9, #0x2
   2ce3c:	mov	x21, x1
   2ce40:	cmp	x8, x9
   2ce44:	mov	x19, x0
   2ce48:	add	x29, sp, #0x30
   2ce4c:	b.lt	2d17c <mpfr_log1p@@Base+0x36c>  // b.tstop
   2ce50:	mov	w26, w2
   2ce54:	tbnz	x8, #63, 2d100 <mpfr_log1p@@Base+0x2f0>
   2ce58:	mov	x1, #0xffffffffffffffff    	// #-1
   2ce5c:	mov	x0, x21
   2ce60:	mov	x2, xzr
   2ce64:	bl	c890 <mpfr_cmp_si_2exp@plt>
   2ce68:	cmp	w0, #0x0
   2ce6c:	b.le	2d1b0 <mpfr_log1p@@Base+0x3a0>
   2ce70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ce74:	ldr	x1, [x0, #2800]
   2ce78:	add	x0, x0, #0xaf0
   2ce7c:	blr	x1
   2ce80:	mrs	x25, tpidr_el0
   2ce84:	ldr	w8, [x25, x0]
   2ce88:	str	w8, [sp, #12]
   2ce8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ce90:	ldr	x1, [x0, #2736]
   2ce94:	add	x0, x0, #0xab0
   2ce98:	blr	x1
   2ce9c:	ldr	x28, [x25, x0]
   2cea0:	mov	x8, x0
   2cea4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2cea8:	ldr	x1, [x0, #2768]
   2ceac:	add	x0, x0, #0xad0
   2ceb0:	blr	x1
   2ceb4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2ceb8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2cebc:	ldr	x20, [x25, x0]
   2cec0:	str	x9, [x25, x8]
   2cec4:	str	x10, [x25, x0]
   2cec8:	ldr	x23, [x19]
   2cecc:	subs	x22, x23, #0x1
   2ced0:	b.eq	2d1ec <mpfr_log1p@@Base+0x3dc>  // b.none
   2ced4:	b.le	2d20c <mpfr_log1p@@Base+0x3fc>
   2ced8:	clz	x8, x22
   2cedc:	mov	w9, #0x40                  	// #64
   2cee0:	sub	x8, x9, x8
   2cee4:	ldr	x9, [x21, #16]
   2cee8:	add	x8, x23, x8
   2ceec:	add	x0, sp, #0x10
   2cef0:	neg	x10, x9
   2cef4:	and	x9, x10, x9, asr #63
   2cef8:	add	x8, x8, x9
   2cefc:	add	x24, x8, #0x6
   2cf00:	mov	x1, x24
   2cf04:	bl	cf60 <mpfr_init2@plt>
   2cf08:	cmp	w26, #0x0
   2cf0c:	mov	w27, w26
   2cf10:	mov	w8, #0x40                  	// #64
   2cf14:	cinc	x26, x23, eq  // eq = none
   2cf18:	str	x8, [sp]
   2cf1c:	mov	x0, x23
   2cf20:	bl	c0d0 <__gmpfr_int_ceil_log2@plt>
   2cf24:	add	w8, w0, #0x1
   2cf28:	ldr	x9, [x21, #16]
   2cf2c:	sxtw	x8, w8
   2cf30:	sdiv	x8, x23, x8
   2cf34:	neg	x8, x8
   2cf38:	add	x0, sp, #0x10
   2cf3c:	cmp	x9, x8
   2cf40:	b.le	2cf80 <mpfr_log1p@@Base+0x170>
   2cf44:	mov	w2, #0x1                   	// #1
   2cf48:	mov	x1, x21
   2cf4c:	mov	w3, wzr
   2cf50:	bl	c710 <mpfr_add_ui@plt>
   2cf54:	cbz	w0, 2cfe0 <mpfr_log1p@@Base+0x1d0>
   2cf58:	mov	w22, w0
   2cf5c:	add	x0, sp, #0x10
   2cf60:	add	x1, sp, #0x10
   2cf64:	mov	w2, wzr
   2cf68:	bl	c520 <mpfr_log@plt>
   2cf6c:	ldr	x8, [sp, #32]
   2cf70:	mov	w9, #0x2                   	// #2
   2cf74:	sub	x8, x9, x8
   2cf78:	bic	x8, x8, x8, asr #63
   2cf7c:	b	2cf8c <mpfr_log1p@@Base+0x17c>
   2cf80:	mov	x1, x21
   2cf84:	bl	2d2d4 <mpfr_log1p@@Base+0x4c4>
   2cf88:	sxtw	x8, w0
   2cf8c:	ldr	x9, [sp, #32]
   2cf90:	mov	x10, #0x2                   	// #2
   2cf94:	movk	x10, #0x8000, lsl #48
   2cf98:	add	x10, x10, #0x2
   2cf9c:	cmp	x9, x10
   2cfa0:	b.lt	2cffc <mpfr_log1p@@Base+0x1ec>  // b.tstop
   2cfa4:	ldr	x9, [sp, #16]
   2cfa8:	sub	x2, x24, x8
   2cfac:	ldr	x0, [sp, #40]
   2cfb0:	mov	x3, x26
   2cfb4:	sub	x8, x9, #0x1
   2cfb8:	add	x9, x9, #0x3e
   2cfbc:	cmp	x8, #0x0
   2cfc0:	csel	x8, x9, x8, lt  // lt = tstop
   2cfc4:	asr	x8, x8, #6
   2cfc8:	add	x1, x8, #0x1
   2cfcc:	bl	c830 <mpfr_round_p@plt>
   2cfd0:	cbz	w0, 2cffc <mpfr_log1p@@Base+0x1ec>
   2cfd4:	mov	w8, #0xa                   	// #10
   2cfd8:	cbnz	w8, 2d064 <mpfr_log1p@@Base+0x254>
   2cfdc:	b	2cf1c <mpfr_log1p@@Base+0x10c>
   2cfe0:	add	x1, sp, #0x10
   2cfe4:	mov	x0, x19
   2cfe8:	mov	w2, w27
   2cfec:	bl	c520 <mpfr_log@plt>
   2cff0:	mov	w22, w0
   2cff4:	mov	w8, #0xc                   	// #12
   2cff8:	b	2cfd8 <mpfr_log1p@@Base+0x1c8>
   2cffc:	mov	x8, #0x2                   	// #2
   2d000:	ldr	x9, [sp]
   2d004:	movk	x8, #0x8000, lsl #48
   2d008:	sub	x8, x8, x24
   2d00c:	sub	x8, x8, #0x103
   2d010:	cmp	x9, x8
   2d014:	mov	x8, x9
   2d018:	b.gt	2d044 <mpfr_log1p@@Base+0x234>
   2d01c:	add	x24, x24, x8
   2d020:	cmp	x24, #0x0
   2d024:	cinc	x8, x24, lt  // lt = tstop
   2d028:	asr	x8, x8, #1
   2d02c:	add	x0, sp, #0x10
   2d030:	mov	x1, x24
   2d034:	str	x8, [sp]
   2d038:	bl	c330 <mpfr_set_prec@plt>
   2d03c:	mov	w8, wzr
   2d040:	b	2cfd8 <mpfr_log1p@@Base+0x1c8>
   2d044:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2d048:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2d04c:	mov	w1, #0xe7                  	// #231
   2d050:	add	x0, x0, #0x6b4
   2d054:	add	x2, x2, #0x154
   2d058:	bl	d030 <mpfr_assert_fail@plt>
   2d05c:	ldr	x8, [sp]
   2d060:	b	2d01c <mpfr_log1p@@Base+0x20c>
   2d064:	cmp	w8, #0xc
   2d068:	b.eq	2d084 <mpfr_log1p@@Base+0x274>  // b.none
   2d06c:	ldr	w3, [sp, #24]
   2d070:	add	x1, sp, #0x10
   2d074:	mov	x0, x19
   2d078:	mov	w2, w27
   2d07c:	bl	cb70 <mpfr_set4@plt>
   2d080:	mov	w22, w0
   2d084:	add	x0, sp, #0x10
   2d088:	bl	c4f0 <mpfr_clear@plt>
   2d08c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d090:	ldr	x1, [x0, #2800]
   2d094:	add	x0, x0, #0xaf0
   2d098:	blr	x1
   2d09c:	ldr	w9, [sp, #12]
   2d0a0:	str	w9, [x25, x0]
   2d0a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d0a8:	ldr	x1, [x0, #2736]
   2d0ac:	add	x0, x0, #0xab0
   2d0b0:	blr	x1
   2d0b4:	str	x28, [x25, x0]
   2d0b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d0bc:	ldr	x1, [x0, #2768]
   2d0c0:	add	x0, x0, #0xad0
   2d0c4:	blr	x1
   2d0c8:	str	x20, [x25, x0]
   2d0cc:	ldr	x8, [x19, #16]
   2d0d0:	cmp	x8, x20
   2d0d4:	b.gt	2d1f4 <mpfr_log1p@@Base+0x3e4>
   2d0d8:	cmp	x8, x28
   2d0dc:	b.lt	2d1f4 <mpfr_log1p@@Base+0x3e4>  // b.tstop
   2d0e0:	cbz	w22, 2d158 <mpfr_log1p@@Base+0x348>
   2d0e4:	orr	w8, w9, #0x8
   2d0e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d0ec:	ldr	x1, [x0, #2800]
   2d0f0:	add	x0, x0, #0xaf0
   2d0f4:	blr	x1
   2d0f8:	str	w8, [x25, x0]
   2d0fc:	b	2d158 <mpfr_log1p@@Base+0x348>
   2d100:	ldr	w9, [x21, #8]
   2d104:	cmp	w9, #0x1
   2d108:	b.lt	2d13c <mpfr_log1p@@Base+0x32c>  // b.tstop
   2d10c:	cmn	x8, #0x2
   2d110:	b.gt	2d130 <mpfr_log1p@@Base+0x320>
   2d114:	ldr	x9, [x19]
   2d118:	mvn	x2, x8
   2d11c:	add	x8, x9, #0x1
   2d120:	cmp	x8, x2
   2d124:	b.cc	2d2a8 <mpfr_log1p@@Base+0x498>  // b.lo, b.ul, b.last
   2d128:	mov	w8, wzr
   2d12c:	cbnz	w8, 2d154 <mpfr_log1p@@Base+0x344>
   2d130:	mov	w8, wzr
   2d134:	cbnz	w8, 2d158 <mpfr_log1p@@Base+0x348>
   2d138:	b	2ce58 <mpfr_log1p@@Base+0x48>
   2d13c:	ldr	x9, [x19]
   2d140:	neg	x2, x8
   2d144:	add	x8, x9, #0x1
   2d148:	cmp	x8, x2
   2d14c:	b.cc	2d280 <mpfr_log1p@@Base+0x470>  // b.lo, b.ul, b.last
   2d150:	mov	w8, wzr
   2d154:	cbz	w8, 2ce58 <mpfr_log1p@@Base+0x48>
   2d158:	mov	w0, w22
   2d15c:	ldp	x20, x19, [sp, #128]
   2d160:	ldp	x22, x21, [sp, #112]
   2d164:	ldp	x24, x23, [sp, #96]
   2d168:	ldp	x26, x25, [sp, #80]
   2d16c:	ldp	x28, x27, [sp, #64]
   2d170:	ldp	x29, x30, [sp, #48]
   2d174:	add	sp, sp, #0x90
   2d178:	ret
   2d17c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2d180:	cmp	x8, x9
   2d184:	b.eq	2d228 <mpfr_log1p@@Base+0x418>  // b.none
   2d188:	mov	x9, #0x2                   	// #2
   2d18c:	movk	x9, #0x8000, lsl #48
   2d190:	cmp	x8, x9
   2d194:	b.eq	2d24c <mpfr_log1p@@Base+0x43c>  // b.none
   2d198:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2d19c:	str	x8, [x19, #16]
   2d1a0:	ldr	w8, [x21, #8]
   2d1a4:	mov	w22, wzr
   2d1a8:	str	w8, [x19, #8]
   2d1ac:	b	2d158 <mpfr_log1p@@Base+0x348>
   2d1b0:	cbnz	w0, 2d24c <mpfr_log1p@@Base+0x43c>
   2d1b4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2d1b8:	mov	w9, #0xffffffff            	// #-1
   2d1bc:	str	x8, [x19, #16]
   2d1c0:	str	w9, [x19, #8]
   2d1c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d1c8:	ldr	x1, [x0, #2800]
   2d1cc:	add	x0, x0, #0xaf0
   2d1d0:	blr	x1
   2d1d4:	mrs	x8, tpidr_el0
   2d1d8:	ldr	w9, [x8, x0]
   2d1dc:	mov	w22, wzr
   2d1e0:	orr	w9, w9, #0x20
   2d1e4:	str	w9, [x8, x0]
   2d1e8:	b	2d158 <mpfr_log1p@@Base+0x348>
   2d1ec:	mov	x8, xzr
   2d1f0:	b	2cee4 <mpfr_log1p@@Base+0xd4>
   2d1f4:	mov	x0, x19
   2d1f8:	mov	w1, w22
   2d1fc:	mov	w2, w27
   2d200:	bl	d020 <mpfr_check_range@plt>
   2d204:	mov	w22, w0
   2d208:	b	2d158 <mpfr_log1p@@Base+0x348>
   2d20c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2d210:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2d214:	add	x0, x0, #0x6b4
   2d218:	add	x2, x2, #0x14b
   2d21c:	mov	w1, #0xb9                  	// #185
   2d220:	bl	d030 <mpfr_assert_fail@plt>
   2d224:	b	2ced8 <mpfr_log1p@@Base+0xc8>
   2d228:	ldr	w8, [x21, #8]
   2d22c:	cmp	w8, #0x1
   2d230:	b.lt	2d24c <mpfr_log1p@@Base+0x43c>  // b.tstop
   2d234:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2d238:	mov	w9, #0x1                   	// #1
   2d23c:	mov	w22, wzr
   2d240:	str	x8, [x19, #16]
   2d244:	str	w9, [x19, #8]
   2d248:	b	2d158 <mpfr_log1p@@Base+0x348>
   2d24c:	mov	x8, #0x2                   	// #2
   2d250:	movk	x8, #0x8000, lsl #48
   2d254:	str	x8, [x19, #16]
   2d258:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d25c:	ldr	x1, [x0, #2800]
   2d260:	add	x0, x0, #0xaf0
   2d264:	blr	x1
   2d268:	mrs	x8, tpidr_el0
   2d26c:	ldr	w9, [x8, x0]
   2d270:	mov	w22, wzr
   2d274:	orr	w9, w9, #0x4
   2d278:	str	w9, [x8, x0]
   2d27c:	b	2d158 <mpfr_log1p@@Base+0x348>
   2d280:	mov	w3, #0x1                   	// #1
   2d284:	mov	x0, x19
   2d288:	mov	x1, x21
   2d28c:	mov	w4, w26
   2d290:	bl	ca10 <mpfr_round_near_x@plt>
   2d294:	cmp	w0, #0x0
   2d298:	mov	w22, w0
   2d29c:	cset	w8, ne  // ne = any
   2d2a0:	cbnz	w0, 2d154 <mpfr_log1p@@Base+0x344>
   2d2a4:	b	2d150 <mpfr_log1p@@Base+0x340>
   2d2a8:	mov	x0, x19
   2d2ac:	mov	x1, x21
   2d2b0:	mov	w3, wzr
   2d2b4:	mov	w4, w26
   2d2b8:	mov	w20, w26
   2d2bc:	bl	ca10 <mpfr_round_near_x@plt>
   2d2c0:	cmp	w0, #0x0
   2d2c4:	mov	w22, w0
   2d2c8:	cset	w8, ne  // ne = any
   2d2cc:	cbnz	w0, 2d12c <mpfr_log1p@@Base+0x31c>
   2d2d0:	b	2d128 <mpfr_log1p@@Base+0x318>
   2d2d4:	sub	sp, sp, #0x80
   2d2d8:	stp	x29, x30, [sp, #64]
   2d2dc:	stp	x22, x21, [sp, #96]
   2d2e0:	stp	x20, x19, [sp, #112]
   2d2e4:	ldr	x19, [x0]
   2d2e8:	mov	x20, x0
   2d2ec:	mov	x21, x1
   2d2f0:	add	x0, sp, #0x20
   2d2f4:	mov	x1, x19
   2d2f8:	str	x23, [sp, #80]
   2d2fc:	add	x29, sp, #0x40
   2d300:	bl	cf60 <mpfr_init2@plt>
   2d304:	mov	x0, sp
   2d308:	mov	x1, x19
   2d30c:	bl	cf60 <mpfr_init2@plt>
   2d310:	ldr	w3, [x21, #8]
   2d314:	add	x0, sp, #0x20
   2d318:	mov	w2, #0x5                   	// #5
   2d31c:	mov	x1, x21
   2d320:	bl	cb70 <mpfr_set4@plt>
   2d324:	ldr	w3, [sp, #40]
   2d328:	add	x1, sp, #0x20
   2d32c:	mov	w2, #0x5                   	// #5
   2d330:	mov	x0, x20
   2d334:	bl	cb70 <mpfr_set4@plt>
   2d338:	mov	w23, #0x2                   	// #2
   2d33c:	mov	w22, #0xc                   	// #12
   2d340:	b	2d350 <mpfr_log1p@@Base+0x540>
   2d344:	bl	bfd0 <mpfr_sub@plt>
   2d348:	add	x23, x23, #0x1
   2d34c:	add	x22, x22, #0x2
   2d350:	add	x0, sp, #0x20
   2d354:	add	x1, sp, #0x20
   2d358:	mov	w3, #0x5                   	// #5
   2d35c:	mov	x2, x21
   2d360:	bl	c1b0 <mpfr_mul@plt>
   2d364:	mov	x0, sp
   2d368:	add	x1, sp, #0x20
   2d36c:	mov	w3, #0x5                   	// #5
   2d370:	mov	x2, x23
   2d374:	bl	d160 <mpfr_div_ui@plt>
   2d378:	ldr	x8, [x20, #16]
   2d37c:	ldr	x9, [sp, #16]
   2d380:	sub	x8, x8, x19
   2d384:	cmp	x9, x8
   2d388:	b.le	2d3a8 <mpfr_log1p@@Base+0x598>
   2d38c:	mov	x2, sp
   2d390:	mov	w3, #0x5                   	// #5
   2d394:	mov	x0, x20
   2d398:	mov	x1, x20
   2d39c:	tbz	w23, #0, 2d344 <mpfr_log1p@@Base+0x534>
   2d3a0:	bl	c640 <mpfr_add@plt>
   2d3a4:	b	2d348 <mpfr_log1p@@Base+0x538>
   2d3a8:	mov	x0, x22
   2d3ac:	bl	c0d0 <__gmpfr_int_ceil_log2@plt>
   2d3b0:	mov	w20, w0
   2d3b4:	cmp	x19, w0, sxtw
   2d3b8:	b.le	2d3e8 <mpfr_log1p@@Base+0x5d8>
   2d3bc:	add	x0, sp, #0x20
   2d3c0:	bl	c4f0 <mpfr_clear@plt>
   2d3c4:	mov	x0, sp
   2d3c8:	bl	c4f0 <mpfr_clear@plt>
   2d3cc:	mov	w0, w20
   2d3d0:	ldp	x20, x19, [sp, #112]
   2d3d4:	ldp	x22, x21, [sp, #96]
   2d3d8:	ldr	x23, [sp, #80]
   2d3dc:	ldp	x29, x30, [sp, #64]
   2d3e0:	add	sp, sp, #0x80
   2d3e4:	ret
   2d3e8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2d3ec:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2d3f0:	add	x0, x0, #0x6b4
   2d3f4:	add	x2, x2, #0x6bc
   2d3f8:	mov	w1, #0x56                  	// #86
   2d3fc:	bl	d030 <mpfr_assert_fail@plt>
   2d400:	b	2d3bc <mpfr_log1p@@Base+0x5ac>

000000000002d404 <mpfr_expm1@@Base>:
   2d404:	sub	sp, sp, #0xb0
   2d408:	stp	x29, x30, [sp, #80]
   2d40c:	stp	x28, x27, [sp, #96]
   2d410:	stp	x26, x25, [sp, #112]
   2d414:	stp	x24, x23, [sp, #128]
   2d418:	stp	x22, x21, [sp, #144]
   2d41c:	stp	x20, x19, [sp, #160]
   2d420:	ldr	x23, [x1, #16]
   2d424:	mov	x28, #0x4                   	// #4
   2d428:	movk	x28, #0x8000, lsl #48
   2d42c:	mov	w20, w2
   2d430:	mov	x21, x1
   2d434:	cmp	x23, x28
   2d438:	mov	x19, x0
   2d43c:	add	x29, sp, #0x50
   2d440:	b.lt	2d810 <mpfr_expm1@@Base+0x40c>  // b.tstop
   2d444:	tbnz	x23, #63, 2d514 <mpfr_expm1@@Base+0x110>
   2d448:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d44c:	ldr	x1, [x0, #2800]
   2d450:	add	x0, x0, #0xaf0
   2d454:	blr	x1
   2d458:	mrs	x24, tpidr_el0
   2d45c:	ldr	w26, [x24, x0]
   2d460:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d464:	ldr	x1, [x0, #2736]
   2d468:	add	x0, x0, #0xab0
   2d46c:	blr	x1
   2d470:	ldr	x25, [x24, x0]
   2d474:	mov	x8, x0
   2d478:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d47c:	ldr	x1, [x0, #2768]
   2d480:	add	x0, x0, #0xad0
   2d484:	blr	x1
   2d488:	ldr	x9, [x24, x0]
   2d48c:	cmp	x23, #0x6
   2d490:	str	x9, [sp, #32]
   2d494:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2d498:	str	x9, [x24, x8]
   2d49c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2d4a0:	str	x8, [x24, x0]
   2d4a4:	b.lt	2d578 <mpfr_expm1@@Base+0x174>  // b.tstop
   2d4a8:	ldr	w8, [x21, #8]
   2d4ac:	tbz	w8, #31, 2d578 <mpfr_expm1@@Base+0x174>
   2d4b0:	mov	w8, #0x40                  	// #64
   2d4b4:	sub	x9, x29, #0x8
   2d4b8:	mov	w10, #0x1                   	// #1
   2d4bc:	str	x8, [sp, #40]
   2d4c0:	str	x9, [sp, #64]
   2d4c4:	str	w10, [sp, #48]
   2d4c8:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
   2d4cc:	ldr	x2, [x2, #4048]
   2d4d0:	add	x0, sp, #0x28
   2d4d4:	mov	w3, #0x2                   	// #2
   2d4d8:	mov	x1, x21
   2d4dc:	bl	caf0 <mpfr_div@plt>
   2d4e0:	add	x0, sp, #0x28
   2d4e4:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   2d4e8:	mov	x2, xzr
   2d4ec:	bl	c890 <mpfr_cmp_si_2exp@plt>
   2d4f0:	cmp	w0, #0x1
   2d4f4:	b.lt	2d544 <mpfr_expm1@@Base+0x140>  // b.tstop
   2d4f8:	add	x0, sp, #0x28
   2d4fc:	mov	w1, #0x2                   	// #2
   2d500:	bl	c630 <mpfr_get_si@plt>
   2d504:	neg	x2, x0
   2d508:	cmp	x2, #0x1
   2d50c:	b.ge	2d550 <mpfr_expm1@@Base+0x14c>  // b.tcont
   2d510:	b	2d570 <mpfr_expm1@@Base+0x16c>
   2d514:	ldr	w8, [x21, #8]
   2d518:	cmp	w8, #0x1
   2d51c:	b.lt	2d7cc <mpfr_expm1@@Base+0x3c8>  // b.tstop
   2d520:	ldr	x8, [x19]
   2d524:	neg	x2, x23
   2d528:	add	x8, x8, #0x1
   2d52c:	cmp	x8, x2
   2d530:	b.cs	2d7e4 <mpfr_expm1@@Base+0x3e0>  // b.hs, b.nlast
   2d534:	mov	w3, #0x1                   	// #1
   2d538:	mov	x0, x19
   2d53c:	mov	x1, x21
   2d540:	b	2d998 <mpfr_expm1@@Base+0x594>
   2d544:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2d548:	cmp	x2, #0x1
   2d54c:	b.lt	2d570 <mpfr_expm1@@Base+0x16c>  // b.tstop
   2d550:	ldr	x8, [x19]
   2d554:	add	x8, x8, #0x1
   2d558:	cmp	x2, x8
   2d55c:	b.hi	2d8d4 <mpfr_expm1@@Base+0x4d0>  // b.pmore
   2d560:	mov	w9, wzr
   2d564:	cbz	w9, 2d570 <mpfr_expm1@@Base+0x16c>
   2d568:	cbnz	w9, 2d7ec <mpfr_expm1@@Base+0x3e8>
   2d56c:	b	2d578 <mpfr_expm1@@Base+0x174>
   2d570:	mov	w9, wzr
   2d574:	cbnz	w9, 2d7ec <mpfr_expm1@@Base+0x3e8>
   2d578:	ldr	x22, [x19]
   2d57c:	str	x25, [sp, #24]
   2d580:	subs	x25, x22, #0x1
   2d584:	b.eq	2d85c <mpfr_expm1@@Base+0x458>  // b.none
   2d588:	b.le	2d87c <mpfr_expm1@@Base+0x478>
   2d58c:	clz	x8, x25
   2d590:	mov	w9, #0x40                  	// #64
   2d594:	sub	x8, x9, x8
   2d598:	mov	w9, #0x6                   	// #6
   2d59c:	sub	x10, x9, x23
   2d5a0:	cmp	x23, #0x0
   2d5a4:	csel	x9, x10, x9, lt  // lt = tstop
   2d5a8:	add	x9, x9, x22
   2d5ac:	add	x23, x9, x8
   2d5b0:	add	x0, sp, #0x28
   2d5b4:	mov	x1, x23
   2d5b8:	bl	cf60 <mpfr_init2@plt>
   2d5bc:	sub	w8, w20, #0x1
   2d5c0:	cmp	w20, #0x0
   2d5c4:	str	w8, [sp, #12]
   2d5c8:	mov	w8, #0x40                  	// #64
   2d5cc:	cinc	x25, x22, eq  // eq = none
   2d5d0:	str	x8, [sp, #16]
   2d5d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d5d8:	ldr	x1, [x0, #2800]
   2d5dc:	add	x0, x0, #0xaf0
   2d5e0:	blr	x1
   2d5e4:	mov	x27, x0
   2d5e8:	str	wzr, [x24, x0]
   2d5ec:	add	x0, sp, #0x28
   2d5f0:	mov	x1, x21
   2d5f4:	mov	w2, wzr
   2d5f8:	bl	cc20 <mpfr_exp@plt>
   2d5fc:	ldr	w8, [x24, x27]
   2d600:	tbnz	w8, #1, 2d6cc <mpfr_expm1@@Base+0x2c8>
   2d604:	tbnz	w8, #0, 2d6ec <mpfr_expm1@@Base+0x2e8>
   2d608:	ldr	x27, [sp, #56]
   2d60c:	add	x0, sp, #0x28
   2d610:	add	x1, sp, #0x28
   2d614:	mov	w2, #0x1                   	// #1
   2d618:	mov	w3, wzr
   2d61c:	bl	ca00 <mpfr_sub_ui@plt>
   2d620:	ldr	x8, [sp, #56]
   2d624:	cmp	x8, x28
   2d628:	b.lt	2d68c <mpfr_expm1@@Base+0x288>  // b.tstop
   2d62c:	ldr	x9, [sp, #40]
   2d630:	sub	x8, x27, x8
   2d634:	bic	x8, x8, x8, asr #63
   2d638:	mvn	x8, x8
   2d63c:	add	x2, x23, x8
   2d640:	sub	x8, x9, #0x1
   2d644:	ldr	x0, [sp, #64]
   2d648:	add	x9, x9, #0x3e
   2d64c:	cmp	x8, #0x0
   2d650:	csel	x8, x9, x8, lt  // lt = tstop
   2d654:	asr	x8, x8, #6
   2d658:	add	x1, x8, #0x1
   2d65c:	mov	x3, x25
   2d660:	bl	c830 <mpfr_round_p@plt>
   2d664:	cbz	w0, 2d68c <mpfr_expm1@@Base+0x288>
   2d668:	ldr	w3, [sp, #48]
   2d66c:	add	x1, sp, #0x28
   2d670:	mov	x0, x19
   2d674:	mov	w2, w20
   2d678:	bl	cb70 <mpfr_set4@plt>
   2d67c:	mov	w22, w0
   2d680:	mov	w8, wzr
   2d684:	tbnz	w8, #0, 2d5d4 <mpfr_expm1@@Base+0x1d0>
   2d688:	b	2d74c <mpfr_expm1@@Base+0x348>
   2d68c:	ldr	x9, [sp, #16]
   2d690:	sub	x8, x28, x23
   2d694:	sub	x8, x8, #0x105
   2d698:	cmp	x9, x8
   2d69c:	mov	x8, x9
   2d6a0:	b.gt	2d72c <mpfr_expm1@@Base+0x328>
   2d6a4:	add	x23, x8, x23
   2d6a8:	cmp	x23, #0x0
   2d6ac:	cinc	x8, x23, lt  // lt = tstop
   2d6b0:	asr	x8, x8, #1
   2d6b4:	add	x0, sp, #0x28
   2d6b8:	mov	x1, x23
   2d6bc:	str	x8, [sp, #16]
   2d6c0:	bl	c330 <mpfr_set_prec@plt>
   2d6c4:	mov	w8, #0x1                   	// #1
   2d6c8:	b	2d684 <mpfr_expm1@@Base+0x280>
   2d6cc:	mov	w2, #0x1                   	// #1
   2d6d0:	mov	x0, x19
   2d6d4:	mov	w1, w20
   2d6d8:	bl	c3a0 <mpfr_overflow@plt>
   2d6dc:	mov	w22, w0
   2d6e0:	mov	w8, wzr
   2d6e4:	orr	w26, w26, #0x2
   2d6e8:	b	2d684 <mpfr_expm1@@Base+0x280>
   2d6ec:	mov	x1, #0xffffffffffffffff    	// #-1
   2d6f0:	mov	x0, x19
   2d6f4:	mov	x2, xzr
   2d6f8:	mov	w3, w20
   2d6fc:	bl	bed0 <mpfr_set_si_2exp@plt>
   2d700:	ldr	w8, [sp, #12]
   2d704:	cmp	w8, #0x1
   2d708:	b.hi	2d720 <mpfr_expm1@@Base+0x31c>  // b.pmore
   2d70c:	mov	x0, x19
   2d710:	bl	c930 <mpfr_nexttozero@plt>
   2d714:	mov	w8, wzr
   2d718:	mov	w22, #0x1                   	// #1
   2d71c:	b	2d684 <mpfr_expm1@@Base+0x280>
   2d720:	mov	w8, wzr
   2d724:	mov	w22, #0xffffffff            	// #-1
   2d728:	b	2d684 <mpfr_expm1@@Base+0x280>
   2d72c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2d730:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2d734:	mov	w1, #0xa5                  	// #165
   2d738:	add	x0, x0, #0x6c2
   2d73c:	add	x2, x2, #0x154
   2d740:	bl	d030 <mpfr_assert_fail@plt>
   2d744:	ldr	x8, [sp, #16]
   2d748:	b	2d6a4 <mpfr_expm1@@Base+0x2a0>
   2d74c:	add	x0, sp, #0x28
   2d750:	bl	c4f0 <mpfr_clear@plt>
   2d754:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d758:	ldr	x1, [x0, #2800]
   2d75c:	add	x0, x0, #0xaf0
   2d760:	blr	x1
   2d764:	str	w26, [x24, x0]
   2d768:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d76c:	ldr	x1, [x0, #2736]
   2d770:	add	x0, x0, #0xab0
   2d774:	blr	x1
   2d778:	ldr	x9, [sp, #24]
   2d77c:	str	x9, [x24, x0]
   2d780:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d784:	ldr	x1, [x0, #2768]
   2d788:	add	x0, x0, #0xad0
   2d78c:	blr	x1
   2d790:	ldr	x10, [sp, #32]
   2d794:	str	x10, [x24, x0]
   2d798:	ldr	x8, [x19, #16]
   2d79c:	cmp	x8, x10
   2d7a0:	b.gt	2d864 <mpfr_expm1@@Base+0x460>
   2d7a4:	cmp	x8, x9
   2d7a8:	b.lt	2d864 <mpfr_expm1@@Base+0x460>  // b.tstop
   2d7ac:	cbz	w22, 2d7ec <mpfr_expm1@@Base+0x3e8>
   2d7b0:	orr	w8, w26, #0x8
   2d7b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d7b8:	ldr	x1, [x0, #2800]
   2d7bc:	add	x0, x0, #0xaf0
   2d7c0:	blr	x1
   2d7c4:	str	w8, [x24, x0]
   2d7c8:	b	2d7ec <mpfr_expm1@@Base+0x3e8>
   2d7cc:	ldr	x8, [x19]
   2d7d0:	mov	w9, #0x1                   	// #1
   2d7d4:	sub	x2, x9, x23
   2d7d8:	add	x8, x8, #0x1
   2d7dc:	cmp	x2, x8
   2d7e0:	b.hi	2d98c <mpfr_expm1@@Base+0x588>  // b.pmore
   2d7e4:	mov	w8, wzr
   2d7e8:	cbz	w8, 2d448 <mpfr_expm1@@Base+0x44>
   2d7ec:	mov	w0, w22
   2d7f0:	ldp	x20, x19, [sp, #160]
   2d7f4:	ldp	x22, x21, [sp, #144]
   2d7f8:	ldp	x24, x23, [sp, #128]
   2d7fc:	ldp	x26, x25, [sp, #112]
   2d800:	ldp	x28, x27, [sp, #96]
   2d804:	ldp	x29, x30, [sp, #80]
   2d808:	add	sp, sp, #0xb0
   2d80c:	ret
   2d810:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2d814:	cmp	x23, x8
   2d818:	b.eq	2d898 <mpfr_expm1@@Base+0x494>  // b.none
   2d81c:	mov	x8, #0x2                   	// #2
   2d820:	movk	x8, #0x8000, lsl #48
   2d824:	cmp	x23, x8
   2d828:	b.ne	2d8bc <mpfr_expm1@@Base+0x4b8>  // b.any
   2d82c:	sub	x8, x28, #0x2
   2d830:	str	x8, [x19, #16]
   2d834:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d838:	ldr	x1, [x0, #2800]
   2d83c:	add	x0, x0, #0xaf0
   2d840:	blr	x1
   2d844:	mrs	x8, tpidr_el0
   2d848:	ldr	w9, [x8, x0]
   2d84c:	mov	w22, wzr
   2d850:	orr	w9, w9, #0x4
   2d854:	str	w9, [x8, x0]
   2d858:	b	2d7ec <mpfr_expm1@@Base+0x3e8>
   2d85c:	mov	x8, xzr
   2d860:	b	2d598 <mpfr_expm1@@Base+0x194>
   2d864:	mov	x0, x19
   2d868:	mov	w1, w22
   2d86c:	mov	w2, w20
   2d870:	bl	d020 <mpfr_check_range@plt>
   2d874:	mov	w22, w0
   2d878:	b	2d7ec <mpfr_expm1@@Base+0x3e8>
   2d87c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2d880:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2d884:	add	x0, x0, #0x6c2
   2d888:	add	x2, x2, #0x14b
   2d88c:	mov	w1, #0x72                  	// #114
   2d890:	bl	d030 <mpfr_assert_fail@plt>
   2d894:	b	2d58c <mpfr_expm1@@Base+0x188>
   2d898:	ldr	w8, [x21, #8]
   2d89c:	cmp	w8, #0x1
   2d8a0:	b.lt	2d9b4 <mpfr_expm1@@Base+0x5b0>  // b.tstop
   2d8a4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2d8a8:	mov	w9, #0x1                   	// #1
   2d8ac:	mov	w22, wzr
   2d8b0:	str	x8, [x19, #16]
   2d8b4:	str	w9, [x19, #8]
   2d8b8:	b	2d7ec <mpfr_expm1@@Base+0x3e8>
   2d8bc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2d8c0:	str	x8, [x19, #16]
   2d8c4:	ldr	w8, [x21, #8]
   2d8c8:	mov	w22, wzr
   2d8cc:	str	w8, [x19, #8]
   2d8d0:	b	2d7ec <mpfr_expm1@@Base+0x3e8>
   2d8d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d8d8:	ldr	x1, [x0, #2800]
   2d8dc:	add	x0, x0, #0xaf0
   2d8e0:	blr	x1
   2d8e4:	str	wzr, [x24, x0]
   2d8e8:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   2d8ec:	ldr	x1, [x1, #4000]
   2d8f0:	mov	x0, x19
   2d8f4:	mov	w3, wzr
   2d8f8:	mov	w4, w20
   2d8fc:	bl	ca10 <mpfr_round_near_x@plt>
   2d900:	cbz	w0, 2d9cc <mpfr_expm1@@Base+0x5c8>
   2d904:	mov	w8, w0
   2d908:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d90c:	ldr	x1, [x0, #2800]
   2d910:	add	x0, x0, #0xaf0
   2d914:	blr	x1
   2d918:	ldr	w9, [x24, x0]
   2d91c:	orr	w26, w9, w26
   2d920:	str	w26, [x24, x0]
   2d924:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d928:	ldr	x1, [x0, #2736]
   2d92c:	add	x0, x0, #0xab0
   2d930:	blr	x1
   2d934:	str	x25, [x24, x0]
   2d938:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d93c:	ldr	x1, [x0, #2768]
   2d940:	add	x0, x0, #0xad0
   2d944:	blr	x1
   2d948:	ldr	x10, [sp, #32]
   2d94c:	str	x10, [x24, x0]
   2d950:	ldr	x9, [x19, #16]
   2d954:	cmp	x9, x10
   2d958:	b.gt	2d9d8 <mpfr_expm1@@Base+0x5d4>
   2d95c:	cmp	x9, x25
   2d960:	b.lt	2d9d8 <mpfr_expm1@@Base+0x5d4>  // b.tstop
   2d964:	orr	w9, w26, #0x8
   2d968:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2d96c:	ldr	x1, [x0, #2800]
   2d970:	add	x0, x0, #0xaf0
   2d974:	blr	x1
   2d978:	str	w9, [x24, x0]
   2d97c:	mov	w9, #0x1                   	// #1
   2d980:	mov	w22, w8
   2d984:	cbnz	w9, 2d564 <mpfr_expm1@@Base+0x160>
   2d988:	b	2d560 <mpfr_expm1@@Base+0x15c>
   2d98c:	mov	x0, x19
   2d990:	mov	x1, x21
   2d994:	mov	w3, wzr
   2d998:	mov	w4, w20
   2d99c:	bl	ca10 <mpfr_round_near_x@plt>
   2d9a0:	cmp	w0, #0x0
   2d9a4:	mov	w22, w0
   2d9a8:	cset	w8, ne  // ne = any
   2d9ac:	cbnz	w0, 2d7e8 <mpfr_expm1@@Base+0x3e4>
   2d9b0:	b	2d7e4 <mpfr_expm1@@Base+0x3e0>
   2d9b4:	mov	x1, #0xffffffffffffffff    	// #-1
   2d9b8:	mov	x0, x19
   2d9bc:	mov	x2, xzr
   2d9c0:	mov	w3, w20
   2d9c4:	bl	bed0 <mpfr_set_si_2exp@plt>
   2d9c8:	b	2d874 <mpfr_expm1@@Base+0x470>
   2d9cc:	mov	w9, wzr
   2d9d0:	cbnz	w9, 2d564 <mpfr_expm1@@Base+0x160>
   2d9d4:	b	2d560 <mpfr_expm1@@Base+0x15c>
   2d9d8:	mov	x0, x19
   2d9dc:	mov	w1, w8
   2d9e0:	mov	w2, w20
   2d9e4:	bl	d020 <mpfr_check_range@plt>
   2d9e8:	mov	w22, w0
   2d9ec:	mov	w9, #0x1                   	// #1
   2d9f0:	cbnz	w9, 2d564 <mpfr_expm1@@Base+0x160>
   2d9f4:	b	2d560 <mpfr_expm1@@Base+0x15c>

000000000002d9f8 <mpfr_log2@@Base>:
   2d9f8:	sub	sp, sp, #0xa0
   2d9fc:	stp	x29, x30, [sp, #64]
   2da00:	stp	x28, x27, [sp, #80]
   2da04:	stp	x26, x25, [sp, #96]
   2da08:	stp	x24, x23, [sp, #112]
   2da0c:	stp	x22, x21, [sp, #128]
   2da10:	stp	x20, x19, [sp, #144]
   2da14:	ldr	x8, [x1, #16]
   2da18:	mov	x9, #0x2                   	// #2
   2da1c:	movk	x9, #0x8000, lsl #48
   2da20:	add	x9, x9, #0x2
   2da24:	mov	x21, x1
   2da28:	cmp	x8, x9
   2da2c:	mov	x19, x0
   2da30:	add	x29, sp, #0x40
   2da34:	b.lt	2dcb4 <mpfr_log2@@Base+0x2bc>  // b.tstop
   2da38:	ldr	w8, [x21, #8]
   2da3c:	tbnz	w8, #31, 2dd94 <mpfr_log2@@Base+0x39c>
   2da40:	mov	w20, w2
   2da44:	mov	w1, #0x1                   	// #1
   2da48:	mov	x0, x21
   2da4c:	mov	x2, xzr
   2da50:	mov	w22, #0x1                   	// #1
   2da54:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   2da58:	cbz	w0, 2dd08 <mpfr_log2@@Base+0x310>
   2da5c:	ldr	x8, [x21, #16]
   2da60:	mov	w1, #0x1                   	// #1
   2da64:	mov	x0, x21
   2da68:	sub	x2, x8, #0x1
   2da6c:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   2da70:	cbz	w0, 2dd1c <mpfr_log2@@Base+0x324>
   2da74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2da78:	ldr	x1, [x0, #2800]
   2da7c:	add	x0, x0, #0xaf0
   2da80:	blr	x1
   2da84:	mrs	x27, tpidr_el0
   2da88:	ldr	w28, [x27, x0]
   2da8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2da90:	ldr	x1, [x0, #2736]
   2da94:	add	x0, x0, #0xab0
   2da98:	blr	x1
   2da9c:	ldr	x23, [x27, x0]
   2daa0:	mov	x8, x0
   2daa4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2daa8:	ldr	x1, [x0, #2768]
   2daac:	add	x0, x0, #0xad0
   2dab0:	blr	x1
   2dab4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2dab8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2dabc:	ldr	x25, [x27, x0]
   2dac0:	str	x9, [x27, x8]
   2dac4:	str	x10, [x27, x0]
   2dac8:	ldr	x24, [x19]
   2dacc:	subs	x26, x24, #0x1
   2dad0:	add	x22, x24, #0x3
   2dad4:	b.eq	2dd38 <mpfr_log2@@Base+0x340>  // b.none
   2dad8:	b.le	2dd58 <mpfr_log2@@Base+0x360>
   2dadc:	clz	x8, x26
   2dae0:	mov	w9, #0x40                  	// #64
   2dae4:	sub	x8, x9, x8
   2dae8:	add	x22, x22, x8
   2daec:	add	x0, sp, #0x20
   2daf0:	mov	x1, x22
   2daf4:	bl	cf60 <mpfr_init2@plt>
   2daf8:	mov	x0, sp
   2dafc:	mov	x1, x22
   2db00:	bl	cf60 <mpfr_init2@plt>
   2db04:	cmp	w20, #0x0
   2db08:	mov	w26, #0x40                  	// #64
   2db0c:	cinc	x24, x24, eq  // eq = none
   2db10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2db14:	ldr	x1, [x0, #2784]
   2db18:	add	x0, x0, #0xae0
   2db1c:	blr	x1
   2db20:	add	x1, x27, x0
   2db24:	add	x0, sp, #0x20
   2db28:	mov	w2, #0x3                   	// #3
   2db2c:	bl	c840 <mpfr_cache@plt>
   2db30:	mov	x0, sp
   2db34:	mov	x1, x21
   2db38:	mov	w2, wzr
   2db3c:	bl	c520 <mpfr_log@plt>
   2db40:	add	x0, sp, #0x20
   2db44:	mov	x1, sp
   2db48:	add	x2, sp, #0x20
   2db4c:	mov	w3, wzr
   2db50:	bl	caf0 <mpfr_div@plt>
   2db54:	ldr	x8, [sp, #48]
   2db58:	mov	x9, #0x2                   	// #2
   2db5c:	movk	x9, #0x8000, lsl #48
   2db60:	add	x9, x9, #0x2
   2db64:	cmp	x8, x9
   2db68:	b.lt	2db9c <mpfr_log2@@Base+0x1a4>  // b.tstop
   2db6c:	ldr	x8, [sp, #32]
   2db70:	ldr	x0, [sp, #56]
   2db74:	sub	x2, x22, #0x3
   2db78:	mov	x3, x24
   2db7c:	sub	x9, x8, #0x1
   2db80:	add	x8, x8, #0x3e
   2db84:	cmp	x9, #0x0
   2db88:	csel	x8, x8, x9, lt  // lt = tstop
   2db8c:	asr	x8, x8, #6
   2db90:	add	x1, x8, #0x1
   2db94:	bl	c830 <mpfr_round_p@plt>
   2db98:	cbnz	w0, 2dbfc <mpfr_log2@@Base+0x204>
   2db9c:	mov	x8, #0x2                   	// #2
   2dba0:	movk	x8, #0x8000, lsl #48
   2dba4:	sub	x8, x8, x22
   2dba8:	sub	x8, x8, #0x103
   2dbac:	cmp	x26, x8
   2dbb0:	b.gt	2dbe0 <mpfr_log2@@Base+0x1e8>
   2dbb4:	add	x22, x22, x26
   2dbb8:	cmp	x22, #0x0
   2dbbc:	cinc	x8, x22, lt  // lt = tstop
   2dbc0:	add	x0, sp, #0x20
   2dbc4:	mov	x1, x22
   2dbc8:	asr	x26, x8, #1
   2dbcc:	bl	c330 <mpfr_set_prec@plt>
   2dbd0:	mov	x0, sp
   2dbd4:	mov	x1, x22
   2dbd8:	bl	c330 <mpfr_set_prec@plt>
   2dbdc:	b	2db10 <mpfr_log2@@Base+0x118>
   2dbe0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   2dbe4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2dbe8:	mov	w1, #0x80                  	// #128
   2dbec:	add	x0, x0, #0x746
   2dbf0:	add	x2, x2, #0x154
   2dbf4:	bl	d030 <mpfr_assert_fail@plt>
   2dbf8:	b	2dbb4 <mpfr_log2@@Base+0x1bc>
   2dbfc:	ldr	w3, [sp, #40]
   2dc00:	add	x1, sp, #0x20
   2dc04:	mov	x0, x19
   2dc08:	mov	w2, w20
   2dc0c:	bl	cb70 <mpfr_set4@plt>
   2dc10:	mov	w21, w0
   2dc14:	add	x0, sp, #0x20
   2dc18:	bl	c4f0 <mpfr_clear@plt>
   2dc1c:	mov	x0, sp
   2dc20:	bl	c4f0 <mpfr_clear@plt>
   2dc24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2dc28:	ldr	x1, [x0, #2800]
   2dc2c:	add	x0, x0, #0xaf0
   2dc30:	blr	x1
   2dc34:	str	w28, [x27, x0]
   2dc38:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2dc3c:	ldr	x1, [x0, #2736]
   2dc40:	add	x0, x0, #0xab0
   2dc44:	blr	x1
   2dc48:	str	x23, [x27, x0]
   2dc4c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2dc50:	ldr	x1, [x0, #2768]
   2dc54:	add	x0, x0, #0xad0
   2dc58:	blr	x1
   2dc5c:	str	x25, [x27, x0]
   2dc60:	ldr	x8, [x19, #16]
   2dc64:	cmp	x8, x25
   2dc68:	b.gt	2dd40 <mpfr_log2@@Base+0x348>
   2dc6c:	cmp	x8, x23
   2dc70:	b.lt	2dd40 <mpfr_log2@@Base+0x348>  // b.tstop
   2dc74:	cbz	w21, 2dc90 <mpfr_log2@@Base+0x298>
   2dc78:	orr	w8, w28, #0x8
   2dc7c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2dc80:	ldr	x1, [x0, #2800]
   2dc84:	add	x0, x0, #0xaf0
   2dc88:	blr	x1
   2dc8c:	str	w8, [x27, x0]
   2dc90:	mov	w0, w21
   2dc94:	ldp	x20, x19, [sp, #144]
   2dc98:	ldp	x22, x21, [sp, #128]
   2dc9c:	ldp	x24, x23, [sp, #112]
   2dca0:	ldp	x26, x25, [sp, #96]
   2dca4:	ldp	x28, x27, [sp, #80]
   2dca8:	ldp	x29, x30, [sp, #64]
   2dcac:	add	sp, sp, #0xa0
   2dcb0:	ret
   2dcb4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2dcb8:	cmp	x8, x9
   2dcbc:	b.eq	2dd74 <mpfr_log2@@Base+0x37c>  // b.none
   2dcc0:	mov	x9, #0x2                   	// #2
   2dcc4:	movk	x9, #0x8000, lsl #48
   2dcc8:	cmp	x8, x9
   2dccc:	b.eq	2dd94 <mpfr_log2@@Base+0x39c>  // b.none
   2dcd0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2dcd4:	mov	w9, #0xffffffff            	// #-1
   2dcd8:	str	x8, [x19, #16]
   2dcdc:	str	w9, [x19, #8]
   2dce0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2dce4:	ldr	x1, [x0, #2800]
   2dce8:	add	x0, x0, #0xaf0
   2dcec:	blr	x1
   2dcf0:	mrs	x8, tpidr_el0
   2dcf4:	ldr	w9, [x8, x0]
   2dcf8:	mov	w21, wzr
   2dcfc:	orr	w9, w9, #0x20
   2dd00:	str	w9, [x8, x0]
   2dd04:	b	2dc90 <mpfr_log2@@Base+0x298>
   2dd08:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2dd0c:	mov	w21, wzr
   2dd10:	str	x8, [x19, #16]
   2dd14:	str	w22, [x19, #8]
   2dd18:	b	2dc90 <mpfr_log2@@Base+0x298>
   2dd1c:	ldr	x8, [x21, #16]
   2dd20:	mov	x0, x19
   2dd24:	mov	x2, xzr
   2dd28:	mov	w3, w20
   2dd2c:	sub	x1, x8, #0x1
   2dd30:	bl	bed0 <mpfr_set_si_2exp@plt>
   2dd34:	b	2dd50 <mpfr_log2@@Base+0x358>
   2dd38:	mov	x8, xzr
   2dd3c:	b	2dae8 <mpfr_log2@@Base+0xf0>
   2dd40:	mov	x0, x19
   2dd44:	mov	w1, w21
   2dd48:	mov	w2, w20
   2dd4c:	bl	d020 <mpfr_check_range@plt>
   2dd50:	mov	w21, w0
   2dd54:	b	2dc90 <mpfr_log2@@Base+0x298>
   2dd58:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   2dd5c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2dd60:	add	x0, x0, #0x746
   2dd64:	add	x2, x2, #0x14b
   2dd68:	mov	w1, #0x6b                  	// #107
   2dd6c:	bl	d030 <mpfr_assert_fail@plt>
   2dd70:	b	2dadc <mpfr_log2@@Base+0xe4>
   2dd74:	ldr	w8, [x21, #8]
   2dd78:	tbnz	w8, #31, 2dd94 <mpfr_log2@@Base+0x39c>
   2dd7c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2dd80:	mov	w9, #0x1                   	// #1
   2dd84:	mov	w21, wzr
   2dd88:	str	x8, [x19, #16]
   2dd8c:	str	w9, [x19, #8]
   2dd90:	b	2dc90 <mpfr_log2@@Base+0x298>
   2dd94:	mov	x8, #0x2                   	// #2
   2dd98:	movk	x8, #0x8000, lsl #48
   2dd9c:	str	x8, [x19, #16]
   2dda0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2dda4:	ldr	x1, [x0, #2800]
   2dda8:	add	x0, x0, #0xaf0
   2ddac:	blr	x1
   2ddb0:	mrs	x8, tpidr_el0
   2ddb4:	ldr	w9, [x8, x0]
   2ddb8:	mov	w21, wzr
   2ddbc:	orr	w9, w9, #0x4
   2ddc0:	str	w9, [x8, x0]
   2ddc4:	b	2dc90 <mpfr_log2@@Base+0x298>

000000000002ddc8 <mpfr_log10@@Base>:
   2ddc8:	sub	sp, sp, #0xb0
   2ddcc:	stp	x29, x30, [sp, #80]
   2ddd0:	stp	x28, x27, [sp, #96]
   2ddd4:	stp	x26, x25, [sp, #112]
   2ddd8:	stp	x24, x23, [sp, #128]
   2dddc:	stp	x22, x21, [sp, #144]
   2dde0:	stp	x20, x19, [sp, #160]
   2dde4:	ldr	x8, [x1, #16]
   2dde8:	mov	x10, #0x2                   	// #2
   2ddec:	movk	x10, #0x8000, lsl #48
   2ddf0:	add	x9, x10, #0x2
   2ddf4:	mov	x21, x1
   2ddf8:	cmp	x8, x9
   2ddfc:	mov	x19, x0
   2de00:	add	x29, sp, #0x50
   2de04:	b.lt	2e0f0 <mpfr_log10@@Base+0x328>  // b.tstop
   2de08:	ldr	w8, [x21, #8]
   2de0c:	tbnz	w8, #31, 2e1a0 <mpfr_log10@@Base+0x3d8>
   2de10:	mov	w20, w2
   2de14:	mov	w1, #0x1                   	// #1
   2de18:	mov	x0, x21
   2de1c:	mov	x2, xzr
   2de20:	mov	w22, #0x1                   	// #1
   2de24:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   2de28:	cbz	w0, 2e0bc <mpfr_log10@@Base+0x2f4>
   2de2c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2de30:	ldr	x1, [x0, #2800]
   2de34:	add	x0, x0, #0xaf0
   2de38:	blr	x1
   2de3c:	mrs	x26, tpidr_el0
   2de40:	ldr	w28, [x26, x0]
   2de44:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2de48:	ldr	x1, [x0, #2736]
   2de4c:	add	x0, x0, #0xab0
   2de50:	blr	x1
   2de54:	ldr	x23, [x26, x0]
   2de58:	mov	x8, x0
   2de5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2de60:	ldr	x1, [x0, #2768]
   2de64:	add	x0, x0, #0xad0
   2de68:	blr	x1
   2de6c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2de70:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2de74:	ldr	x25, [x26, x0]
   2de78:	str	x9, [x26, x8]
   2de7c:	str	x10, [x26, x0]
   2de80:	ldr	x24, [x19]
   2de84:	subs	x27, x24, #0x1
   2de88:	add	x22, x24, #0x4
   2de8c:	b.eq	2e144 <mpfr_log10@@Base+0x37c>  // b.none
   2de90:	b.le	2e164 <mpfr_log10@@Base+0x39c>
   2de94:	clz	x8, x27
   2de98:	mov	w9, #0x40                  	// #64
   2de9c:	sub	x8, x9, x8
   2dea0:	add	x22, x22, x8
   2dea4:	sub	x0, x29, #0x20
   2dea8:	mov	x1, x22
   2deac:	bl	cf60 <mpfr_init2@plt>
   2deb0:	add	x0, sp, #0x10
   2deb4:	mov	x1, x22
   2deb8:	bl	cf60 <mpfr_init2@plt>
   2debc:	cmp	w20, #0x0
   2dec0:	mov	x27, #0x2                   	// #2
   2dec4:	mov	w8, #0x40                  	// #64
   2dec8:	cinc	x24, x24, eq  // eq = none
   2decc:	movk	x27, #0x8000, lsl #48
   2ded0:	str	x8, [sp, #8]
   2ded4:	sub	x0, x29, #0x20
   2ded8:	mov	w1, #0xa                   	// #10
   2dedc:	mov	x2, xzr
   2dee0:	mov	w3, wzr
   2dee4:	bl	cac0 <mpfr_set_ui_2exp@plt>
   2dee8:	sub	x0, x29, #0x20
   2deec:	sub	x1, x29, #0x20
   2def0:	mov	w2, #0x3                   	// #3
   2def4:	bl	c520 <mpfr_log@plt>
   2def8:	add	x0, sp, #0x10
   2defc:	mov	x1, x21
   2df00:	mov	w2, wzr
   2df04:	bl	c520 <mpfr_log@plt>
   2df08:	sub	x0, x29, #0x20
   2df0c:	add	x1, sp, #0x10
   2df10:	sub	x2, x29, #0x20
   2df14:	mov	w3, wzr
   2df18:	bl	caf0 <mpfr_div@plt>
   2df1c:	ldur	x8, [x29, #-16]
   2df20:	add	x9, x27, #0x2
   2df24:	cmp	x8, x9
   2df28:	b.lt	2df5c <mpfr_log10@@Base+0x194>  // b.tstop
   2df2c:	ldur	x8, [x29, #-32]
   2df30:	ldur	x0, [x29, #-8]
   2df34:	sub	x2, x22, #0x4
   2df38:	mov	x3, x24
   2df3c:	sub	x9, x8, #0x1
   2df40:	add	x8, x8, #0x3e
   2df44:	cmp	x9, #0x0
   2df48:	csel	x8, x8, x9, lt  // lt = tstop
   2df4c:	asr	x8, x8, #6
   2df50:	add	x1, x8, #0x1
   2df54:	bl	c830 <mpfr_round_p@plt>
   2df58:	cbnz	w0, 2e024 <mpfr_log10@@Base+0x25c>
   2df5c:	ldur	w8, [x29, #-24]
   2df60:	cmp	w8, #0x1
   2df64:	b.lt	2dfbc <mpfr_log10@@Base+0x1f4>  // b.tstop
   2df68:	sub	x0, x29, #0x20
   2df6c:	bl	c600 <mpfr_integer_p@plt>
   2df70:	cbz	w0, 2dfbc <mpfr_log10@@Base+0x1f4>
   2df74:	sub	x0, x29, #0x20
   2df78:	mov	w1, wzr
   2df7c:	bl	c2b0 <mpfr_fits_ulong_p@plt>
   2df80:	cbz	w0, 2dfbc <mpfr_log10@@Base+0x1f4>
   2df84:	sub	x0, x29, #0x20
   2df88:	mov	w1, wzr
   2df8c:	bl	c100 <mpfr_get_ui@plt>
   2df90:	mov	x2, x0
   2df94:	add	x0, sp, #0x10
   2df98:	mov	w1, #0xa                   	// #10
   2df9c:	mov	w3, wzr
   2dfa0:	bl	bf80 <mpfr_ui_pow_ui@plt>
   2dfa4:	cbnz	w0, 2dfbc <mpfr_log10@@Base+0x1f4>
   2dfa8:	add	x1, sp, #0x10
   2dfac:	mov	w2, #0x1                   	// #1
   2dfb0:	mov	x0, x21
   2dfb4:	bl	ce90 <mpfr_cmp3@plt>
   2dfb8:	cbz	w0, 2e024 <mpfr_log10@@Base+0x25c>
   2dfbc:	ldr	x9, [sp, #8]
   2dfc0:	sub	x8, x27, x22
   2dfc4:	sub	x8, x8, #0x103
   2dfc8:	cmp	x9, x8
   2dfcc:	mov	x8, x9
   2dfd0:	b.gt	2e004 <mpfr_log10@@Base+0x23c>
   2dfd4:	add	x22, x8, x22
   2dfd8:	cmp	x22, #0x0
   2dfdc:	cinc	x8, x22, lt  // lt = tstop
   2dfe0:	asr	x8, x8, #1
   2dfe4:	sub	x0, x29, #0x20
   2dfe8:	mov	x1, x22
   2dfec:	str	x8, [sp, #8]
   2dff0:	bl	c330 <mpfr_set_prec@plt>
   2dff4:	add	x0, sp, #0x10
   2dff8:	mov	x1, x22
   2dffc:	bl	c330 <mpfr_set_prec@plt>
   2e000:	b	2ded4 <mpfr_log10@@Base+0x10c>
   2e004:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2e008:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2e00c:	mov	w1, #0x88                  	// #136
   2e010:	add	x0, x0, #0x6ca
   2e014:	add	x2, x2, #0x154
   2e018:	bl	d030 <mpfr_assert_fail@plt>
   2e01c:	ldr	x8, [sp, #8]
   2e020:	b	2dfd4 <mpfr_log10@@Base+0x20c>
   2e024:	ldur	w3, [x29, #-24]
   2e028:	sub	x1, x29, #0x20
   2e02c:	mov	x0, x19
   2e030:	mov	w2, w20
   2e034:	bl	cb70 <mpfr_set4@plt>
   2e038:	mov	w21, w0
   2e03c:	sub	x0, x29, #0x20
   2e040:	bl	c4f0 <mpfr_clear@plt>
   2e044:	add	x0, sp, #0x10
   2e048:	bl	c4f0 <mpfr_clear@plt>
   2e04c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e050:	ldr	x1, [x0, #2800]
   2e054:	add	x0, x0, #0xaf0
   2e058:	blr	x1
   2e05c:	str	w28, [x26, x0]
   2e060:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e064:	ldr	x1, [x0, #2736]
   2e068:	add	x0, x0, #0xab0
   2e06c:	blr	x1
   2e070:	str	x23, [x26, x0]
   2e074:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e078:	ldr	x1, [x0, #2768]
   2e07c:	add	x0, x0, #0xad0
   2e080:	blr	x1
   2e084:	str	x25, [x26, x0]
   2e088:	ldr	x8, [x19, #16]
   2e08c:	cmp	x8, x25
   2e090:	b.gt	2e14c <mpfr_log10@@Base+0x384>
   2e094:	cmp	x8, x23
   2e098:	b.lt	2e14c <mpfr_log10@@Base+0x384>  // b.tstop
   2e09c:	cbz	w21, 2e0cc <mpfr_log10@@Base+0x304>
   2e0a0:	orr	w8, w28, #0x8
   2e0a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e0a8:	ldr	x1, [x0, #2800]
   2e0ac:	add	x0, x0, #0xaf0
   2e0b0:	blr	x1
   2e0b4:	str	w8, [x26, x0]
   2e0b8:	b	2e0cc <mpfr_log10@@Base+0x304>
   2e0bc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2e0c0:	mov	w21, wzr
   2e0c4:	str	x8, [x19, #16]
   2e0c8:	str	w22, [x19, #8]
   2e0cc:	mov	w0, w21
   2e0d0:	ldp	x20, x19, [sp, #160]
   2e0d4:	ldp	x22, x21, [sp, #144]
   2e0d8:	ldp	x24, x23, [sp, #128]
   2e0dc:	ldp	x26, x25, [sp, #112]
   2e0e0:	ldp	x28, x27, [sp, #96]
   2e0e4:	ldp	x29, x30, [sp, #80]
   2e0e8:	add	sp, sp, #0xb0
   2e0ec:	ret
   2e0f0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2e0f4:	cmp	x8, x9
   2e0f8:	b.eq	2e180 <mpfr_log10@@Base+0x3b8>  // b.none
   2e0fc:	mov	x9, #0x2                   	// #2
   2e100:	movk	x9, #0x8000, lsl #48
   2e104:	cmp	x8, x9
   2e108:	b.eq	2e1a0 <mpfr_log10@@Base+0x3d8>  // b.none
   2e10c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2e110:	mov	w9, #0xffffffff            	// #-1
   2e114:	str	x8, [x19, #16]
   2e118:	str	w9, [x19, #8]
   2e11c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e120:	ldr	x1, [x0, #2800]
   2e124:	add	x0, x0, #0xaf0
   2e128:	blr	x1
   2e12c:	mrs	x8, tpidr_el0
   2e130:	ldr	w9, [x8, x0]
   2e134:	mov	w21, wzr
   2e138:	orr	w9, w9, #0x20
   2e13c:	str	w9, [x8, x0]
   2e140:	b	2e0cc <mpfr_log10@@Base+0x304>
   2e144:	mov	x8, xzr
   2e148:	b	2dea0 <mpfr_log10@@Base+0xd8>
   2e14c:	mov	x0, x19
   2e150:	mov	w1, w21
   2e154:	mov	w2, w20
   2e158:	bl	d020 <mpfr_check_range@plt>
   2e15c:	mov	w21, w0
   2e160:	b	2e0cc <mpfr_log10@@Base+0x304>
   2e164:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2e168:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2e16c:	add	x0, x0, #0x6ca
   2e170:	add	x2, x2, #0x14b
   2e174:	mov	w1, #0x69                  	// #105
   2e178:	bl	d030 <mpfr_assert_fail@plt>
   2e17c:	b	2de94 <mpfr_log10@@Base+0xcc>
   2e180:	ldr	w8, [x21, #8]
   2e184:	tbnz	w8, #31, 2e1a0 <mpfr_log10@@Base+0x3d8>
   2e188:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2e18c:	mov	w9, #0x1                   	// #1
   2e190:	mov	w21, wzr
   2e194:	str	x8, [x19, #16]
   2e198:	str	w9, [x19, #8]
   2e19c:	b	2e0cc <mpfr_log10@@Base+0x304>
   2e1a0:	str	x10, [x19, #16]
   2e1a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e1a8:	ldr	x1, [x0, #2800]
   2e1ac:	add	x0, x0, #0xaf0
   2e1b0:	blr	x1
   2e1b4:	mrs	x8, tpidr_el0
   2e1b8:	ldr	w9, [x8, x0]
   2e1bc:	mov	w21, wzr
   2e1c0:	orr	w9, w9, #0x4
   2e1c4:	str	w9, [x8, x0]
   2e1c8:	b	2e0cc <mpfr_log10@@Base+0x304>

000000000002e1cc <mpfr_ui_pow@@Base>:
   2e1cc:	sub	sp, sp, #0x90
   2e1d0:	stp	x29, x30, [sp, #48]
   2e1d4:	stp	x28, x27, [sp, #64]
   2e1d8:	stp	x26, x25, [sp, #80]
   2e1dc:	stp	x24, x23, [sp, #96]
   2e1e0:	stp	x22, x21, [sp, #112]
   2e1e4:	stp	x20, x19, [sp, #128]
   2e1e8:	add	x29, sp, #0x30
   2e1ec:	mov	w19, w3
   2e1f0:	mov	x21, x2
   2e1f4:	mov	x8, x1
   2e1f8:	mov	x20, x0
   2e1fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e200:	ldr	x1, [x0, #2800]
   2e204:	add	x0, x0, #0xaf0
   2e208:	blr	x1
   2e20c:	mrs	x25, tpidr_el0
   2e210:	ldr	w27, [x25, x0]
   2e214:	mov	x22, x0
   2e218:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e21c:	ldr	x1, [x0, #2736]
   2e220:	add	x0, x0, #0xab0
   2e224:	blr	x1
   2e228:	ldr	x26, [x25, x0]
   2e22c:	mov	x23, x0
   2e230:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e234:	ldr	x1, [x0, #2768]
   2e238:	add	x0, x0, #0xad0
   2e23c:	blr	x1
   2e240:	ldr	x28, [x25, x0]
   2e244:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2e248:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2e24c:	mov	x24, x0
   2e250:	mov	w11, #0x40                  	// #64
   2e254:	add	x12, sp, #0x8
   2e258:	str	x9, [x25, x23]
   2e25c:	str	x10, [x25, x0]
   2e260:	mov	w9, #0x1                   	// #1
   2e264:	add	x0, sp, #0x10
   2e268:	mov	x1, x8
   2e26c:	mov	x2, xzr
   2e270:	mov	w3, wzr
   2e274:	str	x11, [sp, #16]
   2e278:	str	x12, [sp, #40]
   2e27c:	str	w9, [sp, #24]
   2e280:	bl	cac0 <mpfr_set_ui_2exp@plt>
   2e284:	add	x1, sp, #0x10
   2e288:	mov	x0, x20
   2e28c:	mov	x2, x21
   2e290:	mov	w3, w19
   2e294:	bl	c1f0 <mpfr_pow@plt>
   2e298:	ldr	w8, [x25, x22]
   2e29c:	str	x26, [x25, x23]
   2e2a0:	str	x28, [x25, x24]
   2e2a4:	orr	w9, w8, w27
   2e2a8:	str	w9, [x25, x22]
   2e2ac:	ldr	x10, [x20, #16]
   2e2b0:	mov	w8, w0
   2e2b4:	cmp	x10, x28
   2e2b8:	b.gt	2e304 <mpfr_ui_pow@@Base+0x138>
   2e2bc:	cmp	x10, x26
   2e2c0:	b.lt	2e304 <mpfr_ui_pow@@Base+0x138>  // b.tstop
   2e2c4:	cbz	w8, 2e2e0 <mpfr_ui_pow@@Base+0x114>
   2e2c8:	orr	w9, w9, #0x8
   2e2cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e2d0:	ldr	x1, [x0, #2800]
   2e2d4:	add	x0, x0, #0xaf0
   2e2d8:	blr	x1
   2e2dc:	str	w9, [x25, x0]
   2e2e0:	ldp	x20, x19, [sp, #128]
   2e2e4:	ldp	x22, x21, [sp, #112]
   2e2e8:	ldp	x24, x23, [sp, #96]
   2e2ec:	ldp	x26, x25, [sp, #80]
   2e2f0:	ldp	x28, x27, [sp, #64]
   2e2f4:	ldp	x29, x30, [sp, #48]
   2e2f8:	mov	w0, w8
   2e2fc:	add	sp, sp, #0x90
   2e300:	ret
   2e304:	mov	x0, x20
   2e308:	mov	w1, w8
   2e30c:	mov	w2, w19
   2e310:	bl	d020 <mpfr_check_range@plt>
   2e314:	mov	w8, w0
   2e318:	b	2e2e0 <mpfr_ui_pow@@Base+0x114>

000000000002e31c <mpfr_ui_pow_ui@@Base>:
   2e31c:	sub	sp, sp, #0xc0
   2e320:	stp	x29, x30, [sp, #96]
   2e324:	stp	x22, x21, [sp, #160]
   2e328:	stp	x20, x19, [sp, #176]
   2e32c:	add	x29, sp, #0x60
   2e330:	mov	w19, w3
   2e334:	mov	x21, x1
   2e338:	cmp	x2, #0x1
   2e33c:	stp	x28, x27, [sp, #112]
   2e340:	stp	x26, x25, [sp, #128]
   2e344:	stp	x24, x23, [sp, #144]
   2e348:	stur	x0, [x29, #-40]
   2e34c:	b.ls	2e624 <mpfr_ui_pow_ui@@Base+0x308>  // b.plast
   2e350:	cmp	x21, #0x2
   2e354:	b.cc	2e634 <mpfr_ui_pow_ui@@Base+0x318>  // b.lo, b.ul, b.last
   2e358:	clz	x8, x2
   2e35c:	mov	w10, #0x40                  	// #64
   2e360:	mov	w9, #0x40                  	// #64
   2e364:	sub	w8, w10, w8
   2e368:	cmp	x2, #0x0
   2e36c:	mov	x22, x2
   2e370:	str	x9, [sp]
   2e374:	csel	w28, wzr, w8, eq  // eq = none
   2e378:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e37c:	ldr	x1, [x0, #2800]
   2e380:	add	x0, x0, #0xaf0
   2e384:	blr	x1
   2e388:	mrs	x11, tpidr_el0
   2e38c:	ldr	w8, [x11, x0]
   2e390:	str	w8, [sp, #28]
   2e394:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e398:	ldr	x1, [x0, #2736]
   2e39c:	add	x0, x0, #0xab0
   2e3a0:	blr	x1
   2e3a4:	ldr	x9, [x11, x0]
   2e3a8:	mov	x8, x0
   2e3ac:	str	x9, [sp, #16]
   2e3b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e3b4:	ldr	x1, [x0, #2768]
   2e3b8:	add	x0, x0, #0xad0
   2e3bc:	blr	x1
   2e3c0:	ldr	x9, [x11, x0]
   2e3c4:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2e3c8:	str	x10, [x11, x0]
   2e3cc:	sub	x0, x29, #0x20
   2e3d0:	str	x9, [sp, #8]
   2e3d4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2e3d8:	str	x9, [x11, x8]
   2e3dc:	ldur	x8, [x29, #-40]
   2e3e0:	add	w9, w28, #0x3
   2e3e4:	str	x11, [sp, #32]
   2e3e8:	ldr	x8, [x8]
   2e3ec:	add	x23, x8, x9
   2e3f0:	mov	x1, x23
   2e3f4:	bl	cf60 <mpfr_init2@plt>
   2e3f8:	cmp	w19, #0x0
   2e3fc:	sub	w20, w28, #0x2
   2e400:	str	w19, [sp, #44]
   2e404:	sub	x8, x28, #0x1
   2e408:	cset	w27, eq  // eq = none
   2e40c:	add	x19, x20, #0x2
   2e410:	str	x8, [sp, #48]
   2e414:	sub	x0, x29, #0x20
   2e418:	mov	w3, #0x2                   	// #2
   2e41c:	mov	x1, x21
   2e420:	mov	x2, xzr
   2e424:	bl	cac0 <mpfr_set_ui_2exp@plt>
   2e428:	cmp	w28, #0x2
   2e42c:	mov	w26, w0
   2e430:	b.cc	2e488 <mpfr_ui_pow_ui@@Base+0x16c>  // b.lo, b.ul, b.last
   2e434:	ldr	x25, [sp, #48]
   2e438:	mov	x24, x20
   2e43c:	b	2e44c <mpfr_ui_pow_ui@@Base+0x130>
   2e440:	subs	x25, x25, #0x1
   2e444:	sub	x24, x24, #0x1
   2e448:	b.eq	2e494 <mpfr_ui_pow_ui@@Base+0x178>  // b.none
   2e44c:	sub	x0, x29, #0x20
   2e450:	sub	x1, x29, #0x20
   2e454:	sub	x2, x29, #0x20
   2e458:	mov	w3, #0x2                   	// #2
   2e45c:	bl	c1b0 <mpfr_mul@plt>
   2e460:	lsr	x8, x22, x24
   2e464:	orr	w26, w0, w26
   2e468:	tbz	w8, #0, 2e440 <mpfr_ui_pow_ui@@Base+0x124>
   2e46c:	sub	x0, x29, #0x20
   2e470:	sub	x1, x29, #0x20
   2e474:	mov	w3, #0x2                   	// #2
   2e478:	mov	x2, x21
   2e47c:	bl	bea0 <mpfr_mul_ui@plt>
   2e480:	orr	w26, w0, w26
   2e484:	b	2e440 <mpfr_ui_pow_ui@@Base+0x124>
   2e488:	mov	w8, #0x1                   	// #1
   2e48c:	cbnz	w26, 2e49c <mpfr_ui_pow_ui@@Base+0x180>
   2e490:	b	2e4e8 <mpfr_ui_pow_ui@@Base+0x1cc>
   2e494:	mov	x8, x19
   2e498:	cbz	w26, 2e4e8 <mpfr_ui_pow_ui@@Base+0x1cc>
   2e49c:	ldur	x9, [x29, #-16]
   2e4a0:	mov	x10, #0xfffffffffffffeff    	// #-257
   2e4a4:	movk	x10, #0x7fff, lsl #48
   2e4a8:	add	x10, x10, #0x105
   2e4ac:	cmp	x9, x10
   2e4b0:	b.lt	2e4f4 <mpfr_ui_pow_ui@@Base+0x1d8>  // b.tstop
   2e4b4:	sub	x2, x23, x8
   2e4b8:	ldp	x8, x9, [x29, #-40]
   2e4bc:	ldur	x0, [x29, #-8]
   2e4c0:	ldr	x8, [x8]
   2e4c4:	sub	x10, x9, #0x1
   2e4c8:	add	x9, x9, #0x3e
   2e4cc:	cmp	x10, #0x0
   2e4d0:	csel	x9, x9, x10, lt  // lt = tstop
   2e4d4:	asr	x9, x9, #6
   2e4d8:	add	x1, x9, #0x1
   2e4dc:	add	x3, x8, x27
   2e4e0:	bl	c830 <mpfr_round_p@plt>
   2e4e4:	cbz	w0, 2e4f4 <mpfr_ui_pow_ui@@Base+0x1d8>
   2e4e8:	mov	w8, wzr
   2e4ec:	tbnz	w8, #0, 2e414 <mpfr_ui_pow_ui@@Base+0xf8>
   2e4f0:	b	2e55c <mpfr_ui_pow_ui@@Base+0x240>
   2e4f4:	ldr	x9, [sp]
   2e4f8:	mov	x8, #0xfffffffffffffeff    	// #-257
   2e4fc:	movk	x8, #0x7fff, lsl #48
   2e500:	sub	x8, x8, x23
   2e504:	cmp	x9, x8
   2e508:	mov	x8, x9
   2e50c:	b.gt	2e53c <mpfr_ui_pow_ui@@Base+0x220>
   2e510:	add	x23, x23, x8
   2e514:	cmp	x23, #0x0
   2e518:	cinc	x8, x23, lt  // lt = tstop
   2e51c:	asr	x8, x8, #1
   2e520:	sub	x0, x29, #0x20
   2e524:	mov	x1, x23
   2e528:	str	x8, [sp]
   2e52c:	bl	c330 <mpfr_set_prec@plt>
   2e530:	mov	w8, #0x1                   	// #1
   2e534:	tbnz	w8, #0, 2e414 <mpfr_ui_pow_ui@@Base+0xf8>
   2e538:	b	2e55c <mpfr_ui_pow_ui@@Base+0x240>
   2e53c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2e540:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2e544:	mov	w1, #0x54                  	// #84
   2e548:	add	x0, x0, #0x6d2
   2e54c:	add	x2, x2, #0x99a
   2e550:	bl	d030 <mpfr_assert_fail@plt>
   2e554:	ldr	x8, [sp]
   2e558:	b	2e510 <mpfr_ui_pow_ui@@Base+0x1f4>
   2e55c:	ldur	x20, [x29, #-40]
   2e560:	ldr	w19, [sp, #44]
   2e564:	ldur	w3, [x29, #-24]
   2e568:	sub	x1, x29, #0x20
   2e56c:	mov	x0, x20
   2e570:	mov	w2, w19
   2e574:	bl	cb70 <mpfr_set4@plt>
   2e578:	mov	w21, w0
   2e57c:	sub	x0, x29, #0x20
   2e580:	bl	c4f0 <mpfr_clear@plt>
   2e584:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e588:	ldr	x1, [x0, #2800]
   2e58c:	add	x0, x0, #0xaf0
   2e590:	blr	x1
   2e594:	ldr	x9, [sp, #32]
   2e598:	ldr	w10, [sp, #28]
   2e59c:	str	w10, [x9, x0]
   2e5a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e5a4:	ldr	x1, [x0, #2736]
   2e5a8:	add	x0, x0, #0xab0
   2e5ac:	blr	x1
   2e5b0:	ldr	x11, [sp, #16]
   2e5b4:	str	x11, [x9, x0]
   2e5b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e5bc:	ldr	x1, [x0, #2768]
   2e5c0:	add	x0, x0, #0xad0
   2e5c4:	blr	x1
   2e5c8:	ldr	x12, [sp, #8]
   2e5cc:	str	x12, [x9, x0]
   2e5d0:	ldr	x8, [x20, #16]
   2e5d4:	cmp	x8, x12
   2e5d8:	b.gt	2e654 <mpfr_ui_pow_ui@@Base+0x338>
   2e5dc:	cmp	x8, x11
   2e5e0:	b.lt	2e654 <mpfr_ui_pow_ui@@Base+0x338>  // b.tstop
   2e5e4:	cbz	w21, 2e600 <mpfr_ui_pow_ui@@Base+0x2e4>
   2e5e8:	orr	w8, w10, #0x8
   2e5ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e5f0:	ldr	x1, [x0, #2800]
   2e5f4:	add	x0, x0, #0xaf0
   2e5f8:	blr	x1
   2e5fc:	str	w8, [x9, x0]
   2e600:	mov	w0, w21
   2e604:	ldp	x20, x19, [sp, #176]
   2e608:	ldp	x22, x21, [sp, #160]
   2e60c:	ldp	x24, x23, [sp, #144]
   2e610:	ldp	x26, x25, [sp, #128]
   2e614:	ldp	x28, x27, [sp, #112]
   2e618:	ldp	x29, x30, [sp, #96]
   2e61c:	add	sp, sp, #0xc0
   2e620:	ret
   2e624:	b.ne	2e63c <mpfr_ui_pow_ui@@Base+0x320>  // b.any
   2e628:	ldur	x0, [x29, #-40]
   2e62c:	mov	x1, x21
   2e630:	b	2e644 <mpfr_ui_pow_ui@@Base+0x328>
   2e634:	cmp	x21, #0x1
   2e638:	b.ne	2e66c <mpfr_ui_pow_ui@@Base+0x350>  // b.any
   2e63c:	ldur	x0, [x29, #-40]
   2e640:	mov	w1, #0x1                   	// #1
   2e644:	mov	x2, xzr
   2e648:	mov	w3, w19
   2e64c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   2e650:	b	2e664 <mpfr_ui_pow_ui@@Base+0x348>
   2e654:	ldur	x0, [x29, #-40]
   2e658:	mov	w1, w21
   2e65c:	mov	w2, w19
   2e660:	bl	d020 <mpfr_check_range@plt>
   2e664:	mov	w21, w0
   2e668:	b	2e600 <mpfr_ui_pow_ui@@Base+0x2e4>
   2e66c:	ldur	x10, [x29, #-40]
   2e670:	mov	w8, #0x1                   	// #1
   2e674:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2e678:	mov	w21, wzr
   2e67c:	str	w8, [x10, #8]
   2e680:	str	x9, [x10, #16]
   2e684:	b	2e600 <mpfr_ui_pow_ui@@Base+0x2e4>

000000000002e688 <mpfr_min@@Base>:
   2e688:	stp	x29, x30, [sp, #-48]!
   2e68c:	stp	x22, x21, [sp, #16]
   2e690:	stp	x20, x19, [sp, #32]
   2e694:	ldr	x8, [x1, #16]
   2e698:	mov	x9, #0x2                   	// #2
   2e69c:	movk	x9, #0x8000, lsl #48
   2e6a0:	add	x10, x9, #0x2
   2e6a4:	mov	w19, w3
   2e6a8:	mov	x21, x2
   2e6ac:	mov	x22, x1
   2e6b0:	cmp	x8, x10
   2e6b4:	mov	x20, x0
   2e6b8:	mov	x29, sp
   2e6bc:	b.lt	2e6f4 <mpfr_min@@Base+0x6c>  // b.tstop
   2e6c0:	ldr	x11, [x21, #16]
   2e6c4:	cmp	x11, x10
   2e6c8:	b.lt	2e6f4 <mpfr_min@@Base+0x6c>  // b.tstop
   2e6cc:	mov	w2, #0x1                   	// #1
   2e6d0:	mov	x0, x22
   2e6d4:	mov	x1, x21
   2e6d8:	bl	ce90 <mpfr_cmp3@plt>
   2e6dc:	cmp	w0, #0x0
   2e6e0:	b.le	2e74c <mpfr_min@@Base+0xc4>
   2e6e4:	ldr	w3, [x21, #8]
   2e6e8:	mov	x0, x20
   2e6ec:	mov	x1, x21
   2e6f0:	b	2e758 <mpfr_min@@Base+0xd0>
   2e6f4:	cmp	x8, x9
   2e6f8:	b.ne	2e740 <mpfr_min@@Base+0xb8>  // b.any
   2e6fc:	ldr	x10, [x21, #16]
   2e700:	cmp	x10, x9
   2e704:	b.ne	2e738 <mpfr_min@@Base+0xb0>  // b.any
   2e708:	str	x9, [x20, #16]
   2e70c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e710:	ldr	x1, [x0, #2800]
   2e714:	add	x0, x0, #0xaf0
   2e718:	blr	x1
   2e71c:	mov	x8, x0
   2e720:	mrs	x9, tpidr_el0
   2e724:	ldr	w10, [x9, x8]
   2e728:	mov	w0, wzr
   2e72c:	orr	w10, w10, #0x4
   2e730:	str	w10, [x9, x8]
   2e734:	b	2e760 <mpfr_min@@Base+0xd8>
   2e738:	cmp	x8, x9
   2e73c:	b.eq	2e6e4 <mpfr_min@@Base+0x5c>  // b.none
   2e740:	ldr	x10, [x21, #16]
   2e744:	cmp	x10, x9
   2e748:	b.ne	2e770 <mpfr_min@@Base+0xe8>  // b.any
   2e74c:	ldr	w3, [x22, #8]
   2e750:	mov	x0, x20
   2e754:	mov	x1, x22
   2e758:	mov	w2, w19
   2e75c:	bl	cb70 <mpfr_set4@plt>
   2e760:	ldp	x20, x19, [sp, #32]
   2e764:	ldp	x22, x21, [sp, #16]
   2e768:	ldp	x29, x30, [sp], #48
   2e76c:	ret
   2e770:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2e774:	cmp	x8, x9
   2e778:	b.ne	2e6cc <mpfr_min@@Base+0x44>  // b.any
   2e77c:	cmp	x10, x9
   2e780:	b.ne	2e6cc <mpfr_min@@Base+0x44>  // b.any
   2e784:	ldr	w3, [x22, #8]
   2e788:	tbz	w3, #31, 2e6e4 <mpfr_min@@Base+0x5c>
   2e78c:	b	2e750 <mpfr_min@@Base+0xc8>

000000000002e790 <mpfr_max@@Base>:
   2e790:	stp	x29, x30, [sp, #-48]!
   2e794:	stp	x22, x21, [sp, #16]
   2e798:	stp	x20, x19, [sp, #32]
   2e79c:	ldr	x8, [x1, #16]
   2e7a0:	mov	x9, #0x2                   	// #2
   2e7a4:	movk	x9, #0x8000, lsl #48
   2e7a8:	add	x10, x9, #0x2
   2e7ac:	mov	w19, w3
   2e7b0:	mov	x21, x2
   2e7b4:	mov	x22, x1
   2e7b8:	cmp	x8, x10
   2e7bc:	mov	x20, x0
   2e7c0:	mov	x29, sp
   2e7c4:	b.lt	2e7fc <mpfr_max@@Base+0x6c>  // b.tstop
   2e7c8:	ldr	x11, [x21, #16]
   2e7cc:	cmp	x11, x10
   2e7d0:	b.lt	2e7fc <mpfr_max@@Base+0x6c>  // b.tstop
   2e7d4:	mov	w2, #0x1                   	// #1
   2e7d8:	mov	x0, x22
   2e7dc:	mov	x1, x21
   2e7e0:	bl	ce90 <mpfr_cmp3@plt>
   2e7e4:	cmp	w0, #0x0
   2e7e8:	b.le	2e870 <mpfr_max@@Base+0xe0>
   2e7ec:	ldr	w3, [x22, #8]
   2e7f0:	mov	x0, x20
   2e7f4:	mov	x1, x22
   2e7f8:	b	2e87c <mpfr_max@@Base+0xec>
   2e7fc:	cmp	x8, x9
   2e800:	b.ne	2e848 <mpfr_max@@Base+0xb8>  // b.any
   2e804:	ldr	x10, [x21, #16]
   2e808:	cmp	x10, x9
   2e80c:	b.ne	2e840 <mpfr_max@@Base+0xb0>  // b.any
   2e810:	str	x9, [x20, #16]
   2e814:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e818:	ldr	x1, [x0, #2800]
   2e81c:	add	x0, x0, #0xaf0
   2e820:	blr	x1
   2e824:	mov	x8, x0
   2e828:	mrs	x9, tpidr_el0
   2e82c:	ldr	w10, [x9, x8]
   2e830:	mov	w0, wzr
   2e834:	orr	w10, w10, #0x4
   2e838:	str	w10, [x9, x8]
   2e83c:	b	2e884 <mpfr_max@@Base+0xf4>
   2e840:	cmp	x8, x9
   2e844:	b.eq	2e870 <mpfr_max@@Base+0xe0>  // b.none
   2e848:	ldr	x10, [x21, #16]
   2e84c:	cmp	x10, x9
   2e850:	b.eq	2e7ec <mpfr_max@@Base+0x5c>  // b.none
   2e854:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2e858:	cmp	x8, x9
   2e85c:	b.ne	2e7d4 <mpfr_max@@Base+0x44>  // b.any
   2e860:	cmp	x10, x9
   2e864:	b.ne	2e7d4 <mpfr_max@@Base+0x44>  // b.any
   2e868:	ldr	w3, [x22, #8]
   2e86c:	tbz	w3, #31, 2e7f0 <mpfr_max@@Base+0x60>
   2e870:	ldr	w3, [x21, #8]
   2e874:	mov	x0, x20
   2e878:	mov	x1, x21
   2e87c:	mov	w2, w19
   2e880:	bl	cb70 <mpfr_set4@plt>
   2e884:	ldp	x20, x19, [sp, #32]
   2e888:	ldp	x22, x21, [sp, #16]
   2e88c:	ldp	x29, x30, [sp], #48
   2e890:	ret

000000000002e894 <mpfr_dim@@Base>:
   2e894:	stp	x29, x30, [sp, #-64]!
   2e898:	stp	x22, x21, [sp, #32]
   2e89c:	stp	x20, x19, [sp, #48]
   2e8a0:	ldr	x9, [x1, #16]
   2e8a4:	mov	x8, #0x2                   	// #2
   2e8a8:	movk	x8, #0x8000, lsl #48
   2e8ac:	mov	x22, x0
   2e8b0:	cmp	x9, x8
   2e8b4:	str	x23, [sp, #16]
   2e8b8:	mov	x29, sp
   2e8bc:	b.eq	2e8d0 <mpfr_dim@@Base+0x3c>  // b.none
   2e8c0:	ldr	x9, [x2, #16]
   2e8c4:	mov	x20, x2
   2e8c8:	cmp	x9, x8
   2e8cc:	b.ne	2e910 <mpfr_dim@@Base+0x7c>  // b.any
   2e8d0:	str	x8, [x22, #16]
   2e8d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2e8d8:	ldr	x1, [x0, #2800]
   2e8dc:	add	x0, x0, #0xaf0
   2e8e0:	blr	x1
   2e8e4:	mov	x8, x0
   2e8e8:	mrs	x9, tpidr_el0
   2e8ec:	ldr	w10, [x9, x8]
   2e8f0:	mov	w0, wzr
   2e8f4:	orr	w10, w10, #0x4
   2e8f8:	str	w10, [x9, x8]
   2e8fc:	ldp	x20, x19, [sp, #48]
   2e900:	ldp	x22, x21, [sp, #32]
   2e904:	ldr	x23, [sp, #16]
   2e908:	ldp	x29, x30, [sp], #64
   2e90c:	ret
   2e910:	mov	x21, x1
   2e914:	mov	w2, #0x1                   	// #1
   2e918:	mov	x0, x1
   2e91c:	mov	x1, x20
   2e920:	mov	w19, w3
   2e924:	mov	w23, #0x1                   	// #1
   2e928:	bl	ce90 <mpfr_cmp3@plt>
   2e92c:	cmp	w0, #0x1
   2e930:	b.lt	2e94c <mpfr_dim@@Base+0xb8>  // b.tstop
   2e934:	mov	x0, x22
   2e938:	mov	x1, x21
   2e93c:	mov	x2, x20
   2e940:	mov	w3, w19
   2e944:	bl	bfd0 <mpfr_sub@plt>
   2e948:	b	2e8fc <mpfr_dim@@Base+0x68>
   2e94c:	mov	w0, wzr
   2e950:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2e954:	str	x8, [x22, #16]
   2e958:	str	w23, [x22, #8]
   2e95c:	b	2e8fc <mpfr_dim@@Base+0x68>

000000000002e960 <mpfr_signbit@@Base>:
   2e960:	ldr	w8, [x0, #8]
   2e964:	lsr	w0, w8, #31
   2e968:	ret

000000000002e96c <mpfr_copysign@@Base>:
   2e96c:	stp	x29, x30, [sp, #-16]!
   2e970:	mov	w8, w3
   2e974:	ldr	w3, [x2, #8]
   2e978:	mov	w2, w8
   2e97c:	mov	x29, sp
   2e980:	bl	cb70 <mpfr_set4@plt>
   2e984:	ldp	x29, x30, [sp], #16
   2e988:	ret

000000000002e98c <mpfr_setsign@@Base>:
   2e98c:	stp	x29, x30, [sp, #-16]!
   2e990:	mov	w8, w3
   2e994:	cmp	w2, #0x0
   2e998:	mov	w9, #0x1                   	// #1
   2e99c:	cneg	w3, w9, ne  // ne = any
   2e9a0:	mov	w2, w8
   2e9a4:	mov	x29, sp
   2e9a8:	bl	cb70 <mpfr_set4@plt>
   2e9ac:	ldp	x29, x30, [sp], #16
   2e9b0:	ret

000000000002e9b4 <mpfr_mul_z@@Base>:
   2e9b4:	stp	x29, x30, [sp, #-48]!
   2e9b8:	stp	x22, x21, [sp, #16]
   2e9bc:	mov	x21, x0
   2e9c0:	mov	x0, x2
   2e9c4:	stp	x20, x19, [sp, #32]
   2e9c8:	mov	x29, sp
   2e9cc:	mov	w19, w3
   2e9d0:	mov	x22, x2
   2e9d4:	mov	x20, x1
   2e9d8:	bl	c2f0 <__gmpz_fits_slong_p@plt>
   2e9dc:	cbz	w0, 2ea00 <mpfr_mul_z@@Base+0x4c>
   2e9e0:	mov	x0, x22
   2e9e4:	bl	be60 <__gmpz_get_si@plt>
   2e9e8:	mov	x2, x0
   2e9ec:	mov	x0, x21
   2e9f0:	mov	x1, x20
   2e9f4:	mov	w3, w19
   2e9f8:	bl	ce50 <mpfr_mul_si@plt>
   2e9fc:	b	2ea1c <mpfr_mul_z@@Base+0x68>
   2ea00:	adrp	x4, 72000 <__gmpfr_l2b@@Base+0x2f0>
   2ea04:	ldr	x4, [x4, #3960]
   2ea08:	mov	x0, x21
   2ea0c:	mov	x1, x20
   2ea10:	mov	x2, x22
   2ea14:	mov	w3, w19
   2ea18:	bl	2ea2c <mpfr_mul_z@@Base+0x78>
   2ea1c:	ldp	x20, x19, [sp, #32]
   2ea20:	ldp	x22, x21, [sp, #16]
   2ea24:	ldp	x29, x30, [sp], #48
   2ea28:	ret
   2ea2c:	sub	sp, sp, #0x90
   2ea30:	stp	x29, x30, [sp, #48]
   2ea34:	stp	x28, x27, [sp, #64]
   2ea38:	stp	x26, x25, [sp, #80]
   2ea3c:	stp	x24, x23, [sp, #96]
   2ea40:	stp	x22, x21, [sp, #112]
   2ea44:	stp	x20, x19, [sp, #128]
   2ea48:	add	x29, sp, #0x30
   2ea4c:	str	x4, [sp, #8]
   2ea50:	mov	w21, w3
   2ea54:	mov	x22, x1
   2ea58:	mov	x20, x0
   2ea5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ea60:	ldr	x1, [x0, #2800]
   2ea64:	add	x0, x0, #0xaf0
   2ea68:	blr	x1
   2ea6c:	mrs	x26, tpidr_el0
   2ea70:	ldr	w28, [x26, x0]
   2ea74:	mov	x23, x0
   2ea78:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ea7c:	ldr	x1, [x0, #2736]
   2ea80:	add	x0, x0, #0xab0
   2ea84:	blr	x1
   2ea88:	ldr	x27, [x26, x0]
   2ea8c:	mov	x24, x0
   2ea90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ea94:	ldr	x1, [x0, #2768]
   2ea98:	add	x0, x0, #0xad0
   2ea9c:	blr	x1
   2eaa0:	ldr	x19, [x26, x0]
   2eaa4:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2eaa8:	str	x8, [x26, x24]
   2eaac:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2eab0:	mov	x25, x0
   2eab4:	str	x8, [x26, x0]
   2eab8:	add	x0, sp, #0x10
   2eabc:	mov	x1, x2
   2eac0:	bl	2fdf0 <mpfr_cmp_f@@Base+0x130>
   2eac4:	ldr	x8, [sp, #8]
   2eac8:	add	x2, sp, #0x10
   2eacc:	mov	x0, x20
   2ead0:	mov	x1, x22
   2ead4:	mov	w3, w21
   2ead8:	str	w21, [sp, #4]
   2eadc:	blr	x8
   2eae0:	ldr	w8, [x26, x23]
   2eae4:	mov	w21, w0
   2eae8:	add	x0, sp, #0x10
   2eaec:	orr	w22, w8, w28
   2eaf0:	bl	c4f0 <mpfr_clear@plt>
   2eaf4:	str	w22, [x26, x23]
   2eaf8:	str	x27, [x26, x24]
   2eafc:	str	x19, [x26, x25]
   2eb00:	ldr	x8, [x20, #16]
   2eb04:	cmp	x8, x19
   2eb08:	b.gt	2eb54 <mpfr_mul_z@@Base+0x1a0>
   2eb0c:	cmp	x8, x27
   2eb10:	b.lt	2eb54 <mpfr_mul_z@@Base+0x1a0>  // b.tstop
   2eb14:	cbz	w21, 2eb30 <mpfr_mul_z@@Base+0x17c>
   2eb18:	orr	w8, w22, #0x8
   2eb1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2eb20:	ldr	x1, [x0, #2800]
   2eb24:	add	x0, x0, #0xaf0
   2eb28:	blr	x1
   2eb2c:	str	w8, [x26, x0]
   2eb30:	mov	w0, w21
   2eb34:	ldp	x20, x19, [sp, #128]
   2eb38:	ldp	x22, x21, [sp, #112]
   2eb3c:	ldp	x24, x23, [sp, #96]
   2eb40:	ldp	x26, x25, [sp, #80]
   2eb44:	ldp	x28, x27, [sp, #64]
   2eb48:	ldp	x29, x30, [sp, #48]
   2eb4c:	add	sp, sp, #0x90
   2eb50:	ret
   2eb54:	ldr	w2, [sp, #4]
   2eb58:	mov	x0, x20
   2eb5c:	mov	w1, w21
   2eb60:	bl	d020 <mpfr_check_range@plt>
   2eb64:	mov	w21, w0
   2eb68:	b	2eb30 <mpfr_mul_z@@Base+0x17c>

000000000002eb6c <mpfr_div_z@@Base>:
   2eb6c:	stp	x29, x30, [sp, #-48]!
   2eb70:	stp	x22, x21, [sp, #16]
   2eb74:	mov	x21, x0
   2eb78:	mov	x0, x2
   2eb7c:	stp	x20, x19, [sp, #32]
   2eb80:	mov	x29, sp
   2eb84:	mov	w19, w3
   2eb88:	mov	x22, x2
   2eb8c:	mov	x20, x1
   2eb90:	bl	c2f0 <__gmpz_fits_slong_p@plt>
   2eb94:	cbz	w0, 2ebb8 <mpfr_div_z@@Base+0x4c>
   2eb98:	mov	x0, x22
   2eb9c:	bl	be60 <__gmpz_get_si@plt>
   2eba0:	mov	x2, x0
   2eba4:	mov	x0, x21
   2eba8:	mov	x1, x20
   2ebac:	mov	w3, w19
   2ebb0:	bl	cd00 <mpfr_div_si@plt>
   2ebb4:	b	2ebd4 <mpfr_div_z@@Base+0x68>
   2ebb8:	adrp	x4, 72000 <__gmpfr_l2b@@Base+0x2f0>
   2ebbc:	ldr	x4, [x4, #4040]
   2ebc0:	mov	x0, x21
   2ebc4:	mov	x1, x20
   2ebc8:	mov	x2, x22
   2ebcc:	mov	w3, w19
   2ebd0:	bl	2ea2c <mpfr_mul_z@@Base+0x78>
   2ebd4:	ldp	x20, x19, [sp, #32]
   2ebd8:	ldp	x22, x21, [sp, #16]
   2ebdc:	ldp	x29, x30, [sp], #48
   2ebe0:	ret

000000000002ebe4 <mpfr_add_z@@Base>:
   2ebe4:	stp	x29, x30, [sp, #-48]!
   2ebe8:	stp	x22, x21, [sp, #16]
   2ebec:	mov	x21, x0
   2ebf0:	mov	x0, x2
   2ebf4:	stp	x20, x19, [sp, #32]
   2ebf8:	mov	x29, sp
   2ebfc:	mov	w19, w3
   2ec00:	mov	x22, x2
   2ec04:	mov	x20, x1
   2ec08:	bl	c2f0 <__gmpz_fits_slong_p@plt>
   2ec0c:	cbz	w0, 2ec30 <mpfr_add_z@@Base+0x4c>
   2ec10:	mov	x0, x22
   2ec14:	bl	be60 <__gmpz_get_si@plt>
   2ec18:	mov	x2, x0
   2ec1c:	mov	x0, x21
   2ec20:	mov	x1, x20
   2ec24:	mov	w3, w19
   2ec28:	bl	ccd0 <mpfr_add_si@plt>
   2ec2c:	b	2ec4c <mpfr_add_z@@Base+0x68>
   2ec30:	adrp	x4, 72000 <__gmpfr_l2b@@Base+0x2f0>
   2ec34:	ldr	x4, [x4, #4008]
   2ec38:	mov	x0, x21
   2ec3c:	mov	x1, x20
   2ec40:	mov	x2, x22
   2ec44:	mov	w3, w19
   2ec48:	bl	2ea2c <mpfr_mul_z@@Base+0x78>
   2ec4c:	ldp	x20, x19, [sp, #32]
   2ec50:	ldp	x22, x21, [sp, #16]
   2ec54:	ldp	x29, x30, [sp], #48
   2ec58:	ret

000000000002ec5c <mpfr_sub_z@@Base>:
   2ec5c:	stp	x29, x30, [sp, #-48]!
   2ec60:	stp	x22, x21, [sp, #16]
   2ec64:	mov	x21, x0
   2ec68:	mov	x0, x2
   2ec6c:	stp	x20, x19, [sp, #32]
   2ec70:	mov	x29, sp
   2ec74:	mov	w19, w3
   2ec78:	mov	x22, x2
   2ec7c:	mov	x20, x1
   2ec80:	bl	c2f0 <__gmpz_fits_slong_p@plt>
   2ec84:	cbz	w0, 2eca8 <mpfr_sub_z@@Base+0x4c>
   2ec88:	mov	x0, x22
   2ec8c:	bl	be60 <__gmpz_get_si@plt>
   2ec90:	mov	x2, x0
   2ec94:	mov	x0, x21
   2ec98:	mov	x1, x20
   2ec9c:	mov	w3, w19
   2eca0:	bl	c4d0 <mpfr_sub_si@plt>
   2eca4:	b	2ecc4 <mpfr_sub_z@@Base+0x68>
   2eca8:	adrp	x4, 72000 <__gmpfr_l2b@@Base+0x2f0>
   2ecac:	ldr	x4, [x4, #3944]
   2ecb0:	mov	x0, x21
   2ecb4:	mov	x1, x20
   2ecb8:	mov	x2, x22
   2ecbc:	mov	w3, w19
   2ecc0:	bl	2ea2c <mpfr_mul_z@@Base+0x78>
   2ecc4:	ldp	x20, x19, [sp, #32]
   2ecc8:	ldp	x22, x21, [sp, #16]
   2eccc:	ldp	x29, x30, [sp], #48
   2ecd0:	ret

000000000002ecd4 <mpfr_z_sub@@Base>:
   2ecd4:	stp	x29, x30, [sp, #-48]!
   2ecd8:	stp	x22, x21, [sp, #16]
   2ecdc:	mov	x21, x0
   2ece0:	mov	x0, x1
   2ece4:	stp	x20, x19, [sp, #32]
   2ece8:	mov	x29, sp
   2ecec:	mov	w19, w3
   2ecf0:	mov	x20, x2
   2ecf4:	mov	x22, x1
   2ecf8:	bl	c2f0 <__gmpz_fits_slong_p@plt>
   2ecfc:	cbz	w0, 2ed20 <mpfr_z_sub@@Base+0x4c>
   2ed00:	mov	x0, x22
   2ed04:	bl	be60 <__gmpz_get_si@plt>
   2ed08:	mov	x1, x0
   2ed0c:	mov	x0, x21
   2ed10:	mov	x2, x20
   2ed14:	mov	w3, w19
   2ed18:	bl	caa0 <mpfr_si_sub@plt>
   2ed1c:	b	2ed34 <mpfr_z_sub@@Base+0x60>
   2ed20:	mov	x0, x21
   2ed24:	mov	x1, x22
   2ed28:	mov	x2, x20
   2ed2c:	mov	w3, w19
   2ed30:	bl	2ed44 <mpfr_z_sub@@Base+0x70>
   2ed34:	ldp	x20, x19, [sp, #32]
   2ed38:	ldp	x22, x21, [sp, #16]
   2ed3c:	ldp	x29, x30, [sp], #48
   2ed40:	ret
   2ed44:	sub	sp, sp, #0x80
   2ed48:	stp	x29, x30, [sp, #32]
   2ed4c:	stp	x28, x27, [sp, #48]
   2ed50:	stp	x26, x25, [sp, #64]
   2ed54:	stp	x24, x23, [sp, #80]
   2ed58:	stp	x22, x21, [sp, #96]
   2ed5c:	stp	x20, x19, [sp, #112]
   2ed60:	add	x29, sp, #0x20
   2ed64:	mov	w19, w3
   2ed68:	mov	x21, x2
   2ed6c:	mov	x8, x1
   2ed70:	mov	x20, x0
   2ed74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ed78:	ldr	x1, [x0, #2800]
   2ed7c:	add	x0, x0, #0xaf0
   2ed80:	blr	x1
   2ed84:	mrs	x25, tpidr_el0
   2ed88:	ldr	w27, [x25, x0]
   2ed8c:	mov	x22, x0
   2ed90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ed94:	ldr	x1, [x0, #2736]
   2ed98:	add	x0, x0, #0xab0
   2ed9c:	blr	x1
   2eda0:	ldr	x26, [x25, x0]
   2eda4:	mov	x23, x0
   2eda8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2edac:	ldr	x1, [x0, #2768]
   2edb0:	add	x0, x0, #0xad0
   2edb4:	blr	x1
   2edb8:	ldr	x28, [x25, x0]
   2edbc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2edc0:	str	x9, [x25, x23]
   2edc4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   2edc8:	mov	x24, x0
   2edcc:	str	x9, [x25, x0]
   2edd0:	mov	x0, sp
   2edd4:	mov	x1, x8
   2edd8:	bl	2fdf0 <mpfr_cmp_f@@Base+0x130>
   2eddc:	mov	x1, sp
   2ede0:	mov	x0, x20
   2ede4:	mov	x2, x21
   2ede8:	mov	w3, w19
   2edec:	bl	bfd0 <mpfr_sub@plt>
   2edf0:	ldr	w8, [x25, x22]
   2edf4:	mov	w21, w0
   2edf8:	mov	x0, sp
   2edfc:	orr	w27, w8, w27
   2ee00:	bl	c4f0 <mpfr_clear@plt>
   2ee04:	str	w27, [x25, x22]
   2ee08:	str	x26, [x25, x23]
   2ee0c:	str	x28, [x25, x24]
   2ee10:	ldr	x8, [x20, #16]
   2ee14:	cmp	x8, x28
   2ee18:	b.gt	2ee64 <mpfr_z_sub@@Base+0x190>
   2ee1c:	cmp	x8, x26
   2ee20:	b.lt	2ee64 <mpfr_z_sub@@Base+0x190>  // b.tstop
   2ee24:	cbz	w21, 2ee40 <mpfr_z_sub@@Base+0x16c>
   2ee28:	orr	w8, w27, #0x8
   2ee2c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ee30:	ldr	x1, [x0, #2800]
   2ee34:	add	x0, x0, #0xaf0
   2ee38:	blr	x1
   2ee3c:	str	w8, [x25, x0]
   2ee40:	mov	w0, w21
   2ee44:	ldp	x20, x19, [sp, #112]
   2ee48:	ldp	x22, x21, [sp, #96]
   2ee4c:	ldp	x24, x23, [sp, #80]
   2ee50:	ldp	x26, x25, [sp, #64]
   2ee54:	ldp	x28, x27, [sp, #48]
   2ee58:	ldp	x29, x30, [sp, #32]
   2ee5c:	add	sp, sp, #0x80
   2ee60:	ret
   2ee64:	mov	x0, x20
   2ee68:	mov	w1, w21
   2ee6c:	mov	w2, w19
   2ee70:	bl	d020 <mpfr_check_range@plt>
   2ee74:	mov	w21, w0
   2ee78:	b	2ee40 <mpfr_z_sub@@Base+0x16c>

000000000002ee7c <mpfr_cmp_z@@Base>:
   2ee7c:	sub	sp, sp, #0x50
   2ee80:	stp	x29, x30, [sp, #32]
   2ee84:	stp	x22, x21, [sp, #48]
   2ee88:	stp	x20, x19, [sp, #64]
   2ee8c:	ldr	x8, [x0, #16]
   2ee90:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2ee94:	mov	x19, x0
   2ee98:	mov	x20, x1
   2ee9c:	cmp	x8, x9
   2eea0:	add	x29, sp, #0x20
   2eea4:	b.le	2efa0 <mpfr_cmp_z@@Base+0x124>
   2eea8:	mov	x0, x20
   2eeac:	bl	c2f0 <__gmpz_fits_slong_p@plt>
   2eeb0:	cbz	w0, 2eed4 <mpfr_cmp_z@@Base+0x58>
   2eeb4:	mov	x0, x20
   2eeb8:	bl	be60 <__gmpz_get_si@plt>
   2eebc:	mov	x1, x0
   2eec0:	mov	x0, x19
   2eec4:	mov	x2, xzr
   2eec8:	bl	c890 <mpfr_cmp_si_2exp@plt>
   2eecc:	mov	w19, w0
   2eed0:	b	2ef88 <mpfr_cmp_z@@Base+0x10c>
   2eed4:	mov	x0, x20
   2eed8:	bl	c5a0 <__gmpz_size@plt>
   2eedc:	cmp	x0, #0x2
   2eee0:	b.cs	2eeec <mpfr_cmp_z@@Base+0x70>  // b.hs, b.nlast
   2eee4:	mov	w1, #0x40                  	// #64
   2eee8:	b	2ef10 <mpfr_cmp_z@@Base+0x94>
   2eeec:	ldr	w8, [x20, #4]
   2eef0:	ldr	x9, [x20, #8]
   2eef4:	cmp	w8, #0x0
   2eef8:	cneg	w8, w8, mi  // mi = first
   2eefc:	add	x9, x9, w8, uxtw #3
   2ef00:	ldur	x9, [x9, #-8]
   2ef04:	lsl	x8, x8, #6
   2ef08:	clz	x9, x9
   2ef0c:	sub	x1, x8, x9
   2ef10:	mov	x0, sp
   2ef14:	bl	cf60 <mpfr_init2@plt>
   2ef18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ef1c:	ldr	x1, [x0, #2800]
   2ef20:	add	x0, x0, #0xaf0
   2ef24:	blr	x1
   2ef28:	mrs	x21, tpidr_el0
   2ef2c:	ldr	w22, [x21, x0]
   2ef30:	mov	x0, sp
   2ef34:	mov	x1, x20
   2ef38:	mov	w2, wzr
   2ef3c:	bl	c6e0 <mpfr_set_z@plt>
   2ef40:	cbz	w0, 2ef6c <mpfr_cmp_z@@Base+0xf0>
   2ef44:	mov	x0, sp
   2ef48:	mov	x1, sp
   2ef4c:	mov	w2, #0x2                   	// #2
   2ef50:	mov	w3, #0x1                   	// #1
   2ef54:	bl	cde0 <mpfr_div_2ui@plt>
   2ef58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ef5c:	ldr	x1, [x0, #2800]
   2ef60:	add	x0, x0, #0xaf0
   2ef64:	blr	x1
   2ef68:	str	w22, [x21, x0]
   2ef6c:	mov	x1, sp
   2ef70:	mov	w2, #0x1                   	// #1
   2ef74:	mov	x0, x19
   2ef78:	bl	ce90 <mpfr_cmp3@plt>
   2ef7c:	mov	w19, w0
   2ef80:	mov	x0, sp
   2ef84:	bl	c4f0 <mpfr_clear@plt>
   2ef88:	mov	w0, w19
   2ef8c:	ldp	x20, x19, [sp, #64]
   2ef90:	ldp	x22, x21, [sp, #48]
   2ef94:	ldp	x29, x30, [sp, #32]
   2ef98:	add	sp, sp, #0x50
   2ef9c:	ret
   2efa0:	ldr	w8, [x20, #4]
   2efa4:	cmp	w8, #0x0
   2efa8:	cset	w8, ne  // ne = any
   2efac:	csinv	x1, x8, xzr, ge  // ge = tcont
   2efb0:	b	2eec0 <mpfr_cmp_z@@Base+0x44>

000000000002efb4 <mpfr_mul_q@@Base>:
   2efb4:	stp	x29, x30, [sp, #-16]!
   2efb8:	mov	w4, w3
   2efbc:	add	x3, x2, #0x10
   2efc0:	mov	x29, sp
   2efc4:	bl	2efd0 <mpfr_mul_q@@Base+0x1c>
   2efc8:	ldp	x29, x30, [sp], #16
   2efcc:	ret
   2efd0:	sub	sp, sp, #0xa0
   2efd4:	stp	x29, x30, [sp, #64]
   2efd8:	stp	x28, x27, [sp, #80]
   2efdc:	stp	x26, x25, [sp, #96]
   2efe0:	stp	x24, x23, [sp, #112]
   2efe4:	stp	x22, x21, [sp, #128]
   2efe8:	stp	x20, x19, [sp, #144]
   2efec:	ldr	w9, [x2, #4]
   2eff0:	ldr	w8, [x3, #4]
   2eff4:	mov	x21, x3
   2eff8:	mov	x23, x1
   2effc:	mov	x19, x0
   2f000:	add	x29, sp, #0x40
   2f004:	cbz	w9, 2f160 <mpfr_mul_q@@Base+0x1ac>
   2f008:	mov	x22, x2
   2f00c:	cbz	w8, 2f180 <mpfr_mul_q@@Base+0x1cc>
   2f010:	mov	w20, w4
   2f014:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f018:	ldr	x1, [x0, #2800]
   2f01c:	add	x0, x0, #0xaf0
   2f020:	blr	x1
   2f024:	mrs	x24, tpidr_el0
   2f028:	ldr	w25, [x24, x0]
   2f02c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f030:	ldr	x1, [x0, #2736]
   2f034:	add	x0, x0, #0xab0
   2f038:	blr	x1
   2f03c:	ldr	x26, [x24, x0]
   2f040:	mov	x8, x0
   2f044:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f048:	ldr	x1, [x0, #2768]
   2f04c:	add	x0, x0, #0xad0
   2f050:	blr	x1
   2f054:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   2f058:	str	x10, [x24, x8]
   2f05c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2f060:	ldr	x27, [x24, x0]
   2f064:	str	x8, [x24, x0]
   2f068:	ldr	x8, [x22, #8]
   2f06c:	cmp	w9, #0x0
   2f070:	cneg	w9, w9, mi  // mi = first
   2f074:	ldr	x10, [x23]
   2f078:	add	x8, x8, w9, uxtw #3
   2f07c:	ldur	x8, [x8, #-8]
   2f080:	lsl	x9, x9, #6
   2f084:	add	x0, sp, #0x20
   2f088:	clz	x8, x8
   2f08c:	sub	x8, x9, x8
   2f090:	add	x1, x8, x10
   2f094:	bl	cf60 <mpfr_init2@plt>
   2f098:	add	x0, sp, #0x20
   2f09c:	mov	x1, x23
   2f0a0:	mov	x2, x22
   2f0a4:	mov	w3, wzr
   2f0a8:	bl	c9a0 <mpfr_mul_z@plt>
   2f0ac:	cbnz	w0, 2f1b4 <mpfr_mul_q@@Base+0x200>
   2f0b0:	add	x1, sp, #0x20
   2f0b4:	mov	x0, x19
   2f0b8:	mov	x2, x21
   2f0bc:	mov	w3, w20
   2f0c0:	bl	d180 <mpfr_div_z@plt>
   2f0c4:	mov	w21, w0
   2f0c8:	add	x0, sp, #0x20
   2f0cc:	bl	c4f0 <mpfr_clear@plt>
   2f0d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f0d4:	ldr	x1, [x0, #2800]
   2f0d8:	add	x0, x0, #0xaf0
   2f0dc:	blr	x1
   2f0e0:	str	w25, [x24, x0]
   2f0e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f0e8:	ldr	x1, [x0, #2736]
   2f0ec:	add	x0, x0, #0xab0
   2f0f0:	blr	x1
   2f0f4:	str	x26, [x24, x0]
   2f0f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f0fc:	ldr	x1, [x0, #2768]
   2f100:	add	x0, x0, #0xad0
   2f104:	blr	x1
   2f108:	str	x27, [x24, x0]
   2f10c:	ldr	x8, [x19, #16]
   2f110:	cmp	x8, x27
   2f114:	b.gt	2f278 <mpfr_mul_q@@Base+0x2c4>
   2f118:	cmp	x8, x26
   2f11c:	b.lt	2f278 <mpfr_mul_q@@Base+0x2c4>  // b.tstop
   2f120:	cbz	w21, 2f13c <mpfr_mul_q@@Base+0x188>
   2f124:	orr	w8, w25, #0x8
   2f128:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f12c:	ldr	x1, [x0, #2800]
   2f130:	add	x0, x0, #0xaf0
   2f134:	blr	x1
   2f138:	str	w8, [x24, x0]
   2f13c:	mov	w0, w21
   2f140:	ldp	x20, x19, [sp, #144]
   2f144:	ldp	x22, x21, [sp, #128]
   2f148:	ldp	x24, x23, [sp, #112]
   2f14c:	ldp	x26, x25, [sp, #96]
   2f150:	ldp	x28, x27, [sp, #80]
   2f154:	ldp	x29, x30, [sp, #64]
   2f158:	add	sp, sp, #0xa0
   2f15c:	ret
   2f160:	cbz	w8, 2f290 <mpfr_mul_q@@Base+0x2dc>
   2f164:	mov	x0, x19
   2f168:	mov	x1, x23
   2f16c:	mov	x2, xzr
   2f170:	mov	w3, wzr
   2f174:	bl	bea0 <mpfr_mul_ui@plt>
   2f178:	ldr	w8, [x21, #4]
   2f17c:	b	2f198 <mpfr_mul_q@@Base+0x1e4>
   2f180:	mov	x0, x19
   2f184:	mov	x1, x23
   2f188:	mov	x2, xzr
   2f18c:	mov	w3, wzr
   2f190:	bl	d160 <mpfr_div_ui@plt>
   2f194:	ldr	w8, [x22, #4]
   2f198:	mov	w21, wzr
   2f19c:	tbz	w8, #31, 2f13c <mpfr_mul_q@@Base+0x188>
   2f1a0:	ldr	w8, [x19, #8]
   2f1a4:	mov	w21, wzr
   2f1a8:	neg	w8, w8
   2f1ac:	str	w8, [x19, #8]
   2f1b0:	b	2f13c <mpfr_mul_q@@Base+0x188>
   2f1b4:	ldr	x8, [x23]
   2f1b8:	str	x8, [sp]
   2f1bc:	ldr	w8, [x23, #8]
   2f1c0:	str	xzr, [sp, #16]
   2f1c4:	str	w8, [sp, #8]
   2f1c8:	ldp	x28, x8, [x23, #16]
   2f1cc:	str	x8, [sp, #24]
   2f1d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f1d4:	ldr	x1, [x0, #2800]
   2f1d8:	add	x0, x0, #0xaf0
   2f1dc:	blr	x1
   2f1e0:	mov	x23, x0
   2f1e4:	str	wzr, [x24, x0]
   2f1e8:	add	x0, sp, #0x20
   2f1ec:	mov	x1, sp
   2f1f0:	mov	x2, x22
   2f1f4:	mov	w3, wzr
   2f1f8:	bl	c9a0 <mpfr_mul_z@plt>
   2f1fc:	add	x1, sp, #0x20
   2f200:	mov	x0, x19
   2f204:	mov	x2, x21
   2f208:	mov	w3, w20
   2f20c:	bl	d180 <mpfr_div_z@plt>
   2f210:	ldrb	w8, [x24, x23]
   2f214:	mov	w9, #0x27                  	// #39
   2f218:	mov	w21, w0
   2f21c:	tst	w8, w9
   2f220:	b.ne	2f2a4 <mpfr_mul_q@@Base+0x2f0>  // b.any
   2f224:	ldr	x8, [x19, #16]
   2f228:	add	x8, x8, x28
   2f22c:	str	x8, [x19, #16]
   2f230:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f234:	ldr	x1, [x0, #2736]
   2f238:	add	x0, x0, #0xab0
   2f23c:	blr	x1
   2f240:	ldr	x9, [x24, x0]
   2f244:	cmp	x8, x9
   2f248:	b.lt	2f2c0 <mpfr_mul_q@@Base+0x30c>  // b.tstop
   2f24c:	ldr	x8, [x19, #16]
   2f250:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2f254:	cmp	x8, x9
   2f258:	b.gt	2f0c8 <mpfr_mul_q@@Base+0x114>
   2f25c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f260:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f264:	add	x0, x0, #0x6de
   2f268:	add	x2, x2, #0x78c
   2f26c:	mov	w1, #0xec                  	// #236
   2f270:	bl	d030 <mpfr_assert_fail@plt>
   2f274:	b	2f0c8 <mpfr_mul_q@@Base+0x114>
   2f278:	mov	x0, x19
   2f27c:	mov	w1, w21
   2f280:	mov	w2, w20
   2f284:	bl	d020 <mpfr_check_range@plt>
   2f288:	mov	w21, w0
   2f28c:	b	2f13c <mpfr_mul_q@@Base+0x188>
   2f290:	mov	x8, #0x2                   	// #2
   2f294:	movk	x8, #0x8000, lsl #48
   2f298:	mov	w21, wzr
   2f29c:	str	x8, [x19, #16]
   2f2a0:	b	2f13c <mpfr_mul_q@@Base+0x188>
   2f2a4:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f2a8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f2ac:	add	x0, x0, #0x6de
   2f2b0:	add	x2, x2, #0x747
   2f2b4:	mov	w1, #0xe8                  	// #232
   2f2b8:	bl	d030 <mpfr_assert_fail@plt>
   2f2bc:	b	2f224 <mpfr_mul_q@@Base+0x270>
   2f2c0:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f2c4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f2c8:	add	x0, x0, #0x6de
   2f2cc:	add	x2, x2, #0x76b
   2f2d0:	mov	w1, #0xeb                  	// #235
   2f2d4:	bl	d030 <mpfr_assert_fail@plt>
   2f2d8:	b	2f24c <mpfr_mul_q@@Base+0x298>

000000000002f2dc <mpfr_div_q@@Base>:
   2f2dc:	stp	x29, x30, [sp, #-16]!
   2f2e0:	mov	w4, w3
   2f2e4:	mov	x3, x2
   2f2e8:	add	x2, x2, #0x10
   2f2ec:	mov	x29, sp
   2f2f0:	bl	2efd0 <mpfr_mul_q@@Base+0x1c>
   2f2f4:	ldp	x29, x30, [sp], #16
   2f2f8:	ret

000000000002f2fc <mpfr_add_q@@Base>:
   2f2fc:	sub	sp, sp, #0xc0
   2f300:	stp	x29, x30, [sp, #96]
   2f304:	stp	x28, x27, [sp, #112]
   2f308:	stp	x26, x25, [sp, #128]
   2f30c:	stp	x24, x23, [sp, #144]
   2f310:	stp	x22, x21, [sp, #160]
   2f314:	stp	x20, x19, [sp, #176]
   2f318:	ldr	x8, [x1, #16]
   2f31c:	mov	x9, #0x2                   	// #2
   2f320:	movk	x9, #0x8000, lsl #48
   2f324:	add	x9, x9, #0x2
   2f328:	mov	w20, w3
   2f32c:	mov	x22, x2
   2f330:	mov	x21, x1
   2f334:	cmp	x8, x9
   2f338:	mov	x19, x0
   2f33c:	add	x29, sp, #0x60
   2f340:	b.lt	2f608 <mpfr_add_q@@Base+0x30c>  // b.tstop
   2f344:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f348:	ldr	x1, [x0, #2800]
   2f34c:	add	x0, x0, #0xaf0
   2f350:	blr	x1
   2f354:	mrs	x25, tpidr_el0
   2f358:	ldr	w8, [x25, x0]
   2f35c:	str	w8, [sp, #28]
   2f360:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f364:	ldr	x1, [x0, #2736]
   2f368:	add	x0, x0, #0xab0
   2f36c:	blr	x1
   2f370:	ldr	x9, [x25, x0]
   2f374:	mov	x8, x0
   2f378:	str	x9, [sp, #16]
   2f37c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f380:	ldr	x1, [x0, #2768]
   2f384:	add	x0, x0, #0xad0
   2f388:	blr	x1
   2f38c:	ldr	x9, [x25, x0]
   2f390:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2f394:	str	x10, [x25, x0]
   2f398:	sub	x0, x29, #0x20
   2f39c:	str	x9, [sp, #8]
   2f3a0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2f3a4:	str	x9, [x25, x8]
   2f3a8:	ldr	x8, [x19]
   2f3ac:	add	x24, x8, #0xa
   2f3b0:	mov	x1, x24
   2f3b4:	bl	cf60 <mpfr_init2@plt>
   2f3b8:	add	x0, sp, #0x20
   2f3bc:	mov	x1, x24
   2f3c0:	bl	cf60 <mpfr_init2@plt>
   2f3c4:	cmp	w20, #0x0
   2f3c8:	mov	w8, #0x40                  	// #64
   2f3cc:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   2f3d0:	cset	w26, eq  // eq = none
   2f3d4:	str	x8, [sp]
   2f3d8:	add	x0, sp, #0x20
   2f3dc:	mov	x1, x22
   2f3e0:	mov	w2, wzr
   2f3e4:	bl	cd30 <mpfr_set_q@plt>
   2f3e8:	cbz	w0, 2f508 <mpfr_add_q@@Base+0x20c>
   2f3ec:	mov	w23, w0
   2f3f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f3f4:	ldr	x1, [x0, #2800]
   2f3f8:	add	x0, x0, #0xaf0
   2f3fc:	blr	x1
   2f400:	mov	x28, x0
   2f404:	str	wzr, [x25, x0]
   2f408:	sub	x0, x29, #0x20
   2f40c:	add	x2, sp, #0x20
   2f410:	mov	x1, x21
   2f414:	mov	w3, wzr
   2f418:	bl	c640 <mpfr_add@plt>
   2f41c:	ldrb	w8, [x25, x28]
   2f420:	tst	w8, #0x3
   2f424:	b.ne	2f520 <mpfr_add_q@@Base+0x224>  // b.any
   2f428:	ldur	x8, [x29, #-16]
   2f42c:	cmp	x8, x27
   2f430:	b.eq	2f4b0 <mpfr_add_q@@Base+0x1b4>  // b.none
   2f434:	mov	x9, #0x2                   	// #2
   2f438:	movk	x9, #0x8000, lsl #48
   2f43c:	add	x9, x9, #0x2
   2f440:	cmp	x8, x9
   2f444:	b.lt	2f4b0 <mpfr_add_q@@Base+0x1b4>  // b.tstop
   2f448:	ldr	x9, [sp, #48]
   2f44c:	ldur	x10, [x29, #-32]
   2f450:	ldr	x11, [x19]
   2f454:	ldur	x0, [x29, #-8]
   2f458:	sub	x8, x9, x8
   2f45c:	sub	x9, x10, #0x1
   2f460:	add	x10, x10, #0x3e
   2f464:	bic	x8, x8, x8, asr #63
   2f468:	cmp	x9, #0x0
   2f46c:	mvn	x8, x8
   2f470:	csel	x9, x10, x9, lt  // lt = tstop
   2f474:	add	x2, x24, x8
   2f478:	asr	x8, x9, #6
   2f47c:	add	x1, x8, #0x1
   2f480:	add	x3, x11, x26
   2f484:	bl	c830 <mpfr_round_p@plt>
   2f488:	cbz	w0, 2f4b0 <mpfr_add_q@@Base+0x1b4>
   2f48c:	ldur	w3, [x29, #-24]
   2f490:	sub	x1, x29, #0x20
   2f494:	mov	x0, x19
   2f498:	mov	w2, w20
   2f49c:	bl	cb70 <mpfr_set4@plt>
   2f4a0:	mov	w23, w0
   2f4a4:	mov	w8, wzr
   2f4a8:	tbnz	w8, #0, 2f3d8 <mpfr_add_q@@Base+0xdc>
   2f4ac:	b	2f55c <mpfr_add_q@@Base+0x260>
   2f4b0:	mov	x8, #0x2                   	// #2
   2f4b4:	ldr	x9, [sp]
   2f4b8:	movk	x8, #0x8000, lsl #48
   2f4bc:	sub	x8, x8, x24
   2f4c0:	sub	x8, x8, #0x103
   2f4c4:	cmp	x9, x8
   2f4c8:	mov	x8, x9
   2f4cc:	b.gt	2f53c <mpfr_add_q@@Base+0x240>
   2f4d0:	add	x24, x8, x24
   2f4d4:	cmp	x24, #0x0
   2f4d8:	cinc	x8, x24, lt  // lt = tstop
   2f4dc:	asr	x8, x8, #1
   2f4e0:	sub	x0, x29, #0x20
   2f4e4:	mov	x1, x24
   2f4e8:	str	x8, [sp]
   2f4ec:	bl	c330 <mpfr_set_prec@plt>
   2f4f0:	add	x0, sp, #0x20
   2f4f4:	mov	x1, x24
   2f4f8:	bl	c330 <mpfr_set_prec@plt>
   2f4fc:	mov	w8, #0x1                   	// #1
   2f500:	tbnz	w8, #0, 2f3d8 <mpfr_add_q@@Base+0xdc>
   2f504:	b	2f55c <mpfr_add_q@@Base+0x260>
   2f508:	add	x2, sp, #0x20
   2f50c:	mov	x0, x19
   2f510:	mov	x1, x21
   2f514:	mov	w3, w20
   2f518:	bl	c640 <mpfr_add@plt>
   2f51c:	b	2f4a0 <mpfr_add_q@@Base+0x1a4>
   2f520:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f524:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f528:	mov	w1, #0x144                 	// #324
   2f52c:	add	x0, x0, #0x6de
   2f530:	add	x2, x2, #0x6e7
   2f534:	bl	d030 <mpfr_assert_fail@plt>
   2f538:	b	2f428 <mpfr_add_q@@Base+0x12c>
   2f53c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f540:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   2f544:	mov	w1, #0x153                 	// #339
   2f548:	add	x0, x0, #0x6de
   2f54c:	add	x2, x2, #0x26
   2f550:	bl	d030 <mpfr_assert_fail@plt>
   2f554:	ldr	x8, [sp]
   2f558:	b	2f4d0 <mpfr_add_q@@Base+0x1d4>
   2f55c:	sub	x0, x29, #0x20
   2f560:	bl	c4f0 <mpfr_clear@plt>
   2f564:	add	x0, sp, #0x20
   2f568:	bl	c4f0 <mpfr_clear@plt>
   2f56c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f570:	ldr	x1, [x0, #2800]
   2f574:	add	x0, x0, #0xaf0
   2f578:	blr	x1
   2f57c:	ldr	w9, [sp, #28]
   2f580:	str	w9, [x25, x0]
   2f584:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f588:	ldr	x1, [x0, #2736]
   2f58c:	add	x0, x0, #0xab0
   2f590:	blr	x1
   2f594:	ldr	x10, [sp, #16]
   2f598:	str	x10, [x25, x0]
   2f59c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f5a0:	ldr	x1, [x0, #2768]
   2f5a4:	add	x0, x0, #0xad0
   2f5a8:	blr	x1
   2f5ac:	ldr	x11, [sp, #8]
   2f5b0:	str	x11, [x25, x0]
   2f5b4:	ldr	x8, [x19, #16]
   2f5b8:	cmp	x8, x11
   2f5bc:	b.gt	2f658 <mpfr_add_q@@Base+0x35c>
   2f5c0:	cmp	x8, x10
   2f5c4:	b.lt	2f658 <mpfr_add_q@@Base+0x35c>  // b.tstop
   2f5c8:	cbz	w23, 2f5e4 <mpfr_add_q@@Base+0x2e8>
   2f5cc:	orr	w8, w9, #0x8
   2f5d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f5d4:	ldr	x1, [x0, #2800]
   2f5d8:	add	x0, x0, #0xaf0
   2f5dc:	blr	x1
   2f5e0:	str	w8, [x25, x0]
   2f5e4:	mov	w0, w23
   2f5e8:	ldp	x20, x19, [sp, #176]
   2f5ec:	ldp	x22, x21, [sp, #160]
   2f5f0:	ldp	x24, x23, [sp, #144]
   2f5f4:	ldp	x26, x25, [sp, #128]
   2f5f8:	ldp	x28, x27, [sp, #112]
   2f5fc:	ldp	x29, x30, [sp, #96]
   2f600:	add	sp, sp, #0xc0
   2f604:	ret
   2f608:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2f60c:	cmp	x8, x9
   2f610:	b.eq	2f66c <mpfr_add_q@@Base+0x370>  // b.none
   2f614:	mov	x9, #0x2                   	// #2
   2f618:	movk	x9, #0x8000, lsl #48
   2f61c:	cmp	x8, x9
   2f620:	b.ne	2f67c <mpfr_add_q@@Base+0x380>  // b.any
   2f624:	mov	x8, #0x2                   	// #2
   2f628:	movk	x8, #0x8000, lsl #48
   2f62c:	str	x8, [x19, #16]
   2f630:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f634:	ldr	x1, [x0, #2800]
   2f638:	add	x0, x0, #0xaf0
   2f63c:	blr	x1
   2f640:	mrs	x8, tpidr_el0
   2f644:	ldr	w9, [x8, x0]
   2f648:	mov	w23, wzr
   2f64c:	orr	w9, w9, #0x4
   2f650:	str	w9, [x8, x0]
   2f654:	b	2f5e4 <mpfr_add_q@@Base+0x2e8>
   2f658:	mov	x0, x19
   2f65c:	mov	w1, w23
   2f660:	mov	w2, w20
   2f664:	bl	d020 <mpfr_check_range@plt>
   2f668:	b	2f694 <mpfr_add_q@@Base+0x398>
   2f66c:	ldr	w8, [x22, #20]
   2f670:	cbz	w8, 2f69c <mpfr_add_q@@Base+0x3a0>
   2f674:	mov	w8, wzr
   2f678:	b	2f6bc <mpfr_add_q@@Base+0x3c0>
   2f67c:	ldr	w8, [x22, #4]
   2f680:	cbz	w8, 2f6d8 <mpfr_add_q@@Base+0x3dc>
   2f684:	mov	x0, x19
   2f688:	mov	x1, x22
   2f68c:	mov	w2, w20
   2f690:	bl	cd30 <mpfr_set_q@plt>
   2f694:	mov	w23, w0
   2f698:	b	2f5e4 <mpfr_add_q@@Base+0x2e8>
   2f69c:	ldr	w8, [x22, #4]
   2f6a0:	ldr	w9, [x21, #8]
   2f6a4:	cmp	w8, #0x0
   2f6a8:	cset	w8, ne  // ne = any
   2f6ac:	csinv	w8, w8, wzr, ge  // ge = tcont
   2f6b0:	mul	w8, w8, w9
   2f6b4:	cmp	w8, #0x1
   2f6b8:	cset	w8, lt  // lt = tstop
   2f6bc:	cbnz	w8, 2f624 <mpfr_add_q@@Base+0x328>
   2f6c0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2f6c4:	str	x8, [x19, #16]
   2f6c8:	ldr	w8, [x21, #8]
   2f6cc:	mov	w23, wzr
   2f6d0:	str	w8, [x19, #8]
   2f6d4:	b	2f5e4 <mpfr_add_q@@Base+0x2e8>
   2f6d8:	ldr	w3, [x21, #8]
   2f6dc:	mov	x0, x19
   2f6e0:	mov	x1, x21
   2f6e4:	mov	w2, w20
   2f6e8:	bl	cb70 <mpfr_set4@plt>
   2f6ec:	b	2f694 <mpfr_add_q@@Base+0x398>

000000000002f6f0 <mpfr_sub_q@@Base>:
   2f6f0:	sub	sp, sp, #0xc0
   2f6f4:	stp	x29, x30, [sp, #96]
   2f6f8:	stp	x28, x27, [sp, #112]
   2f6fc:	stp	x26, x25, [sp, #128]
   2f700:	stp	x24, x23, [sp, #144]
   2f704:	stp	x22, x21, [sp, #160]
   2f708:	stp	x20, x19, [sp, #176]
   2f70c:	ldr	x8, [x1, #16]
   2f710:	mov	x9, #0x2                   	// #2
   2f714:	movk	x9, #0x8000, lsl #48
   2f718:	add	x9, x9, #0x2
   2f71c:	mov	w20, w3
   2f720:	mov	x22, x2
   2f724:	mov	x21, x1
   2f728:	cmp	x8, x9
   2f72c:	mov	x19, x0
   2f730:	add	x29, sp, #0x60
   2f734:	b.lt	2fa08 <mpfr_sub_q@@Base+0x318>  // b.tstop
   2f738:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f73c:	ldr	x1, [x0, #2800]
   2f740:	add	x0, x0, #0xaf0
   2f744:	blr	x1
   2f748:	mrs	x25, tpidr_el0
   2f74c:	ldr	w8, [x25, x0]
   2f750:	str	w8, [sp, #28]
   2f754:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f758:	ldr	x1, [x0, #2736]
   2f75c:	add	x0, x0, #0xab0
   2f760:	blr	x1
   2f764:	ldr	x9, [x25, x0]
   2f768:	mov	x8, x0
   2f76c:	str	x9, [sp, #16]
   2f770:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f774:	ldr	x1, [x0, #2768]
   2f778:	add	x0, x0, #0xad0
   2f77c:	blr	x1
   2f780:	ldr	x9, [x25, x0]
   2f784:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2f788:	str	x10, [x25, x0]
   2f78c:	sub	x0, x29, #0x20
   2f790:	str	x9, [sp, #8]
   2f794:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2f798:	str	x9, [x25, x8]
   2f79c:	ldr	x8, [x19]
   2f7a0:	add	x23, x8, #0xa
   2f7a4:	mov	x1, x23
   2f7a8:	bl	cf60 <mpfr_init2@plt>
   2f7ac:	add	x0, sp, #0x20
   2f7b0:	mov	x1, x23
   2f7b4:	bl	cf60 <mpfr_init2@plt>
   2f7b8:	cmp	w20, #0x0
   2f7bc:	mov	w8, #0x40                  	// #64
   2f7c0:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   2f7c4:	cset	w26, eq  // eq = none
   2f7c8:	str	x8, [sp]
   2f7cc:	add	x0, sp, #0x20
   2f7d0:	mov	x1, x22
   2f7d4:	mov	w2, wzr
   2f7d8:	bl	cd30 <mpfr_set_q@plt>
   2f7dc:	cbz	w0, 2f8ac <mpfr_sub_q@@Base+0x1bc>
   2f7e0:	mov	w24, w0
   2f7e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f7e8:	ldr	x1, [x0, #2800]
   2f7ec:	add	x0, x0, #0xaf0
   2f7f0:	blr	x1
   2f7f4:	mov	x28, x0
   2f7f8:	str	wzr, [x25, x0]
   2f7fc:	sub	x0, x29, #0x20
   2f800:	add	x2, sp, #0x20
   2f804:	mov	x1, x21
   2f808:	mov	w3, wzr
   2f80c:	bl	bfd0 <mpfr_sub@plt>
   2f810:	ldrb	w8, [x25, x28]
   2f814:	tst	w8, #0x3
   2f818:	b.ne	2f8c4 <mpfr_sub_q@@Base+0x1d4>  // b.any
   2f81c:	ldur	x8, [x29, #-16]
   2f820:	cmp	x8, x27
   2f824:	b.eq	2f8e8 <mpfr_sub_q@@Base+0x1f8>  // b.none
   2f828:	mov	x9, #0x2                   	// #2
   2f82c:	movk	x9, #0x8000, lsl #48
   2f830:	add	x9, x9, #0x2
   2f834:	cmp	x8, x9
   2f838:	b.lt	2f8e0 <mpfr_sub_q@@Base+0x1f0>  // b.tstop
   2f83c:	ldr	x9, [sp, #48]
   2f840:	ldur	x10, [x29, #-32]
   2f844:	ldr	x11, [x19]
   2f848:	ldur	x0, [x29, #-8]
   2f84c:	sub	x8, x9, x8
   2f850:	sub	x9, x10, #0x1
   2f854:	add	x10, x10, #0x3e
   2f858:	bic	x8, x8, x8, asr #63
   2f85c:	cmp	x9, #0x0
   2f860:	mvn	x8, x8
   2f864:	csel	x9, x10, x9, lt  // lt = tstop
   2f868:	add	x2, x23, x8
   2f86c:	asr	x8, x9, #6
   2f870:	add	x1, x8, #0x1
   2f874:	add	x3, x11, x26
   2f878:	bl	c830 <mpfr_round_p@plt>
   2f87c:	cmp	w0, #0x0
   2f880:	cset	w24, ne  // ne = any
   2f884:	cbz	w24, 2f8e8 <mpfr_sub_q@@Base+0x1f8>
   2f888:	ldur	w3, [x29, #-24]
   2f88c:	sub	x1, x29, #0x20
   2f890:	mov	x0, x19
   2f894:	mov	w2, w20
   2f898:	bl	cb70 <mpfr_set4@plt>
   2f89c:	mov	w24, w0
   2f8a0:	mov	w8, wzr
   2f8a4:	tbnz	w8, #0, 2f7cc <mpfr_sub_q@@Base+0xdc>
   2f8a8:	b	2f95c <mpfr_sub_q@@Base+0x26c>
   2f8ac:	add	x2, sp, #0x20
   2f8b0:	mov	x0, x19
   2f8b4:	mov	x1, x21
   2f8b8:	mov	w3, w20
   2f8bc:	bl	bfd0 <mpfr_sub@plt>
   2f8c0:	b	2f89c <mpfr_sub_q@@Base+0x1ac>
   2f8c4:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f8c8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f8cc:	mov	w1, #0x1a3                 	// #419
   2f8d0:	add	x0, x0, #0x6de
   2f8d4:	add	x2, x2, #0x6e7
   2f8d8:	bl	d030 <mpfr_assert_fail@plt>
   2f8dc:	b	2f81c <mpfr_sub_q@@Base+0x12c>
   2f8e0:	mov	w24, wzr
   2f8e4:	cbnz	w24, 2f888 <mpfr_sub_q@@Base+0x198>
   2f8e8:	ldr	x9, [sp]
   2f8ec:	mov	x8, #0x2                   	// #2
   2f8f0:	movk	x8, #0x8000, lsl #48
   2f8f4:	sub	x8, x8, x23
   2f8f8:	sub	x8, x8, #0x103
   2f8fc:	cmp	x9, x8
   2f900:	b.gt	2f93c <mpfr_sub_q@@Base+0x24c>
   2f904:	add	x23, x9, x23
   2f908:	cmp	x23, #0x0
   2f90c:	cinc	x8, x23, lt  // lt = tstop
   2f910:	asr	x8, x8, #1
   2f914:	sub	x0, x29, #0x20
   2f918:	mov	x1, x23
   2f91c:	str	x8, [sp]
   2f920:	bl	c330 <mpfr_set_prec@plt>
   2f924:	add	x0, sp, #0x20
   2f928:	mov	x1, x23
   2f92c:	bl	c330 <mpfr_set_prec@plt>
   2f930:	mov	w8, #0x1                   	// #1
   2f934:	tbnz	w8, #0, 2f7cc <mpfr_sub_q@@Base+0xdc>
   2f938:	b	2f95c <mpfr_sub_q@@Base+0x26c>
   2f93c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2f940:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   2f944:	mov	w1, #0x1b3                 	// #435
   2f948:	add	x0, x0, #0x6de
   2f94c:	add	x2, x2, #0x26
   2f950:	bl	d030 <mpfr_assert_fail@plt>
   2f954:	ldr	x9, [sp]
   2f958:	b	2f904 <mpfr_sub_q@@Base+0x214>
   2f95c:	sub	x0, x29, #0x20
   2f960:	bl	c4f0 <mpfr_clear@plt>
   2f964:	add	x0, sp, #0x20
   2f968:	bl	c4f0 <mpfr_clear@plt>
   2f96c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f970:	ldr	x1, [x0, #2800]
   2f974:	add	x0, x0, #0xaf0
   2f978:	blr	x1
   2f97c:	ldr	w9, [sp, #28]
   2f980:	str	w9, [x25, x0]
   2f984:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f988:	ldr	x1, [x0, #2736]
   2f98c:	add	x0, x0, #0xab0
   2f990:	blr	x1
   2f994:	ldr	x10, [sp, #16]
   2f998:	str	x10, [x25, x0]
   2f99c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f9a0:	ldr	x1, [x0, #2768]
   2f9a4:	add	x0, x0, #0xad0
   2f9a8:	blr	x1
   2f9ac:	ldr	x11, [sp, #8]
   2f9b0:	str	x11, [x25, x0]
   2f9b4:	ldr	x8, [x19, #16]
   2f9b8:	cmp	x8, x11
   2f9bc:	b.gt	2fa58 <mpfr_sub_q@@Base+0x368>
   2f9c0:	cmp	x8, x10
   2f9c4:	b.lt	2fa58 <mpfr_sub_q@@Base+0x368>  // b.tstop
   2f9c8:	cbz	w24, 2f9e4 <mpfr_sub_q@@Base+0x2f4>
   2f9cc:	orr	w8, w9, #0x8
   2f9d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2f9d4:	ldr	x1, [x0, #2800]
   2f9d8:	add	x0, x0, #0xaf0
   2f9dc:	blr	x1
   2f9e0:	str	w8, [x25, x0]
   2f9e4:	mov	w0, w24
   2f9e8:	ldp	x20, x19, [sp, #176]
   2f9ec:	ldp	x22, x21, [sp, #160]
   2f9f0:	ldp	x24, x23, [sp, #144]
   2f9f4:	ldp	x26, x25, [sp, #128]
   2f9f8:	ldp	x28, x27, [sp, #112]
   2f9fc:	ldp	x29, x30, [sp, #96]
   2fa00:	add	sp, sp, #0xc0
   2fa04:	ret
   2fa08:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2fa0c:	cmp	x8, x9
   2fa10:	b.eq	2fa70 <mpfr_sub_q@@Base+0x380>  // b.none
   2fa14:	mov	x9, #0x2                   	// #2
   2fa18:	movk	x9, #0x8000, lsl #48
   2fa1c:	cmp	x8, x9
   2fa20:	b.ne	2fa80 <mpfr_sub_q@@Base+0x390>  // b.any
   2fa24:	mov	x8, #0x2                   	// #2
   2fa28:	movk	x8, #0x8000, lsl #48
   2fa2c:	str	x8, [x19, #16]
   2fa30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2fa34:	ldr	x1, [x0, #2800]
   2fa38:	add	x0, x0, #0xaf0
   2fa3c:	blr	x1
   2fa40:	mrs	x8, tpidr_el0
   2fa44:	ldr	w9, [x8, x0]
   2fa48:	mov	w24, wzr
   2fa4c:	orr	w9, w9, #0x4
   2fa50:	str	w9, [x8, x0]
   2fa54:	b	2f9e4 <mpfr_sub_q@@Base+0x2f4>
   2fa58:	mov	x0, x19
   2fa5c:	mov	w1, w24
   2fa60:	mov	w2, w20
   2fa64:	bl	d020 <mpfr_check_range@plt>
   2fa68:	mov	w24, w0
   2fa6c:	b	2f9e4 <mpfr_sub_q@@Base+0x2f4>
   2fa70:	ldr	w8, [x22, #20]
   2fa74:	cbz	w8, 2fac0 <mpfr_sub_q@@Base+0x3d0>
   2fa78:	mov	w8, wzr
   2fa7c:	b	2fae0 <mpfr_sub_q@@Base+0x3f0>
   2fa80:	ldr	w8, [x22, #4]
   2fa84:	cbz	w8, 2fafc <mpfr_sub_q@@Base+0x40c>
   2fa88:	cmp	w20, #0x3
   2fa8c:	mov	w8, #0x2                   	// #2
   2fa90:	csel	w8, w8, w20, eq  // eq = none
   2fa94:	cmp	w20, #0x2
   2fa98:	mov	w9, #0x3                   	// #3
   2fa9c:	csel	w2, w9, w8, eq  // eq = none
   2faa0:	mov	x0, x19
   2faa4:	mov	x1, x22
   2faa8:	bl	cd30 <mpfr_set_q@plt>
   2faac:	ldr	w8, [x19, #8]
   2fab0:	neg	w24, w0
   2fab4:	neg	w8, w8
   2fab8:	str	w8, [x19, #8]
   2fabc:	b	2f9e4 <mpfr_sub_q@@Base+0x2f4>
   2fac0:	ldr	w8, [x22, #4]
   2fac4:	ldr	w9, [x21, #8]
   2fac8:	cmp	w8, #0x0
   2facc:	cset	w8, ne  // ne = any
   2fad0:	csinv	w8, w8, wzr, ge  // ge = tcont
   2fad4:	mul	w8, w8, w9
   2fad8:	mvn	w8, w8
   2fadc:	lsr	w8, w8, #31
   2fae0:	cbnz	w8, 2fa24 <mpfr_sub_q@@Base+0x334>
   2fae4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2fae8:	str	x8, [x19, #16]
   2faec:	ldr	w8, [x21, #8]
   2faf0:	mov	w24, wzr
   2faf4:	str	w8, [x19, #8]
   2faf8:	b	2f9e4 <mpfr_sub_q@@Base+0x2f4>
   2fafc:	ldr	w3, [x21, #8]
   2fb00:	mov	x0, x19
   2fb04:	mov	x1, x21
   2fb08:	mov	w2, w20
   2fb0c:	bl	cb70 <mpfr_set4@plt>
   2fb10:	b	2fa68 <mpfr_sub_q@@Base+0x378>

000000000002fb14 <mpfr_cmp_q@@Base>:
   2fb14:	sub	sp, sp, #0x80
   2fb18:	stp	x29, x30, [sp, #32]
   2fb1c:	stp	x28, x27, [sp, #48]
   2fb20:	stp	x26, x25, [sp, #64]
   2fb24:	stp	x24, x23, [sp, #80]
   2fb28:	stp	x22, x21, [sp, #96]
   2fb2c:	stp	x20, x19, [sp, #112]
   2fb30:	ldr	w8, [x1, #20]
   2fb34:	mov	x20, x1
   2fb38:	mov	x19, x0
   2fb3c:	add	x29, sp, #0x20
   2fb40:	cbz	w8, 2fc40 <mpfr_cmp_q@@Base+0x12c>
   2fb44:	ldr	x9, [x19, #16]
   2fb48:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   2fb4c:	cmp	x9, x10
   2fb50:	b.le	2fc9c <mpfr_cmp_q@@Base+0x188>
   2fb54:	add	x21, x20, #0x10
   2fb58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2fb5c:	ldr	x1, [x0, #2800]
   2fb60:	add	x0, x0, #0xaf0
   2fb64:	blr	x1
   2fb68:	mrs	x25, tpidr_el0
   2fb6c:	ldr	w26, [x25, x0]
   2fb70:	mov	x22, x0
   2fb74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2fb78:	ldr	x1, [x0, #2736]
   2fb7c:	add	x0, x0, #0xab0
   2fb80:	blr	x1
   2fb84:	ldr	x27, [x25, x0]
   2fb88:	mov	x23, x0
   2fb8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2fb90:	ldr	x1, [x0, #2768]
   2fb94:	add	x0, x0, #0xad0
   2fb98:	blr	x1
   2fb9c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2fba0:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2fba4:	ldr	x28, [x25, x0]
   2fba8:	str	x9, [x25, x23]
   2fbac:	str	x10, [x25, x0]
   2fbb0:	ldr	x9, [x20, #24]
   2fbb4:	cmp	w8, #0x0
   2fbb8:	cneg	w8, w8, mi  // mi = first
   2fbbc:	ldr	x10, [x19]
   2fbc0:	add	x9, x9, w8, uxtw #3
   2fbc4:	ldur	x9, [x9, #-8]
   2fbc8:	lsl	x8, x8, #6
   2fbcc:	mov	x24, x0
   2fbd0:	mov	x0, sp
   2fbd4:	clz	x9, x9
   2fbd8:	sub	x8, x8, x9
   2fbdc:	add	x1, x8, x10
   2fbe0:	bl	cf60 <mpfr_init2@plt>
   2fbe4:	mov	x0, sp
   2fbe8:	mov	x1, x19
   2fbec:	mov	x2, x21
   2fbf0:	mov	w3, wzr
   2fbf4:	bl	c9a0 <mpfr_mul_z@plt>
   2fbf8:	mov	x0, sp
   2fbfc:	mov	x1, x20
   2fc00:	bl	c010 <mpfr_cmp_z@plt>
   2fc04:	mov	w19, w0
   2fc08:	mov	x0, sp
   2fc0c:	bl	c4f0 <mpfr_clear@plt>
   2fc10:	str	w26, [x25, x22]
   2fc14:	str	x27, [x25, x23]
   2fc18:	str	x28, [x25, x24]
   2fc1c:	mov	w0, w19
   2fc20:	ldp	x20, x19, [sp, #112]
   2fc24:	ldp	x22, x21, [sp, #96]
   2fc28:	ldp	x24, x23, [sp, #80]
   2fc2c:	ldp	x26, x25, [sp, #64]
   2fc30:	ldp	x28, x27, [sp, #48]
   2fc34:	ldp	x29, x30, [sp, #32]
   2fc38:	add	sp, sp, #0x80
   2fc3c:	ret
   2fc40:	mov	x0, sp
   2fc44:	mov	w1, #0x1                   	// #1
   2fc48:	bl	cf60 <mpfr_init2@plt>
   2fc4c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2fc50:	ldr	x1, [x0, #2800]
   2fc54:	add	x0, x0, #0xaf0
   2fc58:	blr	x1
   2fc5c:	mrs	x22, tpidr_el0
   2fc60:	ldr	w23, [x22, x0]
   2fc64:	mov	x21, x0
   2fc68:	mov	x0, sp
   2fc6c:	mov	x1, x20
   2fc70:	mov	w2, wzr
   2fc74:	bl	cd30 <mpfr_set_q@plt>
   2fc78:	mov	x1, sp
   2fc7c:	mov	w2, #0x1                   	// #1
   2fc80:	mov	x0, x19
   2fc84:	str	w23, [x22, x21]
   2fc88:	bl	ce90 <mpfr_cmp3@plt>
   2fc8c:	mov	w19, w0
   2fc90:	mov	x0, sp
   2fc94:	bl	c4f0 <mpfr_clear@plt>
   2fc98:	b	2fc1c <mpfr_cmp_q@@Base+0x108>
   2fc9c:	ldr	w8, [x20, #4]
   2fca0:	mov	x0, x19
   2fca4:	mov	x2, xzr
   2fca8:	cmp	w8, #0x0
   2fcac:	cset	w8, ne  // ne = any
   2fcb0:	csinv	x1, x8, xzr, ge  // ge = tcont
   2fcb4:	bl	c890 <mpfr_cmp_si_2exp@plt>
   2fcb8:	mov	w19, w0
   2fcbc:	b	2fc1c <mpfr_cmp_q@@Base+0x108>

000000000002fcc0 <mpfr_cmp_f@@Base>:
   2fcc0:	sub	sp, sp, #0x80
   2fcc4:	stp	x29, x30, [sp, #32]
   2fcc8:	stp	x26, x25, [sp, #64]
   2fccc:	stp	x24, x23, [sp, #80]
   2fcd0:	stp	x22, x21, [sp, #96]
   2fcd4:	stp	x20, x19, [sp, #112]
   2fcd8:	ldr	x8, [x0, #16]
   2fcdc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2fce0:	mov	x19, x0
   2fce4:	mov	x20, x1
   2fce8:	cmp	x8, x9
   2fcec:	str	x27, [sp, #48]
   2fcf0:	add	x29, sp, #0x20
   2fcf4:	b.le	2fdcc <mpfr_cmp_f@@Base+0x10c>
   2fcf8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2fcfc:	ldr	x1, [x0, #2800]
   2fd00:	add	x0, x0, #0xaf0
   2fd04:	blr	x1
   2fd08:	mrs	x24, tpidr_el0
   2fd0c:	ldr	w25, [x24, x0]
   2fd10:	mov	x21, x0
   2fd14:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2fd18:	ldr	x1, [x0, #2736]
   2fd1c:	add	x0, x0, #0xab0
   2fd20:	blr	x1
   2fd24:	ldr	x26, [x24, x0]
   2fd28:	mov	x22, x0
   2fd2c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2fd30:	ldr	x1, [x0, #2768]
   2fd34:	add	x0, x0, #0xad0
   2fd38:	blr	x1
   2fd3c:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2fd40:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   2fd44:	ldr	x27, [x24, x0]
   2fd48:	str	x8, [x24, x22]
   2fd4c:	str	x9, [x24, x0]
   2fd50:	ldr	w8, [x20, #4]
   2fd54:	mov	w1, #0x1                   	// #1
   2fd58:	mov	x23, x0
   2fd5c:	mov	x0, sp
   2fd60:	cmp	w8, #0x0
   2fd64:	cneg	w8, w8, mi  // mi = first
   2fd68:	bfi	w1, w8, #6, #26
   2fd6c:	bl	cf60 <mpfr_init2@plt>
   2fd70:	mov	x0, sp
   2fd74:	mov	x1, x20
   2fd78:	mov	w2, wzr
   2fd7c:	bl	c1a0 <mpfr_set_f@plt>
   2fd80:	mov	x1, sp
   2fd84:	mov	w2, #0x1                   	// #1
   2fd88:	mov	x0, x19
   2fd8c:	bl	ce90 <mpfr_cmp3@plt>
   2fd90:	mov	w19, w0
   2fd94:	mov	x0, sp
   2fd98:	bl	c4f0 <mpfr_clear@plt>
   2fd9c:	str	w25, [x24, x21]
   2fda0:	str	x26, [x24, x22]
   2fda4:	str	x27, [x24, x23]
   2fda8:	mov	w0, w19
   2fdac:	ldp	x20, x19, [sp, #112]
   2fdb0:	ldp	x22, x21, [sp, #96]
   2fdb4:	ldp	x24, x23, [sp, #80]
   2fdb8:	ldp	x26, x25, [sp, #64]
   2fdbc:	ldr	x27, [sp, #48]
   2fdc0:	ldp	x29, x30, [sp, #32]
   2fdc4:	add	sp, sp, #0x80
   2fdc8:	ret
   2fdcc:	ldr	w8, [x20, #4]
   2fdd0:	mov	x0, x19
   2fdd4:	mov	x2, xzr
   2fdd8:	cmp	w8, #0x0
   2fddc:	cset	w8, ne  // ne = any
   2fde0:	csinv	x1, x8, xzr, ge  // ge = tcont
   2fde4:	bl	c890 <mpfr_cmp_si_2exp@plt>
   2fde8:	mov	w19, w0
   2fdec:	b	2fda8 <mpfr_cmp_f@@Base+0xe8>
   2fdf0:	stp	x29, x30, [sp, #-32]!
   2fdf4:	stp	x20, x19, [sp, #16]
   2fdf8:	mov	x20, x0
   2fdfc:	mov	x0, x1
   2fe00:	mov	x29, sp
   2fe04:	mov	x19, x1
   2fe08:	bl	c5a0 <__gmpz_size@plt>
   2fe0c:	cmp	x0, #0x2
   2fe10:	b.cs	2fe1c <mpfr_cmp_f@@Base+0x15c>  // b.hs, b.nlast
   2fe14:	mov	w1, #0x40                  	// #64
   2fe18:	b	2fe40 <mpfr_cmp_f@@Base+0x180>
   2fe1c:	ldr	w8, [x19, #4]
   2fe20:	ldr	x9, [x19, #8]
   2fe24:	cmp	w8, #0x0
   2fe28:	cneg	w8, w8, mi  // mi = first
   2fe2c:	add	x9, x9, w8, uxtw #3
   2fe30:	ldur	x9, [x9, #-8]
   2fe34:	lsl	x8, x8, #6
   2fe38:	clz	x9, x9
   2fe3c:	sub	x1, x8, x9
   2fe40:	mov	x0, x20
   2fe44:	bl	cf60 <mpfr_init2@plt>
   2fe48:	mov	x0, x20
   2fe4c:	mov	x1, x19
   2fe50:	mov	w2, wzr
   2fe54:	bl	c6e0 <mpfr_set_z@plt>
   2fe58:	cbnz	w0, 2fe68 <mpfr_cmp_f@@Base+0x1a8>
   2fe5c:	ldp	x20, x19, [sp, #16]
   2fe60:	ldp	x29, x30, [sp], #32
   2fe64:	ret
   2fe68:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2fe6c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2fe70:	add	x0, x0, #0x6de
   2fe74:	add	x2, x2, #0x740
   2fe78:	mov	w1, #0x31                  	// #49
   2fe7c:	bl	d030 <mpfr_assert_fail@plt>
   2fe80:	b	2fe5c <mpfr_cmp_f@@Base+0x19c>

000000000002fe84 <mpfr_init2@@Base>:
   2fe84:	stp	x29, x30, [sp, #-48]!
   2fe88:	stp	x22, x21, [sp, #16]
   2fe8c:	stp	x20, x19, [sp, #32]
   2fe90:	adrp	x8, 72000 <__gmpfr_l2b@@Base+0x2f0>
   2fe94:	ldr	x8, [x8, #4032]
   2fe98:	mov	x20, x1
   2fe9c:	mov	x19, x0
   2fea0:	mov	x29, sp
   2fea4:	ldr	w8, [x8]
   2fea8:	cmp	w8, #0x40
   2feac:	b.ne	2ff18 <mpfr_init2@@Base+0x94>  // b.any
   2feb0:	mov	x21, #0xfffffffffffffeff    	// #-257
   2feb4:	movk	x21, #0x7fff, lsl #48
   2feb8:	sub	x22, x20, #0x1
   2febc:	cmp	x22, x21
   2fec0:	b.cs	2ff34 <mpfr_init2@@Base+0xb0>  // b.hs, b.nlast
   2fec4:	add	x8, x22, #0x3f
   2fec8:	cmp	x22, #0x0
   2fecc:	csel	x8, x8, x22, lt  // lt = tstop
   2fed0:	asr	x8, x8, #6
   2fed4:	add	x22, x8, #0x1
   2fed8:	lsl	x8, x22, #3
   2fedc:	add	x0, x8, #0x8
   2fee0:	bl	d1f0 <mpfr_allocate_func@plt>
   2fee4:	mov	x8, #0x4000000000000000    	// #4611686018427387904
   2fee8:	mov	w9, #0x1                   	// #1
   2feec:	add	x10, x0, #0x8
   2fef0:	add	x11, x21, #0x103
   2fef4:	str	x20, [x19]
   2fef8:	str	w9, [x19, #8]
   2fefc:	stp	x8, x10, [x19, #16]
   2ff00:	str	x22, [x0]
   2ff04:	str	x11, [x19, #16]
   2ff08:	ldp	x20, x19, [sp, #32]
   2ff0c:	ldp	x22, x21, [sp, #16]
   2ff10:	ldp	x29, x30, [sp], #48
   2ff14:	ret
   2ff18:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2ff1c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2ff20:	add	x0, x0, #0x7c6
   2ff24:	add	x2, x2, #0x7ce
   2ff28:	mov	w1, #0x27                  	// #39
   2ff2c:	bl	d030 <mpfr_assert_fail@plt>
   2ff30:	b	2feb0 <mpfr_init2@@Base+0x2c>
   2ff34:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   2ff38:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   2ff3c:	add	x0, x0, #0x7c6
   2ff40:	add	x2, x2, #0xfba
   2ff44:	mov	w1, #0x34                  	// #52
   2ff48:	bl	d030 <mpfr_assert_fail@plt>
   2ff4c:	b	2fec4 <mpfr_init2@@Base+0x40>

000000000002ff50 <mpfr_acos@@Base>:
   2ff50:	sub	sp, sp, #0xd0
   2ff54:	stp	x29, x30, [sp, #112]
   2ff58:	stp	x28, x27, [sp, #128]
   2ff5c:	stp	x26, x25, [sp, #144]
   2ff60:	stp	x24, x23, [sp, #160]
   2ff64:	stp	x22, x21, [sp, #176]
   2ff68:	stp	x20, x19, [sp, #192]
   2ff6c:	ldr	x8, [x1, #16]
   2ff70:	mov	x23, #0x2                   	// #2
   2ff74:	movk	x23, #0x8000, lsl #48
   2ff78:	add	x9, x23, #0x2
   2ff7c:	mov	w19, w2
   2ff80:	cmp	x8, x9
   2ff84:	mov	x20, x0
   2ff88:	add	x29, sp, #0x70
   2ff8c:	b.lt	302b4 <mpfr_acos@@Base+0x364>  // b.tstop
   2ff90:	mov	x21, x1
   2ff94:	ldr	w24, [x1, #8]
   2ff98:	ldr	x1, [x1]
   2ff9c:	sub	x0, x29, #0x20
   2ffa0:	bl	cf60 <mpfr_init2@plt>
   2ffa4:	sub	x0, x29, #0x20
   2ffa8:	mov	w3, #0x1                   	// #1
   2ffac:	mov	x1, x21
   2ffb0:	mov	w2, wzr
   2ffb4:	bl	cb70 <mpfr_set4@plt>
   2ffb8:	sub	x0, x29, #0x20
   2ffbc:	mov	w1, #0x1                   	// #1
   2ffc0:	mov	x2, xzr
   2ffc4:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   2ffc8:	tbz	w0, #31, 30394 <mpfr_acos@@Base+0x444>
   2ffcc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ffd0:	ldr	x1, [x0, #2800]
   2ffd4:	add	x0, x0, #0xaf0
   2ffd8:	blr	x1
   2ffdc:	mrs	x26, tpidr_el0
   2ffe0:	ldr	w27, [x26, x0]
   2ffe4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   2ffe8:	ldr	x1, [x0, #2736]
   2ffec:	add	x0, x0, #0xab0
   2fff0:	blr	x1
   2fff4:	ldr	x28, [x26, x0]
   2fff8:	mov	x8, x0
   2fffc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30000:	ldr	x1, [x0, #2768]
   30004:	add	x0, x0, #0xad0
   30008:	blr	x1
   3000c:	ldr	x23, [x26, x0]
   30010:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   30014:	str	x9, [x26, x8]
   30018:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   3001c:	str	x8, [x26, x0]
   30020:	sub	x0, x29, #0x20
   30024:	sub	x2, x29, #0x20
   30028:	mov	w1, #0x1                   	// #1
   3002c:	mov	w3, #0x3                   	// #3
   30030:	bl	cf30 <mpfr_ui_sub@plt>
   30034:	ldur	x8, [x29, #-16]
   30038:	cmp	w24, #0x0
   3003c:	cset	w9, gt
   30040:	sub	x0, x29, #0x20
   30044:	lsl	x8, x8, x9
   30048:	mov	w9, #0x2                   	// #2
   3004c:	sub	x24, x9, x8
   30050:	bl	c4f0 <mpfr_clear@plt>
   30054:	ldr	x22, [x20]
   30058:	subs	x25, x22, #0x1
   3005c:	b.eq	303e8 <mpfr_acos@@Base+0x498>  // b.none
   30060:	b.le	303f0 <mpfr_acos@@Base+0x4a0>
   30064:	clz	x8, x25
   30068:	mov	w9, #0x4a                  	// #74
   3006c:	sub	x8, x9, x8
   30070:	add	x9, x22, x24
   30074:	add	x22, x9, x8
   30078:	add	x0, sp, #0x10
   3007c:	mov	x1, x22
   30080:	bl	cf60 <mpfr_init2@plt>
   30084:	add	x0, sp, #0x30
   30088:	mov	x1, x22
   3008c:	bl	cf60 <mpfr_init2@plt>
   30090:	cmp	w19, #0x0
   30094:	mov	w8, #0x40                  	// #64
   30098:	cset	w25, eq  // eq = none
   3009c:	str	x8, [sp, #8]
   300a0:	add	x0, sp, #0x10
   300a4:	mov	x1, x21
   300a8:	mov	w2, wzr
   300ac:	bl	c8c0 <mpfr_sqr@plt>
   300b0:	add	x0, sp, #0x10
   300b4:	add	x2, sp, #0x10
   300b8:	mov	w1, #0x1                   	// #1
   300bc:	mov	w3, wzr
   300c0:	bl	cf30 <mpfr_ui_sub@plt>
   300c4:	add	x0, sp, #0x10
   300c8:	add	x1, sp, #0x10
   300cc:	mov	w2, wzr
   300d0:	bl	ce20 <mpfr_sqrt@plt>
   300d4:	add	x0, sp, #0x10
   300d8:	add	x2, sp, #0x10
   300dc:	mov	x1, x21
   300e0:	mov	w3, wzr
   300e4:	bl	caf0 <mpfr_div@plt>
   300e8:	add	x0, sp, #0x30
   300ec:	add	x1, sp, #0x10
   300f0:	mov	w2, wzr
   300f4:	bl	cb60 <mpfr_atan@plt>
   300f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   300fc:	ldr	x1, [x0, #2848]
   30100:	add	x0, x0, #0xb20
   30104:	blr	x1
   30108:	add	x1, x26, x0
   3010c:	add	x0, sp, #0x10
   30110:	mov	w2, wzr
   30114:	bl	c840 <mpfr_cache@plt>
   30118:	add	x0, sp, #0x10
   3011c:	add	x1, sp, #0x10
   30120:	mov	w2, #0x1                   	// #1
   30124:	mov	w3, wzr
   30128:	bl	cde0 <mpfr_div_2ui@plt>
   3012c:	add	x0, sp, #0x30
   30130:	add	x1, sp, #0x10
   30134:	add	x2, sp, #0x30
   30138:	mov	w3, wzr
   3013c:	bl	bfd0 <mpfr_sub@plt>
   30140:	ldr	x8, [sp, #64]
   30144:	mov	x9, #0x2                   	// #2
   30148:	movk	x9, #0x8000, lsl #48
   3014c:	add	x9, x9, #0x2
   30150:	cmp	x8, x9
   30154:	b.lt	3018c <mpfr_acos@@Base+0x23c>  // b.tstop
   30158:	ldr	x8, [sp, #48]
   3015c:	ldr	x9, [x20]
   30160:	ldr	x0, [sp, #72]
   30164:	sub	x2, x22, x24
   30168:	sub	x10, x8, #0x1
   3016c:	add	x8, x8, #0x3e
   30170:	cmp	x10, #0x0
   30174:	csel	x8, x8, x10, lt  // lt = tstop
   30178:	asr	x8, x8, #6
   3017c:	add	x1, x8, #0x1
   30180:	add	x3, x9, x25
   30184:	bl	c830 <mpfr_round_p@plt>
   30188:	cbnz	w0, 301fc <mpfr_acos@@Base+0x2ac>
   3018c:	mov	x8, #0x2                   	// #2
   30190:	ldr	x9, [sp, #8]
   30194:	movk	x8, #0x8000, lsl #48
   30198:	sub	x8, x8, x22
   3019c:	sub	x8, x8, #0x103
   301a0:	cmp	x9, x8
   301a4:	mov	x8, x9
   301a8:	b.gt	301dc <mpfr_acos@@Base+0x28c>
   301ac:	add	x22, x22, x8
   301b0:	cmp	x22, #0x0
   301b4:	cinc	x8, x22, lt  // lt = tstop
   301b8:	asr	x8, x8, #1
   301bc:	add	x0, sp, #0x10
   301c0:	mov	x1, x22
   301c4:	str	x8, [sp, #8]
   301c8:	bl	c330 <mpfr_set_prec@plt>
   301cc:	add	x0, sp, #0x30
   301d0:	mov	x1, x22
   301d4:	bl	c330 <mpfr_set_prec@plt>
   301d8:	b	300a0 <mpfr_acos@@Base+0x150>
   301dc:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   301e0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   301e4:	mov	w1, #0x86                  	// #134
   301e8:	add	x0, x0, #0x7ee
   301ec:	add	x2, x2, #0x99a
   301f0:	bl	d030 <mpfr_assert_fail@plt>
   301f4:	ldr	x8, [sp, #8]
   301f8:	b	301ac <mpfr_acos@@Base+0x25c>
   301fc:	ldr	w3, [sp, #56]
   30200:	add	x1, sp, #0x30
   30204:	mov	x0, x20
   30208:	mov	w2, w19
   3020c:	bl	cb70 <mpfr_set4@plt>
   30210:	mov	w21, w0
   30214:	add	x0, sp, #0x10
   30218:	bl	c4f0 <mpfr_clear@plt>
   3021c:	add	x0, sp, #0x30
   30220:	bl	c4f0 <mpfr_clear@plt>
   30224:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30228:	ldr	x1, [x0, #2800]
   3022c:	add	x0, x0, #0xaf0
   30230:	blr	x1
   30234:	str	w27, [x26, x0]
   30238:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3023c:	ldr	x1, [x0, #2736]
   30240:	add	x0, x0, #0xab0
   30244:	blr	x1
   30248:	str	x28, [x26, x0]
   3024c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30250:	ldr	x1, [x0, #2768]
   30254:	add	x0, x0, #0xad0
   30258:	blr	x1
   3025c:	str	x23, [x26, x0]
   30260:	ldr	x8, [x20, #16]
   30264:	cmp	x8, x23
   30268:	b.gt	303d0 <mpfr_acos@@Base+0x480>
   3026c:	cmp	x8, x28
   30270:	b.lt	303d0 <mpfr_acos@@Base+0x480>  // b.tstop
   30274:	cbz	w21, 30290 <mpfr_acos@@Base+0x340>
   30278:	orr	w8, w27, #0x8
   3027c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30280:	ldr	x1, [x0, #2800]
   30284:	add	x0, x0, #0xaf0
   30288:	blr	x1
   3028c:	str	w8, [x26, x0]
   30290:	mov	w0, w21
   30294:	ldp	x20, x19, [sp, #192]
   30298:	ldp	x22, x21, [sp, #176]
   3029c:	ldp	x24, x23, [sp, #160]
   302a0:	ldp	x26, x25, [sp, #144]
   302a4:	ldp	x28, x27, [sp, #128]
   302a8:	ldp	x29, x30, [sp, #112]
   302ac:	add	sp, sp, #0xd0
   302b0:	ret
   302b4:	and	x8, x8, #0xfffffffffffffffe
   302b8:	cmp	x8, x23
   302bc:	b.eq	303a4 <mpfr_acos@@Base+0x454>  // b.none
   302c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   302c4:	ldr	x1, [x0, #2800]
   302c8:	add	x0, x0, #0xaf0
   302cc:	blr	x1
   302d0:	mrs	x25, tpidr_el0
   302d4:	ldr	w26, [x25, x0]
   302d8:	mov	x22, x0
   302dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   302e0:	ldr	x1, [x0, #2736]
   302e4:	add	x0, x0, #0xab0
   302e8:	blr	x1
   302ec:	ldr	x27, [x25, x0]
   302f0:	mov	x23, x0
   302f4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   302f8:	ldr	x1, [x0, #2768]
   302fc:	add	x0, x0, #0xad0
   30300:	blr	x1
   30304:	ldr	x28, [x25, x0]
   30308:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   3030c:	str	x8, [x25, x23]
   30310:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   30314:	mov	x24, x0
   30318:	str	x8, [x25, x0]
   3031c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30320:	ldr	x1, [x0, #2848]
   30324:	add	x0, x0, #0xb20
   30328:	blr	x1
   3032c:	add	x1, x25, x0
   30330:	mov	x0, x20
   30334:	mov	w2, w19
   30338:	bl	c840 <mpfr_cache@plt>
   3033c:	mov	w21, w0
   30340:	mov	w2, #0x1                   	// #1
   30344:	mov	x0, x20
   30348:	mov	x1, x20
   3034c:	mov	w3, w19
   30350:	bl	cde0 <mpfr_div_2ui@plt>
   30354:	str	w26, [x25, x22]
   30358:	str	x27, [x25, x23]
   3035c:	str	x28, [x25, x24]
   30360:	ldr	x8, [x20, #16]
   30364:	cmp	x8, x28
   30368:	b.gt	303d0 <mpfr_acos@@Base+0x480>
   3036c:	cmp	x8, x27
   30370:	b.lt	303d0 <mpfr_acos@@Base+0x480>  // b.tstop
   30374:	cbz	w21, 30290 <mpfr_acos@@Base+0x340>
   30378:	orr	w8, w26, #0x8
   3037c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30380:	ldr	x1, [x0, #2800]
   30384:	add	x0, x0, #0xaf0
   30388:	blr	x1
   3038c:	str	w8, [x25, x0]
   30390:	b	30290 <mpfr_acos@@Base+0x340>
   30394:	mov	w22, w0
   30398:	sub	x0, x29, #0x20
   3039c:	bl	c4f0 <mpfr_clear@plt>
   303a0:	cbz	w22, 3040c <mpfr_acos@@Base+0x4bc>
   303a4:	str	x23, [x20, #16]
   303a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   303ac:	ldr	x1, [x0, #2800]
   303b0:	add	x0, x0, #0xaf0
   303b4:	blr	x1
   303b8:	mrs	x8, tpidr_el0
   303bc:	ldr	w9, [x8, x0]
   303c0:	mov	w21, wzr
   303c4:	orr	w9, w9, #0x4
   303c8:	str	w9, [x8, x0]
   303cc:	b	30290 <mpfr_acos@@Base+0x340>
   303d0:	mov	x0, x20
   303d4:	mov	w1, w21
   303d8:	mov	w2, w19
   303dc:	bl	d020 <mpfr_check_range@plt>
   303e0:	mov	w21, w0
   303e4:	b	30290 <mpfr_acos@@Base+0x340>
   303e8:	mov	w8, #0xa                   	// #10
   303ec:	b	30070 <mpfr_acos@@Base+0x120>
   303f0:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   303f4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   303f8:	add	x0, x0, #0x7ee
   303fc:	add	x2, x2, #0x985
   30400:	mov	w1, #0x60                  	// #96
   30404:	bl	d030 <mpfr_assert_fail@plt>
   30408:	b	30064 <mpfr_acos@@Base+0x114>
   3040c:	cmp	w24, #0x1
   30410:	b.lt	3042c <mpfr_acos@@Base+0x4dc>  // b.tstop
   30414:	mov	w8, #0x1                   	// #1
   30418:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3041c:	mov	w21, wzr
   30420:	str	w8, [x20, #8]
   30424:	str	x9, [x20, #16]
   30428:	b	30290 <mpfr_acos@@Base+0x340>
   3042c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30430:	ldr	x1, [x0, #2848]
   30434:	add	x0, x0, #0xb20
   30438:	blr	x1
   3043c:	mrs	x8, tpidr_el0
   30440:	add	x1, x8, x0
   30444:	mov	x0, x20
   30448:	mov	w2, w19
   3044c:	bl	c840 <mpfr_cache@plt>
   30450:	b	303e0 <mpfr_acos@@Base+0x490>

0000000000030454 <mpfr_sin_cos@@Base>:
   30454:	sub	sp, sp, #0xe0
   30458:	stp	x22, x21, [sp, #192]
   3045c:	mov	x12, x0
   30460:	cmp	x0, x1
   30464:	mov	x22, x2
   30468:	stp	x29, x30, [sp, #128]
   3046c:	stp	x28, x27, [sp, #144]
   30470:	stp	x26, x25, [sp, #160]
   30474:	stp	x24, x23, [sp, #176]
   30478:	stp	x20, x19, [sp, #208]
   3047c:	add	x29, sp, #0x80
   30480:	str	w3, [sp, #36]
   30484:	stp	x0, x1, [sp, #40]
   30488:	b.eq	30ac8 <mpfr_sin_cos@@Base+0x674>  // b.none
   3048c:	ldr	x8, [x22, #16]
   30490:	mov	x19, #0x2                   	// #2
   30494:	movk	x19, #0x8000, lsl #48
   30498:	add	x9, x19, #0x2
   3049c:	cmp	x8, x9
   304a0:	b.lt	30ae8 <mpfr_sin_cos@@Base+0x694>  // b.tstop
   304a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   304a8:	ldr	x1, [x0, #2800]
   304ac:	add	x0, x0, #0xaf0
   304b0:	blr	x1
   304b4:	mrs	x11, tpidr_el0
   304b8:	ldr	w13, [x11, x0]
   304bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   304c0:	ldr	x1, [x0, #2736]
   304c4:	add	x0, x0, #0xab0
   304c8:	blr	x1
   304cc:	ldr	x14, [x11, x0]
   304d0:	mov	x8, x0
   304d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   304d8:	ldr	x1, [x0, #2768]
   304dc:	add	x0, x0, #0xad0
   304e0:	blr	x1
   304e4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   304e8:	str	x9, [x11, x8]
   304ec:	ldr	x9, [sp, #48]
   304f0:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   304f4:	ldr	x27, [x11, x0]
   304f8:	str	x10, [x11, x0]
   304fc:	ldr	x8, [x12]
   30500:	ldr	x9, [x9]
   30504:	cmp	x8, x9
   30508:	csel	x20, x8, x9, gt
   3050c:	subs	x21, x20, #0x1
   30510:	b.eq	30b28 <mpfr_sin_cos@@Base+0x6d4>  // b.none
   30514:	b.le	30b30 <mpfr_sin_cos@@Base+0x6dc>
   30518:	clz	x8, x21
   3051c:	mov	w9, #0x40                  	// #64
   30520:	sub	x8, x9, x8
   30524:	ldr	x28, [x22, #16]
   30528:	add	x8, x20, x8
   3052c:	add	x23, x8, #0xd
   30530:	tbz	x28, #63, 305e0 <mpfr_sin_cos@@Base+0x18c>
   30534:	cmp	x12, x22
   30538:	neg	x21, x28, lsl #1
   3053c:	b.eq	30590 <mpfr_sin_cos@@Base+0x13c>  // b.none
   30540:	ldr	x8, [x12]
   30544:	add	x2, x21, #0x2
   30548:	add	x8, x8, #0x1
   3054c:	cmp	x2, x8
   30550:	b.hi	30be8 <mpfr_sin_cos@@Base+0x794>  // b.pmore
   30554:	mov	w8, wzr
   30558:	cbz	w8, 305dc <mpfr_sin_cos@@Base+0x188>
   3055c:	cmp	w8, #0x6
   30560:	b.ne	30aa4 <mpfr_sin_cos@@Base+0x650>  // b.any
   30564:	ldr	x8, [sp, #48]
   30568:	orr	x2, x21, #0x1
   3056c:	ldr	x8, [x8]
   30570:	add	x8, x8, #0x1
   30574:	cmp	x2, x8
   30578:	b.hi	30ca8 <mpfr_sin_cos@@Base+0x854>  // b.pmore
   3057c:	mov	w8, wzr
   30580:	cbz	w8, 305dc <mpfr_sin_cos@@Base+0x188>
   30584:	cmp	w8, #0x9
   30588:	b.eq	30988 <mpfr_sin_cos@@Base+0x534>  // b.none
   3058c:	b	30aa4 <mpfr_sin_cos@@Base+0x650>
   30590:	ldr	x8, [sp, #48]
   30594:	orr	x2, x21, #0x1
   30598:	ldr	x8, [x8]
   3059c:	add	x8, x8, #0x1
   305a0:	cmp	x2, x8
   305a4:	b.hi	30c3c <mpfr_sin_cos@@Base+0x7e8>  // b.pmore
   305a8:	mov	w8, wzr
   305ac:	cbz	w8, 305dc <mpfr_sin_cos@@Base+0x188>
   305b0:	cmp	w8, #0xc
   305b4:	b.ne	30aa4 <mpfr_sin_cos@@Base+0x650>  // b.any
   305b8:	ldr	x8, [x12]
   305bc:	add	x2, x21, #0x2
   305c0:	add	x8, x8, #0x1
   305c4:	cmp	x2, x8
   305c8:	b.hi	30d28 <mpfr_sin_cos@@Base+0x8d4>  // b.pmore
   305cc:	mov	w9, wzr
   305d0:	cmp	w9, #0x9
   305d4:	b.eq	30988 <mpfr_sin_cos@@Base+0x534>  // b.none
   305d8:	cbnz	w9, 30aa4 <mpfr_sin_cos@@Base+0x650>
   305dc:	sub	x23, x23, x28, lsl #1
   305e0:	mov	w8, #0x7530                	// #30000
   305e4:	cmp	x20, x8
   305e8:	b.lt	30644 <mpfr_sin_cos@@Base+0x1f0>  // b.tstop
   305ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   305f0:	ldr	x1, [x0, #2800]
   305f4:	add	x0, x0, #0xaf0
   305f8:	blr	x1
   305fc:	str	w13, [x11, x0]
   30600:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30604:	ldr	x1, [x0, #2736]
   30608:	add	x0, x0, #0xab0
   3060c:	blr	x1
   30610:	str	x14, [x11, x0]
   30614:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30618:	ldr	x1, [x0, #2768]
   3061c:	add	x0, x0, #0xad0
   30620:	blr	x1
   30624:	ldr	x1, [sp, #48]
   30628:	ldr	w3, [sp, #36]
   3062c:	str	x27, [x11, x0]
   30630:	mov	x0, x12
   30634:	mov	x2, x22
   30638:	bl	c490 <mpfr_sincos_fast@plt>
   3063c:	mov	w8, w0
   30640:	b	30aa4 <mpfr_sin_cos@@Base+0x650>
   30644:	sub	x0, x29, #0x20
   30648:	stp	x14, x27, [sp, #16]
   3064c:	str	w13, [sp, #12]
   30650:	mov	x21, x11
   30654:	bl	c030 <mpfr_init@plt>
   30658:	add	x0, sp, #0x40
   3065c:	bl	c030 <mpfr_init@plt>
   30660:	ldr	w8, [sp, #36]
   30664:	sub	x24, x28, #0x1
   30668:	mov	w20, #0x40                  	// #64
   3066c:	cmp	w8, #0x0
   30670:	cset	w8, eq  // eq = none
   30674:	str	x8, [sp, #56]
   30678:	cmp	x28, #0x2
   3067c:	b.lt	30718 <mpfr_sin_cos@@Base+0x2c4>  // b.tstop
   30680:	add	x1, x24, x23
   30684:	sub	x0, x29, #0x20
   30688:	bl	c330 <mpfr_set_prec@plt>
   3068c:	add	x0, sp, #0x40
   30690:	mov	x1, x23
   30694:	bl	c330 <mpfr_set_prec@plt>
   30698:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3069c:	ldr	x1, [x0, #2848]
   306a0:	add	x0, x0, #0xb20
   306a4:	blr	x1
   306a8:	add	x1, x21, x0
   306ac:	sub	x0, x29, #0x20
   306b0:	mov	w2, wzr
   306b4:	bl	c840 <mpfr_cache@plt>
   306b8:	sub	x0, x29, #0x20
   306bc:	sub	x1, x29, #0x20
   306c0:	mov	w2, #0x1                   	// #1
   306c4:	mov	w3, wzr
   306c8:	bl	c780 <mpfr_mul_2ui@plt>
   306cc:	add	x0, sp, #0x40
   306d0:	sub	x2, x29, #0x20
   306d4:	mov	x1, x22
   306d8:	mov	w3, wzr
   306dc:	bl	d210 <mpfr_remainder@plt>
   306e0:	sub	x0, x29, #0x20
   306e4:	sub	x1, x29, #0x20
   306e8:	mov	w2, #0x1                   	// #1
   306ec:	mov	w3, wzr
   306f0:	bl	cde0 <mpfr_div_2ui@plt>
   306f4:	ldr	w8, [sp, #72]
   306f8:	sub	x0, x29, #0x20
   306fc:	sub	x1, x29, #0x20
   30700:	add	x2, sp, #0x40
   30704:	mov	w3, #0x1                   	// #1
   30708:	cmp	w8, #0x1
   3070c:	b.lt	30724 <mpfr_sin_cos@@Base+0x2d0>  // b.tstop
   30710:	bl	bfd0 <mpfr_sub@plt>
   30714:	b	30728 <mpfr_sin_cos@@Base+0x2d4>
   30718:	mov	w27, wzr
   3071c:	mov	x26, x22
   30720:	b	3075c <mpfr_sin_cos@@Base+0x308>
   30724:	bl	c640 <mpfr_add@plt>
   30728:	ldr	x8, [sp, #80]
   3072c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   30730:	cmp	x8, x9
   30734:	b.eq	308e0 <mpfr_sin_cos@@Base+0x48c>  // b.none
   30738:	mov	w9, #0x3                   	// #3
   3073c:	sub	x9, x9, x23
   30740:	cmp	x8, x9
   30744:	b.lt	308e0 <mpfr_sin_cos@@Base+0x48c>  // b.tstop
   30748:	ldur	x8, [x29, #-16]
   3074c:	cmp	x8, x9
   30750:	b.lt	308e0 <mpfr_sin_cos@@Base+0x48c>  // b.tstop
   30754:	add	x26, sp, #0x40
   30758:	mov	w27, #0x1                   	// #1
   3075c:	ldr	w25, [x26, #8]
   30760:	sub	x0, x29, #0x20
   30764:	mov	x1, x23
   30768:	bl	c330 <mpfr_set_prec@plt>
   3076c:	sub	x0, x29, #0x20
   30770:	mov	w2, #0x1                   	// #1
   30774:	mov	x1, x26
   30778:	bl	c900 <mpfr_cos@plt>
   3077c:	ldur	x8, [x29, #-16]
   30780:	add	x9, x19, #0x2
   30784:	cmp	x8, x9
   30788:	b.lt	308e0 <mpfr_sin_cos@@Base+0x48c>  // b.tstop
   3078c:	ldur	x9, [x29, #-32]
   30790:	add	x8, x23, x8
   30794:	cmp	w27, #0x0
   30798:	sub	x8, x8, #0x3
   3079c:	ldr	x10, [sp, #48]
   307a0:	csel	x2, x23, x8, eq  // eq = none
   307a4:	sub	x8, x9, #0x1
   307a8:	add	x9, x9, #0x3e
   307ac:	cmp	x8, #0x0
   307b0:	csel	x8, x9, x8, lt  // lt = tstop
   307b4:	asr	x8, x8, #6
   307b8:	ldr	x10, [x10]
   307bc:	add	x1, x8, #0x1
   307c0:	ldr	x8, [sp, #56]
   307c4:	ldur	x0, [x29, #-8]
   307c8:	add	x3, x10, x8
   307cc:	bl	c830 <mpfr_round_p@plt>
   307d0:	cbz	w0, 308e0 <mpfr_sin_cos@@Base+0x48c>
   307d4:	ldur	x1, [x29, #-32]
   307d8:	add	x0, sp, #0x40
   307dc:	bl	c330 <mpfr_set_prec@plt>
   307e0:	add	x0, sp, #0x40
   307e4:	sub	x1, x29, #0x20
   307e8:	bl	c970 <mpfr_swap@plt>
   307ec:	sub	x0, x29, #0x20
   307f0:	add	x1, sp, #0x40
   307f4:	mov	w2, #0x2                   	// #2
   307f8:	bl	c8c0 <mpfr_sqr@plt>
   307fc:	sub	x0, x29, #0x20
   30800:	sub	x2, x29, #0x20
   30804:	mov	w1, #0x1                   	// #1
   30808:	mov	w3, wzr
   3080c:	bl	cf30 <mpfr_ui_sub@plt>
   30810:	sub	x0, x29, #0x20
   30814:	sub	x1, x29, #0x20
   30818:	mov	w2, wzr
   3081c:	bl	ce20 <mpfr_sqrt@plt>
   30820:	ldur	x8, [x29, #-16]
   30824:	bfi	w27, w27, #1, #1
   30828:	add	w9, w27, #0x3
   3082c:	tbz	w25, #31, 3083c <mpfr_sin_cos@@Base+0x3e8>
   30830:	ldur	w10, [x29, #-24]
   30834:	neg	w10, w10
   30838:	stur	w10, [x29, #-24]
   3083c:	add	x10, x8, x23
   30840:	sub	x9, x8, x9
   30844:	add	x26, x10, x9
   30848:	ldr	x9, [sp, #40]
   3084c:	add	x11, x19, #0x2
   30850:	cmp	x8, x11
   30854:	b.lt	30894 <mpfr_sin_cos@@Base+0x440>  // b.tstop
   30858:	ldur	x8, [x29, #-32]
   3085c:	ldr	x9, [x9]
   30860:	ldur	x0, [x29, #-8]
   30864:	mov	x2, x26
   30868:	sub	x10, x8, #0x1
   3086c:	add	x8, x8, #0x3e
   30870:	cmp	x10, #0x0
   30874:	csel	x8, x8, x10, lt  // lt = tstop
   30878:	asr	x8, x8, #6
   3087c:	add	x1, x8, #0x1
   30880:	ldr	x8, [sp, #56]
   30884:	add	x3, x9, x8
   30888:	bl	c830 <mpfr_round_p@plt>
   3088c:	ldr	x9, [sp, #40]
   30890:	cbnz	w0, 30934 <mpfr_sin_cos@@Base+0x4e0>
   30894:	ldr	x8, [x9]
   30898:	ldur	x9, [x29, #-16]
   3089c:	subs	x8, x8, x26
   308a0:	csel	x8, x8, xzr, gt
   308a4:	cmp	x9, #0x1
   308a8:	add	x23, x8, x23
   308ac:	b.ne	308e0 <mpfr_sin_cos@@Base+0x48c>  // b.any
   308b0:	ldur	x8, [x29, #-32]
   308b4:	ldur	x9, [x29, #-8]
   308b8:	sub	x10, x8, #0x1
   308bc:	add	x8, x8, #0x3e
   308c0:	cmp	x10, #0x0
   308c4:	csel	x8, x8, x10, lt  // lt = tstop
   308c8:	asr	x8, x8, #6
   308cc:	ldr	x8, [x9, x8, lsl #3]
   308d0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   308d4:	cmp	x8, x9
   308d8:	cset	w8, eq  // eq = none
   308dc:	lsl	x23, x23, x8
   308e0:	sub	x8, x19, x23
   308e4:	sub	x8, x8, #0x103
   308e8:	cmp	x20, x8
   308ec:	b.gt	30918 <mpfr_sin_cos@@Base+0x4c4>
   308f0:	add	x23, x23, x20
   308f4:	cmp	x23, #0x0
   308f8:	cinc	x8, x23, lt  // lt = tstop
   308fc:	sub	x0, x29, #0x20
   30900:	mov	x1, x23
   30904:	asr	x20, x8, #1
   30908:	bl	c330 <mpfr_set_prec@plt>
   3090c:	cmp	x28, #0x2
   30910:	b.lt	30718 <mpfr_sin_cos@@Base+0x2c4>  // b.tstop
   30914:	b	30680 <mpfr_sin_cos@@Base+0x22c>
   30918:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   3091c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   30920:	mov	w1, #0xd2                  	// #210
   30924:	add	x0, x0, #0x7f5
   30928:	add	x2, x2, #0x5cf
   3092c:	bl	d030 <mpfr_assert_fail@plt>
   30930:	b	308f0 <mpfr_sin_cos@@Base+0x49c>
   30934:	ldr	w19, [sp, #36]
   30938:	ldur	w3, [x29, #-24]
   3093c:	sub	x1, x29, #0x20
   30940:	mov	x0, x9
   30944:	mov	w2, w19
   30948:	bl	cb70 <mpfr_set4@plt>
   3094c:	ldr	w3, [sp, #72]
   30950:	mov	w24, w0
   30954:	ldr	x0, [sp, #48]
   30958:	add	x1, sp, #0x40
   3095c:	mov	w2, w19
   30960:	bl	cb70 <mpfr_set4@plt>
   30964:	mov	w25, w0
   30968:	sub	x0, x29, #0x20
   3096c:	bl	c4f0 <mpfr_clear@plt>
   30970:	add	x0, sp, #0x40
   30974:	bl	c4f0 <mpfr_clear@plt>
   30978:	ldr	x12, [sp, #40]
   3097c:	ldr	w13, [sp, #12]
   30980:	ldp	x14, x27, [sp, #16]
   30984:	mov	x11, x21
   30988:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3098c:	ldr	x1, [x0, #2800]
   30990:	add	x0, x0, #0xaf0
   30994:	blr	x1
   30998:	str	w13, [x11, x0]
   3099c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   309a0:	ldr	x1, [x0, #2736]
   309a4:	add	x0, x0, #0xab0
   309a8:	blr	x1
   309ac:	str	x14, [x11, x0]
   309b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   309b4:	ldr	x1, [x0, #2768]
   309b8:	add	x0, x0, #0xad0
   309bc:	blr	x1
   309c0:	str	x27, [x11, x0]
   309c4:	ldr	x8, [x12, #16]
   309c8:	cmp	x8, x27
   309cc:	b.gt	30ba8 <mpfr_sin_cos@@Base+0x754>
   309d0:	cmp	x8, x14
   309d4:	b.lt	30ba8 <mpfr_sin_cos@@Base+0x754>  // b.tstop
   309d8:	cbz	w24, 309f4 <mpfr_sin_cos@@Base+0x5a0>
   309dc:	orr	w8, w13, #0x8
   309e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   309e4:	ldr	x1, [x0, #2800]
   309e8:	add	x0, x0, #0xaf0
   309ec:	blr	x1
   309f0:	str	w8, [x11, x0]
   309f4:	ldr	x8, [sp, #48]
   309f8:	ldr	x8, [x8, #16]
   309fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30a00:	ldr	x1, [x0, #2736]
   30a04:	add	x0, x0, #0xab0
   30a08:	blr	x1
   30a0c:	ldr	x9, [x11, x0]
   30a10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30a14:	ldr	x1, [x0, #2768]
   30a18:	add	x0, x0, #0xad0
   30a1c:	blr	x1
   30a20:	cmp	x8, x9
   30a24:	b.lt	30bc8 <mpfr_sin_cos@@Base+0x774>  // b.tstop
   30a28:	ldr	x9, [x11, x0]
   30a2c:	cmp	x8, x9
   30a30:	b.gt	30bc8 <mpfr_sin_cos@@Base+0x774>
   30a34:	cbz	w25, 30a54 <mpfr_sin_cos@@Base+0x600>
   30a38:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30a3c:	ldr	x1, [x0, #2800]
   30a40:	add	x0, x0, #0xaf0
   30a44:	blr	x1
   30a48:	ldr	w8, [x11, x0]
   30a4c:	orr	w8, w8, #0x8
   30a50:	str	w8, [x11, x0]
   30a54:	cmp	w24, #0x1
   30a58:	mov	w8, #0x1                   	// #1
   30a5c:	cinc	w8, w8, lt  // lt = tstop
   30a60:	cmp	w24, #0x0
   30a64:	mov	w9, #0x4                   	// #4
   30a68:	mov	w10, #0x8                   	// #8
   30a6c:	csel	w8, wzr, w8, eq  // eq = none
   30a70:	cmp	w25, #0x1
   30a74:	csel	w9, w10, w9, lt  // lt = tstop
   30a78:	cmp	w25, #0x0
   30a7c:	csel	w9, wzr, w9, eq  // eq = none
   30a80:	orr	w8, w9, w8
   30a84:	cbz	w8, 30aa4 <mpfr_sin_cos@@Base+0x650>
   30a88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30a8c:	ldr	x1, [x0, #2800]
   30a90:	add	x0, x0, #0xaf0
   30a94:	blr	x1
   30a98:	ldr	w9, [x11, x0]
   30a9c:	orr	w9, w9, #0x8
   30aa0:	str	w9, [x11, x0]
   30aa4:	ldp	x20, x19, [sp, #208]
   30aa8:	ldp	x22, x21, [sp, #192]
   30aac:	ldp	x24, x23, [sp, #176]
   30ab0:	ldp	x26, x25, [sp, #160]
   30ab4:	ldp	x28, x27, [sp, #144]
   30ab8:	ldp	x29, x30, [sp, #128]
   30abc:	mov	w0, w8
   30ac0:	add	sp, sp, #0xe0
   30ac4:	ret
   30ac8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   30acc:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   30ad0:	add	x0, x0, #0x7f5
   30ad4:	add	x2, x2, #0x7ff
   30ad8:	mov	w1, #0x28                  	// #40
   30adc:	bl	d030 <mpfr_assert_fail@plt>
   30ae0:	ldr	x12, [sp, #40]
   30ae4:	b	3048c <mpfr_sin_cos@@Base+0x38>
   30ae8:	and	x8, x8, #0xfffffffffffffffe
   30aec:	cmp	x8, x19
   30af0:	b.ne	30b68 <mpfr_sin_cos@@Base+0x714>  // b.any
   30af4:	ldr	x8, [sp, #48]
   30af8:	str	x19, [x12, #16]
   30afc:	str	x19, [x8, #16]
   30b00:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30b04:	ldr	x1, [x0, #2800]
   30b08:	add	x0, x0, #0xaf0
   30b0c:	blr	x1
   30b10:	mrs	x9, tpidr_el0
   30b14:	ldr	w10, [x9, x0]
   30b18:	mov	w8, wzr
   30b1c:	orr	w10, w10, #0x4
   30b20:	str	w10, [x9, x0]
   30b24:	b	30aa4 <mpfr_sin_cos@@Base+0x650>
   30b28:	mov	x8, xzr
   30b2c:	b	30524 <mpfr_sin_cos@@Base+0xd0>
   30b30:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   30b34:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   30b38:	add	x0, x0, #0x7f5
   30b3c:	add	x2, x2, #0x985
   30b40:	mov	w1, #0x47                  	// #71
   30b44:	mov	x23, x11
   30b48:	mov	w24, w13
   30b4c:	mov	x25, x14
   30b50:	bl	d030 <mpfr_assert_fail@plt>
   30b54:	ldr	x12, [sp, #40]
   30b58:	mov	x14, x25
   30b5c:	mov	w13, w24
   30b60:	mov	x11, x23
   30b64:	b	30518 <mpfr_sin_cos@@Base+0xc4>
   30b68:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   30b6c:	str	x8, [x12, #16]
   30b70:	ldr	w8, [x22, #8]
   30b74:	ldr	x0, [sp, #48]
   30b78:	ldr	w3, [sp, #36]
   30b7c:	mov	w1, #0x1                   	// #1
   30b80:	mov	x2, xzr
   30b84:	str	w8, [x12, #8]
   30b88:	bl	cac0 <mpfr_set_ui_2exp@plt>
   30b8c:	cmp	w0, #0x1
   30b90:	mov	w8, #0x4                   	// #4
   30b94:	mov	w9, #0x8                   	// #8
   30b98:	csel	w8, w9, w8, lt  // lt = tstop
   30b9c:	cmp	w0, #0x0
   30ba0:	csel	w8, wzr, w8, eq  // eq = none
   30ba4:	b	30aa4 <mpfr_sin_cos@@Base+0x650>
   30ba8:	ldr	w2, [sp, #36]
   30bac:	mov	x0, x12
   30bb0:	mov	w1, w24
   30bb4:	mov	x19, x11
   30bb8:	bl	d020 <mpfr_check_range@plt>
   30bbc:	mov	x11, x19
   30bc0:	mov	w24, w0
   30bc4:	b	309f4 <mpfr_sin_cos@@Base+0x5a0>
   30bc8:	ldr	x0, [sp, #48]
   30bcc:	ldr	w2, [sp, #36]
   30bd0:	mov	w1, w25
   30bd4:	mov	x19, x11
   30bd8:	bl	d020 <mpfr_check_range@plt>
   30bdc:	mov	x11, x19
   30be0:	mov	w25, w0
   30be4:	b	30a54 <mpfr_sin_cos@@Base+0x600>
   30be8:	ldr	w4, [sp, #36]
   30bec:	mov	x0, x12
   30bf0:	mov	x1, x22
   30bf4:	mov	w3, wzr
   30bf8:	str	x27, [sp, #24]
   30bfc:	mov	x27, x14
   30c00:	mov	w26, w13
   30c04:	mov	x25, x11
   30c08:	bl	ca10 <mpfr_round_near_x@plt>
   30c0c:	cmp	w0, #0x0
   30c10:	mov	w8, #0x6                   	// #6
   30c14:	mov	w24, w0
   30c18:	csel	w8, wzr, w8, eq  // eq = none
   30c1c:	mov	x11, x25
   30c20:	cbz	w0, 30c8c <mpfr_sin_cos@@Base+0x838>
   30c24:	ldr	x12, [sp, #40]
   30c28:	mov	x14, x27
   30c2c:	ldr	x27, [sp, #24]
   30c30:	mov	w13, w26
   30c34:	cbnz	w8, 3055c <mpfr_sin_cos@@Base+0x108>
   30c38:	b	305dc <mpfr_sin_cos@@Base+0x188>
   30c3c:	str	x14, [sp, #16]
   30c40:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   30c44:	ldr	x1, [x1, #3928]
   30c48:	ldr	x0, [sp, #48]
   30c4c:	ldr	w4, [sp, #36]
   30c50:	mov	w3, wzr
   30c54:	mov	w26, w13
   30c58:	mov	x24, x11
   30c5c:	bl	ca10 <mpfr_round_near_x@plt>
   30c60:	cmp	w0, #0x0
   30c64:	mov	w8, #0xc                   	// #12
   30c68:	mov	w25, w0
   30c6c:	csel	w8, wzr, w8, eq  // eq = none
   30c70:	mov	x11, x24
   30c74:	cbz	w0, 30d10 <mpfr_sin_cos@@Base+0x8bc>
   30c78:	ldr	x12, [sp, #40]
   30c7c:	ldr	x14, [sp, #16]
   30c80:	mov	w13, w26
   30c84:	cbnz	w8, 305b0 <mpfr_sin_cos@@Base+0x15c>
   30c88:	b	305dc <mpfr_sin_cos@@Base+0x188>
   30c8c:	ldr	x12, [sp, #40]
   30c90:	mov	x14, x27
   30c94:	ldr	x27, [sp, #24]
   30c98:	mov	w13, w26
   30c9c:	mov	w8, wzr
   30ca0:	cbnz	w8, 3055c <mpfr_sin_cos@@Base+0x108>
   30ca4:	b	305dc <mpfr_sin_cos@@Base+0x188>
   30ca8:	str	x14, [sp, #16]
   30cac:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   30cb0:	ldr	x1, [x1, #3928]
   30cb4:	ldr	x0, [sp, #48]
   30cb8:	ldr	w4, [sp, #36]
   30cbc:	mov	w3, wzr
   30cc0:	mov	x21, x11
   30cc4:	mov	w26, w13
   30cc8:	bl	ca10 <mpfr_round_near_x@plt>
   30ccc:	mov	w25, w0
   30cd0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30cd4:	ldr	x1, [x0, #2800]
   30cd8:	add	x0, x0, #0xaf0
   30cdc:	blr	x1
   30ce0:	ldr	w9, [x21, x0]
   30ce4:	cmp	w25, #0x0
   30ce8:	mov	w8, #0x9                   	// #9
   30cec:	mov	x11, x21
   30cf0:	csel	w9, wzr, w9, eq  // eq = none
   30cf4:	csel	w8, wzr, w8, eq  // eq = none
   30cf8:	orr	w13, w9, w26
   30cfc:	cbz	w25, 30d98 <mpfr_sin_cos@@Base+0x944>
   30d00:	ldr	x12, [sp, #40]
   30d04:	ldr	x14, [sp, #16]
   30d08:	cbnz	w8, 30584 <mpfr_sin_cos@@Base+0x130>
   30d0c:	b	305dc <mpfr_sin_cos@@Base+0x188>
   30d10:	ldr	x12, [sp, #40]
   30d14:	ldr	x14, [sp, #16]
   30d18:	mov	w13, w26
   30d1c:	mov	w8, wzr
   30d20:	cbnz	w8, 305b0 <mpfr_sin_cos@@Base+0x15c>
   30d24:	b	305dc <mpfr_sin_cos@@Base+0x188>
   30d28:	ldr	w4, [sp, #36]
   30d2c:	mov	x0, x12
   30d30:	mov	x1, x22
   30d34:	mov	w3, wzr
   30d38:	str	x27, [sp, #24]
   30d3c:	mov	x27, x14
   30d40:	mov	x21, x11
   30d44:	mov	w26, w13
   30d48:	bl	ca10 <mpfr_round_near_x@plt>
   30d4c:	mov	w24, w0
   30d50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30d54:	ldr	x1, [x0, #2800]
   30d58:	add	x0, x0, #0xaf0
   30d5c:	blr	x1
   30d60:	ldr	w8, [x21, x0]
   30d64:	cmp	w24, #0x0
   30d68:	mov	w9, #0x9                   	// #9
   30d6c:	mov	x11, x21
   30d70:	csel	w8, wzr, w8, eq  // eq = none
   30d74:	csel	w9, wzr, w9, eq  // eq = none
   30d78:	orr	w13, w8, w26
   30d7c:	cbz	w24, 30dac <mpfr_sin_cos@@Base+0x958>
   30d80:	ldr	x12, [sp, #40]
   30d84:	mov	x14, x27
   30d88:	ldr	x27, [sp, #24]
   30d8c:	cmp	w9, #0x9
   30d90:	b.ne	305d8 <mpfr_sin_cos@@Base+0x184>  // b.any
   30d94:	b	30988 <mpfr_sin_cos@@Base+0x534>
   30d98:	ldr	x12, [sp, #40]
   30d9c:	ldr	x14, [sp, #16]
   30da0:	mov	w8, wzr
   30da4:	cbnz	w8, 30584 <mpfr_sin_cos@@Base+0x130>
   30da8:	b	305dc <mpfr_sin_cos@@Base+0x188>
   30dac:	ldr	x12, [sp, #40]
   30db0:	mov	x14, x27
   30db4:	ldr	x27, [sp, #24]
   30db8:	b	305cc <mpfr_sin_cos@@Base+0x178>

0000000000030dbc <mpfr_sincos_fast@@Base>:
   30dbc:	sub	sp, sp, #0x190
   30dc0:	stp	x24, x23, [sp, #352]
   30dc4:	stp	x22, x21, [sp, #368]
   30dc8:	stp	x20, x19, [sp, #384]
   30dcc:	mov	w24, w3
   30dd0:	mov	x20, x1
   30dd4:	mov	x21, x0
   30dd8:	cmp	x0, x1
   30ddc:	mov	x22, x2
   30de0:	stp	x29, x30, [sp, #304]
   30de4:	stp	x28, x27, [sp, #320]
   30de8:	stp	x26, x25, [sp, #336]
   30dec:	add	x29, sp, #0x130
   30df0:	b.eq	30e10 <mpfr_sincos_fast@@Base+0x54>  // b.none
   30df4:	cbz	x21, 30e2c <mpfr_sincos_fast@@Base+0x70>
   30df8:	ldr	x19, [x21]
   30dfc:	cbz	x20, 30e30 <mpfr_sincos_fast@@Base+0x74>
   30e00:	ldr	x8, [x20]
   30e04:	cmp	x19, x8
   30e08:	csel	x19, x8, x19, lt  // lt = tstop
   30e0c:	b	30e30 <mpfr_sincos_fast@@Base+0x74>
   30e10:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   30e14:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   30e18:	add	x0, x0, #0x7f5
   30e1c:	add	x2, x2, #0x806
   30e20:	mov	w1, #0x247                 	// #583
   30e24:	bl	d030 <mpfr_assert_fail@plt>
   30e28:	cbnz	x21, 30df8 <mpfr_sincos_fast@@Base+0x3c>
   30e2c:	ldr	x19, [x20]
   30e30:	subs	x23, x19, #0x1
   30e34:	b.eq	3127c <mpfr_sincos_fast@@Base+0x4c0>  // b.none
   30e38:	b.le	31284 <mpfr_sincos_fast@@Base+0x4c8>
   30e3c:	clz	x8, x23
   30e40:	mov	w9, #0x49                  	// #73
   30e44:	sub	x8, x9, x8
   30e48:	mov	x27, #0xfffffffffffffeff    	// #-257
   30e4c:	movk	x27, #0x7fff, lsl #48
   30e50:	add	x23, x8, x19
   30e54:	cmp	x23, x27
   30e58:	b.gt	312a0 <mpfr_sincos_fast@@Base+0x4e4>
   30e5c:	sub	x8, x23, #0x1
   30e60:	add	x9, x23, #0x3e
   30e64:	cmp	x8, #0x0
   30e68:	csel	x8, x9, x8, lt  // lt = tstop
   30e6c:	asr	x8, x8, #6
   30e70:	cmp	x23, #0x201
   30e74:	add	x19, x8, #0x1
   30e78:	b.lt	30e90 <mpfr_sincos_fast@@Base+0xd4>  // b.tstop
   30e7c:	lsl	x0, x19, #4
   30e80:	str	x0, [sp, #56]
   30e84:	bl	d1f0 <mpfr_allocate_func@plt>
   30e88:	str	x0, [sp, #64]
   30e8c:	b	30e9c <mpfr_sincos_fast@@Base+0xe0>
   30e90:	add	x8, sp, #0x38
   30e94:	add	x8, x8, #0x10
   30e98:	stp	xzr, x8, [sp, #56]
   30e9c:	ldr	x8, [sp, #64]
   30ea0:	cmp	w24, #0x0
   30ea4:	mov	w28, #0x1                   	// #1
   30ea8:	str	w24, [sp, #12]
   30eac:	mov	w25, #0x40                  	// #64
   30eb0:	cset	w24, eq  // eq = none
   30eb4:	stur	x23, [x29, #-72]
   30eb8:	stur	w28, [x29, #-64]
   30ebc:	b	30ed8 <mpfr_sincos_fast@@Base+0x11c>
   30ec0:	ldr	x0, [sp, #64]
   30ec4:	bl	c660 <mpfr_reallocate_func@plt>
   30ec8:	str	x0, [sp, #64]
   30ecc:	mov	x8, x0
   30ed0:	stur	x23, [x29, #-72]
   30ed4:	stur	w28, [x29, #-64]
   30ed8:	stur	x8, [x29, #-48]
   30edc:	add	x8, x8, x19, lsl #3
   30ee0:	stur	x23, [x29, #-104]
   30ee4:	stur	x8, [x29, #-80]
   30ee8:	stur	w28, [x29, #-96]
   30eec:	ldr	w8, [x22, #8]
   30ef0:	cmp	w8, #0x1
   30ef4:	b.lt	30f14 <mpfr_sincos_fast@@Base+0x158>  // b.tstop
   30ef8:	mov	w1, #0xed51                	// #60753
   30efc:	movk	w1, #0x6487, lsl #16
   30f00:	mov	x2, #0xffffffffffffffe1    	// #-31
   30f04:	mov	x0, x22
   30f08:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   30f0c:	cmp	w0, #0x0
   30f10:	b.le	310a4 <mpfr_sincos_fast@@Base+0x2e8>
   30f14:	ldr	w8, [x22, #8]
   30f18:	tbnz	w8, #31, 31044 <mpfr_sincos_fast@@Base+0x288>
   30f1c:	sub	x0, x29, #0x28
   30f20:	mov	x1, x23
   30f24:	bl	cf60 <mpfr_init2@plt>
   30f28:	ldr	x8, [x22, #16]
   30f2c:	add	x0, sp, #0x10
   30f30:	bic	x8, x8, x8, asr #63
   30f34:	add	x1, x8, x23
   30f38:	bl	cf60 <mpfr_init2@plt>
   30f3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   30f40:	ldr	x1, [x0, #2848]
   30f44:	add	x0, x0, #0xb20
   30f48:	blr	x1
   30f4c:	mrs	x8, tpidr_el0
   30f50:	add	x1, x8, x0
   30f54:	add	x0, sp, #0x10
   30f58:	mov	w2, wzr
   30f5c:	bl	c840 <mpfr_cache@plt>
   30f60:	add	x0, sp, #0x10
   30f64:	add	x1, sp, #0x10
   30f68:	mov	w2, #0x1                   	// #1
   30f6c:	mov	w3, wzr
   30f70:	bl	cde0 <mpfr_div_2ui@plt>
   30f74:	sub	x0, x29, #0x28
   30f78:	add	x1, sp, #0x30
   30f7c:	add	x3, sp, #0x10
   30f80:	mov	x2, x22
   30f84:	mov	w4, wzr
   30f88:	bl	c9e0 <mpfr_remquo@plt>
   30f8c:	ldur	w8, [x29, #-32]
   30f90:	mov	w19, wzr
   30f94:	tbz	w8, #31, 30fac <mpfr_sincos_fast@@Base+0x1f0>
   30f98:	sub	x0, x29, #0x28
   30f9c:	sub	x1, x29, #0x28
   30fa0:	mov	w2, wzr
   30fa4:	bl	c1d0 <mpfr_neg@plt>
   30fa8:	mov	w19, #0x1                   	// #1
   30fac:	sub	x0, x29, #0x48
   30fb0:	sub	x1, x29, #0x68
   30fb4:	sub	x2, x29, #0x28
   30fb8:	bl	312a4 <mpfr_sincos_fast@@Base+0x4e8>
   30fbc:	mov	w26, w0
   30fc0:	cbz	w19, 30fd4 <mpfr_sincos_fast@@Base+0x218>
   30fc4:	sub	x0, x29, #0x48
   30fc8:	sub	x1, x29, #0x48
   30fcc:	mov	w2, wzr
   30fd0:	bl	c1d0 <mpfr_neg@plt>
   30fd4:	ldrb	w8, [sp, #48]
   30fd8:	sxtw	x19, w26
   30fdc:	tbz	w8, #1, 31000 <mpfr_sincos_fast@@Base+0x244>
   30fe0:	sub	x0, x29, #0x48
   30fe4:	sub	x1, x29, #0x48
   30fe8:	mov	w2, wzr
   30fec:	bl	c1d0 <mpfr_neg@plt>
   30ff0:	sub	x0, x29, #0x68
   30ff4:	sub	x1, x29, #0x68
   30ff8:	mov	w2, wzr
   30ffc:	bl	c1d0 <mpfr_neg@plt>
   31000:	ldrb	w8, [sp, #48]
   31004:	add	x26, x19, #0x1
   31008:	tbz	w8, #0, 31028 <mpfr_sincos_fast@@Base+0x26c>
   3100c:	sub	x0, x29, #0x48
   31010:	sub	x1, x29, #0x48
   31014:	mov	w2, wzr
   31018:	bl	c1d0 <mpfr_neg@plt>
   3101c:	sub	x0, x29, #0x48
   31020:	sub	x1, x29, #0x68
   31024:	bl	c970 <mpfr_swap@plt>
   31028:	sub	x0, x29, #0x28
   3102c:	bl	c4f0 <mpfr_clear@plt>
   31030:	add	x0, sp, #0x10
   31034:	bl	c4f0 <mpfr_clear@plt>
   31038:	ldur	x19, [x29, #-88]
   3103c:	cbnz	x21, 310c0 <mpfr_sincos_fast@@Base+0x304>
   31040:	b	31108 <mpfr_sincos_fast@@Base+0x34c>
   31044:	mov	x1, #0xffffffffffff12af    	// #-60753
   31048:	movk	x1, #0x9b78, lsl #16
   3104c:	mov	x2, #0xffffffffffffffe1    	// #-31
   31050:	mov	x0, x22
   31054:	bl	c890 <mpfr_cmp_si_2exp@plt>
   31058:	tbnz	w0, #31, 30f1c <mpfr_sincos_fast@@Base+0x160>
   3105c:	ldr	x8, [x22]
   31060:	stur	w28, [x29, #-32]
   31064:	sub	x0, x29, #0x48
   31068:	sub	x1, x29, #0x68
   3106c:	stur	x8, [x29, #-40]
   31070:	ldr	x8, [x22, #16]
   31074:	sub	x2, x29, #0x28
   31078:	stur	x8, [x29, #-24]
   3107c:	ldr	x8, [x22, #24]
   31080:	stur	x8, [x29, #-16]
   31084:	bl	312a4 <mpfr_sincos_fast@@Base+0x4e8>
   31088:	ldur	w8, [x29, #-64]
   3108c:	sxtw	x26, w0
   31090:	neg	w8, w8
   31094:	stur	w8, [x29, #-64]
   31098:	ldur	x19, [x29, #-88]
   3109c:	cbnz	x21, 310c0 <mpfr_sincos_fast@@Base+0x304>
   310a0:	b	31108 <mpfr_sincos_fast@@Base+0x34c>
   310a4:	sub	x0, x29, #0x48
   310a8:	sub	x1, x29, #0x68
   310ac:	mov	x2, x22
   310b0:	bl	312a4 <mpfr_sincos_fast@@Base+0x4e8>
   310b4:	sxtw	x26, w0
   310b8:	ldur	x19, [x29, #-88]
   310bc:	cbz	x21, 31108 <mpfr_sincos_fast@@Base+0x34c>
   310c0:	ldur	x8, [x29, #-56]
   310c4:	add	x9, x27, #0x105
   310c8:	cmp	x8, x9
   310cc:	b.lt	31154 <mpfr_sincos_fast@@Base+0x398>  // b.tstop
   310d0:	ldur	x9, [x29, #-72]
   310d4:	sub	x10, x23, x26
   310d8:	ldr	x11, [x21]
   310dc:	add	x2, x10, x8
   310e0:	sub	x8, x9, #0x1
   310e4:	ldur	x0, [x29, #-48]
   310e8:	add	x9, x9, #0x3e
   310ec:	cmp	x8, #0x0
   310f0:	csel	x8, x9, x8, lt  // lt = tstop
   310f4:	asr	x8, x8, #6
   310f8:	add	x1, x8, #0x1
   310fc:	add	x3, x11, x24
   31100:	bl	c830 <mpfr_round_p@plt>
   31104:	cbz	w0, 31154 <mpfr_sincos_fast@@Base+0x398>
   31108:	cbz	x20, 311c8 <mpfr_sincos_fast@@Base+0x40c>
   3110c:	ldur	x8, [x29, #-88]
   31110:	add	x9, x27, #0x105
   31114:	cmp	x8, x9
   31118:	b.lt	31154 <mpfr_sincos_fast@@Base+0x398>  // b.tstop
   3111c:	ldur	x8, [x29, #-104]
   31120:	sub	x9, x23, x26
   31124:	ldr	x10, [x20]
   31128:	add	x2, x9, x19
   3112c:	sub	x9, x8, #0x1
   31130:	ldur	x0, [x29, #-80]
   31134:	add	x8, x8, #0x3e
   31138:	cmp	x9, #0x0
   3113c:	csel	x8, x8, x9, lt  // lt = tstop
   31140:	asr	x8, x8, #6
   31144:	add	x1, x8, #0x1
   31148:	add	x3, x10, x24
   3114c:	bl	c830 <mpfr_round_p@plt>
   31150:	cbnz	w0, 311c8 <mpfr_sincos_fast@@Base+0x40c>
   31154:	sub	x8, x27, x23
   31158:	cmp	x25, x8
   3115c:	b.gt	311ac <mpfr_sincos_fast@@Base+0x3f0>
   31160:	add	x23, x23, x25
   31164:	cmp	x23, #0x0
   31168:	cinc	x8, x23, lt  // lt = tstop
   3116c:	cmp	x23, x27
   31170:	b.gt	312a0 <mpfr_sincos_fast@@Base+0x4e4>
   31174:	asr	x25, x8, #1
   31178:	sub	x8, x23, #0x1
   3117c:	add	x9, x23, #0x3e
   31180:	cmp	x8, #0x0
   31184:	ldr	x1, [sp, #56]
   31188:	csel	x8, x9, x8, lt  // lt = tstop
   3118c:	asr	x8, x8, #6
   31190:	add	x19, x8, #0x1
   31194:	lsl	x2, x19, #4
   31198:	str	x2, [sp, #56]
   3119c:	cbnz	x1, 30ec0 <mpfr_sincos_fast@@Base+0x104>
   311a0:	mov	x0, x2
   311a4:	bl	d1f0 <mpfr_allocate_func@plt>
   311a8:	b	30ec8 <mpfr_sincos_fast@@Base+0x10c>
   311ac:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   311b0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   311b4:	mov	w1, #0x28f                 	// #655
   311b8:	add	x0, x0, #0x7f5
   311bc:	add	x2, x2, #0xa3e
   311c0:	bl	d030 <mpfr_assert_fail@plt>
   311c4:	b	31160 <mpfr_sincos_fast@@Base+0x3a4>
   311c8:	cbz	x21, 31264 <mpfr_sincos_fast@@Base+0x4a8>
   311cc:	ldr	w19, [sp, #12]
   311d0:	ldur	w3, [x29, #-64]
   311d4:	sub	x1, x29, #0x48
   311d8:	mov	x0, x21
   311dc:	mov	w2, w19
   311e0:	bl	cb70 <mpfr_set4@plt>
   311e4:	mov	w21, w0
   311e8:	cbz	x20, 3126c <mpfr_sincos_fast@@Base+0x4b0>
   311ec:	ldur	w3, [x29, #-96]
   311f0:	sub	x1, x29, #0x68
   311f4:	mov	x0, x20
   311f8:	mov	w2, w19
   311fc:	bl	cb70 <mpfr_set4@plt>
   31200:	mov	w19, w0
   31204:	ldr	x1, [sp, #56]
   31208:	cbz	x1, 31214 <mpfr_sincos_fast@@Base+0x458>
   3120c:	ldr	x0, [sp, #64]
   31210:	bl	d120 <mpfr_free_func@plt>
   31214:	cmp	w21, #0x1
   31218:	mov	w8, #0x1                   	// #1
   3121c:	cinc	w8, w8, lt  // lt = tstop
   31220:	cmp	w21, #0x0
   31224:	mov	w9, #0x4                   	// #4
   31228:	mov	w10, #0x8                   	// #8
   3122c:	csel	w8, wzr, w8, eq  // eq = none
   31230:	cmp	w19, #0x1
   31234:	csel	w9, w10, w9, lt  // lt = tstop
   31238:	cmp	w19, #0x0
   3123c:	ldp	x20, x19, [sp, #384]
   31240:	ldp	x22, x21, [sp, #368]
   31244:	ldp	x24, x23, [sp, #352]
   31248:	ldp	x26, x25, [sp, #336]
   3124c:	ldp	x28, x27, [sp, #320]
   31250:	ldp	x29, x30, [sp, #304]
   31254:	csel	w9, wzr, w9, eq  // eq = none
   31258:	orr	w0, w9, w8
   3125c:	add	sp, sp, #0x190
   31260:	ret
   31264:	ldr	w19, [sp, #12]
   31268:	cbnz	x20, 311ec <mpfr_sincos_fast@@Base+0x430>
   3126c:	mov	w19, wzr
   31270:	ldr	x1, [sp, #56]
   31274:	cbnz	x1, 3120c <mpfr_sincos_fast@@Base+0x450>
   31278:	b	31214 <mpfr_sincos_fast@@Base+0x458>
   3127c:	mov	w8, #0x9                   	// #9
   31280:	b	30e48 <mpfr_sincos_fast@@Base+0x8c>
   31284:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   31288:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   3128c:	add	x0, x0, #0x7f5
   31290:	add	x2, x2, #0x80d
   31294:	mov	w1, #0x24e                 	// #590
   31298:	bl	d030 <mpfr_assert_fail@plt>
   3129c:	b	30e3c <mpfr_sincos_fast@@Base+0x80>
   312a0:	bl	cdd0 <mpfr_abort_prec_max@plt>
   312a4:	sub	sp, sp, #0x100
   312a8:	stp	x29, x30, [sp, #160]
   312ac:	stp	x28, x27, [sp, #176]
   312b0:	stp	x26, x25, [sp, #192]
   312b4:	stp	x24, x23, [sp, #208]
   312b8:	stp	x22, x21, [sp, #224]
   312bc:	stp	x20, x19, [sp, #240]
   312c0:	ldr	x8, [x2]
   312c4:	ldr	x21, [x0]
   312c8:	mov	x20, x0
   312cc:	str	x1, [sp, #8]
   312d0:	add	x0, sp, #0x10
   312d4:	mov	x1, x8
   312d8:	add	x29, sp, #0xa0
   312dc:	mov	x22, x2
   312e0:	bl	cf60 <mpfr_init2@plt>
   312e4:	sub	x0, x29, #0x10
   312e8:	bl	c400 <mpfr_mpz_init@plt>
   312ec:	sub	x0, x29, #0x20
   312f0:	bl	c400 <mpfr_mpz_init@plt>
   312f4:	sub	x0, x29, #0x30
   312f8:	bl	c400 <mpfr_mpz_init@plt>
   312fc:	sub	x0, x29, #0x40
   31300:	bl	c400 <mpfr_mpz_init@plt>
   31304:	add	x0, sp, #0x50
   31308:	bl	c400 <mpfr_mpz_init@plt>
   3130c:	add	x0, sp, #0x40
   31310:	bl	c400 <mpfr_mpz_init@plt>
   31314:	add	x0, sp, #0x30
   31318:	bl	c400 <mpfr_mpz_init@plt>
   3131c:	ldr	w3, [x22, #8]
   31320:	add	x0, sp, #0x10
   31324:	mov	x1, x22
   31328:	mov	w2, wzr
   3132c:	bl	cb70 <mpfr_set4@plt>
   31330:	sub	x0, x29, #0x10
   31334:	mov	w1, #0x1                   	// #1
   31338:	bl	c110 <__gmpz_set_ui@plt>
   3133c:	sub	x0, x29, #0x20
   31340:	mov	x1, xzr
   31344:	bl	c110 <__gmpz_set_ui@plt>
   31348:	sub	x0, x29, #0x30
   3134c:	mov	w1, #0x1                   	// #1
   31350:	bl	c110 <__gmpz_set_ui@plt>
   31354:	add	x0, sp, #0x10
   31358:	bl	cbe0 <mpfr_sgn@plt>
   3135c:	cmp	x21, #0x1
   31360:	mov	x25, xzr
   31364:	mov	x22, xzr
   31368:	b.lt	31554 <mpfr_sincos_fast@@Base+0x798>  // b.tstop
   3136c:	cbz	w0, 31554 <mpfr_sincos_fast@@Base+0x798>
   31370:	cmp	x21, #0x0
   31374:	cinc	x8, x21, lt  // lt = tstop
   31378:	mov	x25, xzr
   3137c:	mov	x22, xzr
   31380:	mov	w26, #0x1                   	// #1
   31384:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   31388:	asr	x28, x8, #1
   3138c:	mov	w24, #0x1                   	// #1
   31390:	cmp	x24, x28
   31394:	lsl	x19, x24, #1
   31398:	b.le	31414 <mpfr_sincos_fast@@Base+0x658>
   3139c:	add	x0, sp, #0x50
   313a0:	add	x1, sp, #0x10
   313a4:	bl	cfb0 <mpfr_get_z_2exp@plt>
   313a8:	mvn	x8, x0
   313ac:	sub	x0, x29, #0x40
   313b0:	mov	w1, #0x1                   	// #1
   313b4:	add	x23, x24, x8
   313b8:	bl	c110 <__gmpz_set_ui@plt>
   313bc:	add	x0, sp, #0x40
   313c0:	mov	w1, #0x1                   	// #1
   313c4:	bl	c110 <__gmpz_set_ui@plt>
   313c8:	add	x0, sp, #0x40
   313cc:	add	x1, sp, #0x40
   313d0:	mov	x2, x23
   313d4:	bl	c6a0 <__gmpz_mul_2exp@plt>
   313d8:	str	w26, [sp, #24]
   313dc:	str	x27, [sp, #32]
   313e0:	cmp	x24, #0x1
   313e4:	b.ne	3147c <mpfr_sincos_fast@@Base+0x6c0>  // b.any
   313e8:	sub	x0, x29, #0x10
   313ec:	sub	x1, x29, #0x40
   313f0:	bl	c570 <__gmpz_swap@plt>
   313f4:	sub	x0, x29, #0x20
   313f8:	add	x1, sp, #0x50
   313fc:	bl	c570 <__gmpz_swap@plt>
   31400:	sub	x0, x29, #0x30
   31404:	add	x1, sp, #0x40
   31408:	bl	c570 <__gmpz_swap@plt>
   3140c:	mov	x22, x23
   31410:	b	31538 <mpfr_sincos_fast@@Base+0x77c>
   31414:	add	x0, sp, #0x10
   31418:	add	x1, sp, #0x10
   3141c:	mov	x2, x24
   31420:	mov	w3, wzr
   31424:	bl	c780 <mpfr_mul_2ui@plt>
   31428:	add	x0, sp, #0x30
   3142c:	add	x1, sp, #0x10
   31430:	mov	w2, #0x1                   	// #1
   31434:	bl	c260 <mpfr_get_z@plt>
   31438:	ldr	w8, [sp, #52]
   3143c:	cbz	w8, 31538 <mpfr_sincos_fast@@Base+0x77c>
   31440:	add	x0, sp, #0x10
   31444:	add	x1, sp, #0x10
   31448:	add	x2, sp, #0x30
   3144c:	mov	w3, wzr
   31450:	bl	c1c0 <mpfr_sub_z@plt>
   31454:	sub	x4, x19, #0x1
   31458:	sub	x0, x29, #0x40
   3145c:	add	x1, sp, #0x50
   31460:	add	x2, sp, #0x40
   31464:	add	x3, sp, #0x30
   31468:	mov	x5, x21
   3146c:	bl	31654 <mpfr_sincos_fast@@Base+0x898>
   31470:	mov	x23, x0
   31474:	cmp	x24, #0x1
   31478:	b.eq	313e8 <mpfr_sincos_fast@@Base+0x62c>  // b.none
   3147c:	add	x0, sp, #0x30
   31480:	sub	x1, x29, #0x20
   31484:	sub	x2, x29, #0x30
   31488:	bl	ceb0 <__gmpz_add@plt>
   3148c:	sub	x0, x29, #0x30
   31490:	sub	x1, x29, #0x30
   31494:	add	x2, sp, #0x40
   31498:	bl	c460 <__gmpz_mul@plt>
   3149c:	add	x0, sp, #0x40
   314a0:	add	x1, sp, #0x40
   314a4:	add	x2, sp, #0x50
   314a8:	bl	ceb0 <__gmpz_add@plt>
   314ac:	add	x0, sp, #0x50
   314b0:	sub	x1, x29, #0x20
   314b4:	add	x2, sp, #0x50
   314b8:	bl	c460 <__gmpz_mul@plt>
   314bc:	add	x0, sp, #0x30
   314c0:	add	x1, sp, #0x30
   314c4:	add	x2, sp, #0x40
   314c8:	bl	c460 <__gmpz_mul@plt>
   314cc:	sub	x0, x29, #0x20
   314d0:	add	x1, sp, #0x30
   314d4:	add	x2, sp, #0x50
   314d8:	bl	c240 <__gmpz_sub@plt>
   314dc:	sub	x0, x29, #0x20
   314e0:	sub	x1, x29, #0x20
   314e4:	sub	x2, x29, #0x30
   314e8:	bl	c240 <__gmpz_sub@plt>
   314ec:	sub	x0, x29, #0x30
   314f0:	sub	x1, x29, #0x30
   314f4:	add	x2, sp, #0x50
   314f8:	bl	c240 <__gmpz_sub@plt>
   314fc:	sub	x0, x29, #0x10
   31500:	sub	x1, x29, #0x10
   31504:	sub	x2, x29, #0x40
   31508:	bl	c460 <__gmpz_mul@plt>
   3150c:	sub	x0, x29, #0x10
   31510:	sub	x1, x29, #0x10
   31514:	mov	x2, x21
   31518:	add	x22, x23, x22
   3151c:	bl	31ddc <mpfr_sincos_fast@@Base+0x1020>
   31520:	add	x22, x22, x0
   31524:	sub	x0, x29, #0x20
   31528:	sub	x1, x29, #0x30
   3152c:	mov	x2, x21
   31530:	bl	31e2c <mpfr_sincos_fast@@Base+0x1070>
   31534:	sub	x22, x22, x0
   31538:	add	x0, sp, #0x10
   3153c:	bl	cbe0 <mpfr_sgn@plt>
   31540:	cmp	x19, x21
   31544:	add	x25, x25, #0xb
   31548:	b.gt	31554 <mpfr_sincos_fast@@Base+0x798>
   3154c:	mov	x24, x19
   31550:	cbnz	w0, 31390 <mpfr_sincos_fast@@Base+0x5d4>
   31554:	cmp	x25, #0x2
   31558:	b.cc	31578 <mpfr_sincos_fast@@Base+0x7bc>  // b.lo, b.ul, b.last
   3155c:	mov	w21, wzr
   31560:	add	x8, x25, #0x1
   31564:	lsr	x25, x8, #1
   31568:	cmp	x8, #0x3
   3156c:	add	w21, w21, #0x1
   31570:	b.hi	31560 <mpfr_sincos_fast@@Base+0x7a4>  // b.pmore
   31574:	b	3157c <mpfr_sincos_fast@@Base+0x7c0>
   31578:	mov	w21, wzr
   3157c:	sub	x1, x29, #0x20
   31580:	mov	x0, x20
   31584:	mov	w2, wzr
   31588:	bl	c6e0 <mpfr_set_z@plt>
   3158c:	sub	x2, x29, #0x10
   31590:	mov	x0, x20
   31594:	mov	x1, x20
   31598:	mov	w3, wzr
   3159c:	bl	d180 <mpfr_div_z@plt>
   315a0:	mov	x0, x20
   315a4:	mov	x1, x20
   315a8:	mov	x2, x22
   315ac:	mov	w3, wzr
   315b0:	bl	cde0 <mpfr_div_2ui@plt>
   315b4:	ldr	x19, [sp, #8]
   315b8:	sub	x1, x29, #0x30
   315bc:	mov	w2, wzr
   315c0:	mov	x0, x19
   315c4:	bl	c6e0 <mpfr_set_z@plt>
   315c8:	sub	x2, x29, #0x10
   315cc:	mov	x0, x19
   315d0:	mov	x1, x19
   315d4:	mov	w3, wzr
   315d8:	bl	d180 <mpfr_div_z@plt>
   315dc:	mov	x0, x19
   315e0:	mov	x1, x19
   315e4:	mov	x2, x22
   315e8:	mov	w3, wzr
   315ec:	bl	cde0 <mpfr_div_2ui@plt>
   315f0:	sub	x0, x29, #0x10
   315f4:	bl	c610 <mpfr_mpz_clear@plt>
   315f8:	sub	x0, x29, #0x20
   315fc:	bl	c610 <mpfr_mpz_clear@plt>
   31600:	sub	x0, x29, #0x30
   31604:	bl	c610 <mpfr_mpz_clear@plt>
   31608:	sub	x0, x29, #0x40
   3160c:	bl	c610 <mpfr_mpz_clear@plt>
   31610:	add	x0, sp, #0x50
   31614:	bl	c610 <mpfr_mpz_clear@plt>
   31618:	add	x0, sp, #0x40
   3161c:	bl	c610 <mpfr_mpz_clear@plt>
   31620:	add	x0, sp, #0x30
   31624:	bl	c610 <mpfr_mpz_clear@plt>
   31628:	add	x0, sp, #0x10
   3162c:	bl	c4f0 <mpfr_clear@plt>
   31630:	mov	w0, w21
   31634:	ldp	x20, x19, [sp, #240]
   31638:	ldp	x22, x21, [sp, #224]
   3163c:	ldp	x24, x23, [sp, #208]
   31640:	ldp	x26, x25, [sp, #192]
   31644:	ldp	x28, x27, [sp, #176]
   31648:	ldp	x29, x30, [sp, #160]
   3164c:	add	sp, sp, #0x100
   31650:	ret
   31654:	stp	x29, x30, [sp, #-96]!
   31658:	stp	x28, x27, [sp, #16]
   3165c:	stp	x26, x25, [sp, #32]
   31660:	stp	x24, x23, [sp, #48]
   31664:	stp	x22, x21, [sp, #64]
   31668:	stp	x20, x19, [sp, #80]
   3166c:	mov	x29, sp
   31670:	sub	sp, sp, #0x1, lsl #12
   31674:	sub	sp, sp, #0x4d0
   31678:	ldr	w8, [x3, #4]
   3167c:	mov	x19, x2
   31680:	mov	x20, x1
   31684:	mov	x21, x0
   31688:	cbz	w8, 31d94 <mpfr_sincos_fast@@Base+0xfd8>
   3168c:	add	x0, sp, #0x8b8
   31690:	mov	x26, x5
   31694:	stp	x20, x19, [sp, #24]
   31698:	mov	x20, x3
   3169c:	mov	x22, x4
   316a0:	bl	c400 <mpfr_mpz_init@plt>
   316a4:	mov	x0, x20
   316a8:	mov	x1, xzr
   316ac:	bl	bee0 <__gmpz_scan1@plt>
   316b0:	mov	x25, x0
   316b4:	add	x0, sp, #0x8b8
   316b8:	mov	x1, x20
   316bc:	mov	x2, x25
   316c0:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   316c4:	add	x0, sp, #0x8b8
   316c8:	add	x1, sp, #0x8b8
   316cc:	add	x2, sp, #0x8b8
   316d0:	bl	c460 <__gmpz_mul@plt>
   316d4:	add	x0, sp, #0x1, lsl #12
   316d8:	sub	x19, x22, x25
   316dc:	add	x0, x0, #0xc8
   316e0:	add	x23, sp, #0x1, lsl #12
   316e4:	lsl	x25, x19, #1
   316e8:	add	x23, x23, #0xc8
   316ec:	bl	c400 <mpfr_mpz_init@plt>
   316f0:	add	x0, sp, #0x1, lsl #12
   316f4:	add	x0, x0, #0xc8
   316f8:	mov	w1, #0x6                   	// #6
   316fc:	bl	c110 <__gmpz_set_ui@plt>
   31700:	add	x0, sp, #0xcc8
   31704:	add	x24, sp, #0xcc8
   31708:	bl	c400 <mpfr_mpz_init@plt>
   3170c:	add	x0, sp, #0xcc8
   31710:	mov	w1, #0x6                   	// #6
   31714:	bl	c110 <__gmpz_set_ui@plt>
   31718:	add	x0, sp, #0x8c8
   3171c:	add	x27, sp, #0x8c8
   31720:	bl	c400 <mpfr_mpz_init@plt>
   31724:	add	x0, sp, #0x8c8
   31728:	add	x1, sp, #0x8b8
   3172c:	bl	c410 <__gmpz_set@plt>
   31730:	add	x0, x23, #0x10
   31734:	bl	c400 <mpfr_mpz_init@plt>
   31738:	add	x0, x24, #0x10
   3173c:	bl	c400 <mpfr_mpz_init@plt>
   31740:	add	x27, x27, #0x10
   31744:	mov	x0, x27
   31748:	bl	c400 <mpfr_mpz_init@plt>
   3174c:	add	x1, sp, #0x8b8
   31750:	add	x2, sp, #0x8b8
   31754:	mov	x0, x27
   31758:	str	x27, [sp, #64]
   3175c:	bl	c460 <__gmpz_mul@plt>
   31760:	ldr	w8, [sp, #2268]
   31764:	ldr	x9, [sp, #2272]
   31768:	add	x0, sp, #0x1, lsl #12
   3176c:	add	x1, sp, #0x1, lsl #12
   31770:	cmp	w8, #0x0
   31774:	cneg	w8, w8, mi  // mi = first
   31778:	add	x9, x9, w8, uxtw #3
   3177c:	ldur	x9, [x9, #-8]
   31780:	lsl	x8, x8, #6
   31784:	add	x0, x0, #0xc8
   31788:	add	x1, x1, #0xc8
   3178c:	clz	x9, x9
   31790:	sub	x8, x8, x9
   31794:	mov	x2, x25
   31798:	str	x8, [sp, #192]
   3179c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   317a0:	add	x0, sp, #0x1, lsl #12
   317a4:	add	x1, sp, #0x1, lsl #12
   317a8:	add	x0, x0, #0xc8
   317ac:	add	x1, x1, #0xc8
   317b0:	add	x2, sp, #0x8b8
   317b4:	bl	c240 <__gmpz_sub@plt>
   317b8:	mov	w10, #0x1                   	// #1
   317bc:	ldr	w8, [sp, #2236]
   317c0:	str	x10, [sp, #1720]
   317c4:	ldr	w10, [x20, #4]
   317c8:	ldr	x9, [sp, #2240]
   317cc:	stp	x22, x20, [sp]
   317d0:	ldr	x11, [x20, #8]
   317d4:	cmp	w8, #0x0
   317d8:	cneg	w8, w8, mi  // mi = first
   317dc:	cmp	w10, #0x0
   317e0:	add	x9, x9, w8, uxtw #3
   317e4:	cneg	w10, w10, mi  // mi = first
   317e8:	ldur	x9, [x9, #-8]
   317ec:	add	x11, x11, w10, uxtw #3
   317f0:	ldur	x11, [x11, #-8]
   317f4:	add	x12, x25, x22
   317f8:	clz	x9, x9
   317fc:	add	x9, x12, x9
   31800:	clz	x11, x11
   31804:	sub	x10, x11, x10, lsl #6
   31808:	sub	x8, x9, x8, lsl #6
   3180c:	add	x8, x8, x10
   31810:	cmp	x8, x26
   31814:	str	x8, [sp, #1208]
   31818:	str	x26, [sp, #72]
   3181c:	str	x25, [sp, #144]
   31820:	str	x21, [sp, #16]
   31824:	b.ge	31b64 <mpfr_sincos_fast@@Base+0xda8>  // b.tcont
   31828:	lsl	x8, x19, #2
   3182c:	str	x8, [sp, #96]
   31830:	add	x8, sp, #0xb8
   31834:	add	x9, sp, #0x6b8
   31838:	add	x8, x8, #0x8
   3183c:	add	x10, sp, #0x4b8
   31840:	str	x8, [sp, #120]
   31844:	sub	x8, x9, #0x8
   31848:	add	x11, sp, #0x2b8
   3184c:	str	x8, [sp, #56]
   31850:	sub	x8, x10, #0x8
   31854:	str	x8, [sp, #48]
   31858:	sub	x8, x11, #0x8
   3185c:	mov	w20, wzr
   31860:	mov	w12, #0x2                   	// #2
   31864:	str	x8, [sp, #40]
   31868:	mov	w8, #0x2                   	// #2
   3186c:	b	31894 <mpfr_sincos_fast@@Base+0xad8>
   31870:	ldp	x26, x9, [sp, #72]
   31874:	ldr	x12, [sp, #88]
   31878:	sub	w20, w9, w10
   3187c:	cmp	x8, x26
   31880:	ldr	w8, [sp, #108]
   31884:	add	x23, sp, #0x1, lsl #12
   31888:	add	x23, x23, #0xc8
   3188c:	add	x24, sp, #0xcc8
   31890:	b.ge	31b78 <mpfr_sincos_fast@@Base+0xdbc>  // b.tcont
   31894:	sxtw	x21, w20
   31898:	add	x19, x21, #0x2
   3189c:	cmp	w19, w8
   318a0:	add	x20, x21, #0x1
   318a4:	mov	x25, x26
   318a8:	str	x12, [sp, #112]
   318ac:	b.ge	318b8 <mpfr_sincos_fast@@Base+0xafc>  // b.tcont
   318b0:	str	w8, [sp, #108]
   318b4:	b	31920 <mpfr_sincos_fast@@Base+0xb64>
   318b8:	lsl	x22, x19, #4
   318bc:	add	w8, w8, #0x1
   318c0:	add	x0, x23, x22
   318c4:	str	w8, [sp, #108]
   318c8:	bl	c400 <mpfr_mpz_init@plt>
   318cc:	add	x0, x24, x22
   318d0:	bl	c400 <mpfr_mpz_init@plt>
   318d4:	add	x23, sp, #0x8c8
   318d8:	add	x27, x23, x22
   318dc:	mov	x0, x27
   318e0:	bl	c400 <mpfr_mpz_init@plt>
   318e4:	add	x1, x23, x20, lsl #4
   318e8:	mov	x0, x27
   318ec:	mov	x2, x1
   318f0:	bl	c460 <__gmpz_mul@plt>
   318f4:	ldr	w8, [x27, #4]
   318f8:	ldr	x9, [x27, #8]
   318fc:	cmp	w8, #0x0
   31900:	cneg	w8, w8, mi  // mi = first
   31904:	add	x9, x9, w8, uxtw #3
   31908:	ldur	x9, [x9, #-8]
   3190c:	lsl	x8, x8, #6
   31910:	clz	x9, x9
   31914:	sub	x8, x8, x9
   31918:	add	x9, sp, #0xb8
   3191c:	str	x8, [x9, x19, lsl #3]
   31920:	ldr	x26, [sp, #112]
   31924:	sbfiz	x23, x20, #4, #32
   31928:	add	x28, x24, x23
   3192c:	sbfiz	x22, x20, #3, #32
   31930:	lsl	x27, x26, #1
   31934:	add	x8, sp, #0x6b8
   31938:	mov	w9, #0x1                   	// #1
   3193c:	orr	x1, x27, #0x2
   31940:	mov	x0, x28
   31944:	sxtw	x19, w20
   31948:	str	x9, [x8, x22]
   3194c:	bl	c110 <__gmpz_set_ui@plt>
   31950:	orr	x2, x27, #0x3
   31954:	mov	x0, x28
   31958:	mov	x1, x28
   3195c:	bl	c590 <__gmpz_mul_ui@plt>
   31960:	add	x8, sp, #0x1, lsl #12
   31964:	ldr	x2, [sp, #144]
   31968:	add	x8, x8, #0xc8
   3196c:	add	x24, x8, x23
   31970:	mov	x0, x24
   31974:	mov	x1, x28
   31978:	bl	c6a0 <__gmpz_mul_2exp@plt>
   3197c:	add	x2, sp, #0x8b8
   31980:	mov	x0, x24
   31984:	mov	x1, x24
   31988:	bl	c240 <__gmpz_sub@plt>
   3198c:	mov	x0, x28
   31990:	mov	x1, x28
   31994:	mov	x2, x27
   31998:	bl	c590 <__gmpz_mul_ui@plt>
   3199c:	mov	w2, #0x1                   	// #1
   319a0:	bfi	x2, x26, #1, #63
   319a4:	mov	x0, x28
   319a8:	mov	x1, x28
   319ac:	bl	c590 <__gmpz_mul_ui@plt>
   319b0:	ldr	w8, [x28, #4]
   319b4:	ldr	x9, [x28, #8]
   319b8:	ldr	x10, [sp, #192]
   319bc:	cmp	w8, #0x0
   319c0:	cneg	w8, w8, mi  // mi = first
   319c4:	add	x9, x9, w8, uxtw #3
   319c8:	ldur	x9, [x9, #-8]
   319cc:	lsl	x8, x8, #6
   319d0:	mvn	x10, x10
   319d4:	clz	x9, x9
   319d8:	sub	x8, x8, x9
   319dc:	ldr	x9, [sp, #96]
   319e0:	add	x9, x9, x10
   319e4:	add	x8, x9, x8
   319e8:	add	x9, sp, #0x4b8
   319ec:	add	x10, sp, #0x2b8
   319f0:	str	x8, [x9, x22]
   319f4:	cbz	w20, 31a00 <mpfr_sincos_fast@@Base+0xc44>
   319f8:	ldr	x9, [x10, x21, lsl #3]
   319fc:	add	x8, x9, x8
   31a00:	ldr	x9, [sp, #112]
   31a04:	mov	x26, x25
   31a08:	str	x8, [x10, x19, lsl #3]
   31a0c:	add	x12, x9, #0x2
   31a10:	tbnz	w12, #1, 3187c <mpfr_sincos_fast@@Base+0xac0>
   31a14:	add	w9, w21, #0x1
   31a18:	sxtw	x8, w9
   31a1c:	sbfiz	x11, x9, #4, #32
   31a20:	sub	x8, x8, #0x1
   31a24:	stp	x8, x11, [sp, #128]
   31a28:	ldp	x8, x27, [sp, #56]
   31a2c:	stp	x9, x12, [sp, #80]
   31a30:	sbfiz	x9, x9, #3, #32
   31a34:	add	x19, sp, #0x1, lsl #12
   31a38:	add	x22, x8, x9
   31a3c:	ldr	x8, [sp, #48]
   31a40:	mov	x10, xzr
   31a44:	add	x19, x19, #0xc8
   31a48:	add	x23, sp, #0xcc8
   31a4c:	add	x25, x8, x9
   31a50:	ldr	x8, [sp, #40]
   31a54:	add	x26, x8, x9
   31a58:	b	31a80 <mpfr_sincos_fast@@Base+0xcc4>
   31a5c:	ldp	x12, x9, [sp, #160]
   31a60:	ldr	x10, [sp, #176]
   31a64:	str	x8, [x26], #-8
   31a68:	add	x27, x27, #0x10
   31a6c:	sub	x19, x19, #0x10
   31a70:	sub	x23, x23, #0x10
   31a74:	sub	x22, x22, #0x8
   31a78:	sub	x25, x25, #0x8
   31a7c:	tbnz	w9, #2, 31870 <mpfr_sincos_fast@@Base+0xab4>
   31a80:	ldr	x21, [sp, #136]
   31a84:	lsr	x8, x12, #1
   31a88:	mov	x2, x27
   31a8c:	add	x20, x10, #0x1
   31a90:	add	x24, x19, x21
   31a94:	mov	x0, x24
   31a98:	mov	x1, x24
   31a9c:	str	x12, [sp, #168]
   31aa0:	stp	x10, x8, [sp, #152]
   31aa4:	bl	c460 <__gmpz_mul@plt>
   31aa8:	sub	x28, x24, #0x10
   31aac:	add	x21, x23, x21
   31ab0:	mov	x0, x28
   31ab4:	mov	x1, x28
   31ab8:	mov	x2, x21
   31abc:	bl	c460 <__gmpz_mul@plt>
   31ac0:	ldr	x8, [sp, #144]
   31ac4:	str	x20, [sp, #176]
   31ac8:	mov	x0, x28
   31acc:	mov	x1, x28
   31ad0:	lsl	x20, x8, x20
   31ad4:	mov	x2, x20
   31ad8:	bl	c6a0 <__gmpz_mul_2exp@plt>
   31adc:	mov	x0, x28
   31ae0:	mov	x1, x28
   31ae4:	mov	x2, x24
   31ae8:	bl	ceb0 <__gmpz_add@plt>
   31aec:	sub	x0, x21, #0x10
   31af0:	mov	x1, x0
   31af4:	mov	x2, x21
   31af8:	bl	c460 <__gmpz_mul@plt>
   31afc:	ldr	x8, [x22]
   31b00:	ldr	w9, [x21, #4]
   31b04:	ldr	x10, [x21, #8]
   31b08:	ldr	x11, [sp, #120]
   31b0c:	ldr	x12, [sp, #152]
   31b10:	add	x8, x8, #0x1
   31b14:	cmp	w9, #0x0
   31b18:	str	x8, [x22]
   31b1c:	cneg	w8, w9, mi  // mi = first
   31b20:	add	x9, x10, w8, uxtw #3
   31b24:	ldur	x9, [x9, #-8]
   31b28:	ldr	x11, [x11, x12, lsl #3]
   31b2c:	ldr	x10, [x25]
   31b30:	clz	x9, x9
   31b34:	mvn	x11, x11
   31b38:	sub	x9, x20, x9
   31b3c:	add	x9, x9, x11
   31b40:	add	x8, x9, x8, lsl #6
   31b44:	ldr	x9, [sp, #128]
   31b48:	add	x8, x8, x10
   31b4c:	str	x8, [x25]
   31b50:	cmp	x9, x12
   31b54:	b.eq	31a5c <mpfr_sincos_fast@@Base+0xca0>  // b.none
   31b58:	ldur	x9, [x26, #-8]
   31b5c:	add	x8, x9, x8
   31b60:	b	31a5c <mpfr_sincos_fast@@Base+0xca0>
   31b64:	mov	w8, #0x1                   	// #1
   31b68:	str	x8, [sp, #176]
   31b6c:	mov	w20, wzr
   31b70:	mov	w8, #0x2                   	// #2
   31b74:	b	31b84 <mpfr_sincos_fast@@Base+0xdc8>
   31b78:	ldr	x9, [sp, #112]
   31b7c:	orr	x9, x9, #0x1
   31b80:	str	x9, [sp, #176]
   31b84:	ldr	x24, [sp, #144]
   31b88:	cmp	w20, #0x1
   31b8c:	str	w8, [sp, #108]
   31b90:	b.lt	31c4c <mpfr_sincos_fast@@Base+0xe90>  // b.tstop
   31b94:	add	x11, sp, #0x1, lsl #12
   31b98:	add	x12, sp, #0x6b8
   31b9c:	sxtw	x8, w20
   31ba0:	sbfiz	x9, x20, #4, #32
   31ba4:	add	x10, sp, #0xcc8
   31ba8:	add	x11, x11, #0xc8
   31bac:	add	x22, x12, w20, sxtw #3
   31bb0:	mov	x19, xzr
   31bb4:	add	x23, x8, #0x1
   31bb8:	add	x26, x10, x9
   31bbc:	add	x27, x11, x9
   31bc0:	mov	w25, #0x1                   	// #1
   31bc4:	mov	x28, x22
   31bc8:	ldr	x8, [x28, #-8]!
   31bcc:	add	x9, sp, #0x8c8
   31bd0:	mov	x0, x27
   31bd4:	mov	x1, x27
   31bd8:	add	x2, x9, x8, lsl #4
   31bdc:	bl	c460 <__gmpz_mul@plt>
   31be0:	sub	x20, x27, #0x10
   31be4:	mov	x0, x20
   31be8:	mov	x1, x20
   31bec:	mov	x2, x26
   31bf0:	bl	c460 <__gmpz_mul@plt>
   31bf4:	ldr	x8, [x22]
   31bf8:	mov	x0, x20
   31bfc:	mov	x1, x20
   31c00:	lsl	x8, x25, x8
   31c04:	add	x19, x8, x19
   31c08:	mul	x2, x19, x24
   31c0c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   31c10:	mov	x0, x20
   31c14:	mov	x1, x20
   31c18:	mov	x2, x27
   31c1c:	bl	ceb0 <__gmpz_add@plt>
   31c20:	sub	x21, x26, #0x10
   31c24:	mov	x0, x21
   31c28:	mov	x1, x21
   31c2c:	mov	x2, x26
   31c30:	bl	c460 <__gmpz_mul@plt>
   31c34:	sub	x23, x23, #0x1
   31c38:	cmp	x23, #0x1
   31c3c:	mov	x22, x28
   31c40:	mov	x27, x20
   31c44:	mov	x26, x21
   31c48:	b.gt	31bc8 <mpfr_sincos_fast@@Base+0xe0c>
   31c4c:	ldr	x21, [sp, #16]
   31c50:	ldr	x22, [sp, #72]
   31c54:	ldr	x8, [sp]
   31c58:	ldr	x9, [sp, #176]
   31c5c:	add	x1, sp, #0xcc8
   31c60:	mov	x0, x21
   31c64:	mov	x2, x22
   31c68:	madd	x19, x9, x24, x8
   31c6c:	bl	31ddc <mpfr_sincos_fast@@Base+0x1020>
   31c70:	add	x19, x19, x0
   31c74:	add	x0, sp, #0x1, lsl #12
   31c78:	add	x1, sp, #0x1, lsl #12
   31c7c:	add	x0, x0, #0xc8
   31c80:	add	x1, x1, #0xc8
   31c84:	mov	x2, x22
   31c88:	bl	31ddc <mpfr_sincos_fast@@Base+0x1020>
   31c8c:	ldr	x20, [sp, #24]
   31c90:	ldr	x2, [sp, #8]
   31c94:	add	x1, sp, #0x1, lsl #12
   31c98:	sub	x19, x19, x0
   31c9c:	add	x1, x1, #0xc8
   31ca0:	mov	x0, x20
   31ca4:	bl	c460 <__gmpz_mul@plt>
   31ca8:	mov	x0, x20
   31cac:	mov	x1, x20
   31cb0:	mov	x2, x22
   31cb4:	bl	31ddc <mpfr_sincos_fast@@Base+0x1020>
   31cb8:	sub	x23, x19, x0
   31cbc:	add	x0, sp, #0x8b8
   31cc0:	bl	c610 <mpfr_mpz_clear@plt>
   31cc4:	ldr	w8, [sp, #108]
   31cc8:	cmp	w8, #0x1
   31ccc:	b.lt	31d10 <mpfr_sincos_fast@@Base+0xf54>  // b.tstop
   31cd0:	add	x24, sp, #0x1, lsl #12
   31cd4:	mov	w19, w8
   31cd8:	add	x24, x24, #0xc8
   31cdc:	add	x25, sp, #0xcc8
   31ce0:	add	x26, sp, #0x8c8
   31ce4:	mov	x0, x24
   31ce8:	bl	c610 <mpfr_mpz_clear@plt>
   31cec:	mov	x0, x25
   31cf0:	bl	c610 <mpfr_mpz_clear@plt>
   31cf4:	mov	x0, x26
   31cf8:	bl	c610 <mpfr_mpz_clear@plt>
   31cfc:	add	x24, x24, #0x10
   31d00:	add	x25, x25, #0x10
   31d04:	subs	x19, x19, #0x1
   31d08:	add	x26, x26, #0x10
   31d0c:	b.ne	31ce4 <mpfr_sincos_fast@@Base+0xf28>  // b.any
   31d10:	mov	w1, #0x2                   	// #2
   31d14:	mov	x0, x21
   31d18:	bl	d050 <__gmpz_sizeinbase@plt>
   31d1c:	ldr	x9, [sp, #72]
   31d20:	add	x8, x0, x23
   31d24:	cmp	x8, x9
   31d28:	b.cc	31dc0 <mpfr_sincos_fast@@Base+0x1004>  // b.lo, b.ul, b.last
   31d2c:	ldr	x19, [sp, #32]
   31d30:	mov	x1, x21
   31d34:	mov	x2, x21
   31d38:	mov	x0, x19
   31d3c:	bl	c460 <__gmpz_mul@plt>
   31d40:	lsl	x2, x23, #1
   31d44:	mov	x0, x19
   31d48:	mov	x1, x19
   31d4c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   31d50:	mov	x0, x19
   31d54:	mov	x1, x20
   31d58:	mov	x2, x20
   31d5c:	bl	cd60 <__gmpz_submul@plt>
   31d60:	mov	x0, x19
   31d64:	mov	x1, x19
   31d68:	bl	c0c0 <__gmpz_sqrt@plt>
   31d6c:	mov	x0, x23
   31d70:	add	sp, sp, #0x1, lsl #12
   31d74:	add	sp, sp, #0x4d0
   31d78:	ldp	x20, x19, [sp, #80]
   31d7c:	ldp	x22, x21, [sp, #64]
   31d80:	ldp	x24, x23, [sp, #48]
   31d84:	ldp	x26, x25, [sp, #32]
   31d88:	ldp	x28, x27, [sp, #16]
   31d8c:	ldp	x29, x30, [sp], #96
   31d90:	ret
   31d94:	mov	w1, #0x1                   	// #1
   31d98:	mov	x0, x21
   31d9c:	bl	c110 <__gmpz_set_ui@plt>
   31da0:	mov	w1, #0x1                   	// #1
   31da4:	mov	x0, x20
   31da8:	bl	c110 <__gmpz_set_ui@plt>
   31dac:	mov	w1, #0x1                   	// #1
   31db0:	mov	x0, x19
   31db4:	bl	c110 <__gmpz_set_ui@plt>
   31db8:	mov	x23, xzr
   31dbc:	b	31d6c <mpfr_sincos_fast@@Base+0xfb0>
   31dc0:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   31dc4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   31dc8:	add	x0, x0, #0x7f5
   31dcc:	add	x2, x2, #0x815
   31dd0:	mov	w1, #0x1be                 	// #446
   31dd4:	bl	d030 <mpfr_assert_fail@plt>
   31dd8:	b	31d2c <mpfr_sincos_fast@@Base+0xf70>
   31ddc:	stp	x29, x30, [sp, #-32]!
   31de0:	ldr	w8, [x1, #4]
   31de4:	ldr	x9, [x1, #8]
   31de8:	str	x19, [sp, #16]
   31dec:	mov	x29, sp
   31df0:	cmp	w8, #0x0
   31df4:	cneg	w8, w8, mi  // mi = first
   31df8:	add	x9, x9, w8, uxtw #3
   31dfc:	ldur	x9, [x9, #-8]
   31e00:	lsl	x8, x8, #6
   31e04:	clz	x9, x9
   31e08:	sub	x8, x8, x9
   31e0c:	subs	x8, x8, x2
   31e10:	csel	x19, x8, xzr, gt
   31e14:	mov	x2, x19
   31e18:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   31e1c:	mov	x0, x19
   31e20:	ldr	x19, [sp, #16]
   31e24:	ldp	x29, x30, [sp], #32
   31e28:	ret
   31e2c:	stp	x29, x30, [sp, #-32]!
   31e30:	stp	x20, x19, [sp, #16]
   31e34:	ldr	w8, [x0, #4]
   31e38:	ldr	w10, [x1, #4]
   31e3c:	ldr	x9, [x0, #8]
   31e40:	ldr	x11, [x1, #8]
   31e44:	cmp	w8, #0x0
   31e48:	cneg	w8, w8, mi  // mi = first
   31e4c:	cmp	w10, #0x0
   31e50:	add	x9, x9, w8, uxtw #3
   31e54:	cneg	w10, w10, mi  // mi = first
   31e58:	ldur	x9, [x9, #-8]
   31e5c:	add	x11, x11, w10, uxtw #3
   31e60:	ldur	x11, [x11, #-8]
   31e64:	lsl	x8, x8, #6
   31e68:	clz	x9, x9
   31e6c:	sub	x8, x8, x9
   31e70:	clz	x9, x11
   31e74:	lsl	x10, x10, #6
   31e78:	sub	x9, x10, x9
   31e7c:	cmp	x8, x9
   31e80:	csel	x8, x8, x9, cc  // cc = lo, ul, last
   31e84:	subs	x8, x8, x2
   31e88:	csel	x20, xzr, x8, cc  // cc = lo, ul, last
   31e8c:	mov	x19, x1
   31e90:	mov	x1, x0
   31e94:	mov	x2, x20
   31e98:	mov	x29, sp
   31e9c:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   31ea0:	mov	x0, x19
   31ea4:	mov	x1, x19
   31ea8:	mov	x2, x20
   31eac:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   31eb0:	mov	x0, x20
   31eb4:	ldp	x20, x19, [sp, #16]
   31eb8:	ldp	x29, x30, [sp], #32
   31ebc:	ret

0000000000031ec0 <mpfr_set_nan@@Base>:
   31ec0:	stp	x29, x30, [sp, #-16]!
   31ec4:	mov	x8, #0x2                   	// #2
   31ec8:	movk	x8, #0x8000, lsl #48
   31ecc:	mov	x29, sp
   31ed0:	str	x8, [x0, #16]
   31ed4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   31ed8:	ldr	x1, [x0, #2800]
   31edc:	add	x0, x0, #0xaf0
   31ee0:	blr	x1
   31ee4:	mrs	x8, tpidr_el0
   31ee8:	ldr	w9, [x8, x0]
   31eec:	orr	w9, w9, #0x4
   31ef0:	str	w9, [x8, x0]
   31ef4:	ldp	x29, x30, [sp], #16
   31ef8:	ret

0000000000031efc <mpfr_set_inf@@Base>:
   31efc:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   31f00:	cmp	w1, #0x0
   31f04:	mov	w9, #0x1                   	// #1
   31f08:	str	x8, [x0, #16]
   31f0c:	cneg	w8, w9, lt  // lt = tstop
   31f10:	str	w8, [x0, #8]
   31f14:	ret

0000000000031f18 <mpfr_set_zero@@Base>:
   31f18:	mov	w8, #0x1                   	// #1
   31f1c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   31f20:	str	w8, [x0, #8]
   31f24:	str	x9, [x0, #16]
   31f28:	tbnz	w1, #31, 31f30 <mpfr_set_zero@@Base+0x18>
   31f2c:	ret
   31f30:	mov	w8, #0xffffffff            	// #-1
   31f34:	str	w8, [x0, #8]
   31f38:	ret

0000000000031f3c <mpfr_powerof2_raw@@Base>:
   31f3c:	stp	x29, x30, [sp, #-16]!
   31f40:	ldr	x8, [x0]
   31f44:	ldr	x0, [x0, #24]
   31f48:	mov	x29, sp
   31f4c:	sub	x9, x8, #0x1
   31f50:	add	x8, x8, #0x3e
   31f54:	cmp	x9, #0x0
   31f58:	csel	x8, x8, x9, lt  // lt = tstop
   31f5c:	asr	x8, x8, #6
   31f60:	add	x1, x8, #0x1
   31f64:	bl	ccb0 <mpfr_powerof2_raw2@plt>
   31f68:	ldp	x29, x30, [sp], #16
   31f6c:	ret

0000000000031f70 <mpfr_powerof2_raw2@@Base>:
   31f70:	add	x8, x0, x1, lsl #3
   31f74:	ldur	x8, [x8, #-8]
   31f78:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   31f7c:	cmp	x8, x9
   31f80:	b.ne	31fa0 <mpfr_powerof2_raw2@@Base+0x30>  // b.any
   31f84:	sub	x8, x0, #0x10
   31f88:	sub	x9, x1, #0x1
   31f8c:	cmp	x9, #0x1
   31f90:	b.lt	31fa8 <mpfr_powerof2_raw2@@Base+0x38>  // b.tstop
   31f94:	ldr	x10, [x8, x1, lsl #3]
   31f98:	mov	x1, x9
   31f9c:	cbz	x10, 31f88 <mpfr_powerof2_raw2@@Base+0x18>
   31fa0:	mov	w0, wzr
   31fa4:	ret
   31fa8:	mov	w0, #0x1                   	// #1
   31fac:	ret

0000000000031fb0 <mpfr_gamma@@Base>:
   31fb0:	sub	sp, sp, #0x1c0
   31fb4:	stp	x29, x30, [sp, #352]
   31fb8:	stp	x28, x27, [sp, #368]
   31fbc:	stp	x26, x25, [sp, #384]
   31fc0:	stp	x24, x23, [sp, #400]
   31fc4:	stp	x22, x21, [sp, #416]
   31fc8:	stp	x20, x19, [sp, #432]
   31fcc:	ldr	x9, [x1, #16]
   31fd0:	mov	x8, #0x2                   	// #2
   31fd4:	movk	x8, #0x8000, lsl #48
   31fd8:	add	x8, x8, #0x2
   31fdc:	mov	x21, x1
   31fe0:	cmp	x9, x8
   31fe4:	mov	x19, x0
   31fe8:	add	x29, sp, #0x160
   31fec:	b.lt	32bc4 <mpfr_gamma@@Base+0xc14>  // b.tstop
   31ff0:	ldr	x8, [x21]
   31ff4:	ldr	x10, [x19]
   31ff8:	mov	w23, w2
   31ffc:	cmp	x8, x10
   32000:	csel	x8, x8, x10, gt
   32004:	neg	x8, x8, lsl #1
   32008:	cmp	x9, x8
   3200c:	b.le	320a4 <mpfr_gamma@@Base+0xf4>
   32010:	mov	x0, x21
   32014:	bl	c600 <mpfr_integer_p@plt>
   32018:	mov	w22, w0
   3201c:	cbz	w0, 32028 <mpfr_gamma@@Base+0x78>
   32020:	ldr	w8, [x21, #8]
   32024:	tbnz	w8, #31, 32c50 <mpfr_gamma@@Base+0xca0>
   32028:	mov	w1, #0x1                   	// #1
   3202c:	mov	x0, x21
   32030:	mov	x2, xzr
   32034:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   32038:	cbz	w0, 3228c <mpfr_gamma@@Base+0x2dc>
   3203c:	mov	w24, w0
   32040:	str	w23, [sp, #28]
   32044:	cbz	w22, 321e8 <mpfr_gamma@@Base+0x238>
   32048:	mov	x0, x21
   3204c:	mov	w1, wzr
   32050:	bl	c2b0 <mpfr_fits_ulong_p@plt>
   32054:	cbz	w0, 321e8 <mpfr_gamma@@Base+0x238>
   32058:	ldr	x20, [x19]
   3205c:	mov	x0, x21
   32060:	mov	w1, wzr
   32064:	bl	c100 <mpfr_get_ui@plt>
   32068:	mov	w8, #0x68d8                	// #26840
   3206c:	movk	w8, #0x2ab, lsl #16
   32070:	cmp	x0, x8
   32074:	b.hi	32094 <mpfr_gamma@@Base+0xe4>  // b.pmore
   32078:	sub	x22, x0, #0x1
   3207c:	mov	x0, x22
   32080:	bl	32ce0 <mpfr_gamma@@Base+0xd30>
   32084:	cmp	w23, #0x0
   32088:	cinc	x8, x20, eq  // eq = none
   3208c:	cmp	x0, x8
   32090:	b.ls	325fc <mpfr_gamma@@Base+0x64c>  // b.plast
   32094:	mov	w8, #0x1                   	// #1
   32098:	str	w23, [sp, #12]
   3209c:	cbnz	w8, 321e8 <mpfr_gamma@@Base+0x238>
   320a0:	b	32454 <mpfr_gamma@@Base+0x4a4>
   320a4:	ldr	w26, [x21, #8]
   320a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   320ac:	ldr	x1, [x0, #2800]
   320b0:	add	x0, x0, #0xaf0
   320b4:	blr	x1
   320b8:	mrs	x20, tpidr_el0
   320bc:	ldr	w27, [x20, x0]
   320c0:	str	w27, [sp, #32]
   320c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   320c8:	ldr	x1, [x0, #2736]
   320cc:	add	x0, x0, #0xab0
   320d0:	blr	x1
   320d4:	ldr	x24, [x20, x0]
   320d8:	mov	x8, x0
   320dc:	str	x24, [sp, #40]
   320e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   320e4:	ldr	x1, [x0, #2768]
   320e8:	add	x0, x0, #0xad0
   320ec:	blr	x1
   320f0:	ldr	x25, [x20, x0]
   320f4:	mov	x12, #0x2                   	// #2
   320f8:	movk	x12, #0xc000, lsl #48
   320fc:	mov	w28, wzr
   32100:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   32104:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   32108:	cmp	x9, x12
   3210c:	str	x10, [x20, x8]
   32110:	str	x25, [sp, #48]
   32114:	str	x11, [x20, x0]
   32118:	b.ne	32140 <mpfr_gamma@@Base+0x190>  // b.any
   3211c:	cmp	w26, #0x1
   32120:	b.lt	32140 <mpfr_gamma@@Base+0x190>  // b.tstop
   32124:	orr	w8, w23, #0x2
   32128:	cmp	w8, #0x3
   3212c:	b.ne	322a8 <mpfr_gamma@@Base+0x2f8>  // b.any
   32130:	mov	x0, x21
   32134:	bl	c360 <mpfr_powerof2_raw@plt>
   32138:	cmp	w0, #0x0
   3213c:	cset	w28, ne  // ne = any
   32140:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32144:	ldr	x1, [x0, #2800]
   32148:	add	x0, x0, #0xaf0
   3214c:	blr	x1
   32150:	mov	x22, x0
   32154:	str	wzr, [x20, x0]
   32158:	mov	w1, #0x1                   	// #1
   3215c:	mov	x0, x19
   32160:	mov	x2, x21
   32164:	mov	w3, w23
   32168:	bl	c7b0 <mpfr_ui_div@plt>
   3216c:	mov	w21, w23
   32170:	cbz	w0, 32198 <mpfr_gamma@@Base+0x1e8>
   32174:	ldr	w8, [x20, x22]
   32178:	mov	w23, w0
   3217c:	tst	w8, #0x2
   32180:	cset	w9, eq  // eq = none
   32184:	orr	w9, w28, w9
   32188:	tbnz	w9, #0, 323e8 <mpfr_gamma@@Base+0x438>
   3218c:	orr	w8, w8, w27
   32190:	str	w8, [sp, #32]
   32194:	b	323e8 <mpfr_gamma@@Base+0x438>
   32198:	tst	w21, #0xfffffffd
   3219c:	mov	w11, w21
   321a0:	b.eq	323e0 <mpfr_gamma@@Base+0x430>  // b.none
   321a4:	cmp	w11, #0x1
   321a8:	cset	w9, eq  // eq = none
   321ac:	cmp	w26, #0x0
   321b0:	cset	w8, gt
   321b4:	cset	w10, lt  // lt = tstop
   321b8:	cmp	w11, #0x4
   321bc:	mov	w21, w11
   321c0:	and	w10, w9, w10
   321c4:	cset	w9, eq  // eq = none
   321c8:	mov	w23, #0x1                   	// #1
   321cc:	tbnz	w10, #0, 323e8 <mpfr_gamma@@Base+0x438>
   321d0:	and	w8, w9, w8
   321d4:	tbnz	w8, #0, 323e8 <mpfr_gamma@@Base+0x438>
   321d8:	mov	x0, x19
   321dc:	bl	c230 <mpfr_nextbelow@plt>
   321e0:	mov	w23, #0xffffffff            	// #-1
   321e4:	b	323e8 <mpfr_gamma@@Base+0x438>
   321e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   321ec:	ldr	x1, [x0, #2800]
   321f0:	add	x0, x0, #0xaf0
   321f4:	blr	x1
   321f8:	mrs	x26, tpidr_el0
   321fc:	ldr	w27, [x26, x0]
   32200:	str	w27, [sp, #32]
   32204:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32208:	ldr	x1, [x0, #2736]
   3220c:	add	x0, x0, #0xab0
   32210:	blr	x1
   32214:	ldr	x28, [x26, x0]
   32218:	mov	x8, x0
   3221c:	str	x28, [sp, #40]
   32220:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32224:	ldr	x1, [x0, #2768]
   32228:	add	x0, x0, #0xad0
   3222c:	blr	x1
   32230:	ldr	x25, [x26, x0]
   32234:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   32238:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   3223c:	cmp	w24, #0x1
   32240:	str	x9, [x26, x8]
   32244:	str	x25, [sp, #48]
   32248:	str	x10, [x26, x0]
   3224c:	b.lt	322bc <mpfr_gamma@@Base+0x30c>  // b.tstop
   32250:	ldr	x8, [x21, #16]
   32254:	ldr	w23, [sp, #28]
   32258:	cmp	x8, #0x19
   3225c:	b.gt	32478 <mpfr_gamma@@Base+0x4c8>
   32260:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32264:	ldr	x1, [x0, #2736]
   32268:	add	x0, x0, #0xab0
   3226c:	blr	x1
   32270:	str	x28, [x26, x0]
   32274:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32278:	ldr	x1, [x0, #2768]
   3227c:	add	x0, x0, #0xad0
   32280:	blr	x1
   32284:	str	x25, [x26, x0]
   32288:	b	325cc <mpfr_gamma@@Base+0x61c>
   3228c:	mov	w1, #0x1                   	// #1
   32290:	mov	x0, x19
   32294:	mov	x2, xzr
   32298:	mov	w3, w23
   3229c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   322a0:	mov	w23, w0
   322a4:	b	32454 <mpfr_gamma@@Base+0x4a4>
   322a8:	cmp	w23, #0x4
   322ac:	mov	w28, wzr
   322b0:	b.ne	32140 <mpfr_gamma@@Base+0x190>  // b.any
   322b4:	tbnz	w26, #31, 32130 <mpfr_gamma@@Base+0x180>
   322b8:	b	32140 <mpfr_gamma@@Base+0x190>
   322bc:	ldr	w8, [x21, #8]
   322c0:	tbz	w8, #31, 32794 <mpfr_gamma@@Base+0x7e4>
   322c4:	sub	x0, x29, #0x28
   322c8:	mov	w1, #0x35                  	// #53
   322cc:	bl	cf60 <mpfr_init2@plt>
   322d0:	sub	x0, x29, #0x68
   322d4:	mov	w1, #0x35                  	// #53
   322d8:	bl	cf60 <mpfr_init2@plt>
   322dc:	sub	x0, x29, #0x88
   322e0:	mov	w1, #0x35                  	// #53
   322e4:	bl	cf60 <mpfr_init2@plt>
   322e8:	sub	x0, x29, #0x28
   322ec:	mov	w1, #0x2                   	// #2
   322f0:	mov	w3, #0x3                   	// #3
   322f4:	mov	x2, x21
   322f8:	bl	cf30 <mpfr_ui_sub@plt>
   322fc:	sub	x0, x29, #0x28
   32300:	sub	x1, x29, #0x28
   32304:	mov	w2, #0x3                   	// #3
   32308:	bl	c520 <mpfr_log@plt>
   3230c:	sub	x0, x29, #0x28
   32310:	sub	x1, x29, #0x28
   32314:	mov	w2, #0x1                   	// #1
   32318:	mov	w3, #0x3                   	// #3
   3231c:	bl	ca00 <mpfr_sub_ui@plt>
   32320:	sub	x0, x29, #0x28
   32324:	sub	x1, x29, #0x28
   32328:	mov	w3, #0x2                   	// #2
   3232c:	mov	x2, x21
   32330:	bl	c1b0 <mpfr_mul@plt>
   32334:	mov	x0, x21
   32338:	bl	33c34 <mpfr_gamma@@Base+0x1c84>
   3233c:	add	x23, x0, #0x11
   32340:	sub	x0, x29, #0x68
   32344:	mov	x1, x23
   32348:	bl	c330 <mpfr_set_prec@plt>
   3234c:	sub	x0, x29, #0x88
   32350:	mov	x1, x23
   32354:	bl	c330 <mpfr_set_prec@plt>
   32358:	sub	x0, x29, #0x68
   3235c:	mov	w1, #0x2                   	// #2
   32360:	mov	x2, x21
   32364:	mov	w3, wzr
   32368:	bl	cf30 <mpfr_ui_sub@plt>
   3236c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32370:	ldr	x1, [x0, #2848]
   32374:	add	x0, x0, #0xb20
   32378:	blr	x1
   3237c:	add	x1, x26, x0
   32380:	sub	x0, x29, #0x88
   32384:	mov	w2, wzr
   32388:	bl	c840 <mpfr_cache@plt>
   3238c:	sub	x0, x29, #0x88
   32390:	sub	x1, x29, #0x88
   32394:	sub	x2, x29, #0x68
   32398:	mov	w3, wzr
   3239c:	bl	c1b0 <mpfr_mul@plt>
   323a0:	sub	x0, x29, #0x68
   323a4:	sub	x1, x29, #0x88
   323a8:	mov	w2, wzr
   323ac:	bl	c920 <mpfr_sin@plt>
   323b0:	ldur	x8, [x29, #-88]
   323b4:	mov	x9, #0x2                   	// #2
   323b8:	movk	x9, #0x8000, lsl #48
   323bc:	cmp	x8, x9
   323c0:	b.gt	32620 <mpfr_gamma@@Base+0x670>
   323c4:	mov	x9, #0x2                   	// #2
   323c8:	movk	x9, #0x8000, lsl #48
   323cc:	cmp	x8, x9
   323d0:	b.ne	323d8 <mpfr_gamma@@Base+0x428>  // b.any
   323d4:	bl	c0f0 <mpfr_set_erangeflag@plt>
   323d8:	mov	w23, wzr
   323dc:	b	32628 <mpfr_gamma@@Base+0x678>
   323e0:	mov	w21, w11
   323e4:	mov	w23, #0x1                   	// #1
   323e8:	ldr	w8, [sp, #32]
   323ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   323f0:	ldr	x1, [x0, #2800]
   323f4:	add	x0, x0, #0xaf0
   323f8:	blr	x1
   323fc:	str	w8, [x20, x0]
   32400:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32404:	ldr	x1, [x0, #2736]
   32408:	add	x0, x0, #0xab0
   3240c:	blr	x1
   32410:	str	x24, [x20, x0]
   32414:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32418:	ldr	x1, [x0, #2768]
   3241c:	add	x0, x0, #0xad0
   32420:	blr	x1
   32424:	str	x25, [x20, x0]
   32428:	ldr	x9, [x19, #16]
   3242c:	cmp	x9, x25
   32430:	b.gt	32c18 <mpfr_gamma@@Base+0xc68>
   32434:	cmp	x9, x24
   32438:	b.lt	32c18 <mpfr_gamma@@Base+0xc68>  // b.tstop
   3243c:	orr	w8, w8, #0x8
   32440:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32444:	ldr	x1, [x0, #2800]
   32448:	add	x0, x0, #0xaf0
   3244c:	blr	x1
   32450:	str	w8, [x20, x0]
   32454:	mov	w0, w23
   32458:	ldp	x20, x19, [sp, #432]
   3245c:	ldp	x22, x21, [sp, #416]
   32460:	ldp	x24, x23, [sp, #400]
   32464:	ldp	x26, x25, [sp, #384]
   32468:	ldp	x28, x27, [sp, #368]
   3246c:	ldp	x29, x30, [sp, #352]
   32470:	add	sp, sp, #0x1c0
   32474:	ret
   32478:	add	x8, sp, #0x38
   3247c:	mov	w9, #0x35                  	// #53
   32480:	adrp	x1, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   32484:	mov	w10, #0x1                   	// #1
   32488:	add	x11, x8, #0x10
   3248c:	stur	x9, [x29, #-40]
   32490:	stur	x9, [x29, #-72]
   32494:	stur	x9, [x29, #-104]
   32498:	add	x9, x8, #0x18
   3249c:	add	x8, x8, #0x20
   324a0:	add	x1, x1, #0x848
   324a4:	sub	x0, x29, #0x68
   324a8:	stur	w10, [x29, #-32]
   324ac:	stur	w10, [x29, #-64]
   324b0:	stp	xzr, x11, [sp, #56]
   324b4:	stur	x11, [x29, #-16]
   324b8:	stur	x9, [x29, #-48]
   324bc:	stur	x8, [x29, #-80]
   324c0:	stur	w10, [x29, #-96]
   324c4:	bl	c800 <mpfr_set_str_binary@plt>
   324c8:	sub	x0, x29, #0x28
   324cc:	sub	x2, x29, #0x68
   324d0:	mov	w3, #0x1                   	// #1
   324d4:	mov	x1, x21
   324d8:	bl	c1b0 <mpfr_mul@plt>
   324dc:	sub	x0, x29, #0x48
   324e0:	mov	w2, #0x2                   	// #2
   324e4:	mov	w3, #0x1                   	// #1
   324e8:	mov	x1, x21
   324ec:	bl	ca00 <mpfr_sub_ui@plt>
   324f0:	sub	x0, x29, #0x28
   324f4:	sub	x1, x29, #0x28
   324f8:	sub	x2, x29, #0x48
   324fc:	mov	w3, #0x1                   	// #1
   32500:	bl	c1f0 <mpfr_pow@plt>
   32504:	sub	x0, x29, #0x28
   32508:	sub	x1, x29, #0x28
   3250c:	sub	x2, x29, #0x68
   32510:	mov	w3, #0x1                   	// #1
   32514:	bl	c1b0 <mpfr_mul@plt>
   32518:	sub	x0, x29, #0x28
   3251c:	sub	x1, x29, #0x28
   32520:	sub	x2, x29, #0x68
   32524:	mov	w3, #0x1                   	// #1
   32528:	bl	c1b0 <mpfr_mul@plt>
   3252c:	sub	x0, x29, #0x28
   32530:	sub	x1, x29, #0x28
   32534:	mov	w3, #0x1                   	// #1
   32538:	mov	x2, x21
   3253c:	bl	c1b0 <mpfr_mul@plt>
   32540:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32544:	ldr	x1, [x0, #2800]
   32548:	add	x0, x0, #0xaf0
   3254c:	blr	x1
   32550:	mov	x22, x0
   32554:	str	wzr, [x26, x0]
   32558:	sub	x0, x29, #0x28
   3255c:	sub	x1, x29, #0x28
   32560:	mov	w2, #0x1                   	// #1
   32564:	mov	w3, #0x1                   	// #1
   32568:	bl	c780 <mpfr_mul_2ui@plt>
   3256c:	ldr	w22, [x26, x22]
   32570:	ldr	x1, [sp, #56]
   32574:	ldur	x20, [x29, #-24]
   32578:	cbz	x1, 32584 <mpfr_gamma@@Base+0x5d4>
   3257c:	ldr	x0, [sp, #64]
   32580:	bl	d120 <mpfr_free_func@plt>
   32584:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32588:	ldr	x1, [x0, #2800]
   3258c:	add	x0, x0, #0xaf0
   32590:	blr	x1
   32594:	str	w27, [x26, x0]
   32598:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3259c:	ldr	x1, [x0, #2736]
   325a0:	add	x0, x0, #0xab0
   325a4:	blr	x1
   325a8:	str	x28, [x26, x0]
   325ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   325b0:	ldr	x1, [x0, #2768]
   325b4:	add	x0, x0, #0xad0
   325b8:	blr	x1
   325bc:	str	x25, [x26, x0]
   325c0:	tbnz	w22, #1, 325e4 <mpfr_gamma@@Base+0x634>
   325c4:	cmp	x20, x25
   325c8:	b.gt	325e4 <mpfr_gamma@@Base+0x634>
   325cc:	mov	x0, x19
   325d0:	mov	x1, x21
   325d4:	mov	w2, w23
   325d8:	bl	32eb4 <mpfr_gamma@@Base+0xf04>
   325dc:	mov	w23, w0
   325e0:	b	32454 <mpfr_gamma@@Base+0x4a4>
   325e4:	mov	w2, #0x1                   	// #1
   325e8:	mov	x0, x19
   325ec:	mov	w1, w23
   325f0:	bl	c3a0 <mpfr_overflow@plt>
   325f4:	mov	w23, w0
   325f8:	b	32454 <mpfr_gamma@@Base+0x4a4>
   325fc:	mov	x0, x19
   32600:	mov	x1, x22
   32604:	mov	w2, w23
   32608:	bl	cbb0 <mpfr_fac_ui@plt>
   3260c:	mov	w23, w0
   32610:	mov	w8, wzr
   32614:	str	w23, [sp, #12]
   32618:	cbnz	w8, 321e8 <mpfr_gamma@@Base+0x238>
   3261c:	b	32454 <mpfr_gamma@@Base+0x4a4>
   32620:	ldur	w8, [x29, #-96]
   32624:	neg	w23, w8
   32628:	sub	x0, x29, #0x68
   3262c:	sub	x1, x29, #0x68
   32630:	mov	w3, #0x1                   	// #1
   32634:	mov	w2, wzr
   32638:	bl	cb70 <mpfr_set4@plt>
   3263c:	sub	x0, x29, #0x88
   32640:	sub	x1, x29, #0x88
   32644:	mov	w2, #0x3                   	// #3
   32648:	mov	w3, #0x2                   	// #2
   3264c:	bl	bea0 <mpfr_mul_ui@plt>
   32650:	sub	x0, x29, #0x88
   32654:	sub	x1, x29, #0x88
   32658:	mov	w2, #0x1                   	// #1
   3265c:	mov	w3, #0x2                   	// #2
   32660:	bl	c710 <mpfr_add_ui@plt>
   32664:	ldur	x2, [x29, #-104]
   32668:	sub	x0, x29, #0x88
   3266c:	sub	x1, x29, #0x88
   32670:	mov	w3, #0x2                   	// #2
   32674:	bl	cde0 <mpfr_div_2ui@plt>
   32678:	sub	x0, x29, #0x88
   3267c:	sub	x1, x29, #0x68
   32680:	mov	w2, #0x1                   	// #1
   32684:	bl	ce90 <mpfr_cmp3@plt>
   32688:	tbnz	w0, #31, 326ac <mpfr_gamma@@Base+0x6fc>
   3268c:	sub	x0, x29, #0x28
   32690:	bl	c4f0 <mpfr_clear@plt>
   32694:	sub	x0, x29, #0x68
   32698:	bl	c4f0 <mpfr_clear@plt>
   3269c:	sub	x0, x29, #0x88
   326a0:	bl	c4f0 <mpfr_clear@plt>
   326a4:	mov	w20, #0x1                   	// #1
   326a8:	b	3278c <mpfr_gamma@@Base+0x7dc>
   326ac:	sub	x0, x29, #0x68
   326b0:	sub	x1, x29, #0x68
   326b4:	sub	x2, x29, #0x88
   326b8:	mov	w3, #0x1                   	// #1
   326bc:	mov	w20, #0x1                   	// #1
   326c0:	bl	bfd0 <mpfr_sub@plt>
   326c4:	sub	x0, x29, #0x68
   326c8:	sub	x2, x29, #0x68
   326cc:	mov	w1, #0xc                   	// #12
   326d0:	mov	w3, #0x2                   	// #2
   326d4:	bl	c7b0 <mpfr_ui_div@plt>
   326d8:	sub	x0, x29, #0x68
   326dc:	sub	x1, x29, #0x68
   326e0:	mov	w2, #0x2                   	// #2
   326e4:	bl	c670 <mpfr_log2@plt>
   326e8:	sub	x0, x29, #0x28
   326ec:	sub	x1, x29, #0x68
   326f0:	sub	x2, x29, #0x28
   326f4:	mov	w3, #0x2                   	// #2
   326f8:	bl	c640 <mpfr_add@plt>
   326fc:	sub	x1, x28, #0x2
   32700:	sub	x0, x29, #0x28
   32704:	mov	x2, xzr
   32708:	bl	c890 <mpfr_cmp_si_2exp@plt>
   3270c:	mov	w24, w0
   32710:	sub	x0, x29, #0x28
   32714:	bl	c4f0 <mpfr_clear@plt>
   32718:	sub	x0, x29, #0x68
   3271c:	bl	c4f0 <mpfr_clear@plt>
   32720:	sub	x0, x29, #0x88
   32724:	bl	c4f0 <mpfr_clear@plt>
   32728:	cmp	w24, #0x0
   3272c:	b.gt	3278c <mpfr_gamma@@Base+0x7dc>
   32730:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32734:	ldr	x1, [x0, #2800]
   32738:	add	x0, x0, #0xaf0
   3273c:	blr	x1
   32740:	str	w27, [x26, x0]
   32744:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32748:	ldr	x1, [x0, #2736]
   3274c:	add	x0, x0, #0xab0
   32750:	blr	x1
   32754:	str	x28, [x26, x0]
   32758:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3275c:	ldr	x1, [x0, #2768]
   32760:	add	x0, x0, #0xad0
   32764:	blr	x1
   32768:	ldr	w8, [sp, #28]
   3276c:	str	x25, [x26, x0]
   32770:	mov	x0, x19
   32774:	mov	w2, w23
   32778:	cmp	w8, #0x0
   3277c:	csinc	w1, w8, wzr, ne  // ne = any
   32780:	bl	c880 <mpfr_underflow@plt>
   32784:	str	w0, [sp, #12]
   32788:	mov	w20, wzr
   3278c:	ldr	w23, [sp, #12]
   32790:	cbz	w20, 32454 <mpfr_gamma@@Base+0x4a4>
   32794:	ldr	x20, [x19]
   32798:	mov	x0, x21
   3279c:	bl	33c54 <mpfr_gamma@@Base+0x1ca4>
   327a0:	cmp	x20, x0
   327a4:	csel	x20, x0, x20, lt  // lt = tstop
   327a8:	mov	x0, x21
   327ac:	bl	33c34 <mpfr_gamma@@Base+0x1c84>
   327b0:	cmp	x20, x0
   327b4:	csel	x20, x0, x20, lt  // lt = tstop
   327b8:	subs	x22, x20, #0x1
   327bc:	b.eq	32c84 <mpfr_gamma@@Base+0xcd4>  // b.none
   327c0:	b.le	32c94 <mpfr_gamma@@Base+0xce4>
   327c4:	clz	x8, x22
   327c8:	mov	w9, #0x40                  	// #64
   327cc:	sub	x8, x9, x8
   327d0:	add	x20, x8, x20
   327d4:	add	x28, x20, #0x14
   327d8:	cmp	x28, #0x1
   327dc:	b.eq	32c8c <mpfr_gamma@@Base+0xcdc>  // b.none
   327e0:	cmn	x20, #0x13
   327e4:	b.le	32cb0 <mpfr_gamma@@Base+0xd00>
   327e8:	add	x8, x20, #0x13
   327ec:	clz	x8, x8
   327f0:	mov	w9, #0x40                  	// #64
   327f4:	sub	x8, x9, x8
   327f8:	mov	x9, #0x2                   	// #2
   327fc:	movk	x9, #0x8000, lsl #48
   32800:	add	x8, x8, x28
   32804:	sub	x9, x9, #0x117
   32808:	cmp	x8, x9
   3280c:	b.gt	32cdc <mpfr_gamma@@Base+0xd2c>
   32810:	add	x9, x8, #0x13
   32814:	add	x10, x8, #0x52
   32818:	cmp	x9, #0x0
   3281c:	csel	x9, x10, x9, lt  // lt = tstop
   32820:	asr	x9, x9, #6
   32824:	add	x20, x8, #0x14
   32828:	cmp	x8, #0xed
   3282c:	add	x22, x9, #0x1
   32830:	b.lt	32848 <mpfr_gamma@@Base+0x898>  // b.tstop
   32834:	lsl	x0, x22, #5
   32838:	str	x0, [sp, #56]
   3283c:	bl	d1f0 <mpfr_allocate_func@plt>
   32840:	str	x0, [sp, #64]
   32844:	b	32854 <mpfr_gamma@@Base+0x8a4>
   32848:	add	x8, sp, #0x38
   3284c:	add	x8, x8, #0x10
   32850:	stp	xzr, x8, [sp, #56]
   32854:	ldr	x8, [sp, #64]
   32858:	mov	w24, #0x18                  	// #24
   3285c:	mov	w25, #0x1                   	// #1
   32860:	sub	x0, x29, #0x98
   32864:	stur	x8, [x29, #-16]
   32868:	add	x9, x8, x22, lsl #3
   3286c:	add	x10, x8, x22, lsl #4
   32870:	madd	x8, x22, x24, x8
   32874:	stur	x20, [x29, #-136]
   32878:	stur	w25, [x29, #-32]
   3287c:	stur	w25, [x29, #-96]
   32880:	stur	w25, [x29, #-128]
   32884:	stp	x9, x20, [x29, #-80]
   32888:	stp	x10, x20, [x29, #-112]
   3288c:	stp	x8, x20, [x29, #-48]
   32890:	stur	w25, [x29, #-64]
   32894:	bl	c400 <mpfr_mpz_init@plt>
   32898:	ldr	w8, [sp, #28]
   3289c:	mov	w23, wzr
   328a0:	mov	w27, #0x40                  	// #64
   328a4:	cmp	w8, #0x0
   328a8:	mov	x8, #0x2                   	// #2
   328ac:	movk	x8, #0x8000, lsl #48
   328b0:	sub	x22, x8, #0x103
   328b4:	cset	w8, eq  // eq = none
   328b8:	str	x8, [sp, #16]
   328bc:	b	328ec <mpfr_gamma@@Base+0x93c>
   328c0:	ldr	w5, [sp, #28]
   328c4:	add	x2, sp, #0x20
   328c8:	sub	x3, x29, #0x68
   328cc:	sub	x4, x29, #0x88
   328d0:	mov	x0, x19
   328d4:	mov	x1, x21
   328d8:	bl	33c8c <mpfr_gamma@@Base+0x1cdc>
   328dc:	mov	w23, w0
   328e0:	cbz	w0, 32ab0 <mpfr_gamma@@Base+0xb00>
   328e4:	mov	w8, #0x1a                  	// #26
   328e8:	cbnz	w8, 32afc <mpfr_gamma@@Base+0xb4c>
   328ec:	cmp	x28, x22
   328f0:	b.gt	32cdc <mpfr_gamma@@Base+0xd2c>
   328f4:	sub	x8, x28, #0x1
   328f8:	add	x9, x28, #0x3e
   328fc:	cmp	x8, #0x0
   32900:	ldr	x1, [sp, #56]
   32904:	csel	x8, x9, x8, lt  // lt = tstop
   32908:	asr	x8, x8, #6
   3290c:	add	x20, x8, #0x1
   32910:	lsl	x2, x20, #5
   32914:	str	x2, [sp, #56]
   32918:	cbz	x1, 32928 <mpfr_gamma@@Base+0x978>
   3291c:	ldr	x0, [sp, #64]
   32920:	bl	c660 <mpfr_reallocate_func@plt>
   32924:	b	32930 <mpfr_gamma@@Base+0x980>
   32928:	mov	x0, x2
   3292c:	bl	d1f0 <mpfr_allocate_func@plt>
   32930:	mov	x8, x0
   32934:	str	x0, [sp, #64]
   32938:	stur	x8, [x29, #-16]
   3293c:	add	x9, x8, x20, lsl #3
   32940:	add	x10, x8, x20, lsl #4
   32944:	madd	x8, x20, x24, x8
   32948:	sub	x0, x29, #0x28
   3294c:	mov	w1, #0x2                   	// #2
   32950:	mov	x2, x21
   32954:	mov	w3, wzr
   32958:	stp	x8, x28, [x29, #-48]
   3295c:	stur	w25, [x29, #-32]
   32960:	stp	x10, x28, [x29, #-112]
   32964:	stur	w25, [x29, #-96]
   32968:	stur	x28, [x29, #-136]
   3296c:	stur	w25, [x29, #-128]
   32970:	stp	x9, x28, [x29, #-80]
   32974:	stur	w25, [x29, #-64]
   32978:	bl	cf30 <mpfr_ui_sub@plt>
   3297c:	sub	x0, x29, #0x68
   32980:	sub	x1, x29, #0x28
   32984:	mov	w2, wzr
   32988:	bl	cc90 <mpfr_gamma@plt>
   3298c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32990:	ldr	x1, [x0, #2848]
   32994:	add	x0, x0, #0xb20
   32998:	blr	x1
   3299c:	add	x1, x26, x0
   329a0:	sub	x0, x29, #0x88
   329a4:	mov	w2, wzr
   329a8:	bl	c840 <mpfr_cache@plt>
   329ac:	sub	x0, x29, #0x48
   329b0:	sub	x1, x29, #0x88
   329b4:	sub	x2, x29, #0x28
   329b8:	mov	w3, wzr
   329bc:	bl	c1b0 <mpfr_mul@plt>
   329c0:	ldur	x20, [x29, #-56]
   329c4:	sub	x0, x29, #0x48
   329c8:	sub	x1, x29, #0x48
   329cc:	mov	w2, wzr
   329d0:	bl	c920 <mpfr_sin@plt>
   329d4:	ldur	x8, [x29, #-88]
   329d8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   329dc:	cmp	x8, x9
   329e0:	b.eq	328c0 <mpfr_gamma@@Base+0x910>  // b.none
   329e4:	ldur	x24, [x29, #-56]
   329e8:	sub	x0, x29, #0x28
   329ec:	mov	w2, #0x1                   	// #1
   329f0:	mov	x1, x21
   329f4:	mov	w3, wzr
   329f8:	bl	ca00 <mpfr_sub_ui@plt>
   329fc:	sub	x0, x29, #0x28
   32a00:	sub	x1, x29, #0x88
   32a04:	sub	x2, x29, #0x28
   32a08:	mov	w3, wzr
   32a0c:	bl	c1b0 <mpfr_mul@plt>
   32a10:	sub	x0, x29, #0x48
   32a14:	sub	x1, x29, #0x48
   32a18:	sub	x2, x29, #0x68
   32a1c:	mov	w3, wzr
   32a20:	bl	c1b0 <mpfr_mul@plt>
   32a24:	sub	x0, x29, #0x48
   32a28:	sub	x1, x29, #0x28
   32a2c:	sub	x2, x29, #0x48
   32a30:	mov	w3, wzr
   32a34:	bl	caf0 <mpfr_div@plt>
   32a38:	ldur	x8, [x29, #-56]
   32a3c:	mov	x9, #0x2                   	// #2
   32a40:	movk	x9, #0x8000, lsl #48
   32a44:	add	x9, x9, #0x2
   32a48:	cmp	x8, x9
   32a4c:	b.lt	32aac <mpfr_gamma@@Base+0xafc>  // b.tstop
   32a50:	ldur	x9, [x29, #-72]
   32a54:	sub	x8, x20, x24
   32a58:	add	x8, x8, #0x1
   32a5c:	add	x10, x8, #0x4
   32a60:	cmp	x8, #0x3
   32a64:	mov	w8, #0x6                   	// #6
   32a68:	csel	x8, x8, x10, lt  // lt = tstop
   32a6c:	sub	x10, x9, #0x1
   32a70:	add	x9, x9, #0x3e
   32a74:	cmp	x10, #0x0
   32a78:	csel	x9, x9, x10, lt  // lt = tstop
   32a7c:	sub	x2, x28, x8
   32a80:	asr	x8, x9, #6
   32a84:	ldr	x10, [x19]
   32a88:	add	x1, x8, #0x1
   32a8c:	ldr	x8, [sp, #16]
   32a90:	ldur	x0, [x29, #-48]
   32a94:	add	x3, x10, x8
   32a98:	bl	c830 <mpfr_round_p@plt>
   32a9c:	cbz	w0, 32aac <mpfr_gamma@@Base+0xafc>
   32aa0:	mov	w8, #0x16                  	// #22
   32aa4:	mov	w24, #0x18                  	// #24
   32aa8:	b	328e8 <mpfr_gamma@@Base+0x938>
   32aac:	mov	w24, #0x18                  	// #24
   32ab0:	mov	x8, #0x2                   	// #2
   32ab4:	movk	x8, #0x8000, lsl #48
   32ab8:	sub	x8, x8, x28
   32abc:	sub	x8, x8, #0x103
   32ac0:	cmp	x27, x8
   32ac4:	b.gt	32ae0 <mpfr_gamma@@Base+0xb30>
   32ac8:	add	x28, x28, x27
   32acc:	cmp	x28, #0x0
   32ad0:	cinc	x9, x28, lt  // lt = tstop
   32ad4:	mov	w8, wzr
   32ad8:	asr	x27, x9, #1
   32adc:	b	328e8 <mpfr_gamma@@Base+0x938>
   32ae0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   32ae4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   32ae8:	mov	w1, #0x1d2                 	// #466
   32aec:	add	x0, x0, #0x44f
   32af0:	add	x2, x2, #0x46a
   32af4:	bl	d030 <mpfr_assert_fail@plt>
   32af8:	b	32ac8 <mpfr_gamma@@Base+0xb18>
   32afc:	cmp	w8, #0x1a
   32b00:	b.eq	32b0c <mpfr_gamma@@Base+0xb5c>  // b.none
   32b04:	cmp	w8, #0x16
   32b08:	b.ne	32bbc <mpfr_gamma@@Base+0xc0c>  // b.any
   32b0c:	cbnz	w23, 32b28 <mpfr_gamma@@Base+0xb78>
   32b10:	ldur	w3, [x29, #-64]
   32b14:	ldr	w2, [sp, #28]
   32b18:	sub	x1, x29, #0x48
   32b1c:	mov	x0, x19
   32b20:	bl	cb70 <mpfr_set4@plt>
   32b24:	mov	w23, w0
   32b28:	ldr	x1, [sp, #56]
   32b2c:	cbz	x1, 32b38 <mpfr_gamma@@Base+0xb88>
   32b30:	ldr	x0, [sp, #64]
   32b34:	bl	d120 <mpfr_free_func@plt>
   32b38:	sub	x0, x29, #0x98
   32b3c:	bl	c610 <mpfr_mpz_clear@plt>
   32b40:	ldr	w8, [sp, #32]
   32b44:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32b48:	ldr	x1, [x0, #2800]
   32b4c:	add	x0, x0, #0xaf0
   32b50:	blr	x1
   32b54:	ldr	x9, [sp, #40]
   32b58:	str	w8, [x26, x0]
   32b5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32b60:	ldr	x1, [x0, #2736]
   32b64:	add	x0, x0, #0xab0
   32b68:	blr	x1
   32b6c:	ldr	x11, [sp, #48]
   32b70:	str	x9, [x26, x0]
   32b74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32b78:	ldr	x1, [x0, #2768]
   32b7c:	add	x0, x0, #0xad0
   32b80:	blr	x1
   32b84:	str	x11, [x26, x0]
   32b88:	ldr	x10, [x19, #16]
   32b8c:	cmp	x10, x11
   32b90:	b.gt	32ccc <mpfr_gamma@@Base+0xd1c>
   32b94:	cmp	x10, x9
   32b98:	b.lt	32ccc <mpfr_gamma@@Base+0xd1c>  // b.tstop
   32b9c:	cbz	w23, 32454 <mpfr_gamma@@Base+0x4a4>
   32ba0:	orr	w8, w8, #0x8
   32ba4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32ba8:	ldr	x1, [x0, #2800]
   32bac:	add	x0, x0, #0xaf0
   32bb0:	blr	x1
   32bb4:	str	w8, [x26, x0]
   32bb8:	b	32454 <mpfr_gamma@@Base+0x4a4>
   32bbc:	ldr	w23, [sp, #12]
   32bc0:	b	32454 <mpfr_gamma@@Base+0x4a4>
   32bc4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   32bc8:	cmp	x9, x8
   32bcc:	b.eq	32c30 <mpfr_gamma@@Base+0xc80>  // b.none
   32bd0:	mov	x8, #0x2                   	// #2
   32bd4:	movk	x8, #0x8000, lsl #48
   32bd8:	cmp	x9, x8
   32bdc:	b.eq	32c50 <mpfr_gamma@@Base+0xca0>  // b.none
   32be0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   32be4:	str	x8, [x19, #16]
   32be8:	ldr	w8, [x21, #8]
   32bec:	str	w8, [x19, #8]
   32bf0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32bf4:	ldr	x1, [x0, #2800]
   32bf8:	add	x0, x0, #0xaf0
   32bfc:	blr	x1
   32c00:	mrs	x8, tpidr_el0
   32c04:	ldr	w9, [x8, x0]
   32c08:	mov	w23, wzr
   32c0c:	orr	w9, w9, #0x20
   32c10:	str	w9, [x8, x0]
   32c14:	b	32454 <mpfr_gamma@@Base+0x4a4>
   32c18:	mov	x0, x19
   32c1c:	mov	w1, w23
   32c20:	mov	w2, w21
   32c24:	bl	d020 <mpfr_check_range@plt>
   32c28:	mov	w23, w0
   32c2c:	b	32454 <mpfr_gamma@@Base+0x4a4>
   32c30:	ldr	w8, [x21, #8]
   32c34:	tbnz	w8, #31, 32c50 <mpfr_gamma@@Base+0xca0>
   32c38:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   32c3c:	mov	w9, #0x1                   	// #1
   32c40:	mov	w23, wzr
   32c44:	str	x8, [x19, #16]
   32c48:	str	w9, [x19, #8]
   32c4c:	b	32454 <mpfr_gamma@@Base+0x4a4>
   32c50:	mov	x8, #0x2                   	// #2
   32c54:	movk	x8, #0x8000, lsl #48
   32c58:	str	x8, [x19, #16]
   32c5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32c60:	ldr	x1, [x0, #2800]
   32c64:	add	x0, x0, #0xaf0
   32c68:	blr	x1
   32c6c:	mrs	x8, tpidr_el0
   32c70:	ldr	w9, [x8, x0]
   32c74:	mov	w23, wzr
   32c78:	orr	w9, w9, #0x4
   32c7c:	str	w9, [x8, x0]
   32c80:	b	32454 <mpfr_gamma@@Base+0x4a4>
   32c84:	mov	x8, xzr
   32c88:	b	327d0 <mpfr_gamma@@Base+0x820>
   32c8c:	mov	x8, xzr
   32c90:	b	327f8 <mpfr_gamma@@Base+0x848>
   32c94:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   32c98:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   32c9c:	add	x0, x0, #0x44f
   32ca0:	add	x2, x2, #0x87e
   32ca4:	mov	w1, #0x18f                 	// #399
   32ca8:	bl	d030 <mpfr_assert_fail@plt>
   32cac:	b	327c4 <mpfr_gamma@@Base+0x814>
   32cb0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   32cb4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   32cb8:	add	x0, x0, #0x44f
   32cbc:	add	x2, x2, #0x87e
   32cc0:	mov	w1, #0x192                 	// #402
   32cc4:	bl	d030 <mpfr_assert_fail@plt>
   32cc8:	b	327e8 <mpfr_gamma@@Base+0x838>
   32ccc:	ldr	w2, [sp, #28]
   32cd0:	mov	x0, x19
   32cd4:	mov	w1, w23
   32cd8:	b	32c24 <mpfr_gamma@@Base+0xc74>
   32cdc:	bl	cdd0 <mpfr_abort_prec_max@plt>
   32ce0:	sub	sp, sp, #0x80
   32ce4:	stp	x29, x30, [sp, #64]
   32ce8:	stp	x24, x23, [sp, #80]
   32cec:	stp	x22, x21, [sp, #96]
   32cf0:	stp	x20, x19, [sp, #112]
   32cf4:	add	x29, sp, #0x40
   32cf8:	mov	x19, x0
   32cfc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32d00:	ldr	x1, [x0, #2800]
   32d04:	add	x0, x0, #0xaf0
   32d08:	blr	x1
   32d0c:	mrs	x21, tpidr_el0
   32d10:	ldr	w22, [x21, x0]
   32d14:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32d18:	ldr	x1, [x0, #2736]
   32d1c:	add	x0, x0, #0xab0
   32d20:	blr	x1
   32d24:	ldr	x23, [x21, x0]
   32d28:	mov	x8, x0
   32d2c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32d30:	ldr	x1, [x0, #2768]
   32d34:	add	x0, x0, #0xad0
   32d38:	blr	x1
   32d3c:	ldr	x24, [x21, x0]
   32d40:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   32d44:	str	x9, [x21, x8]
   32d48:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   32d4c:	str	x8, [x21, x0]
   32d50:	add	x0, sp, #0x20
   32d54:	mov	w1, #0x26                  	// #38
   32d58:	bl	cf60 <mpfr_init2@plt>
   32d5c:	mov	x0, sp
   32d60:	mov	w1, #0x26                  	// #38
   32d64:	bl	cf60 <mpfr_init2@plt>
   32d68:	add	x0, sp, #0x20
   32d6c:	mov	w3, #0x1                   	// #1
   32d70:	mov	x1, x19
   32d74:	mov	x2, xzr
   32d78:	bl	cac0 <mpfr_set_ui_2exp@plt>
   32d7c:	adrp	x1, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   32d80:	add	x1, x1, #0x88d
   32d84:	mov	x0, sp
   32d88:	bl	c800 <mpfr_set_str_binary@plt>
   32d8c:	add	x0, sp, #0x20
   32d90:	add	x1, sp, #0x20
   32d94:	mov	x2, sp
   32d98:	mov	w3, #0x1                   	// #1
   32d9c:	bl	caf0 <mpfr_div@plt>
   32da0:	add	x0, sp, #0x20
   32da4:	add	x1, sp, #0x20
   32da8:	mov	w3, #0x1                   	// #1
   32dac:	mov	x2, x19
   32db0:	bl	c3d0 <mpfr_pow_ui@plt>
   32db4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32db8:	ldr	x1, [x0, #2848]
   32dbc:	add	x0, x0, #0xb20
   32dc0:	blr	x1
   32dc4:	add	x1, x21, x0
   32dc8:	mov	x0, sp
   32dcc:	mov	w2, #0x1                   	// #1
   32dd0:	bl	c840 <mpfr_cache@plt>
   32dd4:	lsl	x2, x19, #1
   32dd8:	mov	x0, sp
   32ddc:	mov	x1, sp
   32de0:	mov	w3, #0x1                   	// #1
   32de4:	bl	bea0 <mpfr_mul_ui@plt>
   32de8:	mov	x0, sp
   32dec:	mov	x1, sp
   32df0:	mov	w2, #0x1                   	// #1
   32df4:	bl	ce20 <mpfr_sqrt@plt>
   32df8:	add	x0, sp, #0x20
   32dfc:	add	x1, sp, #0x20
   32e00:	mov	x2, sp
   32e04:	mov	w3, #0x1                   	// #1
   32e08:	bl	c1b0 <mpfr_mul@plt>
   32e0c:	add	x0, sp, #0x20
   32e10:	add	x1, sp, #0x20
   32e14:	mov	w2, #0x1                   	// #1
   32e18:	bl	c670 <mpfr_log2@plt>
   32e1c:	add	x0, sp, #0x20
   32e20:	mov	w1, #0x2                   	// #2
   32e24:	bl	c100 <mpfr_get_ui@plt>
   32e28:	cmp	x19, #0x2
   32e2c:	mov	x20, x0
   32e30:	b.cc	32e4c <mpfr_gamma@@Base+0xe9c>  // b.lo, b.ul, b.last
   32e34:	mov	w8, #0x2                   	// #2
   32e38:	udiv	x9, x19, x8
   32e3c:	lsl	x8, x8, #1
   32e40:	cmp	x8, x19
   32e44:	sub	x20, x20, x9
   32e48:	b.ls	32e38 <mpfr_gamma@@Base+0xe88>  // b.plast
   32e4c:	add	x0, sp, #0x20
   32e50:	bl	c4f0 <mpfr_clear@plt>
   32e54:	mov	x0, sp
   32e58:	bl	c4f0 <mpfr_clear@plt>
   32e5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32e60:	ldr	x1, [x0, #2800]
   32e64:	add	x0, x0, #0xaf0
   32e68:	blr	x1
   32e6c:	str	w22, [x21, x0]
   32e70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32e74:	ldr	x1, [x0, #2736]
   32e78:	add	x0, x0, #0xab0
   32e7c:	blr	x1
   32e80:	str	x23, [x21, x0]
   32e84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32e88:	ldr	x1, [x0, #2768]
   32e8c:	add	x0, x0, #0xad0
   32e90:	blr	x1
   32e94:	str	x24, [x21, x0]
   32e98:	mov	x0, x20
   32e9c:	ldp	x20, x19, [sp, #112]
   32ea0:	ldp	x22, x21, [sp, #96]
   32ea4:	ldp	x24, x23, [sp, #80]
   32ea8:	ldp	x29, x30, [sp, #64]
   32eac:	add	sp, sp, #0x80
   32eb0:	ret
   32eb4:	sub	sp, sp, #0x1b0
   32eb8:	stp	x24, x23, [sp, #384]
   32ebc:	mov	x24, x1
   32ec0:	stp	x20, x19, [sp, #416]
   32ec4:	str	w2, [sp, #68]
   32ec8:	mov	x20, x0
   32ecc:	mov	w1, #0x1                   	// #1
   32ed0:	mov	x0, x24
   32ed4:	mov	x2, xzr
   32ed8:	str	d8, [sp, #320]
   32edc:	stp	x29, x30, [sp, #336]
   32ee0:	stp	x28, x27, [sp, #352]
   32ee4:	stp	x26, x25, [sp, #368]
   32ee8:	stp	x22, x21, [sp, #400]
   32eec:	add	x29, sp, #0x140
   32ef0:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   32ef4:	mov	w19, w0
   32ef8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32efc:	ldr	x1, [x0, #2800]
   32f00:	add	x0, x0, #0xaf0
   32f04:	blr	x1
   32f08:	mrs	x12, tpidr_el0
   32f0c:	ldr	w8, [x12, x0]
   32f10:	str	w8, [sp, #128]
   32f14:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32f18:	ldr	x1, [x0, #2736]
   32f1c:	add	x0, x0, #0xab0
   32f20:	blr	x1
   32f24:	ldr	x9, [x12, x0]
   32f28:	mov	x8, x0
   32f2c:	str	x9, [sp, #136]
   32f30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   32f34:	ldr	x1, [x0, #2768]
   32f38:	add	x0, x0, #0xad0
   32f3c:	blr	x1
   32f40:	ldr	x9, [x12, x0]
   32f44:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   32f48:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   32f4c:	str	x10, [x12, x8]
   32f50:	str	x9, [sp, #144]
   32f54:	str	x11, [x12, x0]
   32f58:	ldr	x23, [x20]
   32f5c:	sub	x0, x29, #0x28
   32f60:	mov	w1, #0x1                   	// #1
   32f64:	str	x12, [sp, #112]
   32f68:	str	x20, [sp, #56]
   32f6c:	bl	cf60 <mpfr_init2@plt>
   32f70:	sub	x0, x29, #0x48
   32f74:	mov	w1, #0x1                   	// #1
   32f78:	bl	cf60 <mpfr_init2@plt>
   32f7c:	sub	x0, x29, #0x68
   32f80:	mov	w1, #0x1                   	// #1
   32f84:	bl	cf60 <mpfr_init2@plt>
   32f88:	sub	x0, x29, #0x88
   32f8c:	mov	w1, #0x1                   	// #1
   32f90:	bl	cf60 <mpfr_init2@plt>
   32f94:	add	x0, sp, #0x98
   32f98:	mov	w1, #0x1                   	// #1
   32f9c:	bl	cf60 <mpfr_init2@plt>
   32fa0:	str	x24, [sp, #120]
   32fa4:	tbnz	w19, #31, 337c8 <mpfr_gamma@@Base+0x1818>
   32fa8:	subs	x19, x23, #0x1
   32fac:	b.eq	33ba4 <mpfr_gamma@@Base+0x1bf4>  // b.none
   32fb0:	b.le	33bac <mpfr_gamma@@Base+0x1bfc>
   32fb4:	clz	x8, x19
   32fb8:	mov	w9, #0x40                  	// #64
   32fbc:	sub	x8, x9, x8
   32fc0:	add	x19, x8, x23
   32fc4:	subs	x20, x19, #0x1
   32fc8:	b.eq	33bc8 <mpfr_gamma@@Base+0x1c18>  // b.none
   32fcc:	b.le	33bd0 <mpfr_gamma@@Base+0x1c20>
   32fd0:	clz	x8, x20
   32fd4:	mov	w9, #0x4d                  	// #77
   32fd8:	sub	x8, x9, x8
   32fdc:	add	x21, x8, x19
   32fe0:	ldr	w8, [sp, #68]
   32fe4:	mov	w19, #0x40                  	// #64
   32fe8:	fmov	d8, #2.500000000000000000e+00
   32fec:	mov	w22, #0x80000000            	// #-2147483648
   32ff0:	cmp	w8, #0x0
   32ff4:	cinc	x8, x23, eq  // eq = none
   32ff8:	str	x8, [sp]
   32ffc:	sub	x0, x29, #0x28
   33000:	mov	w1, #0x35                  	// #53
   33004:	bl	c330 <mpfr_set_prec@plt>
   33008:	sub	x0, x29, #0x28
   3300c:	mov	x1, x21
   33010:	bl	33f24 <mpfr_gamma@@Base+0x1f74>
   33014:	sub	x0, x29, #0x28
   33018:	mov	w1, #0x4                   	// #4
   3301c:	mov	x2, #0xfffffffffffffffc    	// #-4
   33020:	mov	w3, #0x2                   	// #2
   33024:	bl	cac0 <mpfr_set_ui_2exp@plt>
   33028:	sub	x0, x29, #0x28
   3302c:	sub	x1, x29, #0x28
   33030:	mov	w3, #0x2                   	// #2
   33034:	mov	x2, x21
   33038:	bl	bea0 <mpfr_mul_ui@plt>
   3303c:	sub	x1, x29, #0x28
   33040:	mov	w2, #0x1                   	// #1
   33044:	mov	x0, x24
   33048:	bl	ce90 <mpfr_cmp3@plt>
   3304c:	tbnz	w0, #31, 33058 <mpfr_gamma@@Base+0x10a8>
   33050:	mov	w23, #0x3                   	// #3
   33054:	b	33084 <mpfr_gamma@@Base+0x10d4>
   33058:	sub	x0, x29, #0x28
   3305c:	sub	x1, x29, #0x28
   33060:	mov	w3, #0x2                   	// #2
   33064:	mov	x2, x24
   33068:	bl	bfd0 <mpfr_sub@plt>
   3306c:	sub	x0, x29, #0x28
   33070:	mov	w1, #0x2                   	// #2
   33074:	bl	c100 <mpfr_get_ui@plt>
   33078:	cmp	x0, #0x3
   3307c:	mov	w8, #0x3                   	// #3
   33080:	csel	x23, x0, x8, hi  // hi = pmore
   33084:	sub	x0, x29, #0x28
   33088:	mov	x1, x21
   3308c:	str	x19, [sp, #8]
   33090:	bl	c330 <mpfr_set_prec@plt>
   33094:	sub	x0, x29, #0x48
   33098:	mov	x1, x21
   3309c:	bl	c330 <mpfr_set_prec@plt>
   330a0:	sub	x0, x29, #0x68
   330a4:	mov	x1, x21
   330a8:	bl	c330 <mpfr_set_prec@plt>
   330ac:	sub	x0, x29, #0x88
   330b0:	mov	x1, x21
   330b4:	bl	c330 <mpfr_set_prec@plt>
   330b8:	add	x0, sp, #0x98
   330bc:	mov	x1, x21
   330c0:	bl	c330 <mpfr_set_prec@plt>
   330c4:	add	x0, sp, #0x98
   330c8:	mov	x1, x24
   330cc:	mov	x2, x23
   330d0:	mov	w3, wzr
   330d4:	bl	c710 <mpfr_add_ui@plt>
   330d8:	sub	x0, x29, #0x28
   330dc:	add	x1, sp, #0x98
   330e0:	mov	w2, wzr
   330e4:	bl	c520 <mpfr_log@plt>
   330e8:	sub	x0, x29, #0x48
   330ec:	add	x1, sp, #0x98
   330f0:	mov	w2, #0x1                   	// #1
   330f4:	mov	w3, wzr
   330f8:	bl	c780 <mpfr_mul_2ui@plt>
   330fc:	sub	x0, x29, #0x48
   33100:	sub	x1, x29, #0x48
   33104:	mov	w2, #0x1                   	// #1
   33108:	mov	w3, wzr
   3310c:	bl	ca00 <mpfr_sub_ui@plt>
   33110:	sub	x0, x29, #0x28
   33114:	sub	x1, x29, #0x28
   33118:	sub	x2, x29, #0x48
   3311c:	mov	w3, wzr
   33120:	bl	c1b0 <mpfr_mul@plt>
   33124:	sub	x0, x29, #0x28
   33128:	sub	x1, x29, #0x28
   3312c:	mov	w2, #0x1                   	// #1
   33130:	mov	w3, wzr
   33134:	bl	cde0 <mpfr_div_2ui@plt>
   33138:	sub	x0, x29, #0x28
   3313c:	sub	x1, x29, #0x28
   33140:	add	x2, sp, #0x98
   33144:	mov	w3, wzr
   33148:	bl	bfd0 <mpfr_sub@plt>
   3314c:	sub	x0, x29, #0x68
   33150:	add	x2, sp, #0x98
   33154:	mov	w1, #0x1                   	// #1
   33158:	mov	w3, wzr
   3315c:	bl	c7b0 <mpfr_ui_div@plt>
   33160:	sub	x0, x29, #0x48
   33164:	sub	x1, x29, #0x68
   33168:	mov	w2, #0xc                   	// #12
   3316c:	mov	w3, wzr
   33170:	bl	d160 <mpfr_div_ui@plt>
   33174:	ldur	w3, [x29, #-64]
   33178:	sub	x0, x29, #0x88
   3317c:	sub	x1, x29, #0x48
   33180:	mov	w2, wzr
   33184:	bl	cb70 <mpfr_set4@plt>
   33188:	sub	x0, x29, #0x28
   3318c:	sub	x1, x29, #0x28
   33190:	sub	x2, x29, #0x88
   33194:	mov	w3, wzr
   33198:	bl	c640 <mpfr_add@plt>
   3319c:	sub	x0, x29, #0x68
   331a0:	sub	x1, x29, #0x68
   331a4:	sub	x2, x29, #0x68
   331a8:	mov	w3, wzr
   331ac:	bl	c1b0 <mpfr_mul@plt>
   331b0:	ldur	x8, [x29, #-120]
   331b4:	ldur	x9, [x29, #-24]
   331b8:	add	x8, x8, x21
   331bc:	cmp	x8, x9
   331c0:	b.ge	33420 <mpfr_gamma@@Base+0x1470>  // b.tcont
   331c4:	mov	w25, #0x2                   	// #2
   331c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   331cc:	ldr	x1, [x0, #2848]
   331d0:	add	x0, x0, #0xb20
   331d4:	blr	x1
   331d8:	ldr	x8, [sp, #112]
   331dc:	mov	w2, wzr
   331e0:	add	x1, x8, x0
   331e4:	sub	x0, x29, #0x88
   331e8:	bl	c840 <mpfr_cache@plt>
   331ec:	sub	x0, x29, #0x88
   331f0:	sub	x1, x29, #0x88
   331f4:	mov	w2, #0x1                   	// #1
   331f8:	mov	w3, wzr
   331fc:	bl	c780 <mpfr_mul_2ui@plt>
   33200:	ldr	w3, [x24, #8]
   33204:	sub	x0, x29, #0x48
   33208:	mov	x1, x24
   3320c:	mov	w2, wzr
   33210:	bl	cb70 <mpfr_set4@plt>
   33214:	mov	w8, #0x2                   	// #2
   33218:	mov	w0, #0x40                  	// #64
   3321c:	mov	w22, #0x20                  	// #32
   33220:	mov	w27, #0x1                   	// #1
   33224:	mov	x9, x8
   33228:	add	x8, x27, #0x2
   3322c:	mul	x8, x8, x8
   33230:	add	x27, x27, #0x1
   33234:	add	x22, x22, #0x10
   33238:	add	x0, x0, #0x20
   3323c:	cmp	x8, x23
   33240:	add	x8, x9, #0x1
   33244:	b.cc	33224 <mpfr_gamma@@Base+0x1274>  // b.lo, b.ul, b.last
   33248:	str	x9, [sp, #88]
   3324c:	str	x0, [sp, #32]
   33250:	bl	d1f0 <mpfr_allocate_func@plt>
   33254:	cmp	x27, #0x2
   33258:	mov	x26, x0
   3325c:	b.cc	33284 <mpfr_gamma@@Base+0x12d4>  // b.lo, b.ul, b.last
   33260:	add	x19, x26, #0x40
   33264:	mov	w20, #0x2                   	// #2
   33268:	mov	x0, x19
   3326c:	mov	x1, x21
   33270:	bl	cf60 <mpfr_init2@plt>
   33274:	add	x20, x20, #0x1
   33278:	cmp	x20, x27
   3327c:	add	x19, x19, #0x20
   33280:	b.ls	33268 <mpfr_gamma@@Base+0x12b8>  // b.plast
   33284:	add	x0, x26, #0x40
   33288:	mov	x1, x24
   3328c:	mov	w2, wzr
   33290:	bl	c8c0 <mpfr_sqr@plt>
   33294:	cmp	x27, #0x3
   33298:	b.cs	33548 <mpfr_gamma@@Base+0x1598>  // b.hs, b.nlast
   3329c:	mov	x0, x22
   332a0:	bl	d1f0 <mpfr_allocate_func@plt>
   332a4:	mov	x28, x0
   332a8:	mov	x19, xzr
   332ac:	mov	x20, x0
   332b0:	mov	x0, x20
   332b4:	bl	c400 <mpfr_mpz_init@plt>
   332b8:	add	x19, x19, #0x1
   332bc:	cmp	x19, x27
   332c0:	add	x20, x20, #0x10
   332c4:	b.ls	332b0 <mpfr_gamma@@Base+0x1300>  // b.plast
   332c8:	add	x8, x27, #0x1
   332cc:	cmp	x8, x23
   332d0:	stp	x26, x22, [sp, #16]
   332d4:	stp	x25, x21, [sp, #40]
   332d8:	b.ls	33598 <mpfr_gamma@@Base+0x15e8>  // b.plast
   332dc:	mov	w25, #0x1                   	// #1
   332e0:	mov	x19, xzr
   332e4:	mov	x20, x28
   332e8:	mov	x0, x20
   332ec:	bl	c610 <mpfr_mpz_clear@plt>
   332f0:	add	x19, x19, #0x1
   332f4:	cmp	x19, x27
   332f8:	add	x20, x20, #0x10
   332fc:	b.ls	332e8 <mpfr_gamma@@Base+0x1338>  // b.plast
   33300:	ldr	x1, [sp, #24]
   33304:	mov	x0, x28
   33308:	bl	d120 <mpfr_free_func@plt>
   3330c:	ldp	x28, x21, [sp, #40]
   33310:	ldr	x26, [sp, #16]
   33314:	cmp	x27, #0x2
   33318:	mov	w22, #0x80000000            	// #-2147483648
   3331c:	b.cc	33340 <mpfr_gamma@@Base+0x1390>  // b.lo, b.ul, b.last
   33320:	add	x19, x26, #0x40
   33324:	mov	w20, #0x2                   	// #2
   33328:	mov	x0, x19
   3332c:	bl	c4f0 <mpfr_clear@plt>
   33330:	add	x20, x20, #0x1
   33334:	cmp	x20, x27
   33338:	add	x19, x19, #0x20
   3333c:	b.ls	33328 <mpfr_gamma@@Base+0x1378>  // b.plast
   33340:	ldr	x1, [sp, #32]
   33344:	mov	x0, x26
   33348:	bl	d120 <mpfr_free_func@plt>
   3334c:	cmp	x25, x23
   33350:	b.cs	33388 <mpfr_gamma@@Base+0x13d8>  // b.hs, b.nlast
   33354:	sub	x0, x29, #0x68
   33358:	mov	x1, x24
   3335c:	mov	x2, x25
   33360:	mov	w3, wzr
   33364:	bl	c710 <mpfr_add_ui@plt>
   33368:	sub	x0, x29, #0x48
   3336c:	sub	x1, x29, #0x48
   33370:	sub	x2, x29, #0x68
   33374:	mov	w3, wzr
   33378:	bl	c1b0 <mpfr_mul@plt>
   3337c:	add	x25, x25, #0x1
   33380:	cmp	x23, x25
   33384:	b.ne	33354 <mpfr_gamma@@Base+0x13a4>  // b.any
   33388:	sub	x0, x29, #0x48
   3338c:	sub	x1, x29, #0x48
   33390:	sub	x2, x29, #0x48
   33394:	mov	w3, wzr
   33398:	bl	c1b0 <mpfr_mul@plt>
   3339c:	sub	x0, x29, #0x88
   333a0:	sub	x1, x29, #0x88
   333a4:	sub	x2, x29, #0x48
   333a8:	mov	w3, wzr
   333ac:	bl	caf0 <mpfr_div@plt>
   333b0:	ldur	x20, [x29, #-24]
   333b4:	sub	x0, x29, #0x28
   333b8:	sub	x1, x29, #0x28
   333bc:	mov	w2, wzr
   333c0:	bl	cc20 <mpfr_exp@plt>
   333c4:	ldur	x8, [x29, #-24]
   333c8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   333cc:	cmp	x8, x9
   333d0:	b.ne	336f4 <mpfr_gamma@@Base+0x1744>  // b.any
   333d4:	ldr	x0, [sp, #56]
   333d8:	ldr	w5, [sp, #68]
   333dc:	add	x2, sp, #0x80
   333e0:	sub	x3, x29, #0x28
   333e4:	sub	x4, x29, #0x48
   333e8:	mov	x1, x24
   333ec:	bl	33c8c <mpfr_gamma@@Base+0x1cdc>
   333f0:	cbnz	w0, 33b80 <mpfr_gamma@@Base+0x1bd0>
   333f4:	ldr	x19, [sp, #8]
   333f8:	mov	x8, #0xfffffffffffffeff    	// #-257
   333fc:	movk	x8, #0x7fff, lsl #48
   33400:	sub	x8, x8, x21
   33404:	cmp	x19, x8
   33408:	b.gt	337ac <mpfr_gamma@@Base+0x17fc>
   3340c:	add	x21, x21, x19
   33410:	cmp	x21, #0x0
   33414:	cinc	x8, x21, lt  // lt = tstop
   33418:	asr	x19, x8, #1
   3341c:	b	32ffc <mpfr_gamma@@Base+0x104c>
   33420:	mov	w20, #0x5                   	// #5
   33424:	mov	w25, #0x2                   	// #2
   33428:	b	334ec <mpfr_gamma@@Base+0x153c>
   3342c:	sub	x0, x29, #0x48
   33430:	sub	x1, x29, #0x48
   33434:	mov	w3, wzr
   33438:	bl	bea0 <mpfr_mul_ui@plt>
   3343c:	sub	x2, x20, #0x4
   33440:	sub	x0, x29, #0x48
   33444:	sub	x1, x29, #0x48
   33448:	mov	w3, wzr
   3344c:	bl	bea0 <mpfr_mul_ui@plt>
   33450:	sub	x0, x29, #0x48
   33454:	sub	x1, x29, #0x48
   33458:	mov	x2, x19
   3345c:	mov	w3, wzr
   33460:	bl	d160 <mpfr_div_ui@plt>
   33464:	sub	x2, x20, #0x2
   33468:	sub	x0, x29, #0x48
   3346c:	sub	x1, x29, #0x48
   33470:	mov	w3, wzr
   33474:	bl	d160 <mpfr_div_ui@plt>
   33478:	sub	x0, x29, #0x48
   3347c:	sub	x1, x29, #0x48
   33480:	mov	x2, x19
   33484:	mov	w3, wzr
   33488:	bl	d160 <mpfr_div_ui@plt>
   3348c:	mov	x2, x20
   33490:	sub	x0, x29, #0x48
   33494:	sub	x1, x29, #0x48
   33498:	mov	w3, wzr
   3349c:	bl	d160 <mpfr_div_ui@plt>
   334a0:	mov	x0, x25
   334a4:	bl	cd10 <mpfr_bernoulli_cache@plt>
   334a8:	mov	x2, x0
   334ac:	sub	x0, x29, #0x88
   334b0:	sub	x1, x29, #0x48
   334b4:	mov	w3, wzr
   334b8:	bl	c9a0 <mpfr_mul_z@plt>
   334bc:	sub	x0, x29, #0x28
   334c0:	sub	x1, x29, #0x28
   334c4:	sub	x2, x29, #0x88
   334c8:	mov	w3, wzr
   334cc:	bl	c640 <mpfr_add@plt>
   334d0:	ldur	x8, [x29, #-120]
   334d4:	ldur	x9, [x29, #-24]
   334d8:	add	x25, x25, #0x1
   334dc:	add	x20, x20, #0x2
   334e0:	add	x8, x8, x21
   334e4:	cmp	x8, x9
   334e8:	b.lt	331c8 <mpfr_gamma@@Base+0x1218>  // b.tstop
   334ec:	sub	x0, x29, #0x48
   334f0:	sub	x1, x29, #0x48
   334f4:	sub	x2, x29, #0x68
   334f8:	mov	w3, wzr
   334fc:	bl	c1b0 <mpfr_mul@plt>
   33500:	sub	x19, x20, #0x1
   33504:	cmp	x25, x22
   33508:	sub	x2, x20, #0x3
   3350c:	b.hi	3342c <mpfr_gamma@@Base+0x147c>  // b.pmore
   33510:	sub	x8, x20, #0x4
   33514:	mul	x2, x2, x8
   33518:	sub	x0, x29, #0x48
   3351c:	sub	x1, x29, #0x48
   33520:	mov	w3, wzr
   33524:	bl	bea0 <mpfr_mul_ui@plt>
   33528:	sub	x8, x20, #0x2
   3352c:	mul	x2, x8, x19
   33530:	sub	x0, x29, #0x48
   33534:	sub	x1, x29, #0x48
   33538:	mov	w3, wzr
   3353c:	bl	d160 <mpfr_div_ui@plt>
   33540:	mul	x2, x20, x19
   33544:	b	33490 <mpfr_gamma@@Base+0x14e0>
   33548:	add	x19, x26, #0x60
   3354c:	mov	w20, #0x3                   	// #3
   33550:	b	33578 <mpfr_gamma@@Base+0x15c8>
   33554:	sub	x1, x19, #0x20
   33558:	mov	x0, x19
   3355c:	mov	x2, x24
   33560:	mov	w3, wzr
   33564:	bl	c1b0 <mpfr_mul@plt>
   33568:	add	x20, x20, #0x1
   3356c:	cmp	x20, x27
   33570:	add	x19, x19, #0x20
   33574:	b.hi	3329c <mpfr_gamma@@Base+0x12ec>  // b.pmore
   33578:	tbnz	w20, #0, 33554 <mpfr_gamma@@Base+0x15a4>
   3357c:	lsl	x8, x20, #4
   33580:	and	x8, x8, #0xffffffffffffffe0
   33584:	add	x1, x26, x8
   33588:	mov	x0, x19
   3358c:	mov	w2, wzr
   33590:	bl	c8c0 <mpfr_sqr@plt>
   33594:	b	33568 <mpfr_gamma@@Base+0x15b8>
   33598:	add	x9, x28, #0x10
   3359c:	str	x9, [sp, #80]
   335a0:	add	x9, x26, #0x20
   335a4:	str	x9, [sp, #72]
   335a8:	mov	w9, #0x1                   	// #1
   335ac:	str	x9, [x29, #8]
   335b0:	str	x23, [sp, #96]
   335b4:	b	335e0 <mpfr_gamma@@Base+0x1630>
   335b8:	sub	x0, x29, #0x48
   335bc:	sub	x1, x29, #0x48
   335c0:	sub	x2, x29, #0x68
   335c4:	mov	w3, wzr
   335c8:	bl	c1b0 <mpfr_mul@plt>
   335cc:	ldp	x23, x25, [sp, #96]
   335d0:	add	x8, x25, x27
   335d4:	cmp	x8, x23
   335d8:	str	x25, [x29, #8]
   335dc:	b.hi	332e0 <mpfr_gamma@@Base+0x1330>  // b.pmore
   335e0:	mov	w1, #0x1                   	// #1
   335e4:	mov	x0, x28
   335e8:	str	x8, [sp, #104]
   335ec:	bl	c110 <__gmpz_set_ui@plt>
   335f0:	cbz	x27, 3368c <mpfr_gamma@@Base+0x16dc>
   335f4:	mov	x26, xzr
   335f8:	mov	x23, xzr
   335fc:	mov	x19, x28
   33600:	b	33630 <mpfr_gamma@@Base+0x1680>
   33604:	ldr	x8, [x29, #8]
   33608:	mov	x0, x28
   3360c:	mov	x1, x28
   33610:	add	x2, x23, x8
   33614:	bl	c590 <__gmpz_mul_ui@plt>
   33618:	add	x19, x19, #0x10
   3361c:	mov	x27, x25
   33620:	cmp	x25, x21
   33624:	sub	x26, x26, #0x1
   33628:	mov	x23, x21
   3362c:	b.eq	3368c <mpfr_gamma@@Base+0x16dc>  // b.none
   33630:	add	x21, x23, #0x1
   33634:	add	x0, x28, x21, lsl #4
   33638:	add	x1, x28, x23, lsl #4
   3363c:	mov	x25, x27
   33640:	bl	c410 <__gmpz_set@plt>
   33644:	cbz	x23, 33604 <mpfr_gamma@@Base+0x1654>
   33648:	ldr	x8, [x29, #8]
   3364c:	mov	x27, x26
   33650:	mov	x24, x19
   33654:	add	x20, x23, x8
   33658:	mov	x0, x24
   3365c:	mov	x1, x24
   33660:	mov	x2, x20
   33664:	bl	c590 <__gmpz_mul_ui@plt>
   33668:	sub	x22, x24, #0x10
   3366c:	mov	x0, x24
   33670:	mov	x1, x24
   33674:	mov	x2, x22
   33678:	bl	ceb0 <__gmpz_add@plt>
   3367c:	adds	x27, x27, #0x1
   33680:	mov	x24, x22
   33684:	b.cc	33658 <mpfr_gamma@@Base+0x16a8>  // b.lo, b.ul, b.last
   33688:	b	33604 <mpfr_gamma@@Base+0x1654>
   3368c:	sub	x0, x29, #0x68
   33690:	mov	x1, x28
   33694:	mov	w2, wzr
   33698:	bl	c6e0 <mpfr_set_z@plt>
   3369c:	ldr	x24, [sp, #120]
   336a0:	cbz	x27, 335b8 <mpfr_gamma@@Base+0x1608>
   336a4:	ldp	x21, x20, [sp, #72]
   336a8:	ldr	x22, [sp, #88]
   336ac:	mov	x19, xzr
   336b0:	cmp	x19, #0x0
   336b4:	csel	x1, x24, x21, eq  // eq = none
   336b8:	add	x0, sp, #0x98
   336bc:	mov	x2, x20
   336c0:	mov	w3, wzr
   336c4:	bl	c9a0 <mpfr_mul_z@plt>
   336c8:	sub	x0, x29, #0x68
   336cc:	sub	x1, x29, #0x68
   336d0:	add	x2, sp, #0x98
   336d4:	mov	w3, wzr
   336d8:	bl	c640 <mpfr_add@plt>
   336dc:	sub	x22, x22, #0x1
   336e0:	add	x20, x20, #0x10
   336e4:	add	x21, x21, #0x20
   336e8:	sub	x19, x19, #0x1
   336ec:	cbnz	x22, 336b0 <mpfr_gamma@@Base+0x1700>
   336f0:	b	335b8 <mpfr_gamma@@Base+0x1608>
   336f4:	sub	x0, x29, #0x48
   336f8:	sub	x1, x29, #0x88
   336fc:	mov	w2, wzr
   33700:	bl	ce20 <mpfr_sqrt@plt>
   33704:	sub	x0, x29, #0x28
   33708:	sub	x1, x29, #0x28
   3370c:	sub	x2, x29, #0x48
   33710:	mov	w3, wzr
   33714:	bl	c1b0 <mpfr_mul@plt>
   33718:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   3371c:	movk	x8, #0xcccd
   33720:	umulh	x8, x28, x8
   33724:	lsr	x8, x8, #2
   33728:	add	x8, x8, x8, lsl #1
   3372c:	add	x0, x8, #0x12
   33730:	bl	c0d0 <__gmpfr_int_ceil_log2@plt>
   33734:	ucvtf	d0, x23
   33738:	fadd	d0, d0, d0
   3373c:	fadd	d0, d0, d8
   33740:	mov	w19, w0
   33744:	bl	ce40 <__gmpfr_ceil_log2@plt>
   33748:	ldur	x8, [x29, #-24]
   3374c:	mov	x9, #0xfffffffffffffeff    	// #-257
   33750:	movk	x9, #0x7fff, lsl #48
   33754:	add	x9, x9, #0x105
   33758:	cmp	x8, x9
   3375c:	b.lt	333f4 <mpfr_gamma@@Base+0x1444>  // b.tstop
   33760:	ldur	x10, [x29, #-40]
   33764:	add	w9, w19, #0x2
   33768:	add	x9, x20, w9, sxtw
   3376c:	ldur	x8, [x29, #-16]
   33770:	cmp	x9, x0
   33774:	sub	x11, x10, #0x1
   33778:	csel	x9, x0, x9, lt  // lt = tstop
   3377c:	add	x10, x10, #0x3e
   33780:	cmp	x11, #0x0
   33784:	ldr	x3, [sp]
   33788:	csel	x10, x10, x11, lt  // lt = tstop
   3378c:	mvn	x9, x9
   33790:	asr	x10, x10, #6
   33794:	add	x1, x10, #0x1
   33798:	add	x2, x21, x9
   3379c:	mov	x0, x8
   337a0:	bl	c830 <mpfr_round_p@plt>
   337a4:	cbnz	w0, 33a8c <mpfr_gamma@@Base+0x1adc>
   337a8:	b	333f4 <mpfr_gamma@@Base+0x1444>
   337ac:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   337b0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   337b4:	mov	w1, #0x2b8                 	// #696
   337b8:	add	x0, x0, #0x8b5
   337bc:	add	x2, x2, #0xa3e
   337c0:	bl	d030 <mpfr_assert_fail@plt>
   337c4:	b	3340c <mpfr_gamma@@Base+0x145c>
   337c8:	subs	x19, x23, #0x1
   337cc:	b.eq	33bec <mpfr_gamma@@Base+0x1c3c>  // b.none
   337d0:	b.le	33bf4 <mpfr_gamma@@Base+0x1c44>
   337d4:	clz	x8, x19
   337d8:	mov	w9, #0x40                  	// #64
   337dc:	sub	x8, x9, x8
   337e0:	add	x19, x8, x23
   337e4:	subs	x20, x19, #0x1
   337e8:	b.eq	33c10 <mpfr_gamma@@Base+0x1c60>  // b.none
   337ec:	b.le	33c18 <mpfr_gamma@@Base+0x1c68>
   337f0:	clz	x8, x20
   337f4:	mov	w9, #0x4e                  	// #78
   337f8:	sub	x8, x9, x8
   337fc:	add	x22, x8, x19
   33800:	ldr	w8, [sp, #68]
   33804:	adrp	x25, 5b000 <mpfr_free_pool@@Base+0x3854>
   33808:	mov	w19, #0x40                  	// #64
   3380c:	mov	w20, #0x2                   	// #2
   33810:	cmp	w8, #0x0
   33814:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33818:	ldr	d8, [x8, #2112]
   3381c:	mov	w26, #0x3                   	// #3
   33820:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   33824:	cinc	x23, x23, eq  // eq = none
   33828:	mov	w28, #0x1                   	// #1
   3382c:	add	x25, x25, #0xa3e
   33830:	sub	x0, x29, #0x28
   33834:	mov	x1, x22
   33838:	bl	c330 <mpfr_set_prec@plt>
   3383c:	sub	x0, x29, #0x48
   33840:	mov	x1, x22
   33844:	bl	c330 <mpfr_set_prec@plt>
   33848:	sub	x0, x29, #0x68
   3384c:	mov	x1, x22
   33850:	bl	c330 <mpfr_set_prec@plt>
   33854:	sub	x0, x29, #0x88
   33858:	mov	x1, x22
   3385c:	bl	c330 <mpfr_set_prec@plt>
   33860:	sub	x0, x29, #0x28
   33864:	mov	w1, #0x2                   	// #2
   33868:	mov	w3, #0x3                   	// #3
   3386c:	mov	x2, x24
   33870:	bl	cf30 <mpfr_ui_sub@plt>
   33874:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   33878:	ldr	x1, [x0, #2848]
   3387c:	add	x0, x0, #0xb20
   33880:	blr	x1
   33884:	ldr	x8, [sp, #112]
   33888:	mov	w2, wzr
   3388c:	add	x1, x8, x0
   33890:	sub	x0, x29, #0x48
   33894:	bl	c840 <mpfr_cache@plt>
   33898:	sub	x0, x29, #0x68
   3389c:	sub	x1, x29, #0x28
   338a0:	mov	w2, wzr
   338a4:	bl	cad0 <mpfr_lngamma@plt>
   338a8:	ldur	x8, [x29, #-88]
   338ac:	cmp	x8, x27
   338b0:	b.ne	338bc <mpfr_gamma@@Base+0x190c>  // b.any
   338b4:	mov	x24, xzr
   338b8:	b	338dc <mpfr_gamma@@Base+0x192c>
   338bc:	ldur	x21, [x29, #-24]
   338c0:	scvtf	d0, x21
   338c4:	fmul	d0, d0, d8
   338c8:	bl	ce40 <__gmpfr_ceil_log2@plt>
   338cc:	ldur	x8, [x29, #-88]
   338d0:	add	x9, x21, x0
   338d4:	sub	x8, x9, x8
   338d8:	add	x24, x8, #0x1
   338dc:	sub	x0, x29, #0x28
   338e0:	sub	x1, x29, #0x28
   338e4:	sub	x2, x29, #0x48
   338e8:	mov	w3, wzr
   338ec:	bl	c1b0 <mpfr_mul@plt>
   338f0:	ldur	x21, [x29, #-24]
   338f4:	sub	x0, x29, #0x28
   338f8:	sub	x1, x29, #0x28
   338fc:	mov	w2, wzr
   33900:	bl	c920 <mpfr_sin@plt>
   33904:	ldur	x8, [x29, #-24]
   33908:	ldr	x1, [sp, #120]
   3390c:	sub	x0, x29, #0x88
   33910:	mov	w2, #0x1                   	// #1
   33914:	sub	x8, x21, x8
   33918:	add	x9, x8, #0x3
   3391c:	add	x8, x8, #0x6
   33920:	cmp	x9, #0x0
   33924:	mov	w3, wzr
   33928:	csel	x21, x20, x8, lt  // lt = tstop
   3392c:	bl	ca00 <mpfr_sub_ui@plt>
   33930:	sub	x0, x29, #0x88
   33934:	sub	x1, x29, #0x88
   33938:	sub	x2, x29, #0x48
   3393c:	mov	w3, wzr
   33940:	bl	c1b0 <mpfr_mul@plt>
   33944:	sub	x0, x29, #0x88
   33948:	sub	x1, x29, #0x88
   3394c:	sub	x2, x29, #0x28
   33950:	mov	w3, wzr
   33954:	bl	caf0 <mpfr_div@plt>
   33958:	sub	x0, x29, #0x88
   3395c:	sub	x1, x29, #0x88
   33960:	mov	w3, #0x1                   	// #1
   33964:	mov	w2, wzr
   33968:	bl	cb70 <mpfr_set4@plt>
   3396c:	cmp	x21, #0x2
   33970:	sub	x0, x29, #0x88
   33974:	sub	x1, x29, #0x88
   33978:	mov	w2, wzr
   3397c:	csinc	x21, x26, x21, lt  // lt = tstop
   33980:	bl	c520 <mpfr_log@plt>
   33984:	add	x8, x21, #0x2
   33988:	cmp	x8, x22
   3398c:	b.le	33998 <mpfr_gamma@@Base+0x19e8>
   33990:	add	x22, x8, x22
   33994:	b	33a08 <mpfr_gamma@@Base+0x1a58>
   33998:	ldur	x8, [x29, #-120]
   3399c:	cmp	x24, #0x0
   339a0:	ldur	x9, [x29, #-88]
   339a4:	csinc	x10, xzr, x24, lt  // lt = tstop
   339a8:	sub	x11, x28, x8
   339ac:	cmp	x8, x27
   339b0:	csel	x11, xzr, x11, eq  // eq = none
   339b4:	add	x11, x11, x21
   339b8:	csel	x8, xzr, x8, eq  // eq = none
   339bc:	cmp	x11, #0x0
   339c0:	add	x21, x9, x10
   339c4:	csinc	x9, xzr, x11, lt  // lt = tstop
   339c8:	sub	x0, x29, #0x28
   339cc:	sub	x1, x29, #0x88
   339d0:	sub	x2, x29, #0x68
   339d4:	mov	w3, wzr
   339d8:	add	x24, x9, x8
   339dc:	bl	bfd0 <mpfr_sub@plt>
   339e0:	ldur	x8, [x29, #-24]
   339e4:	cmp	x24, x21
   339e8:	mov	x9, #0xfffffffffffffeff    	// #-257
   339ec:	movk	x9, #0x7fff, lsl #48
   339f0:	csel	x10, x21, x24, lt  // lt = tstop
   339f4:	add	x9, x9, #0x105
   339f8:	sub	x10, x10, x8
   339fc:	cmp	x8, x9
   33a00:	add	x8, x10, #0x1
   33a04:	b.ge	33a10 <mpfr_gamma@@Base+0x1a60>  // b.tcont
   33a08:	ldr	x24, [sp, #120]
   33a0c:	b	33a4c <mpfr_gamma@@Base+0x1a9c>
   33a10:	ldur	x9, [x29, #-40]
   33a14:	cmp	x8, #0x0
   33a18:	ldur	x0, [x29, #-16]
   33a1c:	csinc	x8, xzr, x8, lt  // lt = tstop
   33a20:	sub	x10, x9, #0x1
   33a24:	add	x9, x9, #0x3e
   33a28:	cmp	x10, #0x0
   33a2c:	csel	x9, x9, x10, lt  // lt = tstop
   33a30:	asr	x9, x9, #6
   33a34:	add	x1, x9, #0x1
   33a38:	sub	x2, x22, x8
   33a3c:	mov	x3, x23
   33a40:	bl	c830 <mpfr_round_p@plt>
   33a44:	ldr	x24, [sp, #120]
   33a48:	cbnz	w0, 33a8c <mpfr_gamma@@Base+0x1adc>
   33a4c:	mov	x8, #0xfffffffffffffeff    	// #-257
   33a50:	movk	x8, #0x7fff, lsl #48
   33a54:	sub	x8, x8, x22
   33a58:	cmp	x19, x8
   33a5c:	b.gt	33a74 <mpfr_gamma@@Base+0x1ac4>
   33a60:	add	x22, x22, x19
   33a64:	cmp	x22, #0x0
   33a68:	cinc	x8, x22, lt  // lt = tstop
   33a6c:	asr	x19, x8, #1
   33a70:	b	33830 <mpfr_gamma@@Base+0x1880>
   33a74:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33a78:	mov	w1, #0x1a5                 	// #421
   33a7c:	add	x0, x0, #0x8b5
   33a80:	mov	x2, x25
   33a84:	bl	d030 <mpfr_assert_fail@plt>
   33a88:	b	33a60 <mpfr_gamma@@Base+0x1ab0>
   33a8c:	mov	w19, wzr
   33a90:	cbnz	w19, 33aac <mpfr_gamma@@Base+0x1afc>
   33a94:	ldur	w3, [x29, #-32]
   33a98:	ldr	x0, [sp, #56]
   33a9c:	ldr	w2, [sp, #68]
   33aa0:	sub	x1, x29, #0x28
   33aa4:	bl	cb70 <mpfr_set4@plt>
   33aa8:	mov	w19, w0
   33aac:	sub	x0, x29, #0x28
   33ab0:	bl	c4f0 <mpfr_clear@plt>
   33ab4:	sub	x0, x29, #0x48
   33ab8:	bl	c4f0 <mpfr_clear@plt>
   33abc:	sub	x0, x29, #0x68
   33ac0:	bl	c4f0 <mpfr_clear@plt>
   33ac4:	sub	x0, x29, #0x88
   33ac8:	bl	c4f0 <mpfr_clear@plt>
   33acc:	add	x0, sp, #0x98
   33ad0:	bl	c4f0 <mpfr_clear@plt>
   33ad4:	ldr	w8, [sp, #128]
   33ad8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   33adc:	ldr	x1, [x0, #2800]
   33ae0:	add	x0, x0, #0xaf0
   33ae4:	blr	x1
   33ae8:	ldr	x10, [sp, #112]
   33aec:	ldr	x9, [sp, #136]
   33af0:	str	w8, [x10, x0]
   33af4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   33af8:	ldr	x1, [x0, #2736]
   33afc:	add	x0, x0, #0xab0
   33b00:	blr	x1
   33b04:	ldr	x11, [sp, #144]
   33b08:	str	x9, [x10, x0]
   33b0c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   33b10:	ldr	x1, [x0, #2768]
   33b14:	add	x0, x0, #0xad0
   33b18:	blr	x1
   33b1c:	str	x11, [x10, x0]
   33b20:	ldr	x10, [sp, #56]
   33b24:	ldr	x10, [x10, #16]
   33b28:	cmp	x10, x11
   33b2c:	b.gt	33b8c <mpfr_gamma@@Base+0x1bdc>
   33b30:	cmp	x10, x9
   33b34:	b.lt	33b8c <mpfr_gamma@@Base+0x1bdc>  // b.tstop
   33b38:	cbz	w19, 33b58 <mpfr_gamma@@Base+0x1ba8>
   33b3c:	orr	w8, w8, #0x8
   33b40:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   33b44:	ldr	x1, [x0, #2800]
   33b48:	add	x0, x0, #0xaf0
   33b4c:	blr	x1
   33b50:	ldr	x9, [sp, #112]
   33b54:	str	w8, [x9, x0]
   33b58:	mov	w0, w19
   33b5c:	ldp	x20, x19, [sp, #416]
   33b60:	ldp	x22, x21, [sp, #400]
   33b64:	ldp	x24, x23, [sp, #384]
   33b68:	ldp	x26, x25, [sp, #368]
   33b6c:	ldp	x28, x27, [sp, #352]
   33b70:	ldp	x29, x30, [sp, #336]
   33b74:	ldr	d8, [sp, #320]
   33b78:	add	sp, sp, #0x1b0
   33b7c:	ret
   33b80:	mov	w19, w0
   33b84:	cbnz	w19, 33aac <mpfr_gamma@@Base+0x1afc>
   33b88:	b	33a94 <mpfr_gamma@@Base+0x1ae4>
   33b8c:	ldr	x0, [sp, #56]
   33b90:	ldr	w2, [sp, #68]
   33b94:	mov	w1, w19
   33b98:	bl	d020 <mpfr_check_range@plt>
   33b9c:	mov	w19, w0
   33ba0:	b	33b58 <mpfr_gamma@@Base+0x1ba8>
   33ba4:	mov	x8, xzr
   33ba8:	b	32fc0 <mpfr_gamma@@Base+0x1010>
   33bac:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33bb0:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33bb4:	add	x0, x0, #0x8b5
   33bb8:	add	x2, x2, #0x580
   33bbc:	mov	w1, #0x1b0                 	// #432
   33bc0:	bl	d030 <mpfr_assert_fail@plt>
   33bc4:	b	32fb4 <mpfr_gamma@@Base+0x1004>
   33bc8:	mov	w8, #0xd                   	// #13
   33bcc:	b	32fdc <mpfr_gamma@@Base+0x102c>
   33bd0:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33bd4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33bd8:	add	x0, x0, #0x8b5
   33bdc:	add	x2, x2, #0x80d
   33be0:	mov	w1, #0x1b1                 	// #433
   33be4:	bl	d030 <mpfr_assert_fail@plt>
   33be8:	b	32fd0 <mpfr_gamma@@Base+0x1020>
   33bec:	mov	x8, xzr
   33bf0:	b	337e0 <mpfr_gamma@@Base+0x1830>
   33bf4:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33bf8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33bfc:	add	x0, x0, #0x8b5
   33c00:	add	x2, x2, #0x580
   33c04:	mov	w1, #0x14a                 	// #330
   33c08:	bl	d030 <mpfr_assert_fail@plt>
   33c0c:	b	337d4 <mpfr_gamma@@Base+0x1824>
   33c10:	mov	w8, #0xe                   	// #14
   33c14:	b	337fc <mpfr_gamma@@Base+0x184c>
   33c18:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33c1c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33c20:	add	x0, x0, #0x8b5
   33c24:	add	x2, x2, #0x80d
   33c28:	mov	w1, #0x14b                 	// #331
   33c2c:	bl	d030 <mpfr_assert_fail@plt>
   33c30:	b	337f0 <mpfr_gamma@@Base+0x1840>
   33c34:	ldr	x8, [x0, #16]
   33c38:	ldr	x9, [x0]
   33c3c:	mov	w10, #0x2                   	// #2
   33c40:	sub	x10, x10, x8
   33c44:	cmp	x8, #0x1
   33c48:	csinc	x8, x10, xzr, le
   33c4c:	add	x0, x9, x8
   33c50:	ret
   33c54:	ldr	w8, [x0, #8]
   33c58:	cmp	w8, #0x1
   33c5c:	b.lt	33c70 <mpfr_gamma@@Base+0x1cc0>  // b.tstop
   33c60:	ldr	x8, [x0]
   33c64:	ldr	x9, [x0, #16]
   33c68:	sub	x0, x8, x9
   33c6c:	ret
   33c70:	ldr	x8, [x0, #16]
   33c74:	ldr	x9, [x0]
   33c78:	neg	x10, x8
   33c7c:	and	x8, x10, x8, asr #63
   33c80:	add	x8, x9, x8
   33c84:	add	x0, x8, #0x1
   33c88:	ret
   33c8c:	sub	sp, sp, #0x130
   33c90:	stp	x29, x30, [sp, #208]
   33c94:	str	x28, [sp, #224]
   33c98:	stp	x26, x25, [sp, #240]
   33c9c:	stp	x24, x23, [sp, #256]
   33ca0:	stp	x22, x21, [sp, #272]
   33ca4:	stp	x20, x19, [sp, #288]
   33ca8:	add	x29, sp, #0xd0
   33cac:	mov	w23, w5
   33cb0:	mov	x21, x4
   33cb4:	mov	x22, x3
   33cb8:	mov	x19, x2
   33cbc:	mov	x2, x1
   33cc0:	mov	x20, x0
   33cc4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   33cc8:	ldr	x1, [x0, #2800]
   33ccc:	add	x0, x0, #0xaf0
   33cd0:	blr	x1
   33cd4:	mrs	x25, tpidr_el0
   33cd8:	mov	x24, x0
   33cdc:	str	wzr, [x25, x0]
   33ce0:	add	x1, x29, #0x1c
   33ce4:	mov	w3, #0x3                   	// #3
   33ce8:	mov	x0, x22
   33cec:	bl	c530 <mpfr_lgamma@plt>
   33cf0:	ldr	w24, [x25, x24]
   33cf4:	cbz	w0, 33e94 <mpfr_gamma@@Base+0x1ee4>
   33cf8:	ldr	w3, [x22, #8]
   33cfc:	tbnz	w24, #1, 33eb4 <mpfr_gamma@@Base+0x1f04>
   33d00:	mov	x0, x21
   33d04:	mov	x1, x22
   33d08:	mov	w2, wzr
   33d0c:	bl	cb70 <mpfr_set4@plt>
   33d10:	mov	x0, x21
   33d14:	bl	c5c0 <mpfr_nextabove@plt>
   33d18:	ldr	w8, [x29, #28]
   33d1c:	ldr	x24, [x20]
   33d20:	cmp	w23, #0x3
   33d24:	mov	w9, #0x2                   	// #2
   33d28:	mov	w10, #0x3                   	// #3
   33d2c:	csel	w9, w9, w23, eq  // eq = none
   33d30:	cmp	w23, #0x2
   33d34:	mov	x11, #0x7fffffffffffff00    	// #9223372036854775552
   33d38:	csel	w9, w10, w9, eq  // eq = none
   33d3c:	cmp	w8, #0x0
   33d40:	csel	w23, w9, w23, lt  // lt = tstop
   33d44:	cmp	x24, x11
   33d48:	b.ge	33f20 <mpfr_gamma@@Base+0x1f70>  // b.tcont
   33d4c:	sub	x8, x24, #0x1
   33d50:	add	x9, x24, #0x3e
   33d54:	cmp	x8, #0x0
   33d58:	csel	x8, x9, x8, lt  // lt = tstop
   33d5c:	asr	x8, x8, #6
   33d60:	cmp	x24, #0x201
   33d64:	add	x26, x8, #0x1
   33d68:	b.lt	33d80 <mpfr_gamma@@Base+0x1dd0>  // b.tstop
   33d6c:	lsl	x0, x26, #4
   33d70:	str	x0, [sp]
   33d74:	bl	d1f0 <mpfr_allocate_func@plt>
   33d78:	str	x0, [sp, #8]
   33d7c:	b	33d8c <mpfr_gamma@@Base+0x1ddc>
   33d80:	mov	x8, sp
   33d84:	add	x8, x8, #0x10
   33d88:	stp	xzr, x8, [sp]
   33d8c:	ldr	x8, [sp, #8]
   33d90:	mov	w9, #0x1                   	// #1
   33d94:	stur	x24, [x29, #-64]
   33d98:	stur	w9, [x29, #-24]
   33d9c:	stur	x8, [x29, #-8]
   33da0:	add	x8, x8, x26, lsl #3
   33da4:	stp	x8, x24, [x29, #-40]
   33da8:	stur	w9, [x29, #-56]
   33dac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   33db0:	ldr	x1, [x0, #2800]
   33db4:	add	x0, x0, #0xaf0
   33db8:	blr	x1
   33dbc:	mov	x24, x0
   33dc0:	str	wzr, [x25, x0]
   33dc4:	sub	x0, x29, #0x20
   33dc8:	mov	x1, x22
   33dcc:	mov	w2, w23
   33dd0:	bl	cc20 <mpfr_exp@plt>
   33dd4:	ldr	w26, [x25, x24]
   33dd8:	mov	w22, w0
   33ddc:	sub	x0, x29, #0x40
   33de0:	mov	x1, x21
   33de4:	mov	w2, w23
   33de8:	str	wzr, [x25, x24]
   33dec:	bl	cc20 <mpfr_exp@plt>
   33df0:	ldr	w21, [x25, x24]
   33df4:	mov	w23, w0
   33df8:	sub	x0, x29, #0x20
   33dfc:	sub	x1, x29, #0x40
   33e00:	bl	cf40 <mpfr_equal_p@plt>
   33e04:	cmp	w26, w21
   33e08:	mov	w21, wzr
   33e0c:	b.ne	33e60 <mpfr_gamma@@Base+0x1eb0>  // b.any
   33e10:	cbz	w0, 33e60 <mpfr_gamma@@Base+0x1eb0>
   33e14:	cmp	w22, #0x0
   33e18:	cset	w8, gt
   33e1c:	cmp	w23, #0x0
   33e20:	cset	w9, gt
   33e24:	and	w8, w8, w9
   33e28:	tbnz	w8, #0, 33e34 <mpfr_gamma@@Base+0x1e84>
   33e2c:	and	w8, w23, w22
   33e30:	tbz	w8, #31, 33f04 <mpfr_gamma@@Base+0x1f54>
   33e34:	ldr	w3, [x29, #28]
   33e38:	sub	x1, x29, #0x20
   33e3c:	mov	x0, x20
   33e40:	mov	w2, wzr
   33e44:	bl	cb70 <mpfr_set4@plt>
   33e48:	ldr	w8, [x29, #28]
   33e4c:	ldr	w9, [x19]
   33e50:	cmp	w8, #0x0
   33e54:	orr	w8, w9, w26
   33e58:	cneg	w21, w22, lt  // lt = tstop
   33e5c:	str	w8, [x19]
   33e60:	ldr	x1, [sp]
   33e64:	cbz	x1, 33e70 <mpfr_gamma@@Base+0x1ec0>
   33e68:	ldr	x0, [sp, #8]
   33e6c:	bl	d120 <mpfr_free_func@plt>
   33e70:	mov	w0, w21
   33e74:	ldp	x20, x19, [sp, #288]
   33e78:	ldp	x22, x21, [sp, #272]
   33e7c:	ldp	x24, x23, [sp, #256]
   33e80:	ldp	x26, x25, [sp, #240]
   33e84:	ldr	x28, [sp, #224]
   33e88:	ldp	x29, x30, [sp, #208]
   33e8c:	add	sp, sp, #0x130
   33e90:	ret
   33e94:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33e98:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33e9c:	add	x0, x0, #0x8b5
   33ea0:	add	x2, x2, #0x8c1
   33ea4:	mov	w1, #0x4b                  	// #75
   33ea8:	bl	d030 <mpfr_assert_fail@plt>
   33eac:	ldr	w3, [x22, #8]
   33eb0:	tbz	w24, #1, 33d00 <mpfr_gamma@@Base+0x1d50>
   33eb4:	ldr	w8, [x19]
   33eb8:	cmp	w3, #0x1
   33ebc:	b.lt	33ee0 <mpfr_gamma@@Base+0x1f30>  // b.tstop
   33ec0:	orr	w8, w8, #0x2
   33ec4:	str	w8, [x19]
   33ec8:	ldr	w2, [x29, #28]
   33ecc:	mov	x0, x20
   33ed0:	mov	w1, w23
   33ed4:	bl	c3a0 <mpfr_overflow@plt>
   33ed8:	mov	w21, w0
   33edc:	b	33e70 <mpfr_gamma@@Base+0x1ec0>
   33ee0:	orr	w8, w8, #0x1
   33ee4:	str	w8, [x19]
   33ee8:	ldr	w2, [x29, #28]
   33eec:	cmp	w23, #0x0
   33ef0:	csinc	w1, w23, wzr, ne  // ne = any
   33ef4:	mov	x0, x20
   33ef8:	bl	c880 <mpfr_underflow@plt>
   33efc:	mov	w21, w0
   33f00:	b	33e70 <mpfr_gamma@@Base+0x1ec0>
   33f04:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33f08:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   33f0c:	add	x0, x0, #0x8b5
   33f10:	add	x2, x2, #0x8cc
   33f14:	mov	w1, #0x69                  	// #105
   33f18:	bl	d030 <mpfr_assert_fail@plt>
   33f1c:	b	33e34 <mpfr_gamma@@Base+0x1e84>
   33f20:	bl	cdd0 <mpfr_abort_prec_max@plt>
   33f24:	stp	x29, x30, [sp, #-16]!
   33f28:	cmp	x1, #0x64
   33f2c:	mov	x29, sp
   33f30:	b.gt	33f40 <mpfr_gamma@@Base+0x1f90>
   33f34:	mov	w1, #0x266                 	// #614
   33f38:	mov	x2, #0xfffffffffffffff6    	// #-10
   33f3c:	b	33fb4 <mpfr_gamma@@Base+0x2004>
   33f40:	cmp	x1, #0x1f4
   33f44:	b.gt	33f54 <mpfr_gamma@@Base+0x1fa4>
   33f48:	mov	w1, #0x333                 	// #819
   33f4c:	mov	x2, #0xfffffffffffffff6    	// #-10
   33f50:	b	33fb4 <mpfr_gamma@@Base+0x2004>
   33f54:	cmp	x1, #0x3e8
   33f58:	b.gt	33f68 <mpfr_gamma@@Base+0x1fb8>
   33f5c:	mov	w1, #0x533                 	// #1331
   33f60:	mov	x2, #0xfffffffffffffff6    	// #-10
   33f64:	b	33fb4 <mpfr_gamma@@Base+0x2004>
   33f68:	cmp	x1, #0x7d0
   33f6c:	b.gt	33f7c <mpfr_gamma@@Base+0x1fcc>
   33f70:	mov	w1, #0x6cd                 	// #1741
   33f74:	mov	x2, #0xfffffffffffffff6    	// #-10
   33f78:	b	33fb4 <mpfr_gamma@@Base+0x2004>
   33f7c:	mov	w8, #0x1388                	// #5000
   33f80:	cmp	x1, x8
   33f84:	b.gt	33f94 <mpfr_gamma@@Base+0x1fe4>
   33f88:	mov	w1, #0x8cd                 	// #2253
   33f8c:	mov	x2, #0xfffffffffffffff6    	// #-10
   33f90:	b	33fb4 <mpfr_gamma@@Base+0x2004>
   33f94:	mov	w8, #0x2710                	// #10000
   33f98:	cmp	x1, x8
   33f9c:	b.gt	33fac <mpfr_gamma@@Base+0x1ffc>
   33fa0:	mov	w1, #0xd9a                 	// #3482
   33fa4:	mov	x2, #0xfffffffffffffff6    	// #-10
   33fa8:	b	33fb4 <mpfr_gamma@@Base+0x2004>
   33fac:	mov	w1, #0x9                   	// #9
   33fb0:	mov	x2, #0xffffffffffffffff    	// #-1
   33fb4:	mov	w3, wzr
   33fb8:	bl	cac0 <mpfr_set_ui_2exp@plt>
   33fbc:	ldp	x29, x30, [sp], #16
   33fc0:	ret

0000000000033fc4 <mpfr_set_ld@@Base>:
   33fc4:	sub	sp, sp, #0x1d0
   33fc8:	stp	x29, x30, [sp, #368]
   33fcc:	add	x29, sp, #0x170
   33fd0:	stp	x28, x27, [sp, #384]
   33fd4:	stp	x26, x25, [sp, #400]
   33fd8:	stp	x24, x23, [sp, #416]
   33fdc:	stp	x22, x21, [sp, #432]
   33fe0:	stp	x20, x19, [sp, #448]
   33fe4:	stur	q0, [x29, #-96]
   33fe8:	ldur	x8, [x29, #-88]
   33fec:	mov	w20, w1
   33ff0:	mov	x19, x0
   33ff4:	mvn	x9, x8
   33ff8:	tst	x9, #0x7fff000000000000
   33ffc:	b.ne	34050 <mpfr_set_ld@@Base+0x8c>  // b.any
   34000:	ldur	x9, [x29, #-96]
   34004:	lsr	x10, x9, #32
   34008:	orr	w9, w10, w9
   3400c:	orr	w9, w9, w8
   34010:	ubfx	x8, x8, #32, #16
   34014:	orr	w8, w8, w9
   34018:	cbz	w8, 34050 <mpfr_set_ld@@Base+0x8c>
   3401c:	mov	x8, #0x2                   	// #2
   34020:	movk	x8, #0x8000, lsl #48
   34024:	str	x8, [x19, #16]
   34028:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3402c:	ldr	x1, [x0, #2800]
   34030:	add	x0, x0, #0xaf0
   34034:	blr	x1
   34038:	mrs	x8, tpidr_el0
   3403c:	ldr	w9, [x8, x0]
   34040:	mov	w21, wzr
   34044:	orr	w9, w9, #0x4
   34048:	str	w9, [x8, x0]
   3404c:	b	34098 <mpfr_set_ld@@Base+0xd4>
   34050:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34054:	ldr	q1, [x8, #2320]
   34058:	stur	q0, [x29, #-128]
   3405c:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34060:	cmp	w0, #0x0
   34064:	b.le	34070 <mpfr_set_ld@@Base+0xac>
   34068:	mov	w1, #0x1                   	// #1
   3406c:	b	3408c <mpfr_set_ld@@Base+0xc8>
   34070:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34074:	ldr	q1, [x8, #2336]
   34078:	ldur	q0, [x29, #-128]
   3407c:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   34080:	cmp	w0, #0x0
   34084:	b.ge	340bc <mpfr_set_ld@@Base+0xf8>  // b.tcont
   34088:	mov	w1, #0xffffffff            	// #-1
   3408c:	mov	x0, x19
   34090:	bl	ca80 <mpfr_set_inf@plt>
   34094:	mov	w21, wzr
   34098:	mov	w0, w21
   3409c:	ldp	x20, x19, [sp, #448]
   340a0:	ldp	x22, x21, [sp, #432]
   340a4:	ldp	x24, x23, [sp, #416]
   340a8:	ldp	x26, x25, [sp, #400]
   340ac:	ldp	x28, x27, [sp, #384]
   340b0:	ldp	x29, x30, [sp, #368]
   340b4:	add	sp, sp, #0x1d0
   340b8:	ret
   340bc:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   340c0:	ldr	q1, [x8, #2352]
   340c4:	ldur	q0, [x29, #-128]
   340c8:	stur	q1, [x29, #-144]
   340cc:	bl	58370 <mpfr_free_pool@@Base+0xbc4>
   340d0:	cbnz	w0, 340f0 <mpfr_set_ld@@Base+0x12c>
   340d4:	ldur	q0, [x29, #-128]
   340d8:	bl	59b18 <mpfr_free_pool@@Base+0x236c>
   340dc:	mov	x0, x19
   340e0:	mov	w1, w20
   340e4:	bl	c2a0 <mpfr_set_d@plt>
   340e8:	mov	w21, w0
   340ec:	b	34098 <mpfr_set_ld@@Base+0xd4>
   340f0:	sub	x0, x29, #0x28
   340f4:	mov	w1, #0x71                  	// #113
   340f8:	bl	cf60 <mpfr_init2@plt>
   340fc:	sub	x0, x29, #0x48
   34100:	mov	w1, #0x35                  	// #53
   34104:	bl	cf60 <mpfr_init2@plt>
   34108:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3410c:	ldr	x1, [x0, #2800]
   34110:	add	x0, x0, #0xaf0
   34114:	blr	x1
   34118:	mrs	x22, tpidr_el0
   3411c:	ldr	w23, [x22, x0]
   34120:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34124:	ldr	x1, [x0, #2736]
   34128:	add	x0, x0, #0xab0
   3412c:	blr	x1
   34130:	ldr	x24, [x22, x0]
   34134:	mov	x8, x0
   34138:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3413c:	ldr	x1, [x0, #2768]
   34140:	add	x0, x0, #0xad0
   34144:	blr	x1
   34148:	ldp	q1, q0, [x29, #-144]
   3414c:	ldr	x25, [x22, x0]
   34150:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   34154:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   34158:	mov	x21, #0x8000000000000001    	// #-9223372036854775807
   3415c:	str	x9, [x22, x8]
   34160:	str	x10, [x22, x0]
   34164:	stur	x21, [x29, #-24]
   34168:	bl	58370 <mpfr_free_pool@@Base+0xbc4>
   3416c:	mov	w26, wzr
   34170:	cbz	w0, 34768 <mpfr_set_ld@@Base+0x7a4>
   34174:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34178:	ldr	q0, [x8, #2368]
   3417c:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34180:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34184:	mov	w27, #0x1                   	// #1
   34188:	str	q0, [sp, #176]
   3418c:	ldr	q0, [x9, #2400]
   34190:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34194:	mov	w28, #0x2                   	// #2
   34198:	stur	q0, [x29, #-160]
   3419c:	ldr	q0, [x8, #2448]
   341a0:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   341a4:	str	q0, [sp, #128]
   341a8:	ldr	q0, [x9, #2480]
   341ac:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   341b0:	str	q0, [sp, #112]
   341b4:	ldr	q0, [x8, #2512]
   341b8:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   341bc:	str	q0, [sp, #96]
   341c0:	ldr	q0, [x9, #2528]
   341c4:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   341c8:	str	q0, [sp, #80]
   341cc:	ldr	q0, [x8, #2560]
   341d0:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   341d4:	str	q0, [sp, #64]
   341d8:	ldr	q0, [x9, #2544]
   341dc:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   341e0:	str	q0, [sp, #48]
   341e4:	ldr	q0, [x8, #2416]
   341e8:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   341ec:	str	q0, [sp, #160]
   341f0:	ldr	q0, [x9, #2496]
   341f4:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   341f8:	str	q0, [sp, #32]
   341fc:	ldr	q0, [x8, #2464]
   34200:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34204:	str	q0, [sp, #16]
   34208:	ldr	q0, [x9, #2432]
   3420c:	str	q0, [sp]
   34210:	ldr	q0, [x8, #2384]
   34214:	str	q0, [sp, #144]
   34218:	ldur	q0, [x29, #-128]
   3421c:	b	34264 <mpfr_set_ld@@Base+0x2a0>
   34220:	ldur	q0, [x29, #-112]
   34224:	ldr	q1, [sp, #48]
   34228:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   3422c:	sub	x0, x29, #0x28
   34230:	sub	x1, x29, #0x28
   34234:	mov	w2, #0x200                 	// #512
   34238:	mov	w3, #0x1                   	// #1
   3423c:	stur	q0, [x29, #-112]
   34240:	add	w26, w26, #0x200
   34244:	bl	c8e0 <mpfr_div_2si@plt>
   34248:	ldur	q0, [x29, #-112]
   3424c:	ldur	q1, [x29, #-144]
   34250:	stur	q0, [x29, #-112]
   34254:	ldur	q0, [x29, #-112]
   34258:	bl	58370 <mpfr_free_pool@@Base+0xbc4>
   3425c:	ldur	q0, [x29, #-112]
   34260:	cbz	w0, 34768 <mpfr_set_ld@@Base+0x7a4>
   34264:	ldr	q1, [sp, #176]
   34268:	stur	q0, [x29, #-112]
   3426c:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34270:	cmp	w0, #0x0
   34274:	b.gt	3449c <mpfr_set_ld@@Base+0x4d8>
   34278:	ldur	q0, [x29, #-112]
   3427c:	ldr	q1, [sp, #144]
   34280:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   34284:	cmp	w0, #0x0
   34288:	b.lt	3449c <mpfr_set_ld@@Base+0x4d8>  // b.tstop
   3428c:	ldur	q0, [x29, #-160]
   34290:	ldur	q1, [x29, #-112]
   34294:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   34298:	stur	q0, [x29, #-176]
   3429c:	ldur	q0, [x29, #-112]
   342a0:	ldur	q1, [x29, #-144]
   342a4:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   342a8:	cmp	w0, #0x0
   342ac:	b.lt	342b8 <mpfr_set_ld@@Base+0x2f4>  // b.tstop
   342b0:	ldur	q0, [x29, #-112]
   342b4:	stur	q0, [x29, #-176]
   342b8:	ldur	q0, [x29, #-176]
   342bc:	ldr	q1, [sp, #160]
   342c0:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   342c4:	cmp	w0, #0x0
   342c8:	b.ge	3465c <mpfr_set_ld@@Base+0x698>  // b.tcont
   342cc:	ldur	q0, [x29, #-176]
   342d0:	ldr	q1, [sp]
   342d4:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   342d8:	cmp	w0, #0x0
   342dc:	b.gt	34308 <mpfr_set_ld@@Base+0x344>
   342e0:	ldur	q0, [x29, #-112]
   342e4:	ldr	q1, [sp, #128]
   342e8:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   342ec:	sub	x0, x29, #0x28
   342f0:	sub	x1, x29, #0x28
   342f4:	mov	w2, #0x2000                	// #8192
   342f8:	mov	w3, #0x1                   	// #1
   342fc:	stur	q0, [x29, #-112]
   34300:	sub	w26, w26, #0x2, lsl #12
   34304:	bl	bff0 <mpfr_mul_2si@plt>
   34308:	ldur	q0, [x29, #-160]
   3430c:	ldur	q1, [x29, #-112]
   34310:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   34314:	stur	q0, [x29, #-176]
   34318:	ldur	q0, [x29, #-112]
   3431c:	ldur	q1, [x29, #-144]
   34320:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34324:	ldur	q0, [x29, #-176]
   34328:	cmp	w0, #0x0
   3432c:	b.lt	34334 <mpfr_set_ld@@Base+0x370>  // b.tstop
   34330:	ldur	q0, [x29, #-112]
   34334:	ldr	q1, [sp, #16]
   34338:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   3433c:	cmp	w0, #0x0
   34340:	b.gt	3436c <mpfr_set_ld@@Base+0x3a8>
   34344:	ldur	q0, [x29, #-112]
   34348:	ldr	q1, [sp, #112]
   3434c:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   34350:	sub	x0, x29, #0x28
   34354:	sub	x1, x29, #0x28
   34358:	mov	w2, #0x1000                	// #4096
   3435c:	mov	w3, #0x1                   	// #1
   34360:	stur	q0, [x29, #-112]
   34364:	sub	w26, w26, #0x1, lsl #12
   34368:	bl	bff0 <mpfr_mul_2si@plt>
   3436c:	ldur	q0, [x29, #-160]
   34370:	ldur	q1, [x29, #-112]
   34374:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   34378:	stur	q0, [x29, #-176]
   3437c:	ldur	q0, [x29, #-112]
   34380:	ldur	q1, [x29, #-144]
   34384:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34388:	ldur	q0, [x29, #-176]
   3438c:	cmp	w0, #0x0
   34390:	b.lt	34398 <mpfr_set_ld@@Base+0x3d4>  // b.tstop
   34394:	ldur	q0, [x29, #-112]
   34398:	ldr	q1, [sp, #32]
   3439c:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   343a0:	cmp	w0, #0x0
   343a4:	b.gt	343d0 <mpfr_set_ld@@Base+0x40c>
   343a8:	ldur	q0, [x29, #-112]
   343ac:	ldr	q1, [sp, #96]
   343b0:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   343b4:	sub	x0, x29, #0x28
   343b8:	sub	x1, x29, #0x28
   343bc:	mov	w2, #0x800                 	// #2048
   343c0:	mov	w3, #0x1                   	// #1
   343c4:	stur	q0, [x29, #-112]
   343c8:	sub	w26, w26, #0x800
   343cc:	bl	bff0 <mpfr_mul_2si@plt>
   343d0:	ldur	q0, [x29, #-160]
   343d4:	ldur	q1, [x29, #-112]
   343d8:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   343dc:	stur	q0, [x29, #-176]
   343e0:	ldur	q0, [x29, #-112]
   343e4:	ldur	q1, [x29, #-144]
   343e8:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   343ec:	ldur	q0, [x29, #-176]
   343f0:	cmp	w0, #0x0
   343f4:	b.lt	343fc <mpfr_set_ld@@Base+0x438>  // b.tstop
   343f8:	ldur	q0, [x29, #-112]
   343fc:	ldr	q1, [sp, #160]
   34400:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   34404:	cmp	w0, #0x0
   34408:	b.gt	34434 <mpfr_set_ld@@Base+0x470>
   3440c:	ldur	q0, [x29, #-112]
   34410:	ldr	q1, [sp, #80]
   34414:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   34418:	sub	x0, x29, #0x28
   3441c:	sub	x1, x29, #0x28
   34420:	mov	w2, #0x400                 	// #1024
   34424:	mov	w3, #0x1                   	// #1
   34428:	stur	q0, [x29, #-112]
   3442c:	sub	w26, w26, #0x400
   34430:	bl	bff0 <mpfr_mul_2si@plt>
   34434:	ldur	q0, [x29, #-160]
   34438:	ldur	q1, [x29, #-112]
   3443c:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   34440:	stur	q0, [x29, #-176]
   34444:	ldur	q0, [x29, #-112]
   34448:	ldur	q1, [x29, #-144]
   3444c:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34450:	ldur	q0, [x29, #-176]
   34454:	cmp	w0, #0x0
   34458:	b.lt	34460 <mpfr_set_ld@@Base+0x49c>  // b.tstop
   3445c:	ldur	q0, [x29, #-112]
   34460:	ldr	q1, [sp, #48]
   34464:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   34468:	cmp	w0, #0x0
   3446c:	b.gt	34718 <mpfr_set_ld@@Base+0x754>
   34470:	ldur	q0, [x29, #-112]
   34474:	ldr	q1, [sp, #64]
   34478:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   3447c:	sub	x0, x29, #0x28
   34480:	sub	x1, x29, #0x28
   34484:	mov	w2, #0x200                 	// #512
   34488:	mov	w3, #0x1                   	// #1
   3448c:	stur	q0, [x29, #-112]
   34490:	sub	w26, w26, #0x200
   34494:	bl	bff0 <mpfr_mul_2si@plt>
   34498:	b	34718 <mpfr_set_ld@@Base+0x754>
   3449c:	ldur	q0, [x29, #-160]
   344a0:	ldur	q1, [x29, #-112]
   344a4:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   344a8:	stur	q0, [x29, #-176]
   344ac:	ldur	q0, [x29, #-112]
   344b0:	ldur	q1, [x29, #-144]
   344b4:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   344b8:	ldur	q0, [x29, #-176]
   344bc:	cmp	w0, #0x0
   344c0:	b.lt	344c8 <mpfr_set_ld@@Base+0x504>  // b.tstop
   344c4:	ldur	q0, [x29, #-112]
   344c8:	ldr	q1, [sp, #128]
   344cc:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   344d0:	tbnz	w0, #31, 344fc <mpfr_set_ld@@Base+0x538>
   344d4:	ldur	q0, [x29, #-112]
   344d8:	ldr	q1, [sp]
   344dc:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   344e0:	sub	x0, x29, #0x28
   344e4:	sub	x1, x29, #0x28
   344e8:	mov	w2, #0x2000                	// #8192
   344ec:	mov	w3, #0x1                   	// #1
   344f0:	stur	q0, [x29, #-112]
   344f4:	add	w26, w26, #0x2, lsl #12
   344f8:	bl	c8e0 <mpfr_div_2si@plt>
   344fc:	ldur	q0, [x29, #-160]
   34500:	ldur	q1, [x29, #-112]
   34504:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   34508:	stur	q0, [x29, #-176]
   3450c:	ldur	q0, [x29, #-112]
   34510:	ldur	q1, [x29, #-144]
   34514:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34518:	ldur	q0, [x29, #-176]
   3451c:	cmp	w0, #0x0
   34520:	b.lt	34528 <mpfr_set_ld@@Base+0x564>  // b.tstop
   34524:	ldur	q0, [x29, #-112]
   34528:	ldr	q1, [sp, #112]
   3452c:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34530:	tbnz	w0, #31, 3455c <mpfr_set_ld@@Base+0x598>
   34534:	ldur	q0, [x29, #-112]
   34538:	ldr	q1, [sp, #16]
   3453c:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   34540:	sub	x0, x29, #0x28
   34544:	sub	x1, x29, #0x28
   34548:	mov	w2, #0x1000                	// #4096
   3454c:	mov	w3, #0x1                   	// #1
   34550:	stur	q0, [x29, #-112]
   34554:	add	w26, w26, #0x1, lsl #12
   34558:	bl	c8e0 <mpfr_div_2si@plt>
   3455c:	ldur	q0, [x29, #-160]
   34560:	ldur	q1, [x29, #-112]
   34564:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   34568:	stur	q0, [x29, #-176]
   3456c:	ldur	q0, [x29, #-112]
   34570:	ldur	q1, [x29, #-144]
   34574:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34578:	ldur	q0, [x29, #-176]
   3457c:	cmp	w0, #0x0
   34580:	b.lt	34588 <mpfr_set_ld@@Base+0x5c4>  // b.tstop
   34584:	ldur	q0, [x29, #-112]
   34588:	ldr	q1, [sp, #96]
   3458c:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34590:	tbnz	w0, #31, 345bc <mpfr_set_ld@@Base+0x5f8>
   34594:	ldur	q0, [x29, #-112]
   34598:	ldr	q1, [sp, #32]
   3459c:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   345a0:	sub	x0, x29, #0x28
   345a4:	sub	x1, x29, #0x28
   345a8:	mov	w2, #0x800                 	// #2048
   345ac:	mov	w3, #0x1                   	// #1
   345b0:	stur	q0, [x29, #-112]
   345b4:	add	w26, w26, #0x800
   345b8:	bl	c8e0 <mpfr_div_2si@plt>
   345bc:	ldur	q0, [x29, #-160]
   345c0:	ldur	q1, [x29, #-112]
   345c4:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   345c8:	stur	q0, [x29, #-176]
   345cc:	ldur	q0, [x29, #-112]
   345d0:	ldur	q1, [x29, #-144]
   345d4:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   345d8:	ldur	q0, [x29, #-176]
   345dc:	cmp	w0, #0x0
   345e0:	b.lt	345e8 <mpfr_set_ld@@Base+0x624>  // b.tstop
   345e4:	ldur	q0, [x29, #-112]
   345e8:	ldr	q1, [sp, #80]
   345ec:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   345f0:	tbnz	w0, #31, 3461c <mpfr_set_ld@@Base+0x658>
   345f4:	ldur	q0, [x29, #-112]
   345f8:	ldr	q1, [sp, #160]
   345fc:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   34600:	sub	x0, x29, #0x28
   34604:	sub	x1, x29, #0x28
   34608:	mov	w2, #0x400                 	// #1024
   3460c:	mov	w3, #0x1                   	// #1
   34610:	stur	q0, [x29, #-112]
   34614:	add	w26, w26, #0x400
   34618:	bl	c8e0 <mpfr_div_2si@plt>
   3461c:	ldur	q0, [x29, #-160]
   34620:	ldur	q1, [x29, #-112]
   34624:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   34628:	stur	q0, [x29, #-176]
   3462c:	ldur	q0, [x29, #-112]
   34630:	ldur	q1, [x29, #-144]
   34634:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34638:	ldur	q0, [x29, #-176]
   3463c:	cmp	w0, #0x0
   34640:	b.lt	34648 <mpfr_set_ld@@Base+0x684>  // b.tstop
   34644:	ldur	q0, [x29, #-112]
   34648:	ldr	q1, [sp, #64]
   3464c:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34650:	tbz	w0, #31, 34220 <mpfr_set_ld@@Base+0x25c>
   34654:	ldur	q1, [x29, #-144]
   34658:	b	34730 <mpfr_set_ld@@Base+0x76c>
   3465c:	ldur	q0, [x29, #-112]
   34660:	bl	59b18 <mpfr_free_pool@@Base+0x236c>
   34664:	sub	x0, x29, #0x48
   34668:	mov	w1, #0x1                   	// #1
   3466c:	bl	c2a0 <mpfr_set_d@plt>
   34670:	sub	x0, x29, #0x28
   34674:	sub	x1, x29, #0x28
   34678:	sub	x2, x29, #0x48
   3467c:	mov	w3, #0x1                   	// #1
   34680:	bl	c640 <mpfr_add@plt>
   34684:	cbz	w0, 346e8 <mpfr_set_ld@@Base+0x724>
   34688:	sub	x0, x29, #0x28
   3468c:	bl	d080 <mpfr_number_p@plt>
   34690:	cbz	w0, 34750 <mpfr_set_ld@@Base+0x78c>
   34694:	ldr	x9, [x19]
   34698:	ldur	x8, [x29, #-40]
   3469c:	add	x1, x9, #0x1
   346a0:	cmp	x8, x1
   346a4:	b.ne	34758 <mpfr_set_ld@@Base+0x794>  // b.any
   346a8:	ldur	x8, [x29, #-16]
   346ac:	ldp	q1, q0, [x29, #-144]
   346b0:	mvn	w9, w9
   346b4:	lsl	x9, x27, x9
   346b8:	sxtw	x9, w9
   346bc:	cbnz	w20, 346d4 <mpfr_set_ld@@Base+0x710>
   346c0:	ldr	x10, [x8]
   346c4:	ldur	w11, [x29, #-32]
   346c8:	and	x10, x10, x9
   346cc:	cmp	x10, x11, lsr #31
   346d0:	cinc	w20, w28, eq  // eq = none
   346d4:	ldr	x10, [x8]
   346d8:	orr	x9, x10, x9
   346dc:	str	x9, [x8]
   346e0:	mov	w8, #0x7                   	// #7
   346e4:	b	34720 <mpfr_set_ld@@Base+0x75c>
   346e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   346ec:	ldr	x1, [x0, #2864]
   346f0:	add	x0, x0, #0xb30
   346f4:	blr	x1
   346f8:	ldr	w1, [x22, x0]
   346fc:	sub	x0, x29, #0x48
   34700:	bl	c190 <mpfr_get_d@plt>
   34704:	bl	599c8 <mpfr_free_pool@@Base+0x221c>
   34708:	mov	v1.16b, v0.16b
   3470c:	ldur	q0, [x29, #-112]
   34710:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   34714:	stur	q0, [x29, #-112]
   34718:	mov	w8, wzr
   3471c:	ldp	q1, q0, [x29, #-144]
   34720:	cmp	w8, #0x7
   34724:	b.eq	34768 <mpfr_set_ld@@Base+0x7a4>  // b.none
   34728:	cmp	w8, #0x5
   3472c:	b.eq	34738 <mpfr_set_ld@@Base+0x774>  // b.none
   34730:	ldur	q0, [x29, #-112]
   34734:	b	34250 <mpfr_set_ld@@Base+0x28c>
   34738:	stur	x21, [x29, #-24]
   3473c:	bl	58370 <mpfr_free_pool@@Base+0xbc4>
   34740:	ldur	q0, [x29, #-128]
   34744:	mov	w26, wzr
   34748:	cbnz	w0, 34264 <mpfr_set_ld@@Base+0x2a0>
   3474c:	b	34768 <mpfr_set_ld@@Base+0x7a4>
   34750:	mov	w8, #0x7                   	// #7
   34754:	b	3471c <mpfr_set_ld@@Base+0x758>
   34758:	sub	x0, x29, #0x28
   3475c:	bl	c330 <mpfr_set_prec@plt>
   34760:	mov	w8, #0x5                   	// #5
   34764:	b	3471c <mpfr_set_ld@@Base+0x758>
   34768:	sxtw	x2, w26
   3476c:	sub	x1, x29, #0x28
   34770:	mov	x0, x19
   34774:	mov	w3, w20
   34778:	bl	bff0 <mpfr_mul_2si@plt>
   3477c:	mov	w21, w0
   34780:	sub	x0, x29, #0x28
   34784:	bl	c4f0 <mpfr_clear@plt>
   34788:	sub	x0, x29, #0x48
   3478c:	bl	c4f0 <mpfr_clear@plt>
   34790:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34794:	ldr	x1, [x0, #2800]
   34798:	add	x0, x0, #0xaf0
   3479c:	blr	x1
   347a0:	str	w23, [x22, x0]
   347a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   347a8:	ldr	x1, [x0, #2736]
   347ac:	add	x0, x0, #0xab0
   347b0:	blr	x1
   347b4:	str	x24, [x22, x0]
   347b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   347bc:	ldr	x1, [x0, #2768]
   347c0:	add	x0, x0, #0xad0
   347c4:	blr	x1
   347c8:	str	x25, [x22, x0]
   347cc:	ldr	x8, [x19, #16]
   347d0:	cmp	x8, x25
   347d4:	b.gt	34800 <mpfr_set_ld@@Base+0x83c>
   347d8:	cmp	x8, x24
   347dc:	b.lt	34800 <mpfr_set_ld@@Base+0x83c>  // b.tstop
   347e0:	cbz	w21, 34098 <mpfr_set_ld@@Base+0xd4>
   347e4:	orr	w8, w23, #0x8
   347e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   347ec:	ldr	x1, [x0, #2800]
   347f0:	add	x0, x0, #0xaf0
   347f4:	blr	x1
   347f8:	str	w8, [x22, x0]
   347fc:	b	34098 <mpfr_set_ld@@Base+0xd4>
   34800:	mov	x0, x19
   34804:	mov	w1, w21
   34808:	mov	w2, w20
   3480c:	bl	d020 <mpfr_check_range@plt>
   34810:	mov	w21, w0
   34814:	b	34098 <mpfr_set_ld@@Base+0xd4>

0000000000034818 <mpfr_get_ld@@Base>:
   34818:	sub	sp, sp, #0xb0
   3481c:	stp	x29, x30, [sp, #104]
   34820:	stp	x24, x23, [sp, #128]
   34824:	stp	x22, x21, [sp, #144]
   34828:	stp	x20, x19, [sp, #160]
   3482c:	ldr	x8, [x0, #16]
   34830:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   34834:	mov	x19, x0
   34838:	mov	w20, w1
   3483c:	cmp	x8, x9
   34840:	str	d8, [sp, #96]
   34844:	str	x25, [sp, #120]
   34848:	add	x29, sp, #0x60
   3484c:	b.le	34ab4 <mpfr_get_ld@@Base+0x29c>
   34850:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34854:	ldr	x1, [x0, #2800]
   34858:	add	x0, x0, #0xaf0
   3485c:	blr	x1
   34860:	mrs	x21, tpidr_el0
   34864:	ldr	w22, [x21, x0]
   34868:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3486c:	ldr	x1, [x0, #2736]
   34870:	add	x0, x0, #0xab0
   34874:	blr	x1
   34878:	ldr	x23, [x21, x0]
   3487c:	mov	x8, x0
   34880:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34884:	ldr	x1, [x0, #2768]
   34888:	add	x0, x0, #0xad0
   3488c:	blr	x1
   34890:	ldr	x24, [x21, x0]
   34894:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   34898:	str	x9, [x21, x8]
   3489c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   348a0:	str	x8, [x21, x0]
   348a4:	sub	x0, x29, #0x20
   348a8:	mov	w1, #0x71                  	// #113
   348ac:	bl	cf60 <mpfr_init2@plt>
   348b0:	add	x0, sp, #0x20
   348b4:	mov	w1, #0x71                  	// #113
   348b8:	bl	cf60 <mpfr_init2@plt>
   348bc:	ldr	w3, [x19, #8]
   348c0:	sub	x0, x29, #0x20
   348c4:	mov	x1, x19
   348c8:	mov	w2, w20
   348cc:	bl	cb70 <mpfr_set4@plt>
   348d0:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   348d4:	ldur	x20, [x29, #-16]
   348d8:	ldur	w19, [x29, #-24]
   348dc:	ldr	q0, [x8, #2352]
   348e0:	mov	w8, #0x1                   	// #1
   348e4:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   348e8:	stur	xzr, [x29, #-16]
   348ec:	str	q0, [sp, #16]
   348f0:	stur	w8, [x29, #-24]
   348f4:	sub	x0, x29, #0x20
   348f8:	mov	w1, wzr
   348fc:	bl	c190 <mpfr_get_d@plt>
   34900:	mov	v8.16b, v0.16b
   34904:	bl	599c8 <mpfr_free_pool@@Base+0x221c>
   34908:	mov	v1.16b, v0.16b
   3490c:	ldr	q0, [sp, #16]
   34910:	bl	57848 <mpfr_free_pool@@Base+0x9c>
   34914:	str	q0, [sp, #16]
   34918:	add	x0, sp, #0x20
   3491c:	mov	v0.16b, v8.16b
   34920:	mov	w1, wzr
   34924:	bl	c2a0 <mpfr_set_d@plt>
   34928:	sub	x0, x29, #0x20
   3492c:	sub	x1, x29, #0x20
   34930:	add	x2, sp, #0x20
   34934:	mov	w3, wzr
   34938:	bl	bfd0 <mpfr_sub@plt>
   3493c:	ldur	x8, [x29, #-16]
   34940:	cmp	x8, x25
   34944:	b.ne	348f4 <mpfr_get_ld@@Base+0xdc>  // b.any
   34948:	add	x0, sp, #0x20
   3494c:	bl	c4f0 <mpfr_clear@plt>
   34950:	sub	x0, x29, #0x20
   34954:	bl	c4f0 <mpfr_clear@plt>
   34958:	cbz	x20, 349a0 <mpfr_get_ld@@Base+0x188>
   3495c:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34960:	ldr	q1, [x8, #2576]
   34964:	ldr	q0, [sp, #16]
   34968:	str	q1, [sp]
   3496c:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   34970:	cmp	w0, #0x0
   34974:	b.ge	349a8 <mpfr_get_ld@@Base+0x190>  // b.tcont
   34978:	ldr	q0, [sp, #16]
   3497c:	mov	v1.16b, v0.16b
   34980:	bl	57848 <mpfr_free_pool@@Base+0x9c>
   34984:	ldr	q1, [sp]
   34988:	str	q0, [sp, #16]
   3498c:	sub	x20, x20, #0x1
   34990:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   34994:	ldr	q0, [sp, #16]
   34998:	tbnz	w0, #31, 3497c <mpfr_get_ld@@Base+0x164>
   3499c:	b	349ac <mpfr_get_ld@@Base+0x194>
   349a0:	ldr	q0, [sp, #16]
   349a4:	b	349f4 <mpfr_get_ld@@Base+0x1dc>
   349a8:	ldr	q0, [sp, #16]
   349ac:	cmp	x20, #0x0
   349b0:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   349b4:	cset	w8, gt
   349b8:	add	x9, x9, #0xa50
   349bc:	ldr	q1, [x9, w8, uxtw #4]
   349c0:	cneg	x20, x20, mi  // mi = first
   349c4:	stp	q1, q0, [sp]
   349c8:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   349cc:	tst	x20, #0x1
   349d0:	mov	v1.16b, v0.16b
   349d4:	b.eq	349e4 <mpfr_get_ld@@Base+0x1cc>  // b.none
   349d8:	lsr	x20, x20, #1
   349dc:	cbnz	x20, 34a84 <mpfr_get_ld@@Base+0x26c>
   349e0:	b	349f0 <mpfr_get_ld@@Base+0x1d8>
   349e4:	ldr	q1, [sp, #16]
   349e8:	lsr	x20, x20, #1
   349ec:	cbnz	x20, 34a84 <mpfr_get_ld@@Base+0x26c>
   349f0:	mov	v0.16b, v1.16b
   349f4:	str	q0, [sp, #16]
   349f8:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   349fc:	ldr	q0, [x8, #2400]
   34a00:	ldr	q1, [sp, #16]
   34a04:	bl	58ee8 <mpfr_free_pool@@Base+0x173c>
   34a08:	ldr	q1, [sp, #16]
   34a0c:	cmp	w19, #0x0
   34a10:	b.ge	34a18 <mpfr_get_ld@@Base+0x200>  // b.tcont
   34a14:	mov	v1.16b, v0.16b
   34a18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34a1c:	ldr	x1, [x0, #2800]
   34a20:	add	x0, x0, #0xaf0
   34a24:	blr	x1
   34a28:	str	w22, [x21, x0]
   34a2c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34a30:	ldr	x1, [x0, #2736]
   34a34:	add	x0, x0, #0xab0
   34a38:	blr	x1
   34a3c:	str	x23, [x21, x0]
   34a40:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34a44:	ldr	x1, [x0, #2768]
   34a48:	add	x0, x0, #0xad0
   34a4c:	blr	x1
   34a50:	str	x24, [x21, x0]
   34a54:	ldp	x20, x19, [sp, #160]
   34a58:	ldp	x22, x21, [sp, #144]
   34a5c:	ldp	x24, x23, [sp, #128]
   34a60:	ldr	x25, [sp, #120]
   34a64:	ldp	x29, x30, [sp, #104]
   34a68:	ldr	d8, [sp, #96]
   34a6c:	mov	v0.16b, v1.16b
   34a70:	add	sp, sp, #0xb0
   34a74:	ret
   34a78:	asr	x20, x20, #1
   34a7c:	mov	v1.16b, v0.16b
   34a80:	cbz	x20, 349f4 <mpfr_get_ld@@Base+0x1dc>
   34a84:	ldr	q0, [sp]
   34a88:	str	q1, [sp, #16]
   34a8c:	mov	v1.16b, v0.16b
   34a90:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   34a94:	mov	v1.16b, v0.16b
   34a98:	ldr	q0, [sp, #16]
   34a9c:	str	q1, [sp]
   34aa0:	bl	58700 <mpfr_free_pool@@Base+0xf54>
   34aa4:	tst	x20, #0x1
   34aa8:	b.ne	34a78 <mpfr_get_ld@@Base+0x260>  // b.any
   34aac:	ldr	q0, [sp, #16]
   34ab0:	b	34a78 <mpfr_get_ld@@Base+0x260>
   34ab4:	mov	x0, x19
   34ab8:	mov	w1, w20
   34abc:	bl	c190 <mpfr_get_d@plt>
   34ac0:	bl	599c8 <mpfr_free_pool@@Base+0x221c>
   34ac4:	mov	v1.16b, v0.16b
   34ac8:	b	34a54 <mpfr_get_ld@@Base+0x23c>

0000000000034acc <mpfr_get_ld_2exp@@Base>:
   34acc:	sub	sp, sp, #0x70
   34ad0:	stp	x29, x30, [sp, #64]
   34ad4:	stp	x22, x21, [sp, #80]
   34ad8:	stp	x20, x19, [sp, #96]
   34adc:	ldr	x8, [x1, #16]
   34ae0:	mov	x21, #0x4                   	// #4
   34ae4:	movk	x21, #0x8000, lsl #48
   34ae8:	mov	x20, x1
   34aec:	cmp	x8, x21
   34af0:	mov	x19, x0
   34af4:	add	x29, sp, #0x40
   34af8:	b.lt	34be8 <mpfr_get_ld_2exp@@Base+0x11c>  // b.tstop
   34afc:	ldr	x8, [x20]
   34b00:	add	x0, sp, #0x20
   34b04:	mov	w1, w2
   34b08:	str	x8, [sp, #32]
   34b0c:	ldr	w8, [x20, #8]
   34b10:	str	w8, [sp, #40]
   34b14:	ldr	x8, [x20, #24]
   34b18:	stp	xzr, x8, [sp, #48]
   34b1c:	bl	ca50 <mpfr_get_ld@plt>
   34b20:	ldr	x22, [x20, #16]
   34b24:	cmp	x22, x21
   34b28:	b.ge	34b34 <mpfr_get_ld_2exp@@Base+0x68>  // b.tcont
   34b2c:	mov	x20, xzr
   34b30:	b	34bc4 <mpfr_get_ld_2exp@@Base+0xf8>
   34b34:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34b38:	ldr	q1, [x8, #2576]
   34b3c:	stp	q1, q0, [sp]
   34b40:	bl	58370 <mpfr_free_pool@@Base+0xbc4>
   34b44:	adrp	x21, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34b48:	cbnz	w0, 34b54 <mpfr_get_ld_2exp@@Base+0x88>
   34b4c:	ldr	q0, [x21, #2624]
   34b50:	b	34b70 <mpfr_get_ld_2exp@@Base+0xa4>
   34b54:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34b58:	ldr	q1, [x8, #2592]
   34b5c:	ldr	q0, [sp, #16]
   34b60:	bl	58370 <mpfr_free_pool@@Base+0xbc4>
   34b64:	cbnz	w0, 34bdc <mpfr_get_ld_2exp@@Base+0x110>
   34b68:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34b6c:	ldr	q0, [x8, #2608]
   34b70:	add	x20, x22, #0x1
   34b74:	ldr	q1, [x21, #2624]
   34b78:	str	q0, [sp, #16]
   34b7c:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34b80:	tbnz	w0, #31, 34b90 <mpfr_get_ld_2exp@@Base+0xc4>
   34b84:	ldp	q1, q0, [sp]
   34b88:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   34b8c:	tbnz	w0, #31, 34bc0 <mpfr_get_ld_2exp@@Base+0xf4>
   34b90:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34b94:	ldr	q1, [x8, #2608]
   34b98:	ldr	q0, [sp, #16]
   34b9c:	bl	585c0 <mpfr_free_pool@@Base+0xe14>
   34ba0:	cmp	w0, #0x0
   34ba4:	b.gt	34bfc <mpfr_get_ld_2exp@@Base+0x130>
   34ba8:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34bac:	ldr	q1, [x8, #2592]
   34bb0:	ldr	q0, [sp, #16]
   34bb4:	bl	58478 <mpfr_free_pool@@Base+0xccc>
   34bb8:	cmp	w0, #0x0
   34bbc:	b.le	34bfc <mpfr_get_ld_2exp@@Base+0x130>
   34bc0:	ldr	q0, [sp, #16]
   34bc4:	str	x20, [x19]
   34bc8:	ldp	x20, x19, [sp, #96]
   34bcc:	ldp	x22, x21, [sp, #80]
   34bd0:	ldp	x29, x30, [sp, #64]
   34bd4:	add	sp, sp, #0x70
   34bd8:	ret
   34bdc:	ldr	q0, [sp, #16]
   34be0:	mov	x20, x22
   34be4:	b	34b74 <mpfr_get_ld_2exp@@Base+0xa8>
   34be8:	mov	x0, x19
   34bec:	mov	x1, x20
   34bf0:	bl	d0c0 <mpfr_get_d_2exp@plt>
   34bf4:	bl	599c8 <mpfr_free_pool@@Base+0x221c>
   34bf8:	b	34bc8 <mpfr_get_ld_2exp@@Base+0xfc>
   34bfc:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   34c00:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   34c04:	add	x0, x0, #0xa70
   34c08:	add	x2, x2, #0x2c0
   34c0c:	mov	w1, #0x10f                 	// #271
   34c10:	bl	d030 <mpfr_assert_fail@plt>
   34c14:	b	34bc0 <mpfr_get_ld_2exp@@Base+0xf4>

0000000000034c18 <mpfr_cbrt@@Base>:
   34c18:	sub	sp, sp, #0x80
   34c1c:	stp	x29, x30, [sp, #32]
   34c20:	stp	x28, x27, [sp, #48]
   34c24:	stp	x26, x25, [sp, #64]
   34c28:	stp	x24, x23, [sp, #80]
   34c2c:	stp	x22, x21, [sp, #96]
   34c30:	stp	x20, x19, [sp, #112]
   34c34:	ldr	x8, [x1, #16]
   34c38:	mov	x9, #0x2                   	// #2
   34c3c:	movk	x9, #0x8000, lsl #48
   34c40:	add	x10, x9, #0x2
   34c44:	mov	x21, x1
   34c48:	cmp	x8, x10
   34c4c:	mov	x19, x0
   34c50:	add	x29, sp, #0x20
   34c54:	b.lt	34f40 <mpfr_cbrt@@Base+0x328>  // b.tstop
   34c58:	mov	w20, w2
   34c5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34c60:	ldr	x1, [x0, #2800]
   34c64:	add	x0, x0, #0xaf0
   34c68:	blr	x1
   34c6c:	mrs	x23, tpidr_el0
   34c70:	ldr	w8, [x23, x0]
   34c74:	str	w8, [sp, #12]
   34c78:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34c7c:	ldr	x1, [x0, #2736]
   34c80:	add	x0, x0, #0xab0
   34c84:	blr	x1
   34c88:	ldr	x25, [x23, x0]
   34c8c:	mov	x8, x0
   34c90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34c94:	ldr	x1, [x0, #2768]
   34c98:	add	x0, x0, #0xad0
   34c9c:	blr	x1
   34ca0:	ldr	x26, [x23, x0]
   34ca4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   34ca8:	str	x9, [x23, x8]
   34cac:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   34cb0:	str	x8, [x23, x0]
   34cb4:	add	x0, sp, #0x10
   34cb8:	bl	c400 <mpfr_mpz_init@plt>
   34cbc:	add	x0, sp, #0x10
   34cc0:	mov	x1, x21
   34cc4:	bl	cfb0 <mpfr_get_z_2exp@plt>
   34cc8:	ldr	w27, [x21, #8]
   34ccc:	mov	x21, x0
   34cd0:	tbz	w27, #31, 34ce0 <mpfr_cbrt@@Base+0xc8>
   34cd4:	add	x0, sp, #0x10
   34cd8:	add	x1, sp, #0x10
   34cdc:	bl	c4e0 <__gmpz_neg@plt>
   34ce0:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   34ce4:	movk	x8, #0x5556
   34ce8:	smulh	x12, x21, x8
   34cec:	ldr	w9, [sp, #20]
   34cf0:	add	x12, x12, x12, lsr #63
   34cf4:	add	x12, x12, x12, lsl #1
   34cf8:	ldr	x10, [sp, #24]
   34cfc:	sub	x12, x21, x12
   34d00:	add	x13, x12, #0x3
   34d04:	cmp	x12, #0x0
   34d08:	csel	x22, x13, x12, lt  // lt = tstop
   34d0c:	cmp	w9, #0x0
   34d10:	cneg	w9, w9, mi  // mi = first
   34d14:	add	x10, x10, w9, uxtw #3
   34d18:	ldur	x10, [x10, #-8]
   34d1c:	ldr	x11, [x19]
   34d20:	cmp	w20, #0x0
   34d24:	clz	x10, x10
   34d28:	cinc	x28, x11, eq  // eq = none
   34d2c:	sub	x10, x10, x22
   34d30:	add	x11, x28, x28, lsl #1
   34d34:	sub	x9, x10, x9, lsl #6
   34d38:	add	x9, x9, x11
   34d3c:	smulh	x8, x9, x8
   34d40:	add	x8, x8, x8, lsr #63
   34d44:	add	x8, x8, x8, lsl #1
   34d48:	adds	x8, x8, x22
   34d4c:	b.mi	34d58 <mpfr_cbrt@@Base+0x140>  // b.first
   34d50:	mov	x22, x8
   34d54:	b	34d60 <mpfr_cbrt@@Base+0x148>
   34d58:	cmp	x22, #0x1
   34d5c:	b.lt	34d74 <mpfr_cbrt@@Base+0x15c>  // b.tstop
   34d60:	add	x0, sp, #0x10
   34d64:	add	x1, sp, #0x10
   34d68:	mov	x2, x22
   34d6c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   34d70:	sub	x21, x21, x22
   34d74:	add	x0, sp, #0x10
   34d78:	add	x1, sp, #0x10
   34d7c:	mov	w2, #0x3                   	// #3
   34d80:	bl	c7a0 <__gmpz_root@plt>
   34d84:	ldr	w8, [sp, #20]
   34d88:	ldr	x9, [sp, #24]
   34d8c:	cmp	w0, #0x0
   34d90:	cset	w24, eq  // eq = none
   34d94:	cmp	w8, #0x0
   34d98:	cneg	w8, w8, mi  // mi = first
   34d9c:	add	x9, x9, w8, uxtw #3
   34da0:	ldur	x9, [x9, #-8]
   34da4:	lsl	x8, x8, #6
   34da8:	clz	x9, x9
   34dac:	sub	x8, x8, x9
   34db0:	sub	x22, x8, x28
   34db4:	cmp	x22, #0x1
   34db8:	b.lt	34df4 <mpfr_cbrt@@Base+0x1dc>  // b.tstop
   34dbc:	cbz	w0, 34dd8 <mpfr_cbrt@@Base+0x1c0>
   34dc0:	add	x0, sp, #0x10
   34dc4:	mov	x1, xzr
   34dc8:	bl	bee0 <__gmpz_scan1@plt>
   34dcc:	cmp	x0, x22
   34dd0:	cset	w24, lt  // lt = tstop
   34dd4:	b	34ddc <mpfr_cbrt@@Base+0x1c4>
   34dd8:	mov	w24, #0x1                   	// #1
   34ddc:	add	x0, sp, #0x10
   34de0:	add	x1, sp, #0x10
   34de4:	mov	x2, x22
   34de8:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   34dec:	add	x8, x22, x22, lsl #1
   34df0:	add	x21, x8, x21
   34df4:	cbz	w24, 34e54 <mpfr_cbrt@@Base+0x23c>
   34df8:	cmp	w20, #0x3
   34dfc:	mov	w8, #0x2                   	// #2
   34e00:	mov	w9, #0x3                   	// #3
   34e04:	csel	w8, w8, w20, eq  // eq = none
   34e08:	cmp	w20, #0x2
   34e0c:	csel	w8, w9, w8, eq  // eq = none
   34e10:	cmp	w27, #0x0
   34e14:	csel	w20, w8, w20, lt  // lt = tstop
   34e18:	cmp	w20, #0x4
   34e1c:	b.eq	34e3c <mpfr_cbrt@@Base+0x224>  // b.none
   34e20:	cmp	w20, #0x2
   34e24:	b.eq	34e3c <mpfr_cbrt@@Base+0x224>  // b.none
   34e28:	cbnz	w20, 34e5c <mpfr_cbrt@@Base+0x244>
   34e2c:	add	x0, sp, #0x10
   34e30:	mov	x1, xzr
   34e34:	bl	c450 <__gmpz_tstbit@plt>
   34e38:	cbz	w0, 34e5c <mpfr_cbrt@@Base+0x244>
   34e3c:	add	x0, sp, #0x10
   34e40:	add	x1, sp, #0x10
   34e44:	mov	w2, #0x1                   	// #1
   34e48:	mov	w22, #0x1                   	// #1
   34e4c:	bl	c820 <__gmpz_add_ui@plt>
   34e50:	b	34e60 <mpfr_cbrt@@Base+0x248>
   34e54:	mov	w22, wzr
   34e58:	b	34e60 <mpfr_cbrt@@Base+0x248>
   34e5c:	mov	w22, #0xffffffff            	// #-1
   34e60:	add	x1, sp, #0x10
   34e64:	mov	x0, x19
   34e68:	mov	w2, wzr
   34e6c:	bl	c6e0 <mpfr_set_z@plt>
   34e70:	ldr	x8, [x19, #16]
   34e74:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   34e78:	movk	x9, #0x5556
   34e7c:	smulh	x9, x21, x9
   34e80:	add	x9, x9, x9, lsr #63
   34e84:	add	w22, w0, w22
   34e88:	add	x8, x8, x9
   34e8c:	str	x8, [x19, #16]
   34e90:	tbz	w27, #31, 34ea4 <mpfr_cbrt@@Base+0x28c>
   34e94:	ldr	w8, [x19, #8]
   34e98:	neg	w22, w22
   34e9c:	neg	w8, w8
   34ea0:	str	w8, [x19, #8]
   34ea4:	add	x0, sp, #0x10
   34ea8:	bl	c610 <mpfr_mpz_clear@plt>
   34eac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34eb0:	ldr	x1, [x0, #2800]
   34eb4:	add	x0, x0, #0xaf0
   34eb8:	blr	x1
   34ebc:	ldr	w9, [sp, #12]
   34ec0:	str	w9, [x23, x0]
   34ec4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34ec8:	ldr	x1, [x0, #2736]
   34ecc:	add	x0, x0, #0xab0
   34ed0:	blr	x1
   34ed4:	str	x25, [x23, x0]
   34ed8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34edc:	ldr	x1, [x0, #2768]
   34ee0:	add	x0, x0, #0xad0
   34ee4:	blr	x1
   34ee8:	str	x26, [x23, x0]
   34eec:	ldr	x8, [x19, #16]
   34ef0:	cmp	x8, x26
   34ef4:	b.gt	34f74 <mpfr_cbrt@@Base+0x35c>
   34ef8:	cmp	x8, x25
   34efc:	b.lt	34f74 <mpfr_cbrt@@Base+0x35c>  // b.tstop
   34f00:	cbz	w22, 34f1c <mpfr_cbrt@@Base+0x304>
   34f04:	orr	w8, w9, #0x8
   34f08:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34f0c:	ldr	x1, [x0, #2800]
   34f10:	add	x0, x0, #0xaf0
   34f14:	blr	x1
   34f18:	str	w8, [x23, x0]
   34f1c:	mov	w0, w22
   34f20:	ldp	x20, x19, [sp, #112]
   34f24:	ldp	x22, x21, [sp, #96]
   34f28:	ldp	x24, x23, [sp, #80]
   34f2c:	ldp	x26, x25, [sp, #64]
   34f30:	ldp	x28, x27, [sp, #48]
   34f34:	ldp	x29, x30, [sp, #32]
   34f38:	add	sp, sp, #0x80
   34f3c:	ret
   34f40:	cmp	x8, x9
   34f44:	b.ne	34f8c <mpfr_cbrt@@Base+0x374>  // b.any
   34f48:	str	x9, [x19, #16]
   34f4c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   34f50:	ldr	x1, [x0, #2800]
   34f54:	add	x0, x0, #0xaf0
   34f58:	blr	x1
   34f5c:	mrs	x8, tpidr_el0
   34f60:	ldr	w9, [x8, x0]
   34f64:	mov	w22, wzr
   34f68:	orr	w9, w9, #0x4
   34f6c:	str	w9, [x8, x0]
   34f70:	b	34f1c <mpfr_cbrt@@Base+0x304>
   34f74:	mov	x0, x19
   34f78:	mov	w1, w22
   34f7c:	mov	w2, w20
   34f80:	bl	d020 <mpfr_check_range@plt>
   34f84:	mov	w22, w0
   34f88:	b	34f1c <mpfr_cbrt@@Base+0x304>
   34f8c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   34f90:	cmp	x8, x9
   34f94:	b.ne	34fa4 <mpfr_cbrt@@Base+0x38c>  // b.any
   34f98:	mov	w22, wzr
   34f9c:	str	x9, [x19, #16]
   34fa0:	b	34fb0 <mpfr_cbrt@@Base+0x398>
   34fa4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   34fa8:	mov	w22, wzr
   34fac:	str	x8, [x19, #16]
   34fb0:	ldr	w8, [x21, #8]
   34fb4:	str	w8, [x19, #8]
   34fb8:	b	34f1c <mpfr_cbrt@@Base+0x304>

0000000000034fbc <mpfr_fits_sshort_p@@Base>:
   34fbc:	sub	sp, sp, #0x60
   34fc0:	stp	x29, x30, [sp, #32]
   34fc4:	stp	x24, x23, [sp, #48]
   34fc8:	stp	x22, x21, [sp, #64]
   34fcc:	stp	x20, x19, [sp, #80]
   34fd0:	ldr	x23, [x0, #16]
   34fd4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   34fd8:	add	x29, sp, #0x20
   34fdc:	cmp	x23, x8
   34fe0:	b.le	350d0 <mpfr_fits_sshort_p@@Base+0x114>
   34fe4:	cmp	x23, #0x1
   34fe8:	b.lt	35070 <mpfr_fits_sshort_p@@Base+0xb4>  // b.tstop
   34fec:	ldr	w24, [x0, #8]
   34ff0:	mov	w8, #0xf                   	// #15
   34ff4:	mov	x19, x0
   34ff8:	cmp	w24, #0x0
   34ffc:	cinc	w8, w8, lt  // lt = tstop
   35000:	sub	w9, w8, #0x1
   35004:	cmp	x23, w9, sxtw
   35008:	b.le	35070 <mpfr_fits_sshort_p@@Base+0xb4>
   3500c:	add	w9, w8, #0x1
   35010:	cmp	x23, x9
   35014:	b.ge	35090 <mpfr_fits_sshort_p@@Base+0xd4>  // b.tcont
   35018:	mov	w20, w1
   3501c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35020:	ldr	x1, [x0, #2800]
   35024:	add	x0, x0, #0xaf0
   35028:	blr	x1
   3502c:	mrs	x21, tpidr_el0
   35030:	ldr	w22, [x21, x0]
   35034:	mov	w1, w8
   35038:	mov	x0, sp
   3503c:	bl	cf60 <mpfr_init2@plt>
   35040:	ldr	w3, [x19, #8]
   35044:	cmp	w20, #0x5
   35048:	mov	w8, #0x4                   	// #4
   3504c:	csel	w2, w8, w20, eq  // eq = none
   35050:	mov	x0, sp
   35054:	mov	x1, x19
   35058:	bl	cb70 <mpfr_set4@plt>
   3505c:	tbnz	w24, #31, 35098 <mpfr_fits_sshort_p@@Base+0xdc>
   35060:	ldr	x8, [sp, #16]
   35064:	cmp	x8, x23
   35068:	cset	w19, eq  // eq = none
   3506c:	b	350b0 <mpfr_fits_sshort_p@@Base+0xf4>
   35070:	mov	w19, #0x1                   	// #1
   35074:	mov	w0, w19
   35078:	ldp	x20, x19, [sp, #80]
   3507c:	ldp	x22, x21, [sp, #64]
   35080:	ldp	x24, x23, [sp, #48]
   35084:	ldp	x29, x30, [sp, #32]
   35088:	add	sp, sp, #0x60
   3508c:	ret
   35090:	mov	w19, wzr
   35094:	b	35074 <mpfr_fits_sshort_p@@Base+0xb8>
   35098:	mov	x0, sp
   3509c:	mov	x1, #0xffffffffffff8000    	// #-32768
   350a0:	mov	x2, xzr
   350a4:	bl	c890 <mpfr_cmp_si_2exp@plt>
   350a8:	mvn	w8, w0
   350ac:	lsr	w19, w8, #31
   350b0:	mov	x0, sp
   350b4:	bl	c4f0 <mpfr_clear@plt>
   350b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   350bc:	ldr	x1, [x0, #2800]
   350c0:	add	x0, x0, #0xaf0
   350c4:	blr	x1
   350c8:	str	w22, [x21, x0]
   350cc:	b	35074 <mpfr_fits_sshort_p@@Base+0xb8>
   350d0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   350d4:	cmp	x23, x8
   350d8:	cset	w19, eq  // eq = none
   350dc:	b	35074 <mpfr_fits_sshort_p@@Base+0xb8>

00000000000350e0 <mpfr_fits_sint_p@@Base>:
   350e0:	sub	sp, sp, #0x60
   350e4:	stp	x29, x30, [sp, #32]
   350e8:	stp	x24, x23, [sp, #48]
   350ec:	stp	x22, x21, [sp, #64]
   350f0:	stp	x20, x19, [sp, #80]
   350f4:	ldr	x23, [x0, #16]
   350f8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   350fc:	add	x29, sp, #0x20
   35100:	cmp	x23, x8
   35104:	b.le	351f4 <mpfr_fits_sint_p@@Base+0x114>
   35108:	cmp	x23, #0x1
   3510c:	b.lt	35194 <mpfr_fits_sint_p@@Base+0xb4>  // b.tstop
   35110:	ldr	w24, [x0, #8]
   35114:	mov	w8, #0x1f                  	// #31
   35118:	mov	x19, x0
   3511c:	cmp	w24, #0x0
   35120:	cinc	w8, w8, lt  // lt = tstop
   35124:	sub	w9, w8, #0x1
   35128:	cmp	x23, w9, sxtw
   3512c:	b.le	35194 <mpfr_fits_sint_p@@Base+0xb4>
   35130:	add	w9, w8, #0x1
   35134:	cmp	x23, x9
   35138:	b.ge	351b4 <mpfr_fits_sint_p@@Base+0xd4>  // b.tcont
   3513c:	mov	w20, w1
   35140:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35144:	ldr	x1, [x0, #2800]
   35148:	add	x0, x0, #0xaf0
   3514c:	blr	x1
   35150:	mrs	x21, tpidr_el0
   35154:	ldr	w22, [x21, x0]
   35158:	mov	w1, w8
   3515c:	mov	x0, sp
   35160:	bl	cf60 <mpfr_init2@plt>
   35164:	ldr	w3, [x19, #8]
   35168:	cmp	w20, #0x5
   3516c:	mov	w8, #0x4                   	// #4
   35170:	csel	w2, w8, w20, eq  // eq = none
   35174:	mov	x0, sp
   35178:	mov	x1, x19
   3517c:	bl	cb70 <mpfr_set4@plt>
   35180:	tbnz	w24, #31, 351bc <mpfr_fits_sint_p@@Base+0xdc>
   35184:	ldr	x8, [sp, #16]
   35188:	cmp	x8, x23
   3518c:	cset	w19, eq  // eq = none
   35190:	b	351d4 <mpfr_fits_sint_p@@Base+0xf4>
   35194:	mov	w19, #0x1                   	// #1
   35198:	mov	w0, w19
   3519c:	ldp	x20, x19, [sp, #80]
   351a0:	ldp	x22, x21, [sp, #64]
   351a4:	ldp	x24, x23, [sp, #48]
   351a8:	ldp	x29, x30, [sp, #32]
   351ac:	add	sp, sp, #0x60
   351b0:	ret
   351b4:	mov	w19, wzr
   351b8:	b	35198 <mpfr_fits_sint_p@@Base+0xb8>
   351bc:	mov	x0, sp
   351c0:	mov	x1, #0xffffffff80000000    	// #-2147483648
   351c4:	mov	x2, xzr
   351c8:	bl	c890 <mpfr_cmp_si_2exp@plt>
   351cc:	mvn	w8, w0
   351d0:	lsr	w19, w8, #31
   351d4:	mov	x0, sp
   351d8:	bl	c4f0 <mpfr_clear@plt>
   351dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   351e0:	ldr	x1, [x0, #2800]
   351e4:	add	x0, x0, #0xaf0
   351e8:	blr	x1
   351ec:	str	w22, [x21, x0]
   351f0:	b	35198 <mpfr_fits_sint_p@@Base+0xb8>
   351f4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   351f8:	cmp	x23, x8
   351fc:	cset	w19, eq  // eq = none
   35200:	b	35198 <mpfr_fits_sint_p@@Base+0xb8>

0000000000035204 <mpfr_fits_slong_p@@Base>:
   35204:	sub	sp, sp, #0x60
   35208:	stp	x29, x30, [sp, #32]
   3520c:	stp	x24, x23, [sp, #48]
   35210:	stp	x22, x21, [sp, #64]
   35214:	stp	x20, x19, [sp, #80]
   35218:	ldr	x23, [x0, #16]
   3521c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   35220:	add	x29, sp, #0x20
   35224:	cmp	x23, x8
   35228:	b.le	35318 <mpfr_fits_slong_p@@Base+0x114>
   3522c:	cmp	x23, #0x1
   35230:	b.lt	352b8 <mpfr_fits_slong_p@@Base+0xb4>  // b.tstop
   35234:	ldr	w24, [x0, #8]
   35238:	mov	w8, #0x3f                  	// #63
   3523c:	mov	x19, x0
   35240:	cmp	w24, #0x0
   35244:	cinc	w8, w8, lt  // lt = tstop
   35248:	sub	w9, w8, #0x1
   3524c:	cmp	x23, w9, sxtw
   35250:	b.le	352b8 <mpfr_fits_slong_p@@Base+0xb4>
   35254:	add	w9, w8, #0x1
   35258:	cmp	x23, x9
   3525c:	b.ge	352d8 <mpfr_fits_slong_p@@Base+0xd4>  // b.tcont
   35260:	mov	w20, w1
   35264:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35268:	ldr	x1, [x0, #2800]
   3526c:	add	x0, x0, #0xaf0
   35270:	blr	x1
   35274:	mrs	x21, tpidr_el0
   35278:	ldr	w22, [x21, x0]
   3527c:	mov	w1, w8
   35280:	mov	x0, sp
   35284:	bl	cf60 <mpfr_init2@plt>
   35288:	ldr	w3, [x19, #8]
   3528c:	cmp	w20, #0x5
   35290:	mov	w8, #0x4                   	// #4
   35294:	csel	w2, w8, w20, eq  // eq = none
   35298:	mov	x0, sp
   3529c:	mov	x1, x19
   352a0:	bl	cb70 <mpfr_set4@plt>
   352a4:	tbnz	w24, #31, 352e0 <mpfr_fits_slong_p@@Base+0xdc>
   352a8:	ldr	x8, [sp, #16]
   352ac:	cmp	x8, x23
   352b0:	cset	w19, eq  // eq = none
   352b4:	b	352f8 <mpfr_fits_slong_p@@Base+0xf4>
   352b8:	mov	w19, #0x1                   	// #1
   352bc:	mov	w0, w19
   352c0:	ldp	x20, x19, [sp, #80]
   352c4:	ldp	x22, x21, [sp, #64]
   352c8:	ldp	x24, x23, [sp, #48]
   352cc:	ldp	x29, x30, [sp, #32]
   352d0:	add	sp, sp, #0x60
   352d4:	ret
   352d8:	mov	w19, wzr
   352dc:	b	352bc <mpfr_fits_slong_p@@Base+0xb8>
   352e0:	mov	x0, sp
   352e4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   352e8:	mov	x2, xzr
   352ec:	bl	c890 <mpfr_cmp_si_2exp@plt>
   352f0:	mvn	w8, w0
   352f4:	lsr	w19, w8, #31
   352f8:	mov	x0, sp
   352fc:	bl	c4f0 <mpfr_clear@plt>
   35300:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35304:	ldr	x1, [x0, #2800]
   35308:	add	x0, x0, #0xaf0
   3530c:	blr	x1
   35310:	str	w22, [x21, x0]
   35314:	b	352bc <mpfr_fits_slong_p@@Base+0xb8>
   35318:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3531c:	cmp	x23, x8
   35320:	cset	w19, eq  // eq = none
   35324:	b	352bc <mpfr_fits_slong_p@@Base+0xb8>

0000000000035328 <mpfr_fits_ushort_p@@Base>:
   35328:	sub	sp, sp, #0x60
   3532c:	stp	x29, x30, [sp, #32]
   35330:	stp	x24, x23, [sp, #48]
   35334:	stp	x22, x21, [sp, #64]
   35338:	stp	x20, x19, [sp, #80]
   3533c:	ldr	x22, [x0, #16]
   35340:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   35344:	add	x29, sp, #0x20
   35348:	cmp	x22, x8
   3534c:	b.le	35424 <mpfr_fits_ushort_p@@Base+0xfc>
   35350:	ldr	w8, [x0, #8]
   35354:	mov	x19, x0
   35358:	mov	w20, w1
   3535c:	tbnz	w8, #31, 353cc <mpfr_fits_ushort_p@@Base+0xa4>
   35360:	cmp	x22, #0x10
   35364:	b.lt	35404 <mpfr_fits_ushort_p@@Base+0xdc>  // b.tstop
   35368:	b.ne	353d4 <mpfr_fits_ushort_p@@Base+0xac>  // b.any
   3536c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35370:	ldr	x1, [x0, #2800]
   35374:	add	x0, x0, #0xaf0
   35378:	blr	x1
   3537c:	mrs	x23, tpidr_el0
   35380:	ldr	w24, [x23, x0]
   35384:	mov	x21, x0
   35388:	mov	x0, sp
   3538c:	mov	w1, #0x10                  	// #16
   35390:	bl	cf60 <mpfr_init2@plt>
   35394:	ldr	w3, [x19, #8]
   35398:	cmp	w20, #0x5
   3539c:	mov	w8, #0x2                   	// #2
   353a0:	csel	w2, w8, w20, eq  // eq = none
   353a4:	mov	x0, sp
   353a8:	mov	x1, x19
   353ac:	bl	cb70 <mpfr_set4@plt>
   353b0:	ldr	x8, [sp, #16]
   353b4:	mov	x0, sp
   353b8:	cmp	x8, x22
   353bc:	cset	w19, eq  // eq = none
   353c0:	bl	c4f0 <mpfr_clear@plt>
   353c4:	str	w24, [x23, x21]
   353c8:	b	35408 <mpfr_fits_ushort_p@@Base+0xe0>
   353cc:	cmp	x22, #0x0
   353d0:	b.le	353dc <mpfr_fits_ushort_p@@Base+0xb4>
   353d4:	mov	w19, wzr
   353d8:	b	35408 <mpfr_fits_ushort_p@@Base+0xe0>
   353dc:	cbz	w20, 353f0 <mpfr_fits_ushort_p@@Base+0xc8>
   353e0:	sub	w8, w20, #0x1
   353e4:	cmp	w8, #0x2
   353e8:	cset	w19, cc  // cc = lo, ul, last
   353ec:	b	35408 <mpfr_fits_ushort_p@@Base+0xe0>
   353f0:	tbnz	x22, #63, 35404 <mpfr_fits_ushort_p@@Base+0xdc>
   353f4:	mov	x0, x19
   353f8:	bl	c360 <mpfr_powerof2_raw@plt>
   353fc:	mov	w19, w0
   35400:	b	35408 <mpfr_fits_ushort_p@@Base+0xe0>
   35404:	mov	w19, #0x1                   	// #1
   35408:	mov	w0, w19
   3540c:	ldp	x20, x19, [sp, #80]
   35410:	ldp	x22, x21, [sp, #64]
   35414:	ldp	x24, x23, [sp, #48]
   35418:	ldp	x29, x30, [sp, #32]
   3541c:	add	sp, sp, #0x60
   35420:	ret
   35424:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   35428:	cmp	x22, x8
   3542c:	cset	w19, eq  // eq = none
   35430:	b	35408 <mpfr_fits_ushort_p@@Base+0xe0>

0000000000035434 <mpfr_fits_uint_p@@Base>:
   35434:	sub	sp, sp, #0x60
   35438:	stp	x29, x30, [sp, #32]
   3543c:	stp	x24, x23, [sp, #48]
   35440:	stp	x22, x21, [sp, #64]
   35444:	stp	x20, x19, [sp, #80]
   35448:	ldr	x22, [x0, #16]
   3544c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   35450:	add	x29, sp, #0x20
   35454:	cmp	x22, x8
   35458:	b.le	35530 <mpfr_fits_uint_p@@Base+0xfc>
   3545c:	ldr	w8, [x0, #8]
   35460:	mov	x19, x0
   35464:	mov	w20, w1
   35468:	tbnz	w8, #31, 354d8 <mpfr_fits_uint_p@@Base+0xa4>
   3546c:	cmp	x22, #0x20
   35470:	b.lt	35510 <mpfr_fits_uint_p@@Base+0xdc>  // b.tstop
   35474:	b.ne	354e0 <mpfr_fits_uint_p@@Base+0xac>  // b.any
   35478:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3547c:	ldr	x1, [x0, #2800]
   35480:	add	x0, x0, #0xaf0
   35484:	blr	x1
   35488:	mrs	x23, tpidr_el0
   3548c:	ldr	w24, [x23, x0]
   35490:	mov	x21, x0
   35494:	mov	x0, sp
   35498:	mov	w1, #0x20                  	// #32
   3549c:	bl	cf60 <mpfr_init2@plt>
   354a0:	ldr	w3, [x19, #8]
   354a4:	cmp	w20, #0x5
   354a8:	mov	w8, #0x2                   	// #2
   354ac:	csel	w2, w8, w20, eq  // eq = none
   354b0:	mov	x0, sp
   354b4:	mov	x1, x19
   354b8:	bl	cb70 <mpfr_set4@plt>
   354bc:	ldr	x8, [sp, #16]
   354c0:	mov	x0, sp
   354c4:	cmp	x8, x22
   354c8:	cset	w19, eq  // eq = none
   354cc:	bl	c4f0 <mpfr_clear@plt>
   354d0:	str	w24, [x23, x21]
   354d4:	b	35514 <mpfr_fits_uint_p@@Base+0xe0>
   354d8:	cmp	x22, #0x0
   354dc:	b.le	354e8 <mpfr_fits_uint_p@@Base+0xb4>
   354e0:	mov	w19, wzr
   354e4:	b	35514 <mpfr_fits_uint_p@@Base+0xe0>
   354e8:	cbz	w20, 354fc <mpfr_fits_uint_p@@Base+0xc8>
   354ec:	sub	w8, w20, #0x1
   354f0:	cmp	w8, #0x2
   354f4:	cset	w19, cc  // cc = lo, ul, last
   354f8:	b	35514 <mpfr_fits_uint_p@@Base+0xe0>
   354fc:	tbnz	x22, #63, 35510 <mpfr_fits_uint_p@@Base+0xdc>
   35500:	mov	x0, x19
   35504:	bl	c360 <mpfr_powerof2_raw@plt>
   35508:	mov	w19, w0
   3550c:	b	35514 <mpfr_fits_uint_p@@Base+0xe0>
   35510:	mov	w19, #0x1                   	// #1
   35514:	mov	w0, w19
   35518:	ldp	x20, x19, [sp, #80]
   3551c:	ldp	x22, x21, [sp, #64]
   35520:	ldp	x24, x23, [sp, #48]
   35524:	ldp	x29, x30, [sp, #32]
   35528:	add	sp, sp, #0x60
   3552c:	ret
   35530:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   35534:	cmp	x22, x8
   35538:	cset	w19, eq  // eq = none
   3553c:	b	35514 <mpfr_fits_uint_p@@Base+0xe0>

0000000000035540 <mpfr_fits_ulong_p@@Base>:
   35540:	sub	sp, sp, #0x60
   35544:	stp	x29, x30, [sp, #32]
   35548:	stp	x24, x23, [sp, #48]
   3554c:	stp	x22, x21, [sp, #64]
   35550:	stp	x20, x19, [sp, #80]
   35554:	ldr	x22, [x0, #16]
   35558:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3555c:	add	x29, sp, #0x20
   35560:	cmp	x22, x8
   35564:	b.le	3563c <mpfr_fits_ulong_p@@Base+0xfc>
   35568:	ldr	w8, [x0, #8]
   3556c:	mov	x19, x0
   35570:	mov	w20, w1
   35574:	tbnz	w8, #31, 355e4 <mpfr_fits_ulong_p@@Base+0xa4>
   35578:	cmp	x22, #0x40
   3557c:	b.lt	3561c <mpfr_fits_ulong_p@@Base+0xdc>  // b.tstop
   35580:	b.ne	355ec <mpfr_fits_ulong_p@@Base+0xac>  // b.any
   35584:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35588:	ldr	x1, [x0, #2800]
   3558c:	add	x0, x0, #0xaf0
   35590:	blr	x1
   35594:	mrs	x23, tpidr_el0
   35598:	ldr	w24, [x23, x0]
   3559c:	mov	x21, x0
   355a0:	mov	x0, sp
   355a4:	mov	w1, #0x40                  	// #64
   355a8:	bl	cf60 <mpfr_init2@plt>
   355ac:	ldr	w3, [x19, #8]
   355b0:	cmp	w20, #0x5
   355b4:	mov	w8, #0x2                   	// #2
   355b8:	csel	w2, w8, w20, eq  // eq = none
   355bc:	mov	x0, sp
   355c0:	mov	x1, x19
   355c4:	bl	cb70 <mpfr_set4@plt>
   355c8:	ldr	x8, [sp, #16]
   355cc:	mov	x0, sp
   355d0:	cmp	x8, x22
   355d4:	cset	w19, eq  // eq = none
   355d8:	bl	c4f0 <mpfr_clear@plt>
   355dc:	str	w24, [x23, x21]
   355e0:	b	35620 <mpfr_fits_ulong_p@@Base+0xe0>
   355e4:	cmp	x22, #0x0
   355e8:	b.le	355f4 <mpfr_fits_ulong_p@@Base+0xb4>
   355ec:	mov	w19, wzr
   355f0:	b	35620 <mpfr_fits_ulong_p@@Base+0xe0>
   355f4:	cbz	w20, 35608 <mpfr_fits_ulong_p@@Base+0xc8>
   355f8:	sub	w8, w20, #0x1
   355fc:	cmp	w8, #0x2
   35600:	cset	w19, cc  // cc = lo, ul, last
   35604:	b	35620 <mpfr_fits_ulong_p@@Base+0xe0>
   35608:	tbnz	x22, #63, 3561c <mpfr_fits_ulong_p@@Base+0xdc>
   3560c:	mov	x0, x19
   35610:	bl	c360 <mpfr_powerof2_raw@plt>
   35614:	mov	w19, w0
   35618:	b	35620 <mpfr_fits_ulong_p@@Base+0xe0>
   3561c:	mov	w19, #0x1                   	// #1
   35620:	mov	w0, w19
   35624:	ldp	x20, x19, [sp, #80]
   35628:	ldp	x22, x21, [sp, #64]
   3562c:	ldp	x24, x23, [sp, #48]
   35630:	ldp	x29, x30, [sp, #32]
   35634:	add	sp, sp, #0x60
   35638:	ret
   3563c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   35640:	cmp	x22, x8
   35644:	cset	w19, eq  // eq = none
   35648:	b	35620 <mpfr_fits_ulong_p@@Base+0xe0>

000000000003564c <mpfr_fits_uintmax_p@@Base>:
   3564c:	sub	sp, sp, #0x60
   35650:	stp	x29, x30, [sp, #32]
   35654:	stp	x24, x23, [sp, #48]
   35658:	stp	x22, x21, [sp, #64]
   3565c:	stp	x20, x19, [sp, #80]
   35660:	ldr	x22, [x0, #16]
   35664:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   35668:	add	x29, sp, #0x20
   3566c:	cmp	x22, x8
   35670:	b.le	35748 <mpfr_fits_uintmax_p@@Base+0xfc>
   35674:	ldr	w8, [x0, #8]
   35678:	mov	x19, x0
   3567c:	mov	w20, w1
   35680:	tbnz	w8, #31, 356f0 <mpfr_fits_uintmax_p@@Base+0xa4>
   35684:	cmp	x22, #0x40
   35688:	b.lt	35728 <mpfr_fits_uintmax_p@@Base+0xdc>  // b.tstop
   3568c:	b.ne	356f8 <mpfr_fits_uintmax_p@@Base+0xac>  // b.any
   35690:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35694:	ldr	x1, [x0, #2800]
   35698:	add	x0, x0, #0xaf0
   3569c:	blr	x1
   356a0:	mrs	x23, tpidr_el0
   356a4:	ldr	w24, [x23, x0]
   356a8:	mov	x21, x0
   356ac:	mov	x0, sp
   356b0:	mov	w1, #0x40                  	// #64
   356b4:	bl	cf60 <mpfr_init2@plt>
   356b8:	ldr	w3, [x19, #8]
   356bc:	cmp	w20, #0x5
   356c0:	mov	w8, #0x2                   	// #2
   356c4:	csel	w2, w8, w20, eq  // eq = none
   356c8:	mov	x0, sp
   356cc:	mov	x1, x19
   356d0:	bl	cb70 <mpfr_set4@plt>
   356d4:	ldr	x8, [sp, #16]
   356d8:	mov	x0, sp
   356dc:	cmp	x8, x22
   356e0:	cset	w19, eq  // eq = none
   356e4:	bl	c4f0 <mpfr_clear@plt>
   356e8:	str	w24, [x23, x21]
   356ec:	b	3572c <mpfr_fits_uintmax_p@@Base+0xe0>
   356f0:	cmp	x22, #0x0
   356f4:	b.le	35700 <mpfr_fits_uintmax_p@@Base+0xb4>
   356f8:	mov	w19, wzr
   356fc:	b	3572c <mpfr_fits_uintmax_p@@Base+0xe0>
   35700:	cbz	w20, 35714 <mpfr_fits_uintmax_p@@Base+0xc8>
   35704:	sub	w8, w20, #0x1
   35708:	cmp	w8, #0x2
   3570c:	cset	w19, cc  // cc = lo, ul, last
   35710:	b	3572c <mpfr_fits_uintmax_p@@Base+0xe0>
   35714:	tbnz	x22, #63, 35728 <mpfr_fits_uintmax_p@@Base+0xdc>
   35718:	mov	x0, x19
   3571c:	bl	c360 <mpfr_powerof2_raw@plt>
   35720:	mov	w19, w0
   35724:	b	3572c <mpfr_fits_uintmax_p@@Base+0xe0>
   35728:	mov	w19, #0x1                   	// #1
   3572c:	mov	w0, w19
   35730:	ldp	x20, x19, [sp, #80]
   35734:	ldp	x22, x21, [sp, #64]
   35738:	ldp	x24, x23, [sp, #48]
   3573c:	ldp	x29, x30, [sp, #32]
   35740:	add	sp, sp, #0x60
   35744:	ret
   35748:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3574c:	cmp	x22, x8
   35750:	cset	w19, eq  // eq = none
   35754:	b	3572c <mpfr_fits_uintmax_p@@Base+0xe0>

0000000000035758 <mpfr_fits_intmax_p@@Base>:
   35758:	sub	sp, sp, #0x90
   3575c:	stp	x29, x30, [sp, #64]
   35760:	stp	x24, x23, [sp, #96]
   35764:	stp	x22, x21, [sp, #112]
   35768:	stp	x20, x19, [sp, #128]
   3576c:	ldr	x24, [x0, #16]
   35770:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   35774:	str	x25, [sp, #80]
   35778:	add	x29, sp, #0x40
   3577c:	cmp	x24, x8
   35780:	b.le	3589c <mpfr_fits_intmax_p@@Base+0x144>
   35784:	cmp	x24, #0x1
   35788:	b.lt	35814 <mpfr_fits_intmax_p@@Base+0xbc>  // b.tstop
   3578c:	ldr	w25, [x0, #8]
   35790:	mov	w8, #0x3f                  	// #63
   35794:	mov	x19, x0
   35798:	cmp	w25, #0x0
   3579c:	cinc	w8, w8, lt  // lt = tstop
   357a0:	sub	w9, w8, #0x1
   357a4:	cmp	x24, w9, sxtw
   357a8:	b.le	35814 <mpfr_fits_intmax_p@@Base+0xbc>
   357ac:	add	w9, w8, #0x1
   357b0:	cmp	x24, x9
   357b4:	b.ge	35838 <mpfr_fits_intmax_p@@Base+0xe0>  // b.tcont
   357b8:	mov	w20, w1
   357bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   357c0:	ldr	x1, [x0, #2800]
   357c4:	add	x0, x0, #0xaf0
   357c8:	blr	x1
   357cc:	mrs	x22, tpidr_el0
   357d0:	ldr	w23, [x22, x0]
   357d4:	mov	w21, w8
   357d8:	add	x0, sp, #0x20
   357dc:	mov	x1, x21
   357e0:	bl	cf60 <mpfr_init2@plt>
   357e4:	ldr	w3, [x19, #8]
   357e8:	cmp	w20, #0x5
   357ec:	mov	w8, #0x4                   	// #4
   357f0:	csel	w2, w8, w20, eq  // eq = none
   357f4:	add	x0, sp, #0x20
   357f8:	mov	x1, x19
   357fc:	bl	cb70 <mpfr_set4@plt>
   35800:	tbnz	w25, #31, 35840 <mpfr_fits_intmax_p@@Base+0xe8>
   35804:	ldr	x8, [sp, #48]
   35808:	cmp	x8, x24
   3580c:	cset	w19, eq  // eq = none
   35810:	b	3587c <mpfr_fits_intmax_p@@Base+0x124>
   35814:	mov	w19, #0x1                   	// #1
   35818:	mov	w0, w19
   3581c:	ldp	x20, x19, [sp, #128]
   35820:	ldp	x22, x21, [sp, #112]
   35824:	ldp	x24, x23, [sp, #96]
   35828:	ldr	x25, [sp, #80]
   3582c:	ldp	x29, x30, [sp, #64]
   35830:	add	sp, sp, #0x90
   35834:	ret
   35838:	mov	w19, wzr
   3583c:	b	35818 <mpfr_fits_intmax_p@@Base+0xc0>
   35840:	mov	x0, sp
   35844:	mov	x1, x21
   35848:	bl	cf60 <mpfr_init2@plt>
   3584c:	mov	x0, sp
   35850:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   35854:	mov	w2, wzr
   35858:	bl	c510 <__gmpfr_set_sj@plt>
   3585c:	add	x0, sp, #0x20
   35860:	mov	x1, sp
   35864:	mov	w2, #0x1                   	// #1
   35868:	bl	ce90 <mpfr_cmp3@plt>
   3586c:	mvn	w8, w0
   35870:	mov	x0, sp
   35874:	lsr	w19, w8, #31
   35878:	bl	c4f0 <mpfr_clear@plt>
   3587c:	add	x0, sp, #0x20
   35880:	bl	c4f0 <mpfr_clear@plt>
   35884:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35888:	ldr	x1, [x0, #2800]
   3588c:	add	x0, x0, #0xaf0
   35890:	blr	x1
   35894:	str	w23, [x22, x0]
   35898:	b	35818 <mpfr_fits_intmax_p@@Base+0xc0>
   3589c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   358a0:	cmp	x24, x8
   358a4:	cset	w19, eq  // eq = none
   358a8:	b	35818 <mpfr_fits_intmax_p@@Base+0xc0>

00000000000358ac <mpfr_get_si@@Base>:
   358ac:	sub	sp, sp, #0x70
   358b0:	stp	x29, x30, [sp, #32]
   358b4:	stp	x26, x25, [sp, #48]
   358b8:	stp	x24, x23, [sp, #64]
   358bc:	stp	x22, x21, [sp, #80]
   358c0:	stp	x20, x19, [sp, #96]
   358c4:	add	x29, sp, #0x20
   358c8:	mov	w20, w1
   358cc:	mov	x19, x0
   358d0:	bl	cc70 <mpfr_fits_slong_p@plt>
   358d4:	cbz	w0, 35a1c <mpfr_get_si@@Base+0x170>
   358d8:	ldr	x8, [x19, #16]
   358dc:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   358e0:	cmp	x8, x25
   358e4:	b.ne	358f0 <mpfr_get_si@@Base+0x44>  // b.any
   358e8:	mov	x19, xzr
   358ec:	b	359fc <mpfr_get_si@@Base+0x150>
   358f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   358f4:	ldr	x1, [x0, #2800]
   358f8:	add	x0, x0, #0xaf0
   358fc:	blr	x1
   35900:	mrs	x22, tpidr_el0
   35904:	ldr	w26, [x22, x0]
   35908:	mov	x21, x0
   3590c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35910:	ldr	x1, [x0, #2736]
   35914:	add	x0, x0, #0xab0
   35918:	blr	x1
   3591c:	ldr	x23, [x22, x0]
   35920:	mov	x8, x0
   35924:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35928:	ldr	x1, [x0, #2768]
   3592c:	add	x0, x0, #0xad0
   35930:	blr	x1
   35934:	ldr	x24, [x22, x0]
   35938:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3593c:	str	x9, [x22, x8]
   35940:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   35944:	str	x8, [x22, x0]
   35948:	mov	x0, sp
   3594c:	mov	w1, #0x3f                  	// #63
   35950:	bl	cf60 <mpfr_init2@plt>
   35954:	mov	x0, sp
   35958:	mov	x1, x19
   3595c:	mov	w2, w20
   35960:	bl	c7c0 <mpfr_rint@plt>
   35964:	ldr	x8, [sp, #16]
   35968:	ldr	w9, [x22, x21]
   3596c:	cmp	x8, x25
   35970:	orr	w20, w9, w26
   35974:	b.eq	35a64 <mpfr_get_si@@Base+0x1b8>  // b.none
   35978:	ldr	x9, [sp]
   3597c:	ldr	x10, [sp, #24]
   35980:	neg	x8, x8
   35984:	sub	x11, x9, #0x1
   35988:	add	x9, x9, #0x3e
   3598c:	cmp	x11, #0x0
   35990:	csel	x9, x9, x11, lt  // lt = tstop
   35994:	asr	x9, x9, #6
   35998:	ldr	x9, [x10, x9, lsl #3]
   3599c:	ldr	w10, [x19, #8]
   359a0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   359a4:	lsr	x8, x9, x8
   359a8:	cmp	x8, #0x0
   359ac:	csneg	x9, x11, x8, lt  // lt = tstop
   359b0:	cmp	w10, #0x0
   359b4:	csel	x19, x8, x9, gt
   359b8:	mov	x0, sp
   359bc:	bl	c4f0 <mpfr_clear@plt>
   359c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   359c4:	ldr	x1, [x0, #2800]
   359c8:	add	x0, x0, #0xaf0
   359cc:	blr	x1
   359d0:	str	w20, [x22, x0]
   359d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   359d8:	ldr	x1, [x0, #2736]
   359dc:	add	x0, x0, #0xab0
   359e0:	blr	x1
   359e4:	str	x23, [x22, x0]
   359e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   359ec:	ldr	x1, [x0, #2768]
   359f0:	add	x0, x0, #0xad0
   359f4:	blr	x1
   359f8:	str	x24, [x22, x0]
   359fc:	mov	x0, x19
   35a00:	ldp	x20, x19, [sp, #96]
   35a04:	ldp	x22, x21, [sp, #80]
   35a08:	ldp	x24, x23, [sp, #64]
   35a0c:	ldp	x26, x25, [sp, #48]
   35a10:	ldp	x29, x30, [sp, #32]
   35a14:	add	sp, sp, #0x70
   35a18:	ret
   35a1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35a20:	ldr	x1, [x0, #2800]
   35a24:	add	x0, x0, #0xaf0
   35a28:	blr	x1
   35a2c:	mrs	x8, tpidr_el0
   35a30:	ldr	w9, [x8, x0]
   35a34:	orr	w9, w9, #0x10
   35a38:	str	w9, [x8, x0]
   35a3c:	ldr	x8, [x19, #16]
   35a40:	mov	x9, #0x2                   	// #2
   35a44:	movk	x9, #0x8000, lsl #48
   35a48:	cmp	x8, x9
   35a4c:	b.eq	358e8 <mpfr_get_si@@Base+0x3c>  // b.none
   35a50:	ldr	w8, [x19, #8]
   35a54:	cmp	w8, #0x0
   35a58:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   35a5c:	cinv	x19, x8, ge  // ge = tcont
   35a60:	b	359fc <mpfr_get_si@@Base+0x150>
   35a64:	mov	x19, xzr
   35a68:	b	359b8 <mpfr_get_si@@Base+0x10c>

0000000000035a6c <mpfr_get_ui@@Base>:
   35a6c:	sub	sp, sp, #0x70
   35a70:	stp	x29, x30, [sp, #32]
   35a74:	stp	x26, x25, [sp, #48]
   35a78:	stp	x24, x23, [sp, #64]
   35a7c:	stp	x22, x21, [sp, #80]
   35a80:	stp	x20, x19, [sp, #96]
   35a84:	add	x29, sp, #0x20
   35a88:	mov	w20, w1
   35a8c:	mov	x19, x0
   35a90:	bl	c2b0 <mpfr_fits_ulong_p@plt>
   35a94:	cbz	w0, 35bcc <mpfr_get_ui@@Base+0x160>
   35a98:	ldr	x8, [x19, #16]
   35a9c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   35aa0:	cmp	x8, x25
   35aa4:	b.ne	35ab0 <mpfr_get_ui@@Base+0x44>  // b.any
   35aa8:	mov	x19, xzr
   35aac:	b	35bac <mpfr_get_ui@@Base+0x140>
   35ab0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35ab4:	ldr	x1, [x0, #2800]
   35ab8:	add	x0, x0, #0xaf0
   35abc:	blr	x1
   35ac0:	mrs	x22, tpidr_el0
   35ac4:	ldr	w26, [x22, x0]
   35ac8:	mov	x21, x0
   35acc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35ad0:	ldr	x1, [x0, #2736]
   35ad4:	add	x0, x0, #0xab0
   35ad8:	blr	x1
   35adc:	ldr	x23, [x22, x0]
   35ae0:	mov	x8, x0
   35ae4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35ae8:	ldr	x1, [x0, #2768]
   35aec:	add	x0, x0, #0xad0
   35af0:	blr	x1
   35af4:	ldr	x24, [x22, x0]
   35af8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   35afc:	str	x9, [x22, x8]
   35b00:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   35b04:	str	x8, [x22, x0]
   35b08:	mov	x0, sp
   35b0c:	mov	w1, #0x40                  	// #64
   35b10:	bl	cf60 <mpfr_init2@plt>
   35b14:	mov	x0, sp
   35b18:	mov	x1, x19
   35b1c:	mov	w2, w20
   35b20:	bl	c7c0 <mpfr_rint@plt>
   35b24:	ldr	x8, [sp, #16]
   35b28:	ldr	w9, [x22, x21]
   35b2c:	cmp	x8, x25
   35b30:	orr	w20, w9, w26
   35b34:	b.ne	35b40 <mpfr_get_ui@@Base+0xd4>  // b.any
   35b38:	mov	x19, xzr
   35b3c:	b	35b68 <mpfr_get_ui@@Base+0xfc>
   35b40:	ldr	x9, [sp]
   35b44:	ldr	x10, [sp, #24]
   35b48:	neg	x8, x8
   35b4c:	sub	x11, x9, #0x1
   35b50:	add	x9, x9, #0x3e
   35b54:	cmp	x11, #0x0
   35b58:	csel	x9, x9, x11, lt  // lt = tstop
   35b5c:	asr	x9, x9, #6
   35b60:	ldr	x9, [x10, x9, lsl #3]
   35b64:	lsr	x19, x9, x8
   35b68:	mov	x0, sp
   35b6c:	bl	c4f0 <mpfr_clear@plt>
   35b70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35b74:	ldr	x1, [x0, #2800]
   35b78:	add	x0, x0, #0xaf0
   35b7c:	blr	x1
   35b80:	str	w20, [x22, x0]
   35b84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35b88:	ldr	x1, [x0, #2736]
   35b8c:	add	x0, x0, #0xab0
   35b90:	blr	x1
   35b94:	str	x23, [x22, x0]
   35b98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35b9c:	ldr	x1, [x0, #2768]
   35ba0:	add	x0, x0, #0xad0
   35ba4:	blr	x1
   35ba8:	str	x24, [x22, x0]
   35bac:	mov	x0, x19
   35bb0:	ldp	x20, x19, [sp, #96]
   35bb4:	ldp	x22, x21, [sp, #80]
   35bb8:	ldp	x24, x23, [sp, #64]
   35bbc:	ldp	x26, x25, [sp, #48]
   35bc0:	ldp	x29, x30, [sp, #32]
   35bc4:	add	sp, sp, #0x70
   35bc8:	ret
   35bcc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35bd0:	ldr	x1, [x0, #2800]
   35bd4:	add	x0, x0, #0xaf0
   35bd8:	blr	x1
   35bdc:	mrs	x8, tpidr_el0
   35be0:	ldr	w9, [x8, x0]
   35be4:	orr	w9, w9, #0x10
   35be8:	str	w9, [x8, x0]
   35bec:	ldr	x8, [x19, #16]
   35bf0:	mov	x9, #0x2                   	// #2
   35bf4:	movk	x9, #0x8000, lsl #48
   35bf8:	cmp	x8, x9
   35bfc:	b.eq	35aa8 <mpfr_get_ui@@Base+0x3c>  // b.none
   35c00:	ldr	w8, [x19, #8]
   35c04:	mov	w9, #0xffffffff            	// #-1
   35c08:	eor	w8, w9, w8, asr #31
   35c0c:	sxtw	x19, w8
   35c10:	b	35bac <mpfr_get_ui@@Base+0x140>

0000000000035c14 <mpfr_zeta@@Base>:
   35c14:	sub	sp, sp, #0x1f0
   35c18:	stp	x29, x30, [sp, #400]
   35c1c:	stp	x28, x27, [sp, #416]
   35c20:	stp	x26, x25, [sp, #432]
   35c24:	stp	x24, x23, [sp, #448]
   35c28:	stp	x22, x21, [sp, #464]
   35c2c:	stp	x20, x19, [sp, #480]
   35c30:	ldr	x8, [x1, #16]
   35c34:	mov	x24, #0xfffffffffffffeff    	// #-257
   35c38:	movk	x24, #0x7fff, lsl #48
   35c3c:	add	x9, x24, #0x105
   35c40:	mov	w20, w2
   35c44:	mov	x21, x1
   35c48:	cmp	x8, x9
   35c4c:	mov	x19, x0
   35c50:	add	x29, sp, #0x190
   35c54:	b.lt	364f0 <mpfr_zeta@@Base+0x8dc>  // b.tstop
   35c58:	ldr	x9, [x19]
   35c5c:	ldr	w26, [x21, #8]
   35c60:	add	x10, x8, #0x1
   35c64:	neg	x9, x9
   35c68:	cmp	x10, x9
   35c6c:	b.ge	35d04 <mpfr_zeta@@Base+0xf0>  // b.tcont
   35c70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35c74:	ldr	x1, [x0, #2800]
   35c78:	add	x0, x0, #0xaf0
   35c7c:	blr	x1
   35c80:	mrs	x22, tpidr_el0
   35c84:	ldr	w23, [x22, x0]
   35c88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35c8c:	ldr	x1, [x0, #2736]
   35c90:	add	x0, x0, #0xab0
   35c94:	blr	x1
   35c98:	ldr	x24, [x22, x0]
   35c9c:	mov	x8, x0
   35ca0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35ca4:	ldr	x1, [x0, #2768]
   35ca8:	add	x0, x0, #0xad0
   35cac:	blr	x1
   35cb0:	ldr	x25, [x22, x0]
   35cb4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   35cb8:	str	x9, [x22, x8]
   35cbc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   35cc0:	str	x8, [x22, x0]
   35cc4:	mov	x1, #0xffffffffffffffff    	// #-1
   35cc8:	mov	x2, #0xffffffffffffffff    	// #-1
   35ccc:	mov	x0, x19
   35cd0:	mov	w3, w20
   35cd4:	bl	bed0 <mpfr_set_si_2exp@plt>
   35cd8:	cmp	w20, #0x4
   35cdc:	mov	w8, #0x3                   	// #3
   35ce0:	csel	w20, w8, w20, eq  // eq = none
   35ce4:	sub	w8, w20, #0x1
   35ce8:	cmp	w8, #0x1
   35cec:	b.hi	35da4 <mpfr_zeta@@Base+0x190>  // b.pmore
   35cf0:	tbz	w26, #31, 35da4 <mpfr_zeta@@Base+0x190>
   35cf4:	mov	x0, x19
   35cf8:	bl	c5c0 <mpfr_nextabove@plt>
   35cfc:	mov	w21, #0x1                   	// #1
   35d00:	b	35ec8 <mpfr_zeta@@Base+0x2b4>
   35d04:	tbnz	w26, #31, 35dc4 <mpfr_zeta@@Base+0x1b0>
   35d08:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   35d0c:	ldr	x1, [x1, #3928]
   35d10:	mov	w2, #0x1                   	// #1
   35d14:	mov	x0, x21
   35d18:	mov	w22, #0x1                   	// #1
   35d1c:	bl	ce90 <mpfr_cmp3@plt>
   35d20:	mrs	x27, tpidr_el0
   35d24:	cbz	w0, 35e80 <mpfr_zeta@@Base+0x26c>
   35d28:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35d2c:	ldr	x1, [x0, #2800]
   35d30:	add	x0, x0, #0xaf0
   35d34:	blr	x1
   35d38:	ldr	w23, [x27, x0]
   35d3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35d40:	ldr	x1, [x0, #2736]
   35d44:	add	x0, x0, #0xab0
   35d48:	blr	x1
   35d4c:	ldr	x25, [x27, x0]
   35d50:	mov	x8, x0
   35d54:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35d58:	ldr	x1, [x0, #2768]
   35d5c:	add	x0, x0, #0xad0
   35d60:	blr	x1
   35d64:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   35d68:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   35d6c:	ldr	x28, [x27, x0]
   35d70:	str	x9, [x27, x8]
   35d74:	str	x10, [x27, x0]
   35d78:	ldr	w8, [x21, #8]
   35d7c:	cmp	w8, #0x1
   35d80:	b.lt	35df8 <mpfr_zeta@@Base+0x1e4>  // b.tstop
   35d84:	ldr	x8, [x21, #16]
   35d88:	tbnz	x8, #63, 35df8 <mpfr_zeta@@Base+0x1e4>
   35d8c:	mov	x0, x19
   35d90:	mov	x1, x21
   35d94:	mov	w2, w20
   35d98:	bl	36594 <mpfr_zeta@@Base+0x980>
   35d9c:	mov	w21, w0
   35da0:	b	36438 <mpfr_zeta@@Base+0x824>
   35da4:	cmp	w20, #0x3
   35da8:	b.ne	35eac <mpfr_zeta@@Base+0x298>  // b.any
   35dac:	cmp	w26, #0x1
   35db0:	b.lt	35eac <mpfr_zeta@@Base+0x298>  // b.tstop
   35db4:	mov	x0, x19
   35db8:	bl	c230 <mpfr_nextbelow@plt>
   35dbc:	mov	w21, #0xffffffff            	// #-1
   35dc0:	b	35ec8 <mpfr_zeta@@Base+0x2b4>
   35dc4:	ldp	q1, q0, [x21]
   35dc8:	sub	x8, x8, #0x1
   35dcc:	add	x0, sp, #0x70
   35dd0:	stp	q1, q0, [sp, #112]
   35dd4:	str	x8, [sp, #128]
   35dd8:	bl	c600 <mpfr_integer_p@plt>
   35ddc:	cbz	w0, 35d08 <mpfr_zeta@@Base+0xf4>
   35de0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   35de4:	mov	w9, #0x1                   	// #1
   35de8:	mov	w21, wzr
   35dec:	str	x8, [x19, #16]
   35df0:	str	w9, [x19, #8]
   35df4:	b	364a4 <mpfr_zeta@@Base+0x890>
   35df8:	ldr	x8, [x21, #16]
   35dfc:	ldr	x9, [x21]
   35e00:	ldr	x26, [x19]
   35e04:	mov	x0, x21
   35e08:	cmp	x8, #0x0
   35e0c:	csneg	x8, xzr, x8, gt
   35e10:	add	x8, x9, x8
   35e14:	mov	x1, x26
   35e18:	add	x22, x8, #0x2
   35e1c:	bl	36bb8 <mpfr_zeta@@Base+0xfa4>
   35e20:	add	x8, x0, x26
   35e24:	cmp	x8, x22
   35e28:	csel	x8, x8, x22, gt
   35e2c:	sub	x9, x24, #0xa
   35e30:	cmp	x8, x9
   35e34:	str	x26, [sp, #24]
   35e38:	str	x0, [sp, #40]
   35e3c:	b.gt	36590 <mpfr_zeta@@Base+0x97c>
   35e40:	add	x9, x8, #0x9
   35e44:	add	x10, x8, #0x48
   35e48:	cmp	x9, #0x0
   35e4c:	csel	x9, x10, x9, lt  // lt = tstop
   35e50:	asr	x9, x9, #6
   35e54:	add	x22, x8, #0xa
   35e58:	cmp	x8, #0xf7
   35e5c:	add	x26, x9, #0x1
   35e60:	str	w23, [sp, #20]
   35e64:	stp	x28, x25, [sp]
   35e68:	b.lt	35f34 <mpfr_zeta@@Base+0x320>  // b.tstop
   35e6c:	lsl	x0, x26, #5
   35e70:	str	x0, [sp, #112]
   35e74:	bl	d1f0 <mpfr_allocate_func@plt>
   35e78:	str	x0, [sp, #120]
   35e7c:	b	35f40 <mpfr_zeta@@Base+0x32c>
   35e80:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   35e84:	str	x8, [x19, #16]
   35e88:	str	w22, [x19, #8]
   35e8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35e90:	ldr	x1, [x0, #2800]
   35e94:	add	x0, x0, #0xaf0
   35e98:	blr	x1
   35e9c:	ldr	w8, [x27, x0]
   35ea0:	mov	w21, wzr
   35ea4:	orr	w8, w8, #0x20
   35ea8:	b	364a0 <mpfr_zeta@@Base+0x88c>
   35eac:	cmp	w20, #0x2
   35eb0:	mov	w21, #0x1                   	// #1
   35eb4:	b.eq	35ec8 <mpfr_zeta@@Base+0x2b4>  // b.none
   35eb8:	cmp	w26, #0x0
   35ebc:	cneg	w8, w21, le
   35ec0:	cmp	w20, #0x3
   35ec4:	csinv	w21, w8, wzr, ne  // ne = any
   35ec8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35ecc:	ldr	x1, [x0, #2800]
   35ed0:	add	x0, x0, #0xaf0
   35ed4:	blr	x1
   35ed8:	str	w23, [x22, x0]
   35edc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35ee0:	ldr	x1, [x0, #2736]
   35ee4:	add	x0, x0, #0xab0
   35ee8:	blr	x1
   35eec:	str	x24, [x22, x0]
   35ef0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35ef4:	ldr	x1, [x0, #2768]
   35ef8:	add	x0, x0, #0xad0
   35efc:	blr	x1
   35f00:	str	x25, [x22, x0]
   35f04:	ldr	x8, [x19, #16]
   35f08:	cmp	x8, x25
   35f0c:	b.gt	36524 <mpfr_zeta@@Base+0x910>
   35f10:	cmp	x8, x24
   35f14:	b.lt	36524 <mpfr_zeta@@Base+0x910>  // b.tstop
   35f18:	orr	w8, w23, #0x8
   35f1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35f20:	ldr	x1, [x0, #2800]
   35f24:	add	x0, x0, #0xaf0
   35f28:	blr	x1
   35f2c:	str	w8, [x22, x0]
   35f30:	b	364a4 <mpfr_zeta@@Base+0x890>
   35f34:	add	x8, sp, #0x70
   35f38:	add	x8, x8, #0x10
   35f3c:	stp	xzr, x8, [sp, #112]
   35f40:	ldr	x8, [sp, #120]
   35f44:	mov	w12, #0x18                  	// #24
   35f48:	cmp	w20, #0x0
   35f4c:	mov	w11, #0x1                   	// #1
   35f50:	add	x9, x8, x26, lsl #3
   35f54:	stp	x9, x22, [x29, #-48]
   35f58:	ldr	x9, [sp, #24]
   35f5c:	mov	w23, #0x40                  	// #64
   35f60:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
   35f64:	stur	x8, [x29, #-16]
   35f68:	add	x10, x8, x26, lsl #4
   35f6c:	madd	x8, x26, x12, x8
   35f70:	cinc	x28, x9, eq  // eq = none
   35f74:	str	wzr, [sp, #36]
   35f78:	stur	x22, [x29, #-136]
   35f7c:	stur	w11, [x29, #-32]
   35f80:	stur	w11, [x29, #-64]
   35f84:	stur	w11, [x29, #-96]
   35f88:	stur	w11, [x29, #-128]
   35f8c:	stp	x10, x22, [x29, #-80]
   35f90:	stp	x8, x22, [x29, #-112]
   35f94:	b	35fe4 <mpfr_zeta@@Base+0x3d0>
   35f98:	sub	x0, x29, #0x48
   35f9c:	mov	w2, #0x2                   	// #2
   35fa0:	mov	x1, x21
   35fa4:	mov	w3, wzr
   35fa8:	bl	cde0 <mpfr_div_2ui@plt>
   35fac:	sub	x0, x29, #0x48
   35fb0:	sub	x1, x29, #0x48
   35fb4:	mov	w2, wzr
   35fb8:	bl	c320 <mpfr_frac@plt>
   35fbc:	sub	x0, x29, #0x48
   35fc0:	mov	x1, #0xffffffffffffffff    	// #-1
   35fc4:	mov	x2, #0xffffffffffffffff    	// #-1
   35fc8:	bl	c890 <mpfr_cmp_si_2exp@plt>
   35fcc:	cmp	w0, #0x1
   35fd0:	mov	w9, #0x1                   	// #1
   35fd4:	cneg	w9, w9, ge  // ge = tcont
   35fd8:	mov	w8, wzr
   35fdc:	str	w9, [sp, #36]
   35fe0:	tbz	w8, #0, 36404 <mpfr_zeta@@Base+0x7f0>
   35fe4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   35fe8:	ldr	x1, [x0, #2848]
   35fec:	add	x0, x0, #0xb20
   35ff0:	blr	x1
   35ff4:	add	x1, x27, x0
   35ff8:	sub	x0, x29, #0x88
   35ffc:	mov	w2, #0x3                   	// #3
   36000:	bl	c840 <mpfr_cache@plt>
   36004:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   36008:	ldr	x1, [x1, #3928]
   3600c:	sub	x0, x29, #0x48
   36010:	mov	x2, x21
   36014:	mov	w3, wzr
   36018:	bl	bfd0 <mpfr_sub@plt>
   3601c:	sub	x0, x29, #0x68
   36020:	sub	x1, x29, #0x48
   36024:	mov	w2, wzr
   36028:	bl	cc90 <mpfr_gamma@plt>
   3602c:	ldur	x8, [x29, #-88]
   36030:	sub	x0, x29, #0x28
   36034:	sub	x1, x29, #0x48
   36038:	cmp	x8, x25
   3603c:	b.ne	36180 <mpfr_zeta@@Base+0x56c>  // b.any
   36040:	sub	x3, x29, #0x68
   36044:	sub	x4, x29, #0x88
   36048:	mov	w5, #0x3                   	// #3
   3604c:	mov	x2, x21
   36050:	bl	36da0 <mpfr_zeta@@Base+0x118c>
   36054:	ldur	x8, [x29, #-24]
   36058:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3605c:	ldr	x1, [x0, #2768]
   36060:	add	x0, x0, #0xad0
   36064:	blr	x1
   36068:	cmp	x8, x25
   3606c:	b.eq	35f98 <mpfr_zeta@@Base+0x384>  // b.none
   36070:	ldr	x9, [x27, x0]
   36074:	cmp	x8, x9
   36078:	b.eq	35f98 <mpfr_zeta@@Base+0x384>  // b.none
   3607c:	ldur	x1, [x29, #-40]
   36080:	add	x0, sp, #0x50
   36084:	bl	cf60 <mpfr_init2@plt>
   36088:	add	x0, sp, #0x50
   3608c:	sub	x1, x29, #0x48
   36090:	sub	x3, x29, #0x68
   36094:	sub	x4, x29, #0x88
   36098:	mov	w5, #0x2                   	// #2
   3609c:	mov	x2, x21
   360a0:	bl	36da0 <mpfr_zeta@@Base+0x118c>
   360a4:	ldr	x8, [sp, #96]
   360a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   360ac:	ldr	x1, [x0, #2768]
   360b0:	add	x0, x0, #0xad0
   360b4:	blr	x1
   360b8:	cmp	x8, x25
   360bc:	b.eq	36128 <mpfr_zeta@@Base+0x514>  // b.none
   360c0:	ldr	x9, [x27, x0]
   360c4:	cmp	x8, x9
   360c8:	b.eq	36128 <mpfr_zeta@@Base+0x514>  // b.none
   360cc:	ldr	x26, [sp, #24]
   360d0:	add	x0, sp, #0x30
   360d4:	mov	x1, x26
   360d8:	bl	cf60 <mpfr_init2@plt>
   360dc:	ldur	w3, [x29, #-32]
   360e0:	add	x0, sp, #0x30
   360e4:	sub	x1, x29, #0x28
   360e8:	mov	w2, w20
   360ec:	bl	cb70 <mpfr_set4@plt>
   360f0:	add	x0, sp, #0x50
   360f4:	mov	x1, x26
   360f8:	mov	w2, w20
   360fc:	bl	ce60 <mpfr_prec_round@plt>
   36100:	add	x0, sp, #0x30
   36104:	add	x1, sp, #0x50
   36108:	mov	w2, #0x1                   	// #1
   3610c:	bl	ce90 <mpfr_cmp3@plt>
   36110:	mov	w26, w0
   36114:	add	x0, sp, #0x50
   36118:	bl	c4f0 <mpfr_clear@plt>
   3611c:	add	x0, sp, #0x30
   36120:	bl	c4f0 <mpfr_clear@plt>
   36124:	cbz	w26, 36364 <mpfr_zeta@@Base+0x750>
   36128:	sub	x8, x24, x22
   3612c:	cmp	x23, x8
   36130:	b.gt	363cc <mpfr_zeta@@Base+0x7b8>
   36134:	add	x22, x22, x23
   36138:	cmp	x22, #0x0
   3613c:	cinc	x8, x22, lt  // lt = tstop
   36140:	cmp	x22, x24
   36144:	b.gt	36590 <mpfr_zeta@@Base+0x97c>
   36148:	asr	x23, x8, #1
   3614c:	sub	x8, x22, #0x1
   36150:	add	x9, x22, #0x3e
   36154:	cmp	x8, #0x0
   36158:	ldr	x1, [sp, #112]
   3615c:	csel	x8, x9, x8, lt  // lt = tstop
   36160:	asr	x8, x8, #6
   36164:	add	x26, x8, #0x1
   36168:	lsl	x2, x26, #5
   3616c:	str	x2, [sp, #112]
   36170:	cbz	x1, 36318 <mpfr_zeta@@Base+0x704>
   36174:	ldr	x0, [sp, #120]
   36178:	bl	c660 <mpfr_reallocate_func@plt>
   3617c:	b	36320 <mpfr_zeta@@Base+0x70c>
   36180:	mov	w2, wzr
   36184:	bl	36594 <mpfr_zeta@@Base+0x980>
   36188:	sub	x0, x29, #0x28
   3618c:	sub	x1, x29, #0x28
   36190:	sub	x2, x29, #0x68
   36194:	mov	w3, wzr
   36198:	bl	c1b0 <mpfr_mul@plt>
   3619c:	sub	x0, x29, #0x68
   361a0:	sub	x1, x29, #0x88
   361a4:	mov	w2, #0x1                   	// #1
   361a8:	mov	w3, wzr
   361ac:	bl	c780 <mpfr_mul_2ui@plt>
   361b0:	sub	x0, x29, #0x48
   361b4:	sub	x1, x29, #0x48
   361b8:	mov	w2, wzr
   361bc:	bl	c1d0 <mpfr_neg@plt>
   361c0:	sub	x0, x29, #0x68
   361c4:	sub	x1, x29, #0x68
   361c8:	sub	x2, x29, #0x48
   361cc:	mov	w3, wzr
   361d0:	bl	c1f0 <mpfr_pow@plt>
   361d4:	sub	x0, x29, #0x28
   361d8:	sub	x1, x29, #0x28
   361dc:	sub	x2, x29, #0x68
   361e0:	mov	w3, wzr
   361e4:	bl	c1b0 <mpfr_mul@plt>
   361e8:	sub	x0, x29, #0x28
   361ec:	sub	x1, x29, #0x28
   361f0:	mov	w2, #0x1                   	// #1
   361f4:	mov	w3, wzr
   361f8:	bl	c780 <mpfr_mul_2ui@plt>
   361fc:	sub	x0, x29, #0x68
   36200:	sub	x2, x29, #0x88
   36204:	mov	x1, x21
   36208:	mov	w3, wzr
   3620c:	bl	c1b0 <mpfr_mul@plt>
   36210:	sub	x0, x29, #0x88
   36214:	sub	x1, x29, #0x68
   36218:	mov	w2, #0x1                   	// #1
   3621c:	mov	w3, wzr
   36220:	bl	cde0 <mpfr_div_2ui@plt>
   36224:	sub	x0, x29, #0x68
   36228:	sub	x1, x29, #0x88
   3622c:	mov	w2, wzr
   36230:	bl	c920 <mpfr_sin@plt>
   36234:	ldur	x26, [x29, #-88]
   36238:	tbz	x26, #63, 362b8 <mpfr_zeta@@Base+0x6a4>
   3623c:	neg	x8, x26
   36240:	sub	x9, x24, x22
   36244:	cmp	x9, x8
   36248:	b.le	363e8 <mpfr_zeta@@Base+0x7d4>
   3624c:	sub	x1, x22, x26
   36250:	add	x0, sp, #0x50
   36254:	bl	cf60 <mpfr_init2@plt>
   36258:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3625c:	ldr	x1, [x0, #2848]
   36260:	add	x0, x0, #0xb20
   36264:	blr	x1
   36268:	add	x1, x27, x0
   3626c:	add	x0, sp, #0x50
   36270:	mov	w2, #0x3                   	// #3
   36274:	bl	c840 <mpfr_cache@plt>
   36278:	add	x0, sp, #0x50
   3627c:	add	x2, sp, #0x50
   36280:	mov	x1, x21
   36284:	mov	w3, wzr
   36288:	bl	c1b0 <mpfr_mul@plt>
   3628c:	add	x0, sp, #0x50
   36290:	add	x1, sp, #0x50
   36294:	mov	w2, #0x1                   	// #1
   36298:	mov	w3, wzr
   3629c:	bl	cde0 <mpfr_div_2ui@plt>
   362a0:	sub	x0, x29, #0x68
   362a4:	add	x1, sp, #0x50
   362a8:	mov	w2, wzr
   362ac:	bl	c920 <mpfr_sin@plt>
   362b0:	add	x0, sp, #0x50
   362b4:	bl	c4f0 <mpfr_clear@plt>
   362b8:	sub	x0, x29, #0x28
   362bc:	sub	x1, x29, #0x28
   362c0:	sub	x2, x29, #0x68
   362c4:	mov	w3, wzr
   362c8:	bl	c1b0 <mpfr_mul@plt>
   362cc:	ldur	x8, [x29, #-24]
   362d0:	add	x9, x24, #0x105
   362d4:	cmp	x8, x9
   362d8:	b.lt	36128 <mpfr_zeta@@Base+0x514>  // b.tstop
   362dc:	ldur	x8, [x29, #-40]
   362e0:	ldur	x0, [x29, #-16]
   362e4:	mov	x3, x28
   362e8:	sub	x9, x8, #0x1
   362ec:	add	x8, x8, #0x3e
   362f0:	cmp	x9, #0x0
   362f4:	csel	x8, x8, x9, lt  // lt = tstop
   362f8:	asr	x8, x8, #6
   362fc:	add	x1, x8, #0x1
   36300:	ldr	x8, [sp, #40]
   36304:	sub	x2, x22, x8
   36308:	bl	c830 <mpfr_round_p@plt>
   3630c:	cbz	w0, 36128 <mpfr_zeta@@Base+0x514>
   36310:	mov	w8, wzr
   36314:	b	35fe0 <mpfr_zeta@@Base+0x3cc>
   36318:	mov	x0, x2
   3631c:	bl	d1f0 <mpfr_allocate_func@plt>
   36320:	mov	x8, x0
   36324:	mov	w11, #0x18                  	// #24
   36328:	stur	x8, [x29, #-16]
   3632c:	add	x9, x8, x26, lsl #3
   36330:	add	x10, x8, x26, lsl #4
   36334:	madd	x11, x26, x11, x8
   36338:	mov	w8, #0x1                   	// #1
   3633c:	str	x0, [sp, #120]
   36340:	stp	x10, x22, [x29, #-80]
   36344:	stp	x11, x22, [x29, #-112]
   36348:	stur	x22, [x29, #-136]
   3634c:	stur	w8, [x29, #-32]
   36350:	stur	w8, [x29, #-64]
   36354:	stur	w8, [x29, #-96]
   36358:	stp	x9, x22, [x29, #-48]
   3635c:	stur	w8, [x29, #-128]
   36360:	b	35fe0 <mpfr_zeta@@Base+0x3cc>
   36364:	sub	x0, x29, #0x48
   36368:	mov	w2, #0x2                   	// #2
   3636c:	mov	x1, x21
   36370:	mov	w3, wzr
   36374:	bl	cde0 <mpfr_div_2ui@plt>
   36378:	sub	x0, x29, #0x48
   3637c:	sub	x1, x29, #0x48
   36380:	mov	w2, wzr
   36384:	bl	c320 <mpfr_frac@plt>
   36388:	sub	x0, x29, #0x48
   3638c:	mov	x1, #0xffffffffffffffff    	// #-1
   36390:	mov	x2, #0xffffffffffffffff    	// #-1
   36394:	bl	c890 <mpfr_cmp_si_2exp@plt>
   36398:	cmp	w0, #0x1
   3639c:	b.lt	363b0 <mpfr_zeta@@Base+0x79c>  // b.tstop
   363a0:	sub	x0, x29, #0x28
   363a4:	sub	x1, x29, #0x28
   363a8:	mov	w2, w20
   363ac:	bl	c1d0 <mpfr_neg@plt>
   363b0:	sub	x0, x29, #0x28
   363b4:	sub	x1, x29, #0x28
   363b8:	mov	w2, #0x1                   	// #1
   363bc:	mov	w3, w20
   363c0:	bl	c780 <mpfr_mul_2ui@plt>
   363c4:	mov	w8, wzr
   363c8:	b	35fe0 <mpfr_zeta@@Base+0x3cc>
   363cc:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   363d0:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   363d4:	mov	w1, #0x290                 	// #656
   363d8:	add	x0, x0, #0xaa0
   363dc:	add	x2, x2, #0xae9
   363e0:	bl	d030 <mpfr_assert_fail@plt>
   363e4:	b	36134 <mpfr_zeta@@Base+0x520>
   363e8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   363ec:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   363f0:	mov	w1, #0x281                 	// #641
   363f4:	add	x0, x0, #0xaa0
   363f8:	add	x2, x2, #0xaa7
   363fc:	bl	d030 <mpfr_assert_fail@plt>
   36400:	b	3624c <mpfr_zeta@@Base+0x638>
   36404:	ldp	x28, x25, [sp]
   36408:	ldr	w2, [sp, #36]
   3640c:	cbz	w2, 364c8 <mpfr_zeta@@Base+0x8b4>
   36410:	mov	x0, x19
   36414:	mov	w1, w20
   36418:	bl	c3a0 <mpfr_overflow@plt>
   3641c:	ldr	w23, [sp, #20]
   36420:	mov	w21, w0
   36424:	orr	w23, w23, #0x2
   36428:	ldr	x1, [sp, #112]
   3642c:	cbz	x1, 36438 <mpfr_zeta@@Base+0x824>
   36430:	ldr	x0, [sp, #120]
   36434:	bl	d120 <mpfr_free_func@plt>
   36438:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3643c:	ldr	x1, [x0, #2800]
   36440:	add	x0, x0, #0xaf0
   36444:	blr	x1
   36448:	str	w23, [x27, x0]
   3644c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   36450:	ldr	x1, [x0, #2736]
   36454:	add	x0, x0, #0xab0
   36458:	blr	x1
   3645c:	str	x25, [x27, x0]
   36460:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   36464:	ldr	x1, [x0, #2768]
   36468:	add	x0, x0, #0xad0
   3646c:	blr	x1
   36470:	str	x28, [x27, x0]
   36474:	ldr	x8, [x19, #16]
   36478:	cmp	x8, x28
   3647c:	b.gt	36524 <mpfr_zeta@@Base+0x910>
   36480:	cmp	x8, x25
   36484:	b.lt	36524 <mpfr_zeta@@Base+0x910>  // b.tstop
   36488:	cbz	w21, 364a4 <mpfr_zeta@@Base+0x890>
   3648c:	orr	w8, w23, #0x8
   36490:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   36494:	ldr	x1, [x0, #2800]
   36498:	add	x0, x0, #0xaf0
   3649c:	blr	x1
   364a0:	str	w8, [x27, x0]
   364a4:	mov	w0, w21
   364a8:	ldp	x20, x19, [sp, #480]
   364ac:	ldp	x22, x21, [sp, #464]
   364b0:	ldp	x24, x23, [sp, #448]
   364b4:	ldp	x26, x25, [sp, #432]
   364b8:	ldp	x28, x27, [sp, #416]
   364bc:	ldp	x29, x30, [sp, #400]
   364c0:	add	sp, sp, #0x1f0
   364c4:	ret
   364c8:	ldur	w3, [x29, #-32]
   364cc:	sub	x1, x29, #0x28
   364d0:	mov	x0, x19
   364d4:	mov	w2, w20
   364d8:	bl	cb70 <mpfr_set4@plt>
   364dc:	ldr	w23, [sp, #20]
   364e0:	mov	w21, w0
   364e4:	ldr	x1, [sp, #112]
   364e8:	cbnz	x1, 36430 <mpfr_zeta@@Base+0x81c>
   364ec:	b	36438 <mpfr_zeta@@Base+0x824>
   364f0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   364f4:	cmp	x8, x9
   364f8:	b.eq	36538 <mpfr_zeta@@Base+0x924>  // b.none
   364fc:	mov	x9, #0x2                   	// #2
   36500:	movk	x9, #0x8000, lsl #48
   36504:	cmp	x8, x9
   36508:	b.eq	36560 <mpfr_zeta@@Base+0x94c>  // b.none
   3650c:	mov	x1, #0xffffffffffffffff    	// #-1
   36510:	mov	x2, #0xffffffffffffffff    	// #-1
   36514:	mov	x0, x19
   36518:	mov	w3, w20
   3651c:	bl	bed0 <mpfr_set_si_2exp@plt>
   36520:	b	36558 <mpfr_zeta@@Base+0x944>
   36524:	mov	x0, x19
   36528:	mov	w1, w21
   3652c:	mov	w2, w20
   36530:	bl	d020 <mpfr_check_range@plt>
   36534:	b	36558 <mpfr_zeta@@Base+0x944>
   36538:	ldr	w8, [x21, #8]
   3653c:	cmp	w8, #0x1
   36540:	b.lt	36560 <mpfr_zeta@@Base+0x94c>  // b.tstop
   36544:	mov	w1, #0x1                   	// #1
   36548:	mov	x0, x19
   3654c:	mov	x2, xzr
   36550:	mov	w3, wzr
   36554:	bl	cac0 <mpfr_set_ui_2exp@plt>
   36558:	mov	w21, w0
   3655c:	b	364a4 <mpfr_zeta@@Base+0x890>
   36560:	add	x8, x24, #0x103
   36564:	str	x8, [x19, #16]
   36568:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3656c:	ldr	x1, [x0, #2800]
   36570:	add	x0, x0, #0xaf0
   36574:	blr	x1
   36578:	mrs	x8, tpidr_el0
   3657c:	ldr	w9, [x8, x0]
   36580:	mov	w21, wzr
   36584:	orr	w9, w9, #0x4
   36588:	str	w9, [x8, x0]
   3658c:	b	364a4 <mpfr_zeta@@Base+0x890>
   36590:	bl	cdd0 <mpfr_abort_prec_max@plt>
   36594:	stp	d15, d14, [sp, #-160]!
   36598:	stp	d13, d12, [sp, #16]
   3659c:	stp	d11, d10, [sp, #32]
   365a0:	stp	d9, d8, [sp, #48]
   365a4:	stp	x29, x30, [sp, #64]
   365a8:	stp	x28, x27, [sp, #80]
   365ac:	stp	x26, x25, [sp, #96]
   365b0:	stp	x24, x23, [sp, #112]
   365b4:	stp	x22, x21, [sp, #128]
   365b8:	stp	x20, x19, [sp, #144]
   365bc:	mov	x29, sp
   365c0:	sub	sp, sp, #0x160
   365c4:	ldr	x8, [x1, #16]
   365c8:	ldr	x23, [x0]
   365cc:	ldr	x24, [x1]
   365d0:	mov	x21, x1
   365d4:	mov	x25, x0
   365d8:	cmp	x8, #0x4
   365dc:	mov	w26, w2
   365e0:	b.lt	36628 <mpfr_zeta@@Base+0xa14>  // b.tstop
   365e4:	sub	x9, x8, #0x1
   365e8:	mov	w10, #0x1                   	// #1
   365ec:	cmp	x8, #0x3f
   365f0:	lsl	x8, x10, x9
   365f4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   365f8:	csel	x2, x9, x8, gt
   365fc:	cmp	x2, #0x1
   36600:	b.lt	36620 <mpfr_zeta@@Base+0xa0c>  // b.tstop
   36604:	add	x8, x23, #0x1
   36608:	cmp	x2, x8
   3660c:	b.hi	36b88 <mpfr_zeta@@Base+0xf74>  // b.pmore
   36610:	mov	w8, wzr
   36614:	cbz	w8, 36620 <mpfr_zeta@@Base+0xa0c>
   36618:	cbnz	w8, 36b30 <mpfr_zeta@@Base+0xf1c>
   3661c:	b	36628 <mpfr_zeta@@Base+0xa14>
   36620:	mov	w8, wzr
   36624:	cbnz	w8, 36b30 <mpfr_zeta@@Base+0xf1c>
   36628:	subs	x19, x23, #0x1
   3662c:	b.eq	36b64 <mpfr_zeta@@Base+0xf50>  // b.none
   36630:	b.le	36b6c <mpfr_zeta@@Base+0xf58>
   36634:	clz	x8, x19
   36638:	mov	w9, #0x40                  	// #64
   3663c:	sub	x8, x9, x8
   36640:	ldr	x9, [x21, #16]
   36644:	mov	x28, #0xfffffffffffffeff    	// #-257
   36648:	add	x8, x23, x8
   3664c:	sub	x0, x29, #0xa8
   36650:	cmp	x24, x9
   36654:	csel	x1, x24, x9, gt
   36658:	movk	x28, #0x7fff, lsl #48
   3665c:	add	x20, x8, #0xa
   36660:	bl	cf60 <mpfr_init2@plt>
   36664:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
   36668:	ldr	x2, [x2, #3928]
   3666c:	sub	x0, x29, #0xa8
   36670:	mov	x1, x21
   36674:	mov	w3, wzr
   36678:	bl	bfd0 <mpfr_sub@plt>
   3667c:	adrp	x9, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   36680:	adrp	x10, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   36684:	adrp	x11, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   36688:	adrp	x12, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   3668c:	add	x8, sp, #0x28
   36690:	ldr	d10, [x9, #2688]
   36694:	ldr	d11, [x10, #2696]
   36698:	ldr	d12, [x11, #2704]
   3669c:	ldr	d13, [x12, #2712]
   366a0:	add	x9, x8, #0x10
   366a4:	mov	w19, #0x1                   	// #1
   366a8:	cmp	w26, #0x0
   366ac:	add	x10, x8, #0x18
   366b0:	stp	xzr, x9, [sp, #40]
   366b4:	stur	x9, [x29, #-16]
   366b8:	add	x9, x8, #0x20
   366bc:	add	x8, x8, #0x28
   366c0:	fmov	d9, #-1.000000000000000000e+00
   366c4:	cinc	x11, x23, eq  // eq = none
   366c8:	stp	x8, x19, [x29, #-112]
   366cc:	mov	w8, #0x40                  	// #64
   366d0:	stur	w19, [x29, #-32]
   366d4:	stur	w19, [x29, #-64]
   366d8:	stur	w19, [x29, #-96]
   366dc:	stur	x19, [x29, #-136]
   366e0:	stur	w19, [x29, #-128]
   366e4:	str	x11, [sp, #32]
   366e8:	stp	x10, x19, [x29, #-48]
   366ec:	stp	x9, x19, [x29, #-80]
   366f0:	str	x8, [sp, #24]
   366f4:	ldur	x8, [x29, #-152]
   366f8:	sub	x27, x20, #0x3
   366fc:	sub	x9, x20, #0x2
   36700:	cmp	x27, #0x0
   36704:	csel	x9, x9, x27, lt  // lt = tstop
   36708:	neg	x9, x9, asr #1
   3670c:	cmp	x8, x9
   36710:	b.le	3677c <mpfr_zeta@@Base+0xb68>
   36714:	scvtf	d14, x20
   36718:	mov	x0, x21
   3671c:	mov	w1, wzr
   36720:	fmul	d15, d14, d10
   36724:	bl	c190 <mpfr_get_d@plt>
   36728:	mov	v8.16b, v0.16b
   3672c:	fadd	d15, d15, d11
   36730:	bl	c130 <__gmpfr_floor_log2@plt>
   36734:	scvtf	d0, x0
   36738:	fmul	d0, d0, d10
   3673c:	fsub	d0, d12, d0
   36740:	fmul	d0, d8, d0
   36744:	fadd	d0, d15, d0
   36748:	fcmp	d0, #0.0
   3674c:	b.ls	367c4 <mpfr_zeta@@Base+0xbb0>  // b.plast
   36750:	fcvtzs	w8, d0
   36754:	cmp	w8, #0x0
   36758:	cinc	w8, w8, lt  // lt = tstop
   3675c:	asr	w8, w8, #1
   36760:	add	w28, w8, #0x1
   36764:	scvtf	d0, w28
   36768:	fadd	d0, d0, d0
   3676c:	fadd	d0, d8, d0
   36770:	fadd	d0, d0, d9
   36774:	fdiv	d8, d0, d13
   36778:	b	367d8 <mpfr_zeta@@Base+0xbc4>
   3677c:	add	x8, x20, #0x3
   36780:	cmp	x8, x24
   36784:	csel	x22, x8, x24, gt
   36788:	cmp	x22, x28
   3678c:	b.gt	36bb4 <mpfr_zeta@@Base+0xfa0>
   36790:	sub	x8, x22, #0x1
   36794:	add	x9, x22, #0x3e
   36798:	cmp	x8, #0x0
   3679c:	ldr	x1, [sp, #40]
   367a0:	csel	x8, x9, x8, lt  // lt = tstop
   367a4:	asr	x8, x8, #6
   367a8:	add	x23, x8, #0x1
   367ac:	lsl	x2, x23, #5
   367b0:	str	x2, [sp, #40]
   367b4:	cbz	x1, 368a0 <mpfr_zeta@@Base+0xc8c>
   367b8:	ldr	x0, [sp, #48]
   367bc:	bl	c660 <mpfr_reallocate_func@plt>
   367c0:	b	368a8 <mpfr_zeta@@Base+0xc94>
   367c4:	fadd	d0, d14, d9
   367c8:	fdiv	d0, d0, d8
   367cc:	bl	bfa0 <__gmpfr_ceil_exp2@plt>
   367d0:	mov	v8.16b, v0.16b
   367d4:	mov	w28, wzr
   367d8:	subs	x22, x20, #0x1
   367dc:	str	x25, [sp, #16]
   367e0:	str	w26, [sp, #12]
   367e4:	b.eq	36ac0 <mpfr_zeta@@Base+0xeac>  // b.none
   367e8:	b.le	36ac8 <mpfr_zeta@@Base+0xeb4>
   367ec:	clz	x8, x22
   367f0:	mov	w9, #0x40                  	// #64
   367f4:	sub	w8, w9, w8
   367f8:	add	w8, w8, w8, lsl #1
   367fc:	cmp	w8, #0x0
   36800:	cinc	w8, w8, lt  // lt = tstop
   36804:	asr	w8, w8, #1
   36808:	add	w8, w8, #0x4
   3680c:	add	w23, w28, #0x1
   36810:	add	x8, x20, w8, sxtw
   36814:	cmp	x8, x24
   36818:	sbfiz	x0, x23, #5, #32
   3681c:	csel	x26, x24, x8, lt  // lt = tstop
   36820:	str	x0, [sp]
   36824:	bl	d1f0 <mpfr_allocate_func@plt>
   36828:	cmp	w28, #0x1
   3682c:	mov	x25, x0
   36830:	b.lt	36854 <mpfr_zeta@@Base+0xc40>  // b.tstop
   36834:	add	x22, x25, #0x20
   36838:	sub	x23, x23, #0x1
   3683c:	mov	x0, x22
   36840:	mov	x1, x26
   36844:	bl	cf60 <mpfr_init2@plt>
   36848:	subs	x23, x23, #0x1
   3684c:	add	x22, x22, #0x20
   36850:	b.ne	3683c <mpfr_zeta@@Base+0xc28>  // b.any
   36854:	mov	x8, #0xfffffffffffffeff    	// #-257
   36858:	movk	x8, #0x7fff, lsl #48
   3685c:	cmp	x26, x8
   36860:	b.gt	36bb4 <mpfr_zeta@@Base+0xfa0>
   36864:	sub	x9, x26, #0x1
   36868:	fcvtzs	w8, d8
   3686c:	add	x10, x26, #0x3e
   36870:	cmp	x9, #0x0
   36874:	ldr	x1, [sp, #40]
   36878:	add	w22, w8, #0x1
   3687c:	csel	x8, x10, x9, lt  // lt = tstop
   36880:	asr	x8, x8, #6
   36884:	add	x23, x8, #0x1
   36888:	lsl	x2, x23, #5
   3688c:	str	x2, [sp, #40]
   36890:	cbz	x1, 36938 <mpfr_zeta@@Base+0xd24>
   36894:	ldr	x0, [sp, #48]
   36898:	bl	c660 <mpfr_reallocate_func@plt>
   3689c:	b	36940 <mpfr_zeta@@Base+0xd2c>
   368a0:	mov	x0, x2
   368a4:	bl	d1f0 <mpfr_allocate_func@plt>
   368a8:	mov	x8, x0
   368ac:	mov	w11, #0x18                  	// #24
   368b0:	stur	x8, [x29, #-16]
   368b4:	add	x9, x8, x23, lsl #3
   368b8:	add	x10, x8, x23, lsl #4
   368bc:	madd	x8, x23, x11, x8
   368c0:	str	x0, [sp, #48]
   368c4:	stur	w19, [x29, #-32]
   368c8:	stur	w19, [x29, #-64]
   368cc:	stur	w19, [x29, #-96]
   368d0:	stur	x22, [x29, #-136]
   368d4:	stp	x9, x22, [x29, #-48]
   368d8:	stp	x10, x22, [x29, #-80]
   368dc:	stp	x8, x22, [x29, #-112]
   368e0:	stur	w19, [x29, #-128]
   368e4:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   368e8:	ldr	x1, [x1, #3928]
   368ec:	sub	x0, x29, #0x68
   368f0:	sub	x2, x29, #0xa8
   368f4:	mov	w3, wzr
   368f8:	bl	caf0 <mpfr_div@plt>
   368fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   36900:	ldr	x1, [x0, #2832]
   36904:	add	x0, x0, #0xb10
   36908:	blr	x1
   3690c:	mrs	x8, tpidr_el0
   36910:	add	x1, x8, x0
   36914:	sub	x0, x29, #0x88
   36918:	mov	w2, wzr
   3691c:	bl	c840 <mpfr_cache@plt>
   36920:	sub	x0, x29, #0x68
   36924:	sub	x1, x29, #0x68
   36928:	sub	x2, x29, #0x88
   3692c:	mov	w3, wzr
   36930:	bl	c640 <mpfr_add@plt>
   36934:	b	36a5c <mpfr_zeta@@Base+0xe48>
   36938:	mov	x0, x2
   3693c:	bl	d1f0 <mpfr_allocate_func@plt>
   36940:	mov	x8, x0
   36944:	mov	w11, #0x18                  	// #24
   36948:	str	x0, [sp, #48]
   3694c:	stur	x8, [x29, #-16]
   36950:	add	x9, x8, x23, lsl #3
   36954:	add	x10, x8, x23, lsl #4
   36958:	madd	x8, x23, x11, x8
   3695c:	mov	w0, w28
   36960:	mov	x1, x25
   36964:	stur	w19, [x29, #-32]
   36968:	stur	w19, [x29, #-64]
   3696c:	stur	w19, [x29, #-96]
   36970:	stur	x26, [x29, #-136]
   36974:	stp	x9, x26, [x29, #-48]
   36978:	stp	x10, x26, [x29, #-80]
   3697c:	stp	x8, x26, [x29, #-112]
   36980:	stur	w19, [x29, #-128]
   36984:	bl	36fc4 <mpfr_zeta@@Base+0x13b0>
   36988:	sub	x0, x29, #0x68
   3698c:	mov	x1, x21
   36990:	mov	w2, w22
   36994:	bl	37134 <mpfr_zeta@@Base+0x1520>
   36998:	sub	x0, x29, #0x28
   3699c:	mov	x1, x21
   369a0:	mov	w2, w22
   369a4:	mov	w3, w28
   369a8:	mov	x4, x25
   369ac:	bl	3729c <mpfr_zeta@@Base+0x1688>
   369b0:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   369b4:	ldr	x1, [x1, #3928]
   369b8:	sub	x0, x29, #0x48
   369bc:	sub	x2, x29, #0xa8
   369c0:	mov	w3, wzr
   369c4:	bl	caf0 <mpfr_div@plt>
   369c8:	sxtw	x1, w22
   369cc:	sub	x0, x29, #0x88
   369d0:	sub	x2, x29, #0xa8
   369d4:	mov	w3, wzr
   369d8:	bl	cf00 <mpfr_ui_pow@plt>
   369dc:	sub	x0, x29, #0x48
   369e0:	sub	x1, x29, #0x48
   369e4:	sub	x2, x29, #0x88
   369e8:	mov	w3, wzr
   369ec:	bl	caf0 <mpfr_div@plt>
   369f0:	sub	x0, x29, #0x68
   369f4:	sub	x1, x29, #0x68
   369f8:	sub	x2, x29, #0x48
   369fc:	mov	w3, wzr
   36a00:	bl	c640 <mpfr_add@plt>
   36a04:	sub	x0, x29, #0x68
   36a08:	sub	x1, x29, #0x68
   36a0c:	sub	x2, x29, #0x28
   36a10:	mov	w3, wzr
   36a14:	bl	c640 <mpfr_add@plt>
   36a18:	cmp	w28, #0x1
   36a1c:	b.lt	36a40 <mpfr_zeta@@Base+0xe2c>  // b.tstop
   36a20:	add	w8, w28, #0x1
   36a24:	add	x22, x25, #0x20
   36a28:	sub	x23, x8, #0x1
   36a2c:	mov	x0, x22
   36a30:	bl	c4f0 <mpfr_clear@plt>
   36a34:	subs	x23, x23, #0x1
   36a38:	add	x22, x22, #0x20
   36a3c:	b.ne	36a2c <mpfr_zeta@@Base+0xe18>  // b.any
   36a40:	ldr	x1, [sp]
   36a44:	mov	x0, x25
   36a48:	bl	d120 <mpfr_free_func@plt>
   36a4c:	ldr	x25, [sp, #16]
   36a50:	ldr	w26, [sp, #12]
   36a54:	mov	x28, #0xfffffffffffffeff    	// #-257
   36a58:	movk	x28, #0x7fff, lsl #48
   36a5c:	ldur	x8, [x29, #-88]
   36a60:	add	x9, x28, #0x105
   36a64:	cmp	x8, x9
   36a68:	b.lt	36a9c <mpfr_zeta@@Base+0xe88>  // b.tstop
   36a6c:	ldur	x8, [x29, #-104]
   36a70:	ldur	x0, [x29, #-80]
   36a74:	ldr	x3, [sp, #32]
   36a78:	mov	x2, x27
   36a7c:	sub	x9, x8, #0x1
   36a80:	add	x8, x8, #0x3e
   36a84:	cmp	x9, #0x0
   36a88:	csel	x8, x8, x9, lt  // lt = tstop
   36a8c:	asr	x8, x8, #6
   36a90:	add	x1, x8, #0x1
   36a94:	bl	c830 <mpfr_round_p@plt>
   36a98:	cbnz	w0, 36b00 <mpfr_zeta@@Base+0xeec>
   36a9c:	ldr	x22, [sp, #24]
   36aa0:	sub	x8, x28, x20
   36aa4:	cmp	x22, x8
   36aa8:	b.gt	36ae4 <mpfr_zeta@@Base+0xed0>
   36aac:	add	x20, x20, x22
   36ab0:	cmp	x20, #0x0
   36ab4:	cinc	x8, x20, lt  // lt = tstop
   36ab8:	asr	x8, x8, #1
   36abc:	b	366f0 <mpfr_zeta@@Base+0xadc>
   36ac0:	mov	w8, wzr
   36ac4:	b	367f8 <mpfr_zeta@@Base+0xbe4>
   36ac8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   36acc:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   36ad0:	mov	w1, #0xef                  	// #239
   36ad4:	add	x0, x0, #0xaa0
   36ad8:	add	x2, x2, #0xb3c
   36adc:	bl	d030 <mpfr_assert_fail@plt>
   36ae0:	b	367ec <mpfr_zeta@@Base+0xbd8>
   36ae4:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   36ae8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   36aec:	mov	w1, #0x112                 	// #274
   36af0:	add	x0, x0, #0xaa0
   36af4:	add	x2, x2, #0xb44
   36af8:	bl	d030 <mpfr_assert_fail@plt>
   36afc:	b	36aac <mpfr_zeta@@Base+0xe98>
   36b00:	ldur	w3, [x29, #-96]
   36b04:	sub	x1, x29, #0x68
   36b08:	mov	x0, x25
   36b0c:	mov	w2, w26
   36b10:	bl	cb70 <mpfr_set4@plt>
   36b14:	ldr	x1, [sp, #40]
   36b18:	mov	w22, w0
   36b1c:	cbz	x1, 36b28 <mpfr_zeta@@Base+0xf14>
   36b20:	ldr	x0, [sp, #48]
   36b24:	bl	d120 <mpfr_free_func@plt>
   36b28:	sub	x0, x29, #0xa8
   36b2c:	bl	c4f0 <mpfr_clear@plt>
   36b30:	mov	w0, w22
   36b34:	add	sp, sp, #0x160
   36b38:	ldp	x20, x19, [sp, #144]
   36b3c:	ldp	x22, x21, [sp, #128]
   36b40:	ldp	x24, x23, [sp, #112]
   36b44:	ldp	x26, x25, [sp, #96]
   36b48:	ldp	x28, x27, [sp, #80]
   36b4c:	ldp	x29, x30, [sp, #64]
   36b50:	ldp	d9, d8, [sp, #48]
   36b54:	ldp	d11, d10, [sp, #32]
   36b58:	ldp	d13, d12, [sp, #16]
   36b5c:	ldp	d15, d14, [sp], #160
   36b60:	ret
   36b64:	mov	x8, xzr
   36b68:	b	36640 <mpfr_zeta@@Base+0xa2c>
   36b6c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   36b70:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   36b74:	add	x0, x0, #0xaa0
   36b78:	add	x2, x2, #0xb30
   36b7c:	mov	w1, #0xb6                  	// #182
   36b80:	bl	d030 <mpfr_assert_fail@plt>
   36b84:	b	36634 <mpfr_zeta@@Base+0xa20>
   36b88:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   36b8c:	ldr	x1, [x1, #3928]
   36b90:	mov	w3, #0x1                   	// #1
   36b94:	mov	x0, x25
   36b98:	mov	w4, w26
   36b9c:	bl	ca10 <mpfr_round_near_x@plt>
   36ba0:	cmp	w0, #0x0
   36ba4:	mov	w22, w0
   36ba8:	cset	w8, ne  // ne = any
   36bac:	cbnz	w0, 36614 <mpfr_zeta@@Base+0xa00>
   36bb0:	b	36610 <mpfr_zeta@@Base+0x9fc>
   36bb4:	bl	cdd0 <mpfr_abort_prec_max@plt>
   36bb8:	sub	sp, sp, #0x80
   36bbc:	stp	x29, x30, [sp, #96]
   36bc0:	add	x29, sp, #0x60
   36bc4:	stp	x20, x19, [sp, #112]
   36bc8:	mov	x19, x1
   36bcc:	mov	x20, x0
   36bd0:	sub	x1, x29, #0x20
   36bd4:	add	x2, sp, #0x20
   36bd8:	mov	x3, sp
   36bdc:	mov	w0, #0x40                  	// #64
   36be0:	mov	x4, xzr
   36be4:	bl	d150 <mpfr_inits2@plt>
   36be8:	mov	w1, #0x1                   	// #1
   36bec:	mov	x0, x20
   36bf0:	mov	x2, xzr
   36bf4:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   36bf8:	tbnz	w0, #31, 36c14 <mpfr_zeta@@Base+0x1000>
   36bfc:	sub	x0, x29, #0x20
   36c00:	mov	w2, #0x1                   	// #1
   36c04:	mov	w3, #0x2                   	// #2
   36c08:	mov	x1, x20
   36c0c:	bl	ca00 <mpfr_sub_ui@plt>
   36c10:	b	36c28 <mpfr_zeta@@Base+0x1014>
   36c14:	sub	x0, x29, #0x20
   36c18:	mov	w1, #0x1                   	// #1
   36c1c:	mov	w3, #0x2                   	// #2
   36c20:	mov	x2, x20
   36c24:	bl	cf30 <mpfr_ui_sub@plt>
   36c28:	mov	x8, #0xfffffffffffffff2    	// #-14
   36c2c:	sub	x2, x8, x19
   36c30:	add	x0, sp, #0x20
   36c34:	mov	w1, #0x1                   	// #1
   36c38:	mov	w3, #0x2                   	// #2
   36c3c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   36c40:	ldur	x8, [x29, #-16]
   36c44:	add	x19, x19, #0xe
   36c48:	sub	x0, x29, #0x20
   36c4c:	cmp	x8, x19
   36c50:	b.ge	36c68 <mpfr_zeta@@Base+0x1054>  // b.tcont
   36c54:	mov	w1, #0x1                   	// #1
   36c58:	mov	w3, #0x2                   	// #2
   36c5c:	mov	x2, x19
   36c60:	bl	cac0 <mpfr_set_ui_2exp@plt>
   36c64:	b	36c78 <mpfr_zeta@@Base+0x1064>
   36c68:	sub	x1, x29, #0x20
   36c6c:	mov	w2, #0x1                   	// #1
   36c70:	mov	w3, #0x2                   	// #2
   36c74:	bl	c780 <mpfr_mul_2ui@plt>
   36c78:	add	x0, sp, #0x20
   36c7c:	add	x1, sp, #0x20
   36c80:	mov	w2, #0x1                   	// #1
   36c84:	mov	w3, #0x2                   	// #2
   36c88:	bl	c710 <mpfr_add_ui@plt>
   36c8c:	sub	x0, x29, #0x20
   36c90:	sub	x1, x29, #0x20
   36c94:	add	x2, sp, #0x20
   36c98:	mov	w3, #0x2                   	// #2
   36c9c:	bl	c1b0 <mpfr_mul@plt>
   36ca0:	mov	x0, sp
   36ca4:	sub	x1, x29, #0x20
   36ca8:	mov	w2, #0x1                   	// #1
   36cac:	mov	w3, #0x2                   	// #2
   36cb0:	bl	c710 <mpfr_add_ui@plt>
   36cb4:	ldr	x8, [sp, #16]
   36cb8:	cmp	x8, #0x3
   36cbc:	b.gt	36cd8 <mpfr_zeta@@Base+0x10c4>
   36cc0:	sub	x0, x29, #0x20
   36cc4:	mov	w1, #0x8                   	// #8
   36cc8:	mov	w3, #0x2                   	// #2
   36ccc:	mov	x2, xzr
   36cd0:	bl	cac0 <mpfr_set_ui_2exp@plt>
   36cd4:	b	36cec <mpfr_zeta@@Base+0x10d8>
   36cd8:	ldr	w3, [sp, #8]
   36cdc:	sub	x0, x29, #0x20
   36ce0:	mov	x1, sp
   36ce4:	mov	w2, #0x2                   	// #2
   36ce8:	bl	cb70 <mpfr_set4@plt>
   36cec:	sub	x0, x29, #0x20
   36cf0:	sub	x1, x29, #0x20
   36cf4:	mov	w3, #0x2                   	// #2
   36cf8:	mov	x2, x19
   36cfc:	bl	cde0 <mpfr_div_2ui@plt>
   36d00:	sub	x0, x29, #0x20
   36d04:	sub	x1, x29, #0x20
   36d08:	mov	w2, #0x1                   	// #1
   36d0c:	mov	w3, #0x2                   	// #2
   36d10:	bl	c710 <mpfr_add_ui@plt>
   36d14:	sub	x0, x29, #0x20
   36d18:	sub	x1, x29, #0x20
   36d1c:	add	x2, sp, #0x20
   36d20:	mov	w3, #0x2                   	// #2
   36d24:	bl	c1b0 <mpfr_mul@plt>
   36d28:	add	x0, sp, #0x20
   36d2c:	mov	x1, sp
   36d30:	mov	w2, #0xd                   	// #13
   36d34:	mov	w3, #0x2                   	// #2
   36d38:	bl	c710 <mpfr_add_ui@plt>
   36d3c:	add	x0, sp, #0x20
   36d40:	add	x1, sp, #0x20
   36d44:	sub	x2, x29, #0x20
   36d48:	mov	w3, #0x2                   	// #2
   36d4c:	bl	c1b0 <mpfr_mul@plt>
   36d50:	sub	x0, x29, #0x20
   36d54:	sub	x1, x29, #0x20
   36d58:	mov	w2, #0x2                   	// #2
   36d5c:	bl	c8c0 <mpfr_sqr@plt>
   36d60:	add	x0, sp, #0x20
   36d64:	add	x1, sp, #0x20
   36d68:	sub	x2, x29, #0x20
   36d6c:	mov	w3, #0x2                   	// #2
   36d70:	bl	c1b0 <mpfr_mul@plt>
   36d74:	ldr	x19, [sp, #48]
   36d78:	sub	x0, x29, #0x20
   36d7c:	add	x1, sp, #0x20
   36d80:	mov	x2, sp
   36d84:	mov	x3, xzr
   36d88:	bl	c650 <mpfr_clears@plt>
   36d8c:	mov	x0, x19
   36d90:	ldp	x20, x19, [sp, #112]
   36d94:	ldp	x29, x30, [sp, #96]
   36d98:	add	sp, sp, #0x80
   36d9c:	ret
   36da0:	sub	sp, sp, #0x50
   36da4:	stp	x22, x21, [sp, #48]
   36da8:	mov	x21, x0
   36dac:	mov	x0, sp
   36db0:	stp	x29, x30, [sp, #16]
   36db4:	stp	x24, x23, [sp, #32]
   36db8:	stp	x20, x19, [sp, #64]
   36dbc:	add	x29, sp, #0x10
   36dc0:	mov	w20, w5
   36dc4:	mov	x19, x4
   36dc8:	mov	x22, x3
   36dcc:	mov	x24, x2
   36dd0:	mov	x23, x1
   36dd4:	bl	c400 <mpfr_mpz_init@plt>
   36dd8:	mov	x0, sp
   36ddc:	mov	w2, #0x3                   	// #3
   36de0:	mov	x1, x24
   36de4:	bl	c260 <mpfr_get_z@plt>
   36de8:	mov	x0, sp
   36dec:	mov	x1, xzr
   36df0:	bl	c450 <__gmpz_tstbit@plt>
   36df4:	cbz	w0, 36e34 <mpfr_zeta@@Base+0x1220>
   36df8:	cmp	w20, #0x3
   36dfc:	b.ne	36e08 <mpfr_zeta@@Base+0x11f4>  // b.any
   36e00:	mov	x0, x19
   36e04:	bl	c5c0 <mpfr_nextabove@plt>
   36e08:	cmp	w20, #0x3
   36e0c:	mov	w8, #0x2                   	// #2
   36e10:	csel	w8, w8, w20, eq  // eq = none
   36e14:	cmp	w20, #0x2
   36e18:	mov	w9, #0x3                   	// #3
   36e1c:	csel	w3, w9, w8, eq  // eq = none
   36e20:	mov	x0, x22
   36e24:	mov	x1, x19
   36e28:	mov	x2, x24
   36e2c:	bl	c1b0 <mpfr_mul@plt>
   36e30:	b	36e58 <mpfr_zeta@@Base+0x1244>
   36e34:	mov	x0, x22
   36e38:	mov	x1, x19
   36e3c:	mov	x2, x24
   36e40:	mov	w3, w20
   36e44:	bl	c1b0 <mpfr_mul@plt>
   36e48:	cmp	w20, #0x3
   36e4c:	b.ne	36e58 <mpfr_zeta@@Base+0x1244>  // b.any
   36e50:	mov	x0, x19
   36e54:	bl	c5c0 <mpfr_nextabove@plt>
   36e58:	mov	w2, #0x1                   	// #1
   36e5c:	mov	x0, x22
   36e60:	mov	x1, x22
   36e64:	mov	w3, wzr
   36e68:	bl	cde0 <mpfr_div_2ui@plt>
   36e6c:	mov	x0, sp
   36e70:	mov	w1, #0x1                   	// #1
   36e74:	bl	c450 <__gmpz_tstbit@plt>
   36e78:	cbz	w0, 36eb8 <mpfr_zeta@@Base+0x12a4>
   36e7c:	cmp	w20, #0x3
   36e80:	mov	w8, #0x2                   	// #2
   36e84:	csel	w8, w8, w20, eq  // eq = none
   36e88:	cmp	w20, #0x2
   36e8c:	mov	w9, #0x3                   	// #3
   36e90:	csel	w2, w9, w8, eq  // eq = none
   36e94:	mov	x0, x22
   36e98:	mov	x1, x22
   36e9c:	bl	c920 <mpfr_sin@plt>
   36ea0:	mov	w3, #0x1                   	// #1
   36ea4:	mov	x0, x22
   36ea8:	mov	x1, x22
   36eac:	mov	w2, wzr
   36eb0:	bl	cb70 <mpfr_set4@plt>
   36eb4:	b	36ec8 <mpfr_zeta@@Base+0x12b4>
   36eb8:	mov	x0, x22
   36ebc:	mov	x1, x22
   36ec0:	mov	w2, w20
   36ec4:	bl	c920 <mpfr_sin@plt>
   36ec8:	mov	x0, sp
   36ecc:	bl	c610 <mpfr_mpz_clear@plt>
   36ed0:	mov	x0, x21
   36ed4:	mov	x1, x23
   36ed8:	mov	w2, w20
   36edc:	bl	36594 <mpfr_zeta@@Base+0x980>
   36ee0:	mov	x0, x21
   36ee4:	mov	x1, x21
   36ee8:	mov	x2, x22
   36eec:	mov	w3, w20
   36ef0:	bl	c1b0 <mpfr_mul@plt>
   36ef4:	mov	x0, x21
   36ef8:	mov	x1, x21
   36efc:	mov	w2, w20
   36f00:	bl	c520 <mpfr_log@plt>
   36f04:	mov	x0, x22
   36f08:	mov	x1, x23
   36f0c:	mov	w2, w20
   36f10:	bl	cad0 <mpfr_lngamma@plt>
   36f14:	mov	x0, x21
   36f18:	mov	x1, x21
   36f1c:	mov	x2, x22
   36f20:	mov	w3, w20
   36f24:	bl	c640 <mpfr_add@plt>
   36f28:	cmp	w20, #0x3
   36f2c:	mov	w8, #0x2                   	// #2
   36f30:	csel	w8, w8, w20, eq  // eq = none
   36f34:	cmp	w20, #0x2
   36f38:	mov	w9, #0x3                   	// #3
   36f3c:	csel	w24, w9, w8, eq  // eq = none
   36f40:	mov	w2, #0x1                   	// #1
   36f44:	mov	x0, x22
   36f48:	mov	x1, x19
   36f4c:	mov	w3, w24
   36f50:	bl	c780 <mpfr_mul_2ui@plt>
   36f54:	mov	x0, x22
   36f58:	mov	x1, x22
   36f5c:	mov	w2, w24
   36f60:	bl	c520 <mpfr_log@plt>
   36f64:	mov	x0, x22
   36f68:	mov	x1, x22
   36f6c:	mov	x2, x23
   36f70:	mov	w3, w24
   36f74:	bl	c1b0 <mpfr_mul@plt>
   36f78:	mov	x0, x21
   36f7c:	mov	x1, x21
   36f80:	mov	x2, x22
   36f84:	mov	w3, w20
   36f88:	bl	bfd0 <mpfr_sub@plt>
   36f8c:	mov	x0, x21
   36f90:	mov	x1, x21
   36f94:	mov	w2, w20
   36f98:	bl	cc20 <mpfr_exp@plt>
   36f9c:	cmp	w20, #0x3
   36fa0:	b.ne	36fac <mpfr_zeta@@Base+0x1398>  // b.any
   36fa4:	mov	x0, x19
   36fa8:	bl	c230 <mpfr_nextbelow@plt>
   36fac:	ldp	x20, x19, [sp, #64]
   36fb0:	ldp	x22, x21, [sp, #48]
   36fb4:	ldp	x24, x23, [sp, #32]
   36fb8:	ldp	x29, x30, [sp, #16]
   36fbc:	add	sp, sp, #0x50
   36fc0:	ret
   36fc4:	cmp	w0, #0x1
   36fc8:	b.lt	37048 <mpfr_zeta@@Base+0x1434>  // b.tstop
   36fcc:	sub	sp, sp, #0x90
   36fd0:	stp	x29, x30, [sp, #48]
   36fd4:	stp	x28, x27, [sp, #64]
   36fd8:	stp	x26, x25, [sp, #80]
   36fdc:	stp	x24, x23, [sp, #96]
   36fe0:	stp	x22, x21, [sp, #112]
   36fe4:	stp	x20, x19, [sp, #128]
   36fe8:	mov	x21, x1
   36fec:	mov	x19, x1
   36ff0:	ldr	x1, [x21, #32]!
   36ff4:	mov	w20, w0
   36ff8:	add	x0, sp, #0x10
   36ffc:	add	x29, sp, #0x30
   37000:	bl	cf60 <mpfr_init2@plt>
   37004:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   37008:	ldr	x1, [x1, #3928]
   3700c:	mov	w2, #0xc                   	// #12
   37010:	mov	x0, x21
   37014:	mov	w3, wzr
   37018:	bl	d160 <mpfr_div_ui@plt>
   3701c:	cmp	w20, #0x1
   37020:	b.ne	3704c <mpfr_zeta@@Base+0x1438>  // b.any
   37024:	add	x0, sp, #0x10
   37028:	bl	c4f0 <mpfr_clear@plt>
   3702c:	ldp	x20, x19, [sp, #128]
   37030:	ldp	x22, x21, [sp, #112]
   37034:	ldp	x24, x23, [sp, #96]
   37038:	ldp	x26, x25, [sp, #80]
   3703c:	ldp	x28, x27, [sp, #64]
   37040:	ldp	x29, x30, [sp, #48]
   37044:	add	sp, sp, #0x90
   37048:	ret
   3704c:	mov	x22, xzr
   37050:	add	w23, w20, #0x1
   37054:	add	x8, x19, #0x40
   37058:	mov	w25, #0x2                   	// #2
   3705c:	mov	w26, #0xc                   	// #12
   37060:	mov	w28, #0x2                   	// #2
   37064:	str	x8, [sp, #8]
   37068:	b	370a8 <mpfr_zeta@@Base+0x1494>
   3706c:	add	x20, x19, x28, lsl #5
   37070:	add	x1, sp, #0x10
   37074:	mov	w2, #0x18                  	// #24
   37078:	mov	x0, x20
   3707c:	mov	w3, wzr
   37080:	bl	d160 <mpfr_div_ui@plt>
   37084:	ldr	w8, [x20, #8]
   37088:	add	x28, x28, #0x1
   3708c:	add	w26, w26, #0x8
   37090:	add	w25, w25, #0x2
   37094:	cmp	x28, x23
   37098:	neg	w8, w8
   3709c:	add	x22, x22, #0x1
   370a0:	str	w8, [x20, #8]
   370a4:	b.eq	37024 <mpfr_zeta@@Base+0x1410>  // b.none
   370a8:	sub	x1, x28, #0x1
   370ac:	add	x0, sp, #0x10
   370b0:	mov	x2, xzr
   370b4:	mov	w3, wzr
   370b8:	bl	cac0 <mpfr_set_ui_2exp@plt>
   370bc:	mov	w8, #0xc                   	// #12
   370c0:	orr	w9, wzr, #0x6
   370c4:	madd	w2, w28, w8, w9
   370c8:	add	x0, sp, #0x10
   370cc:	add	x1, sp, #0x10
   370d0:	mov	w3, wzr
   370d4:	bl	d160 <mpfr_div_ui@plt>
   370d8:	cmp	x28, #0x3
   370dc:	b.cc	3706c <mpfr_zeta@@Base+0x1458>  // b.lo, b.ul, b.last
   370e0:	ldr	x20, [sp, #8]
   370e4:	mov	x21, x22
   370e8:	mov	w24, w25
   370ec:	mov	w27, w26
   370f0:	mul	w8, w27, w24
   370f4:	sxtw	x2, w8
   370f8:	add	x0, sp, #0x10
   370fc:	add	x1, sp, #0x10
   37100:	mov	w3, wzr
   37104:	bl	d160 <mpfr_div_ui@plt>
   37108:	add	x0, sp, #0x10
   3710c:	add	x1, sp, #0x10
   37110:	mov	x2, x20
   37114:	mov	w3, wzr
   37118:	bl	c640 <mpfr_add@plt>
   3711c:	sub	w27, w27, #0x8
   37120:	sub	w24, w24, #0x2
   37124:	subs	x21, x21, #0x1
   37128:	add	x20, x20, #0x20
   3712c:	b.ne	370f0 <mpfr_zeta@@Base+0x14dc>  // b.any
   37130:	b	3706c <mpfr_zeta@@Base+0x1458>
   37134:	sub	sp, sp, #0x110
   37138:	stp	x29, x30, [sp, #208]
   3713c:	stp	x28, x23, [sp, #224]
   37140:	stp	x22, x21, [sp, #240]
   37144:	stp	x20, x19, [sp, #256]
   37148:	ldr	x22, [x0]
   3714c:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   37150:	add	x29, sp, #0xd0
   37154:	cmp	x22, x8
   37158:	b.ge	37298 <mpfr_zeta@@Base+0x1684>  // b.tcont
   3715c:	sub	x8, x22, #0x1
   37160:	add	x9, x22, #0x3e
   37164:	cmp	x8, #0x0
   37168:	csel	x8, x9, x8, lt  // lt = tstop
   3716c:	asr	x8, x8, #6
   37170:	mov	w20, w2
   37174:	mov	x19, x0
   37178:	mov	x21, x1
   3717c:	cmp	x22, #0x201
   37180:	add	x23, x8, #0x1
   37184:	b.lt	3719c <mpfr_zeta@@Base+0x1588>  // b.tstop
   37188:	lsl	x0, x23, #4
   3718c:	str	x0, [sp]
   37190:	bl	d1f0 <mpfr_allocate_func@plt>
   37194:	str	x0, [sp, #8]
   37198:	b	371a8 <mpfr_zeta@@Base+0x1594>
   3719c:	mov	x8, sp
   371a0:	add	x8, x8, #0x10
   371a4:	stp	xzr, x8, [sp]
   371a8:	ldr	x8, [sp, #8]
   371ac:	mov	w9, #0x1                   	// #1
   371b0:	sub	x0, x29, #0x40
   371b4:	mov	x1, x21
   371b8:	stur	x8, [x29, #-8]
   371bc:	add	x8, x8, x23, lsl #3
   371c0:	mov	w2, wzr
   371c4:	stur	x22, [x29, #-64]
   371c8:	stur	w9, [x29, #-24]
   371cc:	stp	x8, x22, [x29, #-40]
   371d0:	stur	w9, [x29, #-56]
   371d4:	bl	c1d0 <mpfr_neg@plt>
   371d8:	sxtw	x1, w20
   371dc:	sub	x0, x29, #0x20
   371e0:	sub	x2, x29, #0x40
   371e4:	mov	w3, wzr
   371e8:	bl	cf00 <mpfr_ui_pow@plt>
   371ec:	sub	x0, x29, #0x20
   371f0:	sub	x1, x29, #0x20
   371f4:	mov	w2, #0x1                   	// #1
   371f8:	mov	w3, wzr
   371fc:	bl	cde0 <mpfr_div_2ui@plt>
   37200:	ldur	w3, [x29, #-24]
   37204:	sub	x1, x29, #0x20
   37208:	mov	x0, x19
   3720c:	mov	w2, wzr
   37210:	bl	cb70 <mpfr_set4@plt>
   37214:	cmp	w20, #0x3
   37218:	b.lt	37258 <mpfr_zeta@@Base+0x1644>  // b.tstop
   3721c:	sxtw	x8, w20
   37220:	add	x20, x8, #0x1
   37224:	sub	x1, x20, #0x2
   37228:	sub	x0, x29, #0x20
   3722c:	sub	x2, x29, #0x40
   37230:	mov	w3, wzr
   37234:	bl	cf00 <mpfr_ui_pow@plt>
   37238:	sub	x2, x29, #0x20
   3723c:	mov	x0, x19
   37240:	mov	x1, x19
   37244:	mov	w3, wzr
   37248:	bl	c640 <mpfr_add@plt>
   3724c:	sub	x20, x20, #0x1
   37250:	cmp	x20, #0x3
   37254:	b.gt	37224 <mpfr_zeta@@Base+0x1610>
   37258:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
   3725c:	ldr	x2, [x2, #3928]
   37260:	mov	x0, x19
   37264:	mov	x1, x19
   37268:	mov	w3, wzr
   3726c:	bl	c640 <mpfr_add@plt>
   37270:	ldr	x1, [sp]
   37274:	cbz	x1, 37280 <mpfr_zeta@@Base+0x166c>
   37278:	ldr	x0, [sp, #8]
   3727c:	bl	d120 <mpfr_free_func@plt>
   37280:	ldp	x20, x19, [sp, #256]
   37284:	ldp	x22, x21, [sp, #240]
   37288:	ldp	x28, x23, [sp, #224]
   3728c:	ldp	x29, x30, [sp, #208]
   37290:	add	sp, sp, #0x110
   37294:	ret
   37298:	bl	cdd0 <mpfr_abort_prec_max@plt>
   3729c:	sub	sp, sp, #0x140
   372a0:	stp	x20, x19, [sp, #304]
   372a4:	mov	x19, x0
   372a8:	stp	x29, x30, [sp, #240]
   372ac:	stp	x28, x25, [sp, #256]
   372b0:	stp	x24, x23, [sp, #272]
   372b4:	stp	x22, x21, [sp, #288]
   372b8:	add	x29, sp, #0xf0
   372bc:	cbz	w3, 37318 <mpfr_zeta@@Base+0x1704>
   372c0:	ldr	x22, [x19]
   372c4:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   372c8:	cmp	x22, x8
   372cc:	b.ge	374f0 <mpfr_zeta@@Base+0x18dc>  // b.tcont
   372d0:	sub	x8, x22, #0x1
   372d4:	add	x9, x22, #0x3e
   372d8:	cmp	x8, #0x0
   372dc:	csel	x8, x9, x8, lt  // lt = tstop
   372e0:	asr	x8, x8, #6
   372e4:	add	x25, x8, #0x1
   372e8:	add	x8, x25, x25, lsl #1
   372ec:	mov	x23, x4
   372f0:	mov	w24, w3
   372f4:	mov	w20, w2
   372f8:	mov	x21, x1
   372fc:	cmp	x8, #0x11
   37300:	b.lt	3732c <mpfr_zeta@@Base+0x1718>  // b.tstop
   37304:	lsl	x0, x8, #3
   37308:	str	x0, [sp]
   3730c:	bl	d1f0 <mpfr_allocate_func@plt>
   37310:	str	x0, [sp, #8]
   37314:	b	37338 <mpfr_zeta@@Base+0x1724>
   37318:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3731c:	mov	w9, #0x1                   	// #1
   37320:	str	x8, [x19, #16]
   37324:	str	w9, [x19, #8]
   37328:	b	374d4 <mpfr_zeta@@Base+0x18c0>
   3732c:	mov	x8, sp
   37330:	add	x8, x8, #0x10
   37334:	stp	xzr, x8, [sp]
   37338:	ldr	x8, [sp, #8]
   3733c:	mov	w9, #0x1                   	// #1
   37340:	sxtw	x10, w24
   37344:	stur	w9, [x29, #-24]
   37348:	stur	w9, [x29, #-56]
   3734c:	stur	w9, [x29, #-88]
   37350:	stur	x8, [x29, #-8]
   37354:	add	x9, x8, x25, lsl #3
   37358:	add	x8, x8, x25, lsl #4
   3735c:	stur	x22, [x29, #-96]
   37360:	stp	x9, x22, [x29, #-40]
   37364:	stp	x8, x22, [x29, #-72]
   37368:	add	x1, x23, x10, lsl #5
   3736c:	ldr	w3, [x1, #8]
   37370:	sub	x0, x29, #0x40
   37374:	mov	w2, wzr
   37378:	bl	cb70 <mpfr_set4@plt>
   3737c:	cmp	w24, #0x2
   37380:	b.lt	37460 <mpfr_zeta@@Base+0x184c>  // b.tstop
   37384:	lsl	w8, w24, #1
   37388:	sxtw	x9, w24
   3738c:	mov	w10, w24
   37390:	sxtw	x8, w8
   37394:	add	x9, x23, x9, lsl #5
   37398:	mul	w22, w20, w20
   3739c:	sub	x25, x10, #0x1
   373a0:	sub	x23, x9, #0x20
   373a4:	sub	x24, x8, #0x3
   373a8:	add	x2, x24, #0x1
   373ac:	sub	x0, x29, #0x20
   373b0:	mov	x1, x21
   373b4:	mov	w3, wzr
   373b8:	bl	c710 <mpfr_add_ui@plt>
   373bc:	sub	x0, x29, #0x40
   373c0:	sub	x1, x29, #0x40
   373c4:	sub	x2, x29, #0x20
   373c8:	mov	w3, wzr
   373cc:	bl	c1b0 <mpfr_mul@plt>
   373d0:	sub	x0, x29, #0x20
   373d4:	mov	x1, x21
   373d8:	mov	x2, x24
   373dc:	mov	w3, wzr
   373e0:	bl	c710 <mpfr_add_ui@plt>
   373e4:	sub	x0, x29, #0x40
   373e8:	sub	x1, x29, #0x40
   373ec:	sub	x2, x29, #0x20
   373f0:	mov	w3, wzr
   373f4:	bl	c1b0 <mpfr_mul@plt>
   373f8:	sub	x0, x29, #0x40
   373fc:	sub	x1, x29, #0x40
   37400:	mov	x2, x22
   37404:	mov	w3, wzr
   37408:	bl	d160 <mpfr_div_ui@plt>
   3740c:	sub	x0, x29, #0x40
   37410:	sub	x1, x29, #0x40
   37414:	mov	x2, x23
   37418:	mov	w3, wzr
   3741c:	bl	c640 <mpfr_add@plt>
   37420:	sub	x0, x29, #0x40
   37424:	mov	x1, x23
   37428:	bl	cea0 <mpfr_cmpabs@plt>
   3742c:	cmp	w0, #0x1
   37430:	b.ge	37448 <mpfr_zeta@@Base+0x1834>  // b.tcont
   37434:	sub	x23, x23, #0x20
   37438:	sub	x25, x25, #0x1
   3743c:	sub	x24, x24, #0x2
   37440:	cbnz	x25, 373a8 <mpfr_zeta@@Base+0x1794>
   37444:	b	37460 <mpfr_zeta@@Base+0x184c>
   37448:	ldr	w3, [x23, #8]
   3744c:	sub	x0, x29, #0x40
   37450:	mov	x1, x23
   37454:	mov	w2, wzr
   37458:	bl	cb70 <mpfr_set4@plt>
   3745c:	b	37434 <mpfr_zeta@@Base+0x1820>
   37460:	sub	x0, x29, #0x40
   37464:	sub	x1, x29, #0x40
   37468:	mov	x2, x21
   3746c:	mov	w3, wzr
   37470:	bl	c1b0 <mpfr_mul@plt>
   37474:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
   37478:	ldr	x2, [x2, #3928]
   3747c:	sub	x0, x29, #0x20
   37480:	mov	x1, x21
   37484:	mov	w3, wzr
   37488:	bl	c640 <mpfr_add@plt>
   3748c:	sub	x0, x29, #0x20
   37490:	sub	x1, x29, #0x20
   37494:	mov	w2, wzr
   37498:	bl	c1d0 <mpfr_neg@plt>
   3749c:	sxtw	x1, w20
   374a0:	sub	x0, x29, #0x60
   374a4:	sub	x2, x29, #0x20
   374a8:	mov	w3, wzr
   374ac:	bl	cf00 <mpfr_ui_pow@plt>
   374b0:	sub	x1, x29, #0x40
   374b4:	sub	x2, x29, #0x60
   374b8:	mov	x0, x19
   374bc:	mov	w3, wzr
   374c0:	bl	c1b0 <mpfr_mul@plt>
   374c4:	ldr	x1, [sp]
   374c8:	cbz	x1, 374d4 <mpfr_zeta@@Base+0x18c0>
   374cc:	ldr	x0, [sp, #8]
   374d0:	bl	d120 <mpfr_free_func@plt>
   374d4:	ldp	x20, x19, [sp, #304]
   374d8:	ldp	x22, x21, [sp, #288]
   374dc:	ldp	x24, x23, [sp, #272]
   374e0:	ldp	x28, x25, [sp, #256]
   374e4:	ldp	x29, x30, [sp, #240]
   374e8:	add	sp, sp, #0x140
   374ec:	ret
   374f0:	bl	cdd0 <mpfr_abort_prec_max@plt>

00000000000374f4 <mpfr_cmp_d@@Base>:
   374f4:	sub	sp, sp, #0x80
   374f8:	stp	x29, x30, [sp, #48]
   374fc:	stp	x26, x25, [sp, #64]
   37500:	stp	x24, x23, [sp, #80]
   37504:	stp	x22, x21, [sp, #96]
   37508:	stp	x20, x19, [sp, #112]
   3750c:	add	x29, sp, #0x30
   37510:	mov	x19, x0
   37514:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   37518:	ldr	x1, [x0, #2800]
   3751c:	add	x0, x0, #0xaf0
   37520:	blr	x1
   37524:	mrs	x23, tpidr_el0
   37528:	ldr	w24, [x23, x0]
   3752c:	mov	x20, x0
   37530:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   37534:	ldr	x1, [x0, #2736]
   37538:	add	x0, x0, #0xab0
   3753c:	blr	x1
   37540:	ldr	x25, [x23, x0]
   37544:	mov	x21, x0
   37548:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3754c:	ldr	x1, [x0, #2768]
   37550:	add	x0, x0, #0xad0
   37554:	blr	x1
   37558:	ldr	x26, [x23, x0]
   3755c:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   37560:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   37564:	mov	x22, x0
   37568:	mov	w10, #0x35                  	// #53
   3756c:	add	x11, sp, #0x8
   37570:	str	x8, [x23, x21]
   37574:	str	x9, [x23, x0]
   37578:	mov	w8, #0x1                   	// #1
   3757c:	add	x0, sp, #0x10
   37580:	mov	w1, wzr
   37584:	str	x10, [sp, #16]
   37588:	str	x11, [sp, #40]
   3758c:	str	w8, [sp, #24]
   37590:	bl	c2a0 <mpfr_set_d@plt>
   37594:	add	x1, sp, #0x10
   37598:	mov	w2, #0x1                   	// #1
   3759c:	mov	x0, x19
   375a0:	str	wzr, [x23, x20]
   375a4:	bl	ce90 <mpfr_cmp3@plt>
   375a8:	ldr	w8, [x23, x20]
   375ac:	str	x25, [x23, x21]
   375b0:	str	x26, [x23, x22]
   375b4:	ldp	x22, x21, [sp, #96]
   375b8:	orr	w8, w8, w24
   375bc:	str	w8, [x23, x20]
   375c0:	ldp	x20, x19, [sp, #112]
   375c4:	ldp	x24, x23, [sp, #80]
   375c8:	ldp	x26, x25, [sp, #64]
   375cc:	ldp	x29, x30, [sp, #48]
   375d0:	add	sp, sp, #0x80
   375d4:	ret

00000000000375d8 <mpfr_erf@@Base>:
   375d8:	sub	sp, sp, #0xa0
   375dc:	stp	x29, x30, [sp, #64]
   375e0:	stp	x26, x25, [sp, #96]
   375e4:	stp	x24, x23, [sp, #112]
   375e8:	stp	x22, x21, [sp, #128]
   375ec:	stp	x20, x19, [sp, #144]
   375f0:	ldr	x9, [x1, #16]
   375f4:	mov	x8, #0x2                   	// #2
   375f8:	movk	x8, #0x8000, lsl #48
   375fc:	add	x10, x8, #0x2
   37600:	mov	x21, x1
   37604:	cmp	x9, x10
   37608:	mov	x19, x0
   3760c:	str	x27, [sp, #80]
   37610:	add	x29, sp, #0x40
   37614:	b.lt	37948 <mpfr_erf@@Base+0x370>  // b.tstop
   37618:	mov	w20, w2
   3761c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   37620:	ldr	x1, [x0, #2800]
   37624:	add	x0, x0, #0xaf0
   37628:	blr	x1
   3762c:	mrs	x23, tpidr_el0
   37630:	ldr	w24, [x23, x0]
   37634:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   37638:	ldr	x1, [x0, #2736]
   3763c:	add	x0, x0, #0xab0
   37640:	blr	x1
   37644:	ldr	x25, [x23, x0]
   37648:	mov	x8, x0
   3764c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   37650:	ldr	x1, [x0, #2768]
   37654:	add	x0, x0, #0xad0
   37658:	blr	x1
   3765c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   37660:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   37664:	ldr	x26, [x23, x0]
   37668:	str	x10, [x23, x8]
   3766c:	str	x11, [x23, x0]
   37670:	ldr	x8, [x19]
   37674:	cmp	x8, #0x0
   37678:	cinc	x10, x8, lt  // lt = tstop
   3767c:	neg	x10, x10, asr #1
   37680:	cmp	x9, x10
   37684:	b.ge	3780c <mpfr_erf@@Base+0x234>  // b.tcont
   37688:	add	x1, x8, #0x11
   3768c:	add	x0, sp, #0x20
   37690:	bl	cf60 <mpfr_init2@plt>
   37694:	ldr	x8, [x19]
   37698:	mov	x0, sp
   3769c:	add	x1, x8, #0x11
   376a0:	bl	cf60 <mpfr_init2@plt>
   376a4:	add	x0, sp, #0x20
   376a8:	mov	w3, #0x2                   	// #2
   376ac:	mov	x1, x21
   376b0:	mov	x2, x21
   376b4:	mov	w27, #0x2                   	// #2
   376b8:	bl	c1b0 <mpfr_mul@plt>
   376bc:	add	x0, sp, #0x20
   376c0:	add	x1, sp, #0x20
   376c4:	mov	w2, #0x3                   	// #3
   376c8:	mov	w3, #0x2                   	// #2
   376cc:	bl	d160 <mpfr_div_ui@plt>
   376d0:	add	x0, sp, #0x20
   376d4:	add	x2, sp, #0x20
   376d8:	mov	w1, #0x1                   	// #1
   376dc:	mov	w3, #0x1                   	// #1
   376e0:	bl	cf30 <mpfr_ui_sub@plt>
   376e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   376e8:	ldr	x1, [x0, #2848]
   376ec:	add	x0, x0, #0xb20
   376f0:	blr	x1
   376f4:	add	x22, x23, x0
   376f8:	mov	x0, sp
   376fc:	mov	w2, #0x2                   	// #2
   37700:	mov	x1, x22
   37704:	bl	c840 <mpfr_cache@plt>
   37708:	mov	x0, sp
   3770c:	mov	x1, sp
   37710:	mov	w2, #0x2                   	// #2
   37714:	bl	ce20 <mpfr_sqrt@plt>
   37718:	add	x0, sp, #0x20
   3771c:	add	x1, sp, #0x20
   37720:	mov	x2, sp
   37724:	mov	w3, #0x1                   	// #1
   37728:	bl	caf0 <mpfr_div@plt>
   3772c:	add	x0, sp, #0x20
   37730:	add	x1, sp, #0x20
   37734:	mov	w2, #0x1                   	// #1
   37738:	mov	w3, #0x1                   	// #1
   3773c:	bl	c780 <mpfr_mul_2ui@plt>
   37740:	add	x0, sp, #0x20
   37744:	add	x1, sp, #0x20
   37748:	mov	w3, #0x1                   	// #1
   3774c:	mov	x2, x21
   37750:	bl	c1b0 <mpfr_mul@plt>
   37754:	mov	x0, sp
   37758:	mov	w2, #0x3                   	// #3
   3775c:	mov	x1, x22
   37760:	bl	c840 <mpfr_cache@plt>
   37764:	mov	x0, sp
   37768:	mov	x1, sp
   3776c:	mov	w2, #0x3                   	// #3
   37770:	bl	ce20 <mpfr_sqrt@plt>
   37774:	mov	x0, sp
   37778:	mov	x1, sp
   3777c:	mov	w2, #0x1                   	// #1
   37780:	mov	w3, #0x3                   	// #3
   37784:	bl	cde0 <mpfr_div_2ui@plt>
   37788:	ldr	w8, [x21, #8]
   3778c:	mov	x0, sp
   37790:	mov	x2, sp
   37794:	mov	x1, x21
   37798:	cmp	w8, #0x0
   3779c:	cinc	w3, w27, le
   377a0:	bl	caf0 <mpfr_div@plt>
   377a4:	ldr	x1, [x19]
   377a8:	add	x0, sp, #0x20
   377ac:	mov	w2, w20
   377b0:	bl	ce60 <mpfr_prec_round@plt>
   377b4:	ldr	x1, [x19]
   377b8:	mov	w22, w0
   377bc:	mov	x0, sp
   377c0:	mov	w2, w20
   377c4:	bl	ce60 <mpfr_prec_round@plt>
   377c8:	cmp	w22, #0x0
   377cc:	cset	w8, gt
   377d0:	csinv	w8, w8, wzr, ge  // ge = tcont
   377d4:	cmp	w0, #0x0
   377d8:	cset	w9, gt
   377dc:	csinv	w9, w9, wzr, ge  // ge = tcont
   377e0:	cmp	w8, w9
   377e4:	b.ne	377fc <mpfr_erf@@Base+0x224>  // b.any
   377e8:	add	x0, sp, #0x20
   377ec:	mov	x1, sp
   377f0:	mov	w2, #0x1                   	// #1
   377f4:	bl	ce90 <mpfr_cmp3@plt>
   377f8:	cbz	w0, 37920 <mpfr_erf@@Base+0x348>
   377fc:	add	x0, sp, #0x20
   37800:	bl	c4f0 <mpfr_clear@plt>
   37804:	mov	x0, sp
   37808:	bl	c4f0 <mpfr_clear@plt>
   3780c:	mov	w8, #0x35                  	// #53
   37810:	mov	x9, sp
   37814:	mov	w10, #0x1                   	// #1
   37818:	str	x8, [sp, #32]
   3781c:	str	x9, [sp, #56]
   37820:	str	w10, [sp, #40]
   37824:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
   37828:	ldr	x2, [x2, #4048]
   3782c:	add	x0, sp, #0x20
   37830:	mov	w3, #0x1                   	// #1
   37834:	mov	x1, x21
   37838:	bl	caf0 <mpfr_div@plt>
   3783c:	add	x0, sp, #0x20
   37840:	add	x1, sp, #0x20
   37844:	mov	w3, #0x1                   	// #1
   37848:	mov	x2, x21
   3784c:	bl	c1b0 <mpfr_mul@plt>
   37850:	ldr	x8, [x19]
   37854:	add	x0, sp, #0x20
   37858:	mov	x2, xzr
   3785c:	add	x1, x8, #0x1
   37860:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   37864:	cmp	w0, #0x1
   37868:	b.ge	379a4 <mpfr_erf@@Base+0x3cc>  // b.tcont
   3786c:	mov	x0, x21
   37870:	mov	w1, wzr
   37874:	bl	c190 <mpfr_get_d@plt>
   37878:	fmul	d0, d0, d0
   3787c:	mov	x0, x19
   37880:	mov	x1, x21
   37884:	mov	w2, w20
   37888:	bl	37a50 <mpfr_erf@@Base+0x478>
   3788c:	mov	w22, w0
   37890:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   37894:	ldr	x1, [x0, #2800]
   37898:	add	x0, x0, #0xaf0
   3789c:	blr	x1
   378a0:	str	w24, [x23, x0]
   378a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   378a8:	ldr	x1, [x0, #2736]
   378ac:	add	x0, x0, #0xab0
   378b0:	blr	x1
   378b4:	str	x25, [x23, x0]
   378b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   378bc:	ldr	x1, [x0, #2768]
   378c0:	add	x0, x0, #0xad0
   378c4:	blr	x1
   378c8:	str	x26, [x23, x0]
   378cc:	ldr	x8, [x19, #16]
   378d0:	cmp	x8, x26
   378d4:	b.gt	37990 <mpfr_erf@@Base+0x3b8>
   378d8:	cmp	x8, x25
   378dc:	b.lt	37990 <mpfr_erf@@Base+0x3b8>  // b.tstop
   378e0:	cbz	w22, 378fc <mpfr_erf@@Base+0x324>
   378e4:	orr	w8, w24, #0x8
   378e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   378ec:	ldr	x1, [x0, #2800]
   378f0:	add	x0, x0, #0xaf0
   378f4:	blr	x1
   378f8:	str	w8, [x23, x0]
   378fc:	mov	w0, w22
   37900:	ldp	x20, x19, [sp, #144]
   37904:	ldp	x22, x21, [sp, #128]
   37908:	ldp	x24, x23, [sp, #112]
   3790c:	ldp	x26, x25, [sp, #96]
   37910:	ldr	x27, [sp, #80]
   37914:	ldp	x29, x30, [sp, #64]
   37918:	add	sp, sp, #0xa0
   3791c:	ret
   37920:	ldr	w3, [sp, #8]
   37924:	mov	x1, sp
   37928:	mov	x0, x19
   3792c:	mov	w2, w20
   37930:	bl	cb70 <mpfr_set4@plt>
   37934:	add	x0, sp, #0x20
   37938:	bl	c4f0 <mpfr_clear@plt>
   3793c:	mov	x0, sp
   37940:	bl	c4f0 <mpfr_clear@plt>
   37944:	b	37890 <mpfr_erf@@Base+0x2b8>
   37948:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   3794c:	cmp	x9, x10
   37950:	b.eq	379c4 <mpfr_erf@@Base+0x3ec>  // b.none
   37954:	mov	x10, #0x2                   	// #2
   37958:	movk	x10, #0x8000, lsl #48
   3795c:	cmp	x9, x10
   37960:	b.ne	379dc <mpfr_erf@@Base+0x404>  // b.any
   37964:	str	x8, [x19, #16]
   37968:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3796c:	ldr	x1, [x0, #2800]
   37970:	add	x0, x0, #0xaf0
   37974:	blr	x1
   37978:	mrs	x8, tpidr_el0
   3797c:	ldr	w9, [x8, x0]
   37980:	mov	w22, wzr
   37984:	orr	w9, w9, #0x4
   37988:	str	w9, [x8, x0]
   3798c:	b	378fc <mpfr_erf@@Base+0x324>
   37990:	mov	x0, x19
   37994:	mov	w1, w22
   37998:	mov	w2, w20
   3799c:	bl	d020 <mpfr_check_range@plt>
   379a0:	b	379f0 <mpfr_erf@@Base+0x418>
   379a4:	ldr	w22, [x21, #8]
   379a8:	mov	w3, w20
   379ac:	cmp	w22, #0x0
   379b0:	b.gt	37a04 <mpfr_erf@@Base+0x42c>
   379b4:	cmp	w20, #0x2
   379b8:	b.ne	379f8 <mpfr_erf@@Base+0x420>  // b.any
   379bc:	mov	w3, #0x3                   	// #3
   379c0:	b	37a04 <mpfr_erf@@Base+0x42c>
   379c4:	ldrsw	x1, [x21, #8]
   379c8:	mov	x0, x19
   379cc:	mov	x2, xzr
   379d0:	mov	w3, wzr
   379d4:	bl	bed0 <mpfr_set_si_2exp@plt>
   379d8:	b	379f0 <mpfr_erf@@Base+0x418>
   379dc:	ldr	w3, [x21, #8]
   379e0:	mov	x0, x19
   379e4:	mov	x1, x21
   379e8:	mov	w2, wzr
   379ec:	bl	cb70 <mpfr_set4@plt>
   379f0:	mov	w22, w0
   379f4:	b	378fc <mpfr_erf@@Base+0x324>
   379f8:	cmp	w20, #0x3
   379fc:	mov	w8, #0x2                   	// #2
   37a00:	csel	w3, w8, w20, eq  // eq = none
   37a04:	cmp	w3, #0x4
   37a08:	b.hi	37a34 <mpfr_erf@@Base+0x45c>  // b.pmore
   37a0c:	mov	w8, #0x1                   	// #1
   37a10:	lsl	w8, w8, w3
   37a14:	mov	w9, #0x15                  	// #21
   37a18:	tst	w8, w9
   37a1c:	b.eq	37a34 <mpfr_erf@@Base+0x45c>  // b.none
   37a20:	sxtw	x1, w22
   37a24:	mov	x0, x19
   37a28:	mov	x2, xzr
   37a2c:	bl	bed0 <mpfr_set_si_2exp@plt>
   37a30:	b	37890 <mpfr_erf@@Base+0x2b8>
   37a34:	mov	x0, x19
   37a38:	mov	x1, xzr
   37a3c:	neg	w22, w22
   37a40:	bl	c560 <mpfr_setmax@plt>
   37a44:	ldr	w8, [x21, #8]
   37a48:	str	w8, [x19, #8]
   37a4c:	b	37890 <mpfr_erf@@Base+0x2b8>
   37a50:	sub	sp, sp, #0x1e0
   37a54:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   37a58:	stp	d11, d10, [sp, #352]
   37a5c:	stp	d9, d8, [sp, #368]
   37a60:	stp	x29, x30, [sp, #384]
   37a64:	stp	x28, x27, [sp, #400]
   37a68:	stp	x26, x25, [sp, #416]
   37a6c:	stp	x24, x23, [sp, #432]
   37a70:	stp	x22, x21, [sp, #448]
   37a74:	stp	x20, x19, [sp, #464]
   37a78:	mov	v8.16b, v0.16b
   37a7c:	ldr	d0, [x8, #2688]
   37a80:	ldr	x24, [x0]
   37a84:	mov	w22, w2
   37a88:	mov	x21, x1
   37a8c:	fdiv	d0, d8, d0
   37a90:	mov	x23, x0
   37a94:	subs	x20, x24, #0x1
   37a98:	fcvtzs	x19, d0
   37a9c:	str	d12, [sp, #336]
   37aa0:	add	x29, sp, #0x150
   37aa4:	b.eq	37edc <mpfr_erf@@Base+0x904>  // b.none
   37aa8:	b.le	37ee4 <mpfr_erf@@Base+0x90c>
   37aac:	clz	x8, x20
   37ab0:	mov	w9, #0x40                  	// #64
   37ab4:	sub	x8, x9, x8
   37ab8:	add	x9, x19, x24
   37abc:	mov	x10, #0xfffffffffffffeff    	// #-257
   37ac0:	add	x8, x9, x8
   37ac4:	movk	x10, #0x7fff, lsl #48
   37ac8:	add	x28, x8, #0x8
   37acc:	cmp	x28, x10
   37ad0:	b.gt	37f00 <mpfr_erf@@Base+0x928>
   37ad4:	sub	x8, x28, #0x1
   37ad8:	add	x9, x28, #0x3e
   37adc:	cmp	x8, #0x0
   37ae0:	csel	x8, x9, x8, lt  // lt = tstop
   37ae4:	asr	x8, x8, #6
   37ae8:	cmp	x28, #0x101
   37aec:	add	x19, x8, #0x1
   37af0:	str	x23, [sp, #16]
   37af4:	b.lt	37b0c <mpfr_erf@@Base+0x534>  // b.tstop
   37af8:	lsl	x0, x19, #5
   37afc:	str	x0, [sp, #56]
   37b00:	bl	d1f0 <mpfr_allocate_func@plt>
   37b04:	str	x0, [sp, #64]
   37b08:	b	37b18 <mpfr_erf@@Base+0x540>
   37b0c:	add	x8, sp, #0x38
   37b10:	add	x8, x8, #0x10
   37b14:	stp	xzr, x8, [sp, #56]
   37b18:	ldr	x8, [sp, #64]
   37b1c:	mov	w11, #0x18                  	// #24
   37b20:	cmp	w22, #0x0
   37b24:	mov	w9, #0x40                  	// #64
   37b28:	mov	w25, #0x1                   	// #1
   37b2c:	stur	x28, [x29, #-104]
   37b30:	stur	x28, [x29, #-136]
   37b34:	str	w22, [x29, #12]
   37b38:	str	x9, [sp, #8]
   37b3c:	fmov	d9, #8.000000000000000000e+00
   37b40:	fmov	d10, #1.000000000000000000e+00
   37b44:	fmov	d11, #5.000000000000000000e-01
   37b48:	mrs	x23, tpidr_el0
   37b4c:	stur	x8, [x29, #-16]
   37b50:	add	x9, x8, x19, lsl #3
   37b54:	add	x10, x8, x19, lsl #4
   37b58:	madd	x8, x19, x11, x8
   37b5c:	cinc	x24, x24, eq  // eq = none
   37b60:	stp	x9, x28, [x29, #-48]
   37b64:	stp	x10, x28, [x29, #-80]
   37b68:	stur	w25, [x29, #-32]
   37b6c:	stur	w25, [x29, #-64]
   37b70:	stur	w25, [x29, #-96]
   37b74:	stur	w25, [x29, #-128]
   37b78:	stur	x8, [x29, #-112]
   37b7c:	sub	x0, x29, #0x28
   37b80:	mov	w3, #0x2                   	// #2
   37b84:	mov	x1, x21
   37b88:	mov	x2, x21
   37b8c:	bl	c1b0 <mpfr_mul@plt>
   37b90:	sub	x0, x29, #0x48
   37b94:	mov	w1, #0x1                   	// #1
   37b98:	mov	x2, xzr
   37b9c:	mov	w3, wzr
   37ba0:	bl	cac0 <mpfr_set_ui_2exp@plt>
   37ba4:	sub	x0, x29, #0x68
   37ba8:	mov	w1, #0x1                   	// #1
   37bac:	mov	x2, xzr
   37bb0:	mov	w3, wzr
   37bb4:	bl	cac0 <mpfr_set_ui_2exp@plt>
   37bb8:	add	x0, sp, #0x18
   37bbc:	mov	w1, #0x35                  	// #53
   37bc0:	bl	cf60 <mpfr_init2@plt>
   37bc4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   37bc8:	neg	x20, x28
   37bcc:	mov	w27, #0x3                   	// #3
   37bd0:	mov	w22, #0x1                   	// #1
   37bd4:	str	w25, [sp, #32]
   37bd8:	str	x8, [sp, #40]
   37bdc:	b	37c20 <mpfr_erf@@Base+0x648>
   37be0:	sub	x2, x19, x8
   37be4:	add	x0, sp, #0x18
   37be8:	add	x1, sp, #0x18
   37bec:	mov	w3, #0x2                   	// #2
   37bf0:	bl	bff0 <mpfr_mul_2si@plt>
   37bf4:	fmul	d0, d12, d9
   37bf8:	fadd	d0, d0, d10
   37bfc:	mov	x0, x26
   37c00:	bl	37f04 <mpfr_erf@@Base+0x92c>
   37c04:	fadd	d0, d0, d11
   37c08:	add	x0, sp, #0x18
   37c0c:	add	x1, sp, #0x18
   37c10:	mov	w2, #0x2                   	// #2
   37c14:	bl	c860 <mpfr_add_d@plt>
   37c18:	add	w22, w22, #0x1
   37c1c:	add	w27, w27, #0x2
   37c20:	sub	x0, x29, #0x68
   37c24:	sub	x1, x29, #0x28
   37c28:	sub	x2, x29, #0x68
   37c2c:	mov	w3, #0x2                   	// #2
   37c30:	bl	c1b0 <mpfr_mul@plt>
   37c34:	mov	w2, w22
   37c38:	sub	x0, x29, #0x68
   37c3c:	sub	x1, x29, #0x68
   37c40:	mov	w3, #0x2                   	// #2
   37c44:	bl	d160 <mpfr_div_ui@plt>
   37c48:	mov	w2, w27
   37c4c:	sub	x0, x29, #0x88
   37c50:	sub	x1, x29, #0x68
   37c54:	mov	w3, #0x2                   	// #2
   37c58:	bl	d160 <mpfr_div_ui@plt>
   37c5c:	ldur	x19, [x29, #-56]
   37c60:	sub	x0, x29, #0x48
   37c64:	sub	x1, x29, #0x48
   37c68:	sub	x2, x29, #0x88
   37c6c:	mov	w3, wzr
   37c70:	tbnz	w22, #0, 37c7c <mpfr_erf@@Base+0x6a4>
   37c74:	bl	c640 <mpfr_add@plt>
   37c78:	b	37c80 <mpfr_erf@@Base+0x6a8>
   37c7c:	bl	bfd0 <mpfr_sub@plt>
   37c80:	ldur	x8, [x29, #-56]
   37c84:	ldur	x9, [x29, #-120]
   37c88:	ucvtf	d12, w22
   37c8c:	fcmp	d12, d8
   37c90:	sub	x26, x9, x8
   37c94:	b.lt	37be0 <mpfr_erf@@Base+0x608>  // b.tstop
   37c98:	cmp	x26, x20
   37c9c:	b.ge	37be0 <mpfr_erf@@Base+0x608>  // b.tcont
   37ca0:	sub	x0, x29, #0x48
   37ca4:	sub	x2, x29, #0x48
   37ca8:	mov	w3, #0x2                   	// #2
   37cac:	mov	x1, x21
   37cb0:	bl	c1b0 <mpfr_mul@plt>
   37cb4:	ldur	x8, [x29, #-56]
   37cb8:	add	x8, x8, #0x1
   37cbc:	stur	x8, [x29, #-56]
   37cc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   37cc4:	ldr	x1, [x0, #2848]
   37cc8:	add	x0, x0, #0xb20
   37ccc:	blr	x1
   37cd0:	add	x1, x23, x0
   37cd4:	sub	x0, x29, #0x68
   37cd8:	mov	w2, #0x1                   	// #1
   37cdc:	bl	c840 <mpfr_cache@plt>
   37ce0:	sub	x0, x29, #0x68
   37ce4:	sub	x1, x29, #0x68
   37ce8:	mov	w2, #0x1                   	// #1
   37cec:	bl	ce20 <mpfr_sqrt@plt>
   37cf0:	sub	x0, x29, #0x48
   37cf4:	sub	x1, x29, #0x48
   37cf8:	sub	x2, x29, #0x68
   37cfc:	mov	w3, wzr
   37d00:	bl	caf0 <mpfr_div@plt>
   37d04:	add	x0, sp, #0x18
   37d08:	add	x1, sp, #0x18
   37d0c:	mov	w2, #0x2                   	// #2
   37d10:	mov	w3, #0x2                   	// #2
   37d14:	bl	c780 <mpfr_mul_2ui@plt>
   37d18:	add	x0, sp, #0x18
   37d1c:	add	x1, sp, #0x18
   37d20:	mov	w2, #0xb                   	// #11
   37d24:	mov	w3, #0x2                   	// #2
   37d28:	bl	c710 <mpfr_add_ui@plt>
   37d2c:	ldr	x8, [sp, #40]
   37d30:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   37d34:	cmp	x8, x9
   37d38:	b.eq	37dfc <mpfr_erf@@Base+0x824>  // b.none
   37d3c:	ldr	x19, [sp, #40]
   37d40:	add	x0, sp, #0x18
   37d44:	bl	c4f0 <mpfr_clear@plt>
   37d48:	ldur	x8, [x29, #-56]
   37d4c:	mov	x20, #0xfffffffffffffeff    	// #-257
   37d50:	movk	x20, #0x7fff, lsl #48
   37d54:	add	x9, x20, #0x105
   37d58:	cmp	x8, x9
   37d5c:	b.lt	37d9c <mpfr_erf@@Base+0x7c4>  // b.tstop
   37d60:	ldur	x8, [x29, #-72]
   37d64:	ldur	x0, [x29, #-48]
   37d68:	sub	x2, x28, x19
   37d6c:	mov	x3, x24
   37d70:	sub	x9, x8, #0x1
   37d74:	add	x8, x8, #0x3e
   37d78:	cmp	x9, #0x0
   37d7c:	csel	x8, x8, x9, lt  // lt = tstop
   37d80:	asr	x8, x8, #6
   37d84:	add	x1, x8, #0x1
   37d88:	bl	c830 <mpfr_round_p@plt>
   37d8c:	cbz	w0, 37d9c <mpfr_erf@@Base+0x7c4>
   37d90:	mov	w8, wzr
   37d94:	tbnz	w8, #0, 37b7c <mpfr_erf@@Base+0x5a4>
   37d98:	b	37e84 <mpfr_erf@@Base+0x8ac>
   37d9c:	ldr	x19, [sp, #8]
   37da0:	sub	x8, x20, x28
   37da4:	cmp	x19, x8
   37da8:	b.gt	37e68 <mpfr_erf@@Base+0x890>
   37dac:	add	x28, x28, x19
   37db0:	cmp	x28, #0x0
   37db4:	cinc	x8, x28, lt  // lt = tstop
   37db8:	cmp	x28, x20
   37dbc:	b.gt	37f00 <mpfr_erf@@Base+0x928>
   37dc0:	asr	x10, x8, #1
   37dc4:	sub	x8, x28, #0x1
   37dc8:	add	x9, x28, #0x3e
   37dcc:	cmp	x8, #0x0
   37dd0:	ldr	x1, [sp, #56]
   37dd4:	csel	x8, x9, x8, lt  // lt = tstop
   37dd8:	asr	x8, x8, #6
   37ddc:	add	x20, x8, #0x1
   37de0:	lsl	x2, x20, #5
   37de4:	str	x2, [sp, #56]
   37de8:	str	x10, [sp, #8]
   37dec:	cbz	x1, 37e18 <mpfr_erf@@Base+0x840>
   37df0:	ldr	x0, [sp, #64]
   37df4:	bl	c660 <mpfr_reallocate_func@plt>
   37df8:	b	37e20 <mpfr_erf@@Base+0x848>
   37dfc:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   37e00:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   37e04:	mov	w1, #0xf7                  	// #247
   37e08:	add	x0, x0, #0xb87
   37e0c:	add	x2, x2, #0xb8d
   37e10:	bl	d030 <mpfr_assert_fail@plt>
   37e14:	b	37d3c <mpfr_erf@@Base+0x764>
   37e18:	mov	x0, x2
   37e1c:	bl	d1f0 <mpfr_allocate_func@plt>
   37e20:	mov	x8, x0
   37e24:	mov	w11, #0x18                  	// #24
   37e28:	stur	x8, [x29, #-16]
   37e2c:	add	x9, x8, x20, lsl #3
   37e30:	add	x10, x8, x20, lsl #4
   37e34:	madd	x11, x20, x11, x8
   37e38:	mov	w8, #0x1                   	// #1
   37e3c:	str	x0, [sp, #64]
   37e40:	stp	x10, x28, [x29, #-80]
   37e44:	stp	x11, x28, [x29, #-112]
   37e48:	stur	x28, [x29, #-136]
   37e4c:	stur	w8, [x29, #-32]
   37e50:	stur	w8, [x29, #-64]
   37e54:	stur	w8, [x29, #-96]
   37e58:	stp	x9, x28, [x29, #-48]
   37e5c:	stur	w8, [x29, #-128]
   37e60:	tbnz	w8, #0, 37b7c <mpfr_erf@@Base+0x5a4>
   37e64:	b	37e84 <mpfr_erf@@Base+0x8ac>
   37e68:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   37e6c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   37e70:	mov	w1, #0xff                  	// #255
   37e74:	add	x0, x0, #0xb87
   37e78:	add	x2, x2, #0x5cf
   37e7c:	bl	d030 <mpfr_assert_fail@plt>
   37e80:	b	37dac <mpfr_erf@@Base+0x7d4>
   37e84:	ldur	w3, [x29, #-64]
   37e88:	ldr	x0, [sp, #16]
   37e8c:	ldr	w2, [x29, #12]
   37e90:	sub	x1, x29, #0x48
   37e94:	bl	cb70 <mpfr_set4@plt>
   37e98:	ldr	x1, [sp, #56]
   37e9c:	mov	w19, w0
   37ea0:	cbz	x1, 37eac <mpfr_erf@@Base+0x8d4>
   37ea4:	ldr	x0, [sp, #64]
   37ea8:	bl	d120 <mpfr_free_func@plt>
   37eac:	mov	w0, w19
   37eb0:	ldp	x20, x19, [sp, #464]
   37eb4:	ldp	x22, x21, [sp, #448]
   37eb8:	ldp	x24, x23, [sp, #432]
   37ebc:	ldp	x26, x25, [sp, #416]
   37ec0:	ldp	x28, x27, [sp, #400]
   37ec4:	ldp	x29, x30, [sp, #384]
   37ec8:	ldp	d9, d8, [sp, #368]
   37ecc:	ldp	d11, d10, [sp, #352]
   37ed0:	ldr	d12, [sp, #336]
   37ed4:	add	sp, sp, #0x1e0
   37ed8:	ret
   37edc:	mov	x8, xzr
   37ee0:	b	37ab8 <mpfr_erf@@Base+0x4e0>
   37ee4:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   37ee8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   37eec:	add	x0, x0, #0xb87
   37ef0:	add	x2, x2, #0x534
   37ef4:	mov	w1, #0xc6                  	// #198
   37ef8:	bl	d030 <mpfr_assert_fail@plt>
   37efc:	b	37aac <mpfr_erf@@Base+0x4d4>
   37f00:	bl	cdd0 <mpfr_abort_prec_max@plt>
   37f04:	cmp	x0, #0x1
   37f08:	b.ge	37f54 <mpfr_erf@@Base+0x97c>  // b.tcont
   37f0c:	cmn	x0, #0x10
   37f10:	b.gt	37f38 <mpfr_erf@@Base+0x960>
   37f14:	mov	x9, #0x3ef0000000000000    	// #4535124824762089472
   37f18:	fmov	d1, x9
   37f1c:	add	x8, x0, #0x10
   37f20:	cmn	x0, #0x1f
   37f24:	fmul	d0, d0, d1
   37f28:	mov	x0, x8
   37f2c:	b.lt	37f18 <mpfr_erf@@Base+0x940>  // b.tstop
   37f30:	cbnz	x8, 37f40 <mpfr_erf@@Base+0x968>
   37f34:	b	37f50 <mpfr_erf@@Base+0x978>
   37f38:	mov	x8, x0
   37f3c:	cbz	x8, 37f50 <mpfr_erf@@Base+0x978>
   37f40:	fmov	d1, #5.000000000000000000e-01
   37f44:	adds	x8, x8, #0x1
   37f48:	fmul	d0, d0, d1
   37f4c:	b.cc	37f44 <mpfr_erf@@Base+0x96c>  // b.lo, b.ul, b.last
   37f50:	ret
   37f54:	subs	x0, x0, #0x1
   37f58:	fadd	d0, d0, d0
   37f5c:	b.ne	37f54 <mpfr_erf@@Base+0x97c>  // b.any
   37f60:	b	37f50 <mpfr_erf@@Base+0x978>

0000000000037f64 <mpfr_inits@@Base>:
   37f64:	sub	sp, sp, #0xf0
   37f68:	stp	x29, x30, [sp, #224]
   37f6c:	add	x29, sp, #0xe0
   37f70:	mov	x8, #0xffffffffffffffc8    	// #-56
   37f74:	mov	x9, sp
   37f78:	sub	x10, x29, #0x58
   37f7c:	movk	x8, #0xff80, lsl #32
   37f80:	add	x11, x29, #0x10
   37f84:	add	x9, x9, #0x80
   37f88:	add	x10, x10, #0x38
   37f8c:	stp	x1, x2, [x29, #-88]
   37f90:	stp	x3, x4, [x29, #-72]
   37f94:	stp	x5, x6, [x29, #-56]
   37f98:	stur	x7, [x29, #-40]
   37f9c:	stp	q0, q1, [sp]
   37fa0:	stp	q2, q3, [sp, #32]
   37fa4:	stp	q4, q5, [sp, #64]
   37fa8:	stp	q6, q7, [sp, #96]
   37fac:	stp	x9, x8, [x29, #-16]
   37fb0:	stp	x11, x10, [x29, #-32]
   37fb4:	cbnz	x0, 37fd0 <mpfr_inits@@Base+0x6c>
   37fb8:	b	37ffc <mpfr_inits@@Base+0x98>
   37fbc:	ldur	x8, [x29, #-32]
   37fc0:	add	x9, x8, #0x8
   37fc4:	stur	x9, [x29, #-32]
   37fc8:	ldr	x0, [x8]
   37fcc:	cbz	x0, 37ffc <mpfr_inits@@Base+0x98>
   37fd0:	bl	c030 <mpfr_init@plt>
   37fd4:	ldursw	x8, [x29, #-8]
   37fd8:	tbz	w8, #31, 37fbc <mpfr_inits@@Base+0x58>
   37fdc:	add	w9, w8, #0x8
   37fe0:	cmp	w9, #0x0
   37fe4:	stur	w9, [x29, #-8]
   37fe8:	b.gt	37fbc <mpfr_inits@@Base+0x58>
   37fec:	ldur	x9, [x29, #-24]
   37ff0:	add	x8, x9, x8
   37ff4:	ldr	x0, [x8]
   37ff8:	cbnz	x0, 37fd0 <mpfr_inits@@Base+0x6c>
   37ffc:	ldp	x29, x30, [sp, #224]
   38000:	add	sp, sp, #0xf0
   38004:	ret

0000000000038008 <mpfr_inits2@@Base>:
   38008:	sub	sp, sp, #0xf0
   3800c:	stp	x29, x30, [sp, #208]
   38010:	add	x29, sp, #0xd0
   38014:	mov	x8, #0xffffffffffffffd0    	// #-48
   38018:	mov	x9, sp
   3801c:	sub	x10, x29, #0x50
   38020:	movk	x8, #0xff80, lsl #32
   38024:	add	x11, x29, #0x20
   38028:	add	x9, x9, #0x80
   3802c:	add	x10, x10, #0x30
   38030:	str	x19, [sp, #224]
   38034:	stp	x2, x3, [x29, #-80]
   38038:	stp	x4, x5, [x29, #-64]
   3803c:	stp	x6, x7, [x29, #-48]
   38040:	stp	q1, q2, [sp, #16]
   38044:	stp	q3, q4, [sp, #48]
   38048:	str	q0, [sp]
   3804c:	stp	q5, q6, [sp, #80]
   38050:	str	q7, [sp, #112]
   38054:	stp	x9, x8, [x29, #-16]
   38058:	stp	x11, x10, [x29, #-32]
   3805c:	cbz	x1, 380b0 <mpfr_inits2@@Base+0xa8>
   38060:	mov	x19, x0
   38064:	b	3807c <mpfr_inits2@@Base+0x74>
   38068:	ldur	x8, [x29, #-32]
   3806c:	add	x9, x8, #0x8
   38070:	stur	x9, [x29, #-32]
   38074:	ldr	x1, [x8]
   38078:	cbz	x1, 380b0 <mpfr_inits2@@Base+0xa8>
   3807c:	mov	x0, x1
   38080:	mov	x1, x19
   38084:	bl	cf60 <mpfr_init2@plt>
   38088:	ldursw	x8, [x29, #-8]
   3808c:	tbz	w8, #31, 38068 <mpfr_inits2@@Base+0x60>
   38090:	add	w9, w8, #0x8
   38094:	cmp	w9, #0x0
   38098:	stur	w9, [x29, #-8]
   3809c:	b.gt	38068 <mpfr_inits2@@Base+0x60>
   380a0:	ldur	x9, [x29, #-24]
   380a4:	add	x8, x9, x8
   380a8:	ldr	x1, [x8]
   380ac:	cbnz	x1, 3807c <mpfr_inits2@@Base+0x74>
   380b0:	ldr	x19, [sp, #224]
   380b4:	ldp	x29, x30, [sp, #208]
   380b8:	add	sp, sp, #0xf0
   380bc:	ret

00000000000380c0 <mpfr_clears@@Base>:
   380c0:	sub	sp, sp, #0xf0
   380c4:	stp	x29, x30, [sp, #224]
   380c8:	add	x29, sp, #0xe0
   380cc:	mov	x8, #0xffffffffffffffc8    	// #-56
   380d0:	mov	x9, sp
   380d4:	sub	x10, x29, #0x58
   380d8:	movk	x8, #0xff80, lsl #32
   380dc:	add	x11, x29, #0x10
   380e0:	add	x9, x9, #0x80
   380e4:	add	x10, x10, #0x38
   380e8:	stp	x1, x2, [x29, #-88]
   380ec:	stp	x3, x4, [x29, #-72]
   380f0:	stp	x5, x6, [x29, #-56]
   380f4:	stur	x7, [x29, #-40]
   380f8:	stp	q0, q1, [sp]
   380fc:	stp	q2, q3, [sp, #32]
   38100:	stp	q4, q5, [sp, #64]
   38104:	stp	q6, q7, [sp, #96]
   38108:	stp	x9, x8, [x29, #-16]
   3810c:	stp	x11, x10, [x29, #-32]
   38110:	cbnz	x0, 3812c <mpfr_clears@@Base+0x6c>
   38114:	b	38158 <mpfr_clears@@Base+0x98>
   38118:	ldur	x8, [x29, #-32]
   3811c:	add	x9, x8, #0x8
   38120:	stur	x9, [x29, #-32]
   38124:	ldr	x0, [x8]
   38128:	cbz	x0, 38158 <mpfr_clears@@Base+0x98>
   3812c:	bl	c4f0 <mpfr_clear@plt>
   38130:	ldursw	x8, [x29, #-8]
   38134:	tbz	w8, #31, 38118 <mpfr_clears@@Base+0x58>
   38138:	add	w9, w8, #0x8
   3813c:	cmp	w9, #0x0
   38140:	stur	w9, [x29, #-8]
   38144:	b.gt	38118 <mpfr_clears@@Base+0x58>
   38148:	ldur	x9, [x29, #-24]
   3814c:	add	x8, x9, x8
   38150:	ldr	x0, [x8]
   38154:	cbnz	x0, 3812c <mpfr_clears@@Base+0x6c>
   38158:	ldp	x29, x30, [sp, #224]
   3815c:	add	sp, sp, #0xf0
   38160:	ret

0000000000038164 <mpfr_sgn@@Base>:
   38164:	stp	x29, x30, [sp, #-16]!
   38168:	ldr	x8, [x0, #16]
   3816c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   38170:	mov	x29, sp
   38174:	cmp	x8, x9
   38178:	b.le	38188 <mpfr_sgn@@Base+0x24>
   3817c:	ldr	w0, [x0, #8]
   38180:	ldp	x29, x30, [sp], #16
   38184:	ret
   38188:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3818c:	cmp	x8, x9
   38190:	b.ne	381a0 <mpfr_sgn@@Base+0x3c>  // b.any
   38194:	mov	w0, wzr
   38198:	ldp	x29, x30, [sp], #16
   3819c:	ret
   381a0:	mov	x9, #0x2                   	// #2
   381a4:	movk	x9, #0x8000, lsl #48
   381a8:	cmp	x8, x9
   381ac:	b.ne	3817c <mpfr_sgn@@Base+0x18>  // b.any
   381b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   381b4:	ldr	x1, [x0, #2800]
   381b8:	add	x0, x0, #0xaf0
   381bc:	blr	x1
   381c0:	mov	x8, x0
   381c4:	mrs	x9, tpidr_el0
   381c8:	ldr	w10, [x9, x8]
   381cc:	mov	w0, wzr
   381d0:	orr	w10, w10, #0x10
   381d4:	str	w10, [x9, x8]
   381d8:	ldp	x29, x30, [sp], #16
   381dc:	ret

00000000000381e0 <mpfr_check@@Base>:
   381e0:	stp	x29, x30, [sp, #-16]!
   381e4:	ldr	w8, [x0, #8]
   381e8:	mov	x29, sp
   381ec:	cmp	w8, #0x1
   381f0:	b.eq	381fc <mpfr_check@@Base+0x1c>  // b.none
   381f4:	cmn	w8, #0x1
   381f8:	b.ne	38288 <mpfr_check@@Base+0xa8>  // b.any
   381fc:	ldr	x10, [x0]
   38200:	mov	x13, #0xfffffffffffffeff    	// #-257
   38204:	movk	x13, #0x7fff, lsl #48
   38208:	sub	x12, x10, #0x1
   3820c:	cmp	x12, x13
   38210:	b.cs	38288 <mpfr_check@@Base+0xa8>  // b.hs, b.nlast
   38214:	ldr	x9, [x0, #24]
   38218:	cbz	x9, 38288 <mpfr_check@@Base+0xa8>
   3821c:	ldur	x11, [x9, #-8]
   38220:	mov	w8, wzr
   38224:	cmp	x11, #0x1
   38228:	b.lt	3828c <mpfr_check@@Base+0xac>  // b.tstop
   3822c:	lsl	x14, x11, #6
   38230:	cmp	x10, x14
   38234:	b.gt	3828c <mpfr_check@@Base+0xac>
   38238:	mov	x8, xzr
   3823c:	ldr	xzr, [x9, x8, lsl #3]
   38240:	add	x8, x8, #0x1
   38244:	cmp	x11, x8
   38248:	b.ne	3823c <mpfr_check@@Base+0x5c>  // b.any
   3824c:	ldr	x11, [x0, #16]
   38250:	add	x8, x13, #0x105
   38254:	cmp	x11, x8
   38258:	b.ge	38270 <mpfr_check@@Base+0x90>  // b.tcont
   3825c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   38260:	add	x8, x11, x8
   38264:	cmp	x8, #0x3
   38268:	cset	w8, cc  // cc = lo, ul, last
   3826c:	b	3828c <mpfr_check@@Base+0xac>
   38270:	add	x8, x12, #0x3f
   38274:	cmp	x12, #0x0
   38278:	csel	x8, x8, x12, lt  // lt = tstop
   3827c:	asr	x8, x8, #6
   38280:	ldr	x8, [x9, x8, lsl #3]
   38284:	tbnz	x8, #63, 38298 <mpfr_check@@Base+0xb8>
   38288:	mov	w8, wzr
   3828c:	mov	w0, w8
   38290:	ldp	x29, x30, [sp], #16
   38294:	ret
   38298:	add	x8, x10, #0x3f
   3829c:	cmp	x10, #0x0
   382a0:	csel	x8, x8, x10, lt  // lt = tstop
   382a4:	and	x8, x8, #0xffffffffffffffc0
   382a8:	sub	x8, x10, x8
   382ac:	cbz	w8, 382cc <mpfr_check@@Base+0xec>
   382b0:	ldr	x9, [x9]
   382b4:	neg	w8, w8
   382b8:	mov	x10, #0xffffffffffffffff    	// #-1
   382bc:	lsl	x8, x10, x8
   382c0:	bics	xzr, x9, x8
   382c4:	mov	w8, wzr
   382c8:	b.ne	3828c <mpfr_check@@Base+0xac>  // b.any
   382cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   382d0:	ldr	x1, [x0, #2736]
   382d4:	add	x0, x0, #0xab0
   382d8:	blr	x1
   382dc:	mrs	x8, tpidr_el0
   382e0:	ldr	x9, [x8, x0]
   382e4:	cmp	x11, x9
   382e8:	cset	w9, ge  // ge = tcont
   382ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   382f0:	ldr	x1, [x0, #2768]
   382f4:	add	x0, x0, #0xad0
   382f8:	blr	x1
   382fc:	ldr	x8, [x8, x0]
   38300:	cmp	x11, x8
   38304:	cset	w8, le
   38308:	and	w8, w9, w8
   3830c:	b	3828c <mpfr_check@@Base+0xac>

0000000000038310 <mpfr_sub1sp@@Base>:
   38310:	stp	x29, x30, [sp, #-96]!
   38314:	stp	x28, x27, [sp, #16]
   38318:	stp	x26, x25, [sp, #32]
   3831c:	stp	x24, x23, [sp, #48]
   38320:	stp	x22, x21, [sp, #64]
   38324:	stp	x20, x19, [sp, #80]
   38328:	mov	x29, sp
   3832c:	sub	sp, sp, #0x40
   38330:	ldr	x22, [x1]
   38334:	mov	w20, w3
   38338:	mov	x23, x2
   3833c:	mov	x19, x0
   38340:	cmp	x22, #0x3f
   38344:	b.gt	38364 <mpfr_sub1sp@@Base+0x54>
   38348:	mov	x0, x19
   3834c:	mov	x2, x23
   38350:	mov	w3, w20
   38354:	mov	x4, x22
   38358:	bl	390cc <mpfr_sub1sp@@Base+0xdbc>
   3835c:	mov	w8, w0
   38360:	b	38988 <mpfr_sub1sp@@Base+0x678>
   38364:	cmp	x22, #0x40
   38368:	b.eq	38390 <mpfr_sub1sp@@Base+0x80>  // b.none
   3836c:	cmp	x22, #0x7f
   38370:	b.gt	38390 <mpfr_sub1sp@@Base+0x80>
   38374:	mov	x0, x19
   38378:	mov	x2, x23
   3837c:	mov	w3, w20
   38380:	mov	x4, x22
   38384:	bl	3939c <mpfr_sub1sp@@Base+0x108c>
   38388:	mov	w8, w0
   3838c:	b	38988 <mpfr_sub1sp@@Base+0x678>
   38390:	cmp	x22, #0x40
   38394:	b.ne	383b0 <mpfr_sub1sp@@Base+0xa0>  // b.any
   38398:	mov	x0, x19
   3839c:	mov	x2, x23
   383a0:	mov	w3, w20
   383a4:	bl	397f4 <mpfr_sub1sp@@Base+0x14e4>
   383a8:	mov	w8, w0
   383ac:	b	38988 <mpfr_sub1sp@@Base+0x678>
   383b0:	sub	x8, x22, #0x81
   383b4:	cmp	x8, #0x3e
   383b8:	b.hi	383d8 <mpfr_sub1sp@@Base+0xc8>  // b.pmore
   383bc:	mov	x0, x19
   383c0:	mov	x2, x23
   383c4:	mov	w3, w20
   383c8:	mov	x4, x22
   383cc:	bl	39b54 <mpfr_sub1sp@@Base+0x1844>
   383d0:	mov	w8, w0
   383d4:	b	38988 <mpfr_sub1sp@@Base+0x678>
   383d8:	ldr	x8, [x1, #16]
   383dc:	ldr	x26, [x23, #16]
   383e0:	sub	x9, x22, #0x1
   383e4:	add	x10, x22, #0x3e
   383e8:	cmp	x9, #0x0
   383ec:	csel	x9, x10, x9, lt  // lt = tstop
   383f0:	asr	x27, x9, #6
   383f4:	cmp	x8, x26
   383f8:	stur	xzr, [x29, #-8]
   383fc:	b.ne	38440 <mpfr_sub1sp@@Base+0x130>  // b.any
   38400:	ldr	x9, [x1, #24]
   38404:	ldr	x10, [x23, #24]
   38408:	cmn	x22, #0x3e
   3840c:	mov	x11, x27
   38410:	b.lt	3844c <mpfr_sub1sp@@Base+0x13c>  // b.tstop
   38414:	mov	x12, x27
   38418:	lsl	x11, x12, #3
   3841c:	ldr	x13, [x9, x11]
   38420:	ldr	x11, [x10, x11]
   38424:	cmp	x13, x11
   38428:	b.ne	38448 <mpfr_sub1sp@@Base+0x138>  // b.any
   3842c:	sub	x11, x12, #0x1
   38430:	cmp	x12, #0x0
   38434:	mov	x12, x11
   38438:	b.gt	38418 <mpfr_sub1sp@@Base+0x108>
   3843c:	b	3844c <mpfr_sub1sp@@Base+0x13c>
   38440:	b.lt	38498 <mpfr_sub1sp@@Base+0x188>  // b.tstop
   38444:	b	384ac <mpfr_sub1sp@@Base+0x19c>
   38448:	mov	x11, x12
   3844c:	tbnz	x11, #63, 3846c <mpfr_sub1sp@@Base+0x15c>
   38450:	lsl	x11, x11, #3
   38454:	ldr	x9, [x9, x11]
   38458:	ldr	x10, [x10, x11]
   3845c:	cmp	x9, x10
   38460:	mov	w9, #0x4                   	// #4
   38464:	cinc	w9, w9, ls  // ls = plast
   38468:	b	38488 <mpfr_sub1sp@@Base+0x178>
   3846c:	cmp	w20, #0x3
   38470:	mov	w9, #0xffffffff            	// #-1
   38474:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   38478:	cneg	w9, w9, ne  // ne = any
   3847c:	str	x10, [x19, #16]
   38480:	str	w9, [x19, #8]
   38484:	mov	w9, #0x1                   	// #1
   38488:	cmp	w9, #0x4
   3848c:	b.eq	384ac <mpfr_sub1sp@@Base+0x19c>  // b.none
   38490:	cmp	w9, #0x5
   38494:	b.ne	38748 <mpfr_sub1sp@@Base+0x438>  // b.any
   38498:	ldr	w9, [x1, #8]
   3849c:	mov	x10, x8
   384a0:	mov	x12, x1
   384a4:	neg	w9, w9
   384a8:	b	384c0 <mpfr_sub1sp@@Base+0x1b0>
   384ac:	ldr	w9, [x1, #8]
   384b0:	mov	x10, x26
   384b4:	mov	x26, x8
   384b8:	mov	x12, x23
   384bc:	mov	x23, x1
   384c0:	sub	x21, x26, x10
   384c4:	add	x24, x27, #0x1
   384c8:	cmp	x21, #0x1
   384cc:	str	w9, [x19, #8]
   384d0:	b.hi	38598 <mpfr_sub1sp@@Base+0x288>  // b.pmore
   384d4:	cbz	x21, 38640 <mpfr_sub1sp@@Base+0x330>
   384d8:	ldr	x13, [x23, #24]
   384dc:	ldr	x25, [x12, #24]
   384e0:	lsl	x8, x27, #3
   384e4:	neg	w11, w22
   384e8:	ldr	x9, [x13, x8]
   384ec:	ldr	x10, [x25, x8]
   384f0:	and	x28, x11, #0x3f
   384f4:	sub	x9, x9, x10, lsr #1
   384f8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   384fc:	cmp	x9, x10
   38500:	b.cc	3865c <mpfr_sub1sp@@Base+0x34c>  // b.lo, b.ul, b.last
   38504:	stp	x13, x24, [x29, #-24]
   38508:	ldr	x8, [x25]
   3850c:	ldr	x22, [x19, #24]
   38510:	mov	w9, #0x1                   	// #1
   38514:	lsl	x1, x24, #3
   38518:	lsl	x21, x9, x28
   3851c:	cmp	x1, #0x4, lsl #12
   38520:	and	x8, x8, x21
   38524:	neg	x25, x21
   38528:	stur	x8, [x29, #-40]
   3852c:	b.hi	38c84 <mpfr_sub1sp@@Base+0x974>  // b.pmore
   38530:	add	x9, x1, #0xf
   38534:	mov	x8, sp
   38538:	and	x9, x9, #0xfffffffffffffff0
   3853c:	sub	x23, x8, x9
   38540:	mov	sp, x23
   38544:	ldur	x24, [x29, #-16]
   38548:	ldr	x1, [x12, #24]
   3854c:	mov	w3, #0x1                   	// #1
   38550:	mov	x0, x23
   38554:	mov	x2, x24
   38558:	bl	c140 <__gmpn_rshift@plt>
   3855c:	ldr	x8, [x23]
   38560:	ldur	x1, [x29, #-24]
   38564:	mov	x0, x22
   38568:	mov	x2, x23
   3856c:	and	x8, x8, x25
   38570:	mov	x3, x24
   38574:	str	x8, [x23]
   38578:	bl	c2c0 <__gmpn_sub_n@plt>
   3857c:	ldur	x8, [x29, #-40]
   38580:	str	x26, [x19, #16]
   38584:	cbnz	x8, 38c9c <mpfr_sub1sp@@Base+0x98c>
   38588:	ldur	x0, [x29, #-8]
   3858c:	cbnz	x0, 38d64 <mpfr_sub1sp@@Base+0xa54>
   38590:	mov	w8, #0x1                   	// #1
   38594:	b	386c4 <mpfr_sub1sp@@Base+0x3b4>
   38598:	subs	x9, x22, x21
   3859c:	b.ls	388c0 <mpfr_sub1sp@@Base+0x5b0>  // b.plast
   385a0:	neg	w8, w22
   385a4:	lsl	x1, x24, #3
   385a8:	cmp	x1, #0x4, lsl #12
   385ac:	and	x28, x8, #0x3f
   385b0:	stur	x24, [x29, #-16]
   385b4:	stur	x9, [x29, #-56]
   385b8:	b.hi	389b4 <mpfr_sub1sp@@Base+0x6a4>  // b.pmore
   385bc:	add	x9, x1, #0xf
   385c0:	mov	x8, sp
   385c4:	and	x9, x9, #0xfffffffffffffff0
   385c8:	sub	x24, x8, x9
   385cc:	mov	sp, x24
   385d0:	ands	x3, x21, #0x3f
   385d4:	lsr	x25, x21, #6
   385d8:	stur	x12, [x29, #-32]
   385dc:	b.eq	389cc <mpfr_sub1sp@@Base+0x6bc>  // b.none
   385e0:	ldr	x1, [x12, #24]
   385e4:	cbnz	x25, 38aa8 <mpfr_sub1sp@@Base+0x798>
   385e8:	ldur	x2, [x29, #-16]
   385ec:	mov	x0, x24
   385f0:	bl	c140 <__gmpn_rshift@plt>
   385f4:	mov	x14, x28
   385f8:	cbz	x28, 38a14 <mpfr_sub1sp@@Base+0x704>
   385fc:	ldr	x8, [x24]
   38600:	sub	x9, x14, #0x1
   38604:	mov	w25, #0x1                   	// #1
   38608:	ldur	x13, [x29, #-32]
   3860c:	lsl	x9, x25, x9
   38610:	sub	x10, x9, #0x1
   38614:	tst	x8, x10
   38618:	and	x8, x8, x9
   3861c:	stur	x8, [x29, #-24]
   38620:	b.ne	387b4 <mpfr_sub1sp@@Base+0x4a4>  // b.any
   38624:	add	x8, x14, x22
   38628:	mvn	x9, x21
   3862c:	add	x10, x9, x8
   38630:	cmp	x10, x22
   38634:	b.le	38750 <mpfr_sub1sp@@Base+0x440>
   38638:	mov	w25, wzr
   3863c:	b	387b4 <mpfr_sub1sp@@Base+0x4a4>
   38640:	ldr	x22, [x19, #24]
   38644:	ldr	x1, [x23, #24]
   38648:	ldr	x2, [x12, #24]
   3864c:	mov	x3, x24
   38650:	mov	x0, x22
   38654:	bl	c2c0 <__gmpn_sub_n@plt>
   38658:	b	386f4 <mpfr_sub1sp@@Base+0x3e4>
   3865c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   38660:	cmp	x9, x10
   38664:	b.eq	38cc0 <mpfr_sub1sp@@Base+0x9b0>  // b.none
   38668:	ldr	x22, [x19, #24]
   3866c:	lsl	x1, x24, #3
   38670:	mov	x21, x24
   38674:	cmp	x1, #0x4, lsl #12
   38678:	b.hi	38d54 <mpfr_sub1sp@@Base+0xa44>  // b.pmore
   3867c:	add	x9, x1, #0xf
   38680:	mov	x8, sp
   38684:	and	x9, x9, #0xfffffffffffffff0
   38688:	sub	x24, x8, x9
   3868c:	mov	sp, x24
   38690:	ldr	x1, [x23, #24]
   38694:	mov	w3, #0x1                   	// #1
   38698:	mov	x0, x24
   3869c:	mov	x2, x21
   386a0:	bl	c120 <__gmpn_lshift@plt>
   386a4:	mov	x0, x22
   386a8:	mov	x1, x24
   386ac:	mov	x2, x25
   386b0:	mov	x3, x21
   386b4:	mov	x24, x21
   386b8:	bl	c2c0 <__gmpn_sub_n@plt>
   386bc:	sub	x26, x26, #0x1
   386c0:	mov	w8, #0x6                   	// #6
   386c4:	cmp	w8, #0x6
   386c8:	b.eq	386f4 <mpfr_sub1sp@@Base+0x3e4>  // b.none
   386cc:	mov	x9, #0xffffffffffffffff    	// #-1
   386d0:	mov	x25, xzr
   386d4:	stur	x9, [x29, #-40]
   386d8:	cmp	w8, #0x10
   386dc:	mov	w9, #0x1                   	// #1
   386e0:	stur	x9, [x29, #-24]
   386e4:	b.eq	38784 <mpfr_sub1sp@@Base+0x474>  // b.none
   386e8:	cmp	w8, #0x11
   386ec:	b.eq	38894 <mpfr_sub1sp@@Base+0x584>  // b.none
   386f0:	b	38748 <mpfr_sub1sp@@Base+0x438>
   386f4:	ldr	x8, [x22, x27, lsl #3]
   386f8:	cbz	x8, 38b90 <mpfr_sub1sp@@Base+0x880>
   386fc:	clz	x23, x8
   38700:	cbz	x23, 3871c <mpfr_sub1sp@@Base+0x40c>
   38704:	mov	x0, x22
   38708:	mov	x1, x22
   3870c:	mov	x2, x24
   38710:	mov	w3, w23
   38714:	bl	c120 <__gmpn_lshift@plt>
   38718:	sub	x26, x26, x23
   3871c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   38720:	ldr	x1, [x0, #2736]
   38724:	add	x0, x0, #0xab0
   38728:	blr	x1
   3872c:	mrs	x21, tpidr_el0
   38730:	ldr	x8, [x21, x0]
   38734:	cmp	x26, x8
   38738:	b.lt	38bd0 <mpfr_sub1sp@@Base+0x8c0>  // b.tstop
   3873c:	str	x26, [x19, #16]
   38740:	ldur	x0, [x29, #-8]
   38744:	cbnz	x0, 38c24 <mpfr_sub1sp@@Base+0x914>
   38748:	mov	w8, wzr
   3874c:	b	38988 <mpfr_sub1sp@@Base+0x678>
   38750:	ldr	x9, [x13, #24]
   38754:	add	x8, x10, #0x3f
   38758:	cmp	x10, #0x0
   3875c:	csel	x8, x8, x10, lt  // lt = tstop
   38760:	sub	x8, x27, x8, asr #6
   38764:	ldr	x11, [x9, x8, lsl #3]
   38768:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   3876c:	lsr	x10, x12, x10
   38770:	sub	x10, x10, #0x1
   38774:	tst	x11, x10
   38778:	b.eq	38794 <mpfr_sub1sp@@Base+0x484>  // b.none
   3877c:	mov	w25, #0x1                   	// #1
   38780:	b	387b4 <mpfr_sub1sp@@Base+0x4a4>
   38784:	mov	x8, #0xffffffffffffffff    	// #-1
   38788:	stur	x8, [x29, #-48]
   3878c:	mov	w21, w20
   38790:	b	38930 <mpfr_sub1sp@@Base+0x620>
   38794:	sub	x9, x9, #0x8
   38798:	cmp	x8, #0x0
   3879c:	cset	w25, gt
   387a0:	subs	x10, x8, #0x1
   387a4:	b.lt	387b4 <mpfr_sub1sp@@Base+0x4a4>  // b.tstop
   387a8:	ldr	x11, [x9, x8, lsl #3]
   387ac:	mov	x8, x10
   387b0:	cbz	x11, 38798 <mpfr_sub1sp@@Base+0x488>
   387b4:	ldr	x1, [x23, #24]
   387b8:	lsl	x8, x27, #3
   387bc:	ldr	x9, [x24, x8]
   387c0:	ldr	x8, [x1, x8]
   387c4:	sub	x8, x8, x9
   387c8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   387cc:	cmp	x8, x9
   387d0:	csetm	x8, hi  // hi = pmore
   387d4:	stur	x8, [x29, #-48]
   387d8:	b.hi	3883c <mpfr_sub1sp@@Base+0x52c>  // b.pmore
   387dc:	stur	x8, [x29, #-40]
   387e0:	cbz	w25, 38840 <mpfr_sub1sp@@Base+0x530>
   387e4:	ldur	x9, [x29, #-56]
   387e8:	ldr	x10, [x13, #24]
   387ec:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   387f0:	mov	x28, x14
   387f4:	add	x12, x9, #0x1
   387f8:	add	x8, x9, #0x40
   387fc:	cmp	x12, #0x0
   38800:	csinc	x9, x8, x9, lt  // lt = tstop
   38804:	sub	x9, x27, x9, asr #6
   38808:	ldr	x11, [x10, x9, lsl #3]
   3880c:	lsr	x12, x13, x12
   38810:	mov	x8, x27
   38814:	mov	w14, #0x1                   	// #1
   38818:	and	x13, x11, x12
   3881c:	stp	x14, x13, [x29, #-48]
   38820:	cbz	x13, 38830 <mpfr_sub1sp@@Base+0x520>
   38824:	sub	x12, x12, #0x1
   38828:	and	x11, x11, x12
   3882c:	cbz	x11, 38fc0 <mpfr_sub1sp@@Base+0xcb0>
   38830:	mov	x27, x8
   38834:	mov	x14, x28
   38838:	b	38840 <mpfr_sub1sp@@Base+0x530>
   3883c:	stur	x8, [x29, #-40]
   38840:	ldr	x8, [x24]
   38844:	mov	w9, #0x1                   	// #1
   38848:	lsl	x23, x9, x14
   3884c:	neg	x9, x23
   38850:	and	x8, x8, x9
   38854:	str	x8, [x24]
   38858:	ldr	x22, [x19, #24]
   3885c:	mov	x2, x24
   38860:	ldur	x24, [x29, #-16]
   38864:	mov	x28, x14
   38868:	mov	x0, x22
   3886c:	mov	x3, x24
   38870:	bl	c2c0 <__gmpn_sub_n@plt>
   38874:	ldr	x8, [x22, x27, lsl #3]
   38878:	tbz	x8, #63, 38a5c <mpfr_sub1sp@@Base+0x74c>
   3887c:	cmp	w20, #0x5
   38880:	b.ne	38a90 <mpfr_sub1sp@@Base+0x780>  // b.any
   38884:	mov	w8, #0x10                  	// #16
   38888:	cmp	w8, #0x11
   3888c:	mov	w21, w20
   38890:	b.ne	38930 <mpfr_sub1sp@@Base+0x620>  // b.any
   38894:	mov	w8, #0x1                   	// #1
   38898:	lsl	x23, x8, x28
   3889c:	mov	x0, x22
   388a0:	mov	x1, x22
   388a4:	mov	x2, x24
   388a8:	mov	x3, x23
   388ac:	bl	c8f0 <__gmpn_sub_1@plt>
   388b0:	ldr	x8, [x22, x27, lsl #3]
   388b4:	tbz	x8, #63, 38b1c <mpfr_sub1sp@@Base+0x80c>
   388b8:	mov	w20, #0xffffffff            	// #-1
   388bc:	b	38950 <mpfr_sub1sp@@Base+0x640>
   388c0:	mov	x9, x22
   388c4:	ldr	x22, [x19, #24]
   388c8:	neg	w10, w9
   388cc:	cmp	x9, x21
   388d0:	and	x28, x10, #0x3f
   388d4:	b.eq	38dc8 <mpfr_sub1sp@@Base+0xab8>  // b.none
   388d8:	mov	x8, x9
   388dc:	add	x8, x9, #0x1
   388e0:	cmp	x21, x8
   388e4:	cset	w9, eq  // eq = none
   388e8:	stur	x9, [x29, #-40]
   388ec:	mov	x9, #0xffffffffffffffff    	// #-1
   388f0:	stur	x9, [x29, #-48]
   388f4:	cbnz	w20, 38900 <mpfr_sub1sp@@Base+0x5f0>
   388f8:	cmp	x21, x8
   388fc:	b.eq	38e14 <mpfr_sub1sp@@Base+0xb04>  // b.none
   38900:	ldr	x1, [x23, #24]
   38904:	cmp	x22, x1
   38908:	b.eq	38918 <mpfr_sub1sp@@Base+0x608>  // b.none
   3890c:	lsl	x2, x24, #3
   38910:	mov	x0, x22
   38914:	bl	be50 <memcpy@plt>
   38918:	mov	w25, #0x1                   	// #1
   3891c:	stur	xzr, [x29, #-24]
   38920:	cbz	w20, 3892c <mpfr_sub1sp@@Base+0x61c>
   38924:	cmp	w20, #0x5
   38928:	b.ne	38c5c <mpfr_sub1sp@@Base+0x94c>  // b.any
   3892c:	mov	w21, w20
   38930:	ldr	x8, [x22, x27, lsl #3]
   38934:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   38938:	cmp	x8, x9
   3893c:	b.eq	38ae0 <mpfr_sub1sp@@Base+0x7d0>  // b.none
   38940:	ldur	x8, [x29, #-24]
   38944:	orr	x8, x8, x25
   38948:	cmp	x8, #0x0
   3894c:	cset	w20, ne  // ne = any
   38950:	str	x26, [x19, #16]
   38954:	ldur	x0, [x29, #-8]
   38958:	cbnz	x0, 389ac <mpfr_sub1sp@@Base+0x69c>
   3895c:	ldr	w8, [x19, #8]
   38960:	mul	w8, w8, w20
   38964:	cbz	w8, 38988 <mpfr_sub1sp@@Base+0x678>
   38968:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3896c:	ldr	x1, [x0, #2800]
   38970:	add	x0, x0, #0xaf0
   38974:	blr	x1
   38978:	mrs	x9, tpidr_el0
   3897c:	ldr	w10, [x9, x0]
   38980:	orr	w10, w10, #0x8
   38984:	str	w10, [x9, x0]
   38988:	mov	w0, w8
   3898c:	mov	sp, x29
   38990:	ldp	x20, x19, [sp, #80]
   38994:	ldp	x22, x21, [sp, #64]
   38998:	ldp	x24, x23, [sp, #48]
   3899c:	ldp	x26, x25, [sp, #32]
   389a0:	ldp	x28, x27, [sp, #16]
   389a4:	ldp	x29, x30, [sp], #96
   389a8:	ret
   389ac:	bl	c8d0 <mpfr_tmp_free@plt>
   389b0:	b	3895c <mpfr_sub1sp@@Base+0x64c>
   389b4:	sub	x0, x29, #0x8
   389b8:	mov	x24, x12
   389bc:	bl	c220 <mpfr_tmp_allocate@plt>
   389c0:	mov	x12, x24
   389c4:	mov	x24, x0
   389c8:	b	385d0 <mpfr_sub1sp@@Base+0x2c0>
   389cc:	ldr	x8, [x12, #24]
   389d0:	stur	x28, [x29, #-24]
   389d4:	add	x1, x8, x25, lsl #3
   389d8:	cmp	x1, x24
   389dc:	b.eq	389f4 <mpfr_sub1sp@@Base+0x6e4>  // b.none
   389e0:	ldur	x8, [x29, #-16]
   389e4:	mov	x0, x24
   389e8:	sub	x8, x8, x25
   389ec:	lsl	x2, x8, #3
   389f0:	bl	be50 <memcpy@plt>
   389f4:	ldur	x8, [x29, #-16]
   389f8:	lsl	x2, x25, #3
   389fc:	mov	w1, wzr
   38a00:	add	x8, x24, x8, lsl #3
   38a04:	sub	x0, x8, x2
   38a08:	bl	c5b0 <memset@plt>
   38a0c:	ldur	x28, [x29, #-24]
   38a10:	b	385f4 <mpfr_sub1sp@@Base+0x2e4>
   38a14:	ldur	x8, [x29, #-32]
   38a18:	ldur	x13, [x29, #-56]
   38a1c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   38a20:	ldr	x10, [x8, #24]
   38a24:	add	x8, x13, #0x3f
   38a28:	cmp	x13, #0x0
   38a2c:	csel	x9, x8, x13, lt  // lt = tstop
   38a30:	sub	x9, x27, x9, asr #6
   38a34:	ldr	x11, [x10, x9, lsl #3]
   38a38:	lsr	x12, x12, x13
   38a3c:	sub	x13, x12, #0x1
   38a40:	mov	x8, x27
   38a44:	tst	x11, x13
   38a48:	and	x11, x11, x12
   38a4c:	stur	x11, [x29, #-24]
   38a50:	b.eq	38c30 <mpfr_sub1sp@@Base+0x920>  // b.none
   38a54:	mov	w25, #0x1                   	// #1
   38a58:	b	38c50 <mpfr_sub1sp@@Base+0x940>
   38a5c:	mov	w3, #0x1                   	// #1
   38a60:	mov	x0, x22
   38a64:	mov	x1, x22
   38a68:	mov	x2, x24
   38a6c:	bl	c120 <__gmpn_lshift@plt>
   38a70:	ldur	x8, [x29, #-24]
   38a74:	cbnz	x8, 38e34 <mpfr_sub1sp@@Base+0xb24>
   38a78:	ldp	x25, x8, [x29, #-48]
   38a7c:	ldur	x24, [x29, #-16]
   38a80:	sub	x26, x26, #0x1
   38a84:	stur	x8, [x29, #-24]
   38a88:	cmp	w20, #0x5
   38a8c:	b.eq	38884 <mpfr_sub1sp@@Base+0x574>  // b.none
   38a90:	cbnz	w20, 38e58 <mpfr_sub1sp@@Base+0xb48>
   38a94:	ldur	x8, [x29, #-24]
   38a98:	cbnz	x8, 38e4c <mpfr_sub1sp@@Base+0xb3c>
   38a9c:	mov	w8, #0x10                  	// #16
   38aa0:	ldur	x24, [x29, #-16]
   38aa4:	b	38888 <mpfr_sub1sp@@Base+0x578>
   38aa8:	lsl	x8, x25, #3
   38aac:	stur	x8, [x29, #-24]
   38ab0:	add	x1, x1, x8
   38ab4:	ldur	x8, [x29, #-16]
   38ab8:	mov	x0, x24
   38abc:	sub	x2, x8, x25
   38ac0:	mov	x25, x8
   38ac4:	bl	c140 <__gmpn_rshift@plt>
   38ac8:	ldur	x2, [x29, #-24]
   38acc:	add	x8, x24, x25, lsl #3
   38ad0:	mov	w1, wzr
   38ad4:	sub	x0, x8, x2
   38ad8:	bl	c5b0 <memset@plt>
   38adc:	b	385f4 <mpfr_sub1sp@@Base+0x2e4>
   38ae0:	mov	x20, x27
   38ae4:	mov	x9, x27
   38ae8:	mov	x8, x9
   38aec:	subs	x9, x9, #0x1
   38af0:	b.lt	38b00 <mpfr_sub1sp@@Base+0x7f0>  // b.tstop
   38af4:	add	x10, x22, x8, lsl #3
   38af8:	ldur	x10, [x10, #-8]
   38afc:	cbz	x10, 38ae8 <mpfr_sub1sp@@Base+0x7d8>
   38b00:	cmp	x8, #0x0
   38b04:	b.le	38e98 <mpfr_sub1sp@@Base+0xb88>
   38b08:	mov	w8, wzr
   38b0c:	cmp	w8, #0x39
   38b10:	b.eq	38950 <mpfr_sub1sp@@Base+0x640>  // b.none
   38b14:	cbz	w8, 38940 <mpfr_sub1sp@@Base+0x630>
   38b18:	b	38748 <mpfr_sub1sp@@Base+0x438>
   38b1c:	ldr	x8, [x22]
   38b20:	lsl	x9, x27, #3
   38b24:	sub	x26, x26, #0x1
   38b28:	lsl	x8, x8, #1
   38b2c:	str	x8, [x22]
   38b30:	ldr	x8, [x22, x9]
   38b34:	orr	x8, x8, #0x8000000000000000
   38b38:	str	x8, [x22, x9]
   38b3c:	ldur	x8, [x29, #-24]
   38b40:	cbnz	x8, 38b4c <mpfr_sub1sp@@Base+0x83c>
   38b44:	cmp	w20, #0x1
   38b48:	b.eq	38b68 <mpfr_sub1sp@@Base+0x858>  // b.none
   38b4c:	ldur	x8, [x29, #-40]
   38b50:	cbnz	x8, 38b58 <mpfr_sub1sp@@Base+0x848>
   38b54:	cbz	w20, 38b68 <mpfr_sub1sp@@Base+0x858>
   38b58:	mov	w8, #0xffffffff            	// #-1
   38b5c:	cbnz	x25, 38b80 <mpfr_sub1sp@@Base+0x870>
   38b60:	ldur	x9, [x29, #-24]
   38b64:	cbz	x9, 38b80 <mpfr_sub1sp@@Base+0x870>
   38b68:	ldr	x8, [x22]
   38b6c:	cmp	w20, #0x0
   38b70:	mov	w9, #0x1                   	// #1
   38b74:	orr	x8, x8, x23
   38b78:	str	x8, [x22]
   38b7c:	cneg	w8, w9, ne  // ne = any
   38b80:	cmp	w20, #0x1
   38b84:	ccmp	x25, #0x0, #0x0, eq  // eq = none
   38b88:	csel	w20, wzr, w8, eq  // eq = none
   38b8c:	b	38950 <mpfr_sub1sp@@Base+0x640>
   38b90:	mov	x24, xzr
   38b94:	mov	x23, xzr
   38b98:	sub	x8, x27, #0x1
   38b9c:	ldr	x9, [x22, x8, lsl #3]
   38ba0:	add	x23, x23, #0x40
   38ba4:	sub	x24, x24, #0x8
   38ba8:	sub	x8, x8, #0x1
   38bac:	cbz	x9, 38b9c <mpfr_sub1sp@@Base+0x88c>
   38bb0:	clz	x21, x9
   38bb4:	sub	x0, x22, x24
   38bb8:	add	x2, x8, #0x2
   38bbc:	mov	x1, x22
   38bc0:	cbz	x21, 38d70 <mpfr_sub1sp@@Base+0xa60>
   38bc4:	mov	w3, w21
   38bc8:	bl	c120 <__gmpn_lshift@plt>
   38bcc:	b	38d74 <mpfr_sub1sp@@Base+0xa64>
   38bd0:	ldur	x0, [x29, #-8]
   38bd4:	cbnz	x0, 38f18 <mpfr_sub1sp@@Base+0xc08>
   38bd8:	cbnz	w20, 38c0c <mpfr_sub1sp@@Base+0x8fc>
   38bdc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   38be0:	ldr	x1, [x0, #2736]
   38be4:	add	x0, x0, #0xab0
   38be8:	blr	x1
   38bec:	ldr	x8, [x21, x0]
   38bf0:	sub	x8, x8, #0x1
   38bf4:	cmp	x26, x8
   38bf8:	b.lt	38c08 <mpfr_sub1sp@@Base+0x8f8>  // b.tstop
   38bfc:	mov	x0, x19
   38c00:	bl	c360 <mpfr_powerof2_raw@plt>
   38c04:	cbz	w0, 38dc0 <mpfr_sub1sp@@Base+0xab0>
   38c08:	mov	w20, #0x1                   	// #1
   38c0c:	ldr	w2, [x19, #8]
   38c10:	mov	x0, x19
   38c14:	mov	w1, w20
   38c18:	bl	c880 <mpfr_underflow@plt>
   38c1c:	mov	w8, w0
   38c20:	b	38988 <mpfr_sub1sp@@Base+0x678>
   38c24:	bl	c8d0 <mpfr_tmp_free@plt>
   38c28:	mov	w8, wzr
   38c2c:	b	38988 <mpfr_sub1sp@@Base+0x678>
   38c30:	sub	x10, x10, #0x8
   38c34:	cmp	x9, #0x0
   38c38:	cset	w25, gt
   38c3c:	subs	x11, x9, #0x1
   38c40:	b.lt	38c50 <mpfr_sub1sp@@Base+0x940>  // b.tstop
   38c44:	ldr	x12, [x10, x9, lsl #3]
   38c48:	mov	x9, x11
   38c4c:	cbz	x12, 38c34 <mpfr_sub1sp@@Base+0x924>
   38c50:	ldur	x13, [x29, #-32]
   38c54:	mov	x27, x8
   38c58:	b	387b4 <mpfr_sub1sp@@Base+0x4a4>
   38c5c:	ldr	w8, [x19, #8]
   38c60:	mov	w25, #0x1                   	// #1
   38c64:	stur	xzr, [x29, #-24]
   38c68:	add	w8, w20, w8, lsr #31
   38c6c:	cmp	w8, #0x3
   38c70:	csinc	w21, w20, wzr, ne  // ne = any
   38c74:	cmp	w21, #0x1
   38c78:	mov	w20, #0x1                   	// #1
   38c7c:	b.eq	38894 <mpfr_sub1sp@@Base+0x584>  // b.none
   38c80:	b	38930 <mpfr_sub1sp@@Base+0x620>
   38c84:	sub	x0, x29, #0x8
   38c88:	mov	x23, x12
   38c8c:	bl	c220 <mpfr_tmp_allocate@plt>
   38c90:	mov	x12, x23
   38c94:	mov	x23, x0
   38c98:	b	38544 <mpfr_sub1sp@@Base+0x234>
   38c9c:	cmp	w20, #0x5
   38ca0:	b.eq	38d90 <mpfr_sub1sp@@Base+0xa80>  // b.none
   38ca4:	cbnz	w20, 38d9c <mpfr_sub1sp@@Base+0xa8c>
   38ca8:	ldr	x8, [x22]
   38cac:	ldur	x24, [x29, #-16]
   38cb0:	tst	x8, x21
   38cb4:	mov	w8, #0x10                  	// #16
   38cb8:	cinc	w8, w8, ne  // ne = any
   38cbc:	b	386c4 <mpfr_sub1sp@@Base+0x3b4>
   38cc0:	stur	x12, [x29, #-32]
   38cc4:	stur	x24, [x29, #-16]
   38cc8:	mov	x24, x28
   38ccc:	mov	x21, x13
   38cd0:	sub	x11, x13, #0x8
   38cd4:	mov	x28, x27
   38cd8:	mov	x12, x27
   38cdc:	ldr	x9, [x25, x12, lsl #3]
   38ce0:	mov	x10, x12
   38ce4:	subs	x12, x12, #0x1
   38ce8:	lsl	x9, x9, #63
   38cec:	b.lt	38d0c <mpfr_sub1sp@@Base+0x9fc>  // b.tstop
   38cf0:	lsl	x13, x10, #3
   38cf4:	add	x14, x25, x13
   38cf8:	ldur	x14, [x14, #-8]
   38cfc:	ldr	x13, [x11, x13]
   38d00:	orr	x9, x9, x14, lsr #1
   38d04:	cmp	x13, x9
   38d08:	b.eq	38cdc <mpfr_sub1sp@@Base+0x9cc>  // b.none
   38d0c:	cmp	x10, #0x0
   38d10:	b.le	38f38 <mpfr_sub1sp@@Base+0xc28>
   38d14:	add	x8, x21, x10, lsl #3
   38d18:	ldur	x8, [x8, #-8]
   38d1c:	mov	w10, #0x14                  	// #20
   38d20:	cmp	x8, x9
   38d24:	mov	w8, #0xf                   	// #15
   38d28:	csel	w8, w8, w10, hi  // hi = pmore
   38d2c:	mov	x27, x28
   38d30:	mov	x28, x24
   38d34:	ldur	x24, [x29, #-16]
   38d38:	ldur	x12, [x29, #-32]
   38d3c:	cmp	w8, #0xf
   38d40:	mov	x13, x21
   38d44:	b.eq	38504 <mpfr_sub1sp@@Base+0x1f4>  // b.none
   38d48:	cmp	w8, #0x14
   38d4c:	b.eq	38668 <mpfr_sub1sp@@Base+0x358>  // b.none
   38d50:	b	386c4 <mpfr_sub1sp@@Base+0x3b4>
   38d54:	sub	x0, x29, #0x8
   38d58:	bl	c220 <mpfr_tmp_allocate@plt>
   38d5c:	mov	x24, x0
   38d60:	b	38690 <mpfr_sub1sp@@Base+0x380>
   38d64:	bl	c8d0 <mpfr_tmp_free@plt>
   38d68:	mov	w8, #0x1                   	// #1
   38d6c:	b	386c4 <mpfr_sub1sp@@Base+0x3b4>
   38d70:	bl	bf30 <__gmpn_copyd@plt>
   38d74:	neg	x2, x24
   38d78:	mov	x0, x22
   38d7c:	mov	w1, wzr
   38d80:	bl	c5b0 <memset@plt>
   38d84:	orr	x8, x21, x23
   38d88:	sub	x26, x26, x8
   38d8c:	b	3871c <mpfr_sub1sp@@Base+0x40c>
   38d90:	ldur	x24, [x29, #-16]
   38d94:	mov	w8, #0x10                  	// #16
   38d98:	b	386c4 <mpfr_sub1sp@@Base+0x3b4>
   38d9c:	ldr	w8, [x19, #8]
   38da0:	ldur	x24, [x29, #-16]
   38da4:	add	w8, w20, w8, lsr #31
   38da8:	cmp	w8, #0x3
   38dac:	csinc	w20, w20, wzr, ne  // ne = any
   38db0:	cmp	w20, #0x1
   38db4:	mov	w8, #0x10                  	// #16
   38db8:	cinc	w8, w8, eq  // eq = none
   38dbc:	b	386c4 <mpfr_sub1sp@@Base+0x3b4>
   38dc0:	mov	w20, wzr
   38dc4:	b	38c0c <mpfr_sub1sp@@Base+0x8fc>
   38dc8:	ldr	x8, [x12, #24]
   38dcc:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   38dd0:	ldr	x9, [x8, x27, lsl #3]
   38dd4:	cmp	x9, x10
   38dd8:	and	x9, x9, #0x4000000000000000
   38ddc:	stur	x9, [x29, #-40]
   38de0:	b.eq	3907c <mpfr_sub1sp@@Base+0xd6c>  // b.none
   38de4:	mov	w25, #0x1                   	// #1
   38de8:	ldr	x1, [x23, #24]
   38dec:	cmp	w20, #0x5
   38df0:	b.ne	38f74 <mpfr_sub1sp@@Base+0xc64>  // b.any
   38df4:	cmp	x22, x1
   38df8:	b.eq	38e08 <mpfr_sub1sp@@Base+0xaf8>  // b.none
   38dfc:	lsl	x2, x24, #3
   38e00:	mov	x0, x22
   38e04:	bl	be50 <memcpy@plt>
   38e08:	mov	w8, #0x1                   	// #1
   38e0c:	stur	x8, [x29, #-24]
   38e10:	b	38894 <mpfr_sub1sp@@Base+0x584>
   38e14:	ldr	x8, [x12, #24]
   38e18:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   38e1c:	ldr	x9, [x8, x27, lsl #3]
   38e20:	cmp	x9, x10
   38e24:	b.eq	38f98 <mpfr_sub1sp@@Base+0xc88>  // b.none
   38e28:	mov	w8, #0x1                   	// #1
   38e2c:	stur	x8, [x29, #-48]
   38e30:	b	38900 <mpfr_sub1sp@@Base+0x5f0>
   38e34:	ldur	x2, [x29, #-16]
   38e38:	mov	x0, x22
   38e3c:	mov	x1, x22
   38e40:	mov	x3, x23
   38e44:	bl	c8f0 <__gmpn_sub_1@plt>
   38e48:	b	38a78 <mpfr_sub1sp@@Base+0x768>
   38e4c:	cbz	x25, 38f24 <mpfr_sub1sp@@Base+0xc14>
   38e50:	mov	w8, #0x11                  	// #17
   38e54:	b	38aa0 <mpfr_sub1sp@@Base+0x790>
   38e58:	ldr	w8, [x19, #8]
   38e5c:	ldur	x9, [x29, #-24]
   38e60:	mov	w10, #0x10                  	// #16
   38e64:	add	w8, w20, w8, lsr #31
   38e68:	cmp	w8, #0x3
   38e6c:	csinc	w11, w20, wzr, ne  // ne = any
   38e70:	orr	x9, x9, x25
   38e74:	cmp	w11, #0x1
   38e78:	cset	w8, ne  // ne = any
   38e7c:	cmp	x9, #0x0
   38e80:	cset	w9, eq  // eq = none
   38e84:	orr	w8, w9, w8
   38e88:	cmp	w8, #0x0
   38e8c:	cinc	w8, w10, eq  // eq = none
   38e90:	csinc	w20, w11, wzr, ne  // ne = any
   38e94:	b	38aa0 <mpfr_sub1sp@@Base+0x790>
   38e98:	ldur	x8, [x29, #-24]
   38e9c:	cbz	x8, 38ea8 <mpfr_sub1sp@@Base+0xb98>
   38ea0:	cmp	w21, #0x1
   38ea4:	b.ne	38ec8 <mpfr_sub1sp@@Base+0xbb8>  // b.any
   38ea8:	ldur	x9, [x29, #-48]
   38eac:	mov	w8, wzr
   38eb0:	cbz	x9, 38b0c <mpfr_sub1sp@@Base+0x7fc>
   38eb4:	ldur	x9, [x29, #-40]
   38eb8:	cbz	x9, 38b0c <mpfr_sub1sp@@Base+0x7fc>
   38ebc:	ldur	x9, [x29, #-24]
   38ec0:	cbnz	x9, 38b0c <mpfr_sub1sp@@Base+0x7fc>
   38ec4:	cbnz	w21, 38b0c <mpfr_sub1sp@@Base+0x7fc>
   38ec8:	mov	w8, #0x1                   	// #1
   38ecc:	lsl	x3, x8, x28
   38ed0:	mov	x0, x22
   38ed4:	mov	x1, x22
   38ed8:	mov	x2, x24
   38edc:	bl	c8f0 <__gmpn_sub_1@plt>
   38ee0:	lsl	x8, x20, #3
   38ee4:	ldr	x10, [x22, x8]
   38ee8:	cmp	w21, #0x0
   38eec:	mov	w9, #0xffffffff            	// #-1
   38ef0:	cneg	w9, w9, ne  // ne = any
   38ef4:	cmp	x25, #0x0
   38ef8:	csel	w20, wzr, w9, eq  // eq = none
   38efc:	orr	x9, x10, #0x8000000000000000
   38f00:	sub	x26, x26, #0x1
   38f04:	str	x9, [x22, x8]
   38f08:	mov	w8, #0x39                  	// #57
   38f0c:	cmp	w8, #0x39
   38f10:	b.ne	38b14 <mpfr_sub1sp@@Base+0x804>  // b.any
   38f14:	b	38950 <mpfr_sub1sp@@Base+0x640>
   38f18:	bl	c8d0 <mpfr_tmp_free@plt>
   38f1c:	cbnz	w20, 38c0c <mpfr_sub1sp@@Base+0x8fc>
   38f20:	b	38bdc <mpfr_sub1sp@@Base+0x8cc>
   38f24:	ldr	x8, [x22]
   38f28:	tst	x8, x23
   38f2c:	mov	w8, #0x10                  	// #16
   38f30:	cinc	w8, w8, ne  // ne = any
   38f34:	b	38aa0 <mpfr_sub1sp@@Base+0x790>
   38f38:	ldr	x22, [x19, #24]
   38f3c:	cbnz	x9, 39024 <mpfr_sub1sp@@Base+0xd14>
   38f40:	mov	x0, x22
   38f44:	mov	w1, wzr
   38f48:	mov	x2, x8
   38f4c:	mov	x27, x8
   38f50:	bl	c5b0 <memset@plt>
   38f54:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   38f58:	str	x8, [x22, x27]
   38f5c:	mov	x8, x26
   38f60:	str	x8, [x19, #16]
   38f64:	ldur	x0, [x29, #-8]
   38f68:	cbnz	x0, 39040 <mpfr_sub1sp@@Base+0xd30>
   38f6c:	mov	w8, #0x1                   	// #1
   38f70:	b	38d2c <mpfr_sub1sp@@Base+0xa1c>
   38f74:	cbnz	w20, 38fe8 <mpfr_sub1sp@@Base+0xcd8>
   38f78:	cbz	x25, 390a4 <mpfr_sub1sp@@Base+0xd94>
   38f7c:	cmp	x22, x1
   38f80:	b.eq	39074 <mpfr_sub1sp@@Base+0xd64>  // b.none
   38f84:	lsl	x2, x24, #3
   38f88:	mov	x0, x22
   38f8c:	bl	be50 <memcpy@plt>
   38f90:	mov	w20, wzr
   38f94:	b	38e08 <mpfr_sub1sp@@Base+0xaf8>
   38f98:	sub	x8, x8, #0x8
   38f9c:	mov	x10, x27
   38fa0:	mov	x9, x10
   38fa4:	subs	x10, x10, #0x1
   38fa8:	b.lt	38fb4 <mpfr_sub1sp@@Base+0xca4>  // b.tstop
   38fac:	ldr	x11, [x8, x9, lsl #3]
   38fb0:	cbz	x11, 38fa0 <mpfr_sub1sp@@Base+0xc90>
   38fb4:	cmp	x9, #0x0
   38fb8:	cset	w8, gt
   38fbc:	b	38e2c <mpfr_sub1sp@@Base+0xb1c>
   38fc0:	sub	x10, x10, #0x8
   38fc4:	mov	x11, x9
   38fc8:	subs	x9, x9, #0x1
   38fcc:	b.lt	38fd8 <mpfr_sub1sp@@Base+0xcc8>  // b.tstop
   38fd0:	ldr	x12, [x10, x11, lsl #3]
   38fd4:	cbz	x12, 38fc4 <mpfr_sub1sp@@Base+0xcb4>
   38fd8:	cmp	x11, #0x0
   38fdc:	cset	w9, gt
   38fe0:	stur	x9, [x29, #-48]
   38fe4:	b	38830 <mpfr_sub1sp@@Base+0x520>
   38fe8:	ldr	w8, [x19, #8]
   38fec:	add	w8, w20, w8, lsr #31
   38ff0:	cmp	w8, #0x3
   38ff4:	csinc	w21, w20, wzr, ne  // ne = any
   38ff8:	cmp	w21, #0x1
   38ffc:	b.ne	3904c <mpfr_sub1sp@@Base+0xd3c>  // b.any
   39000:	cmp	x22, x1
   39004:	b.eq	39014 <mpfr_sub1sp@@Base+0xd04>  // b.none
   39008:	lsl	x2, x24, #3
   3900c:	mov	x0, x22
   39010:	bl	be50 <memcpy@plt>
   39014:	mov	w8, #0x1                   	// #1
   39018:	stur	x8, [x29, #-24]
   3901c:	mov	w20, #0x1                   	// #1
   39020:	b	38894 <mpfr_sub1sp@@Base+0x584>
   39024:	ldur	x8, [x29, #-16]
   39028:	mov	w1, #0xff                  	// #255
   3902c:	mov	x0, x22
   39030:	lsl	x2, x8, #3
   39034:	bl	c5b0 <memset@plt>
   39038:	sub	x8, x26, #0x1
   3903c:	b	38f60 <mpfr_sub1sp@@Base+0xc50>
   39040:	bl	c8d0 <mpfr_tmp_free@plt>
   39044:	mov	w8, #0x1                   	// #1
   39048:	b	38d2c <mpfr_sub1sp@@Base+0xa1c>
   3904c:	cmp	x22, x1
   39050:	b.eq	39060 <mpfr_sub1sp@@Base+0xd50>  // b.none
   39054:	lsl	x2, x24, #3
   39058:	mov	x0, x22
   3905c:	bl	be50 <memcpy@plt>
   39060:	mov	x8, #0xffffffffffffffff    	// #-1
   39064:	stur	x8, [x29, #-48]
   39068:	mov	w8, #0x1                   	// #1
   3906c:	stur	x8, [x29, #-24]
   39070:	b	38930 <mpfr_sub1sp@@Base+0x620>
   39074:	mov	w20, wzr
   39078:	b	38e08 <mpfr_sub1sp@@Base+0xaf8>
   3907c:	sub	x8, x8, #0x8
   39080:	mov	x10, x27
   39084:	mov	x9, x10
   39088:	subs	x10, x10, #0x1
   3908c:	b.lt	39098 <mpfr_sub1sp@@Base+0xd88>  // b.tstop
   39090:	ldr	x11, [x8, x9, lsl #3]
   39094:	cbz	x11, 39084 <mpfr_sub1sp@@Base+0xd74>
   39098:	cmp	x9, #0x0
   3909c:	cset	w25, gt
   390a0:	b	38de8 <mpfr_sub1sp@@Base+0xad8>
   390a4:	ldr	x8, [x1]
   390a8:	lsr	x8, x8, x28
   390ac:	tbnz	w8, #0, 38f7c <mpfr_sub1sp@@Base+0xc6c>
   390b0:	cmp	x22, x1
   390b4:	b.eq	390c4 <mpfr_sub1sp@@Base+0xdb4>  // b.none
   390b8:	lsl	x2, x24, #3
   390bc:	mov	x0, x22
   390c0:	bl	be50 <memcpy@plt>
   390c4:	mov	w21, wzr
   390c8:	b	39060 <mpfr_sub1sp@@Base+0xd50>
   390cc:	stp	x29, x30, [sp, #-16]!
   390d0:	ldp	x11, x14, [x2, #16]
   390d4:	ldp	x9, x12, [x1, #16]
   390d8:	ldr	x10, [x0, #24]
   390dc:	mov	x8, x0
   390e0:	mov	x29, sp
   390e4:	cmp	x9, x11
   390e8:	b.ne	39118 <mpfr_sub1sp@@Base+0xe08>  // b.any
   390ec:	ldr	x13, [x12]
   390f0:	ldr	x14, [x14]
   390f4:	subs	x11, x13, x14
   390f8:	b.eq	391e4 <mpfr_sub1sp@@Base+0xed4>  // b.none
   390fc:	ldr	w12, [x1, #8]
   39100:	cmp	x13, x14
   39104:	b.cs	39204 <mpfr_sub1sp@@Base+0xef4>  // b.hs, b.nlast
   39108:	neg	w12, w12
   3910c:	str	w12, [x8, #8]
   39110:	neg	x11, x11
   39114:	b	39208 <mpfr_sub1sp@@Base+0xef8>
   39118:	ldr	w16, [x1, #8]
   3911c:	csel	x13, x12, x14, gt
   39120:	csel	x15, x14, x12, gt
   39124:	csel	x12, x11, x9, gt
   39128:	csel	x11, x9, x11, gt
   3912c:	mov	w9, #0x40                  	// #64
   39130:	neg	x17, x4
   39134:	mov	w18, #0x1                   	// #1
   39138:	sub	x14, x11, x12
   3913c:	sub	x12, x9, x4
   39140:	cneg	w9, w16, le
   39144:	cmp	x14, #0x3f
   39148:	str	w9, [x8, #8]
   3914c:	lsl	x9, x18, x17
   39150:	b.hi	391c8 <mpfr_sub1sp@@Base+0xeb8>  // b.pmore
   39154:	ldr	x15, [x15]
   39158:	ldr	x13, [x13]
   3915c:	neg	x17, x14
   39160:	mov	x18, #0x8000000000000000    	// #-9223372036854775808
   39164:	lsl	x17, x15, x17
   39168:	lsr	x14, x15, x14
   3916c:	cmp	x17, #0x0
   39170:	sub	x13, x13, x14
   39174:	cset	w14, ne  // ne = any
   39178:	sub	x13, x13, x14
   3917c:	clz	x14, x13
   39180:	neg	x15, x17
   39184:	neg	x0, x14
   39188:	lsl	x17, x13, x14
   3918c:	cmp	x14, #0x0
   39190:	sub	x11, x11, x14
   39194:	lsl	x14, x15, x14
   39198:	lsr	x15, x15, x0
   3919c:	orr	x15, x15, x17
   391a0:	sub	x16, x9, #0x1
   391a4:	lsr	x18, x18, x4
   391a8:	csel	x15, x13, x15, eq  // eq = none
   391ac:	neg	x9, x9
   391b0:	and	x13, x15, x18
   391b4:	and	x16, x15, x16
   391b8:	and	x9, x15, x9
   391bc:	eor	x15, x16, x13
   391c0:	orr	x15, x15, x14
   391c4:	b	39254 <mpfr_sub1sp@@Base+0xf44>
   391c8:	ldr	x13, [x13]
   391cc:	mov	x16, #0x8000000000000001    	// #-9223372036854775807
   391d0:	cmp	x13, x16
   391d4:	b.cc	39224 <mpfr_sub1sp@@Base+0xf14>  // b.lo, b.ul, b.last
   391d8:	sub	x9, x13, x9
   391dc:	mov	w13, #0x1                   	// #1
   391e0:	b	39250 <mpfr_sub1sp@@Base+0xf40>
   391e4:	cmp	w3, #0x3
   391e8:	mov	w10, #0xffffffff            	// #-1
   391ec:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   391f0:	cneg	w10, w10, ne  // ne = any
   391f4:	mov	w9, wzr
   391f8:	str	w10, [x8, #8]
   391fc:	str	x11, [x8, #16]
   39200:	b	39330 <mpfr_sub1sp@@Base+0x1020>
   39204:	str	w12, [x8, #8]
   39208:	clz	x12, x11
   3920c:	lsl	x11, x11, x12
   39210:	mov	x13, xzr
   39214:	mov	x15, xzr
   39218:	str	x11, [x10]
   3921c:	sub	x11, x9, x12
   39220:	b	39258 <mpfr_sub1sp@@Base+0xf48>
   39224:	cmp	x4, #0x3f
   39228:	mov	w13, #0x1                   	// #1
   3922c:	b.lt	39248 <mpfr_sub1sp@@Base+0xf38>  // b.tstop
   39230:	cmp	x14, #0x40
   39234:	b.hi	39248 <mpfr_sub1sp@@Base+0xf38>  // b.pmore
   39238:	ldr	x13, [x15]
   3923c:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   39240:	cmp	x13, x14
   39244:	cset	w13, eq  // eq = none
   39248:	neg	x9, x9
   3924c:	sub	x11, x11, #0x1
   39250:	mov	w15, #0x1                   	// #1
   39254:	str	x9, [x10]
   39258:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3925c:	ldr	x1, [x0, #2736]
   39260:	add	x0, x0, #0xab0
   39264:	blr	x1
   39268:	mrs	x14, tpidr_el0
   3926c:	ldr	x9, [x14, x0]
   39270:	cmp	x11, x9
   39274:	b.lt	3933c <mpfr_sub1sp@@Base+0x102c>  // b.tstop
   39278:	mov	w9, wzr
   3927c:	cmp	w3, #0x5
   39280:	str	x11, [x8, #16]
   39284:	b.eq	39330 <mpfr_sub1sp@@Base+0x1020>  // b.none
   39288:	orr	x16, x15, x13
   3928c:	cbz	x16, 39330 <mpfr_sub1sp@@Base+0x1020>
   39290:	cmp	w3, #0x1
   39294:	b.eq	39300 <mpfr_sub1sp@@Base+0xff0>  // b.none
   39298:	cbnz	w3, 392f0 <mpfr_sub1sp@@Base+0xfe0>
   3929c:	cbz	x13, 39300 <mpfr_sub1sp@@Base+0xff0>
   392a0:	cbnz	x15, 392b0 <mpfr_sub1sp@@Base+0xfa0>
   392a4:	ldr	x9, [x10]
   392a8:	lsr	x9, x9, x12
   392ac:	tbz	w9, #0, 39300 <mpfr_sub1sp@@Base+0xff0>
   392b0:	ldr	x9, [x10]
   392b4:	mov	w13, #0x1                   	// #1
   392b8:	lsl	x12, x13, x12
   392bc:	adds	x9, x9, x12
   392c0:	str	x9, [x10]
   392c4:	b.eq	39364 <mpfr_sub1sp@@Base+0x1054>  // b.none
   392c8:	ldr	w9, [x8, #8]
   392cc:	cbz	w9, 39330 <mpfr_sub1sp@@Base+0x1020>
   392d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   392d4:	ldr	x1, [x0, #2800]
   392d8:	add	x0, x0, #0xaf0
   392dc:	blr	x1
   392e0:	ldr	w8, [x14, x0]
   392e4:	orr	w8, w8, #0x8
   392e8:	str	w8, [x14, x0]
   392ec:	b	39330 <mpfr_sub1sp@@Base+0x1020>
   392f0:	ldr	w9, [x8, #8]
   392f4:	add	w9, w3, w9, lsr #31
   392f8:	cmp	w9, #0x3
   392fc:	b.ne	392b0 <mpfr_sub1sp@@Base+0xfa0>  // b.any
   39300:	ldr	w8, [x8, #8]
   39304:	cbz	w8, 3932c <mpfr_sub1sp@@Base+0x101c>
   39308:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3930c:	ldr	x1, [x0, #2800]
   39310:	add	x0, x0, #0xaf0
   39314:	blr	x1
   39318:	ldr	w9, [x14, x0]
   3931c:	orr	w9, w9, #0x8
   39320:	str	w9, [x14, x0]
   39324:	neg	w9, w8
   39328:	b	39330 <mpfr_sub1sp@@Base+0x1020>
   3932c:	mov	w9, wzr
   39330:	mov	w0, w9
   39334:	ldp	x29, x30, [sp], #16
   39338:	ret
   3933c:	cbnz	w3, 39384 <mpfr_sub1sp@@Base+0x1074>
   39340:	sub	x9, x9, #0x1
   39344:	cmp	x11, x9
   39348:	b.lt	3935c <mpfr_sub1sp@@Base+0x104c>  // b.tstop
   3934c:	ldr	x9, [x10]
   39350:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   39354:	cmp	x9, x10
   39358:	b.ne	39380 <mpfr_sub1sp@@Base+0x1070>  // b.any
   3935c:	mov	w3, #0x1                   	// #1
   39360:	b	39384 <mpfr_sub1sp@@Base+0x1074>
   39364:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   39368:	add	x11, x11, #0x1
   3936c:	str	x9, [x10]
   39370:	str	x11, [x8, #16]
   39374:	ldr	w9, [x8, #8]
   39378:	cbnz	w9, 392d0 <mpfr_sub1sp@@Base+0xfc0>
   3937c:	b	39330 <mpfr_sub1sp@@Base+0x1020>
   39380:	mov	w3, wzr
   39384:	ldr	w2, [x8, #8]
   39388:	mov	x0, x8
   3938c:	mov	w1, w3
   39390:	bl	c880 <mpfr_underflow@plt>
   39394:	mov	w9, w0
   39398:	b	39330 <mpfr_sub1sp@@Base+0x1020>
   3939c:	stp	x29, x30, [sp, #-16]!
   393a0:	ldp	x11, x12, [x2, #16]
   393a4:	ldp	x9, x13, [x1, #16]
   393a8:	ldr	x10, [x0, #24]
   393ac:	mov	x8, x0
   393b0:	mov	x29, sp
   393b4:	cmp	x9, x11
   393b8:	b.ne	393f4 <mpfr_sub1sp@@Base+0x10e4>  // b.any
   393bc:	ldp	x11, x13, [x13]
   393c0:	ldp	x12, x14, [x12]
   393c4:	subs	x12, x11, x12
   393c8:	sub	x14, x13, x14
   393cc:	cset	w11, cc  // cc = lo, ul, last
   393d0:	sub	x11, x14, x11
   393d4:	orr	x14, x11, x12
   393d8:	cbz	x14, 394dc <mpfr_sub1sp@@Base+0x11cc>
   393dc:	ldr	w14, [x1, #8]
   393e0:	cmp	x11, x13
   393e4:	b.cs	394fc <mpfr_sub1sp@@Base+0x11ec>  // b.hs, b.nlast
   393e8:	mov	x13, x12
   393ec:	str	w14, [x8, #8]
   393f0:	b	39514 <mpfr_sub1sp@@Base+0x1204>
   393f4:	ldr	w17, [x1, #8]
   393f8:	csel	x16, x13, x12, gt
   393fc:	csel	x14, x12, x13, gt
   39400:	csel	x12, x11, x9, gt
   39404:	csel	x11, x9, x11, gt
   39408:	mov	w9, #0x80                  	// #128
   3940c:	neg	x13, x4
   39410:	mov	w18, #0x1                   	// #1
   39414:	sub	x15, x11, x12
   39418:	sub	x12, x9, x4
   3941c:	lsl	x9, x18, x13
   39420:	cneg	w13, w17, le
   39424:	cmp	x15, #0x3f
   39428:	str	w13, [x8, #8]
   3942c:	sub	x13, x9, #0x1
   39430:	b.hi	394c4 <mpfr_sub1sp@@Base+0x11b4>  // b.pmore
   39434:	ldp	x14, x18, [x14]
   39438:	ldp	x0, x16, [x16]
   3943c:	neg	x17, x15
   39440:	lsl	x1, x18, x17
   39444:	lsr	x2, x14, x15
   39448:	lsr	x15, x18, x15
   3944c:	orr	x18, x2, x1
   39450:	sub	x15, x16, x15
   39454:	subs	x16, x0, x18
   39458:	cset	w18, cc  // cc = lo, ul, last
   3945c:	lsl	x14, x14, x17
   39460:	sub	x17, x15, x18
   39464:	cbz	x14, 3947c <mpfr_sub1sp@@Base+0x116c>
   39468:	cmp	x16, #0x0
   3946c:	cset	w15, eq  // eq = none
   39470:	sub	x16, x16, #0x1
   39474:	sub	x17, x17, x15
   39478:	neg	x14, x14
   3947c:	cmp	x17, #0x0
   39480:	sub	x18, x11, #0x40
   39484:	csel	x17, x16, x17, eq  // eq = none
   39488:	csel	x15, xzr, x16, eq  // eq = none
   3948c:	clz	x16, x17
   39490:	csel	x11, x18, x11, eq  // eq = none
   39494:	cbz	x16, 395a8 <mpfr_sub1sp@@Base+0x1298>
   39498:	neg	x18, x16
   3949c:	lsl	x17, x17, x16
   394a0:	lsl	x0, x15, x16
   394a4:	lsr	x15, x15, x18
   394a8:	lsr	x18, x14, x18
   394ac:	orr	x17, x15, x17
   394b0:	lsl	x14, x14, x16
   394b4:	orr	x15, x18, x0
   394b8:	str	x17, [x10, #8]
   394bc:	sub	x11, x11, x16
   394c0:	b	395ac <mpfr_sub1sp@@Base+0x129c>
   394c4:	cmp	x15, #0x7f
   394c8:	b.hi	39558 <mpfr_sub1sp@@Base+0x1248>  // b.pmore
   394cc:	cmp	x15, #0x40
   394d0:	b.ne	395dc <mpfr_sub1sp@@Base+0x12cc>  // b.any
   394d4:	ldr	x17, [x14]
   394d8:	b	395f4 <mpfr_sub1sp@@Base+0x12e4>
   394dc:	cmp	w3, #0x3
   394e0:	mov	w10, #0xffffffff            	// #-1
   394e4:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   394e8:	cneg	w10, w10, ne  // ne = any
   394ec:	mov	w9, wzr
   394f0:	str	w10, [x8, #8]
   394f4:	str	x11, [x8, #16]
   394f8:	b	39780 <mpfr_sub1sp@@Base+0x1470>
   394fc:	cmp	x12, #0x0
   39500:	neg	w14, w14
   39504:	neg	x13, x12
   39508:	csetm	x12, ne  // ne = any
   3950c:	str	w14, [x8, #8]
   39510:	sub	x11, x12, x11
   39514:	cmp	x11, #0x0
   39518:	sub	x14, x9, #0x40
   3951c:	csel	x16, x13, x11, eq  // eq = none
   39520:	csel	x12, xzr, x13, eq  // eq = none
   39524:	clz	x15, x16
   39528:	csel	x11, x14, x9, eq  // eq = none
   3952c:	mov	x13, xzr
   39530:	mov	x14, xzr
   39534:	cbz	x15, 395a0 <mpfr_sub1sp@@Base+0x1290>
   39538:	lsl	x9, x16, x15
   3953c:	neg	x16, x15
   39540:	lsl	x17, x12, x15
   39544:	lsr	x12, x12, x16
   39548:	orr	x9, x12, x9
   3954c:	stp	x17, x9, [x10]
   39550:	sub	x11, x11, x15
   39554:	b	396a0 <mpfr_sub1sp@@Base+0x1390>
   39558:	ldp	x13, x16, [x16]
   3955c:	subs	x13, x13, x9
   39560:	cset	w17, cc  // cc = lo, ul, last
   39564:	subs	x16, x16, x17
   39568:	b.mi	39648 <mpfr_sub1sp@@Base+0x1338>  // b.first
   3956c:	cmp	x4, #0x7f
   39570:	mov	w13, #0x1                   	// #1
   39574:	b.lt	3968c <mpfr_sub1sp@@Base+0x137c>  // b.tstop
   39578:	cmp	x15, #0x80
   3957c:	b.hi	3968c <mpfr_sub1sp@@Base+0x137c>  // b.pmore
   39580:	ldr	x13, [x14, #8]
   39584:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   39588:	cmp	x13, x15
   3958c:	b.ne	39688 <mpfr_sub1sp@@Base+0x1378>  // b.any
   39590:	ldr	x13, [x14]
   39594:	cmp	x13, #0x0
   39598:	cset	w13, eq  // eq = none
   3959c:	b	3968c <mpfr_sub1sp@@Base+0x137c>
   395a0:	stp	x12, x16, [x10]
   395a4:	b	396a0 <mpfr_sub1sp@@Base+0x1390>
   395a8:	str	x17, [x10, #8]
   395ac:	mov	w16, #0x7f                  	// #127
   395b0:	mov	w17, #0x1                   	// #1
   395b4:	and	x18, x15, x13
   395b8:	sub	x13, x16, x4
   395bc:	lsl	x13, x17, x13
   395c0:	neg	x9, x9
   395c4:	and	x13, x15, x13
   395c8:	and	x9, x15, x9
   395cc:	eor	x15, x18, x13
   395d0:	orr	x14, x15, x14
   395d4:	str	x9, [x10]
   395d8:	b	396a0 <mpfr_sub1sp@@Base+0x1390>
   395dc:	ldp	x18, x17, [x14]
   395e0:	neg	x0, x15
   395e4:	cmp	x18, #0x0
   395e8:	lsl	x17, x17, x0
   395ec:	cset	w18, ne  // ne = any
   395f0:	orr	x17, x17, x18
   395f4:	ldr	x14, [x14, #8]
   395f8:	ldp	x18, x16, [x16]
   395fc:	cmp	x17, #0x0
   39600:	cset	w0, ne  // ne = any
   39604:	lsr	x14, x14, x15
   39608:	cinc	x15, x14, ne  // ne = any
   3960c:	subs	x14, x18, x15
   39610:	cset	w18, cc  // cc = lo, ul, last
   39614:	cmp	x15, #0x0
   39618:	sub	x15, x16, x18
   3961c:	cset	w16, eq  // eq = none
   39620:	and	w16, w0, w16
   39624:	sub	x16, x15, x16
   39628:	neg	x15, x17
   3962c:	tbnz	x16, #63, 39654 <mpfr_sub1sp@@Base+0x1344>
   39630:	extr	x16, x16, x14, #63
   39634:	extr	x14, x14, x15, #63
   39638:	lsl	x15, x15, #1
   3963c:	str	x16, [x10, #8]
   39640:	sub	x11, x11, #0x1
   39644:	b	39658 <mpfr_sub1sp@@Base+0x1348>
   39648:	stp	x13, x16, [x10]
   3964c:	mov	w13, #0x1                   	// #1
   39650:	b	3969c <mpfr_sub1sp@@Base+0x138c>
   39654:	str	x16, [x10, #8]
   39658:	mov	w16, #0x7f                  	// #127
   3965c:	mov	w17, #0x1                   	// #1
   39660:	and	x18, x14, x13
   39664:	sub	x13, x16, x4
   39668:	lsl	x13, x17, x13
   3966c:	neg	x9, x9
   39670:	and	x13, x14, x13
   39674:	and	x9, x14, x9
   39678:	eor	x14, x18, x13
   3967c:	orr	x14, x14, x15
   39680:	str	x9, [x10]
   39684:	b	396a0 <mpfr_sub1sp@@Base+0x1390>
   39688:	mov	x13, xzr
   3968c:	neg	x9, x9
   39690:	mov	x14, #0xffffffffffffffff    	// #-1
   39694:	sub	x11, x11, #0x1
   39698:	stp	x9, x14, [x10]
   3969c:	mov	w14, #0x1                   	// #1
   396a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   396a4:	ldr	x1, [x0, #2736]
   396a8:	add	x0, x0, #0xab0
   396ac:	blr	x1
   396b0:	mrs	x15, tpidr_el0
   396b4:	ldr	x9, [x15, x0]
   396b8:	cmp	x11, x9
   396bc:	b.lt	3978c <mpfr_sub1sp@@Base+0x147c>  // b.tstop
   396c0:	mov	w9, wzr
   396c4:	cmp	w3, #0x5
   396c8:	str	x11, [x8, #16]
   396cc:	b.eq	39780 <mpfr_sub1sp@@Base+0x1470>  // b.none
   396d0:	orr	x16, x14, x13
   396d4:	cbz	x16, 39780 <mpfr_sub1sp@@Base+0x1470>
   396d8:	cmp	w3, #0x1
   396dc:	b.eq	39750 <mpfr_sub1sp@@Base+0x1440>  // b.none
   396e0:	cbnz	w3, 39740 <mpfr_sub1sp@@Base+0x1430>
   396e4:	cbz	x13, 39750 <mpfr_sub1sp@@Base+0x1440>
   396e8:	cbnz	x14, 396f8 <mpfr_sub1sp@@Base+0x13e8>
   396ec:	ldr	x9, [x10]
   396f0:	lsr	x9, x9, x12
   396f4:	tbz	w9, #0, 39750 <mpfr_sub1sp@@Base+0x1440>
   396f8:	ldp	x9, x14, [x10]
   396fc:	mov	w13, #0x1                   	// #1
   39700:	lsl	x12, x13, x12
   39704:	adds	x9, x9, x12
   39708:	str	x9, [x10]
   3970c:	cinc	x9, x14, eq  // eq = none
   39710:	str	x9, [x10, #8]
   39714:	cbz	x9, 397d8 <mpfr_sub1sp@@Base+0x14c8>
   39718:	ldr	w9, [x8, #8]
   3971c:	cbz	w9, 39780 <mpfr_sub1sp@@Base+0x1470>
   39720:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   39724:	ldr	x1, [x0, #2800]
   39728:	add	x0, x0, #0xaf0
   3972c:	blr	x1
   39730:	ldr	w8, [x15, x0]
   39734:	orr	w8, w8, #0x8
   39738:	str	w8, [x15, x0]
   3973c:	b	39780 <mpfr_sub1sp@@Base+0x1470>
   39740:	ldr	w9, [x8, #8]
   39744:	add	w9, w3, w9, lsr #31
   39748:	cmp	w9, #0x3
   3974c:	b.ne	396f8 <mpfr_sub1sp@@Base+0x13e8>  // b.any
   39750:	ldr	w8, [x8, #8]
   39754:	cbz	w8, 3977c <mpfr_sub1sp@@Base+0x146c>
   39758:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3975c:	ldr	x1, [x0, #2800]
   39760:	add	x0, x0, #0xaf0
   39764:	blr	x1
   39768:	ldr	w9, [x15, x0]
   3976c:	orr	w9, w9, #0x8
   39770:	str	w9, [x15, x0]
   39774:	neg	w9, w8
   39778:	b	39780 <mpfr_sub1sp@@Base+0x1470>
   3977c:	mov	w9, wzr
   39780:	mov	w0, w9
   39784:	ldp	x29, x30, [sp], #16
   39788:	ret
   3978c:	cbnz	w3, 397c0 <mpfr_sub1sp@@Base+0x14b0>
   39790:	sub	x9, x9, #0x1
   39794:	cmp	x11, x9
   39798:	b.ge	397a4 <mpfr_sub1sp@@Base+0x1494>  // b.tcont
   3979c:	mov	w3, #0x1                   	// #1
   397a0:	b	397c0 <mpfr_sub1sp@@Base+0x14b0>
   397a4:	ldr	x9, [x10, #8]
   397a8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   397ac:	cmp	x9, x11
   397b0:	b.ne	397bc <mpfr_sub1sp@@Base+0x14ac>  // b.any
   397b4:	ldr	x9, [x10]
   397b8:	cbz	x9, 3979c <mpfr_sub1sp@@Base+0x148c>
   397bc:	mov	w3, wzr
   397c0:	ldr	w2, [x8, #8]
   397c4:	mov	x0, x8
   397c8:	mov	w1, w3
   397cc:	bl	c880 <mpfr_underflow@plt>
   397d0:	mov	w9, w0
   397d4:	b	39780 <mpfr_sub1sp@@Base+0x1470>
   397d8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   397dc:	add	x11, x11, #0x1
   397e0:	str	x9, [x10, #8]
   397e4:	str	x11, [x8, #16]
   397e8:	ldr	w9, [x8, #8]
   397ec:	cbnz	w9, 39720 <mpfr_sub1sp@@Base+0x1410>
   397f0:	b	39780 <mpfr_sub1sp@@Base+0x1470>
   397f4:	stp	x29, x30, [sp, #-16]!
   397f8:	ldp	x13, x14, [x2, #16]
   397fc:	ldp	x11, x9, [x1, #16]
   39800:	ldr	x10, [x0, #24]
   39804:	mov	x8, x0
   39808:	mov	x29, sp
   3980c:	cmp	x11, x13
   39810:	b.ne	39840 <mpfr_sub1sp@@Base+0x1530>  // b.any
   39814:	ldr	x13, [x9]
   39818:	ldr	x14, [x14]
   3981c:	subs	x9, x13, x14
   39820:	b.eq	39900 <mpfr_sub1sp@@Base+0x15f0>  // b.none
   39824:	ldr	w12, [x1, #8]
   39828:	cmp	x13, x14
   3982c:	b.cs	3991c <mpfr_sub1sp@@Base+0x160c>  // b.hs, b.nlast
   39830:	neg	w12, w12
   39834:	str	w12, [x8, #8]
   39838:	neg	x9, x9
   3983c:	b	39920 <mpfr_sub1sp@@Base+0x1610>
   39840:	ldr	w15, [x1, #8]
   39844:	csel	x16, x13, x11, gt
   39848:	csel	x11, x11, x13, gt
   3984c:	sub	x13, x11, x16
   39850:	csel	x12, x9, x14, gt
   39854:	csel	x9, x14, x9, gt
   39858:	cneg	w14, w15, le
   3985c:	cmp	x13, #0x3f
   39860:	str	w14, [x8, #8]
   39864:	b.hi	398c4 <mpfr_sub1sp@@Base+0x15b4>  // b.pmore
   39868:	ldr	x9, [x9]
   3986c:	ldr	x15, [x12]
   39870:	neg	x14, x13
   39874:	lsl	x12, x9, x14
   39878:	lsr	x9, x9, x13
   3987c:	cmp	x12, #0x0
   39880:	cset	w13, ne  // ne = any
   39884:	sub	x9, x15, x9
   39888:	subs	x9, x9, x13
   3988c:	b.eq	39978 <mpfr_sub1sp@@Base+0x1668>  // b.none
   39890:	clz	x13, x9
   39894:	neg	x12, x12
   39898:	neg	x15, x13
   3989c:	lsl	x14, x9, x13
   398a0:	cmp	x13, #0x0
   398a4:	lsl	x16, x12, x13
   398a8:	sub	x11, x11, x13
   398ac:	lsr	x13, x12, x15
   398b0:	orr	x13, x13, x14
   398b4:	and	x12, x16, #0x8000000000000000
   398b8:	csel	x9, x9, x13, eq  // eq = none
   398bc:	and	x13, x16, #0x7fffffffffffffff
   398c0:	b	39a18 <mpfr_sub1sp@@Base+0x1708>
   398c4:	ldr	x14, [x12]
   398c8:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   398cc:	cmp	x14, x12
   398d0:	b.cc	3993c <mpfr_sub1sp@@Base+0x162c>  // b.lo, b.ul, b.last
   398d4:	cmp	x13, #0x40
   398d8:	b.ls	399a4 <mpfr_sub1sp@@Base+0x1694>  // b.plast
   398dc:	mov	w12, #0x1                   	// #1
   398e0:	cmp	x13, #0x40
   398e4:	b.hi	399bc <mpfr_sub1sp@@Base+0x16ac>  // b.pmore
   398e8:	ldr	x9, [x9]
   398ec:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   398f0:	cmp	x9, x13
   398f4:	cset	w13, ne  // ne = any
   398f8:	sub	x9, x14, #0x1
   398fc:	b	39a18 <mpfr_sub1sp@@Base+0x1708>
   39900:	cmp	w3, #0x3
   39904:	mov	w10, #0xffffffff            	// #-1
   39908:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   3990c:	cneg	w10, w10, ne  // ne = any
   39910:	str	w10, [x8, #8]
   39914:	str	x11, [x8, #16]
   39918:	b	39ae8 <mpfr_sub1sp@@Base+0x17d8>
   3991c:	str	w12, [x8, #8]
   39920:	clz	x14, x9
   39924:	lsl	x9, x9, x14
   39928:	mov	x12, xzr
   3992c:	mov	x13, xzr
   39930:	str	x9, [x10]
   39934:	sub	x11, x11, x14
   39938:	b	39a1c <mpfr_sub1sp@@Base+0x170c>
   3993c:	cmp	x13, #0x40
   39940:	sub	x11, x11, #0x1
   39944:	b.ne	3998c <mpfr_sub1sp@@Base+0x167c>  // b.any
   39948:	ldr	x12, [x9]
   3994c:	mov	x14, #0x8000000000000001    	// #-9223372036854775807
   39950:	cmp	x12, x14
   39954:	b.cc	3998c <mpfr_sub1sp@@Base+0x167c>  // b.lo, b.ul, b.last
   39958:	neg	x9, x12
   3995c:	lsr	x12, x9, #62
   39960:	mov	x14, #0xfffffffffffffffe    	// #-2
   39964:	cmp	x12, #0x0
   39968:	lsl	x13, x9, #2
   3996c:	cset	w12, ne  // ne = any
   39970:	str	x14, [x10]
   39974:	b	39a1c <mpfr_sub1sp@@Base+0x170c>
   39978:	mov	x12, xzr
   3997c:	mov	x13, xzr
   39980:	sub	x11, x11, #0x40
   39984:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   39988:	b	39a18 <mpfr_sub1sp@@Base+0x1708>
   3998c:	cmp	x13, #0x41
   39990:	b.ls	399c8 <mpfr_sub1sp@@Base+0x16b8>  // b.plast
   39994:	mov	w12, #0x1                   	// #1
   39998:	cmp	x13, #0x41
   3999c:	b.ls	399e4 <mpfr_sub1sp@@Base+0x16d4>  // b.plast
   399a0:	b	39a08 <mpfr_sub1sp@@Base+0x16f8>
   399a4:	ldr	x12, [x9]
   399a8:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   399ac:	cmp	x12, x15
   399b0:	cset	w12, eq  // eq = none
   399b4:	cmp	x13, #0x40
   399b8:	b.ls	398e8 <mpfr_sub1sp@@Base+0x15d8>  // b.plast
   399bc:	mov	w13, #0x1                   	// #1
   399c0:	sub	x9, x14, #0x1
   399c4:	b	39a18 <mpfr_sub1sp@@Base+0x1708>
   399c8:	b.ne	399fc <mpfr_sub1sp@@Base+0x16ec>  // b.any
   399cc:	ldr	x12, [x9]
   399d0:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   399d4:	cmp	x12, x14
   399d8:	cset	w12, eq  // eq = none
   399dc:	cmp	x13, #0x41
   399e0:	b.hi	39a08 <mpfr_sub1sp@@Base+0x16f8>  // b.pmore
   399e4:	b.ne	39a10 <mpfr_sub1sp@@Base+0x1700>  // b.any
   399e8:	ldr	x9, [x9]
   399ec:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   399f0:	cmp	x9, x13
   399f4:	cset	w13, hi  // hi = pmore
   399f8:	b	39a14 <mpfr_sub1sp@@Base+0x1704>
   399fc:	mov	x12, xzr
   39a00:	cmp	x13, #0x41
   39a04:	b.ls	399e4 <mpfr_sub1sp@@Base+0x16d4>  // b.plast
   39a08:	mov	w13, #0x1                   	// #1
   39a0c:	b	39a14 <mpfr_sub1sp@@Base+0x1704>
   39a10:	mov	x13, xzr
   39a14:	mov	x9, #0xffffffffffffffff    	// #-1
   39a18:	str	x9, [x10]
   39a1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   39a20:	ldr	x1, [x0, #2736]
   39a24:	add	x0, x0, #0xab0
   39a28:	blr	x1
   39a2c:	mrs	x14, tpidr_el0
   39a30:	ldr	x9, [x14, x0]
   39a34:	cmp	x11, x9
   39a38:	b.lt	39af4 <mpfr_sub1sp@@Base+0x17e4>  // b.tstop
   39a3c:	mov	w9, wzr
   39a40:	cmp	w3, #0x5
   39a44:	str	x11, [x8, #16]
   39a48:	b.eq	39ae8 <mpfr_sub1sp@@Base+0x17d8>  // b.none
   39a4c:	orr	x15, x13, x12
   39a50:	cbz	x15, 39ae8 <mpfr_sub1sp@@Base+0x17d8>
   39a54:	cmp	w3, #0x1
   39a58:	b.eq	39ab8 <mpfr_sub1sp@@Base+0x17a8>  // b.none
   39a5c:	cbnz	w3, 39aa8 <mpfr_sub1sp@@Base+0x1798>
   39a60:	cbz	x12, 39ab8 <mpfr_sub1sp@@Base+0x17a8>
   39a64:	cbnz	x13, 39a70 <mpfr_sub1sp@@Base+0x1760>
   39a68:	ldrb	w9, [x10]
   39a6c:	tbz	w9, #0, 39ab8 <mpfr_sub1sp@@Base+0x17a8>
   39a70:	ldr	x9, [x10]
   39a74:	adds	x9, x9, #0x1
   39a78:	str	x9, [x10]
   39a7c:	b.cs	39b1c <mpfr_sub1sp@@Base+0x180c>  // b.hs, b.nlast
   39a80:	ldr	w9, [x8, #8]
   39a84:	cbz	w9, 39ae8 <mpfr_sub1sp@@Base+0x17d8>
   39a88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   39a8c:	ldr	x1, [x0, #2800]
   39a90:	add	x0, x0, #0xaf0
   39a94:	blr	x1
   39a98:	ldr	w8, [x14, x0]
   39a9c:	orr	w8, w8, #0x8
   39aa0:	str	w8, [x14, x0]
   39aa4:	b	39ae8 <mpfr_sub1sp@@Base+0x17d8>
   39aa8:	ldr	w9, [x8, #8]
   39aac:	add	w9, w3, w9, lsr #31
   39ab0:	cmp	w9, #0x3
   39ab4:	b.ne	39a70 <mpfr_sub1sp@@Base+0x1760>  // b.any
   39ab8:	ldr	w8, [x8, #8]
   39abc:	cbz	w8, 39ae4 <mpfr_sub1sp@@Base+0x17d4>
   39ac0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   39ac4:	ldr	x1, [x0, #2800]
   39ac8:	add	x0, x0, #0xaf0
   39acc:	blr	x1
   39ad0:	ldr	w9, [x14, x0]
   39ad4:	orr	w9, w9, #0x8
   39ad8:	str	w9, [x14, x0]
   39adc:	neg	w9, w8
   39ae0:	b	39ae8 <mpfr_sub1sp@@Base+0x17d8>
   39ae4:	mov	w9, wzr
   39ae8:	mov	w0, w9
   39aec:	ldp	x29, x30, [sp], #16
   39af0:	ret
   39af4:	cbnz	w3, 39b3c <mpfr_sub1sp@@Base+0x182c>
   39af8:	sub	x9, x9, #0x1
   39afc:	cmp	x11, x9
   39b00:	b.lt	39b14 <mpfr_sub1sp@@Base+0x1804>  // b.tstop
   39b04:	ldr	x9, [x10]
   39b08:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   39b0c:	cmp	x9, x10
   39b10:	b.ne	39b38 <mpfr_sub1sp@@Base+0x1828>  // b.any
   39b14:	mov	w3, #0x1                   	// #1
   39b18:	b	39b3c <mpfr_sub1sp@@Base+0x182c>
   39b1c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   39b20:	add	x11, x11, #0x1
   39b24:	str	x9, [x10]
   39b28:	str	x11, [x8, #16]
   39b2c:	ldr	w9, [x8, #8]
   39b30:	cbnz	w9, 39a88 <mpfr_sub1sp@@Base+0x1778>
   39b34:	b	39ae8 <mpfr_sub1sp@@Base+0x17d8>
   39b38:	mov	w3, wzr
   39b3c:	ldr	w2, [x8, #8]
   39b40:	mov	x0, x8
   39b44:	mov	w1, w3
   39b48:	bl	c880 <mpfr_underflow@plt>
   39b4c:	mov	w9, w0
   39b50:	b	39ae8 <mpfr_sub1sp@@Base+0x17d8>
   39b54:	stp	x29, x30, [sp, #-16]!
   39b58:	ldp	x13, x12, [x2, #16]
   39b5c:	ldp	x11, x9, [x1, #16]
   39b60:	ldr	x10, [x0, #24]
   39b64:	mov	x8, x0
   39b68:	mov	x29, sp
   39b6c:	cmp	x11, x13
   39b70:	b.ne	39bd4 <mpfr_sub1sp@@Base+0x18c4>  // b.any
   39b74:	ldr	x15, [x9]
   39b78:	ldr	x16, [x12, #16]
   39b7c:	ldp	x13, x12, [x12]
   39b80:	ldp	x9, x14, [x9, #8]
   39b84:	subs	x13, x15, x13
   39b88:	sub	x15, x14, x16
   39b8c:	cset	w16, cc  // cc = lo, ul, last
   39b90:	subs	x9, x9, x12
   39b94:	cset	w17, eq  // eq = none
   39b98:	cset	w12, cc  // cc = lo, ul, last
   39b9c:	sub	x9, x9, x16
   39ba0:	and	w16, w16, w17
   39ba4:	orr	w12, w12, w16
   39ba8:	sub	x12, x15, x12
   39bac:	orr	x15, x9, x13
   39bb0:	orr	x15, x15, x12
   39bb4:	cbz	x15, 39d34 <mpfr_sub1sp@@Base+0x1a24>
   39bb8:	ldr	w15, [x1, #8]
   39bbc:	cmp	x12, x14
   39bc0:	b.cs	39d54 <mpfr_sub1sp@@Base+0x1a44>  // b.hs, b.nlast
   39bc4:	str	w15, [x8, #8]
   39bc8:	mov	x15, x13
   39bcc:	cbnz	x12, 39da0 <mpfr_sub1sp@@Base+0x1a90>
   39bd0:	b	39d80 <mpfr_sub1sp@@Base+0x1a70>
   39bd4:	ldr	w17, [x1, #8]
   39bd8:	csel	x16, x12, x9, gt
   39bdc:	csel	x14, x9, x12, gt
   39be0:	csel	x9, x13, x11, gt
   39be4:	csel	x11, x11, x13, gt
   39be8:	neg	x13, x4
   39bec:	mov	w18, #0x1                   	// #1
   39bf0:	mov	w12, #0xc0                  	// #192
   39bf4:	sub	x15, x11, x9
   39bf8:	lsl	x9, x18, x13
   39bfc:	cneg	w13, w17, le
   39c00:	sub	x12, x12, x4
   39c04:	cmp	x15, #0x3f
   39c08:	str	w13, [x8, #8]
   39c0c:	sub	x13, x9, #0x1
   39c10:	b.hi	39d00 <mpfr_sub1sp@@Base+0x19f0>  // b.pmore
   39c14:	ldp	x17, x0, [x16]
   39c18:	ldr	x16, [x16, #16]
   39c1c:	neg	x1, x15
   39c20:	ldr	x6, [x14, #16]
   39c24:	lsl	x18, x17, x1
   39c28:	lsl	x2, x0, x1
   39c2c:	lsr	x17, x17, x15
   39c30:	lsl	x1, x16, x1
   39c34:	lsr	x0, x0, x15
   39c38:	lsr	x15, x16, x15
   39c3c:	ldp	x16, x5, [x14]
   39c40:	orr	x14, x2, x17
   39c44:	orr	x17, x1, x0
   39c48:	sub	x15, x6, x15
   39c4c:	subs	x14, x16, x14
   39c50:	sub	x17, x5, x17
   39c54:	cset	w0, cc  // cc = lo, ul, last
   39c58:	sub	x16, x17, x0
   39c5c:	cmp	x16, x5
   39c60:	cset	w1, eq  // eq = none
   39c64:	cset	w17, hi  // hi = pmore
   39c68:	and	w0, w0, w1
   39c6c:	orr	w17, w17, w0
   39c70:	sub	x17, x15, x17
   39c74:	cbz	x18, 39e04 <mpfr_sub1sp@@Base+0x1af4>
   39c78:	cmp	x14, #0x0
   39c7c:	orr	x15, x16, x14
   39c80:	cset	w0, eq  // eq = none
   39c84:	cmp	x15, #0x0
   39c88:	cset	w15, eq  // eq = none
   39c8c:	sub	x14, x14, #0x1
   39c90:	sub	x16, x16, x0
   39c94:	sub	x17, x17, x15
   39c98:	neg	x15, x18
   39c9c:	cbnz	x17, 39cc0 <mpfr_sub1sp@@Base+0x19b0>
   39ca0:	cmp	x16, #0x0
   39ca4:	mov	x18, #0xffffffffffffffc0    	// #-64
   39ca8:	mov	x0, #0xffffffffffffff80    	// #-128
   39cac:	csel	x17, x14, x16, eq  // eq = none
   39cb0:	csel	x16, xzr, x14, eq  // eq = none
   39cb4:	csel	x14, x0, x18, eq  // eq = none
   39cb8:	add	x11, x14, x11
   39cbc:	mov	x14, xzr
   39cc0:	clz	x18, x17
   39cc4:	cbz	x18, 39e10 <mpfr_sub1sp@@Base+0x1b00>
   39cc8:	neg	x0, x18
   39ccc:	lsl	x17, x17, x18
   39cd0:	lsl	x1, x16, x18
   39cd4:	lsl	x2, x14, x18
   39cd8:	lsr	x16, x16, x0
   39cdc:	lsr	x14, x14, x0
   39ce0:	lsr	x0, x15, x0
   39ce4:	orr	x16, x16, x17
   39ce8:	orr	x17, x14, x1
   39cec:	lsl	x15, x15, x18
   39cf0:	orr	x14, x0, x2
   39cf4:	stp	x17, x16, [x10, #8]
   39cf8:	sub	x11, x11, x18
   39cfc:	b	39f38 <mpfr_sub1sp@@Base+0x1c28>
   39d00:	cmp	x15, #0x7f
   39d04:	b.hi	39de0 <mpfr_sub1sp@@Base+0x1ad0>  // b.pmore
   39d08:	cmp	x15, #0x40
   39d0c:	b.ne	39e18 <mpfr_sub1sp@@Base+0x1b08>  // b.any
   39d10:	ldr	x17, [x16]
   39d14:	cmp	x15, #0x40
   39d18:	b.eq	39e38 <mpfr_sub1sp@@Base+0x1b28>  // b.none
   39d1c:	ldp	x0, x18, [x16, #8]
   39d20:	neg	x1, x15
   39d24:	lsl	x18, x18, x1
   39d28:	lsr	x0, x0, x15
   39d2c:	orr	x18, x0, x18
   39d30:	b	39e3c <mpfr_sub1sp@@Base+0x1b2c>
   39d34:	cmp	w3, #0x3
   39d38:	mov	w10, #0xffffffff            	// #-1
   39d3c:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   39d40:	cneg	w10, w10, ne  // ne = any
   39d44:	mov	w9, wzr
   39d48:	str	w10, [x8, #8]
   39d4c:	str	x11, [x8, #16]
   39d50:	b	3a054 <mpfr_sub1sp@@Base+0x1d44>
   39d54:	neg	w14, w15
   39d58:	cmp	x13, #0x0
   39d5c:	str	w14, [x8, #8]
   39d60:	csetm	x14, ne  // ne = any
   39d64:	sub	x9, x14, x9
   39d68:	neg	x15, x13
   39d6c:	orr	x13, x9, x13
   39d70:	cmp	x13, #0x0
   39d74:	csetm	x13, ne  // ne = any
   39d78:	sub	x12, x13, x12
   39d7c:	cbnz	x12, 39da0 <mpfr_sub1sp@@Base+0x1a90>
   39d80:	cmp	x9, #0x0
   39d84:	mov	x13, #0xffffffffffffffc0    	// #-64
   39d88:	mov	x14, #0xffffffffffffff80    	// #-128
   39d8c:	csel	x13, x14, x13, eq  // eq = none
   39d90:	csel	x12, x15, x9, eq  // eq = none
   39d94:	csel	x9, xzr, x15, eq  // eq = none
   39d98:	add	x11, x13, x11
   39d9c:	mov	x15, xzr
   39da0:	mov	x13, xzr
   39da4:	mov	x14, xzr
   39da8:	clz	x16, x12
   39dac:	cbz	x16, 39df8 <mpfr_sub1sp@@Base+0x1ae8>
   39db0:	neg	x17, x16
   39db4:	lsl	x12, x12, x16
   39db8:	lsl	x18, x9, x16
   39dbc:	lsl	x0, x15, x16
   39dc0:	lsr	x9, x9, x17
   39dc4:	lsr	x15, x15, x17
   39dc8:	orr	x9, x9, x12
   39dcc:	orr	x12, x15, x18
   39dd0:	stp	x12, x9, [x10, #8]
   39dd4:	str	x0, [x10]
   39dd8:	sub	x11, x11, x16
   39ddc:	b	39f64 <mpfr_sub1sp@@Base+0x1c54>
   39de0:	cmp	x15, #0xbf
   39de4:	b.hi	39ebc <mpfr_sub1sp@@Base+0x1bac>  // b.pmore
   39de8:	cmp	x15, #0x80
   39dec:	b.ne	3a060 <mpfr_sub1sp@@Base+0x1d50>  // b.any
   39df0:	ldr	x17, [x16, #8]
   39df4:	b	3a078 <mpfr_sub1sp@@Base+0x1d68>
   39df8:	stp	x9, x12, [x10, #8]
   39dfc:	str	x15, [x10]
   39e00:	b	39f64 <mpfr_sub1sp@@Base+0x1c54>
   39e04:	mov	x15, xzr
   39e08:	cbnz	x17, 39cc0 <mpfr_sub1sp@@Base+0x19b0>
   39e0c:	b	39ca0 <mpfr_sub1sp@@Base+0x1990>
   39e10:	str	x17, [x10, #16]
   39e14:	b	39f34 <mpfr_sub1sp@@Base+0x1c24>
   39e18:	ldp	x18, x17, [x16]
   39e1c:	neg	x0, x15
   39e20:	cmp	x18, #0x0
   39e24:	lsl	x17, x17, x0
   39e28:	cset	w18, ne  // ne = any
   39e2c:	orr	x17, x17, x18
   39e30:	cmp	x15, #0x40
   39e34:	b.ne	39d1c <mpfr_sub1sp@@Base+0x1a0c>  // b.any
   39e38:	ldr	x18, [x16, #8]
   39e3c:	ldr	x16, [x16, #16]
   39e40:	ldp	x0, x1, [x14]
   39e44:	ldr	x2, [x14, #16]
   39e48:	lsr	x15, x16, x15
   39e4c:	subs	x14, x0, x18
   39e50:	sub	x15, x1, x15
   39e54:	cset	w18, cc  // cc = lo, ul, last
   39e58:	sub	x16, x15, x18
   39e5c:	cmp	x16, x1
   39e60:	cset	w0, eq  // eq = none
   39e64:	cset	w15, hi  // hi = pmore
   39e68:	and	w18, w18, w0
   39e6c:	orr	w15, w15, w18
   39e70:	sub	x18, x2, x15
   39e74:	cbz	x17, 39f28 <mpfr_sub1sp@@Base+0x1c18>
   39e78:	cmp	x14, #0x0
   39e7c:	orr	x15, x16, x14
   39e80:	cset	w0, eq  // eq = none
   39e84:	cmp	x15, #0x0
   39e88:	cset	w15, eq  // eq = none
   39e8c:	sub	x14, x14, #0x1
   39e90:	sub	x16, x16, x0
   39e94:	sub	x18, x18, x15
   39e98:	neg	x15, x17
   39e9c:	tbnz	x18, #63, 39f30 <mpfr_sub1sp@@Base+0x1c20>
   39ea0:	extr	x17, x18, x16, #63
   39ea4:	extr	x16, x16, x14, #63
   39ea8:	extr	x14, x14, x15, #63
   39eac:	lsl	x15, x15, #1
   39eb0:	stp	x16, x17, [x10, #8]
   39eb4:	sub	x11, x11, #0x1
   39eb8:	b	39f38 <mpfr_sub1sp@@Base+0x1c28>
   39ebc:	ldp	x13, x17, [x14]
   39ec0:	ldr	x0, [x14, #16]
   39ec4:	subs	x13, x13, x9
   39ec8:	cset	w18, cc  // cc = lo, ul, last
   39ecc:	sub	x14, x17, x18
   39ed0:	cmp	x14, x17
   39ed4:	cset	w17, hi  // hi = pmore
   39ed8:	subs	x17, x0, x17
   39edc:	b.mi	3a0f0 <mpfr_sub1sp@@Base+0x1de0>  // b.first
   39ee0:	cmp	x4, #0xbf
   39ee4:	mov	w13, #0x1                   	// #1
   39ee8:	b.lt	39f10 <mpfr_sub1sp@@Base+0x1c00>  // b.tstop
   39eec:	cmp	x15, #0xc0
   39ef0:	b.hi	39f10 <mpfr_sub1sp@@Base+0x1c00>  // b.pmore
   39ef4:	ldr	x13, [x16, #16]
   39ef8:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   39efc:	cmp	x13, x14
   39f00:	b.ne	39f0c <mpfr_sub1sp@@Base+0x1bfc>  // b.any
   39f04:	ldr	x13, [x16, #8]
   39f08:	cbz	x13, 3a134 <mpfr_sub1sp@@Base+0x1e24>
   39f0c:	mov	x13, xzr
   39f10:	neg	x9, x9
   39f14:	mov	x14, #0xffffffffffffffff    	// #-1
   39f18:	sub	x11, x11, #0x1
   39f1c:	stp	x9, x14, [x10]
   39f20:	str	x14, [x10, #16]
   39f24:	b	3a0fc <mpfr_sub1sp@@Base+0x1dec>
   39f28:	mov	x15, xzr
   39f2c:	tbz	x18, #63, 39ea0 <mpfr_sub1sp@@Base+0x1b90>
   39f30:	str	x18, [x10, #16]
   39f34:	str	x16, [x10, #8]
   39f38:	mov	w16, #0xbf                  	// #191
   39f3c:	mov	w17, #0x1                   	// #1
   39f40:	and	x18, x14, x13
   39f44:	sub	x13, x16, x4
   39f48:	lsl	x13, x17, x13
   39f4c:	neg	x9, x9
   39f50:	and	x13, x14, x13
   39f54:	and	x9, x14, x9
   39f58:	eor	x14, x18, x13
   39f5c:	orr	x14, x14, x15
   39f60:	str	x9, [x10]
   39f64:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   39f68:	ldr	x1, [x0, #2736]
   39f6c:	add	x0, x0, #0xab0
   39f70:	blr	x1
   39f74:	mrs	x15, tpidr_el0
   39f78:	ldr	x9, [x15, x0]
   39f7c:	cmp	x11, x9
   39f80:	b.lt	3a144 <mpfr_sub1sp@@Base+0x1e34>  // b.tstop
   39f84:	mov	w9, wzr
   39f88:	cmp	w3, #0x5
   39f8c:	str	x11, [x8, #16]
   39f90:	b.eq	3a054 <mpfr_sub1sp@@Base+0x1d44>  // b.none
   39f94:	orr	x16, x14, x13
   39f98:	cbz	x16, 3a054 <mpfr_sub1sp@@Base+0x1d44>
   39f9c:	cmp	w3, #0x1
   39fa0:	b.eq	3a024 <mpfr_sub1sp@@Base+0x1d14>  // b.none
   39fa4:	cbnz	w3, 3a014 <mpfr_sub1sp@@Base+0x1d04>
   39fa8:	cbz	x13, 3a024 <mpfr_sub1sp@@Base+0x1d14>
   39fac:	cbnz	x14, 39fbc <mpfr_sub1sp@@Base+0x1cac>
   39fb0:	ldr	x9, [x10]
   39fb4:	lsr	x9, x9, x12
   39fb8:	tbz	w9, #0, 3a024 <mpfr_sub1sp@@Base+0x1d14>
   39fbc:	ldp	x13, x14, [x10]
   39fc0:	mov	w9, #0x1                   	// #1
   39fc4:	lsl	x9, x9, x12
   39fc8:	ldr	x16, [x10, #16]
   39fcc:	adds	x9, x13, x9
   39fd0:	cinc	x12, x14, eq  // eq = none
   39fd4:	stp	x9, x12, [x10]
   39fd8:	orr	x9, x12, x9
   39fdc:	cmp	x9, #0x0
   39fe0:	cinc	x9, x16, eq  // eq = none
   39fe4:	str	x9, [x10, #16]
   39fe8:	cbz	x9, 3a198 <mpfr_sub1sp@@Base+0x1e88>
   39fec:	ldr	w9, [x8, #8]
   39ff0:	cbz	w9, 3a054 <mpfr_sub1sp@@Base+0x1d44>
   39ff4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   39ff8:	ldr	x1, [x0, #2800]
   39ffc:	add	x0, x0, #0xaf0
   3a000:	blr	x1
   3a004:	ldr	w8, [x15, x0]
   3a008:	orr	w8, w8, #0x8
   3a00c:	str	w8, [x15, x0]
   3a010:	b	3a054 <mpfr_sub1sp@@Base+0x1d44>
   3a014:	ldr	w9, [x8, #8]
   3a018:	add	w9, w3, w9, lsr #31
   3a01c:	cmp	w9, #0x3
   3a020:	b.ne	39fbc <mpfr_sub1sp@@Base+0x1cac>  // b.any
   3a024:	ldr	w8, [x8, #8]
   3a028:	cbz	w8, 3a050 <mpfr_sub1sp@@Base+0x1d40>
   3a02c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3a030:	ldr	x1, [x0, #2800]
   3a034:	add	x0, x0, #0xaf0
   3a038:	blr	x1
   3a03c:	ldr	w9, [x15, x0]
   3a040:	orr	w9, w9, #0x8
   3a044:	str	w9, [x15, x0]
   3a048:	neg	w9, w8
   3a04c:	b	3a054 <mpfr_sub1sp@@Base+0x1d44>
   3a050:	mov	w9, wzr
   3a054:	mov	w0, w9
   3a058:	ldp	x29, x30, [sp], #16
   3a05c:	ret
   3a060:	ldp	x18, x17, [x16, #8]
   3a064:	neg	x0, x15
   3a068:	cmp	x18, #0x0
   3a06c:	lsl	x17, x17, x0
   3a070:	cset	w18, ne  // ne = any
   3a074:	orr	x17, x17, x18
   3a078:	ldr	x18, [x16]
   3a07c:	ldr	x16, [x16, #16]
   3a080:	ldp	x0, x1, [x14]
   3a084:	ldr	x14, [x14, #16]
   3a088:	cmp	x18, #0x0
   3a08c:	lsr	x15, x16, x15
   3a090:	cset	w16, ne  // ne = any
   3a094:	orr	x18, x17, x16
   3a098:	cmp	x18, #0x0
   3a09c:	sub	x15, x0, x15
   3a0a0:	cset	w16, ne  // ne = any
   3a0a4:	sub	x15, x15, x16
   3a0a8:	cmp	x15, x0
   3a0ac:	cset	w0, eq  // eq = none
   3a0b0:	cset	w17, hi  // hi = pmore
   3a0b4:	and	w16, w16, w0
   3a0b8:	orr	w16, w17, w16
   3a0bc:	sub	x16, x1, x16
   3a0c0:	cmp	x16, x1
   3a0c4:	cset	w17, hi  // hi = pmore
   3a0c8:	subs	x17, x14, x17
   3a0cc:	neg	x14, x18
   3a0d0:	b.mi	3a104 <mpfr_sub1sp@@Base+0x1df4>  // b.first
   3a0d4:	extr	x17, x17, x16, #63
   3a0d8:	extr	x16, x16, x15, #63
   3a0dc:	extr	x15, x15, x14, #63
   3a0e0:	lsl	x14, x14, #1
   3a0e4:	stp	x16, x17, [x10, #8]
   3a0e8:	sub	x11, x11, #0x1
   3a0ec:	b	3a108 <mpfr_sub1sp@@Base+0x1df8>
   3a0f0:	stp	x13, x14, [x10]
   3a0f4:	mov	w13, #0x1                   	// #1
   3a0f8:	str	x17, [x10, #16]
   3a0fc:	mov	w14, #0x1                   	// #1
   3a100:	b	39f64 <mpfr_sub1sp@@Base+0x1c54>
   3a104:	stp	x16, x17, [x10, #8]
   3a108:	mov	w16, #0xbf                  	// #191
   3a10c:	mov	w17, #0x1                   	// #1
   3a110:	and	x18, x15, x13
   3a114:	sub	x13, x16, x4
   3a118:	lsl	x13, x17, x13
   3a11c:	neg	x9, x9
   3a120:	and	x13, x15, x13
   3a124:	and	x9, x15, x9
   3a128:	eor	x15, x18, x13
   3a12c:	orr	x14, x15, x14
   3a130:	b	39f60 <mpfr_sub1sp@@Base+0x1c50>
   3a134:	ldr	x13, [x16]
   3a138:	cmp	x13, #0x0
   3a13c:	cset	w13, eq  // eq = none
   3a140:	b	39f10 <mpfr_sub1sp@@Base+0x1c00>
   3a144:	cbnz	w3, 3a180 <mpfr_sub1sp@@Base+0x1e70>
   3a148:	sub	x9, x9, #0x1
   3a14c:	cmp	x11, x9
   3a150:	b.ge	3a15c <mpfr_sub1sp@@Base+0x1e4c>  // b.tcont
   3a154:	mov	w3, #0x1                   	// #1
   3a158:	b	3a180 <mpfr_sub1sp@@Base+0x1e70>
   3a15c:	ldr	x9, [x10, #16]
   3a160:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3a164:	cmp	x9, x11
   3a168:	b.ne	3a17c <mpfr_sub1sp@@Base+0x1e6c>  // b.any
   3a16c:	ldr	x9, [x10, #8]
   3a170:	cbnz	x9, 3a17c <mpfr_sub1sp@@Base+0x1e6c>
   3a174:	ldr	x9, [x10]
   3a178:	cbz	x9, 3a154 <mpfr_sub1sp@@Base+0x1e44>
   3a17c:	mov	w3, wzr
   3a180:	ldr	w2, [x8, #8]
   3a184:	mov	x0, x8
   3a188:	mov	w1, w3
   3a18c:	bl	c880 <mpfr_underflow@plt>
   3a190:	mov	w9, w0
   3a194:	b	3a054 <mpfr_sub1sp@@Base+0x1d44>
   3a198:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3a19c:	add	x11, x11, #0x1
   3a1a0:	str	x9, [x10, #16]
   3a1a4:	str	x11, [x8, #16]
   3a1a8:	ldr	w9, [x8, #8]
   3a1ac:	cbnz	w9, 39ff4 <mpfr_sub1sp@@Base+0x1ce4>
   3a1b0:	b	3a054 <mpfr_sub1sp@@Base+0x1d44>

000000000003a1b4 <mpfr_get_version@@Base>:
   3a1b4:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   3a1b8:	add	x0, x0, #0xbc9
   3a1bc:	ret

000000000003a1c0 <mpfr_mpn_exp@@Base>:
   3a1c0:	stp	x29, x30, [sp, #-96]!
   3a1c4:	stp	x28, x27, [sp, #16]
   3a1c8:	stp	x26, x25, [sp, #32]
   3a1cc:	stp	x24, x23, [sp, #48]
   3a1d0:	stp	x22, x21, [sp, #64]
   3a1d4:	stp	x20, x19, [sp, #80]
   3a1d8:	mov	x29, sp
   3a1dc:	sub	sp, sp, #0x70
   3a1e0:	mov	x20, x4
   3a1e4:	mov	w23, w2
   3a1e8:	mov	x21, x1
   3a1ec:	cmp	x3, #0x0
   3a1f0:	mov	x22, x0
   3a1f4:	stur	x3, [x29, #-48]
   3a1f8:	b.le	3a54c <mpfr_mpn_exp@@Base+0x38c>
   3a1fc:	sub	w8, w23, #0x2
   3a200:	cmp	w8, #0x3d
   3a204:	b.cs	3a568 <mpfr_mpn_exp@@Base+0x3a8>  // b.hs, b.nlast
   3a208:	sxtw	x8, w23
   3a20c:	lsl	x25, x20, #4
   3a210:	clz	x19, x8
   3a214:	cmp	x25, #0x4, lsl #12
   3a218:	lsl	x8, x8, x19
   3a21c:	stur	xzr, [x29, #-8]
   3a220:	stur	x8, [x29, #-64]
   3a224:	stur	x21, [x29, #-104]
   3a228:	b.hi	3a584 <mpfr_mpn_exp@@Base+0x3c4>  // b.pmore
   3a22c:	add	x9, x25, #0xf
   3a230:	mov	x8, sp
   3a234:	and	x9, x9, #0xfffffffffffffff0
   3a238:	sub	x24, x8, x9
   3a23c:	mov	sp, x24
   3a240:	ldur	x8, [x29, #-64]
   3a244:	sub	x21, x20, #0x1
   3a248:	lsl	x2, x21, #3
   3a24c:	mov	x0, x22
   3a250:	mov	w1, wzr
   3a254:	str	x8, [x22, x2]
   3a258:	bl	c5b0 <memset@plt>
   3a25c:	ldur	x9, [x29, #-48]
   3a260:	stur	x21, [x29, #-96]
   3a264:	add	x8, x19, x21, lsl #6
   3a268:	mov	x0, x24
   3a26c:	clz	x21, x9
   3a270:	mov	w9, #0x40                  	// #64
   3a274:	mov	w1, wzr
   3a278:	mov	x2, x25
   3a27c:	neg	x23, x8
   3a280:	sub	x28, x9, x21
   3a284:	bl	c5b0 <memset@plt>
   3a288:	cmp	w21, #0x3e
   3a28c:	stur	x28, [x29, #-16]
   3a290:	b.hi	3a4cc <mpfr_mpn_exp@@Base+0x30c>  // b.pmore
   3a294:	lsl	x8, x20, #1
   3a298:	lsl	x10, x20, #6
   3a29c:	lsl	x12, x20, #3
   3a2a0:	sub	x8, x8, #0x1
   3a2a4:	mov	w9, #0x3e                  	// #62
   3a2a8:	stur	x10, [x29, #-56]
   3a2ac:	mov	w10, #0x40                  	// #64
   3a2b0:	mov	w11, #0x3f                  	// #63
   3a2b4:	stur	x8, [x29, #-24]
   3a2b8:	add	x8, x24, x12
   3a2bc:	sub	w25, w9, w21
   3a2c0:	sub	x9, x10, x19
   3a2c4:	sub	w26, w11, w21
   3a2c8:	sub	x27, x8, #0x8
   3a2cc:	mov	w21, w28
   3a2d0:	stur	wzr, [x29, #-76]
   3a2d4:	stur	wzr, [x29, #-36]
   3a2d8:	stur	x12, [x29, #-88]
   3a2dc:	stur	x9, [x29, #-72]
   3a2e0:	stur	x8, [x29, #-32]
   3a2e4:	b	3a308 <mpfr_mpn_exp@@Base+0x148>
   3a2e8:	ldur	x8, [x29, #-96]
   3a2ec:	ldr	x8, [x24, x8, lsl #3]
   3a2f0:	cmp	x8, #0x0
   3a2f4:	csel	w21, w21, w25, eq  // eq = none
   3a2f8:	sub	w26, w26, #0x1
   3a2fc:	cmp	w26, #0x0
   3a300:	sub	x25, x25, #0x1
   3a304:	b.le	3a4e0 <mpfr_mpn_exp@@Base+0x320>
   3a308:	mov	x0, x22
   3a30c:	mov	x1, xzr
   3a310:	bl	cf80 <__gmpn_scan1@plt>
   3a314:	lsr	x19, x0, #6
   3a318:	add	x28, x24, x19, lsl #4
   3a31c:	add	x1, x22, x19, lsl #3
   3a320:	sub	x2, x20, x19
   3a324:	mov	x0, x28
   3a328:	bl	c870 <__gmpn_sqr@plt>
   3a32c:	mov	x8, #0x4000000000000000    	// #4611686018427387904
   3a330:	cmn	x23, x8
   3a334:	b.mi	3a520 <mpfr_mpn_exp@@Base+0x360>  // b.first
   3a338:	ldur	x8, [x29, #-56]
   3a33c:	lsl	x9, x23, #1
   3a340:	add	x8, x9, x8
   3a344:	tbnz	x23, #63, 3a364 <mpfr_mpn_exp@@Base+0x1a4>
   3a348:	cmp	x8, #0x0
   3a34c:	ccmp	x8, x9, #0x0, ge  // ge = tcont
   3a350:	csel	x23, x9, x8, cc  // cc = lo, ul, last
   3a354:	cmp	x8, x9
   3a358:	b.cc	3a520 <mpfr_mpn_exp@@Base+0x360>  // b.lo, b.ul, b.last
   3a35c:	tbz	x8, #63, 3a368 <mpfr_mpn_exp@@Base+0x1a8>
   3a360:	b	3a520 <mpfr_mpn_exp@@Base+0x360>
   3a364:	mov	x23, x8
   3a368:	ldur	x8, [x29, #-24]
   3a36c:	ldr	x8, [x24, x8, lsl #3]
   3a370:	tbnz	x8, #63, 3a3cc <mpfr_mpn_exp@@Base+0x20c>
   3a374:	ldur	x1, [x29, #-32]
   3a378:	mov	w3, #0x1                   	// #1
   3a37c:	mov	x0, x22
   3a380:	mov	x2, x20
   3a384:	bl	c120 <__gmpn_lshift@plt>
   3a388:	mov	w2, #0x1                   	// #1
   3a38c:	mov	w3, #0x1                   	// #1
   3a390:	mov	x0, x27
   3a394:	mov	x1, x27
   3a398:	bl	c120 <__gmpn_lshift@plt>
   3a39c:	ldr	x8, [x22]
   3a3a0:	ldur	x9, [x29, #-16]
   3a3a4:	sub	x23, x23, #0x1
   3a3a8:	orr	x8, x8, x0
   3a3ac:	str	x8, [x22]
   3a3b0:	ldur	w8, [x29, #-36]
   3a3b4:	cmp	x9, w21, uxtw
   3a3b8:	cinc	w8, w8, ne  // ne = any
   3a3bc:	stur	w8, [x29, #-36]
   3a3c0:	cmp	x9, w21, uxtw
   3a3c4:	b.eq	3a3f0 <mpfr_mpn_exp@@Base+0x230>  // b.none
   3a3c8:	b	3a418 <mpfr_mpn_exp@@Base+0x258>
   3a3cc:	ldur	x1, [x29, #-32]
   3a3d0:	cmp	x1, x22
   3a3d4:	b.eq	3a3e4 <mpfr_mpn_exp@@Base+0x224>  // b.none
   3a3d8:	ldur	x2, [x29, #-88]
   3a3dc:	mov	x0, x22
   3a3e0:	bl	be50 <memcpy@plt>
   3a3e4:	ldur	x9, [x29, #-16]
   3a3e8:	cmp	x9, w21, uxtw
   3a3ec:	b.ne	3a418 <mpfr_mpn_exp@@Base+0x258>  // b.any
   3a3f0:	lsl	x19, x19, #1
   3a3f4:	cmp	x19, x20
   3a3f8:	b.hi	3a418 <mpfr_mpn_exp@@Base+0x258>  // b.pmore
   3a3fc:	mov	x0, x28
   3a400:	mov	x1, xzr
   3a404:	bl	cf80 <__gmpn_scan1@plt>
   3a408:	ldur	x9, [x29, #-16]
   3a40c:	sub	x8, x20, x19
   3a410:	cmp	x0, x8, lsl #6
   3a414:	csel	w21, w25, w21, cc  // cc = lo, ul, last
   3a418:	ldur	x8, [x29, #-48]
   3a41c:	lsr	x8, x8, x25
   3a420:	tbz	w8, #0, 3a2f8 <mpfr_mpn_exp@@Base+0x138>
   3a424:	ldur	x3, [x29, #-64]
   3a428:	mov	x0, x27
   3a42c:	mov	x1, x22
   3a430:	mov	x2, x20
   3a434:	bl	d230 <__gmpn_mul_1@plt>
   3a438:	ldur	x8, [x29, #-24]
   3a43c:	str	x0, [x24, x8, lsl #3]
   3a440:	ldur	x8, [x29, #-72]
   3a444:	add	x23, x23, x8
   3a448:	tbnz	x0, #63, 3a494 <mpfr_mpn_exp@@Base+0x2d4>
   3a44c:	ldur	x1, [x29, #-32]
   3a450:	mov	w3, #0x1                   	// #1
   3a454:	mov	x0, x22
   3a458:	mov	x2, x20
   3a45c:	bl	c120 <__gmpn_lshift@plt>
   3a460:	mov	w2, #0x1                   	// #1
   3a464:	mov	w3, #0x1                   	// #1
   3a468:	mov	x0, x27
   3a46c:	mov	x1, x27
   3a470:	bl	c120 <__gmpn_lshift@plt>
   3a474:	ldr	x8, [x22]
   3a478:	ldur	x9, [x29, #-16]
   3a47c:	sub	x23, x23, #0x1
   3a480:	orr	x8, x8, x0
   3a484:	str	x8, [x22]
   3a488:	cmp	x9, w21, uxtw
   3a48c:	b.ne	3a2f8 <mpfr_mpn_exp@@Base+0x138>  // b.any
   3a490:	b	3a2e8 <mpfr_mpn_exp@@Base+0x128>
   3a494:	ldur	x1, [x29, #-32]
   3a498:	cmp	x1, x22
   3a49c:	b.eq	3a4ac <mpfr_mpn_exp@@Base+0x2ec>  // b.none
   3a4a0:	ldur	x2, [x29, #-88]
   3a4a4:	mov	x0, x22
   3a4a8:	bl	be50 <memcpy@plt>
   3a4ac:	ldur	x9, [x29, #-16]
   3a4b0:	ldur	w8, [x29, #-76]
   3a4b4:	cmp	x9, w21, uxtw
   3a4b8:	cinc	w8, w8, ne  // ne = any
   3a4bc:	stur	w8, [x29, #-76]
   3a4c0:	cmp	x9, w21, uxtw
   3a4c4:	b.ne	3a2f8 <mpfr_mpn_exp@@Base+0x138>  // b.any
   3a4c8:	b	3a2e8 <mpfr_mpn_exp@@Base+0x128>
   3a4cc:	mov	w8, wzr
   3a4d0:	mov	w21, w28
   3a4d4:	stur	wzr, [x29, #-36]
   3a4d8:	stur	wzr, [x29, #-76]
   3a4dc:	mov	x9, x28
   3a4e0:	ldur	x0, [x29, #-8]
   3a4e4:	cbnz	x0, 3a598 <mpfr_mpn_exp@@Base+0x3d8>
   3a4e8:	ldur	x8, [x29, #-104]
   3a4ec:	cmp	x9, w21, uxtw
   3a4f0:	str	x23, [x8]
   3a4f4:	b.ne	3a500 <mpfr_mpn_exp@@Base+0x340>  // b.any
   3a4f8:	mov	x0, #0xffffffffffffffff    	// #-1
   3a4fc:	b	3a52c <mpfr_mpn_exp@@Base+0x36c>
   3a500:	ldur	w8, [x29, #-36]
   3a504:	ldur	w9, [x29, #-76]
   3a508:	cmp	w8, #0x0
   3a50c:	cinc	w8, w8, lt  // lt = tstop
   3a510:	add	w9, w21, w9
   3a514:	add	w8, w9, w8, asr #1
   3a518:	add	w0, w8, #0x3
   3a51c:	b	3a52c <mpfr_mpn_exp@@Base+0x36c>
   3a520:	ldur	x0, [x29, #-8]
   3a524:	cbnz	x0, 3a5a4 <mpfr_mpn_exp@@Base+0x3e4>
   3a528:	mov	x0, #0xfffffffffffffffe    	// #-2
   3a52c:	mov	sp, x29
   3a530:	ldp	x20, x19, [sp, #80]
   3a534:	ldp	x22, x21, [sp, #64]
   3a538:	ldp	x24, x23, [sp, #48]
   3a53c:	ldp	x26, x25, [sp, #32]
   3a540:	ldp	x28, x27, [sp, #16]
   3a544:	ldp	x29, x30, [sp], #96
   3a548:	ret
   3a54c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   3a550:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   3a554:	add	x0, x0, #0xbcf
   3a558:	add	x2, x2, #0xbd9
   3a55c:	mov	w1, #0x36                  	// #54
   3a560:	bl	d030 <mpfr_assert_fail@plt>
   3a564:	b	3a1fc <mpfr_mpn_exp@@Base+0x3c>
   3a568:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   3a56c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   3a570:	add	x0, x0, #0xbcf
   3a574:	add	x2, x2, #0xbdf
   3a578:	mov	w1, #0x37                  	// #55
   3a57c:	bl	d030 <mpfr_assert_fail@plt>
   3a580:	b	3a208 <mpfr_mpn_exp@@Base+0x48>
   3a584:	sub	x0, x29, #0x8
   3a588:	mov	x1, x25
   3a58c:	bl	c220 <mpfr_tmp_allocate@plt>
   3a590:	mov	x24, x0
   3a594:	b	3a240 <mpfr_mpn_exp@@Base+0x80>
   3a598:	bl	c8d0 <mpfr_tmp_free@plt>
   3a59c:	ldur	x9, [x29, #-16]
   3a5a0:	b	3a4e8 <mpfr_mpn_exp@@Base+0x328>
   3a5a4:	bl	c8d0 <mpfr_tmp_free@plt>
   3a5a8:	b	3a528 <mpfr_mpn_exp@@Base+0x368>

000000000003a5ac <mpfr_assert_fail@@Base>:
   3a5ac:	stp	x29, x30, [sp, #-48]!
   3a5b0:	str	x21, [sp, #16]
   3a5b4:	stp	x20, x19, [sp, #32]
   3a5b8:	adrp	x21, 72000 <__gmpfr_l2b@@Base+0x2f0>
   3a5bc:	ldr	x21, [x21, #3968]
   3a5c0:	mov	x19, x2
   3a5c4:	mov	x29, sp
   3a5c8:	cbz	x0, 3a608 <mpfr_assert_fail@@Base+0x5c>
   3a5cc:	ldrb	w8, [x0]
   3a5d0:	mov	x2, x0
   3a5d4:	cbz	w8, 3a608 <mpfr_assert_fail@@Base+0x5c>
   3a5d8:	ldr	x0, [x21]
   3a5dc:	mov	w20, w1
   3a5e0:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   3a5e4:	add	x1, x1, #0x400
   3a5e8:	bl	d1e0 <fprintf@plt>
   3a5ec:	cmn	w20, #0x1
   3a5f0:	b.eq	3a608 <mpfr_assert_fail@@Base+0x5c>  // b.none
   3a5f4:	ldr	x0, [x21]
   3a5f8:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   3a5fc:	add	x1, x1, #0x404
   3a600:	mov	w2, w20
   3a604:	bl	d1e0 <fprintf@plt>
   3a608:	ldr	x0, [x21]
   3a60c:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   3a610:	add	x1, x1, #0x409
   3a614:	mov	x2, x19
   3a618:	bl	d1e0 <fprintf@plt>
   3a61c:	bl	c8a0 <abort@plt>

000000000003a620 <mpfr_allocate_func@@Base>:
   3a620:	sub	sp, sp, #0x30
   3a624:	stp	x29, x30, [sp, #16]
   3a628:	add	x29, sp, #0x10
   3a62c:	str	x19, [sp, #32]
   3a630:	mov	x19, x0
   3a634:	add	x0, x29, #0x18
   3a638:	add	x1, sp, #0x8
   3a63c:	mov	x2, sp
   3a640:	bl	c0b0 <__gmp_get_memory_functions@plt>
   3a644:	ldr	x8, [x29, #24]
   3a648:	mov	x0, x19
   3a64c:	blr	x8
   3a650:	ldr	x19, [sp, #32]
   3a654:	ldp	x29, x30, [sp, #16]
   3a658:	add	sp, sp, #0x30
   3a65c:	ret

000000000003a660 <mpfr_reallocate_func@@Base>:
   3a660:	sub	sp, sp, #0x40
   3a664:	stp	x29, x30, [sp, #16]
   3a668:	add	x29, sp, #0x10
   3a66c:	str	x21, [sp, #32]
   3a670:	stp	x20, x19, [sp, #48]
   3a674:	mov	x19, x2
   3a678:	mov	x20, x1
   3a67c:	mov	x21, x0
   3a680:	add	x0, x29, #0x18
   3a684:	add	x1, sp, #0x8
   3a688:	mov	x2, sp
   3a68c:	bl	c0b0 <__gmp_get_memory_functions@plt>
   3a690:	ldr	x8, [sp, #8]
   3a694:	mov	x0, x21
   3a698:	mov	x1, x20
   3a69c:	mov	x2, x19
   3a6a0:	blr	x8
   3a6a4:	ldp	x20, x19, [sp, #48]
   3a6a8:	ldr	x21, [sp, #32]
   3a6ac:	ldp	x29, x30, [sp, #16]
   3a6b0:	add	sp, sp, #0x40
   3a6b4:	ret

000000000003a6b8 <mpfr_free_func@@Base>:
   3a6b8:	sub	sp, sp, #0x40
   3a6bc:	stp	x29, x30, [sp, #32]
   3a6c0:	add	x29, sp, #0x20
   3a6c4:	stp	x20, x19, [sp, #48]
   3a6c8:	mov	x19, x1
   3a6cc:	mov	x20, x0
   3a6d0:	sub	x0, x29, #0x8
   3a6d4:	add	x1, sp, #0x10
   3a6d8:	add	x2, sp, #0x8
   3a6dc:	bl	c0b0 <__gmp_get_memory_functions@plt>
   3a6e0:	ldr	x8, [sp, #8]
   3a6e4:	mov	x0, x20
   3a6e8:	mov	x1, x19
   3a6ec:	blr	x8
   3a6f0:	ldp	x20, x19, [sp, #48]
   3a6f4:	ldp	x29, x30, [sp, #32]
   3a6f8:	add	sp, sp, #0x40
   3a6fc:	ret

000000000003a700 <mpfr_tmp_allocate@@Base>:
   3a700:	stp	x29, x30, [sp, #-48]!
   3a704:	stp	x20, x19, [sp, #32]
   3a708:	mov	x20, x0
   3a70c:	mov	w0, #0x18                  	// #24
   3a710:	str	x21, [sp, #16]
   3a714:	mov	x29, sp
   3a718:	mov	x19, x1
   3a71c:	bl	d1f0 <mpfr_allocate_func@plt>
   3a720:	mov	x21, x0
   3a724:	mov	x0, x19
   3a728:	bl	d1f0 <mpfr_allocate_func@plt>
   3a72c:	stp	x0, x19, [x21]
   3a730:	ldr	x8, [x20]
   3a734:	str	x8, [x21, #16]
   3a738:	str	x21, [x20]
   3a73c:	ldr	x0, [x21]
   3a740:	ldp	x20, x19, [sp, #32]
   3a744:	ldr	x21, [sp, #16]
   3a748:	ldp	x29, x30, [sp], #48
   3a74c:	ret

000000000003a750 <mpfr_tmp_free@@Base>:
   3a750:	stp	x29, x30, [sp, #-32]!
   3a754:	stp	x20, x19, [sp, #16]
   3a758:	mov	x29, sp
   3a75c:	cbz	x0, 3a784 <mpfr_tmp_free@@Base+0x34>
   3a760:	mov	x19, x0
   3a764:	ldp	x0, x1, [x19]
   3a768:	bl	d120 <mpfr_free_func@plt>
   3a76c:	ldr	x20, [x19, #16]
   3a770:	mov	w1, #0x18                  	// #24
   3a774:	mov	x0, x19
   3a778:	bl	d120 <mpfr_free_func@plt>
   3a77c:	mov	x19, x20
   3a780:	cbnz	x20, 3a764 <mpfr_tmp_free@@Base+0x14>
   3a784:	ldp	x20, x19, [sp, #16]
   3a788:	ldp	x29, x30, [sp], #32
   3a78c:	ret

000000000003a790 <mpfr_sum@@Base>:
   3a790:	stp	x29, x30, [sp, #-16]!
   3a794:	cmp	x2, #0x3
   3a798:	mov	x29, sp
   3a79c:	b.cc	3a8a0 <mpfr_sum@@Base+0x110>  // b.lo, b.ul, b.last
   3a7a0:	mov	x9, #0x4                   	// #4
   3a7a4:	cmp	w3, #0x3
   3a7a8:	mov	w13, #0xffffffff            	// #-1
   3a7ac:	mov	x14, #0x2                   	// #2
   3a7b0:	mov	w8, wzr
   3a7b4:	mov	w10, wzr
   3a7b8:	mov	x5, xzr
   3a7bc:	mov	x11, xzr
   3a7c0:	movk	x9, #0x8000, lsl #48
   3a7c4:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   3a7c8:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   3a7cc:	cneg	w13, w13, ne  // ne = any
   3a7d0:	movk	x14, #0x8000, lsl #48
   3a7d4:	ldr	x15, [x1, x11, lsl #3]
   3a7d8:	ldr	x16, [x15, #16]
   3a7dc:	cmp	x16, x9
   3a7e0:	b.lt	3a800 <mpfr_sum@@Base+0x70>  // b.tstop
   3a7e4:	cmp	x16, x4
   3a7e8:	csel	x4, x16, x4, gt
   3a7ec:	add	x5, x5, #0x1
   3a7f0:	add	x11, x11, #0x1
   3a7f4:	cmp	x2, x11
   3a7f8:	b.ne	3a7d4 <mpfr_sum@@Base+0x44>  // b.any
   3a7fc:	b	3a84c <mpfr_sum@@Base+0xbc>
   3a800:	cmp	x16, x12
   3a804:	b.eq	3a828 <mpfr_sum@@Base+0x98>  // b.none
   3a808:	cmp	x16, x14
   3a80c:	b.eq	3a870 <mpfr_sum@@Base+0xe0>  // b.none
   3a810:	cbnz	x5, 3a7f0 <mpfr_sum@@Base+0x60>
   3a814:	ldr	w15, [x15, #8]
   3a818:	cbz	w8, 3a844 <mpfr_sum@@Base+0xb4>
   3a81c:	cmp	w15, w8
   3a820:	csel	w8, w8, w13, eq  // eq = none
   3a824:	b	3a7f0 <mpfr_sum@@Base+0x60>
   3a828:	ldr	w15, [x15, #8]
   3a82c:	cbz	w10, 3a83c <mpfr_sum@@Base+0xac>
   3a830:	cmp	w15, w10
   3a834:	b.eq	3a7f0 <mpfr_sum@@Base+0x60>  // b.none
   3a838:	b	3a870 <mpfr_sum@@Base+0xe0>
   3a83c:	mov	w10, w15
   3a840:	b	3a7f0 <mpfr_sum@@Base+0x60>
   3a844:	mov	w8, w15
   3a848:	b	3a7f0 <mpfr_sum@@Base+0x60>
   3a84c:	cbnz	w10, 3a8c8 <mpfr_sum@@Base+0x138>
   3a850:	cbz	x5, 3a8dc <mpfr_sum@@Base+0x14c>
   3a854:	cmp	x5, #0x2
   3a858:	b.ls	3a8f0 <mpfr_sum@@Base+0x160>  // b.plast
   3a85c:	bl	3a990 <mpfr_sum@@Base+0x200>
   3a860:	mov	w1, w0
   3a864:	mov	w0, w1
   3a868:	ldp	x29, x30, [sp], #16
   3a86c:	ret
   3a870:	sub	x8, x9, #0x2
   3a874:	str	x8, [x0, #16]
   3a878:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3a87c:	ldr	x1, [x0, #2800]
   3a880:	add	x0, x0, #0xaf0
   3a884:	blr	x1
   3a888:	mrs	x8, tpidr_el0
   3a88c:	ldr	w9, [x8, x0]
   3a890:	mov	w1, wzr
   3a894:	orr	w9, w9, #0x4
   3a898:	str	w9, [x8, x0]
   3a89c:	b	3a864 <mpfr_sum@@Base+0xd4>
   3a8a0:	cbz	x2, 3a968 <mpfr_sum@@Base+0x1d8>
   3a8a4:	ldr	x8, [x1]
   3a8a8:	cmp	x2, #0x1
   3a8ac:	b.ne	3a980 <mpfr_sum@@Base+0x1f0>  // b.any
   3a8b0:	ldr	w9, [x8, #8]
   3a8b4:	mov	x1, x8
   3a8b8:	mov	w2, w3
   3a8bc:	mov	w3, w9
   3a8c0:	bl	cb70 <mpfr_set4@plt>
   3a8c4:	b	3a860 <mpfr_sum@@Base+0xd0>
   3a8c8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3a8cc:	mov	w1, wzr
   3a8d0:	str	x8, [x0, #16]
   3a8d4:	str	w10, [x0, #8]
   3a8d8:	b	3a864 <mpfr_sum@@Base+0xd4>
   3a8dc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3a8e0:	mov	w1, wzr
   3a8e4:	str	x9, [x0, #16]
   3a8e8:	str	w8, [x0, #8]
   3a8ec:	b	3a864 <mpfr_sum@@Base+0xd4>
   3a8f0:	cbz	x2, 3a948 <mpfr_sum@@Base+0x1b8>
   3a8f4:	mov	x10, xzr
   3a8f8:	mov	x11, #0xffffffffffffffff    	// #-1
   3a8fc:	b	3a914 <mpfr_sum@@Base+0x184>
   3a900:	mov	x4, x11
   3a904:	add	x10, x10, #0x1
   3a908:	cmp	x2, x10
   3a90c:	mov	x11, x4
   3a910:	b.eq	3a948 <mpfr_sum@@Base+0x1b8>  // b.none
   3a914:	ldr	x8, [x1, x10, lsl #3]
   3a918:	ldr	x12, [x8, #16]
   3a91c:	cmp	x12, x9
   3a920:	b.lt	3a900 <mpfr_sum@@Base+0x170>  // b.tstop
   3a924:	cmp	x5, #0x1
   3a928:	b.eq	3a8b0 <mpfr_sum@@Base+0x120>  // b.none
   3a92c:	cmn	x11, #0x1
   3a930:	mov	x4, x10
   3a934:	b.eq	3a904 <mpfr_sum@@Base+0x174>  // b.none
   3a938:	ldr	x1, [x1, x11, lsl #3]
   3a93c:	mov	x2, x8
   3a940:	bl	c640 <mpfr_add@plt>
   3a944:	b	3a860 <mpfr_sum@@Base+0xd0>
   3a948:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3a94c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   3a950:	add	x0, x0, #0x42e
   3a954:	add	x2, x2, #0x8ca
   3a958:	mov	w1, #0x564                 	// #1380
   3a95c:	bl	d030 <mpfr_assert_fail@plt>
   3a960:	mov	w1, wzr
   3a964:	b	3a864 <mpfr_sum@@Base+0xd4>
   3a968:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3a96c:	mov	w9, #0x1                   	// #1
   3a970:	mov	w1, wzr
   3a974:	str	x8, [x0, #16]
   3a978:	str	w9, [x0, #8]
   3a97c:	b	3a864 <mpfr_sum@@Base+0xd4>
   3a980:	ldr	x2, [x1, #8]
   3a984:	mov	x1, x8
   3a988:	bl	c640 <mpfr_add@plt>
   3a98c:	b	3a860 <mpfr_sum@@Base+0xd0>
   3a990:	stp	x29, x30, [sp, #-96]!
   3a994:	stp	x28, x27, [sp, #16]
   3a998:	stp	x26, x25, [sp, #32]
   3a99c:	stp	x24, x23, [sp, #48]
   3a9a0:	stp	x22, x21, [sp, #64]
   3a9a4:	stp	x20, x19, [sp, #80]
   3a9a8:	mov	x29, sp
   3a9ac:	sub	sp, sp, #0xa0
   3a9b0:	stur	x4, [x29, #-8]
   3a9b4:	ldr	x24, [x0, #24]
   3a9b8:	mov	x23, x4
   3a9bc:	mov	x27, x2
   3a9c0:	mov	x20, x0
   3a9c4:	subs	x19, x5, #0x1
   3a9c8:	stur	w3, [x29, #-60]
   3a9cc:	stur	x1, [x29, #-72]
   3a9d0:	b.eq	3b150 <mpfr_sum@@Base+0x9c0>  // b.none
   3a9d4:	cbz	x5, 3b1bc <mpfr_sum@@Base+0xa2c>
   3a9d8:	clz	x8, x19
   3a9dc:	mov	w9, #0x40                  	// #64
   3a9e0:	sub	w8, w9, w8
   3a9e4:	ldr	x10, [x20]
   3a9e8:	add	w9, w8, #0x1
   3a9ec:	sxtw	x8, w8
   3a9f0:	sxtw	x12, w9
   3a9f4:	stur	x8, [x29, #-56]
   3a9f8:	add	x8, x10, x8
   3a9fc:	add	x8, x8, x12
   3aa00:	stp	x10, x20, [x29, #-48]
   3aa04:	mvn	x9, x10
   3aa08:	add	x10, x8, #0x1
   3aa0c:	add	x11, x8, #0x40
   3aa10:	cmp	x10, #0x0
   3aa14:	csinc	x8, x11, x8, lt  // lt = tstop
   3aa18:	asr	x26, x8, #6
   3aa1c:	add	x28, x26, #0x1
   3aa20:	lsl	x19, x28, #6
   3aa24:	add	x8, x19, x9
   3aa28:	sub	x25, x19, x12
   3aa2c:	add	x9, x8, #0x3f
   3aa30:	cmp	x8, #0x0
   3aa34:	add	x10, x25, #0x3e
   3aa38:	add	x11, x25, #0x7d
   3aa3c:	csel	x8, x9, x8, lt  // lt = tstop
   3aa40:	cmp	x10, #0x0
   3aa44:	asr	x9, x8, #6
   3aa48:	csel	x8, x11, x10, lt  // lt = tstop
   3aa4c:	stp	x12, x9, [x29, #-120]
   3aa50:	add	x9, x9, #0x1
   3aa54:	asr	x20, x8, #6
   3aa58:	add	x22, x20, #0x1
   3aa5c:	add	x8, x9, x28
   3aa60:	add	x8, x8, x22
   3aa64:	lsl	x1, x8, #3
   3aa68:	cmp	x1, #0x4, lsl #12
   3aa6c:	stur	x9, [x29, #-88]
   3aa70:	stur	xzr, [x29, #-16]
   3aa74:	b.hi	3b158 <mpfr_sum@@Base+0x9c8>  // b.pmore
   3aa78:	add	x9, x1, #0xf
   3aa7c:	mov	x8, sp
   3aa80:	and	x9, x9, #0xfffffffffffffff0
   3aa84:	sub	x21, x8, x9
   3aa88:	mov	sp, x21
   3aa8c:	add	x22, x21, x22, lsl #3
   3aa90:	lsl	x2, x28, #3
   3aa94:	mov	x0, x22
   3aa98:	mov	w1, wzr
   3aa9c:	bl	c5b0 <memset@plt>
   3aaa0:	orr	x8, x25, #0x8000000000000000
   3aaa4:	cmp	x8, x23
   3aaa8:	b.gt	3b168 <mpfr_sum@@Base+0x9d8>
   3aaac:	sub	x5, x23, x25
   3aab0:	ldur	x25, [x29, #-48]
   3aab4:	stur	x5, [x29, #-24]
   3aab8:	add	x8, x25, #0x3
   3aabc:	sub	sp, sp, #0x30
   3aac0:	sub	x11, x29, #0x20
   3aac4:	stp	x8, x11, [sp, #8]
   3aac8:	ldur	x8, [x29, #-56]
   3aacc:	ldur	x3, [x29, #-72]
   3aad0:	sub	x9, x29, #0x8
   3aad4:	sub	x10, x29, #0x18
   3aad8:	mov	x0, x22
   3aadc:	mov	x1, x28
   3aae0:	mov	x2, x19
   3aae4:	mov	x4, x27
   3aae8:	mov	x6, x23
   3aaec:	mov	x7, x21
   3aaf0:	stp	x10, x9, [sp, #24]
   3aaf4:	str	w8, [sp]
   3aaf8:	stur	x21, [x29, #-96]
   3aafc:	bl	3b68c <mpfr_sum@@Base+0xefc>
   3ab00:	add	sp, sp, #0x30
   3ab04:	cbz	x0, 3b184 <mpfr_sum@@Base+0x9f4>
   3ab08:	ldr	x15, [x22, x26, lsl #3]
   3ab0c:	ldp	x8, x17, [x29, #-32]
   3ab10:	ldur	w14, [x29, #-60]
   3ab14:	mov	w9, #0xffffffff            	// #-1
   3ab18:	cmp	x15, #0x0
   3ab1c:	mov	x23, x0
   3ab20:	stur	x27, [x29, #-104]
   3ab24:	cneg	w18, w9, ge  // ge = tcont
   3ab28:	cmp	w14, #0x5
   3ab2c:	sub	x27, x8, x25
   3ab30:	stur	x15, [x29, #-80]
   3ab34:	b.ne	3ab78 <mpfr_sum@@Base+0x3e8>  // b.any
   3ab38:	subs	x8, x27, x17
   3ab3c:	mov	x21, x24
   3ab40:	b.le	3abc0 <mpfr_sum@@Base+0x430>
   3ab44:	add	x9, x8, #0x3f
   3ab48:	cmp	x8, #0x0
   3ab4c:	csel	x9, x9, x8, lt  // lt = tstop
   3ab50:	and	x10, x9, #0xffffffffffffffc0
   3ab54:	sub	x8, x8, x10
   3ab58:	cmp	w8, #0x1
   3ab5c:	asr	x9, x9, #6
   3ab60:	b.lt	3ace8 <mpfr_sum@@Base+0x558>  // b.tstop
   3ab64:	ldr	x9, [x22, x9, lsl #3]
   3ab68:	sub	w8, w8, #0x1
   3ab6c:	lsr	x8, x9, x8
   3ab70:	and	x28, x8, #0x1
   3ab74:	b	3acf4 <mpfr_sum@@Base+0x564>
   3ab78:	subs	x12, x27, x17
   3ab7c:	mov	x21, x24
   3ab80:	b.le	3abd0 <mpfr_sum@@Base+0x440>
   3ab84:	add	x8, x12, #0x3f
   3ab88:	cmp	x12, #0x0
   3ab8c:	csel	x10, x8, x12, lt  // lt = tstop
   3ab90:	asr	x8, x10, #6
   3ab94:	ldr	x9, [x22, x8, lsl #3]
   3ab98:	and	x10, x10, #0xffffffffffffffc0
   3ab9c:	sub	x10, x12, x10
   3aba0:	cmp	w10, #0x1
   3aba4:	lsr	x11, x9, x10
   3aba8:	and	x0, x11, #0x1
   3abac:	b.lt	3ad00 <mpfr_sum@@Base+0x570>  // b.tstop
   3abb0:	sub	w11, w10, #0x1
   3abb4:	lsr	x11, x9, x11
   3abb8:	and	x16, x11, #0x1
   3abbc:	b	3ad0c <mpfr_sum@@Base+0x57c>
   3abc0:	ldp	x20, x0, [x29, #-48]
   3abc4:	mov	w28, wzr
   3abc8:	mov	w24, wzr
   3abcc:	b	3b280 <mpfr_sum@@Base+0xaf0>
   3abd0:	b.ne	3abe0 <mpfr_sum@@Base+0x450>  // b.any
   3abd4:	ldr	x8, [x22]
   3abd8:	and	x0, x8, #0x1
   3abdc:	b	3abe4 <mpfr_sum@@Base+0x454>
   3abe0:	mov	x0, xzr
   3abe4:	ldur	x8, [x29, #-8]
   3abe8:	ldur	x20, [x29, #-48]
   3abec:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3abf0:	mov	x16, xzr
   3abf4:	cmp	x8, x9
   3abf8:	cset	w26, ne  // ne = any
   3abfc:	mov	w19, w26
   3ac00:	cbz	w26, 3ac5c <mpfr_sum@@Base+0x4cc>
   3ac04:	ldur	x19, [x29, #-8]
   3ac08:	ldur	x8, [x29, #-56]
   3ac0c:	stp	x23, x16, [x29, #-152]
   3ac10:	ldur	x23, [x29, #-88]
   3ac14:	add	x28, x22, x28, lsl #3
   3ac18:	add	x8, x19, x8
   3ac1c:	subs	x8, x8, x17
   3ac20:	lsl	x10, x23, #6
   3ac24:	stur	x27, [x29, #-128]
   3ac28:	stur	w18, [x29, #-132]
   3ac2c:	stur	x0, [x29, #-160]
   3ac30:	stur	x10, [x29, #-48]
   3ac34:	b.ge	3aca0 <mpfr_sum@@Base+0x510>  // b.tcont
   3ac38:	ldur	x8, [x29, #-120]
   3ac3c:	sub	x24, x10, x8
   3ac40:	orr	x8, x24, #0x8000000000000000
   3ac44:	cmp	x19, x8
   3ac48:	b.lt	3b1d8 <mpfr_sum@@Base+0xa48>  // b.tstop
   3ac4c:	mov	x27, x17
   3ac50:	sub	x25, x19, x24
   3ac54:	mov	x24, x23
   3ac58:	b	3ae20 <mpfr_sum@@Base+0x690>
   3ac5c:	cmp	w14, #0x4
   3ac60:	b.hi	3b22c <mpfr_sum@@Base+0xa9c>  // b.pmore
   3ac64:	adrp	x9, 60000 <mpfr_bases@@Base+0x408>
   3ac68:	mov	w8, w14
   3ac6c:	add	x9, x9, #0x424
   3ac70:	adr	x10, 3ac88 <mpfr_sum@@Base+0x4f8>
   3ac74:	ldrh	w11, [x9, x8, lsl #1]
   3ac78:	add	x10, x10, x11, lsl #2
   3ac7c:	ldur	x0, [x29, #-40]
   3ac80:	mov	w8, wzr
   3ac84:	br	x10
   3ac88:	cmp	x15, #0x0
   3ac8c:	cset	w8, lt  // lt = tstop
   3ac90:	cmp	w19, #0x0
   3ac94:	cset	w9, ne  // ne = any
   3ac98:	and	w8, w8, w9
   3ac9c:	b	3b264 <mpfr_sum@@Base+0xad4>
   3aca0:	add	x9, x8, #0x2
   3aca4:	add	x8, x8, #0x41
   3aca8:	cmp	x9, #0x0
   3acac:	csel	x8, x8, x9, lt  // lt = tstop
   3acb0:	asr	x8, x8, #6
   3acb4:	subs	w9, w9, w8, lsl #6
   3acb8:	b.eq	3add0 <mpfr_sum@@Base+0x640>  // b.none
   3acbc:	add	x2, x8, #0x1
   3acc0:	mov	w8, #0x40                  	// #64
   3acc4:	sub	w25, w8, w9
   3acc8:	sub	x24, x23, x2
   3accc:	add	x0, x28, x24, lsl #3
   3acd0:	mov	x1, x22
   3acd4:	mov	w3, w25
   3acd8:	mov	x27, x17
   3acdc:	bl	c120 <__gmpn_lshift@plt>
   3ace0:	mov	x17, x27
   3ace4:	b	3ae00 <mpfr_sum@@Base+0x670>
   3ace8:	add	x8, x22, x9, lsl #3
   3acec:	ldur	x8, [x8, #-8]
   3acf0:	lsr	x28, x8, #63
   3acf4:	ldp	x20, x0, [x29, #-48]
   3acf8:	mov	w24, wzr
   3acfc:	b	3b280 <mpfr_sum@@Base+0xaf0>
   3ad00:	add	x11, x22, x8, lsl #3
   3ad04:	ldur	x11, [x11, #-8]
   3ad08:	lsr	x16, x11, #63
   3ad0c:	ldur	x11, [x29, #-8]
   3ad10:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3ad14:	cmp	x11, x13
   3ad18:	b.ne	3ad5c <mpfr_sum@@Base+0x5cc>  // b.any
   3ad1c:	cbz	x16, 3ad30 <mpfr_sum@@Base+0x5a0>
   3ad20:	mov	w26, wzr
   3ad24:	mov	w19, #0x1                   	// #1
   3ad28:	cbnz	w14, 3b224 <mpfr_sum@@Base+0xa94>
   3ad2c:	cbnz	x0, 3b224 <mpfr_sum@@Base+0xa94>
   3ad30:	cmp	w10, #0x2
   3ad34:	b.lt	3ad8c <mpfr_sum@@Base+0x5fc>  // b.tstop
   3ad38:	sub	w10, w10, #0x1
   3ad3c:	mov	x11, #0xffffffffffffffff    	// #-1
   3ad40:	lsl	x10, x11, x10
   3ad44:	bics	xzr, x9, x10
   3ad48:	cset	w19, ne  // ne = any
   3ad4c:	tbz	w19, #0, 3ad98 <mpfr_sum@@Base+0x608>
   3ad50:	ldur	x20, [x29, #-48]
   3ad54:	mov	w26, wzr
   3ad58:	b	3ac00 <mpfr_sum@@Base+0x470>
   3ad5c:	ldur	x13, [x29, #-56]
   3ad60:	cmp	w10, #0x1
   3ad64:	sub	x13, x27, x13
   3ad68:	sub	x11, x13, x11
   3ad6c:	b.eq	3afa0 <mpfr_sum@@Base+0x810>  // b.none
   3ad70:	ldur	x20, [x29, #-48]
   3ad74:	cbnz	w10, 3afb8 <mpfr_sum@@Base+0x828>
   3ad78:	sub	x8, x8, #0x1
   3ad7c:	ldr	x9, [x22, x8, lsl #3]
   3ad80:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
   3ad84:	mov	w10, #0x40                  	// #64
   3ad88:	b	3b074 <mpfr_sum@@Base+0x8e4>
   3ad8c:	cbz	w10, 3b028 <mpfr_sum@@Base+0x898>
   3ad90:	mov	w19, wzr
   3ad94:	tbnz	w19, #0, 3ad50 <mpfr_sum@@Base+0x5c0>
   3ad98:	cmp	x8, #0x1
   3ad9c:	b.lt	3b040 <mpfr_sum@@Base+0x8b0>  // b.tstop
   3ada0:	ldur	x9, [x29, #-96]
   3ada4:	add	x10, x9, x20, lsl #3
   3ada8:	ldr	x11, [x10, x8, lsl #3]
   3adac:	cmp	x11, #0x0
   3adb0:	cset	w9, eq  // eq = none
   3adb4:	cmp	x8, #0x2
   3adb8:	b.lt	3adc4 <mpfr_sum@@Base+0x634>  // b.tstop
   3adbc:	sub	x8, x8, #0x1
   3adc0:	tbnz	w9, #0, 3ada8 <mpfr_sum@@Base+0x618>
   3adc4:	cmp	x11, #0x0
   3adc8:	cset	w8, ne  // ne = any
   3adcc:	b	3b048 <mpfr_sum@@Base+0x8b8>
   3add0:	sub	x24, x23, x8
   3add4:	cmp	x24, #0x1
   3add8:	b.lt	3adfc <mpfr_sum@@Base+0x66c>  // b.tstop
   3addc:	add	x0, x28, x24, lsl #3
   3ade0:	cmp	x0, x22
   3ade4:	b.eq	3adfc <mpfr_sum@@Base+0x66c>  // b.none
   3ade8:	lsl	x2, x8, #3
   3adec:	mov	x1, x22
   3adf0:	mov	x25, x17
   3adf4:	bl	be50 <memcpy@plt>
   3adf8:	mov	x17, x25
   3adfc:	mov	w25, wzr
   3ae00:	lsl	x8, x24, #6
   3ae04:	add	x25, x8, w25, sxtw
   3ae08:	orr	x8, x25, #0x8000000000000000
   3ae0c:	cmp	x17, x8
   3ae10:	b.lt	3b200 <mpfr_sum@@Base+0xa70>  // b.tstop
   3ae14:	ldur	x23, [x29, #-88]
   3ae18:	mov	x27, x17
   3ae1c:	sub	x25, x17, x25
   3ae20:	lsl	x2, x24, #3
   3ae24:	mov	x0, x28
   3ae28:	mov	w1, wzr
   3ae2c:	bl	c5b0 <memset@plt>
   3ae30:	sub	sp, sp, #0x30
   3ae34:	ldur	x8, [x29, #-56]
   3ae38:	ldur	x2, [x29, #-48]
   3ae3c:	ldur	x3, [x29, #-72]
   3ae40:	ldp	x4, x7, [x29, #-104]
   3ae44:	mov	w24, #0x1                   	// #1
   3ae48:	mov	x0, x28
   3ae4c:	mov	x1, x23
   3ae50:	mov	x5, x25
   3ae54:	mov	x6, x19
   3ae58:	stp	xzr, xzr, [sp, #24]
   3ae5c:	stp	x24, xzr, [sp, #8]
   3ae60:	str	w8, [sp]
   3ae64:	bl	3b68c <mpfr_sum@@Base+0xefc>
   3ae68:	add	sp, sp, #0x30
   3ae6c:	cbz	x0, 3ae9c <mpfr_sum@@Base+0x70c>
   3ae70:	ldur	x8, [x29, #-112]
   3ae74:	ldur	w12, [x29, #-60]
   3ae78:	ldur	x0, [x29, #-40]
   3ae7c:	ldur	x13, [x29, #-80]
   3ae80:	ldr	x8, [x28, x8, lsl #3]
   3ae84:	ldp	x23, x28, [x29, #-152]
   3ae88:	ldur	w18, [x29, #-132]
   3ae8c:	mov	x17, x27
   3ae90:	cmp	x8, #0x0
   3ae94:	cneg	w8, w24, lt  // lt = tstop
   3ae98:	b	3aed4 <mpfr_sum@@Base+0x744>
   3ae9c:	ldur	x13, [x29, #-80]
   3aea0:	ldp	x23, x28, [x29, #-152]
   3aea4:	cmp	w26, #0x1
   3aea8:	b.ne	3aeb4 <mpfr_sum@@Base+0x724>  // b.any
   3aeac:	mov	w8, wzr
   3aeb0:	b	3aec4 <mpfr_sum@@Base+0x734>
   3aeb4:	ldur	x8, [x29, #-160]
   3aeb8:	cmp	x8, #0x0
   3aebc:	mov	w8, #0xffffffff            	// #-1
   3aec0:	cneg	w8, w8, ne  // ne = any
   3aec4:	ldur	w12, [x29, #-60]
   3aec8:	ldur	x0, [x29, #-40]
   3aecc:	ldur	w18, [x29, #-132]
   3aed0:	mov	x17, x27
   3aed4:	ldur	x27, [x29, #-128]
   3aed8:	cmp	w12, #0x3
   3aedc:	b.eq	3af00 <mpfr_sum@@Base+0x770>  // b.none
   3aee0:	lsr	x9, x13, #63
   3aee4:	cmp	w12, #0x1
   3aee8:	eor	w9, w9, #0x1
   3aeec:	b.ne	3aef4 <mpfr_sum@@Base+0x764>  // b.any
   3aef0:	tbnz	w9, #0, 3af00 <mpfr_sum@@Base+0x770>
   3aef4:	cmp	w12, #0x4
   3aef8:	b.ne	3afcc <mpfr_sum@@Base+0x83c>  // b.any
   3aefc:	tbz	x13, #63, 3afcc <mpfr_sum@@Base+0x83c>
   3af00:	cmp	w8, #0x0
   3af04:	csetm	w24, ne  // ne = any
   3af08:	cmp	w26, #0x2
   3af0c:	b.ne	3af2c <mpfr_sum@@Base+0x79c>  // b.any
   3af10:	cmp	x28, #0x0
   3af14:	mov	w9, #0x1                   	// #1
   3af18:	cneg	w10, w9, ne  // ne = any
   3af1c:	cmp	w8, w10
   3af20:	b.ne	3af2c <mpfr_sum@@Base+0x79c>  // b.any
   3af24:	sub	w28, w9, w28
   3af28:	b	3b280 <mpfr_sum@@Base+0xaf0>
   3af2c:	cmp	w12, #0x3
   3af30:	b.eq	3af54 <mpfr_sum@@Base+0x7c4>  // b.none
   3af34:	cmp	w12, #0x1
   3af38:	cset	w9, eq  // eq = none
   3af3c:	cmp	w12, #0x4
   3af40:	cset	w10, eq  // eq = none
   3af44:	cmp	x13, #0x0
   3af48:	csel	w9, w10, w9, lt  // lt = tstop
   3af4c:	cmp	w9, #0x1
   3af50:	b.ne	3af64 <mpfr_sum@@Base+0x7d4>  // b.any
   3af54:	cmn	w8, #0x1
   3af58:	b.ne	3af64 <mpfr_sum@@Base+0x7d4>  // b.any
   3af5c:	sub	w28, w28, #0x1
   3af60:	b	3b280 <mpfr_sum@@Base+0xaf0>
   3af64:	cmp	x13, #0x0
   3af68:	cset	w9, lt  // lt = tstop
   3af6c:	cmp	w12, #0x1
   3af70:	cset	w10, eq  // eq = none
   3af74:	cmp	w12, #0x2
   3af78:	b.eq	3af90 <mpfr_sum@@Base+0x800>  // b.none
   3af7c:	and	w9, w10, w9
   3af80:	tbnz	w9, #0, 3af90 <mpfr_sum@@Base+0x800>
   3af84:	cmp	w12, #0x4
   3af88:	b.ne	3b280 <mpfr_sum@@Base+0xaf0>  // b.any
   3af8c:	tbnz	x13, #63, 3b280 <mpfr_sum@@Base+0xaf0>
   3af90:	cmp	w8, #0x1
   3af94:	b.ne	3b280 <mpfr_sum@@Base+0xaf0>  // b.any
   3af98:	add	w28, w28, #0x1
   3af9c:	b	3b280 <mpfr_sum@@Base+0xaf0>
   3afa0:	ldur	x20, [x29, #-48]
   3afa4:	cmp	x12, #0x40
   3afa8:	b.lt	3b068 <mpfr_sum@@Base+0x8d8>  // b.tstop
   3afac:	sub	x8, x8, #0x1
   3afb0:	ldr	x9, [x22, x8, lsl #3]
   3afb4:	b	3b06c <mpfr_sum@@Base+0x8dc>
   3afb8:	sub	w12, w10, #0x1
   3afbc:	mov	x13, #0xffffffffffffffff    	// #-1
   3afc0:	lsl	x12, x13, x12
   3afc4:	mvn	x12, x12
   3afc8:	b	3b074 <mpfr_sum@@Base+0x8e4>
   3afcc:	cmp	w12, #0x4
   3afd0:	cset	w11, eq  // eq = none
   3afd4:	cmp	w12, #0x1
   3afd8:	cset	w10, eq  // eq = none
   3afdc:	cmp	x13, #0x0
   3afe0:	and	w11, w11, w9
   3afe4:	cset	w9, lt  // lt = tstop
   3afe8:	tbnz	w11, #0, 3b0c8 <mpfr_sum@@Base+0x938>
   3afec:	cmp	w12, #0x2
   3aff0:	b.eq	3b0c8 <mpfr_sum@@Base+0x938>  // b.none
   3aff4:	and	w9, w10, w9
   3aff8:	cbnz	w9, 3b0c8 <mpfr_sum@@Base+0x938>
   3affc:	cmp	w26, #0x1
   3b000:	cneg	w24, w8, eq  // eq = none
   3b004:	b	3af08 <mpfr_sum@@Base+0x778>
   3b008:	mov	w8, w19
   3b00c:	b	3b264 <mpfr_sum@@Base+0xad4>
   3b010:	cmp	x15, #0x0
   3b014:	cset	w8, ge  // ge = tcont
   3b018:	cmp	w19, #0x0
   3b01c:	cset	w9, ne  // ne = any
   3b020:	and	w8, w9, w8
   3b024:	b	3b264 <mpfr_sum@@Base+0xad4>
   3b028:	sub	x8, x8, #0x1
   3b02c:	ldr	x9, [x22, x8, lsl #3]
   3b030:	tst	x9, #0x7fffffffffffffff
   3b034:	cset	w19, ne  // ne = any
   3b038:	tbz	w19, #0, 3ad98 <mpfr_sum@@Base+0x608>
   3b03c:	b	3ad50 <mpfr_sum@@Base+0x5c0>
   3b040:	mov	w8, wzr
   3b044:	mov	w9, #0x1                   	// #1
   3b048:	ldur	x20, [x29, #-48]
   3b04c:	cmp	x16, #0x0
   3b050:	cset	w10, ne  // ne = any
   3b054:	tst	w10, w9
   3b058:	mov	w26, wzr
   3b05c:	csel	x16, xzr, x16, ne  // ne = any
   3b060:	csinc	w19, w8, wzr, eq  // eq = none
   3b064:	b	3ac00 <mpfr_sum@@Base+0x470>
   3b068:	mov	x9, xzr
   3b06c:	mov	x12, #0xffffffffffffffff    	// #-1
   3b070:	mov	w10, #0x41                  	// #65
   3b074:	sub	x13, x11, x10
   3b078:	subs	x10, x10, x11
   3b07c:	csel	x10, x10, xzr, gt
   3b080:	lsr	x11, x12, x10
   3b084:	lsr	x10, x9, x10
   3b088:	csel	x9, xzr, x13, gt
   3b08c:	ands	x10, x10, x11
   3b090:	b.eq	3b0a8 <mpfr_sum@@Base+0x918>  // b.none
   3b094:	cmp	x10, x11
   3b098:	b.ne	3b0c0 <mpfr_sum@@Base+0x930>  // b.any
   3b09c:	cbz	x16, 3b0dc <mpfr_sum@@Base+0x94c>
   3b0a0:	mov	w26, #0x1                   	// #1
   3b0a4:	b	3b0e8 <mpfr_sum@@Base+0x958>
   3b0a8:	mov	x10, xzr
   3b0ac:	cbz	x16, 3b0d4 <mpfr_sum@@Base+0x944>
   3b0b0:	cmp	w14, #0x0
   3b0b4:	cset	w11, eq  // eq = none
   3b0b8:	lsl	w26, w11, #1
   3b0bc:	b	3b0ec <mpfr_sum@@Base+0x95c>
   3b0c0:	mov	w26, wzr
   3b0c4:	b	3b0ec <mpfr_sum@@Base+0x95c>
   3b0c8:	cmp	w8, #0x0
   3b0cc:	cset	w24, ne  // ne = any
   3b0d0:	b	3af08 <mpfr_sum@@Base+0x778>
   3b0d4:	mov	w26, #0x1                   	// #1
   3b0d8:	b	3b0ec <mpfr_sum@@Base+0x95c>
   3b0dc:	cmp	w14, #0x0
   3b0e0:	cset	w10, eq  // eq = none
   3b0e4:	lsl	w26, w10, #1
   3b0e8:	mov	x10, #0xffffffffffffffff    	// #-1
   3b0ec:	mov	w19, #0x1                   	// #1
   3b0f0:	b	3b104 <mpfr_sum@@Base+0x974>
   3b0f4:	cmp	x10, #0x0
   3b0f8:	mov	w11, wzr
   3b0fc:	csel	w26, w26, wzr, eq  // eq = none
   3b100:	tbz	w11, #0, 3b148 <mpfr_sum@@Base+0x9b8>
   3b104:	cbz	x9, 3ac00 <mpfr_sum@@Base+0x470>
   3b108:	cbz	w26, 3ac00 <mpfr_sum@@Base+0x470>
   3b10c:	cbz	x8, 3b0f4 <mpfr_sum@@Base+0x964>
   3b110:	sub	x8, x8, #0x1
   3b114:	ldr	x12, [x22, x8, lsl #3]
   3b118:	cmp	x9, #0x3f
   3b11c:	b.gt	3b134 <mpfr_sum@@Base+0x9a4>
   3b120:	neg	w13, w9
   3b124:	lsr	x12, x12, x13
   3b128:	lsr	x13, x10, x13
   3b12c:	cmp	x12, x13
   3b130:	b	3b0f8 <mpfr_sum@@Base+0x968>
   3b134:	cmp	x12, x10
   3b138:	sub	x9, x9, #0x40
   3b13c:	csel	w26, w26, wzr, eq  // eq = none
   3b140:	mov	w11, #0x1                   	// #1
   3b144:	tbnz	w11, #0, 3b104 <mpfr_sum@@Base+0x974>
   3b148:	mov	w19, #0x1                   	// #1
   3b14c:	b	3ac00 <mpfr_sum@@Base+0x470>
   3b150:	mov	w8, wzr
   3b154:	b	3a9e4 <mpfr_sum@@Base+0x254>
   3b158:	sub	x0, x29, #0x10
   3b15c:	bl	c220 <mpfr_tmp_allocate@plt>
   3b160:	mov	x21, x0
   3b164:	b	3aa8c <mpfr_sum@@Base+0x2fc>
   3b168:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3b16c:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3b170:	add	x0, x0, #0x42e
   3b174:	add	x2, x2, #0x43d
   3b178:	mov	w1, #0x278                 	// #632
   3b17c:	bl	d030 <mpfr_assert_fail@plt>
   3b180:	b	3aaac <mpfr_sum@@Base+0x31c>
   3b184:	ldur	w8, [x29, #-60]
   3b188:	ldur	x19, [x29, #-40]
   3b18c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3b190:	cmp	w8, #0x3
   3b194:	mov	w8, #0xffffffff            	// #-1
   3b198:	cneg	w8, w8, ne  // ne = any
   3b19c:	str	w8, [x19, #8]
   3b1a0:	str	x9, [x19, #16]
   3b1a4:	ldur	x0, [x29, #-16]
   3b1a8:	cbnz	x0, 3b654 <mpfr_sum@@Base+0xec4>
   3b1ac:	mov	w8, wzr
   3b1b0:	cbnz	w8, 3b4d0 <mpfr_sum@@Base+0xd40>
   3b1b4:	mov	w24, wzr
   3b1b8:	b	3b538 <mpfr_sum@@Base+0xda8>
   3b1bc:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3b1c0:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3b1c4:	add	x0, x0, #0x42e
   3b1c8:	add	x2, x2, #0x434
   3b1cc:	mov	w1, #0x22f                 	// #559
   3b1d0:	bl	d030 <mpfr_assert_fail@plt>
   3b1d4:	b	3a9d8 <mpfr_sum@@Base+0x248>
   3b1d8:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3b1dc:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3b1e0:	add	x0, x0, #0x42e
   3b1e4:	add	x2, x2, #0x43d
   3b1e8:	mov	w1, #0x3ec                 	// #1004
   3b1ec:	mov	x27, x17
   3b1f0:	bl	d030 <mpfr_assert_fail@plt>
   3b1f4:	ldur	x23, [x29, #-88]
   3b1f8:	mov	x17, x27
   3b1fc:	b	3ac4c <mpfr_sum@@Base+0x4bc>
   3b200:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3b204:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3b208:	add	x0, x0, #0x42e
   3b20c:	add	x2, x2, #0x47d
   3b210:	mov	w1, #0x3de                 	// #990
   3b214:	mov	x27, x17
   3b218:	bl	d030 <mpfr_assert_fail@plt>
   3b21c:	mov	x17, x27
   3b220:	b	3ae14 <mpfr_sum@@Base+0x684>
   3b224:	ldur	x20, [x29, #-48]
   3b228:	b	3ac00 <mpfr_sum@@Base+0x470>
   3b22c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3b230:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3b234:	add	x0, x0, #0x42e
   3b238:	add	x2, x2, #0x46c
   3b23c:	mov	w1, #0x390                 	// #912
   3b240:	mov	w26, w18
   3b244:	mov	x24, x16
   3b248:	mov	x25, x17
   3b24c:	bl	d030 <mpfr_assert_fail@plt>
   3b250:	ldur	x0, [x29, #-40]
   3b254:	mov	w18, w26
   3b258:	mov	x17, x25
   3b25c:	mov	x16, x24
   3b260:	mov	w8, w16
   3b264:	cmp	w19, #0x0
   3b268:	cset	w9, ne  // ne = any
   3b26c:	cmp	w8, #0x0
   3b270:	cset	w10, eq  // eq = none
   3b274:	tst	w9, w10
   3b278:	csel	w28, wzr, w8, ne  // ne = any
   3b27c:	csinv	w24, w19, wzr, eq  // eq = none
   3b280:	sub	x8, x20, #0x1
   3b284:	add	x9, x20, #0x3e
   3b288:	cmp	x8, #0x0
   3b28c:	add	x10, x23, #0x3f
   3b290:	csel	x8, x9, x8, lt  // lt = tstop
   3b294:	cmp	x23, #0x0
   3b298:	asr	x25, x8, #6
   3b29c:	csel	x8, x10, x23, lt  // lt = tstop
   3b2a0:	and	x9, x8, #0xffffffffffffffc0
   3b2a4:	add	x26, x25, #0x1
   3b2a8:	subs	x8, x27, x17
   3b2ac:	sub	x19, x23, x9
   3b2b0:	str	w18, [x0, #8]
   3b2b4:	b.le	3b574 <mpfr_sum@@Base+0xde4>
   3b2b8:	add	x9, x8, #0x3f
   3b2bc:	cmp	x8, #0x0
   3b2c0:	csel	x8, x9, x8, lt  // lt = tstop
   3b2c4:	asr	x23, x8, #6
   3b2c8:	cbz	w19, 3b5f4 <mpfr_sum@@Base+0xe64>
   3b2cc:	ldur	x8, [x29, #-32]
   3b2d0:	mov	x0, x21
   3b2d4:	mov	x2, x26
   3b2d8:	mov	w3, w19
   3b2dc:	sub	x8, x8, x17
   3b2e0:	add	x9, x8, #0x3f
   3b2e4:	cmp	x8, #0x0
   3b2e8:	csel	x8, x9, x8, lt  // lt = tstop
   3b2ec:	asr	x8, x8, #6
   3b2f0:	sub	x27, x8, x25
   3b2f4:	add	x1, x22, x27, lsl #3
   3b2f8:	bl	c120 <__gmpn_lshift@plt>
   3b2fc:	cmp	x27, x23
   3b300:	b.eq	3b31c <mpfr_sum@@Base+0xb8c>  // b.none
   3b304:	ldr	x8, [x22, x23, lsl #3]
   3b308:	ldr	x9, [x21]
   3b30c:	neg	w10, w19
   3b310:	lsr	x8, x8, x10
   3b314:	orr	x8, x9, x8
   3b318:	str	x8, [x21]
   3b31c:	cmp	x20, #0x1
   3b320:	b.eq	3b5cc <mpfr_sum@@Base+0xe3c>  // b.none
   3b324:	ldur	x9, [x29, #-80]
   3b328:	lsl	x8, x26, #6
   3b32c:	sub	x8, x8, x20
   3b330:	tbnz	x9, #63, 3b378 <mpfr_sum@@Base+0xbe8>
   3b334:	ldr	x9, [x21]
   3b338:	mov	w10, #0x1                   	// #1
   3b33c:	lsl	x19, x10, x8
   3b340:	neg	x10, x19
   3b344:	and	x9, x9, x10
   3b348:	cmp	w28, #0x1
   3b34c:	str	x9, [x21]
   3b350:	b.lt	3b44c <mpfr_sum@@Base+0xcbc>  // b.tstop
   3b354:	and	x8, x8, #0xffffffff
   3b358:	sxtw	x9, w28
   3b35c:	mov	x20, x28
   3b360:	lsl	x3, x9, x8
   3b364:	cbz	x3, 3b430 <mpfr_sum@@Base+0xca0>
   3b368:	mov	x0, x21
   3b36c:	mov	x1, x21
   3b370:	mov	x2, x26
   3b374:	b	3b440 <mpfr_sum@@Base+0xcb0>
   3b378:	cmp	w28, #0x1
   3b37c:	b.gt	3b3f4 <mpfr_sum@@Base+0xc64>
   3b380:	mov	w9, #0x1                   	// #1
   3b384:	ldr	x10, [x21]
   3b388:	sub	w9, w9, w28
   3b38c:	mov	x11, #0xffffffffffffffff    	// #-1
   3b390:	sxtw	x9, w9
   3b394:	lsl	x9, x9, x8
   3b398:	lsl	x8, x11, x8
   3b39c:	bic	x8, x8, x10
   3b3a0:	adds	x8, x8, x9
   3b3a4:	str	x8, [x21]
   3b3a8:	b.cs	3b3b4 <mpfr_sum@@Base+0xc24>  // b.hs, b.nlast
   3b3ac:	tbz	w28, #31, 3b55c <mpfr_sum@@Base+0xdcc>
   3b3b0:	cbnz	x9, 3b55c <mpfr_sum@@Base+0xdcc>
   3b3b4:	add	x8, x20, #0x3e
   3b3b8:	cmp	x8, #0x7f
   3b3bc:	b.cc	3b3d4 <mpfr_sum@@Base+0xc44>  // b.lo, b.ul, b.last
   3b3c0:	add	x0, x21, #0x8
   3b3c4:	mov	x1, x0
   3b3c8:	mov	x2, x25
   3b3cc:	bl	cc50 <__gmpn_neg@plt>
   3b3d0:	cbnz	x0, 3b4c0 <mpfr_sum@@Base+0xd30>
   3b3d4:	lsl	x8, x25, #3
   3b3d8:	ldr	x9, [x21, x8]
   3b3dc:	orr	x9, x9, #0x8000000000000000
   3b3e0:	str	x9, [x21, x8]
   3b3e4:	ldur	x8, [x29, #-32]
   3b3e8:	add	x8, x8, #0x1
   3b3ec:	stur	x8, [x29, #-32]
   3b3f0:	b	3b4c0 <mpfr_sum@@Base+0xd30>
   3b3f4:	ldr	x10, [x21]
   3b3f8:	mov	w9, #0x1                   	// #1
   3b3fc:	lsl	x8, x9, x8
   3b400:	sub	x11, x8, #0x1
   3b404:	orr	x10, x10, x11
   3b408:	mvn	x11, x10
   3b40c:	sub	x8, x11, x8
   3b410:	cmn	x10, #0x1
   3b414:	str	x8, [x21]
   3b418:	b.eq	3b480 <mpfr_sum@@Base+0xcf0>  // b.none
   3b41c:	cmp	x25, x9
   3b420:	b.ge	3b4b0 <mpfr_sum@@Base+0xd20>  // b.tcont
   3b424:	ldr	x8, [x21, x25, lsl #3]
   3b428:	tbnz	x8, #63, 3b4c0 <mpfr_sum@@Base+0xd30>
   3b42c:	b	3b46c <mpfr_sum@@Base+0xcdc>
   3b430:	add	x0, x21, #0x8
   3b434:	mov	w3, #0x1                   	// #1
   3b438:	mov	x1, x0
   3b43c:	mov	x2, x25
   3b440:	bl	bf60 <__gmpn_add_1@plt>
   3b444:	mov	x28, x20
   3b448:	cbnz	x0, 3b630 <mpfr_sum@@Base+0xea0>
   3b44c:	tbz	w28, #31, 3b4c0 <mpfr_sum@@Base+0xd30>
   3b450:	mov	x0, x21
   3b454:	mov	x1, x21
   3b458:	mov	x2, x26
   3b45c:	mov	x3, x19
   3b460:	bl	c8f0 <__gmpn_sub_1@plt>
   3b464:	ldr	x8, [x21, x25, lsl #3]
   3b468:	tbnz	x8, #63, 3b4c0 <mpfr_sum@@Base+0xd30>
   3b46c:	orr	x8, x8, #0x8000000000000000
   3b470:	str	x8, [x21, x25, lsl #3]
   3b474:	ldur	x8, [x29, #-32]
   3b478:	sub	x8, x8, #0x1
   3b47c:	b	3b3ec <mpfr_sum@@Base+0xc5c>
   3b480:	mov	x8, xzr
   3b484:	add	x9, x21, x8, lsl #3
   3b488:	ldr	x9, [x9, #8]
   3b48c:	add	x8, x8, #0x1
   3b490:	cmn	x9, #0x1
   3b494:	b.eq	3b484 <mpfr_sum@@Base+0xcf4>  // b.none
   3b498:	mov	x10, #0xfffffffffffffffe    	// #-2
   3b49c:	sub	x9, x10, x9
   3b4a0:	str	x9, [x21, x8, lsl #3]
   3b4a4:	add	x9, x8, #0x1
   3b4a8:	cmp	x25, x9
   3b4ac:	b.lt	3b424 <mpfr_sum@@Base+0xc94>  // b.tstop
   3b4b0:	add	x0, x21, x9, lsl #3
   3b4b4:	sub	x2, x26, x9
   3b4b8:	mov	x1, x0
   3b4bc:	bl	c270 <__gmpn_com@plt>
   3b4c0:	ldp	x19, x8, [x29, #-40]
   3b4c4:	str	x8, [x19, #16]
   3b4c8:	mov	w8, #0x1                   	// #1
   3b4cc:	cbz	w8, 3b1b4 <mpfr_sum@@Base+0xa24>
   3b4d0:	ldur	x0, [x29, #-16]
   3b4d4:	cbnz	x0, 3b610 <mpfr_sum@@Base+0xe80>
   3b4d8:	ldr	x9, [x19, #16]
   3b4dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3b4e0:	ldr	x1, [x0, #2736]
   3b4e4:	add	x0, x0, #0xab0
   3b4e8:	blr	x1
   3b4ec:	mrs	x8, tpidr_el0
   3b4f0:	ldr	x10, [x8, x0]
   3b4f4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3b4f8:	ldr	x1, [x0, #2768]
   3b4fc:	add	x0, x0, #0xad0
   3b500:	blr	x1
   3b504:	cmp	x9, x10
   3b508:	b.lt	3b618 <mpfr_sum@@Base+0xe88>  // b.tstop
   3b50c:	ldr	x10, [x8, x0]
   3b510:	cmp	x9, x10
   3b514:	b.gt	3b618 <mpfr_sum@@Base+0xe88>
   3b518:	cbz	w24, 3b538 <mpfr_sum@@Base+0xda8>
   3b51c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3b520:	ldr	x1, [x0, #2800]
   3b524:	add	x0, x0, #0xaf0
   3b528:	blr	x1
   3b52c:	ldr	w9, [x8, x0]
   3b530:	orr	w9, w9, #0x8
   3b534:	str	w9, [x8, x0]
   3b538:	mov	w0, w24
   3b53c:	mov	sp, x29
   3b540:	ldp	x20, x19, [sp, #80]
   3b544:	ldp	x22, x21, [sp, #64]
   3b548:	ldp	x24, x23, [sp, #48]
   3b54c:	ldp	x26, x25, [sp, #32]
   3b550:	ldp	x28, x27, [sp, #16]
   3b554:	ldp	x29, x30, [sp], #96
   3b558:	ret
   3b55c:	cmp	x20, #0x41
   3b560:	b.lt	3b4c0 <mpfr_sum@@Base+0xd30>  // b.tstop
   3b564:	add	x0, x21, #0x8
   3b568:	mov	x1, x0
   3b56c:	mov	x2, x25
   3b570:	b	3b4bc <mpfr_sum@@Base+0xd2c>
   3b574:	ldur	x8, [x29, #-32]
   3b578:	sub	x8, x8, x17
   3b57c:	add	x9, x8, #0x3f
   3b580:	add	x10, x8, #0x7e
   3b584:	cmp	x9, #0x0
   3b588:	csel	x9, x10, x9, lt  // lt = tstop
   3b58c:	asr	x23, x9, #6
   3b590:	cbz	w19, 3b664 <mpfr_sum@@Base+0xed4>
   3b594:	add	x8, x21, x26, lsl #3
   3b598:	sub	x0, x8, x23, lsl #3
   3b59c:	mov	x1, x22
   3b5a0:	mov	x2, x23
   3b5a4:	mov	w3, w19
   3b5a8:	bl	c120 <__gmpn_lshift@plt>
   3b5ac:	cmp	x25, x23
   3b5b0:	b.lt	3b31c <mpfr_sum@@Base+0xb8c>  // b.tstop
   3b5b4:	sub	x8, x26, x23
   3b5b8:	lsl	x2, x8, #3
   3b5bc:	mov	x0, x21
   3b5c0:	mov	w1, wzr
   3b5c4:	bl	c5b0 <memset@plt>
   3b5c8:	b	3b31c <mpfr_sum@@Base+0xb8c>
   3b5cc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3b5d0:	ldur	x10, [x29, #-80]
   3b5d4:	str	x8, [x21]
   3b5d8:	ldur	x9, [x29, #-32]
   3b5dc:	mov	w8, #0x1                   	// #1
   3b5e0:	sub	w8, w8, w28
   3b5e4:	cmp	x10, #0x0
   3b5e8:	csel	w8, w8, w28, lt  // lt = tstop
   3b5ec:	add	x8, x9, w8, sxtw
   3b5f0:	b	3b3ec <mpfr_sum@@Base+0xc5c>
   3b5f4:	add	x1, x22, x23, lsl #3
   3b5f8:	cmp	x21, x1
   3b5fc:	b.eq	3b31c <mpfr_sum@@Base+0xb8c>  // b.none
   3b600:	lsl	x2, x26, #3
   3b604:	mov	x0, x21
   3b608:	bl	be50 <memcpy@plt>
   3b60c:	b	3b31c <mpfr_sum@@Base+0xb8c>
   3b610:	bl	c8d0 <mpfr_tmp_free@plt>
   3b614:	b	3b4d8 <mpfr_sum@@Base+0xd48>
   3b618:	ldur	w2, [x29, #-60]
   3b61c:	mov	x0, x19
   3b620:	mov	w1, w24
   3b624:	bl	d020 <mpfr_check_range@plt>
   3b628:	mov	w24, w0
   3b62c:	b	3b538 <mpfr_sum@@Base+0xda8>
   3b630:	lsl	x8, x25, #3
   3b634:	ldr	x9, [x21, x8]
   3b638:	orr	x9, x9, #0x8000000000000000
   3b63c:	str	x9, [x21, x8]
   3b640:	ldur	x8, [x29, #-32]
   3b644:	add	x8, x8, #0x1
   3b648:	stur	x8, [x29, #-32]
   3b64c:	tbz	w28, #31, 3b4c0 <mpfr_sum@@Base+0xd30>
   3b650:	b	3b450 <mpfr_sum@@Base+0xcc0>
   3b654:	bl	c8d0 <mpfr_tmp_free@plt>
   3b658:	mov	w8, wzr
   3b65c:	cbnz	w8, 3b4d0 <mpfr_sum@@Base+0xd40>
   3b660:	b	3b1b4 <mpfr_sum@@Base+0xa24>
   3b664:	cmp	x8, #0x1
   3b668:	b.lt	3b5ac <mpfr_sum@@Base+0xe1c>  // b.tstop
   3b66c:	add	x8, x21, x26, lsl #3
   3b670:	sub	x0, x8, x23, lsl #3
   3b674:	cmp	x0, x22
   3b678:	b.eq	3b5ac <mpfr_sum@@Base+0xe1c>  // b.none
   3b67c:	lsl	x2, x23, #3
   3b680:	mov	x1, x22
   3b684:	bl	be50 <memcpy@plt>
   3b688:	b	3b5ac <mpfr_sum@@Base+0xe1c>
   3b68c:	sub	sp, sp, #0x100
   3b690:	stp	x29, x30, [sp, #160]
   3b694:	add	x29, sp, #0xa0
   3b698:	ldr	x9, [x29, #128]
   3b69c:	ldrsw	x8, [x29, #96]
   3b6a0:	stp	x24, x23, [sp, #208]
   3b6a4:	stp	x22, x21, [sp, #224]
   3b6a8:	str	x9, [sp, #24]
   3b6ac:	ldr	x9, [x29, #120]
   3b6b0:	stp	x8, x2, [sp, #48]
   3b6b4:	add	w8, w8, #0x1
   3b6b8:	cmp	x1, #0x0
   3b6bc:	str	x9, [sp, #16]
   3b6c0:	ldp	x9, x23, [x29, #104]
   3b6c4:	mov	x21, #0x4                   	// #4
   3b6c8:	sub	x8, x2, w8, sxtw
   3b6cc:	stp	x28, x27, [sp, #176]
   3b6d0:	str	x9, [sp, #8]
   3b6d4:	lsl	x9, x1, #6
   3b6d8:	stp	x26, x25, [sp, #192]
   3b6dc:	stp	x20, x19, [sp, #240]
   3b6e0:	mov	x27, x7
   3b6e4:	mov	x19, x6
   3b6e8:	mov	x20, x5
   3b6ec:	mov	x22, x4
   3b6f0:	mov	x26, x1
   3b6f4:	mov	x25, x0
   3b6f8:	sub	x24, x1, #0x1
   3b6fc:	str	x9, [sp]
   3b700:	sub	x28, x0, #0x10
   3b704:	movk	x21, #0x8000, lsl #48
   3b708:	cset	w9, gt
   3b70c:	str	x8, [sp, #40]
   3b710:	orr	x8, x8, #0x8000000000000000
   3b714:	str	x3, [sp, #80]
   3b718:	stur	w9, [x29, #-68]
   3b71c:	str	x8, [sp, #32]
   3b720:	stp	x1, x7, [x29, #-40]
   3b724:	stp	x23, x4, [x29, #-56]
   3b728:	stur	x25, [x29, #-24]
   3b72c:	stur	x24, [x29, #-64]
   3b730:	str	x28, [sp, #72]
   3b734:	b	3b750 <mpfr_sum@@Base+0xfc0>
   3b738:	str	xzr, [sp, #64]
   3b73c:	mov	w8, #0x1                   	// #1
   3b740:	ldur	x9, [x29, #-8]
   3b744:	cmp	w8, #0x0
   3b748:	csel	x19, x9, x19, eq  // eq = none
   3b74c:	cbnz	w8, 3bc10 <mpfr_sum@@Base+0x1480>
   3b750:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3b754:	stur	x20, [x29, #-16]
   3b758:	cbz	x22, 3ba24 <mpfr_sum@@Base+0x1294>
   3b75c:	ldr	x28, [sp, #80]
   3b760:	mov	x24, x22
   3b764:	stur	x8, [x29, #-8]
   3b768:	b	3b784 <mpfr_sum@@Base+0xff4>
   3b76c:	ldur	x25, [x29, #-24]
   3b770:	mov	x21, #0x4                   	// #4
   3b774:	movk	x21, #0x8000, lsl #48
   3b778:	subs	x24, x24, #0x1
   3b77c:	add	x28, x28, #0x8
   3b780:	b.eq	3ba28 <mpfr_sum@@Base+0x1298>  // b.none
   3b784:	ldr	x8, [x28]
   3b788:	ldr	x9, [x8, #16]
   3b78c:	cmp	x9, x21
   3b790:	b.lt	3b778 <mpfr_sum@@Base+0xfe8>  // b.tstop
   3b794:	ldr	x10, [x8]
   3b798:	ldr	x22, [x8, #24]
   3b79c:	sub	x8, x10, #0x1
   3b7a0:	add	x11, x10, #0x3e
   3b7a4:	cmp	x8, #0x0
   3b7a8:	csel	x8, x11, x8, lt  // lt = tstop
   3b7ac:	asr	x8, x8, #6
   3b7b0:	add	x23, x8, #0x1
   3b7b4:	sub	x8, x9, x23, lsl #6
   3b7b8:	subs	x8, x8, x20
   3b7bc:	b.mi	3b808 <mpfr_sum@@Base+0x1078>  // b.first
   3b7c0:	add	x10, x8, #0x3f
   3b7c4:	cmp	x8, #0x0
   3b7c8:	csel	x10, x10, x8, lt  // lt = tstop
   3b7cc:	asr	x10, x10, #6
   3b7d0:	sub	x21, x26, x10
   3b7d4:	cmp	x21, #0x1
   3b7d8:	b.lt	3b770 <mpfr_sum@@Base+0xfe0>  // b.tstop
   3b7dc:	subs	x9, x9, x19
   3b7e0:	b.le	3b8c4 <mpfr_sum@@Base+0x1134>
   3b7e4:	add	x11, x9, #0x3f
   3b7e8:	cmp	x9, #0x0
   3b7ec:	csel	x11, x11, x9, lt  // lt = tstop
   3b7f0:	asr	x11, x11, #6
   3b7f4:	sub	x23, x23, x11
   3b7f8:	cmp	x23, #0x1
   3b7fc:	b.lt	3b770 <mpfr_sum@@Base+0xfe0>  // b.tstop
   3b800:	sub	w20, w9, w11, lsl #6
   3b804:	b	3b8c8 <mpfr_sum@@Base+0x1138>
   3b808:	cmp	x9, x20
   3b80c:	b.le	3b914 <mpfr_sum@@Base+0x1184>
   3b810:	sub	x10, x9, x10
   3b814:	cmp	x10, x20
   3b818:	ldur	x10, [x29, #-8]
   3b81c:	add	x11, x8, #0x3f
   3b820:	csel	x10, x20, x10, lt  // lt = tstop
   3b824:	cmp	x8, #0x0
   3b828:	stur	x10, [x29, #-8]
   3b82c:	csel	x10, x11, x8, lt  // lt = tstop
   3b830:	asr	x11, x10, #6
   3b834:	and	x10, x10, #0xffffffffffffffc0
   3b838:	subs	x9, x9, x19
   3b83c:	add	x23, x23, x11
   3b840:	sub	x22, x22, x11, lsl #3
   3b844:	sub	x21, x8, x10
   3b848:	b.le	3ba08 <mpfr_sum@@Base+0x1278>
   3b84c:	add	x8, x9, #0x3f
   3b850:	cmp	x9, #0x0
   3b854:	csel	x8, x8, x9, lt  // lt = tstop
   3b858:	asr	x8, x8, #6
   3b85c:	sub	x23, x23, x8
   3b860:	sub	w20, w9, w8, lsl #6
   3b864:	cbz	x21, 3ba10 <mpfr_sum@@Base+0x1280>
   3b868:	neg	w3, w21
   3b86c:	mov	x0, x27
   3b870:	mov	x1, x22
   3b874:	mov	x2, x23
   3b878:	bl	c140 <__gmpn_rshift@plt>
   3b87c:	sub	w8, w20, w21
   3b880:	cmp	w8, #0x3f
   3b884:	sub	w9, w8, #0x40
   3b888:	cset	w10, gt
   3b88c:	csel	w8, w9, w8, gt
   3b890:	sub	x23, x23, x10
   3b894:	mov	w20, wzr
   3b898:	cbz	w8, 3b8b8 <mpfr_sum@@Base+0x1128>
   3b89c:	add	x9, x27, x23, lsl #3
   3b8a0:	ldur	x10, [x9, #-8]
   3b8a4:	neg	w8, w8
   3b8a8:	mov	x11, #0xffffffffffffffff    	// #-1
   3b8ac:	lsl	x8, x11, x8
   3b8b0:	bic	x8, x10, x8
   3b8b4:	stur	x8, [x9, #-8]
   3b8b8:	mov	x21, x26
   3b8bc:	mov	x22, x27
   3b8c0:	b	3b930 <mpfr_sum@@Base+0x11a0>
   3b8c4:	mov	w20, wzr
   3b8c8:	sub	x27, x8, x10, lsl #6
   3b8cc:	add	x25, x25, x10, lsl #3
   3b8d0:	cbz	x27, 3b928 <mpfr_sum@@Base+0x1198>
   3b8d4:	mov	x26, x19
   3b8d8:	ldur	x19, [x29, #-32]
   3b8dc:	mov	x1, x22
   3b8e0:	mov	x2, x23
   3b8e4:	mov	w3, w27
   3b8e8:	mov	x0, x19
   3b8ec:	bl	c120 <__gmpn_lshift@plt>
   3b8f0:	subs	w20, w20, w27
   3b8f4:	b.pl	3b904 <mpfr_sum@@Base+0x1174>  // b.nfrst
   3b8f8:	str	x0, [x19, x23, lsl #3]
   3b8fc:	add	x23, x23, #0x1
   3b900:	add	w20, w20, #0x40
   3b904:	mov	x22, x19
   3b908:	mov	x27, x19
   3b90c:	mov	x19, x26
   3b910:	b	3b92c <mpfr_sum@@Base+0x119c>
   3b914:	ldur	x8, [x29, #-8]
   3b918:	cmp	x9, x8
   3b91c:	csel	x8, x9, x8, gt
   3b920:	stur	x8, [x29, #-8]
   3b924:	b	3b778 <mpfr_sum@@Base+0xfe8>
   3b928:	ldur	x27, [x29, #-32]
   3b92c:	ldur	x26, [x29, #-40]
   3b930:	ldr	x8, [x28]
   3b934:	cmp	w20, #0x0
   3b938:	cset	w9, ne  // ne = any
   3b93c:	sub	x23, x23, x9
   3b940:	ldr	w8, [x8, #8]
   3b944:	cmp	w8, #0x1
   3b948:	b.lt	3b9a4 <mpfr_sum@@Base+0x1214>  // b.tstop
   3b94c:	cmp	x23, #0x1
   3b950:	b.lt	3b9fc <mpfr_sum@@Base+0x126c>  // b.tstop
   3b954:	mov	x0, x25
   3b958:	mov	x1, x25
   3b95c:	mov	x2, x22
   3b960:	mov	x3, x23
   3b964:	bl	ca70 <__gmpn_add_n@plt>
   3b968:	mov	x3, x0
   3b96c:	cbz	w20, 3b988 <mpfr_sum@@Base+0x11f8>
   3b970:	ldr	x8, [x22, x23, lsl #3]
   3b974:	neg	w9, w20
   3b978:	mov	x10, #0xffffffffffffffff    	// #-1
   3b97c:	lsl	x9, x10, x9
   3b980:	bic	x8, x8, x9
   3b984:	add	x3, x8, x3
   3b988:	ldur	x20, [x29, #-16]
   3b98c:	subs	x2, x21, x23
   3b990:	b.le	3b76c <mpfr_sum@@Base+0xfdc>
   3b994:	add	x0, x25, x23, lsl #3
   3b998:	mov	x1, x0
   3b99c:	bl	bf60 <__gmpn_add_1@plt>
   3b9a0:	b	3b76c <mpfr_sum@@Base+0xfdc>
   3b9a4:	cmp	x23, #0x1
   3b9a8:	b.lt	3ba18 <mpfr_sum@@Base+0x1288>  // b.tstop
   3b9ac:	mov	x0, x25
   3b9b0:	mov	x1, x25
   3b9b4:	mov	x2, x22
   3b9b8:	mov	x3, x23
   3b9bc:	bl	c2c0 <__gmpn_sub_n@plt>
   3b9c0:	mov	x3, x0
   3b9c4:	cbz	w20, 3b9e0 <mpfr_sum@@Base+0x1250>
   3b9c8:	ldr	x8, [x22, x23, lsl #3]
   3b9cc:	neg	w9, w20
   3b9d0:	mov	x10, #0xffffffffffffffff    	// #-1
   3b9d4:	lsl	x9, x10, x9
   3b9d8:	bic	x8, x8, x9
   3b9dc:	add	x3, x8, x3
   3b9e0:	ldur	x20, [x29, #-16]
   3b9e4:	subs	x2, x21, x23
   3b9e8:	b.le	3b76c <mpfr_sum@@Base+0xfdc>
   3b9ec:	add	x0, x25, x23, lsl #3
   3b9f0:	mov	x1, x0
   3b9f4:	bl	c8f0 <__gmpn_sub_1@plt>
   3b9f8:	b	3b76c <mpfr_sum@@Base+0xfdc>
   3b9fc:	mov	x3, xzr
   3ba00:	cbnz	w20, 3b970 <mpfr_sum@@Base+0x11e0>
   3ba04:	b	3b988 <mpfr_sum@@Base+0x11f8>
   3ba08:	mov	w20, wzr
   3ba0c:	cbnz	x21, 3b868 <mpfr_sum@@Base+0x10d8>
   3ba10:	mov	x21, x26
   3ba14:	b	3b930 <mpfr_sum@@Base+0x11a0>
   3ba18:	mov	x3, xzr
   3ba1c:	cbnz	w20, 3b9c8 <mpfr_sum@@Base+0x1238>
   3ba20:	b	3b9e0 <mpfr_sum@@Base+0x1250>
   3ba24:	stur	x8, [x29, #-8]
   3ba28:	ldur	x24, [x29, #-64]
   3ba2c:	cmp	x26, #0x1
   3ba30:	ldr	x8, [x25, x24, lsl #3]
   3ba34:	b.lt	3ba80 <mpfr_sum@@Base+0x12f0>  // b.tstop
   3ba38:	ldr	x12, [x25, x24, lsl #3]
   3ba3c:	ldr	x28, [sp, #72]
   3ba40:	asr	x9, x8, #63
   3ba44:	mov	x11, xzr
   3ba48:	cmp	x12, x9
   3ba4c:	b.ne	3ba94 <mpfr_sum@@Base+0x1304>  // b.any
   3ba50:	ldp	x23, x22, [x29, #-56]
   3ba54:	mov	x13, x26
   3ba58:	sub	x14, x13, #0x1
   3ba5c:	cmp	x14, #0x0
   3ba60:	cset	w10, gt
   3ba64:	b.le	3bab0 <mpfr_sum@@Base+0x1320>
   3ba68:	ldr	x12, [x28, x13, lsl #3]
   3ba6c:	add	x11, x11, #0x40
   3ba70:	mov	x13, x14
   3ba74:	cmp	x12, x9
   3ba78:	b.eq	3ba58 <mpfr_sum@@Base+0x12c8>  // b.none
   3ba7c:	b	3ba9c <mpfr_sum@@Base+0x130c>
   3ba80:	ldur	w10, [x29, #-68]
   3ba84:	ldp	x23, x22, [x29, #-56]
   3ba88:	mov	x9, xzr
   3ba8c:	tbz	x8, #63, 3bab8 <mpfr_sum@@Base+0x1328>
   3ba90:	b	3bae8 <mpfr_sum@@Base+0x1358>
   3ba94:	ldur	w10, [x29, #-68]
   3ba98:	ldp	x23, x22, [x29, #-56]
   3ba9c:	eor	x9, x12, x9
   3baa0:	clz	x9, x9
   3baa4:	add	x9, x9, x11
   3baa8:	tbz	x8, #63, 3bab8 <mpfr_sum@@Base+0x1328>
   3baac:	b	3bae8 <mpfr_sum@@Base+0x1358>
   3bab0:	ldr	x9, [sp]
   3bab4:	tbnz	x8, #63, 3bae8 <mpfr_sum@@Base+0x1358>
   3bab8:	cbnz	w10, 3bae8 <mpfr_sum@@Base+0x1358>
   3babc:	ldur	x9, [x29, #-8]
   3bac0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3bac4:	cmp	x9, x8
   3bac8:	b.eq	3b738 <mpfr_sum@@Base+0xfa8>  // b.none
   3bacc:	ldr	x8, [sp, #32]
   3bad0:	mov	x20, x9
   3bad4:	cmp	x9, x8
   3bad8:	b.lt	3bbd0 <mpfr_sum@@Base+0x1440>  // b.tstop
   3badc:	ldr	x8, [sp, #40]
   3bae0:	sub	x20, x20, x8
   3bae4:	b	3bbc8 <mpfr_sum@@Base+0x1438>
   3bae8:	ldr	x8, [sp, #56]
   3baec:	ldur	x11, [x29, #-8]
   3baf0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3baf4:	add	x8, x20, x8
   3baf8:	cmp	x11, x10
   3bafc:	sub	x8, x8, x9
   3bb00:	b.eq	3bb24 <mpfr_sum@@Base+0x1394>  // b.none
   3bb04:	ldr	x10, [sp, #48]
   3bb08:	ldur	x11, [x29, #-8]
   3bb0c:	add	x10, x11, x10
   3bb10:	subs	x11, x8, x10
   3bb14:	b.lt	3bb50 <mpfr_sum@@Base+0x13c0>  // b.tstop
   3bb18:	ldr	x12, [sp, #8]
   3bb1c:	cmp	x11, x12
   3bb20:	b.cc	3bb50 <mpfr_sum@@Base+0x13c0>  // b.lo, b.ul, b.last
   3bb24:	cbz	x23, 3bb40 <mpfr_sum@@Base+0x13b0>
   3bb28:	str	x8, [x23]
   3bb2c:	ldr	x8, [sp, #16]
   3bb30:	ldur	x10, [x29, #-8]
   3bb34:	str	x20, [x8]
   3bb38:	ldr	x8, [sp, #24]
   3bb3c:	str	x10, [x8]
   3bb40:	mov	w8, #0x1                   	// #1
   3bb44:	str	x9, [sp, #64]
   3bb48:	cbnz	w8, 3b740 <mpfr_sum@@Base+0xfb0>
   3bb4c:	b	3bbc8 <mpfr_sum@@Base+0x1438>
   3bb50:	sub	x8, x10, x8
   3bb54:	cmp	x8, #0x0
   3bb58:	csneg	x8, xzr, x8, le
   3bb5c:	add	x8, x9, x8
   3bb60:	mov	x21, x19
   3bb64:	sub	x19, x8, #0x2
   3bb68:	add	x8, x8, #0x3d
   3bb6c:	cmp	x19, #0x0
   3bb70:	csel	x8, x8, x19, lt  // lt = tstop
   3bb74:	asr	x20, x8, #6
   3bb78:	sub	w3, w19, w20, lsl #6
   3bb7c:	add	x0, x25, x20, lsl #3
   3bb80:	sub	x2, x26, x20
   3bb84:	mov	x1, x25
   3bb88:	cbz	w3, 3bbec <mpfr_sum@@Base+0x145c>
   3bb8c:	bl	c120 <__gmpn_lshift@plt>
   3bb90:	lsl	x2, x20, #3
   3bb94:	mov	x0, x25
   3bb98:	mov	w1, wzr
   3bb9c:	bl	c5b0 <memset@plt>
   3bba0:	ldur	x20, [x29, #-16]
   3bba4:	orr	x8, x19, #0x8000000000000000
   3bba8:	cmp	x20, x8
   3bbac:	b.lt	3bbf4 <mpfr_sum@@Base+0x1464>  // b.tstop
   3bbb0:	sub	x20, x20, x19
   3bbb4:	mov	x19, x21
   3bbb8:	mov	x21, #0x4                   	// #4
   3bbbc:	mov	w8, wzr
   3bbc0:	movk	x21, #0x8000, lsl #48
   3bbc4:	cbnz	wzr, 3b740 <mpfr_sum@@Base+0xfb0>
   3bbc8:	mov	w8, wzr
   3bbcc:	b	3b740 <mpfr_sum@@Base+0xfb0>
   3bbd0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3bbd4:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3bbd8:	mov	w1, #0x200                 	// #512
   3bbdc:	add	x0, x0, #0x42e
   3bbe0:	add	x2, x2, #0x4ac
   3bbe4:	bl	d030 <mpfr_assert_fail@plt>
   3bbe8:	b	3badc <mpfr_sum@@Base+0x134c>
   3bbec:	bl	bf30 <__gmpn_copyd@plt>
   3bbf0:	b	3bb90 <mpfr_sum@@Base+0x1400>
   3bbf4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3bbf8:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3bbfc:	mov	w1, #0x1f3                 	// #499
   3bc00:	add	x0, x0, #0x42e
   3bc04:	add	x2, x2, #0x47d
   3bc08:	bl	d030 <mpfr_assert_fail@plt>
   3bc0c:	b	3bbb0 <mpfr_sum@@Base+0x1420>
   3bc10:	ldr	x0, [sp, #64]
   3bc14:	ldp	x20, x19, [sp, #240]
   3bc18:	ldp	x22, x21, [sp, #224]
   3bc1c:	ldp	x24, x23, [sp, #208]
   3bc20:	ldp	x26, x25, [sp, #192]
   3bc24:	ldp	x28, x27, [sp, #176]
   3bc28:	ldp	x29, x30, [sp, #160]
   3bc2c:	add	sp, sp, #0x100
   3bc30:	ret

000000000003bc34 <mpfr_add1sp@@Base>:
   3bc34:	stp	x29, x30, [sp, #-96]!
   3bc38:	stp	x28, x27, [sp, #16]
   3bc3c:	stp	x26, x25, [sp, #32]
   3bc40:	stp	x24, x23, [sp, #48]
   3bc44:	stp	x22, x21, [sp, #64]
   3bc48:	stp	x20, x19, [sp, #80]
   3bc4c:	mov	x29, sp
   3bc50:	sub	sp, sp, #0x40
   3bc54:	stur	xzr, [x29, #-8]
   3bc58:	ldr	w8, [x1, #8]
   3bc5c:	mov	w20, w3
   3bc60:	mov	x19, x0
   3bc64:	str	w8, [x0, #8]
   3bc68:	ldr	x23, [x1]
   3bc6c:	cmp	x23, #0x3f
   3bc70:	b.gt	3bc8c <mpfr_add1sp@@Base+0x58>
   3bc74:	mov	x0, x19
   3bc78:	mov	w3, w20
   3bc7c:	mov	x4, x23
   3bc80:	bl	3c2d0 <mpfr_add1sp@@Base+0x69c>
   3bc84:	mov	w8, w0
   3bc88:	b	3bfac <mpfr_add1sp@@Base+0x378>
   3bc8c:	cmp	x23, #0x40
   3bc90:	b.eq	3bcb4 <mpfr_add1sp@@Base+0x80>  // b.none
   3bc94:	cmp	x23, #0x7f
   3bc98:	b.gt	3bcb4 <mpfr_add1sp@@Base+0x80>
   3bc9c:	mov	x0, x19
   3bca0:	mov	w3, w20
   3bca4:	mov	x4, x23
   3bca8:	bl	3c524 <mpfr_add1sp@@Base+0x8f0>
   3bcac:	mov	w8, w0
   3bcb0:	b	3bfac <mpfr_add1sp@@Base+0x378>
   3bcb4:	cmp	x23, #0x40
   3bcb8:	b.ne	3bcd0 <mpfr_add1sp@@Base+0x9c>  // b.any
   3bcbc:	mov	x0, x19
   3bcc0:	mov	w3, w20
   3bcc4:	bl	3c7fc <mpfr_add1sp@@Base+0xbc8>
   3bcc8:	mov	w8, w0
   3bccc:	b	3bfac <mpfr_add1sp@@Base+0x378>
   3bcd0:	sub	x8, x23, #0x81
   3bcd4:	cmp	x8, #0x3e
   3bcd8:	b.hi	3bcf4 <mpfr_add1sp@@Base+0xc0>  // b.pmore
   3bcdc:	mov	x0, x19
   3bce0:	mov	w3, w20
   3bce4:	mov	x4, x23
   3bce8:	bl	3c9fc <mpfr_add1sp@@Base+0xdc8>
   3bcec:	mov	w8, w0
   3bcf0:	b	3bfac <mpfr_add1sp@@Base+0x378>
   3bcf4:	ldr	x9, [x1, #16]
   3bcf8:	ldr	x10, [x2, #16]
   3bcfc:	ldr	w8, [x1, #8]
   3bd00:	sub	x11, x23, #0x1
   3bd04:	add	x12, x23, #0x3e
   3bd08:	cmp	x9, x10
   3bd0c:	csel	x28, x1, x2, lt  // lt = tstop
   3bd10:	csel	x24, x10, x9, lt  // lt = tstop
   3bd14:	ldr	x9, [x28, #16]
   3bd18:	csel	x13, x2, x1, lt  // lt = tstop
   3bd1c:	cmp	x11, #0x0
   3bd20:	lsr	w14, w8, #31
   3bd24:	csel	x8, x12, x11, lt  // lt = tstop
   3bd28:	asr	x25, x8, #6
   3bd2c:	neg	w8, w23
   3bd30:	add	x26, x25, #0x1
   3bd34:	subs	x21, x24, x9
   3bd38:	and	w27, w8, #0x3f
   3bd3c:	stur	w14, [x29, #-28]
   3bd40:	b.eq	3bdb0 <mpfr_add1sp@@Base+0x17c>  // b.none
   3bd44:	subs	x8, x23, x21
   3bd48:	b.ls	3bff8 <mpfr_add1sp@@Base+0x3c4>  // b.plast
   3bd4c:	lsl	x1, x26, #3
   3bd50:	stp	x13, x25, [x29, #-24]
   3bd54:	mov	x25, x26
   3bd58:	cmp	x1, #0x4, lsl #12
   3bd5c:	stur	x8, [x29, #-40]
   3bd60:	b.hi	3c068 <mpfr_add1sp@@Base+0x434>  // b.pmore
   3bd64:	add	x9, x1, #0xf
   3bd68:	mov	x8, sp
   3bd6c:	and	x9, x9, #0xfffffffffffffff0
   3bd70:	sub	x22, x8, x9
   3bd74:	mov	sp, x22
   3bd78:	ands	x3, x21, #0x3f
   3bd7c:	lsr	x26, x21, #6
   3bd80:	b.eq	3c024 <mpfr_add1sp@@Base+0x3f0>  // b.none
   3bd84:	ldr	x1, [x28, #24]
   3bd88:	cbnz	x26, 3c104 <mpfr_add1sp@@Base+0x4d0>
   3bd8c:	mov	x0, x22
   3bd90:	mov	x2, x25
   3bd94:	mov	x26, x25
   3bd98:	bl	c140 <__gmpn_rshift@plt>
   3bd9c:	cmp	w20, #0x5
   3bda0:	b.ne	3be30 <mpfr_add1sp@@Base+0x1fc>  // b.any
   3bda4:	stur	xzr, [x29, #-40]
   3bda8:	mov	w25, wzr
   3bdac:	b	3beec <mpfr_add1sp@@Base+0x2b8>
   3bdb0:	ldr	x23, [x19, #24]
   3bdb4:	ldr	x1, [x13, #24]
   3bdb8:	ldr	x2, [x28, #24]
   3bdbc:	mov	x3, x26
   3bdc0:	mov	x0, x23
   3bdc4:	add	x24, x24, #0x1
   3bdc8:	bl	ca70 <__gmpn_add_n@plt>
   3bdcc:	ldr	x21, [x23]
   3bdd0:	mov	w3, #0x1                   	// #1
   3bdd4:	mov	x0, x23
   3bdd8:	mov	x1, x23
   3bddc:	mov	x2, x26
   3bde0:	mov	w22, #0x1                   	// #1
   3bde4:	bl	c140 <__gmpn_rshift@plt>
   3bde8:	lsl	x8, x25, #3
   3bdec:	ldr	x9, [x23, x8]
   3bdf0:	cmp	w20, #0x5
   3bdf4:	orr	x9, x9, #0x8000000000000000
   3bdf8:	str	x9, [x23, x8]
   3bdfc:	ldr	x8, [x23]
   3be00:	lsl	x9, x22, x27
   3be04:	neg	x10, x9
   3be08:	and	x10, x8, x10
   3be0c:	str	x10, [x23]
   3be10:	b.eq	3be80 <mpfr_add1sp@@Base+0x24c>  // b.none
   3be14:	tst	x21, x9
   3be18:	b.eq	3be80 <mpfr_add1sp@@Base+0x24c>  // b.none
   3be1c:	cbnz	w20, 3c170 <mpfr_add1sp@@Base+0x53c>
   3be20:	tst	x8, x9
   3be24:	b.ne	3bf3c <mpfr_add1sp@@Base+0x308>  // b.any
   3be28:	mov	w22, #0xffffffff            	// #-1
   3be2c:	b	3bf58 <mpfr_add1sp@@Base+0x324>
   3be30:	cbz	w27, 3be88 <mpfr_add1sp@@Base+0x254>
   3be34:	ldr	x8, [x22]
   3be38:	sub	w9, w27, #0x1
   3be3c:	mov	w25, #0x1                   	// #1
   3be40:	lsl	x9, x25, x9
   3be44:	sub	x10, x9, #0x1
   3be48:	tst	x8, x10
   3be4c:	and	x8, x8, x9
   3be50:	stur	x8, [x29, #-40]
   3be54:	b.ne	3beec <mpfr_add1sp@@Base+0x2b8>  // b.any
   3be58:	ldur	x13, [x29, #-16]
   3be5c:	add	x10, x23, x27
   3be60:	mvn	x11, x21
   3be64:	add	x12, x11, x10
   3be68:	mov	x9, x27
   3be6c:	cmp	x12, x23
   3be70:	b.le	3c1f0 <mpfr_add1sp@@Base+0x5bc>
   3be74:	mov	w25, wzr
   3be78:	mov	x27, x9
   3be7c:	b	3beec <mpfr_add1sp@@Base+0x2b8>
   3be80:	mov	w22, wzr
   3be84:	b	3bf58 <mpfr_add1sp@@Base+0x324>
   3be88:	ldur	x12, [x29, #-40]
   3be8c:	ldur	x10, [x29, #-16]
   3be90:	ldr	x9, [x28, #24]
   3be94:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3be98:	add	x8, x12, #0x3f
   3be9c:	cmp	x12, #0x0
   3bea0:	csel	x8, x8, x12, lt  // lt = tstop
   3bea4:	sub	x8, x10, x8, asr #6
   3bea8:	ldr	x10, [x9, x8, lsl #3]
   3beac:	lsr	x11, x11, x12
   3beb0:	sub	x12, x11, #0x1
   3beb4:	tst	x10, x12
   3beb8:	and	x10, x10, x11
   3bebc:	stur	x10, [x29, #-40]
   3bec0:	b.eq	3becc <mpfr_add1sp@@Base+0x298>  // b.none
   3bec4:	mov	w25, #0x1                   	// #1
   3bec8:	b	3beec <mpfr_add1sp@@Base+0x2b8>
   3becc:	sub	x9, x9, #0x8
   3bed0:	cmp	x8, #0x0
   3bed4:	cset	w25, gt
   3bed8:	subs	x10, x8, #0x1
   3bedc:	b.lt	3beec <mpfr_add1sp@@Base+0x2b8>  // b.tstop
   3bee0:	ldr	x11, [x9, x8, lsl #3]
   3bee4:	mov	x8, x10
   3bee8:	cbz	x11, 3bed0 <mpfr_add1sp@@Base+0x29c>
   3beec:	ldr	x8, [x22]
   3bef0:	mov	w9, #0x1                   	// #1
   3bef4:	lsl	x21, x9, x27
   3bef8:	neg	x28, x21
   3befc:	and	x8, x8, x28
   3bf00:	str	x8, [x22]
   3bf04:	ldur	x8, [x29, #-24]
   3bf08:	ldr	x23, [x19, #24]
   3bf0c:	mov	x2, x22
   3bf10:	mov	x3, x26
   3bf14:	ldr	x1, [x8, #24]
   3bf18:	mov	x0, x23
   3bf1c:	bl	ca70 <__gmpn_add_n@plt>
   3bf20:	cbnz	x0, 3c078 <mpfr_add1sp@@Base+0x444>
   3bf24:	cmp	w20, #0x5
   3bf28:	b.ne	3c0cc <mpfr_add1sp@@Base+0x498>  // b.any
   3bf2c:	mov	w8, wzr
   3bf30:	mov	w22, wzr
   3bf34:	ldur	x25, [x29, #-16]
   3bf38:	cbz	w8, 3bf58 <mpfr_add1sp@@Base+0x324>
   3bf3c:	mov	w22, #0x1                   	// #1
   3bf40:	lsl	x3, x22, x27
   3bf44:	mov	x0, x23
   3bf48:	mov	x1, x23
   3bf4c:	mov	x2, x26
   3bf50:	bl	bf60 <__gmpn_add_1@plt>
   3bf54:	cbnz	x0, 3c13c <mpfr_add1sp@@Base+0x508>
   3bf58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3bf5c:	ldr	x1, [x0, #2768]
   3bf60:	add	x0, x0, #0xad0
   3bf64:	blr	x1
   3bf68:	mrs	x21, tpidr_el0
   3bf6c:	ldr	x8, [x21, x0]
   3bf70:	cmp	x24, x8
   3bf74:	b.gt	3bfd0 <mpfr_add1sp@@Base+0x39c>
   3bf78:	str	x24, [x19, #16]
   3bf7c:	ldur	x0, [x29, #-8]
   3bf80:	cbnz	x0, 3bff0 <mpfr_add1sp@@Base+0x3bc>
   3bf84:	ldr	w8, [x19, #8]
   3bf88:	mul	w8, w8, w22
   3bf8c:	cbz	w8, 3bfac <mpfr_add1sp@@Base+0x378>
   3bf90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3bf94:	ldr	x1, [x0, #2800]
   3bf98:	add	x0, x0, #0xaf0
   3bf9c:	blr	x1
   3bfa0:	ldr	w9, [x21, x0]
   3bfa4:	orr	w9, w9, #0x8
   3bfa8:	str	w9, [x21, x0]
   3bfac:	mov	w0, w8
   3bfb0:	mov	sp, x29
   3bfb4:	ldp	x20, x19, [sp, #80]
   3bfb8:	ldp	x22, x21, [sp, #64]
   3bfbc:	ldp	x24, x23, [sp, #48]
   3bfc0:	ldp	x26, x25, [sp, #32]
   3bfc4:	ldp	x28, x27, [sp, #16]
   3bfc8:	ldp	x29, x30, [sp], #96
   3bfcc:	ret
   3bfd0:	ldur	x0, [x29, #-8]
   3bfd4:	cbnz	x0, 3c198 <mpfr_add1sp@@Base+0x564>
   3bfd8:	ldr	w2, [x19, #8]
   3bfdc:	mov	x0, x19
   3bfe0:	mov	w1, w20
   3bfe4:	bl	c3a0 <mpfr_overflow@plt>
   3bfe8:	mov	w8, w0
   3bfec:	b	3bfac <mpfr_add1sp@@Base+0x378>
   3bff0:	bl	c8d0 <mpfr_tmp_free@plt>
   3bff4:	b	3bf84 <mpfr_add1sp@@Base+0x350>
   3bff8:	mov	x12, x26
   3bffc:	cmp	w20, #0x5
   3c000:	b.ne	3c1a0 <mpfr_add1sp@@Base+0x56c>  // b.any
   3c004:	ldr	x0, [x19, #24]
   3c008:	ldr	x1, [x13, #24]
   3c00c:	cmp	x0, x1
   3c010:	b.eq	3be28 <mpfr_add1sp@@Base+0x1f4>  // b.none
   3c014:	lsl	x2, x12, #3
   3c018:	bl	be50 <memcpy@plt>
   3c01c:	mov	w22, #0xffffffff            	// #-1
   3c020:	b	3bf58 <mpfr_add1sp@@Base+0x324>
   3c024:	ldr	x8, [x28, #24]
   3c028:	stur	x27, [x29, #-48]
   3c02c:	add	x1, x8, x26, lsl #3
   3c030:	cmp	x1, x22
   3c034:	b.eq	3c048 <mpfr_add1sp@@Base+0x414>  // b.none
   3c038:	sub	x8, x25, x26
   3c03c:	lsl	x2, x8, #3
   3c040:	mov	x0, x22
   3c044:	bl	be50 <memcpy@plt>
   3c048:	add	x8, x22, x25, lsl #3
   3c04c:	lsl	x2, x26, #3
   3c050:	sub	x0, x8, x2
   3c054:	mov	w1, wzr
   3c058:	mov	x26, x25
   3c05c:	bl	c5b0 <memset@plt>
   3c060:	ldur	x27, [x29, #-48]
   3c064:	b	3bd9c <mpfr_add1sp@@Base+0x168>
   3c068:	sub	x0, x29, #0x8
   3c06c:	bl	c220 <mpfr_tmp_allocate@plt>
   3c070:	mov	x22, x0
   3c074:	b	3bd78 <mpfr_add1sp@@Base+0x144>
   3c078:	ldr	x8, [x23]
   3c07c:	mov	w3, #0x1                   	// #1
   3c080:	mov	x0, x23
   3c084:	mov	x1, x23
   3c088:	mov	x2, x26
   3c08c:	and	x22, x8, x21
   3c090:	bl	c140 <__gmpn_rshift@plt>
   3c094:	ldur	x8, [x29, #-16]
   3c098:	add	x24, x24, #0x1
   3c09c:	lsl	x8, x8, #3
   3c0a0:	ldr	x9, [x23, x8]
   3c0a4:	orr	x9, x9, #0x8000000000000000
   3c0a8:	str	x9, [x23, x8]
   3c0ac:	ldr	x8, [x23]
   3c0b0:	and	x8, x8, x28
   3c0b4:	str	x8, [x23]
   3c0b8:	ldur	x8, [x29, #-40]
   3c0bc:	stur	x22, [x29, #-40]
   3c0c0:	orr	x25, x8, x25
   3c0c4:	cmp	w20, #0x5
   3c0c8:	b.eq	3bf2c <mpfr_add1sp@@Base+0x2f8>  // b.none
   3c0cc:	ldur	w8, [x29, #-28]
   3c0d0:	cbz	w20, 3c150 <mpfr_add1sp@@Base+0x51c>
   3c0d4:	ldur	x9, [x29, #-40]
   3c0d8:	add	w8, w8, w20
   3c0dc:	cmp	w8, #0x3
   3c0e0:	csinc	w20, w20, wzr, ne  // ne = any
   3c0e4:	orr	x9, x25, x9
   3c0e8:	cmp	x9, #0x0
   3c0ec:	cset	w8, ne  // ne = any
   3c0f0:	csetm	w22, ne  // ne = any
   3c0f4:	cmp	w20, #0x1
   3c0f8:	cset	w9, ne  // ne = any
   3c0fc:	and	w8, w9, w8
   3c100:	b	3bf34 <mpfr_add1sp@@Base+0x300>
   3c104:	stp	x24, x27, [x29, #-56]
   3c108:	lsl	x24, x26, #3
   3c10c:	add	x1, x1, x24
   3c110:	sub	x2, x25, x26
   3c114:	mov	x0, x22
   3c118:	mov	x26, x25
   3c11c:	bl	c140 <__gmpn_rshift@plt>
   3c120:	add	x8, x22, x25, lsl #3
   3c124:	sub	x0, x8, x24
   3c128:	mov	x2, x24
   3c12c:	ldp	x24, x27, [x29, #-56]
   3c130:	mov	w1, wzr
   3c134:	bl	c5b0 <memset@plt>
   3c138:	b	3bd9c <mpfr_add1sp@@Base+0x168>
   3c13c:	add	x24, x24, #0x1
   3c140:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3c144:	mov	w22, #0x1                   	// #1
   3c148:	str	x8, [x23, x25, lsl #3]
   3c14c:	b	3bf58 <mpfr_add1sp@@Base+0x324>
   3c150:	ldur	x8, [x29, #-40]
   3c154:	cmp	x25, #0x0
   3c158:	csetm	w22, ne  // ne = any
   3c15c:	cbz	x8, 3c190 <mpfr_add1sp@@Base+0x55c>
   3c160:	cbz	x25, 3c228 <mpfr_add1sp@@Base+0x5f4>
   3c164:	mov	w20, wzr
   3c168:	mov	w8, #0x1                   	// #1
   3c16c:	b	3bf34 <mpfr_add1sp@@Base+0x300>
   3c170:	ldur	w9, [x29, #-28]
   3c174:	add	w9, w9, w20
   3c178:	cmp	w9, #0x3
   3c17c:	csinc	w20, w20, wzr, ne  // ne = any
   3c180:	cmp	w20, #0x1
   3c184:	b.eq	3be28 <mpfr_add1sp@@Base+0x1f4>  // b.none
   3c188:	mov	x8, x25
   3c18c:	b	3bf3c <mpfr_add1sp@@Base+0x308>
   3c190:	mov	w20, wzr
   3c194:	b	3bf34 <mpfr_add1sp@@Base+0x300>
   3c198:	bl	c8d0 <mpfr_tmp_free@plt>
   3c19c:	b	3bfd8 <mpfr_add1sp@@Base+0x3a4>
   3c1a0:	mov	w8, w14
   3c1a4:	mov	x26, x25
   3c1a8:	cmp	x23, x21
   3c1ac:	b.cs	3c278 <mpfr_add1sp@@Base+0x644>  // b.hs, b.nlast
   3c1b0:	cmp	w20, #0x2
   3c1b4:	b.cc	3c004 <mpfr_add1sp@@Base+0x3d0>  // b.lo, b.ul, b.last
   3c1b8:	add	w8, w8, w20
   3c1bc:	cmp	w8, #0x3
   3c1c0:	b.eq	3c004 <mpfr_add1sp@@Base+0x3d0>  // b.none
   3c1c4:	ldr	x23, [x19, #24]
   3c1c8:	ldr	x1, [x13, #24]
   3c1cc:	cmp	x23, x1
   3c1d0:	b.eq	3c244 <mpfr_add1sp@@Base+0x610>  // b.none
   3c1d4:	lsl	x2, x12, #3
   3c1d8:	mov	x0, x23
   3c1dc:	mov	x21, x12
   3c1e0:	bl	be50 <memcpy@plt>
   3c1e4:	mov	x25, x26
   3c1e8:	mov	x26, x21
   3c1ec:	b	3bf3c <mpfr_add1sp@@Base+0x308>
   3c1f0:	ldr	x11, [x28, #24]
   3c1f4:	add	x10, x12, #0x3f
   3c1f8:	cmp	x12, #0x0
   3c1fc:	csel	x10, x10, x12, lt  // lt = tstop
   3c200:	sub	x10, x13, x10, asr #6
   3c204:	ldr	x13, [x11, x10, lsl #3]
   3c208:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   3c20c:	lsr	x12, x14, x12
   3c210:	sub	x12, x12, #0x1
   3c214:	tst	x13, x12
   3c218:	b.eq	3c250 <mpfr_add1sp@@Base+0x61c>  // b.none
   3c21c:	mov	w25, #0x1                   	// #1
   3c220:	mov	x27, x9
   3c224:	b	3beec <mpfr_add1sp@@Base+0x2b8>
   3c228:	ldr	x8, [x23]
   3c22c:	tst	x8, x21
   3c230:	b.ne	3c164 <mpfr_add1sp@@Base+0x530>  // b.any
   3c234:	mov	w8, wzr
   3c238:	mov	w20, wzr
   3c23c:	mov	w22, #0xffffffff            	// #-1
   3c240:	b	3bf34 <mpfr_add1sp@@Base+0x300>
   3c244:	mov	x25, x26
   3c248:	mov	x26, x12
   3c24c:	b	3bf3c <mpfr_add1sp@@Base+0x308>
   3c250:	sub	x11, x11, #0x8
   3c254:	cmp	x10, #0x0
   3c258:	cset	w25, gt
   3c25c:	subs	x12, x10, #0x1
   3c260:	b.lt	3c270 <mpfr_add1sp@@Base+0x63c>  // b.tstop
   3c264:	ldr	x13, [x11, x10, lsl #3]
   3c268:	mov	x10, x12
   3c26c:	cbz	x13, 3c254 <mpfr_add1sp@@Base+0x620>
   3c270:	mov	x27, x9
   3c274:	b	3beec <mpfr_add1sp@@Base+0x2b8>
   3c278:	cmp	w20, #0x1
   3c27c:	b.eq	3c004 <mpfr_add1sp@@Base+0x3d0>  // b.none
   3c280:	cbnz	w20, 3c1b8 <mpfr_add1sp@@Base+0x584>
   3c284:	ldr	x8, [x28, #24]
   3c288:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3c28c:	ldr	x9, [x8, x26, lsl #3]
   3c290:	cmp	x9, x10
   3c294:	b.ne	3c1c4 <mpfr_add1sp@@Base+0x590>  // b.any
   3c298:	sub	x8, x8, #0x8
   3c29c:	mov	x10, x26
   3c2a0:	mov	x9, x10
   3c2a4:	subs	x10, x10, #0x1
   3c2a8:	b.lt	3c2b4 <mpfr_add1sp@@Base+0x680>  // b.tstop
   3c2ac:	ldr	x11, [x8, x9, lsl #3]
   3c2b0:	cbz	x11, 3c2a0 <mpfr_add1sp@@Base+0x66c>
   3c2b4:	cmp	x9, #0x0
   3c2b8:	b.gt	3c1c4 <mpfr_add1sp@@Base+0x590>
   3c2bc:	ldr	x8, [x13, #24]
   3c2c0:	ldr	x8, [x8]
   3c2c4:	lsr	x8, x8, x27
   3c2c8:	tbnz	w8, #0, 3c1c4 <mpfr_add1sp@@Base+0x590>
   3c2cc:	b	3c004 <mpfr_add1sp@@Base+0x3d0>
   3c2d0:	stp	x29, x30, [sp, #-16]!
   3c2d4:	ldp	x12, x15, [x2, #16]
   3c2d8:	ldp	x9, x14, [x1, #16]
   3c2dc:	ldr	x10, [x0, #24]
   3c2e0:	mov	w11, #0x40                  	// #64
   3c2e4:	mov	x8, x0
   3c2e8:	cmp	x9, x12
   3c2ec:	sub	x11, x11, x4
   3c2f0:	mov	x29, sp
   3c2f4:	b.ne	3c324 <mpfr_add1sp@@Base+0x6f0>  // b.any
   3c2f8:	ldr	x15, [x15]
   3c2fc:	ldr	x14, [x14]
   3c300:	add	x12, x9, #0x1
   3c304:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3c308:	lsr	x15, x15, #1
   3c30c:	add	x14, x15, x14, lsr #1
   3c310:	lsr	x9, x9, x4
   3c314:	and	x15, x14, x9
   3c318:	mov	x13, xzr
   3c31c:	eor	x9, x15, x14
   3c320:	b	3c3ec <mpfr_add1sp@@Base+0x7b8>
   3c324:	csel	x13, x12, x9, gt
   3c328:	csel	x12, x9, x12, gt
   3c32c:	mov	x9, #0xffffffffffffffff    	// #-1
   3c330:	csel	x16, x15, x14, gt
   3c334:	csel	x14, x14, x15, gt
   3c338:	sub	x15, x12, x13
   3c33c:	lsl	x9, x9, x11
   3c340:	cmp	x15, x11
   3c344:	mvn	x13, x9
   3c348:	b.cs	3c384 <mpfr_add1sp@@Base+0x750>  // b.hs, b.nlast
   3c34c:	ldr	x16, [x16]
   3c350:	ldr	x14, [x14]
   3c354:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   3c358:	lsr	x18, x17, x4
   3c35c:	lsr	x15, x16, x15
   3c360:	adds	x14, x15, x14
   3c364:	bfxil	x17, x14, #1, #63
   3c368:	csel	x14, x17, x14, cs  // cs = hs, nlast
   3c36c:	and	x15, x14, x18
   3c370:	and	x13, x14, x13
   3c374:	cinc	x12, x12, cs  // cs = hs, nlast
   3c378:	eor	x13, x13, x15
   3c37c:	and	x9, x14, x9
   3c380:	b	3c3ec <mpfr_add1sp@@Base+0x7b8>
   3c384:	cmp	x15, #0x3f
   3c388:	b.hi	3c3e0 <mpfr_add1sp@@Base+0x7ac>  // b.pmore
   3c38c:	ldr	x17, [x16]
   3c390:	ldr	x14, [x14]
   3c394:	neg	x18, x15
   3c398:	lsr	x15, x17, x15
   3c39c:	adds	x16, x14, x15
   3c3a0:	lsl	x14, x17, x18
   3c3a4:	b.cc	3c3c0 <mpfr_add1sp@@Base+0x78c>  // b.lo, b.ul, b.last
   3c3a8:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   3c3ac:	and	x15, x16, #0x1
   3c3b0:	bfxil	x17, x16, #1, #63
   3c3b4:	orr	x14, x15, x14
   3c3b8:	add	x12, x12, #0x1
   3c3bc:	mov	x16, x17
   3c3c0:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   3c3c4:	lsr	x15, x15, x4
   3c3c8:	and	x13, x16, x13
   3c3cc:	and	x15, x16, x15
   3c3d0:	eor	x13, x13, x15
   3c3d4:	orr	x13, x13, x14
   3c3d8:	and	x9, x16, x9
   3c3dc:	b	3c3ec <mpfr_add1sp@@Base+0x7b8>
   3c3e0:	ldr	x9, [x14]
   3c3e4:	mov	x15, xzr
   3c3e8:	mov	w13, #0x1                   	// #1
   3c3ec:	str	x9, [x10]
   3c3f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c3f4:	ldr	x1, [x0, #2768]
   3c3f8:	add	x0, x0, #0xad0
   3c3fc:	blr	x1
   3c400:	mrs	x14, tpidr_el0
   3c404:	ldr	x9, [x14, x0]
   3c408:	cmp	x12, x9
   3c40c:	b.gt	3c50c <mpfr_add1sp@@Base+0x8d8>
   3c410:	mov	w9, wzr
   3c414:	cmp	w3, #0x5
   3c418:	str	x12, [x8, #16]
   3c41c:	b.eq	3c4c8 <mpfr_add1sp@@Base+0x894>  // b.none
   3c420:	orr	x16, x13, x15
   3c424:	cbz	x16, 3c4c8 <mpfr_add1sp@@Base+0x894>
   3c428:	cmp	w3, #0x1
   3c42c:	b.eq	3c498 <mpfr_add1sp@@Base+0x864>  // b.none
   3c430:	cbnz	w3, 3c488 <mpfr_add1sp@@Base+0x854>
   3c434:	cbz	x15, 3c498 <mpfr_add1sp@@Base+0x864>
   3c438:	cbnz	x13, 3c448 <mpfr_add1sp@@Base+0x814>
   3c43c:	ldr	x9, [x10]
   3c440:	lsr	x9, x9, x11
   3c444:	tbz	w9, #0, 3c498 <mpfr_add1sp@@Base+0x864>
   3c448:	ldr	x9, [x10]
   3c44c:	mov	w13, #0x1                   	// #1
   3c450:	lsl	x11, x13, x11
   3c454:	adds	x9, x9, x11
   3c458:	str	x9, [x10]
   3c45c:	b.eq	3c4d4 <mpfr_add1sp@@Base+0x8a0>  // b.none
   3c460:	ldr	w9, [x8, #8]
   3c464:	cbz	w9, 3c4c8 <mpfr_add1sp@@Base+0x894>
   3c468:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c46c:	ldr	x1, [x0, #2800]
   3c470:	add	x0, x0, #0xaf0
   3c474:	blr	x1
   3c478:	ldr	w8, [x14, x0]
   3c47c:	orr	w8, w8, #0x8
   3c480:	str	w8, [x14, x0]
   3c484:	b	3c4c8 <mpfr_add1sp@@Base+0x894>
   3c488:	ldr	w9, [x8, #8]
   3c48c:	add	w9, w3, w9, lsr #31
   3c490:	cmp	w9, #0x3
   3c494:	b.ne	3c448 <mpfr_add1sp@@Base+0x814>  // b.any
   3c498:	ldr	w8, [x8, #8]
   3c49c:	cbz	w8, 3c4c4 <mpfr_add1sp@@Base+0x890>
   3c4a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c4a4:	ldr	x1, [x0, #2800]
   3c4a8:	add	x0, x0, #0xaf0
   3c4ac:	blr	x1
   3c4b0:	ldr	w9, [x14, x0]
   3c4b4:	orr	w9, w9, #0x8
   3c4b8:	str	w9, [x14, x0]
   3c4bc:	neg	w9, w8
   3c4c0:	b	3c4c8 <mpfr_add1sp@@Base+0x894>
   3c4c4:	mov	w9, wzr
   3c4c8:	mov	w0, w9
   3c4cc:	ldp	x29, x30, [sp], #16
   3c4d0:	ret
   3c4d4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3c4d8:	str	x9, [x10]
   3c4dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c4e0:	ldr	x1, [x0, #2768]
   3c4e4:	add	x0, x0, #0xad0
   3c4e8:	blr	x1
   3c4ec:	ldr	x9, [x14, x0]
   3c4f0:	cmp	x12, x9
   3c4f4:	b.ge	3c50c <mpfr_add1sp@@Base+0x8d8>  // b.tcont
   3c4f8:	add	x9, x12, #0x1
   3c4fc:	str	x9, [x8, #16]
   3c500:	ldr	w9, [x8, #8]
   3c504:	cbnz	w9, 3c468 <mpfr_add1sp@@Base+0x834>
   3c508:	b	3c4c8 <mpfr_add1sp@@Base+0x894>
   3c50c:	ldr	w2, [x8, #8]
   3c510:	mov	x0, x8
   3c514:	mov	w1, w3
   3c518:	bl	c3a0 <mpfr_overflow@plt>
   3c51c:	mov	w9, w0
   3c520:	b	3c4c8 <mpfr_add1sp@@Base+0x894>
   3c524:	stp	x29, x30, [sp, #-16]!
   3c528:	ldp	x14, x13, [x2, #16]
   3c52c:	ldp	x9, x12, [x1, #16]
   3c530:	ldr	x10, [x0, #24]
   3c534:	mov	w11, #0x80                  	// #128
   3c538:	mov	x8, x0
   3c53c:	cmp	x9, x14
   3c540:	sub	x11, x11, x4
   3c544:	mov	x29, sp
   3c548:	b.ne	3c594 <mpfr_add1sp@@Base+0x960>  // b.any
   3c54c:	ldp	x15, x16, [x12]
   3c550:	ldp	x12, x13, [x13]
   3c554:	mov	w17, #0x7f                  	// #127
   3c558:	sub	x17, x17, x4
   3c55c:	mov	w18, #0x1                   	// #1
   3c560:	adds	x15, x12, x15
   3c564:	add	x12, x9, #0x1
   3c568:	add	x9, x13, x16
   3c56c:	cinc	x9, x9, cs  // cs = hs, nlast
   3c570:	lsl	x17, x18, x17
   3c574:	extr	x16, x9, x15, #1
   3c578:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3c57c:	and	x15, x16, x17
   3c580:	bfxil	x13, x9, #1, #63
   3c584:	eor	x9, x15, x16
   3c588:	mov	x14, xzr
   3c58c:	stp	x9, x13, [x10]
   3c590:	b	3c6c0 <mpfr_add1sp@@Base+0xa8c>
   3c594:	csel	x17, x13, x12, gt
   3c598:	csel	x16, x12, x13, gt
   3c59c:	csel	x13, x14, x9, gt
   3c5a0:	csel	x12, x9, x14, gt
   3c5a4:	mov	x9, #0xffffffffffffffff    	// #-1
   3c5a8:	sub	x15, x12, x13
   3c5ac:	lsl	x9, x9, x11
   3c5b0:	cmp	x15, #0x3f
   3c5b4:	mvn	x13, x9
   3c5b8:	b.hi	3c5f8 <mpfr_add1sp@@Base+0x9c4>  // b.pmore
   3c5bc:	ldp	x14, x17, [x17]
   3c5c0:	ldp	x0, x1, [x16]
   3c5c4:	neg	x18, x15
   3c5c8:	lsl	x16, x17, x18
   3c5cc:	lsr	x2, x14, x15
   3c5d0:	lsr	x17, x17, x15
   3c5d4:	orr	x15, x16, x2
   3c5d8:	adds	x15, x15, x0
   3c5dc:	add	x16, x1, x17
   3c5e0:	cinc	x16, x16, cs  // cs = hs, nlast
   3c5e4:	cmp	x16, x1
   3c5e8:	lsl	x14, x14, x18
   3c5ec:	b.cc	3c660 <mpfr_add1sp@@Base+0xa2c>  // b.lo, b.ul, b.last
   3c5f0:	str	x16, [x10, #8]
   3c5f4:	b	3c67c <mpfr_add1sp@@Base+0xa48>
   3c5f8:	cmp	x15, #0x7f
   3c5fc:	b.hi	3c6a8 <mpfr_add1sp@@Base+0xa74>  // b.pmore
   3c600:	ldr	x14, [x17]
   3c604:	cmp	x15, #0x40
   3c608:	b.eq	3c61c <mpfr_add1sp@@Base+0x9e8>  // b.none
   3c60c:	ldr	x18, [x17, #8]
   3c610:	neg	x0, x15
   3c614:	lsl	x18, x18, x0
   3c618:	orr	x14, x18, x14
   3c61c:	ldr	x17, [x17, #8]
   3c620:	ldp	x18, x16, [x16]
   3c624:	lsr	x15, x17, x15
   3c628:	adds	x15, x15, x18
   3c62c:	cinc	x16, x16, cs  // cs = hs, nlast
   3c630:	cbz	x16, 3c660 <mpfr_add1sp@@Base+0xa2c>
   3c634:	mov	w17, #0x7f                  	// #127
   3c638:	mov	w18, #0x1                   	// #1
   3c63c:	sub	x17, x17, x4
   3c640:	lsl	x17, x18, x17
   3c644:	and	x13, x15, x13
   3c648:	and	x9, x15, x9
   3c64c:	and	x15, x15, x17
   3c650:	eor	x13, x13, x15
   3c654:	orr	x14, x13, x14
   3c658:	stp	x9, x16, [x10]
   3c65c:	b	3c6c0 <mpfr_add1sp@@Base+0xa8c>
   3c660:	mov	x18, #0x8000000000000000    	// #-9223372036854775808
   3c664:	and	x17, x15, #0x1
   3c668:	bfxil	x18, x16, #1, #63
   3c66c:	extr	x15, x16, x15, #1
   3c670:	orr	x14, x17, x14
   3c674:	str	x18, [x10, #8]
   3c678:	add	x12, x12, #0x1
   3c67c:	mov	w16, #0x7f                  	// #127
   3c680:	mov	w17, #0x1                   	// #1
   3c684:	sub	x16, x16, x4
   3c688:	lsl	x16, x17, x16
   3c68c:	and	x13, x15, x13
   3c690:	and	x9, x15, x9
   3c694:	and	x15, x15, x16
   3c698:	eor	x13, x13, x15
   3c69c:	orr	x14, x13, x14
   3c6a0:	str	x9, [x10]
   3c6a4:	b	3c6c0 <mpfr_add1sp@@Base+0xa8c>
   3c6a8:	ldr	x9, [x16]
   3c6ac:	mov	x15, xzr
   3c6b0:	mov	w14, #0x1                   	// #1
   3c6b4:	str	x9, [x10]
   3c6b8:	ldr	x9, [x16, #8]
   3c6bc:	str	x9, [x10, #8]
   3c6c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c6c4:	ldr	x1, [x0, #2768]
   3c6c8:	add	x0, x0, #0xad0
   3c6cc:	blr	x1
   3c6d0:	mrs	x13, tpidr_el0
   3c6d4:	ldr	x9, [x13, x0]
   3c6d8:	cmp	x12, x9
   3c6dc:	b.gt	3c7e4 <mpfr_add1sp@@Base+0xbb0>
   3c6e0:	mov	w9, wzr
   3c6e4:	cmp	w3, #0x5
   3c6e8:	str	x12, [x8, #16]
   3c6ec:	b.eq	3c7a0 <mpfr_add1sp@@Base+0xb6c>  // b.none
   3c6f0:	orr	x16, x14, x15
   3c6f4:	cbz	x16, 3c7a0 <mpfr_add1sp@@Base+0xb6c>
   3c6f8:	cmp	w3, #0x1
   3c6fc:	b.eq	3c770 <mpfr_add1sp@@Base+0xb3c>  // b.none
   3c700:	cbnz	w3, 3c760 <mpfr_add1sp@@Base+0xb2c>
   3c704:	cbz	x15, 3c770 <mpfr_add1sp@@Base+0xb3c>
   3c708:	cbnz	x14, 3c718 <mpfr_add1sp@@Base+0xae4>
   3c70c:	ldr	x9, [x10]
   3c710:	lsr	x9, x9, x11
   3c714:	tbz	w9, #0, 3c770 <mpfr_add1sp@@Base+0xb3c>
   3c718:	ldp	x9, x15, [x10]
   3c71c:	mov	w14, #0x1                   	// #1
   3c720:	lsl	x11, x14, x11
   3c724:	adds	x9, x9, x11
   3c728:	str	x9, [x10]
   3c72c:	cinc	x9, x15, eq  // eq = none
   3c730:	str	x9, [x10, #8]
   3c734:	cbz	x9, 3c7ac <mpfr_add1sp@@Base+0xb78>
   3c738:	ldr	w9, [x8, #8]
   3c73c:	cbz	w9, 3c7a0 <mpfr_add1sp@@Base+0xb6c>
   3c740:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c744:	ldr	x1, [x0, #2800]
   3c748:	add	x0, x0, #0xaf0
   3c74c:	blr	x1
   3c750:	ldr	w8, [x13, x0]
   3c754:	orr	w8, w8, #0x8
   3c758:	str	w8, [x13, x0]
   3c75c:	b	3c7a0 <mpfr_add1sp@@Base+0xb6c>
   3c760:	ldr	w9, [x8, #8]
   3c764:	add	w9, w3, w9, lsr #31
   3c768:	cmp	w9, #0x3
   3c76c:	b.ne	3c718 <mpfr_add1sp@@Base+0xae4>  // b.any
   3c770:	ldr	w8, [x8, #8]
   3c774:	cbz	w8, 3c79c <mpfr_add1sp@@Base+0xb68>
   3c778:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c77c:	ldr	x1, [x0, #2800]
   3c780:	add	x0, x0, #0xaf0
   3c784:	blr	x1
   3c788:	ldr	w9, [x13, x0]
   3c78c:	orr	w9, w9, #0x8
   3c790:	str	w9, [x13, x0]
   3c794:	neg	w9, w8
   3c798:	b	3c7a0 <mpfr_add1sp@@Base+0xb6c>
   3c79c:	mov	w9, wzr
   3c7a0:	mov	w0, w9
   3c7a4:	ldp	x29, x30, [sp], #16
   3c7a8:	ret
   3c7ac:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3c7b0:	str	x9, [x10, #8]
   3c7b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c7b8:	ldr	x1, [x0, #2768]
   3c7bc:	add	x0, x0, #0xad0
   3c7c0:	blr	x1
   3c7c4:	ldr	x9, [x13, x0]
   3c7c8:	cmp	x12, x9
   3c7cc:	b.ge	3c7e4 <mpfr_add1sp@@Base+0xbb0>  // b.tcont
   3c7d0:	add	x9, x12, #0x1
   3c7d4:	str	x9, [x8, #16]
   3c7d8:	ldr	w9, [x8, #8]
   3c7dc:	cbnz	w9, 3c740 <mpfr_add1sp@@Base+0xb0c>
   3c7e0:	b	3c7a0 <mpfr_add1sp@@Base+0xb6c>
   3c7e4:	ldr	w2, [x8, #8]
   3c7e8:	mov	x0, x8
   3c7ec:	mov	w1, w3
   3c7f0:	bl	c3a0 <mpfr_overflow@plt>
   3c7f4:	mov	w9, w0
   3c7f8:	b	3c7a0 <mpfr_add1sp@@Base+0xb6c>
   3c7fc:	stp	x29, x30, [sp, #-16]!
   3c800:	ldp	x13, x15, [x2, #16]
   3c804:	ldp	x11, x14, [x1, #16]
   3c808:	ldr	x10, [x0, #24]
   3c80c:	mov	x8, x0
   3c810:	mov	x29, sp
   3c814:	cmp	x11, x13
   3c818:	b.ne	3c844 <mpfr_add1sp@@Base+0xc10>  // b.any
   3c81c:	ldr	x9, [x14]
   3c820:	ldr	x13, [x15]
   3c824:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   3c828:	mov	x12, xzr
   3c82c:	add	x11, x11, #0x1
   3c830:	add	x9, x13, x9
   3c834:	bfxil	x15, x9, #1, #63
   3c838:	and	x14, x9, #0x1
   3c83c:	str	x15, [x10]
   3c840:	b	3c8d4 <mpfr_add1sp@@Base+0xca0>
   3c844:	csel	x9, x14, x15, gt
   3c848:	csel	x12, x15, x14, gt
   3c84c:	csel	x14, x13, x11, gt
   3c850:	csel	x11, x11, x13, gt
   3c854:	sub	x13, x11, x14
   3c858:	cmp	x13, #0x3f
   3c85c:	b.hi	3c894 <mpfr_add1sp@@Base+0xc60>  // b.pmore
   3c860:	ldr	x12, [x12]
   3c864:	ldr	x9, [x9]
   3c868:	lsr	x14, x12, x13
   3c86c:	neg	x13, x13
   3c870:	adds	x9, x14, x9
   3c874:	lsl	x12, x12, x13
   3c878:	b.cc	3c8b0 <mpfr_add1sp@@Base+0xc7c>  // b.lo, b.ul, b.last
   3c87c:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3c880:	bfxil	x13, x9, #1, #63
   3c884:	and	x14, x9, #0x1
   3c888:	str	x13, [x10]
   3c88c:	add	x11, x11, #0x1
   3c890:	b	3c8d4 <mpfr_add1sp@@Base+0xca0>
   3c894:	cmp	x13, #0x40
   3c898:	b.ne	3c8c0 <mpfr_add1sp@@Base+0xc8c>  // b.any
   3c89c:	ldr	x12, [x12]
   3c8a0:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   3c8a4:	cmp	x12, x14
   3c8a8:	cset	w12, ne  // ne = any
   3c8ac:	b	3c8c4 <mpfr_add1sp@@Base+0xc90>
   3c8b0:	str	x9, [x10]
   3c8b4:	and	x14, x12, #0x8000000000000000
   3c8b8:	and	x12, x12, #0x7fffffffffffffff
   3c8bc:	b	3c8d4 <mpfr_add1sp@@Base+0xca0>
   3c8c0:	mov	w12, #0x1                   	// #1
   3c8c4:	ldr	x9, [x9]
   3c8c8:	cmp	x13, #0x40
   3c8cc:	cset	w14, eq  // eq = none
   3c8d0:	str	x9, [x10]
   3c8d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c8d8:	ldr	x1, [x0, #2768]
   3c8dc:	add	x0, x0, #0xad0
   3c8e0:	blr	x1
   3c8e4:	mrs	x13, tpidr_el0
   3c8e8:	ldr	x9, [x13, x0]
   3c8ec:	cmp	x11, x9
   3c8f0:	b.gt	3c9e4 <mpfr_add1sp@@Base+0xdb0>
   3c8f4:	mov	w9, wzr
   3c8f8:	cmp	w3, #0x5
   3c8fc:	str	x11, [x8, #16]
   3c900:	b.eq	3c9a0 <mpfr_add1sp@@Base+0xd6c>  // b.none
   3c904:	orr	x15, x12, x14
   3c908:	cbz	x15, 3c9a0 <mpfr_add1sp@@Base+0xd6c>
   3c90c:	cmp	w3, #0x1
   3c910:	b.eq	3c970 <mpfr_add1sp@@Base+0xd3c>  // b.none
   3c914:	cbnz	w3, 3c960 <mpfr_add1sp@@Base+0xd2c>
   3c918:	cbz	x14, 3c970 <mpfr_add1sp@@Base+0xd3c>
   3c91c:	cbnz	x12, 3c928 <mpfr_add1sp@@Base+0xcf4>
   3c920:	ldrb	w9, [x10]
   3c924:	tbz	w9, #0, 3c970 <mpfr_add1sp@@Base+0xd3c>
   3c928:	ldr	x9, [x10]
   3c92c:	adds	x9, x9, #0x1
   3c930:	str	x9, [x10]
   3c934:	b.cs	3c9ac <mpfr_add1sp@@Base+0xd78>  // b.hs, b.nlast
   3c938:	ldr	w9, [x8, #8]
   3c93c:	cbz	w9, 3c9a0 <mpfr_add1sp@@Base+0xd6c>
   3c940:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c944:	ldr	x1, [x0, #2800]
   3c948:	add	x0, x0, #0xaf0
   3c94c:	blr	x1
   3c950:	ldr	w8, [x13, x0]
   3c954:	orr	w8, w8, #0x8
   3c958:	str	w8, [x13, x0]
   3c95c:	b	3c9a0 <mpfr_add1sp@@Base+0xd6c>
   3c960:	ldr	w9, [x8, #8]
   3c964:	add	w9, w3, w9, lsr #31
   3c968:	cmp	w9, #0x3
   3c96c:	b.ne	3c928 <mpfr_add1sp@@Base+0xcf4>  // b.any
   3c970:	ldr	w8, [x8, #8]
   3c974:	cbz	w8, 3c99c <mpfr_add1sp@@Base+0xd68>
   3c978:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c97c:	ldr	x1, [x0, #2800]
   3c980:	add	x0, x0, #0xaf0
   3c984:	blr	x1
   3c988:	ldr	w9, [x13, x0]
   3c98c:	orr	w9, w9, #0x8
   3c990:	str	w9, [x13, x0]
   3c994:	neg	w9, w8
   3c998:	b	3c9a0 <mpfr_add1sp@@Base+0xd6c>
   3c99c:	mov	w9, wzr
   3c9a0:	mov	w0, w9
   3c9a4:	ldp	x29, x30, [sp], #16
   3c9a8:	ret
   3c9ac:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3c9b0:	str	x9, [x10]
   3c9b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3c9b8:	ldr	x1, [x0, #2768]
   3c9bc:	add	x0, x0, #0xad0
   3c9c0:	blr	x1
   3c9c4:	ldr	x9, [x13, x0]
   3c9c8:	cmp	x11, x9
   3c9cc:	b.ge	3c9e4 <mpfr_add1sp@@Base+0xdb0>  // b.tcont
   3c9d0:	add	x9, x11, #0x1
   3c9d4:	str	x9, [x8, #16]
   3c9d8:	ldr	w9, [x8, #8]
   3c9dc:	cbnz	w9, 3c940 <mpfr_add1sp@@Base+0xd0c>
   3c9e0:	b	3c9a0 <mpfr_add1sp@@Base+0xd6c>
   3c9e4:	ldr	w2, [x8, #8]
   3c9e8:	mov	x0, x8
   3c9ec:	mov	w1, w3
   3c9f0:	bl	c3a0 <mpfr_overflow@plt>
   3c9f4:	mov	w9, w0
   3c9f8:	b	3c9a0 <mpfr_add1sp@@Base+0xd6c>
   3c9fc:	stp	x29, x30, [sp, #-16]!
   3ca00:	ldp	x13, x14, [x2, #16]
   3ca04:	ldp	x9, x12, [x1, #16]
   3ca08:	ldr	x10, [x0, #24]
   3ca0c:	mov	w11, #0xc0                  	// #192
   3ca10:	mov	x8, x0
   3ca14:	cmp	x9, x13
   3ca18:	sub	x11, x11, x4
   3ca1c:	mov	x29, sp
   3ca20:	b.ne	3ca9c <mpfr_add1sp@@Base+0xe68>  // b.any
   3ca24:	mov	w17, #0xbf                  	// #191
   3ca28:	mov	w18, #0x1                   	// #1
   3ca2c:	sub	x17, x17, x4
   3ca30:	ldp	x15, x16, [x12]
   3ca34:	lsl	x17, x18, x17
   3ca38:	ldp	x18, x0, [x14]
   3ca3c:	ldr	x1, [x12, #16]
   3ca40:	add	x12, x9, #0x1
   3ca44:	ldr	x14, [x14, #16]
   3ca48:	adds	x15, x18, x15
   3ca4c:	add	x9, x0, x16
   3ca50:	cinc	x9, x9, cs  // cs = hs, nlast
   3ca54:	cset	w18, cs  // cs = hs, nlast
   3ca58:	cmp	x9, x16
   3ca5c:	cset	w16, eq  // eq = none
   3ca60:	and	w16, w18, w16
   3ca64:	cset	w18, cc  // cc = lo, ul, last
   3ca68:	add	x14, x14, x1
   3ca6c:	orr	w16, w18, w16
   3ca70:	extr	x15, x9, x15, #1
   3ca74:	mov	x18, #0x8000000000000000    	// #-9223372036854775808
   3ca78:	and	x17, x15, x17
   3ca7c:	add	x14, x14, x16
   3ca80:	eor	x15, x17, x15
   3ca84:	bfxil	x18, x14, #1, #63
   3ca88:	extr	x9, x14, x9, #1
   3ca8c:	mov	x13, xzr
   3ca90:	stp	x9, x18, [x10, #8]
   3ca94:	str	x15, [x10]
   3ca98:	b	3ccfc <mpfr_add1sp@@Base+0x10c8>
   3ca9c:	csel	x17, x14, x12, gt
   3caa0:	csel	x15, x12, x14, gt
   3caa4:	csel	x14, x13, x9, gt
   3caa8:	csel	x12, x9, x13, gt
   3caac:	mov	x9, #0xffffffffffffffff    	// #-1
   3cab0:	sub	x16, x12, x14
   3cab4:	lsl	x9, x9, x11
   3cab8:	cmp	x16, #0x3f
   3cabc:	mvn	x14, x9
   3cac0:	b.hi	3cb40 <mpfr_add1sp@@Base+0xf0c>  // b.pmore
   3cac4:	ldp	x18, x0, [x17]
   3cac8:	ldr	x17, [x17, #16]
   3cacc:	neg	x1, x16
   3cad0:	ldr	x6, [x15, #16]
   3cad4:	lsl	x13, x18, x1
   3cad8:	lsl	x2, x0, x1
   3cadc:	lsr	x18, x18, x16
   3cae0:	lsl	x1, x17, x1
   3cae4:	lsr	x0, x0, x16
   3cae8:	lsr	x5, x17, x16
   3caec:	ldp	x16, x17, [x15]
   3caf0:	orr	x15, x2, x18
   3caf4:	orr	x18, x1, x0
   3caf8:	adds	x15, x15, x16
   3cafc:	add	x16, x18, x17
   3cb00:	cinc	x16, x16, cs  // cs = hs, nlast
   3cb04:	cset	w18, cs  // cs = hs, nlast
   3cb08:	cmp	x16, x17
   3cb0c:	cset	w0, eq  // eq = none
   3cb10:	cset	w17, cc  // cc = lo, ul, last
   3cb14:	and	w18, w18, w0
   3cb18:	orr	w17, w17, w18
   3cb1c:	add	x18, x6, x5
   3cb20:	add	x18, x18, x17
   3cb24:	cmp	x18, x6
   3cb28:	cset	w0, eq  // eq = none
   3cb2c:	b.cc	3ccb4 <mpfr_add1sp@@Base+0x1080>  // b.lo, b.ul, b.last
   3cb30:	and	w17, w17, w0
   3cb34:	cbnz	w17, 3ccb4 <mpfr_add1sp@@Base+0x1080>
   3cb38:	stp	x16, x18, [x10, #8]
   3cb3c:	b	3ccd4 <mpfr_add1sp@@Base+0x10a0>
   3cb40:	cmp	x16, #0x7f
   3cb44:	b.hi	3cb74 <mpfr_add1sp@@Base+0xf40>  // b.pmore
   3cb48:	cmp	x16, #0x40
   3cb4c:	b.ne	3cb8c <mpfr_add1sp@@Base+0xf58>  // b.any
   3cb50:	ldr	x13, [x17]
   3cb54:	cmp	x16, #0x40
   3cb58:	b.eq	3cba4 <mpfr_add1sp@@Base+0xf70>  // b.none
   3cb5c:	ldp	x0, x18, [x17, #8]
   3cb60:	neg	x1, x16
   3cb64:	lsl	x18, x18, x1
   3cb68:	lsr	x0, x0, x16
   3cb6c:	orr	x18, x0, x18
   3cb70:	b	3cba8 <mpfr_add1sp@@Base+0xf74>
   3cb74:	cmp	x16, #0xbf
   3cb78:	b.hi	3cc18 <mpfr_add1sp@@Base+0xfe4>  // b.pmore
   3cb7c:	cmp	x16, #0x80
   3cb80:	b.ne	3cc48 <mpfr_add1sp@@Base+0x1014>  // b.any
   3cb84:	mov	x13, xzr
   3cb88:	b	3cc54 <mpfr_add1sp@@Base+0x1020>
   3cb8c:	ldp	x18, x13, [x17]
   3cb90:	neg	x0, x16
   3cb94:	lsl	x13, x13, x0
   3cb98:	orr	x13, x13, x18
   3cb9c:	cmp	x16, #0x40
   3cba0:	b.ne	3cb5c <mpfr_add1sp@@Base+0xf28>  // b.any
   3cba4:	ldr	x18, [x17, #8]
   3cba8:	ldr	x17, [x17, #16]
   3cbac:	ldp	x0, x1, [x15]
   3cbb0:	ldr	x2, [x15, #16]
   3cbb4:	lsr	x16, x17, x16
   3cbb8:	adds	x15, x0, x18
   3cbbc:	add	x16, x16, x1
   3cbc0:	cinc	x16, x16, cs  // cs = hs, nlast
   3cbc4:	cset	w17, cs  // cs = hs, nlast
   3cbc8:	cmp	x16, x1
   3cbcc:	cset	w0, eq  // eq = none
   3cbd0:	cset	w18, cc  // cc = lo, ul, last
   3cbd4:	and	w17, w17, w0
   3cbd8:	orr	w17, w18, w17
   3cbdc:	adds	x18, x2, x17
   3cbe0:	b.eq	3cc3c <mpfr_add1sp@@Base+0x1008>  // b.none
   3cbe4:	mov	w17, #0xbf                  	// #191
   3cbe8:	mov	w0, #0x1                   	// #1
   3cbec:	sub	x17, x17, x4
   3cbf0:	lsl	x17, x0, x17
   3cbf4:	and	x1, x15, x14
   3cbf8:	and	x17, x15, x17
   3cbfc:	eor	x1, x1, x17
   3cc00:	and	x2, x15, x9
   3cc04:	orr	x13, x1, x13
   3cc08:	stp	x2, x16, [x10]
   3cc0c:	str	x18, [x10, #16]
   3cc10:	tbz	w0, #0, 3ccb4 <mpfr_add1sp@@Base+0x1080>
   3cc14:	b	3ccfc <mpfr_add1sp@@Base+0x10c8>
   3cc18:	ldr	x9, [x15]
   3cc1c:	mov	x17, xzr
   3cc20:	mov	w13, #0x1                   	// #1
   3cc24:	str	x9, [x10]
   3cc28:	ldr	x9, [x15, #8]
   3cc2c:	str	x9, [x10, #8]
   3cc30:	ldr	x9, [x15, #16]
   3cc34:	str	x9, [x10, #16]
   3cc38:	b	3ccfc <mpfr_add1sp@@Base+0x10c8>
   3cc3c:	mov	w0, wzr
   3cc40:	tbz	wzr, #0, 3ccb4 <mpfr_add1sp@@Base+0x1080>
   3cc44:	b	3ccfc <mpfr_add1sp@@Base+0x10c8>
   3cc48:	ldr	x13, [x17, #16]
   3cc4c:	neg	x18, x16
   3cc50:	lsl	x13, x13, x18
   3cc54:	ldp	x0, x18, [x17]
   3cc58:	ldr	x17, [x17, #16]
   3cc5c:	ldp	x1, x2, [x15]
   3cc60:	orr	x13, x18, x13
   3cc64:	lsr	x16, x17, x16
   3cc68:	ldr	x17, [x15, #16]
   3cc6c:	adds	x15, x16, x1
   3cc70:	cset	w16, cs  // cs = hs, nlast
   3cc74:	adds	x16, x2, x16
   3cc78:	cinc	x18, x17, cs  // cs = hs, nlast
   3cc7c:	orr	x13, x13, x0
   3cc80:	cbz	x18, 3ccb4 <mpfr_add1sp@@Base+0x1080>
   3cc84:	mov	w17, #0xbf                  	// #191
   3cc88:	mov	w0, #0x1                   	// #1
   3cc8c:	and	x9, x15, x9
   3cc90:	sub	x17, x17, x4
   3cc94:	stp	x9, x16, [x10]
   3cc98:	lsl	x9, x0, x17
   3cc9c:	and	x14, x15, x14
   3cca0:	and	x17, x15, x9
   3cca4:	eor	x9, x14, x17
   3cca8:	orr	x13, x9, x13
   3ccac:	str	x18, [x10, #16]
   3ccb0:	b	3ccfc <mpfr_add1sp@@Base+0x10c8>
   3ccb4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ccb8:	and	x17, x15, #0x1
   3ccbc:	extr	x15, x16, x15, #1
   3ccc0:	extr	x16, x18, x16, #1
   3ccc4:	bfxil	x0, x18, #1, #63
   3ccc8:	orr	x13, x17, x13
   3cccc:	stp	x16, x0, [x10, #8]
   3ccd0:	add	x12, x12, #0x1
   3ccd4:	mov	w16, #0xbf                  	// #191
   3ccd8:	mov	w17, #0x1                   	// #1
   3ccdc:	sub	x16, x16, x4
   3cce0:	lsl	x16, x17, x16
   3cce4:	and	x14, x15, x14
   3cce8:	and	x17, x15, x16
   3ccec:	and	x9, x15, x9
   3ccf0:	eor	x14, x14, x17
   3ccf4:	orr	x13, x14, x13
   3ccf8:	str	x9, [x10]
   3ccfc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3cd00:	ldr	x1, [x0, #2768]
   3cd04:	add	x0, x0, #0xad0
   3cd08:	blr	x1
   3cd0c:	mrs	x14, tpidr_el0
   3cd10:	ldr	x9, [x14, x0]
   3cd14:	cmp	x12, x9
   3cd18:	b.gt	3ce30 <mpfr_add1sp@@Base+0x11fc>
   3cd1c:	mov	w9, wzr
   3cd20:	cmp	w3, #0x5
   3cd24:	str	x12, [x8, #16]
   3cd28:	b.eq	3cdec <mpfr_add1sp@@Base+0x11b8>  // b.none
   3cd2c:	orr	x15, x17, x13
   3cd30:	cbz	x15, 3cdec <mpfr_add1sp@@Base+0x11b8>
   3cd34:	cmp	w3, #0x1
   3cd38:	b.eq	3cdbc <mpfr_add1sp@@Base+0x1188>  // b.none
   3cd3c:	cbnz	w3, 3cdac <mpfr_add1sp@@Base+0x1178>
   3cd40:	cbz	x17, 3cdbc <mpfr_add1sp@@Base+0x1188>
   3cd44:	cbnz	x13, 3cd54 <mpfr_add1sp@@Base+0x1120>
   3cd48:	ldr	x9, [x10]
   3cd4c:	lsr	x9, x9, x11
   3cd50:	tbz	w9, #0, 3cdbc <mpfr_add1sp@@Base+0x1188>
   3cd54:	ldp	x13, x15, [x10]
   3cd58:	mov	w9, #0x1                   	// #1
   3cd5c:	lsl	x9, x9, x11
   3cd60:	ldr	x16, [x10, #16]
   3cd64:	adds	x9, x13, x9
   3cd68:	cinc	x11, x15, eq  // eq = none
   3cd6c:	stp	x9, x11, [x10]
   3cd70:	orr	x9, x11, x9
   3cd74:	cmp	x9, #0x0
   3cd78:	cinc	x9, x16, eq  // eq = none
   3cd7c:	str	x9, [x10, #16]
   3cd80:	cbz	x9, 3cdf8 <mpfr_add1sp@@Base+0x11c4>
   3cd84:	ldr	w9, [x8, #8]
   3cd88:	cbz	w9, 3cdec <mpfr_add1sp@@Base+0x11b8>
   3cd8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3cd90:	ldr	x1, [x0, #2800]
   3cd94:	add	x0, x0, #0xaf0
   3cd98:	blr	x1
   3cd9c:	ldr	w8, [x14, x0]
   3cda0:	orr	w8, w8, #0x8
   3cda4:	str	w8, [x14, x0]
   3cda8:	b	3cdec <mpfr_add1sp@@Base+0x11b8>
   3cdac:	ldr	w9, [x8, #8]
   3cdb0:	add	w9, w3, w9, lsr #31
   3cdb4:	cmp	w9, #0x3
   3cdb8:	b.ne	3cd54 <mpfr_add1sp@@Base+0x1120>  // b.any
   3cdbc:	ldr	w8, [x8, #8]
   3cdc0:	cbz	w8, 3cde8 <mpfr_add1sp@@Base+0x11b4>
   3cdc4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3cdc8:	ldr	x1, [x0, #2800]
   3cdcc:	add	x0, x0, #0xaf0
   3cdd0:	blr	x1
   3cdd4:	ldr	w9, [x14, x0]
   3cdd8:	orr	w9, w9, #0x8
   3cddc:	str	w9, [x14, x0]
   3cde0:	neg	w9, w8
   3cde4:	b	3cdec <mpfr_add1sp@@Base+0x11b8>
   3cde8:	mov	w9, wzr
   3cdec:	mov	w0, w9
   3cdf0:	ldp	x29, x30, [sp], #16
   3cdf4:	ret
   3cdf8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3cdfc:	str	x9, [x10, #16]
   3ce00:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ce04:	ldr	x1, [x0, #2768]
   3ce08:	add	x0, x0, #0xad0
   3ce0c:	blr	x1
   3ce10:	ldr	x9, [x14, x0]
   3ce14:	cmp	x12, x9
   3ce18:	b.ge	3ce30 <mpfr_add1sp@@Base+0x11fc>  // b.tcont
   3ce1c:	add	x9, x12, #0x1
   3ce20:	str	x9, [x8, #16]
   3ce24:	ldr	w9, [x8, #8]
   3ce28:	cbnz	w9, 3cd8c <mpfr_add1sp@@Base+0x1158>
   3ce2c:	b	3cdec <mpfr_add1sp@@Base+0x11b8>
   3ce30:	ldr	w2, [x8, #8]
   3ce34:	mov	x0, x8
   3ce38:	mov	w1, w3
   3ce3c:	bl	c3a0 <mpfr_overflow@plt>
   3ce40:	mov	w9, w0
   3ce44:	b	3cdec <mpfr_add1sp@@Base+0x11b8>

000000000003ce48 <mpfr_free_cache@@Base>:
   3ce48:	stp	x29, x30, [sp, #-16]!
   3ce4c:	mov	x29, sp
   3ce50:	bl	3ce60 <mpfr_free_cache@@Base+0x18>
   3ce54:	bl	3ce78 <mpfr_free_cache@@Base+0x30>
   3ce58:	ldp	x29, x30, [sp], #16
   3ce5c:	ret
   3ce60:	stp	x29, x30, [sp, #-16]!
   3ce64:	mov	x29, sp
   3ce68:	bl	c420 <mpfr_bernoulli_freecache@plt>
   3ce6c:	bl	c6d0 <mpfr_free_pool@plt>
   3ce70:	ldp	x29, x30, [sp], #16
   3ce74:	ret
   3ce78:	stp	x29, x30, [sp, #-32]!
   3ce7c:	str	x19, [sp, #16]
   3ce80:	mov	x29, sp
   3ce84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ce88:	ldr	x1, [x0, #2848]
   3ce8c:	add	x0, x0, #0xb20
   3ce90:	blr	x1
   3ce94:	mrs	x19, tpidr_el0
   3ce98:	add	x0, x19, x0
   3ce9c:	bl	c2d0 <mpfr_clear_cache@plt>
   3cea0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3cea4:	ldr	x1, [x0, #2784]
   3cea8:	add	x0, x0, #0xae0
   3ceac:	blr	x1
   3ceb0:	add	x0, x19, x0
   3ceb4:	bl	c2d0 <mpfr_clear_cache@plt>
   3ceb8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3cebc:	ldr	x1, [x0, #2832]
   3cec0:	add	x0, x0, #0xb10
   3cec4:	blr	x1
   3cec8:	add	x0, x19, x0
   3cecc:	bl	c2d0 <mpfr_clear_cache@plt>
   3ced0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ced4:	ldr	x1, [x0, #2816]
   3ced8:	add	x0, x0, #0xb00
   3cedc:	blr	x1
   3cee0:	add	x0, x19, x0
   3cee4:	bl	c2d0 <mpfr_clear_cache@plt>
   3cee8:	ldr	x19, [sp, #16]
   3ceec:	ldp	x29, x30, [sp], #32
   3cef0:	ret

000000000003cef4 <mpfr_free_cache2@@Base>:
   3cef4:	tbz	w0, #0, 3cf0c <mpfr_free_cache2@@Base+0x18>
   3cef8:	stp	x29, x30, [sp, #-16]!
   3cefc:	mov	x29, sp
   3cf00:	bl	3ce60 <mpfr_free_cache@@Base+0x18>
   3cf04:	bl	3ce78 <mpfr_free_cache@@Base+0x30>
   3cf08:	ldp	x29, x30, [sp], #16
   3cf0c:	ret

000000000003cf10 <mpfr_mp_memory_cleanup@@Base>:
   3cf10:	stp	x29, x30, [sp, #-16]!
   3cf14:	mov	x29, sp
   3cf18:	bl	bf70 <mpfr_free_cache@plt>
   3cf1c:	mov	w0, wzr
   3cf20:	ldp	x29, x30, [sp], #16
   3cf24:	ret

000000000003cf28 <mpfr_add_si@@Base>:
   3cf28:	stp	x29, x30, [sp, #-16]!
   3cf2c:	mov	x29, sp
   3cf30:	tbnz	x2, #63, 3cf40 <mpfr_add_si@@Base+0x18>
   3cf34:	bl	c710 <mpfr_add_ui@plt>
   3cf38:	ldp	x29, x30, [sp], #16
   3cf3c:	ret
   3cf40:	neg	x2, x2
   3cf44:	bl	ca00 <mpfr_sub_ui@plt>
   3cf48:	ldp	x29, x30, [sp], #16
   3cf4c:	ret

000000000003cf50 <mpfr_sub_si@@Base>:
   3cf50:	stp	x29, x30, [sp, #-16]!
   3cf54:	mov	x29, sp
   3cf58:	tbnz	x2, #63, 3cf68 <mpfr_sub_si@@Base+0x18>
   3cf5c:	bl	ca00 <mpfr_sub_ui@plt>
   3cf60:	ldp	x29, x30, [sp], #16
   3cf64:	ret
   3cf68:	neg	x2, x2
   3cf6c:	bl	c710 <mpfr_add_ui@plt>
   3cf70:	ldp	x29, x30, [sp], #16
   3cf74:	ret

000000000003cf78 <mpfr_si_sub@@Base>:
   3cf78:	stp	x29, x30, [sp, #-32]!
   3cf7c:	str	x19, [sp, #16]
   3cf80:	mov	x19, x0
   3cf84:	mov	x29, sp
   3cf88:	tbnz	x1, #63, 3cf98 <mpfr_si_sub@@Base+0x20>
   3cf8c:	mov	x0, x19
   3cf90:	bl	cf30 <mpfr_ui_sub@plt>
   3cf94:	b	3cfd4 <mpfr_si_sub@@Base+0x5c>
   3cf98:	cmp	w3, #0x3
   3cf9c:	mov	w9, #0x2                   	// #2
   3cfa0:	neg	x8, x1
   3cfa4:	csel	w9, w9, w3, eq  // eq = none
   3cfa8:	cmp	w3, #0x2
   3cfac:	mov	w10, #0x3                   	// #3
   3cfb0:	csel	w3, w10, w9, eq  // eq = none
   3cfb4:	mov	x0, x19
   3cfb8:	mov	x1, x2
   3cfbc:	mov	x2, x8
   3cfc0:	bl	c710 <mpfr_add_ui@plt>
   3cfc4:	ldr	w8, [x19, #8]
   3cfc8:	neg	w0, w0
   3cfcc:	neg	w8, w8
   3cfd0:	str	w8, [x19, #8]
   3cfd4:	ldr	x19, [sp, #16]
   3cfd8:	ldp	x29, x30, [sp], #32
   3cfdc:	ret

000000000003cfe0 <mpfr_mul_si@@Base>:
   3cfe0:	stp	x29, x30, [sp, #-32]!
   3cfe4:	str	x19, [sp, #16]
   3cfe8:	mov	x19, x0
   3cfec:	mov	x29, sp
   3cff0:	tbnz	x2, #63, 3d000 <mpfr_mul_si@@Base+0x20>
   3cff4:	mov	x0, x19
   3cff8:	bl	bea0 <mpfr_mul_ui@plt>
   3cffc:	b	3d034 <mpfr_mul_si@@Base+0x54>
   3d000:	cmp	w3, #0x3
   3d004:	mov	w8, #0x2                   	// #2
   3d008:	csel	w8, w8, w3, eq  // eq = none
   3d00c:	cmp	w3, #0x2
   3d010:	mov	w9, #0x3                   	// #3
   3d014:	neg	x2, x2
   3d018:	csel	w3, w9, w8, eq  // eq = none
   3d01c:	mov	x0, x19
   3d020:	bl	bea0 <mpfr_mul_ui@plt>
   3d024:	ldr	w8, [x19, #8]
   3d028:	neg	w0, w0
   3d02c:	neg	w8, w8
   3d030:	str	w8, [x19, #8]
   3d034:	ldr	x19, [sp, #16]
   3d038:	ldp	x29, x30, [sp], #32
   3d03c:	ret

000000000003d040 <mpfr_div_si@@Base>:
   3d040:	stp	x29, x30, [sp, #-32]!
   3d044:	str	x19, [sp, #16]
   3d048:	mov	x19, x0
   3d04c:	mov	x29, sp
   3d050:	tbnz	x2, #63, 3d060 <mpfr_div_si@@Base+0x20>
   3d054:	mov	x0, x19
   3d058:	bl	d160 <mpfr_div_ui@plt>
   3d05c:	b	3d094 <mpfr_div_si@@Base+0x54>
   3d060:	cmp	w3, #0x3
   3d064:	mov	w8, #0x2                   	// #2
   3d068:	csel	w8, w8, w3, eq  // eq = none
   3d06c:	cmp	w3, #0x2
   3d070:	mov	w9, #0x3                   	// #3
   3d074:	neg	x2, x2
   3d078:	csel	w3, w9, w8, eq  // eq = none
   3d07c:	mov	x0, x19
   3d080:	bl	d160 <mpfr_div_ui@plt>
   3d084:	ldr	w8, [x19, #8]
   3d088:	neg	w0, w0
   3d08c:	neg	w8, w8
   3d090:	str	w8, [x19, #8]
   3d094:	ldr	x19, [sp, #16]
   3d098:	ldp	x29, x30, [sp], #32
   3d09c:	ret

000000000003d0a0 <mpfr_si_div@@Base>:
   3d0a0:	stp	x29, x30, [sp, #-32]!
   3d0a4:	str	x19, [sp, #16]
   3d0a8:	mov	x19, x0
   3d0ac:	mov	x29, sp
   3d0b0:	tbnz	x1, #63, 3d0c0 <mpfr_si_div@@Base+0x20>
   3d0b4:	mov	x0, x19
   3d0b8:	bl	c7b0 <mpfr_ui_div@plt>
   3d0bc:	b	3d0f4 <mpfr_si_div@@Base+0x54>
   3d0c0:	cmp	w3, #0x3
   3d0c4:	mov	w8, #0x2                   	// #2
   3d0c8:	csel	w8, w8, w3, eq  // eq = none
   3d0cc:	cmp	w3, #0x2
   3d0d0:	mov	w9, #0x3                   	// #3
   3d0d4:	neg	x1, x1
   3d0d8:	csel	w3, w9, w8, eq  // eq = none
   3d0dc:	mov	x0, x19
   3d0e0:	bl	c7b0 <mpfr_ui_div@plt>
   3d0e4:	ldr	w8, [x19, #8]
   3d0e8:	neg	w0, w0
   3d0ec:	neg	w8, w8
   3d0f0:	str	w8, [x19, #8]
   3d0f4:	ldr	x19, [sp, #16]
   3d0f8:	ldp	x29, x30, [sp], #32
   3d0fc:	ret

000000000003d100 <mpfr_cmp_ld@@Base>:
   3d100:	sub	sp, sp, #0x70
   3d104:	stp	x29, x30, [sp, #48]
   3d108:	stp	x24, x23, [sp, #64]
   3d10c:	stp	x22, x21, [sp, #80]
   3d110:	stp	x20, x19, [sp, #96]
   3d114:	add	x29, sp, #0x30
   3d118:	str	q0, [sp]
   3d11c:	mov	x19, x0
   3d120:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d124:	ldr	x1, [x0, #2800]
   3d128:	add	x0, x0, #0xaf0
   3d12c:	blr	x1
   3d130:	mrs	x21, tpidr_el0
   3d134:	ldr	w24, [x21, x0]
   3d138:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d13c:	ldr	x1, [x0, #2736]
   3d140:	add	x0, x0, #0xab0
   3d144:	blr	x1
   3d148:	ldr	x22, [x21, x0]
   3d14c:	mov	x8, x0
   3d150:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d154:	ldr	x1, [x0, #2768]
   3d158:	add	x0, x0, #0xad0
   3d15c:	blr	x1
   3d160:	ldr	x23, [x21, x0]
   3d164:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3d168:	str	x9, [x21, x8]
   3d16c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   3d170:	str	x8, [x21, x0]
   3d174:	add	x0, sp, #0x10
   3d178:	mov	w1, #0x71                  	// #113
   3d17c:	bl	cf60 <mpfr_init2@plt>
   3d180:	ldr	q0, [sp]
   3d184:	add	x0, sp, #0x10
   3d188:	mov	w1, wzr
   3d18c:	bl	be90 <mpfr_set_ld@plt>
   3d190:	cbz	w0, 3d1b0 <mpfr_cmp_ld@@Base+0xb0>
   3d194:	add	x0, sp, #0x10
   3d198:	mov	w1, #0x832                 	// #2098
   3d19c:	bl	c330 <mpfr_set_prec@plt>
   3d1a0:	ldr	q0, [sp]
   3d1a4:	add	x0, sp, #0x10
   3d1a8:	mov	w1, wzr
   3d1ac:	bl	be90 <mpfr_set_ld@plt>
   3d1b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d1b4:	ldr	x1, [x0, #2800]
   3d1b8:	add	x0, x0, #0xaf0
   3d1bc:	blr	x1
   3d1c0:	mov	x20, x0
   3d1c4:	str	wzr, [x21, x0]
   3d1c8:	add	x1, sp, #0x10
   3d1cc:	mov	w2, #0x1                   	// #1
   3d1d0:	mov	x0, x19
   3d1d4:	bl	ce90 <mpfr_cmp3@plt>
   3d1d8:	ldr	w8, [x21, x20]
   3d1dc:	mov	w19, w0
   3d1e0:	add	x0, sp, #0x10
   3d1e4:	orr	w24, w8, w24
   3d1e8:	bl	c4f0 <mpfr_clear@plt>
   3d1ec:	str	w24, [x21, x20]
   3d1f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d1f4:	ldr	x1, [x0, #2736]
   3d1f8:	add	x0, x0, #0xab0
   3d1fc:	blr	x1
   3d200:	str	x22, [x21, x0]
   3d204:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d208:	ldr	x1, [x0, #2768]
   3d20c:	add	x0, x0, #0xad0
   3d210:	blr	x1
   3d214:	str	x23, [x21, x0]
   3d218:	mov	w0, w19
   3d21c:	ldp	x20, x19, [sp, #96]
   3d220:	ldp	x22, x21, [sp, #80]
   3d224:	ldp	x24, x23, [sp, #64]
   3d228:	ldp	x29, x30, [sp, #48]
   3d22c:	add	sp, sp, #0x70
   3d230:	ret

000000000003d234 <mpfr_set_ui_2exp@@Base>:
   3d234:	stp	x29, x30, [sp, #-64]!
   3d238:	stp	x20, x19, [sp, #48]
   3d23c:	mov	x20, x0
   3d240:	mov	w8, #0x1                   	// #1
   3d244:	str	x23, [sp, #16]
   3d248:	stp	x22, x21, [sp, #32]
   3d24c:	mov	x29, sp
   3d250:	str	w8, [x0, #8]
   3d254:	cbz	x1, 3d330 <mpfr_set_ui_2exp@@Base+0xfc>
   3d258:	str	wzr, [x29, #28]
   3d25c:	ldr	x8, [x20]
   3d260:	ldr	x0, [x20, #24]
   3d264:	mov	x22, x2
   3d268:	clz	x23, x1
   3d26c:	sub	x9, x8, #0x1
   3d270:	add	x8, x8, #0x3e
   3d274:	cmp	x9, #0x0
   3d278:	csel	x8, x8, x9, lt  // lt = tstop
   3d27c:	asr	x8, x8, #6
   3d280:	lsl	x2, x8, #3
   3d284:	lsl	x9, x1, x23
   3d288:	add	x21, x0, x2
   3d28c:	mov	w1, wzr
   3d290:	mov	w19, w3
   3d294:	str	x9, [x21]
   3d298:	bl	c5b0 <memset@plt>
   3d29c:	ldr	x4, [x20]
   3d2a0:	mov	w8, #0x40                  	// #64
   3d2a4:	sub	x2, x8, x23
   3d2a8:	add	x22, x2, x22
   3d2ac:	cmp	x4, x2
   3d2b0:	b.lt	3d340 <mpfr_set_ui_2exp@@Base+0x10c>  // b.tstop
   3d2b4:	str	x22, [x20, #16]
   3d2b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d2bc:	ldr	x1, [x0, #2736]
   3d2c0:	add	x0, x0, #0xab0
   3d2c4:	blr	x1
   3d2c8:	mrs	x9, tpidr_el0
   3d2cc:	ldr	x10, [x9, x0]
   3d2d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d2d4:	ldr	x1, [x0, #2768]
   3d2d8:	add	x0, x0, #0xad0
   3d2dc:	blr	x1
   3d2e0:	ldr	w8, [x29, #28]
   3d2e4:	cmp	x22, x10
   3d2e8:	b.lt	3d36c <mpfr_set_ui_2exp@@Base+0x138>  // b.tstop
   3d2ec:	ldr	x10, [x9, x0]
   3d2f0:	cmp	x22, x10
   3d2f4:	b.gt	3d36c <mpfr_set_ui_2exp@@Base+0x138>
   3d2f8:	cbz	w8, 3d318 <mpfr_set_ui_2exp@@Base+0xe4>
   3d2fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d300:	ldr	x1, [x0, #2800]
   3d304:	add	x0, x0, #0xaf0
   3d308:	blr	x1
   3d30c:	ldr	w10, [x9, x0]
   3d310:	orr	w10, w10, #0x8
   3d314:	str	w10, [x9, x0]
   3d318:	ldp	x20, x19, [sp, #48]
   3d31c:	ldp	x22, x21, [sp, #32]
   3d320:	ldr	x23, [sp, #16]
   3d324:	mov	w0, w8
   3d328:	ldp	x29, x30, [sp], #64
   3d32c:	ret
   3d330:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3d334:	mov	w8, wzr
   3d338:	str	x9, [x20, #16]
   3d33c:	b	3d318 <mpfr_set_ui_2exp@@Base+0xe4>
   3d340:	add	x6, x29, #0x1c
   3d344:	mov	x0, x21
   3d348:	mov	x1, x21
   3d34c:	mov	w3, wzr
   3d350:	mov	w5, w19
   3d354:	bl	cf10 <mpfr_round_raw@plt>
   3d358:	cbz	w0, 3d2b4 <mpfr_set_ui_2exp@@Base+0x80>
   3d35c:	add	x22, x22, #0x1
   3d360:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d364:	str	x8, [x21]
   3d368:	b	3d2b4 <mpfr_set_ui_2exp@@Base+0x80>
   3d36c:	mov	x0, x20
   3d370:	mov	w1, w8
   3d374:	mov	w2, w19
   3d378:	bl	d020 <mpfr_check_range@plt>
   3d37c:	mov	w8, w0
   3d380:	b	3d318 <mpfr_set_ui_2exp@@Base+0xe4>

000000000003d384 <mpfr_set_si_2exp@@Base>:
   3d384:	stp	x29, x30, [sp, #-80]!
   3d388:	stp	x20, x19, [sp, #64]
   3d38c:	mov	x20, x0
   3d390:	str	x25, [sp, #16]
   3d394:	stp	x24, x23, [sp, #32]
   3d398:	stp	x22, x21, [sp, #48]
   3d39c:	mov	x29, sp
   3d3a0:	cbz	x1, 3d480 <mpfr_set_si_2exp@@Base+0xfc>
   3d3a4:	str	wzr, [x29, #28]
   3d3a8:	ldr	x8, [x20]
   3d3ac:	ldr	x0, [x20, #24]
   3d3b0:	mov	x23, x2
   3d3b4:	mov	x21, x1
   3d3b8:	sub	x9, x8, #0x1
   3d3bc:	add	x8, x8, #0x3e
   3d3c0:	cmp	x9, #0x0
   3d3c4:	csel	x8, x8, x9, lt  // lt = tstop
   3d3c8:	cmp	x1, #0x0
   3d3cc:	cneg	x9, x1, mi  // mi = first
   3d3d0:	asr	x8, x8, #6
   3d3d4:	clz	x24, x9
   3d3d8:	lsl	x2, x8, #3
   3d3dc:	lsl	x8, x9, x24
   3d3e0:	add	x22, x0, x2
   3d3e4:	str	x8, [x22]
   3d3e8:	mov	w8, #0xffffffff            	// #-1
   3d3ec:	mov	w1, wzr
   3d3f0:	mov	w19, w3
   3d3f4:	cneg	w25, w8, ge  // ge = tcont
   3d3f8:	bl	c5b0 <memset@plt>
   3d3fc:	ldr	x4, [x20]
   3d400:	mov	w8, #0x40                  	// #64
   3d404:	sub	x2, x8, x24
   3d408:	add	x23, x2, x23
   3d40c:	cmp	x4, x2
   3d410:	str	w25, [x20, #8]
   3d414:	b.lt	3d4b0 <mpfr_set_si_2exp@@Base+0x12c>  // b.tstop
   3d418:	str	x23, [x20, #16]
   3d41c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d420:	ldr	x1, [x0, #2736]
   3d424:	add	x0, x0, #0xab0
   3d428:	blr	x1
   3d42c:	mrs	x9, tpidr_el0
   3d430:	ldr	x10, [x9, x0]
   3d434:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d438:	ldr	x1, [x0, #2768]
   3d43c:	add	x0, x0, #0xad0
   3d440:	blr	x1
   3d444:	ldr	w8, [x29, #28]
   3d448:	cmp	x23, x10
   3d44c:	b.lt	3d4dc <mpfr_set_si_2exp@@Base+0x158>  // b.tstop
   3d450:	ldr	x10, [x9, x0]
   3d454:	cmp	x23, x10
   3d458:	b.gt	3d4dc <mpfr_set_si_2exp@@Base+0x158>
   3d45c:	cbz	w8, 3d494 <mpfr_set_si_2exp@@Base+0x110>
   3d460:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d464:	ldr	x1, [x0, #2800]
   3d468:	add	x0, x0, #0xaf0
   3d46c:	blr	x1
   3d470:	ldr	w10, [x9, x0]
   3d474:	orr	w10, w10, #0x8
   3d478:	str	w10, [x9, x0]
   3d47c:	b	3d494 <mpfr_set_si_2exp@@Base+0x110>
   3d480:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3d484:	mov	w10, #0x1                   	// #1
   3d488:	mov	w8, wzr
   3d48c:	str	x9, [x20, #16]
   3d490:	str	w10, [x20, #8]
   3d494:	ldp	x20, x19, [sp, #64]
   3d498:	ldp	x22, x21, [sp, #48]
   3d49c:	ldp	x24, x23, [sp, #32]
   3d4a0:	ldr	x25, [sp, #16]
   3d4a4:	mov	w0, w8
   3d4a8:	ldp	x29, x30, [sp], #80
   3d4ac:	ret
   3d4b0:	lsr	x3, x21, #63
   3d4b4:	add	x6, x29, #0x1c
   3d4b8:	mov	x0, x22
   3d4bc:	mov	x1, x22
   3d4c0:	mov	w5, w19
   3d4c4:	bl	cf10 <mpfr_round_raw@plt>
   3d4c8:	cbz	w0, 3d418 <mpfr_set_si_2exp@@Base+0x94>
   3d4cc:	add	x23, x23, #0x1
   3d4d0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d4d4:	str	x8, [x22]
   3d4d8:	b	3d418 <mpfr_set_si_2exp@@Base+0x94>
   3d4dc:	mov	x0, x20
   3d4e0:	mov	w1, w8
   3d4e4:	mov	w2, w19
   3d4e8:	bl	d020 <mpfr_check_range@plt>
   3d4ec:	mov	w8, w0
   3d4f0:	b	3d494 <mpfr_set_si_2exp@@Base+0x110>

000000000003d4f4 <__gmpfr_set_uj@@Base>:
   3d4f4:	stp	x29, x30, [sp, #-16]!
   3d4f8:	mov	w3, w2
   3d4fc:	mov	x2, xzr
   3d500:	mov	x29, sp
   3d504:	bl	c470 <__gmpfr_set_uj_2exp@plt>
   3d508:	ldp	x29, x30, [sp], #16
   3d50c:	ret

000000000003d510 <__gmpfr_set_uj_2exp@@Base>:
   3d510:	sub	sp, sp, #0x40
   3d514:	mov	x9, x0
   3d518:	stp	x29, x30, [sp, #48]
   3d51c:	add	x29, sp, #0x30
   3d520:	cbz	x1, 3d5ac <__gmpfr_set_uj_2exp@@Base+0x9c>
   3d524:	mov	w10, #0x40                  	// #64
   3d528:	sub	x11, x29, #0x8
   3d52c:	clz	x13, x1
   3d530:	mov	w12, #0x1                   	// #1
   3d534:	str	x10, [sp, #8]
   3d538:	str	x11, [sp, #32]
   3d53c:	lsl	x10, x1, x13
   3d540:	sub	x11, x2, x13
   3d544:	mov	w8, w3
   3d548:	str	w12, [sp, #16]
   3d54c:	stur	x10, [x29, #-8]
   3d550:	add	x10, x11, #0x40
   3d554:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d558:	ldr	x1, [x0, #2736]
   3d55c:	add	x0, x0, #0xab0
   3d560:	blr	x1
   3d564:	mrs	x12, tpidr_el0
   3d568:	ldr	x11, [x12, x0]
   3d56c:	cmp	x10, x11
   3d570:	b.lt	3d5cc <__gmpfr_set_uj_2exp@@Base+0xbc>  // b.tstop
   3d574:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d578:	ldr	x1, [x0, #2768]
   3d57c:	add	x0, x0, #0xad0
   3d580:	blr	x1
   3d584:	ldr	x11, [x12, x0]
   3d588:	cmp	x10, x11
   3d58c:	b.gt	3d5f4 <__gmpfr_set_uj_2exp@@Base+0xe4>
   3d590:	add	x1, sp, #0x8
   3d594:	mov	w3, #0x1                   	// #1
   3d598:	mov	x0, x9
   3d59c:	mov	w2, w8
   3d5a0:	str	x10, [sp, #24]
   3d5a4:	bl	cb70 <mpfr_set4@plt>
   3d5a8:	b	3d5c0 <__gmpfr_set_uj_2exp@@Base+0xb0>
   3d5ac:	mov	w8, #0x1                   	// #1
   3d5b0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   3d5b4:	mov	w0, wzr
   3d5b8:	str	w8, [x9, #8]
   3d5bc:	str	x10, [x9, #16]
   3d5c0:	ldp	x29, x30, [sp, #48]
   3d5c4:	add	sp, sp, #0x40
   3d5c8:	ret
   3d5cc:	cbnz	w8, 3d610 <__gmpfr_set_uj_2exp@@Base+0x100>
   3d5d0:	add	x8, x10, #0x1
   3d5d4:	cmp	x8, x11
   3d5d8:	str	x9, [sp]
   3d5dc:	b.lt	3d5ec <__gmpfr_set_uj_2exp@@Base+0xdc>  // b.tstop
   3d5e0:	add	x0, sp, #0x8
   3d5e4:	bl	c360 <mpfr_powerof2_raw@plt>
   3d5e8:	cbz	w0, 3d608 <__gmpfr_set_uj_2exp@@Base+0xf8>
   3d5ec:	mov	w8, #0x1                   	// #1
   3d5f0:	b	3d60c <__gmpfr_set_uj_2exp@@Base+0xfc>
   3d5f4:	mov	w2, #0x1                   	// #1
   3d5f8:	mov	x0, x9
   3d5fc:	mov	w1, w8
   3d600:	bl	c3a0 <mpfr_overflow@plt>
   3d604:	b	3d5c0 <__gmpfr_set_uj_2exp@@Base+0xb0>
   3d608:	mov	w8, wzr
   3d60c:	ldr	x9, [sp]
   3d610:	mov	w2, #0x1                   	// #1
   3d614:	mov	x0, x9
   3d618:	mov	w1, w8
   3d61c:	bl	c880 <mpfr_underflow@plt>
   3d620:	b	3d5c0 <__gmpfr_set_uj_2exp@@Base+0xb0>

000000000003d624 <__gmpfr_set_sj@@Base>:
   3d624:	stp	x29, x30, [sp, #-16]!
   3d628:	mov	w3, w2
   3d62c:	mov	x2, xzr
   3d630:	mov	x29, sp
   3d634:	bl	ce10 <__gmpfr_set_sj_2exp@plt>
   3d638:	ldp	x29, x30, [sp], #16
   3d63c:	ret

000000000003d640 <__gmpfr_set_sj_2exp@@Base>:
   3d640:	stp	x29, x30, [sp, #-32]!
   3d644:	str	x19, [sp, #16]
   3d648:	mov	x19, x0
   3d64c:	mov	x29, sp
   3d650:	tbnz	x1, #63, 3d660 <__gmpfr_set_sj_2exp@@Base+0x20>
   3d654:	mov	x0, x19
   3d658:	bl	c470 <__gmpfr_set_uj_2exp@plt>
   3d65c:	b	3d694 <__gmpfr_set_sj_2exp@@Base+0x54>
   3d660:	cmp	w3, #0x3
   3d664:	mov	w8, #0x2                   	// #2
   3d668:	csel	w8, w8, w3, eq  // eq = none
   3d66c:	cmp	w3, #0x2
   3d670:	mov	w9, #0x3                   	// #3
   3d674:	neg	x1, x1
   3d678:	csel	w3, w9, w8, eq  // eq = none
   3d67c:	mov	x0, x19
   3d680:	bl	c470 <__gmpfr_set_uj_2exp@plt>
   3d684:	ldr	w8, [x19, #8]
   3d688:	neg	w0, w0
   3d68c:	neg	w8, w8
   3d690:	str	w8, [x19, #8]
   3d694:	ldr	x19, [sp, #16]
   3d698:	ldp	x29, x30, [sp], #32
   3d69c:	ret

000000000003d6a0 <__gmpfr_mpfr_get_sj@@Base>:
   3d6a0:	sub	sp, sp, #0x70
   3d6a4:	stp	x29, x30, [sp, #48]
   3d6a8:	stp	x24, x23, [sp, #64]
   3d6ac:	stp	x22, x21, [sp, #80]
   3d6b0:	stp	x20, x19, [sp, #96]
   3d6b4:	add	x29, sp, #0x30
   3d6b8:	mov	w20, w1
   3d6bc:	mov	x19, x0
   3d6c0:	bl	c020 <mpfr_fits_intmax_p@plt>
   3d6c4:	cbz	w0, 3d8e4 <__gmpfr_mpfr_get_sj@@Base+0x244>
   3d6c8:	ldr	x8, [x19, #16]
   3d6cc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3d6d0:	cmp	x8, x9
   3d6d4:	b.ne	3d6e0 <__gmpfr_mpfr_get_sj@@Base+0x40>  // b.any
   3d6d8:	mov	x19, xzr
   3d6dc:	b	3d8c8 <__gmpfr_mpfr_get_sj@@Base+0x228>
   3d6e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d6e4:	ldr	x1, [x0, #2800]
   3d6e8:	add	x0, x0, #0xaf0
   3d6ec:	blr	x1
   3d6f0:	mrs	x21, tpidr_el0
   3d6f4:	ldr	w24, [x21, x0]
   3d6f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d6fc:	ldr	x1, [x0, #2736]
   3d700:	add	x0, x0, #0xab0
   3d704:	blr	x1
   3d708:	ldr	x22, [x21, x0]
   3d70c:	mov	x8, x0
   3d710:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d714:	ldr	x1, [x0, #2768]
   3d718:	add	x0, x0, #0xad0
   3d71c:	blr	x1
   3d720:	ldr	x23, [x21, x0]
   3d724:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3d728:	str	x9, [x21, x8]
   3d72c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   3d730:	str	x8, [x21, x0]
   3d734:	add	x0, sp, #0x10
   3d738:	mov	w1, #0x3f                  	// #63
   3d73c:	bl	cf60 <mpfr_init2@plt>
   3d740:	add	x0, sp, #0x10
   3d744:	mov	x1, x19
   3d748:	mov	w2, w20
   3d74c:	bl	c7c0 <mpfr_rint@plt>
   3d750:	ldr	x8, [sp, #32]
   3d754:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3d758:	orr	x8, x8, #0x1
   3d75c:	cmp	x8, x9
   3d760:	b.eq	3d92c <__gmpfr_mpfr_get_sj@@Base+0x28c>  // b.none
   3d764:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d768:	ldr	x1, [x0, #2800]
   3d76c:	add	x0, x0, #0xaf0
   3d770:	blr	x1
   3d774:	ldr	x8, [sp, #32]
   3d778:	ldr	w9, [x21, x0]
   3d77c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   3d780:	cmp	x8, x10
   3d784:	orr	w20, w9, w24
   3d788:	b.ne	3d794 <__gmpfr_mpfr_get_sj@@Base+0xf4>  // b.any
   3d78c:	mov	x19, xzr
   3d790:	b	3d884 <__gmpfr_mpfr_get_sj@@Base+0x1e4>
   3d794:	ldr	x24, [sp, #40]
   3d798:	mov	x10, #0x1                   	// #1
   3d79c:	lsl	x19, x8, #32
   3d7a0:	movk	x10, #0x40, lsl #32
   3d7a4:	cmp	x19, x10
   3d7a8:	b.ge	3d948 <__gmpfr_mpfr_get_sj@@Base+0x2a8>  // b.tcont
   3d7ac:	ldr	w10, [sp, #24]
   3d7b0:	mov	x11, #0x1                   	// #1
   3d7b4:	movk	x11, #0x3f, lsl #32
   3d7b8:	cmp	x19, x11
   3d7bc:	b.ge	3d96c <__gmpfr_mpfr_get_sj@@Base+0x2cc>  // b.tcont
   3d7c0:	ldr	x11, [sp, #16]
   3d7c4:	mov	x19, xzr
   3d7c8:	sub	x12, x11, #0x1
   3d7cc:	add	x11, x11, #0x3e
   3d7d0:	cmp	x12, #0x0
   3d7d4:	csel	x11, x11, x12, lt  // lt = tstop
   3d7d8:	asr	x11, x11, #6
   3d7dc:	cmp	w11, #0x0
   3d7e0:	cset	w12, ge  // ge = tcont
   3d7e4:	cmp	w8, #0x0
   3d7e8:	cset	w13, gt
   3d7ec:	cmp	w10, #0x0
   3d7f0:	and	w10, w13, w12
   3d7f4:	b.le	3d840 <__gmpfr_mpfr_get_sj@@Base+0x1a0>
   3d7f8:	cbz	w10, 3d884 <__gmpfr_mpfr_get_sj@@Base+0x1e4>
   3d7fc:	sxtw	x10, w11
   3d800:	mov	w11, #0x40                  	// #64
   3d804:	sub	w11, w11, w8
   3d808:	ldr	x12, [x24, x10, lsl #3]
   3d80c:	cmp	w8, #0x3f
   3d810:	lsl	x13, x12, x8
   3d814:	lsr	x12, x12, x11
   3d818:	csel	x12, x13, x12, gt
   3d81c:	cmp	w8, #0x41
   3d820:	add	x19, x12, x19
   3d824:	b.lt	3d884 <__gmpfr_mpfr_get_sj@@Base+0x1e4>  // b.tstop
   3d828:	sub	w8, w8, #0x40
   3d82c:	cmp	x10, #0x0
   3d830:	sub	x10, x10, #0x1
   3d834:	add	w11, w11, #0x40
   3d838:	b.gt	3d808 <__gmpfr_mpfr_get_sj@@Base+0x168>
   3d83c:	b	3d884 <__gmpfr_mpfr_get_sj@@Base+0x1e4>
   3d840:	cbz	w10, 3d884 <__gmpfr_mpfr_get_sj@@Base+0x1e4>
   3d844:	sxtw	x10, w11
   3d848:	mov	w11, #0x40                  	// #64
   3d84c:	sub	w11, w11, w8
   3d850:	ldr	x12, [x24, x10, lsl #3]
   3d854:	cmp	w8, #0x3f
   3d858:	lsl	x13, x12, x8
   3d85c:	lsr	x12, x12, x11
   3d860:	csel	x12, x13, x12, gt
   3d864:	cmp	w8, #0x41
   3d868:	sub	x19, x19, x12
   3d86c:	b.lt	3d884 <__gmpfr_mpfr_get_sj@@Base+0x1e4>  // b.tstop
   3d870:	sub	w8, w8, #0x40
   3d874:	cmp	x10, #0x0
   3d878:	sub	x10, x10, #0x1
   3d87c:	add	w11, w11, #0x40
   3d880:	b.gt	3d850 <__gmpfr_mpfr_get_sj@@Base+0x1b0>
   3d884:	add	x0, sp, #0x10
   3d888:	bl	c4f0 <mpfr_clear@plt>
   3d88c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d890:	ldr	x1, [x0, #2800]
   3d894:	add	x0, x0, #0xaf0
   3d898:	blr	x1
   3d89c:	str	w20, [x21, x0]
   3d8a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d8a4:	ldr	x1, [x0, #2736]
   3d8a8:	add	x0, x0, #0xab0
   3d8ac:	blr	x1
   3d8b0:	str	x22, [x21, x0]
   3d8b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d8b8:	ldr	x1, [x0, #2768]
   3d8bc:	add	x0, x0, #0xad0
   3d8c0:	blr	x1
   3d8c4:	str	x23, [x21, x0]
   3d8c8:	mov	x0, x19
   3d8cc:	ldp	x20, x19, [sp, #96]
   3d8d0:	ldp	x22, x21, [sp, #80]
   3d8d4:	ldp	x24, x23, [sp, #64]
   3d8d8:	ldp	x29, x30, [sp, #48]
   3d8dc:	add	sp, sp, #0x70
   3d8e0:	ret
   3d8e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d8e8:	ldr	x1, [x0, #2800]
   3d8ec:	add	x0, x0, #0xaf0
   3d8f0:	blr	x1
   3d8f4:	mrs	x8, tpidr_el0
   3d8f8:	ldr	w9, [x8, x0]
   3d8fc:	orr	w9, w9, #0x10
   3d900:	str	w9, [x8, x0]
   3d904:	ldr	x8, [x19, #16]
   3d908:	mov	x9, #0x2                   	// #2
   3d90c:	movk	x9, #0x8000, lsl #48
   3d910:	cmp	x8, x9
   3d914:	b.eq	3d6d8 <__gmpfr_mpfr_get_sj@@Base+0x38>  // b.none
   3d918:	ldr	w8, [x19, #8]
   3d91c:	cmp	w8, #0x0
   3d920:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d924:	cinv	x19, x8, ge  // ge = tcont
   3d928:	b	3d8c8 <__gmpfr_mpfr_get_sj@@Base+0x228>
   3d92c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3d930:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3d934:	add	x0, x0, #0x4dc
   3d938:	add	x2, x2, #0x4e5
   3d93c:	mov	w1, #0x3e                  	// #62
   3d940:	bl	d030 <mpfr_assert_fail@plt>
   3d944:	b	3d764 <__gmpfr_mpfr_get_sj@@Base+0xc4>
   3d948:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3d94c:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3d950:	add	x0, x0, #0x4dc
   3d954:	add	x2, x2, #0x55c
   3d958:	mov	w1, #0x4b                  	// #75
   3d95c:	str	x8, [sp, #8]
   3d960:	bl	d030 <mpfr_assert_fail@plt>
   3d964:	ldr	x8, [sp, #8]
   3d968:	b	3d7ac <__gmpfr_mpfr_get_sj@@Base+0x10c>
   3d96c:	tbz	w10, #31, 3d984 <__gmpfr_mpfr_get_sj@@Base+0x2e4>
   3d970:	add	x0, sp, #0x10
   3d974:	bl	c360 <mpfr_powerof2_raw@plt>
   3d978:	cbz	w0, 3d984 <__gmpfr_mpfr_get_sj@@Base+0x2e4>
   3d97c:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   3d980:	b	3d884 <__gmpfr_mpfr_get_sj@@Base+0x1e4>
   3d984:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3d988:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3d98c:	add	x0, x0, #0x4dc
   3d990:	add	x2, x2, #0x579
   3d994:	mov	w1, #0x53                  	// #83
   3d998:	bl	d030 <mpfr_assert_fail@plt>
   3d99c:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   3d9a0:	b	3d884 <__gmpfr_mpfr_get_sj@@Base+0x1e4>

000000000003d9a4 <__gmpfr_mpfr_get_uj@@Base>:
   3d9a4:	sub	sp, sp, #0x60
   3d9a8:	stp	x29, x30, [sp, #32]
   3d9ac:	stp	x24, x23, [sp, #48]
   3d9b0:	stp	x22, x21, [sp, #64]
   3d9b4:	stp	x20, x19, [sp, #80]
   3d9b8:	add	x29, sp, #0x20
   3d9bc:	mov	w20, w1
   3d9c0:	mov	x19, x0
   3d9c4:	bl	c480 <mpfr_fits_uintmax_p@plt>
   3d9c8:	cbz	w0, 3db6c <__gmpfr_mpfr_get_uj@@Base+0x1c8>
   3d9cc:	ldr	x8, [x19, #16]
   3d9d0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3d9d4:	cmp	x8, x9
   3d9d8:	b.ne	3d9e4 <__gmpfr_mpfr_get_uj@@Base+0x40>  // b.any
   3d9dc:	mov	x19, xzr
   3d9e0:	b	3db50 <__gmpfr_mpfr_get_uj@@Base+0x1ac>
   3d9e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3d9e8:	ldr	x1, [x0, #2800]
   3d9ec:	add	x0, x0, #0xaf0
   3d9f0:	blr	x1
   3d9f4:	mrs	x21, tpidr_el0
   3d9f8:	ldr	w24, [x21, x0]
   3d9fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3da00:	ldr	x1, [x0, #2736]
   3da04:	add	x0, x0, #0xab0
   3da08:	blr	x1
   3da0c:	ldr	x22, [x21, x0]
   3da10:	mov	x8, x0
   3da14:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3da18:	ldr	x1, [x0, #2768]
   3da1c:	add	x0, x0, #0xad0
   3da20:	blr	x1
   3da24:	ldr	x23, [x21, x0]
   3da28:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3da2c:	str	x9, [x21, x8]
   3da30:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   3da34:	str	x8, [x21, x0]
   3da38:	mov	x0, sp
   3da3c:	mov	w1, #0x40                  	// #64
   3da40:	bl	cf60 <mpfr_init2@plt>
   3da44:	mov	x0, sp
   3da48:	mov	x1, x19
   3da4c:	mov	w2, w20
   3da50:	bl	c7c0 <mpfr_rint@plt>
   3da54:	ldr	x8, [sp, #16]
   3da58:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3da5c:	orr	x8, x8, #0x1
   3da60:	cmp	x8, x9
   3da64:	b.eq	3dbb4 <__gmpfr_mpfr_get_uj@@Base+0x210>  // b.none
   3da68:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3da6c:	ldr	x1, [x0, #2800]
   3da70:	add	x0, x0, #0xaf0
   3da74:	blr	x1
   3da78:	ldr	x8, [sp, #16]
   3da7c:	ldr	w9, [x21, x0]
   3da80:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   3da84:	cmp	x8, x10
   3da88:	orr	w20, w9, w24
   3da8c:	b.ne	3da98 <__gmpfr_mpfr_get_uj@@Base+0xf4>  // b.any
   3da90:	mov	x19, xzr
   3da94:	b	3db0c <__gmpfr_mpfr_get_uj@@Base+0x168>
   3da98:	ldr	w8, [sp, #8]
   3da9c:	cmp	w8, #0x0
   3daa0:	b.le	3dbd0 <__gmpfr_mpfr_get_uj@@Base+0x22c>
   3daa4:	ldr	w9, [sp, #16]
   3daa8:	ldr	x8, [sp, #24]
   3daac:	cmp	w9, #0x41
   3dab0:	b.ge	3dbec <__gmpfr_mpfr_get_uj@@Base+0x248>  // b.tcont
   3dab4:	ldr	x10, [sp]
   3dab8:	mov	x19, xzr
   3dabc:	sub	x11, x10, #0x1
   3dac0:	add	x10, x10, #0x3e
   3dac4:	cmp	x11, #0x0
   3dac8:	csel	x10, x10, x11, lt  // lt = tstop
   3dacc:	asr	x10, x10, #6
   3dad0:	tbnz	w10, #31, 3db0c <__gmpfr_mpfr_get_uj@@Base+0x168>
   3dad4:	mov	w11, #0x40                  	// #64
   3dad8:	sxtw	x10, w10
   3dadc:	sub	w11, w11, w9
   3dae0:	ldr	x12, [x8, x10, lsl #3]
   3dae4:	cmp	w9, #0x3f
   3dae8:	lsl	x13, x12, x9
   3daec:	lsr	x12, x12, x11
   3daf0:	csel	x12, x13, x12, gt
   3daf4:	sub	w9, w9, #0x40
   3daf8:	cmp	x10, #0x0
   3dafc:	sub	x10, x10, #0x1
   3db00:	add	x19, x12, x19
   3db04:	add	w11, w11, #0x40
   3db08:	b.gt	3dae0 <__gmpfr_mpfr_get_uj@@Base+0x13c>
   3db0c:	mov	x0, sp
   3db10:	bl	c4f0 <mpfr_clear@plt>
   3db14:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3db18:	ldr	x1, [x0, #2800]
   3db1c:	add	x0, x0, #0xaf0
   3db20:	blr	x1
   3db24:	str	w20, [x21, x0]
   3db28:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3db2c:	ldr	x1, [x0, #2736]
   3db30:	add	x0, x0, #0xab0
   3db34:	blr	x1
   3db38:	str	x22, [x21, x0]
   3db3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3db40:	ldr	x1, [x0, #2768]
   3db44:	add	x0, x0, #0xad0
   3db48:	blr	x1
   3db4c:	str	x23, [x21, x0]
   3db50:	mov	x0, x19
   3db54:	ldp	x20, x19, [sp, #80]
   3db58:	ldp	x22, x21, [sp, #64]
   3db5c:	ldp	x24, x23, [sp, #48]
   3db60:	ldp	x29, x30, [sp, #32]
   3db64:	add	sp, sp, #0x60
   3db68:	ret
   3db6c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3db70:	ldr	x1, [x0, #2800]
   3db74:	add	x0, x0, #0xaf0
   3db78:	blr	x1
   3db7c:	mrs	x8, tpidr_el0
   3db80:	ldr	w9, [x8, x0]
   3db84:	orr	w9, w9, #0x10
   3db88:	str	w9, [x8, x0]
   3db8c:	ldr	x8, [x19, #16]
   3db90:	mov	x9, #0x2                   	// #2
   3db94:	movk	x9, #0x8000, lsl #48
   3db98:	cmp	x8, x9
   3db9c:	b.eq	3d9dc <__gmpfr_mpfr_get_uj@@Base+0x38>  // b.none
   3dba0:	ldr	w8, [x19, #8]
   3dba4:	mov	w9, #0xffffffff            	// #-1
   3dba8:	eor	w8, w9, w8, asr #31
   3dbac:	sxtw	x19, w8
   3dbb0:	b	3db50 <__gmpfr_mpfr_get_uj@@Base+0x1ac>
   3dbb4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3dbb8:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3dbbc:	add	x0, x0, #0x5aa
   3dbc0:	add	x2, x2, #0x4e5
   3dbc4:	mov	w1, #0x3c                  	// #60
   3dbc8:	bl	d030 <mpfr_assert_fail@plt>
   3dbcc:	b	3da68 <__gmpfr_mpfr_get_uj@@Base+0xc4>
   3dbd0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3dbd4:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3dbd8:	add	x0, x0, #0x5aa
   3dbdc:	add	x2, x2, #0x5b3
   3dbe0:	mov	w1, #0x47                  	// #71
   3dbe4:	bl	d030 <mpfr_assert_fail@plt>
   3dbe8:	b	3daa4 <__gmpfr_mpfr_get_uj@@Base+0x100>
   3dbec:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3dbf0:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3dbf4:	add	x0, x0, #0x5aa
   3dbf8:	add	x2, x2, #0x5cb
   3dbfc:	mov	w1, #0x4a                  	// #74
   3dc00:	mov	x19, x8
   3dc04:	mov	x24, x9
   3dc08:	bl	d030 <mpfr_assert_fail@plt>
   3dc0c:	mov	x9, x24
   3dc10:	mov	x8, x19
   3dc14:	b	3dab4 <__gmpfr_mpfr_get_uj@@Base+0x110>

000000000003dc18 <mpfr_get_z@@Base>:
   3dc18:	sub	sp, sp, #0x70
   3dc1c:	stp	x29, x30, [sp, #32]
   3dc20:	stp	x26, x25, [sp, #48]
   3dc24:	stp	x24, x23, [sp, #64]
   3dc28:	stp	x22, x21, [sp, #80]
   3dc2c:	stp	x20, x19, [sp, #96]
   3dc30:	ldr	x26, [x1, #16]
   3dc34:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3dc38:	mov	x19, x0
   3dc3c:	add	x29, sp, #0x20
   3dc40:	cmp	x26, x8
   3dc44:	b.le	3ddc0 <mpfr_get_z@@Base+0x1a8>
   3dc48:	mov	w20, w2
   3dc4c:	mov	x21, x1
   3dc50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3dc54:	ldr	x1, [x0, #2800]
   3dc58:	add	x0, x0, #0xaf0
   3dc5c:	blr	x1
   3dc60:	mrs	x22, tpidr_el0
   3dc64:	ldr	w25, [x22, x0]
   3dc68:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3dc6c:	ldr	x1, [x0, #2736]
   3dc70:	add	x0, x0, #0xab0
   3dc74:	blr	x1
   3dc78:	ldr	x23, [x22, x0]
   3dc7c:	mov	x8, x0
   3dc80:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3dc84:	ldr	x1, [x0, #2768]
   3dc88:	add	x0, x0, #0xad0
   3dc8c:	blr	x1
   3dc90:	ldr	x24, [x22, x0]
   3dc94:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3dc98:	str	x9, [x22, x8]
   3dc9c:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   3dca0:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   3dca4:	cmp	x26, x8
   3dca8:	str	x10, [x22, x0]
   3dcac:	b.ge	3dde0 <mpfr_get_z@@Base+0x1c8>  // b.tcont
   3dcb0:	cmp	x26, #0x1
   3dcb4:	csinc	x1, x26, xzr, gt
   3dcb8:	mov	x0, sp
   3dcbc:	bl	cf60 <mpfr_init2@plt>
   3dcc0:	mov	x0, sp
   3dcc4:	mov	x1, x21
   3dcc8:	mov	w2, w20
   3dccc:	bl	c7c0 <mpfr_rint@plt>
   3dcd0:	mov	w20, w0
   3dcd4:	cmp	w0, #0x1
   3dcd8:	b.eq	3dce4 <mpfr_get_z@@Base+0xcc>  // b.none
   3dcdc:	cmn	w20, #0x1
   3dce0:	b.ne	3dcfc <mpfr_get_z@@Base+0xe4>  // b.any
   3dce4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3dce8:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3dcec:	add	x0, x0, #0x5e4
   3dcf0:	add	x2, x2, #0x631
   3dcf4:	mov	w1, #0x35                  	// #53
   3dcf8:	bl	d030 <mpfr_assert_fail@plt>
   3dcfc:	ldr	x8, [sp, #16]
   3dd00:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3dd04:	orr	x8, x8, #0x1
   3dd08:	cmp	x8, x9
   3dd0c:	b.eq	3ddfc <mpfr_get_z@@Base+0x1e4>  // b.none
   3dd10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3dd14:	ldr	x1, [x0, #2800]
   3dd18:	add	x0, x0, #0xaf0
   3dd1c:	blr	x1
   3dd20:	ldr	w8, [x22, x0]
   3dd24:	mov	x1, sp
   3dd28:	mov	x0, x19
   3dd2c:	orr	w21, w8, w25
   3dd30:	bl	cfb0 <mpfr_get_z_2exp@plt>
   3dd34:	mov	x2, x0
   3dd38:	tbnz	x0, #63, 3dd4c <mpfr_get_z@@Base+0x134>
   3dd3c:	mov	x0, x19
   3dd40:	mov	x1, x19
   3dd44:	bl	c6a0 <__gmpz_mul_2exp@plt>
   3dd48:	b	3dd5c <mpfr_get_z@@Base+0x144>
   3dd4c:	neg	x2, x2
   3dd50:	mov	x0, x19
   3dd54:	mov	x1, x19
   3dd58:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   3dd5c:	mov	x0, sp
   3dd60:	bl	c4f0 <mpfr_clear@plt>
   3dd64:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3dd68:	ldr	x1, [x0, #2800]
   3dd6c:	add	x0, x0, #0xaf0
   3dd70:	blr	x1
   3dd74:	str	w21, [x22, x0]
   3dd78:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3dd7c:	ldr	x1, [x0, #2736]
   3dd80:	add	x0, x0, #0xab0
   3dd84:	blr	x1
   3dd88:	str	x23, [x22, x0]
   3dd8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3dd90:	ldr	x1, [x0, #2768]
   3dd94:	add	x0, x0, #0xad0
   3dd98:	blr	x1
   3dd9c:	str	x24, [x22, x0]
   3dda0:	mov	w0, w20
   3dda4:	ldp	x20, x19, [sp, #96]
   3dda8:	ldp	x22, x21, [sp, #80]
   3ddac:	ldp	x24, x23, [sp, #64]
   3ddb0:	ldp	x26, x25, [sp, #48]
   3ddb4:	ldp	x29, x30, [sp, #32]
   3ddb8:	add	sp, sp, #0x70
   3ddbc:	ret
   3ddc0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3ddc4:	cmp	x26, x8
   3ddc8:	b.ne	3de18 <mpfr_get_z@@Base+0x200>  // b.any
   3ddcc:	mov	x0, x19
   3ddd0:	mov	x1, xzr
   3ddd4:	bl	c110 <__gmpz_set_ui@plt>
   3ddd8:	mov	w20, wzr
   3dddc:	b	3dda0 <mpfr_get_z@@Base+0x188>
   3dde0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3dde4:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3dde8:	add	x0, x0, #0x5e4
   3ddec:	add	x2, x2, #0x5ec
   3ddf0:	mov	w1, #0x31                  	// #49
   3ddf4:	bl	d030 <mpfr_assert_fail@plt>
   3ddf8:	b	3dcb0 <mpfr_get_z@@Base+0x98>
   3ddfc:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3de00:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3de04:	add	x0, x0, #0x5e4
   3de08:	add	x2, x2, #0x649
   3de0c:	mov	w1, #0x37                  	// #55
   3de10:	bl	d030 <mpfr_assert_fail@plt>
   3de14:	b	3dd10 <mpfr_get_z@@Base+0xf8>
   3de18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3de1c:	ldr	x1, [x0, #2800]
   3de20:	add	x0, x0, #0xaf0
   3de24:	blr	x1
   3de28:	mrs	x8, tpidr_el0
   3de2c:	ldr	w9, [x8, x0]
   3de30:	orr	w9, w9, #0x10
   3de34:	str	w9, [x8, x0]
   3de38:	b	3ddcc <mpfr_get_z@@Base+0x1b4>

000000000003de3c <mpfr_zero_p@@Base>:
   3de3c:	ldr	x8, [x0, #16]
   3de40:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3de44:	cmp	x8, x9
   3de48:	cset	w0, eq  // eq = none
   3de4c:	ret

000000000003de50 <mpfr_clear_cache@@Base>:
   3de50:	stp	x29, x30, [sp, #-32]!
   3de54:	ldr	x8, [x0]
   3de58:	str	x19, [sp, #16]
   3de5c:	mov	x29, sp
   3de60:	cbnz	x8, 3de70 <mpfr_clear_cache@@Base+0x20>
   3de64:	ldr	x19, [sp, #16]
   3de68:	ldp	x29, x30, [sp], #32
   3de6c:	ret
   3de70:	mov	x19, x0
   3de74:	bl	c4f0 <mpfr_clear@plt>
   3de78:	str	xzr, [x19]
   3de7c:	b	3de64 <mpfr_clear_cache@@Base+0x14>

000000000003de80 <mpfr_cache@@Base>:
   3de80:	sub	sp, sp, #0x70
   3de84:	stp	x29, x30, [sp, #16]
   3de88:	stp	x28, x27, [sp, #32]
   3de8c:	stp	x26, x25, [sp, #48]
   3de90:	stp	x24, x23, [sp, #64]
   3de94:	stp	x22, x21, [sp, #80]
   3de98:	stp	x20, x19, [sp, #96]
   3de9c:	ldr	x22, [x0]
   3dea0:	add	x29, sp, #0x10
   3dea4:	mov	w19, w2
   3dea8:	mov	x20, x0
   3deac:	mov	x21, x1
   3deb0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3deb4:	ldr	x1, [x0, #2800]
   3deb8:	add	x0, x0, #0xaf0
   3debc:	blr	x1
   3dec0:	mrs	x25, tpidr_el0
   3dec4:	ldr	w15, [x25, x0]
   3dec8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3decc:	ldr	x1, [x0, #2736]
   3ded0:	add	x0, x0, #0xab0
   3ded4:	blr	x1
   3ded8:	ldr	x27, [x25, x0]
   3dedc:	mov	x8, x0
   3dee0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3dee4:	ldr	x1, [x0, #2768]
   3dee8:	add	x0, x0, #0xad0
   3deec:	blr	x1
   3def0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3def4:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   3def8:	ldr	x28, [x25, x0]
   3defc:	str	x9, [x25, x8]
   3df00:	str	x10, [x25, x0]
   3df04:	ldr	x24, [x21]
   3df08:	cmp	x22, x24
   3df0c:	b.gt	3e1a0 <mpfr_cache@@Base+0x320>
   3df10:	ldr	w8, [x21, #8]
   3df14:	cmp	w8, #0x0
   3df18:	b.le	3e1f0 <mpfr_cache@@Base+0x370>
   3df1c:	ldr	x9, [x21, #16]
   3df20:	ldr	x8, [x20]
   3df24:	sub	x10, x24, #0x1
   3df28:	add	x11, x24, #0x3e
   3df2c:	cmp	x10, #0x0
   3df30:	ldr	w22, [x21, #8]
   3df34:	csel	x10, x11, x10, lt  // lt = tstop
   3df38:	str	x9, [x20, #16]
   3df3c:	sub	x9, x8, #0x1
   3df40:	ldr	x23, [x20, #24]
   3df44:	asr	x11, x10, #6
   3df48:	add	x10, x8, #0x3e
   3df4c:	cmp	x9, #0x0
   3df50:	csel	x9, x10, x9, lt  // lt = tstop
   3df54:	asr	x26, x9, #6
   3df58:	add	x12, x11, #0x1
   3df5c:	cmp	x8, x24
   3df60:	add	x2, x26, #0x1
   3df64:	str	w22, [x20, #8]
   3df68:	b.ge	3e214 <mpfr_cache@@Base+0x394>  // b.tcont
   3df6c:	ldr	x10, [x21, #24]
   3df70:	neg	w8, w8
   3df74:	mvn	x13, x26
   3df78:	ands	x8, x8, #0x3f
   3df7c:	add	x9, x10, x12, lsl #3
   3df80:	add	x1, x9, x13, lsl #3
   3df84:	b.eq	3e270 <mpfr_cache@@Base+0x3f0>  // b.none
   3df88:	ldr	x9, [x1]
   3df8c:	sub	x8, x8, #0x1
   3df90:	mov	w13, #0x1                   	// #1
   3df94:	lsl	x13, x13, x8
   3df98:	sub	x14, x13, #0x1
   3df9c:	and	x8, x9, x13
   3dfa0:	and	x9, x9, x14
   3dfa4:	cbz	w19, 3dfac <mpfr_cache@@Base+0x12c>
   3dfa8:	cbnz	x8, 3dfd4 <mpfr_cache@@Base+0x154>
   3dfac:	cbnz	x9, 3dfd4 <mpfr_cache@@Base+0x154>
   3dfb0:	sub	x12, x12, x2
   3dfb4:	cbz	x12, 3dfd4 <mpfr_cache@@Base+0x154>
   3dfb8:	mvn	x9, x26
   3dfbc:	add	x11, x9, x11
   3dfc0:	ldr	x9, [x10, x11, lsl #3]
   3dfc4:	subs	x11, x11, #0x1
   3dfc8:	cset	w12, cs  // cs = hs, nlast
   3dfcc:	cbnz	x9, 3dfd4 <mpfr_cache@@Base+0x154>
   3dfd0:	tbnz	w12, #0, 3dfc0 <mpfr_cache@@Base+0x140>
   3dfd4:	lsl	x24, x13, #1
   3dfd8:	cmp	w19, #0x5
   3dfdc:	b.eq	3e068 <mpfr_cache@@Base+0x1e8>  // b.none
   3dfe0:	cmp	w19, #0x1
   3dfe4:	b.eq	3e01c <mpfr_cache@@Base+0x19c>  // b.none
   3dfe8:	cbnz	w19, 3e010 <mpfr_cache@@Base+0x190>
   3dfec:	cbz	x8, 3e01c <mpfr_cache@@Base+0x19c>
   3dff0:	cbnz	x9, 3e03c <mpfr_cache@@Base+0x1bc>
   3dff4:	ldr	w8, [x21, #32]
   3dff8:	cbz	w8, 3e314 <mpfr_cache@@Base+0x494>
   3dffc:	tbnz	w8, #31, 3e03c <mpfr_cache@@Base+0x1bc>
   3e000:	neg	w22, w22
   3e004:	cmp	x23, x1
   3e008:	b.ne	3e074 <mpfr_cache@@Base+0x1f4>  // b.any
   3e00c:	b	3e088 <mpfr_cache@@Base+0x208>
   3e010:	add	w10, w19, w22, lsr #31
   3e014:	cmp	w10, #0x3
   3e018:	b.ne	3e034 <mpfr_cache@@Base+0x1b4>  // b.any
   3e01c:	orr	x8, x9, x8
   3e020:	cmp	x8, #0x0
   3e024:	csneg	w22, wzr, w22, eq  // eq = none
   3e028:	cmp	x23, x1
   3e02c:	b.ne	3e074 <mpfr_cache@@Base+0x1f4>  // b.any
   3e030:	b	3e088 <mpfr_cache@@Base+0x208>
   3e034:	orr	x8, x9, x8
   3e038:	cbz	x8, 3e068 <mpfr_cache@@Base+0x1e8>
   3e03c:	mov	x0, x23
   3e040:	mov	x3, x24
   3e044:	str	x28, [sp, #8]
   3e048:	mov	x28, x27
   3e04c:	mov	w27, w15
   3e050:	bl	bf60 <__gmpn_add_1@plt>
   3e054:	cbnz	x0, 3e2c0 <mpfr_cache@@Base+0x440>
   3e058:	mov	w15, w27
   3e05c:	mov	x27, x28
   3e060:	ldr	x28, [sp, #8]
   3e064:	b	3e088 <mpfr_cache@@Base+0x208>
   3e068:	mov	w22, wzr
   3e06c:	cmp	x23, x1
   3e070:	b.eq	3e088 <mpfr_cache@@Base+0x208>  // b.none
   3e074:	lsl	x2, x2, #3
   3e078:	mov	x0, x23
   3e07c:	mov	w26, w15
   3e080:	bl	be50 <memcpy@plt>
   3e084:	mov	w15, w26
   3e088:	ldr	x8, [x23]
   3e08c:	neg	x9, x24
   3e090:	and	x8, x8, x9
   3e094:	str	x8, [x23]
   3e098:	ldr	w21, [x21, #32]
   3e09c:	cbz	w21, 3e110 <mpfr_cache@@Base+0x290>
   3e0a0:	sub	w8, w19, #0x1
   3e0a4:	cmp	w8, #0x3
   3e0a8:	b.hi	3e108 <mpfr_cache@@Base+0x288>  // b.pmore
   3e0ac:	adrp	x9, 60000 <mpfr_bases@@Base+0x408>
   3e0b0:	add	x9, x9, #0x6c0
   3e0b4:	adr	x10, 3e0c4 <mpfr_cache@@Base+0x244>
   3e0b8:	ldrb	w11, [x9, x8]
   3e0bc:	add	x10, x10, x11, lsl #2
   3e0c0:	br	x10
   3e0c4:	cbnz	w22, 3e110 <mpfr_cache@@Base+0x290>
   3e0c8:	cmp	w21, #0x1
   3e0cc:	mov	w22, w21
   3e0d0:	b.lt	3e110 <mpfr_cache@@Base+0x290>  // b.tstop
   3e0d4:	mov	x0, x20
   3e0d8:	mov	w22, w15
   3e0dc:	bl	c230 <mpfr_nextbelow@plt>
   3e0e0:	b	3e0fc <mpfr_cache@@Base+0x27c>
   3e0e4:	cbnz	w22, 3e110 <mpfr_cache@@Base+0x290>
   3e0e8:	mov	w22, w21
   3e0ec:	tbz	w21, #31, 3e110 <mpfr_cache@@Base+0x290>
   3e0f0:	mov	x0, x20
   3e0f4:	mov	w22, w15
   3e0f8:	bl	c5c0 <mpfr_nextabove@plt>
   3e0fc:	mov	w15, w22
   3e100:	neg	w22, w21
   3e104:	b	3e110 <mpfr_cache@@Base+0x290>
   3e108:	cmp	w22, #0x0
   3e10c:	csel	w22, w21, w22, eq  // eq = none
   3e110:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e114:	ldr	x1, [x0, #2800]
   3e118:	add	x0, x0, #0xaf0
   3e11c:	blr	x1
   3e120:	str	w15, [x25, x0]
   3e124:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e128:	ldr	x1, [x0, #2736]
   3e12c:	add	x0, x0, #0xab0
   3e130:	blr	x1
   3e134:	str	x27, [x25, x0]
   3e138:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e13c:	ldr	x1, [x0, #2768]
   3e140:	add	x0, x0, #0xad0
   3e144:	blr	x1
   3e148:	str	x28, [x25, x0]
   3e14c:	ldr	x8, [x20, #16]
   3e150:	cmp	x8, x28
   3e154:	b.gt	3e258 <mpfr_cache@@Base+0x3d8>
   3e158:	cmp	x8, x27
   3e15c:	b.lt	3e258 <mpfr_cache@@Base+0x3d8>  // b.tstop
   3e160:	cbz	w22, 3e17c <mpfr_cache@@Base+0x2fc>
   3e164:	orr	w8, w15, #0x8
   3e168:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e16c:	ldr	x1, [x0, #2800]
   3e170:	add	x0, x0, #0xaf0
   3e174:	blr	x1
   3e178:	str	w8, [x25, x0]
   3e17c:	mov	w0, w22
   3e180:	ldp	x20, x19, [sp, #96]
   3e184:	ldp	x22, x21, [sp, #80]
   3e188:	ldp	x24, x23, [sp, #64]
   3e18c:	ldp	x26, x25, [sp, #48]
   3e190:	ldp	x28, x27, [sp, #32]
   3e194:	ldp	x29, x30, [sp, #16]
   3e198:	add	sp, sp, #0x70
   3e19c:	ret
   3e1a0:	mov	w23, w15
   3e1a4:	cbz	x24, 3e304 <mpfr_cache@@Base+0x484>
   3e1a8:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   3e1ac:	movk	x8, #0x6667
   3e1b0:	smulh	x8, x24, x8
   3e1b4:	asr	x9, x8, #2
   3e1b8:	add	x8, x9, x8, lsr #63
   3e1bc:	add	x24, x8, x24
   3e1c0:	cmp	x24, x22
   3e1c4:	csel	x24, x22, x24, lt  // lt = tstop
   3e1c8:	mov	x0, x21
   3e1cc:	mov	x1, x24
   3e1d0:	bl	c330 <mpfr_set_prec@plt>
   3e1d4:	ldr	x8, [x21, #40]
   3e1d8:	mov	x0, x21
   3e1dc:	mov	w1, wzr
   3e1e0:	blr	x8
   3e1e4:	mov	w15, w23
   3e1e8:	str	w0, [x21, #32]
   3e1ec:	b	3df10 <mpfr_cache@@Base+0x90>
   3e1f0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3e1f4:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3e1f8:	add	x0, x0, #0x6c4
   3e1fc:	add	x2, x2, #0x6cc
   3e200:	mov	w1, #0x76                  	// #118
   3e204:	mov	w22, w15
   3e208:	bl	d030 <mpfr_assert_fail@plt>
   3e20c:	mov	w15, w22
   3e210:	b	3df1c <mpfr_cache@@Base+0x9c>
   3e214:	ldr	x1, [x21, #24]
   3e218:	sub	x22, x2, x12
   3e21c:	add	x0, x23, x22, lsl #3
   3e220:	mov	w24, w15
   3e224:	cmp	x0, x1
   3e228:	b.eq	3e234 <mpfr_cache@@Base+0x3b4>  // b.none
   3e22c:	lsl	x2, x12, #3
   3e230:	bl	be50 <memcpy@plt>
   3e234:	lsl	x2, x22, #3
   3e238:	mov	x0, x23
   3e23c:	mov	w1, wzr
   3e240:	bl	c5b0 <memset@plt>
   3e244:	mov	w22, wzr
   3e248:	mov	w15, w24
   3e24c:	ldr	w21, [x21, #32]
   3e250:	cbnz	w21, 3e0a0 <mpfr_cache@@Base+0x220>
   3e254:	b	3e110 <mpfr_cache@@Base+0x290>
   3e258:	mov	x0, x20
   3e25c:	mov	w1, w22
   3e260:	mov	w2, w19
   3e264:	bl	d020 <mpfr_check_range@plt>
   3e268:	mov	w22, w0
   3e26c:	b	3e17c <mpfr_cache@@Base+0x2fc>
   3e270:	ldur	x9, [x1, #-8]
   3e274:	and	x8, x9, #0x8000000000000000
   3e278:	and	x9, x9, #0x7fffffffffffffff
   3e27c:	cbz	w19, 3e28c <mpfr_cache@@Base+0x40c>
   3e280:	cbz	x8, 3e28c <mpfr_cache@@Base+0x40c>
   3e284:	mov	w24, #0x1                   	// #1
   3e288:	b	3dfd8 <mpfr_cache@@Base+0x158>
   3e28c:	mov	w24, #0x1                   	// #1
   3e290:	cbnz	x9, 3dfd8 <mpfr_cache@@Base+0x158>
   3e294:	sub	x12, x11, x2
   3e298:	cbz	x12, 3dfd8 <mpfr_cache@@Base+0x158>
   3e29c:	sub	x9, x11, x26
   3e2a0:	sub	x11, x9, #0x2
   3e2a4:	mov	w24, #0x1                   	// #1
   3e2a8:	ldr	x9, [x10, x11, lsl #3]
   3e2ac:	subs	x11, x11, #0x1
   3e2b0:	cset	w12, cs  // cs = hs, nlast
   3e2b4:	cbnz	x9, 3dfd8 <mpfr_cache@@Base+0x158>
   3e2b8:	tbnz	w12, #0, 3e2a8 <mpfr_cache@@Base+0x428>
   3e2bc:	b	3dfd8 <mpfr_cache@@Base+0x158>
   3e2c0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3e2c4:	str	x8, [x23, x26, lsl #3]
   3e2c8:	ldr	x8, [x20, #16]
   3e2cc:	add	x9, x8, #0x1
   3e2d0:	str	x9, [x20, #16]
   3e2d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e2d8:	ldr	x1, [x0, #2768]
   3e2dc:	add	x0, x0, #0xad0
   3e2e0:	blr	x1
   3e2e4:	ldr	x9, [x25, x0]
   3e2e8:	cmp	x8, x9
   3e2ec:	b.lt	3e058 <mpfr_cache@@Base+0x1d8>  // b.tstop
   3e2f0:	mov	x0, x20
   3e2f4:	mov	w1, w19
   3e2f8:	mov	w2, w22
   3e2fc:	bl	c3a0 <mpfr_overflow@plt>
   3e300:	b	3e058 <mpfr_cache@@Base+0x1d8>
   3e304:	mov	x0, x21
   3e308:	mov	x1, x22
   3e30c:	bl	cf60 <mpfr_init2@plt>
   3e310:	b	3e1c0 <mpfr_cache@@Base+0x340>
   3e314:	ldr	x8, [x1]
   3e318:	tst	x8, x24
   3e31c:	b.ne	3e03c <mpfr_cache@@Base+0x1bc>  // b.any
   3e320:	b	3e000 <mpfr_cache@@Base+0x180>

000000000003e324 <mpfr_sqr@@Base>:
   3e324:	stp	x29, x30, [sp, #-96]!
   3e328:	stp	x28, x27, [sp, #16]
   3e32c:	stp	x26, x25, [sp, #32]
   3e330:	stp	x24, x23, [sp, #48]
   3e334:	stp	x22, x21, [sp, #64]
   3e338:	stp	x20, x19, [sp, #80]
   3e33c:	mov	x29, sp
   3e340:	sub	sp, sp, #0x10
   3e344:	ldr	x26, [x1, #16]
   3e348:	mov	x8, #0x2                   	// #2
   3e34c:	movk	x8, #0x8000, lsl #48
   3e350:	add	x9, x8, #0x2
   3e354:	cmp	x26, x9
   3e358:	mov	x19, x0
   3e35c:	b.lt	3e594 <mpfr_sqr@@Base+0x270>  // b.tstop
   3e360:	ldr	x22, [x19]
   3e364:	ldr	x8, [x1]
   3e368:	mov	w20, w2
   3e36c:	mov	x21, x1
   3e370:	cmp	x22, #0x3f
   3e374:	b.gt	3e39c <mpfr_sqr@@Base+0x78>
   3e378:	cmp	x8, #0x40
   3e37c:	b.gt	3e39c <mpfr_sqr@@Base+0x78>
   3e380:	mov	x0, x19
   3e384:	mov	x1, x21
   3e388:	mov	w2, w20
   3e38c:	mov	x3, x22
   3e390:	bl	3e6e4 <mpfr_sqr@@Base+0x3c0>
   3e394:	mov	w8, w0
   3e398:	b	3e570 <mpfr_sqr@@Base+0x24c>
   3e39c:	sub	x9, x22, #0x41
   3e3a0:	cmp	x9, #0x3e
   3e3a4:	b.hi	3e3d0 <mpfr_sqr@@Base+0xac>  // b.pmore
   3e3a8:	sub	x9, x8, #0x41
   3e3ac:	cmp	x9, #0x3f
   3e3b0:	b.hi	3e3d0 <mpfr_sqr@@Base+0xac>  // b.pmore
   3e3b4:	mov	x0, x19
   3e3b8:	mov	x1, x21
   3e3bc:	mov	w2, w20
   3e3c0:	mov	x3, x22
   3e3c4:	bl	3e8ec <mpfr_sqr@@Base+0x5c8>
   3e3c8:	mov	w8, w0
   3e3cc:	b	3e570 <mpfr_sqr@@Base+0x24c>
   3e3d0:	cmp	x22, #0x40
   3e3d4:	b.ne	3e3f8 <mpfr_sqr@@Base+0xd4>  // b.any
   3e3d8:	cmp	x8, #0x40
   3e3dc:	b.gt	3e3f8 <mpfr_sqr@@Base+0xd4>
   3e3e0:	mov	x0, x19
   3e3e4:	mov	x1, x21
   3e3e8:	mov	w2, w20
   3e3ec:	bl	3eb78 <mpfr_sqr@@Base+0x854>
   3e3f0:	mov	w8, w0
   3e3f4:	b	3e570 <mpfr_sqr@@Base+0x24c>
   3e3f8:	sub	x9, x22, #0x81
   3e3fc:	cmp	x9, #0x3e
   3e400:	b.hi	3e42c <mpfr_sqr@@Base+0x108>  // b.pmore
   3e404:	sub	x9, x8, #0x81
   3e408:	cmp	x9, #0x3f
   3e40c:	b.hi	3e42c <mpfr_sqr@@Base+0x108>  // b.pmore
   3e410:	mov	x0, x19
   3e414:	mov	x1, x21
   3e418:	mov	w2, w20
   3e41c:	mov	x3, x22
   3e420:	bl	3ed40 <mpfr_sqr@@Base+0xa1c>
   3e424:	mov	w8, w0
   3e428:	b	3e570 <mpfr_sqr@@Base+0x24c>
   3e42c:	lsl	x23, x8, #1
   3e430:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   3e434:	cmp	x23, x8
   3e438:	b.cs	3e5ec <mpfr_sqr@@Base+0x2c8>  // b.hs, b.nlast
   3e43c:	ldr	x10, [x21]
   3e440:	sub	x8, x23, #0x1
   3e444:	add	x11, x23, #0x3e
   3e448:	sub	x9, x10, #0x1
   3e44c:	add	x12, x10, #0x3e
   3e450:	cmp	x9, #0x0
   3e454:	csel	x9, x12, x9, lt  // lt = tstop
   3e458:	cmp	x8, #0x0
   3e45c:	csel	x8, x11, x8, lt  // lt = tstop
   3e460:	cmp	x10, #0x501
   3e464:	b.ge	3e608 <mpfr_sqr@@Base+0x2e4>  // b.tcont
   3e468:	asr	x9, x9, #6
   3e46c:	add	x2, x9, #0x1
   3e470:	asr	x8, x8, #6
   3e474:	lsl	x1, x2, #4
   3e478:	add	x24, x8, #0x1
   3e47c:	cmp	x1, #0x4, lsl #12
   3e480:	lsl	x28, x2, #1
   3e484:	stur	xzr, [x29, #-16]
   3e488:	b.hi	3e624 <mpfr_sqr@@Base+0x300>  // b.pmore
   3e48c:	add	x9, x1, #0xf
   3e490:	mov	x8, sp
   3e494:	and	x9, x9, #0xfffffffffffffff0
   3e498:	sub	x25, x8, x9
   3e49c:	mov	sp, x25
   3e4a0:	ldr	x1, [x21, #24]
   3e4a4:	mov	x0, x25
   3e4a8:	bl	c870 <__gmpn_sqr@plt>
   3e4ac:	add	x8, x25, x28, lsl #3
   3e4b0:	ldur	x27, [x8, #-8]
   3e4b4:	sub	x8, x28, x24
   3e4b8:	add	x1, x25, x8, lsl #3
   3e4bc:	tbz	x27, #63, 3e63c <mpfr_sqr@@Base+0x318>
   3e4c0:	ldr	x0, [x19, #24]
   3e4c4:	sub	x6, x29, #0x4
   3e4c8:	mov	x2, x23
   3e4cc:	mov	w3, wzr
   3e4d0:	mov	x4, x22
   3e4d4:	mov	w5, w20
   3e4d8:	bl	cf10 <mpfr_round_raw@plt>
   3e4dc:	mov	w22, w0
   3e4e0:	cbnz	w0, 3e658 <mpfr_sqr@@Base+0x334>
   3e4e4:	ldur	x0, [x29, #-16]
   3e4e8:	lsl	x23, x26, #1
   3e4ec:	lsr	x24, x27, #63
   3e4f0:	cbnz	x0, 3e680 <mpfr_sqr@@Base+0x35c>
   3e4f4:	add	x8, x23, x24
   3e4f8:	add	x8, x8, w22, sxtw
   3e4fc:	sub	x8, x8, #0x1
   3e500:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e504:	ldr	x1, [x0, #2768]
   3e508:	add	x0, x0, #0xad0
   3e50c:	blr	x1
   3e510:	mrs	x22, tpidr_el0
   3e514:	ldr	x9, [x22, x0]
   3e518:	cmp	x8, x9
   3e51c:	b.gt	3e688 <mpfr_sqr@@Base+0x364>
   3e520:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e524:	ldr	x1, [x0, #2736]
   3e528:	add	x0, x0, #0xab0
   3e52c:	blr	x1
   3e530:	ldr	x9, [x22, x0]
   3e534:	cmp	x8, x9
   3e538:	b.lt	3e69c <mpfr_sqr@@Base+0x378>  // b.tstop
   3e53c:	mov	w9, #0x1                   	// #1
   3e540:	str	x8, [x19, #16]
   3e544:	str	w9, [x19, #8]
   3e548:	cbz	w9, 3e570 <mpfr_sqr@@Base+0x24c>
   3e54c:	ldur	w8, [x29, #-4]
   3e550:	cbz	w8, 3e570 <mpfr_sqr@@Base+0x24c>
   3e554:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e558:	ldr	x1, [x0, #2800]
   3e55c:	add	x0, x0, #0xaf0
   3e560:	blr	x1
   3e564:	ldr	w9, [x22, x0]
   3e568:	orr	w9, w9, #0x8
   3e56c:	str	w9, [x22, x0]
   3e570:	mov	w0, w8
   3e574:	mov	sp, x29
   3e578:	ldp	x20, x19, [sp, #80]
   3e57c:	ldp	x22, x21, [sp, #64]
   3e580:	ldp	x24, x23, [sp, #48]
   3e584:	ldp	x26, x25, [sp, #32]
   3e588:	ldp	x28, x27, [sp, #16]
   3e58c:	ldp	x29, x30, [sp], #96
   3e590:	ret
   3e594:	cmp	x26, x8
   3e598:	b.ne	3e5c8 <mpfr_sqr@@Base+0x2a4>  // b.any
   3e59c:	str	x8, [x19, #16]
   3e5a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e5a4:	ldr	x1, [x0, #2800]
   3e5a8:	add	x0, x0, #0xaf0
   3e5ac:	blr	x1
   3e5b0:	mrs	x9, tpidr_el0
   3e5b4:	ldr	w10, [x9, x0]
   3e5b8:	mov	w8, wzr
   3e5bc:	orr	w10, w10, #0x4
   3e5c0:	str	w10, [x9, x0]
   3e5c4:	b	3e570 <mpfr_sqr@@Base+0x24c>
   3e5c8:	mov	w9, #0x1                   	// #1
   3e5cc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   3e5d0:	str	w9, [x19, #8]
   3e5d4:	cmp	x26, x10
   3e5d8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3e5dc:	csel	x9, x26, x9, eq  // eq = none
   3e5e0:	mov	w8, wzr
   3e5e4:	str	x9, [x19, #16]
   3e5e8:	b	3e570 <mpfr_sqr@@Base+0x24c>
   3e5ec:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3e5f0:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3e5f4:	add	x0, x0, #0x6eb
   3e5f8:	add	x2, x2, #0x6f1
   3e5fc:	mov	w1, #0x22a                 	// #554
   3e600:	bl	d030 <mpfr_assert_fail@plt>
   3e604:	b	3e43c <mpfr_sqr@@Base+0x118>
   3e608:	mov	x0, x19
   3e60c:	mov	x1, x21
   3e610:	mov	x2, x21
   3e614:	mov	w3, w20
   3e618:	bl	c1b0 <mpfr_mul@plt>
   3e61c:	mov	w8, w0
   3e620:	b	3e570 <mpfr_sqr@@Base+0x24c>
   3e624:	sub	x0, x29, #0x10
   3e628:	mov	x25, x2
   3e62c:	bl	c220 <mpfr_tmp_allocate@plt>
   3e630:	mov	x2, x25
   3e634:	mov	x25, x0
   3e638:	b	3e4a0 <mpfr_sqr@@Base+0x17c>
   3e63c:	mov	w3, #0x1                   	// #1
   3e640:	mov	x0, x1
   3e644:	mov	x2, x24
   3e648:	mov	x25, x1
   3e64c:	bl	c120 <__gmpn_lshift@plt>
   3e650:	mov	x1, x25
   3e654:	b	3e4c0 <mpfr_sqr@@Base+0x19c>
   3e658:	ldr	x8, [x19]
   3e65c:	ldr	x9, [x19, #24]
   3e660:	sub	x10, x8, #0x1
   3e664:	add	x8, x8, #0x3e
   3e668:	cmp	x10, #0x0
   3e66c:	csel	x8, x8, x10, lt  // lt = tstop
   3e670:	asr	x8, x8, #6
   3e674:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3e678:	str	x10, [x9, x8, lsl #3]
   3e67c:	b	3e4e4 <mpfr_sqr@@Base+0x1c0>
   3e680:	bl	c8d0 <mpfr_tmp_free@plt>
   3e684:	b	3e4f4 <mpfr_sqr@@Base+0x1d0>
   3e688:	mov	w2, #0x1                   	// #1
   3e68c:	mov	x0, x19
   3e690:	mov	w1, w20
   3e694:	bl	c3a0 <mpfr_overflow@plt>
   3e698:	b	3e6d4 <mpfr_sqr@@Base+0x3b0>
   3e69c:	cbnz	w20, 3e6c4 <mpfr_sqr@@Base+0x3a0>
   3e6a0:	orr	x8, x24, x23
   3e6a4:	cmp	x8, x9
   3e6a8:	b.lt	3e6b8 <mpfr_sqr@@Base+0x394>  // b.tstop
   3e6ac:	mov	x0, x21
   3e6b0:	bl	c360 <mpfr_powerof2_raw@plt>
   3e6b4:	cbz	w0, 3e6c0 <mpfr_sqr@@Base+0x39c>
   3e6b8:	mov	w20, #0x1                   	// #1
   3e6bc:	b	3e6c4 <mpfr_sqr@@Base+0x3a0>
   3e6c0:	mov	w20, wzr
   3e6c4:	mov	w2, #0x1                   	// #1
   3e6c8:	mov	x0, x19
   3e6cc:	mov	w1, w20
   3e6d0:	bl	c880 <mpfr_underflow@plt>
   3e6d4:	mov	w8, w0
   3e6d8:	mov	w9, wzr
   3e6dc:	cbnz	w9, 3e54c <mpfr_sqr@@Base+0x228>
   3e6e0:	b	3e570 <mpfr_sqr@@Base+0x24c>
   3e6e4:	stp	x29, x30, [sp, #-16]!
   3e6e8:	ldp	x14, x10, [x1, #16]
   3e6ec:	ldr	x11, [x0, #24]
   3e6f0:	mov	w13, #0x1                   	// #1
   3e6f4:	mov	w9, w2
   3e6f8:	ldr	x15, [x10]
   3e6fc:	neg	x10, x3
   3e700:	mov	x8, x0
   3e704:	lsl	x12, x13, x10
   3e708:	lsl	x10, x14, #1
   3e70c:	umulh	x17, x15, x15
   3e710:	mul	x15, x15, x15
   3e714:	mov	x29, sp
   3e718:	tbnz	x17, #63, 3e728 <mpfr_sqr@@Base+0x404>
   3e71c:	sub	x10, x10, #0x1
   3e720:	extr	x17, x17, x15, #63
   3e724:	lsl	x15, x15, #1
   3e728:	neg	x18, x12
   3e72c:	and	x16, x17, x18
   3e730:	str	x16, [x11]
   3e734:	str	w13, [x8, #8]
   3e738:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e73c:	ldr	x1, [x0, #2768]
   3e740:	add	x0, x0, #0xad0
   3e744:	blr	x1
   3e748:	mrs	x13, tpidr_el0
   3e74c:	ldr	x14, [x13, x0]
   3e750:	cmp	x10, x14
   3e754:	b.gt	3e85c <mpfr_sqr@@Base+0x538>
   3e758:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   3e75c:	sub	x0, x12, #0x1
   3e760:	lsr	x14, x14, x3
   3e764:	and	x14, x17, x14
   3e768:	and	x17, x17, x0
   3e76c:	eor	x17, x17, x14
   3e770:	orr	x15, x17, x15
   3e774:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e778:	ldr	x1, [x0, #2736]
   3e77c:	add	x0, x0, #0xab0
   3e780:	blr	x1
   3e784:	ldr	x17, [x13, x0]
   3e788:	cmp	x10, x17
   3e78c:	b.lt	3e874 <mpfr_sqr@@Base+0x550>  // b.tstop
   3e790:	mov	w0, wzr
   3e794:	cmp	w9, #0x5
   3e798:	str	x10, [x8, #16]
   3e79c:	b.eq	3e82c <mpfr_sqr@@Base+0x508>  // b.none
   3e7a0:	orr	x16, x15, x14
   3e7a4:	cbz	x16, 3e82c <mpfr_sqr@@Base+0x508>
   3e7a8:	cmp	w9, #0x3
   3e7ac:	b.eq	3e834 <mpfr_sqr@@Base+0x510>  // b.none
   3e7b0:	cmp	w9, #0x1
   3e7b4:	b.eq	3e834 <mpfr_sqr@@Base+0x510>  // b.none
   3e7b8:	cbnz	w9, 3e7d0 <mpfr_sqr@@Base+0x4ac>
   3e7bc:	cbz	x14, 3e834 <mpfr_sqr@@Base+0x510>
   3e7c0:	cbnz	x15, 3e7d0 <mpfr_sqr@@Base+0x4ac>
   3e7c4:	ldr	x14, [x11]
   3e7c8:	tst	x14, x12
   3e7cc:	b.eq	3e834 <mpfr_sqr@@Base+0x510>  // b.none
   3e7d0:	ldr	x14, [x11]
   3e7d4:	adds	x12, x14, x12
   3e7d8:	str	x12, [x11]
   3e7dc:	b.ne	3e80c <mpfr_sqr@@Base+0x4e8>  // b.any
   3e7e0:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   3e7e4:	str	x12, [x11]
   3e7e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e7ec:	ldr	x1, [x0, #2768]
   3e7f0:	add	x0, x0, #0xad0
   3e7f4:	blr	x1
   3e7f8:	ldr	x11, [x13, x0]
   3e7fc:	cmp	x10, x11
   3e800:	b.ge	3e85c <mpfr_sqr@@Base+0x538>  // b.tcont
   3e804:	add	x9, x10, #0x1
   3e808:	str	x9, [x8, #16]
   3e80c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e810:	ldr	x1, [x0, #2800]
   3e814:	add	x0, x0, #0xaf0
   3e818:	blr	x1
   3e81c:	ldr	w8, [x13, x0]
   3e820:	orr	w8, w8, #0x8
   3e824:	str	w8, [x13, x0]
   3e828:	mov	w0, #0x1                   	// #1
   3e82c:	ldp	x29, x30, [sp], #16
   3e830:	ret
   3e834:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e838:	ldr	x1, [x0, #2800]
   3e83c:	add	x0, x0, #0xaf0
   3e840:	blr	x1
   3e844:	ldr	w8, [x13, x0]
   3e848:	orr	w8, w8, #0x8
   3e84c:	str	w8, [x13, x0]
   3e850:	mov	w0, #0xffffffff            	// #-1
   3e854:	ldp	x29, x30, [sp], #16
   3e858:	ret
   3e85c:	mov	w2, #0x1                   	// #1
   3e860:	mov	x0, x8
   3e864:	mov	w1, w9
   3e868:	bl	c3a0 <mpfr_overflow@plt>
   3e86c:	ldp	x29, x30, [sp], #16
   3e870:	ret
   3e874:	cmp	x16, x18
   3e878:	sub	x17, x17, #0x1
   3e87c:	b.ne	3e8ac <mpfr_sqr@@Base+0x588>  // b.any
   3e880:	cmp	x10, x17
   3e884:	b.ne	3e8ac <mpfr_sqr@@Base+0x588>  // b.any
   3e888:	cbnz	w9, 3e890 <mpfr_sqr@@Base+0x56c>
   3e88c:	cbnz	x14, 3e790 <mpfr_sqr@@Base+0x46c>
   3e890:	cbz	w9, 3e8b0 <mpfr_sqr@@Base+0x58c>
   3e894:	cmp	w9, #0x4
   3e898:	b.eq	3e8a4 <mpfr_sqr@@Base+0x580>  // b.none
   3e89c:	cmp	w9, #0x2
   3e8a0:	b.ne	3e8d4 <mpfr_sqr@@Base+0x5b0>  // b.any
   3e8a4:	orr	x18, x15, x14
   3e8a8:	cbnz	x18, 3e790 <mpfr_sqr@@Base+0x46c>
   3e8ac:	cbnz	w9, 3e8d4 <mpfr_sqr@@Base+0x5b0>
   3e8b0:	cmp	x10, x17
   3e8b4:	b.lt	3e8d0 <mpfr_sqr@@Base+0x5ac>  // b.tstop
   3e8b8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3e8bc:	cmp	x16, x9
   3e8c0:	mov	w9, wzr
   3e8c4:	b.ne	3e8d4 <mpfr_sqr@@Base+0x5b0>  // b.any
   3e8c8:	orr	x10, x15, x14
   3e8cc:	cbnz	x10, 3e8d4 <mpfr_sqr@@Base+0x5b0>
   3e8d0:	mov	w9, #0x1                   	// #1
   3e8d4:	mov	w2, #0x1                   	// #1
   3e8d8:	mov	x0, x8
   3e8dc:	mov	w1, w9
   3e8e0:	bl	c880 <mpfr_underflow@plt>
   3e8e4:	ldp	x29, x30, [sp], #16
   3e8e8:	ret
   3e8ec:	stp	x29, x30, [sp, #-16]!
   3e8f0:	ldp	x12, x9, [x1, #16]
   3e8f4:	neg	x11, x3
   3e8f8:	mov	w15, #0x1                   	// #1
   3e8fc:	mov	x8, x0
   3e900:	ldp	x18, x14, [x9]
   3e904:	umulh	x9, x14, x14
   3e908:	ldr	x10, [x0, #24]
   3e90c:	lsl	x11, x15, x11
   3e910:	mul	x13, x14, x14
   3e914:	umulh	x0, x14, x18
   3e918:	adds	x17, x13, x0, lsl #1
   3e91c:	add	x9, x9, x0, lsr #63
   3e920:	sub	x16, x11, #0x1
   3e924:	cinc	x13, x9, cs  // cs = hs, nlast
   3e928:	add	x9, x17, #0x2
   3e92c:	and	x9, x9, x16, lsr #2
   3e930:	cmp	x9, #0x2
   3e934:	mov	w9, w2
   3e938:	mov	x29, sp
   3e93c:	b.ls	3eab8 <mpfr_sqr@@Base+0x794>  // b.plast
   3e940:	mov	w2, #0x1                   	// #1
   3e944:	lsl	x12, x12, #1
   3e948:	tbnz	x13, #63, 3e95c <mpfr_sqr@@Base+0x638>
   3e94c:	sub	x12, x12, #0x1
   3e950:	extr	x13, x13, x17, #63
   3e954:	extr	x17, x17, x2, #63
   3e958:	lsl	x2, x2, #1
   3e95c:	neg	x4, x11
   3e960:	mov	w5, #0x1                   	// #1
   3e964:	and	x18, x17, x4
   3e968:	stp	x18, x13, [x10]
   3e96c:	str	w5, [x8, #8]
   3e970:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e974:	ldr	x1, [x0, #2768]
   3e978:	add	x0, x0, #0xad0
   3e97c:	blr	x1
   3e980:	mrs	x14, tpidr_el0
   3e984:	ldr	x0, [x14, x0]
   3e988:	cmp	x12, x0
   3e98c:	b.gt	3eaa0 <mpfr_sqr@@Base+0x77c>
   3e990:	mov	w0, #0x7f                  	// #127
   3e994:	and	x1, x17, x16
   3e998:	sub	x16, x0, x3
   3e99c:	lsl	x16, x5, x16
   3e9a0:	and	x16, x17, x16
   3e9a4:	eor	x17, x1, x16
   3e9a8:	orr	x15, x2, x15
   3e9ac:	orr	x15, x15, x17
   3e9b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3e9b4:	ldr	x1, [x0, #2736]
   3e9b8:	add	x0, x0, #0xab0
   3e9bc:	blr	x1
   3e9c0:	ldr	x17, [x14, x0]
   3e9c4:	cmp	x12, x17
   3e9c8:	b.lt	3eaf0 <mpfr_sqr@@Base+0x7cc>  // b.tstop
   3e9cc:	mov	w0, wzr
   3e9d0:	cmp	w9, #0x5
   3e9d4:	str	x12, [x8, #16]
   3e9d8:	b.eq	3ea70 <mpfr_sqr@@Base+0x74c>  // b.none
   3e9dc:	orr	x13, x15, x16
   3e9e0:	cbz	x13, 3ea70 <mpfr_sqr@@Base+0x74c>
   3e9e4:	cmp	w9, #0x3
   3e9e8:	b.eq	3ea78 <mpfr_sqr@@Base+0x754>  // b.none
   3e9ec:	cmp	w9, #0x1
   3e9f0:	b.eq	3ea78 <mpfr_sqr@@Base+0x754>  // b.none
   3e9f4:	cbnz	w9, 3ea0c <mpfr_sqr@@Base+0x6e8>
   3e9f8:	cbz	x16, 3ea78 <mpfr_sqr@@Base+0x754>
   3e9fc:	cbnz	x15, 3ea0c <mpfr_sqr@@Base+0x6e8>
   3ea00:	ldr	x13, [x10]
   3ea04:	tst	x13, x11
   3ea08:	b.eq	3ea78 <mpfr_sqr@@Base+0x754>  // b.none
   3ea0c:	ldp	x13, x15, [x10]
   3ea10:	adds	x11, x13, x11
   3ea14:	str	x11, [x10]
   3ea18:	cinc	x11, x15, eq  // eq = none
   3ea1c:	str	x11, [x10, #8]
   3ea20:	cbnz	x11, 3ea50 <mpfr_sqr@@Base+0x72c>
   3ea24:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3ea28:	str	x11, [x10, #8]
   3ea2c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ea30:	ldr	x1, [x0, #2768]
   3ea34:	add	x0, x0, #0xad0
   3ea38:	blr	x1
   3ea3c:	ldr	x10, [x14, x0]
   3ea40:	cmp	x12, x10
   3ea44:	b.ge	3eaa0 <mpfr_sqr@@Base+0x77c>  // b.tcont
   3ea48:	add	x9, x12, #0x1
   3ea4c:	str	x9, [x8, #16]
   3ea50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ea54:	ldr	x1, [x0, #2800]
   3ea58:	add	x0, x0, #0xaf0
   3ea5c:	blr	x1
   3ea60:	ldr	w8, [x14, x0]
   3ea64:	orr	w8, w8, #0x8
   3ea68:	str	w8, [x14, x0]
   3ea6c:	mov	w0, #0x1                   	// #1
   3ea70:	ldp	x29, x30, [sp], #16
   3ea74:	ret
   3ea78:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ea7c:	ldr	x1, [x0, #2800]
   3ea80:	add	x0, x0, #0xaf0
   3ea84:	blr	x1
   3ea88:	ldr	w8, [x14, x0]
   3ea8c:	orr	w8, w8, #0x8
   3ea90:	str	w8, [x14, x0]
   3ea94:	mov	w0, #0xffffffff            	// #-1
   3ea98:	ldp	x29, x30, [sp], #16
   3ea9c:	ret
   3eaa0:	mov	w2, #0x1                   	// #1
   3eaa4:	mov	x0, x8
   3eaa8:	mov	w1, w9
   3eaac:	bl	c3a0 <mpfr_overflow@plt>
   3eab0:	ldp	x29, x30, [sp], #16
   3eab4:	ret
   3eab8:	mul	x14, x18, x14
   3eabc:	umulh	x0, x18, x18
   3eac0:	mul	x15, x18, x18
   3eac4:	adds	x18, x0, x14
   3eac8:	cset	w0, cs  // cs = hs, nlast
   3eacc:	adds	x17, x17, x0
   3ead0:	cinc	x13, x13, cs  // cs = hs, nlast
   3ead4:	adds	x2, x18, x14
   3ead8:	cset	w14, cs  // cs = hs, nlast
   3eadc:	adds	x17, x17, x14
   3eae0:	cinc	x13, x13, cs  // cs = hs, nlast
   3eae4:	lsl	x12, x12, #1
   3eae8:	tbz	x13, #63, 3e94c <mpfr_sqr@@Base+0x628>
   3eaec:	b	3e95c <mpfr_sqr@@Base+0x638>
   3eaf0:	cmp	x18, x4
   3eaf4:	sub	x17, x17, #0x1
   3eaf8:	b.ne	3eb30 <mpfr_sqr@@Base+0x80c>  // b.any
   3eafc:	cmn	x13, #0x1
   3eb00:	b.ne	3eb30 <mpfr_sqr@@Base+0x80c>  // b.any
   3eb04:	cmp	x12, x17
   3eb08:	b.ne	3eb30 <mpfr_sqr@@Base+0x80c>  // b.any
   3eb0c:	cbnz	w9, 3eb14 <mpfr_sqr@@Base+0x7f0>
   3eb10:	cbnz	x16, 3e9cc <mpfr_sqr@@Base+0x6a8>
   3eb14:	cbz	w9, 3eb34 <mpfr_sqr@@Base+0x810>
   3eb18:	cmp	w9, #0x4
   3eb1c:	b.eq	3eb28 <mpfr_sqr@@Base+0x804>  // b.none
   3eb20:	cmp	w9, #0x2
   3eb24:	b.ne	3eb60 <mpfr_sqr@@Base+0x83c>  // b.any
   3eb28:	orr	x0, x15, x16
   3eb2c:	cbnz	x0, 3e9cc <mpfr_sqr@@Base+0x6a8>
   3eb30:	cbnz	w9, 3eb60 <mpfr_sqr@@Base+0x83c>
   3eb34:	cmp	x12, x17
   3eb38:	b.ge	3eb44 <mpfr_sqr@@Base+0x820>  // b.tcont
   3eb3c:	mov	w9, #0x1                   	// #1
   3eb40:	b	3eb60 <mpfr_sqr@@Base+0x83c>
   3eb44:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3eb48:	cmp	x13, x9
   3eb4c:	b.ne	3eb5c <mpfr_sqr@@Base+0x838>  // b.any
   3eb50:	orr	x9, x15, x16
   3eb54:	orr	x9, x9, x18
   3eb58:	cbz	x9, 3eb3c <mpfr_sqr@@Base+0x818>
   3eb5c:	mov	w9, wzr
   3eb60:	mov	w2, #0x1                   	// #1
   3eb64:	mov	x0, x8
   3eb68:	mov	w1, w9
   3eb6c:	bl	c880 <mpfr_underflow@plt>
   3eb70:	ldp	x29, x30, [sp], #16
   3eb74:	ret
   3eb78:	stp	x29, x30, [sp, #-16]!
   3eb7c:	ldp	x12, x10, [x1, #16]
   3eb80:	ldr	x11, [x0, #24]
   3eb84:	mov	w9, w2
   3eb88:	mov	x8, x0
   3eb8c:	ldr	x13, [x10]
   3eb90:	lsl	x10, x12, #1
   3eb94:	mov	x29, sp
   3eb98:	umulh	x14, x13, x13
   3eb9c:	mul	x12, x13, x13
   3eba0:	tbnz	x14, #63, 3ebb0 <mpfr_sqr@@Base+0x88c>
   3eba4:	sub	x10, x10, #0x1
   3eba8:	extr	x14, x14, x12, #63
   3ebac:	lsl	x12, x12, #1
   3ebb0:	mov	w13, #0x1                   	// #1
   3ebb4:	str	x14, [x11]
   3ebb8:	str	w13, [x8, #8]
   3ebbc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ebc0:	ldr	x1, [x0, #2768]
   3ebc4:	add	x0, x0, #0xad0
   3ebc8:	blr	x1
   3ebcc:	mrs	x13, tpidr_el0
   3ebd0:	ldr	x15, [x13, x0]
   3ebd4:	cmp	x10, x15
   3ebd8:	b.gt	3ecc0 <mpfr_sqr@@Base+0x99c>
   3ebdc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ebe0:	ldr	x1, [x0, #2736]
   3ebe4:	add	x0, x0, #0xab0
   3ebe8:	blr	x1
   3ebec:	ldr	x15, [x13, x0]
   3ebf0:	cmp	x10, x15
   3ebf4:	b.lt	3ecd8 <mpfr_sqr@@Base+0x9b4>  // b.tstop
   3ebf8:	mov	w0, wzr
   3ebfc:	cmp	w9, #0x5
   3ec00:	str	x10, [x8, #16]
   3ec04:	b.eq	3ecb8 <mpfr_sqr@@Base+0x994>  // b.none
   3ec08:	cbz	x12, 3ecb8 <mpfr_sqr@@Base+0x994>
   3ec0c:	cmp	w9, #0x3
   3ec10:	b.eq	3ec24 <mpfr_sqr@@Base+0x900>  // b.none
   3ec14:	cmp	w9, #0x1
   3ec18:	b.eq	3ec24 <mpfr_sqr@@Base+0x900>  // b.none
   3ec1c:	cbnz	w9, 3ec5c <mpfr_sqr@@Base+0x938>
   3ec20:	tbnz	x12, #63, 3ec4c <mpfr_sqr@@Base+0x928>
   3ec24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ec28:	ldr	x1, [x0, #2800]
   3ec2c:	add	x0, x0, #0xaf0
   3ec30:	blr	x1
   3ec34:	ldr	w8, [x13, x0]
   3ec38:	orr	w8, w8, #0x8
   3ec3c:	str	w8, [x13, x0]
   3ec40:	mov	w0, #0xffffffff            	// #-1
   3ec44:	ldp	x29, x30, [sp], #16
   3ec48:	ret
   3ec4c:	and	x12, x12, #0x7fffffffffffffff
   3ec50:	cbnz	x12, 3ec5c <mpfr_sqr@@Base+0x938>
   3ec54:	ldrb	w12, [x11]
   3ec58:	tbz	w12, #0, 3ec24 <mpfr_sqr@@Base+0x900>
   3ec5c:	ldr	x12, [x11]
   3ec60:	adds	x12, x12, #0x1
   3ec64:	str	x12, [x11]
   3ec68:	b.cc	3ec98 <mpfr_sqr@@Base+0x974>  // b.lo, b.ul, b.last
   3ec6c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   3ec70:	str	x12, [x11]
   3ec74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ec78:	ldr	x1, [x0, #2768]
   3ec7c:	add	x0, x0, #0xad0
   3ec80:	blr	x1
   3ec84:	ldr	x11, [x13, x0]
   3ec88:	cmp	x10, x11
   3ec8c:	b.ge	3ecc0 <mpfr_sqr@@Base+0x99c>  // b.tcont
   3ec90:	add	x9, x10, #0x1
   3ec94:	str	x9, [x8, #16]
   3ec98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ec9c:	ldr	x1, [x0, #2800]
   3eca0:	add	x0, x0, #0xaf0
   3eca4:	blr	x1
   3eca8:	ldr	w8, [x13, x0]
   3ecac:	orr	w8, w8, #0x8
   3ecb0:	str	w8, [x13, x0]
   3ecb4:	mov	w0, #0x1                   	// #1
   3ecb8:	ldp	x29, x30, [sp], #16
   3ecbc:	ret
   3ecc0:	mov	w2, #0x1                   	// #1
   3ecc4:	mov	x0, x8
   3ecc8:	mov	w1, w9
   3eccc:	bl	c3a0 <mpfr_overflow@plt>
   3ecd0:	ldp	x29, x30, [sp], #16
   3ecd4:	ret
   3ecd8:	cmn	x14, #0x1
   3ecdc:	sub	x15, x15, #0x1
   3ece0:	b.ne	3ed04 <mpfr_sqr@@Base+0x9e0>  // b.any
   3ece4:	cmp	x10, x15
   3ece8:	b.ne	3ed04 <mpfr_sqr@@Base+0x9e0>  // b.any
   3ecec:	cbz	w9, 3ed08 <mpfr_sqr@@Base+0x9e4>
   3ecf0:	cmp	w9, #0x2
   3ecf4:	b.eq	3ebf8 <mpfr_sqr@@Base+0x8d4>  // b.none
   3ecf8:	cmp	w9, #0x4
   3ecfc:	b.eq	3ebf8 <mpfr_sqr@@Base+0x8d4>  // b.none
   3ed00:	b	3ed28 <mpfr_sqr@@Base+0xa04>
   3ed04:	cbnz	w9, 3ed28 <mpfr_sqr@@Base+0xa04>
   3ed08:	cmp	x10, x15
   3ed0c:	b.lt	3ed24 <mpfr_sqr@@Base+0xa00>  // b.tstop
   3ed10:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3ed14:	cmp	x14, x9
   3ed18:	mov	w9, wzr
   3ed1c:	b.ne	3ed28 <mpfr_sqr@@Base+0xa04>  // b.any
   3ed20:	cbnz	x12, 3ed28 <mpfr_sqr@@Base+0xa04>
   3ed24:	mov	w9, #0x1                   	// #1
   3ed28:	mov	w2, #0x1                   	// #1
   3ed2c:	mov	x0, x8
   3ed30:	mov	w1, w9
   3ed34:	bl	c880 <mpfr_underflow@plt>
   3ed38:	ldp	x29, x30, [sp], #16
   3ed3c:	ret
   3ed40:	sub	sp, sp, #0x80
   3ed44:	stp	x29, x30, [sp, #48]
   3ed48:	str	x25, [sp, #64]
   3ed4c:	stp	x24, x23, [sp, #80]
   3ed50:	stp	x22, x21, [sp, #96]
   3ed54:	stp	x20, x19, [sp, #112]
   3ed58:	ldp	x25, x1, [x1, #16]
   3ed5c:	neg	x8, x3
   3ed60:	mov	w10, #0x1                   	// #1
   3ed64:	lsl	x23, x10, x8
   3ed68:	ldp	x11, x9, [x1, #8]
   3ed6c:	ldr	x8, [x1]
   3ed70:	umulh	x8, x9, x8
   3ed74:	umulh	x12, x9, x11
   3ed78:	mul	x13, x11, x9
   3ed7c:	adds	x8, x8, x13
   3ed80:	ldr	x22, [x0, #24]
   3ed84:	umulh	x14, x11, x11
   3ed88:	cinc	x13, x12, cs  // cs = hs, nlast
   3ed8c:	adds	x12, x14, x8, lsl #1
   3ed90:	sub	x24, x23, #0x1
   3ed94:	mul	x10, x9, x9
   3ed98:	extr	x8, x13, x8, #63
   3ed9c:	add	x15, x12, #0x4
   3eda0:	add	x11, x8, x10
   3eda4:	and	x15, x15, x24, lsr #2
   3eda8:	mov	x21, x3
   3edac:	mov	x19, x0
   3edb0:	cinc	x8, x11, cs  // cs = hs, nlast
   3edb4:	cmp	x15, #0x5
   3edb8:	mov	w20, w2
   3edbc:	add	x29, sp, #0x30
   3edc0:	b.cc	3ef90 <mpfr_sqr@@Base+0xc6c>  // b.lo, b.ul, b.last
   3edc4:	cmp	x12, x14
   3edc8:	cset	w14, cc  // cc = lo, ul, last
   3edcc:	cmp	x8, #0x0
   3edd0:	lsr	x13, x13, #63
   3edd4:	cset	w16, eq  // eq = none
   3edd8:	cmp	x11, x10
   3eddc:	and	w10, w14, w16
   3ede0:	cinc	x11, x13, cc  // cc = lo, ul, last
   3ede4:	add	x10, x11, x10
   3ede8:	umulh	x9, x9, x9
   3edec:	mov	w15, #0x1                   	// #1
   3edf0:	add	x10, x10, x9
   3edf4:	mov	w16, #0x1                   	// #1
   3edf8:	lsl	x9, x25, #1
   3edfc:	tbnz	x10, #63, 3ee14 <mpfr_sqr@@Base+0xaf0>
   3ee00:	sub	x9, x9, #0x1
   3ee04:	extr	x10, x10, x8, #63
   3ee08:	extr	x8, x8, x12, #63
   3ee0c:	extr	x12, x12, x16, #63
   3ee10:	lsl	x16, x16, #1
   3ee14:	neg	x17, x23
   3ee18:	mov	w13, #0x1                   	// #1
   3ee1c:	and	x14, x12, x17
   3ee20:	stp	x8, x10, [x22, #8]
   3ee24:	str	x14, [x22]
   3ee28:	str	w13, [x19, #8]
   3ee2c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ee30:	ldr	x1, [x0, #2768]
   3ee34:	add	x0, x0, #0xad0
   3ee38:	blr	x1
   3ee3c:	mrs	x11, tpidr_el0
   3ee40:	ldr	x18, [x11, x0]
   3ee44:	cmp	x9, x18
   3ee48:	b.gt	3ef7c <mpfr_sqr@@Base+0xc58>
   3ee4c:	mov	w18, #0xbf                  	// #191
   3ee50:	sub	x18, x18, x21
   3ee54:	lsl	x13, x13, x18
   3ee58:	and	x0, x12, x24
   3ee5c:	and	x13, x12, x13
   3ee60:	eor	x12, x0, x13
   3ee64:	orr	x15, x16, x15
   3ee68:	orr	x12, x15, x12
   3ee6c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ee70:	ldr	x1, [x0, #2736]
   3ee74:	add	x0, x0, #0xab0
   3ee78:	blr	x1
   3ee7c:	ldr	x15, [x11, x0]
   3ee80:	cmp	x9, x15
   3ee84:	b.lt	3efb8 <mpfr_sqr@@Base+0xc94>  // b.tstop
   3ee88:	mov	w0, wzr
   3ee8c:	cmp	w20, #0x5
   3ee90:	str	x9, [x19, #16]
   3ee94:	b.eq	3ef60 <mpfr_sqr@@Base+0xc3c>  // b.none
   3ee98:	orr	x8, x12, x13
   3ee9c:	cbz	x8, 3ef60 <mpfr_sqr@@Base+0xc3c>
   3eea0:	cmp	w20, #0x3
   3eea4:	b.eq	3ef40 <mpfr_sqr@@Base+0xc1c>  // b.none
   3eea8:	cmp	w20, #0x1
   3eeac:	b.eq	3ef40 <mpfr_sqr@@Base+0xc1c>  // b.none
   3eeb0:	cbnz	w20, 3eec8 <mpfr_sqr@@Base+0xba4>
   3eeb4:	cbz	x13, 3ef40 <mpfr_sqr@@Base+0xc1c>
   3eeb8:	cbnz	x12, 3eec8 <mpfr_sqr@@Base+0xba4>
   3eebc:	ldr	x8, [x22]
   3eec0:	tst	x8, x23
   3eec4:	b.eq	3ef40 <mpfr_sqr@@Base+0xc1c>  // b.none
   3eec8:	ldp	x8, x10, [x22]
   3eecc:	ldr	x12, [x22, #16]
   3eed0:	adds	x8, x8, x23
   3eed4:	cinc	x10, x10, eq  // eq = none
   3eed8:	stp	x8, x10, [x22]
   3eedc:	orr	x8, x10, x8
   3eee0:	cmp	x8, #0x0
   3eee4:	cinc	x8, x12, eq  // eq = none
   3eee8:	str	x8, [x22, #16]
   3eeec:	cbnz	x8, 3ef1c <mpfr_sqr@@Base+0xbf8>
   3eef0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3eef4:	str	x8, [x22, #16]
   3eef8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3eefc:	ldr	x1, [x0, #2768]
   3ef00:	add	x0, x0, #0xad0
   3ef04:	blr	x1
   3ef08:	ldr	x8, [x11, x0]
   3ef0c:	cmp	x9, x8
   3ef10:	b.ge	3ef7c <mpfr_sqr@@Base+0xc58>  // b.tcont
   3ef14:	add	x8, x9, #0x1
   3ef18:	str	x8, [x19, #16]
   3ef1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ef20:	ldr	x1, [x0, #2800]
   3ef24:	add	x0, x0, #0xaf0
   3ef28:	blr	x1
   3ef2c:	ldr	w8, [x11, x0]
   3ef30:	orr	w8, w8, #0x8
   3ef34:	str	w8, [x11, x0]
   3ef38:	mov	w0, #0x1                   	// #1
   3ef3c:	b	3ef60 <mpfr_sqr@@Base+0xc3c>
   3ef40:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3ef44:	ldr	x1, [x0, #2800]
   3ef48:	add	x0, x0, #0xaf0
   3ef4c:	blr	x1
   3ef50:	ldr	w8, [x11, x0]
   3ef54:	orr	w8, w8, #0x8
   3ef58:	str	w8, [x11, x0]
   3ef5c:	mov	w0, #0xffffffff            	// #-1
   3ef60:	ldp	x20, x19, [sp, #112]
   3ef64:	ldp	x22, x21, [sp, #96]
   3ef68:	ldp	x24, x23, [sp, #80]
   3ef6c:	ldr	x25, [sp, #64]
   3ef70:	ldp	x29, x30, [sp, #48]
   3ef74:	add	sp, sp, #0x80
   3ef78:	ret
   3ef7c:	mov	w2, #0x1                   	// #1
   3ef80:	mov	x0, x19
   3ef84:	mov	w1, w20
   3ef88:	bl	c3a0 <mpfr_overflow@plt>
   3ef8c:	b	3ef60 <mpfr_sqr@@Base+0xc3c>
   3ef90:	mov	x0, sp
   3ef94:	mov	w2, #0x3                   	// #3
   3ef98:	bl	c870 <__gmpn_sqr@plt>
   3ef9c:	ldp	x11, x9, [sp]
   3efa0:	ldp	x8, x10, [sp, #32]
   3efa4:	ldp	x16, x12, [sp, #16]
   3efa8:	orr	x15, x11, x9
   3efac:	lsl	x9, x25, #1
   3efb0:	tbz	x10, #63, 3ee00 <mpfr_sqr@@Base+0xadc>
   3efb4:	b	3ee14 <mpfr_sqr@@Base+0xaf0>
   3efb8:	cmp	x14, x17
   3efbc:	sub	x15, x15, #0x1
   3efc0:	b.ne	3effc <mpfr_sqr@@Base+0xcd8>  // b.any
   3efc4:	and	x16, x8, x10
   3efc8:	cmn	x16, #0x1
   3efcc:	b.ne	3effc <mpfr_sqr@@Base+0xcd8>  // b.any
   3efd0:	cmp	x9, x15
   3efd4:	b.ne	3effc <mpfr_sqr@@Base+0xcd8>  // b.any
   3efd8:	cbnz	w20, 3efe0 <mpfr_sqr@@Base+0xcbc>
   3efdc:	cbnz	x13, 3ee88 <mpfr_sqr@@Base+0xb64>
   3efe0:	cbz	w20, 3f000 <mpfr_sqr@@Base+0xcdc>
   3efe4:	cmp	w20, #0x4
   3efe8:	b.eq	3eff4 <mpfr_sqr@@Base+0xcd0>  // b.none
   3efec:	cmp	w20, #0x2
   3eff0:	b.ne	3f034 <mpfr_sqr@@Base+0xd10>  // b.any
   3eff4:	orr	x16, x12, x13
   3eff8:	cbnz	x16, 3ee88 <mpfr_sqr@@Base+0xb64>
   3effc:	cbnz	w20, 3f034 <mpfr_sqr@@Base+0xd10>
   3f000:	cmp	x9, x15
   3f004:	b.ge	3f010 <mpfr_sqr@@Base+0xcec>  // b.tcont
   3f008:	mov	w20, #0x1                   	// #1
   3f00c:	b	3f034 <mpfr_sqr@@Base+0xd10>
   3f010:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3f014:	cmp	x10, x9
   3f018:	mov	w20, wzr
   3f01c:	b.ne	3f034 <mpfr_sqr@@Base+0xd10>  // b.any
   3f020:	cbnz	x8, 3f034 <mpfr_sqr@@Base+0xd10>
   3f024:	orr	x8, x12, x13
   3f028:	orr	x8, x8, x14
   3f02c:	cbz	x8, 3f008 <mpfr_sqr@@Base+0xce4>
   3f030:	mov	w20, wzr
   3f034:	mov	w2, #0x1                   	// #1
   3f038:	mov	x0, x19
   3f03c:	mov	w1, w20
   3f040:	bl	c880 <mpfr_underflow@plt>
   3f044:	b	3ef60 <mpfr_sqr@@Base+0xc3c>

000000000003f048 <__gmpfr_int_ceil_log2@@Base>:
   3f048:	stp	x29, x30, [sp, #-32]!
   3f04c:	str	x19, [sp, #16]
   3f050:	subs	x19, x0, #0x1
   3f054:	mov	x29, sp
   3f058:	b.eq	3f078 <__gmpfr_int_ceil_log2@@Base+0x30>  // b.none
   3f05c:	cbz	x0, 3f080 <__gmpfr_int_ceil_log2@@Base+0x38>
   3f060:	clz	x8, x19
   3f064:	mov	w9, #0x40                  	// #64
   3f068:	sub	w0, w9, w8
   3f06c:	ldr	x19, [sp, #16]
   3f070:	ldp	x29, x30, [sp], #32
   3f074:	ret
   3f078:	mov	w0, wzr
   3f07c:	b	3f06c <__gmpfr_int_ceil_log2@@Base+0x24>
   3f080:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3f084:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3f088:	add	x0, x0, #0x73d
   3f08c:	add	x2, x2, #0x74d
   3f090:	mov	w1, #0x24                  	// #36
   3f094:	bl	d030 <mpfr_assert_fail@plt>
   3f098:	b	3f060 <__gmpfr_int_ceil_log2@@Base+0x18>

000000000003f09c <__gmpfr_isqrt@@Base>:
   3f09c:	mov	w8, #0x1                   	// #1
   3f0a0:	cmp	x0, #0x2
   3f0a4:	b.cc	3f0bc <__gmpfr_isqrt@@Base+0x20>  // b.lo, b.ul, b.last
   3f0a8:	mov	x9, x0
   3f0ac:	cmp	x9, #0x7
   3f0b0:	lsr	x9, x9, #2
   3f0b4:	lsl	x8, x8, #1
   3f0b8:	b.hi	3f0ac <__gmpfr_isqrt@@Base+0x10>  // b.pmore
   3f0bc:	udiv	x9, x0, x8
   3f0c0:	add	x8, x9, x8
   3f0c4:	lsr	x8, x8, #1
   3f0c8:	mul	x9, x8, x8
   3f0cc:	cmp	x9, x0
   3f0d0:	b.hi	3f0bc <__gmpfr_isqrt@@Base+0x20>  // b.pmore
   3f0d4:	add	x10, x8, #0x2
   3f0d8:	mul	x10, x10, x8
   3f0dc:	cmp	x9, x10
   3f0e0:	b.hi	3f0ec <__gmpfr_isqrt@@Base+0x50>  // b.pmore
   3f0e4:	cmp	x10, x0
   3f0e8:	b.cc	3f0bc <__gmpfr_isqrt@@Base+0x20>  // b.lo, b.ul, b.last
   3f0ec:	mov	x0, x8
   3f0f0:	ret

000000000003f0f4 <__gmpfr_cuberoot@@Base>:
   3f0f4:	mov	w8, #0x1                   	// #1
   3f0f8:	cmp	x0, #0x4
   3f0fc:	b.cc	3f114 <__gmpfr_cuberoot@@Base+0x20>  // b.lo, b.ul, b.last
   3f100:	mov	x9, x0
   3f104:	cmp	x9, #0x1f
   3f108:	lsr	x9, x9, #3
   3f10c:	lsl	x8, x8, #1
   3f110:	b.hi	3f104 <__gmpfr_cuberoot@@Base+0x10>  // b.pmore
   3f114:	cmp	x0, #0x100
   3f118:	b.cc	3f160 <__gmpfr_cuberoot@@Base+0x6c>  // b.lo, b.ul, b.last
   3f11c:	mul	x9, x8, x8
   3f120:	udiv	x9, x0, x9
   3f124:	add	x8, x9, x8, lsl #1
   3f128:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3f12c:	movk	x9, #0xaaab
   3f130:	umulh	x8, x8, x9
   3f134:	lsr	x8, x8, #1
   3f138:	mul	x10, x8, x8
   3f13c:	udiv	x10, x0, x10
   3f140:	add	x8, x10, x8, lsl #1
   3f144:	umulh	x8, x8, x9
   3f148:	lsr	x8, x8, #1
   3f14c:	mul	x10, x8, x8
   3f150:	udiv	x10, x0, x10
   3f154:	add	x8, x10, x8, lsl #1
   3f158:	umulh	x8, x8, x9
   3f15c:	lsr	x8, x8, #1
   3f160:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3f164:	movk	x9, #0xaaab
   3f168:	mul	x10, x8, x8
   3f16c:	udiv	x10, x0, x10
   3f170:	add	x8, x10, x8, lsl #1
   3f174:	umulh	x8, x8, x9
   3f178:	lsr	x8, x8, #1
   3f17c:	mul	x10, x8, x8
   3f180:	mul	x10, x10, x8
   3f184:	cmp	x10, x0
   3f188:	b.hi	3f168 <__gmpfr_cuberoot@@Base+0x74>  // b.pmore
   3f18c:	add	x11, x8, #0x1
   3f190:	mul	x12, x11, x11
   3f194:	mul	x11, x12, x11
   3f198:	cmp	x10, x11
   3f19c:	b.hi	3f1a8 <__gmpfr_cuberoot@@Base+0xb4>  // b.pmore
   3f1a0:	cmp	x11, x0
   3f1a4:	b.ls	3f168 <__gmpfr_cuberoot@@Base+0x74>  // b.plast
   3f1a8:	mov	x0, x8
   3f1ac:	ret

000000000003f1b0 <mpfr_strtofr@@Base>:
   3f1b0:	sub	sp, sp, #0x70
   3f1b4:	stp	x29, x30, [sp, #64]
   3f1b8:	stp	x22, x21, [sp, #80]
   3f1bc:	stp	x20, x19, [sp, #96]
   3f1c0:	add	x29, sp, #0x40
   3f1c4:	mov	w20, w4
   3f1c8:	mov	w22, w3
   3f1cc:	mov	x19, x2
   3f1d0:	mov	x21, x0
   3f1d4:	stur	x1, [x29, #-8]
   3f1d8:	cbz	w3, 3f1e8 <mpfr_strtofr@@Base+0x38>
   3f1dc:	sub	w8, w22, #0x2
   3f1e0:	cmp	w8, #0x3d
   3f1e4:	b.cs	3f29c <mpfr_strtofr@@Base+0xec>  // b.hs, b.nlast
   3f1e8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3f1ec:	mov	w9, #0x1                   	// #1
   3f1f0:	mov	x1, sp
   3f1f4:	sub	x2, x29, #0x8
   3f1f8:	mov	x0, x21
   3f1fc:	mov	w3, w22
   3f200:	str	x8, [x21, #16]
   3f204:	str	w9, [x21, #8]
   3f208:	bl	3f2b8 <mpfr_strtofr@@Base+0x108>
   3f20c:	cmp	w0, #0x1
   3f210:	b.eq	3f234 <mpfr_strtofr@@Base+0x84>  // b.none
   3f214:	mov	w22, w0
   3f218:	cmp	w0, #0x2
   3f21c:	b.eq	3f274 <mpfr_strtofr@@Base+0xc4>  // b.none
   3f220:	cmn	w22, #0x1
   3f224:	b.ne	3f250 <mpfr_strtofr@@Base+0xa0>  // b.any
   3f228:	mov	w22, wzr
   3f22c:	cbnz	x19, 3f254 <mpfr_strtofr@@Base+0xa4>
   3f230:	b	3f25c <mpfr_strtofr@@Base+0xac>
   3f234:	mov	x1, sp
   3f238:	mov	x0, x21
   3f23c:	mov	w2, w20
   3f240:	bl	3f83c <mpfr_strtofr@@Base+0x68c>
   3f244:	mov	w22, w0
   3f248:	mov	x0, sp
   3f24c:	bl	4056c <mpfr_strtofr@@Base+0x13bc>
   3f250:	cbz	x19, 3f25c <mpfr_strtofr@@Base+0xac>
   3f254:	ldur	x8, [x29, #-8]
   3f258:	str	x8, [x19]
   3f25c:	mov	w0, w22
   3f260:	ldp	x20, x19, [sp, #96]
   3f264:	ldp	x22, x21, [sp, #80]
   3f268:	ldp	x29, x30, [sp, #64]
   3f26c:	add	sp, sp, #0x70
   3f270:	ret
   3f274:	ldr	w8, [sp]
   3f278:	mov	x0, x21
   3f27c:	mov	w1, w20
   3f280:	cmp	w8, #0x0
   3f284:	mov	w8, #0x1                   	// #1
   3f288:	cneg	w2, w8, ne  // ne = any
   3f28c:	bl	c3a0 <mpfr_overflow@plt>
   3f290:	mov	w22, w0
   3f294:	cbnz	x19, 3f254 <mpfr_strtofr@@Base+0xa4>
   3f298:	b	3f25c <mpfr_strtofr@@Base+0xac>
   3f29c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3f2a0:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3f2a4:	add	x0, x0, #0x753
   3f2a8:	add	x2, x2, #0x75d
   3f2ac:	mov	w1, #0x3b0                 	// #944
   3f2b0:	bl	d030 <mpfr_assert_fail@plt>
   3f2b4:	b	3f1e8 <mpfr_strtofr@@Base+0x38>
   3f2b8:	sub	sp, sp, #0x80
   3f2bc:	stp	x29, x30, [sp, #32]
   3f2c0:	stp	x28, x27, [sp, #48]
   3f2c4:	stp	x26, x25, [sp, #64]
   3f2c8:	stp	x24, x23, [sp, #80]
   3f2cc:	stp	x22, x21, [sp, #96]
   3f2d0:	stp	x20, x19, [sp, #112]
   3f2d4:	ldr	x22, [x2]
   3f2d8:	add	x29, sp, #0x20
   3f2dc:	mov	w24, w3
   3f2e0:	mov	x19, x2
   3f2e4:	mov	x21, x1
   3f2e8:	mov	x20, x0
   3f2ec:	bl	c300 <localeconv@plt>
   3f2f0:	ldr	x8, [x0]
   3f2f4:	ldrb	w8, [x8, #1]
   3f2f8:	cbz	w8, 3f304 <mpfr_strtofr@@Base+0x154>
   3f2fc:	mov	w26, #0x2e                  	// #46
   3f300:	b	3f310 <mpfr_strtofr@@Base+0x160>
   3f304:	bl	c300 <localeconv@plt>
   3f308:	ldr	x8, [x0]
   3f30c:	ldrb	w26, [x8]
   3f310:	str	xzr, [x21, #8]
   3f314:	bl	cb00 <__ctype_b_loc@plt>
   3f318:	ldr	x8, [x0]
   3f31c:	mov	x23, x0
   3f320:	ldrb	w25, [x22], #1
   3f324:	ldrh	w9, [x8, x25, lsl #1]
   3f328:	tbnz	w9, #13, 3f320 <mpfr_strtofr@@Base+0x170>
   3f32c:	cmp	w25, #0x2d
   3f330:	cset	w8, eq  // eq = none
   3f334:	str	w8, [x21]
   3f338:	mov	x8, x22
   3f33c:	ldrb	w9, [x8, #-1]!
   3f340:	cmp	w9, #0x2b
   3f344:	b.eq	3f354 <mpfr_strtofr@@Base+0x1a4>  // b.none
   3f348:	cmp	w9, #0x2d
   3f34c:	b.eq	3f354 <mpfr_strtofr@@Base+0x1a4>  // b.none
   3f350:	mov	x22, x8
   3f354:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   3f358:	add	x1, x1, #0x784
   3f35c:	mov	x0, x22
   3f360:	bl	4058c <mpfr_strtofr@@Base+0x13dc>
   3f364:	cbz	w0, 3f3fc <mpfr_strtofr@@Base+0x24c>
   3f368:	cmp	w24, #0x10
   3f36c:	b.gt	3f384 <mpfr_strtofr@@Base+0x1d4>
   3f370:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   3f374:	add	x1, x1, #0x78a
   3f378:	mov	x0, x22
   3f37c:	bl	4058c <mpfr_strtofr@@Base+0x13dc>
   3f380:	cbz	w0, 3f52c <mpfr_strtofr@@Base+0x37c>
   3f384:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   3f388:	add	x1, x1, #0x78e
   3f38c:	mov	x0, x22
   3f390:	bl	4058c <mpfr_strtofr@@Base+0x13dc>
   3f394:	cbz	w0, 3f524 <mpfr_strtofr@@Base+0x374>
   3f398:	cmp	w24, #0x10
   3f39c:	b.gt	3f3c8 <mpfr_strtofr@@Base+0x218>
   3f3a0:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   3f3a4:	add	x1, x1, #0x794
   3f3a8:	mov	x0, x22
   3f3ac:	bl	4058c <mpfr_strtofr@@Base+0x13dc>
   3f3b0:	cbz	w0, 3f6bc <mpfr_strtofr@@Base+0x50c>
   3f3b4:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   3f3b8:	add	x1, x1, #0x79d
   3f3bc:	mov	x0, x22
   3f3c0:	bl	4058c <mpfr_strtofr@@Base+0x13dc>
   3f3c4:	cbz	w0, 3f6c4 <mpfr_strtofr@@Base+0x514>
   3f3c8:	tst	w24, #0xffffffef
   3f3cc:	b.ne	3f404 <mpfr_strtofr@@Base+0x254>  // b.any
   3f3d0:	ldrb	w8, [x22]
   3f3d4:	cmp	w8, #0x30
   3f3d8:	b.ne	3f404 <mpfr_strtofr@@Base+0x254>  // b.any
   3f3dc:	ldrb	w8, [x22, #1]
   3f3e0:	orr	w8, w8, #0x20
   3f3e4:	cmp	w8, #0x78
   3f3e8:	b.ne	3f404 <mpfr_strtofr@@Base+0x254>  // b.any
   3f3ec:	mov	x28, x22
   3f3f0:	add	x22, x22, #0x2
   3f3f4:	mov	w24, #0x10                  	// #16
   3f3f8:	b	3f408 <mpfr_strtofr@@Base+0x258>
   3f3fc:	mov	w8, #0x5                   	// #5
   3f400:	b	3f530 <mpfr_strtofr@@Base+0x380>
   3f404:	mov	x28, xzr
   3f408:	tst	w24, #0xfffffffd
   3f40c:	stp	x20, x19, [sp, #8]
   3f410:	b.ne	3f43c <mpfr_strtofr@@Base+0x28c>  // b.any
   3f414:	ldrb	w8, [x22]
   3f418:	cmp	w8, #0x30
   3f41c:	b.ne	3f43c <mpfr_strtofr@@Base+0x28c>  // b.any
   3f420:	ldrb	w8, [x22, #1]
   3f424:	orr	w8, w8, #0x20
   3f428:	cmp	w8, #0x62
   3f42c:	b.ne	3f43c <mpfr_strtofr@@Base+0x28c>  // b.any
   3f430:	mov	x28, x22
   3f434:	add	x22, x22, #0x2
   3f438:	mov	w24, #0x2                   	// #2
   3f43c:	cmp	w24, #0x0
   3f440:	mov	w8, #0xa                   	// #10
   3f444:	csel	w25, w8, w24, eq  // eq = none
   3f448:	mov	x0, x22
   3f44c:	str	w25, [x21, #4]
   3f450:	bl	bf00 <strlen@plt>
   3f454:	add	x0, x0, #0x1
   3f458:	str	x0, [x21, #32]
   3f45c:	bl	d1f0 <mpfr_allocate_func@plt>
   3f460:	add	x27, x21, #0x28
   3f464:	str	x0, [x21, #8]
   3f468:	ldr	x19, [x21, #8]
   3f46c:	mov	w20, wzr
   3f470:	mov	x24, x22
   3f474:	mov	x22, x28
   3f478:	stp	xzr, xzr, [x27]
   3f47c:	b	3f490 <mpfr_strtofr@@Base+0x2e0>
   3f480:	cmp	w20, #0x0
   3f484:	cset	w8, ne  // ne = any
   3f488:	csinc	w20, w20, wzr, ne  // ne = any
   3f48c:	cbnz	w8, 3f4fc <mpfr_strtofr@@Base+0x34c>
   3f490:	ldrb	w0, [x24], #1
   3f494:	cmp	w0, #0x2e
   3f498:	b.eq	3f480 <mpfr_strtofr@@Base+0x2d0>  // b.none
   3f49c:	cmp	w0, w26
   3f4a0:	b.eq	3f480 <mpfr_strtofr@@Base+0x2d0>  // b.none
   3f4a4:	mov	w1, w25
   3f4a8:	bl	405c4 <mpfr_strtofr@@Base+0x1414>
   3f4ac:	cmn	w0, #0x1
   3f4b0:	b.eq	3f4d8 <mpfr_strtofr@@Base+0x328>  // b.none
   3f4b4:	mov	w28, w0
   3f4b8:	tbnz	w0, #31, 3f4e0 <mpfr_strtofr@@Base+0x330>
   3f4bc:	strb	w28, [x19], #1
   3f4c0:	mov	w8, wzr
   3f4c4:	cbnz	w20, 3f48c <mpfr_strtofr@@Base+0x2dc>
   3f4c8:	ldr	x9, [x27]
   3f4cc:	add	x9, x9, #0x1
   3f4d0:	str	x9, [x27]
   3f4d4:	b	3f48c <mpfr_strtofr@@Base+0x2dc>
   3f4d8:	mov	w8, #0x1                   	// #1
   3f4dc:	b	3f48c <mpfr_strtofr@@Base+0x2dc>
   3f4e0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   3f4e4:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   3f4e8:	mov	w1, #0x15f                 	// #351
   3f4ec:	add	x0, x0, #0x753
   3f4f0:	add	x2, x2, #0x7a1
   3f4f4:	bl	d030 <mpfr_assert_fail@plt>
   3f4f8:	b	3f4bc <mpfr_strtofr@@Base+0x30c>
   3f4fc:	ldr	x8, [x21, #8]
   3f500:	subs	x8, x19, x8
   3f504:	str	x8, [x21, #24]
   3f508:	b.ne	3f5e0 <mpfr_strtofr@@Base+0x430>  // b.any
   3f50c:	mov	x28, xzr
   3f510:	cbnz	x22, 3f468 <mpfr_strtofr@@Base+0x2b8>
   3f514:	mov	w23, #0xffffffff            	// #-1
   3f518:	cmp	w23, #0x1
   3f51c:	b.ne	3f7d0 <mpfr_strtofr@@Base+0x620>  // b.any
   3f520:	b	3f7e0 <mpfr_strtofr@@Base+0x630>
   3f524:	mov	w8, #0x5                   	// #5
   3f528:	b	3f6c8 <mpfr_strtofr@@Base+0x518>
   3f52c:	mov	w8, #0x3                   	// #3
   3f530:	add	x8, x22, x8
   3f534:	ldrb	w9, [x8]
   3f538:	cmp	w9, #0x28
   3f53c:	b.ne	3f5a8 <mpfr_strtofr@@Base+0x3f8>  // b.any
   3f540:	ldrb	w11, [x8, #1]
   3f544:	mov	x10, x8
   3f548:	cmp	w11, #0x29
   3f54c:	cset	w9, eq  // eq = none
   3f550:	b.ne	3f56c <mpfr_strtofr@@Base+0x3bc>  // b.any
   3f554:	b	3f59c <mpfr_strtofr@@Base+0x3ec>
   3f558:	ldrb	w11, [x10, #2]
   3f55c:	add	x10, x10, #0x1
   3f560:	cmp	w11, #0x29
   3f564:	cset	w9, eq  // eq = none
   3f568:	b.eq	3f59c <mpfr_strtofr@@Base+0x3ec>  // b.none
   3f56c:	and	w12, w11, #0xffffffdf
   3f570:	sub	w12, w12, #0x41
   3f574:	and	w12, w12, #0xff
   3f578:	cmp	w12, #0x1a
   3f57c:	b.cc	3f558 <mpfr_strtofr@@Base+0x3a8>  // b.lo, b.ul, b.last
   3f580:	and	w12, w11, #0xff
   3f584:	cmp	w12, #0x5f
   3f588:	b.eq	3f558 <mpfr_strtofr@@Base+0x3a8>  // b.none
   3f58c:	sub	w11, w11, #0x30
   3f590:	and	w11, w11, #0xff
   3f594:	cmp	w11, #0x9
   3f598:	b.ls	3f558 <mpfr_strtofr@@Base+0x3a8>  // b.plast
   3f59c:	add	x10, x10, #0x2
   3f5a0:	tst	w9, #0x1
   3f5a4:	csel	x8, x10, x8, ne  // ne = any
   3f5a8:	str	x8, [x19]
   3f5ac:	mov	x8, #0x2                   	// #2
   3f5b0:	movk	x8, #0x8000, lsl #48
   3f5b4:	str	x8, [x20, #16]
   3f5b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   3f5bc:	ldr	x1, [x0, #2800]
   3f5c0:	add	x0, x0, #0xaf0
   3f5c4:	blr	x1
   3f5c8:	mrs	x8, tpidr_el0
   3f5cc:	ldr	w9, [x8, x0]
   3f5d0:	mov	w23, wzr
   3f5d4:	orr	w9, w9, #0x4
   3f5d8:	str	w9, [x8, x0]
   3f5dc:	b	3f7e0 <mpfr_strtofr@@Base+0x630>
   3f5e0:	mov	x22, x24
   3f5e4:	ldrb	w8, [x22, #-1]!
   3f5e8:	cmp	w8, #0x40
   3f5ec:	b.eq	3f604 <mpfr_strtofr@@Base+0x454>  // b.none
   3f5f0:	cmp	w25, #0xa
   3f5f4:	b.gt	3f664 <mpfr_strtofr@@Base+0x4b4>
   3f5f8:	orr	w9, w8, #0x20
   3f5fc:	cmp	w9, #0x65
   3f600:	b.ne	3f664 <mpfr_strtofr@@Base+0x4b4>  // b.any
   3f604:	ldr	x9, [x23]
   3f608:	ldrb	w10, [x24]
   3f60c:	ldrh	w9, [x9, x10, lsl #1]
   3f610:	tbnz	w9, #13, 3f664 <mpfr_strtofr@@Base+0x4b4>
   3f614:	sub	x1, x29, #0x8
   3f618:	mov	w2, #0xa                   	// #10
   3f61c:	mov	x0, x24
   3f620:	bl	cb20 <strtol@plt>
   3f624:	ldur	x8, [x29, #-8]
   3f628:	cmp	x8, x24
   3f62c:	csel	x22, x22, x8, eq  // eq = none
   3f630:	tbnz	x0, #63, 3f6f8 <mpfr_strtofr@@Base+0x548>
   3f634:	ldr	x8, [x27]
   3f638:	tbnz	x8, #63, 3f6f8 <mpfr_strtofr@@Base+0x548>
   3f63c:	adds	x8, x8, x0
   3f640:	cset	w10, cs  // cs = hs, nlast
   3f644:	cmp	x8, #0x0
   3f648:	cset	w11, lt  // lt = tstop
   3f64c:	orr	w10, w11, w10
   3f650:	mov	w9, #0x1                   	// #1
   3f654:	csel	x8, x0, x8, lt  // lt = tstop
   3f658:	cmp	w10, #0x0
   3f65c:	cinc	w23, w9, ne  // ne = any
   3f660:	b	3f710 <mpfr_strtofr@@Base+0x560>
   3f664:	cmp	w25, #0x2
   3f668:	b.eq	3f674 <mpfr_strtofr@@Base+0x4c4>  // b.none
   3f66c:	cmp	w25, #0x10
   3f670:	b.ne	3f6f0 <mpfr_strtofr@@Base+0x540>  // b.any
   3f674:	ldp	x20, x19, [sp, #8]
   3f678:	orr	w8, w8, #0x20
   3f67c:	cmp	w8, #0x70
   3f680:	b.ne	3f6b4 <mpfr_strtofr@@Base+0x504>  // b.any
   3f684:	ldr	x8, [x23]
   3f688:	ldrb	w9, [x24]
   3f68c:	ldrh	w8, [x8, x9, lsl #1]
   3f690:	tbnz	w8, #13, 3f6b4 <mpfr_strtofr@@Base+0x504>
   3f694:	sub	x1, x29, #0x8
   3f698:	mov	w2, #0xa                   	// #10
   3f69c:	mov	x0, x24
   3f6a0:	bl	cb20 <strtol@plt>
   3f6a4:	ldur	x8, [x29, #-8]
   3f6a8:	str	x0, [x21, #48]
   3f6ac:	cmp	x8, x24
   3f6b0:	csel	x22, x22, x8, eq  // eq = none
   3f6b4:	mov	w23, #0x1                   	// #1
   3f6b8:	b	3f718 <mpfr_strtofr@@Base+0x568>
   3f6bc:	mov	w8, #0x8                   	// #8
   3f6c0:	b	3f6c8 <mpfr_strtofr@@Base+0x518>
   3f6c4:	mov	w8, #0x3                   	// #3
   3f6c8:	add	x8, x22, x8
   3f6cc:	cmp	w25, #0x2d
   3f6d0:	mov	w10, #0xffffffff            	// #-1
   3f6d4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3f6d8:	str	x8, [x19]
   3f6dc:	cneg	w8, w10, ne  // ne = any
   3f6e0:	mov	w23, wzr
   3f6e4:	str	x9, [x20, #16]
   3f6e8:	str	w8, [x20, #8]
   3f6ec:	b	3f7e0 <mpfr_strtofr@@Base+0x630>
   3f6f0:	mov	w23, #0x1                   	// #1
   3f6f4:	b	3f714 <mpfr_strtofr@@Base+0x564>
   3f6f8:	tbz	x0, #63, 3f704 <mpfr_strtofr@@Base+0x554>
   3f6fc:	ldr	x8, [x27]
   3f700:	tbnz	x8, #63, 3f804 <mpfr_strtofr@@Base+0x654>
   3f704:	ldr	x8, [x27]
   3f708:	mov	w23, #0x1                   	// #1
   3f70c:	add	x8, x8, x0
   3f710:	str	x8, [x27]
   3f714:	ldp	x20, x19, [sp, #8]
   3f718:	ldr	x10, [x21, #24]
   3f71c:	ldr	x8, [x21, #8]
   3f720:	cbz	x10, 3f758 <mpfr_strtofr@@Base+0x5a8>
   3f724:	add	x9, x8, x10
   3f728:	sub	x10, x10, #0x1
   3f72c:	ldrb	w11, [x8]
   3f730:	cbnz	w11, 3f758 <mpfr_strtofr@@Base+0x5a8>
   3f734:	ldr	x11, [x21, #40]
   3f738:	str	x10, [x21, #24]
   3f73c:	sub	x10, x10, #0x1
   3f740:	cmn	x10, #0x1
   3f744:	sub	x11, x11, #0x1
   3f748:	add	x8, x8, #0x1
   3f74c:	str	x11, [x21, #40]
   3f750:	b.ne	3f72c <mpfr_strtofr@@Base+0x57c>  // b.any
   3f754:	mov	x8, x9
   3f758:	ldr	x9, [x21, #24]
   3f75c:	cmp	x9, #0x0
   3f760:	cset	w10, eq  // eq = none
   3f764:	cbz	x9, 3f7a0 <mpfr_strtofr@@Base+0x5f0>
   3f768:	add	x11, x9, x8
   3f76c:	ldurb	w11, [x11, #-1]
   3f770:	cbnz	w11, 3f794 <mpfr_strtofr@@Base+0x5e4>
   3f774:	sub	x11, x8, #0x2
   3f778:	subs	x12, x9, #0x1
   3f77c:	cset	w10, eq  // eq = none
   3f780:	str	x12, [x21, #24]
   3f784:	b.eq	3f7a0 <mpfr_strtofr@@Base+0x5f0>  // b.none
   3f788:	ldrb	w13, [x11, x9]
   3f78c:	mov	x9, x12
   3f790:	cbz	w13, 3f778 <mpfr_strtofr@@Base+0x5c8>
   3f794:	str	x8, [x21, #16]
   3f798:	tbnz	w10, #0, 3f7a4 <mpfr_strtofr@@Base+0x5f4>
   3f79c:	b	3f7c4 <mpfr_strtofr@@Base+0x614>
   3f7a0:	str	x8, [x21, #16]
   3f7a4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3f7a8:	str	x8, [x20, #16]
   3f7ac:	ldr	w8, [x21]
   3f7b0:	mov	w23, wzr
   3f7b4:	cmp	w8, #0x0
   3f7b8:	mov	w8, #0x1                   	// #1
   3f7bc:	cneg	w8, w8, ne  // ne = any
   3f7c0:	str	w8, [x20, #8]
   3f7c4:	str	x22, [x19]
   3f7c8:	cmp	w23, #0x1
   3f7cc:	b.eq	3f7e0 <mpfr_strtofr@@Base+0x630>  // b.none
   3f7d0:	ldr	x0, [x21, #8]
   3f7d4:	cbz	x0, 3f7e0 <mpfr_strtofr@@Base+0x630>
   3f7d8:	ldr	x1, [x21, #32]
   3f7dc:	bl	d120 <mpfr_free_func@plt>
   3f7e0:	mov	w0, w23
   3f7e4:	ldp	x20, x19, [sp, #112]
   3f7e8:	ldp	x22, x21, [sp, #96]
   3f7ec:	ldp	x24, x23, [sp, #80]
   3f7f0:	ldp	x26, x25, [sp, #64]
   3f7f4:	ldp	x28, x27, [sp, #48]
   3f7f8:	ldp	x29, x30, [sp, #32]
   3f7fc:	add	sp, sp, #0x80
   3f800:	ret
   3f804:	add	x8, x8, x0
   3f808:	neg	x9, x0
   3f80c:	neg	x12, x8
   3f810:	mov	w10, #0x3                   	// #3
   3f814:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3f818:	cmp	x12, x9
   3f81c:	csinc	w9, w10, wzr, cc  // cc = lo, ul, last
   3f820:	cmn	x8, x11
   3f824:	csneg	x11, x0, x8, ne  // ne = any
   3f828:	csel	w10, w9, w10, eq  // eq = none
   3f82c:	cmp	x12, #0x0
   3f830:	csel	x8, x11, x8, lt  // lt = tstop
   3f834:	csel	w23, w10, w9, lt  // lt = tstop
   3f838:	b	3f710 <mpfr_strtofr@@Base+0x560>
   3f83c:	stp	x29, x30, [sp, #-96]!
   3f840:	stp	x28, x27, [sp, #16]
   3f844:	stp	x26, x25, [sp, #32]
   3f848:	stp	x24, x23, [sp, #48]
   3f84c:	stp	x22, x21, [sp, #64]
   3f850:	stp	x20, x19, [sp, #80]
   3f854:	mov	x29, sp
   3f858:	sub	sp, sp, #0x80
   3f85c:	ldr	x22, [x0]
   3f860:	mov	w20, w2
   3f864:	mov	x21, x1
   3f868:	stur	x0, [x29, #-104]
   3f86c:	subs	x19, x22, #0x1
   3f870:	b.eq	40530 <mpfr_strtofr@@Base+0x1380>  // b.none
   3f874:	b.le	40538 <mpfr_strtofr@@Base+0x1388>
   3f878:	clz	x8, x19
   3f87c:	mov	w9, #0x40                  	// #64
   3f880:	sub	x8, x9, x8
   3f884:	add	x28, x8, x22
   3f888:	cmp	w20, #0x0
   3f88c:	stur	xzr, [x29, #-8]
   3f890:	cinc	x8, x22, eq  // eq = none
   3f894:	stp	x8, x21, [x29, #-88]
   3f898:	mov	w8, #0x40                  	// #64
   3f89c:	stur	w20, [x29, #-108]
   3f8a0:	stur	x22, [x29, #-120]
   3f8a4:	stur	x8, [x29, #-96]
   3f8a8:	stur	x8, [x29, #-72]
   3f8ac:	sub	x8, x28, #0x1
   3f8b0:	add	x9, x28, #0x3e
   3f8b4:	cmp	x8, #0x0
   3f8b8:	csel	x8, x9, x8, lt  // lt = tstop
   3f8bc:	asr	x8, x8, #6
   3f8c0:	add	x23, x8, #0x1
   3f8c4:	mov	w20, #0x8                   	// #8
   3f8c8:	bfi	x20, x23, #4, #60
   3f8cc:	add	x1, x20, #0x8
   3f8d0:	cmp	x1, #0x4, lsl #12
   3f8d4:	lsl	x22, x23, #6
   3f8d8:	stur	x8, [x29, #-64]
   3f8dc:	stur	x24, [x29, #-48]
   3f8e0:	b.hi	402e4 <mpfr_strtofr@@Base+0x1134>  // b.pmore
   3f8e4:	add	x9, x1, #0xf
   3f8e8:	mov	x8, sp
   3f8ec:	and	x9, x9, #0xfffffffffffffff0
   3f8f0:	sub	x0, x8, x9
   3f8f4:	mov	sp, x0
   3f8f8:	ldr	w3, [x21, #4]
   3f8fc:	adrp	x9, 60000 <mpfr_bases@@Base+0x408>
   3f900:	add	x9, x9, #0x7b4
   3f904:	stur	x0, [x29, #-40]
   3f908:	sub	w8, w3, #0x2
   3f90c:	add	x8, x9, w8, sxtw #3
   3f910:	ldp	w8, w9, [x8]
   3f914:	stur	x22, [x29, #-56]
   3f918:	add	x24, x0, x23, lsl #3
   3f91c:	mov	x0, x24
   3f920:	sdiv	x10, x22, x9
   3f924:	msub	x11, x10, x9, x22
   3f928:	madd	x11, x11, x8, x9
   3f92c:	sub	x11, x11, #0x1
   3f930:	udiv	x9, x11, x9
   3f934:	ldp	x1, x11, [x21, #16]
   3f938:	madd	x8, x10, x8, x9
   3f93c:	add	x9, x8, #0x1
   3f940:	cmp	x9, x11
   3f944:	csinc	x22, x11, x8, hi  // hi = pmore
   3f948:	mov	x2, x22
   3f94c:	bl	bfe0 <__gmpn_set_str@plt>
   3f950:	ldr	x8, [x21, #24]
   3f954:	sub	x2, x0, #0x1
   3f958:	ldr	x9, [x24, x2, lsl #3]
   3f95c:	mov	x19, x23
   3f960:	cmp	x22, x8
   3f964:	cset	w10, eq  // eq = none
   3f968:	subs	x23, x23, x0
   3f96c:	mov	x27, x0
   3f970:	clz	x26, x9
   3f974:	lsl	x25, x23, #6
   3f978:	stur	w10, [x29, #-20]
   3f97c:	b.mi	3f9d4 <mpfr_strtofr@@Base+0x824>  // b.first
   3f980:	cbz	w26, 3f998 <mpfr_strtofr@@Base+0x7e8>
   3f984:	add	x0, x24, x23, lsl #3
   3f988:	mov	x1, x24
   3f98c:	mov	x2, x27
   3f990:	mov	w3, w26
   3f994:	bl	c120 <__gmpn_lshift@plt>
   3f998:	cmp	x23, #0x1
   3f99c:	b.lt	3f9c4 <mpfr_strtofr@@Base+0x814>  // b.tstop
   3f9a0:	cbnz	w26, 3f9b4 <mpfr_strtofr@@Base+0x804>
   3f9a4:	add	x0, x24, x23, lsl #3
   3f9a8:	mov	x1, x24
   3f9ac:	mov	x2, x27
   3f9b0:	bl	bf30 <__gmpn_copyd@plt>
   3f9b4:	lsl	x2, x23, #3
   3f9b8:	mov	x0, x24
   3f9bc:	mov	w1, wzr
   3f9c0:	bl	c5b0 <memset@plt>
   3f9c4:	mov	x8, x26
   3f9c8:	mov	x26, x25
   3f9cc:	mov	x23, x28
   3f9d0:	b	3fa6c <mpfr_strtofr@@Base+0x8bc>
   3f9d4:	cmp	x22, x8
   3f9d8:	cbz	w26, 3f9f8 <mpfr_strtofr@@Base+0x848>
   3f9dc:	b.ne	3fa10 <mpfr_strtofr@@Base+0x860>  // b.any
   3f9e0:	cmn	x23, #0x1
   3f9e4:	b.eq	3fa30 <mpfr_strtofr@@Base+0x880>  // b.none
   3f9e8:	ldr	x8, [x24]
   3f9ec:	cmp	x8, #0x0
   3f9f0:	cset	w21, eq  // eq = none
   3f9f4:	b	3fa34 <mpfr_strtofr@@Base+0x884>
   3f9f8:	b.ne	3fa18 <mpfr_strtofr@@Base+0x868>  // b.any
   3f9fc:	ldr	x8, [x24]
   3fa00:	cmp	x8, #0x0
   3fa04:	cset	w8, eq  // eq = none
   3fa08:	stur	w8, [x29, #-20]
   3fa0c:	b	3fa1c <mpfr_strtofr@@Base+0x86c>
   3fa10:	mov	w21, wzr
   3fa14:	b	3fa34 <mpfr_strtofr@@Base+0x884>
   3fa18:	stur	wzr, [x29, #-20]
   3fa1c:	add	x1, x24, #0x8
   3fa20:	mov	x0, x24
   3fa24:	mov	x23, x28
   3fa28:	bl	c9f0 <__gmpn_copyi@plt>
   3fa2c:	b	3fa68 <mpfr_strtofr@@Base+0x8b8>
   3fa30:	mov	w21, #0x1                   	// #1
   3fa34:	mvn	x8, x23
   3fa38:	add	x1, x24, x8, lsl #3
   3fa3c:	mov	w8, #0x40                  	// #64
   3fa40:	sub	w3, w8, w26
   3fa44:	mov	x0, x24
   3fa48:	mov	x2, x27
   3fa4c:	bl	c140 <__gmpn_rshift@plt>
   3fa50:	cmp	x0, #0x0
   3fa54:	cset	w8, eq  // eq = none
   3fa58:	and	w8, w21, w8
   3fa5c:	ldur	x21, [x29, #-80]
   3fa60:	stur	w8, [x29, #-20]
   3fa64:	mov	x23, x28
   3fa68:	mov	x8, x25
   3fa6c:	ldrsw	x9, [x21, #4]
   3fa70:	add	x27, x26, x8
   3fa74:	neg	x26, x27
   3fa78:	mov	x25, x19
   3fa7c:	sub	w8, w9, #0x1
   3fa80:	tst	w9, w8
   3fa84:	b.ne	3facc <mpfr_strtofr@@Base+0x91c>  // b.any
   3fa88:	ldr	x8, [x21, #40]
   3fa8c:	cmp	x22, #0x0
   3fa90:	b.gt	3fb40 <mpfr_strtofr@@Base+0x990>
   3fa94:	tbnz	x8, #63, 3fb40 <mpfr_strtofr@@Base+0x990>
   3fa98:	sub	x10, x8, x22
   3fa9c:	cmp	x10, x8
   3faa0:	cset	w8, cc  // cc = lo, ul, last
   3faa4:	cmp	x10, #0x0
   3faa8:	ldur	x19, [x29, #-32]
   3faac:	cset	w11, lt  // lt = tstop
   3fab0:	orr	w11, w8, w11
   3fab4:	cmp	w11, #0x0
   3fab8:	mov	w8, #0xe                   	// #14
   3fabc:	csel	w8, w8, wzr, ne  // ne = any
   3fac0:	csel	x19, x19, x10, ne  // ne = any
   3fac4:	tbz	w11, #0, 3fc70 <mpfr_strtofr@@Base+0xac0>
   3fac8:	b	3ff58 <mpfr_strtofr@@Base+0xda8>
   3facc:	ldr	x8, [x21, #40]
   3fad0:	lsl	x28, x25, #1
   3fad4:	cmp	x8, x22
   3fad8:	b.le	3fb6c <mpfr_strtofr@@Base+0x9bc>
   3fadc:	ldur	x19, [x29, #-40]
   3fae0:	cmp	x20, #0x4, lsl #12
   3fae4:	b.hi	402f0 <mpfr_strtofr@@Base+0x1140>  // b.pmore
   3fae8:	add	x9, x20, #0xf
   3faec:	mov	x8, sp
   3faf0:	and	x9, x9, #0xfffffffffffffff0
   3faf4:	sub	x20, x8, x9
   3faf8:	mov	sp, x20
   3fafc:	ldr	x8, [x21, #40]
   3fb00:	ldr	w2, [x21, #4]
   3fb04:	sub	x1, x29, #0x10
   3fb08:	mov	x0, x19
   3fb0c:	sub	x3, x8, x22
   3fb10:	mov	x4, x25
   3fb14:	bl	d0d0 <mpfr_mpn_exp@plt>
   3fb18:	mov	x22, x0
   3fb1c:	cmn	w22, #0x2
   3fb20:	b.ne	3fc04 <mpfr_strtofr@@Base+0xa54>  // b.any
   3fb24:	ldur	x19, [x29, #-32]
   3fb28:	mov	w8, #0xfffffffe            	// #-2
   3fb2c:	stur	x8, [x29, #-72]
   3fb30:	mov	w8, #0xe                   	// #14
   3fb34:	mov	x24, x20
   3fb38:	cbnz	w8, 40260 <mpfr_strtofr@@Base+0x10b0>
   3fb3c:	b	4022c <mpfr_strtofr@@Base+0x107c>
   3fb40:	cmp	x22, #0x1
   3fb44:	b.lt	3fc6c <mpfr_strtofr@@Base+0xabc>  // b.tstop
   3fb48:	tbz	x8, #63, 3fc6c <mpfr_strtofr@@Base+0xabc>
   3fb4c:	neg	x10, x8
   3fb50:	sub	x8, x22, x8
   3fb54:	cmp	x8, x10
   3fb58:	b.cs	3fd7c <mpfr_strtofr@@Base+0xbcc>  // b.hs, b.nlast
   3fb5c:	ldur	x19, [x29, #-32]
   3fb60:	mov	w8, #0x11                  	// #17
   3fb64:	cbnz	w8, 3ff58 <mpfr_strtofr@@Base+0xda8>
   3fb68:	b	3fc70 <mpfr_strtofr@@Base+0xac0>
   3fb6c:	ldur	x19, [x29, #-40]
   3fb70:	b.ge	3fd2c <mpfr_strtofr@@Base+0xb7c>  // b.tcont
   3fb74:	mov	w8, #0x18                  	// #24
   3fb78:	orr	x9, xzr, #0x8
   3fb7c:	madd	x1, x25, x8, x9
   3fb80:	cmp	x1, #0x4, lsl #12
   3fb84:	b.hi	40304 <mpfr_strtofr@@Base+0x1154>  // b.pmore
   3fb88:	add	x9, x1, #0xf
   3fb8c:	mov	x8, sp
   3fb90:	and	x9, x9, #0xfffffffffffffff0
   3fb94:	sub	x20, x8, x9
   3fb98:	mov	sp, x20
   3fb9c:	lsl	x2, x25, #3
   3fba0:	mov	x0, x19
   3fba4:	mov	w1, wzr
   3fba8:	bl	c5b0 <memset@plt>
   3fbac:	tbnz	x22, #63, 3fbbc <mpfr_strtofr@@Base+0xa0c>
   3fbb0:	ldr	x8, [x21, #40]
   3fbb4:	cmp	x8, #0x0
   3fbb8:	b.le	3feb8 <mpfr_strtofr@@Base+0xd08>
   3fbbc:	tbnz	x22, #63, 3fdc4 <mpfr_strtofr@@Base+0xc14>
   3fbc0:	ldr	x8, [x21, #40]
   3fbc4:	sub	x8, x22, x8
   3fbc8:	stur	x8, [x29, #-16]
   3fbcc:	ldr	w2, [x21, #4]
   3fbd0:	ldur	x3, [x29, #-16]
   3fbd4:	add	x24, x20, x28, lsl #3
   3fbd8:	add	x22, x24, #0x8
   3fbdc:	sub	x1, x29, #0x10
   3fbe0:	mov	x0, x22
   3fbe4:	mov	x4, x25
   3fbe8:	bl	d0d0 <mpfr_mpn_exp@plt>
   3fbec:	cmn	w0, #0x2
   3fbf0:	b.eq	3fe40 <mpfr_strtofr@@Base+0xc90>  // b.none
   3fbf4:	cmn	w0, #0x1
   3fbf8:	b.ne	3fe4c <mpfr_strtofr@@Base+0xc9c>  // b.any
   3fbfc:	mov	w0, wzr
   3fc00:	b	3fe50 <mpfr_strtofr@@Base+0xca0>
   3fc04:	mov	x0, x20
   3fc08:	mov	x1, x24
   3fc0c:	mov	x2, x19
   3fc10:	mov	x3, x25
   3fc14:	bl	c940 <__gmpn_mul_n@plt>
   3fc18:	adds	w9, w22, #0x1
   3fc1c:	csinc	w22, w9, wzr, cc  // cc = lo, ul, last
   3fc20:	ldur	w9, [x29, #-20]
   3fc24:	ldur	x8, [x29, #-16]
   3fc28:	cset	w10, cs  // cs = hs, nlast
   3fc2c:	cmn	x23, #0x7e
   3fc30:	and	w9, w9, w10
   3fc34:	stur	w9, [x29, #-20]
   3fc38:	stur	x22, [x29, #-72]
   3fc3c:	b.lt	3fd88 <mpfr_strtofr@@Base+0xbd8>  // b.tstop
   3fc40:	tbnz	x8, #63, 3fd88 <mpfr_strtofr@@Base+0xbd8>
   3fc44:	ldur	x9, [x29, #-56]
   3fc48:	adds	x9, x8, x9
   3fc4c:	mov	w8, #0xe                   	// #14
   3fc50:	b.cs	3ffc8 <mpfr_strtofr@@Base+0xe18>  // b.hs, b.nlast
   3fc54:	ldur	x19, [x29, #-32]
   3fc58:	tbnz	x9, #63, 3fc64 <mpfr_strtofr@@Base+0xab4>
   3fc5c:	mov	w8, wzr
   3fc60:	stur	x9, [x29, #-16]
   3fc64:	cbnz	w8, 401fc <mpfr_strtofr@@Base+0x104c>
   3fc68:	b	3fdfc <mpfr_strtofr@@Base+0xc4c>
   3fc6c:	sub	x19, x8, x22
   3fc70:	clz	x8, x9
   3fc74:	mov	w9, #0x3f                  	// #63
   3fc78:	cmp	x19, #0x1
   3fc7c:	sub	w8, w9, w8
   3fc80:	b.lt	3fc98 <mpfr_strtofr@@Base+0xae8>  // b.tstop
   3fc84:	sxtw	x9, w8
   3fc88:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
   3fc8c:	sdiv	x9, x10, x9
   3fc90:	cmp	x9, x19
   3fc94:	b.le	3fd74 <mpfr_strtofr@@Base+0xbc4>
   3fc98:	tbz	x19, #63, 3fcb0 <mpfr_strtofr@@Base+0xb00>
   3fc9c:	sxtw	x9, w8
   3fca0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3fca4:	sdiv	x9, x10, x9
   3fca8:	cmp	x9, x19
   3fcac:	b.ge	3fdbc <mpfr_strtofr@@Base+0xc0c>  // b.tcont
   3fcb0:	sxtw	x8, w8
   3fcb4:	mul	x19, x19, x8
   3fcb8:	tbnz	x19, #63, 3fd38 <mpfr_strtofr@@Base+0xb88>
   3fcbc:	ldr	x8, [x21, #48]
   3fcc0:	tbnz	x8, #63, 3fd38 <mpfr_strtofr@@Base+0xb88>
   3fcc4:	adds	x9, x8, x19
   3fcc8:	cset	w8, cs  // cs = hs, nlast
   3fccc:	cmp	x9, #0x0
   3fcd0:	cset	w10, lt  // lt = tstop
   3fcd4:	orr	w10, w8, w10
   3fcd8:	cmp	w10, #0x0
   3fcdc:	mov	w8, #0xe                   	// #14
   3fce0:	csel	w8, w8, wzr, ne  // ne = any
   3fce4:	csel	x19, x19, x9, ne  // ne = any
   3fce8:	tbnz	w10, #0, 3ff58 <mpfr_strtofr@@Base+0xda8>
   3fcec:	orr	x8, x19, x26
   3fcf0:	tbnz	x8, #63, 3fd54 <mpfr_strtofr@@Base+0xba4>
   3fcf4:	sub	x9, x19, x27
   3fcf8:	mov	x10, #0xfffffffffffffffd    	// #-3
   3fcfc:	cmp	x9, x26
   3fd00:	movk	x10, #0x7fff, lsl #48
   3fd04:	cset	w8, cc  // cc = lo, ul, last
   3fd08:	cmp	x9, x10
   3fd0c:	cset	w10, hi  // hi = pmore
   3fd10:	orr	w10, w8, w10
   3fd14:	cmp	w10, #0x0
   3fd18:	mov	w8, #0xe                   	// #14
   3fd1c:	csel	w8, w8, wzr, ne  // ne = any
   3fd20:	csel	x26, x26, x9, ne  // ne = any
   3fd24:	tbz	w10, #0, 3fd64 <mpfr_strtofr@@Base+0xbb4>
   3fd28:	b	3ff58 <mpfr_strtofr@@Base+0xda8>
   3fd2c:	ldur	x19, [x29, #-32]
   3fd30:	stur	xzr, [x29, #-72]
   3fd34:	b	4022c <mpfr_strtofr@@Base+0x107c>
   3fd38:	tbz	x19, #63, 3fd44 <mpfr_strtofr@@Base+0xb94>
   3fd3c:	ldr	x8, [x21, #48]
   3fd40:	tbnz	x8, #63, 40008 <mpfr_strtofr@@Base+0xe58>
   3fd44:	ldr	x8, [x21, #48]
   3fd48:	add	x19, x8, x19
   3fd4c:	orr	x8, x19, x26
   3fd50:	tbz	x8, #63, 3fcf4 <mpfr_strtofr@@Base+0xb44>
   3fd54:	tst	x19, x26
   3fd58:	sub	x9, x19, x27
   3fd5c:	b.lt	3ff84 <mpfr_strtofr@@Base+0xdd4>  // b.tstop
   3fd60:	mov	x26, x9
   3fd64:	mov	w8, wzr
   3fd68:	stur	xzr, [x29, #-72]
   3fd6c:	cbnz	w8, 3ff60 <mpfr_strtofr@@Base+0xdb0>
   3fd70:	b	4022c <mpfr_strtofr@@Base+0x107c>
   3fd74:	mov	w8, #0xe                   	// #14
   3fd78:	b	3ff58 <mpfr_strtofr@@Base+0xda8>
   3fd7c:	tbnz	x8, #63, 3ff3c <mpfr_strtofr@@Base+0xd8c>
   3fd80:	neg	x10, x8
   3fd84:	b	3ff4c <mpfr_strtofr@@Base+0xd9c>
   3fd88:	cmn	x23, #0x7f
   3fd8c:	b.gt	3fdec <mpfr_strtofr@@Base+0xc3c>
   3fd90:	tbz	x8, #63, 3fdec <mpfr_strtofr@@Base+0xc3c>
   3fd94:	ldur	x9, [x29, #-56]
   3fd98:	ldur	x19, [x29, #-32]
   3fd9c:	neg	x10, x8
   3fda0:	add	x9, x8, x9
   3fda4:	neg	x8, x9
   3fda8:	cmp	x8, x10
   3fdac:	b.cs	3ffd4 <mpfr_strtofr@@Base+0xe24>  // b.hs, b.nlast
   3fdb0:	mov	w8, #0x11                  	// #17
   3fdb4:	cbnz	w8, 401fc <mpfr_strtofr@@Base+0x104c>
   3fdb8:	b	3fdfc <mpfr_strtofr@@Base+0xc4c>
   3fdbc:	mov	w8, #0x11                  	// #17
   3fdc0:	b	3ff58 <mpfr_strtofr@@Base+0xda8>
   3fdc4:	ldr	x8, [x21, #40]
   3fdc8:	cmp	x8, #0x1
   3fdcc:	b.lt	3fbc0 <mpfr_strtofr@@Base+0xa10>  // b.tstop
   3fdd0:	neg	x9, x22
   3fdd4:	sub	x8, x8, x22
   3fdd8:	cmp	x8, x9
   3fddc:	b.cs	40034 <mpfr_strtofr@@Base+0xe84>  // b.hs, b.nlast
   3fde0:	mov	w8, #0xe                   	// #14
   3fde4:	cbnz	w8, 40220 <mpfr_strtofr@@Base+0x1070>
   3fde8:	b	3fbcc <mpfr_strtofr@@Base+0xa1c>
   3fdec:	ldur	x9, [x29, #-56]
   3fdf0:	ldur	x19, [x29, #-32]
   3fdf4:	add	x8, x8, x9
   3fdf8:	stur	x8, [x29, #-16]
   3fdfc:	ldur	x8, [x29, #-16]
   3fe00:	orr	x9, x8, x26
   3fe04:	tbnz	x9, #63, 3fedc <mpfr_strtofr@@Base+0xd2c>
   3fe08:	sub	x9, x8, x27
   3fe0c:	mov	x10, #0xfffffffffffffffd    	// #-3
   3fe10:	cmp	x9, x26
   3fe14:	movk	x10, #0x7fff, lsl #48
   3fe18:	cset	w8, cc  // cc = lo, ul, last
   3fe1c:	cmp	x9, x10
   3fe20:	cset	w10, hi  // hi = pmore
   3fe24:	orr	w10, w8, w10
   3fe28:	cmp	w10, #0x0
   3fe2c:	mov	w8, #0xe                   	// #14
   3fe30:	csel	w8, w8, wzr, ne  // ne = any
   3fe34:	csel	x26, x26, x9, ne  // ne = any
   3fe38:	tbnz	w10, #0, 401fc <mpfr_strtofr@@Base+0x104c>
   3fe3c:	b	3feec <mpfr_strtofr@@Base+0xd3c>
   3fe40:	stur	x0, [x29, #-72]
   3fe44:	mov	w8, #0x11                  	// #17
   3fe48:	b	40220 <mpfr_strtofr@@Base+0x1070>
   3fe4c:	stur	wzr, [x29, #-20]
   3fe50:	ldur	x8, [x29, #-16]
   3fe54:	cmn	x23, #0x7e
   3fe58:	stur	x0, [x29, #-72]
   3fe5c:	b.lt	3fe88 <mpfr_strtofr@@Base+0xcd8>  // b.tstop
   3fe60:	tbnz	x8, #63, 3fe88 <mpfr_strtofr@@Base+0xcd8>
   3fe64:	ldur	x9, [x29, #-56]
   3fe68:	adds	x9, x8, x9
   3fe6c:	mov	w8, #0x11                  	// #17
   3fe70:	b.cs	3fe80 <mpfr_strtofr@@Base+0xcd0>  // b.hs, b.nlast
   3fe74:	tbnz	x9, #63, 3fe80 <mpfr_strtofr@@Base+0xcd0>
   3fe78:	mov	w8, wzr
   3fe7c:	stur	x9, [x29, #-16]
   3fe80:	cbnz	w8, 40220 <mpfr_strtofr@@Base+0x1070>
   3fe84:	b	40080 <mpfr_strtofr@@Base+0xed0>
   3fe88:	cmn	x23, #0x7f
   3fe8c:	b.gt	3fff4 <mpfr_strtofr@@Base+0xe44>
   3fe90:	tbz	x8, #63, 3fff4 <mpfr_strtofr@@Base+0xe44>
   3fe94:	ldur	x9, [x29, #-56]
   3fe98:	neg	x10, x8
   3fe9c:	add	x9, x8, x9
   3fea0:	neg	x8, x9
   3fea4:	cmp	x8, x10
   3fea8:	b.cs	40064 <mpfr_strtofr@@Base+0xeb4>  // b.hs, b.nlast
   3feac:	mov	w8, #0xe                   	// #14
   3feb0:	cbnz	w8, 40220 <mpfr_strtofr@@Base+0x1070>
   3feb4:	b	40080 <mpfr_strtofr@@Base+0xed0>
   3feb8:	sub	x9, x22, x8
   3febc:	cmp	x9, x22
   3fec0:	mov	w8, #0x11                  	// #17
   3fec4:	b.cc	3fed4 <mpfr_strtofr@@Base+0xd24>  // b.lo, b.ul, b.last
   3fec8:	tbnz	x9, #63, 3fed4 <mpfr_strtofr@@Base+0xd24>
   3fecc:	mov	w8, wzr
   3fed0:	stur	x9, [x29, #-16]
   3fed4:	cbnz	w8, 40220 <mpfr_strtofr@@Base+0x1070>
   3fed8:	b	3fbcc <mpfr_strtofr@@Base+0xa1c>
   3fedc:	tst	x8, x26
   3fee0:	sub	x9, x8, x27
   3fee4:	b.lt	4004c <mpfr_strtofr@@Base+0xe9c>  // b.tstop
   3fee8:	mov	x26, x9
   3feec:	add	x8, x20, x28, lsl #3
   3fef0:	ldur	x8, [x8, #-8]
   3fef4:	tbnz	x8, #63, 3ff14 <mpfr_strtofr@@Base+0xd64>
   3fef8:	ldur	x8, [x29, #-64]
   3fefc:	mov	w3, #0x1                   	// #1
   3ff00:	add	x0, x20, x8, lsl #3
   3ff04:	add	x2, x8, #0x2
   3ff08:	mov	x1, x0
   3ff0c:	bl	c120 <__gmpn_lshift@plt>
   3ff10:	sub	x26, x26, #0x1
   3ff14:	ldur	w8, [x29, #-20]
   3ff18:	cbz	w8, 3ff70 <mpfr_strtofr@@Base+0xdc0>
   3ff1c:	mov	x0, x20
   3ff20:	mov	x1, xzr
   3ff24:	bl	cf80 <__gmpn_scan1@plt>
   3ff28:	ldur	x8, [x29, #-56]
   3ff2c:	cmp	x0, x8
   3ff30:	cset	w8, cs  // cs = hs, nlast
   3ff34:	stur	w8, [x29, #-20]
   3ff38:	b	3ff74 <mpfr_strtofr@@Base+0xdc4>
   3ff3c:	ldur	x19, [x29, #-32]
   3ff40:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3ff44:	cmp	x8, x10
   3ff48:	b.ne	40028 <mpfr_strtofr@@Base+0xe78>  // b.any
   3ff4c:	mov	w8, wzr
   3ff50:	mov	x19, x10
   3ff54:	cbz	wzr, 3fc70 <mpfr_strtofr@@Base+0xac0>
   3ff58:	ldur	x24, [x29, #-48]
   3ff5c:	cbz	w8, 4022c <mpfr_strtofr@@Base+0x107c>
   3ff60:	stur	x19, [x29, #-32]
   3ff64:	mov	x28, x23
   3ff68:	cbz	w8, 3f8ac <mpfr_strtofr@@Base+0x6fc>
   3ff6c:	b	40334 <mpfr_strtofr@@Base+0x1184>
   3ff70:	stur	wzr, [x29, #-20]
   3ff74:	mov	w8, wzr
   3ff78:	add	x24, x20, x25, lsl #3
   3ff7c:	cbnz	w8, 40260 <mpfr_strtofr@@Base+0x10b0>
   3ff80:	b	4022c <mpfr_strtofr@@Base+0x107c>
   3ff84:	neg	x8, x9
   3ff88:	cmp	x27, x8
   3ff8c:	b.hi	40040 <mpfr_strtofr@@Base+0xe90>  // b.pmore
   3ff90:	mov	x10, #0xfffffffffffffffd    	// #-3
   3ff94:	movk	x10, #0x7fff, lsl #48
   3ff98:	cmp	x8, x10
   3ff9c:	b.ls	3ffb8 <mpfr_strtofr@@Base+0xe08>  // b.plast
   3ffa0:	mov	x9, #0x7ffffffffffffffe    	// #9223372036854775806
   3ffa4:	cmp	x8, x9
   3ffa8:	b.ne	40040 <mpfr_strtofr@@Base+0xe90>  // b.any
   3ffac:	mov	x8, #0xfffffffffffffffd    	// #-3
   3ffb0:	movk	x8, #0x7fff, lsl #48
   3ffb4:	add	x9, x8, #0x5
   3ffb8:	mov	w8, wzr
   3ffbc:	mov	x26, x9
   3ffc0:	cbnz	w8, 3ff58 <mpfr_strtofr@@Base+0xda8>
   3ffc4:	b	3fd64 <mpfr_strtofr@@Base+0xbb4>
   3ffc8:	ldur	x19, [x29, #-32]
   3ffcc:	cbnz	w8, 401fc <mpfr_strtofr@@Base+0x104c>
   3ffd0:	b	3fdfc <mpfr_strtofr@@Base+0xc4c>
   3ffd4:	tbz	x8, #63, 3ffe4 <mpfr_strtofr@@Base+0xe34>
   3ffd8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3ffdc:	cmp	x8, x9
   3ffe0:	b.ne	3fdb0 <mpfr_strtofr@@Base+0xc00>  // b.any
   3ffe4:	mov	w8, wzr
   3ffe8:	stur	x9, [x29, #-16]
   3ffec:	cbnz	w8, 401fc <mpfr_strtofr@@Base+0x104c>
   3fff0:	b	3fdfc <mpfr_strtofr@@Base+0xc4c>
   3fff4:	ldur	x9, [x29, #-56]
   3fff8:	add	x8, x8, x9
   3fffc:	stur	x8, [x29, #-16]
   40000:	tbz	x26, #63, 40084 <mpfr_strtofr@@Base+0xed4>
   40004:	b	40090 <mpfr_strtofr@@Base+0xee0>
   40008:	add	x9, x8, x19
   4000c:	neg	x10, x19
   40010:	neg	x8, x9
   40014:	cmp	x8, x10
   40018:	b.cs	4017c <mpfr_strtofr@@Base+0xfcc>  // b.hs, b.nlast
   4001c:	mov	w8, #0x11                  	// #17
   40020:	cbnz	w8, 3ff58 <mpfr_strtofr@@Base+0xda8>
   40024:	b	3fcec <mpfr_strtofr@@Base+0xb3c>
   40028:	mov	w8, #0x11                  	// #17
   4002c:	cbnz	w8, 3ff58 <mpfr_strtofr@@Base+0xda8>
   40030:	b	3fc70 <mpfr_strtofr@@Base+0xac0>
   40034:	tbnz	x8, #63, 40208 <mpfr_strtofr@@Base+0x1058>
   40038:	neg	x9, x8
   4003c:	b	40214 <mpfr_strtofr@@Base+0x1064>
   40040:	mov	w8, #0x11                  	// #17
   40044:	cbnz	w8, 3ff58 <mpfr_strtofr@@Base+0xda8>
   40048:	b	3fd64 <mpfr_strtofr@@Base+0xbb4>
   4004c:	neg	x8, x9
   40050:	cmp	x27, x8
   40054:	b.ls	401c8 <mpfr_strtofr@@Base+0x1018>  // b.plast
   40058:	mov	w8, #0x11                  	// #17
   4005c:	cbnz	w8, 401fc <mpfr_strtofr@@Base+0x104c>
   40060:	b	3feec <mpfr_strtofr@@Base+0xd3c>
   40064:	tbz	x8, #63, 40074 <mpfr_strtofr@@Base+0xec4>
   40068:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   4006c:	cmp	x8, x9
   40070:	b.ne	3feac <mpfr_strtofr@@Base+0xcfc>  // b.any
   40074:	mov	w8, wzr
   40078:	stur	x9, [x29, #-16]
   4007c:	cbnz	wzr, 40220 <mpfr_strtofr@@Base+0x1070>
   40080:	tbnz	x26, #63, 40090 <mpfr_strtofr@@Base+0xee0>
   40084:	ldur	x8, [x29, #-16]
   40088:	cmp	x8, #0x0
   4008c:	b.le	40144 <mpfr_strtofr@@Base+0xf94>
   40090:	tbnz	x26, #63, 40124 <mpfr_strtofr@@Base+0xf74>
   40094:	ldur	x8, [x29, #-16]
   40098:	sub	x26, x26, x8
   4009c:	mov	x27, x24
   400a0:	add	x24, x20, x25, lsl #3
   400a4:	mov	x0, x24
   400a8:	mov	x1, x20
   400ac:	mov	x2, xzr
   400b0:	mov	x3, x19
   400b4:	mov	x4, x28
   400b8:	mov	x5, x22
   400bc:	mov	x6, x25
   400c0:	bl	beb0 <__gmpn_tdiv_qr@plt>
   400c4:	ldur	w8, [x29, #-20]
   400c8:	cbz	w8, 400e8 <mpfr_strtofr@@Base+0xf38>
   400cc:	mov	x0, x20
   400d0:	mov	x1, x25
   400d4:	bl	cd40 <__gmpn_popcount@plt>
   400d8:	cmp	x0, #0x0
   400dc:	cset	w8, eq  // eq = none
   400e0:	stur	w8, [x29, #-20]
   400e4:	b	400ec <mpfr_strtofr@@Base+0xf3c>
   400e8:	stur	wzr, [x29, #-20]
   400ec:	ldr	x8, [x27]
   400f0:	ldur	x19, [x29, #-32]
   400f4:	cmp	x8, #0x1
   400f8:	ldur	x8, [x29, #-72]
   400fc:	add	w8, w8, #0x1
   40100:	stur	x8, [x29, #-72]
   40104:	b.ne	401bc <mpfr_strtofr@@Base+0x100c>  // b.any
   40108:	ldur	w8, [x29, #-20]
   4010c:	cbz	w8, 4019c <mpfr_strtofr@@Base+0xfec>
   40110:	ldrb	w8, [x24]
   40114:	tst	w8, #0x1
   40118:	cset	w8, eq  // eq = none
   4011c:	stur	w8, [x29, #-20]
   40120:	b	401a0 <mpfr_strtofr@@Base+0xff0>
   40124:	ldur	x8, [x29, #-16]
   40128:	cmp	x8, #0x1
   4012c:	b.lt	40094 <mpfr_strtofr@@Base+0xee4>  // b.tstop
   40130:	adds	x8, x8, x27
   40134:	b.cc	402a8 <mpfr_strtofr@@Base+0x10f8>  // b.lo, b.ul, b.last
   40138:	mov	w8, #0x11                  	// #17
   4013c:	cbnz	w8, 40220 <mpfr_strtofr@@Base+0x1070>
   40140:	b	4009c <mpfr_strtofr@@Base+0xeec>
   40144:	sub	x9, x26, x8
   40148:	mov	x10, #0xfffffffffffffffd    	// #-3
   4014c:	cmp	x9, x26
   40150:	movk	x10, #0x7fff, lsl #48
   40154:	cset	w8, cc  // cc = lo, ul, last
   40158:	cmp	x9, x10
   4015c:	cset	w10, hi  // hi = pmore
   40160:	orr	w10, w8, w10
   40164:	cmp	w10, #0x0
   40168:	mov	w8, #0xe                   	// #14
   4016c:	csel	w8, w8, wzr, ne  // ne = any
   40170:	csel	x26, x26, x9, ne  // ne = any
   40174:	tbz	w10, #0, 4009c <mpfr_strtofr@@Base+0xeec>
   40178:	b	40220 <mpfr_strtofr@@Base+0x1070>
   4017c:	tbz	x8, #63, 4018c <mpfr_strtofr@@Base+0xfdc>
   40180:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   40184:	cmp	x8, x9
   40188:	b.ne	4001c <mpfr_strtofr@@Base+0xe6c>  // b.any
   4018c:	mov	w8, wzr
   40190:	mov	x19, x9
   40194:	cbnz	wzr, 3ff58 <mpfr_strtofr@@Base+0xda8>
   40198:	b	3fcec <mpfr_strtofr@@Base+0xb3c>
   4019c:	stur	wzr, [x29, #-20]
   401a0:	ldur	x8, [x29, #-64]
   401a4:	mov	w3, #0x1                   	// #1
   401a8:	mov	x0, x24
   401ac:	mov	x1, x24
   401b0:	add	x2, x8, #0x2
   401b4:	bl	c140 <__gmpn_rshift@plt>
   401b8:	add	x26, x26, #0x1
   401bc:	mov	w8, wzr
   401c0:	cbnz	w8, 40260 <mpfr_strtofr@@Base+0x10b0>
   401c4:	b	4022c <mpfr_strtofr@@Base+0x107c>
   401c8:	mov	x10, #0xfffffffffffffffd    	// #-3
   401cc:	movk	x10, #0x7fff, lsl #48
   401d0:	cmp	x8, x10
   401d4:	b.ls	401f0 <mpfr_strtofr@@Base+0x1040>  // b.plast
   401d8:	mov	x9, #0x7ffffffffffffffe    	// #9223372036854775806
   401dc:	cmp	x8, x9
   401e0:	b.ne	40058 <mpfr_strtofr@@Base+0xea8>  // b.any
   401e4:	mov	x8, #0xfffffffffffffffd    	// #-3
   401e8:	movk	x8, #0x7fff, lsl #48
   401ec:	add	x9, x8, #0x5
   401f0:	mov	w8, wzr
   401f4:	mov	x26, x9
   401f8:	cbz	w8, 3feec <mpfr_strtofr@@Base+0xd3c>
   401fc:	mov	x24, x20
   40200:	cbnz	w8, 40260 <mpfr_strtofr@@Base+0x10b0>
   40204:	b	4022c <mpfr_strtofr@@Base+0x107c>
   40208:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   4020c:	cmp	x8, x9
   40210:	b.ne	3fde0 <mpfr_strtofr@@Base+0xc30>  // b.any
   40214:	mov	w8, wzr
   40218:	stur	x9, [x29, #-16]
   4021c:	cbz	wzr, 3fbcc <mpfr_strtofr@@Base+0xa1c>
   40220:	ldur	x19, [x29, #-32]
   40224:	mov	x24, x20
   40228:	cbnz	w8, 40260 <mpfr_strtofr@@Base+0x10b0>
   4022c:	ldur	w8, [x29, #-20]
   40230:	stur	x19, [x29, #-32]
   40234:	cbnz	w8, 4025c <mpfr_strtofr@@Base+0x10ac>
   40238:	ldur	x8, [x29, #-72]
   4023c:	ldur	x9, [x29, #-56]
   40240:	ldur	x3, [x29, #-88]
   40244:	mov	x0, x24
   40248:	mvn	w8, w8
   4024c:	add	x2, x9, w8, sxtw
   40250:	mov	x1, x25
   40254:	bl	c830 <mpfr_round_p@plt>
   40258:	cbz	w0, 4026c <mpfr_strtofr@@Base+0x10bc>
   4025c:	mov	w8, #0x4                   	// #4
   40260:	mov	x28, x23
   40264:	cbz	w8, 3f8ac <mpfr_strtofr@@Base+0x6fc>
   40268:	b	40334 <mpfr_strtofr@@Base+0x1184>
   4026c:	mov	x8, #0xfffffffffffffffd    	// #-3
   40270:	ldur	x9, [x29, #-96]
   40274:	movk	x8, #0x7fff, lsl #48
   40278:	sub	x8, x8, x23
   4027c:	sub	x8, x8, #0xfe
   40280:	cmp	x9, x8
   40284:	b.gt	40314 <mpfr_strtofr@@Base+0x1164>
   40288:	add	x28, x23, x9
   4028c:	cmp	x28, #0x0
   40290:	cinc	x10, x28, lt  // lt = tstop
   40294:	mov	w8, wzr
   40298:	asr	x10, x10, #1
   4029c:	stur	x10, [x29, #-96]
   402a0:	cbz	w8, 3f8ac <mpfr_strtofr@@Base+0x6fc>
   402a4:	b	40334 <mpfr_strtofr@@Base+0x1184>
   402a8:	mov	x9, #0xfffffffffffffffd    	// #-3
   402ac:	movk	x9, #0x7fff, lsl #48
   402b0:	cmp	x8, x9
   402b4:	b.ls	402d4 <mpfr_strtofr@@Base+0x1124>  // b.plast
   402b8:	mov	x9, #0x7ffffffffffffffe    	// #9223372036854775806
   402bc:	cmp	x8, x9
   402c0:	b.ne	40138 <mpfr_strtofr@@Base+0xf88>  // b.any
   402c4:	mov	x8, #0xfffffffffffffffd    	// #-3
   402c8:	movk	x8, #0x7fff, lsl #48
   402cc:	add	x26, x8, #0x5
   402d0:	b	402d8 <mpfr_strtofr@@Base+0x1128>
   402d4:	neg	x26, x8
   402d8:	mov	w8, wzr
   402dc:	cbnz	wzr, 40220 <mpfr_strtofr@@Base+0x1070>
   402e0:	b	4009c <mpfr_strtofr@@Base+0xeec>
   402e4:	sub	x0, x29, #0x8
   402e8:	bl	c220 <mpfr_tmp_allocate@plt>
   402ec:	b	3f8f8 <mpfr_strtofr@@Base+0x748>
   402f0:	sub	x0, x29, #0x8
   402f4:	mov	x1, x20
   402f8:	bl	c220 <mpfr_tmp_allocate@plt>
   402fc:	mov	x20, x0
   40300:	b	3fafc <mpfr_strtofr@@Base+0x94c>
   40304:	sub	x0, x29, #0x8
   40308:	bl	c220 <mpfr_tmp_allocate@plt>
   4030c:	mov	x20, x0
   40310:	b	3fb9c <mpfr_strtofr@@Base+0x9ec>
   40314:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   40318:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   4031c:	mov	w1, #0x372                 	// #882
   40320:	add	x0, x0, #0x753
   40324:	add	x2, x2, #0x99a
   40328:	bl	d030 <mpfr_assert_fail@plt>
   4032c:	ldur	x9, [x29, #-96]
   40330:	b	40288 <mpfr_strtofr@@Base+0x10d8>
   40334:	ldur	x19, [x29, #-104]
   40338:	cmp	w8, #0x11
   4033c:	b.eq	404dc <mpfr_strtofr@@Base+0x132c>  // b.none
   40340:	cmp	w8, #0xe
   40344:	b.eq	403e4 <mpfr_strtofr@@Base+0x1234>  // b.none
   40348:	cmp	w8, #0x4
   4034c:	b.ne	40404 <mpfr_strtofr@@Base+0x1254>  // b.any
   40350:	ldr	x0, [x19, #24]
   40354:	ldr	w3, [x21]
   40358:	ldur	x2, [x29, #-56]
   4035c:	ldur	x4, [x29, #-120]
   40360:	ldur	w5, [x29, #-108]
   40364:	sub	x6, x29, #0x10
   40368:	mov	x1, x24
   4036c:	bl	cf10 <mpfr_round_raw@plt>
   40370:	cbz	w0, 4039c <mpfr_strtofr@@Base+0x11ec>
   40374:	ldr	x8, [x19]
   40378:	ldr	x9, [x19, #24]
   4037c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   40380:	add	x26, x26, #0x1
   40384:	sub	x11, x8, #0x1
   40388:	add	x8, x8, #0x3e
   4038c:	cmp	x11, #0x0
   40390:	csel	x8, x8, x11, lt  // lt = tstop
   40394:	asr	x8, x8, #6
   40398:	str	x10, [x9, x8, lsl #3]
   4039c:	ldr	w8, [x21]
   403a0:	mov	w9, #0x1                   	// #1
   403a4:	cmp	w8, #0x0
   403a8:	cneg	w8, w9, ne  // ne = any
   403ac:	cmn	x23, #0x7e
   403b0:	str	w8, [x19, #8]
   403b4:	b.lt	40408 <mpfr_strtofr@@Base+0x1258>  // b.tstop
   403b8:	tbnz	x26, #63, 40408 <mpfr_strtofr@@Base+0x1258>
   403bc:	ldur	x8, [x29, #-56]
   403c0:	adds	x8, x26, x8
   403c4:	cset	w9, cs  // cs = hs, nlast
   403c8:	cmp	x8, #0x0
   403cc:	cset	w10, lt  // lt = tstop
   403d0:	orr	w10, w9, w10
   403d4:	cmp	w10, #0x0
   403d8:	csel	x26, x26, x8, ne  // ne = any
   403dc:	tbnz	w9, #0, 403e4 <mpfr_strtofr@@Base+0x1234>
   403e0:	tbz	x8, #63, 40440 <mpfr_strtofr@@Base+0x1290>
   403e4:	ldr	w8, [x21]
   403e8:	ldur	w1, [x29, #-108]
   403ec:	mov	x0, x19
   403f0:	cmp	w8, #0x0
   403f4:	mov	w8, #0x1                   	// #1
   403f8:	cneg	w2, w8, ne  // ne = any
   403fc:	bl	c3a0 <mpfr_overflow@plt>
   40400:	b	40500 <mpfr_strtofr@@Base+0x1350>
   40404:	b	40510 <mpfr_strtofr@@Base+0x1360>
   40408:	cmn	x23, #0x7f
   4040c:	b.gt	40438 <mpfr_strtofr@@Base+0x1288>
   40410:	tbz	x26, #63, 40438 <mpfr_strtofr@@Base+0x1288>
   40414:	ldur	x8, [x29, #-56]
   40418:	neg	x10, x26
   4041c:	add	x8, x26, x8
   40420:	neg	x9, x8
   40424:	cmp	x9, x10
   40428:	b.cs	404b8 <mpfr_strtofr@@Base+0x1308>  // b.hs, b.nlast
   4042c:	mov	w9, #0x11                  	// #17
   40430:	cbnz	w9, 404d4 <mpfr_strtofr@@Base+0x1324>
   40434:	b	40440 <mpfr_strtofr@@Base+0x1290>
   40438:	ldur	x8, [x29, #-56]
   4043c:	add	x26, x26, x8
   40440:	str	x26, [x19, #16]
   40444:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40448:	ldr	x1, [x0, #2736]
   4044c:	add	x0, x0, #0xab0
   40450:	blr	x1
   40454:	mrs	x9, tpidr_el0
   40458:	ldr	x10, [x9, x0]
   4045c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40460:	ldr	x1, [x0, #2768]
   40464:	add	x0, x0, #0xad0
   40468:	blr	x1
   4046c:	ldur	w8, [x29, #-16]
   40470:	cmp	x26, x10
   40474:	b.lt	40554 <mpfr_strtofr@@Base+0x13a4>  // b.tstop
   40478:	ldr	x10, [x9, x0]
   4047c:	cmp	x26, x10
   40480:	b.gt	40554 <mpfr_strtofr@@Base+0x13a4>
   40484:	cbz	w8, 404a4 <mpfr_strtofr@@Base+0x12f4>
   40488:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4048c:	ldr	x1, [x0, #2800]
   40490:	add	x0, x0, #0xaf0
   40494:	blr	x1
   40498:	ldr	w10, [x9, x0]
   4049c:	orr	w10, w10, #0x8
   404a0:	str	w10, [x9, x0]
   404a4:	stur	w8, [x29, #-16]
   404a8:	ldur	x0, [x29, #-8]
   404ac:	cbz	x0, 4050c <mpfr_strtofr@@Base+0x135c>
   404b0:	bl	c8d0 <mpfr_tmp_free@plt>
   404b4:	b	4050c <mpfr_strtofr@@Base+0x135c>
   404b8:	tbz	x9, #63, 404c8 <mpfr_strtofr@@Base+0x1318>
   404bc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   404c0:	cmp	x9, x8
   404c4:	b.ne	4042c <mpfr_strtofr@@Base+0x127c>  // b.any
   404c8:	mov	w9, wzr
   404cc:	mov	x26, x8
   404d0:	cbz	w9, 40440 <mpfr_strtofr@@Base+0x1290>
   404d4:	cmp	w9, #0x11
   404d8:	b.ne	40510 <mpfr_strtofr@@Base+0x1360>  // b.any
   404dc:	ldur	w9, [x29, #-108]
   404e0:	ldr	w8, [x21]
   404e4:	mov	x0, x19
   404e8:	cmp	w9, #0x0
   404ec:	csinc	w1, w9, wzr, ne  // ne = any
   404f0:	cmp	w8, #0x0
   404f4:	mov	w8, #0x1                   	// #1
   404f8:	cneg	w2, w8, ne  // ne = any
   404fc:	bl	c880 <mpfr_underflow@plt>
   40500:	stur	w0, [x29, #-16]
   40504:	ldur	x0, [x29, #-8]
   40508:	cbnz	x0, 404b0 <mpfr_strtofr@@Base+0x1300>
   4050c:	ldur	w0, [x29, #-16]
   40510:	mov	sp, x29
   40514:	ldp	x20, x19, [sp, #80]
   40518:	ldp	x22, x21, [sp, #64]
   4051c:	ldp	x24, x23, [sp, #48]
   40520:	ldp	x26, x25, [sp, #32]
   40524:	ldp	x28, x27, [sp, #16]
   40528:	ldp	x29, x30, [sp], #96
   4052c:	ret
   40530:	mov	x8, xzr
   40534:	b	3f884 <mpfr_strtofr@@Base+0x6d4>
   40538:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4053c:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   40540:	add	x0, x0, #0x753
   40544:	add	x2, x2, #0x7a8
   40548:	mov	w1, #0x1d4                 	// #468
   4054c:	bl	d030 <mpfr_assert_fail@plt>
   40550:	b	3f878 <mpfr_strtofr@@Base+0x6c8>
   40554:	ldur	w2, [x29, #-108]
   40558:	mov	x0, x19
   4055c:	mov	w1, w8
   40560:	bl	d020 <mpfr_check_range@plt>
   40564:	mov	w8, w0
   40568:	b	404a4 <mpfr_strtofr@@Base+0x12f4>
   4056c:	stp	x29, x30, [sp, #-16]!
   40570:	ldr	x8, [x0, #8]
   40574:	ldr	x1, [x0, #32]
   40578:	mov	x29, sp
   4057c:	mov	x0, x8
   40580:	bl	d120 <mpfr_free_func@plt>
   40584:	ldp	x29, x30, [sp], #16
   40588:	ret
   4058c:	ldrb	w8, [x1]
   40590:	cbz	w8, 405bc <mpfr_strtofr@@Base+0x140c>
   40594:	ldrb	w9, [x0], #1
   40598:	add	x1, x1, #0x1
   4059c:	sub	w10, w9, #0x41
   405a0:	add	w11, w9, #0x20
   405a4:	cmp	w10, #0x1a
   405a8:	csel	w9, w11, w9, cc  // cc = lo, ul, last
   405ac:	cmp	w8, w9, uxtb
   405b0:	b.eq	4058c <mpfr_strtofr@@Base+0x13dc>  // b.none
   405b4:	mov	w0, #0x1                   	// #1
   405b8:	ret
   405bc:	mov	w0, wzr
   405c0:	ret
   405c4:	sub	w8, w0, #0x30
   405c8:	cmp	w8, #0xa
   405cc:	b.cc	40604 <mpfr_strtofr@@Base+0x1454>  // b.lo, b.ul, b.last
   405d0:	sub	w8, w0, #0x61
   405d4:	cmp	w8, #0x19
   405d8:	b.hi	405f4 <mpfr_strtofr@@Base+0x1444>  // b.pmore
   405dc:	cmp	w1, #0x24
   405e0:	mov	w8, #0xffffffa9            	// #-87
   405e4:	mov	w9, #0xffffffc3            	// #-61
   405e8:	csel	w8, w9, w8, gt
   405ec:	add	w8, w8, w0
   405f0:	b	40604 <mpfr_strtofr@@Base+0x1454>
   405f4:	sub	w8, w0, #0x41
   405f8:	cmp	w8, #0x19
   405fc:	b.hi	40610 <mpfr_strtofr@@Base+0x1460>  // b.pmore
   40600:	sub	w8, w0, #0x37
   40604:	cmp	w8, w1
   40608:	csinv	w0, w8, wzr, lt  // lt = tstop
   4060c:	ret
   40610:	mov	w0, #0xffffffff            	// #-1
   40614:	ret

0000000000040618 <mpfr_pow_z@@Base>:
   40618:	sub	sp, sp, #0xf0
   4061c:	stp	x29, x30, [sp, #144]
   40620:	stp	x28, x27, [sp, #160]
   40624:	stp	x26, x25, [sp, #176]
   40628:	stp	x24, x23, [sp, #192]
   4062c:	stp	x22, x21, [sp, #208]
   40630:	stp	x20, x19, [sp, #224]
   40634:	ldr	w8, [x2, #4]
   40638:	mov	w20, w3
   4063c:	mov	x19, x0
   40640:	add	x29, sp, #0x90
   40644:	cmp	w8, #0x0
   40648:	cset	w9, ne  // ne = any
   4064c:	cbz	w8, 40b9c <mpfr_pow_z@@Base+0x584>
   40650:	ldr	x10, [x1, #16]
   40654:	mov	x12, #0x2                   	// #2
   40658:	movk	x12, #0x8000, lsl #48
   4065c:	add	x11, x12, #0x2
   40660:	mov	x21, x2
   40664:	mov	x22, x1
   40668:	cmp	x10, x11
   4066c:	b.lt	40bb4 <mpfr_pow_z@@Base+0x59c>  // b.tstop
   40670:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40674:	ldr	x1, [x0, #2800]
   40678:	add	x0, x0, #0xaf0
   4067c:	blr	x1
   40680:	mrs	x28, tpidr_el0
   40684:	ldr	w26, [x28, x0]
   40688:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4068c:	ldr	x1, [x0, #2736]
   40690:	add	x0, x0, #0xab0
   40694:	blr	x1
   40698:	ldr	x27, [x28, x0]
   4069c:	mov	x8, x0
   406a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   406a4:	ldr	x1, [x0, #2768]
   406a8:	add	x0, x0, #0xad0
   406ac:	blr	x1
   406b0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   406b4:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   406b8:	ldr	x24, [x28, x0]
   406bc:	str	x9, [x28, x8]
   406c0:	str	x11, [x28, x0]
   406c4:	ldrsw	x1, [x22, #8]
   406c8:	sub	x2, x10, #0x1
   406cc:	mov	x0, x22
   406d0:	bl	c890 <mpfr_cmp_si_2exp@plt>
   406d4:	cbz	w0, 40be8 <mpfr_pow_z@@Base+0x5d0>
   406d8:	ldr	w8, [x21, #4]
   406dc:	cmp	w8, #0x1
   406e0:	b.lt	4078c <mpfr_pow_z@@Base+0x174>  // b.tstop
   406e4:	mov	w4, #0x1                   	// #1
   406e8:	mov	x0, x19
   406ec:	mov	x1, x22
   406f0:	mov	x2, x21
   406f4:	mov	w3, w20
   406f8:	bl	40dd4 <mpfr_pow_z@@Base+0x7bc>
   406fc:	mov	w21, w0
   40700:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40704:	ldr	x1, [x0, #2800]
   40708:	add	x0, x0, #0xaf0
   4070c:	blr	x1
   40710:	ldr	w8, [x28, x0]
   40714:	orr	w26, w8, w26
   40718:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4071c:	ldr	x1, [x0, #2800]
   40720:	add	x0, x0, #0xaf0
   40724:	blr	x1
   40728:	str	w26, [x28, x0]
   4072c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40730:	ldr	x1, [x0, #2736]
   40734:	add	x0, x0, #0xab0
   40738:	blr	x1
   4073c:	str	x27, [x28, x0]
   40740:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40744:	ldr	x1, [x0, #2768]
   40748:	add	x0, x0, #0xad0
   4074c:	blr	x1
   40750:	str	x24, [x28, x0]
   40754:	ldr	x8, [x19, #16]
   40758:	cmp	x8, x24
   4075c:	b.gt	40c10 <mpfr_pow_z@@Base+0x5f8>
   40760:	cmp	x8, x27
   40764:	b.lt	40c10 <mpfr_pow_z@@Base+0x5f8>  // b.tstop
   40768:	cbz	w21, 40808 <mpfr_pow_z@@Base+0x1f0>
   4076c:	orr	w8, w26, #0x8
   40770:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40774:	ldr	x1, [x0, #2800]
   40778:	add	x0, x0, #0xaf0
   4077c:	blr	x1
   40780:	str	w8, [x28, x0]
   40784:	mov	w10, w21
   40788:	b	40b78 <mpfr_pow_z@@Base+0x560>
   4078c:	ldr	x9, [x21, #8]
   40790:	neg	w8, w8
   40794:	str	x24, [sp, #24]
   40798:	ldr	x24, [x19]
   4079c:	add	x9, x9, w8, uxtw #3
   407a0:	ldur	x9, [x9, #-8]
   407a4:	lsl	x8, x8, #6
   407a8:	subs	x25, x24, #0x1
   407ac:	clz	x9, x9
   407b0:	sub	x23, x8, x9
   407b4:	b.eq	40cfc <mpfr_pow_z@@Base+0x6e4>  // b.none
   407b8:	b.le	40d04 <mpfr_pow_z@@Base+0x6ec>
   407bc:	clz	x8, x25
   407c0:	mov	w9, #0x40                  	// #64
   407c4:	sub	x8, x9, x8
   407c8:	add	x9, x24, x23
   407cc:	add	x8, x9, x8
   407d0:	add	x24, x8, #0x3
   407d4:	sub	x0, x29, #0x20
   407d8:	mov	x1, x24
   407dc:	bl	cf60 <mpfr_init2@plt>
   407e0:	ldr	x8, [x22, #16]
   407e4:	str	x27, [sp, #32]
   407e8:	str	w26, [sp, #44]
   407ec:	cmp	x8, #0x1
   407f0:	b.lt	40810 <mpfr_pow_z@@Base+0x1f8>  // b.tstop
   407f4:	ldr	w8, [x22, #8]
   407f8:	cmp	w8, #0x0
   407fc:	mov	w8, #0x2                   	// #2
   40800:	cinc	w25, w8, le
   40804:	b	40814 <mpfr_pow_z@@Base+0x1fc>
   40808:	mov	w10, wzr
   4080c:	b	40b78 <mpfr_pow_z@@Base+0x560>
   40810:	mov	w25, #0x1                   	// #1
   40814:	mov	x8, #0xfffffffffffffffe    	// #-2
   40818:	cmp	w20, #0x0
   4081c:	mov	w9, #0x40                  	// #64
   40820:	sub	x23, x8, x23
   40824:	cset	w26, eq  // eq = none
   40828:	str	x9, [sp, #16]
   4082c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40830:	ldr	x1, [x0, #2800]
   40834:	add	x0, x0, #0xaf0
   40838:	blr	x1
   4083c:	mov	x27, x0
   40840:	str	wzr, [x28, x0]
   40844:	sub	x0, x29, #0x20
   40848:	mov	w1, #0x1                   	// #1
   4084c:	mov	x2, x22
   40850:	mov	w3, w25
   40854:	bl	c7b0 <mpfr_ui_div@plt>
   40858:	ldrb	w8, [x28, x27]
   4085c:	tbnz	w8, #1, 408f4 <mpfr_pow_z@@Base+0x2dc>
   40860:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40864:	ldr	x1, [x0, #2800]
   40868:	add	x0, x0, #0xaf0
   4086c:	blr	x1
   40870:	mov	x27, x0
   40874:	str	wzr, [x28, x0]
   40878:	sub	x0, x29, #0x20
   4087c:	sub	x1, x29, #0x20
   40880:	mov	x2, x21
   40884:	mov	w3, w20
   40888:	mov	w4, wzr
   4088c:	bl	40dd4 <mpfr_pow_z@@Base+0x7bc>
   40890:	ldr	w8, [x28, x27]
   40894:	tbnz	w8, #1, 408f4 <mpfr_pow_z@@Base+0x2dc>
   40898:	tbnz	w8, #0, 409b0 <mpfr_pow_z@@Base+0x398>
   4089c:	ldur	x8, [x29, #-16]
   408a0:	mov	x9, #0x2                   	// #2
   408a4:	movk	x9, #0x8000, lsl #48
   408a8:	add	x9, x9, #0x2
   408ac:	cmp	x8, x9
   408b0:	b.lt	40968 <mpfr_pow_z@@Base+0x350>  // b.tstop
   408b4:	ldur	x8, [x29, #-32]
   408b8:	ldr	x9, [x19]
   408bc:	ldur	x0, [x29, #-8]
   408c0:	add	x2, x23, x24
   408c4:	sub	x10, x8, #0x1
   408c8:	add	x8, x8, #0x3e
   408cc:	cmp	x10, #0x0
   408d0:	csel	x8, x8, x10, lt  // lt = tstop
   408d4:	asr	x8, x8, #6
   408d8:	add	x1, x8, #0x1
   408dc:	add	x3, x9, x26
   408e0:	bl	c830 <mpfr_round_p@plt>
   408e4:	cbz	w0, 40968 <mpfr_pow_z@@Base+0x350>
   408e8:	mov	w8, #0xa                   	// #10
   408ec:	cbz	w8, 4082c <mpfr_pow_z@@Base+0x214>
   408f0:	b	40b24 <mpfr_pow_z@@Base+0x50c>
   408f4:	sub	x0, x29, #0x20
   408f8:	bl	c4f0 <mpfr_clear@plt>
   408fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40900:	ldr	x1, [x0, #2800]
   40904:	add	x0, x0, #0xaf0
   40908:	blr	x1
   4090c:	ldr	w8, [sp, #44]
   40910:	str	w8, [x28, x0]
   40914:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40918:	ldr	x1, [x0, #2736]
   4091c:	add	x0, x0, #0xab0
   40920:	blr	x1
   40924:	ldr	x8, [sp, #32]
   40928:	str	x8, [x28, x0]
   4092c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40930:	ldr	x1, [x0, #2768]
   40934:	add	x0, x0, #0xad0
   40938:	blr	x1
   4093c:	ldr	x8, [sp, #24]
   40940:	str	x8, [x28, x0]
   40944:	ldr	x8, [x21, #8]
   40948:	ldr	w9, [x21, #4]
   4094c:	ldr	w8, [x8]
   40950:	cmp	w9, #0x0
   40954:	cset	w9, ne  // ne = any
   40958:	tst	w8, w9
   4095c:	b.eq	40a28 <mpfr_pow_z@@Base+0x410>  // b.none
   40960:	ldr	w2, [x22, #8]
   40964:	b	40a2c <mpfr_pow_z@@Base+0x414>
   40968:	mov	x8, #0x2                   	// #2
   4096c:	ldr	x9, [sp, #16]
   40970:	movk	x8, #0x8000, lsl #48
   40974:	sub	x8, x8, x24
   40978:	sub	x8, x8, #0x103
   4097c:	cmp	x9, x8
   40980:	mov	x8, x9
   40984:	b.gt	40ae8 <mpfr_pow_z@@Base+0x4d0>
   40988:	add	x24, x8, x24
   4098c:	cmp	x24, #0x0
   40990:	cinc	x8, x24, lt  // lt = tstop
   40994:	asr	x8, x8, #1
   40998:	sub	x0, x29, #0x20
   4099c:	mov	x1, x24
   409a0:	str	x8, [sp, #16]
   409a4:	bl	c330 <mpfr_set_prec@plt>
   409a8:	mov	w8, wzr
   409ac:	b	408ec <mpfr_pow_z@@Base+0x2d4>
   409b0:	sub	x0, x29, #0x20
   409b4:	bl	c4f0 <mpfr_clear@plt>
   409b8:	cbz	w20, 40a3c <mpfr_pow_z@@Base+0x424>
   409bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   409c0:	ldr	x1, [x0, #2800]
   409c4:	add	x0, x0, #0xaf0
   409c8:	blr	x1
   409cc:	ldr	w8, [sp, #44]
   409d0:	str	w8, [x28, x0]
   409d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   409d8:	ldr	x1, [x0, #2736]
   409dc:	add	x0, x0, #0xab0
   409e0:	blr	x1
   409e4:	ldr	x8, [sp, #32]
   409e8:	str	x8, [x28, x0]
   409ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   409f0:	ldr	x1, [x0, #2768]
   409f4:	add	x0, x0, #0xad0
   409f8:	blr	x1
   409fc:	ldr	x8, [sp, #24]
   40a00:	str	x8, [x28, x0]
   40a04:	ldr	x8, [x21, #8]
   40a08:	ldr	w9, [x21, #4]
   40a0c:	ldr	w8, [x8]
   40a10:	cmp	w9, #0x0
   40a14:	cset	w9, ne  // ne = any
   40a18:	tst	w8, w9
   40a1c:	b.eq	40acc <mpfr_pow_z@@Base+0x4b4>  // b.none
   40a20:	ldr	w2, [x22, #8]
   40a24:	b	40ad0 <mpfr_pow_z@@Base+0x4b8>
   40a28:	mov	w2, #0x1                   	// #1
   40a2c:	mov	x0, x19
   40a30:	mov	w1, w20
   40a34:	bl	c3a0 <mpfr_overflow@plt>
   40a38:	b	40adc <mpfr_pow_z@@Base+0x4c4>
   40a3c:	sub	x0, x29, #0x40
   40a40:	mov	w1, #0x2                   	// #2
   40a44:	bl	cf60 <mpfr_init2@plt>
   40a48:	ldr	w8, [x21, #4]
   40a4c:	add	x0, sp, #0x30
   40a50:	cmp	w8, #0x0
   40a54:	cneg	w8, w8, mi  // mi = first
   40a58:	lsl	w1, w8, #6
   40a5c:	bl	cf60 <mpfr_init2@plt>
   40a60:	add	x0, sp, #0x30
   40a64:	mov	x1, x21
   40a68:	mov	w2, wzr
   40a6c:	bl	c6e0 <mpfr_set_z@plt>
   40a70:	cbnz	w0, 40b08 <mpfr_pow_z@@Base+0x4f0>
   40a74:	sub	x0, x29, #0x40
   40a78:	add	x2, sp, #0x30
   40a7c:	mov	w4, #0x1                   	// #1
   40a80:	mov	x1, x22
   40a84:	mov	w3, wzr
   40a88:	mov	x5, xzr
   40a8c:	bl	cbc0 <mpfr_pow_general@plt>
   40a90:	str	w0, [sp, #8]
   40a94:	add	x0, sp, #0x30
   40a98:	bl	c4f0 <mpfr_clear@plt>
   40a9c:	ldur	w3, [x29, #-56]
   40aa0:	sub	x1, x29, #0x40
   40aa4:	mov	x0, x19
   40aa8:	mov	w2, wzr
   40aac:	bl	cb70 <mpfr_set4@plt>
   40ab0:	sub	x0, x29, #0x40
   40ab4:	bl	c4f0 <mpfr_clear@plt>
   40ab8:	ldr	w8, [sp, #44]
   40abc:	orr	w8, w8, #0x1
   40ac0:	str	w8, [sp, #44]
   40ac4:	mov	w8, #0x15                  	// #21
   40ac8:	b	408ec <mpfr_pow_z@@Base+0x2d4>
   40acc:	mov	w2, #0x1                   	// #1
   40ad0:	mov	x0, x19
   40ad4:	mov	w1, w20
   40ad8:	bl	c880 <mpfr_underflow@plt>
   40adc:	str	w0, [sp, #12]
   40ae0:	mov	w8, #0x1                   	// #1
   40ae4:	b	408ec <mpfr_pow_z@@Base+0x2d4>
   40ae8:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   40aec:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   40af0:	mov	w1, #0x169                 	// #361
   40af4:	add	x0, x0, #0x99c
   40af8:	add	x2, x2, #0x154
   40afc:	bl	d030 <mpfr_assert_fail@plt>
   40b00:	ldr	x8, [sp, #16]
   40b04:	b	40988 <mpfr_pow_z@@Base+0x370>
   40b08:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   40b0c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   40b10:	mov	w1, #0x155                 	// #341
   40b14:	add	x0, x0, #0x99c
   40b18:	add	x2, x2, #0xed3
   40b1c:	bl	d030 <mpfr_assert_fail@plt>
   40b20:	b	40a74 <mpfr_pow_z@@Base+0x45c>
   40b24:	cmp	w8, #0xa
   40b28:	b.ne	40b5c <mpfr_pow_z@@Base+0x544>  // b.any
   40b2c:	ldur	w3, [x29, #-24]
   40b30:	sub	x1, x29, #0x20
   40b34:	mov	x0, x19
   40b38:	mov	w2, w20
   40b3c:	bl	cb70 <mpfr_set4@plt>
   40b40:	mov	w21, w0
   40b44:	sub	x0, x29, #0x20
   40b48:	bl	c4f0 <mpfr_clear@plt>
   40b4c:	ldr	w26, [sp, #44]
   40b50:	ldp	x24, x27, [sp, #24]
   40b54:	mov	w8, wzr
   40b58:	b	40b68 <mpfr_pow_z@@Base+0x550>
   40b5c:	ldr	w26, [sp, #44]
   40b60:	ldp	x24, x27, [sp, #24]
   40b64:	ldr	w21, [sp, #8]
   40b68:	ldr	w10, [sp, #12]
   40b6c:	cmp	w8, #0x15
   40b70:	b.eq	40718 <mpfr_pow_z@@Base+0x100>  // b.none
   40b74:	cbz	w8, 40718 <mpfr_pow_z@@Base+0x100>
   40b78:	ldp	x20, x19, [sp, #224]
   40b7c:	ldp	x22, x21, [sp, #208]
   40b80:	ldp	x24, x23, [sp, #192]
   40b84:	ldp	x26, x25, [sp, #176]
   40b88:	ldp	x28, x27, [sp, #160]
   40b8c:	ldp	x29, x30, [sp, #144]
   40b90:	mov	w0, w10
   40b94:	add	sp, sp, #0xf0
   40b98:	ret
   40b9c:	mov	w1, #0x1                   	// #1
   40ba0:	mov	x0, x19
   40ba4:	mov	x2, xzr
   40ba8:	mov	w3, w20
   40bac:	bl	cac0 <mpfr_set_ui_2exp@plt>
   40bb0:	b	40c20 <mpfr_pow_z@@Base+0x608>
   40bb4:	cmp	x10, x12
   40bb8:	b.ne	40c28 <mpfr_pow_z@@Base+0x610>  // b.any
   40bbc:	str	x12, [x19, #16]
   40bc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40bc4:	ldr	x1, [x0, #2800]
   40bc8:	add	x0, x0, #0xaf0
   40bcc:	blr	x1
   40bd0:	mrs	x8, tpidr_el0
   40bd4:	ldr	w9, [x8, x0]
   40bd8:	mov	w10, wzr
   40bdc:	orr	w9, w9, #0x4
   40be0:	str	w9, [x8, x0]
   40be4:	b	40b78 <mpfr_pow_z@@Base+0x560>
   40be8:	ldr	x8, [x21, #8]
   40bec:	ldr	w9, [x21, #4]
   40bf0:	ldr	x23, [x22, #16]
   40bf4:	ldr	w8, [x8]
   40bf8:	cmp	w9, #0x0
   40bfc:	cset	w9, ne  // ne = any
   40c00:	tst	w8, w9
   40c04:	b.eq	40c60 <mpfr_pow_z@@Base+0x648>  // b.none
   40c08:	ldrsw	x1, [x22, #8]
   40c0c:	b	40c64 <mpfr_pow_z@@Base+0x64c>
   40c10:	mov	x0, x19
   40c14:	mov	w1, w21
   40c18:	mov	w2, w20
   40c1c:	bl	d020 <mpfr_check_range@plt>
   40c20:	mov	w10, w0
   40c24:	b	40b78 <mpfr_pow_z@@Base+0x560>
   40c28:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   40c2c:	cmp	x10, x11
   40c30:	b.ne	40d20 <mpfr_pow_z@@Base+0x708>  // b.any
   40c34:	cmp	w8, #0x0
   40c38:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   40c3c:	csel	x8, x11, x8, gt
   40c40:	str	x8, [x19, #16]
   40c44:	ldr	w10, [x22, #8]
   40c48:	mov	w8, #0x1                   	// #1
   40c4c:	tbz	w10, #31, 40d90 <mpfr_pow_z@@Base+0x778>
   40c50:	ldr	x10, [x21, #8]
   40c54:	ldr	w10, [x10]
   40c58:	tst	w10, w9
   40c5c:	b	40d8c <mpfr_pow_z@@Base+0x774>
   40c60:	mov	w1, #0x1                   	// #1
   40c64:	mov	x0, x19
   40c68:	mov	x2, xzr
   40c6c:	mov	w3, w20
   40c70:	bl	bed0 <mpfr_set_si_2exp@plt>
   40c74:	sub	x0, x29, #0x20
   40c78:	bl	c400 <mpfr_mpz_init@plt>
   40c7c:	sub	x2, x23, #0x1
   40c80:	sub	x0, x29, #0x20
   40c84:	mov	x1, x21
   40c88:	bl	cb50 <__gmpz_mul_si@plt>
   40c8c:	sub	x0, x29, #0x20
   40c90:	sub	x1, x29, #0x20
   40c94:	mov	w2, #0x1                   	// #1
   40c98:	bl	c820 <__gmpz_add_ui@plt>
   40c9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40ca0:	ldr	x1, [x0, #2736]
   40ca4:	add	x0, x0, #0xab0
   40ca8:	blr	x1
   40cac:	ldr	x1, [x28, x0]
   40cb0:	sub	x0, x29, #0x20
   40cb4:	bl	cce0 <__gmpz_cmp_si@plt>
   40cb8:	tbnz	w0, #31, 40d9c <mpfr_pow_z@@Base+0x784>
   40cbc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40cc0:	ldr	x1, [x0, #2768]
   40cc4:	add	x0, x0, #0xad0
   40cc8:	blr	x1
   40ccc:	ldr	x1, [x28, x0]
   40cd0:	sub	x0, x29, #0x20
   40cd4:	bl	cce0 <__gmpz_cmp_si@plt>
   40cd8:	cmp	w0, #0x1
   40cdc:	b.ge	40dbc <mpfr_pow_z@@Base+0x7a4>  // b.tcont
   40ce0:	sub	x0, x29, #0x20
   40ce4:	bl	be60 <__gmpz_get_si@plt>
   40ce8:	mov	w21, wzr
   40cec:	str	x0, [x19, #16]
   40cf0:	sub	x0, x29, #0x20
   40cf4:	bl	c610 <mpfr_mpz_clear@plt>
   40cf8:	b	40700 <mpfr_pow_z@@Base+0xe8>
   40cfc:	mov	x8, xzr
   40d00:	b	407c8 <mpfr_pow_z@@Base+0x1b0>
   40d04:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   40d08:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   40d0c:	add	x0, x0, #0x99c
   40d10:	add	x2, x2, #0x1a6
   40d14:	mov	w1, #0x118                 	// #280
   40d18:	bl	d030 <mpfr_assert_fail@plt>
   40d1c:	b	407bc <mpfr_pow_z@@Base+0x1a4>
   40d20:	cmp	w8, #0x1
   40d24:	b.lt	40d34 <mpfr_pow_z@@Base+0x71c>  // b.tstop
   40d28:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   40d2c:	str	x9, [x19, #16]
   40d30:	b	40d5c <mpfr_pow_z@@Base+0x744>
   40d34:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   40d38:	str	x9, [x19, #16]
   40d3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40d40:	ldr	x1, [x0, #2800]
   40d44:	add	x0, x0, #0xaf0
   40d48:	blr	x1
   40d4c:	mrs	x9, tpidr_el0
   40d50:	ldr	w10, [x9, x0]
   40d54:	orr	w10, w10, #0x20
   40d58:	str	w10, [x9, x0]
   40d5c:	ldr	w9, [x22, #8]
   40d60:	cmp	w9, #0x0
   40d64:	b.le	40d70 <mpfr_pow_z@@Base+0x758>
   40d68:	mov	w8, #0x1                   	// #1
   40d6c:	b	40d90 <mpfr_pow_z@@Base+0x778>
   40d70:	ldr	x9, [x21, #8]
   40d74:	cmp	w8, #0x0
   40d78:	cset	w8, ne  // ne = any
   40d7c:	ldr	x9, [x9]
   40d80:	and	x8, x9, x8
   40d84:	cmp	x8, #0x1
   40d88:	mov	w8, #0xffffffff            	// #-1
   40d8c:	cneg	w8, w8, ne  // ne = any
   40d90:	mov	w10, wzr
   40d94:	str	w8, [x19, #8]
   40d98:	b	40b78 <mpfr_pow_z@@Base+0x560>
   40d9c:	ldr	w2, [x19, #8]
   40da0:	cmp	w20, #0x0
   40da4:	csinc	w20, w20, wzr, ne  // ne = any
   40da8:	mov	x0, x19
   40dac:	mov	w1, w20
   40db0:	bl	c880 <mpfr_underflow@plt>
   40db4:	mov	w21, w0
   40db8:	b	40cf0 <mpfr_pow_z@@Base+0x6d8>
   40dbc:	ldr	w2, [x19, #8]
   40dc0:	mov	x0, x19
   40dc4:	mov	w1, w20
   40dc8:	bl	c3a0 <mpfr_overflow@plt>
   40dcc:	mov	w21, w0
   40dd0:	b	40cf0 <mpfr_pow_z@@Base+0x6d8>
   40dd4:	sub	sp, sp, #0x130
   40dd8:	stp	x20, x19, [sp, #288]
   40ddc:	mov	x20, x1
   40de0:	str	x0, [sp, #64]
   40de4:	mov	w1, #0x1                   	// #1
   40de8:	mov	x0, x2
   40dec:	stp	x29, x30, [sp, #208]
   40df0:	stp	x28, x27, [sp, #224]
   40df4:	stp	x26, x25, [sp, #240]
   40df8:	stp	x24, x23, [sp, #256]
   40dfc:	stp	x22, x21, [sp, #272]
   40e00:	add	x29, sp, #0xd0
   40e04:	str	w4, [sp, #76]
   40e08:	mov	w21, w3
   40e0c:	mov	x19, x2
   40e10:	bl	c060 <__gmpz_cmpabs_ui@plt>
   40e14:	cbz	w0, 41120 <mpfr_pow_z@@Base+0xb08>
   40e18:	ldr	q0, [x19]
   40e1c:	str	x19, [sp, #8]
   40e20:	stur	q0, [x29, #-64]
   40e24:	ldur	w8, [x29, #-60]
   40e28:	cmp	w8, #0x0
   40e2c:	cneg	w8, w8, mi  // mi = first
   40e30:	stur	w8, [x29, #-60]
   40e34:	ldr	w9, [x19, #4]
   40e38:	ldr	x10, [x19, #8]
   40e3c:	ldr	x8, [x20, #16]
   40e40:	cmp	w9, #0x0
   40e44:	cneg	w11, w9, mi  // mi = first
   40e48:	add	x9, x10, w11, uxtw #3
   40e4c:	ldur	x9, [x9, #-8]
   40e50:	cmp	x8, #0x0
   40e54:	lsl	x10, x11, #6
   40e58:	clz	x9, x9
   40e5c:	b.le	40e68 <mpfr_pow_z@@Base+0x850>
   40e60:	mov	w24, #0x1                   	// #1
   40e64:	b	40e78 <mpfr_pow_z@@Base+0x860>
   40e68:	ldr	w11, [x20, #8]
   40e6c:	cmp	w11, #0x0
   40e70:	mov	w11, #0x2                   	// #2
   40e74:	cinc	w24, w11, le
   40e78:	sub	x19, x10, x9
   40e7c:	ldr	x9, [sp, #64]
   40e80:	cmp	x8, #0x0
   40e84:	mov	w8, #0x2                   	// #2
   40e88:	cinc	w25, w8, gt
   40e8c:	ldr	x1, [x9]
   40e90:	ldr	w8, [sp, #76]
   40e94:	cbz	w8, 40ec8 <mpfr_pow_z@@Base+0x8b0>
   40e98:	cmp	x1, #0x1
   40e9c:	b.eq	4118c <mpfr_pow_z@@Base+0xb74>  // b.none
   40ea0:	b.le	41194 <mpfr_pow_z@@Base+0xb7c>
   40ea4:	ldr	x8, [sp, #64]
   40ea8:	mov	w9, #0x40                  	// #64
   40eac:	ldr	x8, [x8]
   40eb0:	sub	x8, x8, #0x1
   40eb4:	clz	x8, x8
   40eb8:	sub	x8, x9, x8
   40ebc:	add	x9, x19, x1
   40ec0:	add	x8, x9, x8
   40ec4:	add	x1, x8, #0x3
   40ec8:	sub	x0, x29, #0x28
   40ecc:	str	x1, [sp, #56]
   40ed0:	bl	cf60 <mpfr_init2@plt>
   40ed4:	mvn	x8, x19
   40ed8:	str	x8, [sp, #40]
   40edc:	sub	x8, x19, #0x3
   40ee0:	str	x8, [sp, #48]
   40ee4:	cmp	w21, #0x0
   40ee8:	mov	w8, #0x40                  	// #64
   40eec:	sub	x27, x19, #0x2
   40ef0:	str	w21, [sp, #28]
   40ef4:	str	x8, [sp, #16]
   40ef8:	mrs	x22, tpidr_el0
   40efc:	mov	w26, #0x27                  	// #39
   40f00:	cset	w8, eq  // eq = none
   40f04:	str	x8, [sp, #32]
   40f08:	b	40f14 <mpfr_pow_z@@Base+0x8fc>
   40f0c:	mov	w8, wzr
   40f10:	tbz	w8, #0, 410d4 <mpfr_pow_z@@Base+0xabc>
   40f14:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40f18:	ldr	x1, [x0, #2800]
   40f1c:	add	x0, x0, #0xaf0
   40f20:	blr	x1
   40f24:	str	wzr, [x22, x0]
   40f28:	sub	x0, x29, #0x28
   40f2c:	mov	x1, x20
   40f30:	mov	x2, x20
   40f34:	mov	w3, w25
   40f38:	bl	c1b0 <mpfr_mul@plt>
   40f3c:	mov	w28, w0
   40f40:	sub	x0, x29, #0x40
   40f44:	mov	x1, x27
   40f48:	bl	c450 <__gmpz_tstbit@plt>
   40f4c:	cbz	w0, 40f68 <mpfr_pow_z@@Base+0x950>
   40f50:	sub	x0, x29, #0x28
   40f54:	sub	x1, x29, #0x28
   40f58:	mov	x2, x20
   40f5c:	mov	w3, w24
   40f60:	bl	c1b0 <mpfr_mul@plt>
   40f64:	orr	w28, w0, w28
   40f68:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40f6c:	ldr	x1, [x0, #2800]
   40f70:	add	x0, x0, #0xaf0
   40f74:	blr	x1
   40f78:	ldr	w23, [x22, x0]
   40f7c:	cmp	x19, #0x3
   40f80:	b.lt	40ff4 <mpfr_pow_z@@Base+0x9dc>  // b.tstop
   40f84:	and	w8, w23, w26
   40f88:	cbnz	w8, 40ff4 <mpfr_pow_z@@Base+0x9dc>
   40f8c:	ldr	x21, [sp, #48]
   40f90:	sub	x0, x29, #0x28
   40f94:	sub	x1, x29, #0x28
   40f98:	sub	x2, x29, #0x28
   40f9c:	mov	w3, w25
   40fa0:	bl	c1b0 <mpfr_mul@plt>
   40fa4:	orr	w28, w0, w28
   40fa8:	sub	x0, x29, #0x40
   40fac:	mov	x1, x21
   40fb0:	bl	c450 <__gmpz_tstbit@plt>
   40fb4:	cbz	w0, 40fd0 <mpfr_pow_z@@Base+0x9b8>
   40fb8:	sub	x0, x29, #0x28
   40fbc:	sub	x1, x29, #0x28
   40fc0:	mov	x2, x20
   40fc4:	mov	w3, w24
   40fc8:	bl	c1b0 <mpfr_mul@plt>
   40fcc:	orr	w28, w0, w28
   40fd0:	subs	x21, x21, #0x1
   40fd4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   40fd8:	ldr	x1, [x0, #2800]
   40fdc:	add	x0, x0, #0xaf0
   40fe0:	blr	x1
   40fe4:	ldr	w23, [x22, x0]
   40fe8:	b.lt	40ff4 <mpfr_pow_z@@Base+0x9dc>  // b.tstop
   40fec:	and	w8, w23, w26
   40ff0:	cbz	w8, 40f90 <mpfr_pow_z@@Base+0x978>
   40ff4:	tst	w23, #0x3
   40ff8:	mov	w8, wzr
   40ffc:	b.ne	40f10 <mpfr_pow_z@@Base+0x8f8>  // b.any
   41000:	ldr	w9, [sp, #76]
   41004:	cbz	w9, 40f10 <mpfr_pow_z@@Base+0x8f8>
   41008:	cbz	w28, 40f10 <mpfr_pow_z@@Base+0x8f8>
   4100c:	ldur	x8, [x29, #-24]
   41010:	mov	x9, #0xfffffffffffffeff    	// #-257
   41014:	movk	x9, #0x7fff, lsl #48
   41018:	add	x9, x9, #0x105
   4101c:	cmp	x8, x9
   41020:	b.lt	41068 <mpfr_pow_z@@Base+0xa50>  // b.tstop
   41024:	ldur	x8, [x29, #-40]
   41028:	ldr	x9, [sp, #56]
   4102c:	ldr	x10, [sp, #40]
   41030:	ldur	x0, [x29, #-16]
   41034:	add	x2, x9, x10
   41038:	ldr	x9, [sp, #64]
   4103c:	sub	x10, x8, #0x1
   41040:	add	x8, x8, #0x3e
   41044:	cmp	x10, #0x0
   41048:	csel	x8, x8, x10, lt  // lt = tstop
   4104c:	asr	x8, x8, #6
   41050:	ldr	x9, [x9]
   41054:	add	x1, x8, #0x1
   41058:	ldr	x8, [sp, #32]
   4105c:	add	x3, x9, x8
   41060:	bl	c830 <mpfr_round_p@plt>
   41064:	cbnz	w0, 40f0c <mpfr_pow_z@@Base+0x8f4>
   41068:	ldr	x1, [sp, #56]
   4106c:	ldr	x9, [sp, #16]
   41070:	mov	x8, #0xfffffffffffffeff    	// #-257
   41074:	movk	x8, #0x7fff, lsl #48
   41078:	sub	x8, x8, x1
   4107c:	cmp	x9, x8
   41080:	mov	x8, x9
   41084:	b.gt	410b0 <mpfr_pow_z@@Base+0xa98>
   41088:	add	x1, x1, x8
   4108c:	cmp	x1, #0x0
   41090:	cinc	x8, x1, lt  // lt = tstop
   41094:	asr	x8, x8, #1
   41098:	sub	x0, x29, #0x28
   4109c:	str	x8, [sp, #16]
   410a0:	str	x1, [sp, #56]
   410a4:	bl	c330 <mpfr_set_prec@plt>
   410a8:	mov	w8, #0x1                   	// #1
   410ac:	b	40f10 <mpfr_pow_z@@Base+0x8f8>
   410b0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   410b4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   410b8:	mov	w1, #0x64                  	// #100
   410bc:	add	x0, x0, #0x99c
   410c0:	add	x2, x2, #0x99a
   410c4:	bl	d030 <mpfr_assert_fail@plt>
   410c8:	ldr	x8, [sp, #16]
   410cc:	ldr	x1, [sp, #56]
   410d0:	b	41088 <mpfr_pow_z@@Base+0xa70>
   410d4:	tbnz	w23, #1, 4113c <mpfr_pow_z@@Base+0xb24>
   410d8:	tbnz	w23, #0, 41160 <mpfr_pow_z@@Base+0xb48>
   410dc:	ldur	w3, [x29, #-32]
   410e0:	ldr	x0, [sp, #64]
   410e4:	ldr	w2, [sp, #28]
   410e8:	sub	x1, x29, #0x28
   410ec:	bl	cb70 <mpfr_set4@plt>
   410f0:	mov	w20, w0
   410f4:	sub	x0, x29, #0x28
   410f8:	bl	c4f0 <mpfr_clear@plt>
   410fc:	mov	w0, w20
   41100:	ldp	x20, x19, [sp, #288]
   41104:	ldp	x22, x21, [sp, #272]
   41108:	ldp	x24, x23, [sp, #256]
   4110c:	ldp	x26, x25, [sp, #240]
   41110:	ldp	x28, x27, [sp, #224]
   41114:	ldp	x29, x30, [sp, #208]
   41118:	add	sp, sp, #0x130
   4111c:	ret
   41120:	ldr	w3, [x20, #8]
   41124:	ldr	x0, [sp, #64]
   41128:	mov	x1, x20
   4112c:	mov	w2, w21
   41130:	bl	cb70 <mpfr_set4@plt>
   41134:	mov	w20, w0
   41138:	b	410fc <mpfr_pow_z@@Base+0xae4>
   4113c:	ldur	x8, [x29, #-56]
   41140:	ldur	w9, [x29, #-60]
   41144:	ldr	w8, [x8]
   41148:	cmp	w9, #0x0
   4114c:	cset	w9, ne  // ne = any
   41150:	tst	w8, w9
   41154:	b.eq	411b8 <mpfr_pow_z@@Base+0xba0>  // b.none
   41158:	ldr	w2, [x20, #8]
   4115c:	b	411bc <mpfr_pow_z@@Base+0xba4>
   41160:	ldr	w1, [sp, #28]
   41164:	cbz	w1, 411cc <mpfr_pow_z@@Base+0xbb4>
   41168:	ldur	x8, [x29, #-56]
   4116c:	ldur	w9, [x29, #-60]
   41170:	ldr	w8, [x8]
   41174:	cmp	w9, #0x0
   41178:	cset	w9, ne  // ne = any
   4117c:	tst	w8, w9
   41180:	b.eq	41268 <mpfr_pow_z@@Base+0xc50>  // b.none
   41184:	ldr	w2, [x20, #8]
   41188:	b	4126c <mpfr_pow_z@@Base+0xc54>
   4118c:	mov	x8, xzr
   41190:	b	40ebc <mpfr_pow_z@@Base+0x8a4>
   41194:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   41198:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   4119c:	add	x0, x0, #0x99c
   411a0:	add	x2, x2, #0xef4
   411a4:	mov	x22, x1
   411a8:	mov	w1, #0x42                  	// #66
   411ac:	bl	d030 <mpfr_assert_fail@plt>
   411b0:	mov	x1, x22
   411b4:	b	40ea4 <mpfr_pow_z@@Base+0x88c>
   411b8:	mov	w2, #0x1                   	// #1
   411bc:	ldr	w1, [sp, #28]
   411c0:	ldr	x0, [sp, #64]
   411c4:	bl	c3a0 <mpfr_overflow@plt>
   411c8:	b	410f0 <mpfr_pow_z@@Base+0xad8>
   411cc:	sub	x0, x29, #0x60
   411d0:	mov	w1, #0x2                   	// #2
   411d4:	bl	cf60 <mpfr_init2@plt>
   411d8:	ldr	x19, [sp, #8]
   411dc:	add	x0, sp, #0x50
   411e0:	ldr	w8, [x19, #4]
   411e4:	cmp	w8, #0x0
   411e8:	cneg	w8, w8, mi  // mi = first
   411ec:	lsl	w1, w8, #6
   411f0:	bl	cf60 <mpfr_init2@plt>
   411f4:	add	x0, sp, #0x50
   411f8:	mov	x1, x19
   411fc:	mov	w2, wzr
   41200:	bl	c6e0 <mpfr_set_z@plt>
   41204:	cbnz	w0, 41278 <mpfr_pow_z@@Base+0xc60>
   41208:	sub	x0, x29, #0x60
   4120c:	add	x2, sp, #0x50
   41210:	mov	w4, #0x1                   	// #1
   41214:	mov	x1, x20
   41218:	mov	w3, wzr
   4121c:	mov	x5, xzr
   41220:	bl	cbc0 <mpfr_pow_general@plt>
   41224:	mov	w20, w0
   41228:	add	x0, sp, #0x50
   4122c:	bl	c4f0 <mpfr_clear@plt>
   41230:	ldur	w3, [x29, #-88]
   41234:	ldr	x0, [sp, #64]
   41238:	sub	x1, x29, #0x60
   4123c:	mov	w2, wzr
   41240:	bl	cb70 <mpfr_set4@plt>
   41244:	sub	x0, x29, #0x60
   41248:	bl	c4f0 <mpfr_clear@plt>
   4124c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   41250:	ldr	x1, [x0, #2800]
   41254:	add	x0, x0, #0xaf0
   41258:	blr	x1
   4125c:	mov	w8, #0x9                   	// #9
   41260:	str	w8, [x22, x0]
   41264:	b	410f4 <mpfr_pow_z@@Base+0xadc>
   41268:	mov	w2, #0x1                   	// #1
   4126c:	ldr	x0, [sp, #64]
   41270:	bl	c880 <mpfr_underflow@plt>
   41274:	b	410f0 <mpfr_pow_z@@Base+0xad8>
   41278:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4127c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   41280:	add	x0, x0, #0x99c
   41284:	add	x2, x2, #0xed3
   41288:	mov	w1, #0x85                  	// #133
   4128c:	bl	d030 <mpfr_assert_fail@plt>
   41290:	b	41208 <mpfr_pow_z@@Base+0xbf0>

0000000000041294 <mpfr_mulhigh_n@@Base>:
   41294:	sub	sp, sp, #0x70
   41298:	stp	x24, x23, [sp, #64]
   4129c:	stp	x22, x21, [sp, #80]
   412a0:	stp	x20, x19, [sp, #96]
   412a4:	mov	x23, x3
   412a8:	mov	x19, x2
   412ac:	mov	x20, x1
   412b0:	cmp	x3, #0x10
   412b4:	mov	x22, x0
   412b8:	stp	x29, x30, [sp, #16]
   412bc:	stp	x28, x27, [sp, #32]
   412c0:	stp	x26, x25, [sp, #48]
   412c4:	add	x29, sp, #0x10
   412c8:	b.hi	413c8 <mpfr_mulhigh_n@@Base+0x134>  // b.pmore
   412cc:	adrp	x8, 60000 <mpfr_bases@@Base+0x408>
   412d0:	add	x8, x8, #0x9c6
   412d4:	ldrsh	x21, [x8, x23, lsl #1]
   412d8:	tbnz	x21, #63, 413e0 <mpfr_mulhigh_n@@Base+0x14c>
   412dc:	cbz	x21, 41304 <mpfr_mulhigh_n@@Base+0x70>
   412e0:	mov	w8, #0x2101                	// #8449
   412e4:	cmp	x23, x8
   412e8:	b.lt	4131c <mpfr_mulhigh_n@@Base+0x88>  // b.tstop
   412ec:	mov	x0, x22
   412f0:	mov	x1, x20
   412f4:	mov	x2, x19
   412f8:	mov	x3, x23
   412fc:	bl	c940 <__gmpn_mul_n@plt>
   41300:	b	413f8 <mpfr_mulhigh_n@@Base+0x164>
   41304:	mov	x0, x22
   41308:	mov	x1, x20
   4130c:	mov	x2, x19
   41310:	mov	x3, x23
   41314:	bl	41418 <mpfr_mulhigh_n@@Base+0x184>
   41318:	b	413f8 <mpfr_mulhigh_n@@Base+0x164>
   4131c:	sub	x24, x23, x21
   41320:	lsl	x28, x24, #3
   41324:	add	x0, x22, x24, lsl #4
   41328:	add	x1, x20, x28
   4132c:	add	x2, x19, x28
   41330:	mov	x3, x21
   41334:	bl	c940 <__gmpn_mul_n@plt>
   41338:	lsl	x27, x21, #3
   4133c:	add	x1, x20, x27
   41340:	mov	x0, x22
   41344:	mov	x2, x19
   41348:	mov	x3, x24
   4134c:	bl	c0e0 <mpfr_mulhigh_n@plt>
   41350:	add	x9, x22, x23, lsl #3
   41354:	add	x8, x22, x28
   41358:	sub	x23, x9, #0x8
   4135c:	sub	x25, x8, #0x8
   41360:	add	x26, x24, #0x1
   41364:	mov	x0, x23
   41368:	mov	x1, x23
   4136c:	mov	x2, x25
   41370:	mov	x3, x26
   41374:	str	x9, [sp, #8]
   41378:	bl	ca70 <__gmpn_add_n@plt>
   4137c:	str	x0, [sp]
   41380:	add	x2, x19, x27
   41384:	mov	x0, x22
   41388:	mov	x1, x20
   4138c:	mov	x3, x24
   41390:	bl	c0e0 <mpfr_mulhigh_n@plt>
   41394:	mov	x0, x23
   41398:	mov	x1, x23
   4139c:	mov	x2, x25
   413a0:	mov	x3, x26
   413a4:	bl	ca70 <__gmpn_add_n@plt>
   413a8:	ldr	x8, [sp]
   413ac:	mov	x2, x21
   413b0:	add	x3, x0, x8
   413b4:	ldr	x8, [sp, #8]
   413b8:	add	x0, x8, x28
   413bc:	mov	x1, x0
   413c0:	bl	bf60 <__gmpn_add_1@plt>
   413c4:	b	413f8 <mpfr_mulhigh_n@@Base+0x164>
   413c8:	add	x8, x23, #0x3
   413cc:	cmp	x23, #0x0
   413d0:	csel	x8, x8, x23, lt  // lt = tstop
   413d4:	asr	x8, x8, #2
   413d8:	add	x21, x8, x8, lsl #1
   413dc:	tbz	x21, #63, 412dc <mpfr_mulhigh_n@@Base+0x48>
   413e0:	mov	x0, x22
   413e4:	mov	x1, x20
   413e8:	mov	x2, x23
   413ec:	mov	x3, x19
   413f0:	mov	x4, x23
   413f4:	bl	cc80 <__gmpn_mul@plt>
   413f8:	ldp	x20, x19, [sp, #96]
   413fc:	ldp	x22, x21, [sp, #80]
   41400:	ldp	x24, x23, [sp, #64]
   41404:	ldp	x26, x25, [sp, #48]
   41408:	ldp	x28, x27, [sp, #32]
   4140c:	ldp	x29, x30, [sp, #16]
   41410:	add	sp, sp, #0x70
   41414:	ret
   41418:	stp	x29, x30, [sp, #-80]!
   4141c:	lsl	x8, x3, #3
   41420:	stp	x24, x23, [sp, #32]
   41424:	stp	x22, x21, [sp, #48]
   41428:	stp	x20, x19, [sp, #64]
   4142c:	sub	x10, x8, #0x8
   41430:	ldr	x9, [x2]
   41434:	ldr	x11, [x1, x10]
   41438:	cmp	x3, #0x2
   4143c:	add	x21, x0, x10
   41440:	umulh	x10, x11, x9
   41444:	mul	x9, x9, x11
   41448:	str	x25, [sp, #16]
   4144c:	mov	x29, sp
   41450:	str	x10, [x0, x8]
   41454:	str	x9, [x21]
   41458:	b.lt	414a0 <mpfr_mulhigh_n@@Base+0x20c>  // b.tstop
   4145c:	add	x24, x0, x8
   41460:	add	x8, x8, x1
   41464:	mov	x19, x3
   41468:	mov	x20, x2
   4146c:	sub	x22, x8, #0x10
   41470:	mov	w23, #0x1                   	// #1
   41474:	lsl	x25, x23, #3
   41478:	ldr	x3, [x20, x25]
   4147c:	add	x23, x23, #0x1
   41480:	mov	x0, x21
   41484:	mov	x1, x22
   41488:	mov	x2, x23
   4148c:	bl	d1d0 <__gmpn_addmul_1@plt>
   41490:	cmp	x19, x23
   41494:	sub	x22, x22, #0x8
   41498:	str	x0, [x24, x25]
   4149c:	b.ne	41474 <mpfr_mulhigh_n@@Base+0x1e0>  // b.any
   414a0:	ldp	x20, x19, [sp, #64]
   414a4:	ldp	x22, x21, [sp, #48]
   414a8:	ldp	x24, x23, [sp, #32]
   414ac:	ldr	x25, [sp, #16]
   414b0:	ldp	x29, x30, [sp], #80
   414b4:	ret

00000000000414b8 <mpfr_sqrhigh_n@@Base>:
   414b8:	stp	x29, x30, [sp, #-80]!
   414bc:	stp	x22, x21, [sp, #48]
   414c0:	stp	x20, x19, [sp, #64]
   414c4:	mov	x19, x2
   414c8:	mov	x22, x1
   414cc:	cmp	x2, #0x10
   414d0:	mov	x21, x0
   414d4:	str	x25, [sp, #16]
   414d8:	stp	x24, x23, [sp, #32]
   414dc:	mov	x29, sp
   414e0:	b.hi	41590 <mpfr_sqrhigh_n@@Base+0xd8>  // b.pmore
   414e4:	adrp	x8, 60000 <mpfr_bases@@Base+0x408>
   414e8:	add	x8, x8, #0x9e8
   414ec:	ldrsh	x20, [x8, x19, lsl #1]
   414f0:	tbnz	x20, #63, 415a8 <mpfr_sqrhigh_n@@Base+0xf0>
   414f4:	cbz	x20, 41578 <mpfr_sqrhigh_n@@Base+0xc0>
   414f8:	sub	x23, x19, x20
   414fc:	lsl	x25, x23, #3
   41500:	add	x0, x21, x23, lsl #4
   41504:	add	x1, x22, x25
   41508:	mov	x2, x20
   4150c:	bl	c870 <__gmpn_sqr@plt>
   41510:	add	x2, x22, x20, lsl #3
   41514:	mov	x0, x21
   41518:	mov	x1, x22
   4151c:	mov	x3, x23
   41520:	bl	c0e0 <mpfr_mulhigh_n@plt>
   41524:	add	x8, x21, x25
   41528:	sub	x22, x8, #0x8
   4152c:	add	x23, x23, #0x1
   41530:	mov	w3, #0x1                   	// #1
   41534:	mov	x0, x22
   41538:	mov	x1, x22
   4153c:	mov	x2, x23
   41540:	bl	c120 <__gmpn_lshift@plt>
   41544:	add	x19, x21, x19, lsl #3
   41548:	mov	x24, x0
   4154c:	sub	x0, x19, #0x8
   41550:	mov	x1, x0
   41554:	mov	x2, x22
   41558:	mov	x3, x23
   4155c:	bl	ca70 <__gmpn_add_n@plt>
   41560:	add	x3, x0, x24
   41564:	add	x0, x19, x25
   41568:	mov	x1, x0
   4156c:	mov	x2, x20
   41570:	bl	bf60 <__gmpn_add_1@plt>
   41574:	b	415b8 <mpfr_sqrhigh_n@@Base+0x100>
   41578:	mov	x0, x21
   4157c:	mov	x1, x22
   41580:	mov	x2, x22
   41584:	mov	x3, x19
   41588:	bl	41418 <mpfr_mulhigh_n@@Base+0x184>
   4158c:	b	415b8 <mpfr_sqrhigh_n@@Base+0x100>
   41590:	add	x8, x19, #0x4
   41594:	add	x9, x19, #0x5
   41598:	cmp	x8, #0x0
   4159c:	csel	x8, x9, x8, lt  // lt = tstop
   415a0:	asr	x20, x8, #1
   415a4:	tbz	x20, #63, 414f4 <mpfr_sqrhigh_n@@Base+0x3c>
   415a8:	mov	x0, x21
   415ac:	mov	x1, x22
   415b0:	mov	x2, x19
   415b4:	bl	c870 <__gmpn_sqr@plt>
   415b8:	ldp	x20, x19, [sp, #64]
   415bc:	ldp	x22, x21, [sp, #48]
   415c0:	ldp	x24, x23, [sp, #32]
   415c4:	ldr	x25, [sp, #16]
   415c8:	ldp	x29, x30, [sp], #80
   415cc:	ret

00000000000415d0 <mpfr_divhigh_n@@Base>:
   415d0:	stp	x29, x30, [sp, #-96]!
   415d4:	stp	x28, x27, [sp, #16]
   415d8:	stp	x26, x25, [sp, #32]
   415dc:	stp	x24, x23, [sp, #48]
   415e0:	stp	x22, x21, [sp, #64]
   415e4:	stp	x20, x19, [sp, #80]
   415e8:	mov	x29, sp
   415ec:	sub	sp, sp, #0x10
   415f0:	mov	x20, x3
   415f4:	mov	x19, x2
   415f8:	mov	x21, x1
   415fc:	cmp	x3, #0x10
   41600:	mov	x22, x0
   41604:	b.hi	4175c <mpfr_divhigh_n@@Base+0x18c>  // b.pmore
   41608:	adrp	x8, 60000 <mpfr_bases@@Base+0x408>
   4160c:	add	x8, x8, #0x9a4
   41610:	ldrsh	x23, [x8, x20, lsl #1]
   41614:	cbz	x23, 41774 <mpfr_divhigh_n@@Base+0x1a4>
   41618:	cmp	x23, x20
   4161c:	b.ne	41640 <mpfr_divhigh_n@@Base+0x70>  // b.any
   41620:	lsl	x3, x20, #1
   41624:	mov	x0, x22
   41628:	mov	x1, xzr
   4162c:	mov	x2, x21
   41630:	mov	x4, x19
   41634:	mov	x5, x20
   41638:	bl	d1b0 <__gmpn_divrem@plt>
   4163c:	b	41788 <mpfr_divhigh_n@@Base+0x1b8>
   41640:	sub	x24, x20, x23
   41644:	lsl	x8, x24, #3
   41648:	lsl	x27, x24, #4
   4164c:	add	x25, x22, x8
   41650:	lsl	x3, x23, #1
   41654:	add	x2, x21, x27
   41658:	add	x4, x19, x8
   4165c:	mov	x0, x25
   41660:	mov	x1, xzr
   41664:	mov	x5, x23
   41668:	stur	xzr, [x29, #-8]
   4166c:	bl	d1b0 <__gmpn_divrem@plt>
   41670:	cmp	x27, #0x4, lsl #12
   41674:	mov	x26, x0
   41678:	b.hi	417b0 <mpfr_divhigh_n@@Base+0x1e0>  // b.pmore
   4167c:	add	x9, x27, #0xf
   41680:	mov	x8, sp
   41684:	and	x9, x9, #0xfffffffffffffff0
   41688:	sub	x27, x8, x9
   4168c:	mov	sp, x27
   41690:	add	x1, x22, x23, lsl #3
   41694:	mov	x0, x27
   41698:	mov	x2, x19
   4169c:	mov	x3, x24
   416a0:	bl	c0e0 <mpfr_mulhigh_n@plt>
   416a4:	add	x28, x21, x20, lsl #3
   416a8:	add	x2, x27, x24, lsl #3
   416ac:	mov	x0, x28
   416b0:	mov	x1, x28
   416b4:	mov	x3, x24
   416b8:	bl	c2c0 <__gmpn_sub_n@plt>
   416bc:	mov	x27, x0
   416c0:	cbz	x26, 416dc <mpfr_divhigh_n@@Base+0x10c>
   416c4:	mov	x0, x28
   416c8:	mov	x1, x28
   416cc:	mov	x2, x19
   416d0:	mov	x3, x24
   416d4:	bl	c2c0 <__gmpn_sub_n@plt>
   416d8:	add	x27, x0, x27
   416dc:	cbz	x27, 41718 <mpfr_divhigh_n@@Base+0x148>
   416e0:	add	x28, x21, x24, lsl #3
   416e4:	mov	w3, #0x1                   	// #1
   416e8:	mov	x0, x25
   416ec:	mov	x1, x25
   416f0:	mov	x2, x23
   416f4:	bl	c8f0 <__gmpn_sub_1@plt>
   416f8:	sub	x26, x26, x0
   416fc:	mov	x0, x28
   41700:	mov	x1, x28
   41704:	mov	x2, x19
   41708:	mov	x3, x20
   4170c:	bl	ca70 <__gmpn_add_n@plt>
   41710:	subs	x27, x27, x0
   41714:	b.ne	416e4 <mpfr_divhigh_n@@Base+0x114>  // b.any
   41718:	lsl	x8, x23, #3
   4171c:	add	x1, x21, x8
   41720:	add	x2, x19, x8
   41724:	mov	x0, x22
   41728:	mov	x3, x24
   4172c:	bl	c5e0 <mpfr_divhigh_n@plt>
   41730:	mov	x3, x0
   41734:	mov	x0, x25
   41738:	mov	x1, x25
   4173c:	mov	x2, x23
   41740:	bl	bf60 <__gmpn_add_1@plt>
   41744:	ldur	x8, [x29, #-8]
   41748:	add	x19, x0, x26
   4174c:	cbz	x8, 4178c <mpfr_divhigh_n@@Base+0x1bc>
   41750:	mov	x0, x8
   41754:	bl	c8d0 <mpfr_tmp_free@plt>
   41758:	b	4178c <mpfr_divhigh_n@@Base+0x1bc>
   4175c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   41760:	movk	x8, #0x5556
   41764:	smulh	x8, x20, x8
   41768:	add	x8, x8, x8, lsr #63
   4176c:	lsl	x23, x8, #1
   41770:	cbnz	x23, 41618 <mpfr_divhigh_n@@Base+0x48>
   41774:	mov	x0, x22
   41778:	mov	x1, x21
   4177c:	mov	x2, x19
   41780:	mov	x3, x20
   41784:	bl	417c4 <mpfr_divhigh_n@@Base+0x1f4>
   41788:	mov	x19, x0
   4178c:	mov	x0, x19
   41790:	mov	sp, x29
   41794:	ldp	x20, x19, [sp, #80]
   41798:	ldp	x22, x21, [sp, #64]
   4179c:	ldp	x24, x23, [sp, #48]
   417a0:	ldp	x26, x25, [sp, #32]
   417a4:	ldp	x28, x27, [sp, #16]
   417a8:	ldp	x29, x30, [sp], #96
   417ac:	ret
   417b0:	sub	x0, x29, #0x8
   417b4:	mov	x1, x27
   417b8:	bl	c220 <mpfr_tmp_allocate@plt>
   417bc:	mov	x27, x0
   417c0:	b	41690 <mpfr_divhigh_n@@Base+0xc0>
   417c4:	sub	sp, sp, #0x80
   417c8:	stp	x24, x23, [sp, #80]
   417cc:	add	x23, x1, x3, lsl #3
   417d0:	stp	x22, x21, [sp, #96]
   417d4:	stp	x20, x19, [sp, #112]
   417d8:	mov	x22, x2
   417dc:	mov	x24, x1
   417e0:	mov	x19, x0
   417e4:	mov	x0, x23
   417e8:	mov	x1, x2
   417ec:	mov	x2, x3
   417f0:	stp	x29, x30, [sp, #32]
   417f4:	stp	x28, x27, [sp, #48]
   417f8:	stp	x26, x25, [sp, #64]
   417fc:	add	x29, sp, #0x20
   41800:	mov	x21, x3
   41804:	bl	c3f0 <__gmpn_cmp@plt>
   41808:	mvn	w8, w0
   4180c:	lsr	w20, w8, #31
   41810:	tbnz	w0, #31, 41828 <mpfr_divhigh_n@@Base+0x258>
   41814:	mov	x0, x23
   41818:	mov	x1, x23
   4181c:	mov	x2, x22
   41820:	mov	x3, x21
   41824:	bl	c2c0 <__gmpn_sub_n@plt>
   41828:	add	x8, x22, x21, lsl #3
   4182c:	ldur	x26, [x8, #-8]
   41830:	cmp	x21, #0x1
   41834:	b.ne	41884 <mpfr_divhigh_n@@Base+0x2b4>  // b.any
   41838:	lsr	x8, x26, #32
   4183c:	mvn	x10, x26
   41840:	udiv	x13, x10, x8
   41844:	and	x9, x26, #0xffffffff
   41848:	msub	w10, w13, w8, w10
   4184c:	mov	w12, #0xffffffff            	// #-1
   41850:	mul	x11, x13, x9
   41854:	bfi	x12, x10, #32, #32
   41858:	cmp	x12, x11
   4185c:	b.cs	418d4 <mpfr_divhigh_n@@Base+0x304>  // b.hs, b.nlast
   41860:	add	x12, x12, x26
   41864:	cmp	x12, x26
   41868:	sub	x10, x13, #0x1
   4186c:	b.cc	418d8 <mpfr_divhigh_n@@Base+0x308>  // b.lo, b.ul, b.last
   41870:	cmp	x12, x11
   41874:	b.cs	418d8 <mpfr_divhigh_n@@Base+0x308>  // b.hs, b.nlast
   41878:	sub	x10, x13, #0x2
   4187c:	add	x12, x12, x26
   41880:	b	418d8 <mpfr_divhigh_n@@Base+0x308>
   41884:	ldur	x27, [x8, #-16]
   41888:	lsr	x8, x26, #32
   4188c:	mvn	x10, x26
   41890:	udiv	x13, x10, x8
   41894:	and	x9, x26, #0xffffffff
   41898:	msub	w10, w13, w8, w10
   4189c:	mov	w12, #0xffffffff            	// #-1
   418a0:	mul	x11, x13, x9
   418a4:	bfi	x12, x10, #32, #32
   418a8:	cmp	x12, x11
   418ac:	b.cs	41920 <mpfr_divhigh_n@@Base+0x350>  // b.hs, b.nlast
   418b0:	add	x12, x12, x26
   418b4:	cmp	x12, x26
   418b8:	sub	x10, x13, #0x1
   418bc:	b.cc	41924 <mpfr_divhigh_n@@Base+0x354>  // b.lo, b.ul, b.last
   418c0:	cmp	x12, x11
   418c4:	b.cs	41924 <mpfr_divhigh_n@@Base+0x354>  // b.hs, b.nlast
   418c8:	sub	x10, x13, #0x2
   418cc:	add	x12, x12, x26
   418d0:	b	41924 <mpfr_divhigh_n@@Base+0x354>
   418d4:	mov	x10, x13
   418d8:	sub	x12, x12, x11
   418dc:	udiv	x11, x12, x8
   418e0:	msub	w12, w11, w8, w12
   418e4:	mul	x8, x11, x9
   418e8:	mov	w9, #0xffffffff            	// #-1
   418ec:	bfi	x9, x12, #32, #32
   418f0:	cmp	x9, x8
   418f4:	b.cs	41910 <mpfr_divhigh_n@@Base+0x340>  // b.hs, b.nlast
   418f8:	add	x9, x9, x26
   418fc:	cmp	x9, x8
   41900:	ccmp	x9, x26, #0x0, cc  // cc = lo, ul, last
   41904:	mov	x8, #0xfffffffffffffffe    	// #-2
   41908:	cinc	x8, x8, cc  // cc = lo, ul, last
   4190c:	add	x11, x8, x11
   41910:	ldr	x8, [x23]
   41914:	orr	x9, x11, x10, lsl #32
   41918:	umulh	x9, x8, x9
   4191c:	b	41aec <mpfr_divhigh_n@@Base+0x51c>
   41920:	mov	x10, x13
   41924:	sub	x12, x12, x11
   41928:	udiv	x11, x12, x8
   4192c:	msub	w12, w11, w8, w12
   41930:	mul	x8, x11, x9
   41934:	mov	w9, #0xffffffff            	// #-1
   41938:	bfi	x9, x12, #32, #32
   4193c:	cmp	x9, x8
   41940:	b.cs	4195c <mpfr_divhigh_n@@Base+0x38c>  // b.hs, b.nlast
   41944:	add	x9, x9, x26
   41948:	cmp	x9, x8
   4194c:	ccmp	x9, x26, #0x0, cc  // cc = lo, ul, last
   41950:	mov	x8, #0xfffffffffffffffe    	// #-2
   41954:	cinc	x8, x8, cc  // cc = lo, ul, last
   41958:	add	x11, x8, x11
   4195c:	orr	x8, x11, x10, lsl #32
   41960:	mul	x9, x8, x26
   41964:	adds	x9, x9, x27
   41968:	b.cc	41984 <mpfr_divhigh_n@@Base+0x3b4>  // b.lo, b.ul, b.last
   4196c:	subs	x9, x9, x26
   41970:	cset	w10, cs  // cs = hs, nlast
   41974:	csel	x11, x26, xzr, cs  // cs = hs, nlast
   41978:	mvn	x10, x10
   4197c:	add	x8, x10, x8
   41980:	sub	x9, x9, x11
   41984:	umulh	x10, x27, x8
   41988:	adds	x9, x10, x9
   4198c:	str	x20, [sp, #8]
   41990:	stur	x19, [x29, #-8]
   41994:	str	x23, [sp, #16]
   41998:	b.cc	419c0 <mpfr_divhigh_n@@Base+0x3f0>  // b.lo, b.ul, b.last
   4199c:	cmp	x9, x26
   419a0:	sub	x28, x8, #0x1
   419a4:	b.cc	419c4 <mpfr_divhigh_n@@Base+0x3f4>  // b.lo, b.ul, b.last
   419a8:	mul	x10, x8, x27
   419ac:	cmp	x9, x26
   419b0:	sub	x8, x8, #0x2
   419b4:	ccmp	x10, x27, #0x2, ls  // ls = plast
   419b8:	csel	x28, x28, x8, cc  // cc = lo, ul, last
   419bc:	b	419c4 <mpfr_divhigh_n@@Base+0x3f4>
   419c0:	mov	x28, x8
   419c4:	cmp	x21, #0x2
   419c8:	b.lt	41adc <mpfr_divhigh_n@@Base+0x50c>  // b.tstop
   419cc:	ldr	x8, [sp, #16]
   419d0:	sub	x25, x8, #0x8
   419d4:	add	x8, x24, x21, lsl #4
   419d8:	sub	x20, x8, #0x8
   419dc:	ldur	x8, [x29, #-8]
   419e0:	sub	x19, x8, #0x8
   419e4:	ldr	x8, [x20]
   419e8:	cmp	x8, x26
   419ec:	b.hi	41aa0 <mpfr_divhigh_n@@Base+0x4d0>  // b.pmore
   419f0:	b.ne	41a00 <mpfr_divhigh_n@@Base+0x430>  // b.any
   419f4:	ldur	x9, [x20, #-8]
   419f8:	cmp	x9, x27
   419fc:	b.cs	41aa0 <mpfr_divhigh_n@@Base+0x4d0>  // b.hs, b.nlast
   41a00:	ldp	x12, x9, [x20, #-16]
   41a04:	umulh	x10, x8, x28
   41a08:	mul	x11, x8, x28
   41a0c:	adds	x13, x11, x9
   41a10:	adc	x8, x10, x8
   41a14:	msub	x9, x8, x26, x9
   41a18:	subs	x14, x12, x27
   41a1c:	sbc	x9, x9, x26
   41a20:	umulh	x10, x27, x8
   41a24:	mul	x11, x8, x27
   41a28:	subs	x12, x14, x11
   41a2c:	sbc	x9, x9, x10
   41a30:	cmp	x9, x13
   41a34:	cset	w10, cs  // cs = hs, nlast
   41a38:	csetm	x11, cs  // cs = hs, nlast
   41a3c:	sub	x10, x8, x10
   41a40:	and	x13, x26, x11
   41a44:	and	x11, x27, x11
   41a48:	adds	x8, x12, x11
   41a4c:	adc	x9, x9, x13
   41a50:	cmp	x9, x26
   41a54:	add	x24, x10, #0x1
   41a58:	b.cs	41aa8 <mpfr_divhigh_n@@Base+0x4d8>  // b.hs, b.nlast
   41a5c:	mov	x0, x25
   41a60:	mov	x1, x22
   41a64:	mov	x2, x21
   41a68:	mov	x3, x24
   41a6c:	sub	x23, x21, #0x1
   41a70:	bl	c990 <__gmpn_submul_1@plt>
   41a74:	ldr	x8, [x20]
   41a78:	cmp	x0, x8
   41a7c:	b.hi	41ac0 <mpfr_divhigh_n@@Base+0x4f0>  // b.pmore
   41a80:	add	x8, x23, #0x1
   41a84:	str	x24, [x19, x21, lsl #3]
   41a88:	add	x22, x22, #0x8
   41a8c:	cmp	x8, #0x2
   41a90:	sub	x20, x20, #0x8
   41a94:	mov	x21, x23
   41a98:	b.gt	419e4 <mpfr_divhigh_n@@Base+0x414>
   41a9c:	b	41adc <mpfr_divhigh_n@@Base+0x50c>
   41aa0:	mov	x24, #0xffffffffffffffff    	// #-1
   41aa4:	b	41a5c <mpfr_divhigh_n@@Base+0x48c>
   41aa8:	cset	w9, hi  // hi = pmore
   41aac:	cmp	x8, x27
   41ab0:	cset	w8, cs  // cs = hs, nlast
   41ab4:	orr	w8, w8, w9
   41ab8:	add	x24, x24, x8
   41abc:	b	41a5c <mpfr_divhigh_n@@Base+0x48c>
   41ac0:	mov	x0, x25
   41ac4:	mov	x1, x25
   41ac8:	mov	x2, x22
   41acc:	mov	x3, x21
   41ad0:	bl	ca70 <__gmpn_add_n@plt>
   41ad4:	sub	x24, x24, #0x1
   41ad8:	b	41a80 <mpfr_divhigh_n@@Base+0x4b0>
   41adc:	ldp	x20, x8, [sp, #8]
   41ae0:	ldur	x19, [x29, #-8]
   41ae4:	ldr	x8, [x8]
   41ae8:	umulh	x9, x8, x28
   41aec:	add	x8, x9, x8
   41af0:	str	x8, [x19]
   41af4:	mov	x0, x20
   41af8:	ldp	x20, x19, [sp, #112]
   41afc:	ldp	x22, x21, [sp, #96]
   41b00:	ldp	x24, x23, [sp, #80]
   41b04:	ldp	x26, x25, [sp, #64]
   41b08:	ldp	x28, x27, [sp, #48]
   41b0c:	ldp	x29, x30, [sp, #32]
   41b10:	add	sp, sp, #0x80
   41b14:	ret

0000000000041b18 <mpfr_get_f@@Base>:
   41b18:	sub	sp, sp, #0x70
   41b1c:	stp	x29, x30, [sp, #32]
   41b20:	stp	x24, x23, [sp, #64]
   41b24:	stp	x22, x21, [sp, #80]
   41b28:	stp	x20, x19, [sp, #96]
   41b2c:	ldr	x8, [x1, #16]
   41b30:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   41b34:	mov	x20, x1
   41b38:	mov	x19, x0
   41b3c:	cmp	x8, x9
   41b40:	str	x25, [sp, #48]
   41b44:	add	x29, sp, #0x20
   41b48:	b.le	41d30 <mpfr_get_f@@Base+0x218>
   41b4c:	ldr	x11, [x20]
   41b50:	add	x12, x8, #0x3f
   41b54:	ldrsw	x25, [x19]
   41b58:	ldr	x21, [x19, #16]
   41b5c:	sub	x9, x11, #0x1
   41b60:	add	x10, x11, #0x3e
   41b64:	cmp	x9, #0x0
   41b68:	csel	x9, x10, x9, lt  // lt = tstop
   41b6c:	cmp	x8, #0x0
   41b70:	csel	x12, x12, x8, lt  // lt = tstop
   41b74:	and	w12, w12, #0xffffffc0
   41b78:	sub	w8, w8, w12
   41b7c:	cmp	w8, #0x0
   41b80:	cset	w12, gt
   41b84:	lsl	w12, w12, #6
   41b88:	sub	w8, w12, w8
   41b8c:	sxtw	x22, w8
   41b90:	lsl	x10, x25, #6
   41b94:	add	x8, x11, x22
   41b98:	cmp	x8, x10
   41b9c:	b.le	41c2c <mpfr_get_f@@Base+0x114>
   41ba0:	sub	x1, x10, x22
   41ba4:	mov	x0, sp
   41ba8:	mov	w23, w2
   41bac:	bl	cf60 <mpfr_init2@plt>
   41bb0:	ldr	x8, [sp]
   41bb4:	sub	x9, x8, #0x1
   41bb8:	add	x8, x8, #0x3e
   41bbc:	cmp	x9, #0x0
   41bc0:	csel	x8, x8, x9, lt  // lt = tstop
   41bc4:	asr	x8, x8, #6
   41bc8:	add	x22, x8, #0x1
   41bcc:	cmp	x22, x25
   41bd0:	b.ne	41d60 <mpfr_get_f@@Base+0x248>  // b.any
   41bd4:	ldr	w3, [x20, #8]
   41bd8:	mov	x0, sp
   41bdc:	mov	x1, x20
   41be0:	mov	w2, w23
   41be4:	bl	cb70 <mpfr_set4@plt>
   41be8:	ldp	x8, x1, [sp, #16]
   41bec:	mov	w23, w0
   41bf0:	add	x9, x8, #0x3f
   41bf4:	cmp	x8, #0x0
   41bf8:	csel	x9, x9, x8, lt  // lt = tstop
   41bfc:	and	w9, w9, #0xffffffc0
   41c00:	sub	w8, w8, w9
   41c04:	cmp	w8, #0x0
   41c08:	cset	w9, gt
   41c0c:	lsl	w9, w9, #6
   41c10:	subs	w24, w9, w8
   41c14:	b.eq	41c7c <mpfr_get_f@@Base+0x164>  // b.none
   41c18:	mov	x0, x21
   41c1c:	mov	x2, x22
   41c20:	mov	w3, w24
   41c24:	bl	c140 <__gmpn_rshift@plt>
   41c28:	b	41c90 <mpfr_get_f@@Base+0x178>
   41c2c:	asr	x8, x9, #6
   41c30:	cmp	x8, x25
   41c34:	add	x23, x8, #0x1
   41c38:	b.ge	41d7c <mpfr_get_f@@Base+0x264>  // b.tcont
   41c3c:	ldr	x1, [x20, #24]
   41c40:	sub	x24, x25, x23
   41c44:	add	x0, x21, x24, lsl #3
   41c48:	cbz	w22, 41cb8 <mpfr_get_f@@Base+0x1a0>
   41c4c:	mov	x2, x23
   41c50:	mov	w3, w22
   41c54:	bl	c140 <__gmpn_rshift@plt>
   41c58:	cmp	x24, #0x0
   41c5c:	mov	x23, x0
   41c60:	b.gt	41c68 <mpfr_get_f@@Base+0x150>
   41c64:	cbnz	x23, 41e1c <mpfr_get_f@@Base+0x304>
   41c68:	subs	x8, x24, #0x1
   41c6c:	b.lt	41cc8 <mpfr_get_f@@Base+0x1b0>  // b.tstop
   41c70:	str	x23, [x21, x8, lsl #3]
   41c74:	mov	x24, x8
   41c78:	b	41cc8 <mpfr_get_f@@Base+0x1b0>
   41c7c:	cmp	x21, x1
   41c80:	b.eq	41c90 <mpfr_get_f@@Base+0x178>  // b.none
   41c84:	lsl	x2, x22, #3
   41c88:	mov	x0, x21
   41c8c:	bl	be50 <memcpy@plt>
   41c90:	ldr	x8, [sp, #16]
   41c94:	mov	x0, sp
   41c98:	add	x8, x8, w24, sxtw
   41c9c:	add	x9, x8, #0x3f
   41ca0:	cmp	x8, #0x0
   41ca4:	csel	x8, x9, x8, lt  // lt = tstop
   41ca8:	asr	x8, x8, #6
   41cac:	str	x8, [x19, #8]
   41cb0:	bl	c4f0 <mpfr_clear@plt>
   41cb4:	b	41d00 <mpfr_get_f@@Base+0x1e8>
   41cb8:	cmp	x0, x1
   41cbc:	b.eq	41cc8 <mpfr_get_f@@Base+0x1b0>  // b.none
   41cc0:	lsl	x2, x23, #3
   41cc4:	bl	be50 <memcpy@plt>
   41cc8:	cmp	x24, #0x1
   41ccc:	b.lt	41ce0 <mpfr_get_f@@Base+0x1c8>  // b.tstop
   41cd0:	lsl	x2, x24, #3
   41cd4:	mov	x0, x21
   41cd8:	mov	w1, wzr
   41cdc:	bl	c5b0 <memset@plt>
   41ce0:	ldr	x8, [x20, #16]
   41ce4:	mov	w23, wzr
   41ce8:	add	x8, x8, x22
   41cec:	add	x9, x8, #0x3f
   41cf0:	cmp	x8, #0x0
   41cf4:	csel	x8, x9, x8, lt  // lt = tstop
   41cf8:	asr	x8, x8, #6
   41cfc:	str	x8, [x19, #8]
   41d00:	ldr	w8, [x20, #8]
   41d04:	cmp	w8, #0x0
   41d08:	cneg	w8, w25, lt  // lt = tstop
   41d0c:	str	w8, [x19, #4]
   41d10:	mov	w0, w23
   41d14:	ldp	x20, x19, [sp, #96]
   41d18:	ldp	x22, x21, [sp, #80]
   41d1c:	ldp	x24, x23, [sp, #64]
   41d20:	ldr	x25, [sp, #48]
   41d24:	ldp	x29, x30, [sp, #32]
   41d28:	add	sp, sp, #0x70
   41d2c:	ret
   41d30:	mov	x9, #0x2                   	// #2
   41d34:	movk	x9, #0x8000, lsl #48
   41d38:	cmp	x8, x9
   41d3c:	b.eq	41d98 <mpfr_get_f@@Base+0x280>  // b.none
   41d40:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   41d44:	cmp	x8, x9
   41d48:	b.ne	41dc0 <mpfr_get_f@@Base+0x2a8>  // b.any
   41d4c:	mov	x0, x19
   41d50:	mov	x1, xzr
   41d54:	bl	c620 <__gmpf_set_ui@plt>
   41d58:	mov	w23, wzr
   41d5c:	b	41d10 <mpfr_get_f@@Base+0x1f8>
   41d60:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   41d64:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   41d68:	add	x0, x0, #0xa0a
   41d6c:	add	x2, x2, #0xa2e
   41d70:	mov	w1, #0x7c                  	// #124
   41d74:	bl	d030 <mpfr_assert_fail@plt>
   41d78:	b	41bd4 <mpfr_get_f@@Base+0xbc>
   41d7c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   41d80:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   41d84:	add	x0, x0, #0xa0a
   41d88:	add	x2, x2, #0xa12
   41d8c:	mov	w1, #0x61                  	// #97
   41d90:	bl	d030 <mpfr_assert_fail@plt>
   41d94:	b	41c3c <mpfr_get_f@@Base+0x124>
   41d98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   41d9c:	ldr	x1, [x0, #2800]
   41da0:	add	x0, x0, #0xaf0
   41da4:	blr	x1
   41da8:	mrs	x8, tpidr_el0
   41dac:	ldr	w9, [x8, x0]
   41db0:	mov	w23, wzr
   41db4:	orr	w9, w9, #0x10
   41db8:	str	w9, [x8, x0]
   41dbc:	b	41d10 <mpfr_get_f@@Base+0x1f8>
   41dc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   41dc4:	ldr	x1, [x0, #2800]
   41dc8:	add	x0, x0, #0xaf0
   41dcc:	blr	x1
   41dd0:	mrs	x8, tpidr_el0
   41dd4:	ldr	w9, [x8, x0]
   41dd8:	orr	w9, w9, #0x10
   41ddc:	str	w9, [x8, x0]
   41de0:	ldrsw	x8, [x19]
   41de4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   41de8:	str	x9, [x19, #8]
   41dec:	cmp	w8, #0x1
   41df0:	str	w8, [x19, #4]
   41df4:	b.lt	41e08 <mpfr_get_f@@Base+0x2f0>  // b.tstop
   41df8:	ldr	x0, [x19, #16]
   41dfc:	lsl	x2, x8, #3
   41e00:	mov	w1, #0xff                  	// #255
   41e04:	bl	c5b0 <memset@plt>
   41e08:	ldr	w8, [x20, #8]
   41e0c:	cmp	w8, #0x0
   41e10:	b.le	41e40 <mpfr_get_f@@Base+0x328>
   41e14:	mov	w23, #0xffffffff            	// #-1
   41e18:	b	41d10 <mpfr_get_f@@Base+0x1f8>
   41e1c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   41e20:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   41e24:	add	x0, x0, #0xa0a
   41e28:	add	x2, x2, #0xa1b
   41e2c:	mov	w1, #0x68                  	// #104
   41e30:	bl	d030 <mpfr_assert_fail@plt>
   41e34:	subs	x8, x24, #0x1
   41e38:	b.ge	41c70 <mpfr_get_f@@Base+0x158>  // b.tcont
   41e3c:	b	41cc8 <mpfr_get_f@@Base+0x1b0>
   41e40:	mov	x0, x19
   41e44:	mov	x1, x19
   41e48:	bl	cba0 <__gmpf_neg@plt>
   41e4c:	mov	w23, #0x1                   	// #1
   41e50:	b	41d10 <mpfr_get_f@@Base+0x1f8>

0000000000041e54 <mpfr_round_p@@Base>:
   41e54:	lsl	x9, x1, #6
   41e58:	cmp	x9, x3
   41e5c:	mov	w8, wzr
   41e60:	b.le	41fb8 <mpfr_round_p@@Base+0x164>
   41e64:	cmp	x2, #0x1
   41e68:	b.lt	41fb8 <mpfr_round_p@@Base+0x164>  // b.tstop
   41e6c:	cmp	x2, x3
   41e70:	b.ls	41fb8 <mpfr_round_p@@Base+0x164>  // b.plast
   41e74:	cmp	x9, x2
   41e78:	add	x8, x3, #0x3f
   41e7c:	csel	x9, x9, x2, cc  // cc = lo, ul, last
   41e80:	cmp	x3, #0x0
   41e84:	csel	x8, x8, x3, lt  // lt = tstop
   41e88:	add	x12, x9, #0x3f
   41e8c:	cmp	x9, #0x0
   41e90:	asr	x8, x8, #6
   41e94:	csel	x10, x12, x9, lt  // lt = tstop
   41e98:	asr	x11, x10, #6
   41e9c:	mvn	x10, x8
   41ea0:	add	x10, x10, x1
   41ea4:	add	x10, x0, x10, lsl #3
   41ea8:	sub	w13, w3, w8, lsl #6
   41eac:	ldr	x16, [x10], #-8
   41eb0:	neg	w14, w13
   41eb4:	mov	x17, #0xffffffffffffffff    	// #-1
   41eb8:	lsl	x14, x17, x14
   41ebc:	cmp	w13, #0x0
   41ec0:	csinv	x13, x17, x14, eq  // eq = none
   41ec4:	sub	x15, x11, x8
   41ec8:	and	x14, x16, x13
   41ecc:	cbnz	x15, 41f00 <mpfr_round_p@@Base+0xac>
   41ed0:	cmp	x9, #0x0
   41ed4:	csel	x8, x12, x9, lt  // lt = tstop
   41ed8:	and	w8, w8, #0xffffffc0
   41edc:	sub	w8, w8, w9
   41ee0:	lsr	x9, x14, x8
   41ee4:	lsr	x8, x13, x8
   41ee8:	cmp	x9, #0x0
   41eec:	cset	w10, ne  // ne = any
   41ef0:	cmp	x9, x8
   41ef4:	cset	w8, ne  // ne = any
   41ef8:	and	w0, w8, w10
   41efc:	ret
   41f00:	cbz	x14, 41f14 <mpfr_round_p@@Base+0xc0>
   41f04:	cmp	x14, x13
   41f08:	b.eq	41f3c <mpfr_round_p@@Base+0xe8>  // b.none
   41f0c:	mov	w0, #0x1                   	// #1
   41f10:	ret
   41f14:	mvn	x12, x11
   41f18:	sub	x8, x8, x11
   41f1c:	add	x11, x12, x1
   41f20:	add	x12, x8, #0x1
   41f24:	mov	w8, #0x1                   	// #1
   41f28:	cbz	x12, 41f68 <mpfr_round_p@@Base+0x114>
   41f2c:	ldr	x13, [x10], #-8
   41f30:	add	x12, x12, #0x1
   41f34:	cbz	x13, 41f28 <mpfr_round_p@@Base+0xd4>
   41f38:	b	41fb8 <mpfr_round_p@@Base+0x164>
   41f3c:	mvn	x12, x11
   41f40:	sub	x8, x8, x11
   41f44:	add	x12, x12, x1
   41f48:	add	x13, x8, #0x1
   41f4c:	cbz	x13, 41f94 <mpfr_round_p@@Base+0x140>
   41f50:	ldr	x8, [x10], #-8
   41f54:	add	x13, x13, #0x1
   41f58:	cmn	x8, #0x1
   41f5c:	mov	w8, #0x1                   	// #1
   41f60:	b.eq	41f4c <mpfr_round_p@@Base+0xf8>  // b.none
   41f64:	b	41fb8 <mpfr_round_p@@Base+0x164>
   41f68:	add	x8, x9, #0x3f
   41f6c:	cmp	x9, #0x0
   41f70:	csel	x8, x8, x9, lt  // lt = tstop
   41f74:	and	x8, x8, #0xffffffffffffffc0
   41f78:	sub	x8, x9, x8
   41f7c:	cbz	w8, 41fb8 <mpfr_round_p@@Base+0x164>
   41f80:	ldr	x9, [x0, x11, lsl #3]
   41f84:	neg	w8, w8
   41f88:	lsr	x8, x9, x8
   41f8c:	cmp	x8, #0x0
   41f90:	b	41fb4 <mpfr_round_p@@Base+0x160>
   41f94:	sub	x8, x9, x11, lsl #6
   41f98:	cbz	w8, 41fb8 <mpfr_round_p@@Base+0x164>
   41f9c:	ldr	x9, [x0, x12, lsl #3]
   41fa0:	neg	w8, w8
   41fa4:	mov	x10, #0xffffffffffffffff    	// #-1
   41fa8:	lsr	x9, x9, x8
   41fac:	lsr	x8, x10, x8
   41fb0:	cmp	x9, x8
   41fb4:	cset	w8, ne  // ne = any
   41fb8:	mov	w0, w8
   41fbc:	ret

0000000000041fc0 <mpfr_erfc@@Base>:
   41fc0:	sub	sp, sp, #0xb0
   41fc4:	stp	x28, x27, [sp, #96]
   41fc8:	mov	x27, #0x4                   	// #4
   41fcc:	stp	x29, x30, [sp, #80]
   41fd0:	stp	x26, x25, [sp, #112]
   41fd4:	stp	x24, x23, [sp, #128]
   41fd8:	stp	x22, x21, [sp, #144]
   41fdc:	stp	x20, x19, [sp, #160]
   41fe0:	add	x29, sp, #0x50
   41fe4:	mov	w20, w2
   41fe8:	mov	x21, x1
   41fec:	mov	x19, x0
   41ff0:	movk	x27, #0x8000, lsl #48
   41ff4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   41ff8:	ldr	x1, [x0, #2736]
   41ffc:	add	x0, x0, #0xab0
   42000:	blr	x1
   42004:	ldr	x8, [x21, #16]
   42008:	mrs	x26, tpidr_el0
   4200c:	cmp	x8, x27
   42010:	b.lt	42578 <mpfr_erfc@@Base+0x5b8>  // b.tstop
   42014:	ldr	w8, [x21, #8]
   42018:	cmp	w8, #0x1
   4201c:	b.lt	42078 <mpfr_erfc@@Base+0xb8>  // b.tstop
   42020:	ldr	x8, [x26, x0]
   42024:	mov	x9, #0xffffffffc0000001    	// #-1073741823
   42028:	cmp	x8, x9
   4202c:	b.lt	42044 <mpfr_erfc@@Base+0x84>  // b.tstop
   42030:	mov	w1, #0x6a92                	// #27282
   42034:	mov	x0, x21
   42038:	mov	x2, xzr
   4203c:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   42040:	tbz	w0, #31, 4205c <mpfr_erfc@@Base+0x9c>
   42044:	mov	w1, #0x2646                	// #9798
   42048:	movk	w1, #0x6a91, lsl #16
   4204c:	mov	x0, x21
   42050:	mov	x2, xzr
   42054:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   42058:	tbnz	w0, #31, 42078 <mpfr_erfc@@Base+0xb8>
   4205c:	cmp	w20, #0x0
   42060:	csinc	w1, w20, wzr, ne  // ne = any
   42064:	mov	w2, #0x1                   	// #1
   42068:	mov	x0, x19
   4206c:	bl	c880 <mpfr_underflow@plt>
   42070:	mov	w22, w0
   42074:	b	4250c <mpfr_erfc@@Base+0x54c>
   42078:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4207c:	ldr	x1, [x0, #2800]
   42080:	add	x0, x0, #0xaf0
   42084:	blr	x1
   42088:	ldr	w28, [x26, x0]
   4208c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42090:	ldr	x1, [x0, #2736]
   42094:	add	x0, x0, #0xab0
   42098:	blr	x1
   4209c:	ldr	x23, [x26, x0]
   420a0:	mov	x8, x0
   420a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   420a8:	ldr	x1, [x0, #2768]
   420ac:	add	x0, x0, #0xad0
   420b0:	blr	x1
   420b4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   420b8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   420bc:	ldr	x24, [x26, x0]
   420c0:	str	x9, [x26, x8]
   420c4:	str	x10, [x26, x0]
   420c8:	ldr	w8, [x21, #8]
   420cc:	tbnz	w8, #31, 422e8 <mpfr_erfc@@Base+0x328>
   420d0:	ldr	x8, [x21, #16]
   420d4:	cmn	x8, #0x2
   420d8:	b.gt	42104 <mpfr_erfc@@Base+0x144>
   420dc:	ldr	x9, [x19]
   420e0:	mvn	x2, x8
   420e4:	add	x8, x9, #0x1
   420e8:	cmp	x8, x2
   420ec:	b.cc	425fc <mpfr_erfc@@Base+0x63c>  // b.lo, b.ul, b.last
   420f0:	mov	w8, wzr
   420f4:	cbz	w8, 42104 <mpfr_erfc@@Base+0x144>
   420f8:	cmp	w8, #0x5
   420fc:	b.ne	42110 <mpfr_erfc@@Base+0x150>  // b.any
   42100:	b	424a0 <mpfr_erfc@@Base+0x4e0>
   42104:	mov	w8, wzr
   42108:	cmp	w8, #0x5
   4210c:	b.eq	424a0 <mpfr_erfc@@Base+0x4e0>  // b.none
   42110:	cbnz	w8, 4250c <mpfr_erfc@@Base+0x54c>
   42114:	ldr	x22, [x19]
   42118:	cmp	x22, #0x1
   4211c:	b.eq	42630 <mpfr_erfc@@Base+0x670>  // b.none
   42120:	b.le	42638 <mpfr_erfc@@Base+0x678>
   42124:	ldr	x8, [x19]
   42128:	mov	w9, #0x40                  	// #64
   4212c:	sub	x8, x8, #0x1
   42130:	clz	x8, x8
   42134:	sub	x8, x9, x8
   42138:	ldr	x9, [x21, #16]
   4213c:	add	x8, x22, x8
   42140:	sub	x0, x29, #0x20
   42144:	lsl	x10, x9, #1
   42148:	cmp	x9, #0x0
   4214c:	csel	x9, x10, xzr, gt
   42150:	add	x8, x8, x9
   42154:	add	x22, x8, #0x3
   42158:	mov	x1, x22
   4215c:	bl	cf60 <mpfr_init2@plt>
   42160:	cmp	w20, #0x0
   42164:	cset	w8, eq  // eq = none
   42168:	mov	w9, #0x40                  	// #64
   4216c:	str	x8, [sp, #8]
   42170:	mov	w8, #0x40                  	// #64
   42174:	str	x8, [sp]
   42178:	ldr	w8, [x21, #8]
   4217c:	cmp	w8, #0x1
   42180:	b.lt	421b4 <mpfr_erfc@@Base+0x1f4>  // b.tstop
   42184:	ldr	x8, [x21, #16]
   42188:	subs	x27, x22, #0x1
   4218c:	lsl	x8, x8, #1
   42190:	sub	x25, x8, #0x2
   42194:	b.eq	422a0 <mpfr_erfc@@Base+0x2e0>  // b.none
   42198:	b.le	422a8 <mpfr_erfc@@Base+0x2e8>
   4219c:	clz	x8, x27
   421a0:	sub	x8, x9, x8
   421a4:	mov	x27, #0x4                   	// #4
   421a8:	cmp	x25, x8
   421ac:	movk	x27, #0x8000, lsl #48
   421b0:	b.ge	42208 <mpfr_erfc@@Base+0x248>  // b.tcont
   421b4:	sub	x0, x29, #0x20
   421b8:	mov	x1, x21
   421bc:	mov	w2, wzr
   421c0:	bl	c680 <mpfr_erf@plt>
   421c4:	ldur	x25, [x29, #-16]
   421c8:	sub	x0, x29, #0x20
   421cc:	sub	x2, x29, #0x20
   421d0:	mov	w1, #0x1                   	// #1
   421d4:	mov	w3, wzr
   421d8:	bl	cf30 <mpfr_ui_sub@plt>
   421dc:	ldur	x8, [x29, #-16]
   421e0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   421e4:	cmp	x8, x9
   421e8:	b.ne	421f8 <mpfr_erfc@@Base+0x238>  // b.any
   421ec:	lsl	x22, x22, #1
   421f0:	mov	x0, x22
   421f4:	b	42218 <mpfr_erfc@@Base+0x258>
   421f8:	sub	x8, x25, x8
   421fc:	bic	x8, x8, x8, asr #63
   42200:	add	x0, x8, #0x1
   42204:	b	42218 <mpfr_erfc@@Base+0x258>
   42208:	sub	x0, x29, #0x20
   4220c:	mov	x1, x21
   42210:	bl	42654 <mpfr_erfc@@Base+0x694>
   42214:	cbz	x0, 42530 <mpfr_erfc@@Base+0x570>
   42218:	ldur	x8, [x29, #-16]
   4221c:	cmp	x8, x27
   42220:	b.lt	42260 <mpfr_erfc@@Base+0x2a0>  // b.tstop
   42224:	ldur	x9, [x29, #-32]
   42228:	ldur	x8, [x29, #-8]
   4222c:	ldr	x10, [x19]
   42230:	sub	x2, x22, x0
   42234:	sub	x11, x9, #0x1
   42238:	add	x9, x9, #0x3e
   4223c:	cmp	x11, #0x0
   42240:	csel	x9, x9, x11, lt  // lt = tstop
   42244:	asr	x9, x9, #6
   42248:	add	x1, x9, #0x1
   4224c:	ldr	x9, [sp, #8]
   42250:	mov	x0, x8
   42254:	add	x3, x10, x9
   42258:	bl	c830 <mpfr_round_p@plt>
   4225c:	cbnz	w0, 42458 <mpfr_erfc@@Base+0x498>
   42260:	ldr	x9, [sp]
   42264:	sub	x8, x27, x22
   42268:	sub	x8, x8, #0x105
   4226c:	cmp	x9, x8
   42270:	mov	x8, x9
   42274:	b.gt	422c8 <mpfr_erfc@@Base+0x308>
   42278:	add	x22, x22, x8
   4227c:	cmp	x22, #0x0
   42280:	cinc	x8, x22, lt  // lt = tstop
   42284:	asr	x8, x8, #1
   42288:	sub	x0, x29, #0x20
   4228c:	mov	x1, x22
   42290:	str	x8, [sp]
   42294:	bl	c330 <mpfr_set_prec@plt>
   42298:	mov	w9, #0x40                  	// #64
   4229c:	b	42178 <mpfr_erfc@@Base+0x1b8>
   422a0:	mov	x8, xzr
   422a4:	b	421a4 <mpfr_erfc@@Base+0x1e4>
   422a8:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   422ac:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   422b0:	mov	w1, #0xee                  	// #238
   422b4:	add	x0, x0, #0xa59
   422b8:	add	x2, x2, #0x985
   422bc:	bl	d030 <mpfr_assert_fail@plt>
   422c0:	mov	w9, #0x40                  	// #64
   422c4:	b	4219c <mpfr_erfc@@Base+0x1dc>
   422c8:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   422cc:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   422d0:	mov	w1, #0x10a                 	// #266
   422d4:	add	x0, x0, #0xa59
   422d8:	add	x2, x2, #0x99a
   422dc:	bl	d030 <mpfr_assert_fail@plt>
   422e0:	ldr	x8, [sp]
   422e4:	b	42278 <mpfr_erfc@@Base+0x2b8>
   422e8:	ldr	x22, [x21, #16]
   422ec:	ldr	x8, [x19]
   422f0:	cmp	x22, #0x2
   422f4:	b.lt	42300 <mpfr_erfc@@Base+0x340>  // b.tstop
   422f8:	cmp	x8, #0x8
   422fc:	b.lt	4240c <mpfr_erfc@@Base+0x44c>  // b.tstop
   42300:	cmp	x22, #0x2
   42304:	b.le	42310 <mpfr_erfc@@Base+0x350>
   42308:	cmp	x8, #0x1a
   4230c:	b.lt	4240c <mpfr_erfc@@Base+0x44c>  // b.tstop
   42310:	cmp	x8, #0x78
   42314:	b.gt	42330 <mpfr_erfc@@Base+0x370>
   42318:	mov	x1, #0xfffffffffffffff7    	// #-9
   4231c:	mov	x0, x21
   42320:	mov	x2, xzr
   42324:	bl	c890 <mpfr_cmp_si_2exp@plt>
   42328:	cmp	w0, #0x1
   4232c:	b.lt	4240c <mpfr_erfc@@Base+0x44c>  // b.tstop
   42330:	mov	x1, #0xffffffffffff956e    	// #-27282
   42334:	mov	x0, x21
   42338:	mov	x2, xzr
   4233c:	bl	c890 <mpfr_cmp_si_2exp@plt>
   42340:	cmp	w0, #0x0
   42344:	b.le	4240c <mpfr_erfc@@Base+0x44c>
   42348:	cmp	x22, #0x3
   4234c:	b.lt	42494 <mpfr_erfc@@Base+0x4d4>  // b.tstop
   42350:	sub	x0, x29, #0x20
   42354:	mov	w1, #0x20                  	// #32
   42358:	bl	cf60 <mpfr_init2@plt>
   4235c:	add	x0, sp, #0x10
   42360:	mov	w1, #0x20                  	// #32
   42364:	bl	cf60 <mpfr_init2@plt>
   42368:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   4236c:	add	x1, x1, #0xa37
   42370:	sub	x0, x29, #0x20
   42374:	bl	c800 <mpfr_set_str_binary@plt>
   42378:	add	x0, sp, #0x10
   4237c:	mov	w2, #0x1                   	// #1
   42380:	mov	x1, x21
   42384:	bl	c8c0 <mpfr_sqr@plt>
   42388:	sub	x0, x29, #0x20
   4238c:	sub	x1, x29, #0x20
   42390:	add	x2, sp, #0x10
   42394:	mov	w3, #0x1                   	// #1
   42398:	bl	c1b0 <mpfr_mul@plt>
   4239c:	add	x0, sp, #0x10
   423a0:	mov	w2, #0x1                   	// #1
   423a4:	mov	x1, x21
   423a8:	bl	c1d0 <mpfr_neg@plt>
   423ac:	add	x0, sp, #0x10
   423b0:	add	x1, sp, #0x10
   423b4:	mov	w2, #0x1                   	// #1
   423b8:	bl	c670 <mpfr_log2@plt>
   423bc:	sub	x0, x29, #0x20
   423c0:	sub	x1, x29, #0x20
   423c4:	add	x2, sp, #0x10
   423c8:	mov	w3, #0x1                   	// #1
   423cc:	bl	c640 <mpfr_add@plt>
   423d0:	ldr	x1, [x19]
   423d4:	add	x0, sp, #0x10
   423d8:	mov	w3, #0x2                   	// #2
   423dc:	mov	x2, xzr
   423e0:	bl	bed0 <mpfr_set_si_2exp@plt>
   423e4:	sub	x0, x29, #0x20
   423e8:	add	x1, sp, #0x10
   423ec:	mov	w2, #0x1                   	// #1
   423f0:	bl	ce90 <mpfr_cmp3@plt>
   423f4:	mov	w22, w0
   423f8:	sub	x0, x29, #0x20
   423fc:	bl	c4f0 <mpfr_clear@plt>
   42400:	add	x0, sp, #0x10
   42404:	bl	c4f0 <mpfr_clear@plt>
   42408:	tbnz	w22, #31, 42494 <mpfr_erfc@@Base+0x4d4>
   4240c:	mov	w1, #0x2                   	// #2
   42410:	mov	x0, x19
   42414:	mov	x2, xzr
   42418:	mov	w3, wzr
   4241c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   42420:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42424:	ldr	x1, [x0, #2800]
   42428:	add	x0, x0, #0xaf0
   4242c:	blr	x1
   42430:	ldr	w8, [x26, x0]
   42434:	orr	w9, w20, #0x2
   42438:	cmp	w9, #0x3
   4243c:	orr	w8, w8, #0x8
   42440:	str	w8, [x26, x0]
   42444:	b.ne	4247c <mpfr_erfc@@Base+0x4bc>  // b.any
   42448:	mov	x0, x19
   4244c:	bl	c230 <mpfr_nextbelow@plt>
   42450:	mov	w22, #0xffffffff            	// #-1
   42454:	b	42480 <mpfr_erfc@@Base+0x4c0>
   42458:	ldur	w3, [x29, #-24]
   4245c:	sub	x1, x29, #0x20
   42460:	mov	x0, x19
   42464:	mov	w2, w20
   42468:	bl	cb70 <mpfr_set4@plt>
   4246c:	mov	w22, w0
   42470:	sub	x0, x29, #0x20
   42474:	bl	c4f0 <mpfr_clear@plt>
   42478:	b	424a0 <mpfr_erfc@@Base+0x4e0>
   4247c:	mov	w22, #0x1                   	// #1
   42480:	mov	w8, #0x5                   	// #5
   42484:	cmp	w8, #0x5
   42488:	b.eq	424a0 <mpfr_erfc@@Base+0x4e0>  // b.none
   4248c:	cbz	w8, 420d0 <mpfr_erfc@@Base+0x110>
   42490:	b	4250c <mpfr_erfc@@Base+0x54c>
   42494:	mov	w8, wzr
   42498:	cmp	w8, #0x5
   4249c:	b.ne	4248c <mpfr_erfc@@Base+0x4cc>  // b.any
   424a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   424a4:	ldr	x1, [x0, #2800]
   424a8:	add	x0, x0, #0xaf0
   424ac:	blr	x1
   424b0:	str	w28, [x26, x0]
   424b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   424b8:	ldr	x1, [x0, #2736]
   424bc:	add	x0, x0, #0xab0
   424c0:	blr	x1
   424c4:	str	x23, [x26, x0]
   424c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   424cc:	ldr	x1, [x0, #2768]
   424d0:	add	x0, x0, #0xad0
   424d4:	blr	x1
   424d8:	str	x24, [x26, x0]
   424dc:	ldr	x8, [x19, #16]
   424e0:	cmp	x8, x24
   424e4:	b.gt	425bc <mpfr_erfc@@Base+0x5fc>
   424e8:	cmp	x8, x23
   424ec:	b.lt	425bc <mpfr_erfc@@Base+0x5fc>  // b.tstop
   424f0:	cbz	w22, 4250c <mpfr_erfc@@Base+0x54c>
   424f4:	orr	w8, w28, #0x8
   424f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   424fc:	ldr	x1, [x0, #2800]
   42500:	add	x0, x0, #0xaf0
   42504:	blr	x1
   42508:	str	w8, [x26, x0]
   4250c:	mov	w0, w22
   42510:	ldp	x20, x19, [sp, #160]
   42514:	ldp	x22, x21, [sp, #144]
   42518:	ldp	x24, x23, [sp, #128]
   4251c:	ldp	x26, x25, [sp, #112]
   42520:	ldp	x28, x27, [sp, #96]
   42524:	ldp	x29, x30, [sp, #80]
   42528:	add	sp, sp, #0xb0
   4252c:	ret
   42530:	sub	x0, x29, #0x20
   42534:	bl	c4f0 <mpfr_clear@plt>
   42538:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4253c:	ldr	x1, [x0, #2800]
   42540:	add	x0, x0, #0xaf0
   42544:	blr	x1
   42548:	str	w28, [x26, x0]
   4254c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42550:	ldr	x1, [x0, #2736]
   42554:	add	x0, x0, #0xab0
   42558:	blr	x1
   4255c:	str	x23, [x26, x0]
   42560:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42564:	ldr	x1, [x0, #2768]
   42568:	add	x0, x0, #0xad0
   4256c:	blr	x1
   42570:	str	x24, [x26, x0]
   42574:	b	4205c <mpfr_erfc@@Base+0x9c>
   42578:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4257c:	cmp	x8, x9
   42580:	b.eq	425d0 <mpfr_erfc@@Base+0x610>  // b.none
   42584:	mov	x9, #0x2                   	// #2
   42588:	movk	x9, #0x8000, lsl #48
   4258c:	cmp	x8, x9
   42590:	b.ne	425e4 <mpfr_erfc@@Base+0x624>  // b.any
   42594:	sub	x8, x27, #0x2
   42598:	str	x8, [x19, #16]
   4259c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   425a0:	ldr	x1, [x0, #2800]
   425a4:	add	x0, x0, #0xaf0
   425a8:	blr	x1
   425ac:	ldr	w8, [x26, x0]
   425b0:	mov	w22, wzr
   425b4:	orr	w8, w8, #0x4
   425b8:	b	42508 <mpfr_erfc@@Base+0x548>
   425bc:	mov	x0, x19
   425c0:	mov	w1, w22
   425c4:	mov	w2, w20
   425c8:	bl	d020 <mpfr_check_range@plt>
   425cc:	b	42070 <mpfr_erfc@@Base+0xb0>
   425d0:	ldr	w8, [x21, #8]
   425d4:	cmp	w8, #0x1
   425d8:	cset	w8, lt  // lt = tstop
   425dc:	lsl	x1, x8, #1
   425e0:	b	425e8 <mpfr_erfc@@Base+0x628>
   425e4:	mov	w1, #0x1                   	// #1
   425e8:	mov	x0, x19
   425ec:	mov	x2, xzr
   425f0:	mov	w3, w20
   425f4:	bl	cac0 <mpfr_set_ui_2exp@plt>
   425f8:	b	42070 <mpfr_erfc@@Base+0xb0>
   425fc:	ldr	w8, [x21, #8]
   42600:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   42604:	ldr	x1, [x1, #3928]
   42608:	mov	x0, x19
   4260c:	lsr	w3, w8, #31
   42610:	mov	w4, w20
   42614:	bl	ca10 <mpfr_round_near_x@plt>
   42618:	cmp	w0, #0x0
   4261c:	mov	w8, #0x5                   	// #5
   42620:	csel	w8, wzr, w8, eq  // eq = none
   42624:	csel	w22, w22, w0, eq  // eq = none
   42628:	cbnz	w0, 420f4 <mpfr_erfc@@Base+0x134>
   4262c:	b	420f0 <mpfr_erfc@@Base+0x130>
   42630:	mov	x8, xzr
   42634:	b	42138 <mpfr_erfc@@Base+0x178>
   42638:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4263c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   42640:	add	x0, x0, #0xa59
   42644:	add	x2, x2, #0xef4
   42648:	mov	w1, #0xe2                  	// #226
   4264c:	bl	d030 <mpfr_assert_fail@plt>
   42650:	b	42124 <mpfr_erfc@@Base+0x164>
   42654:	sub	sp, sp, #0xa0
   42658:	stp	x29, x30, [sp, #96]
   4265c:	stp	x24, x23, [sp, #112]
   42660:	stp	x22, x21, [sp, #128]
   42664:	stp	x20, x19, [sp, #144]
   42668:	ldr	x21, [x0]
   4266c:	add	x29, sp, #0x60
   42670:	mov	x19, x0
   42674:	mov	x20, x1
   42678:	sub	x0, x29, #0x20
   4267c:	mov	x1, x21
   42680:	bl	cf60 <mpfr_init2@plt>
   42684:	add	x0, sp, #0x20
   42688:	mov	x1, x21
   4268c:	bl	cf60 <mpfr_init2@plt>
   42690:	mov	x0, sp
   42694:	mov	w1, #0x1f                  	// #31
   42698:	bl	cf60 <mpfr_init2@plt>
   4269c:	add	x0, sp, #0x20
   426a0:	mov	w3, #0x3                   	// #3
   426a4:	mov	x1, x20
   426a8:	mov	x2, x20
   426ac:	bl	c1b0 <mpfr_mul@plt>
   426b0:	add	x0, sp, #0x20
   426b4:	add	x2, sp, #0x20
   426b8:	mov	w1, #0x1                   	// #1
   426bc:	mov	w3, #0x2                   	// #2
   426c0:	mov	w22, #0x1                   	// #1
   426c4:	bl	c7b0 <mpfr_ui_div@plt>
   426c8:	add	x0, sp, #0x20
   426cc:	add	x1, sp, #0x20
   426d0:	mov	w2, #0x1                   	// #1
   426d4:	mov	w3, #0x2                   	// #2
   426d8:	bl	cde0 <mpfr_div_2ui@plt>
   426dc:	sub	x0, x29, #0x20
   426e0:	mov	w1, #0x1                   	// #1
   426e4:	mov	x2, xzr
   426e8:	mov	w3, wzr
   426ec:	bl	cac0 <mpfr_set_ui_2exp@plt>
   426f0:	ldur	w3, [x29, #-24]
   426f4:	sub	x1, x29, #0x20
   426f8:	mov	x0, x19
   426fc:	mov	w2, wzr
   42700:	bl	cb70 <mpfr_set4@plt>
   42704:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   42708:	mov	w23, #0xe                   	// #14
   4270c:	mov	w24, #0x1                   	// #1
   42710:	str	w22, [sp, #8]
   42714:	str	x8, [sp, #16]
   42718:	b	4272c <mpfr_erfc@@Base+0x76c>
   4271c:	bl	c640 <mpfr_add@plt>
   42720:	add	x24, x24, #0x1
   42724:	add	x23, x23, #0xe
   42728:	add	x22, x22, #0x2
   4272c:	sub	x0, x29, #0x20
   42730:	sub	x1, x29, #0x20
   42734:	mov	w3, #0x2                   	// #2
   42738:	mov	x2, x22
   4273c:	bl	bea0 <mpfr_mul_ui@plt>
   42740:	sub	x0, x29, #0x20
   42744:	sub	x1, x29, #0x20
   42748:	add	x2, sp, #0x20
   4274c:	mov	w3, #0x2                   	// #2
   42750:	bl	c1b0 <mpfr_mul@plt>
   42754:	ldr	x8, [x19, #16]
   42758:	ldur	x9, [x29, #-16]
   4275c:	mov	x0, sp
   42760:	mov	x1, sp
   42764:	mov	w3, #0x2                   	// #2
   42768:	sub	x2, x8, x9
   4276c:	bl	bff0 <mpfr_mul_2si@plt>
   42770:	mov	x0, sp
   42774:	mov	x1, sp
   42778:	mov	w3, #0x2                   	// #2
   4277c:	mov	x2, x23
   42780:	bl	c710 <mpfr_add_ui@plt>
   42784:	ldr	x8, [x19, #16]
   42788:	ldur	x9, [x29, #-16]
   4278c:	mov	x0, sp
   42790:	mov	x1, sp
   42794:	mov	w3, #0x2                   	// #2
   42798:	sub	x2, x8, x9
   4279c:	bl	c8e0 <mpfr_div_2si@plt>
   427a0:	ldur	x8, [x29, #-16]
   427a4:	ldr	x9, [x19, #16]
   427a8:	add	x8, x8, x21
   427ac:	cmp	x8, x9
   427b0:	b.le	427d0 <mpfr_erfc@@Base+0x810>
   427b4:	sub	x2, x29, #0x20
   427b8:	mov	x0, x19
   427bc:	mov	x1, x19
   427c0:	mov	w3, wzr
   427c4:	tbz	w24, #0, 4271c <mpfr_erfc@@Base+0x75c>
   427c8:	bl	bfd0 <mpfr_sub@plt>
   427cc:	b	42720 <mpfr_erfc@@Base+0x760>
   427d0:	mov	x0, sp
   427d4:	mov	x1, sp
   427d8:	mov	w2, #0x1                   	// #1
   427dc:	mov	w3, #0x2                   	// #2
   427e0:	bl	c710 <mpfr_add_ui@plt>
   427e4:	sub	x0, x29, #0x20
   427e8:	mov	w3, #0x2                   	// #2
   427ec:	mov	x1, x20
   427f0:	mov	x2, x20
   427f4:	bl	c1b0 <mpfr_mul@plt>
   427f8:	mov	x0, sp
   427fc:	mov	x1, sp
   42800:	mov	w2, #0x3                   	// #3
   42804:	mov	w3, #0x2                   	// #2
   42808:	bl	cde0 <mpfr_div_2ui@plt>
   4280c:	mov	x0, sp
   42810:	mov	x1, sp
   42814:	sub	x2, x29, #0x20
   42818:	mov	w3, #0x2                   	// #2
   4281c:	bl	c640 <mpfr_add@plt>
   42820:	mov	x0, sp
   42824:	mov	x1, sp
   42828:	mov	w2, #0x3                   	// #3
   4282c:	mov	w3, #0x2                   	// #2
   42830:	bl	c780 <mpfr_mul_2ui@plt>
   42834:	sub	x0, x29, #0x20
   42838:	sub	x1, x29, #0x20
   4283c:	mov	w2, #0x2                   	// #2
   42840:	bl	cc20 <mpfr_exp@plt>
   42844:	sub	x0, x29, #0x20
   42848:	sub	x1, x29, #0x20
   4284c:	mov	x2, x20
   42850:	mov	w3, wzr
   42854:	bl	c1b0 <mpfr_mul@plt>
   42858:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4285c:	ldr	x1, [x0, #2848]
   42860:	add	x0, x0, #0xb20
   42864:	blr	x1
   42868:	mrs	x21, tpidr_el0
   4286c:	add	x1, x21, x0
   42870:	add	x0, sp, #0x20
   42874:	mov	w2, #0x1                   	// #1
   42878:	bl	c840 <mpfr_cache@plt>
   4287c:	add	x0, sp, #0x20
   42880:	add	x1, sp, #0x20
   42884:	mov	w2, wzr
   42888:	bl	ce20 <mpfr_sqrt@plt>
   4288c:	sub	x0, x29, #0x20
   42890:	sub	x1, x29, #0x20
   42894:	add	x2, sp, #0x20
   42898:	mov	w3, wzr
   4289c:	bl	c1b0 <mpfr_mul@plt>
   428a0:	sub	x2, x29, #0x20
   428a4:	mov	x0, x19
   428a8:	mov	x1, x19
   428ac:	mov	w3, wzr
   428b0:	bl	caf0 <mpfr_div@plt>
   428b4:	ldr	x8, [x19, #16]
   428b8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   428bc:	cmp	x8, x9
   428c0:	b.ne	42948 <mpfr_erfc@@Base+0x988>  // b.any
   428c4:	sub	x0, x29, #0x20
   428c8:	mov	w3, #0x3                   	// #3
   428cc:	mov	x1, x20
   428d0:	mov	x2, x20
   428d4:	bl	c1b0 <mpfr_mul@plt>
   428d8:	sub	x0, x29, #0x20
   428dc:	sub	x1, x29, #0x20
   428e0:	mov	w2, #0x2                   	// #2
   428e4:	bl	c1d0 <mpfr_neg@plt>
   428e8:	sub	x0, x29, #0x20
   428ec:	sub	x1, x29, #0x20
   428f0:	mov	w2, #0x2                   	// #2
   428f4:	bl	cc20 <mpfr_exp@plt>
   428f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   428fc:	ldr	x1, [x0, #2848]
   42900:	add	x0, x0, #0xb20
   42904:	blr	x1
   42908:	add	x1, x21, x0
   4290c:	add	x0, sp, #0x20
   42910:	mov	w2, #0x3                   	// #3
   42914:	bl	c840 <mpfr_cache@plt>
   42918:	add	x0, sp, #0x20
   4291c:	add	x1, sp, #0x20
   42920:	mov	w3, #0x3                   	// #3
   42924:	mov	x2, x20
   42928:	bl	c1b0 <mpfr_mul@plt>
   4292c:	sub	x1, x29, #0x20
   42930:	add	x2, sp, #0x20
   42934:	mov	x0, x19
   42938:	mov	w3, wzr
   4293c:	bl	caf0 <mpfr_div@plt>
   42940:	mov	x19, xzr
   42944:	b	42960 <mpfr_erfc@@Base+0x9a0>
   42948:	mov	x0, sp
   4294c:	mov	x1, sp
   42950:	mov	w2, #0x7                   	// #7
   42954:	mov	w3, #0x2                   	// #2
   42958:	bl	c710 <mpfr_add_ui@plt>
   4295c:	ldr	x19, [sp, #16]
   42960:	sub	x0, x29, #0x20
   42964:	bl	c4f0 <mpfr_clear@plt>
   42968:	add	x0, sp, #0x20
   4296c:	bl	c4f0 <mpfr_clear@plt>
   42970:	mov	x0, sp
   42974:	bl	c4f0 <mpfr_clear@plt>
   42978:	mov	x0, x19
   4297c:	ldp	x20, x19, [sp, #144]
   42980:	ldp	x22, x21, [sp, #128]
   42984:	ldp	x24, x23, [sp, #112]
   42988:	ldp	x29, x30, [sp, #96]
   4298c:	add	sp, sp, #0xa0
   42990:	ret

0000000000042994 <mpfr_atan2@@Base>:
   42994:	sub	sp, sp, #0xc0
   42998:	stp	x29, x30, [sp, #96]
   4299c:	stp	x28, x27, [sp, #112]
   429a0:	stp	x26, x25, [sp, #128]
   429a4:	stp	x24, x23, [sp, #144]
   429a8:	stp	x22, x21, [sp, #160]
   429ac:	stp	x20, x19, [sp, #176]
   429b0:	ldr	x8, [x2, #16]
   429b4:	mov	x28, #0x4                   	// #4
   429b8:	movk	x28, #0x8000, lsl #48
   429bc:	mov	w20, w3
   429c0:	mov	x22, x2
   429c4:	mov	x21, x1
   429c8:	cmp	x8, x28
   429cc:	mov	x19, x0
   429d0:	add	x29, sp, #0x60
   429d4:	b.lt	42f18 <mpfr_atan2@@Base+0x584>  // b.tstop
   429d8:	ldr	x9, [x21, #16]
   429dc:	cmp	x9, x28
   429e0:	b.lt	42f18 <mpfr_atan2@@Base+0x584>  // b.tstop
   429e4:	ldr	w8, [x22, #8]
   429e8:	mrs	x25, tpidr_el0
   429ec:	cmp	w8, #0x1
   429f0:	b.lt	42a68 <mpfr_atan2@@Base+0xd4>  // b.tstop
   429f4:	mov	x0, x22
   429f8:	bl	c360 <mpfr_powerof2_raw@plt>
   429fc:	cbz	w0, 42a68 <mpfr_atan2@@Base+0xd4>
   42a00:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42a04:	ldr	x1, [x0, #2800]
   42a08:	add	x0, x0, #0xaf0
   42a0c:	blr	x1
   42a10:	ldr	x1, [x21]
   42a14:	ldr	w23, [x25, x0]
   42a18:	sub	x0, x29, #0x20
   42a1c:	bl	cf60 <mpfr_init2@plt>
   42a20:	ldr	x8, [x22, #16]
   42a24:	sub	x0, x29, #0x20
   42a28:	mov	x1, x21
   42a2c:	mov	w3, wzr
   42a30:	sub	x2, x8, #0x1
   42a34:	bl	c8e0 <mpfr_div_2si@plt>
   42a38:	cbnz	w0, 43280 <mpfr_atan2@@Base+0x8ec>
   42a3c:	sub	x1, x29, #0x20
   42a40:	mov	x0, x19
   42a44:	mov	w2, w20
   42a48:	bl	cb60 <mpfr_atan@plt>
   42a4c:	mov	w24, w0
   42a50:	sub	x0, x29, #0x20
   42a54:	bl	c4f0 <mpfr_clear@plt>
   42a58:	mov	w8, wzr
   42a5c:	str	w24, [sp, #8]
   42a60:	cbnz	w8, 42a68 <mpfr_atan2@@Base+0xd4>
   42a64:	b	42ef4 <mpfr_atan2@@Base+0x560>
   42a68:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42a6c:	ldr	x1, [x0, #2800]
   42a70:	add	x0, x0, #0xaf0
   42a74:	blr	x1
   42a78:	ldr	w8, [x25, x0]
   42a7c:	str	w8, [sp, #28]
   42a80:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42a84:	ldr	x1, [x0, #2736]
   42a88:	add	x0, x0, #0xab0
   42a8c:	blr	x1
   42a90:	ldr	x27, [x25, x0]
   42a94:	mov	x8, x0
   42a98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42a9c:	ldr	x1, [x0, #2768]
   42aa0:	add	x0, x0, #0xad0
   42aa4:	blr	x1
   42aa8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   42aac:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   42ab0:	ldr	x26, [x25, x0]
   42ab4:	str	x9, [x25, x8]
   42ab8:	str	x10, [x25, x0]
   42abc:	ldr	x8, [x19]
   42ac0:	cmp	x8, #0x1
   42ac4:	add	x23, x8, #0x3
   42ac8:	b.eq	42f70 <mpfr_atan2@@Base+0x5dc>  // b.none
   42acc:	b.le	42f78 <mpfr_atan2@@Base+0x5e4>
   42ad0:	ldr	x8, [x19]
   42ad4:	mov	w9, #0x40                  	// #64
   42ad8:	sub	x8, x8, #0x1
   42adc:	clz	x8, x8
   42ae0:	sub	x8, x9, x8
   42ae4:	add	x23, x23, x8
   42ae8:	sub	x0, x29, #0x20
   42aec:	mov	x1, x23
   42af0:	bl	cf60 <mpfr_init2@plt>
   42af4:	ldr	w8, [x22, #8]
   42af8:	cmp	w8, #0x1
   42afc:	b.lt	42cc4 <mpfr_atan2@@Base+0x330>  // b.tstop
   42b00:	mov	w8, #0x40                  	// #64
   42b04:	str	x8, [sp, #16]
   42b08:	b	42b28 <mpfr_atan2@@Base+0x194>
   42b0c:	sub	x1, x29, #0x20
   42b10:	mov	x0, x19
   42b14:	mov	w2, w20
   42b18:	bl	cb60 <mpfr_atan@plt>
   42b1c:	mov	w24, w0
   42b20:	mov	w8, #0xe                   	// #14
   42b24:	cbnz	w8, 42cac <mpfr_atan2@@Base+0x318>
   42b28:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42b2c:	ldr	x1, [x0, #2800]
   42b30:	add	x0, x0, #0xaf0
   42b34:	blr	x1
   42b38:	str	wzr, [x25, x0]
   42b3c:	sub	x0, x29, #0x20
   42b40:	mov	x1, x21
   42b44:	mov	x2, x22
   42b48:	mov	w3, wzr
   42b4c:	bl	caf0 <mpfr_div@plt>
   42b50:	cbz	w0, 42b0c <mpfr_atan2@@Base+0x178>
   42b54:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42b58:	ldr	x1, [x0, #2800]
   42b5c:	add	x0, x0, #0xaf0
   42b60:	blr	x1
   42b64:	ldrb	w8, [x25, x0]
   42b68:	tbnz	w8, #0, 42c08 <mpfr_atan2@@Base+0x274>
   42b6c:	sub	x0, x29, #0x20
   42b70:	sub	x1, x29, #0x20
   42b74:	mov	w2, wzr
   42b78:	bl	cb60 <mpfr_atan@plt>
   42b7c:	ldur	x8, [x29, #-16]
   42b80:	cmp	x8, x28
   42b84:	b.lt	42bc8 <mpfr_atan2@@Base+0x234>  // b.tstop
   42b88:	ldur	x8, [x29, #-32]
   42b8c:	ldr	x9, [x19]
   42b90:	ldur	x0, [x29, #-8]
   42b94:	sub	x2, x23, #0x2
   42b98:	sub	x10, x8, #0x1
   42b9c:	add	x8, x8, #0x3e
   42ba0:	cmp	x10, #0x0
   42ba4:	csel	x8, x8, x10, lt  // lt = tstop
   42ba8:	cmp	w20, #0x0
   42bac:	asr	x8, x8, #6
   42bb0:	add	x1, x8, #0x1
   42bb4:	cinc	x3, x9, eq  // eq = none
   42bb8:	bl	c830 <mpfr_round_p@plt>
   42bbc:	cbz	w0, 42bc8 <mpfr_atan2@@Base+0x234>
   42bc0:	mov	w8, #0x8                   	// #8
   42bc4:	b	42b24 <mpfr_atan2@@Base+0x190>
   42bc8:	ldr	x9, [sp, #16]
   42bcc:	sub	x8, x28, x23
   42bd0:	sub	x8, x8, #0x105
   42bd4:	cmp	x9, x8
   42bd8:	mov	x8, x9
   42bdc:	b.gt	42c8c <mpfr_atan2@@Base+0x2f8>
   42be0:	add	x23, x23, x8
   42be4:	cmp	x23, #0x0
   42be8:	cinc	x8, x23, lt  // lt = tstop
   42bec:	asr	x8, x8, #1
   42bf0:	sub	x0, x29, #0x20
   42bf4:	mov	x1, x23
   42bf8:	str	x8, [sp, #16]
   42bfc:	bl	c330 <mpfr_set_prec@plt>
   42c00:	mov	w8, wzr
   42c04:	b	42b24 <mpfr_atan2@@Base+0x190>
   42c08:	ldur	w9, [x29, #-24]
   42c0c:	ldur	x8, [x29, #-16]
   42c10:	sub	x0, x29, #0x20
   42c14:	str	w9, [sp, #8]
   42c18:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   42c1c:	cmp	x8, x9
   42c20:	cset	w8, eq  // eq = none
   42c24:	cmp	w20, #0x0
   42c28:	csel	w20, w8, w20, eq  // eq = none
   42c2c:	bl	c4f0 <mpfr_clear@plt>
   42c30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42c34:	ldr	x1, [x0, #2800]
   42c38:	add	x0, x0, #0xaf0
   42c3c:	blr	x1
   42c40:	ldr	w8, [sp, #28]
   42c44:	str	w8, [x25, x0]
   42c48:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42c4c:	ldr	x1, [x0, #2736]
   42c50:	add	x0, x0, #0xab0
   42c54:	blr	x1
   42c58:	str	x27, [x25, x0]
   42c5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42c60:	ldr	x1, [x0, #2768]
   42c64:	add	x0, x0, #0xad0
   42c68:	blr	x1
   42c6c:	ldr	w2, [sp, #8]
   42c70:	str	x26, [x25, x0]
   42c74:	mov	x0, x19
   42c78:	mov	w1, w20
   42c7c:	bl	c880 <mpfr_underflow@plt>
   42c80:	str	w0, [sp, #8]
   42c84:	mov	w8, #0x1                   	// #1
   42c88:	b	42b24 <mpfr_atan2@@Base+0x190>
   42c8c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   42c90:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   42c94:	mov	w1, #0xef                  	// #239
   42c98:	add	x0, x0, #0xa60
   42c9c:	add	x2, x2, #0x99a
   42ca0:	bl	d030 <mpfr_assert_fail@plt>
   42ca4:	ldr	x8, [sp, #16]
   42ca8:	b	42be0 <mpfr_atan2@@Base+0x24c>
   42cac:	cmp	w8, #0x8
   42cb0:	b.eq	42e64 <mpfr_atan2@@Base+0x4d0>  // b.none
   42cb4:	cmp	w8, #0xe
   42cb8:	b.eq	42e7c <mpfr_atan2@@Base+0x4e8>  // b.none
   42cbc:	ldr	w24, [sp, #8]
   42cc0:	b	42ef4 <mpfr_atan2@@Base+0x560>
   42cc4:	add	x0, sp, #0x20
   42cc8:	mov	x1, x23
   42ccc:	str	x27, [sp, #16]
   42cd0:	bl	cf60 <mpfr_init2@plt>
   42cd4:	cmp	w20, #0x0
   42cd8:	mov	w8, #0x40                  	// #64
   42cdc:	str	x8, [sp]
   42ce0:	mov	w24, #0x1                   	// #1
   42ce4:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   42ce8:	cset	w8, eq  // eq = none
   42cec:	str	x8, [sp, #8]
   42cf0:	sub	x0, x29, #0x20
   42cf4:	mov	x1, x21
   42cf8:	mov	x2, x22
   42cfc:	mov	w3, wzr
   42d00:	bl	caf0 <mpfr_div@plt>
   42d04:	sub	x0, x29, #0x20
   42d08:	sub	x1, x29, #0x20
   42d0c:	mov	w2, wzr
   42d10:	stur	w24, [x29, #-24]
   42d14:	bl	cb60 <mpfr_atan@plt>
   42d18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42d1c:	ldr	x1, [x0, #2848]
   42d20:	add	x0, x0, #0xb20
   42d24:	blr	x1
   42d28:	add	x1, x25, x0
   42d2c:	add	x0, sp, #0x20
   42d30:	mov	w2, wzr
   42d34:	bl	c840 <mpfr_cache@plt>
   42d38:	ldur	x8, [x29, #-16]
   42d3c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42d40:	ldr	x1, [x0, #2736]
   42d44:	add	x0, x0, #0xab0
   42d48:	blr	x1
   42d4c:	ldr	x9, [x25, x0]
   42d50:	cmp	x8, x27
   42d54:	sub	x0, x29, #0x20
   42d58:	add	x1, sp, #0x20
   42d5c:	sub	x9, x9, #0x1
   42d60:	sub	x2, x29, #0x20
   42d64:	mov	w3, wzr
   42d68:	csel	x24, x9, x8, eq  // eq = none
   42d6c:	bl	bfd0 <mpfr_sub@plt>
   42d70:	ldr	w8, [x21, #8]
   42d74:	tbz	w8, #31, 42d84 <mpfr_atan2@@Base+0x3f0>
   42d78:	ldur	w8, [x29, #-24]
   42d7c:	neg	w8, w8
   42d80:	stur	w8, [x29, #-24]
   42d84:	ldur	x9, [x29, #-16]
   42d88:	ldr	x8, [sp, #48]
   42d8c:	ldr	x27, [sp, #16]
   42d90:	mvn	x10, x9
   42d94:	sub	x11, x24, x9
   42d98:	add	x8, x8, x10
   42d9c:	add	x10, x11, #0x1
   42da0:	cmp	x8, x10
   42da4:	csinc	x8, x8, x11, gt
   42da8:	cmp	x9, x28
   42dac:	b.lt	42df4 <mpfr_atan2@@Base+0x460>  // b.tstop
   42db0:	ldur	x9, [x29, #-32]
   42db4:	cmp	x8, #0x0
   42db8:	csinv	x8, x8, xzr, ge  // ge = tcont
   42dbc:	sub	x8, x23, x8
   42dc0:	sub	x2, x8, #0x2
   42dc4:	sub	x8, x9, #0x1
   42dc8:	add	x9, x9, #0x3e
   42dcc:	cmp	x8, #0x0
   42dd0:	csel	x8, x9, x8, lt  // lt = tstop
   42dd4:	asr	x8, x8, #6
   42dd8:	ldr	x10, [x19]
   42ddc:	add	x1, x8, #0x1
   42de0:	ldr	x8, [sp, #8]
   42de4:	ldur	x0, [x29, #-8]
   42de8:	add	x3, x10, x8
   42dec:	bl	c830 <mpfr_round_p@plt>
   42df0:	cbnz	w0, 42e5c <mpfr_atan2@@Base+0x4c8>
   42df4:	ldr	x24, [sp]
   42df8:	sub	x8, x28, x23
   42dfc:	sub	x8, x8, #0x105
   42e00:	cmp	x24, x8
   42e04:	b.gt	42e40 <mpfr_atan2@@Base+0x4ac>
   42e08:	add	x23, x23, x24
   42e0c:	cmp	x23, #0x0
   42e10:	cinc	x8, x23, lt  // lt = tstop
   42e14:	asr	x8, x8, #1
   42e18:	sub	x0, x29, #0x20
   42e1c:	mov	x1, x23
   42e20:	str	x8, [sp]
   42e24:	bl	c330 <mpfr_set_prec@plt>
   42e28:	add	x0, sp, #0x20
   42e2c:	mov	x1, x23
   42e30:	bl	c330 <mpfr_set_prec@plt>
   42e34:	mov	w24, #0x1                   	// #1
   42e38:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   42e3c:	b	42cf0 <mpfr_atan2@@Base+0x35c>
   42e40:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   42e44:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   42e48:	mov	w1, #0x10b                 	// #267
   42e4c:	add	x0, x0, #0xa60
   42e50:	add	x2, x2, #0x99a
   42e54:	bl	d030 <mpfr_assert_fail@plt>
   42e58:	b	42e08 <mpfr_atan2@@Base+0x474>
   42e5c:	add	x0, sp, #0x20
   42e60:	bl	c4f0 <mpfr_clear@plt>
   42e64:	ldur	w3, [x29, #-24]
   42e68:	sub	x1, x29, #0x20
   42e6c:	mov	x0, x19
   42e70:	mov	w2, w20
   42e74:	bl	cb70 <mpfr_set4@plt>
   42e78:	mov	w24, w0
   42e7c:	sub	x0, x29, #0x20
   42e80:	bl	c4f0 <mpfr_clear@plt>
   42e84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42e88:	ldr	x1, [x0, #2800]
   42e8c:	add	x0, x0, #0xaf0
   42e90:	blr	x1
   42e94:	ldr	w9, [sp, #28]
   42e98:	str	w9, [x25, x0]
   42e9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42ea0:	ldr	x1, [x0, #2736]
   42ea4:	add	x0, x0, #0xab0
   42ea8:	blr	x1
   42eac:	str	x27, [x25, x0]
   42eb0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42eb4:	ldr	x1, [x0, #2768]
   42eb8:	add	x0, x0, #0xad0
   42ebc:	blr	x1
   42ec0:	str	x26, [x25, x0]
   42ec4:	ldr	x8, [x19, #16]
   42ec8:	cmp	x8, x26
   42ecc:	b.gt	43268 <mpfr_atan2@@Base+0x8d4>
   42ed0:	cmp	x8, x27
   42ed4:	b.lt	43268 <mpfr_atan2@@Base+0x8d4>  // b.tstop
   42ed8:	cbz	w24, 42ef4 <mpfr_atan2@@Base+0x560>
   42edc:	orr	w8, w9, #0x8
   42ee0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42ee4:	ldr	x1, [x0, #2800]
   42ee8:	add	x0, x0, #0xaf0
   42eec:	blr	x1
   42ef0:	str	w8, [x25, x0]
   42ef4:	mov	w0, w24
   42ef8:	ldp	x20, x19, [sp, #176]
   42efc:	ldp	x22, x21, [sp, #160]
   42f00:	ldp	x24, x23, [sp, #144]
   42f04:	ldp	x26, x25, [sp, #128]
   42f08:	ldp	x28, x27, [sp, #112]
   42f0c:	ldp	x29, x30, [sp, #96]
   42f10:	add	sp, sp, #0xc0
   42f14:	ret
   42f18:	sub	x10, x28, #0x2
   42f1c:	cmp	x8, x10
   42f20:	b.eq	42f44 <mpfr_atan2@@Base+0x5b0>  // b.none
   42f24:	ldr	x9, [x21, #16]
   42f28:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   42f2c:	cmp	x9, x11
   42f30:	b.eq	42fcc <mpfr_atan2@@Base+0x638>  // b.none
   42f34:	mov	x11, #0x2                   	// #2
   42f38:	movk	x11, #0x8000, lsl #48
   42f3c:	cmp	x9, x11
   42f40:	b.ne	42f94 <mpfr_atan2@@Base+0x600>  // b.any
   42f44:	str	x10, [x19, #16]
   42f48:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   42f4c:	ldr	x1, [x0, #2800]
   42f50:	add	x0, x0, #0xaf0
   42f54:	blr	x1
   42f58:	mrs	x8, tpidr_el0
   42f5c:	ldr	w9, [x8, x0]
   42f60:	mov	w24, wzr
   42f64:	orr	w9, w9, #0x4
   42f68:	str	w9, [x8, x0]
   42f6c:	b	42ef4 <mpfr_atan2@@Base+0x560>
   42f70:	mov	x8, xzr
   42f74:	b	42ae4 <mpfr_atan2@@Base+0x150>
   42f78:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   42f7c:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   42f80:	add	x0, x0, #0xa60
   42f84:	add	x2, x2, #0xab0
   42f88:	mov	w1, #0xb7                  	// #183
   42f8c:	bl	d030 <mpfr_assert_fail@plt>
   42f90:	b	42ad0 <mpfr_atan2@@Base+0x13c>
   42f94:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   42f98:	cmp	x8, x10
   42f9c:	b.eq	42fec <mpfr_atan2@@Base+0x658>  // b.none
   42fa0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   42fa4:	cmp	x9, x10
   42fa8:	b.ne	42fcc <mpfr_atan2@@Base+0x638>  // b.any
   42fac:	cmp	x8, x10
   42fb0:	b.ne	42fec <mpfr_atan2@@Base+0x658>  // b.any
   42fb4:	ldr	w8, [x22, #8]
   42fb8:	cmp	w8, #0x1
   42fbc:	b.lt	43084 <mpfr_atan2@@Base+0x6f0>  // b.tstop
   42fc0:	ldr	w8, [x21, #8]
   42fc4:	mov	w1, #0x2                   	// #2
   42fc8:	b	42ff4 <mpfr_atan2@@Base+0x660>
   42fcc:	ldr	w8, [x22, #8]
   42fd0:	tbnz	w8, #31, 43008 <mpfr_atan2@@Base+0x674>
   42fd4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   42fd8:	str	x8, [x19, #16]
   42fdc:	ldr	w8, [x21, #8]
   42fe0:	mov	w24, wzr
   42fe4:	str	w8, [x19, #8]
   42fe8:	b	42ef4 <mpfr_atan2@@Base+0x560>
   42fec:	ldr	w8, [x21, #8]
   42ff0:	mov	w1, #0x1                   	// #1
   42ff4:	lsr	w2, w8, #31
   42ff8:	mov	x0, x19
   42ffc:	mov	w3, w20
   43000:	bl	432ac <mpfr_atan2@@Base+0x918>
   43004:	b	43278 <mpfr_atan2@@Base+0x8e4>
   43008:	ldr	w8, [x21, #8]
   4300c:	tbnz	w8, #31, 43038 <mpfr_atan2@@Base+0x6a4>
   43010:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43014:	ldr	x1, [x0, #2848]
   43018:	add	x0, x0, #0xb20
   4301c:	blr	x1
   43020:	mrs	x8, tpidr_el0
   43024:	add	x1, x8, x0
   43028:	mov	x0, x19
   4302c:	mov	w2, w20
   43030:	bl	c840 <mpfr_cache@plt>
   43034:	b	43278 <mpfr_atan2@@Base+0x8e4>
   43038:	cmp	w20, #0x3
   4303c:	mov	w8, #0x2                   	// #2
   43040:	csel	w8, w8, w20, eq  // eq = none
   43044:	cmp	w20, #0x2
   43048:	mov	w9, #0x3                   	// #3
   4304c:	csel	w2, w9, w8, eq  // eq = none
   43050:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43054:	ldr	x1, [x0, #2848]
   43058:	add	x0, x0, #0xb20
   4305c:	blr	x1
   43060:	mrs	x8, tpidr_el0
   43064:	add	x1, x8, x0
   43068:	mov	x0, x19
   4306c:	bl	c840 <mpfr_cache@plt>
   43070:	ldr	w8, [x19, #8]
   43074:	neg	w24, w0
   43078:	neg	w8, w8
   4307c:	str	w8, [x19, #8]
   43080:	b	42ef4 <mpfr_atan2@@Base+0x560>
   43084:	ldr	x8, [x19]
   43088:	add	x22, x8, #0xa
   4308c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43090:	ldr	x1, [x0, #2800]
   43094:	add	x0, x0, #0xaf0
   43098:	blr	x1
   4309c:	mrs	x25, tpidr_el0
   430a0:	ldr	w8, [x25, x0]
   430a4:	str	w8, [sp, #28]
   430a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   430ac:	ldr	x1, [x0, #2736]
   430b0:	add	x0, x0, #0xab0
   430b4:	blr	x1
   430b8:	ldr	x27, [x25, x0]
   430bc:	mov	x8, x0
   430c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   430c4:	ldr	x1, [x0, #2768]
   430c8:	add	x0, x0, #0xad0
   430cc:	blr	x1
   430d0:	ldr	x23, [x25, x0]
   430d4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   430d8:	str	x9, [x25, x8]
   430dc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   430e0:	str	x8, [x25, x0]
   430e4:	sub	x0, x29, #0x20
   430e8:	mov	x1, x22
   430ec:	bl	cf60 <mpfr_init2@plt>
   430f0:	cmp	w20, #0x0
   430f4:	mov	w24, #0x40                  	// #64
   430f8:	cset	w26, eq  // eq = none
   430fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43100:	ldr	x1, [x0, #2848]
   43104:	add	x0, x0, #0xb20
   43108:	blr	x1
   4310c:	add	x1, x25, x0
   43110:	sub	x0, x29, #0x20
   43114:	mov	w2, wzr
   43118:	bl	c840 <mpfr_cache@plt>
   4311c:	sub	x0, x29, #0x20
   43120:	sub	x1, x29, #0x20
   43124:	mov	w2, #0x3                   	// #3
   43128:	mov	w3, wzr
   4312c:	bl	bea0 <mpfr_mul_ui@plt>
   43130:	sub	x0, x29, #0x20
   43134:	sub	x1, x29, #0x20
   43138:	mov	w2, #0x2                   	// #2
   4313c:	mov	w3, wzr
   43140:	bl	cde0 <mpfr_div_2ui@plt>
   43144:	ldur	x8, [x29, #-16]
   43148:	cmp	x8, x28
   4314c:	b.lt	43184 <mpfr_atan2@@Base+0x7f0>  // b.tstop
   43150:	ldur	x8, [x29, #-32]
   43154:	ldr	x9, [x19]
   43158:	ldur	x0, [x29, #-8]
   4315c:	sub	x10, x8, #0x1
   43160:	add	x11, x8, #0x3e
   43164:	cmp	x10, #0x0
   43168:	sub	x2, x8, #0x2
   4316c:	csel	x8, x11, x10, lt  // lt = tstop
   43170:	asr	x8, x8, #6
   43174:	add	x1, x8, #0x1
   43178:	add	x3, x9, x26
   4317c:	bl	c830 <mpfr_round_p@plt>
   43180:	cbnz	w0, 431d0 <mpfr_atan2@@Base+0x83c>
   43184:	sub	x8, x28, x22
   43188:	sub	x8, x8, #0x105
   4318c:	cmp	x24, x8
   43190:	b.gt	431b4 <mpfr_atan2@@Base+0x820>
   43194:	add	x22, x22, x24
   43198:	cmp	x22, #0x0
   4319c:	cinc	x8, x22, lt  // lt = tstop
   431a0:	sub	x0, x29, #0x20
   431a4:	mov	x1, x22
   431a8:	asr	x24, x8, #1
   431ac:	bl	c330 <mpfr_set_prec@plt>
   431b0:	b	430fc <mpfr_atan2@@Base+0x768>
   431b4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   431b8:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   431bc:	mov	w1, #0x88                  	// #136
   431c0:	add	x0, x0, #0xa60
   431c4:	add	x2, x2, #0xa68
   431c8:	bl	d030 <mpfr_assert_fail@plt>
   431cc:	b	43194 <mpfr_atan2@@Base+0x800>
   431d0:	ldr	w8, [x21, #8]
   431d4:	tbz	w8, #31, 431e4 <mpfr_atan2@@Base+0x850>
   431d8:	ldur	w8, [x29, #-24]
   431dc:	neg	w8, w8
   431e0:	stur	w8, [x29, #-24]
   431e4:	ldur	w3, [x29, #-24]
   431e8:	sub	x1, x29, #0x20
   431ec:	mov	x0, x19
   431f0:	mov	w2, w20
   431f4:	bl	cb70 <mpfr_set4@plt>
   431f8:	mov	w24, w0
   431fc:	sub	x0, x29, #0x20
   43200:	bl	c4f0 <mpfr_clear@plt>
   43204:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43208:	ldr	x1, [x0, #2800]
   4320c:	add	x0, x0, #0xaf0
   43210:	blr	x1
   43214:	ldr	w8, [sp, #28]
   43218:	str	w8, [x25, x0]
   4321c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43220:	ldr	x1, [x0, #2736]
   43224:	add	x0, x0, #0xab0
   43228:	blr	x1
   4322c:	str	x27, [x25, x0]
   43230:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43234:	ldr	x1, [x0, #2768]
   43238:	add	x0, x0, #0xad0
   4323c:	blr	x1
   43240:	str	x23, [x25, x0]
   43244:	ldr	x8, [x19, #16]
   43248:	cmp	x8, x23
   4324c:	b.gt	43268 <mpfr_atan2@@Base+0x8d4>
   43250:	cmp	x8, x27
   43254:	b.lt	43268 <mpfr_atan2@@Base+0x8d4>  // b.tstop
   43258:	cbz	w24, 42ef4 <mpfr_atan2@@Base+0x560>
   4325c:	ldr	w8, [sp, #28]
   43260:	orr	w8, w8, #0x8
   43264:	b	42ee0 <mpfr_atan2@@Base+0x54c>
   43268:	mov	x0, x19
   4326c:	mov	w1, w24
   43270:	mov	w2, w20
   43274:	bl	d020 <mpfr_check_range@plt>
   43278:	mov	w24, w0
   4327c:	b	42ef4 <mpfr_atan2@@Base+0x560>
   43280:	sub	x0, x29, #0x20
   43284:	bl	c4f0 <mpfr_clear@plt>
   43288:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4328c:	ldr	x1, [x0, #2800]
   43290:	add	x0, x0, #0xaf0
   43294:	blr	x1
   43298:	mov	w8, #0x1                   	// #1
   4329c:	str	w23, [x25, x0]
   432a0:	str	w24, [sp, #8]
   432a4:	cbnz	w8, 42a68 <mpfr_atan2@@Base+0xd4>
   432a8:	b	42ef4 <mpfr_atan2@@Base+0x560>
   432ac:	stp	x29, x30, [sp, #-80]!
   432b0:	stp	x26, x25, [sp, #16]
   432b4:	stp	x24, x23, [sp, #32]
   432b8:	stp	x22, x21, [sp, #48]
   432bc:	stp	x20, x19, [sp, #64]
   432c0:	mov	x29, sp
   432c4:	mov	w19, w3
   432c8:	mov	w21, w1
   432cc:	mov	x20, x0
   432d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   432d4:	ldr	x1, [x0, #2800]
   432d8:	add	x0, x0, #0xaf0
   432dc:	blr	x1
   432e0:	mrs	x23, tpidr_el0
   432e4:	ldr	w24, [x23, x0]
   432e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   432ec:	ldr	x1, [x0, #2736]
   432f0:	add	x0, x0, #0xab0
   432f4:	blr	x1
   432f8:	ldr	x25, [x23, x0]
   432fc:	mov	x8, x0
   43300:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43304:	ldr	x1, [x0, #2768]
   43308:	add	x0, x0, #0xad0
   4330c:	blr	x1
   43310:	ldr	x26, [x23, x0]
   43314:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   43318:	str	x9, [x23, x8]
   4331c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   43320:	str	x8, [x23, x0]
   43324:	cbz	w2, 43370 <mpfr_atan2@@Base+0x9dc>
   43328:	cmp	w19, #0x3
   4332c:	mov	w8, #0x2                   	// #2
   43330:	csel	w8, w8, w19, eq  // eq = none
   43334:	cmp	w19, #0x2
   43338:	mov	w9, #0x3                   	// #3
   4333c:	csel	w2, w9, w8, eq  // eq = none
   43340:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43344:	ldr	x1, [x0, #2848]
   43348:	add	x0, x0, #0xb20
   4334c:	blr	x1
   43350:	add	x1, x23, x0
   43354:	mov	x0, x20
   43358:	bl	c840 <mpfr_cache@plt>
   4335c:	ldr	w8, [x20, #8]
   43360:	neg	w22, w0
   43364:	neg	w8, w8
   43368:	str	w8, [x20, #8]
   4336c:	b	43394 <mpfr_atan2@@Base+0xa00>
   43370:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43374:	ldr	x1, [x0, #2848]
   43378:	add	x0, x0, #0xb20
   4337c:	blr	x1
   43380:	add	x1, x23, x0
   43384:	mov	x0, x20
   43388:	mov	w2, w19
   4338c:	bl	c840 <mpfr_cache@plt>
   43390:	mov	w22, w0
   43394:	sxtw	x2, w21
   43398:	mov	x0, x20
   4339c:	mov	x1, x20
   433a0:	mov	w3, w19
   433a4:	bl	cde0 <mpfr_div_2ui@plt>
   433a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   433ac:	ldr	x1, [x0, #2800]
   433b0:	add	x0, x0, #0xaf0
   433b4:	blr	x1
   433b8:	str	w24, [x23, x0]
   433bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   433c0:	ldr	x1, [x0, #2736]
   433c4:	add	x0, x0, #0xab0
   433c8:	blr	x1
   433cc:	str	x25, [x23, x0]
   433d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   433d4:	ldr	x1, [x0, #2768]
   433d8:	add	x0, x0, #0xad0
   433dc:	blr	x1
   433e0:	str	x26, [x23, x0]
   433e4:	ldr	x8, [x20, #16]
   433e8:	cmp	x8, x26
   433ec:	b.gt	43430 <mpfr_atan2@@Base+0xa9c>
   433f0:	cmp	x8, x25
   433f4:	b.lt	43430 <mpfr_atan2@@Base+0xa9c>  // b.tstop
   433f8:	cbz	w22, 43414 <mpfr_atan2@@Base+0xa80>
   433fc:	orr	w8, w24, #0x8
   43400:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43404:	ldr	x1, [x0, #2800]
   43408:	add	x0, x0, #0xaf0
   4340c:	blr	x1
   43410:	str	w8, [x23, x0]
   43414:	mov	w0, w22
   43418:	ldp	x20, x19, [sp, #64]
   4341c:	ldp	x22, x21, [sp, #48]
   43420:	ldp	x24, x23, [sp, #32]
   43424:	ldp	x26, x25, [sp, #16]
   43428:	ldp	x29, x30, [sp], #80
   4342c:	ret
   43430:	mov	x0, x20
   43434:	mov	w1, w22
   43438:	mov	w2, w19
   4343c:	bl	d020 <mpfr_check_range@plt>
   43440:	mov	w22, w0
   43444:	b	43414 <mpfr_atan2@@Base+0xa80>

0000000000043448 <mpfr_subnormalize@@Base>:
   43448:	sub	sp, sp, #0x70
   4344c:	stp	x29, x30, [sp, #32]
   43450:	stp	x24, x23, [sp, #64]
   43454:	stp	x22, x21, [sp, #80]
   43458:	stp	x20, x19, [sp, #96]
   4345c:	ldr	x8, [x0, #16]
   43460:	mov	x9, #0x4                   	// #4
   43464:	movk	x9, #0x8000, lsl #48
   43468:	str	x25, [sp, #48]
   4346c:	mov	w20, w1
   43470:	cmp	x8, x9
   43474:	mrs	x24, tpidr_el0
   43478:	add	x29, sp, #0x20
   4347c:	b.lt	434b0 <mpfr_subnormalize@@Base+0x68>  // b.tstop
   43480:	mov	w21, w2
   43484:	mov	x19, x0
   43488:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4348c:	ldr	x1, [x0, #2736]
   43490:	add	x0, x0, #0xab0
   43494:	blr	x1
   43498:	ldr	x9, [x24, x0]
   4349c:	ldr	x10, [x19]
   434a0:	add	x10, x9, x10
   434a4:	sub	x10, x10, #0x1
   434a8:	cmp	x8, x10
   434ac:	b.lt	434f0 <mpfr_subnormalize@@Base+0xa8>  // b.tstop
   434b0:	cbz	w20, 434d0 <mpfr_subnormalize@@Base+0x88>
   434b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   434b8:	ldr	x1, [x0, #2800]
   434bc:	add	x0, x0, #0xaf0
   434c0:	blr	x1
   434c4:	ldr	w8, [x24, x0]
   434c8:	orr	w8, w8, #0x8
   434cc:	str	w8, [x24, x0]
   434d0:	mov	w0, w20
   434d4:	ldp	x20, x19, [sp, #96]
   434d8:	ldp	x22, x21, [sp, #80]
   434dc:	ldp	x24, x23, [sp, #64]
   434e0:	ldr	x25, [sp, #48]
   434e4:	ldp	x29, x30, [sp, #32]
   434e8:	add	sp, sp, #0x70
   434ec:	ret
   434f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   434f4:	ldr	x1, [x0, #2800]
   434f8:	add	x0, x0, #0xaf0
   434fc:	blr	x1
   43500:	ldr	w10, [x24, x0]
   43504:	subs	x8, x8, x9
   43508:	orr	w10, w10, #0x1
   4350c:	str	w10, [x24, x0]
   43510:	ldr	w25, [x19, #8]
   43514:	b.ne	4355c <mpfr_subnormalize@@Base+0x114>  // b.any
   43518:	mov	x0, x19
   4351c:	bl	c360 <mpfr_powerof2_raw@plt>
   43520:	cbnz	w0, 434b0 <mpfr_subnormalize@@Base+0x68>
   43524:	cmp	w21, #0x1
   43528:	b.eq	43828 <mpfr_subnormalize@@Base+0x3e0>  // b.none
   4352c:	cbnz	w21, 4367c <mpfr_subnormalize@@Base+0x234>
   43530:	ldr	x8, [x19]
   43534:	sub	x10, x8, #0x1
   43538:	add	x9, x8, #0x3e
   4353c:	ldr	x8, [x19, #24]
   43540:	cmp	x10, #0x0
   43544:	csel	x10, x9, x10, lt  // lt = tstop
   43548:	asr	x10, x10, #6
   4354c:	ldr	x11, [x8, x10, lsl #3]
   43550:	tbnz	x11, #62, 437ac <mpfr_subnormalize@@Base+0x364>
   43554:	mov	w8, #0x4                   	// #4
   43558:	b	437f0 <mpfr_subnormalize@@Base+0x3a8>
   4355c:	add	x1, x8, #0x1
   43560:	mov	x0, sp
   43564:	bl	cf60 <mpfr_init2@plt>
   43568:	ldr	x9, [x19, #16]
   4356c:	str	w25, [sp, #8]
   43570:	ldr	x8, [sp]
   43574:	ldr	x22, [sp, #24]
   43578:	str	x9, [sp, #16]
   4357c:	ldr	x9, [x19]
   43580:	sub	x10, x8, #0x1
   43584:	add	x11, x8, #0x3e
   43588:	sub	x12, x9, #0x1
   4358c:	add	x13, x9, #0x3e
   43590:	cmp	x12, #0x0
   43594:	csel	x12, x13, x12, lt  // lt = tstop
   43598:	cmp	x10, #0x0
   4359c:	csel	x10, x11, x10, lt  // lt = tstop
   435a0:	asr	x12, x12, #6
   435a4:	asr	x10, x10, #6
   435a8:	add	x13, x12, #0x1
   435ac:	cmp	x8, x9
   435b0:	add	x2, x10, #0x1
   435b4:	b.ge	43864 <mpfr_subnormalize@@Base+0x41c>  // b.tcont
   435b8:	ldr	x11, [x19, #24]
   435bc:	neg	w8, w8
   435c0:	mvn	x14, x10
   435c4:	ands	x8, x8, #0x3f
   435c8:	add	x9, x11, x13, lsl #3
   435cc:	add	x1, x9, x14, lsl #3
   435d0:	b.eq	4389c <mpfr_subnormalize@@Base+0x454>  // b.none
   435d4:	ldr	x9, [x1]
   435d8:	sub	x8, x8, #0x1
   435dc:	mov	w14, #0x1                   	// #1
   435e0:	lsl	x14, x14, x8
   435e4:	sub	x15, x14, #0x1
   435e8:	and	x8, x9, x14
   435ec:	and	x9, x9, x15
   435f0:	cbz	w21, 435f8 <mpfr_subnormalize@@Base+0x1b0>
   435f4:	cbnz	x8, 43620 <mpfr_subnormalize@@Base+0x1d8>
   435f8:	cbnz	x9, 43620 <mpfr_subnormalize@@Base+0x1d8>
   435fc:	sub	x13, x13, x2
   43600:	cbz	x13, 43620 <mpfr_subnormalize@@Base+0x1d8>
   43604:	mvn	x9, x10
   43608:	add	x12, x9, x12
   4360c:	ldr	x9, [x11, x12, lsl #3]
   43610:	subs	x12, x12, #0x1
   43614:	cset	w13, cs  // cs = hs, nlast
   43618:	cbnz	x9, 43620 <mpfr_subnormalize@@Base+0x1d8>
   4361c:	tbnz	w13, #0, 4360c <mpfr_subnormalize@@Base+0x1c4>
   43620:	lsl	x23, x14, #1
   43624:	cmp	w21, #0x5
   43628:	b.eq	436c4 <mpfr_subnormalize@@Base+0x27c>  // b.none
   4362c:	cmp	w21, #0x1
   43630:	str	x10, [x29, #24]
   43634:	b.eq	43664 <mpfr_subnormalize@@Base+0x21c>  // b.none
   43638:	cbnz	w21, 43658 <mpfr_subnormalize@@Base+0x210>
   4363c:	cbz	x8, 43664 <mpfr_subnormalize@@Base+0x21c>
   43640:	cbnz	x9, 43698 <mpfr_subnormalize@@Base+0x250>
   43644:	ldr	x8, [x1]
   43648:	tst	x8, x23
   4364c:	b.eq	43924 <mpfr_subnormalize@@Base+0x4dc>  // b.none
   43650:	lsl	w25, w25, #1
   43654:	b	43698 <mpfr_subnormalize@@Base+0x250>
   43658:	add	w10, w21, w25, lsr #31
   4365c:	cmp	w10, #0x3
   43660:	b.ne	43690 <mpfr_subnormalize@@Base+0x248>  // b.any
   43664:	orr	x8, x9, x8
   43668:	cmp	x8, #0x0
   4366c:	csneg	w25, wzr, w25, eq  // eq = none
   43670:	cmp	x22, x1
   43674:	b.ne	436d0 <mpfr_subnormalize@@Base+0x288>  // b.any
   43678:	b	436dc <mpfr_subnormalize@@Base+0x294>
   4367c:	ldr	w8, [x19, #8]
   43680:	add	w8, w21, w8, lsr #31
   43684:	cmp	w8, #0x3
   43688:	b.ne	43800 <mpfr_subnormalize@@Base+0x3b8>  // b.any
   4368c:	b	43828 <mpfr_subnormalize@@Base+0x3e0>
   43690:	orr	x8, x9, x8
   43694:	cbz	x8, 436c4 <mpfr_subnormalize@@Base+0x27c>
   43698:	mov	x0, x22
   4369c:	mov	x3, x23
   436a0:	bl	bf60 <__gmpn_add_1@plt>
   436a4:	cbz	x0, 436dc <mpfr_subnormalize@@Base+0x294>
   436a8:	ldr	x8, [x29, #24]
   436ac:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   436b0:	str	x9, [x22, x8, lsl #3]
   436b4:	ldr	x8, [sp, #16]
   436b8:	add	x8, x8, #0x1
   436bc:	str	x8, [sp, #16]
   436c0:	b	436dc <mpfr_subnormalize@@Base+0x294>
   436c4:	mov	w25, wzr
   436c8:	cmp	x22, x1
   436cc:	b.eq	436dc <mpfr_subnormalize@@Base+0x294>  // b.none
   436d0:	lsl	x2, x2, #3
   436d4:	mov	x0, x22
   436d8:	bl	be50 <memcpy@plt>
   436dc:	ldr	x8, [x22]
   436e0:	neg	x9, x23
   436e4:	and	x8, x8, x9
   436e8:	str	x8, [x22]
   436ec:	cbz	w20, 436fc <mpfr_subnormalize@@Base+0x2b4>
   436f0:	cbz	w21, 43754 <mpfr_subnormalize@@Base+0x30c>
   436f4:	cmp	w25, #0x0
   436f8:	csel	w25, w20, w25, eq  // eq = none
   436fc:	ldr	w3, [sp, #8]
   43700:	mov	x1, sp
   43704:	mov	x0, x19
   43708:	mov	w2, w21
   4370c:	bl	cb70 <mpfr_set4@plt>
   43710:	cbnz	w0, 438b8 <mpfr_subnormalize@@Base+0x470>
   43714:	ldr	x8, [x19, #16]
   43718:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4371c:	cmp	x8, x9
   43720:	b.le	438d4 <mpfr_subnormalize@@Base+0x48c>
   43724:	mov	x0, sp
   43728:	bl	c4f0 <mpfr_clear@plt>
   4372c:	cbz	w25, 4374c <mpfr_subnormalize@@Base+0x304>
   43730:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43734:	ldr	x1, [x0, #2800]
   43738:	add	x0, x0, #0xaf0
   4373c:	blr	x1
   43740:	ldr	w8, [x24, x0]
   43744:	orr	w8, w8, #0x8
   43748:	str	w8, [x24, x0]
   4374c:	mov	w20, w25
   43750:	b	434d0 <mpfr_subnormalize@@Base+0x88>
   43754:	cmp	w25, #0x2
   43758:	b.eq	43764 <mpfr_subnormalize@@Base+0x31c>  // b.none
   4375c:	cmn	w25, #0x2
   43760:	b.ne	436f4 <mpfr_subnormalize@@Base+0x2ac>  // b.any
   43764:	cmp	w25, #0x0
   43768:	cset	w8, gt
   4376c:	csinv	w8, w8, wzr, ge  // ge = tcont
   43770:	cmp	w20, #0x0
   43774:	cset	w9, gt
   43778:	csinv	w9, w9, wzr, ge  // ge = tcont
   4377c:	cmp	w8, w9
   43780:	b.ne	436fc <mpfr_subnormalize@@Base+0x2b4>  // b.any
   43784:	ldr	w9, [x19, #8]
   43788:	mov	x0, sp
   4378c:	cmp	w9, #0x0
   43790:	cset	w9, ne  // ne = any
   43794:	csinv	w9, w9, wzr, ge  // ge = tcont
   43798:	cmp	w8, w9
   4379c:	b.ne	43858 <mpfr_subnormalize@@Base+0x410>  // b.any
   437a0:	bl	c930 <mpfr_nexttozero@plt>
   437a4:	neg	w25, w25
   437a8:	b	436fc <mpfr_subnormalize@@Base+0x2b4>
   437ac:	cmp	x9, #0x7f
   437b0:	and	x9, x11, #0x3fffffffffffffff
   437b4:	b.cc	437d0 <mpfr_subnormalize@@Base+0x388>  // b.lo, b.ul, b.last
   437b8:	cbnz	x9, 437d0 <mpfr_subnormalize@@Base+0x388>
   437bc:	sub	x10, x10, #0x1
   437c0:	ldr	x9, [x8, x10, lsl #3]
   437c4:	cbz	x10, 437d0 <mpfr_subnormalize@@Base+0x388>
   437c8:	sub	x10, x10, #0x1
   437cc:	cbz	x9, 437c0 <mpfr_subnormalize@@Base+0x378>
   437d0:	mov	w8, #0x7                   	// #7
   437d4:	cbnz	x9, 437f0 <mpfr_subnormalize@@Base+0x3a8>
   437d8:	cmp	w25, #0x0
   437dc:	and	w9, w25, w20
   437e0:	ccmp	w20, #0x0, #0x4, gt
   437e4:	ccmp	w9, #0x0, #0x8, le
   437e8:	mov	w9, #0x4                   	// #4
   437ec:	csel	w8, w9, w8, lt  // lt = tstop
   437f0:	cmp	w8, #0x4
   437f4:	b.eq	43828 <mpfr_subnormalize@@Base+0x3e0>  // b.none
   437f8:	cmp	w8, #0x7
   437fc:	b.ne	434d0 <mpfr_subnormalize@@Base+0x88>  // b.any
   43800:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43804:	ldr	x1, [x0, #2736]
   43808:	add	x0, x0, #0xab0
   4380c:	blr	x1
   43810:	ldr	x8, [x24, x0]
   43814:	mov	x0, x19
   43818:	add	x1, x8, #0x1
   4381c:	bl	c770 <mpfr_setmin@plt>
   43820:	cbnz	w25, 43730 <mpfr_subnormalize@@Base+0x2e8>
   43824:	b	43850 <mpfr_subnormalize@@Base+0x408>
   43828:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4382c:	ldr	x1, [x0, #2736]
   43830:	add	x0, x0, #0xab0
   43834:	blr	x1
   43838:	ldr	x1, [x24, x0]
   4383c:	mov	x0, x19
   43840:	bl	c770 <mpfr_setmin@plt>
   43844:	cbz	w25, 43850 <mpfr_subnormalize@@Base+0x408>
   43848:	neg	w20, w25
   4384c:	b	434b4 <mpfr_subnormalize@@Base+0x6c>
   43850:	mov	w20, wzr
   43854:	b	434d0 <mpfr_subnormalize@@Base+0x88>
   43858:	bl	cb40 <mpfr_nexttoinf@plt>
   4385c:	neg	w25, w25
   43860:	b	436fc <mpfr_subnormalize@@Base+0x2b4>
   43864:	ldr	x1, [x19, #24]
   43868:	sub	x23, x2, x13
   4386c:	add	x0, x22, x23, lsl #3
   43870:	cmp	x0, x1
   43874:	b.eq	43880 <mpfr_subnormalize@@Base+0x438>  // b.none
   43878:	lsl	x2, x13, #3
   4387c:	bl	be50 <memcpy@plt>
   43880:	lsl	x2, x23, #3
   43884:	mov	x0, x22
   43888:	mov	w1, wzr
   4388c:	bl	c5b0 <memset@plt>
   43890:	mov	w25, wzr
   43894:	cbnz	w20, 436f0 <mpfr_subnormalize@@Base+0x2a8>
   43898:	b	436fc <mpfr_subnormalize@@Base+0x2b4>
   4389c:	ldur	x9, [x1, #-8]
   438a0:	and	x8, x9, #0x8000000000000000
   438a4:	and	x9, x9, #0x7fffffffffffffff
   438a8:	cbz	w21, 438f0 <mpfr_subnormalize@@Base+0x4a8>
   438ac:	cbz	x8, 438f0 <mpfr_subnormalize@@Base+0x4a8>
   438b0:	mov	w23, #0x1                   	// #1
   438b4:	b	43624 <mpfr_subnormalize@@Base+0x1dc>
   438b8:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   438bc:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   438c0:	add	x0, x0, #0xacb
   438c4:	add	x2, x2, #0xec8
   438c8:	mov	w1, #0xa0                  	// #160
   438cc:	bl	d030 <mpfr_assert_fail@plt>
   438d0:	b	43714 <mpfr_subnormalize@@Base+0x2cc>
   438d4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   438d8:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   438dc:	add	x0, x0, #0xacb
   438e0:	add	x2, x2, #0xad7
   438e4:	mov	w1, #0xa1                  	// #161
   438e8:	bl	d030 <mpfr_assert_fail@plt>
   438ec:	b	43724 <mpfr_subnormalize@@Base+0x2dc>
   438f0:	mov	w23, #0x1                   	// #1
   438f4:	cbnz	x9, 43624 <mpfr_subnormalize@@Base+0x1dc>
   438f8:	sub	x13, x12, x2
   438fc:	cbz	x13, 43624 <mpfr_subnormalize@@Base+0x1dc>
   43900:	sub	x9, x12, x10
   43904:	sub	x12, x9, #0x2
   43908:	mov	w23, #0x1                   	// #1
   4390c:	ldr	x9, [x11, x12, lsl #3]
   43910:	subs	x12, x12, #0x1
   43914:	cset	w13, cs  // cs = hs, nlast
   43918:	cbnz	x9, 43624 <mpfr_subnormalize@@Base+0x1dc>
   4391c:	tbnz	w13, #0, 4390c <mpfr_subnormalize@@Base+0x4c4>
   43920:	b	43624 <mpfr_subnormalize@@Base+0x1dc>
   43924:	neg	w25, w25, lsl #1
   43928:	cmp	x22, x1
   4392c:	b.ne	436d0 <mpfr_subnormalize@@Base+0x288>  // b.any
   43930:	b	436dc <mpfr_subnormalize@@Base+0x294>

0000000000043934 <mpfr_const_catalan_internal@@Base>:
   43934:	sub	sp, sp, #0x190
   43938:	stp	x29, x30, [sp, #304]
   4393c:	stp	x28, x27, [sp, #320]
   43940:	stp	x26, x25, [sp, #336]
   43944:	stp	x24, x23, [sp, #352]
   43948:	stp	x22, x21, [sp, #368]
   4394c:	stp	x20, x19, [sp, #384]
   43950:	ldr	x22, [x0]
   43954:	mov	x19, x0
   43958:	mov	w20, w1
   4395c:	add	x29, sp, #0x130
   43960:	subs	x21, x22, #0x1
   43964:	b.eq	43c88 <mpfr_const_catalan_internal@@Base+0x354>  // b.none
   43968:	b.le	43c90 <mpfr_const_catalan_internal@@Base+0x35c>
   4396c:	clz	x8, x21
   43970:	mov	w9, #0x40                  	// #64
   43974:	sub	x8, x9, x8
   43978:	mov	x24, #0xfffffffffffffeff    	// #-257
   4397c:	movk	x24, #0x7fff, lsl #48
   43980:	add	x8, x8, x22
   43984:	sub	x9, x24, #0x7
   43988:	cmp	x8, x9
   4398c:	b.gt	43cac <mpfr_const_catalan_internal@@Base+0x378>
   43990:	add	x9, x8, #0x6
   43994:	add	x10, x8, #0x45
   43998:	cmp	x9, #0x0
   4399c:	csel	x9, x10, x9, lt  // lt = tstop
   439a0:	asr	x9, x9, #6
   439a4:	add	x21, x9, #0x1
   439a8:	add	x9, x21, x21, lsl #1
   439ac:	cmp	x9, #0x11
   439b0:	add	x25, x8, #0x7
   439b4:	b.lt	439cc <mpfr_const_catalan_internal@@Base+0x98>  // b.tstop
   439b8:	lsl	x0, x9, #3
   439bc:	str	x0, [sp, #8]
   439c0:	bl	d1f0 <mpfr_allocate_func@plt>
   439c4:	str	x0, [sp, #16]
   439c8:	b	439d8 <mpfr_const_catalan_internal@@Base+0xa4>
   439cc:	add	x8, sp, #0x8
   439d0:	add	x8, x8, #0x10
   439d4:	stp	xzr, x8, [sp, #8]
   439d8:	ldr	x8, [sp, #16]
   439dc:	mov	w26, #0x1                   	// #1
   439e0:	sub	x0, x29, #0x78
   439e4:	stur	x25, [x29, #-104]
   439e8:	stur	x8, [x29, #-16]
   439ec:	add	x9, x8, x21, lsl #3
   439f0:	add	x8, x8, x21, lsl #4
   439f4:	stur	w26, [x29, #-32]
   439f8:	stur	w26, [x29, #-64]
   439fc:	stp	x9, x25, [x29, #-48]
   43a00:	stp	x8, x25, [x29, #-80]
   43a04:	stur	w26, [x29, #-96]
   43a08:	bl	c400 <mpfr_mpz_init@plt>
   43a0c:	sub	x0, x29, #0x88
   43a10:	bl	c400 <mpfr_mpz_init@plt>
   43a14:	add	x0, sp, #0x98
   43a18:	bl	c400 <mpfr_mpz_init@plt>
   43a1c:	cmp	w20, #0x0
   43a20:	adrp	x21, 60000 <mpfr_bases@@Base+0x408>
   43a24:	adrp	x23, 5a000 <mpfr_free_pool@@Base+0x2854>
   43a28:	mov	w28, #0x40                  	// #64
   43a2c:	mrs	x27, tpidr_el0
   43a30:	add	x21, x21, #0xb25
   43a34:	cinc	x22, x22, eq  // eq = none
   43a38:	add	x23, x23, #0x26
   43a3c:	sub	x0, x29, #0x28
   43a40:	mov	w1, #0x3                   	// #3
   43a44:	mov	w2, #0x2                   	// #2
   43a48:	bl	cd20 <mpfr_sqrt_ui@plt>
   43a4c:	sub	x0, x29, #0x28
   43a50:	sub	x1, x29, #0x28
   43a54:	mov	w2, #0x2                   	// #2
   43a58:	mov	w3, #0x2                   	// #2
   43a5c:	bl	c710 <mpfr_add_ui@plt>
   43a60:	sub	x0, x29, #0x28
   43a64:	sub	x1, x29, #0x28
   43a68:	mov	w2, #0x2                   	// #2
   43a6c:	bl	c520 <mpfr_log@plt>
   43a70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43a74:	ldr	x1, [x0, #2848]
   43a78:	add	x0, x0, #0xb20
   43a7c:	blr	x1
   43a80:	add	x1, x27, x0
   43a84:	sub	x0, x29, #0x48
   43a88:	mov	w2, #0x2                   	// #2
   43a8c:	bl	c840 <mpfr_cache@plt>
   43a90:	sub	x0, x29, #0x28
   43a94:	sub	x1, x29, #0x28
   43a98:	sub	x2, x29, #0x48
   43a9c:	mov	w3, wzr
   43aa0:	bl	c1b0 <mpfr_mul@plt>
   43aa4:	sub	x8, x25, #0x1
   43aa8:	cmp	x8, #0x0
   43aac:	csel	x8, x25, x8, lt  // lt = tstop
   43ab0:	asr	x4, x8, #1
   43ab4:	sub	x0, x29, #0x78
   43ab8:	sub	x1, x29, #0x88
   43abc:	add	x2, sp, #0x98
   43ac0:	mov	x3, xzr
   43ac4:	bl	43ce8 <mpfr_const_catalan@@Base+0x38>
   43ac8:	sub	x0, x29, #0x78
   43acc:	sub	x1, x29, #0x78
   43ad0:	mov	w2, #0x3                   	// #3
   43ad4:	bl	c590 <__gmpz_mul_ui@plt>
   43ad8:	sub	x0, x29, #0x48
   43adc:	sub	x1, x29, #0x78
   43ae0:	mov	w2, #0x2                   	// #2
   43ae4:	bl	c6e0 <mpfr_set_z@plt>
   43ae8:	sub	x0, x29, #0x68
   43aec:	add	x1, sp, #0x98
   43af0:	mov	w2, #0x3                   	// #3
   43af4:	bl	c6e0 <mpfr_set_z@plt>
   43af8:	sub	x0, x29, #0x48
   43afc:	sub	x1, x29, #0x48
   43b00:	sub	x2, x29, #0x68
   43b04:	mov	w3, wzr
   43b08:	bl	caf0 <mpfr_div@plt>
   43b0c:	sub	x0, x29, #0x28
   43b10:	sub	x1, x29, #0x28
   43b14:	sub	x2, x29, #0x48
   43b18:	mov	w3, wzr
   43b1c:	bl	c640 <mpfr_add@plt>
   43b20:	sub	x0, x29, #0x28
   43b24:	sub	x1, x29, #0x28
   43b28:	mov	w2, #0x3                   	// #3
   43b2c:	mov	w3, wzr
   43b30:	bl	cde0 <mpfr_div_2ui@plt>
   43b34:	ldur	x8, [x29, #-24]
   43b38:	add	x9, x24, #0x105
   43b3c:	cmp	x8, x9
   43b40:	b.lt	43b74 <mpfr_const_catalan_internal@@Base+0x240>  // b.tstop
   43b44:	ldur	x8, [x29, #-40]
   43b48:	ldur	x0, [x29, #-16]
   43b4c:	sub	x2, x25, #0x5
   43b50:	mov	x3, x22
   43b54:	sub	x9, x8, #0x1
   43b58:	add	x8, x8, #0x3e
   43b5c:	cmp	x9, #0x0
   43b60:	csel	x8, x8, x9, lt  // lt = tstop
   43b64:	asr	x8, x8, #6
   43b68:	add	x1, x8, #0x1
   43b6c:	bl	c830 <mpfr_round_p@plt>
   43b70:	cbnz	w0, 43c24 <mpfr_const_catalan_internal@@Base+0x2f0>
   43b74:	sub	x8, x24, x25
   43b78:	cmp	x28, x8
   43b7c:	b.gt	43c10 <mpfr_const_catalan_internal@@Base+0x2dc>
   43b80:	add	x25, x25, x28
   43b84:	cmp	x25, #0x0
   43b88:	cinc	x8, x25, lt  // lt = tstop
   43b8c:	cmp	x25, x24
   43b90:	b.gt	43cac <mpfr_const_catalan_internal@@Base+0x378>
   43b94:	asr	x28, x8, #1
   43b98:	sub	x8, x25, #0x1
   43b9c:	add	x9, x25, #0x3e
   43ba0:	cmp	x8, #0x0
   43ba4:	csel	x8, x9, x8, lt  // lt = tstop
   43ba8:	ldr	x1, [sp, #8]
   43bac:	asr	x8, x8, #6
   43bb0:	add	x8, x8, #0x1
   43bb4:	str	x8, [sp]
   43bb8:	add	x8, x8, x8, lsl #1
   43bbc:	lsl	x2, x8, #3
   43bc0:	str	x2, [sp, #8]
   43bc4:	cbz	x1, 43bd4 <mpfr_const_catalan_internal@@Base+0x2a0>
   43bc8:	ldr	x0, [sp, #16]
   43bcc:	bl	c660 <mpfr_reallocate_func@plt>
   43bd0:	b	43bdc <mpfr_const_catalan_internal@@Base+0x2a8>
   43bd4:	mov	x0, x2
   43bd8:	bl	d1f0 <mpfr_allocate_func@plt>
   43bdc:	ldr	x10, [sp]
   43be0:	mov	x8, x0
   43be4:	stur	x8, [x29, #-16]
   43be8:	str	x0, [sp, #16]
   43bec:	add	x9, x8, x10, lsl #3
   43bf0:	add	x8, x8, x10, lsl #4
   43bf4:	stur	w26, [x29, #-32]
   43bf8:	stur	w26, [x29, #-64]
   43bfc:	stur	x25, [x29, #-104]
   43c00:	stp	x9, x25, [x29, #-48]
   43c04:	stp	x8, x25, [x29, #-80]
   43c08:	stur	w26, [x29, #-96]
   43c0c:	b	43a3c <mpfr_const_catalan_internal@@Base+0x108>
   43c10:	mov	w1, #0x8d                  	// #141
   43c14:	mov	x0, x21
   43c18:	mov	x2, x23
   43c1c:	bl	d030 <mpfr_assert_fail@plt>
   43c20:	b	43b80 <mpfr_const_catalan_internal@@Base+0x24c>
   43c24:	ldur	w3, [x29, #-32]
   43c28:	sub	x1, x29, #0x28
   43c2c:	mov	x0, x19
   43c30:	mov	w2, w20
   43c34:	bl	cb70 <mpfr_set4@plt>
   43c38:	ldr	x1, [sp, #8]
   43c3c:	mov	w19, w0
   43c40:	cbz	x1, 43c4c <mpfr_const_catalan_internal@@Base+0x318>
   43c44:	ldr	x0, [sp, #16]
   43c48:	bl	d120 <mpfr_free_func@plt>
   43c4c:	sub	x0, x29, #0x78
   43c50:	bl	c610 <mpfr_mpz_clear@plt>
   43c54:	sub	x0, x29, #0x88
   43c58:	bl	c610 <mpfr_mpz_clear@plt>
   43c5c:	add	x0, sp, #0x98
   43c60:	bl	c610 <mpfr_mpz_clear@plt>
   43c64:	mov	w0, w19
   43c68:	ldp	x20, x19, [sp, #384]
   43c6c:	ldp	x22, x21, [sp, #368]
   43c70:	ldp	x24, x23, [sp, #352]
   43c74:	ldp	x26, x25, [sp, #336]
   43c78:	ldp	x28, x27, [sp, #320]
   43c7c:	ldp	x29, x30, [sp, #304]
   43c80:	add	sp, sp, #0x190
   43c84:	ret
   43c88:	mov	x8, xzr
   43c8c:	b	43978 <mpfr_const_catalan_internal@@Base+0x44>
   43c90:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   43c94:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   43c98:	add	x0, x0, #0xb25
   43c9c:	add	x2, x2, #0xb35
   43ca0:	mov	w1, #0x74                  	// #116
   43ca4:	bl	d030 <mpfr_assert_fail@plt>
   43ca8:	b	4396c <mpfr_const_catalan_internal@@Base+0x38>
   43cac:	bl	cdd0 <mpfr_abort_prec_max@plt>

0000000000043cb0 <mpfr_const_catalan@@Base>:
   43cb0:	stp	x29, x30, [sp, #-16]!
   43cb4:	mov	x29, sp
   43cb8:	mov	w2, w1
   43cbc:	mov	x8, x0
   43cc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43cc4:	ldr	x1, [x0, #2816]
   43cc8:	add	x0, x0, #0xb00
   43ccc:	blr	x1
   43cd0:	mrs	x9, tpidr_el0
   43cd4:	add	x1, x9, x0
   43cd8:	mov	x0, x8
   43cdc:	bl	c840 <mpfr_cache@plt>
   43ce0:	ldp	x29, x30, [sp], #16
   43ce4:	ret
   43ce8:	sub	sp, sp, #0x70
   43cec:	add	x8, x3, #0x1
   43cf0:	stp	x24, x23, [sp, #64]
   43cf4:	stp	x22, x21, [sp, #80]
   43cf8:	stp	x20, x19, [sp, #96]
   43cfc:	mov	x23, x3
   43d00:	mov	x20, x2
   43d04:	mov	x19, x1
   43d08:	cmp	x8, x4
   43d0c:	mov	x21, x0
   43d10:	stp	x29, x30, [sp, #48]
   43d14:	add	x29, sp, #0x30
   43d18:	b.ne	43d68 <mpfr_const_catalan@@Base+0xb8>  // b.any
   43d1c:	cbz	x23, 43e28 <mpfr_const_catalan@@Base+0x178>
   43d20:	lsl	x8, x23, #1
   43d24:	sub	x1, x8, #0x1
   43d28:	mov	x0, x19
   43d2c:	bl	c110 <__gmpz_set_ui@plt>
   43d30:	mov	x0, x19
   43d34:	mov	x1, x19
   43d38:	mov	x2, x23
   43d3c:	bl	c590 <__gmpz_mul_ui@plt>
   43d40:	mov	w1, #0x1                   	// #1
   43d44:	bfi	x1, x23, #1, #63
   43d48:	mov	w2, #0x2                   	// #2
   43d4c:	mov	x0, x20
   43d50:	bl	c9b0 <__gmpz_ui_pow_ui@plt>
   43d54:	mov	w2, #0x1                   	// #1
   43d58:	mov	x0, x20
   43d5c:	mov	x1, x20
   43d60:	bl	c6a0 <__gmpz_mul_2exp@plt>
   43d64:	b	43e40 <mpfr_const_catalan@@Base+0x190>
   43d68:	add	x8, x4, x23
   43d6c:	lsr	x24, x8, #1
   43d70:	mov	x22, x4
   43d74:	mov	x0, x21
   43d78:	mov	x1, x19
   43d7c:	mov	x2, x20
   43d80:	mov	x3, x23
   43d84:	mov	x4, x24
   43d88:	bl	43ce8 <mpfr_const_catalan@@Base+0x38>
   43d8c:	sub	x0, x29, #0x10
   43d90:	bl	c400 <mpfr_mpz_init@plt>
   43d94:	add	x0, sp, #0x10
   43d98:	bl	c400 <mpfr_mpz_init@plt>
   43d9c:	mov	x0, sp
   43da0:	bl	c400 <mpfr_mpz_init@plt>
   43da4:	sub	x0, x29, #0x10
   43da8:	add	x1, sp, #0x10
   43dac:	mov	x2, sp
   43db0:	mov	x3, x24
   43db4:	mov	x4, x22
   43db8:	bl	43ce8 <mpfr_const_catalan@@Base+0x38>
   43dbc:	mov	x2, sp
   43dc0:	mov	x0, x21
   43dc4:	mov	x1, x21
   43dc8:	bl	c460 <__gmpz_mul@plt>
   43dcc:	sub	x0, x29, #0x10
   43dd0:	sub	x1, x29, #0x10
   43dd4:	mov	x2, x19
   43dd8:	bl	c460 <__gmpz_mul@plt>
   43ddc:	sub	x2, x29, #0x10
   43de0:	mov	x0, x21
   43de4:	mov	x1, x21
   43de8:	bl	ceb0 <__gmpz_add@plt>
   43dec:	add	x2, sp, #0x10
   43df0:	mov	x0, x19
   43df4:	mov	x1, x19
   43df8:	bl	c460 <__gmpz_mul@plt>
   43dfc:	mov	x2, sp
   43e00:	mov	x0, x20
   43e04:	mov	x1, x20
   43e08:	bl	c460 <__gmpz_mul@plt>
   43e0c:	sub	x0, x29, #0x10
   43e10:	bl	c610 <mpfr_mpz_clear@plt>
   43e14:	add	x0, sp, #0x10
   43e18:	bl	c610 <mpfr_mpz_clear@plt>
   43e1c:	mov	x0, sp
   43e20:	bl	c610 <mpfr_mpz_clear@plt>
   43e24:	b	43e4c <mpfr_const_catalan@@Base+0x19c>
   43e28:	mov	w1, #0x1                   	// #1
   43e2c:	mov	x0, x19
   43e30:	bl	c110 <__gmpz_set_ui@plt>
   43e34:	mov	w1, #0x1                   	// #1
   43e38:	mov	x0, x20
   43e3c:	bl	c110 <__gmpz_set_ui@plt>
   43e40:	mov	x0, x21
   43e44:	mov	x1, x19
   43e48:	bl	c410 <__gmpz_set@plt>
   43e4c:	ldp	x20, x19, [sp, #96]
   43e50:	ldp	x22, x21, [sp, #80]
   43e54:	ldp	x24, x23, [sp, #64]
   43e58:	ldp	x29, x30, [sp, #48]
   43e5c:	add	sp, sp, #0x70
   43e60:	ret

0000000000043e64 <mpfr_rootn_ui@@Base>:
   43e64:	sub	sp, sp, #0x80
   43e68:	stp	x22, x21, [sp, #96]
   43e6c:	stp	x20, x19, [sp, #112]
   43e70:	mov	w20, w3
   43e74:	mov	x21, x2
   43e78:	mov	x22, x1
   43e7c:	cmp	x2, #0x1
   43e80:	mov	x19, x0
   43e84:	stp	x29, x30, [sp, #32]
   43e88:	stp	x28, x27, [sp, #48]
   43e8c:	stp	x26, x25, [sp, #64]
   43e90:	stp	x24, x23, [sp, #80]
   43e94:	add	x29, sp, #0x20
   43e98:	b.ls	4419c <mpfr_rootn_ui@@Base+0x338>  // b.plast
   43e9c:	ldr	x9, [x22, #16]
   43ea0:	mov	x8, #0x2                   	// #2
   43ea4:	movk	x8, #0x8000, lsl #48
   43ea8:	add	x10, x8, #0x2
   43eac:	cmp	x9, x10
   43eb0:	b.lt	441dc <mpfr_rootn_ui@@Base+0x378>  // b.tstop
   43eb4:	tbnz	w21, #0, 43ec0 <mpfr_rootn_ui@@Base+0x5c>
   43eb8:	ldr	w9, [x22, #8]
   43ebc:	tbnz	w9, #31, 44230 <mpfr_rootn_ui@@Base+0x3cc>
   43ec0:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   43ec4:	ldr	x1, [x1, #3928]
   43ec8:	mov	x0, x22
   43ecc:	bl	cea0 <mpfr_cmpabs@plt>
   43ed0:	cbz	w0, 441a0 <mpfr_rootn_ui@@Base+0x33c>
   43ed4:	cmp	x21, #0x65
   43ed8:	b.cc	43ef4 <mpfr_rootn_ui@@Base+0x90>  // b.lo, b.ul, b.last
   43edc:	mov	x0, x19
   43ee0:	mov	x1, x22
   43ee4:	mov	x2, x21
   43ee8:	mov	w3, w20
   43eec:	bl	44294 <mpfr_rootn_ui@@Base+0x430>
   43ef0:	b	441b4 <mpfr_rootn_ui@@Base+0x350>
   43ef4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43ef8:	ldr	x1, [x0, #2800]
   43efc:	add	x0, x0, #0xaf0
   43f00:	blr	x1
   43f04:	mrs	x24, tpidr_el0
   43f08:	ldr	w27, [x24, x0]
   43f0c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43f10:	ldr	x1, [x0, #2736]
   43f14:	add	x0, x0, #0xab0
   43f18:	blr	x1
   43f1c:	ldr	x28, [x24, x0]
   43f20:	mov	x8, x0
   43f24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   43f28:	ldr	x1, [x0, #2768]
   43f2c:	add	x0, x0, #0xad0
   43f30:	blr	x1
   43f34:	ldr	x23, [x24, x0]
   43f38:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   43f3c:	str	x9, [x24, x8]
   43f40:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   43f44:	str	x8, [x24, x0]
   43f48:	add	x0, sp, #0x10
   43f4c:	bl	c400 <mpfr_mpz_init@plt>
   43f50:	add	x0, sp, #0x10
   43f54:	mov	x1, x22
   43f58:	bl	cfb0 <mpfr_get_z_2exp@plt>
   43f5c:	ldr	w8, [x22, #8]
   43f60:	mov	x22, x0
   43f64:	str	w8, [sp, #12]
   43f68:	tbz	w8, #31, 43f78 <mpfr_rootn_ui@@Base+0x114>
   43f6c:	add	x0, sp, #0x10
   43f70:	add	x1, sp, #0x10
   43f74:	bl	c4e0 <__gmpz_neg@plt>
   43f78:	ldr	w9, [sp, #20]
   43f7c:	ldr	x10, [sp, #24]
   43f80:	sdiv	x8, x22, x21
   43f84:	msub	x8, x8, x21, x22
   43f88:	cmp	w9, #0x0
   43f8c:	cneg	w9, w9, mi  // mi = first
   43f90:	add	x10, x10, w9, uxtw #3
   43f94:	and	x11, x21, x8, asr #63
   43f98:	ldur	x10, [x10, #-8]
   43f9c:	add	x8, x11, x8
   43fa0:	ldr	x11, [x19]
   43fa4:	cmp	w20, #0x0
   43fa8:	lsl	x9, x9, #6
   43fac:	clz	x10, x10
   43fb0:	cinc	x25, x11, eq  // eq = none
   43fb4:	sub	x9, x9, x10
   43fb8:	add	x9, x9, x8
   43fbc:	mul	x10, x25, x21
   43fc0:	cmp	x9, x10
   43fc4:	str	x23, [sp]
   43fc8:	b.cs	43fd8 <mpfr_rootn_ui@@Base+0x174>  // b.hs, b.nlast
   43fcc:	sub	x9, x10, x9
   43fd0:	udiv	x9, x9, x21
   43fd4:	b	43fdc <mpfr_rootn_ui@@Base+0x178>
   43fd8:	mov	x9, xzr
   43fdc:	madd	x23, x9, x21, x8
   43fe0:	add	x0, sp, #0x10
   43fe4:	add	x1, sp, #0x10
   43fe8:	mov	x2, x23
   43fec:	bl	c6a0 <__gmpz_mul_2exp@plt>
   43ff0:	add	x0, sp, #0x10
   43ff4:	add	x1, sp, #0x10
   43ff8:	mov	x2, x21
   43ffc:	sub	x23, x22, x23
   44000:	bl	c7a0 <__gmpz_root@plt>
   44004:	ldr	w8, [sp, #20]
   44008:	ldr	x9, [sp, #24]
   4400c:	cmp	w0, #0x0
   44010:	cset	w26, eq  // eq = none
   44014:	cmp	w8, #0x0
   44018:	cneg	w8, w8, mi  // mi = first
   4401c:	add	x9, x9, w8, uxtw #3
   44020:	ldur	x9, [x9, #-8]
   44024:	lsl	x8, x8, #6
   44028:	clz	x9, x9
   4402c:	sub	x8, x8, x9
   44030:	sub	x22, x8, x25
   44034:	cmp	x22, #0x1
   44038:	b.lt	44070 <mpfr_rootn_ui@@Base+0x20c>  // b.tstop
   4403c:	cbz	w0, 44058 <mpfr_rootn_ui@@Base+0x1f4>
   44040:	add	x0, sp, #0x10
   44044:	mov	x1, xzr
   44048:	bl	bee0 <__gmpz_scan1@plt>
   4404c:	cmp	x0, x22
   44050:	cset	w26, lt  // lt = tstop
   44054:	b	4405c <mpfr_rootn_ui@@Base+0x1f8>
   44058:	mov	w26, #0x1                   	// #1
   4405c:	add	x0, sp, #0x10
   44060:	add	x1, sp, #0x10
   44064:	mov	x2, x22
   44068:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   4406c:	madd	x23, x22, x21, x23
   44070:	cbz	w26, 440d8 <mpfr_rootn_ui@@Base+0x274>
   44074:	cmp	w20, #0x3
   44078:	mov	w8, #0x2                   	// #2
   4407c:	mov	w9, #0x3                   	// #3
   44080:	csel	w8, w8, w20, eq  // eq = none
   44084:	cmp	w20, #0x2
   44088:	csel	w8, w9, w8, eq  // eq = none
   4408c:	ldr	w9, [sp, #12]
   44090:	ldr	x26, [sp]
   44094:	cmp	w9, #0x0
   44098:	csel	w20, w8, w20, lt  // lt = tstop
   4409c:	cmp	w20, #0x4
   440a0:	b.eq	440c0 <mpfr_rootn_ui@@Base+0x25c>  // b.none
   440a4:	cmp	w20, #0x2
   440a8:	b.eq	440c0 <mpfr_rootn_ui@@Base+0x25c>  // b.none
   440ac:	cbnz	w20, 440e4 <mpfr_rootn_ui@@Base+0x280>
   440b0:	add	x0, sp, #0x10
   440b4:	mov	x1, xzr
   440b8:	bl	c450 <__gmpz_tstbit@plt>
   440bc:	cbz	w0, 440e4 <mpfr_rootn_ui@@Base+0x280>
   440c0:	add	x0, sp, #0x10
   440c4:	add	x1, sp, #0x10
   440c8:	mov	w2, #0x1                   	// #1
   440cc:	mov	w22, #0x1                   	// #1
   440d0:	bl	c820 <__gmpz_add_ui@plt>
   440d4:	b	440e8 <mpfr_rootn_ui@@Base+0x284>
   440d8:	ldr	x26, [sp]
   440dc:	mov	w22, wzr
   440e0:	b	440e8 <mpfr_rootn_ui@@Base+0x284>
   440e4:	mov	w22, #0xffffffff            	// #-1
   440e8:	add	x1, sp, #0x10
   440ec:	mov	x0, x19
   440f0:	mov	w2, wzr
   440f4:	bl	c6e0 <mpfr_set_z@plt>
   440f8:	ldr	x8, [x19, #16]
   440fc:	sdiv	x9, x23, x21
   44100:	add	w22, w0, w22
   44104:	add	x8, x9, x8
   44108:	str	x8, [x19, #16]
   4410c:	ldr	w8, [sp, #12]
   44110:	tbz	w8, #31, 44124 <mpfr_rootn_ui@@Base+0x2c0>
   44114:	ldr	w8, [x19, #8]
   44118:	neg	w22, w22
   4411c:	neg	w8, w8
   44120:	str	w8, [x19, #8]
   44124:	add	x0, sp, #0x10
   44128:	bl	c610 <mpfr_mpz_clear@plt>
   4412c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44130:	ldr	x1, [x0, #2800]
   44134:	add	x0, x0, #0xaf0
   44138:	blr	x1
   4413c:	str	w27, [x24, x0]
   44140:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44144:	ldr	x1, [x0, #2736]
   44148:	add	x0, x0, #0xab0
   4414c:	blr	x1
   44150:	str	x28, [x24, x0]
   44154:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44158:	ldr	x1, [x0, #2768]
   4415c:	add	x0, x0, #0xad0
   44160:	blr	x1
   44164:	str	x26, [x24, x0]
   44168:	ldr	x8, [x19, #16]
   4416c:	cmp	x8, x26
   44170:	b.gt	4425c <mpfr_rootn_ui@@Base+0x3f8>
   44174:	cmp	x8, x28
   44178:	b.lt	4425c <mpfr_rootn_ui@@Base+0x3f8>  // b.tstop
   4417c:	cbz	w22, 441b8 <mpfr_rootn_ui@@Base+0x354>
   44180:	orr	w8, w27, #0x8
   44184:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44188:	ldr	x1, [x0, #2800]
   4418c:	add	x0, x0, #0xaf0
   44190:	blr	x1
   44194:	str	w8, [x24, x0]
   44198:	b	441b8 <mpfr_rootn_ui@@Base+0x354>
   4419c:	cbz	x21, 44218 <mpfr_rootn_ui@@Base+0x3b4>
   441a0:	ldr	w3, [x22, #8]
   441a4:	mov	x0, x19
   441a8:	mov	x1, x22
   441ac:	mov	w2, w20
   441b0:	bl	cb70 <mpfr_set4@plt>
   441b4:	mov	w22, w0
   441b8:	mov	w0, w22
   441bc:	ldp	x20, x19, [sp, #112]
   441c0:	ldp	x22, x21, [sp, #96]
   441c4:	ldp	x24, x23, [sp, #80]
   441c8:	ldp	x26, x25, [sp, #64]
   441cc:	ldp	x28, x27, [sp, #48]
   441d0:	ldp	x29, x30, [sp, #32]
   441d4:	add	sp, sp, #0x80
   441d8:	ret
   441dc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   441e0:	cmp	x9, x10
   441e4:	b.eq	44224 <mpfr_rootn_ui@@Base+0x3c0>  // b.none
   441e8:	mov	x10, #0x2                   	// #2
   441ec:	movk	x10, #0x8000, lsl #48
   441f0:	cmp	x9, x10
   441f4:	b.eq	44230 <mpfr_rootn_ui@@Base+0x3cc>  // b.none
   441f8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   441fc:	str	x8, [x19, #16]
   44200:	tbz	w21, #0, 44270 <mpfr_rootn_ui@@Base+0x40c>
   44204:	ldr	w8, [x22, #8]
   44208:	cmp	w8, #0x1
   4420c:	b.ge	44270 <mpfr_rootn_ui@@Base+0x40c>  // b.tcont
   44210:	mov	w8, #0xffffffff            	// #-1
   44214:	b	44274 <mpfr_rootn_ui@@Base+0x410>
   44218:	mov	x8, #0x2                   	// #2
   4421c:	movk	x8, #0x8000, lsl #48
   44220:	b	44230 <mpfr_rootn_ui@@Base+0x3cc>
   44224:	ldr	w9, [x22, #8]
   44228:	tbnz	w21, #0, 44280 <mpfr_rootn_ui@@Base+0x41c>
   4422c:	tbz	w9, #31, 44280 <mpfr_rootn_ui@@Base+0x41c>
   44230:	str	x8, [x19, #16]
   44234:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44238:	ldr	x1, [x0, #2800]
   4423c:	add	x0, x0, #0xaf0
   44240:	blr	x1
   44244:	mrs	x8, tpidr_el0
   44248:	ldr	w9, [x8, x0]
   4424c:	mov	w22, wzr
   44250:	orr	w9, w9, #0x4
   44254:	str	w9, [x8, x0]
   44258:	b	441b8 <mpfr_rootn_ui@@Base+0x354>
   4425c:	mov	x0, x19
   44260:	mov	w1, w22
   44264:	mov	w2, w20
   44268:	bl	d020 <mpfr_check_range@plt>
   4426c:	b	441b4 <mpfr_rootn_ui@@Base+0x350>
   44270:	mov	w8, #0x1                   	// #1
   44274:	mov	w22, wzr
   44278:	str	w8, [x19, #8]
   4427c:	b	441b8 <mpfr_rootn_ui@@Base+0x354>
   44280:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   44284:	mov	w22, wzr
   44288:	str	x8, [x19, #16]
   4428c:	str	w9, [x19, #8]
   44290:	b	441b8 <mpfr_rootn_ui@@Base+0x354>
   44294:	sub	sp, sp, #0x1a0
   44298:	stp	x29, x30, [sp, #320]
   4429c:	stp	x28, x27, [sp, #336]
   442a0:	stp	x26, x25, [sp, #352]
   442a4:	stp	x24, x23, [sp, #368]
   442a8:	stp	x22, x21, [sp, #384]
   442ac:	stp	x20, x19, [sp, #400]
   442b0:	ldr	x8, [x1]
   442b4:	add	x29, sp, #0x140
   442b8:	mov	w9, #0x1                   	// #1
   442bc:	mov	w19, w3
   442c0:	stur	x8, [x29, #-40]
   442c4:	ldr	x8, [x1, #24]
   442c8:	stur	w9, [x29, #-32]
   442cc:	mov	x22, x2
   442d0:	mov	x21, x1
   442d4:	stur	x8, [x29, #-16]
   442d8:	ldr	x8, [x1, #16]
   442dc:	mov	x20, x0
   442e0:	stur	x8, [x29, #-24]
   442e4:	ldr	x9, [x0]
   442e8:	cmp	x8, #0x1
   442ec:	add	x26, x9, #0xa
   442f0:	b.lt	44318 <mpfr_rootn_ui@@Base+0x4b4>  // b.tstop
   442f4:	b.eq	446c0 <mpfr_rootn_ui@@Base+0x85c>  // b.none
   442f8:	cmp	x8, #0x1
   442fc:	b.le	446c8 <mpfr_rootn_ui@@Base+0x864>
   44300:	ldr	x8, [x21, #16]
   44304:	mov	w9, #0x40                  	// #64
   44308:	sub	x8, x8, #0x1
   4430c:	clz	x8, x8
   44310:	sub	x8, x9, x8
   44314:	add	x26, x8, x26
   44318:	mov	x25, #0xfffffffffffffeff    	// #-257
   4431c:	movk	x25, #0x7fff, lsl #48
   44320:	cmp	x26, x25
   44324:	b.gt	446e4 <mpfr_rootn_ui@@Base+0x880>
   44328:	cmp	x26, #0x401
   4432c:	b.lt	4435c <mpfr_rootn_ui@@Base+0x4f8>  // b.tstop
   44330:	sub	x8, x26, #0x1
   44334:	add	x9, x26, #0x3e
   44338:	cmp	x8, #0x0
   4433c:	csel	x8, x9, x8, lt  // lt = tstop
   44340:	asr	x8, x8, #6
   44344:	lsl	x8, x8, #3
   44348:	add	x0, x8, #0x8
   4434c:	str	x0, [sp, #104]
   44350:	bl	d1f0 <mpfr_allocate_func@plt>
   44354:	str	x0, [sp, #112]
   44358:	b	44368 <mpfr_rootn_ui@@Base+0x504>
   4435c:	add	x8, sp, #0x68
   44360:	add	x8, x8, #0x10
   44364:	stp	xzr, x8, [sp, #104]
   44368:	ldr	x8, [sp, #112]
   4436c:	mov	w28, #0x1                   	// #1
   44370:	stur	x26, [x29, #-72]
   44374:	stur	w28, [x29, #-64]
   44378:	stur	x8, [x29, #-48]
   4437c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44380:	ldr	x1, [x0, #2800]
   44384:	add	x0, x0, #0xaf0
   44388:	blr	x1
   4438c:	mrs	x27, tpidr_el0
   44390:	ldr	w8, [x27, x0]
   44394:	str	w8, [sp, #36]
   44398:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4439c:	ldr	x1, [x0, #2736]
   443a0:	add	x0, x0, #0xab0
   443a4:	blr	x1
   443a8:	ldr	x9, [x27, x0]
   443ac:	mov	x8, x0
   443b0:	str	x9, [sp, #24]
   443b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   443b8:	ldr	x1, [x0, #2768]
   443bc:	add	x0, x0, #0xad0
   443c0:	blr	x1
   443c4:	ldr	x9, [x27, x0]
   443c8:	cmp	w19, #0x0
   443cc:	mov	w23, wzr
   443d0:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   443d4:	str	x9, [sp, #16]
   443d8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   443dc:	mov	w11, #0x40                  	// #64
   443e0:	cset	w24, eq  // eq = none
   443e4:	str	w19, [sp, #8]
   443e8:	str	x11, [sp]
   443ec:	str	x9, [x27, x8]
   443f0:	str	x10, [x27, x0]
   443f4:	sub	x0, x29, #0x48
   443f8:	sub	x1, x29, #0x28
   443fc:	mov	w2, wzr
   44400:	bl	c520 <mpfr_log@plt>
   44404:	sub	x0, x29, #0x48
   44408:	sub	x1, x29, #0x48
   4440c:	mov	x2, x22
   44410:	mov	w3, wzr
   44414:	bl	d160 <mpfr_div_ui@plt>
   44418:	ldur	x19, [x29, #-56]
   4441c:	sub	x0, x29, #0x48
   44420:	sub	x1, x29, #0x48
   44424:	mov	w2, wzr
   44428:	bl	cc20 <mpfr_exp@plt>
   4442c:	ldur	x8, [x29, #-56]
   44430:	add	x9, x25, #0x105
   44434:	cmp	x8, x9
   44438:	b.lt	4448c <mpfr_rootn_ui@@Base+0x628>  // b.tstop
   4443c:	ldur	x9, [x29, #-72]
   44440:	cmn	x19, #0x2
   44444:	add	w8, w19, #0x3
   44448:	cinc	x11, x28, eq  // eq = none
   4444c:	csel	x8, x8, x11, gt
   44450:	ldr	x10, [x20]
   44454:	sub	x2, x26, w8, uxtw
   44458:	sub	x8, x9, #0x1
   4445c:	ldur	x0, [x29, #-48]
   44460:	add	x9, x9, #0x3e
   44464:	cmp	x8, #0x0
   44468:	csel	x8, x9, x8, lt  // lt = tstop
   4446c:	asr	x8, x8, #6
   44470:	add	x1, x8, #0x1
   44474:	add	x3, x10, x24
   44478:	bl	c830 <mpfr_round_p@plt>
   4447c:	cbz	w0, 4448c <mpfr_rootn_ui@@Base+0x628>
   44480:	mov	w8, #0x6                   	// #6
   44484:	cbz	w8, 443f4 <mpfr_rootn_ui@@Base+0x590>
   44488:	b	445e0 <mpfr_rootn_ui@@Base+0x77c>
   4448c:	ldr	x8, [x20]
   44490:	add	x0, sp, #0x48
   44494:	add	x1, x8, x24
   44498:	bl	cf60 <mpfr_init2@plt>
   4449c:	ldr	x1, [x21]
   444a0:	add	x0, sp, #0x28
   444a4:	bl	cf60 <mpfr_init2@plt>
   444a8:	ldur	w3, [x29, #-64]
   444ac:	add	x0, sp, #0x48
   444b0:	sub	x1, x29, #0x48
   444b4:	mov	w2, wzr
   444b8:	bl	cb70 <mpfr_set4@plt>
   444bc:	add	x0, sp, #0x28
   444c0:	add	x1, sp, #0x48
   444c4:	mov	x2, x22
   444c8:	mov	w3, wzr
   444cc:	bl	c3d0 <mpfr_pow_ui@plt>
   444d0:	mov	w8, w0
   444d4:	mov	w23, wzr
   444d8:	cbnz	w0, 444f8 <mpfr_rootn_ui@@Base+0x694>
   444dc:	add	x0, sp, #0x28
   444e0:	sub	x1, x29, #0x28
   444e4:	mov	w19, w8
   444e8:	bl	cf40 <mpfr_equal_p@plt>
   444ec:	cmp	w0, #0x0
   444f0:	mov	w8, w19
   444f4:	cset	w23, ne  // ne = any
   444f8:	cbz	w23, 44514 <mpfr_rootn_ui@@Base+0x6b0>
   444fc:	ldr	w3, [x21, #8]
   44500:	ldr	w2, [sp, #8]
   44504:	add	x1, sp, #0x48
   44508:	mov	x0, x20
   4450c:	bl	cb70 <mpfr_set4@plt>
   44510:	mov	w8, w0
   44514:	add	x0, sp, #0x28
   44518:	str	w8, [sp, #12]
   4451c:	bl	c4f0 <mpfr_clear@plt>
   44520:	add	x0, sp, #0x48
   44524:	bl	c4f0 <mpfr_clear@plt>
   44528:	cmp	w23, #0x0
   4452c:	mov	w8, #0x6                   	// #6
   44530:	csel	w8, w8, wzr, ne  // ne = any
   44534:	tbnz	w23, #0, 44484 <mpfr_rootn_ui@@Base+0x620>
   44538:	ldr	x9, [sp]
   4453c:	sub	x8, x25, x26
   44540:	cmp	x9, x8
   44544:	mov	x8, x9
   44548:	b.gt	445c0 <mpfr_rootn_ui@@Base+0x75c>
   4454c:	add	x26, x26, x8
   44550:	cmp	x26, #0x0
   44554:	cinc	x8, x26, lt  // lt = tstop
   44558:	cmp	x26, x25
   4455c:	b.gt	446e4 <mpfr_rootn_ui@@Base+0x880>
   44560:	asr	x8, x8, #1
   44564:	str	x8, [sp]
   44568:	sub	x8, x26, #0x1
   4456c:	add	x9, x26, #0x3e
   44570:	cmp	x8, #0x0
   44574:	ldr	x1, [sp, #104]
   44578:	csel	x8, x9, x8, lt  // lt = tstop
   4457c:	asr	x8, x8, #6
   44580:	lsl	x8, x8, #3
   44584:	add	x2, x8, #0x8
   44588:	str	x2, [sp, #104]
   4458c:	cbz	x1, 4459c <mpfr_rootn_ui@@Base+0x738>
   44590:	ldr	x0, [sp, #112]
   44594:	bl	c660 <mpfr_reallocate_func@plt>
   44598:	b	445a4 <mpfr_rootn_ui@@Base+0x740>
   4459c:	mov	x0, x2
   445a0:	bl	d1f0 <mpfr_allocate_func@plt>
   445a4:	mov	w8, wzr
   445a8:	mov	x9, x0
   445ac:	str	x0, [sp, #112]
   445b0:	stur	x26, [x29, #-72]
   445b4:	stur	x9, [x29, #-48]
   445b8:	stur	w28, [x29, #-64]
   445bc:	b	44484 <mpfr_rootn_ui@@Base+0x620>
   445c0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   445c4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   445c8:	mov	w1, #0x11d                 	// #285
   445cc:	add	x0, x0, #0xb3e
   445d0:	add	x2, x2, #0xa3e
   445d4:	bl	d030 <mpfr_assert_fail@plt>
   445d8:	ldr	x8, [sp]
   445dc:	b	4454c <mpfr_rootn_ui@@Base+0x6e8>
   445e0:	cbnz	w23, 445fc <mpfr_rootn_ui@@Base+0x798>
   445e4:	ldr	w3, [x21, #8]
   445e8:	ldr	w2, [sp, #8]
   445ec:	sub	x1, x29, #0x48
   445f0:	mov	x0, x20
   445f4:	bl	cb70 <mpfr_set4@plt>
   445f8:	str	w0, [sp, #12]
   445fc:	ldr	x1, [sp, #104]
   44600:	ldr	w19, [sp, #36]
   44604:	cbz	x1, 44610 <mpfr_rootn_ui@@Base+0x7ac>
   44608:	ldr	x0, [sp, #112]
   4460c:	bl	d120 <mpfr_free_func@plt>
   44610:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44614:	ldr	x1, [x0, #2800]
   44618:	add	x0, x0, #0xaf0
   4461c:	blr	x1
   44620:	str	w19, [x27, x0]
   44624:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44628:	ldr	x1, [x0, #2736]
   4462c:	add	x0, x0, #0xab0
   44630:	blr	x1
   44634:	ldr	x9, [sp, #24]
   44638:	str	x9, [x27, x0]
   4463c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44640:	ldr	x1, [x0, #2768]
   44644:	add	x0, x0, #0xad0
   44648:	blr	x1
   4464c:	ldr	x10, [sp, #16]
   44650:	str	x10, [x27, x0]
   44654:	ldr	x8, [x20, #16]
   44658:	cmp	x8, x10
   4465c:	b.gt	446ac <mpfr_rootn_ui@@Base+0x848>
   44660:	cmp	x8, x9
   44664:	b.lt	446ac <mpfr_rootn_ui@@Base+0x848>  // b.tstop
   44668:	ldr	w9, [sp, #12]
   4466c:	cbz	w9, 44688 <mpfr_rootn_ui@@Base+0x824>
   44670:	orr	w8, w19, #0x8
   44674:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44678:	ldr	x1, [x0, #2800]
   4467c:	add	x0, x0, #0xaf0
   44680:	blr	x1
   44684:	str	w8, [x27, x0]
   44688:	ldp	x20, x19, [sp, #400]
   4468c:	ldp	x22, x21, [sp, #384]
   44690:	ldp	x24, x23, [sp, #368]
   44694:	ldp	x26, x25, [sp, #352]
   44698:	ldp	x28, x27, [sp, #336]
   4469c:	ldp	x29, x30, [sp, #320]
   446a0:	mov	w0, w9
   446a4:	add	sp, sp, #0x1a0
   446a8:	ret
   446ac:	ldp	w2, w1, [sp, #8]
   446b0:	mov	x0, x20
   446b4:	bl	d020 <mpfr_check_range@plt>
   446b8:	mov	w9, w0
   446bc:	b	44688 <mpfr_rootn_ui@@Base+0x824>
   446c0:	mov	x8, xzr
   446c4:	b	44314 <mpfr_rootn_ui@@Base+0x4b0>
   446c8:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   446cc:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   446d0:	add	x0, x0, #0xb3e
   446d4:	add	x2, x2, #0xb45
   446d8:	mov	w1, #0xe4                  	// #228
   446dc:	bl	d030 <mpfr_assert_fail@plt>
   446e0:	b	44300 <mpfr_rootn_ui@@Base+0x49c>
   446e4:	bl	cdd0 <mpfr_abort_prec_max@plt>

00000000000446e8 <mpfr_root@@Base>:
   446e8:	stp	x29, x30, [sp, #-16]!
   446ec:	cmp	x2, #0x1
   446f0:	mov	x8, x0
   446f4:	mov	x29, sp
   446f8:	b.ls	4471c <mpfr_root@@Base+0x34>  // b.plast
   446fc:	ldr	x10, [x1, #16]
   44700:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   44704:	cmp	x10, x9
   44708:	b.eq	4473c <mpfr_root@@Base+0x54>  // b.none
   4470c:	mov	x0, x8
   44710:	bl	cb80 <mpfr_rootn_ui@plt>
   44714:	ldp	x29, x30, [sp], #16
   44718:	ret
   4471c:	cbz	x2, 44754 <mpfr_root@@Base+0x6c>
   44720:	ldr	w9, [x1, #8]
   44724:	mov	x0, x8
   44728:	mov	w2, w3
   4472c:	mov	w3, w9
   44730:	bl	cb70 <mpfr_set4@plt>
   44734:	ldp	x29, x30, [sp], #16
   44738:	ret
   4473c:	str	x9, [x8, #16]
   44740:	ldr	w9, [x1, #8]
   44744:	mov	w0, wzr
   44748:	str	w9, [x8, #8]
   4474c:	ldp	x29, x30, [sp], #16
   44750:	ret
   44754:	mov	x9, #0x2                   	// #2
   44758:	movk	x9, #0x8000, lsl #48
   4475c:	str	x9, [x8, #16]
   44760:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44764:	ldr	x1, [x0, #2800]
   44768:	add	x0, x0, #0xaf0
   4476c:	blr	x1
   44770:	mov	x8, x0
   44774:	mrs	x9, tpidr_el0
   44778:	ldr	w10, [x9, x8]
   4477c:	mov	w0, wzr
   44780:	orr	w10, w10, #0x4
   44784:	str	w10, [x9, x8]
   44788:	ldp	x29, x30, [sp], #16
   4478c:	ret

0000000000044790 <mpfr_sec@@Base>:
   44790:	sub	sp, sp, #0xa0
   44794:	stp	x29, x30, [sp, #64]
   44798:	stp	x28, x27, [sp, #80]
   4479c:	stp	x26, x25, [sp, #96]
   447a0:	stp	x24, x23, [sp, #112]
   447a4:	stp	x22, x21, [sp, #128]
   447a8:	stp	x20, x19, [sp, #144]
   447ac:	ldr	x9, [x1, #16]
   447b0:	mov	x27, #0x2                   	// #2
   447b4:	movk	x27, #0x8000, lsl #48
   447b8:	add	x8, x27, #0x2
   447bc:	mov	w26, w2
   447c0:	cmp	x9, x8
   447c4:	mov	x20, x0
   447c8:	add	x29, sp, #0x40
   447cc:	b.lt	44ac4 <mpfr_sec@@Base+0x334>  // b.tstop
   447d0:	mov	x21, x1
   447d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   447d8:	ldr	x1, [x0, #2800]
   447dc:	add	x0, x0, #0xaf0
   447e0:	blr	x1
   447e4:	mrs	x24, tpidr_el0
   447e8:	ldr	w23, [x24, x0]
   447ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   447f0:	ldr	x1, [x0, #2736]
   447f4:	add	x0, x0, #0xab0
   447f8:	blr	x1
   447fc:	ldr	x25, [x24, x0]
   44800:	mov	x8, x0
   44804:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44808:	ldr	x1, [x0, #2768]
   4480c:	add	x0, x0, #0xad0
   44810:	blr	x1
   44814:	ldr	x19, [x24, x0]
   44818:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4481c:	str	x10, [x24, x8]
   44820:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   44824:	str	x8, [x24, x0]
   44828:	tbnz	x9, #63, 44834 <mpfr_sec@@Base+0xa4>
   4482c:	mov	w8, wzr
   44830:	b	44850 <mpfr_sec@@Base+0xc0>
   44834:	ldr	x8, [x20]
   44838:	neg	x2, x9, lsl #1
   4483c:	add	x8, x8, #0x1
   44840:	cmp	x2, x8
   44844:	b.hi	44b20 <mpfr_sec@@Base+0x390>  // b.pmore
   44848:	mov	w8, wzr
   4484c:	cbz	w8, 4482c <mpfr_sec@@Base+0x9c>
   44850:	cmp	w8, #0x8
   44854:	b.eq	44a34 <mpfr_sec@@Base+0x2a4>  // b.none
   44858:	cbnz	w8, 44aa0 <mpfr_sec@@Base+0x310>
   4485c:	ldr	x22, [x20]
   44860:	str	w23, [sp, #28]
   44864:	subs	x23, x22, #0x1
   44868:	b.eq	44b54 <mpfr_sec@@Base+0x3c4>  // b.none
   4486c:	b.le	44b5c <mpfr_sec@@Base+0x3cc>
   44870:	clz	x8, x23
   44874:	mov	w9, #0x40                  	// #64
   44878:	sub	x8, x9, x8
   4487c:	add	x8, x22, x8
   44880:	add	x23, x8, #0x3
   44884:	add	x0, sp, #0x20
   44888:	mov	x1, x23
   4488c:	bl	cf60 <mpfr_init2@plt>
   44890:	cmp	w26, #0x0
   44894:	mov	w8, #0x40                  	// #64
   44898:	str	x8, [sp, #16]
   4489c:	str	w26, [sp, #24]
   448a0:	csinc	w8, w26, wzr, ne  // ne = any
   448a4:	cinc	x26, x22, eq  // eq = none
   448a8:	str	w8, [sp, #12]
   448ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   448b0:	ldr	x1, [x0, #2800]
   448b4:	add	x0, x0, #0xaf0
   448b8:	blr	x1
   448bc:	mov	x28, x0
   448c0:	str	wzr, [x24, x0]
   448c4:	add	x0, sp, #0x20
   448c8:	mov	w2, #0x1                   	// #1
   448cc:	mov	x1, x21
   448d0:	bl	c900 <mpfr_cos@plt>
   448d4:	ldrb	w8, [x24, x28]
   448d8:	tbnz	w8, #1, 4497c <mpfr_sec@@Base+0x1ec>
   448dc:	add	x0, sp, #0x20
   448e0:	add	x2, sp, #0x20
   448e4:	mov	w1, #0x1                   	// #1
   448e8:	mov	w3, wzr
   448ec:	bl	c7b0 <mpfr_ui_div@plt>
   448f0:	ldr	x8, [sp, #48]
   448f4:	add	x9, x27, #0x2
   448f8:	cmp	x8, x9
   448fc:	b.lt	4493c <mpfr_sec@@Base+0x1ac>  // b.tstop
   44900:	ldr	x8, [sp, #32]
   44904:	ldr	x0, [sp, #56]
   44908:	sub	x2, x23, #0x2
   4490c:	mov	x3, x26
   44910:	sub	x9, x8, #0x1
   44914:	add	x8, x8, #0x3e
   44918:	cmp	x9, #0x0
   4491c:	csel	x8, x8, x9, lt  // lt = tstop
   44920:	asr	x8, x8, #6
   44924:	add	x1, x8, #0x1
   44928:	bl	c830 <mpfr_round_p@plt>
   4492c:	cbz	w0, 4493c <mpfr_sec@@Base+0x1ac>
   44930:	mov	w8, #0xb                   	// #11
   44934:	cbz	w8, 448ac <mpfr_sec@@Base+0x11c>
   44938:	b	44a04 <mpfr_sec@@Base+0x274>
   4493c:	ldr	x9, [sp, #16]
   44940:	sub	x8, x27, x23
   44944:	sub	x8, x8, #0x103
   44948:	cmp	x9, x8
   4494c:	mov	x8, x9
   44950:	b.gt	449e4 <mpfr_sec@@Base+0x254>
   44954:	add	x23, x23, x8
   44958:	cmp	x23, #0x0
   4495c:	cinc	x8, x23, lt  // lt = tstop
   44960:	asr	x8, x8, #1
   44964:	add	x0, sp, #0x20
   44968:	mov	x1, x23
   4496c:	str	x8, [sp, #16]
   44970:	bl	c330 <mpfr_set_prec@plt>
   44974:	mov	w8, wzr
   44978:	b	44934 <mpfr_sec@@Base+0x1a4>
   4497c:	ldr	w22, [sp, #40]
   44980:	add	x0, sp, #0x20
   44984:	bl	c4f0 <mpfr_clear@plt>
   44988:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4498c:	ldr	x1, [x0, #2800]
   44990:	add	x0, x0, #0xaf0
   44994:	blr	x1
   44998:	ldr	w8, [sp, #28]
   4499c:	str	w8, [x24, x0]
   449a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   449a4:	ldr	x1, [x0, #2736]
   449a8:	add	x0, x0, #0xab0
   449ac:	blr	x1
   449b0:	str	x25, [x24, x0]
   449b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   449b8:	ldr	x1, [x0, #2768]
   449bc:	add	x0, x0, #0xad0
   449c0:	blr	x1
   449c4:	ldr	w1, [sp, #12]
   449c8:	str	x19, [x24, x0]
   449cc:	mov	x0, x20
   449d0:	mov	w2, w22
   449d4:	bl	c880 <mpfr_underflow@plt>
   449d8:	mov	w22, w0
   449dc:	mov	w8, #0x1                   	// #1
   449e0:	b	44934 <mpfr_sec@@Base+0x1a4>
   449e4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   449e8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   449ec:	mov	w1, #0x5f                  	// #95
   449f0:	add	x0, x0, #0xb5c
   449f4:	add	x2, x2, #0x5cf
   449f8:	bl	d030 <mpfr_assert_fail@plt>
   449fc:	ldr	x8, [sp, #16]
   44a00:	b	44954 <mpfr_sec@@Base+0x1c4>
   44a04:	cmp	w8, #0xb
   44a08:	b.ne	44aa0 <mpfr_sec@@Base+0x310>  // b.any
   44a0c:	ldr	w26, [sp, #24]
   44a10:	ldr	w3, [sp, #40]
   44a14:	add	x1, sp, #0x20
   44a18:	mov	x0, x20
   44a1c:	mov	w2, w26
   44a20:	bl	cb70 <mpfr_set4@plt>
   44a24:	mov	w22, w0
   44a28:	add	x0, sp, #0x20
   44a2c:	bl	c4f0 <mpfr_clear@plt>
   44a30:	ldr	w23, [sp, #28]
   44a34:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44a38:	ldr	x1, [x0, #2800]
   44a3c:	add	x0, x0, #0xaf0
   44a40:	blr	x1
   44a44:	str	w23, [x24, x0]
   44a48:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44a4c:	ldr	x1, [x0, #2736]
   44a50:	add	x0, x0, #0xab0
   44a54:	blr	x1
   44a58:	str	x25, [x24, x0]
   44a5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44a60:	ldr	x1, [x0, #2768]
   44a64:	add	x0, x0, #0xad0
   44a68:	blr	x1
   44a6c:	str	x19, [x24, x0]
   44a70:	ldr	x8, [x20, #16]
   44a74:	cmp	x8, x19
   44a78:	b.gt	44b0c <mpfr_sec@@Base+0x37c>
   44a7c:	cmp	x8, x25
   44a80:	b.lt	44b0c <mpfr_sec@@Base+0x37c>  // b.tstop
   44a84:	cbz	w22, 44aa0 <mpfr_sec@@Base+0x310>
   44a88:	orr	w8, w23, #0x8
   44a8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44a90:	ldr	x1, [x0, #2800]
   44a94:	add	x0, x0, #0xaf0
   44a98:	blr	x1
   44a9c:	str	w8, [x24, x0]
   44aa0:	mov	w0, w22
   44aa4:	ldp	x20, x19, [sp, #144]
   44aa8:	ldp	x22, x21, [sp, #128]
   44aac:	ldp	x24, x23, [sp, #112]
   44ab0:	ldp	x26, x25, [sp, #96]
   44ab4:	ldp	x28, x27, [sp, #80]
   44ab8:	ldp	x29, x30, [sp, #64]
   44abc:	add	sp, sp, #0xa0
   44ac0:	ret
   44ac4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   44ac8:	cmp	x9, x8
   44acc:	b.eq	44ae0 <mpfr_sec@@Base+0x350>  // b.none
   44ad0:	mov	x8, #0x2                   	// #2
   44ad4:	movk	x8, #0x8000, lsl #48
   44ad8:	cmp	x9, x8
   44adc:	b.ne	44b78 <mpfr_sec@@Base+0x3e8>  // b.any
   44ae0:	str	x27, [x20, #16]
   44ae4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44ae8:	ldr	x1, [x0, #2800]
   44aec:	add	x0, x0, #0xaf0
   44af0:	blr	x1
   44af4:	mrs	x8, tpidr_el0
   44af8:	ldr	w9, [x8, x0]
   44afc:	mov	w22, wzr
   44b00:	orr	w9, w9, #0x4
   44b04:	str	w9, [x8, x0]
   44b08:	b	44aa0 <mpfr_sec@@Base+0x310>
   44b0c:	mov	x0, x20
   44b10:	mov	w1, w22
   44b14:	mov	w2, w26
   44b18:	bl	d020 <mpfr_check_range@plt>
   44b1c:	b	44b8c <mpfr_sec@@Base+0x3fc>
   44b20:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   44b24:	ldr	x1, [x1, #3928]
   44b28:	mov	w3, #0x1                   	// #1
   44b2c:	mov	x0, x20
   44b30:	mov	w4, w26
   44b34:	bl	ca10 <mpfr_round_near_x@plt>
   44b38:	cmp	w0, #0x0
   44b3c:	mov	w22, w0
   44b40:	cset	w8, ne  // ne = any
   44b44:	cbz	w0, 44848 <mpfr_sec@@Base+0xb8>
   44b48:	lsl	w8, w8, #3
   44b4c:	cbnz	w8, 44850 <mpfr_sec@@Base+0xc0>
   44b50:	b	4482c <mpfr_sec@@Base+0x9c>
   44b54:	mov	x8, xzr
   44b58:	b	4487c <mpfr_sec@@Base+0xec>
   44b5c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   44b60:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   44b64:	add	x0, x0, #0xb5c
   44b68:	add	x2, x2, #0x580
   44b6c:	mov	w1, #0x43                  	// #67
   44b70:	bl	d030 <mpfr_assert_fail@plt>
   44b74:	b	44870 <mpfr_sec@@Base+0xe0>
   44b78:	mov	w1, #0x1                   	// #1
   44b7c:	mov	x0, x20
   44b80:	mov	x2, xzr
   44b84:	mov	w3, w26
   44b88:	bl	cac0 <mpfr_set_ui_2exp@plt>
   44b8c:	mov	w22, w0
   44b90:	b	44aa0 <mpfr_sec@@Base+0x310>

0000000000044b94 <mpfr_csc@@Base>:
   44b94:	sub	sp, sp, #0xa0
   44b98:	stp	x29, x30, [sp, #64]
   44b9c:	stp	x28, x27, [sp, #80]
   44ba0:	stp	x26, x25, [sp, #96]
   44ba4:	stp	x24, x23, [sp, #112]
   44ba8:	stp	x22, x21, [sp, #128]
   44bac:	stp	x20, x19, [sp, #144]
   44bb0:	ldr	x9, [x1, #16]
   44bb4:	mov	x25, #0x2                   	// #2
   44bb8:	movk	x25, #0x8000, lsl #48
   44bbc:	add	x8, x25, #0x2
   44bc0:	mov	x21, x1
   44bc4:	cmp	x9, x8
   44bc8:	mov	x19, x0
   44bcc:	add	x29, sp, #0x40
   44bd0:	b.lt	44f4c <mpfr_csc@@Base+0x3b8>  // b.tstop
   44bd4:	mov	w20, w2
   44bd8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44bdc:	ldr	x1, [x0, #2800]
   44be0:	add	x0, x0, #0xaf0
   44be4:	blr	x1
   44be8:	mrs	x24, tpidr_el0
   44bec:	ldr	w27, [x24, x0]
   44bf0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44bf4:	ldr	x1, [x0, #2736]
   44bf8:	add	x0, x0, #0xab0
   44bfc:	blr	x1
   44c00:	ldr	x26, [x24, x0]
   44c04:	mov	x8, x0
   44c08:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44c0c:	ldr	x1, [x0, #2768]
   44c10:	add	x0, x0, #0xad0
   44c14:	blr	x1
   44c18:	ldr	x10, [x24, x0]
   44c1c:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   44c20:	str	x11, [x24, x0]
   44c24:	str	x10, [sp, #24]
   44c28:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   44c2c:	str	x10, [x24, x8]
   44c30:	ldr	x8, [x21]
   44c34:	ldr	x22, [x19]
   44c38:	cmp	x8, x22
   44c3c:	csel	x8, x8, x22, gt
   44c40:	neg	x8, x8, lsl #1
   44c44:	cmp	x9, x8
   44c48:	b.le	44df0 <mpfr_csc@@Base+0x25c>
   44c4c:	subs	x23, x22, #0x1
   44c50:	str	x26, [sp, #16]
   44c54:	b.eq	44fac <mpfr_csc@@Base+0x418>  // b.none
   44c58:	b.le	44fb4 <mpfr_csc@@Base+0x420>
   44c5c:	clz	x8, x23
   44c60:	mov	w9, #0x40                  	// #64
   44c64:	sub	x8, x9, x8
   44c68:	add	x8, x22, x8
   44c6c:	add	x23, x8, #0x3
   44c70:	add	x0, sp, #0x20
   44c74:	mov	x1, x23
   44c78:	bl	cf60 <mpfr_init2@plt>
   44c7c:	cmp	w20, #0x0
   44c80:	mov	w8, #0x40                  	// #64
   44c84:	str	x8, [sp, #8]
   44c88:	csinc	w8, w20, wzr, ne  // ne = any
   44c8c:	cinc	x26, x22, eq  // eq = none
   44c90:	str	w8, [sp, #4]
   44c94:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44c98:	ldr	x1, [x0, #2800]
   44c9c:	add	x0, x0, #0xaf0
   44ca0:	blr	x1
   44ca4:	mov	x28, x0
   44ca8:	str	wzr, [x24, x0]
   44cac:	add	x0, sp, #0x20
   44cb0:	mov	w2, #0x1                   	// #1
   44cb4:	mov	x1, x21
   44cb8:	bl	c920 <mpfr_sin@plt>
   44cbc:	ldrb	w8, [x24, x28]
   44cc0:	tbnz	w8, #1, 44d64 <mpfr_csc@@Base+0x1d0>
   44cc4:	add	x0, sp, #0x20
   44cc8:	add	x2, sp, #0x20
   44ccc:	mov	w1, #0x1                   	// #1
   44cd0:	mov	w3, wzr
   44cd4:	bl	c7b0 <mpfr_ui_div@plt>
   44cd8:	ldr	x8, [sp, #48]
   44cdc:	add	x9, x25, #0x2
   44ce0:	cmp	x8, x9
   44ce4:	b.lt	44d24 <mpfr_csc@@Base+0x190>  // b.tstop
   44ce8:	ldr	x8, [sp, #32]
   44cec:	ldr	x0, [sp, #56]
   44cf0:	sub	x2, x23, #0x2
   44cf4:	mov	x3, x26
   44cf8:	sub	x9, x8, #0x1
   44cfc:	add	x8, x8, #0x3e
   44d00:	cmp	x9, #0x0
   44d04:	csel	x8, x8, x9, lt  // lt = tstop
   44d08:	asr	x8, x8, #6
   44d0c:	add	x1, x8, #0x1
   44d10:	bl	c830 <mpfr_round_p@plt>
   44d14:	cbz	w0, 44d24 <mpfr_csc@@Base+0x190>
   44d18:	mov	w8, #0xd                   	// #13
   44d1c:	cbz	w8, 44c94 <mpfr_csc@@Base+0x100>
   44d20:	b	44e2c <mpfr_csc@@Base+0x298>
   44d24:	ldr	x9, [sp, #8]
   44d28:	sub	x8, x25, x23
   44d2c:	sub	x8, x8, #0x103
   44d30:	cmp	x9, x8
   44d34:	mov	x8, x9
   44d38:	b.gt	44dd0 <mpfr_csc@@Base+0x23c>
   44d3c:	add	x23, x23, x8
   44d40:	cmp	x23, #0x0
   44d44:	cinc	x8, x23, lt  // lt = tstop
   44d48:	asr	x8, x8, #1
   44d4c:	add	x0, sp, #0x20
   44d50:	mov	x1, x23
   44d54:	str	x8, [sp, #8]
   44d58:	bl	c330 <mpfr_set_prec@plt>
   44d5c:	mov	w8, wzr
   44d60:	b	44d1c <mpfr_csc@@Base+0x188>
   44d64:	ldr	w22, [sp, #40]
   44d68:	add	x0, sp, #0x20
   44d6c:	bl	c4f0 <mpfr_clear@plt>
   44d70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44d74:	ldr	x1, [x0, #2800]
   44d78:	add	x0, x0, #0xaf0
   44d7c:	blr	x1
   44d80:	str	w27, [x24, x0]
   44d84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44d88:	ldr	x1, [x0, #2736]
   44d8c:	add	x0, x0, #0xab0
   44d90:	blr	x1
   44d94:	ldr	x8, [sp, #16]
   44d98:	str	x8, [x24, x0]
   44d9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44da0:	ldr	x1, [x0, #2768]
   44da4:	add	x0, x0, #0xad0
   44da8:	blr	x1
   44dac:	ldr	x8, [sp, #24]
   44db0:	ldr	w1, [sp, #4]
   44db4:	mov	w2, w22
   44db8:	str	x8, [x24, x0]
   44dbc:	mov	x0, x19
   44dc0:	bl	c880 <mpfr_underflow@plt>
   44dc4:	mov	w22, w0
   44dc8:	mov	w8, #0x1                   	// #1
   44dcc:	b	44d1c <mpfr_csc@@Base+0x188>
   44dd0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   44dd4:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   44dd8:	mov	w1, #0x5f                  	// #95
   44ddc:	add	x0, x0, #0xb5c
   44de0:	add	x2, x2, #0x5cf
   44de4:	bl	d030 <mpfr_assert_fail@plt>
   44de8:	ldr	x8, [sp, #8]
   44dec:	b	44d3c <mpfr_csc@@Base+0x1a8>
   44df0:	ldr	w23, [x21, #8]
   44df4:	mov	w1, #0x1                   	// #1
   44df8:	mov	x0, x19
   44dfc:	mov	x2, x21
   44e00:	mov	w3, w20
   44e04:	bl	c7b0 <mpfr_ui_div@plt>
   44e08:	cbz	w0, 44eec <mpfr_csc@@Base+0x358>
   44e0c:	mov	w22, w0
   44e10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44e14:	ldr	x1, [x0, #2800]
   44e18:	add	x0, x0, #0xaf0
   44e1c:	blr	x1
   44e20:	ldr	w8, [x24, x0]
   44e24:	orr	w27, w8, w27
   44e28:	b	44e58 <mpfr_csc@@Base+0x2c4>
   44e2c:	cmp	w8, #0xd
   44e30:	b.ne	44ec8 <mpfr_csc@@Base+0x334>  // b.any
   44e34:	ldr	w3, [sp, #40]
   44e38:	add	x1, sp, #0x20
   44e3c:	mov	x0, x19
   44e40:	mov	w2, w20
   44e44:	bl	cb70 <mpfr_set4@plt>
   44e48:	mov	w22, w0
   44e4c:	add	x0, sp, #0x20
   44e50:	bl	c4f0 <mpfr_clear@plt>
   44e54:	ldr	x26, [sp, #16]
   44e58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44e5c:	ldr	x1, [x0, #2800]
   44e60:	add	x0, x0, #0xaf0
   44e64:	blr	x1
   44e68:	str	w27, [x24, x0]
   44e6c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44e70:	ldr	x1, [x0, #2736]
   44e74:	add	x0, x0, #0xab0
   44e78:	blr	x1
   44e7c:	str	x26, [x24, x0]
   44e80:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44e84:	ldr	x1, [x0, #2768]
   44e88:	add	x0, x0, #0xad0
   44e8c:	blr	x1
   44e90:	ldr	x9, [sp, #24]
   44e94:	str	x9, [x24, x0]
   44e98:	ldr	x8, [x19, #16]
   44e9c:	cmp	x8, x9
   44ea0:	b.gt	44f94 <mpfr_csc@@Base+0x400>
   44ea4:	cmp	x8, x26
   44ea8:	b.lt	44f94 <mpfr_csc@@Base+0x400>  // b.tstop
   44eac:	cbz	w22, 44ec8 <mpfr_csc@@Base+0x334>
   44eb0:	orr	w8, w27, #0x8
   44eb4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44eb8:	ldr	x1, [x0, #2800]
   44ebc:	add	x0, x0, #0xaf0
   44ec0:	blr	x1
   44ec4:	str	w8, [x24, x0]
   44ec8:	mov	w0, w22
   44ecc:	ldp	x20, x19, [sp, #144]
   44ed0:	ldp	x22, x21, [sp, #128]
   44ed4:	ldp	x24, x23, [sp, #112]
   44ed8:	ldp	x26, x25, [sp, #96]
   44edc:	ldp	x28, x27, [sp, #80]
   44ee0:	ldp	x29, x30, [sp, #64]
   44ee4:	add	sp, sp, #0xa0
   44ee8:	ret
   44eec:	cmp	w23, #0x0
   44ef0:	mov	w8, #0x2                   	// #2
   44ef4:	cinc	w8, w8, le
   44ef8:	cmp	w20, #0x4
   44efc:	csel	w20, w8, w20, eq  // eq = none
   44f00:	cmp	w20, #0x3
   44f04:	b.eq	44f2c <mpfr_csc@@Base+0x398>  // b.none
   44f08:	cmp	w20, #0x2
   44f0c:	b.ne	44f44 <mpfr_csc@@Base+0x3b0>  // b.any
   44f10:	cmp	w23, #0x1
   44f14:	b.lt	44f20 <mpfr_csc@@Base+0x38c>  // b.tstop
   44f18:	mov	x0, x19
   44f1c:	bl	c5c0 <mpfr_nextabove@plt>
   44f20:	mov	w20, #0x2                   	// #2
   44f24:	mov	w22, #0x1                   	// #1
   44f28:	b	44e10 <mpfr_csc@@Base+0x27c>
   44f2c:	tbz	w23, #31, 44f38 <mpfr_csc@@Base+0x3a4>
   44f30:	mov	x0, x19
   44f34:	bl	c230 <mpfr_nextbelow@plt>
   44f38:	mov	w20, #0x3                   	// #3
   44f3c:	mov	w22, #0xffffffff            	// #-1
   44f40:	b	44e10 <mpfr_csc@@Base+0x27c>
   44f44:	neg	w22, w23
   44f48:	b	44e10 <mpfr_csc@@Base+0x27c>
   44f4c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   44f50:	cmp	x9, x8
   44f54:	b.eq	44f68 <mpfr_csc@@Base+0x3d4>  // b.none
   44f58:	mov	x8, #0x2                   	// #2
   44f5c:	movk	x8, #0x8000, lsl #48
   44f60:	cmp	x9, x8
   44f64:	b.ne	44fd0 <mpfr_csc@@Base+0x43c>  // b.any
   44f68:	str	x25, [x19, #16]
   44f6c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44f70:	ldr	x1, [x0, #2800]
   44f74:	add	x0, x0, #0xaf0
   44f78:	blr	x1
   44f7c:	mrs	x8, tpidr_el0
   44f80:	ldr	w9, [x8, x0]
   44f84:	mov	w22, wzr
   44f88:	orr	w9, w9, #0x4
   44f8c:	str	w9, [x8, x0]
   44f90:	b	44ec8 <mpfr_csc@@Base+0x334>
   44f94:	mov	x0, x19
   44f98:	mov	w1, w22
   44f9c:	mov	w2, w20
   44fa0:	bl	d020 <mpfr_check_range@plt>
   44fa4:	mov	w22, w0
   44fa8:	b	44ec8 <mpfr_csc@@Base+0x334>
   44fac:	mov	x8, xzr
   44fb0:	b	44c68 <mpfr_csc@@Base+0xd4>
   44fb4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   44fb8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   44fbc:	add	x0, x0, #0xb5c
   44fc0:	add	x2, x2, #0x580
   44fc4:	mov	w1, #0x43                  	// #67
   44fc8:	bl	d030 <mpfr_assert_fail@plt>
   44fcc:	b	44c5c <mpfr_csc@@Base+0xc8>
   44fd0:	ldr	w8, [x21, #8]
   44fd4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   44fd8:	str	x9, [x19, #16]
   44fdc:	str	w8, [x19, #8]
   44fe0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   44fe4:	ldr	x1, [x0, #2800]
   44fe8:	add	x0, x0, #0xaf0
   44fec:	blr	x1
   44ff0:	mrs	x8, tpidr_el0
   44ff4:	ldr	w9, [x8, x0]
   44ff8:	mov	w22, wzr
   44ffc:	orr	w9, w9, #0x20
   45000:	str	w9, [x8, x0]
   45004:	b	44ec8 <mpfr_csc@@Base+0x334>

0000000000045008 <mpfr_cot@@Base>:
   45008:	sub	sp, sp, #0xa0
   4500c:	stp	x29, x30, [sp, #64]
   45010:	stp	x28, x27, [sp, #80]
   45014:	stp	x26, x25, [sp, #96]
   45018:	stp	x24, x23, [sp, #112]
   4501c:	stp	x22, x21, [sp, #128]
   45020:	stp	x20, x19, [sp, #144]
   45024:	ldr	x9, [x1, #16]
   45028:	mov	x25, #0x2                   	// #2
   4502c:	movk	x25, #0x8000, lsl #48
   45030:	add	x8, x25, #0x2
   45034:	mov	x21, x1
   45038:	cmp	x9, x8
   4503c:	mov	x19, x0
   45040:	add	x29, sp, #0x40
   45044:	b.lt	4543c <mpfr_cot@@Base+0x434>  // b.tstop
   45048:	mov	w20, w2
   4504c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45050:	ldr	x1, [x0, #2800]
   45054:	add	x0, x0, #0xaf0
   45058:	blr	x1
   4505c:	mrs	x24, tpidr_el0
   45060:	ldr	w27, [x24, x0]
   45064:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45068:	ldr	x1, [x0, #2736]
   4506c:	add	x0, x0, #0xab0
   45070:	blr	x1
   45074:	ldr	x26, [x24, x0]
   45078:	mov	x8, x0
   4507c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45080:	ldr	x1, [x0, #2768]
   45084:	add	x0, x0, #0xad0
   45088:	blr	x1
   4508c:	ldr	x10, [x24, x0]
   45090:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   45094:	str	x11, [x24, x0]
   45098:	str	x10, [sp, #24]
   4509c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   450a0:	str	x10, [x24, x8]
   450a4:	ldr	x8, [x21]
   450a8:	ldr	x22, [x19]
   450ac:	cmp	x8, x22
   450b0:	csel	x8, x8, x22, gt
   450b4:	neg	x8, x8, lsl #1
   450b8:	cmp	x9, x8
   450bc:	b.ge	45108 <mpfr_cot@@Base+0x100>  // b.tcont
   450c0:	ldrsw	x23, [x21, #8]
   450c4:	mov	x8, #0x2                   	// #2
   450c8:	movk	x8, #0xc000, lsl #48
   450cc:	cmp	x9, x8
   450d0:	b.ne	452dc <mpfr_cot@@Base+0x2d4>  // b.any
   450d4:	mov	x0, x21
   450d8:	bl	c360 <mpfr_powerof2_raw@plt>
   450dc:	cmp	w0, #0x0
   450e0:	cset	w25, ne  // ne = any
   450e4:	cbnz	w25, 452e4 <mpfr_cot@@Base+0x2dc>
   450e8:	mov	w1, #0x1                   	// #1
   450ec:	mov	x0, x19
   450f0:	mov	x2, x21
   450f4:	mov	w3, w20
   450f8:	bl	c7b0 <mpfr_ui_div@plt>
   450fc:	mov	w22, w0
   45100:	cbnz	w22, 45390 <mpfr_cot@@Base+0x388>
   45104:	b	45310 <mpfr_cot@@Base+0x308>
   45108:	subs	x23, x22, #0x1
   4510c:	str	x26, [sp, #16]
   45110:	b.eq	4549c <mpfr_cot@@Base+0x494>  // b.none
   45114:	b.le	454a4 <mpfr_cot@@Base+0x49c>
   45118:	clz	x8, x23
   4511c:	mov	w9, #0x40                  	// #64
   45120:	sub	x8, x9, x8
   45124:	add	x8, x22, x8
   45128:	add	x23, x8, #0x3
   4512c:	add	x0, sp, #0x20
   45130:	mov	x1, x23
   45134:	bl	cf60 <mpfr_init2@plt>
   45138:	cmp	w20, #0x0
   4513c:	mov	w8, #0x40                  	// #64
   45140:	str	x8, [sp, #8]
   45144:	csinc	w8, w20, wzr, ne  // ne = any
   45148:	cinc	x26, x22, eq  // eq = none
   4514c:	str	w8, [sp, #4]
   45150:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45154:	ldr	x1, [x0, #2800]
   45158:	add	x0, x0, #0xaf0
   4515c:	blr	x1
   45160:	mov	x28, x0
   45164:	str	wzr, [x24, x0]
   45168:	add	x0, sp, #0x20
   4516c:	mov	w2, #0x1                   	// #1
   45170:	mov	x1, x21
   45174:	bl	c040 <mpfr_tan@plt>
   45178:	ldrb	w8, [x24, x28]
   4517c:	tbnz	w8, #1, 45220 <mpfr_cot@@Base+0x218>
   45180:	add	x0, sp, #0x20
   45184:	add	x2, sp, #0x20
   45188:	mov	w1, #0x1                   	// #1
   4518c:	mov	w3, wzr
   45190:	bl	c7b0 <mpfr_ui_div@plt>
   45194:	ldr	x8, [sp, #48]
   45198:	add	x9, x25, #0x2
   4519c:	cmp	x8, x9
   451a0:	b.lt	451e0 <mpfr_cot@@Base+0x1d8>  // b.tstop
   451a4:	ldr	x8, [sp, #32]
   451a8:	ldr	x0, [sp, #56]
   451ac:	sub	x2, x23, #0x2
   451b0:	mov	x3, x26
   451b4:	sub	x9, x8, #0x1
   451b8:	add	x8, x8, #0x3e
   451bc:	cmp	x9, #0x0
   451c0:	csel	x8, x8, x9, lt  // lt = tstop
   451c4:	asr	x8, x8, #6
   451c8:	add	x1, x8, #0x1
   451cc:	bl	c830 <mpfr_round_p@plt>
   451d0:	cbz	w0, 451e0 <mpfr_cot@@Base+0x1d8>
   451d4:	mov	w8, #0xd                   	// #13
   451d8:	cbz	w8, 45150 <mpfr_cot@@Base+0x148>
   451dc:	b	452ac <mpfr_cot@@Base+0x2a4>
   451e0:	ldr	x9, [sp, #8]
   451e4:	sub	x8, x25, x23
   451e8:	sub	x8, x8, #0x103
   451ec:	cmp	x9, x8
   451f0:	mov	x8, x9
   451f4:	b.gt	4528c <mpfr_cot@@Base+0x284>
   451f8:	add	x23, x23, x8
   451fc:	cmp	x23, #0x0
   45200:	cinc	x8, x23, lt  // lt = tstop
   45204:	asr	x8, x8, #1
   45208:	add	x0, sp, #0x20
   4520c:	mov	x1, x23
   45210:	str	x8, [sp, #8]
   45214:	bl	c330 <mpfr_set_prec@plt>
   45218:	mov	w8, wzr
   4521c:	b	451d8 <mpfr_cot@@Base+0x1d0>
   45220:	ldr	w22, [sp, #40]
   45224:	add	x0, sp, #0x20
   45228:	bl	c4f0 <mpfr_clear@plt>
   4522c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45230:	ldr	x1, [x0, #2800]
   45234:	add	x0, x0, #0xaf0
   45238:	blr	x1
   4523c:	str	w27, [x24, x0]
   45240:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45244:	ldr	x1, [x0, #2736]
   45248:	add	x0, x0, #0xab0
   4524c:	blr	x1
   45250:	ldr	x8, [sp, #16]
   45254:	str	x8, [x24, x0]
   45258:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4525c:	ldr	x1, [x0, #2768]
   45260:	add	x0, x0, #0xad0
   45264:	blr	x1
   45268:	ldr	x8, [sp, #24]
   4526c:	ldr	w1, [sp, #4]
   45270:	mov	w2, w22
   45274:	str	x8, [x24, x0]
   45278:	mov	x0, x19
   4527c:	bl	c880 <mpfr_underflow@plt>
   45280:	mov	w22, w0
   45284:	mov	w8, #0x1                   	// #1
   45288:	b	451d8 <mpfr_cot@@Base+0x1d0>
   4528c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   45290:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   45294:	mov	w1, #0x5f                  	// #95
   45298:	add	x0, x0, #0xb5c
   4529c:	add	x2, x2, #0x5cf
   452a0:	bl	d030 <mpfr_assert_fail@plt>
   452a4:	ldr	x8, [sp, #8]
   452a8:	b	451f8 <mpfr_cot@@Base+0x1f0>
   452ac:	cmp	w8, #0xd
   452b0:	b.ne	45418 <mpfr_cot@@Base+0x410>  // b.any
   452b4:	ldr	w3, [sp, #40]
   452b8:	add	x1, sp, #0x20
   452bc:	mov	x0, x19
   452c0:	mov	w2, w20
   452c4:	bl	cb70 <mpfr_set4@plt>
   452c8:	mov	w22, w0
   452cc:	add	x0, sp, #0x20
   452d0:	bl	c4f0 <mpfr_clear@plt>
   452d4:	ldr	x26, [sp, #16]
   452d8:	b	453a8 <mpfr_cot@@Base+0x3a0>
   452dc:	mov	w25, wzr
   452e0:	cbz	w25, 450e8 <mpfr_cot@@Base+0xe0>
   452e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   452e8:	ldr	x1, [x0, #2768]
   452ec:	add	x0, x0, #0xad0
   452f0:	blr	x1
   452f4:	ldr	x2, [x24, x0]
   452f8:	mov	x0, x19
   452fc:	mov	x1, x23
   45300:	mov	w3, wzr
   45304:	bl	bed0 <mpfr_set_si_2exp@plt>
   45308:	mov	w22, wzr
   4530c:	cbnz	w22, 45390 <mpfr_cot@@Base+0x388>
   45310:	cmp	w23, #0x0
   45314:	mov	w8, #0x2                   	// #2
   45318:	cinc	w8, w8, le
   4531c:	cmp	w20, #0x4
   45320:	csel	w20, w8, w20, eq  // eq = none
   45324:	cmp	w20, #0x2
   45328:	b.eq	45338 <mpfr_cot@@Base+0x330>  // b.none
   4532c:	tbz	w23, #31, 45354 <mpfr_cot@@Base+0x34c>
   45330:	cmp	w20, #0x1
   45334:	b.ne	45354 <mpfr_cot@@Base+0x34c>  // b.any
   45338:	tbnz	w23, #31, 45344 <mpfr_cot@@Base+0x33c>
   4533c:	mov	w22, #0x1                   	// #1
   45340:	b	45378 <mpfr_cot@@Base+0x370>
   45344:	mov	x0, x19
   45348:	bl	c5c0 <mpfr_nextabove@plt>
   4534c:	mov	w22, #0x1                   	// #1
   45350:	b	45378 <mpfr_cot@@Base+0x370>
   45354:	orr	w8, w20, #0x2
   45358:	cmp	w8, #0x3
   4535c:	csinv	w22, w23, wzr, ne  // ne = any
   45360:	b.ne	45378 <mpfr_cot@@Base+0x370>  // b.any
   45364:	cmp	w23, #0x1
   45368:	b.lt	45378 <mpfr_cot@@Base+0x370>  // b.tstop
   4536c:	mov	x0, x19
   45370:	bl	c230 <mpfr_nextbelow@plt>
   45374:	mov	w22, #0xffffffff            	// #-1
   45378:	cbz	w25, 45390 <mpfr_cot@@Base+0x388>
   4537c:	mov	w2, #0x1                   	// #1
   45380:	mov	x0, x19
   45384:	mov	x1, x19
   45388:	mov	w3, w20
   4538c:	bl	c780 <mpfr_mul_2ui@plt>
   45390:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45394:	ldr	x1, [x0, #2800]
   45398:	add	x0, x0, #0xaf0
   4539c:	blr	x1
   453a0:	ldr	w8, [x24, x0]
   453a4:	orr	w27, w8, w27
   453a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   453ac:	ldr	x1, [x0, #2800]
   453b0:	add	x0, x0, #0xaf0
   453b4:	blr	x1
   453b8:	str	w27, [x24, x0]
   453bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   453c0:	ldr	x1, [x0, #2736]
   453c4:	add	x0, x0, #0xab0
   453c8:	blr	x1
   453cc:	str	x26, [x24, x0]
   453d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   453d4:	ldr	x1, [x0, #2768]
   453d8:	add	x0, x0, #0xad0
   453dc:	blr	x1
   453e0:	ldr	x9, [sp, #24]
   453e4:	str	x9, [x24, x0]
   453e8:	ldr	x8, [x19, #16]
   453ec:	cmp	x8, x9
   453f0:	b.gt	45484 <mpfr_cot@@Base+0x47c>
   453f4:	cmp	x8, x26
   453f8:	b.lt	45484 <mpfr_cot@@Base+0x47c>  // b.tstop
   453fc:	cbz	w22, 45418 <mpfr_cot@@Base+0x410>
   45400:	orr	w8, w27, #0x8
   45404:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45408:	ldr	x1, [x0, #2800]
   4540c:	add	x0, x0, #0xaf0
   45410:	blr	x1
   45414:	str	w8, [x24, x0]
   45418:	mov	w0, w22
   4541c:	ldp	x20, x19, [sp, #144]
   45420:	ldp	x22, x21, [sp, #128]
   45424:	ldp	x24, x23, [sp, #112]
   45428:	ldp	x26, x25, [sp, #96]
   4542c:	ldp	x28, x27, [sp, #80]
   45430:	ldp	x29, x30, [sp, #64]
   45434:	add	sp, sp, #0xa0
   45438:	ret
   4543c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   45440:	cmp	x9, x8
   45444:	b.eq	45458 <mpfr_cot@@Base+0x450>  // b.none
   45448:	mov	x8, #0x2                   	// #2
   4544c:	movk	x8, #0x8000, lsl #48
   45450:	cmp	x9, x8
   45454:	b.ne	454c0 <mpfr_cot@@Base+0x4b8>  // b.any
   45458:	str	x25, [x19, #16]
   4545c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45460:	ldr	x1, [x0, #2800]
   45464:	add	x0, x0, #0xaf0
   45468:	blr	x1
   4546c:	mrs	x8, tpidr_el0
   45470:	ldr	w9, [x8, x0]
   45474:	mov	w22, wzr
   45478:	orr	w9, w9, #0x4
   4547c:	str	w9, [x8, x0]
   45480:	b	45418 <mpfr_cot@@Base+0x410>
   45484:	mov	x0, x19
   45488:	mov	w1, w22
   4548c:	mov	w2, w20
   45490:	bl	d020 <mpfr_check_range@plt>
   45494:	mov	w22, w0
   45498:	b	45418 <mpfr_cot@@Base+0x410>
   4549c:	mov	x8, xzr
   454a0:	b	45124 <mpfr_cot@@Base+0x11c>
   454a4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   454a8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   454ac:	add	x0, x0, #0xb5c
   454b0:	add	x2, x2, #0x580
   454b4:	mov	w1, #0x43                  	// #67
   454b8:	bl	d030 <mpfr_assert_fail@plt>
   454bc:	b	45118 <mpfr_cot@@Base+0x110>
   454c0:	ldr	w8, [x21, #8]
   454c4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   454c8:	str	x9, [x19, #16]
   454cc:	str	w8, [x19, #8]
   454d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   454d4:	ldr	x1, [x0, #2800]
   454d8:	add	x0, x0, #0xaf0
   454dc:	blr	x1
   454e0:	mrs	x8, tpidr_el0
   454e4:	ldr	w9, [x8, x0]
   454e8:	mov	w22, wzr
   454ec:	orr	w9, w9, #0x20
   454f0:	str	w9, [x8, x0]
   454f4:	b	45418 <mpfr_cot@@Base+0x410>

00000000000454f8 <mpfr_eint@@Base>:
   454f8:	sub	sp, sp, #0x120
   454fc:	stp	d9, d8, [sp, #176]
   45500:	stp	x29, x30, [sp, #192]
   45504:	stp	x28, x27, [sp, #208]
   45508:	stp	x26, x25, [sp, #224]
   4550c:	stp	x24, x23, [sp, #240]
   45510:	stp	x22, x21, [sp, #256]
   45514:	stp	x20, x19, [sp, #272]
   45518:	ldr	x8, [x1, #16]
   4551c:	mov	x23, #0x4                   	// #4
   45520:	movk	x23, #0x8000, lsl #48
   45524:	mov	x21, x1
   45528:	cmp	x8, x23
   4552c:	mov	x19, x0
   45530:	str	d10, [sp, #160]
   45534:	add	x29, sp, #0xa0
   45538:	b.lt	45acc <mpfr_eint@@Base+0x5d4>  // b.tstop
   4553c:	ldr	x9, [x21]
   45540:	mov	w10, #0x1                   	// #1
   45544:	mov	w27, w2
   45548:	str	x9, [sp, #56]
   4554c:	ldr	x9, [x21, #24]
   45550:	str	w10, [sp, #64]
   45554:	stp	x8, x9, [sp, #72]
   45558:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4555c:	ldr	x1, [x0, #2800]
   45560:	add	x0, x0, #0xaf0
   45564:	blr	x1
   45568:	mrs	x26, tpidr_el0
   4556c:	ldr	w25, [x26, x0]
   45570:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45574:	ldr	x1, [x0, #2736]
   45578:	add	x0, x0, #0xab0
   4557c:	blr	x1
   45580:	ldr	x20, [x26, x0]
   45584:	mov	x8, x0
   45588:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4558c:	ldr	x1, [x0, #2768]
   45590:	add	x0, x0, #0xad0
   45594:	blr	x1
   45598:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4559c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   455a0:	ldr	x28, [x26, x0]
   455a4:	str	x9, [x26, x8]
   455a8:	str	x10, [x26, x0]
   455ac:	ldr	x22, [x19]
   455b0:	cmp	x22, #0x1
   455b4:	b.eq	45b18 <mpfr_eint@@Base+0x620>  // b.none
   455b8:	b.le	45b20 <mpfr_eint@@Base+0x628>
   455bc:	ldr	x8, [x19]
   455c0:	mov	w9, #0x80                  	// #128
   455c4:	sub	x8, x8, #0x1
   455c8:	clz	x8, x8
   455cc:	sub	w8, w9, w8, lsl #1
   455d0:	sxtw	x24, w8
   455d4:	sub	x0, x29, #0x28
   455d8:	mov	w1, #0x40                  	// #64
   455dc:	bl	cf60 <mpfr_init2@plt>
   455e0:	sub	x0, x29, #0x48
   455e4:	mov	w1, #0x40                  	// #64
   455e8:	bl	cf60 <mpfr_init2@plt>
   455ec:	ldr	w8, [x21, #8]
   455f0:	cmp	w8, #0x1
   455f4:	b.lt	456bc <mpfr_eint@@Base+0x1c4>  // b.tstop
   455f8:	sub	x0, x29, #0x28
   455fc:	mov	w2, #0x2                   	// #2
   45600:	mov	x1, x21
   45604:	bl	c520 <mpfr_log@plt>
   45608:	sub	x0, x29, #0x48
   4560c:	sub	x2, x29, #0x28
   45610:	mov	w3, #0x3                   	// #3
   45614:	mov	x1, x21
   45618:	bl	bfd0 <mpfr_sub@plt>
   4561c:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
   45620:	ldr	x2, [x2, #4048]
   45624:	sub	x0, x29, #0x48
   45628:	sub	x1, x29, #0x48
   4562c:	mov	w3, #0x3                   	// #3
   45630:	bl	caf0 <mpfr_div@plt>
   45634:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45638:	ldr	x1, [x0, #2768]
   4563c:	add	x0, x0, #0xad0
   45640:	blr	x1
   45644:	ldr	x1, [x26, x0]
   45648:	sub	x0, x29, #0x48
   4564c:	mov	x2, xzr
   45650:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   45654:	tbnz	w0, #31, 456bc <mpfr_eint@@Base+0x1c4>
   45658:	sub	x0, x29, #0x28
   4565c:	bl	c4f0 <mpfr_clear@plt>
   45660:	sub	x0, x29, #0x48
   45664:	bl	c4f0 <mpfr_clear@plt>
   45668:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4566c:	ldr	x1, [x0, #2800]
   45670:	add	x0, x0, #0xaf0
   45674:	blr	x1
   45678:	str	w25, [x26, x0]
   4567c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45680:	ldr	x1, [x0, #2736]
   45684:	add	x0, x0, #0xab0
   45688:	blr	x1
   4568c:	str	x20, [x26, x0]
   45690:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45694:	ldr	x1, [x0, #2768]
   45698:	add	x0, x0, #0xad0
   4569c:	blr	x1
   456a0:	str	x28, [x26, x0]
   456a4:	mov	w2, #0x1                   	// #1
   456a8:	mov	x0, x19
   456ac:	mov	w1, w27
   456b0:	bl	c3a0 <mpfr_overflow@plt>
   456b4:	mov	w21, w0
   456b8:	b	459f8 <mpfr_eint@@Base+0x500>
   456bc:	ldr	w8, [x21, #8]
   456c0:	tbnz	w8, #31, 45a24 <mpfr_eint@@Base+0x52c>
   456c4:	ldr	w8, [x21, #8]
   456c8:	add	x9, x22, x24
   456cc:	add	x22, x9, #0x6
   456d0:	cmp	w8, #0x1
   456d4:	b.lt	45744 <mpfr_eint@@Base+0x24c>  // b.tstop
   456d8:	ldr	x8, [x21, #16]
   456dc:	cmn	x8, #0x1
   456e0:	b.ne	45744 <mpfr_eint@@Base+0x24c>  // b.any
   456e4:	add	x0, sp, #0x18
   456e8:	mov	w1, #0x20                  	// #32
   456ec:	mov	w24, #0x20                  	// #32
   456f0:	bl	cf60 <mpfr_init2@plt>
   456f4:	mov	w1, #0xa54b                	// #42315
   456f8:	add	x0, sp, #0x18
   456fc:	movk	w1, #0x5f5c, lsl #16
   45700:	mov	x2, #0xffffffffffffffe0    	// #-32
   45704:	mov	w3, wzr
   45708:	bl	cac0 <mpfr_set_ui_2exp@plt>
   4570c:	add	x0, sp, #0x18
   45710:	add	x2, sp, #0x18
   45714:	mov	x1, x21
   45718:	mov	w3, wzr
   4571c:	bl	bfd0 <mpfr_sub@plt>
   45720:	ldr	x8, [sp, #40]
   45724:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   45728:	add	x0, sp, #0x18
   4572c:	neg	x10, x8
   45730:	and	x10, x10, x8, asr #63
   45734:	cmp	x8, x9
   45738:	csel	x8, x24, x10, eq  // eq = none
   4573c:	add	x22, x8, x22
   45740:	bl	c4f0 <mpfr_clear@plt>
   45744:	sub	x0, x29, #0x28
   45748:	mov	x1, x22
   4574c:	bl	c330 <mpfr_set_prec@plt>
   45750:	sub	x0, x29, #0x48
   45754:	mov	x1, x22
   45758:	bl	c330 <mpfr_set_prec@plt>
   4575c:	mov	w8, #0x40                  	// #64
   45760:	str	x8, [sp, #8]
   45764:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   45768:	ldr	d9, [x8, #2688]
   4576c:	cmp	w27, #0x0
   45770:	fmov	d8, #5.000000000000000000e-01
   45774:	cset	w9, eq  // eq = none
   45778:	fmov	d10, #1.000000000000000000e+00
   4577c:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   45780:	str	x9, [x29, #8]
   45784:	ldr	x8, [x21, #16]
   45788:	cmp	x8, #0x1
   4578c:	b.lt	457c8 <mpfr_eint@@Base+0x2d0>  // b.tstop
   45790:	scvtf	d1, x8
   45794:	scvtf	d0, x22
   45798:	fmul	d1, d1, d8
   4579c:	fadd	d0, d1, d0
   457a0:	fmul	d0, d0, d9
   457a4:	fadd	d0, d0, d10
   457a8:	add	x0, sp, #0x38
   457ac:	bl	c150 <mpfr_cmp_d@plt>
   457b0:	cmp	w0, #0x1
   457b4:	b.lt	457c8 <mpfr_eint@@Base+0x2d0>  // b.tstop
   457b8:	sub	x0, x29, #0x28
   457bc:	mov	x1, x21
   457c0:	bl	45bbc <mpfr_eint@@Base+0x6c4>
   457c4:	b	458b4 <mpfr_eint@@Base+0x3bc>
   457c8:	sub	x0, x29, #0x28
   457cc:	mov	x1, x21
   457d0:	bl	45da8 <mpfr_eint@@Base+0x8b0>
   457d4:	str	x28, [sp, #16]
   457d8:	mov	w28, w27
   457dc:	ldur	x27, [x29, #-24]
   457e0:	mov	x23, x20
   457e4:	mov	w20, w25
   457e8:	mov	x25, x0
   457ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   457f0:	ldr	x1, [x0, #2832]
   457f4:	add	x0, x0, #0xb10
   457f8:	blr	x1
   457fc:	add	x1, x26, x0
   45800:	sub	x0, x29, #0x48
   45804:	mov	w2, wzr
   45808:	bl	c840 <mpfr_cache@plt>
   4580c:	sub	x0, x29, #0x28
   45810:	sub	x1, x29, #0x28
   45814:	sub	x2, x29, #0x48
   45818:	mov	w3, wzr
   4581c:	bl	c640 <mpfr_add@plt>
   45820:	ldur	x9, [x29, #-24]
   45824:	ldur	x10, [x29, #-56]
   45828:	add	x8, x27, x25
   4582c:	cmp	x8, #0x0
   45830:	csinv	x8, x8, xzr, ge  // ge = tcont
   45834:	cmp	x9, x24
   45838:	csel	x25, x10, x9, eq  // eq = none
   4583c:	sub	x8, x8, x25
   45840:	add	x8, x8, #0x2
   45844:	sub	x0, x29, #0x48
   45848:	add	x1, sp, #0x38
   4584c:	mov	w2, wzr
   45850:	bic	x27, x8, x8, asr #63
   45854:	bl	c520 <mpfr_log@plt>
   45858:	sub	x0, x29, #0x28
   4585c:	sub	x1, x29, #0x28
   45860:	sub	x2, x29, #0x48
   45864:	mov	w3, wzr
   45868:	bl	c640 <mpfr_add@plt>
   4586c:	ldur	x8, [x29, #-56]
   45870:	add	x9, x25, x27
   45874:	ldur	x10, [x29, #-24]
   45878:	add	x11, x9, #0x1
   4587c:	cmp	x8, x11
   45880:	csinc	x11, x8, x9, gt
   45884:	cmp	x8, x24
   45888:	mov	w27, w28
   4588c:	ldr	x28, [sp, #16]
   45890:	csinc	x8, x11, x9, ne  // ne = any
   45894:	sub	x8, x8, x10
   45898:	mov	w25, w20
   4589c:	mov	x20, x23
   458a0:	mov	x23, #0x4                   	// #4
   458a4:	bic	x8, x8, x8, asr #63
   458a8:	cmp	x10, x24
   458ac:	movk	x23, #0x8000, lsl #48
   458b0:	csel	x0, x22, x8, eq  // eq = none
   458b4:	ldur	x8, [x29, #-24]
   458b8:	cmp	x8, x23
   458bc:	b.lt	458fc <mpfr_eint@@Base+0x404>  // b.tstop
   458c0:	ldur	x9, [x29, #-40]
   458c4:	ldur	x8, [x29, #-16]
   458c8:	ldr	x10, [x19]
   458cc:	sub	x2, x22, x0
   458d0:	sub	x11, x9, #0x1
   458d4:	add	x9, x9, #0x3e
   458d8:	cmp	x11, #0x0
   458dc:	csel	x9, x9, x11, lt  // lt = tstop
   458e0:	asr	x9, x9, #6
   458e4:	add	x1, x9, #0x1
   458e8:	ldr	x9, [x29, #8]
   458ec:	mov	x0, x8
   458f0:	add	x3, x10, x9
   458f4:	bl	c830 <mpfr_round_p@plt>
   458f8:	cbnz	w0, 45964 <mpfr_eint@@Base+0x46c>
   458fc:	ldr	x9, [sp, #8]
   45900:	sub	x8, x23, x22
   45904:	sub	x8, x8, #0x105
   45908:	cmp	x9, x8
   4590c:	mov	x8, x9
   45910:	b.gt	45944 <mpfr_eint@@Base+0x44c>
   45914:	add	x22, x22, x8
   45918:	cmp	x22, #0x0
   4591c:	cinc	x8, x22, lt  // lt = tstop
   45920:	asr	x8, x8, #1
   45924:	sub	x0, x29, #0x28
   45928:	mov	x1, x22
   4592c:	str	x8, [sp, #8]
   45930:	bl	c330 <mpfr_set_prec@plt>
   45934:	sub	x0, x29, #0x48
   45938:	mov	x1, x22
   4593c:	bl	c330 <mpfr_set_prec@plt>
   45940:	b	45784 <mpfr_eint@@Base+0x28c>
   45944:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   45948:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   4594c:	mov	w1, #0x159                 	// #345
   45950:	add	x0, x0, #0xb6c
   45954:	add	x2, x2, #0x99a
   45958:	bl	d030 <mpfr_assert_fail@plt>
   4595c:	ldr	x8, [sp, #8]
   45960:	b	45914 <mpfr_eint@@Base+0x41c>
   45964:	ldur	w3, [x29, #-32]
   45968:	sub	x1, x29, #0x28
   4596c:	mov	x0, x19
   45970:	mov	w2, w27
   45974:	bl	cb70 <mpfr_set4@plt>
   45978:	mov	w21, w0
   4597c:	sub	x0, x29, #0x28
   45980:	bl	c4f0 <mpfr_clear@plt>
   45984:	sub	x0, x29, #0x48
   45988:	bl	c4f0 <mpfr_clear@plt>
   4598c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45990:	ldr	x1, [x0, #2800]
   45994:	add	x0, x0, #0xaf0
   45998:	blr	x1
   4599c:	str	w25, [x26, x0]
   459a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   459a4:	ldr	x1, [x0, #2736]
   459a8:	add	x0, x0, #0xab0
   459ac:	blr	x1
   459b0:	str	x20, [x26, x0]
   459b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   459b8:	ldr	x1, [x0, #2768]
   459bc:	add	x0, x0, #0xad0
   459c0:	blr	x1
   459c4:	str	x28, [x26, x0]
   459c8:	ldr	x8, [x19, #16]
   459cc:	cmp	x8, x28
   459d0:	b.gt	45b3c <mpfr_eint@@Base+0x644>
   459d4:	cmp	x8, x20
   459d8:	b.lt	45b3c <mpfr_eint@@Base+0x644>  // b.tstop
   459dc:	cbz	w21, 459f8 <mpfr_eint@@Base+0x500>
   459e0:	orr	w8, w25, #0x8
   459e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   459e8:	ldr	x1, [x0, #2800]
   459ec:	add	x0, x0, #0xaf0
   459f0:	blr	x1
   459f4:	str	w8, [x26, x0]
   459f8:	mov	w0, w21
   459fc:	ldp	x20, x19, [sp, #272]
   45a00:	ldp	x22, x21, [sp, #256]
   45a04:	ldp	x24, x23, [sp, #240]
   45a08:	ldp	x26, x25, [sp, #224]
   45a0c:	ldp	x28, x27, [sp, #208]
   45a10:	ldp	x29, x30, [sp, #192]
   45a14:	ldp	d9, d8, [sp, #176]
   45a18:	ldr	d10, [sp, #160]
   45a1c:	add	sp, sp, #0x120
   45a20:	ret
   45a24:	ldr	x8, [x21, #16]
   45a28:	cmp	x8, #0x1
   45a2c:	b.lt	456c4 <mpfr_eint@@Base+0x1cc>  // b.tstop
   45a30:	adrp	x2, 72000 <__gmpfr_l2b@@Base+0x2f0>
   45a34:	ldr	x2, [x2, #3984]
   45a38:	sub	x0, x29, #0x48
   45a3c:	mov	w3, #0x2                   	// #2
   45a40:	mov	x1, x21
   45a44:	bl	caf0 <mpfr_div@plt>
   45a48:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45a4c:	ldr	x1, [x0, #2736]
   45a50:	add	x0, x0, #0xab0
   45a54:	blr	x1
   45a58:	ldr	x1, [x26, x0]
   45a5c:	sub	x0, x29, #0x48
   45a60:	mov	x2, xzr
   45a64:	bl	c890 <mpfr_cmp_si_2exp@plt>
   45a68:	tbz	w0, #31, 456c4 <mpfr_eint@@Base+0x1cc>
   45a6c:	sub	x0, x29, #0x28
   45a70:	bl	c4f0 <mpfr_clear@plt>
   45a74:	sub	x0, x29, #0x48
   45a78:	bl	c4f0 <mpfr_clear@plt>
   45a7c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45a80:	ldr	x1, [x0, #2800]
   45a84:	add	x0, x0, #0xaf0
   45a88:	blr	x1
   45a8c:	str	w25, [x26, x0]
   45a90:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45a94:	ldr	x1, [x0, #2736]
   45a98:	add	x0, x0, #0xab0
   45a9c:	blr	x1
   45aa0:	str	x20, [x26, x0]
   45aa4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45aa8:	ldr	x1, [x0, #2768]
   45aac:	add	x0, x0, #0xad0
   45ab0:	blr	x1
   45ab4:	str	x28, [x26, x0]
   45ab8:	mov	w2, #0xffffffff            	// #-1
   45abc:	mov	x0, x19
   45ac0:	mov	w1, w27
   45ac4:	bl	c880 <mpfr_underflow@plt>
   45ac8:	b	456b4 <mpfr_eint@@Base+0x1bc>
   45acc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   45ad0:	cmp	x8, x9
   45ad4:	b.eq	45b50 <mpfr_eint@@Base+0x658>  // b.none
   45ad8:	mov	x9, #0x2                   	// #2
   45adc:	movk	x9, #0x8000, lsl #48
   45ae0:	cmp	x8, x9
   45ae4:	b.ne	45b6c <mpfr_eint@@Base+0x674>  // b.any
   45ae8:	sub	x8, x23, #0x2
   45aec:	str	x8, [x19, #16]
   45af0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45af4:	ldr	x1, [x0, #2800]
   45af8:	add	x0, x0, #0xaf0
   45afc:	blr	x1
   45b00:	mrs	x8, tpidr_el0
   45b04:	ldr	w9, [x8, x0]
   45b08:	mov	w21, wzr
   45b0c:	orr	w9, w9, #0x4
   45b10:	str	w9, [x8, x0]
   45b14:	b	459f8 <mpfr_eint@@Base+0x500>
   45b18:	mov	x24, xzr
   45b1c:	b	455d4 <mpfr_eint@@Base+0xdc>
   45b20:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   45b24:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   45b28:	add	x0, x0, #0xb6c
   45b2c:	add	x2, x2, #0xef4
   45b30:	mov	w1, #0xfa                  	// #250
   45b34:	bl	d030 <mpfr_assert_fail@plt>
   45b38:	b	455bc <mpfr_eint@@Base+0xc4>
   45b3c:	mov	x0, x19
   45b40:	mov	w1, w21
   45b44:	mov	w2, w27
   45b48:	bl	d020 <mpfr_check_range@plt>
   45b4c:	b	456b4 <mpfr_eint@@Base+0x1bc>
   45b50:	ldr	w8, [x21, #8]
   45b54:	cmp	w8, #0x1
   45b58:	b.lt	45ba4 <mpfr_eint@@Base+0x6ac>  // b.tstop
   45b5c:	mov	w21, wzr
   45b60:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   45b64:	mov	w9, #0x1                   	// #1
   45b68:	b	45bb0 <mpfr_eint@@Base+0x6b8>
   45b6c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   45b70:	mov	w9, #0xffffffff            	// #-1
   45b74:	str	x8, [x19, #16]
   45b78:	str	w9, [x19, #8]
   45b7c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   45b80:	ldr	x1, [x0, #2800]
   45b84:	add	x0, x0, #0xaf0
   45b88:	blr	x1
   45b8c:	mrs	x8, tpidr_el0
   45b90:	ldr	w9, [x8, x0]
   45b94:	mov	w21, wzr
   45b98:	orr	w9, w9, #0x20
   45b9c:	str	w9, [x8, x0]
   45ba0:	b	459f8 <mpfr_eint@@Base+0x500>
   45ba4:	mov	w21, wzr
   45ba8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   45bac:	mov	w9, #0xffffffff            	// #-1
   45bb0:	str	x8, [x19, #16]
   45bb4:	str	w9, [x19, #8]
   45bb8:	b	459f8 <mpfr_eint@@Base+0x500>
   45bbc:	sub	sp, sp, #0xa0
   45bc0:	stp	x29, x30, [sp, #96]
   45bc4:	stp	x22, x21, [sp, #128]
   45bc8:	stp	x20, x19, [sp, #144]
   45bcc:	ldr	x21, [x0]
   45bd0:	mov	x19, x0
   45bd4:	mov	x20, x1
   45bd8:	add	x0, sp, #0x20
   45bdc:	mov	x1, x21
   45be0:	str	x23, [sp, #112]
   45be4:	add	x29, sp, #0x60
   45be8:	bl	cf60 <mpfr_init2@plt>
   45bec:	sub	x0, x29, #0x20
   45bf0:	mov	x1, x21
   45bf4:	bl	cf60 <mpfr_init2@plt>
   45bf8:	mov	x0, sp
   45bfc:	mov	w1, #0x1f                  	// #31
   45c00:	bl	cf60 <mpfr_init2@plt>
   45c04:	sub	x0, x29, #0x20
   45c08:	mov	w1, #0x1                   	// #1
   45c0c:	mov	x2, x20
   45c10:	mov	w3, wzr
   45c14:	mov	w22, #0x1                   	// #1
   45c18:	bl	c7b0 <mpfr_ui_div@plt>
   45c1c:	add	x0, sp, #0x20
   45c20:	mov	w1, #0x1                   	// #1
   45c24:	mov	x2, xzr
   45c28:	mov	w3, wzr
   45c2c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   45c30:	ldr	w3, [sp, #40]
   45c34:	add	x1, sp, #0x20
   45c38:	mov	x0, x19
   45c3c:	mov	w2, wzr
   45c40:	bl	cb70 <mpfr_set4@plt>
   45c44:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   45c48:	str	w22, [sp, #8]
   45c4c:	str	x8, [sp, #16]
   45c50:	ldr	x8, [sp, #48]
   45c54:	ldr	x9, [x19, #16]
   45c58:	add	x8, x8, x21
   45c5c:	cmp	x8, x9
   45c60:	b.le	45d10 <mpfr_eint@@Base+0x818>
   45c64:	mov	w22, #0x1                   	// #1
   45c68:	mov	w23, #0x6                   	// #6
   45c6c:	add	x0, sp, #0x20
   45c70:	add	x1, sp, #0x20
   45c74:	sub	x2, x29, #0x20
   45c78:	mov	w3, wzr
   45c7c:	bl	c1b0 <mpfr_mul@plt>
   45c80:	add	x0, sp, #0x20
   45c84:	add	x1, sp, #0x20
   45c88:	mov	x2, x22
   45c8c:	mov	w3, wzr
   45c90:	bl	bea0 <mpfr_mul_ui@plt>
   45c94:	ldr	x8, [x19, #16]
   45c98:	ldr	x9, [sp, #48]
   45c9c:	mov	x0, sp
   45ca0:	mov	x1, sp
   45ca4:	mov	w3, #0x2                   	// #2
   45ca8:	sub	x2, x8, x9
   45cac:	bl	bff0 <mpfr_mul_2si@plt>
   45cb0:	mov	x0, sp
   45cb4:	mov	x1, sp
   45cb8:	mov	w3, #0x2                   	// #2
   45cbc:	mov	x2, x23
   45cc0:	bl	c710 <mpfr_add_ui@plt>
   45cc4:	ldr	x8, [x19, #16]
   45cc8:	ldr	x9, [sp, #48]
   45ccc:	mov	x0, sp
   45cd0:	mov	x1, sp
   45cd4:	mov	w3, #0x2                   	// #2
   45cd8:	sub	x2, x8, x9
   45cdc:	bl	c8e0 <mpfr_div_2si@plt>
   45ce0:	add	x2, sp, #0x20
   45ce4:	mov	x0, x19
   45ce8:	mov	x1, x19
   45cec:	mov	w3, wzr
   45cf0:	bl	c640 <mpfr_add@plt>
   45cf4:	ldr	x8, [sp, #48]
   45cf8:	ldr	x9, [x19, #16]
   45cfc:	add	x22, x22, #0x1
   45d00:	add	x23, x23, #0x6
   45d04:	add	x8, x8, x21
   45d08:	cmp	x8, x9
   45d0c:	b.gt	45c6c <mpfr_eint@@Base+0x774>
   45d10:	sub	x2, x29, #0x20
   45d14:	mov	x0, x19
   45d18:	mov	x1, x19
   45d1c:	mov	w3, wzr
   45d20:	bl	c1b0 <mpfr_mul@plt>
   45d24:	add	x0, sp, #0x20
   45d28:	mov	x1, x20
   45d2c:	mov	w2, wzr
   45d30:	bl	cc20 <mpfr_exp@plt>
   45d34:	add	x2, sp, #0x20
   45d38:	mov	x0, x19
   45d3c:	mov	x1, x19
   45d40:	mov	w3, wzr
   45d44:	bl	c1b0 <mpfr_mul@plt>
   45d48:	mov	x0, sp
   45d4c:	mov	x1, sp
   45d50:	mov	w2, #0x2                   	// #2
   45d54:	mov	w3, #0x2                   	// #2
   45d58:	bl	c780 <mpfr_mul_2ui@plt>
   45d5c:	mov	x0, sp
   45d60:	mov	x1, sp
   45d64:	mov	w2, #0x8                   	// #8
   45d68:	mov	w3, #0x2                   	// #2
   45d6c:	bl	c710 <mpfr_add_ui@plt>
   45d70:	ldr	x19, [sp, #16]
   45d74:	add	x0, sp, #0x20
   45d78:	bl	c4f0 <mpfr_clear@plt>
   45d7c:	sub	x0, x29, #0x20
   45d80:	bl	c4f0 <mpfr_clear@plt>
   45d84:	mov	x0, sp
   45d88:	bl	c4f0 <mpfr_clear@plt>
   45d8c:	mov	x0, x19
   45d90:	ldp	x20, x19, [sp, #144]
   45d94:	ldp	x22, x21, [sp, #128]
   45d98:	ldr	x23, [sp, #112]
   45d9c:	ldp	x29, x30, [sp, #96]
   45da0:	add	sp, sp, #0xa0
   45da4:	ret
   45da8:	sub	sp, sp, #0x190
   45dac:	stp	x29, x30, [sp, #304]
   45db0:	stp	x28, x27, [sp, #320]
   45db4:	stp	x26, x25, [sp, #336]
   45db8:	stp	x24, x23, [sp, #352]
   45dbc:	stp	x22, x21, [sp, #368]
   45dc0:	stp	x20, x19, [sp, #384]
   45dc4:	ldr	x19, [x0]
   45dc8:	ldr	x8, [x1, #16]
   45dcc:	mov	x21, x1
   45dd0:	mov	x20, x0
   45dd4:	neg	x9, x19
   45dd8:	cmp	x8, x9
   45ddc:	add	x29, sp, #0x130
   45de0:	b.le	46060 <mpfr_eint@@Base+0xb68>
   45de4:	sub	x0, x29, #0x80
   45de8:	bl	c400 <mpfr_mpz_init@plt>
   45dec:	sub	x0, x29, #0x90
   45df0:	bl	c400 <mpfr_mpz_init@plt>
   45df4:	add	x0, sp, #0x90
   45df8:	bl	c400 <mpfr_mpz_init@plt>
   45dfc:	sub	x0, x29, #0x70
   45e00:	bl	c400 <mpfr_mpz_init@plt>
   45e04:	mov	x8, sp
   45e08:	mov	w9, #0x1f                  	// #31
   45e0c:	mov	w24, #0x1                   	// #1
   45e10:	add	x10, x8, #0x10
   45e14:	stur	x9, [x29, #-32]
   45e18:	stur	x9, [x29, #-64]
   45e1c:	stur	x9, [x29, #-96]
   45e20:	add	x9, x8, #0x18
   45e24:	add	x8, x8, #0x20
   45e28:	sub	x0, x29, #0x70
   45e2c:	mov	x1, x21
   45e30:	stur	w24, [x29, #-24]
   45e34:	stur	w24, [x29, #-56]
   45e38:	stp	xzr, x10, [sp]
   45e3c:	stur	x10, [x29, #-8]
   45e40:	stur	x9, [x29, #-40]
   45e44:	stur	x8, [x29, #-72]
   45e48:	stur	w24, [x29, #-88]
   45e4c:	bl	cfb0 <mpfr_get_z_2exp@plt>
   45e50:	ldr	x8, [x21]
   45e54:	mov	x22, x0
   45e58:	subs	x2, x8, x19
   45e5c:	b.le	45e70 <mpfr_eint@@Base+0x978>
   45e60:	sub	x0, x29, #0x70
   45e64:	sub	x1, x29, #0x70
   45e68:	add	x22, x2, x22
   45e6c:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   45e70:	sub	x0, x29, #0x70
   45e74:	mov	x1, xzr
   45e78:	bl	bee0 <__gmpz_scan1@plt>
   45e7c:	mov	x23, x0
   45e80:	sub	x0, x29, #0x70
   45e84:	sub	x1, x29, #0x70
   45e88:	mov	x2, x23
   45e8c:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   45e90:	sub	x0, x29, #0x90
   45e94:	mov	w1, #0x1                   	// #1
   45e98:	add	x23, x23, x22
   45e9c:	bl	c110 <__gmpz_set_ui@plt>
   45ea0:	sub	x0, x29, #0x90
   45ea4:	sub	x1, x29, #0x90
   45ea8:	mov	x2, x19
   45eac:	bl	c6a0 <__gmpz_mul_2exp@plt>
   45eb0:	sub	x9, x23, x19
   45eb4:	mov	x22, xzr
   45eb8:	stur	w24, [x29, #-24]
   45ebc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   45ec0:	stur	w24, [x29, #-88]
   45ec4:	sub	x24, x19, #0x1
   45ec8:	add	x27, x9, #0x1
   45ecc:	neg	x25, x23
   45ed0:	stur	x8, [x29, #-16]
   45ed4:	stur	x8, [x29, #-80]
   45ed8:	b	45f0c <mpfr_eint@@Base+0xa14>
   45edc:	ldur	x9, [x29, #-136]
   45ee0:	cmp	w8, #0x0
   45ee4:	cneg	w8, w8, mi  // mi = first
   45ee8:	add	x9, x9, w8, uxtw #3
   45eec:	ldur	x9, [x9, #-8]
   45ef0:	lsl	x8, x8, #6
   45ef4:	clz	x9, x9
   45ef8:	sub	x8, x8, x9
   45efc:	ldur	x9, [x29, #-80]
   45f00:	add	x22, x22, #0x1
   45f04:	cmp	x8, x9
   45f08:	b.lt	4607c <mpfr_eint@@Base+0xb84>  // b.tstop
   45f0c:	sub	x0, x29, #0x20
   45f10:	sub	x1, x29, #0x20
   45f14:	mov	w3, #0x2                   	// #2
   45f18:	mov	x2, x24
   45f1c:	add	x26, x22, #0x1
   45f20:	bl	c780 <mpfr_mul_2ui@plt>
   45f24:	ldur	w8, [x29, #-140]
   45f28:	tbnz	w8, #31, 45f44 <mpfr_eint@@Base+0xa4c>
   45f2c:	sub	x0, x29, #0x20
   45f30:	sub	x1, x29, #0x20
   45f34:	sub	x2, x29, #0x90
   45f38:	mov	w3, #0x2                   	// #2
   45f3c:	bl	c950 <mpfr_add_z@plt>
   45f40:	b	45f58 <mpfr_eint@@Base+0xa60>
   45f44:	sub	x0, x29, #0x20
   45f48:	sub	x1, x29, #0x20
   45f4c:	sub	x2, x29, #0x90
   45f50:	mov	w3, #0x2                   	// #2
   45f54:	bl	c1c0 <mpfr_sub_z@plt>
   45f58:	ldur	w8, [x29, #-108]
   45f5c:	ldur	x9, [x29, #-104]
   45f60:	sub	x0, x29, #0x20
   45f64:	sub	x1, x29, #0x20
   45f68:	cmp	w8, #0x0
   45f6c:	cneg	w8, w8, mi  // mi = first
   45f70:	add	x9, x9, w8, uxtw #3
   45f74:	ldur	x9, [x9, #-8]
   45f78:	mov	w3, #0x2                   	// #2
   45f7c:	clz	x9, x9
   45f80:	sub	x9, x27, x9
   45f84:	add	x2, x9, x8, lsl #6
   45f88:	bl	bff0 <mpfr_mul_2si@plt>
   45f8c:	sub	x0, x29, #0x20
   45f90:	sub	x1, x29, #0x20
   45f94:	mov	w3, #0x2                   	// #2
   45f98:	mov	x2, x26
   45f9c:	bl	d160 <mpfr_div_ui@plt>
   45fa0:	sub	x0, x29, #0x20
   45fa4:	sub	x1, x29, #0x20
   45fa8:	mov	w2, #0x1                   	// #1
   45fac:	mov	w3, #0x2                   	// #2
   45fb0:	bl	c710 <mpfr_add_ui@plt>
   45fb4:	sub	x0, x29, #0x90
   45fb8:	sub	x1, x29, #0x90
   45fbc:	sub	x2, x29, #0x70
   45fc0:	bl	c460 <__gmpz_mul@plt>
   45fc4:	sub	x0, x29, #0x90
   45fc8:	sub	x1, x29, #0x90
   45fcc:	tbnz	x23, #63, 45fdc <mpfr_eint@@Base+0xae4>
   45fd0:	mov	x2, x23
   45fd4:	bl	c6a0 <__gmpz_mul_2exp@plt>
   45fd8:	b	45fe4 <mpfr_eint@@Base+0xaec>
   45fdc:	mov	x2, x25
   45fe0:	bl	cc10 <__gmpz_tdiv_q_2exp@plt>
   45fe4:	sub	x0, x29, #0x90
   45fe8:	sub	x1, x29, #0x90
   45fec:	mov	x2, x26
   45ff0:	bl	c4b0 <__gmpz_tdiv_q_ui@plt>
   45ff4:	add	x0, sp, #0x90
   45ff8:	sub	x1, x29, #0x90
   45ffc:	mov	x2, x26
   46000:	bl	c4b0 <__gmpz_tdiv_q_ui@plt>
   46004:	sub	x0, x29, #0x80
   46008:	sub	x1, x29, #0x80
   4600c:	add	x2, sp, #0x90
   46010:	bl	ceb0 <__gmpz_add@plt>
   46014:	sub	x0, x29, #0x40
   46018:	sub	x1, x29, #0x20
   4601c:	mov	w3, #0x2                   	// #2
   46020:	mov	x2, x26
   46024:	bl	d160 <mpfr_div_ui@plt>
   46028:	sub	x0, x29, #0x40
   4602c:	sub	x1, x29, #0x40
   46030:	mov	w2, #0x1                   	// #1
   46034:	mov	w3, #0x2                   	// #2
   46038:	bl	c710 <mpfr_add_ui@plt>
   4603c:	sub	x0, x29, #0x60
   46040:	sub	x1, x29, #0x60
   46044:	sub	x2, x29, #0x40
   46048:	mov	w3, #0x2                   	// #2
   4604c:	bl	c640 <mpfr_add@plt>
   46050:	ldur	w8, [x29, #-140]
   46054:	cbnz	w8, 45edc <mpfr_eint@@Base+0x9e4>
   46058:	mov	x8, xzr
   4605c:	b	45efc <mpfr_eint@@Base+0xa04>
   46060:	ldr	w3, [x21, #8]
   46064:	mov	x0, x20
   46068:	mov	x1, x21
   4606c:	mov	w2, wzr
   46070:	bl	cb70 <mpfr_set4@plt>
   46074:	mov	x19, xzr
   46078:	b	4617c <mpfr_eint@@Base+0xc84>
   4607c:	sub	x0, x29, #0x90
   46080:	sub	x1, x29, #0x90
   46084:	bl	be70 <__gmpz_abs@plt>
   46088:	sub	x0, x29, #0x20
   4608c:	sub	x1, x29, #0x20
   46090:	sub	x2, x29, #0x90
   46094:	mov	w3, #0x2                   	// #2
   46098:	bl	c950 <mpfr_add_z@plt>
   4609c:	sub	x0, x29, #0x20
   460a0:	sub	x1, x29, #0x20
   460a4:	mov	w3, #0x2                   	// #2
   460a8:	mov	x2, x22
   460ac:	bl	d160 <mpfr_div_ui@plt>
   460b0:	sub	x0, x29, #0x40
   460b4:	mov	w2, #0x2                   	// #2
   460b8:	mov	w3, #0x1                   	// #1
   460bc:	mov	x1, x21
   460c0:	bl	cb70 <mpfr_set4@plt>
   460c4:	sub	x0, x29, #0x20
   460c8:	sub	x1, x29, #0x20
   460cc:	sub	x2, x29, #0x40
   460d0:	mov	w3, #0x2                   	// #2
   460d4:	bl	c1b0 <mpfr_mul@plt>
   460d8:	sub	x0, x29, #0x40
   460dc:	sub	x2, x29, #0x40
   460e0:	mov	w3, #0x3                   	// #3
   460e4:	mov	x1, x22
   460e8:	bl	cf30 <mpfr_ui_sub@plt>
   460ec:	ldur	w8, [x29, #-56]
   460f0:	tbnz	w8, #31, 4614c <mpfr_eint@@Base+0xc54>
   460f4:	sub	x0, x29, #0x20
   460f8:	sub	x1, x29, #0x20
   460fc:	sub	x2, x29, #0x40
   46100:	mov	w3, #0x2                   	// #2
   46104:	bl	caf0 <mpfr_div@plt>
   46108:	sub	x0, x29, #0x60
   4610c:	sub	x1, x29, #0x60
   46110:	sub	x2, x29, #0x20
   46114:	mov	w3, #0x2                   	// #2
   46118:	bl	c640 <mpfr_add@plt>
   4611c:	sub	x1, x29, #0x80
   46120:	mov	x0, x20
   46124:	mov	w2, wzr
   46128:	bl	c6e0 <mpfr_set_z@plt>
   4612c:	mov	x0, x20
   46130:	mov	x1, x20
   46134:	mov	x2, x19
   46138:	mov	w3, wzr
   4613c:	bl	cde0 <mpfr_div_2ui@plt>
   46140:	ldur	x8, [x29, #-80]
   46144:	ldr	x9, [x20, #16]
   46148:	sub	x19, x8, x9
   4614c:	ldr	x1, [sp]
   46150:	cbz	x1, 4615c <mpfr_eint@@Base+0xc64>
   46154:	ldr	x0, [sp, #8]
   46158:	bl	d120 <mpfr_free_func@plt>
   4615c:	sub	x0, x29, #0x80
   46160:	bl	c610 <mpfr_mpz_clear@plt>
   46164:	sub	x0, x29, #0x90
   46168:	bl	c610 <mpfr_mpz_clear@plt>
   4616c:	add	x0, sp, #0x90
   46170:	bl	c610 <mpfr_mpz_clear@plt>
   46174:	sub	x0, x29, #0x70
   46178:	bl	c610 <mpfr_mpz_clear@plt>
   4617c:	mov	x0, x19
   46180:	ldp	x20, x19, [sp, #384]
   46184:	ldp	x22, x21, [sp, #368]
   46188:	ldp	x24, x23, [sp, #352]
   4618c:	ldp	x26, x25, [sp, #336]
   46190:	ldp	x28, x27, [sp, #320]
   46194:	ldp	x29, x30, [sp, #304]
   46198:	add	sp, sp, #0x190
   4619c:	ret

00000000000461a0 <mpfr_sech@@Base>:
   461a0:	sub	sp, sp, #0xa0
   461a4:	stp	x29, x30, [sp, #64]
   461a8:	stp	x28, x27, [sp, #80]
   461ac:	stp	x26, x25, [sp, #96]
   461b0:	stp	x24, x23, [sp, #112]
   461b4:	stp	x22, x21, [sp, #128]
   461b8:	stp	x20, x19, [sp, #144]
   461bc:	ldr	x9, [x1, #16]
   461c0:	mov	x27, #0x4                   	// #4
   461c4:	movk	x27, #0x8000, lsl #48
   461c8:	mov	w26, w2
   461cc:	cmp	x9, x27
   461d0:	mov	x20, x0
   461d4:	add	x29, sp, #0x40
   461d8:	b.lt	464d8 <mpfr_sech@@Base+0x338>  // b.tstop
   461dc:	mov	x21, x1
   461e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   461e4:	ldr	x1, [x0, #2800]
   461e8:	add	x0, x0, #0xaf0
   461ec:	blr	x1
   461f0:	mrs	x24, tpidr_el0
   461f4:	ldr	w23, [x24, x0]
   461f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   461fc:	ldr	x1, [x0, #2736]
   46200:	add	x0, x0, #0xab0
   46204:	blr	x1
   46208:	ldr	x25, [x24, x0]
   4620c:	mov	x8, x0
   46210:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46214:	ldr	x1, [x0, #2768]
   46218:	add	x0, x0, #0xad0
   4621c:	blr	x1
   46220:	ldr	x19, [x24, x0]
   46224:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   46228:	str	x10, [x24, x8]
   4622c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   46230:	str	x8, [x24, x0]
   46234:	tbnz	x9, #63, 46248 <mpfr_sech@@Base+0xa8>
   46238:	mov	w8, wzr
   4623c:	cmp	w8, #0x6
   46240:	b.ne	46270 <mpfr_sech@@Base+0xd0>  // b.any
   46244:	b	46448 <mpfr_sech@@Base+0x2a8>
   46248:	ldr	x8, [x20]
   4624c:	mov	w10, #0x1                   	// #1
   46250:	sub	x2, x10, x9, lsl #1
   46254:	add	x8, x8, #0x1
   46258:	cmp	x2, x8
   4625c:	b.hi	46538 <mpfr_sech@@Base+0x398>  // b.pmore
   46260:	mov	w8, wzr
   46264:	cbz	w8, 46238 <mpfr_sech@@Base+0x98>
   46268:	cmp	w8, #0x6
   4626c:	b.eq	46448 <mpfr_sech@@Base+0x2a8>  // b.none
   46270:	cbnz	w8, 464b4 <mpfr_sech@@Base+0x314>
   46274:	ldr	x22, [x20]
   46278:	str	w23, [sp, #28]
   4627c:	subs	x23, x22, #0x1
   46280:	b.eq	46568 <mpfr_sech@@Base+0x3c8>  // b.none
   46284:	b.le	46570 <mpfr_sech@@Base+0x3d0>
   46288:	clz	x8, x23
   4628c:	mov	w9, #0x40                  	// #64
   46290:	sub	x8, x9, x8
   46294:	add	x8, x22, x8
   46298:	add	x23, x8, #0x3
   4629c:	add	x0, sp, #0x20
   462a0:	mov	x1, x23
   462a4:	bl	cf60 <mpfr_init2@plt>
   462a8:	cmp	w26, #0x0
   462ac:	mov	w8, #0x40                  	// #64
   462b0:	str	x8, [sp, #16]
   462b4:	str	w26, [sp, #24]
   462b8:	csinc	w8, w26, wzr, ne  // ne = any
   462bc:	cinc	x26, x22, eq  // eq = none
   462c0:	str	w8, [sp, #12]
   462c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   462c8:	ldr	x1, [x0, #2800]
   462cc:	add	x0, x0, #0xaf0
   462d0:	blr	x1
   462d4:	mov	x28, x0
   462d8:	str	wzr, [x24, x0]
   462dc:	add	x0, sp, #0x20
   462e0:	mov	w2, #0x1                   	// #1
   462e4:	mov	x1, x21
   462e8:	bl	bf40 <mpfr_cosh@plt>
   462ec:	ldrb	w8, [x24, x28]
   462f0:	tbnz	w8, #1, 46390 <mpfr_sech@@Base+0x1f0>
   462f4:	add	x0, sp, #0x20
   462f8:	add	x2, sp, #0x20
   462fc:	mov	w1, #0x1                   	// #1
   46300:	mov	w3, wzr
   46304:	bl	c7b0 <mpfr_ui_div@plt>
   46308:	ldr	x8, [sp, #48]
   4630c:	cmp	x8, x27
   46310:	b.lt	46350 <mpfr_sech@@Base+0x1b0>  // b.tstop
   46314:	ldr	x8, [sp, #32]
   46318:	ldr	x0, [sp, #56]
   4631c:	sub	x2, x23, #0x2
   46320:	mov	x3, x26
   46324:	sub	x9, x8, #0x1
   46328:	add	x8, x8, #0x3e
   4632c:	cmp	x9, #0x0
   46330:	csel	x8, x8, x9, lt  // lt = tstop
   46334:	asr	x8, x8, #6
   46338:	add	x1, x8, #0x1
   4633c:	bl	c830 <mpfr_round_p@plt>
   46340:	cbz	w0, 46350 <mpfr_sech@@Base+0x1b0>
   46344:	mov	w8, #0x9                   	// #9
   46348:	cbz	w8, 462c4 <mpfr_sech@@Base+0x124>
   4634c:	b	46418 <mpfr_sech@@Base+0x278>
   46350:	ldr	x9, [sp, #16]
   46354:	sub	x8, x27, x23
   46358:	sub	x8, x8, #0x105
   4635c:	cmp	x9, x8
   46360:	mov	x8, x9
   46364:	b.gt	463f8 <mpfr_sech@@Base+0x258>
   46368:	add	x23, x23, x8
   4636c:	cmp	x23, #0x0
   46370:	cinc	x8, x23, lt  // lt = tstop
   46374:	asr	x8, x8, #1
   46378:	add	x0, sp, #0x20
   4637c:	mov	x1, x23
   46380:	str	x8, [sp, #16]
   46384:	bl	c330 <mpfr_set_prec@plt>
   46388:	mov	w8, wzr
   4638c:	b	46348 <mpfr_sech@@Base+0x1a8>
   46390:	ldr	w22, [sp, #40]
   46394:	add	x0, sp, #0x20
   46398:	bl	c4f0 <mpfr_clear@plt>
   4639c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   463a0:	ldr	x1, [x0, #2800]
   463a4:	add	x0, x0, #0xaf0
   463a8:	blr	x1
   463ac:	ldr	w8, [sp, #28]
   463b0:	str	w8, [x24, x0]
   463b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   463b8:	ldr	x1, [x0, #2736]
   463bc:	add	x0, x0, #0xab0
   463c0:	blr	x1
   463c4:	str	x25, [x24, x0]
   463c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   463cc:	ldr	x1, [x0, #2768]
   463d0:	add	x0, x0, #0xad0
   463d4:	blr	x1
   463d8:	ldr	w1, [sp, #12]
   463dc:	str	x19, [x24, x0]
   463e0:	mov	x0, x20
   463e4:	mov	w2, w22
   463e8:	bl	c880 <mpfr_underflow@plt>
   463ec:	mov	w22, w0
   463f0:	mov	w8, #0x1                   	// #1
   463f4:	b	46348 <mpfr_sech@@Base+0x1a8>
   463f8:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   463fc:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   46400:	mov	w1, #0x5f                  	// #95
   46404:	add	x0, x0, #0xb5c
   46408:	add	x2, x2, #0x5cf
   4640c:	bl	d030 <mpfr_assert_fail@plt>
   46410:	ldr	x8, [sp, #16]
   46414:	b	46368 <mpfr_sech@@Base+0x1c8>
   46418:	cmp	w8, #0x9
   4641c:	b.ne	464b4 <mpfr_sech@@Base+0x314>  // b.any
   46420:	ldr	w26, [sp, #24]
   46424:	ldr	w3, [sp, #40]
   46428:	add	x1, sp, #0x20
   4642c:	mov	x0, x20
   46430:	mov	w2, w26
   46434:	bl	cb70 <mpfr_set4@plt>
   46438:	mov	w22, w0
   4643c:	add	x0, sp, #0x20
   46440:	bl	c4f0 <mpfr_clear@plt>
   46444:	ldr	w23, [sp, #28]
   46448:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4644c:	ldr	x1, [x0, #2800]
   46450:	add	x0, x0, #0xaf0
   46454:	blr	x1
   46458:	str	w23, [x24, x0]
   4645c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46460:	ldr	x1, [x0, #2736]
   46464:	add	x0, x0, #0xab0
   46468:	blr	x1
   4646c:	str	x25, [x24, x0]
   46470:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46474:	ldr	x1, [x0, #2768]
   46478:	add	x0, x0, #0xad0
   4647c:	blr	x1
   46480:	str	x19, [x24, x0]
   46484:	ldr	x8, [x20, #16]
   46488:	cmp	x8, x19
   4648c:	b.gt	46524 <mpfr_sech@@Base+0x384>
   46490:	cmp	x8, x25
   46494:	b.lt	46524 <mpfr_sech@@Base+0x384>  // b.tstop
   46498:	cbz	w22, 464b4 <mpfr_sech@@Base+0x314>
   4649c:	orr	w8, w23, #0x8
   464a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   464a4:	ldr	x1, [x0, #2800]
   464a8:	add	x0, x0, #0xaf0
   464ac:	blr	x1
   464b0:	str	w8, [x24, x0]
   464b4:	mov	w0, w22
   464b8:	ldp	x20, x19, [sp, #144]
   464bc:	ldp	x22, x21, [sp, #128]
   464c0:	ldp	x24, x23, [sp, #112]
   464c4:	ldp	x26, x25, [sp, #96]
   464c8:	ldp	x28, x27, [sp, #80]
   464cc:	ldp	x29, x30, [sp, #64]
   464d0:	add	sp, sp, #0xa0
   464d4:	ret
   464d8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   464dc:	cmp	x9, x8
   464e0:	b.eq	4658c <mpfr_sech@@Base+0x3ec>  // b.none
   464e4:	mov	x8, #0x2                   	// #2
   464e8:	movk	x8, #0x8000, lsl #48
   464ec:	cmp	x9, x8
   464f0:	b.ne	465a4 <mpfr_sech@@Base+0x404>  // b.any
   464f4:	sub	x8, x27, #0x2
   464f8:	str	x8, [x20, #16]
   464fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46500:	ldr	x1, [x0, #2800]
   46504:	add	x0, x0, #0xaf0
   46508:	blr	x1
   4650c:	mrs	x8, tpidr_el0
   46510:	ldr	w9, [x8, x0]
   46514:	mov	w22, wzr
   46518:	orr	w9, w9, #0x4
   4651c:	str	w9, [x8, x0]
   46520:	b	464b4 <mpfr_sech@@Base+0x314>
   46524:	mov	x0, x20
   46528:	mov	w1, w22
   4652c:	mov	w2, w26
   46530:	bl	d020 <mpfr_check_range@plt>
   46534:	b	465b8 <mpfr_sech@@Base+0x418>
   46538:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   4653c:	ldr	x1, [x1, #3928]
   46540:	mov	x0, x20
   46544:	mov	w3, wzr
   46548:	mov	w4, w26
   4654c:	bl	ca10 <mpfr_round_near_x@plt>
   46550:	cmp	w0, #0x0
   46554:	mov	w8, #0x6                   	// #6
   46558:	mov	w22, w0
   4655c:	csel	w8, wzr, w8, eq  // eq = none
   46560:	cbnz	w0, 46264 <mpfr_sech@@Base+0xc4>
   46564:	b	46260 <mpfr_sech@@Base+0xc0>
   46568:	mov	x8, xzr
   4656c:	b	46294 <mpfr_sech@@Base+0xf4>
   46570:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   46574:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   46578:	add	x0, x0, #0xb5c
   4657c:	add	x2, x2, #0x580
   46580:	mov	w1, #0x43                  	// #67
   46584:	bl	d030 <mpfr_assert_fail@plt>
   46588:	b	46288 <mpfr_sech@@Base+0xe8>
   4658c:	mov	w8, #0x1                   	// #1
   46590:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   46594:	mov	w22, wzr
   46598:	str	w8, [x20, #8]
   4659c:	str	x9, [x20, #16]
   465a0:	b	464b4 <mpfr_sech@@Base+0x314>
   465a4:	mov	w1, #0x1                   	// #1
   465a8:	mov	x0, x20
   465ac:	mov	x2, xzr
   465b0:	mov	w3, w26
   465b4:	bl	cac0 <mpfr_set_ui_2exp@plt>
   465b8:	mov	w22, w0
   465bc:	b	464b4 <mpfr_sech@@Base+0x314>

00000000000465c0 <mpfr_csch@@Base>:
   465c0:	sub	sp, sp, #0xa0
   465c4:	stp	x29, x30, [sp, #64]
   465c8:	stp	x28, x27, [sp, #80]
   465cc:	stp	x26, x25, [sp, #96]
   465d0:	stp	x24, x23, [sp, #112]
   465d4:	stp	x22, x21, [sp, #128]
   465d8:	stp	x20, x19, [sp, #144]
   465dc:	ldr	x9, [x1, #16]
   465e0:	mov	x25, #0x2                   	// #2
   465e4:	movk	x25, #0x8000, lsl #48
   465e8:	add	x8, x25, #0x2
   465ec:	mov	x22, x1
   465f0:	cmp	x9, x8
   465f4:	mov	x19, x0
   465f8:	add	x29, sp, #0x40
   465fc:	b.lt	46984 <mpfr_csch@@Base+0x3c4>  // b.tstop
   46600:	mov	w20, w2
   46604:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46608:	ldr	x1, [x0, #2800]
   4660c:	add	x0, x0, #0xaf0
   46610:	blr	x1
   46614:	mrs	x24, tpidr_el0
   46618:	ldr	w27, [x24, x0]
   4661c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46620:	ldr	x1, [x0, #2736]
   46624:	add	x0, x0, #0xab0
   46628:	blr	x1
   4662c:	ldr	x26, [x24, x0]
   46630:	mov	x8, x0
   46634:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46638:	ldr	x1, [x0, #2768]
   4663c:	add	x0, x0, #0xad0
   46640:	blr	x1
   46644:	ldr	x10, [x24, x0]
   46648:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   4664c:	str	x11, [x24, x0]
   46650:	str	x10, [sp, #24]
   46654:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   46658:	str	x10, [x24, x8]
   4665c:	ldr	x8, [x22]
   46660:	ldr	x21, [x19]
   46664:	cmp	x8, x21
   46668:	csel	x8, x8, x21, gt
   4666c:	neg	x8, x8, lsl #1
   46670:	cmp	x9, x8
   46674:	b.le	4681c <mpfr_csch@@Base+0x25c>
   46678:	subs	x23, x21, #0x1
   4667c:	str	x26, [sp, #16]
   46680:	b.eq	469d0 <mpfr_csch@@Base+0x410>  // b.none
   46684:	b.le	469d8 <mpfr_csch@@Base+0x418>
   46688:	clz	x8, x23
   4668c:	mov	w9, #0x40                  	// #64
   46690:	sub	x8, x9, x8
   46694:	add	x8, x21, x8
   46698:	add	x23, x8, #0x3
   4669c:	add	x0, sp, #0x20
   466a0:	mov	x1, x23
   466a4:	bl	cf60 <mpfr_init2@plt>
   466a8:	cmp	w20, #0x0
   466ac:	mov	w8, #0x40                  	// #64
   466b0:	str	x8, [sp, #8]
   466b4:	csinc	w8, w20, wzr, ne  // ne = any
   466b8:	cinc	x26, x21, eq  // eq = none
   466bc:	str	w8, [sp, #4]
   466c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   466c4:	ldr	x1, [x0, #2800]
   466c8:	add	x0, x0, #0xaf0
   466cc:	blr	x1
   466d0:	mov	x28, x0
   466d4:	str	wzr, [x24, x0]
   466d8:	add	x0, sp, #0x20
   466dc:	mov	w2, #0x1                   	// #1
   466e0:	mov	x1, x22
   466e4:	bl	c7e0 <mpfr_sinh@plt>
   466e8:	ldrb	w8, [x24, x28]
   466ec:	tbnz	w8, #1, 46790 <mpfr_csch@@Base+0x1d0>
   466f0:	add	x0, sp, #0x20
   466f4:	add	x2, sp, #0x20
   466f8:	mov	w1, #0x1                   	// #1
   466fc:	mov	w3, wzr
   46700:	bl	c7b0 <mpfr_ui_div@plt>
   46704:	ldr	x8, [sp, #48]
   46708:	add	x9, x25, #0x2
   4670c:	cmp	x8, x9
   46710:	b.lt	46750 <mpfr_csch@@Base+0x190>  // b.tstop
   46714:	ldr	x8, [sp, #32]
   46718:	ldr	x0, [sp, #56]
   4671c:	sub	x2, x23, #0x2
   46720:	mov	x3, x26
   46724:	sub	x9, x8, #0x1
   46728:	add	x8, x8, #0x3e
   4672c:	cmp	x9, #0x0
   46730:	csel	x8, x8, x9, lt  // lt = tstop
   46734:	asr	x8, x8, #6
   46738:	add	x1, x8, #0x1
   4673c:	bl	c830 <mpfr_round_p@plt>
   46740:	cbz	w0, 46750 <mpfr_csch@@Base+0x190>
   46744:	mov	w8, #0xd                   	// #13
   46748:	cbz	w8, 466c0 <mpfr_csch@@Base+0x100>
   4674c:	b	46840 <mpfr_csch@@Base+0x280>
   46750:	ldr	x9, [sp, #8]
   46754:	sub	x8, x25, x23
   46758:	sub	x8, x8, #0x103
   4675c:	cmp	x9, x8
   46760:	mov	x8, x9
   46764:	b.gt	467fc <mpfr_csch@@Base+0x23c>
   46768:	add	x23, x23, x8
   4676c:	cmp	x23, #0x0
   46770:	cinc	x8, x23, lt  // lt = tstop
   46774:	asr	x8, x8, #1
   46778:	add	x0, sp, #0x20
   4677c:	mov	x1, x23
   46780:	str	x8, [sp, #8]
   46784:	bl	c330 <mpfr_set_prec@plt>
   46788:	mov	w8, wzr
   4678c:	b	46748 <mpfr_csch@@Base+0x188>
   46790:	ldr	w21, [sp, #40]
   46794:	add	x0, sp, #0x20
   46798:	bl	c4f0 <mpfr_clear@plt>
   4679c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   467a0:	ldr	x1, [x0, #2800]
   467a4:	add	x0, x0, #0xaf0
   467a8:	blr	x1
   467ac:	str	w27, [x24, x0]
   467b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   467b4:	ldr	x1, [x0, #2736]
   467b8:	add	x0, x0, #0xab0
   467bc:	blr	x1
   467c0:	ldr	x8, [sp, #16]
   467c4:	str	x8, [x24, x0]
   467c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   467cc:	ldr	x1, [x0, #2768]
   467d0:	add	x0, x0, #0xad0
   467d4:	blr	x1
   467d8:	ldr	x8, [sp, #24]
   467dc:	ldr	w1, [sp, #4]
   467e0:	mov	w2, w21
   467e4:	str	x8, [x24, x0]
   467e8:	mov	x0, x19
   467ec:	bl	c880 <mpfr_underflow@plt>
   467f0:	mov	w21, w0
   467f4:	mov	w8, #0x1                   	// #1
   467f8:	b	46748 <mpfr_csch@@Base+0x188>
   467fc:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   46800:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   46804:	mov	w1, #0x5f                  	// #95
   46808:	add	x0, x0, #0xb5c
   4680c:	add	x2, x2, #0x5cf
   46810:	bl	d030 <mpfr_assert_fail@plt>
   46814:	ldr	x8, [sp, #8]
   46818:	b	46768 <mpfr_csch@@Base+0x1a8>
   4681c:	ldr	w23, [x22, #8]
   46820:	mov	w1, #0x1                   	// #1
   46824:	mov	x0, x19
   46828:	mov	x2, x22
   4682c:	mov	w3, w20
   46830:	bl	c7b0 <mpfr_ui_div@plt>
   46834:	cbz	w0, 46870 <mpfr_csch@@Base+0x2b0>
   46838:	mov	w21, w0
   4683c:	b	468d8 <mpfr_csch@@Base+0x318>
   46840:	cmp	w8, #0xd
   46844:	b.ne	46960 <mpfr_csch@@Base+0x3a0>  // b.any
   46848:	ldr	w3, [sp, #40]
   4684c:	add	x1, sp, #0x20
   46850:	mov	x0, x19
   46854:	mov	w2, w20
   46858:	bl	cb70 <mpfr_set4@plt>
   4685c:	mov	w21, w0
   46860:	add	x0, sp, #0x20
   46864:	bl	c4f0 <mpfr_clear@plt>
   46868:	ldr	x26, [sp, #16]
   4686c:	b	468f0 <mpfr_csch@@Base+0x330>
   46870:	cmp	w23, #0x0
   46874:	mov	w8, #0x2                   	// #2
   46878:	cinc	w8, w8, le
   4687c:	cmp	w20, #0x4
   46880:	csel	w20, w8, w20, eq  // eq = none
   46884:	cmp	w20, #0x2
   46888:	b.eq	46898 <mpfr_csch@@Base+0x2d8>  // b.none
   4688c:	tbz	w23, #31, 468b4 <mpfr_csch@@Base+0x2f4>
   46890:	cmp	w20, #0x1
   46894:	b.ne	468b4 <mpfr_csch@@Base+0x2f4>  // b.any
   46898:	tbnz	w23, #31, 468a4 <mpfr_csch@@Base+0x2e4>
   4689c:	mov	w21, #0x1                   	// #1
   468a0:	b	468d8 <mpfr_csch@@Base+0x318>
   468a4:	mov	x0, x19
   468a8:	bl	c5c0 <mpfr_nextabove@plt>
   468ac:	mov	w21, #0x1                   	// #1
   468b0:	b	468d8 <mpfr_csch@@Base+0x318>
   468b4:	orr	w8, w20, #0x2
   468b8:	cmp	w8, #0x3
   468bc:	csinv	w21, w23, wzr, ne  // ne = any
   468c0:	b.ne	468d8 <mpfr_csch@@Base+0x318>  // b.any
   468c4:	cmp	w23, #0x1
   468c8:	b.lt	468d8 <mpfr_csch@@Base+0x318>  // b.tstop
   468cc:	mov	x0, x19
   468d0:	bl	c230 <mpfr_nextbelow@plt>
   468d4:	mov	w21, #0xffffffff            	// #-1
   468d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   468dc:	ldr	x1, [x0, #2800]
   468e0:	add	x0, x0, #0xaf0
   468e4:	blr	x1
   468e8:	ldr	w8, [x24, x0]
   468ec:	orr	w27, w8, w27
   468f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   468f4:	ldr	x1, [x0, #2800]
   468f8:	add	x0, x0, #0xaf0
   468fc:	blr	x1
   46900:	str	w27, [x24, x0]
   46904:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46908:	ldr	x1, [x0, #2736]
   4690c:	add	x0, x0, #0xab0
   46910:	blr	x1
   46914:	str	x26, [x24, x0]
   46918:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4691c:	ldr	x1, [x0, #2768]
   46920:	add	x0, x0, #0xad0
   46924:	blr	x1
   46928:	ldr	x9, [sp, #24]
   4692c:	str	x9, [x24, x0]
   46930:	ldr	x8, [x19, #16]
   46934:	cmp	x8, x9
   46938:	b.gt	469b8 <mpfr_csch@@Base+0x3f8>
   4693c:	cmp	x8, x26
   46940:	b.lt	469b8 <mpfr_csch@@Base+0x3f8>  // b.tstop
   46944:	cbz	w21, 46960 <mpfr_csch@@Base+0x3a0>
   46948:	orr	w8, w27, #0x8
   4694c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46950:	ldr	x1, [x0, #2800]
   46954:	add	x0, x0, #0xaf0
   46958:	blr	x1
   4695c:	str	w8, [x24, x0]
   46960:	mov	w0, w21
   46964:	ldp	x20, x19, [sp, #144]
   46968:	ldp	x22, x21, [sp, #128]
   4696c:	ldp	x24, x23, [sp, #112]
   46970:	ldp	x26, x25, [sp, #96]
   46974:	ldp	x28, x27, [sp, #80]
   46978:	ldp	x29, x30, [sp, #64]
   4697c:	add	sp, sp, #0xa0
   46980:	ret
   46984:	cmp	x9, x25
   46988:	b.ne	469f4 <mpfr_csch@@Base+0x434>  // b.any
   4698c:	str	x25, [x19, #16]
   46990:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46994:	ldr	x1, [x0, #2800]
   46998:	add	x0, x0, #0xaf0
   4699c:	blr	x1
   469a0:	mrs	x8, tpidr_el0
   469a4:	ldr	w9, [x8, x0]
   469a8:	mov	w21, wzr
   469ac:	orr	w9, w9, #0x4
   469b0:	str	w9, [x8, x0]
   469b4:	b	46960 <mpfr_csch@@Base+0x3a0>
   469b8:	mov	x0, x19
   469bc:	mov	w1, w21
   469c0:	mov	w2, w20
   469c4:	bl	d020 <mpfr_check_range@plt>
   469c8:	mov	w21, w0
   469cc:	b	46960 <mpfr_csch@@Base+0x3a0>
   469d0:	mov	x8, xzr
   469d4:	b	46694 <mpfr_csch@@Base+0xd4>
   469d8:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   469dc:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   469e0:	add	x0, x0, #0xb5c
   469e4:	add	x2, x2, #0x580
   469e8:	mov	w1, #0x43                  	// #67
   469ec:	bl	d030 <mpfr_assert_fail@plt>
   469f0:	b	46688 <mpfr_csch@@Base+0xc8>
   469f4:	ldr	w10, [x22, #8]
   469f8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   469fc:	cmp	x9, x8
   46a00:	str	w10, [x19, #8]
   46a04:	b.ne	46a18 <mpfr_csch@@Base+0x458>  // b.any
   46a08:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   46a0c:	mov	w21, wzr
   46a10:	str	x8, [x19, #16]
   46a14:	b	46960 <mpfr_csch@@Base+0x3a0>
   46a18:	str	x8, [x19, #16]
   46a1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46a20:	ldr	x1, [x0, #2800]
   46a24:	add	x0, x0, #0xaf0
   46a28:	blr	x1
   46a2c:	mrs	x8, tpidr_el0
   46a30:	ldr	w9, [x8, x0]
   46a34:	mov	w21, wzr
   46a38:	orr	w9, w9, #0x20
   46a3c:	str	w9, [x8, x0]
   46a40:	b	46960 <mpfr_csch@@Base+0x3a0>

0000000000046a44 <mpfr_coth@@Base>:
   46a44:	sub	sp, sp, #0xb0
   46a48:	stp	x29, x30, [sp, #80]
   46a4c:	stp	x28, x27, [sp, #96]
   46a50:	stp	x26, x25, [sp, #112]
   46a54:	stp	x24, x23, [sp, #128]
   46a58:	stp	x22, x21, [sp, #144]
   46a5c:	stp	x20, x19, [sp, #160]
   46a60:	ldr	x9, [x1, #16]
   46a64:	mov	x25, #0x2                   	// #2
   46a68:	movk	x25, #0x8000, lsl #48
   46a6c:	add	x8, x25, #0x2
   46a70:	mov	w20, w2
   46a74:	mov	x21, x1
   46a78:	cmp	x9, x8
   46a7c:	mov	x19, x0
   46a80:	add	x29, sp, #0x50
   46a84:	b.lt	46e58 <mpfr_coth@@Base+0x414>  // b.tstop
   46a88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46a8c:	ldr	x1, [x0, #2800]
   46a90:	add	x0, x0, #0xaf0
   46a94:	blr	x1
   46a98:	mrs	x24, tpidr_el0
   46a9c:	ldr	w27, [x24, x0]
   46aa0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46aa4:	ldr	x1, [x0, #2736]
   46aa8:	add	x0, x0, #0xab0
   46aac:	blr	x1
   46ab0:	ldr	x26, [x24, x0]
   46ab4:	mov	x8, x0
   46ab8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46abc:	ldr	x1, [x0, #2768]
   46ac0:	add	x0, x0, #0xad0
   46ac4:	blr	x1
   46ac8:	ldr	x10, [x24, x0]
   46acc:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   46ad0:	str	x11, [x24, x0]
   46ad4:	str	x10, [sp, #40]
   46ad8:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   46adc:	str	x10, [x24, x8]
   46ae0:	ldr	x8, [x21]
   46ae4:	ldr	x22, [x19]
   46ae8:	cmp	x8, x22
   46aec:	csel	x8, x8, x22, gt
   46af0:	neg	x8, x8, lsl #1
   46af4:	cmp	x9, x8
   46af8:	b.ge	46b38 <mpfr_coth@@Base+0xf4>  // b.tcont
   46afc:	ldr	w23, [x21, #8]
   46b00:	mov	w1, #0x1                   	// #1
   46b04:	mov	x0, x19
   46b08:	mov	x2, x21
   46b0c:	mov	w3, w20
   46b10:	bl	c7b0 <mpfr_ui_div@plt>
   46b14:	cbz	w0, 46df8 <mpfr_coth@@Base+0x3b4>
   46b18:	mov	w22, w0
   46b1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46b20:	ldr	x1, [x0, #2800]
   46b24:	add	x0, x0, #0xaf0
   46b28:	blr	x1
   46b2c:	ldr	w8, [x24, x0]
   46b30:	orr	w27, w8, w27
   46b34:	b	46d64 <mpfr_coth@@Base+0x320>
   46b38:	subs	x23, x22, #0x1
   46b3c:	str	x26, [sp, #32]
   46b40:	b.eq	46ea0 <mpfr_coth@@Base+0x45c>  // b.none
   46b44:	b.le	46ea8 <mpfr_coth@@Base+0x464>
   46b48:	clz	x8, x23
   46b4c:	mov	w9, #0x40                  	// #64
   46b50:	sub	x8, x9, x8
   46b54:	add	x8, x22, x8
   46b58:	add	x23, x8, #0x3
   46b5c:	sub	x0, x29, #0x20
   46b60:	mov	x1, x23
   46b64:	bl	cf60 <mpfr_init2@plt>
   46b68:	neg	x8, x22
   46b6c:	cmp	w20, #0x0
   46b70:	str	x8, [sp, #8]
   46b74:	mov	w8, #0x40                  	// #64
   46b78:	str	x8, [sp, #24]
   46b7c:	csinc	w8, w20, wzr, ne  // ne = any
   46b80:	cinc	x26, x22, eq  // eq = none
   46b84:	str	w8, [sp, #20]
   46b88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46b8c:	ldr	x1, [x0, #2800]
   46b90:	add	x0, x0, #0xaf0
   46b94:	blr	x1
   46b98:	mov	x28, x0
   46b9c:	str	wzr, [x24, x0]
   46ba0:	sub	x0, x29, #0x20
   46ba4:	mov	w2, #0x1                   	// #1
   46ba8:	mov	x1, x21
   46bac:	bl	bf50 <mpfr_tanh@plt>
   46bb0:	ldrb	w8, [x24, x28]
   46bb4:	tbnz	w8, #1, 46c94 <mpfr_coth@@Base+0x250>
   46bb8:	sub	x0, x29, #0x20
   46bbc:	sub	x2, x29, #0x20
   46bc0:	mov	w1, #0x1                   	// #1
   46bc4:	mov	w3, wzr
   46bc8:	bl	c7b0 <mpfr_ui_div@plt>
   46bcc:	ldur	x8, [x29, #-16]
   46bd0:	add	x9, x25, #0x2
   46bd4:	cmp	x8, x9
   46bd8:	b.lt	46c18 <mpfr_coth@@Base+0x1d4>  // b.tstop
   46bdc:	ldur	x8, [x29, #-32]
   46be0:	ldur	x0, [x29, #-8]
   46be4:	sub	x2, x23, #0x2
   46be8:	mov	x3, x26
   46bec:	sub	x9, x8, #0x1
   46bf0:	add	x8, x8, #0x3e
   46bf4:	cmp	x9, #0x0
   46bf8:	csel	x8, x8, x9, lt  // lt = tstop
   46bfc:	asr	x8, x8, #6
   46c00:	add	x1, x8, #0x1
   46c04:	bl	c830 <mpfr_round_p@plt>
   46c08:	cbz	w0, 46c18 <mpfr_coth@@Base+0x1d4>
   46c0c:	mov	w8, #0xb                   	// #11
   46c10:	cbz	w8, 46b88 <mpfr_coth@@Base+0x144>
   46c14:	b	46d38 <mpfr_coth@@Base+0x2f4>
   46c18:	ldur	x8, [x29, #-16]
   46c1c:	cmp	x8, #0x1
   46c20:	b.ne	46c54 <mpfr_coth@@Base+0x210>  // b.any
   46c24:	ldursw	x2, [x29, #-24]
   46c28:	sub	x0, x29, #0x20
   46c2c:	sub	x1, x29, #0x20
   46c30:	mov	w3, wzr
   46c34:	bl	c4d0 <mpfr_sub_si@plt>
   46c38:	ldur	x8, [x29, #-16]
   46c3c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   46c40:	cmp	x8, x9
   46c44:	b.eq	46d00 <mpfr_coth@@Base+0x2bc>  // b.none
   46c48:	ldr	x9, [sp, #8]
   46c4c:	cmp	x8, x9
   46c50:	b.le	46d00 <mpfr_coth@@Base+0x2bc>
   46c54:	ldr	x9, [sp, #24]
   46c58:	sub	x8, x25, x23
   46c5c:	sub	x8, x8, #0x103
   46c60:	cmp	x9, x8
   46c64:	mov	x8, x9
   46c68:	b.gt	46d18 <mpfr_coth@@Base+0x2d4>
   46c6c:	add	x23, x23, x8
   46c70:	cmp	x23, #0x0
   46c74:	cinc	x8, x23, lt  // lt = tstop
   46c78:	asr	x8, x8, #1
   46c7c:	sub	x0, x29, #0x20
   46c80:	mov	x1, x23
   46c84:	str	x8, [sp, #24]
   46c88:	bl	c330 <mpfr_set_prec@plt>
   46c8c:	mov	w8, wzr
   46c90:	b	46c10 <mpfr_coth@@Base+0x1cc>
   46c94:	ldur	w22, [x29, #-24]
   46c98:	sub	x0, x29, #0x20
   46c9c:	bl	c4f0 <mpfr_clear@plt>
   46ca0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46ca4:	ldr	x1, [x0, #2800]
   46ca8:	add	x0, x0, #0xaf0
   46cac:	blr	x1
   46cb0:	str	w27, [x24, x0]
   46cb4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46cb8:	ldr	x1, [x0, #2736]
   46cbc:	add	x0, x0, #0xab0
   46cc0:	blr	x1
   46cc4:	ldr	x8, [sp, #32]
   46cc8:	str	x8, [x24, x0]
   46ccc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46cd0:	ldr	x1, [x0, #2768]
   46cd4:	add	x0, x0, #0xad0
   46cd8:	blr	x1
   46cdc:	ldr	x8, [sp, #40]
   46ce0:	ldr	w1, [sp, #20]
   46ce4:	mov	w2, w22
   46ce8:	str	x8, [x24, x0]
   46cec:	mov	x0, x19
   46cf0:	bl	c880 <mpfr_underflow@plt>
   46cf4:	mov	w22, w0
   46cf8:	mov	w8, #0x1                   	// #1
   46cfc:	b	46c10 <mpfr_coth@@Base+0x1cc>
   46d00:	ldursw	x2, [x29, #-24]
   46d04:	sub	x0, x29, #0x20
   46d08:	sub	x1, x29, #0x20
   46d0c:	mov	w3, wzr
   46d10:	bl	ccd0 <mpfr_add_si@plt>
   46d14:	b	46c0c <mpfr_coth@@Base+0x1c8>
   46d18:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   46d1c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   46d20:	mov	w1, #0x5f                  	// #95
   46d24:	add	x0, x0, #0xb5c
   46d28:	add	x2, x2, #0x5cf
   46d2c:	bl	d030 <mpfr_assert_fail@plt>
   46d30:	ldr	x8, [sp, #24]
   46d34:	b	46c6c <mpfr_coth@@Base+0x228>
   46d38:	cmp	w8, #0xb
   46d3c:	b.ne	46dd4 <mpfr_coth@@Base+0x390>  // b.any
   46d40:	ldur	w3, [x29, #-24]
   46d44:	sub	x1, x29, #0x20
   46d48:	mov	x0, x19
   46d4c:	mov	w2, w20
   46d50:	bl	cb70 <mpfr_set4@plt>
   46d54:	mov	w22, w0
   46d58:	sub	x0, x29, #0x20
   46d5c:	bl	c4f0 <mpfr_clear@plt>
   46d60:	ldr	x26, [sp, #32]
   46d64:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46d68:	ldr	x1, [x0, #2800]
   46d6c:	add	x0, x0, #0xaf0
   46d70:	blr	x1
   46d74:	str	w27, [x24, x0]
   46d78:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46d7c:	ldr	x1, [x0, #2736]
   46d80:	add	x0, x0, #0xab0
   46d84:	blr	x1
   46d88:	str	x26, [x24, x0]
   46d8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46d90:	ldr	x1, [x0, #2768]
   46d94:	add	x0, x0, #0xad0
   46d98:	blr	x1
   46d9c:	ldr	x9, [sp, #40]
   46da0:	str	x9, [x24, x0]
   46da4:	ldr	x8, [x19, #16]
   46da8:	cmp	x8, x9
   46dac:	b.gt	46e8c <mpfr_coth@@Base+0x448>
   46db0:	cmp	x8, x26
   46db4:	b.lt	46e8c <mpfr_coth@@Base+0x448>  // b.tstop
   46db8:	cbz	w22, 46dd4 <mpfr_coth@@Base+0x390>
   46dbc:	orr	w8, w27, #0x8
   46dc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46dc4:	ldr	x1, [x0, #2800]
   46dc8:	add	x0, x0, #0xaf0
   46dcc:	blr	x1
   46dd0:	str	w8, [x24, x0]
   46dd4:	mov	w0, w22
   46dd8:	ldp	x20, x19, [sp, #160]
   46ddc:	ldp	x22, x21, [sp, #144]
   46de0:	ldp	x24, x23, [sp, #128]
   46de4:	ldp	x26, x25, [sp, #112]
   46de8:	ldp	x28, x27, [sp, #96]
   46dec:	ldp	x29, x30, [sp, #80]
   46df0:	add	sp, sp, #0xb0
   46df4:	ret
   46df8:	cmp	w23, #0x0
   46dfc:	mov	w8, #0x2                   	// #2
   46e00:	cinc	w8, w8, le
   46e04:	cmp	w20, #0x4
   46e08:	csel	w20, w8, w20, eq  // eq = none
   46e0c:	cmp	w20, #0x3
   46e10:	b.eq	46e38 <mpfr_coth@@Base+0x3f4>  // b.none
   46e14:	cmp	w20, #0x2
   46e18:	b.ne	46e50 <mpfr_coth@@Base+0x40c>  // b.any
   46e1c:	cmp	w23, #0x1
   46e20:	b.lt	46e2c <mpfr_coth@@Base+0x3e8>  // b.tstop
   46e24:	mov	x0, x19
   46e28:	bl	c5c0 <mpfr_nextabove@plt>
   46e2c:	mov	w20, #0x2                   	// #2
   46e30:	mov	w22, #0x1                   	// #1
   46e34:	b	46b1c <mpfr_coth@@Base+0xd8>
   46e38:	tbz	w23, #31, 46e44 <mpfr_coth@@Base+0x400>
   46e3c:	mov	x0, x19
   46e40:	bl	c230 <mpfr_nextbelow@plt>
   46e44:	mov	w20, #0x3                   	// #3
   46e48:	mov	w22, #0xffffffff            	// #-1
   46e4c:	b	46b1c <mpfr_coth@@Base+0xd8>
   46e50:	neg	w22, w23
   46e54:	b	46b1c <mpfr_coth@@Base+0xd8>
   46e58:	cmp	x9, x25
   46e5c:	b.ne	46ec4 <mpfr_coth@@Base+0x480>  // b.any
   46e60:	str	x25, [x19, #16]
   46e64:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46e68:	ldr	x1, [x0, #2800]
   46e6c:	add	x0, x0, #0xaf0
   46e70:	blr	x1
   46e74:	mrs	x8, tpidr_el0
   46e78:	ldr	w9, [x8, x0]
   46e7c:	mov	w22, wzr
   46e80:	orr	w9, w9, #0x4
   46e84:	str	w9, [x8, x0]
   46e88:	b	46dd4 <mpfr_coth@@Base+0x390>
   46e8c:	mov	x0, x19
   46e90:	mov	w1, w22
   46e94:	mov	w2, w20
   46e98:	bl	d020 <mpfr_check_range@plt>
   46e9c:	b	46ef0 <mpfr_coth@@Base+0x4ac>
   46ea0:	mov	x8, xzr
   46ea4:	b	46b54 <mpfr_coth@@Base+0x110>
   46ea8:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   46eac:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   46eb0:	add	x0, x0, #0xb5c
   46eb4:	add	x2, x2, #0x580
   46eb8:	mov	w1, #0x43                  	// #67
   46ebc:	bl	d030 <mpfr_assert_fail@plt>
   46ec0:	b	46b48 <mpfr_coth@@Base+0x104>
   46ec4:	ldr	w8, [x21, #8]
   46ec8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   46ecc:	cmp	x9, x10
   46ed0:	b.ne	46ef8 <mpfr_coth@@Base+0x4b4>  // b.any
   46ed4:	cmp	w8, #0x1
   46ed8:	mov	x8, #0xffffffffffffffff    	// #-1
   46edc:	cneg	x1, x8, ge  // ge = tcont
   46ee0:	mov	x0, x19
   46ee4:	mov	x2, xzr
   46ee8:	mov	w3, w20
   46eec:	bl	bed0 <mpfr_set_si_2exp@plt>
   46ef0:	mov	w22, w0
   46ef4:	b	46dd4 <mpfr_coth@@Base+0x390>
   46ef8:	str	w8, [x19, #8]
   46efc:	str	x10, [x19, #16]
   46f00:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46f04:	ldr	x1, [x0, #2800]
   46f08:	add	x0, x0, #0xaf0
   46f0c:	blr	x1
   46f10:	mrs	x8, tpidr_el0
   46f14:	ldr	w9, [x8, x0]
   46f18:	mov	w22, wzr
   46f1c:	orr	w9, w9, #0x20
   46f20:	str	w9, [x8, x0]
   46f24:	b	46dd4 <mpfr_coth@@Base+0x390>

0000000000046f28 <mpfr_round_near_x@@Base>:
   46f28:	stp	x29, x30, [sp, #-96]!
   46f2c:	stp	x28, x27, [sp, #16]
   46f30:	stp	x26, x25, [sp, #32]
   46f34:	stp	x24, x23, [sp, #48]
   46f38:	stp	x22, x21, [sp, #64]
   46f3c:	stp	x20, x19, [sp, #80]
   46f40:	mov	x29, sp
   46f44:	mov	w22, w3
   46f48:	mov	x24, x1
   46f4c:	mov	x19, x0
   46f50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   46f54:	ldr	x1, [x0, #2800]
   46f58:	add	x0, x0, #0xaf0
   46f5c:	blr	x1
   46f60:	ldr	x8, [x19]
   46f64:	cmp	w4, #0x5
   46f68:	csinc	w20, w4, wzr, ne  // ne = any
   46f6c:	add	x9, x8, #0x1
   46f70:	cmp	x9, x2
   46f74:	b.cs	470a8 <mpfr_round_near_x@@Base+0x180>  // b.hs, b.nlast
   46f78:	ldr	x9, [x24]
   46f7c:	mrs	x26, tpidr_el0
   46f80:	ldr	w27, [x26, x0]
   46f84:	cmp	x9, x2
   46f88:	b.cc	46fb8 <mpfr_round_near_x@@Base+0x90>  // b.lo, b.ul, b.last
   46f8c:	sub	x10, x9, #0x1
   46f90:	ldr	x0, [x24, #24]
   46f94:	add	x9, x9, #0x3e
   46f98:	cmp	x10, #0x0
   46f9c:	csel	x9, x9, x10, lt  // lt = tstop
   46fa0:	cmp	w20, #0x0
   46fa4:	asr	x9, x9, #6
   46fa8:	add	x1, x9, #0x1
   46fac:	cinc	x3, x8, eq  // eq = none
   46fb0:	bl	c830 <mpfr_round_p@plt>
   46fb4:	cbz	w0, 470a8 <mpfr_round_near_x@@Base+0x180>
   46fb8:	ldr	x9, [x24, #16]
   46fbc:	ldr	w21, [x24, #8]
   46fc0:	ldr	x8, [x19]
   46fc4:	ldr	x23, [x19, #24]
   46fc8:	str	x9, [x19, #16]
   46fcc:	str	w21, [x19, #8]
   46fd0:	ldr	x9, [x24]
   46fd4:	sub	x10, x8, #0x1
   46fd8:	add	x12, x8, #0x3e
   46fdc:	sub	x11, x9, #0x1
   46fe0:	add	x13, x9, #0x3e
   46fe4:	cmp	x11, #0x0
   46fe8:	csel	x11, x13, x11, lt  // lt = tstop
   46fec:	cmp	x10, #0x0
   46ff0:	csel	x10, x12, x10, lt  // lt = tstop
   46ff4:	asr	x11, x11, #6
   46ff8:	asr	x28, x10, #6
   46ffc:	add	x12, x11, #0x1
   47000:	cmp	x8, x9
   47004:	add	x2, x28, #0x1
   47008:	b.ge	47250 <mpfr_round_near_x@@Base+0x328>  // b.tcont
   4700c:	ldr	x10, [x24, #24]
   47010:	neg	w8, w8
   47014:	mvn	x13, x28
   47018:	ands	x8, x8, #0x3f
   4701c:	add	x9, x10, x12, lsl #3
   47020:	add	x1, x9, x13, lsl #3
   47024:	b.eq	47288 <mpfr_round_near_x@@Base+0x360>  // b.none
   47028:	ldr	x9, [x1]
   4702c:	sub	x8, x8, #0x1
   47030:	mov	w13, #0x1                   	// #1
   47034:	lsl	x13, x13, x8
   47038:	sub	x14, x13, #0x1
   4703c:	and	x8, x9, x13
   47040:	and	x9, x9, x14
   47044:	cbz	w20, 4704c <mpfr_round_near_x@@Base+0x124>
   47048:	cbnz	x8, 47074 <mpfr_round_near_x@@Base+0x14c>
   4704c:	cbnz	x9, 47074 <mpfr_round_near_x@@Base+0x14c>
   47050:	sub	x12, x12, x2
   47054:	cbz	x12, 47074 <mpfr_round_near_x@@Base+0x14c>
   47058:	mvn	x9, x28
   4705c:	add	x11, x9, x11
   47060:	ldr	x9, [x10, x11, lsl #3]
   47064:	subs	x11, x11, #0x1
   47068:	cset	w12, cs  // cs = hs, nlast
   4706c:	cbnz	x9, 47074 <mpfr_round_near_x@@Base+0x14c>
   47070:	tbnz	w12, #0, 47060 <mpfr_round_near_x@@Base+0x138>
   47074:	lsl	x24, x13, #1
   47078:	cmp	w20, #0x5
   4707c:	b.eq	4713c <mpfr_round_near_x@@Base+0x214>  // b.none
   47080:	cmp	w20, #0x1
   47084:	b.eq	470bc <mpfr_round_near_x@@Base+0x194>  // b.none
   47088:	cbnz	w20, 470b0 <mpfr_round_near_x@@Base+0x188>
   4708c:	cbz	x8, 470bc <mpfr_round_near_x@@Base+0x194>
   47090:	cbnz	w22, 470dc <mpfr_round_near_x@@Base+0x1b4>
   47094:	cbnz	x9, 470dc <mpfr_round_near_x@@Base+0x1b4>
   47098:	neg	w25, w21
   4709c:	cmp	x23, x1
   470a0:	b.ne	47148 <mpfr_round_near_x@@Base+0x220>  // b.any
   470a4:	b	47154 <mpfr_round_near_x@@Base+0x22c>
   470a8:	mov	w25, wzr
   470ac:	b	47230 <mpfr_round_near_x@@Base+0x308>
   470b0:	add	w10, w20, w21, lsr #31
   470b4:	cmp	w10, #0x3
   470b8:	b.ne	470d4 <mpfr_round_near_x@@Base+0x1ac>  // b.any
   470bc:	orr	x8, x9, x8
   470c0:	cmp	x8, #0x0
   470c4:	csneg	w25, wzr, w21, eq  // eq = none
   470c8:	cmp	x23, x1
   470cc:	b.ne	47148 <mpfr_round_near_x@@Base+0x220>  // b.any
   470d0:	b	47154 <mpfr_round_near_x@@Base+0x22c>
   470d4:	orr	x8, x9, x8
   470d8:	cbz	x8, 4713c <mpfr_round_near_x@@Base+0x214>
   470dc:	mov	x0, x23
   470e0:	mov	x3, x24
   470e4:	bl	bf60 <__gmpn_add_1@plt>
   470e8:	mov	w25, w21
   470ec:	cbz	x0, 47154 <mpfr_round_near_x@@Base+0x22c>
   470f0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   470f4:	str	x8, [x23, x28, lsl #3]
   470f8:	ldr	x8, [x19, #16]
   470fc:	add	x9, x8, #0x1
   47100:	str	x9, [x19, #16]
   47104:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47108:	ldr	x1, [x0, #2768]
   4710c:	add	x0, x0, #0xad0
   47110:	blr	x1
   47114:	ldr	x9, [x26, x0]
   47118:	mov	w25, w21
   4711c:	cmp	x8, x9
   47120:	b.lt	47154 <mpfr_round_near_x@@Base+0x22c>  // b.tstop
   47124:	mov	x0, x19
   47128:	mov	w1, w20
   4712c:	mov	w2, w21
   47130:	bl	c3a0 <mpfr_overflow@plt>
   47134:	mov	w25, w21
   47138:	b	47154 <mpfr_round_near_x@@Base+0x22c>
   4713c:	mov	w25, wzr
   47140:	cmp	x23, x1
   47144:	b.eq	47154 <mpfr_round_near_x@@Base+0x22c>  // b.none
   47148:	lsl	x2, x2, #3
   4714c:	mov	x0, x23
   47150:	bl	be50 <memcpy@plt>
   47154:	ldr	x8, [x23]
   47158:	neg	x9, x24
   4715c:	and	x8, x8, x9
   47160:	str	x8, [x23]
   47164:	cbnz	w25, 47210 <mpfr_round_near_x@@Base+0x2e8>
   47168:	cbz	w22, 471a4 <mpfr_round_near_x@@Base+0x27c>
   4716c:	cmp	w20, #0x4
   47170:	b.eq	47184 <mpfr_round_near_x@@Base+0x25c>  // b.none
   47174:	mvn	w8, w21
   47178:	add	w8, w20, w8, lsr #31
   4717c:	cmp	w8, #0x3
   47180:	b.ne	4720c <mpfr_round_near_x@@Base+0x2e4>  // b.any
   47184:	mov	x0, x19
   47188:	bl	cb40 <mpfr_nexttoinf@plt>
   4718c:	ldr	x8, [x19, #16]
   47190:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   47194:	cmp	x8, x9
   47198:	b.eq	472d8 <mpfr_round_near_x@@Base+0x3b0>  // b.none
   4719c:	mov	w25, w21
   471a0:	b	47210 <mpfr_round_near_x@@Base+0x2e8>
   471a4:	cmp	w20, #0x1
   471a8:	b.eq	471bc <mpfr_round_near_x@@Base+0x294>  // b.none
   471ac:	add	w8, w20, w21, lsr #31
   471b0:	cmp	w8, #0x3
   471b4:	mov	w25, w21
   471b8:	b.ne	47210 <mpfr_round_near_x@@Base+0x2e8>  // b.any
   471bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   471c0:	ldr	x1, [x0, #2800]
   471c4:	add	x0, x0, #0xaf0
   471c8:	blr	x1
   471cc:	str	w27, [x26, x0]
   471d0:	mov	x0, x19
   471d4:	neg	w25, w21
   471d8:	bl	c930 <mpfr_nexttozero@plt>
   471dc:	ldr	x8, [x19, #16]
   471e0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   471e4:	cmp	x8, x9
   471e8:	b.ne	47210 <mpfr_round_near_x@@Base+0x2e8>  // b.any
   471ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   471f0:	ldr	x1, [x0, #2800]
   471f4:	add	x0, x0, #0xaf0
   471f8:	blr	x1
   471fc:	ldr	w8, [x26, x0]
   47200:	orr	w8, w8, #0x1
   47204:	str	w8, [x26, x0]
   47208:	b	47210 <mpfr_round_near_x@@Base+0x2e8>
   4720c:	neg	w25, w21
   47210:	cbz	w25, 47230 <mpfr_round_near_x@@Base+0x308>
   47214:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47218:	ldr	x1, [x0, #2800]
   4721c:	add	x0, x0, #0xaf0
   47220:	blr	x1
   47224:	ldr	w8, [x26, x0]
   47228:	orr	w8, w8, #0x8
   4722c:	str	w8, [x26, x0]
   47230:	mov	w0, w25
   47234:	ldp	x20, x19, [sp, #80]
   47238:	ldp	x22, x21, [sp, #64]
   4723c:	ldp	x24, x23, [sp, #48]
   47240:	ldp	x26, x25, [sp, #32]
   47244:	ldp	x28, x27, [sp, #16]
   47248:	ldp	x29, x30, [sp], #96
   4724c:	ret
   47250:	ldr	x1, [x24, #24]
   47254:	sub	x24, x2, x12
   47258:	add	x0, x23, x24, lsl #3
   4725c:	cmp	x0, x1
   47260:	b.eq	4726c <mpfr_round_near_x@@Base+0x344>  // b.none
   47264:	lsl	x2, x12, #3
   47268:	bl	be50 <memcpy@plt>
   4726c:	lsl	x2, x24, #3
   47270:	mov	x0, x23
   47274:	mov	w1, wzr
   47278:	bl	c5b0 <memset@plt>
   4727c:	mov	w25, wzr
   47280:	cbnz	w25, 47210 <mpfr_round_near_x@@Base+0x2e8>
   47284:	b	47168 <mpfr_round_near_x@@Base+0x240>
   47288:	ldur	x9, [x1, #-8]
   4728c:	and	x8, x9, #0x8000000000000000
   47290:	and	x9, x9, #0x7fffffffffffffff
   47294:	cbz	w20, 472a4 <mpfr_round_near_x@@Base+0x37c>
   47298:	cbz	x8, 472a4 <mpfr_round_near_x@@Base+0x37c>
   4729c:	mov	w24, #0x1                   	// #1
   472a0:	b	47078 <mpfr_round_near_x@@Base+0x150>
   472a4:	mov	w24, #0x1                   	// #1
   472a8:	cbnz	x9, 47078 <mpfr_round_near_x@@Base+0x150>
   472ac:	sub	x12, x11, x2
   472b0:	cbz	x12, 47078 <mpfr_round_near_x@@Base+0x150>
   472b4:	sub	x9, x11, x28
   472b8:	sub	x11, x9, #0x2
   472bc:	mov	w24, #0x1                   	// #1
   472c0:	ldr	x9, [x10, x11, lsl #3]
   472c4:	subs	x11, x11, #0x1
   472c8:	cset	w12, cs  // cs = hs, nlast
   472cc:	cbnz	x9, 47078 <mpfr_round_near_x@@Base+0x150>
   472d0:	tbnz	w12, #0, 472c0 <mpfr_round_near_x@@Base+0x398>
   472d4:	b	47078 <mpfr_round_near_x@@Base+0x150>
   472d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   472dc:	ldr	x1, [x0, #2800]
   472e0:	add	x0, x0, #0xaf0
   472e4:	blr	x1
   472e8:	ldr	w8, [x26, x0]
   472ec:	orr	w8, w8, #0x2
   472f0:	str	w8, [x26, x0]
   472f4:	b	4719c <mpfr_round_near_x@@Base+0x274>

00000000000472f8 <mpfr_abort_prec_max@@Base>:
   472f8:	stp	x29, x30, [sp, #-16]!
   472fc:	adrp	x8, 72000 <__gmpfr_l2b@@Base+0x2f0>
   47300:	ldr	x8, [x8, #3968]
   47304:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   47308:	add	x0, x0, #0xb90
   4730c:	mov	w1, #0x21                  	// #33
   47310:	ldr	x3, [x8]
   47314:	mov	w2, #0x1                   	// #1
   47318:	mov	x29, sp
   4731c:	bl	cdb0 <fwrite@plt>
   47320:	bl	c8a0 <abort@plt>

0000000000047324 <mpfr_custom_get_size@@Base>:
   47324:	sub	x8, x0, #0x1
   47328:	add	x9, x0, #0x3e
   4732c:	cmp	x8, #0x0
   47330:	csel	x8, x9, x8, lt  // lt = tstop
   47334:	asr	x8, x8, #6
   47338:	lsl	x8, x8, #3
   4733c:	add	x0, x8, #0x8
   47340:	ret

0000000000047344 <mpfr_custom_init@@Base>:
   47344:	ret

0000000000047348 <mpfr_custom_get_significand@@Base>:
   47348:	ldr	x0, [x0, #24]
   4734c:	ret

0000000000047350 <mpfr_custom_get_exp@@Base>:
   47350:	ldr	x0, [x0, #16]
   47354:	ret

0000000000047358 <mpfr_custom_move@@Base>:
   47358:	str	x1, [x0, #24]
   4735c:	ret

0000000000047360 <mpfr_custom_init_set@@Base>:
   47360:	cmp	w1, #0x0
   47364:	mov	w8, #0x1                   	// #1
   47368:	cneg	w9, w1, mi  // mi = first
   4736c:	cneg	w8, w8, lt  // lt = tstop
   47370:	cmp	w9, #0x3
   47374:	b.ne	47388 <mpfr_custom_init_set@@Base+0x28>  // b.any
   47378:	str	x3, [x0]
   4737c:	str	w8, [x0, #8]
   47380:	stp	x2, x4, [x0, #16]
   47384:	ret
   47388:	cbz	w9, 473a0 <mpfr_custom_init_set@@Base+0x40>
   4738c:	cmp	w9, #0x1
   47390:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   47394:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   47398:	csel	x2, x10, x9, eq  // eq = none
   4739c:	b	47378 <mpfr_custom_init_set@@Base+0x18>
   473a0:	mov	x2, #0x2                   	// #2
   473a4:	movk	x2, #0x8000, lsl #48
   473a8:	b	47378 <mpfr_custom_init_set@@Base+0x18>

00000000000473ac <mpfr_custom_get_kind@@Base>:
   473ac:	ldr	x8, [x0, #16]
   473b0:	mov	x9, #0x4                   	// #4
   473b4:	movk	x9, #0x8000, lsl #48
   473b8:	cmp	x8, x9
   473bc:	b.lt	473cc <mpfr_custom_get_kind@@Base+0x20>  // b.tstop
   473c0:	ldr	w8, [x0, #8]
   473c4:	add	w0, w8, w8, lsl #1
   473c8:	ret
   473cc:	mov	x9, #0x2                   	// #2
   473d0:	movk	x9, #0x8000, lsl #48
   473d4:	cmp	x8, x9
   473d8:	b.eq	473f0 <mpfr_custom_get_kind@@Base+0x44>  // b.none
   473dc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   473e0:	cmp	x8, x9
   473e4:	b.ne	473f8 <mpfr_custom_get_kind@@Base+0x4c>  // b.any
   473e8:	ldr	w0, [x0, #8]
   473ec:	ret
   473f0:	mov	w0, wzr
   473f4:	ret
   473f8:	ldr	w8, [x0, #8]
   473fc:	lsl	w0, w8, #1
   47400:	ret

0000000000047404 <mpfr_lngamma@@Base>:
   47404:	stp	x29, x30, [sp, #-48]!
   47408:	stp	x22, x21, [sp, #16]
   4740c:	stp	x20, x19, [sp, #32]
   47410:	ldr	x8, [x1, #16]
   47414:	mov	x22, #0x2                   	// #2
   47418:	movk	x22, #0x8000, lsl #48
   4741c:	add	x9, x22, #0x2
   47420:	mov	x21, x1
   47424:	cmp	x8, x9
   47428:	mov	x19, x0
   4742c:	mov	x29, sp
   47430:	b.lt	47480 <mpfr_lngamma@@Base+0x7c>  // b.tstop
   47434:	ldr	w8, [x21, #8]
   47438:	mov	w20, w2
   4743c:	tbz	w8, #31, 4744c <mpfr_lngamma@@Base+0x48>
   47440:	mov	x0, x21
   47444:	bl	c600 <mpfr_integer_p@plt>
   47448:	cbnz	w0, 47480 <mpfr_lngamma@@Base+0x7c>
   4744c:	ldr	w8, [x21, #8]
   47450:	tbz	w8, #31, 47460 <mpfr_lngamma@@Base+0x5c>
   47454:	mov	x0, x21
   47458:	bl	47504 <mpfr_lngamma@@Base+0x100>
   4745c:	cbz	w0, 474a0 <mpfr_lngamma@@Base+0x9c>
   47460:	mov	x0, x19
   47464:	mov	x1, x21
   47468:	mov	w2, w20
   4746c:	bl	47564 <mpfr_lngamma@@Base+0x160>
   47470:	ldp	x20, x19, [sp, #32]
   47474:	ldp	x22, x21, [sp, #16]
   47478:	ldp	x29, x30, [sp], #48
   4747c:	ret
   47480:	ldr	x9, [x21, #16]
   47484:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   47488:	cmp	x9, x8
   4748c:	b.eq	474f0 <mpfr_lngamma@@Base+0xec>  // b.none
   47490:	mov	x10, #0x2                   	// #2
   47494:	movk	x10, #0x8000, lsl #48
   47498:	cmp	x9, x10
   4749c:	b.ne	474d0 <mpfr_lngamma@@Base+0xcc>  // b.any
   474a0:	str	x22, [x19, #16]
   474a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   474a8:	ldr	x1, [x0, #2800]
   474ac:	add	x0, x0, #0xaf0
   474b0:	blr	x1
   474b4:	mov	x8, x0
   474b8:	mrs	x9, tpidr_el0
   474bc:	ldr	w10, [x9, x8]
   474c0:	mov	w0, wzr
   474c4:	orr	w10, w10, #0x4
   474c8:	str	w10, [x9, x8]
   474cc:	b	47470 <mpfr_lngamma@@Base+0x6c>
   474d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   474d4:	ldr	x1, [x0, #2800]
   474d8:	add	x0, x0, #0xaf0
   474dc:	blr	x1
   474e0:	mrs	x9, tpidr_el0
   474e4:	ldr	w10, [x9, x0]
   474e8:	orr	w10, w10, #0x20
   474ec:	str	w10, [x9, x0]
   474f0:	str	x8, [x19, #16]
   474f4:	mov	w8, #0x1                   	// #1
   474f8:	mov	w0, wzr
   474fc:	str	w8, [x19, #8]
   47500:	b	47470 <mpfr_lngamma@@Base+0x6c>
   47504:	ldr	x8, [x0, #16]
   47508:	cmp	x8, #0x1
   4750c:	b.lt	4751c <mpfr_lngamma@@Base+0x118>  // b.tstop
   47510:	ldr	x9, [x0]
   47514:	cmp	x8, x9
   47518:	b.le	47524 <mpfr_lngamma@@Base+0x120>
   4751c:	mov	w0, wzr
   47520:	ret
   47524:	sub	x10, x9, #0x1
   47528:	add	x9, x9, #0x3e
   4752c:	cmp	x10, #0x0
   47530:	csel	x9, x9, x10, lt  // lt = tstop
   47534:	and	x9, x9, #0xffffffffffffffc0
   47538:	sub	x8, x9, x8
   4753c:	ldr	x11, [x0, #24]
   47540:	add	x9, x8, #0x40
   47544:	add	x8, x8, #0x7f
   47548:	cmp	x9, #0x0
   4754c:	csel	x8, x8, x9, lt  // lt = tstop
   47550:	asr	x8, x8, #6
   47554:	ldr	x8, [x11, x8, lsl #3]
   47558:	lsr	x8, x8, x9
   4755c:	and	w0, w8, #0x1
   47560:	ret
   47564:	sub	sp, sp, #0x1b0
   47568:	stp	x26, x25, [sp, #368]
   4756c:	mov	x26, x1
   47570:	stp	x28, x27, [sp, #352]
   47574:	stp	x22, x21, [sp, #400]
   47578:	mov	w28, w2
   4757c:	mov	x21, x0
   47580:	mov	w1, #0x1                   	// #1
   47584:	mov	x0, x26
   47588:	mov	x2, xzr
   4758c:	stp	d9, d8, [sp, #320]
   47590:	stp	x29, x30, [sp, #336]
   47594:	stp	x24, x23, [sp, #384]
   47598:	stp	x20, x19, [sp, #416]
   4759c:	add	x29, sp, #0x140
   475a0:	mov	w19, #0x1                   	// #1
   475a4:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   475a8:	mov	w22, w0
   475ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   475b0:	ldr	x1, [x0, #2800]
   475b4:	add	x0, x0, #0xaf0
   475b8:	blr	x1
   475bc:	mrs	x10, tpidr_el0
   475c0:	ldr	w24, [x10, x0]
   475c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   475c8:	ldr	x1, [x0, #2736]
   475cc:	add	x0, x0, #0xab0
   475d0:	blr	x1
   475d4:	ldr	x25, [x10, x0]
   475d8:	mov	x8, x0
   475dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   475e0:	ldr	x1, [x0, #2768]
   475e4:	add	x0, x0, #0xad0
   475e8:	blr	x1
   475ec:	ldr	x23, [x10, x0]
   475f0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   475f4:	str	x9, [x10, x8]
   475f8:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   475fc:	str	x10, [sp, #128]
   47600:	str	x8, [x10, x0]
   47604:	cbz	w22, 476f8 <mpfr_lngamma@@Base+0x2f4>
   47608:	cmp	w22, #0x1
   4760c:	b.lt	4782c <mpfr_lngamma@@Base+0x428>  // b.tstop
   47610:	mov	w1, #0x2                   	// #2
   47614:	mov	x0, x26
   47618:	mov	x2, xzr
   4761c:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   47620:	cbz	w0, 476f8 <mpfr_lngamma@@Base+0x2f4>
   47624:	ldr	x8, [x21]
   47628:	ldr	x9, [x26, #16]
   4762c:	add	x10, x8, #0x2
   47630:	cmp	x9, x10
   47634:	b.lt	4782c <mpfr_lngamma@@Base+0x428>  // b.tstop
   47638:	add	x9, x8, #0xa
   4763c:	cmp	x8, #0x33
   47640:	mov	w8, #0x3e                  	// #62
   47644:	csel	x1, x9, x8, gt
   47648:	sub	x0, x29, #0x48
   4764c:	bl	cf60 <mpfr_init2@plt>
   47650:	sub	x0, x29, #0x48
   47654:	mov	w2, #0x2                   	// #2
   47658:	mov	x1, x26
   4765c:	bl	c520 <mpfr_log@plt>
   47660:	sub	x0, x29, #0x48
   47664:	sub	x1, x29, #0x48
   47668:	mov	w2, #0x1                   	// #1
   4766c:	mov	w3, #0x2                   	// #2
   47670:	bl	ca00 <mpfr_sub_ui@plt>
   47674:	sub	x0, x29, #0x48
   47678:	sub	x2, x29, #0x48
   4767c:	mov	w3, #0x2                   	// #2
   47680:	mov	x1, x26
   47684:	bl	c1b0 <mpfr_mul@plt>
   47688:	ldur	x8, [x29, #-56]
   4768c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   47690:	cmp	x8, x9
   47694:	b.ne	4774c <mpfr_lngamma@@Base+0x348>  // b.any
   47698:	sub	x0, x29, #0x48
   4769c:	bl	c4f0 <mpfr_clear@plt>
   476a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   476a4:	ldr	x1, [x0, #2800]
   476a8:	add	x0, x0, #0xaf0
   476ac:	blr	x1
   476b0:	ldr	x8, [sp, #128]
   476b4:	str	w24, [x8, x0]
   476b8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   476bc:	ldr	x1, [x0, #2736]
   476c0:	add	x0, x0, #0xab0
   476c4:	blr	x1
   476c8:	str	x25, [x8, x0]
   476cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   476d0:	ldr	x1, [x0, #2768]
   476d4:	add	x0, x0, #0xad0
   476d8:	blr	x1
   476dc:	str	x23, [x8, x0]
   476e0:	mov	w2, #0x1                   	// #1
   476e4:	mov	x0, x21
   476e8:	mov	w1, w28
   476ec:	bl	c3a0 <mpfr_overflow@plt>
   476f0:	mov	w20, w0
   476f4:	b	48724 <mpfr_lngamma@@Base+0x1320>
   476f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   476fc:	ldr	x1, [x0, #2800]
   47700:	add	x0, x0, #0xaf0
   47704:	blr	x1
   47708:	ldr	x8, [sp, #128]
   4770c:	str	w24, [x8, x0]
   47710:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47714:	ldr	x1, [x0, #2736]
   47718:	add	x0, x0, #0xab0
   4771c:	blr	x1
   47720:	str	x25, [x8, x0]
   47724:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47728:	ldr	x1, [x0, #2768]
   4772c:	add	x0, x0, #0xad0
   47730:	blr	x1
   47734:	str	x23, [x8, x0]
   47738:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   4773c:	mov	w20, wzr
   47740:	str	w19, [x21, #8]
   47744:	str	x8, [x21, #16]
   47748:	b	48724 <mpfr_lngamma@@Base+0x1320>
   4774c:	mov	x9, #0xfffffffffffffeff    	// #-257
   47750:	movk	x9, #0x7fff, lsl #48
   47754:	add	x9, x9, #0x105
   47758:	cmp	x8, x9
   4775c:	b.lt	47824 <mpfr_lngamma@@Base+0x420>  // b.tstop
   47760:	ldur	x9, [x29, #-72]
   47764:	sub	x8, x8, x9
   47768:	cmp	x8, #0x3e
   4776c:	b.lt	47824 <mpfr_lngamma@@Base+0x420>  // b.tstop
   47770:	sub	x8, x9, #0x1
   47774:	add	x10, x9, #0x3e
   47778:	sub	x2, x9, #0x3
   4777c:	ldr	x9, [x21]
   47780:	ldur	x0, [x29, #-48]
   47784:	cmp	x8, #0x0
   47788:	csel	x8, x10, x8, lt  // lt = tstop
   4778c:	cmp	w28, #0x0
   47790:	asr	x8, x8, #6
   47794:	add	x1, x8, #0x1
   47798:	cinc	x3, x9, eq  // eq = none
   4779c:	bl	c830 <mpfr_round_p@plt>
   477a0:	cbz	w0, 47824 <mpfr_lngamma@@Base+0x420>
   477a4:	ldur	w3, [x29, #-64]
   477a8:	sub	x1, x29, #0x48
   477ac:	mov	x0, x21
   477b0:	mov	w2, w28
   477b4:	bl	cb70 <mpfr_set4@plt>
   477b8:	mov	w20, w0
   477bc:	sub	x0, x29, #0x48
   477c0:	bl	c4f0 <mpfr_clear@plt>
   477c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   477c8:	ldr	x1, [x0, #2800]
   477cc:	add	x0, x0, #0xaf0
   477d0:	blr	x1
   477d4:	ldr	x8, [sp, #128]
   477d8:	str	w24, [x8, x0]
   477dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   477e0:	ldr	x1, [x0, #2736]
   477e4:	add	x0, x0, #0xab0
   477e8:	blr	x1
   477ec:	str	x25, [x8, x0]
   477f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   477f4:	ldr	x1, [x0, #2768]
   477f8:	add	x0, x0, #0xad0
   477fc:	blr	x1
   47800:	str	x23, [x8, x0]
   47804:	ldr	x8, [x21, #16]
   47808:	cmp	x8, x23
   4780c:	b.gt	48810 <mpfr_lngamma@@Base+0x140c>
   47810:	cmp	x8, x25
   47814:	b.lt	48810 <mpfr_lngamma@@Base+0x140c>  // b.tstop
   47818:	cbz	w20, 48724 <mpfr_lngamma@@Base+0x1320>
   4781c:	orr	w8, w24, #0x8
   47820:	b	4870c <mpfr_lngamma@@Base+0x1308>
   47824:	sub	x0, x29, #0x48
   47828:	bl	c4f0 <mpfr_clear@plt>
   4782c:	ldr	x8, [x21]
   47830:	ldr	x9, [x26, #16]
   47834:	str	x26, [sp, #136]
   47838:	str	x23, [sp, #80]
   4783c:	neg	x10, x8
   47840:	cmp	x9, x10
   47844:	b.gt	47b58 <mpfr_lngamma@@Base+0x754>
   47848:	str	w22, [sp, #144]
   4784c:	add	x23, x8, #0xe
   47850:	mov	w22, #0x40                  	// #64
   47854:	mov	w27, #0x2                   	// #2
   47858:	sub	x0, x29, #0x28
   4785c:	mov	x1, x23
   47860:	bl	cf60 <mpfr_init2@plt>
   47864:	ldr	w8, [x26, #8]
   47868:	cmp	w8, #0x1
   4786c:	b.lt	47890 <mpfr_lngamma@@Base+0x48c>  // b.tstop
   47870:	sub	x0, x29, #0x28
   47874:	mov	w2, #0x2                   	// #2
   47878:	mov	x1, x26
   4787c:	bl	c520 <mpfr_log@plt>
   47880:	ldur	x1, [x29, #-40]
   47884:	sub	x0, x29, #0x68
   47888:	bl	cf60 <mpfr_init2@plt>
   4788c:	b	478c8 <mpfr_lngamma@@Base+0x4c4>
   47890:	ldr	x1, [x26]
   47894:	sub	x0, x29, #0x68
   47898:	bl	cf60 <mpfr_init2@plt>
   4789c:	sub	x0, x29, #0x68
   478a0:	mov	x1, x26
   478a4:	mov	w2, wzr
   478a8:	bl	c1d0 <mpfr_neg@plt>
   478ac:	sub	x0, x29, #0x28
   478b0:	sub	x1, x29, #0x68
   478b4:	mov	w2, #0x2                   	// #2
   478b8:	bl	c520 <mpfr_log@plt>
   478bc:	ldur	x1, [x29, #-40]
   478c0:	sub	x0, x29, #0x68
   478c4:	bl	c330 <mpfr_set_prec@plt>
   478c8:	sub	x0, x29, #0x28
   478cc:	sub	x1, x29, #0x28
   478d0:	mov	w2, #0x3                   	// #3
   478d4:	bl	c1d0 <mpfr_neg@plt>
   478d8:	ldur	w3, [x29, #-32]
   478dc:	sub	x0, x29, #0x68
   478e0:	sub	x1, x29, #0x28
   478e4:	mov	w2, #0x3                   	// #3
   478e8:	bl	cb70 <mpfr_set4@plt>
   478ec:	sub	x0, x29, #0x68
   478f0:	bl	c5c0 <mpfr_nextabove@plt>
   478f4:	ldur	x1, [x29, #-40]
   478f8:	sub	x0, x29, #0x88
   478fc:	bl	cf60 <mpfr_init2@plt>
   47900:	ldr	w8, [x26, #8]
   47904:	cmp	w8, #0x0
   47908:	cinc	w2, w27, le
   4790c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47910:	ldr	x1, [x0, #2832]
   47914:	add	x0, x0, #0xb10
   47918:	blr	x1
   4791c:	ldr	x8, [sp, #128]
   47920:	add	x19, x8, x0
   47924:	sub	x0, x29, #0x88
   47928:	mov	x1, x19
   4792c:	bl	c840 <mpfr_cache@plt>
   47930:	sub	x0, x29, #0x88
   47934:	sub	x1, x29, #0x88
   47938:	mov	w3, #0x3                   	// #3
   4793c:	mov	x2, x26
   47940:	bl	c1b0 <mpfr_mul@plt>
   47944:	sub	x0, x29, #0x28
   47948:	sub	x1, x29, #0x28
   4794c:	sub	x2, x29, #0x88
   47950:	mov	w3, #0x3                   	// #3
   47954:	bl	bfd0 <mpfr_sub@plt>
   47958:	ldr	w8, [x26, #8]
   4795c:	sub	x0, x29, #0x88
   47960:	mov	x1, x19
   47964:	cmp	w8, #0x0
   47968:	cinc	w2, w27, gt
   4796c:	bl	c840 <mpfr_cache@plt>
   47970:	sub	x0, x29, #0x88
   47974:	sub	x1, x29, #0x88
   47978:	mov	w3, #0x2                   	// #2
   4797c:	mov	x2, x26
   47980:	bl	c1b0 <mpfr_mul@plt>
   47984:	sub	x0, x29, #0x68
   47988:	sub	x1, x29, #0x68
   4798c:	sub	x2, x29, #0x88
   47990:	mov	w3, #0x3                   	// #3
   47994:	bl	bfd0 <mpfr_sub@plt>
   47998:	sub	x0, x29, #0x88
   4799c:	mov	w3, #0x2                   	// #2
   479a0:	mov	x1, x26
   479a4:	mov	x2, x26
   479a8:	bl	c1b0 <mpfr_mul@plt>
   479ac:	sub	x0, x29, #0x68
   479b0:	sub	x1, x29, #0x68
   479b4:	sub	x2, x29, #0x88
   479b8:	mov	w3, #0x2                   	// #2
   479bc:	bl	c640 <mpfr_add@plt>
   479c0:	ldr	x1, [x21]
   479c4:	sub	x0, x29, #0x28
   479c8:	mov	w2, w28
   479cc:	bl	ce60 <mpfr_prec_round@plt>
   479d0:	ldr	x1, [x21]
   479d4:	mov	w20, w0
   479d8:	sub	x0, x29, #0x68
   479dc:	mov	w2, w28
   479e0:	bl	ce60 <mpfr_prec_round@plt>
   479e4:	cmp	w20, #0x0
   479e8:	cset	w8, gt
   479ec:	csinv	w8, w8, wzr, ge  // ge = tcont
   479f0:	cmp	w0, #0x0
   479f4:	cset	w9, gt
   479f8:	csinv	w9, w9, wzr, ge  // ge = tcont
   479fc:	cmp	w8, w9
   47a00:	b.ne	47a18 <mpfr_lngamma@@Base+0x614>  // b.any
   47a04:	sub	x0, x29, #0x28
   47a08:	sub	x1, x29, #0x68
   47a0c:	mov	w2, #0x1                   	// #1
   47a10:	bl	ce90 <mpfr_cmp3@plt>
   47a14:	cbz	w0, 47a98 <mpfr_lngamma@@Base+0x694>
   47a18:	sub	x0, x29, #0x28
   47a1c:	bl	c4f0 <mpfr_clear@plt>
   47a20:	sub	x0, x29, #0x68
   47a24:	bl	c4f0 <mpfr_clear@plt>
   47a28:	sub	x0, x29, #0x88
   47a2c:	bl	c4f0 <mpfr_clear@plt>
   47a30:	mov	x8, #0xfffffffffffffeff    	// #-257
   47a34:	movk	x8, #0x7fff, lsl #48
   47a38:	sub	x8, x8, x23
   47a3c:	cmp	x22, x8
   47a40:	b.gt	47a6c <mpfr_lngamma@@Base+0x668>
   47a44:	ldr	x26, [sp, #136]
   47a48:	add	x23, x23, x22
   47a4c:	cmp	x23, #0x0
   47a50:	cinc	x9, x23, lt  // lt = tstop
   47a54:	ldr	x8, [x26, #16]
   47a58:	asr	x22, x9, #1
   47a5c:	neg	x8, x8
   47a60:	cmp	x23, x8
   47a64:	b.le	47858 <mpfr_lngamma@@Base+0x454>
   47a68:	b	47a88 <mpfr_lngamma@@Base+0x684>
   47a6c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   47a70:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   47a74:	mov	w1, #0x131                 	// #305
   47a78:	add	x0, x0, #0x8b7
   47a7c:	add	x2, x2, #0x99a
   47a80:	bl	d030 <mpfr_assert_fail@plt>
   47a84:	b	47a44 <mpfr_lngamma@@Base+0x640>
   47a88:	mov	w8, #0x1                   	// #1
   47a8c:	ldr	w22, [sp, #144]
   47a90:	cbnz	w8, 47b58 <mpfr_lngamma@@Base+0x754>
   47a94:	b	48724 <mpfr_lngamma@@Base+0x1320>
   47a98:	ldur	w3, [x29, #-96]
   47a9c:	sub	x1, x29, #0x68
   47aa0:	mov	x0, x21
   47aa4:	mov	w2, w28
   47aa8:	bl	cb70 <mpfr_set4@plt>
   47aac:	sub	x0, x29, #0x28
   47ab0:	bl	c4f0 <mpfr_clear@plt>
   47ab4:	sub	x0, x29, #0x68
   47ab8:	bl	c4f0 <mpfr_clear@plt>
   47abc:	sub	x0, x29, #0x88
   47ac0:	bl	c4f0 <mpfr_clear@plt>
   47ac4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47ac8:	ldr	x1, [x0, #2800]
   47acc:	add	x0, x0, #0xaf0
   47ad0:	blr	x1
   47ad4:	ldr	x8, [sp, #128]
   47ad8:	str	w24, [x8, x0]
   47adc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47ae0:	ldr	x1, [x0, #2736]
   47ae4:	add	x0, x0, #0xab0
   47ae8:	blr	x1
   47aec:	str	x25, [x8, x0]
   47af0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47af4:	ldr	x1, [x0, #2768]
   47af8:	add	x0, x0, #0xad0
   47afc:	blr	x1
   47b00:	ldr	x23, [sp, #80]
   47b04:	str	x23, [x8, x0]
   47b08:	ldr	x8, [x21, #16]
   47b0c:	cmp	x8, x23
   47b10:	b.gt	487f0 <mpfr_lngamma@@Base+0x13ec>
   47b14:	cmp	x8, x25
   47b18:	b.lt	487f0 <mpfr_lngamma@@Base+0x13ec>  // b.tstop
   47b1c:	ldr	x26, [sp, #136]
   47b20:	ldr	w22, [sp, #144]
   47b24:	cbz	w20, 47b50 <mpfr_lngamma@@Base+0x74c>
   47b28:	orr	w9, w24, #0x8
   47b2c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47b30:	ldr	x1, [x0, #2800]
   47b34:	add	x0, x0, #0xaf0
   47b38:	blr	x1
   47b3c:	ldr	x10, [sp, #128]
   47b40:	mov	w8, wzr
   47b44:	str	w9, [x10, x0]
   47b48:	cbnz	w8, 47b58 <mpfr_lngamma@@Base+0x754>
   47b4c:	b	48724 <mpfr_lngamma@@Base+0x1320>
   47b50:	mov	w8, wzr
   47b54:	cbz	w8, 48724 <mpfr_lngamma@@Base+0x1320>
   47b58:	ldr	x23, [x21]
   47b5c:	sub	x0, x29, #0x28
   47b60:	mov	w1, #0x1                   	// #1
   47b64:	str	x25, [sp, #56]
   47b68:	str	w24, [sp, #64]
   47b6c:	bl	cf60 <mpfr_init2@plt>
   47b70:	sub	x0, x29, #0x48
   47b74:	mov	w1, #0x1                   	// #1
   47b78:	bl	cf60 <mpfr_init2@plt>
   47b7c:	sub	x0, x29, #0x68
   47b80:	mov	w1, #0x1                   	// #1
   47b84:	bl	cf60 <mpfr_init2@plt>
   47b88:	sub	x0, x29, #0x88
   47b8c:	mov	w1, #0x1                   	// #1
   47b90:	bl	cf60 <mpfr_init2@plt>
   47b94:	add	x0, sp, #0x98
   47b98:	mov	w1, #0x1                   	// #1
   47b9c:	bl	cf60 <mpfr_init2@plt>
   47ba0:	subs	x19, x23, #0x1
   47ba4:	str	x21, [sp, #72]
   47ba8:	str	w28, [sp, #68]
   47bac:	tbnz	w22, #31, 483ac <mpfr_lngamma@@Base+0xfa8>
   47bb0:	b.eq	48760 <mpfr_lngamma@@Base+0x135c>  // b.none
   47bb4:	b.le	48770 <mpfr_lngamma@@Base+0x136c>
   47bb8:	clz	x8, x19
   47bbc:	mov	w9, #0x40                  	// #64
   47bc0:	sub	x8, x9, x8
   47bc4:	add	x19, x8, x23
   47bc8:	subs	x20, x19, #0x1
   47bcc:	b.eq	48768 <mpfr_lngamma@@Base+0x1364>  // b.none
   47bd0:	b.le	4878c <mpfr_lngamma@@Base+0x1388>
   47bd4:	clz	x8, x20
   47bd8:	mov	w9, #0x4d                  	// #77
   47bdc:	sub	x8, x9, x8
   47be0:	add	x21, x8, x19
   47be4:	adrp	x8, 60000 <mpfr_bases@@Base+0x408>
   47be8:	adrp	x9, 60000 <mpfr_bases@@Base+0x408>
   47bec:	ldr	d8, [x8, #3000]
   47bf0:	ldr	d9, [x9, #3008]
   47bf4:	cmp	w28, #0x0
   47bf8:	mov	w19, #0x40                  	// #64
   47bfc:	mov	w20, #0x3                   	// #3
   47c00:	cinc	x10, x23, eq  // eq = none
   47c04:	mov	w22, #0x80000000            	// #-2147483648
   47c08:	str	x10, [sp, #8]
   47c0c:	sub	x0, x29, #0x28
   47c10:	mov	w1, #0x35                  	// #53
   47c14:	bl	c330 <mpfr_set_prec@plt>
   47c18:	sub	x0, x29, #0x28
   47c1c:	mov	x1, x21
   47c20:	bl	48c74 <mpfr_lgamma@@Base+0x454>
   47c24:	sub	x0, x29, #0x28
   47c28:	mov	w1, #0x4                   	// #4
   47c2c:	mov	x2, #0xfffffffffffffffc    	// #-4
   47c30:	mov	w3, #0x2                   	// #2
   47c34:	bl	cac0 <mpfr_set_ui_2exp@plt>
   47c38:	sub	x0, x29, #0x28
   47c3c:	sub	x1, x29, #0x28
   47c40:	mov	w3, #0x2                   	// #2
   47c44:	mov	x2, x21
   47c48:	bl	bea0 <mpfr_mul_ui@plt>
   47c4c:	sub	x1, x29, #0x28
   47c50:	mov	w2, #0x1                   	// #1
   47c54:	mov	x0, x26
   47c58:	bl	ce90 <mpfr_cmp3@plt>
   47c5c:	tbnz	w0, #31, 47c68 <mpfr_lngamma@@Base+0x864>
   47c60:	mov	w24, #0x3                   	// #3
   47c64:	b	47c90 <mpfr_lngamma@@Base+0x88c>
   47c68:	sub	x0, x29, #0x28
   47c6c:	sub	x1, x29, #0x28
   47c70:	mov	w3, #0x2                   	// #2
   47c74:	mov	x2, x26
   47c78:	bl	bfd0 <mpfr_sub@plt>
   47c7c:	sub	x0, x29, #0x28
   47c80:	mov	w1, #0x2                   	// #2
   47c84:	bl	c100 <mpfr_get_ui@plt>
   47c88:	cmp	x0, #0x3
   47c8c:	csel	x24, x0, x20, hi  // hi = pmore
   47c90:	sub	x0, x29, #0x28
   47c94:	mov	x1, x21
   47c98:	str	x19, [sp]
   47c9c:	bl	c330 <mpfr_set_prec@plt>
   47ca0:	sub	x0, x29, #0x48
   47ca4:	mov	x1, x21
   47ca8:	bl	c330 <mpfr_set_prec@plt>
   47cac:	sub	x0, x29, #0x68
   47cb0:	mov	x1, x21
   47cb4:	bl	c330 <mpfr_set_prec@plt>
   47cb8:	sub	x0, x29, #0x88
   47cbc:	mov	x1, x21
   47cc0:	bl	c330 <mpfr_set_prec@plt>
   47cc4:	add	x0, sp, #0x98
   47cc8:	mov	x1, x21
   47ccc:	bl	c330 <mpfr_set_prec@plt>
   47cd0:	add	x0, sp, #0x98
   47cd4:	mov	x1, x26
   47cd8:	mov	x2, x24
   47cdc:	mov	w3, wzr
   47ce0:	bl	c710 <mpfr_add_ui@plt>
   47ce4:	sub	x0, x29, #0x28
   47ce8:	add	x1, sp, #0x98
   47cec:	mov	w2, wzr
   47cf0:	bl	c520 <mpfr_log@plt>
   47cf4:	sub	x0, x29, #0x48
   47cf8:	add	x1, sp, #0x98
   47cfc:	mov	w2, #0x1                   	// #1
   47d00:	mov	w3, wzr
   47d04:	bl	c780 <mpfr_mul_2ui@plt>
   47d08:	sub	x0, x29, #0x48
   47d0c:	sub	x1, x29, #0x48
   47d10:	mov	w2, #0x1                   	// #1
   47d14:	mov	w3, wzr
   47d18:	bl	ca00 <mpfr_sub_ui@plt>
   47d1c:	sub	x0, x29, #0x28
   47d20:	sub	x1, x29, #0x28
   47d24:	sub	x2, x29, #0x48
   47d28:	mov	w3, wzr
   47d2c:	bl	c1b0 <mpfr_mul@plt>
   47d30:	sub	x0, x29, #0x28
   47d34:	sub	x1, x29, #0x28
   47d38:	mov	w2, #0x1                   	// #1
   47d3c:	mov	w3, wzr
   47d40:	bl	cde0 <mpfr_div_2ui@plt>
   47d44:	sub	x0, x29, #0x28
   47d48:	sub	x1, x29, #0x28
   47d4c:	add	x2, sp, #0x98
   47d50:	mov	w3, wzr
   47d54:	bl	bfd0 <mpfr_sub@plt>
   47d58:	sub	x0, x29, #0x68
   47d5c:	add	x2, sp, #0x98
   47d60:	mov	w1, #0x1                   	// #1
   47d64:	mov	w3, wzr
   47d68:	bl	c7b0 <mpfr_ui_div@plt>
   47d6c:	sub	x0, x29, #0x48
   47d70:	sub	x1, x29, #0x68
   47d74:	mov	w2, #0xc                   	// #12
   47d78:	mov	w3, wzr
   47d7c:	bl	d160 <mpfr_div_ui@plt>
   47d80:	ldur	w3, [x29, #-64]
   47d84:	sub	x0, x29, #0x88
   47d88:	sub	x1, x29, #0x48
   47d8c:	mov	w2, wzr
   47d90:	bl	cb70 <mpfr_set4@plt>
   47d94:	sub	x0, x29, #0x28
   47d98:	sub	x1, x29, #0x28
   47d9c:	sub	x2, x29, #0x88
   47da0:	mov	w3, wzr
   47da4:	bl	c640 <mpfr_add@plt>
   47da8:	sub	x0, x29, #0x68
   47dac:	sub	x1, x29, #0x68
   47db0:	sub	x2, x29, #0x68
   47db4:	mov	w3, wzr
   47db8:	bl	c1b0 <mpfr_mul@plt>
   47dbc:	ldur	x8, [x29, #-120]
   47dc0:	ldur	x9, [x29, #-24]
   47dc4:	add	x8, x8, x21
   47dc8:	cmp	x8, x9
   47dcc:	b.ge	480bc <mpfr_lngamma@@Base+0xcb8>  // b.tcont
   47dd0:	mov	w23, #0x2                   	// #2
   47dd4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   47dd8:	ldr	x1, [x0, #2848]
   47ddc:	add	x0, x0, #0xb20
   47de0:	blr	x1
   47de4:	ldr	x8, [sp, #128]
   47de8:	mov	w2, wzr
   47dec:	add	x1, x8, x0
   47df0:	sub	x0, x29, #0x88
   47df4:	bl	c840 <mpfr_cache@plt>
   47df8:	sub	x0, x29, #0x88
   47dfc:	sub	x1, x29, #0x88
   47e00:	mov	w2, #0x1                   	// #1
   47e04:	mov	w3, wzr
   47e08:	bl	c780 <mpfr_mul_2ui@plt>
   47e0c:	ldr	w3, [x26, #8]
   47e10:	sub	x0, x29, #0x48
   47e14:	mov	x1, x26
   47e18:	mov	w2, wzr
   47e1c:	bl	cb70 <mpfr_set4@plt>
   47e20:	mov	w8, #0x2                   	// #2
   47e24:	mov	w0, #0x40                  	// #64
   47e28:	mov	w22, #0x20                  	// #32
   47e2c:	mov	w25, #0x1                   	// #1
   47e30:	mov	x9, x8
   47e34:	add	x8, x25, #0x2
   47e38:	mul	x8, x8, x8
   47e3c:	add	x25, x25, #0x1
   47e40:	add	x22, x22, #0x10
   47e44:	add	x0, x0, #0x20
   47e48:	cmp	x8, x24
   47e4c:	add	x8, x9, #0x1
   47e50:	b.cc	47e30 <mpfr_lngamma@@Base+0xa2c>  // b.lo, b.ul, b.last
   47e54:	str	x9, [sp, #104]
   47e58:	str	x0, [sp, #32]
   47e5c:	bl	d1f0 <mpfr_allocate_func@plt>
   47e60:	cmp	x25, #0x2
   47e64:	mov	x27, x0
   47e68:	b.cc	47e90 <mpfr_lngamma@@Base+0xa8c>  // b.lo, b.ul, b.last
   47e6c:	add	x19, x27, #0x40
   47e70:	mov	w20, #0x2                   	// #2
   47e74:	mov	x0, x19
   47e78:	mov	x1, x21
   47e7c:	bl	cf60 <mpfr_init2@plt>
   47e80:	add	x20, x20, #0x1
   47e84:	cmp	x20, x25
   47e88:	add	x19, x19, #0x20
   47e8c:	b.ls	47e74 <mpfr_lngamma@@Base+0xa70>  // b.plast
   47e90:	add	x0, x27, #0x40
   47e94:	mov	x1, x26
   47e98:	mov	w2, wzr
   47e9c:	bl	c8c0 <mpfr_sqr@plt>
   47ea0:	cmp	x25, #0x3
   47ea4:	b.cs	481e4 <mpfr_lngamma@@Base+0xde0>  // b.hs, b.nlast
   47ea8:	mov	x0, x22
   47eac:	bl	d1f0 <mpfr_allocate_func@plt>
   47eb0:	mov	x28, x0
   47eb4:	mov	x20, xzr
   47eb8:	mov	x19, x0
   47ebc:	mov	x0, x19
   47ec0:	bl	c400 <mpfr_mpz_init@plt>
   47ec4:	add	x20, x20, #0x1
   47ec8:	cmp	x20, x25
   47ecc:	add	x19, x19, #0x10
   47ed0:	b.ls	47ebc <mpfr_lngamma@@Base+0xab8>  // b.plast
   47ed4:	add	x8, x25, #0x1
   47ed8:	cmp	x8, x24
   47edc:	stp	x27, x22, [sp, #16]
   47ee0:	stp	x23, x21, [sp, #40]
   47ee4:	b.ls	48234 <mpfr_lngamma@@Base+0xe30>  // b.plast
   47ee8:	mov	w23, #0x1                   	// #1
   47eec:	mov	x20, xzr
   47ef0:	mov	x19, x28
   47ef4:	mov	x0, x19
   47ef8:	bl	c610 <mpfr_mpz_clear@plt>
   47efc:	add	x20, x20, #0x1
   47f00:	cmp	x20, x25
   47f04:	add	x19, x19, #0x10
   47f08:	b.ls	47ef4 <mpfr_lngamma@@Base+0xaf0>  // b.plast
   47f0c:	ldr	x1, [sp, #24]
   47f10:	mov	x0, x28
   47f14:	bl	d120 <mpfr_free_func@plt>
   47f18:	ldp	x28, x21, [sp, #40]
   47f1c:	ldr	x27, [sp, #16]
   47f20:	cmp	x25, #0x2
   47f24:	mov	w22, #0x80000000            	// #-2147483648
   47f28:	b.cc	47f4c <mpfr_lngamma@@Base+0xb48>  // b.lo, b.ul, b.last
   47f2c:	add	x19, x27, #0x40
   47f30:	mov	w20, #0x2                   	// #2
   47f34:	mov	x0, x19
   47f38:	bl	c4f0 <mpfr_clear@plt>
   47f3c:	add	x20, x20, #0x1
   47f40:	cmp	x20, x25
   47f44:	add	x19, x19, #0x20
   47f48:	b.ls	47f34 <mpfr_lngamma@@Base+0xb30>  // b.plast
   47f4c:	ldr	x1, [sp, #32]
   47f50:	mov	x0, x27
   47f54:	bl	d120 <mpfr_free_func@plt>
   47f58:	cmp	x23, x24
   47f5c:	b.cs	47f94 <mpfr_lngamma@@Base+0xb90>  // b.hs, b.nlast
   47f60:	sub	x0, x29, #0x68
   47f64:	mov	x1, x26
   47f68:	mov	x2, x23
   47f6c:	mov	w3, wzr
   47f70:	bl	c710 <mpfr_add_ui@plt>
   47f74:	sub	x0, x29, #0x48
   47f78:	sub	x1, x29, #0x48
   47f7c:	sub	x2, x29, #0x68
   47f80:	mov	w3, wzr
   47f84:	bl	c1b0 <mpfr_mul@plt>
   47f88:	add	x23, x23, #0x1
   47f8c:	cmp	x24, x23
   47f90:	b.ne	47f60 <mpfr_lngamma@@Base+0xb5c>  // b.any
   47f94:	sub	x0, x29, #0x48
   47f98:	sub	x1, x29, #0x48
   47f9c:	sub	x2, x29, #0x48
   47fa0:	mov	w3, wzr
   47fa4:	bl	c1b0 <mpfr_mul@plt>
   47fa8:	sub	x0, x29, #0x88
   47fac:	sub	x1, x29, #0x88
   47fb0:	sub	x2, x29, #0x48
   47fb4:	mov	w3, wzr
   47fb8:	bl	caf0 <mpfr_div@plt>
   47fbc:	sub	x0, x29, #0x48
   47fc0:	sub	x1, x29, #0x88
   47fc4:	mov	w2, wzr
   47fc8:	bl	c520 <mpfr_log@plt>
   47fcc:	sub	x0, x29, #0x48
   47fd0:	sub	x1, x29, #0x48
   47fd4:	mov	w2, #0x1                   	// #1
   47fd8:	mov	w3, wzr
   47fdc:	bl	cde0 <mpfr_div_2ui@plt>
   47fe0:	ldur	x19, [x29, #-56]
   47fe4:	ucvtf	d0, x24
   47fe8:	fmul	d0, d0, d8
   47fec:	fadd	d0, d0, d9
   47ff0:	bl	ce40 <__gmpfr_ceil_log2@plt>
   47ff4:	ldur	x20, [x29, #-24]
   47ff8:	ucvtf	d0, x28
   47ffc:	mov	x8, #0x4048000000000000    	// #4631952216750555136
   48000:	fadd	d0, d0, d0
   48004:	fmov	d1, x8
   48008:	fadd	d0, d0, d1
   4800c:	add	x19, x0, x19
   48010:	bl	ce40 <__gmpfr_ceil_log2@plt>
   48014:	add	x20, x0, x20
   48018:	sub	x0, x29, #0x28
   4801c:	sub	x1, x29, #0x28
   48020:	sub	x2, x29, #0x48
   48024:	mov	w3, wzr
   48028:	bl	c640 <mpfr_add@plt>
   4802c:	ldur	x8, [x29, #-24]
   48030:	mov	x9, #0xfffffffffffffeff    	// #-257
   48034:	movk	x9, #0x7fff, lsl #48
   48038:	add	x9, x9, #0x105
   4803c:	cmp	x8, x9
   48040:	b.lt	48088 <mpfr_lngamma@@Base+0xc84>  // b.tstop
   48044:	ldur	x9, [x29, #-40]
   48048:	cmp	x19, x20
   4804c:	csel	x10, x19, x20, gt
   48050:	ldur	x0, [x29, #-16]
   48054:	sub	x11, x9, #0x1
   48058:	csinc	x10, x10, x20, ne  // ne = any
   4805c:	add	x9, x9, #0x3e
   48060:	cmp	x11, #0x0
   48064:	ldr	x3, [sp, #8]
   48068:	csel	x9, x9, x11, lt  // lt = tstop
   4806c:	add	x8, x21, x8
   48070:	mvn	x10, x10
   48074:	asr	x9, x9, #6
   48078:	add	x1, x9, #0x1
   4807c:	add	x2, x10, x8
   48080:	bl	c830 <mpfr_round_p@plt>
   48084:	cbnz	w0, 4865c <mpfr_lngamma@@Base+0x1258>
   48088:	ldr	x19, [sp]
   4808c:	mov	x8, #0xfffffffffffffeff    	// #-257
   48090:	movk	x8, #0x7fff, lsl #48
   48094:	sub	x8, x8, x21
   48098:	cmp	x19, x8
   4809c:	b.gt	48390 <mpfr_lngamma@@Base+0xf8c>
   480a0:	add	x21, x21, x19
   480a4:	ldr	x26, [sp, #136]
   480a8:	cmp	x21, #0x0
   480ac:	cinc	x8, x21, lt  // lt = tstop
   480b0:	asr	x19, x8, #1
   480b4:	mov	w20, #0x3                   	// #3
   480b8:	b	47c0c <mpfr_lngamma@@Base+0x808>
   480bc:	mov	w19, #0x5                   	// #5
   480c0:	mov	w23, #0x2                   	// #2
   480c4:	b	48188 <mpfr_lngamma@@Base+0xd84>
   480c8:	sub	x0, x29, #0x48
   480cc:	sub	x1, x29, #0x48
   480d0:	mov	w3, wzr
   480d4:	bl	bea0 <mpfr_mul_ui@plt>
   480d8:	sub	x2, x19, #0x4
   480dc:	sub	x0, x29, #0x48
   480e0:	sub	x1, x29, #0x48
   480e4:	mov	w3, wzr
   480e8:	bl	bea0 <mpfr_mul_ui@plt>
   480ec:	sub	x0, x29, #0x48
   480f0:	sub	x1, x29, #0x48
   480f4:	mov	x2, x20
   480f8:	mov	w3, wzr
   480fc:	bl	d160 <mpfr_div_ui@plt>
   48100:	sub	x2, x19, #0x2
   48104:	sub	x0, x29, #0x48
   48108:	sub	x1, x29, #0x48
   4810c:	mov	w3, wzr
   48110:	bl	d160 <mpfr_div_ui@plt>
   48114:	sub	x0, x29, #0x48
   48118:	sub	x1, x29, #0x48
   4811c:	mov	x2, x20
   48120:	mov	w3, wzr
   48124:	bl	d160 <mpfr_div_ui@plt>
   48128:	mov	x2, x19
   4812c:	sub	x0, x29, #0x48
   48130:	sub	x1, x29, #0x48
   48134:	mov	w3, wzr
   48138:	bl	d160 <mpfr_div_ui@plt>
   4813c:	mov	x0, x23
   48140:	bl	cd10 <mpfr_bernoulli_cache@plt>
   48144:	mov	x2, x0
   48148:	sub	x0, x29, #0x88
   4814c:	sub	x1, x29, #0x48
   48150:	mov	w3, wzr
   48154:	bl	c9a0 <mpfr_mul_z@plt>
   48158:	sub	x0, x29, #0x28
   4815c:	sub	x1, x29, #0x28
   48160:	sub	x2, x29, #0x88
   48164:	mov	w3, wzr
   48168:	bl	c640 <mpfr_add@plt>
   4816c:	ldur	x8, [x29, #-120]
   48170:	ldur	x9, [x29, #-24]
   48174:	add	x23, x23, #0x1
   48178:	add	x19, x19, #0x2
   4817c:	add	x8, x8, x21
   48180:	cmp	x8, x9
   48184:	b.lt	47dd4 <mpfr_lngamma@@Base+0x9d0>  // b.tstop
   48188:	sub	x0, x29, #0x48
   4818c:	sub	x1, x29, #0x48
   48190:	sub	x2, x29, #0x68
   48194:	mov	w3, wzr
   48198:	bl	c1b0 <mpfr_mul@plt>
   4819c:	sub	x20, x19, #0x1
   481a0:	cmp	x23, x22
   481a4:	sub	x2, x19, #0x3
   481a8:	b.hi	480c8 <mpfr_lngamma@@Base+0xcc4>  // b.pmore
   481ac:	sub	x8, x19, #0x4
   481b0:	mul	x2, x2, x8
   481b4:	sub	x0, x29, #0x48
   481b8:	sub	x1, x29, #0x48
   481bc:	mov	w3, wzr
   481c0:	bl	bea0 <mpfr_mul_ui@plt>
   481c4:	sub	x8, x19, #0x2
   481c8:	mul	x2, x8, x20
   481cc:	sub	x0, x29, #0x48
   481d0:	sub	x1, x29, #0x48
   481d4:	mov	w3, wzr
   481d8:	bl	d160 <mpfr_div_ui@plt>
   481dc:	mul	x2, x19, x20
   481e0:	b	4812c <mpfr_lngamma@@Base+0xd28>
   481e4:	add	x20, x27, #0x60
   481e8:	mov	w19, #0x3                   	// #3
   481ec:	b	48214 <mpfr_lngamma@@Base+0xe10>
   481f0:	sub	x1, x20, #0x20
   481f4:	mov	x0, x20
   481f8:	mov	x2, x26
   481fc:	mov	w3, wzr
   48200:	bl	c1b0 <mpfr_mul@plt>
   48204:	add	x19, x19, #0x1
   48208:	cmp	x19, x25
   4820c:	add	x20, x20, #0x20
   48210:	b.hi	47ea8 <mpfr_lngamma@@Base+0xaa4>  // b.pmore
   48214:	tbnz	w19, #0, 481f0 <mpfr_lngamma@@Base+0xdec>
   48218:	lsl	x8, x19, #4
   4821c:	and	x8, x8, #0xffffffffffffffe0
   48220:	add	x1, x27, x8
   48224:	mov	x0, x20
   48228:	mov	w2, wzr
   4822c:	bl	c8c0 <mpfr_sqr@plt>
   48230:	b	48204 <mpfr_lngamma@@Base+0xe00>
   48234:	add	x9, x28, #0x10
   48238:	str	x9, [sp, #96]
   4823c:	add	x9, x27, #0x20
   48240:	str	x9, [sp, #88]
   48244:	mov	w9, #0x1                   	// #1
   48248:	str	x9, [sp, #144]
   4824c:	str	x24, [sp, #112]
   48250:	b	4827c <mpfr_lngamma@@Base+0xe78>
   48254:	sub	x0, x29, #0x48
   48258:	sub	x1, x29, #0x48
   4825c:	sub	x2, x29, #0x68
   48260:	mov	w3, wzr
   48264:	bl	c1b0 <mpfr_mul@plt>
   48268:	ldp	x24, x23, [sp, #112]
   4826c:	add	x8, x23, x25
   48270:	cmp	x8, x24
   48274:	str	x23, [sp, #144]
   48278:	b.hi	47eec <mpfr_lngamma@@Base+0xae8>  // b.pmore
   4827c:	mov	w1, #0x1                   	// #1
   48280:	mov	x0, x28
   48284:	str	x8, [sp, #120]
   48288:	bl	c110 <__gmpz_set_ui@plt>
   4828c:	cbz	x25, 48328 <mpfr_lngamma@@Base+0xf24>
   48290:	mov	x26, xzr
   48294:	mov	x24, xzr
   48298:	mov	x20, x28
   4829c:	b	482cc <mpfr_lngamma@@Base+0xec8>
   482a0:	ldr	x8, [sp, #144]
   482a4:	mov	x0, x28
   482a8:	mov	x1, x28
   482ac:	add	x2, x24, x8
   482b0:	bl	c590 <__gmpz_mul_ui@plt>
   482b4:	add	x20, x20, #0x10
   482b8:	mov	x25, x23
   482bc:	cmp	x23, x21
   482c0:	sub	x26, x26, #0x1
   482c4:	mov	x24, x21
   482c8:	b.eq	48328 <mpfr_lngamma@@Base+0xf24>  // b.none
   482cc:	add	x21, x24, #0x1
   482d0:	add	x0, x28, x21, lsl #4
   482d4:	add	x1, x28, x24, lsl #4
   482d8:	mov	x23, x25
   482dc:	bl	c410 <__gmpz_set@plt>
   482e0:	cbz	x24, 482a0 <mpfr_lngamma@@Base+0xe9c>
   482e4:	ldr	x8, [sp, #144]
   482e8:	mov	x27, x26
   482ec:	mov	x25, x20
   482f0:	add	x19, x24, x8
   482f4:	mov	x0, x25
   482f8:	mov	x1, x25
   482fc:	mov	x2, x19
   48300:	bl	c590 <__gmpz_mul_ui@plt>
   48304:	sub	x22, x25, #0x10
   48308:	mov	x0, x25
   4830c:	mov	x1, x25
   48310:	mov	x2, x22
   48314:	bl	ceb0 <__gmpz_add@plt>
   48318:	adds	x27, x27, #0x1
   4831c:	mov	x25, x22
   48320:	b.cc	482f4 <mpfr_lngamma@@Base+0xef0>  // b.lo, b.ul, b.last
   48324:	b	482a0 <mpfr_lngamma@@Base+0xe9c>
   48328:	sub	x0, x29, #0x68
   4832c:	mov	x1, x28
   48330:	mov	w2, wzr
   48334:	bl	c6e0 <mpfr_set_z@plt>
   48338:	ldr	x26, [sp, #136]
   4833c:	cbz	x25, 48254 <mpfr_lngamma@@Base+0xe50>
   48340:	ldp	x21, x19, [sp, #88]
   48344:	ldr	x22, [sp, #104]
   48348:	mov	x20, xzr
   4834c:	cmp	x20, #0x0
   48350:	csel	x1, x26, x21, eq  // eq = none
   48354:	add	x0, sp, #0x98
   48358:	mov	x2, x19
   4835c:	mov	w3, wzr
   48360:	bl	c9a0 <mpfr_mul_z@plt>
   48364:	sub	x0, x29, #0x68
   48368:	sub	x1, x29, #0x68
   4836c:	add	x2, sp, #0x98
   48370:	mov	w3, wzr
   48374:	bl	c640 <mpfr_add@plt>
   48378:	sub	x22, x22, #0x1
   4837c:	add	x19, x19, #0x10
   48380:	add	x21, x21, #0x20
   48384:	sub	x20, x20, #0x1
   48388:	cbnz	x22, 4834c <mpfr_lngamma@@Base+0xf48>
   4838c:	b	48254 <mpfr_lngamma@@Base+0xe50>
   48390:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   48394:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   48398:	mov	w1, #0x2b8                 	// #696
   4839c:	add	x0, x0, #0x8b7
   483a0:	add	x2, x2, #0xa3e
   483a4:	bl	d030 <mpfr_assert_fail@plt>
   483a8:	b	480a0 <mpfr_lngamma@@Base+0xc9c>
   483ac:	b.eq	487a8 <mpfr_lngamma@@Base+0x13a4>  // b.none
   483b0:	b.le	487b8 <mpfr_lngamma@@Base+0x13b4>
   483b4:	clz	x8, x19
   483b8:	mov	w9, #0x40                  	// #64
   483bc:	sub	x8, x9, x8
   483c0:	add	x19, x8, x23
   483c4:	subs	x20, x19, #0x1
   483c8:	b.eq	487b0 <mpfr_lngamma@@Base+0x13ac>  // b.none
   483cc:	b.le	487d4 <mpfr_lngamma@@Base+0x13d0>
   483d0:	clz	x8, x20
   483d4:	mov	w9, #0x4e                  	// #78
   483d8:	sub	x8, x9, x8
   483dc:	add	x22, x8, x19
   483e0:	adrp	x8, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   483e4:	ldr	d8, [x8, #2112]
   483e8:	cmp	w28, #0x0
   483ec:	adrp	x25, 5b000 <mpfr_free_pool@@Base+0x3854>
   483f0:	mov	w19, #0x40                  	// #64
   483f4:	mov	w20, #0x2                   	// #2
   483f8:	mov	w26, #0x3                   	// #3
   483fc:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   48400:	cinc	x23, x23, eq  // eq = none
   48404:	mov	w28, #0x1                   	// #1
   48408:	add	x25, x25, #0xa3e
   4840c:	sub	x0, x29, #0x28
   48410:	mov	x1, x22
   48414:	bl	c330 <mpfr_set_prec@plt>
   48418:	sub	x0, x29, #0x48
   4841c:	mov	x1, x22
   48420:	bl	c330 <mpfr_set_prec@plt>
   48424:	sub	x0, x29, #0x68
   48428:	mov	x1, x22
   4842c:	bl	c330 <mpfr_set_prec@plt>
   48430:	sub	x0, x29, #0x88
   48434:	mov	x1, x22
   48438:	bl	c330 <mpfr_set_prec@plt>
   4843c:	ldr	x2, [sp, #136]
   48440:	sub	x0, x29, #0x28
   48444:	mov	w1, #0x2                   	// #2
   48448:	mov	w3, #0x3                   	// #3
   4844c:	bl	cf30 <mpfr_ui_sub@plt>
   48450:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48454:	ldr	x1, [x0, #2848]
   48458:	add	x0, x0, #0xb20
   4845c:	blr	x1
   48460:	ldr	x8, [sp, #128]
   48464:	mov	w2, wzr
   48468:	add	x1, x8, x0
   4846c:	sub	x0, x29, #0x48
   48470:	bl	c840 <mpfr_cache@plt>
   48474:	sub	x0, x29, #0x68
   48478:	sub	x1, x29, #0x28
   4847c:	mov	w2, wzr
   48480:	bl	cad0 <mpfr_lngamma@plt>
   48484:	ldur	x8, [x29, #-88]
   48488:	cmp	x8, x27
   4848c:	b.ne	48498 <mpfr_lngamma@@Base+0x1094>  // b.any
   48490:	mov	x24, xzr
   48494:	b	484b8 <mpfr_lngamma@@Base+0x10b4>
   48498:	ldur	x21, [x29, #-24]
   4849c:	scvtf	d0, x21
   484a0:	fmul	d0, d0, d8
   484a4:	bl	ce40 <__gmpfr_ceil_log2@plt>
   484a8:	ldur	x8, [x29, #-88]
   484ac:	add	x9, x21, x0
   484b0:	sub	x8, x9, x8
   484b4:	add	x24, x8, #0x1
   484b8:	sub	x0, x29, #0x28
   484bc:	sub	x1, x29, #0x28
   484c0:	sub	x2, x29, #0x48
   484c4:	mov	w3, wzr
   484c8:	bl	c1b0 <mpfr_mul@plt>
   484cc:	ldur	x21, [x29, #-24]
   484d0:	sub	x0, x29, #0x28
   484d4:	sub	x1, x29, #0x28
   484d8:	mov	w2, wzr
   484dc:	bl	c920 <mpfr_sin@plt>
   484e0:	ldur	x8, [x29, #-24]
   484e4:	ldr	x1, [sp, #136]
   484e8:	sub	x0, x29, #0x88
   484ec:	mov	w2, #0x1                   	// #1
   484f0:	sub	x8, x21, x8
   484f4:	add	x9, x8, #0x3
   484f8:	add	x8, x8, #0x6
   484fc:	cmp	x9, #0x0
   48500:	mov	w3, wzr
   48504:	csel	x21, x20, x8, lt  // lt = tstop
   48508:	bl	ca00 <mpfr_sub_ui@plt>
   4850c:	sub	x0, x29, #0x88
   48510:	sub	x1, x29, #0x88
   48514:	sub	x2, x29, #0x48
   48518:	mov	w3, wzr
   4851c:	bl	c1b0 <mpfr_mul@plt>
   48520:	sub	x0, x29, #0x88
   48524:	sub	x1, x29, #0x88
   48528:	sub	x2, x29, #0x28
   4852c:	mov	w3, wzr
   48530:	bl	caf0 <mpfr_div@plt>
   48534:	sub	x0, x29, #0x88
   48538:	sub	x1, x29, #0x88
   4853c:	mov	w3, #0x1                   	// #1
   48540:	mov	w2, wzr
   48544:	bl	cb70 <mpfr_set4@plt>
   48548:	cmp	x21, #0x2
   4854c:	sub	x0, x29, #0x88
   48550:	sub	x1, x29, #0x88
   48554:	mov	w2, wzr
   48558:	csinc	x21, x26, x21, lt  // lt = tstop
   4855c:	bl	c520 <mpfr_log@plt>
   48560:	add	x8, x21, #0x2
   48564:	cmp	x8, x22
   48568:	b.le	48574 <mpfr_lngamma@@Base+0x1170>
   4856c:	add	x22, x8, x22
   48570:	b	4861c <mpfr_lngamma@@Base+0x1218>
   48574:	ldur	x8, [x29, #-120]
   48578:	cmp	x24, #0x0
   4857c:	ldur	x9, [x29, #-88]
   48580:	csinc	x10, xzr, x24, lt  // lt = tstop
   48584:	sub	x11, x28, x8
   48588:	cmp	x8, x27
   4858c:	csel	x11, xzr, x11, eq  // eq = none
   48590:	add	x11, x11, x21
   48594:	csel	x8, xzr, x8, eq  // eq = none
   48598:	cmp	x11, #0x0
   4859c:	add	x21, x9, x10
   485a0:	csinc	x9, xzr, x11, lt  // lt = tstop
   485a4:	sub	x0, x29, #0x28
   485a8:	sub	x1, x29, #0x88
   485ac:	sub	x2, x29, #0x68
   485b0:	mov	w3, wzr
   485b4:	add	x24, x9, x8
   485b8:	bl	bfd0 <mpfr_sub@plt>
   485bc:	ldur	x8, [x29, #-24]
   485c0:	cmp	x24, x21
   485c4:	mov	x9, #0xfffffffffffffeff    	// #-257
   485c8:	movk	x9, #0x7fff, lsl #48
   485cc:	csel	x10, x21, x24, lt  // lt = tstop
   485d0:	add	x9, x9, #0x105
   485d4:	sub	x10, x10, x8
   485d8:	cmp	x8, x9
   485dc:	add	x8, x10, #0x1
   485e0:	b.lt	4861c <mpfr_lngamma@@Base+0x1218>  // b.tstop
   485e4:	ldur	x9, [x29, #-40]
   485e8:	cmp	x8, #0x0
   485ec:	ldur	x0, [x29, #-16]
   485f0:	csinc	x8, xzr, x8, lt  // lt = tstop
   485f4:	sub	x10, x9, #0x1
   485f8:	add	x9, x9, #0x3e
   485fc:	cmp	x10, #0x0
   48600:	csel	x9, x9, x10, lt  // lt = tstop
   48604:	asr	x9, x9, #6
   48608:	add	x1, x9, #0x1
   4860c:	sub	x2, x22, x8
   48610:	mov	x3, x23
   48614:	bl	c830 <mpfr_round_p@plt>
   48618:	cbnz	w0, 4865c <mpfr_lngamma@@Base+0x1258>
   4861c:	mov	x8, #0xfffffffffffffeff    	// #-257
   48620:	movk	x8, #0x7fff, lsl #48
   48624:	sub	x8, x8, x22
   48628:	cmp	x19, x8
   4862c:	b.gt	48644 <mpfr_lngamma@@Base+0x1240>
   48630:	add	x22, x22, x19
   48634:	cmp	x22, #0x0
   48638:	cinc	x8, x22, lt  // lt = tstop
   4863c:	asr	x19, x8, #1
   48640:	b	4840c <mpfr_lngamma@@Base+0x1008>
   48644:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   48648:	mov	w1, #0x1a5                 	// #421
   4864c:	add	x0, x0, #0x8b7
   48650:	mov	x2, x25
   48654:	bl	d030 <mpfr_assert_fail@plt>
   48658:	b	48630 <mpfr_lngamma@@Base+0x122c>
   4865c:	ldr	x19, [sp, #72]
   48660:	ldr	w21, [sp, #68]
   48664:	ldur	w3, [x29, #-32]
   48668:	sub	x1, x29, #0x28
   4866c:	mov	x0, x19
   48670:	mov	w2, w21
   48674:	bl	cb70 <mpfr_set4@plt>
   48678:	mov	w20, w0
   4867c:	sub	x0, x29, #0x28
   48680:	bl	c4f0 <mpfr_clear@plt>
   48684:	sub	x0, x29, #0x48
   48688:	bl	c4f0 <mpfr_clear@plt>
   4868c:	sub	x0, x29, #0x68
   48690:	bl	c4f0 <mpfr_clear@plt>
   48694:	sub	x0, x29, #0x88
   48698:	bl	c4f0 <mpfr_clear@plt>
   4869c:	add	x0, sp, #0x98
   486a0:	bl	c4f0 <mpfr_clear@plt>
   486a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   486a8:	ldr	x1, [x0, #2800]
   486ac:	add	x0, x0, #0xaf0
   486b0:	blr	x1
   486b4:	ldr	x8, [sp, #128]
   486b8:	ldr	w9, [sp, #64]
   486bc:	str	w9, [x8, x0]
   486c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   486c4:	ldr	x1, [x0, #2736]
   486c8:	add	x0, x0, #0xab0
   486cc:	blr	x1
   486d0:	ldr	x10, [sp, #56]
   486d4:	str	x10, [x8, x0]
   486d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   486dc:	ldr	x1, [x0, #2768]
   486e0:	add	x0, x0, #0xad0
   486e4:	blr	x1
   486e8:	ldr	x11, [sp, #80]
   486ec:	str	x11, [x8, x0]
   486f0:	ldr	x8, [x19, #16]
   486f4:	cmp	x8, x11
   486f8:	b.gt	4874c <mpfr_lngamma@@Base+0x1348>
   486fc:	cmp	x8, x10
   48700:	b.lt	4874c <mpfr_lngamma@@Base+0x1348>  // b.tstop
   48704:	cbz	w20, 48724 <mpfr_lngamma@@Base+0x1320>
   48708:	orr	w8, w9, #0x8
   4870c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48710:	ldr	x1, [x0, #2800]
   48714:	add	x0, x0, #0xaf0
   48718:	blr	x1
   4871c:	ldr	x9, [sp, #128]
   48720:	str	w8, [x9, x0]
   48724:	mov	w0, w20
   48728:	ldp	x20, x19, [sp, #416]
   4872c:	ldp	x22, x21, [sp, #400]
   48730:	ldp	x24, x23, [sp, #384]
   48734:	ldp	x26, x25, [sp, #368]
   48738:	ldp	x28, x27, [sp, #352]
   4873c:	ldp	x29, x30, [sp, #336]
   48740:	ldp	d9, d8, [sp, #320]
   48744:	add	sp, sp, #0x1b0
   48748:	ret
   4874c:	mov	x0, x19
   48750:	mov	w1, w20
   48754:	mov	w2, w21
   48758:	bl	d020 <mpfr_check_range@plt>
   4875c:	b	476f0 <mpfr_lngamma@@Base+0x2ec>
   48760:	mov	x8, xzr
   48764:	b	47bc4 <mpfr_lngamma@@Base+0x7c0>
   48768:	mov	w8, #0xd                   	// #13
   4876c:	b	47be0 <mpfr_lngamma@@Base+0x7dc>
   48770:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   48774:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   48778:	add	x0, x0, #0x8b7
   4877c:	add	x2, x2, #0x580
   48780:	mov	w1, #0x1b0                 	// #432
   48784:	bl	d030 <mpfr_assert_fail@plt>
   48788:	b	47bb8 <mpfr_lngamma@@Base+0x7b4>
   4878c:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   48790:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   48794:	add	x0, x0, #0x8b7
   48798:	add	x2, x2, #0x80d
   4879c:	mov	w1, #0x1b1                 	// #433
   487a0:	bl	d030 <mpfr_assert_fail@plt>
   487a4:	b	47bd4 <mpfr_lngamma@@Base+0x7d0>
   487a8:	mov	x8, xzr
   487ac:	b	483c0 <mpfr_lngamma@@Base+0xfbc>
   487b0:	mov	w8, #0xe                   	// #14
   487b4:	b	483dc <mpfr_lngamma@@Base+0xfd8>
   487b8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   487bc:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   487c0:	add	x0, x0, #0x8b7
   487c4:	add	x2, x2, #0x580
   487c8:	mov	w1, #0x14a                 	// #330
   487cc:	bl	d030 <mpfr_assert_fail@plt>
   487d0:	b	483b4 <mpfr_lngamma@@Base+0xfb0>
   487d4:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   487d8:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   487dc:	add	x0, x0, #0x8b7
   487e0:	add	x2, x2, #0x80d
   487e4:	mov	w1, #0x14b                 	// #331
   487e8:	bl	d030 <mpfr_assert_fail@plt>
   487ec:	b	483d0 <mpfr_lngamma@@Base+0xfcc>
   487f0:	mov	x0, x21
   487f4:	mov	w1, w20
   487f8:	mov	w2, w28
   487fc:	bl	d020 <mpfr_check_range@plt>
   48800:	ldr	x26, [sp, #136]
   48804:	mov	w20, w0
   48808:	mov	w8, wzr
   4880c:	b	47a8c <mpfr_lngamma@@Base+0x688>
   48810:	mov	x0, x21
   48814:	mov	w1, w20
   48818:	mov	w2, w28
   4881c:	b	48758 <mpfr_lngamma@@Base+0x1354>

0000000000048820 <mpfr_lgamma@@Base>:
   48820:	sub	sp, sp, #0xb0
   48824:	mov	w8, #0x1                   	// #1
   48828:	stp	x29, x30, [sp, #80]
   4882c:	stp	x28, x27, [sp, #96]
   48830:	stp	x26, x25, [sp, #112]
   48834:	stp	x24, x23, [sp, #128]
   48838:	stp	x22, x21, [sp, #144]
   4883c:	stp	x20, x19, [sp, #160]
   48840:	str	w8, [x1]
   48844:	ldr	x9, [x2, #16]
   48848:	mov	x8, #0x2                   	// #2
   4884c:	movk	x8, #0x8000, lsl #48
   48850:	add	x10, x8, #0x2
   48854:	mov	x20, x2
   48858:	mov	x22, x1
   4885c:	cmp	x9, x10
   48860:	mov	x19, x0
   48864:	add	x29, sp, #0x50
   48868:	b.lt	48bd0 <mpfr_lgamma@@Base+0x3b0>  // b.tstop
   4886c:	ldr	w8, [x20, #8]
   48870:	mov	w21, w3
   48874:	tbnz	w8, #31, 48890 <mpfr_lgamma@@Base+0x70>
   48878:	mov	x0, x19
   4887c:	mov	x1, x20
   48880:	mov	w2, w21
   48884:	bl	47564 <mpfr_lngamma@@Base+0x160>
   48888:	mov	w25, w0
   4888c:	b	488d0 <mpfr_lgamma@@Base+0xb0>
   48890:	mov	x0, x20
   48894:	bl	c600 <mpfr_integer_p@plt>
   48898:	cbz	w0, 488f4 <mpfr_lgamma@@Base+0xd4>
   4889c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   488a0:	mov	w9, #0x1                   	// #1
   488a4:	str	x8, [x19, #16]
   488a8:	str	w9, [x19, #8]
   488ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   488b0:	ldr	x1, [x0, #2800]
   488b4:	add	x0, x0, #0xaf0
   488b8:	blr	x1
   488bc:	mrs	x8, tpidr_el0
   488c0:	ldr	w9, [x8, x0]
   488c4:	mov	w25, wzr
   488c8:	orr	w9, w9, #0x20
   488cc:	str	w9, [x8, x0]
   488d0:	mov	w0, w25
   488d4:	ldp	x20, x19, [sp, #160]
   488d8:	ldp	x22, x21, [sp, #144]
   488dc:	ldp	x24, x23, [sp, #128]
   488e0:	ldp	x26, x25, [sp, #112]
   488e4:	ldp	x28, x27, [sp, #96]
   488e8:	ldp	x29, x30, [sp, #80]
   488ec:	add	sp, sp, #0xb0
   488f0:	ret
   488f4:	mov	x0, x20
   488f8:	bl	47504 <mpfr_lngamma@@Base+0x100>
   488fc:	cbnz	w0, 48908 <mpfr_lgamma@@Base+0xe8>
   48900:	mov	w8, #0xffffffff            	// #-1
   48904:	str	w8, [x22]
   48908:	ldr	x8, [x19]
   4890c:	ldr	x9, [x20, #16]
   48910:	neg	x10, x8
   48914:	cmp	x9, x10
   48918:	b.ge	48878 <mpfr_lgamma@@Base+0x58>  // b.tcont
   4891c:	add	x22, x8, #0xe
   48920:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48924:	ldr	x1, [x0, #2800]
   48928:	add	x0, x0, #0xaf0
   4892c:	blr	x1
   48930:	mrs	x26, tpidr_el0
   48934:	ldr	w8, [x26, x0]
   48938:	str	w8, [sp, #12]
   4893c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48940:	ldr	x1, [x0, #2736]
   48944:	add	x0, x0, #0xab0
   48948:	blr	x1
   4894c:	ldr	x9, [x26, x0]
   48950:	mov	x8, x0
   48954:	str	x9, [sp]
   48958:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4895c:	ldr	x1, [x0, #2768]
   48960:	add	x0, x0, #0xad0
   48964:	blr	x1
   48968:	ldr	x23, [x26, x0]
   4896c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   48970:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   48974:	mov	w24, #0x40                  	// #64
   48978:	str	x9, [x26, x8]
   4897c:	str	x10, [x26, x0]
   48980:	sub	x0, x29, #0x20
   48984:	mov	x1, x22
   48988:	bl	cf60 <mpfr_init2@plt>
   4898c:	add	x0, sp, #0x10
   48990:	mov	x1, x22
   48994:	bl	cf60 <mpfr_init2@plt>
   48998:	sub	x0, x29, #0x20
   4899c:	mov	w2, #0x2                   	// #2
   489a0:	mov	x1, x20
   489a4:	bl	c1d0 <mpfr_neg@plt>
   489a8:	sub	x0, x29, #0x20
   489ac:	sub	x1, x29, #0x20
   489b0:	mov	w2, #0x2                   	// #2
   489b4:	bl	c520 <mpfr_log@plt>
   489b8:	sub	x0, x29, #0x20
   489bc:	sub	x1, x29, #0x20
   489c0:	mov	w2, #0x3                   	// #3
   489c4:	bl	c1d0 <mpfr_neg@plt>
   489c8:	add	x0, sp, #0x10
   489cc:	mov	w2, #0x3                   	// #3
   489d0:	mov	x1, x20
   489d4:	bl	c1d0 <mpfr_neg@plt>
   489d8:	add	x0, sp, #0x10
   489dc:	add	x1, sp, #0x10
   489e0:	mov	w2, #0x3                   	// #3
   489e4:	bl	c520 <mpfr_log@plt>
   489e8:	add	x0, sp, #0x10
   489ec:	add	x1, sp, #0x10
   489f0:	mov	w2, #0x2                   	// #2
   489f4:	bl	c1d0 <mpfr_neg@plt>
   489f8:	add	x0, sp, #0x10
   489fc:	add	x1, sp, #0x10
   48a00:	mov	w3, #0x2                   	// #2
   48a04:	mov	x2, x20
   48a08:	bl	bfd0 <mpfr_sub@plt>
   48a0c:	ldr	x1, [x19]
   48a10:	sub	x0, x29, #0x20
   48a14:	mov	w2, w21
   48a18:	bl	ce60 <mpfr_prec_round@plt>
   48a1c:	ldr	x1, [x19]
   48a20:	mov	w25, w0
   48a24:	add	x0, sp, #0x10
   48a28:	mov	w2, w21
   48a2c:	bl	ce60 <mpfr_prec_round@plt>
   48a30:	cmp	w25, #0x0
   48a34:	cset	w8, gt
   48a38:	csinv	w8, w8, wzr, ge  // ge = tcont
   48a3c:	cmp	w0, #0x0
   48a40:	cset	w9, gt
   48a44:	csinv	w9, w9, wzr, ge  // ge = tcont
   48a48:	cmp	w8, w9
   48a4c:	b.ne	48a70 <mpfr_lgamma@@Base+0x250>  // b.any
   48a50:	sub	x0, x29, #0x20
   48a54:	add	x1, sp, #0x10
   48a58:	bl	cf40 <mpfr_equal_p@plt>
   48a5c:	cmp	w0, #0x0
   48a60:	cset	w28, ne  // ne = any
   48a64:	cbnz	w28, 48a78 <mpfr_lgamma@@Base+0x258>
   48a68:	ldur	x27, [x29, #-16]
   48a6c:	b	48a8c <mpfr_lgamma@@Base+0x26c>
   48a70:	mov	w28, wzr
   48a74:	cbz	w28, 48a68 <mpfr_lgamma@@Base+0x248>
   48a78:	ldr	w3, [sp, #24]
   48a7c:	add	x1, sp, #0x10
   48a80:	mov	x0, x19
   48a84:	mov	w2, w21
   48a88:	bl	cb70 <mpfr_set4@plt>
   48a8c:	sub	x0, x29, #0x20
   48a90:	bl	c4f0 <mpfr_clear@plt>
   48a94:	add	x0, sp, #0x10
   48a98:	bl	c4f0 <mpfr_clear@plt>
   48a9c:	cbnz	w28, 48af4 <mpfr_lgamma@@Base+0x2d4>
   48aa0:	ldr	x8, [x20, #16]
   48aa4:	add	x8, x8, x22
   48aa8:	cmp	x27, x8
   48aac:	b.lt	48b74 <mpfr_lgamma@@Base+0x354>  // b.tstop
   48ab0:	subs	x25, x22, #0x1
   48ab4:	b.eq	48ad0 <mpfr_lgamma@@Base+0x2b0>  // b.none
   48ab8:	b.le	48ad8 <mpfr_lgamma@@Base+0x2b8>
   48abc:	clz	x8, x25
   48ac0:	sub	x8, x24, x8
   48ac4:	add	x8, x22, x8
   48ac8:	add	x22, x8, #0x3
   48acc:	b	48980 <mpfr_lgamma@@Base+0x160>
   48ad0:	mov	x8, xzr
   48ad4:	b	48ac4 <mpfr_lgamma@@Base+0x2a4>
   48ad8:	adrp	x0, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   48adc:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   48ae0:	mov	w1, #0x35d                 	// #861
   48ae4:	add	x0, x0, #0x8b7
   48ae8:	add	x2, x2, #0x80d
   48aec:	bl	d030 <mpfr_assert_fail@plt>
   48af0:	b	48abc <mpfr_lgamma@@Base+0x29c>
   48af4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48af8:	ldr	x1, [x0, #2800]
   48afc:	add	x0, x0, #0xaf0
   48b00:	blr	x1
   48b04:	ldr	w9, [sp, #12]
   48b08:	str	w9, [x26, x0]
   48b0c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48b10:	ldr	x1, [x0, #2736]
   48b14:	add	x0, x0, #0xab0
   48b18:	blr	x1
   48b1c:	ldr	x10, [sp]
   48b20:	str	x10, [x26, x0]
   48b24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48b28:	ldr	x1, [x0, #2768]
   48b2c:	add	x0, x0, #0xad0
   48b30:	blr	x1
   48b34:	str	x23, [x26, x0]
   48b38:	ldr	x8, [x19, #16]
   48b3c:	cmp	x8, x23
   48b40:	b.gt	48c54 <mpfr_lgamma@@Base+0x434>
   48b44:	cmp	x8, x10
   48b48:	b.lt	48c54 <mpfr_lgamma@@Base+0x434>  // b.tstop
   48b4c:	cbz	w25, 48bc4 <mpfr_lgamma@@Base+0x3a4>
   48b50:	orr	w9, w9, #0x8
   48b54:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48b58:	ldr	x1, [x0, #2800]
   48b5c:	add	x0, x0, #0xaf0
   48b60:	blr	x1
   48b64:	mov	w8, wzr
   48b68:	str	w9, [x26, x0]
   48b6c:	cbnz	w8, 48878 <mpfr_lgamma@@Base+0x58>
   48b70:	b	488d0 <mpfr_lgamma@@Base+0xb0>
   48b74:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48b78:	ldr	x1, [x0, #2800]
   48b7c:	add	x0, x0, #0xaf0
   48b80:	blr	x1
   48b84:	ldr	w8, [sp, #12]
   48b88:	str	w8, [x26, x0]
   48b8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48b90:	ldr	x1, [x0, #2736]
   48b94:	add	x0, x0, #0xab0
   48b98:	blr	x1
   48b9c:	ldr	x8, [sp]
   48ba0:	str	x8, [x26, x0]
   48ba4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48ba8:	ldr	x1, [x0, #2768]
   48bac:	add	x0, x0, #0xad0
   48bb0:	blr	x1
   48bb4:	mov	w8, #0x1                   	// #1
   48bb8:	str	x23, [x26, x0]
   48bbc:	cbnz	w8, 48878 <mpfr_lgamma@@Base+0x58>
   48bc0:	b	488d0 <mpfr_lgamma@@Base+0xb0>
   48bc4:	mov	w8, wzr
   48bc8:	cbnz	w8, 48878 <mpfr_lgamma@@Base+0x58>
   48bcc:	b	488d0 <mpfr_lgamma@@Base+0xb0>
   48bd0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   48bd4:	cmp	x9, x10
   48bd8:	b.eq	48c14 <mpfr_lgamma@@Base+0x3f4>  // b.none
   48bdc:	mov	x10, #0x2                   	// #2
   48be0:	movk	x10, #0x8000, lsl #48
   48be4:	cmp	x9, x10
   48be8:	b.ne	48c34 <mpfr_lgamma@@Base+0x414>  // b.any
   48bec:	str	x8, [x19, #16]
   48bf0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48bf4:	ldr	x1, [x0, #2800]
   48bf8:	add	x0, x0, #0xaf0
   48bfc:	blr	x1
   48c00:	mrs	x8, tpidr_el0
   48c04:	ldr	w9, [x8, x0]
   48c08:	mov	w25, wzr
   48c0c:	orr	w9, w9, #0x4
   48c10:	b	488cc <mpfr_lgamma@@Base+0xac>
   48c14:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48c18:	ldr	x1, [x0, #2800]
   48c1c:	add	x0, x0, #0xaf0
   48c20:	blr	x1
   48c24:	mrs	x8, tpidr_el0
   48c28:	ldr	w9, [x8, x0]
   48c2c:	orr	w9, w9, #0x20
   48c30:	str	w9, [x8, x0]
   48c34:	ldr	w8, [x20, #8]
   48c38:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   48c3c:	mov	w10, #0x1                   	// #1
   48c40:	mov	w25, wzr
   48c44:	str	w8, [x22]
   48c48:	str	x9, [x19, #16]
   48c4c:	str	w10, [x19, #8]
   48c50:	b	488d0 <mpfr_lgamma@@Base+0xb0>
   48c54:	mov	x0, x19
   48c58:	mov	w1, w25
   48c5c:	mov	w2, w21
   48c60:	bl	d020 <mpfr_check_range@plt>
   48c64:	mov	w25, w0
   48c68:	mov	w8, wzr
   48c6c:	cbnz	w8, 48878 <mpfr_lgamma@@Base+0x58>
   48c70:	b	488d0 <mpfr_lgamma@@Base+0xb0>
   48c74:	stp	x29, x30, [sp, #-16]!
   48c78:	cmp	x1, #0x64
   48c7c:	mov	x29, sp
   48c80:	b.gt	48c90 <mpfr_lgamma@@Base+0x470>
   48c84:	mov	w1, #0x266                 	// #614
   48c88:	mov	x2, #0xfffffffffffffff6    	// #-10
   48c8c:	b	48d04 <mpfr_lgamma@@Base+0x4e4>
   48c90:	cmp	x1, #0x1f4
   48c94:	b.gt	48ca4 <mpfr_lgamma@@Base+0x484>
   48c98:	mov	w1, #0x333                 	// #819
   48c9c:	mov	x2, #0xfffffffffffffff6    	// #-10
   48ca0:	b	48d04 <mpfr_lgamma@@Base+0x4e4>
   48ca4:	cmp	x1, #0x3e8
   48ca8:	b.gt	48cb8 <mpfr_lgamma@@Base+0x498>
   48cac:	mov	w1, #0x533                 	// #1331
   48cb0:	mov	x2, #0xfffffffffffffff6    	// #-10
   48cb4:	b	48d04 <mpfr_lgamma@@Base+0x4e4>
   48cb8:	cmp	x1, #0x7d0
   48cbc:	b.gt	48ccc <mpfr_lgamma@@Base+0x4ac>
   48cc0:	mov	w1, #0x6cd                 	// #1741
   48cc4:	mov	x2, #0xfffffffffffffff6    	// #-10
   48cc8:	b	48d04 <mpfr_lgamma@@Base+0x4e4>
   48ccc:	mov	w8, #0x1388                	// #5000
   48cd0:	cmp	x1, x8
   48cd4:	b.gt	48ce4 <mpfr_lgamma@@Base+0x4c4>
   48cd8:	mov	w1, #0x8cd                 	// #2253
   48cdc:	mov	x2, #0xfffffffffffffff6    	// #-10
   48ce0:	b	48d04 <mpfr_lgamma@@Base+0x4e4>
   48ce4:	mov	w8, #0x2710                	// #10000
   48ce8:	cmp	x1, x8
   48cec:	b.gt	48cfc <mpfr_lgamma@@Base+0x4dc>
   48cf0:	mov	w1, #0xd9a                 	// #3482
   48cf4:	mov	x2, #0xfffffffffffffff6    	// #-10
   48cf8:	b	48d04 <mpfr_lgamma@@Base+0x4e4>
   48cfc:	mov	w1, #0x9                   	// #9
   48d00:	mov	x2, #0xffffffffffffffff    	// #-1
   48d04:	mov	w3, wzr
   48d08:	bl	cac0 <mpfr_set_ui_2exp@plt>
   48d0c:	ldp	x29, x30, [sp], #16
   48d10:	ret

0000000000048d14 <mpfr_zeta_ui@@Base>:
   48d14:	sub	sp, sp, #0x100
   48d18:	stp	x24, x23, [sp, #208]
   48d1c:	stp	x20, x19, [sp, #240]
   48d20:	subs	x24, x1, #0x1
   48d24:	mov	x19, x0
   48d28:	str	d8, [sp, #144]
   48d2c:	stp	x29, x30, [sp, #160]
   48d30:	stp	x28, x27, [sp, #176]
   48d34:	stp	x26, x25, [sp, #192]
   48d38:	stp	x22, x21, [sp, #224]
   48d3c:	add	x29, sp, #0x90
   48d40:	b.eq	48d68 <mpfr_zeta_ui@@Base+0x54>  // b.none
   48d44:	mov	w3, w2
   48d48:	mov	x21, x1
   48d4c:	cbnz	x1, 48da0 <mpfr_zeta_ui@@Base+0x8c>
   48d50:	mov	x1, #0xffffffffffffffff    	// #-1
   48d54:	mov	x2, #0xffffffffffffffff    	// #-1
   48d58:	mov	x0, x19
   48d5c:	bl	bed0 <mpfr_set_si_2exp@plt>
   48d60:	mov	w21, w0
   48d64:	b	493ac <mpfr_zeta_ui@@Base+0x698>
   48d68:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   48d6c:	mov	w9, #0x1                   	// #1
   48d70:	str	x8, [x19, #16]
   48d74:	str	w9, [x19, #8]
   48d78:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48d7c:	ldr	x1, [x0, #2800]
   48d80:	add	x0, x0, #0xaf0
   48d84:	blr	x1
   48d88:	mrs	x8, tpidr_el0
   48d8c:	ldr	w9, [x8, x0]
   48d90:	mov	w21, wzr
   48d94:	orr	w9, w9, #0x20
   48d98:	str	w9, [x8, x0]
   48d9c:	b	493ac <mpfr_zeta_ui@@Base+0x698>
   48da0:	ldr	x20, [x19]
   48da4:	cmp	w3, #0x4
   48da8:	mov	w8, #0x2                   	// #2
   48dac:	csel	w23, w8, w3, eq  // eq = none
   48db0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48db4:	ldr	x1, [x0, #2800]
   48db8:	add	x0, x0, #0xaf0
   48dbc:	blr	x1
   48dc0:	mrs	x28, tpidr_el0
   48dc4:	ldr	w22, [x28, x0]
   48dc8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48dcc:	ldr	x1, [x0, #2736]
   48dd0:	add	x0, x0, #0xab0
   48dd4:	blr	x1
   48dd8:	ldr	x25, [x28, x0]
   48ddc:	mov	x8, x0
   48de0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   48de4:	ldr	x1, [x0, #2768]
   48de8:	add	x0, x0, #0xad0
   48dec:	blr	x1
   48df0:	ldr	x26, [x28, x0]
   48df4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   48df8:	str	x9, [x28, x8]
   48dfc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   48e00:	cmp	x20, x21
   48e04:	str	x8, [x28, x0]
   48e08:	b.ls	48ebc <mpfr_zeta_ui@@Base+0x1a8>  // b.plast
   48e0c:	add	x0, sp, #0x30
   48e10:	mov	w1, #0x1f                  	// #31
   48e14:	bl	cf60 <mpfr_init2@plt>
   48e18:	cmp	x20, #0x0
   48e1c:	cinc	x8, x20, lt  // lt = tstop
   48e20:	cmp	x21, x8, asr #1
   48e24:	b.cc	48ee0 <mpfr_zeta_ui@@Base+0x1cc>  // b.lo, b.ul, b.last
   48e28:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   48e2c:	add	x1, x1, #0xbd0
   48e30:	add	x0, sp, #0x30
   48e34:	bl	c800 <mpfr_set_str_binary@plt>
   48e38:	add	x0, sp, #0x30
   48e3c:	add	x1, sp, #0x30
   48e40:	mov	w3, #0x1                   	// #1
   48e44:	mov	x2, x21
   48e48:	bl	bea0 <mpfr_mul_ui@plt>
   48e4c:	add	x1, x20, #0x2
   48e50:	add	x0, sp, #0x30
   48e54:	mov	x2, xzr
   48e58:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   48e5c:	tbnz	w0, #31, 48ee0 <mpfr_zeta_ui@@Base+0x1cc>
   48e60:	add	x0, sp, #0x30
   48e64:	bl	c4f0 <mpfr_clear@plt>
   48e68:	mov	w1, #0x1                   	// #1
   48e6c:	mov	w3, #0x1                   	// #1
   48e70:	mov	x0, x19
   48e74:	mov	x2, xzr
   48e78:	bl	cac0 <mpfr_set_ui_2exp@plt>
   48e7c:	mov	w3, #0x1                   	// #1
   48e80:	mov	x0, x19
   48e84:	mov	x1, x19
   48e88:	mov	x2, x21
   48e8c:	bl	cde0 <mpfr_div_2ui@plt>
   48e90:	mov	w2, #0x1                   	// #1
   48e94:	mov	w3, #0x1                   	// #1
   48e98:	mov	x0, x19
   48e9c:	mov	x1, x19
   48ea0:	bl	c710 <mpfr_add_ui@plt>
   48ea4:	cmp	w23, #0x2
   48ea8:	b.ne	4933c <mpfr_zeta_ui@@Base+0x628>  // b.any
   48eac:	mov	x0, x19
   48eb0:	bl	c5c0 <mpfr_nextabove@plt>
   48eb4:	mov	w21, #0x1                   	// #1
   48eb8:	b	49340 <mpfr_zeta_ui@@Base+0x62c>
   48ebc:	cmp	x21, #0x2
   48ec0:	b.ne	49310 <mpfr_zeta_ui@@Base+0x5fc>  // b.any
   48ec4:	mov	w1, #0xd                   	// #13
   48ec8:	mov	x2, #0xfffffffffffffffd    	// #-3
   48ecc:	mov	x0, x19
   48ed0:	mov	w3, w23
   48ed4:	bl	cac0 <mpfr_set_ui_2exp@plt>
   48ed8:	mov	w21, w0
   48edc:	b	49340 <mpfr_zeta_ui@@Base+0x62c>
   48ee0:	sub	x0, x29, #0x30
   48ee4:	str	w22, [sp, #40]
   48ee8:	bl	c400 <mpfr_mpz_init@plt>
   48eec:	sub	x0, x29, #0x10
   48ef0:	bl	c400 <mpfr_mpz_init@plt>
   48ef4:	sub	x0, x29, #0x20
   48ef8:	bl	c400 <mpfr_mpz_init@plt>
   48efc:	sub	x0, x29, #0x40
   48f00:	bl	c400 <mpfr_mpz_init@plt>
   48f04:	subs	x22, x20, #0x1
   48f08:	b.eq	4940c <mpfr_zeta_ui@@Base+0x6f8>  // b.none
   48f0c:	b.le	4941c <mpfr_zeta_ui@@Base+0x708>
   48f10:	clz	x8, x22
   48f14:	mov	w9, #0x40                  	// #64
   48f18:	sub	x8, x9, x8
   48f1c:	add	x20, x8, x20
   48f20:	subs	x22, x20, #0x1
   48f24:	b.eq	49414 <mpfr_zeta_ui@@Base+0x700>  // b.none
   48f28:	b.le	49438 <mpfr_zeta_ui@@Base+0x724>
   48f2c:	clz	x8, x22
   48f30:	mov	w9, #0x4f                  	// #79
   48f34:	sub	x8, x9, x8
   48f38:	add	x27, x8, x20
   48f3c:	adrp	x8, 60000 <mpfr_bases@@Base+0x408>
   48f40:	ldr	d8, [x8, #3016]
   48f44:	cmp	w23, #0x0
   48f48:	mov	w20, #0x40                  	// #64
   48f4c:	cset	w9, eq  // eq = none
   48f50:	mov	w8, #0x40                  	// #64
   48f54:	stp	x26, x25, [sp, #24]
   48f58:	str	w23, [sp, #44]
   48f5c:	str	x9, [sp, #16]
   48f60:	scvtf	d0, x27
   48f64:	fmul	d0, d0, d8
   48f68:	fcvtzu	x25, d0
   48f6c:	adds	x26, x25, #0x1
   48f70:	add	x0, sp, #0x30
   48f74:	mov	x1, x27
   48f78:	str	x8, [sp, #8]
   48f7c:	cset	w22, cs  // cs = hs, nlast
   48f80:	str	x27, [x29, #8]
   48f84:	bl	c330 <mpfr_set_prec@plt>
   48f88:	sub	x0, x29, #0x30
   48f8c:	mov	x1, xzr
   48f90:	bl	c110 <__gmpz_set_ui@plt>
   48f94:	sub	x0, x29, #0x20
   48f98:	mov	w1, #0x1                   	// #1
   48f9c:	bl	c110 <__gmpz_set_ui@plt>
   48fa0:	lsl	x8, x26, #1
   48fa4:	sub	x2, x8, #0x1
   48fa8:	sub	x0, x29, #0x20
   48fac:	sub	x1, x29, #0x20
   48fb0:	bl	c6a0 <__gmpz_mul_2exp@plt>
   48fb4:	sub	x0, x29, #0x10
   48fb8:	sub	x1, x29, #0x20
   48fbc:	bl	c410 <__gmpz_set@plt>
   48fc0:	tbz	w22, #0, 490f0 <mpfr_zeta_ui@@Base+0x3dc>
   48fc4:	sub	x0, x29, #0x20
   48fc8:	sub	x1, x29, #0x30
   48fcc:	mov	x2, x24
   48fd0:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   48fd4:	add	x22, x25, #0x4
   48fd8:	sub	x0, x29, #0x30
   48fdc:	sub	x1, x29, #0x30
   48fe0:	sub	x2, x29, #0x20
   48fe4:	bl	ceb0 <__gmpz_add@plt>
   48fe8:	sub	x0, x29, #0x20
   48fec:	sub	x1, x29, #0x20
   48ff0:	mov	x2, x24
   48ff4:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   48ff8:	ldur	w8, [x29, #-28]
   48ffc:	add	x22, x22, #0x1
   49000:	cmp	w8, #0x0
   49004:	b.gt	48fd8 <mpfr_zeta_ui@@Base+0x2c4>
   49008:	ldr	x27, [x29, #8]
   4900c:	sub	x0, x29, #0x30
   49010:	sub	x1, x29, #0x30
   49014:	mov	x2, x27
   49018:	bl	c6a0 <__gmpz_mul_2exp@plt>
   4901c:	sub	x0, x29, #0x30
   49020:	sub	x1, x29, #0x30
   49024:	sub	x2, x29, #0x10
   49028:	bl	bf90 <__gmpz_tdiv_q@plt>
   4902c:	add	x0, sp, #0x30
   49030:	sub	x1, x29, #0x30
   49034:	mov	w2, wzr
   49038:	bl	c6e0 <mpfr_set_z@plt>
   4903c:	add	x0, sp, #0x30
   49040:	add	x1, sp, #0x30
   49044:	mov	x2, x27
   49048:	mov	w3, wzr
   4904c:	bl	cde0 <mpfr_div_2ui@plt>
   49050:	ldr	w23, [sp, #44]
   49054:	ldp	x26, x25, [sp, #24]
   49058:	cbz	x22, 4928c <mpfr_zeta_ui@@Base+0x578>
   4905c:	add	x8, x22, #0x1
   49060:	cmp	x8, #0x1
   49064:	b.ls	49294 <mpfr_zeta_ui@@Base+0x580>  // b.plast
   49068:	clz	x8, x22
   4906c:	sub	x8, x20, x8
   49070:	ldr	x9, [sp, #64]
   49074:	mov	x10, #0xfffffffffffffeff    	// #-257
   49078:	ldr	w22, [sp, #40]
   4907c:	movk	x10, #0x7fff, lsl #48
   49080:	add	x10, x10, #0x105
   49084:	cmp	x9, x10
   49088:	b.lt	490c4 <mpfr_zeta_ui@@Base+0x3b0>  // b.tstop
   4908c:	ldr	x9, [sp, #48]
   49090:	sub	x2, x27, x8
   49094:	ldr	x8, [x19]
   49098:	ldr	x0, [sp, #72]
   4909c:	sub	x10, x9, #0x1
   490a0:	add	x9, x9, #0x3e
   490a4:	cmp	x10, #0x0
   490a8:	csel	x9, x9, x10, lt  // lt = tstop
   490ac:	asr	x9, x9, #6
   490b0:	add	x1, x9, #0x1
   490b4:	ldr	x9, [sp, #16]
   490b8:	add	x3, x8, x9
   490bc:	bl	c830 <mpfr_round_p@plt>
   490c0:	cbnz	w0, 492cc <mpfr_zeta_ui@@Base+0x5b8>
   490c4:	ldr	x22, [sp, #8]
   490c8:	mov	x8, #0xfffffffffffffeff    	// #-257
   490cc:	movk	x8, #0x7fff, lsl #48
   490d0:	sub	x8, x8, x27
   490d4:	cmp	x22, x8
   490d8:	b.gt	492b0 <mpfr_zeta_ui@@Base+0x59c>
   490dc:	add	x27, x22, x27
   490e0:	cmp	x27, #0x0
   490e4:	cinc	x8, x27, lt  // lt = tstop
   490e8:	asr	x8, x8, #1
   490ec:	b	48f60 <mpfr_zeta_ui@@Base+0x24c>
   490f0:	mov	x27, x26
   490f4:	b	4912c <mpfr_zeta_ui@@Base+0x418>
   490f8:	sub	x0, x29, #0x20
   490fc:	sub	x1, x29, #0x20
   49100:	bl	ca40 <__gmpz_divexact_ui@plt>
   49104:	add	x2, x27, x25
   49108:	sub	x0, x29, #0x20
   4910c:	sub	x1, x29, #0x20
   49110:	bl	ca40 <__gmpz_divexact_ui@plt>
   49114:	sub	x0, x29, #0x10
   49118:	sub	x1, x29, #0x10
   4911c:	sub	x2, x29, #0x20
   49120:	bl	ceb0 <__gmpz_add@plt>
   49124:	subs	x27, x27, #0x1
   49128:	b.eq	48fc4 <mpfr_zeta_ui@@Base+0x2b0>  // b.none
   4912c:	clz	x8, x27
   49130:	sub	x9, x20, x8
   49134:	mul	x9, x9, x21
   49138:	cmp	x9, #0x80
   4913c:	b.ls	49170 <mpfr_zeta_ui@@Base+0x45c>  // b.plast
   49140:	eor	x8, x8, #0x3f
   49144:	orr	x9, xzr, #0x1
   49148:	sub	x0, x29, #0x10
   4914c:	mov	w1, #0x2                   	// #2
   49150:	madd	x22, x8, x21, x9
   49154:	bl	d050 <__gmpz_sizeinbase@plt>
   49158:	cmp	x22, x0
   4915c:	b.ls	491e0 <mpfr_zeta_ui@@Base+0x4cc>  // b.plast
   49160:	sub	x0, x29, #0x40
   49164:	mov	x1, xzr
   49168:	bl	c110 <__gmpz_set_ui@plt>
   4916c:	b	49200 <mpfr_zeta_ui@@Base+0x4ec>
   49170:	mov	x8, #0xffffffffffffffff    	// #-1
   49174:	udiv	x23, x8, x27
   49178:	mov	x2, x27
   4917c:	mov	x22, x24
   49180:	cbz	x24, 491a0 <mpfr_zeta_ui@@Base+0x48c>
   49184:	mov	x22, x24
   49188:	mov	x2, x27
   4918c:	cmp	x2, x23
   49190:	b.cs	491a0 <mpfr_zeta_ui@@Base+0x48c>  // b.hs, b.nlast
   49194:	subs	x22, x22, #0x1
   49198:	mul	x2, x2, x27
   4919c:	b.ne	4918c <mpfr_zeta_ui@@Base+0x478>  // b.any
   491a0:	sub	x0, x29, #0x40
   491a4:	sub	x1, x29, #0x10
   491a8:	b	491b4 <mpfr_zeta_ui@@Base+0x4a0>
   491ac:	sub	x0, x29, #0x40
   491b0:	sub	x1, x29, #0x40
   491b4:	bl	c4b0 <__gmpz_tdiv_q_ui@plt>
   491b8:	cbz	x22, 49200 <mpfr_zeta_ui@@Base+0x4ec>
   491bc:	mov	x2, x27
   491c0:	subs	x22, x22, #0x1
   491c4:	b.eq	491ac <mpfr_zeta_ui@@Base+0x498>  // b.none
   491c8:	cmp	x2, x23
   491cc:	b.cs	491ac <mpfr_zeta_ui@@Base+0x498>  // b.hs, b.nlast
   491d0:	subs	x22, x22, #0x1
   491d4:	mul	x2, x2, x27
   491d8:	b.ne	491c8 <mpfr_zeta_ui@@Base+0x4b4>  // b.any
   491dc:	b	491ac <mpfr_zeta_ui@@Base+0x498>
   491e0:	sub	x0, x29, #0x40
   491e4:	mov	x1, x27
   491e8:	mov	x2, x21
   491ec:	bl	c9b0 <__gmpz_ui_pow_ui@plt>
   491f0:	sub	x0, x29, #0x40
   491f4:	sub	x1, x29, #0x10
   491f8:	sub	x2, x29, #0x40
   491fc:	bl	bf90 <__gmpz_tdiv_q@plt>
   49200:	sub	x0, x29, #0x30
   49204:	sub	x1, x29, #0x30
   49208:	sub	x2, x29, #0x40
   4920c:	tbnz	w27, #0, 49218 <mpfr_zeta_ui@@Base+0x504>
   49210:	bl	c240 <__gmpz_sub@plt>
   49214:	b	4921c <mpfr_zeta_ui@@Base+0x508>
   49218:	bl	ceb0 <__gmpz_add@plt>
   4921c:	mov	w8, #0xf334                	// #62260
   49220:	movk	w8, #0xb504, lsl #16
   49224:	cmp	x27, x8
   49228:	b.hi	4923c <mpfr_zeta_ui@@Base+0x528>  // b.pmore
   4922c:	lsl	x8, x27, #1
   49230:	sub	x8, x8, #0x1
   49234:	mul	x2, x8, x27
   49238:	b	49254 <mpfr_zeta_ui@@Base+0x540>
   4923c:	sub	x0, x29, #0x20
   49240:	sub	x1, x29, #0x20
   49244:	mov	x2, x27
   49248:	bl	c590 <__gmpz_mul_ui@plt>
   4924c:	lsl	x8, x27, #1
   49250:	sub	x2, x8, #0x1
   49254:	sub	x0, x29, #0x20
   49258:	sub	x1, x29, #0x20
   4925c:	bl	c590 <__gmpz_mul_ui@plt>
   49260:	sub	x0, x29, #0x20
   49264:	sub	x1, x29, #0x20
   49268:	mov	w2, #0x1                   	// #1
   4926c:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   49270:	sub	x8, x26, x27
   49274:	lsr	x9, x26, #32
   49278:	add	x2, x8, #0x1
   4927c:	cbnz	x9, 490f8 <mpfr_zeta_ui@@Base+0x3e4>
   49280:	add	x8, x27, x25
   49284:	mul	x2, x2, x8
   49288:	b	49108 <mpfr_zeta_ui@@Base+0x3f4>
   4928c:	mov	x8, xzr
   49290:	b	49070 <mpfr_zeta_ui@@Base+0x35c>
   49294:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49298:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4929c:	mov	w1, #0xdc                  	// #220
   492a0:	add	x0, x0, #0xbf1
   492a4:	add	x2, x2, #0xbfb
   492a8:	bl	d030 <mpfr_assert_fail@plt>
   492ac:	b	49068 <mpfr_zeta_ui@@Base+0x354>
   492b0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   492b4:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   492b8:	mov	w1, #0xe1                  	// #225
   492bc:	add	x0, x0, #0xbf1
   492c0:	add	x2, x2, #0x26
   492c4:	bl	d030 <mpfr_assert_fail@plt>
   492c8:	b	490dc <mpfr_zeta_ui@@Base+0x3c8>
   492cc:	sub	x0, x29, #0x10
   492d0:	bl	c610 <mpfr_mpz_clear@plt>
   492d4:	sub	x0, x29, #0x20
   492d8:	bl	c610 <mpfr_mpz_clear@plt>
   492dc:	sub	x0, x29, #0x40
   492e0:	bl	c610 <mpfr_mpz_clear@plt>
   492e4:	sub	x0, x29, #0x30
   492e8:	bl	c610 <mpfr_mpz_clear@plt>
   492ec:	ldr	w3, [sp, #56]
   492f0:	add	x1, sp, #0x30
   492f4:	mov	x0, x19
   492f8:	mov	w2, w23
   492fc:	bl	cb70 <mpfr_set4@plt>
   49300:	mov	w21, w0
   49304:	add	x0, sp, #0x30
   49308:	bl	c4f0 <mpfr_clear@plt>
   4930c:	b	49340 <mpfr_zeta_ui@@Base+0x62c>
   49310:	orr	w8, w23, #0x2
   49314:	cmp	w8, #0x3
   49318:	b.eq	49328 <mpfr_zeta_ui@@Base+0x614>  // b.none
   4931c:	cbnz	w23, 493d4 <mpfr_zeta_ui@@Base+0x6c0>
   49320:	cmp	x20, x21
   49324:	b.cs	493d4 <mpfr_zeta_ui@@Base+0x6c0>  // b.hs, b.nlast
   49328:	mov	w1, #0x1                   	// #1
   4932c:	mov	x0, x19
   49330:	mov	x2, xzr
   49334:	mov	w3, w23
   49338:	bl	cac0 <mpfr_set_ui_2exp@plt>
   4933c:	mov	w21, #0xffffffff            	// #-1
   49340:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49344:	ldr	x1, [x0, #2800]
   49348:	add	x0, x0, #0xaf0
   4934c:	blr	x1
   49350:	str	w22, [x28, x0]
   49354:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49358:	ldr	x1, [x0, #2736]
   4935c:	add	x0, x0, #0xab0
   49360:	blr	x1
   49364:	str	x25, [x28, x0]
   49368:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4936c:	ldr	x1, [x0, #2768]
   49370:	add	x0, x0, #0xad0
   49374:	blr	x1
   49378:	str	x26, [x28, x0]
   4937c:	ldr	x8, [x19, #16]
   49380:	cmp	x8, x26
   49384:	b.gt	493f8 <mpfr_zeta_ui@@Base+0x6e4>
   49388:	cmp	x8, x25
   4938c:	b.lt	493f8 <mpfr_zeta_ui@@Base+0x6e4>  // b.tstop
   49390:	cbz	w21, 493ac <mpfr_zeta_ui@@Base+0x698>
   49394:	orr	w8, w22, #0x8
   49398:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4939c:	ldr	x1, [x0, #2800]
   493a0:	add	x0, x0, #0xaf0
   493a4:	blr	x1
   493a8:	str	w8, [x28, x0]
   493ac:	mov	w0, w21
   493b0:	ldp	x20, x19, [sp, #240]
   493b4:	ldp	x22, x21, [sp, #224]
   493b8:	ldp	x24, x23, [sp, #208]
   493bc:	ldp	x26, x25, [sp, #192]
   493c0:	ldp	x28, x27, [sp, #176]
   493c4:	ldp	x29, x30, [sp, #160]
   493c8:	ldr	d8, [sp, #144]
   493cc:	add	sp, sp, #0x100
   493d0:	ret
   493d4:	mov	w1, #0x1                   	// #1
   493d8:	mov	x0, x19
   493dc:	mov	x2, xzr
   493e0:	mov	w3, w23
   493e4:	mov	w21, #0x1                   	// #1
   493e8:	bl	cac0 <mpfr_set_ui_2exp@plt>
   493ec:	mov	x0, x19
   493f0:	bl	c5c0 <mpfr_nextabove@plt>
   493f4:	b	49340 <mpfr_zeta_ui@@Base+0x62c>
   493f8:	mov	x0, x19
   493fc:	mov	w1, w21
   49400:	mov	w2, w23
   49404:	bl	d020 <mpfr_check_range@plt>
   49408:	b	48d60 <mpfr_zeta_ui@@Base+0x4c>
   4940c:	mov	x8, xzr
   49410:	b	48f1c <mpfr_zeta_ui@@Base+0x208>
   49414:	mov	w8, #0xf                   	// #15
   49418:	b	48f38 <mpfr_zeta_ui@@Base+0x224>
   4941c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49420:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   49424:	add	x0, x0, #0xbf1
   49428:	add	x2, x2, #0xa87
   4942c:	mov	w1, #0x6e                  	// #110
   49430:	bl	d030 <mpfr_assert_fail@plt>
   49434:	b	48f10 <mpfr_zeta_ui@@Base+0x1fc>
   49438:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4943c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   49440:	add	x0, x0, #0xbf1
   49444:	add	x2, x2, #0xa87
   49448:	mov	w1, #0x70                  	// #112
   4944c:	bl	d030 <mpfr_assert_fail@plt>
   49450:	b	48f2c <mpfr_zeta_ui@@Base+0x218>

0000000000049454 <mpfr_j0@@Base>:
   49454:	stp	x29, x30, [sp, #-16]!
   49458:	mov	w3, w2
   4945c:	mov	x2, x1
   49460:	mov	x1, xzr
   49464:	mov	x29, sp
   49468:	bl	d100 <mpfr_jn@plt>
   4946c:	ldp	x29, x30, [sp], #16
   49470:	ret

0000000000049474 <mpfr_jn@@Base>:
   49474:	sub	sp, sp, #0x1d0
   49478:	stp	x29, x30, [sp, #368]
   4947c:	stp	x28, x27, [sp, #384]
   49480:	stp	x26, x25, [sp, #400]
   49484:	stp	x24, x23, [sp, #416]
   49488:	stp	x22, x21, [sp, #432]
   4948c:	stp	x20, x19, [sp, #448]
   49490:	ldr	x9, [x2, #16]
   49494:	mov	x27, #0xfffffffffffffeff    	// #-257
   49498:	movk	x27, #0x7fff, lsl #48
   4949c:	cmp	x1, #0x0
   494a0:	add	x8, x27, #0x105
   494a4:	mov	w21, w3
   494a8:	mov	x12, x1
   494ac:	cneg	x23, x1, mi  // mi = first
   494b0:	cmp	x9, x8
   494b4:	mov	x22, x0
   494b8:	add	x29, sp, #0x170
   494bc:	stp	x2, x0, [sp, #64]
   494c0:	b.lt	49d44 <mpfr_jn@@Base+0x8d0>  // b.tstop
   494c4:	mov	x28, x2
   494c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   494cc:	ldr	x1, [x0, #2800]
   494d0:	add	x0, x0, #0xaf0
   494d4:	blr	x1
   494d8:	mrs	x26, tpidr_el0
   494dc:	ldr	w25, [x26, x0]
   494e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   494e4:	ldr	x1, [x0, #2736]
   494e8:	add	x0, x0, #0xab0
   494ec:	blr	x1
   494f0:	ldr	x19, [x26, x0]
   494f4:	mov	x8, x0
   494f8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   494fc:	ldr	x1, [x0, #2768]
   49500:	add	x0, x0, #0xad0
   49504:	blr	x1
   49508:	ldr	x11, [x26, x0]
   4950c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   49510:	str	x10, [x26, x8]
   49514:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   49518:	str	x8, [x26, x0]
   4951c:	str	x12, [sp, #80]
   49520:	cbz	x12, 4955c <mpfr_jn@@Base+0xe8>
   49524:	ldr	x8, [sp, #80]
   49528:	cmp	x8, #0x1
   4952c:	b.ne	49594 <mpfr_jn@@Base+0x120>  // b.any
   49530:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49534:	ldr	x1, [x0, #2800]
   49538:	add	x0, x0, #0xaf0
   4953c:	blr	x1
   49540:	str	wzr, [x26, x0]
   49544:	ldr	x8, [x28, #16]
   49548:	tbnz	x8, #63, 49568 <mpfr_jn@@Base+0xf4>
   4954c:	mov	w8, wzr
   49550:	cmp	w8, #0x4
   49554:	b.ne	49590 <mpfr_jn@@Base+0x11c>  // b.any
   49558:	b	49c98 <mpfr_jn@@Base+0x824>
   4955c:	tbnz	x9, #63, 49680 <mpfr_jn@@Base+0x20c>
   49560:	mov	w8, wzr
   49564:	b	496a0 <mpfr_jn@@Base+0x22c>
   49568:	ldr	x9, [x22]
   4956c:	mov	w10, #0x3                   	// #3
   49570:	sub	x2, x10, x8, lsl #1
   49574:	add	x8, x9, #0x1
   49578:	cmp	x2, x8
   4957c:	b.hi	49de8 <mpfr_jn@@Base+0x974>  // b.pmore
   49580:	mov	w8, wzr
   49584:	cbz	w8, 4954c <mpfr_jn@@Base+0xd8>
   49588:	cmp	w8, #0x4
   4958c:	b.eq	49c98 <mpfr_jn@@Base+0x824>  // b.none
   49590:	cbnz	w8, 49d20 <mpfr_jn@@Base+0x8ac>
   49594:	stp	x11, x19, [sp, #32]
   49598:	ldr	x8, [x28]
   4959c:	mov	w19, #0x1                   	// #1
   495a0:	ldr	x9, [x22]
   495a4:	stur	w19, [x29, #-128]
   495a8:	stur	x8, [x29, #-136]
   495ac:	ldr	x8, [x28, #16]
   495b0:	cmp	x9, #0x0
   495b4:	cinc	x9, x9, lt  // lt = tstop
   495b8:	asr	x9, x9, #1
   495bc:	stur	x8, [x29, #-120]
   495c0:	ldr	x8, [x28, #24]
   495c4:	add	x1, x9, #0x3
   495c8:	sub	x0, x29, #0x88
   495cc:	mov	x2, xzr
   495d0:	stur	x8, [x29, #-112]
   495d4:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   495d8:	cmp	w0, #0x1
   495dc:	b.lt	49604 <mpfr_jn@@Base+0x190>  // b.tstop
   495e0:	ldr	x1, [sp, #80]
   495e4:	mov	x0, x22
   495e8:	mov	x2, x28
   495ec:	mov	w3, w21
   495f0:	bl	49f90 <mpfr_j1@@Base+0x20>
   495f4:	cbz	w0, 49604 <mpfr_jn@@Base+0x190>
   495f8:	ldr	x19, [sp, #40]
   495fc:	mov	w24, w0
   49600:	b	49c94 <mpfr_jn@@Base+0x820>
   49604:	stur	w19, [x29, #-32]
   49608:	stur	w19, [x29, #-64]
   4960c:	stur	w19, [x29, #-96]
   49610:	ldr	x19, [sp, #40]
   49614:	ldr	x20, [sp, #80]
   49618:	add	x8, sp, #0x58
   4961c:	mov	w9, #0x20                  	// #32
   49620:	add	x10, x8, #0x10
   49624:	stur	x9, [x29, #-40]
   49628:	stur	x9, [x29, #-72]
   4962c:	stur	x9, [x29, #-104]
   49630:	add	x9, x8, #0x18
   49634:	add	x8, x8, #0x20
   49638:	stp	xzr, x10, [sp, #88]
   4963c:	stur	x10, [x29, #-16]
   49640:	stur	x9, [x29, #-48]
   49644:	stur	x8, [x29, #-80]
   49648:	cbz	x20, 4976c <mpfr_jn@@Base+0x2f8>
   4964c:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   49650:	add	x1, x1, #0xc15
   49654:	sub	x0, x29, #0x28
   49658:	bl	c800 <mpfr_set_str_binary@plt>
   4965c:	ldr	w8, [x28, #8]
   49660:	sub	x0, x29, #0x28
   49664:	sub	x1, x29, #0x28
   49668:	cmp	w8, #0x1
   4966c:	b.lt	496b0 <mpfr_jn@@Base+0x23c>  // b.tstop
   49670:	mov	w3, #0x2                   	// #2
   49674:	mov	x2, x28
   49678:	bl	c1b0 <mpfr_mul@plt>
   4967c:	b	496cc <mpfr_jn@@Base+0x258>
   49680:	ldr	x8, [x22]
   49684:	mov	w10, #0x2                   	// #2
   49688:	sub	x2, x10, x9, lsl #1
   4968c:	add	x8, x8, #0x1
   49690:	cmp	x2, x8
   49694:	b.hi	49e6c <mpfr_jn@@Base+0x9f8>  // b.pmore
   49698:	mov	w8, wzr
   4969c:	cbz	w8, 49560 <mpfr_jn@@Base+0xec>
   496a0:	cmp	w8, #0x4
   496a4:	b.eq	49c98 <mpfr_jn@@Base+0x824>  // b.none
   496a8:	cbz	w8, 49524 <mpfr_jn@@Base+0xb0>
   496ac:	b	49d20 <mpfr_jn@@Base+0x8ac>
   496b0:	mov	w3, #0x3                   	// #3
   496b4:	mov	x2, x28
   496b8:	bl	c1b0 <mpfr_mul@plt>
   496bc:	sub	x0, x29, #0x28
   496c0:	sub	x1, x29, #0x28
   496c4:	mov	w2, #0x2                   	// #2
   496c8:	bl	c1d0 <mpfr_neg@plt>
   496cc:	sub	x0, x29, #0x28
   496d0:	sub	x1, x29, #0x28
   496d4:	mov	w3, #0x2                   	// #2
   496d8:	mov	x2, x23
   496dc:	bl	d160 <mpfr_div_ui@plt>
   496e0:	ldur	x8, [x29, #-24]
   496e4:	neg	x9, x19
   496e8:	cmp	x23, x9
   496ec:	b.ls	49758 <mpfr_jn@@Base+0x2e4>  // b.plast
   496f0:	tbz	x8, #63, 49758 <mpfr_jn@@Base+0x2e4>
   496f4:	ldr	x1, [sp, #88]
   496f8:	cbz	x1, 49704 <mpfr_jn@@Base+0x290>
   496fc:	ldr	x0, [sp, #96]
   49700:	bl	d120 <mpfr_free_func@plt>
   49704:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49708:	ldr	x1, [x0, #2800]
   4970c:	add	x0, x0, #0xaf0
   49710:	blr	x1
   49714:	str	w25, [x26, x0]
   49718:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4971c:	ldr	x1, [x0, #2736]
   49720:	add	x0, x0, #0xab0
   49724:	blr	x1
   49728:	str	x19, [x26, x0]
   4972c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49730:	ldr	x1, [x0, #2768]
   49734:	add	x0, x0, #0xad0
   49738:	blr	x1
   4973c:	ldr	x8, [sp, #32]
   49740:	cmp	w21, #0x0
   49744:	csinc	w1, w21, wzr, ne  // ne = any
   49748:	str	x8, [x26, x0]
   4974c:	tbnz	w20, #0, 49d08 <mpfr_jn@@Base+0x894>
   49750:	mov	w2, #0x1                   	// #1
   49754:	b	49d14 <mpfr_jn@@Base+0x8a0>
   49758:	lsr	x9, x23, #62
   4975c:	cbnz	x9, 4976c <mpfr_jn@@Base+0x2f8>
   49760:	sdiv	x9, x19, x23
   49764:	cmp	x8, x9
   49768:	b.lt	496f4 <mpfr_jn@@Base+0x280>  // b.tstop
   4976c:	mov	x0, x23
   49770:	mov	x1, x28
   49774:	bl	4a6f0 <mpfr_j1@@Base+0x780>
   49778:	ldr	x19, [x22]
   4977c:	sub	x8, x27, #0x81
   49780:	cmp	x0, x8
   49784:	csel	x20, x0, x8, cc  // cc = lo, ul, last
   49788:	cmp	x19, #0x1
   4978c:	str	x0, [sp, #8]
   49790:	stp	w25, w21, [sp, #24]
   49794:	b.eq	49dc4 <mpfr_jn@@Base+0x950>  // b.none
   49798:	b.le	49dcc <mpfr_jn@@Base+0x958>
   4979c:	ldr	x8, [x22]
   497a0:	mov	w9, #0x80                  	// #128
   497a4:	sub	x8, x8, #0x1
   497a8:	clz	x8, x8
   497ac:	sub	w8, w9, w8, lsl #1
   497b0:	sxtw	x8, w8
   497b4:	add	x9, x19, x20
   497b8:	add	x8, x9, x8
   497bc:	add	x8, x8, #0x3
   497c0:	cmp	x8, x27
   497c4:	csel	x25, x8, x27, cc  // cc = lo, ul, last
   497c8:	ldr	w8, [sp, #28]
   497cc:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   497d0:	mov	x19, #0xc000000000000001    	// #-4611686018427387903
   497d4:	str	wzr, [sp, #4]
   497d8:	cmp	w8, #0x0
   497dc:	cset	w8, eq  // eq = none
   497e0:	stp	x8, x26, [sp, #48]
   497e4:	mov	w8, #0x40                  	// #64
   497e8:	str	x8, [sp, #16]
   497ec:	cmp	x25, x27
   497f0:	b.gt	49f50 <mpfr_jn@@Base+0xadc>
   497f4:	sub	x8, x25, #0x1
   497f8:	add	x9, x25, #0x3e
   497fc:	cmp	x8, #0x0
   49800:	csel	x8, x9, x8, lt  // lt = tstop
   49804:	ldr	x1, [sp, #88]
   49808:	asr	x8, x8, #6
   4980c:	add	x20, x8, #0x1
   49810:	add	x8, x20, x20, lsl #1
   49814:	lsl	x2, x8, #3
   49818:	str	x2, [sp, #88]
   4981c:	cbz	x1, 4982c <mpfr_jn@@Base+0x3b8>
   49820:	ldr	x0, [sp, #96]
   49824:	bl	c660 <mpfr_reallocate_func@plt>
   49828:	b	49834 <mpfr_jn@@Base+0x3c0>
   4982c:	mov	x0, x2
   49830:	bl	d1f0 <mpfr_allocate_func@plt>
   49834:	mov	x8, x0
   49838:	mov	w10, #0x1                   	// #1
   4983c:	stur	x8, [x29, #-16]
   49840:	add	x9, x8, x20, lsl #3
   49844:	add	x8, x8, x20, lsl #4
   49848:	str	x0, [sp, #96]
   4984c:	stur	w10, [x29, #-32]
   49850:	stur	w10, [x29, #-64]
   49854:	stur	x25, [x29, #-104]
   49858:	stp	x9, x25, [x29, #-48]
   4985c:	stp	x8, x25, [x29, #-80]
   49860:	stur	w10, [x29, #-96]
   49864:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49868:	ldr	x1, [x0, #2800]
   4986c:	add	x0, x0, #0xaf0
   49870:	blr	x1
   49874:	mov	x27, x0
   49878:	str	wzr, [x26, x0]
   4987c:	sub	x0, x29, #0x68
   49880:	mov	x1, x28
   49884:	mov	x2, x23
   49888:	mov	w3, wzr
   4988c:	bl	c3d0 <mpfr_pow_ui@plt>
   49890:	sub	x0, x29, #0x28
   49894:	mov	x1, x28
   49898:	mov	x2, x28
   4989c:	mov	w3, wzr
   498a0:	bl	c1b0 <mpfr_mul@plt>
   498a4:	ldr	w8, [x26, x27]
   498a8:	mov	w9, #0x2f                  	// #47
   498ac:	sub	x0, x29, #0x28
   498b0:	mov	w1, #0x2                   	// #2
   498b4:	and	w8, w8, w9
   498b8:	str	w8, [x26, x27]
   498bc:	bl	c100 <mpfr_get_ui@plt>
   498c0:	ldrb	w8, [x26, x27]
   498c4:	mov	x27, x0
   498c8:	tbnz	w8, #4, 49b30 <mpfr_jn@@Base+0x6bc>
   498cc:	sub	x0, x29, #0x28
   498d0:	sub	x1, x29, #0x28
   498d4:	mov	w2, #0x2                   	// #2
   498d8:	mov	w3, wzr
   498dc:	bl	cde0 <mpfr_div_2ui@plt>
   498e0:	sub	x0, x29, #0x48
   498e4:	mov	x1, x23
   498e8:	mov	w2, wzr
   498ec:	bl	cbb0 <mpfr_fac_ui@plt>
   498f0:	sub	x0, x29, #0x68
   498f4:	sub	x1, x29, #0x68
   498f8:	sub	x2, x29, #0x48
   498fc:	mov	w3, wzr
   49900:	bl	caf0 <mpfr_div@plt>
   49904:	ldr	x8, [sp, #80]
   49908:	cbz	x8, 49920 <mpfr_jn@@Base+0x4ac>
   4990c:	sub	x0, x29, #0x68
   49910:	sub	x1, x29, #0x68
   49914:	mov	x2, x23
   49918:	mov	w3, wzr
   4991c:	bl	cde0 <mpfr_div_2ui@plt>
   49920:	ldur	w3, [x29, #-96]
   49924:	sub	x0, x29, #0x48
   49928:	sub	x1, x29, #0x68
   4992c:	mov	w2, wzr
   49930:	bl	cb70 <mpfr_set4@plt>
   49934:	ldur	x8, [x29, #-56]
   49938:	mov	x22, #0xfffffffffffffffe    	// #-2
   4993c:	mov	w20, #0x2                   	// #2
   49940:	mov	w28, #0x1                   	// #1
   49944:	cmp	x8, x24
   49948:	csel	x21, x19, x8, eq  // eq = none
   4994c:	b	4995c <mpfr_jn@@Base+0x4e8>
   49950:	add	x28, x28, #0x1
   49954:	add	x20, x20, #0x2
   49958:	sub	x22, x22, #0x1
   4995c:	sub	x0, x29, #0x68
   49960:	sub	x1, x29, #0x68
   49964:	sub	x2, x29, #0x28
   49968:	mov	w3, wzr
   4996c:	bl	c1b0 <mpfr_mul@plt>
   49970:	sub	x0, x29, #0x68
   49974:	sub	x1, x29, #0x68
   49978:	mov	w2, wzr
   4997c:	bl	c1d0 <mpfr_neg@plt>
   49980:	cmp	x23, x22
   49984:	b.hi	49a28 <mpfr_jn@@Base+0x5b4>  // b.pmore
   49988:	add	x26, x23, x28
   4998c:	umulh	x8, x28, x26
   49990:	cmp	xzr, x8
   49994:	b.eq	499b4 <mpfr_jn@@Base+0x540>  // b.none
   49998:	sub	x0, x29, #0x68
   4999c:	sub	x1, x29, #0x68
   499a0:	mov	x2, x28
   499a4:	mov	w3, wzr
   499a8:	bl	d160 <mpfr_div_ui@plt>
   499ac:	mov	x2, x26
   499b0:	b	499b8 <mpfr_jn@@Base+0x544>
   499b4:	mul	x2, x26, x28
   499b8:	sub	x0, x29, #0x68
   499bc:	sub	x1, x29, #0x68
   499c0:	mov	w3, wzr
   499c4:	bl	d160 <mpfr_div_ui@plt>
   499c8:	ldur	x8, [x29, #-56]
   499cc:	ldur	x9, [x29, #-88]
   499d0:	sub	x0, x29, #0x48
   499d4:	sub	x1, x29, #0x48
   499d8:	cmp	x8, x24
   499dc:	csel	x8, x19, x9, eq  // eq = none
   499e0:	cmp	x8, x21
   499e4:	sub	x2, x29, #0x68
   499e8:	mov	w3, wzr
   499ec:	csel	x21, x8, x21, gt
   499f0:	bl	c640 <mpfr_add@plt>
   499f4:	ldur	x8, [x29, #-56]
   499f8:	ldur	x9, [x29, #-88]
   499fc:	cmp	x8, x24
   49a00:	csel	x8, x19, x8, eq  // eq = none
   49a04:	add	x9, x9, x25
   49a08:	cmp	x8, x21
   49a0c:	csel	x21, x8, x21, gt
   49a10:	cmp	x9, x8
   49a14:	b.gt	49950 <mpfr_jn@@Base+0x4dc>
   49a18:	udiv	x9, x27, x20
   49a1c:	cmp	x9, x26
   49a20:	b.cs	49950 <mpfr_jn@@Base+0x4dc>  // b.hs, b.nlast
   49a24:	b	49a44 <mpfr_jn@@Base+0x5d0>
   49a28:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49a2c:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   49a30:	mov	w1, #0x10f                 	// #271
   49a34:	add	x0, x0, #0xc05
   49a38:	add	x2, x2, #0xc70
   49a3c:	bl	d030 <mpfr_assert_fail@plt>
   49a40:	b	49988 <mpfr_jn@@Base+0x514>
   49a44:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49a48:	ldr	x1, [x0, #2800]
   49a4c:	add	x0, x0, #0xaf0
   49a50:	blr	x1
   49a54:	ldr	x26, [sp, #56]
   49a58:	cmn	x28, #0x1
   49a5c:	sub	x21, x21, x8
   49a60:	ldr	w20, [x26, x0]
   49a64:	b.eq	49b4c <mpfr_jn@@Base+0x6d8>  // b.none
   49a68:	mov	x27, #0xfffffffffffffeff    	// #-257
   49a6c:	cmn	x28, #0x2
   49a70:	movk	x27, #0x7fff, lsl #48
   49a74:	b.eq	49b64 <mpfr_jn@@Base+0x6f0>  // b.none
   49a78:	add	x8, x28, #0x1
   49a7c:	clz	x8, x8
   49a80:	mov	w9, #0x40                  	// #64
   49a84:	sub	w8, w9, w8
   49a88:	ldr	x28, [sp, #64]
   49a8c:	lsl	w9, w8, #1
   49a90:	add	w9, w9, #0x2
   49a94:	sxtw	x22, w9
   49a98:	tbnz	x21, #63, 49b14 <mpfr_jn@@Base+0x6a0>
   49a9c:	cmn	w8, #0x1
   49aa0:	b.lt	49b14 <mpfr_jn@@Base+0x6a0>  // b.tstop
   49aa4:	sub	x8, x27, x22
   49aa8:	cmp	x21, x8
   49aac:	b.gt	49b14 <mpfr_jn@@Base+0x6a0>
   49ab0:	ldur	x8, [x29, #-56]
   49ab4:	add	x9, x27, #0x105
   49ab8:	add	x21, x21, x22
   49abc:	cmp	x8, x9
   49ac0:	b.lt	49b5c <mpfr_jn@@Base+0x6e8>  // b.tstop
   49ac4:	ldur	x8, [x29, #-72]
   49ac8:	ldr	x22, [sp, #72]
   49acc:	ldur	x0, [x29, #-48]
   49ad0:	sub	x2, x25, x21
   49ad4:	sub	x10, x8, #0x1
   49ad8:	add	x8, x8, #0x3e
   49adc:	cmp	x10, #0x0
   49ae0:	csel	x8, x8, x10, lt  // lt = tstop
   49ae4:	asr	x8, x8, #6
   49ae8:	ldr	x9, [x22]
   49aec:	add	x1, x8, #0x1
   49af0:	ldr	x8, [sp, #48]
   49af4:	add	x3, x9, x8
   49af8:	bl	c830 <mpfr_round_p@plt>
   49afc:	cbz	w0, 49b90 <mpfr_jn@@Base+0x71c>
   49b00:	tst	w20, #0x3
   49b04:	b.ne	49b80 <mpfr_jn@@Base+0x70c>  // b.any
   49b08:	mov	w8, wzr
   49b0c:	tbnz	w8, #0, 497ec <mpfr_jn@@Base+0x378>
   49b10:	b	49c38 <mpfr_jn@@Base+0x7c4>
   49b14:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49b18:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   49b1c:	mov	w1, #0x12b                 	// #299
   49b20:	add	x0, x0, #0xc05
   49b24:	add	x2, x2, #0xca8
   49b28:	bl	d030 <mpfr_assert_fail@plt>
   49b2c:	b	49ab0 <mpfr_jn@@Base+0x63c>
   49b30:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49b34:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   49b38:	mov	w1, #0xfc                  	// #252
   49b3c:	add	x0, x0, #0xc05
   49b40:	add	x2, x2, #0xc51
   49b44:	bl	d030 <mpfr_assert_fail@plt>
   49b48:	b	498cc <mpfr_jn@@Base+0x458>
   49b4c:	mov	x27, #0xfffffffffffffeff    	// #-257
   49b50:	mov	w8, wzr
   49b54:	movk	x27, #0x7fff, lsl #48
   49b58:	b	49a88 <mpfr_jn@@Base+0x614>
   49b5c:	ldr	x22, [sp, #72]
   49b60:	b	49b90 <mpfr_jn@@Base+0x71c>
   49b64:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49b68:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   49b6c:	mov	w1, #0x128                 	// #296
   49b70:	add	x0, x0, #0xc05
   49b74:	add	x2, x2, #0xc9c
   49b78:	bl	d030 <mpfr_assert_fail@plt>
   49b7c:	b	49a78 <mpfr_jn@@Base+0x604>
   49b80:	ldr	w8, [sp, #4]
   49b84:	cbnz	w8, 49c1c <mpfr_jn@@Base+0x7a8>
   49b88:	mov	w8, #0x1                   	// #1
   49b8c:	str	w8, [sp, #4]
   49b90:	ldr	x8, [sp, #8]
   49b94:	subs	x20, x21, x8
   49b98:	b.ls	49bac <mpfr_jn@@Base+0x738>  // b.plast
   49b9c:	sub	x8, x27, x25
   49ba0:	cmp	x20, x8
   49ba4:	b.hi	49c00 <mpfr_jn@@Base+0x78c>  // b.pmore
   49ba8:	add	x25, x20, x25
   49bac:	ldr	x9, [sp, #16]
   49bb0:	sub	x8, x27, x25
   49bb4:	cmp	x9, x8
   49bb8:	mov	x8, x9
   49bbc:	b.gt	49be0 <mpfr_jn@@Base+0x76c>
   49bc0:	add	x25, x25, x8
   49bc4:	cmp	x25, #0x0
   49bc8:	cinc	x8, x25, lt  // lt = tstop
   49bcc:	asr	x8, x8, #1
   49bd0:	str	x8, [sp, #16]
   49bd4:	mov	w8, #0x1                   	// #1
   49bd8:	tbnz	w8, #0, 497ec <mpfr_jn@@Base+0x378>
   49bdc:	b	49c38 <mpfr_jn@@Base+0x7c4>
   49be0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49be4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   49be8:	mov	w1, #0x13f                 	// #319
   49bec:	add	x0, x0, #0xc05
   49bf0:	add	x2, x2, #0x99a
   49bf4:	bl	d030 <mpfr_assert_fail@plt>
   49bf8:	ldr	x8, [sp, #16]
   49bfc:	b	49bc0 <mpfr_jn@@Base+0x74c>
   49c00:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49c04:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   49c08:	mov	w1, #0x13e                 	// #318
   49c0c:	add	x0, x0, #0xc05
   49c10:	add	x2, x2, #0xd14
   49c14:	bl	d030 <mpfr_assert_fail@plt>
   49c18:	b	49ba8 <mpfr_jn@@Base+0x734>
   49c1c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49c20:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   49c24:	mov	w1, #0x137                 	// #311
   49c28:	add	x0, x0, #0xc05
   49c2c:	add	x2, x2, #0xd08
   49c30:	bl	d030 <mpfr_assert_fail@plt>
   49c34:	b	49b88 <mpfr_jn@@Base+0x714>
   49c38:	ldr	x8, [sp, #80]
   49c3c:	mvn	x8, x8
   49c40:	tst	x8, #0x8000000000000001
   49c44:	b.ne	49c60 <mpfr_jn@@Base+0x7ec>  // b.any
   49c48:	ldr	w21, [sp, #28]
   49c4c:	sub	x1, x29, #0x48
   49c50:	mov	x0, x22
   49c54:	mov	w2, w21
   49c58:	bl	c1d0 <mpfr_neg@plt>
   49c5c:	b	49c78 <mpfr_jn@@Base+0x804>
   49c60:	ldr	w21, [sp, #28]
   49c64:	ldur	w3, [x29, #-64]
   49c68:	sub	x1, x29, #0x48
   49c6c:	mov	x0, x22
   49c70:	mov	w2, w21
   49c74:	bl	cb70 <mpfr_set4@plt>
   49c78:	ldr	w25, [sp, #24]
   49c7c:	ldr	x19, [sp, #40]
   49c80:	ldr	x1, [sp, #88]
   49c84:	mov	w24, w0
   49c88:	cbz	x1, 49c94 <mpfr_jn@@Base+0x820>
   49c8c:	ldr	x0, [sp, #96]
   49c90:	bl	d120 <mpfr_free_func@plt>
   49c94:	ldr	x11, [sp, #32]
   49c98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49c9c:	ldr	x1, [x0, #2800]
   49ca0:	add	x0, x0, #0xaf0
   49ca4:	blr	x1
   49ca8:	str	w25, [x26, x0]
   49cac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49cb0:	ldr	x1, [x0, #2736]
   49cb4:	add	x0, x0, #0xab0
   49cb8:	blr	x1
   49cbc:	str	x19, [x26, x0]
   49cc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49cc4:	ldr	x1, [x0, #2768]
   49cc8:	add	x0, x0, #0xad0
   49ccc:	blr	x1
   49cd0:	str	x11, [x26, x0]
   49cd4:	ldr	x8, [x22, #16]
   49cd8:	cmp	x8, x11
   49cdc:	b.gt	49d90 <mpfr_jn@@Base+0x91c>
   49ce0:	cmp	x8, x19
   49ce4:	b.lt	49d90 <mpfr_jn@@Base+0x91c>  // b.tstop
   49ce8:	cbz	w24, 49d20 <mpfr_jn@@Base+0x8ac>
   49cec:	orr	w8, w25, #0x8
   49cf0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49cf4:	ldr	x1, [x0, #2800]
   49cf8:	add	x0, x0, #0xaf0
   49cfc:	blr	x1
   49d00:	str	w8, [x26, x0]
   49d04:	b	49d20 <mpfr_jn@@Base+0x8ac>
   49d08:	ldr	w8, [x28, #8]
   49d0c:	cmp	x20, #0x0
   49d10:	cneg	w2, w8, le
   49d14:	mov	x0, x22
   49d18:	bl	c880 <mpfr_underflow@plt>
   49d1c:	mov	w24, w0
   49d20:	mov	w0, w24
   49d24:	ldp	x20, x19, [sp, #448]
   49d28:	ldp	x22, x21, [sp, #432]
   49d2c:	ldp	x24, x23, [sp, #416]
   49d30:	ldp	x26, x25, [sp, #400]
   49d34:	ldp	x28, x27, [sp, #384]
   49d38:	ldp	x29, x30, [sp, #368]
   49d3c:	add	sp, sp, #0x1d0
   49d40:	ret
   49d44:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   49d48:	cmp	x9, x8
   49d4c:	b.eq	49dac <mpfr_jn@@Base+0x938>  // b.none
   49d50:	mov	x8, #0x2                   	// #2
   49d54:	movk	x8, #0x8000, lsl #48
   49d58:	cmp	x9, x8
   49d5c:	b.ne	49da4 <mpfr_jn@@Base+0x930>  // b.any
   49d60:	add	x8, x27, #0x103
   49d64:	str	x8, [x22, #16]
   49d68:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49d6c:	ldr	x1, [x0, #2800]
   49d70:	add	x0, x0, #0xaf0
   49d74:	blr	x1
   49d78:	mrs	x8, tpidr_el0
   49d7c:	ldr	w9, [x8, x0]
   49d80:	mov	w24, wzr
   49d84:	orr	w9, w9, #0x4
   49d88:	str	w9, [x8, x0]
   49d8c:	b	49d20 <mpfr_jn@@Base+0x8ac>
   49d90:	mov	x0, x22
   49d94:	mov	w1, w24
   49d98:	mov	w2, w21
   49d9c:	bl	d020 <mpfr_check_range@plt>
   49da0:	b	49d1c <mpfr_jn@@Base+0x8a8>
   49da4:	cbz	x12, 49ea8 <mpfr_jn@@Base+0xa34>
   49da8:	tbnz	w23, #0, 49ec0 <mpfr_jn@@Base+0xa4c>
   49dac:	mov	w8, #0x1                   	// #1
   49db0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   49db4:	mov	w24, wzr
   49db8:	str	w8, [x22, #8]
   49dbc:	str	x9, [x22, #16]
   49dc0:	b	49d20 <mpfr_jn@@Base+0x8ac>
   49dc4:	mov	x8, xzr
   49dc8:	b	497b4 <mpfr_jn@@Base+0x340>
   49dcc:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49dd0:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   49dd4:	add	x0, x0, #0xc05
   49dd8:	add	x2, x2, #0xc37
   49ddc:	mov	w1, #0xed                  	// #237
   49de0:	bl	d030 <mpfr_assert_fail@plt>
   49de4:	b	4979c <mpfr_jn@@Base+0x328>
   49de8:	mov	x1, x28
   49dec:	mov	x0, x22
   49df0:	mov	w3, wzr
   49df4:	mov	w4, w21
   49df8:	str	x11, [sp, #32]
   49dfc:	mov	x28, x19
   49e00:	mov	w20, w21
   49e04:	bl	ca10 <mpfr_round_near_x@plt>
   49e08:	cbz	w0, 49edc <mpfr_jn@@Base+0xa68>
   49e0c:	mov	w27, w0
   49e10:	ldr	x0, [sp, #72]
   49e14:	mov	w2, #0x1                   	// #1
   49e18:	mov	w3, w20
   49e1c:	mov	w19, w20
   49e20:	mov	x1, x0
   49e24:	bl	cde0 <mpfr_div_2ui@plt>
   49e28:	mov	w24, w0
   49e2c:	cbnz	w20, 49e44 <mpfr_jn@@Base+0x9d0>
   49e30:	ldr	x8, [sp, #72]
   49e34:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   49e38:	ldr	x8, [x8, #16]
   49e3c:	cmp	x8, x9
   49e40:	b.eq	49f20 <mpfr_jn@@Base+0xaac>  // b.none
   49e44:	cmp	w24, #0x0
   49e48:	csel	w24, w27, w24, eq  // eq = none
   49e4c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   49e50:	ldr	x1, [x0, #2800]
   49e54:	add	x0, x0, #0xaf0
   49e58:	blr	x1
   49e5c:	ldr	w8, [x26, x0]
   49e60:	orr	w25, w8, w25
   49e64:	mov	w8, #0x4                   	// #4
   49e68:	b	49ee0 <mpfr_jn@@Base+0xa6c>
   49e6c:	adrp	x1, 72000 <__gmpfr_l2b@@Base+0x2f0>
   49e70:	ldr	x1, [x1, #3928]
   49e74:	mov	x0, x22
   49e78:	mov	w3, wzr
   49e7c:	mov	w4, w21
   49e80:	mov	x20, x11
   49e84:	bl	ca10 <mpfr_round_near_x@plt>
   49e88:	cmp	w0, #0x0
   49e8c:	mov	w24, w0
   49e90:	cset	w8, ne  // ne = any
   49e94:	cbz	w0, 49f00 <mpfr_jn@@Base+0xa8c>
   49e98:	lsl	w8, w8, #2
   49e9c:	mov	x11, x20
   49ea0:	cbnz	w8, 496a0 <mpfr_jn@@Base+0x22c>
   49ea4:	b	49560 <mpfr_jn@@Base+0xec>
   49ea8:	mov	w1, #0x1                   	// #1
   49eac:	mov	x0, x22
   49eb0:	mov	x2, xzr
   49eb4:	mov	w3, w21
   49eb8:	bl	cac0 <mpfr_set_ui_2exp@plt>
   49ebc:	b	49d1c <mpfr_jn@@Base+0x8a8>
   49ec0:	cmp	x12, #0x1
   49ec4:	b.lt	49f10 <mpfr_jn@@Base+0xa9c>  // b.tstop
   49ec8:	ldp	x1, x0, [sp, #64]
   49ecc:	mov	w2, w21
   49ed0:	ldr	w3, [x1, #8]
   49ed4:	bl	cb70 <mpfr_set4@plt>
   49ed8:	b	49d1c <mpfr_jn@@Base+0x8a8>
   49edc:	mov	w8, wzr
   49ee0:	mov	x19, x28
   49ee4:	ldr	x11, [sp, #32]
   49ee8:	ldp	x28, x22, [sp, #64]
   49eec:	mov	x27, #0xfffffffffffffeff    	// #-257
   49ef0:	mov	w21, w20
   49ef4:	movk	x27, #0x7fff, lsl #48
   49ef8:	cbnz	w8, 49584 <mpfr_jn@@Base+0x110>
   49efc:	b	49580 <mpfr_jn@@Base+0x10c>
   49f00:	mov	x11, x20
   49f04:	mov	w8, wzr
   49f08:	cbnz	w8, 496a0 <mpfr_jn@@Base+0x22c>
   49f0c:	b	49560 <mpfr_jn@@Base+0xec>
   49f10:	ldp	x1, x0, [sp, #64]
   49f14:	mov	w2, w21
   49f18:	bl	c1d0 <mpfr_neg@plt>
   49f1c:	b	49d1c <mpfr_jn@@Base+0x8a8>
   49f20:	cbz	w24, 49f54 <mpfr_jn@@Base+0xae0>
   49f24:	ldr	x8, [sp, #64]
   49f28:	cmp	w27, #0x0
   49f2c:	cset	w9, gt
   49f30:	csinv	w9, w9, wzr, ge  // ge = tcont
   49f34:	ldr	w8, [x8, #8]
   49f38:	cmp	w9, w8
   49f3c:	b.eq	49e44 <mpfr_jn@@Base+0x9d0>  // b.none
   49f40:	ldr	x0, [sp, #72]
   49f44:	bl	cb40 <mpfr_nexttoinf@plt>
   49f48:	neg	w24, w24
   49f4c:	b	49e4c <mpfr_jn@@Base+0x9d8>
   49f50:	bl	cdd0 <mpfr_abort_prec_max@plt>
   49f54:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   49f58:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   49f5c:	add	x0, x0, #0xc05
   49f60:	add	x2, x2, #0xc0a
   49f64:	mov	w1, #0xa6                  	// #166
   49f68:	bl	d030 <mpfr_assert_fail@plt>
   49f6c:	b	49f24 <mpfr_jn@@Base+0xab0>

0000000000049f70 <mpfr_j1@@Base>:
   49f70:	stp	x29, x30, [sp, #-16]!
   49f74:	mov	w3, w2
   49f78:	mov	x2, x1
   49f7c:	mov	w1, #0x1                   	// #1
   49f80:	mov	x29, sp
   49f84:	bl	d100 <mpfr_jn@plt>
   49f88:	ldp	x29, x30, [sp], #16
   49f8c:	ret
   49f90:	sub	sp, sp, #0x1c0
   49f94:	stp	x29, x30, [sp, #352]
   49f98:	add	x29, sp, #0x160
   49f9c:	stp	x26, x25, [sp, #384]
   49fa0:	mov	x26, x0
   49fa4:	sub	x0, x29, #0x48
   49fa8:	stp	x28, x27, [sp, #368]
   49fac:	stp	x24, x23, [sp, #400]
   49fb0:	stp	x22, x21, [sp, #416]
   49fb4:	stp	x20, x19, [sp, #432]
   49fb8:	mov	w20, w3
   49fbc:	mov	x21, x2
   49fc0:	mov	x27, x1
   49fc4:	bl	c030 <mpfr_init@plt>
   49fc8:	ldr	x19, [x26]
   49fcc:	cmp	x19, #0x1
   49fd0:	b.eq	4a6bc <mpfr_j1@@Base+0x74c>  // b.none
   49fd4:	b.le	4a6c4 <mpfr_j1@@Base+0x754>
   49fd8:	ldr	x8, [x26]
   49fdc:	mov	w9, #0x40                  	// #64
   49fe0:	sub	x8, x8, #0x1
   49fe4:	clz	x8, x8
   49fe8:	sub	x8, x9, x8
   49fec:	add	x8, x19, x8
   49ff0:	cmp	w20, #0x0
   49ff4:	lsl	x9, x27, #1
   49ff8:	mov	w10, #0x1                   	// #1
   49ffc:	add	x24, x8, #0x4
   4a000:	cset	w8, eq  // eq = none
   4a004:	mov	w22, #0x1                   	// #1
   4a008:	mov	w11, #0x40                  	// #64
   4a00c:	mov	x28, #0xffffffffffffffff    	// #-1
   4a010:	mov	w19, #0x2                   	// #2
   4a014:	str	x8, [sp, #16]
   4a018:	sub	x8, x9, #0x1
   4a01c:	bfi	x10, x27, #1, #63
   4a020:	str	w20, [sp, #12]
   4a024:	stp	x8, x10, [sp, #24]
   4a028:	stp	x27, x26, [sp, #40]
   4a02c:	sub	x0, x29, #0x48
   4a030:	mov	x1, x24
   4a034:	str	x11, [sp]
   4a038:	bl	c330 <mpfr_set_prec@plt>
   4a03c:	sub	x0, x29, #0x28
   4a040:	mov	x1, x24
   4a044:	bl	cf60 <mpfr_init2@plt>
   4a048:	sub	x0, x29, #0x68
   4a04c:	mov	x1, x24
   4a050:	bl	cf60 <mpfr_init2@plt>
   4a054:	sub	x0, x29, #0x88
   4a058:	mov	x1, x24
   4a05c:	bl	cf60 <mpfr_init2@plt>
   4a060:	sub	x0, x29, #0xa8
   4a064:	mov	x1, x24
   4a068:	bl	cf60 <mpfr_init2@plt>
   4a06c:	add	x0, sp, #0x98
   4a070:	mov	x1, x24
   4a074:	bl	cf60 <mpfr_init2@plt>
   4a078:	add	x0, sp, #0x78
   4a07c:	mov	w1, #0x1f                  	// #31
   4a080:	bl	cf60 <mpfr_init2@plt>
   4a084:	add	x0, sp, #0x58
   4a088:	mov	w1, #0x1f                  	// #31
   4a08c:	bl	cf60 <mpfr_init2@plt>
   4a090:	add	x0, sp, #0x38
   4a094:	mov	w1, #0x1f                  	// #31
   4a098:	bl	cf60 <mpfr_init2@plt>
   4a09c:	sub	x0, x29, #0x28
   4a0a0:	sub	x1, x29, #0x48
   4a0a4:	mov	x2, x21
   4a0a8:	mov	w3, wzr
   4a0ac:	bl	d140 <mpfr_sin_cos@plt>
   4a0b0:	ldr	w8, [x21, #8]
   4a0b4:	tbz	w8, #31, 4a0c8 <mpfr_j1@@Base+0x158>
   4a0b8:	sub	x0, x29, #0x28
   4a0bc:	sub	x1, x29, #0x28
   4a0c0:	mov	w2, wzr
   4a0c4:	bl	c1d0 <mpfr_neg@plt>
   4a0c8:	sub	x0, x29, #0xa8
   4a0cc:	sub	x1, x29, #0x28
   4a0d0:	sub	x2, x29, #0x48
   4a0d4:	mov	w3, wzr
   4a0d8:	bl	c640 <mpfr_add@plt>
   4a0dc:	sub	x0, x29, #0x48
   4a0e0:	sub	x1, x29, #0x28
   4a0e4:	sub	x2, x29, #0x48
   4a0e8:	mov	w3, wzr
   4a0ec:	bl	bfd0 <mpfr_sub@plt>
   4a0f0:	sub	x0, x29, #0x28
   4a0f4:	sub	x1, x29, #0xa8
   4a0f8:	bl	c970 <mpfr_swap@plt>
   4a0fc:	ldr	w8, [x21, #8]
   4a100:	add	x0, sp, #0x98
   4a104:	mov	x2, x21
   4a108:	mov	w3, wzr
   4a10c:	cmp	w8, #0x1
   4a110:	cneg	x1, x28, ge  // ge = tcont
   4a114:	bl	cd90 <mpfr_si_div@plt>
   4a118:	add	x0, sp, #0x98
   4a11c:	add	x1, sp, #0x98
   4a120:	mov	w2, #0x3                   	// #3
   4a124:	mov	w3, wzr
   4a128:	bl	cde0 <mpfr_div_2ui@plt>
   4a12c:	sub	x0, x29, #0x68
   4a130:	mov	w1, #0x1                   	// #1
   4a134:	mov	x2, xzr
   4a138:	mov	w3, wzr
   4a13c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   4a140:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   4a144:	sub	x0, x29, #0xa8
   4a148:	mov	w1, #0x1                   	// #1
   4a14c:	mov	x2, xzr
   4a150:	mov	w3, wzr
   4a154:	stur	w22, [x29, #-128]
   4a158:	stur	x23, [x29, #-120]
   4a15c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   4a160:	ldp	x28, x26, [sp, #24]
   4a164:	mov	w20, wzr
   4a168:	mov	w25, wzr
   4a16c:	str	w22, [sp, #128]
   4a170:	str	w22, [sp, #96]
   4a174:	mov	w27, #0x6                   	// #6
   4a178:	mov	w22, #0x2                   	// #2
   4a17c:	str	x23, [sp, #136]
   4a180:	str	x23, [sp, #104]
   4a184:	b	4a1a8 <mpfr_j1@@Base+0x238>
   4a188:	mov	w20, #0x2                   	// #2
   4a18c:	mov	w25, #0x1                   	// #1
   4a190:	add	x22, x22, #0x1
   4a194:	sub	x28, x28, #0x2
   4a198:	add	x27, x27, #0x6
   4a19c:	cmp	w20, #0x4
   4a1a0:	add	x26, x26, #0x2
   4a1a4:	b.ge	4a388 <mpfr_j1@@Base+0x418>  // b.tcont
   4a1a8:	sub	x0, x29, #0xa8
   4a1ac:	sub	x1, x29, #0xa8
   4a1b0:	mov	x2, x26
   4a1b4:	mov	w3, wzr
   4a1b8:	sub	x23, x22, #0x1
   4a1bc:	bl	ce50 <mpfr_mul_si@plt>
   4a1c0:	sub	x0, x29, #0xa8
   4a1c4:	sub	x1, x29, #0xa8
   4a1c8:	mov	x2, x28
   4a1cc:	mov	w3, wzr
   4a1d0:	bl	ce50 <mpfr_mul_si@plt>
   4a1d4:	sub	x0, x29, #0xa8
   4a1d8:	sub	x1, x29, #0xa8
   4a1dc:	mov	x2, x23
   4a1e0:	mov	w3, wzr
   4a1e4:	bl	d160 <mpfr_div_ui@plt>
   4a1e8:	sub	x0, x29, #0xa8
   4a1ec:	sub	x1, x29, #0xa8
   4a1f0:	add	x2, sp, #0x98
   4a1f4:	mov	w3, wzr
   4a1f8:	bl	c1b0 <mpfr_mul@plt>
   4a1fc:	ldur	w8, [x29, #-160]
   4a200:	add	x0, sp, #0x78
   4a204:	sub	x1, x29, #0xa8
   4a208:	mov	x2, x27
   4a20c:	cmp	w8, #0x0
   4a210:	cinc	w3, w19, le
   4a214:	bl	bea0 <mpfr_mul_ui@plt>
   4a218:	add	x0, sp, #0x78
   4a21c:	add	x1, sp, #0x78
   4a220:	mov	w3, #0x1                   	// #1
   4a224:	mov	w2, wzr
   4a228:	bl	cb70 <mpfr_set4@plt>
   4a22c:	add	x0, sp, #0x38
   4a230:	sub	x1, x29, #0xa8
   4a234:	mov	w2, #0x2                   	// #2
   4a238:	mov	w3, #0x1                   	// #1
   4a23c:	bl	cb70 <mpfr_set4@plt>
   4a240:	add	x0, sp, #0x38
   4a244:	add	x1, sp, #0x38
   4a248:	mov	w3, #0x2                   	// #2
   4a24c:	mov	x2, x24
   4a250:	bl	c780 <mpfr_mul_2ui@plt>
   4a254:	add	x0, sp, #0x38
   4a258:	add	x1, sp, #0x38
   4a25c:	add	x2, sp, #0x78
   4a260:	mov	w3, #0x2                   	// #2
   4a264:	bl	c640 <mpfr_add@plt>
   4a268:	cmp	w20, #0x2
   4a26c:	b.lt	4a2a8 <mpfr_j1@@Base+0x338>  // b.tstop
   4a270:	add	x0, sp, #0x58
   4a274:	add	x1, sp, #0x58
   4a278:	mov	w3, #0x2                   	// #2
   4a27c:	mov	x2, x24
   4a280:	bl	cde0 <mpfr_div_2ui@plt>
   4a284:	ldur	w8, [x29, #-160]
   4a288:	add	x0, sp, #0x58
   4a28c:	add	x1, sp, #0x58
   4a290:	sub	x2, x29, #0xa8
   4a294:	mov	w3, #0x2                   	// #2
   4a298:	cmp	w8, #0x1
   4a29c:	b.lt	4a2e4 <mpfr_j1@@Base+0x374>  // b.tstop
   4a2a0:	bl	c640 <mpfr_add@plt>
   4a2a4:	b	4a2e8 <mpfr_j1@@Base+0x378>
   4a2a8:	tbnz	w23, #0, 4a2c8 <mpfr_j1@@Base+0x358>
   4a2ac:	sub	x0, x29, #0x68
   4a2b0:	sub	x1, x29, #0x68
   4a2b4:	sub	x2, x29, #0xa8
   4a2b8:	mov	w3, wzr
   4a2bc:	tbnz	w23, #1, 4a304 <mpfr_j1@@Base+0x394>
   4a2c0:	bl	c640 <mpfr_add@plt>
   4a2c4:	b	4a308 <mpfr_j1@@Base+0x398>
   4a2c8:	sub	x0, x29, #0x88
   4a2cc:	sub	x1, x29, #0x88
   4a2d0:	sub	x2, x29, #0xa8
   4a2d4:	mov	w3, wzr
   4a2d8:	tbnz	w23, #1, 4a314 <mpfr_j1@@Base+0x3a4>
   4a2dc:	bl	c640 <mpfr_add@plt>
   4a2e0:	b	4a318 <mpfr_j1@@Base+0x3a8>
   4a2e4:	bl	bfd0 <mpfr_sub@plt>
   4a2e8:	add	x0, sp, #0x58
   4a2ec:	add	x1, sp, #0x58
   4a2f0:	mov	w3, #0x2                   	// #2
   4a2f4:	mov	x2, x24
   4a2f8:	bl	c780 <mpfr_mul_2ui@plt>
   4a2fc:	add	w20, w20, #0x1
   4a300:	b	4a328 <mpfr_j1@@Base+0x3b8>
   4a304:	bl	bfd0 <mpfr_sub@plt>
   4a308:	ldr	x8, [sp, #72]
   4a30c:	ldur	x9, [x29, #-88]
   4a310:	b	4a320 <mpfr_j1@@Base+0x3b0>
   4a314:	bl	bfd0 <mpfr_sub@plt>
   4a318:	ldr	x8, [sp, #72]
   4a31c:	ldur	x9, [x29, #-120]
   4a320:	cmp	x8, x9
   4a324:	csinc	w20, wzr, w20, gt
   4a328:	add	x0, sp, #0x58
   4a32c:	add	x1, sp, #0x58
   4a330:	add	x2, sp, #0x78
   4a334:	mov	w3, #0x2                   	// #2
   4a338:	bl	c640 <mpfr_add@plt>
   4a33c:	cmp	w20, #0x1
   4a340:	b.gt	4a190 <mpfr_j1@@Base+0x220>
   4a344:	ldr	w8, [x21, #8]
   4a348:	cmp	w8, #0x1
   4a34c:	b.lt	4a364 <mpfr_j1@@Base+0x3f4>  // b.tstop
   4a350:	lsr	x1, x22, #1
   4a354:	mov	x0, x21
   4a358:	mov	x2, xzr
   4a35c:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4a360:	tbnz	w0, #31, 4a188 <mpfr_j1@@Base+0x218>
   4a364:	ldr	w8, [x21, #8]
   4a368:	tbz	w8, #31, 4a190 <mpfr_j1@@Base+0x220>
   4a36c:	neg	x1, x22, lsr #1
   4a370:	mov	x0, x21
   4a374:	mov	x2, xzr
   4a378:	bl	c890 <mpfr_cmp_si_2exp@plt>
   4a37c:	cmp	w0, #0x1
   4a380:	b.ge	4a188 <mpfr_j1@@Base+0x218>  // b.tcont
   4a384:	b	4a190 <mpfr_j1@@Base+0x220>
   4a388:	ldr	x27, [sp, #40]
   4a38c:	tbnz	w27, #0, 4a3e0 <mpfr_j1@@Base+0x470>
   4a390:	sub	x0, x29, #0x48
   4a394:	sub	x1, x29, #0x48
   4a398:	sub	x2, x29, #0x88
   4a39c:	mov	w3, wzr
   4a3a0:	bl	c1b0 <mpfr_mul@plt>
   4a3a4:	sub	x0, x29, #0x28
   4a3a8:	sub	x1, x29, #0x28
   4a3ac:	sub	x2, x29, #0x68
   4a3b0:	mov	w3, wzr
   4a3b4:	bl	c1b0 <mpfr_mul@plt>
   4a3b8:	ldur	x8, [x29, #-56]
   4a3bc:	ldur	x9, [x29, #-24]
   4a3c0:	sub	x0, x29, #0x28
   4a3c4:	sub	x1, x29, #0x28
   4a3c8:	sub	x2, x29, #0x48
   4a3cc:	cmp	x9, x8
   4a3d0:	mov	w3, wzr
   4a3d4:	csel	x20, x9, x8, gt
   4a3d8:	bl	bfd0 <mpfr_sub@plt>
   4a3dc:	b	4a42c <mpfr_j1@@Base+0x4bc>
   4a3e0:	sub	x0, x29, #0x48
   4a3e4:	sub	x1, x29, #0x48
   4a3e8:	sub	x2, x29, #0x68
   4a3ec:	mov	w3, wzr
   4a3f0:	bl	c1b0 <mpfr_mul@plt>
   4a3f4:	sub	x0, x29, #0x28
   4a3f8:	sub	x1, x29, #0x28
   4a3fc:	sub	x2, x29, #0x88
   4a400:	mov	w3, wzr
   4a404:	bl	c1b0 <mpfr_mul@plt>
   4a408:	ldur	x8, [x29, #-56]
   4a40c:	ldur	x9, [x29, #-24]
   4a410:	sub	x0, x29, #0x28
   4a414:	sub	x1, x29, #0x28
   4a418:	sub	x2, x29, #0x48
   4a41c:	cmp	x9, x8
   4a420:	mov	w3, wzr
   4a424:	csel	x20, x9, x8, gt
   4a428:	bl	c640 <mpfr_add@plt>
   4a42c:	ldr	x26, [sp, #48]
   4a430:	mov	x28, #0xffffffffffffffff    	// #-1
   4a434:	tbz	w27, #1, 4a448 <mpfr_j1@@Base+0x4d8>
   4a438:	sub	x0, x29, #0x28
   4a43c:	sub	x1, x29, #0x28
   4a440:	mov	w2, wzr
   4a444:	bl	c1d0 <mpfr_neg@plt>
   4a448:	ldur	x8, [x29, #-24]
   4a44c:	ldur	x9, [x29, #-88]
   4a450:	ldur	x10, [x29, #-120]
   4a454:	ldr	x11, [sp, #104]
   4a458:	cmp	x8, x20
   4a45c:	csel	x8, x8, x20, gt
   4a460:	cmp	x9, x10
   4a464:	csel	x9, x10, x9, lt  // lt = tstop
   4a468:	cmp	x11, x8
   4a46c:	csel	x8, x8, x11, lt  // lt = tstop
   4a470:	cmp	x8, x9
   4a474:	csel	x20, x9, x8, lt  // lt = tstop
   4a478:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4a47c:	ldr	x1, [x0, #2848]
   4a480:	add	x0, x0, #0xb20
   4a484:	blr	x1
   4a488:	mrs	x8, tpidr_el0
   4a48c:	add	x1, x8, x0
   4a490:	sub	x0, x29, #0x48
   4a494:	mov	w2, wzr
   4a498:	bl	c840 <mpfr_cache@plt>
   4a49c:	sub	x0, x29, #0x48
   4a4a0:	sub	x1, x29, #0x48
   4a4a4:	mov	x2, x21
   4a4a8:	mov	w3, wzr
   4a4ac:	bl	c1b0 <mpfr_mul@plt>
   4a4b0:	ldr	w8, [x21, #8]
   4a4b4:	sub	x0, x29, #0x48
   4a4b8:	sub	x2, x29, #0x48
   4a4bc:	mov	w3, wzr
   4a4c0:	cmp	w8, #0x1
   4a4c4:	cneg	x1, x28, ge  // ge = tcont
   4a4c8:	bl	cd90 <mpfr_si_div@plt>
   4a4cc:	sub	x0, x29, #0x48
   4a4d0:	sub	x1, x29, #0x48
   4a4d4:	mov	w2, wzr
   4a4d8:	bl	ce20 <mpfr_sqrt@plt>
   4a4dc:	ldur	w8, [x29, #-64]
   4a4e0:	ldur	w9, [x29, #-32]
   4a4e4:	add	x0, sp, #0x78
   4a4e8:	sub	x1, x29, #0x48
   4a4ec:	sub	x2, x29, #0x28
   4a4f0:	cmp	w8, w9
   4a4f4:	cinc	w3, w19, ne  // ne = any
   4a4f8:	bl	c1b0 <mpfr_mul@plt>
   4a4fc:	add	x0, sp, #0x78
   4a500:	add	x1, sp, #0x78
   4a504:	mov	w2, #0x2                   	// #2
   4a508:	mov	w3, #0x1                   	// #1
   4a50c:	bl	cb70 <mpfr_set4@plt>
   4a510:	add	x0, sp, #0x78
   4a514:	add	x1, sp, #0x78
   4a518:	mov	w2, #0x3                   	// #3
   4a51c:	mov	w3, #0x2                   	// #2
   4a520:	bl	bea0 <mpfr_mul_ui@plt>
   4a524:	ldur	x22, [x29, #-56]
   4a528:	sub	x0, x29, #0x48
   4a52c:	sub	x1, x29, #0x48
   4a530:	sub	x2, x29, #0x28
   4a534:	mov	w3, wzr
   4a538:	bl	c1b0 <mpfr_mul@plt>
   4a53c:	ldr	x8, [sp, #136]
   4a540:	ldur	x9, [x29, #-56]
   4a544:	sub	x0, x29, #0x28
   4a548:	cmp	x8, x9
   4a54c:	csel	x23, x8, x9, gt
   4a550:	bl	c4f0 <mpfr_clear@plt>
   4a554:	sub	x0, x29, #0x68
   4a558:	bl	c4f0 <mpfr_clear@plt>
   4a55c:	sub	x0, x29, #0x88
   4a560:	bl	c4f0 <mpfr_clear@plt>
   4a564:	sub	x0, x29, #0xa8
   4a568:	bl	c4f0 <mpfr_clear@plt>
   4a56c:	add	x0, sp, #0x98
   4a570:	bl	c4f0 <mpfr_clear@plt>
   4a574:	add	x0, sp, #0x78
   4a578:	bl	c4f0 <mpfr_clear@plt>
   4a57c:	add	x0, sp, #0x58
   4a580:	bl	c4f0 <mpfr_clear@plt>
   4a584:	add	x0, sp, #0x38
   4a588:	bl	c4f0 <mpfr_clear@plt>
   4a58c:	ldur	x8, [x29, #-56]
   4a590:	mov	x9, #0xfffffffffffffeff    	// #-257
   4a594:	movk	x9, #0x7fff, lsl #48
   4a598:	add	x9, x9, #0x105
   4a59c:	cmp	x8, x9
   4a5a0:	b.lt	4a5f8 <mpfr_j1@@Base+0x688>  // b.tstop
   4a5a4:	add	x9, x20, x22
   4a5a8:	add	x10, x23, #0x1
   4a5ac:	add	x9, x9, #0x3
   4a5b0:	cmp	x10, x9
   4a5b4:	ldur	x10, [x29, #-72]
   4a5b8:	add	x11, x23, #0x2
   4a5bc:	csinc	x9, x11, x9, ge  // ge = tcont
   4a5c0:	sub	x9, x24, x9
   4a5c4:	add	x2, x9, x8
   4a5c8:	sub	x8, x10, #0x1
   4a5cc:	add	x9, x10, #0x3e
   4a5d0:	cmp	x8, #0x0
   4a5d4:	csel	x8, x9, x8, lt  // lt = tstop
   4a5d8:	asr	x8, x8, #6
   4a5dc:	ldr	x11, [x26]
   4a5e0:	add	x1, x8, #0x1
   4a5e4:	ldr	x8, [sp, #16]
   4a5e8:	ldur	x0, [x29, #-48]
   4a5ec:	add	x3, x11, x8
   4a5f0:	bl	c830 <mpfr_round_p@plt>
   4a5f4:	cbnz	w0, 4a648 <mpfr_j1@@Base+0x6d8>
   4a5f8:	cbnz	w25, 4a6e0 <mpfr_j1@@Base+0x770>
   4a5fc:	ldr	x20, [sp]
   4a600:	mov	x8, #0xfffffffffffffeff    	// #-257
   4a604:	movk	x8, #0x7fff, lsl #48
   4a608:	sub	x8, x8, x24
   4a60c:	cmp	x20, x8
   4a610:	mov	w22, #0x1                   	// #1
   4a614:	b.gt	4a62c <mpfr_j1@@Base+0x6bc>
   4a618:	add	x24, x24, x20
   4a61c:	cmp	x24, #0x0
   4a620:	cinc	x8, x24, lt  // lt = tstop
   4a624:	asr	x11, x8, #1
   4a628:	b	4a02c <mpfr_j1@@Base+0xbc>
   4a62c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4a630:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   4a634:	mov	w1, #0x106                 	// #262
   4a638:	add	x0, x0, #0xd5e
   4a63c:	add	x2, x2, #0xa3e
   4a640:	bl	d030 <mpfr_assert_fail@plt>
   4a644:	b	4a618 <mpfr_j1@@Base+0x6a8>
   4a648:	tbz	w27, #0, 4a670 <mpfr_j1@@Base+0x700>
   4a64c:	ldr	w8, [x21, #8]
   4a650:	cmp	w8, #0x1
   4a654:	b.ge	4a670 <mpfr_j1@@Base+0x700>  // b.tcont
   4a658:	ldr	w19, [sp, #12]
   4a65c:	sub	x1, x29, #0x48
   4a660:	mov	x0, x26
   4a664:	mov	w2, w19
   4a668:	bl	c1d0 <mpfr_neg@plt>
   4a66c:	b	4a688 <mpfr_j1@@Base+0x718>
   4a670:	ldr	w19, [sp, #12]
   4a674:	ldur	w3, [x29, #-64]
   4a678:	sub	x1, x29, #0x48
   4a67c:	mov	x0, x26
   4a680:	mov	w2, w19
   4a684:	bl	cb70 <mpfr_set4@plt>
   4a688:	mov	w20, w0
   4a68c:	sub	x0, x29, #0x48
   4a690:	bl	c4f0 <mpfr_clear@plt>
   4a694:	cmp	w19, #0x5
   4a698:	csinc	w0, w20, wzr, ne  // ne = any
   4a69c:	ldp	x20, x19, [sp, #432]
   4a6a0:	ldp	x22, x21, [sp, #416]
   4a6a4:	ldp	x24, x23, [sp, #400]
   4a6a8:	ldp	x26, x25, [sp, #384]
   4a6ac:	ldp	x28, x27, [sp, #368]
   4a6b0:	ldp	x29, x30, [sp, #352]
   4a6b4:	add	sp, sp, #0x1c0
   4a6b8:	ret
   4a6bc:	mov	x8, xzr
   4a6c0:	b	49fec <mpfr_j1@@Base+0x7c>
   4a6c4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4a6c8:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4a6cc:	add	x0, x0, #0xd5e
   4a6d0:	add	x2, x2, #0xc37
   4a6d4:	mov	w1, #0x36                  	// #54
   4a6d8:	bl	d030 <mpfr_assert_fail@plt>
   4a6dc:	b	49fd8 <mpfr_j1@@Base+0x68>
   4a6e0:	sub	x0, x29, #0x48
   4a6e4:	bl	c4f0 <mpfr_clear@plt>
   4a6e8:	mov	w0, wzr
   4a6ec:	b	4a69c <mpfr_j1@@Base+0x72c>
   4a6f0:	sub	sp, sp, #0x60
   4a6f4:	stp	x20, x19, [sp, #80]
   4a6f8:	mov	x20, x1
   4a6fc:	mov	x19, x0
   4a700:	add	x0, sp, #0x20
   4a704:	mov	w1, #0x20                  	// #32
   4a708:	stp	x29, x30, [sp, #64]
   4a70c:	add	x29, sp, #0x40
   4a710:	bl	cf60 <mpfr_init2@plt>
   4a714:	mov	x0, sp
   4a718:	mov	w1, #0x20                  	// #32
   4a71c:	bl	cf60 <mpfr_init2@plt>
   4a720:	add	x0, sp, #0x20
   4a724:	cbz	x19, 4a798 <mpfr_j1@@Base+0x828>
   4a728:	mov	x1, x20
   4a72c:	mov	x2, x19
   4a730:	mov	w3, wzr
   4a734:	bl	d160 <mpfr_div_ui@plt>
   4a738:	add	x0, sp, #0x20
   4a73c:	add	x1, sp, #0x20
   4a740:	mov	w2, wzr
   4a744:	bl	c8c0 <mpfr_sqr@plt>
   4a748:	add	x0, sp, #0x20
   4a74c:	add	x1, sp, #0x20
   4a750:	mov	w2, #0x1                   	// #1
   4a754:	mov	w3, wzr
   4a758:	bl	c710 <mpfr_add_ui@plt>
   4a75c:	add	x0, sp, #0x20
   4a760:	add	x1, sp, #0x20
   4a764:	mov	w2, wzr
   4a768:	bl	ce20 <mpfr_sqrt@plt>
   4a76c:	add	x0, sp, #0x20
   4a770:	add	x1, sp, #0x20
   4a774:	mov	w2, #0x1                   	// #1
   4a778:	mov	w3, wzr
   4a77c:	bl	ca00 <mpfr_sub_ui@plt>
   4a780:	add	x0, sp, #0x20
   4a784:	add	x1, sp, #0x20
   4a788:	mov	x2, x19
   4a78c:	mov	w3, wzr
   4a790:	bl	bea0 <mpfr_mul_ui@plt>
   4a794:	b	4a7a8 <mpfr_j1@@Base+0x838>
   4a798:	mov	w3, #0x1                   	// #1
   4a79c:	mov	x1, x20
   4a7a0:	mov	w2, wzr
   4a7a4:	bl	cb70 <mpfr_set4@plt>
   4a7a8:	adrp	x1, 60000 <mpfr_bases@@Base+0x408>
   4a7ac:	add	x1, x1, #0xa37
   4a7b0:	mov	x0, sp
   4a7b4:	bl	c800 <mpfr_set_str_binary@plt>
   4a7b8:	add	x0, sp, #0x20
   4a7bc:	add	x1, sp, #0x20
   4a7c0:	mov	x2, sp
   4a7c4:	mov	w3, wzr
   4a7c8:	bl	c1b0 <mpfr_mul@plt>
   4a7cc:	add	x0, sp, #0x20
   4a7d0:	mov	w1, wzr
   4a7d4:	bl	c2b0 <mpfr_fits_ulong_p@plt>
   4a7d8:	cbz	w0, 4a7f0 <mpfr_j1@@Base+0x880>
   4a7dc:	add	x0, sp, #0x20
   4a7e0:	mov	w1, wzr
   4a7e4:	bl	c100 <mpfr_get_ui@plt>
   4a7e8:	mov	x19, x0
   4a7ec:	b	4a7f4 <mpfr_j1@@Base+0x884>
   4a7f0:	mov	x19, #0xffffffffffffffff    	// #-1
   4a7f4:	add	x0, sp, #0x20
   4a7f8:	bl	c4f0 <mpfr_clear@plt>
   4a7fc:	mov	x0, sp
   4a800:	bl	c4f0 <mpfr_clear@plt>
   4a804:	mov	x0, x19
   4a808:	ldp	x20, x19, [sp, #80]
   4a80c:	ldp	x29, x30, [sp, #64]
   4a810:	add	sp, sp, #0x60
   4a814:	ret

000000000004a818 <mpfr_y0@@Base>:
   4a818:	stp	x29, x30, [sp, #-16]!
   4a81c:	mov	w3, w2
   4a820:	mov	x2, x1
   4a824:	mov	x1, xzr
   4a828:	mov	x29, sp
   4a82c:	bl	ca90 <mpfr_yn@plt>
   4a830:	ldp	x29, x30, [sp], #16
   4a834:	ret

000000000004a838 <mpfr_yn@@Base>:
   4a838:	sub	sp, sp, #0x120
   4a83c:	stp	x29, x30, [sp, #192]
   4a840:	stp	x28, x27, [sp, #208]
   4a844:	stp	x26, x25, [sp, #224]
   4a848:	stp	x24, x23, [sp, #240]
   4a84c:	stp	x22, x21, [sp, #256]
   4a850:	stp	x20, x19, [sp, #272]
   4a854:	ldr	x9, [x2, #16]
   4a858:	mov	x10, #0x2                   	// #2
   4a85c:	movk	x10, #0x8000, lsl #48
   4a860:	cmp	x1, #0x0
   4a864:	add	x8, x10, #0x2
   4a868:	mov	x22, x2
   4a86c:	mov	x21, x1
   4a870:	cneg	x23, x1, mi  // mi = first
   4a874:	cmp	x9, x8
   4a878:	mov	x19, x0
   4a87c:	add	x29, sp, #0xc0
   4a880:	b.lt	4b19c <mpfr_yn@@Base+0x964>  // b.tstop
   4a884:	ldr	w8, [x22, #8]
   4a888:	tbnz	w8, #31, 4b234 <mpfr_yn@@Base+0x9fc>
   4a88c:	mov	w20, w3
   4a890:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4a894:	ldr	x1, [x0, #2800]
   4a898:	add	x0, x0, #0xaf0
   4a89c:	blr	x1
   4a8a0:	mrs	x28, tpidr_el0
   4a8a4:	ldr	w27, [x28, x0]
   4a8a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4a8ac:	ldr	x1, [x0, #2736]
   4a8b0:	add	x0, x0, #0xab0
   4a8b4:	blr	x1
   4a8b8:	ldr	x25, [x28, x0]
   4a8bc:	mov	x8, x0
   4a8c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4a8c4:	ldr	x1, [x0, #2768]
   4a8c8:	add	x0, x0, #0xad0
   4a8cc:	blr	x1
   4a8d0:	ldr	x26, [x28, x0]
   4a8d4:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4a8d8:	str	x10, [x28, x8]
   4a8dc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   4a8e0:	str	x8, [x28, x0]
   4a8e4:	cbnz	x21, 4ab6c <mpfr_yn@@Base+0x334>
   4a8e8:	ldr	x8, [x19]
   4a8ec:	cmp	x8, #0x0
   4a8f0:	cinc	x10, x8, lt  // lt = tstop
   4a8f4:	neg	x10, x10, asr #1
   4a8f8:	cmp	x9, x10
   4a8fc:	b.ge	4ab6c <mpfr_yn@@Base+0x334>  // b.tcont
   4a900:	add	x24, x8, #0xa
   4a904:	sub	x0, x29, #0x28
   4a908:	mov	x1, x24
   4a90c:	bl	cf60 <mpfr_init2@plt>
   4a910:	sub	x0, x29, #0x48
   4a914:	mov	x1, x24
   4a918:	bl	cf60 <mpfr_init2@plt>
   4a91c:	add	x0, sp, #0x58
   4a920:	mov	x1, x24
   4a924:	bl	cf60 <mpfr_init2@plt>
   4a928:	add	x0, sp, #0x38
   4a92c:	mov	x1, x24
   4a930:	bl	cf60 <mpfr_init2@plt>
   4a934:	add	x0, sp, #0x38
   4a938:	mov	w2, #0x3                   	// #3
   4a93c:	mov	x1, x22
   4a940:	bl	c520 <mpfr_log@plt>
   4a944:	ldr	w3, [sp, #64]
   4a948:	sub	x0, x29, #0x48
   4a94c:	add	x1, sp, #0x38
   4a950:	mov	w2, #0x2                   	// #2
   4a954:	bl	cb70 <mpfr_set4@plt>
   4a958:	sub	x0, x29, #0x48
   4a95c:	bl	c5c0 <mpfr_nextabove@plt>
   4a960:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4a964:	ldr	x1, [x0, #2832]
   4a968:	add	x0, x0, #0xb10
   4a96c:	blr	x1
   4a970:	add	x1, x28, x0
   4a974:	add	x0, sp, #0x58
   4a978:	mov	w2, #0x3                   	// #3
   4a97c:	bl	c840 <mpfr_cache@plt>
   4a980:	sub	x0, x29, #0x28
   4a984:	add	x1, sp, #0x38
   4a988:	add	x2, sp, #0x58
   4a98c:	mov	w3, #0x3                   	// #3
   4a990:	bl	c640 <mpfr_add@plt>
   4a994:	add	x0, sp, #0x58
   4a998:	bl	c5c0 <mpfr_nextabove@plt>
   4a99c:	sub	x0, x29, #0x48
   4a9a0:	sub	x1, x29, #0x48
   4a9a4:	add	x2, sp, #0x58
   4a9a8:	mov	w3, #0x2                   	// #2
   4a9ac:	bl	c640 <mpfr_add@plt>
   4a9b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4a9b4:	ldr	x1, [x0, #2784]
   4a9b8:	add	x0, x0, #0xae0
   4a9bc:	blr	x1
   4a9c0:	add	x1, x28, x0
   4a9c4:	add	x0, sp, #0x58
   4a9c8:	mov	w2, #0x2                   	// #2
   4a9cc:	bl	c840 <mpfr_cache@plt>
   4a9d0:	sub	x0, x29, #0x28
   4a9d4:	sub	x1, x29, #0x28
   4a9d8:	add	x2, sp, #0x58
   4a9dc:	mov	w3, #0x3                   	// #3
   4a9e0:	bl	bfd0 <mpfr_sub@plt>
   4a9e4:	add	x0, sp, #0x58
   4a9e8:	bl	c230 <mpfr_nextbelow@plt>
   4a9ec:	sub	x0, x29, #0x48
   4a9f0:	sub	x1, x29, #0x48
   4a9f4:	add	x2, sp, #0x58
   4a9f8:	mov	w3, #0x2                   	// #2
   4a9fc:	bl	bfd0 <mpfr_sub@plt>
   4aa00:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4aa04:	ldr	x1, [x0, #2848]
   4aa08:	add	x0, x0, #0xb20
   4aa0c:	blr	x1
   4aa10:	add	x1, x28, x0
   4aa14:	add	x0, sp, #0x58
   4aa18:	mov	w2, #0x2                   	// #2
   4aa1c:	bl	c840 <mpfr_cache@plt>
   4aa20:	sub	x0, x29, #0x28
   4aa24:	sub	x1, x29, #0x28
   4aa28:	add	x2, sp, #0x58
   4aa2c:	mov	w3, #0x3                   	// #3
   4aa30:	bl	caf0 <mpfr_div@plt>
   4aa34:	add	x0, sp, #0x58
   4aa38:	bl	c230 <mpfr_nextbelow@plt>
   4aa3c:	sub	x0, x29, #0x48
   4aa40:	sub	x1, x29, #0x48
   4aa44:	add	x2, sp, #0x58
   4aa48:	mov	w3, #0x3                   	// #3
   4aa4c:	bl	caf0 <mpfr_div@plt>
   4aa50:	sub	x0, x29, #0x28
   4aa54:	sub	x1, x29, #0x28
   4aa58:	mov	w2, #0x1                   	// #1
   4aa5c:	mov	w3, #0x3                   	// #3
   4aa60:	bl	c780 <mpfr_mul_2ui@plt>
   4aa64:	sub	x0, x29, #0x48
   4aa68:	sub	x1, x29, #0x48
   4aa6c:	mov	w2, #0x1                   	// #1
   4aa70:	mov	w3, #0x2                   	// #2
   4aa74:	bl	c780 <mpfr_mul_2ui@plt>
   4aa78:	add	x0, sp, #0x58
   4aa7c:	mov	w3, #0x2                   	// #2
   4aa80:	mov	x1, x22
   4aa84:	mov	x2, x22
   4aa88:	bl	c1b0 <mpfr_mul@plt>
   4aa8c:	add	x0, sp, #0x58
   4aa90:	add	x1, sp, #0x58
   4aa94:	mov	w2, #0x3                   	// #3
   4aa98:	bl	c1d0 <mpfr_neg@plt>
   4aa9c:	add	x0, sp, #0x58
   4aaa0:	add	x1, sp, #0x58
   4aaa4:	mov	w2, #0x1                   	// #1
   4aaa8:	mov	w3, #0x3                   	// #3
   4aaac:	bl	cde0 <mpfr_div_2ui@plt>
   4aab0:	add	x0, sp, #0x58
   4aab4:	add	x1, sp, #0x58
   4aab8:	add	x2, sp, #0x38
   4aabc:	mov	w3, #0x2                   	// #2
   4aac0:	bl	c1b0 <mpfr_mul@plt>
   4aac4:	sub	x0, x29, #0x48
   4aac8:	sub	x1, x29, #0x48
   4aacc:	add	x2, sp, #0x58
   4aad0:	mov	w3, #0x2                   	// #2
   4aad4:	bl	c640 <mpfr_add@plt>
   4aad8:	ldr	x1, [x19]
   4aadc:	sub	x0, x29, #0x28
   4aae0:	mov	w2, w20
   4aae4:	bl	ce60 <mpfr_prec_round@plt>
   4aae8:	ldr	x1, [x19]
   4aaec:	mov	w24, w0
   4aaf0:	sub	x0, x29, #0x48
   4aaf4:	mov	w2, w20
   4aaf8:	bl	ce60 <mpfr_prec_round@plt>
   4aafc:	cmp	w24, w0
   4ab00:	b.ne	4ab4c <mpfr_yn@@Base+0x314>  // b.any
   4ab04:	sub	x0, x29, #0x28
   4ab08:	sub	x1, x29, #0x48
   4ab0c:	bl	cf40 <mpfr_equal_p@plt>
   4ab10:	cbz	w0, 4ab4c <mpfr_yn@@Base+0x314>
   4ab14:	ldur	w3, [x29, #-64]
   4ab18:	sub	x1, x29, #0x48
   4ab1c:	mov	x0, x19
   4ab20:	mov	w2, w20
   4ab24:	bl	cb70 <mpfr_set4@plt>
   4ab28:	sub	x0, x29, #0x28
   4ab2c:	bl	c4f0 <mpfr_clear@plt>
   4ab30:	sub	x0, x29, #0x48
   4ab34:	bl	c4f0 <mpfr_clear@plt>
   4ab38:	add	x0, sp, #0x58
   4ab3c:	bl	c4f0 <mpfr_clear@plt>
   4ab40:	add	x0, sp, #0x38
   4ab44:	bl	c4f0 <mpfr_clear@plt>
   4ab48:	b	4b120 <mpfr_yn@@Base+0x8e8>
   4ab4c:	sub	x0, x29, #0x28
   4ab50:	bl	c4f0 <mpfr_clear@plt>
   4ab54:	sub	x0, x29, #0x48
   4ab58:	bl	c4f0 <mpfr_clear@plt>
   4ab5c:	add	x0, sp, #0x58
   4ab60:	bl	c4f0 <mpfr_clear@plt>
   4ab64:	add	x0, sp, #0x38
   4ab68:	bl	c4f0 <mpfr_clear@plt>
   4ab6c:	cmp	x21, #0x1
   4ab70:	b.ne	4acc4 <mpfr_yn@@Base+0x48c>  // b.any
   4ab74:	ldr	x9, [x22, #16]
   4ab78:	ldr	x8, [x19]
   4ab7c:	add	x9, x9, #0x1
   4ab80:	neg	x10, x8
   4ab84:	cmp	x9, x10
   4ab88:	b.ge	4acc4 <mpfr_yn@@Base+0x48c>  // b.tcont
   4ab8c:	stp	x26, x25, [sp, #40]
   4ab90:	add	x25, x8, #0xa
   4ab94:	sub	x0, x29, #0x28
   4ab98:	mov	x1, x25
   4ab9c:	bl	cf60 <mpfr_init2@plt>
   4aba0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4aba4:	ldr	x1, [x0, #2848]
   4aba8:	add	x0, x0, #0xb20
   4abac:	blr	x1
   4abb0:	add	x1, x28, x0
   4abb4:	sub	x0, x29, #0x28
   4abb8:	mov	w2, #0x2                   	// #2
   4abbc:	bl	c840 <mpfr_cache@plt>
   4abc0:	sub	x0, x29, #0x28
   4abc4:	sub	x1, x29, #0x28
   4abc8:	mov	w3, #0x2                   	// #2
   4abcc:	mov	x2, x22
   4abd0:	bl	c1b0 <mpfr_mul@plt>
   4abd4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4abd8:	ldr	x1, [x0, #2800]
   4abdc:	add	x0, x0, #0xaf0
   4abe0:	blr	x1
   4abe4:	mov	x26, x0
   4abe8:	str	wzr, [x28, x0]
   4abec:	sub	x0, x29, #0x28
   4abf0:	sub	x2, x29, #0x28
   4abf4:	mov	w1, #0x2                   	// #2
   4abf8:	mov	w3, #0x1                   	// #1
   4abfc:	bl	c7b0 <mpfr_ui_div@plt>
   4ac00:	ldrb	w8, [x28, x26]
   4ac04:	tbnz	w8, #1, 4b2a4 <mpfr_yn@@Base+0xa6c>
   4ac08:	sub	x0, x29, #0x28
   4ac0c:	sub	x1, x29, #0x28
   4ac10:	mov	w2, wzr
   4ac14:	bl	c1d0 <mpfr_neg@plt>
   4ac18:	ldur	x8, [x29, #-24]
   4ac1c:	mov	x9, #0x2                   	// #2
   4ac20:	movk	x9, #0x8000, lsl #48
   4ac24:	add	x9, x9, #0x2
   4ac28:	cmp	x8, x9
   4ac2c:	mov	w26, wzr
   4ac30:	b.lt	4ac84 <mpfr_yn@@Base+0x44c>  // b.tstop
   4ac34:	ldur	x9, [x29, #-40]
   4ac38:	add	x10, x8, #0x2
   4ac3c:	ldur	x0, [x29, #-16]
   4ac40:	cmp	x10, x9
   4ac44:	mov	w10, #0x3                   	// #3
   4ac48:	sub	x8, x9, x8
   4ac4c:	csinc	x8, x10, x8, ge  // ge = tcont
   4ac50:	sub	x10, x9, #0x1
   4ac54:	add	x9, x9, #0x3e
   4ac58:	cmp	x10, #0x0
   4ac5c:	csel	x9, x9, x10, lt  // lt = tstop
   4ac60:	ldr	x10, [x19]
   4ac64:	sub	x2, x25, x8
   4ac68:	cmp	w20, #0x0
   4ac6c:	asr	x8, x9, #6
   4ac70:	add	x1, x8, #0x1
   4ac74:	cinc	x3, x10, eq  // eq = none
   4ac78:	bl	c830 <mpfr_round_p@plt>
   4ac7c:	cmp	w0, #0x0
   4ac80:	cset	w26, ne  // ne = any
   4ac84:	cbz	w26, 4aca0 <mpfr_yn@@Base+0x468>
   4ac88:	ldur	w3, [x29, #-32]
   4ac8c:	sub	x1, x29, #0x28
   4ac90:	mov	x0, x19
   4ac94:	mov	w2, w20
   4ac98:	bl	cb70 <mpfr_set4@plt>
   4ac9c:	mov	w24, w0
   4aca0:	sub	x0, x29, #0x28
   4aca4:	bl	c4f0 <mpfr_clear@plt>
   4aca8:	cmp	w26, #0x0
   4acac:	ldp	x26, x25, [sp, #40]
   4acb0:	mov	w8, #0x4                   	// #4
   4acb4:	csel	w8, w8, wzr, ne  // ne = any
   4acb8:	cmp	w8, #0x4
   4acbc:	b.eq	4b120 <mpfr_yn@@Base+0x8e8>  // b.none
   4acc0:	cbnz	w8, 4b260 <mpfr_yn@@Base+0xa28>
   4acc4:	ldr	x8, [x19]
   4acc8:	mov	x0, x22
   4accc:	mov	x2, xzr
   4acd0:	cmp	x8, #0x0
   4acd4:	cinc	x8, x8, lt  // lt = tstop
   4acd8:	asr	x8, x8, #1
   4acdc:	add	x1, x8, #0x3
   4ace0:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4ace4:	cmp	w0, #0x1
   4ace8:	b.lt	4ad08 <mpfr_yn@@Base+0x4d0>  // b.tstop
   4acec:	mov	x0, x19
   4acf0:	mov	x1, x21
   4acf4:	mov	x2, x22
   4acf8:	mov	w3, w20
   4acfc:	bl	4b330 <mpfr_y1@@Base+0x20>
   4ad00:	mov	w24, w0
   4ad04:	cbnz	w0, 4b120 <mpfr_yn@@Base+0x8e8>
   4ad08:	sub	x0, x29, #0x28
   4ad0c:	bl	c030 <mpfr_init@plt>
   4ad10:	sub	x0, x29, #0x48
   4ad14:	bl	c030 <mpfr_init@plt>
   4ad18:	add	x0, sp, #0x58
   4ad1c:	bl	c030 <mpfr_init@plt>
   4ad20:	add	x0, sp, #0x38
   4ad24:	bl	c030 <mpfr_init@plt>
   4ad28:	ldr	x24, [x19]
   4ad2c:	str	w27, [sp, #16]
   4ad30:	cmp	x24, #0x1
   4ad34:	b.eq	4b280 <mpfr_yn@@Base+0xa48>  // b.none
   4ad38:	b.le	4b288 <mpfr_yn@@Base+0xa50>
   4ad3c:	ldr	x8, [x19]
   4ad40:	mov	w9, #0x80                  	// #128
   4ad44:	sub	x8, x8, #0x1
   4ad48:	clz	x8, x8
   4ad4c:	sub	w8, w9, w8, lsl #1
   4ad50:	sxtw	x8, w8
   4ad54:	add	x8, x24, x8
   4ad58:	add	x24, x23, x23, lsl #1
   4ad5c:	sub	x9, x23, #0x1
   4ad60:	cmp	w20, #0x0
   4ad64:	add	x27, x8, #0xd
   4ad68:	add	x8, x24, #0x2
   4ad6c:	str	x9, [sp, #8]
   4ad70:	mov	w10, #0x40                  	// #64
   4ad74:	cset	w9, eq  // eq = none
   4ad78:	clz	x8, x8
   4ad7c:	str	w20, [sp, #20]
   4ad80:	mov	w20, #0x1                   	// #1
   4ad84:	stp	x9, x26, [sp, #32]
   4ad88:	mov	w9, #0x40                  	// #64
   4ad8c:	sub	x8, x10, x8
   4ad90:	str	x9, [sp]
   4ad94:	str	x8, [sp, #24]
   4ad98:	str	x25, [sp, #48]
   4ad9c:	sub	x0, x29, #0x28
   4ada0:	mov	x1, x27
   4ada4:	bl	c330 <mpfr_set_prec@plt>
   4ada8:	sub	x0, x29, #0x48
   4adac:	mov	x1, x27
   4adb0:	bl	c330 <mpfr_set_prec@plt>
   4adb4:	add	x0, sp, #0x58
   4adb8:	mov	x1, x27
   4adbc:	bl	c330 <mpfr_set_prec@plt>
   4adc0:	add	x0, sp, #0x38
   4adc4:	mov	x1, x27
   4adc8:	bl	c330 <mpfr_set_prec@plt>
   4adcc:	sub	x0, x29, #0x28
   4add0:	mov	x1, x22
   4add4:	mov	x2, x22
   4add8:	mov	w3, wzr
   4addc:	bl	c1b0 <mpfr_mul@plt>
   4ade0:	sub	x0, x29, #0x28
   4ade4:	sub	x1, x29, #0x28
   4ade8:	mov	w2, #0x2                   	// #2
   4adec:	mov	w3, wzr
   4adf0:	bl	cde0 <mpfr_div_2ui@plt>
   4adf4:	add	x0, sp, #0x58
   4adf8:	mov	x1, x22
   4adfc:	mov	x2, x23
   4ae00:	mov	w3, wzr
   4ae04:	bl	c3d0 <mpfr_pow_ui@plt>
   4ae08:	add	x0, sp, #0x58
   4ae0c:	add	x1, sp, #0x58
   4ae10:	mov	x2, x23
   4ae14:	mov	w3, wzr
   4ae18:	bl	c8e0 <mpfr_div_2si@plt>
   4ae1c:	cbz	x21, 4ae38 <mpfr_yn@@Base+0x600>
   4ae20:	ldr	x2, [sp, #8]
   4ae24:	sub	x0, x29, #0x48
   4ae28:	sub	x1, x29, #0x28
   4ae2c:	bl	4ba90 <mpfr_y1@@Base+0x780>
   4ae30:	mov	x25, x0
   4ae34:	b	4ae48 <mpfr_yn@@Base+0x610>
   4ae38:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   4ae3c:	mov	x25, xzr
   4ae40:	stur	w20, [x29, #-64]
   4ae44:	stur	x8, [x29, #-56]
   4ae48:	sub	x0, x29, #0x48
   4ae4c:	sub	x1, x29, #0x48
   4ae50:	add	x2, sp, #0x58
   4ae54:	mov	w3, wzr
   4ae58:	bl	caf0 <mpfr_div@plt>
   4ae5c:	cmn	x24, #0x2
   4ae60:	b.eq	4b090 <mpfr_yn@@Base+0x858>  // b.none
   4ae64:	cmn	x24, #0x3
   4ae68:	b.eq	4b098 <mpfr_yn@@Base+0x860>  // b.none
   4ae6c:	ldr	x20, [sp, #24]
   4ae70:	sub	x0, x29, #0x28
   4ae74:	sub	x1, x29, #0x28
   4ae78:	mov	w2, wzr
   4ae7c:	bl	c1d0 <mpfr_neg@plt>
   4ae80:	add	x0, sp, #0x38
   4ae84:	sub	x1, x29, #0x28
   4ae88:	add	x2, sp, #0x58
   4ae8c:	mov	x3, x23
   4ae90:	bl	4bb94 <mpfr_y1@@Base+0x884>
   4ae94:	ldur	x8, [x29, #-56]
   4ae98:	add	x9, x25, x20
   4ae9c:	mov	x26, x0
   4aea0:	sub	x0, x29, #0x48
   4aea4:	add	x20, x9, x8
   4aea8:	sub	x1, x29, #0x48
   4aeac:	add	x2, sp, #0x38
   4aeb0:	mov	w3, wzr
   4aeb4:	add	x25, x20, #0x1
   4aeb8:	bl	c640 <mpfr_add@plt>
   4aebc:	ldr	x8, [sp, #72]
   4aec0:	ldur	x9, [x29, #-56]
   4aec4:	add	x0, sp, #0x58
   4aec8:	mov	w2, #0x1                   	// #1
   4aecc:	add	x8, x8, x26
   4aed0:	cmp	x8, x25
   4aed4:	csinc	x8, x8, x20, gt
   4aed8:	sub	x8, x8, x9
   4aedc:	add	x9, x8, #0x1
   4aee0:	add	x8, x8, #0x2
   4aee4:	cmp	x9, #0x0
   4aee8:	mov	x1, x22
   4aeec:	mov	w3, wzr
   4aef0:	csinc	x20, x8, xzr, ge  // ge = tcont
   4aef4:	bl	cde0 <mpfr_div_2ui@plt>
   4aef8:	add	x0, sp, #0x58
   4aefc:	add	x1, sp, #0x58
   4af00:	mov	w2, wzr
   4af04:	bl	c520 <mpfr_log@plt>
   4af08:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4af0c:	ldr	x1, [x0, #2832]
   4af10:	add	x0, x0, #0xb10
   4af14:	blr	x1
   4af18:	add	x1, x28, x0
   4af1c:	add	x0, sp, #0x38
   4af20:	mov	w2, wzr
   4af24:	bl	c840 <mpfr_cache@plt>
   4af28:	ldr	x8, [sp, #104]
   4af2c:	ldr	x9, [sp, #72]
   4af30:	add	x0, sp, #0x58
   4af34:	add	x1, sp, #0x58
   4af38:	add	x2, sp, #0x38
   4af3c:	cmp	x8, x9
   4af40:	mov	w3, wzr
   4af44:	csel	x25, x8, x9, gt
   4af48:	bl	c640 <mpfr_add@plt>
   4af4c:	ldr	x26, [sp, #104]
   4af50:	add	x0, sp, #0x58
   4af54:	add	x1, sp, #0x58
   4af58:	mov	w2, #0x1                   	// #1
   4af5c:	mov	w3, wzr
   4af60:	bl	c780 <mpfr_mul_2ui@plt>
   4af64:	add	x0, sp, #0x38
   4af68:	mov	x1, x23
   4af6c:	mov	x2, x22
   4af70:	mov	w3, wzr
   4af74:	bl	d100 <mpfr_jn@plt>
   4af78:	add	x0, sp, #0x58
   4af7c:	add	x1, sp, #0x58
   4af80:	add	x2, sp, #0x38
   4af84:	mov	w3, wzr
   4af88:	bl	c1b0 <mpfr_mul@plt>
   4af8c:	ldur	x8, [x29, #-56]
   4af90:	ldr	x9, [sp, #104]
   4af94:	sub	x10, x25, x26
   4af98:	add	x0, sp, #0x58
   4af9c:	add	x20, x8, x20
   4afa0:	add	x8, x10, x9
   4afa4:	add	x1, sp, #0x58
   4afa8:	sub	x2, x29, #0x48
   4afac:	mov	w3, wzr
   4afb0:	add	x25, x8, #0x4
   4afb4:	bl	bfd0 <mpfr_sub@plt>
   4afb8:	ldr	x8, [sp, #104]
   4afbc:	cmp	x20, x25
   4afc0:	csel	x9, x20, x25, gt
   4afc4:	sub	x8, x9, x8
   4afc8:	add	x25, x8, #0x1
   4afcc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4afd0:	ldr	x1, [x0, #2848]
   4afd4:	add	x0, x0, #0xb20
   4afd8:	blr	x1
   4afdc:	add	x1, x28, x0
   4afe0:	sub	x0, x29, #0x28
   4afe4:	mov	w2, wzr
   4afe8:	bl	c840 <mpfr_cache@plt>
   4afec:	add	x0, sp, #0x58
   4aff0:	add	x1, sp, #0x58
   4aff4:	sub	x2, x29, #0x28
   4aff8:	mov	w3, wzr
   4affc:	bl	caf0 <mpfr_div@plt>
   4b000:	ldr	x8, [sp, #104]
   4b004:	mov	x20, #0x2                   	// #2
   4b008:	movk	x20, #0x8000, lsl #48
   4b00c:	add	x9, x20, #0x2
   4b010:	cmp	x8, x9
   4b014:	b.lt	4b060 <mpfr_yn@@Base+0x828>  // b.tstop
   4b018:	ldr	x9, [sp, #88]
   4b01c:	add	x8, x25, #0x2
   4b020:	cmp	x25, #0x0
   4b024:	mov	w11, #0x2                   	// #2
   4b028:	csel	x8, x8, x11, ge  // ge = tcont
   4b02c:	sub	x2, x27, x8
   4b030:	sub	x8, x9, #0x1
   4b034:	add	x9, x9, #0x3e
   4b038:	cmp	x8, #0x0
   4b03c:	csel	x8, x9, x8, lt  // lt = tstop
   4b040:	asr	x8, x8, #6
   4b044:	ldr	x10, [x19]
   4b048:	add	x1, x8, #0x1
   4b04c:	ldr	x8, [sp, #32]
   4b050:	ldr	x0, [sp, #112]
   4b054:	add	x3, x10, x8
   4b058:	bl	c830 <mpfr_round_p@plt>
   4b05c:	cbnz	w0, 4b0d0 <mpfr_yn@@Base+0x898>
   4b060:	sub	x8, x20, x27
   4b064:	ldr	x20, [sp]
   4b068:	sub	x8, x8, #0x103
   4b06c:	cmp	x20, x8
   4b070:	b.gt	4b0b4 <mpfr_yn@@Base+0x87c>
   4b074:	add	x27, x27, x20
   4b078:	cmp	x27, #0x0
   4b07c:	cinc	x8, x27, lt  // lt = tstop
   4b080:	asr	x8, x8, #1
   4b084:	str	x8, [sp]
   4b088:	mov	w20, #0x1                   	// #1
   4b08c:	b	4ad9c <mpfr_yn@@Base+0x564>
   4b090:	mov	x20, xzr
   4b094:	b	4ae70 <mpfr_yn@@Base+0x638>
   4b098:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4b09c:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4b0a0:	mov	w1, #0x167                 	// #359
   4b0a4:	add	x0, x0, #0xd6d
   4b0a8:	add	x2, x2, #0xd72
   4b0ac:	bl	d030 <mpfr_assert_fail@plt>
   4b0b0:	b	4ae6c <mpfr_yn@@Base+0x634>
   4b0b4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4b0b8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   4b0bc:	mov	w1, #0x196                 	// #406
   4b0c0:	add	x0, x0, #0xd6d
   4b0c4:	add	x2, x2, #0x99a
   4b0c8:	bl	d030 <mpfr_assert_fail@plt>
   4b0cc:	b	4b074 <mpfr_yn@@Base+0x83c>
   4b0d0:	ldr	w8, [sp, #96]
   4b0d4:	ldr	w20, [sp, #20]
   4b0d8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4b0dc:	bics	xzr, x9, x21
   4b0e0:	cneg	w3, w8, eq  // eq = none
   4b0e4:	add	x1, sp, #0x58
   4b0e8:	mov	x0, x19
   4b0ec:	mov	w2, w20
   4b0f0:	bl	cb70 <mpfr_set4@plt>
   4b0f4:	mov	w24, w0
   4b0f8:	sub	x0, x29, #0x28
   4b0fc:	bl	c4f0 <mpfr_clear@plt>
   4b100:	sub	x0, x29, #0x48
   4b104:	bl	c4f0 <mpfr_clear@plt>
   4b108:	add	x0, sp, #0x58
   4b10c:	bl	c4f0 <mpfr_clear@plt>
   4b110:	add	x0, sp, #0x38
   4b114:	bl	c4f0 <mpfr_clear@plt>
   4b118:	ldr	w27, [sp, #16]
   4b11c:	ldp	x26, x25, [sp, #40]
   4b120:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b124:	ldr	x1, [x0, #2800]
   4b128:	add	x0, x0, #0xaf0
   4b12c:	blr	x1
   4b130:	str	w27, [x28, x0]
   4b134:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b138:	ldr	x1, [x0, #2736]
   4b13c:	add	x0, x0, #0xab0
   4b140:	blr	x1
   4b144:	str	x25, [x28, x0]
   4b148:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b14c:	ldr	x1, [x0, #2768]
   4b150:	add	x0, x0, #0xad0
   4b154:	blr	x1
   4b158:	str	x26, [x28, x0]
   4b15c:	ldr	x8, [x19, #16]
   4b160:	cmp	x8, x26
   4b164:	b.gt	4b1fc <mpfr_yn@@Base+0x9c4>
   4b168:	cmp	x8, x25
   4b16c:	b.lt	4b1fc <mpfr_yn@@Base+0x9c4>  // b.tstop
   4b170:	cbz	w24, 4b194 <mpfr_yn@@Base+0x95c>
   4b174:	orr	w8, w27, #0x8
   4b178:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b17c:	ldr	x1, [x0, #2800]
   4b180:	add	x0, x0, #0xaf0
   4b184:	blr	x1
   4b188:	str	w8, [x28, x0]
   4b18c:	mov	w0, w24
   4b190:	b	4b260 <mpfr_yn@@Base+0xa28>
   4b194:	mov	w0, wzr
   4b198:	b	4b260 <mpfr_yn@@Base+0xa28>
   4b19c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4b1a0:	cmp	x9, x8
   4b1a4:	b.eq	4b210 <mpfr_yn@@Base+0x9d8>  // b.none
   4b1a8:	mov	x8, #0x2                   	// #2
   4b1ac:	movk	x8, #0x8000, lsl #48
   4b1b0:	cmp	x9, x8
   4b1b4:	b.eq	4b234 <mpfr_yn@@Base+0x9fc>  // b.none
   4b1b8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4b1bc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4b1c0:	str	x8, [x19, #16]
   4b1c4:	bics	xzr, x9, x21
   4b1c8:	mov	w8, #0x1                   	// #1
   4b1cc:	cneg	w8, w8, ne  // ne = any
   4b1d0:	str	w8, [x19, #8]
   4b1d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b1d8:	ldr	x1, [x0, #2800]
   4b1dc:	add	x0, x0, #0xaf0
   4b1e0:	blr	x1
   4b1e4:	mov	x8, x0
   4b1e8:	mrs	x9, tpidr_el0
   4b1ec:	ldr	w10, [x9, x8]
   4b1f0:	mov	w0, wzr
   4b1f4:	orr	w10, w10, #0x20
   4b1f8:	b	4b25c <mpfr_yn@@Base+0xa24>
   4b1fc:	mov	x0, x19
   4b200:	mov	w1, w24
   4b204:	mov	w2, w20
   4b208:	bl	d020 <mpfr_check_range@plt>
   4b20c:	b	4b260 <mpfr_yn@@Base+0xa28>
   4b210:	ldr	w8, [x22, #8]
   4b214:	cmp	w8, #0x1
   4b218:	b.lt	4b234 <mpfr_yn@@Base+0x9fc>  // b.tstop
   4b21c:	mov	w8, #0x1                   	// #1
   4b220:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4b224:	mov	w0, wzr
   4b228:	str	w8, [x19, #8]
   4b22c:	str	x9, [x19, #16]
   4b230:	b	4b260 <mpfr_yn@@Base+0xa28>
   4b234:	str	x10, [x19, #16]
   4b238:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b23c:	ldr	x1, [x0, #2800]
   4b240:	add	x0, x0, #0xaf0
   4b244:	blr	x1
   4b248:	mov	x8, x0
   4b24c:	mrs	x9, tpidr_el0
   4b250:	ldr	w10, [x9, x8]
   4b254:	mov	w0, wzr
   4b258:	orr	w10, w10, #0x4
   4b25c:	str	w10, [x9, x8]
   4b260:	ldp	x20, x19, [sp, #272]
   4b264:	ldp	x22, x21, [sp, #256]
   4b268:	ldp	x24, x23, [sp, #240]
   4b26c:	ldp	x26, x25, [sp, #224]
   4b270:	ldp	x28, x27, [sp, #208]
   4b274:	ldp	x29, x30, [sp, #192]
   4b278:	add	sp, sp, #0x120
   4b27c:	ret
   4b280:	mov	x8, xzr
   4b284:	b	4ad54 <mpfr_yn@@Base+0x51c>
   4b288:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4b28c:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4b290:	add	x0, x0, #0xd6d
   4b294:	add	x2, x2, #0xc37
   4b298:	mov	w1, #0x14c                 	// #332
   4b29c:	bl	d030 <mpfr_assert_fail@plt>
   4b2a0:	b	4ad3c <mpfr_yn@@Base+0x504>
   4b2a4:	sub	x0, x29, #0x28
   4b2a8:	bl	c4f0 <mpfr_clear@plt>
   4b2ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b2b0:	ldr	x1, [x0, #2800]
   4b2b4:	add	x0, x0, #0xaf0
   4b2b8:	blr	x1
   4b2bc:	str	w27, [x28, x0]
   4b2c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b2c4:	ldr	x1, [x0, #2736]
   4b2c8:	add	x0, x0, #0xab0
   4b2cc:	blr	x1
   4b2d0:	ldr	x25, [sp, #48]
   4b2d4:	str	x25, [x28, x0]
   4b2d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b2dc:	ldr	x1, [x0, #2768]
   4b2e0:	add	x0, x0, #0xad0
   4b2e4:	blr	x1
   4b2e8:	ldr	x26, [sp, #40]
   4b2ec:	mov	w2, #0xffffffff            	// #-1
   4b2f0:	mov	w1, w20
   4b2f4:	str	x26, [x28, x0]
   4b2f8:	mov	x0, x19
   4b2fc:	bl	c3a0 <mpfr_overflow@plt>
   4b300:	mov	w8, #0x1                   	// #1
   4b304:	cmp	w8, #0x4
   4b308:	b.ne	4acc0 <mpfr_yn@@Base+0x488>  // b.any
   4b30c:	b	4b120 <mpfr_yn@@Base+0x8e8>

000000000004b310 <mpfr_y1@@Base>:
   4b310:	stp	x29, x30, [sp, #-16]!
   4b314:	mov	w3, w2
   4b318:	mov	x2, x1
   4b31c:	mov	w1, #0x1                   	// #1
   4b320:	mov	x29, sp
   4b324:	bl	ca90 <mpfr_yn@plt>
   4b328:	ldp	x29, x30, [sp], #16
   4b32c:	ret
   4b330:	sub	sp, sp, #0x1c0
   4b334:	stp	x29, x30, [sp, #352]
   4b338:	add	x29, sp, #0x160
   4b33c:	stp	x26, x25, [sp, #384]
   4b340:	mov	x26, x0
   4b344:	sub	x0, x29, #0x48
   4b348:	stp	x28, x27, [sp, #368]
   4b34c:	stp	x24, x23, [sp, #400]
   4b350:	stp	x22, x21, [sp, #416]
   4b354:	stp	x20, x19, [sp, #432]
   4b358:	mov	w20, w3
   4b35c:	mov	x21, x2
   4b360:	mov	x27, x1
   4b364:	bl	c030 <mpfr_init@plt>
   4b368:	ldr	x19, [x26]
   4b36c:	cmp	x19, #0x1
   4b370:	b.eq	4ba5c <mpfr_y1@@Base+0x74c>  // b.none
   4b374:	b.le	4ba64 <mpfr_y1@@Base+0x754>
   4b378:	ldr	x8, [x26]
   4b37c:	mov	w9, #0x40                  	// #64
   4b380:	sub	x8, x8, #0x1
   4b384:	clz	x8, x8
   4b388:	sub	x8, x9, x8
   4b38c:	add	x8, x19, x8
   4b390:	cmp	w20, #0x0
   4b394:	lsl	x9, x27, #1
   4b398:	mov	w10, #0x1                   	// #1
   4b39c:	add	x24, x8, #0x4
   4b3a0:	cset	w8, eq  // eq = none
   4b3a4:	mov	w22, #0x1                   	// #1
   4b3a8:	mov	w11, #0x40                  	// #64
   4b3ac:	mov	x28, #0xffffffffffffffff    	// #-1
   4b3b0:	mov	w19, #0x2                   	// #2
   4b3b4:	str	x8, [sp, #16]
   4b3b8:	sub	x8, x9, #0x1
   4b3bc:	bfi	x10, x27, #1, #63
   4b3c0:	str	w20, [sp, #12]
   4b3c4:	stp	x8, x10, [sp, #24]
   4b3c8:	stp	x27, x26, [sp, #40]
   4b3cc:	sub	x0, x29, #0x48
   4b3d0:	mov	x1, x24
   4b3d4:	str	x11, [sp]
   4b3d8:	bl	c330 <mpfr_set_prec@plt>
   4b3dc:	sub	x0, x29, #0x28
   4b3e0:	mov	x1, x24
   4b3e4:	bl	cf60 <mpfr_init2@plt>
   4b3e8:	sub	x0, x29, #0x68
   4b3ec:	mov	x1, x24
   4b3f0:	bl	cf60 <mpfr_init2@plt>
   4b3f4:	sub	x0, x29, #0x88
   4b3f8:	mov	x1, x24
   4b3fc:	bl	cf60 <mpfr_init2@plt>
   4b400:	sub	x0, x29, #0xa8
   4b404:	mov	x1, x24
   4b408:	bl	cf60 <mpfr_init2@plt>
   4b40c:	add	x0, sp, #0x98
   4b410:	mov	x1, x24
   4b414:	bl	cf60 <mpfr_init2@plt>
   4b418:	add	x0, sp, #0x78
   4b41c:	mov	w1, #0x1f                  	// #31
   4b420:	bl	cf60 <mpfr_init2@plt>
   4b424:	add	x0, sp, #0x58
   4b428:	mov	w1, #0x1f                  	// #31
   4b42c:	bl	cf60 <mpfr_init2@plt>
   4b430:	add	x0, sp, #0x38
   4b434:	mov	w1, #0x1f                  	// #31
   4b438:	bl	cf60 <mpfr_init2@plt>
   4b43c:	sub	x0, x29, #0x28
   4b440:	sub	x1, x29, #0x48
   4b444:	mov	x2, x21
   4b448:	mov	w3, wzr
   4b44c:	bl	d140 <mpfr_sin_cos@plt>
   4b450:	ldr	w8, [x21, #8]
   4b454:	tbz	w8, #31, 4b468 <mpfr_y1@@Base+0x158>
   4b458:	sub	x0, x29, #0x28
   4b45c:	sub	x1, x29, #0x28
   4b460:	mov	w2, wzr
   4b464:	bl	c1d0 <mpfr_neg@plt>
   4b468:	sub	x0, x29, #0xa8
   4b46c:	sub	x1, x29, #0x28
   4b470:	sub	x2, x29, #0x48
   4b474:	mov	w3, wzr
   4b478:	bl	c640 <mpfr_add@plt>
   4b47c:	sub	x0, x29, #0x48
   4b480:	sub	x1, x29, #0x28
   4b484:	sub	x2, x29, #0x48
   4b488:	mov	w3, wzr
   4b48c:	bl	bfd0 <mpfr_sub@plt>
   4b490:	sub	x0, x29, #0x28
   4b494:	sub	x1, x29, #0xa8
   4b498:	bl	c970 <mpfr_swap@plt>
   4b49c:	ldr	w8, [x21, #8]
   4b4a0:	add	x0, sp, #0x98
   4b4a4:	mov	x2, x21
   4b4a8:	mov	w3, wzr
   4b4ac:	cmp	w8, #0x1
   4b4b0:	cneg	x1, x28, ge  // ge = tcont
   4b4b4:	bl	cd90 <mpfr_si_div@plt>
   4b4b8:	add	x0, sp, #0x98
   4b4bc:	add	x1, sp, #0x98
   4b4c0:	mov	w2, #0x3                   	// #3
   4b4c4:	mov	w3, wzr
   4b4c8:	bl	cde0 <mpfr_div_2ui@plt>
   4b4cc:	sub	x0, x29, #0x68
   4b4d0:	mov	w1, #0x1                   	// #1
   4b4d4:	mov	x2, xzr
   4b4d8:	mov	w3, wzr
   4b4dc:	bl	cac0 <mpfr_set_ui_2exp@plt>
   4b4e0:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   4b4e4:	sub	x0, x29, #0xa8
   4b4e8:	mov	w1, #0x1                   	// #1
   4b4ec:	mov	x2, xzr
   4b4f0:	mov	w3, wzr
   4b4f4:	stur	w22, [x29, #-128]
   4b4f8:	stur	x23, [x29, #-120]
   4b4fc:	bl	cac0 <mpfr_set_ui_2exp@plt>
   4b500:	ldp	x28, x26, [sp, #24]
   4b504:	mov	w20, wzr
   4b508:	mov	w25, wzr
   4b50c:	str	w22, [sp, #128]
   4b510:	str	w22, [sp, #96]
   4b514:	mov	w27, #0x6                   	// #6
   4b518:	mov	w22, #0x2                   	// #2
   4b51c:	str	x23, [sp, #136]
   4b520:	str	x23, [sp, #104]
   4b524:	b	4b548 <mpfr_y1@@Base+0x238>
   4b528:	mov	w20, #0x2                   	// #2
   4b52c:	mov	w25, #0x1                   	// #1
   4b530:	add	x22, x22, #0x1
   4b534:	sub	x28, x28, #0x2
   4b538:	add	x27, x27, #0x6
   4b53c:	cmp	w20, #0x4
   4b540:	add	x26, x26, #0x2
   4b544:	b.ge	4b728 <mpfr_y1@@Base+0x418>  // b.tcont
   4b548:	sub	x0, x29, #0xa8
   4b54c:	sub	x1, x29, #0xa8
   4b550:	mov	x2, x26
   4b554:	mov	w3, wzr
   4b558:	sub	x23, x22, #0x1
   4b55c:	bl	ce50 <mpfr_mul_si@plt>
   4b560:	sub	x0, x29, #0xa8
   4b564:	sub	x1, x29, #0xa8
   4b568:	mov	x2, x28
   4b56c:	mov	w3, wzr
   4b570:	bl	ce50 <mpfr_mul_si@plt>
   4b574:	sub	x0, x29, #0xa8
   4b578:	sub	x1, x29, #0xa8
   4b57c:	mov	x2, x23
   4b580:	mov	w3, wzr
   4b584:	bl	d160 <mpfr_div_ui@plt>
   4b588:	sub	x0, x29, #0xa8
   4b58c:	sub	x1, x29, #0xa8
   4b590:	add	x2, sp, #0x98
   4b594:	mov	w3, wzr
   4b598:	bl	c1b0 <mpfr_mul@plt>
   4b59c:	ldur	w8, [x29, #-160]
   4b5a0:	add	x0, sp, #0x78
   4b5a4:	sub	x1, x29, #0xa8
   4b5a8:	mov	x2, x27
   4b5ac:	cmp	w8, #0x0
   4b5b0:	cinc	w3, w19, le
   4b5b4:	bl	bea0 <mpfr_mul_ui@plt>
   4b5b8:	add	x0, sp, #0x78
   4b5bc:	add	x1, sp, #0x78
   4b5c0:	mov	w3, #0x1                   	// #1
   4b5c4:	mov	w2, wzr
   4b5c8:	bl	cb70 <mpfr_set4@plt>
   4b5cc:	add	x0, sp, #0x38
   4b5d0:	sub	x1, x29, #0xa8
   4b5d4:	mov	w2, #0x2                   	// #2
   4b5d8:	mov	w3, #0x1                   	// #1
   4b5dc:	bl	cb70 <mpfr_set4@plt>
   4b5e0:	add	x0, sp, #0x38
   4b5e4:	add	x1, sp, #0x38
   4b5e8:	mov	w3, #0x2                   	// #2
   4b5ec:	mov	x2, x24
   4b5f0:	bl	c780 <mpfr_mul_2ui@plt>
   4b5f4:	add	x0, sp, #0x38
   4b5f8:	add	x1, sp, #0x38
   4b5fc:	add	x2, sp, #0x78
   4b600:	mov	w3, #0x2                   	// #2
   4b604:	bl	c640 <mpfr_add@plt>
   4b608:	cmp	w20, #0x2
   4b60c:	b.lt	4b648 <mpfr_y1@@Base+0x338>  // b.tstop
   4b610:	add	x0, sp, #0x58
   4b614:	add	x1, sp, #0x58
   4b618:	mov	w3, #0x2                   	// #2
   4b61c:	mov	x2, x24
   4b620:	bl	cde0 <mpfr_div_2ui@plt>
   4b624:	ldur	w8, [x29, #-160]
   4b628:	add	x0, sp, #0x58
   4b62c:	add	x1, sp, #0x58
   4b630:	sub	x2, x29, #0xa8
   4b634:	mov	w3, #0x2                   	// #2
   4b638:	cmp	w8, #0x1
   4b63c:	b.lt	4b684 <mpfr_y1@@Base+0x374>  // b.tstop
   4b640:	bl	c640 <mpfr_add@plt>
   4b644:	b	4b688 <mpfr_y1@@Base+0x378>
   4b648:	tbnz	w23, #0, 4b668 <mpfr_y1@@Base+0x358>
   4b64c:	sub	x0, x29, #0x68
   4b650:	sub	x1, x29, #0x68
   4b654:	sub	x2, x29, #0xa8
   4b658:	mov	w3, wzr
   4b65c:	tbnz	w23, #1, 4b6a4 <mpfr_y1@@Base+0x394>
   4b660:	bl	c640 <mpfr_add@plt>
   4b664:	b	4b6a8 <mpfr_y1@@Base+0x398>
   4b668:	sub	x0, x29, #0x88
   4b66c:	sub	x1, x29, #0x88
   4b670:	sub	x2, x29, #0xa8
   4b674:	mov	w3, wzr
   4b678:	tbnz	w23, #1, 4b6b4 <mpfr_y1@@Base+0x3a4>
   4b67c:	bl	c640 <mpfr_add@plt>
   4b680:	b	4b6b8 <mpfr_y1@@Base+0x3a8>
   4b684:	bl	bfd0 <mpfr_sub@plt>
   4b688:	add	x0, sp, #0x58
   4b68c:	add	x1, sp, #0x58
   4b690:	mov	w3, #0x2                   	// #2
   4b694:	mov	x2, x24
   4b698:	bl	c780 <mpfr_mul_2ui@plt>
   4b69c:	add	w20, w20, #0x1
   4b6a0:	b	4b6c8 <mpfr_y1@@Base+0x3b8>
   4b6a4:	bl	bfd0 <mpfr_sub@plt>
   4b6a8:	ldr	x8, [sp, #72]
   4b6ac:	ldur	x9, [x29, #-88]
   4b6b0:	b	4b6c0 <mpfr_y1@@Base+0x3b0>
   4b6b4:	bl	bfd0 <mpfr_sub@plt>
   4b6b8:	ldr	x8, [sp, #72]
   4b6bc:	ldur	x9, [x29, #-120]
   4b6c0:	cmp	x8, x9
   4b6c4:	csinc	w20, wzr, w20, gt
   4b6c8:	add	x0, sp, #0x58
   4b6cc:	add	x1, sp, #0x58
   4b6d0:	add	x2, sp, #0x78
   4b6d4:	mov	w3, #0x2                   	// #2
   4b6d8:	bl	c640 <mpfr_add@plt>
   4b6dc:	cmp	w20, #0x1
   4b6e0:	b.gt	4b530 <mpfr_y1@@Base+0x220>
   4b6e4:	ldr	w8, [x21, #8]
   4b6e8:	cmp	w8, #0x1
   4b6ec:	b.lt	4b704 <mpfr_y1@@Base+0x3f4>  // b.tstop
   4b6f0:	lsr	x1, x22, #1
   4b6f4:	mov	x0, x21
   4b6f8:	mov	x2, xzr
   4b6fc:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4b700:	tbnz	w0, #31, 4b528 <mpfr_y1@@Base+0x218>
   4b704:	ldr	w8, [x21, #8]
   4b708:	tbz	w8, #31, 4b530 <mpfr_y1@@Base+0x220>
   4b70c:	neg	x1, x22, lsr #1
   4b710:	mov	x0, x21
   4b714:	mov	x2, xzr
   4b718:	bl	c890 <mpfr_cmp_si_2exp@plt>
   4b71c:	cmp	w0, #0x1
   4b720:	b.ge	4b528 <mpfr_y1@@Base+0x218>  // b.tcont
   4b724:	b	4b530 <mpfr_y1@@Base+0x220>
   4b728:	ldr	x27, [sp, #40]
   4b72c:	tbnz	w27, #0, 4b780 <mpfr_y1@@Base+0x470>
   4b730:	sub	x0, x29, #0x48
   4b734:	sub	x1, x29, #0x48
   4b738:	sub	x2, x29, #0x68
   4b73c:	mov	w3, wzr
   4b740:	bl	c1b0 <mpfr_mul@plt>
   4b744:	sub	x0, x29, #0x28
   4b748:	sub	x1, x29, #0x28
   4b74c:	sub	x2, x29, #0x88
   4b750:	mov	w3, wzr
   4b754:	bl	c1b0 <mpfr_mul@plt>
   4b758:	ldur	x8, [x29, #-56]
   4b75c:	ldur	x9, [x29, #-24]
   4b760:	sub	x0, x29, #0x28
   4b764:	sub	x1, x29, #0x28
   4b768:	sub	x2, x29, #0x48
   4b76c:	cmp	x9, x8
   4b770:	mov	w3, wzr
   4b774:	csel	x20, x9, x8, gt
   4b778:	bl	c640 <mpfr_add@plt>
   4b77c:	b	4b7cc <mpfr_y1@@Base+0x4bc>
   4b780:	sub	x0, x29, #0x48
   4b784:	sub	x1, x29, #0x48
   4b788:	sub	x2, x29, #0x88
   4b78c:	mov	w3, wzr
   4b790:	bl	c1b0 <mpfr_mul@plt>
   4b794:	sub	x0, x29, #0x28
   4b798:	sub	x1, x29, #0x28
   4b79c:	sub	x2, x29, #0x68
   4b7a0:	mov	w3, wzr
   4b7a4:	bl	c1b0 <mpfr_mul@plt>
   4b7a8:	ldur	x8, [x29, #-56]
   4b7ac:	ldur	x9, [x29, #-24]
   4b7b0:	sub	x0, x29, #0x28
   4b7b4:	sub	x1, x29, #0x48
   4b7b8:	sub	x2, x29, #0x28
   4b7bc:	cmp	x9, x8
   4b7c0:	mov	w3, wzr
   4b7c4:	csel	x20, x9, x8, gt
   4b7c8:	bl	bfd0 <mpfr_sub@plt>
   4b7cc:	ldr	x26, [sp, #48]
   4b7d0:	mov	x28, #0xffffffffffffffff    	// #-1
   4b7d4:	tbz	w27, #1, 4b7e8 <mpfr_y1@@Base+0x4d8>
   4b7d8:	sub	x0, x29, #0x28
   4b7dc:	sub	x1, x29, #0x28
   4b7e0:	mov	w2, wzr
   4b7e4:	bl	c1d0 <mpfr_neg@plt>
   4b7e8:	ldur	x8, [x29, #-24]
   4b7ec:	ldur	x9, [x29, #-88]
   4b7f0:	ldur	x10, [x29, #-120]
   4b7f4:	ldr	x11, [sp, #104]
   4b7f8:	cmp	x8, x20
   4b7fc:	csel	x8, x8, x20, gt
   4b800:	cmp	x9, x10
   4b804:	csel	x9, x10, x9, lt  // lt = tstop
   4b808:	cmp	x11, x8
   4b80c:	csel	x8, x8, x11, lt  // lt = tstop
   4b810:	cmp	x8, x9
   4b814:	csel	x20, x9, x8, lt  // lt = tstop
   4b818:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4b81c:	ldr	x1, [x0, #2848]
   4b820:	add	x0, x0, #0xb20
   4b824:	blr	x1
   4b828:	mrs	x8, tpidr_el0
   4b82c:	add	x1, x8, x0
   4b830:	sub	x0, x29, #0x48
   4b834:	mov	w2, wzr
   4b838:	bl	c840 <mpfr_cache@plt>
   4b83c:	sub	x0, x29, #0x48
   4b840:	sub	x1, x29, #0x48
   4b844:	mov	x2, x21
   4b848:	mov	w3, wzr
   4b84c:	bl	c1b0 <mpfr_mul@plt>
   4b850:	ldr	w8, [x21, #8]
   4b854:	sub	x0, x29, #0x48
   4b858:	sub	x2, x29, #0x48
   4b85c:	mov	w3, wzr
   4b860:	cmp	w8, #0x1
   4b864:	cneg	x1, x28, ge  // ge = tcont
   4b868:	bl	cd90 <mpfr_si_div@plt>
   4b86c:	sub	x0, x29, #0x48
   4b870:	sub	x1, x29, #0x48
   4b874:	mov	w2, wzr
   4b878:	bl	ce20 <mpfr_sqrt@plt>
   4b87c:	ldur	w8, [x29, #-64]
   4b880:	ldur	w9, [x29, #-32]
   4b884:	add	x0, sp, #0x78
   4b888:	sub	x1, x29, #0x48
   4b88c:	sub	x2, x29, #0x28
   4b890:	cmp	w8, w9
   4b894:	cinc	w3, w19, ne  // ne = any
   4b898:	bl	c1b0 <mpfr_mul@plt>
   4b89c:	add	x0, sp, #0x78
   4b8a0:	add	x1, sp, #0x78
   4b8a4:	mov	w2, #0x2                   	// #2
   4b8a8:	mov	w3, #0x1                   	// #1
   4b8ac:	bl	cb70 <mpfr_set4@plt>
   4b8b0:	add	x0, sp, #0x78
   4b8b4:	add	x1, sp, #0x78
   4b8b8:	mov	w2, #0x3                   	// #3
   4b8bc:	mov	w3, #0x2                   	// #2
   4b8c0:	bl	bea0 <mpfr_mul_ui@plt>
   4b8c4:	ldur	x22, [x29, #-56]
   4b8c8:	sub	x0, x29, #0x48
   4b8cc:	sub	x1, x29, #0x48
   4b8d0:	sub	x2, x29, #0x28
   4b8d4:	mov	w3, wzr
   4b8d8:	bl	c1b0 <mpfr_mul@plt>
   4b8dc:	ldr	x8, [sp, #136]
   4b8e0:	ldur	x9, [x29, #-56]
   4b8e4:	sub	x0, x29, #0x28
   4b8e8:	cmp	x8, x9
   4b8ec:	csel	x23, x8, x9, gt
   4b8f0:	bl	c4f0 <mpfr_clear@plt>
   4b8f4:	sub	x0, x29, #0x68
   4b8f8:	bl	c4f0 <mpfr_clear@plt>
   4b8fc:	sub	x0, x29, #0x88
   4b900:	bl	c4f0 <mpfr_clear@plt>
   4b904:	sub	x0, x29, #0xa8
   4b908:	bl	c4f0 <mpfr_clear@plt>
   4b90c:	add	x0, sp, #0x98
   4b910:	bl	c4f0 <mpfr_clear@plt>
   4b914:	add	x0, sp, #0x78
   4b918:	bl	c4f0 <mpfr_clear@plt>
   4b91c:	add	x0, sp, #0x58
   4b920:	bl	c4f0 <mpfr_clear@plt>
   4b924:	add	x0, sp, #0x38
   4b928:	bl	c4f0 <mpfr_clear@plt>
   4b92c:	ldur	x8, [x29, #-56]
   4b930:	mov	x9, #0xfffffffffffffeff    	// #-257
   4b934:	movk	x9, #0x7fff, lsl #48
   4b938:	add	x9, x9, #0x105
   4b93c:	cmp	x8, x9
   4b940:	b.lt	4b998 <mpfr_y1@@Base+0x688>  // b.tstop
   4b944:	add	x9, x20, x22
   4b948:	add	x10, x23, #0x1
   4b94c:	add	x9, x9, #0x3
   4b950:	cmp	x10, x9
   4b954:	ldur	x10, [x29, #-72]
   4b958:	add	x11, x23, #0x2
   4b95c:	csinc	x9, x11, x9, ge  // ge = tcont
   4b960:	sub	x9, x24, x9
   4b964:	add	x2, x9, x8
   4b968:	sub	x8, x10, #0x1
   4b96c:	add	x9, x10, #0x3e
   4b970:	cmp	x8, #0x0
   4b974:	csel	x8, x9, x8, lt  // lt = tstop
   4b978:	asr	x8, x8, #6
   4b97c:	ldr	x11, [x26]
   4b980:	add	x1, x8, #0x1
   4b984:	ldr	x8, [sp, #16]
   4b988:	ldur	x0, [x29, #-48]
   4b98c:	add	x3, x11, x8
   4b990:	bl	c830 <mpfr_round_p@plt>
   4b994:	cbnz	w0, 4b9e8 <mpfr_y1@@Base+0x6d8>
   4b998:	cbnz	w25, 4ba80 <mpfr_y1@@Base+0x770>
   4b99c:	ldr	x20, [sp]
   4b9a0:	mov	x8, #0xfffffffffffffeff    	// #-257
   4b9a4:	movk	x8, #0x7fff, lsl #48
   4b9a8:	sub	x8, x8, x24
   4b9ac:	cmp	x20, x8
   4b9b0:	mov	w22, #0x1                   	// #1
   4b9b4:	b.gt	4b9cc <mpfr_y1@@Base+0x6bc>
   4b9b8:	add	x24, x24, x20
   4b9bc:	cmp	x24, #0x0
   4b9c0:	cinc	x8, x24, lt  // lt = tstop
   4b9c4:	asr	x11, x8, #1
   4b9c8:	b	4b3cc <mpfr_y1@@Base+0xbc>
   4b9cc:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4b9d0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   4b9d4:	mov	w1, #0x106                 	// #262
   4b9d8:	add	x0, x0, #0xd5e
   4b9dc:	add	x2, x2, #0xa3e
   4b9e0:	bl	d030 <mpfr_assert_fail@plt>
   4b9e4:	b	4b9b8 <mpfr_y1@@Base+0x6a8>
   4b9e8:	tbz	w27, #0, 4ba10 <mpfr_y1@@Base+0x700>
   4b9ec:	ldr	w8, [x21, #8]
   4b9f0:	cmp	w8, #0x1
   4b9f4:	b.ge	4ba10 <mpfr_y1@@Base+0x700>  // b.tcont
   4b9f8:	ldr	w19, [sp, #12]
   4b9fc:	sub	x1, x29, #0x48
   4ba00:	mov	x0, x26
   4ba04:	mov	w2, w19
   4ba08:	bl	c1d0 <mpfr_neg@plt>
   4ba0c:	b	4ba28 <mpfr_y1@@Base+0x718>
   4ba10:	ldr	w19, [sp, #12]
   4ba14:	ldur	w3, [x29, #-64]
   4ba18:	sub	x1, x29, #0x48
   4ba1c:	mov	x0, x26
   4ba20:	mov	w2, w19
   4ba24:	bl	cb70 <mpfr_set4@plt>
   4ba28:	mov	w20, w0
   4ba2c:	sub	x0, x29, #0x48
   4ba30:	bl	c4f0 <mpfr_clear@plt>
   4ba34:	cmp	w19, #0x5
   4ba38:	csinc	w0, w20, wzr, ne  // ne = any
   4ba3c:	ldp	x20, x19, [sp, #432]
   4ba40:	ldp	x22, x21, [sp, #416]
   4ba44:	ldp	x24, x23, [sp, #400]
   4ba48:	ldp	x26, x25, [sp, #384]
   4ba4c:	ldp	x28, x27, [sp, #368]
   4ba50:	ldp	x29, x30, [sp, #352]
   4ba54:	add	sp, sp, #0x1c0
   4ba58:	ret
   4ba5c:	mov	x8, xzr
   4ba60:	b	4b38c <mpfr_y1@@Base+0x7c>
   4ba64:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4ba68:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4ba6c:	add	x0, x0, #0xd5e
   4ba70:	add	x2, x2, #0xc37
   4ba74:	mov	w1, #0x36                  	// #54
   4ba78:	bl	d030 <mpfr_assert_fail@plt>
   4ba7c:	b	4b378 <mpfr_y1@@Base+0x68>
   4ba80:	sub	x0, x29, #0x48
   4ba84:	bl	c4f0 <mpfr_clear@plt>
   4ba88:	mov	w0, wzr
   4ba8c:	b	4ba3c <mpfr_y1@@Base+0x72c>
   4ba90:	sub	sp, sp, #0x50
   4ba94:	stp	x20, x19, [sp, #64]
   4ba98:	mov	x19, x0
   4ba9c:	mov	x0, sp
   4baa0:	stp	x29, x30, [sp, #16]
   4baa4:	stp	x24, x23, [sp, #32]
   4baa8:	stp	x22, x21, [sp, #48]
   4baac:	add	x29, sp, #0x10
   4bab0:	mov	x21, x2
   4bab4:	mov	x20, x1
   4bab8:	bl	c400 <mpfr_mpz_init@plt>
   4babc:	mov	x0, sp
   4bac0:	mov	w1, #0x1                   	// #1
   4bac4:	bl	c110 <__gmpz_set_ui@plt>
   4bac8:	mov	w1, #0x1                   	// #1
   4bacc:	mov	x0, x19
   4bad0:	mov	x2, xzr
   4bad4:	mov	w3, wzr
   4bad8:	bl	cac0 <mpfr_set_ui_2exp@plt>
   4badc:	ldr	x23, [x19, #16]
   4bae0:	cbz	x21, 4bb4c <mpfr_y1@@Base+0x83c>
   4bae4:	mov	w22, #0x1                   	// #1
   4bae8:	mov	x0, x19
   4baec:	mov	x1, x19
   4baf0:	mov	x2, x20
   4baf4:	mov	w3, wzr
   4baf8:	sub	x24, x21, #0x1
   4bafc:	bl	c1b0 <mpfr_mul@plt>
   4bb00:	mov	x0, sp
   4bb04:	mov	x1, sp
   4bb08:	mov	x2, x22
   4bb0c:	bl	c590 <__gmpz_mul_ui@plt>
   4bb10:	mov	x0, sp
   4bb14:	mov	x1, sp
   4bb18:	mov	x2, x21
   4bb1c:	bl	c590 <__gmpz_mul_ui@plt>
   4bb20:	mov	x2, sp
   4bb24:	mov	x0, x19
   4bb28:	mov	x1, x19
   4bb2c:	mov	w3, wzr
   4bb30:	bl	c950 <mpfr_add_z@plt>
   4bb34:	ldr	x8, [x19, #16]
   4bb38:	add	x22, x22, #0x1
   4bb3c:	mov	x21, x24
   4bb40:	cmp	x8, x23
   4bb44:	csel	x23, x8, x23, gt
   4bb48:	cbnz	x24, 4bae8 <mpfr_y1@@Base+0x7d8>
   4bb4c:	mov	x0, sp
   4bb50:	mov	x1, sp
   4bb54:	bl	c0c0 <__gmpz_sqrt@plt>
   4bb58:	mov	x2, sp
   4bb5c:	mov	x0, x19
   4bb60:	mov	x1, x19
   4bb64:	mov	w3, wzr
   4bb68:	bl	d180 <mpfr_div_z@plt>
   4bb6c:	mov	x0, sp
   4bb70:	bl	c610 <mpfr_mpz_clear@plt>
   4bb74:	ldr	x8, [x19, #16]
   4bb78:	ldp	x20, x19, [sp, #64]
   4bb7c:	ldp	x22, x21, [sp, #48]
   4bb80:	ldp	x29, x30, [sp, #16]
   4bb84:	sub	x0, x23, x8
   4bb88:	ldp	x24, x23, [sp, #32]
   4bb8c:	add	sp, sp, #0x50
   4bb90:	ret
   4bb94:	sub	sp, sp, #0xb0
   4bb98:	stp	x22, x21, [sp, #144]
   4bb9c:	mov	x21, x1
   4bba0:	stp	x20, x19, [sp, #160]
   4bba4:	mov	x19, x0
   4bba8:	mov	w1, #0x2                   	// #2
   4bbac:	mov	x0, x21
   4bbb0:	stp	x29, x30, [sp, #96]
   4bbb4:	stp	x26, x25, [sp, #112]
   4bbb8:	stp	x24, x23, [sp, #128]
   4bbbc:	add	x29, sp, #0x60
   4bbc0:	mov	x20, x3
   4bbc4:	mov	x22, x2
   4bbc8:	bl	c100 <mpfr_get_ui@plt>
   4bbcc:	mov	x23, x0
   4bbd0:	cmn	x0, #0x3
   4bbd4:	b.cs	4be34 <mpfr_y1@@Base+0xb24>  // b.hs, b.nlast
   4bbd8:	add	x0, sp, #0x10
   4bbdc:	bl	c400 <mpfr_mpz_init@plt>
   4bbe0:	add	x0, sp, #0x10
   4bbe4:	mov	x1, xzr
   4bbe8:	bl	c110 <__gmpz_set_ui@plt>
   4bbec:	mov	x0, sp
   4bbf0:	bl	c400 <mpfr_mpz_init@plt>
   4bbf4:	mov	x0, sp
   4bbf8:	mov	w1, #0x1                   	// #1
   4bbfc:	bl	c110 <__gmpz_set_ui@plt>
   4bc00:	cbz	x20, 4bc44 <mpfr_y1@@Base+0x934>
   4bc04:	mov	w24, #0x1                   	// #1
   4bc08:	add	x0, sp, #0x10
   4bc0c:	add	x1, sp, #0x10
   4bc10:	mov	x2, x24
   4bc14:	bl	c590 <__gmpz_mul_ui@plt>
   4bc18:	add	x0, sp, #0x10
   4bc1c:	add	x1, sp, #0x10
   4bc20:	mov	x2, sp
   4bc24:	bl	ceb0 <__gmpz_add@plt>
   4bc28:	mov	x0, sp
   4bc2c:	mov	x1, sp
   4bc30:	mov	x2, x24
   4bc34:	bl	c590 <__gmpz_mul_ui@plt>
   4bc38:	add	x24, x24, #0x1
   4bc3c:	cmp	x24, x20
   4bc40:	b.ls	4bc08 <mpfr_y1@@Base+0x8f8>  // b.plast
   4bc44:	ldr	x1, [x19]
   4bc48:	sub	x0, x29, #0x20
   4bc4c:	add	x24, x23, #0x2
   4bc50:	bl	cf60 <mpfr_init2@plt>
   4bc54:	ldr	x1, [x19]
   4bc58:	add	x0, sp, #0x20
   4bc5c:	bl	cf60 <mpfr_init2@plt>
   4bc60:	sub	x0, x29, #0x20
   4bc64:	mov	x1, x20
   4bc68:	mov	w2, wzr
   4bc6c:	bl	cbb0 <mpfr_fac_ui@plt>
   4bc70:	sub	x0, x29, #0x20
   4bc74:	sub	x2, x29, #0x20
   4bc78:	mov	x1, x22
   4bc7c:	mov	w3, wzr
   4bc80:	bl	caf0 <mpfr_div@plt>
   4bc84:	add	x0, sp, #0x20
   4bc88:	sub	x1, x29, #0x20
   4bc8c:	add	x2, sp, #0x10
   4bc90:	mov	w3, wzr
   4bc94:	bl	c9a0 <mpfr_mul_z@plt>
   4bc98:	add	x1, sp, #0x20
   4bc9c:	mov	x2, sp
   4bca0:	mov	x0, x19
   4bca4:	mov	w3, wzr
   4bca8:	bl	d180 <mpfr_div_z@plt>
   4bcac:	ldr	x25, [x19, #16]
   4bcb0:	mov	w22, #0x1                   	// #1
   4bcb4:	mov	w26, #0x2                   	// #2
   4bcb8:	b	4bcc4 <mpfr_y1@@Base+0x9b4>
   4bcbc:	add	x22, x22, #0x1
   4bcc0:	add	x26, x26, #0x2
   4bcc4:	sub	x0, x29, #0x20
   4bcc8:	sub	x1, x29, #0x20
   4bccc:	mov	x2, x21
   4bcd0:	mov	w3, wzr
   4bcd4:	bl	c1b0 <mpfr_mul@plt>
   4bcd8:	sub	x0, x29, #0x20
   4bcdc:	sub	x1, x29, #0x20
   4bce0:	mov	x2, x22
   4bce4:	mov	w3, wzr
   4bce8:	bl	d160 <mpfr_div_ui@plt>
   4bcec:	add	x23, x20, x22
   4bcf0:	sub	x0, x29, #0x20
   4bcf4:	sub	x1, x29, #0x20
   4bcf8:	mov	x2, x23
   4bcfc:	mov	w3, wzr
   4bd00:	bl	d160 <mpfr_div_ui@plt>
   4bd04:	add	x0, sp, #0x10
   4bd08:	add	x1, sp, #0x10
   4bd0c:	mov	x2, x22
   4bd10:	bl	c590 <__gmpz_mul_ui@plt>
   4bd14:	add	x0, sp, #0x10
   4bd18:	add	x1, sp, #0x10
   4bd1c:	mov	x2, x23
   4bd20:	bl	c590 <__gmpz_mul_ui@plt>
   4bd24:	add	x2, x20, x26
   4bd28:	add	x0, sp, #0x10
   4bd2c:	mov	x1, sp
   4bd30:	bl	d130 <__gmpz_addmul_ui@plt>
   4bd34:	mov	x0, sp
   4bd38:	mov	x1, sp
   4bd3c:	mov	x2, x22
   4bd40:	bl	c590 <__gmpz_mul_ui@plt>
   4bd44:	mov	x0, sp
   4bd48:	mov	x1, sp
   4bd4c:	mov	x2, x23
   4bd50:	bl	c590 <__gmpz_mul_ui@plt>
   4bd54:	add	x0, sp, #0x20
   4bd58:	sub	x1, x29, #0x20
   4bd5c:	add	x2, sp, #0x10
   4bd60:	mov	w3, wzr
   4bd64:	bl	c9a0 <mpfr_mul_z@plt>
   4bd68:	add	x0, sp, #0x20
   4bd6c:	add	x1, sp, #0x20
   4bd70:	mov	x2, sp
   4bd74:	mov	w3, wzr
   4bd78:	bl	d180 <mpfr_div_z@plt>
   4bd7c:	ldr	x8, [sp, #48]
   4bd80:	add	x2, sp, #0x20
   4bd84:	mov	x0, x19
   4bd88:	mov	x1, x19
   4bd8c:	cmp	x8, x25
   4bd90:	mov	w3, wzr
   4bd94:	csel	x25, x8, x25, gt
   4bd98:	bl	c640 <mpfr_add@plt>
   4bd9c:	ldr	x8, [x19, #16]
   4bda0:	ldr	x9, [sp, #48]
   4bda4:	ldr	x10, [sp, #32]
   4bda8:	cmp	x8, x25
   4bdac:	csel	x25, x8, x25, gt
   4bdb0:	add	x9, x10, x9
   4bdb4:	cmp	x9, x8
   4bdb8:	b.ge	4bcbc <mpfr_y1@@Base+0x9ac>  // b.tcont
   4bdbc:	udiv	x8, x24, x26
   4bdc0:	cmp	x8, x23
   4bdc4:	b.cs	4bcbc <mpfr_y1@@Base+0x9ac>  // b.hs, b.nlast
   4bdc8:	sub	x0, x29, #0x20
   4bdcc:	bl	c4f0 <mpfr_clear@plt>
   4bdd0:	add	x0, sp, #0x20
   4bdd4:	bl	c4f0 <mpfr_clear@plt>
   4bdd8:	add	x0, sp, #0x10
   4bddc:	bl	c610 <mpfr_mpz_clear@plt>
   4bde0:	mov	x0, sp
   4bde4:	bl	c610 <mpfr_mpz_clear@plt>
   4bde8:	ldr	x8, [x19, #16]
   4bdec:	cmn	x22, #0x1
   4bdf0:	sub	x19, x25, x8
   4bdf4:	b.eq	4be50 <mpfr_y1@@Base+0xb40>  // b.none
   4bdf8:	cmn	x22, #0x2
   4bdfc:	b.eq	4be58 <mpfr_y1@@Base+0xb48>  // b.none
   4be00:	add	x8, x22, #0x1
   4be04:	clz	x8, x8
   4be08:	mov	w9, #0x83                  	// #131
   4be0c:	sub	w8, w9, w8, lsl #1
   4be10:	sxtw	x8, w8
   4be14:	add	x0, x19, x8
   4be18:	ldp	x20, x19, [sp, #160]
   4be1c:	ldp	x22, x21, [sp, #144]
   4be20:	ldp	x24, x23, [sp, #128]
   4be24:	ldp	x26, x25, [sp, #112]
   4be28:	ldp	x29, x30, [sp, #96]
   4be2c:	add	sp, sp, #0xb0
   4be30:	ret
   4be34:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4be38:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4be3c:	add	x0, x0, #0xd6d
   4be40:	add	x2, x2, #0xd85
   4be44:	mov	w1, #0x5d                  	// #93
   4be48:	bl	d030 <mpfr_assert_fail@plt>
   4be4c:	b	4bbd8 <mpfr_y1@@Base+0x8c8>
   4be50:	mov	w8, #0x3                   	// #3
   4be54:	b	4be14 <mpfr_y1@@Base+0xb04>
   4be58:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4be5c:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4be60:	add	x0, x0, #0xd6d
   4be64:	add	x2, x2, #0xc9c
   4be68:	mov	w1, #0x92                  	// #146
   4be6c:	bl	d030 <mpfr_assert_fail@plt>
   4be70:	b	4be00 <mpfr_y1@@Base+0xaf0>

000000000004be74 <mpfr_remainder@@Base>:
   4be74:	stp	x29, x30, [sp, #-16]!
   4be78:	mov	w5, w3
   4be7c:	mov	x4, x2
   4be80:	mov	x3, x1
   4be84:	mov	x1, xzr
   4be88:	mov	w2, wzr
   4be8c:	mov	x29, sp
   4be90:	bl	4be9c <mpfr_remainder@@Base+0x28>
   4be94:	ldp	x29, x30, [sp], #16
   4be98:	ret
   4be9c:	sub	sp, sp, #0xa0
   4bea0:	stp	x29, x30, [sp, #64]
   4bea4:	stp	x28, x27, [sp, #80]
   4bea8:	stp	x26, x25, [sp, #96]
   4beac:	stp	x24, x23, [sp, #112]
   4beb0:	stp	x22, x21, [sp, #128]
   4beb4:	stp	x20, x19, [sp, #144]
   4beb8:	ldr	x9, [x3, #16]
   4bebc:	mov	x8, #0x2                   	// #2
   4bec0:	ldr	w20, [x3, #8]
   4bec4:	movk	x8, #0x8000, lsl #48
   4bec8:	add	x10, x8, #0x2
   4becc:	mov	w27, w5
   4bed0:	mov	x25, x4
   4bed4:	mov	x23, x3
   4bed8:	mov	x19, x1
   4bedc:	cmp	x9, x10
   4bee0:	mov	x22, x0
   4bee4:	add	x29, sp, #0x40
   4bee8:	b.lt	4c294 <mpfr_remainder@@Base+0x420>  // b.tstop
   4beec:	ldr	x11, [x25, #16]
   4bef0:	cmp	x11, x10
   4bef4:	b.lt	4c294 <mpfr_remainder@@Base+0x420>  // b.tstop
   4bef8:	sub	x0, x29, #0x10
   4befc:	mov	w24, w2
   4bf00:	bl	c400 <mpfr_mpz_init@plt>
   4bf04:	add	x0, sp, #0x20
   4bf08:	bl	c400 <mpfr_mpz_init@plt>
   4bf0c:	add	x0, sp, #0x10
   4bf10:	bl	c400 <mpfr_mpz_init@plt>
   4bf14:	sub	x0, x29, #0x10
   4bf18:	mov	x1, x23
   4bf1c:	bl	cfb0 <mpfr_get_z_2exp@plt>
   4bf20:	mov	x23, x0
   4bf24:	add	x0, sp, #0x20
   4bf28:	mov	x1, x25
   4bf2c:	bl	cfb0 <mpfr_get_z_2exp@plt>
   4bf30:	ldr	w21, [x25, #8]
   4bf34:	mov	x25, x0
   4bf38:	sub	x0, x29, #0x10
   4bf3c:	sub	x1, x29, #0x10
   4bf40:	bl	be70 <__gmpz_abs@plt>
   4bf44:	add	x0, sp, #0x20
   4bf48:	add	x1, sp, #0x20
   4bf4c:	bl	be70 <__gmpz_abs@plt>
   4bf50:	add	x0, sp, #0x20
   4bf54:	mov	x1, xzr
   4bf58:	bl	bee0 <__gmpz_scan1@plt>
   4bf5c:	mov	x2, x0
   4bf60:	add	x28, x0, x25
   4bf64:	add	x0, sp, #0x20
   4bf68:	add	x1, sp, #0x20
   4bf6c:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   4bf70:	subs	x25, x28, x23
   4bf74:	str	w21, [sp, #12]
   4bf78:	b.ge	4bf94 <mpfr_remainder@@Base+0x120>  // b.tcont
   4bf7c:	cbz	x19, 4c050 <mpfr_remainder@@Base+0x1dc>
   4bf80:	mov	w2, #0x3f                  	// #63
   4bf84:	add	x0, sp, #0x20
   4bf88:	add	x1, sp, #0x20
   4bf8c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   4bf90:	b	4c054 <mpfr_remainder@@Base+0x1e0>
   4bf94:	sub	x0, x29, #0x10
   4bf98:	mov	w1, #0x2                   	// #2
   4bf9c:	bl	d050 <__gmpz_sizeinbase@plt>
   4bfa0:	add	x21, x0, x23
   4bfa4:	add	x0, sp, #0x20
   4bfa8:	mov	w1, #0x2                   	// #2
   4bfac:	bl	d050 <__gmpz_sizeinbase@plt>
   4bfb0:	add	x8, x0, x28
   4bfb4:	cmp	x21, x8
   4bfb8:	b.ge	4bfe8 <mpfr_remainder@@Base+0x174>  // b.tcont
   4bfbc:	add	x0, sp, #0x10
   4bfc0:	sub	x1, x29, #0x10
   4bfc4:	bl	c410 <__gmpz_set@plt>
   4bfc8:	sub	x0, x29, #0x10
   4bfcc:	mov	x1, xzr
   4bfd0:	bl	c110 <__gmpz_set_ui@plt>
   4bfd4:	mov	w21, #0x1                   	// #1
   4bfd8:	cbz	w24, 4c014 <mpfr_remainder@@Base+0x1a0>
   4bfdc:	mov	w26, wzr
   4bfe0:	cbnz	x19, 4c028 <mpfr_remainder@@Base+0x1b4>
   4bfe4:	b	4c0d0 <mpfr_remainder@@Base+0x25c>
   4bfe8:	add	x0, sp, #0x20
   4bfec:	add	x1, sp, #0x20
   4bff0:	mov	x2, x25
   4bff4:	bl	c6a0 <__gmpz_mul_2exp@plt>
   4bff8:	sub	x0, x29, #0x10
   4bffc:	add	x1, sp, #0x10
   4c000:	sub	x2, x29, #0x10
   4c004:	add	x3, sp, #0x20
   4c008:	bl	bf20 <__gmpz_tdiv_qr@plt>
   4c00c:	mov	w21, wzr
   4c010:	cbnz	w24, 4bfdc <mpfr_remainder@@Base+0x168>
   4c014:	sub	x0, x29, #0x10
   4c018:	mov	x1, xzr
   4c01c:	bl	c450 <__gmpz_tstbit@plt>
   4c020:	mov	w26, w0
   4c024:	cbz	x19, 4c0d0 <mpfr_remainder@@Base+0x25c>
   4c028:	sub	x0, x29, #0x10
   4c02c:	sub	x1, x29, #0x10
   4c030:	mov	w2, #0x3f                  	// #63
   4c034:	bl	be80 <__gmpz_tdiv_r_2exp@plt>
   4c038:	sub	x0, x29, #0x10
   4c03c:	bl	be60 <__gmpz_get_si@plt>
   4c040:	str	x0, [x19]
   4c044:	ldr	w8, [sp, #20]
   4c048:	cbnz	w8, 4c0d8 <mpfr_remainder@@Base+0x264>
   4c04c:	b	4c20c <mpfr_remainder@@Base+0x398>
   4c050:	cbz	w24, 4c1c0 <mpfr_remainder@@Base+0x34c>
   4c054:	add	x0, sp, #0x10
   4c058:	mov	w1, #0x2                   	// #2
   4c05c:	bl	c110 <__gmpz_set_ui@plt>
   4c060:	sub	x2, x23, x28
   4c064:	add	x0, sp, #0x10
   4c068:	add	x1, sp, #0x10
   4c06c:	add	x3, sp, #0x20
   4c070:	bl	d0b0 <__gmpz_powm_ui@plt>
   4c074:	add	x0, sp, #0x10
   4c078:	add	x1, sp, #0x10
   4c07c:	sub	x2, x29, #0x10
   4c080:	bl	c460 <__gmpz_mul@plt>
   4c084:	add	x0, sp, #0x10
   4c088:	add	x1, sp, #0x10
   4c08c:	add	x2, sp, #0x20
   4c090:	bl	cd80 <__gmpz_mod@plt>
   4c094:	cbz	x19, 4c120 <mpfr_remainder@@Base+0x2ac>
   4c098:	add	x0, sp, #0x20
   4c09c:	add	x1, sp, #0x20
   4c0a0:	mov	w2, #0x3f                  	// #63
   4c0a4:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   4c0a8:	sub	x0, x29, #0x10
   4c0ac:	add	x1, sp, #0x10
   4c0b0:	add	x2, sp, #0x10
   4c0b4:	add	x3, sp, #0x20
   4c0b8:	bl	bf20 <__gmpz_tdiv_qr@plt>
   4c0bc:	sub	x0, x29, #0x10
   4c0c0:	bl	be60 <__gmpz_get_si@plt>
   4c0c4:	mov	w21, wzr
   4c0c8:	str	x0, [x19]
   4c0cc:	and	w26, w0, #0x1
   4c0d0:	ldr	w8, [sp, #20]
   4c0d4:	cbz	w8, 4c20c <mpfr_remainder@@Base+0x398>
   4c0d8:	cbnz	w24, 4c18c <mpfr_remainder@@Base+0x318>
   4c0dc:	add	x0, sp, #0x10
   4c0e0:	add	x1, sp, #0x10
   4c0e4:	mov	w2, #0x1                   	// #1
   4c0e8:	bl	c6a0 <__gmpz_mul_2exp@plt>
   4c0ec:	cbz	w21, 4c13c <mpfr_remainder@@Base+0x2c8>
   4c0f0:	add	x0, sp, #0x10
   4c0f4:	mov	w1, #0x2                   	// #2
   4c0f8:	bl	d050 <__gmpz_sizeinbase@plt>
   4c0fc:	add	x21, x0, x23
   4c100:	add	x0, sp, #0x20
   4c104:	mov	w1, #0x2                   	// #2
   4c108:	bl	d050 <__gmpz_sizeinbase@plt>
   4c10c:	add	x8, x0, x28
   4c110:	cmp	x21, x8
   4c114:	b.ge	4c12c <mpfr_remainder@@Base+0x2b8>  // b.tcont
   4c118:	mov	w24, wzr
   4c11c:	b	4c14c <mpfr_remainder@@Base+0x2d8>
   4c120:	cbz	w24, 4c1c8 <mpfr_remainder@@Base+0x354>
   4c124:	mov	w26, wzr
   4c128:	b	4c200 <mpfr_remainder@@Base+0x38c>
   4c12c:	add	x0, sp, #0x20
   4c130:	add	x1, sp, #0x20
   4c134:	mov	x2, x25
   4c138:	bl	c6a0 <__gmpz_mul_2exp@plt>
   4c13c:	add	x0, sp, #0x10
   4c140:	add	x1, sp, #0x20
   4c144:	bl	c340 <__gmpz_cmpabs@plt>
   4c148:	mov	w24, w0
   4c14c:	add	x0, sp, #0x10
   4c150:	add	x1, sp, #0x10
   4c154:	mov	w2, #0x1                   	// #1
   4c158:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   4c15c:	cmp	w24, #0x0
   4c160:	b.gt	4c16c <mpfr_remainder@@Base+0x2f8>
   4c164:	cbz	w26, 4c18c <mpfr_remainder@@Base+0x318>
   4c168:	cbnz	w24, 4c18c <mpfr_remainder@@Base+0x318>
   4c16c:	add	x0, sp, #0x10
   4c170:	add	x1, sp, #0x10
   4c174:	add	x2, sp, #0x20
   4c178:	bl	c240 <__gmpz_sub@plt>
   4c17c:	cbz	x19, 4c18c <mpfr_remainder@@Base+0x318>
   4c180:	ldr	x8, [x19]
   4c184:	add	x8, x8, #0x1
   4c188:	str	x8, [x19]
   4c18c:	tbz	w20, #31, 4c19c <mpfr_remainder@@Base+0x328>
   4c190:	add	x0, sp, #0x10
   4c194:	add	x1, sp, #0x10
   4c198:	bl	c4e0 <__gmpz_neg@plt>
   4c19c:	cmp	x28, x23
   4c1a0:	csel	x2, x28, x23, lt  // lt = tstop
   4c1a4:	add	x1, sp, #0x10
   4c1a8:	mov	x0, x22
   4c1ac:	mov	w3, w27
   4c1b0:	bl	c9c0 <mpfr_set_z_2exp@plt>
   4c1b4:	mov	w21, w0
   4c1b8:	cbnz	x19, 4c228 <mpfr_remainder@@Base+0x3b4>
   4c1bc:	b	4c23c <mpfr_remainder@@Base+0x3c8>
   4c1c0:	mov	w2, #0x1                   	// #1
   4c1c4:	b	4bf84 <mpfr_remainder@@Base+0x110>
   4c1c8:	add	x0, sp, #0x20
   4c1cc:	add	x1, sp, #0x20
   4c1d0:	mov	w2, #0x1                   	// #1
   4c1d4:	bl	c5d0 <__gmpz_fdiv_q_2exp@plt>
   4c1d8:	add	x0, sp, #0x10
   4c1dc:	add	x1, sp, #0x20
   4c1e0:	bl	c340 <__gmpz_cmpabs@plt>
   4c1e4:	mvn	w8, w0
   4c1e8:	lsr	w26, w8, #31
   4c1ec:	tbnz	w0, #31, 4c200 <mpfr_remainder@@Base+0x38c>
   4c1f0:	add	x0, sp, #0x10
   4c1f4:	add	x1, sp, #0x10
   4c1f8:	add	x2, sp, #0x20
   4c1fc:	bl	c240 <__gmpz_sub@plt>
   4c200:	mov	w21, wzr
   4c204:	ldr	w8, [sp, #20]
   4c208:	cbnz	w8, 4c0d8 <mpfr_remainder@@Base+0x264>
   4c20c:	mov	w8, #0x1                   	// #1
   4c210:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4c214:	str	w8, [x22, #8]
   4c218:	str	x9, [x22, #16]
   4c21c:	tbnz	w20, #31, 4c278 <mpfr_remainder@@Base+0x404>
   4c220:	mov	w21, wzr
   4c224:	cbz	x19, 4c23c <mpfr_remainder@@Base+0x3c8>
   4c228:	ldr	w9, [sp, #12]
   4c22c:	ldr	x8, [x19]
   4c230:	cmp	w20, w9
   4c234:	cneg	x8, x8, ne  // ne = any
   4c238:	str	x8, [x19]
   4c23c:	sub	x0, x29, #0x10
   4c240:	bl	c610 <mpfr_mpz_clear@plt>
   4c244:	add	x0, sp, #0x20
   4c248:	bl	c610 <mpfr_mpz_clear@plt>
   4c24c:	add	x0, sp, #0x10
   4c250:	bl	c610 <mpfr_mpz_clear@plt>
   4c254:	mov	w0, w21
   4c258:	ldp	x20, x19, [sp, #144]
   4c25c:	ldp	x22, x21, [sp, #128]
   4c260:	ldp	x24, x23, [sp, #112]
   4c264:	ldp	x26, x25, [sp, #96]
   4c268:	ldp	x28, x27, [sp, #80]
   4c26c:	ldp	x29, x30, [sp, #64]
   4c270:	add	sp, sp, #0xa0
   4c274:	ret
   4c278:	mov	x0, x22
   4c27c:	mov	x1, x22
   4c280:	mov	w2, wzr
   4c284:	bl	c1d0 <mpfr_neg@plt>
   4c288:	mov	w21, wzr
   4c28c:	cbnz	x19, 4c228 <mpfr_remainder@@Base+0x3b4>
   4c290:	b	4c23c <mpfr_remainder@@Base+0x3c8>
   4c294:	cmp	x9, x8
   4c298:	b.ne	4c2c8 <mpfr_remainder@@Base+0x454>  // b.any
   4c29c:	str	x8, [x22, #16]
   4c2a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c2a4:	ldr	x1, [x0, #2800]
   4c2a8:	add	x0, x0, #0xaf0
   4c2ac:	blr	x1
   4c2b0:	mrs	x8, tpidr_el0
   4c2b4:	ldr	w9, [x8, x0]
   4c2b8:	mov	w21, wzr
   4c2bc:	orr	w9, w9, #0x4
   4c2c0:	str	w9, [x8, x0]
   4c2c4:	b	4c254 <mpfr_remainder@@Base+0x3e0>
   4c2c8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   4c2cc:	cmp	x9, x10
   4c2d0:	b.eq	4c29c <mpfr_remainder@@Base+0x428>  // b.none
   4c2d4:	ldr	x9, [x25, #16]
   4c2d8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
   4c2dc:	add	x9, x9, x10
   4c2e0:	cmp	x9, #0x1
   4c2e4:	b.ls	4c29c <mpfr_remainder@@Base+0x428>  // b.plast
   4c2e8:	cbz	x19, 4c2f0 <mpfr_remainder@@Base+0x47c>
   4c2ec:	str	xzr, [x19]
   4c2f0:	mov	x0, x22
   4c2f4:	mov	x1, x23
   4c2f8:	mov	w2, w27
   4c2fc:	mov	w3, w20
   4c300:	bl	cb70 <mpfr_set4@plt>
   4c304:	mov	w21, w0
   4c308:	b	4c254 <mpfr_remainder@@Base+0x3e0>

000000000004c30c <mpfr_remquo@@Base>:
   4c30c:	stp	x29, x30, [sp, #-16]!
   4c310:	mov	w5, w4
   4c314:	mov	x4, x3
   4c318:	mov	x3, x2
   4c31c:	mov	w2, wzr
   4c320:	mov	x29, sp
   4c324:	bl	4be9c <mpfr_remainder@@Base+0x28>
   4c328:	ldp	x29, x30, [sp], #16
   4c32c:	ret

000000000004c330 <mpfr_fmod@@Base>:
   4c330:	stp	x29, x30, [sp, #-16]!
   4c334:	mov	w5, w3
   4c338:	mov	x4, x2
   4c33c:	mov	x3, x1
   4c340:	mov	w2, #0x1                   	// #1
   4c344:	mov	x1, xzr
   4c348:	mov	x29, sp
   4c34c:	bl	4be9c <mpfr_remainder@@Base+0x28>
   4c350:	ldp	x29, x30, [sp], #16
   4c354:	ret

000000000004c358 <mpfr_fmodquo@@Base>:
   4c358:	stp	x29, x30, [sp, #-16]!
   4c35c:	mov	w5, w4
   4c360:	mov	x4, x3
   4c364:	mov	x3, x2
   4c368:	mov	w2, #0x1                   	// #1
   4c36c:	mov	x29, sp
   4c370:	bl	4be9c <mpfr_remainder@@Base+0x28>
   4c374:	ldp	x29, x30, [sp], #16
   4c378:	ret

000000000004c37c <mpfr_get_patches@@Base>:
   4c37c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4c380:	add	x0, x0, #0x423
   4c384:	ret

000000000004c388 <mpfr_add_d@@Base>:
   4c388:	sub	sp, sp, #0x90
   4c38c:	stp	x29, x30, [sp, #48]
   4c390:	stp	x28, x27, [sp, #64]
   4c394:	stp	x26, x25, [sp, #80]
   4c398:	stp	x24, x23, [sp, #96]
   4c39c:	stp	x22, x21, [sp, #112]
   4c3a0:	stp	x20, x19, [sp, #128]
   4c3a4:	add	x29, sp, #0x30
   4c3a8:	mov	w19, w2
   4c3ac:	mov	x21, x1
   4c3b0:	mov	x20, x0
   4c3b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c3b8:	ldr	x1, [x0, #2800]
   4c3bc:	add	x0, x0, #0xaf0
   4c3c0:	blr	x1
   4c3c4:	mrs	x25, tpidr_el0
   4c3c8:	ldr	w27, [x25, x0]
   4c3cc:	mov	x22, x0
   4c3d0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c3d4:	ldr	x1, [x0, #2736]
   4c3d8:	add	x0, x0, #0xab0
   4c3dc:	blr	x1
   4c3e0:	ldr	x26, [x25, x0]
   4c3e4:	mov	x23, x0
   4c3e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c3ec:	ldr	x1, [x0, #2768]
   4c3f0:	add	x0, x0, #0xad0
   4c3f4:	blr	x1
   4c3f8:	ldr	x28, [x25, x0]
   4c3fc:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4c400:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4c404:	mov	x24, x0
   4c408:	mov	w10, #0x35                  	// #53
   4c40c:	add	x11, sp, #0x8
   4c410:	str	x8, [x25, x23]
   4c414:	str	x9, [x25, x0]
   4c418:	mov	w8, #0x1                   	// #1
   4c41c:	add	x0, sp, #0x10
   4c420:	mov	w1, w2
   4c424:	str	x10, [sp, #16]
   4c428:	str	x11, [sp, #40]
   4c42c:	str	w8, [sp, #24]
   4c430:	bl	c2a0 <mpfr_set_d@plt>
   4c434:	add	x2, sp, #0x10
   4c438:	mov	x0, x20
   4c43c:	mov	x1, x21
   4c440:	mov	w3, w19
   4c444:	str	wzr, [x25, x22]
   4c448:	bl	c640 <mpfr_add@plt>
   4c44c:	ldr	w8, [x25, x22]
   4c450:	str	x26, [x25, x23]
   4c454:	str	x28, [x25, x24]
   4c458:	orr	w9, w8, w27
   4c45c:	str	w9, [x25, x22]
   4c460:	ldr	x10, [x20, #16]
   4c464:	mov	w8, w0
   4c468:	cmp	x10, x28
   4c46c:	b.gt	4c4b8 <mpfr_add_d@@Base+0x130>
   4c470:	cmp	x10, x26
   4c474:	b.lt	4c4b8 <mpfr_add_d@@Base+0x130>  // b.tstop
   4c478:	cbz	w8, 4c494 <mpfr_add_d@@Base+0x10c>
   4c47c:	orr	w9, w9, #0x8
   4c480:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c484:	ldr	x1, [x0, #2800]
   4c488:	add	x0, x0, #0xaf0
   4c48c:	blr	x1
   4c490:	str	w9, [x25, x0]
   4c494:	ldp	x20, x19, [sp, #128]
   4c498:	ldp	x22, x21, [sp, #112]
   4c49c:	ldp	x24, x23, [sp, #96]
   4c4a0:	ldp	x26, x25, [sp, #80]
   4c4a4:	ldp	x28, x27, [sp, #64]
   4c4a8:	ldp	x29, x30, [sp, #48]
   4c4ac:	mov	w0, w8
   4c4b0:	add	sp, sp, #0x90
   4c4b4:	ret
   4c4b8:	mov	x0, x20
   4c4bc:	mov	w1, w8
   4c4c0:	mov	w2, w19
   4c4c4:	bl	d020 <mpfr_check_range@plt>
   4c4c8:	mov	w8, w0
   4c4cc:	b	4c494 <mpfr_add_d@@Base+0x10c>

000000000004c4d0 <mpfr_sub_d@@Base>:
   4c4d0:	sub	sp, sp, #0x90
   4c4d4:	stp	x29, x30, [sp, #48]
   4c4d8:	stp	x28, x27, [sp, #64]
   4c4dc:	stp	x26, x25, [sp, #80]
   4c4e0:	stp	x24, x23, [sp, #96]
   4c4e4:	stp	x22, x21, [sp, #112]
   4c4e8:	stp	x20, x19, [sp, #128]
   4c4ec:	add	x29, sp, #0x30
   4c4f0:	mov	w19, w2
   4c4f4:	mov	x21, x1
   4c4f8:	mov	x20, x0
   4c4fc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c500:	ldr	x1, [x0, #2800]
   4c504:	add	x0, x0, #0xaf0
   4c508:	blr	x1
   4c50c:	mrs	x25, tpidr_el0
   4c510:	ldr	w27, [x25, x0]
   4c514:	mov	x22, x0
   4c518:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c51c:	ldr	x1, [x0, #2736]
   4c520:	add	x0, x0, #0xab0
   4c524:	blr	x1
   4c528:	ldr	x26, [x25, x0]
   4c52c:	mov	x23, x0
   4c530:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c534:	ldr	x1, [x0, #2768]
   4c538:	add	x0, x0, #0xad0
   4c53c:	blr	x1
   4c540:	ldr	x28, [x25, x0]
   4c544:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4c548:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4c54c:	mov	x24, x0
   4c550:	mov	w10, #0x35                  	// #53
   4c554:	add	x11, sp, #0x8
   4c558:	str	x8, [x25, x23]
   4c55c:	str	x9, [x25, x0]
   4c560:	mov	w8, #0x1                   	// #1
   4c564:	add	x0, sp, #0x10
   4c568:	mov	w1, w2
   4c56c:	str	x10, [sp, #16]
   4c570:	str	x11, [sp, #40]
   4c574:	str	w8, [sp, #24]
   4c578:	bl	c2a0 <mpfr_set_d@plt>
   4c57c:	add	x2, sp, #0x10
   4c580:	mov	x0, x20
   4c584:	mov	x1, x21
   4c588:	mov	w3, w19
   4c58c:	str	wzr, [x25, x22]
   4c590:	bl	bfd0 <mpfr_sub@plt>
   4c594:	ldr	w8, [x25, x22]
   4c598:	str	x26, [x25, x23]
   4c59c:	str	x28, [x25, x24]
   4c5a0:	orr	w9, w8, w27
   4c5a4:	str	w9, [x25, x22]
   4c5a8:	ldr	x10, [x20, #16]
   4c5ac:	mov	w8, w0
   4c5b0:	cmp	x10, x28
   4c5b4:	b.gt	4c600 <mpfr_sub_d@@Base+0x130>
   4c5b8:	cmp	x10, x26
   4c5bc:	b.lt	4c600 <mpfr_sub_d@@Base+0x130>  // b.tstop
   4c5c0:	cbz	w8, 4c5dc <mpfr_sub_d@@Base+0x10c>
   4c5c4:	orr	w9, w9, #0x8
   4c5c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c5cc:	ldr	x1, [x0, #2800]
   4c5d0:	add	x0, x0, #0xaf0
   4c5d4:	blr	x1
   4c5d8:	str	w9, [x25, x0]
   4c5dc:	ldp	x20, x19, [sp, #128]
   4c5e0:	ldp	x22, x21, [sp, #112]
   4c5e4:	ldp	x24, x23, [sp, #96]
   4c5e8:	ldp	x26, x25, [sp, #80]
   4c5ec:	ldp	x28, x27, [sp, #64]
   4c5f0:	ldp	x29, x30, [sp, #48]
   4c5f4:	mov	w0, w8
   4c5f8:	add	sp, sp, #0x90
   4c5fc:	ret
   4c600:	mov	x0, x20
   4c604:	mov	w1, w8
   4c608:	mov	w2, w19
   4c60c:	bl	d020 <mpfr_check_range@plt>
   4c610:	mov	w8, w0
   4c614:	b	4c5dc <mpfr_sub_d@@Base+0x10c>

000000000004c618 <mpfr_d_sub@@Base>:
   4c618:	sub	sp, sp, #0x90
   4c61c:	stp	x29, x30, [sp, #48]
   4c620:	stp	x28, x27, [sp, #64]
   4c624:	stp	x26, x25, [sp, #80]
   4c628:	stp	x24, x23, [sp, #96]
   4c62c:	stp	x22, x21, [sp, #112]
   4c630:	stp	x20, x19, [sp, #128]
   4c634:	add	x29, sp, #0x30
   4c638:	mov	w19, w2
   4c63c:	mov	x21, x1
   4c640:	mov	x20, x0
   4c644:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c648:	ldr	x1, [x0, #2800]
   4c64c:	add	x0, x0, #0xaf0
   4c650:	blr	x1
   4c654:	mrs	x25, tpidr_el0
   4c658:	ldr	w27, [x25, x0]
   4c65c:	mov	x22, x0
   4c660:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c664:	ldr	x1, [x0, #2736]
   4c668:	add	x0, x0, #0xab0
   4c66c:	blr	x1
   4c670:	ldr	x26, [x25, x0]
   4c674:	mov	x23, x0
   4c678:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c67c:	ldr	x1, [x0, #2768]
   4c680:	add	x0, x0, #0xad0
   4c684:	blr	x1
   4c688:	ldr	x28, [x25, x0]
   4c68c:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4c690:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4c694:	mov	x24, x0
   4c698:	mov	w10, #0x35                  	// #53
   4c69c:	add	x11, sp, #0x8
   4c6a0:	str	x8, [x25, x23]
   4c6a4:	str	x9, [x25, x0]
   4c6a8:	mov	w8, #0x1                   	// #1
   4c6ac:	add	x0, sp, #0x10
   4c6b0:	mov	w1, w2
   4c6b4:	str	x10, [sp, #16]
   4c6b8:	str	x11, [sp, #40]
   4c6bc:	str	w8, [sp, #24]
   4c6c0:	bl	c2a0 <mpfr_set_d@plt>
   4c6c4:	add	x1, sp, #0x10
   4c6c8:	mov	x0, x20
   4c6cc:	mov	x2, x21
   4c6d0:	mov	w3, w19
   4c6d4:	str	wzr, [x25, x22]
   4c6d8:	bl	bfd0 <mpfr_sub@plt>
   4c6dc:	ldr	w8, [x25, x22]
   4c6e0:	str	x26, [x25, x23]
   4c6e4:	str	x28, [x25, x24]
   4c6e8:	orr	w9, w8, w27
   4c6ec:	str	w9, [x25, x22]
   4c6f0:	ldr	x10, [x20, #16]
   4c6f4:	mov	w8, w0
   4c6f8:	cmp	x10, x28
   4c6fc:	b.gt	4c748 <mpfr_d_sub@@Base+0x130>
   4c700:	cmp	x10, x26
   4c704:	b.lt	4c748 <mpfr_d_sub@@Base+0x130>  // b.tstop
   4c708:	cbz	w8, 4c724 <mpfr_d_sub@@Base+0x10c>
   4c70c:	orr	w9, w9, #0x8
   4c710:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c714:	ldr	x1, [x0, #2800]
   4c718:	add	x0, x0, #0xaf0
   4c71c:	blr	x1
   4c720:	str	w9, [x25, x0]
   4c724:	ldp	x20, x19, [sp, #128]
   4c728:	ldp	x22, x21, [sp, #112]
   4c72c:	ldp	x24, x23, [sp, #96]
   4c730:	ldp	x26, x25, [sp, #80]
   4c734:	ldp	x28, x27, [sp, #64]
   4c738:	ldp	x29, x30, [sp, #48]
   4c73c:	mov	w0, w8
   4c740:	add	sp, sp, #0x90
   4c744:	ret
   4c748:	mov	x0, x20
   4c74c:	mov	w1, w8
   4c750:	mov	w2, w19
   4c754:	bl	d020 <mpfr_check_range@plt>
   4c758:	mov	w8, w0
   4c75c:	b	4c724 <mpfr_d_sub@@Base+0x10c>

000000000004c760 <mpfr_mul_d@@Base>:
   4c760:	sub	sp, sp, #0x90
   4c764:	stp	x29, x30, [sp, #48]
   4c768:	stp	x28, x27, [sp, #64]
   4c76c:	stp	x26, x25, [sp, #80]
   4c770:	stp	x24, x23, [sp, #96]
   4c774:	stp	x22, x21, [sp, #112]
   4c778:	stp	x20, x19, [sp, #128]
   4c77c:	add	x29, sp, #0x30
   4c780:	mov	w19, w2
   4c784:	mov	x21, x1
   4c788:	mov	x20, x0
   4c78c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c790:	ldr	x1, [x0, #2800]
   4c794:	add	x0, x0, #0xaf0
   4c798:	blr	x1
   4c79c:	mrs	x25, tpidr_el0
   4c7a0:	ldr	w27, [x25, x0]
   4c7a4:	mov	x22, x0
   4c7a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c7ac:	ldr	x1, [x0, #2736]
   4c7b0:	add	x0, x0, #0xab0
   4c7b4:	blr	x1
   4c7b8:	ldr	x26, [x25, x0]
   4c7bc:	mov	x23, x0
   4c7c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c7c4:	ldr	x1, [x0, #2768]
   4c7c8:	add	x0, x0, #0xad0
   4c7cc:	blr	x1
   4c7d0:	ldr	x28, [x25, x0]
   4c7d4:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4c7d8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4c7dc:	mov	x24, x0
   4c7e0:	mov	w10, #0x35                  	// #53
   4c7e4:	add	x11, sp, #0x8
   4c7e8:	str	x8, [x25, x23]
   4c7ec:	str	x9, [x25, x0]
   4c7f0:	mov	w8, #0x1                   	// #1
   4c7f4:	add	x0, sp, #0x10
   4c7f8:	mov	w1, w2
   4c7fc:	str	x10, [sp, #16]
   4c800:	str	x11, [sp, #40]
   4c804:	str	w8, [sp, #24]
   4c808:	bl	c2a0 <mpfr_set_d@plt>
   4c80c:	add	x2, sp, #0x10
   4c810:	mov	x0, x20
   4c814:	mov	x1, x21
   4c818:	mov	w3, w19
   4c81c:	str	wzr, [x25, x22]
   4c820:	bl	c1b0 <mpfr_mul@plt>
   4c824:	ldr	w8, [x25, x22]
   4c828:	str	x26, [x25, x23]
   4c82c:	str	x28, [x25, x24]
   4c830:	orr	w9, w8, w27
   4c834:	str	w9, [x25, x22]
   4c838:	ldr	x10, [x20, #16]
   4c83c:	mov	w8, w0
   4c840:	cmp	x10, x28
   4c844:	b.gt	4c890 <mpfr_mul_d@@Base+0x130>
   4c848:	cmp	x10, x26
   4c84c:	b.lt	4c890 <mpfr_mul_d@@Base+0x130>  // b.tstop
   4c850:	cbz	w8, 4c86c <mpfr_mul_d@@Base+0x10c>
   4c854:	orr	w9, w9, #0x8
   4c858:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c85c:	ldr	x1, [x0, #2800]
   4c860:	add	x0, x0, #0xaf0
   4c864:	blr	x1
   4c868:	str	w9, [x25, x0]
   4c86c:	ldp	x20, x19, [sp, #128]
   4c870:	ldp	x22, x21, [sp, #112]
   4c874:	ldp	x24, x23, [sp, #96]
   4c878:	ldp	x26, x25, [sp, #80]
   4c87c:	ldp	x28, x27, [sp, #64]
   4c880:	ldp	x29, x30, [sp, #48]
   4c884:	mov	w0, w8
   4c888:	add	sp, sp, #0x90
   4c88c:	ret
   4c890:	mov	x0, x20
   4c894:	mov	w1, w8
   4c898:	mov	w2, w19
   4c89c:	bl	d020 <mpfr_check_range@plt>
   4c8a0:	mov	w8, w0
   4c8a4:	b	4c86c <mpfr_mul_d@@Base+0x10c>

000000000004c8a8 <mpfr_div_d@@Base>:
   4c8a8:	sub	sp, sp, #0x90
   4c8ac:	stp	x29, x30, [sp, #48]
   4c8b0:	stp	x28, x27, [sp, #64]
   4c8b4:	stp	x26, x25, [sp, #80]
   4c8b8:	stp	x24, x23, [sp, #96]
   4c8bc:	stp	x22, x21, [sp, #112]
   4c8c0:	stp	x20, x19, [sp, #128]
   4c8c4:	add	x29, sp, #0x30
   4c8c8:	mov	w19, w2
   4c8cc:	mov	x21, x1
   4c8d0:	mov	x20, x0
   4c8d4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c8d8:	ldr	x1, [x0, #2800]
   4c8dc:	add	x0, x0, #0xaf0
   4c8e0:	blr	x1
   4c8e4:	mrs	x25, tpidr_el0
   4c8e8:	ldr	w27, [x25, x0]
   4c8ec:	mov	x22, x0
   4c8f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c8f4:	ldr	x1, [x0, #2736]
   4c8f8:	add	x0, x0, #0xab0
   4c8fc:	blr	x1
   4c900:	ldr	x26, [x25, x0]
   4c904:	mov	x23, x0
   4c908:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c90c:	ldr	x1, [x0, #2768]
   4c910:	add	x0, x0, #0xad0
   4c914:	blr	x1
   4c918:	ldr	x28, [x25, x0]
   4c91c:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4c920:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4c924:	mov	x24, x0
   4c928:	mov	w10, #0x35                  	// #53
   4c92c:	add	x11, sp, #0x8
   4c930:	str	x8, [x25, x23]
   4c934:	str	x9, [x25, x0]
   4c938:	mov	w8, #0x1                   	// #1
   4c93c:	add	x0, sp, #0x10
   4c940:	mov	w1, w2
   4c944:	str	x10, [sp, #16]
   4c948:	str	x11, [sp, #40]
   4c94c:	str	w8, [sp, #24]
   4c950:	bl	c2a0 <mpfr_set_d@plt>
   4c954:	add	x2, sp, #0x10
   4c958:	mov	x0, x20
   4c95c:	mov	x1, x21
   4c960:	mov	w3, w19
   4c964:	str	wzr, [x25, x22]
   4c968:	bl	caf0 <mpfr_div@plt>
   4c96c:	ldr	w8, [x25, x22]
   4c970:	str	x26, [x25, x23]
   4c974:	str	x28, [x25, x24]
   4c978:	orr	w9, w8, w27
   4c97c:	str	w9, [x25, x22]
   4c980:	ldr	x10, [x20, #16]
   4c984:	mov	w8, w0
   4c988:	cmp	x10, x28
   4c98c:	b.gt	4c9d8 <mpfr_div_d@@Base+0x130>
   4c990:	cmp	x10, x26
   4c994:	b.lt	4c9d8 <mpfr_div_d@@Base+0x130>  // b.tstop
   4c998:	cbz	w8, 4c9b4 <mpfr_div_d@@Base+0x10c>
   4c99c:	orr	w9, w9, #0x8
   4c9a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4c9a4:	ldr	x1, [x0, #2800]
   4c9a8:	add	x0, x0, #0xaf0
   4c9ac:	blr	x1
   4c9b0:	str	w9, [x25, x0]
   4c9b4:	ldp	x20, x19, [sp, #128]
   4c9b8:	ldp	x22, x21, [sp, #112]
   4c9bc:	ldp	x24, x23, [sp, #96]
   4c9c0:	ldp	x26, x25, [sp, #80]
   4c9c4:	ldp	x28, x27, [sp, #64]
   4c9c8:	ldp	x29, x30, [sp, #48]
   4c9cc:	mov	w0, w8
   4c9d0:	add	sp, sp, #0x90
   4c9d4:	ret
   4c9d8:	mov	x0, x20
   4c9dc:	mov	w1, w8
   4c9e0:	mov	w2, w19
   4c9e4:	bl	d020 <mpfr_check_range@plt>
   4c9e8:	mov	w8, w0
   4c9ec:	b	4c9b4 <mpfr_div_d@@Base+0x10c>

000000000004c9f0 <mpfr_d_div@@Base>:
   4c9f0:	sub	sp, sp, #0x90
   4c9f4:	stp	x29, x30, [sp, #48]
   4c9f8:	stp	x28, x27, [sp, #64]
   4c9fc:	stp	x26, x25, [sp, #80]
   4ca00:	stp	x24, x23, [sp, #96]
   4ca04:	stp	x22, x21, [sp, #112]
   4ca08:	stp	x20, x19, [sp, #128]
   4ca0c:	add	x29, sp, #0x30
   4ca10:	mov	w19, w2
   4ca14:	mov	x21, x1
   4ca18:	mov	x20, x0
   4ca1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4ca20:	ldr	x1, [x0, #2800]
   4ca24:	add	x0, x0, #0xaf0
   4ca28:	blr	x1
   4ca2c:	mrs	x25, tpidr_el0
   4ca30:	ldr	w27, [x25, x0]
   4ca34:	mov	x22, x0
   4ca38:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4ca3c:	ldr	x1, [x0, #2736]
   4ca40:	add	x0, x0, #0xab0
   4ca44:	blr	x1
   4ca48:	ldr	x26, [x25, x0]
   4ca4c:	mov	x23, x0
   4ca50:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4ca54:	ldr	x1, [x0, #2768]
   4ca58:	add	x0, x0, #0xad0
   4ca5c:	blr	x1
   4ca60:	ldr	x28, [x25, x0]
   4ca64:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4ca68:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4ca6c:	mov	x24, x0
   4ca70:	mov	w10, #0x35                  	// #53
   4ca74:	add	x11, sp, #0x8
   4ca78:	str	x8, [x25, x23]
   4ca7c:	str	x9, [x25, x0]
   4ca80:	mov	w8, #0x1                   	// #1
   4ca84:	add	x0, sp, #0x10
   4ca88:	mov	w1, w2
   4ca8c:	str	x10, [sp, #16]
   4ca90:	str	x11, [sp, #40]
   4ca94:	str	w8, [sp, #24]
   4ca98:	bl	c2a0 <mpfr_set_d@plt>
   4ca9c:	add	x1, sp, #0x10
   4caa0:	mov	x0, x20
   4caa4:	mov	x2, x21
   4caa8:	mov	w3, w19
   4caac:	str	wzr, [x25, x22]
   4cab0:	bl	caf0 <mpfr_div@plt>
   4cab4:	ldr	w8, [x25, x22]
   4cab8:	str	x26, [x25, x23]
   4cabc:	str	x28, [x25, x24]
   4cac0:	orr	w9, w8, w27
   4cac4:	str	w9, [x25, x22]
   4cac8:	ldr	x10, [x20, #16]
   4cacc:	mov	w8, w0
   4cad0:	cmp	x10, x28
   4cad4:	b.gt	4cb20 <mpfr_d_div@@Base+0x130>
   4cad8:	cmp	x10, x26
   4cadc:	b.lt	4cb20 <mpfr_d_div@@Base+0x130>  // b.tstop
   4cae0:	cbz	w8, 4cafc <mpfr_d_div@@Base+0x10c>
   4cae4:	orr	w9, w9, #0x8
   4cae8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4caec:	ldr	x1, [x0, #2800]
   4caf0:	add	x0, x0, #0xaf0
   4caf4:	blr	x1
   4caf8:	str	w9, [x25, x0]
   4cafc:	ldp	x20, x19, [sp, #128]
   4cb00:	ldp	x22, x21, [sp, #112]
   4cb04:	ldp	x24, x23, [sp, #96]
   4cb08:	ldp	x26, x25, [sp, #80]
   4cb0c:	ldp	x28, x27, [sp, #64]
   4cb10:	ldp	x29, x30, [sp, #48]
   4cb14:	mov	w0, w8
   4cb18:	add	sp, sp, #0x90
   4cb1c:	ret
   4cb20:	mov	x0, x20
   4cb24:	mov	w1, w8
   4cb28:	mov	w2, w19
   4cb2c:	bl	d020 <mpfr_check_range@plt>
   4cb30:	mov	w8, w0
   4cb34:	b	4cafc <mpfr_d_div@@Base+0x10c>

000000000004cb38 <mpfr_li2@@Base>:
   4cb38:	sub	sp, sp, #0x140
   4cb3c:	stp	x29, x30, [sp, #224]
   4cb40:	stp	x28, x27, [sp, #240]
   4cb44:	stp	x26, x25, [sp, #256]
   4cb48:	stp	x24, x23, [sp, #272]
   4cb4c:	stp	x22, x21, [sp, #288]
   4cb50:	stp	x20, x19, [sp, #304]
   4cb54:	ldr	x8, [x1, #16]
   4cb58:	mov	x19, #0x4                   	// #4
   4cb5c:	movk	x19, #0x8000, lsl #48
   4cb60:	mov	x21, x1
   4cb64:	cmp	x8, x19
   4cb68:	mov	x28, x0
   4cb6c:	add	x29, sp, #0xe0
   4cb70:	b.lt	4cf10 <mpfr_li2@@Base+0x3d8>  // b.tstop
   4cb74:	ldr	w9, [x21, #8]
   4cb78:	mov	w25, w2
   4cb7c:	cmp	w9, #0x1
   4cb80:	b.lt	4cbb0 <mpfr_li2@@Base+0x78>  // b.tstop
   4cb84:	tbz	x8, #63, 4cbdc <mpfr_li2@@Base+0xa4>
   4cb88:	ldr	x9, [x28]
   4cb8c:	mov	w10, #0x1                   	// #1
   4cb90:	sub	x2, x10, x8
   4cb94:	add	x8, x9, #0x1
   4cb98:	cmp	x2, x8
   4cb9c:	b.ls	4cbcc <mpfr_li2@@Base+0x94>  // b.plast
   4cba0:	mov	w3, #0x1                   	// #1
   4cba4:	mov	x0, x28
   4cba8:	mov	x1, x21
   4cbac:	b	4d7dc <mpfr_li2@@Base+0xca4>
   4cbb0:	tbz	x8, #63, 4cbdc <mpfr_li2@@Base+0xa4>
   4cbb4:	ldr	x9, [x28]
   4cbb8:	mov	w10, #0x2                   	// #2
   4cbbc:	sub	x2, x10, x8
   4cbc0:	add	x8, x9, #0x1
   4cbc4:	cmp	x2, x8
   4cbc8:	b.hi	4d7d0 <mpfr_li2@@Base+0xc98>  // b.pmore
   4cbcc:	mov	w8, wzr
   4cbd0:	cbz	w8, 4cbdc <mpfr_li2@@Base+0xa4>
   4cbd4:	cbnz	w8, 4ceec <mpfr_li2@@Base+0x3b4>
   4cbd8:	b	4cbe4 <mpfr_li2@@Base+0xac>
   4cbdc:	mov	w8, wzr
   4cbe0:	cbnz	w8, 4ceec <mpfr_li2@@Base+0x3b4>
   4cbe4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4cbe8:	ldr	x1, [x0, #2800]
   4cbec:	add	x0, x0, #0xaf0
   4cbf0:	blr	x1
   4cbf4:	mrs	x11, tpidr_el0
   4cbf8:	ldr	w24, [x11, x0]
   4cbfc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4cc00:	ldr	x1, [x0, #2736]
   4cc04:	add	x0, x0, #0xab0
   4cc08:	blr	x1
   4cc0c:	ldr	x22, [x11, x0]
   4cc10:	mov	x8, x0
   4cc14:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4cc18:	ldr	x1, [x0, #2768]
   4cc1c:	add	x0, x0, #0xad0
   4cc20:	blr	x1
   4cc24:	ldr	x9, [x11, x0]
   4cc28:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   4cc2c:	str	x10, [x11, x0]
   4cc30:	str	x11, [sp, #48]
   4cc34:	stp	x9, x22, [sp, #32]
   4cc38:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4cc3c:	str	x9, [x11, x8]
   4cc40:	ldr	x26, [x28]
   4cc44:	subs	x20, x26, #0x1
   4cc48:	b.eq	4d28c <mpfr_li2@@Base+0x754>  // b.none
   4cc4c:	b.le	4d294 <mpfr_li2@@Base+0x75c>
   4cc50:	clz	x8, x20
   4cc54:	mov	w9, #0x40                  	// #64
   4cc58:	sub	x8, x9, x8
   4cc5c:	add	x8, x26, x8
   4cc60:	mov	x0, x21
   4cc64:	add	x22, x8, #0xd
   4cc68:	bl	cbe0 <mpfr_sgn@plt>
   4cc6c:	cmp	w0, #0x1
   4cc70:	str	w24, [sp, #28]
   4cc74:	b.lt	4cf5c <mpfr_li2@@Base+0x424>  // b.tstop
   4cc78:	mov	w1, #0x1                   	// #1
   4cc7c:	mov	x2, #0xffffffffffffffff    	// #-1
   4cc80:	mov	x0, x21
   4cc84:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4cc88:	cmp	w0, #0x0
   4cc8c:	b.gt	4cf5c <mpfr_li2@@Base+0x424>
   4cc90:	sub	x0, x29, #0x48
   4cc94:	mov	x1, x22
   4cc98:	str	x28, [sp, #16]
   4cc9c:	bl	cf60 <mpfr_init2@plt>
   4cca0:	sub	x0, x29, #0x28
   4cca4:	mov	x1, x22
   4cca8:	bl	cf60 <mpfr_init2@plt>
   4ccac:	cmp	w25, #0x0
   4ccb0:	mov	w28, w25
   4ccb4:	mov	w20, #0x40                  	// #64
   4ccb8:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   4ccbc:	cinc	x26, x26, eq  // eq = none
   4ccc0:	mov	w24, #0x40                  	// #64
   4ccc4:	sub	x0, x29, #0x48
   4ccc8:	mov	w1, #0x1                   	// #1
   4cccc:	mov	x2, x21
   4ccd0:	mov	w3, wzr
   4ccd4:	bl	cf30 <mpfr_ui_sub@plt>
   4ccd8:	sub	x0, x29, #0x48
   4ccdc:	sub	x1, x29, #0x48
   4cce0:	mov	w2, #0x2                   	// #2
   4cce4:	bl	c520 <mpfr_log@plt>
   4cce8:	ldur	x8, [x29, #-56]
   4ccec:	cmp	x8, x25
   4ccf0:	b.eq	4cdc8 <mpfr_li2@@Base+0x290>  // b.none
   4ccf4:	sub	x0, x29, #0x48
   4ccf8:	sub	x1, x29, #0x48
   4ccfc:	mov	w2, wzr
   4cd00:	bl	c1d0 <mpfr_neg@plt>
   4cd04:	ldur	x23, [x29, #-56]
   4cd08:	sub	x0, x29, #0x28
   4cd0c:	sub	x1, x29, #0x48
   4cd10:	mov	w2, #0x2                   	// #2
   4cd14:	bl	4e1dc <mpfr_li2@@Base+0x16a4>
   4cd18:	cbz	w0, 4ce20 <mpfr_li2@@Base+0x2e8>
   4cd1c:	mov	w27, w0
   4cd20:	cmp	w0, #0x0
   4cd24:	b.le	4ce28 <mpfr_li2@@Base+0x2f0>
   4cd28:	sxtw	x8, w27
   4cd2c:	clz	x8, x8
   4cd30:	sub	x27, x20, x8
   4cd34:	sub	x0, x29, #0x48
   4cd38:	sub	x1, x29, #0x48
   4cd3c:	mov	w2, #0x2                   	// #2
   4cd40:	bl	c8c0 <mpfr_sqr@plt>
   4cd44:	sub	x0, x29, #0x48
   4cd48:	sub	x1, x29, #0x48
   4cd4c:	mov	w2, #0x2                   	// #2
   4cd50:	mov	w3, #0x2                   	// #2
   4cd54:	bl	cde0 <mpfr_div_2ui@plt>
   4cd58:	sub	x0, x29, #0x28
   4cd5c:	sub	x1, x29, #0x28
   4cd60:	sub	x2, x29, #0x48
   4cd64:	mov	w3, wzr
   4cd68:	bl	bfd0 <mpfr_sub@plt>
   4cd6c:	mvn	x8, x23
   4cd70:	ldur	x9, [x29, #-24]
   4cd74:	and	x8, x8, x23, asr #63
   4cd78:	cmp	x27, x8
   4cd7c:	csinc	x8, x8, x27, lt  // lt = tstop
   4cd80:	cmp	x9, x19
   4cd84:	sub	x8, x8, x9
   4cd88:	b.lt	4cdc8 <mpfr_li2@@Base+0x290>  // b.tstop
   4cd8c:	ldur	x9, [x29, #-40]
   4cd90:	cmp	x8, #0x0
   4cd94:	ldur	x0, [x29, #-16]
   4cd98:	csinv	x8, x8, xzr, ge  // ge = tcont
   4cd9c:	sub	x10, x9, #0x1
   4cda0:	add	x9, x9, #0x3e
   4cda4:	cmp	x10, #0x0
   4cda8:	csel	x9, x9, x10, lt  // lt = tstop
   4cdac:	sub	x8, x22, x8
   4cdb0:	asr	x9, x9, #6
   4cdb4:	add	x1, x9, #0x1
   4cdb8:	sub	x2, x8, #0x2
   4cdbc:	mov	x3, x26
   4cdc0:	bl	c830 <mpfr_round_p@plt>
   4cdc4:	cbnz	w0, 4ce44 <mpfr_li2@@Base+0x30c>
   4cdc8:	sub	x8, x19, x22
   4cdcc:	sub	x8, x8, #0x105
   4cdd0:	cmp	x24, x8
   4cdd4:	b.gt	4ce04 <mpfr_li2@@Base+0x2cc>
   4cdd8:	add	x22, x22, x24
   4cddc:	cmp	x22, #0x0
   4cde0:	cinc	x8, x22, lt  // lt = tstop
   4cde4:	sub	x0, x29, #0x48
   4cde8:	mov	x1, x22
   4cdec:	asr	x24, x8, #1
   4cdf0:	bl	c330 <mpfr_set_prec@plt>
   4cdf4:	sub	x0, x29, #0x28
   4cdf8:	mov	x1, x22
   4cdfc:	bl	c330 <mpfr_set_prec@plt>
   4ce00:	b	4ccc4 <mpfr_li2@@Base+0x18c>
   4ce04:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4ce08:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   4ce0c:	mov	w1, #0x12a                 	// #298
   4ce10:	add	x0, x0, #0xdae
   4ce14:	add	x2, x2, #0x5cf
   4ce18:	bl	d030 <mpfr_assert_fail@plt>
   4ce1c:	b	4cdd8 <mpfr_li2@@Base+0x2a0>
   4ce20:	mov	x27, xzr
   4ce24:	b	4cd34 <mpfr_li2@@Base+0x1fc>
   4ce28:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4ce2c:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4ce30:	mov	w1, #0x11c                 	// #284
   4ce34:	add	x0, x0, #0xdae
   4ce38:	add	x2, x2, #0xdbd
   4ce3c:	bl	d030 <mpfr_assert_fail@plt>
   4ce40:	b	4cd28 <mpfr_li2@@Base+0x1f0>
   4ce44:	ldr	x20, [sp, #16]
   4ce48:	ldur	w3, [x29, #-32]
   4ce4c:	sub	x1, x29, #0x28
   4ce50:	mov	w2, w28
   4ce54:	mov	x0, x20
   4ce58:	bl	cb70 <mpfr_set4@plt>
   4ce5c:	mov	w23, w0
   4ce60:	sub	x0, x29, #0x48
   4ce64:	bl	c4f0 <mpfr_clear@plt>
   4ce68:	sub	x0, x29, #0x28
   4ce6c:	bl	c4f0 <mpfr_clear@plt>
   4ce70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4ce74:	ldr	x1, [x0, #2800]
   4ce78:	add	x0, x0, #0xaf0
   4ce7c:	blr	x1
   4ce80:	ldr	x9, [sp, #48]
   4ce84:	ldr	w10, [sp, #28]
   4ce88:	str	w10, [x9, x0]
   4ce8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4ce90:	ldr	x1, [x0, #2736]
   4ce94:	add	x0, x0, #0xab0
   4ce98:	blr	x1
   4ce9c:	ldr	x11, [sp, #40]
   4cea0:	str	x11, [x9, x0]
   4cea4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4cea8:	ldr	x1, [x0, #2768]
   4ceac:	add	x0, x0, #0xad0
   4ceb0:	blr	x1
   4ceb4:	ldr	x12, [sp, #32]
   4ceb8:	str	x12, [x9, x0]
   4cebc:	ldr	x8, [x20, #16]
   4cec0:	cmp	x8, x12
   4cec4:	b.gt	4d2b0 <mpfr_li2@@Base+0x778>
   4cec8:	cmp	x8, x11
   4cecc:	b.lt	4d2b0 <mpfr_li2@@Base+0x778>  // b.tstop
   4ced0:	cbz	w23, 4ceec <mpfr_li2@@Base+0x3b4>
   4ced4:	orr	w8, w10, #0x8
   4ced8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4cedc:	ldr	x1, [x0, #2800]
   4cee0:	add	x0, x0, #0xaf0
   4cee4:	blr	x1
   4cee8:	str	w8, [x9, x0]
   4ceec:	mov	w0, w23
   4cef0:	ldp	x20, x19, [sp, #304]
   4cef4:	ldp	x22, x21, [sp, #288]
   4cef8:	ldp	x24, x23, [sp, #272]
   4cefc:	ldp	x26, x25, [sp, #256]
   4cf00:	ldp	x28, x27, [sp, #240]
   4cf04:	ldp	x29, x30, [sp, #224]
   4cf08:	add	sp, sp, #0x140
   4cf0c:	ret
   4cf10:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4cf14:	cmp	x8, x9
   4cf18:	b.eq	4d2c8 <mpfr_li2@@Base+0x790>  // b.none
   4cf1c:	mov	x9, #0x2                   	// #2
   4cf20:	movk	x9, #0x8000, lsl #48
   4cf24:	cmp	x8, x9
   4cf28:	b.ne	4d2d4 <mpfr_li2@@Base+0x79c>  // b.any
   4cf2c:	sub	x8, x19, #0x2
   4cf30:	str	x8, [x28, #16]
   4cf34:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4cf38:	ldr	x1, [x0, #2800]
   4cf3c:	add	x0, x0, #0xaf0
   4cf40:	blr	x1
   4cf44:	mrs	x8, tpidr_el0
   4cf48:	ldr	w9, [x8, x0]
   4cf4c:	mov	w23, wzr
   4cf50:	orr	w9, w9, #0x4
   4cf54:	str	w9, [x8, x0]
   4cf58:	b	4ceec <mpfr_li2@@Base+0x3b4>
   4cf5c:	mov	w1, #0x1                   	// #1
   4cf60:	mov	x0, x21
   4cf64:	mov	x2, xzr
   4cf68:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4cf6c:	cbz	w0, 4d2ec <mpfr_li2@@Base+0x7b4>
   4cf70:	mov	w1, #0x2                   	// #2
   4cf74:	mov	x0, x21
   4cf78:	mov	x2, xzr
   4cf7c:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4cf80:	tbnz	w0, #31, 4d514 <mpfr_li2@@Base+0x9dc>
   4cf84:	mov	w1, #0x26                  	// #38
   4cf88:	mov	x0, x21
   4cf8c:	mov	x2, xzr
   4cf90:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4cf94:	tbnz	w0, #31, 4cfb0 <mpfr_li2@@Base+0x478>
   4cf98:	mov	x0, x28
   4cf9c:	mov	x1, x21
   4cfa0:	mov	w2, w25
   4cfa4:	bl	4e4e8 <mpfr_li2@@Base+0x19b0>
   4cfa8:	mov	w23, w0
   4cfac:	cbnz	w0, 4d4ac <mpfr_li2@@Base+0x974>
   4cfb0:	sub	x0, x29, #0x48
   4cfb4:	mov	x1, x22
   4cfb8:	bl	cf60 <mpfr_init2@plt>
   4cfbc:	sub	x0, x29, #0x28
   4cfc0:	mov	x1, x22
   4cfc4:	bl	cf60 <mpfr_init2@plt>
   4cfc8:	sub	x0, x29, #0x68
   4cfcc:	mov	x1, x22
   4cfd0:	bl	cf60 <mpfr_init2@plt>
   4cfd4:	cmp	w25, #0x0
   4cfd8:	str	w25, [sp, #12]
   4cfdc:	mov	w23, #0x2                   	// #2
   4cfe0:	mov	w24, #0x4                   	// #4
   4cfe4:	cinc	x26, x26, eq  // eq = none
   4cfe8:	mov	w25, #0x40                  	// #64
   4cfec:	sub	x0, x29, #0x68
   4cff0:	mov	w1, #0x1                   	// #1
   4cff4:	mov	x2, x21
   4cff8:	mov	w3, wzr
   4cffc:	bl	c7b0 <mpfr_ui_div@plt>
   4d000:	sub	x0, x29, #0x68
   4d004:	sub	x1, x29, #0x68
   4d008:	mov	w2, wzr
   4d00c:	bl	c1d0 <mpfr_neg@plt>
   4d010:	sub	x0, x29, #0x48
   4d014:	sub	x1, x29, #0x68
   4d018:	mov	w2, #0x3                   	// #3
   4d01c:	bl	cbd0 <mpfr_log1p@plt>
   4d020:	sub	x0, x29, #0x48
   4d024:	sub	x1, x29, #0x48
   4d028:	mov	w2, #0x2                   	// #2
   4d02c:	bl	c1d0 <mpfr_neg@plt>
   4d030:	ldur	x20, [x29, #-56]
   4d034:	sub	x0, x29, #0x28
   4d038:	sub	x1, x29, #0x48
   4d03c:	mov	w2, wzr
   4d040:	bl	4e1dc <mpfr_li2@@Base+0x16a4>
   4d044:	mov	w27, w0
   4d048:	sub	x0, x29, #0x28
   4d04c:	sub	x1, x29, #0x28
   4d050:	mov	w2, wzr
   4d054:	bl	c1d0 <mpfr_neg@plt>
   4d058:	cbz	w27, 4d24c <mpfr_li2@@Base+0x714>
   4d05c:	cmp	w27, #0x0
   4d060:	b.le	4d254 <mpfr_li2@@Base+0x71c>
   4d064:	sxtw	x8, w27
   4d068:	clz	x8, x8
   4d06c:	mov	w9, #0x40                  	// #64
   4d070:	sub	x27, x9, x8
   4d074:	sub	x0, x29, #0x48
   4d078:	sub	x1, x29, #0x48
   4d07c:	mov	w2, wzr
   4d080:	bl	c8c0 <mpfr_sqr@plt>
   4d084:	sub	x0, x29, #0x48
   4d088:	sub	x1, x29, #0x48
   4d08c:	mov	w2, #0x2                   	// #2
   4d090:	mov	w3, wzr
   4d094:	bl	cde0 <mpfr_div_2ui@plt>
   4d098:	sub	x0, x29, #0x28
   4d09c:	sub	x1, x29, #0x28
   4d0a0:	sub	x2, x29, #0x48
   4d0a4:	mov	w3, wzr
   4d0a8:	bl	c640 <mpfr_add@plt>
   4d0ac:	ldur	x9, [x29, #-56]
   4d0b0:	mov	w8, #0x3                   	// #3
   4d0b4:	sub	x8, x8, x20
   4d0b8:	cmp	x20, #0x0
   4d0bc:	csel	x8, x24, x8, ge  // ge = tcont
   4d0c0:	ldur	x10, [x29, #-24]
   4d0c4:	add	x8, x9, x8
   4d0c8:	cmp	x27, x8
   4d0cc:	csinc	x8, x8, x27, lt  // lt = tstop
   4d0d0:	sub	x8, x8, x10
   4d0d4:	cmp	x8, #0x0
   4d0d8:	csinv	x8, x8, xzr, ge  // ge = tcont
   4d0dc:	add	x8, x10, x8
   4d0e0:	sub	x0, x29, #0x48
   4d0e4:	mov	w2, #0x2                   	// #2
   4d0e8:	mov	x1, x21
   4d0ec:	add	x20, x8, #0x2
   4d0f0:	bl	c520 <mpfr_log@plt>
   4d0f4:	sub	x0, x29, #0x48
   4d0f8:	sub	x1, x29, #0x48
   4d0fc:	mov	w2, wzr
   4d100:	bl	c8c0 <mpfr_sqr@plt>
   4d104:	sub	x0, x29, #0x48
   4d108:	sub	x1, x29, #0x48
   4d10c:	mov	w2, #0x1                   	// #1
   4d110:	mov	w3, wzr
   4d114:	bl	cde0 <mpfr_div_2ui@plt>
   4d118:	sub	x0, x29, #0x28
   4d11c:	sub	x1, x29, #0x28
   4d120:	sub	x2, x29, #0x48
   4d124:	mov	w3, wzr
   4d128:	bl	bfd0 <mpfr_sub@plt>
   4d12c:	ldur	x8, [x29, #-56]
   4d130:	ldur	x9, [x29, #-24]
   4d134:	add	x8, x8, #0x3
   4d138:	cmp	x20, x8
   4d13c:	csel	x8, x20, x8, gt
   4d140:	sub	x8, x8, x9
   4d144:	cmp	x8, #0x0
   4d148:	csinv	x8, x8, xzr, ge  // ge = tcont
   4d14c:	add	x8, x9, x8
   4d150:	add	x20, x8, #0x2
   4d154:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d158:	ldr	x1, [x0, #2848]
   4d15c:	add	x0, x0, #0xb20
   4d160:	blr	x1
   4d164:	ldr	x8, [sp, #48]
   4d168:	mov	w2, #0x2                   	// #2
   4d16c:	add	x1, x8, x0
   4d170:	sub	x0, x29, #0x48
   4d174:	bl	c840 <mpfr_cache@plt>
   4d178:	sub	x0, x29, #0x48
   4d17c:	sub	x1, x29, #0x48
   4d180:	mov	w2, wzr
   4d184:	bl	c8c0 <mpfr_sqr@plt>
   4d188:	sub	x0, x29, #0x48
   4d18c:	sub	x1, x29, #0x48
   4d190:	mov	w2, #0x3                   	// #3
   4d194:	mov	w3, wzr
   4d198:	bl	d160 <mpfr_div_ui@plt>
   4d19c:	sub	x0, x29, #0x28
   4d1a0:	sub	x1, x29, #0x28
   4d1a4:	sub	x2, x29, #0x48
   4d1a8:	mov	w3, wzr
   4d1ac:	bl	c640 <mpfr_add@plt>
   4d1b0:	ldur	x8, [x29, #-24]
   4d1b4:	cmp	x20, #0x2
   4d1b8:	csel	x9, x20, x23, gt
   4d1bc:	cmp	x8, x19
   4d1c0:	sub	x8, x9, x8
   4d1c4:	b.lt	4d204 <mpfr_li2@@Base+0x6cc>  // b.tstop
   4d1c8:	ldur	x9, [x29, #-40]
   4d1cc:	cmp	x8, #0x0
   4d1d0:	ldur	x0, [x29, #-16]
   4d1d4:	csinv	x8, x8, xzr, ge  // ge = tcont
   4d1d8:	sub	x10, x9, #0x1
   4d1dc:	add	x9, x9, #0x3e
   4d1e0:	cmp	x10, #0x0
   4d1e4:	csel	x9, x9, x10, lt  // lt = tstop
   4d1e8:	sub	x8, x22, x8
   4d1ec:	asr	x9, x9, #6
   4d1f0:	add	x1, x9, #0x1
   4d1f4:	sub	x2, x8, #0x2
   4d1f8:	mov	x3, x26
   4d1fc:	bl	c830 <mpfr_round_p@plt>
   4d200:	cbnz	w0, 4d478 <mpfr_li2@@Base+0x940>
   4d204:	sub	x8, x19, x22
   4d208:	sub	x8, x8, #0x105
   4d20c:	cmp	x25, x8
   4d210:	b.gt	4d270 <mpfr_li2@@Base+0x738>
   4d214:	add	x22, x22, x25
   4d218:	cmp	x22, #0x0
   4d21c:	cinc	x8, x22, lt  // lt = tstop
   4d220:	sub	x0, x29, #0x48
   4d224:	mov	x1, x22
   4d228:	asr	x25, x8, #1
   4d22c:	bl	c330 <mpfr_set_prec@plt>
   4d230:	sub	x0, x29, #0x28
   4d234:	mov	x1, x22
   4d238:	bl	c330 <mpfr_set_prec@plt>
   4d23c:	sub	x0, x29, #0x68
   4d240:	mov	x1, x22
   4d244:	bl	c330 <mpfr_set_prec@plt>
   4d248:	b	4cfec <mpfr_li2@@Base+0x4b4>
   4d24c:	mov	x27, xzr
   4d250:	b	4d074 <mpfr_li2@@Base+0x53c>
   4d254:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4d258:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4d25c:	mov	w1, #0x16d                 	// #365
   4d260:	add	x0, x0, #0xdae
   4d264:	add	x2, x2, #0xdbd
   4d268:	bl	d030 <mpfr_assert_fail@plt>
   4d26c:	b	4d064 <mpfr_li2@@Base+0x52c>
   4d270:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4d274:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   4d278:	mov	w1, #0x189                 	// #393
   4d27c:	add	x0, x0, #0xdae
   4d280:	add	x2, x2, #0x5cf
   4d284:	bl	d030 <mpfr_assert_fail@plt>
   4d288:	b	4d214 <mpfr_li2@@Base+0x6dc>
   4d28c:	mov	x8, xzr
   4d290:	b	4cc5c <mpfr_li2@@Base+0x124>
   4d294:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4d298:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4d29c:	add	x0, x0, #0xdae
   4d2a0:	add	x2, x2, #0xdb4
   4d2a4:	mov	w1, #0x106                 	// #262
   4d2a8:	bl	d030 <mpfr_assert_fail@plt>
   4d2ac:	b	4cc50 <mpfr_li2@@Base+0x118>
   4d2b0:	mov	x0, x20
   4d2b4:	mov	w1, w23
   4d2b8:	mov	w2, w28
   4d2bc:	bl	d020 <mpfr_check_range@plt>
   4d2c0:	mov	w23, w0
   4d2c4:	b	4ceec <mpfr_li2@@Base+0x3b4>
   4d2c8:	mov	w23, wzr
   4d2cc:	mov	w8, #0xffffffff            	// #-1
   4d2d0:	b	4d2e0 <mpfr_li2@@Base+0x7a8>
   4d2d4:	ldr	w8, [x21, #8]
   4d2d8:	mov	w23, wzr
   4d2dc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4d2e0:	str	w8, [x28, #8]
   4d2e4:	str	x9, [x28, #16]
   4d2e8:	b	4ceec <mpfr_li2@@Base+0x3b4>
   4d2ec:	sub	x0, x29, #0x28
   4d2f0:	mov	x1, x22
   4d2f4:	mov	w27, w24
   4d2f8:	bl	cf60 <mpfr_init2@plt>
   4d2fc:	cmp	w25, #0x0
   4d300:	cinc	x23, x26, eq  // eq = none
   4d304:	ldr	x26, [sp, #48]
   4d308:	adrp	x21, 60000 <mpfr_bases@@Base+0x408>
   4d30c:	adrp	x24, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   4d310:	mov	w20, #0x40                  	// #64
   4d314:	add	x21, x21, #0xdae
   4d318:	add	x24, x24, #0x5cf
   4d31c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d320:	ldr	x1, [x0, #2848]
   4d324:	add	x0, x0, #0xb20
   4d328:	blr	x1
   4d32c:	add	x1, x26, x0
   4d330:	sub	x0, x29, #0x28
   4d334:	mov	w2, #0x2                   	// #2
   4d338:	bl	c840 <mpfr_cache@plt>
   4d33c:	sub	x0, x29, #0x28
   4d340:	sub	x1, x29, #0x28
   4d344:	mov	w2, wzr
   4d348:	bl	c8c0 <mpfr_sqr@plt>
   4d34c:	sub	x0, x29, #0x28
   4d350:	sub	x1, x29, #0x28
   4d354:	mov	w2, #0x6                   	// #6
   4d358:	mov	w3, wzr
   4d35c:	bl	d160 <mpfr_div_ui@plt>
   4d360:	ldur	x8, [x29, #-24]
   4d364:	cmp	x8, x19
   4d368:	b.lt	4d39c <mpfr_li2@@Base+0x864>  // b.tstop
   4d36c:	ldur	x8, [x29, #-40]
   4d370:	ldur	x0, [x29, #-16]
   4d374:	sub	x2, x22, #0x4
   4d378:	mov	x3, x23
   4d37c:	sub	x9, x8, #0x1
   4d380:	add	x8, x8, #0x3e
   4d384:	cmp	x9, #0x0
   4d388:	csel	x8, x8, x9, lt  // lt = tstop
   4d38c:	asr	x8, x8, #6
   4d390:	add	x1, x8, #0x1
   4d394:	bl	c830 <mpfr_round_p@plt>
   4d398:	cbnz	w0, 4d3e0 <mpfr_li2@@Base+0x8a8>
   4d39c:	sub	x8, x19, x22
   4d3a0:	sub	x8, x8, #0x105
   4d3a4:	cmp	x20, x8
   4d3a8:	b.gt	4d3cc <mpfr_li2@@Base+0x894>
   4d3ac:	add	x22, x22, x20
   4d3b0:	cmp	x22, #0x0
   4d3b4:	cinc	x8, x22, lt  // lt = tstop
   4d3b8:	sub	x0, x29, #0x28
   4d3bc:	mov	x1, x22
   4d3c0:	asr	x20, x8, #1
   4d3c4:	bl	c330 <mpfr_set_prec@plt>
   4d3c8:	b	4d31c <mpfr_li2@@Base+0x7e4>
   4d3cc:	mov	w1, #0x147                 	// #327
   4d3d0:	mov	x0, x21
   4d3d4:	mov	x2, x24
   4d3d8:	bl	d030 <mpfr_assert_fail@plt>
   4d3dc:	b	4d3ac <mpfr_li2@@Base+0x874>
   4d3e0:	ldur	w3, [x29, #-32]
   4d3e4:	sub	x1, x29, #0x28
   4d3e8:	mov	x0, x28
   4d3ec:	mov	w2, w25
   4d3f0:	bl	cb70 <mpfr_set4@plt>
   4d3f4:	mov	w23, w0
   4d3f8:	sub	x0, x29, #0x28
   4d3fc:	bl	c4f0 <mpfr_clear@plt>
   4d400:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d404:	ldr	x1, [x0, #2800]
   4d408:	add	x0, x0, #0xaf0
   4d40c:	blr	x1
   4d410:	str	w27, [x26, x0]
   4d414:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d418:	ldr	x1, [x0, #2736]
   4d41c:	add	x0, x0, #0xab0
   4d420:	blr	x1
   4d424:	ldr	x9, [sp, #40]
   4d428:	str	x9, [x26, x0]
   4d42c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d430:	ldr	x1, [x0, #2768]
   4d434:	add	x0, x0, #0xad0
   4d438:	blr	x1
   4d43c:	ldr	x10, [sp, #32]
   4d440:	str	x10, [x26, x0]
   4d444:	ldr	x8, [x28, #16]
   4d448:	cmp	x8, x10
   4d44c:	b.gt	4e1bc <mpfr_li2@@Base+0x1684>
   4d450:	cmp	x8, x9
   4d454:	b.lt	4e1bc <mpfr_li2@@Base+0x1684>  // b.tstop
   4d458:	cbz	w23, 4ceec <mpfr_li2@@Base+0x3b4>
   4d45c:	orr	w8, w27, #0x8
   4d460:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d464:	ldr	x1, [x0, #2800]
   4d468:	add	x0, x0, #0xaf0
   4d46c:	blr	x1
   4d470:	str	w8, [x26, x0]
   4d474:	b	4ceec <mpfr_li2@@Base+0x3b4>
   4d478:	ldr	w25, [sp, #12]
   4d47c:	ldur	w3, [x29, #-32]
   4d480:	sub	x1, x29, #0x28
   4d484:	mov	x0, x28
   4d488:	mov	w2, w25
   4d48c:	bl	cb70 <mpfr_set4@plt>
   4d490:	mov	w23, w0
   4d494:	sub	x0, x29, #0x28
   4d498:	sub	x1, x29, #0x48
   4d49c:	sub	x2, x29, #0x68
   4d4a0:	mov	x3, xzr
   4d4a4:	bl	c650 <mpfr_clears@plt>
   4d4a8:	ldr	w24, [sp, #28]
   4d4ac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d4b0:	ldr	x1, [x0, #2800]
   4d4b4:	add	x0, x0, #0xaf0
   4d4b8:	blr	x1
   4d4bc:	ldr	x9, [sp, #48]
   4d4c0:	str	w24, [x9, x0]
   4d4c4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d4c8:	ldr	x1, [x0, #2736]
   4d4cc:	add	x0, x0, #0xab0
   4d4d0:	blr	x1
   4d4d4:	ldr	x10, [sp, #40]
   4d4d8:	str	x10, [x9, x0]
   4d4dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d4e0:	ldr	x1, [x0, #2768]
   4d4e4:	add	x0, x0, #0xad0
   4d4e8:	blr	x1
   4d4ec:	ldr	x11, [sp, #32]
   4d4f0:	str	x11, [x9, x0]
   4d4f4:	ldr	x8, [x28, #16]
   4d4f8:	cmp	x8, x11
   4d4fc:	b.gt	4e1bc <mpfr_li2@@Base+0x1684>
   4d500:	cmp	x8, x10
   4d504:	b.lt	4e1bc <mpfr_li2@@Base+0x1684>  // b.tstop
   4d508:	cbz	w23, 4ceec <mpfr_li2@@Base+0x3b4>
   4d50c:	orr	w8, w24, #0x8
   4d510:	b	4ced8 <mpfr_li2@@Base+0x3a0>
   4d514:	mov	w1, #0x1                   	// #1
   4d518:	mov	x0, x21
   4d51c:	mov	x2, xzr
   4d520:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4d524:	cmp	w0, #0x1
   4d528:	str	w25, [sp, #12]
   4d52c:	b.lt	4d7f8 <mpfr_li2@@Base+0xcc0>  // b.tstop
   4d530:	sub	x0, x29, #0x28
   4d534:	mov	x1, x22
   4d538:	bl	cf60 <mpfr_init2@plt>
   4d53c:	sub	x0, x29, #0x48
   4d540:	mov	x1, x22
   4d544:	bl	cf60 <mpfr_init2@plt>
   4d548:	sub	x0, x29, #0x68
   4d54c:	mov	x1, x22
   4d550:	bl	cf60 <mpfr_init2@plt>
   4d554:	add	x0, sp, #0x58
   4d558:	mov	x1, x22
   4d55c:	bl	cf60 <mpfr_init2@plt>
   4d560:	cmp	w25, #0x0
   4d564:	mov	w25, #0x40                  	// #64
   4d568:	cinc	x26, x26, eq  // eq = none
   4d56c:	mov	w23, #0x40                  	// #64
   4d570:	sub	x0, x29, #0x68
   4d574:	mov	w2, #0x2                   	// #2
   4d578:	mov	x1, x21
   4d57c:	bl	c520 <mpfr_log@plt>
   4d580:	sub	x0, x29, #0x28
   4d584:	sub	x1, x29, #0x68
   4d588:	mov	w2, wzr
   4d58c:	bl	4e1dc <mpfr_li2@@Base+0x16a4>
   4d590:	ldur	x20, [x29, #-24]
   4d594:	mov	w27, w0
   4d598:	sub	x0, x29, #0x48
   4d59c:	sub	x1, x29, #0x68
   4d5a0:	mov	w2, wzr
   4d5a4:	bl	c8c0 <mpfr_sqr@plt>
   4d5a8:	sub	x0, x29, #0x48
   4d5ac:	sub	x1, x29, #0x48
   4d5b0:	mov	w2, #0x2                   	// #2
   4d5b4:	mov	w3, wzr
   4d5b8:	bl	cde0 <mpfr_div_2ui@plt>
   4d5bc:	sub	x0, x29, #0x28
   4d5c0:	sub	x1, x29, #0x28
   4d5c4:	sub	x2, x29, #0x48
   4d5c8:	mov	w3, wzr
   4d5cc:	bl	c640 <mpfr_add@plt>
   4d5d0:	add	x0, sp, #0x58
   4d5d4:	mov	w2, #0x1                   	// #1
   4d5d8:	mov	x1, x21
   4d5dc:	mov	w3, wzr
   4d5e0:	bl	ca00 <mpfr_sub_ui@plt>
   4d5e4:	sub	x0, x29, #0x48
   4d5e8:	add	x1, sp, #0x58
   4d5ec:	mov	w2, #0x2                   	// #2
   4d5f0:	bl	c520 <mpfr_log@plt>
   4d5f4:	ldur	x24, [x29, #-56]
   4d5f8:	sub	x0, x29, #0x48
   4d5fc:	sub	x1, x29, #0x68
   4d600:	sub	x2, x29, #0x48
   4d604:	mov	w3, wzr
   4d608:	bl	c1b0 <mpfr_mul@plt>
   4d60c:	sub	x0, x29, #0x28
   4d610:	sub	x1, x29, #0x28
   4d614:	sub	x2, x29, #0x48
   4d618:	mov	w3, wzr
   4d61c:	bl	bfd0 <mpfr_sub@plt>
   4d620:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d624:	ldr	x1, [x0, #2848]
   4d628:	add	x0, x0, #0xb20
   4d62c:	blr	x1
   4d630:	ldr	x8, [sp, #48]
   4d634:	mov	w2, #0x2                   	// #2
   4d638:	add	x1, x8, x0
   4d63c:	sub	x0, x29, #0x48
   4d640:	bl	c840 <mpfr_cache@plt>
   4d644:	sub	x0, x29, #0x48
   4d648:	sub	x1, x29, #0x48
   4d64c:	mov	w2, wzr
   4d650:	bl	c8c0 <mpfr_sqr@plt>
   4d654:	sub	x0, x29, #0x48
   4d658:	sub	x1, x29, #0x48
   4d65c:	mov	w2, #0x6                   	// #6
   4d660:	mov	w3, wzr
   4d664:	bl	d160 <mpfr_div_ui@plt>
   4d668:	sub	x0, x29, #0x28
   4d66c:	sub	x1, x29, #0x28
   4d670:	sub	x2, x29, #0x48
   4d674:	mov	w3, wzr
   4d678:	bl	c640 <mpfr_add@plt>
   4d67c:	cbz	w27, 4d774 <mpfr_li2@@Base+0xc3c>
   4d680:	cmp	w27, #0x0
   4d684:	b.le	4d77c <mpfr_li2@@Base+0xc44>
   4d688:	sxtw	x8, w27
   4d68c:	clz	x8, x8
   4d690:	sub	x8, x25, x8
   4d694:	sub	x8, x8, x20
   4d698:	add	x9, x8, #0x1
   4d69c:	mov	w8, #0x1                   	// #1
   4d6a0:	sub	x8, x8, x24
   4d6a4:	cmp	x9, x8
   4d6a8:	b.le	4d6d4 <mpfr_li2@@Base+0xb9c>
   4d6ac:	cbz	w27, 4d6c8 <mpfr_li2@@Base+0xb90>
   4d6b0:	cmp	w27, #0x0
   4d6b4:	b.le	4d7b4 <mpfr_li2@@Base+0xc7c>
   4d6b8:	sxtw	x8, w27
   4d6bc:	clz	x8, x8
   4d6c0:	sub	x8, x25, x8
   4d6c4:	b	4d6cc <mpfr_li2@@Base+0xb94>
   4d6c8:	mov	x8, xzr
   4d6cc:	sub	x8, x8, x20
   4d6d0:	add	x8, x8, #0x1
   4d6d4:	ldur	x9, [x29, #-24]
   4d6d8:	cmp	x9, x19
   4d6dc:	b.lt	4d720 <mpfr_li2@@Base+0xbe8>  // b.tstop
   4d6e0:	ldur	x9, [x29, #-40]
   4d6e4:	cmp	x8, #0x5
   4d6e8:	mov	w10, #0x5                   	// #5
   4d6ec:	csel	x8, x8, x10, gt
   4d6f0:	sub	x10, x9, #0x1
   4d6f4:	ldur	x0, [x29, #-16]
   4d6f8:	add	x9, x9, #0x3e
   4d6fc:	cmp	x10, #0x0
   4d700:	csel	x9, x9, x10, lt  // lt = tstop
   4d704:	sub	x8, x22, x8
   4d708:	asr	x9, x9, #6
   4d70c:	add	x1, x9, #0x1
   4d710:	sub	x2, x8, #0x2
   4d714:	mov	x3, x26
   4d718:	bl	c830 <mpfr_round_p@plt>
   4d71c:	cbnz	w0, 4dad8 <mpfr_li2@@Base+0xfa0>
   4d720:	sub	x8, x19, x22
   4d724:	sub	x8, x8, #0x105
   4d728:	cmp	x23, x8
   4d72c:	b.gt	4d798 <mpfr_li2@@Base+0xc60>
   4d730:	add	x22, x22, x23
   4d734:	cmp	x22, #0x0
   4d738:	cinc	x8, x22, lt  // lt = tstop
   4d73c:	sub	x0, x29, #0x28
   4d740:	mov	x1, x22
   4d744:	asr	x23, x8, #1
   4d748:	bl	c330 <mpfr_set_prec@plt>
   4d74c:	sub	x0, x29, #0x48
   4d750:	mov	x1, x22
   4d754:	bl	c330 <mpfr_set_prec@plt>
   4d758:	sub	x0, x29, #0x68
   4d75c:	mov	x1, x22
   4d760:	bl	c330 <mpfr_set_prec@plt>
   4d764:	add	x0, sp, #0x58
   4d768:	mov	x1, x22
   4d76c:	bl	c330 <mpfr_set_prec@plt>
   4d770:	b	4d570 <mpfr_li2@@Base+0xa38>
   4d774:	mov	x8, xzr
   4d778:	b	4d694 <mpfr_li2@@Base+0xb5c>
   4d77c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4d780:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4d784:	mov	w1, #0x1b8                 	// #440
   4d788:	add	x0, x0, #0xdae
   4d78c:	add	x2, x2, #0xdbd
   4d790:	bl	d030 <mpfr_assert_fail@plt>
   4d794:	b	4d688 <mpfr_li2@@Base+0xb50>
   4d798:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4d79c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   4d7a0:	mov	w1, #0x1bd                 	// #445
   4d7a4:	add	x0, x0, #0xdae
   4d7a8:	add	x2, x2, #0x5cf
   4d7ac:	bl	d030 <mpfr_assert_fail@plt>
   4d7b0:	b	4d730 <mpfr_li2@@Base+0xbf8>
   4d7b4:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4d7b8:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4d7bc:	mov	w1, #0x1b8                 	// #440
   4d7c0:	add	x0, x0, #0xdae
   4d7c4:	add	x2, x2, #0xdbd
   4d7c8:	bl	d030 <mpfr_assert_fail@plt>
   4d7cc:	b	4d6b8 <mpfr_li2@@Base+0xb80>
   4d7d0:	mov	x0, x28
   4d7d4:	mov	x1, x21
   4d7d8:	mov	w3, wzr
   4d7dc:	mov	w4, w25
   4d7e0:	bl	ca10 <mpfr_round_near_x@plt>
   4d7e4:	cmp	w0, #0x0
   4d7e8:	mov	w23, w0
   4d7ec:	cset	w8, ne  // ne = any
   4d7f0:	cbnz	w0, 4cbd0 <mpfr_li2@@Base+0x98>
   4d7f4:	b	4cbcc <mpfr_li2@@Base+0x94>
   4d7f8:	mov	w1, #0x1                   	// #1
   4d7fc:	mov	x2, #0xffffffffffffffff    	// #-1
   4d800:	mov	x0, x21
   4d804:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4d808:	cmp	w0, #0x1
   4d80c:	b.lt	4db94 <mpfr_li2@@Base+0x105c>  // b.tstop
   4d810:	sub	x0, x29, #0x28
   4d814:	mov	x1, x22
   4d818:	bl	cf60 <mpfr_init2@plt>
   4d81c:	sub	x0, x29, #0x48
   4d820:	mov	x1, x22
   4d824:	bl	cf60 <mpfr_init2@plt>
   4d828:	sub	x0, x29, #0x68
   4d82c:	mov	x1, x22
   4d830:	bl	cf60 <mpfr_init2@plt>
   4d834:	add	x0, sp, #0x58
   4d838:	mov	x1, x22
   4d83c:	bl	cf60 <mpfr_init2@plt>
   4d840:	ldr	w8, [sp, #12]
   4d844:	mov	w25, #0x3                   	// #3
   4d848:	mov	w23, #0x1                   	// #1
   4d84c:	mov	w24, #0x40                  	// #64
   4d850:	cmp	w8, #0x0
   4d854:	cinc	x26, x26, eq  // eq = none
   4d858:	sub	x0, x29, #0x48
   4d85c:	mov	w2, #0x3                   	// #3
   4d860:	mov	x1, x21
   4d864:	bl	c520 <mpfr_log@plt>
   4d868:	sub	x0, x29, #0x48
   4d86c:	sub	x1, x29, #0x48
   4d870:	mov	w2, wzr
   4d874:	bl	c1d0 <mpfr_neg@plt>
   4d878:	sub	x0, x29, #0x28
   4d87c:	sub	x1, x29, #0x48
   4d880:	mov	w2, wzr
   4d884:	bl	4e1dc <mpfr_li2@@Base+0x16a4>
   4d888:	mov	w27, w0
   4d88c:	sub	x0, x29, #0x28
   4d890:	sub	x1, x29, #0x28
   4d894:	mov	w2, wzr
   4d898:	bl	c1d0 <mpfr_neg@plt>
   4d89c:	cbz	w27, 4da98 <mpfr_li2@@Base+0xf60>
   4d8a0:	cmp	w27, #0x0
   4d8a4:	b.le	4daa0 <mpfr_li2@@Base+0xf68>
   4d8a8:	sxtw	x8, w27
   4d8ac:	clz	x8, x8
   4d8b0:	mov	w9, #0x40                  	// #64
   4d8b4:	sub	x8, x9, x8
   4d8b8:	ldur	x9, [x29, #-24]
   4d8bc:	add	x0, sp, #0x58
   4d8c0:	mov	w1, #0x1                   	// #1
   4d8c4:	mov	x2, x21
   4d8c8:	sub	x20, x8, x9
   4d8cc:	mov	w3, wzr
   4d8d0:	add	x27, x20, #0x1
   4d8d4:	bl	cf30 <mpfr_ui_sub@plt>
   4d8d8:	sub	x0, x29, #0x68
   4d8dc:	add	x1, sp, #0x58
   4d8e0:	mov	w2, #0x2                   	// #2
   4d8e4:	bl	c520 <mpfr_log@plt>
   4d8e8:	sub	x0, x29, #0x68
   4d8ec:	sub	x1, x29, #0x68
   4d8f0:	sub	x2, x29, #0x48
   4d8f4:	mov	w3, wzr
   4d8f8:	bl	c1b0 <mpfr_mul@plt>
   4d8fc:	sub	x0, x29, #0x28
   4d900:	sub	x1, x29, #0x28
   4d904:	sub	x2, x29, #0x68
   4d908:	mov	w3, wzr
   4d90c:	bl	c640 <mpfr_add@plt>
   4d910:	ldur	x8, [x29, #-88]
   4d914:	ldur	x9, [x29, #-24]
   4d918:	sub	x0, x29, #0x48
   4d91c:	sub	x1, x29, #0x48
   4d920:	sub	x8, x23, x8
   4d924:	cmp	x27, x8
   4d928:	csinc	x8, x8, x20, le
   4d92c:	cmp	x8, #0x3
   4d930:	csel	x8, x8, x25, gt
   4d934:	sub	x8, x8, x9
   4d938:	mov	w2, wzr
   4d93c:	add	x20, x8, #0x2
   4d940:	bl	c8c0 <mpfr_sqr@plt>
   4d944:	sub	x0, x29, #0x48
   4d948:	sub	x1, x29, #0x48
   4d94c:	mov	w2, #0x2                   	// #2
   4d950:	mov	w3, wzr
   4d954:	bl	cde0 <mpfr_div_2ui@plt>
   4d958:	sub	x0, x29, #0x28
   4d95c:	sub	x1, x29, #0x28
   4d960:	sub	x2, x29, #0x48
   4d964:	mov	w3, wzr
   4d968:	bl	c640 <mpfr_add@plt>
   4d96c:	ldur	x8, [x29, #-56]
   4d970:	ldur	x9, [x29, #-24]
   4d974:	add	x8, x8, #0x2
   4d978:	cmp	x20, x8
   4d97c:	csel	x8, x20, x8, gt
   4d980:	sub	x8, x8, x9
   4d984:	cmp	x8, #0x0
   4d988:	csinv	x8, x8, xzr, ge  // ge = tcont
   4d98c:	add	x8, x9, x8
   4d990:	add	x20, x8, #0x2
   4d994:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4d998:	ldr	x1, [x0, #2848]
   4d99c:	add	x0, x0, #0xb20
   4d9a0:	blr	x1
   4d9a4:	ldr	x8, [sp, #48]
   4d9a8:	mov	w2, #0x2                   	// #2
   4d9ac:	add	x1, x8, x0
   4d9b0:	sub	x0, x29, #0x48
   4d9b4:	bl	c840 <mpfr_cache@plt>
   4d9b8:	sub	x0, x29, #0x48
   4d9bc:	sub	x1, x29, #0x48
   4d9c0:	mov	w2, wzr
   4d9c4:	bl	c8c0 <mpfr_sqr@plt>
   4d9c8:	sub	x0, x29, #0x48
   4d9cc:	sub	x1, x29, #0x48
   4d9d0:	mov	w2, #0x6                   	// #6
   4d9d4:	mov	w3, wzr
   4d9d8:	bl	d160 <mpfr_div_ui@plt>
   4d9dc:	sub	x0, x29, #0x28
   4d9e0:	sub	x1, x29, #0x28
   4d9e4:	sub	x2, x29, #0x48
   4d9e8:	mov	w3, wzr
   4d9ec:	bl	c640 <mpfr_add@plt>
   4d9f0:	ldur	x8, [x29, #-24]
   4d9f4:	cmp	x20, #0x3
   4d9f8:	csel	x9, x20, x25, gt
   4d9fc:	cmp	x8, x19
   4da00:	sub	x8, x9, x8
   4da04:	b.lt	4da44 <mpfr_li2@@Base+0xf0c>  // b.tstop
   4da08:	ldur	x9, [x29, #-40]
   4da0c:	cmp	x8, #0x0
   4da10:	ldur	x0, [x29, #-16]
   4da14:	csinv	x8, x8, xzr, ge  // ge = tcont
   4da18:	sub	x10, x9, #0x1
   4da1c:	add	x9, x9, #0x3e
   4da20:	cmp	x10, #0x0
   4da24:	csel	x9, x9, x10, lt  // lt = tstop
   4da28:	sub	x8, x22, x8
   4da2c:	asr	x9, x9, #6
   4da30:	add	x1, x9, #0x1
   4da34:	sub	x2, x8, #0x2
   4da38:	mov	x3, x26
   4da3c:	bl	c830 <mpfr_round_p@plt>
   4da40:	cbnz	w0, 4dad8 <mpfr_li2@@Base+0xfa0>
   4da44:	sub	x8, x19, x22
   4da48:	sub	x8, x8, #0x105
   4da4c:	cmp	x24, x8
   4da50:	b.gt	4dabc <mpfr_li2@@Base+0xf84>
   4da54:	add	x22, x22, x24
   4da58:	cmp	x22, #0x0
   4da5c:	cinc	x8, x22, lt  // lt = tstop
   4da60:	sub	x0, x29, #0x28
   4da64:	mov	x1, x22
   4da68:	asr	x24, x8, #1
   4da6c:	bl	c330 <mpfr_set_prec@plt>
   4da70:	sub	x0, x29, #0x48
   4da74:	mov	x1, x22
   4da78:	bl	c330 <mpfr_set_prec@plt>
   4da7c:	sub	x0, x29, #0x68
   4da80:	mov	x1, x22
   4da84:	bl	c330 <mpfr_set_prec@plt>
   4da88:	add	x0, sp, #0x58
   4da8c:	mov	x1, x22
   4da90:	bl	c330 <mpfr_set_prec@plt>
   4da94:	b	4d858 <mpfr_li2@@Base+0xd20>
   4da98:	mov	x8, xzr
   4da9c:	b	4d8b8 <mpfr_li2@@Base+0xd80>
   4daa0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4daa4:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4daa8:	mov	w1, #0x1dc                 	// #476
   4daac:	add	x0, x0, #0xdae
   4dab0:	add	x2, x2, #0xdbd
   4dab4:	bl	d030 <mpfr_assert_fail@plt>
   4dab8:	b	4d8a8 <mpfr_li2@@Base+0xd70>
   4dabc:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4dac0:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   4dac4:	mov	w1, #0x1f5                 	// #501
   4dac8:	add	x0, x0, #0xdae
   4dacc:	add	x2, x2, #0x5cf
   4dad0:	bl	d030 <mpfr_assert_fail@plt>
   4dad4:	b	4da54 <mpfr_li2@@Base+0xf1c>
   4dad8:	ldur	w3, [x29, #-32]
   4dadc:	ldr	w2, [sp, #12]
   4dae0:	sub	x1, x29, #0x28
   4dae4:	mov	x0, x28
   4dae8:	mov	x19, x28
   4daec:	bl	cb70 <mpfr_set4@plt>
   4daf0:	mov	w23, w0
   4daf4:	sub	x0, x29, #0x28
   4daf8:	sub	x1, x29, #0x48
   4dafc:	sub	x2, x29, #0x68
   4db00:	add	x3, sp, #0x58
   4db04:	mov	x4, xzr
   4db08:	bl	c650 <mpfr_clears@plt>
   4db0c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4db10:	ldr	x1, [x0, #2800]
   4db14:	add	x0, x0, #0xaf0
   4db18:	blr	x1
   4db1c:	ldr	x8, [sp, #48]
   4db20:	ldr	w9, [sp, #28]
   4db24:	str	w9, [x8, x0]
   4db28:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4db2c:	ldr	x1, [x0, #2736]
   4db30:	add	x0, x0, #0xab0
   4db34:	blr	x1
   4db38:	ldr	x9, [sp, #40]
   4db3c:	str	x9, [x8, x0]
   4db40:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4db44:	ldr	x1, [x0, #2768]
   4db48:	add	x0, x0, #0xad0
   4db4c:	blr	x1
   4db50:	ldr	x9, [sp, #32]
   4db54:	str	x9, [x8, x0]
   4db58:	ldr	x8, [x28, #16]
   4db5c:	cmp	x8, x9
   4db60:	b.gt	4e1cc <mpfr_li2@@Base+0x1694>
   4db64:	ldr	x9, [sp, #40]
   4db68:	cmp	x8, x9
   4db6c:	b.lt	4e1cc <mpfr_li2@@Base+0x1694>  // b.tstop
   4db70:	cbz	w23, 4ceec <mpfr_li2@@Base+0x3b4>
   4db74:	ldr	w8, [sp, #28]
   4db78:	orr	w8, w8, #0x8
   4db7c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4db80:	ldr	x1, [x0, #2800]
   4db84:	add	x0, x0, #0xaf0
   4db88:	blr	x1
   4db8c:	ldr	x9, [sp, #48]
   4db90:	b	4cee8 <mpfr_li2@@Base+0x3b0>
   4db94:	mov	x1, #0xffffffffffffffff    	// #-1
   4db98:	mov	x0, x21
   4db9c:	mov	x2, xzr
   4dba0:	bl	c890 <mpfr_cmp_si_2exp@plt>
   4dba4:	tbnz	w0, #31, 4dd98 <mpfr_li2@@Base+0x1260>
   4dba8:	sub	x0, x29, #0x28
   4dbac:	mov	x1, x22
   4dbb0:	bl	cf60 <mpfr_init2@plt>
   4dbb4:	sub	x0, x29, #0x48
   4dbb8:	mov	x1, x22
   4dbbc:	bl	cf60 <mpfr_init2@plt>
   4dbc0:	sub	x0, x29, #0x68
   4dbc4:	mov	x1, x22
   4dbc8:	bl	cf60 <mpfr_init2@plt>
   4dbcc:	ldr	w8, [sp, #12]
   4dbd0:	mov	w20, #0x40                  	// #64
   4dbd4:	mov	w25, #0x40                  	// #64
   4dbd8:	cmp	w8, #0x0
   4dbdc:	cinc	x26, x26, eq  // eq = none
   4dbe0:	sub	x0, x29, #0x68
   4dbe4:	mov	x1, x21
   4dbe8:	mov	w2, wzr
   4dbec:	bl	c1d0 <mpfr_neg@plt>
   4dbf0:	sub	x0, x29, #0x48
   4dbf4:	sub	x1, x29, #0x68
   4dbf8:	mov	w2, wzr
   4dbfc:	bl	cbd0 <mpfr_log1p@plt>
   4dc00:	sub	x0, x29, #0x28
   4dc04:	sub	x1, x29, #0x48
   4dc08:	mov	w2, wzr
   4dc0c:	bl	4e1dc <mpfr_li2@@Base+0x16a4>
   4dc10:	mov	w27, w0
   4dc14:	sub	x0, x29, #0x28
   4dc18:	sub	x1, x29, #0x28
   4dc1c:	mov	w2, wzr
   4dc20:	bl	c1d0 <mpfr_neg@plt>
   4dc24:	ldur	x23, [x29, #-56]
   4dc28:	cbz	w27, 4dd24 <mpfr_li2@@Base+0x11ec>
   4dc2c:	cmp	w27, #0x0
   4dc30:	b.le	4dd2c <mpfr_li2@@Base+0x11f4>
   4dc34:	sxtw	x8, w27
   4dc38:	clz	x8, x8
   4dc3c:	sub	x8, x20, x8
   4dc40:	ldur	x9, [x29, #-24]
   4dc44:	sub	x0, x29, #0x48
   4dc48:	sub	x1, x29, #0x48
   4dc4c:	mov	w2, wzr
   4dc50:	sub	x27, x8, x9
   4dc54:	add	x24, x27, #0x1
   4dc58:	bl	c8c0 <mpfr_sqr@plt>
   4dc5c:	sub	x0, x29, #0x48
   4dc60:	sub	x1, x29, #0x48
   4dc64:	mov	w2, #0x2                   	// #2
   4dc68:	mov	w3, wzr
   4dc6c:	bl	cde0 <mpfr_div_2ui@plt>
   4dc70:	sub	x0, x29, #0x28
   4dc74:	sub	x1, x29, #0x28
   4dc78:	sub	x2, x29, #0x48
   4dc7c:	mov	w3, wzr
   4dc80:	bl	bfd0 <mpfr_sub@plt>
   4dc84:	ldur	x9, [x29, #-24]
   4dc88:	neg	x8, x23
   4dc8c:	cmp	x24, x8
   4dc90:	csinc	x8, x8, x27, le
   4dc94:	cmp	x9, x19
   4dc98:	b.lt	4dcdc <mpfr_li2@@Base+0x11a4>  // b.tstop
   4dc9c:	ldur	x9, [x29, #-40]
   4dca0:	cmp	x8, #0x3
   4dca4:	mov	w10, #0x3                   	// #3
   4dca8:	csel	x8, x8, x10, gt
   4dcac:	sub	x10, x9, #0x1
   4dcb0:	ldur	x0, [x29, #-16]
   4dcb4:	add	x9, x9, #0x3e
   4dcb8:	cmp	x10, #0x0
   4dcbc:	csel	x9, x9, x10, lt  // lt = tstop
   4dcc0:	sub	x8, x22, x8
   4dcc4:	asr	x9, x9, #6
   4dcc8:	add	x1, x9, #0x1
   4dccc:	sub	x2, x8, #0x2
   4dcd0:	mov	x3, x26
   4dcd4:	bl	c830 <mpfr_round_p@plt>
   4dcd8:	cbnz	w0, 4dd64 <mpfr_li2@@Base+0x122c>
   4dcdc:	sub	x8, x19, x22
   4dce0:	sub	x8, x8, #0x105
   4dce4:	cmp	x25, x8
   4dce8:	b.gt	4dd48 <mpfr_li2@@Base+0x1210>
   4dcec:	add	x22, x22, x25
   4dcf0:	cmp	x22, #0x0
   4dcf4:	cinc	x8, x22, lt  // lt = tstop
   4dcf8:	sub	x0, x29, #0x28
   4dcfc:	mov	x1, x22
   4dd00:	asr	x25, x8, #1
   4dd04:	bl	c330 <mpfr_set_prec@plt>
   4dd08:	sub	x0, x29, #0x48
   4dd0c:	mov	x1, x22
   4dd10:	bl	c330 <mpfr_set_prec@plt>
   4dd14:	sub	x0, x29, #0x68
   4dd18:	mov	x1, x22
   4dd1c:	bl	c330 <mpfr_set_prec@plt>
   4dd20:	b	4dbe0 <mpfr_li2@@Base+0x10a8>
   4dd24:	mov	x8, xzr
   4dd28:	b	4dc40 <mpfr_li2@@Base+0x1108>
   4dd2c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4dd30:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4dd34:	mov	w1, #0x214                 	// #532
   4dd38:	add	x0, x0, #0xdae
   4dd3c:	add	x2, x2, #0xdbd
   4dd40:	bl	d030 <mpfr_assert_fail@plt>
   4dd44:	b	4dc34 <mpfr_li2@@Base+0x10fc>
   4dd48:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4dd4c:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   4dd50:	mov	w1, #0x21e                 	// #542
   4dd54:	add	x0, x0, #0xdae
   4dd58:	add	x2, x2, #0x5cf
   4dd5c:	bl	d030 <mpfr_assert_fail@plt>
   4dd60:	b	4dcec <mpfr_li2@@Base+0x11b4>
   4dd64:	ldur	w3, [x29, #-32]
   4dd68:	ldr	w2, [sp, #12]
   4dd6c:	sub	x1, x29, #0x28
   4dd70:	mov	x0, x28
   4dd74:	mov	x19, x28
   4dd78:	bl	cb70 <mpfr_set4@plt>
   4dd7c:	mov	w23, w0
   4dd80:	sub	x0, x29, #0x28
   4dd84:	sub	x1, x29, #0x48
   4dd88:	sub	x2, x29, #0x68
   4dd8c:	mov	x3, xzr
   4dd90:	bl	c650 <mpfr_clears@plt>
   4dd94:	b	4db0c <mpfr_li2@@Base+0xfd4>
   4dd98:	mov	x1, #0xfffffffffffffff9    	// #-7
   4dd9c:	mov	x0, x21
   4dda0:	mov	x2, xzr
   4dda4:	bl	c890 <mpfr_cmp_si_2exp@plt>
   4dda8:	cmp	w0, #0x0
   4ddac:	b.le	4e1a0 <mpfr_li2@@Base+0x1668>
   4ddb0:	sub	x0, x29, #0x28
   4ddb4:	mov	x1, x22
   4ddb8:	bl	cf60 <mpfr_init2@plt>
   4ddbc:	sub	x0, x29, #0x48
   4ddc0:	mov	x1, x22
   4ddc4:	bl	cf60 <mpfr_init2@plt>
   4ddc8:	sub	x0, x29, #0x68
   4ddcc:	mov	x1, x22
   4ddd0:	bl	cf60 <mpfr_init2@plt>
   4ddd4:	add	x0, sp, #0x58
   4ddd8:	mov	x1, x22
   4dddc:	bl	cf60 <mpfr_init2@plt>
   4dde0:	add	x0, sp, #0x38
   4dde4:	mov	x1, x22
   4dde8:	bl	cf60 <mpfr_init2@plt>
   4ddec:	ldr	w8, [sp, #12]
   4ddf0:	mov	w24, #0x40                  	// #64
   4ddf4:	mov	w25, #0x3                   	// #3
   4ddf8:	mov	w23, #0x40                  	// #64
   4ddfc:	cmp	w8, #0x0
   4de00:	cinc	x26, x26, eq  // eq = none
   4de04:	add	x0, sp, #0x38
   4de08:	mov	w1, #0x1                   	// #1
   4de0c:	mov	x2, x21
   4de10:	mov	w3, wzr
   4de14:	bl	c7b0 <mpfr_ui_div@plt>
   4de18:	add	x0, sp, #0x38
   4de1c:	add	x1, sp, #0x38
   4de20:	mov	w2, wzr
   4de24:	bl	c1d0 <mpfr_neg@plt>
   4de28:	sub	x0, x29, #0x48
   4de2c:	add	x1, sp, #0x38
   4de30:	mov	w2, wzr
   4de34:	bl	cbd0 <mpfr_log1p@plt>
   4de38:	sub	x0, x29, #0x28
   4de3c:	sub	x1, x29, #0x48
   4de40:	mov	w2, wzr
   4de44:	bl	4e1dc <mpfr_li2@@Base+0x16a4>
   4de48:	mov	w27, w0
   4de4c:	add	x0, sp, #0x38
   4de50:	mov	w1, #0x1                   	// #1
   4de54:	mov	x2, x21
   4de58:	mov	w3, wzr
   4de5c:	bl	cf30 <mpfr_ui_sub@plt>
   4de60:	sub	x0, x29, #0x48
   4de64:	add	x1, sp, #0x38
   4de68:	mov	w2, #0x2                   	// #2
   4de6c:	bl	c520 <mpfr_log@plt>
   4de70:	add	x0, sp, #0x38
   4de74:	mov	x1, x21
   4de78:	mov	w2, wzr
   4de7c:	bl	c1d0 <mpfr_neg@plt>
   4de80:	sub	x0, x29, #0x68
   4de84:	add	x1, sp, #0x38
   4de88:	mov	w2, #0x2                   	// #2
   4de8c:	bl	c520 <mpfr_log@plt>
   4de90:	add	x0, sp, #0x58
   4de94:	sub	x1, x29, #0x68
   4de98:	sub	x2, x29, #0x48
   4de9c:	mov	w3, wzr
   4dea0:	bl	c1b0 <mpfr_mul@plt>
   4dea4:	add	x0, sp, #0x58
   4dea8:	add	x1, sp, #0x58
   4deac:	mov	w2, #0x1                   	// #1
   4deb0:	mov	w3, wzr
   4deb4:	bl	cde0 <mpfr_div_2ui@plt>
   4deb8:	sub	x0, x29, #0x28
   4debc:	sub	x1, x29, #0x28
   4dec0:	add	x2, sp, #0x58
   4dec4:	mov	w3, wzr
   4dec8:	bl	bfd0 <mpfr_sub@plt>
   4decc:	cbz	w27, 4e10c <mpfr_li2@@Base+0x15d4>
   4ded0:	cmp	w27, #0x0
   4ded4:	b.le	4e114 <mpfr_li2@@Base+0x15dc>
   4ded8:	sxtw	x8, w27
   4dedc:	clz	x8, x8
   4dee0:	sub	x8, x24, x8
   4dee4:	ldur	x9, [x29, #-24]
   4dee8:	sub	x8, x8, x9
   4deec:	add	x8, x8, #0x1
   4def0:	cmp	x8, #0x3
   4def4:	b.ge	4df00 <mpfr_li2@@Base+0x13c8>  // b.tcont
   4def8:	mov	w8, #0x3                   	// #3
   4defc:	b	4df2c <mpfr_li2@@Base+0x13f4>
   4df00:	cbz	w27, 4df1c <mpfr_li2@@Base+0x13e4>
   4df04:	cmp	w27, #0x0
   4df08:	b.le	4e14c <mpfr_li2@@Base+0x1614>
   4df0c:	sxtw	x8, w27
   4df10:	clz	x8, x8
   4df14:	sub	x8, x24, x8
   4df18:	b	4df20 <mpfr_li2@@Base+0x13e8>
   4df1c:	mov	x8, xzr
   4df20:	ldur	x9, [x29, #-24]
   4df24:	sub	x8, x8, x9
   4df28:	add	x8, x8, #0x1
   4df2c:	ldur	x9, [x29, #-24]
   4df30:	add	x0, sp, #0x58
   4df34:	sub	x1, x29, #0x68
   4df38:	mov	w2, wzr
   4df3c:	add	x20, x8, x9
   4df40:	add	x27, x20, #0x1
   4df44:	bl	c8c0 <mpfr_sqr@plt>
   4df48:	add	x0, sp, #0x58
   4df4c:	add	x1, sp, #0x58
   4df50:	mov	w2, #0x2                   	// #2
   4df54:	mov	w3, wzr
   4df58:	bl	cde0 <mpfr_div_2ui@plt>
   4df5c:	sub	x0, x29, #0x28
   4df60:	sub	x1, x29, #0x28
   4df64:	add	x2, sp, #0x58
   4df68:	mov	w3, wzr
   4df6c:	bl	bfd0 <mpfr_sub@plt>
   4df70:	ldr	x8, [sp, #104]
   4df74:	ldur	x9, [x29, #-24]
   4df78:	add	x0, sp, #0x58
   4df7c:	sub	x1, x29, #0x48
   4df80:	add	x8, x8, #0x3
   4df84:	cmp	x27, x8
   4df88:	csinc	x8, x8, x20, le
   4df8c:	sub	x8, x8, x9
   4df90:	cmp	x8, #0x0
   4df94:	csinv	x8, x8, xzr, ge  // ge = tcont
   4df98:	add	x8, x9, x8
   4df9c:	mov	w2, wzr
   4dfa0:	add	x20, x8, #0x2
   4dfa4:	bl	c8c0 <mpfr_sqr@plt>
   4dfa8:	add	x0, sp, #0x58
   4dfac:	add	x1, sp, #0x58
   4dfb0:	mov	w2, #0x2                   	// #2
   4dfb4:	mov	w3, wzr
   4dfb8:	bl	cde0 <mpfr_div_2ui@plt>
   4dfbc:	sub	x0, x29, #0x28
   4dfc0:	sub	x1, x29, #0x28
   4dfc4:	add	x2, sp, #0x58
   4dfc8:	mov	w3, wzr
   4dfcc:	bl	c640 <mpfr_add@plt>
   4dfd0:	ldr	x8, [sp, #104]
   4dfd4:	ldur	x9, [x29, #-24]
   4dfd8:	add	x8, x8, #0x3
   4dfdc:	cmp	x20, x8
   4dfe0:	csel	x8, x20, x8, gt
   4dfe4:	sub	x8, x8, x9
   4dfe8:	cmp	x8, #0x0
   4dfec:	csinv	x8, x8, xzr, ge  // ge = tcont
   4dff0:	add	x8, x9, x8
   4dff4:	add	x20, x8, #0x2
   4dff8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4dffc:	ldr	x1, [x0, #2848]
   4e000:	add	x0, x0, #0xb20
   4e004:	blr	x1
   4e008:	ldr	x8, [sp, #48]
   4e00c:	mov	w2, #0x2                   	// #2
   4e010:	add	x1, x8, x0
   4e014:	add	x0, sp, #0x58
   4e018:	bl	c840 <mpfr_cache@plt>
   4e01c:	add	x0, sp, #0x58
   4e020:	add	x1, sp, #0x58
   4e024:	mov	w2, wzr
   4e028:	bl	c8c0 <mpfr_sqr@plt>
   4e02c:	add	x0, sp, #0x58
   4e030:	add	x1, sp, #0x58
   4e034:	mov	w2, #0x6                   	// #6
   4e038:	mov	w3, wzr
   4e03c:	bl	d160 <mpfr_div_ui@plt>
   4e040:	sub	x0, x29, #0x28
   4e044:	sub	x1, x29, #0x28
   4e048:	add	x2, sp, #0x58
   4e04c:	mov	w3, wzr
   4e050:	bl	bfd0 <mpfr_sub@plt>
   4e054:	ldur	x8, [x29, #-24]
   4e058:	cmp	x20, #0x3
   4e05c:	csel	x9, x20, x25, gt
   4e060:	cmp	x8, x19
   4e064:	sub	x9, x9, x8
   4e068:	b.lt	4e0ac <mpfr_li2@@Base+0x1574>  // b.tstop
   4e06c:	ldur	x10, [x29, #-40]
   4e070:	cmp	x9, #0x0
   4e074:	sub	x8, x22, x8
   4e078:	csinv	x9, x9, xzr, ge  // ge = tcont
   4e07c:	sub	x8, x8, x9
   4e080:	sub	x9, x10, #0x1
   4e084:	ldur	x0, [x29, #-16]
   4e088:	add	x10, x10, #0x3e
   4e08c:	cmp	x9, #0x0
   4e090:	csel	x9, x10, x9, lt  // lt = tstop
   4e094:	asr	x9, x9, #6
   4e098:	add	x1, x9, #0x1
   4e09c:	sub	x2, x8, #0x2
   4e0a0:	mov	x3, x26
   4e0a4:	bl	c830 <mpfr_round_p@plt>
   4e0a8:	cbnz	w0, 4e168 <mpfr_li2@@Base+0x1630>
   4e0ac:	sub	x8, x19, x22
   4e0b0:	sub	x8, x8, #0x105
   4e0b4:	cmp	x23, x8
   4e0b8:	b.gt	4e130 <mpfr_li2@@Base+0x15f8>
   4e0bc:	add	x22, x22, x23
   4e0c0:	cmp	x22, #0x0
   4e0c4:	cinc	x8, x22, lt  // lt = tstop
   4e0c8:	sub	x0, x29, #0x28
   4e0cc:	mov	x1, x22
   4e0d0:	asr	x23, x8, #1
   4e0d4:	bl	c330 <mpfr_set_prec@plt>
   4e0d8:	sub	x0, x29, #0x48
   4e0dc:	mov	x1, x22
   4e0e0:	bl	c330 <mpfr_set_prec@plt>
   4e0e4:	sub	x0, x29, #0x68
   4e0e8:	mov	x1, x22
   4e0ec:	bl	c330 <mpfr_set_prec@plt>
   4e0f0:	add	x0, sp, #0x58
   4e0f4:	mov	x1, x22
   4e0f8:	bl	c330 <mpfr_set_prec@plt>
   4e0fc:	add	x0, sp, #0x38
   4e100:	mov	x1, x22
   4e104:	bl	c330 <mpfr_set_prec@plt>
   4e108:	b	4de04 <mpfr_li2@@Base+0x12cc>
   4e10c:	mov	x8, xzr
   4e110:	b	4dee4 <mpfr_li2@@Base+0x13ac>
   4e114:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4e118:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4e11c:	mov	w1, #0x24d                 	// #589
   4e120:	add	x0, x0, #0xdae
   4e124:	add	x2, x2, #0xdc9
   4e128:	bl	d030 <mpfr_assert_fail@plt>
   4e12c:	b	4ded8 <mpfr_li2@@Base+0x13a0>
   4e130:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4e134:	adrp	x2, 5f000 <mpfr_l2b_62_1__tab@@Base+0x3700>
   4e138:	mov	w1, #0x266                 	// #614
   4e13c:	add	x0, x0, #0xdae
   4e140:	add	x2, x2, #0x5cf
   4e144:	bl	d030 <mpfr_assert_fail@plt>
   4e148:	b	4e0bc <mpfr_li2@@Base+0x1584>
   4e14c:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4e150:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4e154:	mov	w1, #0x24d                 	// #589
   4e158:	add	x0, x0, #0xdae
   4e15c:	add	x2, x2, #0xdc9
   4e160:	bl	d030 <mpfr_assert_fail@plt>
   4e164:	b	4df0c <mpfr_li2@@Base+0x13d4>
   4e168:	ldur	w3, [x29, #-32]
   4e16c:	ldr	w2, [sp, #12]
   4e170:	sub	x1, x29, #0x28
   4e174:	mov	x0, x28
   4e178:	bl	cb70 <mpfr_set4@plt>
   4e17c:	mov	w23, w0
   4e180:	sub	x0, x29, #0x28
   4e184:	sub	x1, x29, #0x48
   4e188:	sub	x2, x29, #0x68
   4e18c:	add	x3, sp, #0x58
   4e190:	add	x4, sp, #0x38
   4e194:	mov	x5, xzr
   4e198:	bl	c650 <mpfr_clears@plt>
   4e19c:	b	4db0c <mpfr_li2@@Base+0xfd4>
   4e1a0:	ldr	w2, [sp, #12]
   4e1a4:	mov	x0, x28
   4e1a8:	mov	x1, x21
   4e1ac:	bl	4e6c8 <mpfr_li2@@Base+0x1b90>
   4e1b0:	mov	w23, w0
   4e1b4:	cbnz	w0, 4db0c <mpfr_li2@@Base+0xfd4>
   4e1b8:	b	4ddb0 <mpfr_li2@@Base+0x1278>
   4e1bc:	mov	x0, x28
   4e1c0:	mov	w1, w23
   4e1c4:	mov	w2, w25
   4e1c8:	b	4d2bc <mpfr_li2@@Base+0x784>
   4e1cc:	ldr	w2, [sp, #12]
   4e1d0:	mov	x0, x28
   4e1d4:	mov	w1, w23
   4e1d8:	b	4d2bc <mpfr_li2@@Base+0x784>
   4e1dc:	sub	sp, sp, #0x100
   4e1e0:	stp	x29, x30, [sp, #160]
   4e1e4:	stp	x28, x27, [sp, #176]
   4e1e8:	stp	x26, x25, [sp, #192]
   4e1ec:	stp	x24, x23, [sp, #208]
   4e1f0:	stp	x22, x21, [sp, #224]
   4e1f4:	stp	x20, x19, [sp, #240]
   4e1f8:	ldr	x19, [x0]
   4e1fc:	mov	w23, w2
   4e200:	mov	x21, x1
   4e204:	add	x29, sp, #0xa0
   4e208:	subs	x20, x19, #0x1
   4e20c:	str	x0, [sp, #8]
   4e210:	b.eq	4e4c4 <mpfr_li2@@Base+0x198c>  // b.none
   4e214:	b.le	4e4cc <mpfr_li2@@Base+0x1994>
   4e218:	clz	x8, x20
   4e21c:	mov	w9, #0x40                  	// #64
   4e220:	sub	x8, x9, x8
   4e224:	add	x8, x19, x8
   4e228:	add	x22, x8, #0x4
   4e22c:	sub	x0, x29, #0x20
   4e230:	mov	x1, x22
   4e234:	bl	cf60 <mpfr_init2@plt>
   4e238:	sub	x0, x29, #0x40
   4e23c:	mov	x1, x22
   4e240:	bl	cf60 <mpfr_init2@plt>
   4e244:	add	x0, sp, #0x40
   4e248:	mov	x1, x22
   4e24c:	bl	cf60 <mpfr_init2@plt>
   4e250:	add	x0, sp, #0x20
   4e254:	mov	x1, x22
   4e258:	bl	cf60 <mpfr_init2@plt>
   4e25c:	cmp	w23, #0x0
   4e260:	mov	w25, #0x40                  	// #64
   4e264:	cinc	x8, x19, eq  // eq = none
   4e268:	str	w23, [sp, #20]
   4e26c:	str	x8, [sp, #24]
   4e270:	sub	x0, x29, #0x40
   4e274:	mov	w2, #0x2                   	// #2
   4e278:	mov	x1, x21
   4e27c:	bl	c8c0 <mpfr_sqr@plt>
   4e280:	ldr	w3, [x21, #8]
   4e284:	add	x0, sp, #0x40
   4e288:	mov	w2, #0x2                   	// #2
   4e28c:	mov	x1, x21
   4e290:	bl	cb70 <mpfr_set4@plt>
   4e294:	ldr	w3, [x21, #8]
   4e298:	sub	x0, x29, #0x20
   4e29c:	mov	w2, #0x2                   	// #2
   4e2a0:	mov	x1, x21
   4e2a4:	bl	cb70 <mpfr_set4@plt>
   4e2a8:	ldur	x20, [x29, #-16]
   4e2ac:	mov	x26, xzr
   4e2b0:	mov	x19, xzr
   4e2b4:	mov	x23, xzr
   4e2b8:	mov	w24, #0xd                   	// #13
   4e2bc:	mov	w27, #0x1                   	// #1
   4e2c0:	add	x0, sp, #0x40
   4e2c4:	sub	x1, x29, #0x40
   4e2c8:	add	x2, sp, #0x40
   4e2cc:	mov	w3, #0x2                   	// #2
   4e2d0:	bl	c1b0 <mpfr_mul@plt>
   4e2d4:	add	x28, x26, #0x2
   4e2d8:	add	x0, sp, #0x40
   4e2dc:	add	x1, sp, #0x40
   4e2e0:	mov	w3, #0x2                   	// #2
   4e2e4:	mov	x2, x28
   4e2e8:	bl	d160 <mpfr_div_ui@plt>
   4e2ec:	add	x0, sp, #0x40
   4e2f0:	add	x1, sp, #0x40
   4e2f4:	mov	w3, #0x2                   	// #2
   4e2f8:	mov	x2, x28
   4e2fc:	bl	d160 <mpfr_div_ui@plt>
   4e300:	add	x26, x26, #0x3
   4e304:	add	x0, sp, #0x40
   4e308:	add	x1, sp, #0x40
   4e30c:	mov	w3, #0x2                   	// #2
   4e310:	mov	x2, x26
   4e314:	bl	d160 <mpfr_div_ui@plt>
   4e318:	add	x0, sp, #0x40
   4e31c:	add	x1, sp, #0x40
   4e320:	mov	w3, #0x2                   	// #2
   4e324:	mov	x2, x26
   4e328:	bl	d160 <mpfr_div_ui@plt>
   4e32c:	mov	x0, x27
   4e330:	bl	cd10 <mpfr_bernoulli_cache@plt>
   4e334:	mov	x2, x0
   4e338:	add	x0, sp, #0x20
   4e33c:	add	x1, sp, #0x40
   4e340:	mov	w3, wzr
   4e344:	bl	c9a0 <mpfr_mul_z@plt>
   4e348:	sub	x0, x29, #0x20
   4e34c:	sub	x1, x29, #0x20
   4e350:	add	x2, sp, #0x20
   4e354:	mov	w3, wzr
   4e358:	bl	c640 <mpfr_add@plt>
   4e35c:	ldr	x9, [sp, #48]
   4e360:	add	x8, x20, x23
   4e364:	ldur	x20, [x29, #-16]
   4e368:	add	x27, x27, #0x1
   4e36c:	add	x10, x9, w24, uxtw
   4e370:	cmp	x8, x10
   4e374:	csel	x8, x8, x10, gt
   4e378:	sub	x8, x8, x20
   4e37c:	cmp	x8, #0x0
   4e380:	sub	x10, x20, x22
   4e384:	csinv	x8, x8, xzr, ge  // ge = tcont
   4e388:	add	x19, x19, #0x6
   4e38c:	cmp	x9, x10
   4e390:	add	x23, x8, #0x2
   4e394:	add	x24, x24, #0x5
   4e398:	mov	x26, x28
   4e39c:	b.gt	4e2c0 <mpfr_li2@@Base+0x1788>
   4e3a0:	ldr	x8, [x21, #16]
   4e3a4:	mov	x10, #0xfffffffffffffeff    	// #-257
   4e3a8:	and	x9, x19, #0xfffffffe
   4e3ac:	movk	x10, #0x7fff, lsl #48
   4e3b0:	add	x10, x10, #0x105
   4e3b4:	sub	x8, x8, x9
   4e3b8:	cmp	x20, x10
   4e3bc:	sub	x8, x8, #0x5
   4e3c0:	b.lt	4e400 <mpfr_li2@@Base+0x18c8>  // b.tstop
   4e3c4:	ldur	x9, [x29, #-32]
   4e3c8:	cmp	x23, x8
   4e3cc:	ldur	x0, [x29, #-8]
   4e3d0:	csel	x8, x23, x8, gt
   4e3d4:	sub	x10, x9, #0x1
   4e3d8:	add	x9, x9, #0x3e
   4e3dc:	cmp	x10, #0x0
   4e3e0:	ldr	x3, [sp, #24]
   4e3e4:	csel	x9, x9, x10, lt  // lt = tstop
   4e3e8:	mvn	x8, x8
   4e3ec:	asr	x9, x9, #6
   4e3f0:	add	x1, x9, #0x1
   4e3f4:	add	x2, x22, x8
   4e3f8:	bl	c830 <mpfr_round_p@plt>
   4e3fc:	cbnz	w0, 4e474 <mpfr_li2@@Base+0x193c>
   4e400:	mov	x8, #0xfffffffffffffeff    	// #-257
   4e404:	movk	x8, #0x7fff, lsl #48
   4e408:	sub	x8, x8, x22
   4e40c:	cmp	x25, x8
   4e410:	b.gt	4e458 <mpfr_li2@@Base+0x1920>
   4e414:	add	x22, x22, x25
   4e418:	cmp	x22, #0x0
   4e41c:	cinc	x8, x22, lt  // lt = tstop
   4e420:	sub	x0, x29, #0x20
   4e424:	mov	x1, x22
   4e428:	asr	x25, x8, #1
   4e42c:	bl	c330 <mpfr_set_prec@plt>
   4e430:	sub	x0, x29, #0x40
   4e434:	mov	x1, x22
   4e438:	bl	c330 <mpfr_set_prec@plt>
   4e43c:	add	x0, sp, #0x40
   4e440:	mov	x1, x22
   4e444:	bl	c330 <mpfr_set_prec@plt>
   4e448:	add	x0, sp, #0x20
   4e44c:	mov	x1, x22
   4e450:	bl	c330 <mpfr_set_prec@plt>
   4e454:	b	4e270 <mpfr_li2@@Base+0x1738>
   4e458:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4e45c:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   4e460:	mov	w1, #0x5e                  	// #94
   4e464:	add	x0, x0, #0xdae
   4e468:	add	x2, x2, #0x26
   4e46c:	bl	d030 <mpfr_assert_fail@plt>
   4e470:	b	4e414 <mpfr_li2@@Base+0x18dc>
   4e474:	ldur	w3, [x29, #-24]
   4e478:	ldr	x0, [sp, #8]
   4e47c:	ldr	w2, [sp, #20]
   4e480:	sub	x1, x29, #0x20
   4e484:	bl	cb70 <mpfr_set4@plt>
   4e488:	sub	x0, x29, #0x20
   4e48c:	sub	x1, x29, #0x40
   4e490:	add	x2, sp, #0x40
   4e494:	add	x3, sp, #0x20
   4e498:	mov	x4, xzr
   4e49c:	bl	c650 <mpfr_clears@plt>
   4e4a0:	mov	w0, w26
   4e4a4:	ldp	x20, x19, [sp, #240]
   4e4a8:	ldp	x22, x21, [sp, #224]
   4e4ac:	ldp	x24, x23, [sp, #208]
   4e4b0:	ldp	x26, x25, [sp, #192]
   4e4b4:	ldp	x28, x27, [sp, #176]
   4e4b8:	ldp	x29, x30, [sp, #160]
   4e4bc:	add	sp, sp, #0x100
   4e4c0:	ret
   4e4c4:	mov	x8, xzr
   4e4c8:	b	4e224 <mpfr_li2@@Base+0x16ec>
   4e4cc:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4e4d0:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4e4d4:	add	x0, x0, #0xdae
   4e4d8:	add	x2, x2, #0xdd3
   4e4dc:	mov	w1, #0x31                  	// #49
   4e4e0:	bl	d030 <mpfr_assert_fail@plt>
   4e4e4:	b	4e218 <mpfr_li2@@Base+0x16e0>
   4e4e8:	sub	sp, sp, #0x80
   4e4ec:	stp	x29, x30, [sp, #64]
   4e4f0:	stp	x24, x23, [sp, #80]
   4e4f4:	stp	x22, x21, [sp, #96]
   4e4f8:	stp	x20, x19, [sp, #112]
   4e4fc:	ldr	x24, [x0]
   4e500:	mov	x21, x1
   4e504:	mov	w19, w2
   4e508:	mov	x20, x0
   4e50c:	mov	w1, #0x26                  	// #38
   4e510:	mov	x0, x21
   4e514:	mov	x2, xzr
   4e518:	add	x29, sp, #0x40
   4e51c:	add	x22, x24, #0x14
   4e520:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4e524:	tbnz	w0, #31, 4e690 <mpfr_li2@@Base+0x1b58>
   4e528:	add	x0, sp, #0x20
   4e52c:	mov	x1, x22
   4e530:	bl	cf60 <mpfr_init2@plt>
   4e534:	mov	x0, sp
   4e538:	mov	x1, x22
   4e53c:	bl	cf60 <mpfr_init2@plt>
   4e540:	add	x0, sp, #0x20
   4e544:	mov	x1, x21
   4e548:	mov	w2, wzr
   4e54c:	bl	c520 <mpfr_log@plt>
   4e550:	add	x0, sp, #0x20
   4e554:	add	x1, sp, #0x20
   4e558:	mov	w2, wzr
   4e55c:	bl	c8c0 <mpfr_sqr@plt>
   4e560:	add	x0, sp, #0x20
   4e564:	add	x1, sp, #0x20
   4e568:	mov	w2, #0x1                   	// #1
   4e56c:	mov	w3, wzr
   4e570:	bl	cde0 <mpfr_div_2ui@plt>
   4e574:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4e578:	ldr	x1, [x0, #2848]
   4e57c:	add	x0, x0, #0xb20
   4e580:	blr	x1
   4e584:	mrs	x8, tpidr_el0
   4e588:	add	x1, x8, x0
   4e58c:	mov	x0, sp
   4e590:	mov	w2, wzr
   4e594:	bl	c840 <mpfr_cache@plt>
   4e598:	mov	x0, sp
   4e59c:	mov	x1, sp
   4e5a0:	mov	w2, wzr
   4e5a4:	bl	c8c0 <mpfr_sqr@plt>
   4e5a8:	mov	x0, sp
   4e5ac:	mov	x1, sp
   4e5b0:	mov	w2, #0x3                   	// #3
   4e5b4:	mov	w3, wzr
   4e5b8:	bl	d160 <mpfr_div_ui@plt>
   4e5bc:	ldr	x8, [sp, #48]
   4e5c0:	ldr	x9, [sp, #16]
   4e5c4:	cmp	x8, x9
   4e5c8:	b.le	4e6ac <mpfr_li2@@Base+0x1b74>
   4e5cc:	add	x0, sp, #0x20
   4e5d0:	mov	x1, sp
   4e5d4:	add	x2, sp, #0x20
   4e5d8:	mov	w3, wzr
   4e5dc:	bl	bfd0 <mpfr_sub@plt>
   4e5e0:	ldr	x8, [sp, #48]
   4e5e4:	mov	x9, #0x4                   	// #4
   4e5e8:	movk	x9, #0x8000, lsl #48
   4e5ec:	mov	w23, wzr
   4e5f0:	cmp	x8, x9
   4e5f4:	b.lt	4e664 <mpfr_li2@@Base+0x1b2c>  // b.tstop
   4e5f8:	ldr	x9, [x21, #16]
   4e5fc:	sub	x8, x22, x8
   4e600:	cmp	x9, x8
   4e604:	b.lt	4e664 <mpfr_li2@@Base+0x1b2c>  // b.tstop
   4e608:	ldr	x8, [sp, #32]
   4e60c:	ldr	x9, [x20]
   4e610:	ldr	x0, [sp, #56]
   4e614:	add	x2, x24, #0x10
   4e618:	sub	x10, x8, #0x1
   4e61c:	add	x8, x8, #0x3e
   4e620:	cmp	x10, #0x0
   4e624:	csel	x8, x8, x10, lt  // lt = tstop
   4e628:	cmp	w19, #0x0
   4e62c:	asr	x8, x8, #6
   4e630:	add	x1, x8, #0x1
   4e634:	cinc	x3, x9, eq  // eq = none
   4e638:	bl	c830 <mpfr_round_p@plt>
   4e63c:	cbz	w0, 4e660 <mpfr_li2@@Base+0x1b28>
   4e640:	ldr	w3, [sp, #40]
   4e644:	add	x1, sp, #0x20
   4e648:	mov	x0, x20
   4e64c:	mov	w2, w19
   4e650:	bl	cb70 <mpfr_set4@plt>
   4e654:	cmp	w19, #0x5
   4e658:	csinc	w23, w0, wzr, ne  // ne = any
   4e65c:	b	4e664 <mpfr_li2@@Base+0x1b2c>
   4e660:	mov	w23, wzr
   4e664:	add	x0, sp, #0x20
   4e668:	bl	c4f0 <mpfr_clear@plt>
   4e66c:	mov	x0, sp
   4e670:	bl	c4f0 <mpfr_clear@plt>
   4e674:	mov	w0, w23
   4e678:	ldp	x20, x19, [sp, #112]
   4e67c:	ldp	x22, x21, [sp, #96]
   4e680:	ldp	x24, x23, [sp, #80]
   4e684:	ldp	x29, x30, [sp, #64]
   4e688:	add	sp, sp, #0x80
   4e68c:	ret
   4e690:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4e694:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4e698:	add	x0, x0, #0xdae
   4e69c:	add	x2, x2, #0xdde
   4e6a0:	mov	w1, #0x82                  	// #130
   4e6a4:	bl	d030 <mpfr_assert_fail@plt>
   4e6a8:	b	4e528 <mpfr_li2@@Base+0x19f0>
   4e6ac:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4e6b0:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4e6b4:	add	x0, x0, #0xdae
   4e6b8:	add	x2, x2, #0xe4c
   4e6bc:	mov	w1, #0x90                  	// #144
   4e6c0:	bl	d030 <mpfr_assert_fail@plt>
   4e6c4:	b	4e5cc <mpfr_li2@@Base+0x1a94>
   4e6c8:	sub	sp, sp, #0x80
   4e6cc:	stp	x29, x30, [sp, #64]
   4e6d0:	stp	x22, x21, [sp, #96]
   4e6d4:	stp	x20, x19, [sp, #112]
   4e6d8:	str	x23, [sp, #80]
   4e6dc:	ldr	x23, [x0]
   4e6e0:	mov	x21, x1
   4e6e4:	mov	w19, w2
   4e6e8:	mov	x20, x0
   4e6ec:	mov	x1, #0xfffffffffffffff9    	// #-7
   4e6f0:	mov	x0, x21
   4e6f4:	mov	x2, xzr
   4e6f8:	add	x29, sp, #0x40
   4e6fc:	add	x22, x23, #0x14
   4e700:	bl	c890 <mpfr_cmp_si_2exp@plt>
   4e704:	cmp	w0, #0x1
   4e708:	b.ge	4e884 <mpfr_li2@@Base+0x1d4c>  // b.tcont
   4e70c:	add	x0, sp, #0x20
   4e710:	mov	x1, x22
   4e714:	bl	cf60 <mpfr_init2@plt>
   4e718:	mov	x0, sp
   4e71c:	mov	x1, x22
   4e720:	bl	cf60 <mpfr_init2@plt>
   4e724:	add	x0, sp, #0x20
   4e728:	mov	x1, x21
   4e72c:	mov	w2, wzr
   4e730:	bl	c1d0 <mpfr_neg@plt>
   4e734:	add	x0, sp, #0x20
   4e738:	add	x1, sp, #0x20
   4e73c:	mov	w2, wzr
   4e740:	bl	c520 <mpfr_log@plt>
   4e744:	add	x0, sp, #0x20
   4e748:	add	x1, sp, #0x20
   4e74c:	mov	w2, wzr
   4e750:	bl	c8c0 <mpfr_sqr@plt>
   4e754:	add	x0, sp, #0x20
   4e758:	add	x1, sp, #0x20
   4e75c:	mov	w2, #0x1                   	// #1
   4e760:	mov	w3, wzr
   4e764:	bl	cde0 <mpfr_div_2ui@plt>
   4e768:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4e76c:	ldr	x1, [x0, #2848]
   4e770:	add	x0, x0, #0xb20
   4e774:	blr	x1
   4e778:	mrs	x8, tpidr_el0
   4e77c:	add	x1, x8, x0
   4e780:	mov	x0, sp
   4e784:	mov	w2, wzr
   4e788:	bl	c840 <mpfr_cache@plt>
   4e78c:	mov	x0, sp
   4e790:	mov	x1, sp
   4e794:	mov	w2, wzr
   4e798:	bl	c8c0 <mpfr_sqr@plt>
   4e79c:	mov	x0, sp
   4e7a0:	mov	x1, sp
   4e7a4:	mov	w2, #0x6                   	// #6
   4e7a8:	mov	w3, wzr
   4e7ac:	bl	d160 <mpfr_div_ui@plt>
   4e7b0:	ldr	x8, [sp, #48]
   4e7b4:	ldr	x9, [sp, #16]
   4e7b8:	cmp	x8, x9
   4e7bc:	b.lt	4e8a0 <mpfr_li2@@Base+0x1d68>  // b.tstop
   4e7c0:	add	x0, sp, #0x20
   4e7c4:	add	x1, sp, #0x20
   4e7c8:	mov	x2, sp
   4e7cc:	mov	w3, wzr
   4e7d0:	bl	c640 <mpfr_add@plt>
   4e7d4:	ldr	x8, [sp, #48]
   4e7d8:	mov	x9, #0x4                   	// #4
   4e7dc:	movk	x9, #0x8000, lsl #48
   4e7e0:	mov	w22, wzr
   4e7e4:	cmp	x8, x9
   4e7e8:	b.lt	4e858 <mpfr_li2@@Base+0x1d20>  // b.tstop
   4e7ec:	ldr	x9, [x21, #16]
   4e7f0:	sub	x8, x23, x8
   4e7f4:	add	x8, x8, #0x12
   4e7f8:	cmp	x9, x8
   4e7fc:	b.lt	4e858 <mpfr_li2@@Base+0x1d20>  // b.tstop
   4e800:	ldr	x8, [sp, #32]
   4e804:	ldr	x9, [x20]
   4e808:	ldr	x0, [sp, #56]
   4e80c:	add	x2, x23, #0x10
   4e810:	sub	x10, x8, #0x1
   4e814:	add	x8, x8, #0x3e
   4e818:	cmp	x10, #0x0
   4e81c:	csel	x8, x8, x10, lt  // lt = tstop
   4e820:	cmp	w19, #0x0
   4e824:	asr	x8, x8, #6
   4e828:	add	x1, x8, #0x1
   4e82c:	cinc	x3, x9, eq  // eq = none
   4e830:	bl	c830 <mpfr_round_p@plt>
   4e834:	cbz	w0, 4e854 <mpfr_li2@@Base+0x1d1c>
   4e838:	add	x1, sp, #0x20
   4e83c:	mov	x0, x20
   4e840:	mov	w2, w19
   4e844:	bl	c1d0 <mpfr_neg@plt>
   4e848:	cmp	w19, #0x5
   4e84c:	csinc	w22, w0, wzr, ne  // ne = any
   4e850:	b	4e858 <mpfr_li2@@Base+0x1d20>
   4e854:	mov	w22, wzr
   4e858:	add	x0, sp, #0x20
   4e85c:	bl	c4f0 <mpfr_clear@plt>
   4e860:	mov	x0, sp
   4e864:	bl	c4f0 <mpfr_clear@plt>
   4e868:	mov	w0, w22
   4e86c:	ldp	x20, x19, [sp, #112]
   4e870:	ldp	x22, x21, [sp, #96]
   4e874:	ldr	x23, [sp, #80]
   4e878:	ldp	x29, x30, [sp, #64]
   4e87c:	add	sp, sp, #0x80
   4e880:	ret
   4e884:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4e888:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4e88c:	add	x0, x0, #0xdae
   4e890:	add	x2, x2, #0xe70
   4e894:	mov	w1, #0xb4                  	// #180
   4e898:	bl	d030 <mpfr_assert_fail@plt>
   4e89c:	b	4e70c <mpfr_li2@@Base+0x1bd4>
   4e8a0:	adrp	x0, 60000 <mpfr_bases@@Base+0x408>
   4e8a4:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   4e8a8:	add	x0, x0, #0xdae
   4e8ac:	add	x2, x2, #0xf8c
   4e8b0:	mov	w1, #0xc0                  	// #192
   4e8b4:	bl	d030 <mpfr_assert_fail@plt>
   4e8b8:	b	4e7c0 <mpfr_li2@@Base+0x1c88>

000000000004e8bc <mpfr_rec_sqrt@@Base>:
   4e8bc:	stp	x29, x30, [sp, #-96]!
   4e8c0:	stp	x28, x27, [sp, #16]
   4e8c4:	stp	x26, x25, [sp, #32]
   4e8c8:	stp	x24, x23, [sp, #48]
   4e8cc:	stp	x22, x21, [sp, #64]
   4e8d0:	stp	x20, x19, [sp, #80]
   4e8d4:	mov	x29, sp
   4e8d8:	sub	sp, sp, #0x30
   4e8dc:	ldr	x20, [x1, #16]
   4e8e0:	mov	x8, #0x2                   	// #2
   4e8e4:	movk	x8, #0x8000, lsl #48
   4e8e8:	add	x9, x8, #0x2
   4e8ec:	mov	x21, x1
   4e8f0:	cmp	x20, x9
   4e8f4:	mov	x19, x0
   4e8f8:	b.lt	4eaf4 <mpfr_rec_sqrt@@Base+0x238>  // b.tstop
   4e8fc:	ldr	w9, [x21, #8]
   4e900:	tbnz	w9, #31, 4eb30 <mpfr_rec_sqrt@@Base+0x274>
   4e904:	ldr	x22, [x19]
   4e908:	mov	w8, #0x1                   	// #1
   4e90c:	mvn	w9, w20
   4e910:	str	w8, [x19, #8]
   4e914:	sub	x8, x22, #0x1
   4e918:	add	x10, x22, #0x3f
   4e91c:	and	w26, w9, #0x1
   4e920:	ldr	x28, [x21]
   4e924:	add	x9, x22, #0xb
   4e928:	asr	x11, x8, #6
   4e92c:	and	x8, x10, #0xffffffffffffffc0
   4e930:	cmp	x9, x8
   4e934:	csel	x23, x8, x9, lt  // lt = tstop
   4e938:	cmp	w2, #0x0
   4e93c:	cinc	x25, x22, eq  // eq = none
   4e940:	stur	w2, [x29, #-20]
   4e944:	stur	x11, [x29, #-32]
   4e948:	sub	x8, x23, #0x1
   4e94c:	asr	x9, x8, #6
   4e950:	cmp	x19, x21
   4e954:	add	x8, x9, #0x1
   4e958:	stur	xzr, [x29, #-16]
   4e95c:	stur	x9, [x29, #-40]
   4e960:	b.eq	4e978 <mpfr_rec_sqrt@@Base+0xbc>  // b.none
   4e964:	cmp	x9, x11
   4e968:	b.gt	4e978 <mpfr_rec_sqrt@@Base+0xbc>
   4e96c:	ldr	x27, [x19, #24]
   4e970:	mov	x24, x8
   4e974:	b	4e99c <mpfr_rec_sqrt@@Base+0xe0>
   4e978:	lsl	x1, x8, #3
   4e97c:	mov	x24, x8
   4e980:	cmp	x1, #0x4, lsl #12
   4e984:	b.hi	4ea08 <mpfr_rec_sqrt@@Base+0x14c>  // b.pmore
   4e988:	add	x9, x1, #0xf
   4e98c:	mov	x8, sp
   4e990:	and	x9, x9, #0xfffffffffffffff0
   4e994:	sub	x27, x8, x9
   4e998:	mov	sp, x27
   4e99c:	ldr	x2, [x21, #24]
   4e9a0:	mov	x0, x27
   4e9a4:	mov	x1, x23
   4e9a8:	mov	x3, x28
   4e9ac:	mov	w4, w26
   4e9b0:	bl	4ebfc <mpfr_rec_sqrt@@Base+0x340>
   4e9b4:	cmp	x23, x28
   4e9b8:	cset	w8, lt  // lt = tstop
   4e9bc:	sub	x2, x23, x8
   4e9c0:	mov	x0, x27
   4e9c4:	mov	x1, x24
   4e9c8:	mov	x3, x25
   4e9cc:	bl	c830 <mpfr_round_p@plt>
   4e9d0:	cbnz	w0, 4ea20 <mpfr_rec_sqrt@@Base+0x164>
   4e9d4:	stur	x24, [x29, #-48]
   4e9d8:	cbnz	w26, 4e9f4 <mpfr_rec_sqrt@@Base+0x138>
   4e9dc:	ldr	x8, [x21, #16]
   4e9e0:	mov	w1, #0x1                   	// #1
   4e9e4:	mov	x0, x21
   4e9e8:	sub	x2, x8, #0x1
   4e9ec:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4e9f0:	cbz	w0, 4ebcc <mpfr_rec_sqrt@@Base+0x310>
   4e9f4:	ldur	x0, [x29, #-16]
   4e9f8:	cbnz	x0, 4ea18 <mpfr_rec_sqrt@@Base+0x15c>
   4e9fc:	ldur	x11, [x29, #-32]
   4ea00:	add	x23, x23, #0x40
   4ea04:	b	4e948 <mpfr_rec_sqrt@@Base+0x8c>
   4ea08:	sub	x0, x29, #0x10
   4ea0c:	bl	c220 <mpfr_tmp_allocate@plt>
   4ea10:	mov	x27, x0
   4ea14:	b	4e99c <mpfr_rec_sqrt@@Base+0xe0>
   4ea18:	bl	c8d0 <mpfr_tmp_free@plt>
   4ea1c:	b	4e9fc <mpfr_rec_sqrt@@Base+0x140>
   4ea20:	orr	x20, x20, #0xfffffffffffffffe
   4ea24:	mov	x4, x22
   4ea28:	ldur	w22, [x29, #-20]
   4ea2c:	ldr	x0, [x19, #24]
   4ea30:	sub	x6, x29, #0x4
   4ea34:	mov	x1, x27
   4ea38:	mov	x2, x23
   4ea3c:	mov	w3, wzr
   4ea40:	mov	w5, w22
   4ea44:	bl	cf10 <mpfr_round_raw@plt>
   4ea48:	ldr	x8, [x21, #16]
   4ea4c:	add	x8, x8, x20
   4ea50:	cmp	x8, #0x0
   4ea54:	cinc	x8, x8, lt  // lt = tstop
   4ea58:	neg	x8, x8, asr #1
   4ea5c:	str	x8, [x19, #16]
   4ea60:	cbnz	w0, 4eb58 <mpfr_rec_sqrt@@Base+0x29c>
   4ea64:	ldur	x0, [x29, #-16]
   4ea68:	cbnz	x0, 4eb78 <mpfr_rec_sqrt@@Base+0x2bc>
   4ea6c:	ldr	x10, [x19, #16]
   4ea70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4ea74:	ldr	x1, [x0, #2736]
   4ea78:	add	x0, x0, #0xab0
   4ea7c:	blr	x1
   4ea80:	mrs	x9, tpidr_el0
   4ea84:	ldr	x11, [x9, x0]
   4ea88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4ea8c:	ldr	x1, [x0, #2768]
   4ea90:	add	x0, x0, #0xad0
   4ea94:	blr	x1
   4ea98:	ldur	w8, [x29, #-4]
   4ea9c:	cmp	x10, x11
   4eaa0:	b.lt	4eb80 <mpfr_rec_sqrt@@Base+0x2c4>  // b.tstop
   4eaa4:	ldr	x11, [x9, x0]
   4eaa8:	cmp	x10, x11
   4eaac:	b.gt	4eb80 <mpfr_rec_sqrt@@Base+0x2c4>
   4eab0:	cbz	w8, 4ead0 <mpfr_rec_sqrt@@Base+0x214>
   4eab4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4eab8:	ldr	x1, [x0, #2800]
   4eabc:	add	x0, x0, #0xaf0
   4eac0:	blr	x1
   4eac4:	ldr	w10, [x9, x0]
   4eac8:	orr	w10, w10, #0x8
   4eacc:	str	w10, [x9, x0]
   4ead0:	mov	w0, w8
   4ead4:	mov	sp, x29
   4ead8:	ldp	x20, x19, [sp, #80]
   4eadc:	ldp	x22, x21, [sp, #64]
   4eae0:	ldp	x24, x23, [sp, #48]
   4eae4:	ldp	x26, x25, [sp, #32]
   4eae8:	ldp	x28, x27, [sp, #16]
   4eaec:	ldp	x29, x30, [sp], #96
   4eaf0:	ret
   4eaf4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4eaf8:	cmp	x20, x9
   4eafc:	b.eq	4eb98 <mpfr_rec_sqrt@@Base+0x2dc>  // b.none
   4eb00:	mov	x9, #0x2                   	// #2
   4eb04:	movk	x9, #0x8000, lsl #48
   4eb08:	cmp	x20, x9
   4eb0c:	b.eq	4eb30 <mpfr_rec_sqrt@@Base+0x274>  // b.none
   4eb10:	ldr	w9, [x21, #8]
   4eb14:	tbnz	w9, #31, 4eb30 <mpfr_rec_sqrt@@Base+0x274>
   4eb18:	mov	w9, #0x1                   	// #1
   4eb1c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   4eb20:	mov	w8, wzr
   4eb24:	str	w9, [x19, #8]
   4eb28:	str	x10, [x19, #16]
   4eb2c:	b	4ead0 <mpfr_rec_sqrt@@Base+0x214>
   4eb30:	str	x8, [x19, #16]
   4eb34:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4eb38:	ldr	x1, [x0, #2800]
   4eb3c:	add	x0, x0, #0xaf0
   4eb40:	blr	x1
   4eb44:	mrs	x9, tpidr_el0
   4eb48:	ldr	w10, [x9, x0]
   4eb4c:	mov	w8, wzr
   4eb50:	orr	w10, w10, #0x4
   4eb54:	b	4eacc <mpfr_rec_sqrt@@Base+0x210>
   4eb58:	ldr	x9, [x19, #24]
   4eb5c:	ldur	x10, [x29, #-32]
   4eb60:	add	x8, x8, #0x1
   4eb64:	str	x8, [x19, #16]
   4eb68:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   4eb6c:	str	x8, [x9, x10, lsl #3]
   4eb70:	ldur	x0, [x29, #-16]
   4eb74:	cbz	x0, 4ea6c <mpfr_rec_sqrt@@Base+0x1b0>
   4eb78:	bl	c8d0 <mpfr_tmp_free@plt>
   4eb7c:	b	4ea6c <mpfr_rec_sqrt@@Base+0x1b0>
   4eb80:	mov	x0, x19
   4eb84:	mov	w1, w8
   4eb88:	mov	w2, w22
   4eb8c:	bl	d020 <mpfr_check_range@plt>
   4eb90:	mov	w8, w0
   4eb94:	b	4ead0 <mpfr_rec_sqrt@@Base+0x214>
   4eb98:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4eb9c:	mov	w9, #0x1                   	// #1
   4eba0:	str	x8, [x19, #16]
   4eba4:	str	w9, [x19, #8]
   4eba8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4ebac:	ldr	x1, [x0, #2800]
   4ebb0:	add	x0, x0, #0xaf0
   4ebb4:	blr	x1
   4ebb8:	mrs	x9, tpidr_el0
   4ebbc:	ldr	w10, [x9, x0]
   4ebc0:	mov	w8, wzr
   4ebc4:	orr	w10, w10, #0x20
   4ebc8:	b	4eacc <mpfr_rec_sqrt@@Base+0x210>
   4ebcc:	ldp	x2, x20, [x29, #-48]
   4ebd0:	mov	w9, #0x1                   	// #1
   4ebd4:	mov	x0, x27
   4ebd8:	mov	x1, x27
   4ebdc:	lsl	x8, x20, #6
   4ebe0:	sub	x8, x8, x23
   4ebe4:	lsl	x3, x9, x8
   4ebe8:	bl	bf60 <__gmpn_add_1@plt>
   4ebec:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   4ebf0:	str	x8, [x27, x20, lsl #3]
   4ebf4:	mov	x20, #0xfffffffffffffffd    	// #-3
   4ebf8:	b	4ea24 <mpfr_rec_sqrt@@Base+0x168>
   4ebfc:	stp	x29, x30, [sp, #-96]!
   4ec00:	stp	x28, x27, [sp, #16]
   4ec04:	stp	x26, x25, [sp, #32]
   4ec08:	stp	x24, x23, [sp, #48]
   4ec0c:	stp	x22, x21, [sp, #64]
   4ec10:	stp	x20, x19, [sp, #80]
   4ec14:	mov	x29, sp
   4ec18:	sub	sp, sp, #0x90
   4ec1c:	sub	x8, x1, #0x1
   4ec20:	sub	x9, x3, #0x1
   4ec24:	asr	x10, x8, #6
   4ec28:	asr	x8, x9, #6
   4ec2c:	add	x24, x10, #0x1
   4ec30:	add	x9, x8, #0x1
   4ec34:	cmp	x8, x10
   4ec38:	sub	x9, x9, x24
   4ec3c:	csinc	x26, x24, x8, gt
   4ec40:	add	x8, x2, x9, lsl #3
   4ec44:	csel	x9, x9, xzr, gt
   4ec48:	csel	x12, x8, x2, gt
   4ec4c:	cmp	x1, #0xb
   4ec50:	mov	x19, x0
   4ec54:	b.ne	4eca8 <mpfr_rec_sqrt@@Base+0x3ec>  // b.any
   4ec58:	add	x8, x12, x26, lsl #3
   4ec5c:	ldur	x8, [x8, #-8]
   4ec60:	mov	w9, #0x34                  	// #52
   4ec64:	sub	w9, w9, w4
   4ec68:	adrp	x10, 60000 <mpfr_bases@@Base+0x408>
   4ec6c:	lsr	x8, x8, x9
   4ec70:	add	x10, x10, #0xfb2
   4ec74:	lsr	x9, x8, #4
   4ec78:	add	x10, x10, x9, lsl #1
   4ec7c:	and	x9, x9, #0x3f0
   4ec80:	bfxil	x9, x8, #0, #4
   4ec84:	ldurh	w8, [x10, #-256]
   4ec88:	adrp	x10, 61000 <mpfr_bases@@Base+0x1408>
   4ec8c:	add	x10, x10, #0x2b2
   4ec90:	add	x9, x9, x10
   4ec94:	ldurb	w9, [x9, #-128]
   4ec98:	add	w8, w9, w8
   4ec9c:	lsl	x8, x8, #53
   4eca0:	str	x8, [x19]
   4eca4:	b	4f0fc <mpfr_rec_sqrt@@Base+0x840>
   4eca8:	asr	x8, x1, #1
   4ecac:	stp	x9, x10, [x29, #-128]
   4ecb0:	cmp	x1, #0x12
   4ecb4:	mov	w9, #0xb                   	// #11
   4ecb8:	add	x8, x8, #0x2
   4ecbc:	csel	x22, x9, x8, lt  // lt = tstop
   4ecc0:	sxtw	x10, w4
   4ecc4:	mov	w11, #0x1                   	// #1
   4ecc8:	sub	x8, x22, #0x1
   4eccc:	lsl	x9, x22, #1
   4ecd0:	add	x13, x22, x10
   4ecd4:	bfi	x11, x22, #1, #63
   4ecd8:	asr	x14, x8, #6
   4ecdc:	sub	x8, x9, #0x1
   4ece0:	add	x10, x10, x11
   4ece4:	asr	x11, x13, #6
   4ece8:	asr	x8, x8, #6
   4ecec:	sub	x9, x13, #0x2
   4ecf0:	add	x25, x14, #0x1
   4ecf4:	stp	x4, x8, [x29, #-24]
   4ecf8:	sub	x8, x10, #0x1
   4ecfc:	cmp	x11, x26
   4ed00:	stur	x12, [x29, #-112]
   4ed04:	add	x12, x12, x26, lsl #3
   4ed08:	asr	x27, x9, #6
   4ed0c:	sub	x9, x24, x25
   4ed10:	stur	x8, [x29, #-136]
   4ed14:	asr	x20, x8, #6
   4ed18:	csinc	x8, x26, x11, ge  // ge = tcont
   4ed1c:	mov	x28, x2
   4ed20:	mov	x23, x1
   4ed24:	add	x0, x19, x9, lsl #3
   4ed28:	sub	x2, x12, x8, lsl #3
   4ed2c:	lsl	x3, x8, #6
   4ed30:	mov	x1, x22
   4ed34:	stur	x14, [x29, #-96]
   4ed38:	add	x21, x20, #0x1
   4ed3c:	stur	x9, [x29, #-64]
   4ed40:	stur	x0, [x29, #-32]
   4ed44:	bl	4ebfc <mpfr_rec_sqrt@@Base+0x340>
   4ed48:	sub	x8, x21, x27
   4ed4c:	stur	x8, [x29, #-88]
   4ed50:	add	x8, x8, x25
   4ed54:	lsl	x1, x8, #3
   4ed58:	cmp	x1, #0x4, lsl #12
   4ed5c:	stur	x21, [x29, #-104]
   4ed60:	stp	x24, x25, [x29, #-56]
   4ed64:	stp	x8, x27, [x29, #-80]
   4ed68:	stur	xzr, [x29, #-8]
   4ed6c:	b.hi	4ee44 <mpfr_rec_sqrt@@Base+0x588>  // b.pmore
   4ed70:	add	x9, x1, #0xf
   4ed74:	mov	x8, sp
   4ed78:	and	x9, x9, #0xfffffffffffffff0
   4ed7c:	sub	x25, x8, x9
   4ed80:	mov	sp, x25
   4ed84:	ldur	x8, [x29, #-16]
   4ed88:	cmp	x22, #0x20
   4ed8c:	add	x27, x8, #0x1
   4ed90:	b.gt	4edac <mpfr_rec_sqrt@@Base+0x4f0>
   4ed94:	ldr	x8, [x19]
   4ed98:	mov	x24, x25
   4ed9c:	lsr	x8, x8, #32
   4eda0:	mul	x8, x8, x8
   4eda4:	str	x8, [x24, #8]!
   4eda8:	b	4edf8 <mpfr_rec_sqrt@@Base+0x53c>
   4edac:	ldur	x8, [x29, #-96]
   4edb0:	cbz	x8, 4ede0 <mpfr_rec_sqrt@@Base+0x524>
   4edb4:	ldur	x1, [x29, #-32]
   4edb8:	ldur	x22, [x29, #-48]
   4edbc:	mov	x0, x25
   4edc0:	mov	x2, x1
   4edc4:	mov	x3, x22
   4edc8:	bl	c940 <__gmpn_mul_n@plt>
   4edcc:	cmp	x27, x22, lsl #1
   4edd0:	mov	x24, x25
   4edd4:	b.ge	4edf8 <mpfr_rec_sqrt@@Base+0x53c>  // b.tcont
   4edd8:	add	x24, x25, #0x8
   4eddc:	b	4edf8 <mpfr_rec_sqrt@@Base+0x53c>
   4ede0:	ldur	x8, [x29, #-32]
   4ede4:	mov	x24, x25
   4ede8:	ldr	x8, [x8]
   4edec:	umulh	x9, x8, x8
   4edf0:	mul	x8, x8, x8
   4edf4:	stp	x8, x9, [x25]
   4edf8:	stur	x25, [x29, #-40]
   4edfc:	add	x25, x27, x26
   4ee00:	lsl	x1, x25, #3
   4ee04:	cmp	x1, #0x4, lsl #12
   4ee08:	b.hi	4ee54 <mpfr_rec_sqrt@@Base+0x598>  // b.pmore
   4ee0c:	add	x9, x1, #0xf
   4ee10:	mov	x8, sp
   4ee14:	and	x9, x9, #0xfffffffffffffff0
   4ee18:	sub	x22, x8, x9
   4ee1c:	mov	sp, x22
   4ee20:	ldur	x8, [x29, #-16]
   4ee24:	cbz	x8, 4ee68 <mpfr_rec_sqrt@@Base+0x5ac>
   4ee28:	ldur	x3, [x29, #-112]
   4ee2c:	mov	x0, x22
   4ee30:	mov	x1, x24
   4ee34:	mov	x2, x27
   4ee38:	mov	x4, x26
   4ee3c:	bl	cc80 <__gmpn_mul@plt>
   4ee40:	b	4ee80 <mpfr_rec_sqrt@@Base+0x5c4>
   4ee44:	sub	x0, x29, #0x8
   4ee48:	bl	c220 <mpfr_tmp_allocate@plt>
   4ee4c:	mov	x25, x0
   4ee50:	b	4ed84 <mpfr_rec_sqrt@@Base+0x4c8>
   4ee54:	sub	x0, x29, #0x8
   4ee58:	bl	c220 <mpfr_tmp_allocate@plt>
   4ee5c:	mov	x22, x0
   4ee60:	ldur	x8, [x29, #-16]
   4ee64:	cbnz	x8, 4ee28 <mpfr_rec_sqrt@@Base+0x56c>
   4ee68:	ldur	x9, [x29, #-128]
   4ee6c:	ldr	x8, [x24]
   4ee70:	ldr	x9, [x28, x9, lsl #3]
   4ee74:	umulh	x10, x8, x9
   4ee78:	mul	x8, x9, x8
   4ee7c:	stp	x8, x10, [x22]
   4ee80:	add	x8, x22, x25, lsl #3
   4ee84:	mvn	x9, x20
   4ee88:	ldp	x28, x10, [x29, #-32]
   4ee8c:	add	x21, x8, x9, lsl #3
   4ee90:	ldr	x8, [x21, x20, lsl #3]
   4ee94:	ldur	x27, [x29, #-56]
   4ee98:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   4ee9c:	lsr	x9, x9, x10
   4eea0:	ands	x24, x8, x9
   4eea4:	b.eq	4eecc <mpfr_rec_sqrt@@Base+0x610>  // b.none
   4eea8:	ldur	x2, [x29, #-104]
   4eeac:	eor	x8, x24, x8
   4eeb0:	mov	w3, #0x1                   	// #1
   4eeb4:	mov	x0, x21
   4eeb8:	mov	x1, x21
   4eebc:	str	x8, [x21, x20, lsl #3]
   4eec0:	bl	bf60 <__gmpn_add_1@plt>
   4eec4:	ldur	x25, [x29, #-40]
   4eec8:	b	4ef20 <mpfr_rec_sqrt@@Base+0x664>
   4eecc:	orr	x8, x9, x8
   4eed0:	orr	x8, x8, #0x8000000000000000
   4eed4:	str	x8, [x21, x20, lsl #3]
   4eed8:	ldur	x25, [x29, #-40]
   4eedc:	ldur	x8, [x29, #-136]
   4eee0:	tbnz	x8, #63, 4ef20 <mpfr_rec_sqrt@@Base+0x664>
   4eee4:	ldur	x8, [x29, #-16]
   4eee8:	mov	w9, #0x1                   	// #1
   4eeec:	add	x8, x26, x8
   4eef0:	lsl	x8, x8, #3
   4eef4:	sub	x8, x8, x20, lsl #3
   4eef8:	add	x8, x8, x22
   4eefc:	sub	x8, x8, #0x8
   4ef00:	lsl	x10, x9, #3
   4ef04:	ldr	x11, [x8, x10]
   4ef08:	sub	x12, x9, #0x1
   4ef0c:	add	x9, x9, #0x1
   4ef10:	cmp	x12, x20
   4ef14:	mvn	x11, x11
   4ef18:	str	x11, [x8, x10]
   4ef1c:	b.lt	4ef00 <mpfr_rec_sqrt@@Base+0x644>  // b.tstop
   4ef20:	ldur	x2, [x29, #-88]
   4ef24:	cmp	x2, #0x1
   4ef28:	b.ne	4ef48 <mpfr_rec_sqrt@@Base+0x68c>  // b.any
   4ef2c:	ldr	x8, [x21]
   4ef30:	ldr	x9, [x28]
   4ef34:	umulh	x10, x8, x9
   4ef38:	mul	x8, x9, x8
   4ef3c:	stp	x8, x10, [x25]
   4ef40:	ldur	x26, [x29, #-48]
   4ef44:	b	4ef60 <mpfr_rec_sqrt@@Base+0x6a4>
   4ef48:	ldur	x26, [x29, #-48]
   4ef4c:	mov	x0, x25
   4ef50:	mov	x1, x21
   4ef54:	mov	x3, x28
   4ef58:	mov	x4, x26
   4ef5c:	bl	cc80 <__gmpn_mul@plt>
   4ef60:	ldur	x8, [x29, #-72]
   4ef64:	ldur	x9, [x29, #-24]
   4ef68:	sub	x21, x27, x8
   4ef6c:	ldur	x8, [x29, #-80]
   4ef70:	cmp	w9, #0x1
   4ef74:	sub	x8, x8, x21
   4ef78:	add	x25, x25, x8, lsl #3
   4ef7c:	b.ne	4ef94 <mpfr_rec_sqrt@@Base+0x6d8>  // b.any
   4ef80:	sub	x0, x25, #0x8
   4ef84:	add	x2, x21, #0x1
   4ef88:	mov	w3, #0x1                   	// #1
   4ef8c:	mov	x1, x0
   4ef90:	bl	c120 <__gmpn_lshift@plt>
   4ef94:	lsl	x8, x27, #6
   4ef98:	sub	x22, x8, x23
   4ef9c:	subs	x8, x22, #0x1
   4efa0:	b.lt	4f07c <mpfr_rec_sqrt@@Base+0x7c0>  // b.tstop
   4efa4:	ldr	x9, [x25]
   4efa8:	mov	w10, #0x1                   	// #1
   4efac:	lsl	x8, x10, x8
   4efb0:	mov	x0, x25
   4efb4:	and	x3, x9, x8
   4efb8:	mov	x1, x25
   4efbc:	mov	x2, x21
   4efc0:	bl	bf60 <__gmpn_add_1@plt>
   4efc4:	ldr	x8, [x25]
   4efc8:	mov	x9, #0xffffffffffffffff    	// #-1
   4efcc:	lsl	x9, x9, x22
   4efd0:	and	x8, x8, x9
   4efd4:	str	x8, [x25]
   4efd8:	cbnz	x0, 4f098 <mpfr_rec_sqrt@@Base+0x7dc>
   4efdc:	cbz	x24, 4f0b4 <mpfr_rec_sqrt@@Base+0x7f8>
   4efe0:	ldur	x23, [x29, #-64]
   4efe4:	mov	x0, x28
   4efe8:	mov	x1, x28
   4efec:	mov	x2, x26
   4eff0:	add	x3, x25, x23, lsl #3
   4eff4:	sub	x4, x21, x23
   4eff8:	bl	cf90 <__gmpn_sub@plt>
   4effc:	cmp	x23, #0x1
   4f000:	b.lt	4f0f0 <mpfr_rec_sqrt@@Base+0x834>  // b.tstop
   4f004:	ldur	x11, [x29, #-120]
   4f008:	ldur	x10, [x29, #-96]
   4f00c:	mov	x8, xzr
   4f010:	sub	x9, x11, x10
   4f014:	add	x10, x10, x20
   4f018:	lsl	x10, x10, #3
   4f01c:	sub	x10, x10, x11, lsl #3
   4f020:	ldur	x11, [x29, #-40]
   4f024:	add	x10, x10, x11
   4f028:	add	x10, x10, #0x8
   4f02c:	lsl	x11, x8, #3
   4f030:	ldr	x12, [x10, x11]
   4f034:	add	x8, x8, #0x1
   4f038:	cmp	x9, x8
   4f03c:	mvn	x12, x12
   4f040:	str	x12, [x19, x11]
   4f044:	b.ne	4f02c <mpfr_rec_sqrt@@Base+0x770>  // b.any
   4f048:	mov	w3, #0x1                   	// #1
   4f04c:	mov	x0, x19
   4f050:	mov	x1, x19
   4f054:	mov	x2, x27
   4f058:	bl	bf60 <__gmpn_add_1@plt>
   4f05c:	mov	x20, x0
   4f060:	mov	w3, #0x1                   	// #1
   4f064:	mov	x0, x28
   4f068:	mov	x1, x28
   4f06c:	mov	x2, x26
   4f070:	bl	c8f0 <__gmpn_sub_1@plt>
   4f074:	sub	x0, x20, x0
   4f078:	b	4f0f0 <mpfr_rec_sqrt@@Base+0x834>
   4f07c:	ldur	x8, [x25, #-8]
   4f080:	mov	x0, x25
   4f084:	mov	x1, x25
   4f088:	mov	x2, x21
   4f08c:	lsr	x3, x8, #63
   4f090:	bl	bf60 <__gmpn_add_1@plt>
   4f094:	cbz	x0, 4efdc <mpfr_rec_sqrt@@Base+0x720>
   4f098:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   4f09c:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   4f0a0:	add	x0, x0, #0x432
   4f0a4:	add	x2, x2, #0x43d
   4f0a8:	mov	w1, #0x17e                 	// #382
   4f0ac:	bl	d030 <mpfr_assert_fail@plt>
   4f0b0:	cbnz	x24, 4efe0 <mpfr_rec_sqrt@@Base+0x724>
   4f0b4:	ldur	x20, [x29, #-64]
   4f0b8:	cmp	x20, #0x1
   4f0bc:	b.lt	4f0d8 <mpfr_rec_sqrt@@Base+0x81c>  // b.tstop
   4f0c0:	cmp	x25, x19
   4f0c4:	b.eq	4f0d8 <mpfr_rec_sqrt@@Base+0x81c>  // b.none
   4f0c8:	lsl	x2, x20, #3
   4f0cc:	mov	x0, x19
   4f0d0:	mov	x1, x25
   4f0d4:	bl	be50 <memcpy@plt>
   4f0d8:	add	x3, x25, x20, lsl #3
   4f0dc:	sub	x4, x21, x20
   4f0e0:	mov	x0, x28
   4f0e4:	mov	x1, x28
   4f0e8:	mov	x2, x26
   4f0ec:	bl	c740 <__gmpn_add@plt>
   4f0f0:	cbnz	x0, 4f11c <mpfr_rec_sqrt@@Base+0x860>
   4f0f4:	ldur	x0, [x29, #-8]
   4f0f8:	cbnz	x0, 4f13c <mpfr_rec_sqrt@@Base+0x880>
   4f0fc:	mov	sp, x29
   4f100:	ldp	x20, x19, [sp, #80]
   4f104:	ldp	x22, x21, [sp, #64]
   4f108:	ldp	x24, x23, [sp, #48]
   4f10c:	ldp	x26, x25, [sp, #32]
   4f110:	ldp	x28, x27, [sp, #16]
   4f114:	ldp	x29, x30, [sp], #96
   4f118:	ret
   4f11c:	mov	w8, #0x1                   	// #1
   4f120:	lsl	x3, x8, x22
   4f124:	mov	x0, x19
   4f128:	mov	x1, x19
   4f12c:	mov	x2, x27
   4f130:	bl	c8f0 <__gmpn_sub_1@plt>
   4f134:	ldur	x0, [x29, #-8]
   4f138:	cbz	x0, 4f0fc <mpfr_rec_sqrt@@Base+0x840>
   4f13c:	bl	c8d0 <mpfr_tmp_free@plt>
   4f140:	b	4f0fc <mpfr_rec_sqrt@@Base+0x840>

000000000004f144 <mpfr_min_prec@@Base>:
   4f144:	stp	x29, x30, [sp, #-32]!
   4f148:	ldr	x8, [x0, #16]
   4f14c:	mov	x9, #0x4                   	// #4
   4f150:	movk	x9, #0x8000, lsl #48
   4f154:	str	x19, [sp, #16]
   4f158:	cmp	x8, x9
   4f15c:	mov	x29, sp
   4f160:	b.lt	4f19c <mpfr_min_prec@@Base+0x58>  // b.tstop
   4f164:	ldr	x8, [x0]
   4f168:	ldr	x0, [x0, #24]
   4f16c:	mov	x1, xzr
   4f170:	sub	x9, x8, #0x1
   4f174:	add	x8, x8, #0x3e
   4f178:	cmp	x9, #0x0
   4f17c:	csel	x8, x8, x9, lt  // lt = tstop
   4f180:	and	x19, x8, #0xffffffffffffffc0
   4f184:	bl	cf80 <__gmpn_scan1@plt>
   4f188:	sub	x8, x19, x0
   4f18c:	add	x0, x8, #0x40
   4f190:	ldr	x19, [sp, #16]
   4f194:	ldp	x29, x30, [sp], #32
   4f198:	ret
   4f19c:	mov	x0, xzr
   4f1a0:	b	4f190 <mpfr_min_prec@@Base+0x4c>

000000000004f1a4 <mpfr_buildopt_tls_p@@Base>:
   4f1a4:	mov	w0, #0x1                   	// #1
   4f1a8:	ret

000000000004f1ac <mpfr_buildopt_float128_p@@Base>:
   4f1ac:	mov	w0, wzr
   4f1b0:	ret

000000000004f1b4 <mpfr_buildopt_decimal_p@@Base>:
   4f1b4:	mov	w0, wzr
   4f1b8:	ret

000000000004f1bc <mpfr_buildopt_gmpinternals_p@@Base>:
   4f1bc:	mov	w0, wzr
   4f1c0:	ret

000000000004f1c4 <mpfr_buildopt_sharedcache_p@@Base>:
   4f1c4:	mov	w0, wzr
   4f1c8:	ret

000000000004f1cc <mpfr_buildopt_tune_case@@Base>:
   4f1cc:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   4f1d0:	add	x0, x0, #0x445
   4f1d4:	ret

000000000004f1d8 <mpfr_digamma@@Base>:
   4f1d8:	stp	x29, x30, [sp, #-80]!
   4f1dc:	stp	x26, x25, [sp, #16]
   4f1e0:	stp	x24, x23, [sp, #32]
   4f1e4:	stp	x22, x21, [sp, #48]
   4f1e8:	stp	x20, x19, [sp, #64]
   4f1ec:	ldr	x8, [x1, #16]
   4f1f0:	mov	x22, #0x2                   	// #2
   4f1f4:	movk	x22, #0x8000, lsl #48
   4f1f8:	add	x9, x22, #0x2
   4f1fc:	mov	x21, x1
   4f200:	cmp	x8, x9
   4f204:	mov	x19, x0
   4f208:	mov	x29, sp
   4f20c:	b.lt	4f408 <mpfr_digamma@@Base+0x230>  // b.tstop
   4f210:	ldr	w8, [x21, #8]
   4f214:	mov	w20, w2
   4f218:	tbnz	w8, #31, 4f2b8 <mpfr_digamma@@Base+0xe0>
   4f21c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f220:	ldr	x1, [x0, #2800]
   4f224:	add	x0, x0, #0xaf0
   4f228:	blr	x1
   4f22c:	mrs	x22, tpidr_el0
   4f230:	ldr	w23, [x22, x0]
   4f234:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f238:	ldr	x1, [x0, #2736]
   4f23c:	add	x0, x0, #0xab0
   4f240:	blr	x1
   4f244:	ldr	x24, [x22, x0]
   4f248:	mov	x8, x0
   4f24c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f250:	ldr	x1, [x0, #2768]
   4f254:	add	x0, x0, #0xad0
   4f258:	blr	x1
   4f25c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4f260:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   4f264:	ldr	x25, [x22, x0]
   4f268:	str	x9, [x22, x8]
   4f26c:	str	x10, [x22, x0]
   4f270:	ldr	x8, [x21, #16]
   4f274:	cmn	x8, #0x3
   4f278:	b.gt	4f298 <mpfr_digamma@@Base+0xc0>
   4f27c:	ldr	x9, [x21]
   4f280:	ldr	x10, [x19]
   4f284:	cmp	x9, x10
   4f288:	csel	x9, x9, x10, gt
   4f28c:	neg	x9, x9, lsl #1
   4f290:	cmp	x8, x9
   4f294:	b.le	4f308 <mpfr_digamma@@Base+0x130>
   4f298:	ldr	w9, [x21, #8]
   4f29c:	tbnz	w9, #31, 4f2f0 <mpfr_digamma@@Base+0x118>
   4f2a0:	tbnz	x8, #63, 4f2f0 <mpfr_digamma@@Base+0x118>
   4f2a4:	mov	x0, x19
   4f2a8:	mov	x1, x21
   4f2ac:	mov	w2, w20
   4f2b0:	bl	4f764 <mpfr_digamma@@Base+0x58c>
   4f2b4:	b	4f300 <mpfr_digamma@@Base+0x128>
   4f2b8:	mov	x0, x21
   4f2bc:	bl	c600 <mpfr_integer_p@plt>
   4f2c0:	cbz	w0, 4f21c <mpfr_digamma@@Base+0x44>
   4f2c4:	str	x22, [x19, #16]
   4f2c8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f2cc:	ldr	x1, [x0, #2800]
   4f2d0:	add	x0, x0, #0xaf0
   4f2d4:	blr	x1
   4f2d8:	mrs	x9, tpidr_el0
   4f2dc:	ldr	w10, [x9, x0]
   4f2e0:	mov	w8, wzr
   4f2e4:	orr	w10, w10, #0x4
   4f2e8:	str	w10, [x9, x0]
   4f2ec:	b	4f3ec <mpfr_digamma@@Base+0x214>
   4f2f0:	mov	x0, x19
   4f2f4:	mov	x1, x21
   4f2f8:	mov	w2, w20
   4f2fc:	bl	4f498 <mpfr_digamma@@Base+0x2c0>
   4f300:	mov	w8, w0
   4f304:	b	4f380 <mpfr_digamma@@Base+0x1a8>
   4f308:	ldr	w26, [x21, #8]
   4f30c:	mov	x1, #0xffffffffffffffff    	// #-1
   4f310:	mov	x0, x19
   4f314:	mov	x2, x21
   4f318:	mov	w3, w20
   4f31c:	bl	cd90 <mpfr_si_div@plt>
   4f320:	cbz	w0, 4f32c <mpfr_digamma@@Base+0x154>
   4f324:	mov	w8, w0
   4f328:	b	4f368 <mpfr_digamma@@Base+0x190>
   4f32c:	cmp	w26, #0x0
   4f330:	mov	w8, #0x2                   	// #2
   4f334:	cinc	w9, w8, gt
   4f338:	cinc	w8, w8, le
   4f33c:	cmp	w20, #0x4
   4f340:	csel	w9, w9, w20, eq  // eq = none
   4f344:	cmp	w9, #0x1
   4f348:	csel	w20, w8, w9, eq  // eq = none
   4f34c:	cmp	w20, #0x3
   4f350:	b.ne	4f364 <mpfr_digamma@@Base+0x18c>  // b.any
   4f354:	mov	x0, x19
   4f358:	bl	c230 <mpfr_nextbelow@plt>
   4f35c:	mov	w8, #0xffffffff            	// #-1
   4f360:	b	4f368 <mpfr_digamma@@Base+0x190>
   4f364:	mov	w8, #0x1                   	// #1
   4f368:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f36c:	ldr	x1, [x0, #2800]
   4f370:	add	x0, x0, #0xaf0
   4f374:	blr	x1
   4f378:	ldr	w9, [x22, x0]
   4f37c:	orr	w23, w9, w23
   4f380:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f384:	ldr	x1, [x0, #2800]
   4f388:	add	x0, x0, #0xaf0
   4f38c:	blr	x1
   4f390:	str	w23, [x22, x0]
   4f394:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f398:	ldr	x1, [x0, #2736]
   4f39c:	add	x0, x0, #0xab0
   4f3a0:	blr	x1
   4f3a4:	str	x24, [x22, x0]
   4f3a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f3ac:	ldr	x1, [x0, #2768]
   4f3b0:	add	x0, x0, #0xad0
   4f3b4:	blr	x1
   4f3b8:	str	x25, [x22, x0]
   4f3bc:	ldr	x9, [x19, #16]
   4f3c0:	cmp	x9, x25
   4f3c4:	b.gt	4f460 <mpfr_digamma@@Base+0x288>
   4f3c8:	cmp	x9, x24
   4f3cc:	b.lt	4f460 <mpfr_digamma@@Base+0x288>  // b.tstop
   4f3d0:	cbz	w8, 4f3ec <mpfr_digamma@@Base+0x214>
   4f3d4:	orr	w9, w23, #0x8
   4f3d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f3dc:	ldr	x1, [x0, #2800]
   4f3e0:	add	x0, x0, #0xaf0
   4f3e4:	blr	x1
   4f3e8:	str	w9, [x22, x0]
   4f3ec:	ldp	x20, x19, [sp, #64]
   4f3f0:	ldp	x22, x21, [sp, #48]
   4f3f4:	ldp	x24, x23, [sp, #32]
   4f3f8:	ldp	x26, x25, [sp, #16]
   4f3fc:	mov	w0, w8
   4f400:	ldp	x29, x30, [sp], #80
   4f404:	ret
   4f408:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4f40c:	cmp	x8, x9
   4f410:	b.eq	4f478 <mpfr_digamma@@Base+0x2a0>  // b.none
   4f414:	mov	x9, #0x2                   	// #2
   4f418:	movk	x9, #0x8000, lsl #48
   4f41c:	cmp	x8, x9
   4f420:	b.eq	4f2c4 <mpfr_digamma@@Base+0xec>  // b.none
   4f424:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4f428:	str	x8, [x19, #16]
   4f42c:	ldr	w8, [x21, #8]
   4f430:	neg	w8, w8
   4f434:	str	w8, [x19, #8]
   4f438:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f43c:	ldr	x1, [x0, #2800]
   4f440:	add	x0, x0, #0xaf0
   4f444:	blr	x1
   4f448:	mrs	x9, tpidr_el0
   4f44c:	ldr	w10, [x9, x0]
   4f450:	mov	w8, wzr
   4f454:	orr	w10, w10, #0x20
   4f458:	str	w10, [x9, x0]
   4f45c:	b	4f3ec <mpfr_digamma@@Base+0x214>
   4f460:	mov	x0, x19
   4f464:	mov	w1, w8
   4f468:	mov	w2, w20
   4f46c:	bl	d020 <mpfr_check_range@plt>
   4f470:	mov	w8, w0
   4f474:	b	4f3ec <mpfr_digamma@@Base+0x214>
   4f478:	ldr	w9, [x21, #8]
   4f47c:	cmp	w9, #0x1
   4f480:	b.lt	4f2c4 <mpfr_digamma@@Base+0xec>  // b.tstop
   4f484:	str	w9, [x19, #8]
   4f488:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4f48c:	mov	w8, wzr
   4f490:	str	x9, [x19, #16]
   4f494:	b	4f3ec <mpfr_digamma@@Base+0x214>
   4f498:	sub	sp, sp, #0xd0
   4f49c:	stp	x29, x30, [sp, #112]
   4f4a0:	stp	x28, x27, [sp, #128]
   4f4a4:	stp	x26, x25, [sp, #144]
   4f4a8:	stp	x24, x23, [sp, #160]
   4f4ac:	stp	x22, x21, [sp, #176]
   4f4b0:	stp	x20, x19, [sp, #192]
   4f4b4:	ldr	x23, [x0]
   4f4b8:	ldr	x8, [x1, #16]
   4f4bc:	ldr	x9, [x1]
   4f4c0:	mov	x21, x1
   4f4c4:	mov	x19, x0
   4f4c8:	mov	w20, w2
   4f4cc:	add	x29, sp, #0x70
   4f4d0:	tbnz	x8, #63, 4f4e0 <mpfr_digamma@@Base+0x308>
   4f4d4:	cmp	x8, x9
   4f4d8:	csinc	x1, x8, x9, gt
   4f4dc:	b	4f4e8 <mpfr_digamma@@Base+0x310>
   4f4e0:	sub	x8, x9, x8
   4f4e4:	add	x1, x8, #0x1
   4f4e8:	add	x0, sp, #0x30
   4f4ec:	bl	cf60 <mpfr_init2@plt>
   4f4f0:	add	x0, sp, #0x30
   4f4f4:	mov	w1, #0x1                   	// #1
   4f4f8:	mov	x2, x21
   4f4fc:	mov	w3, wzr
   4f500:	bl	cf30 <mpfr_ui_sub@plt>
   4f504:	cbnz	w0, 4f748 <mpfr_digamma@@Base+0x570>
   4f508:	add	x0, sp, #0x30
   4f50c:	add	x1, sp, #0x30
   4f510:	mov	w2, #0x1                   	// #1
   4f514:	mov	w3, wzr
   4f518:	bl	c780 <mpfr_mul_2ui@plt>
   4f51c:	add	x0, sp, #0x30
   4f520:	bl	c600 <mpfr_integer_p@plt>
   4f524:	mov	w22, w0
   4f528:	add	x0, sp, #0x30
   4f52c:	add	x1, sp, #0x30
   4f530:	mov	w2, #0x1                   	// #1
   4f534:	mov	w3, wzr
   4f538:	bl	cde0 <mpfr_div_2ui@plt>
   4f53c:	cbz	w22, 4f558 <mpfr_digamma@@Base+0x380>
   4f540:	add	x1, sp, #0x30
   4f544:	mov	x0, x19
   4f548:	mov	w2, w20
   4f54c:	bl	cee0 <mpfr_digamma@plt>
   4f550:	mov	w19, w0
   4f554:	b	4f71c <mpfr_digamma@@Base+0x544>
   4f558:	add	x22, x23, #0xa
   4f55c:	mov	x25, #0xfffffffffffffeff    	// #-257
   4f560:	sub	x0, x29, #0x20
   4f564:	mov	x1, x22
   4f568:	movk	x25, #0x7fff, lsl #48
   4f56c:	bl	cf60 <mpfr_init2@plt>
   4f570:	add	x0, sp, #0x10
   4f574:	mov	x1, x22
   4f578:	bl	cf60 <mpfr_init2@plt>
   4f57c:	cmp	w20, #0x0
   4f580:	str	w20, [sp, #12]
   4f584:	mov	w27, #0x40                  	// #64
   4f588:	mrs	x26, tpidr_el0
   4f58c:	cset	w28, eq  // eq = none
   4f590:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4f594:	ldr	x1, [x0, #2848]
   4f598:	add	x0, x0, #0xb20
   4f59c:	blr	x1
   4f5a0:	add	x1, x26, x0
   4f5a4:	add	x0, sp, #0x10
   4f5a8:	mov	w2, wzr
   4f5ac:	bl	c840 <mpfr_cache@plt>
   4f5b0:	sub	x0, x29, #0x20
   4f5b4:	add	x1, sp, #0x10
   4f5b8:	mov	x2, x21
   4f5bc:	mov	w3, wzr
   4f5c0:	bl	c1b0 <mpfr_mul@plt>
   4f5c4:	ldur	x8, [x29, #-16]
   4f5c8:	sub	x0, x29, #0x20
   4f5cc:	sub	x1, x29, #0x20
   4f5d0:	mov	w2, wzr
   4f5d4:	sub	x23, x8, x22
   4f5d8:	bl	bec0 <mpfr_cot@plt>
   4f5dc:	ldur	x24, [x29, #-16]
   4f5e0:	add	x8, x23, #0x2
   4f5e4:	sub	x0, x29, #0x20
   4f5e8:	sub	x1, x29, #0x20
   4f5ec:	add	x9, x8, x24, lsl #1
   4f5f0:	cmp	x24, #0x0
   4f5f4:	add	x2, sp, #0x10
   4f5f8:	mov	w3, wzr
   4f5fc:	csel	x23, x9, x8, gt
   4f600:	bl	c1b0 <mpfr_mul@plt>
   4f604:	add	x0, sp, #0x10
   4f608:	add	x1, sp, #0x30
   4f60c:	mov	w2, wzr
   4f610:	bl	cee0 <mpfr_digamma@plt>
   4f614:	ldr	x20, [sp, #32]
   4f618:	add	x0, sp, #0x10
   4f61c:	add	x1, sp, #0x10
   4f620:	sub	x2, x29, #0x20
   4f624:	mov	w3, wzr
   4f628:	bl	bfd0 <mpfr_sub@plt>
   4f62c:	ldr	x8, [sp, #32]
   4f630:	ldur	x9, [x29, #-16]
   4f634:	sub	x10, x22, x24
   4f638:	add	x11, x25, #0x105
   4f63c:	add	x10, x10, x23
   4f640:	subs	x9, x9, x8
   4f644:	csel	x9, x9, xzr, gt
   4f648:	mvn	x12, x8
   4f64c:	cmp	x8, x11
   4f650:	add	x8, x10, x9
   4f654:	add	x8, x8, #0x1
   4f658:	add	x9, x20, x12
   4f65c:	b.lt	4f6a0 <mpfr_digamma@@Base+0x4c8>  // b.tstop
   4f660:	ldr	x10, [sp, #16]
   4f664:	cmp	x9, x8
   4f668:	csinc	x8, x9, x8, gt
   4f66c:	mvn	x8, x8
   4f670:	ldr	x11, [x19]
   4f674:	add	x2, x22, x8
   4f678:	sub	x8, x10, #0x1
   4f67c:	ldr	x0, [sp, #40]
   4f680:	add	x9, x10, #0x3e
   4f684:	cmp	x8, #0x0
   4f688:	csel	x8, x9, x8, lt  // lt = tstop
   4f68c:	asr	x8, x8, #6
   4f690:	add	x1, x8, #0x1
   4f694:	add	x3, x11, x28
   4f698:	bl	c830 <mpfr_round_p@plt>
   4f69c:	cbnz	w0, 4f6f4 <mpfr_digamma@@Base+0x51c>
   4f6a0:	sub	x8, x25, x22
   4f6a4:	cmp	x27, x8
   4f6a8:	b.gt	4f6d8 <mpfr_digamma@@Base+0x500>
   4f6ac:	add	x22, x27, x22
   4f6b0:	cmp	x22, #0x0
   4f6b4:	cinc	x8, x22, lt  // lt = tstop
   4f6b8:	sub	x0, x29, #0x20
   4f6bc:	mov	x1, x22
   4f6c0:	asr	x27, x8, #1
   4f6c4:	bl	c330 <mpfr_set_prec@plt>
   4f6c8:	add	x0, sp, #0x10
   4f6cc:	mov	x1, x22
   4f6d0:	bl	c330 <mpfr_set_prec@plt>
   4f6d4:	b	4f590 <mpfr_digamma@@Base+0x3b8>
   4f6d8:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   4f6dc:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   4f6e0:	mov	w1, #0xb4                  	// #180
   4f6e4:	add	x0, x0, #0x44d
   4f6e8:	add	x2, x2, #0x26
   4f6ec:	bl	d030 <mpfr_assert_fail@plt>
   4f6f0:	b	4f6ac <mpfr_digamma@@Base+0x4d4>
   4f6f4:	ldr	w3, [sp, #24]
   4f6f8:	ldr	w2, [sp, #12]
   4f6fc:	add	x1, sp, #0x10
   4f700:	mov	x0, x19
   4f704:	bl	cb70 <mpfr_set4@plt>
   4f708:	mov	w19, w0
   4f70c:	sub	x0, x29, #0x20
   4f710:	bl	c4f0 <mpfr_clear@plt>
   4f714:	add	x0, sp, #0x10
   4f718:	bl	c4f0 <mpfr_clear@plt>
   4f71c:	add	x0, sp, #0x30
   4f720:	bl	c4f0 <mpfr_clear@plt>
   4f724:	mov	w0, w19
   4f728:	ldp	x20, x19, [sp, #192]
   4f72c:	ldp	x22, x21, [sp, #176]
   4f730:	ldp	x24, x23, [sp, #160]
   4f734:	ldp	x26, x25, [sp, #144]
   4f738:	ldp	x28, x27, [sp, #128]
   4f73c:	ldp	x29, x30, [sp, #112]
   4f740:	add	sp, sp, #0xd0
   4f744:	ret
   4f748:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   4f74c:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   4f750:	add	x0, x0, #0x44d
   4f754:	add	x2, x2, #0x457
   4f758:	mov	w1, #0x88                  	// #136
   4f75c:	bl	d030 <mpfr_assert_fail@plt>
   4f760:	b	4f508 <mpfr_digamma@@Base+0x330>
   4f764:	sub	sp, sp, #0xd0
   4f768:	stp	x29, x30, [sp, #112]
   4f76c:	stp	x28, x27, [sp, #128]
   4f770:	stp	x26, x25, [sp, #144]
   4f774:	stp	x24, x23, [sp, #160]
   4f778:	stp	x22, x21, [sp, #176]
   4f77c:	stp	x20, x19, [sp, #192]
   4f780:	ldr	x8, [x0]
   4f784:	ldr	x9, [x1]
   4f788:	ldr	x10, [x1, #16]
   4f78c:	mov	x27, #0x4                   	// #4
   4f790:	add	x22, x8, #0xa
   4f794:	mov	w19, w2
   4f798:	cmp	x9, x10
   4f79c:	mov	x21, x1
   4f7a0:	csinc	x23, x10, x9, lt  // lt = tstop
   4f7a4:	cmp	x22, x10
   4f7a8:	movk	x27, #0x8000, lsl #48
   4f7ac:	add	x29, sp, #0x70
   4f7b0:	str	x0, [sp, #8]
   4f7b4:	b.ge	4f844 <mpfr_digamma@@Base+0x66c>  // b.tcont
   4f7b8:	sub	x0, x29, #0x20
   4f7bc:	mov	x1, x22
   4f7c0:	bl	cf60 <mpfr_init2@plt>
   4f7c4:	sub	x0, x29, #0x20
   4f7c8:	mov	w2, #0x1                   	// #1
   4f7cc:	mov	x1, x21
   4f7d0:	bl	c520 <mpfr_log@plt>
   4f7d4:	ldur	x8, [x29, #-16]
   4f7d8:	cmp	x8, x27
   4f7dc:	b.lt	4f83c <mpfr_digamma@@Base+0x664>  // b.tstop
   4f7e0:	ldur	x8, [x29, #-32]
   4f7e4:	ldr	x9, [sp, #8]
   4f7e8:	ldur	x0, [x29, #-8]
   4f7ec:	sub	x10, x8, #0x1
   4f7f0:	ldr	x9, [x9]
   4f7f4:	add	x8, x8, #0x3e
   4f7f8:	cmp	x10, #0x0
   4f7fc:	csel	x8, x8, x10, lt  // lt = tstop
   4f800:	cmp	w19, #0x0
   4f804:	asr	x8, x8, #6
   4f808:	add	x2, x9, #0xa
   4f80c:	add	x1, x8, #0x1
   4f810:	cinc	x3, x9, eq  // eq = none
   4f814:	bl	c830 <mpfr_round_p@plt>
   4f818:	cbz	w0, 4f83c <mpfr_digamma@@Base+0x664>
   4f81c:	ldur	w3, [x29, #-24]
   4f820:	ldr	x0, [sp, #8]
   4f824:	sub	x1, x29, #0x20
   4f828:	mov	w2, w19
   4f82c:	sub	x21, x29, #0x20
   4f830:	bl	cb70 <mpfr_set4@plt>
   4f834:	mov	w19, w0
   4f838:	b	4fab0 <mpfr_digamma@@Base+0x8d8>
   4f83c:	sub	x0, x29, #0x20
   4f840:	bl	c4f0 <mpfr_clear@plt>
   4f844:	add	x0, sp, #0x10
   4f848:	mov	x1, x23
   4f84c:	bl	cf60 <mpfr_init2@plt>
   4f850:	sub	x0, x29, #0x20
   4f854:	mov	x1, x22
   4f858:	bl	cf60 <mpfr_init2@plt>
   4f85c:	add	x0, sp, #0x30
   4f860:	mov	x1, x22
   4f864:	bl	cf60 <mpfr_init2@plt>
   4f868:	cmp	w19, #0x0
   4f86c:	str	w19, [sp, #4]
   4f870:	mov	w25, #0x40                  	// #64
   4f874:	mov	x19, #0x8000000000000001    	// #-9223372036854775807
   4f878:	cset	w20, eq  // eq = none
   4f87c:	add	x8, x22, #0x3
   4f880:	add	x9, x22, #0x6
   4f884:	cmp	x8, #0x0
   4f888:	ldr	w3, [x21, #8]
   4f88c:	csel	x8, x9, x8, lt  // lt = tstop
   4f890:	asr	x8, x8, #2
   4f894:	cmp	x8, #0x2
   4f898:	mov	w9, #0x2                   	// #2
   4f89c:	add	x0, sp, #0x10
   4f8a0:	mov	x1, x21
   4f8a4:	mov	w2, wzr
   4f8a8:	csel	x26, x8, x9, hi  // hi = pmore
   4f8ac:	bl	cb70 <mpfr_set4@plt>
   4f8b0:	mov	w8, #0x1                   	// #1
   4f8b4:	add	x0, sp, #0x10
   4f8b8:	mov	x1, x26
   4f8bc:	mov	x2, xzr
   4f8c0:	str	w8, [sp, #56]
   4f8c4:	str	x19, [sp, #64]
   4f8c8:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4f8cc:	mov	x28, xzr
   4f8d0:	tbnz	w0, #31, 4f90c <mpfr_digamma@@Base+0x734>
   4f8d4:	cmp	x28, #0x2
   4f8d8:	b.cc	4f970 <mpfr_digamma@@Base+0x798>  // b.lo, b.ul, b.last
   4f8dc:	mov	x24, xzr
   4f8e0:	add	x8, x28, #0x1
   4f8e4:	add	x24, x24, #0x1
   4f8e8:	cmp	x8, #0x3
   4f8ec:	lsr	x28, x8, #1
   4f8f0:	b.hi	4f8e0 <mpfr_digamma@@Base+0x708>  // b.pmore
   4f8f4:	b	4f974 <mpfr_digamma@@Base+0x79c>
   4f8f8:	add	x0, sp, #0x10
   4f8fc:	mov	x1, x26
   4f900:	mov	x2, xzr
   4f904:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   4f908:	tbz	w0, #31, 4f8d4 <mpfr_digamma@@Base+0x6fc>
   4f90c:	sub	x0, x29, #0x20
   4f910:	add	x2, sp, #0x10
   4f914:	mov	w1, #0x1                   	// #1
   4f918:	mov	w3, wzr
   4f91c:	add	x28, x28, #0x1
   4f920:	bl	c7b0 <mpfr_ui_div@plt>
   4f924:	add	x0, sp, #0x30
   4f928:	add	x1, sp, #0x30
   4f92c:	sub	x2, x29, #0x20
   4f930:	mov	w3, wzr
   4f934:	bl	c640 <mpfr_add@plt>
   4f938:	add	x0, sp, #0x10
   4f93c:	add	x1, sp, #0x10
   4f940:	mov	w2, #0x1                   	// #1
   4f944:	mov	w3, #0x1                   	// #1
   4f948:	bl	c710 <mpfr_add_ui@plt>
   4f94c:	cbz	w0, 4f8f8 <mpfr_digamma@@Base+0x720>
   4f950:	add	x23, x23, #0x1
   4f954:	add	x0, sp, #0x10
   4f958:	mov	w2, #0x1                   	// #1
   4f95c:	mov	x1, x23
   4f960:	bl	ce60 <mpfr_prec_round@plt>
   4f964:	add	x0, sp, #0x10
   4f968:	bl	c5c0 <mpfr_nextabove@plt>
   4f96c:	b	4f8f8 <mpfr_digamma@@Base+0x720>
   4f970:	mov	x24, xzr
   4f974:	sub	x0, x29, #0x20
   4f978:	add	x1, sp, #0x10
   4f97c:	bl	4fadc <mpfr_digamma@@Base+0x904>
   4f980:	ldur	x28, [x29, #-16]
   4f984:	mov	x26, x0
   4f988:	sub	x0, x29, #0x20
   4f98c:	sub	x1, x29, #0x20
   4f990:	add	x2, sp, #0x30
   4f994:	mov	w3, wzr
   4f998:	bl	bfd0 <mpfr_sub@plt>
   4f99c:	ldur	x8, [x29, #-16]
   4f9a0:	ldr	x9, [sp, #64]
   4f9a4:	subs	x10, x28, x8
   4f9a8:	csel	x10, x10, xzr, gt
   4f9ac:	subs	x11, x9, x8
   4f9b0:	add	x9, x10, x26
   4f9b4:	csel	x10, x11, xzr, gt
   4f9b8:	add	x10, x10, x24
   4f9bc:	cmp	x9, x10
   4f9c0:	b.le	4f9d4 <mpfr_digamma@@Base+0x7fc>
   4f9c4:	add	x9, x9, #0x1
   4f9c8:	cmp	x8, x27
   4f9cc:	b.ge	4f9f4 <mpfr_digamma@@Base+0x81c>  // b.tcont
   4f9d0:	b	4fa2c <mpfr_digamma@@Base+0x854>
   4f9d4:	b.ne	4f9e8 <mpfr_digamma@@Base+0x810>  // b.any
   4f9d8:	add	x9, x9, #0x2
   4f9dc:	cmp	x8, x27
   4f9e0:	b.ge	4f9f4 <mpfr_digamma@@Base+0x81c>  // b.tcont
   4f9e4:	b	4fa2c <mpfr_digamma@@Base+0x854>
   4f9e8:	add	x9, x10, #0x1
   4f9ec:	cmp	x8, x27
   4f9f0:	b.lt	4fa2c <mpfr_digamma@@Base+0x854>  // b.tstop
   4f9f4:	ldur	x8, [x29, #-32]
   4f9f8:	sub	x2, x22, x9
   4f9fc:	ldr	x9, [sp, #8]
   4fa00:	ldur	x0, [x29, #-8]
   4fa04:	sub	x10, x8, #0x1
   4fa08:	add	x8, x8, #0x3e
   4fa0c:	ldr	x9, [x9]
   4fa10:	cmp	x10, #0x0
   4fa14:	csel	x8, x8, x10, lt  // lt = tstop
   4fa18:	asr	x8, x8, #6
   4fa1c:	add	x1, x8, #0x1
   4fa20:	add	x3, x9, x20
   4fa24:	bl	c830 <mpfr_round_p@plt>
   4fa28:	cbnz	w0, 4fa84 <mpfr_digamma@@Base+0x8ac>
   4fa2c:	sub	x8, x27, x22
   4fa30:	sub	x8, x8, #0x105
   4fa34:	cmp	x25, x8
   4fa38:	b.gt	4fa68 <mpfr_digamma@@Base+0x890>
   4fa3c:	add	x22, x22, x25
   4fa40:	cmp	x22, #0x0
   4fa44:	cinc	x8, x22, lt  // lt = tstop
   4fa48:	sub	x0, x29, #0x20
   4fa4c:	mov	x1, x22
   4fa50:	asr	x25, x8, #1
   4fa54:	bl	c330 <mpfr_set_prec@plt>
   4fa58:	add	x0, sp, #0x30
   4fa5c:	mov	x1, x22
   4fa60:	bl	c330 <mpfr_set_prec@plt>
   4fa64:	b	4f87c <mpfr_digamma@@Base+0x6a4>
   4fa68:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   4fa6c:	adrp	x2, 5a000 <mpfr_free_pool@@Base+0x2854>
   4fa70:	mov	w1, #0x11a                 	// #282
   4fa74:	add	x0, x0, #0x44d
   4fa78:	add	x2, x2, #0x26
   4fa7c:	bl	d030 <mpfr_assert_fail@plt>
   4fa80:	b	4fa3c <mpfr_digamma@@Base+0x864>
   4fa84:	ldur	w3, [x29, #-24]
   4fa88:	ldr	x0, [sp, #8]
   4fa8c:	ldr	w2, [sp, #4]
   4fa90:	sub	x1, x29, #0x20
   4fa94:	add	x21, sp, #0x10
   4fa98:	bl	cb70 <mpfr_set4@plt>
   4fa9c:	mov	w19, w0
   4faa0:	sub	x0, x29, #0x20
   4faa4:	bl	c4f0 <mpfr_clear@plt>
   4faa8:	add	x0, sp, #0x30
   4faac:	bl	c4f0 <mpfr_clear@plt>
   4fab0:	mov	x0, x21
   4fab4:	bl	c4f0 <mpfr_clear@plt>
   4fab8:	mov	w0, w19
   4fabc:	ldp	x20, x19, [sp, #192]
   4fac0:	ldp	x22, x21, [sp, #176]
   4fac4:	ldp	x24, x23, [sp, #160]
   4fac8:	ldp	x26, x25, [sp, #144]
   4facc:	ldp	x28, x27, [sp, #128]
   4fad0:	ldp	x29, x30, [sp, #112]
   4fad4:	add	sp, sp, #0xd0
   4fad8:	ret
   4fadc:	sub	sp, sp, #0xb0
   4fae0:	stp	x29, x30, [sp, #96]
   4fae4:	stp	x26, x25, [sp, #112]
   4fae8:	stp	x24, x23, [sp, #128]
   4faec:	stp	x22, x21, [sp, #144]
   4faf0:	stp	x20, x19, [sp, #160]
   4faf4:	ldr	w8, [x1, #8]
   4faf8:	ldr	x20, [x0]
   4fafc:	mov	x22, x1
   4fb00:	mov	x19, x0
   4fb04:	cmp	w8, #0x1
   4fb08:	add	x29, sp, #0x60
   4fb0c:	b.lt	4fd2c <mpfr_digamma@@Base+0xb54>  // b.tstop
   4fb10:	ldr	x8, [x22, #16]
   4fb14:	cmp	x8, #0x1
   4fb18:	b.le	4fd2c <mpfr_digamma@@Base+0xb54>
   4fb1c:	sub	x0, x29, #0x20
   4fb20:	mov	x1, x20
   4fb24:	bl	cf60 <mpfr_init2@plt>
   4fb28:	add	x0, sp, #0x20
   4fb2c:	mov	x1, x20
   4fb30:	bl	cf60 <mpfr_init2@plt>
   4fb34:	mov	x0, sp
   4fb38:	mov	x1, x20
   4fb3c:	bl	cf60 <mpfr_init2@plt>
   4fb40:	mov	x0, x19
   4fb44:	mov	x1, x22
   4fb48:	mov	w2, wzr
   4fb4c:	bl	c520 <mpfr_log@plt>
   4fb50:	sub	x0, x29, #0x20
   4fb54:	mov	w1, #0x1                   	// #1
   4fb58:	mov	x2, x22
   4fb5c:	mov	w3, wzr
   4fb60:	mov	w21, #0x1                   	// #1
   4fb64:	bl	c7b0 <mpfr_ui_div@plt>
   4fb68:	sub	x0, x29, #0x20
   4fb6c:	sub	x1, x29, #0x20
   4fb70:	mov	w2, #0x1                   	// #1
   4fb74:	mov	w3, wzr
   4fb78:	bl	cde0 <mpfr_div_2ui@plt>
   4fb7c:	sub	x2, x29, #0x20
   4fb80:	mov	x0, x19
   4fb84:	mov	x1, x19
   4fb88:	mov	w3, wzr
   4fb8c:	bl	bfd0 <mpfr_sub@plt>
   4fb90:	mov	x0, sp
   4fb94:	mov	w3, #0x1                   	// #1
   4fb98:	mov	x1, x22
   4fb9c:	mov	x2, x22
   4fba0:	bl	c1b0 <mpfr_mul@plt>
   4fba4:	mov	x0, sp
   4fba8:	mov	x2, sp
   4fbac:	mov	w1, #0x1                   	// #1
   4fbb0:	mov	w3, #0x2                   	// #2
   4fbb4:	mov	w23, #0x2                   	// #2
   4fbb8:	bl	c7b0 <mpfr_ui_div@plt>
   4fbbc:	sub	x0, x29, #0x20
   4fbc0:	mov	w1, #0x1                   	// #1
   4fbc4:	mov	x2, xzr
   4fbc8:	mov	w3, wzr
   4fbcc:	bl	cac0 <mpfr_set_ui_2exp@plt>
   4fbd0:	mov	w24, #0xa                   	// #10
   4fbd4:	orr	x25, xzr, #0x4
   4fbd8:	b	4fbe8 <mpfr_digamma@@Base+0xa10>
   4fbdc:	add	x8, x9, x8
   4fbe0:	add	x23, x8, #0x1
   4fbe4:	add	x21, x21, #0x1
   4fbe8:	sub	x0, x29, #0x20
   4fbec:	sub	x1, x29, #0x20
   4fbf0:	mov	x2, sp
   4fbf4:	mov	w3, #0x2                   	// #2
   4fbf8:	bl	c1b0 <mpfr_mul@plt>
   4fbfc:	lsl	x22, x21, #1
   4fc00:	sub	x0, x29, #0x20
   4fc04:	sub	x1, x29, #0x20
   4fc08:	mov	w3, #0x2                   	// #2
   4fc0c:	mov	x2, x22
   4fc10:	bl	d160 <mpfr_div_ui@plt>
   4fc14:	mov	w2, #0x1                   	// #1
   4fc18:	bfi	x2, x21, #1, #63
   4fc1c:	sub	x0, x29, #0x20
   4fc20:	sub	x1, x29, #0x20
   4fc24:	mov	w3, #0x2                   	// #2
   4fc28:	bl	d160 <mpfr_div_ui@plt>
   4fc2c:	add	x0, sp, #0x20
   4fc30:	sub	x1, x29, #0x20
   4fc34:	mov	w3, #0x2                   	// #2
   4fc38:	mov	x2, x22
   4fc3c:	bl	d160 <mpfr_div_ui@plt>
   4fc40:	mov	x0, x21
   4fc44:	bl	cd10 <mpfr_bernoulli_cache@plt>
   4fc48:	mov	x2, x0
   4fc4c:	add	x0, sp, #0x20
   4fc50:	add	x1, sp, #0x20
   4fc54:	mov	w3, #0x2                   	// #2
   4fc58:	bl	c9a0 <mpfr_mul_z@plt>
   4fc5c:	ldr	x22, [x19, #16]
   4fc60:	ldr	x26, [sp, #48]
   4fc64:	sub	x8, x22, x20
   4fc68:	cmp	x26, x8
   4fc6c:	b.lt	4fcc4 <mpfr_digamma@@Base+0xaec>  // b.tstop
   4fc70:	add	x2, sp, #0x20
   4fc74:	mov	x0, x19
   4fc78:	mov	x1, x19
   4fc7c:	mov	w3, wzr
   4fc80:	bl	bfd0 <mpfr_sub@plt>
   4fc84:	ldr	x8, [x19, #16]
   4fc88:	madd	x9, x21, x24, x25
   4fc8c:	subs	x8, x22, x8
   4fc90:	csel	x8, x8, xzr, gt
   4fc94:	cmp	x26, x22
   4fc98:	lsl	x8, x23, x8
   4fc9c:	b.ge	4fbdc <mpfr_digamma@@Base+0xa04>  // b.tcont
   4fca0:	sub	x10, x22, x26
   4fca4:	add	x11, x9, #0x1
   4fca8:	add	x12, x9, #0x2
   4fcac:	cmp	x11, #0x0
   4fcb0:	csinc	x9, x12, x9, lt  // lt = tstop
   4fcb4:	subs	x10, x10, #0x1
   4fcb8:	asr	x9, x9, #1
   4fcbc:	b.ne	4fca4 <mpfr_digamma@@Base+0xacc>  // b.any
   4fcc0:	b	4fbdc <mpfr_digamma@@Base+0xa04>
   4fcc4:	sub	x0, x29, #0x20
   4fcc8:	bl	c4f0 <mpfr_clear@plt>
   4fccc:	add	x0, sp, #0x20
   4fcd0:	bl	c4f0 <mpfr_clear@plt>
   4fcd4:	mov	x0, sp
   4fcd8:	bl	c4f0 <mpfr_clear@plt>
   4fcdc:	cmp	x23, #0x2
   4fce0:	b.lt	4fd0c <mpfr_digamma@@Base+0xb34>  // b.tstop
   4fce4:	mov	x0, xzr
   4fce8:	add	x8, x23, #0x1
   4fcec:	add	x9, x23, #0x2
   4fcf0:	cmp	x8, #0x0
   4fcf4:	csinc	x8, x9, x23, lt  // lt = tstop
   4fcf8:	cmp	x23, #0x2
   4fcfc:	asr	x23, x8, #1
   4fd00:	add	x0, x0, #0x1
   4fd04:	b.gt	4fce8 <mpfr_digamma@@Base+0xb10>
   4fd08:	b	4fd10 <mpfr_digamma@@Base+0xb38>
   4fd0c:	mov	x0, xzr
   4fd10:	ldp	x20, x19, [sp, #160]
   4fd14:	ldp	x22, x21, [sp, #144]
   4fd18:	ldp	x24, x23, [sp, #128]
   4fd1c:	ldp	x26, x25, [sp, #112]
   4fd20:	ldp	x29, x30, [sp, #96]
   4fd24:	add	sp, sp, #0xb0
   4fd28:	ret
   4fd2c:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   4fd30:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   4fd34:	add	x0, x0, #0x44d
   4fd38:	add	x2, x2, #0x461
   4fd3c:	mov	w1, #0x27                  	// #39
   4fd40:	bl	d030 <mpfr_assert_fail@plt>
   4fd44:	b	4fb1c <mpfr_digamma@@Base+0x944>

000000000004fd48 <mpfr_bernoulli_cache@@Base>:
   4fd48:	stp	x29, x30, [sp, #-48]!
   4fd4c:	stp	x22, x21, [sp, #16]
   4fd50:	stp	x20, x19, [sp, #32]
   4fd54:	mov	x29, sp
   4fd58:	mov	x19, x0
   4fd5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fd60:	ldr	x1, [x0, #2672]
   4fd64:	add	x0, x0, #0xa70
   4fd68:	blr	x1
   4fd6c:	mrs	x21, tpidr_el0
   4fd70:	ldr	x8, [x21, x0]
   4fd74:	cmp	x8, x19
   4fd78:	b.hi	4fe94 <mpfr_bernoulli_cache@@Base+0x14c>  // b.pmore
   4fd7c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fd80:	ldr	x1, [x0, #2656]
   4fd84:	add	x0, x0, #0xa60
   4fd88:	blr	x1
   4fd8c:	ldr	x8, [x21, x0]
   4fd90:	cbz	x8, 4fde0 <mpfr_bernoulli_cache@@Base+0x98>
   4fd94:	cmp	x8, x19
   4fd98:	b.hi	4fe38 <mpfr_bernoulli_cache@@Base+0xf0>  // b.pmore
   4fd9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fda0:	ldr	x1, [x0, #2688]
   4fda4:	add	x0, x0, #0xa80
   4fda8:	blr	x1
   4fdac:	mov	x20, x0
   4fdb0:	ldr	x0, [x21, x0]
   4fdb4:	add	x22, x19, x19, lsr #2
   4fdb8:	lsl	x1, x8, #4
   4fdbc:	lsl	x2, x22, #4
   4fdc0:	bl	c660 <mpfr_reallocate_func@plt>
   4fdc4:	str	x0, [x21, x20]
   4fdc8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fdcc:	ldr	x1, [x0, #2656]
   4fdd0:	add	x0, x0, #0xa60
   4fdd4:	blr	x1
   4fdd8:	str	x22, [x21, x0]
   4fddc:	b	4fe38 <mpfr_bernoulli_cache@@Base+0xf0>
   4fde0:	add	x8, x19, x19, lsr #2
   4fde4:	cmp	x8, #0x10
   4fde8:	mov	w9, #0x10                  	// #16
   4fdec:	csel	x8, x8, x9, hi  // hi = pmore
   4fdf0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fdf4:	ldr	x1, [x0, #2656]
   4fdf8:	add	x0, x0, #0xa60
   4fdfc:	blr	x1
   4fe00:	str	x8, [x21, x0]
   4fe04:	lsl	x0, x8, #4
   4fe08:	bl	d1f0 <mpfr_allocate_func@plt>
   4fe0c:	mov	x8, x0
   4fe10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fe14:	ldr	x1, [x0, #2688]
   4fe18:	add	x0, x0, #0xa80
   4fe1c:	blr	x1
   4fe20:	str	x8, [x21, x0]
   4fe24:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fe28:	ldr	x1, [x0, #2672]
   4fe2c:	add	x0, x0, #0xa70
   4fe30:	blr	x1
   4fe34:	str	xzr, [x21, x0]
   4fe38:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fe3c:	ldr	x1, [x0, #2672]
   4fe40:	add	x0, x0, #0xa70
   4fe44:	blr	x1
   4fe48:	ldr	x20, [x21, x0]
   4fe4c:	cmp	x20, x19
   4fe50:	b.hi	4fe7c <mpfr_bernoulli_cache@@Base+0x134>  // b.pmore
   4fe54:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fe58:	ldr	x1, [x0, #2688]
   4fe5c:	add	x0, x0, #0xa80
   4fe60:	blr	x1
   4fe64:	ldr	x0, [x21, x0]
   4fe68:	mov	x1, x20
   4fe6c:	bl	4febc <mpfr_bernoulli_cache@@Base+0x174>
   4fe70:	add	x20, x20, #0x1
   4fe74:	cmp	x20, x19
   4fe78:	b.ls	4fe54 <mpfr_bernoulli_cache@@Base+0x10c>  // b.plast
   4fe7c:	add	x8, x19, #0x1
   4fe80:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fe84:	ldr	x1, [x0, #2672]
   4fe88:	add	x0, x0, #0xa70
   4fe8c:	blr	x1
   4fe90:	str	x8, [x21, x0]
   4fe94:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   4fe98:	ldr	x1, [x0, #2688]
   4fe9c:	add	x0, x0, #0xa80
   4fea0:	blr	x1
   4fea4:	ldr	x8, [x21, x0]
   4fea8:	ldp	x22, x21, [sp, #16]
   4feac:	add	x0, x8, x19, lsl #4
   4feb0:	ldp	x20, x19, [sp, #32]
   4feb4:	ldp	x29, x30, [sp], #48
   4feb8:	ret
   4febc:	sub	sp, sp, #0xe0
   4fec0:	stp	x20, x19, [sp, #208]
   4fec4:	add	x20, x0, x1, lsl #4
   4fec8:	stp	x22, x21, [sp, #192]
   4fecc:	mov	x21, x0
   4fed0:	mov	x0, x20
   4fed4:	stp	x29, x30, [sp, #128]
   4fed8:	stp	x28, x27, [sp, #144]
   4fedc:	stp	x26, x25, [sp, #160]
   4fee0:	stp	x24, x23, [sp, #176]
   4fee4:	add	x29, sp, #0x80
   4fee8:	mov	x19, x1
   4feec:	bl	c400 <mpfr_mpz_init@plt>
   4fef0:	cbz	x19, 4ff34 <mpfr_bernoulli_cache@@Base+0x1ec>
   4fef4:	add	x0, sp, #0x40
   4fef8:	lsl	x21, x19, #1
   4fefc:	bl	c400 <mpfr_mpz_init@plt>
   4ff00:	add	x0, sp, #0x40
   4ff04:	mov	w1, #0x6                   	// #6
   4ff08:	bl	c110 <__gmpz_set_ui@plt>
   4ff0c:	mov	w22, #0x1                   	// #1
   4ff10:	bfi	x22, x19, #1, #63
   4ff14:	cmp	x22, #0x5
   4ff18:	b.cs	4ff44 <mpfr_bernoulli_cache@@Base+0x1fc>  // b.hs, b.nlast
   4ff1c:	cmp	x21, #0x40
   4ff20:	b.hi	4ff88 <mpfr_bernoulli_cache@@Base+0x240>  // b.pmore
   4ff24:	adrp	x8, 61000 <mpfr_bases@@Base+0x1408>
   4ff28:	add	x8, x8, #0x498
   4ff2c:	ldr	x23, [x8, x19, lsl #3]
   4ff30:	b	50028 <mpfr_bernoulli_cache@@Base+0x2e0>
   4ff34:	mov	w1, #0x1                   	// #1
   4ff38:	mov	x0, x21
   4ff3c:	bl	c110 <__gmpz_set_ui@plt>
   4ff40:	b	50340 <mpfr_bernoulli_cache@@Base+0x5f8>
   4ff44:	mov	w23, #0x5                   	// #5
   4ff48:	b	4ff58 <mpfr_bernoulli_cache@@Base+0x210>
   4ff4c:	add	x23, x23, #0x2
   4ff50:	cmp	x23, x22
   4ff54:	b.hi	4ff1c <mpfr_bernoulli_cache@@Base+0x1d4>  // b.pmore
   4ff58:	sub	x8, x23, #0x1
   4ff5c:	udiv	x9, x21, x8
   4ff60:	msub	x8, x9, x8, x21
   4ff64:	cbnz	x8, 4ff4c <mpfr_bernoulli_cache@@Base+0x204>
   4ff68:	mov	x0, x23
   4ff6c:	bl	50460 <mpfr_bernoulli_freecache@@Base+0x100>
   4ff70:	cbz	w0, 4ff4c <mpfr_bernoulli_cache@@Base+0x204>
   4ff74:	add	x0, sp, #0x40
   4ff78:	add	x1, sp, #0x40
   4ff7c:	mov	x2, x23
   4ff80:	bl	c590 <__gmpz_mul_ui@plt>
   4ff84:	b	4ff4c <mpfr_bernoulli_cache@@Base+0x204>
   4ff88:	ucvtf	d0, x21
   4ff8c:	fmov	d1, #7.000000000000000000e+00
   4ff90:	fmul	d0, d0, d1
   4ff94:	bl	ce40 <__gmpfr_ceil_log2@plt>
   4ff98:	add	x24, x0, #0x1
   4ff9c:	mov	x0, sp
   4ffa0:	mov	w1, #0x35                  	// #53
   4ffa4:	bl	cf60 <mpfr_init2@plt>
   4ffa8:	mov	w1, #0x1f2c                	// #7980
   4ffac:	mov	x0, sp
   4ffb0:	movk	w1, #0xefd, lsl #16
   4ffb4:	mov	x2, #0xffffffffffffffe0    	// #-32
   4ffb8:	mov	w3, #0x2                   	// #2
   4ffbc:	bl	cac0 <mpfr_set_ui_2exp@plt>
   4ffc0:	mov	x0, sp
   4ffc4:	mov	x1, sp
   4ffc8:	mov	w3, #0x2                   	// #2
   4ffcc:	mov	x2, x21
   4ffd0:	bl	bea0 <mpfr_mul_ui@plt>
   4ffd4:	mov	x0, sp
   4ffd8:	mov	x1, sp
   4ffdc:	mov	w2, #0x2                   	// #2
   4ffe0:	bl	c670 <mpfr_log2@plt>
   4ffe4:	mov	x0, sp
   4ffe8:	mov	x1, sp
   4ffec:	mov	w3, #0x2                   	// #2
   4fff0:	mov	x2, x21
   4fff4:	bl	bea0 <mpfr_mul_ui@plt>
   4fff8:	mov	x0, sp
   4fffc:	mov	w1, #0x2                   	// #2
   50000:	bl	c100 <mpfr_get_ui@plt>
   50004:	mov	x23, x0
   50008:	mov	x0, sp
   5000c:	bl	c4f0 <mpfr_clear@plt>
   50010:	add	x0, sp, #0x40
   50014:	mov	w1, #0x2                   	// #2
   50018:	bl	d050 <__gmpz_sizeinbase@plt>
   5001c:	add	x8, x23, x24, asr #1
   50020:	add	x8, x8, x0
   50024:	add	x23, x8, #0xe
   50028:	mov	w26, #0x3                   	// #3
   5002c:	mov	x28, #0x6666666666666666    	// #7378697629483820646
   50030:	sub	x24, x21, #0x1
   50034:	mrs	x27, tpidr_el0
   50038:	bfi	x26, x19, #2, #62
   5003c:	movk	x28, #0x6667
   50040:	sub	x0, x29, #0x10
   50044:	bl	c400 <mpfr_mpz_init@plt>
   50048:	sub	x0, x29, #0x20
   5004c:	bl	c400 <mpfr_mpz_init@plt>
   50050:	sub	x0, x29, #0x30
   50054:	bl	c400 <mpfr_mpz_init@plt>
   50058:	sub	x0, x29, #0x30
   5005c:	mov	w1, #0x1                   	// #1
   50060:	bl	c110 <__gmpz_set_ui@plt>
   50064:	sub	x0, x29, #0x30
   50068:	sub	x1, x29, #0x30
   5006c:	mov	x2, x23
   50070:	bl	c6a0 <__gmpz_mul_2exp@plt>
   50074:	sub	x0, x29, #0x20
   50078:	mov	w1, #0x3                   	// #3
   5007c:	mov	x2, x21
   50080:	bl	c9b0 <__gmpz_ui_pow_ui@plt>
   50084:	sub	x0, x29, #0x10
   50088:	sub	x1, x29, #0x30
   5008c:	sub	x2, x29, #0x20
   50090:	bl	c290 <__gmpz_fdiv_q@plt>
   50094:	ldur	w8, [x29, #-28]
   50098:	mov	w25, #0x4                   	// #4
   5009c:	cmp	w8, #0x1
   500a0:	b.lt	500e4 <mpfr_bernoulli_cache@@Base+0x39c>  // b.tstop
   500a4:	sub	x0, x29, #0x20
   500a8:	mov	x1, x25
   500ac:	mov	x2, x21
   500b0:	bl	c9b0 <__gmpz_ui_pow_ui@plt>
   500b4:	sub	x0, x29, #0x20
   500b8:	sub	x1, x29, #0x30
   500bc:	sub	x2, x29, #0x20
   500c0:	bl	c290 <__gmpz_fdiv_q@plt>
   500c4:	sub	x0, x29, #0x10
   500c8:	sub	x1, x29, #0x10
   500cc:	sub	x2, x29, #0x20
   500d0:	bl	ceb0 <__gmpz_add@plt>
   500d4:	ldur	w8, [x29, #-28]
   500d8:	add	x25, x25, #0x1
   500dc:	cmp	w8, #0x0
   500e0:	b.gt	500a4 <mpfr_bernoulli_cache@@Base+0x35c>
   500e4:	sub	x0, x29, #0x20
   500e8:	mov	x1, x25
   500ec:	mov	x2, x24
   500f0:	bl	c9b0 <__gmpz_ui_pow_ui@plt>
   500f4:	sub	x0, x29, #0x20
   500f8:	sub	x1, x29, #0x20
   500fc:	mov	x2, x24
   50100:	bl	c590 <__gmpz_mul_ui@plt>
   50104:	sub	x0, x29, #0x20
   50108:	sub	x1, x29, #0x30
   5010c:	sub	x2, x29, #0x20
   50110:	bl	cc40 <__gmpz_cdiv_q@plt>
   50114:	sub	x0, x29, #0x10
   50118:	sub	x1, x29, #0x10
   5011c:	sub	x2, x29, #0x20
   50120:	bl	ceb0 <__gmpz_add@plt>
   50124:	sub	x0, x29, #0x10
   50128:	sub	x1, x29, #0x10
   5012c:	sub	x2, x29, #0x30
   50130:	bl	ceb0 <__gmpz_add@plt>
   50134:	sub	x0, x29, #0x30
   50138:	sub	x1, x29, #0x30
   5013c:	mov	x2, x21
   50140:	bl	bfc0 <__gmpz_cdiv_q_2exp@plt>
   50144:	sub	x0, x29, #0x10
   50148:	sub	x1, x29, #0x10
   5014c:	sub	x2, x29, #0x30
   50150:	bl	ceb0 <__gmpz_add@plt>
   50154:	sub	x0, x29, #0x20
   50158:	mov	x1, x21
   5015c:	bl	c430 <__gmpz_fac_ui@plt>
   50160:	sub	x0, x29, #0x10
   50164:	sub	x1, x29, #0x10
   50168:	sub	x2, x29, #0x20
   5016c:	bl	c460 <__gmpz_mul@plt>
   50170:	sub	x0, x29, #0x10
   50174:	sub	x1, x29, #0x10
   50178:	add	x2, sp, #0x40
   5017c:	bl	c460 <__gmpz_mul@plt>
   50180:	sub	x0, x29, #0x10
   50184:	sub	x1, x29, #0x10
   50188:	mov	w2, #0x1                   	// #1
   5018c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   50190:	mov	x0, sp
   50194:	mov	x1, x23
   50198:	bl	cf60 <mpfr_init2@plt>
   5019c:	mov	x0, sp
   501a0:	sub	x1, x29, #0x10
   501a4:	mov	w2, #0x1                   	// #1
   501a8:	bl	c6e0 <mpfr_set_z@plt>
   501ac:	mov	x0, sp
   501b0:	mov	x1, sp
   501b4:	mov	w3, #0x1                   	// #1
   501b8:	mov	x2, x23
   501bc:	bl	cde0 <mpfr_div_2ui@plt>
   501c0:	add	x0, sp, #0x20
   501c4:	mov	x1, x23
   501c8:	bl	cf60 <mpfr_init2@plt>
   501cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   501d0:	ldr	x1, [x0, #2848]
   501d4:	add	x0, x0, #0xb20
   501d8:	blr	x1
   501dc:	add	x1, x27, x0
   501e0:	add	x0, sp, #0x20
   501e4:	mov	w2, #0x2                   	// #2
   501e8:	bl	c840 <mpfr_cache@plt>
   501ec:	add	x0, sp, #0x20
   501f0:	add	x1, sp, #0x20
   501f4:	mov	w2, #0x1                   	// #1
   501f8:	mov	w3, #0x2                   	// #2
   501fc:	bl	c780 <mpfr_mul_2ui@plt>
   50200:	add	x0, sp, #0x20
   50204:	add	x1, sp, #0x20
   50208:	mov	w3, #0x2                   	// #2
   5020c:	mov	x2, x21
   50210:	bl	c3d0 <mpfr_pow_ui@plt>
   50214:	mov	x0, sp
   50218:	mov	x1, sp
   5021c:	add	x2, sp, #0x20
   50220:	mov	w3, #0x1                   	// #1
   50224:	bl	caf0 <mpfr_div@plt>
   50228:	add	x9, x26, x25
   5022c:	cmp	x9, #0x2
   50230:	b.cc	50250 <mpfr_bernoulli_cache@@Base+0x508>  // b.lo, b.ul, b.last
   50234:	mov	x8, xzr
   50238:	add	x9, x9, #0x1
   5023c:	add	x8, x8, #0x1
   50240:	cmp	x9, #0x3
   50244:	lsr	x9, x9, #1
   50248:	b.hi	50238 <mpfr_bernoulli_cache@@Base+0x4f0>  // b.pmore
   5024c:	b	50254 <mpfr_bernoulli_cache@@Base+0x50c>
   50250:	mov	x8, xzr
   50254:	ldr	x9, [sp]
   50258:	sub	x10, x9, #0x1
   5025c:	add	x9, x9, #0x3e
   50260:	cmp	x10, #0x0
   50264:	csel	x9, x9, x10, lt  // lt = tstop
   50268:	subs	x8, x8, x23
   5026c:	b.cs	50298 <mpfr_bernoulli_cache@@Base+0x550>  // b.hs, b.nlast
   50270:	ldr	x0, [sp, #24]
   50274:	and	x9, x9, #0xffffffffffffffc0
   50278:	add	x25, x9, #0x40
   5027c:	add	x1, x8, x25
   50280:	bl	cf80 <__gmpn_scan1@plt>
   50284:	ldr	x8, [sp, #16]
   50288:	sub	x9, x25, x0
   5028c:	cmp	x8, x9
   50290:	cset	w25, cc  // cc = lo, ul, last
   50294:	b	5029c <mpfr_bernoulli_cache@@Base+0x554>
   50298:	mov	w25, wzr
   5029c:	mov	x1, sp
   502a0:	mov	w2, #0x2                   	// #2
   502a4:	mov	x0, x20
   502a8:	bl	c260 <mpfr_get_z@plt>
   502ac:	tbnz	w19, #0, 502bc <mpfr_bernoulli_cache@@Base+0x574>
   502b0:	mov	x0, x20
   502b4:	mov	x1, x20
   502b8:	bl	c4e0 <__gmpz_neg@plt>
   502bc:	sub	x0, x29, #0x20
   502c0:	sub	x1, x29, #0x20
   502c4:	mov	x2, x22
   502c8:	bl	c590 <__gmpz_mul_ui@plt>
   502cc:	sub	x0, x29, #0x20
   502d0:	sub	x1, x29, #0x20
   502d4:	add	x2, sp, #0x40
   502d8:	bl	c3c0 <__gmpz_divexact@plt>
   502dc:	sub	x2, x29, #0x20
   502e0:	mov	x0, x20
   502e4:	mov	x1, x20
   502e8:	bl	c460 <__gmpz_mul@plt>
   502ec:	add	x0, sp, #0x40
   502f0:	mov	w1, #0x1                   	// #1
   502f4:	bl	c110 <__gmpz_set_ui@plt>
   502f8:	add	x0, sp, #0x20
   502fc:	bl	c4f0 <mpfr_clear@plt>
   50300:	mov	x0, sp
   50304:	bl	c4f0 <mpfr_clear@plt>
   50308:	sub	x0, x29, #0x10
   5030c:	bl	c610 <mpfr_mpz_clear@plt>
   50310:	sub	x0, x29, #0x20
   50314:	bl	c610 <mpfr_mpz_clear@plt>
   50318:	sub	x0, x29, #0x30
   5031c:	bl	c610 <mpfr_mpz_clear@plt>
   50320:	cbnz	w25, 50338 <mpfr_bernoulli_cache@@Base+0x5f0>
   50324:	smulh	x8, x23, x28
   50328:	asr	x9, x8, #2
   5032c:	add	x8, x9, x8, lsr #63
   50330:	add	x23, x8, x23
   50334:	b	50040 <mpfr_bernoulli_cache@@Base+0x2f8>
   50338:	add	x0, sp, #0x40
   5033c:	bl	c610 <mpfr_mpz_clear@plt>
   50340:	ldp	x20, x19, [sp, #208]
   50344:	ldp	x22, x21, [sp, #192]
   50348:	ldp	x24, x23, [sp, #176]
   5034c:	ldp	x26, x25, [sp, #160]
   50350:	ldp	x28, x27, [sp, #144]
   50354:	ldp	x29, x30, [sp, #128]
   50358:	add	sp, sp, #0xe0
   5035c:	ret

0000000000050360 <mpfr_bernoulli_freecache@@Base>:
   50360:	stp	x29, x30, [sp, #-48]!
   50364:	str	x21, [sp, #16]
   50368:	stp	x20, x19, [sp, #32]
   5036c:	mov	x29, sp
   50370:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50374:	ldr	x1, [x0, #2688]
   50378:	add	x0, x0, #0xa80
   5037c:	blr	x1
   50380:	mrs	x20, tpidr_el0
   50384:	ldr	x8, [x20, x0]
   50388:	cbz	x8, 50450 <mpfr_bernoulli_freecache@@Base+0xf0>
   5038c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50390:	ldr	x1, [x0, #2672]
   50394:	add	x0, x0, #0xa70
   50398:	blr	x1
   5039c:	ldr	x9, [x20, x0]
   503a0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   503a4:	ldr	x1, [x0, #2688]
   503a8:	add	x0, x0, #0xa80
   503ac:	blr	x1
   503b0:	ldr	x8, [x20, x0]
   503b4:	cbz	x9, 50400 <mpfr_bernoulli_freecache@@Base+0xa0>
   503b8:	mov	x19, xzr
   503bc:	mov	x21, xzr
   503c0:	add	x0, x8, x19
   503c4:	bl	c610 <mpfr_mpz_clear@plt>
   503c8:	add	x21, x21, #0x1
   503cc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   503d0:	ldr	x1, [x0, #2672]
   503d4:	add	x0, x0, #0xa70
   503d8:	blr	x1
   503dc:	ldr	x9, [x20, x0]
   503e0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   503e4:	ldr	x1, [x0, #2688]
   503e8:	add	x0, x0, #0xa80
   503ec:	blr	x1
   503f0:	ldr	x8, [x20, x0]
   503f4:	cmp	x21, x9
   503f8:	add	x19, x19, #0x10
   503fc:	b.cc	503c0 <mpfr_bernoulli_freecache@@Base+0x60>  // b.lo, b.ul, b.last
   50400:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50404:	ldr	x1, [x0, #2656]
   50408:	add	x0, x0, #0xa60
   5040c:	blr	x1
   50410:	ldr	x9, [x20, x0]
   50414:	mov	x19, x0
   50418:	mov	x0, x8
   5041c:	lsl	x1, x9, #4
   50420:	bl	d120 <mpfr_free_func@plt>
   50424:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50428:	ldr	x1, [x0, #2688]
   5042c:	add	x0, x0, #0xa80
   50430:	blr	x1
   50434:	str	xzr, [x20, x0]
   50438:	str	xzr, [x20, x19]
   5043c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50440:	ldr	x1, [x0, #2672]
   50444:	add	x0, x0, #0xa70
   50448:	blr	x1
   5044c:	str	xzr, [x20, x0]
   50450:	ldp	x20, x19, [sp, #32]
   50454:	ldr	x21, [sp, #16]
   50458:	ldp	x29, x30, [sp], #48
   5045c:	ret
   50460:	cmp	x0, #0x9
   50464:	b.cs	50470 <mpfr_bernoulli_freecache@@Base+0x110>  // b.hs, b.nlast
   50468:	mov	w0, #0x1                   	// #1
   5046c:	ret
   50470:	mov	w8, #0x3                   	// #3
   50474:	udiv	x9, x0, x8
   50478:	msub	x9, x9, x8, x0
   5047c:	cbz	x9, 50498 <mpfr_bernoulli_freecache@@Base+0x138>
   50480:	add	x8, x8, #0x2
   50484:	mul	x9, x8, x8
   50488:	cmp	x9, x0
   5048c:	b.ls	50474 <mpfr_bernoulli_freecache@@Base+0x114>  // b.plast
   50490:	mov	w0, #0x1                   	// #1
   50494:	ret
   50498:	mov	w0, wzr
   5049c:	ret

00000000000504a0 <mpfr_regular_p@@Base>:
   504a0:	ldr	x8, [x0, #16]
   504a4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   504a8:	cmp	x8, x9
   504ac:	cset	w0, gt
   504b0:	ret

00000000000504b4 <mpfr_set_flt@@Base>:
   504b4:	stp	x29, x30, [sp, #-16]!
   504b8:	fcvt	d0, s0
   504bc:	mov	x29, sp
   504c0:	bl	c2a0 <mpfr_set_d@plt>
   504c4:	ldp	x29, x30, [sp], #16
   504c8:	ret

00000000000504cc <mpfr_get_flt@@Base>:
   504cc:	sub	sp, sp, #0x40
   504d0:	stp	x29, x30, [sp, #16]
   504d4:	stp	x22, x21, [sp, #32]
   504d8:	stp	x20, x19, [sp, #48]
   504dc:	ldr	x19, [x0, #16]
   504e0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   504e4:	add	x29, sp, #0x10
   504e8:	cmp	x19, x8
   504ec:	b.le	505c8 <mpfr_get_flt@@Base+0xfc>
   504f0:	ldr	w20, [x0, #8]
   504f4:	mov	w8, #0x2                   	// #2
   504f8:	cmp	w20, #0x0
   504fc:	cinc	w8, w8, lt  // lt = tstop
   50500:	cmp	w1, #0x4
   50504:	csel	w5, w8, w1, eq  // eq = none
   50508:	cmn	x19, #0x95
   5050c:	b.le	505d0 <mpfr_get_flt@@Base+0x104>
   50510:	cmp	x19, #0x81
   50514:	b.ge	50604 <mpfr_get_flt@@Base+0x138>  // b.tcont
   50518:	add	w8, w19, #0x95
   5051c:	cmn	x19, #0x7d
   50520:	mov	w9, #0x18                  	// #24
   50524:	ldr	x1, [x0, #24]
   50528:	ldr	x2, [x0]
   5052c:	csel	w22, w8, w9, lt  // lt = tstop
   50530:	sub	w8, w22, #0x1
   50534:	lsr	w3, w20, #31
   50538:	add	w9, w22, #0x3e
   5053c:	cmp	w8, #0x0
   50540:	sxtw	x4, w22
   50544:	add	x0, sp, #0x8
   50548:	csel	w21, w9, w8, lt  // lt = tstop
   5054c:	bl	cbf0 <mpfr_round_raw_4@plt>
   50550:	cbnz	w0, 50628 <mpfr_get_flt@@Base+0x15c>
   50554:	ldr	d0, [sp, #8]
   50558:	mov	x8, #0x3bf0000000000000    	// #4318952042648305664
   5055c:	fmov	d2, x8
   50560:	cmp	w22, #0x41
   50564:	ucvtf	d1, d0
   50568:	fmul	d0, d1, d2
   5056c:	b.lt	5059c <mpfr_get_flt@@Base+0xd0>  // b.tstop
   50570:	asr	w9, w21, #6
   50574:	add	w9, w9, #0x1
   50578:	mov	w8, #0x1                   	// #1
   5057c:	sxtw	x9, w9
   50580:	mov	x10, #0x3bf0000000000000    	// #4318952042648305664
   50584:	fadd	d0, d0, d1
   50588:	add	x8, x8, #0x1
   5058c:	fmov	d2, x10
   50590:	cmp	x8, x9
   50594:	fmul	d0, d0, d2
   50598:	b.lt	50584 <mpfr_get_flt@@Base+0xb8>  // b.tstop
   5059c:	mov	w0, w19
   505a0:	bl	d090 <mpfr_scale2@plt>
   505a4:	fneg	d1, d0
   505a8:	cmp	w20, #0x0
   505ac:	fcsel	d0, d1, d0, lt  // lt = tstop
   505b0:	fcvt	s0, d0
   505b4:	ldp	x20, x19, [sp, #48]
   505b8:	ldp	x22, x21, [sp, #32]
   505bc:	ldp	x29, x30, [sp, #16]
   505c0:	add	sp, sp, #0x40
   505c4:	ret
   505c8:	bl	c190 <mpfr_get_d@plt>
   505cc:	b	505b0 <mpfr_get_flt@@Base+0xe4>
   505d0:	tbnz	w20, #31, 50630 <mpfr_get_flt@@Base+0x164>
   505d4:	cmp	w5, #0x2
   505d8:	b.eq	50674 <mpfr_get_flt@@Base+0x1a8>  // b.none
   505dc:	cbnz	w5, 5067c <mpfr_get_flt@@Base+0x1b0>
   505e0:	mov	w1, #0x1                   	// #1
   505e4:	mov	x2, #0xffffffffffffff6a    	// #-150
   505e8:	bl	c890 <mpfr_cmp_si_2exp@plt>
   505ec:	mov	w8, #0x800000              	// #8388608
   505f0:	cmp	w0, #0x0
   505f4:	fmov	s0, wzr
   505f8:	fmov	s1, w8
   505fc:	fcsel	s0, s1, s0, gt
   50600:	b	5068c <mpfr_get_flt@@Base+0x1c0>
   50604:	tbnz	w20, #31, 50654 <mpfr_get_flt@@Base+0x188>
   50608:	orr	w8, w5, #0x2
   5060c:	mov	w9, #0x7f800000            	// #2139095040
   50610:	mov	w10, #0x7f7fffff            	// #2139095039
   50614:	cmp	w8, #0x3
   50618:	fmov	s0, w9
   5061c:	fmov	s1, w10
   50620:	fcsel	s0, s1, s0, eq  // eq = none
   50624:	b	505b4 <mpfr_get_flt@@Base+0xe8>
   50628:	fmov	d0, #1.000000000000000000e+00
   5062c:	b	5059c <mpfr_get_flt@@Base+0xd0>
   50630:	cmp	w5, #0x3
   50634:	b.eq	50684 <mpfr_get_flt@@Base+0x1b8>  // b.none
   50638:	cbnz	w5, 5064c <mpfr_get_flt@@Base+0x180>
   5063c:	mov	x1, #0xffffffffffffffff    	// #-1
   50640:	mov	x2, #0xffffffffffffff6a    	// #-150
   50644:	bl	c890 <mpfr_cmp_si_2exp@plt>
   50648:	tbnz	w0, #31, 50684 <mpfr_get_flt@@Base+0x1b8>
   5064c:	mov	w8, #0x80000000            	// #-2147483648
   50650:	b	50688 <mpfr_get_flt@@Base+0x1bc>
   50654:	sub	w8, w5, #0x1
   50658:	mov	w9, #0xff800000            	// #-8388608
   5065c:	mov	w10, #0xff7fffff            	// #-8388609
   50660:	cmp	w8, #0x2
   50664:	fmov	s0, w9
   50668:	fmov	s1, w10
   5066c:	fcsel	s0, s1, s0, cc  // cc = lo, ul, last
   50670:	b	505b4 <mpfr_get_flt@@Base+0xe8>
   50674:	mov	w8, #0x800000              	// #8388608
   50678:	b	50688 <mpfr_get_flt@@Base+0x1bc>
   5067c:	fmov	s0, wzr
   50680:	b	5068c <mpfr_get_flt@@Base+0x1c0>
   50684:	mov	w8, #0x80800000            	// #-2139095040
   50688:	fmov	s0, w8
   5068c:	fcmp	s0, #0.0
   50690:	b.eq	505b4 <mpfr_get_flt@@Base+0xe8>  // b.none
   50694:	mov	w8, #0x34000000            	// #872415232
   50698:	fmov	s1, w8
   5069c:	fmul	s0, s0, s1
   506a0:	b	505b4 <mpfr_get_flt@@Base+0xe8>

00000000000506a4 <mpfr_scale2@@Base>:
   506a4:	fmov	d1, #1.000000000000000000e+00
   506a8:	fmov	d2, #5.000000000000000000e-01
   506ac:	fcmp	d0, d1
   506b0:	cset	w8, eq  // eq = none
   506b4:	fcsel	d0, d2, d0, eq  // eq = none
   506b8:	add	w9, w8, w0
   506bc:	fmov	x8, d0
   506c0:	cmn	w9, #0x3fe
   506c4:	lsr	x10, x8, #52
   506c8:	b.le	506e0 <mpfr_scale2@@Base+0x3c>
   506cc:	add	w9, w9, w10
   506d0:	and	w9, w9, #0x7ff
   506d4:	bfi	x8, x9, #52, #11
   506d8:	fmov	d0, x8
   506dc:	ret
   506e0:	add	w9, w9, w10
   506e4:	add	w9, w9, #0x34
   506e8:	and	w9, w9, #0x7ff
   506ec:	mov	x11, #0x3cb0000000000000    	// #4372995238176751616
   506f0:	bfi	x8, x9, #52, #11
   506f4:	fmov	d0, x11
   506f8:	fmov	d1, x8
   506fc:	fmul	d0, d1, d0
   50700:	ret

0000000000050704 <mpfr_set_z_2exp@@Base>:
   50704:	sub	sp, sp, #0x70
   50708:	stp	x29, x30, [sp, #16]
   5070c:	stp	x28, x27, [sp, #32]
   50710:	stp	x26, x25, [sp, #48]
   50714:	stp	x24, x23, [sp, #64]
   50718:	stp	x22, x21, [sp, #80]
   5071c:	stp	x20, x19, [sp, #96]
   50720:	ldr	w9, [x1, #4]
   50724:	mov	x20, x0
   50728:	add	x29, sp, #0x10
   5072c:	cmp	w9, #0x0
   50730:	cset	w10, ne  // ne = any
   50734:	csinv	w11, w10, wzr, ge  // ge = tcont
   50738:	cbz	w11, 508b4 <mpfr_set_z_2exp@@Base+0x1b0>
   5073c:	cmp	w9, #0x0
   50740:	mov	x8, x2
   50744:	cneg	w2, w9, mi  // mi = first
   50748:	tbnz	x8, #63, 50760 <mpfr_set_z_2exp@@Base+0x5c>
   5074c:	add	x9, x8, #0x3f
   50750:	cmp	x8, #0x0
   50754:	csel	x9, x9, x8, lt  // lt = tstop
   50758:	asr	x9, x9, #6
   5075c:	b	50778 <mpfr_set_z_2exp@@Base+0x74>
   50760:	add	x9, x8, #0x1
   50764:	add	x10, x8, #0x40
   50768:	cmp	x9, #0x0
   5076c:	csinc	x9, x10, x8, lt  // lt = tstop
   50770:	asr	x9, x9, #6
   50774:	sub	x9, x9, #0x1
   50778:	mov	x10, #0x1                   	// #1
   5077c:	add	x9, x9, x2
   50780:	movk	x10, #0x100, lsl #48
   50784:	cmp	x9, x10
   50788:	b.ge	508cc <mpfr_set_z_2exp@@Base+0x1c8>  // b.tcont
   5078c:	ldr	x24, [x1, #8]
   50790:	stur	w11, [x29, #-4]
   50794:	ldr	x9, [x20]
   50798:	ldr	x22, [x20, #24]
   5079c:	add	x11, x24, x2, lsl #3
   507a0:	ldur	x11, [x11, #-8]
   507a4:	sub	x10, x9, #0x1
   507a8:	add	x9, x9, #0x3e
   507ac:	cmp	x10, #0x0
   507b0:	clz	x25, x11
   507b4:	add	x8, x8, x2, lsl #6
   507b8:	csel	x9, x9, x10, lt  // lt = tstop
   507bc:	sub	x27, x8, x25
   507c0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   507c4:	ldr	x1, [x0, #2768]
   507c8:	add	x0, x0, #0xad0
   507cc:	blr	x1
   507d0:	mrs	x26, tpidr_el0
   507d4:	ldr	x8, [x26, x0]
   507d8:	cmp	x27, x8
   507dc:	b.gt	508dc <mpfr_set_z_2exp@@Base+0x1d8>
   507e0:	add	x10, x27, #0x1
   507e4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   507e8:	ldr	x1, [x0, #2736]
   507ec:	add	x0, x0, #0xab0
   507f0:	blr	x1
   507f4:	ldr	x8, [x26, x0]
   507f8:	cmp	x10, x8
   507fc:	b.lt	508f4 <mpfr_set_z_2exp@@Base+0x1f0>  // b.tstop
   50800:	asr	x21, x9, #6
   50804:	add	x23, x21, #0x1
   50808:	mov	w28, w3
   5080c:	sub	x19, x2, x23
   50810:	tbnz	x19, #63, 50904 <mpfr_set_z_2exp@@Base+0x200>
   50814:	add	x1, x24, x19, lsl #3
   50818:	str	x10, [sp]
   5081c:	cbz	w25, 50934 <mpfr_set_z_2exp@@Base+0x230>
   50820:	mov	x0, x22
   50824:	mov	x2, x23
   50828:	mov	w3, w25
   5082c:	bl	c120 <__gmpn_lshift@plt>
   50830:	cmp	x19, #0x1
   50834:	b.ge	50a58 <mpfr_set_z_2exp@@Base+0x354>  // b.tcont
   50838:	ldr	w8, [x20]
   5083c:	neg	w8, w8
   50840:	ands	w8, w8, #0x3f
   50844:	b.eq	5094c <mpfr_set_z_2exp@@Base+0x248>  // b.none
   50848:	sub	w8, w8, #0x1
   5084c:	mov	w9, #0x1                   	// #1
   50850:	ldr	x10, [x22]
   50854:	lsl	x8, x9, x8
   50858:	lsl	x3, x8, #1
   5085c:	sub	x9, x8, #0x1
   50860:	neg	x11, x3
   50864:	and	x8, x10, x8
   50868:	and	x9, x10, x9
   5086c:	and	x10, x10, x11
   50870:	str	x10, [x22]
   50874:	cbnz	x9, 50880 <mpfr_set_z_2exp@@Base+0x17c>
   50878:	cmp	x19, #0x1
   5087c:	b.ge	5096c <mpfr_set_z_2exp@@Base+0x268>  // b.tcont
   50880:	cbnz	w28, 509b4 <mpfr_set_z_2exp@@Base+0x2b0>
   50884:	cbz	x8, 509d4 <mpfr_set_z_2exp@@Base+0x2d0>
   50888:	cbnz	x9, 50898 <mpfr_set_z_2exp@@Base+0x194>
   5088c:	ldr	x10, [x22]
   50890:	tst	x10, x3
   50894:	b.eq	509d4 <mpfr_set_z_2exp@@Base+0x2d0>  // b.none
   50898:	mov	x0, x22
   5089c:	mov	x1, x22
   508a0:	mov	x2, x23
   508a4:	bl	bf60 <__gmpn_add_1@plt>
   508a8:	cbnz	x0, 50a78 <mpfr_set_z_2exp@@Base+0x374>
   508ac:	mov	w9, #0x1                   	// #1
   508b0:	b	509e0 <mpfr_set_z_2exp@@Base+0x2dc>
   508b4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   508b8:	mov	w10, #0x1                   	// #1
   508bc:	mov	w8, wzr
   508c0:	str	x9, [x20, #16]
   508c4:	str	w10, [x20, #8]
   508c8:	b	50a34 <mpfr_set_z_2exp@@Base+0x330>
   508cc:	mov	x0, x20
   508d0:	mov	w1, w3
   508d4:	mov	w2, w11
   508d8:	b	508e8 <mpfr_set_z_2exp@@Base+0x1e4>
   508dc:	ldur	w2, [x29, #-4]
   508e0:	mov	x0, x20
   508e4:	mov	w1, w3
   508e8:	bl	c3a0 <mpfr_overflow@plt>
   508ec:	mov	w8, w0
   508f0:	b	50a34 <mpfr_set_z_2exp@@Base+0x330>
   508f4:	cmp	w3, #0x0
   508f8:	csinc	w1, w3, wzr, ne  // ne = any
   508fc:	mov	x0, x20
   50900:	b	50ac8 <mpfr_set_z_2exp@@Base+0x3c4>
   50904:	neg	x21, x19
   50908:	sub	x0, x22, x19, lsl #3
   5090c:	cbz	w25, 50ad8 <mpfr_set_z_2exp@@Base+0x3d4>
   50910:	mov	x1, x24
   50914:	mov	w3, w25
   50918:	bl	c120 <__gmpn_lshift@plt>
   5091c:	lsl	x2, x21, #3
   50920:	mov	x0, x22
   50924:	mov	w1, wzr
   50928:	bl	c5b0 <memset@plt>
   5092c:	mov	w9, wzr
   50930:	b	509e8 <mpfr_set_z_2exp@@Base+0x2e4>
   50934:	cmp	x22, x1
   50938:	b.eq	50838 <mpfr_set_z_2exp@@Base+0x134>  // b.none
   5093c:	lsl	x2, x23, #3
   50940:	mov	x0, x22
   50944:	bl	be50 <memcpy@plt>
   50948:	b	50838 <mpfr_set_z_2exp@@Base+0x134>
   5094c:	subs	x10, x19, #0x1
   50950:	mov	w3, #0x1                   	// #1
   50954:	b.ge	50af0 <mpfr_set_z_2exp@@Base+0x3ec>  // b.tcont
   50958:	mov	x8, xzr
   5095c:	mov	x9, xzr
   50960:	mov	w25, wzr
   50964:	cbz	x9, 50878 <mpfr_set_z_2exp@@Base+0x174>
   50968:	b	50880 <mpfr_set_z_2exp@@Base+0x17c>
   5096c:	add	x9, x24, x19, lsl #3
   50970:	ldur	x9, [x9, #-8]
   50974:	neg	w10, w25
   50978:	mov	x11, #0xffffffffffffffff    	// #-1
   5097c:	lsl	x10, x11, x10
   50980:	cmp	w25, #0x0
   50984:	csinv	x10, x11, x10, eq  // eq = none
   50988:	cmp	x19, #0x2
   5098c:	and	x9, x9, x10
   50990:	b.lt	50880 <mpfr_set_z_2exp@@Base+0x17c>  // b.tstop
   50994:	cbnz	x9, 50880 <mpfr_set_z_2exp@@Base+0x17c>
   50998:	sub	x10, x24, #0x10
   5099c:	ldr	x9, [x10, x19, lsl #3]
   509a0:	sub	x19, x19, #0x1
   509a4:	cmp	x19, #0x2
   509a8:	b.lt	50880 <mpfr_set_z_2exp@@Base+0x17c>  // b.tstop
   509ac:	cbz	x9, 5099c <mpfr_set_z_2exp@@Base+0x298>
   509b0:	b	50880 <mpfr_set_z_2exp@@Base+0x17c>
   509b4:	cmp	w28, #0x1
   509b8:	b.eq	509d4 <mpfr_set_z_2exp@@Base+0x2d0>  // b.none
   509bc:	ldur	w10, [x29, #-4]
   509c0:	add	w10, w28, w10, lsr #31
   509c4:	cmp	w10, #0x3
   509c8:	b.eq	509d4 <mpfr_set_z_2exp@@Base+0x2d0>  // b.none
   509cc:	orr	x10, x9, x8
   509d0:	cbnz	x10, 50898 <mpfr_set_z_2exp@@Base+0x194>
   509d4:	orr	x8, x9, x8
   509d8:	cmp	x8, #0x0
   509dc:	csetm	w9, ne  // ne = any
   509e0:	mov	w10, #0x1                   	// #1
   509e4:	tbz	w10, #0, 50a34 <mpfr_set_z_2exp@@Base+0x330>
   509e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   509ec:	ldr	x1, [x0, #2736]
   509f0:	add	x0, x0, #0xab0
   509f4:	blr	x1
   509f8:	ldr	x8, [x26, x0]
   509fc:	cmp	x27, x8
   50a00:	b.lt	50aa8 <mpfr_set_z_2exp@@Base+0x3a4>  // b.tstop
   50a04:	ldur	w10, [x29, #-4]
   50a08:	str	x27, [x20, #16]
   50a0c:	mul	w8, w9, w10
   50a10:	str	w10, [x20, #8]
   50a14:	cbz	w8, 50a34 <mpfr_set_z_2exp@@Base+0x330>
   50a18:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50a1c:	ldr	x1, [x0, #2800]
   50a20:	add	x0, x0, #0xaf0
   50a24:	blr	x1
   50a28:	ldr	w9, [x26, x0]
   50a2c:	orr	w9, w9, #0x8
   50a30:	str	w9, [x26, x0]
   50a34:	ldp	x20, x19, [sp, #96]
   50a38:	ldp	x22, x21, [sp, #80]
   50a3c:	ldp	x24, x23, [sp, #64]
   50a40:	ldp	x26, x25, [sp, #48]
   50a44:	ldp	x28, x27, [sp, #32]
   50a48:	ldp	x29, x30, [sp, #16]
   50a4c:	mov	w0, w8
   50a50:	add	sp, sp, #0x70
   50a54:	ret
   50a58:	add	x8, x24, x19, lsl #3
   50a5c:	ldur	x8, [x8, #-8]
   50a60:	ldr	x9, [x22]
   50a64:	neg	w10, w25
   50a68:	lsr	x8, x8, x10
   50a6c:	orr	x8, x9, x8
   50a70:	str	x8, [x22]
   50a74:	b	50838 <mpfr_set_z_2exp@@Base+0x134>
   50a78:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50a7c:	ldr	x1, [x0, #2768]
   50a80:	add	x0, x0, #0xad0
   50a84:	blr	x1
   50a88:	ldr	x8, [x26, x0]
   50a8c:	cmp	x27, x8
   50a90:	b.eq	50b20 <mpfr_set_z_2exp@@Base+0x41c>  // b.none
   50a94:	ldr	x27, [sp]
   50a98:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   50a9c:	mov	w9, #0x1                   	// #1
   50aa0:	str	x8, [x22, x21, lsl #3]
   50aa4:	b	509e0 <mpfr_set_z_2exp@@Base+0x2dc>
   50aa8:	orr	w8, w9, w28
   50aac:	cbnz	w8, 50ac0 <mpfr_set_z_2exp@@Base+0x3bc>
   50ab0:	mov	x0, x20
   50ab4:	bl	c360 <mpfr_powerof2_raw@plt>
   50ab8:	cmp	w0, #0x0
   50abc:	cset	w28, ne  // ne = any
   50ac0:	mov	x0, x20
   50ac4:	mov	w1, w28
   50ac8:	ldur	w2, [x29, #-4]
   50acc:	bl	c880 <mpfr_underflow@plt>
   50ad0:	mov	w8, w0
   50ad4:	b	50a34 <mpfr_set_z_2exp@@Base+0x330>
   50ad8:	cmp	x0, x24
   50adc:	b.eq	5091c <mpfr_set_z_2exp@@Base+0x218>  // b.none
   50ae0:	lsl	x2, x2, #3
   50ae4:	mov	x1, x24
   50ae8:	bl	be50 <memcpy@plt>
   50aec:	b	5091c <mpfr_set_z_2exp@@Base+0x218>
   50af0:	mov	w8, #0x3f                  	// #63
   50af4:	ldr	x9, [x24, x10, lsl #3]
   50af8:	sub	w8, w8, w25
   50afc:	lsl	x8, x3, x8
   50b00:	sub	x11, x8, #0x1
   50b04:	and	x8, x9, x8
   50b08:	and	x9, x9, x11
   50b0c:	mov	w3, #0x1                   	// #1
   50b10:	mov	x19, x10
   50b14:	mov	w25, wzr
   50b18:	cbz	x9, 50878 <mpfr_set_z_2exp@@Base+0x174>
   50b1c:	b	50880 <mpfr_set_z_2exp@@Base+0x17c>
   50b20:	ldur	w2, [x29, #-4]
   50b24:	mov	x0, x20
   50b28:	mov	w1, w28
   50b2c:	bl	c3a0 <mpfr_overflow@plt>
   50b30:	mov	w8, w0
   50b34:	mov	w9, #0x1                   	// #1
   50b38:	mov	w10, wzr
   50b3c:	tbnz	wzr, #0, 509e8 <mpfr_set_z_2exp@@Base+0x2e4>
   50b40:	b	50a34 <mpfr_set_z_2exp@@Base+0x330>

0000000000050b44 <mpfr_ai@@Base>:
   50b44:	sub	sp, sp, #0x90
   50b48:	stp	x29, x30, [sp, #64]
   50b4c:	stp	x26, x25, [sp, #80]
   50b50:	stp	x24, x23, [sp, #96]
   50b54:	stp	x22, x21, [sp, #112]
   50b58:	stp	x20, x19, [sp, #128]
   50b5c:	ldr	x9, [x1, #16]
   50b60:	mov	x8, #0x2                   	// #2
   50b64:	movk	x8, #0x8000, lsl #48
   50b68:	add	x10, x8, #0x2
   50b6c:	mov	w19, w2
   50b70:	mov	x20, x1
   50b74:	cmp	x9, x10
   50b78:	mov	x21, x0
   50b7c:	add	x29, sp, #0x40
   50b80:	b.lt	50d10 <mpfr_ai@@Base+0x1cc>  // b.tstop
   50b84:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50b88:	ldr	x1, [x0, #2800]
   50b8c:	add	x0, x0, #0xaf0
   50b90:	blr	x1
   50b94:	mrs	x23, tpidr_el0
   50b98:	ldr	w25, [x23, x0]
   50b9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50ba0:	ldr	x1, [x0, #2736]
   50ba4:	add	x0, x0, #0xab0
   50ba8:	blr	x1
   50bac:	ldr	x26, [x23, x0]
   50bb0:	mov	x8, x0
   50bb4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50bb8:	ldr	x1, [x0, #2768]
   50bbc:	add	x0, x0, #0xad0
   50bc0:	blr	x1
   50bc4:	ldr	x24, [x23, x0]
   50bc8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   50bcc:	str	x9, [x23, x8]
   50bd0:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   50bd4:	str	x8, [x23, x0]
   50bd8:	add	x0, sp, #0x20
   50bdc:	mov	w1, #0x20                  	// #32
   50be0:	bl	cf60 <mpfr_init2@plt>
   50be4:	mov	x0, sp
   50be8:	mov	w1, #0x20                  	// #32
   50bec:	bl	cf60 <mpfr_init2@plt>
   50bf0:	ldr	w3, [x20, #8]
   50bf4:	add	x0, sp, #0x20
   50bf8:	mov	x1, x20
   50bfc:	mov	w2, wzr
   50c00:	bl	cb70 <mpfr_set4@plt>
   50c04:	mov	x0, sp
   50c08:	mov	w1, #0x51f                 	// #1311
   50c0c:	mov	x2, xzr
   50c10:	mov	w3, wzr
   50c14:	bl	cac0 <mpfr_set_ui_2exp@plt>
   50c18:	ldr	x2, [x21]
   50c1c:	mov	x0, sp
   50c20:	mov	x1, sp
   50c24:	mov	w3, wzr
   50c28:	bl	bea0 <mpfr_mul_ui@plt>
   50c2c:	ldr	w8, [x20, #8]
   50c30:	tbnz	w8, #31, 50c4c <mpfr_ai@@Base+0x108>
   50c34:	add	x0, sp, #0x20
   50c38:	add	x1, sp, #0x20
   50c3c:	mov	w2, #0x4ccd                	// #19661
   50c40:	mov	w3, wzr
   50c44:	bl	bea0 <mpfr_mul_ui@plt>
   50c48:	b	50c60 <mpfr_ai@@Base+0x11c>
   50c4c:	add	x0, sp, #0x20
   50c50:	add	x1, sp, #0x20
   50c54:	mov	x2, #0xffffffffffffcccd    	// #-13107
   50c58:	mov	w3, wzr
   50c5c:	bl	ce50 <mpfr_mul_si@plt>
   50c60:	add	x0, sp, #0x20
   50c64:	add	x1, sp, #0x20
   50c68:	mov	x2, sp
   50c6c:	mov	w3, wzr
   50c70:	bl	c640 <mpfr_add@plt>
   50c74:	mov	x0, sp
   50c78:	bl	c4f0 <mpfr_clear@plt>
   50c7c:	add	x0, sp, #0x20
   50c80:	mov	w1, #0x100000              	// #1048576
   50c84:	mov	x2, xzr
   50c88:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   50c8c:	mov	w22, w0
   50c90:	add	x0, sp, #0x20
   50c94:	bl	c4f0 <mpfr_clear@plt>
   50c98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50c9c:	ldr	x1, [x0, #2800]
   50ca0:	add	x0, x0, #0xaf0
   50ca4:	blr	x1
   50ca8:	str	w25, [x23, x0]
   50cac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50cb0:	ldr	x1, [x0, #2736]
   50cb4:	add	x0, x0, #0xab0
   50cb8:	blr	x1
   50cbc:	str	x26, [x23, x0]
   50cc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50cc4:	ldr	x1, [x0, #2768]
   50cc8:	add	x0, x0, #0xad0
   50ccc:	blr	x1
   50cd0:	cmp	w22, #0x1
   50cd4:	str	x24, [x23, x0]
   50cd8:	mov	x0, x21
   50cdc:	mov	x1, x20
   50ce0:	mov	w2, w19
   50ce4:	b.lt	50cf0 <mpfr_ai@@Base+0x1ac>  // b.tstop
   50ce8:	bl	50d74 <mpfr_ai@@Base+0x230>
   50cec:	b	50cf4 <mpfr_ai@@Base+0x1b0>
   50cf0:	bl	51910 <mpfr_ai@@Base+0xdcc>
   50cf4:	ldp	x20, x19, [sp, #128]
   50cf8:	ldp	x22, x21, [sp, #112]
   50cfc:	ldp	x24, x23, [sp, #96]
   50d00:	ldp	x26, x25, [sp, #80]
   50d04:	ldp	x29, x30, [sp, #64]
   50d08:	add	sp, sp, #0x90
   50d0c:	ret
   50d10:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   50d14:	cmp	x9, x10
   50d18:	b.eq	50d5c <mpfr_ai@@Base+0x218>  // b.none
   50d1c:	mov	x10, #0x2                   	// #2
   50d20:	movk	x10, #0x8000, lsl #48
   50d24:	cmp	x9, x10
   50d28:	b.ne	50b84 <mpfr_ai@@Base+0x40>  // b.any
   50d2c:	str	x8, [x21, #16]
   50d30:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50d34:	ldr	x1, [x0, #2800]
   50d38:	add	x0, x0, #0xaf0
   50d3c:	blr	x1
   50d40:	mov	x8, x0
   50d44:	mrs	x9, tpidr_el0
   50d48:	ldr	w10, [x9, x8]
   50d4c:	mov	w0, wzr
   50d50:	orr	w10, w10, #0x4
   50d54:	str	w10, [x9, x8]
   50d58:	b	50cf4 <mpfr_ai@@Base+0x1b0>
   50d5c:	mov	w8, #0x1                   	// #1
   50d60:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   50d64:	mov	w0, wzr
   50d68:	str	w8, [x21, #8]
   50d6c:	str	x9, [x21, #16]
   50d70:	b	50cf4 <mpfr_ai@@Base+0x1b0>
   50d74:	stp	x29, x30, [sp, #-96]!
   50d78:	stp	x28, x27, [sp, #16]
   50d7c:	stp	x26, x25, [sp, #32]
   50d80:	stp	x24, x23, [sp, #48]
   50d84:	stp	x22, x21, [sp, #64]
   50d88:	stp	x20, x19, [sp, #80]
   50d8c:	mov	x29, sp
   50d90:	sub	sp, sp, #0x1b0
   50d94:	mov	w22, w2
   50d98:	mov	x24, x1
   50d9c:	mov	x25, x0
   50da0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50da4:	ldr	x1, [x0, #2800]
   50da8:	add	x0, x0, #0xaf0
   50dac:	blr	x1
   50db0:	mrs	x23, tpidr_el0
   50db4:	ldr	w8, [x23, x0]
   50db8:	str	w8, [sp, #68]
   50dbc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50dc0:	ldr	x1, [x0, #2736]
   50dc4:	add	x0, x0, #0xab0
   50dc8:	blr	x1
   50dcc:	ldr	x9, [x23, x0]
   50dd0:	mov	x8, x0
   50dd4:	str	x9, [sp, #56]
   50dd8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   50ddc:	ldr	x1, [x0, #2768]
   50de0:	add	x0, x0, #0xad0
   50de4:	blr	x1
   50de8:	ldr	x9, [x23, x0]
   50dec:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   50df0:	str	x10, [x23, x0]
   50df4:	sub	x0, x29, #0xa8
   50df8:	str	x9, [sp, #48]
   50dfc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   50e00:	str	x9, [x23, x8]
   50e04:	ldr	x19, [x25]
   50e08:	mov	w1, #0x20                  	// #32
   50e0c:	bl	cf60 <mpfr_init2@plt>
   50e10:	sub	x0, x29, #0xc8
   50e14:	mov	w1, #0x20                  	// #32
   50e18:	bl	cf60 <mpfr_init2@plt>
   50e1c:	sub	x0, x29, #0xa8
   50e20:	mov	w2, #0x2                   	// #2
   50e24:	mov	w3, #0x1                   	// #1
   50e28:	mov	x1, x24
   50e2c:	bl	cb70 <mpfr_set4@plt>
   50e30:	sub	x0, x29, #0xa8
   50e34:	sub	x1, x29, #0xa8
   50e38:	mov	w2, #0x3                   	// #3
   50e3c:	mov	w3, #0x2                   	// #2
   50e40:	bl	c3d0 <mpfr_pow_ui@plt>
   50e44:	sub	x0, x29, #0xa8
   50e48:	sub	x1, x29, #0xa8
   50e4c:	mov	w2, #0x2                   	// #2
   50e50:	bl	ce20 <mpfr_sqrt@plt>
   50e54:	adrp	x1, 61000 <mpfr_bases@@Base+0x1408>
   50e58:	add	x1, x1, #0x5a0
   50e5c:	sub	x0, x29, #0xc8
   50e60:	mov	w2, #0xa                   	// #10
   50e64:	mov	w3, #0x2                   	// #2
   50e68:	bl	cb90 <mpfr_set_str@plt>
   50e6c:	sub	x0, x29, #0xc8
   50e70:	sub	x1, x29, #0xa8
   50e74:	sub	x2, x29, #0xc8
   50e78:	mov	w3, #0x2                   	// #2
   50e7c:	bl	c1b0 <mpfr_mul@plt>
   50e80:	ldr	x8, [x24, #16]
   50e84:	cmp	x8, #0x1
   50e88:	b.lt	50ebc <mpfr_ai@@Base+0x378>  // b.tstop
   50e8c:	sub	x0, x29, #0xc8
   50e90:	mov	w1, #0x2                   	// #2
   50e94:	bl	c100 <mpfr_get_ui@plt>
   50e98:	ldr	x8, [x24, #16]
   50e9c:	sub	x9, x8, #0x1
   50ea0:	add	x8, x8, #0x2
   50ea4:	cmp	x9, #0x0
   50ea8:	csel	x8, x8, x9, lt  // lt = tstop
   50eac:	mov	x9, #0xffffffffffffffff    	// #-1
   50eb0:	eor	x8, x9, x8, asr #2
   50eb4:	add	x20, x0, x8
   50eb8:	b	50ec0 <mpfr_ai@@Base+0x37c>
   50ebc:	mov	x20, xzr
   50ec0:	ldr	x8, [x24, #16]
   50ec4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   50ec8:	add	x28, x19, #0xb
   50ecc:	cmp	x8, x9
   50ed0:	b.ne	50edc <mpfr_ai@@Base+0x398>  // b.any
   50ed4:	mov	w21, #0x2                   	// #2
   50ed8:	b	50f20 <mpfr_ai@@Base+0x3dc>
   50edc:	ldr	w9, [x24, #8]
   50ee0:	cmp	w9, #0x1
   50ee4:	b.lt	50f14 <mpfr_ai@@Base+0x3d0>  // b.tstop
   50ee8:	cmp	x8, #0x1
   50eec:	b.lt	50f1c <mpfr_ai@@Base+0x3d8>  // b.tstop
   50ef0:	add	x9, x8, #0x3
   50ef4:	cmp	x8, #0x0
   50ef8:	sub	x0, x29, #0xc8
   50efc:	mov	w1, #0x2                   	// #2
   50f00:	csel	x21, x9, x8, lt  // lt = tstop
   50f04:	bl	c100 <mpfr_get_ui@plt>
   50f08:	add	x8, x0, x21, asr #2
   50f0c:	add	x21, x8, #0x3
   50f10:	b	50f20 <mpfr_ai@@Base+0x3dc>
   50f14:	mov	w21, #0xa                   	// #10
   50f18:	b	50f20 <mpfr_ai@@Base+0x3dc>
   50f1c:	mov	w21, #0x3                   	// #3
   50f20:	cmp	x28, #0x1
   50f24:	str	x23, [sp, #72]
   50f28:	b.eq	518b8 <mpfr_ai@@Base+0xd74>  // b.none
   50f2c:	cmn	x19, #0xa
   50f30:	b.le	518f4 <mpfr_ai@@Base+0xdb0>
   50f34:	add	x8, x19, #0xa
   50f38:	clz	x8, x8
   50f3c:	mov	w9, #0x40                  	// #64
   50f40:	sub	x8, x9, x8
   50f44:	add	x9, x20, x28
   50f48:	add	x9, x9, x21
   50f4c:	add	x8, x9, x8
   50f50:	add	x8, x8, #0x6
   50f54:	mov	x0, x28
   50f58:	str	x21, [sp, #32]
   50f5c:	str	x8, [sp, #128]
   50f60:	bl	c380 <__gmpfr_isqrt@plt>
   50f64:	lsl	x8, x0, #5
   50f68:	mov	x23, x0
   50f6c:	add	x0, x8, #0x20
   50f70:	bl	d1f0 <mpfr_allocate_func@plt>
   50f74:	mov	x27, x0
   50f78:	cbz	x0, 518c0 <mpfr_ai@@Base+0xd7c>
   50f7c:	mov	x21, xzr
   50f80:	mov	x19, x27
   50f84:	mov	x0, x19
   50f88:	bl	c030 <mpfr_init@plt>
   50f8c:	add	x21, x21, #0x1
   50f90:	cmp	x21, x23
   50f94:	add	x19, x19, #0x20
   50f98:	b.ls	50f84 <mpfr_ai@@Base+0x440>  // b.plast
   50f9c:	sub	x0, x29, #0x28
   50fa0:	bl	c030 <mpfr_init@plt>
   50fa4:	sub	x0, x29, #0x48
   50fa8:	bl	c030 <mpfr_init@plt>
   50fac:	sub	x0, x29, #0x68
   50fb0:	bl	c030 <mpfr_init@plt>
   50fb4:	sub	x0, x29, #0x88
   50fb8:	bl	c030 <mpfr_init@plt>
   50fbc:	add	x0, sp, #0xc8
   50fc0:	bl	c030 <mpfr_init@plt>
   50fc4:	add	x0, sp, #0xa8
   50fc8:	bl	c030 <mpfr_init@plt>
   50fcc:	add	x8, x20, #0x5
   50fd0:	stp	x8, x25, [sp, #96]
   50fd4:	add	x8, x20, #0x8
   50fd8:	cmp	w22, #0x0
   50fdc:	str	x8, [sp, #8]
   50fe0:	add	x8, x20, #0x6
   50fe4:	str	x8, [sp, #16]
   50fe8:	cset	w8, eq  // eq = none
   50fec:	str	w22, [sp, #84]
   50ff0:	mov	w21, #0x2                   	// #2
   50ff4:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
   50ff8:	str	x8, [sp, #88]
   50ffc:	mov	w8, #0x40                  	// #64
   51000:	str	x8, [sp, #24]
   51004:	str	x24, [sp, #40]
   51008:	str	x28, [sp, #112]
   5100c:	ldr	x26, [sp, #128]
   51010:	mov	x20, xzr
   51014:	mov	x19, x27
   51018:	mov	x0, x19
   5101c:	mov	x1, x26
   51020:	bl	c330 <mpfr_set_prec@plt>
   51024:	add	x20, x20, #0x1
   51028:	cmp	x20, x23
   5102c:	add	x19, x19, #0x20
   51030:	b.ls	51018 <mpfr_ai@@Base+0x4d4>  // b.plast
   51034:	sub	x0, x29, #0x28
   51038:	mov	x1, x26
   5103c:	bl	c330 <mpfr_set_prec@plt>
   51040:	sub	x0, x29, #0x48
   51044:	mov	x1, x26
   51048:	bl	c330 <mpfr_set_prec@plt>
   5104c:	sub	x0, x29, #0x68
   51050:	mov	x1, x26
   51054:	bl	c330 <mpfr_set_prec@plt>
   51058:	sub	x0, x29, #0x88
   5105c:	mov	x1, x26
   51060:	bl	c330 <mpfr_set_prec@plt>
   51064:	sub	x0, x29, #0x48
   51068:	mov	w1, #0x1                   	// #1
   5106c:	mov	x2, xzr
   51070:	mov	w3, wzr
   51074:	bl	cac0 <mpfr_set_ui_2exp@plt>
   51078:	ldr	w3, [x24, #8]
   5107c:	sub	x0, x29, #0x68
   51080:	mov	x1, x24
   51084:	mov	w2, wzr
   51088:	bl	cb70 <mpfr_set4@plt>
   5108c:	mov	w1, #0x1                   	// #1
   51090:	mov	w3, #0x2                   	// #2
   51094:	mov	x0, x27
   51098:	mov	x2, xzr
   5109c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   510a0:	add	x19, x27, #0x20
   510a4:	sub	x1, x29, #0x68
   510a8:	mov	w2, #0x2                   	// #2
   510ac:	mov	x0, x19
   510b0:	bl	c8c0 <mpfr_sqr@plt>
   510b4:	ldr	w8, [x24, #8]
   510b8:	mov	x0, x19
   510bc:	mov	x1, x19
   510c0:	mov	x2, x24
   510c4:	cmp	w8, #0x0
   510c8:	cinc	w3, w21, le
   510cc:	bl	c1b0 <mpfr_mul@plt>
   510d0:	ldr	w8, [x24, #8]
   510d4:	tbz	w8, #31, 510e4 <mpfr_ai@@Base+0x5a0>
   510d8:	ldr	w8, [x27, #40]
   510dc:	neg	w8, w8
   510e0:	str	w8, [x27, #40]
   510e4:	mov	w1, #0x2                   	// #2
   510e8:	mov	x0, x19
   510ec:	bl	c100 <mpfr_get_ui@plt>
   510f0:	ldr	w8, [x24, #8]
   510f4:	str	x0, [sp, #136]
   510f8:	tbnz	w8, #31, 51108 <mpfr_ai@@Base+0x5c4>
   510fc:	cmp	x23, #0x2
   51100:	b.cc	5111c <mpfr_ai@@Base+0x5d8>  // b.lo, b.ul, b.last
   51104:	b	514ac <mpfr_ai@@Base+0x968>
   51108:	ldr	w8, [x27, #40]
   5110c:	neg	w8, w8
   51110:	str	w8, [x27, #40]
   51114:	cmp	x23, #0x2
   51118:	b.cs	514ac <mpfr_ai@@Base+0x968>  // b.hs, b.nlast
   5111c:	ldr	x2, [sp, #128]
   51120:	add	x0, sp, #0xc8
   51124:	add	x1, sp, #0xa8
   51128:	bl	c000 <mpfr_gamma_one_and_two_third@plt>
   5112c:	sub	x0, x29, #0x48
   51130:	mov	w1, #0x9                   	// #9
   51134:	mov	x2, xzr
   51138:	mov	w3, wzr
   5113c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   51140:	sub	x0, x29, #0x48
   51144:	sub	x1, x29, #0x48
   51148:	mov	w2, wzr
   5114c:	bl	d220 <mpfr_cbrt@plt>
   51150:	sub	x0, x29, #0x48
   51154:	sub	x1, x29, #0x48
   51158:	add	x2, sp, #0xa8
   5115c:	mov	w3, wzr
   51160:	bl	c1b0 <mpfr_mul@plt>
   51164:	sub	x0, x29, #0x48
   51168:	sub	x2, x29, #0x48
   5116c:	mov	w1, #0x1                   	// #1
   51170:	mov	w3, wzr
   51174:	bl	c7b0 <mpfr_ui_div@plt>
   51178:	sub	x0, x29, #0x68
   5117c:	mov	w1, #0x3                   	// #3
   51180:	mov	x2, xzr
   51184:	mov	w3, wzr
   51188:	bl	cac0 <mpfr_set_ui_2exp@plt>
   5118c:	sub	x0, x29, #0x68
   51190:	sub	x1, x29, #0x68
   51194:	mov	w2, wzr
   51198:	bl	d220 <mpfr_cbrt@plt>
   5119c:	sub	x0, x29, #0x68
   511a0:	sub	x1, x29, #0x68
   511a4:	add	x2, sp, #0xc8
   511a8:	mov	w3, wzr
   511ac:	bl	c1b0 <mpfr_mul@plt>
   511b0:	sub	x0, x29, #0x68
   511b4:	sub	x1, x29, #0x68
   511b8:	mov	w2, wzr
   511bc:	bl	c1d0 <mpfr_neg@plt>
   511c0:	sub	x0, x29, #0x68
   511c4:	sub	x2, x29, #0x68
   511c8:	mov	x1, x24
   511cc:	mov	w3, wzr
   511d0:	bl	caf0 <mpfr_div@plt>
   511d4:	mov	w8, #0x1                   	// #1
   511d8:	sub	x21, x23, #0x1
   511dc:	stur	w8, [x29, #-128]
   511e0:	add	x8, x23, x23, lsl #1
   511e4:	add	x25, x27, x23, lsl #5
   511e8:	add	x19, x27, x21, lsl #5
   511ec:	mov	x26, xzr
   511f0:	add	x9, x28, #0x4
   511f4:	sub	x8, x8, #0x4
   511f8:	add	x24, x19, #0x8
   511fc:	sub	x28, x25, #0x40
   51200:	stur	x22, [x29, #-120]
   51204:	stp	x9, xzr, [sp, #152]
   51208:	str	x27, [sp, #120]
   5120c:	str	x8, [sp, #144]
   51210:	b	51220 <mpfr_ai@@Base+0x6dc>
   51214:	ldr	x8, [sp, #160]
   51218:	add	x8, x8, #0x1
   5121c:	str	x8, [sp, #160]
   51220:	ldr	w3, [x24]
   51224:	sub	x0, x29, #0x28
   51228:	mov	x1, x19
   5122c:	mov	w2, wzr
   51230:	bl	cb70 <mpfr_set4@plt>
   51234:	ldr	x8, [sp, #144]
   51238:	mov	w27, #0x1                   	// #1
   5123c:	mov	x22, x28
   51240:	add	x20, x8, x26
   51244:	add	x3, x20, #0x1
   51248:	sub	x0, x29, #0x28
   5124c:	sub	x1, x29, #0x28
   51250:	mov	x2, x20
   51254:	mov	w4, wzr
   51258:	bl	c2e0 <mpfr_div_ui2@plt>
   5125c:	sub	x0, x29, #0x28
   51260:	sub	x1, x29, #0x28
   51264:	mov	x2, x22
   51268:	mov	w3, wzr
   5126c:	bl	c640 <mpfr_add@plt>
   51270:	add	x27, x27, #0x1
   51274:	sub	x20, x20, #0x3
   51278:	cmp	x23, x27
   5127c:	sub	x22, x22, #0x20
   51280:	b.ne	51244 <mpfr_ai@@Base+0x700>  // b.any
   51284:	sub	x0, x29, #0x28
   51288:	sub	x1, x29, #0x28
   5128c:	sub	x2, x29, #0x48
   51290:	mov	w3, wzr
   51294:	bl	c1b0 <mpfr_mul@plt>
   51298:	sub	x0, x29, #0x88
   5129c:	sub	x1, x29, #0x88
   512a0:	sub	x2, x29, #0x28
   512a4:	mov	w3, wzr
   512a8:	bl	c640 <mpfr_add@plt>
   512ac:	sub	x0, x29, #0x48
   512b0:	sub	x1, x29, #0x48
   512b4:	mov	x2, x25
   512b8:	mov	w3, wzr
   512bc:	bl	c1b0 <mpfr_mul@plt>
   512c0:	mov	x22, xzr
   512c4:	sub	x27, x26, #0x2
   512c8:	add	x8, x26, #0x3
   512cc:	add	x2, x27, #0x4
   512d0:	add	x3, x27, #0x5
   512d4:	sub	x0, x29, #0x48
   512d8:	sub	x1, x29, #0x48
   512dc:	mov	w4, wzr
   512e0:	mov	x20, x8
   512e4:	bl	c2e0 <mpfr_div_ui2@plt>
   512e8:	add	x22, x22, #0x1
   512ec:	add	x27, x27, #0x3
   512f0:	cmp	x22, x21
   512f4:	add	x8, x20, #0x3
   512f8:	b.ls	512cc <mpfr_ai@@Base+0x788>  // b.plast
   512fc:	ldr	w3, [x24]
   51300:	sub	x0, x29, #0x28
   51304:	mov	x1, x19
   51308:	mov	w2, wzr
   5130c:	bl	cb70 <mpfr_set4@plt>
   51310:	mov	w26, #0x1                   	// #1
   51314:	mov	x22, x28
   51318:	sub	x3, x20, #0x2
   5131c:	sub	x20, x20, #0x3
   51320:	sub	x0, x29, #0x28
   51324:	sub	x1, x29, #0x28
   51328:	mov	x2, x20
   5132c:	mov	w4, wzr
   51330:	bl	c2e0 <mpfr_div_ui2@plt>
   51334:	sub	x0, x29, #0x28
   51338:	sub	x1, x29, #0x28
   5133c:	mov	x2, x22
   51340:	mov	w3, wzr
   51344:	bl	c640 <mpfr_add@plt>
   51348:	add	x26, x26, #0x1
   5134c:	cmp	x23, x26
   51350:	sub	x22, x22, #0x20
   51354:	b.ne	51318 <mpfr_ai@@Base+0x7d4>  // b.any
   51358:	sub	x0, x29, #0x28
   5135c:	sub	x1, x29, #0x28
   51360:	sub	x2, x29, #0x68
   51364:	mov	w3, wzr
   51368:	bl	c1b0 <mpfr_mul@plt>
   5136c:	sub	x0, x29, #0x88
   51370:	sub	x1, x29, #0x88
   51374:	sub	x2, x29, #0x28
   51378:	mov	w3, wzr
   5137c:	bl	c640 <mpfr_add@plt>
   51380:	sub	x0, x29, #0x68
   51384:	sub	x1, x29, #0x68
   51388:	mov	x2, x25
   5138c:	mov	w3, wzr
   51390:	bl	c1b0 <mpfr_mul@plt>
   51394:	mov	x26, xzr
   51398:	sub	x22, x20, #0x2
   5139c:	mov	x27, x22
   513a0:	add	x22, x22, #0x3
   513a4:	sub	x0, x29, #0x68
   513a8:	sub	x1, x29, #0x68
   513ac:	mov	x2, x20
   513b0:	mov	x3, x22
   513b4:	mov	w4, wzr
   513b8:	bl	c2e0 <mpfr_div_ui2@plt>
   513bc:	add	x26, x26, #0x1
   513c0:	cmp	x26, x21
   513c4:	add	x20, x27, #0x5
   513c8:	b.ls	5139c <mpfr_ai@@Base+0x858>  // b.plast
   513cc:	ldur	x8, [x29, #-56]
   513d0:	ldr	x11, [sp, #152]
   513d4:	ldur	x10, [x29, #-120]
   513d8:	ldur	x9, [x29, #-88]
   513dc:	mov	x13, #0x8000000000000001    	// #-9223372036854775807
   513e0:	cmp	x8, x13
   513e4:	add	x8, x11, x8
   513e8:	cset	w12, ne  // ne = any
   513ec:	cmp	x8, x10
   513f0:	add	x11, x11, x9
   513f4:	cset	w8, gt
   513f8:	cmp	x9, x13
   513fc:	cset	w9, eq  // eq = none
   51400:	cmp	x11, x10
   51404:	cset	w10, le
   51408:	add	x26, x27, #0x2
   5140c:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
   51410:	and	w11, w12, w8
   51414:	orr	w8, w9, w10
   51418:	tbnz	w11, #0, 51214 <mpfr_ai@@Base+0x6d0>
   5141c:	cbz	w8, 51214 <mpfr_ai@@Base+0x6d0>
   51420:	ldr	x9, [sp, #136]
   51424:	add	x8, x27, #0x4
   51428:	mul	x8, x8, x20
   5142c:	cmp	x9, x8, lsr #1
   51430:	b.hi	51214 <mpfr_ai@@Base+0x6d0>  // b.pmore
   51434:	add	x20, x23, #0x1
   51438:	mov	w21, #0x40                  	// #64
   5143c:	cbz	x23, 515ec <mpfr_ai@@Base+0xaa8>
   51440:	ldp	x25, x28, [sp, #104]
   51444:	ldr	x24, [sp, #128]
   51448:	ldr	x9, [sp, #160]
   5144c:	cmp	x20, #0x1
   51450:	b.ls	51604 <mpfr_ai@@Base+0xac0>  // b.plast
   51454:	clz	x8, x23
   51458:	sub	x19, x21, x8
   5145c:	cbz	x9, 51474 <mpfr_ai@@Base+0x930>
   51460:	add	x8, x9, #0x1
   51464:	cmp	x8, #0x1
   51468:	b.ls	51624 <mpfr_ai@@Base+0xae0>  // b.plast
   5146c:	clz	x8, x9
   51470:	sub	x9, x21, x8
   51474:	ldr	x10, [sp, #96]
   51478:	ldur	x8, [x29, #-120]
   5147c:	add	x10, x10, x19
   51480:	add	x9, x10, x9
   51484:	sub	x21, x9, x8
   51488:	cmp	x24, x21
   5148c:	b.le	514fc <mpfr_ai@@Base+0x9b8>
   51490:	add	x9, x21, x28
   51494:	cmp	x24, x9
   51498:	mov	x19, x28
   5149c:	b.gt	51500 <mpfr_ai@@Base+0x9bc>
   514a0:	mvn	x9, x21
   514a4:	add	x19, x24, x9
   514a8:	b	51500 <mpfr_ai@@Base+0x9bc>
   514ac:	add	x20, x27, #0x40
   514b0:	mov	w21, #0x2                   	// #2
   514b4:	b	514dc <mpfr_ai@@Base+0x998>
   514b8:	sub	x1, x20, #0x20
   514bc:	mov	x0, x20
   514c0:	mov	x2, x19
   514c4:	mov	w3, wzr
   514c8:	bl	c1b0 <mpfr_mul@plt>
   514cc:	add	x21, x21, #0x1
   514d0:	cmp	x21, x23
   514d4:	add	x20, x20, #0x20
   514d8:	b.hi	5111c <mpfr_ai@@Base+0x5d8>  // b.pmore
   514dc:	tbnz	w21, #0, 514b8 <mpfr_ai@@Base+0x974>
   514e0:	lsl	x8, x21, #4
   514e4:	and	x8, x8, #0xffffffffffffffe0
   514e8:	add	x1, x27, x8
   514ec:	mov	x0, x20
   514f0:	mov	w2, wzr
   514f4:	bl	c8c0 <mpfr_sqr@plt>
   514f8:	b	514cc <mpfr_ai@@Base+0x988>
   514fc:	mov	x19, xzr
   51500:	mov	x9, #0xfffffffffffffeff    	// #-257
   51504:	movk	x9, #0x7fff, lsl #48
   51508:	add	x9, x9, #0x105
   5150c:	cmp	x8, x9
   51510:	lsl	x20, x20, #5
   51514:	b.lt	51550 <mpfr_ai@@Base+0xa0c>  // b.tstop
   51518:	ldur	x8, [x29, #-136]
   5151c:	ldr	x9, [x25]
   51520:	ldur	x0, [x29, #-112]
   51524:	mov	x2, x19
   51528:	sub	x10, x8, #0x1
   5152c:	add	x8, x8, #0x3e
   51530:	cmp	x10, #0x0
   51534:	csel	x8, x8, x10, lt  // lt = tstop
   51538:	asr	x8, x8, #6
   5153c:	add	x1, x8, #0x1
   51540:	ldr	x8, [sp, #88]
   51544:	add	x3, x9, x8
   51548:	bl	c830 <mpfr_round_p@plt>
   5154c:	cbnz	w0, 5178c <mpfr_ai@@Base+0xc48>
   51550:	ldr	x24, [sp, #120]
   51554:	mov	x8, xzr
   51558:	mov	x0, x24
   5155c:	str	x8, [sp, #160]
   51560:	bl	c4f0 <mpfr_clear@plt>
   51564:	ldr	x8, [sp, #160]
   51568:	add	x24, x24, #0x20
   5156c:	add	x8, x8, #0x1
   51570:	cmp	x8, x23
   51574:	b.ls	51558 <mpfr_ai@@Base+0xa14>  // b.plast
   51578:	ldr	x0, [sp, #120]
   5157c:	mov	x1, x20
   51580:	bl	d120 <mpfr_free_func@plt>
   51584:	mov	x0, x26
   51588:	bl	c380 <__gmpfr_isqrt@plt>
   5158c:	lsl	x8, x0, #5
   51590:	mov	x23, x0
   51594:	add	x0, x8, #0x20
   51598:	bl	d1f0 <mpfr_allocate_func@plt>
   5159c:	mov	x20, x0
   515a0:	cbz	x0, 51644 <mpfr_ai@@Base+0xb00>
   515a4:	mov	x24, xzr
   515a8:	str	x20, [sp, #120]
   515ac:	mov	x0, x20
   515b0:	bl	c030 <mpfr_init@plt>
   515b4:	add	x24, x24, #0x1
   515b8:	cmp	x24, x23
   515bc:	add	x20, x20, #0x20
   515c0:	b.ls	515ac <mpfr_ai@@Base+0xa68>  // b.plast
   515c4:	cbz	x19, 51660 <mpfr_ai@@Base+0xb1c>
   515c8:	cmp	x19, x28
   515cc:	b.ge	516a8 <mpfr_ai@@Base+0xb64>  // b.tcont
   515d0:	ldr	x24, [sp, #40]
   515d4:	ldr	x27, [sp, #120]
   515d8:	add	x8, x28, x21
   515dc:	add	x8, x8, #0x1
   515e0:	str	x8, [sp, #128]
   515e4:	mov	w21, #0x2                   	// #2
   515e8:	b	5100c <mpfr_ai@@Base+0x4c8>
   515ec:	ldp	x25, x28, [sp, #104]
   515f0:	ldr	x24, [sp, #128]
   515f4:	ldr	x9, [sp, #160]
   515f8:	mov	x19, xzr
   515fc:	cbnz	x9, 51460 <mpfr_ai@@Base+0x91c>
   51600:	b	51474 <mpfr_ai@@Base+0x930>
   51604:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51608:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   5160c:	mov	w1, #0x206                 	// #518
   51610:	add	x0, x0, #0x5b4
   51614:	add	x2, x2, #0x5c9
   51618:	bl	d030 <mpfr_assert_fail@plt>
   5161c:	ldr	x9, [sp, #160]
   51620:	b	51454 <mpfr_ai@@Base+0x910>
   51624:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51628:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   5162c:	mov	w1, #0x206                 	// #518
   51630:	add	x0, x0, #0x5b4
   51634:	add	x2, x2, #0x5d3
   51638:	bl	d030 <mpfr_assert_fail@plt>
   5163c:	ldr	x9, [sp, #160]
   51640:	b	5146c <mpfr_ai@@Base+0x928>
   51644:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51648:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   5164c:	mov	w1, #0x222                 	// #546
   51650:	add	x0, x0, #0x5b4
   51654:	add	x2, x2, #0x5b9
   51658:	bl	d030 <mpfr_assert_fail@plt>
   5165c:	b	515a4 <mpfr_ai@@Base+0xa60>
   51660:	ldr	x8, [sp, #32]
   51664:	cmn	x27, #0x1
   51668:	lsl	x8, x8, #1
   5166c:	str	x8, [sp, #32]
   51670:	b.eq	51728 <mpfr_ai@@Base+0xbe4>  // b.none
   51674:	cmn	x27, #0x2
   51678:	b.eq	51730 <mpfr_ai@@Base+0xbec>  // b.none
   5167c:	add	x8, x27, #0x1
   51680:	clz	x8, x8
   51684:	mov	w9, #0x40                  	// #64
   51688:	sub	x8, x9, x8
   5168c:	ldr	x9, [sp, #32]
   51690:	ldr	x10, [sp, #16]
   51694:	ldr	x28, [sp, #112]
   51698:	add	x9, x10, x9
   5169c:	add	x9, x9, x28
   516a0:	add	x8, x9, x8
   516a4:	b	51714 <mpfr_ai@@Base+0xbd0>
   516a8:	ldr	x9, [sp, #24]
   516ac:	mov	x8, #0xfffffffffffffeff    	// #-257
   516b0:	movk	x8, #0x7fff, lsl #48
   516b4:	sub	x8, x8, x28
   516b8:	cmp	x9, x8
   516bc:	b.gt	5174c <mpfr_ai@@Base+0xc08>
   516c0:	ldr	x8, [sp, #112]
   516c4:	ldr	x9, [sp, #24]
   516c8:	add	x8, x9, x8
   516cc:	cmp	x8, #0x0
   516d0:	mov	x28, x8
   516d4:	cinc	x8, x8, lt  // lt = tstop
   516d8:	cmn	x27, #0x1
   516dc:	asr	x8, x8, #1
   516e0:	str	x8, [sp, #24]
   516e4:	b.eq	51768 <mpfr_ai@@Base+0xc24>  // b.none
   516e8:	cmn	x27, #0x2
   516ec:	b.eq	51770 <mpfr_ai@@Base+0xc2c>  // b.none
   516f0:	add	x8, x27, #0x1
   516f4:	clz	x8, x8
   516f8:	mov	w9, #0x40                  	// #64
   516fc:	sub	x8, x9, x8
   51700:	ldr	x10, [sp, #8]
   51704:	ldur	x9, [x29, #-120]
   51708:	add	x10, x10, x28
   5170c:	add	x8, x10, x8
   51710:	sub	x8, x8, x9
   51714:	ldr	x24, [sp, #40]
   51718:	ldr	x27, [sp, #120]
   5171c:	str	x8, [sp, #128]
   51720:	mov	w21, #0x2                   	// #2
   51724:	b	51008 <mpfr_ai@@Base+0x4c4>
   51728:	mov	x8, xzr
   5172c:	b	5168c <mpfr_ai@@Base+0xb48>
   51730:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51734:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   51738:	mov	w1, #0x22b                 	// #555
   5173c:	add	x0, x0, #0x5b4
   51740:	add	x2, x2, #0x5dd
   51744:	bl	d030 <mpfr_assert_fail@plt>
   51748:	b	5167c <mpfr_ai@@Base+0xb38>
   5174c:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51750:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   51754:	mov	w1, #0x238                 	// #568
   51758:	add	x0, x0, #0x5b4
   5175c:	add	x2, x2, #0x99a
   51760:	bl	d030 <mpfr_assert_fail@plt>
   51764:	b	516c0 <mpfr_ai@@Base+0xb7c>
   51768:	mov	x8, xzr
   5176c:	b	51700 <mpfr_ai@@Base+0xbbc>
   51770:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51774:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   51778:	mov	w1, #0x23c                 	// #572
   5177c:	add	x0, x0, #0x5b4
   51780:	add	x2, x2, #0x5dd
   51784:	bl	d030 <mpfr_assert_fail@plt>
   51788:	b	516f0 <mpfr_ai@@Base+0xbac>
   5178c:	ldr	w24, [sp, #84]
   51790:	ldur	w3, [x29, #-128]
   51794:	sub	x1, x29, #0x88
   51798:	mov	x0, x25
   5179c:	mov	w2, w24
   517a0:	bl	cb70 <mpfr_set4@plt>
   517a4:	mov	w19, w0
   517a8:	sub	x0, x29, #0xa8
   517ac:	bl	c4f0 <mpfr_clear@plt>
   517b0:	sub	x0, x29, #0xc8
   517b4:	bl	c4f0 <mpfr_clear@plt>
   517b8:	ldr	x26, [sp, #120]
   517bc:	mov	x22, xzr
   517c0:	mov	x21, x26
   517c4:	mov	x0, x21
   517c8:	bl	c4f0 <mpfr_clear@plt>
   517cc:	add	x22, x22, #0x1
   517d0:	cmp	x22, x23
   517d4:	add	x21, x21, #0x20
   517d8:	b.ls	517c4 <mpfr_ai@@Base+0xc80>  // b.plast
   517dc:	mov	x0, x26
   517e0:	mov	x1, x20
   517e4:	bl	d120 <mpfr_free_func@plt>
   517e8:	sub	x0, x29, #0x28
   517ec:	bl	c4f0 <mpfr_clear@plt>
   517f0:	sub	x0, x29, #0x48
   517f4:	bl	c4f0 <mpfr_clear@plt>
   517f8:	sub	x0, x29, #0x68
   517fc:	bl	c4f0 <mpfr_clear@plt>
   51800:	sub	x0, x29, #0x88
   51804:	bl	c4f0 <mpfr_clear@plt>
   51808:	add	x0, sp, #0xc8
   5180c:	bl	c4f0 <mpfr_clear@plt>
   51810:	add	x0, sp, #0xa8
   51814:	bl	c4f0 <mpfr_clear@plt>
   51818:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5181c:	ldr	x1, [x0, #2800]
   51820:	add	x0, x0, #0xaf0
   51824:	blr	x1
   51828:	ldr	x9, [sp, #72]
   5182c:	ldr	w10, [sp, #68]
   51830:	str	w10, [x9, x0]
   51834:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   51838:	ldr	x1, [x0, #2736]
   5183c:	add	x0, x0, #0xab0
   51840:	blr	x1
   51844:	ldr	x11, [sp, #56]
   51848:	str	x11, [x9, x0]
   5184c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   51850:	ldr	x1, [x0, #2768]
   51854:	add	x0, x0, #0xad0
   51858:	blr	x1
   5185c:	ldr	x12, [sp, #48]
   51860:	str	x12, [x9, x0]
   51864:	ldr	x8, [x25, #16]
   51868:	cmp	x8, x12
   5186c:	b.gt	518dc <mpfr_ai@@Base+0xd98>
   51870:	cmp	x8, x11
   51874:	b.lt	518dc <mpfr_ai@@Base+0xd98>  // b.tstop
   51878:	cbz	w19, 51894 <mpfr_ai@@Base+0xd50>
   5187c:	orr	w8, w10, #0x8
   51880:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   51884:	ldr	x1, [x0, #2800]
   51888:	add	x0, x0, #0xaf0
   5188c:	blr	x1
   51890:	str	w8, [x9, x0]
   51894:	mov	w0, w19
   51898:	add	sp, sp, #0x1b0
   5189c:	ldp	x20, x19, [sp, #80]
   518a0:	ldp	x22, x21, [sp, #64]
   518a4:	ldp	x24, x23, [sp, #48]
   518a8:	ldp	x26, x25, [sp, #32]
   518ac:	ldp	x28, x27, [sp, #16]
   518b0:	ldp	x29, x30, [sp], #96
   518b4:	ret
   518b8:	mov	x8, xzr
   518bc:	b	50f44 <mpfr_ai@@Base+0x400>
   518c0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   518c4:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   518c8:	add	x0, x0, #0x5b4
   518cc:	add	x2, x2, #0x5b9
   518d0:	mov	w1, #0x189                 	// #393
   518d4:	bl	d030 <mpfr_assert_fail@plt>
   518d8:	b	50f7c <mpfr_ai@@Base+0x438>
   518dc:	mov	x0, x25
   518e0:	mov	w1, w19
   518e4:	mov	w2, w24
   518e8:	bl	d020 <mpfr_check_range@plt>
   518ec:	mov	w19, w0
   518f0:	b	51894 <mpfr_ai@@Base+0xd50>
   518f4:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   518f8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   518fc:	add	x0, x0, #0x5b4
   51900:	add	x2, x2, #0x985
   51904:	mov	w1, #0x182                 	// #386
   51908:	bl	d030 <mpfr_assert_fail@plt>
   5190c:	b	50f34 <mpfr_ai@@Base+0x3f0>
   51910:	sub	sp, sp, #0x1c0
   51914:	stp	x26, x25, [sp, #384]
   51918:	mov	x25, #0xfffffffffffffeff    	// #-257
   5191c:	stp	x29, x30, [sp, #352]
   51920:	stp	x28, x27, [sp, #368]
   51924:	stp	x24, x23, [sp, #400]
   51928:	stp	x22, x21, [sp, #416]
   5192c:	stp	x20, x19, [sp, #432]
   51930:	add	x29, sp, #0x160
   51934:	mov	w27, w2
   51938:	mov	x21, x1
   5193c:	mov	x20, x0
   51940:	movk	x25, #0x7fff, lsl #48
   51944:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   51948:	ldr	x1, [x0, #2800]
   5194c:	add	x0, x0, #0xaf0
   51950:	blr	x1
   51954:	mrs	x22, tpidr_el0
   51958:	ldr	w24, [x22, x0]
   5195c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   51960:	ldr	x1, [x0, #2736]
   51964:	add	x0, x0, #0xab0
   51968:	blr	x1
   5196c:	ldr	x9, [x22, x0]
   51970:	mov	x8, x0
   51974:	str	x9, [sp, #64]
   51978:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5197c:	ldr	x1, [x0, #2768]
   51980:	add	x0, x0, #0xad0
   51984:	blr	x1
   51988:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   5198c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   51990:	ldr	x28, [x22, x0]
   51994:	str	x9, [x22, x8]
   51998:	str	x10, [x22, x0]
   5199c:	ldr	x8, [x21, #16]
   519a0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   519a4:	str	w2, [sp, #60]
   519a8:	str	x20, [sp, #80]
   519ac:	cmp	x8, x9
   519b0:	b.eq	520e8 <mpfr_ai@@Base+0x15a4>  // b.none
   519b4:	ldr	x8, [x20]
   519b8:	sub	x9, x25, #0xa
   519bc:	cmp	x8, x9
   519c0:	b.ge	522c0 <mpfr_ai@@Base+0x177c>  // b.tcont
   519c4:	ldr	x23, [x20]
   519c8:	sub	x0, x29, #0xa8
   519cc:	mov	w1, #0x20                  	// #32
   519d0:	str	w24, [sp, #44]
   519d4:	bl	cf60 <mpfr_init2@plt>
   519d8:	add	x0, sp, #0x98
   519dc:	mov	w1, #0x20                  	// #32
   519e0:	bl	cf60 <mpfr_init2@plt>
   519e4:	sub	x0, x29, #0xa8
   519e8:	mov	w2, #0x2                   	// #2
   519ec:	mov	w3, #0x1                   	// #1
   519f0:	mov	x1, x21
   519f4:	bl	cb70 <mpfr_set4@plt>
   519f8:	sub	x0, x29, #0xa8
   519fc:	sub	x1, x29, #0xa8
   51a00:	mov	w2, #0x3                   	// #3
   51a04:	mov	w3, #0x2                   	// #2
   51a08:	bl	c3d0 <mpfr_pow_ui@plt>
   51a0c:	sub	x0, x29, #0xa8
   51a10:	sub	x1, x29, #0xa8
   51a14:	mov	w2, #0x2                   	// #2
   51a18:	bl	ce20 <mpfr_sqrt@plt>
   51a1c:	adrp	x1, 61000 <mpfr_bases@@Base+0x1408>
   51a20:	add	x1, x1, #0x5a0
   51a24:	add	x0, sp, #0x98
   51a28:	mov	w2, #0xa                   	// #10
   51a2c:	mov	w3, #0x2                   	// #2
   51a30:	bl	cb90 <mpfr_set_str@plt>
   51a34:	add	x0, sp, #0x98
   51a38:	sub	x1, x29, #0xa8
   51a3c:	add	x2, sp, #0x98
   51a40:	mov	w3, #0x2                   	// #2
   51a44:	bl	c1b0 <mpfr_mul@plt>
   51a48:	ldr	x8, [x21, #16]
   51a4c:	str	x28, [sp, #32]
   51a50:	cmp	x8, #0x1
   51a54:	b.lt	51a88 <mpfr_ai@@Base+0xf44>  // b.tstop
   51a58:	add	x0, sp, #0x98
   51a5c:	mov	w1, #0x2                   	// #2
   51a60:	bl	c100 <mpfr_get_ui@plt>
   51a64:	ldr	x8, [x21, #16]
   51a68:	sub	x9, x8, #0x1
   51a6c:	add	x8, x8, #0x2
   51a70:	cmp	x9, #0x0
   51a74:	csel	x8, x8, x9, lt  // lt = tstop
   51a78:	mov	x9, #0xffffffffffffffff    	// #-1
   51a7c:	eor	x8, x9, x8, asr #2
   51a80:	add	x24, x0, x8
   51a84:	b	51a8c <mpfr_ai@@Base+0xf48>
   51a88:	mov	x24, xzr
   51a8c:	ldr	x8, [x21, #16]
   51a90:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   51a94:	add	x19, x23, #0xb
   51a98:	cmp	x8, x9
   51a9c:	b.ne	52084 <mpfr_ai@@Base+0x1540>  // b.any
   51aa0:	mov	w20, #0x2                   	// #2
   51aa4:	cmp	x19, #0x1
   51aa8:	b.eq	520c0 <mpfr_ai@@Base+0x157c>  // b.none
   51aac:	cmn	x23, #0xa
   51ab0:	b.le	52310 <mpfr_ai@@Base+0x17cc>
   51ab4:	add	x8, x23, #0xa
   51ab8:	clz	x8, x8
   51abc:	mov	w9, #0x45                  	// #69
   51ac0:	sub	x8, x9, x8
   51ac4:	add	x9, x20, x24
   51ac8:	sub	x10, x25, x23
   51acc:	str	x20, [sp, #24]
   51ad0:	add	x20, x9, x8
   51ad4:	sub	x8, x10, #0xb
   51ad8:	cmp	x20, x8
   51adc:	b.gt	522dc <mpfr_ai@@Base+0x1798>
   51ae0:	sub	x0, x29, #0x48
   51ae4:	add	x25, x20, x19
   51ae8:	bl	c030 <mpfr_init@plt>
   51aec:	sub	x0, x29, #0x68
   51af0:	bl	c030 <mpfr_init@plt>
   51af4:	add	x0, sp, #0x78
   51af8:	bl	c030 <mpfr_init@plt>
   51afc:	add	x0, sp, #0x58
   51b00:	bl	c030 <mpfr_init@plt>
   51b04:	sub	x0, x29, #0x88
   51b08:	bl	c030 <mpfr_init@plt>
   51b0c:	sub	x0, x29, #0x28
   51b10:	bl	c030 <mpfr_init@plt>
   51b14:	add	x8, x24, #0x4
   51b18:	str	x8, [sp, #72]
   51b1c:	add	x8, x24, #0x7
   51b20:	cmp	w27, #0x0
   51b24:	str	x8, [sp]
   51b28:	add	x8, x24, #0x5
   51b2c:	str	x8, [sp, #8]
   51b30:	cset	w8, eq  // eq = none
   51b34:	mov	w20, #0x2                   	// #2
   51b38:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   51b3c:	str	x8, [sp, #48]
   51b40:	mov	w8, #0x40                  	// #64
   51b44:	str	x8, [sp, #16]
   51b48:	sub	x0, x29, #0x48
   51b4c:	mov	x1, x25
   51b50:	bl	c330 <mpfr_set_prec@plt>
   51b54:	sub	x0, x29, #0x68
   51b58:	mov	x1, x25
   51b5c:	bl	c330 <mpfr_set_prec@plt>
   51b60:	sub	x0, x29, #0x88
   51b64:	mov	x1, x25
   51b68:	bl	c330 <mpfr_set_prec@plt>
   51b6c:	sub	x0, x29, #0x28
   51b70:	mov	x1, x25
   51b74:	bl	c330 <mpfr_set_prec@plt>
   51b78:	sub	x0, x29, #0x88
   51b7c:	mov	w2, #0x2                   	// #2
   51b80:	mov	x1, x21
   51b84:	bl	c8c0 <mpfr_sqr@plt>
   51b88:	ldr	w8, [x21, #8]
   51b8c:	sub	x0, x29, #0x88
   51b90:	sub	x1, x29, #0x88
   51b94:	mov	x2, x21
   51b98:	cmp	w8, #0x0
   51b9c:	cinc	w3, w20, le
   51ba0:	bl	c1b0 <mpfr_mul@plt>
   51ba4:	ldr	w8, [x21, #8]
   51ba8:	tbz	w8, #31, 51bb8 <mpfr_ai@@Base+0x1074>
   51bac:	ldur	w8, [x29, #-128]
   51bb0:	neg	w8, w8
   51bb4:	stur	w8, [x29, #-128]
   51bb8:	sub	x0, x29, #0x88
   51bbc:	mov	w1, #0x2                   	// #2
   51bc0:	bl	c100 <mpfr_get_ui@plt>
   51bc4:	ldr	w8, [x21, #8]
   51bc8:	mov	x26, x0
   51bcc:	tbz	w8, #31, 51bdc <mpfr_ai@@Base+0x1098>
   51bd0:	ldur	w8, [x29, #-128]
   51bd4:	neg	w8, w8
   51bd8:	stur	w8, [x29, #-128]
   51bdc:	add	x0, sp, #0x78
   51be0:	add	x1, sp, #0x58
   51be4:	mov	x2, x25
   51be8:	bl	c000 <mpfr_gamma_one_and_two_third@plt>
   51bec:	sub	x0, x29, #0x48
   51bf0:	mov	w1, #0x9                   	// #9
   51bf4:	mov	x2, xzr
   51bf8:	mov	w3, wzr
   51bfc:	bl	cac0 <mpfr_set_ui_2exp@plt>
   51c00:	sub	x0, x29, #0x48
   51c04:	sub	x1, x29, #0x48
   51c08:	mov	w2, wzr
   51c0c:	bl	d220 <mpfr_cbrt@plt>
   51c10:	sub	x0, x29, #0x48
   51c14:	sub	x1, x29, #0x48
   51c18:	add	x2, sp, #0x58
   51c1c:	mov	w3, wzr
   51c20:	bl	c1b0 <mpfr_mul@plt>
   51c24:	sub	x0, x29, #0x48
   51c28:	sub	x2, x29, #0x48
   51c2c:	mov	w1, #0x1                   	// #1
   51c30:	mov	w3, wzr
   51c34:	bl	c7b0 <mpfr_ui_div@plt>
   51c38:	sub	x0, x29, #0x68
   51c3c:	mov	w1, #0x3                   	// #3
   51c40:	mov	x2, xzr
   51c44:	mov	w3, wzr
   51c48:	bl	cac0 <mpfr_set_ui_2exp@plt>
   51c4c:	sub	x0, x29, #0x68
   51c50:	sub	x1, x29, #0x68
   51c54:	mov	w2, wzr
   51c58:	bl	d220 <mpfr_cbrt@plt>
   51c5c:	sub	x0, x29, #0x68
   51c60:	sub	x1, x29, #0x68
   51c64:	add	x2, sp, #0x78
   51c68:	mov	w3, wzr
   51c6c:	bl	c1b0 <mpfr_mul@plt>
   51c70:	sub	x0, x29, #0x68
   51c74:	sub	x1, x29, #0x68
   51c78:	mov	w2, wzr
   51c7c:	bl	c1d0 <mpfr_neg@plt>
   51c80:	sub	x0, x29, #0x68
   51c84:	sub	x2, x29, #0x68
   51c88:	mov	x1, x21
   51c8c:	mov	w3, wzr
   51c90:	bl	caf0 <mpfr_div@plt>
   51c94:	sub	x0, x29, #0x28
   51c98:	sub	x1, x29, #0x48
   51c9c:	sub	x2, x29, #0x68
   51ca0:	mov	w3, wzr
   51ca4:	bl	c640 <mpfr_add@plt>
   51ca8:	add	x20, x19, #0x3
   51cac:	mov	w23, #0x6                   	// #6
   51cb0:	b	51cb8 <mpfr_ai@@Base+0x1174>
   51cb4:	add	x23, x23, #0x3
   51cb8:	sub	x0, x29, #0x48
   51cbc:	sub	x1, x29, #0x48
   51cc0:	sub	x2, x29, #0x88
   51cc4:	mov	w3, wzr
   51cc8:	sub	x27, x23, #0x4
   51ccc:	bl	c1b0 <mpfr_mul@plt>
   51cd0:	sub	x0, x29, #0x68
   51cd4:	sub	x1, x29, #0x68
   51cd8:	sub	x2, x29, #0x88
   51cdc:	mov	w3, wzr
   51ce0:	bl	c1b0 <mpfr_mul@plt>
   51ce4:	sub	x28, x23, #0x3
   51ce8:	sub	x0, x29, #0x48
   51cec:	sub	x1, x29, #0x48
   51cf0:	mov	x2, x27
   51cf4:	mov	x3, x28
   51cf8:	mov	w4, wzr
   51cfc:	bl	c2e0 <mpfr_div_ui2@plt>
   51d00:	sub	x3, x23, #0x2
   51d04:	sub	x0, x29, #0x68
   51d08:	sub	x1, x29, #0x68
   51d0c:	mov	x2, x28
   51d10:	mov	w4, wzr
   51d14:	bl	c2e0 <mpfr_div_ui2@plt>
   51d18:	sub	x0, x29, #0x28
   51d1c:	sub	x1, x29, #0x28
   51d20:	sub	x2, x29, #0x48
   51d24:	mov	w3, wzr
   51d28:	bl	c640 <mpfr_add@plt>
   51d2c:	sub	x0, x29, #0x28
   51d30:	sub	x1, x29, #0x28
   51d34:	sub	x2, x29, #0x68
   51d38:	mov	w3, wzr
   51d3c:	bl	c640 <mpfr_add@plt>
   51d40:	ldur	x8, [x29, #-56]
   51d44:	ldur	x10, [x29, #-24]
   51d48:	ldur	x9, [x29, #-88]
   51d4c:	cmp	x8, x24
   51d50:	add	x8, x20, x8
   51d54:	cset	w12, ne  // ne = any
   51d58:	cmp	x8, x10
   51d5c:	add	x11, x20, x9
   51d60:	cset	w8, gt
   51d64:	cmp	x9, x24
   51d68:	cset	w9, eq  // eq = none
   51d6c:	cmp	x11, x10
   51d70:	cset	w10, le
   51d74:	and	w8, w12, w8
   51d78:	orr	w9, w9, w10
   51d7c:	tbnz	w8, #0, 51cb4 <mpfr_ai@@Base+0x1170>
   51d80:	sub	x8, x23, #0x1
   51d84:	cbz	w9, 51cb4 <mpfr_ai@@Base+0x1170>
   51d88:	mul	x8, x8, x23
   51d8c:	cmp	x26, x8, lsr #1
   51d90:	b.hi	51cb4 <mpfr_ai@@Base+0x1170>  // b.pmore
   51d94:	subs	x27, x23, #0x2
   51d98:	b.eq	51e5c <mpfr_ai@@Base+0x1318>  // b.none
   51d9c:	ldr	x28, [sp, #80]
   51da0:	cmp	x23, #0x1
   51da4:	b.eq	51e68 <mpfr_ai@@Base+0x1324>  // b.none
   51da8:	clz	x8, x27
   51dac:	mov	w9, #0x40                  	// #64
   51db0:	sub	x9, x9, x8
   51db4:	ldr	x10, [sp, #72]
   51db8:	ldur	x8, [x29, #-24]
   51dbc:	add	x9, x10, x9
   51dc0:	sub	x20, x9, x8
   51dc4:	cmp	x25, x20
   51dc8:	b.le	51de8 <mpfr_ai@@Base+0x12a4>
   51dcc:	add	x9, x20, x19
   51dd0:	cmp	x25, x9
   51dd4:	mov	x26, x19
   51dd8:	b.gt	51dec <mpfr_ai@@Base+0x12a8>
   51ddc:	mvn	x9, x20
   51de0:	add	x26, x25, x9
   51de4:	b	51dec <mpfr_ai@@Base+0x12a8>
   51de8:	mov	x26, xzr
   51dec:	mov	x9, #0xfffffffffffffeff    	// #-257
   51df0:	movk	x9, #0x7fff, lsl #48
   51df4:	add	x9, x9, #0x105
   51df8:	cmp	x8, x9
   51dfc:	b.lt	51e38 <mpfr_ai@@Base+0x12f4>  // b.tstop
   51e00:	ldur	x8, [x29, #-40]
   51e04:	ldr	x9, [x28]
   51e08:	ldur	x0, [x29, #-16]
   51e0c:	mov	x2, x26
   51e10:	sub	x10, x8, #0x1
   51e14:	add	x8, x8, #0x3e
   51e18:	cmp	x10, #0x0
   51e1c:	csel	x8, x8, x10, lt  // lt = tstop
   51e20:	asr	x8, x8, #6
   51e24:	add	x1, x8, #0x1
   51e28:	ldr	x8, [sp, #48]
   51e2c:	add	x3, x9, x8
   51e30:	bl	c830 <mpfr_round_p@plt>
   51e34:	cbnz	w0, 51f8c <mpfr_ai@@Base+0x1448>
   51e38:	cbz	x26, 51e84 <mpfr_ai@@Base+0x1340>
   51e3c:	mov	x8, #0xfffffffffffffeff    	// #-257
   51e40:	movk	x8, #0x7fff, lsl #48
   51e44:	cmp	x26, x19
   51e48:	b.ge	51ea0 <mpfr_ai@@Base+0x135c>  // b.tcont
   51e4c:	add	x8, x19, x20
   51e50:	add	x25, x8, #0x1
   51e54:	mov	w20, #0x2                   	// #2
   51e58:	b	51b48 <mpfr_ai@@Base+0x1004>
   51e5c:	ldr	x28, [sp, #80]
   51e60:	mov	x9, xzr
   51e64:	b	51db4 <mpfr_ai@@Base+0x1270>
   51e68:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51e6c:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   51e70:	mov	w1, #0xf0                  	// #240
   51e74:	add	x0, x0, #0x5b4
   51e78:	add	x2, x2, #0x6cc
   51e7c:	bl	d030 <mpfr_assert_fail@plt>
   51e80:	b	51da8 <mpfr_ai@@Base+0x1264>
   51e84:	ldr	x8, [sp, #24]
   51e88:	subs	x20, x23, #0x2
   51e8c:	lsl	x8, x8, #1
   51e90:	str	x8, [sp, #24]
   51e94:	b.ne	51ed8 <mpfr_ai@@Base+0x1394>  // b.any
   51e98:	mov	x8, xzr
   51e9c:	b	51eec <mpfr_ai@@Base+0x13a8>
   51ea0:	ldr	x9, [sp, #16]
   51ea4:	sub	x8, x8, x19
   51ea8:	cmp	x9, x8
   51eac:	b.gt	51f38 <mpfr_ai@@Base+0x13f4>
   51eb0:	ldr	x8, [sp, #16]
   51eb4:	add	x19, x8, x19
   51eb8:	cmp	x19, #0x0
   51ebc:	cinc	x8, x19, lt  // lt = tstop
   51ec0:	cmp	x23, #0x2
   51ec4:	asr	x8, x8, #1
   51ec8:	str	x8, [sp, #16]
   51ecc:	b.ne	51f08 <mpfr_ai@@Base+0x13c4>  // b.any
   51ed0:	mov	x8, xzr
   51ed4:	b	51f1c <mpfr_ai@@Base+0x13d8>
   51ed8:	cmp	x23, #0x1
   51edc:	b.eq	51f54 <mpfr_ai@@Base+0x1410>  // b.none
   51ee0:	clz	x8, x20
   51ee4:	mov	w9, #0x40                  	// #64
   51ee8:	sub	x8, x9, x8
   51eec:	ldr	x9, [sp, #8]
   51ef0:	ldr	x10, [sp, #24]
   51ef4:	mov	w20, #0x2                   	// #2
   51ef8:	add	x9, x9, x19
   51efc:	add	x9, x9, x10
   51f00:	add	x25, x9, x8
   51f04:	b	51b48 <mpfr_ai@@Base+0x1004>
   51f08:	cmp	x23, #0x1
   51f0c:	b.eq	51f70 <mpfr_ai@@Base+0x142c>  // b.none
   51f10:	clz	x8, x27
   51f14:	mov	w9, #0x40                  	// #64
   51f18:	sub	x8, x9, x8
   51f1c:	ldr	x10, [sp]
   51f20:	ldur	x9, [x29, #-24]
   51f24:	mov	w20, #0x2                   	// #2
   51f28:	add	x10, x10, x19
   51f2c:	add	x8, x10, x8
   51f30:	sub	x25, x8, x9
   51f34:	b	51b48 <mpfr_ai@@Base+0x1004>
   51f38:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51f3c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   51f40:	mov	w1, #0x116                 	// #278
   51f44:	add	x0, x0, #0x5b4
   51f48:	add	x2, x2, #0x99a
   51f4c:	bl	d030 <mpfr_assert_fail@plt>
   51f50:	b	51eb0 <mpfr_ai@@Base+0x136c>
   51f54:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51f58:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   51f5c:	mov	w1, #0x109                 	// #265
   51f60:	add	x0, x0, #0x5b4
   51f64:	add	x2, x2, #0x6cc
   51f68:	bl	d030 <mpfr_assert_fail@plt>
   51f6c:	b	51ee0 <mpfr_ai@@Base+0x139c>
   51f70:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   51f74:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   51f78:	mov	w1, #0x11a                 	// #282
   51f7c:	add	x0, x0, #0x5b4
   51f80:	add	x2, x2, #0x6cc
   51f84:	bl	d030 <mpfr_assert_fail@plt>
   51f88:	b	51f10 <mpfr_ai@@Base+0x13cc>
   51f8c:	ldr	w19, [sp, #60]
   51f90:	ldur	w3, [x29, #-32]
   51f94:	sub	x1, x29, #0x28
   51f98:	mov	x0, x28
   51f9c:	mov	w2, w19
   51fa0:	bl	cb70 <mpfr_set4@plt>
   51fa4:	mov	w21, w0
   51fa8:	sub	x0, x29, #0x48
   51fac:	bl	c4f0 <mpfr_clear@plt>
   51fb0:	sub	x0, x29, #0x68
   51fb4:	bl	c4f0 <mpfr_clear@plt>
   51fb8:	add	x0, sp, #0x78
   51fbc:	bl	c4f0 <mpfr_clear@plt>
   51fc0:	add	x0, sp, #0x58
   51fc4:	bl	c4f0 <mpfr_clear@plt>
   51fc8:	sub	x0, x29, #0x88
   51fcc:	bl	c4f0 <mpfr_clear@plt>
   51fd0:	sub	x0, x29, #0x28
   51fd4:	bl	c4f0 <mpfr_clear@plt>
   51fd8:	sub	x0, x29, #0xa8
   51fdc:	bl	c4f0 <mpfr_clear@plt>
   51fe0:	add	x0, sp, #0x98
   51fe4:	bl	c4f0 <mpfr_clear@plt>
   51fe8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   51fec:	ldr	x1, [x0, #2800]
   51ff0:	add	x0, x0, #0xaf0
   51ff4:	blr	x1
   51ff8:	ldr	w9, [sp, #44]
   51ffc:	str	w9, [x22, x0]
   52000:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52004:	ldr	x1, [x0, #2736]
   52008:	add	x0, x0, #0xab0
   5200c:	blr	x1
   52010:	ldr	x10, [sp, #64]
   52014:	str	x10, [x22, x0]
   52018:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5201c:	ldr	x1, [x0, #2768]
   52020:	add	x0, x0, #0xad0
   52024:	blr	x1
   52028:	ldr	x11, [sp, #32]
   5202c:	str	x11, [x22, x0]
   52030:	ldr	x8, [x28, #16]
   52034:	cmp	x8, x11
   52038:	b.gt	522f8 <mpfr_ai@@Base+0x17b4>
   5203c:	cmp	x8, x10
   52040:	b.lt	522f8 <mpfr_ai@@Base+0x17b4>  // b.tstop
   52044:	cbz	w21, 52060 <mpfr_ai@@Base+0x151c>
   52048:	orr	w8, w9, #0x8
   5204c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52050:	ldr	x1, [x0, #2800]
   52054:	add	x0, x0, #0xaf0
   52058:	blr	x1
   5205c:	str	w8, [x22, x0]
   52060:	mov	w0, w21
   52064:	ldp	x20, x19, [sp, #432]
   52068:	ldp	x22, x21, [sp, #416]
   5206c:	ldp	x24, x23, [sp, #400]
   52070:	ldp	x26, x25, [sp, #384]
   52074:	ldp	x28, x27, [sp, #368]
   52078:	ldp	x29, x30, [sp, #352]
   5207c:	add	sp, sp, #0x1c0
   52080:	ret
   52084:	ldr	w9, [x21, #8]
   52088:	cmp	w9, #0x1
   5208c:	b.lt	520c8 <mpfr_ai@@Base+0x1584>  // b.tstop
   52090:	cmp	x8, #0x1
   52094:	b.lt	520d8 <mpfr_ai@@Base+0x1594>  // b.tstop
   52098:	add	x9, x8, #0x3
   5209c:	cmp	x8, #0x0
   520a0:	add	x0, sp, #0x98
   520a4:	mov	w1, #0x2                   	// #2
   520a8:	csel	x20, x9, x8, lt  // lt = tstop
   520ac:	bl	c100 <mpfr_get_ui@plt>
   520b0:	add	x8, x0, x20, asr #2
   520b4:	add	x20, x8, #0x3
   520b8:	cmp	x19, #0x1
   520bc:	b.ne	51aac <mpfr_ai@@Base+0xf68>  // b.any
   520c0:	mov	w8, #0x5                   	// #5
   520c4:	b	51ac4 <mpfr_ai@@Base+0xf80>
   520c8:	mov	w20, #0xa                   	// #10
   520cc:	cmp	x19, #0x1
   520d0:	b.ne	51aac <mpfr_ai@@Base+0xf68>  // b.any
   520d4:	b	520c0 <mpfr_ai@@Base+0x157c>
   520d8:	mov	w20, #0x3                   	// #3
   520dc:	cmp	x19, #0x1
   520e0:	b.ne	51aac <mpfr_ai@@Base+0xf68>  // b.any
   520e4:	b	520c0 <mpfr_ai@@Base+0x157c>
   520e8:	ldr	x8, [x20]
   520ec:	mov	x26, #0xfffffffffffffeff    	// #-257
   520f0:	sub	x9, x25, #0x2
   520f4:	movk	x26, #0x7fff, lsl #48
   520f8:	cmp	x8, x9
   520fc:	b.ge	5232c <mpfr_ai@@Base+0x17e8>  // b.tcont
   52100:	ldr	x8, [x20]
   52104:	sub	x0, x29, #0x28
   52108:	add	x21, x8, #0x3
   5210c:	mov	x1, x21
   52110:	bl	cf60 <mpfr_init2@plt>
   52114:	sub	x0, x29, #0x48
   52118:	mov	x1, x21
   5211c:	bl	cf60 <mpfr_init2@plt>
   52120:	cmp	w27, #0x0
   52124:	adrp	x25, 5b000 <mpfr_free_pool@@Base+0x3854>
   52128:	mov	w19, #0x40                  	// #64
   5212c:	cset	w23, eq  // eq = none
   52130:	add	x25, x25, #0x99a
   52134:	sub	x0, x29, #0x28
   52138:	sub	x1, x29, #0x48
   5213c:	mov	x2, x21
   52140:	bl	c000 <mpfr_gamma_one_and_two_third@plt>
   52144:	sub	x0, x29, #0x28
   52148:	mov	w1, #0x9                   	// #9
   5214c:	mov	x2, xzr
   52150:	mov	w3, wzr
   52154:	bl	cac0 <mpfr_set_ui_2exp@plt>
   52158:	sub	x0, x29, #0x28
   5215c:	sub	x1, x29, #0x28
   52160:	mov	w2, wzr
   52164:	bl	d220 <mpfr_cbrt@plt>
   52168:	sub	x0, x29, #0x28
   5216c:	sub	x1, x29, #0x28
   52170:	sub	x2, x29, #0x48
   52174:	mov	w3, wzr
   52178:	bl	c1b0 <mpfr_mul@plt>
   5217c:	sub	x0, x29, #0x28
   52180:	sub	x2, x29, #0x28
   52184:	mov	w1, #0x1                   	// #1
   52188:	mov	w3, wzr
   5218c:	bl	c7b0 <mpfr_ui_div@plt>
   52190:	ldur	x8, [x29, #-24]
   52194:	add	x9, x26, #0x105
   52198:	cmp	x8, x9
   5219c:	b.lt	521d4 <mpfr_ai@@Base+0x1690>  // b.tstop
   521a0:	ldur	x8, [x29, #-40]
   521a4:	ldr	x9, [x20]
   521a8:	ldur	x0, [x29, #-16]
   521ac:	sub	x2, x21, #0x3
   521b0:	sub	x10, x8, #0x1
   521b4:	add	x8, x8, #0x3e
   521b8:	cmp	x10, #0x0
   521bc:	csel	x8, x8, x10, lt  // lt = tstop
   521c0:	asr	x8, x8, #6
   521c4:	add	x1, x8, #0x1
   521c8:	add	x3, x9, x23
   521cc:	bl	c830 <mpfr_round_p@plt>
   521d0:	cbnz	w0, 52214 <mpfr_ai@@Base+0x16d0>
   521d4:	sub	x8, x26, x21
   521d8:	cmp	x19, x8
   521dc:	b.gt	521fc <mpfr_ai@@Base+0x16b8>
   521e0:	add	x21, x19, x21
   521e4:	ldr	w27, [sp, #60]
   521e8:	ldr	x20, [sp, #80]
   521ec:	cmp	x21, #0x0
   521f0:	cinc	x8, x21, lt  // lt = tstop
   521f4:	asr	x19, x8, #1
   521f8:	b	52134 <mpfr_ai@@Base+0x15f0>
   521fc:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   52200:	mov	w1, #0x63                  	// #99
   52204:	add	x0, x0, #0x5b4
   52208:	mov	x2, x25
   5220c:	bl	d030 <mpfr_assert_fail@plt>
   52210:	b	521e0 <mpfr_ai@@Base+0x169c>
   52214:	ldur	w3, [x29, #-32]
   52218:	sub	x1, x29, #0x28
   5221c:	mov	x0, x20
   52220:	mov	w2, w27
   52224:	bl	cb70 <mpfr_set4@plt>
   52228:	mov	w21, w0
   5222c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52230:	ldr	x1, [x0, #2800]
   52234:	add	x0, x0, #0xaf0
   52238:	blr	x1
   5223c:	str	w24, [x22, x0]
   52240:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52244:	ldr	x1, [x0, #2736]
   52248:	add	x0, x0, #0xab0
   5224c:	blr	x1
   52250:	ldr	x8, [sp, #64]
   52254:	mov	x25, x0
   52258:	str	x8, [x22, x0]
   5225c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52260:	ldr	x1, [x0, #2768]
   52264:	add	x0, x0, #0xad0
   52268:	blr	x1
   5226c:	mov	x24, x0
   52270:	str	x28, [x22, x0]
   52274:	sub	x0, x29, #0x28
   52278:	bl	c4f0 <mpfr_clear@plt>
   5227c:	sub	x0, x29, #0x48
   52280:	bl	c4f0 <mpfr_clear@plt>
   52284:	ldr	x8, [x20, #16]
   52288:	ldr	x9, [x22, x25]
   5228c:	cmp	x8, x9
   52290:	b.lt	52348 <mpfr_ai@@Base+0x1804>  // b.tstop
   52294:	ldr	x9, [x22, x24]
   52298:	cmp	x8, x9
   5229c:	b.gt	52348 <mpfr_ai@@Base+0x1804>
   522a0:	cbz	w21, 52060 <mpfr_ai@@Base+0x151c>
   522a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   522a8:	ldr	x1, [x0, #2800]
   522ac:	add	x0, x0, #0xaf0
   522b0:	blr	x1
   522b4:	ldr	w8, [x22, x0]
   522b8:	orr	w8, w8, #0x8
   522bc:	b	5205c <mpfr_ai@@Base+0x1518>
   522c0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   522c4:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   522c8:	add	x0, x0, #0x5b4
   522cc:	add	x2, x2, #0x635
   522d0:	mov	w1, #0x7c                  	// #124
   522d4:	bl	d030 <mpfr_assert_fail@plt>
   522d8:	b	519c4 <mpfr_ai@@Base+0xe80>
   522dc:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   522e0:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   522e4:	add	x0, x0, #0x5b4
   522e8:	add	x2, x2, #0x686
   522ec:	mov	w1, #0xac                  	// #172
   522f0:	bl	d030 <mpfr_assert_fail@plt>
   522f4:	b	51ae0 <mpfr_ai@@Base+0xf9c>
   522f8:	mov	x0, x28
   522fc:	mov	w1, w21
   52300:	mov	w2, w19
   52304:	bl	d020 <mpfr_check_range@plt>
   52308:	mov	w21, w0
   5230c:	b	52060 <mpfr_ai@@Base+0x151c>
   52310:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   52314:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   52318:	add	x0, x0, #0x5b4
   5231c:	add	x2, x2, #0x985
   52320:	mov	w1, #0xab                  	// #171
   52324:	bl	d030 <mpfr_assert_fail@plt>
   52328:	b	51ab4 <mpfr_ai@@Base+0xf70>
   5232c:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   52330:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   52334:	add	x0, x0, #0x5b4
   52338:	add	x2, x2, #0x5e5
   5233c:	mov	w1, #0x52                  	// #82
   52340:	bl	d030 <mpfr_assert_fail@plt>
   52344:	b	52100 <mpfr_ai@@Base+0x15bc>
   52348:	mov	x0, x20
   5234c:	mov	w1, w21
   52350:	mov	w2, w27
   52354:	b	52304 <mpfr_ai@@Base+0x17c0>

0000000000052358 <mpfr_div_ui2@@Base>:
   52358:	stp	x29, x30, [sp, #-48]!
   5235c:	stp	x22, x21, [sp, #16]
   52360:	stp	x20, x19, [sp, #32]
   52364:	mov	x20, x3
   52368:	ldr	w3, [x1, #8]
   5236c:	mov	x22, x2
   52370:	mov	w2, w4
   52374:	mov	x29, sp
   52378:	mov	w19, w4
   5237c:	mov	x21, x0
   52380:	bl	cb70 <mpfr_set4@plt>
   52384:	umulh	x8, x22, x20
   52388:	cmp	xzr, x8
   5238c:	b.eq	523a8 <mpfr_div_ui2@@Base+0x50>  // b.none
   52390:	mov	x0, x21
   52394:	mov	x1, x21
   52398:	mov	x2, x22
   5239c:	mov	w3, w19
   523a0:	bl	d160 <mpfr_div_ui@plt>
   523a4:	b	523ac <mpfr_div_ui2@@Base+0x54>
   523a8:	mul	x20, x20, x22
   523ac:	mov	x0, x21
   523b0:	mov	x1, x21
   523b4:	mov	x2, x20
   523b8:	mov	w3, w19
   523bc:	bl	d160 <mpfr_div_ui@plt>
   523c0:	ldp	x20, x19, [sp, #32]
   523c4:	ldp	x22, x21, [sp, #16]
   523c8:	ldp	x29, x30, [sp], #48
   523cc:	ret

00000000000523d0 <mpfr_gamma_one_and_two_third@@Base>:
   523d0:	sub	sp, sp, #0x50
   523d4:	str	x21, [sp, #48]
   523d8:	add	x21, x2, #0x4
   523dc:	stp	x20, x19, [sp, #64]
   523e0:	mov	x19, x1
   523e4:	mov	x20, x0
   523e8:	mov	x0, sp
   523ec:	mov	x1, x21
   523f0:	stp	x29, x30, [sp, #32]
   523f4:	add	x29, sp, #0x20
   523f8:	bl	cf60 <mpfr_init2@plt>
   523fc:	mov	x0, x19
   52400:	mov	x1, x21
   52404:	bl	c330 <mpfr_set_prec@plt>
   52408:	mov	x0, x20
   5240c:	mov	x1, x21
   52410:	bl	524b4 <mpfr_gamma_one_and_two_third@@Base+0xe4>
   52414:	mov	x0, sp
   52418:	mov	w1, #0x3                   	// #3
   5241c:	mov	x2, xzr
   52420:	mov	w3, wzr
   52424:	bl	cac0 <mpfr_set_ui_2exp@plt>
   52428:	mov	x0, sp
   5242c:	mov	x1, sp
   52430:	mov	w2, wzr
   52434:	bl	ce20 <mpfr_sqrt@plt>
   52438:	mov	x0, sp
   5243c:	mov	x2, sp
   52440:	mov	x1, x20
   52444:	mov	w3, wzr
   52448:	bl	c1b0 <mpfr_mul@plt>
   5244c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52450:	ldr	x1, [x0, #2848]
   52454:	add	x0, x0, #0xb20
   52458:	blr	x1
   5245c:	mrs	x8, tpidr_el0
   52460:	add	x1, x8, x0
   52464:	mov	x0, x19
   52468:	mov	w2, wzr
   5246c:	bl	c840 <mpfr_cache@plt>
   52470:	mov	w2, #0x1                   	// #1
   52474:	mov	x0, x19
   52478:	mov	x1, x19
   5247c:	mov	w3, wzr
   52480:	bl	c780 <mpfr_mul_2ui@plt>
   52484:	mov	x2, sp
   52488:	mov	x0, x19
   5248c:	mov	x1, x19
   52490:	mov	w3, wzr
   52494:	bl	caf0 <mpfr_div@plt>
   52498:	mov	x0, sp
   5249c:	bl	c4f0 <mpfr_clear@plt>
   524a0:	ldp	x20, x19, [sp, #64]
   524a4:	ldr	x21, [sp, #48]
   524a8:	ldp	x29, x30, [sp, #32]
   524ac:	add	sp, sp, #0x50
   524b0:	ret
   524b4:	sub	sp, sp, #0x90
   524b8:	stp	x29, x30, [sp, #96]
   524bc:	str	x21, [sp, #112]
   524c0:	add	x29, sp, #0x60
   524c4:	add	x21, x1, #0x9
   524c8:	stp	x20, x19, [sp, #128]
   524cc:	mov	x20, x1
   524d0:	mov	x19, x0
   524d4:	sub	x0, x29, #0x20
   524d8:	mov	x1, x21
   524dc:	bl	cf60 <mpfr_init2@plt>
   524e0:	add	x0, sp, #0x20
   524e4:	mov	x1, x21
   524e8:	bl	cf60 <mpfr_init2@plt>
   524ec:	add	x1, x20, #0x4
   524f0:	mov	x0, sp
   524f4:	bl	cf60 <mpfr_init2@plt>
   524f8:	add	x1, x20, #0x2
   524fc:	mov	x0, x19
   52500:	bl	c330 <mpfr_set_prec@plt>
   52504:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52508:	ldr	x1, [x0, #2848]
   5250c:	add	x0, x0, #0xb20
   52510:	blr	x1
   52514:	mrs	x8, tpidr_el0
   52518:	add	x1, x8, x0
   5251c:	sub	x0, x29, #0x20
   52520:	mov	w2, wzr
   52524:	bl	c840 <mpfr_cache@plt>
   52528:	sub	x0, x29, #0x20
   5252c:	sub	x1, x29, #0x20
   52530:	mov	w2, wzr
   52534:	bl	c8c0 <mpfr_sqr@plt>
   52538:	sub	x0, x29, #0x20
   5253c:	sub	x1, x29, #0x20
   52540:	mov	w2, wzr
   52544:	bl	c8c0 <mpfr_sqr@plt>
   52548:	sub	x0, x29, #0x20
   5254c:	sub	x1, x29, #0x20
   52550:	mov	w2, #0xc                   	// #12
   52554:	mov	w3, wzr
   52558:	bl	bea0 <mpfr_mul_ui@plt>
   5255c:	add	x0, sp, #0x20
   52560:	mov	x1, x21
   52564:	bl	52600 <mpfr_gamma_one_and_two_third@@Base+0x230>
   52568:	sub	x0, x29, #0x20
   5256c:	sub	x1, x29, #0x20
   52570:	add	x2, sp, #0x20
   52574:	mov	w3, wzr
   52578:	bl	c1b0 <mpfr_mul@plt>
   5257c:	add	x0, sp, #0x20
   52580:	mov	w1, #0xa                   	// #10
   52584:	mov	x2, xzr
   52588:	mov	w3, wzr
   5258c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   52590:	add	x0, sp, #0x20
   52594:	add	x1, sp, #0x20
   52598:	mov	w2, wzr
   5259c:	bl	ce20 <mpfr_sqrt@plt>
   525a0:	sub	x0, x29, #0x20
   525a4:	sub	x1, x29, #0x20
   525a8:	add	x2, sp, #0x20
   525ac:	mov	w3, wzr
   525b0:	bl	caf0 <mpfr_div@plt>
   525b4:	mov	x0, sp
   525b8:	sub	x1, x29, #0x20
   525bc:	mov	w2, wzr
   525c0:	bl	ce20 <mpfr_sqrt@plt>
   525c4:	mov	x1, sp
   525c8:	mov	x0, x19
   525cc:	mov	w2, wzr
   525d0:	bl	d220 <mpfr_cbrt@plt>
   525d4:	sub	x0, x29, #0x20
   525d8:	bl	c4f0 <mpfr_clear@plt>
   525dc:	add	x0, sp, #0x20
   525e0:	bl	c4f0 <mpfr_clear@plt>
   525e4:	mov	x0, sp
   525e8:	bl	c4f0 <mpfr_clear@plt>
   525ec:	ldp	x20, x19, [sp, #128]
   525f0:	ldr	x21, [sp, #112]
   525f4:	ldp	x29, x30, [sp, #96]
   525f8:	add	sp, sp, #0x90
   525fc:	ret
   52600:	sub	sp, sp, #0x60
   52604:	add	x8, x1, #0x13
   52608:	stp	x22, x21, [sp, #64]
   5260c:	stp	x20, x19, [sp, #80]
   52610:	mov	x19, x1
   52614:	mov	x20, x0
   52618:	cmp	x8, #0xa
   5261c:	add	x21, x1, #0xa
   52620:	stp	x29, x30, [sp, #32]
   52624:	str	x23, [sp, #48]
   52628:	add	x29, sp, #0x20
   5262c:	b.cc	52750 <mpfr_gamma_one_and_two_third@@Base+0x380>  // b.lo, b.ul, b.last
   52630:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   52634:	movk	x8, #0x6667
   52638:	smulh	x8, x19, x8
   5263c:	asr	x9, x8, #2
   52640:	cmn	x19, #0xa
   52644:	add	x22, x9, x8, lsr #63
   52648:	b.le	52758 <mpfr_gamma_one_and_two_third@@Base+0x388>
   5264c:	add	x8, x22, #0x1
   52650:	clz	x8, x8
   52654:	mov	w9, #0x40                  	// #64
   52658:	sub	x8, x9, x8
   5265c:	add	x21, x21, x8
   52660:	mov	x0, sp
   52664:	mov	x1, x21
   52668:	bl	cf60 <mpfr_init2@plt>
   5266c:	mov	x0, x20
   52670:	mov	x1, x21
   52674:	bl	c330 <mpfr_set_prec@plt>
   52678:	mov	x0, sp
   5267c:	mov	w1, #0x1                   	// #1
   52680:	mov	x2, xzr
   52684:	mov	w3, wzr
   52688:	mov	w21, #0x1                   	// #1
   5268c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   52690:	ldr	w3, [sp, #8]
   52694:	mov	x1, sp
   52698:	mov	x0, x20
   5269c:	mov	w2, wzr
   526a0:	bl	cb70 <mpfr_set4@plt>
   526a4:	mov	w22, #0x3                   	// #3
   526a8:	mov	w23, #0x5                   	// #5
   526ac:	sub	x2, x23, #0x4
   526b0:	sub	x3, x23, #0x3
   526b4:	sub	x4, x23, #0x2
   526b8:	sub	x5, x23, #0x1
   526bc:	mov	x0, sp
   526c0:	mov	x1, sp
   526c4:	mov	x6, x23
   526c8:	bl	52774 <mpfr_gamma_one_and_two_third@@Base+0x3a4>
   526cc:	sub	x4, x22, #0x2
   526d0:	sub	x5, x22, #0x1
   526d4:	mov	x0, sp
   526d8:	mov	x1, sp
   526dc:	mov	x2, x21
   526e0:	mov	x3, x21
   526e4:	mov	x6, x22
   526e8:	bl	52874 <mpfr_gamma_one_and_two_third@@Base+0x4a4>
   526ec:	ldr	w8, [sp, #8]
   526f0:	mov	x2, sp
   526f4:	mov	x0, x20
   526f8:	mov	x1, x20
   526fc:	neg	w8, w8
   52700:	mov	w3, wzr
   52704:	str	w8, [sp, #8]
   52708:	bl	c640 <mpfr_add@plt>
   5270c:	ldr	x8, [sp, #16]
   52710:	ldr	x9, [x20, #16]
   52714:	add	x21, x21, #0x1
   52718:	add	x22, x22, #0x3
   5271c:	add	x8, x8, x19
   52720:	add	x9, x9, #0x7
   52724:	cmp	x8, x9
   52728:	add	x23, x23, #0x6
   5272c:	b.gt	526ac <mpfr_gamma_one_and_two_third@@Base+0x2dc>
   52730:	mov	x0, sp
   52734:	bl	c4f0 <mpfr_clear@plt>
   52738:	ldp	x20, x19, [sp, #80]
   5273c:	ldp	x22, x21, [sp, #64]
   52740:	ldr	x23, [sp, #48]
   52744:	ldp	x29, x30, [sp, #32]
   52748:	add	sp, sp, #0x60
   5274c:	ret
   52750:	mov	x8, xzr
   52754:	b	5265c <mpfr_gamma_one_and_two_third@@Base+0x28c>
   52758:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   5275c:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   52760:	add	x0, x0, #0x6d4
   52764:	add	x2, x2, #0x6e4
   52768:	mov	w1, #0x69                  	// #105
   5276c:	bl	d030 <mpfr_assert_fail@plt>
   52770:	b	5264c <mpfr_gamma_one_and_two_third@@Base+0x27c>
   52774:	stp	x29, x30, [sp, #-64]!
   52778:	stp	x24, x23, [sp, #16]
   5277c:	stp	x22, x21, [sp, #32]
   52780:	stp	x20, x19, [sp, #48]
   52784:	mov	x23, x3
   52788:	ldr	w3, [x1, #8]
   5278c:	mov	x24, x2
   52790:	mov	w2, wzr
   52794:	mov	x29, sp
   52798:	mov	x19, x6
   5279c:	mov	x21, x5
   527a0:	mov	x22, x4
   527a4:	mov	x20, x0
   527a8:	bl	cb70 <mpfr_set4@plt>
   527ac:	umulh	x8, x24, x23
   527b0:	cmp	xzr, x8
   527b4:	b.eq	527d0 <mpfr_gamma_one_and_two_third@@Base+0x400>  // b.none
   527b8:	mov	x0, x20
   527bc:	mov	x1, x20
   527c0:	mov	x2, x24
   527c4:	mov	w3, wzr
   527c8:	bl	bea0 <mpfr_mul_ui@plt>
   527cc:	b	527d4 <mpfr_gamma_one_and_two_third@@Base+0x404>
   527d0:	mul	x23, x23, x24
   527d4:	umulh	x8, x23, x22
   527d8:	cmp	xzr, x8
   527dc:	b.eq	527f8 <mpfr_gamma_one_and_two_third@@Base+0x428>  // b.none
   527e0:	mov	x0, x20
   527e4:	mov	x1, x20
   527e8:	mov	x2, x23
   527ec:	mov	w3, wzr
   527f0:	bl	bea0 <mpfr_mul_ui@plt>
   527f4:	b	527fc <mpfr_gamma_one_and_two_third@@Base+0x42c>
   527f8:	mul	x22, x23, x22
   527fc:	umulh	x8, x22, x21
   52800:	cmp	xzr, x8
   52804:	b.eq	52820 <mpfr_gamma_one_and_two_third@@Base+0x450>  // b.none
   52808:	mov	x0, x20
   5280c:	mov	x1, x20
   52810:	mov	x2, x22
   52814:	mov	w3, wzr
   52818:	bl	bea0 <mpfr_mul_ui@plt>
   5281c:	b	52824 <mpfr_gamma_one_and_two_third@@Base+0x454>
   52820:	mul	x21, x22, x21
   52824:	umulh	x8, x21, x19
   52828:	cmp	xzr, x8
   5282c:	b.eq	52848 <mpfr_gamma_one_and_two_third@@Base+0x478>  // b.none
   52830:	mov	x0, x20
   52834:	mov	x1, x20
   52838:	mov	x2, x21
   5283c:	mov	w3, wzr
   52840:	bl	bea0 <mpfr_mul_ui@plt>
   52844:	b	5284c <mpfr_gamma_one_and_two_third@@Base+0x47c>
   52848:	mul	x19, x21, x19
   5284c:	mov	x0, x20
   52850:	mov	x1, x20
   52854:	mov	x2, x19
   52858:	mov	w3, wzr
   5285c:	bl	bea0 <mpfr_mul_ui@plt>
   52860:	ldp	x20, x19, [sp, #48]
   52864:	ldp	x22, x21, [sp, #32]
   52868:	ldp	x24, x23, [sp, #16]
   5286c:	ldp	x29, x30, [sp], #64
   52870:	ret
   52874:	stp	x29, x30, [sp, #-64]!
   52878:	stp	x24, x23, [sp, #16]
   5287c:	stp	x22, x21, [sp, #32]
   52880:	stp	x20, x19, [sp, #48]
   52884:	mov	x23, x3
   52888:	ldr	w3, [x1, #8]
   5288c:	mov	x24, x2
   52890:	mov	w2, wzr
   52894:	mov	x29, sp
   52898:	mov	x20, x6
   5289c:	mov	x21, x5
   528a0:	mov	x22, x4
   528a4:	mov	x19, x0
   528a8:	bl	cb70 <mpfr_set4@plt>
   528ac:	umulh	x8, x24, x23
   528b0:	cmp	xzr, x8
   528b4:	b.eq	528d0 <mpfr_gamma_one_and_two_third@@Base+0x500>  // b.none
   528b8:	mov	x0, x19
   528bc:	mov	x1, x19
   528c0:	mov	x2, x24
   528c4:	mov	w3, wzr
   528c8:	bl	d160 <mpfr_div_ui@plt>
   528cc:	b	528d4 <mpfr_gamma_one_and_two_third@@Base+0x504>
   528d0:	mul	x23, x23, x24
   528d4:	umulh	x8, x23, x22
   528d8:	cmp	xzr, x8
   528dc:	b.eq	528f8 <mpfr_gamma_one_and_two_third@@Base+0x528>  // b.none
   528e0:	mov	x0, x19
   528e4:	mov	x1, x19
   528e8:	mov	x2, x23
   528ec:	mov	w3, wzr
   528f0:	bl	d160 <mpfr_div_ui@plt>
   528f4:	b	528fc <mpfr_gamma_one_and_two_third@@Base+0x52c>
   528f8:	mul	x22, x23, x22
   528fc:	umulh	x8, x22, x21
   52900:	cmp	xzr, x8
   52904:	b.eq	52920 <mpfr_gamma_one_and_two_third@@Base+0x550>  // b.none
   52908:	mov	x0, x19
   5290c:	mov	x1, x19
   52910:	mov	x2, x22
   52914:	mov	w3, wzr
   52918:	bl	d160 <mpfr_div_ui@plt>
   5291c:	b	52924 <mpfr_gamma_one_and_two_third@@Base+0x554>
   52920:	mul	x21, x22, x21
   52924:	umulh	x8, x21, x20
   52928:	cmp	xzr, x8
   5292c:	b.eq	52948 <mpfr_gamma_one_and_two_third@@Base+0x578>  // b.none
   52930:	mov	x0, x19
   52934:	mov	x1, x19
   52938:	mov	x2, x21
   5293c:	mov	w3, wzr
   52940:	bl	d160 <mpfr_div_ui@plt>
   52944:	b	5294c <mpfr_gamma_one_and_two_third@@Base+0x57c>
   52948:	mul	x20, x21, x20
   5294c:	mov	x8, #0x3333333333333333    	// #3689348814741910323
   52950:	movk	x8, #0x333, lsl #48
   52954:	cmp	x20, x8
   52958:	b.hi	52968 <mpfr_gamma_one_and_two_third@@Base+0x598>  // b.pmore
   5295c:	add	x8, x20, x20, lsl #2
   52960:	lsl	x2, x8, #4
   52964:	b	52980 <mpfr_gamma_one_and_two_third@@Base+0x5b0>
   52968:	mov	x0, x19
   5296c:	mov	x1, x19
   52970:	mov	x2, x20
   52974:	mov	w3, wzr
   52978:	bl	d160 <mpfr_div_ui@plt>
   5297c:	mov	w2, #0x50                  	// #80
   52980:	mov	x20, #0x9999999999999999    	// #-7378697629483820647
   52984:	movk	x20, #0x999a
   52988:	movk	x20, #0x199, lsl #48
   5298c:	cmp	x2, x20
   52990:	b.cs	529bc <mpfr_gamma_one_and_two_third@@Base+0x5ec>  // b.hs, b.nlast
   52994:	add	x8, x2, x2, lsl #2
   52998:	lsl	x2, x8, #5
   5299c:	cmp	x2, x20
   529a0:	b.cc	529d8 <mpfr_gamma_one_and_two_third@@Base+0x608>  // b.lo, b.ul, b.last
   529a4:	mov	x0, x19
   529a8:	mov	x1, x19
   529ac:	mov	w3, wzr
   529b0:	bl	d160 <mpfr_div_ui@plt>
   529b4:	mov	w2, #0xa0                  	// #160
   529b8:	b	529e0 <mpfr_gamma_one_and_two_third@@Base+0x610>
   529bc:	mov	x0, x19
   529c0:	mov	x1, x19
   529c4:	mov	w3, wzr
   529c8:	bl	d160 <mpfr_div_ui@plt>
   529cc:	mov	w2, #0xa0                  	// #160
   529d0:	cmp	x2, x20
   529d4:	b.cs	529a4 <mpfr_gamma_one_and_two_third@@Base+0x5d4>  // b.hs, b.nlast
   529d8:	add	x8, x2, x2, lsl #2
   529dc:	lsl	x2, x8, #5
   529e0:	mov	x0, x19
   529e4:	mov	x1, x19
   529e8:	mov	w3, wzr
   529ec:	bl	d160 <mpfr_div_ui@plt>
   529f0:	ldp	x20, x19, [sp, #48]
   529f4:	ldp	x22, x21, [sp, #32]
   529f8:	ldp	x24, x23, [sp, #16]
   529fc:	ldp	x29, x30, [sp], #64
   52a00:	ret

0000000000052a04 <mpfr_grandom@@Base>:
   52a04:	sub	sp, sp, #0x180
   52a08:	stp	x29, x30, [sp, #288]
   52a0c:	stp	x28, x27, [sp, #304]
   52a10:	stp	x26, x25, [sp, #320]
   52a14:	stp	x24, x23, [sp, #336]
   52a18:	stp	x22, x21, [sp, #352]
   52a1c:	stp	x20, x19, [sp, #368]
   52a20:	ldr	x23, [x0]
   52a24:	mov	w27, w3
   52a28:	mov	x22, x2
   52a2c:	mov	x19, x1
   52a30:	add	x29, sp, #0x120
   52a34:	str	x0, [sp, #16]
   52a38:	cbz	x1, 52a48 <mpfr_grandom@@Base+0x44>
   52a3c:	ldr	x8, [x19]
   52a40:	cmp	x23, x8
   52a44:	csel	x23, x23, x8, gt
   52a48:	sub	x0, x29, #0x38
   52a4c:	add	x25, x23, #0xb
   52a50:	bl	c400 <mpfr_mpz_init@plt>
   52a54:	sub	x0, x29, #0x48
   52a58:	bl	c400 <mpfr_mpz_init@plt>
   52a5c:	sub	x0, x29, #0x18
   52a60:	bl	c400 <mpfr_mpz_init@plt>
   52a64:	sub	x0, x29, #0x28
   52a68:	bl	c400 <mpfr_mpz_init@plt>
   52a6c:	sub	x0, x29, #0x58
   52a70:	bl	c400 <mpfr_mpz_init@plt>
   52a74:	sub	x0, x29, #0x88
   52a78:	bl	c400 <mpfr_mpz_init@plt>
   52a7c:	sub	x0, x29, #0x68
   52a80:	bl	c400 <mpfr_mpz_init@plt>
   52a84:	sub	x0, x29, #0x78
   52a88:	bl	c400 <mpfr_mpz_init@plt>
   52a8c:	add	x0, sp, #0x78
   52a90:	mov	w1, #0x1                   	// #1
   52a94:	bl	cf60 <mpfr_init2@plt>
   52a98:	add	x0, sp, #0x58
   52a9c:	mov	w1, #0x1                   	// #1
   52aa0:	bl	cf60 <mpfr_init2@plt>
   52aa4:	add	x0, sp, #0x38
   52aa8:	mov	w1, #0x1                   	// #1
   52aac:	bl	cf60 <mpfr_init2@plt>
   52ab0:	mov	x21, x19
   52ab4:	cbz	x19, 52ac4 <mpfr_grandom@@Base+0xc0>
   52ab8:	add	x0, sp, #0x18
   52abc:	mov	w1, #0x1                   	// #1
   52ac0:	bl	cf60 <mpfr_init2@plt>
   52ac4:	sub	x0, x29, #0x38
   52ac8:	mov	x1, xzr
   52acc:	bl	c110 <__gmpz_set_ui@plt>
   52ad0:	sub	x0, x29, #0x48
   52ad4:	mov	x1, xzr
   52ad8:	bl	c110 <__gmpz_set_ui@plt>
   52adc:	lsl	x8, x23, #1
   52ae0:	lsl	x19, x25, #1
   52ae4:	add	x20, x23, #0x9
   52ae8:	add	x26, x8, #0x16
   52aec:	sub	x0, x29, #0x38
   52af0:	mov	x1, x22
   52af4:	mov	x2, x25
   52af8:	bl	d200 <__gmpz_urandomb@plt>
   52afc:	sub	x0, x29, #0x48
   52b00:	mov	x1, x22
   52b04:	mov	x2, x25
   52b08:	bl	d200 <__gmpz_urandomb@plt>
   52b0c:	sub	x0, x29, #0x68
   52b10:	sub	x1, x29, #0x38
   52b14:	sub	x2, x29, #0x38
   52b18:	bl	c460 <__gmpz_mul@plt>
   52b1c:	sub	x0, x29, #0x78
   52b20:	sub	x1, x29, #0x48
   52b24:	sub	x2, x29, #0x48
   52b28:	bl	c460 <__gmpz_mul@plt>
   52b2c:	sub	x0, x29, #0x88
   52b30:	sub	x1, x29, #0x68
   52b34:	sub	x2, x29, #0x78
   52b38:	bl	ceb0 <__gmpz_add@plt>
   52b3c:	sub	x0, x29, #0x88
   52b40:	mov	w1, #0x2                   	// #2
   52b44:	bl	d050 <__gmpz_sizeinbase@plt>
   52b48:	cmp	x0, x19
   52b4c:	b.hi	52aec <mpfr_grandom@@Base+0xe8>  // b.pmore
   52b50:	mov	x23, x26
   52b54:	mov	x24, x20
   52b58:	b	52c08 <mpfr_grandom@@Base+0x204>
   52b5c:	sub	x0, x29, #0x38
   52b60:	sub	x1, x29, #0x38
   52b64:	mov	w2, #0x20                  	// #32
   52b68:	bl	c6a0 <__gmpz_mul_2exp@plt>
   52b6c:	sub	x0, x29, #0x48
   52b70:	sub	x1, x29, #0x48
   52b74:	mov	w2, #0x20                  	// #32
   52b78:	bl	c6a0 <__gmpz_mul_2exp@plt>
   52b7c:	sub	x0, x29, #0x18
   52b80:	mov	w2, #0x20                  	// #32
   52b84:	mov	x1, x22
   52b88:	bl	d200 <__gmpz_urandomb@plt>
   52b8c:	sub	x0, x29, #0x28
   52b90:	mov	w2, #0x20                  	// #32
   52b94:	mov	x1, x22
   52b98:	bl	d200 <__gmpz_urandomb@plt>
   52b9c:	sub	x0, x29, #0x38
   52ba0:	sub	x1, x29, #0x38
   52ba4:	sub	x2, x29, #0x18
   52ba8:	bl	ceb0 <__gmpz_add@plt>
   52bac:	sub	x0, x29, #0x48
   52bb0:	sub	x1, x29, #0x48
   52bb4:	sub	x2, x29, #0x28
   52bb8:	bl	ceb0 <__gmpz_add@plt>
   52bbc:	sub	x0, x29, #0x68
   52bc0:	sub	x1, x29, #0x38
   52bc4:	sub	x2, x29, #0x38
   52bc8:	bl	c460 <__gmpz_mul@plt>
   52bcc:	sub	x0, x29, #0x78
   52bd0:	sub	x1, x29, #0x48
   52bd4:	sub	x2, x29, #0x48
   52bd8:	bl	c460 <__gmpz_mul@plt>
   52bdc:	sub	x0, x29, #0x88
   52be0:	sub	x1, x29, #0x68
   52be4:	sub	x2, x29, #0x78
   52be8:	bl	ceb0 <__gmpz_add@plt>
   52bec:	sub	x0, x29, #0x88
   52bf0:	mov	w1, #0x2                   	// #2
   52bf4:	bl	d050 <__gmpz_sizeinbase@plt>
   52bf8:	add	x23, x23, #0x40
   52bfc:	cmp	x0, x23
   52c00:	add	x24, x24, #0x20
   52c04:	b.hi	52aec <mpfr_grandom@@Base+0xe8>  // b.pmore
   52c08:	sub	x0, x29, #0x68
   52c0c:	sub	x1, x29, #0x38
   52c10:	mov	w2, #0x1                   	// #1
   52c14:	bl	c820 <__gmpz_add_ui@plt>
   52c18:	sub	x0, x29, #0x78
   52c1c:	sub	x1, x29, #0x48
   52c20:	mov	w2, #0x1                   	// #1
   52c24:	bl	c820 <__gmpz_add_ui@plt>
   52c28:	sub	x0, x29, #0x68
   52c2c:	sub	x1, x29, #0x68
   52c30:	sub	x2, x29, #0x68
   52c34:	bl	c460 <__gmpz_mul@plt>
   52c38:	sub	x0, x29, #0x78
   52c3c:	sub	x1, x29, #0x78
   52c40:	sub	x2, x29, #0x78
   52c44:	bl	c460 <__gmpz_mul@plt>
   52c48:	sub	x0, x29, #0x88
   52c4c:	sub	x1, x29, #0x68
   52c50:	sub	x2, x29, #0x78
   52c54:	bl	ceb0 <__gmpz_add@plt>
   52c58:	sub	x0, x29, #0x88
   52c5c:	mov	w1, #0x2                   	// #2
   52c60:	bl	d050 <__gmpz_sizeinbase@plt>
   52c64:	cmp	x0, x23
   52c68:	b.ls	52c8c <mpfr_grandom@@Base+0x288>  // b.plast
   52c6c:	add	x8, x23, #0x1
   52c70:	cmp	x8, x0
   52c74:	b.ne	52b5c <mpfr_grandom@@Base+0x158>  // b.any
   52c78:	sub	x0, x29, #0x88
   52c7c:	mov	x1, xzr
   52c80:	bl	bee0 <__gmpz_scan1@plt>
   52c84:	cmp	x23, x0
   52c88:	b.ne	52b5c <mpfr_grandom@@Base+0x158>  // b.any
   52c8c:	mov	x20, #0x4                   	// #4
   52c90:	sub	x0, x29, #0x68
   52c94:	sub	x1, x29, #0x38
   52c98:	sub	x2, x29, #0x38
   52c9c:	movk	x20, #0x8000, lsl #48
   52ca0:	bl	c460 <__gmpz_mul@plt>
   52ca4:	sub	x0, x29, #0x78
   52ca8:	sub	x1, x29, #0x48
   52cac:	sub	x2, x29, #0x48
   52cb0:	bl	c460 <__gmpz_mul@plt>
   52cb4:	sub	x0, x29, #0x88
   52cb8:	sub	x1, x29, #0x68
   52cbc:	sub	x2, x29, #0x78
   52cc0:	bl	ceb0 <__gmpz_add@plt>
   52cc4:	sub	x0, x29, #0x18
   52cc8:	mov	w2, #0x2                   	// #2
   52ccc:	mov	x1, x22
   52cd0:	bl	d200 <__gmpz_urandomb@plt>
   52cd4:	sub	x0, x29, #0x18
   52cd8:	mov	x1, xzr
   52cdc:	bl	c450 <__gmpz_tstbit@plt>
   52ce0:	mov	w25, w0
   52ce4:	sub	x0, x29, #0x18
   52ce8:	mov	w1, #0x1                   	// #1
   52cec:	bl	c450 <__gmpz_tstbit@plt>
   52cf0:	cmp	w27, #0x0
   52cf4:	mov	w26, w0
   52cf8:	str	w27, [sp, #12]
   52cfc:	cset	w19, eq  // eq = none
   52d00:	neg	x27, x23
   52d04:	b	52da4 <mpfr_grandom@@Base+0x3a0>
   52d08:	sub	x0, x29, #0x38
   52d0c:	sub	x1, x29, #0x38
   52d10:	mov	w2, #0x20                  	// #32
   52d14:	bl	c6a0 <__gmpz_mul_2exp@plt>
   52d18:	sub	x0, x29, #0x48
   52d1c:	sub	x1, x29, #0x48
   52d20:	mov	w2, #0x20                  	// #32
   52d24:	bl	c6a0 <__gmpz_mul_2exp@plt>
   52d28:	sub	x0, x29, #0x18
   52d2c:	mov	w2, #0x20                  	// #32
   52d30:	mov	x1, x22
   52d34:	bl	d200 <__gmpz_urandomb@plt>
   52d38:	sub	x0, x29, #0x28
   52d3c:	mov	w2, #0x20                  	// #32
   52d40:	mov	x1, x22
   52d44:	bl	d200 <__gmpz_urandomb@plt>
   52d48:	sub	x0, x29, #0x38
   52d4c:	sub	x1, x29, #0x38
   52d50:	sub	x2, x29, #0x18
   52d54:	bl	ceb0 <__gmpz_add@plt>
   52d58:	sub	x0, x29, #0x48
   52d5c:	sub	x1, x29, #0x48
   52d60:	sub	x2, x29, #0x28
   52d64:	bl	ceb0 <__gmpz_add@plt>
   52d68:	sub	x0, x29, #0x68
   52d6c:	sub	x1, x29, #0x38
   52d70:	sub	x2, x29, #0x38
   52d74:	bl	c460 <__gmpz_mul@plt>
   52d78:	sub	x0, x29, #0x78
   52d7c:	sub	x1, x29, #0x48
   52d80:	sub	x2, x29, #0x48
   52d84:	bl	c460 <__gmpz_mul@plt>
   52d88:	sub	x0, x29, #0x88
   52d8c:	sub	x1, x29, #0x68
   52d90:	sub	x2, x29, #0x78
   52d94:	bl	ceb0 <__gmpz_add@plt>
   52d98:	add	x24, x24, #0x20
   52d9c:	sub	x27, x27, #0x40
   52da0:	add	x23, x23, #0x40
   52da4:	add	x0, sp, #0x78
   52da8:	mov	x1, x23
   52dac:	add	x28, x24, #0x2
   52db0:	bl	c330 <mpfr_set_prec@plt>
   52db4:	add	x0, sp, #0x58
   52db8:	mov	x1, x28
   52dbc:	bl	c330 <mpfr_set_prec@plt>
   52dc0:	add	x0, sp, #0x78
   52dc4:	sub	x1, x29, #0x88
   52dc8:	mov	w2, wzr
   52dcc:	bl	c6e0 <mpfr_set_z@plt>
   52dd0:	add	x0, sp, #0x78
   52dd4:	add	x1, sp, #0x78
   52dd8:	mov	x2, x27
   52ddc:	mov	w3, wzr
   52de0:	bl	bff0 <mpfr_mul_2si@plt>
   52de4:	add	x0, sp, #0x58
   52de8:	add	x1, sp, #0x78
   52dec:	mov	w2, wzr
   52df0:	bl	c520 <mpfr_log@plt>
   52df4:	add	x0, sp, #0x58
   52df8:	add	x1, sp, #0x58
   52dfc:	mov	w2, wzr
   52e00:	bl	c1d0 <mpfr_neg@plt>
   52e04:	add	x0, sp, #0x58
   52e08:	add	x1, sp, #0x58
   52e0c:	mov	w2, #0x1                   	// #1
   52e10:	mov	w3, wzr
   52e14:	bl	bff0 <mpfr_mul_2si@plt>
   52e18:	add	x0, sp, #0x58
   52e1c:	add	x1, sp, #0x58
   52e20:	add	x2, sp, #0x78
   52e24:	mov	w3, wzr
   52e28:	bl	caf0 <mpfr_div@plt>
   52e2c:	add	x0, sp, #0x58
   52e30:	add	x1, sp, #0x58
   52e34:	mov	w2, wzr
   52e38:	bl	ce20 <mpfr_sqrt@plt>
   52e3c:	add	x0, sp, #0x38
   52e40:	mov	x1, x28
   52e44:	bl	c330 <mpfr_set_prec@plt>
   52e48:	add	x0, sp, #0x38
   52e4c:	add	x1, sp, #0x58
   52e50:	sub	x2, x29, #0x38
   52e54:	mov	w3, wzr
   52e58:	bl	c9a0 <mpfr_mul_z@plt>
   52e5c:	add	x0, sp, #0x38
   52e60:	add	x1, sp, #0x38
   52e64:	mov	x2, x28
   52e68:	mov	w3, wzr
   52e6c:	bl	cde0 <mpfr_div_2ui@plt>
   52e70:	cbz	w25, 52e84 <mpfr_grandom@@Base+0x480>
   52e74:	add	x0, sp, #0x38
   52e78:	add	x1, sp, #0x38
   52e7c:	mov	w2, wzr
   52e80:	bl	c1d0 <mpfr_neg@plt>
   52e84:	ldr	x8, [sp, #72]
   52e88:	cmp	x8, x20
   52e8c:	b.lt	52d08 <mpfr_grandom@@Base+0x304>  // b.tstop
   52e90:	ldr	x8, [sp, #56]
   52e94:	ldr	x9, [sp, #16]
   52e98:	ldr	x0, [sp, #80]
   52e9c:	mov	x2, x24
   52ea0:	sub	x10, x8, #0x1
   52ea4:	ldr	x9, [x9]
   52ea8:	add	x8, x8, #0x3e
   52eac:	cmp	x10, #0x0
   52eb0:	csel	x8, x8, x10, lt  // lt = tstop
   52eb4:	asr	x8, x8, #6
   52eb8:	add	x1, x8, #0x1
   52ebc:	add	x3, x9, x19
   52ec0:	bl	c830 <mpfr_round_p@plt>
   52ec4:	cbz	w0, 52d08 <mpfr_grandom@@Base+0x304>
   52ec8:	cbz	x21, 52f54 <mpfr_grandom@@Base+0x550>
   52ecc:	add	x0, sp, #0x18
   52ed0:	mov	x1, x28
   52ed4:	bl	c330 <mpfr_set_prec@plt>
   52ed8:	add	x0, sp, #0x18
   52edc:	add	x1, sp, #0x58
   52ee0:	sub	x2, x29, #0x48
   52ee4:	mov	w3, wzr
   52ee8:	bl	c9a0 <mpfr_mul_z@plt>
   52eec:	add	x0, sp, #0x18
   52ef0:	add	x1, sp, #0x18
   52ef4:	mov	x2, x28
   52ef8:	mov	w3, wzr
   52efc:	bl	cde0 <mpfr_div_2ui@plt>
   52f00:	cbz	w26, 52f14 <mpfr_grandom@@Base+0x510>
   52f04:	add	x0, sp, #0x18
   52f08:	add	x1, sp, #0x18
   52f0c:	mov	w2, wzr
   52f10:	bl	c1d0 <mpfr_neg@plt>
   52f14:	ldr	x8, [sp, #40]
   52f18:	cmp	x8, x20
   52f1c:	b.lt	52d08 <mpfr_grandom@@Base+0x304>  // b.tstop
   52f20:	ldr	x8, [sp, #24]
   52f24:	ldr	x9, [x21]
   52f28:	ldr	x0, [sp, #48]
   52f2c:	mov	x2, x24
   52f30:	sub	x10, x8, #0x1
   52f34:	add	x8, x8, #0x3e
   52f38:	cmp	x10, #0x0
   52f3c:	csel	x8, x8, x10, lt  // lt = tstop
   52f40:	asr	x8, x8, #6
   52f44:	add	x1, x8, #0x1
   52f48:	add	x3, x9, x19
   52f4c:	bl	c830 <mpfr_round_p@plt>
   52f50:	cbz	w0, 52d08 <mpfr_grandom@@Base+0x304>
   52f54:	ldr	w24, [sp, #12]
   52f58:	ldr	w3, [sp, #64]
   52f5c:	ldr	x0, [sp, #16]
   52f60:	add	x1, sp, #0x38
   52f64:	mov	w2, w24
   52f68:	bl	cb70 <mpfr_set4@plt>
   52f6c:	mov	w22, w0
   52f70:	mrs	x19, tpidr_el0
   52f74:	cbz	x21, 52ff0 <mpfr_grandom@@Base+0x5ec>
   52f78:	ldr	w3, [sp, #32]
   52f7c:	add	x1, sp, #0x18
   52f80:	mov	x0, x21
   52f84:	mov	w2, w24
   52f88:	bl	cb70 <mpfr_set4@plt>
   52f8c:	ldr	x8, [x21, #16]
   52f90:	mov	w23, w0
   52f94:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52f98:	ldr	x1, [x0, #2736]
   52f9c:	add	x0, x0, #0xab0
   52fa0:	blr	x1
   52fa4:	ldr	x9, [x19, x0]
   52fa8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52fac:	ldr	x1, [x0, #2768]
   52fb0:	add	x0, x0, #0xad0
   52fb4:	blr	x1
   52fb8:	cmp	x8, x9
   52fbc:	b.lt	53124 <mpfr_grandom@@Base+0x720>  // b.tstop
   52fc0:	ldr	x9, [x19, x0]
   52fc4:	cmp	x8, x9
   52fc8:	b.gt	53124 <mpfr_grandom@@Base+0x720>
   52fcc:	cbz	w23, 52ff4 <mpfr_grandom@@Base+0x5f0>
   52fd0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   52fd4:	ldr	x1, [x0, #2800]
   52fd8:	add	x0, x0, #0xaf0
   52fdc:	blr	x1
   52fe0:	ldr	w8, [x19, x0]
   52fe4:	orr	w8, w8, #0x8
   52fe8:	str	w8, [x19, x0]
   52fec:	b	52ff4 <mpfr_grandom@@Base+0x5f0>
   52ff0:	mov	w23, wzr
   52ff4:	ldr	x8, [sp, #16]
   52ff8:	ldr	x8, [x8, #16]
   52ffc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53000:	ldr	x1, [x0, #2736]
   53004:	add	x0, x0, #0xab0
   53008:	blr	x1
   5300c:	ldr	x9, [x19, x0]
   53010:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53014:	ldr	x1, [x0, #2768]
   53018:	add	x0, x0, #0xad0
   5301c:	blr	x1
   53020:	cmp	x8, x9
   53024:	b.lt	53108 <mpfr_grandom@@Base+0x704>  // b.tstop
   53028:	ldr	x9, [x19, x0]
   5302c:	cmp	x8, x9
   53030:	b.gt	53108 <mpfr_grandom@@Base+0x704>
   53034:	cbz	w22, 53054 <mpfr_grandom@@Base+0x650>
   53038:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5303c:	ldr	x1, [x0, #2800]
   53040:	add	x0, x0, #0xaf0
   53044:	blr	x1
   53048:	ldr	w8, [x19, x0]
   5304c:	orr	w8, w8, #0x8
   53050:	str	w8, [x19, x0]
   53054:	cbz	x21, 53060 <mpfr_grandom@@Base+0x65c>
   53058:	add	x0, sp, #0x18
   5305c:	bl	c4f0 <mpfr_clear@plt>
   53060:	add	x0, sp, #0x38
   53064:	bl	c4f0 <mpfr_clear@plt>
   53068:	add	x0, sp, #0x58
   5306c:	bl	c4f0 <mpfr_clear@plt>
   53070:	add	x0, sp, #0x78
   53074:	bl	c4f0 <mpfr_clear@plt>
   53078:	sub	x0, x29, #0x78
   5307c:	bl	c610 <mpfr_mpz_clear@plt>
   53080:	sub	x0, x29, #0x68
   53084:	bl	c610 <mpfr_mpz_clear@plt>
   53088:	sub	x0, x29, #0x88
   5308c:	bl	c610 <mpfr_mpz_clear@plt>
   53090:	sub	x0, x29, #0x58
   53094:	bl	c610 <mpfr_mpz_clear@plt>
   53098:	sub	x0, x29, #0x28
   5309c:	bl	c610 <mpfr_mpz_clear@plt>
   530a0:	sub	x0, x29, #0x18
   530a4:	bl	c610 <mpfr_mpz_clear@plt>
   530a8:	sub	x0, x29, #0x48
   530ac:	bl	c610 <mpfr_mpz_clear@plt>
   530b0:	sub	x0, x29, #0x38
   530b4:	bl	c610 <mpfr_mpz_clear@plt>
   530b8:	cmp	w22, #0x1
   530bc:	mov	w8, #0x1                   	// #1
   530c0:	cinc	w8, w8, lt  // lt = tstop
   530c4:	cmp	w22, #0x0
   530c8:	mov	w9, #0x4                   	// #4
   530cc:	mov	w10, #0x8                   	// #8
   530d0:	csel	w8, wzr, w8, eq  // eq = none
   530d4:	cmp	w23, #0x1
   530d8:	csel	w9, w10, w9, lt  // lt = tstop
   530dc:	cmp	w23, #0x0
   530e0:	ldp	x20, x19, [sp, #368]
   530e4:	ldp	x22, x21, [sp, #352]
   530e8:	ldp	x24, x23, [sp, #336]
   530ec:	ldp	x26, x25, [sp, #320]
   530f0:	ldp	x28, x27, [sp, #304]
   530f4:	ldp	x29, x30, [sp, #288]
   530f8:	csel	w9, wzr, w9, eq  // eq = none
   530fc:	orr	w0, w8, w9
   53100:	add	sp, sp, #0x180
   53104:	ret
   53108:	ldr	x0, [sp, #16]
   5310c:	mov	w1, w22
   53110:	mov	w2, w24
   53114:	bl	d020 <mpfr_check_range@plt>
   53118:	mov	w22, w0
   5311c:	cbnz	x21, 53058 <mpfr_grandom@@Base+0x654>
   53120:	b	53060 <mpfr_grandom@@Base+0x65c>
   53124:	mov	x0, x21
   53128:	mov	w1, w23
   5312c:	mov	w2, w24
   53130:	bl	d020 <mpfr_check_range@plt>
   53134:	mov	w23, w0
   53138:	b	52ff4 <mpfr_grandom@@Base+0x5f0>

000000000005313c <__gmpfr_fpif_export@@Base>:
   5313c:	stp	x29, x30, [sp, #-64]!
   53140:	str	x23, [sp, #16]
   53144:	stp	x22, x21, [sp, #32]
   53148:	stp	x20, x19, [sp, #48]
   5314c:	mov	x29, sp
   53150:	cbz	x0, 53264 <__gmpfr_fpif_export@@Base+0x128>
   53154:	ldr	x8, [x1]
   53158:	mov	x19, x0
   5315c:	mov	x20, x1
   53160:	cmp	x8, #0xf8
   53164:	cset	w9, gt
   53168:	asr	x8, x8, #3
   5316c:	add	x8, x8, w9, uxtw #3
   53170:	add	x21, x8, #0xb
   53174:	mov	x0, x21
   53178:	bl	d1f0 <mpfr_allocate_func@plt>
   5317c:	cbz	x0, 53264 <__gmpfr_fpif_export@@Base+0x128>
   53180:	str	x21, [x29, #24]
   53184:	ldr	x2, [x20]
   53188:	add	x1, x29, #0x18
   5318c:	bl	5327c <__gmpfr_fpif_export@@Base+0x140>
   53190:	ldr	x1, [x29, #24]
   53194:	mov	w2, #0x1                   	// #1
   53198:	mov	x3, x19
   5319c:	mov	x23, x0
   531a0:	cmp	x1, x21
   531a4:	csel	x22, x1, x21, hi  // hi = pmore
   531a8:	bl	cdb0 <fwrite@plt>
   531ac:	cmp	w0, #0x1
   531b0:	b.ne	53250 <__gmpfr_fpif_export@@Base+0x114>  // b.any
   531b4:	add	x1, x29, #0x18
   531b8:	mov	x0, x23
   531bc:	mov	x2, x20
   531c0:	str	x22, [x29, #24]
   531c4:	bl	5333c <__gmpfr_fpif_export@@Base+0x200>
   531c8:	cbz	x0, 53250 <__gmpfr_fpif_export@@Base+0x114>
   531cc:	ldr	x1, [x29, #24]
   531d0:	mov	w2, #0x1                   	// #1
   531d4:	mov	x3, x19
   531d8:	mov	x21, x0
   531dc:	cmp	x1, x22
   531e0:	csel	x22, x1, x22, hi  // hi = pmore
   531e4:	bl	cdb0 <fwrite@plt>
   531e8:	cmp	w0, #0x1
   531ec:	b.ne	53258 <__gmpfr_fpif_export@@Base+0x11c>  // b.any
   531f0:	ldr	x8, [x20, #16]
   531f4:	mov	x9, #0x4                   	// #4
   531f8:	movk	x9, #0x8000, lsl #48
   531fc:	cmp	x8, x9
   53200:	b.lt	5323c <__gmpfr_fpif_export@@Base+0x100>  // b.tstop
   53204:	add	x1, x29, #0x18
   53208:	mov	x0, x21
   5320c:	mov	x2, x20
   53210:	str	x22, [x29, #24]
   53214:	bl	534f0 <__gmpfr_fpif_export@@Base+0x3b4>
   53218:	ldr	x1, [x29, #24]
   5321c:	mov	w2, #0x1                   	// #1
   53220:	mov	x3, x19
   53224:	mov	x21, x0
   53228:	cmp	x1, x22
   5322c:	csel	x22, x1, x22, hi  // hi = pmore
   53230:	bl	cdb0 <fwrite@plt>
   53234:	cmp	w0, #0x1
   53238:	b.ne	53258 <__gmpfr_fpif_export@@Base+0x11c>  // b.any
   5323c:	mov	x0, x21
   53240:	mov	x1, x22
   53244:	bl	d120 <mpfr_free_func@plt>
   53248:	mov	w0, wzr
   5324c:	b	53268 <__gmpfr_fpif_export@@Base+0x12c>
   53250:	mov	x0, x23
   53254:	b	5325c <__gmpfr_fpif_export@@Base+0x120>
   53258:	mov	x0, x21
   5325c:	mov	x1, x22
   53260:	bl	d120 <mpfr_free_func@plt>
   53264:	mov	w0, #0xffffffff            	// #-1
   53268:	ldp	x20, x19, [sp, #48]
   5326c:	ldp	x22, x21, [sp, #32]
   53270:	ldr	x23, [sp, #16]
   53274:	ldp	x29, x30, [sp], #64
   53278:	ret
   5327c:	sub	sp, sp, #0x40
   53280:	stp	x22, x21, [sp, #32]
   53284:	stp	x20, x19, [sp, #48]
   53288:	mov	x20, x2
   5328c:	mov	x21, x1
   53290:	mov	x19, x0
   53294:	subs	x8, x2, #0xf9
   53298:	mov	x22, xzr
   5329c:	stp	x29, x30, [sp, #16]
   532a0:	add	x29, sp, #0x10
   532a4:	str	x2, [sp, #8]
   532a8:	b.lt	532b8 <__gmpfr_fpif_export@@Base+0x17c>  // b.tstop
   532ac:	lsr	x8, x8, #8
   532b0:	add	x22, x22, #0x1
   532b4:	cbnz	x8, 532ac <__gmpfr_fpif_export@@Base+0x170>
   532b8:	cbz	x19, 532cc <__gmpfr_fpif_export@@Base+0x190>
   532bc:	ldr	x8, [x21]
   532c0:	add	x9, x22, #0x1
   532c4:	cmp	x8, x9
   532c8:	b.cs	532e4 <__gmpfr_fpif_export@@Base+0x1a8>  // b.hs, b.nlast
   532cc:	ldr	x1, [x21]
   532d0:	add	x2, x22, #0x1
   532d4:	mov	x0, x19
   532d8:	bl	c660 <mpfr_reallocate_func@plt>
   532dc:	mov	x19, x0
   532e0:	cbz	x0, 53320 <__gmpfr_fpif_export@@Base+0x1e4>
   532e4:	add	x9, x22, #0x1
   532e8:	subs	x8, x20, #0xf9
   532ec:	str	x9, [x21]
   532f0:	b.lt	53314 <__gmpfr_fpif_export@@Base+0x1d8>  // b.tstop
   532f4:	sub	w9, w22, #0x1
   532f8:	mov	x0, x19
   532fc:	strb	w9, [x0], #1
   53300:	add	x1, sp, #0x8
   53304:	mov	x2, x22
   53308:	str	x8, [sp, #8]
   5330c:	bl	53a18 <__gmpfr_fpif_import@@Base+0x438>
   53310:	b	53324 <__gmpfr_fpif_export@@Base+0x1e8>
   53314:	add	w8, w20, #0x7
   53318:	strb	w8, [x19]
   5331c:	b	53324 <__gmpfr_fpif_export@@Base+0x1e8>
   53320:	str	xzr, [x21]
   53324:	mov	x0, x19
   53328:	ldp	x20, x19, [sp, #48]
   5332c:	ldp	x22, x21, [sp, #32]
   53330:	ldp	x29, x30, [sp, #16]
   53334:	add	sp, sp, #0x40
   53338:	ret
   5333c:	sub	sp, sp, #0x60
   53340:	stp	x29, x30, [sp, #32]
   53344:	stp	x22, x21, [sp, #64]
   53348:	stp	x20, x19, [sp, #80]
   5334c:	ldr	x8, [x2, #16]
   53350:	str	x23, [sp, #48]
   53354:	mov	x23, #0x4                   	// #4
   53358:	movk	x23, #0x8000, lsl #48
   5335c:	mov	x20, x2
   53360:	mov	x21, x1
   53364:	cmp	x8, x23
   53368:	mov	x19, x0
   5336c:	add	x29, sp, #0x20
   53370:	b.ge	53380 <__gmpfr_fpif_export@@Base+0x244>  // b.tcont
   53374:	mov	x22, xzr
   53378:	cbnz	x19, 533cc <__gmpfr_fpif_export@@Base+0x290>
   5337c:	b	53430 <__gmpfr_fpif_export@@Base+0x2f4>
   53380:	add	x9, x8, #0x2f
   53384:	cmp	x9, #0x5f
   53388:	b.cc	533e0 <__gmpfr_fpif_export@@Base+0x2a4>  // b.lo, b.ul, b.last
   5338c:	cmp	x8, #0x0
   53390:	cneg	x9, x8, mi  // mi = first
   53394:	sub	x9, x9, #0x2f
   53398:	mov	x10, #0xffffffffffffffff    	// #-1
   5339c:	lsl	x12, x9, #1
   533a0:	mov	x11, #0xffffffffffffffff    	// #-1
   533a4:	str	x9, [x29, #24]
   533a8:	lsr	x12, x12, #8
   533ac:	add	x11, x11, #0x1
   533b0:	add	x10, x10, #0x8
   533b4:	cbnz	x12, 533a8 <__gmpfr_fpif_export@@Base+0x26c>
   533b8:	cmp	x11, #0x10
   533bc:	add	x22, x11, #0x1
   533c0:	b.cs	533f0 <__gmpfr_fpif_export@@Base+0x2b4>  // b.hs, b.nlast
   533c4:	tbnz	x8, #63, 5341c <__gmpfr_fpif_export@@Base+0x2e0>
   533c8:	cbz	x19, 53430 <__gmpfr_fpif_export@@Base+0x2f4>
   533cc:	ldr	x8, [x21]
   533d0:	add	x9, x22, #0x1
   533d4:	cmp	x8, x9
   533d8:	b.cc	53430 <__gmpfr_fpif_export@@Base+0x2f4>  // b.lo, b.ul, b.last
   533dc:	b	53448 <__gmpfr_fpif_export@@Base+0x30c>
   533e0:	mov	x22, xzr
   533e4:	str	x9, [x29, #24]
   533e8:	cbnz	x19, 533cc <__gmpfr_fpif_export@@Base+0x290>
   533ec:	b	53430 <__gmpfr_fpif_export@@Base+0x2f4>
   533f0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   533f4:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   533f8:	add	x0, x0, #0x6f8
   533fc:	add	x2, x2, #0x6ff
   53400:	mov	w1, #0x139                 	// #313
   53404:	stur	x8, [x29, #-8]
   53408:	stp	x9, x10, [sp, #8]
   5340c:	bl	d030 <mpfr_assert_fail@plt>
   53410:	ldp	x9, x10, [sp, #8]
   53414:	ldur	x8, [x29, #-8]
   53418:	tbz	x8, #63, 533c8 <__gmpfr_fpif_export@@Base+0x28c>
   5341c:	mov	w8, #0x1                   	// #1
   53420:	lsl	x8, x8, x10
   53424:	orr	x8, x8, x9
   53428:	str	x8, [x29, #24]
   5342c:	cbnz	x19, 533cc <__gmpfr_fpif_export@@Base+0x290>
   53430:	ldr	x1, [x21]
   53434:	add	x2, x22, #0x1
   53438:	mov	x0, x19
   5343c:	bl	c660 <mpfr_reallocate_func@plt>
   53440:	mov	x19, x0
   53444:	cbz	x0, 5349c <__gmpfr_fpif_export@@Base+0x360>
   53448:	add	x8, x22, #0x1
   5344c:	str	x8, [x21]
   53450:	ldr	x8, [x20, #16]
   53454:	cmp	x8, x23
   53458:	b.ge	5347c <__gmpfr_fpif_export@@Base+0x340>  // b.tcont
   5345c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   53460:	cmp	x8, x9
   53464:	b.eq	534b0 <__gmpfr_fpif_export@@Base+0x374>  // b.none
   53468:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   5346c:	cmp	x8, x9
   53470:	b.ne	534b8 <__gmpfr_fpif_export@@Base+0x37c>  // b.any
   53474:	mov	w8, #0x77                  	// #119
   53478:	b	534bc <__gmpfr_fpif_export@@Base+0x380>
   5347c:	cbz	x22, 534a4 <__gmpfr_fpif_export@@Base+0x368>
   53480:	add	w8, w22, #0x5e
   53484:	mov	x0, x19
   53488:	strb	w8, [x0], #1
   5348c:	add	x1, x29, #0x18
   53490:	mov	x2, x22
   53494:	bl	53a18 <__gmpfr_fpif_import@@Base+0x438>
   53498:	b	534c0 <__gmpfr_fpif_export@@Base+0x384>
   5349c:	str	xzr, [x21]
   534a0:	b	534d4 <__gmpfr_fpif_export@@Base+0x398>
   534a4:	ldr	x8, [x29, #24]
   534a8:	strb	w8, [x19]
   534ac:	b	534c0 <__gmpfr_fpif_export@@Base+0x384>
   534b0:	mov	w8, #0x78                  	// #120
   534b4:	b	534bc <__gmpfr_fpif_export@@Base+0x380>
   534b8:	mov	w8, #0x79                  	// #121
   534bc:	strb	w8, [x19]
   534c0:	ldr	w8, [x20, #8]
   534c4:	tbz	w8, #31, 534d4 <__gmpfr_fpif_export@@Base+0x398>
   534c8:	ldrb	w8, [x19]
   534cc:	orr	w8, w8, #0x80
   534d0:	strb	w8, [x19]
   534d4:	mov	x0, x19
   534d8:	ldp	x20, x19, [sp, #80]
   534dc:	ldp	x22, x21, [sp, #64]
   534e0:	ldr	x23, [sp, #48]
   534e4:	ldp	x29, x30, [sp, #32]
   534e8:	add	sp, sp, #0x60
   534ec:	ret
   534f0:	stp	x29, x30, [sp, #-80]!
   534f4:	stp	x24, x23, [sp, #32]
   534f8:	stp	x22, x21, [sp, #48]
   534fc:	stp	x20, x19, [sp, #64]
   53500:	ldr	x8, [x2]
   53504:	mov	x20, x2
   53508:	mov	x21, x1
   5350c:	mov	x19, x0
   53510:	add	x8, x8, #0x7
   53514:	asr	x22, x8, #3
   53518:	str	x25, [sp, #16]
   5351c:	mov	x29, sp
   53520:	cbz	x0, 53530 <__gmpfr_fpif_export@@Base+0x3f4>
   53524:	ldr	x8, [x21]
   53528:	cmp	x8, x22
   5352c:	b.cs	53548 <__gmpfr_fpif_export@@Base+0x40c>  // b.hs, b.nlast
   53530:	ldr	x1, [x21]
   53534:	mov	x0, x19
   53538:	mov	x2, x22
   5353c:	bl	c660 <mpfr_reallocate_func@plt>
   53540:	mov	x19, x0
   53544:	cbz	x0, 535c0 <__gmpfr_fpif_export@@Base+0x484>
   53548:	adrp	x8, 72000 <__gmpfr_l2b@@Base+0x2f0>
   5354c:	ldr	x8, [x8, #4032]
   53550:	str	x22, [x21]
   53554:	ldr	x1, [x20, #24]
   53558:	mov	x0, x19
   5355c:	ldr	w8, [x8]
   53560:	sbfx	x23, x8, #3, #29
   53564:	udiv	x8, x22, x23
   53568:	add	x9, x22, x23
   5356c:	msub	x21, x8, x23, x22
   53570:	sub	x8, x9, #0x1
   53574:	mov	x2, x21
   53578:	udiv	x22, x8, x23
   5357c:	bl	53a2c <__gmpfr_fpif_import@@Base+0x44c>
   53580:	cmp	x21, #0x0
   53584:	cset	w24, ne  // ne = any
   53588:	cmp	x22, x24
   5358c:	b.ls	535c4 <__gmpfr_fpif_export@@Base+0x488>  // b.plast
   53590:	lsl	x25, x24, #3
   53594:	ldr	x8, [x20, #24]
   53598:	add	x0, x19, x21
   5359c:	mov	w2, #0x8                   	// #8
   535a0:	add	x1, x8, x25
   535a4:	bl	53a18 <__gmpfr_fpif_import@@Base+0x438>
   535a8:	add	x24, x24, #0x1
   535ac:	add	x21, x21, x23
   535b0:	cmp	x24, x22
   535b4:	add	x25, x25, #0x8
   535b8:	b.cc	53594 <__gmpfr_fpif_export@@Base+0x458>  // b.lo, b.ul, b.last
   535bc:	b	535c4 <__gmpfr_fpif_export@@Base+0x488>
   535c0:	str	xzr, [x21]
   535c4:	mov	x0, x19
   535c8:	ldp	x20, x19, [sp, #64]
   535cc:	ldp	x22, x21, [sp, #48]
   535d0:	ldp	x24, x23, [sp, #32]
   535d4:	ldr	x25, [sp, #16]
   535d8:	ldp	x29, x30, [sp], #80
   535dc:	ret

00000000000535e0 <__gmpfr_fpif_import@@Base>:
   535e0:	sub	sp, sp, #0x40
   535e4:	stp	x20, x19, [sp, #48]
   535e8:	mov	x19, x0
   535ec:	mov	x0, x1
   535f0:	stp	x29, x30, [sp, #16]
   535f4:	stp	x22, x21, [sp, #32]
   535f8:	add	x29, sp, #0x10
   535fc:	mov	x20, x1
   53600:	bl	536e0 <__gmpfr_fpif_import@@Base+0x100>
   53604:	mov	x21, x0
   53608:	mov	w0, #0xffffffff            	// #-1
   5360c:	cbz	x21, 53660 <__gmpfr_fpif_import@@Base+0x80>
   53610:	mov	x22, #0xfffffffffffffeff    	// #-257
   53614:	movk	x22, #0x7fff, lsl #48
   53618:	cmp	x21, x22
   5361c:	b.gt	53660 <__gmpfr_fpif_import@@Base+0x80>
   53620:	mov	x0, x19
   53624:	mov	x1, x21
   53628:	bl	c330 <mpfr_set_prec@plt>
   5362c:	mov	x0, x19
   53630:	mov	x1, x20
   53634:	bl	537a8 <__gmpfr_fpif_import@@Base+0x1c8>
   53638:	cbz	w0, 5364c <__gmpfr_fpif_import@@Base+0x6c>
   5363c:	mov	x0, x19
   53640:	bl	bfb0 <mpfr_set_nan@plt>
   53644:	mov	w0, #0xffffffff            	// #-1
   53648:	b	53660 <__gmpfr_fpif_import@@Base+0x80>
   5364c:	ldr	x8, [x19, #16]
   53650:	add	x9, x22, #0x105
   53654:	cmp	x8, x9
   53658:	b.ge	53674 <__gmpfr_fpif_import@@Base+0x94>  // b.tcont
   5365c:	mov	w0, wzr
   53660:	ldp	x20, x19, [sp, #48]
   53664:	ldp	x22, x21, [sp, #32]
   53668:	ldp	x29, x30, [sp, #16]
   5366c:	add	sp, sp, #0x40
   53670:	ret
   53674:	add	x8, x21, #0x7
   53678:	asr	x22, x8, #3
   5367c:	mov	x0, x22
   53680:	str	x22, [sp, #8]
   53684:	bl	d1f0 <mpfr_allocate_func@plt>
   53688:	cbz	x0, 5363c <__gmpfr_fpif_import@@Base+0x5c>
   5368c:	mov	w2, #0x1                   	// #1
   53690:	mov	x1, x22
   53694:	mov	x3, x20
   53698:	mov	x21, x0
   5369c:	bl	cb30 <fread@plt>
   536a0:	cmp	w0, #0x1
   536a4:	b.ne	536d0 <__gmpfr_fpif_import@@Base+0xf0>  // b.any
   536a8:	add	x2, sp, #0x8
   536ac:	mov	x0, x19
   536b0:	mov	x1, x21
   536b4:	bl	5394c <__gmpfr_fpif_import@@Base+0x36c>
   536b8:	ldr	x1, [sp, #8]
   536bc:	mov	w20, w0
   536c0:	mov	x0, x21
   536c4:	bl	d120 <mpfr_free_func@plt>
   536c8:	cbnz	w20, 5363c <__gmpfr_fpif_import@@Base+0x5c>
   536cc:	b	5365c <__gmpfr_fpif_import@@Base+0x7c>
   536d0:	mov	x0, x21
   536d4:	mov	x1, x22
   536d8:	bl	d120 <mpfr_free_func@plt>
   536dc:	b	5363c <__gmpfr_fpif_import@@Base+0x5c>
   536e0:	sub	sp, sp, #0x40
   536e4:	stp	x29, x30, [sp, #16]
   536e8:	str	x21, [sp, #32]
   536ec:	stp	x20, x19, [sp, #48]
   536f0:	add	x29, sp, #0x10
   536f4:	cbz	x0, 53768 <__gmpfr_fpif_import@@Base+0x188>
   536f8:	mov	x19, x0
   536fc:	add	x0, sp, #0x8
   53700:	mov	w1, #0x1                   	// #1
   53704:	mov	w2, #0x1                   	// #1
   53708:	mov	x3, x19
   5370c:	bl	cb30 <fread@plt>
   53710:	cmp	x0, #0x1
   53714:	b.ne	53764 <__gmpfr_fpif_import@@Base+0x184>  // b.any
   53718:	ldrb	w20, [sp, #8]
   5371c:	cmp	x20, #0x8
   53720:	b.cc	5372c <__gmpfr_fpif_import@@Base+0x14c>  // b.lo, b.ul, b.last
   53724:	sub	x0, x20, #0x7
   53728:	b	53768 <__gmpfr_fpif_import@@Base+0x188>
   5372c:	add	x1, x20, #0x1
   53730:	add	x0, sp, #0x8
   53734:	mov	w2, #0x1                   	// #1
   53738:	mov	x3, x19
   5373c:	add	x21, sp, #0x8
   53740:	bl	cb30 <fread@plt>
   53744:	cmp	x0, #0x1
   53748:	b.ne	53764 <__gmpfr_fpif_import@@Base+0x184>  // b.any
   5374c:	add	x2, x20, #0x1
   53750:	cmp	x2, #0x9
   53754:	b.cc	5377c <__gmpfr_fpif_import@@Base+0x19c>  // b.lo, b.ul, b.last
   53758:	ldrb	w8, [x21, x20]
   5375c:	sub	x20, x20, #0x1
   53760:	cbz	w8, 5374c <__gmpfr_fpif_import@@Base+0x16c>
   53764:	mov	x0, xzr
   53768:	ldp	x20, x19, [sp, #48]
   5376c:	ldr	x21, [sp, #32]
   53770:	ldp	x29, x30, [sp, #16]
   53774:	add	sp, sp, #0x40
   53778:	ret
   5377c:	cmp	x20, #0x7
   53780:	b.ne	5378c <__gmpfr_fpif_import@@Base+0x1ac>  // b.any
   53784:	ldrsb	w8, [sp, #15]
   53788:	tbnz	w8, #31, 53764 <__gmpfr_fpif_import@@Base+0x184>
   5378c:	add	x0, x29, #0x18
   53790:	add	x1, sp, #0x8
   53794:	str	xzr, [x29, #24]
   53798:	bl	53a48 <__gmpfr_fpif_import@@Base+0x468>
   5379c:	ldr	x8, [x29, #24]
   537a0:	add	x0, x8, #0xf9
   537a4:	b	53768 <__gmpfr_fpif_import@@Base+0x188>
   537a8:	sub	sp, sp, #0x40
   537ac:	stp	x29, x30, [sp, #16]
   537b0:	stp	x22, x21, [sp, #32]
   537b4:	stp	x20, x19, [sp, #48]
   537b8:	add	x29, sp, #0x10
   537bc:	cbz	x1, 53930 <__gmpfr_fpif_import@@Base+0x350>
   537c0:	mov	x21, x1
   537c4:	mov	x19, x0
   537c8:	mov	x0, sp
   537cc:	mov	w1, #0x1                   	// #1
   537d0:	mov	w2, #0x1                   	// #1
   537d4:	mov	x3, x21
   537d8:	mov	w20, #0x1                   	// #1
   537dc:	bl	cb30 <fread@plt>
   537e0:	cmp	x0, #0x1
   537e4:	b.ne	53934 <__gmpfr_fpif_import@@Base+0x354>  // b.any
   537e8:	ldrb	w8, [sp]
   537ec:	mov	w10, #0xffffffff            	// #-1
   537f0:	sxtb	w9, w8
   537f4:	and	x8, x8, #0x7f
   537f8:	sub	w11, w8, #0x5f
   537fc:	cmp	w9, #0x0
   53800:	and	w11, w11, #0xff
   53804:	cneg	w10, w10, ge  // ge = tcont
   53808:	cmp	w11, #0x17
   5380c:	str	w10, [x19, #8]
   53810:	b.hi	538dc <__gmpfr_fpif_import@@Base+0x2fc>  // b.pmore
   53814:	sub	x22, x8, #0x5e
   53818:	cmp	x22, #0x8
   5381c:	b.hi	53930 <__gmpfr_fpif_import@@Base+0x350>  // b.pmore
   53820:	mov	x0, sp
   53824:	mov	w2, #0x1                   	// #1
   53828:	mov	x1, x22
   5382c:	mov	x3, x21
   53830:	mov	w20, #0x1                   	// #1
   53834:	bl	cb30 <fread@plt>
   53838:	cmp	x0, #0x1
   5383c:	b.ne	53934 <__gmpfr_fpif_import@@Base+0x354>  // b.any
   53840:	add	x0, sp, #0x8
   53844:	mov	x1, sp
   53848:	mov	x2, x22
   5384c:	str	xzr, [sp, #8]
   53850:	bl	53a48 <__gmpfr_fpif_import@@Base+0x468>
   53854:	ldr	x9, [sp, #8]
   53858:	lsl	x8, x22, #3
   5385c:	sub	x8, x8, #0x1
   53860:	mov	w20, #0x1                   	// #1
   53864:	lsl	x8, x20, x8
   53868:	and	x8, x9, x8
   5386c:	eor	x10, x8, x9
   53870:	add	x9, x10, #0x2f
   53874:	lsr	x11, x9, #62
   53878:	str	x9, [sp, #8]
   5387c:	cbnz	x11, 53934 <__gmpfr_fpif_import@@Base+0x354>
   53880:	mov	x11, #0xffffffffffffffd1    	// #-47
   53884:	sub	x10, x11, x10
   53888:	cmp	x8, #0x0
   5388c:	csel	x8, x9, x10, eq  // eq = none
   53890:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53894:	ldr	x1, [x0, #2736]
   53898:	add	x0, x0, #0xab0
   5389c:	blr	x1
   538a0:	mrs	x9, tpidr_el0
   538a4:	ldr	x10, [x9, x0]
   538a8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   538ac:	ldr	x1, [x0, #2768]
   538b0:	add	x0, x0, #0xad0
   538b4:	blr	x1
   538b8:	cmp	x8, x10
   538bc:	mov	w20, #0x1                   	// #1
   538c0:	b.lt	53934 <__gmpfr_fpif_import@@Base+0x354>  // b.tstop
   538c4:	ldr	x9, [x9, x0]
   538c8:	cmp	x8, x9
   538cc:	b.gt	53934 <__gmpfr_fpif_import@@Base+0x354>
   538d0:	mov	w20, wzr
   538d4:	str	x8, [x19, #16]
   538d8:	b	53934 <__gmpfr_fpif_import@@Base+0x354>
   538dc:	and	w9, w9, #0x7f
   538e0:	cmp	w9, #0x79
   538e4:	b.eq	53904 <__gmpfr_fpif_import@@Base+0x324>  // b.none
   538e8:	cmp	w9, #0x78
   538ec:	b.eq	53914 <__gmpfr_fpif_import@@Base+0x334>  // b.none
   538f0:	cmp	w9, #0x77
   538f4:	b.ne	53920 <__gmpfr_fpif_import@@Base+0x340>  // b.any
   538f8:	mov	w20, wzr
   538fc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   53900:	b	538d4 <__gmpfr_fpif_import@@Base+0x2f4>
   53904:	mov	x8, #0x2                   	// #2
   53908:	mov	w20, wzr
   5390c:	movk	x8, #0x8000, lsl #48
   53910:	b	538d4 <__gmpfr_fpif_import@@Base+0x2f4>
   53914:	mov	w20, wzr
   53918:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5391c:	b	538d4 <__gmpfr_fpif_import@@Base+0x2f4>
   53920:	cmp	w8, #0x5e
   53924:	b.hi	53930 <__gmpfr_fpif_import@@Base+0x350>  // b.pmore
   53928:	sub	x8, x8, #0x2f
   5392c:	b	53890 <__gmpfr_fpif_import@@Base+0x2b0>
   53930:	mov	w20, #0x1                   	// #1
   53934:	mov	w0, w20
   53938:	ldp	x20, x19, [sp, #48]
   5393c:	ldp	x22, x21, [sp, #32]
   53940:	ldp	x29, x30, [sp, #16]
   53944:	add	sp, sp, #0x40
   53948:	ret
   5394c:	stp	x29, x30, [sp, #-64]!
   53950:	stp	x24, x23, [sp, #16]
   53954:	stp	x22, x21, [sp, #32]
   53958:	stp	x20, x19, [sp, #48]
   5395c:	mov	x29, sp
   53960:	cbz	x1, 53980 <__gmpfr_fpif_import@@Base+0x3a0>
   53964:	ldr	x8, [x0]
   53968:	ldr	x9, [x2]
   5396c:	mov	x20, x0
   53970:	add	x8, x8, #0x7
   53974:	asr	x22, x8, #3
   53978:	cmp	x9, x22
   5397c:	b.cs	5398c <__gmpfr_fpif_import@@Base+0x3ac>  // b.hs, b.nlast
   53980:	str	xzr, [x2]
   53984:	mov	w0, #0x1                   	// #1
   53988:	b	53a04 <__gmpfr_fpif_import@@Base+0x424>
   5398c:	adrp	x8, 72000 <__gmpfr_l2b@@Base+0x2f0>
   53990:	ldr	x8, [x8, #4032]
   53994:	mov	x19, x1
   53998:	str	x22, [x2]
   5399c:	ldr	w8, [x8]
   539a0:	sbfx	x23, x8, #3, #29
   539a4:	udiv	x8, x22, x23
   539a8:	msub	x21, x8, x23, x22
   539ac:	cbz	x21, 539c8 <__gmpfr_fpif_import@@Base+0x3e8>
   539b0:	ldr	x8, [x20, #24]
   539b4:	mov	x1, x19
   539b8:	mov	x2, x21
   539bc:	str	xzr, [x8]
   539c0:	ldr	x0, [x20, #24]
   539c4:	bl	53a5c <__gmpfr_fpif_import@@Base+0x47c>
   539c8:	cmp	x21, x22
   539cc:	b.cs	53a00 <__gmpfr_fpif_import@@Base+0x420>  // b.hs, b.nlast
   539d0:	cmp	x21, #0x0
   539d4:	cset	w8, ne  // ne = any
   539d8:	lsl	x24, x8, #3
   539dc:	ldr	x8, [x20, #24]
   539e0:	add	x1, x19, x21
   539e4:	mov	w2, #0x8                   	// #8
   539e8:	add	x0, x8, x24
   539ec:	bl	53a48 <__gmpfr_fpif_import@@Base+0x468>
   539f0:	add	x21, x21, x23
   539f4:	cmp	x21, x22
   539f8:	add	x24, x24, #0x8
   539fc:	b.cc	539dc <__gmpfr_fpif_import@@Base+0x3fc>  // b.lo, b.ul, b.last
   53a00:	mov	w0, wzr
   53a04:	ldp	x20, x19, [sp, #48]
   53a08:	ldp	x22, x21, [sp, #32]
   53a0c:	ldp	x24, x23, [sp, #16]
   53a10:	ldp	x29, x30, [sp], #64
   53a14:	ret
   53a18:	stp	x29, x30, [sp, #-16]!
   53a1c:	mov	x29, sp
   53a20:	bl	be50 <memcpy@plt>
   53a24:	ldp	x29, x30, [sp], #16
   53a28:	ret
   53a2c:	cbz	x2, 53a44 <__gmpfr_fpif_import@@Base+0x464>
   53a30:	add	x8, x1, #0x7
   53a34:	ldrb	w9, [x8], #-1
   53a38:	subs	x2, x2, #0x1
   53a3c:	strb	w9, [x0], #1
   53a40:	b.ne	53a34 <__gmpfr_fpif_import@@Base+0x454>  // b.any
   53a44:	ret
   53a48:	stp	x29, x30, [sp, #-16]!
   53a4c:	mov	x29, sp
   53a50:	bl	be50 <memcpy@plt>
   53a54:	ldp	x29, x30, [sp], #16
   53a58:	ret
   53a5c:	cbz	x2, 53a74 <__gmpfr_fpif_import@@Base+0x494>
   53a60:	add	x8, x0, #0x7
   53a64:	ldrb	w9, [x1], #1
   53a68:	subs	x2, x2, #0x1
   53a6c:	strb	w9, [x8], #-1
   53a70:	b.ne	53a64 <__gmpfr_fpif_import@@Base+0x484>  // b.any
   53a74:	ret

0000000000053a78 <mpfr_round_nearest_away_begin@@Base>:
   53a78:	sub	sp, sp, #0x80
   53a7c:	stp	x29, x30, [sp, #32]
   53a80:	str	x27, [sp, #48]
   53a84:	stp	x26, x25, [sp, #64]
   53a88:	stp	x24, x23, [sp, #80]
   53a8c:	stp	x22, x21, [sp, #96]
   53a90:	stp	x20, x19, [sp, #112]
   53a94:	add	x29, sp, #0x20
   53a98:	mov	x19, x0
   53a9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53aa0:	ldr	x1, [x0, #2736]
   53aa4:	add	x0, x0, #0xab0
   53aa8:	blr	x1
   53aac:	mrs	x25, tpidr_el0
   53ab0:	ldr	x8, [x25, x0]
   53ab4:	mov	x27, #0xc000000000000001    	// #-4611686018427387903
   53ab8:	cmp	x8, x27
   53abc:	b.le	53bc4 <mpfr_round_nearest_away_begin@@Base+0x14c>
   53ac0:	ldr	x26, [x19]
   53ac4:	mov	x21, #0xfffffffffffffeff    	// #-257
   53ac8:	movk	x21, #0x7fff, lsl #48
   53acc:	add	x20, x26, #0x1
   53ad0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53ad4:	ldr	x1, [x0, #2800]
   53ad8:	add	x0, x0, #0xaf0
   53adc:	blr	x1
   53ae0:	ldr	w22, [x25, x0]
   53ae4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53ae8:	ldr	x1, [x0, #2736]
   53aec:	add	x0, x0, #0xab0
   53af0:	blr	x1
   53af4:	ldr	x23, [x25, x0]
   53af8:	mov	x8, x0
   53afc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53b00:	ldr	x1, [x0, #2768]
   53b04:	add	x0, x0, #0xad0
   53b08:	blr	x1
   53b0c:	ldr	x24, [x25, x0]
   53b10:	str	x27, [x25, x8]
   53b14:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   53b18:	cmp	x26, x21
   53b1c:	str	x8, [x25, x0]
   53b20:	b.ge	53be0 <mpfr_round_nearest_away_begin@@Base+0x168>  // b.tcont
   53b24:	add	x8, x26, #0x3f
   53b28:	cmp	x26, #0x0
   53b2c:	csel	x8, x8, x26, lt  // lt = tstop
   53b30:	asr	x8, x8, #6
   53b34:	add	x25, x8, #0x1
   53b38:	lsl	x8, x25, #3
   53b3c:	add	x0, x8, #0x40
   53b40:	bl	d1f0 <mpfr_allocate_func@plt>
   53b44:	str	x25, [x0]
   53b48:	ldr	x8, [x19, #24]
   53b4c:	mov	w9, #0x1                   	// #1
   53b50:	add	x10, x0, #0x40
   53b54:	add	x11, x21, #0x103
   53b58:	str	x8, [x0, #8]
   53b5c:	ldr	x8, [x19, #16]
   53b60:	mov	x1, x19
   53b64:	mov	w2, wzr
   53b68:	str	x8, [x0, #16]
   53b6c:	ldr	w8, [x19, #8]
   53b70:	str	w8, [x0, #24]
   53b74:	ldr	x8, [x19]
   53b78:	str	w22, [x0, #40]
   53b7c:	stp	x23, x24, [x0, #48]
   53b80:	str	x8, [x0, #32]
   53b84:	str	x20, [sp]
   53b88:	str	w9, [sp, #8]
   53b8c:	stp	x11, x10, [sp, #16]
   53b90:	ldr	w3, [x19, #8]
   53b94:	mov	x0, sp
   53b98:	bl	cb70 <mpfr_set4@plt>
   53b9c:	ldp	q0, q1, [sp]
   53ba0:	stp	q0, q1, [x19]
   53ba4:	ldp	x20, x19, [sp, #112]
   53ba8:	ldp	x22, x21, [sp, #96]
   53bac:	ldp	x24, x23, [sp, #80]
   53bb0:	ldp	x26, x25, [sp, #64]
   53bb4:	ldr	x27, [sp, #48]
   53bb8:	ldp	x29, x30, [sp, #32]
   53bbc:	add	sp, sp, #0x80
   53bc0:	ret
   53bc4:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   53bc8:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   53bcc:	add	x0, x0, #0x713
   53bd0:	add	x2, x2, #0x71b
   53bd4:	mov	w1, #0x4d                  	// #77
   53bd8:	bl	d030 <mpfr_assert_fail@plt>
   53bdc:	b	53ac0 <mpfr_round_nearest_away_begin@@Base+0x48>
   53be0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   53be4:	adrp	x2, 60000 <mpfr_bases@@Base+0x408>
   53be8:	add	x0, x0, #0x713
   53bec:	add	x2, x2, #0x5f9
   53bf0:	mov	w1, #0x54                  	// #84
   53bf4:	bl	d030 <mpfr_assert_fail@plt>
   53bf8:	b	53b24 <mpfr_round_nearest_away_begin@@Base+0xac>

0000000000053bfc <mpfr_round_nearest_away_end@@Base>:
   53bfc:	sub	sp, sp, #0x80
   53c00:	stp	x29, x30, [sp, #32]
   53c04:	str	x27, [sp, #48]
   53c08:	stp	x26, x25, [sp, #64]
   53c0c:	stp	x24, x23, [sp, #80]
   53c10:	stp	x22, x21, [sp, #96]
   53c14:	stp	x20, x19, [sp, #112]
   53c18:	ldp	q1, q0, [x0]
   53c1c:	ldr	x20, [x0, #24]
   53c20:	mov	x23, #0x2                   	// #2
   53c24:	movk	x23, #0x8000, lsl #48
   53c28:	stp	q1, q0, [sp]
   53c2c:	ldur	x8, [x20, #-32]
   53c30:	add	x10, x23, #0x2
   53c34:	mov	x19, x0
   53c38:	mov	w21, w1
   53c3c:	str	x8, [x0]
   53c40:	ldur	w9, [x20, #-40]
   53c44:	add	x29, sp, #0x20
   53c48:	str	w9, [x0, #8]
   53c4c:	ldur	x9, [x20, #-48]
   53c50:	str	x9, [x0, #16]
   53c54:	ldur	x9, [x20, #-56]
   53c58:	str	x9, [x0, #24]
   53c5c:	ldr	x22, [x20, #-64]!
   53c60:	ldr	x9, [sp, #16]
   53c64:	ldr	w27, [x20, #40]
   53c68:	ldp	x26, x25, [x20, #48]
   53c6c:	cmp	x9, x10
   53c70:	b.lt	53ca4 <mpfr_round_nearest_away_end@@Base+0xa8>  // b.tstop
   53c74:	ldr	x9, [sp, #24]
   53c78:	mvn	w8, w8
   53c7c:	ldr	x9, [x9]
   53c80:	lsr	x8, x9, x8
   53c84:	tbz	w8, #0, 53ca4 <mpfr_round_nearest_away_end@@Base+0xa8>
   53c88:	cbz	w21, 53cbc <mpfr_round_nearest_away_end@@Base+0xc0>
   53c8c:	ldr	w3, [sp, #8]
   53c90:	cmp	w21, #0x0
   53c94:	mov	w8, #0x2                   	// #2
   53c98:	cinc	w2, w8, gt
   53c9c:	mov	x1, sp
   53ca0:	b	53cc8 <mpfr_round_nearest_away_end@@Base+0xcc>
   53ca4:	ldr	w3, [sp, #8]
   53ca8:	mov	x1, sp
   53cac:	mov	x0, x19
   53cb0:	mov	w2, wzr
   53cb4:	bl	cb70 <mpfr_set4@plt>
   53cb8:	b	53cd4 <mpfr_round_nearest_away_end@@Base+0xd8>
   53cbc:	ldr	w3, [sp, #8]
   53cc0:	mov	x1, sp
   53cc4:	mov	w2, #0x4                   	// #4
   53cc8:	mov	x0, x19
   53ccc:	bl	cb70 <mpfr_set4@plt>
   53cd0:	mov	w21, w0
   53cd4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53cd8:	ldr	x1, [x0, #2800]
   53cdc:	add	x0, x0, #0xaf0
   53ce0:	blr	x1
   53ce4:	mrs	x24, tpidr_el0
   53ce8:	ldr	w8, [x24, x0]
   53cec:	orr	w8, w8, w27
   53cf0:	str	w8, [x24, x0]
   53cf4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53cf8:	ldr	x1, [x0, #2736]
   53cfc:	add	x0, x0, #0xab0
   53d00:	blr	x1
   53d04:	str	x26, [x24, x0]
   53d08:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53d0c:	ldr	x1, [x0, #2768]
   53d10:	add	x0, x0, #0xad0
   53d14:	blr	x1
   53d18:	str	x25, [x24, x0]
   53d1c:	cbnz	w21, 53d84 <mpfr_round_nearest_away_end@@Base+0x188>
   53d20:	ldr	x8, [x19, #16]
   53d24:	mov	x9, #0x2                   	// #2
   53d28:	movk	x9, #0x8000, lsl #48
   53d2c:	cmp	x8, x9
   53d30:	b.gt	53d48 <mpfr_round_nearest_away_end@@Base+0x14c>
   53d34:	cmp	x8, x23
   53d38:	b.ne	53d40 <mpfr_round_nearest_away_end@@Base+0x144>  // b.any
   53d3c:	bl	c0f0 <mpfr_set_erangeflag@plt>
   53d40:	mov	x8, #0xffffffffffffffff    	// #-1
   53d44:	b	53d58 <mpfr_round_nearest_away_end@@Base+0x15c>
   53d48:	ldr	w8, [x19, #8]
   53d4c:	cmp	w8, #0x1
   53d50:	mov	x8, #0xffffffffffffffff    	// #-1
   53d54:	cneg	x8, x8, ge  // ge = tcont
   53d58:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53d5c:	ldr	x1, [x0, #2736]
   53d60:	add	x0, x0, #0xab0
   53d64:	blr	x1
   53d68:	ldr	x9, [x24, x0]
   53d6c:	mov	x0, x19
   53d70:	mov	x1, x8
   53d74:	sub	x2, x9, #0x2
   53d78:	bl	c890 <mpfr_cmp_si_2exp@plt>
   53d7c:	cbz	w0, 53e14 <mpfr_round_nearest_away_end@@Base+0x218>
   53d80:	mov	w21, wzr
   53d84:	lsl	x8, x22, #3
   53d88:	add	x1, x8, #0x40
   53d8c:	mov	x0, x20
   53d90:	bl	d120 <mpfr_free_func@plt>
   53d94:	ldr	x8, [x19, #16]
   53d98:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53d9c:	ldr	x1, [x0, #2736]
   53da0:	add	x0, x0, #0xab0
   53da4:	blr	x1
   53da8:	ldr	x9, [x24, x0]
   53dac:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53db0:	ldr	x1, [x0, #2768]
   53db4:	add	x0, x0, #0xad0
   53db8:	blr	x1
   53dbc:	cmp	x8, x9
   53dc0:	b.lt	53e44 <mpfr_round_nearest_away_end@@Base+0x248>  // b.tstop
   53dc4:	ldr	x9, [x24, x0]
   53dc8:	cmp	x8, x9
   53dcc:	b.gt	53e44 <mpfr_round_nearest_away_end@@Base+0x248>
   53dd0:	cbz	w21, 53df0 <mpfr_round_nearest_away_end@@Base+0x1f4>
   53dd4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   53dd8:	ldr	x1, [x0, #2800]
   53ddc:	add	x0, x0, #0xaf0
   53de0:	blr	x1
   53de4:	ldr	w8, [x24, x0]
   53de8:	orr	w8, w8, #0x8
   53dec:	str	w8, [x24, x0]
   53df0:	mov	w0, w21
   53df4:	ldp	x20, x19, [sp, #112]
   53df8:	ldp	x22, x21, [sp, #96]
   53dfc:	ldp	x24, x23, [sp, #80]
   53e00:	ldp	x26, x25, [sp, #64]
   53e04:	ldr	x27, [sp, #48]
   53e08:	ldp	x29, x30, [sp, #32]
   53e0c:	add	sp, sp, #0x80
   53e10:	ret
   53e14:	ldr	x8, [x19, #16]
   53e18:	mov	x9, #0x2                   	// #2
   53e1c:	movk	x9, #0x8000, lsl #48
   53e20:	cmp	x8, x9
   53e24:	b.gt	53e38 <mpfr_round_nearest_away_end@@Base+0x23c>
   53e28:	cmp	x8, x23
   53e2c:	b.ne	53d80 <mpfr_round_nearest_away_end@@Base+0x184>  // b.any
   53e30:	bl	c0f0 <mpfr_set_erangeflag@plt>
   53e34:	b	53d80 <mpfr_round_nearest_away_end@@Base+0x184>
   53e38:	ldr	w8, [x19, #8]
   53e3c:	neg	w21, w8
   53e40:	b	53d84 <mpfr_round_nearest_away_end@@Base+0x188>
   53e44:	mov	x0, x19
   53e48:	mov	w1, w21
   53e4c:	mov	w2, wzr
   53e50:	bl	d020 <mpfr_check_range@plt>
   53e54:	mov	w21, w0
   53e58:	b	53df0 <mpfr_round_nearest_away_end@@Base+0x1f4>

0000000000053e5c <mpfr_nrandom@@Base>:
   53e5c:	sub	sp, sp, #0xa0
   53e60:	stp	x29, x30, [sp, #96]
   53e64:	add	x29, sp, #0x60
   53e68:	stp	x22, x21, [sp, #128]
   53e6c:	mov	x21, x0
   53e70:	sub	x0, x29, #0x20
   53e74:	str	x23, [sp, #112]
   53e78:	stp	x20, x19, [sp, #144]
   53e7c:	mov	w19, w2
   53e80:	mov	x20, x1
   53e84:	bl	c5f0 <mpfr_random_deviate_init@plt>
   53e88:	add	x0, sp, #0x20
   53e8c:	bl	c5f0 <mpfr_random_deviate_init@plt>
   53e90:	mov	x0, sp
   53e94:	bl	c5f0 <mpfr_random_deviate_init@plt>
   53e98:	add	x1, sp, #0x20
   53e9c:	mov	x2, sp
   53ea0:	mov	x0, x20
   53ea4:	bl	53f78 <mpfr_nrandom@@Base+0x11c>
   53ea8:	sub	x1, x0, #0x1
   53eac:	add	x3, sp, #0x20
   53eb0:	mov	x4, sp
   53eb4:	mov	x2, x20
   53eb8:	mov	x22, x0
   53ebc:	bl	54008 <mpfr_nrandom@@Base+0x1ac>
   53ec0:	cbz	w0, 53e98 <mpfr_nrandom@@Base+0x3c>
   53ec4:	sub	x0, x29, #0x20
   53ec8:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   53ecc:	sub	x1, x29, #0x20
   53ed0:	add	x3, sp, #0x20
   53ed4:	mov	x4, sp
   53ed8:	mov	x0, x22
   53edc:	mov	x2, x20
   53ee0:	bl	54078 <mpfr_nrandom@@Base+0x21c>
   53ee4:	cbz	w0, 53e98 <mpfr_nrandom@@Base+0x3c>
   53ee8:	mov	x23, xzr
   53eec:	add	x23, x23, #0x1
   53ef0:	cmp	x23, x22
   53ef4:	b.hi	53f1c <mpfr_nrandom@@Base+0xc0>  // b.pmore
   53ef8:	sub	x1, x29, #0x20
   53efc:	add	x3, sp, #0x20
   53f00:	mov	x4, sp
   53f04:	mov	x0, x22
   53f08:	mov	x2, x20
   53f0c:	bl	54078 <mpfr_nrandom@@Base+0x21c>
   53f10:	cbnz	w0, 53eec <mpfr_nrandom@@Base+0x90>
   53f14:	cmp	x23, x22
   53f18:	b.ls	53e98 <mpfr_nrandom@@Base+0x3c>  // b.plast
   53f1c:	mov	x0, sp
   53f20:	bl	c250 <mpfr_random_deviate_clear@plt>
   53f24:	add	x0, sp, #0x20
   53f28:	bl	c250 <mpfr_random_deviate_clear@plt>
   53f2c:	mov	w1, #0x1                   	// #1
   53f30:	mov	x0, x20
   53f34:	bl	d000 <__gmp_urandomb_ui@plt>
   53f38:	sub	x2, x29, #0x20
   53f3c:	mov	x1, x22
   53f40:	mov	x3, x21
   53f44:	mov	x4, x20
   53f48:	mov	w5, w19
   53f4c:	bl	bef0 <mpfr_random_deviate_value@plt>
   53f50:	mov	w19, w0
   53f54:	sub	x0, x29, #0x20
   53f58:	bl	c250 <mpfr_random_deviate_clear@plt>
   53f5c:	mov	w0, w19
   53f60:	ldp	x20, x19, [sp, #144]
   53f64:	ldp	x22, x21, [sp, #128]
   53f68:	ldr	x23, [sp, #112]
   53f6c:	ldp	x29, x30, [sp, #96]
   53f70:	add	sp, sp, #0xa0
   53f74:	ret
   53f78:	stp	x29, x30, [sp, #-64]!
   53f7c:	stp	x24, x23, [sp, #16]
   53f80:	stp	x22, x21, [sp, #32]
   53f84:	stp	x20, x19, [sp, #48]
   53f88:	mov	x29, sp
   53f8c:	mov	x19, x2
   53f90:	mov	x20, x1
   53f94:	mov	x21, x0
   53f98:	bl	54198 <mpfr_nrandom@@Base+0x33c>
   53f9c:	cbz	w0, 53ff0 <mpfr_nrandom@@Base+0x194>
   53fa0:	adrp	x22, 61000 <mpfr_bases@@Base+0x1408>
   53fa4:	adrp	x23, 61000 <mpfr_bases@@Base+0x1408>
   53fa8:	mov	x24, xzr
   53fac:	add	x22, x22, #0x774
   53fb0:	add	x23, x23, #0x77e
   53fb4:	subs	x24, x24, #0x1
   53fb8:	b.eq	53fd4 <mpfr_nrandom@@Base+0x178>  // b.none
   53fbc:	mov	x0, x21
   53fc0:	mov	x1, x20
   53fc4:	mov	x2, x19
   53fc8:	bl	54198 <mpfr_nrandom@@Base+0x33c>
   53fcc:	cbnz	w0, 53fb4 <mpfr_nrandom@@Base+0x158>
   53fd0:	b	53fe8 <mpfr_nrandom@@Base+0x18c>
   53fd4:	mov	w1, #0x5b                  	// #91
   53fd8:	mov	x0, x22
   53fdc:	mov	x2, x23
   53fe0:	bl	d030 <mpfr_assert_fail@plt>
   53fe4:	b	53fbc <mpfr_nrandom@@Base+0x160>
   53fe8:	neg	x0, x24
   53fec:	b	53ff4 <mpfr_nrandom@@Base+0x198>
   53ff0:	mov	x0, xzr
   53ff4:	ldp	x20, x19, [sp, #48]
   53ff8:	ldp	x22, x21, [sp, #32]
   53ffc:	ldp	x24, x23, [sp, #16]
   54000:	ldp	x29, x30, [sp], #64
   54004:	ret
   54008:	stp	x29, x30, [sp, #-64]!
   5400c:	stp	x24, x23, [sp, #16]
   54010:	stp	x22, x21, [sp, #32]
   54014:	stp	x20, x19, [sp, #48]
   54018:	mov	x29, sp
   5401c:	cbz	x0, 54060 <mpfr_nrandom@@Base+0x204>
   54020:	mov	x19, x4
   54024:	mov	x20, x3
   54028:	mov	x21, x2
   5402c:	mov	x22, x0
   54030:	add	x23, x1, #0x1
   54034:	sub	x22, x22, #0x1
   54038:	mov	x24, x23
   5403c:	subs	x24, x24, #0x1
   54040:	b.eq	5405c <mpfr_nrandom@@Base+0x200>  // b.none
   54044:	mov	x0, x21
   54048:	mov	x1, x20
   5404c:	mov	x2, x19
   54050:	bl	54198 <mpfr_nrandom@@Base+0x33c>
   54054:	cbnz	w0, 5403c <mpfr_nrandom@@Base+0x1e0>
   54058:	b	54064 <mpfr_nrandom@@Base+0x208>
   5405c:	cbnz	x22, 54034 <mpfr_nrandom@@Base+0x1d8>
   54060:	mov	w0, #0x1                   	// #1
   54064:	ldp	x20, x19, [sp, #48]
   54068:	ldp	x22, x21, [sp, #32]
   5406c:	ldp	x24, x23, [sp, #16]
   54070:	ldp	x29, x30, [sp], #64
   54074:	ret
   54078:	stp	x29, x30, [sp, #-96]!
   5407c:	lsl	x8, x0, #1
   54080:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   54084:	stp	x24, x23, [sp, #48]
   54088:	stp	x22, x21, [sp, #64]
   5408c:	stp	x20, x19, [sp, #80]
   54090:	mov	x19, x4
   54094:	mov	x20, x3
   54098:	mov	x21, x2
   5409c:	mov	x22, x1
   540a0:	mov	x23, x0
   540a4:	cmp	x0, x9
   540a8:	add	x24, x8, #0x2
   540ac:	str	x27, [sp, #16]
   540b0:	stp	x26, x25, [sp, #32]
   540b4:	mov	x29, sp
   540b8:	b.cs	5417c <mpfr_nrandom@@Base+0x320>  // b.hs, b.nlast
   540bc:	mov	w26, wzr
   540c0:	mov	w27, #0x1                   	// #1
   540c4:	b	540dc <mpfr_nrandom@@Base+0x280>
   540c8:	mov	x0, x20
   540cc:	mov	x1, x19
   540d0:	bl	ca60 <mpfr_random_deviate_swap@plt>
   540d4:	mov	w27, wzr
   540d8:	add	w26, w26, #0x1
   540dc:	cbz	x23, 540ec <mpfr_nrandom@@Base+0x290>
   540e0:	mov	w25, wzr
   540e4:	tbz	w25, #31, 54100 <mpfr_nrandom@@Base+0x2a4>
   540e8:	b	54158 <mpfr_nrandom@@Base+0x2fc>
   540ec:	mov	x0, x24
   540f0:	mov	x1, x21
   540f4:	bl	54230 <mpfr_nrandom@@Base+0x3d4>
   540f8:	mov	w25, w0
   540fc:	tbnz	w25, #31, 54158 <mpfr_nrandom@@Base+0x2fc>
   54100:	mov	x0, x19
   54104:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   54108:	cmp	w27, #0x0
   5410c:	csel	x1, x20, x22, eq  // eq = none
   54110:	mov	x0, x19
   54114:	mov	x2, x21
   54118:	bl	cf20 <mpfr_random_deviate_less@plt>
   5411c:	cbz	w0, 54158 <mpfr_nrandom@@Base+0x2fc>
   54120:	cbz	x23, 54134 <mpfr_nrandom@@Base+0x2d8>
   54124:	mov	x0, x24
   54128:	mov	x1, x21
   5412c:	bl	54230 <mpfr_nrandom@@Base+0x3d4>
   54130:	mov	w25, w0
   54134:	tbnz	w25, #31, 54158 <mpfr_nrandom@@Base+0x2fc>
   54138:	cbnz	w25, 540c8 <mpfr_nrandom@@Base+0x26c>
   5413c:	mov	x0, x20
   54140:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   54144:	mov	x0, x20
   54148:	mov	x1, x22
   5414c:	mov	x2, x21
   54150:	bl	cf20 <mpfr_random_deviate_less@plt>
   54154:	cbnz	w0, 540c8 <mpfr_nrandom@@Base+0x26c>
   54158:	mvn	w8, w26
   5415c:	ldp	x20, x19, [sp, #80]
   54160:	ldp	x22, x21, [sp, #64]
   54164:	ldp	x24, x23, [sp, #48]
   54168:	ldp	x26, x25, [sp, #32]
   5416c:	ldr	x27, [sp, #16]
   54170:	and	w0, w8, #0x1
   54174:	ldp	x29, x30, [sp], #96
   54178:	ret
   5417c:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   54180:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   54184:	add	x0, x0, #0x774
   54188:	add	x2, x2, #0x787
   5418c:	mov	w1, #0x8b                  	// #139
   54190:	bl	d030 <mpfr_assert_fail@plt>
   54194:	b	540bc <mpfr_nrandom@@Base+0x260>
   54198:	stp	x29, x30, [sp, #-48]!
   5419c:	stp	x22, x21, [sp, #16]
   541a0:	mov	x21, x0
   541a4:	mov	x0, x1
   541a8:	stp	x20, x19, [sp, #32]
   541ac:	mov	x29, sp
   541b0:	mov	x19, x2
   541b4:	mov	x20, x1
   541b8:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   541bc:	mov	w1, #0x1                   	// #1
   541c0:	mov	x0, x20
   541c4:	mov	x2, x21
   541c8:	mov	w22, #0x1                   	// #1
   541cc:	bl	c7d0 <mpfr_random_deviate_tstbit@plt>
   541d0:	cbnz	w0, 5421c <mpfr_nrandom@@Base+0x3c0>
   541d4:	b	541f4 <mpfr_nrandom@@Base+0x398>
   541d8:	mov	x0, x20
   541dc:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   541e0:	mov	x0, x20
   541e4:	mov	x1, x19
   541e8:	mov	x2, x21
   541ec:	bl	cf20 <mpfr_random_deviate_less@plt>
   541f0:	cbz	w0, 54218 <mpfr_nrandom@@Base+0x3bc>
   541f4:	mov	x0, x19
   541f8:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   541fc:	mov	x0, x19
   54200:	mov	x1, x20
   54204:	mov	x2, x21
   54208:	bl	cf20 <mpfr_random_deviate_less@plt>
   5420c:	cbnz	w0, 541d8 <mpfr_nrandom@@Base+0x37c>
   54210:	mov	w22, wzr
   54214:	b	5421c <mpfr_nrandom@@Base+0x3c0>
   54218:	mov	w22, #0x1                   	// #1
   5421c:	mov	w0, w22
   54220:	ldp	x20, x19, [sp, #32]
   54224:	ldp	x22, x21, [sp, #16]
   54228:	ldp	x29, x30, [sp], #48
   5422c:	ret
   54230:	stp	x29, x30, [sp, #-16]!
   54234:	mov	x8, x0
   54238:	mov	x0, x1
   5423c:	mov	x1, x8
   54240:	mov	x29, sp
   54244:	bl	c790 <__gmp_urandomm_ui@plt>
   54248:	cmp	x0, #0x1
   5424c:	cset	w8, ne  // ne = any
   54250:	cmp	x0, #0x0
   54254:	csinv	w0, w8, wzr, ne  // ne = any
   54258:	ldp	x29, x30, [sp], #16
   5425c:	ret

0000000000054260 <mpfr_random_deviate_init@@Base>:
   54260:	stp	x29, x30, [sp, #-32]!
   54264:	str	x19, [sp, #16]
   54268:	mov	x19, x0
   5426c:	add	x0, x0, #0x10
   54270:	mov	x29, sp
   54274:	bl	c400 <mpfr_mpz_init@plt>
   54278:	str	xzr, [x19]
   5427c:	ldr	x19, [sp, #16]
   54280:	ldp	x29, x30, [sp], #32
   54284:	ret

0000000000054288 <mpfr_random_deviate_reset@@Base>:
   54288:	str	xzr, [x0]
   5428c:	ret

0000000000054290 <mpfr_random_deviate_clear@@Base>:
   54290:	stp	x29, x30, [sp, #-16]!
   54294:	add	x0, x0, #0x10
   54298:	mov	x29, sp
   5429c:	bl	c610 <mpfr_mpz_clear@plt>
   542a0:	ldp	x29, x30, [sp], #16
   542a4:	ret

00000000000542a8 <mpfr_random_deviate_swap@@Base>:
   542a8:	stp	x29, x30, [sp, #-16]!
   542ac:	ldr	x8, [x1]
   542b0:	ldr	x9, [x0]
   542b4:	mov	x29, sp
   542b8:	str	x8, [x0]
   542bc:	str	x9, [x1]
   542c0:	ldr	x9, [x1, #8]
   542c4:	ldr	x10, [x0, #8]
   542c8:	add	x8, x0, #0x10
   542cc:	str	x9, [x0, #8]
   542d0:	str	x10, [x1, #8]
   542d4:	add	x1, x1, #0x10
   542d8:	mov	x0, x8
   542dc:	bl	c570 <__gmpz_swap@plt>
   542e0:	ldp	x29, x30, [sp], #16
   542e4:	ret

00000000000542e8 <mpfr_random_deviate_tstbit@@Base>:
   542e8:	stp	x29, x30, [sp, #-32]!
   542ec:	stp	x20, x19, [sp, #16]
   542f0:	mov	x29, sp
   542f4:	cbz	x1, 54328 <mpfr_random_deviate_tstbit@@Base+0x40>
   542f8:	mov	x3, xzr
   542fc:	mov	x19, x1
   54300:	mov	x20, x0
   54304:	bl	5434c <mpfr_random_deviate_tstbit@@Base+0x64>
   54308:	cmp	x19, #0x20
   5430c:	b.hi	54330 <mpfr_random_deviate_tstbit@@Base+0x48>  // b.pmore
   54310:	ldr	x8, [x20, #8]
   54314:	mov	w9, #0x20                  	// #32
   54318:	sub	x9, x9, x19
   5431c:	lsr	x8, x8, x9
   54320:	and	w0, w8, #0x1
   54324:	b	54340 <mpfr_random_deviate_tstbit@@Base+0x58>
   54328:	mov	w0, wzr
   5432c:	b	54340 <mpfr_random_deviate_tstbit@@Base+0x58>
   54330:	ldr	x8, [x20], #16
   54334:	sub	x1, x8, x19
   54338:	mov	x0, x20
   5433c:	bl	c450 <__gmpz_tstbit@plt>
   54340:	ldp	x20, x19, [sp, #16]
   54344:	ldp	x29, x30, [sp], #32
   54348:	ret
   5434c:	stp	x29, x30, [sp, #-64]!
   54350:	stp	x22, x21, [sp, #32]
   54354:	stp	x20, x19, [sp, #48]
   54358:	mov	x22, x3
   5435c:	mov	x20, x2
   54360:	mov	x21, x1
   54364:	cmn	x1, #0x20
   54368:	mov	x19, x0
   5436c:	str	x23, [sp, #16]
   54370:	mov	x29, sp
   54374:	b.cs	54494 <mpfr_random_deviate_tstbit@@Base+0x1ac>  // b.hs, b.nlast
   54378:	ldr	x8, [x19]
   5437c:	cmp	x8, x21
   54380:	b.cs	54480 <mpfr_random_deviate_tstbit@@Base+0x198>  // b.hs, b.nlast
   54384:	cbnz	x8, 543a4 <mpfr_random_deviate_tstbit@@Base+0xbc>
   54388:	mov	w1, #0x20                  	// #32
   5438c:	mov	x0, x20
   54390:	mov	w23, #0x20                  	// #32
   54394:	bl	d000 <__gmp_urandomb_ui@plt>
   54398:	cmp	x21, #0x21
   5439c:	stp	x23, x0, [x19]
   543a0:	b.cc	54480 <mpfr_random_deviate_tstbit@@Base+0x198>  // b.lo, b.ul, b.last
   543a4:	cbz	x22, 5440c <mpfr_random_deviate_tstbit@@Base+0x124>
   543a8:	mov	x23, x19
   543ac:	ldr	x8, [x23], #16
   543b0:	add	x9, x21, #0x1f
   543b4:	and	x9, x9, #0xffffffffffffffe0
   543b8:	mov	x1, x20
   543bc:	sub	x21, x9, x8
   543c0:	cmp	x8, #0x20
   543c4:	csel	x0, x23, x22, eq  // eq = none
   543c8:	mov	x2, x21
   543cc:	bl	d200 <__gmpz_urandomb@plt>
   543d0:	ldr	x8, [x19]
   543d4:	cmp	x8, #0x21
   543d8:	b.cc	543fc <mpfr_random_deviate_tstbit@@Base+0x114>  // b.lo, b.ul, b.last
   543dc:	mov	x0, x23
   543e0:	mov	x1, x23
   543e4:	mov	x2, x21
   543e8:	bl	c6a0 <__gmpz_mul_2exp@plt>
   543ec:	mov	x0, x23
   543f0:	mov	x1, x23
   543f4:	mov	x2, x22
   543f8:	bl	ceb0 <__gmpz_add@plt>
   543fc:	ldr	x8, [x19]
   54400:	add	x8, x8, x21
   54404:	str	x8, [x19]
   54408:	b	54480 <mpfr_random_deviate_tstbit@@Base+0x198>
   5440c:	ldr	x8, [x19]
   54410:	cmp	x8, x21
   54414:	b.cs	54480 <mpfr_random_deviate_tstbit@@Base+0x198>  // b.hs, b.nlast
   54418:	add	x22, x19, #0x10
   5441c:	b	54454 <mpfr_random_deviate_tstbit@@Base+0x16c>
   54420:	mov	w2, #0x20                  	// #32
   54424:	mov	x0, x22
   54428:	mov	x1, x22
   5442c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   54430:	mov	x0, x22
   54434:	mov	x1, x22
   54438:	mov	x2, x23
   5443c:	bl	c820 <__gmpz_add_ui@plt>
   54440:	ldr	x8, [x19]
   54444:	add	x8, x8, #0x20
   54448:	cmp	x8, x21
   5444c:	str	x8, [x19]
   54450:	b.cs	54480 <mpfr_random_deviate_tstbit@@Base+0x198>  // b.hs, b.nlast
   54454:	mov	w1, #0x20                  	// #32
   54458:	mov	x0, x20
   5445c:	bl	d000 <__gmp_urandomb_ui@plt>
   54460:	ldr	x8, [x19]
   54464:	mov	x23, x0
   54468:	cmp	x8, #0x20
   5446c:	b.ne	54420 <mpfr_random_deviate_tstbit@@Base+0x138>  // b.any
   54470:	mov	x0, x22
   54474:	mov	x1, x23
   54478:	bl	c110 <__gmpz_set_ui@plt>
   5447c:	b	54440 <mpfr_random_deviate_tstbit@@Base+0x158>
   54480:	ldp	x20, x19, [sp, #48]
   54484:	ldp	x22, x21, [sp, #32]
   54488:	ldr	x23, [sp, #16]
   5448c:	ldp	x29, x30, [sp], #64
   54490:	ret
   54494:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   54498:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   5449c:	add	x0, x0, #0x7a6
   544a0:	add	x2, x2, #0x7d6
   544a4:	mov	w1, #0x82                  	// #130
   544a8:	bl	d030 <mpfr_assert_fail@plt>
   544ac:	b	54378 <mpfr_random_deviate_tstbit@@Base+0x90>

00000000000544b0 <mpfr_random_deviate_less@@Base>:
   544b0:	stp	x29, x30, [sp, #-64]!
   544b4:	cmp	x0, x1
   544b8:	stp	x24, x23, [sp, #16]
   544bc:	stp	x22, x21, [sp, #32]
   544c0:	stp	x20, x19, [sp, #48]
   544c4:	mov	x29, sp
   544c8:	b.eq	54548 <mpfr_random_deviate_less@@Base+0x98>  // b.none
   544cc:	mov	x19, x1
   544d0:	mov	w1, #0x20                  	// #32
   544d4:	mov	x3, xzr
   544d8:	mov	x20, x0
   544dc:	mov	x21, x2
   544e0:	bl	5434c <mpfr_random_deviate_tstbit@@Base+0x64>
   544e4:	mov	w1, #0x20                  	// #32
   544e8:	mov	x0, x19
   544ec:	mov	x2, x21
   544f0:	mov	x3, xzr
   544f4:	bl	5434c <mpfr_random_deviate_tstbit@@Base+0x64>
   544f8:	ldr	x8, [x20, #8]
   544fc:	ldr	x9, [x19, #8]
   54500:	cmp	x8, x9
   54504:	b.ne	54550 <mpfr_random_deviate_less@@Base+0xa0>  // b.any
   54508:	mov	w23, #0x21                  	// #33
   5450c:	mov	x0, x20
   54510:	mov	x1, x23
   54514:	mov	x2, x21
   54518:	bl	c7d0 <mpfr_random_deviate_tstbit@plt>
   5451c:	mov	w24, w0
   54520:	mov	x0, x19
   54524:	mov	x1, x23
   54528:	mov	x2, x21
   5452c:	bl	c7d0 <mpfr_random_deviate_tstbit@plt>
   54530:	cmp	w24, w0
   54534:	cset	w8, lt  // lt = tstop
   54538:	csel	w22, w22, w8, eq  // eq = none
   5453c:	add	x23, x23, #0x1
   54540:	b.eq	5450c <mpfr_random_deviate_less@@Base+0x5c>  // b.none
   54544:	b	54554 <mpfr_random_deviate_less@@Base+0xa4>
   54548:	mov	w22, wzr
   5454c:	b	54554 <mpfr_random_deviate_less@@Base+0xa4>
   54550:	cset	w22, cc  // cc = lo, ul, last
   54554:	mov	w0, w22
   54558:	ldp	x20, x19, [sp, #48]
   5455c:	ldp	x22, x21, [sp, #32]
   54560:	ldp	x24, x23, [sp, #16]
   54564:	ldp	x29, x30, [sp], #64
   54568:	ret

000000000005456c <mpfr_random_deviate_value@@Base>:
   5456c:	sub	sp, sp, #0x70
   54570:	stp	x29, x30, [sp, #16]
   54574:	stp	x26, x25, [sp, #48]
   54578:	stp	x24, x23, [sp, #64]
   5457c:	stp	x22, x21, [sp, #80]
   54580:	stp	x20, x19, [sp, #96]
   54584:	ldr	x26, [x3]
   54588:	mov	w19, w5
   5458c:	mov	x24, x4
   54590:	mov	x20, x3
   54594:	mov	x21, x2
   54598:	mov	x23, x1
   5459c:	mov	w22, w0
   545a0:	str	x27, [sp, #32]
   545a4:	add	x29, sp, #0x10
   545a8:	cbz	x1, 545c0 <mpfr_random_deviate_value@@Base+0x54>
   545ac:	mov	x0, x23
   545b0:	bl	547dc <mpfr_random_deviate_value@@Base+0x270>
   545b4:	sxtw	x25, w0
   545b8:	mov	w27, #0x1                   	// #1
   545bc:	b	545d4 <mpfr_random_deviate_value@@Base+0x68>
   545c0:	mov	x0, x21
   545c4:	mov	x1, x24
   545c8:	bl	54714 <mpfr_random_deviate_value@@Base+0x1a8>
   545cc:	mov	x25, x0
   545d0:	mov	w27, #0xffffffff            	// #-1
   545d4:	mov	x0, sp
   545d8:	bl	c400 <mpfr_mpz_init@plt>
   545dc:	add	x8, x26, #0x1
   545e0:	cmp	x8, x25
   545e4:	b.ls	545f0 <mpfr_random_deviate_value@@Base+0x84>  // b.plast
   545e8:	cmp	w27, #0x0
   545ec:	b.gt	545fc <mpfr_random_deviate_value@@Base+0x90>
   545f0:	cmn	x8, x25
   545f4:	b.eq	54618 <mpfr_random_deviate_value@@Base+0xac>  // b.none
   545f8:	tbz	w27, #31, 54618 <mpfr_random_deviate_value@@Base+0xac>
   545fc:	cmp	w27, #0x0
   54600:	cneg	x9, x25, gt
   54604:	add	x1, x9, x8
   54608:	mov	x3, sp
   5460c:	mov	x0, x21
   54610:	mov	x2, x24
   54614:	bl	5434c <mpfr_random_deviate_tstbit@@Base+0x64>
   54618:	cbz	x23, 54654 <mpfr_random_deviate_value@@Base+0xe8>
   5461c:	mov	x0, sp
   54620:	mov	x1, x23
   54624:	bl	c110 <__gmpz_set_ui@plt>
   54628:	ldr	x8, [x21]
   5462c:	cbz	x8, 54660 <mpfr_random_deviate_value@@Base+0xf4>
   54630:	mov	x0, sp
   54634:	mov	x1, sp
   54638:	mov	w2, #0x20                  	// #32
   5463c:	bl	c6a0 <__gmpz_mul_2exp@plt>
   54640:	ldr	x2, [x21, #8]
   54644:	mov	x0, sp
   54648:	mov	x1, sp
   5464c:	bl	c820 <__gmpz_add_ui@plt>
   54650:	b	54660 <mpfr_random_deviate_value@@Base+0xf4>
   54654:	ldr	x1, [x21, #8]
   54658:	mov	x0, sp
   5465c:	bl	c110 <__gmpz_set_ui@plt>
   54660:	ldr	x8, [x21]
   54664:	cmp	x8, #0x21
   54668:	b.cc	5468c <mpfr_random_deviate_value@@Base+0x120>  // b.lo, b.ul, b.last
   5466c:	sub	x2, x8, #0x20
   54670:	mov	x0, sp
   54674:	mov	x1, sp
   54678:	bl	c6a0 <__gmpz_mul_2exp@plt>
   5467c:	add	x2, x21, #0x10
   54680:	mov	x0, sp
   54684:	mov	x1, sp
   54688:	bl	ceb0 <__gmpz_add@plt>
   5468c:	mov	x0, sp
   54690:	mov	x1, xzr
   54694:	bl	c370 <__gmpz_setbit@plt>
   54698:	cbz	w22, 546a8 <mpfr_random_deviate_value@@Base+0x13c>
   5469c:	mov	x0, sp
   546a0:	mov	x1, sp
   546a4:	bl	c4e0 <__gmpz_neg@plt>
   546a8:	ldr	x8, [x21]
   546ac:	tbnz	x8, #63, 546f8 <mpfr_random_deviate_value@@Base+0x18c>
   546b0:	ldr	x8, [x21]
   546b4:	mov	x1, sp
   546b8:	mov	x0, x20
   546bc:	mov	w3, w19
   546c0:	neg	x2, x8
   546c4:	bl	c9c0 <mpfr_set_z_2exp@plt>
   546c8:	mov	w19, w0
   546cc:	mov	x0, sp
   546d0:	bl	c610 <mpfr_mpz_clear@plt>
   546d4:	mov	w0, w19
   546d8:	ldp	x20, x19, [sp, #96]
   546dc:	ldp	x22, x21, [sp, #80]
   546e0:	ldp	x24, x23, [sp, #64]
   546e4:	ldp	x26, x25, [sp, #48]
   546e8:	ldr	x27, [sp, #32]
   546ec:	ldp	x29, x30, [sp, #16]
   546f0:	add	sp, sp, #0x70
   546f4:	ret
   546f8:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   546fc:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   54700:	add	x0, x0, #0x7a6
   54704:	add	x2, x2, #0x7b7
   54708:	mov	w1, #0x177                 	// #375
   5470c:	bl	d030 <mpfr_assert_fail@plt>
   54710:	b	546b0 <mpfr_random_deviate_value@@Base+0x144>
   54714:	stp	x29, x30, [sp, #-48]!
   54718:	stp	x20, x19, [sp, #32]
   5471c:	mov	x20, x1
   54720:	mov	w1, #0x20                  	// #32
   54724:	mov	x2, x20
   54728:	mov	x3, xzr
   5472c:	str	x21, [sp, #16]
   54730:	mov	x29, sp
   54734:	mov	x19, x0
   54738:	mov	w21, #0x20                  	// #32
   5473c:	bl	5434c <mpfr_random_deviate_tstbit@@Base+0x64>
   54740:	ldr	x0, [x19, #8]
   54744:	cbz	x0, 54758 <mpfr_random_deviate_value@@Base+0x1ec>
   54748:	bl	547dc <mpfr_random_deviate_value@@Base+0x270>
   5474c:	sub	w8, w21, w0
   54750:	sxtw	x19, w8
   54754:	b	547ac <mpfr_random_deviate_value@@Base+0x240>
   54758:	mov	w1, #0x40                  	// #64
   5475c:	mov	x0, x19
   54760:	mov	x2, x20
   54764:	mov	x3, xzr
   54768:	bl	5434c <mpfr_random_deviate_tstbit@@Base+0x64>
   5476c:	ldr	x9, [x19]
   54770:	ldr	w8, [x19, #20]
   54774:	add	x21, x9, #0x1
   54778:	cbnz	w8, 54788 <mpfr_random_deviate_value@@Base+0x21c>
   5477c:	mov	x0, x19
   54780:	mov	x1, x21
   54784:	b	54760 <mpfr_random_deviate_value@@Base+0x1f4>
   54788:	add	x0, x19, #0x10
   5478c:	mov	w1, #0x2                   	// #2
   54790:	bl	d050 <__gmpz_sizeinbase@plt>
   54794:	sub	x19, x21, x0
   54798:	mov	x9, #0x101                 	// #257
   5479c:	add	x8, x19, #0x1
   547a0:	movk	x9, #0x8000, lsl #48
   547a4:	cmp	x8, x9
   547a8:	b.cs	547c0 <mpfr_random_deviate_value@@Base+0x254>  // b.hs, b.nlast
   547ac:	mov	x0, x19
   547b0:	ldp	x20, x19, [sp, #32]
   547b4:	ldr	x21, [sp, #16]
   547b8:	ldp	x29, x30, [sp], #48
   547bc:	ret
   547c0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   547c4:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   547c8:	add	x0, x0, #0x7a6
   547cc:	add	x2, x2, #0x801
   547d0:	mov	w1, #0xf1                  	// #241
   547d4:	bl	d030 <mpfr_assert_fail@plt>
   547d8:	b	547ac <mpfr_random_deviate_value@@Base+0x240>
   547dc:	clz	x8, x0
   547e0:	eor	w8, w8, #0x3f
   547e4:	cmp	x0, #0x0
   547e8:	csinv	w0, w8, wzr, ne  // ne = any
   547ec:	ret

00000000000547f0 <mpfr_erandom@@Base>:
   547f0:	sub	sp, sp, #0xa0
   547f4:	stp	x29, x30, [sp, #96]
   547f8:	add	x29, sp, #0x60
   547fc:	stp	x22, x21, [sp, #128]
   54800:	mov	x21, x0
   54804:	sub	x0, x29, #0x20
   54808:	stp	x24, x23, [sp, #112]
   5480c:	stp	x20, x19, [sp, #144]
   54810:	mov	w19, w2
   54814:	mov	x20, x1
   54818:	bl	c5f0 <mpfr_random_deviate_init@plt>
   5481c:	add	x0, sp, #0x20
   54820:	bl	c5f0 <mpfr_random_deviate_init@plt>
   54824:	mov	x0, sp
   54828:	bl	c5f0 <mpfr_random_deviate_init@plt>
   5482c:	sub	x0, x29, #0x20
   54830:	add	x2, sp, #0x20
   54834:	mov	x3, sp
   54838:	mov	x1, x20
   5483c:	bl	548f8 <mpfr_erandom@@Base+0x108>
   54840:	cbz	w0, 5484c <mpfr_erandom@@Base+0x5c>
   54844:	mov	x22, xzr
   54848:	b	548a4 <mpfr_erandom@@Base+0xb4>
   5484c:	adrp	x22, 61000 <mpfr_bases@@Base+0x1408>
   54850:	adrp	x23, 61000 <mpfr_bases@@Base+0x1408>
   54854:	mov	x24, xzr
   54858:	add	x22, x22, #0x853
   5485c:	add	x23, x23, #0x85d
   54860:	subs	x24, x24, #0x1
   54864:	b.eq	5488c <mpfr_erandom@@Base+0x9c>  // b.none
   54868:	sub	x0, x29, #0x20
   5486c:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   54870:	sub	x0, x29, #0x20
   54874:	add	x2, sp, #0x20
   54878:	mov	x3, sp
   5487c:	mov	x1, x20
   54880:	bl	548f8 <mpfr_erandom@@Base+0x108>
   54884:	cbz	w0, 54860 <mpfr_erandom@@Base+0x70>
   54888:	b	548a0 <mpfr_erandom@@Base+0xb0>
   5488c:	mov	w1, #0x61                  	// #97
   54890:	mov	x0, x22
   54894:	mov	x2, x23
   54898:	bl	d030 <mpfr_assert_fail@plt>
   5489c:	b	54868 <mpfr_erandom@@Base+0x78>
   548a0:	neg	x22, x24
   548a4:	mov	x0, sp
   548a8:	bl	c250 <mpfr_random_deviate_clear@plt>
   548ac:	add	x0, sp, #0x20
   548b0:	bl	c250 <mpfr_random_deviate_clear@plt>
   548b4:	sub	x2, x29, #0x20
   548b8:	mov	w0, wzr
   548bc:	mov	x1, x22
   548c0:	mov	x3, x21
   548c4:	mov	x4, x20
   548c8:	mov	w5, w19
   548cc:	bl	bef0 <mpfr_random_deviate_value@plt>
   548d0:	mov	w19, w0
   548d4:	sub	x0, x29, #0x20
   548d8:	bl	c250 <mpfr_random_deviate_clear@plt>
   548dc:	mov	w0, w19
   548e0:	ldp	x20, x19, [sp, #144]
   548e4:	ldp	x22, x21, [sp, #128]
   548e8:	ldp	x24, x23, [sp, #112]
   548ec:	ldp	x29, x30, [sp, #96]
   548f0:	add	sp, sp, #0xa0
   548f4:	ret
   548f8:	stp	x29, x30, [sp, #-48]!
   548fc:	stp	x22, x21, [sp, #16]
   54900:	mov	x22, x0
   54904:	mov	x0, x2
   54908:	stp	x20, x19, [sp, #32]
   5490c:	mov	x29, sp
   54910:	mov	x19, x3
   54914:	mov	x20, x2
   54918:	mov	x21, x1
   5491c:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   54920:	mov	x0, x20
   54924:	mov	x1, x22
   54928:	mov	x2, x21
   5492c:	bl	cf20 <mpfr_random_deviate_less@plt>
   54930:	cbz	w0, 54964 <mpfr_erandom@@Base+0x174>
   54934:	mov	x0, x19
   54938:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   5493c:	mov	x0, x19
   54940:	mov	x1, x20
   54944:	mov	x2, x21
   54948:	bl	cf20 <mpfr_random_deviate_less@plt>
   5494c:	cbz	w0, 54968 <mpfr_erandom@@Base+0x178>
   54950:	mov	x0, x20
   54954:	bl	ccc0 <mpfr_random_deviate_reset@plt>
   54958:	mov	x0, x20
   5495c:	mov	x1, x19
   54960:	b	54928 <mpfr_erandom@@Base+0x138>
   54964:	mov	w0, #0x1                   	// #1
   54968:	ldp	x20, x19, [sp, #32]
   5496c:	ldp	x22, x21, [sp, #16]
   54970:	ldp	x29, x30, [sp], #48
   54974:	ret

0000000000054978 <mpfr_fmma@@Base>:
   54978:	stp	x29, x30, [sp, #-16]!
   5497c:	mov	w6, wzr
   54980:	mov	x29, sp
   54984:	bl	54990 <mpfr_fmma@@Base+0x18>
   54988:	ldp	x29, x30, [sp], #16
   5498c:	ret
   54990:	stp	x29, x30, [sp, #-96]!
   54994:	stp	x28, x27, [sp, #16]
   54998:	stp	x26, x25, [sp, #32]
   5499c:	stp	x24, x23, [sp, #48]
   549a0:	stp	x22, x21, [sp, #64]
   549a4:	stp	x20, x19, [sp, #80]
   549a8:	mov	x29, sp
   549ac:	sub	sp, sp, #0xa0
   549b0:	ldr	x27, [x0]
   549b4:	stur	xzr, [x29, #-136]
   549b8:	ldr	x8, [x1]
   549bc:	ldr	x9, [x2]
   549c0:	ldr	x10, [x3]
   549c4:	ldr	x11, [x4]
   549c8:	sub	x12, x8, #0x1
   549cc:	add	x8, x8, #0x3e
   549d0:	cmp	x12, #0x0
   549d4:	csel	x8, x8, x12, lt  // lt = tstop
   549d8:	sub	x12, x9, #0x1
   549dc:	add	x9, x9, #0x3e
   549e0:	cmp	x12, #0x0
   549e4:	csel	x9, x9, x12, lt  // lt = tstop
   549e8:	sub	x12, x10, #0x1
   549ec:	add	x10, x10, #0x3e
   549f0:	cmp	x12, #0x0
   549f4:	csel	x10, x10, x12, lt  // lt = tstop
   549f8:	sub	x12, x11, #0x1
   549fc:	asr	x9, x9, #6
   54a00:	add	x11, x11, #0x3e
   54a04:	cmp	x12, #0x0
   54a08:	add	x28, x9, x8, asr #6
   54a0c:	asr	x8, x10, #6
   54a10:	csel	x9, x11, x12, lt  // lt = tstop
   54a14:	add	x20, x28, #0x2
   54a18:	add	x8, x8, x9, asr #6
   54a1c:	lsl	x24, x20, #3
   54a20:	mov	w26, w6
   54a24:	mov	x21, x4
   54a28:	mov	x22, x3
   54a2c:	mov	x23, x2
   54a30:	mov	x25, x1
   54a34:	cmp	x24, #0x4, lsl #12
   54a38:	add	x19, x8, #0x2
   54a3c:	stur	w5, [x29, #-140]
   54a40:	stur	x0, [x29, #-152]
   54a44:	b.hi	54c10 <mpfr_fmma@@Base+0x298>  // b.pmore
   54a48:	add	x9, x24, #0xf
   54a4c:	mov	x8, sp
   54a50:	and	x9, x9, #0xfffffffffffffff0
   54a54:	sub	x0, x8, x9
   54a58:	mov	sp, x0
   54a5c:	lsl	x1, x19, #3
   54a60:	lsl	x8, x20, #6
   54a64:	mov	w9, #0x1                   	// #1
   54a68:	cmp	x1, #0x4, lsl #12
   54a6c:	stur	x0, [x29, #-24]
   54a70:	stur	x8, [x29, #-48]
   54a74:	stur	w9, [x29, #-40]
   54a78:	b.hi	54c20 <mpfr_fmma@@Base+0x2a8>  // b.pmore
   54a7c:	add	x9, x1, #0xf
   54a80:	mov	x8, sp
   54a84:	and	x9, x9, #0xfffffffffffffff0
   54a88:	sub	x0, x8, x9
   54a8c:	mov	sp, x0
   54a90:	lsl	x8, x19, #6
   54a94:	stur	x0, [x29, #-72]
   54a98:	mov	w9, #0x1                   	// #1
   54a9c:	sub	x0, x29, #0x30
   54aa0:	mov	x1, x25
   54aa4:	mov	x2, x23
   54aa8:	stur	x8, [x29, #-96]
   54aac:	stur	w9, [x29, #-88]
   54ab0:	bl	c3e0 <mpfr_ubf_mul_exact@plt>
   54ab4:	sub	x0, x29, #0x60
   54ab8:	mov	x1, x22
   54abc:	mov	x2, x21
   54ac0:	bl	c3e0 <mpfr_ubf_mul_exact@plt>
   54ac4:	cbz	w26, 54ad4 <mpfr_fmma@@Base+0x15c>
   54ac8:	ldur	w8, [x29, #-88]
   54acc:	neg	w8, w8
   54ad0:	stur	w8, [x29, #-88]
   54ad4:	ldr	x8, [x25]
   54ad8:	cmp	x27, x8
   54adc:	b.ne	54b44 <mpfr_fmma@@Base+0x1cc>  // b.any
   54ae0:	ldr	x8, [x23]
   54ae4:	cmp	x27, x8
   54ae8:	b.ne	54b44 <mpfr_fmma@@Base+0x1cc>  // b.any
   54aec:	ldr	x8, [x22]
   54af0:	cmp	x27, x8
   54af4:	b.ne	54b44 <mpfr_fmma@@Base+0x1cc>  // b.any
   54af8:	ldr	x8, [x21]
   54afc:	cmp	x27, x8
   54b00:	b.ne	54b44 <mpfr_fmma@@Base+0x1cc>  // b.any
   54b04:	lsl	x19, x27, #1
   54b08:	sub	x8, x19, #0x1
   54b0c:	add	x9, x19, #0x3e
   54b10:	cmp	x8, #0x0
   54b14:	csel	x8, x9, x8, lt  // lt = tstop
   54b18:	add	x9, x28, #0x1
   54b1c:	cmp	x9, x8, asr #6
   54b20:	b.ne	54b44 <mpfr_fmma@@Base+0x1cc>  // b.any
   54b24:	cmp	x24, #0x4, lsl #12
   54b28:	b.hi	54bc0 <mpfr_fmma@@Base+0x248>  // b.pmore
   54b2c:	add	x9, x24, #0xf
   54b30:	mov	x8, sp
   54b34:	and	x9, x9, #0xfffffffffffffff0
   54b38:	sub	x0, x8, x9
   54b3c:	mov	sp, x0
   54b40:	b	54bcc <mpfr_fmma@@Base+0x254>
   54b44:	ldur	x0, [x29, #-152]
   54b48:	ldur	w3, [x29, #-140]
   54b4c:	sub	x1, x29, #0x30
   54b50:	sub	x2, x29, #0x60
   54b54:	bl	c640 <mpfr_add@plt>
   54b58:	ldur	x8, [x29, #-32]
   54b5c:	mov	x20, #0x4                   	// #4
   54b60:	movk	x20, #0x8000, lsl #48
   54b64:	mov	w19, w0
   54b68:	cmp	x8, x20
   54b6c:	b.ne	54b7c <mpfr_fmma@@Base+0x204>  // b.any
   54b70:	sub	x8, x29, #0x30
   54b74:	add	x0, x8, #0x20
   54b78:	bl	c610 <mpfr_mpz_clear@plt>
   54b7c:	ldur	x8, [x29, #-80]
   54b80:	cmp	x8, x20
   54b84:	b.ne	54b94 <mpfr_fmma@@Base+0x21c>  // b.any
   54b88:	sub	x8, x29, #0x60
   54b8c:	add	x0, x8, #0x20
   54b90:	bl	c610 <mpfr_mpz_clear@plt>
   54b94:	ldur	x0, [x29, #-136]
   54b98:	cbnz	x0, 54c2c <mpfr_fmma@@Base+0x2b4>
   54b9c:	mov	w0, w19
   54ba0:	mov	sp, x29
   54ba4:	ldp	x20, x19, [sp, #80]
   54ba8:	ldp	x22, x21, [sp, #64]
   54bac:	ldp	x24, x23, [sp, #48]
   54bb0:	ldp	x26, x25, [sp, #32]
   54bb4:	ldp	x28, x27, [sp, #16]
   54bb8:	ldp	x29, x30, [sp], #96
   54bbc:	ret
   54bc0:	sub	x0, x29, #0x88
   54bc4:	mov	x1, x24
   54bc8:	bl	c220 <mpfr_tmp_allocate@plt>
   54bcc:	stur	x19, [x29, #-128]
   54bd0:	stp	x0, x19, [x29, #-104]
   54bd4:	stur	x19, [x29, #-48]
   54bd8:	ldur	w19, [x29, #-140]
   54bdc:	mov	w8, #0x1                   	// #1
   54be0:	sub	x0, x29, #0x80
   54be4:	sub	x1, x29, #0x30
   54be8:	sub	x2, x29, #0x60
   54bec:	mov	w3, w19
   54bf0:	stur	w8, [x29, #-120]
   54bf4:	bl	c640 <mpfr_add@plt>
   54bf8:	mov	w3, w0
   54bfc:	ldur	x0, [x29, #-152]
   54c00:	sub	x1, x29, #0x80
   54c04:	mov	w2, w19
   54c08:	bl	cfd0 <mpfr_set_1_2@plt>
   54c0c:	b	54b58 <mpfr_fmma@@Base+0x1e0>
   54c10:	sub	x0, x29, #0x88
   54c14:	mov	x1, x24
   54c18:	bl	c220 <mpfr_tmp_allocate@plt>
   54c1c:	b	54a5c <mpfr_fmma@@Base+0xe4>
   54c20:	sub	x0, x29, #0x88
   54c24:	bl	c220 <mpfr_tmp_allocate@plt>
   54c28:	b	54a90 <mpfr_fmma@@Base+0x118>
   54c2c:	bl	c8d0 <mpfr_tmp_free@plt>
   54c30:	b	54b9c <mpfr_fmma@@Base+0x224>

0000000000054c34 <mpfr_fmms@@Base>:
   54c34:	stp	x29, x30, [sp, #-16]!
   54c38:	mov	w6, #0x1                   	// #1
   54c3c:	mov	x29, sp
   54c40:	bl	54990 <mpfr_fmma@@Base+0x18>
   54c44:	ldp	x29, x30, [sp], #16
   54c48:	ret

0000000000054c4c <mpfr_log_ui@@Base>:
   54c4c:	stp	x29, x30, [sp, #-96]!
   54c50:	stp	x28, x27, [sp, #16]
   54c54:	stp	x26, x25, [sp, #32]
   54c58:	stp	x24, x23, [sp, #48]
   54c5c:	stp	x22, x21, [sp, #64]
   54c60:	stp	x20, x19, [sp, #80]
   54c64:	mov	x29, sp
   54c68:	sub	sp, sp, #0x190
   54c6c:	mov	x19, sp
   54c70:	mov	x21, x1
   54c74:	cmp	x1, #0x2
   54c78:	mov	x23, x0
   54c7c:	str	w2, [x19, #28]
   54c80:	b.hi	54cc4 <mpfr_log_ui@@Base+0x78>  // b.pmore
   54c84:	cmp	x21, #0x1
   54c88:	b.eq	552a4 <mpfr_log_ui@@Base+0x658>  // b.none
   54c8c:	cbnz	x21, 552bc <mpfr_log_ui@@Base+0x670>
   54c90:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   54c94:	mov	w9, #0xffffffff            	// #-1
   54c98:	str	x8, [x23, #16]
   54c9c:	str	w9, [x23, #8]
   54ca0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   54ca4:	ldr	x1, [x0, #2800]
   54ca8:	add	x0, x0, #0xaf0
   54cac:	blr	x1
   54cb0:	mrs	x8, tpidr_el0
   54cb4:	ldr	w9, [x8, x0]
   54cb8:	orr	w9, w9, #0x20
   54cbc:	str	w9, [x8, x0]
   54cc0:	b	552e4 <mpfr_log_ui@@Base+0x698>
   54cc4:	sub	x0, x29, #0x18
   54cc8:	bl	c400 <mpfr_mpz_init@plt>
   54ccc:	sub	x0, x29, #0x18
   54cd0:	mov	x1, x21
   54cd4:	bl	c110 <__gmpz_set_ui@plt>
   54cd8:	sub	x0, x29, #0x18
   54cdc:	sub	x1, x29, #0x18
   54ce0:	mov	w2, #0x3                   	// #3
   54ce4:	bl	c590 <__gmpz_mul_ui@plt>
   54ce8:	sub	x0, x29, #0x18
   54cec:	mov	w1, #0x2                   	// #2
   54cf0:	bl	d050 <__gmpz_sizeinbase@plt>
   54cf4:	mov	x25, x0
   54cf8:	sub	x20, x0, #0x2
   54cfc:	sub	x0, x29, #0x18
   54d00:	bl	c610 <mpfr_mpz_clear@plt>
   54d04:	str	xzr, [x19, #160]
   54d08:	ldr	x22, [x23]
   54d0c:	mov	w8, #0x1                   	// #1
   54d10:	lsl	x8, x8, x20
   54d14:	cmp	x20, #0x40
   54d18:	str	x20, [x19, #88]
   54d1c:	csel	x20, x8, xzr, cc  // cc = lo, ul, last
   54d20:	cmp	x22, #0x1
   54d24:	b.eq	55308 <mpfr_log_ui@@Base+0x6bc>  // b.none
   54d28:	b.le	5532c <mpfr_log_ui@@Base+0x6e0>
   54d2c:	ldr	x8, [x23]
   54d30:	mov	w9, #0x40                  	// #64
   54d34:	sub	x8, x8, #0x1
   54d38:	clz	x8, x8
   54d3c:	sub	x8, x9, x8
   54d40:	mov	x9, #0xfffffffffffffeff    	// #-257
   54d44:	movk	x9, #0x7fff, lsl #48
   54d48:	add	x8, x8, x22
   54d4c:	sub	x9, x9, #0xa
   54d50:	cmp	x8, x9
   54d54:	b.gt	55348 <mpfr_log_ui@@Base+0x6fc>
   54d58:	add	x9, x8, #0x9
   54d5c:	add	x10, x8, #0x48
   54d60:	cmp	x9, #0x0
   54d64:	csel	x9, x10, x9, lt  // lt = tstop
   54d68:	asr	x9, x9, #6
   54d6c:	sub	x26, x21, x20
   54d70:	add	x21, x8, #0xa
   54d74:	cmp	x8, #0x1f7
   54d78:	add	x20, x9, #0x1
   54d7c:	b.lt	54d94 <mpfr_log_ui@@Base+0x148>  // b.tstop
   54d80:	lsl	x0, x20, #4
   54d84:	str	x0, [x19, #168]
   54d88:	bl	d1f0 <mpfr_allocate_func@plt>
   54d8c:	str	x0, [x19, #176]
   54d90:	b	54da0 <mpfr_log_ui@@Base+0x154>
   54d94:	add	x8, x19, #0xa8
   54d98:	add	x8, x8, #0x10
   54d9c:	stp	xzr, x8, [x19, #168]
   54da0:	ldr	x8, [x19, #176]
   54da4:	mov	w9, #0x1                   	// #1
   54da8:	stur	x21, [x29, #-88]
   54dac:	stur	w9, [x29, #-48]
   54db0:	stur	x8, [x29, #-32]
   54db4:	add	x8, x8, x20, lsl #3
   54db8:	stp	x8, x21, [x29, #-64]
   54dbc:	stur	w9, [x29, #-80]
   54dc0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   54dc4:	ldr	x1, [x0, #2800]
   54dc8:	add	x0, x0, #0xaf0
   54dcc:	blr	x1
   54dd0:	mrs	x10, tpidr_el0
   54dd4:	ldr	w8, [x10, x0]
   54dd8:	str	w8, [x19, #24]
   54ddc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   54de0:	ldr	x1, [x0, #2736]
   54de4:	add	x0, x0, #0xab0
   54de8:	blr	x1
   54dec:	ldr	x9, [x10, x0]
   54df0:	mov	x8, x0
   54df4:	str	x9, [x19, #16]
   54df8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   54dfc:	ldr	x1, [x0, #2768]
   54e00:	add	x0, x0, #0xad0
   54e04:	blr	x1
   54e08:	ldr	x9, [x10, x0]
   54e0c:	str	x10, [x19, #96]
   54e10:	str	x9, [x19, #8]
   54e14:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   54e18:	str	x9, [x10, x8]
   54e1c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   54e20:	str	x8, [x10, x0]
   54e24:	cbz	x26, 54e48 <mpfr_log_ui@@Base+0x1fc>
   54e28:	tbnz	w26, #0, 54e48 <mpfr_log_ui@@Base+0x1fc>
   54e2c:	ldr	x28, [x19, #88]
   54e30:	cmp	x26, #0x0
   54e34:	cinc	x8, x26, lt  // lt = tstop
   54e38:	asr	x26, x8, #1
   54e3c:	sub	x28, x28, #0x1
   54e40:	tbz	w26, #0, 54e30 <mpfr_log_ui@@Base+0x1e4>
   54e44:	b	54e4c <mpfr_log_ui@@Base+0x200>
   54e48:	ldr	x28, [x19, #88]
   54e4c:	cmp	x26, #0x0
   54e50:	cneg	x9, x26, mi  // mi = first
   54e54:	stp	x9, x28, [x19, #48]
   54e58:	ldr	w9, [x19, #28]
   54e5c:	add	x8, x25, #0x3
   54e60:	mov	w10, #0x40                  	// #64
   54e64:	clz	x8, x8
   54e68:	cmp	w9, #0x0
   54e6c:	sub	x8, x10, x8
   54e70:	mov	w9, #0x40                  	// #64
   54e74:	str	x8, [x19, #40]
   54e78:	cset	w8, eq  // eq = none
   54e7c:	str	x9, [x19]
   54e80:	str	x8, [x19, #32]
   54e84:	stp	x25, x23, [x19, #72]
   54e88:	str	x26, [x19, #64]
   54e8c:	add	x0, x19, #0x80
   54e90:	mov	w1, #0x20                  	// #32
   54e94:	bl	cf60 <mpfr_init2@plt>
   54e98:	ldr	x1, [x19, #48]
   54e9c:	add	x0, x19, #0x80
   54ea0:	mov	w3, #0x2                   	// #2
   54ea4:	mov	x2, xzr
   54ea8:	bl	cac0 <mpfr_set_ui_2exp@plt>
   54eac:	add	x0, x19, #0x80
   54eb0:	add	x1, x19, #0x80
   54eb4:	mov	w2, #0x2                   	// #2
   54eb8:	bl	c670 <mpfr_log2@plt>
   54ebc:	add	x0, x19, #0x80
   54ec0:	add	x2, x19, #0x80
   54ec4:	mov	w3, #0x3                   	// #3
   54ec8:	mov	x1, x28
   54ecc:	bl	cf30 <mpfr_ui_sub@plt>
   54ed0:	add	x0, x19, #0x80
   54ed4:	add	x2, x19, #0x80
   54ed8:	mov	w3, #0x2                   	// #2
   54edc:	mov	x1, x21
   54ee0:	bl	c7b0 <mpfr_ui_div@plt>
   54ee4:	add	x0, x19, #0x80
   54ee8:	mov	w1, #0x2                   	// #2
   54eec:	bl	c100 <mpfr_get_ui@plt>
   54ef0:	cmp	x0, #0x2
   54ef4:	mov	w8, #0x2                   	// #2
   54ef8:	csel	x20, x0, x8, hi  // hi = pmore
   54efc:	sub	x8, x20, #0x1
   54f00:	clz	x22, x8
   54f04:	mov	w8, #0x41                  	// #65
   54f08:	add	x0, x19, #0x80
   54f0c:	sub	x24, x8, x22
   54f10:	bl	c4f0 <mpfr_clear@plt>
   54f14:	add	x8, x24, x24, lsl #1
   54f18:	lsl	x1, x8, #4
   54f1c:	cmp	x1, #0x4, lsl #12
   54f20:	stp	x20, x21, [x19, #104]
   54f24:	b.hi	55160 <mpfr_log_ui@@Base+0x514>  // b.pmore
   54f28:	add	x9, x1, #0xf
   54f2c:	mov	x8, sp
   54f30:	and	x9, x9, #0xfffffffffffffff0
   54f34:	sub	x27, x8, x9
   54f38:	mov	sp, x27
   54f3c:	lsl	x8, x24, #4
   54f40:	add	x20, x27, x8
   54f44:	add	x23, x20, x8
   54f48:	cbz	x24, 54f88 <mpfr_log_ui@@Base+0x33c>
   54f4c:	mov	w8, #0x820                 	// #2080
   54f50:	sub	x26, x8, x22, lsl #5
   54f54:	mov	w8, #0x410                 	// #1040
   54f58:	sub	x25, x22, #0x41
   54f5c:	sub	x21, x8, x22, lsl #4
   54f60:	mov	x28, x27
   54f64:	mov	x0, x28
   54f68:	bl	c400 <mpfr_mpz_init@plt>
   54f6c:	add	x0, x28, x21
   54f70:	bl	c400 <mpfr_mpz_init@plt>
   54f74:	add	x0, x28, x26
   54f78:	bl	c400 <mpfr_mpz_init@plt>
   54f7c:	adds	x25, x25, #0x1
   54f80:	add	x28, x28, #0x10
   54f84:	b.cc	54f64 <mpfr_log_ui@@Base+0x318>  // b.lo, b.ul, b.last
   54f88:	add	x1, x19, #0x78
   54f8c:	mov	w4, #0x1                   	// #1
   54f90:	str	wzr, [sp, #-16]!
   54f94:	ldp	x28, x6, [x19, #56]
   54f98:	ldr	x5, [x19, #104]
   54f9c:	mov	x0, x27
   54fa0:	mov	x2, x20
   54fa4:	mov	x3, x23
   54fa8:	mov	x7, x28
   54fac:	bl	5534c <mpfr_log_ui@@Base+0x700>
   54fb0:	add	sp, sp, #0x10
   54fb4:	sub	x0, x29, #0x38
   54fb8:	mov	x1, x23
   54fbc:	mov	w2, wzr
   54fc0:	bl	c6e0 <mpfr_set_z@plt>
   54fc4:	sub	x0, x29, #0x58
   54fc8:	mov	x1, x20
   54fcc:	mov	w2, wzr
   54fd0:	bl	c6e0 <mpfr_set_z@plt>
   54fd4:	ldr	x2, [x19, #120]
   54fd8:	sub	x0, x29, #0x58
   54fdc:	sub	x1, x29, #0x58
   54fe0:	mov	w3, wzr
   54fe4:	bl	c780 <mpfr_mul_2ui@plt>
   54fe8:	sub	x0, x29, #0x38
   54fec:	sub	x1, x29, #0x38
   54ff0:	sub	x2, x29, #0x58
   54ff4:	mov	w3, wzr
   54ff8:	bl	caf0 <mpfr_div@plt>
   54ffc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55000:	ldr	x1, [x0, #2784]
   55004:	add	x0, x0, #0xae0
   55008:	blr	x1
   5500c:	ldr	x8, [x19, #96]
   55010:	mov	w2, wzr
   55014:	add	x1, x8, x0
   55018:	sub	x0, x29, #0x58
   5501c:	bl	c840 <mpfr_cache@plt>
   55020:	ldr	x2, [x19, #88]
   55024:	sub	x0, x29, #0x58
   55028:	sub	x1, x29, #0x58
   5502c:	mov	w3, wzr
   55030:	bl	bea0 <mpfr_mul_ui@plt>
   55034:	sub	x0, x29, #0x38
   55038:	sub	x1, x29, #0x38
   5503c:	sub	x2, x29, #0x58
   55040:	mov	w3, wzr
   55044:	bl	c640 <mpfr_add@plt>
   55048:	cbz	x24, 55084 <mpfr_log_ui@@Base+0x438>
   5504c:	mov	w8, #0x820                 	// #2080
   55050:	sub	x21, x8, x22, lsl #5
   55054:	mov	w8, #0x410                 	// #1040
   55058:	sub	x20, x22, #0x41
   5505c:	sub	x22, x8, x22, lsl #4
   55060:	mov	x0, x27
   55064:	bl	c610 <mpfr_mpz_clear@plt>
   55068:	add	x0, x27, x22
   5506c:	bl	c610 <mpfr_mpz_clear@plt>
   55070:	add	x0, x27, x21
   55074:	bl	c610 <mpfr_mpz_clear@plt>
   55078:	adds	x20, x20, #0x1
   5507c:	add	x27, x27, #0x10
   55080:	b.cc	55060 <mpfr_log_ui@@Base+0x414>  // b.lo, b.ul, b.last
   55084:	ldp	x25, x23, [x19, #72]
   55088:	ldr	x21, [x19, #112]
   5508c:	cmn	x25, #0x3
   55090:	b.eq	55170 <mpfr_log_ui@@Base+0x524>  // b.none
   55094:	mov	x20, #0xfffffffffffffeff    	// #-257
   55098:	cmn	x25, #0x4
   5509c:	movk	x20, #0x7fff, lsl #48
   550a0:	b.eq	55180 <mpfr_log_ui@@Base+0x534>  // b.none
   550a4:	ldr	x8, [x19, #40]
   550a8:	ldur	x9, [x29, #-40]
   550ac:	add	x10, x20, #0x105
   550b0:	cmp	x9, x10
   550b4:	b.lt	55100 <mpfr_log_ui@@Base+0x4b4>  // b.tstop
   550b8:	ldur	x9, [x29, #-56]
   550bc:	add	w8, w8, #0x1
   550c0:	sub	x2, x21, x8
   550c4:	ldr	x10, [x23]
   550c8:	sub	x8, x9, #0x1
   550cc:	add	x9, x9, #0x3e
   550d0:	cmp	x8, #0x0
   550d4:	csel	x8, x9, x8, lt  // lt = tstop
   550d8:	asr	x8, x8, #6
   550dc:	add	x1, x8, #0x1
   550e0:	ldr	x8, [x19, #32]
   550e4:	ldur	x0, [x29, #-32]
   550e8:	add	x3, x10, x8
   550ec:	bl	c830 <mpfr_round_p@plt>
   550f0:	cbz	w0, 55100 <mpfr_log_ui@@Base+0x4b4>
   550f4:	mov	w8, wzr
   550f8:	tbnz	w8, #0, 54e8c <mpfr_log_ui@@Base+0x240>
   550fc:	b	551f0 <mpfr_log_ui@@Base+0x5a4>
   55100:	ldr	x9, [x19]
   55104:	sub	x8, x20, x21
   55108:	cmp	x9, x8
   5510c:	b.gt	551d0 <mpfr_log_ui@@Base+0x584>
   55110:	add	x21, x21, x9
   55114:	cmp	x21, #0x0
   55118:	cinc	x8, x21, lt  // lt = tstop
   5511c:	cmp	x21, x20
   55120:	b.gt	55348 <mpfr_log_ui@@Base+0x6fc>
   55124:	asr	x8, x8, #1
   55128:	str	x8, [x19]
   5512c:	sub	x8, x21, #0x1
   55130:	add	x9, x21, #0x3e
   55134:	cmp	x8, #0x0
   55138:	ldr	x1, [x19, #168]
   5513c:	csel	x8, x9, x8, lt  // lt = tstop
   55140:	asr	x8, x8, #6
   55144:	add	x20, x8, #0x1
   55148:	lsl	x2, x20, #4
   5514c:	str	x2, [x19, #168]
   55150:	cbz	x1, 5519c <mpfr_log_ui@@Base+0x550>
   55154:	ldr	x0, [x19, #176]
   55158:	bl	c660 <mpfr_reallocate_func@plt>
   5515c:	b	551a4 <mpfr_log_ui@@Base+0x558>
   55160:	add	x0, x19, #0xa0
   55164:	bl	c220 <mpfr_tmp_allocate@plt>
   55168:	mov	x27, x0
   5516c:	b	54f3c <mpfr_log_ui@@Base+0x2f0>
   55170:	mov	x20, #0xfffffffffffffeff    	// #-257
   55174:	mov	x8, xzr
   55178:	movk	x20, #0x7fff, lsl #48
   5517c:	b	550a8 <mpfr_log_ui@@Base+0x45c>
   55180:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   55184:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   55188:	mov	w1, #0xda                  	// #218
   5518c:	add	x0, x0, #0x866
   55190:	add	x2, x2, #0x86f
   55194:	bl	d030 <mpfr_assert_fail@plt>
   55198:	b	550a4 <mpfr_log_ui@@Base+0x458>
   5519c:	mov	x0, x2
   551a0:	bl	d1f0 <mpfr_allocate_func@plt>
   551a4:	mov	x9, x0
   551a8:	mov	w8, #0x1                   	// #1
   551ac:	stur	x9, [x29, #-32]
   551b0:	add	x9, x9, x20, lsl #3
   551b4:	str	x0, [x19, #176]
   551b8:	stur	x21, [x29, #-88]
   551bc:	stur	w8, [x29, #-48]
   551c0:	stp	x9, x21, [x29, #-64]
   551c4:	stur	w8, [x29, #-80]
   551c8:	tbnz	w8, #0, 54e8c <mpfr_log_ui@@Base+0x240>
   551cc:	b	551f0 <mpfr_log_ui@@Base+0x5a4>
   551d0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   551d4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   551d8:	mov	w1, #0xde                  	// #222
   551dc:	add	x0, x0, #0x866
   551e0:	add	x2, x2, #0xa3e
   551e4:	bl	d030 <mpfr_assert_fail@plt>
   551e8:	ldr	x9, [x19]
   551ec:	b	55110 <mpfr_log_ui@@Base+0x4c4>
   551f0:	ldur	w3, [x29, #-48]
   551f4:	ldr	w2, [x19, #28]
   551f8:	sub	x1, x29, #0x38
   551fc:	mov	x0, x23
   55200:	bl	cb70 <mpfr_set4@plt>
   55204:	ldr	x1, [x19, #168]
   55208:	mov	w21, w0
   5520c:	cbz	x1, 55218 <mpfr_log_ui@@Base+0x5cc>
   55210:	ldr	x0, [x19, #176]
   55214:	bl	d120 <mpfr_free_func@plt>
   55218:	ldr	x0, [x19, #160]
   5521c:	cbnz	x0, 55310 <mpfr_log_ui@@Base+0x6c4>
   55220:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55224:	ldr	x1, [x0, #2800]
   55228:	add	x0, x0, #0xaf0
   5522c:	blr	x1
   55230:	ldr	x8, [x19, #96]
   55234:	ldr	w9, [x19, #24]
   55238:	str	w9, [x8, x0]
   5523c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55240:	ldr	x1, [x0, #2736]
   55244:	add	x0, x0, #0xab0
   55248:	blr	x1
   5524c:	ldr	x10, [x19, #16]
   55250:	str	x10, [x8, x0]
   55254:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55258:	ldr	x1, [x0, #2768]
   5525c:	add	x0, x0, #0xad0
   55260:	blr	x1
   55264:	ldr	x11, [x19, #8]
   55268:	str	x11, [x8, x0]
   5526c:	ldr	x8, [x23, #16]
   55270:	cmp	x8, x11
   55274:	b.gt	55318 <mpfr_log_ui@@Base+0x6cc>
   55278:	cmp	x8, x10
   5527c:	b.lt	55318 <mpfr_log_ui@@Base+0x6cc>  // b.tstop
   55280:	cbz	w21, 552e4 <mpfr_log_ui@@Base+0x698>
   55284:	orr	w8, w9, #0x8
   55288:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5528c:	ldr	x1, [x0, #2800]
   55290:	add	x0, x0, #0xaf0
   55294:	blr	x1
   55298:	ldr	x9, [x19, #96]
   5529c:	str	w8, [x9, x0]
   552a0:	b	552e4 <mpfr_log_ui@@Base+0x698>
   552a4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   552a8:	mov	w9, #0x1                   	// #1
   552ac:	mov	w21, wzr
   552b0:	str	x8, [x23, #16]
   552b4:	str	w9, [x23, #8]
   552b8:	b	552e4 <mpfr_log_ui@@Base+0x698>
   552bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   552c0:	ldr	x1, [x0, #2784]
   552c4:	add	x0, x0, #0xae0
   552c8:	blr	x1
   552cc:	mrs	x8, tpidr_el0
   552d0:	ldr	w2, [x19, #28]
   552d4:	add	x1, x8, x0
   552d8:	mov	x0, x23
   552dc:	bl	c840 <mpfr_cache@plt>
   552e0:	mov	w21, w0
   552e4:	mov	w0, w21
   552e8:	mov	sp, x29
   552ec:	ldp	x20, x19, [sp, #80]
   552f0:	ldp	x22, x21, [sp, #64]
   552f4:	ldp	x24, x23, [sp, #48]
   552f8:	ldp	x26, x25, [sp, #32]
   552fc:	ldp	x28, x27, [sp, #16]
   55300:	ldp	x29, x30, [sp], #96
   55304:	ret
   55308:	mov	x8, xzr
   5530c:	b	54d40 <mpfr_log_ui@@Base+0xf4>
   55310:	bl	c8d0 <mpfr_tmp_free@plt>
   55314:	b	55220 <mpfr_log_ui@@Base+0x5d4>
   55318:	ldr	w2, [x19, #28]
   5531c:	mov	x0, x23
   55320:	mov	w1, w21
   55324:	bl	d020 <mpfr_check_range@plt>
   55328:	b	552e0 <mpfr_log_ui@@Base+0x694>
   5532c:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   55330:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   55334:	add	x0, x0, #0x866
   55338:	add	x2, x2, #0x19f
   5533c:	mov	w1, #0x95                  	// #149
   55340:	bl	d030 <mpfr_assert_fail@plt>
   55344:	b	54d2c <mpfr_log_ui@@Base+0xe0>
   55348:	bl	cdd0 <mpfr_abort_prec_max@plt>
   5534c:	sub	sp, sp, #0x80
   55350:	add	x8, x4, #0x1
   55354:	stp	x26, x25, [sp, #64]
   55358:	stp	x24, x23, [sp, #80]
   5535c:	stp	x22, x21, [sp, #96]
   55360:	stp	x20, x19, [sp, #112]
   55364:	mov	x24, x7
   55368:	mov	x26, x6
   5536c:	mov	x23, x4
   55370:	mov	x22, x3
   55374:	mov	x19, x2
   55378:	mov	x25, x1
   5537c:	cmp	x8, x5
   55380:	mov	x21, x0
   55384:	stp	x29, x30, [sp, #32]
   55388:	stp	x28, x27, [sp, #48]
   5538c:	add	x29, sp, #0x20
   55390:	b.ne	553c4 <mpfr_log_ui@@Base+0x778>  // b.any
   55394:	cmp	x23, #0x1
   55398:	cneg	x1, x26, ne  // ne = any
   5539c:	mov	x0, x21
   553a0:	bl	d060 <__gmpz_set_si@plt>
   553a4:	mov	x0, x19
   553a8:	mov	x1, x23
   553ac:	str	x24, [x25]
   553b0:	bl	c110 <__gmpz_set_ui@plt>
   553b4:	mov	x0, x22
   553b8:	mov	x1, x21
   553bc:	bl	c410 <__gmpz_set@plt>
   553c0:	b	554cc <mpfr_log_ui@@Base+0x880>
   553c4:	mov	x27, x5
   553c8:	lsr	x8, x5, #1
   553cc:	and	w9, w23, w27
   553d0:	ldr	w20, [x29, #96]
   553d4:	add	x8, x8, x23, lsr #1
   553d8:	and	x9, x9, #0x1
   553dc:	add	x28, x8, x9
   553e0:	mov	w8, #0x1                   	// #1
   553e4:	mov	x0, x21
   553e8:	mov	x1, x25
   553ec:	mov	x2, x19
   553f0:	mov	x3, x22
   553f4:	mov	x4, x23
   553f8:	mov	x5, x28
   553fc:	mov	x6, x26
   55400:	mov	x7, x24
   55404:	str	w8, [sp]
   55408:	str	x25, [sp, #16]
   5540c:	bl	5534c <mpfr_log_ui@@Base+0x700>
   55410:	add	x23, x19, #0x10
   55414:	add	x25, x22, #0x10
   55418:	add	x0, x21, #0x10
   5541c:	sub	x1, x29, #0x8
   55420:	mov	x2, x23
   55424:	mov	x3, x25
   55428:	mov	x4, x28
   5542c:	mov	x5, x27
   55430:	mov	x6, x26
   55434:	mov	x7, x24
   55438:	str	w20, [sp]
   5543c:	str	x0, [sp, #8]
   55440:	bl	5534c <mpfr_log_ui@@Base+0x700>
   55444:	mov	x0, x25
   55448:	mov	x1, x25
   5544c:	mov	x2, x21
   55450:	bl	c460 <__gmpz_mul@plt>
   55454:	mov	x0, x25
   55458:	mov	x1, x25
   5545c:	mov	x2, x19
   55460:	bl	c460 <__gmpz_mul@plt>
   55464:	mov	x0, x22
   55468:	mov	x1, x22
   5546c:	mov	x2, x23
   55470:	bl	c460 <__gmpz_mul@plt>
   55474:	ldur	x24, [x29, #-8]
   55478:	mov	x0, x22
   5547c:	mov	x1, x22
   55480:	mov	x2, x24
   55484:	bl	c6a0 <__gmpz_mul_2exp@plt>
   55488:	mov	x0, x22
   5548c:	mov	x1, x22
   55490:	mov	x2, x25
   55494:	bl	ceb0 <__gmpz_add@plt>
   55498:	cbz	w20, 554ac <mpfr_log_ui@@Base+0x860>
   5549c:	ldr	x2, [sp, #8]
   554a0:	mov	x0, x21
   554a4:	mov	x1, x21
   554a8:	bl	c460 <__gmpz_mul@plt>
   554ac:	ldr	x9, [sp, #16]
   554b0:	mov	x0, x19
   554b4:	mov	x1, x19
   554b8:	mov	x2, x23
   554bc:	ldr	x8, [x9]
   554c0:	add	x8, x8, x24
   554c4:	str	x8, [x9]
   554c8:	bl	c460 <__gmpz_mul@plt>
   554cc:	ldp	x20, x19, [sp, #112]
   554d0:	ldp	x22, x21, [sp, #96]
   554d4:	ldp	x24, x23, [sp, #80]
   554d8:	ldp	x26, x25, [sp, #64]
   554dc:	ldp	x28, x27, [sp, #48]
   554e0:	ldp	x29, x30, [sp, #32]
   554e4:	add	sp, sp, #0x80
   554e8:	ret

00000000000554ec <mpfr_gamma_inc@@Base>:
   554ec:	sub	sp, sp, #0x1a0
   554f0:	stp	x29, x30, [sp, #320]
   554f4:	stp	x28, x27, [sp, #336]
   554f8:	stp	x26, x25, [sp, #352]
   554fc:	stp	x24, x23, [sp, #368]
   55500:	stp	x22, x21, [sp, #384]
   55504:	stp	x20, x19, [sp, #400]
   55508:	ldr	x8, [x1, #16]
   5550c:	mov	x27, #0x2                   	// #2
   55510:	movk	x27, #0x8000, lsl #48
   55514:	add	x9, x27, #0x2
   55518:	mov	w19, w3
   5551c:	mov	x21, x2
   55520:	mov	x22, x1
   55524:	cmp	x8, x9
   55528:	add	x29, sp, #0x140
   5552c:	str	x0, [sp, #32]
   55530:	b.lt	55b44 <mpfr_gamma_inc@@Base+0x658>  // b.tstop
   55534:	ldr	x10, [x21, #16]
   55538:	cmp	x10, x9
   5553c:	b.lt	55b44 <mpfr_gamma_inc@@Base+0x658>  // b.tstop
   55540:	ldr	w8, [x21, #8]
   55544:	tbnz	w8, #31, 55b58 <mpfr_gamma_inc@@Base+0x66c>
   55548:	mov	x0, x22
   5554c:	bl	c600 <mpfr_integer_p@plt>
   55550:	cbz	w0, 5555c <mpfr_gamma_inc@@Base+0x70>
   55554:	ldr	w8, [x22, #8]
   55558:	tbnz	w8, #31, 55b28 <mpfr_gamma_inc@@Base+0x63c>
   5555c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55560:	ldr	x1, [x0, #2800]
   55564:	add	x0, x0, #0xaf0
   55568:	blr	x1
   5556c:	mrs	x24, tpidr_el0
   55570:	ldr	w11, [x24, x0]
   55574:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55578:	ldr	x1, [x0, #2736]
   5557c:	add	x0, x0, #0xab0
   55580:	blr	x1
   55584:	ldr	x12, [x24, x0]
   55588:	mov	x8, x0
   5558c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55590:	ldr	x1, [x0, #2768]
   55594:	add	x0, x0, #0xad0
   55598:	blr	x1
   5559c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   555a0:	str	x9, [x24, x8]
   555a4:	ldr	x8, [sp, #32]
   555a8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   555ac:	ldr	x13, [x24, x0]
   555b0:	str	x10, [x24, x0]
   555b4:	ldr	x8, [x8]
   555b8:	sub	x9, x27, #0x110
   555bc:	cmp	x8, x9
   555c0:	b.gt	55d74 <mpfr_gamma_inc@@Base+0x888>
   555c4:	add	x9, x8, #0xc
   555c8:	add	x10, x8, #0x4b
   555cc:	cmp	x9, #0x0
   555d0:	csel	x9, x10, x9, lt  // lt = tstop
   555d4:	asr	x9, x9, #6
   555d8:	add	x23, x8, #0xd
   555dc:	cmp	x8, #0x1f4
   555e0:	add	x20, x9, #0x1
   555e4:	str	w11, [sp, #24]
   555e8:	stp	x13, x12, [sp, #8]
   555ec:	b.lt	55604 <mpfr_gamma_inc@@Base+0x118>  // b.tstop
   555f0:	lsl	x0, x20, #4
   555f4:	str	x0, [sp, #72]
   555f8:	bl	d1f0 <mpfr_allocate_func@plt>
   555fc:	str	x0, [sp, #80]
   55600:	b	55610 <mpfr_gamma_inc@@Base+0x124>
   55604:	add	x8, sp, #0x48
   55608:	add	x8, x8, #0x10
   5560c:	stp	xzr, x8, [sp, #72]
   55610:	ldr	x8, [sp, #80]
   55614:	mov	w9, #0x1                   	// #1
   55618:	sub	x0, x29, #0x68
   5561c:	mov	w1, #0x2                   	// #2
   55620:	stur	x8, [x29, #-16]
   55624:	add	x8, x8, x20, lsl #3
   55628:	stur	x23, [x29, #-72]
   5562c:	stur	w9, [x29, #-32]
   55630:	stp	x8, x23, [x29, #-48]
   55634:	stur	w9, [x29, #-64]
   55638:	bl	cf60 <mpfr_init2@plt>
   5563c:	cmp	w19, #0x0
   55640:	mov	w8, #0x40                  	// #64
   55644:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   55648:	cset	w26, eq  // eq = none
   5564c:	str	w19, [sp, #28]
   55650:	str	x8, [sp]
   55654:	ldr	x8, [x22, #16]
   55658:	cmp	x8, #0x0
   5565c:	b.le	55670 <mpfr_gamma_inc@@Base+0x184>
   55660:	ldr	x9, [x22]
   55664:	cmp	x8, x9
   55668:	csel	x8, x8, x9, gt
   5566c:	b	5569c <mpfr_gamma_inc@@Base+0x1b0>
   55670:	ldr	x9, [x22]
   55674:	mov	w10, #0x1                   	// #1
   55678:	sub	x8, x10, x8
   5567c:	sub	x9, x27, x9
   55680:	sub	x9, x9, #0x103
   55684:	cmp	x8, x9
   55688:	b.gt	55a38 <mpfr_gamma_inc@@Base+0x54c>
   5568c:	ldr	x8, [x22]
   55690:	ldr	x9, [x22, #16]
   55694:	sub	x8, x8, x9
   55698:	add	x8, x8, #0x1
   5569c:	add	x1, x8, #0x1
   556a0:	sub	x0, x29, #0x68
   556a4:	bl	c330 <mpfr_set_prec@plt>
   556a8:	ldr	x8, [x22, #16]
   556ac:	sub	x0, x29, #0x48
   556b0:	mov	w1, #0x1                   	// #1
   556b4:	mov	w3, #0x4                   	// #4
   556b8:	cmp	x8, #0x1
   556bc:	mov	x2, x22
   556c0:	csinc	x28, x8, xzr, gt
   556c4:	bl	c7b0 <mpfr_ui_div@plt>
   556c8:	ldur	w3, [x29, #-64]
   556cc:	sub	x0, x29, #0x28
   556d0:	sub	x1, x29, #0x48
   556d4:	mov	w2, #0x4                   	// #4
   556d8:	bl	cb70 <mpfr_set4@plt>
   556dc:	ldr	w8, [x22, #8]
   556e0:	tbz	w8, #31, 55704 <mpfr_gamma_inc@@Base+0x218>
   556e4:	add	x0, sp, #0x28
   556e8:	mov	w1, #0x20                  	// #32
   556ec:	bl	cf60 <mpfr_init2@plt>
   556f0:	add	x0, sp, #0x28
   556f4:	sub	x1, x29, #0x28
   556f8:	mov	w2, #0x2                   	// #2
   556fc:	mov	w3, #0x1                   	// #1
   55700:	bl	cb70 <mpfr_set4@plt>
   55704:	mov	x25, #0xfffffffffffffff8    	// #-8
   55708:	mov	w27, #0x1                   	// #1
   5570c:	b	55718 <mpfr_gamma_inc@@Base+0x22c>
   55710:	add	x27, x27, #0x1
   55714:	sub	x25, x25, #0x2
   55718:	sub	x0, x29, #0x48
   5571c:	sub	x1, x29, #0x48
   55720:	mov	w3, #0x2                   	// #2
   55724:	mov	x2, x21
   55728:	bl	c1b0 <mpfr_mul@plt>
   5572c:	sub	x0, x29, #0x68
   55730:	mov	w3, #0x1                   	// #1
   55734:	mov	x1, x22
   55738:	mov	x2, x27
   5573c:	bl	c710 <mpfr_add_ui@plt>
   55740:	sub	x0, x29, #0x48
   55744:	sub	x1, x29, #0x48
   55748:	sub	x2, x29, #0x68
   5574c:	mov	w3, #0x4                   	// #4
   55750:	bl	caf0 <mpfr_div@plt>
   55754:	sub	x0, x29, #0x28
   55758:	sub	x1, x29, #0x28
   5575c:	sub	x2, x29, #0x48
   55760:	mov	w3, #0x1                   	// #1
   55764:	bl	c640 <mpfr_add@plt>
   55768:	ldur	x8, [x29, #-24]
   5576c:	ldur	x9, [x29, #-56]
   55770:	ldr	w10, [x22, #8]
   55774:	cmp	x8, x20
   55778:	csel	x19, x9, x8, eq  // eq = none
   5577c:	tbz	w10, #31, 557a8 <mpfr_gamma_inc@@Base+0x2bc>
   55780:	ldur	w8, [x29, #-64]
   55784:	add	x0, sp, #0x28
   55788:	add	x1, sp, #0x28
   5578c:	sub	x2, x29, #0x48
   55790:	mov	w3, #0x2                   	// #2
   55794:	cmp	w8, #0x1
   55798:	b.lt	557a4 <mpfr_gamma_inc@@Base+0x2b8>  // b.tstop
   5579c:	bl	c640 <mpfr_add@plt>
   557a0:	b	557a8 <mpfr_gamma_inc@@Base+0x2bc>
   557a4:	bl	bfd0 <mpfr_sub@plt>
   557a8:	ldur	x9, [x29, #-56]
   557ac:	ldur	w8, [x29, #-96]
   557b0:	add	x9, x9, x23
   557b4:	cmp	x9, x19
   557b8:	b.gt	557d8 <mpfr_gamma_inc@@Base+0x2ec>
   557bc:	cmp	w8, #0x1
   557c0:	b.lt	557d8 <mpfr_gamma_inc@@Base+0x2ec>  // b.tstop
   557c4:	ldr	x8, [x21, #16]
   557c8:	ldur	x9, [x29, #-88]
   557cc:	add	x8, x8, #0x1
   557d0:	cmp	x8, x9
   557d4:	b.lt	557fc <mpfr_gamma_inc@@Base+0x310>  // b.tstop
   557d8:	ldur	x19, [x29, #-88]
   557dc:	cmp	x19, x28
   557e0:	b.le	55710 <mpfr_gamma_inc@@Base+0x224>
   557e4:	ldur	x8, [x29, #-104]
   557e8:	sub	x0, x29, #0x68
   557ec:	add	x1, x8, #0x1
   557f0:	bl	c330 <mpfr_set_prec@plt>
   557f4:	mov	x28, x19
   557f8:	b	55710 <mpfr_gamma_inc@@Base+0x224>
   557fc:	ldr	w8, [x22, #8]
   55800:	tbnz	w8, #31, 5580c <mpfr_gamma_inc@@Base+0x320>
   55804:	mov	x28, xzr
   55808:	b	55820 <mpfr_gamma_inc@@Base+0x334>
   5580c:	ldr	x8, [sp, #56]
   55810:	ldur	x9, [x29, #-24]
   55814:	add	x0, sp, #0x28
   55818:	sub	x28, x8, x9
   5581c:	bl	c4f0 <mpfr_clear@plt>
   55820:	sub	x0, x29, #0x48
   55824:	mov	w2, #0x1                   	// #1
   55828:	mov	x1, x21
   5582c:	bl	cc20 <mpfr_exp@plt>
   55830:	sub	x0, x29, #0x28
   55834:	sub	x1, x29, #0x28
   55838:	sub	x2, x29, #0x48
   5583c:	mov	w3, #0x1                   	// #1
   55840:	bl	caf0 <mpfr_div@plt>
   55844:	sub	x0, x29, #0x48
   55848:	mov	w3, #0x1                   	// #1
   5584c:	mov	x1, x21
   55850:	mov	x2, x22
   55854:	bl	c1f0 <mpfr_pow@plt>
   55858:	sub	x0, x29, #0x28
   5585c:	sub	x1, x29, #0x28
   55860:	sub	x2, x29, #0x48
   55864:	mov	w3, #0x1                   	// #1
   55868:	bl	c1b0 <mpfr_mul@plt>
   5586c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55870:	ldr	x1, [x0, #2800]
   55874:	add	x0, x0, #0xaf0
   55878:	blr	x1
   5587c:	mov	x27, x0
   55880:	str	wzr, [x24, x0]
   55884:	sub	x0, x29, #0x48
   55888:	mov	w2, #0x1                   	// #1
   5588c:	mov	x1, x22
   55890:	bl	cc90 <mpfr_gamma@plt>
   55894:	ldrb	w8, [x24, x27]
   55898:	tbnz	w8, #1, 559e8 <mpfr_gamma_inc@@Base+0x4fc>
   5589c:	ldur	x27, [x29, #-56]
   558a0:	ldur	x8, [x29, #-24]
   558a4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   558a8:	ldr	x1, [x0, #2736]
   558ac:	add	x0, x0, #0xab0
   558b0:	blr	x1
   558b4:	ldr	x9, [x24, x0]
   558b8:	cmp	x8, x20
   558bc:	sub	x0, x29, #0x28
   558c0:	sub	x1, x29, #0x48
   558c4:	sub	x2, x29, #0x28
   558c8:	mov	w3, #0x1                   	// #1
   558cc:	csel	x19, x9, x8, eq  // eq = none
   558d0:	bl	bfd0 <mpfr_sub@plt>
   558d4:	ldur	x8, [x29, #-24]
   558d8:	neg	x9, x25
   558dc:	clz	x9, x9
   558e0:	mov	w10, #0x41                  	// #65
   558e4:	cmp	x8, x20
   558e8:	sub	x10, x10, x9
   558ec:	csel	x9, x27, x8, eq  // eq = none
   558f0:	cmp	x25, #0x0
   558f4:	csinc	x10, x10, xzr, ne  // ne = any
   558f8:	add	x10, x10, x28
   558fc:	add	x10, x10, x19
   55900:	cmp	x27, x10
   55904:	b.ne	55914 <mpfr_gamma_inc@@Base+0x428>  // b.any
   55908:	sub	x9, x27, x9
   5590c:	add	x9, x9, #0x2
   55910:	b	55924 <mpfr_gamma_inc@@Base+0x438>
   55914:	csel	x10, x27, x10, gt
   55918:	subs	x9, x10, x9
   5591c:	mov	w10, #0x2                   	// #2
   55920:	csinc	x9, x10, x9, le
   55924:	mov	x27, #0x2                   	// #2
   55928:	movk	x27, #0x8000, lsl #48
   5592c:	add	x10, x27, #0x2
   55930:	cmp	x8, x10
   55934:	b.lt	5597c <mpfr_gamma_inc@@Base+0x490>  // b.tstop
   55938:	ldur	x8, [x29, #-40]
   5593c:	sub	x2, x23, x9
   55940:	ldr	x9, [sp, #32]
   55944:	ldur	x0, [x29, #-16]
   55948:	sub	x10, x8, #0x1
   5594c:	add	x8, x8, #0x3e
   55950:	ldr	x9, [x9]
   55954:	cmp	x10, #0x0
   55958:	csel	x8, x8, x10, lt  // lt = tstop
   5595c:	asr	x8, x8, #6
   55960:	add	x1, x8, #0x1
   55964:	add	x3, x9, x26
   55968:	bl	c830 <mpfr_round_p@plt>
   5596c:	cbz	w0, 5597c <mpfr_gamma_inc@@Base+0x490>
   55970:	mov	w8, wzr
   55974:	tbnz	w8, #0, 55654 <mpfr_gamma_inc@@Base+0x168>
   55978:	b	55a74 <mpfr_gamma_inc@@Base+0x588>
   5597c:	ldr	x9, [sp]
   55980:	sub	x8, x27, x23
   55984:	sub	x8, x8, #0x103
   55988:	cmp	x9, x8
   5598c:	mov	x8, x9
   55990:	b.gt	55a54 <mpfr_gamma_inc@@Base+0x568>
   55994:	add	x23, x23, x8
   55998:	sub	x9, x27, #0x103
   5599c:	cmp	x23, #0x0
   559a0:	cinc	x8, x23, lt  // lt = tstop
   559a4:	cmp	x23, x9
   559a8:	b.gt	55d74 <mpfr_gamma_inc@@Base+0x888>
   559ac:	asr	x8, x8, #1
   559b0:	str	x8, [sp]
   559b4:	sub	x8, x23, #0x1
   559b8:	add	x9, x23, #0x3e
   559bc:	cmp	x8, #0x0
   559c0:	ldr	x1, [sp, #72]
   559c4:	csel	x8, x9, x8, lt  // lt = tstop
   559c8:	asr	x8, x8, #6
   559cc:	add	x25, x8, #0x1
   559d0:	lsl	x2, x25, #4
   559d4:	str	x2, [sp, #72]
   559d8:	cbz	x1, 55a04 <mpfr_gamma_inc@@Base+0x518>
   559dc:	ldr	x0, [sp, #80]
   559e0:	bl	c660 <mpfr_reallocate_func@plt>
   559e4:	b	55a0c <mpfr_gamma_inc@@Base+0x520>
   559e8:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   559ec:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   559f0:	mov	w1, #0x122                 	// #290
   559f4:	add	x0, x0, #0x87b
   559f8:	add	x2, x2, #0x8ea
   559fc:	bl	d030 <mpfr_assert_fail@plt>
   55a00:	b	5589c <mpfr_gamma_inc@@Base+0x3b0>
   55a04:	mov	x0, x2
   55a08:	bl	d1f0 <mpfr_allocate_func@plt>
   55a0c:	mov	x9, x0
   55a10:	mov	w8, #0x1                   	// #1
   55a14:	stur	x9, [x29, #-16]
   55a18:	add	x9, x9, x25, lsl #3
   55a1c:	str	x0, [sp, #80]
   55a20:	stur	x23, [x29, #-72]
   55a24:	stur	w8, [x29, #-32]
   55a28:	stp	x9, x23, [x29, #-48]
   55a2c:	stur	w8, [x29, #-64]
   55a30:	tbnz	w8, #0, 55654 <mpfr_gamma_inc@@Base+0x168>
   55a34:	b	55a74 <mpfr_gamma_inc@@Base+0x588>
   55a38:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   55a3c:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   55a40:	mov	w1, #0xd2                  	// #210
   55a44:	add	x0, x0, #0x87b
   55a48:	add	x2, x2, #0x887
   55a4c:	bl	d030 <mpfr_assert_fail@plt>
   55a50:	b	5568c <mpfr_gamma_inc@@Base+0x1a0>
   55a54:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   55a58:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   55a5c:	mov	w1, #0x148                 	// #328
   55a60:	add	x0, x0, #0x87b
   55a64:	add	x2, x2, #0xa3e
   55a68:	bl	d030 <mpfr_assert_fail@plt>
   55a6c:	ldr	x8, [sp]
   55a70:	b	55994 <mpfr_gamma_inc@@Base+0x4a8>
   55a74:	sub	x0, x29, #0x68
   55a78:	bl	c4f0 <mpfr_clear@plt>
   55a7c:	ldr	w19, [sp, #28]
   55a80:	ldur	w3, [x29, #-32]
   55a84:	ldr	x0, [sp, #32]
   55a88:	sub	x1, x29, #0x28
   55a8c:	mov	w2, w19
   55a90:	bl	cb70 <mpfr_set4@plt>
   55a94:	ldr	x1, [sp, #72]
   55a98:	mov	w21, w0
   55a9c:	cbz	x1, 55aa8 <mpfr_gamma_inc@@Base+0x5bc>
   55aa0:	ldr	x0, [sp, #80]
   55aa4:	bl	d120 <mpfr_free_func@plt>
   55aa8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55aac:	ldr	x1, [x0, #2800]
   55ab0:	add	x0, x0, #0xaf0
   55ab4:	blr	x1
   55ab8:	ldr	w9, [sp, #24]
   55abc:	str	w9, [x24, x0]
   55ac0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55ac4:	ldr	x1, [x0, #2736]
   55ac8:	add	x0, x0, #0xab0
   55acc:	blr	x1
   55ad0:	ldr	x10, [sp, #16]
   55ad4:	str	x10, [x24, x0]
   55ad8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55adc:	ldr	x1, [x0, #2768]
   55ae0:	add	x0, x0, #0xad0
   55ae4:	blr	x1
   55ae8:	ldr	x11, [sp, #8]
   55aec:	ldr	x8, [sp, #32]
   55af0:	str	x11, [x24, x0]
   55af4:	ldr	x8, [x8, #16]
   55af8:	cmp	x8, x11
   55afc:	b.gt	55c10 <mpfr_gamma_inc@@Base+0x724>
   55b00:	cmp	x8, x10
   55b04:	b.lt	55c10 <mpfr_gamma_inc@@Base+0x724>  // b.tstop
   55b08:	cbz	w21, 55b84 <mpfr_gamma_inc@@Base+0x698>
   55b0c:	orr	w8, w9, #0x8
   55b10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55b14:	ldr	x1, [x0, #2800]
   55b18:	add	x0, x0, #0xaf0
   55b1c:	blr	x1
   55b20:	str	w8, [x24, x0]
   55b24:	b	55b84 <mpfr_gamma_inc@@Base+0x698>
   55b28:	ldr	x0, [sp, #32]
   55b2c:	mov	x1, x22
   55b30:	mov	x2, x21
   55b34:	mov	w3, w19
   55b38:	bl	55d78 <mpfr_gamma_inc@@Base+0x88c>
   55b3c:	mov	w21, w0
   55b40:	b	55b84 <mpfr_gamma_inc@@Base+0x698>
   55b44:	cmp	x8, x27
   55b48:	b.eq	55b58 <mpfr_gamma_inc@@Base+0x66c>  // b.none
   55b4c:	ldr	x9, [x21, #16]
   55b50:	cmp	x9, x27
   55b54:	b.ne	55ba8 <mpfr_gamma_inc@@Base+0x6bc>  // b.any
   55b58:	ldr	x8, [sp, #32]
   55b5c:	str	x27, [x8, #16]
   55b60:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55b64:	ldr	x1, [x0, #2800]
   55b68:	add	x0, x0, #0xaf0
   55b6c:	blr	x1
   55b70:	mrs	x8, tpidr_el0
   55b74:	ldr	w9, [x8, x0]
   55b78:	mov	w21, wzr
   55b7c:	orr	w9, w9, #0x4
   55b80:	str	w9, [x8, x0]
   55b84:	mov	w0, w21
   55b88:	ldp	x20, x19, [sp, #400]
   55b8c:	ldp	x22, x21, [sp, #384]
   55b90:	ldp	x24, x23, [sp, #368]
   55b94:	ldp	x26, x25, [sp, #352]
   55b98:	ldp	x28, x27, [sp, #336]
   55b9c:	ldp	x29, x30, [sp, #320]
   55ba0:	add	sp, sp, #0x1a0
   55ba4:	ret
   55ba8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   55bac:	cmp	x8, x10
   55bb0:	b.eq	55c24 <mpfr_gamma_inc@@Base+0x738>  // b.none
   55bb4:	cmp	x9, x10
   55bb8:	b.eq	55c24 <mpfr_gamma_inc@@Base+0x738>  // b.none
   55bbc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   55bc0:	cmp	x8, x10
   55bc4:	b.eq	55bd0 <mpfr_gamma_inc@@Base+0x6e4>  // b.none
   55bc8:	cmp	x9, x10
   55bcc:	b.ne	55540 <mpfr_gamma_inc@@Base+0x54>  // b.any
   55bd0:	mov	x20, #0x2                   	// #2
   55bd4:	movk	x20, #0x8000, lsl #48
   55bd8:	cmp	x8, x10
   55bdc:	b.ne	55bfc <mpfr_gamma_inc@@Base+0x710>  // b.any
   55be0:	mov	x0, x21
   55be4:	bl	cbe0 <mpfr_sgn@plt>
   55be8:	tbnz	w0, #31, 55cc0 <mpfr_gamma_inc@@Base+0x7d4>
   55bec:	ldr	x8, [x21, #16]
   55bf0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   55bf4:	cmp	x8, x9
   55bf8:	b.ne	55d08 <mpfr_gamma_inc@@Base+0x81c>  // b.any
   55bfc:	ldr	x0, [sp, #32]
   55c00:	mov	x1, x22
   55c04:	mov	w2, w19
   55c08:	bl	cc90 <mpfr_gamma@plt>
   55c0c:	b	55b3c <mpfr_gamma_inc@@Base+0x650>
   55c10:	ldr	x0, [sp, #32]
   55c14:	mov	w1, w21
   55c18:	mov	w2, w19
   55c1c:	bl	d020 <mpfr_check_range@plt>
   55c20:	b	55b3c <mpfr_gamma_inc@@Base+0x650>
   55c24:	cmp	x8, x10
   55c28:	b.ne	55c6c <mpfr_gamma_inc@@Base+0x780>  // b.any
   55c2c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   55c30:	cmp	x9, x10
   55c34:	b.ne	55c6c <mpfr_gamma_inc@@Base+0x780>  // b.any
   55c38:	ldr	w8, [x22, #8]
   55c3c:	mov	x9, #0x2                   	// #2
   55c40:	movk	x9, #0x8000, lsl #48
   55c44:	cmp	w8, #0x1
   55c48:	b.lt	55c58 <mpfr_gamma_inc@@Base+0x76c>  // b.tstop
   55c4c:	ldr	w8, [x21, #8]
   55c50:	cmp	w8, #0x0
   55c54:	b.gt	55c60 <mpfr_gamma_inc@@Base+0x774>
   55c58:	ldr	w8, [x21, #8]
   55c5c:	tbz	w8, #31, 55ca4 <mpfr_gamma_inc@@Base+0x7b8>
   55c60:	ldr	x8, [sp, #32]
   55c64:	str	x9, [x8, #16]
   55c68:	b	55b60 <mpfr_gamma_inc@@Base+0x674>
   55c6c:	mov	x19, #0x2                   	// #2
   55c70:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   55c74:	movk	x19, #0x8000, lsl #48
   55c78:	cmp	x8, x9
   55c7c:	b.ne	55c98 <mpfr_gamma_inc@@Base+0x7ac>  // b.any
   55c80:	ldr	w8, [x22, #8]
   55c84:	cmp	w8, #0x1
   55c88:	b.lt	55ccc <mpfr_gamma_inc@@Base+0x7e0>  // b.tstop
   55c8c:	mov	w21, wzr
   55c90:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   55c94:	b	55cac <mpfr_gamma_inc@@Base+0x7c0>
   55c98:	ldr	w8, [x21, #8]
   55c9c:	cmp	w8, #0x1
   55ca0:	b.lt	55cfc <mpfr_gamma_inc@@Base+0x810>  // b.tstop
   55ca4:	mov	w21, wzr
   55ca8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   55cac:	ldr	x10, [sp, #32]
   55cb0:	mov	w9, #0x1                   	// #1
   55cb4:	str	x8, [x10, #16]
   55cb8:	str	w9, [x10, #8]
   55cbc:	b	55b84 <mpfr_gamma_inc@@Base+0x698>
   55cc0:	ldr	x8, [sp, #32]
   55cc4:	str	x20, [x8, #16]
   55cc8:	b	55b60 <mpfr_gamma_inc@@Base+0x674>
   55ccc:	mov	x0, x21
   55cd0:	bl	cbe0 <mpfr_sgn@plt>
   55cd4:	tbnz	w0, #31, 55cfc <mpfr_gamma_inc@@Base+0x810>
   55cd8:	mov	w1, #0x1                   	// #1
   55cdc:	mov	x0, x21
   55ce0:	mov	x2, xzr
   55ce4:	mov	w19, #0x1                   	// #1
   55ce8:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   55cec:	mov	w21, wzr
   55cf0:	tbnz	w0, #31, 55d60 <mpfr_gamma_inc@@Base+0x874>
   55cf4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   55cf8:	b	55d64 <mpfr_gamma_inc@@Base+0x878>
   55cfc:	ldr	x8, [sp, #32]
   55d00:	str	x19, [x8, #16]
   55d04:	b	55b60 <mpfr_gamma_inc@@Base+0x674>
   55d08:	ldr	x9, [x21]
   55d0c:	cmp	w19, #0x3
   55d10:	mov	w10, #0x2                   	// #2
   55d14:	csel	w10, w10, w19, eq  // eq = none
   55d18:	str	x9, [sp, #72]
   55d1c:	ldr	x9, [x21, #24]
   55d20:	cmp	w19, #0x2
   55d24:	ldr	x19, [sp, #32]
   55d28:	mov	w11, #0x3                   	// #3
   55d2c:	stp	x8, x9, [sp, #88]
   55d30:	ldr	w9, [x21, #8]
   55d34:	csel	w2, w11, w10, eq  // eq = none
   55d38:	add	x1, sp, #0x48
   55d3c:	mov	x0, x19
   55d40:	neg	w8, w9
   55d44:	str	w8, [sp, #80]
   55d48:	bl	ced0 <mpfr_eint@plt>
   55d4c:	ldr	w8, [x19, #8]
   55d50:	neg	w21, w0
   55d54:	neg	w8, w8
   55d58:	str	w8, [x19, #8]
   55d5c:	b	55b84 <mpfr_gamma_inc@@Base+0x698>
   55d60:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   55d64:	ldr	x9, [sp, #32]
   55d68:	str	x8, [x9, #16]
   55d6c:	str	w19, [x9, #8]
   55d70:	b	55b84 <mpfr_gamma_inc@@Base+0x698>
   55d74:	bl	cdd0 <mpfr_abort_prec_max@plt>
   55d78:	sub	sp, sp, #0x1b0
   55d7c:	stp	x29, x30, [sp, #336]
   55d80:	stp	x28, x27, [sp, #352]
   55d84:	stp	x26, x25, [sp, #368]
   55d88:	stp	x24, x23, [sp, #384]
   55d8c:	stp	x22, x21, [sp, #400]
   55d90:	stp	x20, x19, [sp, #416]
   55d94:	ldr	x8, [x1]
   55d98:	add	x29, sp, #0x150
   55d9c:	mov	w9, #0x1                   	// #1
   55da0:	mov	x15, #0xfffffffffffffeff    	// #-257
   55da4:	stur	x8, [x29, #-104]
   55da8:	ldr	x8, [x1, #24]
   55dac:	stur	w9, [x29, #-96]
   55db0:	mov	w20, w3
   55db4:	mov	x21, x2
   55db8:	stur	x8, [x29, #-80]
   55dbc:	ldr	x8, [x1, #16]
   55dc0:	str	x1, [sp, #32]
   55dc4:	str	x0, [sp, #48]
   55dc8:	movk	x15, #0x7fff, lsl #48
   55dcc:	stur	x8, [x29, #-88]
   55dd0:	ldr	x9, [x0]
   55dd4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55dd8:	ldr	x1, [x0, #2800]
   55ddc:	add	x0, x0, #0xaf0
   55de0:	blr	x1
   55de4:	mrs	x27, tpidr_el0
   55de8:	ldr	w12, [x27, x0]
   55dec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55df0:	ldr	x1, [x0, #2736]
   55df4:	add	x0, x0, #0xab0
   55df8:	blr	x1
   55dfc:	ldr	x13, [x27, x0]
   55e00:	mov	x8, x0
   55e04:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   55e08:	ldr	x1, [x0, #2768]
   55e0c:	add	x0, x0, #0xad0
   55e10:	blr	x1
   55e14:	ldr	x14, [x27, x0]
   55e18:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   55e1c:	str	x10, [x27, x8]
   55e20:	sub	x8, x15, #0xa
   55e24:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   55e28:	cmp	x9, x8
   55e2c:	str	x11, [x27, x0]
   55e30:	b.gt	56338 <mpfr_gamma_inc@@Base+0xe4c>
   55e34:	add	x8, x9, #0x9
   55e38:	add	x10, x9, #0x48
   55e3c:	cmp	x8, #0x0
   55e40:	csel	x8, x10, x8, lt  // lt = tstop
   55e44:	asr	x8, x8, #6
   55e48:	add	x23, x9, #0xa
   55e4c:	cmp	x9, #0x1f7
   55e50:	add	x19, x8, #0x1
   55e54:	str	w12, [sp, #16]
   55e58:	stp	x14, x13, [sp]
   55e5c:	b.lt	55e74 <mpfr_gamma_inc@@Base+0x988>  // b.tstop
   55e60:	lsl	x0, x19, #4
   55e64:	str	x0, [sp, #56]
   55e68:	bl	d1f0 <mpfr_allocate_func@plt>
   55e6c:	str	x0, [sp, #64]
   55e70:	b	55e80 <mpfr_gamma_inc@@Base+0x994>
   55e74:	add	x8, sp, #0x38
   55e78:	add	x8, x8, #0x10
   55e7c:	stp	xzr, x8, [sp, #56]
   55e80:	ldr	x8, [sp, #64]
   55e84:	cmp	w20, #0x0
   55e88:	mov	w9, #0x1                   	// #1
   55e8c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   55e90:	stur	x8, [x29, #-16]
   55e94:	add	x8, x8, x19, lsl #3
   55e98:	cset	w10, eq  // eq = none
   55e9c:	stp	x8, x23, [x29, #-48]
   55ea0:	mov	w8, #0x40                  	// #64
   55ea4:	str	w20, [sp, #20]
   55ea8:	stur	w9, [x29, #-32]
   55eac:	str	x10, [sp, #24]
   55eb0:	stur	x23, [x29, #-72]
   55eb4:	str	x8, [sp, #40]
   55eb8:	ldr	x8, [sp, #32]
   55ebc:	stur	w9, [x29, #-64]
   55ec0:	sub	x0, x29, #0x48
   55ec4:	mov	w1, #0x1                   	// #1
   55ec8:	ldr	x8, [x8, #16]
   55ecc:	mov	x2, x21
   55ed0:	mov	w3, wzr
   55ed4:	add	x8, x8, #0x3
   55ed8:	cmp	x8, x23
   55edc:	csel	x23, x8, x23, gt
   55ee0:	bl	c7b0 <mpfr_ui_div@plt>
   55ee4:	ldur	w3, [x29, #-64]
   55ee8:	sub	x0, x29, #0x28
   55eec:	sub	x1, x29, #0x48
   55ef0:	mov	w2, wzr
   55ef4:	bl	cb70 <mpfr_set4@plt>
   55ef8:	ldur	x28, [x29, #-24]
   55efc:	mov	w26, #0x1                   	// #1
   55f00:	mov	x20, x28
   55f04:	mov	x24, x28
   55f08:	sub	x0, x29, #0x68
   55f0c:	mov	x1, x26
   55f10:	mov	x2, xzr
   55f14:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   55f18:	cmp	w0, #0x1
   55f1c:	b.lt	55fa0 <mpfr_gamma_inc@@Base+0xab4>  // b.tstop
   55f20:	sub	x0, x29, #0x48
   55f24:	sub	x1, x29, #0x48
   55f28:	mov	x2, x26
   55f2c:	mov	w3, wzr
   55f30:	bl	bea0 <mpfr_mul_ui@plt>
   55f34:	sub	x0, x29, #0x48
   55f38:	sub	x1, x29, #0x48
   55f3c:	mov	w2, wzr
   55f40:	bl	c1d0 <mpfr_neg@plt>
   55f44:	sub	x0, x29, #0x48
   55f48:	sub	x1, x29, #0x48
   55f4c:	mov	x2, x21
   55f50:	mov	w3, wzr
   55f54:	bl	caf0 <mpfr_div@plt>
   55f58:	ldur	x8, [x29, #-56]
   55f5c:	cmp	x8, x25
   55f60:	b.eq	55fa0 <mpfr_gamma_inc@@Base+0xab4>  // b.none
   55f64:	cmp	x8, x28
   55f68:	sub	x0, x29, #0x28
   55f6c:	sub	x1, x29, #0x28
   55f70:	sub	x2, x29, #0x48
   55f74:	mov	w3, wzr
   55f78:	csel	x28, x8, x28, gt
   55f7c:	bl	c640 <mpfr_add@plt>
   55f80:	ldur	x8, [x29, #-24]
   55f84:	ldur	x9, [x29, #-56]
   55f88:	add	x26, x26, #0x1
   55f8c:	cmp	x8, x25
   55f90:	csel	x20, x9, x8, eq  // eq = none
   55f94:	cmp	x20, x24
   55f98:	csel	x24, x20, x24, gt
   55f9c:	b	55f08 <mpfr_gamma_inc@@Base+0xa1c>
   55fa0:	subs	x19, x26, #0x1
   55fa4:	b.eq	56214 <mpfr_gamma_inc@@Base+0xd28>  // b.none
   55fa8:	cbz	x26, 5621c <mpfr_gamma_inc@@Base+0xd30>
   55fac:	clz	x8, x19
   55fb0:	mov	w9, #0x40                  	// #64
   55fb4:	sub	x8, x9, x8
   55fb8:	ldr	x9, [x21]
   55fbc:	mov	w11, #0x1                   	// #1
   55fc0:	add	x10, x8, x24
   55fc4:	bfi	x11, x8, #1, #63
   55fc8:	stur	x9, [x29, #-136]
   55fcc:	ldr	x9, [x21, #24]
   55fd0:	sub	x8, x10, #0x1
   55fd4:	add	x11, x11, x28
   55fd8:	cmp	x8, x11
   55fdc:	stur	x9, [x29, #-112]
   55fe0:	ldr	w9, [x21, #8]
   55fe4:	sub	x0, x29, #0x48
   55fe8:	sub	x1, x29, #0x88
   55fec:	mov	w2, wzr
   55ff0:	neg	w9, w9
   55ff4:	stur	w9, [x29, #-128]
   55ff8:	ldr	x9, [x21, #16]
   55ffc:	csinc	x24, x10, x11, ge  // ge = tcont
   56000:	stur	x9, [x29, #-120]
   56004:	bl	cc20 <mpfr_exp@plt>
   56008:	sub	x0, x29, #0x28
   5600c:	sub	x1, x29, #0x28
   56010:	sub	x2, x29, #0x48
   56014:	mov	w3, wzr
   56018:	bl	c1b0 <mpfr_mul@plt>
   5601c:	ldur	x28, [x29, #-24]
   56020:	ldur	x26, [x29, #-56]
   56024:	sub	x0, x29, #0x48
   56028:	sub	x1, x29, #0x88
   5602c:	mov	w2, wzr
   56030:	bl	ced0 <mpfr_eint@plt>
   56034:	sub	x0, x29, #0x48
   56038:	sub	x1, x29, #0x48
   5603c:	mov	w2, wzr
   56040:	bl	c1d0 <mpfr_neg@plt>
   56044:	ldur	x22, [x29, #-24]
   56048:	ldur	x19, [x29, #-56]
   5604c:	sub	x0, x29, #0x28
   56050:	sub	x1, x29, #0x48
   56054:	sub	x2, x29, #0x28
   56058:	mov	w3, wzr
   5605c:	bl	bfd0 <mpfr_sub@plt>
   56060:	ldur	x8, [x29, #-24]
   56064:	cmp	x8, x25
   56068:	b.ne	560d4 <mpfr_gamma_inc@@Base+0xbe8>  // b.any
   5606c:	ldr	x20, [sp, #40]
   56070:	mov	x19, #0xfffffffffffffeff    	// #-257
   56074:	movk	x19, #0x7fff, lsl #48
   56078:	sub	x8, x19, x23
   5607c:	cmp	x20, x8
   56080:	b.gt	56238 <mpfr_gamma_inc@@Base+0xd4c>
   56084:	add	x23, x23, x20
   56088:	cmp	x23, #0x0
   5608c:	cinc	x8, x23, lt  // lt = tstop
   56090:	cmp	x23, x19
   56094:	b.gt	56338 <mpfr_gamma_inc@@Base+0xe4c>
   56098:	asr	x8, x8, #1
   5609c:	str	x8, [sp, #40]
   560a0:	sub	x8, x23, #0x1
   560a4:	add	x9, x23, #0x3e
   560a8:	cmp	x8, #0x0
   560ac:	ldr	x1, [sp, #56]
   560b0:	csel	x8, x9, x8, lt  // lt = tstop
   560b4:	asr	x8, x8, #6
   560b8:	add	x20, x8, #0x1
   560bc:	lsl	x2, x20, #4
   560c0:	str	x2, [sp, #56]
   560c4:	cbz	x1, 561e8 <mpfr_gamma_inc@@Base+0xcfc>
   560c8:	ldr	x0, [sp, #64]
   560cc:	bl	c660 <mpfr_reallocate_func@plt>
   560d0:	b	561f0 <mpfr_gamma_inc@@Base+0xd04>
   560d4:	cmp	x28, x25
   560d8:	csel	x10, x26, xzr, eq  // eq = none
   560dc:	sub	x9, x24, x20
   560e0:	cmp	x22, x25
   560e4:	add	x10, x10, x20
   560e8:	add	x11, x9, #0x2
   560ec:	csel	x10, x10, x22, eq  // eq = none
   560f0:	cmp	x9, #0x1
   560f4:	mov	w20, #0x4                   	// #4
   560f8:	csel	x9, x11, x20, gt
   560fc:	add	x9, x10, x9
   56100:	sub	x10, x19, #0x1
   56104:	cmp	x9, x10
   56108:	csinc	x9, x19, x9, lt  // lt = tstop
   5610c:	sub	x0, x29, #0x48
   56110:	sub	x1, x29, #0x68
   56114:	mov	w2, wzr
   56118:	sub	x19, x9, x8
   5611c:	bl	cc90 <mpfr_gamma@plt>
   56120:	sub	x0, x29, #0x48
   56124:	sub	x1, x29, #0x48
   56128:	sub	x2, x29, #0x68
   5612c:	mov	w3, wzr
   56130:	bl	c1b0 <mpfr_mul@plt>
   56134:	sub	x0, x29, #0x28
   56138:	sub	x1, x29, #0x28
   5613c:	sub	x2, x29, #0x48
   56140:	mov	w3, wzr
   56144:	bl	caf0 <mpfr_div@plt>
   56148:	cmp	x19, #0x1
   5614c:	sub	x0, x29, #0x48
   56150:	mov	x1, #0xffffffffffffffff    	// #-1
   56154:	mov	x2, xzr
   56158:	mov	w3, wzr
   5615c:	csinc	x20, x20, x19, le
   56160:	bl	bed0 <mpfr_set_si_2exp@plt>
   56164:	sub	x0, x29, #0x48
   56168:	sub	x1, x29, #0x48
   5616c:	sub	x2, x29, #0x68
   56170:	mov	w3, wzr
   56174:	bl	c1f0 <mpfr_pow@plt>
   56178:	ldur	w8, [x29, #-64]
   5617c:	tbz	w8, #31, 56190 <mpfr_gamma_inc@@Base+0xca4>
   56180:	sub	x0, x29, #0x28
   56184:	sub	x1, x29, #0x28
   56188:	mov	w2, wzr
   5618c:	bl	c1d0 <mpfr_neg@plt>
   56190:	ldur	x8, [x29, #-24]
   56194:	mov	x9, #0xfffffffffffffeff    	// #-257
   56198:	movk	x9, #0x7fff, lsl #48
   5619c:	add	x9, x9, #0x105
   561a0:	cmp	x8, x9
   561a4:	b.lt	5606c <mpfr_gamma_inc@@Base+0xb80>  // b.tstop
   561a8:	ldur	x8, [x29, #-40]
   561ac:	ldr	x9, [sp, #48]
   561b0:	ldur	x0, [x29, #-16]
   561b4:	sub	x2, x23, x20
   561b8:	sub	x10, x8, #0x1
   561bc:	add	x8, x8, #0x3e
   561c0:	cmp	x10, #0x0
   561c4:	csel	x8, x8, x10, lt  // lt = tstop
   561c8:	asr	x8, x8, #6
   561cc:	ldr	x9, [x9]
   561d0:	add	x1, x8, #0x1
   561d4:	ldr	x8, [sp, #24]
   561d8:	add	x3, x9, x8
   561dc:	bl	c830 <mpfr_round_p@plt>
   561e0:	cbnz	w0, 56254 <mpfr_gamma_inc@@Base+0xd68>
   561e4:	b	5606c <mpfr_gamma_inc@@Base+0xb80>
   561e8:	mov	x0, x2
   561ec:	bl	d1f0 <mpfr_allocate_func@plt>
   561f0:	mov	x8, x0
   561f4:	mov	w9, #0x1                   	// #1
   561f8:	stur	x8, [x29, #-16]
   561fc:	add	x8, x8, x20, lsl #3
   56200:	str	x0, [sp, #64]
   56204:	stur	w9, [x29, #-32]
   56208:	stur	x23, [x29, #-72]
   5620c:	stp	x8, x23, [x29, #-48]
   56210:	b	55eb8 <mpfr_gamma_inc@@Base+0x9cc>
   56214:	mov	x8, xzr
   56218:	b	55fb8 <mpfr_gamma_inc@@Base+0xacc>
   5621c:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   56220:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   56224:	mov	w1, #0x1a2                 	// #418
   56228:	add	x0, x0, #0x87b
   5622c:	add	x2, x2, #0x914
   56230:	bl	d030 <mpfr_assert_fail@plt>
   56234:	b	55fac <mpfr_gamma_inc@@Base+0xac0>
   56238:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   5623c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   56240:	mov	w1, #0x1ee                 	// #494
   56244:	add	x0, x0, #0x87b
   56248:	add	x2, x2, #0xa3e
   5624c:	bl	d030 <mpfr_assert_fail@plt>
   56250:	b	56084 <mpfr_gamma_inc@@Base+0xb98>
   56254:	ldr	w19, [sp, #20]
   56258:	ldur	w3, [x29, #-32]
   5625c:	ldr	x0, [sp, #48]
   56260:	sub	x1, x29, #0x28
   56264:	mov	w2, w19
   56268:	bl	cb70 <mpfr_set4@plt>
   5626c:	ldr	x1, [sp, #56]
   56270:	mov	w21, w0
   56274:	cbz	x1, 56280 <mpfr_gamma_inc@@Base+0xd94>
   56278:	ldr	x0, [sp, #64]
   5627c:	bl	d120 <mpfr_free_func@plt>
   56280:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56284:	ldr	x1, [x0, #2800]
   56288:	add	x0, x0, #0xaf0
   5628c:	blr	x1
   56290:	ldr	w9, [sp, #16]
   56294:	str	w9, [x27, x0]
   56298:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5629c:	ldr	x1, [x0, #2736]
   562a0:	add	x0, x0, #0xab0
   562a4:	blr	x1
   562a8:	ldr	x10, [sp, #8]
   562ac:	str	x10, [x27, x0]
   562b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   562b4:	ldr	x1, [x0, #2768]
   562b8:	add	x0, x0, #0xad0
   562bc:	blr	x1
   562c0:	ldr	x11, [sp]
   562c4:	ldr	x8, [sp, #48]
   562c8:	str	x11, [x27, x0]
   562cc:	ldr	x8, [x8, #16]
   562d0:	cmp	x8, x11
   562d4:	b.gt	56320 <mpfr_gamma_inc@@Base+0xe34>
   562d8:	cmp	x8, x10
   562dc:	b.lt	56320 <mpfr_gamma_inc@@Base+0xe34>  // b.tstop
   562e0:	cbz	w21, 562fc <mpfr_gamma_inc@@Base+0xe10>
   562e4:	orr	w8, w9, #0x8
   562e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   562ec:	ldr	x1, [x0, #2800]
   562f0:	add	x0, x0, #0xaf0
   562f4:	blr	x1
   562f8:	str	w8, [x27, x0]
   562fc:	mov	w0, w21
   56300:	ldp	x20, x19, [sp, #416]
   56304:	ldp	x22, x21, [sp, #400]
   56308:	ldp	x24, x23, [sp, #384]
   5630c:	ldp	x26, x25, [sp, #368]
   56310:	ldp	x28, x27, [sp, #352]
   56314:	ldp	x29, x30, [sp, #336]
   56318:	add	sp, sp, #0x1b0
   5631c:	ret
   56320:	ldr	x0, [sp, #48]
   56324:	mov	w1, w21
   56328:	mov	w2, w19
   5632c:	bl	d020 <mpfr_check_range@plt>
   56330:	mov	w21, w0
   56334:	b	562fc <mpfr_gamma_inc@@Base+0xe10>
   56338:	bl	cdd0 <mpfr_abort_prec_max@plt>

000000000005633c <mpfr_ubf_mul_exact@@Base>:
   5633c:	sub	sp, sp, #0x70
   56340:	stp	x29, x30, [sp, #32]
   56344:	stp	x24, x23, [sp, #64]
   56348:	stp	x22, x21, [sp, #80]
   5634c:	stp	x20, x19, [sp, #96]
   56350:	ldr	w8, [x1, #8]
   56354:	ldr	w9, [x2, #8]
   56358:	str	x25, [sp, #48]
   5635c:	mov	x25, #0x2                   	// #2
   56360:	movk	x25, #0x8000, lsl #48
   56364:	mul	w8, w9, w8
   56368:	str	w8, [x0, #8]
   5636c:	ldr	x8, [x1, #16]
   56370:	add	x9, x25, #0x2
   56374:	mov	x20, x2
   56378:	mov	x19, x0
   5637c:	cmp	x8, x9
   56380:	add	x29, sp, #0x20
   56384:	b.lt	56554 <mpfr_ubf_mul_exact@@Base+0x218>  // b.tstop
   56388:	ldr	x10, [x20, #16]
   5638c:	cmp	x10, x9
   56390:	b.lt	56554 <mpfr_ubf_mul_exact@@Base+0x218>  // b.tstop
   56394:	ldr	x8, [x1]
   56398:	ldr	x9, [x20]
   5639c:	ldr	x23, [x19, #24]
   563a0:	mov	x21, x1
   563a4:	sub	x11, x8, #0x1
   563a8:	add	x12, x8, #0x3e
   563ac:	sub	x8, x9, #0x1
   563b0:	cmp	x11, #0x0
   563b4:	add	x10, x9, #0x3e
   563b8:	csel	x9, x12, x11, lt  // lt = tstop
   563bc:	cmp	x8, #0x0
   563c0:	csel	x8, x10, x8, lt  // lt = tstop
   563c4:	cmp	x12, #0x7e
   563c8:	b.hi	56408 <mpfr_ubf_mul_exact@@Base+0xcc>  // b.pmore
   563cc:	cmp	x10, #0x7e
   563d0:	b.hi	56408 <mpfr_ubf_mul_exact@@Base+0xcc>  // b.pmore
   563d4:	ldr	x8, [x21, #24]
   563d8:	ldr	x9, [x20, #24]
   563dc:	ldr	x10, [x8]
   563e0:	ldr	x9, [x9]
   563e4:	umulh	x8, x10, x9
   563e8:	mul	x9, x9, x10
   563ec:	stp	x9, x8, [x23]
   563f0:	tbnz	x8, #63, 5643c <mpfr_ubf_mul_exact@@Base+0x100>
   563f4:	extr	x8, x8, x9, #63
   563f8:	lsl	x9, x9, #1
   563fc:	stp	x9, x8, [x23]
   56400:	mov	w22, #0x1                   	// #1
   56404:	b	56478 <mpfr_ubf_mul_exact@@Base+0x13c>
   56408:	asr	x9, x9, #6
   5640c:	asr	x8, x8, #6
   56410:	add	x22, x9, #0x1
   56414:	cmp	x9, x8
   56418:	add	x24, x8, #0x1
   5641c:	b.ge	56444 <mpfr_ubf_mul_exact@@Base+0x108>  // b.tcont
   56420:	ldr	x1, [x20, #24]
   56424:	ldr	x3, [x21, #24]
   56428:	mov	x0, x23
   5642c:	mov	x2, x24
   56430:	mov	x4, x22
   56434:	bl	cc80 <__gmpn_mul@plt>
   56438:	tbz	x0, #63, 56460 <mpfr_ubf_mul_exact@@Base+0x124>
   5643c:	mov	x22, xzr
   56440:	b	56478 <mpfr_ubf_mul_exact@@Base+0x13c>
   56444:	ldr	x1, [x21, #24]
   56448:	ldr	x3, [x20, #24]
   5644c:	mov	x0, x23
   56450:	mov	x2, x22
   56454:	mov	x4, x24
   56458:	bl	cc80 <__gmpn_mul@plt>
   5645c:	tbnz	x0, #63, 5643c <mpfr_ubf_mul_exact@@Base+0x100>
   56460:	add	x2, x24, x22
   56464:	mov	w3, #0x1                   	// #1
   56468:	mov	x0, x23
   5646c:	mov	x1, x23
   56470:	mov	w22, #0x1                   	// #1
   56474:	bl	c120 <__gmpn_lshift@plt>
   56478:	ldr	x8, [x21, #16]
   5647c:	add	x24, x25, #0x2
   56480:	cmp	x8, x24
   56484:	b.eq	564e0 <mpfr_ubf_mul_exact@@Base+0x1a4>  // b.none
   56488:	ldr	x9, [x20, #16]
   5648c:	cmp	x9, x24
   56490:	b.eq	564e0 <mpfr_ubf_mul_exact@@Base+0x1a4>  // b.none
   56494:	sub	x8, x8, x22
   56498:	add	x8, x8, x9
   5649c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   564a0:	ldr	x1, [x0, #2736]
   564a4:	add	x0, x0, #0xab0
   564a8:	blr	x1
   564ac:	mrs	x9, tpidr_el0
   564b0:	ldr	x10, [x9, x0]
   564b4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   564b8:	ldr	x1, [x0, #2768]
   564bc:	add	x0, x0, #0xad0
   564c0:	blr	x1
   564c4:	cmp	x8, x10
   564c8:	b.lt	564e0 <mpfr_ubf_mul_exact@@Base+0x1a4>  // b.tstop
   564cc:	ldr	x9, [x9, x0]
   564d0:	cmp	x8, x9
   564d4:	b.gt	564e0 <mpfr_ubf_mul_exact@@Base+0x1a4>
   564d8:	str	x8, [x19, #16]
   564dc:	b	56538 <mpfr_ubf_mul_exact@@Base+0x1fc>
   564e0:	add	x23, x19, #0x20
   564e4:	mov	x0, x23
   564e8:	bl	c400 <mpfr_mpz_init@plt>
   564ec:	add	x0, sp, #0x10
   564f0:	mov	x1, x21
   564f4:	bl	565b8 <mpfr_ubf_mul_exact@@Base+0x27c>
   564f8:	mov	x0, sp
   564fc:	mov	x1, x20
   56500:	bl	565b8 <mpfr_ubf_mul_exact@@Base+0x27c>
   56504:	add	x1, sp, #0x10
   56508:	mov	x2, sp
   5650c:	mov	x0, x23
   56510:	bl	ceb0 <__gmpz_add@plt>
   56514:	add	x0, sp, #0x10
   56518:	bl	c610 <mpfr_mpz_clear@plt>
   5651c:	mov	x0, sp
   56520:	bl	c610 <mpfr_mpz_clear@plt>
   56524:	mov	x0, x23
   56528:	mov	x1, x23
   5652c:	mov	x2, x22
   56530:	bl	c090 <__gmpz_sub_ui@plt>
   56534:	str	x24, [x19, #16]
   56538:	ldp	x20, x19, [sp, #96]
   5653c:	ldp	x22, x21, [sp, #80]
   56540:	ldp	x24, x23, [sp, #64]
   56544:	ldr	x25, [sp, #48]
   56548:	ldp	x29, x30, [sp, #32]
   5654c:	add	sp, sp, #0x70
   56550:	ret
   56554:	cmp	x8, x25
   56558:	b.eq	56568 <mpfr_ubf_mul_exact@@Base+0x22c>  // b.none
   5655c:	ldr	x9, [x20, #16]
   56560:	cmp	x9, x25
   56564:	b.ne	56570 <mpfr_ubf_mul_exact@@Base+0x234>  // b.any
   56568:	str	x25, [x19, #16]
   5656c:	b	56538 <mpfr_ubf_mul_exact@@Base+0x1fc>
   56570:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   56574:	cmp	x8, x10
   56578:	b.ne	5658c <mpfr_ubf_mul_exact@@Base+0x250>  // b.any
   5657c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   56580:	cmp	x9, x8
   56584:	b.eq	56568 <mpfr_ubf_mul_exact@@Base+0x22c>  // b.none
   56588:	b	565a0 <mpfr_ubf_mul_exact@@Base+0x264>
   5658c:	cmp	x9, x10
   56590:	b.ne	565ac <mpfr_ubf_mul_exact@@Base+0x270>  // b.any
   56594:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   56598:	cmp	x8, x9
   5659c:	b.eq	56568 <mpfr_ubf_mul_exact@@Base+0x22c>  // b.none
   565a0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   565a4:	str	x8, [x19, #16]
   565a8:	b	56538 <mpfr_ubf_mul_exact@@Base+0x1fc>
   565ac:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   565b0:	str	x8, [x19, #16]
   565b4:	b	56538 <mpfr_ubf_mul_exact@@Base+0x1fc>
   565b8:	sub	sp, sp, #0x80
   565bc:	stp	x29, x30, [sp, #48]
   565c0:	stp	x26, x25, [sp, #64]
   565c4:	stp	x24, x23, [sp, #80]
   565c8:	stp	x22, x21, [sp, #96]
   565cc:	stp	x20, x19, [sp, #112]
   565d0:	add	x29, sp, #0x30
   565d4:	mov	x20, x1
   565d8:	mov	x19, x0
   565dc:	bl	c400 <mpfr_mpz_init@plt>
   565e0:	ldr	x8, [x20, #16]
   565e4:	mov	x9, #0x4                   	// #4
   565e8:	movk	x9, #0x8000, lsl #48
   565ec:	cmp	x8, x9
   565f0:	b.ne	56604 <mpfr_ubf_mul_exact@@Base+0x2c8>  // b.any
   565f4:	add	x1, x20, #0x20
   565f8:	mov	x0, x19
   565fc:	bl	c410 <__gmpz_set@plt>
   56600:	b	566a8 <mpfr_ubf_mul_exact@@Base+0x36c>
   56604:	mov	w9, #0x40                  	// #64
   56608:	sub	x10, x29, #0x8
   5660c:	mov	w11, #0x1                   	// #1
   56610:	str	x9, [sp, #8]
   56614:	str	x10, [sp, #32]
   56618:	str	w11, [sp, #16]
   5661c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56620:	ldr	x1, [x0, #2800]
   56624:	add	x0, x0, #0xaf0
   56628:	blr	x1
   5662c:	mrs	x23, tpidr_el0
   56630:	ldr	w24, [x23, x0]
   56634:	mov	x20, x0
   56638:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5663c:	ldr	x1, [x0, #2736]
   56640:	add	x0, x0, #0xab0
   56644:	blr	x1
   56648:	ldr	x25, [x23, x0]
   5664c:	mov	x21, x0
   56650:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56654:	ldr	x1, [x0, #2768]
   56658:	add	x0, x0, #0xad0
   5665c:	blr	x1
   56660:	ldr	x26, [x23, x0]
   56664:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   56668:	str	x9, [x23, x21]
   5666c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   56670:	mov	x22, x0
   56674:	str	x9, [x23, x0]
   56678:	add	x0, sp, #0x8
   5667c:	mov	x1, x8
   56680:	mov	x2, xzr
   56684:	mov	w3, wzr
   56688:	bl	bed0 <mpfr_set_si_2exp@plt>
   5668c:	add	x1, sp, #0x8
   56690:	mov	x0, x19
   56694:	mov	w2, wzr
   56698:	bl	c260 <mpfr_get_z@plt>
   5669c:	str	w24, [x23, x20]
   566a0:	str	x25, [x23, x21]
   566a4:	str	x26, [x23, x22]
   566a8:	ldp	x20, x19, [sp, #112]
   566ac:	ldp	x22, x21, [sp, #96]
   566b0:	ldp	x24, x23, [sp, #80]
   566b4:	ldp	x26, x25, [sp, #64]
   566b8:	ldp	x29, x30, [sp, #48]
   566bc:	add	sp, sp, #0x80
   566c0:	ret

00000000000566c4 <mpfr_ubf_exp_less_p@@Base>:
   566c4:	sub	sp, sp, #0x40
   566c8:	str	x19, [sp, #48]
   566cc:	mov	x19, x1
   566d0:	mov	x1, x0
   566d4:	add	x0, sp, #0x10
   566d8:	stp	x29, x30, [sp, #32]
   566dc:	add	x29, sp, #0x20
   566e0:	bl	565b8 <mpfr_ubf_mul_exact@@Base+0x27c>
   566e4:	mov	x0, sp
   566e8:	mov	x1, x19
   566ec:	bl	565b8 <mpfr_ubf_mul_exact@@Base+0x27c>
   566f0:	add	x0, sp, #0x10
   566f4:	mov	x1, sp
   566f8:	bl	cdc0 <__gmpz_cmp@plt>
   566fc:	lsr	w19, w0, #31
   56700:	add	x0, sp, #0x10
   56704:	bl	c610 <mpfr_mpz_clear@plt>
   56708:	mov	x0, sp
   5670c:	bl	c610 <mpfr_mpz_clear@plt>
   56710:	mov	w0, w19
   56714:	ldr	x19, [sp, #48]
   56718:	ldp	x29, x30, [sp, #32]
   5671c:	add	sp, sp, #0x40
   56720:	ret

0000000000056724 <mpfr_ubf_zexp2exp@@Base>:
   56724:	sub	sp, sp, #0x70
   56728:	stp	x29, x30, [sp, #32]
   5672c:	stp	x26, x25, [sp, #48]
   56730:	stp	x24, x23, [sp, #64]
   56734:	stp	x22, x21, [sp, #80]
   56738:	stp	x20, x19, [sp, #96]
   5673c:	ldr	w8, [x0, #4]
   56740:	add	x29, sp, #0x20
   56744:	cmp	w8, #0x0
   56748:	cneg	w8, w8, mi  // mi = first
   5674c:	cbz	w8, 567f8 <mpfr_ubf_zexp2exp@@Base+0xd4>
   56750:	mov	x19, x0
   56754:	mov	w8, w8
   56758:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5675c:	ldr	x1, [x0, #2800]
   56760:	add	x0, x0, #0xaf0
   56764:	blr	x1
   56768:	mrs	x23, tpidr_el0
   5676c:	ldr	w24, [x23, x0]
   56770:	mov	x20, x0
   56774:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56778:	ldr	x1, [x0, #2736]
   5677c:	add	x0, x0, #0xab0
   56780:	blr	x1
   56784:	ldr	x25, [x23, x0]
   56788:	mov	x21, x0
   5678c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56790:	ldr	x1, [x0, #2768]
   56794:	add	x0, x0, #0xad0
   56798:	blr	x1
   5679c:	ldr	x26, [x23, x0]
   567a0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   567a4:	str	x9, [x23, x21]
   567a8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   567ac:	mov	x22, x0
   567b0:	str	x9, [x23, x0]
   567b4:	lsl	x1, x8, #6
   567b8:	mov	x0, sp
   567bc:	bl	cf60 <mpfr_init2@plt>
   567c0:	mov	x0, sp
   567c4:	mov	x1, x19
   567c8:	mov	w2, wzr
   567cc:	bl	c6e0 <mpfr_set_z@plt>
   567d0:	mov	x0, sp
   567d4:	mov	w1, #0x1                   	// #1
   567d8:	bl	c630 <mpfr_get_si@plt>
   567dc:	mov	x19, x0
   567e0:	mov	x0, sp
   567e4:	bl	c4f0 <mpfr_clear@plt>
   567e8:	str	w24, [x23, x20]
   567ec:	str	x25, [x23, x21]
   567f0:	str	x26, [x23, x22]
   567f4:	b	567fc <mpfr_ubf_zexp2exp@@Base+0xd8>
   567f8:	mov	x19, xzr
   567fc:	mov	x0, x19
   56800:	ldp	x20, x19, [sp, #96]
   56804:	ldp	x22, x21, [sp, #80]
   56808:	ldp	x24, x23, [sp, #64]
   5680c:	ldp	x26, x25, [sp, #48]
   56810:	ldp	x29, x30, [sp, #32]
   56814:	add	sp, sp, #0x70
   56818:	ret

000000000005681c <mpfr_ubf_diff_exp@@Base>:
   5681c:	sub	sp, sp, #0x40
   56820:	str	x19, [sp, #48]
   56824:	mov	x19, x1
   56828:	mov	x1, x0
   5682c:	add	x0, sp, #0x10
   56830:	stp	x29, x30, [sp, #32]
   56834:	add	x29, sp, #0x20
   56838:	bl	565b8 <mpfr_ubf_mul_exact@@Base+0x27c>
   5683c:	mov	x0, sp
   56840:	mov	x1, x19
   56844:	bl	565b8 <mpfr_ubf_mul_exact@@Base+0x27c>
   56848:	add	x0, sp, #0x10
   5684c:	add	x1, sp, #0x10
   56850:	mov	x2, sp
   56854:	bl	c240 <__gmpz_sub@plt>
   56858:	mov	x0, sp
   5685c:	bl	c610 <mpfr_mpz_clear@plt>
   56860:	add	x0, sp, #0x10
   56864:	bl	c0a0 <mpfr_ubf_zexp2exp@plt>
   56868:	mov	x19, x0
   5686c:	add	x0, sp, #0x10
   56870:	bl	c610 <mpfr_mpz_clear@plt>
   56874:	mov	x0, x19
   56878:	ldr	x19, [sp, #48]
   5687c:	ldp	x29, x30, [sp, #32]
   56880:	add	sp, sp, #0x40
   56884:	ret

0000000000056888 <mpfr_beta@@Base>:
   56888:	sub	sp, sp, #0x190
   5688c:	stp	x22, x21, [sp, #368]
   56890:	stp	x20, x19, [sp, #384]
   56894:	mov	x21, x1
   56898:	mov	x19, x0
   5689c:	mov	x0, x1
   568a0:	mov	x1, x2
   568a4:	stp	x29, x30, [sp, #304]
   568a8:	stp	x28, x27, [sp, #320]
   568ac:	stp	x26, x25, [sp, #336]
   568b0:	stp	x24, x23, [sp, #352]
   568b4:	add	x29, sp, #0x130
   568b8:	mov	w24, w3
   568bc:	mov	x22, x2
   568c0:	bl	cef0 <mpfr_less_p@plt>
   568c4:	cbz	w0, 56904 <mpfr_beta@@Base+0x7c>
   568c8:	mov	x0, x19
   568cc:	mov	x1, x22
   568d0:	mov	x2, x21
   568d4:	mov	w3, w24
   568d8:	bl	cda0 <mpfr_beta@plt>
   568dc:	mov	w21, w0
   568e0:	mov	w0, w21
   568e4:	ldp	x20, x19, [sp, #384]
   568e8:	ldp	x22, x21, [sp, #368]
   568ec:	ldp	x24, x23, [sp, #352]
   568f0:	ldp	x26, x25, [sp, #336]
   568f4:	ldp	x28, x27, [sp, #320]
   568f8:	ldp	x29, x30, [sp, #304]
   568fc:	add	sp, sp, #0x190
   56900:	ret
   56904:	ldr	x8, [x21, #16]
   56908:	mov	x25, #0x2                   	// #2
   5690c:	movk	x25, #0x8000, lsl #48
   56910:	add	x9, x25, #0x2
   56914:	cmp	x8, x9
   56918:	b.lt	571a4 <mpfr_beta@@Base+0x91c>  // b.tstop
   5691c:	ldr	x10, [x22, #16]
   56920:	cmp	x10, x9
   56924:	b.lt	571a4 <mpfr_beta@@Base+0x91c>  // b.tstop
   56928:	mov	x0, x22
   5692c:	bl	c600 <mpfr_integer_p@plt>
   56930:	mov	w23, w0
   56934:	cbz	w0, 56940 <mpfr_beta@@Base+0xb8>
   56938:	ldr	w8, [x22, #8]
   5693c:	tbnz	w8, #31, 56ac4 <mpfr_beta@@Base+0x23c>
   56940:	mov	x0, x21
   56944:	bl	c600 <mpfr_integer_p@plt>
   56948:	mrs	x20, tpidr_el0
   5694c:	cbz	w0, 56958 <mpfr_beta@@Base+0xd0>
   56950:	ldr	w8, [x21, #8]
   56954:	tbnz	w8, #31, 56b0c <mpfr_beta@@Base+0x284>
   56958:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5695c:	ldr	x1, [x0, #2800]
   56960:	add	x0, x0, #0xaf0
   56964:	blr	x1
   56968:	ldr	w12, [x20, x0]
   5696c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56970:	ldr	x1, [x0, #2736]
   56974:	add	x0, x0, #0xab0
   56978:	blr	x1
   5697c:	ldr	x27, [x20, x0]
   56980:	mov	x8, x0
   56984:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56988:	ldr	x1, [x0, #2768]
   5698c:	add	x0, x0, #0xad0
   56990:	blr	x1
   56994:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   56998:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   5699c:	ldr	x26, [x20, x0]
   569a0:	str	x9, [x20, x8]
   569a4:	str	x10, [x20, x0]
   569a8:	ldr	x8, [x21, #16]
   569ac:	ldr	x9, [x22, #16]
   569b0:	ldr	x10, [x21]
   569b4:	ldr	x11, [x22]
   569b8:	cmp	x8, x9
   569bc:	sub	x10, x8, x10
   569c0:	sub	x11, x9, x11
   569c4:	csel	x8, x8, x9, gt
   569c8:	cmp	x10, x11
   569cc:	csel	x9, x10, x11, lt  // lt = tstop
   569d0:	sub	x8, x8, x9
   569d4:	add	x1, x8, #0x1
   569d8:	mov	x8, #0x2                   	// #2
   569dc:	movk	x8, #0x8000, lsl #48
   569e0:	sub	x25, x8, #0x103
   569e4:	cmp	x1, x25
   569e8:	b.ls	56a38 <mpfr_beta@@Base+0x1b0>  // b.plast
   569ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   569f0:	ldr	x1, [x0, #2736]
   569f4:	add	x0, x0, #0xab0
   569f8:	blr	x1
   569fc:	str	x27, [x20, x0]
   56a00:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56a04:	ldr	x1, [x0, #2768]
   56a08:	add	x0, x0, #0xad0
   56a0c:	blr	x1
   56a10:	str	x26, [x20, x0]
   56a14:	str	x8, [x19, #16]
   56a18:	orr	w8, w12, #0x4
   56a1c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56a20:	ldr	x1, [x0, #2800]
   56a24:	add	x0, x0, #0xaf0
   56a28:	blr	x1
   56a2c:	mov	w21, wzr
   56a30:	str	w8, [x20, x0]
   56a34:	b	568e0 <mpfr_beta@@Base+0x58>
   56a38:	sub	x0, x29, #0x28
   56a3c:	str	w12, [sp, #44]
   56a40:	bl	cf60 <mpfr_init2@plt>
   56a44:	sub	x0, x29, #0x28
   56a48:	mov	x1, x21
   56a4c:	mov	x2, x22
   56a50:	mov	w3, wzr
   56a54:	bl	c640 <mpfr_add@plt>
   56a58:	ldur	x8, [x29, #-24]
   56a5c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   56a60:	cmp	x8, x9
   56a64:	b.ne	56b34 <mpfr_beta@@Base+0x2ac>  // b.any
   56a68:	sub	x0, x29, #0x28
   56a6c:	bl	c4f0 <mpfr_clear@plt>
   56a70:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56a74:	ldr	x1, [x0, #2800]
   56a78:	add	x0, x0, #0xaf0
   56a7c:	blr	x1
   56a80:	ldr	w8, [sp, #44]
   56a84:	str	w8, [x20, x0]
   56a88:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56a8c:	ldr	x1, [x0, #2736]
   56a90:	add	x0, x0, #0xab0
   56a94:	blr	x1
   56a98:	str	x27, [x20, x0]
   56a9c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56aa0:	ldr	x1, [x0, #2768]
   56aa4:	add	x0, x0, #0xad0
   56aa8:	blr	x1
   56aac:	str	x26, [x20, x0]
   56ab0:	mov	w2, #0x1                   	// #1
   56ab4:	mov	x0, x19
   56ab8:	mov	w1, w24
   56abc:	bl	c880 <mpfr_underflow@plt>
   56ac0:	b	568dc <mpfr_beta@@Base+0x54>
   56ac4:	ldr	w8, [x21, #8]
   56ac8:	tbnz	w8, #31, 56ae0 <mpfr_beta@@Base+0x258>
   56acc:	mov	x0, x21
   56ad0:	mov	x1, x22
   56ad4:	bl	cea0 <mpfr_cmpabs@plt>
   56ad8:	cmp	w0, #0x0
   56adc:	b.le	56c20 <mpfr_beta@@Base+0x398>
   56ae0:	str	x25, [x19, #16]
   56ae4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56ae8:	ldr	x1, [x0, #2800]
   56aec:	add	x0, x0, #0xaf0
   56af0:	blr	x1
   56af4:	mrs	x8, tpidr_el0
   56af8:	ldr	w9, [x8, x0]
   56afc:	mov	w21, wzr
   56b00:	orr	w9, w9, #0x4
   56b04:	str	w9, [x8, x0]
   56b08:	b	568e0 <mpfr_beta@@Base+0x58>
   56b0c:	str	x25, [x19, #16]
   56b10:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56b14:	ldr	x1, [x0, #2800]
   56b18:	add	x0, x0, #0xaf0
   56b1c:	blr	x1
   56b20:	ldr	w8, [x20, x0]
   56b24:	mov	w21, wzr
   56b28:	orr	w8, w8, #0x4
   56b2c:	str	w8, [x20, x0]
   56b30:	b	568e0 <mpfr_beta@@Base+0x58>
   56b34:	cbnz	w0, 572bc <mpfr_beta@@Base+0xa34>
   56b38:	sub	x0, x29, #0x28
   56b3c:	bl	cbe0 <mpfr_sgn@plt>
   56b40:	cbnz	w23, 56bb8 <mpfr_beta@@Base+0x330>
   56b44:	cmp	w0, #0x0
   56b48:	b.gt	56bb8 <mpfr_beta@@Base+0x330>
   56b4c:	sub	x0, x29, #0x28
   56b50:	bl	c600 <mpfr_integer_p@plt>
   56b54:	cbz	w0, 56bb8 <mpfr_beta@@Base+0x330>
   56b58:	sub	x0, x29, #0x28
   56b5c:	bl	c4f0 <mpfr_clear@plt>
   56b60:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56b64:	ldr	x1, [x0, #2800]
   56b68:	add	x0, x0, #0xaf0
   56b6c:	blr	x1
   56b70:	ldr	w8, [sp, #44]
   56b74:	str	w8, [x20, x0]
   56b78:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56b7c:	ldr	x1, [x0, #2736]
   56b80:	add	x0, x0, #0xab0
   56b84:	blr	x1
   56b88:	str	x27, [x20, x0]
   56b8c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56b90:	ldr	x1, [x0, #2768]
   56b94:	add	x0, x0, #0xad0
   56b98:	blr	x1
   56b9c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   56ba0:	mov	w9, #0x1                   	// #1
   56ba4:	mov	w21, wzr
   56ba8:	str	x26, [x20, x0]
   56bac:	str	x8, [x19, #16]
   56bb0:	str	w9, [x19, #8]
   56bb4:	b	568e0 <mpfr_beta@@Base+0x58>
   56bb8:	str	x19, [sp, #48]
   56bbc:	ldr	x19, [x19]
   56bc0:	subs	x23, x19, #0x1
   56bc4:	b.eq	572d8 <mpfr_beta@@Base+0xa50>  // b.none
   56bc8:	b.le	572e0 <mpfr_beta@@Base+0xa58>
   56bcc:	clz	x8, x23
   56bd0:	mov	w9, #0x40                  	// #64
   56bd4:	sub	x8, x9, x8
   56bd8:	add	x23, x8, x19
   56bdc:	cmp	x23, x25
   56be0:	str	w24, [sp, #12]
   56be4:	b.gt	57488 <mpfr_beta@@Base+0xc00>
   56be8:	sub	x8, x23, #0x1
   56bec:	add	x9, x23, #0x3e
   56bf0:	cmp	x8, #0x0
   56bf4:	csel	x8, x9, x8, lt  // lt = tstop
   56bf8:	asr	x8, x8, #6
   56bfc:	cmp	x23, #0x201
   56c00:	add	x24, x8, #0x1
   56c04:	str	x27, [sp, #32]
   56c08:	b.lt	56ccc <mpfr_beta@@Base+0x444>  // b.tstop
   56c0c:	lsl	x0, x24, #4
   56c10:	str	x0, [sp, #56]
   56c14:	bl	d1f0 <mpfr_allocate_func@plt>
   56c18:	str	x0, [sp, #64]
   56c1c:	b	56cd8 <mpfr_beta@@Base+0x450>
   56c20:	mov	x0, x21
   56c24:	bl	c600 <mpfr_integer_p@plt>
   56c28:	cbz	w0, 56ae0 <mpfr_beta@@Base+0x258>
   56c2c:	mov	x0, x21
   56c30:	mov	x1, x22
   56c34:	bl	cea0 <mpfr_cmpabs@plt>
   56c38:	cbz	w0, 57168 <mpfr_beta@@Base+0x8e0>
   56c3c:	ldr	x8, [x21, #16]
   56c40:	ldr	x9, [x22, #16]
   56c44:	sub	x0, x29, #0x28
   56c48:	cmp	x8, x9
   56c4c:	csel	x1, x8, x9, gt
   56c50:	bl	cf60 <mpfr_init2@plt>
   56c54:	sub	x0, x29, #0x28
   56c58:	mov	x1, x21
   56c5c:	mov	x2, x22
   56c60:	mov	w3, wzr
   56c64:	bl	c640 <mpfr_add@plt>
   56c68:	cbnz	w0, 57384 <mpfr_beta@@Base+0xafc>
   56c6c:	sub	x0, x29, #0x28
   56c70:	sub	x2, x29, #0x28
   56c74:	mov	w1, #0x1                   	// #1
   56c78:	mov	w3, wzr
   56c7c:	bl	cf30 <mpfr_ui_sub@plt>
   56c80:	cbnz	w0, 573a0 <mpfr_beta@@Base+0xb18>
   56c84:	mov	x0, x21
   56c88:	bl	d1a0 <mpfr_odd_p@plt>
   56c8c:	cbz	w0, 57180 <mpfr_beta@@Base+0x8f8>
   56c90:	cmp	w24, #0x3
   56c94:	mov	w8, #0x2                   	// #2
   56c98:	csel	w8, w8, w24, eq  // eq = none
   56c9c:	cmp	w24, #0x2
   56ca0:	mov	w9, #0x3                   	// #3
   56ca4:	csel	w3, w9, w8, eq  // eq = none
   56ca8:	sub	x2, x29, #0x28
   56cac:	mov	x0, x19
   56cb0:	mov	x1, x21
   56cb4:	bl	cda0 <mpfr_beta@plt>
   56cb8:	ldr	w8, [x19, #8]
   56cbc:	neg	w21, w0
   56cc0:	neg	w8, w8
   56cc4:	str	w8, [x19, #8]
   56cc8:	b	57198 <mpfr_beta@@Base+0x910>
   56ccc:	add	x8, sp, #0x38
   56cd0:	add	x8, x8, #0x10
   56cd4:	stp	xzr, x8, [sp, #56]
   56cd8:	ldr	w9, [sp, #12]
   56cdc:	ldr	x8, [sp, #64]
   56ce0:	mov	w10, #0x1                   	// #1
   56ce4:	mov	x19, x26
   56ce8:	cmp	w9, #0x0
   56cec:	ldr	w9, [sp, #44]
   56cf0:	stur	x8, [x29, #-48]
   56cf4:	add	x8, x8, x24, lsl #3
   56cf8:	stur	x23, [x29, #-104]
   56cfc:	orr	w9, w9, #0x4
   56d00:	str	w9, [sp, #28]
   56d04:	mov	w9, #0x40                  	// #64
   56d08:	str	x9, [sp]
   56d0c:	cset	w9, eq  // eq = none
   56d10:	stur	w10, [x29, #-64]
   56d14:	stur	w10, [x29, #-96]
   56d18:	str	x9, [sp, #16]
   56d1c:	stp	x8, x23, [x29, #-80]
   56d20:	b	56d2c <mpfr_beta@@Base+0x4a4>
   56d24:	mov	w8, #0xc                   	// #12
   56d28:	cbnz	w8, 570a8 <mpfr_beta@@Base+0x820>
   56d2c:	cmp	x23, x25
   56d30:	b.gt	57488 <mpfr_beta@@Base+0xc00>
   56d34:	sub	x8, x23, #0x1
   56d38:	add	x9, x23, #0x3e
   56d3c:	cmp	x8, #0x0
   56d40:	ldr	x1, [sp, #56]
   56d44:	csel	x8, x9, x8, lt  // lt = tstop
   56d48:	asr	x8, x8, #6
   56d4c:	add	x24, x8, #0x1
   56d50:	lsl	x2, x24, #4
   56d54:	str	x2, [sp, #56]
   56d58:	cbz	x1, 56d68 <mpfr_beta@@Base+0x4e0>
   56d5c:	ldr	x0, [sp, #64]
   56d60:	bl	c660 <mpfr_reallocate_func@plt>
   56d64:	b	56d70 <mpfr_beta@@Base+0x4e8>
   56d68:	mov	x0, x2
   56d6c:	bl	d1f0 <mpfr_allocate_func@plt>
   56d70:	mov	x8, x0
   56d74:	str	x0, [sp, #64]
   56d78:	mov	w9, #0x1                   	// #1
   56d7c:	stur	x8, [x29, #-48]
   56d80:	add	x8, x8, x24, lsl #3
   56d84:	sub	x0, x29, #0x48
   56d88:	mov	x1, x21
   56d8c:	mov	w2, wzr
   56d90:	stur	w9, [x29, #-64]
   56d94:	stur	x23, [x29, #-104]
   56d98:	stp	x8, x23, [x29, #-80]
   56d9c:	stur	w9, [x29, #-96]
   56da0:	bl	cc90 <mpfr_gamma@plt>
   56da4:	mov	w26, w0
   56da8:	sub	x0, x29, #0x68
   56dac:	mov	x1, x22
   56db0:	mov	w2, wzr
   56db4:	bl	cc90 <mpfr_gamma@plt>
   56db8:	mov	w27, w0
   56dbc:	sub	x0, x29, #0x48
   56dc0:	sub	x1, x29, #0x48
   56dc4:	sub	x2, x29, #0x68
   56dc8:	mov	w3, wzr
   56dcc:	bl	c1b0 <mpfr_mul@plt>
   56dd0:	mov	w28, w0
   56dd4:	sub	x0, x29, #0x68
   56dd8:	sub	x1, x29, #0x28
   56ddc:	mov	w2, wzr
   56de0:	bl	cc90 <mpfr_gamma@plt>
   56de4:	mov	w24, w0
   56de8:	sub	x0, x29, #0x48
   56dec:	sub	x1, x29, #0x48
   56df0:	sub	x2, x29, #0x68
   56df4:	mov	w3, wzr
   56df8:	bl	caf0 <mpfr_div@plt>
   56dfc:	ldur	x8, [x29, #-56]
   56e00:	mov	x9, #0x2                   	// #2
   56e04:	movk	x9, #0x8000, lsl #48
   56e08:	cmp	x8, x9
   56e0c:	b.ne	56e94 <mpfr_beta@@Base+0x60c>  // b.any
   56e10:	sub	x0, x29, #0x28
   56e14:	bl	c4f0 <mpfr_clear@plt>
   56e18:	ldr	x1, [sp, #56]
   56e1c:	cbz	x1, 56e28 <mpfr_beta@@Base+0x5a0>
   56e20:	ldr	x0, [sp, #64]
   56e24:	bl	d120 <mpfr_free_func@plt>
   56e28:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56e2c:	ldr	x1, [x0, #2800]
   56e30:	add	x0, x0, #0xaf0
   56e34:	blr	x1
   56e38:	ldr	w9, [sp, #44]
   56e3c:	mov	x8, x0
   56e40:	str	w9, [x20, x0]
   56e44:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56e48:	ldr	x1, [x0, #2736]
   56e4c:	add	x0, x0, #0xab0
   56e50:	blr	x1
   56e54:	ldr	x9, [sp, #32]
   56e58:	str	x9, [x20, x0]
   56e5c:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   56e60:	ldr	x1, [x0, #2768]
   56e64:	add	x0, x0, #0xad0
   56e68:	blr	x1
   56e6c:	ldr	x9, [sp, #48]
   56e70:	mov	x10, #0x2                   	// #2
   56e74:	movk	x10, #0x8000, lsl #48
   56e78:	str	x19, [x20, x0]
   56e7c:	str	x10, [x9, #16]
   56e80:	ldr	w9, [sp, #28]
   56e84:	mov	x27, x19
   56e88:	str	w9, [x20, x8]
   56e8c:	mov	w8, #0x1                   	// #1
   56e90:	b	56d28 <mpfr_beta@@Base+0x4a0>
   56e94:	orr	w9, w27, w26
   56e98:	orr	w9, w9, w28
   56e9c:	orr	w9, w9, w24
   56ea0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   56ea4:	cmp	x8, x10
   56ea8:	orr	w24, w9, w0
   56eac:	b.le	56fac <mpfr_beta@@Base+0x724>
   56eb0:	mov	x27, x19
   56eb4:	cbz	w24, 56d24 <mpfr_beta@@Base+0x49c>
   56eb8:	ldur	x8, [x29, #-56]
   56ebc:	mov	x9, #0x2                   	// #2
   56ec0:	movk	x9, #0x8000, lsl #48
   56ec4:	add	x9, x9, #0x2
   56ec8:	cmp	x8, x9
   56ecc:	b.lt	56f0c <mpfr_beta@@Base+0x684>  // b.tstop
   56ed0:	ldur	x8, [x29, #-72]
   56ed4:	ldr	x9, [sp, #48]
   56ed8:	ldur	x0, [x29, #-48]
   56edc:	sub	x2, x23, #0x3
   56ee0:	sub	x10, x8, #0x1
   56ee4:	add	x8, x8, #0x3e
   56ee8:	cmp	x10, #0x0
   56eec:	csel	x8, x8, x10, lt  // lt = tstop
   56ef0:	asr	x8, x8, #6
   56ef4:	ldr	x9, [x9]
   56ef8:	add	x1, x8, #0x1
   56efc:	ldr	x8, [sp, #16]
   56f00:	add	x3, x9, x8
   56f04:	bl	c830 <mpfr_round_p@plt>
   56f08:	cbnz	w0, 56d24 <mpfr_beta@@Base+0x49c>
   56f0c:	mov	w1, #0x1                   	// #1
   56f10:	mov	x0, x21
   56f14:	mov	x2, xzr
   56f18:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   56f1c:	cbz	w0, 56fd0 <mpfr_beta@@Base+0x748>
   56f20:	mov	w1, #0x1                   	// #1
   56f24:	mov	x0, x22
   56f28:	mov	x2, xzr
   56f2c:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   56f30:	cbnz	w0, 56f4c <mpfr_beta@@Base+0x6c4>
   56f34:	ldr	x8, [x21, #16]
   56f38:	mov	w1, #0x1                   	// #1
   56f3c:	mov	x0, x21
   56f40:	sub	x2, x8, #0x1
   56f44:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   56f48:	cbz	w0, 57024 <mpfr_beta@@Base+0x79c>
   56f4c:	mov	w1, #0x2                   	// #2
   56f50:	mov	x0, x21
   56f54:	mov	x2, xzr
   56f58:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   56f5c:	cbnz	w0, 56f74 <mpfr_beta@@Base+0x6ec>
   56f60:	mov	x1, #0xffffffffffffffff    	// #-1
   56f64:	mov	x2, #0xffffffffffffffff    	// #-1
   56f68:	mov	x0, x22
   56f6c:	bl	c890 <mpfr_cmp_si_2exp@plt>
   56f70:	cbz	w0, 57048 <mpfr_beta@@Base+0x7c0>
   56f74:	mov	x8, #0x2                   	// #2
   56f78:	ldr	x9, [sp]
   56f7c:	movk	x8, #0x8000, lsl #48
   56f80:	sub	x8, x8, x23
   56f84:	sub	x8, x8, #0x103
   56f88:	cmp	x9, x8
   56f8c:	b.gt	57088 <mpfr_beta@@Base+0x800>
   56f90:	add	x23, x23, x9
   56f94:	cmp	x23, #0x0
   56f98:	cinc	x9, x23, lt  // lt = tstop
   56f9c:	mov	w8, wzr
   56fa0:	asr	x9, x9, #1
   56fa4:	str	x9, [sp]
   56fa8:	b	56d28 <mpfr_beta@@Base+0x4a0>
   56fac:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   56fb0:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   56fb4:	mov	w1, #0x129                 	// #297
   56fb8:	add	x0, x0, #0x91c
   56fbc:	add	x2, x2, #0x923
   56fc0:	bl	d030 <mpfr_assert_fail@plt>
   56fc4:	mov	x27, x19
   56fc8:	cbnz	w24, 56eb8 <mpfr_beta@@Base+0x630>
   56fcc:	b	56d24 <mpfr_beta@@Base+0x49c>
   56fd0:	ldr	x26, [x22, #16]
   56fd4:	mov	w1, #0x1                   	// #1
   56fd8:	mov	x0, x22
   56fdc:	sub	x24, x26, #0x1
   56fe0:	mov	x2, x24
   56fe4:	bl	c3b0 <mpfr_cmp_ui_2exp@plt>
   56fe8:	cbz	w0, 57008 <mpfr_beta@@Base+0x780>
   56fec:	mov	x1, #0xffffffffffffffff    	// #-1
   56ff0:	mov	x0, x22
   56ff4:	mov	x2, x24
   56ff8:	bl	c890 <mpfr_cmp_si_2exp@plt>
   56ffc:	cbz	w0, 57064 <mpfr_beta@@Base+0x7dc>
   57000:	mov	w8, wzr
   57004:	b	57080 <mpfr_beta@@Base+0x7f8>
   57008:	mov	w8, #0x1                   	// #1
   5700c:	sub	x2, x8, x26
   57010:	sub	x0, x29, #0x48
   57014:	mov	w1, #0x1                   	// #1
   57018:	mov	w3, wzr
   5701c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   57020:	b	5707c <mpfr_beta@@Base+0x7f4>
   57024:	ldr	x8, [x21, #16]
   57028:	mov	w9, #0x1                   	// #1
   5702c:	sub	x0, x29, #0x48
   57030:	mov	w1, #0x1                   	// #1
   57034:	sub	x2, x9, x8
   57038:	mov	w3, wzr
   5703c:	bl	cac0 <mpfr_set_ui_2exp@plt>
   57040:	mov	w8, #0xc                   	// #12
   57044:	b	56d28 <mpfr_beta@@Base+0x4a0>
   57048:	sub	x0, x29, #0x48
   5704c:	mov	x1, #0xffffffffffffffff    	// #-1
   57050:	mov	w2, #0x2                   	// #2
   57054:	mov	w3, wzr
   57058:	bl	bed0 <mpfr_set_si_2exp@plt>
   5705c:	mov	w8, #0xc                   	// #12
   57060:	b	56d28 <mpfr_beta@@Base+0x4a0>
   57064:	mov	w8, #0x1                   	// #1
   57068:	sub	x2, x8, x26
   5706c:	sub	x0, x29, #0x48
   57070:	mov	x1, #0xffffffffffffffff    	// #-1
   57074:	mov	w3, wzr
   57078:	bl	bed0 <mpfr_set_si_2exp@plt>
   5707c:	mov	w8, #0xc                   	// #12
   57080:	cbnz	w8, 56d28 <mpfr_beta@@Base+0x4a0>
   57084:	b	56f20 <mpfr_beta@@Base+0x698>
   57088:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   5708c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   57090:	mov	w1, #0x151                 	// #337
   57094:	add	x0, x0, #0x91c
   57098:	add	x2, x2, #0x99a
   5709c:	bl	d030 <mpfr_assert_fail@plt>
   570a0:	ldr	x9, [sp]
   570a4:	b	56f90 <mpfr_beta@@Base+0x708>
   570a8:	cmp	w8, #0xc
   570ac:	b.ne	57160 <mpfr_beta@@Base+0x8d8>  // b.any
   570b0:	ldr	x19, [sp, #48]
   570b4:	ldr	w22, [sp, #12]
   570b8:	ldur	w3, [x29, #-64]
   570bc:	sub	x1, x29, #0x48
   570c0:	mov	x0, x19
   570c4:	mov	w2, w22
   570c8:	bl	cb70 <mpfr_set4@plt>
   570cc:	ldr	x1, [sp, #56]
   570d0:	mov	w21, w0
   570d4:	cbz	x1, 570e0 <mpfr_beta@@Base+0x858>
   570d8:	ldr	x0, [sp, #64]
   570dc:	bl	d120 <mpfr_free_func@plt>
   570e0:	sub	x0, x29, #0x28
   570e4:	bl	c4f0 <mpfr_clear@plt>
   570e8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   570ec:	ldr	x1, [x0, #2800]
   570f0:	add	x0, x0, #0xaf0
   570f4:	blr	x1
   570f8:	ldr	w9, [sp, #44]
   570fc:	str	w9, [x20, x0]
   57100:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   57104:	ldr	x1, [x0, #2736]
   57108:	add	x0, x0, #0xab0
   5710c:	blr	x1
   57110:	ldr	x10, [sp, #32]
   57114:	str	x10, [x20, x0]
   57118:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5711c:	ldr	x1, [x0, #2768]
   57120:	add	x0, x0, #0xad0
   57124:	blr	x1
   57128:	str	x27, [x20, x0]
   5712c:	ldr	x8, [x19, #16]
   57130:	cmp	x8, x27
   57134:	b.gt	5732c <mpfr_beta@@Base+0xaa4>
   57138:	cmp	x8, x10
   5713c:	b.lt	5732c <mpfr_beta@@Base+0xaa4>  // b.tstop
   57140:	cbz	w21, 568e0 <mpfr_beta@@Base+0x58>
   57144:	orr	w8, w9, #0x8
   57148:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5714c:	ldr	x1, [x0, #2800]
   57150:	add	x0, x0, #0xaf0
   57154:	blr	x1
   57158:	str	w8, [x20, x0]
   5715c:	b	568e0 <mpfr_beta@@Base+0x58>
   57160:	mov	w21, wzr
   57164:	b	568e0 <mpfr_beta@@Base+0x58>
   57168:	mov	w1, #0x1                   	// #1
   5716c:	mov	x0, x19
   57170:	mov	x2, x21
   57174:	mov	w3, w24
   57178:	bl	c7b0 <mpfr_ui_div@plt>
   5717c:	b	568dc <mpfr_beta@@Base+0x54>
   57180:	sub	x2, x29, #0x28
   57184:	mov	x0, x19
   57188:	mov	x1, x21
   5718c:	mov	w3, w24
   57190:	bl	cda0 <mpfr_beta@plt>
   57194:	mov	w21, w0
   57198:	sub	x0, x29, #0x28
   5719c:	bl	c4f0 <mpfr_clear@plt>
   571a0:	b	568e0 <mpfr_beta@@Base+0x58>
   571a4:	cmp	x8, x25
   571a8:	b.eq	56ae0 <mpfr_beta@@Base+0x258>  // b.none
   571ac:	ldr	x9, [x22, #16]
   571b0:	cmp	x9, x25
   571b4:	b.eq	56ae0 <mpfr_beta@@Base+0x258>  // b.none
   571b8:	mov	x20, #0x2                   	// #2
   571bc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   571c0:	movk	x20, #0x8000, lsl #48
   571c4:	mov	x28, x19
   571c8:	cmp	x8, x10
   571cc:	b.eq	5721c <mpfr_beta@@Base+0x994>  // b.none
   571d0:	cmp	x9, x10
   571d4:	b.eq	5721c <mpfr_beta@@Base+0x994>  // b.none
   571d8:	mov	x0, x21
   571dc:	bl	cbe0 <mpfr_sgn@plt>
   571e0:	cbz	w0, 572fc <mpfr_beta@@Base+0xa74>
   571e4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   571e8:	str	x8, [x28, #16]
   571ec:	ldr	w8, [x22, #8]
   571f0:	str	w8, [x28, #8]
   571f4:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   571f8:	ldr	x1, [x0, #2800]
   571fc:	add	x0, x0, #0xaf0
   57200:	blr	x1
   57204:	mrs	x8, tpidr_el0
   57208:	ldr	w9, [x8, x0]
   5720c:	mov	w21, wzr
   57210:	orr	w9, w9, #0x20
   57214:	str	w9, [x8, x0]
   57218:	b	568e0 <mpfr_beta@@Base+0x58>
   5721c:	cmp	x8, x10
   57220:	b.ne	57258 <mpfr_beta@@Base+0x9d0>  // b.any
   57224:	ldr	w8, [x21, #8]
   57228:	cmp	w8, #0x1
   5722c:	b.lt	57258 <mpfr_beta@@Base+0x9d0>  // b.tstop
   57230:	mov	x0, x22
   57234:	bl	cbe0 <mpfr_sgn@plt>
   57238:	cmp	w0, #0x1
   5723c:	b.lt	5735c <mpfr_beta@@Base+0xad4>  // b.tstop
   57240:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   57244:	mov	w9, #0x1                   	// #1
   57248:	mov	w21, wzr
   5724c:	str	x8, [x28, #16]
   57250:	str	w9, [x28, #8]
   57254:	b	568e0 <mpfr_beta@@Base+0x58>
   57258:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5725c:	mov	x25, #0x2                   	// #2
   57260:	cmp	x9, x8
   57264:	mov	x19, x28
   57268:	movk	x25, #0x8000, lsl #48
   5726c:	b.ne	56928 <mpfr_beta@@Base+0xa0>  // b.any
   57270:	mov	x19, #0x2                   	// #2
   57274:	mov	x0, x21
   57278:	movk	x19, #0x8000, lsl #48
   5727c:	bl	cbe0 <mpfr_sgn@plt>
   57280:	cmp	w0, #0x1
   57284:	b.lt	57324 <mpfr_beta@@Base+0xa9c>  // b.tstop
   57288:	mov	x0, x21
   5728c:	bl	c600 <mpfr_integer_p@plt>
   57290:	cbz	w0, 57324 <mpfr_beta@@Base+0xa9c>
   57294:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   57298:	mov	x0, x21
   5729c:	str	x8, [x28, #16]
   572a0:	bl	d1a0 <mpfr_odd_p@plt>
   572a4:	cmp	w0, #0x0
   572a8:	mov	w8, #0x1                   	// #1
   572ac:	cneg	w8, w8, ne  // ne = any
   572b0:	mov	w21, wzr
   572b4:	str	w8, [x28, #8]
   572b8:	b	568e0 <mpfr_beta@@Base+0x58>
   572bc:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   572c0:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   572c4:	add	x0, x0, #0x91c
   572c8:	add	x2, x2, #0x457
   572cc:	mov	w1, #0xf7                  	// #247
   572d0:	bl	d030 <mpfr_assert_fail@plt>
   572d4:	b	56b38 <mpfr_beta@@Base+0x2b0>
   572d8:	mov	x8, xzr
   572dc:	b	56bd8 <mpfr_beta@@Base+0x350>
   572e0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   572e4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x3854>
   572e8:	add	x0, x0, #0x91c
   572ec:	add	x2, x2, #0x985
   572f0:	mov	w1, #0x108                 	// #264
   572f4:	bl	d030 <mpfr_assert_fail@plt>
   572f8:	b	56bcc <mpfr_beta@@Base+0x344>
   572fc:	mov	x0, x22
   57300:	bl	cbe0 <mpfr_sgn@plt>
   57304:	cbz	w0, 57340 <mpfr_beta@@Base+0xab8>
   57308:	mov	x0, x22
   5730c:	bl	c600 <mpfr_integer_p@plt>
   57310:	cbnz	w0, 5737c <mpfr_beta@@Base+0xaf4>
   57314:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   57318:	str	x8, [x28, #16]
   5731c:	ldr	w8, [x21, #8]
   57320:	b	571f0 <mpfr_beta@@Base+0x968>
   57324:	str	x19, [x28, #16]
   57328:	b	56ae4 <mpfr_beta@@Base+0x25c>
   5732c:	mov	x0, x19
   57330:	mov	w1, w21
   57334:	mov	w2, w22
   57338:	bl	d020 <mpfr_check_range@plt>
   5733c:	b	568dc <mpfr_beta@@Base+0x54>
   57340:	ldr	w8, [x21, #8]
   57344:	ldr	w9, [x22, #8]
   57348:	cmp	w8, w9
   5734c:	b.ne	5737c <mpfr_beta@@Base+0xaf4>  // b.any
   57350:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   57354:	str	x9, [x28, #16]
   57358:	b	571f0 <mpfr_beta@@Base+0x968>
   5735c:	ldr	x8, [x22, #16]
   57360:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   57364:	orr	x8, x8, #0x2
   57368:	cmp	x8, x9
   5736c:	b.eq	5737c <mpfr_beta@@Base+0xaf4>  // b.none
   57370:	mov	x0, x22
   57374:	bl	c600 <mpfr_integer_p@plt>
   57378:	cbz	w0, 573bc <mpfr_beta@@Base+0xb34>
   5737c:	str	x20, [x28, #16]
   57380:	b	56ae4 <mpfr_beta@@Base+0x25c>
   57384:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   57388:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   5738c:	add	x0, x0, #0x91c
   57390:	add	x2, x2, #0x457
   57394:	mov	w1, #0xc6                  	// #198
   57398:	bl	d030 <mpfr_assert_fail@plt>
   5739c:	b	56c6c <mpfr_beta@@Base+0x3e4>
   573a0:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   573a4:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   573a8:	add	x0, x0, #0x91c
   573ac:	add	x2, x2, #0x457
   573b0:	mov	w1, #0xc8                  	// #200
   573b4:	bl	d030 <mpfr_assert_fail@plt>
   573b8:	b	56c84 <mpfr_beta@@Base+0x3fc>
   573bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   573c0:	ldr	x1, [x0, #2800]
   573c4:	add	x0, x0, #0xaf0
   573c8:	blr	x1
   573cc:	mrs	x19, tpidr_el0
   573d0:	ldr	w25, [x19, x0]
   573d4:	mov	x20, x0
   573d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   573dc:	ldr	x1, [x0, #2736]
   573e0:	add	x0, x0, #0xab0
   573e4:	blr	x1
   573e8:	ldr	x26, [x19, x0]
   573ec:	mov	x23, x0
   573f0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   573f4:	ldr	x1, [x0, #2768]
   573f8:	add	x0, x0, #0xad0
   573fc:	blr	x1
   57400:	ldr	x27, [x19, x0]
   57404:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   57408:	str	x8, [x19, x23]
   5740c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   57410:	mov	x24, x0
   57414:	str	x8, [x19, x0]
   57418:	add	x0, sp, #0x38
   5741c:	mov	w1, #0x1                   	// #1
   57420:	bl	cf60 <mpfr_init2@plt>
   57424:	add	x0, sp, #0x38
   57428:	mov	w1, #0x1                   	// #1
   5742c:	mov	x2, xzr
   57430:	mov	w3, wzr
   57434:	bl	cac0 <mpfr_set_ui_2exp@plt>
   57438:	add	x0, sp, #0x38
   5743c:	sub	x1, x29, #0x28
   57440:	add	x3, sp, #0x38
   57444:	mov	w4, #0x3                   	// #3
   57448:	mov	x2, x22
   5744c:	bl	d170 <mpfr_fmodquo@plt>
   57450:	add	x0, sp, #0x38
   57454:	bl	c4f0 <mpfr_clear@plt>
   57458:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5745c:	str	w25, [x19, x20]
   57460:	str	x26, [x19, x23]
   57464:	str	x27, [x19, x24]
   57468:	str	x8, [x28, #16]
   5746c:	ldur	x8, [x29, #-40]
   57470:	mov	w21, wzr
   57474:	tst	x8, #0x1
   57478:	mov	w8, #0x1                   	// #1
   5747c:	cneg	w8, w8, ne  // ne = any
   57480:	str	w8, [x28, #8]
   57484:	b	568e0 <mpfr_beta@@Base+0x58>
   57488:	bl	cdd0 <mpfr_abort_prec_max@plt>

000000000005748c <mpfr_odd_p@@Base>:
   5748c:	stp	x29, x30, [sp, #-48]!
   57490:	stp	x20, x19, [sp, #32]
   57494:	str	x21, [sp, #16]
   57498:	ldr	x21, [x0, #16]
   5749c:	mov	x29, sp
   574a0:	cmp	x21, #0x1
   574a4:	b.lt	57540 <mpfr_odd_p@@Base+0xb4>  // b.tstop
   574a8:	ldr	x8, [x0]
   574ac:	mov	x19, x0
   574b0:	cmp	x21, x8
   574b4:	b.gt	57540 <mpfr_odd_p@@Base+0xb4>
   574b8:	sub	x9, x8, #0x1
   574bc:	add	x8, x8, #0x3e
   574c0:	cmp	x9, #0x0
   574c4:	csel	x8, x8, x9, lt  // lt = tstop
   574c8:	and	x8, x8, #0xffffffffffffffc0
   574cc:	sub	x8, x8, x21
   574d0:	add	x9, x8, #0x40
   574d4:	add	x8, x8, #0x7f
   574d8:	cmp	x9, #0x0
   574dc:	csel	x8, x8, x9, lt  // lt = tstop
   574e0:	cmn	x9, #0x40
   574e4:	asr	x20, x8, #6
   574e8:	b.le	5755c <mpfr_odd_p@@Base+0xd0>
   574ec:	ldr	x8, [x19, #24]
   574f0:	add	x9, x21, #0x3f
   574f4:	cmp	x21, #0x0
   574f8:	csel	x10, x9, x21, lt  // lt = tstop
   574fc:	ldr	x9, [x8, x20, lsl #3]
   57500:	and	x10, x10, #0xffffffffffffffc0
   57504:	subs	x10, x21, x10
   57508:	b.eq	57524 <mpfr_odd_p@@Base+0x98>  // b.none
   5750c:	sub	x10, x10, #0x1
   57510:	lsl	x9, x9, x10
   57514:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   57518:	cmp	x9, x10
   5751c:	b.eq	57528 <mpfr_odd_p@@Base+0x9c>  // b.none
   57520:	b	57540 <mpfr_odd_p@@Base+0xb4>
   57524:	tbz	w9, #0, 57540 <mpfr_odd_p@@Base+0xb4>
   57528:	sub	x8, x8, #0x8
   5752c:	subs	x9, x20, #0x1
   57530:	b.lt	57554 <mpfr_odd_p@@Base+0xc8>  // b.tstop
   57534:	ldr	x10, [x8, x20, lsl #3]
   57538:	mov	x20, x9
   5753c:	cbz	x10, 5752c <mpfr_odd_p@@Base+0xa0>
   57540:	mov	w0, wzr
   57544:	ldp	x20, x19, [sp, #32]
   57548:	ldr	x21, [sp, #16]
   5754c:	ldp	x29, x30, [sp], #48
   57550:	ret
   57554:	mov	w0, #0x1                   	// #1
   57558:	b	57544 <mpfr_odd_p@@Base+0xb8>
   5755c:	adrp	x0, 61000 <mpfr_bases@@Base+0x1408>
   57560:	adrp	x2, 61000 <mpfr_bases@@Base+0x1408>
   57564:	add	x0, x0, #0x967
   57568:	add	x2, x2, #0x96f
   5756c:	mov	w1, #0x3c                  	// #60
   57570:	bl	d030 <mpfr_assert_fail@plt>
   57574:	b	574ec <mpfr_odd_p@@Base+0x60>

0000000000057578 <mpfr_get_q@@Base>:
   57578:	stp	x29, x30, [sp, #-32]!
   5757c:	stp	x20, x19, [sp, #16]
   57580:	mov	x20, x1
   57584:	mov	x19, x0
   57588:	add	x0, x0, #0x10
   5758c:	mov	w1, #0x1                   	// #1
   57590:	mov	x29, sp
   57594:	bl	c110 <__gmpz_set_ui@plt>
   57598:	ldr	x8, [x20, #16]
   5759c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   575a0:	cmp	x8, x9
   575a4:	b.le	575e8 <mpfr_get_q@@Base+0x70>
   575a8:	mov	x0, x19
   575ac:	mov	x1, x20
   575b0:	bl	cfb0 <mpfr_get_z_2exp@plt>
   575b4:	mov	x2, x0
   575b8:	tbnz	x0, #63, 575cc <mpfr_get_q@@Base+0x54>
   575bc:	mov	x0, x19
   575c0:	mov	x1, x19
   575c4:	bl	c6a0 <__gmpz_mul_2exp@plt>
   575c8:	b	575dc <mpfr_get_q@@Base+0x64>
   575cc:	neg	x2, x2
   575d0:	mov	x0, x19
   575d4:	mov	x1, x19
   575d8:	bl	cfe0 <__gmpq_div_2exp@plt>
   575dc:	ldp	x20, x19, [sp, #16]
   575e0:	ldp	x29, x30, [sp], #32
   575e4:	ret
   575e8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   575ec:	cmp	x8, x9
   575f0:	b.ne	57604 <mpfr_get_q@@Base+0x8c>  // b.any
   575f4:	mov	x0, x19
   575f8:	mov	x1, xzr
   575fc:	bl	c110 <__gmpz_set_ui@plt>
   57600:	b	575dc <mpfr_get_q@@Base+0x64>
   57604:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   57608:	ldr	x1, [x0, #2800]
   5760c:	add	x0, x0, #0xaf0
   57610:	blr	x1
   57614:	mrs	x8, tpidr_el0
   57618:	ldr	w9, [x8, x0]
   5761c:	orr	w9, w9, #0x10
   57620:	str	w9, [x8, x0]
   57624:	b	575f4 <mpfr_get_q@@Base+0x7c>

0000000000057628 <mpfr_mpz_init@@Base>:
   57628:	stp	x29, x30, [sp, #-16]!
   5762c:	mov	x29, sp
   57630:	mov	x8, x0
   57634:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   57638:	ldr	x1, [x0, #2720]
   5763c:	add	x0, x0, #0xaa0
   57640:	blr	x1
   57644:	mrs	x9, tpidr_el0
   57648:	ldr	w10, [x9, x0]
   5764c:	subs	w10, w10, #0x1
   57650:	b.lt	57690 <mpfr_mpz_init@@Base+0x68>  // b.tstop
   57654:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   57658:	ldr	x1, [x0, #2720]
   5765c:	add	x0, x0, #0xaa0
   57660:	blr	x1
   57664:	str	w10, [x9, x0]
   57668:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5766c:	ldr	x1, [x0, #2704]
   57670:	add	x0, x0, #0xa90
   57674:	blr	x1
   57678:	add	x9, x9, x0
   5767c:	ldr	q0, [x9, w10, sxtw #4]
   57680:	str	q0, [x8]
   57684:	str	wzr, [x8, #4]
   57688:	ldp	x29, x30, [sp], #16
   5768c:	ret
   57690:	mov	x0, x8
   57694:	bl	d040 <__gmpz_init@plt>
   57698:	ldp	x29, x30, [sp], #16
   5769c:	ret

00000000000576a0 <mpfr_mpz_init2@@Base>:
   576a0:	stp	x29, x30, [sp, #-16]!
   576a4:	mov	x29, sp
   576a8:	mov	x9, x1
   576ac:	mov	x8, x0
   576b0:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   576b4:	ldr	x1, [x0, #2720]
   576b8:	add	x0, x0, #0xaa0
   576bc:	blr	x1
   576c0:	cmp	x9, #0x800
   576c4:	b.hi	57714 <mpfr_mpz_init2@@Base+0x74>  // b.pmore
   576c8:	mrs	x10, tpidr_el0
   576cc:	ldr	w11, [x10, x0]
   576d0:	subs	w11, w11, #0x1
   576d4:	b.lt	57714 <mpfr_mpz_init2@@Base+0x74>  // b.tstop
   576d8:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   576dc:	ldr	x1, [x0, #2720]
   576e0:	add	x0, x0, #0xaa0
   576e4:	blr	x1
   576e8:	str	w11, [x10, x0]
   576ec:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   576f0:	ldr	x1, [x0, #2704]
   576f4:	add	x0, x0, #0xa90
   576f8:	blr	x1
   576fc:	add	x9, x10, x0
   57700:	ldr	q0, [x9, w11, sxtw #4]
   57704:	str	q0, [x8]
   57708:	str	wzr, [x8, #4]
   5770c:	ldp	x29, x30, [sp], #16
   57710:	ret
   57714:	mov	x0, x8
   57718:	mov	x1, x9
   5771c:	bl	cf70 <__gmpz_init2@plt>
   57720:	ldp	x29, x30, [sp], #16
   57724:	ret

0000000000057728 <mpfr_mpz_clear@@Base>:
   57728:	stp	x29, x30, [sp, #-16]!
   5772c:	mov	x29, sp
   57730:	mov	x8, x0
   57734:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   57738:	ldr	x1, [x0, #2720]
   5773c:	add	x0, x0, #0xaa0
   57740:	blr	x1
   57744:	mrs	x9, tpidr_el0
   57748:	ldrsw	x10, [x9, x0]
   5774c:	cmp	w10, #0x1f
   57750:	b.hi	5779c <mpfr_mpz_clear@@Base+0x74>  // b.pmore
   57754:	ldr	w11, [x8]
   57758:	cmp	w11, #0x20
   5775c:	b.gt	5779c <mpfr_mpz_clear@@Base+0x74>
   57760:	add	w11, w10, #0x1
   57764:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   57768:	ldr	x1, [x0, #2720]
   5776c:	add	x0, x0, #0xaa0
   57770:	blr	x1
   57774:	str	w11, [x9, x0]
   57778:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   5777c:	ldr	x1, [x0, #2704]
   57780:	add	x0, x0, #0xa90
   57784:	blr	x1
   57788:	ldr	q0, [x8]
   5778c:	add	x8, x9, x0
   57790:	str	q0, [x8, x10, lsl #4]
   57794:	ldp	x29, x30, [sp], #16
   57798:	ret
   5779c:	mov	x0, x8
   577a0:	bl	cb10 <__gmpz_clear@plt>
   577a4:	ldp	x29, x30, [sp], #16
   577a8:	ret

00000000000577ac <mpfr_free_pool@@Base>:
   577ac:	stp	x29, x30, [sp, #-48]!
   577b0:	str	x21, [sp, #16]
   577b4:	stp	x20, x19, [sp, #32]
   577b8:	mov	x29, sp
   577bc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   577c0:	ldr	x1, [x0, #2720]
   577c4:	add	x0, x0, #0xaa0
   577c8:	blr	x1
   577cc:	mrs	x20, tpidr_el0
   577d0:	ldr	w8, [x20, x0]
   577d4:	cmp	w8, #0x1
   577d8:	b.lt	57820 <mpfr_free_pool@@Base+0x74>  // b.tstop
   577dc:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   577e0:	ldr	x1, [x0, #2704]
   577e4:	add	x0, x0, #0xa90
   577e8:	blr	x1
   577ec:	mov	x21, xzr
   577f0:	add	x19, x20, x0
   577f4:	mov	x0, x19
   577f8:	bl	cb10 <__gmpz_clear@plt>
   577fc:	add	x21, x21, #0x1
   57800:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   57804:	ldr	x1, [x0, #2720]
   57808:	add	x0, x0, #0xaa0
   5780c:	blr	x1
   57810:	ldrsw	x8, [x20, x0]
   57814:	add	x19, x19, #0x10
   57818:	cmp	x21, x8
   5781c:	b.lt	577f4 <mpfr_free_pool@@Base+0x48>  // b.tstop
   57820:	adrp	x0, 73000 <mpfr_agm@@Base+0x64090>
   57824:	ldr	x1, [x0, #2720]
   57828:	add	x0, x0, #0xaa0
   5782c:	blr	x1
   57830:	str	wzr, [x20, x0]
   57834:	ldp	x20, x19, [sp, #32]
   57838:	ldr	x21, [sp, #16]
   5783c:	ldp	x29, x30, [sp], #48
   57840:	ret
   57844:	nop
   57848:	stp	x29, x30, [sp, #-48]!
   5784c:	mov	x29, sp
   57850:	str	q0, [sp, #16]
   57854:	str	q1, [sp, #32]
   57858:	ldp	x6, x1, [sp, #16]
   5785c:	ldp	x0, x3, [sp, #32]
   57860:	mrs	x15, fpcr
   57864:	lsr	x7, x1, #63
   57868:	mov	x10, x0
   5786c:	ubfiz	x4, x3, #3, #48
   57870:	lsr	x5, x3, #63
   57874:	mov	x12, x7
   57878:	ubfiz	x2, x1, #3, #48
   5787c:	orr	x4, x4, x0, lsr #61
   57880:	ubfx	x8, x1, #48, #15
   57884:	ubfx	x0, x3, #48, #15
   57888:	and	w7, w7, #0xff
   5788c:	mov	x16, x12
   57890:	cmp	x12, x5
   57894:	and	w11, w5, #0xff
   57898:	orr	x2, x2, x6, lsr #61
   5789c:	mov	x1, x8
   578a0:	lsl	x9, x6, #3
   578a4:	mov	x3, x0
   578a8:	lsl	x13, x10, #3
   578ac:	b.eq	57a58 <mpfr_free_pool@@Base+0x2ac>  // b.none
   578b0:	sub	w0, w8, w0
   578b4:	cmp	w0, #0x0
   578b8:	b.le	57a04 <mpfr_free_pool@@Base+0x258>
   578bc:	cbz	x3, 57ab8 <mpfr_free_pool@@Base+0x30c>
   578c0:	orr	x4, x4, #0x8000000000000
   578c4:	mov	x3, #0x7fff                	// #32767
   578c8:	cmp	x1, x3
   578cc:	b.eq	57cbc <mpfr_free_pool@@Base+0x510>  // b.none
   578d0:	cmp	w0, #0x74
   578d4:	b.gt	57d40 <mpfr_free_pool@@Base+0x594>
   578d8:	cmp	w0, #0x3f
   578dc:	b.gt	57ea0 <mpfr_free_pool@@Base+0x6f4>
   578e0:	mov	w3, #0x40                  	// #64
   578e4:	sub	w3, w3, w0
   578e8:	lsr	x6, x13, x0
   578ec:	lsl	x13, x13, x3
   578f0:	cmp	x13, #0x0
   578f4:	cset	x5, ne  // ne = any
   578f8:	lsl	x3, x4, x3
   578fc:	orr	x3, x3, x6
   57900:	lsr	x0, x4, x0
   57904:	orr	x3, x3, x5
   57908:	sub	x2, x2, x0
   5790c:	subs	x9, x9, x3
   57910:	sbc	x2, x2, xzr
   57914:	and	x3, x2, #0x7ffffffffffff
   57918:	tbz	x2, #51, 57af8 <mpfr_free_pool@@Base+0x34c>
   5791c:	cbz	x3, 57d24 <mpfr_free_pool@@Base+0x578>
   57920:	clz	x0, x3
   57924:	sub	w0, w0, #0xc
   57928:	neg	w2, w0
   5792c:	lsl	x4, x3, x0
   57930:	lsl	x3, x9, x0
   57934:	lsr	x9, x9, x2
   57938:	orr	x2, x9, x4
   5793c:	cmp	x1, w0, sxtw
   57940:	sxtw	x4, w0
   57944:	b.gt	57d04 <mpfr_free_pool@@Base+0x558>
   57948:	sub	w1, w0, w1
   5794c:	add	w0, w1, #0x1
   57950:	cmp	w0, #0x3f
   57954:	b.gt	57e68 <mpfr_free_pool@@Base+0x6bc>
   57958:	mov	w1, #0x40                  	// #64
   5795c:	sub	w1, w1, w0
   57960:	lsr	x4, x3, x0
   57964:	lsl	x3, x3, x1
   57968:	cmp	x3, #0x0
   5796c:	lsl	x9, x2, x1
   57970:	cset	x1, ne  // ne = any
   57974:	orr	x9, x9, x4
   57978:	lsr	x2, x2, x0
   5797c:	orr	x9, x9, x1
   57980:	orr	x8, x9, x2
   57984:	cbz	x8, 57b0c <mpfr_free_pool@@Base+0x360>
   57988:	and	x0, x9, #0x7
   5798c:	mov	x1, #0x0                   	// #0
   57990:	mov	w5, #0x1                   	// #1
   57994:	cbz	x0, 57d50 <mpfr_free_pool@@Base+0x5a4>
   57998:	and	x3, x15, #0xc00000
   5799c:	cmp	x3, #0x400, lsl #12
   579a0:	b.eq	57c94 <mpfr_free_pool@@Base+0x4e8>  // b.none
   579a4:	cmp	x3, #0x800, lsl #12
   579a8:	b.eq	57c74 <mpfr_free_pool@@Base+0x4c8>  // b.none
   579ac:	cbz	x3, 57ca0 <mpfr_free_pool@@Base+0x4f4>
   579b0:	and	x3, x2, #0x8000000000000
   579b4:	mov	w0, #0x10                  	// #16
   579b8:	cbz	w5, 579c0 <mpfr_free_pool@@Base+0x214>
   579bc:	orr	w0, w0, #0x8
   579c0:	cbz	x3, 57cd8 <mpfr_free_pool@@Base+0x52c>
   579c4:	add	x1, x1, #0x1
   579c8:	mov	x3, #0x7fff                	// #32767
   579cc:	cmp	x1, x3
   579d0:	b.eq	57bbc <mpfr_free_pool@@Base+0x410>  // b.none
   579d4:	and	w1, w1, #0x7fff
   579d8:	extr	x8, x2, x9, #3
   579dc:	ubfx	x2, x2, #3, #48
   579e0:	mov	x5, #0x0                   	// #0
   579e4:	orr	w1, w1, w7, lsl #15
   579e8:	bfxil	x5, x2, #0, #48
   579ec:	fmov	d0, x8
   579f0:	bfi	x5, x1, #48, #16
   579f4:	fmov	v0.d[1], x5
   579f8:	cbnz	w0, 57c18 <mpfr_free_pool@@Base+0x46c>
   579fc:	ldp	x29, x30, [sp], #48
   57a00:	ret
   57a04:	mov	x14, x5
   57a08:	b.eq	57b24 <mpfr_free_pool@@Base+0x378>  // b.none
   57a0c:	cbnz	x8, 57da8 <mpfr_free_pool@@Base+0x5fc>
   57a10:	orr	x1, x2, x9
   57a14:	cbz	x1, 57ad4 <mpfr_free_pool@@Base+0x328>
   57a18:	cmn	w0, #0x1
   57a1c:	b.eq	581c4 <mpfr_free_pool@@Base+0xa18>  // b.none
   57a20:	mov	x1, #0x7fff                	// #32767
   57a24:	mvn	w0, w0
   57a28:	cmp	x3, x1
   57a2c:	b.ne	57dbc <mpfr_free_pool@@Base+0x610>  // b.any
   57a30:	orr	x0, x4, x13
   57a34:	cbnz	x0, 5811c <mpfr_free_pool@@Base+0x970>
   57a38:	mov	x16, x14
   57a3c:	nop
   57a40:	mov	x4, #0x0                   	// #0
   57a44:	fmov	d0, x4
   57a48:	lsl	x16, x16, #63
   57a4c:	orr	x5, x16, #0x7fff000000000000
   57a50:	fmov	v0.d[1], x5
   57a54:	b	579fc <mpfr_free_pool@@Base+0x250>
   57a58:	sub	w5, w8, w0
   57a5c:	cmp	w5, #0x0
   57a60:	b.le	57c2c <mpfr_free_pool@@Base+0x480>
   57a64:	cbz	x0, 57b6c <mpfr_free_pool@@Base+0x3c0>
   57a68:	orr	x4, x4, #0x8000000000000
   57a6c:	mov	x0, #0x7fff                	// #32767
   57a70:	cmp	x1, x0
   57a74:	b.eq	57cbc <mpfr_free_pool@@Base+0x510>  // b.none
   57a78:	cmp	w5, #0x74
   57a7c:	b.gt	57e50 <mpfr_free_pool@@Base+0x6a4>
   57a80:	cmp	w5, #0x3f
   57a84:	b.gt	57f50 <mpfr_free_pool@@Base+0x7a4>
   57a88:	mov	w0, #0x40                  	// #64
   57a8c:	sub	w0, w0, w5
   57a90:	lsr	x6, x13, x5
   57a94:	lsl	x13, x13, x0
   57a98:	cmp	x13, #0x0
   57a9c:	lsl	x0, x4, x0
   57aa0:	cset	x3, ne  // ne = any
   57aa4:	orr	x0, x0, x6
   57aa8:	lsr	x4, x4, x5
   57aac:	orr	x0, x0, x3
   57ab0:	add	x2, x2, x4
   57ab4:	b	57e5c <mpfr_free_pool@@Base+0x6b0>
   57ab8:	orr	x3, x4, x13
   57abc:	cbz	x3, 57e2c <mpfr_free_pool@@Base+0x680>
   57ac0:	subs	w0, w0, #0x1
   57ac4:	b.ne	578c4 <mpfr_free_pool@@Base+0x118>  // b.any
   57ac8:	subs	x9, x9, x13
   57acc:	sbc	x2, x2, x4
   57ad0:	b	57914 <mpfr_free_pool@@Base+0x168>
   57ad4:	mov	x0, #0x7fff                	// #32767
   57ad8:	cmp	x3, x0
   57adc:	b.eq	58210 <mpfr_free_pool@@Base+0xa64>  // b.none
   57ae0:	mov	w7, w11
   57ae4:	mov	x2, x4
   57ae8:	mov	x9, x13
   57aec:	mov	x1, x3
   57af0:	mov	x12, x5
   57af4:	nop
   57af8:	orr	x8, x9, x2
   57afc:	and	x0, x9, #0x7
   57b00:	mov	w5, #0x0                   	// #0
   57b04:	cbnz	x1, 57994 <mpfr_free_pool@@Base+0x1e8>
   57b08:	cbnz	x8, 57988 <mpfr_free_pool@@Base+0x1dc>
   57b0c:	mov	x2, #0x0                   	// #0
   57b10:	mov	x1, #0x0                   	// #0
   57b14:	mov	w0, #0x0                   	// #0
   57b18:	and	x2, x2, #0xffffffffffff
   57b1c:	and	w1, w1, #0x7fff
   57b20:	b	579e0 <mpfr_free_pool@@Base+0x234>
   57b24:	add	x5, x8, #0x1
   57b28:	tst	x5, #0x7ffe
   57b2c:	b.ne	57dfc <mpfr_free_pool@@Base+0x650>  // b.any
   57b30:	orr	x5, x2, x9
   57b34:	orr	x8, x4, x13
   57b38:	cbnz	x1, 57fbc <mpfr_free_pool@@Base+0x810>
   57b3c:	cbz	x5, 58064 <mpfr_free_pool@@Base+0x8b8>
   57b40:	cbz	x8, 58078 <mpfr_free_pool@@Base+0x8cc>
   57b44:	subs	x5, x9, x13
   57b48:	cmp	x9, x13
   57b4c:	sbc	x3, x2, x4
   57b50:	tbz	x3, #51, 58244 <mpfr_free_pool@@Base+0xa98>
   57b54:	subs	x9, x13, x9
   57b58:	mov	w7, w11
   57b5c:	sbc	x2, x4, x2
   57b60:	mov	x12, x14
   57b64:	orr	x8, x9, x2
   57b68:	b	57984 <mpfr_free_pool@@Base+0x1d8>
   57b6c:	orr	x0, x4, x13
   57b70:	cbz	x0, 58044 <mpfr_free_pool@@Base+0x898>
   57b74:	subs	w5, w5, #0x1
   57b78:	b.ne	57a6c <mpfr_free_pool@@Base+0x2c0>  // b.any
   57b7c:	adds	x9, x9, x13
   57b80:	adc	x2, x4, x2
   57b84:	nop
   57b88:	tbz	x2, #51, 57af8 <mpfr_free_pool@@Base+0x34c>
   57b8c:	add	x1, x1, #0x1
   57b90:	mov	x0, #0x7fff                	// #32767
   57b94:	cmp	x1, x0
   57b98:	b.eq	58084 <mpfr_free_pool@@Base+0x8d8>  // b.none
   57b9c:	and	x0, x9, #0x1
   57ba0:	and	x3, x2, #0xfff7ffffffffffff
   57ba4:	orr	x9, x0, x9, lsr #1
   57ba8:	mov	w5, #0x0                   	// #0
   57bac:	orr	x9, x9, x2, lsl #63
   57bb0:	lsr	x2, x3, #1
   57bb4:	and	x0, x9, #0x7
   57bb8:	b	57994 <mpfr_free_pool@@Base+0x1e8>
   57bbc:	and	x3, x15, #0xc00000
   57bc0:	cbz	x3, 57bf8 <mpfr_free_pool@@Base+0x44c>
   57bc4:	cmp	x3, #0x400, lsl #12
   57bc8:	b.eq	57bf0 <mpfr_free_pool@@Base+0x444>  // b.none
   57bcc:	cmp	x3, #0x800, lsl #12
   57bd0:	csel	w12, w12, wzr, eq  // eq = none
   57bd4:	cbnz	w12, 57bf8 <mpfr_free_pool@@Base+0x44c>
   57bd8:	mov	w1, #0x14                  	// #20
   57bdc:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   57be0:	orr	w0, w0, w1
   57be4:	mov	x8, #0xffffffffffffffff    	// #-1
   57be8:	mov	x1, #0x7ffe                	// #32766
   57bec:	b	57b18 <mpfr_free_pool@@Base+0x36c>
   57bf0:	cbnz	x12, 57bd8 <mpfr_free_pool@@Base+0x42c>
   57bf4:	nop
   57bf8:	mov	w1, #0x14                  	// #20
   57bfc:	and	x16, x7, #0xff
   57c00:	orr	w0, w0, w1
   57c04:	mov	x4, #0x0                   	// #0
   57c08:	fmov	d0, x4
   57c0c:	lsl	x16, x16, #63
   57c10:	orr	x5, x16, #0x7fff000000000000
   57c14:	fmov	v0.d[1], x5
   57c18:	str	q0, [sp, #16]
   57c1c:	bl	59e28 <mpfr_free_pool@@Base+0x267c>
   57c20:	ldr	q0, [sp, #16]
   57c24:	ldp	x29, x30, [sp], #48
   57c28:	ret
   57c2c:	b.eq	57d6c <mpfr_free_pool@@Base+0x5c0>  // b.none
   57c30:	cbnz	x8, 57ef0 <mpfr_free_pool@@Base+0x744>
   57c34:	orr	x0, x2, x9
   57c38:	cbz	x0, 5815c <mpfr_free_pool@@Base+0x9b0>
   57c3c:	cmn	w5, #0x1
   57c40:	b.eq	582bc <mpfr_free_pool@@Base+0xb10>  // b.none
   57c44:	mov	x0, #0x7fff                	// #32767
   57c48:	mvn	w5, w5
   57c4c:	cmp	x3, x0
   57c50:	b.ne	57f04 <mpfr_free_pool@@Base+0x758>  // b.any
   57c54:	orr	x0, x4, x13
   57c58:	cbz	x0, 57a40 <mpfr_free_pool@@Base+0x294>
   57c5c:	lsr	x5, x4, #50
   57c60:	mov	x9, x13
   57c64:	eor	x5, x5, #0x1
   57c68:	mov	x2, x4
   57c6c:	and	w5, w5, #0x1
   57c70:	b	57cd0 <mpfr_free_pool@@Base+0x524>
   57c74:	mov	w0, #0x10                  	// #16
   57c78:	cbz	x12, 57c84 <mpfr_free_pool@@Base+0x4d8>
   57c7c:	adds	x9, x9, #0x8
   57c80:	cinc	x2, x2, cs  // cs = hs, nlast
   57c84:	and	x3, x2, #0x8000000000000
   57c88:	cbz	w5, 579c0 <mpfr_free_pool@@Base+0x214>
   57c8c:	orr	w0, w0, #0x8
   57c90:	b	579c0 <mpfr_free_pool@@Base+0x214>
   57c94:	mov	w0, #0x10                  	// #16
   57c98:	cbnz	x12, 57c84 <mpfr_free_pool@@Base+0x4d8>
   57c9c:	b	57c7c <mpfr_free_pool@@Base+0x4d0>
   57ca0:	and	x3, x9, #0xf
   57ca4:	mov	w0, #0x10                  	// #16
   57ca8:	cmp	x3, #0x4
   57cac:	b.eq	57c84 <mpfr_free_pool@@Base+0x4d8>  // b.none
   57cb0:	adds	x9, x9, #0x4
   57cb4:	cinc	x2, x2, cs  // cs = hs, nlast
   57cb8:	b	57c84 <mpfr_free_pool@@Base+0x4d8>
   57cbc:	orr	x0, x2, x9
   57cc0:	cbz	x0, 57a40 <mpfr_free_pool@@Base+0x294>
   57cc4:	lsr	x5, x2, #50
   57cc8:	eor	x5, x5, #0x1
   57ccc:	and	w5, w5, #0x1
   57cd0:	mov	w0, w5
   57cd4:	mov	x1, #0x7fff                	// #32767
   57cd8:	mov	x3, #0x7fff                	// #32767
   57cdc:	extr	x8, x2, x9, #3
   57ce0:	cmp	x1, x3
   57ce4:	lsr	x2, x2, #3
   57ce8:	b.ne	57b18 <mpfr_free_pool@@Base+0x36c>  // b.any
   57cec:	orr	x1, x8, x2
   57cf0:	cbz	x1, 5835c <mpfr_free_pool@@Base+0xbb0>
   57cf4:	orr	x2, x2, #0x800000000000
   57cf8:	mov	w1, #0x7fff                	// #32767
   57cfc:	and	x2, x2, #0xffffffffffff
   57d00:	b	579e0 <mpfr_free_pool@@Base+0x234>
   57d04:	mov	x9, x3
   57d08:	and	x2, x2, #0xfff7ffffffffffff
   57d0c:	sub	x1, x1, x4
   57d10:	orr	x8, x9, x2
   57d14:	and	x0, x9, #0x7
   57d18:	mov	w5, #0x0                   	// #0
   57d1c:	cbz	x1, 57b08 <mpfr_free_pool@@Base+0x35c>
   57d20:	b	57994 <mpfr_free_pool@@Base+0x1e8>
   57d24:	clz	x2, x9
   57d28:	add	w0, w2, #0x34
   57d2c:	cmp	w0, #0x3f
   57d30:	b.le	57928 <mpfr_free_pool@@Base+0x17c>
   57d34:	sub	w2, w2, #0xc
   57d38:	lsl	x2, x9, x2
   57d3c:	b	5793c <mpfr_free_pool@@Base+0x190>
   57d40:	orr	x4, x4, x13
   57d44:	cmp	x4, #0x0
   57d48:	cset	x3, ne  // ne = any
   57d4c:	b	5790c <mpfr_free_pool@@Base+0x160>
   57d50:	and	x3, x2, #0x8000000000000
   57d54:	mov	w0, #0x0                   	// #0
   57d58:	cbz	w5, 579c0 <mpfr_free_pool@@Base+0x214>
   57d5c:	mov	w0, #0x0                   	// #0
   57d60:	tbz	w15, #11, 579c0 <mpfr_free_pool@@Base+0x214>
   57d64:	orr	w0, w0, #0x8
   57d68:	b	579c0 <mpfr_free_pool@@Base+0x214>
   57d6c:	add	x0, x8, #0x1
   57d70:	tst	x0, #0x7ffe
   57d74:	b.ne	57f7c <mpfr_free_pool@@Base+0x7d0>  // b.any
   57d78:	orr	x0, x2, x9
   57d7c:	cbnz	x8, 58138 <mpfr_free_pool@@Base+0x98c>
   57d80:	orr	x8, x4, x13
   57d84:	cbz	x0, 5818c <mpfr_free_pool@@Base+0x9e0>
   57d88:	cbz	x8, 58078 <mpfr_free_pool@@Base+0x8cc>
   57d8c:	adds	x9, x9, x13
   57d90:	adc	x2, x4, x2
   57d94:	tbz	x2, #51, 57b64 <mpfr_free_pool@@Base+0x3b8>
   57d98:	and	x2, x2, #0xfff7ffffffffffff
   57d9c:	and	x0, x9, #0x7
   57da0:	mov	x1, #0x1                   	// #1
   57da4:	b	57994 <mpfr_free_pool@@Base+0x1e8>
   57da8:	mov	x1, #0x7fff                	// #32767
   57dac:	neg	w0, w0
   57db0:	orr	x2, x2, #0x8000000000000
   57db4:	cmp	x3, x1
   57db8:	b.eq	57a30 <mpfr_free_pool@@Base+0x284>  // b.none
   57dbc:	cmp	w0, #0x74
   57dc0:	b.gt	57ecc <mpfr_free_pool@@Base+0x720>
   57dc4:	cmp	w0, #0x3f
   57dc8:	b.gt	580e8 <mpfr_free_pool@@Base+0x93c>
   57dcc:	mov	w1, #0x40                  	// #64
   57dd0:	sub	w1, w1, w0
   57dd4:	lsr	x5, x9, x0
   57dd8:	lsl	x9, x9, x1
   57ddc:	cmp	x9, #0x0
   57de0:	lsl	x9, x2, x1
   57de4:	cset	x1, ne  // ne = any
   57de8:	orr	x9, x9, x5
   57dec:	lsr	x0, x2, x0
   57df0:	orr	x9, x9, x1
   57df4:	sub	x4, x4, x0
   57df8:	b	57ed8 <mpfr_free_pool@@Base+0x72c>
   57dfc:	subs	x5, x9, x13
   57e00:	cmp	x9, x13
   57e04:	sbc	x3, x2, x4
   57e08:	tbnz	x3, #51, 57fa4 <mpfr_free_pool@@Base+0x7f8>
   57e0c:	orr	x8, x5, x3
   57e10:	cbnz	x8, 580d0 <mpfr_free_pool@@Base+0x924>
   57e14:	and	x15, x15, #0xc00000
   57e18:	mov	x2, #0x0                   	// #0
   57e1c:	cmp	x15, #0x800, lsl #12
   57e20:	mov	x1, #0x0                   	// #0
   57e24:	cset	w7, eq  // eq = none
   57e28:	b	57b18 <mpfr_free_pool@@Base+0x36c>
   57e2c:	mov	x0, #0x7fff                	// #32767
   57e30:	cmp	x8, x0
   57e34:	b.ne	57af8 <mpfr_free_pool@@Base+0x34c>  // b.any
   57e38:	orr	x0, x2, x9
   57e3c:	cbnz	x0, 57cc4 <mpfr_free_pool@@Base+0x518>
   57e40:	mov	x2, #0x0                   	// #0
   57e44:	mov	x8, #0x0                   	// #0
   57e48:	mov	w0, #0x0                   	// #0
   57e4c:	b	57cec <mpfr_free_pool@@Base+0x540>
   57e50:	orr	x4, x4, x13
   57e54:	cmp	x4, #0x0
   57e58:	cset	x0, ne  // ne = any
   57e5c:	adds	x9, x0, x9
   57e60:	cinc	x2, x2, cs  // cs = hs, nlast
   57e64:	b	57b88 <mpfr_free_pool@@Base+0x3dc>
   57e68:	mov	w4, #0x80                  	// #128
   57e6c:	sub	w4, w4, w0
   57e70:	cmp	w0, #0x40
   57e74:	sub	w9, w1, #0x3f
   57e78:	lsl	x0, x2, x4
   57e7c:	orr	x0, x3, x0
   57e80:	csel	x3, x0, x3, ne  // ne = any
   57e84:	lsr	x9, x2, x9
   57e88:	cmp	x3, #0x0
   57e8c:	mov	x2, #0x0                   	// #0
   57e90:	cset	x0, ne  // ne = any
   57e94:	orr	x9, x0, x9
   57e98:	mov	x8, x9
   57e9c:	b	57984 <mpfr_free_pool@@Base+0x1d8>
   57ea0:	mov	w5, #0x80                  	// #128
   57ea4:	sub	w5, w5, w0
   57ea8:	subs	w0, w0, #0x40
   57eac:	lsl	x5, x4, x5
   57eb0:	orr	x5, x13, x5
   57eb4:	csel	x13, x5, x13, ne  // ne = any
   57eb8:	lsr	x4, x4, x0
   57ebc:	cmp	x13, #0x0
   57ec0:	cset	x3, ne  // ne = any
   57ec4:	orr	x3, x3, x4
   57ec8:	b	5790c <mpfr_free_pool@@Base+0x160>
   57ecc:	orr	x2, x2, x9
   57ed0:	cmp	x2, #0x0
   57ed4:	cset	x9, ne  // ne = any
   57ed8:	subs	x9, x13, x9
   57edc:	mov	w7, w11
   57ee0:	sbc	x2, x4, xzr
   57ee4:	mov	x1, x3
   57ee8:	mov	x12, x14
   57eec:	b	57914 <mpfr_free_pool@@Base+0x168>
   57ef0:	mov	x0, #0x7fff                	// #32767
   57ef4:	neg	w5, w5
   57ef8:	orr	x2, x2, #0x8000000000000
   57efc:	cmp	x3, x0
   57f00:	b.eq	57c54 <mpfr_free_pool@@Base+0x4a8>  // b.none
   57f04:	cmp	w5, #0x74
   57f08:	b.gt	580d8 <mpfr_free_pool@@Base+0x92c>
   57f0c:	cmp	w5, #0x3f
   57f10:	b.gt	58198 <mpfr_free_pool@@Base+0x9ec>
   57f14:	mov	w1, #0x40                  	// #64
   57f18:	sub	w1, w1, w5
   57f1c:	lsr	x6, x9, x5
   57f20:	lsl	x9, x9, x1
   57f24:	cmp	x9, #0x0
   57f28:	cset	x0, ne  // ne = any
   57f2c:	lsl	x9, x2, x1
   57f30:	orr	x9, x9, x6
   57f34:	lsr	x5, x2, x5
   57f38:	orr	x9, x9, x0
   57f3c:	add	x4, x4, x5
   57f40:	adds	x9, x9, x13
   57f44:	mov	x1, x3
   57f48:	cinc	x2, x4, cs  // cs = hs, nlast
   57f4c:	b	57b88 <mpfr_free_pool@@Base+0x3dc>
   57f50:	mov	w0, #0x80                  	// #128
   57f54:	sub	w0, w0, w5
   57f58:	subs	w5, w5, #0x40
   57f5c:	lsl	x0, x4, x0
   57f60:	orr	x0, x13, x0
   57f64:	csel	x13, x0, x13, ne  // ne = any
   57f68:	lsr	x4, x4, x5
   57f6c:	cmp	x13, #0x0
   57f70:	cset	x0, ne  // ne = any
   57f74:	orr	x0, x0, x4
   57f78:	b	57e5c <mpfr_free_pool@@Base+0x6b0>
   57f7c:	mov	x1, #0x7fff                	// #32767
   57f80:	cmp	x0, x1
   57f84:	b.eq	581e0 <mpfr_free_pool@@Base+0xa34>  // b.none
   57f88:	adds	x9, x9, x13
   57f8c:	mov	x1, x0
   57f90:	adc	x2, x4, x2
   57f94:	ubfx	x0, x9, #1, #3
   57f98:	extr	x9, x2, x9, #1
   57f9c:	lsr	x2, x2, #1
   57fa0:	b	57994 <mpfr_free_pool@@Base+0x1e8>
   57fa4:	cmp	x13, x9
   57fa8:	mov	w7, w11
   57fac:	sbc	x3, x4, x2
   57fb0:	sub	x9, x13, x9
   57fb4:	mov	x12, x14
   57fb8:	b	5791c <mpfr_free_pool@@Base+0x170>
   57fbc:	mov	x12, #0x7fff                	// #32767
   57fc0:	cmp	x1, x12
   57fc4:	b.eq	57ff0 <mpfr_free_pool@@Base+0x844>  // b.none
   57fc8:	cmp	x3, x12
   57fcc:	b.eq	58220 <mpfr_free_pool@@Base+0xa74>  // b.none
   57fd0:	cbnz	x5, 58008 <mpfr_free_pool@@Base+0x85c>
   57fd4:	mov	w5, w0
   57fd8:	cbnz	x8, 58300 <mpfr_free_pool@@Base+0xb54>
   57fdc:	mov	w7, #0x0                   	// #0
   57fe0:	mov	x2, #0xffffffffffff        	// #281474976710655
   57fe4:	mov	w0, #0x1                   	// #1
   57fe8:	mov	x8, #0xffffffffffffffff    	// #-1
   57fec:	b	57cf4 <mpfr_free_pool@@Base+0x548>
   57ff0:	cbz	x5, 5831c <mpfr_free_pool@@Base+0xb70>
   57ff4:	lsr	x0, x2, #50
   57ff8:	cmp	x3, x1
   57ffc:	eor	x0, x0, #0x1
   58000:	and	w0, w0, #0x1
   58004:	b.eq	58220 <mpfr_free_pool@@Base+0xa74>  // b.none
   58008:	cbz	x8, 5823c <mpfr_free_pool@@Base+0xa90>
   5800c:	bfi	x6, x2, #61, #3
   58010:	lsr	x3, x2, #3
   58014:	tbz	x2, #50, 58030 <mpfr_free_pool@@Base+0x884>
   58018:	lsr	x1, x4, #3
   5801c:	tbnz	x4, #50, 58030 <mpfr_free_pool@@Base+0x884>
   58020:	mov	x6, x10
   58024:	mov	w7, w11
   58028:	bfi	x6, x4, #61, #3
   5802c:	mov	x3, x1
   58030:	extr	x2, x3, x6, #61
   58034:	bfi	x6, x2, #61, #3
   58038:	lsr	x2, x2, #3
   5803c:	mov	x8, x6
   58040:	b	57cec <mpfr_free_pool@@Base+0x540>
   58044:	mov	x0, #0x7fff                	// #32767
   58048:	cmp	x8, x0
   5804c:	b.ne	57af8 <mpfr_free_pool@@Base+0x34c>  // b.any
   58050:	orr	x0, x2, x9
   58054:	cbz	x0, 57e40 <mpfr_free_pool@@Base+0x694>
   58058:	lsr	x5, x2, #50
   5805c:	eor	w5, w5, #0x1
   58060:	b	57cd0 <mpfr_free_pool@@Base+0x524>
   58064:	cbz	x8, 58178 <mpfr_free_pool@@Base+0x9cc>
   58068:	mov	w7, w11
   5806c:	mov	x2, x4
   58070:	mov	x9, x13
   58074:	mov	x12, x14
   58078:	mov	x1, #0x0                   	// #0
   5807c:	mov	x3, #0x0                   	// #0
   58080:	b	57d5c <mpfr_free_pool@@Base+0x5b0>
   58084:	ands	x3, x15, #0xc00000
   58088:	b.eq	58114 <mpfr_free_pool@@Base+0x968>  // b.none
   5808c:	cmp	x3, #0x400, lsl #12
   58090:	eor	w0, w7, #0x1
   58094:	cset	w1, eq  // eq = none
   58098:	tst	w1, w0
   5809c:	b.ne	58338 <mpfr_free_pool@@Base+0xb8c>  // b.any
   580a0:	cmp	x3, #0x800, lsl #12
   580a4:	b.eq	582e4 <mpfr_free_pool@@Base+0xb38>  // b.none
   580a8:	cmp	x3, #0x400, lsl #12
   580ac:	mov	w0, #0x14                  	// #20
   580b0:	b.ne	57bc0 <mpfr_free_pool@@Base+0x414>  // b.any
   580b4:	mov	x2, #0xffffffffffffffff    	// #-1
   580b8:	mov	x1, #0x7ffe                	// #32766
   580bc:	mov	x9, x2
   580c0:	mov	w5, #0x0                   	// #0
   580c4:	mov	w0, #0x14                  	// #20
   580c8:	cbnz	x12, 57c84 <mpfr_free_pool@@Base+0x4d8>
   580cc:	b	57c7c <mpfr_free_pool@@Base+0x4d0>
   580d0:	mov	x9, x5
   580d4:	b	5791c <mpfr_free_pool@@Base+0x170>
   580d8:	orr	x2, x2, x9
   580dc:	cmp	x2, #0x0
   580e0:	cset	x9, ne  // ne = any
   580e4:	b	57f40 <mpfr_free_pool@@Base+0x794>
   580e8:	mov	w1, #0x80                  	// #128
   580ec:	sub	w1, w1, w0
   580f0:	subs	w0, w0, #0x40
   580f4:	lsl	x1, x2, x1
   580f8:	orr	x1, x9, x1
   580fc:	csel	x9, x1, x9, ne  // ne = any
   58100:	lsr	x2, x2, x0
   58104:	cmp	x9, #0x0
   58108:	cset	x9, ne  // ne = any
   5810c:	orr	x9, x9, x2
   58110:	b	57ed8 <mpfr_free_pool@@Base+0x72c>
   58114:	mov	w0, #0x14                  	// #20
   58118:	b	57c04 <mpfr_free_pool@@Base+0x458>
   5811c:	lsr	x5, x4, #50
   58120:	mov	w7, w11
   58124:	eor	x5, x5, #0x1
   58128:	mov	x9, x13
   5812c:	and	w5, w5, #0x1
   58130:	mov	x2, x4
   58134:	b	57cd0 <mpfr_free_pool@@Base+0x524>
   58138:	mov	x8, #0x7fff                	// #32767
   5813c:	cmp	x1, x8
   58140:	b.eq	58260 <mpfr_free_pool@@Base+0xab4>  // b.none
   58144:	cmp	x3, x8
   58148:	b.eq	582d4 <mpfr_free_pool@@Base+0xb28>  // b.none
   5814c:	cbnz	x0, 58278 <mpfr_free_pool@@Base+0xacc>
   58150:	mov	x2, x4
   58154:	mov	x9, x13
   58158:	b	57cd0 <mpfr_free_pool@@Base+0x524>
   5815c:	mov	x0, #0x7fff                	// #32767
   58160:	cmp	x3, x0
   58164:	b.eq	58310 <mpfr_free_pool@@Base+0xb64>  // b.none
   58168:	mov	x2, x4
   5816c:	mov	x9, x13
   58170:	mov	x1, x3
   58174:	b	57af8 <mpfr_free_pool@@Base+0x34c>
   58178:	and	x15, x15, #0xc00000
   5817c:	mov	x2, #0x0                   	// #0
   58180:	cmp	x15, #0x800, lsl #12
   58184:	cset	w7, eq  // eq = none
   58188:	b	57b18 <mpfr_free_pool@@Base+0x36c>
   5818c:	mov	x2, x4
   58190:	mov	x9, x13
   58194:	b	57984 <mpfr_free_pool@@Base+0x1d8>
   58198:	mov	w0, #0x80                  	// #128
   5819c:	sub	w0, w0, w5
   581a0:	subs	w5, w5, #0x40
   581a4:	lsl	x0, x2, x0
   581a8:	orr	x0, x9, x0
   581ac:	csel	x9, x0, x9, ne  // ne = any
   581b0:	lsr	x2, x2, x5
   581b4:	cmp	x9, #0x0
   581b8:	cset	x9, ne  // ne = any
   581bc:	orr	x9, x9, x2
   581c0:	b	57f40 <mpfr_free_pool@@Base+0x794>
   581c4:	cmp	x13, x9
   581c8:	mov	w7, w11
   581cc:	sbc	x2, x4, x2
   581d0:	sub	x9, x13, x9
   581d4:	mov	x1, x3
   581d8:	mov	x12, x5
   581dc:	b	57914 <mpfr_free_pool@@Base+0x168>
   581e0:	ands	x3, x15, #0xc00000
   581e4:	b.eq	58114 <mpfr_free_pool@@Base+0x968>  // b.none
   581e8:	cmp	x3, #0x400, lsl #12
   581ec:	eor	w0, w7, #0x1
   581f0:	csel	w0, w0, wzr, eq  // eq = none
   581f4:	cbnz	w0, 58338 <mpfr_free_pool@@Base+0xb8c>
   581f8:	cmp	x3, #0x800, lsl #12
   581fc:	b.ne	580a8 <mpfr_free_pool@@Base+0x8fc>  // b.any
   58200:	cbz	x12, 582e8 <mpfr_free_pool@@Base+0xb3c>
   58204:	mov	w0, #0x14                  	// #20
   58208:	mov	x16, #0x1                   	// #1
   5820c:	b	57c04 <mpfr_free_pool@@Base+0x458>
   58210:	orr	x0, x4, x13
   58214:	cbnz	x0, 5811c <mpfr_free_pool@@Base+0x970>
   58218:	mov	w7, w11
   5821c:	b	57e40 <mpfr_free_pool@@Base+0x694>
   58220:	cbz	x8, 5832c <mpfr_free_pool@@Base+0xb80>
   58224:	tst	x4, #0x4000000000000
   58228:	csinc	w0, w0, wzr, ne  // ne = any
   5822c:	cbnz	x5, 5800c <mpfr_free_pool@@Base+0x860>
   58230:	mov	w7, w11
   58234:	mov	x2, x4
   58238:	mov	x9, x13
   5823c:	mov	w5, w0
   58240:	b	57cd0 <mpfr_free_pool@@Base+0x524>
   58244:	orr	x8, x5, x3
   58248:	cbz	x8, 58178 <mpfr_free_pool@@Base+0x9cc>
   5824c:	and	x0, x5, #0x7
   58250:	mov	x9, x5
   58254:	mov	x2, x3
   58258:	mov	w5, #0x1                   	// #1
   5825c:	b	57994 <mpfr_free_pool@@Base+0x1e8>
   58260:	cbz	x0, 582cc <mpfr_free_pool@@Base+0xb20>
   58264:	lsr	x5, x2, #50
   58268:	cmp	x3, x1
   5826c:	eor	x5, x5, #0x1
   58270:	and	w5, w5, #0x1
   58274:	b.eq	58344 <mpfr_free_pool@@Base+0xb98>  // b.none
   58278:	orr	x13, x4, x13
   5827c:	cbz	x13, 57cd0 <mpfr_free_pool@@Base+0x524>
   58280:	bfi	x6, x2, #61, #3
   58284:	lsr	x0, x2, #3
   58288:	tbz	x2, #50, 582a4 <mpfr_free_pool@@Base+0xaf8>
   5828c:	lsr	x1, x4, #3
   58290:	tbnz	x4, #50, 582a4 <mpfr_free_pool@@Base+0xaf8>
   58294:	and	x6, x10, #0x1fffffffffffffff
   58298:	mov	w7, w11
   5829c:	orr	x6, x6, x4, lsl #61
   582a0:	mov	x0, x1
   582a4:	extr	x2, x0, x6, #61
   582a8:	mov	w0, w5
   582ac:	bfi	x6, x2, #61, #3
   582b0:	lsr	x2, x2, #3
   582b4:	mov	x8, x6
   582b8:	b	57cec <mpfr_free_pool@@Base+0x540>
   582bc:	adds	x9, x9, x13
   582c0:	mov	x1, x3
   582c4:	adc	x2, x4, x2
   582c8:	b	57b88 <mpfr_free_pool@@Base+0x3dc>
   582cc:	cmp	x3, x1
   582d0:	b.ne	58150 <mpfr_free_pool@@Base+0x9a4>  // b.any
   582d4:	orr	x1, x4, x13
   582d8:	cbnz	x1, 5834c <mpfr_free_pool@@Base+0xba0>
   582dc:	cbz	x0, 57e40 <mpfr_free_pool@@Base+0x694>
   582e0:	b	57cd0 <mpfr_free_pool@@Base+0x524>
   582e4:	cbnz	x16, 58204 <mpfr_free_pool@@Base+0xa58>
   582e8:	mov	x2, #0xffffffffffffffff    	// #-1
   582ec:	mov	w7, #0x0                   	// #0
   582f0:	mov	x9, x2
   582f4:	mov	x1, #0x7ffe                	// #32766
   582f8:	mov	w0, #0x14                  	// #20
   582fc:	b	579c4 <mpfr_free_pool@@Base+0x218>
   58300:	mov	w7, w11
   58304:	mov	x2, x4
   58308:	mov	x9, x13
   5830c:	b	57cd0 <mpfr_free_pool@@Base+0x524>
   58310:	orr	x0, x4, x13
   58314:	cbz	x0, 57e40 <mpfr_free_pool@@Base+0x694>
   58318:	b	57c5c <mpfr_free_pool@@Base+0x4b0>
   5831c:	cmp	x3, x1
   58320:	b.eq	58220 <mpfr_free_pool@@Base+0xa74>  // b.none
   58324:	mov	w5, #0x0                   	// #0
   58328:	b	57fd8 <mpfr_free_pool@@Base+0x82c>
   5832c:	cbnz	x5, 5823c <mpfr_free_pool@@Base+0xa90>
   58330:	mov	w5, w0
   58334:	b	57fd8 <mpfr_free_pool@@Base+0x82c>
   58338:	mov	w0, #0x14                  	// #20
   5833c:	mov	x16, #0x0                   	// #0
   58340:	b	57c04 <mpfr_free_pool@@Base+0x458>
   58344:	orr	x1, x4, x13
   58348:	cbz	x1, 57cd0 <mpfr_free_pool@@Base+0x524>
   5834c:	tst	x4, #0x4000000000000
   58350:	csinc	w5, w5, wzr, ne  // ne = any
   58354:	cbnz	x0, 58280 <mpfr_free_pool@@Base+0xad4>
   58358:	b	58150 <mpfr_free_pool@@Base+0x9a4>
   5835c:	mov	x8, #0x0                   	// #0
   58360:	mov	w1, #0x7fff                	// #32767
   58364:	mov	x2, #0x0                   	// #0
   58368:	b	579e0 <mpfr_free_pool@@Base+0x234>
   5836c:	nop
   58370:	stp	x29, x30, [sp, #-48]!
   58374:	mov	x29, sp
   58378:	str	q0, [sp, #16]
   5837c:	str	q1, [sp, #32]
   58380:	ldp	x6, x1, [sp, #16]
   58384:	ldp	x7, x0, [sp, #32]
   58388:	mrs	x2, fpcr
   5838c:	ubfx	x4, x1, #48, #15
   58390:	lsr	x2, x1, #63
   58394:	lsr	x3, x0, #63
   58398:	ubfx	x9, x0, #0, #48
   5839c:	mov	x5, #0x7fff                	// #32767
   583a0:	mov	x10, x6
   583a4:	cmp	x4, x5
   583a8:	and	w2, w2, #0xff
   583ac:	ubfx	x1, x1, #0, #48
   583b0:	and	w3, w3, #0xff
   583b4:	ubfx	x0, x0, #48, #15
   583b8:	b.eq	583ec <mpfr_free_pool@@Base+0xc40>  // b.none
   583bc:	cmp	x0, x5
   583c0:	b.eq	583d8 <mpfr_free_pool@@Base+0xc2c>  // b.none
   583c4:	cmp	x4, x0
   583c8:	mov	w0, #0x1                   	// #1
   583cc:	b.eq	58404 <mpfr_free_pool@@Base+0xc58>  // b.none
   583d0:	ldp	x29, x30, [sp], #48
   583d4:	ret
   583d8:	orr	x8, x9, x7
   583dc:	cbnz	x8, 58468 <mpfr_free_pool@@Base+0xcbc>
   583e0:	mov	w0, #0x1                   	// #1
   583e4:	ldp	x29, x30, [sp], #48
   583e8:	ret
   583ec:	orr	x5, x1, x6
   583f0:	cbnz	x5, 58438 <mpfr_free_pool@@Base+0xc8c>
   583f4:	cmp	x0, x4
   583f8:	b.ne	583e0 <mpfr_free_pool@@Base+0xc34>  // b.any
   583fc:	orr	x8, x9, x7
   58400:	cbnz	x8, 58468 <mpfr_free_pool@@Base+0xcbc>
   58404:	cmp	x1, x9
   58408:	mov	w0, #0x1                   	// #1
   5840c:	ccmp	x6, x7, #0x0, eq  // eq = none
   58410:	b.ne	583d0 <mpfr_free_pool@@Base+0xc24>  // b.any
   58414:	cmp	w2, w3
   58418:	mov	w0, #0x0                   	// #0
   5841c:	b.eq	583d0 <mpfr_free_pool@@Base+0xc24>  // b.none
   58420:	mov	w0, #0x1                   	// #1
   58424:	cbnz	x4, 583d0 <mpfr_free_pool@@Base+0xc24>
   58428:	orr	x1, x1, x10
   5842c:	cmp	x1, #0x0
   58430:	cset	w0, ne  // ne = any
   58434:	b	583d0 <mpfr_free_pool@@Base+0xc24>
   58438:	tst	x1, #0x800000000000
   5843c:	b.ne	58454 <mpfr_free_pool@@Base+0xca8>  // b.any
   58440:	mov	w0, #0x1                   	// #1
   58444:	bl	59e28 <mpfr_free_pool@@Base+0x267c>
   58448:	mov	w0, #0x1                   	// #1
   5844c:	ldp	x29, x30, [sp], #48
   58450:	ret
   58454:	cmp	x0, x4
   58458:	mov	w0, #0x1                   	// #1
   5845c:	b.ne	583d0 <mpfr_free_pool@@Base+0xc24>  // b.any
   58460:	orr	x8, x9, x7
   58464:	cbz	x8, 583d0 <mpfr_free_pool@@Base+0xc24>
   58468:	tst	x9, #0x800000000000
   5846c:	b.eq	58440 <mpfr_free_pool@@Base+0xc94>  // b.none
   58470:	b	583e0 <mpfr_free_pool@@Base+0xc34>
   58474:	nop
   58478:	stp	x29, x30, [sp, #-48]!
   5847c:	mov	x29, sp
   58480:	str	q0, [sp, #16]
   58484:	str	q1, [sp, #32]
   58488:	ldp	x8, x1, [sp, #16]
   5848c:	ldp	x9, x0, [sp, #32]
   58490:	mrs	x2, fpcr
   58494:	ubfx	x4, x1, #48, #15
   58498:	ubfx	x10, x1, #0, #48
   5849c:	lsr	x2, x1, #63
   584a0:	mov	x7, #0x7fff                	// #32767
   584a4:	mov	x5, x8
   584a8:	cmp	x4, x7
   584ac:	ubfx	x11, x0, #0, #48
   584b0:	ubfx	x6, x0, #48, #15
   584b4:	lsr	x1, x0, #63
   584b8:	mov	x3, x9
   584bc:	b.eq	584f8 <mpfr_free_pool@@Base+0xd4c>  // b.none
   584c0:	cmp	x6, x7
   584c4:	b.eq	58508 <mpfr_free_pool@@Base+0xd5c>  // b.none
   584c8:	cbnz	x4, 58530 <mpfr_free_pool@@Base+0xd84>
   584cc:	orr	x5, x10, x8
   584d0:	cmp	x5, #0x0
   584d4:	cset	w0, eq  // eq = none
   584d8:	cbnz	x6, 584e4 <mpfr_free_pool@@Base+0xd38>
   584dc:	orr	x3, x11, x9
   584e0:	cbz	x3, 58550 <mpfr_free_pool@@Base+0xda4>
   584e4:	cbz	w0, 58514 <mpfr_free_pool@@Base+0xd68>
   584e8:	cmp	x1, #0x0
   584ec:	csinv	w0, w0, wzr, ne  // ne = any
   584f0:	ldp	x29, x30, [sp], #48
   584f4:	ret
   584f8:	orr	x0, x10, x8
   584fc:	cbnz	x0, 5855c <mpfr_free_pool@@Base+0xdb0>
   58500:	cmp	x6, x4
   58504:	b.ne	58530 <mpfr_free_pool@@Base+0xd84>  // b.any
   58508:	orr	x3, x11, x3
   5850c:	cbnz	x3, 5855c <mpfr_free_pool@@Base+0xdb0>
   58510:	cbz	x4, 58540 <mpfr_free_pool@@Base+0xd94>
   58514:	cmp	x2, x1
   58518:	b.eq	58570 <mpfr_free_pool@@Base+0xdc4>  // b.none
   5851c:	cmp	x2, #0x0
   58520:	mov	w0, #0xffffffff            	// #-1
   58524:	cneg	w0, w0, eq  // eq = none
   58528:	ldp	x29, x30, [sp], #48
   5852c:	ret
   58530:	cbnz	x6, 58514 <mpfr_free_pool@@Base+0xd68>
   58534:	orr	x3, x11, x3
   58538:	cbnz	x3, 58514 <mpfr_free_pool@@Base+0xd68>
   5853c:	b	5851c <mpfr_free_pool@@Base+0xd70>
   58540:	orr	x5, x10, x5
   58544:	cmp	x5, #0x0
   58548:	cset	w0, eq  // eq = none
   5854c:	b	584e4 <mpfr_free_pool@@Base+0xd38>
   58550:	mov	w0, #0x0                   	// #0
   58554:	cbz	x5, 584f0 <mpfr_free_pool@@Base+0xd44>
   58558:	b	5851c <mpfr_free_pool@@Base+0xd70>
   5855c:	mov	w0, #0x1                   	// #1
   58560:	bl	59e28 <mpfr_free_pool@@Base+0x267c>
   58564:	mov	w0, #0xfffffffe            	// #-2
   58568:	ldp	x29, x30, [sp], #48
   5856c:	ret
   58570:	cmp	x4, x6
   58574:	b.gt	5851c <mpfr_free_pool@@Base+0xd70>
   58578:	b.lt	585b0 <mpfr_free_pool@@Base+0xe04>  // b.tstop
   5857c:	cmp	x10, x11
   58580:	b.hi	5851c <mpfr_free_pool@@Base+0xd70>  // b.pmore
   58584:	cset	w0, eq  // eq = none
   58588:	cmp	w0, #0x0
   5858c:	ccmp	x8, x9, #0x0, ne  // ne = any
   58590:	b.hi	5851c <mpfr_free_pool@@Base+0xd70>  // b.pmore
   58594:	cmp	x10, x11
   58598:	b.cc	585b0 <mpfr_free_pool@@Base+0xe04>  // b.lo, b.ul, b.last
   5859c:	cmp	w0, #0x0
   585a0:	mov	w0, #0x0                   	// #0
   585a4:	ccmp	x8, x9, #0x2, ne  // ne = any
   585a8:	b.cs	584f0 <mpfr_free_pool@@Base+0xd44>  // b.hs, b.nlast
   585ac:	nop
   585b0:	cmp	x2, #0x0
   585b4:	mov	w0, #0x1                   	// #1
   585b8:	cneg	w0, w0, eq  // eq = none
   585bc:	b	584f0 <mpfr_free_pool@@Base+0xd44>
   585c0:	stp	x29, x30, [sp, #-48]!
   585c4:	mov	x29, sp
   585c8:	str	q0, [sp, #16]
   585cc:	str	q1, [sp, #32]
   585d0:	ldp	x8, x1, [sp, #16]
   585d4:	ldp	x9, x0, [sp, #32]
   585d8:	mrs	x2, fpcr
   585dc:	ubfx	x4, x1, #48, #15
   585e0:	ubfx	x10, x1, #0, #48
   585e4:	lsr	x2, x1, #63
   585e8:	mov	x5, #0x7fff                	// #32767
   585ec:	mov	x6, x8
   585f0:	cmp	x4, x5
   585f4:	ubfx	x11, x0, #0, #48
   585f8:	ubfx	x7, x0, #48, #15
   585fc:	lsr	x1, x0, #63
   58600:	mov	x3, x9
   58604:	b.eq	5863c <mpfr_free_pool@@Base+0xe90>  // b.none
   58608:	cmp	x7, x5
   5860c:	b.eq	5864c <mpfr_free_pool@@Base+0xea0>  // b.none
   58610:	cbnz	x4, 58678 <mpfr_free_pool@@Base+0xecc>
   58614:	orr	x6, x10, x8
   58618:	cmp	x6, #0x0
   5861c:	cset	w0, eq  // eq = none
   58620:	cbnz	x7, 58664 <mpfr_free_pool@@Base+0xeb8>
   58624:	orr	x3, x11, x9
   58628:	cbnz	x3, 58664 <mpfr_free_pool@@Base+0xeb8>
   5862c:	mov	w0, #0x0                   	// #0
   58630:	cbnz	x6, 5868c <mpfr_free_pool@@Base+0xee0>
   58634:	ldp	x29, x30, [sp], #48
   58638:	ret
   5863c:	orr	x0, x10, x8
   58640:	cbnz	x0, 586a0 <mpfr_free_pool@@Base+0xef4>
   58644:	cmp	x7, x4
   58648:	b.ne	58678 <mpfr_free_pool@@Base+0xecc>  // b.any
   5864c:	orr	x3, x11, x3
   58650:	cbnz	x3, 586a0 <mpfr_free_pool@@Base+0xef4>
   58654:	cbnz	x4, 58684 <mpfr_free_pool@@Base+0xed8>
   58658:	orr	x6, x10, x6
   5865c:	cmp	x6, #0x0
   58660:	cset	w0, eq  // eq = none
   58664:	cbz	w0, 58684 <mpfr_free_pool@@Base+0xed8>
   58668:	cmp	x1, #0x0
   5866c:	csinv	w0, w0, wzr, ne  // ne = any
   58670:	ldp	x29, x30, [sp], #48
   58674:	ret
   58678:	cbnz	x7, 58684 <mpfr_free_pool@@Base+0xed8>
   5867c:	orr	x3, x11, x3
   58680:	cbz	x3, 5868c <mpfr_free_pool@@Base+0xee0>
   58684:	cmp	x2, x1
   58688:	b.eq	586b4 <mpfr_free_pool@@Base+0xf08>  // b.none
   5868c:	cmp	x2, #0x0
   58690:	mov	w0, #0xffffffff            	// #-1
   58694:	cneg	w0, w0, eq  // eq = none
   58698:	ldp	x29, x30, [sp], #48
   5869c:	ret
   586a0:	mov	w0, #0x1                   	// #1
   586a4:	bl	59e28 <mpfr_free_pool@@Base+0x267c>
   586a8:	mov	w0, #0x2                   	// #2
   586ac:	ldp	x29, x30, [sp], #48
   586b0:	ret
   586b4:	cmp	x4, x7
   586b8:	b.gt	5868c <mpfr_free_pool@@Base+0xee0>
   586bc:	b.lt	586f0 <mpfr_free_pool@@Base+0xf44>  // b.tstop
   586c0:	cmp	x10, x11
   586c4:	b.hi	5868c <mpfr_free_pool@@Base+0xee0>  // b.pmore
   586c8:	cset	w0, eq  // eq = none
   586cc:	cmp	w0, #0x0
   586d0:	ccmp	x8, x9, #0x0, ne  // ne = any
   586d4:	b.hi	5868c <mpfr_free_pool@@Base+0xee0>  // b.pmore
   586d8:	cmp	x10, x11
   586dc:	b.cc	586f0 <mpfr_free_pool@@Base+0xf44>  // b.lo, b.ul, b.last
   586e0:	cmp	w0, #0x0
   586e4:	mov	w0, #0x0                   	// #0
   586e8:	ccmp	x8, x9, #0x2, ne  // ne = any
   586ec:	b.cs	58634 <mpfr_free_pool@@Base+0xe88>  // b.hs, b.nlast
   586f0:	cmp	x2, #0x0
   586f4:	mov	w0, #0x1                   	// #1
   586f8:	cneg	w0, w0, eq  // eq = none
   586fc:	b	58634 <mpfr_free_pool@@Base+0xe88>
   58700:	stp	x29, x30, [sp, #-80]!
   58704:	mov	x29, sp
   58708:	str	q0, [sp, #48]
   5870c:	str	q1, [sp, #64]
   58710:	ldp	x1, x0, [sp, #48]
   58714:	ldp	x6, x2, [sp, #64]
   58718:	mrs	x11, fpcr
   5871c:	lsr	x3, x0, #63
   58720:	ubfx	x7, x0, #0, #48
   58724:	and	w12, w3, #0xff
   58728:	mov	x14, x3
   5872c:	ubfx	x3, x0, #48, #15
   58730:	cbz	w3, 58ad8 <mpfr_free_pool@@Base+0x132c>
   58734:	mov	w4, #0x7fff                	// #32767
   58738:	cmp	w3, w4
   5873c:	b.eq	58b7c <mpfr_free_pool@@Base+0x13d0>  // b.none
   58740:	and	x3, x3, #0xffff
   58744:	extr	x4, x7, x1, #61
   58748:	mov	x18, #0xffffffffffffc001    	// #-16383
   5874c:	orr	x7, x4, #0x8000000000000
   58750:	add	x3, x3, x18
   58754:	lsl	x5, x1, #3
   58758:	mov	x16, #0x0                   	// #0
   5875c:	mov	x1, #0x0                   	// #0
   58760:	mov	w0, #0x0                   	// #0
   58764:	lsr	x8, x2, #63
   58768:	ubfx	x4, x2, #0, #48
   5876c:	and	w15, w8, #0xff
   58770:	mov	x13, x8
   58774:	ubfx	x9, x2, #48, #15
   58778:	cbz	w9, 58b38 <mpfr_free_pool@@Base+0x138c>
   5877c:	mov	w8, #0x7fff                	// #32767
   58780:	cmp	w9, w8
   58784:	b.eq	58808 <mpfr_free_pool@@Base+0x105c>  // b.none
   58788:	and	x9, x9, #0xffff
   5878c:	mov	x17, #0xffffffffffffc001    	// #-16383
   58790:	add	x9, x9, x17
   58794:	extr	x2, x4, x6, #61
   58798:	add	x9, x9, x3
   5879c:	lsl	x6, x6, #3
   587a0:	orr	x4, x2, #0x8000000000000
   587a4:	mov	x2, #0x0                   	// #0
   587a8:	eor	w8, w12, w15
   587ac:	cmp	x1, #0xa
   587b0:	and	w10, w8, #0xff
   587b4:	add	x3, x9, #0x1
   587b8:	and	x8, x8, #0xff
   587bc:	b.le	58840 <mpfr_free_pool@@Base+0x1094>
   587c0:	cmp	x1, #0xb
   587c4:	b.eq	58ed8 <mpfr_free_pool@@Base+0x172c>  // b.none
   587c8:	mov	w15, w12
   587cc:	mov	x13, x14
   587d0:	mov	w10, w15
   587d4:	cmp	x16, #0x2
   587d8:	b.eq	58b9c <mpfr_free_pool@@Base+0x13f0>  // b.none
   587dc:	mov	x4, x7
   587e0:	mov	x6, x5
   587e4:	mov	x2, x16
   587e8:	mov	x8, x13
   587ec:	cmp	x2, #0x3
   587f0:	b.ne	5885c <mpfr_free_pool@@Base+0x10b0>  // b.any
   587f4:	orr	x4, x4, #0x800000000000
   587f8:	mov	x5, x6
   587fc:	and	x4, x4, #0xffffffffffff
   58800:	mov	w1, #0x7fff                	// #32767
   58804:	b	58870 <mpfr_free_pool@@Base+0x10c4>
   58808:	mov	x8, #0x7fff                	// #32767
   5880c:	orr	x2, x4, x6
   58810:	add	x9, x3, x8
   58814:	cbnz	x2, 58894 <mpfr_free_pool@@Base+0x10e8>
   58818:	eor	w8, w12, w15
   5881c:	orr	x1, x1, #0x2
   58820:	and	w10, w8, #0xff
   58824:	cmp	x1, #0xa
   58828:	add	x3, x3, #0x8, lsl #12
   5882c:	and	x8, x8, #0xff
   58830:	mov	x6, #0x0                   	// #0
   58834:	b.gt	58e4c <mpfr_free_pool@@Base+0x16a0>
   58838:	mov	x4, #0x0                   	// #0
   5883c:	mov	x2, #0x2                   	// #2
   58840:	cmp	x1, #0x2
   58844:	b.gt	588bc <mpfr_free_pool@@Base+0x1110>
   58848:	sub	x1, x1, #0x1
   5884c:	cmp	x1, #0x1
   58850:	b.hi	588f8 <mpfr_free_pool@@Base+0x114c>  // b.pmore
   58854:	cmp	x2, #0x2
   58858:	b.eq	58b9c <mpfr_free_pool@@Base+0x13f0>  // b.none
   5885c:	cmp	x2, #0x1
   58860:	b.ne	58a58 <mpfr_free_pool@@Base+0x12ac>  // b.any
   58864:	mov	w1, #0x0                   	// #0
   58868:	mov	x4, #0x0                   	// #0
   5886c:	mov	x5, #0x0                   	// #0
   58870:	mov	x3, #0x0                   	// #0
   58874:	orr	w1, w1, w10, lsl #15
   58878:	bfxil	x3, x4, #0, #48
   5887c:	fmov	d0, x5
   58880:	bfi	x3, x1, #48, #16
   58884:	fmov	v0.d[1], x3
   58888:	cbnz	w0, 58cc8 <mpfr_free_pool@@Base+0x151c>
   5888c:	ldp	x29, x30, [sp], #80
   58890:	ret
   58894:	tst	x4, #0x800000000000
   58898:	eor	w8, w12, w15
   5889c:	orr	x1, x1, #0x3
   588a0:	csinc	w0, w0, wzr, ne  // ne = any
   588a4:	and	w10, w8, #0xff
   588a8:	add	x3, x3, #0x8, lsl #12
   588ac:	cmp	x1, #0xa
   588b0:	and	x8, x8, #0xff
   588b4:	mov	x2, #0x3                   	// #3
   588b8:	b.gt	58ecc <mpfr_free_pool@@Base+0x1720>
   588bc:	mov	x12, #0x1                   	// #1
   588c0:	mov	x14, #0x530                 	// #1328
   588c4:	lsl	x1, x12, x1
   588c8:	tst	x1, x14
   588cc:	b.ne	58acc <mpfr_free_pool@@Base+0x1320>  // b.any
   588d0:	mov	x14, #0x240                 	// #576
   588d4:	tst	x1, x14
   588d8:	b.ne	58ab4 <mpfr_free_pool@@Base+0x1308>  // b.any
   588dc:	mov	x12, #0x88                  	// #136
   588e0:	tst	x1, x12
   588e4:	b.eq	588f8 <mpfr_free_pool@@Base+0x114c>  // b.none
   588e8:	mov	x7, x4
   588ec:	mov	x5, x6
   588f0:	mov	x16, x2
   588f4:	b	587d0 <mpfr_free_pool@@Base+0x1024>
   588f8:	lsr	x13, x5, #32
   588fc:	and	x12, x6, #0xffffffff
   58900:	and	x15, x5, #0xffffffff
   58904:	lsr	x6, x6, #32
   58908:	and	x18, x4, #0xffffffff
   5890c:	lsr	x2, x4, #32
   58910:	mul	x4, x13, x12
   58914:	stp	x21, x22, [sp, #32]
   58918:	lsr	x22, x7, #32
   5891c:	and	x5, x7, #0xffffffff
   58920:	mul	x16, x12, x15
   58924:	madd	x7, x6, x15, x4
   58928:	stp	x19, x20, [sp, #16]
   5892c:	mul	x1, x13, x18
   58930:	mul	x17, x15, x18
   58934:	and	x30, x16, #0xffffffff
   58938:	madd	x15, x2, x15, x1
   5893c:	add	x16, x7, x16, lsr #32
   58940:	mul	x21, x22, x12
   58944:	cmp	x4, x16
   58948:	mul	x20, x22, x18
   5894c:	mov	x14, #0x100000000           	// #4294967296
   58950:	mul	x19, x13, x6
   58954:	add	x15, x15, x17, lsr #32
   58958:	mul	x12, x12, x5
   5895c:	and	x17, x17, #0xffffffff
   58960:	mul	x18, x5, x18
   58964:	add	x4, x19, x14
   58968:	madd	x7, x6, x5, x21
   5896c:	csel	x19, x4, x19, hi  // hi = pmore
   58970:	madd	x5, x2, x5, x20
   58974:	cmp	x1, x15
   58978:	mul	x13, x13, x2
   5897c:	add	x17, x17, x15, lsl #32
   58980:	mul	x6, x6, x22
   58984:	add	x7, x7, x12, lsr #32
   58988:	add	x5, x5, x18, lsr #32
   5898c:	add	x4, x13, x14
   58990:	mul	x2, x2, x22
   58994:	csel	x13, x4, x13, hi  // hi = pmore
   58998:	and	x1, x18, #0xffffffff
   5899c:	cmp	x21, x7
   589a0:	add	x4, x6, x14
   589a4:	add	x30, x30, x16, lsl #32
   589a8:	csel	x6, x4, x6, hi  // hi = pmore
   589ac:	add	x13, x13, x15, lsr #32
   589b0:	cmp	x20, x5
   589b4:	add	x1, x1, x5, lsl #32
   589b8:	add	x16, x17, x16, lsr #32
   589bc:	add	x14, x2, x14
   589c0:	csel	x2, x14, x2, hi  // hi = pmore
   589c4:	add	x16, x19, x16
   589c8:	adds	x1, x1, x13
   589cc:	and	x12, x12, #0xffffffff
   589d0:	cset	x13, cs  // cs = hs, nlast
   589d4:	cmp	x16, x17
   589d8:	cset	x4, cc  // cc = lo, ul, last
   589dc:	add	x12, x12, x7, lsl #32
   589e0:	adds	x1, x1, x4
   589e4:	lsr	x5, x5, #32
   589e8:	cset	x4, cs  // cs = hs, nlast
   589ec:	cmp	x13, #0x0
   589f0:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   589f4:	add	x7, x6, x7, lsr #32
   589f8:	cinc	x5, x5, ne  // ne = any
   589fc:	adds	x6, x16, x12
   58a00:	cset	x4, cs  // cs = hs, nlast
   58a04:	adds	x1, x1, x7
   58a08:	cset	x7, cs  // cs = hs, nlast
   58a0c:	adds	x4, x1, x4
   58a10:	cset	x1, cs  // cs = hs, nlast
   58a14:	cmp	x7, #0x0
   58a18:	orr	x30, x30, x6, lsl #13
   58a1c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   58a20:	cinc	x1, x2, ne  // ne = any
   58a24:	cmp	x30, #0x0
   58a28:	add	x1, x1, x5
   58a2c:	cset	x2, ne  // ne = any
   58a30:	orr	x6, x2, x6, lsr #51
   58a34:	orr	x6, x6, x4, lsl #13
   58a38:	extr	x4, x1, x4, #51
   58a3c:	tbz	x1, #39, 58d50 <mpfr_free_pool@@Base+0x15a4>
   58a40:	ldp	x19, x20, [sp, #16]
   58a44:	and	x1, x6, #0x1
   58a48:	ldp	x21, x22, [sp, #32]
   58a4c:	orr	x6, x1, x6, lsr #1
   58a50:	orr	x6, x6, x4, lsl #63
   58a54:	lsr	x4, x4, #1
   58a58:	mov	x1, #0x3fff                	// #16383
   58a5c:	add	x2, x3, x1
   58a60:	cmp	x2, #0x0
   58a64:	b.le	58bfc <mpfr_free_pool@@Base+0x1450>
   58a68:	tst	x6, #0x7
   58a6c:	b.eq	58a8c <mpfr_free_pool@@Base+0x12e0>  // b.none
   58a70:	and	x1, x11, #0xc00000
   58a74:	orr	w0, w0, #0x10
   58a78:	cmp	x1, #0x400, lsl #12
   58a7c:	b.eq	58e44 <mpfr_free_pool@@Base+0x1698>  // b.none
   58a80:	cmp	x1, #0x800, lsl #12
   58a84:	b.eq	58dec <mpfr_free_pool@@Base+0x1640>  // b.none
   58a88:	cbz	x1, 58dd4 <mpfr_free_pool@@Base+0x1628>
   58a8c:	tbz	x4, #52, 58a98 <mpfr_free_pool@@Base+0x12ec>
   58a90:	and	x4, x4, #0xffefffffffffffff
   58a94:	add	x2, x3, #0x4, lsl #12
   58a98:	mov	x1, #0x7ffe                	// #32766
   58a9c:	cmp	x2, x1
   58aa0:	b.gt	58d24 <mpfr_free_pool@@Base+0x1578>
   58aa4:	and	w1, w2, #0x7fff
   58aa8:	extr	x5, x4, x6, #3
   58aac:	ubfx	x4, x4, #3, #48
   58ab0:	b	58870 <mpfr_free_pool@@Base+0x10c4>
   58ab4:	mov	w0, w12
   58ab8:	mov	w10, #0x0                   	// #0
   58abc:	mov	x4, #0xffffffffffff        	// #281474976710655
   58ac0:	mov	x5, #0xffffffffffffffff    	// #-1
   58ac4:	mov	w1, #0x7fff                	// #32767
   58ac8:	b	58870 <mpfr_free_pool@@Base+0x10c4>
   58acc:	mov	w15, w10
   58ad0:	mov	x13, x8
   58ad4:	b	587d0 <mpfr_free_pool@@Base+0x1024>
   58ad8:	orr	x5, x7, x1
   58adc:	cbz	x5, 58be4 <mpfr_free_pool@@Base+0x1438>
   58ae0:	cbz	x7, 58d00 <mpfr_free_pool@@Base+0x1554>
   58ae4:	clz	x0, x7
   58ae8:	sub	x4, x0, #0xf
   58aec:	add	w5, w4, #0x3
   58af0:	mov	w3, #0x3d                  	// #61
   58af4:	sub	w3, w3, w4
   58af8:	lsl	x4, x7, x5
   58afc:	lsr	x3, x1, x3
   58b00:	orr	x7, x3, x4
   58b04:	lsl	x5, x1, x5
   58b08:	lsr	x8, x2, #63
   58b0c:	mov	x3, #0xffffffffffffc011    	// #-16367
   58b10:	ubfx	x4, x2, #0, #48
   58b14:	sub	x3, x3, x0
   58b18:	and	w15, w8, #0xff
   58b1c:	mov	x13, x8
   58b20:	ubfx	x9, x2, #48, #15
   58b24:	mov	x1, #0x0                   	// #0
   58b28:	mov	x16, #0x0                   	// #0
   58b2c:	mov	w0, #0x0                   	// #0
   58b30:	cbnz	w9, 5877c <mpfr_free_pool@@Base+0xfd0>
   58b34:	nop
   58b38:	orr	x2, x4, x6
   58b3c:	cbz	x2, 58bac <mpfr_free_pool@@Base+0x1400>
   58b40:	cbz	x4, 58cdc <mpfr_free_pool@@Base+0x1530>
   58b44:	clz	x9, x4
   58b48:	sub	x2, x9, #0xf
   58b4c:	add	w10, w2, #0x3
   58b50:	mov	w8, #0x3d                  	// #61
   58b54:	sub	w8, w8, w2
   58b58:	lsl	x2, x4, x10
   58b5c:	lsr	x8, x6, x8
   58b60:	orr	x4, x8, x2
   58b64:	lsl	x6, x6, x10
   58b68:	sub	x9, x3, x9
   58b6c:	mov	x10, #0xffffffffffffc011    	// #-16367
   58b70:	mov	x2, #0x0                   	// #0
   58b74:	add	x9, x9, x10
   58b78:	b	587a8 <mpfr_free_pool@@Base+0xffc>
   58b7c:	orr	x5, x7, x1
   58b80:	cbnz	x5, 58bc4 <mpfr_free_pool@@Base+0x1418>
   58b84:	mov	x7, #0x0                   	// #0
   58b88:	mov	x1, #0x8                   	// #8
   58b8c:	mov	x3, #0x7fff                	// #32767
   58b90:	mov	x16, #0x2                   	// #2
   58b94:	mov	w0, #0x0                   	// #0
   58b98:	b	58764 <mpfr_free_pool@@Base+0xfb8>
   58b9c:	mov	w1, #0x7fff                	// #32767
   58ba0:	mov	x4, #0x0                   	// #0
   58ba4:	mov	x5, #0x0                   	// #0
   58ba8:	b	58870 <mpfr_free_pool@@Base+0x10c4>
   58bac:	orr	x1, x1, #0x1
   58bb0:	mov	x9, x3
   58bb4:	mov	x4, #0x0                   	// #0
   58bb8:	mov	x6, #0x0                   	// #0
   58bbc:	mov	x2, #0x1                   	// #1
   58bc0:	b	587a8 <mpfr_free_pool@@Base+0xffc>
   58bc4:	lsr	x0, x7, #47
   58bc8:	mov	x5, x1
   58bcc:	eor	x0, x0, #0x1
   58bd0:	mov	x1, #0xc                   	// #12
   58bd4:	and	w0, w0, #0x1
   58bd8:	mov	x3, #0x7fff                	// #32767
   58bdc:	mov	x16, #0x3                   	// #3
   58be0:	b	58764 <mpfr_free_pool@@Base+0xfb8>
   58be4:	mov	x7, #0x0                   	// #0
   58be8:	mov	x1, #0x4                   	// #4
   58bec:	mov	x3, #0x0                   	// #0
   58bf0:	mov	x16, #0x1                   	// #1
   58bf4:	mov	w0, #0x0                   	// #0
   58bf8:	b	58764 <mpfr_free_pool@@Base+0xfb8>
   58bfc:	mov	x1, #0x1                   	// #1
   58c00:	sub	x2, x1, x2
   58c04:	cmp	x2, #0x74
   58c08:	b.gt	58c80 <mpfr_free_pool@@Base+0x14d4>
   58c0c:	cmp	x2, #0x3f
   58c10:	b.le	58d60 <mpfr_free_pool@@Base+0x15b4>
   58c14:	mov	w1, #0x80                  	// #128
   58c18:	sub	w1, w1, w2
   58c1c:	cmp	x2, #0x40
   58c20:	sub	w2, w2, #0x40
   58c24:	lsl	x1, x4, x1
   58c28:	orr	x1, x6, x1
   58c2c:	csel	x6, x1, x6, ne  // ne = any
   58c30:	lsr	x2, x4, x2
   58c34:	cmp	x6, #0x0
   58c38:	cset	x5, ne  // ne = any
   58c3c:	orr	x5, x5, x2
   58c40:	ands	x2, x5, #0x7
   58c44:	b.eq	58d94 <mpfr_free_pool@@Base+0x15e8>  // b.none
   58c48:	mov	x2, #0x0                   	// #0
   58c4c:	and	x11, x11, #0xc00000
   58c50:	orr	w0, w0, #0x10
   58c54:	cmp	x11, #0x400, lsl #12
   58c58:	b.eq	58ea4 <mpfr_free_pool@@Base+0x16f8>  // b.none
   58c5c:	cmp	x11, #0x800, lsl #12
   58c60:	b.eq	58eb8 <mpfr_free_pool@@Base+0x170c>  // b.none
   58c64:	cbz	x11, 58dfc <mpfr_free_pool@@Base+0x1650>
   58c68:	tbnz	x2, #51, 58e14 <mpfr_free_pool@@Base+0x1668>
   58c6c:	ubfx	x4, x2, #3, #48
   58c70:	extr	x5, x2, x5, #3
   58c74:	orr	w0, w0, #0x8
   58c78:	mov	w1, #0x0                   	// #0
   58c7c:	b	58cb0 <mpfr_free_pool@@Base+0x1504>
   58c80:	orr	x5, x6, x4
   58c84:	cbz	x5, 58ca4 <mpfr_free_pool@@Base+0x14f8>
   58c88:	and	x11, x11, #0xc00000
   58c8c:	orr	w0, w0, #0x10
   58c90:	cmp	x11, #0x400, lsl #12
   58c94:	sub	x5, x1, x8
   58c98:	b.eq	58ca4 <mpfr_free_pool@@Base+0x14f8>  // b.none
   58c9c:	cmp	x11, #0x800, lsl #12
   58ca0:	csel	x5, x8, xzr, eq  // eq = none
   58ca4:	orr	w0, w0, #0x8
   58ca8:	mov	w1, #0x0                   	// #0
   58cac:	mov	x4, #0x0                   	// #0
   58cb0:	mov	x3, #0x0                   	// #0
   58cb4:	fmov	d0, x5
   58cb8:	bfxil	x3, x4, #0, #48
   58cbc:	bfi	x3, x1, #48, #15
   58cc0:	bfi	x3, x10, #63, #1
   58cc4:	fmov	v0.d[1], x3
   58cc8:	str	q0, [sp, #48]
   58ccc:	bl	59e28 <mpfr_free_pool@@Base+0x267c>
   58cd0:	ldr	q0, [sp, #48]
   58cd4:	ldp	x29, x30, [sp], #80
   58cd8:	ret
   58cdc:	clz	x9, x6
   58ce0:	add	x2, x9, #0x31
   58ce4:	add	x9, x9, #0x40
   58ce8:	cmp	x2, #0x3c
   58cec:	b.le	58b4c <mpfr_free_pool@@Base+0x13a0>
   58cf0:	sub	w2, w2, #0x3d
   58cf4:	lsl	x4, x6, x2
   58cf8:	mov	x6, #0x0                   	// #0
   58cfc:	b	58b68 <mpfr_free_pool@@Base+0x13bc>
   58d00:	clz	x3, x1
   58d04:	add	x4, x3, #0x31
   58d08:	add	x0, x3, #0x40
   58d0c:	cmp	x4, #0x3c
   58d10:	b.le	58aec <mpfr_free_pool@@Base+0x1340>
   58d14:	sub	w4, w4, #0x3d
   58d18:	mov	x5, #0x0                   	// #0
   58d1c:	lsl	x7, x1, x4
   58d20:	b	58b08 <mpfr_free_pool@@Base+0x135c>
   58d24:	and	x5, x11, #0xc00000
   58d28:	cmp	x5, #0x400, lsl #12
   58d2c:	b.eq	58e28 <mpfr_free_pool@@Base+0x167c>  // b.none
   58d30:	cmp	x5, #0x800, lsl #12
   58d34:	b.eq	58db8 <mpfr_free_pool@@Base+0x160c>  // b.none
   58d38:	cbz	x5, 58dac <mpfr_free_pool@@Base+0x1600>
   58d3c:	mov	x4, #0xffffffffffff        	// #281474976710655
   58d40:	mov	x5, #0xffffffffffffffff    	// #-1
   58d44:	mov	w2, #0x14                  	// #20
   58d48:	orr	w0, w0, w2
   58d4c:	b	58cb0 <mpfr_free_pool@@Base+0x1504>
   58d50:	mov	x3, x9
   58d54:	ldp	x19, x20, [sp, #16]
   58d58:	ldp	x21, x22, [sp, #32]
   58d5c:	b	58a58 <mpfr_free_pool@@Base+0x12ac>
   58d60:	mov	w1, #0x40                  	// #64
   58d64:	sub	w1, w1, w2
   58d68:	lsr	x3, x6, x2
   58d6c:	lsl	x6, x6, x1
   58d70:	cmp	x6, #0x0
   58d74:	lsl	x5, x4, x1
   58d78:	cset	x1, ne  // ne = any
   58d7c:	orr	x5, x5, x3
   58d80:	lsr	x2, x4, x2
   58d84:	orr	x5, x5, x1
   58d88:	tst	x5, #0x7
   58d8c:	b.ne	58c4c <mpfr_free_pool@@Base+0x14a0>  // b.any
   58d90:	tbnz	x2, #51, 58ec4 <mpfr_free_pool@@Base+0x1718>
   58d94:	ubfx	x4, x2, #3, #48
   58d98:	extr	x5, x2, x5, #3
   58d9c:	mov	w1, #0x0                   	// #0
   58da0:	tbz	w11, #11, 58870 <mpfr_free_pool@@Base+0x10c4>
   58da4:	orr	w0, w0, #0x8
   58da8:	b	58cb0 <mpfr_free_pool@@Base+0x1504>
   58dac:	mov	w1, #0x7fff                	// #32767
   58db0:	mov	x4, #0x0                   	// #0
   58db4:	b	58d44 <mpfr_free_pool@@Base+0x1598>
   58db8:	cmp	x8, #0x0
   58dbc:	mov	w2, #0x7fff                	// #32767
   58dc0:	mov	x4, #0xffffffffffff        	// #281474976710655
   58dc4:	csel	w1, w1, w2, eq  // eq = none
   58dc8:	csel	x4, x4, xzr, eq  // eq = none
   58dcc:	csetm	x5, eq  // eq = none
   58dd0:	b	58d44 <mpfr_free_pool@@Base+0x1598>
   58dd4:	and	x1, x6, #0xf
   58dd8:	cmp	x1, #0x4
   58ddc:	b.eq	58a8c <mpfr_free_pool@@Base+0x12e0>  // b.none
   58de0:	adds	x6, x6, #0x4
   58de4:	cinc	x4, x4, cs  // cs = hs, nlast
   58de8:	b	58a8c <mpfr_free_pool@@Base+0x12e0>
   58dec:	cbz	x8, 58a8c <mpfr_free_pool@@Base+0x12e0>
   58df0:	adds	x6, x6, #0x8
   58df4:	cinc	x4, x4, cs  // cs = hs, nlast
   58df8:	b	58a8c <mpfr_free_pool@@Base+0x12e0>
   58dfc:	and	x1, x5, #0xf
   58e00:	cmp	x1, #0x4
   58e04:	b.eq	58e10 <mpfr_free_pool@@Base+0x1664>  // b.none
   58e08:	adds	x5, x5, #0x4
   58e0c:	cinc	x2, x2, cs  // cs = hs, nlast
   58e10:	tbz	x2, #51, 58c6c <mpfr_free_pool@@Base+0x14c0>
   58e14:	orr	w0, w0, #0x8
   58e18:	mov	w1, #0x1                   	// #1
   58e1c:	mov	x4, #0x0                   	// #0
   58e20:	mov	x5, #0x0                   	// #0
   58e24:	b	58cb0 <mpfr_free_pool@@Base+0x1504>
   58e28:	cmp	x8, #0x0
   58e2c:	mov	w2, #0x7fff                	// #32767
   58e30:	mov	x4, #0xffffffffffff        	// #281474976710655
   58e34:	csel	w1, w1, w2, ne  // ne = any
   58e38:	csel	x4, x4, xzr, ne  // ne = any
   58e3c:	csetm	x5, ne  // ne = any
   58e40:	b	58d44 <mpfr_free_pool@@Base+0x1598>
   58e44:	cbnz	x8, 58a8c <mpfr_free_pool@@Base+0x12e0>
   58e48:	b	58df0 <mpfr_free_pool@@Base+0x1644>
   58e4c:	mov	x4, #0x2                   	// #2
   58e50:	cmp	x1, #0xf
   58e54:	b.ne	58e78 <mpfr_free_pool@@Base+0x16cc>  // b.any
   58e58:	tbz	x7, #47, 58e90 <mpfr_free_pool@@Base+0x16e4>
   58e5c:	tbnz	x2, #47, 58e90 <mpfr_free_pool@@Base+0x16e4>
   58e60:	orr	x4, x2, #0x800000000000
   58e64:	mov	w10, w15
   58e68:	and	x4, x4, #0xffffffffffff
   58e6c:	mov	x5, x6
   58e70:	mov	w1, #0x7fff                	// #32767
   58e74:	b	58870 <mpfr_free_pool@@Base+0x10c4>
   58e78:	cmp	x1, #0xb
   58e7c:	b.ne	587c8 <mpfr_free_pool@@Base+0x101c>  // b.any
   58e80:	mov	x7, x2
   58e84:	mov	x5, x6
   58e88:	mov	x16, x4
   58e8c:	b	587d0 <mpfr_free_pool@@Base+0x1024>
   58e90:	orr	x4, x7, #0x800000000000
   58e94:	mov	w10, w12
   58e98:	and	x4, x4, #0xffffffffffff
   58e9c:	mov	w1, #0x7fff                	// #32767
   58ea0:	b	58870 <mpfr_free_pool@@Base+0x10c4>
   58ea4:	cbnz	x8, 58e10 <mpfr_free_pool@@Base+0x1664>
   58ea8:	adds	x5, x5, #0x8
   58eac:	cinc	x2, x2, cs  // cs = hs, nlast
   58eb0:	tbnz	x2, #51, 58e14 <mpfr_free_pool@@Base+0x1668>
   58eb4:	b	58c6c <mpfr_free_pool@@Base+0x14c0>
   58eb8:	cbnz	x8, 58ea8 <mpfr_free_pool@@Base+0x16fc>
   58ebc:	tbnz	x2, #51, 58e14 <mpfr_free_pool@@Base+0x1668>
   58ec0:	b	58c6c <mpfr_free_pool@@Base+0x14c0>
   58ec4:	orr	w0, w0, #0x10
   58ec8:	b	58e14 <mpfr_free_pool@@Base+0x1668>
   58ecc:	mov	x2, x4
   58ed0:	mov	x4, #0x3                   	// #3
   58ed4:	b	58e50 <mpfr_free_pool@@Base+0x16a4>
   58ed8:	mov	w10, w15
   58edc:	mov	x8, x13
   58ee0:	b	587ec <mpfr_free_pool@@Base+0x1040>
   58ee4:	nop
   58ee8:	stp	x29, x30, [sp, #-48]!
   58eec:	mov	x29, sp
   58ef0:	str	q0, [sp, #16]
   58ef4:	str	q1, [sp, #32]
   58ef8:	ldp	x5, x1, [sp, #16]
   58efc:	ldp	x0, x2, [sp, #32]
   58f00:	mrs	x12, fpcr
   58f04:	mov	x9, x0
   58f08:	ubfx	x0, x2, #48, #15
   58f0c:	lsr	x6, x1, #63
   58f10:	ubfx	x7, x1, #48, #15
   58f14:	ubfiz	x3, x1, #3, #48
   58f18:	mov	x13, x0
   58f1c:	lsr	x4, x2, #63
   58f20:	ubfiz	x2, x2, #3, #48
   58f24:	mov	x11, x6
   58f28:	and	w8, w6, #0xff
   58f2c:	mov	x14, x6
   58f30:	sub	w0, w7, w0
   58f34:	mov	x1, x7
   58f38:	orr	x3, x3, x5, lsr #61
   58f3c:	mov	x7, #0x7fff                	// #32767
   58f40:	and	w4, w4, #0xff
   58f44:	cmp	x13, x7
   58f48:	orr	x2, x2, x9, lsr #61
   58f4c:	lsl	x6, x5, #3
   58f50:	lsl	x10, x9, #3
   58f54:	b.eq	590c4 <mpfr_free_pool@@Base+0x1918>  // b.none
   58f58:	eor	w4, w4, #0x1
   58f5c:	and	x4, x4, #0xff
   58f60:	cmp	x11, x4
   58f64:	b.eq	5915c <mpfr_free_pool@@Base+0x19b0>  // b.none
   58f68:	cmp	w0, #0x0
   58f6c:	b.le	590e0 <mpfr_free_pool@@Base+0x1934>
   58f70:	cbnz	x13, 5924c <mpfr_free_pool@@Base+0x1aa0>
   58f74:	orr	x4, x2, x10
   58f78:	cbz	x4, 5942c <mpfr_free_pool@@Base+0x1c80>
   58f7c:	subs	w0, w0, #0x1
   58f80:	b.eq	59700 <mpfr_free_pool@@Base+0x1f54>  // b.none
   58f84:	mov	x4, #0x7fff                	// #32767
   58f88:	cmp	x1, x4
   58f8c:	b.eq	59400 <mpfr_free_pool@@Base+0x1c54>  // b.none
   58f90:	cmp	w0, #0x74
   58f94:	b.gt	5941c <mpfr_free_pool@@Base+0x1c70>
   58f98:	cmp	w0, #0x3f
   58f9c:	b.gt	595c4 <mpfr_free_pool@@Base+0x1e18>
   58fa0:	mov	w4, #0x40                  	// #64
   58fa4:	sub	w4, w4, w0
   58fa8:	lsr	x7, x10, x0
   58fac:	lsl	x10, x10, x4
   58fb0:	cmp	x10, #0x0
   58fb4:	lsl	x4, x2, x4
   58fb8:	cset	x5, ne  // ne = any
   58fbc:	orr	x4, x4, x7
   58fc0:	lsr	x2, x2, x0
   58fc4:	orr	x4, x4, x5
   58fc8:	sub	x3, x3, x2
   58fcc:	subs	x6, x6, x4
   58fd0:	sbc	x3, x3, xzr
   58fd4:	and	x5, x3, #0x7ffffffffffff
   58fd8:	tbz	x3, #51, 591d8 <mpfr_free_pool@@Base+0x1a2c>
   58fdc:	cbz	x5, 593e4 <mpfr_free_pool@@Base+0x1c38>
   58fe0:	clz	x0, x5
   58fe4:	sub	w0, w0, #0xc
   58fe8:	neg	w3, w0
   58fec:	lsl	x2, x5, x0
   58ff0:	lsl	x5, x6, x0
   58ff4:	lsr	x6, x6, x3
   58ff8:	orr	x3, x6, x2
   58ffc:	cmp	x1, w0, sxtw
   59000:	sxtw	x2, w0
   59004:	b.gt	593c4 <mpfr_free_pool@@Base+0x1c18>
   59008:	sub	w1, w0, w1
   5900c:	add	w0, w1, #0x1
   59010:	cmp	w0, #0x3f
   59014:	b.gt	5958c <mpfr_free_pool@@Base+0x1de0>
   59018:	mov	w1, #0x40                  	// #64
   5901c:	sub	w1, w1, w0
   59020:	lsr	x2, x5, x0
   59024:	lsl	x5, x5, x1
   59028:	cmp	x5, #0x0
   5902c:	lsl	x6, x3, x1
   59030:	cset	x1, ne  // ne = any
   59034:	orr	x6, x6, x2
   59038:	lsr	x3, x3, x0
   5903c:	orr	x6, x6, x1
   59040:	orr	x7, x6, x3
   59044:	cbz	x7, 591ec <mpfr_free_pool@@Base+0x1a40>
   59048:	and	x0, x6, #0x7
   5904c:	mov	x1, #0x0                   	// #0
   59050:	mov	w4, #0x1                   	// #1
   59054:	cbz	x0, 59450 <mpfr_free_pool@@Base+0x1ca4>
   59058:	and	x2, x12, #0xc00000
   5905c:	cmp	x2, #0x400, lsl #12
   59060:	b.eq	5939c <mpfr_free_pool@@Base+0x1bf0>  // b.none
   59064:	cmp	x2, #0x800, lsl #12
   59068:	b.eq	5937c <mpfr_free_pool@@Base+0x1bd0>  // b.none
   5906c:	cbz	x2, 593a8 <mpfr_free_pool@@Base+0x1bfc>
   59070:	and	x2, x3, #0x8000000000000
   59074:	mov	w0, #0x10                  	// #16
   59078:	cbz	w4, 59080 <mpfr_free_pool@@Base+0x18d4>
   5907c:	orr	w0, w0, #0x8
   59080:	cbz	x2, 59130 <mpfr_free_pool@@Base+0x1984>
   59084:	add	x1, x1, #0x1
   59088:	mov	x2, #0x7fff                	// #32767
   5908c:	cmp	x1, x2
   59090:	b.eq	592a4 <mpfr_free_pool@@Base+0x1af8>  // b.none
   59094:	ubfx	x7, x3, #3, #48
   59098:	extr	x5, x3, x6, #3
   5909c:	and	w1, w1, #0x7fff
   590a0:	mov	x3, #0x0                   	// #0
   590a4:	orr	w1, w1, w8, lsl #15
   590a8:	bfxil	x3, x7, #0, #48
   590ac:	fmov	d0, x5
   590b0:	bfi	x3, x1, #48, #16
   590b4:	fmov	v0.d[1], x3
   590b8:	cbnz	w0, 59300 <mpfr_free_pool@@Base+0x1b54>
   590bc:	ldp	x29, x30, [sp], #48
   590c0:	ret
   590c4:	orr	x7, x2, x10
   590c8:	cbz	x7, 58f58 <mpfr_free_pool@@Base+0x17ac>
   590cc:	and	x4, x4, #0xff
   590d0:	cmp	x11, x4
   590d4:	b.eq	59314 <mpfr_free_pool@@Base+0x1b68>  // b.none
   590d8:	cmp	w0, #0x0
   590dc:	b.gt	5924c <mpfr_free_pool@@Base+0x1aa0>
   590e0:	cbz	w0, 59204 <mpfr_free_pool@@Base+0x1a58>
   590e4:	mov	w8, w4
   590e8:	cbnz	x1, 59520 <mpfr_free_pool@@Base+0x1d74>
   590ec:	orr	x1, x3, x6
   590f0:	cbz	x1, 591b8 <mpfr_free_pool@@Base+0x1a0c>
   590f4:	cmn	w0, #0x1
   590f8:	b.eq	59860 <mpfr_free_pool@@Base+0x20b4>  // b.none
   590fc:	mov	x1, #0x7fff                	// #32767
   59100:	mvn	w0, w0
   59104:	cmp	x13, x1
   59108:	b.ne	59534 <mpfr_free_pool@@Base+0x1d88>  // b.any
   5910c:	orr	x0, x2, x10
   59110:	and	x11, x8, #0xff
   59114:	cbz	x0, 59498 <mpfr_free_pool@@Base+0x1cec>
   59118:	lsr	x0, x2, #50
   5911c:	mov	x6, x10
   59120:	eor	x0, x0, #0x1
   59124:	mov	x3, x2
   59128:	and	w0, w0, #0x1
   5912c:	mov	x1, #0x7fff                	// #32767
   59130:	mov	x2, #0x7fff                	// #32767
   59134:	extr	x5, x3, x6, #3
   59138:	lsr	x7, x3, #3
   5913c:	cmp	x1, x2
   59140:	b.ne	591f8 <mpfr_free_pool@@Base+0x1a4c>  // b.any
   59144:	orr	x1, x7, x5
   59148:	cbz	x1, 599b4 <mpfr_free_pool@@Base+0x2208>
   5914c:	orr	x7, x7, #0x800000000000
   59150:	mov	w1, #0x7fff                	// #32767
   59154:	and	x7, x7, #0xffffffffffff
   59158:	b	590a0 <mpfr_free_pool@@Base+0x18f4>
   5915c:	cmp	w0, #0x0
   59160:	b.le	59314 <mpfr_free_pool@@Base+0x1b68>
   59164:	cbz	x13, 59254 <mpfr_free_pool@@Base+0x1aa8>
   59168:	orr	x2, x2, #0x8000000000000
   5916c:	mov	x4, #0x7fff                	// #32767
   59170:	cmp	x1, x4
   59174:	b.eq	59400 <mpfr_free_pool@@Base+0x1c54>  // b.none
   59178:	cmp	w0, #0x74
   5917c:	b.gt	59574 <mpfr_free_pool@@Base+0x1dc8>
   59180:	cmp	w0, #0x3f
   59184:	b.gt	59610 <mpfr_free_pool@@Base+0x1e64>
   59188:	mov	w4, #0x40                  	// #64
   5918c:	sub	w4, w4, w0
   59190:	lsr	x7, x10, x0
   59194:	lsl	x10, x10, x4
   59198:	cmp	x10, #0x0
   5919c:	lsl	x4, x2, x4
   591a0:	cset	x5, ne  // ne = any
   591a4:	orr	x4, x4, x7
   591a8:	lsr	x2, x2, x0
   591ac:	orr	x0, x4, x5
   591b0:	add	x3, x3, x2
   591b4:	b	59580 <mpfr_free_pool@@Base+0x1dd4>
   591b8:	mov	x0, #0x7fff                	// #32767
   591bc:	cmp	x13, x0
   591c0:	b.eq	597ec <mpfr_free_pool@@Base+0x2040>  // b.none
   591c4:	mov	x3, x2
   591c8:	mov	x6, x10
   591cc:	mov	x1, x13
   591d0:	mov	x14, x4
   591d4:	nop
   591d8:	orr	x7, x6, x3
   591dc:	and	x0, x6, #0x7
   591e0:	mov	w4, #0x0                   	// #0
   591e4:	cbnz	x1, 59054 <mpfr_free_pool@@Base+0x18a8>
   591e8:	cbnz	x7, 59048 <mpfr_free_pool@@Base+0x189c>
   591ec:	mov	x5, #0x0                   	// #0
   591f0:	mov	x1, #0x0                   	// #0
   591f4:	mov	w0, #0x0                   	// #0
   591f8:	and	x7, x7, #0xffffffffffff
   591fc:	and	w1, w1, #0x7fff
   59200:	b	590a0 <mpfr_free_pool@@Base+0x18f4>
   59204:	add	x7, x1, #0x1
   59208:	tst	x7, #0x7ffe
   5920c:	b.ne	594f0 <mpfr_free_pool@@Base+0x1d44>  // b.any
   59210:	orr	x11, x3, x6
   59214:	orr	x7, x2, x10
   59218:	cbnz	x1, 59680 <mpfr_free_pool@@Base+0x1ed4>
   5921c:	cbz	x11, 5970c <mpfr_free_pool@@Base+0x1f60>
   59220:	cbz	x7, 59720 <mpfr_free_pool@@Base+0x1f74>
   59224:	subs	x9, x6, x10
   59228:	cmp	x6, x10
   5922c:	sbc	x5, x3, x2
   59230:	tbz	x5, #51, 598c8 <mpfr_free_pool@@Base+0x211c>
   59234:	subs	x6, x10, x6
   59238:	mov	w8, w4
   5923c:	sbc	x3, x2, x3
   59240:	mov	x14, x4
   59244:	orr	x7, x6, x3
   59248:	b	59044 <mpfr_free_pool@@Base+0x1898>
   5924c:	orr	x2, x2, #0x8000000000000
   59250:	b	58f84 <mpfr_free_pool@@Base+0x17d8>
   59254:	orr	x4, x2, x10
   59258:	cbz	x4, 5942c <mpfr_free_pool@@Base+0x1c80>
   5925c:	subs	w0, w0, #0x1
   59260:	b.ne	5916c <mpfr_free_pool@@Base+0x19c0>  // b.any
   59264:	adds	x6, x6, x10
   59268:	adc	x3, x2, x3
   5926c:	nop
   59270:	tbz	x3, #51, 591d8 <mpfr_free_pool@@Base+0x1a2c>
   59274:	add	x1, x1, #0x1
   59278:	mov	x0, #0x7fff                	// #32767
   5927c:	cmp	x1, x0
   59280:	b.eq	5972c <mpfr_free_pool@@Base+0x1f80>  // b.none
   59284:	and	x0, x6, #0x1
   59288:	and	x2, x3, #0xfff7ffffffffffff
   5928c:	orr	x6, x0, x6, lsr #1
   59290:	mov	w4, #0x0                   	// #0
   59294:	orr	x6, x6, x3, lsl #63
   59298:	lsr	x3, x2, #1
   5929c:	and	x0, x6, #0x7
   592a0:	b	59054 <mpfr_free_pool@@Base+0x18a8>
   592a4:	and	x2, x12, #0xc00000
   592a8:	cbz	x2, 592e0 <mpfr_free_pool@@Base+0x1b34>
   592ac:	cmp	x2, #0x400, lsl #12
   592b0:	b.eq	592dc <mpfr_free_pool@@Base+0x1b30>  // b.none
   592b4:	cmp	x2, #0x800, lsl #12
   592b8:	and	w14, w14, #0x1
   592bc:	csel	w14, w14, wzr, eq  // eq = none
   592c0:	cbnz	w14, 592e0 <mpfr_free_pool@@Base+0x1b34>
   592c4:	mov	w1, #0x14                  	// #20
   592c8:	mov	x5, #0xffffffffffffffff    	// #-1
   592cc:	orr	w0, w0, w1
   592d0:	mov	x7, #0x1fffffffffffffff    	// #2305843009213693951
   592d4:	mov	x1, #0x7ffe                	// #32766
   592d8:	b	591f8 <mpfr_free_pool@@Base+0x1a4c>
   592dc:	cbnz	x14, 592c4 <mpfr_free_pool@@Base+0x1b18>
   592e0:	mov	w1, #0x14                  	// #20
   592e4:	and	x11, x8, #0xff
   592e8:	orr	w0, w0, w1
   592ec:	mov	x2, #0x0                   	// #0
   592f0:	fmov	d0, x2
   592f4:	lsl	x11, x11, #63
   592f8:	orr	x3, x11, #0x7fff000000000000
   592fc:	fmov	v0.d[1], x3
   59300:	str	q0, [sp, #16]
   59304:	bl	59e28 <mpfr_free_pool@@Base+0x267c>
   59308:	ldr	q0, [sp, #16]
   5930c:	ldp	x29, x30, [sp], #48
   59310:	ret
   59314:	cbz	w0, 594b0 <mpfr_free_pool@@Base+0x1d04>
   59318:	cbz	x1, 5946c <mpfr_free_pool@@Base+0x1cc0>
   5931c:	mov	x1, #0x7fff                	// #32767
   59320:	neg	w0, w0
   59324:	orr	x3, x3, #0x8000000000000
   59328:	cmp	x13, x1
   5932c:	b.eq	5948c <mpfr_free_pool@@Base+0x1ce0>  // b.none
   59330:	cmp	w0, #0x74
   59334:	b.gt	59780 <mpfr_free_pool@@Base+0x1fd4>
   59338:	cmp	w0, #0x3f
   5933c:	b.gt	59834 <mpfr_free_pool@@Base+0x2088>
   59340:	mov	w1, #0x40                  	// #64
   59344:	sub	w1, w1, w0
   59348:	lsr	x4, x6, x0
   5934c:	lsl	x6, x6, x1
   59350:	cmp	x6, #0x0
   59354:	lsl	x6, x3, x1
   59358:	cset	x1, ne  // ne = any
   5935c:	orr	x6, x6, x4
   59360:	lsr	x0, x3, x0
   59364:	orr	x6, x6, x1
   59368:	add	x2, x2, x0
   5936c:	adds	x6, x6, x10
   59370:	mov	x1, x13
   59374:	cinc	x3, x2, cs  // cs = hs, nlast
   59378:	b	59270 <mpfr_free_pool@@Base+0x1ac4>
   5937c:	mov	w0, #0x10                  	// #16
   59380:	cbz	x14, 5938c <mpfr_free_pool@@Base+0x1be0>
   59384:	adds	x6, x6, #0x8
   59388:	cinc	x3, x3, cs  // cs = hs, nlast
   5938c:	and	x2, x3, #0x8000000000000
   59390:	cbz	w4, 59080 <mpfr_free_pool@@Base+0x18d4>
   59394:	orr	w0, w0, #0x8
   59398:	b	59080 <mpfr_free_pool@@Base+0x18d4>
   5939c:	mov	w0, #0x10                  	// #16
   593a0:	cbnz	x14, 5938c <mpfr_free_pool@@Base+0x1be0>
   593a4:	b	59384 <mpfr_free_pool@@Base+0x1bd8>
   593a8:	and	x2, x6, #0xf
   593ac:	mov	w0, #0x10                  	// #16
   593b0:	cmp	x2, #0x4
   593b4:	b.eq	5938c <mpfr_free_pool@@Base+0x1be0>  // b.none
   593b8:	adds	x6, x6, #0x4
   593bc:	cinc	x3, x3, cs  // cs = hs, nlast
   593c0:	b	5938c <mpfr_free_pool@@Base+0x1be0>
   593c4:	mov	x6, x5
   593c8:	and	x3, x3, #0xfff7ffffffffffff
   593cc:	sub	x1, x1, x2
   593d0:	orr	x7, x6, x3
   593d4:	and	x0, x6, #0x7
   593d8:	mov	w4, #0x0                   	// #0
   593dc:	cbz	x1, 591e8 <mpfr_free_pool@@Base+0x1a3c>
   593e0:	b	59054 <mpfr_free_pool@@Base+0x18a8>
   593e4:	clz	x3, x6
   593e8:	add	w0, w3, #0x34
   593ec:	cmp	w0, #0x3f
   593f0:	b.le	58fe8 <mpfr_free_pool@@Base+0x183c>
   593f4:	sub	w3, w3, #0xc
   593f8:	lsl	x3, x6, x3
   593fc:	b	58ffc <mpfr_free_pool@@Base+0x1850>
   59400:	orr	x0, x3, x6
   59404:	cbz	x0, 59498 <mpfr_free_pool@@Base+0x1cec>
   59408:	lsr	x0, x3, #50
   5940c:	mov	x1, #0x7fff                	// #32767
   59410:	eor	x0, x0, #0x1
   59414:	and	w0, w0, #0x1
   59418:	b	59130 <mpfr_free_pool@@Base+0x1984>
   5941c:	orr	x2, x2, x10
   59420:	cmp	x2, #0x0
   59424:	cset	x4, ne  // ne = any
   59428:	b	58fcc <mpfr_free_pool@@Base+0x1820>
   5942c:	mov	x0, #0x7fff                	// #32767
   59430:	cmp	x1, x0
   59434:	b.ne	591d8 <mpfr_free_pool@@Base+0x1a2c>  // b.any
   59438:	orr	x0, x3, x6
   5943c:	cbnz	x0, 59408 <mpfr_free_pool@@Base+0x1c5c>
   59440:	mov	x5, #0x0                   	// #0
   59444:	mov	x7, #0x0                   	// #0
   59448:	mov	w0, #0x0                   	// #0
   5944c:	b	59144 <mpfr_free_pool@@Base+0x1998>
   59450:	and	x2, x3, #0x8000000000000
   59454:	mov	w0, #0x0                   	// #0
   59458:	cbz	w4, 59080 <mpfr_free_pool@@Base+0x18d4>
   5945c:	mov	w0, #0x0                   	// #0
   59460:	tbz	w12, #11, 59080 <mpfr_free_pool@@Base+0x18d4>
   59464:	orr	w0, w0, #0x8
   59468:	b	59080 <mpfr_free_pool@@Base+0x18d4>
   5946c:	orr	x1, x3, x6
   59470:	cbz	x1, 597f8 <mpfr_free_pool@@Base+0x204c>
   59474:	cmn	w0, #0x1
   59478:	b.eq	59948 <mpfr_free_pool@@Base+0x219c>  // b.none
   5947c:	mov	x1, #0x7fff                	// #32767
   59480:	mvn	w0, w0
   59484:	cmp	x13, x1
   59488:	b.ne	59330 <mpfr_free_pool@@Base+0x1b84>  // b.any
   5948c:	orr	x0, x2, x10
   59490:	cbnz	x0, 59118 <mpfr_free_pool@@Base+0x196c>
   59494:	nop
   59498:	mov	x2, #0x0                   	// #0
   5949c:	fmov	d0, x2
   594a0:	lsl	x0, x11, #63
   594a4:	orr	x3, x0, #0x7fff000000000000
   594a8:	fmov	v0.d[1], x3
   594ac:	b	590bc <mpfr_free_pool@@Base+0x1910>
   594b0:	add	x7, x1, #0x1
   594b4:	tst	x7, #0x7ffe
   594b8:	b.ne	5963c <mpfr_free_pool@@Base+0x1e90>  // b.any
   594bc:	orr	x11, x3, x6
   594c0:	cbnz	x1, 597c4 <mpfr_free_pool@@Base+0x2018>
   594c4:	orr	x7, x2, x10
   594c8:	cbz	x11, 59828 <mpfr_free_pool@@Base+0x207c>
   594cc:	cbz	x7, 59720 <mpfr_free_pool@@Base+0x1f74>
   594d0:	adds	x6, x6, x10
   594d4:	adc	x3, x2, x3
   594d8:	tbz	x3, #51, 59040 <mpfr_free_pool@@Base+0x1894>
   594dc:	and	x3, x3, #0xfff7ffffffffffff
   594e0:	and	x0, x6, #0x7
   594e4:	mov	w4, #0x0                   	// #0
   594e8:	mov	x1, #0x1                   	// #1
   594ec:	b	59054 <mpfr_free_pool@@Base+0x18a8>
   594f0:	subs	x9, x6, x10
   594f4:	cmp	x6, x10
   594f8:	sbc	x5, x3, x2
   594fc:	tbnz	x5, #51, 59668 <mpfr_free_pool@@Base+0x1ebc>
   59500:	orr	x7, x9, x5
   59504:	cbnz	x7, 59778 <mpfr_free_pool@@Base+0x1fcc>
   59508:	and	x12, x12, #0xc00000
   5950c:	mov	x5, #0x0                   	// #0
   59510:	cmp	x12, #0x800, lsl #12
   59514:	mov	x1, #0x0                   	// #0
   59518:	cset	w8, eq  // eq = none
   5951c:	b	591f8 <mpfr_free_pool@@Base+0x1a4c>
   59520:	mov	x1, #0x7fff                	// #32767
   59524:	neg	w0, w0
   59528:	orr	x3, x3, #0x8000000000000
   5952c:	cmp	x13, x1
   59530:	b.eq	5910c <mpfr_free_pool@@Base+0x1960>  // b.none
   59534:	cmp	w0, #0x74
   59538:	b.gt	595f0 <mpfr_free_pool@@Base+0x1e44>
   5953c:	cmp	w0, #0x3f
   59540:	b.gt	59790 <mpfr_free_pool@@Base+0x1fe4>
   59544:	mov	w1, #0x40                  	// #64
   59548:	sub	w1, w1, w0
   5954c:	lsr	x5, x6, x0
   59550:	lsl	x6, x6, x1
   59554:	cmp	x6, #0x0
   59558:	lsl	x6, x3, x1
   5955c:	cset	x1, ne  // ne = any
   59560:	orr	x6, x6, x5
   59564:	lsr	x0, x3, x0
   59568:	orr	x6, x6, x1
   5956c:	sub	x2, x2, x0
   59570:	b	595fc <mpfr_free_pool@@Base+0x1e50>
   59574:	orr	x2, x2, x10
   59578:	cmp	x2, #0x0
   5957c:	cset	x0, ne  // ne = any
   59580:	adds	x6, x0, x6
   59584:	cinc	x3, x3, cs  // cs = hs, nlast
   59588:	b	59270 <mpfr_free_pool@@Base+0x1ac4>
   5958c:	mov	w2, #0x80                  	// #128
   59590:	sub	w2, w2, w0
   59594:	cmp	w0, #0x40
   59598:	sub	w6, w1, #0x3f
   5959c:	lsl	x0, x3, x2
   595a0:	orr	x0, x5, x0
   595a4:	csel	x5, x0, x5, ne  // ne = any
   595a8:	lsr	x6, x3, x6
   595ac:	cmp	x5, #0x0
   595b0:	mov	x3, #0x0                   	// #0
   595b4:	cset	x0, ne  // ne = any
   595b8:	orr	x6, x0, x6
   595bc:	mov	x7, x6
   595c0:	b	59044 <mpfr_free_pool@@Base+0x1898>
   595c4:	mov	w5, #0x80                  	// #128
   595c8:	sub	w5, w5, w0
   595cc:	subs	w0, w0, #0x40
   595d0:	lsl	x5, x2, x5
   595d4:	orr	x5, x10, x5
   595d8:	csel	x10, x5, x10, ne  // ne = any
   595dc:	lsr	x2, x2, x0
   595e0:	cmp	x10, #0x0
   595e4:	cset	x4, ne  // ne = any
   595e8:	orr	x4, x4, x2
   595ec:	b	58fcc <mpfr_free_pool@@Base+0x1820>
   595f0:	orr	x3, x3, x6
   595f4:	cmp	x3, #0x0
   595f8:	cset	x6, ne  // ne = any
   595fc:	subs	x6, x10, x6
   59600:	mov	x1, x13
   59604:	sbc	x3, x2, xzr
   59608:	mov	x14, x4
   5960c:	b	58fd4 <mpfr_free_pool@@Base+0x1828>
   59610:	mov	w4, #0x80                  	// #128
   59614:	sub	w4, w4, w0
   59618:	subs	w0, w0, #0x40
   5961c:	lsl	x4, x2, x4
   59620:	orr	x4, x10, x4
   59624:	csel	x10, x4, x10, ne  // ne = any
   59628:	lsr	x2, x2, x0
   5962c:	cmp	x10, #0x0
   59630:	cset	x0, ne  // ne = any
   59634:	orr	x0, x0, x2
   59638:	b	59580 <mpfr_free_pool@@Base+0x1dd4>
   5963c:	mov	x0, #0x7fff                	// #32767
   59640:	cmp	x7, x0
   59644:	b.eq	59878 <mpfr_free_pool@@Base+0x20cc>  // b.none
   59648:	adds	x6, x6, x10
   5964c:	mov	x1, x7
   59650:	adc	x3, x2, x3
   59654:	mov	w4, #0x0                   	// #0
   59658:	ubfx	x0, x6, #1, #3
   5965c:	extr	x6, x3, x6, #1
   59660:	lsr	x3, x3, #1
   59664:	b	59054 <mpfr_free_pool@@Base+0x18a8>
   59668:	cmp	x10, x6
   5966c:	mov	w8, w4
   59670:	sbc	x5, x2, x3
   59674:	sub	x6, x10, x6
   59678:	mov	x14, x4
   5967c:	b	58fdc <mpfr_free_pool@@Base+0x1830>
   59680:	mov	x12, #0x7fff                	// #32767
   59684:	cmp	x1, x12
   59688:	b.eq	596b0 <mpfr_free_pool@@Base+0x1f04>  // b.none
   5968c:	cmp	x13, x12
   59690:	b.eq	598a4 <mpfr_free_pool@@Base+0x20f8>  // b.none
   59694:	cbnz	x11, 596c8 <mpfr_free_pool@@Base+0x1f1c>
   59698:	cbnz	x7, 598b4 <mpfr_free_pool@@Base+0x2108>
   5969c:	mov	x5, #0xffffffffffffffff    	// #-1
   596a0:	mov	x7, #0xffffffffffff        	// #281474976710655
   596a4:	mov	w0, #0x1                   	// #1
   596a8:	mov	w8, #0x0                   	// #0
   596ac:	b	5914c <mpfr_free_pool@@Base+0x19a0>
   596b0:	cbz	x11, 5989c <mpfr_free_pool@@Base+0x20f0>
   596b4:	lsr	x0, x3, #50
   596b8:	cmp	x13, x1
   596bc:	eor	x0, x0, #0x1
   596c0:	and	w0, w0, #0x1
   596c4:	b.eq	598a4 <mpfr_free_pool@@Base+0x20f8>  // b.none
   596c8:	cbz	x7, 5912c <mpfr_free_pool@@Base+0x1980>
   596cc:	bfi	x5, x3, #61, #3
   596d0:	lsr	x7, x3, #3
   596d4:	tbz	x3, #50, 596f0 <mpfr_free_pool@@Base+0x1f44>
   596d8:	lsr	x1, x2, #3
   596dc:	tbnz	x2, #50, 596f0 <mpfr_free_pool@@Base+0x1f44>
   596e0:	mov	x5, x9
   596e4:	mov	w8, w4
   596e8:	bfi	x5, x2, #61, #3
   596ec:	mov	x7, x1
   596f0:	extr	x7, x7, x5, #61
   596f4:	bfi	x5, x7, #61, #3
   596f8:	lsr	x7, x7, #3
   596fc:	b	59144 <mpfr_free_pool@@Base+0x1998>
   59700:	subs	x6, x6, x10
   59704:	sbc	x3, x3, x2
   59708:	b	58fd4 <mpfr_free_pool@@Base+0x1828>
   5970c:	cbz	x7, 59814 <mpfr_free_pool@@Base+0x2068>
   59710:	mov	x3, x2
   59714:	mov	x6, x10
   59718:	mov	w8, w4
   5971c:	mov	x14, x4
   59720:	mov	x1, #0x0                   	// #0
   59724:	mov	x2, #0x0                   	// #0
   59728:	b	5945c <mpfr_free_pool@@Base+0x1cb0>
   5972c:	ands	x2, x12, #0xc00000
   59730:	b.eq	597bc <mpfr_free_pool@@Base+0x2010>  // b.none
   59734:	cmp	x2, #0x400, lsl #12
   59738:	eor	w0, w8, #0x1
   5973c:	cset	w1, eq  // eq = none
   59740:	tst	w1, w0
   59744:	b.ne	59890 <mpfr_free_pool@@Base+0x20e4>  // b.any
   59748:	cmp	x2, #0x800, lsl #12
   5974c:	b.eq	598e4 <mpfr_free_pool@@Base+0x2138>  // b.none
   59750:	cmp	x2, #0x400, lsl #12
   59754:	mov	w0, #0x14                  	// #20
   59758:	b.ne	592a8 <mpfr_free_pool@@Base+0x1afc>  // b.any
   5975c:	mov	x3, #0xffffffffffffffff    	// #-1
   59760:	mov	x1, #0x7ffe                	// #32766
   59764:	mov	x6, x3
   59768:	mov	w4, #0x0                   	// #0
   5976c:	mov	w0, #0x14                  	// #20
   59770:	cbnz	x14, 5938c <mpfr_free_pool@@Base+0x1be0>
   59774:	b	59384 <mpfr_free_pool@@Base+0x1bd8>
   59778:	mov	x6, x9
   5977c:	b	58fdc <mpfr_free_pool@@Base+0x1830>
   59780:	orr	x3, x3, x6
   59784:	cmp	x3, #0x0
   59788:	cset	x6, ne  // ne = any
   5978c:	b	5936c <mpfr_free_pool@@Base+0x1bc0>
   59790:	mov	w1, #0x80                  	// #128
   59794:	sub	w1, w1, w0
   59798:	subs	w0, w0, #0x40
   5979c:	lsl	x1, x3, x1
   597a0:	orr	x1, x6, x1
   597a4:	csel	x6, x1, x6, ne  // ne = any
   597a8:	lsr	x3, x3, x0
   597ac:	cmp	x6, #0x0
   597b0:	cset	x6, ne  // ne = any
   597b4:	orr	x6, x6, x3
   597b8:	b	595fc <mpfr_free_pool@@Base+0x1e50>
   597bc:	mov	w0, #0x14                  	// #20
   597c0:	b	592ec <mpfr_free_pool@@Base+0x1b40>
   597c4:	mov	x7, #0x7fff                	// #32767
   597c8:	cmp	x1, x7
   597cc:	b.eq	59900 <mpfr_free_pool@@Base+0x2154>  // b.none
   597d0:	cmp	x13, x7
   597d4:	b.eq	59964 <mpfr_free_pool@@Base+0x21b8>  // b.none
   597d8:	cbnz	x11, 59918 <mpfr_free_pool@@Base+0x216c>
   597dc:	mov	x3, x2
   597e0:	mov	x6, x10
   597e4:	mov	x1, #0x7fff                	// #32767
   597e8:	b	59130 <mpfr_free_pool@@Base+0x1984>
   597ec:	orr	x0, x2, x10
   597f0:	cbz	x0, 59440 <mpfr_free_pool@@Base+0x1c94>
   597f4:	b	59118 <mpfr_free_pool@@Base+0x196c>
   597f8:	mov	x0, #0x7fff                	// #32767
   597fc:	cmp	x13, x0
   59800:	b.eq	597ec <mpfr_free_pool@@Base+0x2040>  // b.none
   59804:	mov	x3, x2
   59808:	mov	x6, x10
   5980c:	mov	x1, x13
   59810:	b	591d8 <mpfr_free_pool@@Base+0x1a2c>
   59814:	and	x12, x12, #0xc00000
   59818:	mov	x5, #0x0                   	// #0
   5981c:	cmp	x12, #0x800, lsl #12
   59820:	cset	w8, eq  // eq = none
   59824:	b	591f8 <mpfr_free_pool@@Base+0x1a4c>
   59828:	mov	x3, x2
   5982c:	mov	x6, x10
   59830:	b	59044 <mpfr_free_pool@@Base+0x1898>
   59834:	mov	w1, #0x80                  	// #128
   59838:	sub	w1, w1, w0
   5983c:	subs	w0, w0, #0x40
   59840:	lsl	x1, x3, x1
   59844:	orr	x1, x6, x1
   59848:	csel	x6, x1, x6, ne  // ne = any
   5984c:	lsr	x3, x3, x0
   59850:	cmp	x6, #0x0
   59854:	cset	x6, ne  // ne = any
   59858:	orr	x6, x6, x3
   5985c:	b	5936c <mpfr_free_pool@@Base+0x1bc0>
   59860:	cmp	x10, x6
   59864:	mov	x1, x13
   59868:	sbc	x3, x2, x3
   5986c:	sub	x6, x10, x6
   59870:	mov	x14, x4
   59874:	b	58fd4 <mpfr_free_pool@@Base+0x1828>
   59878:	ands	x2, x12, #0xc00000
   5987c:	b.eq	597bc <mpfr_free_pool@@Base+0x2010>  // b.none
   59880:	cmp	x2, #0x400, lsl #12
   59884:	eor	w0, w8, #0x1
   59888:	csel	w0, w0, wzr, eq  // eq = none
   5988c:	cbz	w0, 59748 <mpfr_free_pool@@Base+0x1f9c>
   59890:	mov	w0, #0x14                  	// #20
   59894:	mov	x11, #0x0                   	// #0
   59898:	b	592ec <mpfr_free_pool@@Base+0x1b40>
   5989c:	cmp	x13, x1
   598a0:	b.ne	59698 <mpfr_free_pool@@Base+0x1eec>  // b.any
   598a4:	cbz	x7, 59958 <mpfr_free_pool@@Base+0x21ac>
   598a8:	tst	x2, #0x4000000000000
   598ac:	csinc	w0, w0, wzr, ne  // ne = any
   598b0:	cbnz	x11, 596cc <mpfr_free_pool@@Base+0x1f20>
   598b4:	mov	w8, w4
   598b8:	mov	x3, x2
   598bc:	mov	x6, x10
   598c0:	mov	x1, #0x7fff                	// #32767
   598c4:	b	59130 <mpfr_free_pool@@Base+0x1984>
   598c8:	orr	x7, x9, x5
   598cc:	cbz	x7, 59814 <mpfr_free_pool@@Base+0x2068>
   598d0:	mov	x3, x5
   598d4:	and	x0, x9, #0x7
   598d8:	mov	x6, x9
   598dc:	mov	w4, #0x1                   	// #1
   598e0:	b	59054 <mpfr_free_pool@@Base+0x18a8>
   598e4:	cbnz	x11, 59978 <mpfr_free_pool@@Base+0x21cc>
   598e8:	mov	x3, #0xffffffffffffffff    	// #-1
   598ec:	mov	w8, #0x0                   	// #0
   598f0:	mov	x6, x3
   598f4:	mov	x1, #0x7ffe                	// #32766
   598f8:	mov	w0, #0x14                  	// #20
   598fc:	b	59084 <mpfr_free_pool@@Base+0x18d8>
   59900:	cbz	x11, 59984 <mpfr_free_pool@@Base+0x21d8>
   59904:	lsr	x0, x3, #50
   59908:	cmp	x13, x1
   5990c:	eor	x0, x0, #0x1
   59910:	and	w0, w0, #0x1
   59914:	b.eq	599a4 <mpfr_free_pool@@Base+0x21f8>  // b.none
   59918:	orr	x10, x2, x10
   5991c:	cbz	x10, 5912c <mpfr_free_pool@@Base+0x1980>
   59920:	bfi	x5, x3, #61, #3
   59924:	lsr	x7, x3, #3
   59928:	tbz	x3, #50, 596f0 <mpfr_free_pool@@Base+0x1f44>
   5992c:	lsr	x1, x2, #3
   59930:	tbnz	x2, #50, 596f0 <mpfr_free_pool@@Base+0x1f44>
   59934:	and	x5, x9, #0x1fffffffffffffff
   59938:	mov	w8, w4
   5993c:	orr	x5, x5, x2, lsl #61
   59940:	mov	x7, x1
   59944:	b	596f0 <mpfr_free_pool@@Base+0x1f44>
   59948:	adds	x6, x6, x10
   5994c:	mov	x1, x13
   59950:	adc	x3, x2, x3
   59954:	b	59270 <mpfr_free_pool@@Base+0x1ac4>
   59958:	cbz	x11, 5969c <mpfr_free_pool@@Base+0x1ef0>
   5995c:	mov	x1, #0x7fff                	// #32767
   59960:	b	59130 <mpfr_free_pool@@Base+0x1984>
   59964:	orr	x1, x2, x10
   59968:	cbnz	x1, 59994 <mpfr_free_pool@@Base+0x21e8>
   5996c:	cbz	x11, 59440 <mpfr_free_pool@@Base+0x1c94>
   59970:	mov	x1, #0x7fff                	// #32767
   59974:	b	59130 <mpfr_free_pool@@Base+0x1984>
   59978:	mov	w0, #0x14                  	// #20
   5997c:	mov	x11, #0x1                   	// #1
   59980:	b	592ec <mpfr_free_pool@@Base+0x1b40>
   59984:	cmp	x13, x1
   59988:	b.ne	597dc <mpfr_free_pool@@Base+0x2030>  // b.any
   5998c:	orr	x1, x2, x10
   59990:	cbz	x1, 59440 <mpfr_free_pool@@Base+0x1c94>
   59994:	tst	x2, #0x4000000000000
   59998:	csinc	w0, w0, wzr, ne  // ne = any
   5999c:	cbnz	x11, 59920 <mpfr_free_pool@@Base+0x2174>
   599a0:	b	597dc <mpfr_free_pool@@Base+0x2030>
   599a4:	orr	x1, x2, x10
   599a8:	cbnz	x1, 59994 <mpfr_free_pool@@Base+0x21e8>
   599ac:	mov	x1, #0x7fff                	// #32767
   599b0:	b	59130 <mpfr_free_pool@@Base+0x1984>
   599b4:	mov	x5, #0x0                   	// #0
   599b8:	mov	w1, #0x7fff                	// #32767
   599bc:	mov	x7, #0x0                   	// #0
   599c0:	b	590a0 <mpfr_free_pool@@Base+0x18f4>
   599c4:	nop
   599c8:	mrs	x0, fpcr
   599cc:	fmov	x0, d0
   599d0:	ubfx	x1, x0, #52, #11
   599d4:	lsr	x4, x0, #63
   599d8:	add	x2, x1, #0x1
   599dc:	and	w4, w4, #0xff
   599e0:	tst	x2, #0x7fe
   599e4:	ubfx	x0, x0, #0, #52
   599e8:	b.eq	59a1c <mpfr_free_pool@@Base+0x2270>  // b.none
   599ec:	lsr	x5, x0, #4
   599f0:	mov	x3, #0x0                   	// #0
   599f4:	and	x5, x5, #0xffffffffffff
   599f8:	mov	w2, #0x3c00                	// #15360
   599fc:	add	w1, w1, w2
   59a00:	lsl	x0, x0, #60
   59a04:	bfxil	x3, x5, #0, #48
   59a08:	fmov	d0, x0
   59a0c:	bfi	x3, x1, #48, #15
   59a10:	bfi	x3, x4, #63, #1
   59a14:	fmov	v0.d[1], x3
   59a18:	ret
   59a1c:	cbnz	x1, 59a70 <mpfr_free_pool@@Base+0x22c4>
   59a20:	cbz	x0, 59abc <mpfr_free_pool@@Base+0x2310>
   59a24:	clz	x2, x0
   59a28:	cmp	w2, #0xe
   59a2c:	b.gt	59b08 <mpfr_free_pool@@Base+0x235c>
   59a30:	add	w1, w2, #0x31
   59a34:	mov	w5, #0xf                   	// #15
   59a38:	sub	w5, w5, w2
   59a3c:	lsr	x5, x0, x5
   59a40:	lsl	x0, x0, x1
   59a44:	and	x5, x5, #0xffffffffffff
   59a48:	mov	w1, #0x3c0c                	// #15372
   59a4c:	mov	x3, #0x0                   	// #0
   59a50:	sub	w1, w1, w2
   59a54:	and	w1, w1, #0x7fff
   59a58:	bfxil	x3, x5, #0, #48
   59a5c:	fmov	d0, x0
   59a60:	bfi	x3, x1, #48, #15
   59a64:	bfi	x3, x4, #63, #1
   59a68:	fmov	v0.d[1], x3
   59a6c:	ret
   59a70:	cbz	x0, 59ae0 <mpfr_free_pool@@Base+0x2334>
   59a74:	lsr	x1, x0, #4
   59a78:	mov	x3, #0x0                   	// #0
   59a7c:	orr	x1, x1, #0x800000000000
   59a80:	lsl	x2, x0, #60
   59a84:	fmov	d0, x2
   59a88:	bfxil	x3, x1, #0, #48
   59a8c:	orr	x3, x3, #0x7fff000000000000
   59a90:	bfi	x3, x4, #63, #1
   59a94:	fmov	v0.d[1], x3
   59a98:	tbnz	x0, #51, 59b04 <mpfr_free_pool@@Base+0x2358>
   59a9c:	stp	x29, x30, [sp, #-32]!
   59aa0:	mov	w0, #0x1                   	// #1
   59aa4:	mov	x29, sp
   59aa8:	str	q0, [sp, #16]
   59aac:	bl	59e28 <mpfr_free_pool@@Base+0x267c>
   59ab0:	ldr	q0, [sp, #16]
   59ab4:	ldp	x29, x30, [sp], #32
   59ab8:	ret
   59abc:	mov	x5, #0x0                   	// #0
   59ac0:	mov	x3, #0x0                   	// #0
   59ac4:	bfxil	x3, x5, #0, #48
   59ac8:	mov	w1, #0x0                   	// #0
   59acc:	fmov	d0, x0
   59ad0:	bfi	x3, x1, #48, #15
   59ad4:	bfi	x3, x4, #63, #1
   59ad8:	fmov	v0.d[1], x3
   59adc:	ret
   59ae0:	mov	x5, #0x0                   	// #0
   59ae4:	mov	x3, #0x0                   	// #0
   59ae8:	bfxil	x3, x5, #0, #48
   59aec:	mov	w1, #0x7fff                	// #32767
   59af0:	fmov	d0, x0
   59af4:	bfi	x3, x1, #48, #15
   59af8:	bfi	x3, x4, #63, #1
   59afc:	fmov	v0.d[1], x3
   59b00:	ret
   59b04:	ret
   59b08:	sub	w5, w2, #0xf
   59b0c:	lsl	x5, x0, x5
   59b10:	mov	x0, #0x0                   	// #0
   59b14:	b	59a44 <mpfr_free_pool@@Base+0x2298>
   59b18:	stp	x29, x30, [sp, #-48]!
   59b1c:	mov	x29, sp
   59b20:	str	x19, [sp, #16]
   59b24:	str	q0, [sp, #32]
   59b28:	ldp	x3, x0, [sp, #32]
   59b2c:	mrs	x6, fpcr
   59b30:	ubfx	x2, x0, #48, #15
   59b34:	lsr	x4, x0, #63
   59b38:	add	x1, x2, #0x1
   59b3c:	ubfiz	x0, x0, #3, #48
   59b40:	tst	x1, #0x7ffe
   59b44:	and	w4, w4, #0xff
   59b48:	orr	x0, x0, x3, lsr #61
   59b4c:	lsl	x5, x3, #3
   59b50:	b.eq	59bd0 <mpfr_free_pool@@Base+0x2424>  // b.none
   59b54:	mov	x1, #0xffffffffffffc400    	// #-15360
   59b58:	add	x2, x2, x1
   59b5c:	cmp	x2, #0x7fe
   59b60:	b.le	59c14 <mpfr_free_pool@@Base+0x2468>
   59b64:	ands	x0, x6, #0xc00000
   59b68:	b.eq	59cac <mpfr_free_pool@@Base+0x2500>  // b.none
   59b6c:	cmp	x0, #0x400, lsl #12
   59b70:	b.eq	59de0 <mpfr_free_pool@@Base+0x2634>  // b.none
   59b74:	cmp	x0, #0x800, lsl #12
   59b78:	csel	w7, w4, wzr, eq  // eq = none
   59b7c:	cbnz	w7, 59cac <mpfr_free_pool@@Base+0x2500>
   59b80:	mov	x1, #0xffffffffffffffff    	// #-1
   59b84:	mov	x2, #0x7fe                 	// #2046
   59b88:	mov	w0, #0x14                  	// #20
   59b8c:	b.ne	59c58 <mpfr_free_pool@@Base+0x24ac>  // b.any
   59b90:	cmp	w4, #0x0
   59b94:	add	x3, x1, #0x8
   59b98:	csel	x1, x3, x1, ne  // ne = any
   59b9c:	and	x3, x1, #0x80000000000000
   59ba0:	cbnz	w7, 59c60 <mpfr_free_pool@@Base+0x24b4>
   59ba4:	cbnz	x3, 59c68 <mpfr_free_pool@@Base+0x24bc>
   59ba8:	lsr	x1, x1, #3
   59bac:	and	w3, w2, #0x7ff
   59bb0:	and	x4, x4, #0xff
   59bb4:	bfi	x1, x3, #52, #12
   59bb8:	orr	x19, x1, x4, lsl #63
   59bbc:	bl	59e28 <mpfr_free_pool@@Base+0x267c>
   59bc0:	fmov	d0, x19
   59bc4:	ldr	x19, [sp, #16]
   59bc8:	ldp	x29, x30, [sp], #48
   59bcc:	ret
   59bd0:	orr	x1, x0, x5
   59bd4:	cbnz	x2, 59c08 <mpfr_free_pool@@Base+0x245c>
   59bd8:	cbnz	x1, 59c84 <mpfr_free_pool@@Base+0x24d8>
   59bdc:	mov	w0, #0x0                   	// #0
   59be0:	and	w2, w2, #0x7ff
   59be4:	mov	x1, #0x0                   	// #0
   59be8:	and	x4, x4, #0xff
   59bec:	bfi	x1, x2, #52, #12
   59bf0:	orr	x19, x1, x4, lsl #63
   59bf4:	cbnz	w0, 59bbc <mpfr_free_pool@@Base+0x2410>
   59bf8:	fmov	d0, x19
   59bfc:	ldr	x19, [sp, #16]
   59c00:	ldp	x29, x30, [sp], #48
   59c04:	ret
   59c08:	cbnz	x1, 59cb8 <mpfr_free_pool@@Base+0x250c>
   59c0c:	mov	x2, #0x7ff                 	// #2047
   59c10:	b	59bdc <mpfr_free_pool@@Base+0x2430>
   59c14:	cmp	x2, #0x0
   59c18:	b.le	59ce0 <mpfr_free_pool@@Base+0x2534>
   59c1c:	cmp	xzr, x3, lsl #7
   59c20:	mov	w7, #0x0                   	// #0
   59c24:	cset	x1, ne  // ne = any
   59c28:	orr	x5, x1, x5, lsr #60
   59c2c:	orr	x1, x5, x0, lsl #4
   59c30:	mov	w0, #0x0                   	// #0
   59c34:	tst	x5, #0x7
   59c38:	b.eq	59d98 <mpfr_free_pool@@Base+0x25ec>  // b.none
   59c3c:	and	x3, x6, #0xc00000
   59c40:	cmp	x3, #0x400, lsl #12
   59c44:	b.eq	59c9c <mpfr_free_pool@@Base+0x24f0>  // b.none
   59c48:	cmp	x3, #0x800, lsl #12
   59c4c:	mov	w0, #0x10                  	// #16
   59c50:	b.eq	59b90 <mpfr_free_pool@@Base+0x23e4>  // b.none
   59c54:	cbz	x3, 59da4 <mpfr_free_pool@@Base+0x25f8>
   59c58:	and	x3, x1, #0x80000000000000
   59c5c:	cbz	w7, 59c64 <mpfr_free_pool@@Base+0x24b8>
   59c60:	orr	w0, w0, #0x8
   59c64:	cbz	x3, 59d98 <mpfr_free_pool@@Base+0x25ec>
   59c68:	cmp	x2, #0x7fe
   59c6c:	add	x2, x2, #0x1
   59c70:	b.eq	59d40 <mpfr_free_pool@@Base+0x2594>  // b.none
   59c74:	mov	x3, #0x1fefffffffffffff    	// #2301339409586323455
   59c78:	and	w2, w2, #0x7ff
   59c7c:	and	x1, x3, x1, lsr #3
   59c80:	b	59be8 <mpfr_free_pool@@Base+0x243c>
   59c84:	and	x3, x6, #0xc00000
   59c88:	mov	w7, #0x1                   	// #1
   59c8c:	cmp	x3, #0x400, lsl #12
   59c90:	mov	x2, #0x0                   	// #0
   59c94:	mov	x1, #0x1                   	// #1
   59c98:	b.ne	59c48 <mpfr_free_pool@@Base+0x249c>  // b.any
   59c9c:	cbnz	w4, 59ca4 <mpfr_free_pool@@Base+0x24f8>
   59ca0:	add	x1, x1, #0x8
   59ca4:	mov	w0, #0x10                  	// #16
   59ca8:	b	59b9c <mpfr_free_pool@@Base+0x23f0>
   59cac:	mov	x2, #0x7ff                 	// #2047
   59cb0:	mov	w0, #0x14                  	// #20
   59cb4:	b	59be0 <mpfr_free_pool@@Base+0x2434>
   59cb8:	mov	x3, #0x7fff                	// #32767
   59cbc:	extr	x1, x0, x5, #60
   59cc0:	lsr	x0, x0, #50
   59cc4:	cmp	x2, x3
   59cc8:	lsr	x1, x1, #3
   59ccc:	eor	w0, w0, #0x1
   59cd0:	orr	x1, x1, #0x8000000000000
   59cd4:	csel	w0, w0, wzr, eq  // eq = none
   59cd8:	mov	w2, #0x7ff                 	// #2047
   59cdc:	b	59be8 <mpfr_free_pool@@Base+0x243c>
   59ce0:	cmn	x2, #0x34
   59ce4:	b.lt	59c84 <mpfr_free_pool@@Base+0x24d8>  // b.tstop
   59ce8:	mov	x3, #0x3d                  	// #61
   59cec:	sub	x7, x3, x2
   59cf0:	orr	x0, x0, #0x8000000000000
   59cf4:	cmp	x7, #0x3f
   59cf8:	b.le	59db8 <mpfr_free_pool@@Base+0x260c>
   59cfc:	add	w1, w2, #0x43
   59d00:	cmp	x7, #0x40
   59d04:	mov	w3, #0xfffffffd            	// #-3
   59d08:	sub	w2, w3, w2
   59d0c:	lsl	x1, x0, x1
   59d10:	orr	x1, x5, x1
   59d14:	csel	x5, x1, x5, ne  // ne = any
   59d18:	lsr	x0, x0, x2
   59d1c:	cmp	x5, #0x0
   59d20:	cset	x1, ne  // ne = any
   59d24:	orr	x1, x1, x0
   59d28:	cmp	x1, #0x0
   59d2c:	cset	w7, ne  // ne = any
   59d30:	tst	x1, #0x7
   59d34:	b.eq	59d7c <mpfr_free_pool@@Base+0x25d0>  // b.none
   59d38:	mov	x2, #0x0                   	// #0
   59d3c:	b	59c3c <mpfr_free_pool@@Base+0x2490>
   59d40:	mov	w3, w2
   59d44:	ands	x1, x6, #0xc00000
   59d48:	b.eq	59d70 <mpfr_free_pool@@Base+0x25c4>  // b.none
   59d4c:	cmp	x1, #0x400, lsl #12
   59d50:	b.eq	59df8 <mpfr_free_pool@@Base+0x264c>  // b.none
   59d54:	cmp	x1, #0x800, lsl #12
   59d58:	mov	w5, #0x7fe                 	// #2046
   59d5c:	csel	w1, w4, wzr, eq  // eq = none
   59d60:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   59d64:	cmp	w1, #0x0
   59d68:	csel	w3, w3, w5, ne  // ne = any
   59d6c:	csel	x1, xzr, x2, ne  // ne = any
   59d70:	mov	w2, #0x14                  	// #20
   59d74:	orr	w0, w0, w2
   59d78:	b	59bb0 <mpfr_free_pool@@Base+0x2404>
   59d7c:	and	x3, x1, #0x80000000000000
   59d80:	cbnz	x1, 59e10 <mpfr_free_pool@@Base+0x2664>
   59d84:	nop
   59d88:	mov	w0, #0x0                   	// #0
   59d8c:	mov	x2, #0x1                   	// #1
   59d90:	cbnz	x3, 59c74 <mpfr_free_pool@@Base+0x24c8>
   59d94:	mov	x2, #0x0                   	// #0
   59d98:	lsr	x1, x1, #3
   59d9c:	and	w2, w2, #0x7ff
   59da0:	b	59be8 <mpfr_free_pool@@Base+0x243c>
   59da4:	and	x3, x1, #0xf
   59da8:	cmp	x3, #0x4
   59dac:	add	x3, x1, #0x4
   59db0:	csel	x1, x3, x1, ne  // ne = any
   59db4:	b	59b9c <mpfr_free_pool@@Base+0x23f0>
   59db8:	add	w1, w2, #0x3
   59dbc:	sub	w2, w3, w2
   59dc0:	lsl	x3, x5, x1
   59dc4:	cmp	x3, #0x0
   59dc8:	cset	x3, ne  // ne = any
   59dcc:	lsr	x2, x5, x2
   59dd0:	orr	x2, x2, x3
   59dd4:	lsl	x0, x0, x1
   59dd8:	orr	x1, x0, x2
   59ddc:	b	59d28 <mpfr_free_pool@@Base+0x257c>
   59de0:	cbz	w4, 59cac <mpfr_free_pool@@Base+0x2500>
   59de4:	mov	x1, #0xffffffffffffffff    	// #-1
   59de8:	mov	x2, #0x7fe                 	// #2046
   59dec:	mov	w7, #0x0                   	// #0
   59df0:	mov	w0, #0x14                  	// #20
   59df4:	b	59b9c <mpfr_free_pool@@Base+0x23f0>
   59df8:	cmp	w4, #0x0
   59dfc:	mov	w1, #0x7fe                 	// #2046
   59e00:	csel	w3, w2, w1, eq  // eq = none
   59e04:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   59e08:	csel	x1, xzr, x2, eq  // eq = none
   59e0c:	b	59d70 <mpfr_free_pool@@Base+0x25c4>
   59e10:	tbz	w6, #11, 59d88 <mpfr_free_pool@@Base+0x25dc>
   59e14:	mov	w0, #0x0                   	// #0
   59e18:	mov	x2, #0x0                   	// #0
   59e1c:	orr	w0, w0, #0x8
   59e20:	b	59c64 <mpfr_free_pool@@Base+0x24b8>
   59e24:	nop
   59e28:	tbz	w0, #0, 59e38 <mpfr_free_pool@@Base+0x268c>
   59e2c:	movi	v1.2s, #0x0
   59e30:	fdiv	s0, s1, s1
   59e34:	mrs	x1, fpsr
   59e38:	tbz	w0, #1, 59e4c <mpfr_free_pool@@Base+0x26a0>
   59e3c:	fmov	s1, #1.000000000000000000e+00
   59e40:	movi	v2.2s, #0x0
   59e44:	fdiv	s0, s1, s2
   59e48:	mrs	x1, fpsr
   59e4c:	tbz	w0, #2, 59e6c <mpfr_free_pool@@Base+0x26c0>
   59e50:	mov	w2, #0xc5ae                	// #50606
   59e54:	mov	w1, #0x7f7fffff            	// #2139095039
   59e58:	movk	w2, #0x749d, lsl #16
   59e5c:	fmov	s1, w1
   59e60:	fmov	s2, w2
   59e64:	fadd	s0, s1, s2
   59e68:	mrs	x1, fpsr
   59e6c:	tbz	w0, #3, 59e7c <mpfr_free_pool@@Base+0x26d0>
   59e70:	movi	v1.2s, #0x80, lsl #16
   59e74:	fmul	s0, s1, s1
   59e78:	mrs	x1, fpsr
   59e7c:	tbz	w0, #4, 59e94 <mpfr_free_pool@@Base+0x26e8>
   59e80:	mov	w0, #0x7f7fffff            	// #2139095039
   59e84:	fmov	s2, #1.000000000000000000e+00
   59e88:	fmov	s1, w0
   59e8c:	fsub	s0, s1, s2
   59e90:	mrs	x0, fpsr
   59e94:	ret

Disassembly of section .fini:

0000000000059e98 <.fini>:
   59e98:	stp	x29, x30, [sp, #-16]!
   59e9c:	mov	x29, sp
   59ea0:	ldp	x29, x30, [sp], #16
   59ea4:	ret
