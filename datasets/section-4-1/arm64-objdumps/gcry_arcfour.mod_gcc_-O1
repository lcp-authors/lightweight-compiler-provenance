
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_arcfour.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1a0>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w4, [x0]
   c:	ldr	w5, [x0, #4]
  10:	cbz	w3, 6c <grub_mod_init-0x134>
  14:	add	x6, x0, #0x8
  18:	sub	w9, w3, #0x1
  1c:	mov	w9, w9
  20:	mov	x7, #0x0                   	// #0
  24:	add	w4, w4, #0x1
  28:	and	w4, w4, #0xff
  2c:	ldrb	w8, [x6, w4, sxtw]
  30:	add	w5, w8, w5
  34:	and	w5, w5, #0xff
  38:	ldrb	w3, [x6, w5, sxtw]
  3c:	strb	w3, [x6, w4, sxtw]
  40:	strb	w8, [x6, w5, sxtw]
  44:	ldrb	w3, [x6, w4, sxtw]
  48:	add	w3, w3, w8
  4c:	and	w3, w3, #0xff
  50:	ldrb	w3, [x6, w3, uxtw]
  54:	ldrb	w8, [x2, x7]
  58:	eor	w3, w3, w8
  5c:	strb	w3, [x1, x7]
  60:	cmp	x7, x9
  64:	add	x7, x7, #0x1
  68:	b.ne	24 <grub_mod_init-0x17c>  // b.any
  6c:	str	w4, [x0]
  70:	str	w5, [x0, #4]
  74:	mov	w0, #0x40                  	// #64
  78:	bl	0 <_gcry_burn_stack>
  7c:	ldp	x29, x30, [sp], #16
  80:	ret
  84:	stp	x29, x30, [sp, #-288]!
  88:	mov	x29, sp
  8c:	str	x19, [sp, #16]
  90:	adrp	x3, 0 <grub_mod_init-0x1a0>
  94:	ldr	x3, [x3]
  98:	ldr	w3, [x3]
  9c:	cbnz	w3, 180 <grub_mod_init-0x20>
  a0:	adrp	x3, 0 <grub_mod_init-0x1a0>
  a4:	ldr	x3, [x3]
  a8:	mov	w4, #0x1                   	// #1
  ac:	str	w4, [x3]
  b0:	str	xzr, [x3, #8]
  b4:	mov	w19, #0xd                   	// #13
  b8:	cmp	w2, #0x4
  bc:	b.ls	168 <grub_mod_init-0x38>  // b.plast
  c0:	str	wzr, [x0, #4]
  c4:	mov	x4, x0
  c8:	str	wzr, [x4], #8
  cc:	mov	x3, #0x0                   	// #0
  d0:	strb	w3, [x4, x3]
  d4:	add	x3, x3, #0x1
  d8:	cmp	x3, #0x100
  dc:	b.ne	d0 <grub_mod_init-0xd0>  // b.any
  e0:	add	x5, sp, #0x20
  e4:	mov	w3, #0x0                   	// #0
  e8:	udiv	w4, w3, w2
  ec:	msub	w4, w4, w2, w3
  f0:	ldrb	w4, [x1, w4, uxtw]
  f4:	strb	w4, [x5], #1
  f8:	add	w3, w3, #0x1
  fc:	cmp	w3, #0x100
 100:	b.ne	e8 <grub_mod_init-0xb8>  // b.any
 104:	mov	x2, #0x1                   	// #1
 108:	mov	w1, #0x0                   	// #0
 10c:	add	x5, x0, #0x7
 110:	ldrb	w4, [x5, x2]
 114:	add	w1, w4, w1
 118:	add	x3, sp, #0x20
 11c:	add	x3, x2, x3
 120:	ldurb	w3, [x3, #-1]
 124:	add	w1, w1, w3
 128:	negs	w3, w1
 12c:	and	w1, w1, #0xff
 130:	and	w3, w3, #0xff
 134:	csneg	w1, w1, w3, mi  // mi = first
 138:	add	x3, x0, w1, sxtw
 13c:	ldrb	w6, [x3, #8]
 140:	strb	w6, [x5, x2]
 144:	strb	w4, [x3, #8]
 148:	add	x2, x2, #0x1
 14c:	cmp	x2, #0x101
 150:	b.ne	110 <grub_mod_init-0x90>  // b.any
 154:	mov	x2, #0x100                 	// #256
 158:	mov	w1, #0x0                   	// #0
 15c:	add	x0, sp, #0x20
 160:	bl	0 <grub_memset>
 164:	mov	w19, #0x0                   	// #0
 168:	mov	w0, #0x12c                 	// #300
 16c:	bl	0 <_gcry_burn_stack>
 170:	mov	w0, w19
 174:	ldr	x19, [sp, #16]
 178:	ldp	x29, x30, [sp], #288
 17c:	ret
 180:	adrp	x3, 0 <grub_mod_init-0x1a0>
 184:	ldr	x3, [x3]
 188:	ldr	x3, [x3, #8]
 18c:	mov	w19, #0x1c                  	// #28
 190:	cbnz	x3, 168 <grub_mod_init-0x38>
 194:	b	b4 <grub_mod_init-0xec>
	...

00000000000001a0 <grub_mod_init>:
 1a0:	stp	x29, x30, [sp, #-16]!
 1a4:	mov	x29, sp
 1a8:	adrp	x0, 0 <grub_mod_init-0x1a0>
 1ac:	ldr	x0, [x0]
 1b0:	bl	0 <grub_cipher_register>
 1b4:	ldp	x29, x30, [sp], #16
 1b8:	ret
 1bc:	nop
	...

00000000000001c8 <grub_mod_fini>:
 1c8:	stp	x29, x30, [sp, #-16]!
 1cc:	mov	x29, sp
 1d0:	adrp	x0, 0 <grub_mod_init-0x1a0>
 1d4:	ldr	x0, [x0]
 1d8:	bl	0 <grub_cipher_unregister>
 1dc:	ldp	x29, x30, [sp], #16
 1e0:	ret
 1e4:	nop
	...
