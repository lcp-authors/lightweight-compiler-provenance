
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-rfkill_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401108 <_init>:
  401108:	stp	x29, x30, [sp, #-16]!
  40110c:	mov	x29, sp
  401110:	bl	401410 <call_weak_fn>
  401114:	ldp	x29, x30, [sp], #16
  401118:	ret

Disassembly of section .plt:

0000000000401120 <__libc_start_main@plt-0x20>:
  401120:	stp	x16, x30, [sp, #-16]!
  401124:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401128:	ldr	x17, [x16, #3768]
  40112c:	add	x16, x16, #0xeb8
  401130:	br	x17
  401134:	nop
  401138:	nop
  40113c:	nop

0000000000401140 <__libc_start_main@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401144:	ldr	x17, [x16, #3776]
  401148:	add	x16, x16, #0xec0
  40114c:	br	x17

0000000000401150 <abort@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401154:	ldr	x17, [x16, #3784]
  401158:	add	x16, x16, #0xec8
  40115c:	br	x17

0000000000401160 <__gmon_start__@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401164:	ldr	x17, [x16, #3792]
  401168:	add	x16, x16, #0xed0
  40116c:	br	x17

0000000000401170 <ask_password_agent_close@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401174:	ldr	x17, [x16, #3800]
  401178:	add	x16, x16, #0xed8
  40117c:	br	x17

0000000000401180 <polkit_agent_close@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401184:	ldr	x17, [x16, #3808]
  401188:	add	x16, x16, #0xee0
  40118c:	br	x17

0000000000401190 <pager_close@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401194:	ldr	x17, [x16, #3816]
  401198:	add	x16, x16, #0xee8
  40119c:	br	x17

00000000004011a0 <mac_selinux_finish@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4011a4:	ldr	x17, [x16, #3824]
  4011a8:	add	x16, x16, #0xef0
  4011ac:	br	x17

00000000004011b0 <log_get_max_level_realm@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4011b4:	ldr	x17, [x16, #3832]
  4011b8:	add	x16, x16, #0xef8
  4011bc:	br	x17

00000000004011c0 <log_internal_realm@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4011c4:	ldr	x17, [x16, #3840]
  4011c8:	add	x16, x16, #0xf00
  4011cc:	br	x17

00000000004011d0 <abs@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4011d4:	ldr	x17, [x16, #3848]
  4011d8:	add	x16, x16, #0xf08
  4011dc:	br	x17

00000000004011e0 <log_setup_service@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4011e4:	ldr	x17, [x16, #3856]
  4011e8:	add	x16, x16, #0xf10
  4011ec:	br	x17

00000000004011f0 <umask@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4011f4:	ldr	x17, [x16, #3864]
  4011f8:	add	x16, x16, #0xf18
  4011fc:	br	x17

0000000000401200 <sd_listen_fds@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401204:	ldr	x17, [x16, #3872]
  401208:	add	x16, x16, #0xf20
  40120c:	br	x17

0000000000401210 <open64@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401214:	ldr	x17, [x16, #3880]
  401218:	add	x16, x16, #0xf28
  40121c:	br	x17

0000000000401220 <__errno_location@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401224:	ldr	x17, [x16, #3888]
  401228:	add	x16, x16, #0xf30
  40122c:	br	x17

0000000000401230 <fd_nonblock@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401234:	ldr	x17, [x16, #3896]
  401238:	add	x16, x16, #0xf38
  40123c:	br	x17

0000000000401240 <read@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401244:	ldr	x17, [x16, #3904]
  401248:	add	x16, x16, #0xf40
  40124c:	br	x17

0000000000401250 <sd_notify@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401254:	ldr	x17, [x16, #3912]
  401258:	add	x16, x16, #0xf48
  40125c:	br	x17

0000000000401260 <fd_wait_for_event@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401264:	ldr	x17, [x16, #3920]
  401268:	add	x16, x16, #0xf50
  40126c:	br	x17

0000000000401270 <log_assert_failed_realm@plt>:
  401270:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401274:	ldr	x17, [x16, #3928]
  401278:	add	x16, x16, #0xf58
  40127c:	br	x17

0000000000401280 <safe_close@plt>:
  401280:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401284:	ldr	x17, [x16, #3936]
  401288:	add	x16, x16, #0xf60
  40128c:	br	x17

0000000000401290 <shall_restore_state@plt>:
  401290:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401294:	ldr	x17, [x16, #3944]
  401298:	add	x16, x16, #0xf68
  40129c:	br	x17

00000000004012a0 <read_one_line_file@plt>:
  4012a0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4012a4:	ldr	x17, [x16, #3952]
  4012a8:	add	x16, x16, #0xf70
  4012ac:	br	x17

00000000004012b0 <parse_boolean@plt>:
  4012b0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4012b4:	ldr	x17, [x16, #3960]
  4012b8:	add	x16, x16, #0xf78
  4012bc:	br	x17

00000000004012c0 <write@plt>:
  4012c0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4012c4:	ldr	x17, [x16, #3968]
  4012c8:	add	x16, x16, #0xf80
  4012cc:	br	x17

00000000004012d0 <calloc@plt>:
  4012d0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4012d4:	ldr	x17, [x16, #3976]
  4012d8:	add	x16, x16, #0xf88
  4012dc:	br	x17

00000000004012e0 <free@plt>:
  4012e0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4012e4:	ldr	x17, [x16, #3984]
  4012e8:	add	x16, x16, #0xf90
  4012ec:	br	x17

00000000004012f0 <write_string_file_ts@plt>:
  4012f0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4012f4:	ldr	x17, [x16, #3992]
  4012f8:	add	x16, x16, #0xf98
  4012fc:	br	x17

0000000000401300 <device_wait_for_initialization@plt>:
  401300:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401304:	ldr	x17, [x16, #4000]
  401308:	add	x16, x16, #0xfa0
  40130c:	br	x17

0000000000401310 <sd_device_get_property_value@plt>:
  401310:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401314:	ldr	x17, [x16, #4008]
  401318:	add	x16, x16, #0xfa8
  40131c:	br	x17

0000000000401320 <cescape@plt>:
  401320:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401324:	ldr	x17, [x16, #4016]
  401328:	add	x16, x16, #0xfb0
  40132c:	br	x17

0000000000401330 <log_oom_internal@plt>:
  401330:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401334:	ldr	x17, [x16, #4024]
  401338:	add	x16, x16, #0xfb8
  40133c:	br	x17

0000000000401340 <strjoin_real@plt>:
  401340:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401344:	ldr	x17, [x16, #4032]
  401348:	add	x16, x16, #0xfc0
  40134c:	br	x17

0000000000401350 <sd_device_unref@plt>:
  401350:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401354:	ldr	x17, [x16, #4040]
  401358:	add	x16, x16, #0xfc8
  40135c:	br	x17

0000000000401360 <asprintf@plt>:
  401360:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401364:	ldr	x17, [x16, #4048]
  401368:	add	x16, x16, #0xfd0
  40136c:	br	x17

0000000000401370 <sd_device_new_from_subsystem_sysname@plt>:
  401370:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401374:	ldr	x17, [x16, #4056]
  401378:	add	x16, x16, #0xfd8
  40137c:	br	x17

0000000000401380 <sd_device_get_sysattr_value@plt>:
  401380:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401384:	ldr	x17, [x16, #4064]
  401388:	add	x16, x16, #0xfe0
  40138c:	br	x17

0000000000401390 <sd_device_get_sysname@plt>:
  401390:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  401394:	ldr	x17, [x16, #4072]
  401398:	add	x16, x16, #0xfe8
  40139c:	br	x17

00000000004013a0 <log_object_internal@plt>:
  4013a0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4013a4:	ldr	x17, [x16, #4080]
  4013a8:	add	x16, x16, #0xff0
  4013ac:	br	x17

00000000004013b0 <strcmp@plt>:
  4013b0:	adrp	x16, 41f000 <__FRAME_END__+0x1a9f0>
  4013b4:	ldr	x17, [x16, #4088]
  4013b8:	add	x16, x16, #0xff8
  4013bc:	br	x17

Disassembly of section .text:

00000000004013c0 <_start>:
  4013c0:	mov	x29, #0x0                   	// #0
  4013c4:	mov	x30, #0x0                   	// #0
  4013c8:	mov	x5, x0
  4013cc:	ldr	x1, [sp]
  4013d0:	add	x2, sp, #0x8
  4013d4:	mov	x6, sp
  4013d8:	movz	x0, #0x0, lsl #48
  4013dc:	movk	x0, #0x0, lsl #32
  4013e0:	movk	x0, #0x40, lsl #16
  4013e4:	movk	x0, #0x1588
  4013e8:	movz	x3, #0x0, lsl #48
  4013ec:	movk	x3, #0x0, lsl #32
  4013f0:	movk	x3, #0x40, lsl #16
  4013f4:	movk	x3, #0x3c80
  4013f8:	movz	x4, #0x0, lsl #48
  4013fc:	movk	x4, #0x0, lsl #32
  401400:	movk	x4, #0x40, lsl #16
  401404:	movk	x4, #0x3d00
  401408:	bl	401140 <__libc_start_main@plt>
  40140c:	bl	401150 <abort@plt>

0000000000401410 <call_weak_fn>:
  401410:	adrp	x0, 41f000 <__FRAME_END__+0x1a9f0>
  401414:	ldr	x0, [x0, #3728]
  401418:	cbz	x0, 401420 <call_weak_fn+0x10>
  40141c:	b	401160 <__gmon_start__@plt>
  401420:	ret

0000000000401424 <deregister_tm_clones>:
  401424:	stp	x29, x30, [sp, #-32]!
  401428:	mov	x29, sp
  40142c:	adrp	x0, 420000 <completed.8445>
  401430:	add	x0, x0, #0x0
  401434:	str	x0, [sp, #24]
  401438:	ldr	x0, [sp, #24]
  40143c:	str	x0, [sp, #24]
  401440:	ldr	x1, [sp, #24]
  401444:	adrp	x0, 420000 <completed.8445>
  401448:	add	x0, x0, #0x0
  40144c:	cmp	x1, x0
  401450:	b.eq	40148c <deregister_tm_clones+0x68>  // b.none
  401454:	adrp	x0, 403000 <save_state_write_one+0xf0>
  401458:	add	x0, x0, #0xd20
  40145c:	ldr	x0, [x0]
  401460:	str	x0, [sp, #16]
  401464:	ldr	x0, [sp, #16]
  401468:	str	x0, [sp, #16]
  40146c:	ldr	x0, [sp, #16]
  401470:	cmp	x0, #0x0
  401474:	b.eq	401490 <deregister_tm_clones+0x6c>  // b.none
  401478:	ldr	x1, [sp, #16]
  40147c:	adrp	x0, 420000 <completed.8445>
  401480:	add	x0, x0, #0x0
  401484:	blr	x1
  401488:	b	401490 <deregister_tm_clones+0x6c>
  40148c:	nop
  401490:	ldp	x29, x30, [sp], #32
  401494:	ret

0000000000401498 <register_tm_clones>:
  401498:	stp	x29, x30, [sp, #-48]!
  40149c:	mov	x29, sp
  4014a0:	adrp	x0, 420000 <completed.8445>
  4014a4:	add	x0, x0, #0x0
  4014a8:	str	x0, [sp, #40]
  4014ac:	ldr	x0, [sp, #40]
  4014b0:	str	x0, [sp, #40]
  4014b4:	ldr	x1, [sp, #40]
  4014b8:	adrp	x0, 420000 <completed.8445>
  4014bc:	add	x0, x0, #0x0
  4014c0:	sub	x0, x1, x0
  4014c4:	asr	x0, x0, #3
  4014c8:	lsr	x1, x0, #63
  4014cc:	add	x0, x1, x0
  4014d0:	asr	x0, x0, #1
  4014d4:	str	x0, [sp, #32]
  4014d8:	ldr	x0, [sp, #32]
  4014dc:	cmp	x0, #0x0
  4014e0:	b.eq	401520 <register_tm_clones+0x88>  // b.none
  4014e4:	adrp	x0, 403000 <save_state_write_one+0xf0>
  4014e8:	add	x0, x0, #0xd28
  4014ec:	ldr	x0, [x0]
  4014f0:	str	x0, [sp, #24]
  4014f4:	ldr	x0, [sp, #24]
  4014f8:	str	x0, [sp, #24]
  4014fc:	ldr	x0, [sp, #24]
  401500:	cmp	x0, #0x0
  401504:	b.eq	401524 <register_tm_clones+0x8c>  // b.none
  401508:	ldr	x2, [sp, #24]
  40150c:	ldr	x1, [sp, #32]
  401510:	adrp	x0, 420000 <completed.8445>
  401514:	add	x0, x0, #0x0
  401518:	blr	x2
  40151c:	b	401524 <register_tm_clones+0x8c>
  401520:	nop
  401524:	ldp	x29, x30, [sp], #48
  401528:	ret

000000000040152c <__do_global_dtors_aux>:
  40152c:	stp	x29, x30, [sp, #-16]!
  401530:	mov	x29, sp
  401534:	adrp	x0, 420000 <completed.8445>
  401538:	add	x0, x0, #0x0
  40153c:	ldrb	w0, [x0]
  401540:	and	x0, x0, #0xff
  401544:	cmp	x0, #0x0
  401548:	b.ne	401564 <__do_global_dtors_aux+0x38>  // b.any
  40154c:	bl	401424 <deregister_tm_clones>
  401550:	adrp	x0, 420000 <completed.8445>
  401554:	add	x0, x0, #0x0
  401558:	mov	w1, #0x1                   	// #1
  40155c:	strb	w1, [x0]
  401560:	b	401568 <__do_global_dtors_aux+0x3c>
  401564:	nop
  401568:	ldp	x29, x30, [sp], #16
  40156c:	ret

0000000000401570 <frame_dummy>:
  401570:	stp	x29, x30, [sp, #-16]!
  401574:	mov	x29, sp
  401578:	bl	401498 <register_tm_clones>
  40157c:	nop
  401580:	ldp	x29, x30, [sp], #16
  401584:	ret

0000000000401588 <main>:
  401588:	sub	sp, sp, #0x30
  40158c:	stp	x29, x30, [sp, #32]
  401590:	add	x29, sp, #0x20
  401594:	mov	w8, wzr
  401598:	mov	w9, #0x1                   	// #1
  40159c:	stur	wzr, [x29, #-4]
  4015a0:	stur	w0, [x29, #-8]
  4015a4:	str	x1, [sp, #16]
  4015a8:	ldur	w0, [x29, #-8]
  4015ac:	ldr	x1, [sp, #16]
  4015b0:	str	w8, [sp, #8]
  4015b4:	str	w9, [sp, #4]
  4015b8:	bl	401600 <save_argc_argv>
  4015bc:	ldur	w0, [x29, #-8]
  4015c0:	ldr	x1, [sp, #16]
  4015c4:	bl	401634 <run>
  4015c8:	str	w0, [sp, #12]
  4015cc:	bl	401170 <ask_password_agent_close@plt>
  4015d0:	bl	401180 <polkit_agent_close@plt>
  4015d4:	bl	401190 <pager_close@plt>
  4015d8:	bl	4011a0 <mac_selinux_finish@plt>
  4015dc:	bl	402064 <static_destruct>
  4015e0:	ldr	w8, [sp, #12]
  4015e4:	cmp	w8, #0x0
  4015e8:	ldr	w8, [sp, #4]
  4015ec:	ldr	w9, [sp, #8]
  4015f0:	csel	w0, w8, w9, lt  // lt = tstop
  4015f4:	ldp	x29, x30, [sp, #32]
  4015f8:	add	sp, sp, #0x30
  4015fc:	ret

0000000000401600 <save_argc_argv>:
  401600:	sub	sp, sp, #0x10
  401604:	adrp	x8, 420000 <completed.8445>
  401608:	add	x8, x8, #0x8
  40160c:	adrp	x9, 420000 <completed.8445>
  401610:	add	x9, x9, #0x10
  401614:	str	w0, [sp, #12]
  401618:	str	x1, [sp]
  40161c:	ldr	w10, [sp, #12]
  401620:	str	w10, [x8]
  401624:	ldr	x8, [sp]
  401628:	str	x8, [x9]
  40162c:	add	sp, sp, #0x10
  401630:	ret

0000000000401634 <run>:
  401634:	sub	sp, sp, #0x1b0
  401638:	stp	x29, x30, [sp, #400]
  40163c:	str	x28, [sp, #416]
  401640:	add	x29, sp, #0x190
  401644:	adrp	x8, 403000 <save_state_write_one+0xf0>
  401648:	add	x8, x8, #0xd30
  40164c:	mov	w9, #0x0                   	// #0
  401650:	adrp	x10, 403000 <save_state_write_one+0xf0>
  401654:	add	x10, x10, #0xd40
  401658:	add	x10, x10, #0x3
  40165c:	adrp	x11, 403000 <save_state_write_one+0xf0>
  401660:	add	x11, x11, #0xd57
  401664:	stur	w0, [x29, #-8]
  401668:	stur	x1, [x29, #-16]
  40166c:	ldr	q0, [x8]
  401670:	stur	q0, [x29, #-32]
  401674:	sturb	w9, [x29, #-33]
  401678:	ldur	w9, [x29, #-8]
  40167c:	cmp	w9, #0x1
  401680:	str	x10, [sp, #80]
  401684:	str	x11, [sp, #72]
  401688:	b.le	40171c <run+0xe8>
  40168c:	mov	w8, #0x3                   	// #3
  401690:	stur	w8, [x29, #-48]
  401694:	mov	w8, #0x16                  	// #22
  401698:	movk	w8, #0x4000, lsl #16
  40169c:	stur	w8, [x29, #-52]
  4016a0:	stur	wzr, [x29, #-56]
  4016a4:	ldur	w0, [x29, #-56]
  4016a8:	bl	4011b0 <log_get_max_level_realm@plt>
  4016ac:	ldur	w8, [x29, #-48]
  4016b0:	and	w8, w8, #0x7
  4016b4:	cmp	w0, w8
  4016b8:	b.lt	4016ec <run+0xb8>  // b.tstop
  4016bc:	ldur	w8, [x29, #-56]
  4016c0:	ldur	w9, [x29, #-48]
  4016c4:	orr	w0, w9, w8, lsl #10
  4016c8:	ldur	w1, [x29, #-52]
  4016cc:	ldr	x2, [sp, #80]
  4016d0:	mov	w3, #0x115                 	// #277
  4016d4:	ldr	x4, [sp, #72]
  4016d8:	adrp	x5, 403000 <save_state_write_one+0xf0>
  4016dc:	add	x5, x5, #0xd5b
  4016e0:	bl	4011c0 <log_internal_realm@plt>
  4016e4:	str	w0, [sp, #68]
  4016e8:	b	401700 <run+0xcc>
  4016ec:	ldur	w0, [x29, #-52]
  4016f0:	bl	4011d0 <abs@plt>
  4016f4:	mov	w8, wzr
  4016f8:	subs	w8, w8, w0, uxtb
  4016fc:	str	w8, [sp, #68]
  401700:	ldr	w8, [sp, #68]
  401704:	stur	w8, [x29, #-60]
  401708:	ldur	w8, [x29, #-60]
  40170c:	stur	w8, [x29, #-4]
  401710:	mov	w8, #0x1                   	// #1
  401714:	stur	w8, [x29, #-64]
  401718:	b	402048 <run+0xa14>
  40171c:	bl	4011e0 <log_setup_service@plt>
  401720:	mov	w0, #0x12                  	// #18
  401724:	bl	4011f0 <umask@plt>
  401728:	mov	w8, wzr
  40172c:	mov	w0, w8
  401730:	bl	401200 <sd_listen_fds@plt>
  401734:	stur	w0, [x29, #-44]
  401738:	ldur	w8, [x29, #-44]
  40173c:	cmp	w8, #0x0
  401740:	cset	w8, ge  // ge = tcont
  401744:	tbnz	w8, #0, 4017d4 <run+0x1a0>
  401748:	mov	w8, #0x3                   	// #3
  40174c:	stur	w8, [x29, #-68]
  401750:	ldur	w8, [x29, #-44]
  401754:	stur	w8, [x29, #-72]
  401758:	stur	wzr, [x29, #-76]
  40175c:	ldur	w0, [x29, #-76]
  401760:	bl	4011b0 <log_get_max_level_realm@plt>
  401764:	ldur	w8, [x29, #-68]
  401768:	and	w8, w8, #0x7
  40176c:	cmp	w0, w8
  401770:	b.lt	4017a4 <run+0x170>  // b.tstop
  401774:	ldur	w8, [x29, #-76]
  401778:	ldur	w9, [x29, #-68]
  40177c:	orr	w0, w9, w8, lsl #10
  401780:	ldur	w1, [x29, #-72]
  401784:	ldr	x2, [sp, #80]
  401788:	mov	w3, #0x11d                 	// #285
  40178c:	ldr	x4, [sp, #72]
  401790:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401794:	add	x5, x5, #0xd7f
  401798:	bl	4011c0 <log_internal_realm@plt>
  40179c:	str	w0, [sp, #64]
  4017a0:	b	4017b8 <run+0x184>
  4017a4:	ldur	w0, [x29, #-72]
  4017a8:	bl	4011d0 <abs@plt>
  4017ac:	mov	w8, wzr
  4017b0:	subs	w8, w8, w0, uxtb
  4017b4:	str	w8, [sp, #64]
  4017b8:	ldr	w8, [sp, #64]
  4017bc:	stur	w8, [x29, #-80]
  4017c0:	ldur	w8, [x29, #-80]
  4017c4:	stur	w8, [x29, #-4]
  4017c8:	mov	w8, #0x1                   	// #1
  4017cc:	stur	w8, [x29, #-64]
  4017d0:	b	402048 <run+0xa14>
  4017d4:	ldur	w8, [x29, #-44]
  4017d8:	cmp	w8, #0x1
  4017dc:	b.le	401870 <run+0x23c>
  4017e0:	mov	w8, #0x3                   	// #3
  4017e4:	stur	w8, [x29, #-84]
  4017e8:	mov	w8, #0x16                  	// #22
  4017ec:	movk	w8, #0x4000, lsl #16
  4017f0:	stur	w8, [x29, #-88]
  4017f4:	stur	wzr, [x29, #-92]
  4017f8:	ldur	w0, [x29, #-92]
  4017fc:	bl	4011b0 <log_get_max_level_realm@plt>
  401800:	ldur	w8, [x29, #-84]
  401804:	and	w8, w8, #0x7
  401808:	cmp	w0, w8
  40180c:	b.lt	401840 <run+0x20c>  // b.tstop
  401810:	ldur	w8, [x29, #-92]
  401814:	ldur	w9, [x29, #-84]
  401818:	orr	w0, w9, w8, lsl #10
  40181c:	ldur	w1, [x29, #-88]
  401820:	ldr	x2, [sp, #80]
  401824:	mov	w3, #0x11f                 	// #287
  401828:	ldr	x4, [sp, #72]
  40182c:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401830:	add	x5, x5, #0xdc2
  401834:	bl	4011c0 <log_internal_realm@plt>
  401838:	str	w0, [sp, #60]
  40183c:	b	401854 <run+0x220>
  401840:	ldur	w0, [x29, #-88]
  401844:	bl	4011d0 <abs@plt>
  401848:	mov	w8, wzr
  40184c:	subs	w8, w8, w0, uxtb
  401850:	str	w8, [sp, #60]
  401854:	ldr	w8, [sp, #60]
  401858:	stur	w8, [x29, #-96]
  40185c:	ldur	w8, [x29, #-96]
  401860:	stur	w8, [x29, #-4]
  401864:	mov	w8, #0x1                   	// #1
  401868:	stur	w8, [x29, #-64]
  40186c:	b	402048 <run+0xa14>
  401870:	ldur	w8, [x29, #-44]
  401874:	cbnz	w8, 4019d0 <run+0x39c>
  401878:	adrp	x0, 403000 <save_state_write_one+0xf0>
  40187c:	add	x0, x0, #0xde1
  401880:	mov	w1, #0x902                 	// #2306
  401884:	movk	w1, #0x8, lsl #16
  401888:	bl	401210 <open64@plt>
  40188c:	stur	w0, [x29, #-24]
  401890:	ldur	w8, [x29, #-24]
  401894:	cmp	w8, #0x0
  401898:	cset	w8, ge  // ge = tcont
  40189c:	tbnz	w8, #0, 4019cc <run+0x398>
  4018a0:	bl	401220 <__errno_location@plt>
  4018a4:	ldr	w8, [x0]
  4018a8:	cmp	w8, #0x2
  4018ac:	b.ne	40193c <run+0x308>  // b.any
  4018b0:	mov	w8, #0x7                   	// #7
  4018b4:	stur	w8, [x29, #-100]
  4018b8:	bl	401220 <__errno_location@plt>
  4018bc:	ldr	w8, [x0]
  4018c0:	stur	w8, [x29, #-104]
  4018c4:	stur	wzr, [x29, #-108]
  4018c8:	ldur	w0, [x29, #-108]
  4018cc:	bl	4011b0 <log_get_max_level_realm@plt>
  4018d0:	ldur	w8, [x29, #-100]
  4018d4:	and	w8, w8, #0x7
  4018d8:	cmp	w0, w8
  4018dc:	b.lt	401910 <run+0x2dc>  // b.tstop
  4018e0:	ldur	w8, [x29, #-108]
  4018e4:	ldur	w9, [x29, #-100]
  4018e8:	orr	w0, w9, w8, lsl #10
  4018ec:	ldur	w1, [x29, #-104]
  4018f0:	ldr	x2, [sp, #80]
  4018f4:	mov	w3, #0x125                 	// #293
  4018f8:	ldr	x4, [sp, #72]
  4018fc:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401900:	add	x5, x5, #0xded
  401904:	bl	4011c0 <log_internal_realm@plt>
  401908:	str	w0, [sp, #56]
  40190c:	b	401924 <run+0x2f0>
  401910:	ldur	w0, [x29, #-104]
  401914:	bl	4011d0 <abs@plt>
  401918:	mov	w8, wzr
  40191c:	subs	w8, w8, w0, uxtb
  401920:	str	w8, [sp, #56]
  401924:	ldr	w8, [sp, #56]
  401928:	stur	w8, [x29, #-112]
  40192c:	stur	wzr, [x29, #-4]
  401930:	mov	w8, #0x1                   	// #1
  401934:	stur	w8, [x29, #-64]
  401938:	b	402048 <run+0xa14>
  40193c:	mov	w8, #0x3                   	// #3
  401940:	stur	w8, [x29, #-116]
  401944:	bl	401220 <__errno_location@plt>
  401948:	ldr	w8, [x0]
  40194c:	stur	w8, [x29, #-120]
  401950:	stur	wzr, [x29, #-124]
  401954:	ldur	w0, [x29, #-124]
  401958:	bl	4011b0 <log_get_max_level_realm@plt>
  40195c:	ldur	w8, [x29, #-116]
  401960:	and	w8, w8, #0x7
  401964:	cmp	w0, w8
  401968:	b.lt	40199c <run+0x368>  // b.tstop
  40196c:	ldur	w8, [x29, #-124]
  401970:	ldur	w9, [x29, #-116]
  401974:	orr	w0, w9, w8, lsl #10
  401978:	ldur	w1, [x29, #-120]
  40197c:	ldr	x2, [sp, #80]
  401980:	mov	w3, #0x129                 	// #297
  401984:	ldr	x4, [sp, #72]
  401988:	adrp	x5, 403000 <save_state_write_one+0xf0>
  40198c:	add	x5, x5, #0xe26
  401990:	bl	4011c0 <log_internal_realm@plt>
  401994:	str	w0, [sp, #52]
  401998:	b	4019b0 <run+0x37c>
  40199c:	ldur	w0, [x29, #-120]
  4019a0:	bl	4011d0 <abs@plt>
  4019a4:	mov	w8, wzr
  4019a8:	subs	w8, w8, w0, uxtb
  4019ac:	str	w8, [sp, #52]
  4019b0:	ldr	w8, [sp, #52]
  4019b4:	stur	w8, [x29, #-128]
  4019b8:	ldur	w8, [x29, #-128]
  4019bc:	stur	w8, [x29, #-4]
  4019c0:	mov	w8, #0x1                   	// #1
  4019c4:	stur	w8, [x29, #-64]
  4019c8:	b	402048 <run+0xa14>
  4019cc:	b	401a88 <run+0x454>
  4019d0:	mov	w8, #0x3                   	// #3
  4019d4:	stur	w8, [x29, #-24]
  4019d8:	ldur	w0, [x29, #-24]
  4019dc:	mov	w8, #0x1                   	// #1
  4019e0:	and	w1, w8, #0x1
  4019e4:	bl	401230 <fd_nonblock@plt>
  4019e8:	stur	w0, [x29, #-40]
  4019ec:	ldur	w8, [x29, #-40]
  4019f0:	cmp	w8, #0x0
  4019f4:	cset	w8, ge  // ge = tcont
  4019f8:	tbnz	w8, #0, 401a88 <run+0x454>
  4019fc:	mov	w8, #0x3                   	// #3
  401a00:	stur	w8, [x29, #-132]
  401a04:	ldur	w8, [x29, #-40]
  401a08:	stur	w8, [x29, #-136]
  401a0c:	stur	wzr, [x29, #-140]
  401a10:	ldur	w0, [x29, #-140]
  401a14:	bl	4011b0 <log_get_max_level_realm@plt>
  401a18:	ldur	w8, [x29, #-132]
  401a1c:	and	w8, w8, #0x7
  401a20:	cmp	w0, w8
  401a24:	b.lt	401a58 <run+0x424>  // b.tstop
  401a28:	ldur	w8, [x29, #-140]
  401a2c:	ldur	w9, [x29, #-132]
  401a30:	orr	w0, w9, w8, lsl #10
  401a34:	ldur	w1, [x29, #-136]
  401a38:	ldr	x2, [sp, #80]
  401a3c:	mov	w3, #0x130                 	// #304
  401a40:	ldr	x4, [sp, #72]
  401a44:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401a48:	add	x5, x5, #0xe45
  401a4c:	bl	4011c0 <log_internal_realm@plt>
  401a50:	str	w0, [sp, #48]
  401a54:	b	401a6c <run+0x438>
  401a58:	ldur	w0, [x29, #-136]
  401a5c:	bl	4011d0 <abs@plt>
  401a60:	mov	w8, wzr
  401a64:	subs	w8, w8, w0, uxtb
  401a68:	str	w8, [sp, #48]
  401a6c:	ldr	w8, [sp, #48]
  401a70:	stur	w8, [x29, #-144]
  401a74:	ldur	w8, [x29, #-144]
  401a78:	stur	w8, [x29, #-4]
  401a7c:	mov	w8, #0x1                   	// #1
  401a80:	stur	w8, [x29, #-64]
  401a84:	b	402048 <run+0xa14>
  401a88:	ldur	w0, [x29, #-24]
  401a8c:	sub	x1, x29, #0x98
  401a90:	mov	x2, #0x8                   	// #8
  401a94:	bl	401240 <read@plt>
  401a98:	stur	x0, [x29, #-168]
  401a9c:	ldur	x8, [x29, #-168]
  401aa0:	cmp	x8, #0x0
  401aa4:	cset	w9, ge  // ge = tcont
  401aa8:	tbnz	w9, #0, 401cb0 <run+0x67c>
  401aac:	bl	401220 <__errno_location@plt>
  401ab0:	ldr	w8, [x0]
  401ab4:	cmp	w8, #0xb
  401ab8:	b.ne	401c34 <run+0x600>  // b.any
  401abc:	ldurb	w8, [x29, #-33]
  401ac0:	tbnz	w8, #0, 401ae0 <run+0x4ac>
  401ac4:	mov	w8, wzr
  401ac8:	mov	w0, w8
  401acc:	adrp	x1, 403000 <save_state_write_one+0xf0>
  401ad0:	add	x1, x1, #0xe78
  401ad4:	bl	401250 <sd_notify@plt>
  401ad8:	mov	w8, #0x1                   	// #1
  401adc:	sturb	w8, [x29, #-33]
  401ae0:	ldur	w0, [x29, #-24]
  401ae4:	mov	w1, #0x1                   	// #1
  401ae8:	mov	x2, #0x4b40                	// #19264
  401aec:	movk	x2, #0x4c, lsl #16
  401af0:	bl	401260 <fd_wait_for_event@plt>
  401af4:	stur	w0, [x29, #-40]
  401af8:	ldur	w8, [x29, #-40]
  401afc:	mov	w9, #0xfffffffc            	// #-4
  401b00:	cmp	w8, w9
  401b04:	b.ne	401b0c <run+0x4d8>  // b.any
  401b08:	b	401a88 <run+0x454>
  401b0c:	ldur	w8, [x29, #-40]
  401b10:	cmp	w8, #0x0
  401b14:	cset	w8, ge  // ge = tcont
  401b18:	tbnz	w8, #0, 401ba8 <run+0x574>
  401b1c:	mov	w8, #0x3                   	// #3
  401b20:	stur	w8, [x29, #-172]
  401b24:	ldur	w8, [x29, #-40]
  401b28:	stur	w8, [x29, #-176]
  401b2c:	stur	wzr, [x29, #-180]
  401b30:	ldur	w0, [x29, #-180]
  401b34:	bl	4011b0 <log_get_max_level_realm@plt>
  401b38:	ldur	w8, [x29, #-172]
  401b3c:	and	w8, w8, #0x7
  401b40:	cmp	w0, w8
  401b44:	b.lt	401b78 <run+0x544>  // b.tstop
  401b48:	ldur	w8, [x29, #-180]
  401b4c:	ldur	w9, [x29, #-172]
  401b50:	orr	w0, w9, w8, lsl #10
  401b54:	ldur	w1, [x29, #-176]
  401b58:	ldr	x2, [sp, #80]
  401b5c:	mov	w3, #0x14b                 	// #331
  401b60:	ldr	x4, [sp, #72]
  401b64:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401b68:	add	x5, x5, #0xe80
  401b6c:	bl	4011c0 <log_internal_realm@plt>
  401b70:	str	w0, [sp, #44]
  401b74:	b	401b8c <run+0x558>
  401b78:	ldur	w0, [x29, #-176]
  401b7c:	bl	4011d0 <abs@plt>
  401b80:	mov	w8, wzr
  401b84:	subs	w8, w8, w0, uxtb
  401b88:	str	w8, [sp, #44]
  401b8c:	ldr	w8, [sp, #44]
  401b90:	stur	w8, [x29, #-184]
  401b94:	ldur	w8, [x29, #-184]
  401b98:	stur	w8, [x29, #-4]
  401b9c:	mov	w8, #0x1                   	// #1
  401ba0:	stur	w8, [x29, #-64]
  401ba4:	b	402048 <run+0xa14>
  401ba8:	ldur	w8, [x29, #-40]
  401bac:	cmp	w8, #0x0
  401bb0:	cset	w8, le
  401bb4:	tbnz	w8, #0, 401bbc <run+0x588>
  401bb8:	b	401a88 <run+0x454>
  401bbc:	mov	w8, #0x7                   	// #7
  401bc0:	stur	w8, [x29, #-188]
  401bc4:	stur	wzr, [x29, #-192]
  401bc8:	stur	wzr, [x29, #-196]
  401bcc:	ldur	w0, [x29, #-196]
  401bd0:	bl	4011b0 <log_get_max_level_realm@plt>
  401bd4:	ldur	w8, [x29, #-188]
  401bd8:	and	w8, w8, #0x7
  401bdc:	cmp	w0, w8
  401be0:	b.lt	401c14 <run+0x5e0>  // b.tstop
  401be4:	ldur	w8, [x29, #-196]
  401be8:	ldur	w9, [x29, #-188]
  401bec:	orr	w0, w9, w8, lsl #10
  401bf0:	ldur	w1, [x29, #-192]
  401bf4:	ldr	x2, [sp, #80]
  401bf8:	mov	w3, #0x14f                 	// #335
  401bfc:	ldr	x4, [sp, #72]
  401c00:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401c04:	add	x5, x5, #0xe9f
  401c08:	bl	4011c0 <log_internal_realm@plt>
  401c0c:	str	w0, [sp, #40]
  401c10:	b	401c28 <run+0x5f4>
  401c14:	ldur	w0, [x29, #-192]
  401c18:	bl	4011d0 <abs@plt>
  401c1c:	mov	w8, wzr
  401c20:	subs	w8, w8, w0, uxtb
  401c24:	str	w8, [sp, #40]
  401c28:	ldr	w8, [sp, #40]
  401c2c:	str	w8, [sp, #200]
  401c30:	b	40203c <run+0xa08>
  401c34:	mov	w8, #0x3                   	// #3
  401c38:	str	w8, [sp, #196]
  401c3c:	bl	401220 <__errno_location@plt>
  401c40:	ldr	w8, [x0]
  401c44:	str	w8, [sp, #192]
  401c48:	str	wzr, [sp, #188]
  401c4c:	ldr	w0, [sp, #188]
  401c50:	bl	4011b0 <log_get_max_level_realm@plt>
  401c54:	ldr	w8, [sp, #196]
  401c58:	and	w8, w8, #0x7
  401c5c:	cmp	w0, w8
  401c60:	b.lt	401c94 <run+0x660>  // b.tstop
  401c64:	ldr	w8, [sp, #188]
  401c68:	ldr	w9, [sp, #196]
  401c6c:	orr	w0, w9, w8, lsl #10
  401c70:	ldr	w1, [sp, #192]
  401c74:	ldr	x2, [sp, #80]
  401c78:	mov	w3, #0x153                 	// #339
  401c7c:	ldr	x4, [sp, #72]
  401c80:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401c84:	add	x5, x5, #0xec2
  401c88:	bl	4011c0 <log_internal_realm@plt>
  401c8c:	str	w0, [sp, #36]
  401c90:	b	401ca8 <run+0x674>
  401c94:	ldr	w0, [sp, #192]
  401c98:	bl	4011d0 <abs@plt>
  401c9c:	mov	w8, wzr
  401ca0:	subs	w8, w8, w0, uxtb
  401ca4:	str	w8, [sp, #36]
  401ca8:	ldr	w8, [sp, #36]
  401cac:	str	w8, [sp, #184]
  401cb0:	ldur	x8, [x29, #-168]
  401cb4:	cmp	x8, #0x8
  401cb8:	b.eq	401d4c <run+0x718>  // b.none
  401cbc:	mov	w8, #0x3                   	// #3
  401cc0:	str	w8, [sp, #180]
  401cc4:	mov	w8, #0x5                   	// #5
  401cc8:	movk	w8, #0x4000, lsl #16
  401ccc:	str	w8, [sp, #176]
  401cd0:	str	wzr, [sp, #172]
  401cd4:	ldr	w0, [sp, #172]
  401cd8:	bl	4011b0 <log_get_max_level_realm@plt>
  401cdc:	ldr	w8, [sp, #180]
  401ce0:	and	w8, w8, #0x7
  401ce4:	cmp	w0, w8
  401ce8:	b.lt	401d1c <run+0x6e8>  // b.tstop
  401cec:	ldr	w8, [sp, #172]
  401cf0:	ldr	w9, [sp, #180]
  401cf4:	orr	w0, w9, w8, lsl #10
  401cf8:	ldr	w1, [sp, #176]
  401cfc:	ldr	x2, [sp, #80]
  401d00:	mov	w3, #0x157                 	// #343
  401d04:	ldr	x4, [sp, #72]
  401d08:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401d0c:	add	x5, x5, #0xee6
  401d10:	bl	4011c0 <log_internal_realm@plt>
  401d14:	str	w0, [sp, #32]
  401d18:	b	401d30 <run+0x6fc>
  401d1c:	ldr	w0, [sp, #176]
  401d20:	bl	4011d0 <abs@plt>
  401d24:	mov	w8, wzr
  401d28:	subs	w8, w8, w0, uxtb
  401d2c:	str	w8, [sp, #32]
  401d30:	ldr	w8, [sp, #32]
  401d34:	str	w8, [sp, #168]
  401d38:	ldr	w8, [sp, #168]
  401d3c:	stur	w8, [x29, #-4]
  401d40:	mov	w8, #0x1                   	// #1
  401d44:	stur	w8, [x29, #-64]
  401d48:	b	402048 <run+0xa14>
  401d4c:	ldurb	w0, [x29, #-148]
  401d50:	bl	4022b4 <rfkill_type_to_string>
  401d54:	stur	x0, [x29, #-160]
  401d58:	ldur	x8, [x29, #-160]
  401d5c:	cbnz	x8, 401ddc <run+0x7a8>
  401d60:	mov	w8, #0x7                   	// #7
  401d64:	str	w8, [sp, #164]
  401d68:	str	wzr, [sp, #160]
  401d6c:	str	wzr, [sp, #156]
  401d70:	ldr	w0, [sp, #156]
  401d74:	bl	4011b0 <log_get_max_level_realm@plt>
  401d78:	ldr	w8, [sp, #164]
  401d7c:	and	w8, w8, #0x7
  401d80:	cmp	w0, w8
  401d84:	b.lt	401dbc <run+0x788>  // b.tstop
  401d88:	ldr	w8, [sp, #156]
  401d8c:	ldr	w9, [sp, #164]
  401d90:	orr	w0, w9, w8, lsl #10
  401d94:	ldr	w1, [sp, #160]
  401d98:	ldurb	w6, [x29, #-148]
  401d9c:	ldr	x2, [sp, #80]
  401da0:	mov	w3, #0x15b                 	// #347
  401da4:	ldr	x4, [sp, #72]
  401da8:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401dac:	add	x5, x5, #0xf0c
  401db0:	bl	4011c0 <log_internal_realm@plt>
  401db4:	str	w0, [sp, #28]
  401db8:	b	401dd0 <run+0x79c>
  401dbc:	ldr	w0, [sp, #160]
  401dc0:	bl	4011d0 <abs@plt>
  401dc4:	mov	w8, wzr
  401dc8:	subs	w8, w8, w0, uxtb
  401dcc:	str	w8, [sp, #28]
  401dd0:	ldr	w8, [sp, #28]
  401dd4:	str	w8, [sp, #152]
  401dd8:	b	401a88 <run+0x454>
  401ddc:	ldurb	w8, [x29, #-147]
  401de0:	str	w8, [sp, #24]
  401de4:	cbz	w8, 401e0c <run+0x7d8>
  401de8:	b	401dec <run+0x7b8>
  401dec:	ldr	w8, [sp, #24]
  401df0:	cmp	w8, #0x1
  401df4:	b.eq	401e98 <run+0x864>  // b.none
  401df8:	b	401dfc <run+0x7c8>
  401dfc:	ldr	w8, [sp, #24]
  401e00:	cmp	w8, #0x2
  401e04:	b.eq	401f24 <run+0x8f0>  // b.none
  401e08:	b	401fb0 <run+0x97c>
  401e0c:	mov	w8, #0x7                   	// #7
  401e10:	str	w8, [sp, #148]
  401e14:	str	wzr, [sp, #144]
  401e18:	str	wzr, [sp, #140]
  401e1c:	ldr	w0, [sp, #140]
  401e20:	bl	4011b0 <log_get_max_level_realm@plt>
  401e24:	ldr	w8, [sp, #148]
  401e28:	and	w8, w8, #0x7
  401e2c:	cmp	w0, w8
  401e30:	b.lt	401e6c <run+0x838>  // b.tstop
  401e34:	ldr	w8, [sp, #140]
  401e38:	ldr	w9, [sp, #148]
  401e3c:	orr	w0, w9, w8, lsl #10
  401e40:	ldr	w1, [sp, #144]
  401e44:	ldur	w6, [x29, #-152]
  401e48:	ldur	x7, [x29, #-160]
  401e4c:	ldr	x2, [sp, #80]
  401e50:	mov	w3, #0x162                 	// #354
  401e54:	ldr	x4, [sp, #72]
  401e58:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401e5c:	add	x5, x5, #0xf46
  401e60:	bl	4011c0 <log_internal_realm@plt>
  401e64:	str	w0, [sp, #20]
  401e68:	b	401e80 <run+0x84c>
  401e6c:	ldr	w0, [sp, #144]
  401e70:	bl	4011d0 <abs@plt>
  401e74:	mov	w8, wzr
  401e78:	subs	w8, w8, w0, uxtb
  401e7c:	str	w8, [sp, #20]
  401e80:	ldr	w8, [sp, #20]
  401e84:	str	w8, [sp, #136]
  401e88:	sub	x0, x29, #0x20
  401e8c:	sub	x1, x29, #0x98
  401e90:	bl	402310 <load_state>
  401e94:	b	402038 <run+0xa04>
  401e98:	mov	w8, #0x7                   	// #7
  401e9c:	str	w8, [sp, #132]
  401ea0:	str	wzr, [sp, #128]
  401ea4:	str	wzr, [sp, #124]
  401ea8:	ldr	w0, [sp, #124]
  401eac:	bl	4011b0 <log_get_max_level_realm@plt>
  401eb0:	ldr	w8, [sp, #132]
  401eb4:	and	w8, w8, #0x7
  401eb8:	cmp	w0, w8
  401ebc:	b.lt	401ef8 <run+0x8c4>  // b.tstop
  401ec0:	ldr	w8, [sp, #124]
  401ec4:	ldr	w9, [sp, #132]
  401ec8:	orr	w0, w9, w8, lsl #10
  401ecc:	ldr	w1, [sp, #128]
  401ed0:	ldur	w6, [x29, #-152]
  401ed4:	ldur	x7, [x29, #-160]
  401ed8:	ldr	x2, [sp, #80]
  401edc:	mov	w3, #0x167                 	// #359
  401ee0:	ldr	x4, [sp, #72]
  401ee4:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401ee8:	add	x5, x5, #0xf84
  401eec:	bl	4011c0 <log_internal_realm@plt>
  401ef0:	str	w0, [sp, #16]
  401ef4:	b	401f0c <run+0x8d8>
  401ef8:	ldr	w0, [sp, #128]
  401efc:	bl	4011d0 <abs@plt>
  401f00:	mov	w8, wzr
  401f04:	subs	w8, w8, w0, uxtb
  401f08:	str	w8, [sp, #16]
  401f0c:	ldr	w8, [sp, #16]
  401f10:	str	w8, [sp, #120]
  401f14:	sub	x0, x29, #0x20
  401f18:	sub	x1, x29, #0x98
  401f1c:	bl	402a54 <save_state_cancel>
  401f20:	b	402038 <run+0xa04>
  401f24:	mov	w8, #0x7                   	// #7
  401f28:	str	w8, [sp, #116]
  401f2c:	str	wzr, [sp, #112]
  401f30:	str	wzr, [sp, #108]
  401f34:	ldr	w0, [sp, #108]
  401f38:	bl	4011b0 <log_get_max_level_realm@plt>
  401f3c:	ldr	w8, [sp, #116]
  401f40:	and	w8, w8, #0x7
  401f44:	cmp	w0, w8
  401f48:	b.lt	401f84 <run+0x950>  // b.tstop
  401f4c:	ldr	w8, [sp, #108]
  401f50:	ldr	w9, [sp, #116]
  401f54:	orr	w0, w9, w8, lsl #10
  401f58:	ldr	w1, [sp, #112]
  401f5c:	ldur	w6, [x29, #-152]
  401f60:	ldur	x7, [x29, #-160]
  401f64:	ldr	x2, [sp, #80]
  401f68:	mov	w3, #0x16c                 	// #364
  401f6c:	ldr	x4, [sp, #72]
  401f70:	adrp	x5, 403000 <save_state_write_one+0xf0>
  401f74:	add	x5, x5, #0xfc0
  401f78:	bl	4011c0 <log_internal_realm@plt>
  401f7c:	str	w0, [sp, #12]
  401f80:	b	401f98 <run+0x964>
  401f84:	ldr	w0, [sp, #112]
  401f88:	bl	4011d0 <abs@plt>
  401f8c:	mov	w8, wzr
  401f90:	subs	w8, w8, w0, uxtb
  401f94:	str	w8, [sp, #12]
  401f98:	ldr	w8, [sp, #12]
  401f9c:	str	w8, [sp, #104]
  401fa0:	sub	x0, x29, #0x20
  401fa4:	sub	x1, x29, #0x98
  401fa8:	bl	402be0 <save_state_queue>
  401fac:	b	402038 <run+0xa04>
  401fb0:	mov	w8, #0x7                   	// #7
  401fb4:	str	w8, [sp, #100]
  401fb8:	str	wzr, [sp, #96]
  401fbc:	str	wzr, [sp, #92]
  401fc0:	ldr	w0, [sp, #92]
  401fc4:	bl	4011b0 <log_get_max_level_realm@plt>
  401fc8:	ldr	w8, [sp, #100]
  401fcc:	and	w8, w8, #0x7
  401fd0:	cmp	w0, w8
  401fd4:	b.lt	40201c <run+0x9e8>  // b.tstop
  401fd8:	ldr	w8, [sp, #92]
  401fdc:	ldr	w9, [sp, #100]
  401fe0:	orr	w0, w9, w8, lsl #10
  401fe4:	ldr	w1, [sp, #96]
  401fe8:	ldurb	w6, [x29, #-147]
  401fec:	ldur	w7, [x29, #-152]
  401ff0:	ldur	x10, [x29, #-160]
  401ff4:	ldr	x2, [sp, #80]
  401ff8:	mov	w3, #0x171                 	// #369
  401ffc:	ldr	x4, [sp, #72]
  402000:	adrp	x5, 403000 <save_state_write_one+0xf0>
  402004:	add	x5, x5, #0xffd
  402008:	mov	x11, sp
  40200c:	str	x10, [x11]
  402010:	bl	4011c0 <log_internal_realm@plt>
  402014:	str	w0, [sp, #8]
  402018:	b	402030 <run+0x9fc>
  40201c:	ldr	w0, [sp, #96]
  402020:	bl	4011d0 <abs@plt>
  402024:	mov	w8, wzr
  402028:	subs	w8, w8, w0, uxtb
  40202c:	str	w8, [sp, #8]
  402030:	ldr	w8, [sp, #8]
  402034:	str	w8, [sp, #88]
  402038:	b	401a88 <run+0x454>
  40203c:	stur	wzr, [x29, #-4]
  402040:	mov	w8, #0x1                   	// #1
  402044:	stur	w8, [x29, #-64]
  402048:	sub	x0, x29, #0x20
  40204c:	bl	4020e4 <context_save_and_clear>
  402050:	ldur	w0, [x29, #-4]
  402054:	ldr	x28, [sp, #416]
  402058:	ldp	x29, x30, [sp, #400]
  40205c:	add	sp, sp, #0x1b0
  402060:	ret

0000000000402064 <static_destruct>:
  402064:	sub	sp, sp, #0x20
  402068:	stp	x29, x30, [sp, #16]
  40206c:	add	x29, sp, #0x10
  402070:	adrp	x8, 41f000 <__FRAME_END__+0x1a9f0>
  402074:	ldr	x8, [x8, #3736]
  402078:	str	x8, [sp]
  40207c:	cbnz	x8, 402084 <static_destruct+0x20>
  402080:	b	4020d8 <static_destruct+0x74>
  402084:	ldr	x0, [sp]
  402088:	mov	x1, #0x8                   	// #8
  40208c:	bl	403c50 <ALIGN_TO>
  402090:	str	x0, [sp, #8]
  402094:	ldr	x8, [sp, #8]
  402098:	adrp	x9, 41f000 <__FRAME_END__+0x1a9f0>
  40209c:	ldr	x9, [x9, #3744]
  4020a0:	cmp	x8, x9
  4020a4:	b.cs	4020d8 <static_destruct+0x74>  // b.hs, b.nlast
  4020a8:	ldr	x8, [sp, #8]
  4020ac:	ldr	x8, [x8, #8]
  4020b0:	ldr	x9, [sp, #8]
  4020b4:	ldr	x0, [x9]
  4020b8:	blr	x8
  4020bc:	ldr	x8, [sp, #8]
  4020c0:	add	x8, x8, #0x10
  4020c4:	mov	x0, x8
  4020c8:	mov	x1, #0x8                   	// #8
  4020cc:	bl	403c50 <ALIGN_TO>
  4020d0:	str	x0, [sp, #8]
  4020d4:	b	402094 <static_destruct+0x30>
  4020d8:	ldp	x29, x30, [sp, #16]
  4020dc:	add	sp, sp, #0x20
  4020e0:	ret

00000000004020e4 <context_save_and_clear>:
  4020e4:	sub	sp, sp, #0x40
  4020e8:	stp	x29, x30, [sp, #48]
  4020ec:	add	x29, sp, #0x30
  4020f0:	adrp	x8, 403000 <save_state_write_one+0xf0>
  4020f4:	add	x8, x8, #0xd40
  4020f8:	add	x8, x8, #0x3
  4020fc:	adrp	x9, 404000 <_fini+0x2fc>
  402100:	add	x9, x9, #0x45
  402104:	stur	x0, [x29, #-8]
  402108:	str	x8, [sp, #8]
  40210c:	str	x9, [sp]
  402110:	ldur	x8, [x29, #-8]
  402114:	cmp	x8, #0x0
  402118:	cset	w9, ne  // ne = any
  40211c:	mov	w10, #0x1                   	// #1
  402120:	eor	w9, w9, #0x1
  402124:	eor	w9, w9, w10
  402128:	eor	w9, w9, w10
  40212c:	and	w9, w9, #0x1
  402130:	mov	w0, w9
  402134:	sxtw	x8, w0
  402138:	cbz	x8, 40215c <context_save_and_clear+0x78>
  40213c:	mov	w8, wzr
  402140:	mov	w0, w8
  402144:	adrp	x1, 404000 <_fini+0x2fc>
  402148:	add	x1, x1, #0x43
  40214c:	ldr	x2, [sp, #8]
  402150:	mov	w3, #0x104                 	// #260
  402154:	ldr	x4, [sp]
  402158:	bl	401270 <log_assert_failed_realm@plt>
  40215c:	ldur	x8, [x29, #-8]
  402160:	ldr	x8, [x8]
  402164:	stur	x8, [x29, #-16]
  402168:	cbz	x8, 40229c <context_save_and_clear+0x1b8>
  40216c:	ldur	x8, [x29, #-8]
  402170:	str	x8, [sp, #24]
  402174:	ldur	x8, [x29, #-16]
  402178:	str	x8, [sp, #16]
  40217c:	ldr	x8, [sp, #16]
  402180:	cmp	x8, #0x0
  402184:	cset	w9, ne  // ne = any
  402188:	mov	w10, #0x1                   	// #1
  40218c:	eor	w9, w9, #0x1
  402190:	eor	w9, w9, w10
  402194:	eor	w9, w9, w10
  402198:	and	w9, w9, #0x1
  40219c:	mov	w0, w9
  4021a0:	sxtw	x8, w0
  4021a4:	cbz	x8, 4021c8 <context_save_and_clear+0xe4>
  4021a8:	mov	w8, wzr
  4021ac:	mov	w0, w8
  4021b0:	adrp	x1, 404000 <_fini+0x2fc>
  4021b4:	add	x1, x1, #0x6c
  4021b8:	ldr	x2, [sp, #8]
  4021bc:	mov	w3, #0x107                 	// #263
  4021c0:	ldr	x4, [sp]
  4021c4:	bl	401270 <log_assert_failed_realm@plt>
  4021c8:	ldr	x8, [sp, #16]
  4021cc:	ldr	x8, [x8]
  4021d0:	cbz	x8, 4021e8 <context_save_and_clear+0x104>
  4021d4:	ldr	x8, [sp, #16]
  4021d8:	ldr	x8, [x8, #8]
  4021dc:	ldr	x9, [sp, #16]
  4021e0:	ldr	x9, [x9]
  4021e4:	str	x8, [x9, #8]
  4021e8:	ldr	x8, [sp, #16]
  4021ec:	ldr	x8, [x8, #8]
  4021f0:	cbz	x8, 40220c <context_save_and_clear+0x128>
  4021f4:	ldr	x8, [sp, #16]
  4021f8:	ldr	x8, [x8]
  4021fc:	ldr	x9, [sp, #16]
  402200:	ldr	x9, [x9, #8]
  402204:	str	x8, [x9]
  402208:	b	402270 <context_save_and_clear+0x18c>
  40220c:	ldr	x8, [sp, #24]
  402210:	ldr	x8, [x8]
  402214:	ldr	x9, [sp, #16]
  402218:	cmp	x8, x9
  40221c:	cset	w10, eq  // eq = none
  402220:	mov	w11, #0x1                   	// #1
  402224:	eor	w10, w10, #0x1
  402228:	eor	w10, w10, w11
  40222c:	eor	w10, w10, w11
  402230:	and	w10, w10, #0x1
  402234:	mov	w0, w10
  402238:	sxtw	x8, w0
  40223c:	cbz	x8, 402260 <context_save_and_clear+0x17c>
  402240:	mov	w8, wzr
  402244:	mov	w0, w8
  402248:	adrp	x1, 404000 <_fini+0x2fc>
  40224c:	add	x1, x1, #0x72
  402250:	ldr	x2, [sp, #8]
  402254:	mov	w3, #0x107                 	// #263
  402258:	ldr	x4, [sp]
  40225c:	bl	401270 <log_assert_failed_realm@plt>
  402260:	ldr	x8, [sp, #16]
  402264:	ldr	x8, [x8]
  402268:	ldr	x9, [sp, #24]
  40226c:	str	x8, [x9]
  402270:	ldr	x8, [sp, #16]
  402274:	mov	x9, xzr
  402278:	str	x9, [x8, #8]
  40227c:	ldr	x8, [sp, #16]
  402280:	str	x9, [x8]
  402284:	ldur	x0, [x29, #-16]
  402288:	bl	402f10 <save_state_write_one>
  40228c:	ldur	x8, [x29, #-16]
  402290:	mov	x0, x8
  402294:	bl	4030e8 <write_queue_item_free>
  402298:	b	40215c <context_save_and_clear+0x78>
  40229c:	ldur	x8, [x29, #-8]
  4022a0:	ldr	w0, [x8, #8]
  4022a4:	bl	401280 <safe_close@plt>
  4022a8:	ldp	x29, x30, [sp, #48]
  4022ac:	add	sp, sp, #0x40
  4022b0:	ret

00000000004022b4 <rfkill_type_to_string>:
  4022b4:	sub	sp, sp, #0x10
  4022b8:	str	w0, [sp, #4]
  4022bc:	ldr	w8, [sp, #4]
  4022c0:	cmp	w8, #0x0
  4022c4:	cset	w8, lt  // lt = tstop
  4022c8:	tbnz	w8, #0, 4022d8 <rfkill_type_to_string+0x24>
  4022cc:	ldr	w8, [sp, #4]
  4022d0:	cmp	w8, #0x9
  4022d4:	b.lt	4022e4 <rfkill_type_to_string+0x30>  // b.tstop
  4022d8:	mov	x8, xzr
  4022dc:	str	x8, [sp, #8]
  4022e0:	b	402304 <rfkill_type_to_string+0x50>
  4022e4:	ldrsw	x8, [sp, #4]
  4022e8:	mov	x9, #0x8                   	// #8
  4022ec:	mul	x8, x9, x8
  4022f0:	adrp	x9, 404000 <_fini+0x2fc>
  4022f4:	add	x9, x9, #0x480
  4022f8:	add	x8, x9, x8
  4022fc:	ldr	x8, [x8]
  402300:	str	x8, [sp, #8]
  402304:	ldr	x0, [sp, #8]
  402308:	add	sp, sp, #0x10
  40230c:	ret

0000000000402310 <load_state>:
  402310:	sub	sp, sp, #0x160
  402314:	stp	x29, x30, [sp, #320]
  402318:	str	x28, [sp, #336]
  40231c:	add	x29, sp, #0x140
  402320:	mov	x8, xzr
  402324:	adrp	x9, 403000 <save_state_write_one+0xf0>
  402328:	add	x9, x9, #0xd40
  40232c:	add	x9, x9, #0x3
  402330:	adrp	x10, 404000 <_fini+0x2fc>
  402334:	add	x10, x10, #0x151
  402338:	adrp	x11, 404000 <_fini+0x2fc>
  40233c:	add	x11, x11, #0x102
  402340:	stur	x0, [x29, #-16]
  402344:	stur	x1, [x29, #-24]
  402348:	stur	x8, [x29, #-32]
  40234c:	stur	x8, [x29, #-40]
  402350:	str	x9, [sp, #120]
  402354:	str	x10, [sp, #112]
  402358:	str	x11, [sp, #104]
  40235c:	ldur	x8, [x29, #-16]
  402360:	cmp	x8, #0x0
  402364:	cset	w9, ne  // ne = any
  402368:	mov	w10, #0x1                   	// #1
  40236c:	eor	w9, w9, #0x1
  402370:	eor	w9, w9, w10
  402374:	eor	w9, w9, w10
  402378:	and	w9, w9, #0x1
  40237c:	mov	w0, w9
  402380:	sxtw	x8, w0
  402384:	cbz	x8, 4023a8 <load_state+0x98>
  402388:	mov	w8, wzr
  40238c:	mov	w0, w8
  402390:	adrp	x1, 404000 <_fini+0x2fc>
  402394:	add	x1, x1, #0x43
  402398:	ldr	x2, [sp, #120]
  40239c:	mov	w3, #0x8e                  	// #142
  4023a0:	ldr	x4, [sp, #104]
  4023a4:	bl	401270 <log_assert_failed_realm@plt>
  4023a8:	ldur	x8, [x29, #-16]
  4023ac:	ldr	w9, [x8, #8]
  4023b0:	cmp	w9, #0x0
  4023b4:	cset	w9, ge  // ge = tcont
  4023b8:	mov	w10, #0x1                   	// #1
  4023bc:	eor	w9, w9, #0x1
  4023c0:	eor	w9, w9, w10
  4023c4:	eor	w9, w9, w10
  4023c8:	and	w9, w9, #0x1
  4023cc:	mov	w0, w9
  4023d0:	sxtw	x8, w0
  4023d4:	cbz	x8, 4023f8 <load_state+0xe8>
  4023d8:	mov	w8, wzr
  4023dc:	mov	w0, w8
  4023e0:	adrp	x1, 404000 <_fini+0x2fc>
  4023e4:	add	x1, x1, #0x139
  4023e8:	ldr	x2, [sp, #120]
  4023ec:	mov	w3, #0x8f                  	// #143
  4023f0:	ldr	x4, [sp, #104]
  4023f4:	bl	401270 <log_assert_failed_realm@plt>
  4023f8:	ldur	x8, [x29, #-24]
  4023fc:	cmp	x8, #0x0
  402400:	cset	w9, ne  // ne = any
  402404:	mov	w10, #0x1                   	// #1
  402408:	eor	w9, w9, #0x1
  40240c:	eor	w9, w9, w10
  402410:	eor	w9, w9, w10
  402414:	and	w9, w9, #0x1
  402418:	mov	w0, w9
  40241c:	sxtw	x8, w0
  402420:	cbz	x8, 402444 <load_state+0x134>
  402424:	mov	w8, wzr
  402428:	mov	w0, w8
  40242c:	adrp	x1, 404000 <_fini+0x2fc>
  402430:	add	x1, x1, #0x14b
  402434:	ldr	x2, [sp, #120]
  402438:	mov	w3, #0x90                  	// #144
  40243c:	ldr	x4, [sp, #104]
  402440:	bl	401270 <log_assert_failed_realm@plt>
  402444:	bl	401290 <shall_restore_state@plt>
  402448:	cbnz	w0, 40245c <load_state+0x14c>
  40244c:	stur	wzr, [x29, #-4]
  402450:	mov	w8, #0x1                   	// #1
  402454:	stur	w8, [x29, #-68]
  402458:	b	402a30 <load_state+0x720>
  40245c:	ldur	x0, [x29, #-24]
  402460:	sub	x1, x29, #0x20
  402464:	bl	4031f8 <determine_state_file>
  402468:	stur	w0, [x29, #-64]
  40246c:	ldur	w8, [x29, #-64]
  402470:	cmp	w8, #0x0
  402474:	cset	w8, ge  // ge = tcont
  402478:	tbnz	w8, #0, 402490 <load_state+0x180>
  40247c:	ldur	w8, [x29, #-64]
  402480:	stur	w8, [x29, #-4]
  402484:	mov	w8, #0x1                   	// #1
  402488:	stur	w8, [x29, #-68]
  40248c:	b	402a30 <load_state+0x720>
  402490:	ldur	x0, [x29, #-32]
  402494:	sub	x1, x29, #0x28
  402498:	bl	4012a0 <read_one_line_file@plt>
  40249c:	stur	w0, [x29, #-64]
  4024a0:	mov	w8, #0x0                   	// #0
  4024a4:	sturb	w8, [x29, #-69]
  4024a8:	ldur	w8, [x29, #-64]
  4024ac:	mov	w9, #0xfffffffe            	// #-2
  4024b0:	cmp	w8, w9
  4024b4:	str	w8, [sp, #100]
  4024b8:	b.eq	4024d8 <load_state+0x1c8>  // b.none
  4024bc:	b	4024c0 <load_state+0x1b0>
  4024c0:	ldr	w8, [sp, #100]
  4024c4:	cmp	w8, #0x0
  4024c8:	cset	w9, eq  // eq = none
  4024cc:	eor	w9, w9, #0x1
  4024d0:	tbnz	w9, #0, 4024e4 <load_state+0x1d4>
  4024d4:	b	4024d8 <load_state+0x1c8>
  4024d8:	mov	w8, #0x1                   	// #1
  4024dc:	sturb	w8, [x29, #-69]
  4024e0:	b	4024e4 <load_state+0x1d4>
  4024e4:	ldurb	w8, [x29, #-69]
  4024e8:	and	w8, w8, #0x1
  4024ec:	sturb	w8, [x29, #-70]
  4024f0:	ldurb	w8, [x29, #-70]
  4024f4:	tbnz	w8, #0, 4024fc <load_state+0x1ec>
  4024f8:	b	40269c <load_state+0x38c>
  4024fc:	ldur	x0, [x29, #-32]
  402500:	ldur	x8, [x29, #-24]
  402504:	ldrb	w9, [x8, #6]
  402508:	cmp	w9, #0x0
  40250c:	cset	w9, ne  // ne = any
  402510:	and	w9, w9, #0x1
  402514:	str	x0, [sp, #88]
  402518:	mov	w0, w9
  40251c:	bl	403170 <one_zero>
  402520:	ldr	x8, [sp, #88]
  402524:	str	x0, [sp, #80]
  402528:	mov	x0, x8
  40252c:	ldr	x1, [sp, #80]
  402530:	mov	w2, #0x83                  	// #131
  402534:	bl	403134 <write_string_file>
  402538:	stur	w0, [x29, #-64]
  40253c:	ldur	w9, [x29, #-64]
  402540:	cmp	w9, #0x0
  402544:	cset	w9, ge  // ge = tcont
  402548:	tbnz	w9, #0, 4025dc <load_state+0x2cc>
  40254c:	mov	w8, #0x3                   	// #3
  402550:	stur	w8, [x29, #-76]
  402554:	ldur	w8, [x29, #-64]
  402558:	stur	w8, [x29, #-80]
  40255c:	stur	wzr, [x29, #-84]
  402560:	ldur	w0, [x29, #-84]
  402564:	bl	4011b0 <log_get_max_level_realm@plt>
  402568:	ldur	w8, [x29, #-76]
  40256c:	and	w8, w8, #0x7
  402570:	cmp	w0, w8
  402574:	b.lt	4025ac <load_state+0x29c>  // b.tstop
  402578:	ldur	w8, [x29, #-84]
  40257c:	ldur	w9, [x29, #-76]
  402580:	orr	w0, w9, w8, lsl #10
  402584:	ldur	w1, [x29, #-80]
  402588:	ldur	x6, [x29, #-32]
  40258c:	ldr	x2, [sp, #120]
  402590:	mov	w3, #0x9f                  	// #159
  402594:	ldr	x4, [sp, #112]
  402598:	adrp	x5, 404000 <_fini+0x2fc>
  40259c:	add	x5, x5, #0x97
  4025a0:	bl	4011c0 <log_internal_realm@plt>
  4025a4:	str	w0, [sp, #76]
  4025a8:	b	4025c0 <load_state+0x2b0>
  4025ac:	ldur	w0, [x29, #-80]
  4025b0:	bl	4011d0 <abs@plt>
  4025b4:	mov	w8, wzr
  4025b8:	subs	w8, w8, w0, uxtb
  4025bc:	str	w8, [sp, #76]
  4025c0:	ldr	w8, [sp, #76]
  4025c4:	stur	w8, [x29, #-88]
  4025c8:	ldur	w8, [x29, #-88]
  4025cc:	stur	w8, [x29, #-4]
  4025d0:	mov	w8, #0x1                   	// #1
  4025d4:	stur	w8, [x29, #-68]
  4025d8:	b	402a30 <load_state+0x720>
  4025dc:	mov	w8, #0x7                   	// #7
  4025e0:	stur	w8, [x29, #-92]
  4025e4:	stur	wzr, [x29, #-96]
  4025e8:	stur	wzr, [x29, #-100]
  4025ec:	ldur	w0, [x29, #-100]
  4025f0:	bl	4011b0 <log_get_max_level_realm@plt>
  4025f4:	ldur	w8, [x29, #-92]
  4025f8:	and	w8, w8, #0x7
  4025fc:	cmp	w0, w8
  402600:	b.lt	402670 <load_state+0x360>  // b.tstop
  402604:	ldur	w8, [x29, #-100]
  402608:	ldur	w9, [x29, #-92]
  40260c:	orr	w0, w9, w8, lsl #10
  402610:	ldur	w1, [x29, #-96]
  402614:	ldur	x10, [x29, #-24]
  402618:	ldrb	w8, [x10, #6]
  40261c:	cmp	w8, #0x0
  402620:	cset	w8, ne  // ne = any
  402624:	and	w8, w8, #0x1
  402628:	str	w0, [sp, #72]
  40262c:	mov	w0, w8
  402630:	str	w1, [sp, #68]
  402634:	bl	403170 <one_zero>
  402638:	ldur	x7, [x29, #-32]
  40263c:	ldr	w8, [sp, #72]
  402640:	str	x0, [sp, #56]
  402644:	mov	w0, w8
  402648:	ldr	w1, [sp, #68]
  40264c:	ldr	x2, [sp, #120]
  402650:	mov	w3, #0xa1                  	// #161
  402654:	ldr	x4, [sp, #112]
  402658:	adrp	x5, 404000 <_fini+0x2fc>
  40265c:	add	x5, x5, #0xb9
  402660:	ldr	x6, [sp, #56]
  402664:	bl	4011c0 <log_internal_realm@plt>
  402668:	str	w0, [sp, #52]
  40266c:	b	402684 <load_state+0x374>
  402670:	ldur	w0, [x29, #-96]
  402674:	bl	4011d0 <abs@plt>
  402678:	mov	w8, wzr
  40267c:	subs	w8, w8, w0, uxtb
  402680:	str	w8, [sp, #52]
  402684:	ldr	w8, [sp, #52]
  402688:	stur	w8, [x29, #-104]
  40268c:	stur	wzr, [x29, #-4]
  402690:	mov	w8, #0x1                   	// #1
  402694:	stur	w8, [x29, #-68]
  402698:	b	402a30 <load_state+0x720>
  40269c:	ldur	w8, [x29, #-64]
  4026a0:	cmp	w8, #0x0
  4026a4:	cset	w8, ge  // ge = tcont
  4026a8:	tbnz	w8, #0, 40273c <load_state+0x42c>
  4026ac:	mov	w8, #0x3                   	// #3
  4026b0:	stur	w8, [x29, #-108]
  4026b4:	ldur	w8, [x29, #-64]
  4026b8:	stur	w8, [x29, #-112]
  4026bc:	stur	wzr, [x29, #-116]
  4026c0:	ldur	w0, [x29, #-116]
  4026c4:	bl	4011b0 <log_get_max_level_realm@plt>
  4026c8:	ldur	w8, [x29, #-108]
  4026cc:	and	w8, w8, #0x7
  4026d0:	cmp	w0, w8
  4026d4:	b.lt	40270c <load_state+0x3fc>  // b.tstop
  4026d8:	ldur	w8, [x29, #-116]
  4026dc:	ldur	w9, [x29, #-108]
  4026e0:	orr	w0, w9, w8, lsl #10
  4026e4:	ldur	w1, [x29, #-112]
  4026e8:	ldur	x6, [x29, #-32]
  4026ec:	ldr	x2, [sp, #120]
  4026f0:	mov	w3, #0xa5                  	// #165
  4026f4:	ldr	x4, [sp, #112]
  4026f8:	adrp	x5, 404000 <_fini+0x2fc>
  4026fc:	add	x5, x5, #0x15c
  402700:	bl	4011c0 <log_internal_realm@plt>
  402704:	str	w0, [sp, #48]
  402708:	b	402720 <load_state+0x410>
  40270c:	ldur	w0, [x29, #-112]
  402710:	bl	4011d0 <abs@plt>
  402714:	mov	w8, wzr
  402718:	subs	w8, w8, w0, uxtb
  40271c:	str	w8, [sp, #48]
  402720:	ldr	w8, [sp, #48]
  402724:	stur	w8, [x29, #-120]
  402728:	ldur	w8, [x29, #-120]
  40272c:	stur	w8, [x29, #-4]
  402730:	mov	w8, #0x1                   	// #1
  402734:	stur	w8, [x29, #-68]
  402738:	b	402a30 <load_state+0x720>
  40273c:	ldur	x0, [x29, #-40]
  402740:	bl	4012b0 <parse_boolean@plt>
  402744:	stur	w0, [x29, #-60]
  402748:	ldur	w8, [x29, #-60]
  40274c:	cmp	w8, #0x0
  402750:	cset	w8, ge  // ge = tcont
  402754:	tbnz	w8, #0, 4027e8 <load_state+0x4d8>
  402758:	mov	w8, #0x3                   	// #3
  40275c:	stur	w8, [x29, #-124]
  402760:	ldur	w8, [x29, #-60]
  402764:	stur	w8, [x29, #-128]
  402768:	stur	wzr, [x29, #-132]
  40276c:	ldur	w0, [x29, #-132]
  402770:	bl	4011b0 <log_get_max_level_realm@plt>
  402774:	ldur	w8, [x29, #-124]
  402778:	and	w8, w8, #0x7
  40277c:	cmp	w0, w8
  402780:	b.lt	4027b8 <load_state+0x4a8>  // b.tstop
  402784:	ldur	w8, [x29, #-132]
  402788:	ldur	w9, [x29, #-124]
  40278c:	orr	w0, w9, w8, lsl #10
  402790:	ldur	w1, [x29, #-128]
  402794:	ldur	x6, [x29, #-32]
  402798:	ldr	x2, [sp, #120]
  40279c:	mov	w3, #0xa9                  	// #169
  4027a0:	ldr	x4, [sp, #112]
  4027a4:	adrp	x5, 404000 <_fini+0x2fc>
  4027a8:	add	x5, x5, #0x17d
  4027ac:	bl	4011c0 <log_internal_realm@plt>
  4027b0:	str	w0, [sp, #44]
  4027b4:	b	4027cc <load_state+0x4bc>
  4027b8:	ldur	w0, [x29, #-128]
  4027bc:	bl	4011d0 <abs@plt>
  4027c0:	mov	w8, wzr
  4027c4:	subs	w8, w8, w0, uxtb
  4027c8:	str	w8, [sp, #44]
  4027cc:	ldr	w8, [sp, #44]
  4027d0:	stur	w8, [x29, #-136]
  4027d4:	ldur	w8, [x29, #-136]
  4027d8:	stur	w8, [x29, #-4]
  4027dc:	mov	w8, #0x1                   	// #1
  4027e0:	stur	w8, [x29, #-68]
  4027e4:	b	402a30 <load_state+0x720>
  4027e8:	ldur	x8, [x29, #-24]
  4027ec:	ldr	w9, [x8]
  4027f0:	sub	x8, x29, #0x90
  4027f4:	stur	w9, [x29, #-144]
  4027f8:	mov	w9, #0x0                   	// #0
  4027fc:	strb	w9, [x8, #4]
  402800:	mov	w10, #0x2                   	// #2
  402804:	strb	w10, [x8, #5]
  402808:	ldur	w10, [x29, #-60]
  40280c:	strb	w10, [x8, #6]
  402810:	strb	w9, [x8, #7]
  402814:	ldur	x8, [x29, #-144]
  402818:	sub	x1, x29, #0x30
  40281c:	stur	x8, [x29, #-48]
  402820:	ldur	x8, [x29, #-16]
  402824:	ldr	w0, [x8, #8]
  402828:	mov	x2, #0x8                   	// #8
  40282c:	bl	4012c0 <write@plt>
  402830:	stur	x0, [x29, #-56]
  402834:	ldur	x8, [x29, #-56]
  402838:	cmp	x8, #0x0
  40283c:	cset	w9, ge  // ge = tcont
  402840:	tbnz	w9, #0, 4028dc <load_state+0x5cc>
  402844:	mov	w8, #0x3                   	// #3
  402848:	stur	w8, [x29, #-148]
  40284c:	bl	401220 <__errno_location@plt>
  402850:	ldr	w8, [x0]
  402854:	stur	w8, [x29, #-152]
  402858:	stur	wzr, [x29, #-156]
  40285c:	ldur	w0, [x29, #-156]
  402860:	bl	4011b0 <log_get_max_level_realm@plt>
  402864:	ldur	w8, [x29, #-148]
  402868:	and	w8, w8, #0x7
  40286c:	cmp	w0, w8
  402870:	b.lt	4028ac <load_state+0x59c>  // b.tstop
  402874:	ldur	w8, [x29, #-156]
  402878:	ldur	w9, [x29, #-148]
  40287c:	orr	w0, w9, w8, lsl #10
  402880:	ldur	w1, [x29, #-152]
  402884:	ldur	x10, [x29, #-24]
  402888:	ldr	w6, [x10]
  40288c:	ldr	x2, [sp, #120]
  402890:	mov	w3, #0xb3                  	// #179
  402894:	ldr	x4, [sp, #112]
  402898:	adrp	x5, 404000 <_fini+0x2fc>
  40289c:	add	x5, x5, #0x19f
  4028a0:	bl	4011c0 <log_internal_realm@plt>
  4028a4:	str	w0, [sp, #40]
  4028a8:	b	4028c0 <load_state+0x5b0>
  4028ac:	ldur	w0, [x29, #-152]
  4028b0:	bl	4011d0 <abs@plt>
  4028b4:	mov	w8, wzr
  4028b8:	subs	w8, w8, w0, uxtb
  4028bc:	str	w8, [sp, #40]
  4028c0:	ldr	w8, [sp, #40]
  4028c4:	str	w8, [sp, #160]
  4028c8:	ldr	w8, [sp, #160]
  4028cc:	stur	w8, [x29, #-4]
  4028d0:	mov	w8, #0x1                   	// #1
  4028d4:	stur	w8, [x29, #-68]
  4028d8:	b	402a30 <load_state+0x720>
  4028dc:	ldur	x8, [x29, #-56]
  4028e0:	cmp	x8, #0x8
  4028e4:	b.eq	402978 <load_state+0x668>  // b.none
  4028e8:	mov	w8, #0x3                   	// #3
  4028ec:	str	w8, [sp, #156]
  4028f0:	mov	w8, #0x5                   	// #5
  4028f4:	movk	w8, #0x4000, lsl #16
  4028f8:	str	w8, [sp, #152]
  4028fc:	str	wzr, [sp, #148]
  402900:	ldr	w0, [sp, #148]
  402904:	bl	4011b0 <log_get_max_level_realm@plt>
  402908:	ldr	w8, [sp, #156]
  40290c:	and	w8, w8, #0x7
  402910:	cmp	w0, w8
  402914:	b.lt	402948 <load_state+0x638>  // b.tstop
  402918:	ldr	w8, [sp, #148]
  40291c:	ldr	w9, [sp, #156]
  402920:	orr	w0, w9, w8, lsl #10
  402924:	ldr	w1, [sp, #152]
  402928:	ldr	x2, [sp, #120]
  40292c:	mov	w3, #0xb6                  	// #182
  402930:	ldr	x4, [sp, #112]
  402934:	adrp	x5, 404000 <_fini+0x2fc>
  402938:	add	x5, x5, #0x1c9
  40293c:	bl	4011c0 <log_internal_realm@plt>
  402940:	str	w0, [sp, #36]
  402944:	b	40295c <load_state+0x64c>
  402948:	ldr	w0, [sp, #152]
  40294c:	bl	4011d0 <abs@plt>
  402950:	mov	w8, wzr
  402954:	subs	w8, w8, w0, uxtb
  402958:	str	w8, [sp, #36]
  40295c:	ldr	w8, [sp, #36]
  402960:	str	w8, [sp, #144]
  402964:	ldr	w8, [sp, #144]
  402968:	stur	w8, [x29, #-4]
  40296c:	mov	w8, #0x1                   	// #1
  402970:	stur	w8, [x29, #-68]
  402974:	b	402a30 <load_state+0x720>
  402978:	mov	w8, #0x7                   	// #7
  40297c:	str	w8, [sp, #140]
  402980:	str	wzr, [sp, #136]
  402984:	str	wzr, [sp, #132]
  402988:	ldr	w0, [sp, #132]
  40298c:	bl	4011b0 <log_get_max_level_realm@plt>
  402990:	ldr	w8, [sp, #140]
  402994:	and	w8, w8, #0x7
  402998:	cmp	w0, w8
  40299c:	b.lt	402a08 <load_state+0x6f8>  // b.tstop
  4029a0:	ldr	w8, [sp, #132]
  4029a4:	ldr	w9, [sp, #140]
  4029a8:	orr	w0, w9, w8, lsl #10
  4029ac:	ldr	w1, [sp, #136]
  4029b0:	ldur	w8, [x29, #-60]
  4029b4:	cmp	w8, #0x0
  4029b8:	cset	w8, ne  // ne = any
  4029bc:	and	w8, w8, #0x1
  4029c0:	str	w0, [sp, #32]
  4029c4:	mov	w0, w8
  4029c8:	str	w1, [sp, #28]
  4029cc:	bl	403170 <one_zero>
  4029d0:	ldur	x7, [x29, #-32]
  4029d4:	ldr	w8, [sp, #32]
  4029d8:	str	x0, [sp, #16]
  4029dc:	mov	w0, w8
  4029e0:	ldr	w1, [sp, #28]
  4029e4:	ldr	x2, [sp, #120]
  4029e8:	mov	w3, #0xb8                  	// #184
  4029ec:	ldr	x4, [sp, #112]
  4029f0:	adrp	x5, 404000 <_fini+0x2fc>
  4029f4:	add	x5, x5, #0x1fb
  4029f8:	ldr	x6, [sp, #16]
  4029fc:	bl	4011c0 <log_internal_realm@plt>
  402a00:	str	w0, [sp, #12]
  402a04:	b	402a1c <load_state+0x70c>
  402a08:	ldr	w0, [sp, #136]
  402a0c:	bl	4011d0 <abs@plt>
  402a10:	mov	w8, wzr
  402a14:	subs	w8, w8, w0, uxtb
  402a18:	str	w8, [sp, #12]
  402a1c:	ldr	w8, [sp, #12]
  402a20:	str	w8, [sp, #128]
  402a24:	stur	wzr, [x29, #-4]
  402a28:	mov	w8, #0x1                   	// #1
  402a2c:	stur	w8, [x29, #-68]
  402a30:	sub	x0, x29, #0x28
  402a34:	bl	4031d0 <freep>
  402a38:	sub	x0, x29, #0x20
  402a3c:	bl	4031d0 <freep>
  402a40:	ldur	w0, [x29, #-4]
  402a44:	ldr	x28, [sp, #336]
  402a48:	ldp	x29, x30, [sp, #320]
  402a4c:	add	sp, sp, #0x160
  402a50:	ret

0000000000402a54 <save_state_cancel>:
  402a54:	sub	sp, sp, #0x50
  402a58:	stp	x29, x30, [sp, #64]
  402a5c:	add	x29, sp, #0x40
  402a60:	mov	x8, xzr
  402a64:	adrp	x9, 403000 <save_state_write_one+0xf0>
  402a68:	add	x9, x9, #0xd40
  402a6c:	add	x9, x9, #0x3
  402a70:	adrp	x10, 404000 <_fini+0x2fc>
  402a74:	add	x10, x10, #0x380
  402a78:	stur	x0, [x29, #-16]
  402a7c:	stur	x1, [x29, #-24]
  402a80:	str	x8, [sp, #32]
  402a84:	str	x9, [sp, #16]
  402a88:	str	x10, [sp, #8]
  402a8c:	ldur	x8, [x29, #-16]
  402a90:	cmp	x8, #0x0
  402a94:	cset	w9, ne  // ne = any
  402a98:	mov	w10, #0x1                   	// #1
  402a9c:	eor	w9, w9, #0x1
  402aa0:	eor	w9, w9, w10
  402aa4:	eor	w9, w9, w10
  402aa8:	and	w9, w9, #0x1
  402aac:	mov	w0, w9
  402ab0:	sxtw	x8, w0
  402ab4:	cbz	x8, 402ad8 <save_state_cancel+0x84>
  402ab8:	mov	w8, wzr
  402abc:	mov	w0, w8
  402ac0:	adrp	x1, 404000 <_fini+0x2fc>
  402ac4:	add	x1, x1, #0x43
  402ac8:	ldr	x2, [sp, #16]
  402acc:	mov	w3, #0xea                  	// #234
  402ad0:	ldr	x4, [sp, #8]
  402ad4:	bl	401270 <log_assert_failed_realm@plt>
  402ad8:	ldur	x8, [x29, #-16]
  402adc:	ldr	w9, [x8, #8]
  402ae0:	cmp	w9, #0x0
  402ae4:	cset	w9, ge  // ge = tcont
  402ae8:	mov	w10, #0x1                   	// #1
  402aec:	eor	w9, w9, #0x1
  402af0:	eor	w9, w9, w10
  402af4:	eor	w9, w9, w10
  402af8:	and	w9, w9, #0x1
  402afc:	mov	w0, w9
  402b00:	sxtw	x8, w0
  402b04:	cbz	x8, 402b28 <save_state_cancel+0xd4>
  402b08:	mov	w8, wzr
  402b0c:	mov	w0, w8
  402b10:	adrp	x1, 404000 <_fini+0x2fc>
  402b14:	add	x1, x1, #0x139
  402b18:	ldr	x2, [sp, #16]
  402b1c:	mov	w3, #0xeb                  	// #235
  402b20:	ldr	x4, [sp, #8]
  402b24:	bl	401270 <log_assert_failed_realm@plt>
  402b28:	ldur	x8, [x29, #-24]
  402b2c:	cmp	x8, #0x0
  402b30:	cset	w9, ne  // ne = any
  402b34:	mov	w10, #0x1                   	// #1
  402b38:	eor	w9, w9, #0x1
  402b3c:	eor	w9, w9, w10
  402b40:	eor	w9, w9, w10
  402b44:	and	w9, w9, #0x1
  402b48:	mov	w0, w9
  402b4c:	sxtw	x8, w0
  402b50:	cbz	x8, 402b74 <save_state_cancel+0x120>
  402b54:	mov	w8, wzr
  402b58:	mov	w0, w8
  402b5c:	adrp	x1, 404000 <_fini+0x2fc>
  402b60:	add	x1, x1, #0x14b
  402b64:	ldr	x2, [sp, #16]
  402b68:	mov	w3, #0xec                  	// #236
  402b6c:	ldr	x4, [sp, #8]
  402b70:	bl	401270 <log_assert_failed_realm@plt>
  402b74:	ldur	x0, [x29, #-24]
  402b78:	add	x1, sp, #0x20
  402b7c:	bl	4031f8 <determine_state_file>
  402b80:	str	w0, [sp, #28]
  402b84:	ldur	x0, [x29, #-16]
  402b88:	ldur	x8, [x29, #-24]
  402b8c:	ldr	w1, [x8]
  402b90:	ldr	x2, [sp, #32]
  402b94:	bl	403974 <save_state_queue_remove>
  402b98:	ldr	w9, [sp, #28]
  402b9c:	cmp	w9, #0x0
  402ba0:	cset	w9, ge  // ge = tcont
  402ba4:	tbnz	w9, #0, 402bbc <save_state_cancel+0x168>
  402ba8:	ldr	w8, [sp, #28]
  402bac:	stur	w8, [x29, #-4]
  402bb0:	mov	w8, #0x1                   	// #1
  402bb4:	str	w8, [sp, #24]
  402bb8:	b	402bc8 <save_state_cancel+0x174>
  402bbc:	stur	wzr, [x29, #-4]
  402bc0:	mov	w8, #0x1                   	// #1
  402bc4:	str	w8, [sp, #24]
  402bc8:	add	x0, sp, #0x20
  402bcc:	bl	4031d0 <freep>
  402bd0:	ldur	w0, [x29, #-4]
  402bd4:	ldp	x29, x30, [sp, #64]
  402bd8:	add	sp, sp, #0x50
  402bdc:	ret

0000000000402be0 <save_state_queue>:
  402be0:	sub	sp, sp, #0x90
  402be4:	stp	x29, x30, [sp, #128]
  402be8:	add	x29, sp, #0x80
  402bec:	mov	x8, xzr
  402bf0:	adrp	x9, 403000 <save_state_write_one+0xf0>
  402bf4:	add	x9, x9, #0xd40
  402bf8:	add	x9, x9, #0x3
  402bfc:	adrp	x10, 404000 <_fini+0x2fc>
  402c00:	add	x10, x10, #0x43d
  402c04:	stur	x0, [x29, #-16]
  402c08:	stur	x1, [x29, #-24]
  402c0c:	stur	x8, [x29, #-32]
  402c10:	str	x9, [sp, #8]
  402c14:	str	x10, [sp]
  402c18:	ldur	x8, [x29, #-16]
  402c1c:	cmp	x8, #0x0
  402c20:	cset	w9, ne  // ne = any
  402c24:	mov	w10, #0x1                   	// #1
  402c28:	eor	w9, w9, #0x1
  402c2c:	eor	w9, w9, w10
  402c30:	eor	w9, w9, w10
  402c34:	and	w9, w9, #0x1
  402c38:	mov	w0, w9
  402c3c:	sxtw	x8, w0
  402c40:	cbz	x8, 402c64 <save_state_queue+0x84>
  402c44:	mov	w8, wzr
  402c48:	mov	w0, w8
  402c4c:	adrp	x1, 404000 <_fini+0x2fc>
  402c50:	add	x1, x1, #0x43
  402c54:	ldr	x2, [sp, #8]
  402c58:	mov	w3, #0xcf                  	// #207
  402c5c:	ldr	x4, [sp]
  402c60:	bl	401270 <log_assert_failed_realm@plt>
  402c64:	ldur	x8, [x29, #-16]
  402c68:	ldr	w9, [x8, #8]
  402c6c:	cmp	w9, #0x0
  402c70:	cset	w9, ge  // ge = tcont
  402c74:	mov	w10, #0x1                   	// #1
  402c78:	eor	w9, w9, #0x1
  402c7c:	eor	w9, w9, w10
  402c80:	eor	w9, w9, w10
  402c84:	and	w9, w9, #0x1
  402c88:	mov	w0, w9
  402c8c:	sxtw	x8, w0
  402c90:	cbz	x8, 402cb4 <save_state_queue+0xd4>
  402c94:	mov	w8, wzr
  402c98:	mov	w0, w8
  402c9c:	adrp	x1, 404000 <_fini+0x2fc>
  402ca0:	add	x1, x1, #0x139
  402ca4:	ldr	x2, [sp, #8]
  402ca8:	mov	w3, #0xd0                  	// #208
  402cac:	ldr	x4, [sp]
  402cb0:	bl	401270 <log_assert_failed_realm@plt>
  402cb4:	ldur	x8, [x29, #-24]
  402cb8:	cmp	x8, #0x0
  402cbc:	cset	w9, ne  // ne = any
  402cc0:	mov	w10, #0x1                   	// #1
  402cc4:	eor	w9, w9, #0x1
  402cc8:	eor	w9, w9, w10
  402ccc:	eor	w9, w9, w10
  402cd0:	and	w9, w9, #0x1
  402cd4:	mov	w0, w9
  402cd8:	sxtw	x8, w0
  402cdc:	cbz	x8, 402d00 <save_state_queue+0x120>
  402ce0:	mov	w8, wzr
  402ce4:	mov	w0, w8
  402ce8:	adrp	x1, 404000 <_fini+0x2fc>
  402cec:	add	x1, x1, #0x14b
  402cf0:	ldr	x2, [sp, #8]
  402cf4:	mov	w3, #0xd1                  	// #209
  402cf8:	ldr	x4, [sp]
  402cfc:	bl	401270 <log_assert_failed_realm@plt>
  402d00:	ldur	x0, [x29, #-24]
  402d04:	sub	x1, x29, #0x20
  402d08:	bl	4031f8 <determine_state_file>
  402d0c:	stur	w0, [x29, #-44]
  402d10:	ldur	w8, [x29, #-44]
  402d14:	cmp	w8, #0x0
  402d18:	cset	w8, ge  // ge = tcont
  402d1c:	tbnz	w8, #0, 402d34 <save_state_queue+0x154>
  402d20:	ldur	w8, [x29, #-44]
  402d24:	stur	w8, [x29, #-4]
  402d28:	mov	w8, #0x1                   	// #1
  402d2c:	stur	w8, [x29, #-48]
  402d30:	b	402ef8 <save_state_queue+0x318>
  402d34:	ldur	x0, [x29, #-16]
  402d38:	ldur	x8, [x29, #-24]
  402d3c:	ldr	w1, [x8]
  402d40:	ldur	x2, [x29, #-32]
  402d44:	bl	403974 <save_state_queue_remove>
  402d48:	mov	x0, #0x1                   	// #1
  402d4c:	mov	x1, #0x28                  	// #40
  402d50:	bl	4012d0 <calloc@plt>
  402d54:	stur	x0, [x29, #-40]
  402d58:	ldur	x8, [x29, #-40]
  402d5c:	cbnz	x8, 402d74 <save_state_queue+0x194>
  402d60:	mov	w8, #0xfffffff4            	// #-12
  402d64:	stur	w8, [x29, #-4]
  402d68:	mov	w8, #0x1                   	// #1
  402d6c:	stur	w8, [x29, #-48]
  402d70:	b	402ef8 <save_state_queue+0x318>
  402d74:	ldur	x8, [x29, #-32]
  402d78:	stur	x8, [x29, #-56]
  402d7c:	mov	x8, xzr
  402d80:	stur	x8, [x29, #-32]
  402d84:	ldur	x8, [x29, #-56]
  402d88:	str	x8, [sp, #64]
  402d8c:	ldr	x8, [sp, #64]
  402d90:	ldur	x9, [x29, #-40]
  402d94:	str	x8, [x9, #24]
  402d98:	ldur	x8, [x29, #-24]
  402d9c:	ldr	w10, [x8]
  402da0:	ldur	x8, [x29, #-40]
  402da4:	str	w10, [x8, #16]
  402da8:	ldur	x8, [x29, #-24]
  402dac:	ldrb	w10, [x8, #6]
  402db0:	ldur	x8, [x29, #-40]
  402db4:	str	w10, [x8, #32]
  402db8:	ldur	x8, [x29, #-16]
  402dbc:	str	x8, [sp, #56]
  402dc0:	ldr	x8, [sp, #56]
  402dc4:	ldr	x8, [x8]
  402dc8:	str	x8, [sp, #40]
  402dcc:	ldr	x8, [sp, #40]
  402dd0:	cbnz	x8, 402de0 <save_state_queue+0x200>
  402dd4:	mov	x8, xzr
  402dd8:	str	x8, [sp, #48]
  402ddc:	b	402e04 <save_state_queue+0x224>
  402de0:	ldr	x8, [sp, #40]
  402de4:	ldr	x8, [x8]
  402de8:	cbz	x8, 402dfc <save_state_queue+0x21c>
  402dec:	ldr	x8, [sp, #40]
  402df0:	ldr	x8, [x8]
  402df4:	str	x8, [sp, #40]
  402df8:	b	402de0 <save_state_queue+0x200>
  402dfc:	ldr	x8, [sp, #40]
  402e00:	str	x8, [sp, #48]
  402e04:	ldr	x8, [sp, #56]
  402e08:	str	x8, [sp, #32]
  402e0c:	ldr	x8, [sp, #48]
  402e10:	str	x8, [sp, #24]
  402e14:	ldur	x8, [x29, #-40]
  402e18:	str	x8, [sp, #16]
  402e1c:	ldr	x8, [sp, #16]
  402e20:	cmp	x8, #0x0
  402e24:	cset	w9, ne  // ne = any
  402e28:	mov	w10, #0x1                   	// #1
  402e2c:	eor	w9, w9, #0x1
  402e30:	eor	w9, w9, w10
  402e34:	eor	w9, w9, w10
  402e38:	and	w9, w9, #0x1
  402e3c:	mov	w0, w9
  402e40:	sxtw	x8, w0
  402e44:	cbz	x8, 402e68 <save_state_queue+0x288>
  402e48:	mov	w8, wzr
  402e4c:	mov	w0, w8
  402e50:	adrp	x1, 404000 <_fini+0x2fc>
  402e54:	add	x1, x1, #0x47a
  402e58:	ldr	x2, [sp, #8]
  402e5c:	mov	w3, #0xe1                  	// #225
  402e60:	ldr	x4, [sp]
  402e64:	bl	401270 <log_assert_failed_realm@plt>
  402e68:	ldr	x8, [sp, #24]
  402e6c:	cbnz	x8, 402eb0 <save_state_queue+0x2d0>
  402e70:	ldr	x8, [sp, #32]
  402e74:	ldr	x8, [x8]
  402e78:	ldr	x9, [sp, #16]
  402e7c:	str	x8, [x9]
  402e80:	cbz	x8, 402e94 <save_state_queue+0x2b4>
  402e84:	ldr	x8, [sp, #16]
  402e88:	ldr	x9, [sp, #16]
  402e8c:	ldr	x9, [x9]
  402e90:	str	x8, [x9, #8]
  402e94:	ldr	x8, [sp, #16]
  402e98:	mov	x9, xzr
  402e9c:	str	x9, [x8, #8]
  402ea0:	ldr	x8, [sp, #16]
  402ea4:	ldr	x9, [sp, #32]
  402ea8:	str	x8, [x9]
  402eac:	b	402eec <save_state_queue+0x30c>
  402eb0:	ldr	x8, [sp, #24]
  402eb4:	ldr	x8, [x8]
  402eb8:	ldr	x9, [sp, #16]
  402ebc:	str	x8, [x9]
  402ec0:	cbz	x8, 402ed4 <save_state_queue+0x2f4>
  402ec4:	ldr	x8, [sp, #16]
  402ec8:	ldr	x9, [sp, #16]
  402ecc:	ldr	x9, [x9]
  402ed0:	str	x8, [x9, #8]
  402ed4:	ldr	x8, [sp, #24]
  402ed8:	ldr	x9, [sp, #16]
  402edc:	str	x8, [x9, #8]
  402ee0:	ldr	x8, [sp, #16]
  402ee4:	ldr	x9, [sp, #24]
  402ee8:	str	x8, [x9]
  402eec:	stur	wzr, [x29, #-4]
  402ef0:	mov	w8, #0x1                   	// #1
  402ef4:	stur	w8, [x29, #-48]
  402ef8:	sub	x0, x29, #0x20
  402efc:	bl	4031d0 <freep>
  402f00:	ldur	w0, [x29, #-4]
  402f04:	ldp	x29, x30, [sp, #128]
  402f08:	add	sp, sp, #0x90
  402f0c:	ret

0000000000402f10 <save_state_write_one>:
  402f10:	sub	sp, sp, #0x90
  402f14:	stp	x29, x30, [sp, #128]
  402f18:	add	x29, sp, #0x80
  402f1c:	mov	w2, #0x83                  	// #131
  402f20:	adrp	x8, 403000 <save_state_write_one+0xf0>
  402f24:	add	x8, x8, #0xd40
  402f28:	add	x8, x8, #0x3
  402f2c:	stur	x0, [x29, #-16]
  402f30:	ldur	x9, [x29, #-16]
  402f34:	ldr	x0, [x9, #24]
  402f38:	ldur	x9, [x29, #-16]
  402f3c:	ldr	w10, [x9, #32]
  402f40:	cmp	w10, #0x0
  402f44:	cset	w10, ne  // ne = any
  402f48:	and	w10, w10, #0x1
  402f4c:	str	x0, [sp, #64]
  402f50:	mov	w0, w10
  402f54:	str	w2, [sp, #60]
  402f58:	str	x8, [sp, #48]
  402f5c:	bl	403170 <one_zero>
  402f60:	ldr	x8, [sp, #64]
  402f64:	str	x0, [sp, #40]
  402f68:	mov	x0, x8
  402f6c:	ldr	x1, [sp, #40]
  402f70:	ldr	w2, [sp, #60]
  402f74:	bl	403134 <write_string_file>
  402f78:	stur	w0, [x29, #-20]
  402f7c:	ldur	w10, [x29, #-20]
  402f80:	cmp	w10, #0x0
  402f84:	cset	w10, ge  // ge = tcont
  402f88:	tbnz	w10, #0, 40301c <save_state_write_one+0x10c>
  402f8c:	mov	w8, #0x3                   	// #3
  402f90:	stur	w8, [x29, #-24]
  402f94:	ldur	w8, [x29, #-20]
  402f98:	stur	w8, [x29, #-28]
  402f9c:	stur	wzr, [x29, #-32]
  402fa0:	ldur	w0, [x29, #-32]
  402fa4:	bl	4011b0 <log_get_max_level_realm@plt>
  402fa8:	ldur	w8, [x29, #-24]
  402fac:	and	w8, w8, #0x7
  402fb0:	cmp	w0, w8
  402fb4:	b.lt	402ff4 <save_state_write_one+0xe4>  // b.tstop
  402fb8:	ldur	w8, [x29, #-32]
  402fbc:	ldur	w9, [x29, #-24]
  402fc0:	orr	w0, w9, w8, lsl #10
  402fc4:	ldur	w1, [x29, #-28]
  402fc8:	ldur	x10, [x29, #-16]
  402fcc:	ldr	x6, [x10, #24]
  402fd0:	ldr	x2, [sp, #48]
  402fd4:	mov	w3, #0xfb                  	// #251
  402fd8:	adrp	x4, 404000 <_fini+0x2fc>
  402fdc:	add	x4, x4, #0x82
  402fe0:	adrp	x5, 404000 <_fini+0x2fc>
  402fe4:	add	x5, x5, #0x97
  402fe8:	bl	4011c0 <log_internal_realm@plt>
  402fec:	str	w0, [sp, #36]
  402ff0:	b	403008 <save_state_write_one+0xf8>
  402ff4:	ldur	w0, [x29, #-28]
  402ff8:	bl	4011d0 <abs@plt>
  402ffc:	mov	w8, wzr
  403000:	subs	w8, w8, w0, uxtb
  403004:	str	w8, [sp, #36]
  403008:	ldr	w8, [sp, #36]
  40300c:	stur	w8, [x29, #-36]
  403010:	ldur	w8, [x29, #-36]
  403014:	stur	w8, [x29, #-4]
  403018:	b	4030d8 <save_state_write_one+0x1c8>
  40301c:	mov	w8, #0x7                   	// #7
  403020:	stur	w8, [x29, #-40]
  403024:	stur	wzr, [x29, #-44]
  403028:	stur	wzr, [x29, #-48]
  40302c:	ldur	w0, [x29, #-48]
  403030:	bl	4011b0 <log_get_max_level_realm@plt>
  403034:	ldur	w8, [x29, #-40]
  403038:	and	w8, w8, #0x7
  40303c:	cmp	w0, w8
  403040:	b.lt	4030b8 <save_state_write_one+0x1a8>  // b.tstop
  403044:	ldur	w8, [x29, #-48]
  403048:	ldur	w9, [x29, #-40]
  40304c:	orr	w0, w9, w8, lsl #10
  403050:	ldur	w1, [x29, #-44]
  403054:	ldur	x10, [x29, #-16]
  403058:	ldr	w8, [x10, #32]
  40305c:	cmp	w8, #0x0
  403060:	cset	w8, ne  // ne = any
  403064:	and	w8, w8, #0x1
  403068:	str	w0, [sp, #32]
  40306c:	mov	w0, w8
  403070:	str	w1, [sp, #28]
  403074:	bl	403170 <one_zero>
  403078:	ldur	x10, [x29, #-16]
  40307c:	ldr	x7, [x10, #24]
  403080:	ldr	w8, [sp, #32]
  403084:	str	x0, [sp, #16]
  403088:	mov	w0, w8
  40308c:	ldr	w1, [sp, #28]
  403090:	ldr	x2, [sp, #48]
  403094:	mov	w3, #0xfd                  	// #253
  403098:	adrp	x4, 404000 <_fini+0x2fc>
  40309c:	add	x4, x4, #0x82
  4030a0:	adrp	x5, 404000 <_fini+0x2fc>
  4030a4:	add	x5, x5, #0xb9
  4030a8:	ldr	x6, [sp, #16]
  4030ac:	bl	4011c0 <log_internal_realm@plt>
  4030b0:	str	w0, [sp, #12]
  4030b4:	b	4030cc <save_state_write_one+0x1bc>
  4030b8:	ldur	w0, [x29, #-44]
  4030bc:	bl	4011d0 <abs@plt>
  4030c0:	mov	w8, wzr
  4030c4:	subs	w8, w8, w0, uxtb
  4030c8:	str	w8, [sp, #12]
  4030cc:	ldr	w8, [sp, #12]
  4030d0:	stur	w8, [x29, #-52]
  4030d4:	stur	wzr, [x29, #-4]
  4030d8:	ldur	w0, [x29, #-4]
  4030dc:	ldp	x29, x30, [sp, #128]
  4030e0:	add	sp, sp, #0x90
  4030e4:	ret

00000000004030e8 <write_queue_item_free>:
  4030e8:	sub	sp, sp, #0x20
  4030ec:	stp	x29, x30, [sp, #16]
  4030f0:	add	x29, sp, #0x10
  4030f4:	str	x0, [sp]
  4030f8:	ldr	x8, [sp]
  4030fc:	cbnz	x8, 40310c <write_queue_item_free+0x24>
  403100:	mov	x8, xzr
  403104:	str	x8, [sp, #8]
  403108:	b	403124 <write_queue_item_free+0x3c>
  40310c:	ldr	x8, [sp]
  403110:	ldr	x0, [x8, #24]
  403114:	bl	4012e0 <free@plt>
  403118:	ldr	x0, [sp]
  40311c:	bl	4031a0 <mfree>
  403120:	str	x0, [sp, #8]
  403124:	ldr	x0, [sp, #8]
  403128:	ldp	x29, x30, [sp, #16]
  40312c:	add	sp, sp, #0x20
  403130:	ret

0000000000403134 <write_string_file>:
  403134:	sub	sp, sp, #0x30
  403138:	stp	x29, x30, [sp, #32]
  40313c:	add	x29, sp, #0x20
  403140:	mov	x8, xzr
  403144:	stur	x0, [x29, #-8]
  403148:	str	x1, [sp, #16]
  40314c:	str	w2, [sp, #12]
  403150:	ldur	x0, [x29, #-8]
  403154:	ldr	x1, [sp, #16]
  403158:	ldr	w2, [sp, #12]
  40315c:	mov	x3, x8
  403160:	bl	4012f0 <write_string_file_ts@plt>
  403164:	ldp	x29, x30, [sp, #32]
  403168:	add	sp, sp, #0x30
  40316c:	ret

0000000000403170 <one_zero>:
  403170:	sub	sp, sp, #0x10
  403174:	adrp	x8, 404000 <_fini+0x2fc>
  403178:	add	x8, x8, #0xd1
  40317c:	adrp	x9, 404000 <_fini+0x2fc>
  403180:	add	x9, x9, #0xd3
  403184:	and	w10, w0, #0x1
  403188:	strb	w10, [sp, #15]
  40318c:	ldrb	w10, [sp, #15]
  403190:	tst	w10, #0x1
  403194:	csel	x0, x8, x9, ne  // ne = any
  403198:	add	sp, sp, #0x10
  40319c:	ret

00000000004031a0 <mfree>:
  4031a0:	sub	sp, sp, #0x20
  4031a4:	stp	x29, x30, [sp, #16]
  4031a8:	add	x29, sp, #0x10
  4031ac:	mov	x8, xzr
  4031b0:	str	x0, [sp, #8]
  4031b4:	ldr	x0, [sp, #8]
  4031b8:	str	x8, [sp]
  4031bc:	bl	4012e0 <free@plt>
  4031c0:	ldr	x0, [sp]
  4031c4:	ldp	x29, x30, [sp, #16]
  4031c8:	add	sp, sp, #0x20
  4031cc:	ret

00000000004031d0 <freep>:
  4031d0:	sub	sp, sp, #0x20
  4031d4:	stp	x29, x30, [sp, #16]
  4031d8:	add	x29, sp, #0x10
  4031dc:	str	x0, [sp, #8]
  4031e0:	ldr	x8, [sp, #8]
  4031e4:	ldr	x0, [x8]
  4031e8:	bl	4012e0 <free@plt>
  4031ec:	ldp	x29, x30, [sp, #16]
  4031f0:	add	sp, sp, #0x20
  4031f4:	ret

00000000004031f8 <determine_state_file>:
  4031f8:	sub	sp, sp, #0x70
  4031fc:	stp	x29, x30, [sp, #96]
  403200:	add	x29, sp, #0x60
  403204:	mov	x8, xzr
  403208:	adrp	x9, 403000 <save_state_write_one+0xf0>
  40320c:	add	x9, x9, #0xd40
  403210:	add	x9, x9, #0x3
  403214:	adrp	x10, 404000 <_fini+0x2fc>
  403218:	add	x10, x10, #0x216
  40321c:	stur	x0, [x29, #-16]
  403220:	stur	x1, [x29, #-24]
  403224:	stur	x8, [x29, #-32]
  403228:	stur	x8, [x29, #-40]
  40322c:	str	x9, [sp, #8]
  403230:	str	x10, [sp]
  403234:	ldur	x8, [x29, #-16]
  403238:	cmp	x8, #0x0
  40323c:	cset	w9, ne  // ne = any
  403240:	mov	w10, #0x1                   	// #1
  403244:	eor	w9, w9, #0x1
  403248:	eor	w9, w9, w10
  40324c:	eor	w9, w9, w10
  403250:	and	w9, w9, #0x1
  403254:	mov	w0, w9
  403258:	sxtw	x8, w0
  40325c:	cbz	x8, 403280 <determine_state_file+0x88>
  403260:	mov	w8, wzr
  403264:	mov	w0, w8
  403268:	adrp	x1, 404000 <_fini+0x2fc>
  40326c:	add	x1, x1, #0x14b
  403270:	ldr	x2, [sp, #8]
  403274:	mov	w3, #0x69                  	// #105
  403278:	ldr	x4, [sp]
  40327c:	bl	401270 <log_assert_failed_realm@plt>
  403280:	ldur	x8, [x29, #-24]
  403284:	cmp	x8, #0x0
  403288:	cset	w9, ne  // ne = any
  40328c:	mov	w10, #0x1                   	// #1
  403290:	eor	w9, w9, #0x1
  403294:	eor	w9, w9, w10
  403298:	eor	w9, w9, w10
  40329c:	and	w9, w9, #0x1
  4032a0:	mov	w0, w9
  4032a4:	sxtw	x8, w0
  4032a8:	cbz	x8, 4032cc <determine_state_file+0xd4>
  4032ac:	mov	w8, wzr
  4032b0:	mov	w0, w8
  4032b4:	adrp	x1, 404000 <_fini+0x2fc>
  4032b8:	add	x1, x1, #0x255
  4032bc:	ldr	x2, [sp, #8]
  4032c0:	mov	w3, #0x6a                  	// #106
  4032c4:	ldr	x4, [sp]
  4032c8:	bl	401270 <log_assert_failed_realm@plt>
  4032cc:	ldur	x0, [x29, #-16]
  4032d0:	sub	x1, x29, #0x20
  4032d4:	bl	40350c <find_device>
  4032d8:	str	w0, [sp, #28]
  4032dc:	ldr	w8, [sp, #28]
  4032e0:	cmp	w8, #0x0
  4032e4:	cset	w8, ge  // ge = tcont
  4032e8:	tbnz	w8, #0, 403300 <determine_state_file+0x108>
  4032ec:	ldr	w8, [sp, #28]
  4032f0:	stur	w8, [x29, #-4]
  4032f4:	mov	w8, #0x1                   	// #1
  4032f8:	str	w8, [sp, #24]
  4032fc:	b	4034b8 <determine_state_file+0x2c0>
  403300:	ldur	x0, [x29, #-32]
  403304:	adrp	x1, 404000 <_fini+0x2fc>
  403308:	add	x1, x1, #0x259
  40330c:	mov	x2, #0xffffffffffffffff    	// #-1
  403310:	sub	x3, x29, #0x28
  403314:	bl	401300 <device_wait_for_initialization@plt>
  403318:	str	w0, [sp, #28]
  40331c:	ldr	w8, [sp, #28]
  403320:	cmp	w8, #0x0
  403324:	cset	w8, ge  // ge = tcont
  403328:	tbnz	w8, #0, 403340 <determine_state_file+0x148>
  40332c:	ldr	w8, [sp, #28]
  403330:	stur	w8, [x29, #-4]
  403334:	mov	w8, #0x1                   	// #1
  403338:	str	w8, [sp, #24]
  40333c:	b	4034b8 <determine_state_file+0x2c0>
  403340:	ldur	x8, [x29, #-16]
  403344:	ldrb	w0, [x8, #4]
  403348:	bl	4022b4 <rfkill_type_to_string>
  40334c:	str	x0, [sp, #40]
  403350:	cmp	x0, #0x0
  403354:	cset	w9, ne  // ne = any
  403358:	mov	w10, #0x1                   	// #1
  40335c:	eor	w9, w9, #0x1
  403360:	eor	w9, w9, w10
  403364:	eor	w9, w9, w10
  403368:	and	w9, w9, #0x1
  40336c:	mov	w0, w9
  403370:	sxtw	x8, w0
  403374:	cbz	x8, 403398 <determine_state_file+0x1a0>
  403378:	mov	w8, wzr
  40337c:	mov	w0, w8
  403380:	adrp	x1, 404000 <_fini+0x2fc>
  403384:	add	x1, x1, #0x260
  403388:	ldr	x2, [sp, #8]
  40338c:	mov	w3, #0x74                  	// #116
  403390:	ldr	x4, [sp]
  403394:	bl	401270 <log_assert_failed_realm@plt>
  403398:	ldur	x0, [x29, #-40]
  40339c:	adrp	x1, 404000 <_fini+0x2fc>
  4033a0:	add	x1, x1, #0x28a
  4033a4:	add	x2, sp, #0x30
  4033a8:	bl	401310 <sd_device_get_property_value@plt>
  4033ac:	cmp	w0, #0x0
  4033b0:	cset	w8, lt  // lt = tstop
  4033b4:	tbnz	w8, #0, 403450 <determine_state_file+0x258>
  4033b8:	mov	x8, xzr
  4033bc:	str	x8, [sp, #16]
  4033c0:	ldr	x0, [sp, #48]
  4033c4:	bl	401320 <cescape@plt>
  4033c8:	str	x0, [sp, #16]
  4033cc:	ldr	x8, [sp, #16]
  4033d0:	cbnz	x8, 403400 <determine_state_file+0x208>
  4033d4:	mov	w8, wzr
  4033d8:	mov	w0, w8
  4033dc:	ldr	x1, [sp, #8]
  4033e0:	mov	w2, #0x7b                  	// #123
  4033e4:	adrp	x3, 404000 <_fini+0x2fc>
  4033e8:	add	x3, x3, #0x292
  4033ec:	bl	401330 <log_oom_internal@plt>
  4033f0:	stur	w0, [x29, #-4]
  4033f4:	mov	w8, #0x1                   	// #1
  4033f8:	str	w8, [sp, #24]
  4033fc:	b	40342c <determine_state_file+0x234>
  403400:	ldr	x1, [sp, #16]
  403404:	ldr	x3, [sp, #40]
  403408:	adrp	x0, 404000 <_fini+0x2fc>
  40340c:	add	x0, x0, #0x2a7
  403410:	adrp	x2, 404000 <_fini+0x2fc>
  403414:	add	x2, x2, #0x2c0
  403418:	mov	x8, xzr
  40341c:	mov	x4, x8
  403420:	bl	401340 <strjoin_real@plt>
  403424:	str	x0, [sp, #32]
  403428:	str	wzr, [sp, #24]
  40342c:	add	x0, sp, #0x10
  403430:	bl	4031d0 <freep>
  403434:	ldr	w8, [sp, #24]
  403438:	cmp	w8, #0x0
  40343c:	cset	w8, eq  // eq = none
  403440:	eor	w8, w8, #0x1
  403444:	tbnz	w8, #0, 4034b8 <determine_state_file+0x2c0>
  403448:	b	40344c <determine_state_file+0x254>
  40344c:	b	40346c <determine_state_file+0x274>
  403450:	ldr	x1, [sp, #40]
  403454:	adrp	x0, 404000 <_fini+0x2fc>
  403458:	add	x0, x0, #0x2a7
  40345c:	mov	x8, xzr
  403460:	mov	x2, x8
  403464:	bl	401340 <strjoin_real@plt>
  403468:	str	x0, [sp, #32]
  40346c:	ldr	x8, [sp, #32]
  403470:	cbnz	x8, 4034a0 <determine_state_file+0x2a8>
  403474:	mov	w8, wzr
  403478:	mov	w0, w8
  40347c:	ldr	x1, [sp, #8]
  403480:	mov	w2, #0x82                  	// #130
  403484:	adrp	x3, 404000 <_fini+0x2fc>
  403488:	add	x3, x3, #0x292
  40348c:	bl	401330 <log_oom_internal@plt>
  403490:	stur	w0, [x29, #-4]
  403494:	mov	w8, #0x1                   	// #1
  403498:	str	w8, [sp, #24]
  40349c:	b	4034b8 <determine_state_file+0x2c0>
  4034a0:	ldr	x8, [sp, #32]
  4034a4:	ldur	x9, [x29, #-24]
  4034a8:	str	x8, [x9]
  4034ac:	stur	wzr, [x29, #-4]
  4034b0:	mov	w10, #0x1                   	// #1
  4034b4:	str	w10, [sp, #24]
  4034b8:	sub	x0, x29, #0x28
  4034bc:	bl	4034d8 <sd_device_unrefp>
  4034c0:	sub	x0, x29, #0x20
  4034c4:	bl	4034d8 <sd_device_unrefp>
  4034c8:	ldur	w0, [x29, #-4]
  4034cc:	ldp	x29, x30, [sp, #96]
  4034d0:	add	sp, sp, #0x70
  4034d4:	ret

00000000004034d8 <sd_device_unrefp>:
  4034d8:	sub	sp, sp, #0x20
  4034dc:	stp	x29, x30, [sp, #16]
  4034e0:	add	x29, sp, #0x10
  4034e4:	str	x0, [sp, #8]
  4034e8:	ldr	x8, [sp, #8]
  4034ec:	ldr	x8, [x8]
  4034f0:	cbz	x8, 403500 <sd_device_unrefp+0x28>
  4034f4:	ldr	x8, [sp, #8]
  4034f8:	ldr	x0, [x8]
  4034fc:	bl	401350 <sd_device_unref@plt>
  403500:	ldp	x29, x30, [sp, #16]
  403504:	add	sp, sp, #0x20
  403508:	ret

000000000040350c <find_device>:
  40350c:	sub	sp, sp, #0xf0
  403510:	stp	x29, x30, [sp, #224]
  403514:	add	x29, sp, #0xe0
  403518:	mov	x8, xzr
  40351c:	adrp	x9, 403000 <save_state_write_one+0xf0>
  403520:	add	x9, x9, #0xd40
  403524:	add	x9, x9, #0x3
  403528:	adrp	x10, 404000 <_fini+0x2fc>
  40352c:	add	x10, x10, #0x306
  403530:	stur	x0, [x29, #-16]
  403534:	stur	x1, [x29, #-24]
  403538:	stur	x8, [x29, #-32]
  40353c:	stur	x8, [x29, #-40]
  403540:	str	x9, [sp, #56]
  403544:	str	x10, [sp, #48]
  403548:	ldur	x8, [x29, #-16]
  40354c:	cmp	x8, #0x0
  403550:	cset	w9, ne  // ne = any
  403554:	mov	w10, #0x1                   	// #1
  403558:	eor	w9, w9, #0x1
  40355c:	eor	w9, w9, w10
  403560:	eor	w9, w9, w10
  403564:	and	w9, w9, #0x1
  403568:	mov	w0, w9
  40356c:	sxtw	x8, w0
  403570:	cbz	x8, 403598 <find_device+0x8c>
  403574:	mov	w8, wzr
  403578:	mov	w0, w8
  40357c:	adrp	x1, 404000 <_fini+0x2fc>
  403580:	add	x1, x1, #0x14b
  403584:	ldr	x2, [sp, #56]
  403588:	mov	w3, #0x4b                  	// #75
  40358c:	adrp	x4, 404000 <_fini+0x2fc>
  403590:	add	x4, x4, #0x2c2
  403594:	bl	401270 <log_assert_failed_realm@plt>
  403598:	ldur	x8, [x29, #-24]
  40359c:	cmp	x8, #0x0
  4035a0:	cset	w9, ne  // ne = any
  4035a4:	mov	w10, #0x1                   	// #1
  4035a8:	eor	w9, w9, #0x1
  4035ac:	eor	w9, w9, w10
  4035b0:	eor	w9, w9, w10
  4035b4:	and	w9, w9, #0x1
  4035b8:	mov	w0, w9
  4035bc:	sxtw	x8, w0
  4035c0:	cbz	x8, 4035e8 <find_device+0xdc>
  4035c4:	mov	w8, wzr
  4035c8:	mov	w0, w8
  4035cc:	adrp	x1, 404000 <_fini+0x2fc>
  4035d0:	add	x1, x1, #0x255
  4035d4:	ldr	x2, [sp, #56]
  4035d8:	mov	w3, #0x4c                  	// #76
  4035dc:	adrp	x4, 404000 <_fini+0x2fc>
  4035e0:	add	x4, x4, #0x2c2
  4035e4:	bl	401270 <log_assert_failed_realm@plt>
  4035e8:	ldur	x8, [x29, #-16]
  4035ec:	ldr	w2, [x8]
  4035f0:	sub	x0, x29, #0x28
  4035f4:	adrp	x1, 404000 <_fini+0x2fc>
  4035f8:	add	x1, x1, #0x2fd
  4035fc:	bl	401360 <asprintf@plt>
  403600:	cmp	w0, #0x0
  403604:	cset	w9, ge  // ge = tcont
  403608:	tbnz	w9, #0, 403634 <find_device+0x128>
  40360c:	mov	w8, wzr
  403610:	mov	w0, w8
  403614:	ldr	x1, [sp, #56]
  403618:	mov	w2, #0x4f                  	// #79
  40361c:	ldr	x3, [sp, #48]
  403620:	bl	401330 <log_oom_internal@plt>
  403624:	stur	w0, [x29, #-4]
  403628:	mov	w8, #0x1                   	// #1
  40362c:	stur	w8, [x29, #-56]
  403630:	b	403954 <find_device+0x448>
  403634:	ldur	x2, [x29, #-40]
  403638:	sub	x0, x29, #0x20
  40363c:	adrp	x1, 404000 <_fini+0x2fc>
  403640:	add	x1, x1, #0x259
  403644:	bl	401370 <sd_device_new_from_subsystem_sysname@plt>
  403648:	stur	w0, [x29, #-52]
  40364c:	ldur	w8, [x29, #-52]
  403650:	cmp	w8, #0x0
  403654:	cset	w8, ge  // ge = tcont
  403658:	tbnz	w8, #0, 403764 <find_device+0x258>
  40365c:	mov	w8, #0x0                   	// #0
  403660:	sturb	w8, [x29, #-61]
  403664:	ldur	w8, [x29, #-52]
  403668:	mov	w9, #0xffffffed            	// #-19
  40366c:	cmp	w8, w9
  403670:	str	w8, [sp, #44]
  403674:	b.eq	4036ac <find_device+0x1a0>  // b.none
  403678:	b	40367c <find_device+0x170>
  40367c:	mov	w8, #0xfffffffa            	// #-6
  403680:	ldr	w9, [sp, #44]
  403684:	cmp	w9, w8
  403688:	b.eq	4036ac <find_device+0x1a0>  // b.none
  40368c:	b	403690 <find_device+0x184>
  403690:	mov	w8, #0xfffffffe            	// #-2
  403694:	ldr	w9, [sp, #44]
  403698:	cmp	w9, w8
  40369c:	cset	w8, eq  // eq = none
  4036a0:	eor	w8, w8, #0x1
  4036a4:	tbnz	w8, #0, 4036b8 <find_device+0x1ac>
  4036a8:	b	4036ac <find_device+0x1a0>
  4036ac:	mov	w8, #0x1                   	// #1
  4036b0:	sturb	w8, [x29, #-61]
  4036b4:	b	4036b8 <find_device+0x1ac>
  4036b8:	ldurb	w8, [x29, #-61]
  4036bc:	and	w8, w8, #0x1
  4036c0:	sturb	w8, [x29, #-62]
  4036c4:	ldurb	w8, [x29, #-62]
  4036c8:	mov	w9, #0x3                   	// #3
  4036cc:	mov	w10, #0x7                   	// #7
  4036d0:	tst	w8, #0x1
  4036d4:	csel	w8, w10, w9, ne  // ne = any
  4036d8:	stur	w8, [x29, #-60]
  4036dc:	ldur	w8, [x29, #-52]
  4036e0:	stur	w8, [x29, #-68]
  4036e4:	stur	wzr, [x29, #-72]
  4036e8:	ldur	w0, [x29, #-72]
  4036ec:	bl	4011b0 <log_get_max_level_realm@plt>
  4036f0:	ldur	w8, [x29, #-60]
  4036f4:	and	w8, w8, #0x7
  4036f8:	cmp	w0, w8
  4036fc:	b.lt	403734 <find_device+0x228>  // b.tstop
  403700:	ldur	w8, [x29, #-72]
  403704:	ldur	w9, [x29, #-60]
  403708:	orr	w0, w9, w8, lsl #10
  40370c:	ldur	w1, [x29, #-68]
  403710:	ldur	x6, [x29, #-40]
  403714:	ldr	x2, [sp, #56]
  403718:	mov	w3, #0x54                  	// #84
  40371c:	ldr	x4, [sp, #48]
  403720:	adrp	x5, 404000 <_fini+0x2fc>
  403724:	add	x5, x5, #0x312
  403728:	bl	4011c0 <log_internal_realm@plt>
  40372c:	str	w0, [sp, #40]
  403730:	b	403748 <find_device+0x23c>
  403734:	ldur	w0, [x29, #-68]
  403738:	bl	4011d0 <abs@plt>
  40373c:	mov	w8, wzr
  403740:	subs	w8, w8, w0, uxtb
  403744:	str	w8, [sp, #40]
  403748:	ldr	w8, [sp, #40]
  40374c:	stur	w8, [x29, #-76]
  403750:	ldur	w8, [x29, #-76]
  403754:	stur	w8, [x29, #-4]
  403758:	mov	w8, #0x1                   	// #1
  40375c:	stur	w8, [x29, #-56]
  403760:	b	403954 <find_device+0x448>
  403764:	ldur	x0, [x29, #-32]
  403768:	adrp	x1, 404000 <_fini+0x2fc>
  40376c:	add	x1, x1, #0x331
  403770:	sub	x2, x29, #0x30
  403774:	bl	401380 <sd_device_get_sysattr_value@plt>
  403778:	stur	w0, [x29, #-52]
  40377c:	ldur	w8, [x29, #-52]
  403780:	cmp	w8, #0x0
  403784:	cset	w8, ge  // ge = tcont
  403788:	tbnz	w8, #0, 40385c <find_device+0x350>
  40378c:	mov	x8, xzr
  403790:	stur	x8, [x29, #-88]
  403794:	ldur	x8, [x29, #-32]
  403798:	stur	x8, [x29, #-96]
  40379c:	mov	w9, #0x7                   	// #7
  4037a0:	stur	w9, [x29, #-100]
  4037a4:	ldur	w9, [x29, #-52]
  4037a8:	stur	w9, [x29, #-104]
  4037ac:	ldur	x8, [x29, #-96]
  4037b0:	cbz	x8, 4037f4 <find_device+0x2e8>
  4037b4:	mov	w8, wzr
  4037b8:	mov	w0, w8
  4037bc:	bl	4011b0 <log_get_max_level_realm@plt>
  4037c0:	ldur	w8, [x29, #-100]
  4037c4:	cmp	w0, w8
  4037c8:	cset	w8, ge  // ge = tcont
  4037cc:	mov	w9, #0x1                   	// #1
  4037d0:	eor	w8, w8, #0x1
  4037d4:	eor	w8, w8, w9
  4037d8:	and	w8, w8, #0x1
  4037dc:	mov	w1, w8
  4037e0:	sxtw	x10, w1
  4037e4:	cbz	x10, 4037f4 <find_device+0x2e8>
  4037e8:	ldur	x0, [x29, #-96]
  4037ec:	sub	x1, x29, #0x58
  4037f0:	bl	401390 <sd_device_get_sysname@plt>
  4037f4:	ldur	w0, [x29, #-100]
  4037f8:	ldur	w1, [x29, #-104]
  4037fc:	ldur	x8, [x29, #-88]
  403800:	mov	x9, xzr
  403804:	adrp	x10, 404000 <_fini+0x2fc>
  403808:	add	x10, x10, #0x336
  40380c:	cmp	x8, #0x0
  403810:	csel	x5, x10, x9, ne  // ne = any
  403814:	ldur	x6, [x29, #-88]
  403818:	ldr	x2, [sp, #56]
  40381c:	mov	w3, #0x58                  	// #88
  403820:	ldr	x4, [sp, #48]
  403824:	mov	x7, x9
  403828:	mov	x8, sp
  40382c:	str	x9, [x8]
  403830:	mov	x8, sp
  403834:	adrp	x9, 404000 <_fini+0x2fc>
  403838:	add	x9, x9, #0x33e
  40383c:	str	x9, [x8, #8]
  403840:	bl	4013a0 <log_object_internal@plt>
  403844:	stur	w0, [x29, #-108]
  403848:	ldur	w11, [x29, #-108]
  40384c:	stur	w11, [x29, #-4]
  403850:	mov	w11, #0x1                   	// #1
  403854:	stur	w11, [x29, #-56]
  403858:	b	403954 <find_device+0x448>
  40385c:	mov	x8, xzr
  403860:	str	x8, [sp, #104]
  403864:	ldur	x8, [x29, #-32]
  403868:	str	x8, [sp, #96]
  40386c:	mov	w9, #0x7                   	// #7
  403870:	str	w9, [sp, #92]
  403874:	str	wzr, [sp, #88]
  403878:	ldr	x8, [sp, #96]
  40387c:	cbz	x8, 4038c0 <find_device+0x3b4>
  403880:	mov	w8, wzr
  403884:	mov	w0, w8
  403888:	bl	4011b0 <log_get_max_level_realm@plt>
  40388c:	ldr	w8, [sp, #92]
  403890:	cmp	w0, w8
  403894:	cset	w8, ge  // ge = tcont
  403898:	mov	w9, #0x1                   	// #1
  40389c:	eor	w8, w8, #0x1
  4038a0:	eor	w8, w8, w9
  4038a4:	and	w8, w8, #0x1
  4038a8:	mov	w1, w8
  4038ac:	sxtw	x10, w1
  4038b0:	cbz	x10, 4038c0 <find_device+0x3b4>
  4038b4:	ldr	x0, [sp, #96]
  4038b8:	add	x1, sp, #0x68
  4038bc:	bl	401390 <sd_device_get_sysname@plt>
  4038c0:	ldr	w0, [sp, #92]
  4038c4:	ldr	w1, [sp, #88]
  4038c8:	ldr	x8, [sp, #104]
  4038cc:	mov	x9, xzr
  4038d0:	adrp	x10, 404000 <_fini+0x2fc>
  4038d4:	add	x10, x10, #0x336
  4038d8:	cmp	x8, #0x0
  4038dc:	csel	x5, x10, x9, ne  // ne = any
  4038e0:	ldr	x6, [sp, #104]
  4038e4:	ldur	x8, [x29, #-48]
  4038e8:	ldr	x2, [sp, #56]
  4038ec:	mov	w3, #0x5a                  	// #90
  4038f0:	ldr	x4, [sp, #48]
  4038f4:	mov	x7, x9
  4038f8:	mov	x10, sp
  4038fc:	str	x9, [x10]
  403900:	mov	x10, sp
  403904:	adrp	x11, 404000 <_fini+0x2fc>
  403908:	add	x11, x11, #0x35f
  40390c:	str	x11, [x10, #8]
  403910:	mov	x10, sp
  403914:	str	x8, [x10, #16]
  403918:	str	x9, [sp, #32]
  40391c:	bl	4013a0 <log_object_internal@plt>
  403920:	str	w0, [sp, #84]
  403924:	ldur	x8, [x29, #-32]
  403928:	str	x8, [sp, #72]
  40392c:	ldr	x8, [sp, #32]
  403930:	stur	x8, [x29, #-32]
  403934:	ldr	x9, [sp, #72]
  403938:	str	x9, [sp, #64]
  40393c:	ldr	x9, [sp, #64]
  403940:	ldur	x10, [x29, #-24]
  403944:	str	x9, [x10]
  403948:	stur	wzr, [x29, #-4]
  40394c:	mov	w12, #0x1                   	// #1
  403950:	stur	w12, [x29, #-56]
  403954:	sub	x0, x29, #0x28
  403958:	bl	4031d0 <freep>
  40395c:	sub	x0, x29, #0x20
  403960:	bl	4034d8 <sd_device_unrefp>
  403964:	ldur	w0, [x29, #-4]
  403968:	ldp	x29, x30, [sp, #224]
  40396c:	add	sp, sp, #0xf0
  403970:	ret

0000000000403974 <save_state_queue_remove>:
  403974:	sub	sp, sp, #0x90
  403978:	stp	x29, x30, [sp, #128]
  40397c:	add	x29, sp, #0x80
  403980:	adrp	x8, 403000 <save_state_write_one+0xf0>
  403984:	add	x8, x8, #0xd40
  403988:	add	x8, x8, #0x3
  40398c:	adrp	x9, 404000 <_fini+0x2fc>
  403990:	add	x9, x9, #0x3be
  403994:	stur	x0, [x29, #-8]
  403998:	stur	w1, [x29, #-12]
  40399c:	stur	x2, [x29, #-24]
  4039a0:	str	x8, [sp, #48]
  4039a4:	str	x9, [sp, #40]
  4039a8:	ldur	x8, [x29, #-8]
  4039ac:	cmp	x8, #0x0
  4039b0:	cset	w9, ne  // ne = any
  4039b4:	mov	w10, #0x1                   	// #1
  4039b8:	eor	w9, w9, #0x1
  4039bc:	eor	w9, w9, w10
  4039c0:	eor	w9, w9, w10
  4039c4:	and	w9, w9, #0x1
  4039c8:	mov	w0, w9
  4039cc:	sxtw	x8, w0
  4039d0:	cbz	x8, 4039f4 <save_state_queue_remove+0x80>
  4039d4:	mov	w8, wzr
  4039d8:	mov	w0, w8
  4039dc:	adrp	x1, 404000 <_fini+0x2fc>
  4039e0:	add	x1, x1, #0x43
  4039e4:	ldr	x2, [sp, #48]
  4039e8:	mov	w3, #0xbf                  	// #191
  4039ec:	ldr	x4, [sp, #40]
  4039f0:	bl	401270 <log_assert_failed_realm@plt>
  4039f4:	ldur	x8, [x29, #-8]
  4039f8:	ldr	x8, [x8]
  4039fc:	stur	x8, [x29, #-32]
  403a00:	ldur	x8, [x29, #-32]
  403a04:	mov	w9, #0x0                   	// #0
  403a08:	str	w9, [sp, #36]
  403a0c:	cbz	x8, 403a24 <save_state_queue_remove+0xb0>
  403a10:	ldur	x8, [x29, #-32]
  403a14:	ldr	x8, [x8]
  403a18:	stur	x8, [x29, #-40]
  403a1c:	mov	w9, #0x1                   	// #1
  403a20:	str	w9, [sp, #36]
  403a24:	ldr	w8, [sp, #36]
  403a28:	tbnz	w8, #0, 403a30 <save_state_queue_remove+0xbc>
  403a2c:	b	403c44 <save_state_queue_remove+0x2d0>
  403a30:	ldur	x8, [x29, #-24]
  403a34:	cbz	x8, 403a4c <save_state_queue_remove+0xd8>
  403a38:	ldur	x8, [x29, #-32]
  403a3c:	ldr	x0, [x8, #24]
  403a40:	ldur	x1, [x29, #-24]
  403a44:	bl	4013b0 <strcmp@plt>
  403a48:	cbz	w0, 403a60 <save_state_queue_remove+0xec>
  403a4c:	ldur	w8, [x29, #-12]
  403a50:	ldur	x9, [x29, #-32]
  403a54:	ldr	w10, [x9, #16]
  403a58:	cmp	w8, w10
  403a5c:	b.ne	403c38 <save_state_queue_remove+0x2c4>  // b.any
  403a60:	mov	w8, #0x7                   	// #7
  403a64:	stur	w8, [x29, #-44]
  403a68:	stur	wzr, [x29, #-48]
  403a6c:	stur	wzr, [x29, #-52]
  403a70:	ldur	w0, [x29, #-52]
  403a74:	bl	4011b0 <log_get_max_level_realm@plt>
  403a78:	ldur	w8, [x29, #-44]
  403a7c:	and	w8, w8, #0x7
  403a80:	cmp	w0, w8
  403a84:	b.lt	403afc <save_state_queue_remove+0x188>  // b.tstop
  403a88:	ldur	w8, [x29, #-52]
  403a8c:	ldur	w9, [x29, #-44]
  403a90:	orr	w0, w9, w8, lsl #10
  403a94:	ldur	w1, [x29, #-48]
  403a98:	ldur	x10, [x29, #-32]
  403a9c:	ldr	w8, [x10, #32]
  403aa0:	cmp	w8, #0x0
  403aa4:	cset	w8, ne  // ne = any
  403aa8:	and	w8, w8, #0x1
  403aac:	str	w0, [sp, #32]
  403ab0:	mov	w0, w8
  403ab4:	str	w1, [sp, #28]
  403ab8:	bl	403170 <one_zero>
  403abc:	ldur	x10, [x29, #-32]
  403ac0:	ldr	x7, [x10, #24]
  403ac4:	ldr	w8, [sp, #32]
  403ac8:	str	x0, [sp, #16]
  403acc:	mov	w0, w8
  403ad0:	ldr	w1, [sp, #28]
  403ad4:	ldr	x2, [sp, #48]
  403ad8:	mov	w3, #0xc3                  	// #195
  403adc:	adrp	x4, 404000 <_fini+0x2fc>
  403ae0:	add	x4, x4, #0x3f9
  403ae4:	adrp	x5, 404000 <_fini+0x2fc>
  403ae8:	add	x5, x5, #0x411
  403aec:	ldr	x6, [sp, #16]
  403af0:	bl	4011c0 <log_internal_realm@plt>
  403af4:	str	w0, [sp, #12]
  403af8:	b	403b10 <save_state_queue_remove+0x19c>
  403afc:	ldur	w0, [x29, #-48]
  403b00:	bl	4011d0 <abs@plt>
  403b04:	mov	w8, wzr
  403b08:	subs	w8, w8, w0, uxtb
  403b0c:	str	w8, [sp, #12]
  403b10:	ldr	w8, [sp, #12]
  403b14:	stur	w8, [x29, #-56]
  403b18:	ldur	x8, [x29, #-8]
  403b1c:	str	x8, [sp, #64]
  403b20:	ldur	x8, [x29, #-32]
  403b24:	str	x8, [sp, #56]
  403b28:	ldr	x8, [sp, #56]
  403b2c:	cmp	x8, #0x0
  403b30:	cset	w9, ne  // ne = any
  403b34:	mov	w10, #0x1                   	// #1
  403b38:	eor	w9, w9, #0x1
  403b3c:	eor	w9, w9, w10
  403b40:	eor	w9, w9, w10
  403b44:	and	w9, w9, #0x1
  403b48:	mov	w0, w9
  403b4c:	sxtw	x8, w0
  403b50:	cbz	x8, 403b74 <save_state_queue_remove+0x200>
  403b54:	mov	w8, wzr
  403b58:	mov	w0, w8
  403b5c:	adrp	x1, 404000 <_fini+0x2fc>
  403b60:	add	x1, x1, #0x6c
  403b64:	ldr	x2, [sp, #48]
  403b68:	mov	w3, #0xc4                  	// #196
  403b6c:	ldr	x4, [sp, #40]
  403b70:	bl	401270 <log_assert_failed_realm@plt>
  403b74:	ldr	x8, [sp, #56]
  403b78:	ldr	x8, [x8]
  403b7c:	cbz	x8, 403b94 <save_state_queue_remove+0x220>
  403b80:	ldr	x8, [sp, #56]
  403b84:	ldr	x8, [x8, #8]
  403b88:	ldr	x9, [sp, #56]
  403b8c:	ldr	x9, [x9]
  403b90:	str	x8, [x9, #8]
  403b94:	ldr	x8, [sp, #56]
  403b98:	ldr	x8, [x8, #8]
  403b9c:	cbz	x8, 403bb8 <save_state_queue_remove+0x244>
  403ba0:	ldr	x8, [sp, #56]
  403ba4:	ldr	x8, [x8]
  403ba8:	ldr	x9, [sp, #56]
  403bac:	ldr	x9, [x9, #8]
  403bb0:	str	x8, [x9]
  403bb4:	b	403c1c <save_state_queue_remove+0x2a8>
  403bb8:	ldr	x8, [sp, #64]
  403bbc:	ldr	x8, [x8]
  403bc0:	ldr	x9, [sp, #56]
  403bc4:	cmp	x8, x9
  403bc8:	cset	w10, eq  // eq = none
  403bcc:	mov	w11, #0x1                   	// #1
  403bd0:	eor	w10, w10, #0x1
  403bd4:	eor	w10, w10, w11
  403bd8:	eor	w10, w10, w11
  403bdc:	and	w10, w10, #0x1
  403be0:	mov	w0, w10
  403be4:	sxtw	x8, w0
  403be8:	cbz	x8, 403c0c <save_state_queue_remove+0x298>
  403bec:	mov	w8, wzr
  403bf0:	mov	w0, w8
  403bf4:	adrp	x1, 404000 <_fini+0x2fc>
  403bf8:	add	x1, x1, #0x72
  403bfc:	ldr	x2, [sp, #48]
  403c00:	mov	w3, #0xc4                  	// #196
  403c04:	ldr	x4, [sp, #40]
  403c08:	bl	401270 <log_assert_failed_realm@plt>
  403c0c:	ldr	x8, [sp, #56]
  403c10:	ldr	x8, [x8]
  403c14:	ldr	x9, [sp, #64]
  403c18:	str	x8, [x9]
  403c1c:	ldr	x8, [sp, #56]
  403c20:	mov	x9, xzr
  403c24:	str	x9, [x8, #8]
  403c28:	ldr	x8, [sp, #56]
  403c2c:	str	x9, [x8]
  403c30:	ldur	x0, [x29, #-32]
  403c34:	bl	4030e8 <write_queue_item_free>
  403c38:	ldur	x8, [x29, #-40]
  403c3c:	stur	x8, [x29, #-32]
  403c40:	b	403a00 <save_state_queue_remove+0x8c>
  403c44:	ldp	x29, x30, [sp, #128]
  403c48:	add	sp, sp, #0x90
  403c4c:	ret

0000000000403c50 <ALIGN_TO>:
  403c50:	sub	sp, sp, #0x10
  403c54:	str	x0, [sp, #8]
  403c58:	str	x1, [sp]
  403c5c:	ldr	x8, [sp, #8]
  403c60:	ldr	x9, [sp]
  403c64:	add	x8, x8, x9
  403c68:	subs	x8, x8, #0x1
  403c6c:	ldr	x9, [sp]
  403c70:	subs	x9, x9, #0x1
  403c74:	bic	x0, x8, x9
  403c78:	add	sp, sp, #0x10
  403c7c:	ret

0000000000403c80 <__libc_csu_init>:
  403c80:	stp	x29, x30, [sp, #-64]!
  403c84:	mov	x29, sp
  403c88:	stp	x19, x20, [sp, #16]
  403c8c:	adrp	x20, 41f000 <__FRAME_END__+0x1a9f0>
  403c90:	add	x20, x20, #0xc68
  403c94:	stp	x21, x22, [sp, #32]
  403c98:	adrp	x21, 41f000 <__FRAME_END__+0x1a9f0>
  403c9c:	add	x21, x21, #0xc60
  403ca0:	sub	x20, x20, x21
  403ca4:	mov	w22, w0
  403ca8:	stp	x23, x24, [sp, #48]
  403cac:	mov	x23, x1
  403cb0:	mov	x24, x2
  403cb4:	bl	401108 <_init>
  403cb8:	cmp	xzr, x20, asr #3
  403cbc:	b.eq	403ce8 <__libc_csu_init+0x68>  // b.none
  403cc0:	asr	x20, x20, #3
  403cc4:	mov	x19, #0x0                   	// #0
  403cc8:	ldr	x3, [x21, x19, lsl #3]
  403ccc:	mov	x2, x24
  403cd0:	add	x19, x19, #0x1
  403cd4:	mov	x1, x23
  403cd8:	mov	w0, w22
  403cdc:	blr	x3
  403ce0:	cmp	x20, x19
  403ce4:	b.ne	403cc8 <__libc_csu_init+0x48>  // b.any
  403ce8:	ldp	x19, x20, [sp, #16]
  403cec:	ldp	x21, x22, [sp, #32]
  403cf0:	ldp	x23, x24, [sp, #48]
  403cf4:	ldp	x29, x30, [sp], #64
  403cf8:	ret
  403cfc:	nop

0000000000403d00 <__libc_csu_fini>:
  403d00:	ret

Disassembly of section .fini:

0000000000403d04 <_fini>:
  403d04:	stp	x29, x30, [sp, #-16]!
  403d08:	mov	x29, sp
  403d0c:	ldp	x29, x30, [sp], #16
  403d10:	ret
