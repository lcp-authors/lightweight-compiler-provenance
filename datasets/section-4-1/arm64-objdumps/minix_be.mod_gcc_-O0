
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix_be.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1068>:
       0:	sub	sp, sp, #0x10
       4:	strh	w0, [sp, #14]
       8:	ldrh	w0, [sp, #14]
       c:	lsl	w0, w0, #8
      10:	sxth	w1, w0
      14:	ldrh	w0, [sp, #14]
      18:	lsr	w0, w0, #8
      1c:	and	w0, w0, #0xffff
      20:	sxth	w0, w0
      24:	orr	w0, w1, w0
      28:	sxth	w0, w0
      2c:	and	w0, w0, #0xffff
      30:	add	sp, sp, #0x10
      34:	ret
      38:	sub	sp, sp, #0x10
      3c:	str	w0, [sp, #12]
      40:	ldr	w0, [sp, #12]
      44:	rev	w0, w0
      48:	add	sp, sp, #0x10
      4c:	ret
      50:	stp	x29, x30, [sp, #-32]!
      54:	mov	x29, sp
      58:	str	x0, [sp, #24]
      5c:	ldr	x1, [sp, #24]
      60:	adrp	x0, 0 <grub_mod_init-0x1068>
      64:	add	x0, x0, #0x0
      68:	ldr	x0, [x0]
      6c:	bl	0 <grub_list_push>
      70:	nop
      74:	ldp	x29, x30, [sp], #32
      78:	ret
      7c:	nop
	...
      88:	stp	x29, x30, [sp, #-32]!
      8c:	mov	x29, sp
      90:	str	x0, [sp, #24]
      94:	ldr	x0, [sp, #24]
      98:	bl	0 <grub_list_remove>
      9c:	nop
      a0:	ldp	x29, x30, [sp], #32
      a4:	ret
      a8:	stp	x29, x30, [sp, #-48]!
      ac:	mov	x29, sp
      b0:	str	x0, [sp, #24]
      b4:	strh	w1, [sp, #22]
      b8:	ldr	x0, [sp, #24]
      bc:	ldrh	w0, [x0, #10]
      c0:	bl	0 <grub_mod_init-0x1068>
      c4:	and	w0, w0, #0xffff
      c8:	add	w0, w0, #0x1
      cc:	str	w0, [sp, #44]
      d0:	ldrh	w1, [sp, #22]
      d4:	ldr	w0, [sp, #44]
      d8:	lsl	x0, x1, x0
      dc:	ldp	x29, x30, [sp], #48
      e0:	ret
      e4:	stp	x29, x30, [sp, #-64]!
      e8:	mov	x29, sp
      ec:	str	x19, [sp, #16]
      f0:	str	x0, [sp, #40]
      f4:	strh	w1, [sp, #38]
      f8:	strh	w2, [sp, #36]
      fc:	ldr	x0, [sp, #40]
     100:	ldr	x19, [x0, #64]
     104:	ldrh	w1, [sp, #38]
     108:	ldr	x0, [sp, #40]
     10c:	bl	a8 <grub_mod_init-0xfc0>
     110:	mov	x5, x0
     114:	ldrh	w0, [sp, #36]
     118:	lsl	x0, x0, #1
     11c:	add	x1, sp, #0x3e
     120:	mov	x4, x1
     124:	mov	x3, #0x2                   	// #2
     128:	mov	x2, x0
     12c:	mov	x1, x5
     130:	mov	x0, x19
     134:	bl	0 <grub_disk_read>
     138:	ldrh	w0, [sp, #62]
     13c:	bl	0 <grub_mod_init-0x1068>
     140:	and	w0, w0, #0xffff
     144:	ldr	x19, [sp, #16]
     148:	ldp	x29, x30, [sp], #64
     14c:	ret
     150:	stp	x29, x30, [sp, #-48]!
     154:	mov	x29, sp
     158:	str	x0, [sp, #24]
     15c:	str	w1, [sp, #20]
     160:	ldr	w0, [sp, #20]
     164:	cmp	w0, #0x6
     168:	b.hi	190 <grub_mod_init-0xed8>  // b.pmore
     16c:	ldr	x1, [sp, #24]
     170:	ldr	w0, [sp, #20]
     174:	add	x0, x0, #0x8
     178:	lsl	x0, x0, #1
     17c:	add	x0, x1, x0
     180:	ldrh	w0, [x0, #18]
     184:	bl	0 <grub_mod_init-0x1068>
     188:	and	w0, w0, #0xffff
     18c:	b	2a8 <grub_mod_init-0xdc0>
     190:	ldr	w0, [sp, #20]
     194:	sub	w0, w0, #0x7
     198:	str	w0, [sp, #20]
     19c:	ldr	x0, [sp, #24]
     1a0:	ldr	w0, [x0, #52]
     1a4:	ldr	w1, [sp, #20]
     1a8:	cmp	w1, w0
     1ac:	b.cs	1e4 <grub_mod_init-0xe84>  // b.hs, b.nlast
     1b0:	ldr	x0, [sp, #24]
     1b4:	ldrh	w0, [x0, #48]
     1b8:	bl	0 <grub_mod_init-0x1068>
     1bc:	and	w0, w0, #0xffff
     1c0:	ldr	w1, [sp, #20]
     1c4:	and	w1, w1, #0xffff
     1c8:	mov	w2, w1
     1cc:	mov	w1, w0
     1d0:	ldr	x0, [sp, #24]
     1d4:	bl	e4 <grub_mod_init-0xf84>
     1d8:	strh	w0, [sp, #46]
     1dc:	ldrh	w0, [sp, #46]
     1e0:	b	2a8 <grub_mod_init-0xdc0>
     1e4:	ldr	x0, [sp, #24]
     1e8:	ldr	w0, [x0, #52]
     1ec:	ldr	w1, [sp, #20]
     1f0:	sub	w0, w1, w0
     1f4:	str	w0, [sp, #20]
     1f8:	ldr	w1, [sp, #20]
     1fc:	ldr	x0, [sp, #24]
     200:	ldr	w0, [x0, #52]
     204:	mov	w2, w0
     208:	ldr	x0, [sp, #24]
     20c:	ldr	w0, [x0, #52]
     210:	mov	w0, w0
     214:	mul	x0, x2, x0
     218:	cmp	x1, x0
     21c:	b.cs	290 <grub_mod_init-0xdd8>  // b.hs, b.nlast
     220:	ldr	x0, [sp, #24]
     224:	ldrh	w0, [x0, #50]
     228:	bl	0 <grub_mod_init-0x1068>
     22c:	and	w3, w0, #0xffff
     230:	ldr	x0, [sp, #24]
     234:	ldr	w0, [x0, #52]
     238:	ldr	w1, [sp, #20]
     23c:	udiv	w0, w1, w0
     240:	and	w0, w0, #0xffff
     244:	mov	w2, w0
     248:	mov	w1, w3
     24c:	ldr	x0, [sp, #24]
     250:	bl	e4 <grub_mod_init-0xf84>
     254:	strh	w0, [sp, #46]
     258:	ldr	x0, [sp, #24]
     25c:	ldr	w1, [x0, #52]
     260:	ldr	w0, [sp, #20]
     264:	udiv	w2, w0, w1
     268:	mul	w1, w2, w1
     26c:	sub	w0, w0, w1
     270:	and	w0, w0, #0xffff
     274:	mov	w2, w0
     278:	ldrh	w1, [sp, #46]
     27c:	ldr	x0, [sp, #24]
     280:	bl	e4 <grub_mod_init-0xf84>
     284:	strh	w0, [sp, #46]
     288:	ldrh	w0, [sp, #46]
     28c:	b	2a8 <grub_mod_init-0xdc0>
     290:	adrp	x0, 0 <grub_mod_init-0x1068>
     294:	add	x0, x0, #0x0
     298:	ldr	x1, [x0]
     29c:	mov	w0, #0xb                   	// #11
     2a0:	bl	0 <grub_error>
     2a4:	mov	w0, #0x0                   	// #0
     2a8:	ldp	x29, x30, [sp], #48
     2ac:	ret
	...
     2b8:	stp	x29, x30, [sp, #-128]!
     2bc:	mov	x29, sp
     2c0:	str	x19, [sp, #16]
     2c4:	str	x0, [sp, #72]
     2c8:	str	x1, [sp, #64]
     2cc:	str	x2, [sp, #56]
     2d0:	str	x3, [sp, #48]
     2d4:	str	x4, [sp, #40]
     2d8:	str	x5, [sp, #32]
     2dc:	ldr	x0, [sp, #72]
     2e0:	ldr	w0, [x0, #24]
     2e4:	bl	38 <grub_mod_init-0x1030>
     2e8:	mov	w0, w0
     2ec:	ldr	x1, [sp, #48]
     2f0:	cmp	x1, x0
     2f4:	b.ls	314 <grub_mod_init-0xd54>  // b.plast
     2f8:	adrp	x0, 0 <grub_mod_init-0x1068>
     2fc:	add	x0, x0, #0x0
     300:	ldr	x1, [x0]
     304:	mov	w0, #0xb                   	// #11
     308:	bl	0 <grub_error>
     30c:	mov	x0, #0xffffffffffffffff    	// #-1
     310:	b	564 <grub_mod_init-0xb04>
     314:	ldr	x1, [sp, #40]
     318:	ldr	x0, [sp, #48]
     31c:	add	x19, x1, x0
     320:	ldr	x0, [sp, #72]
     324:	ldr	w0, [x0, #24]
     328:	bl	38 <grub_mod_init-0x1030>
     32c:	mov	w0, w0
     330:	cmp	x19, x0
     334:	b.ls	354 <grub_mod_init-0xd14>  // b.plast
     338:	ldr	x0, [sp, #72]
     33c:	ldr	w0, [x0, #24]
     340:	bl	38 <grub_mod_init-0x1030>
     344:	mov	w1, w0
     348:	ldr	x0, [sp, #48]
     34c:	sub	x0, x1, x0
     350:	str	x0, [sp, #40]
     354:	ldr	x0, [sp, #40]
     358:	cmp	x0, #0x0
     35c:	b.ne	368 <grub_mod_init-0xd00>  // b.any
     360:	mov	x0, #0x0                   	// #0
     364:	b	564 <grub_mod_init-0xb04>
     368:	ldr	x1, [sp, #40]
     36c:	ldr	x0, [sp, #48]
     370:	add	x0, x1, x0
     374:	sub	x0, x0, #0x1
     378:	lsr	x0, x0, #9
     37c:	mov	w1, w0
     380:	ldr	x0, [sp, #72]
     384:	ldr	x0, [x0, #80]
     388:	udiv	x0, x1, x0
     38c:	add	w0, w0, #0x1
     390:	str	w0, [sp, #100]
     394:	ldr	x0, [sp, #48]
     398:	mov	w1, w0
     39c:	ldr	x0, [sp, #72]
     3a0:	ldr	x0, [x0, #80]
     3a4:	lsl	x0, x0, #9
     3a8:	udiv	x0, x1, x0
     3ac:	str	w0, [sp, #96]
     3b0:	ldr	x0, [sp, #48]
     3b4:	mov	w0, w0
     3b8:	ldr	x1, [sp, #72]
     3bc:	ldr	x1, [x1, #80]
     3c0:	lsl	x1, x1, #9
     3c4:	udiv	x2, x0, x1
     3c8:	mul	x1, x2, x1
     3cc:	sub	x0, x0, x1
     3d0:	str	w0, [sp, #92]
     3d4:	ldr	w0, [sp, #96]
     3d8:	str	w0, [sp, #124]
     3dc:	b	550 <grub_mod_init-0xb18>
     3e0:	ldr	x0, [sp, #72]
     3e4:	ldr	x0, [x0, #80]
     3e8:	lsl	x0, x0, #9
     3ec:	str	x0, [sp, #112]
     3f0:	str	xzr, [sp, #104]
     3f4:	ldr	w1, [sp, #124]
     3f8:	ldr	x0, [sp, #72]
     3fc:	bl	150 <grub_mod_init-0xf18>
     400:	strh	w0, [sp, #90]
     404:	adrp	x0, 0 <grub_mod_init-0x1068>
     408:	add	x0, x0, #0x0
     40c:	ldr	x0, [x0]
     410:	ldr	w0, [x0]
     414:	cmp	w0, #0x0
     418:	b.eq	424 <grub_mod_init-0xc44>  // b.none
     41c:	mov	x0, #0xffffffffffffffff    	// #-1
     420:	b	564 <grub_mod_init-0xb04>
     424:	ldr	w0, [sp, #100]
     428:	sub	w0, w0, #0x1
     42c:	ldr	w1, [sp, #124]
     430:	cmp	w1, w0
     434:	b.ne	484 <grub_mod_init-0xbe4>  // b.any
     438:	ldr	x0, [sp, #40]
     43c:	mov	w1, w0
     440:	ldr	x0, [sp, #48]
     444:	add	w0, w1, w0
     448:	mov	w0, w0
     44c:	ldr	x1, [sp, #72]
     450:	ldr	x1, [x1, #80]
     454:	lsl	x1, x1, #9
     458:	udiv	x2, x0, x1
     45c:	mul	x1, x2, x1
     460:	sub	x0, x0, x1
     464:	str	x0, [sp, #112]
     468:	ldr	x0, [sp, #112]
     46c:	cmp	x0, #0x0
     470:	b.ne	484 <grub_mod_init-0xbe4>  // b.any
     474:	ldr	x0, [sp, #72]
     478:	ldr	x0, [x0, #80]
     47c:	lsl	x0, x0, #9
     480:	str	x0, [sp, #112]
     484:	ldr	w1, [sp, #124]
     488:	ldr	w0, [sp, #96]
     48c:	cmp	w1, w0
     490:	b.ne	4ac <grub_mod_init-0xbbc>  // b.any
     494:	ldr	w0, [sp, #92]
     498:	str	x0, [sp, #104]
     49c:	ldr	x1, [sp, #112]
     4a0:	ldr	x0, [sp, #104]
     4a4:	sub	x0, x1, x0
     4a8:	str	x0, [sp, #112]
     4ac:	ldr	x0, [sp, #72]
     4b0:	ldr	x0, [x0, #64]
     4b4:	ldr	x1, [sp, #64]
     4b8:	str	x1, [x0, #48]
     4bc:	ldr	x0, [sp, #72]
     4c0:	ldr	x0, [x0, #64]
     4c4:	ldr	x1, [sp, #56]
     4c8:	str	x1, [x0, #56]
     4cc:	ldr	x0, [sp, #72]
     4d0:	ldr	x19, [x0, #64]
     4d4:	ldrh	w1, [sp, #90]
     4d8:	ldr	x0, [sp, #72]
     4dc:	bl	a8 <grub_mod_init-0xfc0>
     4e0:	ldr	x4, [sp, #32]
     4e4:	ldr	x3, [sp, #112]
     4e8:	ldr	x2, [sp, #104]
     4ec:	mov	x1, x0
     4f0:	mov	x0, x19
     4f4:	bl	0 <grub_disk_read>
     4f8:	ldr	x0, [sp, #72]
     4fc:	ldr	x0, [x0, #64]
     500:	str	xzr, [x0, #48]
     504:	adrp	x0, 0 <grub_mod_init-0x1068>
     508:	add	x0, x0, #0x0
     50c:	ldr	x0, [x0]
     510:	ldr	w0, [x0]
     514:	cmp	w0, #0x0
     518:	b.eq	524 <grub_mod_init-0xb44>  // b.none
     51c:	mov	x0, #0xffffffffffffffff    	// #-1
     520:	b	564 <grub_mod_init-0xb04>
     524:	ldr	x0, [sp, #72]
     528:	ldr	x0, [x0, #80]
     52c:	lsl	x1, x0, #9
     530:	ldr	x0, [sp, #104]
     534:	sub	x0, x1, x0
     538:	ldr	x1, [sp, #32]
     53c:	add	x0, x1, x0
     540:	str	x0, [sp, #32]
     544:	ldr	w0, [sp, #124]
     548:	add	w0, w0, #0x1
     54c:	str	w0, [sp, #124]
     550:	ldr	w1, [sp, #124]
     554:	ldr	w0, [sp, #100]
     558:	cmp	w1, w0
     55c:	b.cc	3e0 <grub_mod_init-0xc88>  // b.lo, b.ul, b.last
     560:	ldr	x0, [sp, #40]
     564:	ldr	x19, [sp, #16]
     568:	ldp	x29, x30, [sp], #128
     56c:	ret
	...
     580:	stp	x29, x30, [sp, #-80]!
     584:	mov	x29, sp
     588:	str	x19, [sp, #16]
     58c:	str	x0, [sp, #40]
     590:	strh	w1, [sp, #38]
     594:	ldr	x0, [sp, #40]
     598:	str	x0, [sp, #72]
     59c:	ldr	x0, [sp, #40]
     5a0:	ldrh	w1, [sp, #38]
     5a4:	strh	w1, [x0, #56]
     5a8:	ldrh	w0, [sp, #38]
     5ac:	sub	w0, w0, #0x1
     5b0:	strh	w0, [sp, #38]
     5b4:	ldr	x0, [sp, #72]
     5b8:	ldrh	w0, [x0, #4]
     5bc:	bl	0 <grub_mod_init-0x1068>
     5c0:	and	w19, w0, #0xffff
     5c4:	ldr	x0, [sp, #72]
     5c8:	ldrh	w0, [x0, #6]
     5cc:	bl	0 <grub_mod_init-0x1068>
     5d0:	and	w0, w0, #0xffff
     5d4:	add	w0, w19, w0
     5d8:	and	w0, w0, #0xffff
     5dc:	add	w0, w0, #0x2
     5e0:	and	w0, w0, #0xffff
     5e4:	mov	w1, w0
     5e8:	ldr	x0, [sp, #40]
     5ec:	bl	a8 <grub_mod_init-0xfc0>
     5f0:	str	x0, [sp, #64]
     5f4:	ldrh	w0, [sp, #38]
     5f8:	lsr	w0, w0, #4
     5fc:	and	w0, w0, #0xffff
     600:	and	x0, x0, #0xffff
     604:	ldr	x1, [sp, #64]
     608:	add	x0, x1, x0
     60c:	str	x0, [sp, #64]
     610:	ldrh	w0, [sp, #38]
     614:	and	w0, w0, #0xf
     618:	lsl	w0, w0, #5
     61c:	str	w0, [sp, #60]
     620:	ldr	x0, [sp, #40]
     624:	ldr	x5, [x0, #64]
     628:	ldrsw	x1, [sp, #60]
     62c:	ldr	x0, [sp, #40]
     630:	add	x0, x0, #0x14
     634:	mov	x4, x0
     638:	mov	x3, #0x20                  	// #32
     63c:	mov	x2, x1
     640:	ldr	x1, [sp, #64]
     644:	mov	x0, x5
     648:	bl	0 <grub_disk_read>
     64c:	mov	w0, #0x0                   	// #0
     650:	ldr	x19, [sp, #16]
     654:	ldp	x29, x30, [sp], #80
     658:	ret
     65c:	stp	x29, x30, [sp, #-48]!
     660:	mov	x29, sp
     664:	str	x0, [sp, #24]
     668:	strh	w1, [sp, #22]
     66c:	ldr	x0, [sp, #24]
     670:	ldr	w0, [x0, #24]
     674:	bl	38 <grub_mod_init-0x1030>
     678:	mov	w0, w0
     67c:	str	x0, [sp, #40]
     680:	ldr	x0, [sp, #24]
     684:	ldr	w0, [x0, #60]
     688:	add	w1, w0, #0x1
     68c:	ldr	x0, [sp, #24]
     690:	str	w1, [x0, #60]
     694:	ldr	x0, [sp, #24]
     698:	ldr	w0, [x0, #60]
     69c:	cmp	w0, #0x8
     6a0:	b.le	6bc <grub_mod_init-0x9ac>
     6a4:	adrp	x0, 0 <grub_mod_init-0x1068>
     6a8:	add	x0, x0, #0x0
     6ac:	ldr	x1, [x0]
     6b0:	mov	w0, #0x19                  	// #25
     6b4:	bl	0 <grub_error>
     6b8:	b	790 <grub_mod_init-0x8d8>
     6bc:	ldr	x0, [sp, #40]
     6c0:	add	x0, x0, #0x1
     6c4:	bl	0 <grub_malloc>
     6c8:	str	x0, [sp, #32]
     6cc:	ldr	x0, [sp, #32]
     6d0:	cmp	x0, #0x0
     6d4:	b.ne	6ec <grub_mod_init-0x97c>  // b.any
     6d8:	adrp	x0, 0 <grub_mod_init-0x1068>
     6dc:	add	x0, x0, #0x0
     6e0:	ldr	x0, [x0]
     6e4:	ldr	w0, [x0]
     6e8:	b	790 <grub_mod_init-0x8d8>
     6ec:	ldr	x5, [sp, #32]
     6f0:	ldr	x4, [sp, #40]
     6f4:	mov	x3, #0x0                   	// #0
     6f8:	mov	x2, #0x0                   	// #0
     6fc:	mov	x1, #0x0                   	// #0
     700:	ldr	x0, [sp, #24]
     704:	bl	2b8 <grub_mod_init-0xdb0>
     708:	cmp	x0, #0x0
     70c:	b.ge	724 <grub_mod_init-0x944>  // b.tcont
     710:	adrp	x0, 0 <grub_mod_init-0x1068>
     714:	add	x0, x0, #0x0
     718:	ldr	x0, [x0]
     71c:	ldr	w0, [x0]
     720:	b	790 <grub_mod_init-0x8d8>
     724:	ldr	x1, [sp, #32]
     728:	ldr	x0, [sp, #40]
     72c:	add	x0, x1, x0
     730:	strb	wzr, [x0]
     734:	ldr	x0, [sp, #32]
     738:	ldrb	w0, [x0]
     73c:	cmp	w0, #0x2f
     740:	b.ne	74c <grub_mod_init-0x91c>  // b.any
     744:	mov	w0, #0x1                   	// #1
     748:	strh	w0, [sp, #22]
     74c:	ldrh	w1, [sp, #22]
     750:	ldr	x0, [sp, #24]
     754:	bl	580 <grub_mod_init-0xae8>
     758:	cmp	w0, #0x0
     75c:	b.eq	774 <grub_mod_init-0x8f4>  // b.none
     760:	adrp	x0, 0 <grub_mod_init-0x1068>
     764:	add	x0, x0, #0x0
     768:	ldr	x0, [x0]
     76c:	ldr	w0, [x0]
     770:	b	790 <grub_mod_init-0x8d8>
     774:	ldr	x1, [sp, #32]
     778:	ldr	x0, [sp, #24]
     77c:	bl	7a8 <grub_mod_init-0x8c0>
     780:	adrp	x0, 0 <grub_mod_init-0x1068>
     784:	add	x0, x0, #0x0
     788:	ldr	x0, [x0]
     78c:	ldr	w0, [x0]
     790:	ldp	x29, x30, [sp], #48
     794:	ret
	...
     7a8:	stp	x29, x30, [sp, #-96]!
     7ac:	mov	x29, sp
     7b0:	str	x0, [sp, #24]
     7b4:	str	x1, [sp, #16]
     7b8:	ldr	x0, [sp, #16]
     7bc:	str	x0, [sp, #80]
     7c0:	str	wzr, [sp, #76]
     7c4:	ldr	x0, [sp, #80]
     7c8:	str	x0, [sp, #88]
     7cc:	b	7dc <grub_mod_init-0x88c>
     7d0:	ldr	x0, [sp, #88]
     7d4:	add	x0, x0, #0x1
     7d8:	str	x0, [sp, #88]
     7dc:	ldr	x0, [sp, #88]
     7e0:	ldrb	w0, [x0]
     7e4:	cmp	w0, #0x2f
     7e8:	b.eq	7d0 <grub_mod_init-0x898>  // b.none
     7ec:	ldr	x0, [sp, #88]
     7f0:	ldrb	w0, [x0]
     7f4:	cmp	w0, #0x0
     7f8:	b.ne	804 <grub_mod_init-0x864>  // b.any
     7fc:	mov	w0, #0x0                   	// #0
     800:	b	a40 <grub_mod_init-0x628>
     804:	ldr	x0, [sp, #24]
     808:	ldrh	w0, [x0, #20]
     80c:	bl	0 <grub_mod_init-0x1068>
     810:	and	w0, w0, #0xffff
     814:	and	w0, w0, #0x4000
     818:	cmp	w0, #0x4, lsl #12
     81c:	b.eq	838 <grub_mod_init-0x830>  // b.none
     820:	adrp	x0, 0 <grub_mod_init-0x1068>
     824:	add	x0, x0, #0x0
     828:	ldr	x1, [x0]
     82c:	mov	w0, #0x4                   	// #4
     830:	bl	0 <grub_error>
     834:	b	a40 <grub_mod_init-0x628>
     838:	ldr	x0, [sp, #88]
     83c:	str	x0, [sp, #80]
     840:	b	850 <grub_mod_init-0x818>
     844:	ldr	x0, [sp, #80]
     848:	add	x0, x0, #0x1
     84c:	str	x0, [sp, #80]
     850:	ldr	x0, [sp, #80]
     854:	ldrb	w0, [x0]
     858:	cmp	w0, #0x0
     85c:	b.eq	870 <grub_mod_init-0x7f8>  // b.none
     860:	ldr	x0, [sp, #80]
     864:	ldrb	w0, [x0]
     868:	cmp	w0, #0x2f
     86c:	b.ne	844 <grub_mod_init-0x824>  // b.any
     870:	str	wzr, [sp, #76]
     874:	ldr	x0, [sp, #24]
     878:	ldr	w0, [x0, #24]
     87c:	bl	38 <grub_mod_init-0x1030>
     880:	mov	w1, w0
     884:	ldr	w0, [sp, #76]
     888:	cmp	w0, w1
     88c:	b.cc	8bc <grub_mod_init-0x7ac>  // b.lo, b.ul, b.last
     890:	ldr	x2, [sp, #16]
     894:	adrp	x0, 0 <grub_mod_init-0x1068>
     898:	add	x0, x0, #0x0
     89c:	ldr	x1, [x0]
     8a0:	mov	w0, #0x5                   	// #5
     8a4:	bl	0 <grub_error>
     8a8:	adrp	x0, 0 <grub_mod_init-0x1068>
     8ac:	add	x0, x0, #0x0
     8b0:	ldr	x0, [x0]
     8b4:	ldr	w0, [x0]
     8b8:	b	a40 <grub_mod_init-0x628>
     8bc:	ldr	w0, [sp, #76]
     8c0:	add	x1, sp, #0x48
     8c4:	mov	x5, x1
     8c8:	mov	x4, #0x2                   	// #2
     8cc:	mov	x3, x0
     8d0:	mov	x2, #0x0                   	// #0
     8d4:	mov	x1, #0x0                   	// #0
     8d8:	ldr	x0, [sp, #24]
     8dc:	bl	2b8 <grub_mod_init-0xdb0>
     8e0:	cmp	x0, #0x0
     8e4:	b.ge	8fc <grub_mod_init-0x76c>  // b.tcont
     8e8:	adrp	x0, 0 <grub_mod_init-0x1068>
     8ec:	add	x0, x0, #0x0
     8f0:	ldr	x0, [x0]
     8f4:	ldr	w0, [x0]
     8f8:	b	a40 <grub_mod_init-0x628>
     8fc:	ldr	w0, [sp, #76]
     900:	add	x1, x0, #0x2
     904:	ldr	x0, [sp, #24]
     908:	ldr	w0, [x0, #72]
     90c:	sxtw	x0, w0
     910:	add	x2, sp, #0x28
     914:	mov	x5, x2
     918:	mov	x4, x0
     91c:	mov	x3, x1
     920:	mov	x2, #0x0                   	// #0
     924:	mov	x1, #0x0                   	// #0
     928:	ldr	x0, [sp, #24]
     92c:	bl	2b8 <grub_mod_init-0xdb0>
     930:	cmp	x0, #0x0
     934:	b.ge	94c <grub_mod_init-0x71c>  // b.tcont
     938:	adrp	x0, 0 <grub_mod_init-0x1068>
     93c:	add	x0, x0, #0x0
     940:	ldr	x0, [x0]
     944:	ldr	w0, [x0]
     948:	b	a40 <grub_mod_init-0x628>
     94c:	ldr	x0, [sp, #24]
     950:	ldr	w0, [x0, #72]
     954:	mov	w1, w0
     958:	ldr	w0, [sp, #76]
     95c:	add	w0, w1, w0
     960:	add	w0, w0, #0x2
     964:	str	w0, [sp, #76]
     968:	ldr	x0, [sp, #24]
     96c:	ldr	w0, [x0, #72]
     970:	sxtw	x0, w0
     974:	add	x1, sp, #0x28
     978:	strb	wzr, [x1, x0]
     97c:	ldr	x1, [sp, #80]
     980:	ldr	x0, [sp, #88]
     984:	sub	x0, x1, x0
     988:	mov	x1, x0
     98c:	add	x0, sp, #0x28
     990:	mov	x2, x1
     994:	mov	x1, x0
     998:	ldr	x0, [sp, #88]
     99c:	bl	0 <grub_strncmp>
     9a0:	cmp	w0, #0x0
     9a4:	b.ne	874 <grub_mod_init-0x7f4>  // b.any
     9a8:	ldr	x1, [sp, #80]
     9ac:	ldr	x0, [sp, #88]
     9b0:	sub	x0, x1, x0
     9b4:	add	x1, sp, #0x28
     9b8:	ldrb	w0, [x1, x0]
     9bc:	cmp	w0, #0x0
     9c0:	b.ne	874 <grub_mod_init-0x7f4>  // b.any
     9c4:	ldr	x0, [sp, #24]
     9c8:	ldrh	w0, [x0, #56]
     9cc:	strh	w0, [sp, #74]
     9d0:	ldrh	w0, [sp, #72]
     9d4:	bl	0 <grub_mod_init-0x1068>
     9d8:	and	w0, w0, #0xffff
     9dc:	mov	w1, w0
     9e0:	ldr	x0, [sp, #24]
     9e4:	bl	580 <grub_mod_init-0xae8>
     9e8:	ldr	x0, [sp, #24]
     9ec:	ldrh	w0, [x0, #20]
     9f0:	bl	0 <grub_mod_init-0x1068>
     9f4:	and	w0, w0, #0xffff
     9f8:	mov	w1, w0
     9fc:	mov	w0, #0xa000                	// #40960
     a00:	and	w0, w1, w0
     a04:	cmp	w0, #0xa, lsl #12
     a08:	b.ne	7c4 <grub_mod_init-0x8a4>  // b.any
     a0c:	ldrh	w1, [sp, #74]
     a10:	ldr	x0, [sp, #24]
     a14:	bl	65c <grub_mod_init-0xa0c>
     a18:	adrp	x0, 0 <grub_mod_init-0x1068>
     a1c:	add	x0, x0, #0x0
     a20:	ldr	x0, [x0]
     a24:	ldr	w0, [x0]
     a28:	cmp	w0, #0x0
     a2c:	b.eq	7c4 <grub_mod_init-0x8a4>  // b.none
     a30:	adrp	x0, 0 <grub_mod_init-0x1068>
     a34:	add	x0, x0, #0x0
     a38:	ldr	x0, [x0]
     a3c:	ldr	w0, [x0]
     a40:	ldp	x29, x30, [sp], #96
     a44:	ret
	...
     a60:	stp	x29, x30, [sp, #-64]!
     a64:	mov	x29, sp
     a68:	str	x19, [sp, #16]
     a6c:	str	x0, [sp, #40]
     a70:	mov	x0, #0x58                  	// #88
     a74:	bl	0 <grub_malloc>
     a78:	str	x0, [sp, #56]
     a7c:	ldr	x0, [sp, #56]
     a80:	cmp	x0, #0x0
     a84:	b.ne	a90 <grub_mod_init-0x5d8>  // b.any
     a88:	mov	x0, #0x0                   	// #0
     a8c:	b	bc4 <grub_mod_init-0x4a4>
     a90:	ldr	x0, [sp, #56]
     a94:	mov	x4, x0
     a98:	mov	x3, #0x14                  	// #20
     a9c:	mov	x2, #0x0                   	// #0
     aa0:	mov	x1, #0x2                   	// #2
     aa4:	ldr	x0, [sp, #40]
     aa8:	bl	0 <grub_disk_read>
     aac:	adrp	x0, 0 <grub_mod_init-0x1068>
     ab0:	add	x0, x0, #0x0
     ab4:	ldr	x0, [x0]
     ab8:	ldr	w0, [x0]
     abc:	cmp	w0, #0x0
     ac0:	b.ne	b88 <grub_mod_init-0x4e0>  // b.any
     ac4:	ldr	x0, [sp, #56]
     ac8:	ldrh	w1, [x0, #16]
     acc:	mov	w0, #0x7f13                	// #32531
     ad0:	cmp	w1, w0
     ad4:	b.ne	ae8 <grub_mod_init-0x580>  // b.any
     ad8:	ldr	x0, [sp, #56]
     adc:	mov	w1, #0xe                   	// #14
     ae0:	str	w1, [x0, #72]
     ae4:	b	b08 <grub_mod_init-0x560>
     ae8:	ldr	x0, [sp, #56]
     aec:	ldrh	w1, [x0, #16]
     af0:	mov	w0, #0x8f13                	// #36627
     af4:	cmp	w1, w0
     af8:	b.ne	b90 <grub_mod_init-0x4d8>  // b.any
     afc:	ldr	x0, [sp, #56]
     b00:	mov	w1, #0x1e                  	// #30
     b04:	str	w1, [x0, #72]
     b08:	ldr	x0, [sp, #56]
     b0c:	ldrh	w0, [x0, #10]
     b10:	bl	0 <grub_mod_init-0x1068>
     b14:	and	w0, w0, #0xffff
     b18:	cmp	w0, #0x13
     b1c:	b.hi	b98 <grub_mod_init-0x4d0>  // b.pmore
     b20:	ldr	x0, [sp, #56]
     b24:	ldr	x1, [sp, #40]
     b28:	str	x1, [x0, #64]
     b2c:	ldr	x0, [sp, #56]
     b30:	str	wzr, [x0, #60]
     b34:	ldr	x0, [sp, #56]
     b38:	mov	x1, #0x2                   	// #2
     b3c:	str	x1, [x0, #80]
     b40:	ldr	x0, [sp, #56]
     b44:	ldr	x19, [x0, #80]
     b48:	ldr	x0, [sp, #56]
     b4c:	ldrh	w0, [x0, #10]
     b50:	bl	0 <grub_mod_init-0x1068>
     b54:	and	w0, w0, #0xffff
     b58:	add	w0, w0, #0x9
     b5c:	lsl	x0, x19, x0
     b60:	lsr	x0, x0, #1
     b64:	mov	w1, w0
     b68:	ldr	x0, [sp, #56]
     b6c:	str	w1, [x0, #52]
     b70:	ldr	x0, [sp, #56]
     b74:	ldr	w0, [x0, #52]
     b78:	cmp	w0, #0x0
     b7c:	b.eq	ba0 <grub_mod_init-0x4c8>  // b.none
     b80:	ldr	x0, [sp, #56]
     b84:	b	bc4 <grub_mod_init-0x4a4>
     b88:	nop
     b8c:	b	ba4 <grub_mod_init-0x4c4>
     b90:	nop
     b94:	b	ba4 <grub_mod_init-0x4c4>
     b98:	nop
     b9c:	b	ba4 <grub_mod_init-0x4c4>
     ba0:	nop
     ba4:	ldr	x0, [sp, #56]
     ba8:	bl	0 <grub_free>
     bac:	adrp	x0, 0 <grub_mod_init-0x1068>
     bb0:	add	x0, x0, #0x0
     bb4:	ldr	x1, [x0]
     bb8:	mov	w0, #0x9                   	// #9
     bbc:	bl	0 <grub_error>
     bc0:	mov	x0, #0x0                   	// #0
     bc4:	ldr	x19, [sp, #16]
     bc8:	ldp	x29, x30, [sp], #64
     bcc:	ret
	...
     be0:	stp	x29, x30, [sp, #-128]!
     be4:	mov	x29, sp
     be8:	str	x0, [sp, #40]
     bec:	str	x1, [sp, #32]
     bf0:	str	x2, [sp, #24]
     bf4:	str	x3, [sp, #16]
     bf8:	str	xzr, [sp, #112]
     bfc:	str	wzr, [sp, #124]
     c00:	ldr	x0, [sp, #40]
     c04:	ldr	x0, [x0]
     c08:	bl	a60 <grub_mod_init-0x608>
     c0c:	str	x0, [sp, #112]
     c10:	ldr	x0, [sp, #112]
     c14:	cmp	x0, #0x0
     c18:	b.ne	c30 <grub_mod_init-0x438>  // b.any
     c1c:	adrp	x0, 0 <grub_mod_init-0x1068>
     c20:	add	x0, x0, #0x0
     c24:	ldr	x0, [x0]
     c28:	ldr	w0, [x0]
     c2c:	b	e88 <grub_mod_init-0x1e0>
     c30:	mov	w1, #0x1                   	// #1
     c34:	ldr	x0, [sp, #112]
     c38:	bl	580 <grub_mod_init-0xae8>
     c3c:	adrp	x0, 0 <grub_mod_init-0x1068>
     c40:	add	x0, x0, #0x0
     c44:	ldr	x0, [x0]
     c48:	ldr	w0, [x0]
     c4c:	cmp	w0, #0x0
     c50:	b.ne	e5c <grub_mod_init-0x20c>  // b.any
     c54:	ldr	x1, [sp, #32]
     c58:	ldr	x0, [sp, #112]
     c5c:	bl	7a8 <grub_mod_init-0x8c0>
     c60:	adrp	x0, 0 <grub_mod_init-0x1068>
     c64:	add	x0, x0, #0x0
     c68:	ldr	x0, [x0]
     c6c:	ldr	w0, [x0]
     c70:	cmp	w0, #0x0
     c74:	b.ne	e64 <grub_mod_init-0x204>  // b.any
     c78:	ldr	x0, [sp, #112]
     c7c:	ldrh	w0, [x0, #20]
     c80:	bl	0 <grub_mod_init-0x1068>
     c84:	and	w0, w0, #0xffff
     c88:	and	w0, w0, #0x4000
     c8c:	cmp	w0, #0x4, lsl #12
     c90:	b.eq	e3c <grub_mod_init-0x22c>  // b.none
     c94:	adrp	x0, 0 <grub_mod_init-0x1068>
     c98:	add	x0, x0, #0x0
     c9c:	ldr	x1, [x0]
     ca0:	mov	w0, #0x4                   	// #4
     ca4:	bl	0 <grub_error>
     ca8:	b	e70 <grub_mod_init-0x1f8>
     cac:	ldr	x0, [sp, #112]
     cb0:	ldrh	w0, [x0, #56]
     cb4:	strh	w0, [sp, #110]
     cb8:	add	x0, sp, #0x38
     cbc:	mov	x2, #0x10                  	// #16
     cc0:	mov	w1, #0x0                   	// #0
     cc4:	bl	0 <grub_memset>
     cc8:	ldr	w0, [sp, #124]
     ccc:	add	x1, sp, #0x6c
     cd0:	mov	x5, x1
     cd4:	mov	x4, #0x2                   	// #2
     cd8:	mov	x3, x0
     cdc:	mov	x2, #0x0                   	// #0
     ce0:	mov	x1, #0x0                   	// #0
     ce4:	ldr	x0, [sp, #112]
     ce8:	bl	2b8 <grub_mod_init-0xdb0>
     cec:	cmp	x0, #0x0
     cf0:	b.ge	d08 <grub_mod_init-0x360>  // b.tcont
     cf4:	adrp	x0, 0 <grub_mod_init-0x1068>
     cf8:	add	x0, x0, #0x0
     cfc:	ldr	x0, [x0]
     d00:	ldr	w0, [x0]
     d04:	b	e88 <grub_mod_init-0x1e0>
     d08:	ldr	w0, [sp, #124]
     d0c:	add	x1, x0, #0x2
     d10:	ldr	x0, [sp, #112]
     d14:	ldr	w0, [x0, #72]
     d18:	sxtw	x0, w0
     d1c:	add	x2, sp, #0x48
     d20:	mov	x5, x2
     d24:	mov	x4, x0
     d28:	mov	x3, x1
     d2c:	mov	x2, #0x0                   	// #0
     d30:	mov	x1, #0x0                   	// #0
     d34:	ldr	x0, [sp, #112]
     d38:	bl	2b8 <grub_mod_init-0xdb0>
     d3c:	cmp	x0, #0x0
     d40:	b.ge	d58 <grub_mod_init-0x310>  // b.tcont
     d44:	adrp	x0, 0 <grub_mod_init-0x1068>
     d48:	add	x0, x0, #0x0
     d4c:	ldr	x0, [x0]
     d50:	ldr	w0, [x0]
     d54:	b	e88 <grub_mod_init-0x1e0>
     d58:	ldr	x0, [sp, #112]
     d5c:	ldr	w0, [x0, #72]
     d60:	sxtw	x0, w0
     d64:	add	x1, sp, #0x48
     d68:	strb	wzr, [x1, x0]
     d6c:	ldrh	w0, [sp, #108]
     d70:	cmp	w0, #0x0
     d74:	b.ne	d98 <grub_mod_init-0x2d0>  // b.any
     d78:	ldr	x0, [sp, #112]
     d7c:	ldr	w0, [x0, #72]
     d80:	mov	w1, w0
     d84:	ldr	w0, [sp, #124]
     d88:	add	w0, w1, w0
     d8c:	add	w0, w0, #0x2
     d90:	str	w0, [sp, #124]
     d94:	b	e3c <grub_mod_init-0x22c>
     d98:	ldrh	w0, [sp, #108]
     d9c:	bl	0 <grub_mod_init-0x1068>
     da0:	and	w0, w0, #0xffff
     da4:	mov	w1, w0
     da8:	ldr	x0, [sp, #112]
     dac:	bl	580 <grub_mod_init-0xae8>
     db0:	ldr	x0, [sp, #112]
     db4:	ldrh	w0, [x0, #20]
     db8:	bl	0 <grub_mod_init-0x1068>
     dbc:	and	w0, w0, #0xffff
     dc0:	and	w0, w0, #0x4000
     dc4:	cmp	w0, #0x4, lsl #12
     dc8:	cset	w0, eq  // eq = none
     dcc:	and	w1, w0, #0xff
     dd0:	ldrb	w0, [sp, #56]
     dd4:	bfxil	w0, w1, #0, #1
     dd8:	strb	w0, [sp, #56]
     ddc:	ldrb	w0, [sp, #56]
     de0:	orr	w0, w0, #0x2
     de4:	strb	w0, [sp, #56]
     de8:	ldr	x0, [sp, #112]
     dec:	ldr	w0, [x0, #28]
     df0:	bl	38 <grub_mod_init-0x1030>
     df4:	str	w0, [sp, #60]
     df8:	add	x1, sp, #0x38
     dfc:	add	x0, sp, #0x48
     e00:	ldr	x3, [sp, #24]
     e04:	ldr	x2, [sp, #16]
     e08:	blr	x3
     e0c:	cmp	w0, #0x0
     e10:	b.ne	e6c <grub_mod_init-0x1fc>  // b.any
     e14:	ldrh	w1, [sp, #110]
     e18:	ldr	x0, [sp, #112]
     e1c:	bl	580 <grub_mod_init-0xae8>
     e20:	ldr	x0, [sp, #112]
     e24:	ldr	w0, [x0, #72]
     e28:	mov	w1, w0
     e2c:	ldr	w0, [sp, #124]
     e30:	add	w0, w1, w0
     e34:	add	w0, w0, #0x2
     e38:	str	w0, [sp, #124]
     e3c:	ldr	x0, [sp, #112]
     e40:	ldr	w0, [x0, #24]
     e44:	bl	38 <grub_mod_init-0x1030>
     e48:	mov	w1, w0
     e4c:	ldr	w0, [sp, #124]
     e50:	cmp	w0, w1
     e54:	b.cc	cac <grub_mod_init-0x3bc>  // b.lo, b.ul, b.last
     e58:	b	e70 <grub_mod_init-0x1f8>
     e5c:	nop
     e60:	b	e70 <grub_mod_init-0x1f8>
     e64:	nop
     e68:	b	e70 <grub_mod_init-0x1f8>
     e6c:	nop
     e70:	ldr	x0, [sp, #112]
     e74:	bl	0 <grub_free>
     e78:	adrp	x0, 0 <grub_mod_init-0x1068>
     e7c:	add	x0, x0, #0x0
     e80:	ldr	x0, [x0]
     e84:	ldr	w0, [x0]
     e88:	ldp	x29, x30, [sp], #128
     e8c:	ret
	...
     ea0:	stp	x29, x30, [sp, #-48]!
     ea4:	mov	x29, sp
     ea8:	str	x0, [sp, #24]
     eac:	str	x1, [sp, #16]
     eb0:	ldr	x0, [sp, #24]
     eb4:	ldr	x0, [x0, #8]
     eb8:	ldr	x0, [x0]
     ebc:	bl	a60 <grub_mod_init-0x608>
     ec0:	str	x0, [sp, #40]
     ec4:	ldr	x0, [sp, #40]
     ec8:	cmp	x0, #0x0
     ecc:	b.ne	ee4 <grub_mod_init-0x184>  // b.any
     ed0:	adrp	x0, 0 <grub_mod_init-0x1068>
     ed4:	add	x0, x0, #0x0
     ed8:	ldr	x0, [x0]
     edc:	ldr	w0, [x0]
     ee0:	b	fd4 <grub_mod_init-0x94>
     ee4:	mov	w1, #0x1                   	// #1
     ee8:	ldr	x0, [sp, #40]
     eec:	bl	580 <grub_mod_init-0xae8>
     ef0:	adrp	x0, 0 <grub_mod_init-0x1068>
     ef4:	add	x0, x0, #0x0
     ef8:	ldr	x0, [x0]
     efc:	ldr	w0, [x0]
     f00:	cmp	w0, #0x0
     f04:	b.eq	f24 <grub_mod_init-0x144>  // b.none
     f08:	ldr	x0, [sp, #40]
     f0c:	bl	0 <grub_free>
     f10:	adrp	x0, 0 <grub_mod_init-0x1068>
     f14:	add	x0, x0, #0x0
     f18:	ldr	x0, [x0]
     f1c:	ldr	w0, [x0]
     f20:	b	fd4 <grub_mod_init-0x94>
     f24:	ldr	x0, [sp, #16]
     f28:	cmp	x0, #0x0
     f2c:	b.eq	f40 <grub_mod_init-0x128>  // b.none
     f30:	ldr	x0, [sp, #16]
     f34:	ldrb	w0, [x0]
     f38:	cmp	w0, #0x2f
     f3c:	b.eq	f6c <grub_mod_init-0xfc>  // b.none
     f40:	ldr	x2, [sp, #16]
     f44:	adrp	x0, 0 <grub_mod_init-0x1068>
     f48:	add	x0, x0, #0x0
     f4c:	ldr	x1, [x0]
     f50:	mov	w0, #0x7                   	// #7
     f54:	bl	0 <grub_error>
     f58:	adrp	x0, 0 <grub_mod_init-0x1068>
     f5c:	add	x0, x0, #0x0
     f60:	ldr	x0, [x0]
     f64:	ldr	w0, [x0]
     f68:	b	fd4 <grub_mod_init-0x94>
     f6c:	ldr	x1, [sp, #16]
     f70:	ldr	x0, [sp, #40]
     f74:	bl	7a8 <grub_mod_init-0x8c0>
     f78:	adrp	x0, 0 <grub_mod_init-0x1068>
     f7c:	add	x0, x0, #0x0
     f80:	ldr	x0, [x0]
     f84:	ldr	w0, [x0]
     f88:	cmp	w0, #0x0
     f8c:	b.eq	fac <grub_mod_init-0xbc>  // b.none
     f90:	ldr	x0, [sp, #40]
     f94:	bl	0 <grub_free>
     f98:	adrp	x0, 0 <grub_mod_init-0x1068>
     f9c:	add	x0, x0, #0x0
     fa0:	ldr	x0, [x0]
     fa4:	ldr	w0, [x0]
     fa8:	b	fd4 <grub_mod_init-0x94>
     fac:	ldr	x0, [sp, #24]
     fb0:	ldr	x1, [sp, #40]
     fb4:	str	x1, [x0, #80]
     fb8:	ldr	x0, [sp, #40]
     fbc:	ldr	w0, [x0, #24]
     fc0:	bl	38 <grub_mod_init-0x1030>
     fc4:	mov	w1, w0
     fc8:	ldr	x0, [sp, #24]
     fcc:	str	x1, [x0, #64]
     fd0:	mov	w0, #0x0                   	// #0
     fd4:	ldp	x29, x30, [sp], #48
     fd8:	ret
     fdc:	nop
	...
     ff0:	stp	x29, x30, [sp, #-64]!
     ff4:	mov	x29, sp
     ff8:	str	x0, [sp, #40]
     ffc:	str	x1, [sp, #32]
    1000:	str	x2, [sp, #24]
    1004:	ldr	x0, [sp, #40]
    1008:	ldr	x0, [x0, #80]
    100c:	str	x0, [sp, #56]
    1010:	ldr	x0, [sp, #40]
    1014:	ldr	x1, [x0, #88]
    1018:	ldr	x0, [sp, #40]
    101c:	ldr	x2, [x0, #96]
    1020:	ldr	x0, [sp, #40]
    1024:	ldr	x0, [x0, #24]
    1028:	ldr	x5, [sp, #32]
    102c:	ldr	x4, [sp, #24]
    1030:	mov	x3, x0
    1034:	ldr	x0, [sp, #56]
    1038:	bl	2b8 <grub_mod_init-0xdb0>
    103c:	ldp	x29, x30, [sp], #64
    1040:	ret
    1044:	stp	x29, x30, [sp, #-32]!
    1048:	mov	x29, sp
    104c:	str	x0, [sp, #24]
    1050:	ldr	x0, [sp, #24]
    1054:	ldr	x0, [x0, #80]
    1058:	bl	0 <grub_free>
    105c:	mov	w0, #0x0                   	// #0
    1060:	ldp	x29, x30, [sp], #32
    1064:	ret

0000000000001068 <grub_mod_init>:
    1068:	stp	x29, x30, [sp, #-32]!
    106c:	mov	x29, sp
    1070:	str	x0, [sp, #24]
    1074:	adrp	x0, 0 <grub_mod_init-0x1068>
    1078:	add	x0, x0, #0x0
    107c:	ldr	x0, [x0]
    1080:	bl	50 <grub_mod_init-0x1018>
    1084:	adrp	x0, 0 <grub_mod_init-0x1068>
    1088:	add	x0, x0, #0x0
    108c:	ldr	x0, [x0]
    1090:	ldr	x1, [sp, #24]
    1094:	str	x1, [x0]
    1098:	nop
    109c:	ldp	x29, x30, [sp], #32
    10a0:	ret
    10a4:	nop
	...

00000000000010b8 <grub_mod_fini>:
    10b8:	stp	x29, x30, [sp, #-16]!
    10bc:	mov	x29, sp
    10c0:	adrp	x0, 0 <grub_mod_init-0x1068>
    10c4:	add	x0, x0, #0x0
    10c8:	ldr	x0, [x0]
    10cc:	bl	88 <grub_mod_init-0xfe0>
    10d0:	nop
    10d4:	ldp	x29, x30, [sp], #16
    10d8:	ret
    10dc:	nop
	...
