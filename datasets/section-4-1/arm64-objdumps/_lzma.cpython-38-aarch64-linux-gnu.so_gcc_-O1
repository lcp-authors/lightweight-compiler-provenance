
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021c0 <.init>:
    21c0:	stp	x29, x30, [sp, #-16]!
    21c4:	mov	x29, sp
    21c8:	bl	2650 <_PyDict_SetItemId@plt+0x10>
    21cc:	ldp	x29, x30, [sp], #16
    21d0:	ret

Disassembly of section .plt:

00000000000021e0 <memcpy@plt-0x20>:
    21e0:	stp	x16, x30, [sp, #-16]!
    21e4:	adrp	x16, 16000 <PyInit__lzma@@Base+0x11988>
    21e8:	ldr	x17, [x16, #4088]
    21ec:	add	x16, x16, #0xff8
    21f0:	br	x17
    21f4:	nop
    21f8:	nop
    21fc:	nop

0000000000002200 <memcpy@plt>:
    2200:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16]
    2208:	add	x16, x16, #0x0
    220c:	br	x17

0000000000002210 <memmove@plt>:
    2210:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #8]
    2218:	add	x16, x16, #0x8
    221c:	br	x17

0000000000002220 <PyModule_AddIntConstant@plt>:
    2220:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #16]
    2228:	add	x16, x16, #0x10
    222c:	br	x17

0000000000002230 <PyMapping_Check@plt>:
    2230:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #24]
    2238:	add	x16, x16, #0x18
    223c:	br	x17

0000000000002240 <_PyBytes_Resize@plt>:
    2240:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #32]
    2248:	add	x16, x16, #0x20
    224c:	br	x17

0000000000002250 <lzma_code@plt>:
    2250:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #40]
    2258:	add	x16, x16, #0x28
    225c:	br	x17

0000000000002260 <PyEval_RestoreThread@plt>:
    2260:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #48]
    2268:	add	x16, x16, #0x30
    226c:	br	x17

0000000000002270 <PyMem_Free@plt>:
    2270:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #56]
    2278:	add	x16, x16, #0x38
    227c:	br	x17

0000000000002280 <PyLong_FromUnsignedLongLong@plt>:
    2280:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #64]
    2288:	add	x16, x16, #0x40
    228c:	br	x17

0000000000002290 <PyBuffer_Release@plt>:
    2290:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #72]
    2298:	add	x16, x16, #0x48
    229c:	br	x17

00000000000022a0 <PyLong_AsUnsignedLongLong@plt>:
    22a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #80]
    22a8:	add	x16, x16, #0x50
    22ac:	br	x17

00000000000022b0 <__cxa_finalize@plt>:
    22b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #88]
    22b8:	add	x16, x16, #0x58
    22bc:	br	x17

00000000000022c0 <PyMem_RawMalloc@plt>:
    22c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #96]
    22c8:	add	x16, x16, #0x60
    22cc:	br	x17

00000000000022d0 <PyBuffer_IsContiguous@plt>:
    22d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #104]
    22d8:	add	x16, x16, #0x68
    22dc:	br	x17

00000000000022e0 <PyBytes_FromStringAndSize@plt>:
    22e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #112]
    22e8:	add	x16, x16, #0x70
    22ec:	br	x17

00000000000022f0 <_Py_Dealloc@plt>:
    22f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #120]
    22f8:	add	x16, x16, #0x78
    22fc:	br	x17

0000000000002300 <PyErr_NoMemory@plt>:
    2300:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #128]
    2308:	add	x16, x16, #0x80
    230c:	br	x17

0000000000002310 <PyErr_NewExceptionWithDoc@plt>:
    2310:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #136]
    2318:	add	x16, x16, #0x88
    231c:	br	x17

0000000000002320 <PyThread_acquire_lock@plt>:
    2320:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #144]
    2328:	add	x16, x16, #0x90
    232c:	br	x17

0000000000002330 <lzma_easy_encoder@plt>:
    2330:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #152]
    2338:	add	x16, x16, #0x98
    233c:	br	x17

0000000000002340 <_PyArg_UnpackKeywords@plt>:
    2340:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #160]
    2348:	add	x16, x16, #0xa0
    234c:	br	x17

0000000000002350 <PyErr_SetString@plt>:
    2350:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #168]
    2358:	add	x16, x16, #0xa8
    235c:	br	x17

0000000000002360 <PyMapping_GetItemString@plt>:
    2360:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #176]
    2368:	add	x16, x16, #0xb0
    236c:	br	x17

0000000000002370 <lzma_raw_encoder@plt>:
    2370:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #184]
    2378:	add	x16, x16, #0xb8
    237c:	br	x17

0000000000002380 <PyMem_Realloc@plt>:
    2380:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #192]
    2388:	add	x16, x16, #0xc0
    238c:	br	x17

0000000000002390 <PyErr_SetNone@plt>:
    2390:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #200]
    2398:	add	x16, x16, #0xc8
    239c:	br	x17

00000000000023a0 <PyErr_ExceptionMatches@plt>:
    23a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #208]
    23a8:	add	x16, x16, #0xd0
    23ac:	br	x17

00000000000023b0 <lzma_properties_size@plt>:
    23b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #216]
    23b8:	add	x16, x16, #0xd8
    23bc:	br	x17

00000000000023c0 <PySequence_GetItem@plt>:
    23c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #224]
    23c8:	add	x16, x16, #0xe0
    23cc:	br	x17

00000000000023d0 <lzma_auto_decoder@plt>:
    23d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #232]
    23d8:	add	x16, x16, #0xe8
    23dc:	br	x17

00000000000023e0 <PyType_Ready@plt>:
    23e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #240]
    23e8:	add	x16, x16, #0xf0
    23ec:	br	x17

00000000000023f0 <PyLong_AsSsize_t@plt>:
    23f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #248]
    23f8:	add	x16, x16, #0xf8
    23fc:	br	x17

0000000000002400 <_PyArg_BadArgument@plt>:
    2400:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #256]
    2408:	add	x16, x16, #0x100
    240c:	br	x17

0000000000002410 <PySequence_Size@plt>:
    2410:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #264]
    2418:	add	x16, x16, #0x108
    241c:	br	x17

0000000000002420 <PyErr_Clear@plt>:
    2420:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #272]
    2428:	add	x16, x16, #0x110
    242c:	br	x17

0000000000002430 <PyBool_FromLong@plt>:
    2430:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #280]
    2438:	add	x16, x16, #0x118
    243c:	br	x17

0000000000002440 <__gmon_start__@plt>:
    2440:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #288]
    2448:	add	x16, x16, #0x120
    244c:	br	x17

0000000000002450 <PyTuple_New@plt>:
    2450:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #296]
    2458:	add	x16, x16, #0x128
    245c:	br	x17

0000000000002460 <_PyArg_CheckPositional@plt>:
    2460:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #304]
    2468:	add	x16, x16, #0x130
    246c:	br	x17

0000000000002470 <lzma_properties_decode@plt>:
    2470:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #312]
    2478:	add	x16, x16, #0x138
    247c:	br	x17

0000000000002480 <PyErr_Occurred@plt>:
    2480:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #320]
    2488:	add	x16, x16, #0x140
    248c:	br	x17

0000000000002490 <PyModule_Create2@plt>:
    2490:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #328]
    2498:	add	x16, x16, #0x148
    249c:	br	x17

00000000000024a0 <lzma_stream_decoder@plt>:
    24a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #336]
    24a8:	add	x16, x16, #0x150
    24ac:	br	x17

00000000000024b0 <lzma_alone_decoder@plt>:
    24b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #344]
    24b8:	add	x16, x16, #0x158
    24bc:	br	x17

00000000000024c0 <lzma_end@plt>:
    24c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #352]
    24c8:	add	x16, x16, #0x160
    24cc:	br	x17

00000000000024d0 <PyMem_RawFree@plt>:
    24d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #360]
    24d8:	add	x16, x16, #0x168
    24dc:	br	x17

00000000000024e0 <lzma_get_check@plt>:
    24e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #368]
    24e8:	add	x16, x16, #0x170
    24ec:	br	x17

00000000000024f0 <free@plt>:
    24f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #376]
    24f8:	add	x16, x16, #0x178
    24fc:	br	x17

0000000000002500 <PyThread_allocate_lock@plt>:
    2500:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #384]
    2508:	add	x16, x16, #0x180
    250c:	br	x17

0000000000002510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2510:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #392]
    2518:	add	x16, x16, #0x188
    251c:	br	x17

0000000000002520 <PyThread_release_lock@plt>:
    2520:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #400]
    2528:	add	x16, x16, #0x190
    252c:	br	x17

0000000000002530 <lzma_raw_decoder@plt>:
    2530:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #408]
    2538:	add	x16, x16, #0x198
    253c:	br	x17

0000000000002540 <PyDict_New@plt>:
    2540:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #416]
    2548:	add	x16, x16, #0x1a0
    254c:	br	x17

0000000000002550 <lzma_alone_encoder@plt>:
    2550:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #424]
    2558:	add	x16, x16, #0x1a8
    255c:	br	x17

0000000000002560 <PyObject_GetBuffer@plt>:
    2560:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #432]
    2568:	add	x16, x16, #0x1b0
    256c:	br	x17

0000000000002570 <lzma_properties_encode@plt>:
    2570:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #440]
    2578:	add	x16, x16, #0x1b8
    257c:	br	x17

0000000000002580 <PyEval_SaveThread@plt>:
    2580:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #448]
    2588:	add	x16, x16, #0x1c0
    258c:	br	x17

0000000000002590 <PyModule_AddObject@plt>:
    2590:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #456]
    2598:	add	x16, x16, #0x1c8
    259c:	br	x17

00000000000025a0 <PyType_IsSubtype@plt>:
    25a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #464]
    25a8:	add	x16, x16, #0x1d0
    25ac:	br	x17

00000000000025b0 <PyErr_Format@plt>:
    25b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #472]
    25b8:	add	x16, x16, #0x1d8
    25bc:	br	x17

00000000000025c0 <lzma_check_is_supported@plt>:
    25c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #480]
    25c8:	add	x16, x16, #0x1e0
    25cc:	br	x17

00000000000025d0 <lzma_stream_encoder@plt>:
    25d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #488]
    25d8:	add	x16, x16, #0x1e8
    25dc:	br	x17

00000000000025e0 <PyLong_FromLongLong@plt>:
    25e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #496]
    25e8:	add	x16, x16, #0x1f0
    25ec:	br	x17

00000000000025f0 <PyNumber_Index@plt>:
    25f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #504]
    25f8:	add	x16, x16, #0x1f8
    25fc:	br	x17

0000000000002600 <_PyLong_AsInt@plt>:
    2600:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #512]
    2608:	add	x16, x16, #0x200
    260c:	br	x17

0000000000002610 <lzma_lzma_preset@plt>:
    2610:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #520]
    2618:	add	x16, x16, #0x208
    261c:	br	x17

0000000000002620 <PyMem_Malloc@plt>:
    2620:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #528]
    2628:	add	x16, x16, #0x210
    262c:	br	x17

0000000000002630 <PyThread_free_lock@plt>:
    2630:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #536]
    2638:	add	x16, x16, #0x218
    263c:	br	x17

0000000000002640 <_PyDict_SetItemId@plt>:
    2640:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #544]
    2648:	add	x16, x16, #0x220
    264c:	br	x17

Disassembly of section .text:

0000000000002650 <PyInit__lzma@@Base-0x2028>:
    2650:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2654:	ldr	x0, [x0, #4032]
    2658:	cbz	x0, 2660 <_PyDict_SetItemId@plt+0x20>
    265c:	b	2440 <__gmon_start__@plt>
    2660:	ret
    2664:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2668:	add	x0, x0, #0x9b0
    266c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    2670:	add	x1, x1, #0x9b0
    2674:	cmp	x0, x1
    2678:	b.eq	26a4 <_PyDict_SetItemId@plt+0x64>  // b.none
    267c:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    2680:	ldr	x1, [x1, #3976]
    2684:	cbz	x1, 26a4 <_PyDict_SetItemId@plt+0x64>
    2688:	stp	x29, x30, [sp, #-16]!
    268c:	mov	x29, sp
    2690:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2694:	add	x0, x0, #0x9b0
    2698:	blr	x1
    269c:	ldp	x29, x30, [sp], #16
    26a0:	ret
    26a4:	ret
    26a8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    26ac:	add	x0, x0, #0x9b0
    26b0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    26b4:	add	x1, x1, #0x9b0
    26b8:	sub	x0, x0, x1
    26bc:	lsr	x1, x0, #63
    26c0:	add	x0, x1, x0, asr #3
    26c4:	cmp	xzr, x0, asr #1
    26c8:	b.eq	26f8 <_PyDict_SetItemId@plt+0xb8>  // b.none
    26cc:	asr	x1, x0, #1
    26d0:	adrp	x2, 16000 <PyInit__lzma@@Base+0x11988>
    26d4:	ldr	x2, [x2, #4064]
    26d8:	cbz	x2, 26f8 <_PyDict_SetItemId@plt+0xb8>
    26dc:	stp	x29, x30, [sp, #-16]!
    26e0:	mov	x29, sp
    26e4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    26e8:	add	x0, x0, #0x9b0
    26ec:	blr	x2
    26f0:	ldp	x29, x30, [sp], #16
    26f4:	ret
    26f8:	ret
    26fc:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2700:	ldrb	w0, [x0, #2480]
    2704:	cbnz	w0, 2740 <_PyDict_SetItemId@plt+0x100>
    2708:	stp	x29, x30, [sp, #-16]!
    270c:	mov	x29, sp
    2710:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2714:	ldr	x0, [x0, #3992]
    2718:	cbz	x0, 2728 <_PyDict_SetItemId@plt+0xe8>
    271c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2720:	ldr	x0, [x0, #552]
    2724:	bl	22b0 <__cxa_finalize@plt>
    2728:	bl	2664 <_PyDict_SetItemId@plt+0x24>
    272c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2730:	mov	w1, #0x1                   	// #1
    2734:	strb	w1, [x0, #2480]
    2738:	ldp	x29, x30, [sp], #16
    273c:	ret
    2740:	ret
    2744:	stp	x29, x30, [sp, #-16]!
    2748:	mov	x29, sp
    274c:	bl	26a8 <_PyDict_SetItemId@plt+0x68>
    2750:	ldp	x29, x30, [sp], #16
    2754:	ret
    2758:	stp	x29, x30, [sp, #-32]!
    275c:	mov	x29, sp
    2760:	stp	x19, x20, [sp, #16]
    2764:	mov	x20, x1
    2768:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    276c:	mov	x19, x0
    2770:	bl	2480 <PyErr_Occurred@plt>
    2774:	cbz	x0, 2788 <_PyDict_SetItemId@plt+0x148>
    2778:	mov	w0, #0x0                   	// #0
    277c:	ldp	x19, x20, [sp, #16]
    2780:	ldp	x29, x30, [sp], #32
    2784:	ret
    2788:	tst	x19, #0xffffffff00000000
    278c:	b.ne	279c <_PyDict_SetItemId@plt+0x15c>  // b.any
    2790:	str	w19, [x20]
    2794:	mov	w0, #0x1                   	// #1
    2798:	b	277c <_PyDict_SetItemId@plt+0x13c>
    279c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    27a0:	add	x1, x1, #0xbc8
    27a4:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    27a8:	ldr	x0, [x0, #4040]
    27ac:	ldr	x0, [x0]
    27b0:	bl	2350 <PyErr_SetString@plt>
    27b4:	mov	w0, #0x0                   	// #0
    27b8:	b	277c <_PyDict_SetItemId@plt+0x13c>
    27bc:	stp	x29, x30, [sp, #-32]!
    27c0:	mov	x29, sp
    27c4:	stp	x19, x20, [sp, #16]
    27c8:	mov	x20, x1
    27cc:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    27d0:	mov	x19, x0
    27d4:	bl	2480 <PyErr_Occurred@plt>
    27d8:	cbz	x0, 27ec <_PyDict_SetItemId@plt+0x1ac>
    27dc:	mov	w0, #0x0                   	// #0
    27e0:	ldp	x19, x20, [sp, #16]
    27e4:	ldp	x29, x30, [sp], #32
    27e8:	ret
    27ec:	tst	x19, #0xffffffff00000000
    27f0:	b.ne	2800 <_PyDict_SetItemId@plt+0x1c0>  // b.any
    27f4:	str	w19, [x20]
    27f8:	mov	w0, #0x1                   	// #1
    27fc:	b	27e0 <_PyDict_SetItemId@plt+0x1a0>
    2800:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2804:	add	x1, x1, #0xbf8
    2808:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    280c:	ldr	x0, [x0, #4040]
    2810:	ldr	x0, [x0]
    2814:	bl	2350 <PyErr_SetString@plt>
    2818:	mov	w0, #0x0                   	// #0
    281c:	b	27e0 <_PyDict_SetItemId@plt+0x1a0>
    2820:	stp	x29, x30, [sp, #-32]!
    2824:	mov	x29, sp
    2828:	stp	x19, x20, [sp, #16]
    282c:	mov	x20, x1
    2830:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2834:	mov	x19, x0
    2838:	bl	2480 <PyErr_Occurred@plt>
    283c:	cbz	x0, 2850 <_PyDict_SetItemId@plt+0x210>
    2840:	mov	w0, #0x0                   	// #0
    2844:	ldp	x19, x20, [sp, #16]
    2848:	ldp	x29, x30, [sp], #32
    284c:	ret
    2850:	tst	x19, #0xffffffff00000000
    2854:	b.ne	2864 <_PyDict_SetItemId@plt+0x224>  // b.any
    2858:	str	w19, [x20]
    285c:	mov	w0, #0x1                   	// #1
    2860:	b	2844 <_PyDict_SetItemId@plt+0x204>
    2864:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2868:	add	x1, x1, #0xc20
    286c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2870:	ldr	x0, [x0, #4040]
    2874:	ldr	x0, [x0]
    2878:	bl	2350 <PyErr_SetString@plt>
    287c:	mov	w0, #0x0                   	// #0
    2880:	b	2844 <_PyDict_SetItemId@plt+0x204>
    2884:	stp	x29, x30, [sp, #-16]!
    2888:	mov	x29, sp
    288c:	mov	x0, x1
    2890:	bl	24d0 <PyMem_RawFree@plt>
    2894:	ldp	x29, x30, [sp], #16
    2898:	ret
    289c:	cbz	x2, 28b0 <_PyDict_SetItemId@plt+0x270>
    28a0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    28a4:	udiv	x0, x0, x2
    28a8:	cmp	x0, x1
    28ac:	b.cc	28c8 <_PyDict_SetItemId@plt+0x288>  // b.lo, b.ul, b.last
    28b0:	stp	x29, x30, [sp, #-16]!
    28b4:	mov	x29, sp
    28b8:	mul	x0, x2, x1
    28bc:	bl	22c0 <PyMem_RawMalloc@plt>
    28c0:	ldp	x29, x30, [sp], #16
    28c4:	ret
    28c8:	mov	x0, #0x0                   	// #0
    28cc:	ret
    28d0:	stp	x29, x30, [sp, #-16]!
    28d4:	mov	x29, sp
    28d8:	cmp	w0, #0x7
    28dc:	b.eq	29b0 <_PyDict_SetItemId@plt+0x370>  // b.none
    28e0:	mov	w2, w0
    28e4:	b.hi	2948 <_PyDict_SetItemId@plt+0x308>  // b.pmore
    28e8:	cmp	w0, #0x4
    28ec:	b.eq	2a20 <_PyDict_SetItemId@plt+0x3e0>  // b.none
    28f0:	b.ls	2918 <_PyDict_SetItemId@plt+0x2d8>  // b.plast
    28f4:	cmp	w0, #0x5
    28f8:	b.eq	29a4 <_PyDict_SetItemId@plt+0x364>  // b.none
    28fc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2900:	add	x1, x1, #0xc68
    2904:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2908:	ldr	x0, [x0, #2488]
    290c:	bl	2350 <PyErr_SetString@plt>
    2910:	mov	w0, #0x1                   	// #1
    2914:	b	2a24 <_PyDict_SetItemId@plt+0x3e4>
    2918:	mov	w0, #0x0                   	// #0
    291c:	cmp	w2, #0x2
    2920:	b.ls	2a24 <_PyDict_SetItemId@plt+0x3e4>  // b.plast
    2924:	cmp	w2, #0x3
    2928:	b.ne	2a04 <_PyDict_SetItemId@plt+0x3c4>  // b.any
    292c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2930:	add	x1, x1, #0xc48
    2934:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2938:	ldr	x0, [x0, #2488]
    293c:	bl	2350 <PyErr_SetString@plt>
    2940:	mov	w0, #0x1                   	// #1
    2944:	b	2a24 <_PyDict_SetItemId@plt+0x3e4>
    2948:	cmp	w0, #0xa
    294c:	b.eq	29e8 <_PyDict_SetItemId@plt+0x3a8>  // b.none
    2950:	b.ls	2978 <_PyDict_SetItemId@plt+0x338>  // b.plast
    2954:	cmp	w0, #0xb
    2958:	b.ne	2a04 <_PyDict_SetItemId@plt+0x3c4>  // b.any
    295c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2960:	add	x1, x1, #0xd08
    2964:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2968:	ldr	x0, [x0, #2488]
    296c:	bl	2350 <PyErr_SetString@plt>
    2970:	mov	w0, #0x1                   	// #1
    2974:	b	2a24 <_PyDict_SetItemId@plt+0x3e4>
    2978:	cmp	w0, #0x8
    297c:	b.eq	29cc <_PyDict_SetItemId@plt+0x38c>  // b.none
    2980:	cmp	w0, #0x9
    2984:	b.ne	2a04 <_PyDict_SetItemId@plt+0x3c4>  // b.any
    2988:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    298c:	add	x1, x1, #0xcd0
    2990:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2994:	ldr	x0, [x0, #2488]
    2998:	bl	2350 <PyErr_SetString@plt>
    299c:	mov	w0, #0x1                   	// #1
    29a0:	b	2a24 <_PyDict_SetItemId@plt+0x3e4>
    29a4:	bl	2300 <PyErr_NoMemory@plt>
    29a8:	mov	w0, #0x1                   	// #1
    29ac:	b	2a24 <_PyDict_SetItemId@plt+0x3e4>
    29b0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    29b4:	add	x1, x1, #0xc88
    29b8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    29bc:	ldr	x0, [x0, #2488]
    29c0:	bl	2350 <PyErr_SetString@plt>
    29c4:	mov	w0, #0x1                   	// #1
    29c8:	b	2a24 <_PyDict_SetItemId@plt+0x3e4>
    29cc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    29d0:	add	x1, x1, #0xcb0
    29d4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    29d8:	ldr	x0, [x0, #2488]
    29dc:	bl	2350 <PyErr_SetString@plt>
    29e0:	mov	w0, #0x1                   	// #1
    29e4:	b	2a24 <_PyDict_SetItemId@plt+0x3e4>
    29e8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    29ec:	add	x1, x1, #0xce8
    29f0:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    29f4:	ldr	x0, [x0, #2488]
    29f8:	bl	2350 <PyErr_SetString@plt>
    29fc:	mov	w0, #0x1                   	// #1
    2a00:	b	2a24 <_PyDict_SetItemId@plt+0x3e4>
    2a04:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2a08:	add	x1, x1, #0xd18
    2a0c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2a10:	ldr	x0, [x0, #2488]
    2a14:	bl	25b0 <PyErr_Format@plt>
    2a18:	mov	w0, #0x1                   	// #1
    2a1c:	b	2a24 <_PyDict_SetItemId@plt+0x3e4>
    2a20:	mov	w0, #0x0                   	// #0
    2a24:	ldp	x29, x30, [sp], #16
    2a28:	ret
    2a2c:	stp	x29, x30, [sp, #-32]!
    2a30:	mov	x29, sp
    2a34:	stp	x19, x20, [sp, #16]
    2a38:	mov	x20, x0
    2a3c:	ldr	x0, [x0]
    2a40:	cmn	x0, #0x1
    2a44:	b.eq	2a70 <_PyDict_SetItemId@plt+0x430>  // b.none
    2a48:	mov	x0, x20
    2a4c:	mov	w19, #0x0                   	// #0
    2a50:	ldr	x0, [x0, #8]
    2a54:	bl	2270 <PyMem_Free@plt>
    2a58:	add	w19, w19, #0x1
    2a5c:	sbfiz	x1, x19, #4, #32
    2a60:	add	x0, x20, x1
    2a64:	ldr	x1, [x20, x1]
    2a68:	cmn	x1, #0x1
    2a6c:	b.ne	2a50 <_PyDict_SetItemId@plt+0x410>  // b.any
    2a70:	ldp	x19, x20, [sp, #16]
    2a74:	ldp	x29, x30, [sp], #32
    2a78:	ret
    2a7c:	sub	sp, sp, #0xc0
    2a80:	stp	x29, x30, [sp, #112]
    2a84:	add	x29, sp, #0x70
    2a88:	stp	x19, x20, [sp, #128]
    2a8c:	stp	x21, x22, [sp, #144]
    2a90:	mov	x22, x0
    2a94:	mov	x21, x1
    2a98:	bl	2230 <PyMapping_Check@plt>
    2a9c:	cbz	w0, 2b6c <_PyDict_SetItemId@plt+0x52c>
    2aa0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2aa4:	add	x1, x1, #0xd78
    2aa8:	mov	x0, x22
    2aac:	bl	2360 <PyMapping_GetItemString@plt>
    2ab0:	mov	x19, x0
    2ab4:	cbz	x0, 2ba0 <_PyDict_SetItemId@plt+0x560>
    2ab8:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2abc:	str	x0, [x21]
    2ac0:	ldr	x2, [x19]
    2ac4:	sub	x2, x2, #0x1
    2ac8:	str	x2, [x19]
    2acc:	cbz	x2, 2bd8 <_PyDict_SetItemId@plt+0x598>
    2ad0:	bl	2480 <PyErr_Occurred@plt>
    2ad4:	mov	x20, x0
    2ad8:	mov	w19, #0x0                   	// #0
    2adc:	cbnz	x0, 2b88 <_PyDict_SetItemId@plt+0x548>
    2ae0:	ldr	x2, [x21]
    2ae4:	cmp	x2, #0x9
    2ae8:	b.hi	2be4 <_PyDict_SetItemId@plt+0x5a4>  // b.pmore
    2aec:	cmp	x2, #0x3
    2af0:	b.hi	2ddc <_PyDict_SetItemId@plt+0x79c>  // b.pmore
    2af4:	b.ne	2e6c <_PyDict_SetItemId@plt+0x82c>  // b.any
    2af8:	mov	w0, #0x1                   	// #1
    2afc:	str	w0, [sp, #176]
    2b00:	add	x6, sp, #0xb0
    2b04:	adrp	x5, 2000 <memcpy@plt-0x200>
    2b08:	add	x5, x5, #0x820
    2b0c:	add	x4, sp, #0xb8
    2b10:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12988>
    2b14:	add	x3, x3, #0x570
    2b18:	add	x3, x3, #0x58
    2b1c:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2b20:	add	x2, x2, #0xe20
    2b24:	mov	x1, x22
    2b28:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2b2c:	ldr	x0, [x0, #2496]
    2b30:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    2b34:	cbz	w0, 2db4 <_PyDict_SetItemId@plt+0x774>
    2b38:	mov	x0, #0x28                  	// #40
    2b3c:	bl	2620 <PyMem_Malloc@plt>
    2b40:	mov	x20, x0
    2b44:	cbz	x0, 2dd0 <_PyDict_SetItemId@plt+0x790>
    2b48:	stp	xzr, xzr, [x0]
    2b4c:	stp	xzr, xzr, [x0, #16]
    2b50:	str	xzr, [x0, #32]
    2b54:	ldr	w0, [sp, #176]
    2b58:	str	w0, [x20, #4]
    2b5c:	str	x20, [x21, #8]
    2b60:	cmp	x20, #0x0
    2b64:	cset	w19, ne  // ne = any
    2b68:	b	2b88 <_PyDict_SetItemId@plt+0x548>
    2b6c:	mov	w19, w0
    2b70:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2b74:	add	x1, x1, #0xd40
    2b78:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2b7c:	ldr	x0, [x0, #4016]
    2b80:	ldr	x0, [x0]
    2b84:	bl	2350 <PyErr_SetString@plt>
    2b88:	mov	w0, w19
    2b8c:	ldp	x19, x20, [sp, #128]
    2b90:	ldp	x21, x22, [sp, #144]
    2b94:	ldp	x29, x30, [sp, #112]
    2b98:	add	sp, sp, #0xc0
    2b9c:	ret
    2ba0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2ba4:	ldr	x0, [x0, #4024]
    2ba8:	ldr	x0, [x0]
    2bac:	bl	23a0 <PyErr_ExceptionMatches@plt>
    2bb0:	mov	w19, w0
    2bb4:	cbz	w0, 2b88 <_PyDict_SetItemId@plt+0x548>
    2bb8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2bbc:	add	x1, x1, #0xd80
    2bc0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2bc4:	ldr	x0, [x0, #4008]
    2bc8:	ldr	x0, [x0]
    2bcc:	bl	2350 <PyErr_SetString@plt>
    2bd0:	mov	w19, #0x0                   	// #0
    2bd4:	b	2b88 <_PyDict_SetItemId@plt+0x548>
    2bd8:	mov	x0, x19
    2bdc:	bl	22f0 <_Py_Dealloc@plt>
    2be0:	b	2ad0 <_PyDict_SetItemId@plt+0x490>
    2be4:	cmp	x2, #0x21
    2be8:	b.eq	2bfc <_PyDict_SetItemId@plt+0x5bc>  // b.none
    2bec:	mov	x0, #0x1                   	// #1
    2bf0:	movk	x0, #0x4000, lsl #48
    2bf4:	cmp	x2, x0
    2bf8:	b.ne	2e6c <_PyDict_SetItemId@plt+0x82c>  // b.any
    2bfc:	mov	w0, #0x6                   	// #6
    2c00:	str	w0, [sp, #172]
    2c04:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2c08:	add	x1, x1, #0xdb0
    2c0c:	mov	x0, x22
    2c10:	bl	2360 <PyMapping_GetItemString@plt>
    2c14:	mov	x19, x0
    2c18:	str	x0, [sp, #184]
    2c1c:	cbz	x0, 2d2c <_PyDict_SetItemId@plt+0x6ec>
    2c20:	add	x1, sp, #0xac
    2c24:	bl	2820 <_PyDict_SetItemId@plt+0x1e0>
    2c28:	mov	w19, w0
    2c2c:	ldr	x0, [sp, #184]
    2c30:	ldr	x1, [x0]
    2c34:	sub	x1, x1, #0x1
    2c38:	str	x1, [x0]
    2c3c:	cbz	x1, 2d48 <_PyDict_SetItemId@plt+0x708>
    2c40:	cbz	w19, 2dac <_PyDict_SetItemId@plt+0x76c>
    2c44:	mov	x0, #0x70                  	// #112
    2c48:	bl	2620 <PyMem_Malloc@plt>
    2c4c:	mov	x19, x0
    2c50:	cbz	x0, 2d50 <_PyDict_SetItemId@plt+0x710>
    2c54:	stp	xzr, xzr, [x0]
    2c58:	stp	xzr, xzr, [x0, #16]
    2c5c:	stp	xzr, xzr, [x0, #32]
    2c60:	stp	xzr, xzr, [x0, #48]
    2c64:	stp	xzr, xzr, [x0, #64]
    2c68:	stp	xzr, xzr, [x0, #80]
    2c6c:	stp	xzr, xzr, [x0, #96]
    2c70:	ldr	w1, [sp, #172]
    2c74:	bl	2610 <lzma_lzma_preset@plt>
    2c78:	and	w0, w0, #0xff
    2c7c:	cbnz	w0, 2d5c <_PyDict_SetItemId@plt+0x71c>
    2c80:	adrp	x6, 2000 <memcpy@plt-0x200>
    2c84:	add	x6, x6, #0x820
    2c88:	add	x0, x19, #0x2c
    2c8c:	str	x0, [sp, #104]
    2c90:	str	x6, [sp, #96]
    2c94:	add	x0, x19, #0x28
    2c98:	str	x0, [sp, #88]
    2c9c:	adrp	x0, 2000 <memcpy@plt-0x200>
    2ca0:	add	x0, x0, #0x758
    2ca4:	str	x0, [sp, #80]
    2ca8:	add	x0, x19, #0x24
    2cac:	str	x0, [sp, #72]
    2cb0:	str	x6, [sp, #64]
    2cb4:	add	x0, x19, #0x20
    2cb8:	str	x0, [sp, #56]
    2cbc:	adrp	x0, 2000 <memcpy@plt-0x200>
    2cc0:	add	x0, x0, #0x7bc
    2cc4:	str	x0, [sp, #48]
    2cc8:	add	x0, x19, #0x1c
    2ccc:	str	x0, [sp, #40]
    2cd0:	str	x6, [sp, #32]
    2cd4:	add	x0, x19, #0x18
    2cd8:	str	x0, [sp, #24]
    2cdc:	str	x6, [sp, #16]
    2ce0:	add	x0, x19, #0x14
    2ce4:	str	x0, [sp, #8]
    2ce8:	str	x6, [sp]
    2cec:	mov	x7, x19
    2cf0:	add	x5, sp, #0xb8
    2cf4:	add	x4, sp, #0xb0
    2cf8:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12988>
    2cfc:	add	x3, x3, #0x570
    2d00:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2d04:	add	x2, x2, #0xdd8
    2d08:	mov	x1, x22
    2d0c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2d10:	ldr	x0, [x0, #2496]
    2d14:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    2d18:	cbz	w0, 2d84 <_PyDict_SetItemId@plt+0x744>
    2d1c:	str	x19, [x21, #8]
    2d20:	cmp	x19, #0x0
    2d24:	cset	w19, ne  // ne = any
    2d28:	b	2b88 <_PyDict_SetItemId@plt+0x548>
    2d2c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2d30:	ldr	x0, [x0, #4024]
    2d34:	ldr	x0, [x0]
    2d38:	bl	23a0 <PyErr_ExceptionMatches@plt>
    2d3c:	cbz	w0, 2d1c <_PyDict_SetItemId@plt+0x6dc>
    2d40:	bl	2420 <PyErr_Clear@plt>
    2d44:	b	2c44 <_PyDict_SetItemId@plt+0x604>
    2d48:	bl	22f0 <_Py_Dealloc@plt>
    2d4c:	b	2c40 <_PyDict_SetItemId@plt+0x600>
    2d50:	bl	2300 <PyErr_NoMemory@plt>
    2d54:	mov	x19, x0
    2d58:	b	2d1c <_PyDict_SetItemId@plt+0x6dc>
    2d5c:	mov	x0, x19
    2d60:	bl	2270 <PyMem_Free@plt>
    2d64:	ldr	w2, [sp, #172]
    2d68:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2d6c:	add	x1, x1, #0xdb8
    2d70:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2d74:	ldr	x0, [x0, #2488]
    2d78:	bl	25b0 <PyErr_Format@plt>
    2d7c:	mov	x19, x20
    2d80:	b	2d1c <_PyDict_SetItemId@plt+0x6dc>
    2d84:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2d88:	add	x1, x1, #0xdf0
    2d8c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2d90:	ldr	x0, [x0, #4008]
    2d94:	ldr	x0, [x0]
    2d98:	bl	2350 <PyErr_SetString@plt>
    2d9c:	mov	x0, x19
    2da0:	bl	2270 <PyMem_Free@plt>
    2da4:	mov	x19, x20
    2da8:	b	2d1c <_PyDict_SetItemId@plt+0x6dc>
    2dac:	mov	x19, x20
    2db0:	b	2d1c <_PyDict_SetItemId@plt+0x6dc>
    2db4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2db8:	add	x1, x1, #0xe28
    2dbc:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2dc0:	ldr	x0, [x0, #4008]
    2dc4:	ldr	x0, [x0]
    2dc8:	bl	2350 <PyErr_SetString@plt>
    2dcc:	b	2b5c <_PyDict_SetItemId@plt+0x51c>
    2dd0:	bl	2300 <PyErr_NoMemory@plt>
    2dd4:	mov	x20, x0
    2dd8:	b	2b5c <_PyDict_SetItemId@plt+0x51c>
    2ddc:	str	wzr, [sp, #176]
    2de0:	add	x6, sp, #0xb0
    2de4:	adrp	x5, 2000 <memcpy@plt-0x200>
    2de8:	add	x5, x5, #0x820
    2dec:	add	x4, sp, #0xb8
    2df0:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12988>
    2df4:	add	x3, x3, #0x570
    2df8:	add	x3, x3, #0x70
    2dfc:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2e00:	add	x2, x2, #0xe20
    2e04:	mov	x1, x22
    2e08:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    2e0c:	ldr	x0, [x0, #2496]
    2e10:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    2e14:	cbz	w0, 2e44 <_PyDict_SetItemId@plt+0x804>
    2e18:	mov	x0, #0x4                   	// #4
    2e1c:	bl	2620 <PyMem_Malloc@plt>
    2e20:	mov	x20, x0
    2e24:	cbz	x0, 2e60 <_PyDict_SetItemId@plt+0x820>
    2e28:	str	wzr, [x0]
    2e2c:	ldr	w0, [sp, #176]
    2e30:	str	w0, [x20]
    2e34:	str	x20, [x21, #8]
    2e38:	cmp	x20, #0x0
    2e3c:	cset	w19, ne  // ne = any
    2e40:	b	2b88 <_PyDict_SetItemId@plt+0x548>
    2e44:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2e48:	add	x1, x1, #0xe58
    2e4c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2e50:	ldr	x0, [x0, #4008]
    2e54:	ldr	x0, [x0]
    2e58:	bl	2350 <PyErr_SetString@plt>
    2e5c:	b	2e34 <_PyDict_SetItemId@plt+0x7f4>
    2e60:	bl	2300 <PyErr_NoMemory@plt>
    2e64:	mov	x20, x0
    2e68:	b	2e34 <_PyDict_SetItemId@plt+0x7f4>
    2e6c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2e70:	add	x1, x1, #0xe80
    2e74:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2e78:	ldr	x0, [x0, #4008]
    2e7c:	ldr	x0, [x0]
    2e80:	bl	25b0 <PyErr_Format@plt>
    2e84:	mov	w19, #0x0                   	// #0
    2e88:	b	2b88 <_PyDict_SetItemId@plt+0x548>
    2e8c:	stp	x29, x30, [sp, #-64]!
    2e90:	mov	x29, sp
    2e94:	stp	x23, x24, [sp, #48]
    2e98:	mov	x23, x0
    2e9c:	mov	x24, x1
    2ea0:	mov	x0, x1
    2ea4:	bl	2410 <PySequence_Size@plt>
    2ea8:	cmn	x0, #0x1
    2eac:	b.eq	2f8c <_PyDict_SetItemId@plt+0x94c>  // b.none
    2eb0:	stp	x21, x22, [sp, #32]
    2eb4:	mov	x22, x0
    2eb8:	cmp	x0, #0x4
    2ebc:	b.gt	2ef4 <_PyDict_SetItemId@plt+0x8b4>
    2ec0:	stp	x19, x20, [sp, #16]
    2ec4:	mov	x20, #0x0                   	// #0
    2ec8:	cmp	x0, #0x0
    2ecc:	b.gt	2f34 <_PyDict_SetItemId@plt+0x8f4>
    2ed0:	lsl	x22, x22, #4
    2ed4:	mov	x0, #0xffffffffffffffff    	// #-1
    2ed8:	str	x0, [x23, x22]
    2edc:	mov	w0, #0x0                   	// #0
    2ee0:	ldp	x19, x20, [sp, #16]
    2ee4:	ldp	x21, x22, [sp, #32]
    2ee8:	ldp	x23, x24, [sp, #48]
    2eec:	ldp	x29, x30, [sp], #64
    2ef0:	ret
    2ef4:	mov	w2, #0x4                   	// #4
    2ef8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    2efc:	add	x1, x1, #0xe98
    2f00:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    2f04:	ldr	x0, [x0, #4008]
    2f08:	ldr	x0, [x0]
    2f0c:	bl	25b0 <PyErr_Format@plt>
    2f10:	mov	w0, #0xffffffff            	// #-1
    2f14:	ldp	x21, x22, [sp, #32]
    2f18:	b	2ee8 <_PyDict_SetItemId@plt+0x8a8>
    2f1c:	mov	x0, x19
    2f20:	bl	22f0 <_Py_Dealloc@plt>
    2f24:	cbz	w21, 2f68 <_PyDict_SetItemId@plt+0x928>
    2f28:	add	x20, x20, #0x1
    2f2c:	cmp	x22, x20
    2f30:	b.eq	2ed0 <_PyDict_SetItemId@plt+0x890>  // b.none
    2f34:	mov	x1, x20
    2f38:	mov	x0, x24
    2f3c:	bl	23c0 <PySequence_GetItem@plt>
    2f40:	mov	x19, x0
    2f44:	cbz	x0, 2f68 <_PyDict_SetItemId@plt+0x928>
    2f48:	add	x1, x23, x20, lsl #4
    2f4c:	bl	2a7c <_PyDict_SetItemId@plt+0x43c>
    2f50:	mov	w21, w0
    2f54:	ldr	x2, [x19]
    2f58:	sub	x2, x2, #0x1
    2f5c:	str	x2, [x19]
    2f60:	cbnz	x2, 2f24 <_PyDict_SetItemId@plt+0x8e4>
    2f64:	b	2f1c <_PyDict_SetItemId@plt+0x8dc>
    2f68:	lsl	x20, x20, #4
    2f6c:	mov	x19, #0xffffffffffffffff    	// #-1
    2f70:	str	x19, [x23, x20]
    2f74:	mov	x0, x23
    2f78:	bl	2a2c <_PyDict_SetItemId@plt+0x3ec>
    2f7c:	mov	w0, w19
    2f80:	ldp	x19, x20, [sp, #16]
    2f84:	ldp	x21, x22, [sp, #32]
    2f88:	b	2ee8 <_PyDict_SetItemId@plt+0x8a8>
    2f8c:	mov	w0, #0xffffffff            	// #-1
    2f90:	b	2ee8 <_PyDict_SetItemId@plt+0x8a8>
    2f94:	sub	sp, sp, #0xc0
    2f98:	stp	x29, x30, [sp, #16]
    2f9c:	add	x29, sp, #0x10
    2fa0:	stp	x19, x20, [sp, #32]
    2fa4:	stp	x21, x22, [sp, #48]
    2fa8:	mov	x19, x0
    2fac:	mov	x0, x1
    2fb0:	ldr	x1, [x1, #16]
    2fb4:	cbz	x2, 315c <_PyDict_SetItemId@plt+0xb1c>
    2fb8:	ldr	x22, [x2, #16]
    2fbc:	add	x22, x1, x22
    2fc0:	add	x3, sp, #0xa8
    2fc4:	str	x3, [sp]
    2fc8:	mov	w7, #0x0                   	// #0
    2fcc:	mov	w6, #0x3                   	// #3
    2fd0:	mov	w5, #0x0                   	// #0
    2fd4:	adrp	x4, 17000 <PyInit__lzma@@Base+0x12988>
    2fd8:	add	x4, x4, #0x570
    2fdc:	add	x4, x4, #0x88
    2fe0:	mov	x3, #0x0                   	// #0
    2fe4:	add	x0, x0, #0x18
    2fe8:	bl	2340 <_PyArg_UnpackKeywords@plt>
    2fec:	mov	x21, x0
    2ff0:	cbz	x0, 3390 <_PyDict_SetItemId@plt+0xd50>
    2ff4:	str	x23, [sp, #64]
    2ff8:	cbz	x22, 33a4 <_PyDict_SetItemId@plt+0xd64>
    2ffc:	ldr	x0, [x21]
    3000:	cbz	x0, 31b0 <_PyDict_SetItemId@plt+0xb70>
    3004:	ldr	x0, [x0, #8]
    3008:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    300c:	ldr	x1, [x1, #3984]
    3010:	cmp	x0, x1
    3014:	b.eq	317c <_PyDict_SetItemId@plt+0xb3c>  // b.none
    3018:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    301c:	ldr	x1, [x1, #3984]
    3020:	bl	25a0 <PyType_IsSubtype@plt>
    3024:	cbnz	w0, 317c <_PyDict_SetItemId@plt+0xb3c>
    3028:	ldr	x0, [x21]
    302c:	bl	2600 <_PyLong_AsInt@plt>
    3030:	mov	w20, w0
    3034:	cmn	w0, #0x1
    3038:	b.eq	31a0 <_PyDict_SetItemId@plt+0xb60>  // b.none
    303c:	subs	x22, x22, #0x1
    3040:	b.eq	33a8 <_PyDict_SetItemId@plt+0xd68>  // b.none
    3044:	ldr	x0, [x21, #8]
    3048:	cbz	x0, 31b8 <_PyDict_SetItemId@plt+0xb78>
    304c:	cmp	x22, #0x1
    3050:	b.eq	31c4 <_PyDict_SetItemId@plt+0xb84>  // b.none
    3054:	ldr	x23, [x21, #16]
    3058:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    305c:	ldr	x1, [x1, #4056]
    3060:	cmp	x0, x1
    3064:	b.eq	31f4 <_PyDict_SetItemId@plt+0xbb4>  // b.none
    3068:	cmp	w20, #0x3
    306c:	b.eq	31d0 <_PyDict_SetItemId@plt+0xb90>  // b.none
    3070:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3074:	mov	x22, x0
    3078:	bl	2480 <PyErr_Occurred@plt>
    307c:	cbnz	x0, 3398 <_PyDict_SetItemId@plt+0xd58>
    3080:	cmp	w20, #0x3
    3084:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3088:	ldr	x0, [x0, #4056]
    308c:	ccmp	x23, x0, #0x4, ne  // ne = any
    3090:	b.ne	3230 <_PyDict_SetItemId@plt+0xbf0>  // b.any
    3094:	str	xzr, [x19, #32]
    3098:	adrp	x1, 2000 <memcpy@plt-0x200>
    309c:	add	x1, x1, #0x89c
    30a0:	str	x1, [x19, #16]
    30a4:	adrp	x1, 2000 <memcpy@plt-0x200>
    30a8:	add	x1, x1, #0x884
    30ac:	str	x1, [x19, #24]
    30b0:	add	x0, x19, #0x10
    30b4:	str	x0, [x19, #88]
    30b8:	str	xzr, [x19, #40]
    30bc:	bl	2500 <PyThread_allocate_lock@plt>
    30c0:	mov	x21, x0
    30c4:	cbz	x0, 3254 <_PyDict_SetItemId@plt+0xc14>
    30c8:	ldr	x0, [x19, #216]
    30cc:	cbz	x0, 30d4 <_PyDict_SetItemId@plt+0xa94>
    30d0:	bl	2630 <PyThread_free_lock@plt>
    30d4:	str	x21, [x19, #216]
    30d8:	mov	w0, #0x10                  	// #16
    30dc:	str	w0, [x19, #176]
    30e0:	mov	w0, #0x1                   	// #1
    30e4:	strb	w0, [x19, #192]
    30e8:	str	xzr, [x19, #200]
    30ec:	str	xzr, [x19, #208]
    30f0:	ldr	x21, [x19, #184]
    30f4:	mov	x1, #0x0                   	// #0
    30f8:	mov	x0, #0x0                   	// #0
    30fc:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3100:	str	x0, [x19, #184]
    3104:	cbz	x21, 3118 <_PyDict_SetItemId@plt+0xad8>
    3108:	ldr	x0, [x21]
    310c:	sub	x0, x0, #0x1
    3110:	str	x0, [x21]
    3114:	cbz	x0, 3278 <_PyDict_SetItemId@plt+0xc38>
    3118:	ldr	x0, [x19, #184]
    311c:	cbz	x0, 335c <_PyDict_SetItemId@plt+0xd1c>
    3120:	cmp	w20, #0x2
    3124:	b.eq	3300 <_PyDict_SetItemId@plt+0xcc0>  // b.none
    3128:	b.gt	3284 <_PyDict_SetItemId@plt+0xc44>
    312c:	cbz	w20, 32dc <_PyDict_SetItemId@plt+0xc9c>
    3130:	cmp	w20, #0x1
    3134:	b.ne	3324 <_PyDict_SetItemId@plt+0xce4>  // b.any
    3138:	mov	w2, #0x5                   	// #5
    313c:	mov	x1, x22
    3140:	add	x0, x19, #0x28
    3144:	bl	24a0 <lzma_stream_decoder@plt>
    3148:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    314c:	mov	w20, w0
    3150:	cbnz	w0, 3340 <_PyDict_SetItemId@plt+0xd00>
    3154:	ldr	x23, [sp, #64]
    3158:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    315c:	cmp	x1, #0x3
    3160:	b.hi	3174 <_PyDict_SetItemId@plt+0xb34>  // b.pmore
    3164:	str	x23, [sp, #64]
    3168:	add	x21, x0, #0x18
    316c:	mov	x22, x1
    3170:	b	2ff8 <_PyDict_SetItemId@plt+0x9b8>
    3174:	mov	x22, x1
    3178:	b	2fc0 <_PyDict_SetItemId@plt+0x980>
    317c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3180:	add	x1, x1, #0xed0
    3184:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3188:	ldr	x0, [x0, #4016]
    318c:	ldr	x0, [x0]
    3190:	bl	2350 <PyErr_SetString@plt>
    3194:	mov	w20, #0xffffffff            	// #-1
    3198:	ldr	x23, [sp, #64]
    319c:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    31a0:	bl	2480 <PyErr_Occurred@plt>
    31a4:	cbz	x0, 303c <_PyDict_SetItemId@plt+0x9fc>
    31a8:	ldr	x23, [sp, #64]
    31ac:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    31b0:	mov	w20, #0x0                   	// #0
    31b4:	b	3044 <_PyDict_SetItemId@plt+0xa04>
    31b8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    31bc:	ldr	x0, [x0, #4056]
    31c0:	b	3054 <_PyDict_SetItemId@plt+0xa14>
    31c4:	adrp	x23, 16000 <PyInit__lzma@@Base+0x11988>
    31c8:	ldr	x23, [x23, #4056]
    31cc:	b	3058 <_PyDict_SetItemId@plt+0xa18>
    31d0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    31d4:	add	x1, x1, #0xef8
    31d8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    31dc:	ldr	x0, [x0, #4008]
    31e0:	ldr	x0, [x0]
    31e4:	bl	2350 <PyErr_SetString@plt>
    31e8:	mov	w20, #0xffffffff            	// #-1
    31ec:	ldr	x23, [sp, #64]
    31f0:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    31f4:	cmp	w20, #0x3
    31f8:	mov	x22, #0xffffffffffffffff    	// #-1
    31fc:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3200:	ldr	x0, [x0, #4056]
    3204:	ccmp	x23, x0, #0x0, eq  // eq = none
    3208:	b.ne	3080 <_PyDict_SetItemId@plt+0xa40>  // b.any
    320c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3210:	add	x1, x1, #0xf28
    3214:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3218:	ldr	x0, [x0, #4008]
    321c:	ldr	x0, [x0]
    3220:	bl	2350 <PyErr_SetString@plt>
    3224:	mov	w20, #0xffffffff            	// #-1
    3228:	ldr	x23, [sp, #64]
    322c:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    3230:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3234:	add	x1, x1, #0xf50
    3238:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    323c:	ldr	x0, [x0, #4008]
    3240:	ldr	x0, [x0]
    3244:	bl	2350 <PyErr_SetString@plt>
    3248:	mov	w20, #0xffffffff            	// #-1
    324c:	ldr	x23, [sp, #64]
    3250:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    3254:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3258:	add	x1, x1, #0xf80
    325c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3260:	ldr	x0, [x0, #4000]
    3264:	ldr	x0, [x0]
    3268:	bl	2350 <PyErr_SetString@plt>
    326c:	mov	w20, #0xffffffff            	// #-1
    3270:	ldr	x23, [sp, #64]
    3274:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    3278:	mov	x0, x21
    327c:	bl	22f0 <_Py_Dealloc@plt>
    3280:	b	3118 <_PyDict_SetItemId@plt+0xad8>
    3284:	cmp	w20, #0x3
    3288:	b.ne	3324 <_PyDict_SetItemId@plt+0xce4>  // b.any
    328c:	str	wzr, [x19, #176]
    3290:	add	x20, x19, #0x28
    3294:	mov	x1, x23
    3298:	add	x0, sp, #0x58
    329c:	bl	2e8c <_PyDict_SetItemId@plt+0x84c>
    32a0:	cmn	w0, #0x1
    32a4:	b.eq	3340 <_PyDict_SetItemId@plt+0xd00>  // b.none
    32a8:	add	x21, sp, #0x58
    32ac:	mov	x1, x21
    32b0:	mov	x0, x20
    32b4:	bl	2530 <lzma_raw_decoder@plt>
    32b8:	mov	w20, w0
    32bc:	mov	x0, x21
    32c0:	bl	2a2c <_PyDict_SetItemId@plt+0x3ec>
    32c4:	mov	w0, w20
    32c8:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    32cc:	cbnz	w0, 3340 <_PyDict_SetItemId@plt+0xd00>
    32d0:	mov	w20, #0x0                   	// #0
    32d4:	ldr	x23, [sp, #64]
    32d8:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    32dc:	mov	w2, #0x5                   	// #5
    32e0:	mov	x1, x22
    32e4:	add	x0, x19, #0x28
    32e8:	bl	23d0 <lzma_auto_decoder@plt>
    32ec:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    32f0:	mov	w20, w0
    32f4:	cbnz	w0, 3340 <_PyDict_SetItemId@plt+0xd00>
    32f8:	ldr	x23, [sp, #64]
    32fc:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    3300:	str	wzr, [x19, #176]
    3304:	mov	x1, x22
    3308:	add	x0, x19, #0x28
    330c:	bl	24b0 <lzma_alone_decoder@plt>
    3310:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    3314:	mov	w20, w0
    3318:	cbnz	w0, 3340 <_PyDict_SetItemId@plt+0xd00>
    331c:	ldr	x23, [sp, #64]
    3320:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    3324:	mov	w2, w20
    3328:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    332c:	add	x1, x1, #0xf98
    3330:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3334:	ldr	x0, [x0, #4008]
    3338:	ldr	x0, [x0]
    333c:	bl	25b0 <PyErr_Format@plt>
    3340:	ldr	x0, [x19, #184]
    3344:	cbz	x0, 335c <_PyDict_SetItemId@plt+0xd1c>
    3348:	str	xzr, [x19, #184]
    334c:	ldr	x1, [x0]
    3350:	sub	x1, x1, #0x1
    3354:	str	x1, [x0]
    3358:	cbz	x1, 3388 <_PyDict_SetItemId@plt+0xd48>
    335c:	ldr	x0, [x19, #216]
    3360:	bl	2630 <PyThread_free_lock@plt>
    3364:	str	xzr, [x19, #216]
    3368:	mov	w20, #0xffffffff            	// #-1
    336c:	ldr	x23, [sp, #64]
    3370:	mov	w0, w20
    3374:	ldp	x19, x20, [sp, #32]
    3378:	ldp	x21, x22, [sp, #48]
    337c:	ldp	x29, x30, [sp, #16]
    3380:	add	sp, sp, #0xc0
    3384:	ret
    3388:	bl	22f0 <_Py_Dealloc@plt>
    338c:	b	335c <_PyDict_SetItemId@plt+0xd1c>
    3390:	mov	w20, #0xffffffff            	// #-1
    3394:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    3398:	mov	w20, #0xffffffff            	// #-1
    339c:	ldr	x23, [sp, #64]
    33a0:	b	3370 <_PyDict_SetItemId@plt+0xd30>
    33a4:	mov	w20, #0x0                   	// #0
    33a8:	cmp	w20, #0x3
    33ac:	b.eq	320c <_PyDict_SetItemId@plt+0xbcc>  // b.none
    33b0:	mov	x22, #0xffffffffffffffff    	// #-1
    33b4:	adrp	x23, 16000 <PyInit__lzma@@Base+0x11988>
    33b8:	ldr	x23, [x23, #4056]
    33bc:	b	3094 <_PyDict_SetItemId@plt+0xa54>
    33c0:	stp	x29, x30, [sp, #-16]!
    33c4:	mov	x29, sp
    33c8:	ldr	x2, [x0]
    33cc:	ldr	x2, [x2, #16]
    33d0:	asr	x3, x2, #3
    33d4:	add	x2, x2, #0x6
    33d8:	add	x4, x3, x2
    33dc:	cmp	x1, #0x0
    33e0:	ccmp	x4, x1, #0x4, gt
    33e4:	csel	x1, x4, x1, le
    33e8:	bl	2240 <_PyBytes_Resize@plt>
    33ec:	ldp	x29, x30, [sp], #16
    33f0:	ret
    33f4:	sub	sp, sp, #0xd0
    33f8:	stp	x29, x30, [sp, #16]
    33fc:	add	x29, sp, #0x10
    3400:	stp	x19, x20, [sp, #32]
    3404:	stp	x21, x22, [sp, #48]
    3408:	mov	x19, x0
    340c:	mov	x20, x1
    3410:	mov	x1, x2
    3414:	cbz	x3, 35b8 <_PyDict_SetItemId@plt+0xf78>
    3418:	ldr	x21, [x3, #16]
    341c:	add	x21, x2, x21
    3420:	stp	xzr, xzr, [sp, #112]
    3424:	stp	xzr, xzr, [sp, #128]
    3428:	stp	xzr, xzr, [sp, #144]
    342c:	stp	xzr, xzr, [sp, #160]
    3430:	stp	xzr, xzr, [sp, #176]
    3434:	add	x0, sp, #0xc0
    3438:	str	x0, [sp]
    343c:	mov	w7, #0x0                   	// #0
    3440:	mov	w6, #0x2                   	// #2
    3444:	mov	w5, #0x1                   	// #1
    3448:	adrp	x4, 17000 <PyInit__lzma@@Base+0x12988>
    344c:	add	x4, x4, #0x570
    3450:	add	x4, x4, #0xc8
    3454:	mov	x2, #0x0                   	// #0
    3458:	mov	x0, x20
    345c:	bl	2340 <_PyArg_UnpackKeywords@plt>
    3460:	mov	x20, x0
    3464:	mov	x22, x0
    3468:	cbz	x0, 36a8 <_PyDict_SetItemId@plt+0x1068>
    346c:	mov	w2, #0x0                   	// #0
    3470:	add	x1, sp, #0x70
    3474:	ldr	x0, [x20]
    3478:	bl	2560 <PyObject_GetBuffer@plt>
    347c:	mov	x22, #0x0                   	// #0
    3480:	cbnz	w0, 36a8 <_PyDict_SetItemId@plt+0x1068>
    3484:	mov	w1, #0x43                  	// #67
    3488:	add	x0, sp, #0x70
    348c:	bl	22d0 <PyBuffer_IsContiguous@plt>
    3490:	cbz	w0, 35ec <_PyDict_SetItemId@plt+0xfac>
    3494:	cmp	x21, #0x1
    3498:	b.eq	3654 <_PyDict_SetItemId@plt+0x1014>  // b.none
    349c:	ldr	x0, [x20, #8]
    34a0:	ldr	x0, [x0, #8]
    34a4:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    34a8:	ldr	x1, [x1, #3984]
    34ac:	cmp	x0, x1
    34b0:	b.eq	3610 <_PyDict_SetItemId@plt+0xfd0>  // b.none
    34b4:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    34b8:	ldr	x1, [x1, #3984]
    34bc:	bl	25a0 <PyType_IsSubtype@plt>
    34c0:	cbnz	w0, 3610 <_PyDict_SetItemId@plt+0xfd0>
    34c4:	ldr	x0, [x20, #8]
    34c8:	bl	25f0 <PyNumber_Index@plt>
    34cc:	mov	x20, x0
    34d0:	cbz	x0, 363c <_PyDict_SetItemId@plt+0xffc>
    34d4:	bl	23f0 <PyLong_AsSsize_t@plt>
    34d8:	mov	x21, x0
    34dc:	ldr	x0, [x20]
    34e0:	sub	x0, x0, #0x1
    34e4:	str	x0, [x20]
    34e8:	cbz	x0, 3630 <_PyDict_SetItemId@plt+0xff0>
    34ec:	cmn	x21, #0x1
    34f0:	b.eq	363c <_PyDict_SetItemId@plt+0xffc>  // b.none
    34f4:	stp	x23, x24, [sp, #64]
    34f8:	mov	w1, #0x0                   	// #0
    34fc:	ldr	x0, [x19, #216]
    3500:	bl	2320 <PyThread_acquire_lock@plt>
    3504:	cbz	w0, 3660 <_PyDict_SetItemId@plt+0x1020>
    3508:	ldrb	w24, [x19, #180]
    350c:	cbnz	w24, 3680 <_PyDict_SetItemId@plt+0x1040>
    3510:	stp	x25, x26, [sp, #80]
    3514:	ldr	x25, [sp, #112]
    3518:	ldr	x20, [sp, #128]
    351c:	ldr	x1, [x19, #40]
    3520:	cbz	x1, 3728 <_PyDict_SetItemId@plt+0x10e8>
    3524:	ldr	x0, [x19, #200]
    3528:	ldr	x3, [x19, #208]
    352c:	ldr	x2, [x19, #48]
    3530:	add	x24, x0, x3
    3534:	add	x4, x1, x2
    3538:	sub	x24, x24, x4
    353c:	sub	x4, x3, x2
    3540:	cmp	x20, x4
    3544:	b.hi	36d0 <_PyDict_SetItemId@plt+0x1090>  // b.pmore
    3548:	cmp	x20, x24
    354c:	b.hi	3718 <_PyDict_SetItemId@plt+0x10d8>  // b.pmore
    3550:	ldr	x3, [x19, #40]
    3554:	ldr	x0, [x19, #48]
    3558:	mov	x2, x20
    355c:	mov	x1, x25
    3560:	add	x0, x3, x0
    3564:	bl	2200 <memcpy@plt>
    3568:	ldr	x0, [x19, #48]
    356c:	add	x20, x0, x20
    3570:	str	x20, [x19, #48]
    3574:	mov	w24, #0x1                   	// #1
    3578:	add	x22, x19, #0x28
    357c:	mov	x0, #0x1fff                	// #8191
    3580:	cmp	x21, x0
    3584:	b.ls	3734 <_PyDict_SetItemId@plt+0x10f4>  // b.plast
    3588:	mov	x1, #0x2000                	// #8192
    358c:	mov	x0, #0x0                   	// #0
    3590:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3594:	str	x0, [sp, #104]
    3598:	ldr	x0, [sp, #104]
    359c:	cbz	x0, 3788 <_PyDict_SetItemId@plt+0x1148>
    35a0:	add	x2, x0, #0x20
    35a4:	str	x2, [x19, #64]
    35a8:	ldr	x0, [x0, #16]
    35ac:	str	x0, [x19, #72]
    35b0:	add	x23, sp, #0x68
    35b4:	b	37c0 <_PyDict_SetItemId@plt+0x1180>
    35b8:	stp	xzr, xzr, [sp, #112]
    35bc:	stp	xzr, xzr, [sp, #128]
    35c0:	stp	xzr, xzr, [sp, #144]
    35c4:	stp	xzr, xzr, [sp, #160]
    35c8:	stp	xzr, xzr, [sp, #176]
    35cc:	sub	x0, x2, #0x1
    35d0:	cmp	x0, #0x1
    35d4:	b.hi	35e4 <_PyDict_SetItemId@plt+0xfa4>  // b.pmore
    35d8:	mov	x21, x2
    35dc:	cbz	x20, 3434 <_PyDict_SetItemId@plt+0xdf4>
    35e0:	b	346c <_PyDict_SetItemId@plt+0xe2c>
    35e4:	mov	x21, x2
    35e8:	b	3434 <_PyDict_SetItemId@plt+0xdf4>
    35ec:	ldr	x3, [x20]
    35f0:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    35f4:	add	x2, x2, #0xfb8
    35f8:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    35fc:	add	x1, x1, #0xfd0
    3600:	adrp	x0, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3604:	add	x0, x0, #0xfe0
    3608:	bl	2400 <_PyArg_BadArgument@plt>
    360c:	b	36a8 <_PyDict_SetItemId@plt+0x1068>
    3610:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3614:	add	x1, x1, #0xed0
    3618:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    361c:	ldr	x0, [x0, #4016]
    3620:	ldr	x0, [x0]
    3624:	bl	2350 <PyErr_SetString@plt>
    3628:	mov	x22, #0x0                   	// #0
    362c:	b	36a8 <_PyDict_SetItemId@plt+0x1068>
    3630:	mov	x0, x20
    3634:	bl	22f0 <_Py_Dealloc@plt>
    3638:	b	34ec <_PyDict_SetItemId@plt+0xeac>
    363c:	bl	2480 <PyErr_Occurred@plt>
    3640:	mov	x22, #0x0                   	// #0
    3644:	cbnz	x0, 36a8 <_PyDict_SetItemId@plt+0x1068>
    3648:	stp	x23, x24, [sp, #64]
    364c:	mov	x21, #0xffffffffffffffff    	// #-1
    3650:	b	34f8 <_PyDict_SetItemId@plt+0xeb8>
    3654:	stp	x23, x24, [sp, #64]
    3658:	mov	x21, #0xffffffffffffffff    	// #-1
    365c:	b	34f8 <_PyDict_SetItemId@plt+0xeb8>
    3660:	bl	2580 <PyEval_SaveThread@plt>
    3664:	mov	x20, x0
    3668:	mov	w1, #0x1                   	// #1
    366c:	ldr	x0, [x19, #216]
    3670:	bl	2320 <PyThread_acquire_lock@plt>
    3674:	mov	x0, x20
    3678:	bl	2260 <PyEval_RestoreThread@plt>
    367c:	b	3508 <_PyDict_SetItemId@plt+0xec8>
    3680:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3684:	add	x1, x1, #0xff0
    3688:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    368c:	ldr	x0, [x0, #4048]
    3690:	ldr	x0, [x0]
    3694:	bl	2350 <PyErr_SetString@plt>
    3698:	mov	x22, #0x0                   	// #0
    369c:	ldr	x0, [x19, #216]
    36a0:	bl	2520 <PyThread_release_lock@plt>
    36a4:	ldp	x23, x24, [sp, #64]
    36a8:	ldr	x0, [sp, #120]
    36ac:	cbz	x0, 36b8 <_PyDict_SetItemId@plt+0x1078>
    36b0:	add	x0, sp, #0x70
    36b4:	bl	2290 <PyBuffer_Release@plt>
    36b8:	mov	x0, x22
    36bc:	ldp	x19, x20, [sp, #32]
    36c0:	ldp	x21, x22, [sp, #48]
    36c4:	ldp	x29, x30, [sp, #16]
    36c8:	add	sp, sp, #0xd0
    36cc:	ret
    36d0:	sub	x23, x1, x0
    36d4:	add	x3, x20, x3
    36d8:	sub	x24, x3, x24
    36dc:	mov	x1, x24
    36e0:	bl	2380 <PyMem_Realloc@plt>
    36e4:	mov	x22, x0
    36e8:	cbz	x0, 3700 <_PyDict_SetItemId@plt+0x10c0>
    36ec:	str	x0, [x19, #200]
    36f0:	str	x24, [x19, #208]
    36f4:	add	x1, x0, x23
    36f8:	str	x1, [x19, #40]
    36fc:	b	3550 <_PyDict_SetItemId@plt+0xf10>
    3700:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3704:	ldr	x0, [x0, #4000]
    3708:	ldr	x0, [x0]
    370c:	bl	2390 <PyErr_SetNone@plt>
    3710:	ldp	x25, x26, [sp, #80]
    3714:	b	369c <_PyDict_SetItemId@plt+0x105c>
    3718:	bl	2210 <memmove@plt>
    371c:	ldr	x0, [x19, #200]
    3720:	str	x0, [x19, #40]
    3724:	b	3550 <_PyDict_SetItemId@plt+0xf10>
    3728:	str	x25, [x19, #40]
    372c:	str	x20, [x19, #48]
    3730:	b	3578 <_PyDict_SetItemId@plt+0xf38>
    3734:	mov	x1, x21
    3738:	mov	x0, #0x0                   	// #0
    373c:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3740:	str	x0, [sp, #104]
    3744:	b	3598 <_PyDict_SetItemId@plt+0xf58>
    3748:	ldr	x0, [x19, #48]
    374c:	cbnz	x0, 375c <_PyDict_SetItemId@plt+0x111c>
    3750:	ldr	x0, [x19, #72]
    3754:	cmp	x0, #0x0
    3758:	csel	w25, w25, wzr, eq  // eq = none
    375c:	mov	x0, x26
    3760:	bl	2260 <PyEval_RestoreThread@plt>
    3764:	mov	w0, w25
    3768:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    376c:	cbz	w0, 3824 <_PyDict_SetItemId@plt+0x11e4>
    3770:	ldr	x0, [sp, #104]
    3774:	cbz	x0, 3788 <_PyDict_SetItemId@plt+0x1148>
    3778:	ldr	x1, [x0]
    377c:	sub	x1, x1, #0x1
    3780:	str	x1, [x0]
    3784:	cbz	x1, 38a0 <_PyDict_SetItemId@plt+0x1260>
    3788:	str	xzr, [x19, #40]
    378c:	mov	x22, #0x0                   	// #0
    3790:	ldp	x25, x26, [sp, #80]
    3794:	b	369c <_PyDict_SetItemId@plt+0x105c>
    3798:	mov	w0, #0x1                   	// #1
    379c:	strb	w0, [x19, #180]
    37a0:	ldr	x0, [sp, #104]
    37a4:	ldr	x0, [x0, #16]
    37a8:	cmp	x20, x0
    37ac:	b.ne	3868 <_PyDict_SetItemId@plt+0x1228>  // b.any
    37b0:	ldr	x22, [sp, #104]
    37b4:	b	3884 <_PyDict_SetItemId@plt+0x1244>
    37b8:	ldr	x0, [x19, #48]
    37bc:	cbz	x0, 37a0 <_PyDict_SetItemId@plt+0x1160>
    37c0:	bl	2580 <PyEval_SaveThread@plt>
    37c4:	mov	x26, x0
    37c8:	mov	w1, #0x0                   	// #0
    37cc:	mov	x0, x22
    37d0:	bl	2250 <lzma_code@plt>
    37d4:	mov	w25, w0
    37d8:	ldr	x20, [sp, #104]
    37dc:	add	x1, x20, #0x20
    37e0:	ldr	x20, [x19, #64]
    37e4:	sub	x20, x20, x1
    37e8:	cmp	w0, #0xa
    37ec:	b.eq	3748 <_PyDict_SetItemId@plt+0x1108>  // b.none
    37f0:	mov	x0, x26
    37f4:	bl	2260 <PyEval_RestoreThread@plt>
    37f8:	mov	w0, w25
    37fc:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    3800:	cbnz	w0, 3770 <_PyDict_SetItemId@plt+0x1130>
    3804:	sub	w0, w25, #0x2
    3808:	tst	w0, #0xfffffffd
    380c:	b.ne	381c <_PyDict_SetItemId@plt+0x11dc>  // b.any
    3810:	mov	x0, x22
    3814:	bl	24e0 <lzma_get_check@plt>
    3818:	str	w0, [x19, #176]
    381c:	cmp	w25, #0x1
    3820:	b.eq	3798 <_PyDict_SetItemId@plt+0x1158>  // b.none
    3824:	ldr	x0, [x19, #72]
    3828:	cbnz	x0, 37b8 <_PyDict_SetItemId@plt+0x1178>
    382c:	cmp	x21, x20
    3830:	b.eq	37a0 <_PyDict_SetItemId@plt+0x1160>  // b.none
    3834:	mov	x1, x21
    3838:	mov	x0, x23
    383c:	bl	33c0 <_PyDict_SetItemId@plt+0xd80>
    3840:	cmn	w0, #0x1
    3844:	b.eq	3770 <_PyDict_SetItemId@plt+0x1130>  // b.none
    3848:	ldr	x2, [sp, #104]
    384c:	add	x1, x2, #0x20
    3850:	add	x1, x1, x20
    3854:	str	x1, [x19, #64]
    3858:	ldr	x1, [x2, #16]
    385c:	sub	x20, x1, x20
    3860:	str	x20, [x19, #72]
    3864:	b	37c0 <_PyDict_SetItemId@plt+0x1180>
    3868:	mov	x1, x20
    386c:	add	x0, sp, #0x68
    3870:	bl	2240 <_PyBytes_Resize@plt>
    3874:	cmn	w0, #0x1
    3878:	b.eq	3770 <_PyDict_SetItemId@plt+0x1130>  // b.none
    387c:	ldr	x22, [sp, #104]
    3880:	cbz	x22, 3788 <_PyDict_SetItemId@plt+0x1148>
    3884:	ldrb	w0, [x19, #180]
    3888:	cbz	w0, 38e8 <_PyDict_SetItemId@plt+0x12a8>
    388c:	strb	wzr, [x19, #192]
    3890:	ldr	x1, [x19, #48]
    3894:	cbnz	x1, 38a8 <_PyDict_SetItemId@plt+0x1268>
    3898:	ldp	x25, x26, [sp, #80]
    389c:	b	369c <_PyDict_SetItemId@plt+0x105c>
    38a0:	bl	22f0 <_Py_Dealloc@plt>
    38a4:	b	3788 <_PyDict_SetItemId@plt+0x1148>
    38a8:	ldr	x20, [x19, #184]
    38ac:	ldr	x0, [x19, #40]
    38b0:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    38b4:	str	x0, [x19, #184]
    38b8:	cbz	x20, 38cc <_PyDict_SetItemId@plt+0x128c>
    38bc:	ldr	x0, [x20]
    38c0:	sub	x0, x0, #0x1
    38c4:	str	x0, [x20]
    38c8:	cbz	x0, 38dc <_PyDict_SetItemId@plt+0x129c>
    38cc:	ldr	x0, [x19, #184]
    38d0:	cbz	x0, 397c <_PyDict_SetItemId@plt+0x133c>
    38d4:	ldp	x25, x26, [sp, #80]
    38d8:	b	369c <_PyDict_SetItemId@plt+0x105c>
    38dc:	mov	x0, x20
    38e0:	bl	22f0 <_Py_Dealloc@plt>
    38e4:	b	38cc <_PyDict_SetItemId@plt+0x128c>
    38e8:	ldr	x1, [x19, #48]
    38ec:	cbnz	x1, 390c <_PyDict_SetItemId@plt+0x12cc>
    38f0:	str	xzr, [x19, #40]
    38f4:	ldr	x0, [x19, #72]
    38f8:	cmp	x0, #0x0
    38fc:	cset	w0, ne  // ne = any
    3900:	strb	w0, [x19, #192]
    3904:	ldp	x25, x26, [sp, #80]
    3908:	b	369c <_PyDict_SetItemId@plt+0x105c>
    390c:	strb	wzr, [x19, #192]
    3910:	cbnz	w24, 39ac <_PyDict_SetItemId@plt+0x136c>
    3914:	ldr	x0, [x19, #200]
    3918:	cbz	x0, 3950 <_PyDict_SetItemId@plt+0x1310>
    391c:	ldr	x2, [x19, #208]
    3920:	cmp	x1, x2
    3924:	b.hi	3948 <_PyDict_SetItemId@plt+0x1308>  // b.pmore
    3928:	ldr	x2, [x19, #48]
    392c:	ldr	x1, [x19, #40]
    3930:	ldr	x0, [x19, #200]
    3934:	bl	2200 <memcpy@plt>
    3938:	ldr	x0, [x19, #200]
    393c:	str	x0, [x19, #40]
    3940:	ldp	x25, x26, [sp, #80]
    3944:	b	369c <_PyDict_SetItemId@plt+0x105c>
    3948:	bl	2270 <PyMem_Free@plt>
    394c:	str	xzr, [x19, #200]
    3950:	ldr	x0, [x19, #48]
    3954:	bl	2620 <PyMem_Malloc@plt>
    3958:	str	x0, [x19, #200]
    395c:	cbz	x0, 396c <_PyDict_SetItemId@plt+0x132c>
    3960:	ldr	x0, [x19, #48]
    3964:	str	x0, [x19, #208]
    3968:	b	3928 <_PyDict_SetItemId@plt+0x12e8>
    396c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3970:	ldr	x0, [x0, #4000]
    3974:	ldr	x0, [x0]
    3978:	bl	2390 <PyErr_SetNone@plt>
    397c:	ldr	x0, [x22]
    3980:	sub	x0, x0, #0x1
    3984:	str	x0, [x22]
    3988:	cbz	x0, 3998 <_PyDict_SetItemId@plt+0x1358>
    398c:	mov	x22, #0x0                   	// #0
    3990:	ldp	x25, x26, [sp, #80]
    3994:	b	369c <_PyDict_SetItemId@plt+0x105c>
    3998:	mov	x0, x22
    399c:	bl	22f0 <_Py_Dealloc@plt>
    39a0:	mov	x22, #0x0                   	// #0
    39a4:	ldp	x25, x26, [sp, #80]
    39a8:	b	369c <_PyDict_SetItemId@plt+0x105c>
    39ac:	ldp	x25, x26, [sp, #80]
    39b0:	b	369c <_PyDict_SetItemId@plt+0x105c>
    39b4:	stp	x29, x30, [sp, #-112]!
    39b8:	mov	x29, sp
    39bc:	stp	x19, x20, [sp, #16]
    39c0:	stp	x21, x22, [sp, #32]
    39c4:	stp	x23, x24, [sp, #48]
    39c8:	mov	x21, x0
    39cc:	mov	x19, x1
    39d0:	mov	x23, x2
    39d4:	mov	w22, w3
    39d8:	mov	x1, #0x2000                	// #8192
    39dc:	mov	x0, #0x0                   	// #0
    39e0:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    39e4:	str	x0, [sp, #104]
    39e8:	cbz	x0, 3ab0 <_PyDict_SetItemId@plt+0x1470>
    39ec:	stp	x25, x26, [sp, #64]
    39f0:	stp	x27, x28, [sp, #80]
    39f4:	str	x19, [x21, #40]
    39f8:	str	x23, [x21, #48]
    39fc:	add	x1, x0, #0x20
    3a00:	str	x1, [x21, #64]
    3a04:	ldr	x0, [x0, #16]
    3a08:	str	x0, [x21, #72]
    3a0c:	mov	w26, #0xa                   	// #10
    3a10:	mov	w25, #0x0                   	// #0
    3a14:	add	x27, sp, #0x68
    3a18:	add	x24, x21, #0x28
    3a1c:	b	3a34 <_PyDict_SetItemId@plt+0x13f4>
    3a20:	cmp	w22, #0x3
    3a24:	ccmp	w19, #0x1, #0x0, eq  // eq = none
    3a28:	b.eq	3a94 <_PyDict_SetItemId@plt+0x1454>  // b.none
    3a2c:	ldr	x0, [x21, #72]
    3a30:	cbz	x0, 3ac4 <_PyDict_SetItemId@plt+0x1484>
    3a34:	bl	2580 <PyEval_SaveThread@plt>
    3a38:	mov	x20, x0
    3a3c:	mov	w1, w22
    3a40:	mov	x0, x24
    3a44:	bl	2250 <lzma_code@plt>
    3a48:	mov	w19, w0
    3a4c:	ldr	x1, [sp, #104]
    3a50:	add	x1, x1, #0x20
    3a54:	ldr	x28, [x21, #64]
    3a58:	sub	x28, x28, x1
    3a5c:	cmp	x23, #0x0
    3a60:	ccmp	w0, #0xa, #0x0, eq  // eq = none
    3a64:	b.ne	3a74 <_PyDict_SetItemId@plt+0x1434>  // b.any
    3a68:	ldr	x0, [x21, #72]
    3a6c:	cmp	x0, #0x0
    3a70:	csel	w19, w26, w25, eq  // eq = none
    3a74:	mov	x0, x20
    3a78:	bl	2260 <PyEval_RestoreThread@plt>
    3a7c:	mov	w0, w19
    3a80:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    3a84:	cbnz	w0, 3b0c <_PyDict_SetItemId@plt+0x14cc>
    3a88:	cbnz	w22, 3a20 <_PyDict_SetItemId@plt+0x13e0>
    3a8c:	ldr	x0, [x21, #48]
    3a90:	cbnz	x0, 3a2c <_PyDict_SetItemId@plt+0x13ec>
    3a94:	ldr	x0, [sp, #104]
    3a98:	ldr	x0, [x0, #16]
    3a9c:	cmp	x0, x28
    3aa0:	b.ne	3af8 <_PyDict_SetItemId@plt+0x14b8>  // b.any
    3aa4:	ldr	x0, [sp, #104]
    3aa8:	ldp	x25, x26, [sp, #64]
    3aac:	ldp	x27, x28, [sp, #80]
    3ab0:	ldp	x19, x20, [sp, #16]
    3ab4:	ldp	x21, x22, [sp, #32]
    3ab8:	ldp	x23, x24, [sp, #48]
    3abc:	ldp	x29, x30, [sp], #112
    3ac0:	ret
    3ac4:	mov	x1, #0xffffffffffffffff    	// #-1
    3ac8:	mov	x0, x27
    3acc:	bl	33c0 <_PyDict_SetItemId@plt+0xd80>
    3ad0:	cmn	w0, #0x1
    3ad4:	b.eq	3b0c <_PyDict_SetItemId@plt+0x14cc>  // b.none
    3ad8:	ldr	x1, [sp, #104]
    3adc:	add	x0, x1, #0x20
    3ae0:	add	x0, x0, x28
    3ae4:	str	x0, [x21, #64]
    3ae8:	ldr	x1, [x1, #16]
    3aec:	sub	x1, x1, x28
    3af0:	str	x1, [x21, #72]
    3af4:	b	3a18 <_PyDict_SetItemId@plt+0x13d8>
    3af8:	mov	x1, x28
    3afc:	add	x0, sp, #0x68
    3b00:	bl	2240 <_PyBytes_Resize@plt>
    3b04:	cmn	w0, #0x1
    3b08:	b.ne	3aa4 <_PyDict_SetItemId@plt+0x1464>  // b.any
    3b0c:	ldr	x0, [sp, #104]
    3b10:	cbz	x0, 3b48 <_PyDict_SetItemId@plt+0x1508>
    3b14:	ldr	x1, [x0]
    3b18:	sub	x1, x1, #0x1
    3b1c:	str	x1, [x0]
    3b20:	cbz	x1, 3b34 <_PyDict_SetItemId@plt+0x14f4>
    3b24:	mov	x0, #0x0                   	// #0
    3b28:	ldp	x25, x26, [sp, #64]
    3b2c:	ldp	x27, x28, [sp, #80]
    3b30:	b	3ab0 <_PyDict_SetItemId@plt+0x1470>
    3b34:	bl	22f0 <_Py_Dealloc@plt>
    3b38:	mov	x0, #0x0                   	// #0
    3b3c:	ldp	x25, x26, [sp, #64]
    3b40:	ldp	x27, x28, [sp, #80]
    3b44:	b	3ab0 <_PyDict_SetItemId@plt+0x1470>
    3b48:	ldp	x25, x26, [sp, #64]
    3b4c:	ldp	x27, x28, [sp, #80]
    3b50:	b	3ab0 <_PyDict_SetItemId@plt+0x1470>
    3b54:	stp	x29, x30, [sp, #-32]!
    3b58:	mov	x29, sp
    3b5c:	stp	x19, x20, [sp, #16]
    3b60:	mov	x19, x0
    3b64:	mov	w1, #0x0                   	// #0
    3b68:	ldr	x0, [x0, #184]
    3b6c:	bl	2320 <PyThread_acquire_lock@plt>
    3b70:	cbz	w0, 3bb4 <_PyDict_SetItemId@plt+0x1574>
    3b74:	ldr	w0, [x19, #176]
    3b78:	cbnz	w0, 3bd4 <_PyDict_SetItemId@plt+0x1594>
    3b7c:	mov	w0, #0x1                   	// #1
    3b80:	str	w0, [x19, #176]
    3b84:	mov	w3, #0x3                   	// #3
    3b88:	mov	x2, #0x0                   	// #0
    3b8c:	mov	x1, #0x0                   	// #0
    3b90:	mov	x0, x19
    3b94:	bl	39b4 <_PyDict_SetItemId@plt+0x1374>
    3b98:	mov	x20, x0
    3b9c:	ldr	x0, [x19, #184]
    3ba0:	bl	2520 <PyThread_release_lock@plt>
    3ba4:	mov	x0, x20
    3ba8:	ldp	x19, x20, [sp, #16]
    3bac:	ldp	x29, x30, [sp], #32
    3bb0:	ret
    3bb4:	bl	2580 <PyEval_SaveThread@plt>
    3bb8:	mov	x20, x0
    3bbc:	mov	w1, #0x1                   	// #1
    3bc0:	ldr	x0, [x19, #184]
    3bc4:	bl	2320 <PyThread_acquire_lock@plt>
    3bc8:	mov	x0, x20
    3bcc:	bl	2260 <PyEval_RestoreThread@plt>
    3bd0:	b	3b74 <_PyDict_SetItemId@plt+0x1534>
    3bd4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    3bd8:	add	x1, x1, #0x10
    3bdc:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3be0:	ldr	x0, [x0, #4008]
    3be4:	ldr	x0, [x0]
    3be8:	bl	2350 <PyErr_SetString@plt>
    3bec:	mov	x20, #0x0                   	// #0
    3bf0:	b	3b9c <_PyDict_SetItemId@plt+0x155c>
    3bf4:	stp	x29, x30, [sp, #-128]!
    3bf8:	mov	x29, sp
    3bfc:	stp	x19, x20, [sp, #16]
    3c00:	str	x21, [sp, #32]
    3c04:	mov	x19, x0
    3c08:	mov	x20, x1
    3c0c:	stp	xzr, xzr, [sp, #48]
    3c10:	stp	xzr, xzr, [sp, #64]
    3c14:	stp	xzr, xzr, [sp, #80]
    3c18:	stp	xzr, xzr, [sp, #96]
    3c1c:	stp	xzr, xzr, [sp, #112]
    3c20:	mov	w2, #0x0                   	// #0
    3c24:	add	x1, sp, #0x30
    3c28:	mov	x0, x20
    3c2c:	bl	2560 <PyObject_GetBuffer@plt>
    3c30:	mov	x21, #0x0                   	// #0
    3c34:	cbnz	w0, 3c80 <_PyDict_SetItemId@plt+0x1640>
    3c38:	mov	w1, #0x43                  	// #67
    3c3c:	add	x0, sp, #0x30
    3c40:	bl	22d0 <PyBuffer_IsContiguous@plt>
    3c44:	cbz	w0, 3ca4 <_PyDict_SetItemId@plt+0x1664>
    3c48:	mov	w1, #0x0                   	// #0
    3c4c:	ldr	x0, [x19, #184]
    3c50:	bl	2320 <PyThread_acquire_lock@plt>
    3c54:	cbz	w0, 3cc8 <_PyDict_SetItemId@plt+0x1688>
    3c58:	ldr	w0, [x19, #176]
    3c5c:	cbnz	w0, 3ce8 <_PyDict_SetItemId@plt+0x16a8>
    3c60:	mov	w3, #0x0                   	// #0
    3c64:	ldr	x2, [sp, #64]
    3c68:	ldr	x1, [sp, #48]
    3c6c:	mov	x0, x19
    3c70:	bl	39b4 <_PyDict_SetItemId@plt+0x1374>
    3c74:	mov	x21, x0
    3c78:	ldr	x0, [x19, #184]
    3c7c:	bl	2520 <PyThread_release_lock@plt>
    3c80:	ldr	x0, [sp, #56]
    3c84:	cbz	x0, 3c90 <_PyDict_SetItemId@plt+0x1650>
    3c88:	add	x0, sp, #0x30
    3c8c:	bl	2290 <PyBuffer_Release@plt>
    3c90:	mov	x0, x21
    3c94:	ldp	x19, x20, [sp, #16]
    3c98:	ldr	x21, [sp, #32]
    3c9c:	ldp	x29, x30, [sp], #128
    3ca0:	ret
    3ca4:	mov	x3, x20
    3ca8:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3cac:	add	x2, x2, #0xfb8
    3cb0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    3cb4:	add	x1, x1, #0x30
    3cb8:	adrp	x0, 5000 <PyInit__lzma@@Base+0x988>
    3cbc:	add	x0, x0, #0x40
    3cc0:	bl	2400 <_PyArg_BadArgument@plt>
    3cc4:	b	3c80 <_PyDict_SetItemId@plt+0x1640>
    3cc8:	bl	2580 <PyEval_SaveThread@plt>
    3ccc:	mov	x20, x0
    3cd0:	mov	w1, #0x1                   	// #1
    3cd4:	ldr	x0, [x19, #184]
    3cd8:	bl	2320 <PyThread_acquire_lock@plt>
    3cdc:	mov	x0, x20
    3ce0:	bl	2260 <PyEval_RestoreThread@plt>
    3ce4:	b	3c58 <_PyDict_SetItemId@plt+0x1618>
    3ce8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    3cec:	add	x1, x1, #0x50
    3cf0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3cf4:	ldr	x0, [x0, #4008]
    3cf8:	ldr	x0, [x0]
    3cfc:	bl	2350 <PyErr_SetString@plt>
    3d00:	mov	x21, #0x0                   	// #0
    3d04:	b	3c78 <_PyDict_SetItemId@plt+0x1638>
    3d08:	stp	x29, x30, [sp, #-32]!
    3d0c:	mov	x29, sp
    3d10:	str	x19, [sp, #16]
    3d14:	mov	x19, x0
    3d18:	ldr	x0, [x0, #200]
    3d1c:	cbz	x0, 3d24 <_PyDict_SetItemId@plt+0x16e4>
    3d20:	bl	2270 <PyMem_Free@plt>
    3d24:	add	x0, x19, #0x28
    3d28:	bl	24c0 <lzma_end@plt>
    3d2c:	ldr	x0, [x19, #184]
    3d30:	cbz	x0, 3d48 <_PyDict_SetItemId@plt+0x1708>
    3d34:	str	xzr, [x19, #184]
    3d38:	ldr	x1, [x0]
    3d3c:	sub	x1, x1, #0x1
    3d40:	str	x1, [x0]
    3d44:	cbz	x1, 3d70 <_PyDict_SetItemId@plt+0x1730>
    3d48:	ldr	x0, [x19, #216]
    3d4c:	cbz	x0, 3d54 <_PyDict_SetItemId@plt+0x1714>
    3d50:	bl	2630 <PyThread_free_lock@plt>
    3d54:	ldr	x0, [x19, #8]
    3d58:	ldr	x1, [x0, #320]
    3d5c:	mov	x0, x19
    3d60:	blr	x1
    3d64:	ldr	x19, [sp, #16]
    3d68:	ldp	x29, x30, [sp], #32
    3d6c:	ret
    3d70:	bl	22f0 <_Py_Dealloc@plt>
    3d74:	b	3d48 <_PyDict_SetItemId@plt+0x1708>
    3d78:	stp	x29, x30, [sp, #-32]!
    3d7c:	mov	x29, sp
    3d80:	str	x19, [sp, #16]
    3d84:	mov	x19, x0
    3d88:	add	x0, x0, #0x28
    3d8c:	bl	24c0 <lzma_end@plt>
    3d90:	ldr	x0, [x19, #184]
    3d94:	cbz	x0, 3d9c <_PyDict_SetItemId@plt+0x175c>
    3d98:	bl	2630 <PyThread_free_lock@plt>
    3d9c:	ldr	x0, [x19, #8]
    3da0:	ldr	x1, [x0, #320]
    3da4:	mov	x0, x19
    3da8:	blr	x1
    3dac:	ldr	x19, [sp, #16]
    3db0:	ldp	x29, x30, [sp], #32
    3db4:	ret
    3db8:	stp	x29, x30, [sp, #-192]!
    3dbc:	mov	x29, sp
    3dc0:	stp	x19, x20, [sp, #16]
    3dc4:	mov	x19, x0
    3dc8:	mov	x0, x1
    3dcc:	mov	x1, x2
    3dd0:	mov	w2, #0x1                   	// #1
    3dd4:	str	w2, [sp, #188]
    3dd8:	mov	w2, #0xffffffff            	// #-1
    3ddc:	str	w2, [sp, #184]
    3de0:	mov	w2, #0x6                   	// #6
    3de4:	str	w2, [sp, #180]
    3de8:	adrp	x2, 16000 <PyInit__lzma@@Base+0x11988>
    3dec:	ldr	x2, [x2, #4056]
    3df0:	str	x2, [sp, #168]
    3df4:	str	x2, [sp, #160]
    3df8:	add	x7, sp, #0xa0
    3dfc:	add	x6, sp, #0xa8
    3e00:	add	x5, sp, #0xb8
    3e04:	add	x4, sp, #0xbc
    3e08:	adrp	x3, 17000 <PyInit__lzma@@Base+0x12988>
    3e0c:	add	x3, x3, #0x570
    3e10:	add	x3, x3, #0x108
    3e14:	adrp	x2, 5000 <PyInit__lzma@@Base+0x988>
    3e18:	add	x2, x2, #0x70
    3e1c:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3e20:	cbz	w0, 4180 <_PyDict_SetItemId@plt+0x1b40>
    3e24:	ldr	w0, [sp, #188]
    3e28:	cmp	w0, #0x1
    3e2c:	b.eq	3e40 <_PyDict_SetItemId@plt+0x1800>  // b.none
    3e30:	ldr	w0, [sp, #184]
    3e34:	add	w0, w0, #0x1
    3e38:	cmp	w0, #0x1
    3e3c:	b.hi	3ef8 <_PyDict_SetItemId@plt+0x18b8>  // b.pmore
    3e40:	ldr	x0, [sp, #168]
    3e44:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    3e48:	ldr	x1, [x1, #4056]
    3e4c:	cmp	x0, x1
    3e50:	b.eq	3e74 <_PyDict_SetItemId@plt+0x1834>  // b.none
    3e54:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    3e58:	ldr	x1, [x1, #4056]
    3e5c:	ldr	x2, [sp, #160]
    3e60:	cmp	x2, x1
    3e64:	b.ne	3f18 <_PyDict_SetItemId@plt+0x18d8>  // b.any
    3e68:	add	x1, sp, #0xb4
    3e6c:	bl	2820 <_PyDict_SetItemId@plt+0x1e0>
    3e70:	cbz	w0, 4188 <_PyDict_SetItemId@plt+0x1b48>
    3e74:	str	xzr, [x19, #32]
    3e78:	adrp	x0, 2000 <memcpy@plt-0x200>
    3e7c:	add	x0, x0, #0x89c
    3e80:	str	x0, [x19, #16]
    3e84:	adrp	x0, 2000 <memcpy@plt-0x200>
    3e88:	add	x0, x0, #0x884
    3e8c:	str	x0, [x19, #24]
    3e90:	add	x0, x19, #0x10
    3e94:	str	x0, [x19, #88]
    3e98:	bl	2500 <PyThread_allocate_lock@plt>
    3e9c:	str	x0, [x19, #184]
    3ea0:	cbz	x0, 3f38 <_PyDict_SetItemId@plt+0x18f8>
    3ea4:	str	wzr, [x19, #176]
    3ea8:	ldr	w2, [sp, #188]
    3eac:	cmp	w2, #0x2
    3eb0:	b.eq	3ffc <_PyDict_SetItemId@plt+0x19bc>  // b.none
    3eb4:	cmp	w2, #0x3
    3eb8:	b.eq	40f0 <_PyDict_SetItemId@plt+0x1ab0>  // b.none
    3ebc:	cmp	w2, #0x1
    3ec0:	b.eq	3f58 <_PyDict_SetItemId@plt+0x1918>  // b.none
    3ec4:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3ec8:	add	x1, x1, #0xf98
    3ecc:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3ed0:	ldr	x0, [x0, #4008]
    3ed4:	ldr	x0, [x0]
    3ed8:	bl	25b0 <PyErr_Format@plt>
    3edc:	ldr	x0, [x19, #184]
    3ee0:	bl	2630 <PyThread_free_lock@plt>
    3ee4:	str	xzr, [x19, #184]
    3ee8:	mov	w0, #0xffffffff            	// #-1
    3eec:	ldp	x19, x20, [sp, #16]
    3ef0:	ldp	x29, x30, [sp], #192
    3ef4:	ret
    3ef8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    3efc:	add	x1, x1, #0x88
    3f00:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3f04:	ldr	x0, [x0, #4008]
    3f08:	ldr	x0, [x0]
    3f0c:	bl	2350 <PyErr_SetString@plt>
    3f10:	mov	w0, #0xffffffff            	// #-1
    3f14:	b	3eec <_PyDict_SetItemId@plt+0x18ac>
    3f18:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    3f1c:	add	x1, x1, #0xc0
    3f20:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3f24:	ldr	x0, [x0, #4008]
    3f28:	ldr	x0, [x0]
    3f2c:	bl	2350 <PyErr_SetString@plt>
    3f30:	mov	w0, #0xffffffff            	// #-1
    3f34:	b	3eec <_PyDict_SetItemId@plt+0x18ac>
    3f38:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    3f3c:	add	x1, x1, #0xf80
    3f40:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3f44:	ldr	x0, [x0, #4000]
    3f48:	ldr	x0, [x0]
    3f4c:	bl	2350 <PyErr_SetString@plt>
    3f50:	mov	w0, #0xffffffff            	// #-1
    3f54:	b	3eec <_PyDict_SetItemId@plt+0x18ac>
    3f58:	stp	x21, x22, [sp, #32]
    3f5c:	ldr	w0, [sp, #184]
    3f60:	cmn	w0, #0x1
    3f64:	b.eq	3fd0 <_PyDict_SetItemId@plt+0x1990>  // b.none
    3f68:	add	x20, x19, #0x28
    3f6c:	ldr	w22, [sp, #184]
    3f70:	ldr	x1, [sp, #160]
    3f74:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    3f78:	ldr	x0, [x0, #4056]
    3f7c:	cmp	x1, x0
    3f80:	b.eq	3fdc <_PyDict_SetItemId@plt+0x199c>  // b.none
    3f84:	add	x0, sp, #0x30
    3f88:	bl	2e8c <_PyDict_SetItemId@plt+0x84c>
    3f8c:	cmn	w0, #0x1
    3f90:	b.eq	4178 <_PyDict_SetItemId@plt+0x1b38>  // b.none
    3f94:	add	x21, sp, #0x30
    3f98:	mov	w2, w22
    3f9c:	mov	x1, x21
    3fa0:	mov	x0, x20
    3fa4:	bl	25d0 <lzma_stream_encoder@plt>
    3fa8:	mov	w20, w0
    3fac:	mov	x0, x21
    3fb0:	bl	2a2c <_PyDict_SetItemId@plt+0x3ec>
    3fb4:	mov	w0, w20
    3fb8:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    3fbc:	cmp	w0, #0x0
    3fc0:	csetm	w0, ne  // ne = any
    3fc4:	cbnz	w0, 3ff4 <_PyDict_SetItemId@plt+0x19b4>
    3fc8:	ldp	x21, x22, [sp, #32]
    3fcc:	b	3eec <_PyDict_SetItemId@plt+0x18ac>
    3fd0:	mov	w0, #0x4                   	// #4
    3fd4:	str	w0, [sp, #184]
    3fd8:	b	3f68 <_PyDict_SetItemId@plt+0x1928>
    3fdc:	mov	w2, w22
    3fe0:	ldr	w1, [sp, #180]
    3fe4:	mov	x0, x20
    3fe8:	bl	2330 <lzma_easy_encoder@plt>
    3fec:	mov	w20, w0
    3ff0:	b	3fb4 <_PyDict_SetItemId@plt+0x1974>
    3ff4:	ldp	x21, x22, [sp, #32]
    3ff8:	b	3edc <_PyDict_SetItemId@plt+0x189c>
    3ffc:	add	x20, x19, #0x28
    4000:	ldr	x1, [sp, #160]
    4004:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    4008:	ldr	x0, [x0, #4056]
    400c:	cmp	x1, x0
    4010:	b.eq	4088 <_PyDict_SetItemId@plt+0x1a48>  // b.none
    4014:	add	x0, sp, #0x30
    4018:	bl	2e8c <_PyDict_SetItemId@plt+0x84c>
    401c:	cmn	w0, #0x1
    4020:	b.eq	3edc <_PyDict_SetItemId@plt+0x189c>  // b.none
    4024:	mov	x0, #0x1                   	// #1
    4028:	movk	x0, #0x4000, lsl #48
    402c:	ldr	x1, [sp, #48]
    4030:	cmp	x1, x0
    4034:	b.ne	4044 <_PyDict_SetItemId@plt+0x1a04>  // b.any
    4038:	ldr	x0, [sp, #64]
    403c:	cmn	x0, #0x1
    4040:	b.eq	40dc <_PyDict_SetItemId@plt+0x1a9c>  // b.none
    4044:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4048:	add	x1, x1, #0xf0
    404c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    4050:	ldr	x0, [x0, #4008]
    4054:	ldr	x0, [x0]
    4058:	bl	2350 <PyErr_SetString@plt>
    405c:	mov	w20, #0xb                   	// #11
    4060:	add	x0, sp, #0x30
    4064:	bl	2a2c <_PyDict_SetItemId@plt+0x3ec>
    4068:	bl	2480 <PyErr_Occurred@plt>
    406c:	cbnz	x0, 3edc <_PyDict_SetItemId@plt+0x189c>
    4070:	mov	w0, w20
    4074:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    4078:	cmp	w0, #0x0
    407c:	csetm	w0, ne  // ne = any
    4080:	cbz	w0, 3eec <_PyDict_SetItemId@plt+0x18ac>
    4084:	b	3edc <_PyDict_SetItemId@plt+0x189c>
    4088:	stp	x21, x22, [sp, #32]
    408c:	ldr	w21, [sp, #180]
    4090:	mov	w1, w21
    4094:	add	x0, sp, #0x30
    4098:	bl	2610 <lzma_lzma_preset@plt>
    409c:	and	w0, w0, #0xff
    40a0:	cbnz	w0, 40bc <_PyDict_SetItemId@plt+0x1a7c>
    40a4:	add	x1, sp, #0x30
    40a8:	mov	x0, x20
    40ac:	bl	2550 <lzma_alone_encoder@plt>
    40b0:	mov	w20, w0
    40b4:	ldp	x21, x22, [sp, #32]
    40b8:	b	4068 <_PyDict_SetItemId@plt+0x1a28>
    40bc:	mov	w2, w21
    40c0:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    40c4:	add	x1, x1, #0xdb8
    40c8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    40cc:	ldr	x0, [x0, #2488]
    40d0:	bl	25b0 <PyErr_Format@plt>
    40d4:	ldp	x21, x22, [sp, #32]
    40d8:	b	3edc <_PyDict_SetItemId@plt+0x189c>
    40dc:	ldr	x1, [sp, #56]
    40e0:	mov	x0, x20
    40e4:	bl	2550 <lzma_alone_encoder@plt>
    40e8:	mov	w20, w0
    40ec:	b	4060 <_PyDict_SetItemId@plt+0x1a20>
    40f0:	add	x20, x19, #0x28
    40f4:	ldr	x1, [sp, #160]
    40f8:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    40fc:	ldr	x0, [x0, #4056]
    4100:	cmp	x1, x0
    4104:	b.eq	4154 <_PyDict_SetItemId@plt+0x1b14>  // b.none
    4108:	add	x0, sp, #0x30
    410c:	bl	2e8c <_PyDict_SetItemId@plt+0x84c>
    4110:	cmn	w0, #0x1
    4114:	b.eq	3edc <_PyDict_SetItemId@plt+0x189c>  // b.none
    4118:	stp	x21, x22, [sp, #32]
    411c:	add	x21, sp, #0x30
    4120:	mov	x1, x21
    4124:	mov	x0, x20
    4128:	bl	2370 <lzma_raw_encoder@plt>
    412c:	mov	w20, w0
    4130:	mov	x0, x21
    4134:	bl	2a2c <_PyDict_SetItemId@plt+0x3ec>
    4138:	mov	w0, w20
    413c:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    4140:	cmp	w0, #0x0
    4144:	csetm	w0, ne  // ne = any
    4148:	cbnz	w0, 4170 <_PyDict_SetItemId@plt+0x1b30>
    414c:	ldp	x21, x22, [sp, #32]
    4150:	b	3eec <_PyDict_SetItemId@plt+0x18ac>
    4154:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4158:	add	x1, x1, #0xf28
    415c:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    4160:	ldr	x0, [x0, #4008]
    4164:	ldr	x0, [x0]
    4168:	bl	2350 <PyErr_SetString@plt>
    416c:	b	3edc <_PyDict_SetItemId@plt+0x189c>
    4170:	ldp	x21, x22, [sp, #32]
    4174:	b	3edc <_PyDict_SetItemId@plt+0x189c>
    4178:	ldp	x21, x22, [sp, #32]
    417c:	b	3edc <_PyDict_SetItemId@plt+0x189c>
    4180:	mov	w0, #0xffffffff            	// #-1
    4184:	b	3eec <_PyDict_SetItemId@plt+0x18ac>
    4188:	mov	w0, #0xffffffff            	// #-1
    418c:	b	3eec <_PyDict_SetItemId@plt+0x18ac>
    4190:	stp	x29, x30, [sp, #-48]!
    4194:	mov	x29, sp
    4198:	stp	x19, x20, [sp, #16]
    419c:	str	x21, [sp, #32]
    41a0:	mov	x20, x0
    41a4:	mov	x21, x1
    41a8:	mov	x0, x2
    41ac:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    41b0:	cbz	x0, 41fc <_PyDict_SetItemId@plt+0x1bbc>
    41b4:	mov	x19, x0
    41b8:	mov	x2, x0
    41bc:	mov	x1, x21
    41c0:	mov	x0, x20
    41c4:	bl	2640 <_PyDict_SetItemId@plt>
    41c8:	mov	w20, w0
    41cc:	ldr	x1, [x19]
    41d0:	sub	x1, x1, #0x1
    41d4:	str	x1, [x19]
    41d8:	cbz	x1, 41f0 <_PyDict_SetItemId@plt+0x1bb0>
    41dc:	mov	w0, w20
    41e0:	ldp	x19, x20, [sp, #16]
    41e4:	ldr	x21, [sp, #32]
    41e8:	ldp	x29, x30, [sp], #48
    41ec:	ret
    41f0:	mov	x0, x19
    41f4:	bl	22f0 <_Py_Dealloc@plt>
    41f8:	b	41dc <_PyDict_SetItemId@plt+0x1b9c>
    41fc:	mov	w20, #0xffffffff            	// #-1
    4200:	b	41dc <_PyDict_SetItemId@plt+0x1b9c>
    4204:	stp	x29, x30, [sp, #-144]!
    4208:	mov	x29, sp
    420c:	stp	x19, x20, [sp, #16]
    4210:	str	x21, [sp, #32]
    4214:	mov	x21, x1
    4218:	stp	xzr, xzr, [sp, #64]
    421c:	stp	xzr, xzr, [sp, #80]
    4220:	stp	xzr, xzr, [sp, #96]
    4224:	stp	xzr, xzr, [sp, #112]
    4228:	stp	xzr, xzr, [sp, #128]
    422c:	cmp	x2, #0x2
    4230:	b.eq	4250 <_PyDict_SetItemId@plt+0x1c10>  // b.none
    4234:	mov	x1, x2
    4238:	mov	x3, #0x2                   	// #2
    423c:	mov	x2, x3
    4240:	adrp	x0, 5000 <PyInit__lzma@@Base+0x988>
    4244:	add	x0, x0, #0x138
    4248:	bl	2460 <_PyArg_CheckPositional@plt>
    424c:	cbz	w0, 43dc <_PyDict_SetItemId@plt+0x1d9c>
    4250:	ldr	x0, [x21]
    4254:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    4258:	mov	x20, x0
    425c:	bl	2480 <PyErr_Occurred@plt>
    4260:	mov	x19, x0
    4264:	cbz	x0, 43e4 <_PyDict_SetItemId@plt+0x1da4>
    4268:	mov	x19, #0x0                   	// #0
    426c:	ldr	x0, [sp, #72]
    4270:	cbz	x0, 427c <_PyDict_SetItemId@plt+0x1c3c>
    4274:	add	x0, sp, #0x40
    4278:	bl	2290 <PyBuffer_Release@plt>
    427c:	mov	x0, x19
    4280:	ldp	x19, x20, [sp, #16]
    4284:	ldr	x21, [sp, #32]
    4288:	ldp	x29, x30, [sp], #144
    428c:	ret
    4290:	ldr	x3, [x21, #8]
    4294:	adrp	x2, 4000 <_PyDict_SetItemId@plt+0x19c0>
    4298:	add	x2, x2, #0xfb8
    429c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    42a0:	add	x1, x1, #0x158
    42a4:	adrp	x0, 5000 <PyInit__lzma@@Base+0x988>
    42a8:	add	x0, x0, #0x138
    42ac:	bl	2400 <_PyArg_BadArgument@plt>
    42b0:	b	426c <_PyDict_SetItemId@plt+0x1c2c>
    42b4:	mov	x0, #0x1                   	// #1
    42b8:	movk	x0, #0x4000, lsl #48
    42bc:	cmp	x2, x0
    42c0:	b.ne	439c <_PyDict_SetItemId@plt+0x1d5c>  // b.any
    42c4:	ldr	x21, [sp, #56]
    42c8:	ldr	w2, [x21, #20]
    42cc:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    42d0:	add	x1, x1, #0x570
    42d4:	add	x1, x1, #0x160
    42d8:	mov	x0, x20
    42dc:	bl	4190 <_PyDict_SetItemId@plt+0x1b50>
    42e0:	cmn	w0, #0x1
    42e4:	b.eq	43b4 <_PyDict_SetItemId@plt+0x1d74>  // b.none
    42e8:	ldr	w2, [x21, #24]
    42ec:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    42f0:	add	x1, x1, #0x570
    42f4:	add	x1, x1, #0x178
    42f8:	mov	x0, x20
    42fc:	bl	4190 <_PyDict_SetItemId@plt+0x1b50>
    4300:	cmn	w0, #0x1
    4304:	b.eq	43b4 <_PyDict_SetItemId@plt+0x1d74>  // b.none
    4308:	ldr	w2, [x21, #28]
    430c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    4310:	add	x1, x1, #0x570
    4314:	add	x1, x1, #0x190
    4318:	mov	x0, x20
    431c:	bl	4190 <_PyDict_SetItemId@plt+0x1b50>
    4320:	cmn	w0, #0x1
    4324:	b.eq	43b4 <_PyDict_SetItemId@plt+0x1d74>  // b.none
    4328:	ldr	w2, [x21]
    432c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    4330:	add	x1, x1, #0x570
    4334:	add	x1, x1, #0x1a8
    4338:	mov	x0, x20
    433c:	bl	4190 <_PyDict_SetItemId@plt+0x1b50>
    4340:	cmn	w0, #0x1
    4344:	b.ne	4498 <_PyDict_SetItemId@plt+0x1e58>  // b.any
    4348:	b	43b4 <_PyDict_SetItemId@plt+0x1d74>
    434c:	ldr	x0, [sp, #56]
    4350:	ldr	w2, [x0]
    4354:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    4358:	add	x1, x1, #0x570
    435c:	add	x1, x1, #0x1c0
    4360:	mov	x0, x20
    4364:	bl	4190 <_PyDict_SetItemId@plt+0x1b50>
    4368:	cmn	w0, #0x1
    436c:	b.ne	4498 <_PyDict_SetItemId@plt+0x1e58>  // b.any
    4370:	b	43b4 <_PyDict_SetItemId@plt+0x1d74>
    4374:	ldr	x0, [sp, #56]
    4378:	ldr	w2, [x0, #4]
    437c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    4380:	add	x1, x1, #0x570
    4384:	add	x1, x1, #0x1d8
    4388:	mov	x0, x20
    438c:	bl	4190 <_PyDict_SetItemId@plt+0x1b50>
    4390:	cmn	w0, #0x1
    4394:	b.ne	4498 <_PyDict_SetItemId@plt+0x1e58>  // b.any
    4398:	b	43b4 <_PyDict_SetItemId@plt+0x1d74>
    439c:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    43a0:	add	x1, x1, #0xe80
    43a4:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    43a8:	ldr	x0, [x0, #4008]
    43ac:	ldr	x0, [x0]
    43b0:	bl	25b0 <PyErr_Format@plt>
    43b4:	ldr	x0, [x20]
    43b8:	sub	x0, x0, #0x1
    43bc:	str	x0, [x20]
    43c0:	cbz	x0, 43cc <_PyDict_SetItemId@plt+0x1d8c>
    43c4:	mov	x20, x19
    43c8:	b	4498 <_PyDict_SetItemId@plt+0x1e58>
    43cc:	mov	x0, x20
    43d0:	bl	22f0 <_Py_Dealloc@plt>
    43d4:	mov	x20, x19
    43d8:	b	4498 <_PyDict_SetItemId@plt+0x1e58>
    43dc:	mov	x19, #0x0                   	// #0
    43e0:	b	426c <_PyDict_SetItemId@plt+0x1c2c>
    43e4:	mov	w2, #0x0                   	// #0
    43e8:	add	x1, sp, #0x40
    43ec:	ldr	x0, [x21, #8]
    43f0:	bl	2560 <PyObject_GetBuffer@plt>
    43f4:	cbnz	w0, 426c <_PyDict_SetItemId@plt+0x1c2c>
    43f8:	mov	w1, #0x43                  	// #67
    43fc:	add	x0, sp, #0x40
    4400:	bl	22d0 <PyBuffer_IsContiguous@plt>
    4404:	cbz	w0, 4290 <_PyDict_SetItemId@plt+0x1c50>
    4408:	str	x20, [sp, #48]
    440c:	ldr	x3, [sp, #80]
    4410:	ldr	x2, [sp, #64]
    4414:	mov	x1, #0x0                   	// #0
    4418:	add	x0, sp, #0x30
    441c:	bl	2470 <lzma_properties_decode@plt>
    4420:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    4424:	cbnz	w0, 426c <_PyDict_SetItemId@plt+0x1c2c>
    4428:	bl	2540 <PyDict_New@plt>
    442c:	mov	x20, x0
    4430:	cbz	x0, 4498 <_PyDict_SetItemId@plt+0x1e58>
    4434:	ldr	x2, [sp, #48]
    4438:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    443c:	add	x1, x1, #0x570
    4440:	add	x1, x1, #0x130
    4444:	bl	4190 <_PyDict_SetItemId@plt+0x1b50>
    4448:	cmn	w0, #0x1
    444c:	b.eq	43b4 <_PyDict_SetItemId@plt+0x1d74>  // b.none
    4450:	ldr	x2, [sp, #48]
    4454:	cmp	x2, #0x21
    4458:	b.eq	434c <_PyDict_SetItemId@plt+0x1d0c>  // b.none
    445c:	b.hi	42b4 <_PyDict_SetItemId@plt+0x1c74>  // b.pmore
    4460:	cmp	x2, #0x3
    4464:	b.eq	4374 <_PyDict_SetItemId@plt+0x1d34>  // b.none
    4468:	sub	x0, x2, #0x4
    446c:	cmp	x0, #0x5
    4470:	b.hi	439c <_PyDict_SetItemId@plt+0x1d5c>  // b.pmore
    4474:	ldr	x0, [sp, #56]
    4478:	ldr	w2, [x0]
    447c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x12988>
    4480:	add	x1, x1, #0x570
    4484:	add	x1, x1, #0x148
    4488:	mov	x0, x20
    448c:	bl	4190 <_PyDict_SetItemId@plt+0x1b50>
    4490:	cmn	w0, #0x1
    4494:	b.eq	43b4 <_PyDict_SetItemId@plt+0x1d74>  // b.none
    4498:	ldr	x0, [sp, #56]
    449c:	bl	24f0 <free@plt>
    44a0:	mov	x19, x20
    44a4:	b	426c <_PyDict_SetItemId@plt+0x1c2c>
    44a8:	stp	x29, x30, [sp, #-80]!
    44ac:	mov	x29, sp
    44b0:	str	x19, [sp, #16]
    44b4:	mov	x0, x1
    44b8:	mov	x1, #0xffffffffffffffff    	// #-1
    44bc:	str	x1, [sp, #64]
    44c0:	str	xzr, [sp, #72]
    44c4:	add	x1, sp, #0x40
    44c8:	bl	2a7c <_PyDict_SetItemId@plt+0x43c>
    44cc:	mov	x19, #0x0                   	// #0
    44d0:	cbz	w0, 4518 <_PyDict_SetItemId@plt+0x1ed8>
    44d4:	ldp	x0, x1, [sp, #64]
    44d8:	stp	x0, x1, [sp, #48]
    44dc:	add	x1, sp, #0x30
    44e0:	add	x0, sp, #0x2c
    44e4:	bl	23b0 <lzma_properties_size@plt>
    44e8:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    44ec:	cbnz	w0, 4518 <_PyDict_SetItemId@plt+0x1ed8>
    44f0:	ldr	w1, [sp, #44]
    44f4:	mov	x0, #0x0                   	// #0
    44f8:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    44fc:	mov	x19, x0
    4500:	cbz	x0, 4518 <_PyDict_SetItemId@plt+0x1ed8>
    4504:	add	x1, x0, #0x20
    4508:	add	x0, sp, #0x30
    450c:	bl	2570 <lzma_properties_encode@plt>
    4510:	bl	28d0 <_PyDict_SetItemId@plt+0x290>
    4514:	cbnz	w0, 4550 <_PyDict_SetItemId@plt+0x1f10>
    4518:	ldr	x0, [sp, #64]
    451c:	cmn	x0, #0x1
    4520:	b.ne	4544 <_PyDict_SetItemId@plt+0x1f04>  // b.any
    4524:	mov	x0, x19
    4528:	ldr	x19, [sp, #16]
    452c:	ldp	x29, x30, [sp], #80
    4530:	ret
    4534:	mov	x0, x19
    4538:	bl	22f0 <_Py_Dealloc@plt>
    453c:	mov	x19, #0x0                   	// #0
    4540:	b	4518 <_PyDict_SetItemId@plt+0x1ed8>
    4544:	ldr	x0, [sp, #72]
    4548:	bl	2270 <PyMem_Free@plt>
    454c:	b	4524 <_PyDict_SetItemId@plt+0x1ee4>
    4550:	ldr	x0, [x19]
    4554:	sub	x0, x0, #0x1
    4558:	str	x0, [x19]
    455c:	cbz	x0, 4534 <_PyDict_SetItemId@plt+0x1ef4>
    4560:	mov	x19, #0x0                   	// #0
    4564:	b	4518 <_PyDict_SetItemId@plt+0x1ed8>
    4568:	stp	x29, x30, [sp, #-32]!
    456c:	mov	x29, sp
    4570:	str	x19, [sp, #16]
    4574:	mov	x19, x1
    4578:	ldr	x0, [x1, #8]
    457c:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    4580:	ldr	x1, [x1, #3984]
    4584:	cmp	x0, x1
    4588:	b.eq	45cc <_PyDict_SetItemId@plt+0x1f8c>  // b.none
    458c:	adrp	x1, 16000 <PyInit__lzma@@Base+0x11988>
    4590:	ldr	x1, [x1, #3984]
    4594:	bl	25a0 <PyType_IsSubtype@plt>
    4598:	cbnz	w0, 45cc <_PyDict_SetItemId@plt+0x1f8c>
    459c:	mov	x0, x19
    45a0:	bl	2600 <_PyLong_AsInt@plt>
    45a4:	mov	w19, w0
    45a8:	cmn	w0, #0x1
    45ac:	b.eq	45ec <_PyDict_SetItemId@plt+0x1fac>  // b.none
    45b0:	mov	w0, w19
    45b4:	bl	25c0 <lzma_check_is_supported@plt>
    45b8:	and	x0, x0, #0xff
    45bc:	bl	2430 <PyBool_FromLong@plt>
    45c0:	ldr	x19, [sp, #16]
    45c4:	ldp	x29, x30, [sp], #32
    45c8:	ret
    45cc:	adrp	x1, 4000 <_PyDict_SetItemId@plt+0x19c0>
    45d0:	add	x1, x1, #0xed0
    45d4:	adrp	x0, 16000 <PyInit__lzma@@Base+0x11988>
    45d8:	ldr	x0, [x0, #4016]
    45dc:	ldr	x0, [x0]
    45e0:	bl	2350 <PyErr_SetString@plt>
    45e4:	mov	x0, #0x0                   	// #0
    45e8:	b	45c0 <_PyDict_SetItemId@plt+0x1f80>
    45ec:	bl	2480 <PyErr_Occurred@plt>
    45f0:	mov	x1, x0
    45f4:	mov	x0, #0x0                   	// #0
    45f8:	cbz	x1, 45b0 <_PyDict_SetItemId@plt+0x1f70>
    45fc:	b	45c0 <_PyDict_SetItemId@plt+0x1f80>
    4600:	stp	x29, x30, [sp, #-48]!
    4604:	mov	x29, sp
    4608:	stp	x19, x20, [sp, #16]
    460c:	str	x21, [sp, #32]
    4610:	mov	x20, x0
    4614:	mov	x21, x1
    4618:	mov	x0, x2
    461c:	bl	25e0 <PyLong_FromLongLong@plt>
    4620:	cbz	x0, 4670 <_PyDict_SetItemId@plt+0x2030>
    4624:	mov	x19, x0
    4628:	mov	x2, x0
    462c:	mov	x1, x21
    4630:	mov	x0, x20
    4634:	bl	2590 <PyModule_AddObject@plt>
    4638:	cbz	w0, 4650 <_PyDict_SetItemId@plt+0x2010>
    463c:	ldr	x1, [x19]
    4640:	sub	x1, x1, #0x1
    4644:	str	x1, [x19]
    4648:	mov	w0, #0xffffffff            	// #-1
    464c:	cbz	x1, 4660 <_PyDict_SetItemId@plt+0x2020>
    4650:	ldp	x19, x20, [sp, #16]
    4654:	ldr	x21, [sp, #32]
    4658:	ldp	x29, x30, [sp], #48
    465c:	ret
    4660:	mov	x0, x19
    4664:	bl	22f0 <_Py_Dealloc@plt>
    4668:	mov	w0, #0xffffffff            	// #-1
    466c:	b	4650 <_PyDict_SetItemId@plt+0x2010>
    4670:	mov	w0, #0xffffffff            	// #-1
    4674:	b	4650 <_PyDict_SetItemId@plt+0x2010>

0000000000004678 <PyInit__lzma@@Base>:
    4678:	stp	x29, x30, [sp, #-32]!
    467c:	mov	x29, sp
    4680:	str	x19, [sp, #16]
    4684:	mov	x0, #0x0                   	// #0
    4688:	bl	2450 <PyTuple_New@plt>
    468c:	mov	x19, x0
    4690:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    4694:	str	x19, [x0, #2496]
    4698:	cbz	x19, 4aa8 <PyInit__lzma@@Base+0x430>
    469c:	mov	w1, #0x3f5                 	// #1013
    46a0:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    46a4:	add	x0, x0, #0x570
    46a8:	add	x0, x0, #0x1f0
    46ac:	bl	2490 <PyModule_Create2@plt>
    46b0:	mov	x19, x0
    46b4:	cbz	x0, 4aa8 <PyInit__lzma@@Base+0x430>
    46b8:	mov	x2, #0x0                   	// #0
    46bc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    46c0:	add	x1, x1, #0x168
    46c4:	bl	2220 <PyModule_AddIntConstant@plt>
    46c8:	cmn	w0, #0x1
    46cc:	b.eq	4aa4 <PyInit__lzma@@Base+0x42c>  // b.none
    46d0:	mov	x2, #0x1                   	// #1
    46d4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    46d8:	add	x1, x1, #0x178
    46dc:	mov	x0, x19
    46e0:	bl	2220 <PyModule_AddIntConstant@plt>
    46e4:	cmn	w0, #0x1
    46e8:	b.eq	4ab8 <PyInit__lzma@@Base+0x440>  // b.none
    46ec:	mov	x2, #0x2                   	// #2
    46f0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    46f4:	add	x1, x1, #0x188
    46f8:	mov	x0, x19
    46fc:	bl	2220 <PyModule_AddIntConstant@plt>
    4700:	cmn	w0, #0x1
    4704:	b.eq	4ac0 <PyInit__lzma@@Base+0x448>  // b.none
    4708:	mov	x2, #0x3                   	// #3
    470c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4710:	add	x1, x1, #0x198
    4714:	mov	x0, x19
    4718:	bl	2220 <PyModule_AddIntConstant@plt>
    471c:	cmn	w0, #0x1
    4720:	b.eq	4ac8 <PyInit__lzma@@Base+0x450>  // b.none
    4724:	mov	x2, #0x0                   	// #0
    4728:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    472c:	add	x1, x1, #0x1a8
    4730:	mov	x0, x19
    4734:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4738:	cmn	w0, #0x1
    473c:	b.eq	4ad0 <PyInit__lzma@@Base+0x458>  // b.none
    4740:	mov	x2, #0x1                   	// #1
    4744:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4748:	add	x1, x1, #0x1b8
    474c:	mov	x0, x19
    4750:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4754:	cmn	w0, #0x1
    4758:	b.eq	4ad8 <PyInit__lzma@@Base+0x460>  // b.none
    475c:	mov	x2, #0x4                   	// #4
    4760:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4764:	add	x1, x1, #0x1c8
    4768:	mov	x0, x19
    476c:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4770:	cmn	w0, #0x1
    4774:	b.eq	4ae0 <PyInit__lzma@@Base+0x468>  // b.none
    4778:	mov	x2, #0xa                   	// #10
    477c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4780:	add	x1, x1, #0x1d8
    4784:	mov	x0, x19
    4788:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    478c:	cmn	w0, #0x1
    4790:	b.eq	4ae8 <PyInit__lzma@@Base+0x470>  // b.none
    4794:	mov	x2, #0xf                   	// #15
    4798:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    479c:	add	x1, x1, #0x1e8
    47a0:	mov	x0, x19
    47a4:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    47a8:	cmn	w0, #0x1
    47ac:	b.eq	4af0 <PyInit__lzma@@Base+0x478>  // b.none
    47b0:	mov	x2, #0x10                  	// #16
    47b4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    47b8:	add	x1, x1, #0x1f8
    47bc:	mov	x0, x19
    47c0:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    47c4:	cmn	w0, #0x1
    47c8:	b.eq	4af8 <PyInit__lzma@@Base+0x480>  // b.none
    47cc:	mov	x2, #0x1                   	// #1
    47d0:	movk	x2, #0x4000, lsl #48
    47d4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    47d8:	add	x1, x1, #0x208
    47dc:	mov	x0, x19
    47e0:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    47e4:	cmn	w0, #0x1
    47e8:	b.eq	4b00 <PyInit__lzma@@Base+0x488>  // b.none
    47ec:	mov	x2, #0x21                  	// #33
    47f0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    47f4:	add	x1, x1, #0x218
    47f8:	mov	x0, x19
    47fc:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4800:	cmn	w0, #0x1
    4804:	b.eq	4b08 <PyInit__lzma@@Base+0x490>  // b.none
    4808:	mov	x2, #0x3                   	// #3
    480c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4810:	add	x1, x1, #0x228
    4814:	mov	x0, x19
    4818:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    481c:	cmn	w0, #0x1
    4820:	b.eq	4b10 <PyInit__lzma@@Base+0x498>  // b.none
    4824:	mov	x2, #0x4                   	// #4
    4828:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    482c:	add	x1, x1, #0x238
    4830:	mov	x0, x19
    4834:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4838:	cmn	w0, #0x1
    483c:	b.eq	4b18 <PyInit__lzma@@Base+0x4a0>  // b.none
    4840:	mov	x2, #0x6                   	// #6
    4844:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4848:	add	x1, x1, #0x248
    484c:	mov	x0, x19
    4850:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4854:	cmn	w0, #0x1
    4858:	b.eq	4b20 <PyInit__lzma@@Base+0x4a8>  // b.none
    485c:	mov	x2, #0x7                   	// #7
    4860:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4864:	add	x1, x1, #0x258
    4868:	mov	x0, x19
    486c:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4870:	cmn	w0, #0x1
    4874:	b.eq	4b28 <PyInit__lzma@@Base+0x4b0>  // b.none
    4878:	mov	x2, #0x8                   	// #8
    487c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4880:	add	x1, x1, #0x268
    4884:	mov	x0, x19
    4888:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    488c:	cmn	w0, #0x1
    4890:	b.eq	4b30 <PyInit__lzma@@Base+0x4b8>  // b.none
    4894:	mov	x2, #0x9                   	// #9
    4898:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    489c:	add	x1, x1, #0x278
    48a0:	mov	x0, x19
    48a4:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    48a8:	cmn	w0, #0x1
    48ac:	b.eq	4b38 <PyInit__lzma@@Base+0x4c0>  // b.none
    48b0:	mov	x2, #0x5                   	// #5
    48b4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    48b8:	add	x1, x1, #0x288
    48bc:	mov	x0, x19
    48c0:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    48c4:	cmn	w0, #0x1
    48c8:	b.eq	4b40 <PyInit__lzma@@Base+0x4c8>  // b.none
    48cc:	mov	x2, #0x3                   	// #3
    48d0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    48d4:	add	x1, x1, #0x298
    48d8:	mov	x0, x19
    48dc:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    48e0:	cmn	w0, #0x1
    48e4:	b.eq	4b48 <PyInit__lzma@@Base+0x4d0>  // b.none
    48e8:	mov	x2, #0x4                   	// #4
    48ec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    48f0:	add	x1, x1, #0x2a0
    48f4:	mov	x0, x19
    48f8:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    48fc:	cmn	w0, #0x1
    4900:	b.eq	4b50 <PyInit__lzma@@Base+0x4d8>  // b.none
    4904:	mov	x2, #0x12                  	// #18
    4908:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    490c:	add	x1, x1, #0x2a8
    4910:	mov	x0, x19
    4914:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4918:	cmn	w0, #0x1
    491c:	b.eq	4b58 <PyInit__lzma@@Base+0x4e0>  // b.none
    4920:	mov	x2, #0x13                  	// #19
    4924:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4928:	add	x1, x1, #0x2b0
    492c:	mov	x0, x19
    4930:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4934:	cmn	w0, #0x1
    4938:	b.eq	4b60 <PyInit__lzma@@Base+0x4e8>  // b.none
    493c:	mov	x2, #0x14                  	// #20
    4940:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4944:	add	x1, x1, #0x2b8
    4948:	mov	x0, x19
    494c:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4950:	cmn	w0, #0x1
    4954:	b.eq	4b68 <PyInit__lzma@@Base+0x4f0>  // b.none
    4958:	mov	x2, #0x1                   	// #1
    495c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4960:	add	x1, x1, #0x2c0
    4964:	mov	x0, x19
    4968:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    496c:	cmn	w0, #0x1
    4970:	b.eq	4b70 <PyInit__lzma@@Base+0x4f8>  // b.none
    4974:	mov	x2, #0x2                   	// #2
    4978:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    497c:	add	x1, x1, #0x2d0
    4980:	mov	x0, x19
    4984:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    4988:	cmn	w0, #0x1
    498c:	b.eq	4b78 <PyInit__lzma@@Base+0x500>  // b.none
    4990:	mov	x2, #0x6                   	// #6
    4994:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4998:	add	x1, x1, #0x2e0
    499c:	mov	x0, x19
    49a0:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    49a4:	cmn	w0, #0x1
    49a8:	b.eq	4b80 <PyInit__lzma@@Base+0x508>  // b.none
    49ac:	mov	x2, #0x80000000            	// #2147483648
    49b0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    49b4:	add	x1, x1, #0x2f0
    49b8:	mov	x0, x19
    49bc:	bl	4600 <_PyDict_SetItemId@plt+0x1fc0>
    49c0:	cmn	w0, #0x1
    49c4:	b.eq	4b88 <PyInit__lzma@@Base+0x510>  // b.none
    49c8:	mov	x3, #0x0                   	// #0
    49cc:	mov	x2, #0x0                   	// #0
    49d0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    49d4:	add	x1, x1, #0x300
    49d8:	adrp	x0, 5000 <PyInit__lzma@@Base+0x988>
    49dc:	add	x0, x0, #0x318
    49e0:	bl	2310 <PyErr_NewExceptionWithDoc@plt>
    49e4:	mov	x2, x0
    49e8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    49ec:	str	x2, [x0, #2488]
    49f0:	cbz	x2, 4b90 <PyInit__lzma@@Base+0x518>
    49f4:	ldr	x0, [x2]
    49f8:	add	x0, x0, #0x1
    49fc:	str	x0, [x2]
    4a00:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4a04:	add	x1, x1, #0x328
    4a08:	mov	x0, x19
    4a0c:	bl	2590 <PyModule_AddObject@plt>
    4a10:	cmn	w0, #0x1
    4a14:	b.eq	4b98 <PyInit__lzma@@Base+0x520>  // b.none
    4a18:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    4a1c:	add	x0, x0, #0x230
    4a20:	bl	23e0 <PyType_Ready@plt>
    4a24:	cmn	w0, #0x1
    4a28:	b.eq	4ba0 <PyInit__lzma@@Base+0x528>  // b.none
    4a2c:	adrp	x2, 17000 <PyInit__lzma@@Base+0x12988>
    4a30:	ldr	x0, [x2, #560]
    4a34:	add	x0, x0, #0x1
    4a38:	str	x0, [x2, #560]
    4a3c:	add	x2, x2, #0x230
    4a40:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4a44:	add	x1, x1, #0x338
    4a48:	mov	x0, x19
    4a4c:	bl	2590 <PyModule_AddObject@plt>
    4a50:	cmn	w0, #0x1
    4a54:	b.eq	4ba8 <PyInit__lzma@@Base+0x530>  // b.none
    4a58:	adrp	x0, 17000 <PyInit__lzma@@Base+0x12988>
    4a5c:	add	x0, x0, #0x230
    4a60:	add	x0, x0, #0x1a0
    4a64:	bl	23e0 <PyType_Ready@plt>
    4a68:	cmn	w0, #0x1
    4a6c:	b.eq	4bb0 <PyInit__lzma@@Base+0x538>  // b.none
    4a70:	adrp	x2, 17000 <PyInit__lzma@@Base+0x12988>
    4a74:	add	x2, x2, #0x230
    4a78:	ldr	x0, [x2, #416]
    4a7c:	add	x0, x0, #0x1
    4a80:	str	x0, [x2, #416]
    4a84:	add	x2, x2, #0x1a0
    4a88:	adrp	x1, 5000 <PyInit__lzma@@Base+0x988>
    4a8c:	add	x1, x1, #0x348
    4a90:	mov	x0, x19
    4a94:	bl	2590 <PyModule_AddObject@plt>
    4a98:	cmn	w0, #0x1
    4a9c:	csel	x19, x19, xzr, ne  // ne = any
    4aa0:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4aa4:	mov	x19, #0x0                   	// #0
    4aa8:	mov	x0, x19
    4aac:	ldr	x19, [sp, #16]
    4ab0:	ldp	x29, x30, [sp], #32
    4ab4:	ret
    4ab8:	mov	x19, #0x0                   	// #0
    4abc:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4ac0:	mov	x19, #0x0                   	// #0
    4ac4:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4ac8:	mov	x19, #0x0                   	// #0
    4acc:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4ad0:	mov	x19, #0x0                   	// #0
    4ad4:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4ad8:	mov	x19, #0x0                   	// #0
    4adc:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4ae0:	mov	x19, #0x0                   	// #0
    4ae4:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4ae8:	mov	x19, #0x0                   	// #0
    4aec:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4af0:	mov	x19, #0x0                   	// #0
    4af4:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4af8:	mov	x19, #0x0                   	// #0
    4afc:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b00:	mov	x19, #0x0                   	// #0
    4b04:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b08:	mov	x19, #0x0                   	// #0
    4b0c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b10:	mov	x19, #0x0                   	// #0
    4b14:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b18:	mov	x19, #0x0                   	// #0
    4b1c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b20:	mov	x19, #0x0                   	// #0
    4b24:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b28:	mov	x19, #0x0                   	// #0
    4b2c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b30:	mov	x19, #0x0                   	// #0
    4b34:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b38:	mov	x19, #0x0                   	// #0
    4b3c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b40:	mov	x19, #0x0                   	// #0
    4b44:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b48:	mov	x19, #0x0                   	// #0
    4b4c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b50:	mov	x19, #0x0                   	// #0
    4b54:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b58:	mov	x19, #0x0                   	// #0
    4b5c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b60:	mov	x19, #0x0                   	// #0
    4b64:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b68:	mov	x19, #0x0                   	// #0
    4b6c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b70:	mov	x19, #0x0                   	// #0
    4b74:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b78:	mov	x19, #0x0                   	// #0
    4b7c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b80:	mov	x19, #0x0                   	// #0
    4b84:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b88:	mov	x19, #0x0                   	// #0
    4b8c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b90:	mov	x19, x2
    4b94:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4b98:	mov	x19, #0x0                   	// #0
    4b9c:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4ba0:	mov	x19, #0x0                   	// #0
    4ba4:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4ba8:	mov	x19, #0x0                   	// #0
    4bac:	b	4aa8 <PyInit__lzma@@Base+0x430>
    4bb0:	mov	x19, #0x0                   	// #0
    4bb4:	b	4aa8 <PyInit__lzma@@Base+0x430>

Disassembly of section .fini:

0000000000004bb8 <.fini>:
    4bb8:	stp	x29, x30, [sp, #-16]!
    4bbc:	mov	x29, sp
    4bc0:	ldp	x29, x30, [sp], #16
    4bc4:	ret
