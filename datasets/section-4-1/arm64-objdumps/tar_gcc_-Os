
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004041b8 <.init>:
  4041b8:	stp	x29, x30, [sp, #-16]!
  4041bc:	mov	x29, sp
  4041c0:	bl	405214 <wcrtomb@plt+0x2c4>
  4041c4:	ldp	x29, x30, [sp], #16
  4041c8:	ret

Disassembly of section .plt:

00000000004041d0 <mbrtowc@plt-0x20>:
  4041d0:	stp	x16, x30, [sp, #-16]!
  4041d4:	adrp	x16, 46d000 <_obstack_memory_used@@Base+0x35380>
  4041d8:	ldr	x17, [x16, #4088]
  4041dc:	add	x16, x16, #0xff8
  4041e0:	br	x17
  4041e4:	nop
  4041e8:	nop
  4041ec:	nop

00000000004041f0 <mbrtowc@plt>:
  4041f0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4041f4:	ldr	x17, [x16]
  4041f8:	add	x16, x16, #0x0
  4041fc:	br	x17

0000000000404200 <memcpy@plt>:
  404200:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404204:	ldr	x17, [x16, #8]
  404208:	add	x16, x16, #0x8
  40420c:	br	x17

0000000000404210 <memmove@plt>:
  404210:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404214:	ldr	x17, [x16, #16]
  404218:	add	x16, x16, #0x10
  40421c:	br	x17

0000000000404220 <_exit@plt>:
  404220:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404224:	ldr	x17, [x16, #24]
  404228:	add	x16, x16, #0x18
  40422c:	br	x17

0000000000404230 <getcwd@plt>:
  404230:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404234:	ldr	x17, [x16, #32]
  404238:	add	x16, x16, #0x20
  40423c:	br	x17

0000000000404240 <setuid@plt>:
  404240:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404244:	ldr	x17, [x16, #40]
  404248:	add	x16, x16, #0x28
  40424c:	br	x17

0000000000404250 <strtok@plt>:
  404250:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404254:	ldr	x17, [x16, #48]
  404258:	add	x16, x16, #0x30
  40425c:	br	x17

0000000000404260 <fwrite_unlocked@plt>:
  404260:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404264:	ldr	x17, [x16, #56]
  404268:	add	x16, x16, #0x38
  40426c:	br	x17

0000000000404270 <strtoul@plt>:
  404270:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404274:	ldr	x17, [x16, #64]
  404278:	add	x16, x16, #0x40
  40427c:	br	x17

0000000000404280 <strlen@plt>:
  404280:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404284:	ldr	x17, [x16, #72]
  404288:	add	x16, x16, #0x48
  40428c:	br	x17

0000000000404290 <fputs@plt>:
  404290:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404294:	ldr	x17, [x16, #80]
  404298:	add	x16, x16, #0x50
  40429c:	br	x17

00000000004042a0 <__sprintf_chk@plt>:
  4042a0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4042a4:	ldr	x17, [x16, #88]
  4042a8:	add	x16, x16, #0x58
  4042ac:	br	x17

00000000004042b0 <exit@plt>:
  4042b0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4042b4:	ldr	x17, [x16, #96]
  4042b8:	add	x16, x16, #0x60
  4042bc:	br	x17

00000000004042c0 <raise@plt>:
  4042c0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4042c4:	ldr	x17, [x16, #104]
  4042c8:	add	x16, x16, #0x68
  4042cc:	br	x17

00000000004042d0 <dup@plt>:
  4042d0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4042d4:	ldr	x17, [x16, #112]
  4042d8:	add	x16, x16, #0x70
  4042dc:	br	x17

00000000004042e0 <error@plt>:
  4042e0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4042e4:	ldr	x17, [x16, #120]
  4042e8:	add	x16, x16, #0x78
  4042ec:	br	x17

00000000004042f0 <fchdir@plt>:
  4042f0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4042f4:	ldr	x17, [x16, #128]
  4042f8:	add	x16, x16, #0x80
  4042fc:	br	x17

0000000000404300 <rpmatch@plt>:
  404300:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404304:	ldr	x17, [x16, #136]
  404308:	add	x16, x16, #0x88
  40430c:	br	x17

0000000000404310 <execl@plt>:
  404310:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404314:	ldr	x17, [x16, #144]
  404318:	add	x16, x16, #0x90
  40431c:	br	x17

0000000000404320 <flockfile@plt>:
  404320:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404324:	ldr	x17, [x16, #152]
  404328:	add	x16, x16, #0x98
  40432c:	br	x17

0000000000404330 <strtoimax@plt>:
  404330:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404334:	ldr	x17, [x16, #160]
  404338:	add	x16, x16, #0xa0
  40433c:	br	x17

0000000000404340 <wctype@plt>:
  404340:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404344:	ldr	x17, [x16, #168]
  404348:	add	x16, x16, #0xa8
  40434c:	br	x17

0000000000404350 <sigprocmask@plt>:
  404350:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404354:	ldr	x17, [x16, #176]
  404358:	add	x16, x16, #0xb0
  40435c:	br	x17

0000000000404360 <strnlen@plt>:
  404360:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404364:	ldr	x17, [x16, #184]
  404368:	add	x16, x16, #0xb8
  40436c:	br	x17

0000000000404370 <geteuid@plt>:
  404370:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404374:	ldr	x17, [x16, #192]
  404378:	add	x16, x16, #0xc0
  40437c:	br	x17

0000000000404380 <linkat@plt>:
  404380:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404384:	ldr	x17, [x16, #200]
  404388:	add	x16, x16, #0xc8
  40438c:	br	x17

0000000000404390 <localtime_r@plt>:
  404390:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404394:	ldr	x17, [x16, #208]
  404398:	add	x16, x16, #0xd0
  40439c:	br	x17

00000000004043a0 <setenv@plt>:
  4043a0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4043a4:	ldr	x17, [x16, #216]
  4043a8:	add	x16, x16, #0xd8
  4043ac:	br	x17

00000000004043b0 <getgrnam@plt>:
  4043b0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4043b4:	ldr	x17, [x16, #224]
  4043b8:	add	x16, x16, #0xe0
  4043bc:	br	x17

00000000004043c0 <ferror_unlocked@plt>:
  4043c0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4043c4:	ldr	x17, [x16, #232]
  4043c8:	add	x16, x16, #0xe8
  4043cc:	br	x17

00000000004043d0 <getuid@plt>:
  4043d0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4043d4:	ldr	x17, [x16, #240]
  4043d8:	add	x16, x16, #0xf0
  4043dc:	br	x17

00000000004043e0 <pipe@plt>:
  4043e0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4043e4:	ldr	x17, [x16, #248]
  4043e8:	add	x16, x16, #0xf8
  4043ec:	br	x17

00000000004043f0 <opendir@plt>:
  4043f0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4043f4:	ldr	x17, [x16, #256]
  4043f8:	add	x16, x16, #0x100
  4043fc:	br	x17

0000000000404400 <strftime@plt>:
  404400:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404404:	ldr	x17, [x16, #264]
  404408:	add	x16, x16, #0x108
  40440c:	br	x17

0000000000404410 <unlinkat@plt>:
  404410:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404414:	ldr	x17, [x16, #272]
  404418:	add	x16, x16, #0x110
  40441c:	br	x17

0000000000404420 <fputc@plt>:
  404420:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404424:	ldr	x17, [x16, #280]
  404428:	add	x16, x16, #0x118
  40442c:	br	x17

0000000000404430 <iswcntrl@plt>:
  404430:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404434:	ldr	x17, [x16, #288]
  404438:	add	x16, x16, #0x120
  40443c:	br	x17

0000000000404440 <clock_gettime@plt>:
  404440:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404444:	ldr	x17, [x16, #296]
  404448:	add	x16, x16, #0x128
  40444c:	br	x17

0000000000404450 <qsort@plt>:
  404450:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404454:	ldr	x17, [x16, #304]
  404458:	add	x16, x16, #0x130
  40445c:	br	x17

0000000000404460 <pathconf@plt>:
  404460:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404464:	ldr	x17, [x16, #312]
  404468:	add	x16, x16, #0x138
  40446c:	br	x17

0000000000404470 <fork@plt>:
  404470:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404474:	ldr	x17, [x16, #320]
  404478:	add	x16, x16, #0x140
  40447c:	br	x17

0000000000404480 <lseek@plt>:
  404480:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404484:	ldr	x17, [x16, #328]
  404488:	add	x16, x16, #0x148
  40448c:	br	x17

0000000000404490 <__fpending@plt>:
  404490:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404494:	ldr	x17, [x16, #336]
  404498:	add	x16, x16, #0x150
  40449c:	br	x17

00000000004044a0 <__ctype_tolower_loc@plt>:
  4044a0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4044a4:	ldr	x17, [x16, #344]
  4044a8:	add	x16, x16, #0x158
  4044ac:	br	x17

00000000004044b0 <snprintf@plt>:
  4044b0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4044b4:	ldr	x17, [x16, #352]
  4044b8:	add	x16, x16, #0x160
  4044bc:	br	x17

00000000004044c0 <gnu_dev_makedev@plt>:
  4044c0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4044c4:	ldr	x17, [x16, #360]
  4044c8:	add	x16, x16, #0x168
  4044cc:	br	x17

00000000004044d0 <localeconv@plt>:
  4044d0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4044d4:	ldr	x17, [x16, #368]
  4044d8:	add	x16, x16, #0x170
  4044dc:	br	x17

00000000004044e0 <stpcpy@plt>:
  4044e0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4044e4:	ldr	x17, [x16, #376]
  4044e8:	add	x16, x16, #0x178
  4044ec:	br	x17

00000000004044f0 <fileno@plt>:
  4044f0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4044f4:	ldr	x17, [x16, #384]
  4044f8:	add	x16, x16, #0x180
  4044fc:	br	x17

0000000000404500 <putc_unlocked@plt>:
  404500:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404504:	ldr	x17, [x16, #392]
  404508:	add	x16, x16, #0x188
  40450c:	br	x17

0000000000404510 <localtime@plt>:
  404510:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404514:	ldr	x17, [x16, #400]
  404518:	add	x16, x16, #0x190
  40451c:	br	x17

0000000000404520 <__memcpy_chk@plt>:
  404520:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404524:	ldr	x17, [x16, #408]
  404528:	add	x16, x16, #0x198
  40452c:	br	x17

0000000000404530 <mkdirat@plt>:
  404530:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404534:	ldr	x17, [x16, #416]
  404538:	add	x16, x16, #0x1a0
  40453c:	br	x17

0000000000404540 <signal@plt>:
  404540:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404544:	ldr	x17, [x16, #424]
  404548:	add	x16, x16, #0x1a8
  40454c:	br	x17

0000000000404550 <acl_delete_def_file@plt>:
  404550:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404554:	ldr	x17, [x16, #432]
  404558:	add	x16, x16, #0x1b0
  40455c:	br	x17

0000000000404560 <__snprintf_chk@plt>:
  404560:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404564:	ldr	x17, [x16, #440]
  404568:	add	x16, x16, #0x1b8
  40456c:	br	x17

0000000000404570 <fclose@plt>:
  404570:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404574:	ldr	x17, [x16, #448]
  404578:	add	x16, x16, #0x1c0
  40457c:	br	x17

0000000000404580 <fsync@plt>:
  404580:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404584:	ldr	x17, [x16, #456]
  404588:	add	x16, x16, #0x1c8
  40458c:	br	x17

0000000000404590 <atoi@plt>:
  404590:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404594:	ldr	x17, [x16, #464]
  404598:	add	x16, x16, #0x1d0
  40459c:	br	x17

00000000004045a0 <getpid@plt>:
  4045a0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4045a4:	ldr	x17, [x16, #472]
  4045a8:	add	x16, x16, #0x1d8
  4045ac:	br	x17

00000000004045b0 <nl_langinfo@plt>:
  4045b0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4045b4:	ldr	x17, [x16, #480]
  4045b8:	add	x16, x16, #0x1e0
  4045bc:	br	x17

00000000004045c0 <fopen@plt>:
  4045c0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4045c4:	ldr	x17, [x16, #488]
  4045c8:	add	x16, x16, #0x1e8
  4045cc:	br	x17

00000000004045d0 <__vsnprintf_chk@plt>:
  4045d0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4045d4:	ldr	x17, [x16, #496]
  4045d8:	add	x16, x16, #0x1f0
  4045dc:	br	x17

00000000004045e0 <iswctype@plt>:
  4045e0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4045e4:	ldr	x17, [x16, #504]
  4045e8:	add	x16, x16, #0x1f8
  4045ec:	br	x17

00000000004045f0 <malloc@plt>:
  4045f0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4045f4:	ldr	x17, [x16, #512]
  4045f8:	add	x16, x16, #0x200
  4045fc:	br	x17

0000000000404600 <toupper@plt>:
  404600:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404604:	ldr	x17, [x16, #520]
  404608:	add	x16, x16, #0x208
  40460c:	br	x17

0000000000404610 <wcwidth@plt>:
  404610:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404614:	ldr	x17, [x16, #528]
  404618:	add	x16, x16, #0x210
  40461c:	br	x17

0000000000404620 <funlockfile@plt>:
  404620:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404624:	ldr	x17, [x16, #536]
  404628:	add	x16, x16, #0x218
  40462c:	br	x17

0000000000404630 <open@plt>:
  404630:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404634:	ldr	x17, [x16, #544]
  404638:	add	x16, x16, #0x220
  40463c:	br	x17

0000000000404640 <__vasprintf_chk@plt>:
  404640:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404644:	ldr	x17, [x16, #552]
  404648:	add	x16, x16, #0x228
  40464c:	br	x17

0000000000404650 <tzset@plt>:
  404650:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404654:	ldr	x17, [x16, #560]
  404658:	add	x16, x16, #0x230
  40465c:	br	x17

0000000000404660 <__strcpy_chk@plt>:
  404660:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404664:	ldr	x17, [x16, #568]
  404668:	add	x16, x16, #0x238
  40466c:	br	x17

0000000000404670 <__isoc99_fscanf@plt>:
  404670:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404674:	ldr	x17, [x16, #576]
  404678:	add	x16, x16, #0x240
  40467c:	br	x17

0000000000404680 <sigemptyset@plt>:
  404680:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404684:	ldr	x17, [x16, #584]
  404688:	add	x16, x16, #0x248
  40468c:	br	x17

0000000000404690 <futimens@plt>:
  404690:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404694:	ldr	x17, [x16, #592]
  404698:	add	x16, x16, #0x250
  40469c:	br	x17

00000000004046a0 <strncmp@plt>:
  4046a0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4046a4:	ldr	x17, [x16, #600]
  4046a8:	add	x16, x16, #0x258
  4046ac:	br	x17

00000000004046b0 <bindtextdomain@plt>:
  4046b0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4046b4:	ldr	x17, [x16, #608]
  4046b8:	add	x16, x16, #0x260
  4046bc:	br	x17

00000000004046c0 <__libc_start_main@plt>:
  4046c0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4046c4:	ldr	x17, [x16, #616]
  4046c8:	add	x16, x16, #0x268
  4046cc:	br	x17

00000000004046d0 <setxattr@plt>:
  4046d0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4046d4:	ldr	x17, [x16, #624]
  4046d8:	add	x16, x16, #0x270
  4046dc:	br	x17

00000000004046e0 <strcat@plt>:
  4046e0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4046e4:	ldr	x17, [x16, #632]
  4046e8:	add	x16, x16, #0x278
  4046ec:	br	x17

00000000004046f0 <__printf_chk@plt>:
  4046f0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4046f4:	ldr	x17, [x16, #640]
  4046f8:	add	x16, x16, #0x280
  4046fc:	br	x17

0000000000404700 <memset@plt>:
  404700:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404704:	ldr	x17, [x16, #648]
  404708:	add	x16, x16, #0x288
  40470c:	br	x17

0000000000404710 <fdopen@plt>:
  404710:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404714:	ldr	x17, [x16, #656]
  404718:	add	x16, x16, #0x290
  40471c:	br	x17

0000000000404720 <gettimeofday@plt>:
  404720:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404724:	ldr	x17, [x16, #664]
  404728:	add	x16, x16, #0x298
  40472c:	br	x17

0000000000404730 <getpwnam@plt>:
  404730:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404734:	ldr	x17, [x16, #672]
  404738:	add	x16, x16, #0x2a0
  40473c:	br	x17

0000000000404740 <gmtime_r@plt>:
  404740:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404744:	ldr	x17, [x16, #680]
  404748:	add	x16, x16, #0x2a8
  40474c:	br	x17

0000000000404750 <sleep@plt>:
  404750:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404754:	ldr	x17, [x16, #688]
  404758:	add	x16, x16, #0x2b0
  40475c:	br	x17

0000000000404760 <fchmod@plt>:
  404760:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404764:	ldr	x17, [x16, #696]
  404768:	add	x16, x16, #0x2b8
  40476c:	br	x17

0000000000404770 <__xmknodat@plt>:
  404770:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404774:	ldr	x17, [x16, #704]
  404778:	add	x16, x16, #0x2c0
  40477c:	br	x17

0000000000404780 <strerror_r@plt>:
  404780:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404784:	ldr	x17, [x16, #712]
  404788:	add	x16, x16, #0x2c8
  40478c:	br	x17

0000000000404790 <__vfprintf_chk@plt>:
  404790:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404794:	ldr	x17, [x16, #720]
  404798:	add	x16, x16, #0x2d0
  40479c:	br	x17

00000000004047a0 <calloc@plt>:
  4047a0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4047a4:	ldr	x17, [x16, #728]
  4047a8:	add	x16, x16, #0x2d8
  4047ac:	br	x17

00000000004047b0 <lsetxattr@plt>:
  4047b0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4047b4:	ldr	x17, [x16, #736]
  4047b8:	add	x16, x16, #0x2e0
  4047bc:	br	x17

00000000004047c0 <listxattr@plt>:
  4047c0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4047c4:	ldr	x17, [x16, #744]
  4047c8:	add	x16, x16, #0x2e8
  4047cc:	br	x17

00000000004047d0 <bsearch@plt>:
  4047d0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4047d4:	ldr	x17, [x16, #752]
  4047d8:	add	x16, x16, #0x2f0
  4047dc:	br	x17

00000000004047e0 <execv@plt>:
  4047e0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4047e4:	ldr	x17, [x16, #760]
  4047e8:	add	x16, x16, #0x2f8
  4047ec:	br	x17

00000000004047f0 <strcasecmp@plt>:
  4047f0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4047f4:	ldr	x17, [x16, #768]
  4047f8:	add	x16, x16, #0x300
  4047fc:	br	x17

0000000000404800 <gmtime@plt>:
  404800:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404804:	ldr	x17, [x16, #776]
  404808:	add	x16, x16, #0x308
  40480c:	br	x17

0000000000404810 <readdir@plt>:
  404810:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404814:	ldr	x17, [x16, #784]
  404818:	add	x16, x16, #0x310
  40481c:	br	x17

0000000000404820 <realloc@plt>:
  404820:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404824:	ldr	x17, [x16, #792]
  404828:	add	x16, x16, #0x318
  40482c:	br	x17

0000000000404830 <__ctype_toupper_loc@plt>:
  404830:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404834:	ldr	x17, [x16, #800]
  404838:	add	x16, x16, #0x320
  40483c:	br	x17

0000000000404840 <acl_set_file@plt>:
  404840:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404844:	ldr	x17, [x16, #808]
  404848:	add	x16, x16, #0x328
  40484c:	br	x17

0000000000404850 <getpagesize@plt>:
  404850:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404854:	ldr	x17, [x16, #816]
  404858:	add	x16, x16, #0x330
  40485c:	br	x17

0000000000404860 <lgetxattr@plt>:
  404860:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404864:	ldr	x17, [x16, #824]
  404868:	add	x16, x16, #0x338
  40486c:	br	x17

0000000000404870 <strdup@plt>:
  404870:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404874:	ldr	x17, [x16, #832]
  404878:	add	x16, x16, #0x340
  40487c:	br	x17

0000000000404880 <closedir@plt>:
  404880:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404884:	ldr	x17, [x16, #840]
  404888:	add	x16, x16, #0x348
  40488c:	br	x17

0000000000404890 <getc_unlocked@plt>:
  404890:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404894:	ldr	x17, [x16, #848]
  404898:	add	x16, x16, #0x350
  40489c:	br	x17

00000000004048a0 <strerror@plt>:
  4048a0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4048a4:	ldr	x17, [x16, #856]
  4048a8:	add	x16, x16, #0x358
  4048ac:	br	x17

00000000004048b0 <__openat_2@plt>:
  4048b0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4048b4:	ldr	x17, [x16, #864]
  4048b8:	add	x16, x16, #0x360
  4048bc:	br	x17

00000000004048c0 <close@plt>:
  4048c0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4048c4:	ldr	x17, [x16, #872]
  4048c8:	add	x16, x16, #0x368
  4048cc:	br	x17

00000000004048d0 <strrchr@plt>:
  4048d0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4048d4:	ldr	x17, [x16, #880]
  4048d8:	add	x16, x16, #0x370
  4048dc:	br	x17

00000000004048e0 <acl_to_text@plt>:
  4048e0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4048e4:	ldr	x17, [x16, #888]
  4048e8:	add	x16, x16, #0x378
  4048ec:	br	x17

00000000004048f0 <atol@plt>:
  4048f0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4048f4:	ldr	x17, [x16, #896]
  4048f8:	add	x16, x16, #0x380
  4048fc:	br	x17

0000000000404900 <__gmon_start__@plt>:
  404900:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404904:	ldr	x17, [x16, #904]
  404908:	add	x16, x16, #0x388
  40490c:	br	x17

0000000000404910 <mktime@plt>:
  404910:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404914:	ldr	x17, [x16, #912]
  404918:	add	x16, x16, #0x390
  40491c:	br	x17

0000000000404920 <fdopendir@plt>:
  404920:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404924:	ldr	x17, [x16, #920]
  404928:	add	x16, x16, #0x398
  40492c:	br	x17

0000000000404930 <write@plt>:
  404930:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404934:	ldr	x17, [x16, #928]
  404938:	add	x16, x16, #0x3a0
  40493c:	br	x17

0000000000404940 <strtoumax@plt>:
  404940:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404944:	ldr	x17, [x16, #936]
  404948:	add	x16, x16, #0x3a8
  40494c:	br	x17

0000000000404950 <btowc@plt>:
  404950:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404954:	ldr	x17, [x16, #944]
  404958:	add	x16, x16, #0x3b0
  40495c:	br	x17

0000000000404960 <mkdtemp@plt>:
  404960:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404964:	ldr	x17, [x16, #952]
  404968:	add	x16, x16, #0x3b8
  40496c:	br	x17

0000000000404970 <abort@plt>:
  404970:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404974:	ldr	x17, [x16, #960]
  404978:	add	x16, x16, #0x3c0
  40497c:	br	x17

0000000000404980 <setgid@plt>:
  404980:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404984:	ldr	x17, [x16, #968]
  404988:	add	x16, x16, #0x3c8
  40498c:	br	x17

0000000000404990 <mbsinit@plt>:
  404990:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404994:	ldr	x17, [x16, #976]
  404998:	add	x16, x16, #0x3d0
  40499c:	br	x17

00000000004049a0 <access@plt>:
  4049a0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4049a4:	ldr	x17, [x16, #984]
  4049a8:	add	x16, x16, #0x3d8
  4049ac:	br	x17

00000000004049b0 <gnu_dev_major@plt>:
  4049b0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4049b4:	ldr	x17, [x16, #992]
  4049b8:	add	x16, x16, #0x3e0
  4049bc:	br	x17

00000000004049c0 <fpathconf@plt>:
  4049c0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4049c4:	ldr	x17, [x16, #1000]
  4049c8:	add	x16, x16, #0x3e8
  4049cc:	br	x17

00000000004049d0 <puts@plt>:
  4049d0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4049d4:	ldr	x17, [x16, #1008]
  4049d8:	add	x16, x16, #0x3f0
  4049dc:	br	x17

00000000004049e0 <getxattr@plt>:
  4049e0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4049e4:	ldr	x17, [x16, #1016]
  4049e8:	add	x16, x16, #0x3f8
  4049ec:	br	x17

00000000004049f0 <memcmp@plt>:
  4049f0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  4049f4:	ldr	x17, [x16, #1024]
  4049f8:	add	x16, x16, #0x400
  4049fc:	br	x17

0000000000404a00 <textdomain@plt>:
  404a00:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a04:	ldr	x17, [x16, #1032]
  404a08:	add	x16, x16, #0x408
  404a0c:	br	x17

0000000000404a10 <execvp@plt>:
  404a10:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a14:	ldr	x17, [x16, #1040]
  404a18:	add	x16, x16, #0x410
  404a1c:	br	x17

0000000000404a20 <__fprintf_chk@plt>:
  404a20:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a24:	ldr	x17, [x16, #1048]
  404a28:	add	x16, x16, #0x418
  404a2c:	br	x17

0000000000404a30 <strcmp@plt>:
  404a30:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a34:	ldr	x17, [x16, #1056]
  404a38:	add	x16, x16, #0x420
  404a3c:	br	x17

0000000000404a40 <getpwuid@plt>:
  404a40:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a44:	ldr	x17, [x16, #1064]
  404a48:	add	x16, x16, #0x428
  404a4c:	br	x17

0000000000404a50 <iconv@plt>:
  404a50:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a54:	ldr	x17, [x16, #1072]
  404a58:	add	x16, x16, #0x430
  404a5c:	br	x17

0000000000404a60 <__ctype_b_loc@plt>:
  404a60:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a64:	ldr	x17, [x16, #1080]
  404a68:	add	x16, x16, #0x438
  404a6c:	br	x17

0000000000404a70 <rewinddir@plt>:
  404a70:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a74:	ldr	x17, [x16, #1088]
  404a78:	add	x16, x16, #0x440
  404a7c:	br	x17

0000000000404a80 <acl_get_file@plt>:
  404a80:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a84:	ldr	x17, [x16, #1096]
  404a88:	add	x16, x16, #0x448
  404a8c:	br	x17

0000000000404a90 <strtol@plt>:
  404a90:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404a94:	ldr	x17, [x16, #1104]
  404a98:	add	x16, x16, #0x450
  404a9c:	br	x17

0000000000404aa0 <fseeko@plt>:
  404aa0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404aa4:	ldr	x17, [x16, #1112]
  404aa8:	add	x16, x16, #0x458
  404aac:	br	x17

0000000000404ab0 <getline@plt>:
  404ab0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ab4:	ldr	x17, [x16, #1120]
  404ab8:	add	x16, x16, #0x460
  404abc:	br	x17

0000000000404ac0 <sigwait@plt>:
  404ac0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ac4:	ldr	x17, [x16, #1128]
  404ac8:	add	x16, x16, #0x468
  404acc:	br	x17

0000000000404ad0 <chdir@plt>:
  404ad0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ad4:	ldr	x17, [x16, #1136]
  404ad8:	add	x16, x16, #0x470
  404adc:	br	x17

0000000000404ae0 <free@plt>:
  404ae0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ae4:	ldr	x17, [x16, #1144]
  404ae8:	add	x16, x16, #0x478
  404aec:	br	x17

0000000000404af0 <__strcat_chk@plt>:
  404af0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404af4:	ldr	x17, [x16, #1152]
  404af8:	add	x16, x16, #0x480
  404afc:	br	x17

0000000000404b00 <renameat2@plt>:
  404b00:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b04:	ldr	x17, [x16, #1160]
  404b08:	add	x16, x16, #0x488
  404b0c:	br	x17

0000000000404b10 <__ctype_get_mb_cur_max@plt>:
  404b10:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b14:	ldr	x17, [x16, #1168]
  404b18:	add	x16, x16, #0x490
  404b1c:	br	x17

0000000000404b20 <getgid@plt>:
  404b20:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b24:	ldr	x17, [x16, #1176]
  404b28:	add	x16, x16, #0x498
  404b2c:	br	x17

0000000000404b30 <renameat@plt>:
  404b30:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b34:	ldr	x17, [x16, #1184]
  404b38:	add	x16, x16, #0x4a0
  404b3c:	br	x17

0000000000404b40 <mempcpy@plt>:
  404b40:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #1192]
  404b48:	add	x16, x16, #0x4a8
  404b4c:	br	x17

0000000000404b50 <fgetxattr@plt>:
  404b50:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b54:	ldr	x17, [x16, #1200]
  404b58:	add	x16, x16, #0x4b0
  404b5c:	br	x17

0000000000404b60 <fchownat@plt>:
  404b60:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b64:	ldr	x17, [x16, #1208]
  404b68:	add	x16, x16, #0x4b8
  404b6c:	br	x17

0000000000404b70 <strndup@plt>:
  404b70:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #1216]
  404b78:	add	x16, x16, #0x4c0
  404b7c:	br	x17

0000000000404b80 <strspn@plt>:
  404b80:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #1224]
  404b88:	add	x16, x16, #0x4c8
  404b8c:	br	x17

0000000000404b90 <strchr@plt>:
  404b90:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #1232]
  404b98:	add	x16, x16, #0x4d0
  404b9c:	br	x17

0000000000404ba0 <globfree@plt>:
  404ba0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #1240]
  404ba8:	add	x16, x16, #0x4d8
  404bac:	br	x17

0000000000404bb0 <memrchr@plt>:
  404bb0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #1248]
  404bb8:	add	x16, x16, #0x4e0
  404bbc:	br	x17

0000000000404bc0 <utimensat@plt>:
  404bc0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #1256]
  404bc8:	add	x16, x16, #0x4e8
  404bcc:	br	x17

0000000000404bd0 <fwrite@plt>:
  404bd0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #1264]
  404bd8:	add	x16, x16, #0x4f0
  404bdc:	br	x17

0000000000404be0 <fnmatch@plt>:
  404be0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #1272]
  404be8:	add	x16, x16, #0x4f8
  404bec:	br	x17

0000000000404bf0 <fflush_unlocked@plt>:
  404bf0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #1280]
  404bf8:	add	x16, x16, #0x500
  404bfc:	br	x17

0000000000404c00 <fcntl@plt>:
  404c00:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #1288]
  404c08:	add	x16, x16, #0x508
  404c0c:	br	x17

0000000000404c10 <dcngettext@plt>:
  404c10:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #1296]
  404c18:	add	x16, x16, #0x510
  404c1c:	br	x17

0000000000404c20 <ftello@plt>:
  404c20:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #1304]
  404c28:	add	x16, x16, #0x518
  404c2c:	br	x17

0000000000404c30 <gnu_dev_minor@plt>:
  404c30:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #1312]
  404c38:	add	x16, x16, #0x520
  404c3c:	br	x17

0000000000404c40 <strcpy@plt>:
  404c40:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #1320]
  404c48:	add	x16, x16, #0x528
  404c4c:	br	x17

0000000000404c50 <dirfd@plt>:
  404c50:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #1328]
  404c58:	add	x16, x16, #0x530
  404c5c:	br	x17

0000000000404c60 <unsetenv@plt>:
  404c60:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #1336]
  404c68:	add	x16, x16, #0x538
  404c6c:	br	x17

0000000000404c70 <iconv_open@plt>:
  404c70:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #1344]
  404c78:	add	x16, x16, #0x540
  404c7c:	br	x17

0000000000404c80 <read@plt>:
  404c80:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #1352]
  404c88:	add	x16, x16, #0x548
  404c8c:	br	x17

0000000000404c90 <memchr@plt>:
  404c90:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #1360]
  404c98:	add	x16, x16, #0x550
  404c9c:	br	x17

0000000000404ca0 <isatty@plt>:
  404ca0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #1368]
  404ca8:	add	x16, x16, #0x558
  404cac:	br	x17

0000000000404cb0 <fputc_unlocked@plt>:
  404cb0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #1376]
  404cb8:	add	x16, x16, #0x560
  404cbc:	br	x17

0000000000404cc0 <flistxattr@plt>:
  404cc0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #1384]
  404cc8:	add	x16, x16, #0x568
  404ccc:	br	x17

0000000000404cd0 <iswalnum@plt>:
  404cd0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #1392]
  404cd8:	add	x16, x16, #0x570
  404cdc:	br	x17

0000000000404ce0 <__fxstat@plt>:
  404ce0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #1400]
  404ce8:	add	x16, x16, #0x578
  404cec:	br	x17

0000000000404cf0 <strchrnul@plt>:
  404cf0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #1408]
  404cf8:	add	x16, x16, #0x580
  404cfc:	br	x17

0000000000404d00 <dcgettext@plt>:
  404d00:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #1416]
  404d08:	add	x16, x16, #0x588
  404d0c:	br	x17

0000000000404d10 <mkfifoat@plt>:
  404d10:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #1424]
  404d18:	add	x16, x16, #0x590
  404d1c:	br	x17

0000000000404d20 <fputs_unlocked@plt>:
  404d20:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #1432]
  404d28:	add	x16, x16, #0x598
  404d2c:	br	x17

0000000000404d30 <acl_from_text@plt>:
  404d30:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #1440]
  404d38:	add	x16, x16, #0x5a0
  404d3c:	br	x17

0000000000404d40 <glob@plt>:
  404d40:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #1448]
  404d48:	add	x16, x16, #0x5a8
  404d4c:	br	x17

0000000000404d50 <ftruncate@plt>:
  404d50:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #1456]
  404d58:	add	x16, x16, #0x5b0
  404d5c:	br	x17

0000000000404d60 <llistxattr@plt>:
  404d60:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #1464]
  404d68:	add	x16, x16, #0x5b8
  404d6c:	br	x17

0000000000404d70 <dup2@plt>:
  404d70:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #1472]
  404d78:	add	x16, x16, #0x5c0
  404d7c:	br	x17

0000000000404d80 <symlinkat@plt>:
  404d80:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #1480]
  404d88:	add	x16, x16, #0x5c8
  404d8c:	br	x17

0000000000404d90 <sigaddset@plt>:
  404d90:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #1488]
  404d98:	add	x16, x16, #0x5d0
  404d9c:	br	x17

0000000000404da0 <towupper@plt>:
  404da0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #1496]
  404da8:	add	x16, x16, #0x5d8
  404dac:	br	x17

0000000000404db0 <iswprint@plt>:
  404db0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #1504]
  404db8:	add	x16, x16, #0x5e0
  404dbc:	br	x17

0000000000404dc0 <umask@plt>:
  404dc0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #1512]
  404dc8:	add	x16, x16, #0x5e8
  404dcc:	br	x17

0000000000404dd0 <strcspn@plt>:
  404dd0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #1520]
  404dd8:	add	x16, x16, #0x5f0
  404ddc:	br	x17

0000000000404de0 <faccessat@plt>:
  404de0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #1528]
  404de8:	add	x16, x16, #0x5f8
  404dec:	br	x17

0000000000404df0 <openat@plt>:
  404df0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #1536]
  404df8:	add	x16, x16, #0x600
  404dfc:	br	x17

0000000000404e00 <__assert_fail@plt>:
  404e00:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #1544]
  404e08:	add	x16, x16, #0x608
  404e0c:	br	x17

0000000000404e10 <__errno_location@plt>:
  404e10:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #1552]
  404e18:	add	x16, x16, #0x610
  404e1c:	br	x17

0000000000404e20 <tolower@plt>:
  404e20:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #1560]
  404e28:	add	x16, x16, #0x618
  404e2c:	br	x17

0000000000404e30 <execlp@plt>:
  404e30:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #1568]
  404e38:	add	x16, x16, #0x620
  404e3c:	br	x17

0000000000404e40 <getenv@plt>:
  404e40:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #1576]
  404e48:	add	x16, x16, #0x628
  404e4c:	br	x17

0000000000404e50 <putchar@plt>:
  404e50:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #1584]
  404e58:	add	x16, x16, #0x630
  404e5c:	br	x17

0000000000404e60 <__xstat@plt>:
  404e60:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #1592]
  404e68:	add	x16, x16, #0x638
  404e6c:	br	x17

0000000000404e70 <getgrgid@plt>:
  404e70:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #1600]
  404e78:	add	x16, x16, #0x640
  404e7c:	br	x17

0000000000404e80 <fchmodat@plt>:
  404e80:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #1608]
  404e88:	add	x16, x16, #0x648
  404e8c:	br	x17

0000000000404e90 <timegm@plt>:
  404e90:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #1616]
  404e98:	add	x16, x16, #0x650
  404e9c:	br	x17

0000000000404ea0 <waitpid@plt>:
  404ea0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #1624]
  404ea8:	add	x16, x16, #0x658
  404eac:	br	x17

0000000000404eb0 <fchown@plt>:
  404eb0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #1632]
  404eb8:	add	x16, x16, #0x660
  404ebc:	br	x17

0000000000404ec0 <towlower@plt>:
  404ec0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #1640]
  404ec8:	add	x16, x16, #0x668
  404ecc:	br	x17

0000000000404ed0 <__open_2@plt>:
  404ed0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #1648]
  404ed8:	add	x16, x16, #0x670
  404edc:	br	x17

0000000000404ee0 <creat@plt>:
  404ee0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #1656]
  404ee8:	add	x16, x16, #0x678
  404eec:	br	x17

0000000000404ef0 <gethostbyname@plt>:
  404ef0:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #1664]
  404ef8:	add	x16, x16, #0x680
  404efc:	br	x17

0000000000404f00 <ioctl@plt>:
  404f00:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #1672]
  404f08:	add	x16, x16, #0x688
  404f0c:	br	x17

0000000000404f10 <setlocale@plt>:
  404f10:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #1680]
  404f18:	add	x16, x16, #0x690
  404f1c:	br	x17

0000000000404f20 <acl_free@plt>:
  404f20:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #1688]
  404f28:	add	x16, x16, #0x698
  404f2c:	br	x17

0000000000404f30 <__fxstatat@plt>:
  404f30:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #1696]
  404f38:	add	x16, x16, #0x6a0
  404f3c:	br	x17

0000000000404f40 <readlinkat@plt>:
  404f40:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #1704]
  404f48:	add	x16, x16, #0x6a8
  404f4c:	br	x17

0000000000404f50 <wcrtomb@plt>:
  404f50:	adrp	x16, 46e000 <mbrtowc@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #1712]
  404f58:	add	x16, x16, #0x6b0
  404f5c:	br	x17

Disassembly of section .text:

0000000000404f60 <argp_failure@@Base-0x26874>:
  404f60:	stp	x29, x30, [sp, #-64]!
  404f64:	mov	x29, sp
  404f68:	stp	x21, x22, [sp, #32]
  404f6c:	mov	x21, x1
  404f70:	mov	w22, w0
  404f74:	stp	x19, x20, [sp, #16]
  404f78:	adrp	x19, 44a000 <_obstack_memory_used@@Base+0x12380>
  404f7c:	add	x19, x19, #0x5fa
  404f80:	stp	x23, x24, [sp, #48]
  404f84:	bl	4058f0 <wcrtomb@plt+0x9a0>
  404f88:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  404f8c:	ldr	x0, [x21]
  404f90:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  404f94:	add	x23, x23, #0xbf8
  404f98:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  404f9c:	bl	434c68 <argp_usage@@Base+0x7788>
  404fa0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  404fa4:	mov	w0, #0x6                   	// #6
  404fa8:	add	x1, x1, #0x41a
  404fac:	bl	404f10 <setlocale@plt>
  404fb0:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  404fb4:	add	x1, x1, #0xad3
  404fb8:	mov	x0, x19
  404fbc:	bl	4046b0 <bindtextdomain@plt>
  404fc0:	mov	x0, x19
  404fc4:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  404fc8:	bl	404a00 <textdomain@plt>
  404fcc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  404fd0:	mov	w1, #0x2                   	// #2
  404fd4:	str	wzr, [x19, #3464]
  404fd8:	str	w1, [x0, #1032]
  404fdc:	adrp	x0, 408000 <wcrtomb@plt+0x30b0>
  404fe0:	add	x0, x0, #0xcd0
  404fe4:	mov	w1, #0x7                   	// #7
  404fe8:	str	x0, [x20, #1016]
  404fec:	mov	x0, #0x0                   	// #0
  404ff0:	bl	435c24 <argp_usage@@Base+0x8744>
  404ff4:	bl	426268 <wcrtomb@plt+0x21318>
  404ff8:	mov	x0, #0xa                   	// #10
  404ffc:	str	x0, [x23, #104]
  405000:	mov	x0, #0x50                  	// #80
  405004:	bl	436d44 <argp_usage@@Base+0x9864>
  405008:	str	x0, [x24, #696]
  40500c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405010:	mov	x1, #0x0                   	// #0
  405014:	str	xzr, [x0, #856]
  405018:	mov	w0, #0x11                  	// #17
  40501c:	bl	404540 <signal@plt>
  405020:	mov	x1, x21
  405024:	mov	w0, w22
  405028:	bl	420c08 <wcrtomb@plt+0x1bcb8>
  40502c:	bl	41a5d8 <wcrtomb@plt+0x15688>
  405030:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405034:	mov	x21, x0
  405038:	ldr	x1, [x0, #672]
  40503c:	cbz	x1, 405044 <wcrtomb@plt+0xf4>
  405040:	bl	4063a8 <wcrtomb@plt+0x1458>
  405044:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405048:	ldr	w1, [x0, #868]
  40504c:	cmp	w1, #0x9
  405050:	b.hi	4050a8 <wcrtomb@plt+0x158>  // b.pmore
  405054:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x14380>
  405058:	add	x0, x0, #0xc3c
  40505c:	ldrb	w0, [x0, w1, uxtw]
  405060:	adr	x1, 40506c <wcrtomb@plt+0x11c>
  405064:	add	x0, x1, w0, sxtb #2
  405068:	br	x0
  40506c:	ldr	x0, [x20, #1016]
  405070:	cbz	x0, 405078 <wcrtomb@plt+0x128>
  405074:	blr	x0
  405078:	mov	w2, #0x5                   	// #5
  40507c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  405080:	mov	x0, #0x0                   	// #0
  405084:	add	x1, x1, #0xae5
  405088:	bl	404d00 <dcgettext@plt>
  40508c:	mov	x2, x0
  405090:	mov	w1, #0x0                   	// #0
  405094:	mov	w0, #0x0                   	// #0
  405098:	bl	4042e0 <error@plt>
  40509c:	mov	w0, #0x2                   	// #2
  4050a0:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  4050a4:	bl	422d20 <wcrtomb@plt+0x1ddd0>
  4050a8:	bl	408f00 <wcrtomb@plt+0x3fb0>
  4050ac:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4050b0:	ldrb	w0, [x0, #705]
  4050b4:	cbz	w0, 4050bc <wcrtomb@plt+0x16c>
  4050b8:	bl	405c10 <wcrtomb@plt+0xcc0>
  4050bc:	ldr	w0, [x23, #112]
  4050c0:	cbz	w0, 4050c8 <wcrtomb@plt+0x178>
  4050c4:	bl	40b814 <wcrtomb@plt+0x68c4>
  4050c8:	ldr	x0, [x21, #672]
  4050cc:	cbz	x0, 4050d4 <wcrtomb@plt+0x184>
  4050d0:	bl	4064b0 <wcrtomb@plt+0x1560>
  4050d4:	ldr	x0, [x24, #696]
  4050d8:	bl	404ae0 <free@plt>
  4050dc:	bl	424288 <wcrtomb@plt+0x1f338>
  4050e0:	bl	41a62c <wcrtomb@plt+0x156dc>
  4050e4:	ldr	w0, [x19, #3464]
  4050e8:	cmp	w0, #0x2
  4050ec:	b.ne	405114 <wcrtomb@plt+0x1c4>  // b.any
  4050f0:	mov	w2, #0x5                   	// #5
  4050f4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4050f8:	mov	x0, #0x0                   	// #0
  4050fc:	add	x1, x1, #0xb32
  405100:	bl	404d00 <dcgettext@plt>
  405104:	mov	x2, x0
  405108:	mov	w1, #0x0                   	// #0
  40510c:	mov	w0, #0x0                   	// #0
  405110:	bl	4042e0 <error@plt>
  405114:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405118:	ldr	x1, [x0, #3936]
  40511c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405120:	ldr	x0, [x0, #1168]
  405124:	cmp	x1, x0
  405128:	b.ne	405198 <wcrtomb@plt+0x248>  // b.any
  40512c:	bl	42dbe0 <argp_usage@@Base+0x700>
  405130:	ldr	w0, [x19, #3464]
  405134:	ldp	x19, x20, [sp, #16]
  405138:	ldp	x21, x22, [sp, #32]
  40513c:	ldp	x23, x24, [sp, #48]
  405140:	ldp	x29, x30, [sp], #64
  405144:	ret
  405148:	bl	40ceb4 <wcrtomb@plt+0x7f64>
  40514c:	b	4050a8 <wcrtomb@plt+0x158>
  405150:	bl	40c8e8 <wcrtomb@plt+0x7998>
  405154:	b	4050a8 <wcrtomb@plt+0x158>
  405158:	bl	40fa30 <wcrtomb@plt+0xaae0>
  40515c:	adrp	x0, 40f000 <wcrtomb@plt+0xa0b0>
  405160:	add	x0, x0, #0xb40
  405164:	bl	4170e0 <wcrtomb@plt+0x12190>
  405168:	bl	40e924 <wcrtomb@plt+0x99d4>
  40516c:	b	4050a8 <wcrtomb@plt+0x158>
  405170:	adrp	x0, 417000 <wcrtomb@plt+0x120b0>
  405174:	add	x0, x0, #0x4cc
  405178:	bl	4170e0 <wcrtomb@plt+0x12190>
  40517c:	b	4050a8 <wcrtomb@plt+0x158>
  405180:	bl	409024 <wcrtomb@plt+0x40d4>
  405184:	adrp	x0, 409000 <wcrtomb@plt+0x40b0>
  405188:	add	x0, x0, #0x400
  40518c:	b	405178 <wcrtomb@plt+0x228>
  405190:	bl	417558 <wcrtomb@plt+0x12608>
  405194:	b	4050a8 <wcrtomb@plt+0x158>
  405198:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  40519c:	ldr	x0, [x20, #1160]
  4051a0:	bl	4043c0 <ferror_unlocked@plt>
  4051a4:	cbz	w0, 4051b4 <wcrtomb@plt+0x264>
  4051a8:	mov	w0, #0x2                   	// #2
  4051ac:	bl	421c04 <wcrtomb@plt+0x1ccb4>
  4051b0:	b	405130 <wcrtomb@plt+0x1e0>
  4051b4:	ldr	x0, [x20, #1160]
  4051b8:	bl	404570 <fclose@plt>
  4051bc:	cbnz	w0, 4051a8 <wcrtomb@plt+0x258>
  4051c0:	b	405130 <wcrtomb@plt+0x1e0>
  4051c4:	mov	x29, #0x0                   	// #0
  4051c8:	mov	x30, #0x0                   	// #0
  4051cc:	mov	x5, x0
  4051d0:	ldr	x1, [sp]
  4051d4:	add	x2, sp, #0x8
  4051d8:	mov	x6, sp
  4051dc:	movz	x0, #0x0, lsl #48
  4051e0:	movk	x0, #0x0, lsl #32
  4051e4:	movk	x0, #0x40, lsl #16
  4051e8:	movk	x0, #0x4f60
  4051ec:	movz	x3, #0x0, lsl #48
  4051f0:	movk	x3, #0x0, lsl #32
  4051f4:	movk	x3, #0x44, lsl #16
  4051f8:	movk	x3, #0x69f8
  4051fc:	movz	x4, #0x0, lsl #48
  405200:	movk	x4, #0x0, lsl #32
  405204:	movk	x4, #0x44, lsl #16
  405208:	movk	x4, #0x6a78
  40520c:	bl	4046c0 <__libc_start_main@plt>
  405210:	bl	404970 <abort@plt>
  405214:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x35380>
  405218:	ldr	x0, [x0, #4064]
  40521c:	cbz	x0, 405224 <wcrtomb@plt+0x2d4>
  405220:	b	404900 <__gmon_start__@plt>
  405224:	ret
  405228:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40522c:	add	x1, x0, #0x480
  405230:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405234:	add	x0, x0, #0x480
  405238:	cmp	x1, x0
  40523c:	b.eq	405268 <wcrtomb@plt+0x318>  // b.none
  405240:	sub	sp, sp, #0x10
  405244:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  405248:	ldr	x1, [x1, #2840]
  40524c:	str	x1, [sp, #8]
  405250:	cbz	x1, 405260 <wcrtomb@plt+0x310>
  405254:	mov	x16, x1
  405258:	add	sp, sp, #0x10
  40525c:	br	x16
  405260:	add	sp, sp, #0x10
  405264:	ret
  405268:	ret
  40526c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405270:	add	x1, x0, #0x480
  405274:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405278:	add	x0, x0, #0x480
  40527c:	sub	x1, x1, x0
  405280:	mov	x2, #0x2                   	// #2
  405284:	asr	x1, x1, #3
  405288:	sdiv	x1, x1, x2
  40528c:	cbz	x1, 4052b8 <wcrtomb@plt+0x368>
  405290:	sub	sp, sp, #0x10
  405294:	adrp	x2, 446000 <_obstack_memory_used@@Base+0xe380>
  405298:	ldr	x2, [x2, #2848]
  40529c:	str	x2, [sp, #8]
  4052a0:	cbz	x2, 4052b0 <wcrtomb@plt+0x360>
  4052a4:	mov	x16, x2
  4052a8:	add	sp, sp, #0x10
  4052ac:	br	x16
  4052b0:	add	sp, sp, #0x10
  4052b4:	ret
  4052b8:	ret
  4052bc:	stp	x29, x30, [sp, #-32]!
  4052c0:	mov	x29, sp
  4052c4:	str	x19, [sp, #16]
  4052c8:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4052cc:	ldrb	w0, [x19, #1200]
  4052d0:	cbnz	w0, 4052e0 <wcrtomb@plt+0x390>
  4052d4:	bl	405228 <wcrtomb@plt+0x2d8>
  4052d8:	mov	w0, #0x1                   	// #1
  4052dc:	strb	w0, [x19, #1200]
  4052e0:	ldr	x19, [sp, #16]
  4052e4:	ldp	x29, x30, [sp], #32
  4052e8:	ret
  4052ec:	b	40526c <wcrtomb@plt+0x31c>
  4052f0:	mov	x1, x0
  4052f4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4052f8:	ldr	x0, [x0, #1208]
  4052fc:	cbnz	x0, 405304 <wcrtomb@plt+0x3b4>
  405300:	ret
  405304:	ldr	x2, [x0]
  405308:	cbz	x2, 405300 <wcrtomb@plt+0x3b0>
  40530c:	ldr	x3, [x2, #8]
  405310:	cmp	x1, x3, lsl #9
  405314:	b.cc	405300 <wcrtomb@plt+0x3b0>  // b.lo, b.ul, b.last
  405318:	mov	x0, x2
  40531c:	b	4052fc <wcrtomb@plt+0x3ac>
  405320:	ldrsw	x3, [x1]
  405324:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x36380>
  405328:	add	x2, x2, #0x6c8
  40532c:	mov	x6, #0x18                  	// #24
  405330:	mul	x5, x3, x6
  405334:	mov	w4, w3
  405338:	ldr	w5, [x5, x2]
  40533c:	cbnz	w5, 40534c <wcrtomb@plt+0x3fc>
  405340:	mov	x0, #0x0                   	// #0
  405344:	str	w3, [x1]
  405348:	b	405368 <wcrtomb@plt+0x418>
  40534c:	add	w7, w3, #0x1
  405350:	cmp	w5, w0
  405354:	add	x3, x3, #0x1
  405358:	b.ne	405330 <wcrtomb@plt+0x3e0>  // b.any
  40535c:	smull	x0, w4, w6
  405360:	str	w7, [x1]
  405364:	add	x0, x2, x0
  405368:	ret
  40536c:	stp	x29, x30, [sp, #-48]!
  405370:	mov	x29, sp
  405374:	stp	x19, x20, [sp, #16]
  405378:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  40537c:	ldr	x19, [x20, #1208]
  405380:	stp	x21, x22, [sp, #32]
  405384:	mov	x21, x0
  405388:	cmp	x19, #0x0
  40538c:	ccmp	x19, x21, #0x4, ne  // ne = any
  405390:	b.ne	4053b4 <wcrtomb@plt+0x464>  // b.any
  405394:	str	x19, [x20, #1208]
  405398:	add	x0, x20, #0x4b8
  40539c:	cbnz	x19, 4053a4 <wcrtomb@plt+0x454>
  4053a0:	str	xzr, [x0, #8]
  4053a4:	ldp	x19, x20, [sp, #16]
  4053a8:	ldp	x21, x22, [sp, #32]
  4053ac:	ldp	x29, x30, [sp], #48
  4053b0:	ret
  4053b4:	ldr	x0, [x19, #16]
  4053b8:	ldr	x22, [x19]
  4053bc:	bl	404ae0 <free@plt>
  4053c0:	mov	x0, x19
  4053c4:	mov	x19, x22
  4053c8:	bl	404ae0 <free@plt>
  4053cc:	b	405388 <wcrtomb@plt+0x438>
  4053d0:	sub	sp, sp, #0x550
  4053d4:	stp	x29, x30, [sp]
  4053d8:	mov	x29, sp
  4053dc:	stp	x19, x20, [sp, #16]
  4053e0:	mov	x20, x0
  4053e4:	str	x21, [sp, #32]
  4053e8:	str	d8, [sp, #40]
  4053ec:	fmov	d8, d0
  4053f0:	cbz	x1, 4054b8 <wcrtomb@plt+0x568>
  4053f4:	ldrb	w0, [x1]
  4053f8:	cbz	w0, 4054b8 <wcrtomb@plt+0x568>
  4053fc:	mov	w2, #0x5                   	// #5
  405400:	mov	x0, #0x0                   	// #0
  405404:	bl	404d00 <dcgettext@plt>
  405408:	mov	x3, x0
  40540c:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  405410:	mov	x0, x20
  405414:	add	x2, x2, #0xcb5
  405418:	mov	w1, #0x1                   	// #1
  40541c:	bl	404a20 <__fprintf_chk@plt>
  405420:	mov	w19, w0
  405424:	fcvtzu	x0, d8
  405428:	mov	x4, #0x1                   	// #1
  40542c:	add	x1, sp, #0x30
  405430:	mov	x3, x4
  405434:	mov	w2, #0x1b0                 	// #432
  405438:	bl	430b70 <argp_usage@@Base+0x3690>
  40543c:	mov	x21, x0
  405440:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405444:	ldr	d0, [x0, #1224]
  405448:	fcmpe	d0, #0.0
  40544c:	b.le	4054c0 <wcrtomb@plt+0x570>
  405450:	fdiv	d0, d8, d0
  405454:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  405458:	fmov	d1, x0
  40545c:	fcmpe	d0, d1
  405460:	b.pl	4054c0 <wcrtomb@plt+0x570>  // b.nfrst
  405464:	fcvtzu	x0, d0
  405468:	mov	x4, #0x1                   	// #1
  40546c:	add	x1, sp, #0x2c0
  405470:	mov	x3, x4
  405474:	mov	w2, #0x1b0                 	// #432
  405478:	bl	430b70 <argp_usage@@Base+0x3690>
  40547c:	mov	x4, x0
  405480:	fmov	d0, d8
  405484:	mov	x3, x21
  405488:	mov	x0, x20
  40548c:	mov	w1, #0x1                   	// #1
  405490:	adrp	x2, 446000 <_obstack_memory_used@@Base+0xe380>
  405494:	add	x2, x2, #0xb28
  405498:	bl	404a20 <__fprintf_chk@plt>
  40549c:	add	w0, w19, w0
  4054a0:	ldp	x29, x30, [sp]
  4054a4:	ldp	x19, x20, [sp, #16]
  4054a8:	ldr	x21, [sp, #32]
  4054ac:	ldr	d8, [sp, #40]
  4054b0:	add	sp, sp, #0x550
  4054b4:	ret
  4054b8:	mov	w19, #0x0                   	// #0
  4054bc:	b	405424 <wcrtomb@plt+0x4d4>
  4054c0:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x16380>
  4054c4:	add	x4, x4, #0x9
  4054c8:	b	405480 <wcrtomb@plt+0x530>
  4054cc:	stp	x29, x30, [sp, #-32]!
  4054d0:	mov	x29, sp
  4054d4:	stp	x19, x20, [sp, #16]
  4054d8:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4054dc:	add	x19, x19, #0x4b8
  4054e0:	ldrsw	x20, [x19, #24]
  4054e4:	lsl	x2, x20, #3
  4054e8:	add	x20, x19, x20, lsl #3
  4054ec:	ldr	x0, [x20, #32]
  4054f0:	cbnz	x0, 40550c <wcrtomb@plt+0x5bc>
  4054f4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4054f8:	add	x0, x19, #0x30
  4054fc:	add	x0, x0, x2
  405500:	ldr	x1, [x1, #928]
  405504:	bl	418dd0 <wcrtomb@plt+0x13e80>
  405508:	str	x0, [x20, #32]
  40550c:	ldrsw	x0, [x19, #24]
  405510:	add	x19, x19, x0, lsl #3
  405514:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405518:	ldr	x1, [x19, #32]
  40551c:	str	x1, [x0, #3992]
  405520:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405524:	ldp	x19, x20, [sp, #16]
  405528:	str	x1, [x0, #4016]
  40552c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405530:	ldp	x29, x30, [sp], #32
  405534:	ldrsw	x0, [x0, #756]
  405538:	add	x0, x1, x0, lsl #9
  40553c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  405540:	str	x0, [x1, #3952]
  405544:	ret
  405548:	stp	x29, x30, [sp, #-32]!
  40554c:	mov	x29, sp
  405550:	stp	x19, x20, [sp, #16]
  405554:	mov	x19, x0
  405558:	mov	x20, x1
  40555c:	bl	40536c <wcrtomb@plt+0x41c>
  405560:	cbz	x19, 40557c <wcrtomb@plt+0x62c>
  405564:	ldr	x0, [x19, #8]
  405568:	str	xzr, [x19, #40]
  40556c:	add	x0, x0, x20
  405570:	str	x0, [x19, #8]
  405574:	ldr	x19, [x19]
  405578:	b	405560 <wcrtomb@plt+0x610>
  40557c:	ldp	x19, x20, [sp, #16]
  405580:	ldp	x29, x30, [sp], #32
  405584:	ret
  405588:	stp	x29, x30, [sp, #-32]!
  40558c:	mov	w0, #0x1                   	// #1
  405590:	mov	x29, sp
  405594:	str	x19, [sp, #16]
  405598:	bl	408d58 <wcrtomb@plt+0x3e08>
  40559c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4055a0:	ldr	d0, [x0, #640]
  4055a4:	fcmp	d0, #0.0
  4055a8:	b.eq	4055dc <wcrtomb@plt+0x68c>  // b.none
  4055ac:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4055b0:	ldr	d1, [x0, #1272]
  4055b4:	fcmpe	d0, d1
  4055b8:	b.hi	4055dc <wcrtomb@plt+0x68c>  // b.pmore
  4055bc:	bl	404e10 <__errno_location@plt>
  4055c0:	mov	x19, #0x0                   	// #0
  4055c4:	mov	w1, #0x1c                  	// #28
  4055c8:	str	w1, [x0]
  4055cc:	mov	x0, x19
  4055d0:	ldr	x19, [sp, #16]
  4055d4:	ldp	x29, x30, [sp], #32
  4055d8:	ret
  4055dc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4055e0:	ldrb	w0, [x0, #544]
  4055e4:	cbz	w0, 405650 <wcrtomb@plt+0x700>
  4055e8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4055ec:	ldr	x19, [x0, #928]
  4055f0:	cbz	x19, 4055cc <wcrtomb@plt+0x67c>
  4055f4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4055f8:	ldrb	w0, [x0, #84]
  4055fc:	cbz	w0, 4055cc <wcrtomb@plt+0x67c>
  405600:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405604:	ldr	w0, [x0, #1280]
  405608:	cbnz	w0, 4055cc <wcrtomb@plt+0x67c>
  40560c:	mov	x0, x19
  405610:	bl	4052f0 <wcrtomb@plt+0x3a0>
  405614:	cbz	x0, 4055cc <wcrtomb@plt+0x67c>
  405618:	ldp	x2, x4, [x0, #32]
  40561c:	ldr	x1, [x0, #8]
  405620:	sub	x3, x19, x1, lsl #9
  405624:	cmp	x2, x3
  405628:	add	x4, x4, x3, lsr #9
  40562c:	csel	x3, x2, x3, ls  // ls = plast
  405630:	sub	x2, x2, x3
  405634:	stp	x2, x4, [x0, #32]
  405638:	cbnz	x2, 405644 <wcrtomb@plt+0x6f4>
  40563c:	ldr	x0, [x0]
  405640:	add	x1, x1, x4
  405644:	neg	x1, x1
  405648:	bl	405548 <wcrtomb@plt+0x5f8>
  40564c:	b	4055cc <wcrtomb@plt+0x67c>
  405650:	bl	41db20 <wcrtomb@plt+0x18bd0>
  405654:	mov	x19, x0
  405658:	b	4055f0 <wcrtomb@plt+0x6a0>
  40565c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  405660:	add	x0, x0, #0x6c8
  405664:	ldr	w1, [x0, #288]
  405668:	add	w1, w1, #0x1
  40566c:	str	w1, [x0, #288]
  405670:	tbz	w1, #31, 4056b4 <wcrtomb@plt+0x764>
  405674:	stp	x29, x30, [sp, #-16]!
  405678:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40567c:	mov	x29, sp
  405680:	ldr	x0, [x0, #1016]
  405684:	cbz	x0, 40568c <wcrtomb@plt+0x73c>
  405688:	blr	x0
  40568c:	mov	w2, #0x5                   	// #5
  405690:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  405694:	mov	x0, #0x0                   	// #0
  405698:	add	x1, x1, #0xb38
  40569c:	bl	404d00 <dcgettext@plt>
  4056a0:	mov	x2, x0
  4056a4:	mov	w1, #0x0                   	// #0
  4056a8:	mov	w0, #0x0                   	// #0
  4056ac:	bl	4042e0 <error@plt>
  4056b0:	bl	40d47c <wcrtomb@plt+0x852c>
  4056b4:	ldr	w1, [x0, #292]
  4056b8:	add	w1, w1, #0x1
  4056bc:	str	w1, [x0, #292]
  4056c0:	ret
  4056c4:	stp	x29, x30, [sp, #-160]!
  4056c8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4056cc:	mov	x29, sp
  4056d0:	ldr	w0, [x0, #868]
  4056d4:	str	x19, [sp, #16]
  4056d8:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  4056dc:	cmp	w0, #0x4
  4056e0:	b.ne	4056e8 <wcrtomb@plt+0x798>  // b.any
  4056e4:	strb	wzr, [x19, #936]
  4056e8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4056ec:	ldr	w0, [x0, #80]
  4056f0:	cmn	w0, #0x1
  4056f4:	b.eq	405710 <wcrtomb@plt+0x7c0>  // b.none
  4056f8:	cmp	w0, #0x0
  4056fc:	cset	w0, ne  // ne = any
  405700:	strb	w0, [x19, #936]
  405704:	ldr	x19, [sp, #16]
  405708:	ldp	x29, x30, [sp], #160
  40570c:	ret
  405710:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405714:	ldrb	w0, [x0, #84]
  405718:	cbz	w0, 405724 <wcrtomb@plt+0x7d4>
  40571c:	mov	w0, #0x0                   	// #0
  405720:	b	405700 <wcrtomb@plt+0x7b0>
  405724:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405728:	ldr	x0, [x0, #912]
  40572c:	cbnz	x0, 40571c <wcrtomb@plt+0x7cc>
  405730:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405734:	add	x1, sp, #0x20
  405738:	ldr	w0, [x0, #984]
  40573c:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  405740:	cbnz	w0, 40571c <wcrtomb@plt+0x7cc>
  405744:	ldr	w0, [sp, #48]
  405748:	and	w0, w0, #0xf000
  40574c:	cmp	w0, #0x8, lsl #12
  405750:	cset	w0, eq  // eq = none
  405754:	b	405700 <wcrtomb@plt+0x7b0>
  405758:	stp	x29, x30, [sp, #-464]!
  40575c:	mov	x29, sp
  405760:	str	x19, [sp, #16]
  405764:	mov	x19, x0
  405768:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40576c:	ldr	w0, [x0, #824]
  405770:	cmp	w0, #0x4
  405774:	b.ne	4057fc <wcrtomb@plt+0x8ac>  // b.any
  405778:	mov	x2, #0x1a8                 	// #424
  40577c:	mov	w1, #0x0                   	// #0
  405780:	add	x0, sp, #0x28
  405784:	bl	404700 <memset@plt>
  405788:	ldr	x0, [x19, #16]
  40578c:	stp	x0, x0, [sp, #40]
  405790:	mov	w0, #0x81a4                	// #33188
  405794:	str	w0, [sp, #144]
  405798:	bl	4043d0 <getuid@plt>
  40579c:	str	w0, [sp, #152]
  4057a0:	bl	404b20 <getgid@plt>
  4057a4:	str	w0, [sp, #156]
  4057a8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  4057ac:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  4057b0:	add	x1, x1, #0xb4f
  4057b4:	ldrsw	x2, [x0, #2028]
  4057b8:	add	x0, sp, #0x28
  4057bc:	bl	411bbc <wcrtomb@plt+0xcc6c>
  4057c0:	stp	x0, x0, [sp, #40]
  4057c4:	ldr	x0, [x19, #32]
  4057c8:	str	x0, [sp, #176]
  4057cc:	str	x0, [sp, #304]
  4057d0:	add	x0, sp, #0x28
  4057d4:	bl	40ac90 <wcrtomb@plt+0x5d40>
  4057d8:	mov	x2, x0
  4057dc:	cbnz	x0, 4057e4 <wcrtomb@plt+0x894>
  4057e0:	bl	404970 <abort@plt>
  4057e4:	add	x1, sp, #0x28
  4057e8:	mov	w0, #0x0                   	// #0
  4057ec:	bl	40aa40 <wcrtomb@plt+0x5af0>
  4057f0:	bl	40aa64 <wcrtomb@plt+0x5b14>
  4057f4:	ldr	x0, [sp, #40]
  4057f8:	bl	404ae0 <free@plt>
  4057fc:	ldr	x19, [sp, #16]
  405800:	ldp	x29, x30, [sp], #464
  405804:	ret
  405808:	stp	x29, x30, [sp, #-48]!
  40580c:	mov	x29, sp
  405810:	stp	x21, x22, [sp, #32]
  405814:	mov	x22, x0
  405818:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40581c:	stp	x19, x20, [sp, #16]
  405820:	ldrb	w0, [x0, #84]
  405824:	cbz	w0, 405880 <wcrtomb@plt+0x930>
  405828:	mov	x21, x1
  40582c:	mov	x20, x2
  405830:	mov	x0, #0x30                  	// #48
  405834:	bl	436d44 <argp_usage@@Base+0x9864>
  405838:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  40583c:	mov	x19, x0
  405840:	add	x0, x1, #0x4b8
  405844:	ldr	x2, [x0, #8]
  405848:	cbz	x2, 405890 <wcrtomb@plt+0x940>
  40584c:	str	x19, [x2]
  405850:	str	x19, [x0, #8]
  405854:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405858:	ldr	x3, [x0, #4016]
  40585c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405860:	ldr	x0, [x0, #3992]
  405864:	sub	x3, x3, x0
  405868:	mov	x0, x22
  40586c:	asr	x3, x3, #9
  405870:	stp	xzr, x3, [x19]
  405874:	bl	436f10 <argp_usage@@Base+0x9a30>
  405878:	stp	x0, x21, [x19, #16]
  40587c:	stp	x20, xzr, [x19, #32]
  405880:	ldp	x19, x20, [sp, #16]
  405884:	ldp	x21, x22, [sp, #32]
  405888:	ldp	x29, x30, [sp], #48
  40588c:	ret
  405890:	str	x19, [x1, #1208]
  405894:	b	405850 <wcrtomb@plt+0x900>
  405898:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40589c:	add	x0, x0, #0x4b8
  4058a0:	add	x0, x0, #0x1a8
  4058a4:	b	412630 <wcrtomb@plt+0xd6e0>
  4058a8:	ldr	x2, [x0, #136]
  4058ac:	ldr	x0, [x0]
  4058b0:	mov	x1, x2
  4058b4:	b	405808 <wcrtomb@plt+0x8b8>
  4058b8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4058bc:	ldrb	w0, [x0, #84]
  4058c0:	cbz	w0, 4058cc <wcrtomb@plt+0x97c>
  4058c4:	mov	x0, #0x0                   	// #0
  4058c8:	b	40536c <wcrtomb@plt+0x41c>
  4058cc:	ret
  4058d0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  4058d4:	ldr	x1, [x1, #1208]
  4058d8:	cbz	x1, 4058e0 <wcrtomb@plt+0x990>
  4058dc:	str	x0, [x1, #32]
  4058e0:	ret
  4058e4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4058e8:	str	wzr, [x0, #1712]
  4058ec:	ret
  4058f0:	stp	x29, x30, [sp, #-32]!
  4058f4:	mov	x29, sp
  4058f8:	str	x19, [sp, #16]
  4058fc:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  405900:	add	x19, x19, #0x2d0
  405904:	mov	x0, x19
  405908:	bl	42fdac <argp_usage@@Base+0x28cc>
  40590c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405910:	add	x0, x0, #0x3b0
  405914:	ldp	x2, x3, [x19]
  405918:	stp	x2, x3, [x0]
  40591c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405920:	add	x0, x0, #0x368
  405924:	ldr	x19, [sp, #16]
  405928:	stp	x2, x3, [x0]
  40592c:	ldp	x29, x30, [sp], #32
  405930:	ret
  405934:	stp	x29, x30, [sp, #-48]!
  405938:	mov	x29, sp
  40593c:	add	x0, sp, #0x20
  405940:	str	x19, [sp, #16]
  405944:	bl	42fdac <argp_usage@@Base+0x28cc>
  405948:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  40594c:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  405950:	add	x0, x2, #0x368
  405954:	ldr	x1, [sp, #40]
  405958:	add	x19, x19, #0x4b8
  40595c:	ldr	x3, [x0, #8]
  405960:	ldr	x2, [x2, #872]
  405964:	sub	x1, x1, x3
  405968:	scvtf	d0, x1
  40596c:	mov	x1, #0xcd6500000000        	// #225833675390976
  405970:	movk	x1, #0x41cd, lsl #48
  405974:	fmov	d1, x1
  405978:	ldr	x1, [sp, #32]
  40597c:	fdiv	d0, d0, d1
  405980:	sub	x1, x1, x2
  405984:	scvtf	d1, x1
  405988:	fadd	d0, d0, d1
  40598c:	ldr	d1, [x19, #16]
  405990:	fadd	d0, d0, d1
  405994:	str	d0, [x19, #16]
  405998:	bl	42fdac <argp_usage@@Base+0x28cc>
  40599c:	ldr	d0, [x19, #16]
  4059a0:	ldr	x19, [sp, #16]
  4059a4:	ldp	x29, x30, [sp], #48
  4059a8:	ret
  4059ac:	mov	x1, x0
  4059b0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4059b4:	ldr	x8, [x0, #912]
  4059b8:	cbnz	x8, 4059ec <wcrtomb@plt+0xa9c>
  4059bc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4059c0:	ldr	w0, [x0, #1716]
  4059c4:	cbz	w0, 4059ec <wcrtomb@plt+0xa9c>
  4059c8:	stp	x29, x30, [sp, #-16]!
  4059cc:	mov	x29, sp
  4059d0:	str	wzr, [x1]
  4059d4:	bl	405320 <wcrtomb@plt+0x3d0>
  4059d8:	cbz	x0, 4059e0 <wcrtomb@plt+0xa90>
  4059dc:	ldr	x8, [x0, #8]
  4059e0:	mov	x0, x8
  4059e4:	ldp	x29, x30, [sp], #16
  4059e8:	ret
  4059ec:	mov	x0, x8
  4059f0:	ret
  4059f4:	mov	x1, x0
  4059f8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4059fc:	ldr	x0, [x0, #912]
  405a00:	cbz	x0, 405a18 <wcrtomb@plt+0xac8>
  405a04:	mov	x0, #0x0                   	// #0
  405a08:	ret
  405a0c:	mov	x0, #0x0                   	// #0
  405a10:	ldp	x29, x30, [sp], #16
  405a14:	ret
  405a18:	stp	x29, x30, [sp, #-16]!
  405a1c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405a20:	mov	x29, sp
  405a24:	ldr	w0, [x0, #1716]
  405a28:	bl	405320 <wcrtomb@plt+0x3d0>
  405a2c:	cbz	x0, 405a0c <wcrtomb@plt+0xabc>
  405a30:	ldr	x0, [x0, #8]
  405a34:	b	405a10 <wcrtomb@plt+0xac0>
  405a38:	stp	x29, x30, [sp, #-112]!
  405a3c:	mov	x29, sp
  405a40:	stp	x19, x20, [sp, #16]
  405a44:	mov	x20, x0
  405a48:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405a4c:	stp	x21, x22, [sp, #32]
  405a50:	ldr	w0, [x0, #868]
  405a54:	stp	x23, x24, [sp, #48]
  405a58:	sub	w0, w0, #0x1
  405a5c:	stp	x25, x26, [sp, #64]
  405a60:	cmp	w0, #0x7
  405a64:	b.hi	405c0c <wcrtomb@plt+0xcbc>  // b.pmore
  405a68:	mov	x22, x1
  405a6c:	mov	w21, w3
  405a70:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  405a74:	add	x1, x1, #0x218
  405a78:	ldrb	w0, [x1, w0, uxtw]
  405a7c:	adr	x1, 405a88 <wcrtomb@plt+0xb38>
  405a80:	add	x0, x1, w0, sxtb #2
  405a84:	br	x0
  405a88:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405a8c:	add	x0, x0, #0x4b8
  405a90:	ldr	x1, [x22, #8]
  405a94:	ldr	d0, [x0, #64]
  405a98:	ldr	d1, [x0, #512]
  405a9c:	fadd	d0, d1, d0
  405aa0:	mov	x0, x20
  405aa4:	bl	4053d0 <wcrtomb@plt+0x480>
  405aa8:	mov	w19, w0
  405aac:	b	405bac <wcrtomb@plt+0xc5c>
  405ab0:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x39380>
  405ab4:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  405ab8:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  405abc:	add	x23, x23, #0x4b8
  405ac0:	ldr	x1, [x24, #928]
  405ac4:	mov	w26, w2
  405ac8:	ldr	x0, [x25, #3944]
  405acc:	mul	x0, x0, x1
  405ad0:	ldr	x1, [x22]
  405ad4:	ucvtf	d0, x0
  405ad8:	mov	x0, x20
  405adc:	bl	4053d0 <wcrtomb@plt+0x480>
  405ae0:	mov	w19, w0
  405ae4:	mov	x1, x20
  405ae8:	mov	w0, w26
  405aec:	bl	404cb0 <fputc_unlocked@plt>
  405af0:	add	w19, w19, #0x1
  405af4:	ldr	d0, [x23, #64]
  405af8:	mov	x0, x20
  405afc:	ldr	d1, [x23, #512]
  405b00:	ldr	x1, [x22, #8]
  405b04:	fadd	d0, d1, d0
  405b08:	bl	4053d0 <wcrtomb@plt+0x480>
  405b0c:	add	w19, w19, w0
  405b10:	mov	x1, x20
  405b14:	mov	w0, w26
  405b18:	bl	404cb0 <fputc_unlocked@plt>
  405b1c:	add	w19, w19, #0x1
  405b20:	ldr	x1, [x22, #16]
  405b24:	cbz	x1, 405b58 <wcrtomb@plt+0xc08>
  405b28:	ldrb	w0, [x1]
  405b2c:	cbz	w0, 405b58 <wcrtomb@plt+0xc08>
  405b30:	mov	w2, #0x5                   	// #5
  405b34:	mov	x0, #0x0                   	// #0
  405b38:	bl	404d00 <dcgettext@plt>
  405b3c:	mov	x3, x0
  405b40:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  405b44:	mov	x0, x20
  405b48:	add	x2, x2, #0xcb5
  405b4c:	mov	w1, #0x1                   	// #1
  405b50:	bl	404a20 <__fprintf_chk@plt>
  405b54:	add	w19, w19, w0
  405b58:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  405b5c:	ldr	d2, [x23, #64]
  405b60:	ldr	x0, [x25, #3944]
  405b64:	ldr	x1, [x1, #4040]
  405b68:	ldr	d1, [x23, #512]
  405b6c:	sub	x0, x0, x1
  405b70:	ldr	x1, [x24, #928]
  405b74:	fadd	d1, d1, d2
  405b78:	mul	x0, x0, x1
  405b7c:	add	x1, sp, #0x58
  405b80:	ucvtf	d0, x0
  405b84:	fsub	d0, d0, d1
  405b88:	fcvtzu	x0, d0
  405b8c:	bl	431400 <argp_usage@@Base+0x3f20>
  405b90:	mov	x3, x0
  405b94:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  405b98:	mov	x0, x20
  405b9c:	add	x2, x2, #0xb0d
  405ba0:	mov	w1, #0x1                   	// #1
  405ba4:	bl	404a20 <__fprintf_chk@plt>
  405ba8:	add	w19, w19, w0
  405bac:	cbz	w21, 405bc0 <wcrtomb@plt+0xc70>
  405bb0:	add	w19, w19, #0x1
  405bb4:	mov	x1, x20
  405bb8:	mov	w0, w21
  405bbc:	bl	404cb0 <fputc_unlocked@plt>
  405bc0:	mov	w0, w19
  405bc4:	ldp	x19, x20, [sp, #16]
  405bc8:	ldp	x21, x22, [sp, #32]
  405bcc:	ldp	x23, x24, [sp, #48]
  405bd0:	ldp	x25, x26, [sp, #64]
  405bd4:	ldp	x29, x30, [sp], #112
  405bd8:	ret
  405bdc:	ldr	x1, [x22]
  405be0:	mov	w2, #0x5                   	// #5
  405be4:	mov	x0, #0x0                   	// #0
  405be8:	bl	404d00 <dcgettext@plt>
  405bec:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  405bf0:	ldr	x2, [x1, #3944]
  405bf4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  405bf8:	ldr	x1, [x1, #928]
  405bfc:	mul	x2, x2, x1
  405c00:	mov	x1, x0
  405c04:	ucvtf	d0, x2
  405c08:	b	405aa0 <wcrtomb@plt+0xb50>
  405c0c:	bl	404970 <abort@plt>
  405c10:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405c14:	mov	w3, #0xa                   	// #10
  405c18:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  405c1c:	mov	w2, w3
  405c20:	ldr	x0, [x0, #1160]
  405c24:	add	x1, x1, #0x220
  405c28:	b	405a38 <wcrtomb@plt+0xae8>
  405c2c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405c30:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  405c34:	ldr	x0, [x0, #4016]
  405c38:	ldr	x1, [x1, #3992]
  405c3c:	sub	x0, x0, x1
  405c40:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  405c44:	ldr	x1, [x1, #1728]
  405c48:	add	x0, x1, x0, asr #9
  405c4c:	ret
  405c50:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405c54:	add	x0, x0, #0x4b8
  405c58:	ldrb	w1, [x0, #528]
  405c5c:	cbz	w1, 405c94 <wcrtomb@plt+0xd44>
  405c60:	strb	wzr, [x0, #528]
  405c64:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405c68:	ldr	x1, [x0, #3992]
  405c6c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405c70:	str	x1, [x0, #4016]
  405c74:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405c78:	ldrsw	x0, [x0, #756]
  405c7c:	add	x0, x1, x0, lsl #9
  405c80:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  405c84:	str	x0, [x1, #3952]
  405c88:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405c8c:	mov	w1, #0x1                   	// #1
  405c90:	str	w1, [x0, #3968]
  405c94:	ret
  405c98:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  405c9c:	mov	x3, x2
  405ca0:	mov	w5, #0x0                   	// #0
  405ca4:	ldr	x1, [x2, #4016]
  405ca8:	mov	x4, x1
  405cac:	cmp	x0, x4
  405cb0:	b.cs	405cf8 <wcrtomb@plt+0xda8>  // b.hs, b.nlast
  405cb4:	sub	x2, x0, x1
  405cb8:	sub	x4, x1, #0x1ff
  405cbc:	add	x2, x2, #0x200
  405cc0:	add	x0, x0, #0x1
  405cc4:	and	x2, x2, #0xfffffffffffffe00
  405cc8:	cmp	x0, x4
  405ccc:	csel	x2, x2, xzr, cs  // cs = hs, nlast
  405cd0:	add	x1, x1, x2
  405cd4:	cbz	w5, 405cdc <wcrtomb@plt+0xd8c>
  405cd8:	str	x1, [x3, #4016]
  405cdc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405ce0:	ldr	x0, [x0, #3952]
  405ce4:	cmp	x1, x0
  405ce8:	b.ls	405d04 <wcrtomb@plt+0xdb4>  // b.plast
  405cec:	stp	x29, x30, [sp, #-16]!
  405cf0:	mov	x29, sp
  405cf4:	bl	404970 <abort@plt>
  405cf8:	add	x4, x4, #0x200
  405cfc:	mov	w5, #0x1                   	// #1
  405d00:	b	405cac <wcrtomb@plt+0xd5c>
  405d04:	ret
  405d08:	stp	x29, x30, [sp, #-32]!
  405d0c:	mov	x29, sp
  405d10:	stp	x19, x20, [sp, #16]
  405d14:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  405d18:	add	x19, x19, #0x4b8
  405d1c:	add	x19, x19, #0x50
  405d20:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  405d24:	mov	x0, x19
  405d28:	bl	421adc <wcrtomb@plt+0x1cb8c>
  405d2c:	mov	x1, x19
  405d30:	add	x0, x20, #0xff0
  405d34:	mov	w2, #0x0                   	// #0
  405d38:	bl	4162bc <wcrtomb@plt+0x1136c>
  405d3c:	cmp	w0, #0x1
  405d40:	b.ne	405d60 <wcrtomb@plt+0xe10>  // b.any
  405d44:	mov	w19, w0
  405d48:	ldr	x0, [x20, #4080]
  405d4c:	bl	405c98 <wcrtomb@plt+0xd48>
  405d50:	mov	w0, w19
  405d54:	ldp	x19, x20, [sp, #16]
  405d58:	ldp	x29, x30, [sp], #32
  405d5c:	ret
  405d60:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405d64:	ldr	x0, [x0, #1016]
  405d68:	cbz	x0, 405d70 <wcrtomb@plt+0xe20>
  405d6c:	blr	x0
  405d70:	mov	w2, #0x5                   	// #5
  405d74:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  405d78:	mov	x0, #0x0                   	// #0
  405d7c:	add	x1, x1, #0xb68
  405d80:	bl	404d00 <dcgettext@plt>
  405d84:	mov	x2, x0
  405d88:	mov	w1, #0x0                   	// #0
  405d8c:	mov	w0, #0x0                   	// #0
  405d90:	bl	4042e0 <error@plt>
  405d94:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405d98:	mov	w1, #0x2                   	// #2
  405d9c:	str	w1, [x0, #3464]
  405da0:	mov	w0, #0x0                   	// #0
  405da4:	b	405d54 <wcrtomb@plt+0xe04>
  405da8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  405dac:	ldr	x1, [x1, #3952]
  405db0:	sub	x0, x1, x0
  405db4:	ret
  405db8:	stp	x29, x30, [sp, #-16]!
  405dbc:	mov	x29, sp
  405dc0:	bl	4048c0 <close@plt>
  405dc4:	cbz	w0, 405de4 <wcrtomb@plt+0xe94>
  405dc8:	mov	w2, #0x5                   	// #5
  405dcc:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  405dd0:	mov	x0, #0x0                   	// #0
  405dd4:	add	x1, x1, #0xb8e
  405dd8:	bl	404d00 <dcgettext@plt>
  405ddc:	ldp	x29, x30, [sp], #16
  405de0:	b	424d60 <wcrtomb@plt+0x1fe10>
  405de4:	ldp	x29, x30, [sp], #16
  405de8:	ret
  405dec:	stp	x29, x30, [sp, #-16]!
  405df0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405df4:	mov	x29, sp
  405df8:	ldr	x0, [x0, #744]
  405dfc:	ldr	x0, [x0]
  405e00:	bl	424e94 <wcrtomb@plt+0x1ff44>
  405e04:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405e08:	add	x0, x0, #0x4b8
  405e0c:	ldr	x1, [x0, #520]
  405e10:	cbnz	x1, 405e4c <wcrtomb@plt+0xefc>
  405e14:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405e18:	ldr	x0, [x0, #1016]
  405e1c:	cbz	x0, 405e24 <wcrtomb@plt+0xed4>
  405e20:	blr	x0
  405e24:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  405e28:	add	x1, x1, #0xb95
  405e2c:	mov	w2, #0x5                   	// #5
  405e30:	mov	x0, #0x0                   	// #0
  405e34:	bl	404d00 <dcgettext@plt>
  405e38:	mov	x2, x0
  405e3c:	mov	w1, #0x0                   	// #0
  405e40:	mov	w0, #0x0                   	// #0
  405e44:	bl	4042e0 <error@plt>
  405e48:	bl	40d47c <wcrtomb@plt+0x852c>
  405e4c:	ldr	w1, [x0, #504]
  405e50:	add	w2, w1, #0x1
  405e54:	str	w2, [x0, #504]
  405e58:	cmp	w1, #0xa
  405e5c:	b.le	405e80 <wcrtomb@plt+0xf30>
  405e60:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405e64:	ldr	x0, [x0, #1016]
  405e68:	cbz	x0, 405e70 <wcrtomb@plt+0xf20>
  405e6c:	blr	x0
  405e70:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  405e74:	mov	w2, #0x5                   	// #5
  405e78:	add	x1, x1, #0xbb8
  405e7c:	b	405e30 <wcrtomb@plt+0xee0>
  405e80:	ldp	x29, x30, [sp], #16
  405e84:	ret
  405e88:	stp	x29, x30, [sp, #-224]!
  405e8c:	mov	x29, sp
  405e90:	stp	x21, x22, [sp, #32]
  405e94:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  405e98:	stp	x23, x24, [sp, #48]
  405e9c:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  405ea0:	ldr	x21, [x23, #3992]
  405ea4:	stp	x19, x20, [sp, #16]
  405ea8:	mov	x19, x0
  405eac:	ldr	x20, [x22, #928]
  405eb0:	stp	x25, x26, [sp, #64]
  405eb4:	add	x21, x21, x0
  405eb8:	str	x27, [sp, #80]
  405ebc:	subs	x20, x20, x0
  405ec0:	b.eq	405f0c <wcrtomb@plt+0xfbc>  // b.none
  405ec4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405ec8:	ldr	w0, [x0, #480]
  405ecc:	tbz	w0, #22, 405f0c <wcrtomb@plt+0xfbc>
  405ed0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  405ed4:	and	x0, x20, #0x1ff
  405ed8:	ldr	x1, [x1, #1728]
  405edc:	orr	x0, x0, x1
  405ee0:	cbnz	x0, 405f0c <wcrtomb@plt+0xfbc>
  405ee4:	cbz	x19, 405f0c <wcrtomb@plt+0xfbc>
  405ee8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405eec:	add	x1, sp, #0x60
  405ef0:	ldr	w0, [x0, #984]
  405ef4:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  405ef8:	cbz	w0, 405f84 <wcrtomb@plt+0x1034>
  405efc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405f00:	ldr	x0, [x0, #744]
  405f04:	ldr	x0, [x0]
  405f08:	bl	418c90 <wcrtomb@plt+0x13d40>
  405f0c:	adrp	x24, 471000 <_obstack_memory_used@@Base+0x39380>
  405f10:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  405f14:	add	x24, x24, #0x4b8
  405f18:	add	x25, x25, #0x3d8
  405f1c:	mov	w26, #0x3fffffff            	// #1073741823
  405f20:	tst	x20, #0x1ff
  405f24:	b.ne	405fe4 <wcrtomb@plt+0x1094>  // b.any
  405f28:	cmp	x20, #0x0
  405f2c:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  405f30:	b.eq	405f3c <wcrtomb@plt+0xfec>  // b.none
  405f34:	ldrb	w0, [x24, #529]
  405f38:	cbnz	w0, 405fe8 <wcrtomb@plt+0x1098>
  405f3c:	ldr	x3, [x22, #928]
  405f40:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  405f44:	ldr	x0, [x23, #3992]
  405f48:	sub	x20, x3, x20
  405f4c:	and	x20, x20, #0xfffffffffffffe00
  405f50:	add	x20, x0, x20
  405f54:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  405f58:	ldp	x21, x22, [sp, #32]
  405f5c:	str	x20, [x0, #3952]
  405f60:	ldr	x0, [x1, #3944]
  405f64:	ldp	x19, x20, [sp, #16]
  405f68:	add	x0, x0, #0x1
  405f6c:	str	x0, [x1, #3944]
  405f70:	ldp	x23, x24, [sp, #48]
  405f74:	ldp	x25, x26, [sp, #64]
  405f78:	ldr	x27, [sp, #80]
  405f7c:	ldp	x29, x30, [sp], #224
  405f80:	ret
  405f84:	ldr	w0, [sp, #112]
  405f88:	mov	w1, #0xb000                	// #45056
  405f8c:	and	w0, w0, w1
  405f90:	cmp	w0, #0x2, lsl #12
  405f94:	b.ne	405f0c <wcrtomb@plt+0xfbc>  // b.any
  405f98:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  405f9c:	lsr	x24, x19, #9
  405fa0:	ldr	x0, [x0, #1016]
  405fa4:	cbz	x0, 405fac <wcrtomb@plt+0x105c>
  405fa8:	blr	x0
  405fac:	mov	w4, #0x5                   	// #5
  405fb0:	mov	x3, x24
  405fb4:	adrp	x2, 446000 <_obstack_memory_used@@Base+0xe380>
  405fb8:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  405fbc:	add	x2, x2, #0xbd2
  405fc0:	add	x1, x1, #0xbeb
  405fc4:	mov	x0, #0x0                   	// #0
  405fc8:	bl	404c10 <dcngettext@plt>
  405fcc:	mov	x3, x24
  405fd0:	mov	x2, x0
  405fd4:	mov	w1, #0x0                   	// #0
  405fd8:	mov	w0, #0x0                   	// #0
  405fdc:	bl	4042e0 <error@plt>
  405fe0:	b	405f0c <wcrtomb@plt+0xfbc>
  405fe4:	cbz	x19, 405f3c <wcrtomb@plt+0xfec>
  405fe8:	mov	w27, #0xc0000000            	// #-1073741824
  405fec:	b	405ff4 <wcrtomb@plt+0x10a4>
  405ff0:	bl	405dec <wcrtomb@plt+0xe9c>
  405ff4:	ldr	w0, [x25]
  405ff8:	mov	x2, x20
  405ffc:	mov	x1, x21
  406000:	cmp	w0, w26
  406004:	b.le	406078 <wcrtomb@plt+0x1128>
  406008:	add	w0, w0, w27
  40600c:	bl	425de4 <wcrtomb@plt+0x20e94>
  406010:	mov	x19, x0
  406014:	cmn	x0, #0x1
  406018:	b.eq	405ff0 <wcrtomb@plt+0x10a0>  // b.none
  40601c:	cbz	x0, 405f3c <wcrtomb@plt+0xfec>
  406020:	ldrb	w0, [x24, #529]
  406024:	cbnz	w0, 406080 <wcrtomb@plt+0x1130>
  406028:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40602c:	ldr	x3, [x22, #928]
  406030:	ldr	x0, [x0, #1016]
  406034:	sub	x20, x3, x20
  406038:	cbz	x0, 406040 <wcrtomb@plt+0x10f0>
  40603c:	blr	x0
  406040:	mov	x3, x20
  406044:	mov	w4, #0x5                   	// #5
  406048:	adrp	x2, 446000 <_obstack_memory_used@@Base+0xe380>
  40604c:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  406050:	add	x2, x2, #0xc03
  406054:	add	x1, x1, #0xc2a
  406058:	mov	x0, #0x0                   	// #0
  40605c:	bl	404c10 <dcngettext@plt>
  406060:	mov	x3, x20
  406064:	mov	x2, x0
  406068:	mov	w1, #0x0                   	// #0
  40606c:	mov	w0, #0x0                   	// #0
  406070:	bl	4042e0 <error@plt>
  406074:	bl	40d47c <wcrtomb@plt+0x852c>
  406078:	bl	436390 <argp_usage@@Base+0x8eb0>
  40607c:	b	406010 <wcrtomb@plt+0x10c0>
  406080:	sub	x20, x20, x19
  406084:	add	x21, x21, x19
  406088:	b	405f20 <wcrtomb@plt+0xfd0>
  40608c:	stp	x29, x30, [sp, #-48]!
  406090:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  406094:	mov	x29, sp
  406098:	stp	x19, x20, [sp, #16]
  40609c:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4060a0:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  4060a4:	ldr	x1, [x1, #3992]
  4060a8:	stp	x21, x22, [sp, #32]
  4060ac:	ldr	x3, [x19, #4016]
  4060b0:	sub	x3, x3, x1
  4060b4:	ldrsw	x1, [x20, #756]
  4060b8:	sub	x3, x1, x3, asr #9
  4060bc:	cmp	x0, x3, lsl #9
  4060c0:	b.le	4061ac <wcrtomb@plt+0x125c>
  4060c4:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  4060c8:	lsl	x2, x3, #9
  4060cc:	sub	x2, x0, x2
  4060d0:	ldr	x3, [x22, #928]
  4060d4:	cmp	x2, x3
  4060d8:	b.cc	4061ac <wcrtomb@plt+0x125c>  // b.lo, b.ul, b.last
  4060dc:	bl	405c2c <wcrtomb@plt+0xcdc>
  4060e0:	mov	x21, x0
  4060e4:	udiv	x2, x2, x3
  4060e8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4060ec:	ldr	w0, [x0, #984]
  4060f0:	mul	x1, x2, x3
  4060f4:	mov	w2, #0x3fffffff            	// #1073741823
  4060f8:	cmp	w0, w2
  4060fc:	mov	w2, #0x1                   	// #1
  406100:	b.le	40615c <wcrtomb@plt+0x120c>
  406104:	mov	w3, #0xc0000000            	// #-1073741824
  406108:	add	w0, w0, w3
  40610c:	bl	425f8c <wcrtomb@plt+0x2103c>
  406110:	tbnz	x0, #63, 40619c <wcrtomb@plt+0x124c>
  406114:	ldr	x2, [x22, #928]
  406118:	udiv	x1, x0, x2
  40611c:	msub	x1, x1, x2, x0
  406120:	cbz	x1, 406164 <wcrtomb@plt+0x1214>
  406124:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406128:	ldr	x0, [x0, #1016]
  40612c:	cbz	x0, 406134 <wcrtomb@plt+0x11e4>
  406130:	blr	x0
  406134:	mov	w2, #0x5                   	// #5
  406138:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  40613c:	mov	x0, #0x0                   	// #0
  406140:	add	x1, x1, #0xc50
  406144:	bl	404d00 <dcgettext@plt>
  406148:	mov	x2, x0
  40614c:	mov	w1, #0x0                   	// #0
  406150:	mov	w0, #0x0                   	// #0
  406154:	bl	4042e0 <error@plt>
  406158:	bl	40d47c <wcrtomb@plt+0x852c>
  40615c:	bl	404480 <lseek@plt>
  406160:	b	406110 <wcrtomb@plt+0x11c0>
  406164:	ldrsw	x3, [x20, #756]
  406168:	asr	x1, x0, #9
  40616c:	sub	x0, x1, x21
  406170:	adrp	x4, 471000 <_obstack_memory_used@@Base+0x39380>
  406174:	sub	x1, x1, x3
  406178:	ldr	x5, [x4, #3944]
  40617c:	sdiv	x2, x0, x3
  406180:	add	x2, x2, x5
  406184:	str	x2, [x4, #3944]
  406188:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  40618c:	str	x1, [x2, #1728]
  406190:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  406194:	ldr	x1, [x1, #3952]
  406198:	str	x1, [x19, #4016]
  40619c:	ldp	x19, x20, [sp, #16]
  4061a0:	ldp	x21, x22, [sp, #32]
  4061a4:	ldp	x29, x30, [sp], #48
  4061a8:	ret
  4061ac:	mov	x0, #0x0                   	// #0
  4061b0:	b	40619c <wcrtomb@plt+0x124c>
  4061b4:	stp	x29, x30, [sp, #-16]!
  4061b8:	mov	x29, sp
  4061bc:	bl	42535c <wcrtomb@plt+0x2040c>
  4061c0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4061c4:	mov	w1, #0x3fffffff            	// #1073741823
  4061c8:	ldr	w0, [x0, #984]
  4061cc:	cmp	w0, w1
  4061d0:	b.le	406210 <wcrtomb@plt+0x12c0>
  4061d4:	mov	w1, #0xc0000000            	// #-1073741824
  4061d8:	add	w0, w0, w1
  4061dc:	bl	425d94 <wcrtomb@plt+0x20e44>
  4061e0:	cmp	w0, #0x0
  4061e4:	cset	w0, ne  // ne = any
  4061e8:	cbz	w0, 4061fc <wcrtomb@plt+0x12ac>
  4061ec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4061f0:	ldr	x0, [x0, #744]
  4061f4:	ldr	x0, [x0]
  4061f8:	bl	424d60 <wcrtomb@plt+0x1fe10>
  4061fc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  406200:	mov	w1, #0x0                   	// #0
  406204:	ldr	w0, [x0, #1740]
  406208:	bl	41d8f0 <wcrtomb@plt+0x189a0>
  40620c:	bl	40d47c <wcrtomb@plt+0x852c>
  406210:	bl	4048c0 <close@plt>
  406214:	b	4061e0 <wcrtomb@plt+0x1290>
  406218:	stp	x29, x30, [sp, #-48]!
  40621c:	mov	x29, sp
  406220:	stp	x19, x20, [sp, #16]
  406224:	mov	x20, x0
  406228:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40622c:	str	x21, [sp, #32]
  406230:	ldrb	w0, [x0, #705]
  406234:	cbz	w0, 40624c <wcrtomb@plt+0x12fc>
  406238:	bl	404e10 <__errno_location@plt>
  40623c:	mov	x19, x0
  406240:	ldr	w21, [x0]
  406244:	bl	405c10 <wcrtomb@plt+0xcc0>
  406248:	str	w21, [x19]
  40624c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406250:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  406254:	ldr	x0, [x0, #744]
  406258:	ldr	x2, [x1, #928]
  40625c:	mov	x1, x20
  406260:	ldr	x0, [x0]
  406264:	bl	4061b4 <wcrtomb@plt+0x1264>
  406268:	stp	x29, x30, [sp, #-16]!
  40626c:	mov	x29, sp
  406270:	bl	405588 <wcrtomb@plt+0x638>
  406274:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  406278:	ldr	x1, [x1, #928]
  40627c:	cmp	x1, x0
  406280:	b.eq	406288 <wcrtomb@plt+0x1338>  // b.none
  406284:	bl	406218 <wcrtomb@plt+0x12c8>
  406288:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  40628c:	scvtf	d0, x1
  406290:	ldr	x0, [x2, #3960]
  406294:	add	x0, x0, #0x1
  406298:	str	x0, [x2, #3960]
  40629c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4062a0:	add	x0, x0, #0x4b8
  4062a4:	ldr	d1, [x0, #64]
  4062a8:	fadd	d0, d0, d1
  4062ac:	str	d0, [x0, #64]
  4062b0:	ldp	x29, x30, [sp], #16
  4062b4:	ret
  4062b8:	stp	x29, x30, [sp, #-64]!
  4062bc:	mov	w0, #0x0                   	// #0
  4062c0:	mov	x29, sp
  4062c4:	stp	x19, x20, [sp, #16]
  4062c8:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  4062cc:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  4062d0:	stp	x21, x22, [sp, #32]
  4062d4:	str	x23, [sp, #48]
  4062d8:	bl	408d58 <wcrtomb@plt+0x3e08>
  4062dc:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  4062e0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4062e4:	add	x0, x0, #0x4b8
  4062e8:	ldrb	w1, [x1, #4000]
  4062ec:	str	wzr, [x0, #504]
  4062f0:	cbnz	w1, 406354 <wcrtomb@plt+0x1404>
  4062f4:	add	x20, x20, #0x3d8
  4062f8:	add	x19, x19, #0x3a0
  4062fc:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  406300:	mov	w22, #0x3fffffff            	// #1073741823
  406304:	mov	w23, #0xc0000000            	// #-1073741824
  406308:	ldr	w0, [x20]
  40630c:	ldr	x1, [x21, #3992]
  406310:	cmp	w0, w22
  406314:	ldr	x2, [x19]
  406318:	b.le	40637c <wcrtomb@plt+0x142c>
  40631c:	add	w0, w0, w23
  406320:	bl	425de4 <wcrtomb@plt+0x20e94>
  406324:	ldr	x1, [x19]
  406328:	cmp	x1, x0
  40632c:	b.ne	406384 <wcrtomb@plt+0x1434>  // b.any
  406330:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  406334:	ldp	x19, x20, [sp, #16]
  406338:	ldr	x0, [x1, #3944]
  40633c:	ldp	x21, x22, [sp, #32]
  406340:	add	x0, x0, #0x1
  406344:	str	x0, [x1, #3944]
  406348:	ldr	x23, [sp, #48]
  40634c:	ldp	x29, x30, [sp], #64
  406350:	ret
  406354:	ldr	x0, [x0, #520]
  406358:	cbz	x0, 4062f4 <wcrtomb@plt+0x13a4>
  40635c:	mov	w0, #0x1                   	// #1
  406360:	str	w0, [x20, #984]
  406364:	bl	41db20 <wcrtomb@plt+0x18bd0>
  406368:	str	wzr, [x20, #984]
  40636c:	ldr	x1, [x19, #928]
  406370:	cmp	x1, x0
  406374:	b.eq	4062f4 <wcrtomb@plt+0x13a4>  // b.none
  406378:	bl	406218 <wcrtomb@plt+0x12c8>
  40637c:	bl	436390 <argp_usage@@Base+0x8eb0>
  406380:	b	406324 <wcrtomb@plt+0x13d4>
  406384:	cmn	x0, #0x1
  406388:	b.ne	406394 <wcrtomb@plt+0x1444>  // b.any
  40638c:	bl	405dec <wcrtomb@plt+0xe9c>
  406390:	b	406308 <wcrtomb@plt+0x13b8>
  406394:	ldp	x19, x20, [sp, #16]
  406398:	ldp	x21, x22, [sp, #32]
  40639c:	ldr	x23, [sp, #48]
  4063a0:	ldp	x29, x30, [sp], #64
  4063a4:	b	405e88 <wcrtomb@plt+0xf38>
  4063a8:	stp	x29, x30, [sp, #-48]!
  4063ac:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4063b0:	add	x1, x1, #0xb66
  4063b4:	mov	x29, sp
  4063b8:	stp	x19, x20, [sp, #16]
  4063bc:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  4063c0:	ldr	x0, [x20, #672]
  4063c4:	str	x21, [sp, #32]
  4063c8:	bl	4045c0 <fopen@plt>
  4063cc:	cbz	x0, 40647c <wcrtomb@plt+0x152c>
  4063d0:	mov	x21, x20
  4063d4:	adrp	x20, 46e000 <_obstack_memory_used@@Base+0x36380>
  4063d8:	add	x20, x20, #0x6c8
  4063dc:	mov	x19, x0
  4063e0:	add	x2, x20, #0x120
  4063e4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4063e8:	add	x1, x1, #0xd
  4063ec:	bl	404670 <__isoc99_fscanf@plt>
  4063f0:	cmp	w0, #0x1
  4063f4:	b.ne	406400 <wcrtomb@plt+0x14b0>  // b.any
  4063f8:	ldr	w0, [x20, #288]
  4063fc:	tbz	w0, #31, 406448 <wcrtomb@plt+0x14f8>
  406400:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406404:	ldr	x0, [x0, #1016]
  406408:	cbz	x0, 406410 <wcrtomb@plt+0x14c0>
  40640c:	blr	x0
  406410:	mov	w2, #0x5                   	// #5
  406414:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  406418:	mov	x0, #0x0                   	// #0
  40641c:	add	x1, x1, #0xc7a
  406420:	bl	404d00 <dcgettext@plt>
  406424:	mov	x19, x0
  406428:	ldr	x0, [x21, #672]
  40642c:	bl	436084 <argp_usage@@Base+0x8ba4>
  406430:	mov	x3, x0
  406434:	mov	x2, x19
  406438:	mov	w1, #0x0                   	// #0
  40643c:	mov	w0, #0x0                   	// #0
  406440:	bl	4042e0 <error@plt>
  406444:	bl	40d47c <wcrtomb@plt+0x852c>
  406448:	mov	x0, x19
  40644c:	bl	4043c0 <ferror_unlocked@plt>
  406450:	cbz	w0, 40645c <wcrtomb@plt+0x150c>
  406454:	ldr	x0, [x21, #672]
  406458:	bl	424e94 <wcrtomb@plt+0x1ff44>
  40645c:	mov	x0, x19
  406460:	bl	404570 <fclose@plt>
  406464:	cbz	w0, 4064a0 <wcrtomb@plt+0x1550>
  406468:	ldr	x0, [x21, #672]
  40646c:	ldp	x19, x20, [sp, #16]
  406470:	ldr	x21, [sp, #32]
  406474:	ldp	x29, x30, [sp], #48
  406478:	b	424d60 <wcrtomb@plt+0x1fe10>
  40647c:	bl	404e10 <__errno_location@plt>
  406480:	ldr	w0, [x0]
  406484:	cmp	w0, #0x2
  406488:	b.eq	4064a0 <wcrtomb@plt+0x1550>  // b.none
  40648c:	ldr	x0, [x20, #672]
  406490:	ldp	x19, x20, [sp, #16]
  406494:	ldr	x21, [sp, #32]
  406498:	ldp	x29, x30, [sp], #48
  40649c:	b	424e5c <wcrtomb@plt+0x1ff0c>
  4064a0:	ldp	x19, x20, [sp, #16]
  4064a4:	ldr	x21, [sp, #32]
  4064a8:	ldp	x29, x30, [sp], #48
  4064ac:	ret
  4064b0:	stp	x29, x30, [sp, #-48]!
  4064b4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4064b8:	add	x1, x1, #0x2d8
  4064bc:	mov	x29, sp
  4064c0:	stp	x19, x20, [sp, #16]
  4064c4:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  4064c8:	ldr	x0, [x20, #672]
  4064cc:	str	x21, [sp, #32]
  4064d0:	bl	4045c0 <fopen@plt>
  4064d4:	cbz	x0, 40652c <wcrtomb@plt+0x15dc>
  4064d8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x36380>
  4064dc:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  4064e0:	add	x2, x2, #0x9dc
  4064e4:	mov	x19, x0
  4064e8:	ldr	w3, [x1, #2024]
  4064ec:	mov	w1, #0x1                   	// #1
  4064f0:	mov	x21, x20
  4064f4:	bl	404a20 <__fprintf_chk@plt>
  4064f8:	mov	x0, x19
  4064fc:	bl	4043c0 <ferror_unlocked@plt>
  406500:	cbz	w0, 40650c <wcrtomb@plt+0x15bc>
  406504:	ldr	x0, [x20, #672]
  406508:	bl	42534c <wcrtomb@plt+0x203fc>
  40650c:	mov	x0, x19
  406510:	bl	404570 <fclose@plt>
  406514:	cbz	w0, 406540 <wcrtomb@plt+0x15f0>
  406518:	ldr	x0, [x21, #672]
  40651c:	ldp	x19, x20, [sp, #16]
  406520:	ldr	x21, [sp, #32]
  406524:	ldp	x29, x30, [sp], #48
  406528:	b	424d60 <wcrtomb@plt+0x1fe10>
  40652c:	ldr	x0, [x20, #672]
  406530:	ldp	x19, x20, [sp, #16]
  406534:	ldr	x21, [sp, #32]
  406538:	ldp	x29, x30, [sp], #48
  40653c:	b	424e5c <wcrtomb@plt+0x1ff0c>
  406540:	ldp	x19, x20, [sp, #16]
  406544:	ldr	x21, [sp, #32]
  406548:	ldp	x29, x30, [sp], #48
  40654c:	ret
  406550:	stp	x29, x30, [sp, #-128]!
  406554:	mov	x29, sp
  406558:	stp	x21, x22, [sp, #32]
  40655c:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  406560:	add	x22, x22, #0x4b8
  406564:	stp	x23, x24, [sp, #48]
  406568:	mov	w23, w0
  40656c:	ldr	x0, [x22, #536]
  406570:	stp	x19, x20, [sp, #16]
  406574:	stp	x25, x26, [sp, #64]
  406578:	stp	x27, x28, [sp, #80]
  40657c:	cbnz	x0, 4065b0 <wcrtomb@plt+0x1660>
  406580:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406584:	ldr	x0, [x0, #776]
  406588:	cbnz	x0, 4065b0 <wcrtomb@plt+0x1660>
  40658c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406590:	ldr	w0, [x0, #984]
  406594:	cbnz	w0, 406700 <wcrtomb@plt+0x17b0>
  406598:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  40659c:	adrp	x0, 446000 <_obstack_memory_used@@Base+0xe380>
  4065a0:	add	x1, x1, #0xb66
  4065a4:	add	x0, x0, #0xc9d
  4065a8:	bl	4045c0 <fopen@plt>
  4065ac:	str	x0, [x22, #536]
  4065b0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4065b4:	ldrb	w0, [x0, #4032]
  4065b8:	cbnz	w0, 406ba8 <wcrtomb@plt+0x1c58>
  4065bc:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  4065c0:	ldrb	w0, [x24, #850]
  4065c4:	cbz	w0, 4065cc <wcrtomb@plt+0x167c>
  4065c8:	bl	409ac0 <wcrtomb@plt+0x4b70>
  4065cc:	mov	x1, #0x0                   	// #0
  4065d0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4065d4:	add	x0, x0, #0xf88
  4065d8:	bl	417c2c <wcrtomb@plt+0x12cdc>
  4065dc:	mov	x1, #0x0                   	// #0
  4065e0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4065e4:	add	x0, x0, #0xf90
  4065e8:	bl	417c2c <wcrtomb@plt+0x12cdc>
  4065ec:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4065f0:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  4065f4:	str	xzr, [x0, #4024]
  4065f8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4065fc:	str	xzr, [x0, #4008]
  406600:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  406604:	ldr	x1, [x0, #3992]
  406608:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40660c:	str	x1, [x0, #4016]
  406610:	mov	w1, #0x3fffffff            	// #1073741823
  406614:	ldr	w0, [x21, #984]
  406618:	cmp	w0, w1
  40661c:	b.le	40670c <wcrtomb@plt+0x17bc>
  406620:	mov	w1, #0xc0000000            	// #-1073741824
  406624:	add	w0, w0, w1
  406628:	bl	425d94 <wcrtomb@plt+0x20e44>
  40662c:	cmp	w0, #0x0
  406630:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  406634:	cset	w0, ne  // ne = any
  406638:	cbz	w0, 406648 <wcrtomb@plt+0x16f8>
  40663c:	ldr	x0, [x19, #744]
  406640:	ldr	x0, [x0]
  406644:	bl	424d60 <wcrtomb@plt+0x1fe10>
  406648:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  40664c:	ldr	x0, [x19, #744]
  406650:	ldr	x2, [x1, #696]
  406654:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  406658:	add	x0, x0, #0x8
  40665c:	str	x0, [x19, #744]
  406660:	ldr	x1, [x1, #856]
  406664:	add	x1, x2, x1, lsl #3
  406668:	cmp	x0, x1
  40666c:	b.ne	406714 <wcrtomb@plt+0x17c4>  // b.any
  406670:	mov	w0, #0x1                   	// #1
  406674:	str	x2, [x19, #744]
  406678:	str	w0, [x22, #544]
  40667c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406680:	adrp	x25, 46e000 <_obstack_memory_used@@Base+0x36380>
  406684:	mov	x20, x0
  406688:	add	x25, x25, #0x6c8
  40668c:	ldr	x1, [x0, #776]
  406690:	cbz	x1, 40677c <wcrtomb@plt+0x182c>
  406694:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406698:	ldr	x0, [x0, #672]
  40669c:	cbz	x0, 4066a4 <wcrtomb@plt+0x1754>
  4066a0:	bl	4064b0 <wcrtomb@plt+0x1560>
  4066a4:	ldr	x0, [x19, #744]
  4066a8:	ldr	w1, [x25, #288]
  4066ac:	add	w1, w1, #0x1
  4066b0:	bl	41e58c <wcrtomb@plt+0x1963c>
  4066b4:	cbz	w0, 40671c <wcrtomb@plt+0x17cc>
  4066b8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4066bc:	ldr	x0, [x0, #1016]
  4066c0:	cbz	x0, 4066c8 <wcrtomb@plt+0x1778>
  4066c4:	blr	x0
  4066c8:	mov	w2, #0x5                   	// #5
  4066cc:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  4066d0:	mov	x0, #0x0                   	// #0
  4066d4:	add	x1, x1, #0xca6
  4066d8:	bl	404d00 <dcgettext@plt>
  4066dc:	mov	x19, x0
  4066e0:	ldr	x0, [x20, #776]
  4066e4:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  4066e8:	mov	x3, x0
  4066ec:	mov	x2, x19
  4066f0:	mov	w1, #0x0                   	// #0
  4066f4:	mov	w0, #0x0                   	// #0
  4066f8:	bl	4042e0 <error@plt>
  4066fc:	bl	40d47c <wcrtomb@plt+0x852c>
  406700:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  406704:	ldr	x0, [x0, #1176]
  406708:	b	4065ac <wcrtomb@plt+0x165c>
  40670c:	bl	4048c0 <close@plt>
  406710:	b	40662c <wcrtomb@plt+0x16dc>
  406714:	ldr	w0, [x22, #544]
  406718:	cbnz	w0, 40667c <wcrtomb@plt+0x172c>
  40671c:	ldr	x20, [x19, #744]
  406720:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  406724:	add	x1, x1, #0x8dc
  406728:	ldr	x25, [x20]
  40672c:	mov	x0, x25
  406730:	bl	404a30 <strcmp@plt>
  406734:	cbnz	w0, 406a1c <wcrtomb@plt+0x1acc>
  406738:	mov	w0, #0x1                   	// #1
  40673c:	str	wzr, [x21, #984]
  406740:	strb	w0, [x22, #529]
  406744:	ldr	w0, [x21, #984]
  406748:	tbz	w0, #31, 406bc8 <wcrtomb@plt+0x1c78>
  40674c:	ldr	x0, [x19, #744]
  406750:	ldr	x0, [x0]
  406754:	bl	424e84 <wcrtomb@plt+0x1ff34>
  406758:	ldrb	w0, [x24, #850]
  40675c:	cbnz	w0, 40667c <wcrtomb@plt+0x172c>
  406760:	cmp	w23, #0x1
  406764:	b.ne	40667c <wcrtomb@plt+0x172c>  // b.any
  406768:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40676c:	ldrb	w0, [x0, #765]
  406770:	cbz	w0, 40667c <wcrtomb@plt+0x172c>
  406774:	bl	4185a4 <wcrtomb@plt+0x13654>
  406778:	b	40667c <wcrtomb@plt+0x172c>
  40677c:	ldr	x27, [x22, #536]
  406780:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  406784:	adrp	x26, 446000 <_obstack_memory_used@@Base+0xe380>
  406788:	add	x20, x20, #0x488
  40678c:	add	x26, x26, #0xe21
  406790:	stp	xzr, xzr, [sp, #112]
  406794:	mov	w0, #0x7                   	// #7
  406798:	ldr	x1, [x20]
  40679c:	bl	404cb0 <fputc_unlocked@plt>
  4067a0:	ldr	x5, [x20]
  4067a4:	mov	x1, x26
  4067a8:	mov	w2, #0x5                   	// #5
  4067ac:	mov	x0, #0x0                   	// #0
  4067b0:	str	x5, [sp, #104]
  4067b4:	bl	404d00 <dcgettext@plt>
  4067b8:	mov	x28, x0
  4067bc:	ldr	x0, [x19, #744]
  4067c0:	ldr	w3, [x25, #288]
  4067c4:	ldr	x0, [x0]
  4067c8:	add	w3, w3, #0x1
  4067cc:	str	w3, [sp, #100]
  4067d0:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  4067d4:	mov	x4, x0
  4067d8:	ldr	w3, [sp, #100]
  4067dc:	mov	x2, x28
  4067e0:	ldr	x5, [sp, #104]
  4067e4:	mov	w1, #0x1                   	// #1
  4067e8:	mov	x0, x5
  4067ec:	bl	404a20 <__fprintf_chk@plt>
  4067f0:	ldr	x0, [x20]
  4067f4:	bl	404bf0 <fflush_unlocked@plt>
  4067f8:	mov	x2, x27
  4067fc:	add	x1, sp, #0x78
  406800:	add	x0, sp, #0x70
  406804:	bl	404ab0 <getline@plt>
  406808:	cmp	x0, #0x0
  40680c:	b.gt	406890 <wcrtomb@plt+0x1940>
  406810:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406814:	mov	x19, x0
  406818:	ldr	x1, [x0, #1016]
  40681c:	cbz	x1, 406824 <wcrtomb@plt+0x18d4>
  406820:	blr	x1
  406824:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  406828:	add	x1, x1, #0xcb8
  40682c:	mov	w2, #0x5                   	// #5
  406830:	mov	x0, #0x0                   	// #0
  406834:	bl	404d00 <dcgettext@plt>
  406838:	mov	w1, #0x0                   	// #0
  40683c:	mov	x2, x0
  406840:	mov	w0, #0x0                   	// #0
  406844:	bl	4042e0 <error@plt>
  406848:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40684c:	ldr	w0, [x0, #868]
  406850:	sub	w0, w0, #0x5
  406854:	cmp	w0, #0x2
  406858:	b.ls	4066fc <wcrtomb@plt+0x17ac>  // b.plast
  40685c:	ldr	x0, [x19, #1016]
  406860:	cbz	x0, 406868 <wcrtomb@plt+0x1918>
  406864:	blr	x0
  406868:	mov	w2, #0x5                   	// #5
  40686c:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  406870:	mov	x0, #0x0                   	// #0
  406874:	add	x1, x1, #0xcda
  406878:	bl	404d00 <dcgettext@plt>
  40687c:	mov	x2, x0
  406880:	mov	w1, #0x0                   	// #0
  406884:	mov	w0, #0x0                   	// #0
  406888:	bl	4042e0 <error@plt>
  40688c:	b	4066fc <wcrtomb@plt+0x17ac>
  406890:	ldr	x0, [sp, #112]
  406894:	ldrb	w1, [x0]
  406898:	cmp	w1, #0xa
  40689c:	b.eq	4069d0 <wcrtomb@plt+0x1a80>  // b.none
  4068a0:	and	w2, w1, #0xffffffdf
  4068a4:	cmp	w2, #0x59
  4068a8:	b.eq	4069d0 <wcrtomb@plt+0x1a80>  // b.none
  4068ac:	cmp	w1, #0x3f
  4068b0:	b.eq	406908 <wcrtomb@plt+0x19b8>  // b.none
  4068b4:	b.hi	4068d4 <wcrtomb@plt+0x1984>  // b.pmore
  4068b8:	cmp	w1, #0x21
  4068bc:	b.eq	406a08 <wcrtomb@plt+0x1ab8>  // b.none
  4068c0:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  4068c4:	mov	w2, #0x5                   	// #5
  4068c8:	add	x1, x1, #0xe00
  4068cc:	ldr	x28, [x20]
  4068d0:	b	406974 <wcrtomb@plt+0x1a24>
  4068d4:	cmp	w1, #0x6e
  4068d8:	b.eq	406990 <wcrtomb@plt+0x1a40>  // b.none
  4068dc:	cmp	w1, #0x71
  4068e0:	b.ne	4068c0 <wcrtomb@plt+0x1970>  // b.any
  4068e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4068e8:	mov	x19, x0
  4068ec:	ldr	x1, [x0, #1016]
  4068f0:	cbz	x1, 4068f8 <wcrtomb@plt+0x19a8>
  4068f4:	blr	x1
  4068f8:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  4068fc:	mov	w2, #0x5                   	// #5
  406900:	add	x1, x1, #0xdc2
  406904:	b	406830 <wcrtomb@plt+0x18e0>
  406908:	ldr	x28, [x20]
  40690c:	mov	w2, #0x5                   	// #5
  406910:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  406914:	mov	x0, #0x0                   	// #0
  406918:	add	x1, x1, #0xcf9
  40691c:	bl	404d00 <dcgettext@plt>
  406920:	mov	w1, #0x1                   	// #1
  406924:	mov	x2, x0
  406928:	mov	x0, x28
  40692c:	bl	404a20 <__fprintf_chk@plt>
  406930:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406934:	ldrb	w0, [x0, #784]
  406938:	cbnz	w0, 406964 <wcrtomb@plt+0x1a14>
  40693c:	ldr	x28, [x20]
  406940:	mov	w2, #0x5                   	// #5
  406944:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  406948:	mov	x0, #0x0                   	// #0
  40694c:	add	x1, x1, #0xd81
  406950:	bl	404d00 <dcgettext@plt>
  406954:	mov	w1, #0x1                   	// #1
  406958:	mov	x2, x0
  40695c:	mov	x0, x28
  406960:	bl	404a20 <__fprintf_chk@plt>
  406964:	ldr	x28, [x20]
  406968:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  40696c:	add	x1, x1, #0xda2
  406970:	mov	w2, #0x5                   	// #5
  406974:	mov	x0, #0x0                   	// #0
  406978:	bl	404d00 <dcgettext@plt>
  40697c:	mov	w1, #0x1                   	// #1
  406980:	mov	x2, x0
  406984:	mov	x0, x28
  406988:	bl	404a20 <__fprintf_chk@plt>
  40698c:	b	406794 <wcrtomb@plt+0x1844>
  406990:	ldrb	w1, [x0, #1]
  406994:	add	x0, x0, #0x1
  406998:	cmp	w1, #0x20
  40699c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4069a0:	b.eq	406990 <wcrtomb@plt+0x1a40>  // b.none
  4069a4:	mov	x1, x0
  4069a8:	ldrb	w2, [x1]
  4069ac:	cmp	w2, #0x0
  4069b0:	ccmp	w2, #0xa, #0x4, ne  // ne = any
  4069b4:	b.ne	4069dc <wcrtomb@plt+0x1a8c>  // b.any
  4069b8:	strb	wzr, [x1]
  4069bc:	ldrb	w1, [x0]
  4069c0:	cbz	w1, 4069e4 <wcrtomb@plt+0x1a94>
  4069c4:	ldr	x20, [x19, #744]
  4069c8:	bl	436f10 <argp_usage@@Base+0x9a30>
  4069cc:	str	x0, [x20]
  4069d0:	ldr	x0, [sp, #112]
  4069d4:	bl	404ae0 <free@plt>
  4069d8:	b	40671c <wcrtomb@plt+0x17cc>
  4069dc:	add	x1, x1, #0x1
  4069e0:	b	4069a8 <wcrtomb@plt+0x1a58>
  4069e4:	ldr	x28, [x20]
  4069e8:	mov	w2, #0x5                   	// #5
  4069ec:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  4069f0:	mov	x0, #0x0                   	// #0
  4069f4:	add	x1, x1, #0xddb
  4069f8:	bl	404d00 <dcgettext@plt>
  4069fc:	mov	x1, x28
  406a00:	bl	404290 <fputs@plt>
  406a04:	b	406794 <wcrtomb@plt+0x1844>
  406a08:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406a0c:	ldrb	w0, [x0, #784]
  406a10:	cbnz	w0, 4068c0 <wcrtomb@plt+0x1970>
  406a14:	bl	41d9f0 <wcrtomb@plt+0x18aa0>
  406a18:	b	406794 <wcrtomb@plt+0x1844>
  406a1c:	ldrb	w0, [x24, #850]
  406a20:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  406a24:	cbz	w0, 406a80 <wcrtomb@plt+0x1b30>
  406a28:	ldrb	w0, [x26, #1024]
  406a2c:	cbnz	w0, 406b94 <wcrtomb@plt+0x1c44>
  406a30:	mov	w1, #0x3a                  	// #58
  406a34:	mov	x0, x25
  406a38:	bl	404b90 <strchr@plt>
  406a3c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  406a40:	str	x0, [x1, #1032]
  406a44:	cbz	x0, 406b94 <wcrtomb@plt+0x1c44>
  406a48:	ldr	x25, [x20]
  406a4c:	cmp	x0, x25
  406a50:	b.ls	406b94 <wcrtomb@plt+0x1c44>  // b.plast
  406a54:	sub	x2, x0, x25
  406a58:	mov	w1, #0x2f                  	// #47
  406a5c:	mov	x0, x25
  406a60:	bl	404c90 <memchr@plt>
  406a64:	cbnz	x0, 406b94 <wcrtomb@plt+0x1c44>
  406a68:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406a6c:	mov	w2, #0x40000000            	// #1073741824
  406a70:	mov	w1, #0x42                  	// #66
  406a74:	ldr	x3, [x0, #816]
  406a78:	mov	x0, x25
  406a7c:	b	406b78 <wcrtomb@plt+0x1c28>
  406a80:	cmp	w23, #0x1
  406a84:	b.eq	406b08 <wcrtomb@plt+0x1bb8>  // b.none
  406a88:	ldrb	w0, [x26, #1024]
  406a8c:	cmp	w23, #0x2
  406a90:	b.eq	406a2c <wcrtomb@plt+0x1adc>  // b.none
  406a94:	cbnz	w0, 406af4 <wcrtomb@plt+0x1ba4>
  406a98:	mov	w1, #0x3a                  	// #58
  406a9c:	mov	x0, x25
  406aa0:	bl	404b90 <strchr@plt>
  406aa4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  406aa8:	str	x0, [x1, #1032]
  406aac:	cbz	x0, 406af4 <wcrtomb@plt+0x1ba4>
  406ab0:	ldr	x25, [x20]
  406ab4:	cmp	x0, x25
  406ab8:	b.ls	406af4 <wcrtomb@plt+0x1ba4>  // b.plast
  406abc:	sub	x2, x0, x25
  406ac0:	mov	w1, #0x2f                  	// #47
  406ac4:	mov	x0, x25
  406ac8:	bl	404c90 <memchr@plt>
  406acc:	cbnz	x0, 406af4 <wcrtomb@plt+0x1ba4>
  406ad0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406ad4:	mov	w2, #0x40000000            	// #1073741824
  406ad8:	mov	w1, #0x0                   	// #0
  406adc:	ldr	x3, [x0, #816]
  406ae0:	mov	x0, x25
  406ae4:	bl	425898 <wcrtomb@plt+0x20948>
  406ae8:	str	w0, [x21, #984]
  406aec:	bl	4056c4 <wcrtomb@plt+0x774>
  406af0:	b	406744 <wcrtomb@plt+0x17f4>
  406af4:	ldr	x0, [x20]
  406af8:	mov	w2, #0x1b6                 	// #438
  406afc:	mov	w1, #0x0                   	// #0
  406b00:	bl	404630 <open@plt>
  406b04:	b	406ae8 <wcrtomb@plt+0x1b98>
  406b08:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406b0c:	ldrb	w0, [x0, #765]
  406b10:	cbz	w0, 406b20 <wcrtomb@plt+0x1bd0>
  406b14:	mov	w1, w23
  406b18:	mov	x0, x25
  406b1c:	bl	4186e4 <wcrtomb@plt+0x13794>
  406b20:	ldrb	w0, [x26, #1024]
  406b24:	ldr	x25, [x19, #744]
  406b28:	cbnz	w0, 406b80 <wcrtomb@plt+0x1c30>
  406b2c:	ldr	x0, [x25]
  406b30:	mov	w1, #0x3a                  	// #58
  406b34:	bl	404b90 <strchr@plt>
  406b38:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  406b3c:	str	x0, [x1, #1032]
  406b40:	cbz	x0, 406b80 <wcrtomb@plt+0x1c30>
  406b44:	ldr	x20, [x25]
  406b48:	cmp	x0, x20
  406b4c:	b.ls	406b80 <wcrtomb@plt+0x1c30>  // b.plast
  406b50:	sub	x2, x0, x20
  406b54:	mov	w1, #0x2f                  	// #47
  406b58:	mov	x0, x20
  406b5c:	bl	404c90 <memchr@plt>
  406b60:	cbnz	x0, 406b80 <wcrtomb@plt+0x1c30>
  406b64:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406b68:	mov	w2, #0x40000000            	// #1073741824
  406b6c:	mov	w1, #0x41                  	// #65
  406b70:	ldr	x3, [x0, #816]
  406b74:	mov	x0, x20
  406b78:	bl	425898 <wcrtomb@plt+0x20948>
  406b7c:	b	406b8c <wcrtomb@plt+0x1c3c>
  406b80:	ldr	x0, [x25]
  406b84:	mov	w1, #0x1b6                 	// #438
  406b88:	bl	404ee0 <creat@plt>
  406b8c:	str	w0, [x21, #984]
  406b90:	b	406744 <wcrtomb@plt+0x17f4>
  406b94:	ldr	x0, [x20]
  406b98:	mov	w2, #0x1b6                 	// #438
  406b9c:	mov	w1, #0x42                  	// #66
  406ba0:	bl	404630 <open@plt>
  406ba4:	b	406b8c <wcrtomb@plt+0x1c3c>
  406ba8:	mov	w0, #0x0                   	// #0
  406bac:	ldp	x19, x20, [sp, #16]
  406bb0:	ldp	x21, x22, [sp, #32]
  406bb4:	ldp	x23, x24, [sp, #48]
  406bb8:	ldp	x25, x26, [sp, #64]
  406bbc:	ldp	x27, x28, [sp, #80]
  406bc0:	ldp	x29, x30, [sp], #128
  406bc4:	ret
  406bc8:	mov	w0, #0x1                   	// #1
  406bcc:	b	406bac <wcrtomb@plt+0x1c5c>
  406bd0:	stp	x29, x30, [sp, #-48]!
  406bd4:	mov	x29, sp
  406bd8:	stp	x19, x20, [sp, #16]
  406bdc:	str	x21, [sp, #32]
  406be0:	mov	x21, x0
  406be4:	bl	404280 <strlen@plt>
  406be8:	cbz	x0, 406c70 <wcrtomb@plt+0x1d20>
  406bec:	sub	x19, x0, #0x1
  406bf0:	add	x19, x21, x19
  406bf4:	cmp	x19, x21
  406bf8:	b.ls	406c70 <wcrtomb@plt+0x1d20>  // b.plast
  406bfc:	bl	404a60 <__ctype_b_loc@plt>
  406c00:	ldrb	w1, [x19]
  406c04:	ldr	x0, [x0]
  406c08:	ldrh	w0, [x0, x1, lsl #1]
  406c0c:	tbnz	w0, #11, 406c68 <wcrtomb@plt+0x1d18>
  406c10:	sub	x19, x19, #0x7
  406c14:	cmp	x19, x21
  406c18:	b.ls	406c70 <wcrtomb@plt+0x1d20>  // b.plast
  406c1c:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  406c20:	mov	x0, x19
  406c24:	add	x1, x1, #0xe4c
  406c28:	mov	x2, #0x8                   	// #8
  406c2c:	bl	4049f0 <memcmp@plt>
  406c30:	cbnz	w0, 406c70 <wcrtomb@plt+0x1d20>
  406c34:	sub	x19, x19, x21
  406c38:	add	x0, x19, #0x1
  406c3c:	bl	436d44 <argp_usage@@Base+0x9864>
  406c40:	mov	x20, x0
  406c44:	mov	x2, x19
  406c48:	mov	x1, x21
  406c4c:	bl	404200 <memcpy@plt>
  406c50:	strb	wzr, [x20, x19]
  406c54:	mov	x0, x20
  406c58:	ldp	x19, x20, [sp, #16]
  406c5c:	ldr	x21, [sp, #32]
  406c60:	ldp	x29, x30, [sp], #48
  406c64:	ret
  406c68:	sub	x19, x19, #0x1
  406c6c:	b	406bf4 <wcrtomb@plt+0x1ca4>
  406c70:	mov	x20, #0x0                   	// #0
  406c74:	b	406c54 <wcrtomb@plt+0x1d04>
  406c78:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  406c7c:	ldr	x0, [x0, #1760]
  406c80:	mov	x16, x0
  406c84:	br	x16
  406c88:	stp	x29, x30, [sp, #-80]!
  406c8c:	mov	x29, sp
  406c90:	stp	x21, x22, [sp, #32]
  406c94:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  406c98:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  406c9c:	ldr	w0, [x21, #3968]
  406ca0:	stp	x19, x20, [sp, #16]
  406ca4:	stp	x23, x24, [sp, #48]
  406ca8:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  406cac:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  406cb0:	cbnz	w0, 406e98 <wcrtomb@plt+0x1f48>
  406cb4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  406cb8:	ldrb	w0, [x1, #1000]
  406cbc:	cbz	w0, 406e98 <wcrtomb@plt+0x1f48>
  406cc0:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  406cc4:	mov	w0, #0x1                   	// #1
  406cc8:	strb	wzr, [x1, #1000]
  406ccc:	mov	w1, #0x4                   	// #4
  406cd0:	str	w0, [x21, #3968]
  406cd4:	add	x2, sp, #0x48
  406cd8:	strh	w1, [sp, #72]
  406cdc:	mov	w1, #0x3fffffff            	// #1073741823
  406ce0:	str	w0, [sp, #76]
  406ce4:	ldr	w0, [x20, #984]
  406ce8:	cmp	w0, w1
  406cec:	b.le	406d40 <wcrtomb@plt+0x1df0>
  406cf0:	mov	w3, #0xc0000000            	// #-1073741824
  406cf4:	mov	w1, #0x6d01                	// #27905
  406cf8:	add	w0, w0, w3
  406cfc:	movk	w1, #0x4008, lsl #16
  406d00:	bl	4260bc <wcrtomb@plt+0x2116c>
  406d04:	mvn	w0, w0
  406d08:	lsr	w0, w0, #31
  406d0c:	cbnz	w0, 406d84 <wcrtomb@plt+0x1e34>
  406d10:	bl	404e10 <__errno_location@plt>
  406d14:	ldr	w0, [x0]
  406d18:	cmp	w0, #0x5
  406d1c:	b.eq	406d50 <wcrtomb@plt+0x1e00>  // b.none
  406d20:	ldr	w0, [x20, #984]
  406d24:	mov	w1, #0x3fffffff            	// #1073741823
  406d28:	cmp	w0, w1
  406d2c:	b.gt	406de4 <wcrtomb@plt+0x1e94>
  406d30:	mov	w2, #0x1                   	// #1
  406d34:	mov	x1, #0x0                   	// #0
  406d38:	bl	404480 <lseek@plt>
  406d3c:	b	406df8 <wcrtomb@plt+0x1ea8>
  406d40:	mov	x1, #0x6d01                	// #27905
  406d44:	movk	x1, #0x4008, lsl #16
  406d48:	bl	404f00 <ioctl@plt>
  406d4c:	b	406d04 <wcrtomb@plt+0x1db4>
  406d50:	ldr	w0, [x20, #984]
  406d54:	mov	w1, #0x3fffffff            	// #1073741823
  406d58:	add	x2, sp, #0x48
  406d5c:	cmp	w0, w1
  406d60:	b.le	406dd4 <wcrtomb@plt+0x1e84>
  406d64:	mov	w3, #0xc0000000            	// #-1073741824
  406d68:	mov	w1, #0x6d01                	// #27905
  406d6c:	add	w0, w0, w3
  406d70:	movk	w1, #0x4008, lsl #16
  406d74:	bl	4260bc <wcrtomb@plt+0x2116c>
  406d78:	mvn	w0, w0
  406d7c:	lsr	w0, w0, #31
  406d80:	cbz	w0, 406d20 <wcrtomb@plt+0x1dd0>
  406d84:	ldr	x0, [x22, #3952]
  406d88:	ldr	x1, [x23, #3992]
  406d8c:	ldrsw	x2, [x24, #756]
  406d90:	sub	x1, x0, x1
  406d94:	asr	x3, x1, #9
  406d98:	cmp	x2, x1, asr #9
  406d9c:	b.le	406e98 <wcrtomb@plt+0x1f48>
  406da0:	sub	x2, x2, x3
  406da4:	mov	w1, #0x0                   	// #0
  406da8:	lsl	x2, x2, #9
  406dac:	bl	404700 <memset@plt>
  406db0:	ldr	x1, [x23, #3992]
  406db4:	ldrsw	x0, [x24, #756]
  406db8:	add	x0, x1, x0, lsl #9
  406dbc:	str	x0, [x22, #3952]
  406dc0:	ldp	x19, x20, [sp, #16]
  406dc4:	ldp	x21, x22, [sp, #32]
  406dc8:	ldp	x23, x24, [sp, #48]
  406dcc:	ldp	x29, x30, [sp], #80
  406dd0:	ret
  406dd4:	mov	x1, #0x6d01                	// #27905
  406dd8:	movk	x1, #0x4008, lsl #16
  406ddc:	bl	404f00 <ioctl@plt>
  406de0:	b	406d78 <wcrtomb@plt+0x1e28>
  406de4:	mov	w3, #0xc0000000            	// #-1073741824
  406de8:	mov	w2, #0x1                   	// #1
  406dec:	add	w0, w0, w3
  406df0:	mov	x1, #0x0                   	// #0
  406df4:	bl	425f8c <wcrtomb@plt+0x2103c>
  406df8:	ldr	x1, [x23, #3992]
  406dfc:	mov	w2, #0x0                   	// #0
  406e00:	ldr	x19, [x22, #3952]
  406e04:	sub	x19, x19, x1
  406e08:	mov	w1, #0x3fffffff            	// #1073741823
  406e0c:	subs	x0, x0, x19
  406e10:	csel	x19, x0, xzr, pl  // pl = nfrst
  406e14:	ldr	w0, [x20, #984]
  406e18:	cmp	w0, w1
  406e1c:	mov	x1, x19
  406e20:	b.le	406e90 <wcrtomb@plt+0x1f40>
  406e24:	mov	w3, #0xc0000000            	// #-1073741824
  406e28:	add	w0, w0, w3
  406e2c:	bl	425f8c <wcrtomb@plt+0x2103c>
  406e30:	cmp	x19, x0
  406e34:	b.eq	406d84 <wcrtomb@plt+0x1e34>  // b.none
  406e38:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406e3c:	ldr	x0, [x0, #1016]
  406e40:	cbz	x0, 406e48 <wcrtomb@plt+0x1ef8>
  406e44:	blr	x0
  406e48:	mov	w2, #0x5                   	// #5
  406e4c:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  406e50:	mov	x0, #0x0                   	// #0
  406e54:	add	x1, x1, #0xe55
  406e58:	bl	404d00 <dcgettext@plt>
  406e5c:	mov	x2, x0
  406e60:	mov	w1, #0x0                   	// #0
  406e64:	mov	w0, #0x0                   	// #0
  406e68:	bl	4042e0 <error@plt>
  406e6c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  406e70:	ldr	x0, [x23, #3992]
  406e74:	ldr	x2, [x1, #1008]
  406e78:	cmp	x0, x2
  406e7c:	b.eq	406d84 <wcrtomb@plt+0x1e34>  // b.none
  406e80:	sub	x2, x2, x0
  406e84:	mov	w1, #0x0                   	// #0
  406e88:	bl	404700 <memset@plt>
  406e8c:	b	406d84 <wcrtomb@plt+0x1e34>
  406e90:	bl	404480 <lseek@plt>
  406e94:	b	406e30 <wcrtomb@plt+0x1ee0>
  406e98:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  406e9c:	add	x1, x1, #0x4b8
  406ea0:	ldr	x0, [x23, #3992]
  406ea4:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  406ea8:	ldr	x2, [x22, #3952]
  406eac:	ldr	x5, [x1, #520]
  406eb0:	sub	x2, x2, x0
  406eb4:	ldr	x4, [x3, #4016]
  406eb8:	str	x0, [x3, #4016]
  406ebc:	add	x2, x5, x2, asr #9
  406ec0:	str	x2, [x1, #520]
  406ec4:	ldrsw	x2, [x24, #756]
  406ec8:	add	x2, x0, x2, lsl #9
  406ecc:	str	x2, [x22, #3952]
  406ed0:	ldr	w2, [x21, #3968]
  406ed4:	cmp	w2, #0x1
  406ed8:	b.eq	406ef0 <wcrtomb@plt+0x1fa0>  // b.none
  406edc:	cmp	w2, #0x2
  406ee0:	b.eq	406f00 <wcrtomb@plt+0x1fb0>  // b.none
  406ee4:	cbnz	w2, 406dc0 <wcrtomb@plt+0x1e70>
  406ee8:	bl	406c78 <wcrtomb@plt+0x1d28>
  406eec:	b	406dc0 <wcrtomb@plt+0x1e70>
  406ef0:	ldr	x1, [x1, #560]
  406ef4:	sub	x0, x4, x0
  406ef8:	blr	x1
  406efc:	b	406dc0 <wcrtomb@plt+0x1e70>
  406f00:	bl	404970 <abort@plt>
  406f04:	stp	x29, x30, [sp, #-48]!
  406f08:	mov	x29, sp
  406f0c:	stp	x19, x20, [sp, #16]
  406f10:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  406f14:	stp	x21, x22, [sp, #32]
  406f18:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  406f1c:	mov	x22, x20
  406f20:	ldr	x1, [x20, #4016]
  406f24:	ldr	x0, [x21, #3952]
  406f28:	cmp	x1, x0
  406f2c:	b.ne	406f64 <wcrtomb@plt+0x2014>  // b.any
  406f30:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  406f34:	add	x19, x19, #0x4b8
  406f38:	ldrb	w0, [x19, #528]
  406f3c:	cbnz	w0, 406f5c <wcrtomb@plt+0x200c>
  406f40:	bl	406c88 <wcrtomb@plt+0x1d38>
  406f44:	ldr	x1, [x20, #4016]
  406f48:	ldr	x0, [x21, #3952]
  406f4c:	cmp	x1, x0
  406f50:	b.ne	406f64 <wcrtomb@plt+0x2014>  // b.any
  406f54:	mov	w0, #0x1                   	// #1
  406f58:	strb	w0, [x19, #528]
  406f5c:	mov	x0, #0x0                   	// #0
  406f60:	b	406f68 <wcrtomb@plt+0x2018>
  406f64:	ldr	x0, [x22, #4016]
  406f68:	ldp	x19, x20, [sp, #16]
  406f6c:	ldp	x21, x22, [sp, #32]
  406f70:	ldp	x29, x30, [sp], #48
  406f74:	ret
  406f78:	stp	x29, x30, [sp, #-32]!
  406f7c:	mov	x29, sp
  406f80:	stp	x19, x20, [sp, #16]
  406f84:	mov	x20, x0
  406f88:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406f8c:	ldr	w0, [x0, #824]
  406f90:	cmp	w0, #0x4
  406f94:	b.ne	406fbc <wcrtomb@plt+0x206c>  // b.any
  406f98:	mov	x2, x20
  406f9c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  406fa0:	ldp	x19, x20, [sp, #16]
  406fa4:	add	x1, x1, #0x4b8
  406fa8:	ldp	x29, x30, [sp], #32
  406fac:	add	x1, x1, #0x50
  406fb0:	adrp	x0, 446000 <_obstack_memory_used@@Base+0xe380>
  406fb4:	add	x0, x0, #0xe94
  406fb8:	b	4122e8 <wcrtomb@plt+0xd398>
  406fbc:	bl	406f04 <wcrtomb@plt+0x1fb4>
  406fc0:	mov	x19, x0
  406fc4:	mov	x2, #0x200                 	// #512
  406fc8:	mov	w1, #0x0                   	// #0
  406fcc:	bl	404700 <memset@plt>
  406fd0:	mov	x2, #0x64                  	// #100
  406fd4:	mov	x1, x20
  406fd8:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  406fdc:	add	x20, x20, #0x68
  406fe0:	mov	x0, x19
  406fe4:	bl	404660 <__strcpy_chk@plt>
  406fe8:	mov	x1, x19
  406fec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  406ff0:	add	x0, x0, #0x70
  406ff4:	bl	417c2c <wcrtomb@plt+0x12cdc>
  406ff8:	ldr	x0, [x20, #8]
  406ffc:	bl	42de70 <argp_usage@@Base+0x990>
  407000:	strb	w0, [x20, #16]
  407004:	mov	w0, #0x56                  	// #86
  407008:	strb	w0, [x19, #156]
  40700c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407010:	add	x1, x19, #0x88
  407014:	mov	x2, #0xc                   	// #12
  407018:	ldr	x0, [x0, #720]
  40701c:	bl	40a8a8 <wcrtomb@plt+0x5958>
  407020:	mov	x1, x19
  407024:	mov	x0, x20
  407028:	mov	x2, #0xffffffffffffffff    	// #-1
  40702c:	bl	40aacc <wcrtomb@plt+0x5b7c>
  407030:	mov	x0, x19
  407034:	ldp	x19, x20, [sp, #16]
  407038:	ldp	x29, x30, [sp], #32
  40703c:	b	405c98 <wcrtomb@plt+0xd48>
  407040:	stp	x29, x30, [sp, #-80]!
  407044:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  407048:	mov	x29, sp
  40704c:	ldrsw	x0, [x0, #2028]
  407050:	add	x1, sp, #0x38
  407054:	str	x21, [sp, #32]
  407058:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  40705c:	stp	x19, x20, [sp, #16]
  407060:	bl	431400 <argp_usage@@Base+0x3f20>
  407064:	mov	x20, x0
  407068:	ldr	x0, [x21, #656]
  40706c:	bl	404280 <strlen@plt>
  407070:	mov	x19, x0
  407074:	mov	x0, x20
  407078:	bl	404280 <strlen@plt>
  40707c:	add	x0, x19, x0
  407080:	add	x0, x0, #0x9
  407084:	bl	436d44 <argp_usage@@Base+0x9864>
  407088:	ldr	x4, [x21, #656]
  40708c:	mov	x6, x20
  407090:	adrp	x5, 446000 <_obstack_memory_used@@Base+0xe380>
  407094:	adrp	x3, 446000 <_obstack_memory_used@@Base+0xe380>
  407098:	add	x5, x5, #0xea5
  40709c:	add	x3, x3, #0xeac
  4070a0:	mov	x2, #0xffffffffffffffff    	// #-1
  4070a4:	mov	w1, #0x1                   	// #1
  4070a8:	mov	x19, x0
  4070ac:	bl	4042a0 <__sprintf_chk@plt>
  4070b0:	mov	x0, x19
  4070b4:	bl	406f78 <wcrtomb@plt+0x2028>
  4070b8:	mov	x0, x19
  4070bc:	ldp	x19, x20, [sp, #16]
  4070c0:	ldr	x21, [sp, #32]
  4070c4:	ldp	x29, x30, [sp], #80
  4070c8:	b	404ae0 <free@plt>
  4070cc:	stp	x29, x30, [sp, #-96]!
  4070d0:	mov	x29, sp
  4070d4:	stp	x19, x20, [sp, #16]
  4070d8:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4070dc:	add	x19, x19, #0x4b8
  4070e0:	stp	x21, x22, [sp, #32]
  4070e4:	mov	x22, x0
  4070e8:	adrp	x0, 406000 <wcrtomb@plt+0x10b0>
  4070ec:	add	x0, x0, #0x268
  4070f0:	stp	x23, x24, [sp, #48]
  4070f4:	stp	x25, x26, [sp, #64]
  4070f8:	str	x0, [x19, #560]
  4070fc:	bl	405588 <wcrtomb@plt+0x638>
  407100:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  407104:	mov	x21, x0
  407108:	ldr	x1, [x1, #928]
  40710c:	cmp	x0, x1
  407110:	b.eq	407124 <wcrtomb@plt+0x21d4>  // b.none
  407114:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  407118:	ldrb	w2, [x2, #84]
  40711c:	cbnz	w2, 407124 <wcrtomb@plt+0x21d4>
  407120:	bl	406218 <wcrtomb@plt+0x12c8>
  407124:	cbz	x21, 407138 <wcrtomb@plt+0x21e8>
  407128:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  40712c:	ldr	x0, [x2, #3960]
  407130:	add	x0, x0, #0x1
  407134:	str	x0, [x2, #3960]
  407138:	scvtf	d0, x21
  40713c:	ldr	d1, [x19, #64]
  407140:	cmp	x21, x1
  407144:	fadd	d0, d0, d1
  407148:	str	d0, [x19, #64]
  40714c:	b.eq	407330 <wcrtomb@plt+0x23e0>  // b.none
  407150:	mov	x0, x21
  407154:	bl	4052f0 <wcrtomb@plt+0x3a0>
  407158:	tst	x21, #0x1ff
  40715c:	mov	x20, x0
  407160:	b.eq	4071ac <wcrtomb@plt+0x225c>  // b.none
  407164:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407168:	ldr	x0, [x0, #1016]
  40716c:	cbz	x0, 407174 <wcrtomb@plt+0x2224>
  407170:	blr	x0
  407174:	mov	w2, #0x5                   	// #5
  407178:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  40717c:	mov	x0, #0x0                   	// #0
  407180:	add	x1, x1, #0xeb5
  407184:	bl	404d00 <dcgettext@plt>
  407188:	mov	x2, x0
  40718c:	mov	w1, #0x0                   	// #0
  407190:	mov	w0, #0x0                   	// #0
  407194:	bl	4042e0 <error@plt>
  407198:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40719c:	mov	w1, #0x2                   	// #2
  4071a0:	str	w1, [x0, #3464]
  4071a4:	mov	x0, x21
  4071a8:	b	407120 <wcrtomb@plt+0x21d0>
  4071ac:	tbz	x21, #63, 4071cc <wcrtomb@plt+0x227c>
  4071b0:	bl	404e10 <__errno_location@plt>
  4071b4:	ldr	w1, [x0]
  4071b8:	cmp	w1, #0x1c
  4071bc:	b.eq	4071cc <wcrtomb@plt+0x227c>  // b.none
  4071c0:	sub	w1, w1, #0x5
  4071c4:	cmp	w1, #0x1
  4071c8:	b.hi	4071a4 <wcrtomb@plt+0x2254>  // b.pmore
  4071cc:	mov	w0, #0x1                   	// #1
  4071d0:	bl	406550 <wcrtomb@plt+0x1600>
  4071d4:	tst	w0, #0xff
  4071d8:	b.eq	407330 <wcrtomb@plt+0x23e0>  // b.none
  4071dc:	add	x0, x19, #0x50
  4071e0:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  4071e4:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x39380>
  4071e8:	bl	40565c <wcrtomb@plt+0x70c>
  4071ec:	ldr	d1, [x19, #64]
  4071f0:	ldr	d0, [x19, #512]
  4071f4:	ldr	w0, [x19, #24]
  4071f8:	ldr	x23, [x25, #3992]
  4071fc:	fadd	d0, d0, d1
  407200:	cmp	w0, #0x0
  407204:	str	xzr, [x19, #64]
  407208:	cset	w0, eq  // eq = none
  40720c:	str	w0, [x19, #24]
  407210:	add	x23, x23, x21
  407214:	sub	x21, x22, x21
  407218:	str	d0, [x19, #512]
  40721c:	bl	4054cc <wcrtomb@plt+0x57c>
  407220:	mov	w0, #0x1                   	// #1
  407224:	str	w0, [x19, #72]
  407228:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40722c:	ldr	x0, [x0, #656]
  407230:	cbz	x0, 407238 <wcrtomb@plt+0x22e8>
  407234:	bl	407040 <wcrtomb@plt+0x20f0>
  407238:	cbz	x20, 407298 <wcrtomb@plt+0x2348>
  40723c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407240:	ldr	w0, [x0, #824]
  407244:	cmp	w0, #0x4
  407248:	b.ne	407354 <wcrtomb@plt+0x2404>  // b.any
  40724c:	ldp	x2, x0, [x20, #16]
  407250:	add	x22, x19, #0x50
  407254:	ldr	x1, [x20, #32]
  407258:	sub	x0, x0, x1
  40725c:	mov	x1, x22
  407260:	str	x0, [sp, #88]
  407264:	adrp	x0, 446000 <_obstack_memory_used@@Base+0xe380>
  407268:	add	x0, x0, #0xedb
  40726c:	bl	4122e8 <wcrtomb@plt+0xd398>
  407270:	add	x2, x20, #0x20
  407274:	mov	x1, x22
  407278:	adrp	x0, 446000 <_obstack_memory_used@@Base+0xe380>
  40727c:	add	x0, x0, #0xeef
  407280:	bl	4122e8 <wcrtomb@plt+0xd398>
  407284:	adrp	x0, 446000 <_obstack_memory_used@@Base+0xe380>
  407288:	add	x2, sp, #0x58
  40728c:	mov	x1, x22
  407290:	add	x0, x0, #0xeff
  407294:	bl	4122e8 <wcrtomb@plt+0xd398>
  407298:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40729c:	add	x22, x19, #0x50
  4072a0:	mov	x2, x0
  4072a4:	mov	x1, x22
  4072a8:	mov	w0, #0x1                   	// #1
  4072ac:	bl	40aa40 <wcrtomb@plt+0x5af0>
  4072b0:	mov	x0, x22
  4072b4:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  4072b8:	cbz	x20, 4072c4 <wcrtomb@plt+0x2374>
  4072bc:	mov	x0, x20
  4072c0:	bl	405758 <wcrtomb@plt+0x808>
  4072c4:	bl	406f04 <wcrtomb@plt+0x1fb4>
  4072c8:	mov	x22, x0
  4072cc:	ldr	x1, [x25, #3992]
  4072d0:	sub	x1, x0, x1
  4072d4:	mov	x0, x20
  4072d8:	asr	x1, x1, #9
  4072dc:	bl	405548 <wcrtomb@plt+0x5f8>
  4072e0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4072e4:	mov	x24, x0
  4072e8:	str	wzr, [x19, #72]
  4072ec:	ldr	x20, [x0, #3952]
  4072f0:	sub	x20, x20, x22
  4072f4:	cmp	x20, x21
  4072f8:	b.cc	407434 <wcrtomb@plt+0x24e4>  // b.lo, b.ul, b.last
  4072fc:	mov	x2, x21
  407300:	mov	x1, x23
  407304:	mov	x0, x22
  407308:	bl	404200 <memcpy@plt>
  40730c:	sub	x2, x20, x21
  407310:	mov	w1, #0x0                   	// #0
  407314:	add	x0, x22, x21
  407318:	bl	404700 <memset@plt>
  40731c:	sub	x0, x21, #0x1
  407320:	and	x0, x0, #0xfffffffffffffe00
  407324:	add	x0, x22, x0
  407328:	bl	405c98 <wcrtomb@plt+0xd48>
  40732c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  407330:	adrp	x0, 407000 <wcrtomb@plt+0x20b0>
  407334:	add	x0, x0, #0xcc
  407338:	str	x0, [x19, #560]
  40733c:	ldp	x19, x20, [sp, #16]
  407340:	ldp	x21, x22, [sp, #32]
  407344:	ldp	x23, x24, [sp, #48]
  407348:	ldp	x25, x26, [sp, #64]
  40734c:	ldp	x29, x30, [sp], #96
  407350:	ret
  407354:	bl	406f04 <wcrtomb@plt+0x1fb4>
  407358:	mov	x22, x0
  40735c:	ldr	x0, [x20, #16]
  407360:	bl	404280 <strlen@plt>
  407364:	mov	x24, x0
  407368:	cmp	x0, #0x64
  40736c:	b.ls	4073b8 <wcrtomb@plt+0x2468>  // b.plast
  407370:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407374:	ldr	x0, [x0, #1016]
  407378:	cbz	x0, 407380 <wcrtomb@plt+0x2430>
  40737c:	blr	x0
  407380:	mov	w2, #0x5                   	// #5
  407384:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  407388:	mov	x0, #0x0                   	// #0
  40738c:	add	x1, x1, #0xf11
  407390:	bl	404d00 <dcgettext@plt>
  407394:	mov	x24, x0
  407398:	ldr	x0, [x20, #16]
  40739c:	bl	436084 <argp_usage@@Base+0x8ba4>
  4073a0:	mov	x3, x0
  4073a4:	mov	x2, x24
  4073a8:	mov	x24, #0x64                  	// #100
  4073ac:	mov	w1, #0x0                   	// #0
  4073b0:	mov	w0, #0x0                   	// #0
  4073b4:	bl	4042e0 <error@plt>
  4073b8:	mov	x0, x22
  4073bc:	mov	x2, #0x200                 	// #512
  4073c0:	mov	w1, #0x0                   	// #0
  4073c4:	bl	404700 <memset@plt>
  4073c8:	ldr	x1, [x20, #16]
  4073cc:	mov	x2, x24
  4073d0:	mov	x0, x22
  4073d4:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  4073d8:	bl	404200 <memcpy@plt>
  4073dc:	mov	w0, #0x4d                  	// #77
  4073e0:	strb	w0, [x22, #156]
  4073e4:	ldr	x0, [x20, #32]
  4073e8:	add	x1, x22, #0x7c
  4073ec:	mov	x2, #0xc                   	// #12
  4073f0:	bl	40a884 <wcrtomb@plt+0x5934>
  4073f4:	ldp	x3, x0, [x20, #24]
  4073f8:	add	x1, x22, #0x171
  4073fc:	mov	x2, #0xc                   	// #12
  407400:	sub	x0, x3, x0
  407404:	bl	40a884 <wcrtomb@plt+0x5934>
  407408:	mov	x1, x22
  40740c:	mov	x2, #0xffffffffffffffff    	// #-1
  407410:	ldr	w26, [x24, #652]
  407414:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407418:	str	wzr, [x24, #652]
  40741c:	add	x0, x0, #0x68
  407420:	bl	40aacc <wcrtomb@plt+0x5b7c>
  407424:	str	w26, [x24, #652]
  407428:	mov	x0, x22
  40742c:	bl	405c98 <wcrtomb@plt+0xd48>
  407430:	b	407298 <wcrtomb@plt+0x2348>
  407434:	mov	x2, x20
  407438:	mov	x1, x23
  40743c:	sub	x21, x21, x20
  407440:	add	x23, x23, x20
  407444:	sub	x20, x20, #0x1
  407448:	mov	x0, x22
  40744c:	and	x20, x20, #0xfffffffffffffe00
  407450:	bl	404200 <memcpy@plt>
  407454:	add	x0, x22, x20
  407458:	bl	405c98 <wcrtomb@plt+0xd48>
  40745c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  407460:	mov	x22, x0
  407464:	ldr	x20, [x24, #3952]
  407468:	sub	x20, x20, x0
  40746c:	b	4072f4 <wcrtomb@plt+0x23a4>
  407470:	stp	x29, x30, [sp, #-80]!
  407474:	mov	x29, sp
  407478:	stp	x19, x20, [sp, #16]
  40747c:	stp	x21, x22, [sp, #32]
  407480:	str	x23, [sp, #48]
  407484:	cbnz	x0, 407500 <wcrtomb@plt+0x25b0>
  407488:	add	x21, sp, #0x4f
  40748c:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  407490:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  407494:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  407498:	add	x20, x20, #0x4b8
  40749c:	ldr	x0, [x19, #3992]
  4074a0:	str	x0, [x22, #3952]
  4074a4:	mov	w0, #0x1                   	// #1
  4074a8:	ldrb	w23, [x20, #529]
  4074ac:	strb	w0, [x20, #529]
  4074b0:	bl	406f04 <wcrtomb@plt+0x1fb4>
  4074b4:	cmp	x0, #0x0
  4074b8:	cset	w0, eq  // eq = none
  4074bc:	strb	w0, [x21]
  4074c0:	ldr	x0, [x22, #3952]
  4074c4:	strb	w23, [x20, #529]
  4074c8:	ldr	x20, [x19, #3992]
  4074cc:	cmp	x20, x0
  4074d0:	b.ne	407508 <wcrtomb@plt+0x25b8>  // b.any
  4074d4:	ldr	x21, [x19, #3992]
  4074d8:	adrp	x19, 447000 <_obstack_memory_used@@Base+0xf380>
  4074dc:	add	x19, x19, #0x220
  4074e0:	mov	x20, #0x8                   	// #8
  4074e4:	add	x19, x19, #0x48
  4074e8:	ldp	x2, x1, [x19, #8]
  4074ec:	mov	x0, x21
  4074f0:	bl	4049f0 <memcmp@plt>
  4074f4:	cbnz	w0, 40755c <wcrtomb@plt+0x260c>
  4074f8:	ldr	w0, [x19]
  4074fc:	b	407548 <wcrtomb@plt+0x25f8>
  407500:	mov	x21, x0
  407504:	b	40748c <wcrtomb@plt+0x253c>
  407508:	add	x21, x20, #0x101
  40750c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x13380>
  407510:	mov	x0, x21
  407514:	add	x1, x1, #0xf06
  407518:	bl	404a30 <strcmp@plt>
  40751c:	cbz	w0, 407534 <wcrtomb@plt+0x25e4>
  407520:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  407524:	mov	x0, x21
  407528:	add	x1, x1, #0xf5c
  40752c:	bl	404a30 <strcmp@plt>
  407530:	cbnz	w0, 4074d4 <wcrtomb@plt+0x2584>
  407534:	mov	x0, x20
  407538:	mov	w1, #0x1                   	// #1
  40753c:	bl	415e54 <wcrtomb@plt+0x10f04>
  407540:	cmp	w0, #0x1
  407544:	b.ne	4074d4 <wcrtomb@plt+0x2584>  // b.any
  407548:	ldp	x19, x20, [sp, #16]
  40754c:	ldp	x21, x22, [sp, #32]
  407550:	ldr	x23, [sp, #48]
  407554:	ldp	x29, x30, [sp], #80
  407558:	ret
  40755c:	add	x19, x19, #0x18
  407560:	subs	x20, x20, #0x1
  407564:	b.ne	4074e8 <wcrtomb@plt+0x2598>  // b.any
  407568:	mov	w0, #0x0                   	// #0
  40756c:	b	407548 <wcrtomb@plt+0x25f8>
  407570:	stp	x29, x30, [sp, #-480]!
  407574:	mov	x29, sp
  407578:	stp	x19, x20, [sp, #16]
  40757c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  407580:	ldr	x0, [x20, #3976]
  407584:	stp	x21, x22, [sp, #32]
  407588:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  40758c:	cbnz	x0, 407604 <wcrtomb@plt+0x26b4>
  407590:	bl	406f04 <wcrtomb@plt+0x1fb4>
  407594:	mov	x19, x0
  407598:	cbnz	x0, 4075e4 <wcrtomb@plt+0x2694>
  40759c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4075a0:	ldr	x0, [x0, #1016]
  4075a4:	cbz	x0, 4075ac <wcrtomb@plt+0x265c>
  4075a8:	blr	x0
  4075ac:	mov	w2, #0x5                   	// #5
  4075b0:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  4075b4:	mov	x0, #0x0                   	// #0
  4075b8:	add	x1, x1, #0xf64
  4075bc:	bl	404d00 <dcgettext@plt>
  4075c0:	mov	x19, x0
  4075c4:	ldr	x0, [x21, #656]
  4075c8:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  4075cc:	mov	x3, x0
  4075d0:	mov	x2, x19
  4075d4:	mov	w1, #0x0                   	// #0
  4075d8:	mov	w0, #0x0                   	// #0
  4075dc:	bl	4042e0 <error@plt>
  4075e0:	bl	40d47c <wcrtomb@plt+0x852c>
  4075e4:	ldrb	w0, [x0, #156]
  4075e8:	cmp	w0, #0x56
  4075ec:	b.ne	407688 <wcrtomb@plt+0x2738>  // b.any
  4075f0:	add	x22, x20, #0xf88
  4075f4:	mov	x1, x19
  4075f8:	mov	x0, x22
  4075fc:	mov	x2, #0x64                  	// #100
  407600:	bl	417c68 <wcrtomb@plt+0x12d18>
  407604:	ldr	x19, [x20, #3976]
  407608:	cbz	x19, 40759c <wcrtomb@plt+0x264c>
  40760c:	ldr	x0, [x21, #656]
  407610:	mov	x1, x19
  407614:	mov	w2, #0x0                   	// #0
  407618:	bl	404be0 <fnmatch@plt>
  40761c:	cbz	w0, 4076f4 <wcrtomb@plt+0x27a4>
  407620:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407624:	ldrb	w0, [x0, #84]
  407628:	cbnz	w0, 4076c8 <wcrtomb@plt+0x2778>
  40762c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407630:	ldr	x0, [x0, #1016]
  407634:	cbnz	x0, 407704 <wcrtomb@plt+0x27b4>
  407638:	mov	w2, #0x5                   	// #5
  40763c:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  407640:	mov	x0, #0x0                   	// #0
  407644:	add	x1, x1, #0xf84
  407648:	bl	404d00 <dcgettext@plt>
  40764c:	mov	x19, x0
  407650:	ldr	x1, [x20, #3976]
  407654:	mov	w0, #0x0                   	// #0
  407658:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  40765c:	mov	x20, x0
  407660:	ldr	x1, [x21, #656]
  407664:	mov	w0, #0x1                   	// #1
  407668:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  40766c:	mov	x4, x0
  407670:	mov	x3, x20
  407674:	mov	x2, x19
  407678:	mov	w1, #0x0                   	// #0
  40767c:	mov	w0, #0x0                   	// #0
  407680:	bl	4042e0 <error@plt>
  407684:	b	4075e0 <wcrtomb@plt+0x2690>
  407688:	cmp	w0, #0x67
  40768c:	b.ne	407604 <wcrtomb@plt+0x26b4>  // b.any
  407690:	add	x0, sp, #0x38
  407694:	bl	421adc <wcrtomb@plt+0x1cb8c>
  407698:	add	x0, x19, #0x7c
  40769c:	mov	x1, #0xc                   	// #12
  4076a0:	bl	4162a0 <wcrtomb@plt+0x11350>
  4076a4:	mov	x2, x0
  4076a8:	mov	x1, x19
  4076ac:	add	x0, sp, #0x190
  4076b0:	bl	412390 <wcrtomb@plt+0xd440>
  4076b4:	add	x0, sp, #0x38
  4076b8:	bl	4121b4 <wcrtomb@plt+0xd264>
  4076bc:	add	x0, sp, #0x38
  4076c0:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  4076c4:	b	407604 <wcrtomb@plt+0x26b4>
  4076c8:	mov	x0, x19
  4076cc:	bl	406bd0 <wcrtomb@plt+0x1c80>
  4076d0:	mov	x19, x0
  4076d4:	cbz	x0, 40762c <wcrtomb@plt+0x26dc>
  4076d8:	ldr	x1, [x21, #656]
  4076dc:	mov	w2, #0x0                   	// #0
  4076e0:	bl	404be0 <fnmatch@plt>
  4076e4:	mov	w22, w0
  4076e8:	mov	x0, x19
  4076ec:	bl	404ae0 <free@plt>
  4076f0:	cbnz	w22, 40762c <wcrtomb@plt+0x26dc>
  4076f4:	ldp	x19, x20, [sp, #16]
  4076f8:	ldp	x21, x22, [sp, #32]
  4076fc:	ldp	x29, x30, [sp], #480
  407700:	ret
  407704:	blr	x0
  407708:	b	407638 <wcrtomb@plt+0x26e8>
  40770c:	stp	x29, x30, [sp, #-32]!
  407710:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407714:	mov	x29, sp
  407718:	ldrb	w0, [x0, #1000]
  40771c:	stp	x19, x20, [sp, #16]
  407720:	cbnz	w0, 407734 <wcrtomb@plt+0x27e4>
  407724:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407728:	ldr	w0, [x0, #3968]
  40772c:	cmp	w0, #0x1
  407730:	b.ne	407750 <wcrtomb@plt+0x2800>  // b.any
  407734:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  407738:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  40773c:	bl	406c88 <wcrtomb@plt+0x1d38>
  407740:	ldr	x1, [x20, #4016]
  407744:	ldr	x0, [x19, #3992]
  407748:	cmp	x1, x0
  40774c:	b.hi	40773c <wcrtomb@plt+0x27ec>  // b.pmore
  407750:	bl	405934 <wcrtomb@plt+0x9e4>
  407754:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407758:	ldrb	w0, [x0, #850]
  40775c:	cbz	w0, 407764 <wcrtomb@plt+0x2814>
  407760:	bl	409ac0 <wcrtomb@plt+0x4b70>
  407764:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407768:	mov	w1, #0x3fffffff            	// #1073741823
  40776c:	ldr	w0, [x0, #984]
  407770:	cmp	w0, w1
  407774:	b.le	4077e0 <wcrtomb@plt+0x2890>
  407778:	mov	w1, #0xc0000000            	// #-1073741824
  40777c:	add	w0, w0, w1
  407780:	bl	425d94 <wcrtomb@plt+0x20e44>
  407784:	cmp	w0, #0x0
  407788:	cset	w0, ne  // ne = any
  40778c:	cbz	w0, 4077a0 <wcrtomb@plt+0x2850>
  407790:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407794:	ldr	x0, [x0, #744]
  407798:	ldr	x0, [x0]
  40779c:	bl	424d60 <wcrtomb@plt+0x1fe10>
  4077a0:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4077a4:	add	x19, x19, #0x4b8
  4077a8:	ldrb	w1, [x19, #528]
  4077ac:	ldr	w0, [x19, #532]
  4077b0:	bl	41d8f0 <wcrtomb@plt+0x189a0>
  4077b4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4077b8:	add	x0, x0, #0x68
  4077bc:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  4077c0:	ldr	x0, [x19, #48]
  4077c4:	bl	404ae0 <free@plt>
  4077c8:	ldr	x0, [x19, #56]
  4077cc:	bl	404ae0 <free@plt>
  4077d0:	ldp	x19, x20, [sp, #16]
  4077d4:	mov	x0, #0x0                   	// #0
  4077d8:	ldp	x29, x30, [sp], #32
  4077dc:	b	40536c <wcrtomb@plt+0x41c>
  4077e0:	bl	4048c0 <close@plt>
  4077e4:	b	407784 <wcrtomb@plt+0x2834>
  4077e8:	stp	x29, x30, [sp, #-192]!
  4077ec:	adrp	x0, 406000 <wcrtomb@plt+0x10b0>
  4077f0:	add	x0, x0, #0x2b8
  4077f4:	mov	x29, sp
  4077f8:	stp	x19, x20, [sp, #16]
  4077fc:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  407800:	add	x19, x19, #0x4b8
  407804:	stp	x21, x22, [sp, #32]
  407808:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  40780c:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  407810:	stp	x23, x24, [sp, #48]
  407814:	stp	x25, x26, [sp, #64]
  407818:	stp	x27, x28, [sp, #80]
  40781c:	str	x0, [x19, #552]
  407820:	mov	w0, #0x0                   	// #0
  407824:	bl	408d58 <wcrtomb@plt+0x3e08>
  407828:	str	wzr, [x19, #504]
  40782c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407830:	ldrb	w0, [x0, #4000]
  407834:	cbnz	w0, 4078b4 <wcrtomb@plt+0x2964>
  407838:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  40783c:	add	x22, x22, #0x3d8
  407840:	add	x23, x23, #0xf98
  407844:	add	x21, x21, #0x3a0
  407848:	ldr	w0, [x22]
  40784c:	mov	w3, #0x3fffffff            	// #1073741823
  407850:	ldr	x2, [x21]
  407854:	cmp	w0, w3
  407858:	ldr	x1, [x23]
  40785c:	b.le	4078dc <wcrtomb@plt+0x298c>
  407860:	mov	w3, #0xc0000000            	// #-1073741824
  407864:	add	w0, w0, w3
  407868:	bl	425de4 <wcrtomb@plt+0x20e94>
  40786c:	mov	x20, x0
  407870:	ldr	x0, [x21]
  407874:	cmp	x0, x20
  407878:	b.ne	4078e4 <wcrtomb@plt+0x2994>  // b.any
  40787c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  407880:	ldr	x0, [x1, #3944]
  407884:	add	x0, x0, #0x1
  407888:	str	x0, [x1, #3944]
  40788c:	adrp	x0, 407000 <wcrtomb@plt+0x20b0>
  407890:	add	x0, x0, #0x7e8
  407894:	str	x0, [x19, #552]
  407898:	ldp	x19, x20, [sp, #16]
  40789c:	ldp	x21, x22, [sp, #32]
  4078a0:	ldp	x23, x24, [sp, #48]
  4078a4:	ldp	x25, x26, [sp, #64]
  4078a8:	ldp	x27, x28, [sp, #80]
  4078ac:	ldp	x29, x30, [sp], #192
  4078b0:	ret
  4078b4:	ldr	x0, [x19, #520]
  4078b8:	cbz	x0, 407838 <wcrtomb@plt+0x28e8>
  4078bc:	mov	w0, #0x1                   	// #1
  4078c0:	str	w0, [x22, #984]
  4078c4:	bl	41db20 <wcrtomb@plt+0x18bd0>
  4078c8:	str	wzr, [x22, #984]
  4078cc:	ldr	x1, [x21, #928]
  4078d0:	cmp	x0, x1
  4078d4:	b.eq	407838 <wcrtomb@plt+0x28e8>  // b.none
  4078d8:	bl	406218 <wcrtomb@plt+0x12c8>
  4078dc:	bl	436390 <argp_usage@@Base+0x8eb0>
  4078e0:	b	40786c <wcrtomb@plt+0x291c>
  4078e4:	cbz	x20, 407900 <wcrtomb@plt+0x29b0>
  4078e8:	cmn	x20, #0x1
  4078ec:	b.ne	407d74 <wcrtomb@plt+0x2e24>  // b.any
  4078f0:	bl	404e10 <__errno_location@plt>
  4078f4:	ldr	w0, [x0]
  4078f8:	cmp	w0, #0x1c
  4078fc:	b.ne	407d6c <wcrtomb@plt+0x2e1c>  // b.any
  407900:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407904:	ldrb	w0, [x0, #84]
  407908:	cbz	w0, 407d64 <wcrtomb@plt+0x2e14>
  40790c:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  407910:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  407914:	add	x24, x24, #0x364
  407918:	add	x20, x20, #0xf90
  40791c:	ldr	w0, [x24]
  407920:	cmp	w0, #0x2
  407924:	b.hi	4079c0 <wcrtomb@plt+0x2a70>  // b.pmore
  407928:	cmp	w0, #0x0
  40792c:	mov	w1, #0x2                   	// #2
  407930:	csel	w0, w0, w1, eq  // eq = none
  407934:	bl	406550 <wcrtomb@plt+0x1600>
  407938:	tst	w0, #0xff
  40793c:	b.eq	407d44 <wcrtomb@plt+0x2df4>  // b.none
  407940:	mov	w26, #0x3fffffff            	// #1073741823
  407944:	ldr	w0, [x22]
  407948:	ldr	x2, [x21]
  40794c:	cmp	w0, w26
  407950:	ldr	x1, [x23]
  407954:	b.le	4079d8 <wcrtomb@plt+0x2a88>
  407958:	mov	w3, #0xc0000000            	// #-1073741824
  40795c:	add	w0, w0, w3
  407960:	bl	425de4 <wcrtomb@plt+0x20e94>
  407964:	cmn	x0, #0x1
  407968:	b.eq	4079d0 <wcrtomb@plt+0x2a80>  // b.none
  40796c:	ldr	x1, [x21]
  407970:	cmp	x0, x1
  407974:	b.eq	40797c <wcrtomb@plt+0x2a2c>  // b.none
  407978:	bl	405e88 <wcrtomb@plt+0xf38>
  40797c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  407980:	str	x0, [sp, #112]
  407984:	cbnz	x0, 4079e0 <wcrtomb@plt+0x2a90>
  407988:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40798c:	ldr	x0, [x0, #1016]
  407990:	cbz	x0, 407998 <wcrtomb@plt+0x2a48>
  407994:	blr	x0
  407998:	mov	w2, #0x5                   	// #5
  40799c:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  4079a0:	mov	x0, #0x0                   	// #0
  4079a4:	add	x1, x1, #0xb68
  4079a8:	bl	404d00 <dcgettext@plt>
  4079ac:	mov	x2, x0
  4079b0:	mov	w1, #0x0                   	// #0
  4079b4:	mov	w0, #0x0                   	// #0
  4079b8:	bl	4042e0 <error@plt>
  4079bc:	b	40791c <wcrtomb@plt+0x29cc>
  4079c0:	cmp	w0, #0x8
  4079c4:	cset	w0, eq  // eq = none
  4079c8:	lsl	w0, w0, #1
  4079cc:	b	407934 <wcrtomb@plt+0x29e4>
  4079d0:	bl	405dec <wcrtomb@plt+0xe9c>
  4079d4:	b	407944 <wcrtomb@plt+0x29f4>
  4079d8:	bl	436390 <argp_usage@@Base+0x8eb0>
  4079dc:	b	407964 <wcrtomb@plt+0x2a14>
  4079e0:	ldrb	w0, [x0, #156]
  4079e4:	cmp	w0, #0x56
  4079e8:	b.eq	407b14 <wcrtomb@plt+0x2bc4>  // b.none
  4079ec:	cmp	w0, #0x67
  4079f0:	b.eq	407a58 <wcrtomb@plt+0x2b08>  // b.none
  4079f4:	cmp	w0, #0x4d
  4079f8:	b.ne	407aac <wcrtomb@plt+0x2b5c>  // b.any
  4079fc:	bl	405d08 <wcrtomb@plt+0xdb8>
  407a00:	tst	w0, #0xff
  407a04:	b.eq	40791c <wcrtomb@plt+0x29cc>  // b.none
  407a08:	adrp	x26, 471000 <_obstack_memory_used@@Base+0x39380>
  407a0c:	add	x0, x19, #0x50
  407a10:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  407a14:	ldr	x1, [x26, #4080]
  407a18:	mov	x2, #0x64                  	// #100
  407a1c:	mov	x0, x20
  407a20:	bl	417c68 <wcrtomb@plt+0x12d18>
  407a24:	ldr	x0, [x26, #4080]
  407a28:	mov	x1, #0xc                   	// #12
  407a2c:	add	x0, x0, #0x7c
  407a30:	bl	41667c <wcrtomb@plt+0x1172c>
  407a34:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  407a38:	str	x0, [x1, #4008]
  407a3c:	mov	x1, #0xc                   	// #12
  407a40:	ldr	x0, [x26, #4080]
  407a44:	add	x0, x0, #0x171
  407a48:	bl	41667c <wcrtomb@plt+0x1172c>
  407a4c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  407a50:	str	x0, [x1, #4024]
  407a54:	b	407aac <wcrtomb@plt+0x2b5c>
  407a58:	add	x26, x19, #0x50
  407a5c:	mov	x0, x26
  407a60:	bl	421adc <wcrtomb@plt+0x1cb8c>
  407a64:	mov	x1, x26
  407a68:	add	x0, sp, #0x70
  407a6c:	mov	w2, #0x2                   	// #2
  407a70:	bl	4162bc <wcrtomb@plt+0x1136c>
  407a74:	cmp	w0, #0x2
  407a78:	b.ne	407988 <wcrtomb@plt+0x2a38>  // b.any
  407a7c:	mov	x0, x26
  407a80:	bl	4121b4 <wcrtomb@plt+0xd264>
  407a84:	mov	x0, x26
  407a88:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  407a8c:	mov	x1, x26
  407a90:	add	x0, sp, #0x70
  407a94:	mov	w2, #0x0                   	// #0
  407a98:	bl	4162bc <wcrtomb@plt+0x1136c>
  407a9c:	cmp	w0, #0x1
  407aa0:	b.eq	407b08 <wcrtomb@plt+0x2bb8>  // b.none
  407aa4:	cmp	w0, #0x5
  407aa8:	b.ne	407988 <wcrtomb@plt+0x2a38>  // b.any
  407aac:	ldr	x0, [x19]
  407ab0:	cbz	x0, 407d40 <wcrtomb@plt+0x2df0>
  407ab4:	ldr	x27, [x20]
  407ab8:	cbnz	x27, 407b58 <wcrtomb@plt+0x2c08>
  407abc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407ac0:	ldr	x0, [x0, #1016]
  407ac4:	cbz	x0, 407acc <wcrtomb@plt+0x2b7c>
  407ac8:	blr	x0
  407acc:	mov	w2, #0x5                   	// #5
  407ad0:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  407ad4:	mov	x0, #0x0                   	// #0
  407ad8:	add	x1, x1, #0xfa0
  407adc:	bl	404d00 <dcgettext@plt>
  407ae0:	mov	x26, x0
  407ae4:	ldr	x0, [x19]
  407ae8:	ldr	x0, [x0, #16]
  407aec:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  407af0:	mov	x3, x0
  407af4:	mov	x2, x26
  407af8:	mov	w1, #0x0                   	// #0
  407afc:	mov	w0, #0x0                   	// #0
  407b00:	bl	4042e0 <error@plt>
  407b04:	b	40791c <wcrtomb@plt+0x29cc>
  407b08:	ldr	x0, [sp, #112]
  407b0c:	bl	405c98 <wcrtomb@plt+0xd48>
  407b10:	b	407aac <wcrtomb@plt+0x2b5c>
  407b14:	bl	405d08 <wcrtomb@plt+0xdb8>
  407b18:	tst	w0, #0xff
  407b1c:	b.eq	40791c <wcrtomb@plt+0x29cc>  // b.none
  407b20:	add	x0, x19, #0x50
  407b24:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  407b28:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407b2c:	mov	x2, #0x64                  	// #100
  407b30:	ldr	x1, [x0, #4080]
  407b34:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407b38:	add	x0, x0, #0xf88
  407b3c:	bl	417c68 <wcrtomb@plt+0x12d18>
  407b40:	ldr	x0, [sp, #112]
  407b44:	bl	405c98 <wcrtomb@plt+0xd48>
  407b48:	bl	406f04 <wcrtomb@plt+0x1fb4>
  407b4c:	str	x0, [sp, #112]
  407b50:	ldrb	w0, [x0, #156]
  407b54:	b	4079f4 <wcrtomb@plt+0x2aa4>
  407b58:	ldr	x28, [x0, #16]
  407b5c:	mov	x0, x27
  407b60:	mov	x1, x28
  407b64:	bl	404a30 <strcmp@plt>
  407b68:	cbz	w0, 407bec <wcrtomb@plt+0x2c9c>
  407b6c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407b70:	ldr	x26, [x0, #1016]
  407b74:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407b78:	ldr	w0, [x0, #824]
  407b7c:	and	w0, w0, #0xfffffffb
  407b80:	cmp	w0, #0x2
  407b84:	b.ne	407ca4 <wcrtomb@plt+0x2d54>  // b.any
  407b88:	mov	x0, x28
  407b8c:	bl	404280 <strlen@plt>
  407b90:	cmp	x0, #0x63
  407b94:	b.ls	407ca4 <wcrtomb@plt+0x2d54>  // b.plast
  407b98:	mov	x1, x28
  407b9c:	mov	x0, x27
  407ba0:	mov	x2, #0x64                  	// #100
  407ba4:	bl	4046a0 <strncmp@plt>
  407ba8:	cbnz	w0, 407ca4 <wcrtomb@plt+0x2d54>
  407bac:	cbz	x26, 407bb4 <wcrtomb@plt+0x2c64>
  407bb0:	blr	x26
  407bb4:	mov	w2, #0x5                   	// #5
  407bb8:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  407bbc:	mov	x0, #0x0                   	// #0
  407bc0:	add	x1, x1, #0xfc3
  407bc4:	bl	404d00 <dcgettext@plt>
  407bc8:	mov	x26, x0
  407bcc:	ldr	x0, [x19]
  407bd0:	ldr	x0, [x0, #16]
  407bd4:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  407bd8:	mov	x3, x0
  407bdc:	mov	x2, x26
  407be0:	mov	w1, #0x0                   	// #0
  407be4:	mov	w0, #0x0                   	// #0
  407be8:	bl	4042e0 <error@plt>
  407bec:	ldr	x3, [x19]
  407bf0:	adrp	x26, 471000 <_obstack_memory_used@@Base+0x39380>
  407bf4:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x39380>
  407bf8:	ldr	x2, [x26, #4024]
  407bfc:	ldr	x0, [x25, #4008]
  407c00:	ldr	x1, [x3, #24]
  407c04:	adds	x0, x0, x2
  407c08:	cset	x4, cs  // cs = hs, nlast
  407c0c:	cmp	x1, x0
  407c10:	b.ne	407c18 <wcrtomb@plt+0x2cc8>  // b.any
  407c14:	cbz	x4, 407cb0 <wcrtomb@plt+0x2d60>
  407c18:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407c1c:	ldr	x0, [x0, #1016]
  407c20:	cbz	x0, 407c28 <wcrtomb@plt+0x2cd8>
  407c24:	blr	x0
  407c28:	mov	w2, #0x5                   	// #5
  407c2c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  407c30:	mov	x0, #0x0                   	// #0
  407c34:	add	x1, x1, #0xb
  407c38:	bl	404d00 <dcgettext@plt>
  407c3c:	mov	x27, x0
  407c40:	ldr	x0, [x20]
  407c44:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  407c48:	mov	x28, x0
  407c4c:	ldr	x0, [x19]
  407c50:	add	x1, sp, #0x78
  407c54:	ldr	x0, [x0, #24]
  407c58:	bl	431400 <argp_usage@@Base+0x3f20>
  407c5c:	mov	x4, x0
  407c60:	ldr	x0, [x25, #4008]
  407c64:	add	x1, sp, #0x90
  407c68:	str	x4, [sp, #104]
  407c6c:	bl	431400 <argp_usage@@Base+0x3f20>
  407c70:	mov	x5, x0
  407c74:	ldr	x0, [x26, #4024]
  407c78:	add	x1, sp, #0xa8
  407c7c:	str	x5, [sp, #96]
  407c80:	bl	431400 <argp_usage@@Base+0x3f20>
  407c84:	mov	x6, x0
  407c88:	ldp	x5, x4, [sp, #96]
  407c8c:	mov	x3, x28
  407c90:	mov	x2, x27
  407c94:	mov	w1, #0x0                   	// #0
  407c98:	mov	w0, #0x0                   	// #0
  407c9c:	bl	4042e0 <error@plt>
  407ca0:	b	40791c <wcrtomb@plt+0x29cc>
  407ca4:	cbz	x26, 407acc <wcrtomb@plt+0x2b7c>
  407ca8:	blr	x26
  407cac:	b	407acc <wcrtomb@plt+0x2b7c>
  407cb0:	ldr	x0, [x3, #32]
  407cb4:	sub	x1, x1, x0
  407cb8:	cmp	x1, x2
  407cbc:	b.eq	407d40 <wcrtomb@plt+0x2df0>  // b.none
  407cc0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407cc4:	ldr	x0, [x0, #1016]
  407cc8:	cbz	x0, 407cd0 <wcrtomb@plt+0x2d80>
  407ccc:	blr	x0
  407cd0:	mov	w2, #0x5                   	// #5
  407cd4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  407cd8:	mov	x0, #0x0                   	// #0
  407cdc:	add	x1, x1, #0x30
  407ce0:	bl	404d00 <dcgettext@plt>
  407ce4:	mov	x27, x0
  407ce8:	ldr	x0, [x19]
  407cec:	add	x1, sp, #0x78
  407cf0:	ldr	x0, [x0, #24]
  407cf4:	bl	431400 <argp_usage@@Base+0x3f20>
  407cf8:	mov	x28, x0
  407cfc:	ldr	x0, [x19]
  407d00:	add	x1, sp, #0x90
  407d04:	ldr	x0, [x0, #32]
  407d08:	bl	431400 <argp_usage@@Base+0x3f20>
  407d0c:	mov	x4, x0
  407d10:	ldr	x0, [x26, #4024]
  407d14:	add	x1, sp, #0xa8
  407d18:	str	x4, [sp, #96]
  407d1c:	bl	431400 <argp_usage@@Base+0x3f20>
  407d20:	mov	x5, x0
  407d24:	ldr	x4, [sp, #96]
  407d28:	mov	x3, x28
  407d2c:	mov	x2, x27
  407d30:	mov	w1, #0x0                   	// #0
  407d34:	mov	w0, #0x0                   	// #0
  407d38:	bl	4042e0 <error@plt>
  407d3c:	b	40791c <wcrtomb@plt+0x29cc>
  407d40:	bl	40565c <wcrtomb@plt+0x70c>
  407d44:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407d48:	ldr	x1, [x0, #4016]
  407d4c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407d50:	ldr	x0, [x0, #3952]
  407d54:	cmp	x1, x0
  407d58:	b.ne	40788c <wcrtomb@plt+0x293c>  // b.any
  407d5c:	bl	406c88 <wcrtomb@plt+0x1d38>
  407d60:	b	40788c <wcrtomb@plt+0x293c>
  407d64:	cmn	x20, #0x1
  407d68:	b.ne	407d74 <wcrtomb@plt+0x2e24>  // b.any
  407d6c:	bl	405dec <wcrtomb@plt+0xe9c>
  407d70:	b	407848 <wcrtomb@plt+0x28f8>
  407d74:	mov	x0, x20
  407d78:	bl	405e88 <wcrtomb@plt+0xf38>
  407d7c:	b	40788c <wcrtomb@plt+0x293c>
  407d80:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407d84:	ldr	x1, [x0, #1768]
  407d88:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407d8c:	ldr	x0, [x0, #928]
  407d90:	mov	x16, x1
  407d94:	br	x16
  407d98:	stp	x29, x30, [sp, #-112]!
  407d9c:	mov	x29, sp
  407da0:	stp	x19, x20, [sp, #16]
  407da4:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  407da8:	add	x20, x20, #0x4b8
  407dac:	mov	w19, w0
  407db0:	adrp	x0, 407000 <wcrtomb@plt+0x20b0>
  407db4:	add	x0, x0, #0x7e8
  407db8:	stp	x21, x22, [sp, #32]
  407dbc:	stp	x23, x24, [sp, #48]
  407dc0:	stp	x25, x26, [sp, #64]
  407dc4:	str	x27, [sp, #80]
  407dc8:	str	x0, [x20, #552]
  407dcc:	adrp	x0, 407000 <wcrtomb@plt+0x20b0>
  407dd0:	add	x0, x0, #0xcc
  407dd4:	str	x0, [x20, #560]
  407dd8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407ddc:	ldr	x0, [x0, #928]
  407de0:	cbnz	x0, 407e1c <wcrtomb@plt+0x2ecc>
  407de4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407de8:	ldr	x0, [x0, #1016]
  407dec:	cbz	x0, 407df4 <wcrtomb@plt+0x2ea4>
  407df0:	blr	x0
  407df4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  407df8:	add	x1, x1, #0x5f
  407dfc:	mov	w2, #0x5                   	// #5
  407e00:	mov	x0, #0x0                   	// #0
  407e04:	bl	404d00 <dcgettext@plt>
  407e08:	mov	w1, #0x0                   	// #0
  407e0c:	mov	x2, x0
  407e10:	mov	w0, #0x0                   	// #0
  407e14:	bl	4042e0 <error@plt>
  407e18:	bl	40d47c <wcrtomb@plt+0x852c>
  407e1c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407e20:	ldr	x0, [x0, #856]
  407e24:	cbnz	x0, 407e48 <wcrtomb@plt+0x2ef8>
  407e28:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407e2c:	ldr	x0, [x0, #1016]
  407e30:	cbz	x0, 407e38 <wcrtomb@plt+0x2ee8>
  407e34:	blr	x0
  407e38:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  407e3c:	mov	w2, #0x5                   	// #5
  407e40:	add	x1, x1, #0x7d
  407e44:	b	407e00 <wcrtomb@plt+0x2eb0>
  407e48:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407e4c:	add	x0, x0, #0x68
  407e50:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  407e54:	str	wzr, [x20, #24]
  407e58:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  407e5c:	adrp	x21, 44e000 <_obstack_memory_used@@Base+0x16380>
  407e60:	bl	4054cc <wcrtomb@plt+0x57c>
  407e64:	add	x21, x21, #0x8dc
  407e68:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407e6c:	cmp	w19, #0x2
  407e70:	csel	w22, w19, wzr, ne  // ne = any
  407e74:	mov	x1, x21
  407e78:	str	w22, [x0, #3968]
  407e7c:	ldr	x0, [x23, #696]
  407e80:	ldr	x0, [x0]
  407e84:	bl	404a30 <strcmp@plt>
  407e88:	cbnz	w0, 407ecc <wcrtomb@plt+0x2f7c>
  407e8c:	cmp	w22, #0x0
  407e90:	cset	w0, ne  // ne = any
  407e94:	bl	404ca0 <isatty@plt>
  407e98:	cbz	w0, 407ecc <wcrtomb@plt+0x2f7c>
  407e9c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407ea0:	ldr	x0, [x0, #1016]
  407ea4:	cbz	x0, 407eac <wcrtomb@plt+0x2f5c>
  407ea8:	blr	x0
  407eac:	mov	w2, #0x5                   	// #5
  407eb0:	cbnz	w22, 407ec0 <wcrtomb@plt+0x2f70>
  407eb4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  407eb8:	add	x1, x1, #0x93
  407ebc:	b	407e00 <wcrtomb@plt+0x2eb0>
  407ec0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  407ec4:	add	x1, x1, #0xd8
  407ec8:	b	407e00 <wcrtomb@plt+0x2eb0>
  407ecc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407ed0:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  407ed4:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x39380>
  407ed8:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  407edc:	ldrb	w0, [x0, #849]
  407ee0:	strb	w0, [x20, #529]
  407ee4:	ldr	x0, [x24, #912]
  407ee8:	str	xzr, [x25, #3944]
  407eec:	cbz	x0, 407f74 <wcrtomb@plt+0x3024>
  407ef0:	cmp	w19, #0x1
  407ef4:	b.eq	407f64 <wcrtomb@plt+0x3014>  // b.none
  407ef8:	cmp	w19, #0x2
  407efc:	b.eq	407f70 <wcrtomb@plt+0x3020>  // b.none
  407f00:	cbnz	w19, 407f24 <wcrtomb@plt+0x2fd4>
  407f04:	bl	41de84 <wcrtomb@plt+0x18f34>
  407f08:	str	w0, [x20, #532]
  407f0c:	mov	w0, #0x1                   	// #1
  407f10:	strb	w0, [x20, #529]
  407f14:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407f18:	ldr	x1, [x0, #3992]
  407f1c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407f20:	str	x1, [x0, #3952]
  407f24:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407f28:	ldr	x0, [x0, #968]
  407f2c:	cbnz	x0, 407fd8 <wcrtomb@plt+0x3088>
  407f30:	cmp	w19, #0x1
  407f34:	b.ne	407fd8 <wcrtomb@plt+0x3088>  // b.any
  407f38:	ldr	x0, [x23, #696]
  407f3c:	mov	x1, x21
  407f40:	ldr	x0, [x0]
  407f44:	bl	404a30 <strcmp@plt>
  407f48:	mov	w21, w0
  407f4c:	cbnz	w0, 407fd8 <wcrtomb@plt+0x3088>
  407f50:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407f54:	ldr	x1, [x0, #1160]
  407f58:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  407f5c:	str	x1, [x0, #3936]
  407f60:	b	408098 <wcrtomb@plt+0x3148>
  407f64:	bl	41db54 <wcrtomb@plt+0x18c04>
  407f68:	str	w0, [x20, #532]
  407f6c:	b	407f24 <wcrtomb@plt+0x2fd4>
  407f70:	bl	404970 <abort@plt>
  407f74:	ldr	x26, [x23, #696]
  407f78:	mov	x1, x21
  407f7c:	ldr	x27, [x26]
  407f80:	mov	x0, x27
  407f84:	bl	404a30 <strcmp@plt>
  407f88:	mov	w21, w0
  407f8c:	cbnz	w0, 4080f8 <wcrtomb@plt+0x31a8>
  407f90:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  407f94:	mov	w0, #0x1                   	// #1
  407f98:	strb	w0, [x20, #529]
  407f9c:	ldrb	w1, [x1, #850]
  407fa0:	cbz	w1, 407fc4 <wcrtomb@plt+0x3074>
  407fa4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407fa8:	ldr	x0, [x0, #1016]
  407fac:	cbz	x0, 407fb4 <wcrtomb@plt+0x3064>
  407fb0:	blr	x0
  407fb4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  407fb8:	mov	w2, #0x5                   	// #5
  407fbc:	add	x1, x1, #0x11c
  407fc0:	b	407e00 <wcrtomb@plt+0x2eb0>
  407fc4:	cmp	w19, #0x1
  407fc8:	b.eq	4080c4 <wcrtomb@plt+0x3174>  // b.none
  407fcc:	cmp	w19, #0x2
  407fd0:	b.eq	4080d8 <wcrtomb@plt+0x3188>  // b.none
  407fd4:	cbz	w19, 407fe0 <wcrtomb@plt+0x3090>
  407fd8:	mov	w21, #0x0                   	// #0
  407fdc:	b	408098 <wcrtomb@plt+0x3148>
  407fe0:	add	x0, sp, #0x6b
  407fe4:	str	wzr, [x22, #984]
  407fe8:	bl	407470 <wcrtomb@plt+0x2520>
  407fec:	mov	w20, w0
  407ff0:	cmp	w0, #0x1
  407ff4:	b.ls	408050 <wcrtomb@plt+0x3100>  // b.plast
  407ff8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  407ffc:	ldr	x0, [x0, #1016]
  408000:	cbz	x0, 408008 <wcrtomb@plt+0x30b8>
  408004:	blr	x0
  408008:	mov	w2, #0x5                   	// #5
  40800c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408010:	mov	x0, #0x0                   	// #0
  408014:	add	x1, x1, #0x13f
  408018:	bl	404d00 <dcgettext@plt>
  40801c:	mov	x8, x0
  408020:	add	x1, sp, #0x6c
  408024:	mov	w0, w20
  408028:	str	wzr, [sp, #108]
  40802c:	bl	405320 <wcrtomb@plt+0x3d0>
  408030:	mov	x3, x0
  408034:	cbz	x0, 40803c <wcrtomb@plt+0x30ec>
  408038:	ldr	x3, [x0, #16]
  40803c:	mov	x2, x8
  408040:	mov	w1, #0x0                   	// #0
  408044:	mov	w0, #0x0                   	// #0
  408048:	bl	4042e0 <error@plt>
  40804c:	b	407e18 <wcrtomb@plt+0x2ec8>
  408050:	ldrb	w0, [sp, #107]
  408054:	cbz	w0, 408098 <wcrtomb@plt+0x3148>
  408058:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40805c:	ldr	x0, [x0, #1016]
  408060:	cbz	x0, 408068 <wcrtomb@plt+0x3118>
  408064:	blr	x0
  408068:	mov	w2, #0x5                   	// #5
  40806c:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  408070:	mov	x0, #0x0                   	// #0
  408074:	add	x1, x1, #0xb68
  408078:	bl	404d00 <dcgettext@plt>
  40807c:	mov	x2, x0
  408080:	mov	w1, #0x0                   	// #0
  408084:	mov	w0, #0x0                   	// #0
  408088:	bl	4042e0 <error@plt>
  40808c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  408090:	mov	w1, #0x2                   	// #2
  408094:	str	w1, [x0, #3464]
  408098:	ldr	w0, [x22, #984]
  40809c:	tbz	w0, #31, 408470 <wcrtomb@plt+0x3520>
  4080a0:	bl	404e10 <__errno_location@plt>
  4080a4:	ldr	w20, [x0]
  4080a8:	mov	x19, x0
  4080ac:	cbz	w21, 4080b4 <wcrtomb@plt+0x3164>
  4080b0:	bl	4185a4 <wcrtomb@plt+0x13654>
  4080b4:	ldr	x0, [x23, #696]
  4080b8:	ldr	x0, [x0]
  4080bc:	str	w20, [x19]
  4080c0:	bl	424e6c <wcrtomb@plt+0x1ff1c>
  4080c4:	str	w19, [x22, #984]
  4080c8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4080cc:	ldr	x0, [x0, #968]
  4080d0:	cbnz	x0, 407fd8 <wcrtomb@plt+0x3088>
  4080d4:	b	407f50 <wcrtomb@plt+0x3000>
  4080d8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  4080dc:	str	wzr, [x22, #984]
  4080e0:	strb	w0, [x1, #4000]
  4080e4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4080e8:	ldr	x1, [x0, #3992]
  4080ec:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4080f0:	str	x1, [x0, #3952]
  4080f4:	b	4080c8 <wcrtomb@plt+0x3178>
  4080f8:	cmp	w19, #0x1
  4080fc:	b.eq	4082c4 <wcrtomb@plt+0x3374>  // b.none
  408100:	cmp	w19, #0x2
  408104:	b.eq	4083cc <wcrtomb@plt+0x347c>  // b.none
  408108:	cbnz	w19, 407fd8 <wcrtomb@plt+0x3088>
  40810c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408110:	ldrb	w0, [x0, #1024]
  408114:	cbnz	w0, 4081f8 <wcrtomb@plt+0x32a8>
  408118:	mov	w1, #0x3a                  	// #58
  40811c:	mov	x0, x27
  408120:	bl	404b90 <strchr@plt>
  408124:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  408128:	str	x0, [x1, #1032]
  40812c:	cbz	x0, 4081f8 <wcrtomb@plt+0x32a8>
  408130:	ldr	x21, [x26]
  408134:	cmp	x0, x21
  408138:	b.ls	4081f8 <wcrtomb@plt+0x32a8>  // b.plast
  40813c:	sub	x2, x0, x21
  408140:	mov	w1, #0x2f                  	// #47
  408144:	mov	x0, x21
  408148:	bl	404c90 <memchr@plt>
  40814c:	cbnz	x0, 4081f8 <wcrtomb@plt+0x32a8>
  408150:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408154:	mov	w2, #0x40000000            	// #1073741824
  408158:	mov	w1, #0x0                   	// #0
  40815c:	ldr	x3, [x0, #816]
  408160:	mov	x0, x21
  408164:	bl	425898 <wcrtomb@plt+0x20948>
  408168:	str	w0, [x22, #984]
  40816c:	cmn	w0, #0x1
  408170:	b.eq	407fd8 <wcrtomb@plt+0x3088>  // b.none
  408174:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408178:	ldrb	w0, [x0, #84]
  40817c:	cbnz	w0, 40829c <wcrtomb@plt+0x334c>
  408180:	ldr	x0, [x24, #912]
  408184:	cbnz	x0, 40826c <wcrtomb@plt+0x331c>
  408188:	add	x0, sp, #0x6c
  40818c:	bl	407470 <wcrtomb@plt+0x2520>
  408190:	cbz	w0, 40820c <wcrtomb@plt+0x32bc>
  408194:	cmp	w0, #0x1
  408198:	b.ne	4082b4 <wcrtomb@plt+0x3364>  // b.any
  40819c:	ldrb	w0, [sp, #108]
  4081a0:	cbz	w0, 4081e4 <wcrtomb@plt+0x3294>
  4081a4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4081a8:	ldr	x0, [x0, #1016]
  4081ac:	cbz	x0, 4081b4 <wcrtomb@plt+0x3264>
  4081b0:	blr	x0
  4081b4:	mov	w2, #0x5                   	// #5
  4081b8:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  4081bc:	mov	x0, #0x0                   	// #0
  4081c0:	add	x1, x1, #0xb68
  4081c4:	bl	404d00 <dcgettext@plt>
  4081c8:	mov	x2, x0
  4081cc:	mov	w1, #0x0                   	// #0
  4081d0:	mov	w0, #0x0                   	// #0
  4081d4:	bl	4042e0 <error@plt>
  4081d8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4081dc:	mov	w1, #0x2                   	// #2
  4081e0:	str	w1, [x0, #3464]
  4081e4:	ldr	w0, [x22, #984]
  4081e8:	str	w0, [x22, #984]
  4081ec:	tbnz	w0, #31, 407fd8 <wcrtomb@plt+0x3088>
  4081f0:	bl	4056c4 <wcrtomb@plt+0x774>
  4081f4:	b	407fd8 <wcrtomb@plt+0x3088>
  4081f8:	ldr	x0, [x26]
  4081fc:	mov	w2, #0x1b6                 	// #438
  408200:	mov	w1, #0x0                   	// #0
  408204:	bl	404630 <open@plt>
  408208:	b	408168 <wcrtomb@plt+0x3218>
  40820c:	ldrb	w0, [sp, #108]
  408210:	cbz	w0, 408254 <wcrtomb@plt+0x3304>
  408214:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408218:	ldr	x0, [x0, #1016]
  40821c:	cbz	x0, 408224 <wcrtomb@plt+0x32d4>
  408220:	blr	x0
  408224:	mov	w2, #0x5                   	// #5
  408228:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  40822c:	mov	x0, #0x0                   	// #0
  408230:	add	x1, x1, #0xb68
  408234:	bl	404d00 <dcgettext@plt>
  408238:	mov	x2, x0
  40823c:	mov	w1, #0x0                   	// #0
  408240:	mov	w0, #0x0                   	// #0
  408244:	bl	4042e0 <error@plt>
  408248:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40824c:	mov	w1, #0x2                   	// #2
  408250:	str	w1, [x0, #3464]
  408254:	ldr	x0, [x23, #696]
  408258:	mov	x1, #0x0                   	// #0
  40825c:	ldr	x0, [x0]
  408260:	bl	41d264 <wcrtomb@plt+0x18314>
  408264:	ldr	x0, [x24, #912]
  408268:	cbz	x0, 4081e4 <wcrtomb@plt+0x3294>
  40826c:	ldr	w0, [x22, #984]
  408270:	mov	w1, #0x3fffffff            	// #1073741823
  408274:	cmp	w0, w1
  408278:	b.le	4082bc <wcrtomb@plt+0x336c>
  40827c:	mov	w1, #0xc0000000            	// #-1073741824
  408280:	add	w0, w0, w1
  408284:	bl	425d94 <wcrtomb@plt+0x20e44>
  408288:	strb	wzr, [x20, #528]
  40828c:	bl	41de84 <wcrtomb@plt+0x18f34>
  408290:	str	w0, [x20, #532]
  408294:	mov	w0, #0x1                   	// #1
  408298:	strb	w0, [x20, #529]
  40829c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4082a0:	str	xzr, [x25, #3944]
  4082a4:	ldr	x1, [x0, #3992]
  4082a8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4082ac:	str	x1, [x0, #3952]
  4082b0:	b	4081e4 <wcrtomb@plt+0x3294>
  4082b4:	str	w0, [x20, #508]
  4082b8:	b	40826c <wcrtomb@plt+0x331c>
  4082bc:	bl	4048c0 <close@plt>
  4082c0:	b	408288 <wcrtomb@plt+0x3338>
  4082c4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4082c8:	ldrb	w0, [x0, #765]
  4082cc:	cbz	w0, 408350 <wcrtomb@plt+0x3400>
  4082d0:	mov	w21, w19
  4082d4:	mov	w1, w19
  4082d8:	mov	x0, x27
  4082dc:	bl	4186e4 <wcrtomb@plt+0x13794>
  4082e0:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  4082e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4082e8:	ldr	x20, [x23, #696]
  4082ec:	ldrb	w2, [x2, #850]
  4082f0:	ldrb	w1, [x0, #1024]
  4082f4:	ldr	x0, [x20]
  4082f8:	cbz	w2, 408370 <wcrtomb@plt+0x3420>
  4082fc:	cbnz	w1, 408358 <wcrtomb@plt+0x3408>
  408300:	mov	w1, #0x3a                  	// #58
  408304:	bl	404b90 <strchr@plt>
  408308:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  40830c:	str	x0, [x1, #1032]
  408310:	cbz	x0, 408358 <wcrtomb@plt+0x3408>
  408314:	ldr	x24, [x20]
  408318:	cmp	x0, x24
  40831c:	b.ls	408358 <wcrtomb@plt+0x3408>  // b.plast
  408320:	sub	x2, x0, x24
  408324:	mov	w1, #0x2f                  	// #47
  408328:	mov	x0, x24
  40832c:	bl	404c90 <memchr@plt>
  408330:	cbnz	x0, 408358 <wcrtomb@plt+0x3408>
  408334:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408338:	mov	w2, #0x40000000            	// #1073741824
  40833c:	mov	w1, #0x42                  	// #66
  408340:	ldr	x3, [x0, #816]
  408344:	mov	x0, x24
  408348:	bl	425898 <wcrtomb@plt+0x20948>
  40834c:	b	408368 <wcrtomb@plt+0x3418>
  408350:	mov	w21, #0x0                   	// #0
  408354:	b	4082e0 <wcrtomb@plt+0x3390>
  408358:	ldr	x0, [x20]
  40835c:	mov	w2, #0x1b6                 	// #438
  408360:	mov	w1, #0x42                  	// #66
  408364:	bl	404630 <open@plt>
  408368:	str	w0, [x22, #984]
  40836c:	b	408098 <wcrtomb@plt+0x3148>
  408370:	cbnz	w1, 4083bc <wcrtomb@plt+0x346c>
  408374:	mov	w1, #0x3a                  	// #58
  408378:	bl	404b90 <strchr@plt>
  40837c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  408380:	str	x0, [x1, #1032]
  408384:	cbz	x0, 4083bc <wcrtomb@plt+0x346c>
  408388:	ldr	x24, [x20]
  40838c:	cmp	x0, x24
  408390:	b.ls	4083bc <wcrtomb@plt+0x346c>  // b.plast
  408394:	sub	x2, x0, x24
  408398:	mov	w1, #0x2f                  	// #47
  40839c:	mov	x0, x24
  4083a0:	bl	404c90 <memchr@plt>
  4083a4:	cbnz	x0, 4083bc <wcrtomb@plt+0x346c>
  4083a8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4083ac:	mov	w2, #0x40000000            	// #1073741824
  4083b0:	mov	w1, #0x41                  	// #65
  4083b4:	ldr	x3, [x0, #816]
  4083b8:	b	408344 <wcrtomb@plt+0x33f4>
  4083bc:	ldr	x0, [x20]
  4083c0:	mov	w1, #0x1b6                 	// #438
  4083c4:	bl	404ee0 <creat@plt>
  4083c8:	b	408368 <wcrtomb@plt+0x3418>
  4083cc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4083d0:	ldrb	w0, [x0, #1024]
  4083d4:	cbnz	w0, 40845c <wcrtomb@plt+0x350c>
  4083d8:	mov	w1, #0x3a                  	// #58
  4083dc:	mov	x0, x27
  4083e0:	bl	404b90 <strchr@plt>
  4083e4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4083e8:	str	x0, [x1, #1032]
  4083ec:	cbz	x0, 40845c <wcrtomb@plt+0x350c>
  4083f0:	ldr	x20, [x26]
  4083f4:	cmp	x0, x20
  4083f8:	b.ls	40845c <wcrtomb@plt+0x350c>  // b.plast
  4083fc:	sub	x2, x0, x20
  408400:	mov	w1, #0x2f                  	// #47
  408404:	mov	x0, x20
  408408:	bl	404c90 <memchr@plt>
  40840c:	cbnz	x0, 40845c <wcrtomb@plt+0x350c>
  408410:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408414:	mov	w2, #0x40000000            	// #1073741824
  408418:	mov	w1, #0x42                  	// #66
  40841c:	ldr	x3, [x0, #816]
  408420:	mov	x0, x20
  408424:	bl	425898 <wcrtomb@plt+0x20948>
  408428:	str	w0, [x22, #984]
  40842c:	mov	x0, #0x0                   	// #0
  408430:	bl	407470 <wcrtomb@plt+0x2520>
  408434:	cmp	w0, #0x1
  408438:	b.ls	407fd8 <wcrtomb@plt+0x3088>  // b.plast
  40843c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408440:	ldr	x0, [x0, #1016]
  408444:	cbz	x0, 40844c <wcrtomb@plt+0x34fc>
  408448:	blr	x0
  40844c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408450:	mov	w2, #0x5                   	// #5
  408454:	add	x1, x1, #0x164
  408458:	b	407e00 <wcrtomb@plt+0x2eb0>
  40845c:	ldr	x0, [x26]
  408460:	mov	w2, #0x1b6                 	// #438
  408464:	mov	w1, #0x42                  	// #66
  408468:	bl	404630 <open@plt>
  40846c:	b	408428 <wcrtomb@plt+0x34d8>
  408470:	mov	w1, #0x3fffffff            	// #1073741823
  408474:	cmp	w0, w1
  408478:	b.gt	408488 <wcrtomb@plt+0x3538>
  40847c:	bl	41d788 <wcrtomb@plt+0x18838>
  408480:	tst	w0, #0xff
  408484:	b.eq	4080a0 <wcrtomb@plt+0x3150>  // b.none
  408488:	bl	41d83c <wcrtomb@plt+0x188ec>
  40848c:	bl	41d7ec <wcrtomb@plt+0x1889c>
  408490:	cbz	w19, 4084dc <wcrtomb@plt+0x358c>
  408494:	sub	w0, w19, #0x1
  408498:	cmp	w0, #0x1
  40849c:	b.ls	4084f4 <wcrtomb@plt+0x35a4>  // b.plast
  4084a0:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  4084a4:	add	x19, x19, #0x3b0
  4084a8:	mov	x0, x19
  4084ac:	bl	42fdac <argp_usage@@Base+0x28cc>
  4084b0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4084b4:	add	x0, x0, #0x368
  4084b8:	ldp	x2, x3, [x19]
  4084bc:	stp	x2, x3, [x0]
  4084c0:	ldp	x19, x20, [sp, #16]
  4084c4:	ldp	x21, x22, [sp, #32]
  4084c8:	ldp	x23, x24, [sp, #48]
  4084cc:	ldp	x25, x26, [sp, #64]
  4084d0:	ldr	x27, [sp, #80]
  4084d4:	ldp	x29, x30, [sp], #112
  4084d8:	ret
  4084dc:	bl	406f04 <wcrtomb@plt+0x1fb4>
  4084e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4084e4:	ldr	x0, [x0, #656]
  4084e8:	cbz	x0, 4084a0 <wcrtomb@plt+0x3550>
  4084ec:	bl	407570 <wcrtomb@plt+0x2620>
  4084f0:	b	4084a0 <wcrtomb@plt+0x3550>
  4084f4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4084f8:	cmp	w19, #0x1
  4084fc:	str	xzr, [x0, #3960]
  408500:	b.ne	4084e0 <wcrtomb@plt+0x3590>  // b.any
  408504:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408508:	ldr	x0, [x0, #656]
  40850c:	cbz	x0, 4084a0 <wcrtomb@plt+0x3550>
  408510:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  408514:	ldrb	w1, [x1, #84]
  408518:	cbz	w1, 408524 <wcrtomb@plt+0x35d4>
  40851c:	bl	407040 <wcrtomb@plt+0x20f0>
  408520:	b	4084a0 <wcrtomb@plt+0x3550>
  408524:	bl	406f78 <wcrtomb@plt+0x2028>
  408528:	b	4084a0 <wcrtomb@plt+0x3550>
  40852c:	stp	x29, x30, [sp, #-32]!
  408530:	mov	x29, sp
  408534:	stp	x19, x20, [sp, #16]
  408538:	bl	436f10 <argp_usage@@Base+0x9a30>
  40853c:	ldrb	w20, [x0]
  408540:	mov	w1, #0x27                  	// #39
  408544:	mov	x19, x0
  408548:	cmp	w20, #0x22
  40854c:	ccmp	w20, w1, #0x4, ne  // ne = any
  408550:	b.ne	408580 <wcrtomb@plt+0x3630>  // b.any
  408554:	bl	404280 <strlen@plt>
  408558:	add	x1, x19, x0
  40855c:	ldurb	w1, [x1, #-1]
  408560:	cmp	w1, w20
  408564:	b.ne	408580 <wcrtomb@plt+0x3630>  // b.any
  408568:	sub	x20, x0, #0x2
  40856c:	add	x1, x19, #0x1
  408570:	mov	x2, x20
  408574:	mov	x0, x19
  408578:	bl	404210 <memmove@plt>
  40857c:	strb	wzr, [x19, x20]
  408580:	mov	x0, x19
  408584:	bl	417cd0 <wcrtomb@plt+0x12d80>
  408588:	mov	x0, x19
  40858c:	ldp	x19, x20, [sp, #16]
  408590:	ldp	x29, x30, [sp], #32
  408594:	ret
  408598:	stp	x29, x30, [sp, #-32]!
  40859c:	mov	x29, sp
  4085a0:	str	x19, [sp, #16]
  4085a4:	mov	w19, w0
  4085a8:	mov	x0, #0x18                  	// #24
  4085ac:	bl	436e84 <argp_usage@@Base+0x99a4>
  4085b0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  4085b4:	ldr	x2, [x1, #1776]
  4085b8:	cbz	x2, 4085d4 <wcrtomb@plt+0x3684>
  4085bc:	str	x0, [x2]
  4085c0:	str	w19, [x0, #8]
  4085c4:	str	x0, [x1, #1776]
  4085c8:	ldr	x19, [sp, #16]
  4085cc:	ldp	x29, x30, [sp], #32
  4085d0:	ret
  4085d4:	add	x3, x1, #0x6f0
  4085d8:	str	x0, [x3, #8]
  4085dc:	b	4085c0 <wcrtomb@plt+0x3670>
  4085e0:	stp	x29, x30, [sp, #-32]!
  4085e4:	mov	x29, sp
  4085e8:	bl	4044f0 <fileno@plt>
  4085ec:	add	x2, sp, #0x18
  4085f0:	mov	x1, #0x5413                	// #21523
  4085f4:	bl	404f00 <ioctl@plt>
  4085f8:	cbnz	w0, 408610 <wcrtomb@plt+0x36c0>
  4085fc:	ldrh	w0, [sp, #26]
  408600:	cbz	w0, 408610 <wcrtomb@plt+0x36c0>
  408604:	and	x0, x0, #0xffff
  408608:	ldp	x29, x30, [sp], #32
  40860c:	ret
  408610:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  408614:	add	x0, x0, #0x328
  408618:	bl	404e40 <getenv@plt>
  40861c:	cbz	x0, 408634 <wcrtomb@plt+0x36e4>
  408620:	mov	w2, #0xa                   	// #10
  408624:	mov	x1, #0x0                   	// #0
  408628:	bl	404a90 <strtol@plt>
  40862c:	cmp	x0, #0x0
  408630:	b.gt	408608 <wcrtomb@plt+0x36b8>
  408634:	mov	x0, #0x50                  	// #80
  408638:	b	408608 <wcrtomb@plt+0x36b8>
  40863c:	stp	x29, x30, [sp, #-400]!
  408640:	mov	x29, sp
  408644:	stp	x19, x20, [sp, #16]
  408648:	mov	x20, x2
  40864c:	mov	x19, x1
  408650:	stp	x21, x22, [sp, #32]
  408654:	mov	x21, x0
  408658:	ands	w0, w3, #0xff
  40865c:	stp	x23, x24, [sp, #48]
  408660:	mov	w2, #0x5                   	// #5
  408664:	stp	x25, x26, [sp, #64]
  408668:	mov	w26, w4
  40866c:	stp	x27, x28, [sp, #80]
  408670:	str	w0, [sp, #100]
  408674:	b.eq	4086fc <wcrtomb@plt+0x37ac>  // b.none
  408678:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  40867c:	add	x1, x1, #0x33b
  408680:	mov	x0, #0x0                   	// #0
  408684:	bl	404d00 <dcgettext@plt>
  408688:	add	x1, sp, #0x78
  40868c:	mov	x24, x0
  408690:	mov	w0, w26
  408694:	bl	431400 <argp_usage@@Base+0x3f20>
  408698:	mov	x25, x0
  40869c:	cbnz	x20, 4086c0 <wcrtomb@plt+0x3770>
  4086a0:	ldr	w0, [sp, #100]
  4086a4:	mov	w2, #0x5                   	// #5
  4086a8:	cbz	w0, 408708 <wcrtomb@plt+0x37b8>
  4086ac:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4086b0:	add	x1, x1, #0x330
  4086b4:	mov	x0, #0x0                   	// #0
  4086b8:	bl	404d00 <dcgettext@plt>
  4086bc:	mov	x20, x0
  4086c0:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  4086c4:	add	x27, sp, #0x90
  4086c8:	add	x23, x23, #0x6f0
  4086cc:	ldrb	w0, [x20]
  4086d0:	cbnz	w0, 408714 <wcrtomb@plt+0x37c4>
  4086d4:	mov	x0, x21
  4086d8:	bl	404bf0 <fflush_unlocked@plt>
  4086dc:	mov	w0, w19
  4086e0:	ldp	x19, x20, [sp, #16]
  4086e4:	ldp	x21, x22, [sp, #32]
  4086e8:	ldp	x23, x24, [sp, #48]
  4086ec:	ldp	x25, x26, [sp, #64]
  4086f0:	ldp	x27, x28, [sp, #80]
  4086f4:	ldp	x29, x30, [sp], #400
  4086f8:	ret
  4086fc:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408700:	add	x1, x1, #0x192
  408704:	b	408680 <wcrtomb@plt+0x3730>
  408708:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40870c:	add	x1, x1, #0x344
  408710:	b	4086b4 <wcrtomb@plt+0x3764>
  408714:	cmp	w0, #0x25
  408718:	b.ne	4089f0 <wcrtomb@plt+0x3aa0>  // b.any
  40871c:	ldrb	w0, [x20, #1]
  408720:	add	x22, x20, #0x1
  408724:	cmp	w0, #0x7b
  408728:	b.ne	4087b0 <wcrtomb@plt+0x3860>  // b.any
  40872c:	add	x20, x20, #0x2
  408730:	mov	w1, #0x7d                  	// #125
  408734:	mov	x0, x20
  408738:	bl	404b90 <strchr@plt>
  40873c:	mov	x28, x0
  408740:	cbz	x0, 408790 <wcrtomb@plt+0x3840>
  408744:	sub	x22, x0, x22
  408748:	ldr	x0, [x23, #16]
  40874c:	cmp	x22, x0
  408750:	b.ls	408768 <wcrtomb@plt+0x3818>  // b.plast
  408754:	ldr	x0, [x23, #24]
  408758:	mov	x1, x22
  40875c:	str	x22, [x23, #16]
  408760:	bl	436da4 <argp_usage@@Base+0x98c4>
  408764:	str	x0, [x23, #24]
  408768:	ldr	x0, [x23, #24]
  40876c:	sub	x22, x22, #0x1
  408770:	mov	x2, x22
  408774:	mov	x1, x20
  408778:	bl	404200 <memcpy@plt>
  40877c:	ldr	x0, [x23, #24]
  408780:	strb	wzr, [x0, x22]
  408784:	add	x22, x28, #0x1
  408788:	ldr	x20, [x23, #24]
  40878c:	cbnz	x20, 4087b4 <wcrtomb@plt+0x3864>
  408790:	mov	x1, x21
  408794:	mov	w0, #0x25                  	// #37
  408798:	bl	404cb0 <fputc_unlocked@plt>
  40879c:	add	x19, x19, #0x2
  4087a0:	ldrb	w0, [x22]
  4087a4:	mov	x1, x21
  4087a8:	bl	404cb0 <fputc_unlocked@plt>
  4087ac:	b	408858 <wcrtomb@plt+0x3908>
  4087b0:	mov	x20, #0x0                   	// #0
  4087b4:	ldrb	w0, [x22]
  4087b8:	cmp	w0, #0x64
  4087bc:	b.eq	40887c <wcrtomb@plt+0x392c>  // b.none
  4087c0:	b.hi	40880c <wcrtomb@plt+0x38bc>  // b.pmore
  4087c4:	cmp	w0, #0x54
  4087c8:	b.eq	408898 <wcrtomb@plt+0x3948>  // b.none
  4087cc:	cmp	w0, #0x63
  4087d0:	b.eq	408838 <wcrtomb@plt+0x38e8>  // b.none
  4087d4:	cmp	w0, #0x2a
  4087d8:	b.ne	408790 <wcrtomb@plt+0x3840>  // b.any
  4087dc:	cbz	x20, 4089c8 <wcrtomb@plt+0x3a78>
  4087e0:	mov	x0, x20
  4087e4:	mov	w2, #0xa                   	// #10
  4087e8:	mov	x1, #0x0                   	// #0
  4087ec:	bl	404a90 <strtol@plt>
  4087f0:	mov	x20, x0
  4087f4:	mov	x2, x19
  4087f8:	cmp	x20, x2
  4087fc:	b.hi	4089d4 <wcrtomb@plt+0x3a84>  // b.pmore
  408800:	subs	x0, x20, x19
  408804:	csel	x0, x0, xzr, cs  // cs = hs, nlast
  408808:	b	408874 <wcrtomb@plt+0x3924>
  40880c:	cmp	w0, #0x74
  408810:	b.eq	408984 <wcrtomb@plt+0x3a34>  // b.none
  408814:	cmp	w0, #0x75
  408818:	b.eq	408860 <wcrtomb@plt+0x3910>  // b.none
  40881c:	cmp	w0, #0x73
  408820:	b.ne	408790 <wcrtomb@plt+0x3840>  // b.any
  408824:	mov	x1, x21
  408828:	mov	x0, x24
  40882c:	bl	404d20 <fputs_unlocked@plt>
  408830:	mov	x0, x24
  408834:	b	408870 <wcrtomb@plt+0x3920>
  408838:	ldrb	w3, [sp, #100]
  40883c:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  408840:	mov	w4, w26
  408844:	add	x2, x2, #0x357
  408848:	mov	x1, x19
  40884c:	mov	x0, x21
  408850:	bl	40863c <wcrtomb@plt+0x36ec>
  408854:	add	x19, x19, w0, sxtw
  408858:	add	x20, x22, #0x1
  40885c:	b	4086cc <wcrtomb@plt+0x377c>
  408860:	mov	x1, x21
  408864:	mov	x0, x25
  408868:	bl	404d20 <fputs_unlocked@plt>
  40886c:	mov	x0, x25
  408870:	bl	404280 <strlen@plt>
  408874:	add	x19, x19, x0
  408878:	b	408858 <wcrtomb@plt+0x3908>
  40887c:	bl	405934 <wcrtomb@plt+0x9e4>
  408880:	mov	x0, x21
  408884:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  408888:	mov	w1, #0x1                   	// #1
  40888c:	add	x2, x2, #0x385
  408890:	bl	404a20 <__fprintf_chk@plt>
  408894:	b	408854 <wcrtomb@plt+0x3904>
  408898:	bl	405934 <wcrtomb@plt+0x9e4>
  40889c:	cbz	x20, 40895c <wcrtomb@plt+0x3a0c>
  4088a0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4088a4:	add	x0, x0, #0x420
  4088a8:	add	x1, sp, #0xa8
  4088ac:	mov	w2, #0x4644                	// #17988
  4088b0:	str	x0, [sp, #224]
  4088b4:	mov	x0, x20
  4088b8:	bl	4294ac <wcrtomb@plt+0x2455c>
  4088bc:	cbnz	w0, 408904 <wcrtomb@plt+0x39b4>
  4088c0:	ldp	x0, x2, [sp, #168]
  4088c4:	mov	x1, #0x0                   	// #0
  4088c8:	cmp	x0, x1
  4088cc:	b.ne	408968 <wcrtomb@plt+0x3a18>  // b.any
  4088d0:	sxtw	x0, w0
  4088d4:	cmp	w0, #0x2
  4088d8:	b.le	408978 <wcrtomb@plt+0x3a28>
  4088dc:	mov	x1, x27
  4088e0:	mov	x0, x21
  4088e4:	mov	w3, #0x0                   	// #0
  4088e8:	mov	w2, #0x2c                  	// #44
  4088ec:	bl	405a38 <wcrtomb@plt+0xae8>
  4088f0:	add	x19, x19, w0, sxtw
  4088f4:	cbz	x20, 408858 <wcrtomb@plt+0x3908>
  4088f8:	add	x0, sp, #0xa8
  4088fc:	bl	426d30 <wcrtomb@plt+0x21de0>
  408900:	b	408858 <wcrtomb@plt+0x3908>
  408904:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408908:	ldr	x0, [x0, #1016]
  40890c:	cbz	x0, 408914 <wcrtomb@plt+0x39c4>
  408910:	blr	x0
  408914:	mov	w2, #0x5                   	// #5
  408918:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40891c:	mov	x0, #0x0                   	// #0
  408920:	add	x1, x1, #0x38a
  408924:	bl	404d00 <dcgettext@plt>
  408928:	mov	x2, x0
  40892c:	add	x0, sp, #0xa8
  408930:	str	x2, [sp, #104]
  408934:	bl	426dc8 <wcrtomb@plt+0x21e78>
  408938:	mov	x4, x0
  40893c:	ldr	x2, [sp, #104]
  408940:	mov	w1, #0x0                   	// #0
  408944:	mov	w0, #0x0                   	// #0
  408948:	mov	x3, x20
  40894c:	bl	4042e0 <error@plt>
  408950:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  408954:	mov	w1, #0x2                   	// #2
  408958:	str	w1, [x0, #3464]
  40895c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x36380>
  408960:	add	x1, x1, #0x7f0
  408964:	b	4088e0 <wcrtomb@plt+0x3990>
  408968:	ldr	x3, [x2, x1, lsl #3]
  40896c:	str	x3, [x27, x1, lsl #3]
  408970:	add	x1, x1, #0x1
  408974:	b	4088c8 <wcrtomb@plt+0x3978>
  408978:	str	xzr, [x27, x0, lsl #3]
  40897c:	add	x0, x0, #0x1
  408980:	b	4088d4 <wcrtomb@plt+0x3984>
  408984:	cbnz	x20, 408990 <wcrtomb@plt+0x3a40>
  408988:	adrp	x20, 44d000 <_obstack_memory_used@@Base+0x15380>
  40898c:	add	x20, x20, #0x116
  408990:	mov	x1, #0x0                   	// #0
  408994:	add	x0, sp, #0xa8
  408998:	bl	404720 <gettimeofday@plt>
  40899c:	add	x0, sp, #0xa8
  4089a0:	bl	404510 <localtime@plt>
  4089a4:	ldr	x1, [sp, #176]
  4089a8:	mov	w4, #0x3e8                 	// #1000
  4089ac:	mov	x2, x0
  4089b0:	mov	x3, #0x0                   	// #0
  4089b4:	mov	x0, x21
  4089b8:	mul	w4, w4, w1
  4089bc:	mov	x1, x20
  4089c0:	bl	42fd14 <argp_usage@@Base+0x2834>
  4089c4:	b	408874 <wcrtomb@plt+0x3924>
  4089c8:	mov	x0, x21
  4089cc:	bl	4085e0 <wcrtomb@plt+0x3690>
  4089d0:	b	4087f0 <wcrtomb@plt+0x38a0>
  4089d4:	mov	x1, x21
  4089d8:	mov	w0, #0x20                  	// #32
  4089dc:	str	x2, [sp, #104]
  4089e0:	bl	404cb0 <fputc_unlocked@plt>
  4089e4:	ldr	x2, [sp, #104]
  4089e8:	add	x2, x2, #0x1
  4089ec:	b	4087f8 <wcrtomb@plt+0x38a8>
  4089f0:	mov	x1, x21
  4089f4:	bl	404cb0 <fputc_unlocked@plt>
  4089f8:	ldrb	w0, [x20]
  4089fc:	cmp	w0, #0xd
  408a00:	b.ne	408a18 <wcrtomb@plt+0x3ac8>  // b.any
  408a04:	mov	w0, #0x1                   	// #1
  408a08:	mov	x22, x20
  408a0c:	mov	x19, #0x0                   	// #0
  408a10:	str	w0, [x23, #32]
  408a14:	b	408858 <wcrtomb@plt+0x3908>
  408a18:	add	x19, x19, #0x1
  408a1c:	mov	x22, x20
  408a20:	b	408858 <wcrtomb@plt+0x3908>
  408a24:	stp	x29, x30, [sp, #-64]!
  408a28:	mov	x29, sp
  408a2c:	stp	x19, x20, [sp, #16]
  408a30:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  408a34:	add	x20, x20, #0x6f0
  408a38:	mov	x19, x0
  408a3c:	ldr	w0, [x20, #36]
  408a40:	str	x21, [sp, #32]
  408a44:	cbnz	w0, 408a58 <wcrtomb@plt+0x3b08>
  408a48:	add	x0, x20, #0x28
  408a4c:	bl	404680 <sigemptyset@plt>
  408a50:	mov	w0, #0x1                   	// #1
  408a54:	str	w0, [x20, #36]
  408a58:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  408a5c:	mov	x0, x19
  408a60:	add	x1, x1, #0xc29
  408a64:	bl	404a30 <strcmp@plt>
  408a68:	cbz	w0, 408a80 <wcrtomb@plt+0x3b30>
  408a6c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408a70:	mov	x0, x19
  408a74:	add	x1, x1, #0x3a7
  408a78:	bl	404a30 <strcmp@plt>
  408a7c:	cbnz	w0, 408a8c <wcrtomb@plt+0x3b3c>
  408a80:	mov	w0, #0x0                   	// #0
  408a84:	bl	408598 <wcrtomb@plt+0x3648>
  408a88:	b	408af4 <wcrtomb@plt+0x3ba4>
  408a8c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408a90:	mov	x0, x19
  408a94:	add	x1, x1, #0x3ab
  408a98:	bl	404a30 <strcmp@plt>
  408a9c:	cbnz	w0, 408aa8 <wcrtomb@plt+0x3b58>
  408aa0:	mov	w0, #0x1                   	// #1
  408aa4:	b	408a84 <wcrtomb@plt+0x3b34>
  408aa8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408aac:	mov	x0, x19
  408ab0:	add	x1, x1, #0x3b0
  408ab4:	bl	404a30 <strcmp@plt>
  408ab8:	cbnz	w0, 408ac4 <wcrtomb@plt+0x3b74>
  408abc:	mov	w0, #0x2                   	// #2
  408ac0:	b	408a84 <wcrtomb@plt+0x3b34>
  408ac4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408ac8:	mov	x0, x19
  408acc:	add	x1, x1, #0x3b5
  408ad0:	mov	x2, #0x5                   	// #5
  408ad4:	bl	4046a0 <strncmp@plt>
  408ad8:	cbnz	w0, 408b04 <wcrtomb@plt+0x3bb4>
  408adc:	mov	w0, #0x2                   	// #2
  408ae0:	bl	408598 <wcrtomb@plt+0x3648>
  408ae4:	mov	x20, x0
  408ae8:	add	x0, x19, #0x5
  408aec:	bl	40852c <wcrtomb@plt+0x35dc>
  408af0:	str	x0, [x20, #16]
  408af4:	ldp	x19, x20, [sp, #16]
  408af8:	ldr	x21, [sp, #32]
  408afc:	ldp	x29, x30, [sp], #64
  408b00:	ret
  408b04:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408b08:	mov	x0, x19
  408b0c:	add	x1, x1, #0x3bb
  408b10:	mov	x2, #0x5                   	// #5
  408b14:	bl	4046a0 <strncmp@plt>
  408b18:	cbnz	w0, 408b24 <wcrtomb@plt+0x3bd4>
  408b1c:	mov	w0, #0x5                   	// #5
  408b20:	b	408ae0 <wcrtomb@plt+0x3b90>
  408b24:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408b28:	mov	x0, x19
  408b2c:	add	x1, x1, #0x3c1
  408b30:	mov	x2, #0x7                   	// #7
  408b34:	bl	4046a0 <strncmp@plt>
  408b38:	cbnz	w0, 408b50 <wcrtomb@plt+0x3c00>
  408b3c:	mov	w0, #0x3                   	// #3
  408b40:	bl	408598 <wcrtomb@plt+0x3648>
  408b44:	mov	x20, x0
  408b48:	add	x0, x19, #0x7
  408b4c:	b	408aec <wcrtomb@plt+0x3b9c>
  408b50:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408b54:	mov	x0, x19
  408b58:	add	x1, x1, #0x3c9
  408b5c:	mov	x2, #0x6                   	// #6
  408b60:	bl	4046a0 <strncmp@plt>
  408b64:	cbnz	w0, 408bd4 <wcrtomb@plt+0x3c84>
  408b68:	add	x1, sp, #0x38
  408b6c:	add	x0, x19, #0x6
  408b70:	mov	w2, #0xa                   	// #10
  408b74:	bl	404270 <strtoul@plt>
  408b78:	mov	x20, x0
  408b7c:	ldr	x0, [sp, #56]
  408b80:	ldrb	w0, [x0]
  408b84:	cbz	w0, 408bc4 <wcrtomb@plt+0x3c74>
  408b88:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408b8c:	ldr	x0, [x0, #1016]
  408b90:	cbz	x0, 408b98 <wcrtomb@plt+0x3c48>
  408b94:	blr	x0
  408b98:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408b9c:	add	x1, x1, #0x3d0
  408ba0:	mov	w2, #0x5                   	// #5
  408ba4:	mov	x0, #0x0                   	// #0
  408ba8:	bl	404d00 <dcgettext@plt>
  408bac:	mov	x3, x19
  408bb0:	mov	x2, x0
  408bb4:	mov	w1, #0x0                   	// #0
  408bb8:	mov	w0, #0x0                   	// #0
  408bbc:	bl	4042e0 <error@plt>
  408bc0:	bl	40d47c <wcrtomb@plt+0x852c>
  408bc4:	mov	w0, #0x4                   	// #4
  408bc8:	bl	408598 <wcrtomb@plt+0x3648>
  408bcc:	str	x20, [x0, #16]
  408bd0:	b	408af4 <wcrtomb@plt+0x3ba4>
  408bd4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408bd8:	mov	x0, x19
  408bdc:	add	x1, x1, #0x3e8
  408be0:	bl	404a30 <strcmp@plt>
  408be4:	cbnz	w0, 408bf0 <wcrtomb@plt+0x3ca0>
  408be8:	mov	w0, #0x6                   	// #6
  408bec:	b	408a84 <wcrtomb@plt+0x3b34>
  408bf0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408bf4:	mov	x0, x19
  408bf8:	add	x1, x1, #0x3ef
  408bfc:	mov	x2, #0x5                   	// #5
  408c00:	bl	4046a0 <strncmp@plt>
  408c04:	cbnz	w0, 408c30 <wcrtomb@plt+0x3ce0>
  408c08:	mov	w0, #0x7                   	// #7
  408c0c:	bl	408598 <wcrtomb@plt+0x3648>
  408c10:	mov	x21, x0
  408c14:	add	x0, x19, #0x5
  408c18:	bl	41f064 <wcrtomb@plt+0x1a114>
  408c1c:	mov	w1, w0
  408c20:	add	x0, x20, #0x28
  408c24:	str	w1, [x21, #16]
  408c28:	bl	404d90 <sigaddset@plt>
  408c2c:	b	408af4 <wcrtomb@plt+0x3ba4>
  408c30:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408c34:	ldr	x0, [x0, #1016]
  408c38:	cbz	x0, 408c40 <wcrtomb@plt+0x3cf0>
  408c3c:	blr	x0
  408c40:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408c44:	mov	w2, #0x5                   	// #5
  408c48:	add	x1, x1, #0x3f5
  408c4c:	b	408ba4 <wcrtomb@plt+0x3c54>
  408c50:	stp	x29, x30, [sp, #-32]!
  408c54:	mov	x29, sp
  408c58:	str	x19, [sp, #16]
  408c5c:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  408c60:	add	x19, x19, #0x6f0
  408c64:	ldr	w0, [x19, #36]
  408c68:	cbnz	w0, 408c8c <wcrtomb@plt+0x3d3c>
  408c6c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408c70:	ldr	w0, [x0, #864]
  408c74:	cbz	w0, 408cc4 <wcrtomb@plt+0x3d74>
  408c78:	ldr	x0, [x19, #8]
  408c7c:	cbnz	x0, 408cc4 <wcrtomb@plt+0x3d74>
  408c80:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  408c84:	add	x0, x0, #0x3b0
  408c88:	bl	408a24 <wcrtomb@plt+0x3ad4>
  408c8c:	ldr	w0, [x19, #36]
  408c90:	cmp	w0, #0x1
  408c94:	b.ne	408cc4 <wcrtomb@plt+0x3d74>  // b.any
  408c98:	add	x1, x19, #0x28
  408c9c:	mov	x2, #0x0                   	// #0
  408ca0:	mov	w0, #0x0                   	// #0
  408ca4:	bl	404350 <sigprocmask@plt>
  408ca8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408cac:	ldr	w1, [x0, #864]
  408cb0:	cbnz	w1, 408cbc <wcrtomb@plt+0x3d6c>
  408cb4:	mov	w1, #0xa                   	// #10
  408cb8:	str	w1, [x0, #864]
  408cbc:	mov	w0, #0x2                   	// #2
  408cc0:	str	w0, [x19, #36]
  408cc4:	ldr	x19, [sp, #16]
  408cc8:	ldp	x29, x30, [sp], #32
  408ccc:	ret
  408cd0:	stp	x29, x30, [sp, #-48]!
  408cd4:	mov	x29, sp
  408cd8:	stp	x19, x20, [sp, #16]
  408cdc:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  408ce0:	add	x19, x19, #0x6f0
  408ce4:	str	x21, [sp, #32]
  408ce8:	ldr	x21, [x19, #8]
  408cec:	cbnz	x21, 408d00 <wcrtomb@plt+0x3db0>
  408cf0:	ldp	x19, x20, [sp, #16]
  408cf4:	ldr	x21, [sp, #32]
  408cf8:	ldp	x29, x30, [sp], #48
  408cfc:	ret
  408d00:	ldr	w0, [x21, #8]
  408d04:	cmp	w0, #0x3
  408d08:	b.ne	408d44 <wcrtomb@plt+0x3df4>  // b.any
  408d0c:	ldr	x0, [x19, #168]
  408d10:	cbz	x0, 408d44 <wcrtomb@plt+0x3df4>
  408d14:	ldr	w1, [x19, #32]
  408d18:	cbz	w1, 408d44 <wcrtomb@plt+0x3df4>
  408d1c:	bl	4085e0 <wcrtomb@plt+0x3690>
  408d20:	mov	x20, x0
  408d24:	sub	x20, x20, #0x1
  408d28:	cmn	x20, #0x1
  408d2c:	ldr	x1, [x19, #168]
  408d30:	b.ne	408d4c <wcrtomb@plt+0x3dfc>  // b.any
  408d34:	mov	w0, #0xd                   	// #13
  408d38:	bl	404cb0 <fputc_unlocked@plt>
  408d3c:	ldr	x0, [x19, #168]
  408d40:	bl	404bf0 <fflush_unlocked@plt>
  408d44:	ldr	x21, [x21]
  408d48:	b	408cec <wcrtomb@plt+0x3d9c>
  408d4c:	mov	w0, #0x20                  	// #32
  408d50:	bl	404cb0 <fputc_unlocked@plt>
  408d54:	b	408d24 <wcrtomb@plt+0x3dd4>
  408d58:	stp	x29, x30, [sp, #-80]!
  408d5c:	mov	x29, sp
  408d60:	stp	x23, x24, [sp, #48]
  408d64:	and	w24, w0, #0xff
  408d68:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408d6c:	stp	x19, x20, [sp, #16]
  408d70:	ldr	w2, [x0, #864]
  408d74:	stp	x21, x22, [sp, #32]
  408d78:	cbz	w2, 408db4 <wcrtomb@plt+0x3e64>
  408d7c:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  408d80:	add	x19, x19, #0x6f0
  408d84:	ldr	w0, [x19, #176]
  408d88:	add	w0, w0, #0x1
  408d8c:	str	w0, [x19, #176]
  408d90:	udiv	w1, w0, w2
  408d94:	msub	w0, w1, w2, w0
  408d98:	cbnz	w0, 408db4 <wcrtomb@plt+0x3e64>
  408d9c:	ldr	x20, [x19, #8]
  408da0:	adrp	x22, 447000 <_obstack_memory_used@@Base+0xf380>
  408da4:	adrp	x21, 44a000 <_obstack_memory_used@@Base+0x12380>
  408da8:	add	x22, x22, #0x414
  408dac:	add	x21, x21, #0x2d8
  408db0:	cbnz	x20, 408dc8 <wcrtomb@plt+0x3e78>
  408db4:	ldp	x19, x20, [sp, #16]
  408db8:	ldp	x21, x22, [sp, #32]
  408dbc:	ldp	x23, x24, [sp, #48]
  408dc0:	ldp	x29, x30, [sp], #80
  408dc4:	ret
  408dc8:	ldr	w0, [x20, #8]
  408dcc:	cmp	w0, #0x7
  408dd0:	b.hi	408dfc <wcrtomb@plt+0x3eac>  // b.pmore
  408dd4:	ldrb	w0, [x22, w0, uxtw]
  408dd8:	adr	x1, 408de4 <wcrtomb@plt+0x3e94>
  408ddc:	add	x0, x1, w0, sxtb #2
  408de0:	br	x0
  408de4:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  408de8:	mov	w0, #0x2e                  	// #46
  408dec:	ldr	x1, [x23, #3936]
  408df0:	bl	404cb0 <fputc_unlocked@plt>
  408df4:	ldr	x0, [x23, #3936]
  408df8:	bl	404bf0 <fflush_unlocked@plt>
  408dfc:	ldr	x20, [x20]
  408e00:	b	408db0 <wcrtomb@plt+0x3e60>
  408e04:	ldr	x0, [x19, #168]
  408e08:	cbnz	x0, 408e20 <wcrtomb@plt+0x3ed0>
  408e0c:	mov	x1, x21
  408e10:	adrp	x0, 446000 <_obstack_memory_used@@Base+0xe380>
  408e14:	add	x0, x0, #0xc9d
  408e18:	bl	4045c0 <fopen@plt>
  408e1c:	str	x0, [x19, #168]
  408e20:	ldr	x1, [x19, #168]
  408e24:	cbz	x1, 408dfc <wcrtomb@plt+0x3eac>
  408e28:	mov	w0, #0x7                   	// #7
  408e2c:	bl	404cb0 <fputc_unlocked@plt>
  408e30:	ldr	x0, [x19, #168]
  408e34:	b	408df8 <wcrtomb@plt+0x3ea8>
  408e38:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  408e3c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  408e40:	mov	w1, #0x1                   	// #1
  408e44:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  408e48:	ldr	x3, [x0, #3552]
  408e4c:	add	x2, x2, #0xcb5
  408e50:	ldr	x0, [x23, #1160]
  408e54:	bl	404a20 <__fprintf_chk@plt>
  408e58:	sxtw	x1, w0
  408e5c:	ldr	w4, [x19, #176]
  408e60:	mov	w3, w24
  408e64:	ldr	x0, [x23, #1160]
  408e68:	ldr	x2, [x20, #16]
  408e6c:	bl	40863c <wcrtomb@plt+0x36ec>
  408e70:	ldr	x1, [x23, #1160]
  408e74:	mov	w0, #0xa                   	// #10
  408e78:	bl	404cb0 <fputc_unlocked@plt>
  408e7c:	b	408dfc <wcrtomb@plt+0x3eac>
  408e80:	ldr	x0, [x19, #168]
  408e84:	cbnz	x0, 408e9c <wcrtomb@plt+0x3f4c>
  408e88:	mov	x1, x21
  408e8c:	adrp	x0, 446000 <_obstack_memory_used@@Base+0xe380>
  408e90:	add	x0, x0, #0xc9d
  408e94:	bl	4045c0 <fopen@plt>
  408e98:	str	x0, [x19, #168]
  408e9c:	ldr	x0, [x19, #168]
  408ea0:	cbz	x0, 408dfc <wcrtomb@plt+0x3eac>
  408ea4:	ldr	w4, [x19, #176]
  408ea8:	mov	w3, w24
  408eac:	ldr	x2, [x20, #16]
  408eb0:	mov	x1, #0x0                   	// #0
  408eb4:	bl	40863c <wcrtomb@plt+0x36ec>
  408eb8:	b	408dfc <wcrtomb@plt+0x3eac>
  408ebc:	ldr	w0, [x20, #16]
  408ec0:	bl	404750 <sleep@plt>
  408ec4:	b	408dfc <wcrtomb@plt+0x3eac>
  408ec8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408ecc:	ldr	w2, [x19, #176]
  408ed0:	ldr	x0, [x0, #744]
  408ed4:	ldr	x1, [x0]
  408ed8:	ldr	x0, [x20, #16]
  408edc:	bl	41e7d4 <wcrtomb@plt+0x19884>
  408ee0:	b	408dfc <wcrtomb@plt+0x3eac>
  408ee4:	bl	405934 <wcrtomb@plt+0x9e4>
  408ee8:	bl	405c10 <wcrtomb@plt+0xcc0>
  408eec:	b	408dfc <wcrtomb@plt+0x3eac>
  408ef0:	add	x1, sp, #0x4c
  408ef4:	add	x0, x19, #0x28
  408ef8:	bl	404ac0 <sigwait@plt>
  408efc:	b	408dfc <wcrtomb@plt+0x3eac>
  408f00:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408f04:	ldr	w0, [x0, #864]
  408f08:	cbz	w0, 408f34 <wcrtomb@plt+0x3fe4>
  408f0c:	stp	x29, x30, [sp, #-16]!
  408f10:	mov	x29, sp
  408f14:	bl	408cd0 <wcrtomb@plt+0x3d80>
  408f18:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  408f1c:	ldr	x0, [x0, #1944]
  408f20:	cbz	x0, 408f2c <wcrtomb@plt+0x3fdc>
  408f24:	ldp	x29, x30, [sp], #16
  408f28:	b	404570 <fclose@plt>
  408f2c:	ldp	x29, x30, [sp], #16
  408f30:	ret
  408f34:	ret
  408f38:	mov	w0, #0x1                   	// #1
  408f3c:	ret
  408f40:	stp	x29, x30, [sp, #-64]!
  408f44:	mov	x29, sp
  408f48:	stp	x21, x22, [sp, #32]
  408f4c:	mov	x21, x0
  408f50:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408f54:	add	x0, x0, #0x68
  408f58:	stp	x19, x20, [sp, #16]
  408f5c:	ldr	x20, [x0, #136]
  408f60:	str	x23, [sp, #48]
  408f64:	adrp	x23, 408000 <wcrtomb@plt+0x30b0>
  408f68:	add	x23, x23, #0xf38
  408f6c:	bl	4058a8 <wcrtomb@plt+0x958>
  408f70:	cbnz	x20, 408f88 <wcrtomb@plt+0x4038>
  408f74:	ldp	x19, x20, [sp, #16]
  408f78:	ldp	x21, x22, [sp, #32]
  408f7c:	ldr	x23, [sp, #48]
  408f80:	ldp	x29, x30, [sp], #64
  408f84:	b	4058b8 <wcrtomb@plt+0x968>
  408f88:	bl	406f04 <wcrtomb@plt+0x1fb4>
  408f8c:	mov	x22, x0
  408f90:	cbnz	x0, 408fe8 <wcrtomb@plt+0x4098>
  408f94:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  408f98:	ldr	x0, [x0, #1016]
  408f9c:	cbz	x0, 408fa4 <wcrtomb@plt+0x4054>
  408fa0:	blr	x0
  408fa4:	mov	w2, #0x5                   	// #5
  408fa8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  408fac:	mov	x0, #0x0                   	// #0
  408fb0:	add	x1, x1, #0x41c
  408fb4:	bl	404d00 <dcgettext@plt>
  408fb8:	mov	x2, x0
  408fbc:	mov	w1, #0x0                   	// #0
  408fc0:	mov	w0, #0x0                   	// #0
  408fc4:	bl	4042e0 <error@plt>
  408fc8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  408fcc:	mov	w1, #0x2                   	// #2
  408fd0:	ldp	x19, x20, [sp, #16]
  408fd4:	str	w1, [x0, #3464]
  408fd8:	ldp	x21, x22, [sp, #32]
  408fdc:	ldr	x23, [sp, #48]
  408fe0:	ldp	x29, x30, [sp], #64
  408fe4:	ret
  408fe8:	bl	405da8 <wcrtomb@plt+0xe58>
  408fec:	cmp	x0, x20
  408ff0:	csel	x19, x0, x20, ls  // ls = plast
  408ff4:	mov	x1, x22
  408ff8:	mov	x0, x19
  408ffc:	sub	x20, x20, x19
  409000:	blr	x21
  409004:	cmp	w0, #0x0
  409008:	sub	x0, x19, #0x1
  40900c:	csel	x21, x21, x23, ne  // ne = any
  409010:	add	x0, x22, x0
  409014:	bl	405c98 <wcrtomb@plt+0xd48>
  409018:	mov	x0, x20
  40901c:	bl	4058d0 <wcrtomb@plt+0x980>
  409020:	b	408f70 <wcrtomb@plt+0x4020>
  409024:	stp	x29, x30, [sp, #-32]!
  409028:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40902c:	mov	x29, sp
  409030:	ldr	x1, [x0, #928]
  409034:	add	x0, sp, #0x18
  409038:	bl	418dd0 <wcrtomb@plt+0x13e80>
  40903c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  409040:	str	x0, [x1, #1960]
  409044:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409048:	ldr	x0, [x0, #840]
  40904c:	cbz	x0, 409054 <wcrtomb@plt+0x4104>
  409050:	bl	414434 <wcrtomb@plt+0xf4e4>
  409054:	ldp	x29, x30, [sp], #32
  409058:	ret
  40905c:	stp	x29, x30, [sp, #-320]!
  409060:	mov	x29, sp
  409064:	stp	x19, x20, [sp, #16]
  409068:	str	x21, [sp, #32]
  40906c:	str	q0, [sp, #144]
  409070:	str	q1, [sp, #160]
  409074:	str	q2, [sp, #176]
  409078:	str	q3, [sp, #192]
  40907c:	str	q4, [sp, #208]
  409080:	str	q5, [sp, #224]
  409084:	str	q6, [sp, #240]
  409088:	str	q7, [sp, #256]
  40908c:	stp	x2, x3, [sp, #272]
  409090:	stp	x4, x5, [sp, #288]
  409094:	stp	x6, x7, [sp, #304]
  409098:	cbz	x1, 409124 <wcrtomb@plt+0x41d4>
  40909c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  4090a0:	mov	x19, x1
  4090a4:	ldr	x1, [x0, #8]
  4090a8:	mov	w0, #0x1                   	// #1
  4090ac:	ldr	x21, [x20, #3936]
  4090b0:	bl	417bf8 <wcrtomb@plt+0x12ca8>
  4090b4:	mov	x3, x0
  4090b8:	mov	w1, #0x1                   	// #1
  4090bc:	mov	x0, x21
  4090c0:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  4090c4:	add	x2, x2, #0xcb5
  4090c8:	bl	404a20 <__fprintf_chk@plt>
  4090cc:	add	x0, sp, #0x140
  4090d0:	stp	x0, x0, [sp, #80]
  4090d4:	add	x0, sp, #0x110
  4090d8:	str	x0, [sp, #96]
  4090dc:	mov	w0, #0xffffffd0            	// #-48
  4090e0:	str	w0, [sp, #104]
  4090e4:	mov	w0, #0xffffff80            	// #-128
  4090e8:	str	w0, [sp, #108]
  4090ec:	ldp	x2, x3, [sp, #80]
  4090f0:	stp	x2, x3, [sp, #48]
  4090f4:	ldp	x0, x1, [sp, #96]
  4090f8:	stp	x0, x1, [sp, #64]
  4090fc:	stp	x0, x1, [sp, #128]
  409100:	mov	w1, #0x1                   	// #1
  409104:	ldr	x0, [x20, #3936]
  409108:	stp	x2, x3, [sp, #112]
  40910c:	add	x3, sp, #0x30
  409110:	mov	x2, x19
  409114:	bl	404790 <__vfprintf_chk@plt>
  409118:	ldr	x1, [x20, #3936]
  40911c:	mov	w0, #0xa                   	// #10
  409120:	bl	404420 <fputc@plt>
  409124:	mov	w0, #0x1                   	// #1
  409128:	bl	421c04 <wcrtomb@plt+0x1ccb4>
  40912c:	ldp	x19, x20, [sp, #16]
  409130:	ldr	x21, [sp, #32]
  409134:	ldp	x29, x30, [sp], #320
  409138:	ret
  40913c:	stp	x29, x30, [sp, #-48]!
  409140:	mov	x29, sp
  409144:	stp	x19, x20, [sp, #16]
  409148:	mov	x19, x0
  40914c:	mov	x20, x1
  409150:	stp	x21, x22, [sp, #32]
  409154:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  409158:	add	x0, x22, #0x7a8
  40915c:	ldr	x1, [x22, #1960]
  409160:	mov	x2, x19
  409164:	ldr	w0, [x0, #8]
  409168:	bl	4188e4 <wcrtomb@plt+0x13994>
  40916c:	cmp	x19, x0
  409170:	b.eq	4091e8 <wcrtomb@plt+0x4298>  // b.none
  409174:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  409178:	mov	x21, x0
  40917c:	cmn	x0, #0x1
  409180:	add	x20, x20, #0x68
  409184:	b.ne	4091a0 <wcrtomb@plt+0x4250>  // b.any
  409188:	ldr	x0, [x20, #8]
  40918c:	bl	424e94 <wcrtomb@plt+0x1ff44>
  409190:	mov	x0, x20
  409194:	mov	x1, #0x0                   	// #0
  409198:	bl	40905c <wcrtomb@plt+0x410c>
  40919c:	b	4091d4 <wcrtomb@plt+0x4284>
  4091a0:	mov	w4, #0x5                   	// #5
  4091a4:	mov	x3, x19
  4091a8:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  4091ac:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4091b0:	add	x2, x2, #0x436
  4091b4:	add	x1, x1, #0x457
  4091b8:	mov	x0, #0x0                   	// #0
  4091bc:	bl	404c10 <dcngettext@plt>
  4091c0:	mov	x3, x19
  4091c4:	mov	x1, x0
  4091c8:	mov	x2, x21
  4091cc:	mov	x0, x20
  4091d0:	bl	40905c <wcrtomb@plt+0x410c>
  4091d4:	mov	w0, #0x0                   	// #0
  4091d8:	ldp	x19, x20, [sp, #16]
  4091dc:	ldp	x21, x22, [sp, #32]
  4091e0:	ldp	x29, x30, [sp], #48
  4091e4:	ret
  4091e8:	ldr	x1, [x22, #1960]
  4091ec:	mov	x2, x19
  4091f0:	mov	x0, x20
  4091f4:	bl	4049f0 <memcmp@plt>
  4091f8:	cbz	w0, 409220 <wcrtomb@plt+0x42d0>
  4091fc:	mov	w2, #0x5                   	// #5
  409200:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409204:	mov	x0, #0x0                   	// #0
  409208:	add	x1, x1, #0x477
  40920c:	bl	404d00 <dcgettext@plt>
  409210:	mov	x1, x0
  409214:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409218:	add	x0, x0, #0x68
  40921c:	b	409198 <wcrtomb@plt+0x4248>
  409220:	mov	w0, #0x1                   	// #1
  409224:	b	4091d8 <wcrtomb@plt+0x4288>
  409228:	stp	x29, x30, [sp, #-32]!
  40922c:	mov	x29, sp
  409230:	str	x19, [sp, #16]
  409234:	mov	x19, x0
  409238:	bl	4186c8 <wcrtomb@plt+0x13778>
  40923c:	cbz	w0, 409280 <wcrtomb@plt+0x4330>
  409240:	bl	404e10 <__errno_location@plt>
  409244:	ldr	w0, [x0]
  409248:	cmp	w0, #0x2
  40924c:	mov	x0, x19
  409250:	b.ne	409278 <wcrtomb@plt+0x4328>  // b.any
  409254:	bl	4252ec <wcrtomb@plt+0x2039c>
  409258:	mov	x1, #0x0                   	// #0
  40925c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409260:	add	x0, x0, #0x68
  409264:	bl	40905c <wcrtomb@plt+0x410c>
  409268:	mov	w0, #0x0                   	// #0
  40926c:	ldr	x19, [sp, #16]
  409270:	ldp	x29, x30, [sp], #32
  409274:	ret
  409278:	bl	4252dc <wcrtomb@plt+0x2038c>
  40927c:	b	409258 <wcrtomb@plt+0x4308>
  409280:	mov	w0, #0x1                   	// #1
  409284:	b	40926c <wcrtomb@plt+0x431c>
  409288:	sub	sp, sp, #0x440
  40928c:	stp	x29, x30, [sp]
  409290:	mov	x29, sp
  409294:	stp	x19, x20, [sp, #16]
  409298:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  40929c:	add	x19, x19, #0x68
  4092a0:	stp	x21, x22, [sp, #32]
  4092a4:	add	x22, sp, #0x40
  4092a8:	ldr	x0, [x19, #24]
  4092ac:	str	x23, [sp, #48]
  4092b0:	bl	404280 <strlen@plt>
  4092b4:	mov	x21, x0
  4092b8:	add	x23, x0, #0x1
  4092bc:	cmp	x0, #0x3ff
  4092c0:	b.ls	409338 <wcrtomb@plt+0x43e8>  // b.plast
  4092c4:	mov	x0, x23
  4092c8:	bl	436d44 <argp_usage@@Base+0x9864>
  4092cc:	mov	x20, x0
  4092d0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  4092d4:	mov	x3, x23
  4092d8:	ldr	x1, [x19, #8]
  4092dc:	mov	x2, x20
  4092e0:	ldr	w0, [x0, #2264]
  4092e4:	bl	404f40 <readlinkat@plt>
  4092e8:	tbz	x0, #63, 409348 <wcrtomb@plt+0x43f8>
  4092ec:	bl	404e10 <__errno_location@plt>
  4092f0:	ldr	w1, [x0]
  4092f4:	ldr	x0, [x19, #8]
  4092f8:	cmp	w1, #0x2
  4092fc:	b.ne	409340 <wcrtomb@plt+0x43f0>  // b.any
  409300:	bl	4250b4 <wcrtomb@plt+0x20164>
  409304:	mov	x1, #0x0                   	// #0
  409308:	mov	x0, x19
  40930c:	bl	40905c <wcrtomb@plt+0x410c>
  409310:	cmp	x20, x22
  409314:	b.eq	409320 <wcrtomb@plt+0x43d0>  // b.none
  409318:	mov	x0, x20
  40931c:	bl	404ae0 <free@plt>
  409320:	ldp	x29, x30, [sp]
  409324:	ldp	x19, x20, [sp, #16]
  409328:	ldp	x21, x22, [sp, #32]
  40932c:	ldr	x23, [sp, #48]
  409330:	add	sp, sp, #0x440
  409334:	ret
  409338:	mov	x20, x22
  40933c:	b	4092d0 <wcrtomb@plt+0x4380>
  409340:	bl	4250a4 <wcrtomb@plt+0x20154>
  409344:	b	409304 <wcrtomb@plt+0x43b4>
  409348:	cmp	x21, x0
  40934c:	b.ne	409364 <wcrtomb@plt+0x4414>  // b.any
  409350:	ldr	x0, [x19, #24]
  409354:	mov	x2, x21
  409358:	mov	x1, x20
  40935c:	bl	4049f0 <memcmp@plt>
  409360:	cbz	w0, 409310 <wcrtomb@plt+0x43c0>
  409364:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409368:	add	x1, x1, #0x487
  40936c:	mov	w2, #0x5                   	// #5
  409370:	mov	x0, #0x0                   	// #0
  409374:	bl	404d00 <dcgettext@plt>
  409378:	mov	x1, x0
  40937c:	b	409308 <wcrtomb@plt+0x43b8>
  409380:	stp	x29, x30, [sp, #-160]!
  409384:	mov	x29, sp
  409388:	str	x19, [sp, #16]
  40938c:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  409390:	add	x19, x19, #0x68
  409394:	add	x1, sp, #0x20
  409398:	ldr	x0, [x19, #8]
  40939c:	bl	409228 <wcrtomb@plt+0x42d8>
  4093a0:	cbz	w0, 4093d4 <wcrtomb@plt+0x4484>
  4093a4:	ldr	w0, [sp, #48]
  4093a8:	and	w1, w0, #0xf000
  4093ac:	cmp	w1, #0x4, lsl #12
  4093b0:	b.eq	4093e0 <wcrtomb@plt+0x4490>  // b.none
  4093b4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4093b8:	add	x1, x1, #0x497
  4093bc:	mov	w2, #0x5                   	// #5
  4093c0:	mov	x0, #0x0                   	// #0
  4093c4:	bl	404d00 <dcgettext@plt>
  4093c8:	mov	x1, x0
  4093cc:	mov	x0, x19
  4093d0:	bl	40905c <wcrtomb@plt+0x410c>
  4093d4:	ldr	x19, [sp, #16]
  4093d8:	ldp	x29, x30, [sp], #160
  4093dc:	ret
  4093e0:	ldr	w1, [x19, #104]
  4093e4:	eor	w0, w0, w1
  4093e8:	tst	x0, #0xfff
  4093ec:	b.eq	4093d4 <wcrtomb@plt+0x4484>  // b.none
  4093f0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4093f4:	mov	w2, #0x5                   	// #5
  4093f8:	add	x1, x1, #0x4a9
  4093fc:	b	4093c0 <wcrtomb@plt+0x4470>
  409400:	stp	x29, x30, [sp, #-320]!
  409404:	mov	x29, sp
  409408:	stp	x19, x20, [sp, #16]
  40940c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  409410:	ldr	x0, [x20, #4080]
  409414:	stp	x21, x22, [sp, #32]
  409418:	str	x23, [sp, #48]
  40941c:	bl	405c98 <wcrtomb@plt+0xd48>
  409420:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409424:	ldr	w0, [x0, #652]
  409428:	cbz	w0, 409478 <wcrtomb@plt+0x4528>
  40942c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  409430:	ldrb	w0, [x0, #4032]
  409434:	cbz	w0, 409464 <wcrtomb@plt+0x4514>
  409438:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40943c:	mov	w2, #0x5                   	// #5
  409440:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409444:	add	x1, x1, #0x4b6
  409448:	ldr	x19, [x0, #3936]
  40944c:	mov	x0, #0x0                   	// #0
  409450:	bl	404d00 <dcgettext@plt>
  409454:	mov	x2, x0
  409458:	mov	w1, #0x1                   	// #1
  40945c:	mov	x0, x19
  409460:	bl	404a20 <__fprintf_chk@plt>
  409464:	ldr	x1, [x20, #4080]
  409468:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40946c:	mov	x2, #0xffffffffffffffff    	// #-1
  409470:	add	x0, x0, #0x68
  409474:	bl	416e70 <wcrtomb@plt+0x11f20>
  409478:	ldr	x0, [x20, #4080]
  40947c:	ldrb	w0, [x0, #156]
  409480:	cmp	w0, #0x4d
  409484:	b.hi	4094d0 <wcrtomb@plt+0x4580>  // b.pmore
  409488:	cmp	w0, #0x2f
  40948c:	b.hi	4094ac <wcrtomb@plt+0x455c>  // b.pmore
  409490:	cbnz	w0, 4094e0 <wcrtomb@plt+0x4590>
  409494:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  409498:	add	x19, x19, #0x68
  40949c:	ldrb	w0, [x19, #16]
  4094a0:	cbz	w0, 409540 <wcrtomb@plt+0x45f0>
  4094a4:	bl	409380 <wcrtomb@plt+0x4430>
  4094a8:	b	4097b0 <wcrtomb@plt+0x4860>
  4094ac:	sub	w0, w0, #0x30
  4094b0:	cmp	w0, #0x1d
  4094b4:	b.hi	4094e0 <wcrtomb@plt+0x4590>  // b.pmore
  4094b8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4094bc:	add	x1, x1, #0x654
  4094c0:	ldrh	w0, [x1, w0, uxtw #1]
  4094c4:	adr	x1, 4094d0 <wcrtomb@plt+0x4580>
  4094c8:	add	x0, x1, w0, sxth #2
  4094cc:	br	x0
  4094d0:	cmp	w0, #0x53
  4094d4:	b.eq	409494 <wcrtomb@plt+0x4544>  // b.none
  4094d8:	cmp	w0, #0x56
  4094dc:	b.eq	4097b0 <wcrtomb@plt+0x4860>  // b.none
  4094e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4094e4:	ldr	x0, [x0, #1016]
  4094e8:	cbz	x0, 4094f0 <wcrtomb@plt+0x45a0>
  4094ec:	blr	x0
  4094f0:	mov	w2, #0x5                   	// #5
  4094f4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4094f8:	mov	x0, #0x0                   	// #0
  4094fc:	add	x1, x1, #0x4be
  409500:	bl	404d00 <dcgettext@plt>
  409504:	mov	x19, x0
  409508:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40950c:	ldr	x0, [x0, #112]
  409510:	bl	436084 <argp_usage@@Base+0x8ba4>
  409514:	mov	x3, x0
  409518:	ldr	x1, [x20, #4080]
  40951c:	mov	w0, #0x0                   	// #0
  409520:	mov	x2, x19
  409524:	ldrb	w4, [x1, #156]
  409528:	mov	w1, #0x0                   	// #0
  40952c:	bl	4042e0 <error@plt>
  409530:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  409534:	mov	w1, #0x2                   	// #2
  409538:	str	w1, [x0, #3464]
  40953c:	b	409494 <wcrtomb@plt+0x4544>
  409540:	ldr	x21, [x19, #8]
  409544:	add	x1, sp, #0xc0
  409548:	mov	x0, x21
  40954c:	bl	409228 <wcrtomb@plt+0x42d8>
  409550:	cbnz	w0, 40955c <wcrtomb@plt+0x460c>
  409554:	bl	417070 <wcrtomb@plt+0x12120>
  409558:	b	4097b0 <wcrtomb@plt+0x4860>
  40955c:	ldr	w0, [sp, #208]
  409560:	and	w1, w0, #0xf000
  409564:	cmp	w1, #0x8, lsl #12
  409568:	b.eq	409590 <wcrtomb@plt+0x4640>  // b.none
  40956c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409570:	add	x1, x1, #0x497
  409574:	mov	w2, #0x5                   	// #5
  409578:	mov	x0, #0x0                   	// #0
  40957c:	bl	404d00 <dcgettext@plt>
  409580:	mov	x1, x0
  409584:	mov	x0, x19
  409588:	bl	40905c <wcrtomb@plt+0x410c>
  40958c:	b	409554 <wcrtomb@plt+0x4604>
  409590:	ldr	w1, [x19, #104]
  409594:	eor	w0, w0, w1
  409598:	tst	x0, #0xfff
  40959c:	b.eq	4095c0 <wcrtomb@plt+0x4670>  // b.none
  4095a0:	mov	w2, #0x5                   	// #5
  4095a4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4095a8:	mov	x0, #0x0                   	// #0
  4095ac:	add	x1, x1, #0x4a9
  4095b0:	bl	404d00 <dcgettext@plt>
  4095b4:	mov	x1, x0
  4095b8:	mov	x0, x19
  4095bc:	bl	40905c <wcrtomb@plt+0x410c>
  4095c0:	add	x0, sp, #0xc0
  4095c4:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  4095c8:	add	x1, x22, #0xc0
  4095cc:	bl	41da88 <wcrtomb@plt+0x18b38>
  4095d0:	tst	w0, #0xff
  4095d4:	b.ne	4095f8 <wcrtomb@plt+0x46a8>  // b.any
  4095d8:	mov	w2, #0x5                   	// #5
  4095dc:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4095e0:	mov	x0, #0x0                   	// #0
  4095e4:	add	x1, x1, #0x4f0
  4095e8:	bl	404d00 <dcgettext@plt>
  4095ec:	mov	x1, x0
  4095f0:	mov	x0, x19
  4095f4:	bl	40905c <wcrtomb@plt+0x410c>
  4095f8:	add	x1, x22, #0xc0
  4095fc:	add	x0, sp, #0xc0
  409600:	bl	41da9c <wcrtomb@plt+0x18b4c>
  409604:	tst	w0, #0xff
  409608:	b.ne	40962c <wcrtomb@plt+0x46dc>  // b.any
  40960c:	mov	w2, #0x5                   	// #5
  409610:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409614:	mov	x0, #0x0                   	// #0
  409618:	add	x1, x1, #0x4fc
  40961c:	bl	404d00 <dcgettext@plt>
  409620:	mov	x1, x0
  409624:	mov	x0, x19
  409628:	bl	40905c <wcrtomb@plt+0x410c>
  40962c:	ldp	x2, x3, [x19, #232]
  409630:	ldp	x0, x1, [sp, #280]
  409634:	bl	421be0 <wcrtomb@plt+0x1cc90>
  409638:	cbz	w0, 40965c <wcrtomb@plt+0x470c>
  40963c:	mov	w2, #0x5                   	// #5
  409640:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409644:	mov	x0, #0x0                   	// #0
  409648:	add	x1, x1, #0x508
  40964c:	bl	404d00 <dcgettext@plt>
  409650:	mov	x1, x0
  409654:	mov	x0, x19
  409658:	bl	40905c <wcrtomb@plt+0x410c>
  40965c:	ldr	x0, [x20, #4080]
  409660:	ldrb	w0, [x0, #156]
  409664:	cmp	w0, #0x53
  409668:	b.eq	40968c <wcrtomb@plt+0x473c>  // b.none
  40966c:	ldr	x0, [x19, #136]
  409670:	ldr	x1, [sp, #240]
  409674:	cmp	x1, x0
  409678:	b.eq	40968c <wcrtomb@plt+0x473c>  // b.none
  40967c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409680:	mov	w2, #0x5                   	// #5
  409684:	add	x1, x1, #0x519
  409688:	b	409578 <wcrtomb@plt+0x4628>
  40968c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409690:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x36380>
  409694:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  409698:	add	x20, x20, #0x7a8
  40969c:	ldr	w2, [x0, #716]
  4096a0:	mov	x1, x21
  4096a4:	ldr	w0, [x22, #2264]
  4096a8:	bl	4048b0 <__openat_2@plt>
  4096ac:	str	w0, [x20, #8]
  4096b0:	tbz	w0, #31, 4096d0 <wcrtomb@plt+0x4780>
  4096b4:	mov	x0, x21
  4096b8:	bl	424e5c <wcrtomb@plt+0x1ff0c>
  4096bc:	bl	417070 <wcrtomb@plt+0x12120>
  4096c0:	mov	x1, #0x0                   	// #0
  4096c4:	mov	x0, x19
  4096c8:	bl	40905c <wcrtomb@plt+0x410c>
  4096cc:	b	4097b0 <wcrtomb@plt+0x4860>
  4096d0:	ldrb	w1, [x19, #272]
  4096d4:	cbz	w1, 409730 <wcrtomb@plt+0x47e0>
  4096d8:	mov	x1, x19
  4096dc:	bl	41d0c0 <wcrtomb@plt+0x18170>
  4096e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4096e4:	ldr	w0, [x0, #564]
  4096e8:	cmp	w0, #0x1
  4096ec:	b.ne	409718 <wcrtomb@plt+0x47c8>  // b.any
  4096f0:	ldr	x0, [sp, #240]
  4096f4:	cbz	x0, 409718 <wcrtomb@plt+0x47c8>
  4096f8:	ldp	x3, x4, [sp, #264]
  4096fc:	mov	x2, x21
  409700:	ldr	w1, [x22, #2264]
  409704:	ldr	w0, [x20, #8]
  409708:	bl	418a0c <wcrtomb@plt+0x13abc>
  40970c:	cbz	w0, 409718 <wcrtomb@plt+0x47c8>
  409710:	mov	x0, x21
  409714:	bl	42532c <wcrtomb@plt+0x203dc>
  409718:	ldr	w0, [x20, #8]
  40971c:	bl	4048c0 <close@plt>
  409720:	cbz	w0, 4097b0 <wcrtomb@plt+0x4860>
  409724:	mov	x0, x21
  409728:	bl	424d60 <wcrtomb@plt+0x1fe10>
  40972c:	b	4097b0 <wcrtomb@plt+0x4860>
  409730:	adrp	x0, 409000 <wcrtomb@plt+0x40b0>
  409734:	add	x0, x0, #0x13c
  409738:	bl	408f40 <wcrtomb@plt+0x3ff0>
  40973c:	b	4096e0 <wcrtomb@plt+0x4790>
  409740:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  409744:	add	x19, x19, #0x68
  409748:	add	x1, sp, #0x40
  40974c:	ldr	x0, [x19, #8]
  409750:	bl	409228 <wcrtomb@plt+0x42d8>
  409754:	cbz	w0, 4097b0 <wcrtomb@plt+0x4860>
  409758:	ldr	x0, [x19, #24]
  40975c:	add	x1, sp, #0xc0
  409760:	bl	409228 <wcrtomb@plt+0x42d8>
  409764:	cbz	w0, 4097b0 <wcrtomb@plt+0x4860>
  409768:	add	x1, sp, #0xc0
  40976c:	add	x0, sp, #0x40
  409770:	bl	41dab0 <wcrtomb@plt+0x18b60>
  409774:	tst	w0, #0xff
  409778:	b.ne	4097b0 <wcrtomb@plt+0x4860>  // b.any
  40977c:	mov	w2, #0x5                   	// #5
  409780:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409784:	mov	x0, #0x0                   	// #0
  409788:	add	x1, x1, #0x526
  40978c:	bl	404d00 <dcgettext@plt>
  409790:	mov	x20, x0
  409794:	ldr	x1, [x19, #24]
  409798:	mov	w0, #0x0                   	// #0
  40979c:	bl	417bf8 <wcrtomb@plt+0x12ca8>
  4097a0:	mov	x2, x0
  4097a4:	mov	x1, x20
  4097a8:	mov	x0, x19
  4097ac:	bl	40905c <wcrtomb@plt+0x410c>
  4097b0:	ldp	x19, x20, [sp, #16]
  4097b4:	ldp	x21, x22, [sp, #32]
  4097b8:	ldr	x23, [sp, #48]
  4097bc:	ldp	x29, x30, [sp], #320
  4097c0:	ret
  4097c4:	bl	409288 <wcrtomb@plt+0x4338>
  4097c8:	b	4097b0 <wcrtomb@plt+0x4860>
  4097cc:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  4097d0:	add	x19, x19, #0x68
  4097d4:	add	x1, sp, #0xc0
  4097d8:	ldr	x0, [x19, #8]
  4097dc:	bl	409228 <wcrtomb@plt+0x42d8>
  4097e0:	cbz	w0, 4097b0 <wcrtomb@plt+0x4860>
  4097e4:	ldr	x0, [x20, #4080]
  4097e8:	ldrb	w2, [x0, #156]
  4097ec:	ldr	w0, [sp, #208]
  4097f0:	cmp	w2, #0x33
  4097f4:	and	w1, w0, #0xf000
  4097f8:	b.ne	409824 <wcrtomb@plt+0x48d4>  // b.any
  4097fc:	cmp	w1, #0x2, lsl #12
  409800:	cset	w1, ne  // ne = any
  409804:	cbz	w1, 409aa0 <wcrtomb@plt+0x4b50>
  409808:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40980c:	add	x1, x1, #0x497
  409810:	mov	w2, #0x5                   	// #5
  409814:	mov	x0, #0x0                   	// #0
  409818:	bl	404d00 <dcgettext@plt>
  40981c:	mov	x1, x0
  409820:	b	4096c4 <wcrtomb@plt+0x4774>
  409824:	cmp	w2, #0x34
  409828:	b.ne	409834 <wcrtomb@plt+0x48e4>  // b.any
  40982c:	cmp	w1, #0x6, lsl #12
  409830:	b	409800 <wcrtomb@plt+0x48b0>
  409834:	cmp	w1, #0x1, lsl #12
  409838:	b.ne	409808 <wcrtomb@plt+0x48b8>  // b.any
  40983c:	ldr	w1, [x19, #104]
  409840:	eor	w0, w0, w1
  409844:	tst	x0, #0xfff
  409848:	b.eq	4097b0 <wcrtomb@plt+0x4860>  // b.none
  40984c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409850:	mov	w2, #0x5                   	// #5
  409854:	add	x1, x1, #0x4a9
  409858:	b	409814 <wcrtomb@plt+0x48c4>
  40985c:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  409860:	add	x21, x19, #0x68
  409864:	mov	x0, x21
  409868:	bl	414e14 <wcrtomb@plt+0xfec4>
  40986c:	tst	w0, #0xff
  409870:	b.eq	4094a4 <wcrtomb@plt+0x4554>  // b.none
  409874:	ldr	w0, [x21, #408]
  409878:	cbnz	w0, 4098cc <wcrtomb@plt+0x497c>
  40987c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409880:	ldr	x1, [x19, #104]
  409884:	ldr	w2, [x0, #716]
  409888:	ldr	x0, [x21, #392]
  40988c:	bl	40b8bc <wcrtomb@plt+0x696c>
  409890:	mov	w20, w0
  409894:	tbnz	w0, #31, 40992c <wcrtomb@plt+0x49dc>
  409898:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  40989c:	add	x1, x1, #0xc0
  4098a0:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  4098a4:	cbz	w0, 4098c8 <wcrtomb@plt+0x4978>
  4098a8:	mov	w0, w20
  4098ac:	bl	4048c0 <close@plt>
  4098b0:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  4098b4:	add	x2, x2, #0xc90
  4098b8:	ldr	x0, [x19, #104]
  4098bc:	mov	w1, #0x0                   	// #0
  4098c0:	bl	418cb4 <wcrtomb@plt+0x13d64>
  4098c4:	b	4094a4 <wcrtomb@plt+0x4554>
  4098c8:	str	w20, [x21, #408]
  4098cc:	mov	x0, x21
  4098d0:	bl	413bfc <wcrtomb@plt+0xecac>
  4098d4:	bl	41409c <wcrtomb@plt+0xf14c>
  4098d8:	mov	x19, x0
  4098dc:	cbz	x0, 4099b4 <wcrtomb@plt+0x4a64>
  4098e0:	ldr	x20, [x21, #384]
  4098e4:	adrp	x22, 447000 <_obstack_memory_used@@Base+0xf380>
  4098e8:	adrp	x23, 447000 <_obstack_memory_used@@Base+0xf380>
  4098ec:	add	x22, x22, #0x690
  4098f0:	add	x23, x23, #0x54d
  4098f4:	ldrb	w0, [x20]
  4098f8:	sub	w1, w0, #0x4e
  4098fc:	cbnz	w0, 409938 <wcrtomb@plt+0x49e8>
  409900:	ldrb	w0, [x19]
  409904:	cbz	w0, 4094a4 <wcrtomb@plt+0x4554>
  409908:	mov	w2, #0x5                   	// #5
  40990c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409910:	mov	x0, #0x0                   	// #0
  409914:	add	x1, x1, #0x477
  409918:	bl	404d00 <dcgettext@plt>
  40991c:	mov	x1, x0
  409920:	mov	x0, x21
  409924:	bl	40905c <wcrtomb@plt+0x410c>
  409928:	b	4094a4 <wcrtomb@plt+0x4554>
  40992c:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  409930:	add	x2, x2, #0xbdc
  409934:	b	4098b8 <wcrtomb@plt+0x4968>
  409938:	cmp	w0, #0x44
  40993c:	b.eq	4099a8 <wcrtomb@plt+0x4a58>  // b.none
  409940:	cmp	w0, #0x43
  409944:	b.ls	4098fc <wcrtomb@plt+0x49ac>  // b.plast
  409948:	cmp	w0, #0x59
  40994c:	b.hi	4098fc <wcrtomb@plt+0x49ac>  // b.pmore
  409950:	cmp	w0, #0x4d
  409954:	b.ls	4098fc <wcrtomb@plt+0x49ac>  // b.plast
  409958:	cmp	w1, #0xb
  40995c:	b.hi	4098fc <wcrtomb@plt+0x49ac>  // b.pmore
  409960:	ldrb	w2, [x22, w1, uxtw]
  409964:	adr	x3, 409970 <wcrtomb@plt+0x4a20>
  409968:	add	x2, x3, w2, sxtb #2
  40996c:	br	x2
  409970:	ldrb	w1, [x19]
  409974:	mov	x0, x23
  409978:	bl	404b90 <strchr@plt>
  40997c:	cbz	x0, 409908 <wcrtomb@plt+0x49b8>
  409980:	add	x1, x19, #0x1
  409984:	add	x0, x20, #0x1
  409988:	bl	404a30 <strcmp@plt>
  40998c:	cbnz	w0, 409908 <wcrtomb@plt+0x49b8>
  409990:	mov	x0, x20
  409994:	bl	404280 <strlen@plt>
  409998:	add	x0, x0, #0x1
  40999c:	add	x20, x20, x0
  4099a0:	add	x19, x19, x0
  4099a4:	b	4098f4 <wcrtomb@plt+0x49a4>
  4099a8:	mov	x1, x19
  4099ac:	mov	x0, x20
  4099b0:	b	409988 <wcrtomb@plt+0x4a38>
  4099b4:	adrp	x0, 408000 <wcrtomb@plt+0x30b0>
  4099b8:	add	x0, x0, #0xf38
  4099bc:	bl	408f40 <wcrtomb@plt+0x3ff0>
  4099c0:	b	4094a4 <wcrtomb@plt+0x4554>
  4099c4:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  4099c8:	add	x19, x19, #0x68
  4099cc:	ldrb	w0, [x19, #16]
  4099d0:	cbnz	w0, 4094a4 <wcrtomb@plt+0x4554>
  4099d4:	ldr	x0, [x19, #8]
  4099d8:	add	x1, sp, #0xc0
  4099dc:	bl	409228 <wcrtomb@plt+0x42d8>
  4099e0:	cbz	w0, 4097b0 <wcrtomb@plt+0x4860>
  4099e4:	ldr	w0, [sp, #208]
  4099e8:	and	w0, w0, #0xf000
  4099ec:	cmp	w0, #0x8, lsl #12
  4099f0:	b.ne	40956c <wcrtomb@plt+0x461c>  // b.any
  4099f4:	ldr	x0, [x20, #4080]
  4099f8:	mov	x1, #0xc                   	// #12
  4099fc:	add	x0, x0, #0x171
  409a00:	bl	4162a0 <wcrtomb@plt+0x11350>
  409a04:	mov	x20, x0
  409a08:	tbnz	x0, #63, 40967c <wcrtomb@plt+0x472c>
  409a0c:	ldr	x0, [x19, #136]
  409a10:	adds	x0, x0, x20
  409a14:	b.vs	40967c <wcrtomb@plt+0x472c>
  409a18:	ldr	x1, [sp, #240]
  409a1c:	cmp	x1, x0
  409a20:	b.ne	40967c <wcrtomb@plt+0x472c>  // b.any
  409a24:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409a28:	ldr	x1, [x19, #8]
  409a2c:	ldr	w2, [x0, #716]
  409a30:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  409a34:	ldr	w0, [x0, #2264]
  409a38:	bl	4048b0 <__openat_2@plt>
  409a3c:	mov	w21, w0
  409a40:	tbz	w0, #31, 409a54 <wcrtomb@plt+0x4b04>
  409a44:	ldr	x0, [x19, #8]
  409a48:	bl	424e5c <wcrtomb@plt+0x1ff0c>
  409a4c:	mov	x1, #0x0                   	// #0
  409a50:	b	409584 <wcrtomb@plt+0x4634>
  409a54:	mov	x1, x20
  409a58:	mov	w2, #0x0                   	// #0
  409a5c:	bl	404480 <lseek@plt>
  409a60:	tbz	x0, #63, 409a90 <wcrtomb@plt+0x4b40>
  409a64:	ldr	x0, [x19, #8]
  409a68:	mov	x1, x20
  409a6c:	bl	425104 <wcrtomb@plt+0x201b4>
  409a70:	mov	x0, x19
  409a74:	mov	x1, #0x0                   	// #0
  409a78:	bl	40905c <wcrtomb@plt+0x410c>
  409a7c:	mov	w0, w21
  409a80:	bl	4048c0 <close@plt>
  409a84:	cbz	w0, 4097b0 <wcrtomb@plt+0x4860>
  409a88:	ldr	x0, [x19, #8]
  409a8c:	b	409728 <wcrtomb@plt+0x47d8>
  409a90:	adrp	x0, 409000 <wcrtomb@plt+0x40b0>
  409a94:	add	x0, x0, #0x13c
  409a98:	bl	408f40 <wcrtomb@plt+0x3ff0>
  409a9c:	b	409a7c <wcrtomb@plt+0x4b2c>
  409aa0:	ldr	x2, [x19, #120]
  409aa4:	ldr	x1, [sp, #224]
  409aa8:	cmp	x2, x1
  409aac:	b.eq	40983c <wcrtomb@plt+0x48ec>  // b.none
  409ab0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409ab4:	mov	w2, #0x5                   	// #5
  409ab8:	add	x1, x1, #0x537
  409abc:	b	409814 <wcrtomb@plt+0x48c4>
  409ac0:	stp	x29, x30, [sp, #-112]!
  409ac4:	mov	x29, sp
  409ac8:	stp	x19, x20, [sp, #16]
  409acc:	stp	x21, x22, [sp, #32]
  409ad0:	stp	x23, x24, [sp, #48]
  409ad4:	stp	x25, x26, [sp, #64]
  409ad8:	bl	425420 <wcrtomb@plt+0x204d0>
  409adc:	tst	w0, #0xff
  409ae0:	b.eq	409b94 <wcrtomb@plt+0x4c44>  // b.none
  409ae4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409ae8:	ldr	x0, [x0, #1016]
  409aec:	cbz	x0, 409af4 <wcrtomb@plt+0x4ba4>
  409af0:	blr	x0
  409af4:	mov	w19, #0x1                   	// #1
  409af8:	mov	w2, #0x5                   	// #5
  409afc:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409b00:	mov	x0, #0x0                   	// #0
  409b04:	add	x1, x1, #0x550
  409b08:	bl	404d00 <dcgettext@plt>
  409b0c:	mov	w1, #0x0                   	// #0
  409b10:	mov	x2, x0
  409b14:	mov	w0, #0x0                   	// #0
  409b18:	bl	4042e0 <error@plt>
  409b1c:	bl	422924 <wcrtomb@plt+0x1d9d4>
  409b20:	tst	w0, #0xff
  409b24:	b.eq	409b9c <wcrtomb@plt+0x4c4c>  // b.none
  409b28:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409b2c:	ldr	x0, [x0, #1016]
  409b30:	cbz	x0, 409b38 <wcrtomb@plt+0x4be8>
  409b34:	blr	x0
  409b38:	mov	w2, #0x5                   	// #5
  409b3c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409b40:	mov	x0, #0x0                   	// #0
  409b44:	add	x1, x1, #0x58b
  409b48:	bl	404d00 <dcgettext@plt>
  409b4c:	mov	x2, x0
  409b50:	mov	w1, #0x0                   	// #0
  409b54:	mov	w0, #0x0                   	// #0
  409b58:	bl	4042e0 <error@plt>
  409b5c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409b60:	ldr	x0, [x0, #1016]
  409b64:	cbz	x0, 409b6c <wcrtomb@plt+0x4c1c>
  409b68:	blr	x0
  409b6c:	mov	w2, #0x5                   	// #5
  409b70:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409b74:	mov	x0, #0x0                   	// #0
  409b78:	add	x1, x1, #0x5b4
  409b7c:	bl	404d00 <dcgettext@plt>
  409b80:	mov	x2, x0
  409b84:	mov	w1, #0x0                   	// #0
  409b88:	mov	w0, #0x0                   	// #0
  409b8c:	bl	4042e0 <error@plt>
  409b90:	b	409ba0 <wcrtomb@plt+0x4c50>
  409b94:	mov	w19, #0x0                   	// #0
  409b98:	b	409b1c <wcrtomb@plt+0x4bcc>
  409b9c:	cbnz	w19, 409b5c <wcrtomb@plt+0x4c0c>
  409ba0:	bl	413b44 <wcrtomb@plt+0xebf4>
  409ba4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  409ba8:	ldr	x0, [x0, #1960]
  409bac:	cbnz	x0, 409bb4 <wcrtomb@plt+0x4c64>
  409bb0:	bl	409024 <wcrtomb@plt+0x40d4>
  409bb4:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  409bb8:	ldr	w0, [x19, #984]
  409bbc:	bl	404580 <fsync@plt>
  409bc0:	ldr	w0, [x19, #984]
  409bc4:	mov	x1, #0x24b                 	// #587
  409bc8:	bl	404f00 <ioctl@plt>
  409bcc:	mov	w0, #0x2                   	// #2
  409bd0:	strh	w0, [sp, #88]
  409bd4:	mov	w0, #0x1                   	// #1
  409bd8:	str	w0, [sp, #92]
  409bdc:	ldr	w0, [x19, #984]
  409be0:	mov	w1, #0x3fffffff            	// #1073741823
  409be4:	add	x2, sp, #0x58
  409be8:	cmp	w0, w1
  409bec:	b.le	409c38 <wcrtomb@plt+0x4ce8>
  409bf0:	mov	w3, #0xc0000000            	// #-1073741824
  409bf4:	mov	w1, #0x6d01                	// #27905
  409bf8:	add	w0, w0, w3
  409bfc:	movk	w1, #0x4008, lsl #16
  409c00:	bl	4260bc <wcrtomb@plt+0x2116c>
  409c04:	tbz	w0, #31, 409c74 <wcrtomb@plt+0x4d24>
  409c08:	bl	404e10 <__errno_location@plt>
  409c0c:	ldr	w0, [x0]
  409c10:	cmp	w0, #0x5
  409c14:	b.eq	409c48 <wcrtomb@plt+0x4cf8>  // b.none
  409c18:	ldr	w0, [x19, #984]
  409c1c:	mov	w1, #0x3fffffff            	// #1073741823
  409c20:	cmp	w0, w1
  409c24:	b.gt	409dd8 <wcrtomb@plt+0x4e88>
  409c28:	mov	w2, #0x0                   	// #0
  409c2c:	mov	x1, #0x0                   	// #0
  409c30:	bl	404480 <lseek@plt>
  409c34:	b	409dec <wcrtomb@plt+0x4e9c>
  409c38:	mov	x1, #0x6d01                	// #27905
  409c3c:	movk	x1, #0x4008, lsl #16
  409c40:	bl	404f00 <ioctl@plt>
  409c44:	b	409c04 <wcrtomb@plt+0x4cb4>
  409c48:	ldr	w0, [x19, #984]
  409c4c:	mov	w1, #0x3fffffff            	// #1073741823
  409c50:	add	x2, sp, #0x58
  409c54:	cmp	w0, w1
  409c58:	b.le	409dc8 <wcrtomb@plt+0x4e78>
  409c5c:	mov	w3, #0xc0000000            	// #-1073741824
  409c60:	mov	w1, #0x6d01                	// #27905
  409c64:	add	w0, w0, w3
  409c68:	movk	w1, #0x4008, lsl #16
  409c6c:	bl	4260bc <wcrtomb@plt+0x2116c>
  409c70:	tbnz	w0, #31, 409c18 <wcrtomb@plt+0x4cc8>
  409c74:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  409c78:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  409c7c:	adrp	x25, 447000 <_obstack_memory_used@@Base+0xf380>
  409c80:	add	x20, x20, #0x68
  409c84:	add	x21, x21, #0xff0
  409c88:	add	x25, x25, #0x5e4
  409c8c:	mov	w0, #0x1                   	// #1
  409c90:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  409c94:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  409c98:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  409c9c:	str	wzr, [x23, #3968]
  409ca0:	strb	w0, [x22, #4032]
  409ca4:	bl	406c78 <wcrtomb@plt+0x1d28>
  409ca8:	mov	x1, x20
  409cac:	mov	x0, x21
  409cb0:	mov	w2, #0x0                   	// #0
  409cb4:	bl	4162bc <wcrtomb@plt+0x1136c>
  409cb8:	mov	w19, w0
  409cbc:	cmp	w0, #0x5
  409cc0:	b.ne	409d38 <wcrtomb@plt+0x4de8>  // b.any
  409cc4:	mov	w24, #0x0                   	// #0
  409cc8:	ldr	x0, [x21]
  409ccc:	add	w24, w24, #0x1
  409cd0:	bl	405c98 <wcrtomb@plt+0xd48>
  409cd4:	mov	x1, x20
  409cd8:	mov	x0, x21
  409cdc:	mov	w2, #0x0                   	// #0
  409ce0:	bl	4162bc <wcrtomb@plt+0x1136c>
  409ce4:	mov	w19, w0
  409ce8:	cmp	w0, #0x5
  409cec:	b.eq	409cc8 <wcrtomb@plt+0x4d78>  // b.none
  409cf0:	ldr	x0, [x26, #1016]
  409cf4:	cbz	x0, 409cfc <wcrtomb@plt+0x4dac>
  409cf8:	blr	x0
  409cfc:	mov	w4, #0x5                   	// #5
  409d00:	sxtw	x3, w24
  409d04:	mov	x2, x25
  409d08:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409d0c:	mov	x0, #0x0                   	// #0
  409d10:	add	x1, x1, #0x610
  409d14:	bl	404c10 <dcngettext@plt>
  409d18:	mov	x2, x0
  409d1c:	mov	w1, #0x0                   	// #0
  409d20:	mov	w0, #0x0                   	// #0
  409d24:	mov	w3, w24
  409d28:	bl	4042e0 <error@plt>
  409d2c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  409d30:	mov	w1, #0x2                   	// #2
  409d34:	str	w1, [x0, #3464]
  409d38:	cmp	w19, #0x4
  409d3c:	b.eq	409e44 <wcrtomb@plt+0x4ef4>  // b.none
  409d40:	cmp	w19, #0x3
  409d44:	ldr	x0, [x21]
  409d48:	b.ne	409e20 <wcrtomb@plt+0x4ed0>  // b.any
  409d4c:	bl	405c98 <wcrtomb@plt+0xd48>
  409d50:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409d54:	ldrb	w0, [x0, #85]
  409d58:	cbnz	w0, 409ca8 <wcrtomb@plt+0x4d58>
  409d5c:	mov	x1, x20
  409d60:	mov	x0, x21
  409d64:	mov	w2, #0x0                   	// #0
  409d68:	bl	4162bc <wcrtomb@plt+0x1136c>
  409d6c:	cmp	w0, #0x3
  409d70:	b.eq	409e44 <wcrtomb@plt+0x4ef4>  // b.none
  409d74:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  409d78:	ldr	w0, [x0, #480]
  409d7c:	tbz	w0, #0, 409ca8 <wcrtomb@plt+0x4d58>
  409d80:	ldr	x0, [x26, #1016]
  409d84:	cbz	x0, 409d8c <wcrtomb@plt+0x4e3c>
  409d88:	blr	x0
  409d8c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  409d90:	add	x1, x1, #0x63b
  409d94:	mov	w2, #0x5                   	// #5
  409d98:	mov	x0, #0x0                   	// #0
  409d9c:	bl	404d00 <dcgettext@plt>
  409da0:	mov	x19, x0
  409da4:	bl	405c2c <wcrtomb@plt+0xcdc>
  409da8:	add	x1, sp, #0x58
  409dac:	bl	431400 <argp_usage@@Base+0x3f20>
  409db0:	mov	x2, x19
  409db4:	mov	x3, x0
  409db8:	mov	w1, #0x0                   	// #0
  409dbc:	mov	w0, #0x0                   	// #0
  409dc0:	bl	4042e0 <error@plt>
  409dc4:	b	409ca8 <wcrtomb@plt+0x4d58>
  409dc8:	mov	x1, #0x6d01                	// #27905
  409dcc:	movk	x1, #0x4008, lsl #16
  409dd0:	bl	404f00 <ioctl@plt>
  409dd4:	b	409c70 <wcrtomb@plt+0x4d20>
  409dd8:	mov	w3, #0xc0000000            	// #-1073741824
  409ddc:	mov	w2, #0x0                   	// #0
  409de0:	add	w0, w0, w3
  409de4:	mov	x1, #0x0                   	// #0
  409de8:	bl	425f8c <wcrtomb@plt+0x2103c>
  409dec:	cmp	x0, #0x0
  409df0:	cset	w0, ne  // ne = any
  409df4:	cbz	w0, 409c74 <wcrtomb@plt+0x4d24>
  409df8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  409dfc:	ldr	x0, [x0, #696]
  409e00:	ldr	x0, [x0]
  409e04:	bl	425198 <wcrtomb@plt+0x20248>
  409e08:	ldp	x19, x20, [sp, #16]
  409e0c:	ldp	x21, x22, [sp, #32]
  409e10:	ldp	x23, x24, [sp, #48]
  409e14:	ldp	x25, x26, [sp, #64]
  409e18:	ldp	x29, x30, [sp], #112
  409e1c:	ret
  409e20:	mov	x1, x20
  409e24:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  409e28:	add	x2, x2, #0xfd8
  409e2c:	mov	w3, #0x1                   	// #1
  409e30:	bl	415f00 <wcrtomb@plt+0x10fb0>
  409e34:	bl	409400 <wcrtomb@plt+0x44b0>
  409e38:	mov	x0, x20
  409e3c:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  409e40:	b	409ca8 <wcrtomb@plt+0x4d58>
  409e44:	mov	w0, #0x1                   	// #1
  409e48:	strb	wzr, [x22, #4032]
  409e4c:	str	w0, [x23, #3968]
  409e50:	b	409e08 <wcrtomb@plt+0x4eb8>
  409e54:	mov	x3, #0x0                   	// #0
  409e58:	ldrb	w4, [x1, x3]
  409e5c:	strb	w4, [x0, x3]
  409e60:	cbz	w4, 409e70 <wcrtomb@plt+0x4f20>
  409e64:	add	x3, x3, #0x1
  409e68:	cmp	x2, x3
  409e6c:	b.ne	409e58 <wcrtomb@plt+0x4f08>  // b.any
  409e70:	ret
  409e74:	ldp	x2, x0, [x0]
  409e78:	eor	x2, x2, x0
  409e7c:	udiv	x0, x2, x1
  409e80:	msub	x0, x0, x1, x2
  409e84:	ret
  409e88:	ldp	x2, x0, [x0]
  409e8c:	ldp	x3, x1, [x1]
  409e90:	eor	x2, x2, x3
  409e94:	eor	x0, x0, x1
  409e98:	orr	x0, x2, x0
  409e9c:	cmp	x0, #0x0
  409ea0:	cset	w0, eq  // eq = none
  409ea4:	ret
  409ea8:	stp	x29, x30, [sp, #-32]!
  409eac:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  409eb0:	mov	x29, sp
  409eb4:	stp	x19, x20, [sp, #16]
  409eb8:	mov	x20, x0
  409ebc:	ldr	w0, [x2, #1976]
  409ec0:	mov	x19, x2
  409ec4:	cbnz	w0, 409ee4 <wcrtomb@plt+0x4f94>
  409ec8:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  409ecc:	add	x1, x2, #0x7b8
  409ed0:	add	x0, x0, #0x69c
  409ed4:	bl	41a39c <wcrtomb@plt+0x1544c>
  409ed8:	cbnz	w0, 409ee4 <wcrtomb@plt+0x4f94>
  409edc:	mov	w0, #0xfffffffe            	// #-2
  409ee0:	str	w0, [x19, #1976]
  409ee4:	ldr	w0, [x19, #1976]
  409ee8:	str	wzr, [x20]
  409eec:	mov	w0, w0
  409ef0:	ldp	x19, x20, [sp, #16]
  409ef4:	ldp	x29, x30, [sp], #32
  409ef8:	ret
  409efc:	stp	x29, x30, [sp, #-32]!
  409f00:	mov	x29, sp
  409f04:	stp	x19, x20, [sp, #16]
  409f08:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  409f0c:	add	x19, x19, #0x7b8
  409f10:	mov	x20, x0
  409f14:	ldr	w0, [x19, #4]
  409f18:	cbnz	w0, 409f38 <wcrtomb@plt+0x4fe8>
  409f1c:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  409f20:	add	x1, x19, #0x4
  409f24:	add	x0, x0, #0x69c
  409f28:	bl	41a440 <wcrtomb@plt+0x154f0>
  409f2c:	cbnz	w0, 409f38 <wcrtomb@plt+0x4fe8>
  409f30:	mov	w0, #0xfffffffe            	// #-2
  409f34:	str	w0, [x19, #4]
  409f38:	ldr	w0, [x19, #4]
  409f3c:	str	wzr, [x20]
  409f40:	mov	w0, w0
  409f44:	ldp	x19, x20, [sp, #16]
  409f48:	ldp	x29, x30, [sp], #32
  409f4c:	ret
  409f50:	stp	x29, x30, [sp, #-32]!
  409f54:	mov	x29, sp
  409f58:	str	x19, [sp, #16]
  409f5c:	mov	x19, x0
  409f60:	bl	404e10 <__errno_location@plt>
  409f64:	ldr	w0, [x0]
  409f68:	cmp	w0, #0x18
  409f6c:	b.ne	409fc0 <wcrtomb@plt+0x5070>  // b.any
  409f70:	cbz	x19, 409fc0 <wcrtomb@plt+0x5070>
  409f74:	ldr	x0, [x19, #392]
  409f78:	cbz	x0, 409fc0 <wcrtomb@plt+0x5070>
  409f7c:	ldr	x0, [x0, #392]
  409f80:	cbz	x0, 409fac <wcrtomb@plt+0x505c>
  409f84:	ldr	w2, [x0, #408]
  409f88:	ldr	x1, [x0, #392]
  409f8c:	cmp	w2, #0x0
  409f90:	b.le	409fb8 <wcrtomb@plt+0x5068>
  409f94:	cbz	x1, 409fa4 <wcrtomb@plt+0x5054>
  409f98:	ldr	w2, [x1, #408]
  409f9c:	cmp	w2, #0x0
  409fa0:	b.gt	409fb8 <wcrtomb@plt+0x5068>
  409fa4:	bl	421ae8 <wcrtomb@plt+0x1cb98>
  409fa8:	mov	w0, #0x1                   	// #1
  409fac:	ldr	x19, [sp, #16]
  409fb0:	ldp	x29, x30, [sp], #32
  409fb4:	ret
  409fb8:	mov	x0, x1
  409fbc:	b	409f80 <wcrtomb@plt+0x5030>
  409fc0:	mov	w0, #0x0                   	// #0
  409fc4:	b	409fac <wcrtomb@plt+0x505c>
  409fc8:	stp	x29, x30, [sp, #-48]!
  409fcc:	mov	x29, sp
  409fd0:	str	x21, [sp, #32]
  409fd4:	ldr	x21, [x0]
  409fd8:	stp	x19, x20, [sp, #16]
  409fdc:	mov	x20, x0
  409fe0:	mov	x0, x21
  409fe4:	bl	404280 <strlen@plt>
  409fe8:	mov	x19, x0
  409fec:	cbz	x0, 40a000 <wcrtomb@plt+0x50b0>
  409ff0:	sub	x0, x0, #0x1
  409ff4:	ldrb	w1, [x21, x0]
  409ff8:	cmp	w1, #0x2f
  409ffc:	b.eq	409fe8 <wcrtomb@plt+0x5098>  // b.none
  40a000:	ldrb	w0, [x21, x19]
  40a004:	cmp	w0, #0x2f
  40a008:	b.eq	40a01c <wcrtomb@plt+0x50cc>  // b.none
  40a00c:	add	x1, x19, #0x2
  40a010:	mov	x0, x21
  40a014:	bl	436da4 <argp_usage@@Base+0x98c4>
  40a018:	str	x0, [x20]
  40a01c:	ldr	x0, [x20]
  40a020:	mov	w1, #0x2f                  	// #47
  40a024:	strb	w1, [x0, x19]
  40a028:	ldr	x0, [x20]
  40a02c:	add	x19, x0, x19
  40a030:	strb	wzr, [x19, #1]
  40a034:	ldp	x19, x20, [sp, #16]
  40a038:	ldr	x21, [sp, #32]
  40a03c:	ldp	x29, x30, [sp], #48
  40a040:	ret
  40a044:	stp	x29, x30, [sp, #-32]!
  40a048:	mov	x29, sp
  40a04c:	stp	x19, x20, [sp, #16]
  40a050:	mov	x20, x0
  40a054:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40a058:	ldr	w0, [x0, #480]
  40a05c:	tbz	w0, #5, 40a0a4 <wcrtomb@plt+0x5154>
  40a060:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a064:	ldr	x0, [x0, #1016]
  40a068:	cbz	x0, 40a070 <wcrtomb@plt+0x5120>
  40a06c:	blr	x0
  40a070:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40a074:	add	x1, x1, #0x6a3
  40a078:	mov	w2, #0x5                   	// #5
  40a07c:	mov	x0, #0x0                   	// #0
  40a080:	bl	404d00 <dcgettext@plt>
  40a084:	mov	x19, x0
  40a088:	mov	x0, x20
  40a08c:	bl	436084 <argp_usage@@Base+0x8ba4>
  40a090:	mov	x2, x19
  40a094:	mov	x3, x0
  40a098:	mov	w1, #0x0                   	// #0
  40a09c:	mov	w0, #0x0                   	// #0
  40a0a0:	bl	4042e0 <error@plt>
  40a0a4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a0a8:	ldrb	w0, [x0, #961]
  40a0ac:	cbnz	w0, 40a0c0 <wcrtomb@plt+0x5170>
  40a0b0:	ldp	x19, x20, [sp, #16]
  40a0b4:	mov	w0, #0x2                   	// #2
  40a0b8:	ldp	x29, x30, [sp], #32
  40a0bc:	b	421c04 <wcrtomb@plt+0x1ccb4>
  40a0c0:	ldp	x19, x20, [sp, #16]
  40a0c4:	ldp	x29, x30, [sp], #32
  40a0c8:	ret
  40a0cc:	stp	x29, x30, [sp, #-64]!
  40a0d0:	mov	x29, sp
  40a0d4:	stp	x19, x20, [sp, #16]
  40a0d8:	mov	x20, x0
  40a0dc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a0e0:	str	x21, [sp, #32]
  40a0e4:	ldrb	w0, [x0, #92]
  40a0e8:	cbnz	w0, 40a1d8 <wcrtomb@plt+0x5288>
  40a0ec:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  40a0f0:	add	x21, x21, #0x7b8
  40a0f4:	ldr	w1, [x20, #108]
  40a0f8:	ldr	w0, [x21, #8]
  40a0fc:	cmp	w1, w0
  40a100:	b.ls	40a1d8 <wcrtomb@plt+0x5288>  // b.plast
  40a104:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a108:	mov	w1, #0x1                   	// #1
  40a10c:	str	xzr, [sp, #56]
  40a110:	ldrb	w2, [x0, #960]
  40a114:	ldr	x0, [x20]
  40a118:	bl	425478 <wcrtomb@plt+0x20528>
  40a11c:	mov	x1, x0
  40a120:	add	x0, sp, #0x38
  40a124:	bl	417c2c <wcrtomb@plt+0x12cdc>
  40a128:	mov	w1, #0x2                   	// #2
  40a12c:	add	x0, sp, #0x38
  40a130:	bl	422918 <wcrtomb@plt+0x1d9c8>
  40a134:	ldr	x0, [sp, #56]
  40a138:	bl	404280 <strlen@plt>
  40a13c:	add	x0, x0, #0x15
  40a140:	bl	436d44 <argp_usage@@Base+0x9864>
  40a144:	mov	x19, x0
  40a148:	ldr	x0, [x20, #96]
  40a14c:	str	x0, [x19, #8]
  40a150:	ldr	x0, [x20, #88]
  40a154:	str	x0, [x19]
  40a158:	ldr	w0, [x20, #108]
  40a15c:	ldr	x20, [sp, #56]
  40a160:	str	w0, [x19, #16]
  40a164:	add	x0, x19, #0x14
  40a168:	mov	x1, x20
  40a16c:	bl	404c40 <strcpy@plt>
  40a170:	mov	x0, x20
  40a174:	bl	404ae0 <free@plt>
  40a178:	ldr	x0, [x21, #16]
  40a17c:	cbz	x0, 40a194 <wcrtomb@plt+0x5244>
  40a180:	ldr	x0, [x21, #16]
  40a184:	mov	x1, x19
  40a188:	bl	4309b4 <argp_usage@@Base+0x34d4>
  40a18c:	cbnz	x0, 40a1c0 <wcrtomb@plt+0x5270>
  40a190:	bl	40d4bc <wcrtomb@plt+0x856c>
  40a194:	mov	x4, #0x0                   	// #0
  40a198:	adrp	x3, 409000 <wcrtomb@plt+0x40b0>
  40a19c:	adrp	x2, 409000 <wcrtomb@plt+0x40b0>
  40a1a0:	add	x3, x3, #0xe88
  40a1a4:	add	x2, x2, #0xe74
  40a1a8:	mov	x1, #0x0                   	// #0
  40a1ac:	mov	x0, #0x0                   	// #0
  40a1b0:	bl	430500 <argp_usage@@Base+0x3020>
  40a1b4:	str	x0, [x21, #16]
  40a1b8:	cbnz	x0, 40a180 <wcrtomb@plt+0x5230>
  40a1bc:	b	40a190 <wcrtomb@plt+0x5240>
  40a1c0:	cmp	x19, x0
  40a1c4:	b.eq	40a1cc <wcrtomb@plt+0x527c>  // b.none
  40a1c8:	bl	404970 <abort@plt>
  40a1cc:	ldr	w0, [x19, #16]
  40a1d0:	sub	w0, w0, #0x1
  40a1d4:	str	w0, [x19, #16]
  40a1d8:	ldp	x19, x20, [sp, #16]
  40a1dc:	ldr	x21, [sp, #32]
  40a1e0:	ldp	x29, x30, [sp], #64
  40a1e4:	ret
  40a1e8:	sub	sp, sp, #0x230
  40a1ec:	stp	x29, x30, [sp]
  40a1f0:	mov	x29, sp
  40a1f4:	stp	x21, x22, [sp, #32]
  40a1f8:	add	x21, x1, #0x158
  40a1fc:	and	w22, w0, #0xff
  40a200:	mov	x0, x21
  40a204:	stp	x19, x20, [sp, #16]
  40a208:	mov	x19, x2
  40a20c:	mov	x20, x1
  40a210:	bl	412460 <wcrtomb@plt+0xd510>
  40a214:	mov	x1, x19
  40a218:	add	x0, sp, #0x30
  40a21c:	mov	x2, #0x200                 	// #512
  40a220:	bl	404200 <memcpy@plt>
  40a224:	cbz	w22, 40a27c <wcrtomb@plt+0x532c>
  40a228:	bl	411e60 <wcrtomb@plt+0xcf10>
  40a22c:	mov	x19, x0
  40a230:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a234:	ldr	x2, [x0, #720]
  40a238:	mov	w0, #0x67                  	// #103
  40a23c:	mov	x3, x21
  40a240:	mov	x1, x19
  40a244:	bl	41252c <wcrtomb@plt+0xd5dc>
  40a248:	mov	x0, x19
  40a24c:	bl	404ae0 <free@plt>
  40a250:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40a254:	mov	x19, x0
  40a258:	add	x1, sp, #0x30
  40a25c:	mov	x2, #0x200                 	// #512
  40a260:	bl	404200 <memcpy@plt>
  40a264:	mov	x0, x19
  40a268:	ldp	x29, x30, [sp]
  40a26c:	ldp	x19, x20, [sp, #16]
  40a270:	ldp	x21, x22, [sp, #32]
  40a274:	add	sp, sp, #0x230
  40a278:	ret
  40a27c:	mov	x0, x20
  40a280:	bl	411e18 <wcrtomb@plt+0xcec8>
  40a284:	mov	x19, x0
  40a288:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a28c:	ldr	w0, [x0, #64]
  40a290:	cbz	w0, 40a2a4 <wcrtomb@plt+0x5354>
  40a294:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a298:	ldr	x2, [x0, #800]
  40a29c:	mov	w0, #0x78                  	// #120
  40a2a0:	b	40a23c <wcrtomb@plt+0x52ec>
  40a2a4:	ldr	x2, [x20, #176]
  40a2a8:	b	40a29c <wcrtomb@plt+0x534c>
  40a2ac:	stp	x29, x30, [sp, #-32]!
  40a2b0:	mov	x29, sp
  40a2b4:	stp	x19, x20, [sp, #16]
  40a2b8:	mov	x20, x0
  40a2bc:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40a2c0:	mov	x2, #0x200                 	// #512
  40a2c4:	mov	x19, x0
  40a2c8:	mov	w1, #0x0                   	// #0
  40a2cc:	bl	404700 <memset@plt>
  40a2d0:	ldr	x1, [x20]
  40a2d4:	mov	x0, x19
  40a2d8:	mov	x2, #0x64                  	// #100
  40a2dc:	bl	409e54 <wcrtomb@plt+0x4f04>
  40a2e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a2e4:	ldr	w0, [x0, #824]
  40a2e8:	cmp	w0, #0x2
  40a2ec:	b.ne	40a2f4 <wcrtomb@plt+0x53a4>  // b.any
  40a2f0:	strb	wzr, [x19, #99]
  40a2f4:	mov	x0, x19
  40a2f8:	ldp	x19, x20, [sp, #16]
  40a2fc:	ldp	x29, x30, [sp], #32
  40a300:	ret
  40a304:	stp	x29, x30, [sp, #-224]!
  40a308:	mov	x29, sp
  40a30c:	stp	x27, x28, [sp, #80]
  40a310:	mov	w28, w0
  40a314:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a318:	stp	x19, x20, [sp, #16]
  40a31c:	mov	x19, x5
  40a320:	stp	x21, x22, [sp, #32]
  40a324:	mov	x22, x2
  40a328:	ldr	w2, [x0, #824]
  40a32c:	stp	x23, x24, [sp, #48]
  40a330:	mov	x21, x4
  40a334:	mov	x23, x3
  40a338:	stp	x25, x26, [sp, #64]
  40a33c:	mov	x24, x6
  40a340:	mov	x25, x1
  40a344:	str	x0, [sp, #96]
  40a348:	and	w2, w2, #0xfffffffb
  40a34c:	cbnz	w28, 40a67c <wcrtomb@plt+0x572c>
  40a350:	add	x0, x5, x5, lsl #1
  40a354:	sub	x0, x0, #0x3
  40a358:	cmp	x0, #0x3f
  40a35c:	b.hi	40a37c <wcrtomb@plt+0x542c>  // b.pmore
  40a360:	add	w0, w5, w5, lsl #1
  40a364:	sub	w1, w0, #0x3
  40a368:	mov	x0, #0x1                   	// #1
  40a36c:	lsl	x0, x0, x1
  40a370:	sub	x0, x0, #0x1
  40a374:	cmp	x0, x25
  40a378:	b.cc	40a538 <wcrtomb@plt+0x55e8>  // b.lo, b.ul, b.last
  40a37c:	sub	x19, x19, #0x1
  40a380:	strb	wzr, [x21, x19]
  40a384:	sub	x19, x19, #0x1
  40a388:	and	w0, w25, #0x7
  40a38c:	add	w0, w0, #0x30
  40a390:	lsr	x25, x25, #3
  40a394:	strb	w0, [x21, x19]
  40a398:	cbnz	x19, 40a384 <wcrtomb@plt+0x5434>
  40a39c:	mov	w0, #0x1                   	// #1
  40a3a0:	ldp	x19, x20, [sp, #16]
  40a3a4:	ldp	x21, x22, [sp, #32]
  40a3a8:	ldp	x23, x24, [sp, #48]
  40a3ac:	ldp	x25, x26, [sp, #64]
  40a3b0:	ldp	x27, x28, [sp, #80]
  40a3b4:	ldp	x29, x30, [sp], #224
  40a3b8:	ret
  40a3bc:	mvn	x0, x25
  40a3c0:	sub	x27, x19, #0x1
  40a3c4:	lsl	x1, x27, #3
  40a3c8:	cmp	x1, #0x3f
  40a3cc:	b.hi	40a3e8 <wcrtomb@plt+0x5498>  // b.pmore
  40a3d0:	lsl	w20, w27, #3
  40a3d4:	mov	x1, #0x1                   	// #1
  40a3d8:	lsl	x20, x1, x20
  40a3dc:	sub	x20, x20, #0x1
  40a3e0:	cmp	x0, x20
  40a3e4:	b.hi	40a420 <wcrtomb@plt+0x54d0>  // b.pmore
  40a3e8:	cmp	w28, #0x0
  40a3ec:	neg	w28, w28
  40a3f0:	mov	w0, #0xff                  	// #255
  40a3f4:	mov	w1, #0x80                  	// #128
  40a3f8:	lsl	x28, x28, #56
  40a3fc:	csel	w0, w0, w1, ne  // ne = any
  40a400:	strb	w0, [x21]
  40a404:	strb	w25, [x21, x27]
  40a408:	orr	x25, x28, x25, lsr #8
  40a40c:	subs	x27, x27, #0x1
  40a410:	b.ne	40a404 <wcrtomb@plt+0x54b4>  // b.any
  40a414:	b	40a39c <wcrtomb@plt+0x544c>
  40a418:	mov	x0, x25
  40a41c:	b	40a3c0 <wcrtomb@plt+0x5470>
  40a420:	cbz	w28, 40a558 <wcrtomb@plt+0x5608>
  40a424:	add	x0, x19, x19, lsl #1
  40a428:	lsl	x26, x22, #3
  40a42c:	sub	x0, x0, #0x3
  40a430:	cmp	x0, x22, lsl #3
  40a434:	b.cc	40a558 <wcrtomb@plt+0x5608>  // b.lo, b.ul, b.last
  40a438:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40a43c:	add	x0, x0, #0x7b8
  40a440:	ldr	w2, [x0, #24]
  40a444:	cbnz	w2, 40a480 <wcrtomb@plt+0x5530>
  40a448:	str	w1, [x0, #24]
  40a44c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a450:	ldr	x0, [x0, #1016]
  40a454:	cbz	x0, 40a45c <wcrtomb@plt+0x550c>
  40a458:	blr	x0
  40a45c:	mov	w2, #0x5                   	// #5
  40a460:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40a464:	mov	x0, #0x0                   	// #0
  40a468:	add	x1, x1, #0x6c7
  40a46c:	bl	404d00 <dcgettext@plt>
  40a470:	mov	x2, x0
  40a474:	mov	w1, #0x0                   	// #0
  40a478:	mov	w0, #0x0                   	// #0
  40a47c:	bl	4042e0 <error@plt>
  40a480:	lsl	w22, w22, #3
  40a484:	mov	x1, #0x1                   	// #1
  40a488:	cmp	x26, #0x40
  40a48c:	strb	wzr, [x21, x27]
  40a490:	lsl	x1, x1, x22
  40a494:	sub	x1, x1, #0x1
  40a498:	csinv	x1, x1, xzr, ne  // ne = any
  40a49c:	and	x25, x1, x25
  40a4a0:	sub	x27, x27, #0x1
  40a4a4:	and	w0, w25, #0x7
  40a4a8:	add	w0, w0, #0x30
  40a4ac:	lsr	x25, x25, #3
  40a4b0:	strb	w0, [x21, x27]
  40a4b4:	cbnz	x27, 40a4a0 <wcrtomb@plt+0x5550>
  40a4b8:	b	40a39c <wcrtomb@plt+0x544c>
  40a4bc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  40a4c0:	b	40a584 <wcrtomb@plt+0x5634>
  40a4c4:	adrp	x26, 44e000 <_obstack_memory_used@@Base+0x16380>
  40a4c8:	add	x26, x26, #0x66e
  40a4cc:	b	40a598 <wcrtomb@plt+0x5648>
  40a4d0:	mov	x0, x25
  40a4d4:	add	x1, sp, #0x98
  40a4d8:	bl	431400 <argp_usage@@Base+0x3f20>
  40a4dc:	mov	x25, x0
  40a4e0:	b	40a5b4 <wcrtomb@plt+0x5664>
  40a4e4:	ldr	x0, [x28, #1016]
  40a4e8:	cbz	x0, 40a4f0 <wcrtomb@plt+0x55a0>
  40a4ec:	blr	x0
  40a4f0:	mov	w2, #0x5                   	// #5
  40a4f4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40a4f8:	mov	x0, #0x0                   	// #0
  40a4fc:	add	x1, x1, #0x71a
  40a500:	bl	404d00 <dcgettext@plt>
  40a504:	mov	x2, x0
  40a508:	mov	w1, #0x0                   	// #0
  40a50c:	mov	w0, #0x0                   	// #0
  40a510:	mov	x6, x27
  40a514:	mov	x5, x26
  40a518:	mov	x4, x24
  40a51c:	mov	x3, x25
  40a520:	bl	4042e0 <error@plt>
  40a524:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40a528:	mov	w1, #0x2                   	// #2
  40a52c:	str	w1, [x0, #3464]
  40a530:	mov	w0, #0x0                   	// #0
  40a534:	b	40a3a0 <wcrtomb@plt+0x5450>
  40a538:	cmp	w2, #0x2
  40a53c:	b.eq	40a418 <wcrtomb@plt+0x54c8>  // b.none
  40a540:	add	w20, w19, w19, lsl #1
  40a544:	mov	x23, #0x0                   	// #0
  40a548:	sub	w0, w20, #0x3
  40a54c:	mov	x20, #0x1                   	// #1
  40a550:	lsl	x20, x20, x0
  40a554:	sub	x20, x20, #0x1
  40a558:	add	x1, sp, #0x80
  40a55c:	mov	x0, x20
  40a560:	str	w2, [sp, #108]
  40a564:	bl	431400 <argp_usage@@Base+0x3f20>
  40a568:	ldr	w2, [sp, #108]
  40a56c:	mov	x27, x0
  40a570:	cmp	w2, #0x2
  40a574:	b.ne	40a4c4 <wcrtomb@plt+0x5574>  // b.any
  40a578:	cmn	x20, #0x1
  40a57c:	b.eq	40a4bc <wcrtomb@plt+0x556c>  // b.none
  40a580:	add	x0, x20, #0x1
  40a584:	add	x1, sp, #0xb1
  40a588:	bl	431400 <argp_usage@@Base+0x3f20>
  40a58c:	sub	x26, x0, #0x1
  40a590:	mov	w1, #0x2d                  	// #45
  40a594:	sturb	w1, [x0, #-1]
  40a598:	cbz	w28, 40a4d0 <wcrtomb@plt+0x5580>
  40a59c:	add	x1, sp, #0x99
  40a5a0:	neg	x0, x25
  40a5a4:	bl	431400 <argp_usage@@Base+0x3f20>
  40a5a8:	sub	x25, x0, #0x1
  40a5ac:	mov	w1, #0x2d                  	// #45
  40a5b0:	sturb	w1, [x0, #-1]
  40a5b4:	adrp	x28, 472000 <argp_program_version_hook@@Base+0x250>
  40a5b8:	cbz	x23, 40a4e4 <wcrtomb@plt+0x5594>
  40a5bc:	add	x0, sp, #0x7c
  40a5c0:	blr	x23
  40a5c4:	and	x20, x20, x0
  40a5c8:	ldr	w1, [sp, #124]
  40a5cc:	ldr	x0, [sp, #96]
  40a5d0:	ldr	w0, [x0, #824]
  40a5d4:	cmp	w0, #0x6
  40a5d8:	cset	w0, eq  // eq = none
  40a5dc:	and	w0, w0, w1
  40a5e0:	str	w0, [sp, #124]
  40a5e4:	cbz	w0, 40a5ec <wcrtomb@plt+0x569c>
  40a5e8:	neg	x20, x20
  40a5ec:	add	x1, sp, #0xc9
  40a5f0:	mov	x0, x20
  40a5f4:	bl	431400 <argp_usage@@Base+0x3f20>
  40a5f8:	mov	x23, x0
  40a5fc:	ldr	w0, [sp, #124]
  40a600:	cbz	w0, 40a610 <wcrtomb@plt+0x56c0>
  40a604:	mov	w0, #0x2d                  	// #45
  40a608:	sub	x23, x23, #0x1
  40a60c:	strb	w0, [x23]
  40a610:	ldr	x0, [x28, #1016]
  40a614:	cbz	x0, 40a61c <wcrtomb@plt+0x56cc>
  40a618:	blr	x0
  40a61c:	mov	w2, #0x5                   	// #5
  40a620:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40a624:	mov	x0, #0x0                   	// #0
  40a628:	add	x1, x1, #0x6e9
  40a62c:	bl	404d00 <dcgettext@plt>
  40a630:	mov	x2, x0
  40a634:	mov	x7, x23
  40a638:	mov	x6, x27
  40a63c:	mov	x5, x26
  40a640:	mov	x4, x24
  40a644:	mov	x3, x25
  40a648:	mov	w1, #0x0                   	// #0
  40a64c:	mov	w0, #0x0                   	// #0
  40a650:	bl	4042e0 <error@plt>
  40a654:	ldr	w0, [sp, #124]
  40a658:	mov	x6, x24
  40a65c:	mov	x5, x19
  40a660:	mov	x4, x21
  40a664:	mov	x2, x22
  40a668:	mov	x1, x20
  40a66c:	mov	x3, #0x0                   	// #0
  40a670:	bl	40a304 <wcrtomb@plt+0x53b4>
  40a674:	and	w0, w0, #0xff
  40a678:	b	40a3a0 <wcrtomb@plt+0x5450>
  40a67c:	cmp	w2, #0x2
  40a680:	b.eq	40a3bc <wcrtomb@plt+0x546c>  // b.none
  40a684:	add	x0, x19, x19, lsl #1
  40a688:	sub	x0, x0, #0x3
  40a68c:	cmp	x0, #0x3f
  40a690:	b.ls	40a540 <wcrtomb@plt+0x55f0>  // b.plast
  40a694:	mov	x23, #0x0                   	// #0
  40a698:	mov	x20, #0xffffffffffffffff    	// #-1
  40a69c:	b	40a558 <wcrtomb@plt+0x5608>
  40a6a0:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  40a6a4:	mov	w7, w0
  40a6a8:	and	x0, x0, #0xfff
  40a6ac:	mov	x4, x1
  40a6b0:	ldr	w2, [x2, #824]
  40a6b4:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40a6b8:	mov	x5, #0x8                   	// #8
  40a6bc:	add	x6, x6, #0x73a
  40a6c0:	sub	w3, w2, #0x3
  40a6c4:	cmp	w3, #0x1
  40a6c8:	mov	x3, #0x0                   	// #0
  40a6cc:	ccmp	w2, #0x6, #0x4, hi  // hi = pmore
  40a6d0:	mov	x2, #0x4                   	// #4
  40a6d4:	csel	x1, x0, x7, eq  // eq = none
  40a6d8:	mov	w0, #0x0                   	// #0
  40a6dc:	b	40a304 <wcrtomb@plt+0x53b4>
  40a6e0:	mov	x4, x1
  40a6e4:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40a6e8:	sxtw	x1, w0
  40a6ec:	add	x6, x6, #0x741
  40a6f0:	lsr	w0, w0, #31
  40a6f4:	mov	x5, #0x8                   	// #8
  40a6f8:	mov	x3, #0x0                   	// #0
  40a6fc:	mov	x2, #0x4                   	// #4
  40a700:	b	40a304 <wcrtomb@plt+0x53b4>
  40a704:	mov	x4, x1
  40a708:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40a70c:	sxtw	x1, w0
  40a710:	add	x6, x6, #0x749
  40a714:	lsr	w0, w0, #31
  40a718:	mov	x5, #0x8                   	// #8
  40a71c:	mov	x3, #0x0                   	// #0
  40a720:	mov	x2, #0x4                   	// #4
  40a724:	b	40a304 <wcrtomb@plt+0x53b4>
  40a728:	stp	x29, x30, [sp, #-64]!
  40a72c:	mov	x29, sp
  40a730:	stp	x19, x20, [sp, #16]
  40a734:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  40a738:	add	x20, x20, #0x7b8
  40a73c:	stp	x21, x22, [sp, #32]
  40a740:	mov	x22, x2
  40a744:	mov	x21, x0
  40a748:	mov	x0, #0x28                  	// #40
  40a74c:	str	x23, [sp, #48]
  40a750:	mov	w23, w1
  40a754:	bl	436d44 <argp_usage@@Base+0x9864>
  40a758:	mov	x19, x0
  40a75c:	ldr	x0, [x20, #32]
  40a760:	str	x21, [x19]
  40a764:	str	w23, [x19, #16]
  40a768:	stp	x22, x0, [x19, #24]
  40a76c:	mov	x0, x21
  40a770:	bl	404280 <strlen@plt>
  40a774:	str	x0, [x19, #8]
  40a778:	str	x19, [x20, #32]
  40a77c:	ldp	x19, x20, [sp, #16]
  40a780:	ldp	x21, x22, [sp, #32]
  40a784:	ldr	x23, [sp, #48]
  40a788:	ldp	x29, x30, [sp], #64
  40a78c:	ret
  40a790:	stp	x29, x30, [sp, #-48]!
  40a794:	mov	x29, sp
  40a798:	stp	x19, x20, [sp, #16]
  40a79c:	mov	x20, x0
  40a7a0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a7a4:	stp	x21, x22, [sp, #32]
  40a7a8:	ldr	w0, [x0, #652]
  40a7ac:	cbz	w0, 40a82c <wcrtomb@plt+0x58dc>
  40a7b0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40a7b4:	ldr	w0, [x0, #480]
  40a7b8:	tbz	w0, #2, 40a82c <wcrtomb@plt+0x58dc>
  40a7bc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a7c0:	mov	x22, x1
  40a7c4:	mov	x21, x2
  40a7c8:	ldr	x0, [x0, #1016]
  40a7cc:	cbz	x0, 40a7d4 <wcrtomb@plt+0x5884>
  40a7d0:	blr	x0
  40a7d4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40a7d8:	add	x1, x1, #0x751
  40a7dc:	mov	w2, #0x5                   	// #5
  40a7e0:	mov	x0, #0x0                   	// #0
  40a7e4:	bl	404d00 <dcgettext@plt>
  40a7e8:	mov	x19, x0
  40a7ec:	mov	x0, x20
  40a7f0:	bl	436084 <argp_usage@@Base+0x8ba4>
  40a7f4:	mov	x1, x22
  40a7f8:	mov	x20, x0
  40a7fc:	mov	w0, #0x1                   	// #1
  40a800:	bl	435f20 <argp_usage@@Base+0x8a40>
  40a804:	mov	x5, x21
  40a808:	mov	x3, x20
  40a80c:	mov	x2, x19
  40a810:	mov	x4, x0
  40a814:	ldp	x19, x20, [sp, #16]
  40a818:	mov	w1, #0x0                   	// #0
  40a81c:	ldp	x21, x22, [sp, #32]
  40a820:	mov	w0, #0x0                   	// #0
  40a824:	ldp	x29, x30, [sp], #48
  40a828:	b	4042e0 <error@plt>
  40a82c:	ldp	x19, x20, [sp, #16]
  40a830:	ldp	x21, x22, [sp, #32]
  40a834:	ldp	x29, x30, [sp], #48
  40a838:	ret
  40a83c:	stp	x29, x30, [sp, #-64]!
  40a840:	mov	x2, #0x2b                  	// #43
  40a844:	mov	x29, sp
  40a848:	add	x1, sp, #0x10
  40a84c:	bl	404c80 <read@plt>
  40a850:	cmp	x0, #0x2b
  40a854:	b.ne	40a87c <wcrtomb@plt+0x592c>  // b.any
  40a858:	mov	x2, x0
  40a85c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40a860:	add	x0, sp, #0x10
  40a864:	add	x1, x1, #0x77b
  40a868:	bl	4049f0 <memcmp@plt>
  40a86c:	cmp	w0, #0x0
  40a870:	cset	w0, eq  // eq = none
  40a874:	ldp	x29, x30, [sp], #64
  40a878:	ret
  40a87c:	mov	w0, #0x0                   	// #0
  40a880:	b	40a874 <wcrtomb@plt+0x5924>
  40a884:	mov	x5, x2
  40a888:	mov	x4, x1
  40a88c:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40a890:	mov	x1, x0
  40a894:	add	x6, x6, #0x7a7
  40a898:	lsr	x0, x0, #63
  40a89c:	mov	x3, #0x0                   	// #0
  40a8a0:	mov	x2, #0x8                   	// #8
  40a8a4:	b	40a304 <wcrtomb@plt+0x53b4>
  40a8a8:	mov	x5, x2
  40a8ac:	mov	x4, x1
  40a8b0:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40a8b4:	mov	x1, x0
  40a8b8:	add	x6, x6, #0x7ad
  40a8bc:	lsr	x0, x0, #63
  40a8c0:	mov	x3, #0x0                   	// #0
  40a8c4:	mov	x2, #0x8                   	// #8
  40a8c8:	b	40a304 <wcrtomb@plt+0x53b4>
  40a8cc:	stp	x29, x30, [sp, #-32]!
  40a8d0:	mov	x29, sp
  40a8d4:	str	x19, [sp, #16]
  40a8d8:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40a8dc:	mov	x2, #0x200                 	// #512
  40a8e0:	mov	w1, #0x0                   	// #0
  40a8e4:	mov	x19, x0
  40a8e8:	bl	404700 <memset@plt>
  40a8ec:	mov	x0, x19
  40a8f0:	bl	405c98 <wcrtomb@plt+0xd48>
  40a8f4:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40a8f8:	mov	x19, x0
  40a8fc:	bl	405da8 <wcrtomb@plt+0xe58>
  40a900:	mov	x2, x0
  40a904:	mov	w1, #0x0                   	// #0
  40a908:	mov	x0, x19
  40a90c:	bl	404700 <memset@plt>
  40a910:	mov	x0, x19
  40a914:	ldr	x19, [sp, #16]
  40a918:	ldp	x29, x30, [sp], #32
  40a91c:	b	405c98 <wcrtomb@plt+0xd48>
  40a920:	stp	x29, x30, [sp, #-48]!
  40a924:	mov	x29, sp
  40a928:	stp	x19, x20, [sp, #16]
  40a92c:	mov	x20, x2
  40a930:	stp	x21, x22, [sp, #32]
  40a934:	mov	x22, x0
  40a938:	mov	x21, x1
  40a93c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40a940:	mov	x19, x0
  40a944:	mov	x2, #0x200                 	// #512
  40a948:	mov	w1, #0x0                   	// #0
  40a94c:	bl	404700 <memset@plt>
  40a950:	mov	x0, x19
  40a954:	mov	x1, x22
  40a958:	mov	x2, #0x64                  	// #100
  40a95c:	bl	409e54 <wcrtomb@plt+0x4f04>
  40a960:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40a964:	ldr	w0, [x0, #824]
  40a968:	cmp	w0, #0x2
  40a96c:	b.ne	40a974 <wcrtomb@plt+0x5a24>  // b.any
  40a970:	strb	wzr, [x19, #99]
  40a974:	add	x1, x19, #0x7c
  40a978:	mov	x0, x21
  40a97c:	mov	x2, #0xc                   	// #12
  40a980:	bl	40a884 <wcrtomb@plt+0x5934>
  40a984:	tbnz	x20, #63, 40aa38 <wcrtomb@plt+0x5ae8>
  40a988:	mov	x0, #0x1ffffffff           	// #8589934591
  40a98c:	cmp	x20, x0
  40a990:	csel	x0, x20, x0, ls  // ls = plast
  40a994:	mov	x2, #0xc                   	// #12
  40a998:	add	x1, x19, #0x88
  40a99c:	bl	40a8a8 <wcrtomb@plt+0x5958>
  40a9a0:	add	x1, x19, #0x64
  40a9a4:	mov	w0, #0x81a4                	// #33188
  40a9a8:	bl	40a6a0 <wcrtomb@plt+0x5750>
  40a9ac:	add	x4, x19, #0x6c
  40a9b0:	mov	x5, #0x8                   	// #8
  40a9b4:	mov	x2, #0x4                   	// #4
  40a9b8:	mov	x1, #0x0                   	// #0
  40a9bc:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40a9c0:	adrp	x3, 409000 <wcrtomb@plt+0x40b0>
  40a9c4:	add	x6, x6, #0x7b4
  40a9c8:	add	x3, x3, #0xea8
  40a9cc:	mov	w0, #0x0                   	// #0
  40a9d0:	bl	40a304 <wcrtomb@plt+0x53b4>
  40a9d4:	add	x4, x19, #0x74
  40a9d8:	mov	x5, #0x8                   	// #8
  40a9dc:	mov	x2, #0x4                   	// #4
  40a9e0:	mov	x1, #0x0                   	// #0
  40a9e4:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40a9e8:	adrp	x3, 409000 <wcrtomb@plt+0x40b0>
  40a9ec:	add	x6, x6, #0x7ba
  40a9f0:	add	x3, x3, #0xefc
  40a9f4:	mov	w0, #0x0                   	// #0
  40a9f8:	bl	40a304 <wcrtomb@plt+0x53b4>
  40a9fc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  40aa00:	add	x0, x0, #0xf06
  40aa04:	add	x1, x19, #0x101
  40aa08:	ldr	w2, [x0]
  40aa0c:	ldrh	w0, [x0, #4]
  40aa10:	strh	w0, [x1, #4]
  40aa14:	add	x0, x19, #0x107
  40aa18:	str	w2, [x1]
  40aa1c:	mov	w1, #0x3030                	// #12336
  40aa20:	strh	w1, [x0]
  40aa24:	mov	x0, x19
  40aa28:	ldp	x19, x20, [sp, #16]
  40aa2c:	ldp	x21, x22, [sp, #32]
  40aa30:	ldp	x29, x30, [sp], #48
  40aa34:	ret
  40aa38:	mov	x0, #0x0                   	// #0
  40aa3c:	b	40a994 <wcrtomb@plt+0x5a44>
  40aa40:	ldr	x5, [x1, #360]
  40aa44:	and	w4, w0, #0xff
  40aa48:	mov	x0, x2
  40aa4c:	cbnz	x5, 40aa60 <wcrtomb@plt+0x5b10>
  40aa50:	ldr	x3, [x1, #344]
  40aa54:	cbz	x3, 40aa60 <wcrtomb@plt+0x5b10>
  40aa58:	mov	w0, w4
  40aa5c:	b	40a1e8 <wcrtomb@plt+0x5298>
  40aa60:	ret
  40aa64:	stp	x29, x30, [sp, #-32]!
  40aa68:	add	x4, x0, #0x94
  40aa6c:	mov	w1, #0x0                   	// #0
  40aa70:	mov	x29, sp
  40aa74:	str	x19, [sp, #16]
  40aa78:	mov	x19, x0
  40aa7c:	mov	x0, #0x2020202020202020    	// #2314885530818453536
  40aa80:	stur	x0, [x19, #148]
  40aa84:	mov	x0, #0x0                   	// #0
  40aa88:	ldrb	w2, [x19, x0]
  40aa8c:	add	x0, x0, #0x1
  40aa90:	cmp	x0, #0x200
  40aa94:	add	w1, w1, w2
  40aa98:	b.ne	40aa88 <wcrtomb@plt+0x5b38>  // b.any
  40aa9c:	sxtw	x1, w1
  40aaa0:	mov	x5, #0x7                   	// #7
  40aaa4:	mov	x3, #0x0                   	// #0
  40aaa8:	mov	x2, #0x8                   	// #8
  40aaac:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40aab0:	mov	w0, #0x0                   	// #0
  40aab4:	add	x6, x6, #0x7c0
  40aab8:	bl	40a304 <wcrtomb@plt+0x53b4>
  40aabc:	mov	x0, x19
  40aac0:	ldr	x19, [sp, #16]
  40aac4:	ldp	x29, x30, [sp], #32
  40aac8:	b	405c98 <wcrtomb@plt+0xd48>
  40aacc:	stp	x29, x30, [sp, #-32]!
  40aad0:	mov	x29, sp
  40aad4:	stp	x19, x20, [sp, #16]
  40aad8:	mov	x20, x0
  40aadc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40aae0:	mov	x19, x1
  40aae4:	ldr	w0, [x0, #652]
  40aae8:	cbz	w0, 40ab30 <wcrtomb@plt+0x5be0>
  40aaec:	ldrb	w3, [x1, #156]
  40aaf0:	sub	w3, w3, #0x4b
  40aaf4:	and	w3, w3, #0xff
  40aaf8:	cmp	w3, #0x2d
  40aafc:	b.hi	40ab14 <wcrtomb@plt+0x5bc4>  // b.pmore
  40ab00:	mov	x0, #0x3                   	// #3
  40ab04:	movk	x0, #0x1000, lsl #16
  40ab08:	movk	x0, #0x2000, lsl #32
  40ab0c:	lsr	x3, x0, x3
  40ab10:	tbnz	w3, #0, 40ab30 <wcrtomb@plt+0x5be0>
  40ab14:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ab18:	ldr	w1, [x0, #824]
  40ab1c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40ab20:	str	w1, [x0, #4056]
  40ab24:	mov	x1, x19
  40ab28:	mov	x0, x20
  40ab2c:	bl	416e70 <wcrtomb@plt+0x11f20>
  40ab30:	mov	x2, x19
  40ab34:	mov	x1, x20
  40ab38:	mov	w0, #0x0                   	// #0
  40ab3c:	bl	40aa40 <wcrtomb@plt+0x5af0>
  40ab40:	ldp	x19, x20, [sp, #16]
  40ab44:	ldp	x29, x30, [sp], #32
  40ab48:	b	40aa64 <wcrtomb@plt+0x5b14>
  40ab4c:	stp	x29, x30, [sp, #-64]!
  40ab50:	mov	x29, sp
  40ab54:	stp	x19, x20, [sp, #16]
  40ab58:	stp	x21, x22, [sp, #32]
  40ab5c:	mov	x22, x1
  40ab60:	stp	x23, x24, [sp, #48]
  40ab64:	and	w24, w2, #0xff
  40ab68:	mov	x23, x0
  40ab6c:	mov	x0, x1
  40ab70:	bl	404280 <strlen@plt>
  40ab74:	add	x20, x0, #0x1
  40ab78:	mov	x2, #0x0                   	// #0
  40ab7c:	mov	x1, x20
  40ab80:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40ab84:	add	x0, x0, #0x7ca
  40ab88:	bl	40a920 <wcrtomb@plt+0x59d0>
  40ab8c:	mov	x19, x0
  40ab90:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ab94:	ldrb	w0, [x0, #680]
  40ab98:	cbnz	w0, 40abe8 <wcrtomb@plt+0x5c98>
  40ab9c:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  40aba0:	add	x21, x21, #0x7b8
  40aba4:	ldr	x0, [x21, #40]
  40aba8:	cbnz	x0, 40abc0 <wcrtomb@plt+0x5c70>
  40abac:	add	x1, x21, #0x28
  40abb0:	bl	41a27c <wcrtomb@plt+0x1532c>
  40abb4:	add	x1, x21, #0x30
  40abb8:	mov	w0, #0x0                   	// #0
  40abbc:	bl	41a30c <wcrtomb@plt+0x153bc>
  40abc0:	ldr	x1, [x21, #40]
  40abc4:	add	x0, x19, #0x109
  40abc8:	mov	x2, #0x20                  	// #32
  40abcc:	bl	409e54 <wcrtomb@plt+0x4f04>
  40abd0:	strb	wzr, [x19, #296]
  40abd4:	ldr	x1, [x21, #48]
  40abd8:	add	x0, x19, #0x129
  40abdc:	mov	x2, #0x20                  	// #32
  40abe0:	bl	409e54 <wcrtomb@plt+0x4f04>
  40abe4:	strb	wzr, [x19, #328]
  40abe8:	add	x0, x19, #0x101
  40abec:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  40abf0:	add	x1, x1, #0xf5c
  40abf4:	bl	404c40 <strcpy@plt>
  40abf8:	strb	w24, [x19, #156]
  40abfc:	mov	x1, x19
  40ac00:	mov	x0, x23
  40ac04:	mov	x2, #0xffffffffffffffff    	// #-1
  40ac08:	bl	40aacc <wcrtomb@plt+0x5b7c>
  40ac0c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40ac10:	mov	x21, x0
  40ac14:	bl	405da8 <wcrtomb@plt+0xe58>
  40ac18:	mov	x19, x0
  40ac1c:	cmp	x20, x0
  40ac20:	b.hi	40ac64 <wcrtomb@plt+0x5d14>  // b.pmore
  40ac24:	mov	x2, x20
  40ac28:	mov	x1, x22
  40ac2c:	mov	x0, x21
  40ac30:	bl	404200 <memcpy@plt>
  40ac34:	sub	x2, x19, x20
  40ac38:	add	x0, x21, x20
  40ac3c:	sub	x20, x20, #0x1
  40ac40:	mov	w1, #0x0                   	// #0
  40ac44:	and	x20, x20, #0xfffffffffffffe00
  40ac48:	bl	404700 <memset@plt>
  40ac4c:	add	x0, x21, x20
  40ac50:	ldp	x19, x20, [sp, #16]
  40ac54:	ldp	x21, x22, [sp, #32]
  40ac58:	ldp	x23, x24, [sp, #48]
  40ac5c:	ldp	x29, x30, [sp], #64
  40ac60:	b	405c98 <wcrtomb@plt+0xd48>
  40ac64:	mov	x2, x19
  40ac68:	mov	x1, x22
  40ac6c:	sub	x20, x20, x19
  40ac70:	add	x22, x22, x19
  40ac74:	sub	x19, x19, #0x1
  40ac78:	mov	x0, x21
  40ac7c:	and	x19, x19, #0xfffffffffffffe00
  40ac80:	bl	404200 <memcpy@plt>
  40ac84:	add	x0, x21, x19
  40ac88:	bl	405c98 <wcrtomb@plt+0xd48>
  40ac8c:	b	40ac0c <wcrtomb@plt+0x5cbc>
  40ac90:	stp	x29, x30, [sp, #-112]!
  40ac94:	mov	x29, sp
  40ac98:	stp	x21, x22, [sp, #32]
  40ac9c:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  40aca0:	stp	x19, x20, [sp, #16]
  40aca4:	mov	x19, x0
  40aca8:	ldr	w0, [x21, #824]
  40acac:	stp	x23, x24, [sp, #48]
  40acb0:	cmp	w0, #0x4
  40acb4:	str	x25, [sp, #64]
  40acb8:	stp	xzr, xzr, [sp, #80]
  40acbc:	b.ne	40acf4 <wcrtomb@plt+0x5da4>  // b.any
  40acc0:	ldr	x0, [x19, #8]
  40acc4:	bl	423268 <wcrtomb@plt+0x1e318>
  40acc8:	tst	w0, #0xff
  40accc:	b.ne	40acf4 <wcrtomb@plt+0x5da4>  // b.any
  40acd0:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40acd4:	mov	x1, x19
  40acd8:	add	x0, x0, #0x8af
  40acdc:	mov	x2, #0x0                   	// #0
  40ace0:	bl	4122e8 <wcrtomb@plt+0xd398>
  40ace4:	add	x0, x19, #0x8
  40ace8:	bl	40a2ac <wcrtomb@plt+0x535c>
  40acec:	mov	x20, x0
  40acf0:	b	40b318 <wcrtomb@plt+0x63c8>
  40acf4:	ldr	w20, [x21, #824]
  40acf8:	ldr	x24, [x19, #8]
  40acfc:	cmp	w20, #0x2
  40ad00:	cset	x22, ne  // ne = any
  40ad04:	add	x22, x22, #0x63
  40ad08:	mov	x0, x24
  40ad0c:	bl	404280 <strlen@plt>
  40ad10:	cmp	x0, x22
  40ad14:	b.ls	40ace4 <wcrtomb@plt+0x5d94>  // b.plast
  40ad18:	sub	w20, w20, #0x1
  40ad1c:	cmp	w20, #0x5
  40ad20:	b.hi	40ae8c <wcrtomb@plt+0x5f3c>  // b.pmore
  40ad24:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40ad28:	add	x1, x1, #0xa34
  40ad2c:	ldrb	w1, [x1, w20, uxtw]
  40ad30:	adr	x2, 40ad3c <wcrtomb@plt+0x5dec>
  40ad34:	add	x1, x2, w1, sxtb #2
  40ad38:	br	x1
  40ad3c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ad40:	ldr	x0, [x0, #1016]
  40ad44:	cbz	x0, 40ad4c <wcrtomb@plt+0x5dfc>
  40ad48:	blr	x0
  40ad4c:	mov	w2, #0x5                   	// #5
  40ad50:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40ad54:	mov	x0, #0x0                   	// #0
  40ad58:	add	x1, x1, #0x7d8
  40ad5c:	bl	404d00 <dcgettext@plt>
  40ad60:	mov	x20, x0
  40ad64:	ldr	x0, [x19, #8]
  40ad68:	bl	436084 <argp_usage@@Base+0x8ba4>
  40ad6c:	mov	x3, x0
  40ad70:	mov	x2, x20
  40ad74:	mov	w4, #0x63                  	// #99
  40ad78:	mov	w1, #0x0                   	// #0
  40ad7c:	mov	w0, #0x0                   	// #0
  40ad80:	bl	4042e0 <error@plt>
  40ad84:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40ad88:	mov	w1, #0x2                   	// #2
  40ad8c:	str	w1, [x0, #3464]
  40ad90:	mov	x20, #0x0                   	// #0
  40ad94:	mov	x0, x20
  40ad98:	ldp	x19, x20, [sp, #16]
  40ad9c:	ldp	x21, x22, [sp, #32]
  40ada0:	ldp	x23, x24, [sp, #48]
  40ada4:	ldr	x25, [sp, #64]
  40ada8:	ldp	x29, x30, [sp], #112
  40adac:	ret
  40adb0:	cmp	x0, #0x100
  40adb4:	b.ls	40adf8 <wcrtomb@plt+0x5ea8>  // b.plast
  40adb8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40adbc:	ldr	x0, [x0, #1016]
  40adc0:	cbz	x0, 40adc8 <wcrtomb@plt+0x5e78>
  40adc4:	blr	x0
  40adc8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40adcc:	add	x1, x1, #0x7d8
  40add0:	mov	w2, #0x5                   	// #5
  40add4:	mov	x0, #0x0                   	// #0
  40add8:	bl	404d00 <dcgettext@plt>
  40addc:	mov	x19, x0
  40ade0:	mov	x0, x24
  40ade4:	bl	436084 <argp_usage@@Base+0x8ba4>
  40ade8:	mov	x2, x19
  40adec:	mov	x3, x0
  40adf0:	mov	w4, #0x100                 	// #256
  40adf4:	b	40ad78 <wcrtomb@plt+0x5e28>
  40adf8:	cmp	x0, #0x9c
  40adfc:	b.hi	40ae70 <wcrtomb@plt+0x5f20>  // b.pmore
  40ae00:	sub	x22, x0, #0x1
  40ae04:	ldrb	w1, [x24, x22]
  40ae08:	cmp	w1, #0x2f
  40ae0c:	csel	x22, x22, x0, eq  // eq = none
  40ae10:	sub	x22, x22, #0x1
  40ae14:	ldrb	w1, [x24, x22]
  40ae18:	cmp	w1, #0x2f
  40ae1c:	b.eq	40b2d0 <wcrtomb@plt+0x6380>  // b.none
  40ae20:	subs	x22, x22, #0x1
  40ae24:	b.ne	40ae14 <wcrtomb@plt+0x5ec4>  // b.any
  40ae28:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ae2c:	ldr	x0, [x0, #1016]
  40ae30:	cbz	x0, 40ae38 <wcrtomb@plt+0x5ee8>
  40ae34:	blr	x0
  40ae38:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40ae3c:	add	x1, x1, #0x807
  40ae40:	mov	w2, #0x5                   	// #5
  40ae44:	mov	x0, #0x0                   	// #0
  40ae48:	bl	404d00 <dcgettext@plt>
  40ae4c:	mov	x19, x0
  40ae50:	mov	x0, x24
  40ae54:	bl	436084 <argp_usage@@Base+0x8ba4>
  40ae58:	mov	x2, x19
  40ae5c:	mov	x3, x0
  40ae60:	mov	w1, #0x0                   	// #0
  40ae64:	mov	w0, #0x0                   	// #0
  40ae68:	bl	4042e0 <error@plt>
  40ae6c:	b	40ad84 <wcrtomb@plt+0x5e34>
  40ae70:	mov	x22, #0x9c                  	// #156
  40ae74:	b	40ae10 <wcrtomb@plt+0x5ec0>
  40ae78:	mov	x1, x24
  40ae7c:	mov	x0, x19
  40ae80:	mov	w2, #0x4c                  	// #76
  40ae84:	bl	40ab4c <wcrtomb@plt+0x5bfc>
  40ae88:	b	40ace4 <wcrtomb@plt+0x5d94>
  40ae8c:	bl	404970 <abort@plt>
  40ae90:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ae94:	add	x0, x0, #0x320
  40ae98:	ldp	x0, x1, [x0]
  40ae9c:	stp	x0, x1, [sp, #96]
  40aea0:	ldr	w0, [x21, #824]
  40aea4:	cmp	w0, #0x4
  40aea8:	b.ne	40aeec <wcrtomb@plt+0x5f9c>  // b.any
  40aeac:	ldr	x1, [sp, #96]
  40aeb0:	mov	x0, #0x1ffffffff           	// #8589934591
  40aeb4:	cmp	x1, x0
  40aeb8:	b.hi	40aec4 <wcrtomb@plt+0x5f74>  // b.pmore
  40aebc:	ldr	x0, [sp, #104]
  40aec0:	cbz	x0, 40aeec <wcrtomb@plt+0x5f9c>
  40aec4:	mov	x1, x19
  40aec8:	add	x2, sp, #0x60
  40aecc:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  40aed0:	add	x0, x0, #0x8ba
  40aed4:	bl	4122e8 <wcrtomb@plt+0xd398>
  40aed8:	ldr	x1, [sp, #96]
  40aedc:	mov	x0, #0x1ffffffff           	// #8589934591
  40aee0:	cmp	x1, x0
  40aee4:	b.ls	40aeec <wcrtomb@plt+0x5f9c>  // b.plast
  40aee8:	str	xzr, [sp, #96]
  40aeec:	ldr	x0, [sp, #96]
  40aef0:	add	x1, x20, #0x88
  40aef4:	mov	x2, #0xc                   	// #12
  40aef8:	bl	40a8a8 <wcrtomb@plt+0x5958>
  40aefc:	tst	w0, #0xff
  40af00:	b.eq	40ad90 <wcrtomb@plt+0x5e40>  // b.none
  40af04:	ldr	w0, [x19, #104]
  40af08:	mov	w1, #0xb000                	// #45056
  40af0c:	ldr	w23, [x21, #824]
  40af10:	and	w0, w0, w1
  40af14:	cmp	w0, #0x2, lsl #12
  40af18:	b.ne	40b050 <wcrtomb@plt+0x6100>  // b.any
  40af1c:	ldr	x24, [x19, #120]
  40af20:	mov	x0, x24
  40af24:	bl	4049b0 <gnu_dev_major@plt>
  40af28:	mov	w22, w0
  40af2c:	mov	x0, x24
  40af30:	bl	404c30 <gnu_dev_minor@plt>
  40af34:	mov	w24, w0
  40af38:	mov	w25, w0
  40af3c:	cmp	w23, #0x4
  40af40:	b.ne	40af68 <wcrtomb@plt+0x6018>  // b.any
  40af44:	mov	w0, #0x1fffff              	// #2097151
  40af48:	cmp	w22, w0
  40af4c:	b.ls	40af68 <wcrtomb@plt+0x6018>  // b.plast
  40af50:	mov	w22, #0x0                   	// #0
  40af54:	mov	x1, x19
  40af58:	mov	x2, #0x0                   	// #0
  40af5c:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40af60:	add	x0, x0, #0x847
  40af64:	bl	4122e8 <wcrtomb@plt+0xd398>
  40af68:	add	x1, x20, #0x149
  40af6c:	mov	w0, w22
  40af70:	bl	40a704 <wcrtomb@plt+0x57b4>
  40af74:	tst	w0, #0xff
  40af78:	b.eq	40ad90 <wcrtomb@plt+0x5e40>  // b.none
  40af7c:	ldr	w0, [x21, #824]
  40af80:	cmp	w0, #0x4
  40af84:	b.ne	40afac <wcrtomb@plt+0x605c>  // b.any
  40af88:	mov	w0, #0x1fffff              	// #2097151
  40af8c:	cmp	w24, w0
  40af90:	b.ls	40afac <wcrtomb@plt+0x605c>  // b.plast
  40af94:	mov	w25, #0x0                   	// #0
  40af98:	mov	x1, x19
  40af9c:	mov	x2, #0x0                   	// #0
  40afa0:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40afa4:	add	x0, x0, #0x850
  40afa8:	bl	4122e8 <wcrtomb@plt+0xd398>
  40afac:	add	x1, x20, #0x151
  40afb0:	mov	w0, w25
  40afb4:	bl	40a6e0 <wcrtomb@plt+0x5790>
  40afb8:	tst	w0, #0xff
  40afbc:	b.eq	40ad90 <wcrtomb@plt+0x5e40>  // b.none
  40afc0:	ldr	w0, [x21, #824]
  40afc4:	cmp	w0, #0x4
  40afc8:	b.ne	40b07c <wcrtomb@plt+0x612c>  // b.any
  40afcc:	mov	x1, x19
  40afd0:	mov	x2, #0x0                   	// #0
  40afd4:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40afd8:	add	x0, x0, #0x859
  40afdc:	bl	4122e8 <wcrtomb@plt+0xd398>
  40afe0:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40afe4:	mov	x1, x19
  40afe8:	add	x0, x0, #0x85f
  40afec:	mov	x2, #0x0                   	// #0
  40aff0:	bl	4122e8 <wcrtomb@plt+0xd398>
  40aff4:	ldr	w22, [x21, #824]
  40aff8:	mov	w0, #0x30                  	// #48
  40affc:	cmp	w22, #0x1
  40b000:	sub	w1, w22, #0x1
  40b004:	csel	w0, wzr, w0, eq  // eq = none
  40b008:	strb	w0, [x20, #156]
  40b00c:	cmp	w1, #0x5
  40b010:	b.hi	40ae8c <wcrtomb@plt+0x5f3c>  // b.pmore
  40b014:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40b018:	add	x0, x0, #0xa3c
  40b01c:	ldrh	w0, [x0, w1, uxtw #1]
  40b020:	adr	x1, 40b02c <wcrtomb@plt+0x60dc>
  40b024:	add	x0, x1, w0, sxth #2
  40b028:	br	x0
  40b02c:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  40b030:	add	x22, x22, #0x320
  40b034:	ldp	x0, x1, [x19, #232]
  40b038:	ldp	x2, x3, [x22]
  40b03c:	bl	43683c <argp_usage@@Base+0x935c>
  40b040:	cmp	w0, #0x0
  40b044:	b.le	40b4c4 <wcrtomb@plt+0x6574>
  40b048:	ldp	x0, x1, [x22]
  40b04c:	b	40ae9c <wcrtomb@plt+0x5f4c>
  40b050:	and	w23, w23, #0xfffffffb
  40b054:	cmp	w23, #0x2
  40b058:	b.eq	40afc0 <wcrtomb@plt+0x6070>  // b.none
  40b05c:	add	x1, x20, #0x149
  40b060:	mov	w0, #0x0                   	// #0
  40b064:	bl	40a704 <wcrtomb@plt+0x57b4>
  40b068:	tst	w0, #0xff
  40b06c:	b.eq	40ad90 <wcrtomb@plt+0x5e40>  // b.none
  40b070:	add	x1, x20, #0x151
  40b074:	mov	w0, #0x0                   	// #0
  40b078:	b	40afb4 <wcrtomb@plt+0x6064>
  40b07c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  40b080:	ldrb	w1, [x1, #41]
  40b084:	cbz	w1, 40aff4 <wcrtomb@plt+0x60a4>
  40b088:	and	w0, w0, #0xfffffffb
  40b08c:	cmp	w0, #0x2
  40b090:	b.ne	40aff4 <wcrtomb@plt+0x60a4>  // b.any
  40b094:	ldr	x0, [x19, #216]
  40b098:	add	x1, x20, #0x159
  40b09c:	mov	x2, #0xc                   	// #12
  40b0a0:	bl	40a8a8 <wcrtomb@plt+0x5958>
  40b0a4:	ldr	x0, [x19, #248]
  40b0a8:	add	x1, x20, #0x165
  40b0ac:	mov	x2, #0xc                   	// #12
  40b0b0:	bl	40a8a8 <wcrtomb@plt+0x5958>
  40b0b4:	b	40aff4 <wcrtomb@plt+0x60a4>
  40b0b8:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  40b0bc:	add	x0, x20, #0x101
  40b0c0:	add	x1, x1, #0xf5c
  40b0c4:	bl	404c40 <strcpy@plt>
  40b0c8:	cmp	w22, #0x1
  40b0cc:	b.eq	40b18c <wcrtomb@plt+0x623c>  // b.none
  40b0d0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b0d4:	ldrb	w0, [x0, #680]
  40b0d8:	cbnz	w0, 40b18c <wcrtomb@plt+0x623c>
  40b0dc:	ldr	x0, [sp, #80]
  40b0e0:	cbz	x0, 40b288 <wcrtomb@plt+0x6338>
  40b0e4:	bl	436f10 <argp_usage@@Base+0x9a30>
  40b0e8:	str	x0, [x19, #32]
  40b0ec:	ldr	x0, [sp, #88]
  40b0f0:	cbz	x0, 40b298 <wcrtomb@plt+0x6348>
  40b0f4:	bl	436f10 <argp_usage@@Base+0x9a30>
  40b0f8:	str	x0, [x19, #40]
  40b0fc:	ldr	w0, [x21, #824]
  40b100:	cmp	w0, #0x4
  40b104:	b.ne	40b130 <wcrtomb@plt+0x61e0>  // b.any
  40b108:	ldr	x22, [x19, #32]
  40b10c:	mov	x0, x22
  40b110:	bl	404280 <strlen@plt>
  40b114:	cmp	x0, #0x20
  40b118:	b.ls	40b2a8 <wcrtomb@plt+0x6358>  // b.plast
  40b11c:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40b120:	mov	x1, x19
  40b124:	add	x0, x0, #0x865
  40b128:	mov	x2, #0x0                   	// #0
  40b12c:	bl	4122e8 <wcrtomb@plt+0xd398>
  40b130:	ldr	x1, [x19, #32]
  40b134:	add	x0, x20, #0x109
  40b138:	mov	x2, #0x20                  	// #32
  40b13c:	bl	409e54 <wcrtomb@plt+0x4f04>
  40b140:	strb	wzr, [x20, #296]
  40b144:	ldr	w0, [x21, #824]
  40b148:	cmp	w0, #0x4
  40b14c:	b.ne	40b178 <wcrtomb@plt+0x6228>  // b.any
  40b150:	ldr	x22, [x19, #40]
  40b154:	mov	x0, x22
  40b158:	bl	404280 <strlen@plt>
  40b15c:	cmp	x0, #0x20
  40b160:	b.ls	40b2bc <wcrtomb@plt+0x636c>  // b.plast
  40b164:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40b168:	mov	x1, x19
  40b16c:	add	x0, x0, #0x86b
  40b170:	mov	x2, #0x0                   	// #0
  40b174:	bl	4122e8 <wcrtomb@plt+0xd398>
  40b178:	ldr	x1, [x19, #40]
  40b17c:	add	x0, x20, #0x129
  40b180:	mov	x2, #0x20                  	// #32
  40b184:	bl	409e54 <wcrtomb@plt+0x4f04>
  40b188:	strb	wzr, [x20, #328]
  40b18c:	ldr	w0, [x21, #824]
  40b190:	cmp	w0, #0x4
  40b194:	b.ne	40ad94 <wcrtomb@plt+0x5e44>  // b.any
  40b198:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b19c:	ldr	w0, [x0, #904]
  40b1a0:	cmp	w0, #0x0
  40b1a4:	b.le	40b1e0 <wcrtomb@plt+0x6290>
  40b1a8:	ldr	x0, [x19, #56]
  40b1ac:	cbz	x0, 40b1c4 <wcrtomb@plt+0x6274>
  40b1b0:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40b1b4:	mov	x1, x19
  40b1b8:	add	x0, x0, #0x871
  40b1bc:	mov	x2, #0x0                   	// #0
  40b1c0:	bl	4122e8 <wcrtomb@plt+0xd398>
  40b1c4:	ldr	x0, [x19, #72]
  40b1c8:	cbz	x0, 40b1e0 <wcrtomb@plt+0x6290>
  40b1cc:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40b1d0:	mov	x1, x19
  40b1d4:	add	x0, x0, #0x883
  40b1d8:	mov	x2, #0x0                   	// #0
  40b1dc:	bl	4122e8 <wcrtomb@plt+0xd398>
  40b1e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b1e4:	ldr	w0, [x0, #992]
  40b1e8:	cmp	w0, #0x0
  40b1ec:	b.le	40b20c <wcrtomb@plt+0x62bc>
  40b1f0:	ldr	x0, [x19, #48]
  40b1f4:	cbz	x0, 40b20c <wcrtomb@plt+0x62bc>
  40b1f8:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40b1fc:	mov	x1, x19
  40b200:	add	x0, x0, #0x896
  40b204:	mov	x2, #0x0                   	// #0
  40b208:	bl	4122e8 <wcrtomb@plt+0xd398>
  40b20c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b210:	ldr	w0, [x0, #664]
  40b214:	cmp	w0, #0x0
  40b218:	b.le	40ad94 <wcrtomb@plt+0x5e44>
  40b21c:	ldr	x21, [x19, #336]
  40b220:	mov	x22, #0x18                  	// #24
  40b224:	str	xzr, [sp, #96]
  40b228:	ldr	x0, [sp, #96]
  40b22c:	ldr	x1, [x19, #328]
  40b230:	cmp	x1, x0
  40b234:	b.ls	40ad94 <wcrtomb@plt+0x5e44>  // b.plast
  40b238:	mul	x0, x0, x22
  40b23c:	add	x2, sp, #0x60
  40b240:	mov	x1, x19
  40b244:	ldr	x0, [x21, x0]
  40b248:	bl	4122e8 <wcrtomb@plt+0xd398>
  40b24c:	ldr	x0, [sp, #96]
  40b250:	add	x0, x0, #0x1
  40b254:	str	x0, [sp, #96]
  40b258:	b	40b228 <wcrtomb@plt+0x62d8>
  40b25c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  40b260:	add	x0, x0, #0xf06
  40b264:	add	x1, x20, #0x101
  40b268:	ldr	w2, [x0]
  40b26c:	ldrh	w0, [x0, #4]
  40b270:	strh	w0, [x1, #4]
  40b274:	add	x0, x20, #0x107
  40b278:	str	w2, [x1]
  40b27c:	mov	w1, #0x3030                	// #12336
  40b280:	strh	w1, [x0]
  40b284:	b	40b0c8 <wcrtomb@plt+0x6178>
  40b288:	ldr	w0, [x19, #112]
  40b28c:	add	x1, x19, #0x20
  40b290:	bl	41a27c <wcrtomb@plt+0x1532c>
  40b294:	b	40b0ec <wcrtomb@plt+0x619c>
  40b298:	ldr	w0, [x19, #116]
  40b29c:	add	x1, x19, #0x28
  40b2a0:	bl	41a30c <wcrtomb@plt+0x153bc>
  40b2a4:	b	40b0fc <wcrtomb@plt+0x61ac>
  40b2a8:	mov	x0, x22
  40b2ac:	bl	423268 <wcrtomb@plt+0x1e318>
  40b2b0:	tst	w0, #0xff
  40b2b4:	b.eq	40b11c <wcrtomb@plt+0x61cc>  // b.none
  40b2b8:	b	40b130 <wcrtomb@plt+0x61e0>
  40b2bc:	mov	x0, x22
  40b2c0:	bl	423268 <wcrtomb@plt+0x1e318>
  40b2c4:	tst	w0, #0xff
  40b2c8:	b.eq	40b164 <wcrtomb@plt+0x6214>  // b.none
  40b2cc:	b	40b178 <wcrtomb@plt+0x6228>
  40b2d0:	sub	x23, x0, x22
  40b2d4:	sub	x0, x23, #0x2
  40b2d8:	cmp	x0, #0x63
  40b2dc:	b.hi	40ae28 <wcrtomb@plt+0x5ed8>  // b.pmore
  40b2e0:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40b2e4:	mov	x20, x0
  40b2e8:	mov	x2, #0x200                 	// #512
  40b2ec:	mov	w1, #0x0                   	// #0
  40b2f0:	bl	404700 <memset@plt>
  40b2f4:	mov	x2, x22
  40b2f8:	mov	x1, x24
  40b2fc:	add	x0, x20, #0x159
  40b300:	bl	404200 <memcpy@plt>
  40b304:	add	x1, x22, #0x1
  40b308:	sub	x2, x23, #0x1
  40b30c:	add	x1, x24, x1
  40b310:	mov	x0, x20
  40b314:	bl	404200 <memcpy@plt>
  40b318:	cbz	x20, 40ad90 <wcrtomb@plt+0x5e40>
  40b31c:	ldr	w0, [x19, #112]
  40b320:	add	x2, sp, #0x50
  40b324:	add	x1, x19, #0x70
  40b328:	bl	417abc <wcrtomb@plt+0x12b6c>
  40b32c:	ldr	w0, [x19, #116]
  40b330:	add	x2, sp, #0x58
  40b334:	add	x1, x19, #0x74
  40b338:	bl	417b64 <wcrtomb@plt+0x12c14>
  40b33c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b340:	ldr	x3, [x0, #608]
  40b344:	cbz	x3, 40b378 <wcrtomb@plt+0x6428>
  40b348:	ldr	w22, [x19, #104]
  40b34c:	mov	x4, #0x0                   	// #0
  40b350:	and	w0, w22, #0xf000
  40b354:	cmp	w0, #0x4, lsl #12
  40b358:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b35c:	cset	w1, eq  // eq = none
  40b360:	ldr	w2, [x0, #88]
  40b364:	mov	w0, w22
  40b368:	and	w22, w22, #0xfffff000
  40b36c:	bl	431b44 <argp_usage@@Base+0x4664>
  40b370:	orr	w22, w22, w0
  40b374:	str	w22, [x19, #104]
  40b378:	ldr	w2, [x21, #824]
  40b37c:	add	x1, x20, #0x64
  40b380:	ldr	w0, [x19, #104]
  40b384:	and	w2, w2, #0xfffffffd
  40b388:	cmp	w2, #0x1
  40b38c:	b.ne	40b394 <wcrtomb@plt+0x6444>  // b.any
  40b390:	and	w0, w0, #0xfff
  40b394:	bl	40a6a0 <wcrtomb@plt+0x5750>
  40b398:	ldr	w0, [x21, #824]
  40b39c:	ldr	w1, [x19, #112]
  40b3a0:	cmp	w0, #0x4
  40b3a4:	b.ne	40b3cc <wcrtomb@plt+0x647c>  // b.any
  40b3a8:	mov	w0, #0x1fffff              	// #2097151
  40b3ac:	cmp	w1, w0
  40b3b0:	b.ls	40b3cc <wcrtomb@plt+0x647c>  // b.plast
  40b3b4:	mov	x1, x19
  40b3b8:	mov	x2, #0x0                   	// #0
  40b3bc:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40b3c0:	add	x0, x0, #0x83f
  40b3c4:	bl	4122e8 <wcrtomb@plt+0xd398>
  40b3c8:	mov	w1, #0x0                   	// #0
  40b3cc:	add	x4, x20, #0x6c
  40b3d0:	mov	w1, w1
  40b3d4:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40b3d8:	mov	x5, #0x8                   	// #8
  40b3dc:	add	x6, x6, #0x7b4
  40b3e0:	adrp	x3, 409000 <wcrtomb@plt+0x40b0>
  40b3e4:	mov	x2, #0x4                   	// #4
  40b3e8:	add	x3, x3, #0xea8
  40b3ec:	mov	w0, #0x0                   	// #0
  40b3f0:	bl	40a304 <wcrtomb@plt+0x53b4>
  40b3f4:	tst	w0, #0xff
  40b3f8:	b.eq	40ad90 <wcrtomb@plt+0x5e40>  // b.none
  40b3fc:	ldr	w0, [x21, #824]
  40b400:	ldr	w1, [x19, #116]
  40b404:	cmp	w0, #0x4
  40b408:	b.ne	40b430 <wcrtomb@plt+0x64e0>  // b.any
  40b40c:	mov	w0, #0x1fffff              	// #2097151
  40b410:	cmp	w1, w0
  40b414:	b.ls	40b430 <wcrtomb@plt+0x64e0>  // b.plast
  40b418:	mov	x1, x19
  40b41c:	mov	x2, #0x0                   	// #0
  40b420:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40b424:	add	x0, x0, #0x843
  40b428:	bl	4122e8 <wcrtomb@plt+0xd398>
  40b42c:	mov	w1, #0x0                   	// #0
  40b430:	add	x4, x20, #0x74
  40b434:	mov	w1, w1
  40b438:	adrp	x6, 447000 <_obstack_memory_used@@Base+0xf380>
  40b43c:	mov	x5, #0x8                   	// #8
  40b440:	add	x6, x6, #0x7ba
  40b444:	adrp	x3, 409000 <wcrtomb@plt+0x40b0>
  40b448:	mov	x2, #0x4                   	// #4
  40b44c:	add	x3, x3, #0xefc
  40b450:	mov	w0, #0x0                   	// #0
  40b454:	bl	40a304 <wcrtomb@plt+0x53b4>
  40b458:	tst	w0, #0xff
  40b45c:	b.eq	40ad90 <wcrtomb@plt+0x5e40>  // b.none
  40b460:	ldr	w1, [x21, #824]
  40b464:	ldr	x0, [x19, #136]
  40b468:	cmp	w1, #0x4
  40b46c:	b.ne	40b494 <wcrtomb@plt+0x6544>  // b.any
  40b470:	mov	x1, #0x1ffffffff           	// #8589934591
  40b474:	cmp	x0, x1
  40b478:	b.ls	40b494 <wcrtomb@plt+0x6544>  // b.plast
  40b47c:	mov	x1, x19
  40b480:	mov	x2, #0x0                   	// #0
  40b484:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  40b488:	add	x0, x0, #0x55a
  40b48c:	bl	4122e8 <wcrtomb@plt+0xd398>
  40b490:	mov	x0, #0x0                   	// #0
  40b494:	add	x1, x20, #0x7c
  40b498:	mov	x2, #0xc                   	// #12
  40b49c:	bl	40a884 <wcrtomb@plt+0x5934>
  40b4a0:	tst	w0, #0xff
  40b4a4:	b.eq	40ad90 <wcrtomb@plt+0x5e40>  // b.none
  40b4a8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b4ac:	ldr	w0, [x0, #64]
  40b4b0:	cmp	w0, #0x1
  40b4b4:	b.eq	40ae90 <wcrtomb@plt+0x5f40>  // b.none
  40b4b8:	cmp	w0, #0x2
  40b4bc:	b.eq	40b02c <wcrtomb@plt+0x60dc>  // b.none
  40b4c0:	cbnz	w0, 40aea0 <wcrtomb@plt+0x5f50>
  40b4c4:	ldp	x0, x1, [x19, #232]
  40b4c8:	b	40ae9c <wcrtomb@plt+0x5f4c>
  40b4cc:	stp	x29, x30, [sp, #-32]!
  40b4d0:	mov	x29, sp
  40b4d4:	stp	x19, x20, [sp, #16]
  40b4d8:	mov	x19, x0
  40b4dc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b4e0:	ldr	w0, [x0, #824]
  40b4e4:	sub	w0, w0, #0x1
  40b4e8:	cmp	w0, #0x5
  40b4ec:	b.hi	40b598 <wcrtomb@plt+0x6648>  // b.pmore
  40b4f0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40b4f4:	add	x1, x1, #0xa48
  40b4f8:	ldrb	w0, [x1, w0, uxtw]
  40b4fc:	adr	x1, 40b508 <wcrtomb@plt+0x65b8>
  40b500:	add	x0, x1, w0, sxtb #2
  40b504:	br	x0
  40b508:	mov	x1, x19
  40b50c:	mov	x2, #0x0                   	// #0
  40b510:	ldp	x19, x20, [sp, #16]
  40b514:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40b518:	ldp	x29, x30, [sp], #32
  40b51c:	add	x0, x0, #0x8ab
  40b520:	b	4122e8 <wcrtomb@plt+0xd398>
  40b524:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b528:	ldr	x0, [x0, #1016]
  40b52c:	cbz	x0, 40b534 <wcrtomb@plt+0x65e4>
  40b530:	blr	x0
  40b534:	mov	w2, #0x5                   	// #5
  40b538:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40b53c:	mov	x0, #0x0                   	// #0
  40b540:	add	x1, x1, #0x8b4
  40b544:	bl	404d00 <dcgettext@plt>
  40b548:	mov	x20, x0
  40b54c:	ldr	x0, [x19, #24]
  40b550:	bl	436084 <argp_usage@@Base+0x8ba4>
  40b554:	mov	x3, x0
  40b558:	mov	x2, x20
  40b55c:	mov	w1, #0x0                   	// #0
  40b560:	mov	w0, #0x0                   	// #0
  40b564:	bl	4042e0 <error@plt>
  40b568:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40b56c:	mov	w1, #0x2                   	// #2
  40b570:	ldp	x19, x20, [sp, #16]
  40b574:	str	w1, [x0, #3464]
  40b578:	ldp	x29, x30, [sp], #32
  40b57c:	ret
  40b580:	mov	x0, x19
  40b584:	mov	w2, #0x4b                  	// #75
  40b588:	ldr	x1, [x19, #24]
  40b58c:	ldp	x19, x20, [sp, #16]
  40b590:	ldp	x29, x30, [sp], #32
  40b594:	b	40ab4c <wcrtomb@plt+0x5bfc>
  40b598:	bl	404970 <abort@plt>
  40b59c:	stp	x29, x30, [sp, #-32]!
  40b5a0:	mov	x29, sp
  40b5a4:	stp	x19, x20, [sp, #16]
  40b5a8:	mov	x19, x0
  40b5ac:	cmp	x19, #0x0
  40b5b0:	b.gt	40b5c0 <wcrtomb@plt+0x6670>
  40b5b4:	ldp	x19, x20, [sp, #16]
  40b5b8:	ldp	x29, x30, [sp], #32
  40b5bc:	ret
  40b5c0:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40b5c4:	mov	x20, x0
  40b5c8:	mov	x2, #0x200                 	// #512
  40b5cc:	mov	w1, #0x0                   	// #0
  40b5d0:	bl	404700 <memset@plt>
  40b5d4:	sub	x19, x19, #0x200
  40b5d8:	mov	x0, x20
  40b5dc:	bl	405c98 <wcrtomb@plt+0xd48>
  40b5e0:	b	40b5ac <wcrtomb@plt+0x665c>
  40b5e4:	stp	x29, x30, [sp, #-112]!
  40b5e8:	mov	x29, sp
  40b5ec:	stp	x19, x20, [sp, #16]
  40b5f0:	stp	x21, x22, [sp, #32]
  40b5f4:	mov	x21, x1
  40b5f8:	stp	x23, x24, [sp, #48]
  40b5fc:	mov	w24, w0
  40b600:	stp	x25, x26, [sp, #64]
  40b604:	ldr	x19, [x1, #136]
  40b608:	bl	405c2c <wcrtomb@plt+0xcdc>
  40b60c:	mov	x20, x0
  40b610:	mov	x0, x21
  40b614:	bl	40ac90 <wcrtomb@plt+0x5d40>
  40b618:	cbz	x0, 40b7b8 <wcrtomb@plt+0x6868>
  40b61c:	mov	x1, x0
  40b620:	mov	x2, x20
  40b624:	mov	x0, x21
  40b628:	bl	40aacc <wcrtomb@plt+0x5b7c>
  40b62c:	ldr	x0, [x21, #8]
  40b630:	mov	x26, #0x200                 	// #512
  40b634:	ldr	x2, [x21, #136]
  40b638:	mov	x1, x2
  40b63c:	bl	405808 <wcrtomb@plt+0x8b8>
  40b640:	cmp	x19, #0x0
  40b644:	b.gt	40b650 <wcrtomb@plt+0x6700>
  40b648:	mov	w0, #0x0                   	// #0
  40b64c:	b	40b6dc <wcrtomb@plt+0x678c>
  40b650:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40b654:	mov	x25, x19
  40b658:	mov	x23, x0
  40b65c:	bl	405da8 <wcrtomb@plt+0xe58>
  40b660:	mov	x20, x0
  40b664:	cmp	x19, x0
  40b668:	b.cs	40b698 <wcrtomb@plt+0x6748>  // b.hs, b.nlast
  40b66c:	ands	x2, x19, #0x1ff
  40b670:	b.eq	40b684 <wcrtomb@plt+0x6734>  // b.none
  40b674:	sub	x2, x26, x2
  40b678:	add	x0, x23, x19
  40b67c:	mov	w1, #0x0                   	// #0
  40b680:	bl	404700 <memset@plt>
  40b684:	cmp	w24, #0x0
  40b688:	b.gt	40b6f4 <wcrtomb@plt+0x67a4>
  40b68c:	mov	x22, x19
  40b690:	mov	x20, x19
  40b694:	b	40b700 <wcrtomb@plt+0x67b0>
  40b698:	cmp	w24, #0x0
  40b69c:	b.le	40b6fc <wcrtomb@plt+0x67ac>
  40b6a0:	mov	x2, x20
  40b6a4:	mov	x1, x23
  40b6a8:	mov	w0, w24
  40b6ac:	bl	4188e4 <wcrtomb@plt+0x13994>
  40b6b0:	mov	x22, x0
  40b6b4:	cmn	x0, #0x1
  40b6b8:	b.ne	40b700 <wcrtomb@plt+0x67b0>  // b.any
  40b6bc:	ldr	x0, [x21]
  40b6c0:	mov	x2, x20
  40b6c4:	ldr	x1, [x21, #136]
  40b6c8:	sub	x1, x1, x19
  40b6cc:	bl	418c00 <wcrtomb@plt+0x13cb0>
  40b6d0:	mov	x0, x19
  40b6d4:	bl	40b59c <wcrtomb@plt+0x664c>
  40b6d8:	mov	w0, #0x1                   	// #1
  40b6dc:	ldp	x19, x20, [sp, #16]
  40b6e0:	ldp	x21, x22, [sp, #32]
  40b6e4:	ldp	x23, x24, [sp, #48]
  40b6e8:	ldp	x25, x26, [sp, #64]
  40b6ec:	ldp	x29, x30, [sp], #112
  40b6f0:	ret
  40b6f4:	mov	x20, x19
  40b6f8:	b	40b6a0 <wcrtomb@plt+0x6750>
  40b6fc:	mov	x22, x0
  40b700:	sub	x0, x20, #0x1
  40b704:	sub	x19, x19, x22
  40b708:	and	x0, x0, #0xfffffffffffffe00
  40b70c:	add	x0, x23, x0
  40b710:	bl	405c98 <wcrtomb@plt+0xd48>
  40b714:	cmp	x20, x22
  40b718:	b.eq	40b640 <wcrtomb@plt+0x66f0>  // b.none
  40b71c:	sub	x2, x20, x22
  40b720:	add	x0, x23, x22
  40b724:	mov	w1, #0x0                   	// #0
  40b728:	bl	404700 <memset@plt>
  40b72c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40b730:	ldr	w0, [x0, #480]
  40b734:	tbz	w0, #7, 40b79c <wcrtomb@plt+0x684c>
  40b738:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b73c:	ldr	x0, [x0, #1016]
  40b740:	cbz	x0, 40b748 <wcrtomb@plt+0x67f8>
  40b744:	blr	x0
  40b748:	mov	x3, x19
  40b74c:	mov	w4, #0x5                   	// #5
  40b750:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  40b754:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40b758:	add	x2, x2, #0x8da
  40b75c:	add	x1, x1, #0x90a
  40b760:	mov	x0, #0x0                   	// #0
  40b764:	bl	404c10 <dcngettext@plt>
  40b768:	mov	x22, x0
  40b76c:	ldr	x0, [x21]
  40b770:	bl	436084 <argp_usage@@Base+0x8ba4>
  40b774:	mov	x21, x0
  40b778:	add	x1, sp, #0x58
  40b77c:	mov	x0, x19
  40b780:	bl	431400 <argp_usage@@Base+0x3f20>
  40b784:	mov	x4, x0
  40b788:	mov	x3, x21
  40b78c:	mov	x2, x22
  40b790:	mov	w1, #0x0                   	// #0
  40b794:	mov	w0, #0x0                   	// #0
  40b798:	bl	4042e0 <error@plt>
  40b79c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40b7a0:	ldrb	w0, [x0, #961]
  40b7a4:	cbnz	w0, 40b7b0 <wcrtomb@plt+0x6860>
  40b7a8:	mov	w0, #0x1                   	// #1
  40b7ac:	bl	421c04 <wcrtomb@plt+0x1ccb4>
  40b7b0:	sub	x0, x25, x20
  40b7b4:	b	40b6d4 <wcrtomb@plt+0x6784>
  40b7b8:	mov	w0, #0x2                   	// #2
  40b7bc:	b	40b6dc <wcrtomb@plt+0x678c>
  40b7c0:	stp	x29, x30, [sp, #-32]!
  40b7c4:	mov	x29, sp
  40b7c8:	str	x19, [sp, #16]
  40b7cc:	mov	x19, x0
  40b7d0:	ldr	w0, [x19, #408]
  40b7d4:	bl	404920 <fdopendir@plt>
  40b7d8:	str	x0, [x19, #400]
  40b7dc:	cbz	x0, 40b7f4 <wcrtomb@plt+0x68a4>
  40b7e0:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  40b7e4:	ldr	x19, [sp, #16]
  40b7e8:	ldp	x29, x30, [sp], #32
  40b7ec:	ldr	w1, [x1, #528]
  40b7f0:	b	436548 <argp_usage@@Base+0x9068>
  40b7f4:	mov	x0, x19
  40b7f8:	bl	409f50 <wcrtomb@plt+0x5000>
  40b7fc:	tst	w0, #0xff
  40b800:	b.ne	40b7d0 <wcrtomb@plt+0x6880>  // b.any
  40b804:	mov	x0, #0x0                   	// #0
  40b808:	ldr	x19, [sp, #16]
  40b80c:	ldp	x29, x30, [sp], #32
  40b810:	ret
  40b814:	stp	x29, x30, [sp, #-64]!
  40b818:	mov	x29, sp
  40b81c:	stp	x19, x20, [sp, #16]
  40b820:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  40b824:	add	x20, x20, #0x7b8
  40b828:	stp	x21, x22, [sp, #32]
  40b82c:	ldr	x0, [x20, #16]
  40b830:	str	x23, [sp, #48]
  40b834:	cbz	x0, 40b850 <wcrtomb@plt+0x6900>
  40b838:	adrp	x21, 447000 <_obstack_memory_used@@Base+0xf380>
  40b83c:	bl	430344 <argp_usage@@Base+0x2e64>
  40b840:	add	x21, x21, #0x939
  40b844:	mov	x19, x0
  40b848:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  40b84c:	cbnz	x19, 40b864 <wcrtomb@plt+0x6914>
  40b850:	ldp	x19, x20, [sp, #16]
  40b854:	ldp	x21, x22, [sp, #32]
  40b858:	ldr	x23, [sp, #48]
  40b85c:	ldp	x29, x30, [sp], #64
  40b860:	ret
  40b864:	ldr	w0, [x19, #16]
  40b868:	cbz	w0, 40b8a8 <wcrtomb@plt+0x6958>
  40b86c:	ldr	x0, [x23, #1016]
  40b870:	cbz	x0, 40b878 <wcrtomb@plt+0x6928>
  40b874:	blr	x0
  40b878:	mov	x1, x21
  40b87c:	mov	w2, #0x5                   	// #5
  40b880:	mov	x0, #0x0                   	// #0
  40b884:	bl	404d00 <dcgettext@plt>
  40b888:	mov	x22, x0
  40b88c:	add	x0, x19, #0x14
  40b890:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  40b894:	mov	x3, x0
  40b898:	mov	x2, x22
  40b89c:	mov	w1, #0x0                   	// #0
  40b8a0:	mov	w0, #0x0                   	// #0
  40b8a4:	bl	4042e0 <error@plt>
  40b8a8:	ldr	x0, [x20, #16]
  40b8ac:	mov	x1, x19
  40b8b0:	bl	43037c <argp_usage@@Base+0x2e9c>
  40b8b4:	mov	x19, x0
  40b8b8:	b	40b84c <wcrtomb@plt+0x68fc>
  40b8bc:	stp	x29, x30, [sp, #-64]!
  40b8c0:	mov	x29, sp
  40b8c4:	stp	x19, x20, [sp, #16]
  40b8c8:	mov	x19, x0
  40b8cc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40b8d0:	add	x0, x0, #0x7b8
  40b8d4:	stp	x21, x22, [sp, #32]
  40b8d8:	mov	x21, x1
  40b8dc:	mov	w22, w2
  40b8e0:	ldrb	w1, [x0, #56]
  40b8e4:	str	x23, [sp, #48]
  40b8e8:	cbnz	w1, 40b910 <wcrtomb@plt+0x69c0>
  40b8ec:	mov	w1, #0x1                   	// #1
  40b8f0:	strb	w1, [x0, #56]
  40b8f4:	mov	w0, #0x2                   	// #2
  40b8f8:	bl	4048a0 <strerror@plt>
  40b8fc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  40b900:	mov	w2, #0x5                   	// #5
  40b904:	add	x1, x1, #0x41a
  40b908:	mov	x0, #0x0                   	// #0
  40b90c:	bl	404d00 <dcgettext@plt>
  40b910:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x36380>
  40b914:	add	x23, x23, #0x8d8
  40b918:	cbz	x19, 40b95c <wcrtomb@plt+0x6a0c>
  40b91c:	ldr	w0, [x19, #408]
  40b920:	mov	w2, w22
  40b924:	mov	x1, x21
  40b928:	bl	4048b0 <__openat_2@plt>
  40b92c:	mov	w20, w0
  40b930:	tbz	w0, #31, 40b944 <wcrtomb@plt+0x69f4>
  40b934:	mov	x0, x19
  40b938:	bl	409f50 <wcrtomb@plt+0x5000>
  40b93c:	tst	w0, #0xff
  40b940:	b.ne	40b918 <wcrtomb@plt+0x69c8>  // b.any
  40b944:	mov	w0, w20
  40b948:	ldp	x19, x20, [sp, #16]
  40b94c:	ldp	x21, x22, [sp, #32]
  40b950:	ldr	x23, [sp, #48]
  40b954:	ldp	x29, x30, [sp], #64
  40b958:	ret
  40b95c:	ldr	w0, [x23]
  40b960:	b	40b920 <wcrtomb@plt+0x69d0>
  40b964:	stp	x29, x30, [sp, #-64]!
  40b968:	mov	x29, sp
  40b96c:	stp	x23, x24, [sp, #48]
  40b970:	mov	x23, x0
  40b974:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40b978:	stp	x19, x20, [sp, #16]
  40b97c:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  40b980:	mov	x20, x1
  40b984:	ldr	x19, [x0, #2008]
  40b988:	add	x24, x24, #0x2cc
  40b98c:	stp	x21, x22, [sp, #32]
  40b990:	cbnz	x19, 40b99c <wcrtomb@plt+0x6a4c>
  40b994:	mov	w0, #0x0                   	// #0
  40b998:	b	40b9e0 <wcrtomb@plt+0x6a90>
  40b99c:	ldr	w2, [x24]
  40b9a0:	mov	x0, x23
  40b9a4:	ldr	x1, [x19]
  40b9a8:	bl	40b8bc <wcrtomb@plt+0x696c>
  40b9ac:	mov	w22, w0
  40b9b0:	tbnz	w0, #31, 40b9fc <wcrtomb@plt+0x6aac>
  40b9b4:	ldr	x1, [x19, #24]
  40b9b8:	cbz	x1, 40b9f4 <wcrtomb@plt+0x6aa4>
  40b9bc:	blr	x1
  40b9c0:	and	w21, w0, #0xff
  40b9c4:	mov	w0, w22
  40b9c8:	bl	4048c0 <close@plt>
  40b9cc:	cbz	w21, 40b9fc <wcrtomb@plt+0x6aac>
  40b9d0:	cbz	x20, 40b9dc <wcrtomb@plt+0x6a8c>
  40b9d4:	ldr	x0, [x19]
  40b9d8:	str	x0, [x20]
  40b9dc:	ldr	w0, [x19, #16]
  40b9e0:	ldp	x19, x20, [sp, #16]
  40b9e4:	ldp	x21, x22, [sp, #32]
  40b9e8:	ldp	x23, x24, [sp, #48]
  40b9ec:	ldp	x29, x30, [sp], #64
  40b9f0:	ret
  40b9f4:	mov	w21, #0x1                   	// #1
  40b9f8:	b	40b9c4 <wcrtomb@plt+0x6a74>
  40b9fc:	ldr	x19, [x19, #32]
  40ba00:	b	40b990 <wcrtomb@plt+0x6a40>
  40ba04:	stp	x29, x30, [sp, #-176]!
  40ba08:	mov	x29, sp
  40ba0c:	stp	x19, x20, [sp, #16]
  40ba10:	ldr	x20, [x0, #392]
  40ba14:	str	x21, [sp, #32]
  40ba18:	cbz	x20, 40baec <wcrtomb@plt+0x6b9c>
  40ba1c:	ldr	w1, [x20, #408]
  40ba20:	cbnz	w1, 40baec <wcrtomb@plt+0x6b9c>
  40ba24:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  40ba28:	ldr	w0, [x0, #408]
  40ba2c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  40ba30:	add	x1, x1, #0xc28
  40ba34:	ldr	w2, [x21, #708]
  40ba38:	bl	4048b0 <__openat_2@plt>
  40ba3c:	mov	w19, w0
  40ba40:	tbz	w0, #31, 40bab0 <wcrtomb@plt+0x6b60>
  40ba44:	bl	404e10 <__errno_location@plt>
  40ba48:	ldr	w0, [x0]
  40ba4c:	neg	w19, w0
  40ba50:	cmp	w0, #0x0
  40ba54:	b.le	40bae8 <wcrtomb@plt+0x6b98>
  40ba58:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  40ba5c:	ldr	w2, [x21, #708]
  40ba60:	ldr	x1, [x20]
  40ba64:	ldr	w0, [x0, #2264]
  40ba68:	bl	4048b0 <__openat_2@plt>
  40ba6c:	mov	w21, w0
  40ba70:	tbnz	w0, #31, 40bae8 <wcrtomb@plt+0x6b98>
  40ba74:	add	x1, sp, #0x30
  40ba78:	mov	w0, w19
  40ba7c:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  40ba80:	cbnz	w0, 40baa4 <wcrtomb@plt+0x6b54>
  40ba84:	ldr	x0, [sp, #56]
  40ba88:	ldr	x1, [x20, #96]
  40ba8c:	cmp	x1, x0
  40ba90:	b.ne	40baa4 <wcrtomb@plt+0x6b54>  // b.any
  40ba94:	ldr	x0, [sp, #48]
  40ba98:	ldr	x1, [x20, #88]
  40ba9c:	cmp	x1, x0
  40baa0:	b.eq	40bafc <wcrtomb@plt+0x6bac>  // b.none
  40baa4:	mov	w0, w21
  40baa8:	bl	4048c0 <close@plt>
  40baac:	b	40bae8 <wcrtomb@plt+0x6b98>
  40bab0:	add	x1, sp, #0x30
  40bab4:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  40bab8:	cbnz	w0, 40badc <wcrtomb@plt+0x6b8c>
  40babc:	ldr	x0, [sp, #56]
  40bac0:	ldr	x1, [x20, #96]
  40bac4:	cmp	x1, x0
  40bac8:	b.ne	40badc <wcrtomb@plt+0x6b8c>  // b.any
  40bacc:	ldr	x0, [sp, #48]
  40bad0:	ldr	x1, [x20, #88]
  40bad4:	cmp	x1, x0
  40bad8:	b.eq	40bae8 <wcrtomb@plt+0x6b98>  // b.none
  40badc:	mov	w0, w19
  40bae0:	mov	w19, #0x2                   	// #2
  40bae4:	bl	4048c0 <close@plt>
  40bae8:	str	w19, [x20, #408]
  40baec:	ldp	x19, x20, [sp, #16]
  40baf0:	ldr	x21, [sp, #32]
  40baf4:	ldp	x29, x30, [sp], #176
  40baf8:	ret
  40bafc:	mov	w19, w21
  40bb00:	b	40bae8 <wcrtomb@plt+0x6b98>
  40bb04:	sub	sp, sp, #0x2c0
  40bb08:	stp	x29, x30, [sp]
  40bb0c:	mov	x29, sp
  40bb10:	stp	x19, x20, [sp, #16]
  40bb14:	stp	x21, x22, [sp, #32]
  40bb18:	mov	x21, x1
  40bb1c:	mov	x22, x2
  40bb20:	stp	x23, x24, [sp, #48]
  40bb24:	mov	x23, x0
  40bb28:	add	x0, sp, #0x118
  40bb2c:	stp	x25, x26, [sp, #64]
  40bb30:	stp	x27, x28, [sp, #80]
  40bb34:	bl	421adc <wcrtomb@plt+0x1cb8c>
  40bb38:	cmp	x23, #0x0
  40bb3c:	cset	w0, eq  // eq = none
  40bb40:	str	w0, [sp, #100]
  40bb44:	str	x23, [sp, #672]
  40bb48:	cbnz	x23, 40bbec <wcrtomb@plt+0x6c9c>
  40bb4c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  40bb50:	ldr	w19, [x0, #2264]
  40bb54:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bb58:	ldrb	w0, [x0, #600]
  40bb5c:	cbnz	w0, 40bbf4 <wcrtomb@plt+0x6ca4>
  40bb60:	adrp	x28, 472000 <argp_program_version_hook@@Base+0x250>
  40bb64:	mov	x1, x22
  40bb68:	add	x0, sp, #0x118
  40bb6c:	bl	417c2c <wcrtomb@plt+0x12cdc>
  40bb70:	ldrb	w2, [x28, #960]
  40bb74:	add	x20, sp, #0x120
  40bb78:	mov	w1, #0x0                   	// #0
  40bb7c:	mov	x0, x22
  40bb80:	bl	425478 <wcrtomb@plt+0x20528>
  40bb84:	mov	x1, x0
  40bb88:	mov	x0, x20
  40bb8c:	bl	417c2c <wcrtomb@plt+0x12cdc>
  40bb90:	mov	x0, x20
  40bb94:	mov	w1, #0x1                   	// #1
  40bb98:	bl	422918 <wcrtomb@plt+0x1d9c8>
  40bb9c:	cmp	x23, #0x0
  40bba0:	cset	w0, ne  // ne = any
  40bba4:	str	w0, [sp, #120]
  40bba8:	cmp	w19, #0x0
  40bbac:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  40bbb0:	b.ne	40bc48 <wcrtomb@plt+0x6cf8>  // b.any
  40bbb4:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  40bbb8:	add	x2, sp, #0x170
  40bbbc:	mov	x1, x21
  40bbc0:	mov	w0, w19
  40bbc4:	ldr	w3, [x20, #568]
  40bbc8:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40bbcc:	str	x20, [sp, #136]
  40bbd0:	cbz	w0, 40bc60 <wcrtomb@plt+0x6d10>
  40bbd4:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  40bbd8:	add	x2, x2, #0xc90
  40bbdc:	ldrb	w1, [sp, #100]
  40bbe0:	mov	x0, x22
  40bbe4:	bl	418cb4 <wcrtomb@plt+0x13d64>
  40bbe8:	b	40bc08 <wcrtomb@plt+0x6cb8>
  40bbec:	ldr	w19, [x23, #408]
  40bbf0:	b	40bb54 <wcrtomb@plt+0x6c04>
  40bbf4:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40bbf8:	mov	x1, x22
  40bbfc:	add	x0, x0, #0x94e
  40bc00:	bl	41f1c0 <wcrtomb@plt+0x1a270>
  40bc04:	cbnz	w0, 40bb60 <wcrtomb@plt+0x6c10>
  40bc08:	cbz	x23, 40bc20 <wcrtomb@plt+0x6cd0>
  40bc0c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bc10:	ldr	x0, [x0, #840]
  40bc14:	cbz	x0, 40bc20 <wcrtomb@plt+0x6cd0>
  40bc18:	mov	x0, x23
  40bc1c:	bl	413bac <wcrtomb@plt+0xec5c>
  40bc20:	add	x0, sp, #0x118
  40bc24:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  40bc28:	ldp	x29, x30, [sp]
  40bc2c:	ldp	x19, x20, [sp, #16]
  40bc30:	ldp	x21, x22, [sp, #32]
  40bc34:	ldp	x23, x24, [sp, #48]
  40bc38:	ldp	x25, x26, [sp, #64]
  40bc3c:	ldp	x27, x28, [sp, #80]
  40bc40:	add	sp, sp, #0x2c0
  40bc44:	ret
  40bc48:	neg	w19, w19
  40bc4c:	bl	404e10 <__errno_location@plt>
  40bc50:	str	w19, [x0]
  40bc54:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  40bc58:	add	x2, x2, #0xbdc
  40bc5c:	b	40bbdc <wcrtomb@plt+0x6c8c>
  40bc60:	ldr	w0, [sp, #384]
  40bc64:	and	w1, w0, #0xf000
  40bc68:	cmp	w1, #0x4, lsl #12
  40bc6c:	b.eq	40bcd0 <wcrtomb@plt+0x6d80>  // b.none
  40bc70:	cmp	w1, #0x8, lsl #12
  40bc74:	b.ne	40be3c <wcrtomb@plt+0x6eec>  // b.any
  40bc78:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  40bc7c:	ldrb	w1, [x1, #544]
  40bc80:	cbz	w1, 40be18 <wcrtomb@plt+0x6ec8>
  40bc84:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bc88:	ldrb	w0, [x0, #705]
  40bc8c:	cbz	w0, 40be10 <wcrtomb@plt+0x6ec0>
  40bc90:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bc94:	ldrb	w0, [x0, #920]
  40bc98:	cbz	w0, 40be10 <wcrtomb@plt+0x6ec0>
  40bc9c:	ldr	x0, [sp, #416]
  40bca0:	mov	x1, #0x200                 	// #512
  40bca4:	ldr	x2, [sp, #432]
  40bca8:	sdiv	x1, x0, x1
  40bcac:	tst	x0, #0x1ff
  40bcb0:	b.eq	40be08 <wcrtomb@plt+0x6eb8>  // b.none
  40bcb4:	add	x0, x0, #0x1ff
  40bcb8:	cmp	x0, #0x3fe
  40bcbc:	cset	w0, hi  // hi = pmore
  40bcc0:	add	x0, x1, w0, sxtw
  40bcc4:	cmp	x2, x0
  40bcc8:	cset	w0, lt  // lt = tstop
  40bccc:	cbz	w0, 40be3c <wcrtomb@plt+0x6eec>
  40bcd0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bcd4:	mov	x1, x21
  40bcd8:	ldr	w2, [x0, #716]
  40bcdc:	mov	x0, x23
  40bce0:	bl	40b8bc <wcrtomb@plt+0x696c>
  40bce4:	mov	w20, w0
  40bce8:	tbnz	w0, #31, 40bc54 <wcrtomb@plt+0x6d04>
  40bcec:	add	x1, sp, #0x170
  40bcf0:	str	w0, [sp, #688]
  40bcf4:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  40bcf8:	cbnz	w0, 40bbd4 <wcrtomb@plt+0x6c84>
  40bcfc:	ldr	x0, [sp, #440]
  40bd00:	str	x0, [sp, #496]
  40bd04:	ldr	x0, [sp, #448]
  40bd08:	str	x0, [sp, #504]
  40bd0c:	ldr	x0, [sp, #456]
  40bd10:	str	x0, [sp, #512]
  40bd14:	ldr	x0, [sp, #464]
  40bd18:	str	x0, [sp, #520]
  40bd1c:	ldr	x0, [sp, #472]
  40bd20:	str	x0, [sp, #104]
  40bd24:	ldr	x0, [sp, #480]
  40bd28:	str	x0, [sp, #112]
  40bd2c:	ldr	x0, [sp, #104]
  40bd30:	str	x0, [sp, #528]
  40bd34:	ldr	x0, [sp, #112]
  40bd38:	str	x0, [sp, #536]
  40bd3c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bd40:	str	x0, [sp, #128]
  40bd44:	ldr	x26, [sp, #416]
  40bd48:	str	x26, [sp, #544]
  40bd4c:	ldrb	w24, [x0, #41]
  40bd50:	cbz	w24, 40bd58 <wcrtomb@plt+0x6e08>
  40bd54:	cbnz	x23, 40be44 <wcrtomb@plt+0x6ef4>
  40bd58:	ldr	w0, [sp, #384]
  40bd5c:	and	w0, w0, #0xf000
  40bd60:	cmp	w0, #0x4, lsl #12
  40bd64:	b.eq	40be44 <wcrtomb@plt+0x6ef4>  // b.none
  40bd68:	add	x0, sp, #0x200
  40bd6c:	adrp	x4, 472000 <argp_program_version_hook@@Base+0x250>
  40bd70:	add	x25, x4, #0x30
  40bd74:	ldp	x0, x1, [x0]
  40bd78:	ldp	x2, x3, [x25]
  40bd7c:	bl	43683c <argp_usage@@Base+0x935c>
  40bd80:	tbz	w0, #31, 40be44 <wcrtomb@plt+0x6ef4>
  40bd84:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bd88:	ldr	w0, [x0, #980]
  40bd8c:	cbz	w0, 40bda4 <wcrtomb@plt+0x6e54>
  40bd90:	add	x0, sp, #0x200
  40bd94:	ldp	x2, x3, [x25]
  40bd98:	ldp	x0, x1, [x0, #16]
  40bd9c:	bl	43683c <argp_usage@@Base+0x935c>
  40bda0:	tbz	w0, #31, 40be44 <wcrtomb@plt+0x6ef4>
  40bda4:	cbnz	w24, 40bc08 <wcrtomb@plt+0x6cb8>
  40bda8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bdac:	ldr	w0, [x0, #652]
  40bdb0:	cbz	w0, 40bc08 <wcrtomb@plt+0x6cb8>
  40bdb4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40bdb8:	ldr	w0, [x0, #480]
  40bdbc:	tbz	w0, #8, 40bc08 <wcrtomb@plt+0x6cb8>
  40bdc0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bdc4:	ldr	x0, [x0, #1016]
  40bdc8:	cbz	x0, 40bdd0 <wcrtomb@plt+0x6e80>
  40bdcc:	blr	x0
  40bdd0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40bdd4:	add	x1, x1, #0x952
  40bdd8:	mov	w2, #0x5                   	// #5
  40bddc:	mov	x0, #0x0                   	// #0
  40bde0:	bl	404d00 <dcgettext@plt>
  40bde4:	mov	x19, x0
  40bde8:	mov	x0, x22
  40bdec:	bl	436084 <argp_usage@@Base+0x8ba4>
  40bdf0:	mov	x3, x0
  40bdf4:	mov	x2, x19
  40bdf8:	mov	w1, #0x0                   	// #0
  40bdfc:	mov	w0, #0x0                   	// #0
  40be00:	bl	4042e0 <error@plt>
  40be04:	b	40bc08 <wcrtomb@plt+0x6cb8>
  40be08:	mov	w0, #0x0                   	// #0
  40be0c:	b	40bcc0 <wcrtomb@plt+0x6d70>
  40be10:	mov	w0, #0x0                   	// #0
  40be14:	b	40bccc <wcrtomb@plt+0x6d7c>
  40be18:	ldr	x1, [sp, #416]
  40be1c:	cbnz	x1, 40be34 <wcrtomb@plt+0x6ee4>
  40be20:	mov	w1, #0x124                 	// #292
  40be24:	and	w0, w0, w1
  40be28:	cmp	w0, w1
  40be2c:	cset	w0, ne  // ne = any
  40be30:	b	40bccc <wcrtomb@plt+0x6d7c>
  40be34:	mov	w0, #0x1                   	// #1
  40be38:	b	40bccc <wcrtomb@plt+0x6d7c>
  40be3c:	mov	w20, #0x0                   	// #0
  40be40:	b	40bcfc <wcrtomb@plt+0x6dac>
  40be44:	add	x0, sp, #0x118
  40be48:	bl	41d7b4 <wcrtomb@plt+0x18864>
  40be4c:	tst	w0, #0xff
  40be50:	b.eq	40be80 <wcrtomb@plt+0x6f30>  // b.none
  40be54:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40be58:	ldr	w0, [x0, #480]
  40be5c:	tbz	w0, #10, 40bc08 <wcrtomb@plt+0x6cb8>
  40be60:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40be64:	ldr	x0, [x0, #1016]
  40be68:	cbz	x0, 40be70 <wcrtomb@plt+0x6f20>
  40be6c:	blr	x0
  40be70:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40be74:	mov	w2, #0x5                   	// #5
  40be78:	add	x1, x1, #0x974
  40be7c:	b	40bddc <wcrtomb@plt+0x6e8c>
  40be80:	ldr	w24, [sp, #384]
  40be84:	and	w24, w24, #0xf000
  40be88:	cmp	w24, #0x4, lsl #12
  40be8c:	b.eq	40c774 <wcrtomb@plt+0x7824>  // b.none
  40be90:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  40be94:	add	x1, x1, #0x7b8
  40be98:	ldr	x0, [x1, #16]
  40be9c:	cbz	x0, 40c764 <wcrtomb@plt+0x7814>
  40bea0:	ldr	w1, [x1, #8]
  40bea4:	ldr	w2, [sp, #388]
  40bea8:	cmp	w2, w1
  40beac:	b.hi	40bebc <wcrtomb@plt+0x6f6c>  // b.pmore
  40beb0:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  40beb4:	ldrb	w1, [x1, #752]
  40beb8:	cbz	w1, 40c764 <wcrtomb@plt+0x7814>
  40bebc:	ldr	x1, [sp, #376]
  40bec0:	str	x1, [sp, #160]
  40bec4:	ldr	x1, [sp, #368]
  40bec8:	str	x1, [sp, #152]
  40becc:	add	x1, sp, #0x98
  40bed0:	bl	4302d8 <argp_usage@@Base+0x2df8>
  40bed4:	mov	x25, x0
  40bed8:	cbz	x0, 40c764 <wcrtomb@plt+0x7814>
  40bedc:	ldrb	w2, [x28, #960]
  40bee0:	add	x0, x0, #0x14
  40bee4:	mov	w1, #0x1                   	// #1
  40bee8:	bl	425478 <wcrtomb@plt+0x20528>
  40beec:	mov	x28, x0
  40bef0:	ldr	w0, [x25, #16]
  40bef4:	cbz	w0, 40bf00 <wcrtomb@plt+0x6fb0>
  40bef8:	sub	w0, w0, #0x1
  40befc:	str	w0, [x25, #16]
  40bf00:	bl	405c2c <wcrtomb@plt+0xcdc>
  40bf04:	mov	x25, x0
  40bf08:	mov	x1, x28
  40bf0c:	add	x0, sp, #0x130
  40bf10:	bl	417c2c <wcrtomb@plt+0x12cdc>
  40bf14:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bf18:	ldr	w0, [x0, #824]
  40bf1c:	cmp	w0, #0x2
  40bf20:	mov	x0, x28
  40bf24:	cset	x27, ne  // ne = any
  40bf28:	add	x27, x27, #0x63
  40bf2c:	bl	404280 <strlen@plt>
  40bf30:	cmp	x0, x27
  40bf34:	b.ls	40bf40 <wcrtomb@plt+0x6ff0>  // b.plast
  40bf38:	add	x0, sp, #0x118
  40bf3c:	bl	40b4cc <wcrtomb@plt+0x657c>
  40bf40:	add	x0, sp, #0x118
  40bf44:	str	xzr, [sp, #416]
  40bf48:	bl	40ac90 <wcrtomb@plt+0x5d40>
  40bf4c:	mov	x5, x0
  40bf50:	cbz	x0, 40c764 <wcrtomb@plt+0x7814>
  40bf54:	mov	x1, x28
  40bf58:	add	x0, x0, #0x9d
  40bf5c:	mov	x2, #0x64                  	// #100
  40bf60:	bl	409e54 <wcrtomb@plt+0x4f04>
  40bf64:	mov	w0, #0x31                  	// #49
  40bf68:	strb	w0, [x5, #156]
  40bf6c:	mov	x2, x25
  40bf70:	add	x0, sp, #0x118
  40bf74:	mov	x1, x5
  40bf78:	bl	40aacc <wcrtomb@plt+0x5b7c>
  40bf7c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bf80:	ldrb	w0, [x0, #752]
  40bf84:	cbz	w0, 40bc08 <wcrtomb@plt+0x6cb8>
  40bf88:	ldr	x0, [sp, #280]
  40bf8c:	mov	w1, #0x0                   	// #0
  40bf90:	bl	422bf0 <wcrtomb@plt+0x1dca0>
  40bf94:	b	40bc08 <wcrtomb@plt+0x6cb8>
  40bf98:	add	x0, sp, #0x118
  40bf9c:	bl	40b7c0 <wcrtomb@plt+0x6870>
  40bfa0:	mov	x20, x0
  40bfa4:	cbnz	x0, 40bff8 <wcrtomb@plt+0x70a8>
  40bfa8:	ldr	x0, [sp, #280]
  40bfac:	bl	418c48 <wcrtomb@plt+0x13cf8>
  40bfb0:	mov	w0, #0x0                   	// #0
  40bfb4:	ldr	w20, [sp, #688]
  40bfb8:	cbnz	x23, 40c374 <wcrtomb@plt+0x7424>
  40bfbc:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x36380>
  40bfc0:	ldr	w19, [x1, #2264]
  40bfc4:	cbnz	w0, 40c400 <wcrtomb@plt+0x74b0>
  40bfc8:	mov	w28, #0x0                   	// #0
  40bfcc:	add	x0, sp, #0x118
  40bfd0:	bl	421ae8 <wcrtomb@plt+0x1cb98>
  40bfd4:	tst	w0, #0xff
  40bfd8:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  40bfdc:	b.eq	40bc08 <wcrtomb@plt+0x6cb8>  // b.none
  40bfe0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40bfe4:	ldrb	w0, [x0, #752]
  40bfe8:	cbz	w0, 40bc08 <wcrtomb@plt+0x6cb8>
  40bfec:	ldrb	w1, [sp, #124]
  40bff0:	mov	x0, x22
  40bff4:	b	40bf90 <wcrtomb@plt+0x7040>
  40bff8:	ldr	x28, [sp, #672]
  40bffc:	bl	405c2c <wcrtomb@plt+0xcdc>
  40c000:	mov	x19, x0
  40c004:	add	x0, sp, #0x118
  40c008:	str	xzr, [sp, #416]
  40c00c:	bl	40ac90 <wcrtomb@plt+0x5d40>
  40c010:	mov	x27, x0
  40c014:	cbz	x0, 40c08c <wcrtomb@plt+0x713c>
  40c018:	add	x0, sp, #0x118
  40c01c:	bl	40d884 <wcrtomb@plt+0x8934>
  40c020:	ldr	x0, [sp, #128]
  40c024:	ldrb	w0, [x0, #41]
  40c028:	cbz	w0, 40c0a4 <wcrtomb@plt+0x7154>
  40c02c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  40c030:	ldr	w1, [x1, #824]
  40c034:	cmp	w1, #0x4
  40c038:	b.eq	40c0a4 <wcrtomb@plt+0x7154>  // b.none
  40c03c:	mov	w0, #0x44                  	// #68
  40c040:	strb	w0, [x27, #156]
  40c044:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  40c048:	ldr	x0, [x25, #24]
  40c04c:	ldr	x0, [x0, #56]
  40c050:	cbz	x0, 40c0c0 <wcrtomb@plt+0x7170>
  40c054:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  40c058:	ldr	w2, [x2, #824]
  40c05c:	cmp	w2, #0x4
  40c060:	b.ne	40c150 <wcrtomb@plt+0x7200>  // b.any
  40c064:	bl	4140b0 <wcrtomb@plt+0xf160>
  40c068:	mov	x2, x0
  40c06c:	add	x1, sp, #0x118
  40c070:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40c074:	add	x0, x0, #0x9ad
  40c078:	bl	4122e8 <wcrtomb@plt+0xd398>
  40c07c:	mov	x2, x19
  40c080:	mov	x1, x27
  40c084:	add	x0, sp, #0x118
  40c088:	bl	40aacc <wcrtomb@plt+0x5b7c>
  40c08c:	add	x0, sp, #0x118
  40c090:	bl	40ba04 <wcrtomb@plt+0x6ab4>
  40c094:	mov	x0, x20
  40c098:	bl	404ae0 <free@plt>
  40c09c:	mov	w0, #0x1                   	// #1
  40c0a0:	b	40bfb4 <wcrtomb@plt+0x7064>
  40c0a4:	mov	w1, #0x35                  	// #53
  40c0a8:	strb	w1, [x27, #156]
  40c0ac:	cbnz	w0, 40c044 <wcrtomb@plt+0x70f4>
  40c0b0:	mov	x2, x19
  40c0b4:	mov	x1, x27
  40c0b8:	add	x0, sp, #0x118
  40c0bc:	bl	40aacc <wcrtomb@plt+0x5b7c>
  40c0c0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c0c4:	ldr	w0, [x0, #684]
  40c0c8:	cbz	w0, 40c08c <wcrtomb@plt+0x713c>
  40c0cc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c0d0:	ldrb	w0, [x0, #93]
  40c0d4:	cbz	w0, 40c20c <wcrtomb@plt+0x72bc>
  40c0d8:	cbz	x28, 40c20c <wcrtomb@plt+0x72bc>
  40c0dc:	ldr	x0, [sp, #672]
  40c0e0:	ldr	x1, [x0, #88]
  40c0e4:	ldr	x0, [sp, #368]
  40c0e8:	cmp	x1, x0
  40c0ec:	b.eq	40c20c <wcrtomb@plt+0x72bc>  // b.none
  40c0f0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c0f4:	ldr	w0, [x0, #652]
  40c0f8:	cbz	w0, 40c08c <wcrtomb@plt+0x713c>
  40c0fc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40c100:	ldr	w0, [x0, #480]
  40c104:	tbz	w0, #18, 40c08c <wcrtomb@plt+0x713c>
  40c108:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c10c:	ldr	x0, [x0, #1016]
  40c110:	cbz	x0, 40c118 <wcrtomb@plt+0x71c8>
  40c114:	blr	x0
  40c118:	mov	w2, #0x5                   	// #5
  40c11c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40c120:	mov	x0, #0x0                   	// #0
  40c124:	add	x1, x1, #0x9b9
  40c128:	bl	404d00 <dcgettext@plt>
  40c12c:	mov	x19, x0
  40c130:	ldr	x0, [sp, #280]
  40c134:	bl	436084 <argp_usage@@Base+0x8ba4>
  40c138:	mov	x3, x0
  40c13c:	mov	x2, x19
  40c140:	mov	w1, #0x0                   	// #0
  40c144:	mov	w0, #0x0                   	// #0
  40c148:	bl	4042e0 <error@plt>
  40c14c:	b	40c08c <wcrtomb@plt+0x713c>
  40c150:	bl	405c2c <wcrtomb@plt+0xcdc>
  40c154:	mov	x28, x0
  40c158:	ldr	x0, [x25, #24]
  40c15c:	ldr	x0, [x0, #56]
  40c160:	bl	4140b0 <wcrtomb@plt+0xf160>
  40c164:	mov	x19, x0
  40c168:	bl	413b00 <wcrtomb@plt+0xebb0>
  40c16c:	mov	x25, x0
  40c170:	add	x1, x27, #0x7c
  40c174:	mov	x2, #0xc                   	// #12
  40c178:	bl	40a884 <wcrtomb@plt+0x5934>
  40c17c:	mov	x1, x27
  40c180:	mov	x2, x28
  40c184:	add	x0, sp, #0x118
  40c188:	bl	40aacc <wcrtomb@plt+0x5b7c>
  40c18c:	ldr	x0, [sp, #288]
  40c190:	mov	x2, x25
  40c194:	mov	x1, x25
  40c198:	mov	x27, #0x200                 	// #512
  40c19c:	bl	405808 <wcrtomb@plt+0x8b8>
  40c1a0:	cmp	x25, #0x0
  40c1a4:	b.le	40c08c <wcrtomb@plt+0x713c>
  40c1a8:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40c1ac:	mov	x28, x0
  40c1b0:	bl	405da8 <wcrtomb@plt+0xe58>
  40c1b4:	mov	x2, x0
  40c1b8:	cmp	x0, x25
  40c1bc:	b.ls	40c1dc <wcrtomb@plt+0x728c>  // b.plast
  40c1c0:	ands	x2, x25, #0x1ff
  40c1c4:	b.eq	40c1d8 <wcrtomb@plt+0x7288>  // b.none
  40c1c8:	sub	x2, x27, x2
  40c1cc:	add	x0, x28, x25
  40c1d0:	mov	w1, #0x0                   	// #0
  40c1d4:	bl	404700 <memset@plt>
  40c1d8:	mov	x2, x25
  40c1dc:	mov	x1, x19
  40c1e0:	mov	x0, x28
  40c1e4:	str	x2, [sp, #128]
  40c1e8:	bl	404200 <memcpy@plt>
  40c1ec:	ldr	x2, [sp, #128]
  40c1f0:	sub	x0, x2, #0x1
  40c1f4:	sub	x25, x25, x2
  40c1f8:	and	x0, x0, #0xfffffffffffffe00
  40c1fc:	add	x19, x19, x2
  40c200:	add	x0, x28, x0
  40c204:	bl	405c98 <wcrtomb@plt+0xd48>
  40c208:	b	40c1a0 <wcrtomb@plt+0x7250>
  40c20c:	add	x1, sp, #0x98
  40c210:	add	x0, sp, #0x118
  40c214:	bl	40b964 <wcrtomb@plt+0x6a14>
  40c218:	cmp	w0, #0x1
  40c21c:	b.eq	40c2c4 <wcrtomb@plt+0x7374>  // b.none
  40c220:	cmp	w0, #0x2
  40c224:	b.eq	40c344 <wcrtomb@plt+0x73f4>  // b.none
  40c228:	cbnz	w0, 40c08c <wcrtomb@plt+0x713c>
  40c22c:	ldr	x0, [sp, #280]
  40c230:	mov	x25, x20
  40c234:	bl	436f10 <argp_usage@@Base+0x9a30>
  40c238:	mov	x27, x0
  40c23c:	bl	404280 <strlen@plt>
  40c240:	mov	x28, x0
  40c244:	str	x0, [sp, #128]
  40c248:	mov	x0, x25
  40c24c:	bl	404280 <strlen@plt>
  40c250:	mov	x19, x0
  40c254:	cbnz	x0, 40c264 <wcrtomb@plt+0x7314>
  40c258:	mov	x0, x27
  40c25c:	bl	404ae0 <free@plt>
  40c260:	b	40c08c <wcrtomb@plt+0x713c>
  40c264:	ldr	x0, [sp, #128]
  40c268:	add	x4, x28, x19
  40c26c:	cmp	x4, x0
  40c270:	b.ls	40c288 <wcrtomb@plt+0x7338>  // b.plast
  40c274:	mov	x0, x27
  40c278:	add	x1, x4, #0x1
  40c27c:	str	x4, [sp, #128]
  40c280:	bl	436da4 <argp_usage@@Base+0x98c4>
  40c284:	mov	x27, x0
  40c288:	mov	x1, x25
  40c28c:	add	x0, x27, x28
  40c290:	bl	404c40 <strcpy@plt>
  40c294:	add	x1, sp, #0x118
  40c298:	mov	x0, x27
  40c29c:	bl	40dac4 <wcrtomb@plt+0x8b74>
  40c2a0:	tst	w0, #0xff
  40c2a4:	b.ne	40c2b8 <wcrtomb@plt+0x7368>  // b.any
  40c2a8:	mov	x2, x27
  40c2ac:	mov	x1, x25
  40c2b0:	add	x0, sp, #0x118
  40c2b4:	bl	40bb04 <wcrtomb@plt+0x6bb4>
  40c2b8:	add	x19, x19, #0x1
  40c2bc:	add	x25, x25, x19
  40c2c0:	b	40c248 <wcrtomb@plt+0x72f8>
  40c2c4:	ldr	x28, [sp, #152]
  40c2c8:	mov	w2, #0x5                   	// #5
  40c2cc:	ldr	x19, [sp, #280]
  40c2d0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40c2d4:	mov	x0, #0x0                   	// #0
  40c2d8:	add	x1, x1, #0x9eb
  40c2dc:	bl	404d00 <dcgettext@plt>
  40c2e0:	mov	x2, x0
  40c2e4:	mov	x1, x28
  40c2e8:	mov	x0, x19
  40c2ec:	bl	40a790 <wcrtomb@plt+0x5840>
  40c2f0:	ldr	x0, [sp, #280]
  40c2f4:	bl	404280 <strlen@plt>
  40c2f8:	mov	x19, x0
  40c2fc:	ldr	x0, [sp, #152]
  40c300:	bl	404280 <strlen@plt>
  40c304:	add	x0, x19, x0
  40c308:	add	x0, x0, #0x1
  40c30c:	bl	436d44 <argp_usage@@Base+0x9864>
  40c310:	ldr	x1, [sp, #280]
  40c314:	mov	x19, x0
  40c318:	bl	404c40 <strcpy@plt>
  40c31c:	ldr	x28, [sp, #152]
  40c320:	mov	x0, x19
  40c324:	mov	x1, x28
  40c328:	bl	4046e0 <strcat@plt>
  40c32c:	add	x0, sp, #0x118
  40c330:	mov	x2, x19
  40c334:	mov	x1, x28
  40c338:	bl	40bb04 <wcrtomb@plt+0x6bb4>
  40c33c:	mov	x0, x19
  40c340:	b	40c25c <wcrtomb@plt+0x730c>
  40c344:	ldr	x28, [sp, #152]
  40c348:	mov	w2, #0x5                   	// #5
  40c34c:	ldr	x19, [sp, #280]
  40c350:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40c354:	mov	x0, #0x0                   	// #0
  40c358:	add	x1, x1, #0x9eb
  40c35c:	bl	404d00 <dcgettext@plt>
  40c360:	mov	x2, x0
  40c364:	mov	x1, x28
  40c368:	mov	x0, x19
  40c36c:	bl	40a790 <wcrtomb@plt+0x5840>
  40c370:	b	40c08c <wcrtomb@plt+0x713c>
  40c374:	ldr	w19, [x23, #408]
  40c378:	b	40bfc4 <wcrtomb@plt+0x7074>
  40c37c:	cbz	w20, 40c3d4 <wcrtomb@plt+0x7484>
  40c380:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c384:	ldrb	w0, [x0, #920]
  40c388:	cbz	w0, 40c3d4 <wcrtomb@plt+0x7484>
  40c38c:	ldr	x0, [sp, #416]
  40c390:	mov	x1, #0x200                 	// #512
  40c394:	ldr	x2, [sp, #432]
  40c398:	sdiv	x1, x0, x1
  40c39c:	tst	x0, #0x1ff
  40c3a0:	b.eq	40c3f8 <wcrtomb@plt+0x74a8>  // b.none
  40c3a4:	add	x0, x0, #0x1ff
  40c3a8:	cmp	x0, #0x3fe
  40c3ac:	cset	w0, hi  // hi = pmore
  40c3b0:	add	x0, x1, w0, sxtw
  40c3b4:	cmp	x2, x0
  40c3b8:	b.ge	40c3d4 <wcrtomb@plt+0x7484>  // b.tcont
  40c3bc:	add	x1, sp, #0x118
  40c3c0:	mov	w0, w20
  40c3c4:	bl	41ccf4 <wcrtomb@plt+0x17da4>
  40c3c8:	mov	w28, w0
  40c3cc:	cmp	w0, #0x3
  40c3d0:	b.ne	40c81c <wcrtomb@plt+0x78cc>  // b.any
  40c3d4:	add	x1, sp, #0x118
  40c3d8:	mov	w0, w20
  40c3dc:	bl	40b5e4 <wcrtomb@plt+0x6694>
  40c3e0:	mov	w28, w0
  40c3e4:	cmp	w0, #0x1
  40c3e8:	b.ls	40c824 <wcrtomb@plt+0x78d4>  // b.plast
  40c3ec:	cmp	w0, #0x3
  40c3f0:	b.ne	40bfc8 <wcrtomb@plt+0x7078>  // b.any
  40c3f4:	bl	404970 <abort@plt>
  40c3f8:	mov	w0, #0x0                   	// #0
  40c3fc:	b	40c3b0 <wcrtomb@plt+0x7460>
  40c400:	cmp	w20, #0x0
  40c404:	b.ge	40c42c <wcrtomb@plt+0x74dc>  // b.tcont
  40c408:	neg	w20, w20
  40c40c:	bl	404e10 <__errno_location@plt>
  40c410:	str	w20, [x0]
  40c414:	ldrb	w1, [sp, #100]
  40c418:	mov	x0, x22
  40c41c:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  40c420:	add	x2, x2, #0xc90
  40c424:	bl	418cb4 <wcrtomb@plt+0x13d64>
  40c428:	b	40bfc8 <wcrtomb@plt+0x7078>
  40c42c:	b.ne	40c450 <wcrtomb@plt+0x7500>  // b.any
  40c430:	ldr	w0, [sp, #120]
  40c434:	cmp	w19, #0x0
  40c438:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  40c43c:	b.eq	40c834 <wcrtomb@plt+0x78e4>  // b.none
  40c440:	neg	w19, w19
  40c444:	bl	404e10 <__errno_location@plt>
  40c448:	str	w19, [x0]
  40c44c:	b	40c414 <wcrtomb@plt+0x74c4>
  40c450:	add	x1, sp, #0x98
  40c454:	mov	w0, w20
  40c458:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  40c45c:	cmp	w0, #0x0
  40c460:	cset	w28, eq  // eq = none
  40c464:	b	40c858 <wcrtomb@plt+0x7908>
  40c468:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c46c:	ldr	w0, [x0, #564]
  40c470:	cmp	w0, #0x1
  40c474:	b.ne	40bfcc <wcrtomb@plt+0x707c>  // b.any
  40c478:	cbz	w20, 40bfcc <wcrtomb@plt+0x707c>
  40c47c:	ldr	w0, [sp, #124]
  40c480:	cmp	x26, #0x0
  40c484:	csinc	w24, w0, wzr, eq  // eq = none
  40c488:	cbz	w24, 40bfcc <wcrtomb@plt+0x707c>
  40c48c:	ldp	x3, x4, [sp, #496]
  40c490:	mov	x2, x21
  40c494:	mov	w1, w19
  40c498:	mov	w0, w20
  40c49c:	bl	418a0c <wcrtomb@plt+0x13abc>
  40c4a0:	cbz	w0, 40bfcc <wcrtomb@plt+0x707c>
  40c4a4:	mov	x0, x22
  40c4a8:	mov	w28, w24
  40c4ac:	bl	42532c <wcrtomb@plt+0x203dc>
  40c4b0:	b	40bfcc <wcrtomb@plt+0x707c>
  40c4b4:	cmp	w0, #0xa, lsl #12
  40c4b8:	b.ne	40c5bc <wcrtomb@plt+0x766c>  // b.any
  40c4bc:	ldr	x2, [sp, #416]
  40c4c0:	mov	x1, x21
  40c4c4:	mov	w0, w19
  40c4c8:	bl	42a000 <wcrtomb@plt+0x250b0>
  40c4cc:	str	x0, [sp, #304]
  40c4d0:	cbnz	x0, 40c4f4 <wcrtomb@plt+0x75a4>
  40c4d4:	bl	404e10 <__errno_location@plt>
  40c4d8:	ldr	w0, [x0]
  40c4dc:	cmp	w0, #0xc
  40c4e0:	b.ne	40c4e8 <wcrtomb@plt+0x7598>  // b.any
  40c4e4:	bl	40d4bc <wcrtomb@plt+0x856c>
  40c4e8:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  40c4ec:	add	x2, x2, #0xc24
  40c4f0:	b	40bbdc <wcrtomb@plt+0x6c8c>
  40c4f4:	mov	w1, #0x4                   	// #4
  40c4f8:	add	x0, sp, #0x130
  40c4fc:	bl	422918 <wcrtomb@plt+0x1d9c8>
  40c500:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c504:	ldr	w0, [x0, #824]
  40c508:	cmp	w0, #0x2
  40c50c:	ldr	x0, [sp, #304]
  40c510:	cset	x20, ne  // ne = any
  40c514:	add	x20, x20, #0x63
  40c518:	bl	404280 <strlen@plt>
  40c51c:	cmp	x0, x20
  40c520:	b.ls	40c52c <wcrtomb@plt+0x75dc>  // b.plast
  40c524:	add	x0, sp, #0x118
  40c528:	bl	40b4cc <wcrtomb@plt+0x657c>
  40c52c:	mov	w0, w19
  40c530:	add	x2, sp, #0x118
  40c534:	mov	x1, x21
  40c538:	mov	w3, #0x0                   	// #0
  40c53c:	bl	4244ec <wcrtomb@plt+0x1f59c>
  40c540:	add	x2, sp, #0x118
  40c544:	mov	x1, x21
  40c548:	mov	w0, w19
  40c54c:	mov	w3, #0x0                   	// #0
  40c550:	bl	4242d0 <wcrtomb@plt+0x1f380>
  40c554:	bl	405c2c <wcrtomb@plt+0xcdc>
  40c558:	mov	x19, x0
  40c55c:	add	x0, sp, #0x118
  40c560:	str	xzr, [sp, #416]
  40c564:	bl	40ac90 <wcrtomb@plt+0x5d40>
  40c568:	mov	x5, x0
  40c56c:	cbz	x0, 40bc08 <wcrtomb@plt+0x6cb8>
  40c570:	ldr	x1, [sp, #304]
  40c574:	add	x0, x0, #0x9d
  40c578:	mov	x2, #0x64                  	// #100
  40c57c:	bl	409e54 <wcrtomb@plt+0x4f04>
  40c580:	mov	x1, x5
  40c584:	mov	w0, #0x32                  	// #50
  40c588:	strb	w0, [x5, #156]
  40c58c:	mov	x2, x19
  40c590:	add	x0, sp, #0x118
  40c594:	bl	40aacc <wcrtomb@plt+0x5b7c>
  40c598:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c59c:	ldrb	w0, [x0, #752]
  40c5a0:	cbz	w0, 40c5b0 <wcrtomb@plt+0x7660>
  40c5a4:	mov	x0, x22
  40c5a8:	mov	w1, #0x0                   	// #0
  40c5ac:	bl	422bf0 <wcrtomb@plt+0x1dca0>
  40c5b0:	add	x0, sp, #0x118
  40c5b4:	bl	40a0cc <wcrtomb@plt+0x517c>
  40c5b8:	b	40bc08 <wcrtomb@plt+0x6cb8>
  40c5bc:	cmp	w0, #0x2, lsl #12
  40c5c0:	b.ne	40c684 <wcrtomb@plt+0x7734>  // b.any
  40c5c4:	mov	w4, #0x1                   	// #1
  40c5c8:	add	x2, sp, #0x118
  40c5cc:	mov	x1, x21
  40c5d0:	mov	w0, w19
  40c5d4:	mov	w3, #0x0                   	// #0
  40c5d8:	mov	w20, #0x33                  	// #51
  40c5dc:	bl	423ffc <wcrtomb@plt+0x1f0ac>
  40c5e0:	add	x2, sp, #0x118
  40c5e4:	mov	x1, x21
  40c5e8:	mov	w0, w19
  40c5ec:	mov	w3, #0x0                   	// #0
  40c5f0:	bl	4244ec <wcrtomb@plt+0x1f59c>
  40c5f4:	add	x2, sp, #0x118
  40c5f8:	mov	x1, x21
  40c5fc:	mov	w0, w19
  40c600:	mov	w3, #0x0                   	// #0
  40c604:	bl	4242d0 <wcrtomb@plt+0x1f380>
  40c608:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c60c:	ldr	w0, [x0, #824]
  40c610:	cmp	w0, #0x1
  40c614:	b.eq	40c758 <wcrtomb@plt+0x7808>  // b.none
  40c618:	bl	405c2c <wcrtomb@plt+0xcdc>
  40c61c:	mov	x21, x0
  40c620:	add	x0, sp, #0x118
  40c624:	str	xzr, [sp, #416]
  40c628:	bl	40ac90 <wcrtomb@plt+0x5d40>
  40c62c:	mov	x19, x0
  40c630:	cbz	x0, 40bc08 <wcrtomb@plt+0x6cb8>
  40c634:	strb	w20, [x0, #156]
  40c638:	cmp	w20, #0x36
  40c63c:	b.eq	40c660 <wcrtomb@plt+0x7710>  // b.none
  40c640:	ldr	x0, [sp, #400]
  40c644:	bl	4049b0 <gnu_dev_major@plt>
  40c648:	add	x1, x19, #0x149
  40c64c:	bl	40a704 <wcrtomb@plt+0x57b4>
  40c650:	ldr	x0, [sp, #400]
  40c654:	bl	404c30 <gnu_dev_minor@plt>
  40c658:	add	x1, x19, #0x151
  40c65c:	bl	40a6e0 <wcrtomb@plt+0x5790>
  40c660:	add	x0, sp, #0x118
  40c664:	mov	x2, x21
  40c668:	mov	x1, x19
  40c66c:	bl	40aacc <wcrtomb@plt+0x5b7c>
  40c670:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c674:	ldrb	w0, [x0, #752]
  40c678:	cbz	w0, 40bc08 <wcrtomb@plt+0x6cb8>
  40c67c:	mov	w1, #0x0                   	// #0
  40c680:	b	40bff0 <wcrtomb@plt+0x70a0>
  40c684:	cmp	w0, #0x6, lsl #12
  40c688:	b.ne	40c6d4 <wcrtomb@plt+0x7784>  // b.any
  40c68c:	mov	w4, #0x1                   	// #1
  40c690:	add	x2, sp, #0x118
  40c694:	mov	x1, x21
  40c698:	mov	w0, w19
  40c69c:	mov	w3, #0x0                   	// #0
  40c6a0:	bl	423ffc <wcrtomb@plt+0x1f0ac>
  40c6a4:	add	x2, sp, #0x118
  40c6a8:	mov	x1, x21
  40c6ac:	mov	w0, w19
  40c6b0:	mov	w3, #0x0                   	// #0
  40c6b4:	bl	4244ec <wcrtomb@plt+0x1f59c>
  40c6b8:	mov	w20, #0x34                  	// #52
  40c6bc:	add	x2, sp, #0x118
  40c6c0:	mov	x1, x21
  40c6c4:	mov	w0, w19
  40c6c8:	mov	w3, #0x0                   	// #0
  40c6cc:	bl	4242d0 <wcrtomb@plt+0x1f380>
  40c6d0:	b	40c608 <wcrtomb@plt+0x76b8>
  40c6d4:	cmp	w0, #0x1, lsl #12
  40c6d8:	b.ne	40c724 <wcrtomb@plt+0x77d4>  // b.any
  40c6dc:	mov	w4, #0x1                   	// #1
  40c6e0:	add	x2, sp, #0x118
  40c6e4:	mov	x1, x21
  40c6e8:	mov	w0, w19
  40c6ec:	mov	w3, #0x0                   	// #0
  40c6f0:	bl	423ffc <wcrtomb@plt+0x1f0ac>
  40c6f4:	add	x2, sp, #0x118
  40c6f8:	mov	x1, x21
  40c6fc:	mov	w0, w19
  40c700:	mov	w3, #0x0                   	// #0
  40c704:	bl	4244ec <wcrtomb@plt+0x1f59c>
  40c708:	mov	w20, #0x36                  	// #54
  40c70c:	add	x2, sp, #0x118
  40c710:	mov	x1, x21
  40c714:	mov	w0, w19
  40c718:	mov	w3, #0x0                   	// #0
  40c71c:	bl	4242d0 <wcrtomb@plt+0x1f380>
  40c720:	b	40c608 <wcrtomb@plt+0x76b8>
  40c724:	cmp	w0, #0xc, lsl #12
  40c728:	b.ne	40c758 <wcrtomb@plt+0x7808>  // b.any
  40c72c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40c730:	ldr	w0, [x0, #480]
  40c734:	tbz	w0, #5, 40bc08 <wcrtomb@plt+0x6cb8>
  40c738:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c73c:	ldr	x0, [x0, #1016]
  40c740:	cbz	x0, 40c748 <wcrtomb@plt+0x77f8>
  40c744:	blr	x0
  40c748:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40c74c:	mov	w2, #0x5                   	// #5
  40c750:	add	x1, x1, #0xa1e
  40c754:	b	40bddc <wcrtomb@plt+0x6e8c>
  40c758:	mov	x0, x22
  40c75c:	bl	40a044 <wcrtomb@plt+0x50f4>
  40c760:	b	40bc08 <wcrtomb@plt+0x6cb8>
  40c764:	ldr	w0, [sp, #384]
  40c768:	and	w0, w0, #0xf000
  40c76c:	cmp	w0, #0x8, lsl #12
  40c770:	b.ne	40c4b4 <wcrtomb@plt+0x7564>  // b.any
  40c774:	cmp	w24, #0x4, lsl #12
  40c778:	add	x2, sp, #0x118
  40c77c:	cset	w4, ne  // ne = any
  40c780:	cset	w0, eq  // eq = none
  40c784:	mov	x1, x21
  40c788:	mov	w3, #0x0                   	// #0
  40c78c:	str	w0, [sp, #124]
  40c790:	mov	w0, w19
  40c794:	bl	423ffc <wcrtomb@plt+0x1f0ac>
  40c798:	mov	w3, w20
  40c79c:	add	x2, sp, #0x118
  40c7a0:	mov	x1, x21
  40c7a4:	mov	w0, w19
  40c7a8:	bl	4244ec <wcrtomb@plt+0x1f59c>
  40c7ac:	mov	w3, w20
  40c7b0:	add	x2, sp, #0x118
  40c7b4:	mov	x1, x21
  40c7b8:	mov	w0, w19
  40c7bc:	bl	4242d0 <wcrtomb@plt+0x1f380>
  40c7c0:	cmp	w24, #0x4, lsl #12
  40c7c4:	b.ne	40c37c <wcrtomb@plt+0x742c>  // b.any
  40c7c8:	add	x0, sp, #0x118
  40c7cc:	bl	409fc8 <wcrtomb@plt+0x5078>
  40c7d0:	add	x0, sp, #0x120
  40c7d4:	bl	409fc8 <wcrtomb@plt+0x5078>
  40c7d8:	add	x1, sp, #0x90
  40c7dc:	add	x0, sp, #0x118
  40c7e0:	bl	40b964 <wcrtomb@plt+0x6a14>
  40c7e4:	cmp	w0, #0x3
  40c7e8:	b.ne	40bf98 <wcrtomb@plt+0x7048>  // b.any
  40c7ec:	ldr	x20, [sp, #144]
  40c7f0:	mov	w2, #0x5                   	// #5
  40c7f4:	ldr	x19, [sp, #280]
  40c7f8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40c7fc:	mov	x0, #0x0                   	// #0
  40c800:	add	x1, x1, #0x998
  40c804:	bl	404d00 <dcgettext@plt>
  40c808:	mov	x2, x0
  40c80c:	mov	x1, x20
  40c810:	mov	x0, x19
  40c814:	bl	40a790 <wcrtomb@plt+0x5840>
  40c818:	b	40bc08 <wcrtomb@plt+0x6cb8>
  40c81c:	cmp	w0, #0x1
  40c820:	b.hi	40bfc8 <wcrtomb@plt+0x7078>  // b.pmore
  40c824:	add	x0, sp, #0x118
  40c828:	bl	40a0cc <wcrtomb@plt+0x517c>
  40c82c:	cbnz	w28, 40bfc8 <wcrtomb@plt+0x7078>
  40c830:	cbnz	w20, 40c450 <wcrtomb@plt+0x7500>
  40c834:	ldr	x0, [sp, #136]
  40c838:	add	x2, sp, #0x98
  40c83c:	mov	x1, x21
  40c840:	mov	w20, #0x0                   	// #0
  40c844:	ldr	w3, [x0, #568]
  40c848:	mov	w0, w19
  40c84c:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40c850:	cmp	w0, #0x0
  40c854:	cset	w28, eq  // eq = none
  40c858:	cbz	w28, 40c414 <wcrtomb@plt+0x74c4>
  40c85c:	ldp	x2, x3, [sp, #104]
  40c860:	ldp	x0, x1, [sp, #256]
  40c864:	bl	43683c <argp_usage@@Base+0x935c>
  40c868:	cbz	w0, 40c880 <wcrtomb@plt+0x7930>
  40c86c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c870:	ldrb	w0, [x0, #752]
  40c874:	cbz	w0, 40c88c <wcrtomb@plt+0x793c>
  40c878:	cmp	w24, #0x4, lsl #12
  40c87c:	b.ne	40c88c <wcrtomb@plt+0x793c>  // b.any
  40c880:	ldr	x0, [sp, #200]
  40c884:	cmp	x26, x0
  40c888:	b.ge	40c468 <wcrtomb@plt+0x7518>  // b.tcont
  40c88c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40c890:	ldr	w0, [x0, #480]
  40c894:	tbz	w0, #4, 40c8dc <wcrtomb@plt+0x798c>
  40c898:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c89c:	ldr	x0, [x0, #1016]
  40c8a0:	cbz	x0, 40c8a8 <wcrtomb@plt+0x7958>
  40c8a4:	blr	x0
  40c8a8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40c8ac:	add	x1, x1, #0x9ff
  40c8b0:	mov	w2, #0x5                   	// #5
  40c8b4:	mov	x0, #0x0                   	// #0
  40c8b8:	bl	404d00 <dcgettext@plt>
  40c8bc:	mov	x19, x0
  40c8c0:	mov	x0, x22
  40c8c4:	bl	436084 <argp_usage@@Base+0x8ba4>
  40c8c8:	mov	x2, x19
  40c8cc:	mov	x3, x0
  40c8d0:	mov	w1, #0x0                   	// #0
  40c8d4:	mov	w0, #0x0                   	// #0
  40c8d8:	bl	4042e0 <error@plt>
  40c8dc:	mov	w0, #0x1                   	// #1
  40c8e0:	bl	421c04 <wcrtomb@plt+0x1ccb4>
  40c8e4:	b	40bfcc <wcrtomb@plt+0x707c>
  40c8e8:	sub	sp, sp, #0x220
  40c8ec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c8f0:	stp	x29, x30, [sp]
  40c8f4:	mov	x29, sp
  40c8f8:	ldr	x0, [x0, #16]
  40c8fc:	stp	x19, x20, [sp, #16]
  40c900:	stp	x21, x22, [sp, #32]
  40c904:	cmp	x0, #0x1
  40c908:	stp	x23, x24, [sp, #48]
  40c90c:	stp	x25, x26, [sp, #64]
  40c910:	stp	x27, x28, [sp, #80]
  40c914:	b.hi	40c9c0 <wcrtomb@plt+0x7a70>  // b.pmore
  40c918:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c91c:	ldrb	w0, [x0, #584]
  40c920:	eor	w0, w0, #0x1
  40c924:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  40c928:	str	w0, [x1, #1984]
  40c92c:	mov	w0, #0x1                   	// #1
  40c930:	bl	407d98 <wcrtomb@plt+0x2e48>
  40c934:	bl	405898 <wcrtomb@plt+0x948>
  40c938:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c93c:	ldrb	w0, [x0, #41]
  40c940:	cbz	w0, 40cb90 <wcrtomb@plt+0x7c40>
  40c944:	mov	x0, #0x3e8                 	// #1000
  40c948:	bl	436d44 <argp_usage@@Base+0x9864>
  40c94c:	mov	x19, x0
  40c950:	bl	41af10 <wcrtomb@plt+0x15fc0>
  40c954:	bl	41b2d4 <wcrtomb@plt+0x16384>
  40c958:	mov	x20, x0
  40c95c:	cbnz	x0, 40c9c8 <wcrtomb@plt+0x7a78>
  40c960:	add	x28, sp, #0xd0
  40c964:	mov	x22, #0x3e8                 	// #1000
  40c968:	mov	w27, #0x2f                  	// #47
  40c96c:	bl	41b344 <wcrtomb@plt+0x163f4>
  40c970:	bl	41b2d4 <wcrtomb@plt+0x16384>
  40c974:	mov	x20, x0
  40c978:	cbnz	x0, 40c9f0 <wcrtomb@plt+0x7aa0>
  40c97c:	mov	x0, x19
  40c980:	bl	404ae0 <free@plt>
  40c984:	bl	40a8cc <wcrtomb@plt+0x597c>
  40c988:	bl	40770c <wcrtomb@plt+0x27bc>
  40c98c:	bl	422bb0 <wcrtomb@plt+0x1dc60>
  40c990:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40c994:	ldr	x0, [x0, #840]
  40c998:	cbz	x0, 40c9a0 <wcrtomb@plt+0x7a50>
  40c99c:	bl	414cd4 <wcrtomb@plt+0xfd84>
  40c9a0:	ldp	x29, x30, [sp]
  40c9a4:	ldp	x19, x20, [sp, #16]
  40c9a8:	ldp	x21, x22, [sp, #32]
  40c9ac:	ldp	x23, x24, [sp, #48]
  40c9b0:	ldp	x25, x26, [sp, #64]
  40c9b4:	ldp	x27, x28, [sp, #80]
  40c9b8:	add	sp, sp, #0x220
  40c9bc:	ret
  40c9c0:	mov	w0, #0x0                   	// #0
  40c9c4:	b	40c924 <wcrtomb@plt+0x79d4>
  40c9c8:	ldr	x0, [x20, #16]
  40c9cc:	mov	x1, #0x0                   	// #0
  40c9d0:	bl	40dac4 <wcrtomb@plt+0x8b74>
  40c9d4:	tst	w0, #0xff
  40c9d8:	b.ne	40c954 <wcrtomb@plt+0x7a04>  // b.any
  40c9dc:	ldr	x2, [x20, #16]
  40c9e0:	mov	x0, #0x0                   	// #0
  40c9e4:	mov	x1, x2
  40c9e8:	bl	40bb04 <wcrtomb@plt+0x6bb4>
  40c9ec:	b	40c954 <wcrtomb@plt+0x7a04>
  40c9f0:	ldr	x0, [x20, #16]
  40c9f4:	mov	x1, #0x0                   	// #0
  40c9f8:	bl	40dac4 <wcrtomb@plt+0x8b74>
  40c9fc:	tst	w0, #0xff
  40ca00:	b.ne	40c970 <wcrtomb@plt+0x7a20>  // b.any
  40ca04:	ldr	x0, [x20, #16]
  40ca08:	bl	404280 <strlen@plt>
  40ca0c:	mov	x21, x0
  40ca10:	cmp	x22, x0
  40ca14:	b.hi	40ca34 <wcrtomb@plt+0x7ae4>  // b.pmore
  40ca18:	lsl	x22, x22, #1
  40ca1c:	cmp	x21, x22
  40ca20:	b.cs	40ca18 <wcrtomb@plt+0x7ac8>  // b.hs, b.nlast
  40ca24:	mov	x0, x19
  40ca28:	mov	x1, x22
  40ca2c:	bl	436da4 <argp_usage@@Base+0x98c4>
  40ca30:	mov	x19, x0
  40ca34:	ldr	x1, [x20, #16]
  40ca38:	mov	x2, x21
  40ca3c:	mov	x0, x19
  40ca40:	bl	404200 <memcpy@plt>
  40ca44:	add	x0, x19, x21
  40ca48:	ldurb	w0, [x0, #-1]
  40ca4c:	cmp	w0, #0x2f
  40ca50:	b.eq	40ca5c <wcrtomb@plt+0x7b0c>  // b.none
  40ca54:	strb	w27, [x19, x21]
  40ca58:	add	x21, x21, #0x1
  40ca5c:	add	x0, sp, #0x78
  40ca60:	bl	421adc <wcrtomb@plt+0x1cb8c>
  40ca64:	ldr	x0, [x20, #56]
  40ca68:	bl	41409c <wcrtomb@plt+0xf14c>
  40ca6c:	mov	x23, x0
  40ca70:	cbz	x0, 40cae0 <wcrtomb@plt+0x7b90>
  40ca74:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  40ca78:	adrp	x26, 46e000 <_obstack_memory_used@@Base+0x36380>
  40ca7c:	add	x25, x25, #0x2c4
  40ca80:	add	x26, x26, #0x8d8
  40ca84:	ldrb	w1, [x23]
  40ca88:	cbz	w1, 40cae0 <wcrtomb@plt+0x7b90>
  40ca8c:	mov	x0, x23
  40ca90:	str	w1, [sp, #104]
  40ca94:	bl	404280 <strlen@plt>
  40ca98:	mov	x24, x0
  40ca9c:	ldr	w1, [sp, #104]
  40caa0:	cmp	w1, #0x59
  40caa4:	b.ne	40cb64 <wcrtomb@plt+0x7c14>  // b.any
  40caa8:	ldr	x0, [sp, #120]
  40caac:	cbnz	x0, 40cb1c <wcrtomb@plt+0x7bcc>
  40cab0:	ldr	w2, [x25]
  40cab4:	ldr	w0, [x26]
  40cab8:	ldr	x1, [x20, #16]
  40cabc:	bl	4048b0 <__openat_2@plt>
  40cac0:	tbz	w0, #31, 40caec <wcrtomb@plt+0x7b9c>
  40cac4:	ldr	x0, [x20, #64]
  40cac8:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  40cacc:	add	x2, x2, #0xbdc
  40cad0:	cmp	x0, #0x0
  40cad4:	ldr	x0, [x20, #16]
  40cad8:	cset	w1, eq  // eq = none
  40cadc:	bl	418cb4 <wcrtomb@plt+0x13d64>
  40cae0:	add	x0, sp, #0x78
  40cae4:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  40cae8:	b	40c970 <wcrtomb@plt+0x7a20>
  40caec:	mov	x1, x28
  40caf0:	str	w0, [sp, #528]
  40caf4:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  40caf8:	cbz	w0, 40cb10 <wcrtomb@plt+0x7bc0>
  40cafc:	ldr	x0, [x20, #64]
  40cb00:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  40cb04:	add	x2, x2, #0xc90
  40cb08:	cmp	x0, #0x0
  40cb0c:	b	40cad4 <wcrtomb@plt+0x7b84>
  40cb10:	ldr	x0, [x20, #16]
  40cb14:	bl	436f10 <argp_usage@@Base+0x9a30>
  40cb18:	str	x0, [sp, #120]
  40cb1c:	add	x0, x21, x24
  40cb20:	cmp	x0, x22
  40cb24:	b.ls	40cb44 <wcrtomb@plt+0x7bf4>  // b.plast
  40cb28:	lsl	x22, x22, #1
  40cb2c:	cmp	x0, x22
  40cb30:	b.hi	40cb28 <wcrtomb@plt+0x7bd8>  // b.pmore
  40cb34:	mov	x0, x19
  40cb38:	mov	x1, x22
  40cb3c:	bl	436da4 <argp_usage@@Base+0x98c4>
  40cb40:	mov	x19, x0
  40cb44:	add	x1, x23, #0x1
  40cb48:	add	x0, x19, x21
  40cb4c:	str	x1, [sp, #104]
  40cb50:	bl	404c40 <strcpy@plt>
  40cb54:	ldr	x1, [sp, #104]
  40cb58:	mov	x2, x19
  40cb5c:	add	x0, sp, #0x78
  40cb60:	bl	40bb04 <wcrtomb@plt+0x6bb4>
  40cb64:	add	x24, x24, #0x1
  40cb68:	add	x23, x23, x24
  40cb6c:	b	40ca84 <wcrtomb@plt+0x7b34>
  40cb70:	mov	x1, #0x0                   	// #0
  40cb74:	bl	40dac4 <wcrtomb@plt+0x8b74>
  40cb78:	tst	w0, #0xff
  40cb7c:	b.ne	40cb90 <wcrtomb@plt+0x7c40>  // b.any
  40cb80:	mov	x2, x19
  40cb84:	mov	x1, x19
  40cb88:	mov	x0, #0x0                   	// #0
  40cb8c:	bl	40bb04 <wcrtomb@plt+0x6bb4>
  40cb90:	mov	w0, #0x1                   	// #1
  40cb94:	bl	41a638 <wcrtomb@plt+0x156e8>
  40cb98:	mov	x19, x0
  40cb9c:	cbnz	x0, 40cb70 <wcrtomb@plt+0x7c20>
  40cba0:	b	40c984 <wcrtomb@plt+0x7a34>
  40cba4:	stp	x29, x30, [sp, #-64]!
  40cba8:	mov	x29, sp
  40cbac:	stp	x19, x20, [sp, #16]
  40cbb0:	mov	x19, x0
  40cbb4:	str	x21, [sp, #32]
  40cbb8:	tbz	x0, #63, 40cc00 <wcrtomb@plt+0x7cb0>
  40cbbc:	mov	w0, #0x4                   	// #4
  40cbc0:	strh	w0, [sp, #56]
  40cbc4:	neg	w0, w19
  40cbc8:	str	w0, [sp, #60]
  40cbcc:	sxtw	x0, w0
  40cbd0:	cmn	x0, x19
  40cbd4:	cset	w0, eq  // eq = none
  40cbd8:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  40cbdc:	cbnz	w0, 40cc18 <wcrtomb@plt+0x7cc8>
  40cbe0:	ldr	w0, [x20, #984]
  40cbe4:	mov	w1, #0x3fffffff            	// #1073741823
  40cbe8:	cmp	w0, w1
  40cbec:	b.gt	40ccc0 <wcrtomb@plt+0x7d70>
  40cbf0:	mov	w2, #0x1                   	// #1
  40cbf4:	mov	x1, #0x0                   	// #0
  40cbf8:	bl	404480 <lseek@plt>
  40cbfc:	b	40ccd4 <wcrtomb@plt+0x7d84>
  40cc00:	mov	w0, #0x3                   	// #3
  40cc04:	cmp	x19, w19, sxtw
  40cc08:	strh	w0, [sp, #56]
  40cc0c:	cset	w0, eq  // eq = none
  40cc10:	str	w19, [sp, #60]
  40cc14:	b	40cbd8 <wcrtomb@plt+0x7c88>
  40cc18:	ldr	w0, [x20, #984]
  40cc1c:	mov	w1, #0x3fffffff            	// #1073741823
  40cc20:	add	x2, sp, #0x38
  40cc24:	cmp	w0, w1
  40cc28:	b.le	40cca0 <wcrtomb@plt+0x7d50>
  40cc2c:	mov	w3, #0xc0000000            	// #-1073741824
  40cc30:	mov	w1, #0x6d01                	// #27905
  40cc34:	add	w0, w0, w3
  40cc38:	movk	w1, #0x4008, lsl #16
  40cc3c:	bl	4260bc <wcrtomb@plt+0x2116c>
  40cc40:	mvn	w0, w0
  40cc44:	lsr	w0, w0, #31
  40cc48:	cbnz	w0, 40cc90 <wcrtomb@plt+0x7d40>
  40cc4c:	bl	404e10 <__errno_location@plt>
  40cc50:	ldr	w0, [x0]
  40cc54:	cmp	w0, #0x5
  40cc58:	b.ne	40cbe0 <wcrtomb@plt+0x7c90>  // b.any
  40cc5c:	ldr	w0, [x20, #984]
  40cc60:	mov	w1, #0x3fffffff            	// #1073741823
  40cc64:	add	x2, sp, #0x38
  40cc68:	cmp	w0, w1
  40cc6c:	b.le	40ccb0 <wcrtomb@plt+0x7d60>
  40cc70:	mov	w3, #0xc0000000            	// #-1073741824
  40cc74:	mov	w1, #0x6d01                	// #27905
  40cc78:	add	w0, w0, w3
  40cc7c:	movk	w1, #0x4008, lsl #16
  40cc80:	bl	4260bc <wcrtomb@plt+0x2116c>
  40cc84:	mvn	w0, w0
  40cc88:	lsr	w0, w0, #31
  40cc8c:	cbz	w0, 40cbe0 <wcrtomb@plt+0x7c90>
  40cc90:	ldp	x19, x20, [sp, #16]
  40cc94:	ldr	x21, [sp, #32]
  40cc98:	ldp	x29, x30, [sp], #64
  40cc9c:	ret
  40cca0:	mov	x1, #0x6d01                	// #27905
  40cca4:	movk	x1, #0x4008, lsl #16
  40cca8:	bl	404f00 <ioctl@plt>
  40ccac:	b	40cc40 <wcrtomb@plt+0x7cf0>
  40ccb0:	mov	x1, #0x6d01                	// #27905
  40ccb4:	movk	x1, #0x4008, lsl #16
  40ccb8:	bl	404f00 <ioctl@plt>
  40ccbc:	b	40cc84 <wcrtomb@plt+0x7d34>
  40ccc0:	mov	w3, #0xc0000000            	// #-1073741824
  40ccc4:	mov	w2, #0x1                   	// #1
  40ccc8:	add	w0, w0, w3
  40cccc:	mov	x1, #0x0                   	// #0
  40ccd0:	bl	425f8c <wcrtomb@plt+0x2103c>
  40ccd4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  40ccd8:	ldr	x2, [x1, #928]
  40ccdc:	mul	x1, x19, x2
  40cce0:	add	x21, x1, x0
  40cce4:	sdiv	x19, x1, x19
  40cce8:	cmp	x19, x2
  40ccec:	b.ne	40cd38 <wcrtomb@plt+0x7de8>  // b.any
  40ccf0:	cmp	x0, x21
  40ccf4:	lsr	x1, x1, #63
  40ccf8:	cset	w0, gt
  40ccfc:	cmp	w0, w1
  40cd00:	b.ne	40cd38 <wcrtomb@plt+0x7de8>  // b.any
  40cd04:	cmp	x21, #0x0
  40cd08:	ldr	w0, [x20, #984]
  40cd0c:	csel	x21, x21, xzr, ge  // ge = tcont
  40cd10:	mov	w1, #0x3fffffff            	// #1073741823
  40cd14:	mov	w2, #0x0                   	// #0
  40cd18:	cmp	w0, w1
  40cd1c:	mov	x1, x21
  40cd20:	b.le	40cd50 <wcrtomb@plt+0x7e00>
  40cd24:	mov	w3, #0xc0000000            	// #-1073741824
  40cd28:	add	w0, w0, w3
  40cd2c:	bl	425f8c <wcrtomb@plt+0x2103c>
  40cd30:	cmp	x21, x0
  40cd34:	b.eq	40cc90 <wcrtomb@plt+0x7d40>  // b.none
  40cd38:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40cd3c:	mov	x1, x21
  40cd40:	ldr	x0, [x0, #696]
  40cd44:	ldr	x0, [x0]
  40cd48:	bl	425104 <wcrtomb@plt+0x201b4>
  40cd4c:	b	40cc90 <wcrtomb@plt+0x7d40>
  40cd50:	bl	404480 <lseek@plt>
  40cd54:	b	40cd30 <wcrtomb@plt+0x7de0>
  40cd58:	stp	x29, x30, [sp, #-64]!
  40cd5c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  40cd60:	mov	x29, sp
  40cd64:	stp	x19, x20, [sp, #16]
  40cd68:	mov	x19, x1
  40cd6c:	stp	x21, x22, [sp, #32]
  40cd70:	mov	w21, w0
  40cd74:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40cd78:	add	x20, x0, #0x7f8
  40cd7c:	str	x23, [sp, #48]
  40cd80:	ldr	x0, [x0, #2040]
  40cd84:	ldr	x23, [x1, #3992]
  40cd88:	str	x0, [x1, #3992]
  40cd8c:	ldrb	w0, [x20, #8]
  40cd90:	cbz	w0, 40cdf8 <wcrtomb@plt+0x7ea8>
  40cd94:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  40cd98:	mov	w0, #0x1                   	// #1
  40cd9c:	str	w0, [x22, #984]
  40cda0:	bl	407d80 <wcrtomb@plt+0x2e30>
  40cda4:	str	wzr, [x22, #984]
  40cda8:	str	x23, [x19, #3992]
  40cdac:	cbz	w21, 40cde0 <wcrtomb@plt+0x7e90>
  40cdb0:	ldrb	w0, [x20, #8]
  40cdb4:	cbnz	w0, 40cde0 <wcrtomb@plt+0x7e90>
  40cdb8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40cdbc:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  40cdc0:	ldr	x0, [x0, #3960]
  40cdc4:	ldr	x1, [x1, #4040]
  40cdc8:	add	x1, x0, x1
  40cdcc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40cdd0:	ldr	x0, [x0, #3944]
  40cdd4:	subs	x0, x0, x1
  40cdd8:	b.eq	40cde0 <wcrtomb@plt+0x7e90>  // b.none
  40cddc:	bl	40cba4 <wcrtomb@plt+0x7c54>
  40cde0:	str	wzr, [x20, #12]
  40cde4:	ldp	x19, x20, [sp, #16]
  40cde8:	ldp	x21, x22, [sp, #32]
  40cdec:	ldr	x23, [sp, #48]
  40cdf0:	ldp	x29, x30, [sp], #64
  40cdf4:	ret
  40cdf8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40cdfc:	ldr	x1, [x0, #3960]
  40ce00:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40ce04:	ldr	x0, [x0, #4040]
  40ce08:	add	x1, x1, x0
  40ce0c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40ce10:	ldr	x0, [x0, #3944]
  40ce14:	subs	x0, x1, x0
  40ce18:	b.eq	40ce20 <wcrtomb@plt+0x7ed0>  // b.none
  40ce1c:	bl	40cba4 <wcrtomb@plt+0x7c54>
  40ce20:	bl	407d80 <wcrtomb@plt+0x2e30>
  40ce24:	b	40cda8 <wcrtomb@plt+0x7e58>
  40ce28:	stp	x29, x30, [sp, #-64]!
  40ce2c:	mov	x29, sp
  40ce30:	stp	x19, x20, [sp, #16]
  40ce34:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  40ce38:	add	x19, x19, #0x7f8
  40ce3c:	stp	x21, x22, [sp, #32]
  40ce40:	mov	x22, x0
  40ce44:	mov	x21, x1
  40ce48:	stp	x23, x24, [sp, #48]
  40ce4c:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  40ce50:	add	x23, x23, #0x2f4
  40ce54:	mov	x20, #0x0                   	// #0
  40ce58:	cmp	x20, x21
  40ce5c:	b.ne	40ce74 <wcrtomb@plt+0x7f24>  // b.any
  40ce60:	ldp	x19, x20, [sp, #16]
  40ce64:	ldp	x21, x22, [sp, #32]
  40ce68:	ldp	x23, x24, [sp, #48]
  40ce6c:	ldp	x29, x30, [sp], #64
  40ce70:	ret
  40ce74:	ldr	w2, [x19, #12]
  40ce78:	add	x1, x22, x20, lsl #9
  40ce7c:	ldr	x0, [x19]
  40ce80:	add	w24, w2, #0x1
  40ce84:	sbfiz	x3, x2, #9, #32
  40ce88:	mov	x2, #0x200                 	// #512
  40ce8c:	add	x0, x0, x3
  40ce90:	str	w24, [x19, #12]
  40ce94:	bl	404200 <memcpy@plt>
  40ce98:	ldr	w0, [x23]
  40ce9c:	cmp	w24, w0
  40cea0:	b.ne	40ceac <wcrtomb@plt+0x7f5c>  // b.any
  40cea4:	mov	w0, #0x1                   	// #1
  40cea8:	bl	40cd58 <wcrtomb@plt+0x7e08>
  40ceac:	add	x20, x20, #0x1
  40ceb0:	b	40ce58 <wcrtomb@plt+0x7f08>
  40ceb4:	stp	x29, x30, [sp, #-144]!
  40ceb8:	mov	x29, sp
  40cebc:	stp	x19, x20, [sp, #16]
  40cec0:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  40cec4:	stp	x21, x22, [sp, #32]
  40cec8:	adrp	x22, 447000 <_obstack_memory_used@@Base+0xf380>
  40cecc:	add	x22, x22, #0xa88
  40ced0:	stp	x23, x24, [sp, #48]
  40ced4:	mov	w24, #0x0                   	// #0
  40ced8:	stp	x25, x26, [sp, #64]
  40cedc:	stp	x27, x28, [sp, #80]
  40cee0:	bl	41a6e8 <wcrtomb@plt+0x15798>
  40cee4:	mov	w0, #0x2                   	// #2
  40cee8:	bl	407d98 <wcrtomb@plt+0x2e48>
  40ceec:	ldr	x0, [x20, #696]
  40cef0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  40cef4:	add	x1, x1, #0x8dc
  40cef8:	ldr	x0, [x0]
  40cefc:	bl	404a30 <strcmp@plt>
  40cf00:	cmp	w0, #0x0
  40cf04:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  40cf08:	add	x19, x1, #0x7f8
  40cf0c:	cset	w0, eq  // eq = none
  40cf10:	stp	x1, x20, [sp, #96]
  40cf14:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  40cf18:	add	x20, x20, #0x68
  40cf1c:	strb	w0, [x19, #8]
  40cf20:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40cf24:	add	x23, x0, #0xff0
  40cf28:	mov	x1, x20
  40cf2c:	mov	x0, x23
  40cf30:	mov	w2, #0x1                   	// #1
  40cf34:	bl	4162bc <wcrtomb@plt+0x1136c>
  40cf38:	mov	w21, w0
  40cf3c:	cmp	w0, #0x5
  40cf40:	b.hi	40cf64 <wcrtomb@plt+0x8014>  // b.pmore
  40cf44:	ldrb	w0, [x22, w21, uxtw]
  40cf48:	adr	x1, 40cf54 <wcrtomb@plt+0x8004>
  40cf4c:	add	x0, x1, w0, sxtb #2
  40cf50:	br	x0
  40cf54:	ldr	x0, [x20, #8]
  40cf58:	bl	41b264 <wcrtomb@plt+0x16314>
  40cf5c:	cbnz	x0, 40cf6c <wcrtomb@plt+0x801c>
  40cf60:	bl	417070 <wcrtomb@plt+0x12120>
  40cf64:	mov	w24, w21
  40cf68:	b	40cf28 <wcrtomb@plt+0x7fd8>
  40cf6c:	ldr	x1, [x0, #48]
  40cf70:	add	x1, x1, #0x1
  40cf74:	str	x1, [x0, #48]
  40cf78:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40cf7c:	ldr	x0, [x0, #768]
  40cf80:	cbnz	x0, 40d0b0 <wcrtomb@plt+0x8160>
  40cf84:	cmp	x1, #0x0
  40cf88:	cset	w0, eq  // eq = none
  40cf8c:	cbnz	w0, 40cf60 <wcrtomb@plt+0x8010>
  40cf90:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40cf94:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  40cf98:	ldr	x0, [x0, #3944]
  40cf9c:	sub	x0, x0, #0x1
  40cfa0:	str	x0, [x1, #4040]
  40cfa4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40cfa8:	ldr	x0, [x0, #928]
  40cfac:	bl	436d44 <argp_usage@@Base+0x9864>
  40cfb0:	ldr	x1, [sp, #96]
  40cfb4:	str	x0, [x1, #2040]
  40cfb8:	sub	w1, w21, #0x1
  40cfbc:	cmp	w1, #0x1
  40cfc0:	b.hi	40d450 <wcrtomb@plt+0x8500>  // b.pmore
  40cfc4:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  40cfc8:	adrp	x26, 471000 <_obstack_memory_used@@Base+0x39380>
  40cfcc:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  40cfd0:	strb	wzr, [x1, #4000]
  40cfd4:	ldr	x2, [x2, #4016]
  40cfd8:	ldr	x1, [x26, #3992]
  40cfdc:	sub	x2, x2, x1
  40cfe0:	asr	x3, x2, #9
  40cfe4:	str	w3, [x19, #12]
  40cfe8:	cbz	w3, 40cff4 <wcrtomb@plt+0x80a4>
  40cfec:	sxtw	x2, w2
  40cff0:	bl	404200 <memcpy@plt>
  40cff4:	cmp	w21, #0x1
  40cff8:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x39380>
  40cffc:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  40d000:	add	x25, x25, #0xf70
  40d004:	add	x21, x21, #0xfb0
  40d008:	b.ne	40d048 <wcrtomb@plt+0x80f8>  // b.any
  40d00c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d010:	ldr	x0, [x0, #4080]
  40d014:	bl	405c98 <wcrtomb@plt+0xd48>
  40d018:	ldr	x22, [x20, #136]
  40d01c:	mov	x0, #0x200                 	// #512
  40d020:	add	x22, x22, #0x1ff
  40d024:	sdiv	x22, x22, x0
  40d028:	ldr	x1, [x21]
  40d02c:	ldr	x0, [x25]
  40d030:	sub	x0, x0, x1
  40d034:	asr	x2, x0, #9
  40d038:	cmp	x22, x0, asr #9
  40d03c:	b.ge	40d398 <wcrtomb@plt+0x8448>  // b.tcont
  40d040:	add	x22, x1, x22, lsl #9
  40d044:	str	x22, [x21]
  40d048:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  40d04c:	add	x24, x24, #0x2f4
  40d050:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40d054:	mov	x28, #0x200                 	// #512
  40d058:	add	x0, x0, #0xa66
  40d05c:	str	x0, [sp, #112]
  40d060:	ldr	x1, [x21]
  40d064:	ldr	x0, [x25]
  40d068:	cmp	x1, x0
  40d06c:	b.ne	40d074 <wcrtomb@plt+0x8124>  // b.any
  40d070:	bl	406c88 <wcrtomb@plt+0x1d38>
  40d074:	mov	x1, x20
  40d078:	mov	w2, #0x0                   	// #0
  40d07c:	mov	x0, x23
  40d080:	bl	4162bc <wcrtomb@plt+0x1136c>
  40d084:	mov	w22, w0
  40d088:	mov	x0, x20
  40d08c:	bl	4121b4 <wcrtomb@plt+0xd264>
  40d090:	cmp	w22, #0x3
  40d094:	b.ne	40d174 <wcrtomb@plt+0x8224>  // b.any
  40d098:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40d09c:	ldrb	w0, [x0, #85]
  40d0a0:	cbz	w0, 40d174 <wcrtomb@plt+0x8224>
  40d0a4:	ldr	x0, [x23]
  40d0a8:	bl	405c98 <wcrtomb@plt+0xd48>
  40d0ac:	b	40d060 <wcrtomb@plt+0x8110>
  40d0b0:	cmp	x1, x0
  40d0b4:	cset	w0, ne  // ne = any
  40d0b8:	b	40cf8c <wcrtomb@plt+0x803c>
  40d0bc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40d0c0:	ldrb	w0, [x0, #85]
  40d0c4:	cbz	w0, 40d16c <wcrtomb@plt+0x821c>
  40d0c8:	ldr	x0, [x23]
  40d0cc:	bl	405c98 <wcrtomb@plt+0xd48>
  40d0d0:	b	40cf64 <wcrtomb@plt+0x8014>
  40d0d4:	ldr	x0, [x23]
  40d0d8:	bl	405c98 <wcrtomb@plt+0xd48>
  40d0dc:	cmp	w24, #0x3
  40d0e0:	b.hi	40d12c <wcrtomb@plt+0x81dc>  // b.pmore
  40d0e4:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  40d0e8:	cbz	w24, 40d138 <wcrtomb@plt+0x81e8>
  40d0ec:	ldr	x0, [x25, #1016]
  40d0f0:	cbz	x0, 40d0f8 <wcrtomb@plt+0x81a8>
  40d0f4:	blr	x0
  40d0f8:	mov	w2, #0x5                   	// #5
  40d0fc:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40d100:	mov	x0, #0x0                   	// #0
  40d104:	add	x1, x1, #0xa4e
  40d108:	bl	404d00 <dcgettext@plt>
  40d10c:	mov	x2, x0
  40d110:	mov	w1, #0x0                   	// #0
  40d114:	mov	w0, #0x0                   	// #0
  40d118:	bl	4042e0 <error@plt>
  40d11c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d120:	mov	w1, #0x2                   	// #2
  40d124:	str	w1, [x0, #3464]
  40d128:	b	40cf64 <wcrtomb@plt+0x8014>
  40d12c:	cmp	w24, #0x4
  40d130:	b.ne	40cf64 <wcrtomb@plt+0x8014>  // b.any
  40d134:	bl	404970 <abort@plt>
  40d138:	ldr	x0, [x25, #1016]
  40d13c:	cbz	x0, 40d144 <wcrtomb@plt+0x81f4>
  40d140:	blr	x0
  40d144:	mov	w2, #0x5                   	// #5
  40d148:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  40d14c:	mov	x0, #0x0                   	// #0
  40d150:	add	x1, x1, #0xb68
  40d154:	bl	404d00 <dcgettext@plt>
  40d158:	mov	x2, x0
  40d15c:	mov	w1, #0x0                   	// #0
  40d160:	mov	w0, #0x0                   	// #0
  40d164:	bl	4042e0 <error@plt>
  40d168:	b	40d0ec <wcrtomb@plt+0x819c>
  40d16c:	mov	w21, #0x4                   	// #4
  40d170:	b	40cf90 <wcrtomb@plt+0x8040>
  40d174:	sub	w0, w22, #0x3
  40d178:	cmp	w0, #0x1
  40d17c:	b.ls	40d3d0 <wcrtomb@plt+0x8480>  // b.plast
  40d180:	cmp	w22, #0x5
  40d184:	b.ne	40d1c8 <wcrtomb@plt+0x8278>  // b.any
  40d188:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40d18c:	ldr	x0, [x0, #1016]
  40d190:	cbz	x0, 40d198 <wcrtomb@plt+0x8248>
  40d194:	blr	x0
  40d198:	ldr	x1, [sp, #112]
  40d19c:	mov	w2, #0x5                   	// #5
  40d1a0:	mov	x0, #0x0                   	// #0
  40d1a4:	bl	404d00 <dcgettext@plt>
  40d1a8:	mov	x2, x0
  40d1ac:	mov	w1, #0x0                   	// #0
  40d1b0:	mov	w0, #0x0                   	// #0
  40d1b4:	bl	4042e0 <error@plt>
  40d1b8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d1bc:	mov	w1, #0x2                   	// #2
  40d1c0:	str	w1, [x0, #3464]
  40d1c4:	b	40d0a4 <wcrtomb@plt+0x8154>
  40d1c8:	ldr	x0, [x20, #8]
  40d1cc:	bl	41b264 <wcrtomb@plt+0x16314>
  40d1d0:	cbz	x0, 40d1f8 <wcrtomb@plt+0x82a8>
  40d1d4:	ldr	x1, [x0, #48]
  40d1d8:	add	x1, x1, #0x1
  40d1dc:	str	x1, [x0, #48]
  40d1e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40d1e4:	ldr	x0, [x0, #768]
  40d1e8:	cbnz	x0, 40d38c <wcrtomb@plt+0x843c>
  40d1ec:	cmp	x1, #0x0
  40d1f0:	cset	w0, ne  // ne = any
  40d1f4:	cbnz	w0, 40d00c <wcrtomb@plt+0x80bc>
  40d1f8:	ldr	x22, [x20, #352]
  40d1fc:	cbz	x22, 40d3a4 <wcrtomb@plt+0x8454>
  40d200:	ldr	x0, [x20, #360]
  40d204:	lsr	x1, x22, #9
  40d208:	str	x0, [sp, #128]
  40d20c:	and	x27, x22, #0x1ff
  40d210:	bl	40ce28 <wcrtomb@plt+0x7ed8>
  40d214:	ldr	w3, [x19, #12]
  40d218:	mov	x2, x27
  40d21c:	ldr	x4, [x19]
  40d220:	str	w3, [sp, #120]
  40d224:	sbfiz	x1, x3, #9, #32
  40d228:	add	x4, x4, x1
  40d22c:	and	x1, x22, #0xfffffffffffffe00
  40d230:	ldr	x0, [sp, #128]
  40d234:	add	x1, x0, x1
  40d238:	mov	x0, x4
  40d23c:	bl	404200 <memcpy@plt>
  40d240:	add	x0, x0, x27
  40d244:	sub	x2, x28, x27
  40d248:	mov	w1, #0x0                   	// #0
  40d24c:	bl	404700 <memset@plt>
  40d250:	ldr	w3, [sp, #120]
  40d254:	ldr	w0, [x24]
  40d258:	add	w3, w3, #0x1
  40d25c:	str	w3, [x19, #12]
  40d260:	cmp	w3, w0
  40d264:	b.ne	40d270 <wcrtomb@plt+0x8320>  // b.any
  40d268:	mov	w0, #0x1                   	// #1
  40d26c:	bl	40cd58 <wcrtomb@plt+0x7e08>
  40d270:	ldr	w22, [x19, #12]
  40d274:	mov	x2, #0x200                 	// #512
  40d278:	ldr	x3, [x19]
  40d27c:	ldr	x27, [x23]
  40d280:	sbfiz	x0, x22, #9, #32
  40d284:	add	w22, w22, #0x1
  40d288:	add	x0, x3, x0
  40d28c:	mov	x1, x27
  40d290:	bl	404200 <memcpy@plt>
  40d294:	str	w22, [x19, #12]
  40d298:	mov	x0, x27
  40d29c:	ldr	x22, [x20, #136]
  40d2a0:	bl	405c98 <wcrtomb@plt+0xd48>
  40d2a4:	ldr	w1, [x19, #12]
  40d2a8:	add	x22, x22, #0x1ff
  40d2ac:	ldr	w0, [x24]
  40d2b0:	cmp	w1, w0
  40d2b4:	sdiv	x22, x22, x28
  40d2b8:	b.ne	40d2c4 <wcrtomb@plt+0x8374>  // b.any
  40d2bc:	mov	w0, #0x1                   	// #1
  40d2c0:	bl	40cd58 <wcrtomb@plt+0x7e08>
  40d2c4:	ldr	x1, [x21]
  40d2c8:	ldr	x0, [x25]
  40d2cc:	sub	x0, x0, x1
  40d2d0:	asr	x3, x0, #9
  40d2d4:	sbfx	x0, x0, #9, #32
  40d2d8:	cmp	x0, x22
  40d2dc:	csel	w27, w3, w22, le
  40d2e0:	ldr	x1, [x21]
  40d2e4:	ldr	x0, [x25]
  40d2e8:	cbz	x22, 40d060 <wcrtomb@plt+0x8110>
  40d2ec:	cmp	x1, x0
  40d2f0:	b.ne	40d30c <wcrtomb@plt+0x83bc>  // b.any
  40d2f4:	bl	406c78 <wcrtomb@plt+0x1d28>
  40d2f8:	ldr	w27, [x24]
  40d2fc:	ldr	x0, [x26, #3992]
  40d300:	str	x0, [x21]
  40d304:	cmp	x22, w27, sxtw
  40d308:	csel	w27, w27, w22, ge  // ge = tcont
  40d30c:	ldr	w5, [x19, #12]
  40d310:	ldr	w4, [x24]
  40d314:	sub	w4, w4, w5
  40d318:	cmp	w4, w27
  40d31c:	csel	w4, w4, w27, le
  40d320:	cbz	w4, 40d134 <wcrtomb@plt+0x81e4>
  40d324:	ldr	x6, [x19]
  40d328:	lsl	w2, w4, #9
  40d32c:	ldr	x1, [x21]
  40d330:	sbfiz	x0, x5, #9, #32
  40d334:	sxtw	x2, w2
  40d338:	add	x0, x6, x0
  40d33c:	str	x2, [sp, #120]
  40d340:	str	w5, [sp, #128]
  40d344:	str	w4, [sp, #140]
  40d348:	bl	404200 <memcpy@plt>
  40d34c:	ldr	x0, [x21]
  40d350:	ldr	x2, [sp, #120]
  40d354:	ldr	w4, [sp, #140]
  40d358:	ldr	w5, [sp, #128]
  40d35c:	add	x2, x0, x2
  40d360:	ldr	w0, [x24]
  40d364:	sub	w27, w27, w4
  40d368:	add	w5, w5, w4
  40d36c:	str	x2, [x21]
  40d370:	str	w5, [x19, #12]
  40d374:	sub	x22, x22, w4, sxtw
  40d378:	cmp	w5, w0
  40d37c:	b.ne	40d2e0 <wcrtomb@plt+0x8390>  // b.any
  40d380:	mov	w0, #0x1                   	// #1
  40d384:	bl	40cd58 <wcrtomb@plt+0x7e08>
  40d388:	b	40d2e0 <wcrtomb@plt+0x8390>
  40d38c:	cmp	x1, x0
  40d390:	cset	w0, eq  // eq = none
  40d394:	b	40d1f4 <wcrtomb@plt+0x82a4>
  40d398:	sub	x22, x22, x2
  40d39c:	bl	406c88 <wcrtomb@plt+0x1d38>
  40d3a0:	b	40d028 <wcrtomb@plt+0x80d8>
  40d3a4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d3a8:	ldr	x1, [x0, #4072]
  40d3ac:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d3b0:	ldr	x0, [x0, #4064]
  40d3b4:	bl	40ce28 <wcrtomb@plt+0x7ed8>
  40d3b8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d3bc:	ldr	x1, [x0, #4088]
  40d3c0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40d3c4:	ldr	x0, [x0]
  40d3c8:	bl	40ce28 <wcrtomb@plt+0x7ed8>
  40d3cc:	b	40d270 <wcrtomb@plt+0x8320>
  40d3d0:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  40d3d4:	add	x22, x22, #0x2f4
  40d3d8:	mov	w20, #0x0                   	// #0
  40d3dc:	ldr	w0, [x19, #12]
  40d3e0:	mov	w1, #0x0                   	// #0
  40d3e4:	ldr	w21, [x22]
  40d3e8:	ldr	x3, [x19]
  40d3ec:	sub	w21, w21, w0
  40d3f0:	sbfiz	x0, x0, #9, #32
  40d3f4:	add	w20, w20, w21
  40d3f8:	lsl	w2, w21, #9
  40d3fc:	add	x0, x3, x0
  40d400:	sxtw	x2, w2
  40d404:	bl	404700 <memset@plt>
  40d408:	cmp	w20, #0x1
  40d40c:	cset	w0, le
  40d410:	bl	40cd58 <wcrtomb@plt+0x7e08>
  40d414:	cmp	w20, #0x1
  40d418:	b.le	40d3dc <wcrtomb@plt+0x848c>
  40d41c:	ldrb	w0, [x19, #8]
  40d420:	cbnz	w0, 40d450 <wcrtomb@plt+0x8500>
  40d424:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40d428:	mov	w1, #0x3fffffff            	// #1073741823
  40d42c:	ldr	w0, [x0, #984]
  40d430:	cmp	w0, w1
  40d434:	b.gt	40d450 <wcrtomb@plt+0x8500>
  40d438:	bl	41dadc <wcrtomb@plt+0x18b8c>
  40d43c:	cbz	w0, 40d450 <wcrtomb@plt+0x8500>
  40d440:	ldr	x0, [sp, #104]
  40d444:	ldr	x0, [x0, #696]
  40d448:	ldr	x0, [x0]
  40d44c:	bl	42530c <wcrtomb@plt+0x203bc>
  40d450:	ldr	x0, [sp, #96]
  40d454:	ldr	x0, [x0, #2040]
  40d458:	bl	404ae0 <free@plt>
  40d45c:	bl	40770c <wcrtomb@plt+0x27bc>
  40d460:	ldp	x19, x20, [sp, #16]
  40d464:	ldp	x21, x22, [sp, #32]
  40d468:	ldp	x23, x24, [sp, #48]
  40d46c:	ldp	x25, x26, [sp, #64]
  40d470:	ldp	x27, x28, [sp, #80]
  40d474:	ldp	x29, x30, [sp], #144
  40d478:	b	41acd0 <wcrtomb@plt+0x15d80>
  40d47c:	stp	x29, x30, [sp, #-16]!
  40d480:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d484:	mov	x29, sp
  40d488:	ldr	x0, [x0, #4048]
  40d48c:	cbz	x0, 40d494 <wcrtomb@plt+0x8544>
  40d490:	blr	x0
  40d494:	mov	w2, #0x5                   	// #5
  40d498:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40d49c:	mov	x0, #0x0                   	// #0
  40d4a0:	add	x1, x1, #0xa8e
  40d4a4:	bl	404d00 <dcgettext@plt>
  40d4a8:	mov	x2, x0
  40d4ac:	mov	w1, #0x0                   	// #0
  40d4b0:	mov	w0, #0x2                   	// #2
  40d4b4:	bl	4042e0 <error@plt>
  40d4b8:	bl	404970 <abort@plt>
  40d4bc:	stp	x29, x30, [sp, #-16]!
  40d4c0:	mov	w2, #0x5                   	// #5
  40d4c4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40d4c8:	mov	x29, sp
  40d4cc:	add	x1, x1, #0xab4
  40d4d0:	mov	x0, #0x0                   	// #0
  40d4d4:	bl	404d00 <dcgettext@plt>
  40d4d8:	mov	x3, x0
  40d4dc:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  40d4e0:	add	x2, x2, #0xb0d
  40d4e4:	mov	w1, #0x0                   	// #0
  40d4e8:	mov	w0, #0x0                   	// #0
  40d4ec:	bl	4042e0 <error@plt>
  40d4f0:	bl	40d47c <wcrtomb@plt+0x852c>
  40d4f4:	cbnz	x0, 40d500 <wcrtomb@plt+0x85b0>
  40d4f8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d4fc:	add	x0, x0, #0x808
  40d500:	mov	w1, #0x8000000             	// #134217728
  40d504:	str	w1, [x0]
  40d508:	ret
  40d50c:	stp	x29, x30, [sp, #-48]!
  40d510:	mov	x29, sp
  40d514:	stp	x19, x20, [sp, #16]
  40d518:	mov	w20, w2
  40d51c:	mov	x19, x1
  40d520:	str	x21, [sp, #32]
  40d524:	mov	x21, x0
  40d528:	bl	404a60 <__ctype_b_loc@plt>
  40d52c:	ldr	x2, [x0]
  40d530:	ldrb	w1, [x19]
  40d534:	ldrb	w0, [x19]
  40d538:	ldrh	w1, [x2, x1, lsl #1]
  40d53c:	tbnz	w1, #13, 40d5a4 <wcrtomb@plt+0x8654>
  40d540:	cmp	w0, #0x23
  40d544:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d548:	b.eq	40d5b8 <wcrtomb@plt+0x8668>  // b.none
  40d54c:	cmp	w0, #0x21
  40d550:	b.ne	40d564 <wcrtomb@plt+0x8614>  // b.any
  40d554:	ldrb	w0, [x19, #1]
  40d558:	cmp	w0, #0x21
  40d55c:	b.ne	40d5ac <wcrtomb@plt+0x865c>  // b.any
  40d560:	add	x19, x19, #0x2
  40d564:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40d568:	mov	x0, x19
  40d56c:	add	x1, x1, #0xac5
  40d570:	mov	x2, #0x3                   	// #3
  40d574:	bl	4046a0 <strncmp@plt>
  40d578:	cbnz	w0, 40d588 <wcrtomb@plt+0x8638>
  40d57c:	and	w20, w20, #0xefffffff
  40d580:	add	x19, x19, #0x3
  40d584:	orr	w20, w20, #0x8000000
  40d588:	mov	w2, w20
  40d58c:	mov	x1, x19
  40d590:	mov	x0, x21
  40d594:	ldp	x19, x20, [sp, #16]
  40d598:	ldr	x21, [sp, #32]
  40d59c:	ldp	x29, x30, [sp], #48
  40d5a0:	b	42e434 <argp_usage@@Base+0xf54>
  40d5a4:	add	x19, x19, #0x1
  40d5a8:	b	40d530 <wcrtomb@plt+0x85e0>
  40d5ac:	add	x19, x19, #0x1
  40d5b0:	orr	w20, w20, #0x20000000
  40d5b4:	b	40d564 <wcrtomb@plt+0x8614>
  40d5b8:	ldp	x19, x20, [sp, #16]
  40d5bc:	ldr	x21, [sp, #32]
  40d5c0:	ldp	x29, x30, [sp], #48
  40d5c4:	ret
  40d5c8:	stp	x29, x30, [sp, #-48]!
  40d5cc:	mov	x29, sp
  40d5d0:	stp	x19, x20, [sp, #16]
  40d5d4:	mov	x20, x0
  40d5d8:	mov	x19, x1
  40d5dc:	str	x21, [sp, #32]
  40d5e0:	mov	w21, w2
  40d5e4:	bl	404a60 <__ctype_b_loc@plt>
  40d5e8:	ldr	x2, [x0]
  40d5ec:	ldrb	w1, [x19]
  40d5f0:	ldrb	w0, [x19]
  40d5f4:	ldrh	w1, [x2, x1, lsl #1]
  40d5f8:	tbnz	w1, #13, 40d63c <wcrtomb@plt+0x86ec>
  40d5fc:	cmp	w0, #0x23
  40d600:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d604:	b.eq	40d644 <wcrtomb@plt+0x86f4>  // b.none
  40d608:	cmp	w0, #0x5c
  40d60c:	b.ne	40d620 <wcrtomb@plt+0x86d0>  // b.any
  40d610:	ldrb	w0, [x19, #1]
  40d614:	cmp	w0, #0x23
  40d618:	b.ne	40d620 <wcrtomb@plt+0x86d0>  // b.any
  40d61c:	add	x19, x19, #0x1
  40d620:	mov	w2, w21
  40d624:	mov	x1, x19
  40d628:	mov	x0, x20
  40d62c:	ldp	x19, x20, [sp, #16]
  40d630:	ldr	x21, [sp, #32]
  40d634:	ldp	x29, x30, [sp], #48
  40d638:	b	42e434 <argp_usage@@Base+0xf54>
  40d63c:	add	x19, x19, #0x1
  40d640:	b	40d5ec <wcrtomb@plt+0x869c>
  40d644:	ldp	x19, x20, [sp, #16]
  40d648:	ldr	x21, [sp, #32]
  40d64c:	ldp	x29, x30, [sp], #48
  40d650:	ret
  40d654:	stp	x29, x30, [sp, #-64]!
  40d658:	mov	x29, sp
  40d65c:	stp	x19, x20, [sp, #16]
  40d660:	mov	x19, x1
  40d664:	mov	w20, w2
  40d668:	stp	x21, x22, [sp, #32]
  40d66c:	mov	x21, x3
  40d670:	stp	x23, x24, [sp, #48]
  40d674:	mov	x24, x0
  40d678:	bl	404a60 <__ctype_b_loc@plt>
  40d67c:	ldr	x22, [x0]
  40d680:	ldrb	w1, [x19]
  40d684:	ldrb	w0, [x19]
  40d688:	ldrh	w1, [x22, x1, lsl #1]
  40d68c:	tbnz	w1, #13, 40d6f4 <wcrtomb@plt+0x87a4>
  40d690:	cmp	w0, #0x23
  40d694:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d698:	b.eq	40d6e0 <wcrtomb@plt+0x8790>  // b.none
  40d69c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40d6a0:	mov	x0, x19
  40d6a4:	add	x1, x1, #0xac9
  40d6a8:	mov	x2, #0x7                   	// #7
  40d6ac:	bl	4046a0 <strncmp@plt>
  40d6b0:	cbnz	w0, 40d720 <wcrtomb@plt+0x87d0>
  40d6b4:	add	x19, x19, #0x7
  40d6b8:	ldrb	w0, [x19]
  40d6bc:	ldrh	w0, [x22, x0, lsl #1]
  40d6c0:	tbnz	w0, #13, 40d6fc <wcrtomb@plt+0x87ac>
  40d6c4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40d6c8:	mov	x0, x19
  40d6cc:	add	x1, x1, #0xad1
  40d6d0:	bl	404a30 <strcmp@plt>
  40d6d4:	cbnz	w0, 40d704 <wcrtomb@plt+0x87b4>
  40d6d8:	mov	w0, #0x8000000             	// #134217728
  40d6dc:	str	w0, [x21]
  40d6e0:	ldp	x19, x20, [sp, #16]
  40d6e4:	ldp	x21, x22, [sp, #32]
  40d6e8:	ldp	x23, x24, [sp, #48]
  40d6ec:	ldp	x29, x30, [sp], #64
  40d6f0:	ret
  40d6f4:	add	x19, x19, #0x1
  40d6f8:	b	40d680 <wcrtomb@plt+0x8730>
  40d6fc:	add	x19, x19, #0x1
  40d700:	b	40d6b8 <wcrtomb@plt+0x8768>
  40d704:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40d708:	mov	x0, x19
  40d70c:	add	x1, x1, #0xad8
  40d710:	bl	404a30 <strcmp@plt>
  40d714:	cbnz	w0, 40d6e0 <wcrtomb@plt+0x8790>
  40d718:	mov	w0, #0x10000000            	// #268435456
  40d71c:	b	40d6dc <wcrtomb@plt+0x878c>
  40d720:	mov	x0, x19
  40d724:	bl	404280 <strlen@plt>
  40d728:	sub	x23, x0, #0x1
  40d72c:	ldrb	w1, [x19, x23]
  40d730:	cmp	w1, #0x2f
  40d734:	b.ne	40d76c <wcrtomb@plt+0x881c>  // b.any
  40d738:	bl	436d44 <argp_usage@@Base+0x9864>
  40d73c:	mov	x22, x0
  40d740:	mov	x2, x23
  40d744:	mov	x1, x19
  40d748:	bl	404200 <memcpy@plt>
  40d74c:	mov	x19, x22
  40d750:	strb	wzr, [x22, x23]
  40d754:	mov	x0, x24
  40d758:	mov	x1, x22
  40d75c:	bl	42e068 <argp_usage@@Base+0xb88>
  40d760:	mov	w0, #0x8                   	// #8
  40d764:	movk	w0, #0x400, lsl #16
  40d768:	orr	w20, w20, w0
  40d76c:	ldr	w2, [x21]
  40d770:	and	w0, w20, #0xefffffff
  40d774:	mov	w1, #0x8000000             	// #134217728
  40d778:	and	w20, w20, #0xf7ffffff
  40d77c:	cmp	w2, w1
  40d780:	mov	x1, x19
  40d784:	csel	w20, w20, w0, ne  // ne = any
  40d788:	mov	x0, x24
  40d78c:	orr	w2, w2, w20
  40d790:	ldp	x19, x20, [sp, #16]
  40d794:	ldp	x21, x22, [sp, #32]
  40d798:	ldp	x23, x24, [sp, #48]
  40d79c:	ldp	x29, x30, [sp], #64
  40d7a0:	b	42e434 <argp_usage@@Base+0xf54>
  40d7a4:	stp	x29, x30, [sp, #-288]!
  40d7a8:	mov	x29, sp
  40d7ac:	stp	x19, x20, [sp, #16]
  40d7b0:	mov	x20, x0
  40d7b4:	mov	x0, x1
  40d7b8:	add	x1, sp, #0x38
  40d7bc:	str	x21, [sp, #32]
  40d7c0:	mov	w21, w2
  40d7c4:	mov	w2, #0x844                 	// #2116
  40d7c8:	bl	4294ac <wcrtomb@plt+0x2455c>
  40d7cc:	cbz	w0, 40d810 <wcrtomb@plt+0x88c0>
  40d7d0:	ldp	x19, x20, [sp, #16]
  40d7d4:	ldr	x21, [sp, #32]
  40d7d8:	ldp	x29, x30, [sp], #288
  40d7dc:	ret
  40d7e0:	ldr	x0, [sp, #64]
  40d7e4:	mov	w2, w21
  40d7e8:	ldr	x1, [x0, x19, lsl #3]
  40d7ec:	add	x19, x19, #0x1
  40d7f0:	mov	x0, x20
  40d7f4:	bl	42e434 <argp_usage@@Base+0xf54>
  40d7f8:	ldr	x0, [sp, #56]
  40d7fc:	cmp	x0, x19
  40d800:	b.hi	40d7e0 <wcrtomb@plt+0x8890>  // b.pmore
  40d804:	add	x0, sp, #0x38
  40d808:	bl	426d30 <wcrtomb@plt+0x21de0>
  40d80c:	b	40d7d0 <wcrtomb@plt+0x8880>
  40d810:	mov	x19, #0x0                   	// #0
  40d814:	b	40d7f8 <wcrtomb@plt+0x88a8>
  40d818:	stp	x29, x30, [sp, #-48]!
  40d81c:	mov	x29, sp
  40d820:	stp	x19, x20, [sp, #16]
  40d824:	mov	x20, x0
  40d828:	str	x21, [sp, #32]
  40d82c:	mov	w21, w1
  40d830:	bl	404280 <strlen@plt>
  40d834:	add	x0, x0, #0x10
  40d838:	bl	436d44 <argp_usage@@Base+0x9864>
  40d83c:	str	xzr, [x0]
  40d840:	str	w21, [x0, #8]
  40d844:	mov	x1, x20
  40d848:	mov	x19, x0
  40d84c:	add	x0, x0, #0xc
  40d850:	bl	404c40 <strcpy@plt>
  40d854:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d858:	add	x0, x0, #0x808
  40d85c:	ldr	x1, [x0, #8]
  40d860:	cbz	x1, 40d87c <wcrtomb@plt+0x892c>
  40d864:	str	x19, [x1]
  40d868:	ldr	x21, [sp, #32]
  40d86c:	str	x19, [x0, #8]
  40d870:	ldp	x19, x20, [sp, #16]
  40d874:	ldp	x29, x30, [sp], #48
  40d878:	ret
  40d87c:	str	x19, [x0, #16]
  40d880:	b	40d868 <wcrtomb@plt+0x8918>
  40d884:	stp	x29, x30, [sp, #-96]!
  40d888:	mov	x29, sp
  40d88c:	stp	x23, x24, [sp, #48]
  40d890:	ldr	x23, [x0, #416]
  40d894:	stp	x19, x20, [sp, #16]
  40d898:	stp	x21, x22, [sp, #32]
  40d89c:	stp	x25, x26, [sp, #64]
  40d8a0:	stp	x27, x28, [sp, #80]
  40d8a4:	cbnz	x23, 40d8d0 <wcrtomb@plt+0x8980>
  40d8a8:	mov	x19, x0
  40d8ac:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d8b0:	adrp	x24, 44a000 <_obstack_memory_used@@Base+0x12380>
  40d8b4:	adrp	x25, 447000 <_obstack_memory_used@@Base+0xf380>
  40d8b8:	ldr	x21, [x0, #2072]
  40d8bc:	add	x24, x24, #0xb66
  40d8c0:	add	x25, x25, #0xadd
  40d8c4:	mov	x20, #0x0                   	// #0
  40d8c8:	cbnz	x21, 40d8ec <wcrtomb@plt+0x899c>
  40d8cc:	str	x23, [x19, #416]
  40d8d0:	ldp	x19, x20, [sp, #16]
  40d8d4:	ldp	x21, x22, [sp, #32]
  40d8d8:	ldp	x23, x24, [sp, #48]
  40d8dc:	ldp	x25, x26, [sp, #64]
  40d8e0:	ldp	x27, x28, [sp, #80]
  40d8e4:	ldp	x29, x30, [sp], #96
  40d8e8:	ret
  40d8ec:	ldr	w0, [x19, #408]
  40d8f0:	add	x27, x21, #0xc
  40d8f4:	mov	x1, x27
  40d8f8:	mov	w3, #0x0                   	// #0
  40d8fc:	mov	w2, #0x0                   	// #0
  40d900:	bl	404de0 <faccessat@plt>
  40d904:	cbnz	w0, 40d92c <wcrtomb@plt+0x89dc>
  40d908:	mov	x1, x27
  40d90c:	mov	x0, x19
  40d910:	mov	w2, #0x0                   	// #0
  40d914:	bl	40b8bc <wcrtomb@plt+0x696c>
  40d918:	mov	w22, w0
  40d91c:	cmn	w0, #0x1
  40d920:	b.ne	40d934 <wcrtomb@plt+0x89e4>  // b.any
  40d924:	mov	x0, x27
  40d928:	bl	424e5c <wcrtomb@plt+0x1ff0c>
  40d92c:	ldr	x21, [x21]
  40d930:	b	40d8c8 <wcrtomb@plt+0x8978>
  40d934:	mov	x1, x24
  40d938:	bl	404710 <fdopen@plt>
  40d93c:	mov	x28, x0
  40d940:	cbnz	x0, 40d998 <wcrtomb@plt+0x8a48>
  40d944:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40d948:	ldr	x0, [x0, #1016]
  40d94c:	cbz	x0, 40d954 <wcrtomb@plt+0x8a04>
  40d950:	blr	x0
  40d954:	bl	404e10 <__errno_location@plt>
  40d958:	ldr	w28, [x0]
  40d95c:	mov	x1, x25
  40d960:	mov	w2, #0x5                   	// #5
  40d964:	mov	x0, #0x0                   	// #0
  40d968:	bl	404d00 <dcgettext@plt>
  40d96c:	mov	w1, w28
  40d970:	mov	x2, x0
  40d974:	mov	x3, x27
  40d978:	mov	w0, #0x0                   	// #0
  40d97c:	bl	4042e0 <error@plt>
  40d980:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40d984:	mov	w1, #0x2                   	// #2
  40d988:	str	w1, [x0, #3464]
  40d98c:	mov	w0, w22
  40d990:	bl	4048c0 <close@plt>
  40d994:	b	40d92c <wcrtomb@plt+0x89dc>
  40d998:	bl	42e168 <argp_usage@@Base+0xc88>
  40d99c:	mov	x22, x0
  40d9a0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  40d9a4:	add	x26, x0, #0x808
  40d9a8:	ldr	x0, [x26]
  40d9ac:	cbnz	x0, 40da20 <wcrtomb@plt+0x8ad0>
  40d9b0:	ldr	x1, [x26, #24]
  40d9b4:	cbz	x1, 40d9c4 <wcrtomb@plt+0x8a74>
  40d9b8:	ldr	x0, [x26, #32]
  40d9bc:	blr	x1
  40d9c0:	str	x0, [x26, #32]
  40d9c4:	ldr	x0, [x26, #16]
  40d9c8:	mov	x2, x28
  40d9cc:	ldr	x5, [x26, #32]
  40d9d0:	mov	x1, x22
  40d9d4:	mov	w4, #0xa                   	// #10
  40d9d8:	mov	w3, #0x50000000            	// #1342177280
  40d9dc:	bl	42e6dc <argp_usage@@Base+0x11fc>
  40d9e0:	cbz	w0, 40da34 <wcrtomb@plt+0x8ae4>
  40d9e4:	bl	404e10 <__errno_location@plt>
  40d9e8:	ldr	w19, [x0]
  40d9ec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40d9f0:	ldr	x0, [x0, #1016]
  40d9f4:	cbz	x0, 40d9fc <wcrtomb@plt+0x8aac>
  40d9f8:	blr	x0
  40d9fc:	mov	x0, x27
  40da00:	bl	436084 <argp_usage@@Base+0x8ba4>
  40da04:	mov	w1, w19
  40da08:	mov	x3, x0
  40da0c:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  40da10:	add	x2, x2, #0xb0d
  40da14:	mov	w0, #0x0                   	// #0
  40da18:	bl	4042e0 <error@plt>
  40da1c:	bl	40d47c <wcrtomb@plt+0x852c>
  40da20:	mov	x1, x27
  40da24:	bl	404a30 <strcmp@plt>
  40da28:	cbz	w0, 40d9b0 <wcrtomb@plt+0x8a60>
  40da2c:	add	x26, x26, #0x28
  40da30:	b	40d9a8 <wcrtomb@plt+0x8a58>
  40da34:	mov	x0, x28
  40da38:	bl	404570 <fclose@plt>
  40da3c:	mov	x0, #0x20                  	// #32
  40da40:	bl	436d44 <argp_usage@@Base+0x9864>
  40da44:	ldr	w1, [x21, #8]
  40da48:	str	x22, [x0, #24]
  40da4c:	cbz	w1, 40da54 <wcrtomb@plt+0x8b04>
  40da50:	ldr	w1, [x26, #8]
  40da54:	stp	xzr, x20, [x0]
  40da58:	str	w1, [x0, #16]
  40da5c:	cbz	x20, 40da6c <wcrtomb@plt+0x8b1c>
  40da60:	str	x0, [x20]
  40da64:	mov	x20, x0
  40da68:	b	40d92c <wcrtomb@plt+0x89dc>
  40da6c:	mov	x20, x0
  40da70:	mov	x23, x0
  40da74:	b	40d92c <wcrtomb@plt+0x89dc>
  40da78:	stp	x29, x30, [sp, #-48]!
  40da7c:	mov	x29, sp
  40da80:	stp	x19, x20, [sp, #16]
  40da84:	mov	x20, x0
  40da88:	ldr	x19, [x0, #416]
  40da8c:	str	x21, [sp, #32]
  40da90:	cbnz	x19, 40daa8 <wcrtomb@plt+0x8b58>
  40da94:	ldr	x21, [sp, #32]
  40da98:	str	xzr, [x20, #416]
  40da9c:	ldp	x19, x20, [sp, #16]
  40daa0:	ldp	x29, x30, [sp], #48
  40daa4:	ret
  40daa8:	ldr	x0, [x19, #24]
  40daac:	ldr	x21, [x19]
  40dab0:	bl	42e170 <argp_usage@@Base+0xc90>
  40dab4:	mov	x0, x19
  40dab8:	mov	x19, x21
  40dabc:	bl	404ae0 <free@plt>
  40dac0:	b	40da90 <wcrtomb@plt+0x8b40>
  40dac4:	stp	x29, x30, [sp, #-80]!
  40dac8:	mov	x29, sp
  40dacc:	stp	x19, x20, [sp, #16]
  40dad0:	mov	x20, x1
  40dad4:	mov	x1, x0
  40dad8:	stp	x23, x24, [sp, #48]
  40dadc:	mov	x23, x0
  40dae0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40dae4:	stp	x21, x22, [sp, #32]
  40dae8:	ldr	x0, [x0, #72]
  40daec:	str	x25, [sp, #64]
  40daf0:	bl	42e2cc <argp_usage@@Base+0xdec>
  40daf4:	ands	w0, w0, #0xff
  40daf8:	b.ne	40db40 <wcrtomb@plt+0x8bf0>  // b.any
  40dafc:	cbz	x20, 40db40 <wcrtomb@plt+0x8bf0>
  40db00:	mov	w25, #0x0                   	// #0
  40db04:	mov	x24, #0x0                   	// #0
  40db08:	mov	x21, #0x0                   	// #0
  40db0c:	ldr	x22, [x20, #416]
  40db10:	cbnz	x22, 40db58 <wcrtomb@plt+0x8c08>
  40db14:	mov	w19, #0x0                   	// #0
  40db18:	ldr	x20, [x20, #392]
  40db1c:	eor	w0, w19, #0x1
  40db20:	mov	w25, #0x2                   	// #2
  40db24:	cmp	x20, #0x0
  40db28:	cset	w1, ne  // ne = any
  40db2c:	tst	w1, w0
  40db30:	b.ne	40db0c <wcrtomb@plt+0x8bbc>  // b.any
  40db34:	mov	x0, x24
  40db38:	bl	404ae0 <free@plt>
  40db3c:	mov	w0, w19
  40db40:	ldp	x19, x20, [sp, #16]
  40db44:	ldp	x21, x22, [sp, #32]
  40db48:	ldp	x23, x24, [sp, #48]
  40db4c:	ldr	x25, [sp, #64]
  40db50:	ldp	x29, x30, [sp], #80
  40db54:	ret
  40db58:	ldr	w0, [x22, #16]
  40db5c:	tst	w25, w0
  40db60:	b.ne	40dbd8 <wcrtomb@plt+0x8c88>  // b.any
  40db64:	ldr	x0, [x22, #24]
  40db68:	mov	x1, x23
  40db6c:	bl	42e2cc <argp_usage@@Base+0xdec>
  40db70:	ands	w19, w0, #0xff
  40db74:	b.ne	40db18 <wcrtomb@plt+0x8bc8>  // b.any
  40db78:	cbnz	x21, 40dba0 <wcrtomb@plt+0x8c50>
  40db7c:	mov	x21, x23
  40db80:	b	40db88 <wcrtomb@plt+0x8c38>
  40db84:	add	x21, x21, #0x2
  40db88:	ldrb	w0, [x21]
  40db8c:	cmp	w0, #0x2e
  40db90:	b.ne	40dba0 <wcrtomb@plt+0x8c50>  // b.any
  40db94:	ldrb	w0, [x21, #1]
  40db98:	cmp	w0, #0x2f
  40db9c:	b.eq	40db84 <wcrtomb@plt+0x8c34>  // b.none
  40dba0:	ldr	x0, [x22, #24]
  40dba4:	mov	x1, x21
  40dba8:	bl	42e2cc <argp_usage@@Base+0xdec>
  40dbac:	ands	w19, w0, #0xff
  40dbb0:	b.ne	40db18 <wcrtomb@plt+0x8bc8>  // b.any
  40dbb4:	cbnz	x24, 40dbc4 <wcrtomb@plt+0x8c74>
  40dbb8:	mov	x0, x23
  40dbbc:	bl	42dccc <argp_usage@@Base+0x7ec>
  40dbc0:	mov	x24, x0
  40dbc4:	ldr	x0, [x22, #24]
  40dbc8:	mov	x1, x24
  40dbcc:	bl	42e2cc <argp_usage@@Base+0xdec>
  40dbd0:	ands	w19, w0, #0xff
  40dbd4:	b.ne	40db18 <wcrtomb@plt+0x8bc8>  // b.any
  40dbd8:	ldr	x22, [x22]
  40dbdc:	b	40db10 <wcrtomb@plt+0x8bc0>
  40dbe0:	stp	x29, x30, [sp, #-32]!
  40dbe4:	mov	x29, sp
  40dbe8:	str	x19, [sp, #16]
  40dbec:	adrp	x19, 46e000 <_obstack_memory_used@@Base+0x36380>
  40dbf0:	add	x19, x19, #0x808
  40dbf4:	ldr	x0, [x19]
  40dbf8:	cbnz	x0, 40dc08 <wcrtomb@plt+0x8cb8>
  40dbfc:	ldr	x19, [sp, #16]
  40dc00:	ldp	x29, x30, [sp], #32
  40dc04:	ret
  40dc08:	mov	w1, #0x0                   	// #0
  40dc0c:	add	x19, x19, #0x28
  40dc10:	bl	40d818 <wcrtomb@plt+0x88c8>
  40dc14:	b	40dbf4 <wcrtomb@plt+0x8ca4>
  40dc18:	mov	w0, #0x1                   	// #1
  40dc1c:	ret
  40dc20:	stp	x29, x30, [sp, #-32]!
  40dc24:	mov	x29, sp
  40dc28:	str	x19, [sp, #16]
  40dc2c:	mov	x19, x0
  40dc30:	ldr	x0, [x0, #160]
  40dc34:	bl	404ae0 <free@plt>
  40dc38:	ldp	x1, x0, [x19, #136]
  40dc3c:	bl	411f54 <wcrtomb@plt+0xd004>
  40dc40:	ldr	x0, [x19, #96]
  40dc44:	bl	404ae0 <free@plt>
  40dc48:	ldr	x0, [x19, #104]
  40dc4c:	bl	404ae0 <free@plt>
  40dc50:	ldr	x0, [x19, #120]
  40dc54:	bl	404ae0 <free@plt>
  40dc58:	mov	x0, x19
  40dc5c:	ldr	x19, [sp, #16]
  40dc60:	ldp	x29, x30, [sp], #32
  40dc64:	b	404ae0 <free@plt>
  40dc68:	stp	x29, x30, [sp, #-16]!
  40dc6c:	mov	x29, sp
  40dc70:	bl	417070 <wcrtomb@plt+0x12120>
  40dc74:	mov	w0, #0x0                   	// #0
  40dc78:	ldp	x29, x30, [sp], #16
  40dc7c:	ret
  40dc80:	stp	x29, x30, [sp, #-112]!
  40dc84:	mov	x29, sp
  40dc88:	stp	x19, x20, [sp, #16]
  40dc8c:	mov	x20, x1
  40dc90:	mov	x19, x2
  40dc94:	stp	x21, x22, [sp, #32]
  40dc98:	stp	x23, x24, [sp, #48]
  40dc9c:	mov	x23, x0
  40dca0:	tbz	x1, #63, 40dd14 <wcrtomb@plt+0x8dc4>
  40dca4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40dca8:	ldr	w0, [x0, #480]
  40dcac:	tbz	w0, #15, 40dd00 <wcrtomb@plt+0x8db0>
  40dcb0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40dcb4:	ldr	x0, [x0, #1016]
  40dcb8:	cbz	x0, 40dcc0 <wcrtomb@plt+0x8d70>
  40dcbc:	blr	x0
  40dcc0:	mov	w2, #0x5                   	// #5
  40dcc4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40dcc8:	mov	x0, #0x0                   	// #0
  40dccc:	add	x1, x1, #0xb1a
  40dcd0:	bl	404d00 <dcgettext@plt>
  40dcd4:	mov	x21, x0
  40dcd8:	mov	x1, x19
  40dcdc:	mov	w2, #0x1                   	// #1
  40dce0:	mov	x0, x20
  40dce4:	bl	416698 <wcrtomb@plt+0x11748>
  40dce8:	mov	x3, x23
  40dcec:	mov	x4, x0
  40dcf0:	mov	x2, x21
  40dcf4:	mov	w1, #0x0                   	// #0
  40dcf8:	mov	w0, #0x0                   	// #0
  40dcfc:	bl	4042e0 <error@plt>
  40dd00:	ldp	x19, x20, [sp, #16]
  40dd04:	ldp	x21, x22, [sp, #32]
  40dd08:	ldp	x23, x24, [sp, #48]
  40dd0c:	ldp	x29, x30, [sp], #112
  40dd10:	ret
  40dd14:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40dd18:	add	x0, x0, #0x3b0
  40dd1c:	mov	x2, x1
  40dd20:	mov	x3, x19
  40dd24:	ldp	x0, x1, [x0]
  40dd28:	bl	43683c <argp_usage@@Base+0x935c>
  40dd2c:	tbz	w0, #31, 40dd00 <wcrtomb@plt+0x8db0>
  40dd30:	add	x0, sp, #0x40
  40dd34:	bl	42fdac <argp_usage@@Base+0x28cc>
  40dd38:	ldp	x0, x1, [sp, #64]
  40dd3c:	mov	x2, x20
  40dd40:	mov	x3, x19
  40dd44:	bl	43683c <argp_usage@@Base+0x935c>
  40dd48:	tbz	w0, #31, 40dd00 <wcrtomb@plt+0x8db0>
  40dd4c:	ldp	x22, x21, [sp, #64]
  40dd50:	sub	x22, x20, x22
  40dd54:	subs	x21, x19, x21
  40dd58:	b.pl	40dd6c <wcrtomb@plt+0x8e1c>  // b.nfrst
  40dd5c:	mov	x0, #0xca00                	// #51712
  40dd60:	sub	x22, x22, #0x1
  40dd64:	movk	x0, #0x3b9a, lsl #16
  40dd68:	add	x21, x21, x0
  40dd6c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40dd70:	ldr	w0, [x0, #480]
  40dd74:	tbz	w0, #15, 40dd00 <wcrtomb@plt+0x8db0>
  40dd78:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40dd7c:	ldr	x0, [x0, #1016]
  40dd80:	cbz	x0, 40dd88 <wcrtomb@plt+0x8e38>
  40dd84:	blr	x0
  40dd88:	mov	w2, #0x5                   	// #5
  40dd8c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40dd90:	mov	x0, #0x0                   	// #0
  40dd94:	add	x1, x1, #0xb3c
  40dd98:	bl	404d00 <dcgettext@plt>
  40dd9c:	mov	x24, x0
  40dda0:	mov	x1, x19
  40dda4:	mov	x0, x20
  40dda8:	mov	w2, #0x1                   	// #1
  40ddac:	bl	416698 <wcrtomb@plt+0x11748>
  40ddb0:	add	x2, sp, #0x50
  40ddb4:	mov	x19, x0
  40ddb8:	mov	x1, x21
  40ddbc:	mov	x0, x22
  40ddc0:	bl	4182c4 <wcrtomb@plt+0x13374>
  40ddc4:	mov	x5, x0
  40ddc8:	mov	x4, x19
  40ddcc:	mov	x3, x23
  40ddd0:	mov	x2, x24
  40ddd4:	mov	w1, #0x0                   	// #0
  40ddd8:	mov	w0, #0x0                   	// #0
  40dddc:	bl	4042e0 <error@plt>
  40dde0:	b	40dd00 <wcrtomb@plt+0x8db0>
  40dde4:	stp	x29, x30, [sp, #-160]!
  40dde8:	mov	x29, sp
  40ddec:	stp	x19, x20, [sp, #16]
  40ddf0:	mov	x19, x0
  40ddf4:	mov	w20, #0x1                   	// #1
  40ddf8:	ldr	x0, [x19, #160]
  40ddfc:	strb	w20, [x19, #88]
  40de00:	add	x1, sp, #0x20
  40de04:	bl	4186c8 <wcrtomb@plt+0x13778>
  40de08:	cbz	w0, 40de30 <wcrtomb@plt+0x8ee0>
  40de0c:	ldr	x0, [x19, #160]
  40de10:	bl	4252dc <wcrtomb@plt+0x2038c>
  40de14:	ldr	x19, [x19]
  40de18:	cbz	x19, 40de24 <wcrtomb@plt+0x8ed4>
  40de1c:	ldrb	w0, [x19, #88]
  40de20:	cbz	w0, 40ddf8 <wcrtomb@plt+0x8ea8>
  40de24:	ldp	x19, x20, [sp, #16]
  40de28:	ldp	x29, x30, [sp], #160
  40de2c:	ret
  40de30:	ldr	x0, [sp, #32]
  40de34:	str	x0, [x19, #8]
  40de38:	ldr	x0, [sp, #40]
  40de3c:	str	x0, [x19, #16]
  40de40:	b	40de14 <wcrtomb@plt+0x8ec4>
  40de44:	stp	x29, x30, [sp, #-80]!
  40de48:	mov	x29, sp
  40de4c:	stp	x19, x20, [sp, #16]
  40de50:	mov	x20, x1
  40de54:	stp	x21, x22, [sp, #32]
  40de58:	mov	x21, x0
  40de5c:	stp	x23, x24, [sp, #48]
  40de60:	mov	w23, w4
  40de64:	mov	w24, w3
  40de68:	stp	x25, x26, [sp, #64]
  40de6c:	mov	w25, w2
  40de70:	mov	w26, w5
  40de74:	bl	404280 <strlen@plt>
  40de78:	mov	x22, x0
  40de7c:	mov	x0, #0xa8                  	// #168
  40de80:	bl	436d44 <argp_usage@@Base+0x9864>
  40de84:	mov	x19, x0
  40de88:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40de8c:	ldr	x1, [x0, #2080]
  40de90:	str	x1, [x19]
  40de94:	str	w23, [x19, #24]
  40de98:	mov	x23, x0
  40de9c:	cbz	x20, 40dec8 <wcrtomb@plt+0x8f78>
  40dea0:	ldr	x0, [x20, #88]
  40dea4:	str	x0, [x19, #8]
  40dea8:	ldr	x0, [x20, #96]
  40deac:	str	x0, [x19, #16]
  40deb0:	ldr	x0, [x20, #112]
  40deb4:	stur	x0, [x19, #28]
  40deb8:	ldp	x0, x1, [x20, #216]
  40debc:	stp	x0, x1, [x19, #40]
  40dec0:	ldp	x0, x1, [x20, #232]
  40dec4:	stp	x0, x1, [x19, #56]
  40dec8:	mov	x0, x21
  40decc:	str	x22, [x19, #152]
  40ded0:	bl	436f10 <argp_usage@@Base+0x9a30>
  40ded4:	cmp	x20, #0x0
  40ded8:	str	x0, [x19, #160]
  40dedc:	cset	w0, eq  // eq = none
  40dee0:	strb	w0, [x19, #80]
  40dee4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40dee8:	stp	w25, w24, [x19, #72]
  40deec:	str	w26, [x19, #84]
  40def0:	ldr	w0, [x0, #8]
  40def4:	strb	wzr, [x19, #88]
  40def8:	str	w0, [x19, #92]
  40defc:	str	xzr, [x19, #96]
  40df00:	cbz	x20, 40df9c <wcrtomb@plt+0x904c>
  40df04:	ldr	x1, [x20, #48]
  40df08:	add	x0, x19, #0x60
  40df0c:	bl	417c2c <wcrtomb@plt+0x12cdc>
  40df10:	ldr	x0, [x20, #56]
  40df14:	cbz	x0, 40df9c <wcrtomb@plt+0x904c>
  40df18:	ldr	x1, [x20, #64]
  40df1c:	add	x1, x1, #0x1
  40df20:	bl	436ee0 <argp_usage@@Base+0x9a00>
  40df24:	str	x0, [x19, #104]
  40df28:	ldr	x0, [x20, #64]
  40df2c:	str	x0, [x19, #112]
  40df30:	ldr	x0, [x20, #72]
  40df34:	cbz	x0, 40dfa4 <wcrtomb@plt+0x9054>
  40df38:	ldr	x1, [x20, #80]
  40df3c:	add	x1, x1, #0x1
  40df40:	bl	436ee0 <argp_usage@@Base+0x9a00>
  40df44:	str	x0, [x19, #120]
  40df48:	ldr	x0, [x20, #80]
  40df4c:	str	x0, [x19, #128]
  40df50:	add	x2, x19, #0x88
  40df54:	add	x1, x19, #0x90
  40df58:	mov	x0, x20
  40df5c:	bl	41213c <wcrtomb@plt+0xd1ec>
  40df60:	ldr	x0, [x19, #160]
  40df64:	mov	x1, x21
  40df68:	bl	404c40 <strcpy@plt>
  40df6c:	str	x19, [x23, #2080]
  40df70:	mov	x0, x21
  40df74:	bl	4184bc <wcrtomb@plt+0x1356c>
  40df78:	tst	w0, #0xff
  40df7c:	b.eq	40dfb4 <wcrtomb@plt+0x9064>  // b.none
  40df80:	mov	x0, x19
  40df84:	ldp	x19, x20, [sp, #16]
  40df88:	ldp	x21, x22, [sp, #32]
  40df8c:	ldp	x23, x24, [sp, #48]
  40df90:	ldp	x25, x26, [sp, #64]
  40df94:	ldp	x29, x30, [sp], #80
  40df98:	b	40dde4 <wcrtomb@plt+0x8e94>
  40df9c:	stp	xzr, xzr, [x19, #104]
  40dfa0:	cbnz	x20, 40df30 <wcrtomb@plt+0x8fe0>
  40dfa4:	stp	xzr, xzr, [x19, #120]
  40dfa8:	cbnz	x20, 40df50 <wcrtomb@plt+0x9000>
  40dfac:	stp	xzr, xzr, [x19, #136]
  40dfb0:	b	40df60 <wcrtomb@plt+0x9010>
  40dfb4:	ldp	x19, x20, [sp, #16]
  40dfb8:	ldp	x21, x22, [sp, #32]
  40dfbc:	ldp	x23, x24, [sp, #48]
  40dfc0:	ldp	x25, x26, [sp, #64]
  40dfc4:	ldp	x29, x30, [sp], #80
  40dfc8:	ret
  40dfcc:	stp	x29, x30, [sp, #-208]!
  40dfd0:	mov	x29, sp
  40dfd4:	stp	x19, x20, [sp, #16]
  40dfd8:	mov	x20, x0
  40dfdc:	mov	x19, x0
  40dfe0:	stp	x21, x22, [sp, #32]
  40dfe4:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  40dfe8:	add	x22, x22, #0x820
  40dfec:	stp	x23, x24, [sp, #48]
  40dff0:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x36380>
  40dff4:	mov	x24, x1
  40dff8:	add	x23, x23, #0x8d8
  40dffc:	stp	x25, x26, [sp, #64]
  40e000:	ldrb	w0, [x19]
  40e004:	cbnz	w0, 40e010 <wcrtomb@plt+0x90c0>
  40e008:	mov	w21, #0x0                   	// #0
  40e00c:	b	40e134 <wcrtomb@plt+0x91e4>
  40e010:	cmp	w0, #0x2f
  40e014:	b.ne	40e0e4 <wcrtomb@plt+0x9194>  // b.any
  40e018:	cmp	x19, x20
  40e01c:	b.eq	40e0e4 <wcrtomb@plt+0x9194>  // b.none
  40e020:	ldurb	w0, [x19, #-1]
  40e024:	cmp	w0, #0x2f
  40e028:	b.eq	40e0e4 <wcrtomb@plt+0x9194>  // b.none
  40e02c:	cmp	w0, #0x2e
  40e030:	b.ne	40e06c <wcrtomb@plt+0x911c>  // b.any
  40e034:	add	x0, x20, #0x1
  40e038:	cmp	x19, x0
  40e03c:	b.eq	40e0e4 <wcrtomb@plt+0x9194>  // b.none
  40e040:	ldurb	w0, [x19, #-2]
  40e044:	cmp	w0, #0x2f
  40e048:	b.eq	40e0e4 <wcrtomb@plt+0x9194>  // b.none
  40e04c:	cmp	w0, #0x2e
  40e050:	b.ne	40e06c <wcrtomb@plt+0x911c>  // b.any
  40e054:	add	x0, x20, #0x2
  40e058:	cmp	x19, x0
  40e05c:	b.eq	40e0e4 <wcrtomb@plt+0x9194>  // b.none
  40e060:	ldurb	w0, [x19, #-3]
  40e064:	cmp	w0, #0x2f
  40e068:	b.eq	40e0e4 <wcrtomb@plt+0x9194>  // b.none
  40e06c:	ldrb	w0, [x22, #12]
  40e070:	mov	w25, #0xc0                  	// #192
  40e074:	strb	wzr, [x19]
  40e078:	mov	x1, x20
  40e07c:	ldr	w21, [x22, #8]
  40e080:	cmp	w0, #0x0
  40e084:	ldr	w0, [x23]
  40e088:	csel	w25, wzr, w25, ne  // ne = any
  40e08c:	mvn	w21, w21
  40e090:	and	w21, w21, #0x1ff
  40e094:	orr	w25, w25, w21
  40e098:	mov	w2, w25
  40e09c:	bl	404530 <mkdirat@plt>
  40e0a0:	cbnz	w0, 40e0ec <wcrtomb@plt+0x919c>
  40e0a4:	ldr	w2, [x22, #16]
  40e0a8:	mov	w4, w21
  40e0ac:	mov	w5, #0x100                 	// #256
  40e0b0:	mov	w3, #0x1ff                 	// #511
  40e0b4:	mov	x0, x20
  40e0b8:	bic	w2, w25, w2
  40e0bc:	mov	x1, #0x0                   	// #0
  40e0c0:	bl	40de44 <wcrtomb@plt+0x8ef4>
  40e0c4:	mov	x0, x20
  40e0c8:	mov	w2, w21
  40e0cc:	sub	w1, w19, w20
  40e0d0:	bl	416ee0 <wcrtomb@plt+0x11f90>
  40e0d4:	mov	w0, #0x1                   	// #1
  40e0d8:	strb	w0, [x24]
  40e0dc:	mov	w0, #0x2f                  	// #47
  40e0e0:	strb	w0, [x19]
  40e0e4:	add	x19, x19, #0x1
  40e0e8:	b	40e000 <wcrtomb@plt+0x90b0>
  40e0ec:	bl	404e10 <__errno_location@plt>
  40e0f0:	ldr	w26, [x0]
  40e0f4:	mov	x25, x0
  40e0f8:	cmp	w26, #0x11
  40e0fc:	b.eq	40e0dc <wcrtomb@plt+0x918c>  // b.none
  40e100:	ldr	w0, [x23]
  40e104:	add	x2, sp, #0x50
  40e108:	mov	x1, x20
  40e10c:	mov	w3, #0x0                   	// #0
  40e110:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40e114:	mov	w21, w0
  40e118:	cbz	w0, 40e128 <wcrtomb@plt+0x91d8>
  40e11c:	str	w26, [x25]
  40e120:	mov	x0, x20
  40e124:	bl	424e2c <wcrtomb@plt+0x1fedc>
  40e128:	mov	w0, #0x2f                  	// #47
  40e12c:	strb	w0, [x19]
  40e130:	cbz	w21, 40e0e4 <wcrtomb@plt+0x9194>
  40e134:	mov	w0, w21
  40e138:	ldp	x19, x20, [sp, #16]
  40e13c:	ldp	x21, x22, [sp, #32]
  40e140:	ldp	x23, x24, [sp, #48]
  40e144:	ldp	x25, x26, [sp, #64]
  40e148:	ldp	x29, x30, [sp], #208
  40e14c:	ret
  40e150:	stp	x29, x30, [sp, #-48]!
  40e154:	mov	x29, sp
  40e158:	stp	x19, x20, [sp, #16]
  40e15c:	mov	w20, w2
  40e160:	stp	x21, x22, [sp, #32]
  40e164:	mov	x21, x1
  40e168:	mov	w22, w3
  40e16c:	tbz	w0, #31, 40e194 <wcrtomb@plt+0x9244>
  40e170:	mov	w3, w22
  40e174:	mov	w2, w20
  40e178:	mov	x1, x21
  40e17c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  40e180:	ldp	x19, x20, [sp, #16]
  40e184:	ldp	x21, x22, [sp, #32]
  40e188:	ldp	x29, x30, [sp], #48
  40e18c:	ldr	w0, [x0, #2264]
  40e190:	b	404e80 <fchmodat@plt>
  40e194:	mov	w1, w2
  40e198:	bl	404760 <fchmod@plt>
  40e19c:	mov	w19, w0
  40e1a0:	cbz	w0, 40e1bc <wcrtomb@plt+0x926c>
  40e1a4:	bl	404e10 <__errno_location@plt>
  40e1a8:	ldr	w0, [x0]
  40e1ac:	mov	w1, #0x5f                  	// #95
  40e1b0:	cmp	w0, #0x26
  40e1b4:	ccmp	w0, w1, #0x4, ne  // ne = any
  40e1b8:	b.eq	40e170 <wcrtomb@plt+0x9220>  // b.none
  40e1bc:	mov	w0, w19
  40e1c0:	ldp	x19, x20, [sp, #16]
  40e1c4:	ldp	x21, x22, [sp, #32]
  40e1c8:	ldp	x29, x30, [sp], #48
  40e1cc:	ret
  40e1d0:	stp	x29, x30, [sp, #-224]!
  40e1d4:	mov	x29, sp
  40e1d8:	stp	x19, x20, [sp, #16]
  40e1dc:	mov	x19, x0
  40e1e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40e1e4:	stp	x21, x22, [sp, #32]
  40e1e8:	mov	w20, w3
  40e1ec:	ldrb	w0, [x0, #560]
  40e1f0:	stp	x23, x24, [sp, #48]
  40e1f4:	mov	x22, x1
  40e1f8:	mov	w23, w2
  40e1fc:	stp	x25, x26, [sp, #64]
  40e200:	and	w24, w5, #0xff
  40e204:	mov	w26, w4
  40e208:	stp	x27, x28, [sp, #80]
  40e20c:	mov	w25, w7
  40e210:	and	w27, w6, #0xff
  40e214:	cbnz	w0, 40e27c <wcrtomb@plt+0x932c>
  40e218:	cbnz	w27, 40e27c <wcrtomb@plt+0x932c>
  40e21c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40e220:	mov	x21, x0
  40e224:	ldrb	w1, [x0, #41]
  40e228:	cbz	w1, 40e384 <wcrtomb@plt+0x9434>
  40e22c:	ldp	x0, x1, [x22, #216]
  40e230:	stp	x0, x1, [sp, #96]
  40e234:	mov	w4, w25
  40e238:	ldp	x0, x1, [x22, #232]
  40e23c:	stp	x0, x1, [sp, #112]
  40e240:	add	x3, sp, #0x60
  40e244:	mov	x2, x19
  40e248:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  40e24c:	ldr	w1, [x0, #2264]
  40e250:	mov	w0, w23
  40e254:	bl	42e910 <argp_usage@@Base+0x1430>
  40e258:	cbnz	w0, 40e390 <wcrtomb@plt+0x9440>
  40e25c:	ldrb	w0, [x21, #41]
  40e260:	cbz	w0, 40e270 <wcrtomb@plt+0x9320>
  40e264:	ldp	x1, x2, [sp, #96]
  40e268:	mov	x0, x19
  40e26c:	bl	40dc80 <wcrtomb@plt+0x8d30>
  40e270:	ldp	x1, x2, [sp, #112]
  40e274:	mov	x0, x19
  40e278:	bl	40dc80 <wcrtomb@plt+0x8d30>
  40e27c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40e280:	ldr	w0, [x0, #988]
  40e284:	cmp	w0, #0x0
  40e288:	b.le	40e2c8 <wcrtomb@plt+0x9378>
  40e28c:	cbnz	w27, 40e2c8 <wcrtomb@plt+0x9378>
  40e290:	ldp	w21, w28, [x22, #112]
  40e294:	tbz	w23, #31, 40e3bc <wcrtomb@plt+0x946c>
  40e298:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  40e29c:	mov	w4, w25
  40e2a0:	mov	w3, w28
  40e2a4:	mov	w2, w21
  40e2a8:	ldr	w0, [x0, #2264]
  40e2ac:	mov	x1, x19
  40e2b0:	bl	404b60 <fchownat@plt>
  40e2b4:	cbnz	w0, 40e3e8 <wcrtomb@plt+0x9498>
  40e2b8:	orn	w0, w20, w26
  40e2bc:	mov	w1, #0x49                  	// #73
  40e2c0:	tst	w0, w1
  40e2c4:	b.ne	40e41c <wcrtomb@plt+0x94cc>  // b.any
  40e2c8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40e2cc:	ldr	w21, [x0, #2096]
  40e2d0:	ldr	w0, [x22, #104]
  40e2d4:	bic	w21, w0, w21
  40e2d8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40e2dc:	ldr	w0, [x0, #620]
  40e2e0:	cmp	w0, #0x0
  40e2e4:	b.le	40e428 <wcrtomb@plt+0x94d8>
  40e2e8:	cmp	w27, #0x0
  40e2ec:	mov	w0, #0xfff                 	// #4095
  40e2f0:	mov	w27, #0x1ff                 	// #511
  40e2f4:	csel	w27, w27, w0, ne  // ne = any
  40e2f8:	eor	w0, w21, w20
  40e2fc:	orn	w0, w0, w26
  40e300:	tst	w0, w27
  40e304:	b.eq	40e334 <wcrtomb@plt+0x93e4>  // b.none
  40e308:	orr	w4, w26, w27
  40e30c:	mvn	w4, w4
  40e310:	tst	x4, #0xfff
  40e314:	b.eq	40e450 <wcrtomb@plt+0x9500>  // b.none
  40e318:	tbnz	w23, #31, 40e430 <wcrtomb@plt+0x94e0>
  40e31c:	add	x1, sp, #0x60
  40e320:	mov	w0, w23
  40e324:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  40e328:	cbz	w0, 40e44c <wcrtomb@plt+0x94fc>
  40e32c:	mov	x0, x19
  40e330:	bl	4252dc <wcrtomb@plt+0x2038c>
  40e334:	mov	w3, #0x1                   	// #1
  40e338:	mov	w2, w24
  40e33c:	mov	x1, x19
  40e340:	mov	x0, x22
  40e344:	bl	4245dc <wcrtomb@plt+0x1f68c>
  40e348:	mov	w2, w24
  40e34c:	mov	x1, x19
  40e350:	mov	x0, x22
  40e354:	bl	424188 <wcrtomb@plt+0x1f238>
  40e358:	mov	w2, w24
  40e35c:	mov	x1, x19
  40e360:	mov	x0, x22
  40e364:	bl	424564 <wcrtomb@plt+0x1f614>
  40e368:	ldp	x19, x20, [sp, #16]
  40e36c:	ldp	x21, x22, [sp, #32]
  40e370:	ldp	x23, x24, [sp, #48]
  40e374:	ldp	x25, x26, [sp, #64]
  40e378:	ldp	x27, x28, [sp, #80]
  40e37c:	ldp	x29, x30, [sp], #224
  40e380:	ret
  40e384:	mov	x0, #0x3ffffffe            	// #1073741822
  40e388:	str	x0, [sp, #104]
  40e38c:	b	40e234 <wcrtomb@plt+0x92e4>
  40e390:	cmp	w24, #0x32
  40e394:	b.ne	40e3b0 <wcrtomb@plt+0x9460>  // b.any
  40e398:	bl	404e10 <__errno_location@plt>
  40e39c:	ldr	w0, [x0]
  40e3a0:	mov	w1, #0x26                  	// #38
  40e3a4:	cmp	w0, #0x5f
  40e3a8:	ccmp	w0, w1, #0x4, ne  // ne = any
  40e3ac:	b.eq	40e27c <wcrtomb@plt+0x932c>  // b.none
  40e3b0:	mov	x0, x19
  40e3b4:	bl	42532c <wcrtomb@plt+0x203dc>
  40e3b8:	b	40e27c <wcrtomb@plt+0x932c>
  40e3bc:	mov	w2, w28
  40e3c0:	mov	w1, w21
  40e3c4:	mov	w0, w23
  40e3c8:	bl	404eb0 <fchown@plt>
  40e3cc:	cbz	w0, 40e2b8 <wcrtomb@plt+0x9368>
  40e3d0:	bl	404e10 <__errno_location@plt>
  40e3d4:	ldr	w0, [x0]
  40e3d8:	mov	w1, #0x5f                  	// #95
  40e3dc:	cmp	w0, #0x26
  40e3e0:	ccmp	w0, w1, #0x4, ne  // ne = any
  40e3e4:	b.eq	40e298 <wcrtomb@plt+0x9348>  // b.none
  40e3e8:	cmp	w24, #0x32
  40e3ec:	b.ne	40e408 <wcrtomb@plt+0x94b8>  // b.any
  40e3f0:	bl	404e10 <__errno_location@plt>
  40e3f4:	ldr	w0, [x0]
  40e3f8:	mov	w1, #0x5f                  	// #95
  40e3fc:	cmp	w0, #0x26
  40e400:	ccmp	w0, w1, #0x4, ne  // ne = any
  40e404:	b.eq	40e2c8 <wcrtomb@plt+0x9378>  // b.none
  40e408:	mov	w2, w28
  40e40c:	mov	w1, w21
  40e410:	mov	x0, x19
  40e414:	bl	424ccc <wcrtomb@plt+0x1fd7c>
  40e418:	b	40e2c8 <wcrtomb@plt+0x9378>
  40e41c:	and	w0, w20, #0xc00
  40e420:	bic	w26, w26, w0
  40e424:	b	40e2c8 <wcrtomb@plt+0x9378>
  40e428:	mov	w27, #0x1ff                 	// #511
  40e42c:	b	40e2f8 <wcrtomb@plt+0x93a8>
  40e430:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  40e434:	mov	w3, w25
  40e438:	add	x2, sp, #0x60
  40e43c:	mov	x1, x19
  40e440:	ldr	w0, [x0, #2264]
  40e444:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40e448:	b	40e328 <wcrtomb@plt+0x93d8>
  40e44c:	ldr	w20, [sp, #112]
  40e450:	and	w20, w20, #0xfff
  40e454:	eor	w21, w21, w20
  40e458:	ands	w21, w21, w27
  40e45c:	b.eq	40e334 <wcrtomb@plt+0x93e4>  // b.none
  40e460:	eor	w20, w20, w21
  40e464:	mov	w3, w25
  40e468:	mov	w2, w20
  40e46c:	mov	x1, x19
  40e470:	mov	w0, w23
  40e474:	bl	40e150 <wcrtomb@plt+0x9200>
  40e478:	mov	w21, w0
  40e47c:	cbz	w0, 40e488 <wcrtomb@plt+0x9538>
  40e480:	bl	404e10 <__errno_location@plt>
  40e484:	ldr	w21, [x0]
  40e488:	cmp	w24, #0x32
  40e48c:	ccmp	w25, #0x0, #0x4, ne  // ne = any
  40e490:	b.eq	40e4cc <wcrtomb@plt+0x957c>  // b.none
  40e494:	cmp	w21, #0x26
  40e498:	mov	w0, #0x5f                  	// #95
  40e49c:	ccmp	w21, w0, #0x4, ne  // ne = any
  40e4a0:	b.ne	40e4c4 <wcrtomb@plt+0x9574>  // b.any
  40e4a4:	mov	w2, w20
  40e4a8:	mov	x1, x19
  40e4ac:	mov	w0, w23
  40e4b0:	mov	w3, #0x0                   	// #0
  40e4b4:	bl	40e150 <wcrtomb@plt+0x9200>
  40e4b8:	cbz	w0, 40e334 <wcrtomb@plt+0x93e4>
  40e4bc:	bl	404e10 <__errno_location@plt>
  40e4c0:	ldr	w21, [x0]
  40e4c4:	cbnz	w21, 40e4e8 <wcrtomb@plt+0x9598>
  40e4c8:	b	40e334 <wcrtomb@plt+0x93e4>
  40e4cc:	cbz	w21, 40e334 <wcrtomb@plt+0x93e4>
  40e4d0:	cmp	w24, #0x32
  40e4d4:	b.ne	40e4e8 <wcrtomb@plt+0x9598>  // b.any
  40e4d8:	cmp	w21, #0x26
  40e4dc:	mov	w0, #0x5f                  	// #95
  40e4e0:	ccmp	w21, w0, #0x4, ne  // ne = any
  40e4e4:	b.eq	40e334 <wcrtomb@plt+0x93e4>  // b.none
  40e4e8:	bl	404e10 <__errno_location@plt>
  40e4ec:	str	w21, [x0]
  40e4f0:	mov	w1, w20
  40e4f4:	mov	x0, x19
  40e4f8:	bl	424c3c <wcrtomb@plt+0x1fcec>
  40e4fc:	b	40e334 <wcrtomb@plt+0x93e4>
  40e500:	sub	sp, sp, #0x290
  40e504:	stp	x29, x30, [sp]
  40e508:	mov	x29, sp
  40e50c:	stp	x19, x20, [sp, #16]
  40e510:	mov	x20, x0
  40e514:	stp	x21, x22, [sp, #32]
  40e518:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  40e51c:	add	x21, x21, #0x820
  40e520:	stp	x23, x24, [sp, #48]
  40e524:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x36380>
  40e528:	add	x24, x24, #0x8d8
  40e52c:	stp	x25, x26, [sp, #64]
  40e530:	and	w26, w1, #0xff
  40e534:	mov	w22, #0x0                   	// #0
  40e538:	str	x27, [sp, #80]
  40e53c:	bl	404280 <strlen@plt>
  40e540:	mov	x23, x0
  40e544:	ldr	x19, [x21]
  40e548:	cbnz	x19, 40e56c <wcrtomb@plt+0x961c>
  40e54c:	ldp	x29, x30, [sp]
  40e550:	ldp	x19, x20, [sp, #16]
  40e554:	ldp	x21, x22, [sp, #32]
  40e558:	ldp	x23, x24, [sp, #48]
  40e55c:	ldp	x25, x26, [sp, #64]
  40e560:	ldr	x27, [sp, #80]
  40e564:	add	sp, sp, #0x290
  40e568:	ret
  40e56c:	ldrb	w0, [x19, #88]
  40e570:	ldp	w25, w27, [x19, #72]
  40e574:	orr	w22, w0, w22
  40e578:	cmp	w0, w26
  40e57c:	b.hi	40e54c <wcrtomb@plt+0x95fc>  // b.pmore
  40e580:	ldr	x2, [x19, #152]
  40e584:	cmp	x2, x23
  40e588:	b.cs	40e5bc <wcrtomb@plt+0x966c>  // b.hs, b.nlast
  40e58c:	ldrb	w0, [x20, x2]
  40e590:	cbz	w0, 40e5bc <wcrtomb@plt+0x966c>
  40e594:	cmp	w0, #0x2f
  40e598:	b.eq	40e5ac <wcrtomb@plt+0x965c>  // b.none
  40e59c:	add	x0, x20, x2
  40e5a0:	ldurb	w0, [x0, #-1]
  40e5a4:	cmp	w0, #0x2f
  40e5a8:	b.ne	40e5bc <wcrtomb@plt+0x966c>  // b.any
  40e5ac:	ldr	x1, [x19, #160]
  40e5b0:	mov	x0, x20
  40e5b4:	bl	4049f0 <memcmp@plt>
  40e5b8:	cbz	w0, 40e54c <wcrtomb@plt+0x95fc>
  40e5bc:	ldr	w0, [x19, #92]
  40e5c0:	bl	418a9c <wcrtomb@plt+0x13b4c>
  40e5c4:	cbz	w22, 40e624 <wcrtomb@plt+0x96d4>
  40e5c8:	ldr	w3, [x19, #84]
  40e5cc:	add	x2, sp, #0x68
  40e5d0:	ldr	w0, [x24]
  40e5d4:	ldr	x1, [x19, #160]
  40e5d8:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40e5dc:	cbz	w0, 40e5fc <wcrtomb@plt+0x96ac>
  40e5e0:	ldr	x0, [x19, #160]
  40e5e4:	bl	4252dc <wcrtomb@plt+0x2038c>
  40e5e8:	ldr	x0, [x19]
  40e5ec:	str	x0, [x21]
  40e5f0:	mov	x0, x19
  40e5f4:	bl	40dc20 <wcrtomb@plt+0x8cd0>
  40e5f8:	b	40e544 <wcrtomb@plt+0x95f4>
  40e5fc:	ldr	x0, [x19, #8]
  40e600:	ldr	x1, [sp, #104]
  40e604:	cmp	x1, x0
  40e608:	b.ne	40e6ac <wcrtomb@plt+0x975c>  // b.any
  40e60c:	ldr	x0, [x19, #16]
  40e610:	ldr	x1, [sp, #112]
  40e614:	cmp	x1, x0
  40e618:	b.ne	40e6ac <wcrtomb@plt+0x975c>  // b.any
  40e61c:	ldr	w25, [sp, #120]
  40e620:	mov	w27, #0xffffffff            	// #-1
  40e624:	ldr	w0, [x19, #24]
  40e628:	mov	w4, w27
  40e62c:	ldrb	w6, [x19, #80]
  40e630:	mov	w3, w25
  40e634:	ldr	w7, [x19, #84]
  40e638:	mov	w5, #0x35                  	// #53
  40e63c:	str	w0, [sp, #336]
  40e640:	mov	w2, #0xffffffff            	// #-1
  40e644:	ldr	w0, [x19, #28]
  40e648:	str	w0, [sp, #344]
  40e64c:	ldr	w0, [x19, #32]
  40e650:	str	w0, [sp, #348]
  40e654:	ldp	x0, x1, [x19, #40]
  40e658:	stp	x0, x1, [sp, #448]
  40e65c:	ldp	x0, x1, [x19, #56]
  40e660:	stp	x0, x1, [sp, #464]
  40e664:	ldr	x0, [x19, #96]
  40e668:	str	x0, [sp, #280]
  40e66c:	ldr	x0, [x19, #104]
  40e670:	str	x0, [sp, #288]
  40e674:	ldr	x0, [x19, #112]
  40e678:	str	x0, [sp, #296]
  40e67c:	ldr	x0, [x19, #120]
  40e680:	str	x0, [sp, #304]
  40e684:	ldr	x0, [x19, #128]
  40e688:	str	x0, [sp, #312]
  40e68c:	ldr	x0, [x19, #144]
  40e690:	str	x0, [sp, #568]
  40e694:	ldr	x0, [x19, #136]
  40e698:	str	x0, [sp, #560]
  40e69c:	ldr	x0, [x19, #160]
  40e6a0:	add	x1, sp, #0xe8
  40e6a4:	bl	40e1d0 <wcrtomb@plt+0x9280>
  40e6a8:	b	40e5e8 <wcrtomb@plt+0x9698>
  40e6ac:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40e6b0:	ldr	x0, [x0, #1016]
  40e6b4:	cbz	x0, 40e6bc <wcrtomb@plt+0x976c>
  40e6b8:	blr	x0
  40e6bc:	mov	w2, #0x5                   	// #5
  40e6c0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40e6c4:	mov	x0, #0x0                   	// #0
  40e6c8:	add	x1, x1, #0xb64
  40e6cc:	bl	404d00 <dcgettext@plt>
  40e6d0:	mov	x25, x0
  40e6d4:	ldr	x0, [x19, #160]
  40e6d8:	bl	436084 <argp_usage@@Base+0x8ba4>
  40e6dc:	mov	x3, x0
  40e6e0:	mov	w1, #0x0                   	// #0
  40e6e4:	mov	w0, #0x0                   	// #0
  40e6e8:	mov	x2, x25
  40e6ec:	bl	4042e0 <error@plt>
  40e6f0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40e6f4:	mov	w1, #0x2                   	// #2
  40e6f8:	str	w1, [x0, #3464]
  40e6fc:	b	40e5e8 <wcrtomb@plt+0x9698>
  40e700:	sub	sp, sp, #0x280
  40e704:	stp	x29, x30, [sp]
  40e708:	mov	x29, sp
  40e70c:	stp	x21, x22, [sp, #32]
  40e710:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  40e714:	add	x22, x22, #0x820
  40e718:	stp	x19, x20, [sp, #16]
  40e71c:	adrp	x21, 46e000 <_obstack_memory_used@@Base+0x36380>
  40e720:	add	x21, x21, #0x8d8
  40e724:	ldr	x19, [x22, #24]
  40e728:	stp	x23, x24, [sp, #48]
  40e72c:	str	x25, [sp, #64]
  40e730:	cbnz	x19, 40e754 <wcrtomb@plt+0x9804>
  40e734:	str	xzr, [x22, #24]
  40e738:	ldp	x29, x30, [sp]
  40e73c:	ldp	x19, x20, [sp, #16]
  40e740:	ldp	x21, x22, [sp, #32]
  40e744:	ldp	x23, x24, [sp, #48]
  40e748:	ldr	x25, [sp, #64]
  40e74c:	add	sp, sp, #0x280
  40e750:	ret
  40e754:	ldr	w0, [x19, #88]
  40e758:	mov	x25, #0x0                   	// #0
  40e75c:	bl	418a9c <wcrtomb@plt+0x13b4c>
  40e760:	ldr	x23, [x19, #96]
  40e764:	cbnz	x23, 40e794 <wcrtomb@plt+0x9844>
  40e768:	ldr	x0, [x19, #96]
  40e76c:	cbnz	x0, 40e914 <wcrtomb@plt+0x99c4>
  40e770:	ldp	x1, x0, [x19, #144]
  40e774:	bl	411f54 <wcrtomb@plt+0xd004>
  40e778:	ldr	x0, [x19, #104]
  40e77c:	bl	404ae0 <free@plt>
  40e780:	ldr	x20, [x19]
  40e784:	mov	x0, x19
  40e788:	bl	404ae0 <free@plt>
  40e78c:	mov	x19, x20
  40e790:	b	40e730 <wcrtomb@plt+0x97e0>
  40e794:	ldr	w0, [x21]
  40e798:	add	x20, x23, #0x8
  40e79c:	add	x2, sp, #0x58
  40e7a0:	mov	x1, x20
  40e7a4:	mov	w3, #0x100                 	// #256
  40e7a8:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40e7ac:	cbnz	w0, 40e800 <wcrtomb@plt+0x98b0>
  40e7b0:	ldr	x0, [x19, #8]
  40e7b4:	ldr	x1, [sp, #88]
  40e7b8:	cmp	x1, x0
  40e7bc:	b.ne	40e800 <wcrtomb@plt+0x98b0>  // b.any
  40e7c0:	ldr	x0, [x19, #16]
  40e7c4:	ldr	x1, [sp, #96]
  40e7c8:	cmp	x1, x0
  40e7cc:	b.ne	40e800 <wcrtomb@plt+0x98b0>  // b.any
  40e7d0:	ldp	x2, x3, [x19, #24]
  40e7d4:	mov	x0, #0xffffffffffffffff    	// #-1
  40e7d8:	mov	x1, x0
  40e7dc:	bl	43683c <argp_usage@@Base+0x935c>
  40e7e0:	cbnz	w0, 40e800 <wcrtomb@plt+0x98b0>
  40e7e4:	ldr	w0, [x21]
  40e7e8:	mov	x1, x20
  40e7ec:	mov	w2, #0x0                   	// #0
  40e7f0:	bl	404410 <unlinkat@plt>
  40e7f4:	cbz	w0, 40e808 <wcrtomb@plt+0x98b8>
  40e7f8:	mov	x0, x20
  40e7fc:	bl	42531c <wcrtomb@plt+0x203cc>
  40e800:	ldr	x23, [x23]
  40e804:	b	40e764 <wcrtomb@plt+0x9814>
  40e808:	cbnz	x25, 40e848 <wcrtomb@plt+0x98f8>
  40e80c:	ldrb	w0, [x19, #40]
  40e810:	add	x24, x19, #0xa0
  40e814:	ldr	w1, [x21]
  40e818:	cbnz	w0, 40e868 <wcrtomb@plt+0x9918>
  40e81c:	mov	w2, w1
  40e820:	mov	x3, x20
  40e824:	mov	x1, x24
  40e828:	mov	w0, w2
  40e82c:	mov	w4, #0x0                   	// #0
  40e830:	bl	404380 <linkat@plt>
  40e834:	cbz	w0, 40e800 <wcrtomb@plt+0x98b0>
  40e838:	mov	x1, x20
  40e83c:	mov	x0, x24
  40e840:	bl	424d98 <wcrtomb@plt+0x1fe48>
  40e844:	b	40e800 <wcrtomb@plt+0x98b0>
  40e848:	ldr	w2, [x21]
  40e84c:	mov	x3, x20
  40e850:	mov	x1, x25
  40e854:	mov	w4, #0x0                   	// #0
  40e858:	mov	w0, w2
  40e85c:	bl	404380 <linkat@plt>
  40e860:	cbz	w0, 40e800 <wcrtomb@plt+0x98b0>
  40e864:	b	40e80c <wcrtomb@plt+0x98bc>
  40e868:	mov	x2, x20
  40e86c:	mov	x0, x24
  40e870:	bl	404d80 <symlinkat@plt>
  40e874:	cbz	w0, 40e888 <wcrtomb@plt+0x9938>
  40e878:	mov	x1, x20
  40e87c:	mov	x0, x24
  40e880:	bl	425230 <wcrtomb@plt+0x202e0>
  40e884:	b	40e800 <wcrtomb@plt+0x98b0>
  40e888:	ldr	w0, [x19, #44]
  40e88c:	mov	x25, x20
  40e890:	str	w0, [sp, #320]
  40e894:	mov	w7, #0x100                 	// #256
  40e898:	ldr	w0, [x19, #48]
  40e89c:	mov	w6, #0x0                   	// #0
  40e8a0:	str	w0, [sp, #328]
  40e8a4:	mov	w5, #0x32                  	// #50
  40e8a8:	ldr	w0, [x19, #52]
  40e8ac:	mov	w4, #0x0                   	// #0
  40e8b0:	str	w0, [sp, #332]
  40e8b4:	mov	w3, #0x0                   	// #0
  40e8b8:	ldp	x0, x1, [x19, #56]
  40e8bc:	stp	x0, x1, [sp, #432]
  40e8c0:	mov	w2, #0xffffffff            	// #-1
  40e8c4:	ldp	x0, x1, [x19, #72]
  40e8c8:	stp	x0, x1, [sp, #448]
  40e8cc:	ldr	x0, [x19, #104]
  40e8d0:	str	x0, [sp, #264]
  40e8d4:	ldr	x0, [x19, #112]
  40e8d8:	str	x0, [sp, #272]
  40e8dc:	ldr	x0, [x19, #120]
  40e8e0:	str	x0, [sp, #280]
  40e8e4:	ldr	x0, [x19, #128]
  40e8e8:	str	x0, [sp, #288]
  40e8ec:	ldr	x0, [x19, #136]
  40e8f0:	str	x0, [sp, #296]
  40e8f4:	ldr	x0, [x19, #152]
  40e8f8:	str	x0, [sp, #552]
  40e8fc:	ldr	x0, [x19, #144]
  40e900:	add	x1, sp, #0xd8
  40e904:	str	x0, [sp, #544]
  40e908:	mov	x0, x20
  40e90c:	bl	40e1d0 <wcrtomb@plt+0x9280>
  40e910:	b	40e800 <wcrtomb@plt+0x98b0>
  40e914:	ldr	x20, [x0]
  40e918:	bl	404ae0 <free@plt>
  40e91c:	mov	x0, x20
  40e920:	b	40e76c <wcrtomb@plt+0x981c>
  40e924:	stp	x29, x30, [sp, #-32]!
  40e928:	mov	w1, #0x0                   	// #0
  40e92c:	mov	x29, sp
  40e930:	str	x19, [sp, #16]
  40e934:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x15380>
  40e938:	add	x19, x19, #0x41a
  40e93c:	mov	x0, x19
  40e940:	bl	40e500 <wcrtomb@plt+0x95b0>
  40e944:	bl	40e700 <wcrtomb@plt+0x97b0>
  40e948:	mov	x0, x19
  40e94c:	mov	w1, #0x1                   	// #1
  40e950:	ldr	x19, [sp, #16]
  40e954:	ldp	x29, x30, [sp], #32
  40e958:	b	40e500 <wcrtomb@plt+0x95b0>
  40e95c:	stp	x29, x30, [sp, #-160]!
  40e960:	mov	x29, sp
  40e964:	str	x19, [sp, #16]
  40e968:	cbnz	x1, 40e9a8 <wcrtomb@plt+0x9a58>
  40e96c:	mov	x19, x0
  40e970:	add	x1, sp, #0x20
  40e974:	bl	4186c8 <wcrtomb@plt+0x13778>
  40e978:	cbz	w0, 40e9a4 <wcrtomb@plt+0x9a54>
  40e97c:	bl	404e10 <__errno_location@plt>
  40e980:	ldr	w0, [x0]
  40e984:	cmp	w0, #0x2
  40e988:	b.eq	40e9d8 <wcrtomb@plt+0x9a88>  // b.none
  40e98c:	mov	x0, x19
  40e990:	bl	4252ec <wcrtomb@plt+0x2039c>
  40e994:	mov	w0, #0x1                   	// #1
  40e998:	ldr	x19, [sp, #16]
  40e99c:	ldp	x29, x30, [sp], #160
  40e9a0:	ret
  40e9a4:	add	x1, sp, #0x20
  40e9a8:	ldr	w0, [x1, #16]
  40e9ac:	and	w0, w0, #0xf000
  40e9b0:	cmp	w0, #0x4, lsl #12
  40e9b4:	b.eq	40e9d8 <wcrtomb@plt+0x9a88>  // b.none
  40e9b8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40e9bc:	add	x0, x0, #0x68
  40e9c0:	ldp	x2, x3, [x1, #88]
  40e9c4:	ldp	x0, x1, [x0, #232]
  40e9c8:	bl	421be0 <wcrtomb@plt+0x1cc90>
  40e9cc:	cmp	w0, #0x0
  40e9d0:	cset	w0, le
  40e9d4:	b	40e998 <wcrtomb@plt+0x9a48>
  40e9d8:	mov	w0, #0x0                   	// #0
  40e9dc:	b	40e998 <wcrtomb@plt+0x9a48>
  40e9e0:	stp	x29, x30, [sp, #-192]!
  40e9e4:	mov	x29, sp
  40e9e8:	stp	x19, x20, [sp, #16]
  40e9ec:	mov	x19, x0
  40e9f0:	ldrb	w0, [x2]
  40e9f4:	stp	x21, x22, [sp, #32]
  40e9f8:	str	x23, [sp, #48]
  40e9fc:	cbnz	w0, 40ea2c <wcrtomb@plt+0x9adc>
  40ea00:	and	w23, w1, #0xff
  40ea04:	mov	x21, x2
  40ea08:	bl	404e10 <__errno_location@plt>
  40ea0c:	ldr	w20, [x0]
  40ea10:	mov	x22, x0
  40ea14:	cmp	w20, #0x11
  40ea18:	b.eq	40eab8 <wcrtomb@plt+0x9b68>  // b.none
  40ea1c:	b.gt	40ea34 <wcrtomb@plt+0x9ae4>
  40ea20:	cmp	w20, #0x2
  40ea24:	b.eq	40eb48 <wcrtomb@plt+0x9bf8>  // b.none
  40ea28:	str	w20, [x22]
  40ea2c:	mov	w0, #0x0                   	// #0
  40ea30:	b	40eb34 <wcrtomb@plt+0x9be4>
  40ea34:	cmp	w20, #0x28
  40ea38:	b.eq	40ea48 <wcrtomb@plt+0x9af8>  // b.none
  40ea3c:	and	w0, w20, #0xffffffbf
  40ea40:	cmp	w0, #0x1f
  40ea44:	b.ne	40ea28 <wcrtomb@plt+0x9ad8>  // b.any
  40ea48:	cbz	w23, 40ea28 <wcrtomb@plt+0x9ad8>
  40ea4c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ea50:	ldr	w0, [x0, #760]
  40ea54:	cmp	w0, #0x2
  40ea58:	b.ne	40ea28 <wcrtomb@plt+0x9ad8>  // b.any
  40ea5c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ea60:	ldrb	w0, [x0, #584]
  40ea64:	cbnz	w0, 40ea28 <wcrtomb@plt+0x9ad8>
  40ea68:	mov	w1, #0x2f                  	// #47
  40ea6c:	mov	x0, x19
  40ea70:	bl	404b90 <strchr@plt>
  40ea74:	mov	x1, x0
  40ea78:	cbz	x0, 40ea90 <wcrtomb@plt+0x9b40>
  40ea7c:	add	x1, sp, #0x40
  40ea80:	mov	x0, x19
  40ea84:	bl	4186c8 <wcrtomb@plt+0x13778>
  40ea88:	cbnz	w0, 40ea28 <wcrtomb@plt+0x9ad8>
  40ea8c:	add	x1, sp, #0x40
  40ea90:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ea94:	ldr	w2, [x0, #760]
  40ea98:	cmp	w2, #0x6
  40ea9c:	b.hi	40eb48 <wcrtomb@plt+0x9bf8>  // b.pmore
  40eaa0:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40eaa4:	add	x0, x0, #0xd28
  40eaa8:	ldrb	w0, [x0, w2, uxtw]
  40eaac:	adr	x2, 40eab8 <wcrtomb@plt+0x9b68>
  40eab0:	add	x0, x2, w0, sxtb #2
  40eab4:	br	x0
  40eab8:	mov	x1, #0x0                   	// #0
  40eabc:	b	40ea90 <wcrtomb@plt+0x9b40>
  40eac0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40eac4:	ldr	w0, [x0, #480]
  40eac8:	tbz	w0, #20, 40eb04 <wcrtomb@plt+0x9bb4>
  40eacc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ead0:	ldr	x0, [x0, #1016]
  40ead4:	cbz	x0, 40eadc <wcrtomb@plt+0x9b8c>
  40ead8:	blr	x0
  40eadc:	mov	w2, #0x5                   	// #5
  40eae0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40eae4:	mov	x0, #0x0                   	// #0
  40eae8:	add	x1, x1, #0xb9f
  40eaec:	bl	404d00 <dcgettext@plt>
  40eaf0:	mov	x2, x0
  40eaf4:	mov	x3, x19
  40eaf8:	mov	w1, #0x0                   	// #0
  40eafc:	mov	w0, #0x0                   	// #0
  40eb00:	bl	4042e0 <error@plt>
  40eb04:	mov	w0, #0x2                   	// #2
  40eb08:	b	40eb34 <wcrtomb@plt+0x9be4>
  40eb0c:	mov	x0, x19
  40eb10:	bl	40e95c <wcrtomb@plt+0x9a0c>
  40eb14:	tst	w0, #0xff
  40eb18:	b.ne	40eb48 <wcrtomb@plt+0x9bf8>  // b.any
  40eb1c:	mov	x0, x19
  40eb20:	mov	w1, #0x0                   	// #0
  40eb24:	bl	4191f8 <wcrtomb@plt+0x142a8>
  40eb28:	cmp	w0, #0x0
  40eb2c:	b.le	40eb48 <wcrtomb@plt+0x9bf8>
  40eb30:	mov	w0, #0x1                   	// #1
  40eb34:	ldp	x19, x20, [sp, #16]
  40eb38:	ldp	x21, x22, [sp, #32]
  40eb3c:	ldr	x23, [sp, #48]
  40eb40:	ldp	x29, x30, [sp], #192
  40eb44:	ret
  40eb48:	mov	x1, x21
  40eb4c:	mov	x0, x19
  40eb50:	bl	40dfcc <wcrtomb@plt+0x907c>
  40eb54:	cbnz	w0, 40ea28 <wcrtomb@plt+0x9ad8>
  40eb58:	ldrb	w0, [x21]
  40eb5c:	cbz	w0, 40ea28 <wcrtomb@plt+0x9ad8>
  40eb60:	b	40eb30 <wcrtomb@plt+0x9be0>
  40eb64:	stp	x29, x30, [sp, #-80]!
  40eb68:	mov	x29, sp
  40eb6c:	stp	x19, x20, [sp, #16]
  40eb70:	mov	x20, x0
  40eb74:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40eb78:	stp	x21, x22, [sp, #32]
  40eb7c:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  40eb80:	add	x22, x22, #0x68
  40eb84:	ldr	w0, [x0, #988]
  40eb88:	stp	x23, x24, [sp, #48]
  40eb8c:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x36380>
  40eb90:	cmp	w0, #0x0
  40eb94:	ldr	w21, [x22, #104]
  40eb98:	mov	w0, #0xffffffc0            	// #-64
  40eb9c:	csinv	w0, w0, wzr, gt
  40eba0:	mov	w23, w1
  40eba4:	and	w21, w21, w0
  40eba8:	add	x24, x24, #0x8d8
  40ebac:	and	w21, w21, #0x1ff
  40ebb0:	strb	wzr, [sp, #79]
  40ebb4:	ldr	w0, [x24]
  40ebb8:	mov	w2, w21
  40ebbc:	mov	x1, x20
  40ebc0:	bl	404d10 <mkfifoat@plt>
  40ebc4:	mov	w19, w0
  40ebc8:	cbnz	w0, 40ebfc <wcrtomb@plt+0x9cac>
  40ebcc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40ebd0:	mov	w5, w23
  40ebd4:	mov	x1, x22
  40ebd8:	mov	w7, #0x100                 	// #256
  40ebdc:	ldr	w3, [x0, #2096]
  40ebe0:	mov	w6, #0x0                   	// #0
  40ebe4:	mov	x0, x20
  40ebe8:	mov	w4, #0x1ff                 	// #511
  40ebec:	bic	w3, w21, w3
  40ebf0:	mov	w2, #0xffffffff            	// #-1
  40ebf4:	bl	40e1d0 <wcrtomb@plt+0x9280>
  40ebf8:	b	40ec2c <wcrtomb@plt+0x9cdc>
  40ebfc:	add	x2, sp, #0x4f
  40ec00:	mov	x0, x20
  40ec04:	mov	w1, #0x0                   	// #0
  40ec08:	bl	40e9e0 <wcrtomb@plt+0x9a90>
  40ec0c:	cbz	w0, 40ec20 <wcrtomb@plt+0x9cd0>
  40ec10:	cmp	w0, #0x2
  40ec14:	b.ne	40ebb4 <wcrtomb@plt+0x9c64>  // b.any
  40ec18:	mov	w19, #0x0                   	// #0
  40ec1c:	b	40ec2c <wcrtomb@plt+0x9cdc>
  40ec20:	mov	w19, #0xffffffff            	// #-1
  40ec24:	mov	x0, x20
  40ec28:	bl	424e3c <wcrtomb@plt+0x1feec>
  40ec2c:	mov	w0, w19
  40ec30:	ldp	x19, x20, [sp, #16]
  40ec34:	ldp	x21, x22, [sp, #32]
  40ec38:	ldp	x23, x24, [sp, #48]
  40ec3c:	ldp	x29, x30, [sp], #80
  40ec40:	ret
  40ec44:	stp	x29, x30, [sp, #-80]!
  40ec48:	mov	x29, sp
  40ec4c:	stp	x19, x20, [sp, #16]
  40ec50:	mov	x20, x0
  40ec54:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ec58:	stp	x21, x22, [sp, #32]
  40ec5c:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  40ec60:	add	x22, x22, #0x68
  40ec64:	ldr	w0, [x0, #988]
  40ec68:	stp	x23, x24, [sp, #48]
  40ec6c:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x36380>
  40ec70:	cmp	w0, #0x0
  40ec74:	ldr	w21, [x22, #104]
  40ec78:	mov	w0, #0xffffffc0            	// #-64
  40ec7c:	csinv	w0, w0, wzr, gt
  40ec80:	mov	w23, w1
  40ec84:	and	w21, w21, w0
  40ec88:	add	x24, x24, #0x8d8
  40ec8c:	mov	w0, #0x61ff                	// #25087
  40ec90:	and	w21, w21, w0
  40ec94:	strb	wzr, [sp, #79]
  40ec98:	ldr	w0, [x24]
  40ec9c:	mov	w2, w21
  40eca0:	ldr	x3, [x22, #120]
  40eca4:	mov	x1, x20
  40eca8:	bl	446ac0 <_obstack_memory_used@@Base+0xee40>
  40ecac:	mov	w19, w0
  40ecb0:	cbnz	w0, 40ece4 <wcrtomb@plt+0x9d94>
  40ecb4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40ecb8:	mov	w5, w23
  40ecbc:	mov	x1, x22
  40ecc0:	mov	w7, #0x100                 	// #256
  40ecc4:	ldr	w3, [x0, #2096]
  40ecc8:	mov	w6, #0x0                   	// #0
  40eccc:	mov	x0, x20
  40ecd0:	mov	w4, #0x1ff                 	// #511
  40ecd4:	bic	w3, w21, w3
  40ecd8:	mov	w2, #0xffffffff            	// #-1
  40ecdc:	bl	40e1d0 <wcrtomb@plt+0x9280>
  40ece0:	b	40ed14 <wcrtomb@plt+0x9dc4>
  40ece4:	add	x2, sp, #0x4f
  40ece8:	mov	x0, x20
  40ecec:	mov	w1, #0x0                   	// #0
  40ecf0:	bl	40e9e0 <wcrtomb@plt+0x9a90>
  40ecf4:	cbz	w0, 40ed08 <wcrtomb@plt+0x9db8>
  40ecf8:	cmp	w0, #0x2
  40ecfc:	b.ne	40ec98 <wcrtomb@plt+0x9d48>  // b.any
  40ed00:	mov	w19, #0x0                   	// #0
  40ed04:	b	40ed14 <wcrtomb@plt+0x9dc4>
  40ed08:	mov	w19, #0xffffffff            	// #-1
  40ed0c:	mov	x0, x20
  40ed10:	bl	424e4c <wcrtomb@plt+0x1fefc>
  40ed14:	mov	w0, w19
  40ed18:	ldp	x19, x20, [sp, #16]
  40ed1c:	ldp	x21, x22, [sp, #32]
  40ed20:	ldp	x23, x24, [sp, #48]
  40ed24:	ldp	x29, x30, [sp], #80
  40ed28:	ret
  40ed2c:	stp	x29, x30, [sp, #-192]!
  40ed30:	mov	x29, sp
  40ed34:	stp	x19, x20, [sp, #16]
  40ed38:	mov	x20, x0
  40ed3c:	stp	x21, x22, [sp, #32]
  40ed40:	adrp	x21, 46e000 <_obstack_memory_used@@Base+0x36380>
  40ed44:	mov	x22, x2
  40ed48:	add	x21, x21, #0x8d8
  40ed4c:	stp	x23, x24, [sp, #48]
  40ed50:	and	w24, w1, #0xff
  40ed54:	ldr	w0, [x21]
  40ed58:	mov	x1, x20
  40ed5c:	mov	w3, #0x0                   	// #0
  40ed60:	mov	w2, #0xc1                  	// #193
  40ed64:	bl	404df0 <openat@plt>
  40ed68:	mov	w19, w0
  40ed6c:	tbnz	w0, #31, 40ed90 <wcrtomb@plt+0x9e40>
  40ed70:	add	x1, sp, #0x40
  40ed74:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  40ed78:	cbz	w0, 40edd8 <wcrtomb@plt+0x9e88>
  40ed7c:	mov	x0, x20
  40ed80:	bl	4252dc <wcrtomb@plt+0x2038c>
  40ed84:	mov	w0, w19
  40ed88:	bl	4048c0 <close@plt>
  40ed8c:	b	40edbc <wcrtomb@plt+0x9e6c>
  40ed90:	mov	x2, x22
  40ed94:	mov	x0, x20
  40ed98:	mov	w1, #0x0                   	// #0
  40ed9c:	bl	40e9e0 <wcrtomb@plt+0x9a90>
  40eda0:	cbz	w0, 40edb4 <wcrtomb@plt+0x9e64>
  40eda4:	cmp	w0, #0x2
  40eda8:	b.ne	40ed54 <wcrtomb@plt+0x9e04>  // b.any
  40edac:	mov	w22, #0x0                   	// #0
  40edb0:	b	40edc0 <wcrtomb@plt+0x9e70>
  40edb4:	mov	x0, x20
  40edb8:	bl	424e5c <wcrtomb@plt+0x1ff0c>
  40edbc:	mov	w22, #0xffffffff            	// #-1
  40edc0:	mov	w0, w22
  40edc4:	ldp	x19, x20, [sp, #16]
  40edc8:	ldp	x21, x22, [sp, #32]
  40edcc:	ldp	x23, x24, [sp, #48]
  40edd0:	ldp	x29, x30, [sp], #192
  40edd4:	ret
  40edd8:	mov	w0, w19
  40eddc:	bl	4048c0 <close@plt>
  40ede0:	mov	w22, w0
  40ede4:	cbz	w0, 40edf4 <wcrtomb@plt+0x9ea4>
  40ede8:	mov	x0, x20
  40edec:	bl	424d60 <wcrtomb@plt+0x1fe10>
  40edf0:	b	40edbc <wcrtomb@plt+0x9e6c>
  40edf4:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  40edf8:	add	x21, x21, #0x68
  40edfc:	ldr	x0, [x21, #24]
  40ee00:	bl	404280 <strlen@plt>
  40ee04:	add	x0, x0, #0xa1
  40ee08:	bl	436d44 <argp_usage@@Base+0x9864>
  40ee0c:	mov	x19, x0
  40ee10:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40ee14:	add	x1, x0, #0x820
  40ee18:	mov	x23, x0
  40ee1c:	strb	w24, [x19, #40]
  40ee20:	ldr	x2, [x1, #24]
  40ee24:	str	x19, [x1, #24]
  40ee28:	ldr	x1, [sp, #64]
  40ee2c:	stp	x2, x1, [x19]
  40ee30:	ldr	x1, [sp, #72]
  40ee34:	str	x1, [x19, #16]
  40ee38:	mov	x1, #0xffffffffffffffff    	// #-1
  40ee3c:	stp	x1, x1, [x19, #24]
  40ee40:	cbz	w24, 40ee64 <wcrtomb@plt+0x9f14>
  40ee44:	ldr	w0, [x21, #104]
  40ee48:	str	w0, [x19, #44]
  40ee4c:	ldr	x0, [x21, #112]
  40ee50:	str	x0, [x19, #48]
  40ee54:	ldp	x0, x1, [x21, #216]
  40ee58:	stp	x0, x1, [x19, #56]
  40ee5c:	ldp	x0, x1, [x21, #232]
  40ee60:	stp	x0, x1, [x19, #72]
  40ee64:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ee68:	ldr	w0, [x0, #8]
  40ee6c:	str	w0, [x19, #88]
  40ee70:	mov	x0, x20
  40ee74:	bl	404280 <strlen@plt>
  40ee78:	add	x0, x0, #0x9
  40ee7c:	bl	436d44 <argp_usage@@Base+0x9864>
  40ee80:	str	x0, [x19, #96]
  40ee84:	str	xzr, [x0], #8
  40ee88:	mov	x1, x20
  40ee8c:	bl	404c40 <strcpy@plt>
  40ee90:	mov	x0, x19
  40ee94:	ldr	x1, [x21, #48]
  40ee98:	str	xzr, [x0, #104]!
  40ee9c:	bl	417c2c <wcrtomb@plt+0x12cdc>
  40eea0:	stp	xzr, xzr, [x19, #112]
  40eea4:	add	x2, x19, #0x90
  40eea8:	stp	xzr, xzr, [x19, #128]
  40eeac:	add	x1, x19, #0x98
  40eeb0:	mov	x0, x21
  40eeb4:	bl	41213c <wcrtomb@plt+0xd1ec>
  40eeb8:	ldr	x1, [x21, #24]
  40eebc:	add	x0, x19, #0xa0
  40eec0:	bl	404c40 <strcpy@plt>
  40eec4:	ldr	x19, [x23, #2080]
  40eec8:	cbz	x19, 40edc0 <wcrtomb@plt+0x9e70>
  40eecc:	ldrb	w0, [x19, #88]
  40eed0:	cbnz	w0, 40ef0c <wcrtomb@plt+0x9fbc>
  40eed4:	ldp	x21, x1, [x19, #152]
  40eed8:	mov	x0, x20
  40eedc:	mov	x2, x21
  40eee0:	bl	4046a0 <strncmp@plt>
  40eee4:	cbnz	w0, 40ef0c <wcrtomb@plt+0x9fbc>
  40eee8:	ldrb	w0, [x20, x21]
  40eeec:	cmp	w0, #0x2f
  40eef0:	b.ne	40ef0c <wcrtomb@plt+0x9fbc>  // b.any
  40eef4:	add	x21, x21, #0x1
  40eef8:	mov	x0, x20
  40eefc:	add	x21, x20, x21
  40ef00:	bl	42dde0 <argp_usage@@Base+0x900>
  40ef04:	cmp	x0, x21
  40ef08:	b.eq	40ef14 <wcrtomb@plt+0x9fc4>  // b.none
  40ef0c:	ldr	x19, [x19]
  40ef10:	b	40eec8 <wcrtomb@plt+0x9f78>
  40ef14:	mov	x0, x19
  40ef18:	bl	40dde4 <wcrtomb@plt+0x8e94>
  40ef1c:	b	40edac <wcrtomb@plt+0x9e5c>
  40ef20:	stp	x29, x30, [sp, #-336]!
  40ef24:	mov	x29, sp
  40ef28:	stp	x19, x20, [sp, #16]
  40ef2c:	mov	x19, x0
  40ef30:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ef34:	stp	x21, x22, [sp, #32]
  40ef38:	ldr	x21, [x0, #128]
  40ef3c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ef40:	stp	x23, x24, [sp, #48]
  40ef44:	ldrb	w0, [x0, #960]
  40ef48:	strb	wzr, [sp, #79]
  40ef4c:	cbnz	w0, 40ef84 <wcrtomb@plt+0xa034>
  40ef50:	mov	x0, x21
  40ef54:	bl	41b458 <wcrtomb@plt+0x16508>
  40ef58:	tst	w0, #0xff
  40ef5c:	b.eq	40ef84 <wcrtomb@plt+0xa034>  // b.none
  40ef60:	add	x2, sp, #0x4f
  40ef64:	mov	x0, x19
  40ef68:	mov	w1, #0x0                   	// #0
  40ef6c:	bl	40ed2c <wcrtomb@plt+0x9ddc>
  40ef70:	ldp	x19, x20, [sp, #16]
  40ef74:	ldp	x21, x22, [sp, #32]
  40ef78:	ldp	x23, x24, [sp, #48]
  40ef7c:	ldp	x29, x30, [sp], #336
  40ef80:	ret
  40ef84:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x36380>
  40ef88:	add	x22, x22, #0x8d8
  40ef8c:	ldr	w2, [x22]
  40ef90:	mov	x3, x19
  40ef94:	mov	x1, x21
  40ef98:	mov	w4, #0x0                   	// #0
  40ef9c:	mov	w0, w2
  40efa0:	bl	404380 <linkat@plt>
  40efa4:	mov	w23, w0
  40efa8:	bl	404e10 <__errno_location@plt>
  40efac:	ldr	w24, [x0]
  40efb0:	mov	x20, x0
  40efb4:	cbnz	w23, 40f060 <wcrtomb@plt+0xa110>
  40efb8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40efbc:	ldr	x20, [x0, #2104]
  40efc0:	cbz	x20, 40f04c <wcrtomb@plt+0xa0fc>
  40efc4:	ldr	w0, [x22]
  40efc8:	add	x2, sp, #0x50
  40efcc:	mov	x1, x21
  40efd0:	mov	w3, #0x100                 	// #256
  40efd4:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40efd8:	cbnz	w0, 40f04c <wcrtomb@plt+0xa0fc>
  40efdc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40efe0:	ldp	x22, x23, [sp, #80]
  40efe4:	ldr	w21, [x0, #8]
  40efe8:	ldr	w0, [x20, #88]
  40efec:	cmp	w0, w21
  40eff0:	b.ne	40f054 <wcrtomb@plt+0xa104>  // b.any
  40eff4:	ldr	x0, [x20, #8]
  40eff8:	cmp	x0, x22
  40effc:	b.ne	40f054 <wcrtomb@plt+0xa104>  // b.any
  40f000:	ldr	x0, [x20, #16]
  40f004:	cmp	x0, x23
  40f008:	b.ne	40f054 <wcrtomb@plt+0xa104>  // b.any
  40f00c:	ldp	x0, x1, [x20, #24]
  40f010:	mov	x2, #0xffffffffffffffff    	// #-1
  40f014:	mov	x3, x2
  40f018:	bl	43683c <argp_usage@@Base+0x935c>
  40f01c:	cbnz	w0, 40f054 <wcrtomb@plt+0xa104>
  40f020:	mov	x0, x19
  40f024:	bl	404280 <strlen@plt>
  40f028:	add	x0, x0, #0x9
  40f02c:	bl	436d44 <argp_usage@@Base+0x9864>
  40f030:	mov	x21, x0
  40f034:	mov	x1, x19
  40f038:	add	x0, x0, #0x8
  40f03c:	bl	404c40 <strcpy@plt>
  40f040:	ldr	x0, [x20, #96]
  40f044:	str	x0, [x21]
  40f048:	str	x21, [x20, #96]
  40f04c:	mov	w0, #0x0                   	// #0
  40f050:	b	40ef70 <wcrtomb@plt+0xa020>
  40f054:	ldr	x20, [x20]
  40f058:	cbnz	x20, 40efe8 <wcrtomb@plt+0xa098>
  40f05c:	b	40f04c <wcrtomb@plt+0xa0fc>
  40f060:	cmp	w24, #0x11
  40f064:	b.ne	40f078 <wcrtomb@plt+0xa128>  // b.any
  40f068:	mov	x1, x19
  40f06c:	mov	x0, x21
  40f070:	bl	404a30 <strcmp@plt>
  40f074:	cbz	w0, 40f04c <wcrtomb@plt+0xa0fc>
  40f078:	ldr	w0, [x22]
  40f07c:	add	x2, sp, #0x50
  40f080:	mov	x1, x21
  40f084:	mov	w3, #0x100                 	// #256
  40f088:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40f08c:	cbz	w0, 40f0e0 <wcrtomb@plt+0xa190>
  40f090:	str	w24, [x20]
  40f094:	add	x2, sp, #0x4f
  40f098:	mov	x0, x19
  40f09c:	mov	w1, #0x0                   	// #0
  40f0a0:	bl	40e9e0 <wcrtomb@plt+0x9a90>
  40f0a4:	cmp	w0, #0x1
  40f0a8:	b.eq	40ef8c <wcrtomb@plt+0xa03c>  // b.none
  40f0ac:	cmp	w0, #0x2
  40f0b0:	b.eq	40f04c <wcrtomb@plt+0xa0fc>  // b.none
  40f0b4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f0b8:	ldrb	w0, [x0, #41]
  40f0bc:	cbz	w0, 40f0cc <wcrtomb@plt+0xa17c>
  40f0c0:	ldr	w0, [x20]
  40f0c4:	cmp	w0, #0x11
  40f0c8:	b.eq	40f04c <wcrtomb@plt+0xa0fc>  // b.none
  40f0cc:	mov	x0, x21
  40f0d0:	mov	x1, x19
  40f0d4:	bl	424d98 <wcrtomb@plt+0x1fe48>
  40f0d8:	mov	w0, #0x1                   	// #1
  40f0dc:	b	40ef70 <wcrtomb@plt+0xa020>
  40f0e0:	ldr	w0, [x22]
  40f0e4:	add	x2, sp, #0xd0
  40f0e8:	mov	x1, x19
  40f0ec:	mov	w3, #0x100                 	// #256
  40f0f0:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40f0f4:	cbnz	w0, 40f090 <wcrtomb@plt+0xa140>
  40f0f8:	ldr	x1, [sp, #80]
  40f0fc:	ldr	x0, [sp, #208]
  40f100:	cmp	x1, x0
  40f104:	b.ne	40f090 <wcrtomb@plt+0xa140>  // b.any
  40f108:	ldr	x1, [sp, #88]
  40f10c:	ldr	x0, [sp, #216]
  40f110:	cmp	x1, x0
  40f114:	b.ne	40f090 <wcrtomb@plt+0xa140>  // b.any
  40f118:	b	40f04c <wcrtomb@plt+0xa0fc>
  40f11c:	stp	x29, x30, [sp, #-64]!
  40f120:	mov	x29, sp
  40f124:	stp	x19, x20, [sp, #16]
  40f128:	mov	x20, x0
  40f12c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f130:	stp	x21, x22, [sp, #32]
  40f134:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  40f138:	ldrb	w0, [x0, #960]
  40f13c:	strb	wzr, [sp, #63]
  40f140:	add	x21, x21, #0x68
  40f144:	cbz	w0, 40f190 <wcrtomb@plt+0xa240>
  40f148:	adrp	x22, 46e000 <_obstack_memory_used@@Base+0x36380>
  40f14c:	add	x22, x22, #0x8d8
  40f150:	ldr	w1, [x22]
  40f154:	mov	x2, x20
  40f158:	ldr	x0, [x21, #24]
  40f15c:	bl	404d80 <symlinkat@plt>
  40f160:	mov	w19, w0
  40f164:	cbnz	w0, 40f1d8 <wcrtomb@plt+0xa288>
  40f168:	mov	x1, x21
  40f16c:	mov	x0, x20
  40f170:	mov	w7, #0x100                 	// #256
  40f174:	mov	w6, #0x0                   	// #0
  40f178:	mov	w5, #0x32                  	// #50
  40f17c:	mov	w4, #0x0                   	// #0
  40f180:	mov	w3, #0x0                   	// #0
  40f184:	mov	w2, #0xffffffff            	// #-1
  40f188:	bl	40e1d0 <wcrtomb@plt+0x9280>
  40f18c:	b	40f1b4 <wcrtomb@plt+0xa264>
  40f190:	ldr	x0, [x21, #24]
  40f194:	ldrb	w1, [x0]
  40f198:	cmp	w1, #0x2f
  40f19c:	b.ne	40f1c8 <wcrtomb@plt+0xa278>  // b.any
  40f1a0:	add	x2, sp, #0x3f
  40f1a4:	mov	x0, x20
  40f1a8:	mov	w1, #0x1                   	// #1
  40f1ac:	bl	40ed2c <wcrtomb@plt+0x9ddc>
  40f1b0:	mov	w19, w0
  40f1b4:	mov	w0, w19
  40f1b8:	ldp	x19, x20, [sp, #16]
  40f1bc:	ldp	x21, x22, [sp, #32]
  40f1c0:	ldp	x29, x30, [sp], #64
  40f1c4:	ret
  40f1c8:	bl	41b458 <wcrtomb@plt+0x16508>
  40f1cc:	tst	w0, #0xff
  40f1d0:	b.eq	40f148 <wcrtomb@plt+0xa1f8>  // b.none
  40f1d4:	b	40f1a0 <wcrtomb@plt+0xa250>
  40f1d8:	add	x2, sp, #0x3f
  40f1dc:	mov	x0, x20
  40f1e0:	mov	w1, #0x0                   	// #0
  40f1e4:	bl	40e9e0 <wcrtomb@plt+0x9a90>
  40f1e8:	cbz	w0, 40f1fc <wcrtomb@plt+0xa2ac>
  40f1ec:	cmp	w0, #0x2
  40f1f0:	b.ne	40f150 <wcrtomb@plt+0xa200>  // b.any
  40f1f4:	mov	w19, #0x0                   	// #0
  40f1f8:	b	40f1b4 <wcrtomb@plt+0xa264>
  40f1fc:	ldr	x0, [x21, #24]
  40f200:	mov	x1, x20
  40f204:	mov	w19, #0xffffffff            	// #-1
  40f208:	bl	425230 <wcrtomb@plt+0x202e0>
  40f20c:	b	40f1b4 <wcrtomb@plt+0xa264>
  40f210:	stp	x29, x30, [sp, #-384]!
  40f214:	mov	x29, sp
  40f218:	stp	x19, x20, [sp, #16]
  40f21c:	mov	x20, x0
  40f220:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f224:	stp	x21, x22, [sp, #32]
  40f228:	mov	w21, w1
  40f22c:	ldrb	w0, [x0, #93]
  40f230:	stp	x23, x24, [sp, #48]
  40f234:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x36380>
  40f238:	stp	x25, x26, [sp, #64]
  40f23c:	stp	x27, x28, [sp, #80]
  40f240:	strb	wzr, [sp, #127]
  40f244:	cbz	w0, 40f27c <wcrtomb@plt+0xa32c>
  40f248:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  40f24c:	ldr	x0, [x22, #832]
  40f250:	cbnz	x0, 40f27c <wcrtomb@plt+0xa32c>
  40f254:	ldr	w0, [x23, #2264]
  40f258:	adrp	x19, 44a000 <_obstack_memory_used@@Base+0x12380>
  40f25c:	add	x19, x19, #0xc29
  40f260:	add	x2, sp, #0x100
  40f264:	mov	x1, x19
  40f268:	mov	w3, #0x0                   	// #0
  40f26c:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40f270:	cbz	w0, 40f33c <wcrtomb@plt+0xa3ec>
  40f274:	mov	x0, x19
  40f278:	bl	418c90 <wcrtomb@plt+0x13d40>
  40f27c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f280:	ldrb	w0, [x0, #41]
  40f284:	cbz	w0, 40f348 <wcrtomb@plt+0xa3f8>
  40f288:	mov	x0, x20
  40f28c:	bl	414f34 <wcrtomb@plt+0xffe4>
  40f290:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f294:	adrp	x6, 472000 <argp_program_version_hook@@Base+0x250>
  40f298:	add	x27, x6, #0x68
  40f29c:	ldr	w0, [x0, #988]
  40f2a0:	ldr	w22, [x27, #104]
  40f2a4:	cmp	w0, #0x0
  40f2a8:	b.gt	40f358 <wcrtomb@plt+0xa408>
  40f2ac:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f2b0:	mov	w1, #0x1ff                 	// #511
  40f2b4:	ldr	w0, [x0, #620]
  40f2b8:	cmp	w0, #0x0
  40f2bc:	mov	w0, #0x1c0                 	// #448
  40f2c0:	csel	w0, w0, w1, gt
  40f2c4:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x39380>
  40f2c8:	add	x28, x25, #0x820
  40f2cc:	and	w22, w22, w0
  40f2d0:	mov	w1, #0xc0                  	// #192
  40f2d4:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  40f2d8:	mov	w24, #0x0                   	// #0
  40f2dc:	ldrb	w0, [x28, #12]
  40f2e0:	mov	w21, #0x0                   	// #0
  40f2e4:	cmp	w0, #0x0
  40f2e8:	add	x0, x26, #0x278
  40f2ec:	csel	w1, wzr, w1, ne  // ne = any
  40f2f0:	str	x0, [sp, #104]
  40f2f4:	orr	w22, w22, w1
  40f2f8:	ldr	w0, [x23, #2264]
  40f2fc:	mov	w2, w22
  40f300:	mov	x1, x20
  40f304:	bl	404530 <mkdirat@plt>
  40f308:	mov	w19, w0
  40f30c:	cbnz	w0, 40f360 <wcrtomb@plt+0xa410>
  40f310:	ldr	w21, [x28, #16]
  40f314:	mov	w5, #0x100                 	// #256
  40f318:	mov	w24, #0x1ff                 	// #511
  40f31c:	bic	w21, w22, w21
  40f320:	ldr	w4, [x27, #104]
  40f324:	mov	w3, w24
  40f328:	mov	w2, w21
  40f32c:	mov	x1, x27
  40f330:	mov	x0, x20
  40f334:	bl	40de44 <wcrtomb@plt+0x8ef4>
  40f338:	b	40f490 <wcrtomb@plt+0xa540>
  40f33c:	ldr	x0, [sp, #256]
  40f340:	str	x0, [x22, #832]
  40f344:	b	40f27c <wcrtomb@plt+0xa32c>
  40f348:	cmp	w21, #0x44
  40f34c:	b.ne	40f290 <wcrtomb@plt+0xa340>  // b.any
  40f350:	bl	417070 <wcrtomb@plt+0x12120>
  40f354:	b	40f290 <wcrtomb@plt+0xa340>
  40f358:	mov	w0, #0x1c0                 	// #448
  40f35c:	b	40f2c4 <wcrtomb@plt+0xa374>
  40f360:	bl	404e10 <__errno_location@plt>
  40f364:	mov	x26, x0
  40f368:	ldr	w0, [x0]
  40f36c:	cmp	w0, #0x11
  40f370:	b.ne	40f560 <wcrtomb@plt+0xa610>  // b.any
  40f374:	ldrb	w1, [sp, #127]
  40f378:	ldr	x0, [sp, #104]
  40f37c:	ldrb	w0, [x0]
  40f380:	cbnz	w1, 40f41c <wcrtomb@plt+0xa4cc>
  40f384:	cbnz	w0, 40f420 <wcrtomb@plt+0xa4d0>
  40f388:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f38c:	ldr	w0, [x0, #760]
  40f390:	tst	w0, #0xfffffffd
  40f394:	b.ne	40f560 <wcrtomb@plt+0xa610>  // b.any
  40f398:	add	x1, sp, #0x80
  40f39c:	mov	x0, x20
  40f3a0:	bl	4186c8 <wcrtomb@plt+0x13778>
  40f3a4:	cbnz	w0, 40f558 <wcrtomb@plt+0xa608>
  40f3a8:	ldr	w21, [sp, #144]
  40f3ac:	and	w0, w21, #0xf000
  40f3b0:	cmp	w0, #0x4, lsl #12
  40f3b4:	b.ne	40f554 <wcrtomb@plt+0xa604>  // b.any
  40f3b8:	ldrb	w0, [sp, #127]
  40f3bc:	cbz	w0, 40f580 <wcrtomb@plt+0xa630>
  40f3c0:	ldr	x19, [x25, #2080]
  40f3c4:	cbnz	x19, 40f4b0 <wcrtomb@plt+0xa560>
  40f3c8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f3cc:	ldr	x0, [x0, #1016]
  40f3d0:	cbz	x0, 40f3d8 <wcrtomb@plt+0xa488>
  40f3d4:	blr	x0
  40f3d8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40f3dc:	add	x1, x1, #0xbba
  40f3e0:	mov	w2, #0x5                   	// #5
  40f3e4:	mov	x0, #0x0                   	// #0
  40f3e8:	bl	404d00 <dcgettext@plt>
  40f3ec:	mov	x19, x0
  40f3f0:	mov	x0, x20
  40f3f4:	bl	436084 <argp_usage@@Base+0x8ba4>
  40f3f8:	mov	w1, #0x0                   	// #0
  40f3fc:	mov	x3, x0
  40f400:	mov	x2, x19
  40f404:	mov	w0, #0x0                   	// #0
  40f408:	bl	4042e0 <error@plt>
  40f40c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40f410:	mov	w1, #0x2                   	// #2
  40f414:	str	w1, [x0, #3464]
  40f418:	b	40f48c <wcrtomb@plt+0xa53c>
  40f41c:	cbz	w0, 40f398 <wcrtomb@plt+0xa448>
  40f420:	ldr	w0, [x23, #2264]
  40f424:	add	x2, sp, #0x100
  40f428:	mov	x1, x20
  40f42c:	mov	w3, #0x100                 	// #256
  40f430:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40f434:	cbz	w0, 40f444 <wcrtomb@plt+0xa4f4>
  40f438:	mov	w0, #0x11                  	// #17
  40f43c:	str	w0, [x26]
  40f440:	b	40f398 <wcrtomb@plt+0xa448>
  40f444:	ldr	w0, [sp, #272]
  40f448:	and	w0, w0, #0xf000
  40f44c:	cmp	w0, #0xa, lsl #12
  40f450:	b.ne	40f438 <wcrtomb@plt+0xa4e8>  // b.any
  40f454:	ldr	w0, [x23, #2264]
  40f458:	mov	x1, x20
  40f45c:	add	x2, sp, #0x100
  40f460:	mov	w3, #0x0                   	// #0
  40f464:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40f468:	mov	w1, #0x11                  	// #17
  40f46c:	cbz	w0, 40f478 <wcrtomb@plt+0xa528>
  40f470:	str	w1, [x26]
  40f474:	b	40f398 <wcrtomb@plt+0xa448>
  40f478:	ldr	w0, [sp, #272]
  40f47c:	str	w1, [x26]
  40f480:	and	w0, w0, #0xf000
  40f484:	cmp	w0, #0x4, lsl #12
  40f488:	b.ne	40f398 <wcrtomb@plt+0xa448>  // b.any
  40f48c:	mov	w19, #0x0                   	// #0
  40f490:	mov	w0, w19
  40f494:	ldp	x19, x20, [sp, #16]
  40f498:	ldp	x21, x22, [sp, #32]
  40f49c:	ldp	x23, x24, [sp, #48]
  40f4a0:	ldp	x25, x26, [sp, #64]
  40f4a4:	ldp	x27, x28, [sp, #80]
  40f4a8:	ldp	x29, x30, [sp], #384
  40f4ac:	ret
  40f4b0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  40f4b4:	add	x0, x0, #0x8d8
  40f4b8:	ldr	w3, [x19, #84]
  40f4bc:	add	x2, sp, #0x100
  40f4c0:	ldr	x1, [x19, #160]
  40f4c4:	ldr	w0, [x0]
  40f4c8:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  40f4cc:	cbz	w0, 40f4dc <wcrtomb@plt+0xa58c>
  40f4d0:	ldr	x0, [x19, #160]
  40f4d4:	bl	4252dc <wcrtomb@plt+0x2038c>
  40f4d8:	b	40f48c <wcrtomb@plt+0xa53c>
  40f4dc:	ldr	x0, [sp, #128]
  40f4e0:	ldr	x1, [sp, #256]
  40f4e4:	cmp	x1, x0
  40f4e8:	b.ne	40f54c <wcrtomb@plt+0xa5fc>  // b.any
  40f4ec:	ldr	x0, [sp, #136]
  40f4f0:	ldr	x1, [sp, #264]
  40f4f4:	cmp	x1, x0
  40f4f8:	b.ne	40f54c <wcrtomb@plt+0xa5fc>  // b.any
  40f4fc:	ldr	x0, [x27, #88]
  40f500:	str	x0, [x19, #8]
  40f504:	ldr	x0, [x27, #96]
  40f508:	str	x0, [x19, #16]
  40f50c:	ldr	w0, [x27, #104]
  40f510:	str	w0, [x19, #24]
  40f514:	ldr	w0, [x27, #112]
  40f518:	str	w0, [x19, #28]
  40f51c:	ldr	w0, [x27, #116]
  40f520:	str	w0, [x19, #32]
  40f524:	ldp	x0, x1, [x27, #216]
  40f528:	stp	x0, x1, [x19, #40]
  40f52c:	ldp	x0, x1, [x27, #232]
  40f530:	stp	x0, x1, [x19, #56]
  40f534:	ldr	w0, [sp, #272]
  40f538:	str	w0, [x19, #72]
  40f53c:	mov	w0, #0xffffffff            	// #-1
  40f540:	str	w0, [x19, #76]
  40f544:	strb	wzr, [x19, #80]
  40f548:	b	40f48c <wcrtomb@plt+0xa53c>
  40f54c:	ldr	x19, [x19]
  40f550:	b	40f3c4 <wcrtomb@plt+0xa474>
  40f554:	mov	w24, #0xffffffff            	// #-1
  40f558:	mov	w0, #0x11                  	// #17
  40f55c:	str	w0, [x26]
  40f560:	add	x2, sp, #0x7f
  40f564:	mov	x0, x20
  40f568:	mov	w1, #0x0                   	// #0
  40f56c:	bl	40e9e0 <wcrtomb@plt+0x9a90>
  40f570:	cbz	w0, 40f59c <wcrtomb@plt+0xa64c>
  40f574:	cmp	w0, #0x1
  40f578:	b.eq	40f2f8 <wcrtomb@plt+0xa3a8>  // b.none
  40f57c:	b	40f584 <wcrtomb@plt+0xa634>
  40f580:	mov	w24, #0xffffffff            	// #-1
  40f584:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f588:	ldr	w0, [x0, #760]
  40f58c:	tst	w0, #0xfffffffd
  40f590:	b.ne	40f490 <wcrtomb@plt+0xa540>  // b.any
  40f594:	mov	w5, #0x0                   	// #0
  40f598:	b	40f320 <wcrtomb@plt+0xa3d0>
  40f59c:	ldr	w0, [x26]
  40f5a0:	cmp	w0, #0x11
  40f5a4:	b.eq	40f584 <wcrtomb@plt+0xa634>  // b.none
  40f5a8:	mov	x0, x20
  40f5ac:	mov	w19, #0x1                   	// #1
  40f5b0:	bl	424e2c <wcrtomb@plt+0x1fedc>
  40f5b4:	b	40f490 <wcrtomb@plt+0xa540>
  40f5b8:	stp	x29, x30, [sp, #-272]!
  40f5bc:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  40f5c0:	mov	x29, sp
  40f5c4:	ldr	w2, [x2, #988]
  40f5c8:	stp	x21, x22, [sp, #32]
  40f5cc:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  40f5d0:	add	x21, x21, #0x68
  40f5d4:	cmp	w2, #0x0
  40f5d8:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  40f5dc:	stp	x23, x24, [sp, #48]
  40f5e0:	mov	w24, w1
  40f5e4:	ldrb	w3, [x2, #633]
  40f5e8:	ldr	w1, [x21, #104]
  40f5ec:	mov	w22, #0xffffffc0            	// #-64
  40f5f0:	csinv	w22, w22, wzr, gt
  40f5f4:	stp	x19, x20, [sp, #16]
  40f5f8:	and	w22, w1, w22
  40f5fc:	stp	x25, x26, [sp, #64]
  40f600:	and	w19, w22, #0x3f
  40f604:	mov	x20, x0
  40f608:	stp	x27, x28, [sp, #80]
  40f60c:	csel	w19, w19, wzr, gt
  40f610:	str	x2, [sp, #104]
  40f614:	strb	wzr, [sp, #143]
  40f618:	cbnz	w3, 40f928 <wcrtomb@plt+0xa9d8>
  40f61c:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  40f620:	ldr	x2, [x2, #624]
  40f624:	cbz	x2, 40f664 <wcrtomb@plt+0xa714>
  40f628:	mov	x2, x21
  40f62c:	mov	w1, #0x66                  	// #102
  40f630:	bl	41e168 <wcrtomb@plt+0x19218>
  40f634:	mov	w19, w0
  40f638:	tbz	w0, #31, 40f938 <wcrtomb@plt+0xa9e8>
  40f63c:	bl	417070 <wcrtomb@plt+0x12120>
  40f640:	mov	w19, #0x0                   	// #0
  40f644:	mov	w0, w19
  40f648:	ldp	x19, x20, [sp, #16]
  40f64c:	ldp	x21, x22, [sp, #32]
  40f650:	ldp	x23, x24, [sp, #48]
  40f654:	ldp	x25, x26, [sp, #64]
  40f658:	ldp	x27, x28, [sp, #80]
  40f65c:	ldp	x29, x30, [sp], #272
  40f660:	ret
  40f664:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f668:	strb	wzr, [sp, #144]
  40f66c:	adrp	x25, 46e000 <_obstack_memory_used@@Base+0x36380>
  40f670:	add	x25, x25, #0x8d8
  40f674:	ldr	w0, [x0, #664]
  40f678:	cmp	w0, #0x0
  40f67c:	b.gt	40f688 <wcrtomb@plt+0xa738>
  40f680:	mov	w26, #0x0                   	// #0
  40f684:	b	40f6d4 <wcrtomb@plt+0xa784>
  40f688:	ldr	x0, [x21, #328]
  40f68c:	cbz	x0, 40f680 <wcrtomb@plt+0xa730>
  40f690:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40f694:	ldr	w0, [x0, #2096]
  40f698:	bic	w0, w1, w0
  40f69c:	and	w0, w0, #0x1ff
  40f6a0:	eor	w19, w19, w0
  40f6a4:	ldr	w0, [x25]
  40f6a8:	mov	w2, w19
  40f6ac:	mov	x1, x20
  40f6b0:	mov	x3, #0x0                   	// #0
  40f6b4:	bl	446ac0 <_obstack_memory_used@@Base+0xee40>
  40f6b8:	cbnz	w0, 40f804 <wcrtomb@plt+0xa8b4>
  40f6bc:	mov	w26, #0x1                   	// #1
  40f6c0:	mov	w2, w24
  40f6c4:	mov	x1, x20
  40f6c8:	mov	x0, x21
  40f6cc:	mov	w3, #0x0                   	// #0
  40f6d0:	bl	4245dc <wcrtomb@plt+0x1f68c>
  40f6d4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f6d8:	mov	w27, #0xb41                 	// #2881
  40f6dc:	add	x0, x0, #0x2f8
  40f6e0:	mov	w28, #0x8b41                	// #35649
  40f6e4:	and	w22, w22, #0x1ff
  40f6e8:	movk	w27, #0x8, lsl #16
  40f6ec:	movk	w28, #0x8, lsl #16
  40f6f0:	str	x0, [sp, #96]
  40f6f4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f6f8:	add	x0, x0, #0x248
  40f6fc:	str	x0, [sp, #112]
  40f700:	ldr	x0, [sp, #96]
  40f704:	ldr	w23, [x0]
  40f708:	cmp	w23, #0x2
  40f70c:	b.ne	40f838 <wcrtomb@plt+0xa8e8>  // b.any
  40f710:	ldr	x0, [sp, #112]
  40f714:	ldrb	w0, [x0]
  40f718:	cmp	w0, #0x0
  40f71c:	csel	w19, w27, w28, ne  // ne = any
  40f720:	cbz	w26, 40f728 <wcrtomb@plt+0xa7d8>
  40f724:	and	w19, w19, #0xffffff7f
  40f728:	cmp	w24, #0x37
  40f72c:	b.ne	40f788 <wcrtomb@plt+0xa838>  // b.any
  40f730:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40f734:	add	x0, x0, #0x820
  40f738:	ldr	w1, [x0, #32]
  40f73c:	cbnz	w1, 40f788 <wcrtomb@plt+0xa838>
  40f740:	mov	w1, #0x1                   	// #1
  40f744:	str	w1, [x0, #32]
  40f748:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40f74c:	ldr	w0, [x0, #480]
  40f750:	tbz	w0, #3, 40f788 <wcrtomb@plt+0xa838>
  40f754:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f758:	ldr	x0, [x0, #1016]
  40f75c:	cbz	x0, 40f764 <wcrtomb@plt+0xa814>
  40f760:	blr	x0
  40f764:	mov	w2, #0x5                   	// #5
  40f768:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40f76c:	mov	x0, #0x0                   	// #0
  40f770:	add	x1, x1, #0xbed
  40f774:	bl	404d00 <dcgettext@plt>
  40f778:	mov	x2, x0
  40f77c:	mov	w1, #0x0                   	// #0
  40f780:	mov	w0, #0x0                   	// #0
  40f784:	bl	4042e0 <error@plt>
  40f788:	ldr	w0, [x25]
  40f78c:	mov	w2, w19
  40f790:	mov	w3, w22
  40f794:	mov	x1, x20
  40f798:	bl	404df0 <openat@plt>
  40f79c:	mov	w19, w0
  40f7a0:	tbnz	w0, #31, 40f7d8 <wcrtomb@plt+0xa888>
  40f7a4:	cmp	w23, #0x2
  40f7a8:	b.ne	40f914 <wcrtomb@plt+0xa9c4>  // b.any
  40f7ac:	add	x1, sp, #0x90
  40f7b0:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  40f7b4:	cbz	w0, 40f844 <wcrtomb@plt+0xa8f4>
  40f7b8:	bl	404e10 <__errno_location@plt>
  40f7bc:	mov	x23, x0
  40f7c0:	mov	w0, w19
  40f7c4:	ldr	w1, [x23]
  40f7c8:	str	w1, [sp, #124]
  40f7cc:	bl	4048c0 <close@plt>
  40f7d0:	ldr	w1, [sp, #124]
  40f7d4:	str	w1, [x23]
  40f7d8:	add	x2, sp, #0x8f
  40f7dc:	mov	x0, x20
  40f7e0:	mov	w1, #0x1                   	// #1
  40f7e4:	bl	40e9e0 <wcrtomb@plt+0x9a90>
  40f7e8:	mov	w19, w0
  40f7ec:	cmp	w0, #0x1
  40f7f0:	b.eq	40f700 <wcrtomb@plt+0xa7b0>  // b.none
  40f7f4:	bl	417070 <wcrtomb@plt+0x12120>
  40f7f8:	cmp	w19, #0x2
  40f7fc:	b.eq	40f640 <wcrtomb@plt+0xa6f0>  // b.none
  40f800:	b	40f828 <wcrtomb@plt+0xa8d8>
  40f804:	add	x2, sp, #0x90
  40f808:	mov	x0, x20
  40f80c:	mov	w1, #0x0                   	// #0
  40f810:	bl	40e9e0 <wcrtomb@plt+0x9a90>
  40f814:	cbz	w0, 40f824 <wcrtomb@plt+0xa8d4>
  40f818:	cmp	w0, #0x2
  40f81c:	b.ne	40f6a4 <wcrtomb@plt+0xa754>  // b.any
  40f820:	b	40f680 <wcrtomb@plt+0xa730>
  40f824:	bl	417070 <wcrtomb@plt+0x12120>
  40f828:	mov	x0, x20
  40f82c:	mov	w19, #0x1                   	// #1
  40f830:	bl	424e5c <wcrtomb@plt+0x1ff0c>
  40f834:	b	40f644 <wcrtomb@plt+0xa6f4>
  40f838:	mov	w19, #0x9c1                 	// #2497
  40f83c:	movk	w19, #0x8, lsl #16
  40f840:	b	40f720 <wcrtomb@plt+0xa7d0>
  40f844:	ldr	w23, [sp, #160]
  40f848:	and	w0, w23, #0xf000
  40f84c:	cmp	w0, #0x8, lsl #12
  40f850:	b.eq	40f86c <wcrtomb@plt+0xa91c>  // b.none
  40f854:	mov	w0, w19
  40f858:	bl	4048c0 <close@plt>
  40f85c:	bl	404e10 <__errno_location@plt>
  40f860:	mov	w1, #0x11                  	// #17
  40f864:	str	w1, [x0]
  40f868:	b	40f7d8 <wcrtomb@plt+0xa888>
  40f86c:	mov	w26, #0xffffffff            	// #-1
  40f870:	mov	x0, x21
  40f874:	bl	4058a8 <wcrtomb@plt+0x958>
  40f878:	ldrb	w0, [x21, #272]
  40f87c:	cbz	w0, 40f944 <wcrtomb@plt+0xa9f4>
  40f880:	add	x2, sp, #0x90
  40f884:	mov	x1, x21
  40f888:	mov	w0, w19
  40f88c:	bl	41cf6c <wcrtomb@plt+0x1801c>
  40f890:	ldr	x0, [sp, #144]
  40f894:	bl	416fd8 <wcrtomb@plt+0x12088>
  40f898:	bl	4058b8 <wcrtomb@plt+0x968>
  40f89c:	ldr	x0, [sp, #104]
  40f8a0:	ldrb	w0, [x0, #633]
  40f8a4:	cbnz	w0, 40f640 <wcrtomb@plt+0xa6f0>
  40f8a8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f8ac:	mov	x22, x0
  40f8b0:	ldr	x1, [x0, #624]
  40f8b4:	cbnz	x1, 40f8ec <wcrtomb@plt+0xa99c>
  40f8b8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f8bc:	mov	w5, w24
  40f8c0:	mov	w4, w26
  40f8c4:	mov	w3, w23
  40f8c8:	ldr	w0, [x0, #760]
  40f8cc:	mov	w2, w19
  40f8d0:	mov	x1, x21
  40f8d4:	mov	w6, #0x0                   	// #0
  40f8d8:	cmp	w0, #0x2
  40f8dc:	mov	x0, x20
  40f8e0:	cset	w7, ne  // ne = any
  40f8e4:	lsl	w7, w7, #8
  40f8e8:	bl	40e1d0 <wcrtomb@plt+0x9280>
  40f8ec:	mov	w0, w19
  40f8f0:	bl	4048c0 <close@plt>
  40f8f4:	mov	w19, w0
  40f8f8:	tbz	w0, #31, 40f904 <wcrtomb@plt+0xa9b4>
  40f8fc:	mov	x0, x20
  40f900:	bl	424d60 <wcrtomb@plt+0x1fe10>
  40f904:	ldr	x0, [x22, #624]
  40f908:	cbz	x0, 40f644 <wcrtomb@plt+0xa6f4>
  40f90c:	bl	41e420 <wcrtomb@plt+0x194d0>
  40f910:	b	40f644 <wcrtomb@plt+0xa6f4>
  40f914:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40f918:	mov	w26, #0x1ff                 	// #511
  40f91c:	ldr	w23, [x0, #2096]
  40f920:	bic	w23, w22, w23
  40f924:	b	40f870 <wcrtomb@plt+0xa920>
  40f928:	mov	w26, #0x0                   	// #0
  40f92c:	mov	w23, #0x0                   	// #0
  40f930:	mov	w19, #0x1                   	// #1
  40f934:	b	40f870 <wcrtomb@plt+0xa920>
  40f938:	mov	w26, #0x0                   	// #0
  40f93c:	mov	w23, #0x0                   	// #0
  40f940:	b	40f870 <wcrtomb@plt+0xa920>
  40f944:	ldr	x0, [x21, #136]
  40f948:	str	x0, [sp, #144]
  40f94c:	ldr	x0, [sp, #144]
  40f950:	cmp	x0, #0x0
  40f954:	b.le	40f890 <wcrtomb@plt+0xa940>
  40f958:	bl	4058d0 <wcrtomb@plt+0x980>
  40f95c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  40f960:	mov	x25, x0
  40f964:	cbnz	x0, 40f9ac <wcrtomb@plt+0xaa5c>
  40f968:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f96c:	ldr	x0, [x0, #1016]
  40f970:	cbz	x0, 40f978 <wcrtomb@plt+0xaa28>
  40f974:	blr	x0
  40f978:	mov	w2, #0x5                   	// #5
  40f97c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40f980:	mov	x0, #0x0                   	// #0
  40f984:	add	x1, x1, #0x41c
  40f988:	bl	404d00 <dcgettext@plt>
  40f98c:	mov	x2, x0
  40f990:	mov	w1, #0x0                   	// #0
  40f994:	mov	w0, #0x0                   	// #0
  40f998:	bl	4042e0 <error@plt>
  40f99c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40f9a0:	mov	w1, #0x2                   	// #2
  40f9a4:	str	w1, [x0, #3464]
  40f9a8:	b	40f890 <wcrtomb@plt+0xa940>
  40f9ac:	bl	405da8 <wcrtomb@plt+0xe58>
  40f9b0:	ldr	x22, [sp, #144]
  40f9b4:	cmp	x22, x0
  40f9b8:	csel	x22, x22, x0, ls  // ls = plast
  40f9bc:	bl	404e10 <__errno_location@plt>
  40f9c0:	str	wzr, [x0]
  40f9c4:	mov	x2, x22
  40f9c8:	mov	x1, x25
  40f9cc:	mov	w0, w19
  40f9d0:	bl	41897c <wcrtomb@plt+0x13a2c>
  40f9d4:	mov	x27, x0
  40f9d8:	ldr	x0, [sp, #144]
  40f9dc:	sub	x0, x0, x22
  40f9e0:	str	x0, [sp, #144]
  40f9e4:	sub	x0, x22, #0x1
  40f9e8:	add	x0, x25, x0
  40f9ec:	bl	405c98 <wcrtomb@plt+0xd48>
  40f9f0:	cmp	x22, x27
  40f9f4:	b.eq	40f94c <wcrtomb@plt+0xa9fc>  // b.none
  40f9f8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40f9fc:	ldr	x0, [x0, #624]
  40fa00:	cbnz	x0, 40f890 <wcrtomb@plt+0xa940>
  40fa04:	mov	x2, x22
  40fa08:	mov	x1, x27
  40fa0c:	mov	x0, x20
  40fa10:	bl	42535c <wcrtomb@plt+0x2040c>
  40fa14:	b	40f890 <wcrtomb@plt+0xa940>
  40fa18:	stp	x29, x30, [sp, #-16]!
  40fa1c:	mov	x29, sp
  40fa20:	bl	417070 <wcrtomb@plt+0x12120>
  40fa24:	mov	w0, #0x0                   	// #0
  40fa28:	ldp	x29, x30, [sp], #16
  40fa2c:	ret
  40fa30:	stp	x29, x30, [sp, #-48]!
  40fa34:	mov	x29, sp
  40fa38:	str	x21, [sp, #32]
  40fa3c:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  40fa40:	stp	x19, x20, [sp, #16]
  40fa44:	bl	404370 <geteuid@plt>
  40fa48:	cmp	w0, #0x0
  40fa4c:	ldr	w0, [x21, #620]
  40fa50:	cset	w1, eq  // eq = none
  40fa54:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  40fa58:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  40fa5c:	add	w0, w0, w1
  40fa60:	add	x19, x19, #0x820
  40fa64:	str	w0, [x21, #620]
  40fa68:	ldr	w0, [x2, #988]
  40fa6c:	strb	w1, [x19, #12]
  40fa70:	add	w0, w0, w1
  40fa74:	str	w0, [x2, #988]
  40fa78:	mov	w0, #0x0                   	// #0
  40fa7c:	bl	404dc0 <umask@plt>
  40fa80:	ldr	w1, [x21, #620]
  40fa84:	str	w0, [x19, #8]
  40fa88:	cmp	w1, #0x0
  40fa8c:	b.le	40faa4 <wcrtomb@plt+0xab54>
  40fa90:	str	wzr, [x19, #16]
  40fa94:	ldp	x19, x20, [sp, #16]
  40fa98:	ldr	x21, [sp, #32]
  40fa9c:	ldp	x29, x30, [sp], #48
  40faa0:	ret
  40faa4:	mov	w20, w0
  40faa8:	bl	404dc0 <umask@plt>
  40faac:	str	w20, [x19, #16]
  40fab0:	b	40fa94 <wcrtomb@plt+0xab44>
  40fab4:	stp	x29, x30, [sp, #-64]!
  40fab8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  40fabc:	mov	x29, sp
  40fac0:	stp	x21, x22, [sp, #32]
  40fac4:	mov	x22, x0
  40fac8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40facc:	stp	x19, x20, [sp, #16]
  40fad0:	mov	x20, x2
  40fad4:	mov	x21, #0x0                   	// #0
  40fad8:	ldr	x19, [x2, #2080]
  40fadc:	stp	x23, x24, [sp, #48]
  40fae0:	ldr	w24, [x0, #8]
  40fae4:	cbz	x19, 40fb18 <wcrtomb@plt+0xabc8>
  40fae8:	ldr	w0, [x19, #92]
  40faec:	ldr	x23, [x19]
  40faf0:	cmp	w0, w24
  40faf4:	b.ne	40fb34 <wcrtomb@plt+0xabe4>  // b.any
  40faf8:	ldr	x0, [x19, #160]
  40fafc:	mov	x1, x22
  40fb00:	bl	404a30 <strcmp@plt>
  40fb04:	cbnz	w0, 40fb34 <wcrtomb@plt+0xabe4>
  40fb08:	mov	x0, x19
  40fb0c:	bl	40dc20 <wcrtomb@plt+0x8cd0>
  40fb10:	cbz	x21, 40fb2c <wcrtomb@plt+0xabdc>
  40fb14:	str	x23, [x21]
  40fb18:	ldp	x19, x20, [sp, #16]
  40fb1c:	ldp	x21, x22, [sp, #32]
  40fb20:	ldp	x23, x24, [sp, #48]
  40fb24:	ldp	x29, x30, [sp], #64
  40fb28:	ret
  40fb2c:	str	x23, [x20, #2080]
  40fb30:	b	40fb18 <wcrtomb@plt+0xabc8>
  40fb34:	mov	x21, x19
  40fb38:	mov	x19, x23
  40fb3c:	b	40fae4 <wcrtomb@plt+0xab94>
  40fb40:	stp	x29, x30, [sp, #-80]!
  40fb44:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  40fb48:	adrp	x0, 40e000 <wcrtomb@plt+0x90b0>
  40fb4c:	mov	x29, sp
  40fb50:	stp	x19, x20, [sp, #16]
  40fb54:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  40fb58:	add	x0, x0, #0x924
  40fb5c:	str	x0, [x1, #4048]
  40fb60:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  40fb64:	ldr	x0, [x19, #4080]
  40fb68:	stp	x21, x22, [sp, #32]
  40fb6c:	stp	x23, x24, [sp, #48]
  40fb70:	str	x25, [sp, #64]
  40fb74:	bl	405c98 <wcrtomb@plt+0xd48>
  40fb78:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fb7c:	ldrb	w0, [x0, #960]
  40fb80:	cbz	w0, 40fbb0 <wcrtomb@plt+0xac60>
  40fb84:	mov	w24, #0x0                   	// #0
  40fb88:	add	x20, x20, #0x68
  40fb8c:	ldr	x1, [x20, #8]
  40fb90:	ldrb	w0, [x1]
  40fb94:	cbnz	w0, 40fc18 <wcrtomb@plt+0xacc8>
  40fb98:	ldp	x19, x20, [sp, #16]
  40fb9c:	ldp	x21, x22, [sp, #32]
  40fba0:	ldp	x23, x24, [sp, #48]
  40fba4:	ldr	x25, [sp, #64]
  40fba8:	ldp	x29, x30, [sp], #80
  40fbac:	b	417070 <wcrtomb@plt+0x12120>
  40fbb0:	ldr	x0, [x20, #104]
  40fbb4:	bl	41b458 <wcrtomb@plt+0x16508>
  40fbb8:	tst	w0, #0xff
  40fbbc:	b.eq	40fb84 <wcrtomb@plt+0xac34>  // b.none
  40fbc0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fbc4:	ldr	x0, [x0, #1016]
  40fbc8:	cbz	x0, 40fbd0 <wcrtomb@plt+0xac80>
  40fbcc:	blr	x0
  40fbd0:	mov	w2, #0x5                   	// #5
  40fbd4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40fbd8:	mov	x0, #0x0                   	// #0
  40fbdc:	add	x1, x1, #0xc1a
  40fbe0:	bl	404d00 <dcgettext@plt>
  40fbe4:	mov	x21, x0
  40fbe8:	ldr	x0, [x20, #104]
  40fbec:	mov	w24, #0x1                   	// #1
  40fbf0:	bl	436084 <argp_usage@@Base+0x8ba4>
  40fbf4:	mov	x3, x0
  40fbf8:	mov	w1, #0x0                   	// #0
  40fbfc:	mov	w0, #0x0                   	// #0
  40fc00:	mov	x2, x21
  40fc04:	bl	4042e0 <error@plt>
  40fc08:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40fc0c:	mov	w1, #0x2                   	// #2
  40fc10:	str	w1, [x0, #3464]
  40fc14:	b	40fb88 <wcrtomb@plt+0xac38>
  40fc18:	cbnz	w24, 40fb98 <wcrtomb@plt+0xac48>
  40fc1c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fc20:	ldrb	w0, [x0, #600]
  40fc24:	cbz	w0, 40fc38 <wcrtomb@plt+0xace8>
  40fc28:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40fc2c:	add	x0, x0, #0xc38
  40fc30:	bl	41f1c0 <wcrtomb@plt+0x1a270>
  40fc34:	cbz	w0, 40fb98 <wcrtomb@plt+0xac48>
  40fc38:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fc3c:	ldr	w0, [x0, #652]
  40fc40:	cbz	w0, 40fc54 <wcrtomb@plt+0xad04>
  40fc44:	ldr	x1, [x19, #4080]
  40fc48:	mov	x0, x20
  40fc4c:	mov	x2, #0xffffffffffffffff    	// #-1
  40fc50:	bl	416e70 <wcrtomb@plt+0x11f20>
  40fc54:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  40fc58:	ldrb	w0, [x25, #976]
  40fc5c:	cbnz	w0, 40fc7c <wcrtomb@plt+0xad2c>
  40fc60:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fc64:	mov	w1, #0x0                   	// #0
  40fc68:	ldr	w21, [x0, #8]
  40fc6c:	ldr	x0, [x20, #8]
  40fc70:	bl	40e500 <wcrtomb@plt+0x95b0>
  40fc74:	mov	w0, w21
  40fc78:	bl	418a9c <wcrtomb@plt+0x13b4c>
  40fc7c:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  40fc80:	ldrb	w0, [x23, #765]
  40fc84:	cbz	w0, 40fcf8 <wcrtomb@plt+0xada8>
  40fc88:	ldr	x0, [x20, #8]
  40fc8c:	mov	w1, #0x0                   	// #0
  40fc90:	bl	4186e4 <wcrtomb@plt+0x13794>
  40fc94:	tst	w0, #0xff
  40fc98:	b.ne	40fcf8 <wcrtomb@plt+0xada8>  // b.any
  40fc9c:	bl	404e10 <__errno_location@plt>
  40fca0:	ldr	w21, [x0]
  40fca4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fca8:	ldr	x0, [x0, #1016]
  40fcac:	cbz	x0, 40fcb4 <wcrtomb@plt+0xad64>
  40fcb0:	blr	x0
  40fcb4:	mov	w2, #0x5                   	// #5
  40fcb8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40fcbc:	mov	x0, #0x0                   	// #0
  40fcc0:	add	x1, x1, #0xc40
  40fcc4:	bl	404d00 <dcgettext@plt>
  40fcc8:	mov	x19, x0
  40fccc:	ldr	x0, [x20, #8]
  40fcd0:	bl	436084 <argp_usage@@Base+0x8ba4>
  40fcd4:	mov	x3, x0
  40fcd8:	mov	w1, w21
  40fcdc:	mov	w0, #0x0                   	// #0
  40fce0:	mov	x2, x19
  40fce4:	bl	4042e0 <error@plt>
  40fce8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40fcec:	mov	w1, #0x2                   	// #2
  40fcf0:	str	w1, [x0, #3464]
  40fcf4:	b	40fb98 <wcrtomb@plt+0xac48>
  40fcf8:	mov	x0, x20
  40fcfc:	bl	41cee4 <wcrtomb@plt+0x17f94>
  40fd00:	tst	w0, #0xff
  40fd04:	b.ne	40fd60 <wcrtomb@plt+0xae10>  // b.any
  40fd08:	ldr	x0, [x19, #4080]
  40fd0c:	ldrb	w21, [x0, #156]
  40fd10:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fd14:	ldr	x22, [x20, #8]
  40fd18:	ldrb	w0, [x0, #633]
  40fd1c:	cbnz	w0, 410014 <wcrtomb@plt+0xb0c4>
  40fd20:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fd24:	ldr	x0, [x0, #624]
  40fd28:	cbnz	x0, 410014 <wcrtomb@plt+0xb0c4>
  40fd2c:	cbz	w21, 40fdbc <wcrtomb@plt+0xae6c>
  40fd30:	sub	w1, w21, #0x30
  40fd34:	and	w0, w1, #0xff
  40fd38:	cmp	w0, #0x26
  40fd3c:	b.hi	40feec <wcrtomb@plt+0xaf9c>  // b.pmore
  40fd40:	cmp	w1, #0x26
  40fd44:	b.hi	40feec <wcrtomb@plt+0xaf9c>  // b.pmore
  40fd48:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  40fd4c:	add	x0, x0, #0xd30
  40fd50:	ldrb	w0, [x0, w1, uxtw]
  40fd54:	adr	x1, 40fd60 <wcrtomb@plt+0xae10>
  40fd58:	add	x0, x1, w0, sxtb #2
  40fd5c:	br	x0
  40fd60:	mov	w21, #0x53                  	// #83
  40fd64:	b	40fd10 <wcrtomb@plt+0xadc0>
  40fd68:	adrp	x19, 40e000 <wcrtomb@plt+0x90b0>
  40fd6c:	add	x19, x19, #0xf20
  40fd70:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fd74:	ldr	w0, [x0, #760]
  40fd78:	cmp	w0, #0x3
  40fd7c:	b.eq	40ff5c <wcrtomb@plt+0xb00c>  // b.none
  40fd80:	cmp	w0, #0x6
  40fd84:	b.eq	40ff8c <wcrtomb@plt+0xb03c>  // b.none
  40fd88:	ldr	x0, [x20, #8]
  40fd8c:	mov	w1, w21
  40fd90:	blr	x19
  40fd94:	cbnz	w0, 40fff4 <wcrtomb@plt+0xb0a4>
  40fd98:	ldp	x19, x20, [sp, #16]
  40fd9c:	ldp	x21, x22, [sp, #32]
  40fda0:	ldp	x23, x24, [sp, #48]
  40fda4:	ldr	x25, [sp, #64]
  40fda8:	ldp	x29, x30, [sp], #80
  40fdac:	ret
  40fdb0:	adrp	x19, 40f000 <wcrtomb@plt+0xa0b0>
  40fdb4:	add	x19, x19, #0x11c
  40fdb8:	b	40fd70 <wcrtomb@plt+0xae20>
  40fdbc:	mov	w24, #0x1                   	// #1
  40fdc0:	ldrb	w0, [x20, #16]
  40fdc4:	cbnz	w0, 40ff50 <wcrtomb@plt+0xb000>
  40fdc8:	adrp	x19, 40f000 <wcrtomb@plt+0xa0b0>
  40fdcc:	add	x19, x19, #0x5b8
  40fdd0:	b	40fd70 <wcrtomb@plt+0xae20>
  40fdd4:	mov	w24, #0x1                   	// #1
  40fdd8:	ldr	w0, [x20, #104]
  40fddc:	orr	w0, w0, #0x2000
  40fde0:	adrp	x19, 40e000 <wcrtomb@plt+0x90b0>
  40fde4:	add	x19, x19, #0xc44
  40fde8:	str	w0, [x20, #104]
  40fdec:	cbnz	w24, 40fd70 <wcrtomb@plt+0xae20>
  40fdf0:	b	40fb98 <wcrtomb@plt+0xac48>
  40fdf4:	mov	w24, #0x1                   	// #1
  40fdf8:	ldr	w0, [x20, #104]
  40fdfc:	orr	w0, w0, #0x6000
  40fe00:	b	40fde0 <wcrtomb@plt+0xae90>
  40fe04:	adrp	x19, 40e000 <wcrtomb@plt+0x90b0>
  40fe08:	add	x19, x19, #0xb64
  40fe0c:	b	40fd70 <wcrtomb@plt+0xae20>
  40fe10:	mov	w24, #0x1                   	// #1
  40fe14:	ldrb	w0, [x20, #376]
  40fe18:	adrp	x19, 40f000 <wcrtomb@plt+0xa0b0>
  40fe1c:	add	x19, x19, #0x210
  40fe20:	cbz	w0, 40fdec <wcrtomb@plt+0xae9c>
  40fe24:	mov	w0, #0x1                   	// #1
  40fe28:	strb	w0, [x25, #976]
  40fe2c:	b	40fdec <wcrtomb@plt+0xae9c>
  40fe30:	adrp	x19, 40d000 <wcrtomb@plt+0x80b0>
  40fe34:	add	x19, x19, #0xc68
  40fe38:	b	40fd70 <wcrtomb@plt+0xae20>
  40fe3c:	mov	w24, #0x1                   	// #1
  40fe40:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fe44:	ldr	x0, [x0, #1016]
  40fe48:	cbz	x0, 40fe50 <wcrtomb@plt+0xaf00>
  40fe4c:	blr	x0
  40fe50:	mov	w2, #0x5                   	// #5
  40fe54:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40fe58:	mov	x0, #0x0                   	// #0
  40fe5c:	add	x1, x1, #0xc63
  40fe60:	bl	404d00 <dcgettext@plt>
  40fe64:	mov	x19, x0
  40fe68:	ldr	x0, [x20, #8]
  40fe6c:	bl	436084 <argp_usage@@Base+0x8ba4>
  40fe70:	mov	x3, x0
  40fe74:	mov	x2, x19
  40fe78:	mov	w1, #0x0                   	// #0
  40fe7c:	mov	w0, #0x0                   	// #0
  40fe80:	bl	4042e0 <error@plt>
  40fe84:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40fe88:	mov	w1, #0x2                   	// #2
  40fe8c:	adrp	x19, 40f000 <wcrtomb@plt+0xa0b0>
  40fe90:	add	x19, x19, #0xa18
  40fe94:	str	w1, [x0, #3464]
  40fe98:	b	40fdec <wcrtomb@plt+0xae9c>
  40fe9c:	mov	w24, #0x1                   	// #1
  40fea0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40fea4:	ldr	x0, [x0, #1016]
  40fea8:	cbz	x0, 40feb0 <wcrtomb@plt+0xaf60>
  40feac:	blr	x0
  40feb0:	mov	w2, #0x5                   	// #5
  40feb4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40feb8:	mov	x0, #0x0                   	// #0
  40febc:	add	x1, x1, #0xc9f
  40fec0:	bl	404d00 <dcgettext@plt>
  40fec4:	mov	x2, x0
  40fec8:	mov	w1, #0x0                   	// #0
  40fecc:	mov	w0, #0x0                   	// #0
  40fed0:	bl	4042e0 <error@plt>
  40fed4:	adrp	x19, 40d000 <wcrtomb@plt+0x80b0>
  40fed8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40fedc:	mov	w1, #0x2                   	// #2
  40fee0:	add	x19, x19, #0xc18
  40fee4:	str	w1, [x0, #3464]
  40fee8:	b	40fdec <wcrtomb@plt+0xae9c>
  40feec:	mov	w24, #0x1                   	// #1
  40fef0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40fef4:	adrp	x19, 40f000 <wcrtomb@plt+0xa0b0>
  40fef8:	add	x19, x19, #0x5b8
  40fefc:	ldr	w0, [x0, #480]
  40ff00:	tbz	w0, #16, 40fdec <wcrtomb@plt+0xae9c>
  40ff04:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ff08:	ldr	x0, [x0, #1016]
  40ff0c:	cbz	x0, 40ff14 <wcrtomb@plt+0xafc4>
  40ff10:	blr	x0
  40ff14:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40ff18:	add	x1, x1, #0xcbb
  40ff1c:	mov	w2, #0x5                   	// #5
  40ff20:	mov	x0, #0x0                   	// #0
  40ff24:	bl	404d00 <dcgettext@plt>
  40ff28:	mov	x25, x0
  40ff2c:	mov	x0, x22
  40ff30:	bl	436084 <argp_usage@@Base+0x8ba4>
  40ff34:	mov	w4, w21
  40ff38:	mov	x3, x0
  40ff3c:	mov	x2, x25
  40ff40:	mov	w1, #0x0                   	// #0
  40ff44:	mov	w0, #0x0                   	// #0
  40ff48:	bl	4042e0 <error@plt>
  40ff4c:	b	40fdec <wcrtomb@plt+0xae9c>
  40ff50:	adrp	x19, 40f000 <wcrtomb@plt+0xa0b0>
  40ff54:	add	x19, x19, #0x210
  40ff58:	b	40fdec <wcrtomb@plt+0xae9c>
  40ff5c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ff60:	ldrb	w1, [x0, #42]
  40ff64:	mov	x0, x22
  40ff68:	bl	4191f8 <wcrtomb@plt+0x142a8>
  40ff6c:	cbnz	w0, 40fd88 <wcrtomb@plt+0xae38>
  40ff70:	bl	404e10 <__errno_location@plt>
  40ff74:	ldr	w0, [x0]
  40ff78:	tst	w0, #0xfffffffd
  40ff7c:	b.eq	40fd88 <wcrtomb@plt+0xae38>  // b.none
  40ff80:	mov	x0, x22
  40ff84:	bl	42531c <wcrtomb@plt+0x203cc>
  40ff88:	b	40fb98 <wcrtomb@plt+0xac48>
  40ff8c:	mov	x0, x22
  40ff90:	mov	x1, #0x0                   	// #0
  40ff94:	bl	40e95c <wcrtomb@plt+0x9a0c>
  40ff98:	tst	w0, #0xff
  40ff9c:	b.eq	40fd88 <wcrtomb@plt+0xae38>  // b.none
  40ffa0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  40ffa4:	ldr	w0, [x0, #480]
  40ffa8:	tbz	w0, #11, 40fb98 <wcrtomb@plt+0xac48>
  40ffac:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  40ffb0:	ldr	x0, [x0, #1016]
  40ffb4:	cbz	x0, 40ffbc <wcrtomb@plt+0xb06c>
  40ffb8:	blr	x0
  40ffbc:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  40ffc0:	add	x1, x1, #0xcf0
  40ffc4:	mov	w2, #0x5                   	// #5
  40ffc8:	mov	x0, #0x0                   	// #0
  40ffcc:	bl	404d00 <dcgettext@plt>
  40ffd0:	mov	x19, x0
  40ffd4:	mov	x0, x22
  40ffd8:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  40ffdc:	mov	x2, x19
  40ffe0:	mov	x3, x0
  40ffe4:	mov	w1, #0x0                   	// #0
  40ffe8:	mov	w0, #0x0                   	// #0
  40ffec:	bl	4042e0 <error@plt>
  40fff0:	b	40fb98 <wcrtomb@plt+0xac48>
  40fff4:	ldrb	w0, [x23, #765]
  40fff8:	cbz	w0, 40fd98 <wcrtomb@plt+0xae48>
  40fffc:	ldp	x19, x20, [sp, #16]
  410000:	ldp	x21, x22, [sp, #32]
  410004:	ldp	x23, x24, [sp, #48]
  410008:	ldr	x25, [sp, #64]
  41000c:	ldp	x29, x30, [sp], #80
  410010:	b	4185a4 <wcrtomb@plt+0x13654>
  410014:	cbz	w21, 40fdc0 <wcrtomb@plt+0xae70>
  410018:	sub	w1, w21, #0x30
  41001c:	and	w0, w1, #0xff
  410020:	cmp	w0, #0x26
  410024:	b.hi	40fef0 <wcrtomb@plt+0xafa0>  // b.pmore
  410028:	cmp	w1, #0x26
  41002c:	b.hi	40fef0 <wcrtomb@plt+0xafa0>  // b.pmore
  410030:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  410034:	add	x0, x0, #0xd58
  410038:	ldrh	w0, [x0, w1, uxtw #1]
  41003c:	adr	x1, 410048 <wcrtomb@plt+0xb0f8>
  410040:	add	x0, x1, w0, sxth #2
  410044:	br	x0
  410048:	stp	x29, x30, [sp, #-80]!
  41004c:	mov	x3, x1
  410050:	mov	x29, sp
  410054:	str	x23, [sp, #48]
  410058:	adrp	x23, 46e000 <_obstack_memory_used@@Base+0x36380>
  41005c:	stp	x19, x20, [sp, #16]
  410060:	mov	x19, x1
  410064:	ldr	w2, [x23, #2264]
  410068:	mov	x1, x0
  41006c:	stp	x21, x22, [sp, #32]
  410070:	mov	x21, x0
  410074:	mov	w0, w2
  410078:	bl	404b30 <renameat@plt>
  41007c:	cbnz	w0, 4100e4 <wcrtomb@plt+0xb194>
  410080:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  410084:	ldr	x20, [x0, #2080]
  410088:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41008c:	ldr	w23, [x0, #8]
  410090:	cbz	x20, 4100d4 <wcrtomb@plt+0xb184>
  410094:	ldr	w0, [x20, #92]
  410098:	cmp	w0, w23
  41009c:	b.ne	4100dc <wcrtomb@plt+0xb18c>  // b.any
  4100a0:	ldr	x22, [x20, #160]
  4100a4:	mov	x1, x21
  4100a8:	mov	x0, x22
  4100ac:	bl	404a30 <strcmp@plt>
  4100b0:	cbnz	w0, 4100dc <wcrtomb@plt+0xb18c>
  4100b4:	mov	x0, x22
  4100b8:	bl	404ae0 <free@plt>
  4100bc:	mov	x0, x19
  4100c0:	bl	436f10 <argp_usage@@Base+0x9a30>
  4100c4:	str	x0, [x20, #160]
  4100c8:	mov	x0, x19
  4100cc:	bl	404280 <strlen@plt>
  4100d0:	str	x0, [x20, #152]
  4100d4:	mov	w0, #0x1                   	// #1
  4100d8:	b	410190 <wcrtomb@plt+0xb240>
  4100dc:	ldr	x20, [x20]
  4100e0:	b	410090 <wcrtomb@plt+0xb140>
  4100e4:	bl	404e10 <__errno_location@plt>
  4100e8:	ldr	w22, [x0]
  4100ec:	mov	x20, x0
  4100f0:	cmp	w22, #0x2
  4100f4:	b.ne	410124 <wcrtomb@plt+0xb1d4>  // b.any
  4100f8:	add	x1, sp, #0x4f
  4100fc:	mov	x0, x19
  410100:	bl	40dfcc <wcrtomb@plt+0x907c>
  410104:	cbnz	w0, 410124 <wcrtomb@plt+0xb1d4>
  410108:	ldr	w2, [x23, #2264]
  41010c:	mov	x3, x19
  410110:	mov	x1, x21
  410114:	mov	w0, w2
  410118:	bl	404b30 <renameat@plt>
  41011c:	cbz	w0, 4100d4 <wcrtomb@plt+0xb184>
  410120:	ldr	w22, [x20]
  410124:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410128:	ldr	x0, [x0, #1016]
  41012c:	cbz	x0, 410134 <wcrtomb@plt+0xb1e4>
  410130:	blr	x0
  410134:	mov	w2, #0x5                   	// #5
  410138:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41013c:	mov	x0, #0x0                   	// #0
  410140:	add	x1, x1, #0xd10
  410144:	bl	404d00 <dcgettext@plt>
  410148:	mov	x20, x0
  41014c:	mov	x1, x21
  410150:	mov	w0, #0x0                   	// #0
  410154:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  410158:	mov	x21, x0
  41015c:	mov	x1, x19
  410160:	mov	w0, #0x1                   	// #1
  410164:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  410168:	mov	x4, x0
  41016c:	mov	w1, w22
  410170:	mov	w0, #0x0                   	// #0
  410174:	mov	x3, x21
  410178:	mov	x2, x20
  41017c:	bl	4042e0 <error@plt>
  410180:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  410184:	mov	w1, #0x2                   	// #2
  410188:	str	w1, [x0, #3464]
  41018c:	mov	w0, #0x0                   	// #0
  410190:	ldp	x19, x20, [sp, #16]
  410194:	ldp	x21, x22, [sp, #32]
  410198:	ldr	x23, [sp, #48]
  41019c:	ldp	x29, x30, [sp], #80
  4101a0:	ret
  4101a4:	ret
  4101a8:	ret
  4101ac:	stp	x29, x30, [sp, #-32]!
  4101b0:	mov	x29, sp
  4101b4:	stp	x19, x20, [sp, #16]
  4101b8:	mov	x20, x0
  4101bc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4101c0:	ldr	x19, [x0, #2120]
  4101c4:	cbnz	x19, 4101d8 <wcrtomb@plt+0xb288>
  4101c8:	mov	w0, #0x0                   	// #0
  4101cc:	ldp	x19, x20, [sp, #16]
  4101d0:	ldp	x29, x30, [sp], #32
  4101d4:	ret
  4101d8:	ldr	x0, [x19, #8]
  4101dc:	mov	x1, x20
  4101e0:	bl	404a30 <strcmp@plt>
  4101e4:	cbz	w0, 4101f0 <wcrtomb@plt+0xb2a0>
  4101e8:	ldr	x19, [x19]
  4101ec:	b	4101c4 <wcrtomb@plt+0xb274>
  4101f0:	mov	w0, #0x1                   	// #1
  4101f4:	b	4101cc <wcrtomb@plt+0xb27c>
  4101f8:	stp	x29, x30, [sp, #-64]!
  4101fc:	mov	x29, sp
  410200:	stp	x19, x20, [sp, #16]
  410204:	mov	x19, x2
  410208:	mov	x20, x0
  41020c:	mov	w2, #0x0                   	// #0
  410210:	mov	x0, x19
  410214:	str	x21, [sp, #32]
  410218:	mov	x21, x1
  41021c:	add	x1, sp, #0x38
  410220:	bl	41835c <wcrtomb@plt+0x1340c>
  410224:	tbnz	x1, #63, 410234 <wcrtomb@plt+0xb2e4>
  410228:	ldr	x1, [sp, #56]
  41022c:	ldrb	w1, [x1]
  410230:	cbz	w1, 410284 <wcrtomb@plt+0xb334>
  410234:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410238:	ldr	x0, [x0, #1016]
  41023c:	cbz	x0, 410244 <wcrtomb@plt+0xb2f4>
  410240:	blr	x0
  410244:	mov	w2, #0x5                   	// #5
  410248:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41024c:	mov	x0, #0x0                   	// #0
  410250:	add	x1, x1, #0xda6
  410254:	bl	404d00 <dcgettext@plt>
  410258:	mov	x2, x0
  41025c:	mov	w1, #0x0                   	// #0
  410260:	mov	w0, #0x0                   	// #0
  410264:	bl	4042e0 <error@plt>
  410268:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41026c:	mov	w1, #0x2                   	// #2
  410270:	str	w1, [x0, #3464]
  410274:	ldp	x19, x20, [sp, #16]
  410278:	ldr	x21, [sp, #32]
  41027c:	ldp	x29, x30, [sp], #64
  410280:	ret
  410284:	str	x0, [x21]
  410288:	mov	x1, x19
  41028c:	mov	x0, x20
  410290:	bl	417c2c <wcrtomb@plt+0x12cdc>
  410294:	b	410274 <wcrtomb@plt+0xb324>
  410298:	stp	x29, x30, [sp, #-48]!
  41029c:	mov	x29, sp
  4102a0:	stp	x19, x20, [sp, #16]
  4102a4:	mov	x19, x2
  4102a8:	stp	x21, x22, [sp, #32]
  4102ac:	mov	x22, x1
  4102b0:	mov	x21, x0
  4102b4:	mov	x0, #0x18                  	// #24
  4102b8:	bl	436d44 <argp_usage@@Base+0x9864>
  4102bc:	mov	x20, x0
  4102c0:	mov	x0, x22
  4102c4:	bl	436f10 <argp_usage@@Base+0x9a30>
  4102c8:	str	x0, [x20, #8]
  4102cc:	cbz	x19, 4102dc <wcrtomb@plt+0xb38c>
  4102d0:	mov	x0, x19
  4102d4:	bl	436f10 <argp_usage@@Base+0x9a30>
  4102d8:	mov	x19, x0
  4102dc:	ldr	x0, [x21]
  4102e0:	str	x20, [x21]
  4102e4:	str	x0, [x20]
  4102e8:	str	x19, [x20, #16]
  4102ec:	ldp	x19, x20, [sp, #16]
  4102f0:	ldp	x21, x22, [sp, #32]
  4102f4:	ldp	x29, x30, [sp], #48
  4102f8:	ret
  4102fc:	stp	x29, x30, [sp, #-48]!
  410300:	mov	x29, sp
  410304:	str	x21, [sp, #32]
  410308:	mov	x21, x0
  41030c:	mov	x0, x3
  410310:	stp	x19, x20, [sp, #16]
  410314:	mov	x20, x2
  410318:	mov	x19, x3
  41031c:	bl	436d44 <argp_usage@@Base+0x9864>
  410320:	mov	x2, x19
  410324:	mov	x1, x20
  410328:	ldp	x19, x20, [sp, #16]
  41032c:	str	x0, [x21, #384]
  410330:	ldr	x21, [sp, #32]
  410334:	ldp	x29, x30, [sp], #48
  410338:	b	404200 <memcpy@plt>
  41033c:	stp	x29, x30, [sp, #-32]!
  410340:	mov	x29, sp
  410344:	stp	x19, x20, [sp, #16]
  410348:	mov	x19, x0
  41034c:	mov	x20, x1
  410350:	ldr	x0, [x0]
  410354:	cbz	x0, 410360 <wcrtomb@plt+0xb410>
  410358:	bl	404ae0 <free@plt>
  41035c:	str	xzr, [x19]
  410360:	mov	x2, x19
  410364:	mov	x1, x20
  410368:	mov	w0, #0x0                   	// #0
  41036c:	bl	423164 <wcrtomb@plt+0x1e214>
  410370:	tst	w0, #0xff
  410374:	b.ne	41038c <wcrtomb@plt+0xb43c>  // b.any
  410378:	mov	x1, x20
  41037c:	mov	x0, x19
  410380:	ldp	x19, x20, [sp, #16]
  410384:	ldp	x29, x30, [sp], #32
  410388:	b	417c2c <wcrtomb@plt+0x12cdc>
  41038c:	ldp	x19, x20, [sp, #16]
  410390:	ldp	x29, x30, [sp], #32
  410394:	ret
  410398:	mov	x1, x2
  41039c:	add	x0, x0, #0x30
  4103a0:	b	41033c <wcrtomb@plt+0xb3ec>
  4103a4:	mov	x1, x2
  4103a8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4103ac:	add	x0, x0, #0xf90
  4103b0:	b	41033c <wcrtomb@plt+0xb3ec>
  4103b4:	mov	x1, x2
  4103b8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4103bc:	add	x0, x0, #0xf88
  4103c0:	b	41033c <wcrtomb@plt+0xb3ec>
  4103c4:	mov	x1, x2
  4103c8:	add	x0, x0, #0x20
  4103cc:	b	41033c <wcrtomb@plt+0xb3ec>
  4103d0:	mov	x1, x2
  4103d4:	add	x0, x0, #0x18
  4103d8:	b	41033c <wcrtomb@plt+0xb3ec>
  4103dc:	mov	x1, x2
  4103e0:	add	x0, x0, #0x28
  4103e4:	b	41033c <wcrtomb@plt+0xb3ec>
  4103e8:	stp	x29, x30, [sp, #-48]!
  4103ec:	mov	x29, sp
  4103f0:	stp	x19, x20, [sp, #16]
  4103f4:	mov	x19, x2
  4103f8:	ldr	x20, [x0]
  4103fc:	stp	x21, x22, [sp, #32]
  410400:	mov	x21, x0
  410404:	mov	x22, x1
  410408:	ldp	x1, x0, [x20, #24]
  41040c:	sub	x0, x0, x1
  410410:	cmp	x2, x0
  410414:	b.ls	410424 <wcrtomb@plt+0xb4d4>  // b.plast
  410418:	mov	x1, x2
  41041c:	mov	x0, x20
  410420:	bl	437acc <_obstack_newchunk@@Base>
  410424:	ldr	x0, [x20, #24]
  410428:	mov	x2, x19
  41042c:	mov	x1, x22
  410430:	bl	404200 <memcpy@plt>
  410434:	ldr	x0, [x20, #24]
  410438:	ldr	x2, [x21, #8]
  41043c:	add	x0, x0, x19
  410440:	str	x0, [x20, #24]
  410444:	add	x2, x2, x19
  410448:	ldp	x19, x20, [sp, #16]
  41044c:	str	x2, [x21, #8]
  410450:	ldp	x21, x22, [sp, #32]
  410454:	ldp	x29, x30, [sp], #48
  410458:	ret
  41045c:	stp	x29, x30, [sp, #-48]!
  410460:	mov	x29, sp
  410464:	stp	x19, x20, [sp, #16]
  410468:	mov	x19, x0
  41046c:	ldr	x20, [x0]
  410470:	ldr	x0, [x20, #24]
  410474:	str	x21, [sp, #32]
  410478:	and	w21, w1, #0xff
  41047c:	ldr	x1, [x20, #32]
  410480:	cmp	x1, x0
  410484:	b.ne	410494 <wcrtomb@plt+0xb544>  // b.any
  410488:	mov	x0, x20
  41048c:	mov	x1, #0x1                   	// #1
  410490:	bl	437acc <_obstack_newchunk@@Base>
  410494:	ldr	x0, [x20, #24]
  410498:	add	x1, x0, #0x1
  41049c:	str	x1, [x20, #24]
  4104a0:	strb	w21, [x0]
  4104a4:	ldr	x0, [x19, #8]
  4104a8:	ldr	x21, [sp, #32]
  4104ac:	add	x0, x0, #0x1
  4104b0:	str	x0, [x19, #8]
  4104b4:	ldp	x19, x20, [sp, #16]
  4104b8:	ldp	x29, x30, [sp], #48
  4104bc:	ret
  4104c0:	stp	x29, x30, [sp, #-144]!
  4104c4:	mov	x29, sp
  4104c8:	stp	x19, x20, [sp, #16]
  4104cc:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4104d0:	add	x19, x19, #0x848
  4104d4:	mov	x20, x0
  4104d8:	stp	x21, x22, [sp, #32]
  4104dc:	mov	x22, x1
  4104e0:	ldr	x0, [x19, #8]
  4104e4:	stp	x23, x24, [sp, #48]
  4104e8:	mov	x23, x3
  4104ec:	stp	x25, x26, [sp, #64]
  4104f0:	stp	x27, x28, [sp, #80]
  4104f4:	str	x2, [sp, #96]
  4104f8:	cbnz	x0, 4105dc <wcrtomb@plt+0xb68c>
  4104fc:	mov	x0, #0x100                 	// #256
  410500:	str	x0, [x19, #16]
  410504:	bl	436d44 <argp_usage@@Base+0x9864>
  410508:	str	x0, [x19, #8]
  41050c:	adrp	x25, 447000 <_obstack_memory_used@@Base+0xf380>
  410510:	adrp	x26, 447000 <_obstack_memory_used@@Base+0xf380>
  410514:	add	x28, x19, #0x10
  410518:	add	x25, x25, #0xdcd
  41051c:	add	x26, x26, #0xdc9
  410520:	mov	x21, #0x0                   	// #0
  410524:	ldrb	w2, [x22]
  410528:	ldr	x24, [x19, #8]
  41052c:	cbnz	w2, 4105e4 <wcrtomb@plt+0xb694>
  410530:	strb	wzr, [x24, x21]
  410534:	add	x22, x23, #0x3
  410538:	mov	x0, x24
  41053c:	add	x25, sp, #0x8c
  410540:	bl	404280 <strlen@plt>
  410544:	mov	x21, x0
  410548:	add	x22, x22, x0
  41054c:	mov	x19, #0x0                   	// #0
  410550:	add	x1, sp, #0x78
  410554:	add	x0, x19, x22
  410558:	bl	431400 <argp_usage@@Base+0x3f20>
  41055c:	mov	x1, x0
  410560:	mov	x0, x19
  410564:	sub	x19, x25, x1
  410568:	cmp	x0, x19
  41056c:	b.ne	410550 <wcrtomb@plt+0xb600>  // b.any
  410570:	mov	x2, x19
  410574:	mov	x0, x20
  410578:	bl	4103e8 <wcrtomb@plt+0xb498>
  41057c:	mov	x0, x20
  410580:	mov	w1, #0x20                  	// #32
  410584:	bl	41045c <wcrtomb@plt+0xb50c>
  410588:	mov	x2, x21
  41058c:	mov	x1, x24
  410590:	mov	x0, x20
  410594:	bl	4103e8 <wcrtomb@plt+0xb498>
  410598:	mov	x0, x20
  41059c:	mov	w1, #0x3d                  	// #61
  4105a0:	bl	41045c <wcrtomb@plt+0xb50c>
  4105a4:	ldr	x1, [sp, #96]
  4105a8:	mov	x2, x23
  4105ac:	mov	x0, x20
  4105b0:	bl	4103e8 <wcrtomb@plt+0xb498>
  4105b4:	mov	x0, x20
  4105b8:	mov	w1, #0xa                   	// #10
  4105bc:	bl	41045c <wcrtomb@plt+0xb50c>
  4105c0:	ldp	x19, x20, [sp, #16]
  4105c4:	ldp	x21, x22, [sp, #32]
  4105c8:	ldp	x23, x24, [sp, #48]
  4105cc:	ldp	x25, x26, [sp, #64]
  4105d0:	ldp	x27, x28, [sp, #80]
  4105d4:	ldp	x29, x30, [sp], #144
  4105d8:	ret
  4105dc:	strb	wzr, [x0]
  4105e0:	b	41050c <wcrtomb@plt+0xb5bc>
  4105e4:	ldr	x0, [x19, #16]
  4105e8:	add	x27, x21, #0x2
  4105ec:	cmp	x27, x0
  4105f0:	b.cc	41060c <wcrtomb@plt+0xb6bc>  // b.lo, b.ul, b.last
  4105f4:	mov	x1, x28
  4105f8:	mov	x0, x24
  4105fc:	str	w2, [sp, #108]
  410600:	bl	436e7c <argp_usage@@Base+0x999c>
  410604:	ldr	w2, [sp, #108]
  410608:	str	x0, [x19, #8]
  41060c:	ldr	x0, [x19, #8]
  410610:	cmp	w2, #0x25
  410614:	add	x0, x0, x21
  410618:	b.ne	410630 <wcrtomb@plt+0xb6e0>  // b.any
  41061c:	mov	x1, x26
  410620:	bl	404c40 <strcpy@plt>
  410624:	add	x21, x27, #0x1
  410628:	add	x22, x22, #0x1
  41062c:	b	410524 <wcrtomb@plt+0xb5d4>
  410630:	cmp	w2, #0x3d
  410634:	b.ne	410640 <wcrtomb@plt+0xb6f0>  // b.any
  410638:	mov	x1, x25
  41063c:	b	410620 <wcrtomb@plt+0xb6d0>
  410640:	mov	x27, x21
  410644:	strb	w2, [x0]
  410648:	b	410624 <wcrtomb@plt+0xb6d4>
  41064c:	stp	x29, x30, [sp, #-48]!
  410650:	mov	x29, sp
  410654:	stp	x19, x20, [sp, #16]
  410658:	mov	x20, x0
  41065c:	mov	x19, x2
  410660:	mov	x0, x2
  410664:	str	x21, [sp, #32]
  410668:	mov	x21, x1
  41066c:	bl	404280 <strlen@plt>
  410670:	mov	x2, x19
  410674:	mov	x3, x0
  410678:	mov	x1, x21
  41067c:	mov	x0, x20
  410680:	ldp	x19, x20, [sp, #16]
  410684:	ldr	x21, [sp, #32]
  410688:	ldp	x29, x30, [sp], #48
  41068c:	b	4104c0 <wcrtomb@plt+0xb570>
  410690:	stp	x29, x30, [sp, #-64]!
  410694:	mov	x29, sp
  410698:	stp	x19, x20, [sp, #16]
  41069c:	mov	x19, x0
  4106a0:	mov	x20, x2
  4106a4:	add	x2, sp, #0x38
  4106a8:	str	x21, [sp, #32]
  4106ac:	mov	x21, x1
  4106b0:	mov	x1, x0
  4106b4:	mov	w0, #0x1                   	// #1
  4106b8:	bl	423164 <wcrtomb@plt+0x1e214>
  4106bc:	tst	w0, #0xff
  4106c0:	b.ne	4106d0 <wcrtomb@plt+0xb780>  // b.any
  4106c4:	mov	x0, x19
  4106c8:	bl	436f10 <argp_usage@@Base+0x9a30>
  4106cc:	str	x0, [sp, #56]
  4106d0:	ldr	x2, [sp, #56]
  4106d4:	mov	x1, x21
  4106d8:	mov	x0, x20
  4106dc:	bl	41064c <wcrtomb@plt+0xb6fc>
  4106e0:	ldr	x0, [sp, #56]
  4106e4:	bl	404ae0 <free@plt>
  4106e8:	ldp	x19, x20, [sp, #16]
  4106ec:	ldr	x21, [sp, #32]
  4106f0:	ldp	x29, x30, [sp], #64
  4106f4:	ret
  4106f8:	ldr	x0, [x0, #48]
  4106fc:	b	410690 <wcrtomb@plt+0xb740>
  410700:	mov	x0, x3
  410704:	b	410690 <wcrtomb@plt+0xb740>
  410708:	ldr	x0, [x0, #32]
  41070c:	b	410690 <wcrtomb@plt+0xb740>
  410710:	ldr	x0, [x0, #8]
  410714:	b	410690 <wcrtomb@plt+0xb740>
  410718:	ldr	x0, [x0, #24]
  41071c:	b	410690 <wcrtomb@plt+0xb740>
  410720:	ldr	x0, [x0, #40]
  410724:	b	410690 <wcrtomb@plt+0xb740>
  410728:	mov	x4, x0
  41072c:	mov	x0, x2
  410730:	ldr	x2, [x3]
  410734:	ldr	x3, [x4, #336]
  410738:	mov	x4, #0x18                  	// #24
  41073c:	madd	x2, x2, x4, x3
  410740:	ldr	x3, [x2, #16]
  410744:	ldr	x2, [x2, #8]
  410748:	b	4104c0 <wcrtomb@plt+0xb570>
  41074c:	mov	x4, x0
  410750:	mov	x0, x2
  410754:	ldp	x2, x3, [x4, #72]
  410758:	b	4104c0 <wcrtomb@plt+0xb570>
  41075c:	mov	x4, x0
  410760:	mov	x0, x2
  410764:	ldp	x2, x3, [x4, #56]
  410768:	b	4104c0 <wcrtomb@plt+0xb570>
  41076c:	stp	x29, x30, [sp, #-64]!
  410770:	mov	x29, sp
  410774:	stp	x19, x20, [sp, #16]
  410778:	mov	x20, x0
  41077c:	ldr	x19, [x1]
  410780:	stp	x21, x22, [sp, #32]
  410784:	mov	x21, x4
  410788:	add	x19, x19, #0x1
  41078c:	stp	x23, x24, [sp, #48]
  410790:	mov	x24, x2
  410794:	ldr	x0, [x0]
  410798:	str	x19, [x1]
  41079c:	mov	x1, #0x18                  	// #24
  4107a0:	mov	x23, x3
  4107a4:	mul	x19, x19, x1
  4107a8:	mov	x1, x19
  4107ac:	sub	x19, x19, #0x18
  4107b0:	bl	436da4 <argp_usage@@Base+0x98c4>
  4107b4:	mov	x22, x0
  4107b8:	str	x22, [x20]
  4107bc:	mov	x0, x24
  4107c0:	bl	436f10 <argp_usage@@Base+0x9a30>
  4107c4:	str	x0, [x22, x19]
  4107c8:	add	x1, x21, #0x1
  4107cc:	mov	x0, x23
  4107d0:	ldr	x22, [x20]
  4107d4:	bl	436ee0 <argp_usage@@Base+0x9a00>
  4107d8:	ldr	x1, [x20]
  4107dc:	add	x22, x22, x19
  4107e0:	ldp	x23, x24, [sp, #48]
  4107e4:	add	x19, x1, x19
  4107e8:	str	x0, [x22, #8]
  4107ec:	str	x21, [x19, #16]
  4107f0:	ldp	x19, x20, [sp, #16]
  4107f4:	ldp	x21, x22, [sp, #32]
  4107f8:	ldp	x29, x30, [sp], #64
  4107fc:	ret
  410800:	stp	x29, x30, [sp, #-32]!
  410804:	add	x1, x3, #0x1
  410808:	mov	x29, sp
  41080c:	stp	x19, x20, [sp, #16]
  410810:	mov	x19, x0
  410814:	mov	x20, x3
  410818:	mov	x0, x2
  41081c:	bl	436ee0 <argp_usage@@Base+0x9a00>
  410820:	stp	x0, x20, [x19, #72]
  410824:	ldp	x19, x20, [sp, #16]
  410828:	ldp	x29, x30, [sp], #32
  41082c:	ret
  410830:	stp	x29, x30, [sp, #-32]!
  410834:	add	x1, x3, #0x1
  410838:	mov	x29, sp
  41083c:	stp	x19, x20, [sp, #16]
  410840:	mov	x19, x0
  410844:	mov	x20, x3
  410848:	mov	x0, x2
  41084c:	bl	436ee0 <argp_usage@@Base+0x9a00>
  410850:	stp	x0, x20, [x19, #56]
  410854:	ldp	x19, x20, [sp, #16]
  410858:	ldp	x29, x30, [sp], #32
  41085c:	ret
  410860:	stp	x29, x30, [sp, #-48]!
  410864:	mov	x29, sp
  410868:	stp	x19, x20, [sp, #16]
  41086c:	adrp	x19, 448000 <_obstack_memory_used@@Base+0x10380>
  410870:	add	x19, x19, #0x1b0
  410874:	str	x21, [sp, #32]
  410878:	mov	x21, x0
  41087c:	ldr	x20, [x19]
  410880:	cbnz	x20, 41089c <wcrtomb@plt+0xb94c>
  410884:	mov	x19, #0x0                   	// #0
  410888:	mov	x0, x19
  41088c:	ldp	x19, x20, [sp, #16]
  410890:	ldr	x21, [sp, #32]
  410894:	ldp	x29, x30, [sp], #48
  410898:	ret
  41089c:	ldrb	w0, [x19, #28]
  4108a0:	cbz	w0, 4108c8 <wcrtomb@plt+0xb978>
  4108a4:	mov	x0, x20
  4108a8:	bl	404280 <strlen@plt>
  4108ac:	mov	x1, x21
  4108b0:	mov	x2, x0
  4108b4:	mov	x0, x20
  4108b8:	bl	4046a0 <strncmp@plt>
  4108bc:	cbz	w0, 410888 <wcrtomb@plt+0xb938>
  4108c0:	add	x19, x19, #0x20
  4108c4:	b	41087c <wcrtomb@plt+0xb92c>
  4108c8:	mov	x1, x21
  4108cc:	mov	x0, x20
  4108d0:	bl	404a30 <strcmp@plt>
  4108d4:	b	4108bc <wcrtomb@plt+0xb96c>
  4108d8:	stp	x29, x30, [sp, #-48]!
  4108dc:	mov	x29, sp
  4108e0:	stp	x19, x20, [sp, #16]
  4108e4:	mov	x19, x0
  4108e8:	stp	x21, x22, [sp, #32]
  4108ec:	mov	x21, x1
  4108f0:	cbnz	x19, 410904 <wcrtomb@plt+0xb9b4>
  4108f4:	ldp	x19, x20, [sp, #16]
  4108f8:	ldp	x21, x22, [sp, #32]
  4108fc:	ldp	x29, x30, [sp], #48
  410900:	ret
  410904:	ldr	x0, [x19, #8]
  410908:	bl	410860 <wcrtomb@plt+0xb910>
  41090c:	mov	x20, x0
  410910:	cbz	x0, 410938 <wcrtomb@plt+0xb9e8>
  410914:	ldr	x22, [x19, #16]
  410918:	mov	x0, x22
  41091c:	bl	404280 <strlen@plt>
  410920:	ldr	x1, [x20]
  410924:	mov	x3, x0
  410928:	ldr	x4, [x20, #16]
  41092c:	mov	x2, x22
  410930:	mov	x0, x21
  410934:	blr	x4
  410938:	ldr	x19, [x19]
  41093c:	b	4108f0 <wcrtomb@plt+0xb9a0>
  410940:	stp	x29, x30, [sp, #-48]!
  410944:	mov	x29, sp
  410948:	stp	x19, x20, [sp, #16]
  41094c:	mov	x20, x0
  410950:	mov	x19, x1
  410954:	mov	x0, x1
  410958:	stp	x21, x22, [sp, #32]
  41095c:	mov	x21, x2
  410960:	mov	x22, x3
  410964:	bl	410860 <wcrtomb@plt+0xb910>
  410968:	cbz	x0, 41099c <wcrtomb@plt+0xba4c>
  41096c:	ldr	w1, [x0, #24]
  410970:	tbz	w1, #1, 41099c <wcrtomb@plt+0xba4c>
  410974:	mov	x3, x22
  410978:	mov	x2, x21
  41097c:	mov	x1, x19
  410980:	ldr	x4, [x0, #16]
  410984:	mov	x0, x20
  410988:	ldp	x19, x20, [sp, #16]
  41098c:	mov	x16, x4
  410990:	ldp	x21, x22, [sp, #32]
  410994:	ldp	x29, x30, [sp], #48
  410998:	br	x16
  41099c:	mov	x2, x21
  4109a0:	mov	x1, x19
  4109a4:	mov	x0, x20
  4109a8:	ldp	x19, x20, [sp, #16]
  4109ac:	ldp	x21, x22, [sp, #32]
  4109b0:	ldp	x29, x30, [sp], #48
  4109b4:	b	410298 <wcrtomb@plt+0xb348>
  4109b8:	stp	x29, x30, [sp, #-96]!
  4109bc:	mov	x29, sp
  4109c0:	stp	x21, x22, [sp, #32]
  4109c4:	ldr	x21, [x1]
  4109c8:	stp	x23, x24, [sp, #48]
  4109cc:	mov	x23, x1
  4109d0:	mov	x24, x2
  4109d4:	mov	x22, x21
  4109d8:	stp	x25, x26, [sp, #64]
  4109dc:	mov	x25, x3
  4109e0:	stp	x19, x20, [sp, #16]
  4109e4:	ldrb	w1, [x22]
  4109e8:	cmp	w1, #0x20
  4109ec:	cset	w19, eq  // eq = none
  4109f0:	cmp	w1, #0x9
  4109f4:	csinc	w19, w19, wzr, ne  // ne = any
  4109f8:	cbnz	w19, 410a44 <wcrtomb@plt+0xbaf4>
  4109fc:	sub	w2, w1, #0x30
  410a00:	cmp	w2, #0x9
  410a04:	b.ls	410a4c <wcrtomb@plt+0xbafc>  // b.plast
  410a08:	cbz	w1, 410ac0 <wcrtomb@plt+0xbb70>
  410a0c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410a10:	ldr	x0, [x0, #1016]
  410a14:	cbz	x0, 410a1c <wcrtomb@plt+0xbacc>
  410a18:	blr	x0
  410a1c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410a20:	add	x1, x1, #0xdd1
  410a24:	mov	w2, #0x5                   	// #5
  410a28:	mov	x0, #0x0                   	// #0
  410a2c:	bl	404d00 <dcgettext@plt>
  410a30:	mov	w1, #0x0                   	// #0
  410a34:	mov	x2, x0
  410a38:	mov	w0, #0x0                   	// #0
  410a3c:	bl	4042e0 <error@plt>
  410a40:	b	410ab4 <wcrtomb@plt+0xbb64>
  410a44:	add	x22, x22, #0x1
  410a48:	b	4109e4 <wcrtomb@plt+0xba94>
  410a4c:	ldp	x20, x26, [x0, #8]
  410a50:	add	x1, sp, #0x58
  410a54:	mov	x0, x22
  410a58:	mov	w2, #0xa                   	// #10
  410a5c:	bl	404940 <strtoumax@plt>
  410a60:	ldr	x3, [sp, #88]
  410a64:	add	x26, x26, x20
  410a68:	sub	x26, x26, x21
  410a6c:	cmp	x26, x0
  410a70:	b.cs	410adc <wcrtomb@plt+0xbb8c>  // b.hs, b.nlast
  410a74:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410a78:	sub	x20, x3, x22
  410a7c:	ldr	x0, [x0, #1016]
  410a80:	cbz	x0, 410a88 <wcrtomb@plt+0xbb38>
  410a84:	blr	x0
  410a88:	mov	w2, #0x5                   	// #5
  410a8c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410a90:	mov	x0, #0x0                   	// #0
  410a94:	add	x1, x1, #0xdfb
  410a98:	bl	404d00 <dcgettext@plt>
  410a9c:	mov	x2, x0
  410aa0:	mov	x4, x22
  410aa4:	mov	w3, w20
  410aa8:	mov	w1, #0x0                   	// #0
  410aac:	mov	w0, #0x0                   	// #0
  410ab0:	bl	4042e0 <error@plt>
  410ab4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  410ab8:	mov	w1, #0x2                   	// #2
  410abc:	str	w1, [x0, #3464]
  410ac0:	mov	w0, w19
  410ac4:	ldp	x19, x20, [sp, #16]
  410ac8:	ldp	x21, x22, [sp, #32]
  410acc:	ldp	x23, x24, [sp, #48]
  410ad0:	ldp	x25, x26, [sp, #64]
  410ad4:	ldp	x29, x30, [sp], #96
  410ad8:	ret
  410adc:	add	x20, x21, x0
  410ae0:	mov	x22, x3
  410ae4:	ldrb	w0, [x22]
  410ae8:	cmp	w0, #0x20
  410aec:	cset	w19, eq  // eq = none
  410af0:	cmp	w0, #0x9
  410af4:	csinc	w19, w19, wzr, ne  // ne = any
  410af8:	cbnz	w19, 410b24 <wcrtomb@plt+0xbbd4>
  410afc:	cmp	x22, x3
  410b00:	b.ne	410b2c <wcrtomb@plt+0xbbdc>  // b.any
  410b04:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410b08:	ldr	x0, [x0, #1016]
  410b0c:	cbz	x0, 410b14 <wcrtomb@plt+0xbbc4>
  410b10:	blr	x0
  410b14:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410b18:	mov	w2, #0x5                   	// #5
  410b1c:	add	x1, x1, #0xe26
  410b20:	b	410a28 <wcrtomb@plt+0xbad8>
  410b24:	add	x22, x22, #0x1
  410b28:	b	410ae4 <wcrtomb@plt+0xbb94>
  410b2c:	mov	w1, #0x3d                  	// #61
  410b30:	mov	x0, x22
  410b34:	bl	404b90 <strchr@plt>
  410b38:	mov	x21, x0
  410b3c:	cmp	x0, #0x0
  410b40:	cset	w0, eq  // eq = none
  410b44:	cmp	x20, x21
  410b48:	cset	w1, ls  // ls = plast
  410b4c:	orr	w0, w0, w1
  410b50:	cbz	w0, 410b74 <wcrtomb@plt+0xbc24>
  410b54:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410b58:	ldr	x0, [x0, #1016]
  410b5c:	cbz	x0, 410b64 <wcrtomb@plt+0xbc14>
  410b60:	blr	x0
  410b64:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410b68:	mov	w2, #0x5                   	// #5
  410b6c:	add	x1, x1, #0xe5c
  410b70:	b	410a28 <wcrtomb@plt+0xbad8>
  410b74:	ldurb	w19, [x20, #-1]
  410b78:	cmp	w19, #0xa
  410b7c:	b.eq	410bc8 <wcrtomb@plt+0xbc78>  // b.none
  410b80:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410b84:	ldr	x0, [x0, #1016]
  410b88:	cbz	x0, 410b90 <wcrtomb@plt+0xbc40>
  410b8c:	blr	x0
  410b90:	mov	w2, #0x5                   	// #5
  410b94:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410b98:	mov	x0, #0x0                   	// #0
  410b9c:	add	x1, x1, #0xe8a
  410ba0:	bl	404d00 <dcgettext@plt>
  410ba4:	mov	x2, x0
  410ba8:	mov	w1, #0x0                   	// #0
  410bac:	mov	w0, #0x0                   	// #0
  410bb0:	bl	4042e0 <error@plt>
  410bb4:	mov	w19, #0x0                   	// #0
  410bb8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  410bbc:	mov	w1, #0x2                   	// #2
  410bc0:	str	w1, [x0, #3464]
  410bc4:	b	410ac0 <wcrtomb@plt+0xbb70>
  410bc8:	sturb	wzr, [x20, #-1]
  410bcc:	sub	x3, x20, x21
  410bd0:	strb	wzr, [x21]
  410bd4:	mov	x0, x25
  410bd8:	sub	x3, x3, #0x2
  410bdc:	add	x2, x21, #0x1
  410be0:	mov	x1, x22
  410be4:	blr	x24
  410be8:	mov	w0, #0x3d                  	// #61
  410bec:	strb	w0, [x21]
  410bf0:	sturb	w19, [x20, #-1]
  410bf4:	mov	w19, #0x1                   	// #1
  410bf8:	str	x20, [x23]
  410bfc:	b	410ac0 <wcrtomb@plt+0xbb70>
  410c00:	stp	x29, x30, [sp, #-96]!
  410c04:	mov	x29, sp
  410c08:	stp	x19, x20, [sp, #16]
  410c0c:	mov	x19, x0
  410c10:	mov	x20, x1
  410c14:	mov	x0, x2
  410c18:	add	x1, sp, #0x30
  410c1c:	stp	x21, x22, [sp, #32]
  410c20:	mov	x22, x3
  410c24:	bl	431340 <argp_usage@@Base+0x3e60>
  410c28:	add	x1, sp, #0x48
  410c2c:	mov	x21, x0
  410c30:	mov	x0, x22
  410c34:	bl	431400 <argp_usage@@Base+0x3f20>
  410c38:	mov	x22, x0
  410c3c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410c40:	ldr	x0, [x0, #1016]
  410c44:	cbz	x0, 410c4c <wcrtomb@plt+0xbcfc>
  410c48:	blr	x0
  410c4c:	mov	w2, #0x5                   	// #5
  410c50:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410c54:	mov	x0, #0x0                   	// #0
  410c58:	add	x1, x1, #0xeb5
  410c5c:	bl	404d00 <dcgettext@plt>
  410c60:	mov	x2, x0
  410c64:	mov	x6, x22
  410c68:	mov	x5, x21
  410c6c:	mov	x4, x20
  410c70:	mov	x3, x19
  410c74:	mov	w1, #0x0                   	// #0
  410c78:	mov	w0, #0x0                   	// #0
  410c7c:	bl	4042e0 <error@plt>
  410c80:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  410c84:	mov	w1, #0x2                   	// #2
  410c88:	ldp	x19, x20, [sp, #16]
  410c8c:	str	w1, [x0, #3464]
  410c90:	ldp	x21, x22, [sp, #32]
  410c94:	ldp	x29, x30, [sp], #96
  410c98:	ret
  410c9c:	stp	x29, x30, [sp, #-48]!
  410ca0:	mov	x0, x3
  410ca4:	mov	x29, sp
  410ca8:	stp	x19, x20, [sp, #16]
  410cac:	mov	x20, x2
  410cb0:	mov	x19, x3
  410cb4:	str	x21, [sp, #32]
  410cb8:	mov	x21, x1
  410cbc:	bl	413b00 <wcrtomb@plt+0xebb0>
  410cc0:	mov	x3, x0
  410cc4:	mov	x2, x19
  410cc8:	mov	x1, x21
  410ccc:	mov	x0, x20
  410cd0:	ldp	x19, x20, [sp, #16]
  410cd4:	ldr	x21, [sp, #32]
  410cd8:	ldp	x29, x30, [sp], #48
  410cdc:	b	4104c0 <wcrtomb@plt+0xb570>
  410ce0:	stp	x29, x30, [sp, #-80]!
  410ce4:	mov	x29, sp
  410ce8:	stp	x19, x20, [sp, #16]
  410cec:	mov	x20, x1
  410cf0:	mov	x19, x2
  410cf4:	stp	x21, x22, [sp, #32]
  410cf8:	mov	x21, x0
  410cfc:	mov	w22, #0x1                   	// #1
  410d00:	stp	x23, x24, [sp, #48]
  410d04:	str	xzr, [x0, #288]
  410d08:	ldrb	w0, [x19]
  410d0c:	sub	w0, w0, #0x30
  410d10:	cmp	w0, #0x9
  410d14:	b.ls	410d64 <wcrtomb@plt+0xbe14>  // b.plast
  410d18:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410d1c:	ldr	x0, [x0, #1016]
  410d20:	cbz	x0, 410d28 <wcrtomb@plt+0xbdd8>
  410d24:	blr	x0
  410d28:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410d2c:	add	x1, x1, #0xee2
  410d30:	mov	w2, #0x5                   	// #5
  410d34:	mov	x0, #0x0                   	// #0
  410d38:	bl	404d00 <dcgettext@plt>
  410d3c:	mov	x4, x19
  410d40:	mov	x2, x0
  410d44:	mov	x3, x20
  410d48:	mov	w1, #0x0                   	// #0
  410d4c:	mov	w0, #0x0                   	// #0
  410d50:	bl	4042e0 <error@plt>
  410d54:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  410d58:	mov	w1, #0x2                   	// #2
  410d5c:	str	w1, [x0, #3464]
  410d60:	b	410da4 <wcrtomb@plt+0xbe54>
  410d64:	bl	404e10 <__errno_location@plt>
  410d68:	mov	x23, x0
  410d6c:	add	x1, sp, #0x48
  410d70:	mov	x0, x19
  410d74:	mov	w2, #0xa                   	// #10
  410d78:	str	wzr, [x23]
  410d7c:	bl	404330 <strtoimax@plt>
  410d80:	ldr	w1, [x23]
  410d84:	cmp	w1, #0x22
  410d88:	cbz	w22, 410db8 <wcrtomb@plt+0xbe68>
  410d8c:	b.ne	410de8 <wcrtomb@plt+0xbe98>  // b.any
  410d90:	mov	x1, x19
  410d94:	mov	x0, x20
  410d98:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  410d9c:	mov	x2, #0x0                   	// #0
  410da0:	bl	410c00 <wcrtomb@plt+0xbcb0>
  410da4:	ldp	x19, x20, [sp, #16]
  410da8:	ldp	x21, x22, [sp, #32]
  410dac:	ldp	x23, x24, [sp, #48]
  410db0:	ldp	x29, x30, [sp], #80
  410db4:	ret
  410db8:	b.eq	410d90 <wcrtomb@plt+0xbe40>  // b.none
  410dbc:	ldp	x1, x2, [x21, #288]
  410dc0:	cmp	x1, x2
  410dc4:	b.cs	410e44 <wcrtomb@plt+0xbef4>  // b.hs, b.nlast
  410dc8:	ldr	x2, [x21, #304]
  410dcc:	add	x3, x1, #0x1
  410dd0:	str	x3, [x21, #288]
  410dd4:	lsl	x3, x1, #4
  410dd8:	add	x1, x2, x1, lsl #4
  410ddc:	str	x24, [x2, x3]
  410de0:	str	x0, [x1, #8]
  410de4:	mov	x0, x24
  410de8:	ldr	x19, [sp, #72]
  410dec:	eor	w2, w22, #0x1
  410df0:	ldrb	w1, [x19]
  410df4:	cbz	w1, 410e74 <wcrtomb@plt+0xbf24>
  410df8:	cmp	w1, #0x2c
  410dfc:	b.eq	410e64 <wcrtomb@plt+0xbf14>  // b.none
  410e00:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410e04:	ldr	x0, [x0, #1016]
  410e08:	cbz	x0, 410e10 <wcrtomb@plt+0xbec0>
  410e0c:	blr	x0
  410e10:	mov	w2, #0x5                   	// #5
  410e14:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410e18:	mov	x0, #0x0                   	// #0
  410e1c:	add	x1, x1, #0xf33
  410e20:	bl	404d00 <dcgettext@plt>
  410e24:	mov	x2, x0
  410e28:	ldr	x1, [sp, #72]
  410e2c:	mov	x3, x20
  410e30:	mov	w0, #0x0                   	// #0
  410e34:	ldrb	w4, [x1]
  410e38:	mov	w1, #0x0                   	// #0
  410e3c:	bl	4042e0 <error@plt>
  410e40:	b	410d54 <wcrtomb@plt+0xbe04>
  410e44:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410e48:	ldr	x0, [x0, #1016]
  410e4c:	cbz	x0, 410e54 <wcrtomb@plt+0xbf04>
  410e50:	blr	x0
  410e54:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410e58:	mov	w2, #0x5                   	// #5
  410e5c:	add	x1, x1, #0xf0b
  410e60:	b	410d34 <wcrtomb@plt+0xbde4>
  410e64:	add	x19, x19, #0x1
  410e68:	mov	x24, x0
  410e6c:	mov	w22, w2
  410e70:	b	410d08 <wcrtomb@plt+0xbdb8>
  410e74:	cbz	w22, 410da4 <wcrtomb@plt+0xbe54>
  410e78:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  410e7c:	ldr	x0, [x0, #1016]
  410e80:	cbz	x0, 410e88 <wcrtomb@plt+0xbf38>
  410e84:	blr	x0
  410e88:	mov	w2, #0x5                   	// #5
  410e8c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  410e90:	mov	x0, #0x0                   	// #0
  410e94:	add	x1, x1, #0xf72
  410e98:	bl	404d00 <dcgettext@plt>
  410e9c:	mov	x2, x0
  410ea0:	mov	x3, x20
  410ea4:	mov	w1, #0x0                   	// #0
  410ea8:	mov	w0, #0x0                   	// #0
  410eac:	bl	4042e0 <error@plt>
  410eb0:	b	410d54 <wcrtomb@plt+0xbe04>
  410eb4:	ldrb	w1, [x0, #321]
  410eb8:	cbnz	w1, 410efc <wcrtomb@plt+0xbfac>
  410ebc:	stp	x29, x30, [sp, #-32]!
  410ec0:	mov	x1, x2
  410ec4:	mov	x29, sp
  410ec8:	stp	x19, x20, [sp, #16]
  410ecc:	mov	x19, x0
  410ed0:	mov	x20, x2
  410ed4:	bl	41033c <wcrtomb@plt+0xb3ec>
  410ed8:	mov	x1, x20
  410edc:	add	x0, x19, #0x8
  410ee0:	bl	41033c <wcrtomb@plt+0xb3ec>
  410ee4:	ldr	x0, [x19, #8]
  410ee8:	bl	42de70 <argp_usage@@Base+0x990>
  410eec:	strb	w0, [x19, #16]
  410ef0:	ldp	x19, x20, [sp, #16]
  410ef4:	ldp	x29, x30, [sp], #32
  410ef8:	ret
  410efc:	ret
  410f00:	stp	x29, x30, [sp, #-64]!
  410f04:	mov	x29, sp
  410f08:	stp	x19, x20, [sp, #16]
  410f0c:	mov	x19, x3
  410f10:	mov	x20, x2
  410f14:	add	x2, sp, #0x20
  410f18:	bl	4182c4 <wcrtomb@plt+0x13374>
  410f1c:	mov	x1, x20
  410f20:	mov	x2, x0
  410f24:	mov	x0, x19
  410f28:	bl	41064c <wcrtomb@plt+0xb6fc>
  410f2c:	ldp	x19, x20, [sp, #16]
  410f30:	ldp	x29, x30, [sp], #64
  410f34:	ret
  410f38:	cbz	x3, 410f54 <wcrtomb@plt+0xc004>
  410f3c:	ldp	x4, x5, [x3]
  410f40:	mov	x3, x2
  410f44:	mov	x0, x4
  410f48:	mov	x2, x1
  410f4c:	mov	x1, x5
  410f50:	b	410f00 <wcrtomb@plt+0xbfb0>
  410f54:	ldp	x4, x5, [x0, #232]
  410f58:	b	410f40 <wcrtomb@plt+0xbff0>
  410f5c:	mov	x3, x2
  410f60:	mov	x2, x1
  410f64:	ldp	x0, x1, [x0, #248]
  410f68:	b	410f00 <wcrtomb@plt+0xbfb0>
  410f6c:	mov	x3, x2
  410f70:	mov	x2, x1
  410f74:	ldp	x0, x1, [x0, #216]
  410f78:	b	410f00 <wcrtomb@plt+0xbfb0>
  410f7c:	stp	x29, x30, [sp, #-32]!
  410f80:	mov	x29, sp
  410f84:	str	x19, [sp, #16]
  410f88:	mov	x19, x0
  410f8c:	ldr	x0, [x0]
  410f90:	cbnz	x0, 410fc4 <wcrtomb@plt+0xc074>
  410f94:	mov	x0, #0x58                  	// #88
  410f98:	bl	436d44 <argp_usage@@Base+0x9864>
  410f9c:	str	x0, [x19]
  410fa0:	adrp	x4, 404000 <mbrtowc@plt-0x1f0>
  410fa4:	ldr	x19, [sp, #16]
  410fa8:	add	x4, x4, #0xae0
  410fac:	ldp	x29, x30, [sp], #32
  410fb0:	adrp	x3, 436000 <argp_usage@@Base+0x8b20>
  410fb4:	mov	x2, #0x0                   	// #0
  410fb8:	add	x3, x3, #0xd44
  410fbc:	mov	x1, #0x0                   	// #0
  410fc0:	b	437aa0 <_obstack_begin@@Base>
  410fc4:	ldr	x19, [sp, #16]
  410fc8:	ldp	x29, x30, [sp], #32
  410fcc:	ret
  410fd0:	stp	x29, x30, [sp, #-64]!
  410fd4:	mov	x29, sp
  410fd8:	stp	x19, x20, [sp, #16]
  410fdc:	mov	x19, x1
  410fe0:	mov	x20, x0
  410fe4:	add	x1, sp, #0x38
  410fe8:	mov	x0, x19
  410fec:	str	x21, [sp, #32]
  410ff0:	mov	x21, x2
  410ff4:	mov	w2, #0x1                   	// #1
  410ff8:	bl	41835c <wcrtomb@plt+0x1340c>
  410ffc:	tbz	x1, #63, 411088 <wcrtomb@plt+0xc138>
  411000:	ldr	x0, [sp, #56]
  411004:	cmp	x19, x0
  411008:	b.cs	41103c <wcrtomb@plt+0xc0ec>  // b.hs, b.nlast
  41100c:	ldrb	w0, [x0]
  411010:	cbnz	w0, 41103c <wcrtomb@plt+0xc0ec>
  411014:	mov	x1, x19
  411018:	mov	x0, x21
  41101c:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  411020:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  411024:	bl	410c00 <wcrtomb@plt+0xbcb0>
  411028:	mov	w0, #0x0                   	// #0
  41102c:	ldp	x19, x20, [sp, #16]
  411030:	ldr	x21, [sp, #32]
  411034:	ldp	x29, x30, [sp], #64
  411038:	ret
  41103c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  411040:	ldr	x0, [x0, #1016]
  411044:	cbz	x0, 41104c <wcrtomb@plt+0xc0fc>
  411048:	blr	x0
  41104c:	mov	w2, #0x5                   	// #5
  411050:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  411054:	mov	x0, #0x0                   	// #0
  411058:	add	x1, x1, #0xee2
  41105c:	bl	404d00 <dcgettext@plt>
  411060:	mov	x2, x0
  411064:	mov	w1, #0x0                   	// #0
  411068:	mov	w0, #0x0                   	// #0
  41106c:	mov	x4, x19
  411070:	mov	x3, x21
  411074:	bl	4042e0 <error@plt>
  411078:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41107c:	mov	w1, #0x2                   	// #2
  411080:	str	w1, [x0, #3464]
  411084:	b	411028 <wcrtomb@plt+0xc0d8>
  411088:	stp	x0, x1, [x20]
  41108c:	mov	w0, #0x1                   	// #1
  411090:	b	41102c <wcrtomb@plt+0xc0dc>
  411094:	stp	x29, x30, [sp, #-48]!
  411098:	mov	x29, sp
  41109c:	str	x19, [sp, #16]
  4110a0:	mov	x19, x0
  4110a4:	mov	x0, x2
  4110a8:	mov	x2, x1
  4110ac:	mov	x1, x0
  4110b0:	add	x0, sp, #0x20
  4110b4:	bl	410fd0 <wcrtomb@plt+0xc080>
  4110b8:	tst	w0, #0xff
  4110bc:	b.eq	4110c8 <wcrtomb@plt+0xc178>  // b.none
  4110c0:	ldp	x0, x1, [sp, #32]
  4110c4:	stp	x0, x1, [x19, #232]
  4110c8:	ldr	x19, [sp, #16]
  4110cc:	ldp	x29, x30, [sp], #48
  4110d0:	ret
  4110d4:	stp	x29, x30, [sp, #-48]!
  4110d8:	mov	x29, sp
  4110dc:	str	x19, [sp, #16]
  4110e0:	mov	x19, x0
  4110e4:	mov	x0, x2
  4110e8:	mov	x2, x1
  4110ec:	mov	x1, x0
  4110f0:	add	x0, sp, #0x20
  4110f4:	bl	410fd0 <wcrtomb@plt+0xc080>
  4110f8:	tst	w0, #0xff
  4110fc:	b.eq	411108 <wcrtomb@plt+0xc1b8>  // b.none
  411100:	ldp	x0, x1, [sp, #32]
  411104:	stp	x0, x1, [x19, #248]
  411108:	ldr	x19, [sp, #16]
  41110c:	ldp	x29, x30, [sp], #48
  411110:	ret
  411114:	stp	x29, x30, [sp, #-48]!
  411118:	mov	x29, sp
  41111c:	str	x19, [sp, #16]
  411120:	mov	x19, x0
  411124:	mov	x0, x2
  411128:	mov	x2, x1
  41112c:	mov	x1, x0
  411130:	add	x0, sp, #0x20
  411134:	bl	410fd0 <wcrtomb@plt+0xc080>
  411138:	tst	w0, #0xff
  41113c:	b.eq	411148 <wcrtomb@plt+0xc1f8>  // b.none
  411140:	ldp	x0, x1, [sp, #32]
  411144:	stp	x0, x1, [x19, #216]
  411148:	ldr	x19, [sp, #16]
  41114c:	ldp	x29, x30, [sp], #48
  411150:	ret
  411154:	stp	x29, x30, [sp, #-80]!
  411158:	mov	x29, sp
  41115c:	stp	x19, x20, [sp, #16]
  411160:	mov	x19, x1
  411164:	mov	x20, x3
  411168:	add	x1, sp, #0x48
  41116c:	mov	x3, x2
  411170:	stp	x21, x22, [sp, #32]
  411174:	mov	x21, x2
  411178:	mov	x2, #0x0                   	// #0
  41117c:	mov	x22, x0
  411180:	mov	x0, x19
  411184:	str	x23, [sp, #48]
  411188:	bl	418188 <wcrtomb@plt+0x13238>
  41118c:	mov	x23, x0
  411190:	bl	404e10 <__errno_location@plt>
  411194:	ldr	w0, [x0]
  411198:	cmp	w0, #0x16
  41119c:	b.eq	4111ac <wcrtomb@plt+0xc25c>  // b.none
  4111a0:	ldr	x1, [sp, #72]
  4111a4:	ldrb	w1, [x1]
  4111a8:	cbz	w1, 41120c <wcrtomb@plt+0xc2bc>
  4111ac:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4111b0:	ldr	x0, [x0, #1016]
  4111b4:	cbz	x0, 4111bc <wcrtomb@plt+0xc26c>
  4111b8:	blr	x0
  4111bc:	mov	w2, #0x5                   	// #5
  4111c0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4111c4:	mov	x0, #0x0                   	// #0
  4111c8:	add	x1, x1, #0xee2
  4111cc:	bl	404d00 <dcgettext@plt>
  4111d0:	mov	x2, x0
  4111d4:	mov	w1, #0x0                   	// #0
  4111d8:	mov	w0, #0x0                   	// #0
  4111dc:	mov	x4, x19
  4111e0:	mov	x3, x20
  4111e4:	bl	4042e0 <error@plt>
  4111e8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4111ec:	mov	w1, #0x2                   	// #2
  4111f0:	str	w1, [x0, #3464]
  4111f4:	mov	w0, #0x0                   	// #0
  4111f8:	ldp	x19, x20, [sp, #16]
  4111fc:	ldp	x21, x22, [sp, #32]
  411200:	ldr	x23, [sp, #48]
  411204:	ldp	x29, x30, [sp], #80
  411208:	ret
  41120c:	cmp	w0, #0x22
  411210:	b.ne	41122c <wcrtomb@plt+0xc2dc>  // b.any
  411214:	mov	x3, x21
  411218:	mov	x1, x19
  41121c:	mov	x0, x20
  411220:	mov	x2, #0x0                   	// #0
  411224:	bl	410c00 <wcrtomb@plt+0xbcb0>
  411228:	b	4111f4 <wcrtomb@plt+0xc2a4>
  41122c:	mov	w0, #0x1                   	// #1
  411230:	str	x23, [x22]
  411234:	b	4111f8 <wcrtomb@plt+0xc2a8>
  411238:	stp	x29, x30, [sp, #-48]!
  41123c:	mov	x3, x1
  411240:	mov	x29, sp
  411244:	str	x19, [sp, #16]
  411248:	mov	x19, x0
  41124c:	mov	x0, x2
  411250:	mov	x2, #0xffffffff            	// #4294967295
  411254:	mov	x1, x0
  411258:	add	x0, sp, #0x28
  41125c:	bl	411154 <wcrtomb@plt+0xc204>
  411260:	tst	w0, #0xff
  411264:	b.eq	411270 <wcrtomb@plt+0xc320>  // b.none
  411268:	ldr	x0, [sp, #40]
  41126c:	str	w0, [x19, #116]
  411270:	ldr	x19, [sp, #16]
  411274:	ldp	x29, x30, [sp], #48
  411278:	ret
  41127c:	stp	x29, x30, [sp, #-48]!
  411280:	mov	x3, x1
  411284:	mov	x29, sp
  411288:	str	x19, [sp, #16]
  41128c:	mov	x19, x0
  411290:	mov	x0, x2
  411294:	mov	x2, #0xffffffff            	// #4294967295
  411298:	mov	x1, x0
  41129c:	add	x0, sp, #0x28
  4112a0:	bl	411154 <wcrtomb@plt+0xc204>
  4112a4:	tst	w0, #0xff
  4112a8:	b.eq	4112b4 <wcrtomb@plt+0xc364>  // b.none
  4112ac:	ldr	x0, [sp, #40]
  4112b0:	str	w0, [x19, #112]
  4112b4:	ldr	x19, [sp, #16]
  4112b8:	ldp	x29, x30, [sp], #48
  4112bc:	ret
  4112c0:	stp	x29, x30, [sp, #-48]!
  4112c4:	mov	x29, sp
  4112c8:	str	x19, [sp, #16]
  4112cc:	mov	x19, x0
  4112d0:	add	x0, sp, #0x28
  4112d4:	bl	411154 <wcrtomb@plt+0xc204>
  4112d8:	tst	w0, #0xff
  4112dc:	b.eq	4112e8 <wcrtomb@plt+0xc398>  // b.none
  4112e0:	ldr	x1, [sp, #40]
  4112e4:	str	x1, [x19]
  4112e8:	ldr	x19, [sp, #16]
  4112ec:	ldp	x29, x30, [sp], #48
  4112f0:	ret
  4112f4:	stp	x29, x30, [sp, #-32]!
  4112f8:	mov	x0, x2
  4112fc:	mov	x3, x1
  411300:	mov	x29, sp
  411304:	mov	x1, x0
  411308:	mov	x2, #0xffffffffffffffff    	// #-1
  41130c:	add	x0, sp, #0x18
  411310:	bl	4112c0 <wcrtomb@plt+0xc370>
  411314:	tst	w0, #0xff
  411318:	b.eq	411328 <wcrtomb@plt+0xc3d8>  // b.none
  41131c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  411320:	ldr	x1, [sp, #24]
  411324:	str	x1, [x0, #4024]
  411328:	ldp	x29, x30, [sp], #32
  41132c:	ret
  411330:	stp	x29, x30, [sp, #-32]!
  411334:	mov	x0, x2
  411338:	mov	x3, x1
  41133c:	mov	x29, sp
  411340:	mov	x1, x0
  411344:	mov	x2, #0xffffffffffffffff    	// #-1
  411348:	add	x0, sp, #0x18
  41134c:	bl	4112c0 <wcrtomb@plt+0xc370>
  411350:	tst	w0, #0xff
  411354:	b.eq	411364 <wcrtomb@plt+0xc414>  // b.none
  411358:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41135c:	ldr	x1, [sp, #24]
  411360:	str	x1, [x0, #4008]
  411364:	ldp	x29, x30, [sp], #32
  411368:	ret
  41136c:	stp	x29, x30, [sp, #-64]!
  411370:	mov	x3, x1
  411374:	mov	x29, sp
  411378:	str	x21, [sp, #32]
  41137c:	mov	x21, x2
  411380:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  411384:	stp	x19, x20, [sp, #16]
  411388:	mov	x19, x0
  41138c:	mov	x20, x1
  411390:	add	x0, sp, #0x38
  411394:	mov	x1, x21
  411398:	bl	4112c0 <wcrtomb@plt+0xc370>
  41139c:	tst	w0, #0xff
  4113a0:	b.eq	4113c8 <wcrtomb@plt+0xc478>  // b.none
  4113a4:	ldp	x0, x1, [x19, #288]
  4113a8:	cmp	x0, x1
  4113ac:	b.cs	4113d8 <wcrtomb@plt+0xc488>  // b.hs, b.nlast
  4113b0:	ldr	x1, [x19, #304]
  4113b4:	add	x2, x0, #0x1
  4113b8:	str	x2, [x19, #288]
  4113bc:	add	x0, x1, x0, lsl #4
  4113c0:	ldr	x1, [sp, #56]
  4113c4:	str	x1, [x0, #8]
  4113c8:	ldp	x19, x20, [sp, #16]
  4113cc:	ldr	x21, [sp, #32]
  4113d0:	ldp	x29, x30, [sp], #64
  4113d4:	ret
  4113d8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4113dc:	ldr	x0, [x0, #1016]
  4113e0:	cbz	x0, 4113e8 <wcrtomb@plt+0xc498>
  4113e4:	blr	x0
  4113e8:	mov	w2, #0x5                   	// #5
  4113ec:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4113f0:	mov	x0, #0x0                   	// #0
  4113f4:	add	x1, x1, #0xf0b
  4113f8:	bl	404d00 <dcgettext@plt>
  4113fc:	mov	x2, x0
  411400:	mov	w1, #0x0                   	// #0
  411404:	mov	w0, #0x0                   	// #0
  411408:	mov	x4, x21
  41140c:	mov	x3, x20
  411410:	bl	4042e0 <error@plt>
  411414:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  411418:	mov	w1, #0x2                   	// #2
  41141c:	str	w1, [x0, #3464]
  411420:	b	4113c8 <wcrtomb@plt+0xc478>
  411424:	stp	x29, x30, [sp, #-48]!
  411428:	mov	x3, x1
  41142c:	mov	x29, sp
  411430:	stp	x19, x20, [sp, #16]
  411434:	mov	x20, x2
  411438:	mov	x19, x0
  41143c:	mov	x1, x20
  411440:	add	x0, sp, #0x28
  411444:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  411448:	bl	4112c0 <wcrtomb@plt+0xc370>
  41144c:	tst	w0, #0xff
  411450:	b.eq	411470 <wcrtomb@plt+0xc520>  // b.none
  411454:	ldp	x0, x1, [x19, #288]
  411458:	cmp	x0, x1
  41145c:	b.cs	41147c <wcrtomb@plt+0xc52c>  // b.hs, b.nlast
  411460:	ldr	x1, [x19, #304]
  411464:	lsl	x0, x0, #4
  411468:	ldr	x2, [sp, #40]
  41146c:	str	x2, [x1, x0]
  411470:	ldp	x19, x20, [sp, #16]
  411474:	ldp	x29, x30, [sp], #48
  411478:	ret
  41147c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  411480:	ldr	x0, [x0, #1016]
  411484:	cbz	x0, 41148c <wcrtomb@plt+0xc53c>
  411488:	blr	x0
  41148c:	mov	w2, #0x5                   	// #5
  411490:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  411494:	mov	x0, #0x0                   	// #0
  411498:	add	x1, x1, #0xf0b
  41149c:	bl	404d00 <dcgettext@plt>
  4114a0:	mov	x2, x0
  4114a4:	mov	w1, #0x0                   	// #0
  4114a8:	mov	w0, #0x0                   	// #0
  4114ac:	mov	x4, x20
  4114b0:	adrp	x3, 447000 <_obstack_memory_used@@Base+0xf380>
  4114b4:	add	x3, x3, #0xfae
  4114b8:	bl	4042e0 <error@plt>
  4114bc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4114c0:	mov	w1, #0x2                   	// #2
  4114c4:	str	w1, [x0, #3464]
  4114c8:	b	411470 <wcrtomb@plt+0xc520>
  4114cc:	stp	x29, x30, [sp, #-48]!
  4114d0:	mov	x3, x1
  4114d4:	mov	x29, sp
  4114d8:	str	x19, [sp, #16]
  4114dc:	mov	x19, x0
  4114e0:	mov	x0, x2
  4114e4:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4114e8:	mov	x1, x0
  4114ec:	add	x0, sp, #0x28
  4114f0:	bl	4112c0 <wcrtomb@plt+0xc370>
  4114f4:	tst	w0, #0xff
  4114f8:	b.eq	41150c <wcrtomb@plt+0xc5bc>  // b.none
  4114fc:	mov	w0, #0x1                   	// #1
  411500:	strb	w0, [x19, #320]
  411504:	ldr	x0, [sp, #40]
  411508:	str	x0, [x19, #312]
  41150c:	ldr	x19, [sp, #16]
  411510:	ldp	x29, x30, [sp], #48
  411514:	ret
  411518:	stp	x29, x30, [sp, #-48]!
  41151c:	mov	x3, x1
  411520:	mov	x29, sp
  411524:	str	x19, [sp, #16]
  411528:	mov	x19, x0
  41152c:	mov	x0, x2
  411530:	mov	x2, #0xffffffff            	// #4294967295
  411534:	mov	x1, x0
  411538:	add	x0, sp, #0x28
  41153c:	bl	4112c0 <wcrtomb@plt+0xc370>
  411540:	tst	w0, #0xff
  411544:	b.eq	411550 <wcrtomb@plt+0xc600>  // b.none
  411548:	ldr	x0, [sp, #40]
  41154c:	str	w0, [x19, #280]
  411550:	ldr	x19, [sp, #16]
  411554:	ldp	x29, x30, [sp], #48
  411558:	ret
  41155c:	stp	x29, x30, [sp, #-48]!
  411560:	mov	x3, x1
  411564:	mov	x29, sp
  411568:	str	x19, [sp, #16]
  41156c:	mov	x19, x0
  411570:	mov	x0, x2
  411574:	mov	x2, #0xffffffff            	// #4294967295
  411578:	mov	x1, x0
  41157c:	add	x0, sp, #0x28
  411580:	bl	4112c0 <wcrtomb@plt+0xc370>
  411584:	tst	w0, #0xff
  411588:	b.eq	411594 <wcrtomb@plt+0xc644>  // b.none
  41158c:	ldr	x0, [sp, #40]
  411590:	str	w0, [x19, #276]
  411594:	ldr	x19, [sp, #16]
  411598:	ldp	x29, x30, [sp], #48
  41159c:	ret
  4115a0:	stp	x29, x30, [sp, #-48]!
  4115a4:	mov	x3, x1
  4115a8:	mov	x29, sp
  4115ac:	str	x19, [sp, #16]
  4115b0:	mov	x19, x0
  4115b4:	mov	x0, x2
  4115b8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4115bc:	mov	x1, x0
  4115c0:	add	x0, sp, #0x28
  4115c4:	bl	4112c0 <wcrtomb@plt+0xc370>
  4115c8:	tst	w0, #0xff
  4115cc:	b.eq	4115d8 <wcrtomb@plt+0xc688>  // b.none
  4115d0:	ldr	x0, [sp, #40]
  4115d4:	str	x0, [x19, #136]
  4115d8:	ldr	x19, [sp, #16]
  4115dc:	ldp	x29, x30, [sp], #48
  4115e0:	ret
  4115e4:	stp	x29, x30, [sp, #-48]!
  4115e8:	mov	x3, x1
  4115ec:	mov	x29, sp
  4115f0:	str	x19, [sp, #16]
  4115f4:	mov	x19, x0
  4115f8:	mov	x0, x2
  4115fc:	mov	x2, #0xffffffffffffffff    	// #-1
  411600:	mov	x1, x0
  411604:	add	x0, sp, #0x28
  411608:	bl	4112c0 <wcrtomb@plt+0xc370>
  41160c:	tst	w0, #0xff
  411610:	b.eq	41162c <wcrtomb@plt+0xc6dc>  // b.none
  411614:	ldr	x0, [sp, #40]
  411618:	str	x0, [x19, #296]
  41161c:	mov	x1, #0x10                  	// #16
  411620:	bl	436eac <argp_usage@@Base+0x99cc>
  411624:	str	xzr, [x19, #288]
  411628:	str	x0, [x19, #304]
  41162c:	ldr	x19, [sp, #16]
  411630:	ldp	x29, x30, [sp], #48
  411634:	ret
  411638:	stp	x29, x30, [sp, #-64]!
  41163c:	mov	x29, sp
  411640:	ldr	w0, [x0, #116]
  411644:	add	x3, sp, #0x28
  411648:	stp	x19, x20, [sp, #16]
  41164c:	mov	x20, x1
  411650:	mov	x19, x2
  411654:	mov	x1, #0x0                   	// #0
  411658:	mov	x2, #0xffffffff            	// #4294967295
  41165c:	bl	418174 <wcrtomb@plt+0x13224>
  411660:	mov	x2, x0
  411664:	mov	x1, x20
  411668:	mov	x0, x19
  41166c:	bl	41064c <wcrtomb@plt+0xb6fc>
  411670:	ldp	x19, x20, [sp, #16]
  411674:	ldp	x29, x30, [sp], #64
  411678:	ret
  41167c:	stp	x29, x30, [sp, #-64]!
  411680:	add	x3, sp, #0x28
  411684:	mov	x29, sp
  411688:	stp	x19, x20, [sp, #16]
  41168c:	mov	x20, x1
  411690:	mov	x19, x2
  411694:	mov	x1, #0x0                   	// #0
  411698:	mov	x2, #0xffffffffffffffff    	// #-1
  41169c:	bl	418174 <wcrtomb@plt+0x13224>
  4116a0:	mov	x2, x0
  4116a4:	mov	x1, x20
  4116a8:	mov	x0, x19
  4116ac:	bl	41064c <wcrtomb@plt+0xb6fc>
  4116b0:	ldp	x19, x20, [sp, #16]
  4116b4:	ldp	x29, x30, [sp], #64
  4116b8:	ret
  4116bc:	ldr	x0, [x3]
  4116c0:	b	41167c <wcrtomb@plt+0xc72c>
  4116c4:	ldr	x3, [x3]
  4116c8:	ldr	x0, [x0, #304]
  4116cc:	add	x3, x0, x3, lsl #4
  4116d0:	ldr	x0, [x3, #8]
  4116d4:	b	41167c <wcrtomb@plt+0xc72c>
  4116d8:	ldr	x3, [x3]
  4116dc:	ldr	x0, [x0, #304]
  4116e0:	lsl	x3, x3, #4
  4116e4:	ldr	x0, [x0, x3]
  4116e8:	b	41167c <wcrtomb@plt+0xc72c>
  4116ec:	ldr	x0, [x0, #288]
  4116f0:	b	41167c <wcrtomb@plt+0xc72c>
  4116f4:	ldr	w0, [x0, #280]
  4116f8:	b	41167c <wcrtomb@plt+0xc72c>
  4116fc:	ldr	w0, [x0, #276]
  411700:	b	41167c <wcrtomb@plt+0xc72c>
  411704:	ldr	x0, [x0, #136]
  411708:	b	41167c <wcrtomb@plt+0xc72c>
  41170c:	ldr	x0, [x3]
  411710:	b	41167c <wcrtomb@plt+0xc72c>
  411714:	ldr	x0, [x0, #136]
  411718:	b	41167c <wcrtomb@plt+0xc72c>
  41171c:	stp	x29, x30, [sp, #-64]!
  411720:	mov	x29, sp
  411724:	ldr	w0, [x0, #112]
  411728:	add	x3, sp, #0x28
  41172c:	stp	x19, x20, [sp, #16]
  411730:	mov	x20, x1
  411734:	mov	x19, x2
  411738:	mov	x1, #0x0                   	// #0
  41173c:	mov	x2, #0xffffffff            	// #4294967295
  411740:	bl	418174 <wcrtomb@plt+0x13224>
  411744:	mov	x2, x0
  411748:	mov	x1, x20
  41174c:	mov	x0, x19
  411750:	bl	41064c <wcrtomb@plt+0xb6fc>
  411754:	ldp	x19, x20, [sp, #16]
  411758:	ldp	x29, x30, [sp], #64
  41175c:	ret
  411760:	stp	x29, x30, [sp, #-32]!
  411764:	mov	w1, #0x1                   	// #1
  411768:	mov	x29, sp
  41176c:	stp	x19, x20, [sp, #16]
  411770:	mov	x19, x0
  411774:	mov	x20, x2
  411778:	strb	w1, [x0, #321]
  41177c:	mov	x1, x2
  411780:	bl	41033c <wcrtomb@plt+0xb3ec>
  411784:	mov	x1, x20
  411788:	add	x0, x19, #0x8
  41178c:	bl	41033c <wcrtomb@plt+0xb3ec>
  411790:	ldr	x0, [x19, #8]
  411794:	bl	42de70 <argp_usage@@Base+0x990>
  411798:	strb	w0, [x19, #16]
  41179c:	ldp	x19, x20, [sp, #16]
  4117a0:	ldp	x29, x30, [sp], #32
  4117a4:	ret
  4117a8:	stp	x29, x30, [sp, #-32]!
  4117ac:	mov	x29, sp
  4117b0:	stp	x19, x20, [sp, #16]
  4117b4:	mov	x20, x0
  4117b8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4117bc:	ldr	x19, [x0, #2144]
  4117c0:	cbnz	x19, 4117d4 <wcrtomb@plt+0xc884>
  4117c4:	mov	w0, #0x0                   	// #0
  4117c8:	ldp	x19, x20, [sp, #16]
  4117cc:	ldp	x29, x30, [sp], #32
  4117d0:	ret
  4117d4:	ldr	x0, [x19, #8]
  4117d8:	mov	x1, x20
  4117dc:	mov	w2, #0x0                   	// #0
  4117e0:	bl	404be0 <fnmatch@plt>
  4117e4:	cbz	w0, 4117f0 <wcrtomb@plt+0xc8a0>
  4117e8:	ldr	x19, [x19]
  4117ec:	b	4117c0 <wcrtomb@plt+0xc870>
  4117f0:	mov	w0, #0x1                   	// #1
  4117f4:	b	4117c8 <wcrtomb@plt+0xc878>
  4117f8:	stp	x29, x30, [sp, #-48]!
  4117fc:	mov	x29, sp
  411800:	stp	x19, x20, [sp, #16]
  411804:	mov	x20, x0
  411808:	mov	x19, x1
  41180c:	mov	x0, x1
  411810:	stp	x21, x22, [sp, #32]
  411814:	mov	x21, x2
  411818:	mov	x22, x3
  41181c:	bl	4117a8 <wcrtomb@plt+0xc858>
  411820:	tst	w0, #0xff
  411824:	b.ne	4118bc <wcrtomb@plt+0xc96c>  // b.any
  411828:	mov	x0, x19
  41182c:	bl	4101ac <wcrtomb@plt+0xb25c>
  411830:	tst	w0, #0xff
  411834:	b.ne	4118bc <wcrtomb@plt+0xc96c>  // b.any
  411838:	mov	x0, x19
  41183c:	bl	410860 <wcrtomb@plt+0xb910>
  411840:	cbz	x0, 41186c <wcrtomb@plt+0xc91c>
  411844:	mov	x3, x22
  411848:	mov	x2, x21
  41184c:	mov	x1, x19
  411850:	ldr	x4, [x0, #16]
  411854:	mov	x0, x20
  411858:	ldp	x19, x20, [sp, #16]
  41185c:	mov	x16, x4
  411860:	ldp	x21, x22, [sp, #32]
  411864:	ldp	x29, x30, [sp], #48
  411868:	br	x16
  41186c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  411870:	ldr	w0, [x0, #480]
  411874:	tbz	w0, #17, 4118bc <wcrtomb@plt+0xc96c>
  411878:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41187c:	ldr	x0, [x0, #1016]
  411880:	cbz	x0, 411888 <wcrtomb@plt+0xc938>
  411884:	blr	x0
  411888:	mov	w2, #0x5                   	// #5
  41188c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  411890:	mov	x0, #0x0                   	// #0
  411894:	add	x1, x1, #0xfc0
  411898:	bl	404d00 <dcgettext@plt>
  41189c:	mov	x2, x0
  4118a0:	mov	x3, x19
  4118a4:	mov	w1, #0x0                   	// #0
  4118a8:	ldp	x19, x20, [sp, #16]
  4118ac:	mov	w0, #0x0                   	// #0
  4118b0:	ldp	x21, x22, [sp, #32]
  4118b4:	ldp	x29, x30, [sp], #48
  4118b8:	b	4042e0 <error@plt>
  4118bc:	ldp	x19, x20, [sp, #16]
  4118c0:	ldp	x21, x22, [sp, #32]
  4118c4:	ldp	x29, x30, [sp], #48
  4118c8:	ret
  4118cc:	stp	x29, x30, [sp, #-80]!
  4118d0:	mov	x29, sp
  4118d4:	stp	x21, x22, [sp, #32]
  4118d8:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  4118dc:	add	x21, x21, #0x848
  4118e0:	stp	x23, x24, [sp, #48]
  4118e4:	adrp	x23, 44d000 <_obstack_memory_used@@Base+0x15380>
  4118e8:	add	x23, x23, #0x420
  4118ec:	mov	x1, x23
  4118f0:	adrp	x24, 448000 <_obstack_memory_used@@Base+0x10380>
  4118f4:	add	x24, x24, #0x34
  4118f8:	stp	x19, x20, [sp, #16]
  4118fc:	stp	x25, x26, [sp, #64]
  411900:	bl	404250 <strtok@plt>
  411904:	add	x25, x21, #0x50
  411908:	mov	x20, x0
  41190c:	cbnz	x20, 411928 <wcrtomb@plt+0xc9d8>
  411910:	ldp	x19, x20, [sp, #16]
  411914:	ldp	x21, x22, [sp, #32]
  411918:	ldp	x23, x24, [sp, #48]
  41191c:	ldp	x25, x26, [sp, #64]
  411920:	ldp	x29, x30, [sp], #80
  411924:	ret
  411928:	mov	x0, x20
  41192c:	mov	w1, #0x3d                  	// #61
  411930:	bl	404b90 <strchr@plt>
  411934:	mov	x19, x0
  411938:	cbnz	x0, 41196c <wcrtomb@plt+0xca1c>
  41193c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  411940:	ldr	x0, [x0, #1016]
  411944:	cbz	x0, 41194c <wcrtomb@plt+0xc9fc>
  411948:	blr	x0
  41194c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  411950:	add	x1, x1, #0xfee
  411954:	mov	w2, #0x5                   	// #5
  411958:	mov	x0, #0x0                   	// #0
  41195c:	bl	404d00 <dcgettext@plt>
  411960:	mov	x3, x20
  411964:	mov	x2, x0
  411968:	b	4119ac <wcrtomb@plt+0xca5c>
  41196c:	cmp	x20, x0
  411970:	b.ne	4119c0 <wcrtomb@plt+0xca70>  // b.any
  411974:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  411978:	ldr	x0, [x0, #1016]
  41197c:	cbz	x0, 411984 <wcrtomb@plt+0xca34>
  411980:	blr	x0
  411984:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411988:	add	x1, x1, #0x1b
  41198c:	mov	w2, #0x5                   	// #5
  411990:	mov	x0, #0x0                   	// #0
  411994:	bl	404d00 <dcgettext@plt>
  411998:	mov	x20, x0
  41199c:	mov	x0, x19
  4119a0:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  4119a4:	mov	x3, x0
  4119a8:	mov	x2, x20
  4119ac:	mov	w1, #0x0                   	// #0
  4119b0:	mov	w0, #0x0                   	// #0
  4119b4:	bl	4042e0 <error@plt>
  4119b8:	mov	w0, #0x2                   	// #2
  4119bc:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  4119c0:	ldurb	w0, [x0, #-1]
  4119c4:	cmp	w0, #0x3a
  4119c8:	b.ne	411a38 <wcrtomb@plt+0xcae8>  // b.any
  4119cc:	sub	x22, x19, #0x1
  4119d0:	mov	w26, #0x0                   	// #0
  4119d4:	cmp	x20, x22
  4119d8:	b.cs	4119f0 <wcrtomb@plt+0xcaa0>  // b.hs, b.nlast
  4119dc:	bl	404a60 <__ctype_b_loc@plt>
  4119e0:	ldrb	w1, [x22]
  4119e4:	ldr	x0, [x0]
  4119e8:	ldrh	w0, [x0, x1, lsl #1]
  4119ec:	tbnz	w0, #13, 411a30 <wcrtomb@plt+0xcae0>
  4119f0:	strb	wzr, [x22]
  4119f4:	ldrb	w22, [x19, #1]
  4119f8:	add	x19, x19, #0x1
  4119fc:	cbz	w22, 411a14 <wcrtomb@plt+0xcac4>
  411a00:	bl	404a60 <__ctype_b_loc@plt>
  411a04:	ubfiz	x22, x22, #1, #8
  411a08:	ldr	x0, [x0]
  411a0c:	ldrh	w0, [x0, x22]
  411a10:	tbnz	w0, #13, 4119f4 <wcrtomb@plt+0xcaa4>
  411a14:	mov	x1, x24
  411a18:	mov	x0, x20
  411a1c:	bl	404a30 <strcmp@plt>
  411a20:	cbnz	w0, 411aa0 <wcrtomb@plt+0xcb50>
  411a24:	adrp	x20, 448000 <_obstack_memory_used@@Base+0x10380>
  411a28:	add	x20, x20, #0x1b0
  411a2c:	b	411a50 <wcrtomb@plt+0xcb00>
  411a30:	sub	x22, x22, #0x1
  411a34:	b	4119d4 <wcrtomb@plt+0xca84>
  411a38:	mov	x22, x19
  411a3c:	mov	w26, #0x1                   	// #1
  411a40:	b	4119d4 <wcrtomb@plt+0xca84>
  411a44:	ldrb	w0, [x20, #28]
  411a48:	cbz	w0, 411a68 <wcrtomb@plt+0xcb18>
  411a4c:	add	x20, x20, #0x20
  411a50:	ldr	x1, [x20]
  411a54:	cbnz	x1, 411a44 <wcrtomb@plt+0xcaf4>
  411a58:	mov	x1, x19
  411a5c:	add	x0, x21, #0x18
  411a60:	mov	x2, #0x0                   	// #0
  411a64:	b	411b94 <wcrtomb@plt+0xcc44>
  411a68:	ldr	w0, [x20, #24]
  411a6c:	tbz	w0, #0, 411a4c <wcrtomb@plt+0xcafc>
  411a70:	mov	x0, x19
  411a74:	mov	w2, #0x0                   	// #0
  411a78:	bl	404be0 <fnmatch@plt>
  411a7c:	cbnz	w0, 411a4c <wcrtomb@plt+0xcafc>
  411a80:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  411a84:	ldr	x0, [x0, #1016]
  411a88:	cbz	x0, 411a90 <wcrtomb@plt+0xcb40>
  411a8c:	blr	x0
  411a90:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411a94:	mov	w2, #0x5                   	// #5
  411a98:	add	x1, x1, #0x3b
  411a9c:	b	411990 <wcrtomb@plt+0xca40>
  411aa0:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411aa4:	mov	x0, x20
  411aa8:	add	x1, x1, #0x59
  411aac:	bl	404a30 <strcmp@plt>
  411ab0:	cbnz	w0, 411ad4 <wcrtomb@plt+0xcb84>
  411ab4:	mov	x1, x19
  411ab8:	add	x0, x21, #0x20
  411abc:	bl	417c2c <wcrtomb@plt+0x12cdc>
  411ac0:	mov	x1, x23
  411ac4:	mov	x0, #0x0                   	// #0
  411ac8:	bl	404250 <strtok@plt>
  411acc:	mov	x20, x0
  411ad0:	b	41190c <wcrtomb@plt+0xc9bc>
  411ad4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411ad8:	mov	x0, x20
  411adc:	add	x1, x1, #0x55
  411ae0:	bl	404a30 <strcmp@plt>
  411ae4:	cbnz	w0, 411af4 <wcrtomb@plt+0xcba4>
  411ae8:	mov	x1, x19
  411aec:	add	x0, x21, #0x28
  411af0:	b	411abc <wcrtomb@plt+0xcb6c>
  411af4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411af8:	mov	x0, x20
  411afc:	add	x1, x1, #0x69
  411b00:	bl	404a30 <strcmp@plt>
  411b04:	cbnz	w0, 411b1c <wcrtomb@plt+0xcbcc>
  411b08:	mov	x2, x19
  411b0c:	add	x1, x21, #0x30
  411b10:	add	x0, x21, #0x38
  411b14:	bl	4101f8 <wcrtomb@plt+0xb2a8>
  411b18:	b	411ac0 <wcrtomb@plt+0xcb70>
  411b1c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411b20:	mov	x0, x20
  411b24:	add	x1, x1, #0x65
  411b28:	bl	404a30 <strcmp@plt>
  411b2c:	cbnz	w0, 411b7c <wcrtomb@plt+0xcc2c>
  411b30:	mov	x2, x19
  411b34:	add	x1, x21, #0x40
  411b38:	add	x0, x21, #0x48
  411b3c:	b	411b14 <wcrtomb@plt+0xcbc4>
  411b40:	ldrb	w1, [x22, #28]
  411b44:	cbnz	w1, 411b5c <wcrtomb@plt+0xcc0c>
  411b48:	ldr	w1, [x22, #24]
  411b4c:	tbz	w1, #0, 411b5c <wcrtomb@plt+0xcc0c>
  411b50:	mov	x1, x20
  411b54:	bl	404a30 <strcmp@plt>
  411b58:	cbz	w0, 411b9c <wcrtomb@plt+0xcc4c>
  411b5c:	add	x22, x22, #0x20
  411b60:	ldr	x0, [x22]
  411b64:	cbnz	x0, 411b40 <wcrtomb@plt+0xcbf0>
  411b68:	cbnz	w26, 411b88 <wcrtomb@plt+0xcc38>
  411b6c:	mov	x2, x19
  411b70:	mov	x1, x20
  411b74:	mov	x0, x21
  411b78:	b	411b94 <wcrtomb@plt+0xcc44>
  411b7c:	adrp	x22, 448000 <_obstack_memory_used@@Base+0x10380>
  411b80:	add	x22, x22, #0x1b0
  411b84:	b	411b60 <wcrtomb@plt+0xcc10>
  411b88:	mov	x2, x19
  411b8c:	mov	x1, x20
  411b90:	mov	x0, x25
  411b94:	bl	410298 <wcrtomb@plt+0xb348>
  411b98:	b	411ac0 <wcrtomb@plt+0xcb70>
  411b9c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  411ba0:	ldr	x0, [x0, #1016]
  411ba4:	cbz	x0, 411bac <wcrtomb@plt+0xcc5c>
  411ba8:	blr	x0
  411bac:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411bb0:	mov	w2, #0x5                   	// #5
  411bb4:	add	x1, x1, #0x76
  411bb8:	b	411958 <wcrtomb@plt+0xca08>
  411bbc:	stp	x29, x30, [sp, #-160]!
  411bc0:	mov	x29, sp
  411bc4:	stp	x19, x20, [sp, #16]
  411bc8:	mov	x20, x0
  411bcc:	add	x0, sp, #0x9c
  411bd0:	stp	x25, x26, [sp, #64]
  411bd4:	mov	x25, x2
  411bd8:	mov	x19, #0x0                   	// #0
  411bdc:	stp	x27, x28, [sp, #80]
  411be0:	mov	x27, x1
  411be4:	mov	x28, #0x0                   	// #0
  411be8:	stp	x21, x22, [sp, #32]
  411bec:	mov	x22, #0x0                   	// #0
  411bf0:	mov	x21, #0x0                   	// #0
  411bf4:	stp	x23, x24, [sp, #48]
  411bf8:	mov	x24, #0x0                   	// #0
  411bfc:	mov	x23, #0x0                   	// #0
  411c00:	str	x0, [sp, #96]
  411c04:	add	x0, sp, #0x84
  411c08:	str	x0, [sp, #104]
  411c0c:	ldrb	w0, [x1]
  411c10:	cbnz	w0, 411c70 <wcrtomb@plt+0xcd20>
  411c14:	add	x0, x28, #0x1
  411c18:	bl	436d44 <argp_usage@@Base+0x9864>
  411c1c:	mov	x25, x0
  411c20:	mov	x20, x0
  411c24:	mov	w26, #0x25                  	// #37
  411c28:	ldrb	w1, [x27]
  411c2c:	cbnz	w1, 411d58 <wcrtomb@plt+0xce08>
  411c30:	mov	x0, x19
  411c34:	bl	404ae0 <free@plt>
  411c38:	cmp	x20, x25
  411c3c:	b.ls	411c4c <wcrtomb@plt+0xccfc>  // b.plast
  411c40:	ldurb	w0, [x20, #-1]
  411c44:	cmp	w0, #0x2f
  411c48:	b.eq	411e10 <wcrtomb@plt+0xcec0>  // b.none
  411c4c:	strb	wzr, [x20]
  411c50:	mov	x0, x25
  411c54:	ldp	x19, x20, [sp, #16]
  411c58:	ldp	x21, x22, [sp, #32]
  411c5c:	ldp	x23, x24, [sp, #48]
  411c60:	ldp	x25, x26, [sp, #64]
  411c64:	ldp	x27, x28, [sp, #80]
  411c68:	ldp	x29, x30, [sp], #160
  411c6c:	ret
  411c70:	add	x26, x1, #0x1
  411c74:	cmp	w0, #0x25
  411c78:	b.ne	411d4c <wcrtomb@plt+0xcdfc>  // b.any
  411c7c:	ldrb	w0, [x1, #1]
  411c80:	cbz	w0, 411d4c <wcrtomb@plt+0xcdfc>
  411c84:	cmp	w0, #0x66
  411c88:	b.eq	411d1c <wcrtomb@plt+0xcdcc>  // b.none
  411c8c:	b.hi	411ca8 <wcrtomb@plt+0xcd58>  // b.pmore
  411c90:	cmp	w0, #0x25
  411c94:	b.eq	411cd8 <wcrtomb@plt+0xcd88>  // b.none
  411c98:	cmp	w0, #0x64
  411c9c:	b.eq	411ce4 <wcrtomb@plt+0xcd94>  // b.none
  411ca0:	add	x28, x28, #0x2
  411ca4:	b	411cdc <wcrtomb@plt+0xcd8c>
  411ca8:	cmp	w0, #0x6e
  411cac:	b.eq	411d30 <wcrtomb@plt+0xcde0>  // b.none
  411cb0:	cmp	w0, #0x70
  411cb4:	b.ne	411ca0 <wcrtomb@plt+0xcd50>  // b.any
  411cb8:	bl	4045a0 <getpid@plt>
  411cbc:	sxtw	x0, w0
  411cc0:	add	x1, sp, #0x70
  411cc4:	bl	431400 <argp_usage@@Base+0x3f20>
  411cc8:	mov	x23, x0
  411ccc:	ldr	x0, [sp, #104]
  411cd0:	sub	x0, x0, x23
  411cd4:	b	411d14 <wcrtomb@plt+0xcdc4>
  411cd8:	add	x28, x28, #0x1
  411cdc:	add	x1, x26, #0x1
  411ce0:	b	411c0c <wcrtomb@plt+0xccbc>
  411ce4:	cbz	x20, 411cdc <wcrtomb@plt+0xcd8c>
  411ce8:	cbnz	x19, 411cf8 <wcrtomb@plt+0xcda8>
  411cec:	ldr	x0, [x20]
  411cf0:	bl	42dcb0 <argp_usage@@Base+0x7d0>
  411cf4:	mov	x19, x0
  411cf8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  411cfc:	mov	w1, #0x0                   	// #0
  411d00:	ldrb	w2, [x0, #960]
  411d04:	mov	x0, x19
  411d08:	bl	425478 <wcrtomb@plt+0x20528>
  411d0c:	mov	x21, x0
  411d10:	bl	404280 <strlen@plt>
  411d14:	add	x28, x28, x0
  411d18:	b	411cdc <wcrtomb@plt+0xcd8c>
  411d1c:	cbz	x20, 411cdc <wcrtomb@plt+0xcd8c>
  411d20:	ldr	x0, [x20]
  411d24:	bl	42dde0 <argp_usage@@Base+0x900>
  411d28:	mov	x22, x0
  411d2c:	b	411d10 <wcrtomb@plt+0xcdc0>
  411d30:	add	x1, sp, #0x88
  411d34:	mov	x0, x25
  411d38:	bl	431400 <argp_usage@@Base+0x3f20>
  411d3c:	mov	x24, x0
  411d40:	ldr	x0, [sp, #96]
  411d44:	sub	x0, x0, x24
  411d48:	b	411d14 <wcrtomb@plt+0xcdc4>
  411d4c:	add	x28, x28, #0x1
  411d50:	mov	x26, x1
  411d54:	b	411cdc <wcrtomb@plt+0xcd8c>
  411d58:	cmp	w1, #0x25
  411d5c:	b.ne	411e00 <wcrtomb@plt+0xceb0>  // b.any
  411d60:	ldrb	w1, [x27, #1]
  411d64:	cmp	w1, #0x66
  411d68:	b.eq	411ddc <wcrtomb@plt+0xce8c>  // b.none
  411d6c:	b.hi	411d94 <wcrtomb@plt+0xce44>  // b.pmore
  411d70:	cmp	w1, #0x25
  411d74:	b.eq	411dac <wcrtomb@plt+0xce5c>  // b.none
  411d78:	cmp	w1, #0x64
  411d7c:	b.eq	411dc0 <wcrtomb@plt+0xce70>  // b.none
  411d80:	strb	w26, [x20]
  411d84:	cbnz	w1, 411df0 <wcrtomb@plt+0xcea0>
  411d88:	add	x27, x27, #0x1
  411d8c:	add	x20, x20, #0x1
  411d90:	b	411c28 <wcrtomb@plt+0xccd8>
  411d94:	cmp	w1, #0x6e
  411d98:	b.eq	411de8 <wcrtomb@plt+0xce98>  // b.none
  411d9c:	cmp	w1, #0x70
  411da0:	b.ne	411d80 <wcrtomb@plt+0xce30>  // b.any
  411da4:	mov	x1, x23
  411da8:	b	411dc8 <wcrtomb@plt+0xce78>
  411dac:	mov	x0, x20
  411db0:	add	x27, x27, #0x2
  411db4:	strb	w1, [x0], #1
  411db8:	mov	x20, x0
  411dbc:	b	411c28 <wcrtomb@plt+0xccd8>
  411dc0:	cbz	x21, 411dd4 <wcrtomb@plt+0xce84>
  411dc4:	mov	x1, x21
  411dc8:	mov	x0, x20
  411dcc:	bl	4044e0 <stpcpy@plt>
  411dd0:	mov	x20, x0
  411dd4:	add	x27, x27, #0x2
  411dd8:	b	411c28 <wcrtomb@plt+0xccd8>
  411ddc:	cbz	x22, 411dd4 <wcrtomb@plt+0xce84>
  411de0:	mov	x1, x22
  411de4:	b	411dc8 <wcrtomb@plt+0xce78>
  411de8:	mov	x1, x24
  411dec:	b	411dc8 <wcrtomb@plt+0xce78>
  411df0:	add	x27, x27, #0x2
  411df4:	add	x20, x20, #0x2
  411df8:	sturb	w1, [x20, #-1]
  411dfc:	b	411c28 <wcrtomb@plt+0xccd8>
  411e00:	mov	x0, x20
  411e04:	add	x27, x27, #0x1
  411e08:	strb	w1, [x0], #1
  411e0c:	b	411db8 <wcrtomb@plt+0xce68>
  411e10:	sub	x20, x20, #0x1
  411e14:	b	411c38 <wcrtomb@plt+0xcce8>
  411e18:	stp	x29, x30, [sp, #-32]!
  411e1c:	mov	x29, sp
  411e20:	stp	x19, x20, [sp, #16]
  411e24:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  411e28:	add	x19, x19, #0x848
  411e2c:	mov	x20, x0
  411e30:	ldr	x0, [x19, #32]
  411e34:	cbnz	x0, 411e48 <wcrtomb@plt+0xcef8>
  411e38:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411e3c:	add	x0, x19, #0x20
  411e40:	add	x1, x1, #0x96
  411e44:	bl	417c2c <wcrtomb@plt+0x12cdc>
  411e48:	mov	x0, x20
  411e4c:	mov	x2, #0x0                   	// #0
  411e50:	ldr	x1, [x19, #32]
  411e54:	ldp	x19, x20, [sp, #16]
  411e58:	ldp	x29, x30, [sp], #32
  411e5c:	b	411bbc <wcrtomb@plt+0xcc6c>
  411e60:	stp	x29, x30, [sp, #-48]!
  411e64:	mov	x29, sp
  411e68:	stp	x19, x20, [sp, #16]
  411e6c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  411e70:	add	x20, x20, #0x848
  411e74:	str	x21, [sp, #32]
  411e78:	ldr	x0, [x20, #40]
  411e7c:	cbnz	x0, 411ecc <wcrtomb@plt+0xcf7c>
  411e80:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  411e84:	add	x0, x0, #0xaf
  411e88:	bl	404e40 <getenv@plt>
  411e8c:	mov	x19, x0
  411e90:	cbnz	x0, 411e9c <wcrtomb@plt+0xcf4c>
  411e94:	adrp	x19, 448000 <_obstack_memory_used@@Base+0x10380>
  411e98:	add	x19, x19, #0xaa
  411e9c:	mov	x0, x19
  411ea0:	bl	404280 <strlen@plt>
  411ea4:	add	x0, x0, #0x12
  411ea8:	bl	436d44 <argp_usage@@Base+0x9864>
  411eac:	mov	x1, x19
  411eb0:	mov	x21, x0
  411eb4:	str	x0, [x20, #40]
  411eb8:	bl	404c40 <strcpy@plt>
  411ebc:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411ec0:	mov	x0, x21
  411ec4:	add	x1, x1, #0xb6
  411ec8:	bl	4046e0 <strcat@plt>
  411ecc:	ldr	x21, [sp, #32]
  411ed0:	mov	x0, #0x0                   	// #0
  411ed4:	ldr	x1, [x20, #40]
  411ed8:	ldr	x2, [x20, #88]
  411edc:	ldp	x19, x20, [sp, #16]
  411ee0:	add	x2, x2, #0x1
  411ee4:	ldp	x29, x30, [sp], #48
  411ee8:	b	411bbc <wcrtomb@plt+0xcc6c>
  411eec:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  411ef0:	ldr	x0, [x0, #2200]
  411ef4:	cbz	x0, 411f3c <wcrtomb@plt+0xcfec>
  411ef8:	stp	x29, x30, [sp, #-16]!
  411efc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  411f00:	mov	x29, sp
  411f04:	ldr	x0, [x0, #1016]
  411f08:	cbz	x0, 411f10 <wcrtomb@plt+0xcfc0>
  411f0c:	blr	x0
  411f10:	mov	w2, #0x5                   	// #5
  411f14:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  411f18:	mov	x0, #0x0                   	// #0
  411f1c:	add	x1, x1, #0xc8
  411f20:	bl	404d00 <dcgettext@plt>
  411f24:	mov	x2, x0
  411f28:	mov	w1, #0x0                   	// #0
  411f2c:	mov	w0, #0x0                   	// #0
  411f30:	bl	4042e0 <error@plt>
  411f34:	mov	w0, #0x2                   	// #2
  411f38:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  411f3c:	ret
  411f40:	stp	xzr, xzr, [x0, #48]
  411f44:	stp	xzr, xzr, [x0, #64]
  411f48:	str	xzr, [x0, #80]
  411f4c:	stp	xzr, xzr, [x0, #328]
  411f50:	ret
  411f54:	stp	x29, x30, [sp, #-48]!
  411f58:	mov	x29, sp
  411f5c:	str	x21, [sp, #32]
  411f60:	mov	x21, #0x18                  	// #24
  411f64:	stp	x19, x20, [sp, #16]
  411f68:	mov	x19, x0
  411f6c:	madd	x21, x1, x21, x0
  411f70:	mov	x20, x0
  411f74:	cmp	x20, x21
  411f78:	b.ne	411f90 <wcrtomb@plt+0xd040>  // b.any
  411f7c:	mov	x0, x19
  411f80:	ldp	x19, x20, [sp, #16]
  411f84:	ldr	x21, [sp, #32]
  411f88:	ldp	x29, x30, [sp], #48
  411f8c:	b	404ae0 <free@plt>
  411f90:	ldr	x0, [x20]
  411f94:	add	x20, x20, #0x18
  411f98:	bl	404ae0 <free@plt>
  411f9c:	ldur	x0, [x20, #-16]
  411fa0:	bl	404ae0 <free@plt>
  411fa4:	b	411f74 <wcrtomb@plt+0xd024>
  411fa8:	stp	x29, x30, [sp, #-64]!
  411fac:	mov	x29, sp
  411fb0:	stp	x19, x20, [sp, #16]
  411fb4:	mov	x20, x0
  411fb8:	mov	x0, x1
  411fbc:	stp	x21, x22, [sp, #32]
  411fc0:	mov	x22, x2
  411fc4:	mov	x21, x1
  411fc8:	str	x23, [sp, #48]
  411fcc:	mov	x23, x3
  411fd0:	bl	404280 <strlen@plt>
  411fd4:	add	x0, x0, #0xe
  411fd8:	bl	436d44 <argp_usage@@Base+0x9864>
  411fdc:	mov	x19, x0
  411fe0:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  411fe4:	add	x0, x0, #0xf3
  411fe8:	ldr	x1, [x0]
  411fec:	str	x1, [x19]
  411ff0:	ldur	x0, [x0, #6]
  411ff4:	mov	x1, x21
  411ff8:	stur	x0, [x19, #6]
  411ffc:	add	x0, x19, #0xd
  412000:	bl	404c40 <strcpy@plt>
  412004:	mov	x4, x23
  412008:	mov	x3, x22
  41200c:	mov	x2, x19
  412010:	add	x1, x20, #0x148
  412014:	add	x0, x20, #0x150
  412018:	bl	41076c <wcrtomb@plt+0xb81c>
  41201c:	mov	x0, x19
  412020:	ldp	x19, x20, [sp, #16]
  412024:	ldp	x21, x22, [sp, #32]
  412028:	ldr	x23, [sp, #48]
  41202c:	ldp	x29, x30, [sp], #64
  412030:	b	404ae0 <free@plt>
  412034:	stp	x29, x30, [sp, #-64]!
  412038:	mov	x29, sp
  41203c:	stp	x19, x20, [sp, #16]
  412040:	mov	x19, x3
  412044:	stp	x21, x22, [sp, #32]
  412048:	mov	x21, x1
  41204c:	mov	x22, x0
  412050:	mov	x0, x1
  412054:	str	x23, [sp, #48]
  412058:	mov	x23, x2
  41205c:	bl	404280 <strlen@plt>
  412060:	add	x1, x0, #0x10
  412064:	add	x2, x0, #0x1
  412068:	and	x1, x1, #0xfffffffffffffff0
  41206c:	sub	sp, sp, x1
  412070:	mov	x1, x21
  412074:	mov	x20, sp
  412078:	mov	x0, x20
  41207c:	bl	404200 <memcpy@plt>
  412080:	add	x0, x19, #0x10
  412084:	add	x2, x19, #0x1
  412088:	and	x0, x0, #0xfffffffffffffff0
  41208c:	mov	x1, x23
  412090:	sub	sp, sp, x0
  412094:	mov	x4, sp
  412098:	mov	x0, x4
  41209c:	bl	404200 <memcpy@plt>
  4120a0:	mov	x4, x0
  4120a4:	add	x2, x20, #0x1
  4120a8:	mov	x1, x20
  4120ac:	mov	w5, #0x3d                  	// #61
  4120b0:	ldrb	w3, [x1]
  4120b4:	cmp	w3, #0x25
  4120b8:	b.ne	412100 <wcrtomb@plt+0xd1b0>  // b.any
  4120bc:	ldrb	w0, [x1, #1]
  4120c0:	cmp	w0, #0x33
  4120c4:	b.ne	4120e4 <wcrtomb@plt+0xd194>  // b.any
  4120c8:	ldrb	w0, [x1, #2]
  4120cc:	cmp	w0, #0x44
  4120d0:	b.ne	412100 <wcrtomb@plt+0xd1b0>  // b.any
  4120d4:	sturb	w5, [x2, #-1]
  4120d8:	add	x1, x1, #0x3
  4120dc:	add	x2, x2, #0x1
  4120e0:	b	4120b0 <wcrtomb@plt+0xd160>
  4120e4:	cmp	w0, #0x32
  4120e8:	b.ne	412100 <wcrtomb@plt+0xd1b0>  // b.any
  4120ec:	ldrb	w0, [x1, #2]
  4120f0:	cmp	w0, #0x35
  4120f4:	b.ne	412100 <wcrtomb@plt+0xd1b0>  // b.any
  4120f8:	sturb	w3, [x2, #-1]
  4120fc:	b	4120d8 <wcrtomb@plt+0xd188>
  412100:	sturb	w3, [x2, #-1]
  412104:	cbz	w3, 412110 <wcrtomb@plt+0xd1c0>
  412108:	add	x1, x1, #0x1
  41210c:	b	4120dc <wcrtomb@plt+0xd18c>
  412110:	mov	x3, x19
  412114:	add	x1, x20, #0xd
  412118:	mov	x0, x22
  41211c:	mov	x2, x4
  412120:	bl	411fa8 <wcrtomb@plt+0xd058>
  412124:	mov	sp, x29
  412128:	ldp	x19, x20, [sp, #16]
  41212c:	ldp	x21, x22, [sp, #32]
  412130:	ldr	x23, [sp, #48]
  412134:	ldp	x29, x30, [sp], #64
  412138:	ret
  41213c:	stp	x29, x30, [sp, #-64]!
  412140:	mov	x29, sp
  412144:	stp	x19, x20, [sp, #16]
  412148:	mov	x20, x0
  41214c:	mov	x19, #0x0                   	// #0
  412150:	stp	x21, x22, [sp, #32]
  412154:	mov	x21, x1
  412158:	mov	x22, x2
  41215c:	str	x23, [sp, #48]
  412160:	mov	x23, #0x18                  	// #24
  412164:	str	xzr, [x1]
  412168:	str	xzr, [x2]
  41216c:	ldr	x0, [x20, #328]
  412170:	cmp	x0, x19
  412174:	b.hi	41218c <wcrtomb@plt+0xd23c>  // b.pmore
  412178:	ldp	x19, x20, [sp, #16]
  41217c:	ldp	x21, x22, [sp, #32]
  412180:	ldr	x23, [sp, #48]
  412184:	ldp	x29, x30, [sp], #64
  412188:	ret
  41218c:	ldr	x1, [x20, #336]
  412190:	mul	x0, x19, x23
  412194:	add	x19, x19, #0x1
  412198:	add	x2, x1, x0
  41219c:	ldp	x3, x4, [x2, #8]
  4121a0:	ldr	x2, [x1, x0]
  4121a4:	mov	x1, x22
  4121a8:	mov	x0, x21
  4121ac:	bl	41076c <wcrtomb@plt+0xb81c>
  4121b0:	b	41216c <wcrtomb@plt+0xd21c>
  4121b4:	stp	x29, x30, [sp, #-64]!
  4121b8:	mov	x1, x0
  4121bc:	mov	x29, sp
  4121c0:	stp	x19, x20, [sp, #16]
  4121c4:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  4121c8:	mov	x19, x0
  4121cc:	stp	x21, x22, [sp, #32]
  4121d0:	add	x21, x20, #0x848
  4121d4:	ldr	x0, [x21, #80]
  4121d8:	bl	4108d8 <wcrtomb@plt+0xb988>
  4121dc:	ldr	x0, [x21, #96]
  4121e0:	mov	x1, x19
  4121e4:	bl	4108d8 <wcrtomb@plt+0xb988>
  4121e8:	ldr	x0, [x19, #352]
  4121ec:	cbz	x0, 412224 <wcrtomb@plt+0xd2d4>
  4121f0:	ldr	x0, [x19, #360]
  4121f4:	adrp	x21, 411000 <wcrtomb@plt+0xc0b0>
  4121f8:	add	x22, x19, #0x158
  4121fc:	add	x21, x21, #0x7f8
  412200:	add	x0, x0, #0x200
  412204:	str	x0, [sp, #56]
  412208:	mov	x3, x19
  41220c:	mov	x2, x21
  412210:	add	x1, sp, #0x38
  412214:	mov	x0, x22
  412218:	bl	4109b8 <wcrtomb@plt+0xba68>
  41221c:	tst	w0, #0xff
  412220:	b.ne	412208 <wcrtomb@plt+0xd2b8>  // b.any
  412224:	ldr	x0, [x20, #2120]
  412228:	mov	x1, x19
  41222c:	bl	4108d8 <wcrtomb@plt+0xb988>
  412230:	ldr	x0, [x19, #136]
  412234:	str	x0, [x19, #264]
  412238:	ldrb	w0, [x19, #320]
  41223c:	cbz	w0, 412248 <wcrtomb@plt+0xd2f8>
  412240:	ldr	x0, [x19, #312]
  412244:	str	x0, [x19, #136]
  412248:	ldp	x19, x20, [sp, #16]
  41224c:	ldp	x21, x22, [sp, #32]
  412250:	ldp	x29, x30, [sp], #64
  412254:	ret
  412258:	stp	x29, x30, [sp, #-64]!
  41225c:	mov	x29, sp
  412260:	stp	x21, x22, [sp, #32]
  412264:	mov	x21, x0
  412268:	ldr	x0, [x0, #8]
  41226c:	stp	x19, x20, [sp, #16]
  412270:	cbz	x0, 4122b8 <wcrtomb@plt+0xd368>
  412274:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  412278:	add	x19, x19, #0x848
  41227c:	ldr	x0, [x21, #16]
  412280:	ldr	x20, [x19, #96]
  412284:	add	x0, x0, #0x200
  412288:	str	x0, [sp, #56]
  41228c:	cbnz	x20, 4122c8 <wcrtomb@plt+0xd378>
  412290:	adrp	x20, 410000 <wcrtomb@plt+0xb0b0>
  412294:	add	x20, x20, #0x940
  412298:	str	xzr, [x19, #96]!
  41229c:	mov	x3, x19
  4122a0:	mov	x2, x20
  4122a4:	add	x1, sp, #0x38
  4122a8:	mov	x0, x21
  4122ac:	bl	4109b8 <wcrtomb@plt+0xba68>
  4122b0:	tst	w0, #0xff
  4122b4:	b.ne	41229c <wcrtomb@plt+0xd34c>  // b.any
  4122b8:	ldp	x19, x20, [sp, #16]
  4122bc:	ldp	x21, x22, [sp, #32]
  4122c0:	ldp	x29, x30, [sp], #64
  4122c4:	ret
  4122c8:	ldp	x22, x0, [x20]
  4122cc:	bl	404ae0 <free@plt>
  4122d0:	ldr	x0, [x20, #16]
  4122d4:	bl	404ae0 <free@plt>
  4122d8:	mov	x0, x20
  4122dc:	mov	x20, x22
  4122e0:	bl	404ae0 <free@plt>
  4122e4:	b	41228c <wcrtomb@plt+0xd33c>
  4122e8:	stp	x29, x30, [sp, #-64]!
  4122ec:	mov	x29, sp
  4122f0:	stp	x19, x20, [sp, #16]
  4122f4:	mov	x19, x1
  4122f8:	ldr	x1, [x1, #360]
  4122fc:	stp	x21, x22, [sp, #32]
  412300:	str	x23, [sp, #48]
  412304:	cbnz	x1, 41237c <wcrtomb@plt+0xd42c>
  412308:	mov	x20, x0
  41230c:	mov	x22, x2
  412310:	bl	410860 <wcrtomb@plt+0xb910>
  412314:	mov	x21, x0
  412318:	cbz	x0, 41237c <wcrtomb@plt+0xd42c>
  41231c:	ldr	x0, [x0, #8]
  412320:	cbz	x0, 41237c <wcrtomb@plt+0xd42c>
  412324:	mov	x0, x20
  412328:	bl	4117a8 <wcrtomb@plt+0xc858>
  41232c:	tst	w0, #0xff
  412330:	b.ne	41237c <wcrtomb@plt+0xd42c>  // b.any
  412334:	add	x23, x19, #0x158
  412338:	mov	x0, x23
  41233c:	bl	410f7c <wcrtomb@plt+0xc02c>
  412340:	mov	x0, x20
  412344:	bl	4101ac <wcrtomb@plt+0xb25c>
  412348:	tst	w0, #0xff
  41234c:	b.ne	41237c <wcrtomb@plt+0xd42c>  // b.any
  412350:	mov	x3, x22
  412354:	mov	x2, x23
  412358:	mov	x1, x20
  41235c:	mov	x0, x19
  412360:	ldr	x4, [x21, #8]
  412364:	ldp	x19, x20, [sp, #16]
  412368:	mov	x16, x4
  41236c:	ldp	x21, x22, [sp, #32]
  412370:	ldr	x23, [sp, #48]
  412374:	ldp	x29, x30, [sp], #64
  412378:	br	x16
  41237c:	ldp	x19, x20, [sp, #16]
  412380:	ldp	x21, x22, [sp, #32]
  412384:	ldr	x23, [sp, #48]
  412388:	ldp	x29, x30, [sp], #64
  41238c:	ret
  412390:	stp	x29, x30, [sp, #-64]!
  412394:	cmp	x2, #0x0
  412398:	csel	x2, x2, xzr, ge  // ge = tcont
  41239c:	mov	x29, sp
  4123a0:	stp	x21, x22, [sp, #32]
  4123a4:	mov	x21, x0
  4123a8:	add	x0, x2, #0x201
  4123ac:	stp	x19, x20, [sp, #16]
  4123b0:	add	x20, x2, #0x200
  4123b4:	mov	x19, x1
  4123b8:	stp	x23, x24, [sp, #48]
  4123bc:	mov	x23, #0x0                   	// #0
  4123c0:	mov	x24, #0x200                 	// #512
  4123c4:	str	x20, [x21, #8]
  4123c8:	bl	436d44 <argp_usage@@Base+0x9864>
  4123cc:	strb	wzr, [x0, x20]
  4123d0:	str	x0, [x21, #16]
  4123d4:	cmp	x20, #0x200
  4123d8:	csel	x22, x20, x24, ls  // ls = plast
  4123dc:	cbnz	x19, 412418 <wcrtomb@plt+0xd4c8>
  4123e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4123e4:	ldr	x0, [x0, #1016]
  4123e8:	cbz	x0, 4123f0 <wcrtomb@plt+0xd4a0>
  4123ec:	blr	x0
  4123f0:	mov	w2, #0x5                   	// #5
  4123f4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4123f8:	mov	x0, #0x0                   	// #0
  4123fc:	add	x1, x1, #0x41c
  412400:	bl	404d00 <dcgettext@plt>
  412404:	mov	x2, x0
  412408:	mov	w1, #0x0                   	// #0
  41240c:	mov	w0, #0x0                   	// #0
  412410:	bl	4042e0 <error@plt>
  412414:	bl	40d47c <wcrtomb@plt+0x852c>
  412418:	ldr	x0, [x21, #16]
  41241c:	mov	x1, x19
  412420:	mov	x2, x22
  412424:	sub	x20, x20, x22
  412428:	add	x0, x0, x23
  41242c:	bl	404200 <memcpy@plt>
  412430:	mov	x0, x19
  412434:	add	x23, x23, x22
  412438:	bl	405c98 <wcrtomb@plt+0xd48>
  41243c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  412440:	mov	x19, x0
  412444:	cmp	x20, #0x0
  412448:	b.gt	4123d4 <wcrtomb@plt+0xd484>
  41244c:	ldp	x19, x20, [sp, #16]
  412450:	ldp	x21, x22, [sp, #32]
  412454:	ldp	x23, x24, [sp, #48]
  412458:	ldp	x29, x30, [sp], #64
  41245c:	ret
  412460:	stp	x29, x30, [sp, #-32]!
  412464:	mov	x29, sp
  412468:	stp	x19, x20, [sp, #16]
  41246c:	mov	x19, x0
  412470:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  412474:	ldr	x20, [x0, #2120]
  412478:	cbnz	x20, 4124d0 <wcrtomb@plt+0xd580>
  41247c:	ldr	x1, [x19]
  412480:	ldp	x4, x0, [x1, #16]
  412484:	cmp	x0, x4
  412488:	b.ne	412498 <wcrtomb@plt+0xd548>  // b.any
  41248c:	ldrb	w2, [x1, #80]
  412490:	orr	w2, w2, #0x2
  412494:	strb	w2, [x1, #80]
  412498:	ldr	x3, [x1, #48]
  41249c:	ldr	x2, [x1, #32]
  4124a0:	add	x0, x0, x3
  4124a4:	bic	x3, x0, x3
  4124a8:	ldr	x0, [x1, #8]
  4124ac:	sub	x5, x3, x0
  4124b0:	sub	x0, x2, x0
  4124b4:	cmp	x5, x0
  4124b8:	csel	x3, x3, x2, ls  // ls = plast
  4124bc:	stp	x3, x3, [x1, #16]
  4124c0:	str	x4, [x19, #16]
  4124c4:	ldp	x19, x20, [sp, #16]
  4124c8:	ldp	x29, x30, [sp], #32
  4124cc:	ret
  4124d0:	ldp	x1, x0, [x20, #8]
  4124d4:	mov	x2, x19
  4124d8:	bl	410690 <wcrtomb@plt+0xb740>
  4124dc:	ldr	x20, [x20]
  4124e0:	b	412478 <wcrtomb@plt+0xd528>
  4124e4:	stp	x29, x30, [sp, #-32]!
  4124e8:	mov	x29, sp
  4124ec:	str	x19, [sp, #16]
  4124f0:	mov	x19, x0
  4124f4:	ldr	x0, [x0]
  4124f8:	cbz	x0, 412520 <wcrtomb@plt+0xd5d0>
  4124fc:	mov	x1, #0x0                   	// #0
  412500:	bl	437c0c <_obstack_free@@Base>
  412504:	ldr	x0, [x19]
  412508:	bl	404ae0 <free@plt>
  41250c:	str	xzr, [x19]
  412510:	stp	xzr, xzr, [x19, #8]
  412514:	ldr	x19, [sp, #16]
  412518:	ldp	x29, x30, [sp], #32
  41251c:	ret
  412520:	ldr	x0, [x19, #16]
  412524:	bl	404ae0 <free@plt>
  412528:	b	412510 <wcrtomb@plt+0xd5c0>
  41252c:	stp	x29, x30, [sp, #-80]!
  412530:	mov	x29, sp
  412534:	stp	x19, x20, [sp, #16]
  412538:	stp	x21, x22, [sp, #32]
  41253c:	and	w22, w0, #0xff
  412540:	mov	x21, x3
  412544:	stp	x23, x24, [sp, #48]
  412548:	mov	x0, x1
  41254c:	cmp	w22, #0x67
  412550:	ldr	x19, [x3, #8]
  412554:	str	x25, [sp, #64]
  412558:	b.eq	412600 <wcrtomb@plt+0xd6b0>  // b.none
  41255c:	cmp	w22, #0x78
  412560:	b.eq	412618 <wcrtomb@plt+0xd6c8>  // b.none
  412564:	mov	x1, x19
  412568:	bl	40a920 <wcrtomb@plt+0x59d0>
  41256c:	strb	w22, [x0, #156]
  412570:	mov	x25, #0x200                 	// #512
  412574:	bl	40aa64 <wcrtomb@plt+0x5b14>
  412578:	ldr	x24, [x21, #16]
  41257c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  412580:	cmp	x19, #0x1ff
  412584:	mov	x23, x0
  412588:	csel	x20, x19, x25, ls  // ls = plast
  41258c:	mov	x1, x24
  412590:	mov	x2, x20
  412594:	bl	404200 <memcpy@plt>
  412598:	cmp	x20, #0x200
  41259c:	b.eq	4125b0 <wcrtomb@plt+0xd660>  // b.none
  4125a0:	sub	x2, x25, x20
  4125a4:	add	x0, x23, x20
  4125a8:	mov	w1, #0x0                   	// #0
  4125ac:	bl	404700 <memset@plt>
  4125b0:	sub	x19, x19, x20
  4125b4:	add	x24, x24, x20
  4125b8:	mov	x0, x23
  4125bc:	bl	405c98 <wcrtomb@plt+0xd48>
  4125c0:	cbnz	x19, 41257c <wcrtomb@plt+0xd62c>
  4125c4:	mov	x0, x21
  4125c8:	bl	4124e4 <wcrtomb@plt+0xd594>
  4125cc:	cmp	w22, #0x67
  4125d0:	b.ne	4125e8 <wcrtomb@plt+0xd698>  // b.any
  4125d4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4125d8:	add	x0, x0, #0x848
  4125dc:	ldr	x1, [x0, #88]
  4125e0:	add	x1, x1, #0x1
  4125e4:	str	x1, [x0, #88]
  4125e8:	ldp	x19, x20, [sp, #16]
  4125ec:	ldp	x21, x22, [sp, #32]
  4125f0:	ldp	x23, x24, [sp, #48]
  4125f4:	ldr	x25, [sp, #64]
  4125f8:	ldp	x29, x30, [sp], #80
  4125fc:	ret
  412600:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  412604:	add	x3, x3, #0x848
  412608:	ldr	x1, [x3, #72]
  41260c:	cbz	x1, 412564 <wcrtomb@plt+0xd614>
  412610:	ldr	x2, [x3, #64]
  412614:	b	412564 <wcrtomb@plt+0xd614>
  412618:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  41261c:	add	x3, x3, #0x848
  412620:	ldr	x1, [x3, #56]
  412624:	cbz	x1, 412564 <wcrtomb@plt+0xd614>
  412628:	ldr	x2, [x3, #48]
  41262c:	b	412564 <wcrtomb@plt+0xd614>
  412630:	stp	x29, x30, [sp, #-32]!
  412634:	mov	x29, sp
  412638:	stp	x19, x20, [sp, #16]
  41263c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  412640:	add	x20, x20, #0x848
  412644:	mov	x19, x0
  412648:	ldr	x1, [x20, #80]
  41264c:	cbnz	x1, 412664 <wcrtomb@plt+0xd714>
  412650:	ldr	x0, [x19]
  412654:	cbnz	x0, 412684 <wcrtomb@plt+0xd734>
  412658:	ldp	x19, x20, [sp, #16]
  41265c:	ldp	x29, x30, [sp], #32
  412660:	ret
  412664:	bl	410f7c <wcrtomb@plt+0xc02c>
  412668:	ldr	x20, [x20, #80]
  41266c:	cbz	x20, 412650 <wcrtomb@plt+0xd700>
  412670:	ldp	x1, x0, [x20, #8]
  412674:	mov	x2, x19
  412678:	bl	410690 <wcrtomb@plt+0xb740>
  41267c:	ldr	x20, [x20]
  412680:	b	41266c <wcrtomb@plt+0xd71c>
  412684:	mov	x0, x19
  412688:	bl	412460 <wcrtomb@plt+0xd510>
  41268c:	bl	411e60 <wcrtomb@plt+0xcf10>
  412690:	mov	x20, x0
  412694:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  412698:	mov	x3, x19
  41269c:	mov	x1, x20
  4126a0:	ldr	x2, [x0, #720]
  4126a4:	mov	w0, #0x67                  	// #103
  4126a8:	bl	41252c <wcrtomb@plt+0xd5dc>
  4126ac:	mov	x0, x20
  4126b0:	ldp	x19, x20, [sp, #16]
  4126b4:	ldp	x29, x30, [sp], #32
  4126b8:	b	404ae0 <free@plt>
  4126bc:	str	xzr, [x0, #24]
  4126c0:	ret
  4126c4:	stp	x29, x30, [sp, #-32]!
  4126c8:	mov	x29, sp
  4126cc:	stp	x19, x20, [sp, #16]
  4126d0:	mov	x20, x1
  4126d4:	ldr	x1, [x0, #16]
  4126d8:	cbnz	x1, 412718 <wcrtomb@plt+0xd7c8>
  4126dc:	mov	x19, x0
  4126e0:	bl	410f7c <wcrtomb@plt+0xc02c>
  4126e4:	mov	x0, x20
  4126e8:	bl	404280 <strlen@plt>
  4126ec:	ldr	x1, [x19, #24]
  4126f0:	add	x1, x1, x0
  4126f4:	str	x1, [x19, #24]
  4126f8:	mov	x0, x20
  4126fc:	bl	404280 <strlen@plt>
  412700:	mov	x2, x0
  412704:	mov	x1, x20
  412708:	mov	x0, x19
  41270c:	ldp	x19, x20, [sp, #16]
  412710:	ldp	x29, x30, [sp], #32
  412714:	b	4103e8 <wcrtomb@plt+0xb498>
  412718:	ldp	x19, x20, [sp, #16]
  41271c:	ldp	x29, x30, [sp], #32
  412720:	ret
  412724:	stp	x29, x30, [sp, #-96]!
  412728:	mov	x29, sp
  41272c:	stp	x21, x22, [sp, #32]
  412730:	mov	x21, x1
  412734:	ldr	x1, [x0, #16]
  412738:	stp	x19, x20, [sp, #16]
  41273c:	stp	x23, x24, [sp, #48]
  412740:	cbnz	x1, 41283c <wcrtomb@plt+0xd8ec>
  412744:	mov	x20, x0
  412748:	bl	410f7c <wcrtomb@plt+0xc02c>
  41274c:	mov	x0, x21
  412750:	bl	404280 <strlen@plt>
  412754:	add	x24, sp, #0x5c
  412758:	mov	x19, #0x0                   	// #0
  41275c:	ldr	x22, [x20, #24]
  412760:	add	x22, x22, #0x3
  412764:	add	x22, x22, x0
  412768:	add	x0, x19, x22
  41276c:	add	x1, sp, #0x48
  412770:	bl	431400 <argp_usage@@Base+0x3f20>
  412774:	mov	x23, x0
  412778:	mov	x0, x19
  41277c:	sub	x19, x24, x23
  412780:	cmp	x0, x19
  412784:	b.ne	412768 <wcrtomb@plt+0xd818>  // b.any
  412788:	mov	x0, x21
  41278c:	bl	404280 <strlen@plt>
  412790:	ldr	x22, [x20]
  412794:	add	x19, x0, x19
  412798:	add	x19, x19, #0x2
  41279c:	ldp	x1, x0, [x22, #24]
  4127a0:	sub	x0, x0, x1
  4127a4:	cmp	x19, x0
  4127a8:	b.ls	4127b8 <wcrtomb@plt+0xd868>  // b.plast
  4127ac:	mov	x1, x19
  4127b0:	mov	x0, x22
  4127b4:	bl	437acc <_obstack_newchunk@@Base>
  4127b8:	ldr	x0, [x22, #24]
  4127bc:	mov	w1, #0xa                   	// #10
  4127c0:	add	x0, x0, x19
  4127c4:	str	x0, [x22, #24]
  4127c8:	ldr	x0, [x20, #8]
  4127cc:	add	x0, x0, x19
  4127d0:	str	x0, [x20, #8]
  4127d4:	mov	x0, x20
  4127d8:	bl	41045c <wcrtomb@plt+0xb50c>
  4127dc:	ldr	x0, [x20]
  4127e0:	ldr	x2, [x20, #24]
  4127e4:	ldr	x3, [x0, #24]
  4127e8:	mvn	x0, x2
  4127ec:	sub	x19, x0, x19
  4127f0:	add	x19, x3, x19
  4127f4:	add	x0, x3, x0
  4127f8:	mov	x1, x19
  4127fc:	bl	404210 <memmove@plt>
  412800:	mov	x1, x23
  412804:	mov	x0, x19
  412808:	bl	4044e0 <stpcpy@plt>
  41280c:	mov	w1, #0x20                  	// #32
  412810:	strb	w1, [x0], #1
  412814:	mov	x1, x21
  412818:	bl	4044e0 <stpcpy@plt>
  41281c:	mov	w1, #0x3d                  	// #61
  412820:	strb	w1, [x0]
  412824:	mov	w0, #0x1                   	// #1
  412828:	ldp	x19, x20, [sp, #16]
  41282c:	ldp	x21, x22, [sp, #32]
  412830:	ldp	x23, x24, [sp, #48]
  412834:	ldp	x29, x30, [sp], #96
  412838:	ret
  41283c:	mov	w0, #0x0                   	// #0
  412840:	b	412828 <wcrtomb@plt+0xd8d8>
  412844:	ldp	x2, x0, [x0, #24]
  412848:	add	x2, x2, x0
  41284c:	udiv	x0, x2, x1
  412850:	msub	x0, x0, x1, x2
  412854:	ret
  412858:	ldr	x3, [x0, #24]
  41285c:	ldr	x2, [x1, #24]
  412860:	cmp	x3, x2
  412864:	b.ne	41287c <wcrtomb@plt+0xd92c>  // b.any
  412868:	ldr	x2, [x0, #32]
  41286c:	ldr	x0, [x1, #32]
  412870:	cmp	x2, x0
  412874:	cset	w0, eq  // eq = none
  412878:	ret
  41287c:	mov	w0, #0x0                   	// #0
  412880:	b	412878 <wcrtomb@plt+0xd928>
  412884:	stp	x29, x30, [sp, #-48]!
  412888:	mov	x29, sp
  41288c:	ldr	w1, [x0, #8]
  412890:	stp	x19, x20, [sp, #16]
  412894:	ldr	x19, [x0, #16]
  412898:	str	x21, [sp, #32]
  41289c:	mov	x21, x0
  4128a0:	ldr	x0, [x0]
  4128a4:	cbz	w1, 4128e0 <wcrtomb@plt+0xd990>
  4128a8:	ldr	x0, [x0]
  4128ac:	add	x20, x0, x19
  4128b0:	ldrb	w0, [x0, x19]
  4128b4:	cbz	w0, 412900 <wcrtomb@plt+0xd9b0>
  4128b8:	add	x19, x19, #0x1
  4128bc:	mov	x0, x20
  4128c0:	bl	404280 <strlen@plt>
  4128c4:	add	x19, x19, x0
  4128c8:	str	x19, [x21, #16]
  4128cc:	mov	x0, x20
  4128d0:	ldp	x19, x20, [sp, #16]
  4128d4:	ldr	x21, [sp, #32]
  4128d8:	ldp	x29, x30, [sp], #48
  4128dc:	ret
  4128e0:	ldr	x1, [x0, #16]
  4128e4:	cmp	x1, x19
  4128e8:	b.ls	412900 <wcrtomb@plt+0xd9b0>  // b.plast
  4128ec:	ldr	x0, [x0, #24]
  4128f0:	ldr	x20, [x0, x19, lsl #3]
  4128f4:	add	x19, x19, #0x1
  4128f8:	sub	x20, x20, #0x1
  4128fc:	b	4128c8 <wcrtomb@plt+0xd978>
  412900:	mov	x20, #0x0                   	// #0
  412904:	b	4128cc <wcrtomb@plt+0xd97c>
  412908:	stp	x29, x30, [sp, #-32]!
  41290c:	mov	x29, sp
  412910:	str	x19, [sp, #16]
  412914:	mov	x19, x0
  412918:	ldr	x0, [x0, #80]
  41291c:	bl	404ae0 <free@plt>
  412920:	ldr	x0, [x19, #88]
  412924:	bl	404ae0 <free@plt>
  412928:	mov	x0, x19
  41292c:	ldr	x19, [sp, #16]
  412930:	ldp	x29, x30, [sp], #32
  412934:	b	404ae0 <free@plt>
  412938:	stp	x29, x30, [sp, #-32]!
  41293c:	mov	x29, sp
  412940:	str	x19, [sp, #16]
  412944:	mov	x19, x0
  412948:	ldr	x0, [x0, #24]
  41294c:	bl	404ae0 <free@plt>
  412950:	mov	x0, x19
  412954:	ldr	x19, [sp, #16]
  412958:	ldp	x29, x30, [sp], #32
  41295c:	b	404ae0 <free@plt>
  412960:	stp	x29, x30, [sp, #-64]!
  412964:	mov	x29, sp
  412968:	stp	x19, x20, [sp, #16]
  41296c:	mov	x20, x1
  412970:	stp	x21, x22, [sp, #32]
  412974:	str	x23, [sp, #48]
  412978:	mov	x23, x0
  41297c:	bl	404280 <strlen@plt>
  412980:	mov	x21, x0
  412984:	mov	x0, x20
  412988:	bl	404280 <strlen@plt>
  41298c:	mov	x22, x0
  412990:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  412994:	ldr	x19, [x0, #2224]
  412998:	cbnz	x19, 4129b0 <wcrtomb@plt+0xda60>
  41299c:	ldp	x19, x20, [sp, #16]
  4129a0:	ldp	x21, x22, [sp, #32]
  4129a4:	ldr	x23, [sp, #48]
  4129a8:	ldp	x29, x30, [sp], #64
  4129ac:	ret
  4129b0:	add	x0, x19, #0x58
  4129b4:	mov	x4, x22
  4129b8:	mov	x3, x20
  4129bc:	mov	x2, x21
  4129c0:	mov	x1, x23
  4129c4:	bl	41809c <wcrtomb@plt+0x1314c>
  4129c8:	ldr	x19, [x19]
  4129cc:	b	412998 <wcrtomb@plt+0xda48>
  4129d0:	stp	x29, x30, [sp, #-64]!
  4129d4:	mov	x29, sp
  4129d8:	stp	x19, x20, [sp, #16]
  4129dc:	stp	x21, x22, [sp, #32]
  4129e0:	mov	x22, x0
  4129e4:	str	x23, [sp, #48]
  4129e8:	mov	x23, x1
  4129ec:	bl	404280 <strlen@plt>
  4129f0:	mov	x20, x0
  4129f4:	mov	x0, #0x60                  	// #96
  4129f8:	bl	436d44 <argp_usage@@Base+0x9864>
  4129fc:	str	xzr, [x0]
  412a00:	mov	x19, x0
  412a04:	stp	xzr, xzr, [x0, #40]
  412a08:	cmp	x20, #0x1
  412a0c:	str	wzr, [x0, #60]
  412a10:	str	xzr, [x0, #64]
  412a14:	b.ls	412a28 <wcrtomb@plt+0xdad8>  // b.plast
  412a18:	sub	x0, x20, #0x1
  412a1c:	ldrb	w1, [x22, x0]
  412a20:	cmp	w1, #0x2f
  412a24:	csel	x20, x20, x0, ne  // ne = any
  412a28:	add	x0, x20, #0x1
  412a2c:	bl	436d44 <argp_usage@@Base+0x9864>
  412a30:	mov	x21, x0
  412a34:	mov	x2, x20
  412a38:	mov	x1, x22
  412a3c:	str	x0, [x19, #88]
  412a40:	bl	404200 <memcpy@plt>
  412a44:	stp	xzr, x23, [x19, #72]
  412a48:	mov	x0, x19
  412a4c:	strb	wzr, [x21, x20]
  412a50:	ldp	x19, x20, [sp, #16]
  412a54:	ldp	x21, x22, [sp, #32]
  412a58:	ldr	x23, [sp, #48]
  412a5c:	ldp	x29, x30, [sp], #64
  412a60:	ret
  412a64:	stp	x29, x30, [sp, #-48]!
  412a68:	mov	x29, sp
  412a6c:	str	x21, [sp, #32]
  412a70:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  412a74:	add	x21, x21, #0x8b0
  412a78:	stp	x19, x20, [sp, #16]
  412a7c:	ldr	x19, [x21, #8]
  412a80:	cbz	x19, 412ac0 <wcrtomb@plt+0xdb70>
  412a84:	mov	x20, x0
  412a88:	mov	x1, x0
  412a8c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  412a90:	ldr	w0, [x0, #8]
  412a94:	bl	417fb8 <wcrtomb@plt+0x13068>
  412a98:	mov	x1, x0
  412a9c:	mov	x0, x20
  412aa0:	bl	4129d0 <wcrtomb@plt+0xda80>
  412aa4:	mov	x20, x0
  412aa8:	mov	x1, x0
  412aac:	ldr	x0, [x21, #8]
  412ab0:	bl	4302d8 <argp_usage@@Base+0x2df8>
  412ab4:	mov	x19, x0
  412ab8:	mov	x0, x20
  412abc:	bl	412908 <wcrtomb@plt+0xd9b8>
  412ac0:	mov	x0, x19
  412ac4:	ldp	x19, x20, [sp, #16]
  412ac8:	ldr	x21, [sp, #32]
  412acc:	ldp	x29, x30, [sp], #48
  412ad0:	ret
  412ad4:	stp	x29, x30, [sp, #-64]!
  412ad8:	mov	x29, sp
  412adc:	stp	x21, x22, [sp, #32]
  412ae0:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  412ae4:	add	x21, x21, #0x8b0
  412ae8:	stp	x19, x20, [sp, #16]
  412aec:	ldr	x20, [x21, #16]
  412af0:	str	x23, [sp, #48]
  412af4:	cbz	x20, 412b30 <wcrtomb@plt+0xdbe0>
  412af8:	mov	x23, x0
  412afc:	mov	x22, x1
  412b00:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  412b04:	mov	x1, #0x0                   	// #0
  412b08:	add	x0, x0, #0x41a
  412b0c:	bl	4129d0 <wcrtomb@plt+0xda80>
  412b10:	mov	x19, x0
  412b14:	mov	x1, x0
  412b18:	ldr	x0, [x21, #16]
  412b1c:	stp	x23, x22, [x19, #24]
  412b20:	bl	4302d8 <argp_usage@@Base+0x2df8>
  412b24:	mov	x20, x0
  412b28:	mov	x0, x19
  412b2c:	bl	412908 <wcrtomb@plt+0xd9b8>
  412b30:	mov	x0, x20
  412b34:	ldp	x19, x20, [sp, #16]
  412b38:	ldp	x21, x22, [sp, #32]
  412b3c:	ldr	x23, [sp, #48]
  412b40:	ldp	x29, x30, [sp], #64
  412b44:	ret
  412b48:	ldr	x0, [x0]
  412b4c:	ldr	x1, [x1]
  412b50:	b	404a30 <strcmp@plt>
  412b54:	stp	x29, x30, [sp, #-16]!
  412b58:	mov	x29, sp
  412b5c:	ldr	x0, [x0, #80]
  412b60:	ldr	x1, [x1, #80]
  412b64:	bl	404a30 <strcmp@plt>
  412b68:	cmp	w0, #0x0
  412b6c:	cset	w0, eq  // eq = none
  412b70:	ldp	x29, x30, [sp], #16
  412b74:	ret
  412b78:	stp	x29, x30, [sp, #-32]!
  412b7c:	mov	x29, sp
  412b80:	str	x1, [sp, #24]
  412b84:	cbnz	x0, 412b94 <wcrtomb@plt+0xdc44>
  412b88:	mov	x0, #0x0                   	// #0
  412b8c:	ldp	x29, x30, [sp], #32
  412b90:	ret
  412b94:	ldp	x2, x1, [x0, #16]
  412b98:	adrp	x4, 412000 <wcrtomb@plt+0xd0b0>
  412b9c:	add	x0, sp, #0x18
  412ba0:	add	x4, x4, #0xb48
  412ba4:	mov	x3, #0x8                   	// #8
  412ba8:	bl	4047d0 <bsearch@plt>
  412bac:	cbz	x0, 412b88 <wcrtomb@plt+0xdc38>
  412bb0:	ldr	x0, [x0]
  412bb4:	sub	x0, x0, #0x1
  412bb8:	b	412b8c <wcrtomb@plt+0xdc3c>
  412bbc:	stp	x29, x30, [sp, #-80]!
  412bc0:	mov	x29, sp
  412bc4:	stp	x19, x20, [sp, #16]
  412bc8:	mov	x20, x1
  412bcc:	mov	x19, x0
  412bd0:	stp	x21, x22, [sp, #32]
  412bd4:	mov	x22, x0
  412bd8:	mov	x21, #0x0                   	// #0
  412bdc:	stp	x23, x24, [sp, #48]
  412be0:	mov	x23, #0x1                   	// #1
  412be4:	stp	x25, x26, [sp, #64]
  412be8:	mov	x25, #0x0                   	// #0
  412bec:	ldrb	w26, [x19]
  412bf0:	cbnz	w26, 412c5c <wcrtomb@plt+0xdd0c>
  412bf4:	add	x0, x23, #0x20
  412bf8:	bl	436d44 <argp_usage@@Base+0x9864>
  412bfc:	mov	x19, x0
  412c00:	add	x0, x0, #0x20
  412c04:	mov	x2, x23
  412c08:	mov	x1, x22
  412c0c:	mov	x23, #0x0                   	// #0
  412c10:	str	x0, [x19]
  412c14:	bl	404200 <memcpy@plt>
  412c18:	stp	x25, x21, [x19, #8]
  412c1c:	add	x0, x21, #0x1
  412c20:	mov	x1, #0x8                   	// #8
  412c24:	bl	436eac <argp_usage@@Base+0x99cc>
  412c28:	ldr	x22, [x19]
  412c2c:	mov	x21, x0
  412c30:	str	x0, [x19, #24]
  412c34:	ldrb	w1, [x22]
  412c38:	cbnz	w1, 412c90 <wcrtomb@plt+0xdd40>
  412c3c:	str	xzr, [x21, x23, lsl #3]
  412c40:	mov	x0, x19
  412c44:	ldp	x19, x20, [sp, #16]
  412c48:	ldp	x21, x22, [sp, #32]
  412c4c:	ldp	x23, x24, [sp, #48]
  412c50:	ldp	x25, x26, [sp, #64]
  412c54:	ldp	x29, x30, [sp], #80
  412c58:	ret
  412c5c:	mov	x0, x19
  412c60:	bl	404280 <strlen@plt>
  412c64:	add	x24, x0, #0x1
  412c68:	add	x23, x23, x24
  412c6c:	cbz	x20, 412c80 <wcrtomb@plt+0xdd30>
  412c70:	mov	w1, w26
  412c74:	mov	x0, x20
  412c78:	bl	404b90 <strchr@plt>
  412c7c:	cbz	x0, 412c84 <wcrtomb@plt+0xdd34>
  412c80:	add	x21, x21, #0x1
  412c84:	add	x25, x25, #0x1
  412c88:	add	x19, x19, x24
  412c8c:	b	412bec <wcrtomb@plt+0xdc9c>
  412c90:	cbz	x20, 412ca0 <wcrtomb@plt+0xdd50>
  412c94:	mov	x0, x20
  412c98:	bl	404b90 <strchr@plt>
  412c9c:	cbz	x0, 412cac <wcrtomb@plt+0xdd5c>
  412ca0:	add	x0, x22, #0x1
  412ca4:	str	x0, [x21, x23, lsl #3]
  412ca8:	add	x23, x23, #0x1
  412cac:	mov	x0, x22
  412cb0:	bl	404280 <strlen@plt>
  412cb4:	add	x0, x0, #0x1
  412cb8:	add	x22, x22, x0
  412cbc:	b	412c34 <wcrtomb@plt+0xdce4>
  412cc0:	ldr	x0, [x0, #80]
  412cc4:	b	4304b4 <argp_usage@@Base+0x2fd4>
  412cc8:	stp	x29, x30, [sp, #-48]!
  412ccc:	mov	x29, sp
  412cd0:	stp	x19, x20, [sp, #16]
  412cd4:	mov	x19, x0
  412cd8:	mov	x20, x2
  412cdc:	stp	x21, x22, [sp, #32]
  412ce0:	mov	x21, x1
  412ce4:	ldrb	w0, [x1]
  412ce8:	cbz	w0, 412d04 <wcrtomb@plt+0xddb4>
  412cec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  412cf0:	mov	w1, #0x0                   	// #0
  412cf4:	ldrb	w2, [x0, #960]
  412cf8:	mov	x0, x21
  412cfc:	bl	425478 <wcrtomb@plt+0x20528>
  412d00:	mov	x21, x0
  412d04:	ldp	x0, x1, [x19, #24]
  412d08:	cmp	x1, x0
  412d0c:	b.ne	412d1c <wcrtomb@plt+0xddcc>  // b.any
  412d10:	mov	x0, x19
  412d14:	mov	x1, #0x1                   	// #1
  412d18:	bl	437acc <_obstack_newchunk@@Base>
  412d1c:	ldr	x0, [x19, #24]
  412d20:	add	x1, x0, #0x1
  412d24:	str	x1, [x19, #24]
  412d28:	mov	w1, #0x52                  	// #82
  412d2c:	strb	w1, [x0]
  412d30:	mov	x0, x21
  412d34:	bl	404280 <strlen@plt>
  412d38:	add	x22, x0, #0x1
  412d3c:	ldp	x1, x0, [x19, #24]
  412d40:	sub	x0, x0, x1
  412d44:	cmp	x22, x0
  412d48:	b.ls	412d58 <wcrtomb@plt+0xde08>  // b.plast
  412d4c:	mov	x1, x22
  412d50:	mov	x0, x19
  412d54:	bl	437acc <_obstack_newchunk@@Base>
  412d58:	ldr	x0, [x19, #24]
  412d5c:	mov	x2, x22
  412d60:	mov	x1, x21
  412d64:	bl	404200 <memcpy@plt>
  412d68:	ldr	x0, [x19, #24]
  412d6c:	add	x0, x0, x22
  412d70:	str	x0, [x19, #24]
  412d74:	ldrb	w0, [x20]
  412d78:	cbz	w0, 412d94 <wcrtomb@plt+0xde44>
  412d7c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  412d80:	mov	w1, #0x0                   	// #0
  412d84:	ldrb	w2, [x0, #960]
  412d88:	mov	x0, x20
  412d8c:	bl	425478 <wcrtomb@plt+0x20528>
  412d90:	mov	x20, x0
  412d94:	ldp	x0, x1, [x19, #24]
  412d98:	cmp	x1, x0
  412d9c:	b.ne	412dac <wcrtomb@plt+0xde5c>  // b.any
  412da0:	mov	x0, x19
  412da4:	mov	x1, #0x1                   	// #1
  412da8:	bl	437acc <_obstack_newchunk@@Base>
  412dac:	ldr	x0, [x19, #24]
  412db0:	add	x1, x0, #0x1
  412db4:	str	x1, [x19, #24]
  412db8:	mov	w1, #0x54                  	// #84
  412dbc:	strb	w1, [x0]
  412dc0:	mov	x0, x20
  412dc4:	bl	404280 <strlen@plt>
  412dc8:	add	x21, x0, #0x1
  412dcc:	ldp	x1, x0, [x19, #24]
  412dd0:	sub	x0, x0, x1
  412dd4:	cmp	x21, x0
  412dd8:	b.ls	412de8 <wcrtomb@plt+0xde98>  // b.plast
  412ddc:	mov	x1, x21
  412de0:	mov	x0, x19
  412de4:	bl	437acc <_obstack_newchunk@@Base>
  412de8:	ldr	x0, [x19, #24]
  412dec:	mov	x2, x21
  412df0:	mov	x1, x20
  412df4:	bl	404200 <memcpy@plt>
  412df8:	ldr	x0, [x19, #24]
  412dfc:	add	x0, x0, x21
  412e00:	ldp	x21, x22, [sp, #32]
  412e04:	str	x0, [x19, #24]
  412e08:	ldp	x19, x20, [sp, #16]
  412e0c:	ldp	x29, x30, [sp], #48
  412e10:	ret
  412e14:	stp	x29, x30, [sp, #-64]!
  412e18:	mov	x29, sp
  412e1c:	stp	x19, x20, [sp, #16]
  412e20:	mov	x19, x1
  412e24:	stp	x21, x22, [sp, #32]
  412e28:	mov	x21, x2
  412e2c:	mov	x22, #0x0                   	// #0
  412e30:	str	x23, [sp, #48]
  412e34:	mov	x23, x0
  412e38:	bl	404890 <getc_unlocked@plt>
  412e3c:	mov	w20, w0
  412e40:	add	w2, w20, #0x1
  412e44:	cmp	w2, #0x1
  412e48:	ldp	x0, x1, [x19, #24]
  412e4c:	b.hi	412e90 <wcrtomb@plt+0xdf40>  // b.pmore
  412e50:	cmp	x1, x0
  412e54:	b.ne	412e64 <wcrtomb@plt+0xdf14>  // b.any
  412e58:	mov	x0, x19
  412e5c:	mov	x1, #0x1                   	// #1
  412e60:	bl	437acc <_obstack_newchunk@@Base>
  412e64:	ldr	x0, [x19, #24]
  412e68:	add	x1, x0, #0x1
  412e6c:	str	x1, [x19, #24]
  412e70:	strb	wzr, [x0]
  412e74:	mov	w0, w20
  412e78:	ldp	x19, x20, [sp, #16]
  412e7c:	ldr	x23, [sp, #48]
  412e80:	str	x22, [x21]
  412e84:	ldp	x21, x22, [sp, #32]
  412e88:	ldp	x29, x30, [sp], #64
  412e8c:	ret
  412e90:	cmp	x1, x0
  412e94:	b.ne	412ea4 <wcrtomb@plt+0xdf54>  // b.any
  412e98:	mov	x0, x19
  412e9c:	mov	x1, #0x1                   	// #1
  412ea0:	bl	437acc <_obstack_newchunk@@Base>
  412ea4:	ldr	x0, [x19, #24]
  412ea8:	add	x22, x22, #0x1
  412eac:	add	x1, x0, #0x1
  412eb0:	str	x1, [x19, #24]
  412eb4:	strb	w20, [x0]
  412eb8:	mov	x0, x23
  412ebc:	bl	404890 <getc_unlocked@plt>
  412ec0:	mov	w20, w0
  412ec4:	b	412e40 <wcrtomb@plt+0xdef0>
  412ec8:	sub	sp, sp, #0xe0
  412ecc:	stp	x29, x30, [sp, #16]
  412ed0:	add	x29, sp, #0x10
  412ed4:	stp	x19, x20, [sp, #32]
  412ed8:	mov	x20, x0
  412edc:	stp	x21, x22, [sp, #48]
  412ee0:	mov	x22, x1
  412ee4:	add	x21, sp, #0x80
  412ee8:	stp	x23, x24, [sp, #64]
  412eec:	mov	x24, x3
  412ef0:	mov	x23, #0x0                   	// #0
  412ef4:	stp	x25, x26, [sp, #80]
  412ef8:	mov	x25, x2
  412efc:	mov	x26, x4
  412f00:	stp	x27, x28, [sp, #96]
  412f04:	bl	404890 <getc_unlocked@plt>
  412f08:	cmp	w0, #0x2d
  412f0c:	mov	w19, w0
  412f10:	cset	w1, eq  // eq = none
  412f14:	cmp	w23, #0x0
  412f18:	csel	w27, w1, wzr, eq  // eq = none
  412f1c:	cbnz	w27, 412f50 <wcrtomb@plt+0xe000>
  412f20:	sub	w0, w19, #0x30
  412f24:	cmp	w0, #0x9
  412f28:	b.ls	412f50 <wcrtomb@plt+0xe000>  // b.plast
  412f2c:	strb	wzr, [x21, w23, sxtw]
  412f30:	cmp	w19, #0x0
  412f34:	b.ge	413040 <wcrtomb@plt+0xe0f0>  // b.tcont
  412f38:	mov	x0, x20
  412f3c:	bl	4043c0 <ferror_unlocked@plt>
  412f40:	cbz	w0, 412fe8 <wcrtomb@plt+0xe098>
  412f44:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  412f48:	ldr	x0, [x0, #840]
  412f4c:	bl	424ff8 <wcrtomb@plt+0x200a8>
  412f50:	strb	w19, [x21, x23]
  412f54:	add	x23, x23, #0x1
  412f58:	cmp	x23, #0x15
  412f5c:	b.ne	412fd0 <wcrtomb@plt+0xe080>  // b.any
  412f60:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  412f64:	ldr	x0, [x0, #1016]
  412f68:	cbz	x0, 412f70 <wcrtomb@plt+0xe020>
  412f6c:	blr	x0
  412f70:	mov	w2, #0x5                   	// #5
  412f74:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  412f78:	mov	x0, #0x0                   	// #0
  412f7c:	add	x1, x1, #0x590
  412f80:	bl	404d00 <dcgettext@plt>
  412f84:	mov	x19, x0
  412f88:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  412f8c:	ldr	x0, [x0, #840]
  412f90:	bl	436084 <argp_usage@@Base+0x8ba4>
  412f94:	mov	x23, x0
  412f98:	mov	x0, x20
  412f9c:	bl	404c20 <ftello@plt>
  412fa0:	add	x1, sp, #0x98
  412fa4:	bl	4313a0 <argp_usage@@Base+0x3ec0>
  412fa8:	mov	x7, x21
  412fac:	mov	x4, x0
  412fb0:	mov	x5, x22
  412fb4:	mov	x3, x23
  412fb8:	mov	x2, x19
  412fbc:	mov	w6, #0x15                  	// #21
  412fc0:	mov	w1, #0x0                   	// #0
  412fc4:	mov	w0, #0x0                   	// #0
  412fc8:	bl	4042e0 <error@plt>
  412fcc:	bl	40d47c <wcrtomb@plt+0x852c>
  412fd0:	mov	x0, x20
  412fd4:	str	w1, [sp, #124]
  412fd8:	bl	404890 <getc_unlocked@plt>
  412fdc:	mov	w19, w0
  412fe0:	ldr	w1, [sp, #124]
  412fe4:	b	412f14 <wcrtomb@plt+0xdfc4>
  412fe8:	cbz	w23, 4131d8 <wcrtomb@plt+0xe288>
  412fec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  412ff0:	ldr	x0, [x0, #1016]
  412ff4:	cbz	x0, 412ffc <wcrtomb@plt+0xe0ac>
  412ff8:	blr	x0
  412ffc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413000:	ldr	x0, [x0, #840]
  413004:	bl	436084 <argp_usage@@Base+0x8ba4>
  413008:	mov	x19, x0
  41300c:	mov	w2, #0x5                   	// #5
  413010:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  413014:	mov	x0, #0x0                   	// #0
  413018:	add	x1, x1, #0x5b1
  41301c:	bl	404d00 <dcgettext@plt>
  413020:	mov	x4, x0
  413024:	mov	x3, x19
  413028:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  41302c:	mov	w1, #0x0                   	// #0
  413030:	add	x2, x2, #0xe6f
  413034:	mov	w0, #0x0                   	// #0
  413038:	bl	4042e0 <error@plt>
  41303c:	b	412fcc <wcrtomb@plt+0xe07c>
  413040:	b.eq	4130b4 <wcrtomb@plt+0xe164>  // b.none
  413044:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413048:	ldr	x0, [x0, #1016]
  41304c:	cbz	x0, 413054 <wcrtomb@plt+0xe104>
  413050:	blr	x0
  413054:	mov	w2, #0x5                   	// #5
  413058:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41305c:	mov	x0, #0x0                   	// #0
  413060:	add	x1, x1, #0x5d1
  413064:	bl	404d00 <dcgettext@plt>
  413068:	mov	x23, x0
  41306c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413070:	ldr	x0, [x0, #840]
  413074:	bl	436084 <argp_usage@@Base+0x8ba4>
  413078:	mov	x24, x0
  41307c:	mov	x0, x20
  413080:	bl	404c20 <ftello@plt>
  413084:	add	x1, sp, #0x98
  413088:	bl	4313a0 <argp_usage@@Base+0x3ec0>
  41308c:	mov	w7, w19
  413090:	mov	x4, x0
  413094:	mov	x6, x21
  413098:	mov	x5, x22
  41309c:	mov	x3, x24
  4130a0:	mov	x2, x23
  4130a4:	mov	w1, #0x0                   	// #0
  4130a8:	mov	w0, #0x0                   	// #0
  4130ac:	bl	4042e0 <error@plt>
  4130b0:	b	412fcc <wcrtomb@plt+0xe07c>
  4130b4:	mov	x3, x24
  4130b8:	mov	x2, x25
  4130bc:	mov	x1, #0x0                   	// #0
  4130c0:	mov	x0, x21
  4130c4:	bl	418188 <wcrtomb@plt+0x13238>
  4130c8:	str	x0, [x26]
  4130cc:	mov	w27, #0x1                   	// #1
  4130d0:	bl	404e10 <__errno_location@plt>
  4130d4:	ldr	w19, [x0]
  4130d8:	cbz	w19, 4131d8 <wcrtomb@plt+0xe288>
  4130dc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4130e0:	cmp	w19, #0x22
  4130e4:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  4130e8:	ldr	x0, [x0, #1016]
  4130ec:	b.ne	413178 <wcrtomb@plt+0xe228>  // b.any
  4130f0:	cbz	x0, 4130f8 <wcrtomb@plt+0xe1a8>
  4130f4:	blr	x0
  4130f8:	mov	w2, #0x5                   	// #5
  4130fc:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  413100:	mov	x0, #0x0                   	// #0
  413104:	add	x1, x1, #0x604
  413108:	bl	404d00 <dcgettext@plt>
  41310c:	mov	x19, x0
  413110:	ldr	x0, [x26, #840]
  413114:	bl	436084 <argp_usage@@Base+0x8ba4>
  413118:	mov	x23, x0
  41311c:	mov	x0, x20
  413120:	bl	404c20 <ftello@plt>
  413124:	add	x1, sp, #0x98
  413128:	bl	4313a0 <argp_usage@@Base+0x3ec0>
  41312c:	add	x1, sp, #0xb0
  413130:	mov	x20, x0
  413134:	mov	x0, x25
  413138:	bl	431340 <argp_usage@@Base+0x3e60>
  41313c:	add	x1, sp, #0xc8
  413140:	mov	x25, x0
  413144:	mov	x0, x24
  413148:	bl	431400 <argp_usage@@Base+0x3f20>
  41314c:	str	x21, [sp]
  413150:	mov	x6, x0
  413154:	mov	x7, x22
  413158:	mov	x5, x25
  41315c:	mov	x4, x20
  413160:	mov	x3, x23
  413164:	mov	x2, x19
  413168:	mov	w1, #0x22                  	// #34
  41316c:	mov	w0, #0x0                   	// #0
  413170:	bl	4042e0 <error@plt>
  413174:	b	412fcc <wcrtomb@plt+0xe07c>
  413178:	cbz	x0, 413180 <wcrtomb@plt+0xe230>
  41317c:	blr	x0
  413180:	mov	w2, #0x5                   	// #5
  413184:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  413188:	mov	x0, #0x0                   	// #0
  41318c:	add	x1, x1, #0x62d
  413190:	bl	404d00 <dcgettext@plt>
  413194:	mov	x23, x0
  413198:	ldr	x0, [x26, #840]
  41319c:	bl	436084 <argp_usage@@Base+0x8ba4>
  4131a0:	mov	x24, x0
  4131a4:	mov	x0, x20
  4131a8:	bl	404c20 <ftello@plt>
  4131ac:	add	x1, sp, #0x98
  4131b0:	bl	4313a0 <argp_usage@@Base+0x3ec0>
  4131b4:	mov	x6, x21
  4131b8:	mov	x4, x0
  4131bc:	mov	x5, x22
  4131c0:	mov	x3, x24
  4131c4:	mov	x2, x23
  4131c8:	mov	w1, w19
  4131cc:	mov	w0, #0x0                   	// #0
  4131d0:	bl	4042e0 <error@plt>
  4131d4:	b	412fcc <wcrtomb@plt+0xe07c>
  4131d8:	mov	w0, w27
  4131dc:	ldp	x29, x30, [sp, #16]
  4131e0:	ldp	x19, x20, [sp, #32]
  4131e4:	ldp	x21, x22, [sp, #48]
  4131e8:	ldp	x23, x24, [sp, #64]
  4131ec:	ldp	x25, x26, [sp, #80]
  4131f0:	ldp	x27, x28, [sp, #96]
  4131f4:	add	sp, sp, #0xe0
  4131f8:	ret
  4131fc:	stp	x29, x30, [sp, #-48]!
  413200:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  413204:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  413208:	mov	x29, sp
  41320c:	add	x4, sp, #0x20
  413210:	stp	x19, x20, [sp, #16]
  413214:	mov	x20, x0
  413218:	mov	x19, x1
  41321c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  413220:	add	x1, x1, #0xa52
  413224:	bl	412ec8 <wcrtomb@plt+0xdf78>
  413228:	tst	w0, #0xff
  41322c:	b.eq	413274 <wcrtomb@plt+0xe324>  // b.none
  413230:	mov	x3, #0xc9ff                	// #51711
  413234:	add	x4, sp, #0x28
  413238:	mov	x0, x20
  41323c:	movk	x3, #0x3b9a, lsl #16
  413240:	mov	x2, #0x0                   	// #0
  413244:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  413248:	add	x1, x1, #0xa60
  41324c:	bl	412ec8 <wcrtomb@plt+0xdf78>
  413250:	tst	w0, #0xff
  413254:	b.eq	413274 <wcrtomb@plt+0xe324>  // b.none
  413258:	ldr	x0, [sp, #32]
  41325c:	str	x0, [x19]
  413260:	ldr	x0, [sp, #40]
  413264:	str	x0, [x19, #8]
  413268:	ldp	x19, x20, [sp, #16]
  41326c:	ldp	x29, x30, [sp], #48
  413270:	ret
  413274:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413278:	ldr	x0, [x0, #1016]
  41327c:	cbz	x0, 413284 <wcrtomb@plt+0xe334>
  413280:	blr	x0
  413284:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413288:	ldr	x0, [x0, #840]
  41328c:	bl	436084 <argp_usage@@Base+0x8ba4>
  413290:	mov	x19, x0
  413294:	mov	w2, #0x5                   	// #5
  413298:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41329c:	mov	x0, #0x0                   	// #0
  4132a0:	add	x1, x1, #0x5b1
  4132a4:	bl	404d00 <dcgettext@plt>
  4132a8:	mov	x4, x0
  4132ac:	mov	x3, x19
  4132b0:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  4132b4:	add	x2, x2, #0xe6f
  4132b8:	mov	w1, #0x0                   	// #0
  4132bc:	mov	w0, #0x0                   	// #0
  4132c0:	bl	4042e0 <error@plt>
  4132c4:	bl	40d47c <wcrtomb@plt+0x852c>
  4132c8:	stp	x29, x30, [sp, #-96]!
  4132cc:	mov	x29, sp
  4132d0:	stp	x19, x20, [sp, #16]
  4132d4:	mov	x19, x0
  4132d8:	stp	x25, x26, [sp, #64]
  4132dc:	mov	x25, x1
  4132e0:	mov	x1, x0
  4132e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4132e8:	and	w26, w6, #0xff
  4132ec:	stp	x21, x22, [sp, #32]
  4132f0:	mov	x22, x4
  4132f4:	ldr	w0, [x0, #8]
  4132f8:	mov	x21, x7
  4132fc:	stp	x23, x24, [sp, #48]
  413300:	mov	x24, x2
  413304:	mov	x23, x3
  413308:	str	x27, [sp, #80]
  41330c:	and	w27, w5, #0xff
  413310:	bl	417fb8 <wcrtomb@plt+0x13068>
  413314:	mov	x1, x0
  413318:	mov	x0, x19
  41331c:	bl	4129d0 <wcrtomb@plt+0xda80>
  413320:	mov	x19, x0
  413324:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  413328:	add	x20, x0, #0x8b0
  41332c:	ldr	x1, [x20, #24]
  413330:	cbz	x1, 4133a0 <wcrtomb@plt+0xe450>
  413334:	str	x19, [x1]
  413338:	mov	w0, #0x1                   	// #1
  41333c:	stp	x25, x24, [x19, #8]
  413340:	stp	x23, x22, [x19, #24]
  413344:	str	x19, [x20, #24]
  413348:	str	w0, [x19, #56]
  41334c:	cbz	w27, 41335c <wcrtomb@plt+0xe40c>
  413350:	ldr	w0, [x19, #60]
  413354:	orr	w0, w0, #0x2
  413358:	str	w0, [x19, #60]
  41335c:	cbz	w26, 41336c <wcrtomb@plt+0xe41c>
  413360:	ldr	w0, [x19, #60]
  413364:	orr	w0, w0, #0x4
  413368:	str	w0, [x19, #60]
  41336c:	cbz	x21, 4133a8 <wcrtomb@plt+0xe458>
  413370:	mov	x0, x21
  413374:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  413378:	add	x1, x1, #0x640
  41337c:	bl	412bbc <wcrtomb@plt+0xdc6c>
  413380:	str	x0, [x19, #40]
  413384:	ldr	x0, [x20, #8]
  413388:	cbz	x0, 4133b0 <wcrtomb@plt+0xe460>
  41338c:	ldr	x0, [x20, #8]
  413390:	mov	x1, x19
  413394:	bl	4309b4 <argp_usage@@Base+0x34d4>
  413398:	cbnz	x0, 4133dc <wcrtomb@plt+0xe48c>
  41339c:	bl	40d4bc <wcrtomb@plt+0x856c>
  4133a0:	str	x19, [x0, #2224]
  4133a4:	b	413338 <wcrtomb@plt+0xe3e8>
  4133a8:	str	xzr, [x19, #40]
  4133ac:	b	413384 <wcrtomb@plt+0xe434>
  4133b0:	mov	x4, #0x0                   	// #0
  4133b4:	adrp	x3, 412000 <wcrtomb@plt+0xd0b0>
  4133b8:	adrp	x2, 412000 <wcrtomb@plt+0xd0b0>
  4133bc:	add	x3, x3, #0xb54
  4133c0:	add	x2, x2, #0xcc0
  4133c4:	mov	x1, #0x0                   	// #0
  4133c8:	mov	x0, #0x0                   	// #0
  4133cc:	bl	430500 <argp_usage@@Base+0x3020>
  4133d0:	str	x0, [x20, #8]
  4133d4:	cbnz	x0, 41338c <wcrtomb@plt+0xe43c>
  4133d8:	b	41339c <wcrtomb@plt+0xe44c>
  4133dc:	ldr	x0, [x20, #16]
  4133e0:	cbz	x0, 413414 <wcrtomb@plt+0xe4c4>
  4133e4:	ldr	x0, [x20, #16]
  4133e8:	mov	x1, x19
  4133ec:	bl	4309b4 <argp_usage@@Base+0x34d4>
  4133f0:	cbz	x0, 41339c <wcrtomb@plt+0xe44c>
  4133f4:	mov	x0, x19
  4133f8:	ldp	x19, x20, [sp, #16]
  4133fc:	ldp	x21, x22, [sp, #32]
  413400:	ldp	x23, x24, [sp, #48]
  413404:	ldp	x25, x26, [sp, #64]
  413408:	ldr	x27, [sp, #80]
  41340c:	ldp	x29, x30, [sp], #96
  413410:	ret
  413414:	mov	x4, #0x0                   	// #0
  413418:	adrp	x3, 412000 <wcrtomb@plt+0xd0b0>
  41341c:	adrp	x2, 412000 <wcrtomb@plt+0xd0b0>
  413420:	add	x3, x3, #0x858
  413424:	add	x2, x2, #0x844
  413428:	mov	x1, #0x0                   	// #0
  41342c:	mov	x0, #0x0                   	// #0
  413430:	bl	430500 <argp_usage@@Base+0x3020>
  413434:	str	x0, [x20, #16]
  413438:	cbnz	x0, 4133e4 <wcrtomb@plt+0xe494>
  41343c:	b	41339c <wcrtomb@plt+0xe44c>
  413440:	stp	x29, x30, [sp, #-112]!
  413444:	mov	x29, sp
  413448:	stp	x19, x20, [sp, #16]
  41344c:	mov	x20, x1
  413450:	stp	x21, x22, [sp, #32]
  413454:	mov	x21, x0
  413458:	mov	w22, w2
  41345c:	stp	x23, x24, [sp, #48]
  413460:	mov	x24, x3
  413464:	stp	x25, x26, [sp, #64]
  413468:	add	x25, x1, #0x58
  41346c:	ldr	x26, [x1, #88]
  413470:	str	x27, [sp, #80]
  413474:	bl	412a64 <wcrtomb@plt+0xdb14>
  413478:	cbz	x0, 4136fc <wcrtomb@plt+0xe7ac>
  41347c:	mov	x19, x0
  413480:	ldr	w0, [x0, #60]
  413484:	tbz	w0, #0, 413498 <wcrtomb@plt+0xe548>
  413488:	tbz	w22, #5, 4134a8 <wcrtomb@plt+0xe558>
  41348c:	mov	x1, x21
  413490:	add	x0, x19, #0x58
  413494:	bl	417c2c <wcrtomb@plt+0x12cdc>
  413498:	ldr	x0, [x19, #88]
  41349c:	mov	x1, x21
  4134a0:	bl	404a30 <strcmp@plt>
  4134a4:	cbz	w0, 4134d0 <wcrtomb@plt+0xe580>
  4134a8:	mov	w0, #0x4e                  	// #78
  4134ac:	strb	w0, [x24]
  4134b0:	mov	x0, x19
  4134b4:	ldp	x19, x20, [sp, #16]
  4134b8:	ldp	x21, x22, [sp, #32]
  4134bc:	ldp	x23, x24, [sp, #48]
  4134c0:	ldp	x25, x26, [sp, #64]
  4134c4:	ldr	x27, [sp, #80]
  4134c8:	ldp	x29, x30, [sp], #112
  4134cc:	ret
  4134d0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4134d4:	ldrb	w0, [x0, #40]
  4134d8:	cbz	w0, 4134f8 <wcrtomb@plt+0xe5a8>
  4134dc:	ldr	w0, [x19, #60]
  4134e0:	tbz	w0, #1, 4134e8 <wcrtomb@plt+0xe598>
  4134e4:	tbnz	x26, #63, 4134f8 <wcrtomb@plt+0xe5a8>
  4134e8:	ldr	x1, [x19, #24]
  4134ec:	ldr	x0, [x20, #88]
  4134f0:	cmp	x1, x0
  4134f4:	b.ne	413508 <wcrtomb@plt+0xe5b8>  // b.any
  4134f8:	ldr	x0, [x25, #8]
  4134fc:	ldr	x1, [x19, #32]
  413500:	cmp	x1, x0
  413504:	b.eq	4136ec <wcrtomb@plt+0xe79c>  // b.none
  413508:	ldr	x1, [x25, #8]
  41350c:	ldr	x0, [x20, #88]
  413510:	bl	412ad4 <wcrtomb@plt+0xdb84>
  413514:	mov	x23, x0
  413518:	cbz	x0, 4136cc <wcrtomb@plt+0xe77c>
  41351c:	ldr	x0, [x0, #88]
  413520:	mov	x1, x21
  413524:	bl	404a30 <strcmp@plt>
  413528:	cbz	w0, 4135ac <wcrtomb@plt+0xe65c>
  41352c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  413530:	ldr	w0, [x0, #480]
  413534:	tbz	w0, #13, 413590 <wcrtomb@plt+0xe640>
  413538:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41353c:	ldr	x0, [x0, #1016]
  413540:	cbz	x0, 413548 <wcrtomb@plt+0xe5f8>
  413544:	blr	x0
  413548:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41354c:	add	x1, x1, #0x644
  413550:	mov	w2, #0x5                   	// #5
  413554:	mov	x0, #0x0                   	// #0
  413558:	bl	404d00 <dcgettext@plt>
  41355c:	mov	x25, x0
  413560:	mov	x0, x21
  413564:	bl	436084 <argp_usage@@Base+0x8ba4>
  413568:	ldr	x1, [x23, #88]
  41356c:	mov	x27, x0
  413570:	mov	w0, #0x1                   	// #1
  413574:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  413578:	mov	x4, x0
  41357c:	mov	x3, x27
  413580:	mov	x2, x25
  413584:	mov	w1, #0x0                   	// #0
  413588:	mov	w0, #0x0                   	// #0
  41358c:	bl	4042e0 <error@plt>
  413590:	ldr	w0, [x19, #60]
  413594:	mov	x1, x21
  413598:	str	x23, [x19, #64]
  41359c:	orr	w0, w0, #0x10
  4135a0:	str	w0, [x19, #60]
  4135a4:	ldr	x0, [x23, #88]
  4135a8:	bl	412960 <wcrtomb@plt+0xda10>
  4135ac:	mov	w0, #0x1                   	// #1
  4135b0:	str	w0, [x19, #56]
  4135b4:	mov	w0, #0x0                   	// #0
  4135b8:	tbz	x26, #63, 4135c8 <wcrtomb@plt+0xe678>
  4135bc:	ldr	w1, [x19, #60]
  4135c0:	orr	w1, w1, #0x2
  4135c4:	str	w1, [x19, #60]
  4135c8:	ldr	w1, [x19, #60]
  4135cc:	orr	w1, w1, #0x4
  4135d0:	str	w1, [x19, #60]
  4135d4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4135d8:	ldrb	w1, [x1, #93]
  4135dc:	cbz	w1, 41387c <wcrtomb@plt+0xe92c>
  4135e0:	ldr	x1, [x20, #392]
  4135e4:	cbz	x1, 41387c <wcrtomb@plt+0xe92c>
  4135e8:	ldr	x1, [x1, #88]
  4135ec:	ldr	x2, [x20, #88]
  4135f0:	cmp	x2, x1
  4135f4:	b.eq	41387c <wcrtomb@plt+0xe92c>  // b.none
  4135f8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4135fc:	ldr	w0, [x0, #480]
  413600:	tbz	w0, #18, 413648 <wcrtomb@plt+0xe6f8>
  413604:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413608:	ldr	x0, [x0, #1016]
  41360c:	cbz	x0, 413614 <wcrtomb@plt+0xe6c4>
  413610:	blr	x0
  413614:	mov	w2, #0x5                   	// #5
  413618:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41361c:	mov	x0, #0x0                   	// #0
  413620:	add	x1, x1, #0x680
  413624:	bl	404d00 <dcgettext@plt>
  413628:	mov	x22, x0
  41362c:	ldr	x0, [x19, #88]
  413630:	bl	436084 <argp_usage@@Base+0x8ba4>
  413634:	mov	x3, x0
  413638:	mov	x2, x22
  41363c:	mov	w1, #0x0                   	// #0
  413640:	mov	w0, #0x0                   	// #0
  413644:	bl	4042e0 <error@plt>
  413648:	ldr	x0, [x19, #40]
  41364c:	str	wzr, [x19, #56]
  413650:	cbz	x0, 41365c <wcrtomb@plt+0xe70c>
  413654:	bl	412938 <wcrtomb@plt+0xd9e8>
  413658:	str	xzr, [x19, #40]
  41365c:	ldr	w0, [x19, #60]
  413660:	orr	w0, w0, #0x1
  413664:	str	w0, [x19, #60]
  413668:	ldr	w0, [x19, #56]
  41366c:	cbz	w0, 4134b0 <wcrtomb@plt+0xe560>
  413670:	add	x1, sp, #0x68
  413674:	mov	x0, x20
  413678:	bl	40b964 <wcrtomb@plt+0x6a14>
  41367c:	cmp	w0, #0x2
  413680:	b.eq	413924 <wcrtomb@plt+0xe9d4>  // b.none
  413684:	cmp	w0, #0x3
  413688:	b.eq	4138ec <wcrtomb@plt+0xe99c>  // b.none
  41368c:	cmp	w0, #0x1
  413690:	b.ne	4134b0 <wcrtomb@plt+0xe560>  // b.any
  413694:	ldr	x20, [sp, #104]
  413698:	mov	w2, #0x5                   	// #5
  41369c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4136a0:	mov	x0, #0x0                   	// #0
  4136a4:	add	x1, x1, #0x9eb
  4136a8:	bl	404d00 <dcgettext@plt>
  4136ac:	mov	x1, x20
  4136b0:	mov	x2, x0
  4136b4:	mov	x0, x21
  4136b8:	bl	40a790 <wcrtomb@plt+0x5840>
  4136bc:	str	wzr, [x19, #56]
  4136c0:	ldr	x0, [sp, #104]
  4136c4:	str	x0, [x19, #72]
  4136c8:	b	4134b0 <wcrtomb@plt+0xe560>
  4136cc:	mov	w0, #0x2                   	// #2
  4136d0:	str	w0, [x19, #56]
  4136d4:	ldr	x0, [x20, #88]
  4136d8:	str	x0, [x19, #24]
  4136dc:	ldr	x0, [x25, #8]
  4136e0:	str	x0, [x19, #32]
  4136e4:	mov	w0, #0x1                   	// #1
  4136e8:	b	4135b8 <wcrtomb@plt+0xe668>
  4136ec:	mov	w0, #0x1                   	// #1
  4136f0:	str	w0, [x19, #56]
  4136f4:	mov	w0, #0x0                   	// #0
  4136f8:	b	4135c8 <wcrtomb@plt+0xe678>
  4136fc:	ldr	x1, [x25, #8]
  413700:	ldr	x0, [x20, #88]
  413704:	bl	412ad4 <wcrtomb@plt+0xdb84>
  413708:	mov	x23, x0
  41370c:	ldp	x1, x2, [x20, #176]
  413710:	lsr	x5, x26, #63
  413714:	ldr	x4, [x25, #8]
  413718:	mov	x0, x21
  41371c:	ldr	x3, [x20, #88]
  413720:	mov	x7, #0x0                   	// #0
  413724:	mov	w6, #0x1                   	// #1
  413728:	bl	4132c8 <wcrtomb@plt+0xe378>
  41372c:	mov	x19, x0
  413730:	cbz	x23, 4137cc <wcrtomb@plt+0xe87c>
  413734:	ldr	x0, [x23, #88]
  413738:	mov	x1, x21
  41373c:	bl	404a30 <strcmp@plt>
  413740:	cbz	w0, 4137c4 <wcrtomb@plt+0xe874>
  413744:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  413748:	ldr	w0, [x0, #480]
  41374c:	tbz	w0, #13, 4137a8 <wcrtomb@plt+0xe858>
  413750:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413754:	ldr	x0, [x0, #1016]
  413758:	cbz	x0, 413760 <wcrtomb@plt+0xe810>
  41375c:	blr	x0
  413760:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  413764:	add	x1, x1, #0x644
  413768:	mov	w2, #0x5                   	// #5
  41376c:	mov	x0, #0x0                   	// #0
  413770:	bl	404d00 <dcgettext@plt>
  413774:	mov	x25, x0
  413778:	mov	x0, x21
  41377c:	bl	436084 <argp_usage@@Base+0x8ba4>
  413780:	ldr	x1, [x23, #88]
  413784:	mov	x26, x0
  413788:	mov	w0, #0x1                   	// #1
  41378c:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  413790:	mov	x4, x0
  413794:	mov	x3, x26
  413798:	mov	x2, x25
  41379c:	mov	w1, #0x0                   	// #0
  4137a0:	mov	w0, #0x0                   	// #0
  4137a4:	bl	4042e0 <error@plt>
  4137a8:	ldr	w0, [x19, #60]
  4137ac:	mov	x1, x21
  4137b0:	str	x23, [x19, #64]
  4137b4:	orr	w0, w0, #0x10
  4137b8:	str	w0, [x19, #60]
  4137bc:	ldr	x0, [x23, #88]
  4137c0:	bl	412960 <wcrtomb@plt+0xda10>
  4137c4:	mov	w0, #0x1                   	// #1
  4137c8:	b	413838 <wcrtomb@plt+0xe8e8>
  4137cc:	ldr	w0, [x0, #60]
  4137d0:	orr	w0, w0, #0x8
  4137d4:	str	w0, [x19, #60]
  4137d8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4137dc:	ldr	w0, [x0, #480]
  4137e0:	tbz	w0, #12, 413828 <wcrtomb@plt+0xe8d8>
  4137e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4137e8:	ldr	x0, [x0, #1016]
  4137ec:	cbz	x0, 4137f4 <wcrtomb@plt+0xe8a4>
  4137f0:	blr	x0
  4137f4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4137f8:	add	x1, x1, #0x66b
  4137fc:	mov	w2, #0x5                   	// #5
  413800:	mov	x0, #0x0                   	// #0
  413804:	bl	404d00 <dcgettext@plt>
  413808:	mov	x23, x0
  41380c:	mov	x0, x21
  413810:	bl	436084 <argp_usage@@Base+0x8ba4>
  413814:	mov	x2, x23
  413818:	mov	x3, x0
  41381c:	mov	w1, #0x0                   	// #0
  413820:	mov	w0, #0x0                   	// #0
  413824:	bl	4042e0 <error@plt>
  413828:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41382c:	ldr	x0, [x0, #840]
  413830:	cbz	x0, 413844 <wcrtomb@plt+0xe8f4>
  413834:	mov	w0, #0x2                   	// #2
  413838:	str	w0, [x19, #56]
  41383c:	mov	w0, #0x0                   	// #0
  413840:	b	4135d4 <wcrtomb@plt+0xe684>
  413844:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  413848:	add	x23, x23, #0x30
  41384c:	ldp	x0, x1, [x20, #176]
  413850:	ldp	x2, x3, [x23]
  413854:	bl	43683c <argp_usage@@Base+0x935c>
  413858:	tbnz	w0, #31, 413834 <wcrtomb@plt+0xe8e4>
  41385c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413860:	ldr	w0, [x0, #980]
  413864:	cbz	w0, 4137c4 <wcrtomb@plt+0xe874>
  413868:	ldp	x2, x3, [x23]
  41386c:	ldp	x0, x1, [x20, #192]
  413870:	bl	43683c <argp_usage@@Base+0x935c>
  413874:	tbz	w0, #31, 4137c4 <wcrtomb@plt+0xe874>
  413878:	b	413834 <wcrtomb@plt+0xe8e4>
  41387c:	tbz	w22, #4, 413894 <wcrtomb@plt+0xe944>
  413880:	and	w22, w22, #0x3
  413884:	str	w22, [x19, #56]
  413888:	cbnz	w22, 413894 <wcrtomb@plt+0xe944>
  41388c:	mov	w1, #0x4e                  	// #78
  413890:	strb	w1, [x24]
  413894:	cbz	w0, 41365c <wcrtomb@plt+0xe70c>
  413898:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41389c:	ldr	w0, [x0, #480]
  4138a0:	tbz	w0, #13, 41365c <wcrtomb@plt+0xe70c>
  4138a4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4138a8:	ldr	x0, [x0, #1016]
  4138ac:	cbz	x0, 4138b4 <wcrtomb@plt+0xe964>
  4138b0:	blr	x0
  4138b4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4138b8:	add	x1, x1, #0x6b7
  4138bc:	mov	w2, #0x5                   	// #5
  4138c0:	mov	x0, #0x0                   	// #0
  4138c4:	bl	404d00 <dcgettext@plt>
  4138c8:	mov	x22, x0
  4138cc:	mov	x0, x21
  4138d0:	bl	436084 <argp_usage@@Base+0x8ba4>
  4138d4:	mov	x2, x22
  4138d8:	mov	x3, x0
  4138dc:	mov	w1, #0x0                   	// #0
  4138e0:	mov	w0, #0x0                   	// #0
  4138e4:	bl	4042e0 <error@plt>
  4138e8:	b	41365c <wcrtomb@plt+0xe70c>
  4138ec:	ldr	x20, [sp, #104]
  4138f0:	mov	w2, #0x5                   	// #5
  4138f4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4138f8:	mov	x0, #0x0                   	// #0
  4138fc:	add	x1, x1, #0x998
  413900:	bl	404d00 <dcgettext@plt>
  413904:	mov	x1, x20
  413908:	mov	x2, x0
  41390c:	mov	x0, x21
  413910:	bl	40a790 <wcrtomb@plt+0x5840>
  413914:	mov	w0, #0x4e                  	// #78
  413918:	strb	w0, [x24]
  41391c:	str	wzr, [x19, #56]
  413920:	b	4134b0 <wcrtomb@plt+0xe560>
  413924:	ldr	x20, [sp, #104]
  413928:	mov	w2, #0x5                   	// #5
  41392c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  413930:	mov	x0, #0x0                   	// #0
  413934:	add	x1, x1, #0x9eb
  413938:	bl	404d00 <dcgettext@plt>
  41393c:	mov	x1, x20
  413940:	mov	x2, x0
  413944:	mov	x0, x21
  413948:	bl	40a790 <wcrtomb@plt+0x5840>
  41394c:	b	4136c0 <wcrtomb@plt+0xe770>
  413950:	stp	x29, x30, [sp, #-80]!
  413954:	mov	x29, sp
  413958:	stp	x19, x20, [sp, #16]
  41395c:	mov	x19, x1
  413960:	ldr	w1, [x0, #60]
  413964:	str	x21, [sp, #32]
  413968:	tbz	w1, #2, 413abc <wcrtomb@plt+0xeb6c>
  41396c:	tst	x1, #0x2
  413970:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x16380>
  413974:	add	x4, x4, #0x66e
  413978:	mov	x20, x0
  41397c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  413980:	add	x0, x0, #0x4d
  413984:	csel	x0, x0, x4, ne  // ne = any
  413988:	mov	x3, x19
  41398c:	mov	x2, #0x1                   	// #1
  413990:	mov	x1, #0x2                   	// #2
  413994:	bl	404260 <fwrite_unlocked@plt>
  413998:	ldr	x0, [x20, #8]
  41399c:	add	x3, sp, #0x38
  4139a0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4139a4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  4139a8:	bl	418174 <wcrtomb@plt+0x13224>
  4139ac:	mov	x21, x0
  4139b0:	bl	404280 <strlen@plt>
  4139b4:	mov	x2, #0x1                   	// #1
  4139b8:	mov	x3, x19
  4139bc:	add	x1, x0, x2
  4139c0:	mov	x0, x21
  4139c4:	bl	404260 <fwrite_unlocked@plt>
  4139c8:	ldr	x0, [x20, #16]
  4139cc:	add	x1, sp, #0x38
  4139d0:	bl	431340 <argp_usage@@Base+0x3e60>
  4139d4:	mov	x21, x0
  4139d8:	bl	404280 <strlen@plt>
  4139dc:	mov	x2, #0x1                   	// #1
  4139e0:	mov	x3, x19
  4139e4:	add	x1, x0, x2
  4139e8:	mov	x0, x21
  4139ec:	bl	404260 <fwrite_unlocked@plt>
  4139f0:	ldr	x0, [x20, #24]
  4139f4:	add	x3, sp, #0x38
  4139f8:	mov	x2, #0xffffffffffffffff    	// #-1
  4139fc:	mov	x1, #0x0                   	// #0
  413a00:	bl	418174 <wcrtomb@plt+0x13224>
  413a04:	mov	x21, x0
  413a08:	bl	404280 <strlen@plt>
  413a0c:	mov	x2, #0x1                   	// #1
  413a10:	mov	x3, x19
  413a14:	add	x1, x0, x2
  413a18:	mov	x0, x21
  413a1c:	bl	404260 <fwrite_unlocked@plt>
  413a20:	ldr	x0, [x20, #32]
  413a24:	add	x3, sp, #0x38
  413a28:	mov	x2, #0xffffffffffffffff    	// #-1
  413a2c:	mov	x1, #0x0                   	// #0
  413a30:	bl	418174 <wcrtomb@plt+0x13224>
  413a34:	mov	x21, x0
  413a38:	bl	404280 <strlen@plt>
  413a3c:	mov	x2, #0x1                   	// #1
  413a40:	mov	x3, x19
  413a44:	add	x1, x0, x2
  413a48:	mov	x0, x21
  413a4c:	bl	404260 <fwrite_unlocked@plt>
  413a50:	ldr	x21, [x20, #88]
  413a54:	mov	x0, x21
  413a58:	bl	404280 <strlen@plt>
  413a5c:	mov	x2, #0x1                   	// #1
  413a60:	mov	x3, x19
  413a64:	add	x1, x0, x2
  413a68:	mov	x0, x21
  413a6c:	bl	404260 <fwrite_unlocked@plt>
  413a70:	ldr	x20, [x20, #40]
  413a74:	cbz	x20, 413aa4 <wcrtomb@plt+0xeb54>
  413a78:	mov	x0, #0x18                  	// #24
  413a7c:	bl	436d44 <argp_usage@@Base+0x9864>
  413a80:	mov	x21, x0
  413a84:	str	x20, [x0]
  413a88:	str	wzr, [x0, #8]
  413a8c:	str	xzr, [x0, #16]
  413a90:	bl	412884 <wcrtomb@plt+0xd934>
  413a94:	mov	x20, x0
  413a98:	cbnz	x0, 413adc <wcrtomb@plt+0xeb8c>
  413a9c:	mov	x0, x21
  413aa0:	bl	404ae0 <free@plt>
  413aa4:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  413aa8:	mov	x3, x19
  413aac:	add	x0, x0, #0xa78
  413ab0:	mov	x2, #0x1                   	// #1
  413ab4:	mov	x1, #0x2                   	// #2
  413ab8:	bl	404260 <fwrite_unlocked@plt>
  413abc:	mov	x0, x19
  413ac0:	bl	4043c0 <ferror_unlocked@plt>
  413ac4:	cmp	w0, #0x0
  413ac8:	cset	w0, eq  // eq = none
  413acc:	ldp	x19, x20, [sp, #16]
  413ad0:	ldr	x21, [sp, #32]
  413ad4:	ldp	x29, x30, [sp], #80
  413ad8:	ret
  413adc:	mov	x0, x20
  413ae0:	bl	404280 <strlen@plt>
  413ae4:	mov	x2, #0x1                   	// #1
  413ae8:	mov	x3, x19
  413aec:	add	x1, x0, x2
  413af0:	mov	x0, x20
  413af4:	bl	404260 <fwrite_unlocked@plt>
  413af8:	mov	x0, x21
  413afc:	b	413a90 <wcrtomb@plt+0xeb40>
  413b00:	stp	x29, x30, [sp, #-32]!
  413b04:	mov	x29, sp
  413b08:	stp	x19, x20, [sp, #16]
  413b0c:	mov	x19, x0
  413b10:	mov	x20, #0x0                   	// #0
  413b14:	ldrb	w0, [x19]
  413b18:	cbnz	w0, 413b2c <wcrtomb@plt+0xebdc>
  413b1c:	add	x0, x20, #0x1
  413b20:	ldp	x19, x20, [sp, #16]
  413b24:	ldp	x29, x30, [sp], #32
  413b28:	ret
  413b2c:	mov	x0, x19
  413b30:	bl	404280 <strlen@plt>
  413b34:	add	x0, x0, #0x1
  413b38:	add	x20, x20, x0
  413b3c:	add	x19, x19, x0
  413b40:	b	413b14 <wcrtomb@plt+0xebc4>
  413b44:	stp	x29, x30, [sp, #-48]!
  413b48:	mov	x29, sp
  413b4c:	stp	x19, x20, [sp, #16]
  413b50:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  413b54:	add	x20, x19, #0x8b0
  413b58:	str	x21, [sp, #32]
  413b5c:	ldr	x0, [x20, #8]
  413b60:	cbz	x0, 413b68 <wcrtomb@plt+0xec18>
  413b64:	bl	4305d8 <argp_usage@@Base+0x30f8>
  413b68:	ldr	x0, [x20, #16]
  413b6c:	cbz	x0, 413b74 <wcrtomb@plt+0xec24>
  413b70:	bl	4305d8 <argp_usage@@Base+0x30f8>
  413b74:	ldr	x0, [x19, #2224]
  413b78:	cbnz	x0, 413b94 <wcrtomb@plt+0xec44>
  413b7c:	str	xzr, [x19, #2224]
  413b80:	str	xzr, [x20, #24]
  413b84:	ldp	x19, x20, [sp, #16]
  413b88:	ldr	x21, [sp, #32]
  413b8c:	ldp	x29, x30, [sp], #48
  413b90:	ret
  413b94:	ldr	x21, [x0]
  413b98:	bl	412908 <wcrtomb@plt+0xd9b8>
  413b9c:	mov	x0, x21
  413ba0:	b	413b78 <wcrtomb@plt+0xec28>
  413ba4:	add	x0, x0, #0x58
  413ba8:	b	41809c <wcrtomb@plt+0x1314c>
  413bac:	stp	x29, x30, [sp, #-160]!
  413bb0:	mov	x29, sp
  413bb4:	stp	x19, x20, [sp, #16]
  413bb8:	mov	x20, x0
  413bbc:	ldr	x0, [x0]
  413bc0:	bl	412a64 <wcrtomb@plt+0xdb14>
  413bc4:	cbz	x0, 413be4 <wcrtomb@plt+0xec94>
  413bc8:	mov	x19, x0
  413bcc:	ldr	w0, [x20, #408]
  413bd0:	add	x1, sp, #0x20
  413bd4:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  413bd8:	cbz	w0, 413bf0 <wcrtomb@plt+0xeca0>
  413bdc:	ldr	x0, [x19, #88]
  413be0:	bl	418c90 <wcrtomb@plt+0x13d40>
  413be4:	ldp	x19, x20, [sp, #16]
  413be8:	ldp	x29, x30, [sp], #160
  413bec:	ret
  413bf0:	ldp	x1, x0, [sp, #120]
  413bf4:	stp	x1, x0, [x19, #8]
  413bf8:	b	413be4 <wcrtomb@plt+0xec94>
  413bfc:	sub	sp, sp, #0x230
  413c00:	stp	x29, x30, [sp]
  413c04:	mov	x29, sp
  413c08:	stp	x21, x22, [sp, #32]
  413c0c:	mov	x21, x0
  413c10:	stp	x19, x20, [sp, #16]
  413c14:	stp	x23, x24, [sp, #48]
  413c18:	stp	x25, x26, [sp, #64]
  413c1c:	stp	x27, x28, [sp, #80]
  413c20:	ldr	x23, [x0]
  413c24:	bl	40b7c0 <wcrtomb@plt+0x6870>
  413c28:	mov	x22, x0
  413c2c:	ldr	x0, [x21, #88]
  413c30:	str	x0, [sp, #104]
  413c34:	ldr	x19, [x21, #392]
  413c38:	cbnz	x22, 413c44 <wcrtomb@plt+0xecf4>
  413c3c:	mov	x0, x23
  413c40:	bl	4250d4 <wcrtomb@plt+0x20184>
  413c44:	mov	x0, x21
  413c48:	bl	40d884 <wcrtomb@plt+0x8934>
  413c4c:	mov	x0, x23
  413c50:	bl	436f10 <argp_usage@@Base+0x9a30>
  413c54:	mov	x20, x0
  413c58:	bl	417e80 <wcrtomb@plt+0x12f30>
  413c5c:	cmp	x19, #0x0
  413c60:	add	x3, sp, #0x87
  413c64:	cset	w2, eq  // eq = none
  413c68:	mov	x1, x21
  413c6c:	mov	x0, x20
  413c70:	lsl	w2, w2, #5
  413c74:	bl	413440 <wcrtomb@plt+0xe4f0>
  413c78:	mov	x19, x0
  413c7c:	mov	x0, x20
  413c80:	bl	404ae0 <free@plt>
  413c84:	mov	x0, x23
  413c88:	bl	418e28 <wcrtomb@plt+0x13ed8>
  413c8c:	mov	x25, x0
  413c90:	cbz	x22, 413da8 <wcrtomb@plt+0xee58>
  413c94:	ldr	w0, [x19, #56]
  413c98:	cbz	w0, 414044 <wcrtomb@plt+0xf0f4>
  413c9c:	cmp	w0, #0x2
  413ca0:	b.eq	413de4 <wcrtomb@plt+0xee94>  // b.none
  413ca4:	ldr	w0, [x19, #60]
  413ca8:	tbz	w0, #4, 413ddc <wcrtomb@plt+0xee8c>
  413cac:	ldr	x0, [x19, #64]
  413cb0:	ldr	x26, [x0, #48]
  413cb4:	cbnz	x26, 413cbc <wcrtomb@plt+0xed6c>
  413cb8:	ldr	x26, [x0, #40]
  413cbc:	mov	x20, x22
  413cc0:	mov	x24, #0x0                   	// #0
  413cc4:	mov	x23, #0x0                   	// #0
  413cc8:	ldrb	w0, [x20]
  413ccc:	cbnz	w0, 413dec <wcrtomb@plt+0xee9c>
  413cd0:	mov	x1, #0x8                   	// #8
  413cd4:	mov	x0, x23
  413cd8:	add	x24, x24, #0x1
  413cdc:	bl	436eac <argp_usage@@Base+0x99cc>
  413ce0:	mov	x27, x22
  413ce4:	mov	x20, x0
  413ce8:	mov	x28, x0
  413cec:	mov	x1, x0
  413cf0:	ldrb	w0, [x27]
  413cf4:	cbnz	w0, 413e0c <wcrtomb@plt+0xeebc>
  413cf8:	mov	x1, x23
  413cfc:	adrp	x3, 412000 <wcrtomb@plt+0xd0b0>
  413d00:	add	x3, x3, #0xb48
  413d04:	mov	x2, #0x8                   	// #8
  413d08:	mov	x0, x20
  413d0c:	bl	404450 <qsort@plt>
  413d10:	mov	x0, x24
  413d14:	add	x24, x20, x23, lsl #3
  413d18:	bl	436d44 <argp_usage@@Base+0x9864>
  413d1c:	mov	x27, x0
  413d20:	mov	x23, x0
  413d24:	mov	w2, #0x59                  	// #89
  413d28:	mov	w3, #0x49                  	// #73
  413d2c:	cmp	x28, x24
  413d30:	b.ne	413e2c <wcrtomb@plt+0xeedc>  // b.any
  413d34:	strb	wzr, [x23]
  413d38:	mov	x1, #0x0                   	// #0
  413d3c:	add	x28, sp, #0xe0
  413d40:	mov	w24, #0x4e                  	// #78
  413d44:	ldr	x0, [x19, #40]
  413d48:	str	x0, [x19, #48]
  413d4c:	mov	x0, x27
  413d50:	bl	412bbc <wcrtomb@plt+0xdc6c>
  413d54:	str	x0, [x19, #40]
  413d58:	mov	x0, x27
  413d5c:	bl	404ae0 <free@plt>
  413d60:	mov	x0, x20
  413d64:	bl	404ae0 <free@plt>
  413d68:	mov	x0, #0x18                  	// #24
  413d6c:	ldr	x20, [x19, #40]
  413d70:	bl	436d44 <argp_usage@@Base+0x9864>
  413d74:	mov	w1, #0x1                   	// #1
  413d78:	str	x20, [x0]
  413d7c:	str	w1, [x0, #8]
  413d80:	mov	x23, x0
  413d84:	str	xzr, [x0, #16]
  413d88:	bl	412884 <wcrtomb@plt+0xd934>
  413d8c:	mov	x20, x0
  413d90:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413d94:	add	x0, x0, #0x238
  413d98:	str	x0, [sp, #112]
  413d9c:	cbnz	x20, 413e8c <wcrtomb@plt+0xef3c>
  413da0:	mov	x0, x23
  413da4:	bl	404ae0 <free@plt>
  413da8:	mov	x0, x25
  413dac:	bl	418eac <wcrtomb@plt+0x13f5c>
  413db0:	mov	x0, x22
  413db4:	bl	404ae0 <free@plt>
  413db8:	mov	x0, x19
  413dbc:	ldp	x29, x30, [sp]
  413dc0:	ldp	x19, x20, [sp, #16]
  413dc4:	ldp	x21, x22, [sp, #32]
  413dc8:	ldp	x23, x24, [sp, #48]
  413dcc:	ldp	x25, x26, [sp, #64]
  413dd0:	ldp	x27, x28, [sp, #80]
  413dd4:	add	sp, sp, #0x230
  413dd8:	ret
  413ddc:	ldr	x26, [x19, #40]
  413de0:	b	413cbc <wcrtomb@plt+0xed6c>
  413de4:	mov	x26, #0x0                   	// #0
  413de8:	b	413cbc <wcrtomb@plt+0xed6c>
  413dec:	mov	x0, x20
  413df0:	bl	404280 <strlen@plt>
  413df4:	add	x1, x0, #0x2
  413df8:	add	x0, x0, #0x1
  413dfc:	add	x24, x24, x1
  413e00:	add	x20, x20, x0
  413e04:	add	x23, x23, #0x1
  413e08:	b	413cc8 <wcrtomb@plt+0xed78>
  413e0c:	str	x27, [x1], #8
  413e10:	mov	x0, x27
  413e14:	str	x1, [sp, #112]
  413e18:	bl	404280 <strlen@plt>
  413e1c:	add	x0, x0, #0x1
  413e20:	add	x27, x27, x0
  413e24:	ldr	x1, [sp, #112]
  413e28:	b	413cf0 <wcrtomb@plt+0xeda0>
  413e2c:	ldr	x1, [x28]
  413e30:	mov	x0, x26
  413e34:	str	w2, [sp, #112]
  413e38:	str	w3, [sp, #124]
  413e3c:	bl	412b78 <wcrtomb@plt+0xdc28>
  413e40:	ldr	x1, [x19, #72]
  413e44:	add	x6, x23, #0x1
  413e48:	ldr	w2, [sp, #112]
  413e4c:	mov	w4, #0x49                  	// #73
  413e50:	ldr	w3, [sp, #124]
  413e54:	cmp	x1, #0x0
  413e58:	mov	w5, #0x20                  	// #32
  413e5c:	cbz	x0, 413e84 <wcrtomb@plt+0xef34>
  413e60:	csel	w0, w4, w5, ne  // ne = any
  413e64:	ldr	x1, [x28]
  413e68:	strb	w0, [x23]
  413e6c:	mov	x23, x6
  413e70:	ldrb	w0, [x1], #1
  413e74:	strb	w0, [x23], #1
  413e78:	cbnz	w0, 413e70 <wcrtomb@plt+0xef20>
  413e7c:	add	x28, x28, #0x8
  413e80:	b	413d2c <wcrtomb@plt+0xeddc>
  413e84:	csel	w0, w3, w2, ne  // ne = any
  413e88:	b	413e64 <wcrtomb@plt+0xef14>
  413e8c:	add	x27, x20, #0x1
  413e90:	mov	x0, x25
  413e94:	mov	x1, x27
  413e98:	bl	418ed4 <wcrtomb@plt+0x13f84>
  413e9c:	ldrb	w1, [x20]
  413ea0:	mov	x26, x0
  413ea4:	cmp	w1, #0x49
  413ea8:	b.ne	413ec0 <wcrtomb@plt+0xef70>  // b.any
  413eac:	strb	w24, [x20]
  413eb0:	mov	x0, x23
  413eb4:	bl	412884 <wcrtomb@plt+0xd934>
  413eb8:	mov	x20, x0
  413ebc:	b	413d9c <wcrtomb@plt+0xee4c>
  413ec0:	mov	x1, x21
  413ec4:	bl	40dac4 <wcrtomb@plt+0x8b74>
  413ec8:	tst	w0, #0xff
  413ecc:	b.ne	413eac <wcrtomb@plt+0xef5c>  // b.any
  413ed0:	ldr	w4, [x21, #408]
  413ed4:	add	x0, sp, #0x88
  413ed8:	str	w4, [sp, #124]
  413edc:	bl	421adc <wcrtomb@plt+0x1cb8c>
  413ee0:	ldr	w4, [sp, #124]
  413ee4:	tbz	w4, #31, 413f08 <wcrtomb@plt+0xefb8>
  413ee8:	str	w4, [sp, #124]
  413eec:	bl	404e10 <__errno_location@plt>
  413ef0:	ldr	w4, [sp, #124]
  413ef4:	neg	w4, w4
  413ef8:	str	w4, [x0]
  413efc:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  413f00:	add	x2, x2, #0xbdc
  413f04:	b	413f2c <wcrtomb@plt+0xefdc>
  413f08:	ldr	x0, [sp, #112]
  413f0c:	mov	x2, x28
  413f10:	mov	x1, x27
  413f14:	ldr	w3, [x0]
  413f18:	mov	w0, w4
  413f1c:	bl	446aa0 <_obstack_memory_used@@Base+0xee20>
  413f20:	cbz	w0, 413f40 <wcrtomb@plt+0xeff0>
  413f24:	adrp	x2, 418000 <wcrtomb@plt+0x130b0>
  413f28:	add	x2, x2, #0xc90
  413f2c:	mov	x0, x26
  413f30:	mov	w1, #0x0                   	// #0
  413f34:	bl	418cb4 <wcrtomb@plt+0x13d64>
  413f38:	strb	w24, [x20]
  413f3c:	b	413fc8 <wcrtomb@plt+0xf078>
  413f40:	ldr	w0, [sp, #240]
  413f44:	and	w0, w0, #0xf000
  413f48:	cmp	w0, #0x4, lsl #12
  413f4c:	b.ne	413fdc <wcrtomb@plt+0xf08c>  // b.any
  413f50:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413f54:	mov	x1, x27
  413f58:	ldr	w2, [x0, #716]
  413f5c:	mov	x0, x21
  413f60:	bl	40b8bc <wcrtomb@plt+0x696c>
  413f64:	tbnz	w0, #31, 413efc <wcrtomb@plt+0xefac>
  413f68:	mov	x1, x28
  413f6c:	str	w0, [sp, #544]
  413f70:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  413f74:	cbnz	w0, 413f24 <wcrtomb@plt+0xefd4>
  413f78:	ldr	w0, [sp, #240]
  413f7c:	and	w0, w0, #0xf000
  413f80:	cmp	w0, #0x4, lsl #12
  413f84:	b.ne	413fdc <wcrtomb@plt+0xf08c>  // b.any
  413f88:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413f8c:	ldr	w0, [x0, #684]
  413f90:	cbz	w0, 413fd4 <wcrtomb@plt+0xf084>
  413f94:	ldr	w0, [x19, #56]
  413f98:	mov	w2, #0x12                  	// #18
  413f9c:	cmp	w0, #0x2
  413fa0:	csel	w2, wzr, w2, ne  // ne = any
  413fa4:	mov	w0, #0x44                  	// #68
  413fa8:	mov	x3, x20
  413fac:	add	x1, sp, #0x88
  413fb0:	strb	w0, [x20]
  413fb4:	mov	x0, x26
  413fb8:	str	x21, [sp, #528]
  413fbc:	bl	413440 <wcrtomb@plt+0xe4f0>
  413fc0:	add	x0, sp, #0x88
  413fc4:	bl	40ba04 <wcrtomb@plt+0x6ab4>
  413fc8:	add	x0, sp, #0x88
  413fcc:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  413fd0:	b	413eb0 <wcrtomb@plt+0xef60>
  413fd4:	mov	w2, #0x10                  	// #16
  413fd8:	b	413fa4 <wcrtomb@plt+0xf054>
  413fdc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  413fe0:	ldrb	w0, [x0, #93]
  413fe4:	cbz	w0, 413ff8 <wcrtomb@plt+0xf0a8>
  413fe8:	ldr	x1, [sp, #104]
  413fec:	ldr	x0, [sp, #224]
  413ff0:	cmp	x0, x1
  413ff4:	b.ne	413f38 <wcrtomb@plt+0xefe8>  // b.any
  413ff8:	ldrb	w0, [x20]
  413ffc:	cmp	w0, #0x59
  414000:	b.eq	413fc8 <wcrtomb@plt+0xf078>  // b.none
  414004:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  414008:	add	x26, x26, #0x30
  41400c:	ldp	x0, x1, [sp, #312]
  414010:	ldp	x2, x3, [x26]
  414014:	bl	43683c <argp_usage@@Base+0x935c>
  414018:	tbz	w0, #31, 414038 <wcrtomb@plt+0xf0e8>
  41401c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414020:	ldr	w0, [x0, #980]
  414024:	cbz	w0, 413f38 <wcrtomb@plt+0xefe8>
  414028:	ldp	x2, x3, [x26]
  41402c:	ldp	x0, x1, [sp, #328]
  414030:	bl	43683c <argp_usage@@Base+0x935c>
  414034:	tbnz	w0, #31, 413f38 <wcrtomb@plt+0xefe8>
  414038:	mov	w0, #0x59                  	// #89
  41403c:	strb	w0, [x20]
  414040:	b	413fc8 <wcrtomb@plt+0xf078>
  414044:	ldr	x0, [x19, #72]
  414048:	cbz	x0, 413da8 <wcrtomb@plt+0xee58>
  41404c:	bl	404280 <strlen@plt>
  414050:	mov	x20, x0
  414054:	add	x0, x0, #0x3
  414058:	bl	436d44 <argp_usage@@Base+0x9864>
  41405c:	mov	w1, #0x59                  	// #89
  414060:	mov	x21, x0
  414064:	strb	w1, [x0], #1
  414068:	add	x2, x20, #0x1
  41406c:	add	x20, x21, x20
  414070:	ldr	x1, [x19, #72]
  414074:	bl	404200 <memcpy@plt>
  414078:	strb	wzr, [x20, #2]
  41407c:	mov	x1, #0x0                   	// #0
  414080:	ldr	x0, [x19, #40]
  414084:	str	x0, [x19, #48]
  414088:	mov	x0, x21
  41408c:	bl	412bbc <wcrtomb@plt+0xdc6c>
  414090:	str	x0, [x19, #40]
  414094:	mov	x0, x21
  414098:	b	413da4 <wcrtomb@plt+0xee54>
  41409c:	cbz	x0, 4140ac <wcrtomb@plt+0xf15c>
  4140a0:	ldr	x0, [x0, #40]
  4140a4:	cbz	x0, 4140ac <wcrtomb@plt+0xf15c>
  4140a8:	ldr	x0, [x0]
  4140ac:	ret
  4140b0:	stp	x29, x30, [sp, #-16]!
  4140b4:	mov	x29, sp
  4140b8:	bl	41409c <wcrtomb@plt+0xf14c>
  4140bc:	cbnz	x0, 4140cc <wcrtomb@plt+0xf17c>
  4140c0:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  4140c4:	add	x0, x0, #0xa78
  4140c8:	add	x0, x0, #0x3
  4140cc:	ldp	x29, x30, [sp], #16
  4140d0:	ret
  4140d4:	stp	x29, x30, [sp, #-192]!
  4140d8:	mov	x29, sp
  4140dc:	stp	x21, x22, [sp, #32]
  4140e0:	mov	x22, x0
  4140e4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4140e8:	stp	x19, x20, [sp, #16]
  4140ec:	ldr	x1, [x0, #2224]
  4140f0:	stp	x23, x24, [sp, #48]
  4140f4:	stp	x25, x26, [sp, #64]
  4140f8:	str	x27, [sp, #80]
  4140fc:	cbz	x1, 414228 <wcrtomb@plt+0xf2d8>
  414100:	adrp	x4, 404000 <mbrtowc@plt-0x1f0>
  414104:	adrp	x3, 436000 <argp_usage@@Base+0x8b20>
  414108:	add	x4, x4, #0xae0
  41410c:	add	x3, x3, #0xd44
  414110:	mov	x2, #0x0                   	// #0
  414114:	mov	x1, #0x0                   	// #0
  414118:	mov	x20, x0
  41411c:	add	x0, sp, #0x68
  414120:	bl	437aa0 <_obstack_begin@@Base>
  414124:	mov	x0, x22
  414128:	bl	41409c <wcrtomb@plt+0xf14c>
  41412c:	mov	x19, x0
  414130:	cbz	x0, 414244 <wcrtomb@plt+0xf2f4>
  414134:	bl	413b00 <wcrtomb@plt+0xebb0>
  414138:	sub	x21, x0, #0x1
  41413c:	ldp	x1, x0, [sp, #128]
  414140:	sub	x0, x0, x1
  414144:	cmp	x21, x0
  414148:	b.ls	414158 <wcrtomb@plt+0xf208>  // b.plast
  41414c:	mov	x1, x21
  414150:	add	x0, sp, #0x68
  414154:	bl	437acc <_obstack_newchunk@@Base>
  414158:	ldr	x0, [sp, #128]
  41415c:	mov	x2, x21
  414160:	mov	x1, x19
  414164:	bl	404200 <memcpy@plt>
  414168:	ldr	x0, [sp, #128]
  41416c:	add	x0, x0, x21
  414170:	str	x0, [sp, #128]
  414174:	ldr	x20, [x20, #2224]
  414178:	adrp	x25, 44d000 <_obstack_memory_used@@Base+0x15380>
  41417c:	add	x25, x25, #0x41a
  414180:	mov	w26, #0x58                  	// #88
  414184:	cbnz	x20, 41424c <wcrtomb@plt+0xf2fc>
  414188:	cbz	x22, 41421c <wcrtomb@plt+0xf2cc>
  41418c:	ldp	x0, x1, [sp, #120]
  414190:	sub	x0, x1, x0
  414194:	cmp	x21, x0
  414198:	b.eq	41421c <wcrtomb@plt+0xf2cc>  // b.none
  41419c:	ldr	x0, [sp, #136]
  4141a0:	cmp	x1, x0
  4141a4:	b.ne	4141b4 <wcrtomb@plt+0xf264>  // b.any
  4141a8:	add	x0, sp, #0x68
  4141ac:	mov	x1, #0x1                   	// #1
  4141b0:	bl	437acc <_obstack_newchunk@@Base>
  4141b4:	ldr	x0, [sp, #128]
  4141b8:	add	x1, x0, #0x1
  4141bc:	str	x1, [sp, #128]
  4141c0:	strb	wzr, [x0]
  4141c4:	ldr	x0, [x22, #40]
  4141c8:	bl	412938 <wcrtomb@plt+0xd9e8>
  4141cc:	ldp	x0, x2, [sp, #120]
  4141d0:	cmp	x2, x0
  4141d4:	b.ne	4141e4 <wcrtomb@plt+0xf294>  // b.any
  4141d8:	ldrb	w1, [sp, #184]
  4141dc:	orr	w1, w1, #0x2
  4141e0:	strb	w1, [sp, #184]
  4141e4:	ldr	x1, [sp, #152]
  4141e8:	ldr	x3, [sp, #136]
  4141ec:	add	x2, x2, x1
  4141f0:	bic	x1, x2, x1
  4141f4:	ldr	x2, [sp, #112]
  4141f8:	sub	x4, x1, x2
  4141fc:	sub	x2, x3, x2
  414200:	cmp	x4, x2
  414204:	csel	x1, x1, x3, ls  // ls = plast
  414208:	stp	x1, x1, [sp, #120]
  41420c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414210:	add	x1, x1, #0x640
  414214:	bl	412bbc <wcrtomb@plt+0xdc6c>
  414218:	str	x0, [x22, #40]
  41421c:	add	x0, sp, #0x68
  414220:	mov	x1, #0x0                   	// #0
  414224:	bl	437c0c <_obstack_free@@Base>
  414228:	ldp	x19, x20, [sp, #16]
  41422c:	ldp	x21, x22, [sp, #32]
  414230:	ldp	x23, x24, [sp, #48]
  414234:	ldp	x25, x26, [sp, #64]
  414238:	ldr	x27, [sp, #80]
  41423c:	ldp	x29, x30, [sp], #192
  414240:	ret
  414244:	mov	x21, #0x0                   	// #0
  414248:	b	414174 <wcrtomb@plt+0xf224>
  41424c:	ldr	w0, [x20, #60]
  414250:	tbnz	w0, #4, 41426c <wcrtomb@plt+0xf31c>
  414254:	ldr	x20, [x20]
  414258:	b	414184 <wcrtomb@plt+0xf234>
  41425c:	str	w0, [x27, #60]
  414260:	cbnz	x19, 414270 <wcrtomb@plt+0xf320>
  414264:	mov	x19, x20
  414268:	b	414350 <wcrtomb@plt+0xf400>
  41426c:	mov	x19, x20
  414270:	ldr	w0, [x19, #60]
  414274:	mov	x27, x19
  414278:	ldr	x19, [x19, #64]
  41427c:	and	w0, w0, #0xffffffef
  414280:	cmp	x20, x19
  414284:	b.ne	41425c <wcrtomb@plt+0xf30c>  // b.any
  414288:	str	w0, [x27, #60]
  41428c:	ldr	x0, [x20, #88]
  414290:	bl	42dcb0 <argp_usage@@Base+0x7d0>
  414294:	mov	x24, x0
  414298:	ldp	x0, x1, [sp, #128]
  41429c:	cmp	x1, x0
  4142a0:	b.ne	4142b0 <wcrtomb@plt+0xf360>  // b.any
  4142a4:	add	x0, sp, #0x68
  4142a8:	mov	x1, #0x1                   	// #1
  4142ac:	bl	437acc <_obstack_newchunk@@Base>
  4142b0:	ldr	x0, [sp, #128]
  4142b4:	add	x1, x0, #0x1
  4142b8:	str	x1, [sp, #128]
  4142bc:	strb	w26, [x0]
  4142c0:	mov	x0, x24
  4142c4:	bl	404280 <strlen@plt>
  4142c8:	add	x23, x0, #0x1
  4142cc:	ldp	x1, x0, [sp, #128]
  4142d0:	sub	x0, x0, x1
  4142d4:	cmp	x23, x0
  4142d8:	b.ls	4142e8 <wcrtomb@plt+0xf398>  // b.plast
  4142dc:	mov	x1, x23
  4142e0:	add	x0, sp, #0x68
  4142e4:	bl	437acc <_obstack_newchunk@@Base>
  4142e8:	ldr	x0, [sp, #128]
  4142ec:	mov	x2, x23
  4142f0:	mov	x1, x24
  4142f4:	bl	404200 <memcpy@plt>
  4142f8:	ldr	x1, [x20, #88]
  4142fc:	mov	x2, x25
  414300:	ldr	x0, [sp, #128]
  414304:	add	x0, x0, x23
  414308:	str	x0, [sp, #128]
  41430c:	add	x0, sp, #0x68
  414310:	bl	412cc8 <wcrtomb@plt+0xdd78>
  414314:	cmp	x19, x27
  414318:	b.ne	41435c <wcrtomb@plt+0xf40c>  // b.any
  41431c:	ldr	x2, [x19, #88]
  414320:	mov	x1, x25
  414324:	add	x0, sp, #0x68
  414328:	bl	412cc8 <wcrtomb@plt+0xdd78>
  41432c:	mov	x0, x24
  414330:	bl	404ae0 <free@plt>
  414334:	b	414254 <wcrtomb@plt+0xf304>
  414338:	ldr	x1, [x0, #88]
  41433c:	add	x0, sp, #0x68
  414340:	ldr	x2, [x19, #88]
  414344:	bl	412cc8 <wcrtomb@plt+0xdd78>
  414348:	ldr	x19, [x19, #64]
  41434c:	cbz	x19, 414254 <wcrtomb@plt+0xf304>
  414350:	ldr	x0, [x19, #64]
  414354:	cbnz	x0, 414338 <wcrtomb@plt+0xf3e8>
  414358:	b	414254 <wcrtomb@plt+0xf304>
  41435c:	ldr	x0, [x19, #64]
  414360:	ldr	x2, [x19, #88]
  414364:	ldr	x1, [x0, #88]
  414368:	add	x0, sp, #0x68
  41436c:	bl	412cc8 <wcrtomb@plt+0xdd78>
  414370:	ldr	x19, [x19, #64]
  414374:	b	414314 <wcrtomb@plt+0xf3c4>
  414378:	stp	x29, x30, [sp, #-96]!
  41437c:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  414380:	add	x0, x0, #0x6d6
  414384:	mov	x29, sp
  414388:	stp	x19, x20, [sp, #16]
  41438c:	adrp	x19, 448000 <_obstack_memory_used@@Base+0x10380>
  414390:	add	x19, x19, #0xa78
  414394:	adrp	x20, 448000 <_obstack_memory_used@@Base+0x10380>
  414398:	add	x19, x19, #0x8
  41439c:	add	x20, x20, #0x72f
  4143a0:	stp	x21, x22, [sp, #32]
  4143a4:	bl	4049d0 <puts@plt>
  4143a8:	adrp	x4, 448000 <_obstack_memory_used@@Base+0x10380>
  4143ac:	adrp	x3, 448000 <_obstack_memory_used@@Base+0x10380>
  4143b0:	add	x4, x4, #0x700
  4143b4:	add	x3, x3, #0x704
  4143b8:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  4143bc:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4143c0:	add	x2, x2, #0x708
  4143c4:	add	x1, x1, #0x713
  4143c8:	mov	w0, #0x1                   	// #1
  4143cc:	bl	4046f0 <__printf_chk@plt>
  4143d0:	ldr	x22, [x19]
  4143d4:	cbnz	x22, 4143f0 <wcrtomb@plt+0xf4a0>
  4143d8:	mov	w0, #0xa                   	// #10
  4143dc:	bl	404e50 <putchar@plt>
  4143e0:	ldp	x19, x20, [sp, #16]
  4143e4:	ldp	x21, x22, [sp, #32]
  4143e8:	ldp	x29, x30, [sp], #96
  4143ec:	ret
  4143f0:	ldp	x1, x2, [x19, #8]
  4143f4:	add	x3, sp, #0x30
  4143f8:	mov	x0, x1
  4143fc:	bl	418174 <wcrtomb@plt+0x13224>
  414400:	ldp	x1, x2, [x19, #8]
  414404:	mov	x21, x0
  414408:	add	x3, sp, #0x48
  41440c:	add	x19, x19, #0x18
  414410:	mov	x0, x2
  414414:	bl	418174 <wcrtomb@plt+0x13224>
  414418:	mov	x3, x21
  41441c:	mov	x4, x0
  414420:	mov	x2, x22
  414424:	mov	x1, x20
  414428:	mov	w0, #0x1                   	// #1
  41442c:	bl	4046f0 <__printf_chk@plt>
  414430:	b	4143d0 <wcrtomb@plt+0xf480>
  414434:	stp	x29, x30, [sp, #-272]!
  414438:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41443c:	mov	w1, #0x42                  	// #66
  414440:	mov	x29, sp
  414444:	ldr	w0, [x0, #788]
  414448:	mov	w2, #0x1b6                 	// #438
  41444c:	stp	x21, x22, [sp, #32]
  414450:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  414454:	cmp	w0, #0x0
  414458:	mov	w0, #0x242                 	// #578
  41445c:	csel	w1, w1, w0, ne  // ne = any
  414460:	ldr	x0, [x22, #840]
  414464:	stp	x19, x20, [sp, #16]
  414468:	stp	x23, x24, [sp, #48]
  41446c:	stp	x25, x26, [sp, #64]
  414470:	stp	x27, x28, [sp, #80]
  414474:	stp	xzr, xzr, [sp, #112]
  414478:	bl	404630 <open@plt>
  41447c:	tbz	w0, #31, 4144a4 <wcrtomb@plt+0xf554>
  414480:	ldr	x0, [x22, #840]
  414484:	bl	424e5c <wcrtomb@plt+0x1ff0c>
  414488:	ldp	x19, x20, [sp, #16]
  41448c:	ldp	x21, x22, [sp, #32]
  414490:	ldp	x23, x24, [sp, #48]
  414494:	ldp	x25, x26, [sp, #64]
  414498:	ldp	x27, x28, [sp, #80]
  41449c:	ldp	x29, x30, [sp], #272
  4144a0:	ret
  4144a4:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4144a8:	add	x19, x19, #0x8b0
  4144ac:	mov	w20, w0
  4144b0:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4144b4:	add	x1, x1, #0x749
  4144b8:	bl	404710 <fdopen@plt>
  4144bc:	str	x0, [x19, #32]
  4144c0:	cbnz	x0, 4144d8 <wcrtomb@plt+0xf588>
  4144c4:	ldr	x0, [x22, #840]
  4144c8:	bl	424e5c <wcrtomb@plt+0x1ff0c>
  4144cc:	mov	w0, w20
  4144d0:	bl	4048c0 <close@plt>
  4144d4:	b	414488 <wcrtomb@plt+0xf538>
  4144d8:	bl	41b2d4 <wcrtomb@plt+0x16384>
  4144dc:	mov	x21, x22
  4144e0:	bl	41b344 <wcrtomb@plt+0x163f4>
  4144e4:	ldr	x2, [x19, #32]
  4144e8:	add	x1, sp, #0x78
  4144ec:	add	x0, sp, #0x70
  4144f0:	bl	404ab0 <getline@plt>
  4144f4:	cmp	x0, #0x0
  4144f8:	b.le	414670 <wcrtomb@plt+0xf720>
  4144fc:	ldr	x22, [sp, #112]
  414500:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414504:	mov	x2, #0x7                   	// #7
  414508:	add	x1, x1, #0x74c
  41450c:	mov	x0, x22
  414510:	bl	4046a0 <strncmp@plt>
  414514:	cbnz	w0, 414630 <wcrtomb@plt+0xf6e0>
  414518:	ldrb	w0, [x22, #7]
  41451c:	add	x20, x22, #0x8
  414520:	cmp	w0, #0x2d
  414524:	b.eq	414568 <wcrtomb@plt+0xf618>  // b.none
  414528:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41452c:	ldr	x0, [x0, #1016]
  414530:	cbz	x0, 414538 <wcrtomb@plt+0xf5e8>
  414534:	blr	x0
  414538:	mov	w2, #0x5                   	// #5
  41453c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414540:	mov	x0, #0x0                   	// #0
  414544:	add	x1, x1, #0x754
  414548:	bl	404d00 <dcgettext@plt>
  41454c:	mov	x2, x0
  414550:	mov	w1, #0x0                   	// #0
  414554:	mov	w0, #0x1                   	// #1
  414558:	bl	4042e0 <error@plt>
  41455c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  414560:	mov	w1, #0x2                   	// #2
  414564:	str	w1, [x0, #3464]
  414568:	adrp	x22, 448000 <_obstack_memory_used@@Base+0x10380>
  41456c:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  414570:	add	x22, x22, #0x754
  414574:	add	x23, x23, #0xd88
  414578:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  41457c:	ldrb	w0, [x20], #1
  414580:	cmp	w0, #0x2d
  414584:	b.ne	4145f4 <wcrtomb@plt+0xf6a4>  // b.any
  414588:	mov	x0, x20
  41458c:	mov	w2, #0xa                   	// #10
  414590:	mov	x1, #0x0                   	// #0
  414594:	bl	404940 <strtoumax@plt>
  414598:	mov	x22, x0
  41459c:	cmp	x0, #0x1
  4145a0:	b.ls	414634 <wcrtomb@plt+0xf6e4>  // b.plast
  4145a4:	cmp	x0, #0x2
  4145a8:	b.eq	4149b4 <wcrtomb@plt+0xfa64>  // b.none
  4145ac:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4145b0:	ldr	x0, [x0, #1016]
  4145b4:	cbz	x0, 4145bc <wcrtomb@plt+0xf66c>
  4145b8:	blr	x0
  4145bc:	mov	w2, #0x5                   	// #5
  4145c0:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4145c4:	mov	x0, #0x0                   	// #0
  4145c8:	add	x1, x1, #0x82d
  4145cc:	bl	404d00 <dcgettext@plt>
  4145d0:	mov	x2, x0
  4145d4:	mov	w1, #0x0                   	// #0
  4145d8:	mov	w0, #0x1                   	// #1
  4145dc:	mov	x3, x22
  4145e0:	bl	4042e0 <error@plt>
  4145e4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4145e8:	mov	w1, #0x2                   	// #2
  4145ec:	str	w1, [x0, #3464]
  4145f0:	b	414670 <wcrtomb@plt+0xf720>
  4145f4:	cbnz	w0, 41457c <wcrtomb@plt+0xf62c>
  4145f8:	ldr	x0, [x24, #1016]
  4145fc:	cbz	x0, 414604 <wcrtomb@plt+0xf6b4>
  414600:	blr	x0
  414604:	mov	x1, x22
  414608:	mov	w2, #0x5                   	// #5
  41460c:	mov	x0, #0x0                   	// #0
  414610:	bl	404d00 <dcgettext@plt>
  414614:	mov	w1, #0x0                   	// #0
  414618:	mov	x2, x0
  41461c:	mov	w0, #0x1                   	// #1
  414620:	bl	4042e0 <error@plt>
  414624:	mov	w0, #0x2                   	// #2
  414628:	str	w0, [x23]
  41462c:	b	41457c <wcrtomb@plt+0xf62c>
  414630:	mov	x22, #0x0                   	// #0
  414634:	str	xzr, [sp, #144]
  414638:	cmp	x22, #0x1
  41463c:	str	xzr, [sp, #160]
  414640:	ldr	x0, [sp, #112]
  414644:	b.ne	414690 <wcrtomb@plt+0xf740>  // b.any
  414648:	ldr	x2, [x19, #32]
  41464c:	add	x1, sp, #0xa0
  414650:	add	x0, sp, #0x90
  414654:	bl	404ab0 <getline@plt>
  414658:	cmp	x0, #0x0
  41465c:	b.gt	414728 <wcrtomb@plt+0xf7d8>
  414660:	ldr	x0, [x21, #840]
  414664:	bl	424e94 <wcrtomb@plt+0x1ff44>
  414668:	ldr	x0, [sp, #144]
  41466c:	bl	404ae0 <free@plt>
  414670:	ldr	x0, [x19, #32]
  414674:	bl	4043c0 <ferror_unlocked@plt>
  414678:	cbz	w0, 414684 <wcrtomb@plt+0xf734>
  41467c:	ldr	x0, [x21, #840]
  414680:	bl	424e94 <wcrtomb@plt+0x1ff44>
  414684:	ldr	x0, [sp, #112]
  414688:	bl	404ae0 <free@plt>
  41468c:	b	414488 <wcrtomb@plt+0xf538>
  414690:	bl	404870 <strdup@plt>
  414694:	mov	x23, #0x1                   	// #1
  414698:	str	x0, [sp, #144]
  41469c:	bl	404280 <strlen@plt>
  4146a0:	add	x0, x0, #0x1
  4146a4:	str	x0, [sp, #160]
  4146a8:	ldr	x0, [sp, #144]
  4146ac:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  4146b0:	add	x25, x26, #0x30
  4146b4:	add	x1, sp, #0xb8
  4146b8:	mov	w2, #0x0                   	// #0
  4146bc:	bl	41835c <wcrtomb@plt+0x1340c>
  4146c0:	stp	x0, x1, [x25]
  4146c4:	ldr	x0, [x25, #8]
  4146c8:	tbz	x0, #63, 414730 <wcrtomb@plt+0xf7e0>
  4146cc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4146d0:	ldr	x0, [x0, #1016]
  4146d4:	cbz	x0, 4146dc <wcrtomb@plt+0xf78c>
  4146d8:	blr	x0
  4146dc:	bl	404e10 <__errno_location@plt>
  4146e0:	ldr	w20, [x0]
  4146e4:	ldr	x0, [x21, #840]
  4146e8:	bl	436084 <argp_usage@@Base+0x8ba4>
  4146ec:	mov	x19, x0
  4146f0:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4146f4:	add	x1, x1, #0x770
  4146f8:	mov	w2, #0x5                   	// #5
  4146fc:	mov	x0, #0x0                   	// #0
  414700:	bl	404d00 <dcgettext@plt>
  414704:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  414708:	mov	x5, x0
  41470c:	mov	x4, x23
  414710:	mov	x3, x19
  414714:	add	x2, x2, #0x783
  414718:	mov	w1, w20
  41471c:	mov	w0, #0x0                   	// #0
  414720:	bl	4042e0 <error@plt>
  414724:	bl	40d47c <wcrtomb@plt+0x852c>
  414728:	mov	x23, #0x2                   	// #2
  41472c:	b	4146a8 <wcrtomb@plt+0xf758>
  414730:	cmp	x22, #0x1
  414734:	b.ne	4147f4 <wcrtomb@plt+0xf8a4>  // b.any
  414738:	ldr	x24, [sp, #184]
  41473c:	ldrb	w0, [x24]
  414740:	cbz	w0, 4147f4 <wcrtomb@plt+0xf8a4>
  414744:	bl	404e10 <__errno_location@plt>
  414748:	mov	x20, x0
  41474c:	add	x24, x24, #0x1
  414750:	add	x1, sp, #0xb8
  414754:	mov	x0, x24
  414758:	mov	w2, #0xa                   	// #10
  41475c:	str	wzr, [x20]
  414760:	bl	404940 <strtoumax@plt>
  414764:	ldr	w1, [x20]
  414768:	cbnz	w1, 414784 <wcrtomb@plt+0xf834>
  41476c:	mov	x1, #0xc9ff                	// #51711
  414770:	movk	x1, #0x3b9a, lsl #16
  414774:	cmp	x0, x1
  414778:	b.ls	414cc4 <wcrtomb@plt+0xfd74>  // b.plast
  41477c:	mov	w0, #0x22                  	// #34
  414780:	str	w0, [x20]
  414784:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414788:	ldr	x0, [x0, #1016]
  41478c:	cbz	x0, 414794 <wcrtomb@plt+0xf844>
  414790:	blr	x0
  414794:	ldr	x0, [x21, #840]
  414798:	ldr	w24, [x20]
  41479c:	bl	436084 <argp_usage@@Base+0x8ba4>
  4147a0:	mov	x20, x0
  4147a4:	mov	w2, #0x5                   	// #5
  4147a8:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4147ac:	mov	x0, #0x0                   	// #0
  4147b0:	add	x1, x1, #0x770
  4147b4:	bl	404d00 <dcgettext@plt>
  4147b8:	mov	x5, x0
  4147bc:	mov	w1, w24
  4147c0:	mov	w0, #0x0                   	// #0
  4147c4:	mov	x4, x23
  4147c8:	mov	x3, x20
  4147cc:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  4147d0:	add	x2, x2, #0x783
  4147d4:	bl	4042e0 <error@plt>
  4147d8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4147dc:	mov	w1, #0x2                   	// #2
  4147e0:	str	w1, [x0, #3464]
  4147e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  4147e8:	str	x0, [x26, #48]
  4147ec:	mov	x0, #0xffffffffffffffff    	// #-1
  4147f0:	str	x0, [x25, #8]
  4147f4:	mov	x24, #0xc9ff                	// #51711
  4147f8:	movk	x24, #0x3b9a, lsl #16
  4147fc:	ldr	x2, [x19, #32]
  414800:	add	x1, sp, #0xa0
  414804:	add	x0, sp, #0x90
  414808:	bl	404ab0 <getline@plt>
  41480c:	cmp	w0, #0x0
  414810:	b.le	414668 <wcrtomb@plt+0xf718>
  414814:	ldr	x1, [sp, #144]
  414818:	sxtw	x0, w0
  41481c:	sub	x0, x0, #0x1
  414820:	add	x23, x23, #0x1
  414824:	ldrb	w2, [x1]
  414828:	cmp	w2, #0x2b
  41482c:	ldrb	w2, [x1, x0]
  414830:	cset	w25, eq  // eq = none
  414834:	cinc	x28, x1, eq  // eq = none
  414838:	cmp	w2, #0xa
  41483c:	b.ne	414844 <wcrtomb@plt+0xf8f4>  // b.any
  414840:	strb	wzr, [x1, x0]
  414844:	bl	404e10 <__errno_location@plt>
  414848:	mov	x20, x0
  41484c:	cmp	x22, #0x1
  414850:	b.ne	414914 <wcrtomb@plt+0xf9c4>  // b.any
  414854:	add	x1, sp, #0xb8
  414858:	mov	x0, x28
  41485c:	mov	w2, #0x0                   	// #0
  414860:	bl	41835c <wcrtomb@plt+0x1340c>
  414864:	mov	x27, x0
  414868:	ldr	x3, [sp, #184]
  41486c:	tbnz	x1, #63, 41487c <wcrtomb@plt+0xf92c>
  414870:	ldrb	w0, [x3]
  414874:	cmp	w0, #0x20
  414878:	b.eq	4148ac <wcrtomb@plt+0xf95c>  // b.none
  41487c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414880:	ldr	x0, [x0, #1016]
  414884:	cbz	x0, 41488c <wcrtomb@plt+0xf93c>
  414888:	blr	x0
  41488c:	ldr	x0, [x21, #840]
  414890:	ldr	w20, [x20]
  414894:	bl	436084 <argp_usage@@Base+0x8ba4>
  414898:	mov	x19, x0
  41489c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4148a0:	mov	w2, #0x5                   	// #5
  4148a4:	add	x1, x1, #0x78e
  4148a8:	b	4146fc <wcrtomb@plt+0xf7ac>
  4148ac:	str	wzr, [x20]
  4148b0:	add	x1, sp, #0xb8
  4148b4:	mov	x0, x3
  4148b8:	mov	w2, #0xa                   	// #10
  4148bc:	str	x3, [sp, #104]
  4148c0:	bl	404940 <strtoumax@plt>
  4148c4:	mov	x26, x0
  4148c8:	ldr	w0, [x20]
  4148cc:	cbnz	w0, 4148e4 <wcrtomb@plt+0xf994>
  4148d0:	cmp	x26, x24
  4148d4:	ldr	x3, [sp, #104]
  4148d8:	b.ls	414c4c <wcrtomb@plt+0xfcfc>  // b.plast
  4148dc:	mov	w0, #0x22                  	// #34
  4148e0:	str	w0, [x20]
  4148e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4148e8:	ldr	x0, [x0, #1016]
  4148ec:	cbz	x0, 4148f4 <wcrtomb@plt+0xf9a4>
  4148f0:	blr	x0
  4148f4:	ldr	x0, [x21, #840]
  4148f8:	ldr	w20, [x20]
  4148fc:	bl	436084 <argp_usage@@Base+0x8ba4>
  414900:	mov	x19, x0
  414904:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414908:	mov	w2, #0x5                   	// #5
  41490c:	add	x1, x1, #0x7a8
  414910:	b	4146fc <wcrtomb@plt+0xf7ac>
  414914:	mov	x27, #0x0                   	// #0
  414918:	mov	x26, #0x0                   	// #0
  41491c:	b	414c64 <wcrtomb@plt+0xfd14>
  414920:	add	x1, sp, #0xb8
  414924:	mov	x3, #0xffffffffffffffff    	// #-1
  414928:	mov	x2, #0x0                   	// #0
  41492c:	bl	418188 <wcrtomb@plt+0x13238>
  414930:	mov	x4, x0
  414934:	ldr	w0, [x20]
  414938:	ldr	x1, [sp, #184]
  41493c:	cbnz	w0, 41494c <wcrtomb@plt+0xf9fc>
  414940:	ldrb	w0, [x1]
  414944:	cmp	w0, #0x20
  414948:	b.eq	41497c <wcrtomb@plt+0xfa2c>  // b.none
  41494c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414950:	ldr	x0, [x0, #1016]
  414954:	cbz	x0, 41495c <wcrtomb@plt+0xfa0c>
  414958:	blr	x0
  41495c:	ldr	x0, [x21, #840]
  414960:	ldr	w20, [x20]
  414964:	bl	436084 <argp_usage@@Base+0x8ba4>
  414968:	mov	x19, x0
  41496c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414970:	mov	w2, #0x5                   	// #5
  414974:	add	x1, x1, #0x7e6
  414978:	b	4146fc <wcrtomb@plt+0xf7ac>
  41497c:	add	x20, x1, #0x1
  414980:	str	x4, [sp, #104]
  414984:	mov	x0, x20
  414988:	bl	417cd0 <wcrtomb@plt+0x12d80>
  41498c:	ldr	x4, [sp, #104]
  414990:	mov	w5, w25
  414994:	mov	x3, x28
  414998:	mov	x1, x27
  41499c:	mov	x2, x26
  4149a0:	mov	x0, x20
  4149a4:	mov	x7, #0x0                   	// #0
  4149a8:	mov	w6, #0x0                   	// #0
  4149ac:	bl	4132c8 <wcrtomb@plt+0xe378>
  4149b0:	b	4147fc <wcrtomb@plt+0xf8ac>
  4149b4:	mov	x1, #0x0                   	// #0
  4149b8:	add	x0, sp, #0xb8
  4149bc:	adrp	x4, 404000 <mbrtowc@plt-0x1f0>
  4149c0:	adrp	x3, 436000 <argp_usage@@Base+0x8b20>
  4149c4:	add	x4, x4, #0xae0
  4149c8:	add	x3, x3, #0xd44
  4149cc:	mov	x2, #0x0                   	// #0
  4149d0:	bl	437aa0 <_obstack_begin@@Base>
  4149d4:	ldr	x0, [x19, #32]
  4149d8:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4149dc:	adrp	x20, 448000 <_obstack_memory_used@@Base+0x10380>
  4149e0:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x15380>
  4149e4:	add	x1, x1, #0x30
  4149e8:	add	x20, x20, #0x7fb
  4149ec:	add	x22, x22, #0x310
  4149f0:	bl	4131fc <wcrtomb@plt+0xe2ac>
  4149f4:	ldr	x0, [x19, #32]
  4149f8:	add	x4, sp, #0x80
  4149fc:	mov	x1, x20
  414a00:	mov	x3, #0x1                   	// #1
  414a04:	mov	x2, #0x0                   	// #0
  414a08:	bl	412ec8 <wcrtomb@plt+0xdf78>
  414a0c:	tst	w0, #0xff
  414a10:	b.eq	414670 <wcrtomb@plt+0xf720>  // b.none
  414a14:	ldr	x0, [sp, #128]
  414a18:	add	x1, sp, #0x90
  414a1c:	cmp	x0, #0x0
  414a20:	ldr	x0, [x19, #32]
  414a24:	cset	w26, ne  // ne = any
  414a28:	bl	4131fc <wcrtomb@plt+0xe2ac>
  414a2c:	ldr	x0, [x19, #32]
  414a30:	add	x4, sp, #0x80
  414a34:	mov	x1, x22
  414a38:	mov	x3, #0xffffffffffffffff    	// #-1
  414a3c:	mov	x2, #0x0                   	// #0
  414a40:	bl	412ec8 <wcrtomb@plt+0xdf78>
  414a44:	tst	w0, #0xff
  414a48:	b.eq	414bfc <wcrtomb@plt+0xfcac>  // b.none
  414a4c:	ldr	x0, [x19, #32]
  414a50:	add	x4, sp, #0x80
  414a54:	mov	x3, #0xffffffffffffffff    	// #-1
  414a58:	mov	x2, #0x0                   	// #0
  414a5c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414a60:	add	x1, x1, #0x7ff
  414a64:	ldr	x24, [sp, #128]
  414a68:	bl	412ec8 <wcrtomb@plt+0xdf78>
  414a6c:	tst	w0, #0xff
  414a70:	b.eq	414bfc <wcrtomb@plt+0xfcac>  // b.none
  414a74:	ldr	x0, [x19, #32]
  414a78:	add	x2, sp, #0x88
  414a7c:	add	x1, sp, #0xb8
  414a80:	ldr	x25, [sp, #128]
  414a84:	bl	412e14 <wcrtomb@plt+0xdec4>
  414a88:	cbnz	w0, 414bfc <wcrtomb@plt+0xfcac>
  414a8c:	ldp	x23, x1, [sp, #200]
  414a90:	cmp	x23, x1
  414a94:	b.ne	414aa4 <wcrtomb@plt+0xfb54>  // b.any
  414a98:	ldrb	w0, [sp, #264]
  414a9c:	orr	w0, w0, #0x2
  414aa0:	strb	w0, [sp, #264]
  414aa4:	ldr	x0, [sp, #232]
  414aa8:	ldr	x2, [sp, #216]
  414aac:	add	x1, x1, x0
  414ab0:	bic	x0, x1, x0
  414ab4:	ldr	x1, [sp, #192]
  414ab8:	sub	x3, x0, x1
  414abc:	sub	x1, x2, x1
  414ac0:	cmp	x3, x1
  414ac4:	csel	x0, x0, x2, ls  // ls = plast
  414ac8:	stp	x0, x0, [sp, #200]
  414acc:	add	x2, sp, #0x88
  414ad0:	ldr	x0, [x19, #32]
  414ad4:	add	x1, sp, #0xb8
  414ad8:	bl	412e14 <wcrtomb@plt+0xdec4>
  414adc:	cbnz	w0, 414aec <wcrtomb@plt+0xfb9c>
  414ae0:	ldr	x0, [sp, #136]
  414ae4:	cmp	x0, #0x1
  414ae8:	b.hi	414acc <wcrtomb@plt+0xfb7c>  // b.pmore
  414aec:	ldr	x0, [x19, #32]
  414af0:	bl	404890 <getc_unlocked@plt>
  414af4:	cbz	w0, 414b6c <wcrtomb@plt+0xfc1c>
  414af8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414afc:	ldr	x0, [x0, #1016]
  414b00:	cbz	x0, 414b08 <wcrtomb@plt+0xfbb8>
  414b04:	blr	x0
  414b08:	mov	w2, #0x5                   	// #5
  414b0c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414b10:	mov	x0, #0x0                   	// #0
  414b14:	add	x1, x1, #0x803
  414b18:	bl	404d00 <dcgettext@plt>
  414b1c:	mov	x20, x0
  414b20:	ldr	x0, [x21, #840]
  414b24:	bl	436084 <argp_usage@@Base+0x8ba4>
  414b28:	mov	x21, x0
  414b2c:	ldr	x0, [x19, #32]
  414b30:	bl	404c20 <ftello@plt>
  414b34:	add	x1, sp, #0xa0
  414b38:	bl	4313a0 <argp_usage@@Base+0x3ec0>
  414b3c:	mov	w2, #0x5                   	// #5
  414b40:	mov	x19, x0
  414b44:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414b48:	mov	x0, #0x0                   	// #0
  414b4c:	add	x1, x1, #0x813
  414b50:	bl	404d00 <dcgettext@plt>
  414b54:	mov	x4, x19
  414b58:	mov	x5, x0
  414b5c:	mov	x3, x21
  414b60:	mov	x2, x20
  414b64:	mov	w1, #0x0                   	// #0
  414b68:	b	41471c <wcrtomb@plt+0xf7cc>
  414b6c:	ldp	x27, x1, [sp, #200]
  414b70:	cmp	x27, x1
  414b74:	b.ne	414b84 <wcrtomb@plt+0xfc34>  // b.any
  414b78:	ldrb	w0, [sp, #264]
  414b7c:	orr	w0, w0, #0x2
  414b80:	strb	w0, [sp, #264]
  414b84:	ldr	x0, [sp, #232]
  414b88:	mov	x7, x27
  414b8c:	ldr	x2, [sp, #216]
  414b90:	add	x1, x1, x0
  414b94:	bic	x0, x1, x0
  414b98:	mov	w5, w26
  414b9c:	ldr	x1, [sp, #192]
  414ba0:	mov	x4, x25
  414ba4:	mov	w6, #0x0                   	// #0
  414ba8:	sub	x3, x0, x1
  414bac:	sub	x1, x2, x1
  414bb0:	cmp	x3, x1
  414bb4:	mov	x3, x24
  414bb8:	csel	x0, x0, x2, ls  // ls = plast
  414bbc:	stp	x0, x0, [sp, #200]
  414bc0:	mov	x0, x23
  414bc4:	ldp	x1, x2, [sp, #144]
  414bc8:	bl	4132c8 <wcrtomb@plt+0xe378>
  414bcc:	ldr	x0, [sp, #192]
  414bd0:	cmp	x27, x0
  414bd4:	b.ls	414bec <wcrtomb@plt+0xfc9c>  // b.plast
  414bd8:	ldr	x0, [sp, #216]
  414bdc:	cmp	x27, x0
  414be0:	b.cs	414bec <wcrtomb@plt+0xfc9c>  // b.hs, b.nlast
  414be4:	stp	x27, x27, [sp, #200]
  414be8:	b	4149f4 <wcrtomb@plt+0xfaa4>
  414bec:	mov	x1, x27
  414bf0:	add	x0, sp, #0xb8
  414bf4:	bl	437c0c <_obstack_free@@Base>
  414bf8:	b	4149f4 <wcrtomb@plt+0xfaa4>
  414bfc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414c00:	ldr	x0, [x0, #1016]
  414c04:	cbz	x0, 414c0c <wcrtomb@plt+0xfcbc>
  414c08:	blr	x0
  414c0c:	ldr	x0, [x21, #840]
  414c10:	bl	436084 <argp_usage@@Base+0x8ba4>
  414c14:	mov	x19, x0
  414c18:	mov	w2, #0x5                   	// #5
  414c1c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414c20:	mov	x0, #0x0                   	// #0
  414c24:	add	x1, x1, #0x5b1
  414c28:	bl	404d00 <dcgettext@plt>
  414c2c:	mov	x4, x0
  414c30:	mov	x3, x19
  414c34:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  414c38:	mov	w1, #0x0                   	// #0
  414c3c:	add	x2, x2, #0xe6f
  414c40:	mov	w0, #0x0                   	// #0
  414c44:	bl	4042e0 <error@plt>
  414c48:	b	414724 <wcrtomb@plt+0xf7d4>
  414c4c:	ldr	x28, [sp, #184]
  414c50:	cmp	x3, x28
  414c54:	b.eq	4148e4 <wcrtomb@plt+0xf994>  // b.none
  414c58:	ldrb	w0, [x28]
  414c5c:	cmp	w0, #0x20
  414c60:	b.ne	4148e4 <wcrtomb@plt+0xf994>  // b.any
  414c64:	add	x1, sp, #0xb8
  414c68:	mov	x0, x28
  414c6c:	mov	x3, #0xffffffffffffffff    	// #-1
  414c70:	mov	x2, #0x0                   	// #0
  414c74:	bl	418188 <wcrtomb@plt+0x13238>
  414c78:	mov	x28, x0
  414c7c:	ldr	w1, [x20]
  414c80:	ldr	x0, [sp, #184]
  414c84:	cbnz	w1, 414c94 <wcrtomb@plt+0xfd44>
  414c88:	ldrb	w1, [x0]
  414c8c:	cmp	w1, #0x20
  414c90:	b.eq	414920 <wcrtomb@plt+0xf9d0>  // b.none
  414c94:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414c98:	ldr	x0, [x0, #1016]
  414c9c:	cbz	x0, 414ca4 <wcrtomb@plt+0xfd54>
  414ca0:	blr	x0
  414ca4:	ldr	x0, [x21, #840]
  414ca8:	ldr	w20, [x20]
  414cac:	bl	436084 <argp_usage@@Base+0x8ba4>
  414cb0:	mov	x19, x0
  414cb4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414cb8:	mov	w2, #0x5                   	// #5
  414cbc:	add	x1, x1, #0x7d0
  414cc0:	b	4146fc <wcrtomb@plt+0xf7ac>
  414cc4:	ldr	x1, [sp, #184]
  414cc8:	cmp	x24, x1
  414ccc:	b.ne	4147f0 <wcrtomb@plt+0xf8a0>  // b.any
  414cd0:	b	414784 <wcrtomb@plt+0xf834>
  414cd4:	stp	x29, x30, [sp, #-80]!
  414cd8:	mov	x29, sp
  414cdc:	stp	x19, x20, [sp, #16]
  414ce0:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  414ce4:	add	x20, x20, #0x8b0
  414ce8:	stp	x21, x22, [sp, #32]
  414cec:	ldr	x19, [x20, #32]
  414cf0:	cbz	x19, 414e04 <wcrtomb@plt+0xfeb4>
  414cf4:	mov	x0, x19
  414cf8:	mov	w2, #0x0                   	// #0
  414cfc:	mov	x1, #0x0                   	// #0
  414d00:	bl	404aa0 <fseeko@plt>
  414d04:	cbz	w0, 414d14 <wcrtomb@plt+0xfdc4>
  414d08:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414d0c:	ldr	x0, [x0, #840]
  414d10:	bl	4250f4 <wcrtomb@plt+0x201a4>
  414d14:	mov	x0, x19
  414d18:	bl	4044f0 <fileno@plt>
  414d1c:	bl	41dadc <wcrtomb@plt+0x18b8c>
  414d20:	cbz	w0, 414d30 <wcrtomb@plt+0xfde0>
  414d24:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414d28:	ldr	x0, [x0, #840]
  414d2c:	bl	4252fc <wcrtomb@plt+0x203ac>
  414d30:	mov	w5, #0x2                   	// #2
  414d34:	mov	w1, #0x1                   	// #1
  414d38:	mov	x0, x19
  414d3c:	adrp	x4, 448000 <_obstack_memory_used@@Base+0x10380>
  414d40:	adrp	x3, 448000 <_obstack_memory_used@@Base+0x10380>
  414d44:	add	x4, x4, #0x859
  414d48:	add	x3, x3, #0x74c
  414d4c:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  414d50:	add	x2, x2, #0x85e
  414d54:	bl	404a20 <__fprintf_chk@plt>
  414d58:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414d5c:	add	x22, x0, #0x2d0
  414d60:	add	x1, sp, #0x38
  414d64:	ldr	x0, [x0, #720]
  414d68:	bl	431340 <argp_usage@@Base+0x3e60>
  414d6c:	mov	x21, x0
  414d70:	bl	404280 <strlen@plt>
  414d74:	mov	x2, #0x1                   	// #1
  414d78:	mov	x3, x19
  414d7c:	add	x1, x0, x2
  414d80:	mov	x0, x21
  414d84:	bl	404260 <fwrite_unlocked@plt>
  414d88:	ldr	x0, [x22, #8]
  414d8c:	add	x1, sp, #0x38
  414d90:	bl	431400 <argp_usage@@Base+0x3f20>
  414d94:	mov	x21, x0
  414d98:	bl	404280 <strlen@plt>
  414d9c:	mov	x2, #0x1                   	// #1
  414da0:	mov	x3, x19
  414da4:	add	x1, x0, x2
  414da8:	mov	x0, x21
  414dac:	bl	404260 <fwrite_unlocked@plt>
  414db0:	mov	x0, x19
  414db4:	bl	4043c0 <ferror_unlocked@plt>
  414db8:	cbnz	w0, 414dd4 <wcrtomb@plt+0xfe84>
  414dbc:	ldr	x0, [x20, #8]
  414dc0:	cbz	x0, 414dd4 <wcrtomb@plt+0xfe84>
  414dc4:	adrp	x1, 413000 <wcrtomb@plt+0xe0b0>
  414dc8:	mov	x2, x19
  414dcc:	add	x1, x1, #0x950
  414dd0:	bl	430434 <argp_usage@@Base+0x2f54>
  414dd4:	mov	x0, x19
  414dd8:	bl	4043c0 <ferror_unlocked@plt>
  414ddc:	cbz	w0, 414dec <wcrtomb@plt+0xfe9c>
  414de0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414de4:	ldr	x0, [x0, #840]
  414de8:	bl	42534c <wcrtomb@plt+0x203fc>
  414dec:	mov	x0, x19
  414df0:	bl	404570 <fclose@plt>
  414df4:	cbz	w0, 414e04 <wcrtomb@plt+0xfeb4>
  414df8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414dfc:	ldr	x0, [x0, #840]
  414e00:	bl	424d60 <wcrtomb@plt+0x1fe10>
  414e04:	ldp	x19, x20, [sp, #16]
  414e08:	ldp	x21, x22, [sp, #32]
  414e0c:	ldp	x29, x30, [sp], #80
  414e10:	ret
  414e14:	stp	x29, x30, [sp, #-96]!
  414e18:	mov	x29, sp
  414e1c:	stp	x19, x20, [sp, #16]
  414e20:	mov	x19, x0
  414e24:	ldrb	w0, [x0, #376]
  414e28:	stp	x21, x22, [sp, #32]
  414e2c:	stp	x23, x24, [sp, #48]
  414e30:	stp	x25, x26, [sp, #64]
  414e34:	str	x27, [sp, #80]
  414e38:	cbz	w0, 414e94 <wcrtomb@plt+0xff44>
  414e3c:	ldr	x0, [x19, #384]
  414e40:	cbnz	x0, 414e94 <wcrtomb@plt+0xff44>
  414e44:	ldr	x21, [x19, #136]
  414e48:	adrp	x25, 447000 <_obstack_memory_used@@Base+0xf380>
  414e4c:	adrp	x26, 471000 <_obstack_memory_used@@Base+0x39380>
  414e50:	add	x25, x25, #0x41c
  414e54:	mov	x0, x21
  414e58:	bl	436d44 <argp_usage@@Base+0x9864>
  414e5c:	mov	x23, x0
  414e60:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  414e64:	add	x26, x26, #0xd88
  414e68:	mov	x24, x23
  414e6c:	ldr	x0, [x0, #4080]
  414e70:	adrp	x27, 472000 <argp_program_version_hook@@Base+0x250>
  414e74:	bl	405c98 <wcrtomb@plt+0xd48>
  414e78:	mov	x0, x19
  414e7c:	bl	4058a8 <wcrtomb@plt+0x958>
  414e80:	cbnz	x21, 414eb4 <wcrtomb@plt+0xff64>
  414e84:	bl	4058b8 <wcrtomb@plt+0x968>
  414e88:	str	x23, [x19, #384]
  414e8c:	mov	w0, #0x1                   	// #1
  414e90:	strb	w0, [x19, #377]
  414e94:	ldrb	w0, [x19, #376]
  414e98:	ldp	x19, x20, [sp, #16]
  414e9c:	ldp	x21, x22, [sp, #32]
  414ea0:	ldp	x23, x24, [sp, #48]
  414ea4:	ldp	x25, x26, [sp, #64]
  414ea8:	ldr	x27, [sp, #80]
  414eac:	ldp	x29, x30, [sp], #96
  414eb0:	ret
  414eb4:	mov	x0, x21
  414eb8:	bl	4058d0 <wcrtomb@plt+0x980>
  414ebc:	bl	406f04 <wcrtomb@plt+0x1fb4>
  414ec0:	mov	x22, x0
  414ec4:	cbnz	x0, 414efc <wcrtomb@plt+0xffac>
  414ec8:	ldr	x0, [x27, #1016]
  414ecc:	cbz	x0, 414ed4 <wcrtomb@plt+0xff84>
  414ed0:	blr	x0
  414ed4:	mov	x1, x25
  414ed8:	mov	w2, #0x5                   	// #5
  414edc:	mov	x0, #0x0                   	// #0
  414ee0:	bl	404d00 <dcgettext@plt>
  414ee4:	mov	w1, #0x0                   	// #0
  414ee8:	mov	x2, x0
  414eec:	mov	w0, #0x1                   	// #1
  414ef0:	bl	4042e0 <error@plt>
  414ef4:	mov	w0, #0x2                   	// #2
  414ef8:	str	w0, [x26]
  414efc:	mov	x0, x22
  414f00:	bl	405da8 <wcrtomb@plt+0xe58>
  414f04:	cmp	x21, x0
  414f08:	mov	x1, x22
  414f0c:	csel	x20, x21, x0, ls  // ls = plast
  414f10:	mov	x0, x24
  414f14:	mov	x2, x20
  414f18:	add	x24, x24, x20
  414f1c:	bl	404200 <memcpy@plt>
  414f20:	sub	x21, x21, x20
  414f24:	sub	x0, x20, #0x1
  414f28:	add	x0, x22, x0
  414f2c:	bl	405c98 <wcrtomb@plt+0xd48>
  414f30:	b	414e80 <wcrtomb@plt+0xff30>
  414f34:	stp	x29, x30, [sp, #-240]!
  414f38:	mov	x29, sp
  414f3c:	stp	x23, x24, [sp, #48]
  414f40:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  414f44:	add	x23, x23, #0x68
  414f48:	mov	x24, x0
  414f4c:	mov	x0, x23
  414f50:	stp	x19, x20, [sp, #16]
  414f54:	stp	x21, x22, [sp, #32]
  414f58:	stp	x25, x26, [sp, #64]
  414f5c:	stp	x27, x28, [sp, #80]
  414f60:	bl	414e14 <wcrtomb@plt+0xfec4>
  414f64:	tst	w0, #0xff
  414f68:	b.eq	415028 <wcrtomb@plt+0x100d8>  // b.none
  414f6c:	mov	x0, x24
  414f70:	mov	w1, #0x0                   	// #0
  414f74:	bl	419114 <wcrtomb@plt+0x141c4>
  414f78:	mov	x22, x0
  414f7c:	cbz	x0, 415028 <wcrtomb@plt+0x100d8>
  414f80:	ldr	x21, [x23, #384]
  414f84:	mov	w19, #0x0                   	// #0
  414f88:	mov	w20, #0x0                   	// #0
  414f8c:	ldrb	w25, [x21]
  414f90:	cbnz	w25, 414fd4 <wcrtomb@plt+0x10084>
  414f94:	cbz	w19, 415128 <wcrtomb@plt+0x101d8>
  414f98:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414f9c:	ldr	x0, [x0, #1016]
  414fa0:	cbz	x0, 414fa8 <wcrtomb@plt+0x10058>
  414fa4:	blr	x0
  414fa8:	mov	w2, #0x5                   	// #5
  414fac:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414fb0:	mov	x0, #0x0                   	// #0
  414fb4:	add	x1, x1, #0x92f
  414fb8:	bl	404d00 <dcgettext@plt>
  414fbc:	mov	x2, x0
  414fc0:	mov	w3, w19
  414fc4:	mov	w1, #0x0                   	// #0
  414fc8:	mov	w0, #0x0                   	// #0
  414fcc:	bl	4042e0 <error@plt>
  414fd0:	b	41501c <wcrtomb@plt+0x100cc>
  414fd4:	cbz	w19, 415568 <wcrtomb@plt+0x10618>
  414fd8:	cmp	w19, w25
  414fdc:	b.eq	415030 <wcrtomb@plt+0x100e0>  // b.none
  414fe0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  414fe4:	ldr	x0, [x0, #1016]
  414fe8:	cbz	x0, 414ff0 <wcrtomb@plt+0x100a0>
  414fec:	blr	x0
  414ff0:	mov	w2, #0x5                   	// #5
  414ff4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  414ff8:	mov	x0, #0x0                   	// #0
  414ffc:	add	x1, x1, #0x868
  415000:	bl	404d00 <dcgettext@plt>
  415004:	mov	x2, x0
  415008:	mov	w4, w25
  41500c:	mov	w3, w19
  415010:	mov	w1, #0x0                   	// #0
  415014:	mov	w0, #0x0                   	// #0
  415018:	bl	4042e0 <error@plt>
  41501c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  415020:	mov	w1, #0x2                   	// #2
  415024:	str	w1, [x0, #3464]
  415028:	bl	417070 <wcrtomb@plt+0x12120>
  41502c:	b	4151e4 <wcrtomb@plt+0x10294>
  415030:	cmp	w19, #0x54
  415034:	b.eq	4150a8 <wcrtomb@plt+0x10158>  // b.none
  415038:	cmp	w19, #0x52
  41503c:	b.ne	4150f8 <wcrtomb@plt+0x101a8>  // b.any
  415040:	ldrb	w0, [x21, #1]
  415044:	cbnz	w0, 41510c <wcrtomb@plt+0x101bc>
  415048:	cbnz	w20, 415114 <wcrtomb@plt+0x101c4>
  41504c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415050:	ldr	x0, [x0, #1016]
  415054:	cbz	x0, 41505c <wcrtomb@plt+0x1010c>
  415058:	blr	x0
  41505c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415060:	mov	w2, #0x5                   	// #5
  415064:	add	x1, x1, #0x8ba
  415068:	b	41508c <wcrtomb@plt+0x1013c>
  41506c:	cbz	w20, 4150f4 <wcrtomb@plt+0x101a4>
  415070:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415074:	ldr	x0, [x0, #1016]
  415078:	cbz	x0, 415080 <wcrtomb@plt+0x10130>
  41507c:	blr	x0
  415080:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415084:	add	x1, x1, #0x898
  415088:	mov	w2, #0x5                   	// #5
  41508c:	mov	x0, #0x0                   	// #0
  415090:	bl	404d00 <dcgettext@plt>
  415094:	mov	w1, #0x0                   	// #0
  415098:	mov	x2, x0
  41509c:	mov	w0, #0x0                   	// #0
  4150a0:	bl	4042e0 <error@plt>
  4150a4:	b	41501c <wcrtomb@plt+0x100cc>
  4150a8:	ldrb	w0, [x21, #1]
  4150ac:	cbnz	w0, 415120 <wcrtomb@plt+0x101d0>
  4150b0:	cbnz	w20, 415120 <wcrtomb@plt+0x101d0>
  4150b4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4150b8:	ldr	x0, [x0, #1016]
  4150bc:	cbz	x0, 4150c4 <wcrtomb@plt+0x10174>
  4150c0:	blr	x0
  4150c4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4150c8:	mov	w2, #0x5                   	// #5
  4150cc:	add	x1, x1, #0x90a
  4150d0:	b	41508c <wcrtomb@plt+0x1013c>
  4150d4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4150d8:	ldr	x0, [x0, #1016]
  4150dc:	cbz	x0, 4150e4 <wcrtomb@plt+0x10194>
  4150e0:	blr	x0
  4150e4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4150e8:	mov	w2, #0x5                   	// #5
  4150ec:	add	x1, x1, #0x8df
  4150f0:	b	41508c <wcrtomb@plt+0x1013c>
  4150f4:	mov	w20, #0x1                   	// #1
  4150f8:	mov	x0, x21
  4150fc:	bl	404280 <strlen@plt>
  415100:	add	x0, x0, #0x1
  415104:	add	x21, x21, x0
  415108:	b	414f8c <wcrtomb@plt+0x1003c>
  41510c:	mov	w19, #0x54                  	// #84
  415110:	b	4150f8 <wcrtomb@plt+0x101a8>
  415114:	mov	w19, #0x54                  	// #84
  415118:	mov	w20, #0x0                   	// #0
  41511c:	b	4150f8 <wcrtomb@plt+0x101a8>
  415120:	mov	w19, #0x0                   	// #0
  415124:	b	4150f8 <wcrtomb@plt+0x101a8>
  415128:	cbz	w20, 41516c <wcrtomb@plt+0x1021c>
  41512c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  415130:	ldr	w0, [x0, #480]
  415134:	tbz	w0, #1, 41516c <wcrtomb@plt+0x1021c>
  415138:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41513c:	ldr	x0, [x0, #1016]
  415140:	cbz	x0, 415148 <wcrtomb@plt+0x101f8>
  415144:	blr	x0
  415148:	mov	w2, #0x5                   	// #5
  41514c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415150:	mov	x0, #0x0                   	// #0
  415154:	add	x1, x1, #0x966
  415158:	bl	404d00 <dcgettext@plt>
  41515c:	mov	x2, x0
  415160:	mov	w1, #0x0                   	// #0
  415164:	mov	w0, #0x0                   	// #0
  415168:	bl	4042e0 <error@plt>
  41516c:	ldr	x20, [x23, #384]
  415170:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  415174:	adrp	x26, 448000 <_obstack_memory_used@@Base+0x10380>
  415178:	add	x25, x25, #0x3c0
  41517c:	add	x26, x26, #0x988
  415180:	mov	x19, #0x0                   	// #0
  415184:	mov	w27, #0x2f                  	// #47
  415188:	ldrb	w0, [x20]
  41518c:	cbnz	w0, 415200 <wcrtomb@plt+0x102b0>
  415190:	mov	x0, x19
  415194:	bl	404ae0 <free@plt>
  415198:	ldr	x0, [x23, #384]
  41519c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4151a0:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  4151a4:	add	x1, x1, #0x640
  4151a8:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  4151ac:	mov	x20, x22
  4151b0:	bl	412bbc <wcrtomb@plt+0xdc6c>
  4151b4:	add	x25, x25, #0x258
  4151b8:	mov	x21, x0
  4151bc:	add	x23, x23, #0x5d
  4151c0:	mov	x19, #0x0                   	// #0
  4151c4:	ldrb	w0, [x20]
  4151c8:	cbnz	w0, 415370 <wcrtomb@plt+0x10420>
  4151cc:	mov	x0, x19
  4151d0:	bl	404ae0 <free@plt>
  4151d4:	mov	x0, x21
  4151d8:	bl	412938 <wcrtomb@plt+0xd9e8>
  4151dc:	mov	x0, x22
  4151e0:	bl	404ae0 <free@plt>
  4151e4:	ldp	x19, x20, [sp, #16]
  4151e8:	ldp	x21, x22, [sp, #32]
  4151ec:	ldp	x23, x24, [sp, #48]
  4151f0:	ldp	x25, x26, [sp, #64]
  4151f4:	ldp	x27, x28, [sp, #80]
  4151f8:	ldp	x29, x30, [sp], #240
  4151fc:	ret
  415200:	cmp	w0, #0x58
  415204:	b.ne	4152c8 <wcrtomb@plt+0x10378>  // b.any
  415208:	add	x28, x20, #0x1
  41520c:	mov	x0, x28
  415210:	bl	404280 <strlen@plt>
  415214:	mov	x21, x0
  415218:	add	x1, x0, #0xc
  41521c:	mov	x0, x19
  415220:	bl	436da4 <argp_usage@@Base+0x98c4>
  415224:	mov	x19, x0
  415228:	mov	x2, x21
  41522c:	mov	x1, x28
  415230:	bl	404200 <memcpy@plt>
  415234:	ldr	x1, [x26]
  415238:	strb	w27, [x19, x21]
  41523c:	add	x21, x21, #0x1
  415240:	add	x0, x19, x21
  415244:	str	x1, [x19, x21]
  415248:	ldur	w1, [x26, #7]
  41524c:	stur	w1, [x0, #7]
  415250:	mov	x0, x19
  415254:	bl	404960 <mkdtemp@plt>
  415258:	cbnz	x0, 415354 <wcrtomb@plt+0x10404>
  41525c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415260:	ldr	x0, [x0, #1016]
  415264:	cbz	x0, 41526c <wcrtomb@plt+0x1031c>
  415268:	blr	x0
  41526c:	bl	404e10 <__errno_location@plt>
  415270:	ldr	w21, [x0]
  415274:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415278:	add	x1, x1, #0x993
  41527c:	mov	w2, #0x5                   	// #5
  415280:	mov	x0, #0x0                   	// #0
  415284:	bl	404d00 <dcgettext@plt>
  415288:	mov	x20, x0
  41528c:	mov	x0, x19
  415290:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  415294:	mov	w1, w21
  415298:	mov	x3, x0
  41529c:	mov	x2, x20
  4152a0:	mov	w0, #0x0                   	// #0
  4152a4:	bl	4042e0 <error@plt>
  4152a8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4152ac:	mov	w1, #0x2                   	// #2
  4152b0:	str	w1, [x0, #3464]
  4152b4:	mov	x0, x19
  4152b8:	bl	404ae0 <free@plt>
  4152bc:	mov	x0, x22
  4152c0:	bl	404ae0 <free@plt>
  4152c4:	b	415028 <wcrtomb@plt+0x100d8>
  4152c8:	cmp	w0, #0x52
  4152cc:	b.ne	415354 <wcrtomb@plt+0x10404>  // b.any
  4152d0:	mov	x0, x20
  4152d4:	bl	404280 <strlen@plt>
  4152d8:	add	x28, x0, #0x1
  4152dc:	ldrb	w0, [x20, #1]
  4152e0:	add	x28, x20, x28
  4152e4:	add	x3, x20, #0x1
  4152e8:	add	x21, x28, #0x1
  4152ec:	cbz	w0, 415304 <wcrtomb@plt+0x103b4>
  4152f0:	ldrb	w2, [x25]
  4152f4:	mov	x0, x3
  4152f8:	mov	w1, #0x0                   	// #0
  4152fc:	bl	425478 <wcrtomb@plt+0x20528>
  415300:	mov	x3, x0
  415304:	ldrb	w0, [x28, #1]
  415308:	cbz	w0, 415328 <wcrtomb@plt+0x103d8>
  41530c:	ldrb	w2, [x25]
  415310:	mov	x0, x21
  415314:	mov	w1, #0x0                   	// #0
  415318:	str	x3, [sp, #104]
  41531c:	bl	425478 <wcrtomb@plt+0x20528>
  415320:	mov	x21, x0
  415324:	ldr	x3, [sp, #104]
  415328:	ldrb	w0, [x3]
  41532c:	cbz	w0, 415368 <wcrtomb@plt+0x10418>
  415330:	ldrb	w0, [x21]
  415334:	cmp	w0, #0x0
  415338:	csel	x21, x21, x19, ne  // ne = any
  41533c:	mov	x1, x21
  415340:	mov	x0, x3
  415344:	bl	410048 <wcrtomb@plt+0xb0f8>
  415348:	tst	w0, #0xff
  41534c:	b.eq	4152b4 <wcrtomb@plt+0x10364>  // b.none
  415350:	mov	x20, x28
  415354:	mov	x0, x20
  415358:	bl	404280 <strlen@plt>
  41535c:	add	x0, x0, #0x1
  415360:	add	x20, x20, x0
  415364:	b	415188 <wcrtomb@plt+0x10238>
  415368:	mov	x3, x19
  41536c:	b	41533c <wcrtomb@plt+0x103ec>
  415370:	mov	x0, x19
  415374:	bl	404ae0 <free@plt>
  415378:	mov	x1, x20
  41537c:	mov	x0, x24
  415380:	bl	41b368 <wcrtomb@plt+0x16418>
  415384:	mov	x19, x0
  415388:	add	x1, sp, #0x70
  41538c:	bl	4186c8 <wcrtomb@plt+0x13778>
  415390:	cbz	w0, 4153f4 <wcrtomb@plt+0x104a4>
  415394:	bl	404e10 <__errno_location@plt>
  415398:	ldr	w0, [x0]
  41539c:	cmp	w0, #0x2
  4153a0:	b.eq	415420 <wcrtomb@plt+0x104d0>  // b.none
  4153a4:	mov	x0, x19
  4153a8:	bl	418c90 <wcrtomb@plt+0x13d40>
  4153ac:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4153b0:	ldr	x0, [x0, #1016]
  4153b4:	cbz	x0, 4153bc <wcrtomb@plt+0x1046c>
  4153b8:	blr	x0
  4153bc:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4153c0:	add	x1, x1, #0x9c7
  4153c4:	mov	w2, #0x5                   	// #5
  4153c8:	mov	x0, #0x0                   	// #0
  4153cc:	bl	404d00 <dcgettext@plt>
  4153d0:	mov	x26, x0
  4153d4:	mov	x0, x19
  4153d8:	bl	436084 <argp_usage@@Base+0x8ba4>
  4153dc:	mov	x3, x0
  4153e0:	mov	x2, x26
  4153e4:	mov	w1, #0x0                   	// #0
  4153e8:	mov	w0, #0x0                   	// #0
  4153ec:	bl	4042e0 <error@plt>
  4153f0:	b	415420 <wcrtomb@plt+0x104d0>
  4153f4:	mov	x1, x20
  4153f8:	mov	x0, x21
  4153fc:	bl	412b78 <wcrtomb@plt+0xdc28>
  415400:	cbz	x0, 41544c <wcrtomb@plt+0x104fc>
  415404:	ldrb	w0, [x0]
  415408:	cmp	w0, #0x44
  41540c:	b.ne	415434 <wcrtomb@plt+0x104e4>  // b.any
  415410:	ldr	w0, [sp, #128]
  415414:	and	w0, w0, #0xf000
  415418:	cmp	w0, #0x4, lsl #12
  41541c:	b.ne	41544c <wcrtomb@plt+0x104fc>  // b.any
  415420:	mov	x0, x20
  415424:	bl	404280 <strlen@plt>
  415428:	add	x0, x0, #0x1
  41542c:	add	x20, x20, x0
  415430:	b	4151c4 <wcrtomb@plt+0x10274>
  415434:	cmp	w0, #0x59
  415438:	b.ne	415420 <wcrtomb@plt+0x104d0>  // b.any
  41543c:	ldr	w0, [sp, #128]
  415440:	and	w0, w0, #0xf000
  415444:	cmp	w0, #0x4, lsl #12
  415448:	b.ne	415420 <wcrtomb@plt+0x104d0>  // b.any
  41544c:	ldrb	w0, [x23]
  415450:	cbz	w0, 415488 <wcrtomb@plt+0x10538>
  415454:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415458:	ldr	x1, [sp, #112]
  41545c:	ldr	x0, [x0, #832]
  415460:	cmp	x1, x0
  415464:	b.eq	415488 <wcrtomb@plt+0x10538>  // b.none
  415468:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41546c:	ldr	x0, [x0, #1016]
  415470:	cbz	x0, 415478 <wcrtomb@plt+0x10528>
  415474:	blr	x0
  415478:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41547c:	mov	w2, #0x5                   	// #5
  415480:	add	x1, x1, #0x9f1
  415484:	b	4153c8 <wcrtomb@plt+0x10478>
  415488:	ldrb	w0, [x25]
  41548c:	cbnz	w0, 415550 <wcrtomb@plt+0x10600>
  415490:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415494:	ldr	w0, [x0, #652]
  415498:	cbz	w0, 4154e4 <wcrtomb@plt+0x10594>
  41549c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4154a0:	mov	w2, #0x5                   	// #5
  4154a4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4154a8:	add	x1, x1, #0xa25
  4154ac:	ldr	x27, [x0, #3936]
  4154b0:	mov	x0, #0x0                   	// #0
  4154b4:	bl	404d00 <dcgettext@plt>
  4154b8:	mov	x26, x0
  4154bc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4154c0:	ldr	x28, [x0, #3552]
  4154c4:	mov	x0, x19
  4154c8:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  4154cc:	mov	x4, x0
  4154d0:	mov	x3, x28
  4154d4:	mov	x2, x26
  4154d8:	mov	x0, x27
  4154dc:	mov	w1, #0x1                   	// #1
  4154e0:	bl	404a20 <__fprintf_chk@plt>
  4154e4:	mov	x0, x19
  4154e8:	mov	w1, #0x1                   	// #1
  4154ec:	bl	4191f8 <wcrtomb@plt+0x142a8>
  4154f0:	cbnz	w0, 415420 <wcrtomb@plt+0x104d0>
  4154f4:	bl	404e10 <__errno_location@plt>
  4154f8:	ldr	w27, [x0]
  4154fc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415500:	ldr	x0, [x0, #1016]
  415504:	cbz	x0, 41550c <wcrtomb@plt+0x105bc>
  415508:	blr	x0
  41550c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415510:	add	x1, x1, #0xa36
  415514:	mov	w2, #0x5                   	// #5
  415518:	mov	x0, #0x0                   	// #0
  41551c:	bl	404d00 <dcgettext@plt>
  415520:	mov	x26, x0
  415524:	mov	x0, x19
  415528:	bl	436084 <argp_usage@@Base+0x8ba4>
  41552c:	mov	w1, w27
  415530:	mov	x3, x0
  415534:	mov	x2, x26
  415538:	mov	w0, #0x0                   	// #0
  41553c:	bl	4042e0 <error@plt>
  415540:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  415544:	mov	w1, #0x2                   	// #2
  415548:	str	w1, [x0, #3464]
  41554c:	b	415420 <wcrtomb@plt+0x104d0>
  415550:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  415554:	mov	x1, x19
  415558:	add	x0, x0, #0x34
  41555c:	bl	41f1c0 <wcrtomb@plt+0x1a270>
  415560:	cbnz	w0, 415490 <wcrtomb@plt+0x10540>
  415564:	b	415420 <wcrtomb@plt+0x104d0>
  415568:	cmp	w25, #0x54
  41556c:	b.eq	4150d4 <wcrtomb@plt+0x10184>  // b.none
  415570:	cmp	w25, #0x58
  415574:	b.eq	41506c <wcrtomb@plt+0x1011c>  // b.none
  415578:	cmp	w25, #0x52
  41557c:	b	41503c <wcrtomb@plt+0x100ec>
  415580:	stp	x29, x30, [sp, #-64]!
  415584:	mov	x29, sp
  415588:	stp	x19, x20, [sp, #16]
  41558c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  415590:	mov	x19, x0
  415594:	add	x20, x20, #0xf60
  415598:	stp	x21, x22, [sp, #32]
  41559c:	add	x21, x0, x1
  4155a0:	str	x23, [sp, #48]
  4155a4:	adrp	x23, 448000 <_obstack_memory_used@@Base+0x10380>
  4155a8:	add	x23, x23, #0xa68
  4155ac:	mov	w22, #0x0                   	// #0
  4155b0:	cmp	x21, x19
  4155b4:	b.ne	4155cc <wcrtomb@plt+0x1067c>  // b.any
  4155b8:	ldp	x19, x20, [sp, #16]
  4155bc:	ldp	x21, x22, [sp, #32]
  4155c0:	ldr	x23, [sp, #48]
  4155c4:	ldp	x29, x30, [sp], #64
  4155c8:	ret
  4155cc:	ldrb	w0, [x19], #1
  4155d0:	ldr	x1, [x20]
  4155d4:	cmp	w0, #0x44
  4155d8:	b.eq	415614 <wcrtomb@plt+0x106c4>  // b.none
  4155dc:	b.hi	4155ec <wcrtomb@plt+0x1069c>  // b.pmore
  4155e0:	cbz	w0, 415630 <wcrtomb@plt+0x106e0>
  4155e4:	bl	404cb0 <fputc_unlocked@plt>
  4155e8:	b	4155b0 <wcrtomb@plt+0x10660>
  4155ec:	sub	w2, w0, #0x4e
  4155f0:	and	w3, w2, #0xff
  4155f4:	cmp	w3, #0xb
  4155f8:	b.hi	4155e4 <wcrtomb@plt+0x10694>  // b.pmore
  4155fc:	cmp	w2, #0xb
  415600:	b.hi	4155e4 <wcrtomb@plt+0x10694>  // b.pmore
  415604:	ldrb	w2, [x23, w2, uxtw]
  415608:	adr	x3, 415614 <wcrtomb@plt+0x106c4>
  41560c:	add	x2, x3, w2, sxtb #2
  415610:	br	x2
  415614:	bl	404420 <fputc@plt>
  415618:	cbnz	w22, 415628 <wcrtomb@plt+0x106d8>
  41561c:	ldr	x1, [x20]
  415620:	mov	w0, #0x20                  	// #32
  415624:	bl	404420 <fputc@plt>
  415628:	mov	w22, #0x1                   	// #1
  41562c:	b	4155b0 <wcrtomb@plt+0x10660>
  415630:	mov	w0, #0xa                   	// #10
  415634:	mov	w22, #0x0                   	// #0
  415638:	bl	404cb0 <fputc_unlocked@plt>
  41563c:	b	4155b0 <wcrtomb@plt+0x10660>
  415640:	stp	x29, x30, [sp, #-32]!
  415644:	mov	x29, sp
  415648:	ldr	w1, [x1]
  41564c:	str	x19, [sp, #16]
  415650:	cmp	w1, #0x2
  415654:	b.eq	41567c <wcrtomb@plt+0x1072c>  // b.none
  415658:	mov	x19, x0
  41565c:	cmp	w1, #0x4
  415660:	b.eq	4156b8 <wcrtomb@plt+0x10768>  // b.none
  415664:	cmp	w1, #0x1
  415668:	b.ne	415690 <wcrtomb@plt+0x10740>  // b.any
  41566c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  415670:	ldrb	w2, [x1, #960]
  415674:	mov	w1, #0x0                   	// #0
  415678:	b	415688 <wcrtomb@plt+0x10738>
  41567c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  415680:	ldrb	w2, [x1, #960]
  415684:	mov	w1, #0x1                   	// #1
  415688:	bl	425478 <wcrtomb@plt+0x20528>
  41568c:	mov	x19, x0
  415690:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415694:	ldr	x1, [x0, #888]
  415698:	cbz	x1, 4156b8 <wcrtomb@plt+0x10768>
  41569c:	mov	x0, x19
  4156a0:	bl	41b400 <wcrtomb@plt+0x164b0>
  4156a4:	cmn	x0, #0x1
  4156a8:	b.ne	4156b4 <wcrtomb@plt+0x10764>  // b.any
  4156ac:	mov	x0, x19
  4156b0:	bl	404280 <strlen@plt>
  4156b4:	add	x19, x19, x0
  4156b8:	mov	x0, x19
  4156bc:	ldr	x19, [sp, #16]
  4156c0:	ldp	x29, x30, [sp], #32
  4156c4:	ret
  4156c8:	sub	sp, sp, #0x490
  4156cc:	stp	x29, x30, [sp]
  4156d0:	mov	x29, sp
  4156d4:	stp	x19, x20, [sp, #16]
  4156d8:	mov	x20, x1
  4156dc:	and	w19, w5, #0xff
  4156e0:	stp	x21, x22, [sp, #32]
  4156e4:	mov	x22, x2
  4156e8:	and	w21, w6, #0xff
  4156ec:	stp	x23, x24, [sp, #48]
  4156f0:	mov	x23, x3
  4156f4:	mov	x24, x4
  4156f8:	stp	x25, x26, [sp, #64]
  4156fc:	mov	x25, x0
  415700:	stp	x27, x28, [sp, #80]
  415704:	add	x27, x0, x1
  415708:	ldrb	w0, [x0]
  41570c:	cmp	w0, #0x0
  415710:	cinc	x28, x25, eq  // eq = none
  415714:	cmp	x28, x27
  415718:	b.ne	415794 <wcrtomb@plt+0x10844>  // b.any
  41571c:	cmp	x22, #0x0
  415720:	eor	w21, w21, #0x1
  415724:	cset	w0, ne  // ne = any
  415728:	tst	w0, w21
  41572c:	b.ne	415758 <wcrtomb@plt+0x10808>  // b.any
  415730:	mov	x0, #0xffffffffffffffff    	// #-1
  415734:	mov	sp, x29
  415738:	ldp	x29, x30, [sp]
  41573c:	ldp	x19, x20, [sp, #16]
  415740:	ldp	x21, x22, [sp, #32]
  415744:	ldp	x23, x24, [sp, #48]
  415748:	ldp	x25, x26, [sp, #64]
  41574c:	ldp	x27, x28, [sp, #80]
  415750:	add	sp, sp, #0x490
  415754:	ret
  415758:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41575c:	ldr	x0, [x0, #1016]
  415760:	cbz	x0, 415768 <wcrtomb@plt+0x10818>
  415764:	blr	x0
  415768:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41576c:	add	x1, x1, #0xb10
  415770:	mov	w2, #0x5                   	// #5
  415774:	mov	x0, #0x0                   	// #0
  415778:	bl	404d00 <dcgettext@plt>
  41577c:	mov	x3, x22
  415780:	mov	x2, x0
  415784:	mov	w1, #0x0                   	// #0
  415788:	mov	w0, #0x0                   	// #0
  41578c:	bl	4042e0 <error@plt>
  415790:	b	415af8 <wcrtomb@plt+0x10ba8>
  415794:	bl	404a60 <__ctype_b_loc@plt>
  415798:	str	x0, [x29, #104]
  41579c:	ldrb	w1, [x28]
  4157a0:	ldr	x0, [x0]
  4157a4:	ldrb	w2, [x28]
  4157a8:	ldrh	w0, [x0, x1, lsl #1]
  4157ac:	tbz	w0, #13, 4157b8 <wcrtomb@plt+0x10868>
  4157b0:	add	x28, x28, #0x1
  4157b4:	b	415714 <wcrtomb@plt+0x107c4>
  4157b8:	sub	w3, w2, #0x30
  4157bc:	neg	x23, x23
  4157c0:	cmp	w3, #0x7
  4157c4:	b.hi	415944 <wcrtomb@plt+0x109f4>  // b.pmore
  4157c8:	mov	x20, x28
  4157cc:	mov	w1, #0x0                   	// #0
  4157d0:	mov	x19, #0x0                   	// #0
  4157d4:	ldrb	w4, [x20], #1
  4157d8:	sub	w4, w4, #0x30
  4157dc:	cmp	x27, x20
  4157e0:	add	x19, x19, w4, sxtw
  4157e4:	b.eq	41580c <wcrtomb@plt+0x108bc>  // b.none
  4157e8:	ldrb	w0, [x20]
  4157ec:	sub	w0, w0, #0x30
  4157f0:	cmp	w0, #0x7
  4157f4:	b.hi	41580c <wcrtomb@plt+0x108bc>  // b.pmore
  4157f8:	tst	x19, #0xe000000000000000
  4157fc:	lsl	x19, x19, #3
  415800:	cset	w0, ne  // ne = any
  415804:	orr	w1, w1, w0
  415808:	b	4157d4 <wcrtomb@plt+0x10884>
  41580c:	cmp	x19, x24
  415810:	cset	w6, hi  // hi = pmore
  415814:	orr	w26, w1, w6
  415818:	cbz	w26, 415cb0 <wcrtomb@plt+0x10d60>
  41581c:	cmp	w2, #0x31
  415820:	b.ls	4158e8 <wcrtomb@plt+0x10998>  // b.plast
  415824:	cbz	x22, 415c98 <wcrtomb@plt+0x10d48>
  415828:	orr	w3, w3, #0x4
  41582c:	mov	x20, x28
  415830:	mov	w1, #0x0                   	// #0
  415834:	mov	x19, #0x0                   	// #0
  415838:	mov	w2, #0x7                   	// #7
  41583c:	sub	w3, w2, w3
  415840:	add	x20, x20, #0x1
  415844:	cmp	x27, x20
  415848:	add	x19, x19, w3, sxtw
  41584c:	b.eq	415874 <wcrtomb@plt+0x10924>  // b.none
  415850:	ldrb	w3, [x20]
  415854:	sub	w3, w3, #0x30
  415858:	cmp	w3, #0x7
  41585c:	b.hi	415874 <wcrtomb@plt+0x10924>  // b.pmore
  415860:	tst	x19, #0xe000000000000000
  415864:	lsl	x19, x19, #3
  415868:	cset	w0, ne  // ne = any
  41586c:	orr	w1, w1, w0
  415870:	b	41583c <wcrtomb@plt+0x108ec>
  415874:	adds	x19, x19, #0x1
  415878:	cset	w0, eq  // eq = none
  41587c:	cmp	x23, x19
  415880:	orr	w1, w1, w0
  415884:	cset	w6, cs  // cs = hs, nlast
  415888:	eor	w0, w1, #0x1
  41588c:	ands	w26, w6, w0
  415890:	b.eq	4158e8 <wcrtomb@plt+0x10998>  // b.none
  415894:	cbnz	w21, 4158d8 <wcrtomb@plt+0x10988>
  415898:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41589c:	ldr	x0, [x0, #1016]
  4158a0:	cbz	x0, 4158a8 <wcrtomb@plt+0x10958>
  4158a4:	blr	x0
  4158a8:	mov	w2, #0x5                   	// #5
  4158ac:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4158b0:	mov	x0, #0x0                   	// #0
  4158b4:	add	x1, x1, #0xb41
  4158b8:	bl	404d00 <dcgettext@plt>
  4158bc:	mov	x2, x0
  4158c0:	mov	x5, x22
  4158c4:	mov	x4, x28
  4158c8:	sub	w3, w20, w28
  4158cc:	mov	w1, #0x0                   	// #0
  4158d0:	mov	w0, #0x0                   	// #0
  4158d4:	bl	4042e0 <error@plt>
  4158d8:	cmp	x27, x20
  4158dc:	b.eq	415c8c <wcrtomb@plt+0x10d3c>  // b.none
  4158e0:	mov	x28, x20
  4158e4:	b	4159d8 <wcrtomb@plt+0x10a88>
  4158e8:	cbz	w1, 415c9c <wcrtomb@plt+0x10d4c>
  4158ec:	cmp	x22, #0x0
  4158f0:	eor	w21, w21, #0x1
  4158f4:	cset	w0, ne  // ne = any
  4158f8:	tst	w0, w21
  4158fc:	b.eq	415730 <wcrtomb@plt+0x107e0>  // b.none
  415900:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415904:	ldr	x0, [x0, #1016]
  415908:	cbz	x0, 415910 <wcrtomb@plt+0x109c0>
  41590c:	blr	x0
  415910:	mov	w2, #0x5                   	// #5
  415914:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415918:	mov	x0, #0x0                   	// #0
  41591c:	add	x1, x1, #0xb88
  415920:	bl	404d00 <dcgettext@plt>
  415924:	mov	x5, x22
  415928:	mov	x4, x28
  41592c:	sub	w3, w20, w28
  415930:	mov	x2, x0
  415934:	mov	w1, #0x0                   	// #0
  415938:	mov	w0, #0x0                   	// #0
  41593c:	bl	4042e0 <error@plt>
  415940:	b	415af8 <wcrtomb@plt+0x10ba8>
  415944:	cbnz	w19, 415c68 <wcrtomb@plt+0x10d18>
  415948:	cmp	w2, #0x2d
  41594c:	mov	w0, #0x2b                  	// #43
  415950:	ccmp	w2, w0, #0x4, ne  // ne = any
  415954:	b.ne	415b18 <wcrtomb@plt+0x10bc8>  // b.any
  415958:	cbnz	w21, 4159a4 <wcrtomb@plt+0x10a54>
  41595c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  415960:	ldrb	w1, [x0, #2264]
  415964:	cbnz	w1, 4159a4 <wcrtomb@plt+0x10a54>
  415968:	mov	w1, #0x1                   	// #1
  41596c:	strb	w1, [x0, #2264]
  415970:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415974:	ldr	x0, [x0, #1016]
  415978:	cbz	x0, 415980 <wcrtomb@plt+0x10a30>
  41597c:	blr	x0
  415980:	mov	w2, #0x5                   	// #5
  415984:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415988:	mov	x0, #0x0                   	// #0
  41598c:	add	x1, x1, #0xbb4
  415990:	bl	404d00 <dcgettext@plt>
  415994:	mov	x2, x0
  415998:	mov	w1, #0x0                   	// #0
  41599c:	mov	w0, #0x0                   	// #0
  4159a0:	bl	4042e0 <error@plt>
  4159a4:	ldrb	w0, [x28], #1
  4159a8:	mov	x19, #0x0                   	// #0
  4159ac:	cmp	w0, #0x2d
  4159b0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4159b4:	add	x0, x0, #0x8d8
  4159b8:	cset	w26, eq  // eq = none
  4159bc:	add	x0, x0, #0x1
  4159c0:	cmp	x28, x27
  4159c4:	b.eq	415bac <wcrtomb@plt+0x10c5c>  // b.none
  4159c8:	ldrb	w1, [x28]
  4159cc:	ldrb	w1, [x0, x1]
  4159d0:	cmp	w1, #0x3f
  4159d4:	b.ls	415a70 <wcrtomb@plt+0x10b20>  // b.plast
  4159d8:	ldrb	w0, [x28]
  4159dc:	cbz	w0, 415bac <wcrtomb@plt+0x10c5c>
  4159e0:	ldr	x1, [x29, #104]
  4159e4:	ubfiz	x0, x0, #1, #8
  4159e8:	ldr	x1, [x1]
  4159ec:	ldrh	w0, [x1, x0]
  4159f0:	tbnz	w0, #13, 415bac <wcrtomb@plt+0x10c5c>
  4159f4:	cbz	x22, 415730 <wcrtomb@plt+0x107e0>
  4159f8:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4159fc:	add	x19, x19, #0x8d8
  415a00:	ldr	x0, [x19, #264]
  415a04:	cbnz	x0, 415a18 <wcrtomb@plt+0x10ac8>
  415a08:	bl	435bbc <argp_usage@@Base+0x86dc>
  415a0c:	str	x0, [x19, #264]
  415a10:	mov	w1, #0x8                   	// #8
  415a14:	bl	435c24 <argp_usage@@Base+0x8744>
  415a18:	cmp	x27, x25
  415a1c:	b.ne	415c74 <wcrtomb@plt+0x10d24>  // b.any
  415a20:	ldr	x4, [x19, #264]
  415a24:	sub	x3, x27, x25
  415a28:	mov	x2, x25
  415a2c:	add	x0, x29, #0xa8
  415a30:	mov	x1, #0x3e8                 	// #1000
  415a34:	bl	435cdc <argp_usage@@Base+0x87fc>
  415a38:	cbnz	w21, 415730 <wcrtomb@plt+0x107e0>
  415a3c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415a40:	ldr	x0, [x0, #1016]
  415a44:	cbz	x0, 415a4c <wcrtomb@plt+0x10afc>
  415a48:	blr	x0
  415a4c:	mov	w2, #0x5                   	// #5
  415a50:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415a54:	mov	x0, #0x0                   	// #0
  415a58:	add	x1, x1, #0xc3f
  415a5c:	bl	404d00 <dcgettext@plt>
  415a60:	mov	x5, x22
  415a64:	add	x4, x29, #0xa8
  415a68:	mov	w3, #0x3e8                 	// #1000
  415a6c:	b	415930 <wcrtomb@plt+0x109e0>
  415a70:	tst	x19, #0xfc00000000000000
  415a74:	b.eq	415b08 <wcrtomb@plt+0x10bb8>  // b.none
  415a78:	add	x0, x20, #0x10
  415a7c:	mov	x2, x20
  415a80:	and	x0, x0, #0xfffffffffffffff0
  415a84:	mov	x1, x25
  415a88:	sub	sp, sp, x0
  415a8c:	eor	w21, w21, #0x1
  415a90:	mov	x23, sp
  415a94:	mov	x0, x23
  415a98:	bl	404200 <memcpy@plt>
  415a9c:	cmp	x22, #0x0
  415aa0:	strb	wzr, [x23, x20]
  415aa4:	cset	w0, ne  // ne = any
  415aa8:	tst	w0, w21
  415aac:	b.eq	415730 <wcrtomb@plt+0x107e0>  // b.none
  415ab0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415ab4:	ldr	x0, [x0, #1016]
  415ab8:	cbz	x0, 415ac0 <wcrtomb@plt+0x10b70>
  415abc:	blr	x0
  415ac0:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415ac4:	add	x1, x1, #0xbe1
  415ac8:	mov	w2, #0x5                   	// #5
  415acc:	mov	x0, #0x0                   	// #0
  415ad0:	bl	404d00 <dcgettext@plt>
  415ad4:	mov	x19, x0
  415ad8:	mov	x0, x23
  415adc:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  415ae0:	mov	x4, x22
  415ae4:	mov	x3, x0
  415ae8:	mov	x2, x19
  415aec:	mov	w1, #0x0                   	// #0
  415af0:	mov	w0, #0x0                   	// #0
  415af4:	bl	4042e0 <error@plt>
  415af8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  415afc:	mov	w1, #0x2                   	// #2
  415b00:	str	w1, [x0, #3464]
  415b04:	b	415730 <wcrtomb@plt+0x107e0>
  415b08:	and	x1, x1, #0xff
  415b0c:	add	x28, x28, #0x1
  415b10:	orr	x19, x1, x19, lsl #6
  415b14:	b	4159c0 <wcrtomb@plt+0x10a70>
  415b18:	cmp	w2, #0x80
  415b1c:	cset	w6, eq  // eq = none
  415b20:	cmp	w2, #0xff
  415b24:	csinc	w26, w6, wzr, ne  // ne = any
  415b28:	cbz	w26, 415c6c <wcrtomb@plt+0x10d1c>
  415b2c:	and	w0, w2, #0x40
  415b30:	and	w19, w2, #0x3f
  415b34:	neg	w3, w0
  415b38:	sub	w19, w19, w0
  415b3c:	add	x28, x28, #0x1
  415b40:	lsl	x3, x3, #50
  415b44:	sxtw	x19, w19
  415b48:	ldrb	w1, [x28], #1
  415b4c:	cmp	x27, x28
  415b50:	add	x19, x1, x19, lsl #8
  415b54:	b.eq	415b9c <wcrtomb@plt+0x10c4c>  // b.none
  415b58:	and	x1, x19, #0xffffffffffffff
  415b5c:	orr	x1, x1, x3
  415b60:	cmp	x1, x19
  415b64:	b.eq	415b48 <wcrtomb@plt+0x10bf8>  // b.none
  415b68:	cmp	x22, #0x0
  415b6c:	eor	w21, w21, #0x1
  415b70:	cset	w0, ne  // ne = any
  415b74:	tst	w0, w21
  415b78:	b.eq	415730 <wcrtomb@plt+0x107e0>  // b.none
  415b7c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415b80:	ldr	x0, [x0, #1016]
  415b84:	cbz	x0, 415b8c <wcrtomb@plt+0x10c3c>
  415b88:	blr	x0
  415b8c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415b90:	mov	w2, #0x5                   	// #5
  415b94:	add	x1, x1, #0xc15
  415b98:	b	415774 <wcrtomb@plt+0x10824>
  415b9c:	cmp	w0, #0x0
  415ba0:	cset	w26, ne  // ne = any
  415ba4:	cbz	w0, 415bac <wcrtomb@plt+0x10c5c>
  415ba8:	neg	x19, x19
  415bac:	cbnz	w26, 415c84 <wcrtomb@plt+0x10d34>
  415bb0:	cmp	x24, x19
  415bb4:	b.cs	415c90 <wcrtomb@plt+0x10d40>  // b.hs, b.nlast
  415bb8:	mov	w26, #0x0                   	// #0
  415bbc:	cmp	x22, #0x0
  415bc0:	eor	w21, w21, #0x1
  415bc4:	cset	w0, ne  // ne = any
  415bc8:	tst	w0, w21
  415bcc:	b.eq	415730 <wcrtomb@plt+0x107e0>  // b.none
  415bd0:	add	x1, x29, #0x91
  415bd4:	mov	x0, x23
  415bd8:	bl	431400 <argp_usage@@Base+0x3f20>
  415bdc:	mov	x20, x0
  415be0:	add	x1, x29, #0xa9
  415be4:	mov	x0, x19
  415be8:	bl	431400 <argp_usage@@Base+0x3f20>
  415bec:	mov	x19, x0
  415bf0:	cbz	w26, 415c00 <wcrtomb@plt+0x10cb0>
  415bf4:	mov	w0, #0x2d                  	// #45
  415bf8:	sub	x19, x19, #0x1
  415bfc:	strb	w0, [x19]
  415c00:	cbz	x23, 415c10 <wcrtomb@plt+0x10cc0>
  415c04:	mov	w0, #0x2d                  	// #45
  415c08:	sub	x20, x20, #0x1
  415c0c:	strb	w0, [x20]
  415c10:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415c14:	ldr	x0, [x0, #1016]
  415c18:	cbz	x0, 415c20 <wcrtomb@plt+0x10cd0>
  415c1c:	blr	x0
  415c20:	mov	w2, #0x5                   	// #5
  415c24:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415c28:	mov	x0, #0x0                   	// #0
  415c2c:	add	x1, x1, #0xc75
  415c30:	bl	404d00 <dcgettext@plt>
  415c34:	mov	x21, x0
  415c38:	add	x1, x29, #0x78
  415c3c:	mov	x0, x24
  415c40:	bl	431400 <argp_usage@@Base+0x3f20>
  415c44:	mov	x6, x0
  415c48:	mov	x5, x20
  415c4c:	mov	x4, x22
  415c50:	mov	x3, x19
  415c54:	mov	x2, x21
  415c58:	mov	w1, #0x0                   	// #0
  415c5c:	mov	w0, #0x0                   	// #0
  415c60:	bl	4042e0 <error@plt>
  415c64:	b	415af8 <wcrtomb@plt+0x10ba8>
  415c68:	mov	w26, #0x0                   	// #0
  415c6c:	mov	x19, #0x0                   	// #0
  415c70:	b	4159d8 <wcrtomb@plt+0x10a88>
  415c74:	ldurb	w0, [x27, #-1]
  415c78:	cbnz	w0, 415a20 <wcrtomb@plt+0x10ad0>
  415c7c:	sub	x27, x27, #0x1
  415c80:	b	415a18 <wcrtomb@plt+0x10ac8>
  415c84:	cmp	x23, x19
  415c88:	b.cc	415bbc <wcrtomb@plt+0x10c6c>  // b.lo, b.ul, b.last
  415c8c:	neg	x19, x19
  415c90:	mov	x0, x19
  415c94:	b	415734 <wcrtomb@plt+0x107e4>
  415c98:	cbnz	w1, 415730 <wcrtomb@plt+0x107e0>
  415c9c:	mov	x28, x20
  415ca0:	cmp	x27, x20
  415ca4:	b.eq	415bb0 <wcrtomb@plt+0x10c60>  // b.none
  415ca8:	mov	w26, #0x0                   	// #0
  415cac:	b	4159d8 <wcrtomb@plt+0x10a88>
  415cb0:	cmp	x27, x20
  415cb4:	b.ne	4158e0 <wcrtomb@plt+0x10990>  // b.any
  415cb8:	b	415c90 <wcrtomb@plt+0x10d40>
  415cbc:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  415cc0:	add	x3, x3, #0x8d8
  415cc4:	add	x3, x3, #0x1
  415cc8:	stp	x29, x30, [sp, #-16]!
  415ccc:	mov	x0, x3
  415cd0:	mov	x29, sp
  415cd4:	mov	w1, #0x40                  	// #64
  415cd8:	mov	x2, #0x100                 	// #256
  415cdc:	bl	404700 <memset@plt>
  415ce0:	mov	x3, x0
  415ce4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  415ce8:	add	x1, x1, #0xe20
  415cec:	mov	x0, #0x0                   	// #0
  415cf0:	ldrb	w2, [x1, x0]
  415cf4:	strb	w0, [x3, x2]
  415cf8:	add	x0, x0, #0x1
  415cfc:	cmp	x0, #0x40
  415d00:	b.ne	415cf0 <wcrtomb@plt+0x10da0>  // b.any
  415d04:	ldp	x29, x30, [sp], #16
  415d08:	ret
  415d0c:	mov	w6, #0x0                   	// #0
  415d10:	mov	w5, #0x0                   	// #0
  415d14:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  415d18:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  415d1c:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  415d20:	mov	x1, #0xc                   	// #12
  415d24:	add	x2, x2, #0x7ad
  415d28:	b	4156c8 <wcrtomb@plt+0x10778>
  415d2c:	cmp	w0, #0x56
  415d30:	b.eq	415e50 <wcrtomb@plt+0x10f00>  // b.none
  415d34:	stp	x29, x30, [sp, #-80]!
  415d38:	mov	x29, sp
  415d3c:	stp	x19, x20, [sp, #16]
  415d40:	mov	x19, x1
  415d44:	adrp	x20, 415000 <wcrtomb@plt+0x100b0>
  415d48:	add	x20, x20, #0x640
  415d4c:	mov	w1, #0x1                   	// #1
  415d50:	add	x3, sp, #0x4c
  415d54:	mov	x2, x20
  415d58:	stp	x21, x22, [sp, #32]
  415d5c:	mov	w21, w0
  415d60:	add	x0, x19, #0x8
  415d64:	str	x23, [sp, #48]
  415d68:	str	w1, [sp, #76]
  415d6c:	bl	422498 <wcrtomb@plt+0x1d548>
  415d70:	cmp	w21, #0x31
  415d74:	b.eq	415e34 <wcrtomb@plt+0x10ee4>  // b.none
  415d78:	cmp	w21, #0x32
  415d7c:	b.ne	415d98 <wcrtomb@plt+0x10e48>  // b.any
  415d80:	mov	w1, #0x4                   	// #4
  415d84:	add	x3, sp, #0x4c
  415d88:	mov	x2, x20
  415d8c:	add	x0, x19, #0x18
  415d90:	str	w1, [sp, #76]
  415d94:	bl	422498 <wcrtomb@plt+0x1d548>
  415d98:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415d9c:	ldrb	w0, [x0, #851]
  415da0:	cbz	w0, 415e20 <wcrtomb@plt+0x10ed0>
  415da4:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  415da8:	add	x19, x19, #0x68
  415dac:	ldr	x23, [x19, #8]
  415db0:	mov	x20, x23
  415db4:	ldrb	w1, [x20]
  415db8:	sub	w0, w1, #0x2e
  415dbc:	and	w0, w0, #0xff
  415dc0:	cmp	w0, #0x1
  415dc4:	b.ls	415e3c <wcrtomb@plt+0x10eec>  // b.plast
  415dc8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  415dcc:	ldr	x21, [x0, #576]
  415dd0:	mov	x0, x21
  415dd4:	cbz	w1, 415e44 <wcrtomb@plt+0x10ef4>
  415dd8:	bl	404280 <strlen@plt>
  415ddc:	sxtw	x22, w0
  415de0:	mov	x2, x22
  415de4:	mov	x1, x21
  415de8:	mov	x0, x20
  415dec:	bl	4046a0 <strncmp@plt>
  415df0:	cbnz	w0, 415e04 <wcrtomb@plt+0x10eb4>
  415df4:	ldrb	w0, [x20, x22]
  415df8:	cmp	w0, #0x2f
  415dfc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  415e00:	b.eq	415e20 <wcrtomb@plt+0x10ed0>  // b.none
  415e04:	mov	x1, x23
  415e08:	mov	x0, x21
  415e0c:	bl	41b368 <wcrtomb@plt+0x16418>
  415e10:	str	x0, [x19, #8]
  415e14:	bl	417ed4 <wcrtomb@plt+0x12f84>
  415e18:	mov	x0, x23
  415e1c:	bl	404ae0 <free@plt>
  415e20:	ldp	x19, x20, [sp, #16]
  415e24:	ldp	x21, x22, [sp, #32]
  415e28:	ldr	x23, [sp, #48]
  415e2c:	ldp	x29, x30, [sp], #80
  415e30:	ret
  415e34:	mov	w1, #0x2                   	// #2
  415e38:	b	415d84 <wcrtomb@plt+0x10e34>
  415e3c:	add	x20, x20, #0x1
  415e40:	b	415db4 <wcrtomb@plt+0x10e64>
  415e44:	bl	436f10 <argp_usage@@Base+0x9a30>
  415e48:	str	x0, [x19, #8]
  415e4c:	b	415e18 <wcrtomb@plt+0x10ec8>
  415e50:	ret
  415e54:	and	w6, w1, #0xff
  415e58:	mov	x4, #0x0                   	// #0
  415e5c:	mov	w3, #0x0                   	// #0
  415e60:	mov	w2, #0x0                   	// #0
  415e64:	ldrb	w5, [x0, x4]
  415e68:	add	x4, x4, #0x1
  415e6c:	cmp	x4, #0x200
  415e70:	add	w2, w2, w5
  415e74:	add	w3, w3, w5, sxtb
  415e78:	b.ne	415e64 <wcrtomb@plt+0x10f14>  // b.any
  415e7c:	cbz	w2, 415ef0 <wcrtomb@plt+0x10fa0>
  415e80:	stp	x29, x30, [sp, #-32]!
  415e84:	add	x1, x0, #0x93
  415e88:	mov	x4, #0x9                   	// #9
  415e8c:	mov	x29, sp
  415e90:	stp	x19, x20, [sp, #16]
  415e94:	subs	x4, x4, #0x1
  415e98:	b.ne	415ee0 <wcrtomb@plt+0x10f90>  // b.any
  415e9c:	add	w19, w2, #0x100
  415ea0:	add	w20, w3, #0x100
  415ea4:	add	x0, x0, #0x94
  415ea8:	mov	w5, #0x1                   	// #1
  415eac:	mov	x4, #0x7fffffff            	// #2147483647
  415eb0:	mov	x3, #0x0                   	// #0
  415eb4:	mov	x2, #0x0                   	// #0
  415eb8:	mov	x1, #0x8                   	// #8
  415ebc:	bl	4156c8 <wcrtomb@plt+0x10778>
  415ec0:	tbnz	w0, #31, 415ef8 <wcrtomb@plt+0x10fa8>
  415ec4:	cmp	w19, w0
  415ec8:	ccmp	w20, w0, #0x4, ne  // ne = any
  415ecc:	mov	w0, #0x5                   	// #5
  415ed0:	csinc	w0, w0, wzr, ne  // ne = any
  415ed4:	ldp	x19, x20, [sp, #16]
  415ed8:	ldp	x29, x30, [sp], #32
  415edc:	ret
  415ee0:	ldrb	w5, [x1, x4]
  415ee4:	sub	w2, w2, w5
  415ee8:	sub	w3, w3, w5, sxtb
  415eec:	b	415e94 <wcrtomb@plt+0x10f44>
  415ef0:	mov	w0, #0x3                   	// #3
  415ef4:	ret
  415ef8:	mov	w0, #0x5                   	// #5
  415efc:	b	415ed4 <wcrtomb@plt+0x10f84>
  415f00:	stp	x29, x30, [sp, #-80]!
  415f04:	mov	w6, #0x0                   	// #0
  415f08:	mov	w5, #0x0                   	// #0
  415f0c:	mov	x29, sp
  415f10:	stp	x23, x24, [sp, #48]
  415f14:	mov	x23, x2
  415f18:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  415f1c:	add	x2, x2, #0x73a
  415f20:	mov	x4, #0xffffffffffffffff    	// #-1
  415f24:	stp	x19, x20, [sp, #16]
  415f28:	mov	x20, x0
  415f2c:	mov	x19, x1
  415f30:	stp	x21, x22, [sp, #32]
  415f34:	mov	w22, w3
  415f38:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  415f3c:	mov	x1, #0x8                   	// #8
  415f40:	add	x0, x0, #0x64
  415f44:	str	x25, [sp, #64]
  415f48:	bl	4156c8 <wcrtomb@plt+0x10778>
  415f4c:	add	x25, x20, #0x101
  415f50:	mov	x21, x0
  415f54:	and	w24, w0, #0xfff
  415f58:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x13380>
  415f5c:	mov	x0, x25
  415f60:	add	x1, x1, #0xf06
  415f64:	bl	404a30 <strcmp@plt>
  415f68:	cbnz	w0, 416160 <wcrtomb@plt+0x11210>
  415f6c:	ldrb	w0, [x20, #475]
  415f70:	cbnz	w0, 415fb4 <wcrtomb@plt+0x11064>
  415f74:	ldrb	w0, [x20, #476]
  415f78:	sub	w0, w0, #0x30
  415f7c:	and	w0, w0, #0xff
  415f80:	cmp	w0, #0x7
  415f84:	b.hi	415fb4 <wcrtomb@plt+0x11064>  // b.pmore
  415f88:	ldrb	w0, [x20, #487]
  415f8c:	cmp	w0, #0x20
  415f90:	b.ne	415fb4 <wcrtomb@plt+0x11064>  // b.any
  415f94:	ldrb	w0, [x20, #488]
  415f98:	sub	w0, w0, #0x30
  415f9c:	and	w0, w0, #0xff
  415fa0:	cmp	w0, #0x7
  415fa4:	b.hi	415fb4 <wcrtomb@plt+0x11064>  // b.pmore
  415fa8:	ldrb	w0, [x20, #499]
  415fac:	cmp	w0, #0x20
  415fb0:	b.eq	416188 <wcrtomb@plt+0x11238>  // b.none
  415fb4:	ldr	x0, [x19, #352]
  415fb8:	cmp	x0, #0x0
  415fbc:	cset	w21, ne  // ne = any
  415fc0:	add	w21, w21, #0x3
  415fc4:	str	w21, [x23]
  415fc8:	add	x0, x20, #0x88
  415fcc:	str	w24, [x19, #104]
  415fd0:	bl	415d0c <wcrtomb@plt+0x10dbc>
  415fd4:	stp	x0, xzr, [x19, #232]
  415fd8:	ldrb	w0, [x20, #265]
  415fdc:	add	x1, x20, #0x109
  415fe0:	mov	x2, #0x20                  	// #32
  415fe4:	cmp	w0, #0x0
  415fe8:	add	x0, x19, x2
  415fec:	csel	x1, x1, xzr, ne  // ne = any
  415ff0:	bl	417c68 <wcrtomb@plt+0x12d18>
  415ff4:	ldrb	w0, [x20, #297]
  415ff8:	add	x1, x20, #0x129
  415ffc:	mov	x2, #0x20                  	// #32
  416000:	cmp	w0, #0x0
  416004:	add	x0, x19, #0x28
  416008:	csel	x1, x1, xzr, ne  // ne = any
  41600c:	bl	417c68 <wcrtomb@plt+0x12d18>
  416010:	mov	x0, x19
  416014:	bl	411f40 <wcrtomb@plt+0xcff0>
  416018:	cmp	w21, #0x2
  41601c:	b.ne	416198 <wcrtomb@plt+0x11248>  // b.any
  416020:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  416024:	ldrb	w0, [x0, #41]
  416028:	cbz	w0, 4161b4 <wcrtomb@plt+0x11264>
  41602c:	add	x0, x20, #0x159
  416030:	bl	415d0c <wcrtomb@plt+0x10dbc>
  416034:	str	x0, [x19, #216]
  416038:	add	x0, x20, #0x165
  41603c:	bl	415d0c <wcrtomb@plt+0x10dbc>
  416040:	str	xzr, [x19, #224]
  416044:	stp	x0, xzr, [x19, #248]
  416048:	cbz	w22, 4160b4 <wcrtomb@plt+0x11164>
  41604c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  416050:	mov	x21, x0
  416054:	ldrb	w1, [x0, #680]
  416058:	cbz	w1, 416228 <wcrtomb@plt+0x112d8>
  41605c:	add	x0, x20, #0x6c
  416060:	mov	w6, #0x0                   	// #0
  416064:	mov	w5, #0x0                   	// #0
  416068:	mov	x4, #0xffffffff            	// #4294967295
  41606c:	mov	x3, #0x0                   	// #0
  416070:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  416074:	mov	x1, #0x8                   	// #8
  416078:	add	x2, x2, #0x7b4
  41607c:	bl	4156c8 <wcrtomb@plt+0x10778>
  416080:	str	w0, [x19, #112]
  416084:	ldrb	w0, [x21, #680]
  416088:	cbz	w0, 416244 <wcrtomb@plt+0x112f4>
  41608c:	add	x0, x20, #0x74
  416090:	mov	w6, #0x0                   	// #0
  416094:	mov	w5, #0x0                   	// #0
  416098:	mov	x4, #0xffffffff            	// #4294967295
  41609c:	mov	x3, #0x0                   	// #0
  4160a0:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  4160a4:	mov	x1, #0x8                   	// #8
  4160a8:	add	x2, x2, #0x7ba
  4160ac:	bl	4156c8 <wcrtomb@plt+0x10778>
  4160b0:	str	w0, [x19, #116]
  4160b4:	ldrb	w0, [x20, #156]
  4160b8:	sub	w0, w0, #0x33
  4160bc:	cmp	w0, #0x1
  4160c0:	b.hi	416220 <wcrtomb@plt+0x112d0>  // b.pmore
  4160c4:	mov	w6, #0x0                   	// #0
  4160c8:	mov	w5, #0x0                   	// #0
  4160cc:	mov	x4, #0x7fffffff            	// #2147483647
  4160d0:	mov	x3, #0xffffffff80000000    	// #-2147483648
  4160d4:	mov	x1, #0x8                   	// #8
  4160d8:	add	x0, x20, #0x149
  4160dc:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  4160e0:	add	x2, x2, #0x749
  4160e4:	bl	4156c8 <wcrtomb@plt+0x10778>
  4160e8:	mov	x21, x0
  4160ec:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  4160f0:	add	x2, x2, #0x741
  4160f4:	mov	w6, #0x0                   	// #0
  4160f8:	mov	w5, #0x0                   	// #0
  4160fc:	mov	x4, #0x7fffffff            	// #2147483647
  416100:	mov	x3, #0xffffffff80000000    	// #-2147483648
  416104:	mov	x1, #0x8                   	// #8
  416108:	add	x0, x20, #0x151
  41610c:	bl	4156c8 <wcrtomb@plt+0x10778>
  416110:	mov	w1, w0
  416114:	mov	w0, w21
  416118:	bl	4044c0 <gnu_dev_makedev@plt>
  41611c:	str	x0, [x19, #120]
  416120:	mov	x0, x19
  416124:	bl	4121b4 <wcrtomb@plt+0xd264>
  416128:	mov	x0, x19
  41612c:	bl	41cee4 <wcrtomb@plt+0x17f94>
  416130:	tst	w0, #0xff
  416134:	b.eq	416260 <wcrtomb@plt+0x11310>  // b.none
  416138:	mov	x0, x19
  41613c:	bl	41cf2c <wcrtomb@plt+0x17fdc>
  416140:	mov	w0, #0x1                   	// #1
  416144:	strb	w0, [x19, #272]
  416148:	ldp	x19, x20, [sp, #16]
  41614c:	ldp	x21, x22, [sp, #32]
  416150:	ldp	x23, x24, [sp, #48]
  416154:	ldr	x25, [sp, #64]
  416158:	ldp	x29, x30, [sp], #80
  41615c:	ret
  416160:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  416164:	mov	x0, x25
  416168:	add	x1, x1, #0xf5c
  41616c:	bl	404a30 <strcmp@plt>
  416170:	cbnz	w0, 416190 <wcrtomb@plt+0x11240>
  416174:	tst	x21, #0xfffffffffffff000
  416178:	mov	w0, #0x6                   	// #6
  41617c:	mov	w21, #0x2                   	// #2
  416180:	csel	w21, w21, w0, ne  // ne = any
  416184:	b	415fc4 <wcrtomb@plt+0x11074>
  416188:	mov	w21, #0x5                   	// #5
  41618c:	b	415fc4 <wcrtomb@plt+0x11074>
  416190:	mov	w21, #0x1                   	// #1
  416194:	b	415fc4 <wcrtomb@plt+0x11074>
  416198:	cmp	w21, #0x5
  41619c:	b.ne	4161b4 <wcrtomb@plt+0x11264>  // b.any
  4161a0:	add	x0, x20, #0x1dc
  4161a4:	bl	415d0c <wcrtomb@plt+0x10dbc>
  4161a8:	str	x0, [x19, #216]
  4161ac:	add	x0, x20, #0x1e8
  4161b0:	b	41603c <wcrtomb@plt+0x110ec>
  4161b4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4161b8:	add	x0, x0, #0x2d0
  4161bc:	cmp	w21, #0x1
  4161c0:	ldp	x0, x1, [x0]
  4161c4:	stp	x0, x1, [x19, #216]
  4161c8:	stp	x0, x1, [x19, #248]
  4161cc:	b.ne	416048 <wcrtomb@plt+0x110f8>  // b.any
  4161d0:	mov	w6, #0x0                   	// #0
  4161d4:	mov	w5, #0x0                   	// #0
  4161d8:	mov	x4, #0xffffffff            	// #4294967295
  4161dc:	mov	x3, #0x0                   	// #0
  4161e0:	mov	x1, #0x8                   	// #8
  4161e4:	add	x0, x20, #0x6c
  4161e8:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  4161ec:	add	x2, x2, #0x7b4
  4161f0:	bl	4156c8 <wcrtomb@plt+0x10778>
  4161f4:	str	w0, [x19, #112]
  4161f8:	mov	w6, #0x0                   	// #0
  4161fc:	add	x0, x20, #0x74
  416200:	mov	w5, #0x0                   	// #0
  416204:	mov	x4, #0xffffffff            	// #4294967295
  416208:	mov	x3, #0x0                   	// #0
  41620c:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  416210:	mov	x1, #0x8                   	// #8
  416214:	add	x2, x2, #0x7ba
  416218:	bl	4156c8 <wcrtomb@plt+0x10778>
  41621c:	str	w0, [x19, #116]
  416220:	str	xzr, [x19, #120]
  416224:	b	416120 <wcrtomb@plt+0x111d0>
  416228:	ldrb	w0, [x20, #265]
  41622c:	cbz	w0, 41605c <wcrtomb@plt+0x1110c>
  416230:	add	x1, x19, #0x70
  416234:	add	x0, x20, #0x109
  416238:	bl	41a39c <wcrtomb@plt+0x1544c>
  41623c:	cbz	w0, 41605c <wcrtomb@plt+0x1110c>
  416240:	b	416084 <wcrtomb@plt+0x11134>
  416244:	ldrb	w0, [x20, #297]
  416248:	cbz	w0, 41608c <wcrtomb@plt+0x1113c>
  41624c:	add	x1, x19, #0x74
  416250:	add	x0, x20, #0x129
  416254:	bl	41a440 <wcrtomb@plt+0x154f0>
  416258:	cbz	w0, 41608c <wcrtomb@plt+0x1113c>
  41625c:	b	4160b4 <wcrtomb@plt+0x11164>
  416260:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  416264:	strb	wzr, [x19, #272]
  416268:	ldr	w0, [x0, #4056]
  41626c:	and	w0, w0, #0xfffffffb
  416270:	cmp	w0, #0x2
  416274:	b.ne	41628c <wcrtomb@plt+0x1133c>  // b.any
  416278:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41627c:	ldr	x0, [x0, #4080]
  416280:	ldrb	w0, [x0, #156]
  416284:	cmp	w0, #0x44
  416288:	b.eq	416294 <wcrtomb@plt+0x11344>  // b.none
  41628c:	ldr	x0, [x19, #384]
  416290:	cbz	x0, 416148 <wcrtomb@plt+0x111f8>
  416294:	mov	w0, #0x1                   	// #1
  416298:	strb	w0, [x19, #376]
  41629c:	b	416148 <wcrtomb@plt+0x111f8>
  4162a0:	mov	w6, #0x0                   	// #0
  4162a4:	mov	w5, #0x0                   	// #0
  4162a8:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4162ac:	mov	x3, #0x0                   	// #0
  4162b0:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  4162b4:	add	x2, x2, #0x7a7
  4162b8:	b	4156c8 <wcrtomb@plt+0x10778>
  4162bc:	stp	x29, x30, [sp, #-400]!
  4162c0:	mov	x29, sp
  4162c4:	stp	x21, x22, [sp, #32]
  4162c8:	mov	x21, x1
  4162cc:	stp	x23, x24, [sp, #48]
  4162d0:	mov	w23, w2
  4162d4:	mov	x24, #0x0                   	// #0
  4162d8:	str	x0, [sp, #104]
  4162dc:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  4162e0:	add	x0, x0, #0x41c
  4162e4:	stp	x19, x20, [sp, #16]
  4162e8:	stp	x25, x26, [sp, #64]
  4162ec:	mov	x26, #0x0                   	// #0
  4162f0:	mov	x25, #0x0                   	// #0
  4162f4:	stp	x27, x28, [sp, #80]
  4162f8:	mov	x28, #0x0                   	// #0
  4162fc:	str	x0, [sp, #112]
  416300:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  416304:	add	x0, x0, #0xd88
  416308:	str	x0, [sp, #120]
  41630c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  416310:	mov	x19, x0
  416314:	ldr	x1, [sp, #104]
  416318:	str	x0, [x1]
  41631c:	cbz	x0, 4165d4 <wcrtomb@plt+0x11684>
  416320:	mov	w1, #0x0                   	// #0
  416324:	bl	415e54 <wcrtomb@plt+0x10f04>
  416328:	mov	w20, w0
  41632c:	cmp	w0, #0x1
  416330:	b.ne	4163e0 <wcrtomb@plt+0x11490>  // b.any
  416334:	ldrb	w0, [x19, #156]
  416338:	cmp	w0, #0x31
  41633c:	b.ne	416400 <wcrtomb@plt+0x114b0>  // b.any
  416340:	str	xzr, [x21, #136]
  416344:	ldrb	w1, [x19, #156]
  416348:	sub	w0, w1, #0x4b
  41634c:	cmp	w1, #0x78
  416350:	and	w0, w0, #0xff
  416354:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  416358:	b.ls	41641c <wcrtomb@plt+0x114cc>  // b.plast
  41635c:	cmp	w1, #0x67
  416360:	b.eq	416604 <wcrtomb@plt+0x116b4>  // b.none
  416364:	cmp	w1, #0x58
  416368:	b.eq	4165dc <wcrtomb@plt+0x1168c>  // b.none
  41636c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  416370:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  416374:	ldr	x0, [x1, #4064]
  416378:	bl	404ae0 <free@plt>
  41637c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  416380:	mov	x27, x1
  416384:	cbz	x24, 41653c <wcrtomb@plt+0x115ec>
  416388:	add	x22, x24, #0x200
  41638c:	str	x24, [x1, #4064]
  416390:	str	x26, [x23, #4072]
  416394:	mov	x1, x22
  416398:	mov	x0, x21
  41639c:	bl	417c2c <wcrtomb@plt+0x12cdc>
  4163a0:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  4163a4:	mov	x1, x22
  4163a8:	add	x0, x21, #0x8
  4163ac:	bl	417c2c <wcrtomb@plt+0x12cdc>
  4163b0:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  4163b4:	ldr	x0, [x21, #8]
  4163b8:	bl	42de70 <argp_usage@@Base+0x990>
  4163bc:	strb	w0, [x21, #16]
  4163c0:	ldr	x0, [x22]
  4163c4:	bl	404ae0 <free@plt>
  4163c8:	cbz	x25, 4165b0 <wcrtomb@plt+0x11660>
  4163cc:	add	x1, x25, #0x200
  4163d0:	str	x25, [x22]
  4163d4:	str	x28, [x23, #4088]
  4163d8:	add	x0, x21, #0x18
  4163dc:	bl	417c2c <wcrtomb@plt+0x12cdc>
  4163e0:	mov	w0, w20
  4163e4:	ldp	x19, x20, [sp, #16]
  4163e8:	ldp	x21, x22, [sp, #32]
  4163ec:	ldp	x23, x24, [sp, #48]
  4163f0:	ldp	x25, x26, [sp, #64]
  4163f4:	ldp	x27, x28, [sp, #80]
  4163f8:	ldp	x29, x30, [sp], #400
  4163fc:	ret
  416400:	add	x0, x19, #0x7c
  416404:	mov	x1, #0xc                   	// #12
  416408:	bl	4162a0 <wcrtomb@plt+0x11350>
  41640c:	str	x0, [x21, #136]
  416410:	tbz	x0, #63, 416344 <wcrtomb@plt+0x113f4>
  416414:	mov	w20, #0x5                   	// #5
  416418:	b	4163e0 <wcrtomb@plt+0x11490>
  41641c:	cmp	w23, #0x1
  416420:	b.eq	416674 <wcrtomb@plt+0x11724>  // b.none
  416424:	cmp	w0, #0x1
  416428:	b.hi	4165e4 <wcrtomb@plt+0x11694>  // b.pmore
  41642c:	ldr	x0, [x21, #136]
  416430:	ands	x1, x0, #0x1ff
  416434:	add	x20, x0, #0x400
  416438:	add	x2, x0, #0x200
  41643c:	sub	x20, x20, x1
  416440:	csel	x20, x20, x2, ne  // ne = any
  416444:	cmp	x20, x0
  416448:	b.cs	416450 <wcrtomb@plt+0x11500>  // b.hs, b.nlast
  41644c:	bl	40d4bc <wcrtomb@plt+0x856c>
  416450:	add	x0, x20, #0x1
  416454:	bl	436d44 <argp_usage@@Base+0x9864>
  416458:	mov	x22, x0
  41645c:	ldrb	w0, [x19, #156]
  416460:	lsr	x27, x20, #9
  416464:	cmp	w0, #0x4c
  416468:	b.ne	4164f0 <wcrtomb@plt+0x115a0>  // b.any
  41646c:	mov	x0, x24
  416470:	mov	x24, x22
  416474:	bl	404ae0 <free@plt>
  416478:	mov	x0, x19
  41647c:	bl	405c98 <wcrtomb@plt+0xd48>
  416480:	mov	x0, x22
  416484:	sub	x20, x20, #0x200
  416488:	add	x22, x22, #0x200
  41648c:	mov	x1, x19
  416490:	mov	x2, #0x200                 	// #512
  416494:	bl	404200 <memcpy@plt>
  416498:	cbz	x20, 4164e4 <wcrtomb@plt+0x11594>
  41649c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  4164a0:	mov	x26, x0
  4164a4:	cbnz	x0, 416508 <wcrtomb@plt+0x115b8>
  4164a8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4164ac:	ldr	x0, [x0, #1016]
  4164b0:	cbz	x0, 4164b8 <wcrtomb@plt+0x11568>
  4164b4:	blr	x0
  4164b8:	ldr	x1, [sp, #112]
  4164bc:	mov	w2, #0x5                   	// #5
  4164c0:	mov	x0, #0x0                   	// #0
  4164c4:	bl	404d00 <dcgettext@plt>
  4164c8:	mov	x2, x0
  4164cc:	mov	w1, #0x0                   	// #0
  4164d0:	mov	w0, #0x0                   	// #0
  4164d4:	bl	4042e0 <error@plt>
  4164d8:	ldr	x1, [sp, #120]
  4164dc:	mov	w0, #0x2                   	// #2
  4164e0:	str	w0, [x1]
  4164e4:	mov	x26, x27
  4164e8:	strb	wzr, [x22]
  4164ec:	b	41630c <wcrtomb@plt+0x113bc>
  4164f0:	mov	x0, x25
  4164f4:	mov	x28, x27
  4164f8:	mov	x25, x22
  4164fc:	mov	x27, x26
  416500:	bl	404ae0 <free@plt>
  416504:	b	416478 <wcrtomb@plt+0x11528>
  416508:	bl	405da8 <wcrtomb@plt+0xe58>
  41650c:	cmp	x20, x0
  416510:	csel	x19, x20, x0, ls  // ls = plast
  416514:	mov	x1, x26
  416518:	mov	x2, x19
  41651c:	mov	x0, x22
  416520:	bl	404200 <memcpy@plt>
  416524:	add	x22, x22, x19
  416528:	sub	x0, x19, #0x1
  41652c:	sub	x20, x20, x19
  416530:	add	x0, x26, x0
  416534:	bl	405c98 <wcrtomb@plt+0xd48>
  416538:	b	416498 <wcrtomb@plt+0x11548>
  41653c:	ldrb	w0, [x19, #345]
  416540:	add	x22, sp, #0x88
  416544:	cbz	w0, 4165a8 <wcrtomb@plt+0x11658>
  416548:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x13380>
  41654c:	add	x0, x19, #0x101
  416550:	add	x1, x1, #0xf06
  416554:	bl	404a30 <strcmp@plt>
  416558:	cbnz	w0, 4165a8 <wcrtomb@plt+0x11658>
  41655c:	add	x1, x19, #0x159
  416560:	mov	x2, #0x9b                  	// #155
  416564:	mov	x0, x22
  416568:	bl	404200 <memcpy@plt>
  41656c:	mov	x0, x22
  416570:	strb	wzr, [sp, #291]
  416574:	bl	404280 <strlen@plt>
  416578:	add	x3, x22, x0
  41657c:	add	x3, x3, #0x1
  416580:	mov	w1, #0x2f                  	// #47
  416584:	strb	w1, [x22, x0]
  416588:	mov	x1, x19
  41658c:	mov	x0, x3
  416590:	mov	x2, #0x64                  	// #100
  416594:	bl	404200 <memcpy@plt>
  416598:	str	xzr, [x27, #4064]
  41659c:	str	xzr, [x23, #4072]
  4165a0:	strb	wzr, [x0, #100]
  4165a4:	b	416394 <wcrtomb@plt+0x11444>
  4165a8:	mov	x3, x22
  4165ac:	b	416588 <wcrtomb@plt+0x11638>
  4165b0:	add	x1, x19, #0x9d
  4165b4:	add	x0, sp, #0x88
  4165b8:	mov	x2, #0x64                  	// #100
  4165bc:	bl	404200 <memcpy@plt>
  4165c0:	add	x1, sp, #0x88
  4165c4:	str	xzr, [x22]
  4165c8:	str	xzr, [x23, #4088]
  4165cc:	strb	wzr, [sp, #236]
  4165d0:	b	4163d8 <wcrtomb@plt+0x11488>
  4165d4:	mov	w20, #0x4                   	// #4
  4165d8:	b	4163e0 <wcrtomb@plt+0x11490>
  4165dc:	cmp	w23, #0x1
  4165e0:	b.eq	416674 <wcrtomb@plt+0x11724>  // b.none
  4165e4:	add	x0, x19, #0x7c
  4165e8:	mov	x1, #0xc                   	// #12
  4165ec:	bl	4162a0 <wcrtomb@plt+0x11350>
  4165f0:	mov	x2, x0
  4165f4:	mov	x1, x19
  4165f8:	add	x0, x21, #0x158
  4165fc:	bl	412390 <wcrtomb@plt+0xd440>
  416600:	b	41630c <wcrtomb@plt+0x113bc>
  416604:	cmp	w23, #0x1
  416608:	b.eq	416674 <wcrtomb@plt+0x11724>  // b.none
  41660c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  416610:	add	x20, x20, #0x8d8
  416614:	ldr	x0, [x20, #272]
  416618:	cbnz	x0, 416628 <wcrtomb@plt+0x116d8>
  41661c:	mov	x0, #0x200                 	// #512
  416620:	bl	436d44 <argp_usage@@Base+0x9864>
  416624:	str	x0, [x20, #272]
  416628:	ldr	x0, [x20, #272]
  41662c:	mov	x2, #0x200                 	// #512
  416630:	mov	x1, x19
  416634:	bl	404200 <memcpy@plt>
  416638:	stp	xzr, xzr, [sp, #136]
  41663c:	mov	x1, #0xc                   	// #12
  416640:	add	x0, x19, #0x7c
  416644:	stp	xzr, xzr, [sp, #152]
  416648:	bl	4162a0 <wcrtomb@plt+0x11350>
  41664c:	mov	x1, x19
  416650:	mov	x2, x0
  416654:	add	x0, sp, #0x88
  416658:	bl	412390 <wcrtomb@plt+0xd440>
  41665c:	add	x0, sp, #0x88
  416660:	bl	412258 <wcrtomb@plt+0xd308>
  416664:	add	x0, sp, #0x88
  416668:	bl	4124e4 <wcrtomb@plt+0xd594>
  41666c:	cmp	w23, #0x2
  416670:	b.ne	41630c <wcrtomb@plt+0x113bc>  // b.any
  416674:	mov	w20, #0x2                   	// #2
  416678:	b	4163e0 <wcrtomb@plt+0x11490>
  41667c:	mov	w6, #0x0                   	// #0
  416680:	mov	w5, #0x0                   	// #0
  416684:	mov	x4, #0xffffffffffffffff    	// #-1
  416688:	mov	x3, #0x0                   	// #0
  41668c:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  416690:	add	x2, x2, #0x7c0
  416694:	b	4156c8 <wcrtomb@plt+0x10778>
  416698:	stp	x29, x30, [sp, #-80]!
  41669c:	cmp	w1, #0x0
  4166a0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  4166a4:	mov	x29, sp
  4166a8:	stp	x19, x20, [sp, #16]
  4166ac:	stp	x21, x22, [sp, #32]
  4166b0:	and	w22, w2, #0xff
  4166b4:	str	x23, [sp, #48]
  4166b8:	mov	x23, x0
  4166bc:	str	x0, [sp, #72]
  4166c0:	b.ge	416730 <wcrtomb@plt+0x117e0>  // b.tcont
  4166c4:	mov	w21, #0xca00                	// #51712
  4166c8:	add	x0, x0, #0x1
  4166cc:	movk	w21, #0x3b9a, lsl #16
  4166d0:	sub	w21, w21, w1
  4166d4:	str	x0, [sp, #72]
  4166d8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4166dc:	ldrb	w0, [x0, #561]
  4166e0:	cbz	w0, 416738 <wcrtomb@plt+0x117e8>
  4166e4:	add	x0, sp, #0x48
  4166e8:	bl	404800 <gmtime@plt>
  4166ec:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4166f0:	mov	x3, x0
  4166f4:	add	x20, x19, #0x8d8
  4166f8:	cbz	x0, 416770 <wcrtomb@plt+0x11820>
  4166fc:	add	x19, x20, #0x118
  416700:	cbz	w22, 416744 <wcrtomb@plt+0x117f4>
  416704:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  416708:	add	x2, x2, #0x762
  41670c:	mov	x1, #0x25                  	// #37
  416710:	mov	x0, x19
  416714:	bl	404400 <strftime@plt>
  416718:	mov	x0, x19
  41671c:	bl	404280 <strlen@plt>
  416720:	add	x1, x19, x0
  416724:	mov	w0, w21
  416728:	bl	41825c <wcrtomb@plt+0x1330c>
  41672c:	b	416758 <wcrtomb@plt+0x11808>
  416730:	mov	w21, w1
  416734:	b	4166d8 <wcrtomb@plt+0x11788>
  416738:	add	x0, sp, #0x48
  41673c:	bl	404510 <localtime@plt>
  416740:	b	4166ec <wcrtomb@plt+0x1179c>
  416744:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  416748:	mov	x0, x19
  41674c:	add	x2, x2, #0xca0
  416750:	mov	x1, #0x25                  	// #37
  416754:	bl	404400 <strftime@plt>
  416758:	mov	x0, x19
  41675c:	ldp	x19, x20, [sp, #16]
  416760:	ldp	x21, x22, [sp, #32]
  416764:	ldr	x23, [sp, #48]
  416768:	ldp	x29, x30, [sp], #80
  41676c:	ret
  416770:	ldr	x0, [sp, #72]
  416774:	tbz	x23, #63, 41677c <wcrtomb@plt+0x1182c>
  416778:	neg	x0, x0
  41677c:	add	x1, x20, #0x11e
  416780:	bl	431400 <argp_usage@@Base+0x3f20>
  416784:	tbz	x23, #63, 416794 <wcrtomb@plt+0x11844>
  416788:	mov	w1, #0x2d                  	// #45
  41678c:	sub	x0, x0, #0x1
  416790:	strb	w1, [x0]
  416794:	add	x2, x20, #0x139
  416798:	add	x1, x20, #0x12c
  41679c:	cmp	w22, #0x0
  4167a0:	mov	w3, #0x20                  	// #32
  4167a4:	csel	x1, x2, x1, ne  // ne = any
  4167a8:	mov	x2, x0
  4167ac:	cmp	x2, x1
  4167b0:	b.hi	4167cc <wcrtomb@plt+0x1187c>  // b.pmore
  4167b4:	subs	x19, x1, x0
  4167b8:	csel	x19, x19, xzr, ls  // ls = plast
  4167bc:	add	x19, x0, x19
  4167c0:	cbz	w22, 416758 <wcrtomb@plt+0x11808>
  4167c4:	add	x1, x20, #0x132
  4167c8:	b	416724 <wcrtomb@plt+0x117d4>
  4167cc:	strb	w3, [x2, #-1]!
  4167d0:	b	4167ac <wcrtomb@plt+0x1185c>
  4167d4:	sub	sp, sp, #0x110
  4167d8:	stp	x29, x30, [sp, #16]
  4167dc:	add	x29, sp, #0x10
  4167e0:	stp	x25, x26, [sp, #80]
  4167e4:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  4167e8:	stp	x23, x24, [sp, #64]
  4167ec:	mov	x23, x1
  4167f0:	ldrb	w1, [x25, #848]
  4167f4:	stp	x19, x20, [sp, #32]
  4167f8:	mov	x19, x0
  4167fc:	mov	x0, x2
  416800:	stp	x21, x22, [sp, #48]
  416804:	stp	x27, x28, [sp, #96]
  416808:	cbz	w1, 4168fc <wcrtomb@plt+0x119ac>
  41680c:	ldr	x22, [x19, #8]
  416810:	cbnz	x22, 416818 <wcrtomb@plt+0x118c8>
  416814:	ldr	x22, [x19]
  416818:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41681c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  416820:	ldrb	w1, [x1, #681]
  416824:	cbz	w1, 416884 <wcrtomb@plt+0x11934>
  416828:	tbz	x0, #63, 416830 <wcrtomb@plt+0x118e0>
  41682c:	bl	405c2c <wcrtomb@plt+0xcdc>
  416830:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  416834:	ldr	x26, [x20, #3936]
  416838:	ldr	x21, [x1, #4072]
  41683c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  416840:	ldr	x2, [x1, #4088]
  416844:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416848:	add	x1, x1, #0xcaf
  41684c:	add	x21, x21, x2
  416850:	mov	w2, #0x5                   	// #5
  416854:	sub	x21, x0, x21
  416858:	mov	x0, #0x0                   	// #0
  41685c:	bl	404d00 <dcgettext@plt>
  416860:	mov	x24, x0
  416864:	add	x1, sp, #0xe0
  416868:	mov	x0, x21
  41686c:	bl	431400 <argp_usage@@Base+0x3f20>
  416870:	mov	x3, x0
  416874:	mov	x2, x24
  416878:	mov	x0, x26
  41687c:	mov	w1, #0x1                   	// #1
  416880:	bl	404a20 <__fprintf_chk@plt>
  416884:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  416888:	ldr	w0, [x0, #652]
  41688c:	cmp	w0, #0x1
  416890:	b.gt	41690c <wcrtomb@plt+0x119bc>
  416894:	mov	x0, x22
  416898:	bl	435f44 <argp_usage@@Base+0x8a64>
  41689c:	ldr	x1, [x20, #3936]
  4168a0:	bl	404d20 <fputs_unlocked@plt>
  4168a4:	ldrb	w0, [x25, #848]
  4168a8:	cbz	w0, 4168c0 <wcrtomb@plt+0x11970>
  4168ac:	ldrb	w0, [x19, #16]
  4168b0:	cbz	w0, 4168c0 <wcrtomb@plt+0x11970>
  4168b4:	ldr	x1, [x20, #3936]
  4168b8:	mov	w0, #0x2f                  	// #47
  4168bc:	bl	404cb0 <fputc_unlocked@plt>
  4168c0:	ldr	x1, [x20, #3936]
  4168c4:	mov	w0, #0xa                   	// #10
  4168c8:	bl	404cb0 <fputc_unlocked@plt>
  4168cc:	ldr	x0, [x20, #3936]
  4168d0:	bl	404bf0 <fflush_unlocked@plt>
  4168d4:	mov	x0, x19
  4168d8:	bl	424874 <wcrtomb@plt+0x1f924>
  4168dc:	ldp	x29, x30, [sp, #16]
  4168e0:	ldp	x19, x20, [sp, #32]
  4168e4:	ldp	x21, x22, [sp, #48]
  4168e8:	ldp	x23, x24, [sp, #64]
  4168ec:	ldp	x25, x26, [sp, #80]
  4168f0:	ldp	x27, x28, [sp, #96]
  4168f4:	add	sp, sp, #0x110
  4168f8:	ret
  4168fc:	ldr	x22, [x19]
  416900:	cbnz	x22, 416818 <wcrtomb@plt+0x118c8>
  416904:	ldr	x22, [x19, #8]
  416908:	b	416818 <wcrtomb@plt+0x118c8>
  41690c:	mov	w0, #0x3f                  	// #63
  416910:	strb	w0, [sp, #136]
  416914:	ldrb	w0, [x23, #156]
  416918:	cbz	w0, 416bd8 <wcrtomb@plt+0x11c88>
  41691c:	sub	w0, w0, #0x30
  416920:	and	w1, w0, #0xff
  416924:	cmp	w1, #0x26
  416928:	b.hi	4169b4 <wcrtomb@plt+0x11a64>  // b.pmore
  41692c:	cmp	w0, #0x26
  416930:	b.hi	4169b4 <wcrtomb@plt+0x11a64>  // b.pmore
  416934:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416938:	add	x1, x1, #0xdac
  41693c:	ldrh	w0, [x1, w0, uxtw #1]
  416940:	adr	x1, 41694c <wcrtomb@plt+0x119fc>
  416944:	add	x0, x1, w0, sxth #2
  416948:	br	x0
  41694c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  416950:	mov	w1, #0x1                   	// #1
  416954:	strb	w1, [x0, #2581]
  416958:	mov	w0, #0x56                  	// #86
  41695c:	strb	w0, [sp, #136]
  416960:	b	4169b4 <wcrtomb@plt+0x11a64>
  416964:	mov	w0, #0x4d                  	// #77
  416968:	b	41695c <wcrtomb@plt+0x11a0c>
  41696c:	mov	w0, #0x4c                  	// #76
  416970:	strb	w0, [sp, #136]
  416974:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  416978:	ldr	x0, [x0, #1016]
  41697c:	cbz	x0, 416984 <wcrtomb@plt+0x11a34>
  416980:	blr	x0
  416984:	mov	w2, #0x5                   	// #5
  416988:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41698c:	mov	x0, #0x0                   	// #0
  416990:	add	x1, x1, #0xc9f
  416994:	bl	404d00 <dcgettext@plt>
  416998:	mov	x2, x0
  41699c:	mov	w1, #0x0                   	// #0
  4169a0:	mov	w0, #0x0                   	// #0
  4169a4:	bl	4042e0 <error@plt>
  4169a8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4169ac:	mov	w1, #0x2                   	// #2
  4169b0:	str	w1, [x0, #3464]
  4169b4:	ldr	w0, [x19, #104]
  4169b8:	add	x1, sp, #0x89
  4169bc:	adrp	x26, 46e000 <_obstack_memory_used@@Base+0x36380>
  4169c0:	bl	4249ec <wcrtomb@plt+0x1fa9c>
  4169c4:	add	x1, sp, #0x92
  4169c8:	mov	x0, x19
  4169cc:	bl	42475c <wcrtomb@plt+0x1f80c>
  4169d0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4169d4:	ldrb	w2, [x0, #704]
  4169d8:	ldp	x0, x1, [x19, #232]
  4169dc:	bl	416698 <wcrtomb@plt+0x11748>
  4169e0:	mov	x27, x0
  4169e4:	bl	404280 <strlen@plt>
  4169e8:	ldr	w1, [x26, #2256]
  4169ec:	cmp	w1, w0
  4169f0:	b.ge	4169f8 <wcrtomb@plt+0x11aa8>  // b.tcont
  4169f4:	str	w0, [x26, #2256]
  4169f8:	ldr	x21, [x19, #32]
  4169fc:	cbz	x21, 416a24 <wcrtomb@plt+0x11ad4>
  416a00:	ldrb	w0, [x21]
  416a04:	cbz	w0, 416a24 <wcrtomb@plt+0x11ad4>
  416a08:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  416a0c:	ldr	w0, [x0, #4056]
  416a10:	cmp	w0, #0x1
  416a14:	b.eq	416a24 <wcrtomb@plt+0x11ad4>  // b.none
  416a18:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  416a1c:	ldrb	w0, [x0, #680]
  416a20:	cbz	w0, 416a34 <wcrtomb@plt+0x11ae4>
  416a24:	ldr	w0, [x19, #112]
  416a28:	add	x1, sp, #0x98
  416a2c:	bl	431400 <argp_usage@@Base+0x3f20>
  416a30:	mov	x21, x0
  416a34:	ldr	x24, [x19, #40]
  416a38:	cbz	x24, 416a60 <wcrtomb@plt+0x11b10>
  416a3c:	ldrb	w0, [x24]
  416a40:	cbz	w0, 416a60 <wcrtomb@plt+0x11b10>
  416a44:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  416a48:	ldr	w0, [x0, #4056]
  416a4c:	cmp	w0, #0x1
  416a50:	b.eq	416a60 <wcrtomb@plt+0x11b10>  // b.none
  416a54:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  416a58:	ldrb	w0, [x0, #680]
  416a5c:	cbz	w0, 416a70 <wcrtomb@plt+0x11b20>
  416a60:	ldr	w0, [x19, #116]
  416a64:	add	x1, sp, #0xb0
  416a68:	bl	431400 <argp_usage@@Base+0x3f20>
  416a6c:	mov	x24, x0
  416a70:	ldrb	w0, [x23, #156]
  416a74:	sub	w0, w0, #0x33
  416a78:	cmp	w0, #0x1
  416a7c:	b.hi	416c28 <wcrtomb@plt+0x11cd8>  // b.pmore
  416a80:	ldr	x0, [x19, #120]
  416a84:	bl	4049b0 <gnu_dev_major@plt>
  416a88:	mov	w0, w0
  416a8c:	add	x1, sp, #0xc8
  416a90:	bl	431400 <argp_usage@@Base+0x3f20>
  416a94:	mov	x2, #0x2a                  	// #42
  416a98:	mov	x1, x0
  416a9c:	add	x0, sp, #0xe0
  416aa0:	bl	404660 <__strcpy_chk@plt>
  416aa4:	mov	x2, #0x2a                  	// #42
  416aa8:	add	x0, sp, #0xe0
  416aac:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  416ab0:	add	x1, x1, #0x420
  416ab4:	bl	404af0 <__strcat_chk@plt>
  416ab8:	ldr	x0, [x19, #120]
  416abc:	bl	404c30 <gnu_dev_minor@plt>
  416ac0:	mov	w0, w0
  416ac4:	add	x1, sp, #0xc8
  416ac8:	bl	431400 <argp_usage@@Base+0x3f20>
  416acc:	mov	x2, #0x2a                  	// #42
  416ad0:	mov	x1, x0
  416ad4:	add	x0, sp, #0xe0
  416ad8:	bl	404af0 <__strcat_chk@plt>
  416adc:	add	x0, sp, #0xe0
  416ae0:	bl	404280 <strlen@plt>
  416ae4:	mov	x2, x0
  416ae8:	mov	x0, x21
  416aec:	str	x2, [sp, #120]
  416af0:	bl	404280 <strlen@plt>
  416af4:	mov	x28, x0
  416af8:	mov	x0, x24
  416afc:	bl	404280 <strlen@plt>
  416b00:	add	w28, w28, w0
  416b04:	add	x0, x26, #0x8d0
  416b08:	ldr	x2, [sp, #120]
  416b0c:	ldr	w3, [x0, #4]
  416b10:	add	w1, w2, #0x2
  416b14:	add	w1, w1, w28
  416b18:	cmp	w3, w1
  416b1c:	b.ge	416b24 <wcrtomb@plt+0x11bd4>  // b.tcont
  416b20:	str	w1, [x0, #4]
  416b24:	ldr	w6, [x0, #4]
  416b28:	mov	x4, x21
  416b2c:	ldr	w0, [x26, #2256]
  416b30:	add	x7, sp, #0xe0
  416b34:	str	w0, [sp]
  416b38:	sub	w6, w6, w1
  416b3c:	ldr	x0, [x20, #3936]
  416b40:	str	x27, [sp, #8]
  416b44:	add	w6, w6, w2
  416b48:	mov	x5, x24
  416b4c:	add	x3, sp, #0x88
  416b50:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  416b54:	add	x2, x2, #0xcba
  416b58:	mov	w1, #0x1                   	// #1
  416b5c:	bl	404a20 <__fprintf_chk@plt>
  416b60:	ldr	x21, [x20, #3936]
  416b64:	mov	x0, x22
  416b68:	bl	435f44 <argp_usage@@Base+0x8a64>
  416b6c:	mov	x3, x0
  416b70:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  416b74:	mov	x0, x21
  416b78:	add	x2, x2, #0xb0c
  416b7c:	mov	w1, #0x1                   	// #1
  416b80:	bl	404a20 <__fprintf_chk@plt>
  416b84:	ldrb	w0, [x25, #848]
  416b88:	cbz	w0, 416ba0 <wcrtomb@plt+0x11c50>
  416b8c:	ldrb	w0, [x19, #16]
  416b90:	cbz	w0, 416ba0 <wcrtomb@plt+0x11c50>
  416b94:	ldr	x1, [x20, #3936]
  416b98:	mov	w0, #0x2f                  	// #47
  416b9c:	bl	404cb0 <fputc_unlocked@plt>
  416ba0:	ldrb	w0, [x23, #156]
  416ba4:	cmp	w0, #0x56
  416ba8:	b.hi	416c98 <wcrtomb@plt+0x11d48>  // b.pmore
  416bac:	cmp	w0, #0x4a
  416bb0:	b.hi	416c48 <wcrtomb@plt+0x11cf8>  // b.pmore
  416bb4:	cmp	w0, #0x37
  416bb8:	b.hi	416c90 <wcrtomb@plt+0x11d40>  // b.pmore
  416bbc:	cmp	w0, #0x2f
  416bc0:	b.hi	416c6c <wcrtomb@plt+0x11d1c>  // b.pmore
  416bc4:	cbnz	w0, 416c98 <wcrtomb@plt+0x11d48>
  416bc8:	ldr	x1, [x20, #3936]
  416bcc:	mov	w0, #0xa                   	// #10
  416bd0:	bl	404500 <putc_unlocked@plt>
  416bd4:	b	4168cc <wcrtomb@plt+0x1197c>
  416bd8:	ldrb	w0, [x19, #16]
  416bdc:	mov	w1, #0x2d                  	// #45
  416be0:	cmp	w0, #0x0
  416be4:	mov	w0, #0x64                  	// #100
  416be8:	csel	w0, w0, w1, ne  // ne = any
  416bec:	b	41695c <wcrtomb@plt+0x11a0c>
  416bf0:	mov	w0, #0x68                  	// #104
  416bf4:	b	41695c <wcrtomb@plt+0x11a0c>
  416bf8:	mov	w0, #0x64                  	// #100
  416bfc:	b	41695c <wcrtomb@plt+0x11a0c>
  416c00:	mov	w0, #0x6c                  	// #108
  416c04:	b	41695c <wcrtomb@plt+0x11a0c>
  416c08:	mov	w0, #0x62                  	// #98
  416c0c:	b	41695c <wcrtomb@plt+0x11a0c>
  416c10:	mov	w0, #0x63                  	// #99
  416c14:	b	41695c <wcrtomb@plt+0x11a0c>
  416c18:	mov	w0, #0x70                  	// #112
  416c1c:	b	41695c <wcrtomb@plt+0x11a0c>
  416c20:	mov	w0, #0x43                  	// #67
  416c24:	b	41695c <wcrtomb@plt+0x11a0c>
  416c28:	ldr	x0, [x19, #136]
  416c2c:	add	x1, sp, #0xc8
  416c30:	bl	431400 <argp_usage@@Base+0x3f20>
  416c34:	mov	x1, x0
  416c38:	mov	x2, #0x2a                  	// #42
  416c3c:	add	x0, sp, #0xe0
  416c40:	bl	404660 <__strcpy_chk@plt>
  416c44:	b	416adc <wcrtomb@plt+0x11b8c>
  416c48:	sub	w2, w0, #0x4b
  416c4c:	cmp	w2, #0xb
  416c50:	b.hi	416c98 <wcrtomb@plt+0x11d48>  // b.pmore
  416c54:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416c58:	add	x1, x1, #0xdfc
  416c5c:	ldrb	w1, [x1, w2, uxtw]
  416c60:	adr	x2, 416c6c <wcrtomb@plt+0x11d1c>
  416c64:	add	x1, x2, w1, sxtb #2
  416c68:	br	x1
  416c6c:	sub	w0, w0, #0x31
  416c70:	cmp	w0, #0x1
  416c74:	b.hi	416bc8 <wcrtomb@plt+0x11c78>  // b.pmore
  416c78:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416c7c:	add	x1, x1, #0xe08
  416c80:	ldrb	w0, [x1, w0, uxtw]
  416c84:	adr	x1, 416c90 <wcrtomb@plt+0x11d40>
  416c88:	add	x0, x1, w0, sxtb #2
  416c8c:	br	x0
  416c90:	cmp	w0, #0x44
  416c94:	b.eq	416bc8 <wcrtomb@plt+0x11c78>  // b.none
  416c98:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416c9c:	add	x1, x1, #0xce1
  416ca0:	mov	w2, #0x5                   	// #5
  416ca4:	strb	w0, [sp, #128]
  416ca8:	ldr	x22, [x20, #3936]
  416cac:	mov	x0, #0x0                   	// #0
  416cb0:	strb	wzr, [sp, #129]
  416cb4:	bl	404d00 <dcgettext@plt>
  416cb8:	mov	x21, x0
  416cbc:	add	x0, sp, #0x80
  416cc0:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  416cc4:	b	416d10 <wcrtomb@plt+0x11dc0>
  416cc8:	ldr	x0, [x19, #24]
  416ccc:	ldr	x21, [x20, #3936]
  416cd0:	bl	435f44 <argp_usage@@Base+0x8a64>
  416cd4:	mov	x3, x0
  416cd8:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  416cdc:	add	x2, x2, #0xccc
  416ce0:	mov	x0, x21
  416ce4:	mov	w1, #0x1                   	// #1
  416ce8:	b	416d20 <wcrtomb@plt+0x11dd0>
  416cec:	ldr	x22, [x20, #3936]
  416cf0:	mov	w2, #0x5                   	// #5
  416cf4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416cf8:	mov	x0, #0x0                   	// #0
  416cfc:	add	x1, x1, #0xcd4
  416d00:	bl	404d00 <dcgettext@plt>
  416d04:	mov	x21, x0
  416d08:	ldr	x0, [x19, #24]
  416d0c:	bl	435f44 <argp_usage@@Base+0x8a64>
  416d10:	mov	x3, x0
  416d14:	mov	x2, x21
  416d18:	mov	x0, x22
  416d1c:	mov	w1, #0x1                   	// #1
  416d20:	bl	404a20 <__fprintf_chk@plt>
  416d24:	b	4168cc <wcrtomb@plt+0x1197c>
  416d28:	ldr	x21, [x20, #3936]
  416d2c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416d30:	add	x1, x1, #0xcf8
  416d34:	mov	w2, #0x5                   	// #5
  416d38:	mov	x0, #0x0                   	// #0
  416d3c:	bl	404d00 <dcgettext@plt>
  416d40:	mov	w1, #0x1                   	// #1
  416d44:	mov	x2, x0
  416d48:	mov	x0, x21
  416d4c:	bl	404a20 <__fprintf_chk@plt>
  416d50:	b	4168cc <wcrtomb@plt+0x1197c>
  416d54:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416d58:	mov	w2, #0x5                   	// #5
  416d5c:	ldr	x21, [x20, #3936]
  416d60:	add	x1, x1, #0xd07
  416d64:	b	416d38 <wcrtomb@plt+0x11de8>
  416d68:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416d6c:	mov	w2, #0x5                   	// #5
  416d70:	ldr	x21, [x20, #3936]
  416d74:	add	x1, x1, #0xd16
  416d78:	b	416d38 <wcrtomb@plt+0x11de8>
  416d7c:	mov	x1, #0xc                   	// #12
  416d80:	add	x0, x23, #0x171
  416d84:	bl	41667c <wcrtomb@plt+0x1172c>
  416d88:	add	x1, sp, #0xc8
  416d8c:	bl	431400 <argp_usage@@Base+0x3f20>
  416d90:	mov	x2, #0x2a                  	// #42
  416d94:	mov	x1, x0
  416d98:	add	x0, sp, #0xe0
  416d9c:	bl	404660 <__strcpy_chk@plt>
  416da0:	mov	w2, #0x5                   	// #5
  416da4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416da8:	ldr	x21, [x20, #3936]
  416dac:	add	x1, x1, #0xd29
  416db0:	mov	x0, #0x0                   	// #0
  416db4:	bl	404d00 <dcgettext@plt>
  416db8:	add	x3, sp, #0xe0
  416dbc:	mov	x2, x0
  416dc0:	b	416ce0 <wcrtomb@plt+0x11d90>
  416dc4:	sub	sp, sp, #0x3d0
  416dc8:	mov	x2, #0x200                 	// #512
  416dcc:	add	x0, sp, #0x1d0
  416dd0:	mov	w1, #0x0                   	// #0
  416dd4:	stp	x29, x30, [sp]
  416dd8:	mov	x29, sp
  416ddc:	str	x19, [sp, #16]
  416de0:	bl	404700 <memset@plt>
  416de4:	mov	w0, #0x56                  	// #86
  416de8:	strb	w0, [sp, #620]
  416dec:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  416df0:	ldr	x0, [x0, #2536]
  416df4:	cbz	x0, 416e08 <wcrtomb@plt+0x11eb8>
  416df8:	ldr	x1, [x0, #136]
  416dfc:	str	x1, [sp, #600]
  416e00:	ldr	w0, [x0, #144]
  416e04:	str	w0, [sp, #608]
  416e08:	add	x19, sp, #0x30
  416e0c:	add	x0, sp, #0x28
  416e10:	bl	421adc <wcrtomb@plt+0x1cb8c>
  416e14:	mov	x0, x19
  416e18:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  416e1c:	add	x1, x1, #0xc29
  416e20:	bl	417c2c <wcrtomb@plt+0x12cdc>
  416e24:	mov	w3, #0x0                   	// #0
  416e28:	add	x2, sp, #0x24
  416e2c:	add	x1, sp, #0x28
  416e30:	add	x0, sp, #0x1d0
  416e34:	bl	415f00 <wcrtomb@plt+0x10fb0>
  416e38:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  416e3c:	ldr	x1, [x0, #3976]
  416e40:	mov	x0, x19
  416e44:	bl	417c2c <wcrtomb@plt+0x12cdc>
  416e48:	add	x1, sp, #0x1d0
  416e4c:	mov	x2, #0x0                   	// #0
  416e50:	add	x0, sp, #0x28
  416e54:	bl	4167d4 <wcrtomb@plt+0x11884>
  416e58:	add	x0, sp, #0x28
  416e5c:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  416e60:	ldp	x29, x30, [sp]
  416e64:	ldr	x19, [sp, #16]
  416e68:	add	sp, sp, #0x3d0
  416e6c:	ret
  416e70:	stp	x29, x30, [sp, #-48]!
  416e74:	mov	x29, sp
  416e78:	stp	x19, x20, [sp, #16]
  416e7c:	mov	x20, x0
  416e80:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  416e84:	stp	x21, x22, [sp, #32]
  416e88:	mov	x21, x1
  416e8c:	ldr	w0, [x0, #4056]
  416e90:	mov	x22, x2
  416e94:	cmp	w0, #0x4
  416e98:	b.ne	416ec4 <wcrtomb@plt+0x11f74>  // b.any
  416e9c:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  416ea0:	add	x19, x19, #0x8d8
  416ea4:	ldrb	w0, [x19, #317]
  416ea8:	cbnz	w0, 416ec4 <wcrtomb@plt+0x11f74>
  416eac:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  416eb0:	ldr	x0, [x0, #3976]
  416eb4:	cbz	x0, 416ec4 <wcrtomb@plt+0x11f74>
  416eb8:	bl	416dc4 <wcrtomb@plt+0x11e74>
  416ebc:	mov	w0, #0x1                   	// #1
  416ec0:	strb	w0, [x19, #317]
  416ec4:	mov	x2, x22
  416ec8:	mov	x1, x21
  416ecc:	mov	x0, x20
  416ed0:	ldp	x19, x20, [sp, #16]
  416ed4:	ldp	x21, x22, [sp, #32]
  416ed8:	ldp	x29, x30, [sp], #48
  416edc:	b	4167d4 <wcrtomb@plt+0x11884>
  416ee0:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  416ee4:	ldr	w1, [x1, #652]
  416ee8:	cmp	w1, #0x1
  416eec:	b.le	416fd4 <wcrtomb@plt+0x12084>
  416ef0:	stp	x29, x30, [sp, #-96]!
  416ef4:	mov	w1, #0x64                  	// #100
  416ef8:	mov	x29, sp
  416efc:	stp	x19, x20, [sp, #16]
  416f00:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  416f04:	stp	x21, x22, [sp, #32]
  416f08:	mov	x21, x0
  416f0c:	mov	w0, w2
  416f10:	strb	w1, [sp, #56]
  416f14:	add	x1, sp, #0x39
  416f18:	bl	4249ec <wcrtomb@plt+0x1fa9c>
  416f1c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  416f20:	ldrb	w0, [x0, #681]
  416f24:	cbz	w0, 416f64 <wcrtomb@plt+0x12014>
  416f28:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416f2c:	add	x1, x1, #0xcaf
  416f30:	mov	w2, #0x5                   	// #5
  416f34:	mov	x0, #0x0                   	// #0
  416f38:	ldr	x22, [x20, #3936]
  416f3c:	bl	404d00 <dcgettext@plt>
  416f40:	mov	x19, x0
  416f44:	bl	405c2c <wcrtomb@plt+0xcdc>
  416f48:	add	x1, sp, #0x48
  416f4c:	bl	431400 <argp_usage@@Base+0x3f20>
  416f50:	mov	x2, x19
  416f54:	mov	x3, x0
  416f58:	mov	w1, #0x1                   	// #1
  416f5c:	mov	x0, x22
  416f60:	bl	404a20 <__fprintf_chk@plt>
  416f64:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  416f68:	add	x1, x0, #0x8d0
  416f6c:	ldr	x22, [x20, #3936]
  416f70:	mov	w2, #0x5                   	// #5
  416f74:	ldr	w4, [x0, #2256]
  416f78:	mov	x0, #0x0                   	// #0
  416f7c:	ldr	w19, [x1, #4]
  416f80:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  416f84:	add	x1, x1, #0xd43
  416f88:	add	w19, w19, #0x1
  416f8c:	add	w19, w19, w4
  416f90:	bl	404d00 <dcgettext@plt>
  416f94:	mov	x20, x0
  416f98:	mov	x0, x21
  416f9c:	bl	435f44 <argp_usage@@Base+0x8a64>
  416fa0:	mov	x6, x0
  416fa4:	mov	x5, x20
  416fa8:	mov	w4, w19
  416fac:	add	x3, sp, #0x38
  416fb0:	mov	x0, x22
  416fb4:	mov	w1, #0x1                   	// #1
  416fb8:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  416fbc:	add	x2, x2, #0xd57
  416fc0:	bl	404a20 <__fprintf_chk@plt>
  416fc4:	ldp	x19, x20, [sp, #16]
  416fc8:	ldp	x21, x22, [sp, #32]
  416fcc:	ldp	x29, x30, [sp], #96
  416fd0:	ret
  416fd4:	ret
  416fd8:	stp	x29, x30, [sp, #-32]!
  416fdc:	mov	x29, sp
  416fe0:	stp	x19, x20, [sp, #16]
  416fe4:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  416fe8:	mov	x19, x0
  416fec:	ldrb	w1, [x20, #936]
  416ff0:	cbz	w1, 417000 <wcrtomb@plt+0x120b0>
  416ff4:	bl	40608c <wcrtomb@plt+0x113c>
  416ff8:	tbnz	x0, #63, 41701c <wcrtomb@plt+0x120cc>
  416ffc:	sub	x19, x19, x0, lsl #9
  417000:	mov	x0, x19
  417004:	bl	4058d0 <wcrtomb@plt+0x980>
  417008:	cmp	x19, #0x0
  41700c:	b.gt	417024 <wcrtomb@plt+0x120d4>
  417010:	ldp	x19, x20, [sp, #16]
  417014:	ldp	x29, x30, [sp], #32
  417018:	ret
  41701c:	strb	wzr, [x20, #936]
  417020:	b	417000 <wcrtomb@plt+0x120b0>
  417024:	bl	406f04 <wcrtomb@plt+0x1fb4>
  417028:	cbnz	x0, 417064 <wcrtomb@plt+0x12114>
  41702c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  417030:	ldr	x0, [x0, #1016]
  417034:	cbz	x0, 41703c <wcrtomb@plt+0x120ec>
  417038:	blr	x0
  41703c:	mov	w2, #0x5                   	// #5
  417040:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  417044:	mov	x0, #0x0                   	// #0
  417048:	add	x1, x1, #0x41c
  41704c:	bl	404d00 <dcgettext@plt>
  417050:	mov	x2, x0
  417054:	mov	w1, #0x0                   	// #0
  417058:	mov	w0, #0x0                   	// #0
  41705c:	bl	4042e0 <error@plt>
  417060:	bl	40d47c <wcrtomb@plt+0x852c>
  417064:	sub	x19, x19, #0x200
  417068:	bl	405c98 <wcrtomb@plt+0xd48>
  41706c:	b	417000 <wcrtomb@plt+0x120b0>
  417070:	stp	x29, x30, [sp, #-32]!
  417074:	mov	x29, sp
  417078:	stp	x19, x20, [sp, #16]
  41707c:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  417080:	add	x19, x19, #0x68
  417084:	ldrb	w0, [x19, #377]
  417088:	cbnz	w0, 4170d4 <wcrtomb@plt+0x12184>
  41708c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  417090:	ldr	x0, [x0, #4080]
  417094:	ldrb	w20, [x0, #156]
  417098:	bl	405c98 <wcrtomb@plt+0xd48>
  41709c:	mov	x0, x19
  4170a0:	bl	4058a8 <wcrtomb@plt+0x958>
  4170a4:	ldrb	w0, [x19, #272]
  4170a8:	cbz	w0, 4170c0 <wcrtomb@plt+0x12170>
  4170ac:	mov	x0, x19
  4170b0:	bl	41d04c <wcrtomb@plt+0x180fc>
  4170b4:	ldp	x19, x20, [sp, #16]
  4170b8:	ldp	x29, x30, [sp], #32
  4170bc:	b	4058b8 <wcrtomb@plt+0x968>
  4170c0:	cmp	w20, #0x35
  4170c4:	b.eq	4170b4 <wcrtomb@plt+0x12164>  // b.none
  4170c8:	ldr	x0, [x19, #136]
  4170cc:	bl	416fd8 <wcrtomb@plt+0x12088>
  4170d0:	b	4170b4 <wcrtomb@plt+0x12164>
  4170d4:	ldp	x19, x20, [sp, #16]
  4170d8:	ldp	x29, x30, [sp], #32
  4170dc:	ret
  4170e0:	stp	x29, x30, [sp, #-128]!
  4170e4:	mov	x29, sp
  4170e8:	stp	x19, x20, [sp, #16]
  4170ec:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  4170f0:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  4170f4:	add	x19, x19, #0x68
  4170f8:	add	x20, x20, #0xff0
  4170fc:	stp	x23, x24, [sp, #48]
  417100:	adrp	x24, 448000 <_obstack_memory_used@@Base+0x10380>
  417104:	add	x24, x24, #0xe0c
  417108:	stp	x21, x22, [sp, #32]
  41710c:	mov	w22, #0x0                   	// #0
  417110:	mov	x23, x0
  417114:	stp	x25, x26, [sp, #64]
  417118:	stp	x27, x28, [sp, #80]
  41711c:	bl	415cbc <wcrtomb@plt+0x10d6c>
  417120:	bl	41a6e8 <wcrtomb@plt+0x15798>
  417124:	mov	w0, #0x0                   	// #0
  417128:	bl	407d98 <wcrtomb@plt+0x2e48>
  41712c:	mov	x0, x19
  417130:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  417134:	mov	x1, x19
  417138:	mov	x0, x20
  41713c:	mov	w2, #0x0                   	// #0
  417140:	bl	4162bc <wcrtomb@plt+0x1136c>
  417144:	mov	w21, w0
  417148:	cmp	w0, #0x5
  41714c:	b.hi	417344 <wcrtomb@plt+0x123f4>  // b.pmore
  417150:	ldrh	w0, [x24, w21, uxtw #1]
  417154:	adr	x1, 417160 <wcrtomb@plt+0x12210>
  417158:	add	x0, x1, w0, sxth #2
  41715c:	br	x0
  417160:	bl	404970 <abort@plt>
  417164:	ldr	x0, [x20]
  417168:	mov	x1, x19
  41716c:	mov	w3, #0x1                   	// #1
  417170:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  417174:	add	x2, x2, #0xfd8
  417178:	bl	415f00 <wcrtomb@plt+0x10fb0>
  41717c:	ldr	x0, [x19, #8]
  417180:	bl	41ab18 <wcrtomb@plt+0x15bc8>
  417184:	tst	w0, #0xff
  417188:	b.ne	417218 <wcrtomb@plt+0x122c8>  // b.any
  41718c:	ldr	x0, [x20]
  417190:	ldrb	w0, [x0, #156]
  417194:	cmp	w0, #0x4d
  417198:	b.eq	41723c <wcrtomb@plt+0x122ec>  // b.none
  41719c:	cmp	w0, #0x56
  4171a0:	b.eq	41723c <wcrtomb@plt+0x122ec>  // b.none
  4171a4:	cmp	w0, #0x35
  4171a8:	b.ne	4171fc <wcrtomb@plt+0x122ac>  // b.any
  4171ac:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4171b0:	ldrb	w0, [x0, #706]
  4171b4:	cbz	w0, 4171fc <wcrtomb@plt+0x122ac>
  4171b8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4171bc:	ldr	x0, [x0, #1016]
  4171c0:	cbz	x0, 4171c8 <wcrtomb@plt+0x12278>
  4171c4:	blr	x0
  4171c8:	mov	w2, #0x5                   	// #5
  4171cc:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4171d0:	mov	x0, #0x0                   	// #0
  4171d4:	add	x1, x1, #0xd62
  4171d8:	bl	404d00 <dcgettext@plt>
  4171dc:	mov	x22, x0
  4171e0:	ldr	x0, [x19, #8]
  4171e4:	bl	436084 <argp_usage@@Base+0x8ba4>
  4171e8:	mov	x3, x0
  4171ec:	mov	x2, x22
  4171f0:	mov	w1, #0x0                   	// #0
  4171f4:	mov	w0, #0x0                   	// #0
  4171f8:	bl	4042e0 <error@plt>
  4171fc:	bl	417070 <wcrtomb@plt+0x12120>
  417200:	mov	x0, x19
  417204:	bl	41ac38 <wcrtomb@plt+0x15ce8>
  417208:	tst	w0, #0xff
  41720c:	b.ne	417344 <wcrtomb@plt+0x123f4>  // b.any
  417210:	mov	w22, w21
  417214:	b	41712c <wcrtomb@plt+0x121dc>
  417218:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  41721c:	add	x22, x22, #0x30
  417220:	ldr	x0, [x22, #8]
  417224:	tbz	x0, #63, 417254 <wcrtomb@plt+0x12304>
  417228:	ldr	x0, [x19, #8]
  41722c:	ldr	x1, [x19, #392]
  417230:	bl	40dac4 <wcrtomb@plt+0x8b74>
  417234:	tst	w0, #0xff
  417238:	b.ne	41718c <wcrtomb@plt+0x1223c>  // b.any
  41723c:	ldr	x0, [x20]
  417240:	mov	x1, x19
  417244:	ldrb	w0, [x0, #156]
  417248:	bl	415d2c <wcrtomb@plt+0x10ddc>
  41724c:	blr	x23
  417250:	b	417200 <wcrtomb@plt+0x122b0>
  417254:	ldr	x0, [x20]
  417258:	add	x0, x0, #0x88
  41725c:	bl	415d0c <wcrtomb@plt+0x10dbc>
  417260:	stp	x0, xzr, [x19, #232]
  417264:	ldp	x2, x3, [x22]
  417268:	ldp	x0, x1, [x19, #232]
  41726c:	bl	43683c <argp_usage@@Base+0x935c>
  417270:	tbnz	w0, #31, 41718c <wcrtomb@plt+0x1223c>
  417274:	b	417228 <wcrtomb@plt+0x122d8>
  417278:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41727c:	ldrb	w0, [x0, #681]
  417280:	cbz	w0, 4172c4 <wcrtomb@plt+0x12374>
  417284:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  417288:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41728c:	add	x1, x1, #0xd6f
  417290:	mov	w2, #0x5                   	// #5
  417294:	ldr	x25, [x0, #3936]
  417298:	mov	x0, #0x0                   	// #0
  41729c:	bl	404d00 <dcgettext@plt>
  4172a0:	mov	x21, x0
  4172a4:	bl	405c2c <wcrtomb@plt+0xcdc>
  4172a8:	add	x1, sp, #0x68
  4172ac:	bl	431400 <argp_usage@@Base+0x3f20>
  4172b0:	mov	x2, x21
  4172b4:	mov	x3, x0
  4172b8:	mov	w1, #0x1                   	// #1
  4172bc:	mov	x0, x25
  4172c0:	bl	404a20 <__fprintf_chk@plt>
  4172c4:	ldr	x0, [x20]
  4172c8:	bl	405c98 <wcrtomb@plt+0xd48>
  4172cc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4172d0:	ldrb	w0, [x0, #85]
  4172d4:	cbnz	w0, 4174c4 <wcrtomb@plt+0x12574>
  4172d8:	mov	x1, x19
  4172dc:	mov	x0, x20
  4172e0:	mov	w2, #0x0                   	// #0
  4172e4:	bl	4162bc <wcrtomb@plt+0x1136c>
  4172e8:	cmp	w0, #0x3
  4172ec:	b.eq	417344 <wcrtomb@plt+0x123f4>  // b.none
  4172f0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4172f4:	ldr	w0, [x0, #480]
  4172f8:	tbz	w0, #0, 417344 <wcrtomb@plt+0x123f4>
  4172fc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  417300:	ldr	x0, [x0, #1016]
  417304:	cbz	x0, 41730c <wcrtomb@plt+0x123bc>
  417308:	blr	x0
  41730c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  417310:	add	x1, x1, #0x63b
  417314:	mov	w2, #0x5                   	// #5
  417318:	mov	x0, #0x0                   	// #0
  41731c:	bl	404d00 <dcgettext@plt>
  417320:	mov	x19, x0
  417324:	bl	405c2c <wcrtomb@plt+0xcdc>
  417328:	add	x1, sp, #0x68
  41732c:	bl	431400 <argp_usage@@Base+0x3f20>
  417330:	mov	x2, x19
  417334:	mov	x3, x0
  417338:	mov	w1, #0x0                   	// #0
  41733c:	mov	w0, #0x0                   	// #0
  417340:	bl	4042e0 <error@plt>
  417344:	bl	40770c <wcrtomb@plt+0x27bc>
  417348:	bl	41acd0 <wcrtomb@plt+0x15d80>
  41734c:	ldp	x19, x20, [sp, #16]
  417350:	ldp	x21, x22, [sp, #32]
  417354:	ldp	x23, x24, [sp, #48]
  417358:	ldp	x25, x26, [sp, #64]
  41735c:	ldp	x27, x28, [sp, #80]
  417360:	ldp	x29, x30, [sp], #128
  417364:	ret
  417368:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41736c:	ldrb	w0, [x0, #681]
  417370:	cbz	w0, 417344 <wcrtomb@plt+0x123f4>
  417374:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  417378:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41737c:	add	x1, x1, #0xd8e
  417380:	mov	w2, #0x5                   	// #5
  417384:	ldr	x20, [x0, #3936]
  417388:	mov	x0, #0x0                   	// #0
  41738c:	bl	404d00 <dcgettext@plt>
  417390:	mov	x19, x0
  417394:	bl	405c2c <wcrtomb@plt+0xcdc>
  417398:	add	x1, sp, #0x68
  41739c:	bl	431400 <argp_usage@@Base+0x3f20>
  4173a0:	mov	x2, x19
  4173a4:	mov	x3, x0
  4173a8:	mov	w1, #0x1                   	// #1
  4173ac:	mov	x0, x20
  4173b0:	bl	404a20 <__fprintf_chk@plt>
  4173b4:	b	417344 <wcrtomb@plt+0x123f4>
  4173b8:	ldr	x0, [x20]
  4173bc:	bl	405c98 <wcrtomb@plt+0xd48>
  4173c0:	cmp	w22, #0x3
  4173c4:	b.hi	417200 <wcrtomb@plt+0x122b0>  // b.pmore
  4173c8:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  4173cc:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  4173d0:	add	x0, x0, #0xe18
  4173d4:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x39380>
  4173d8:	ldrh	w0, [x0, w22, uxtw #1]
  4173dc:	adr	x1, 4173e8 <wcrtomb@plt+0x12498>
  4173e0:	add	x0, x1, w0, sxth #2
  4173e4:	br	x0
  4173e8:	ldr	x0, [x26, #1016]
  4173ec:	cbz	x0, 4173f4 <wcrtomb@plt+0x124a4>
  4173f0:	blr	x0
  4173f4:	mov	w2, #0x5                   	// #5
  4173f8:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  4173fc:	mov	x0, #0x0                   	// #0
  417400:	add	x1, x1, #0xb68
  417404:	bl	404d00 <dcgettext@plt>
  417408:	mov	x2, x0
  41740c:	mov	w1, #0x0                   	// #0
  417410:	mov	w0, #0x0                   	// #0
  417414:	bl	4042e0 <error@plt>
  417418:	mov	w0, #0x2                   	// #2
  41741c:	str	w0, [x25, #3464]
  417420:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  417424:	ldrb	w0, [x0, #681]
  417428:	cbz	w0, 417488 <wcrtomb@plt+0x12538>
  41742c:	bl	405c2c <wcrtomb@plt+0xcdc>
  417430:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  417434:	mov	w2, #0x5                   	// #5
  417438:	ldr	x27, [x1, #4072]
  41743c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  417440:	ldr	x1, [x1, #4088]
  417444:	add	x27, x27, x1
  417448:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41744c:	sub	x27, x0, x27
  417450:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  417454:	add	x1, x1, #0xcaf
  417458:	ldr	x28, [x0, #3936]
  41745c:	mov	x0, #0x0                   	// #0
  417460:	bl	404d00 <dcgettext@plt>
  417464:	mov	x22, x0
  417468:	add	x1, sp, #0x68
  41746c:	mov	x0, x27
  417470:	bl	431400 <argp_usage@@Base+0x3f20>
  417474:	mov	x3, x0
  417478:	mov	x2, x22
  41747c:	mov	x0, x28
  417480:	mov	w1, #0x1                   	// #1
  417484:	bl	404a20 <__fprintf_chk@plt>
  417488:	ldr	x0, [x26, #1016]
  41748c:	cbz	x0, 417494 <wcrtomb@plt+0x12544>
  417490:	blr	x0
  417494:	mov	w2, #0x5                   	// #5
  417498:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41749c:	mov	x0, #0x0                   	// #0
  4174a0:	add	x1, x1, #0xa4e
  4174a4:	bl	404d00 <dcgettext@plt>
  4174a8:	mov	x2, x0
  4174ac:	mov	w1, #0x0                   	// #0
  4174b0:	mov	w0, #0x0                   	// #0
  4174b4:	bl	4042e0 <error@plt>
  4174b8:	mov	w0, #0x2                   	// #2
  4174bc:	str	w0, [x25, #3464]
  4174c0:	b	417200 <wcrtomb@plt+0x122b0>
  4174c4:	mov	w21, w22
  4174c8:	b	417200 <wcrtomb@plt+0x122b0>
  4174cc:	stp	x29, x30, [sp, #-32]!
  4174d0:	mov	x29, sp
  4174d4:	str	x19, [sp, #16]
  4174d8:	bl	405c2c <wcrtomb@plt+0xcdc>
  4174dc:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4174e0:	mov	x2, x0
  4174e4:	mov	x19, x1
  4174e8:	ldr	w0, [x1, #652]
  4174ec:	cbz	w0, 417504 <wcrtomb@plt+0x125b4>
  4174f0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4174f4:	ldr	x1, [x0, #4080]
  4174f8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4174fc:	add	x0, x0, #0x68
  417500:	bl	416e70 <wcrtomb@plt+0x11f20>
  417504:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  417508:	ldrb	w0, [x0, #41]
  41750c:	cbz	w0, 41754c <wcrtomb@plt+0x125fc>
  417510:	ldr	w0, [x19, #652]
  417514:	cmp	w0, #0x2
  417518:	b.le	41754c <wcrtomb@plt+0x125fc>
  41751c:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  417520:	add	x19, x19, #0x68
  417524:	mov	x0, x19
  417528:	bl	414e14 <wcrtomb@plt+0xfec4>
  41752c:	tst	w0, #0xff
  417530:	b.eq	41754c <wcrtomb@plt+0x125fc>  // b.none
  417534:	ldr	x19, [x19, #384]
  417538:	mov	x0, x19
  41753c:	bl	413b00 <wcrtomb@plt+0xebb0>
  417540:	mov	x1, x0
  417544:	mov	x0, x19
  417548:	bl	415580 <wcrtomb@plt+0x10630>
  41754c:	ldr	x19, [sp, #16]
  417550:	ldp	x29, x30, [sp], #32
  417554:	b	417070 <wcrtomb@plt+0x12120>
  417558:	stp	x29, x30, [sp, #-32]!
  41755c:	mov	x29, sp
  417560:	stp	x19, x20, [sp, #16]
  417564:	bl	415cbc <wcrtomb@plt+0x10d6c>
  417568:	bl	41a6e8 <wcrtomb@plt+0x15798>
  41756c:	mov	w0, #0x0                   	// #0
  417570:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  417574:	bl	407d98 <wcrtomb@plt+0x2e48>
  417578:	add	x19, x19, #0x68
  41757c:	mov	x1, x19
  417580:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  417584:	mov	w2, #0x0                   	// #0
  417588:	add	x0, x20, #0xff0
  41758c:	bl	4162bc <wcrtomb@plt+0x1136c>
  417590:	cmp	w0, #0x1
  417594:	b.ne	41761c <wcrtomb@plt+0x126cc>  // b.any
  417598:	ldr	x0, [x20, #4080]
  41759c:	mov	x1, x19
  4175a0:	mov	w3, #0x0                   	// #0
  4175a4:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  4175a8:	add	x2, x2, #0xfd8
  4175ac:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4175b0:	bl	415f00 <wcrtomb@plt+0x10fb0>
  4175b4:	ldr	x1, [x20, #4080]
  4175b8:	ldrb	w0, [x1, #156]
  4175bc:	cmp	w0, #0x56
  4175c0:	b.ne	4175d0 <wcrtomb@plt+0x12680>  // b.any
  4175c4:	add	x0, x19, #0xf88
  4175c8:	mov	x2, #0x64                  	// #100
  4175cc:	bl	417c68 <wcrtomb@plt+0x12d18>
  4175d0:	ldr	x0, [x19, #3976]
  4175d4:	cbz	x0, 41761c <wcrtomb@plt+0x126cc>
  4175d8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4175dc:	ldr	w0, [x0, #652]
  4175e0:	cbz	w0, 4175e8 <wcrtomb@plt+0x12698>
  4175e4:	bl	416dc4 <wcrtomb@plt+0x11e74>
  4175e8:	ldr	x0, [x19, #3976]
  4175ec:	bl	41ab18 <wcrtomb@plt+0x15bc8>
  4175f0:	tst	w0, #0xff
  4175f4:	b.ne	41761c <wcrtomb@plt+0x126cc>  // b.any
  4175f8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4175fc:	ldrb	w0, [x0, #84]
  417600:	cbz	w0, 41761c <wcrtomb@plt+0x126cc>
  417604:	ldr	x0, [x19, #3976]
  417608:	bl	406bd0 <wcrtomb@plt+0x1c80>
  41760c:	mov	x19, x0
  417610:	bl	41ab18 <wcrtomb@plt+0x15bc8>
  417614:	mov	x0, x19
  417618:	bl	404ae0 <free@plt>
  41761c:	bl	40770c <wcrtomb@plt+0x27bc>
  417620:	ldp	x19, x20, [sp, #16]
  417624:	ldp	x29, x30, [sp], #32
  417628:	b	41ae38 <wcrtomb@plt+0x15ee8>
  41762c:	ldr	x0, [x0]
  417630:	udiv	x2, x0, x1
  417634:	msub	x0, x2, x1, x0
  417638:	ret
  41763c:	ldr	x2, [x0]
  417640:	ldr	x0, [x1]
  417644:	cmp	x2, x0
  417648:	cset	w0, eq  // eq = none
  41764c:	ret
  417650:	stp	x29, x30, [sp, #-16]!
  417654:	mov	x29, sp
  417658:	bl	404730 <getpwnam@plt>
  41765c:	cbz	x0, 41766c <wcrtomb@plt+0x1271c>
  417660:	ldr	w0, [x0, #16]
  417664:	ldp	x29, x30, [sp], #16
  417668:	ret
  41766c:	mov	x0, #0xffffffffffffffff    	// #-1
  417670:	b	417664 <wcrtomb@plt+0x12714>
  417674:	stp	x29, x30, [sp, #-16]!
  417678:	mov	x29, sp
  41767c:	bl	4043b0 <getgrnam@plt>
  417680:	cbz	x0, 417690 <wcrtomb@plt+0x12740>
  417684:	ldr	w0, [x0, #16]
  417688:	ldp	x29, x30, [sp], #16
  41768c:	ret
  417690:	mov	x0, #0xffffffffffffffff    	// #-1
  417694:	b	417688 <wcrtomb@plt+0x12738>
  417698:	stp	x29, x30, [sp, #-80]!
  41769c:	mov	x29, sp
  4176a0:	stp	x19, x20, [sp, #16]
  4176a4:	mov	x19, x1
  4176a8:	mov	x20, x3
  4176ac:	stp	x21, x22, [sp, #32]
  4176b0:	mov	x22, x2
  4176b4:	mov	w21, w4
  4176b8:	stp	x23, x24, [sp, #48]
  4176bc:	mov	x24, x0
  4176c0:	bl	404e10 <__errno_location@plt>
  4176c4:	str	wzr, [x0]
  4176c8:	add	x1, sp, #0x48
  4176cc:	mov	x23, x0
  4176d0:	mov	w2, #0xa                   	// #10
  4176d4:	mov	x0, x19
  4176d8:	bl	404940 <strtoumax@plt>
  4176dc:	mov	x1, x0
  4176e0:	ldr	x0, [sp, #72]
  4176e4:	ldrb	w0, [x0]
  4176e8:	cbnz	w0, 4176f4 <wcrtomb@plt+0x127a4>
  4176ec:	ldr	w0, [x23]
  4176f0:	cbz	w0, 417740 <wcrtomb@plt+0x127f0>
  4176f4:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4176f8:	add	x1, x1, #0xe60
  4176fc:	mov	w2, #0x5                   	// #5
  417700:	mov	x0, #0x0                   	// #0
  417704:	bl	404d00 <dcgettext@plt>
  417708:	mov	x6, x19
  41770c:	mov	x2, x0
  417710:	mov	x5, x22
  417714:	mov	w0, #0x0                   	// #0
  417718:	mov	w4, w21
  41771c:	mov	x3, x20
  417720:	mov	w1, #0x0                   	// #0
  417724:	bl	4042e0 <error@plt>
  417728:	mov	w0, #0xffffffff            	// #-1
  41772c:	ldp	x19, x20, [sp, #16]
  417730:	ldp	x21, x22, [sp, #32]
  417734:	ldp	x23, x24, [sp, #48]
  417738:	ldp	x29, x30, [sp], #80
  41773c:	ret
  417740:	mov	x2, #0xffffffff            	// #4294967295
  417744:	cmp	x1, x2
  417748:	b.ls	41775c <wcrtomb@plt+0x1280c>  // b.plast
  41774c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  417750:	mov	w2, #0x5                   	// #5
  417754:	add	x1, x1, #0xe76
  417758:	b	417700 <wcrtomb@plt+0x127b0>
  41775c:	str	x1, [x24]
  417760:	b	41772c <wcrtomb@plt+0x127dc>
  417764:	stp	x29, x30, [sp, #-368]!
  417768:	mov	x29, sp
  41776c:	stp	x19, x20, [sp, #16]
  417770:	mov	x20, x1
  417774:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  417778:	add	x1, x1, #0xb66
  41777c:	stp	x21, x22, [sp, #32]
  417780:	mov	x22, x3
  417784:	stp	x23, x24, [sp, #48]
  417788:	stp	x25, x26, [sp, #64]
  41778c:	mov	x25, x0
  417790:	mov	x26, x2
  417794:	mov	x0, x20
  417798:	stp	x27, x28, [sp, #80]
  41779c:	stp	xzr, xzr, [sp, #104]
  4177a0:	bl	4045c0 <fopen@plt>
  4177a4:	cbnz	x0, 4177b0 <wcrtomb@plt+0x12860>
  4177a8:	mov	x0, x20
  4177ac:	bl	424e6c <wcrtomb@plt+0x1ff1c>
  4177b0:	adrp	x27, 417000 <wcrtomb@plt+0x120b0>
  4177b4:	add	x27, x27, #0x63c
  4177b8:	mov	x24, x0
  4177bc:	mov	w23, #0x0                   	// #0
  4177c0:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  4177c4:	mov	w21, #0x0                   	// #0
  4177c8:	add	x0, x0, #0x2b3
  4177cc:	mov	w19, #0x8e44                	// #36420
  4177d0:	str	x0, [sp, #200]
  4177d4:	mov	x2, x24
  4177d8:	add	x1, sp, #0x70
  4177dc:	add	x0, sp, #0x68
  4177e0:	bl	404ab0 <getline@plt>
  4177e4:	cmp	x0, #0x0
  4177e8:	b.gt	41783c <wcrtomb@plt+0x128ec>
  4177ec:	tbz	w19, #3, 4177f8 <wcrtomb@plt+0x128a8>
  4177f0:	add	x0, sp, #0x88
  4177f4:	bl	426d30 <wcrtomb@plt+0x21de0>
  4177f8:	mov	x0, x24
  4177fc:	bl	404570 <fclose@plt>
  417800:	cbz	w23, 417a80 <wcrtomb@plt+0x12b30>
  417804:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  417808:	ldr	x0, [x0, #1016]
  41780c:	cbz	x0, 417814 <wcrtomb@plt+0x128c4>
  417810:	blr	x0
  417814:	mov	w2, #0x5                   	// #5
  417818:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41781c:	mov	x0, #0x0                   	// #0
  417820:	add	x1, x1, #0xee1
  417824:	bl	404d00 <dcgettext@plt>
  417828:	mov	x2, x0
  41782c:	mov	w1, #0x0                   	// #0
  417830:	mov	w0, #0x0                   	// #0
  417834:	bl	4042e0 <error@plt>
  417838:	b	4178a0 <wcrtomb@plt+0x12950>
  41783c:	ldr	x0, [sp, #104]
  417840:	add	w21, w21, #0x1
  417844:	mov	w2, w19
  417848:	add	x1, sp, #0x88
  41784c:	bl	4294ac <wcrtomb@plt+0x2455c>
  417850:	cbz	w0, 4178a4 <wcrtomb@plt+0x12954>
  417854:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  417858:	ldr	x0, [x0, #1016]
  41785c:	cbz	x0, 417864 <wcrtomb@plt+0x12914>
  417860:	blr	x0
  417864:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  417868:	add	x1, x1, #0xe91
  41786c:	mov	w2, #0x5                   	// #5
  417870:	mov	x0, #0x0                   	// #0
  417874:	bl	404d00 <dcgettext@plt>
  417878:	mov	x19, x0
  41787c:	add	x0, sp, #0x88
  417880:	bl	426dc8 <wcrtomb@plt+0x21e78>
  417884:	mov	w4, w21
  417888:	mov	x5, x0
  41788c:	mov	x3, x20
  417890:	mov	x2, x19
  417894:	mov	w1, #0x0                   	// #0
  417898:	mov	w0, #0x0                   	// #0
  41789c:	bl	4042e0 <error@plt>
  4178a0:	bl	40d47c <wcrtomb@plt+0x852c>
  4178a4:	ldr	x0, [sp, #136]
  4178a8:	cbz	x0, 4178e4 <wcrtomb@plt+0x12994>
  4178ac:	cmp	x0, #0x2
  4178b0:	b.eq	4178ec <wcrtomb@plt+0x1299c>  // b.none
  4178b4:	mov	w2, #0x5                   	// #5
  4178b8:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4178bc:	mov	x0, #0x0                   	// #0
  4178c0:	add	x1, x1, #0xeae
  4178c4:	bl	404d00 <dcgettext@plt>
  4178c8:	mov	x2, x0
  4178cc:	mov	w4, w21
  4178d0:	mov	x3, x20
  4178d4:	mov	w1, #0x0                   	// #0
  4178d8:	mov	w0, #0x0                   	// #0
  4178dc:	bl	4042e0 <error@plt>
  4178e0:	mov	w23, #0x1                   	// #1
  4178e4:	mov	w19, #0x8e4c                	// #36428
  4178e8:	b	4177d4 <wcrtomb@plt+0x12884>
  4178ec:	ldr	x0, [sp, #144]
  4178f0:	ldr	x0, [x0]
  4178f4:	ldrb	w1, [x0]
  4178f8:	cmp	w1, #0x2b
  4178fc:	b.ne	4179a8 <wcrtomb@plt+0x12a58>  // b.any
  417900:	add	x1, x0, #0x1
  417904:	mov	w4, w21
  417908:	mov	x3, x20
  41790c:	mov	x2, x22
  417910:	add	x0, sp, #0x78
  417914:	bl	417698 <wcrtomb@plt+0x12748>
  417918:	cbnz	w0, 4178e0 <wcrtomb@plt+0x12990>
  41791c:	ldr	x0, [sp, #144]
  417920:	mov	w1, #0x3a                  	// #58
  417924:	ldr	x19, [x0, #8]
  417928:	mov	x0, x19
  41792c:	bl	404b90 <strchr@plt>
  417930:	mov	x1, x0
  417934:	cbz	x0, 4179f4 <wcrtomb@plt+0x12aa4>
  417938:	cmp	x19, x0
  41793c:	strb	wzr, [x1], #1
  417940:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
  417944:	mov	w4, w21
  417948:	mov	x3, x20
  41794c:	mov	x2, x22
  417950:	add	x0, sp, #0x80
  417954:	bl	417698 <wcrtomb@plt+0x12748>
  417958:	cbnz	w0, 4178e0 <wcrtomb@plt+0x12990>
  41795c:	mov	x0, #0x18                  	// #24
  417960:	bl	436d44 <argp_usage@@Base+0x9864>
  417964:	mov	x28, x0
  417968:	ldr	x0, [sp, #120]
  41796c:	str	x0, [x28]
  417970:	ldr	x0, [sp, #128]
  417974:	str	x0, [x28, #8]
  417978:	cbz	x19, 417988 <wcrtomb@plt+0x12a38>
  41797c:	mov	x0, x19
  417980:	bl	436f10 <argp_usage@@Base+0x9a30>
  417984:	mov	x19, x0
  417988:	ldr	x0, [x25]
  41798c:	str	x19, [x28, #16]
  417990:	cbz	x0, 417a58 <wcrtomb@plt+0x12b08>
  417994:	ldr	x0, [x25]
  417998:	mov	x1, x28
  41799c:	bl	4309b4 <argp_usage@@Base+0x34d4>
  4179a0:	cbnz	x0, 4178e4 <wcrtomb@plt+0x12994>
  4179a4:	bl	40d4bc <wcrtomb@plt+0x856c>
  4179a8:	blr	x26
  4179ac:	str	x0, [sp, #120]
  4179b0:	cmn	x0, #0x1
  4179b4:	b.ne	41791c <wcrtomb@plt+0x129cc>  // b.any
  4179b8:	mov	w2, #0x5                   	// #5
  4179bc:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4179c0:	mov	x0, #0x0                   	// #0
  4179c4:	add	x1, x1, #0xec4
  4179c8:	bl	404d00 <dcgettext@plt>
  4179cc:	ldr	x1, [sp, #144]
  4179d0:	ldr	x6, [x1]
  4179d4:	mov	x2, x0
  4179d8:	mov	x5, x22
  4179dc:	mov	w4, w21
  4179e0:	mov	x3, x20
  4179e4:	mov	w1, #0x0                   	// #0
  4179e8:	mov	w0, #0x0                   	// #0
  4179ec:	bl	4042e0 <error@plt>
  4179f0:	b	4178e0 <wcrtomb@plt+0x12990>
  4179f4:	ldrb	w0, [x19]
  4179f8:	cmp	w0, #0x2b
  4179fc:	b.ne	417a24 <wcrtomb@plt+0x12ad4>  // b.any
  417a00:	mov	w4, w21
  417a04:	mov	x3, x20
  417a08:	mov	x2, x22
  417a0c:	mov	x1, x19
  417a10:	add	x0, sp, #0x80
  417a14:	bl	417698 <wcrtomb@plt+0x12748>
  417a18:	cbnz	w0, 4178e0 <wcrtomb@plt+0x12990>
  417a1c:	mov	x19, #0x0                   	// #0
  417a20:	b	41795c <wcrtomb@plt+0x12a0c>
  417a24:	mov	x0, x19
  417a28:	blr	x26
  417a2c:	str	x0, [sp, #128]
  417a30:	cmn	x0, #0x1
  417a34:	b.ne	41795c <wcrtomb@plt+0x12a0c>  // b.any
  417a38:	mov	w2, #0x5                   	// #5
  417a3c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  417a40:	mov	x0, #0x0                   	// #0
  417a44:	add	x1, x1, #0xec4
  417a48:	bl	404d00 <dcgettext@plt>
  417a4c:	ldr	x1, [sp, #144]
  417a50:	ldr	x6, [x1, #8]
  417a54:	b	4179d4 <wcrtomb@plt+0x12a84>
  417a58:	mov	x3, x27
  417a5c:	mov	x4, #0x0                   	// #0
  417a60:	adrp	x2, 417000 <wcrtomb@plt+0x120b0>
  417a64:	mov	x1, #0x0                   	// #0
  417a68:	add	x2, x2, #0x62c
  417a6c:	mov	x0, #0x0                   	// #0
  417a70:	bl	430500 <argp_usage@@Base+0x3020>
  417a74:	str	x0, [x25]
  417a78:	cbnz	x0, 417994 <wcrtomb@plt+0x12a44>
  417a7c:	b	4179a4 <wcrtomb@plt+0x12a54>
  417a80:	ldp	x19, x20, [sp, #16]
  417a84:	ldp	x21, x22, [sp, #32]
  417a88:	ldp	x23, x24, [sp, #48]
  417a8c:	ldp	x25, x26, [sp, #64]
  417a90:	ldp	x27, x28, [sp, #80]
  417a94:	ldp	x29, x30, [sp], #368
  417a98:	ret
  417a9c:	mov	x1, x0
  417aa0:	adrp	x3, 44a000 <_obstack_memory_used@@Base+0x12380>
  417aa4:	adrp	x2, 417000 <wcrtomb@plt+0x120b0>
  417aa8:	add	x3, x3, #0xed
  417aac:	add	x2, x2, #0x650
  417ab0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  417ab4:	add	x0, x0, #0xa18
  417ab8:	b	417764 <wcrtomb@plt+0x12814>
  417abc:	stp	x29, x30, [sp, #-64]!
  417ac0:	mov	w3, w0
  417ac4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  417ac8:	mov	x29, sp
  417acc:	ldr	x0, [x0, #2584]
  417ad0:	stp	x19, x20, [sp, #16]
  417ad4:	mov	x20, x1
  417ad8:	mov	x19, x2
  417adc:	cbz	x0, 417b0c <wcrtomb@plt+0x12bbc>
  417ae0:	add	x1, sp, #0x28
  417ae4:	str	x3, [sp, #40]
  417ae8:	bl	4302d8 <argp_usage@@Base+0x2df8>
  417aec:	cbz	x0, 417b0c <wcrtomb@plt+0x12bbc>
  417af0:	ldp	x1, x0, [x0, #8]
  417af4:	str	w1, [x20]
  417af8:	str	x0, [x19]
  417afc:	mov	w0, #0x0                   	// #0
  417b00:	ldp	x19, x20, [sp, #16]
  417b04:	ldp	x29, x30, [sp], #64
  417b08:	ret
  417b0c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  417b10:	ldr	w0, [x0, #792]
  417b14:	cmn	w0, #0x1
  417b18:	b.eq	417b38 <wcrtomb@plt+0x12be8>  // b.none
  417b1c:	str	w0, [x20]
  417b20:	mov	w0, #0x0                   	// #0
  417b24:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  417b28:	ldr	x1, [x1, #592]
  417b2c:	cbz	x1, 417b00 <wcrtomb@plt+0x12bb0>
  417b30:	str	x1, [x19]
  417b34:	b	417afc <wcrtomb@plt+0x12bac>
  417b38:	mov	w0, #0x1                   	// #1
  417b3c:	b	417b24 <wcrtomb@plt+0x12bd4>
  417b40:	mov	x1, x0
  417b44:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  417b48:	add	x0, x0, #0xa18
  417b4c:	adrp	x3, 44a000 <_obstack_memory_used@@Base+0x12380>
  417b50:	add	x0, x0, #0x8
  417b54:	add	x3, x3, #0xf5
  417b58:	adrp	x2, 417000 <wcrtomb@plt+0x120b0>
  417b5c:	add	x2, x2, #0x674
  417b60:	b	417764 <wcrtomb@plt+0x12814>
  417b64:	stp	x29, x30, [sp, #-64]!
  417b68:	mov	w3, w0
  417b6c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  417b70:	mov	x29, sp
  417b74:	ldr	x0, [x0, #2592]
  417b78:	stp	x19, x20, [sp, #16]
  417b7c:	mov	x20, x1
  417b80:	mov	x19, x2
  417b84:	cbz	x0, 417bb4 <wcrtomb@plt+0x12c64>
  417b88:	add	x1, sp, #0x28
  417b8c:	str	x3, [sp, #40]
  417b90:	bl	4302d8 <argp_usage@@Base+0x2df8>
  417b94:	cbz	x0, 417bb4 <wcrtomb@plt+0x12c64>
  417b98:	ldp	x1, x0, [x0, #8]
  417b9c:	str	w1, [x20]
  417ba0:	str	x0, [x19]
  417ba4:	mov	w0, #0x0                   	// #0
  417ba8:	ldp	x19, x20, [sp, #16]
  417bac:	ldp	x29, x30, [sp], #64
  417bb0:	ret
  417bb4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  417bb8:	ldr	w0, [x0, #712]
  417bbc:	cmn	w0, #0x1
  417bc0:	b.eq	417be0 <wcrtomb@plt+0x12c90>  // b.none
  417bc4:	str	w0, [x20]
  417bc8:	mov	w0, #0x0                   	// #0
  417bcc:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  417bd0:	ldr	x1, [x1, #536]
  417bd4:	cbz	x1, 417ba8 <wcrtomb@plt+0x12c58>
  417bd8:	str	x1, [x19]
  417bdc:	b	417ba4 <wcrtomb@plt+0x12c54>
  417be0:	mov	w0, #0x1                   	// #1
  417be4:	b	417bcc <wcrtomb@plt+0x12c7c>
  417be8:	ret
  417bec:	mvn	x0, x1
  417bf0:	lsr	x0, x0, #63
  417bf4:	ret
  417bf8:	stp	x29, x30, [sp, #-32]!
  417bfc:	mov	x29, sp
  417c00:	stp	x19, x20, [sp, #16]
  417c04:	mov	x20, x1
  417c08:	mov	w19, w0
  417c0c:	mov	x0, #0x0                   	// #0
  417c10:	bl	435c0c <argp_usage@@Base+0x872c>
  417c14:	mov	x2, x20
  417c18:	mov	w1, w0
  417c1c:	mov	w0, w19
  417c20:	ldp	x19, x20, [sp, #16]
  417c24:	ldp	x29, x30, [sp], #32
  417c28:	b	436094 <argp_usage@@Base+0x8bb4>
  417c2c:	stp	x29, x30, [sp, #-32]!
  417c30:	mov	x29, sp
  417c34:	stp	x19, x20, [sp, #16]
  417c38:	mov	x20, x0
  417c3c:	mov	x19, x1
  417c40:	ldr	x0, [x0]
  417c44:	bl	404ae0 <free@plt>
  417c48:	cbz	x19, 417c58 <wcrtomb@plt+0x12d08>
  417c4c:	mov	x0, x19
  417c50:	bl	436f10 <argp_usage@@Base+0x9a30>
  417c54:	mov	x19, x0
  417c58:	str	x19, [x20]
  417c5c:	ldp	x19, x20, [sp, #16]
  417c60:	ldp	x29, x30, [sp], #32
  417c64:	ret
  417c68:	stp	x29, x30, [sp, #-48]!
  417c6c:	mov	x29, sp
  417c70:	stp	x21, x22, [sp, #32]
  417c74:	mov	x21, x0
  417c78:	ldr	x0, [x0]
  417c7c:	stp	x19, x20, [sp, #16]
  417c80:	mov	x20, x1
  417c84:	mov	x19, x2
  417c88:	bl	404ae0 <free@plt>
  417c8c:	cbz	x20, 417cc0 <wcrtomb@plt+0x12d70>
  417c90:	mov	x1, x19
  417c94:	mov	x0, x20
  417c98:	bl	404360 <strnlen@plt>
  417c9c:	mov	x19, x0
  417ca0:	add	x0, x0, #0x1
  417ca4:	bl	436d44 <argp_usage@@Base+0x9864>
  417ca8:	mov	x22, x0
  417cac:	mov	x2, x19
  417cb0:	mov	x1, x20
  417cb4:	bl	404200 <memcpy@plt>
  417cb8:	str	x22, [x21]
  417cbc:	strb	wzr, [x22, x19]
  417cc0:	ldp	x19, x20, [sp, #16]
  417cc4:	ldp	x21, x22, [sp, #32]
  417cc8:	ldp	x29, x30, [sp], #48
  417ccc:	ret
  417cd0:	adrp	x5, 448000 <_obstack_memory_used@@Base+0x10380>
  417cd4:	adrp	x6, 448000 <_obstack_memory_used@@Base+0x10380>
  417cd8:	add	x5, x5, #0xf08
  417cdc:	add	x6, x6, #0xefc
  417ce0:	mov	x2, x0
  417ce4:	mov	x3, x0
  417ce8:	mov	w7, #0x5c                  	// #92
  417cec:	mov	w0, #0x1                   	// #1
  417cf0:	mov	w9, #0xb                   	// #11
  417cf4:	mov	w10, #0x9                   	// #9
  417cf8:	mov	w11, #0xd                   	// #13
  417cfc:	mov	w12, #0xa                   	// #10
  417d00:	mov	w13, #0xc                   	// #12
  417d04:	mov	w14, #0x8                   	// #8
  417d08:	mov	w15, #0x7                   	// #7
  417d0c:	mov	w16, #0x7f                  	// #127
  417d10:	ldrb	w1, [x2]
  417d14:	cbnz	w1, 417d28 <wcrtomb@plt+0x12dd8>
  417d18:	cmp	x2, x3
  417d1c:	b.eq	417d24 <wcrtomb@plt+0x12dd4>  // b.none
  417d20:	strb	wzr, [x3]
  417d24:	ret
  417d28:	add	x4, x2, #0x1
  417d2c:	add	x8, x3, #0x1
  417d30:	cmp	w1, #0x5c
  417d34:	b.ne	417e74 <wcrtomb@plt+0x12f24>  // b.any
  417d38:	ldrb	w1, [x2, #1]
  417d3c:	cmp	w1, #0x66
  417d40:	b.hi	417dc4 <wcrtomb@plt+0x12e74>  // b.pmore
  417d44:	cmp	w1, #0x5b
  417d48:	b.hi	417d80 <wcrtomb@plt+0x12e30>  // b.pmore
  417d4c:	cmp	w1, #0x37
  417d50:	b.hi	417d9c <wcrtomb@plt+0x12e4c>  // b.pmore
  417d54:	cmp	w1, #0x2f
  417d58:	b.ls	417da4 <wcrtomb@plt+0x12e54>  // b.plast
  417d5c:	ldrb	w17, [x2, #2]
  417d60:	sub	w1, w1, #0x30
  417d64:	sub	w4, w17, #0x30
  417d68:	and	w4, w4, #0xff
  417d6c:	cmp	w4, #0x7
  417d70:	b.ls	417e40 <wcrtomb@plt+0x12ef0>  // b.plast
  417d74:	add	x4, x2, #0x2
  417d78:	strb	w1, [x3]
  417d7c:	b	417df4 <wcrtomb@plt+0x12ea4>
  417d80:	sub	w1, w1, #0x5c
  417d84:	cmp	w1, #0xa
  417d88:	b.hi	417da4 <wcrtomb@plt+0x12e54>  // b.pmore
  417d8c:	ldrb	w1, [x6, w1, uxtw]
  417d90:	adr	x17, 417d9c <wcrtomb@plt+0x12e4c>
  417d94:	add	x1, x17, w1, sxtb #2
  417d98:	br	x1
  417d9c:	cmp	w1, #0x3f
  417da0:	b.eq	417e38 <wcrtomb@plt+0x12ee8>  // b.none
  417da4:	strb	w7, [x3]
  417da8:	ldrb	w0, [x2, #1]
  417dac:	cbz	w0, 417dbc <wcrtomb@plt+0x12e6c>
  417db0:	add	x4, x2, #0x2
  417db4:	add	x8, x3, #0x2
  417db8:	strb	w0, [x3, #1]
  417dbc:	mov	w0, #0x0                   	// #0
  417dc0:	b	417df4 <wcrtomb@plt+0x12ea4>
  417dc4:	sub	w1, w1, #0x6e
  417dc8:	and	w17, w1, #0xff
  417dcc:	cmp	w17, #0x8
  417dd0:	b.hi	417da4 <wcrtomb@plt+0x12e54>  // b.pmore
  417dd4:	cmp	w1, #0x8
  417dd8:	b.hi	417da4 <wcrtomb@plt+0x12e54>  // b.pmore
  417ddc:	ldrb	w1, [x5, w1, uxtw]
  417de0:	adr	x17, 417dec <wcrtomb@plt+0x12e9c>
  417de4:	add	x1, x17, w1, sxtb #2
  417de8:	br	x1
  417dec:	strb	w7, [x3]
  417df0:	add	x4, x2, #0x2
  417df4:	mov	x3, x8
  417df8:	mov	x2, x4
  417dfc:	b	417d10 <wcrtomb@plt+0x12dc0>
  417e00:	strb	w15, [x3]
  417e04:	b	417df0 <wcrtomb@plt+0x12ea0>
  417e08:	strb	w14, [x3]
  417e0c:	b	417df0 <wcrtomb@plt+0x12ea0>
  417e10:	strb	w13, [x3]
  417e14:	b	417df0 <wcrtomb@plt+0x12ea0>
  417e18:	strb	w12, [x3]
  417e1c:	b	417df0 <wcrtomb@plt+0x12ea0>
  417e20:	strb	w11, [x3]
  417e24:	b	417df0 <wcrtomb@plt+0x12ea0>
  417e28:	strb	w10, [x3]
  417e2c:	b	417df0 <wcrtomb@plt+0x12ea0>
  417e30:	strb	w9, [x3]
  417e34:	b	417df0 <wcrtomb@plt+0x12ea0>
  417e38:	strb	w16, [x3]
  417e3c:	b	417df0 <wcrtomb@plt+0x12ea0>
  417e40:	add	w1, w17, w1, lsl #3
  417e44:	ldrb	w17, [x2, #3]
  417e48:	sub	w1, w1, #0x30
  417e4c:	sub	w4, w17, #0x30
  417e50:	and	w4, w4, #0xff
  417e54:	cmp	w4, #0x7
  417e58:	b.ls	417e64 <wcrtomb@plt+0x12f14>  // b.plast
  417e5c:	add	x4, x2, #0x3
  417e60:	b	417d78 <wcrtomb@plt+0x12e28>
  417e64:	add	w1, w17, w1, lsl #3
  417e68:	add	x4, x2, #0x4
  417e6c:	sub	w1, w1, #0x30
  417e70:	b	417d78 <wcrtomb@plt+0x12e28>
  417e74:	cmp	x2, x3
  417e78:	b.ne	417d78 <wcrtomb@plt+0x12e28>  // b.any
  417e7c:	b	417df4 <wcrtomb@plt+0x12ea4>
  417e80:	stp	x29, x30, [sp, #-32]!
  417e84:	mov	x29, sp
  417e88:	str	x19, [sp, #16]
  417e8c:	mov	x19, x0
  417e90:	cbz	x0, 417ebc <wcrtomb@plt+0x12f6c>
  417e94:	ldrb	w1, [x0]
  417e98:	cbz	w1, 417ebc <wcrtomb@plt+0x12f6c>
  417e9c:	bl	404280 <strlen@plt>
  417ea0:	sub	x1, x0, #0x1
  417ea4:	add	x1, x19, x1
  417ea8:	cmp	x1, x19
  417eac:	b.ls	417ebc <wcrtomb@plt+0x12f6c>  // b.plast
  417eb0:	ldrb	w0, [x1]
  417eb4:	cmp	w0, #0x2f
  417eb8:	b.eq	417ecc <wcrtomb@plt+0x12f7c>  // b.none
  417ebc:	mov	x0, x19
  417ec0:	ldr	x19, [sp, #16]
  417ec4:	ldp	x29, x30, [sp], #32
  417ec8:	ret
  417ecc:	strb	wzr, [x1], #-1
  417ed0:	b	417ea8 <wcrtomb@plt+0x12f58>
  417ed4:	mov	x1, x0
  417ed8:	mov	x2, x0
  417edc:	ldrb	w3, [x1]
  417ee0:	strb	w3, [x2]
  417ee4:	cmp	w3, #0x2e
  417ee8:	b.ne	417ef8 <wcrtomb@plt+0x12fa8>  // b.any
  417eec:	ldrb	w3, [x1, #1]
  417ef0:	cmp	w3, #0x2f
  417ef4:	b.eq	417f50 <wcrtomb@plt+0x13000>  // b.none
  417ef8:	ldrb	w3, [x1], #1
  417efc:	strb	w3, [x2], #1
  417f00:	cbnz	w3, 417f74 <wcrtomb@plt+0x13024>
  417f04:	sub	x1, x2, x0
  417f08:	cmp	x1, #0x2
  417f0c:	b.le	417f4c <wcrtomb@plt+0x12ffc>
  417f10:	ldurb	w1, [x2, #-2]
  417f14:	cmp	w1, #0x2e
  417f18:	b.ne	417fa8 <wcrtomb@plt+0x13058>  // b.any
  417f1c:	ldurb	w1, [x2, #-3]
  417f20:	cmp	w1, #0x2f
  417f24:	cset	w1, eq  // eq = none
  417f28:	sub	x2, x2, w1, sxtw
  417f2c:	sub	x0, x2, x0
  417f30:	cmp	x0, #0x2
  417f34:	b.le	417fb0 <wcrtomb@plt+0x13060>
  417f38:	ldurb	w0, [x2, #-2]
  417f3c:	cmp	w0, #0x2f
  417f40:	cset	w0, eq  // eq = none
  417f44:	sub	x2, x2, w0, sxtw
  417f48:	sturb	wzr, [x2, #-1]
  417f4c:	ret
  417f50:	add	x1, x1, #0x2
  417f54:	ldrb	w3, [x1]
  417f58:	cmp	w3, #0x2f
  417f5c:	b.eq	417f6c <wcrtomb@plt+0x1301c>  // b.none
  417f60:	cmp	w3, #0x0
  417f64:	cinc	x2, x2, eq  // eq = none
  417f68:	b	417edc <wcrtomb@plt+0x12f8c>
  417f6c:	add	x1, x1, #0x1
  417f70:	b	417f54 <wcrtomb@plt+0x13004>
  417f74:	cmp	w3, #0x2f
  417f78:	b.ne	417ef8 <wcrtomb@plt+0x12fa8>  // b.any
  417f7c:	ldrb	w3, [x1]
  417f80:	cmp	w3, #0x2e
  417f84:	cset	x4, eq  // eq = none
  417f88:	ldrb	w4, [x1, x4]
  417f8c:	cmp	w4, #0x2f
  417f90:	b.ne	417ef8 <wcrtomb@plt+0x12fa8>  // b.any
  417f94:	cmp	w3, #0x2e
  417f98:	cset	x3, eq  // eq = none
  417f9c:	add	x3, x3, #0x1
  417fa0:	add	x1, x1, x3
  417fa4:	b	417f7c <wcrtomb@plt+0x1302c>
  417fa8:	mov	w1, #0x0                   	// #0
  417fac:	b	417f28 <wcrtomb@plt+0x12fd8>
  417fb0:	mov	w0, #0x0                   	// #0
  417fb4:	b	417f44 <wcrtomb@plt+0x12ff4>
  417fb8:	stp	x29, x30, [sp, #-64]!
  417fbc:	mov	x29, sp
  417fc0:	stp	x19, x20, [sp, #16]
  417fc4:	mov	x20, x1
  417fc8:	stp	x21, x22, [sp, #32]
  417fcc:	str	x23, [sp, #48]
  417fd0:	ldrb	w1, [x1]
  417fd4:	cmp	w1, #0x2f
  417fd8:	b.ne	418008 <wcrtomb@plt+0x130b8>  // b.any
  417fdc:	mov	x0, x20
  417fe0:	bl	436f10 <argp_usage@@Base+0x9a30>
  417fe4:	mov	x19, x0
  417fe8:	mov	x0, x19
  417fec:	bl	417ed4 <wcrtomb@plt+0x12f84>
  417ff0:	mov	x0, x19
  417ff4:	ldp	x19, x20, [sp, #16]
  417ff8:	ldp	x21, x22, [sp, #32]
  417ffc:	ldr	x23, [sp, #48]
  418000:	ldp	x29, x30, [sp], #64
  418004:	ret
  418008:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41800c:	add	x19, x1, #0xa28
  418010:	ldr	x1, [x1, #2600]
  418014:	cbnz	x1, 418044 <wcrtomb@plt+0x130f4>
  418018:	ldr	x0, [x19, #8]
  41801c:	cbnz	x0, 418028 <wcrtomb@plt+0x130d8>
  418020:	bl	436f38 <argp_usage@@Base+0x9a58>
  418024:	str	x0, [x19, #8]
  418028:	ldr	x22, [x19, #8]
  41802c:	cbnz	x22, 418054 <wcrtomb@plt+0x13104>
  418030:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  418034:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  418038:	add	x1, x1, #0xc29
  41803c:	add	x0, x0, #0xf11
  418040:	bl	424b5c <wcrtomb@plt+0x1fc0c>
  418044:	mov	w2, #0x18                  	// #24
  418048:	smaddl	x0, w0, w2, x1
  41804c:	ldr	x22, [x0, #8]
  418050:	b	41802c <wcrtomb@plt+0x130dc>
  418054:	mov	x0, x22
  418058:	bl	404280 <strlen@plt>
  41805c:	add	x23, x0, #0x1
  418060:	mov	x21, x0
  418064:	mov	x0, x20
  418068:	bl	404280 <strlen@plt>
  41806c:	add	x0, x0, #0x1
  418070:	add	x0, x0, x23
  418074:	bl	436d44 <argp_usage@@Base+0x9864>
  418078:	mov	x19, x0
  41807c:	mov	x1, x22
  418080:	bl	404c40 <strcpy@plt>
  418084:	mov	w0, #0x2f                  	// #47
  418088:	mov	x1, x20
  41808c:	strb	w0, [x19, x21]
  418090:	add	x0, x19, x23
  418094:	bl	404c40 <strcpy@plt>
  418098:	b	417fe8 <wcrtomb@plt+0x13098>
  41809c:	stp	x29, x30, [sp, #-80]!
  4180a0:	mov	x29, sp
  4180a4:	stp	x19, x20, [sp, #16]
  4180a8:	mov	x20, x2
  4180ac:	ldr	x19, [x0]
  4180b0:	stp	x21, x22, [sp, #32]
  4180b4:	mov	x22, x4
  4180b8:	stp	x23, x24, [sp, #48]
  4180bc:	mov	x23, x0
  4180c0:	mov	x24, x3
  4180c4:	mov	x0, x19
  4180c8:	stp	x25, x26, [sp, #64]
  4180cc:	mov	x25, x1
  4180d0:	add	x26, x4, #0x1
  4180d4:	bl	404280 <strlen@plt>
  4180d8:	cmp	x0, x20
  4180dc:	b.ls	41815c <wcrtomb@plt+0x1320c>  // b.plast
  4180e0:	mov	x21, x0
  4180e4:	mov	x2, x20
  4180e8:	mov	x1, x25
  4180ec:	mov	x0, x19
  4180f0:	bl	4049f0 <memcmp@plt>
  4180f4:	cbnz	w0, 41815c <wcrtomb@plt+0x1320c>
  4180f8:	ldrb	w0, [x19, x20]
  4180fc:	cmp	w0, #0x2f
  418100:	b.ne	41815c <wcrtomb@plt+0x1320c>  // b.any
  418104:	cmp	x20, x22
  418108:	b.cs	418124 <wcrtomb@plt+0x131d4>  // b.hs, b.nlast
  41810c:	sub	x1, x21, x20
  418110:	mov	x0, x19
  418114:	add	x1, x1, x26
  418118:	bl	436da4 <argp_usage@@Base+0x98c4>
  41811c:	mov	x19, x0
  418120:	str	x0, [x23]
  418124:	sub	x2, x21, x20
  418128:	add	x1, x19, x20
  41812c:	add	x0, x19, x22
  418130:	add	x2, x2, #0x1
  418134:	bl	404210 <memmove@plt>
  418138:	mov	x2, x22
  41813c:	mov	x1, x24
  418140:	mov	x0, x19
  418144:	ldp	x19, x20, [sp, #16]
  418148:	ldp	x21, x22, [sp, #32]
  41814c:	ldp	x23, x24, [sp, #48]
  418150:	ldp	x25, x26, [sp, #64]
  418154:	ldp	x29, x30, [sp], #80
  418158:	b	404200 <memcpy@plt>
  41815c:	ldp	x19, x20, [sp, #16]
  418160:	ldp	x21, x22, [sp, #32]
  418164:	ldp	x23, x24, [sp, #48]
  418168:	ldp	x25, x26, [sp, #64]
  41816c:	ldp	x29, x30, [sp], #80
  418170:	ret
  418174:	mov	x1, x3
  418178:	cmp	x0, x2
  41817c:	b.hi	418184 <wcrtomb@plt+0x13234>  // b.pmore
  418180:	b	431400 <argp_usage@@Base+0x3f20>
  418184:	b	431340 <argp_usage@@Base+0x3e60>
  418188:	stp	x29, x30, [sp, #-64]!
  41818c:	mov	x29, sp
  418190:	stp	x21, x22, [sp, #32]
  418194:	mov	x21, x0
  418198:	mov	x22, x2
  41819c:	stp	x19, x20, [sp, #16]
  4181a0:	mov	x19, x3
  4181a4:	str	x23, [sp, #48]
  4181a8:	mov	x23, x1
  4181ac:	bl	404e10 <__errno_location@plt>
  4181b0:	str	wzr, [x0]
  4181b4:	mov	x20, x0
  4181b8:	ldrb	w0, [x21]
  4181bc:	tbnz	x19, #63, 418218 <wcrtomb@plt+0x132c8>
  4181c0:	cmp	w0, #0x2d
  4181c4:	cset	x0, eq  // eq = none
  4181c8:	ldrb	w0, [x21, x0]
  4181cc:	sub	w0, w0, #0x30
  4181d0:	cmp	w0, #0x9
  4181d4:	b.hi	41824c <wcrtomb@plt+0x132fc>  // b.pmore
  4181d8:	mov	x1, x23
  4181dc:	mov	x0, x21
  4181e0:	mov	w2, #0xa                   	// #10
  4181e4:	bl	404330 <strtoimax@plt>
  4181e8:	cmp	x0, x22
  4181ec:	ccmp	x19, x0, #0x1, ge  // ge = tcont
  4181f0:	b.ge	418204 <wcrtomb@plt+0x132b4>  // b.tcont
  4181f4:	cmp	x0, x22
  4181f8:	mov	w1, #0x22                  	// #34
  4181fc:	csel	x0, x22, x19, lt  // lt = tstop
  418200:	str	w1, [x20]
  418204:	ldp	x19, x20, [sp, #16]
  418208:	ldp	x21, x22, [sp, #32]
  41820c:	ldr	x23, [sp, #48]
  418210:	ldp	x29, x30, [sp], #64
  418214:	ret
  418218:	sub	w0, w0, #0x30
  41821c:	cmp	w0, #0x9
  418220:	b.hi	41824c <wcrtomb@plt+0x132fc>  // b.pmore
  418224:	mov	x1, x23
  418228:	mov	x0, x21
  41822c:	mov	w2, #0xa                   	// #10
  418230:	bl	404940 <strtoumax@plt>
  418234:	cmp	x19, x0
  418238:	b.cs	418204 <wcrtomb@plt+0x132b4>  // b.hs, b.nlast
  41823c:	mov	w0, #0x22                  	// #34
  418240:	str	w0, [x20]
  418244:	mov	x0, x19
  418248:	b	418204 <wcrtomb@plt+0x132b4>
  41824c:	mov	w0, #0x16                  	// #22
  418250:	str	w0, [x20]
  418254:	mov	x0, #0x0                   	// #0
  418258:	b	418204 <wcrtomb@plt+0x132b4>
  41825c:	cbnz	w0, 418268 <wcrtomb@plt+0x13318>
  418260:	strb	wzr, [x1]
  418264:	ret
  418268:	mov	w2, #0x2e                  	// #46
  41826c:	mov	w3, #0xa                   	// #10
  418270:	strb	w2, [x1]
  418274:	mov	w2, #0x9                   	// #9
  418278:	sdiv	w4, w0, w3
  41827c:	sub	w6, w2, #0x1
  418280:	msub	w5, w4, w3, w0
  418284:	cbz	w5, 4182b8 <wcrtomb@plt+0x13368>
  418288:	sxtw	x3, w2
  41828c:	add	x2, x1, w2, sxtw
  418290:	mov	w4, #0xa                   	// #10
  418294:	strb	wzr, [x2, #1]
  418298:	sdiv	w2, w0, w4
  41829c:	msub	w0, w2, w4, w0
  4182a0:	add	w0, w0, #0x30
  4182a4:	strb	w0, [x1, x3]
  4182a8:	sub	x3, x3, #0x1
  4182ac:	cbz	w3, 418264 <wcrtomb@plt+0x13314>
  4182b0:	mov	w0, w2
  4182b4:	b	418298 <wcrtomb@plt+0x13348>
  4182b8:	mov	w0, w4
  4182bc:	mov	w2, w6
  4182c0:	b	418278 <wcrtomb@plt+0x13328>
  4182c4:	stp	x29, x30, [sp, #-48]!
  4182c8:	mov	x29, sp
  4182cc:	stp	x19, x20, [sp, #16]
  4182d0:	mov	x19, x0
  4182d4:	mov	w0, #0xc9ff                	// #51711
  4182d8:	str	x21, [sp, #32]
  4182dc:	movk	w0, #0x3b9a, lsl #16
  4182e0:	mov	x21, x2
  4182e4:	cmp	w1, w0
  4182e8:	b.hi	418314 <wcrtomb@plt+0x133c4>  // b.pmore
  4182ec:	cmp	w1, #0x0
  4182f0:	mov	w20, w1
  4182f4:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  4182f8:	b.ge	418318 <wcrtomb@plt+0x133c8>  // b.tcont
  4182fc:	mov	w20, #0xca00                	// #51712
  418300:	add	x0, x19, #0x1
  418304:	movk	w20, #0x3b9a, lsl #16
  418308:	sub	w20, w20, w1
  41830c:	neg	x0, x0
  418310:	b	418320 <wcrtomb@plt+0x133d0>
  418314:	mov	w20, #0x0                   	// #0
  418318:	mov	x0, x19
  41831c:	tbnz	x19, #63, 41830c <wcrtomb@plt+0x133bc>
  418320:	add	x1, x21, #0x1
  418324:	bl	431400 <argp_usage@@Base+0x3f20>
  418328:	mov	x7, x0
  41832c:	tbz	x19, #63, 41833c <wcrtomb@plt+0x133ec>
  418330:	mov	w0, #0x2d                  	// #45
  418334:	sub	x7, x7, #0x1
  418338:	strb	w0, [x7]
  41833c:	add	x1, x21, #0x15
  418340:	mov	w0, w20
  418344:	bl	41825c <wcrtomb@plt+0x1330c>
  418348:	mov	x0, x7
  41834c:	ldp	x19, x20, [sp, #16]
  418350:	ldr	x21, [sp, #32]
  418354:	ldp	x29, x30, [sp], #48
  418358:	ret
  41835c:	stp	x29, x30, [sp, #-64]!
  418360:	mov	x29, sp
  418364:	stp	x19, x20, [sp, #16]
  418368:	mov	x19, x0
  41836c:	mov	x20, x1
  418370:	stp	x21, x22, [sp, #32]
  418374:	str	x23, [sp, #48]
  418378:	and	w23, w2, #0xff
  41837c:	ldrb	w22, [x0]
  418380:	bl	404e10 <__errno_location@plt>
  418384:	mov	x21, x0
  418388:	cmp	w22, #0x2d
  41838c:	cset	x0, eq  // eq = none
  418390:	ldrb	w0, [x19, x0]
  418394:	sub	w0, w0, #0x30
  418398:	cmp	w0, #0x9
  41839c:	b.ls	4183cc <wcrtomb@plt+0x1347c>  // b.plast
  4183a0:	mov	w0, #0x16                  	// #22
  4183a4:	mov	w2, #0xffffffff            	// #-1
  4183a8:	str	w0, [x21]
  4183ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  4183b0:	ldp	x21, x22, [sp, #32]
  4183b4:	sxtw	x1, w2
  4183b8:	ldr	x23, [sp, #48]
  4183bc:	str	x19, [x20]
  4183c0:	ldp	x19, x20, [sp, #16]
  4183c4:	ldp	x29, x30, [sp], #64
  4183c8:	ret
  4183cc:	str	wzr, [x21]
  4183d0:	mov	x1, x20
  4183d4:	mov	x0, x19
  4183d8:	cmp	w22, #0x2d
  4183dc:	mov	w2, #0xa                   	// #10
  4183e0:	b.ne	418404 <wcrtomb@plt+0x134b4>  // b.any
  4183e4:	bl	404330 <strtoimax@plt>
  4183e8:	ldr	x19, [x20]
  4183ec:	cbz	w23, 4183fc <wcrtomb@plt+0x134ac>
  4183f0:	ldrb	w1, [x19]
  4183f4:	cmp	w1, #0x2e
  4183f8:	b.eq	418494 <wcrtomb@plt+0x13544>  // b.none
  4183fc:	mov	w2, #0x0                   	// #0
  418400:	b	418474 <wcrtomb@plt+0x13524>
  418404:	bl	404940 <strtoumax@plt>
  418408:	tbz	x0, #63, 4183e8 <wcrtomb@plt+0x13498>
  41840c:	mov	w0, #0x22                  	// #34
  418410:	str	w0, [x21]
  418414:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  418418:	b	4183e8 <wcrtomb@plt+0x13498>
  41841c:	cmp	w1, #0x8
  418420:	b.gt	418484 <wcrtomb@plt+0x13534>
  418424:	madd	w2, w2, w6, w4
  418428:	add	w1, w1, #0x1
  41842c:	ldrb	w5, [x19, #1]!
  418430:	sub	w4, w5, #0x30
  418434:	cmp	w4, #0x9
  418438:	b.ls	41841c <wcrtomb@plt+0x134cc>  // b.plast
  41843c:	mov	w4, #0xa                   	// #10
  418440:	cmp	w1, #0x8
  418444:	b.le	4184a8 <wcrtomb@plt+0x13558>
  418448:	cmp	w22, #0x2d
  41844c:	b.ne	418474 <wcrtomb@plt+0x13524>  // b.any
  418450:	adds	w2, w2, w3
  418454:	b.eq	418474 <wcrtomb@plt+0x13524>  // b.none
  418458:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41845c:	cmp	x0, x1
  418460:	b.eq	4184b4 <wcrtomb@plt+0x13564>  // b.none
  418464:	mov	w1, #0xca00                	// #51712
  418468:	sub	x0, x0, #0x1
  41846c:	movk	w1, #0x3b9a, lsl #16
  418470:	sub	w2, w1, w2
  418474:	ldr	w1, [x21]
  418478:	cmp	w1, #0x22
  41847c:	csinv	w2, w2, wzr, ne  // ne = any
  418480:	b	4183b0 <wcrtomb@plt+0x13460>
  418484:	cmp	w5, #0x30
  418488:	cset	w4, ne  // ne = any
  41848c:	orr	w3, w3, w4
  418490:	b	41842c <wcrtomb@plt+0x134dc>
  418494:	mov	w3, #0x0                   	// #0
  418498:	mov	w1, #0x0                   	// #0
  41849c:	mov	w2, #0x0                   	// #0
  4184a0:	mov	w6, #0xa                   	// #10
  4184a4:	b	41842c <wcrtomb@plt+0x134dc>
  4184a8:	mul	w2, w2, w4
  4184ac:	add	w1, w1, #0x1
  4184b0:	b	418440 <wcrtomb@plt+0x134f0>
  4184b4:	mov	w2, #0xffffffff            	// #-1
  4184b8:	b	418474 <wcrtomb@plt+0x13524>
  4184bc:	ldrb	w1, [x0]
  4184c0:	cmp	w1, #0x2f
  4184c4:	b.ne	418520 <wcrtomb@plt+0x135d0>  // b.any
  4184c8:	ldrb	w1, [x0, #1]
  4184cc:	cmp	w1, #0x2f
  4184d0:	b.ne	4184dc <wcrtomb@plt+0x1358c>  // b.any
  4184d4:	add	x0, x0, #0x1
  4184d8:	b	4184c8 <wcrtomb@plt+0x13578>
  4184dc:	cmp	w1, #0x2e
  4184e0:	b.ne	418504 <wcrtomb@plt+0x135b4>  // b.any
  4184e4:	ldrb	w2, [x0, #2]
  4184e8:	cmp	w2, #0x2e
  4184ec:	cset	x2, eq  // eq = none
  4184f0:	add	x2, x2, #0x2
  4184f4:	add	x0, x0, x2
  4184f8:	ldrb	w2, [x0]
  4184fc:	cmp	w2, #0x2f
  418500:	b.eq	4184c8 <wcrtomb@plt+0x13578>  // b.none
  418504:	cmp	w1, #0x0
  418508:	cset	w0, eq  // eq = none
  41850c:	ret
  418510:	add	x0, x0, #0x2
  418514:	ldrb	w1, [x0]
  418518:	cmp	w1, #0x2f
  41851c:	b.eq	41853c <wcrtomb@plt+0x135ec>  // b.none
  418520:	ldrb	w1, [x0]
  418524:	cmp	w1, #0x2e
  418528:	b.ne	418504 <wcrtomb@plt+0x135b4>  // b.any
  41852c:	ldrb	w1, [x0, #1]
  418530:	cmp	w1, #0x2f
  418534:	b.eq	418510 <wcrtomb@plt+0x135c0>  // b.none
  418538:	b	418504 <wcrtomb@plt+0x135b4>
  41853c:	add	x0, x0, #0x1
  418540:	b	418514 <wcrtomb@plt+0x135c4>
  418544:	stp	x29, x30, [sp, #-32]!
  418548:	mov	x29, sp
  41854c:	stp	x19, x20, [sp, #16]
  418550:	mov	x20, x0
  418554:	bl	4184bc <wcrtomb@plt+0x1356c>
  418558:	tst	w0, #0xff
  41855c:	b.eq	418570 <wcrtomb@plt+0x13620>  // b.none
  418560:	bl	404e10 <__errno_location@plt>
  418564:	str	wzr, [x0]
  418568:	mov	w19, #0xffffffff            	// #-1
  41856c:	b	418594 <wcrtomb@plt+0x13644>
  418570:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  418574:	mov	x1, x20
  418578:	mov	w2, #0x200                 	// #512
  41857c:	ldr	w0, [x0, #2264]
  418580:	bl	404410 <unlinkat@plt>
  418584:	mov	w19, w0
  418588:	cbnz	w0, 418568 <wcrtomb@plt+0x13618>
  41858c:	mov	x0, x20
  418590:	bl	40fab4 <wcrtomb@plt+0xab64>
  418594:	mov	w0, w19
  418598:	ldp	x19, x20, [sp, #16]
  41859c:	ldp	x29, x30, [sp], #32
  4185a0:	ret
  4185a4:	stp	x29, x30, [sp, #-48]!
  4185a8:	mov	x29, sp
  4185ac:	stp	x19, x20, [sp, #16]
  4185b0:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4185b4:	add	x19, x19, #0xa28
  4185b8:	stp	x21, x22, [sp, #32]
  4185bc:	ldr	x1, [x19, #16]
  4185c0:	cbz	x1, 4186b8 <wcrtomb@plt+0x13768>
  4185c4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  4185c8:	ldr	x3, [x19, #24]
  4185cc:	ldr	w2, [x0, #2264]
  4185d0:	mov	w0, w2
  4185d4:	bl	404b30 <renameat@plt>
  4185d8:	cbz	w0, 418648 <wcrtomb@plt+0x136f8>
  4185dc:	bl	404e10 <__errno_location@plt>
  4185e0:	ldr	w22, [x0]
  4185e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4185e8:	ldr	x0, [x0, #1016]
  4185ec:	cbz	x0, 4185f4 <wcrtomb@plt+0x136a4>
  4185f0:	blr	x0
  4185f4:	mov	w2, #0x5                   	// #5
  4185f8:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  4185fc:	mov	x0, #0x0                   	// #0
  418600:	add	x1, x1, #0xf18
  418604:	bl	404d00 <dcgettext@plt>
  418608:	mov	x20, x0
  41860c:	ldr	x0, [x19, #16]
  418610:	bl	436084 <argp_usage@@Base+0x8ba4>
  418614:	mov	x21, x0
  418618:	ldr	x1, [x19, #24]
  41861c:	mov	w0, #0x1                   	// #1
  418620:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  418624:	mov	x4, x0
  418628:	mov	w1, w22
  41862c:	mov	w0, #0x0                   	// #0
  418630:	mov	x3, x21
  418634:	mov	x2, x20
  418638:	bl	4042e0 <error@plt>
  41863c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  418640:	mov	w1, #0x2                   	// #2
  418644:	str	w1, [x0, #3464]
  418648:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41864c:	ldr	w0, [x0, #652]
  418650:	cbz	w0, 4186ac <wcrtomb@plt+0x1375c>
  418654:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  418658:	mov	w2, #0x5                   	// #5
  41865c:	ldr	x21, [x19, #16]
  418660:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  418664:	ldr	x22, [x0, #3936]
  418668:	add	x1, x1, #0xf30
  41866c:	mov	x0, #0x0                   	// #0
  418670:	bl	404d00 <dcgettext@plt>
  418674:	mov	x1, x21
  418678:	mov	x20, x0
  41867c:	mov	w0, #0x0                   	// #0
  418680:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  418684:	ldr	x1, [x19, #24]
  418688:	mov	x21, x0
  41868c:	mov	w0, #0x1                   	// #1
  418690:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  418694:	mov	x4, x0
  418698:	mov	x3, x21
  41869c:	mov	x2, x20
  4186a0:	mov	x0, x22
  4186a4:	mov	w1, #0x1                   	// #1
  4186a8:	bl	404a20 <__fprintf_chk@plt>
  4186ac:	ldr	x0, [x19, #16]
  4186b0:	bl	404ae0 <free@plt>
  4186b4:	str	xzr, [x19, #16]
  4186b8:	ldp	x19, x20, [sp, #16]
  4186bc:	ldp	x21, x22, [sp, #32]
  4186c0:	ldp	x29, x30, [sp], #48
  4186c4:	ret
  4186c8:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  4186cc:	ldr	w3, [x2, #568]
  4186d0:	mov	x2, x1
  4186d4:	mov	x1, x0
  4186d8:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  4186dc:	ldr	w0, [x0, #2264]
  4186e0:	b	446aa0 <_obstack_memory_used@@Base+0xee20>
  4186e4:	stp	x29, x30, [sp, #-176]!
  4186e8:	mov	x29, sp
  4186ec:	stp	x19, x20, [sp, #16]
  4186f0:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4186f4:	add	x19, x19, #0xa28
  4186f8:	mov	x20, x0
  4186fc:	stp	x21, x22, [sp, #32]
  418700:	and	w21, w1, #0xff
  418704:	mov	x1, x0
  418708:	add	x0, x19, #0x18
  41870c:	bl	417c2c <wcrtomb@plt+0x12cdc>
  418710:	ldr	x0, [x19, #16]
  418714:	bl	404ae0 <free@plt>
  418718:	str	xzr, [x19, #16]
  41871c:	cbnz	w21, 41877c <wcrtomb@plt+0x1382c>
  418720:	add	x1, sp, #0x30
  418724:	mov	x0, x20
  418728:	bl	4186c8 <wcrtomb@plt+0x13778>
  41872c:	cbnz	w0, 4187d0 <wcrtomb@plt+0x13880>
  418730:	ldr	w0, [sp, #64]
  418734:	and	w1, w0, #0xf000
  418738:	cmp	w1, #0x4, lsl #12
  41873c:	b.eq	4187bc <wcrtomb@plt+0x1386c>  // b.none
  418740:	cbz	w21, 418754 <wcrtomb@plt+0x13804>
  418744:	mov	w1, #0xb000                	// #45056
  418748:	and	w0, w0, w1
  41874c:	cmp	w0, #0x2, lsl #12
  418750:	b.eq	4187bc <wcrtomb@plt+0x1386c>  // b.none
  418754:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  418758:	adrp	x21, 46e000 <_obstack_memory_used@@Base+0x36380>
  41875c:	mov	x1, x20
  418760:	ldr	w2, [x0, #736]
  418764:	ldr	w0, [x21, #2264]
  418768:	bl	42db20 <argp_usage@@Base+0x640>
  41876c:	str	x0, [x19, #16]
  418770:	mov	x3, x0
  418774:	cbnz	x0, 4187f0 <wcrtomb@plt+0x138a0>
  418778:	bl	40d4bc <wcrtomb@plt+0x856c>
  41877c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  418780:	ldrb	w0, [x0, #1024]
  418784:	cbnz	w0, 418720 <wcrtomb@plt+0x137d0>
  418788:	mov	w1, #0x3a                  	// #58
  41878c:	mov	x0, x20
  418790:	bl	404b90 <strchr@plt>
  418794:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  418798:	str	x0, [x1, #1032]
  41879c:	cbz	x0, 418720 <wcrtomb@plt+0x137d0>
  4187a0:	cmp	x0, x20
  4187a4:	b.ls	418720 <wcrtomb@plt+0x137d0>  // b.plast
  4187a8:	sub	x2, x0, x20
  4187ac:	mov	w1, #0x2f                  	// #47
  4187b0:	mov	x0, x20
  4187b4:	bl	404c90 <memchr@plt>
  4187b8:	cbnz	x0, 418720 <wcrtomb@plt+0x137d0>
  4187bc:	mov	w0, #0x1                   	// #1
  4187c0:	ldp	x19, x20, [sp, #16]
  4187c4:	ldp	x21, x22, [sp, #32]
  4187c8:	ldp	x29, x30, [sp], #176
  4187cc:	ret
  4187d0:	bl	404e10 <__errno_location@plt>
  4187d4:	ldr	w0, [x0]
  4187d8:	cmp	w0, #0x2
  4187dc:	b.eq	4187bc <wcrtomb@plt+0x1386c>  // b.none
  4187e0:	mov	x0, x20
  4187e4:	bl	4252dc <wcrtomb@plt+0x2038c>
  4187e8:	mov	w0, #0x0                   	// #0
  4187ec:	b	4187c0 <wcrtomb@plt+0x13870>
  4187f0:	ldr	w2, [x21, #2264]
  4187f4:	ldr	x1, [x19, #24]
  4187f8:	mov	w0, w2
  4187fc:	bl	404b30 <renameat@plt>
  418800:	cbnz	w0, 418868 <wcrtomb@plt+0x13918>
  418804:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  418808:	ldr	w0, [x0, #652]
  41880c:	cbz	w0, 4187bc <wcrtomb@plt+0x1386c>
  418810:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  418814:	mov	w2, #0x5                   	// #5
  418818:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41881c:	add	x1, x1, #0xf48
  418820:	ldr	x22, [x0, #3936]
  418824:	mov	x0, #0x0                   	// #0
  418828:	bl	404d00 <dcgettext@plt>
  41882c:	mov	x20, x0
  418830:	ldr	x1, [x19, #24]
  418834:	mov	w0, #0x0                   	// #0
  418838:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  41883c:	mov	x21, x0
  418840:	ldr	x1, [x19, #16]
  418844:	mov	w0, #0x1                   	// #1
  418848:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  41884c:	mov	x4, x0
  418850:	mov	x3, x21
  418854:	mov	x2, x20
  418858:	mov	x0, x22
  41885c:	mov	w1, #0x1                   	// #1
  418860:	bl	404a20 <__fprintf_chk@plt>
  418864:	b	4187bc <wcrtomb@plt+0x1386c>
  418868:	bl	404e10 <__errno_location@plt>
  41886c:	ldr	w22, [x0]
  418870:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  418874:	ldr	x0, [x0, #1016]
  418878:	cbz	x0, 418880 <wcrtomb@plt+0x13930>
  41887c:	blr	x0
  418880:	mov	w2, #0x5                   	// #5
  418884:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  418888:	mov	x0, #0x0                   	// #0
  41888c:	add	x1, x1, #0xf18
  418890:	bl	404d00 <dcgettext@plt>
  418894:	mov	x20, x0
  418898:	ldr	x0, [x19, #24]
  41889c:	bl	436084 <argp_usage@@Base+0x8ba4>
  4188a0:	mov	x21, x0
  4188a4:	ldr	x1, [x19, #16]
  4188a8:	mov	w0, #0x1                   	// #1
  4188ac:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  4188b0:	mov	x4, x0
  4188b4:	mov	x3, x21
  4188b8:	mov	x2, x20
  4188bc:	mov	w1, w22
  4188c0:	mov	w0, #0x0                   	// #0
  4188c4:	bl	4042e0 <error@plt>
  4188c8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4188cc:	mov	w1, #0x2                   	// #2
  4188d0:	str	w1, [x0, #3464]
  4188d4:	ldr	x0, [x19, #16]
  4188d8:	bl	404ae0 <free@plt>
  4188dc:	str	xzr, [x19, #16]
  4188e0:	b	4187e8 <wcrtomb@plt+0x13898>
  4188e4:	stp	x29, x30, [sp, #-48]!
  4188e8:	mov	x29, sp
  4188ec:	stp	x19, x20, [sp, #16]
  4188f0:	mov	w19, w0
  4188f4:	stp	x21, x22, [sp, #32]
  4188f8:	mov	x21, x1
  4188fc:	mov	x22, x2
  418900:	bl	436390 <argp_usage@@Base+0x8eb0>
  418904:	mov	x20, x0
  418908:	cmn	x0, #0x1
  41890c:	b.ne	418968 <wcrtomb@plt+0x13a18>  // b.any
  418910:	bl	404e10 <__errno_location@plt>
  418914:	ldr	w0, [x0]
  418918:	cmp	w0, #0xb
  41891c:	b.ne	418968 <wcrtomb@plt+0x13a18>  // b.any
  418920:	mov	w0, w19
  418924:	mov	w1, #0x3                   	// #3
  418928:	bl	4376ac <argp_usage@@Base+0xa1cc>
  41892c:	tbnz	w0, #31, 418968 <wcrtomb@plt+0x13a18>
  418930:	tbz	w0, #11, 418968 <wcrtomb@plt+0x13a18>
  418934:	and	w2, w0, #0xfffff7ff
  418938:	mov	w1, #0x4                   	// #4
  41893c:	mov	w0, w19
  418940:	bl	4376ac <argp_usage@@Base+0xa1cc>
  418944:	cmn	w0, #0x1
  418948:	b.eq	418968 <wcrtomb@plt+0x13a18>  // b.none
  41894c:	mov	x2, x22
  418950:	mov	x1, x21
  418954:	mov	w0, w19
  418958:	ldp	x19, x20, [sp, #16]
  41895c:	ldp	x21, x22, [sp, #32]
  418960:	ldp	x29, x30, [sp], #48
  418964:	b	436390 <argp_usage@@Base+0x8eb0>
  418968:	mov	x0, x20
  41896c:	ldp	x19, x20, [sp, #16]
  418970:	ldp	x21, x22, [sp, #32]
  418974:	ldp	x29, x30, [sp], #48
  418978:	ret
  41897c:	stp	x29, x30, [sp, #-48]!
  418980:	mov	x29, sp
  418984:	stp	x21, x22, [sp, #32]
  418988:	mov	x21, x2
  41898c:	mov	x22, x1
  418990:	stp	x19, x20, [sp, #16]
  418994:	mov	w20, w0
  418998:	bl	42fd3c <argp_usage@@Base+0x285c>
  41899c:	mov	x19, x0
  4189a0:	cmp	x21, x0
  4189a4:	b.ls	4189f8 <wcrtomb@plt+0x13aa8>  // b.plast
  4189a8:	bl	404e10 <__errno_location@plt>
  4189ac:	ldr	w0, [x0]
  4189b0:	cmp	w0, #0xb
  4189b4:	b.ne	4189f8 <wcrtomb@plt+0x13aa8>  // b.any
  4189b8:	mov	w0, w20
  4189bc:	mov	w1, #0x3                   	// #3
  4189c0:	bl	4376ac <argp_usage@@Base+0xa1cc>
  4189c4:	tbnz	w0, #31, 4189f8 <wcrtomb@plt+0x13aa8>
  4189c8:	tbz	w0, #11, 4189f8 <wcrtomb@plt+0x13aa8>
  4189cc:	and	w2, w0, #0xfffff7ff
  4189d0:	mov	w1, #0x4                   	// #4
  4189d4:	mov	w0, w20
  4189d8:	bl	4376ac <argp_usage@@Base+0xa1cc>
  4189dc:	cmn	w0, #0x1
  4189e0:	b.eq	4189f8 <wcrtomb@plt+0x13aa8>  // b.none
  4189e4:	sub	x2, x21, x19
  4189e8:	add	x1, x22, x19
  4189ec:	mov	w0, w20
  4189f0:	bl	42fd3c <argp_usage@@Base+0x285c>
  4189f4:	add	x19, x19, x0
  4189f8:	mov	x0, x19
  4189fc:	ldp	x19, x20, [sp, #16]
  418a00:	ldp	x21, x22, [sp, #32]
  418a04:	ldp	x29, x30, [sp], #48
  418a08:	ret
  418a0c:	stp	x29, x30, [sp, #-48]!
  418a10:	mov	x5, x4
  418a14:	mov	x4, x3
  418a18:	mov	x29, sp
  418a1c:	mov	x3, #0x3ffffffe            	// #1073741822
  418a20:	str	x3, [sp, #40]
  418a24:	adrp	x3, 472000 <argp_program_version_hook@@Base+0x250>
  418a28:	stp	x4, x5, [sp, #16]
  418a2c:	ldr	w4, [x3, #568]
  418a30:	add	x3, sp, #0x10
  418a34:	bl	42e910 <argp_usage@@Base+0x1430>
  418a38:	ldp	x29, x30, [sp], #48
  418a3c:	ret
  418a40:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  418a44:	ldr	x1, [x0, #2632]
  418a48:	sub	w0, w1, #0x1
  418a4c:	cmp	x1, #0x0
  418a50:	csel	w0, w0, wzr, ne  // ne = any
  418a54:	ret
  418a58:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  418a5c:	mov	w1, #0x18                  	// #24
  418a60:	ldr	w0, [x0, #8]
  418a64:	smull	x0, w0, w1
  418a68:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  418a6c:	ldr	x1, [x1, #2600]
  418a70:	ldr	x0, [x1, x0]
  418a74:	ret
  418a78:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  418a7c:	ldrb	w1, [x1, #961]
  418a80:	cbz	w1, 418a94 <wcrtomb@plt+0x13b44>
  418a84:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  418a88:	ldr	w1, [x1, #480]
  418a8c:	tbz	w1, #23, 418a98 <wcrtomb@plt+0x13b48>
  418a90:	b	424d70 <wcrtomb@plt+0x1fe20>
  418a94:	b	424d60 <wcrtomb@plt+0x1fe10>
  418a98:	ret
  418a9c:	stp	x29, x30, [sp, #-80]!
  418aa0:	mov	x29, sp
  418aa4:	stp	x23, x24, [sp, #48]
  418aa8:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  418aac:	stp	x19, x20, [sp, #16]
  418ab0:	mov	w19, w0
  418ab4:	ldr	w0, [x23, #8]
  418ab8:	stp	x21, x22, [sp, #32]
  418abc:	cmp	w0, w19
  418ac0:	stp	x25, x26, [sp, #64]
  418ac4:	b.eq	418b88 <wcrtomb@plt+0x13c38>  // b.none
  418ac8:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  418acc:	mov	w22, #0x18                  	// #24
  418ad0:	ldr	x24, [x20, #2600]
  418ad4:	smull	x22, w19, w22
  418ad8:	add	x25, x24, x22
  418adc:	ldr	w21, [x25, #16]
  418ae0:	cbnz	w21, 418b4c <wcrtomb@plt+0x13bfc>
  418ae4:	ldr	x0, [x24, x22]
  418ae8:	ldrb	w0, [x0]
  418aec:	cmp	w0, #0x2f
  418af0:	b.eq	418afc <wcrtomb@plt+0x13bac>  // b.none
  418af4:	sub	w0, w19, #0x1
  418af8:	bl	418a9c <wcrtomb@plt+0x13b4c>
  418afc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  418b00:	ldr	x1, [x24, x22]
  418b04:	ldr	w2, [x0, #708]
  418b08:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  418b0c:	ldr	w0, [x0, #2264]
  418b10:	and	w2, w2, #0xffff7fff
  418b14:	bl	4048b0 <__openat_2@plt>
  418b18:	mov	w21, w0
  418b1c:	tbz	w0, #31, 418b28 <wcrtomb@plt+0x13bd8>
  418b20:	ldr	x0, [x24, x22]
  418b24:	bl	424e6c <wcrtomb@plt+0x1ff1c>
  418b28:	add	x22, x20, #0xa28
  418b2c:	str	w21, [x25, #16]
  418b30:	add	x1, x22, #0x30
  418b34:	ldr	x0, [x22, #40]
  418b38:	cmp	x0, #0xf
  418b3c:	b.hi	418ba0 <wcrtomb@plt+0x13c50>  // b.pmore
  418b40:	add	x2, x0, #0x1
  418b44:	str	w19, [x1, x0, lsl #2]
  418b48:	str	x2, [x22, #40]
  418b4c:	cmp	w21, #0x0
  418b50:	b.le	418b7c <wcrtomb@plt+0x13c2c>
  418b54:	add	x20, x20, #0xa28
  418b58:	add	x1, x20, #0x30
  418b5c:	ldr	w0, [x20, #48]
  418b60:	cmp	w0, w19
  418b64:	b.eq	418b78 <wcrtomb@plt+0x13c28>  // b.none
  418b68:	ldr	w2, [x1, #4]
  418b6c:	str	w0, [x1, #4]!
  418b70:	cmp	w19, w2
  418b74:	b.ne	418bd4 <wcrtomb@plt+0x13c84>  // b.any
  418b78:	str	w19, [x20, #48]
  418b7c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  418b80:	str	w19, [x23, #8]
  418b84:	str	w21, [x0, #2264]
  418b88:	ldp	x19, x20, [sp, #16]
  418b8c:	ldp	x21, x22, [sp, #32]
  418b90:	ldp	x23, x24, [sp, #48]
  418b94:	ldp	x25, x26, [sp, #64]
  418b98:	ldp	x29, x30, [sp], #80
  418b9c:	ret
  418ba0:	ldr	w24, [x1, #60]
  418ba4:	mov	w0, #0x18                  	// #24
  418ba8:	ldr	x26, [x20, #2600]
  418bac:	smull	x24, w24, w0
  418bb0:	add	x25, x26, x24
  418bb4:	ldr	w0, [x25, #16]
  418bb8:	bl	4048c0 <close@plt>
  418bbc:	cbz	w0, 418bc8 <wcrtomb@plt+0x13c78>
  418bc0:	ldr	x0, [x26, x24]
  418bc4:	bl	418a78 <wcrtomb@plt+0x13b28>
  418bc8:	str	wzr, [x25, #16]
  418bcc:	str	w19, [x22, #108]
  418bd0:	b	418b4c <wcrtomb@plt+0x13bfc>
  418bd4:	mov	w0, w2
  418bd8:	b	418b60 <wcrtomb@plt+0x13c10>
  418bdc:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  418be0:	ldrb	w1, [x1, #961]
  418be4:	cbz	w1, 418bf8 <wcrtomb@plt+0x13ca8>
  418be8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  418bec:	ldr	w1, [x1, #480]
  418bf0:	tbz	w1, #23, 418bfc <wcrtomb@plt+0x13cac>
  418bf4:	b	424e84 <wcrtomb@plt+0x1ff34>
  418bf8:	b	424e5c <wcrtomb@plt+0x1ff0c>
  418bfc:	ret
  418c00:	adrp	x3, 472000 <argp_program_version_hook@@Base+0x250>
  418c04:	ldrb	w3, [x3, #961]
  418c08:	cbz	w3, 418c1c <wcrtomb@plt+0x13ccc>
  418c0c:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  418c10:	ldr	w3, [x3, #480]
  418c14:	tbz	w3, #23, 418c20 <wcrtomb@plt+0x13cd0>
  418c18:	b	424f54 <wcrtomb@plt+0x20004>
  418c1c:	b	424ea4 <wcrtomb@plt+0x1ff54>
  418c20:	ret
  418c24:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  418c28:	ldrb	w1, [x1, #961]
  418c2c:	cbz	w1, 418c40 <wcrtomb@plt+0x13cf0>
  418c30:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  418c34:	ldr	w1, [x1, #480]
  418c38:	tbz	w1, #23, 418c44 <wcrtomb@plt+0x13cf4>
  418c3c:	b	4250b4 <wcrtomb@plt+0x20164>
  418c40:	b	4250a4 <wcrtomb@plt+0x20154>
  418c44:	ret
  418c48:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  418c4c:	ldrb	w1, [x1, #961]
  418c50:	cbz	w1, 418c64 <wcrtomb@plt+0x13d14>
  418c54:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  418c58:	ldr	w1, [x1, #480]
  418c5c:	tbz	w1, #23, 418c68 <wcrtomb@plt+0x13d18>
  418c60:	b	4250e4 <wcrtomb@plt+0x20194>
  418c64:	b	4250d4 <wcrtomb@plt+0x20184>
  418c68:	ret
  418c6c:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  418c70:	ldrb	w2, [x2, #961]
  418c74:	cbz	w2, 418c88 <wcrtomb@plt+0x13d38>
  418c78:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  418c7c:	ldr	w2, [x2, #480]
  418c80:	tbz	w2, #23, 418c8c <wcrtomb@plt+0x13d3c>
  418c84:	b	4251a8 <wcrtomb@plt+0x20258>
  418c88:	b	425104 <wcrtomb@plt+0x201b4>
  418c8c:	ret
  418c90:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  418c94:	ldrb	w1, [x1, #961]
  418c98:	cbz	w1, 418cac <wcrtomb@plt+0x13d5c>
  418c9c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  418ca0:	ldr	w1, [x1, #480]
  418ca4:	tbz	w1, #23, 418cb0 <wcrtomb@plt+0x13d60>
  418ca8:	b	4252ec <wcrtomb@plt+0x2039c>
  418cac:	b	4252dc <wcrtomb@plt+0x2038c>
  418cb0:	ret
  418cb4:	stp	x29, x30, [sp, #-32]!
  418cb8:	tst	w1, #0xff
  418cbc:	mov	x29, sp
  418cc0:	stp	x19, x20, [sp, #16]
  418cc4:	mov	x19, x0
  418cc8:	mov	x20, x2
  418ccc:	b.ne	418d40 <wcrtomb@plt+0x13df0>  // b.any
  418cd0:	bl	404e10 <__errno_location@plt>
  418cd4:	ldr	w0, [x0]
  418cd8:	cmp	w0, #0x2
  418cdc:	b.ne	418d40 <wcrtomb@plt+0x13df0>  // b.any
  418ce0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  418ce4:	ldr	w0, [x0, #480]
  418ce8:	tbz	w0, #6, 418d30 <wcrtomb@plt+0x13de0>
  418cec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  418cf0:	ldr	x0, [x0, #1016]
  418cf4:	cbz	x0, 418cfc <wcrtomb@plt+0x13dac>
  418cf8:	blr	x0
  418cfc:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  418d00:	add	x1, x1, #0xf5b
  418d04:	mov	w2, #0x5                   	// #5
  418d08:	mov	x0, #0x0                   	// #0
  418d0c:	bl	404d00 <dcgettext@plt>
  418d10:	mov	x20, x0
  418d14:	mov	x0, x19
  418d18:	bl	436084 <argp_usage@@Base+0x8ba4>
  418d1c:	mov	x2, x20
  418d20:	mov	x3, x0
  418d24:	mov	w1, #0x0                   	// #0
  418d28:	mov	w0, #0x0                   	// #0
  418d2c:	bl	4042e0 <error@plt>
  418d30:	ldp	x19, x20, [sp, #16]
  418d34:	mov	w0, #0x1                   	// #1
  418d38:	ldp	x29, x30, [sp], #32
  418d3c:	b	421c04 <wcrtomb@plt+0x1ccb4>
  418d40:	mov	x0, x19
  418d44:	mov	x16, x20
  418d48:	ldp	x19, x20, [sp, #16]
  418d4c:	ldp	x29, x30, [sp], #32
  418d50:	br	x16
  418d54:	stp	x29, x30, [sp, #-16]!
  418d58:	mov	x29, sp
  418d5c:	bl	404470 <fork@plt>
  418d60:	cmn	w0, #0x1
  418d64:	b.ne	418d8c <wcrtomb@plt+0x13e3c>  // b.any
  418d68:	mov	w2, #0x5                   	// #5
  418d6c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  418d70:	mov	x0, #0x0                   	// #0
  418d74:	add	x1, x1, #0xf7e
  418d78:	bl	404d00 <dcgettext@plt>
  418d7c:	mov	x1, x0
  418d80:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  418d84:	add	x0, x0, #0xf8c
  418d88:	bl	424b5c <wcrtomb@plt+0x1fc0c>
  418d8c:	ldp	x29, x30, [sp], #16
  418d90:	ret
  418d94:	stp	x29, x30, [sp, #-16]!
  418d98:	mov	x29, sp
  418d9c:	bl	4043e0 <pipe@plt>
  418da0:	tbz	w0, #31, 418dc8 <wcrtomb@plt+0x13e78>
  418da4:	mov	w2, #0x5                   	// #5
  418da8:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  418dac:	mov	x0, #0x0                   	// #0
  418db0:	add	x1, x1, #0xf91
  418db4:	bl	404d00 <dcgettext@plt>
  418db8:	mov	x1, x0
  418dbc:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  418dc0:	add	x0, x0, #0xfa6
  418dc4:	bl	424b5c <wcrtomb@plt+0x1fc0c>
  418dc8:	ldp	x29, x30, [sp], #16
  418dcc:	ret
  418dd0:	stp	x29, x30, [sp, #-48]!
  418dd4:	mov	x29, sp
  418dd8:	stp	x19, x20, [sp, #16]
  418ddc:	mov	x20, x1
  418de0:	str	x21, [sp, #32]
  418de4:	mov	x21, x0
  418de8:	bl	404850 <getpagesize@plt>
  418dec:	sxtw	x19, w0
  418df0:	adds	x0, x19, x20
  418df4:	b.cc	418dfc <wcrtomb@plt+0x13eac>  // b.lo, b.ul, b.last
  418df8:	bl	40d4bc <wcrtomb@plt+0x856c>
  418dfc:	bl	436d44 <argp_usage@@Base+0x9864>
  418e00:	str	x0, [x21]
  418e04:	sub	x1, x19, #0x1
  418e08:	add	x1, x0, x1
  418e0c:	ldr	x21, [sp, #32]
  418e10:	udiv	x0, x1, x19
  418e14:	msub	x0, x0, x19, x1
  418e18:	ldp	x19, x20, [sp, #16]
  418e1c:	sub	x0, x1, x0
  418e20:	ldp	x29, x30, [sp], #48
  418e24:	ret
  418e28:	stp	x29, x30, [sp, #-48]!
  418e2c:	mov	x29, sp
  418e30:	stp	x19, x20, [sp, #16]
  418e34:	str	x21, [sp, #32]
  418e38:	mov	x21, x0
  418e3c:	mov	x0, #0x18                  	// #24
  418e40:	bl	436d44 <argp_usage@@Base+0x9864>
  418e44:	mov	x19, x0
  418e48:	mov	x0, x21
  418e4c:	bl	404280 <strlen@plt>
  418e50:	add	x0, x0, #0x2
  418e54:	str	x0, [x19, #8]
  418e58:	bl	436d44 <argp_usage@@Base+0x9864>
  418e5c:	mov	x1, x21
  418e60:	mov	x20, x0
  418e64:	str	x0, [x19]
  418e68:	bl	404c40 <strcpy@plt>
  418e6c:	mov	x0, x20
  418e70:	bl	404280 <strlen@plt>
  418e74:	add	x1, x20, x0
  418e78:	str	x0, [x19, #16]
  418e7c:	ldurb	w1, [x1, #-1]
  418e80:	cmp	w1, #0x2f
  418e84:	b.eq	418e98 <wcrtomb@plt+0x13f48>  // b.none
  418e88:	add	x1, x0, #0x1
  418e8c:	str	x1, [x19, #16]
  418e90:	mov	w1, #0x2f                  	// #47
  418e94:	strb	w1, [x20, x0]
  418e98:	mov	x0, x19
  418e9c:	ldp	x19, x20, [sp, #16]
  418ea0:	ldr	x21, [sp, #32]
  418ea4:	ldp	x29, x30, [sp], #48
  418ea8:	ret
  418eac:	stp	x29, x30, [sp, #-32]!
  418eb0:	mov	x29, sp
  418eb4:	str	x19, [sp, #16]
  418eb8:	mov	x19, x0
  418ebc:	ldr	x0, [x0]
  418ec0:	bl	404ae0 <free@plt>
  418ec4:	mov	x0, x19
  418ec8:	ldr	x19, [sp, #16]
  418ecc:	ldp	x29, x30, [sp], #32
  418ed0:	b	404ae0 <free@plt>
  418ed4:	stp	x29, x30, [sp, #-48]!
  418ed8:	mov	x29, sp
  418edc:	stp	x19, x20, [sp, #16]
  418ee0:	mov	x19, x0
  418ee4:	mov	x20, x1
  418ee8:	mov	x0, x1
  418eec:	stp	x21, x22, [sp, #32]
  418ef0:	bl	404280 <strlen@plt>
  418ef4:	add	x22, x19, #0x8
  418ef8:	mov	x21, x0
  418efc:	ldp	x0, x4, [x19]
  418f00:	ldr	x3, [x19, #16]
  418f04:	add	x2, x3, #0x1
  418f08:	add	x2, x2, x21
  418f0c:	cmp	x2, x4
  418f10:	b.cs	418f34 <wcrtomb@plt+0x13fe4>  // b.hs, b.nlast
  418f14:	mov	x1, x20
  418f18:	add	x0, x0, x3
  418f1c:	bl	404c40 <strcpy@plt>
  418f20:	ldr	x0, [x19]
  418f24:	ldp	x19, x20, [sp, #16]
  418f28:	ldp	x21, x22, [sp, #32]
  418f2c:	ldp	x29, x30, [sp], #48
  418f30:	ret
  418f34:	mov	x1, x22
  418f38:	bl	436e7c <argp_usage@@Base+0x999c>
  418f3c:	str	x0, [x19]
  418f40:	b	418efc <wcrtomb@plt+0x13fac>
  418f44:	stp	x29, x30, [sp, #-64]!
  418f48:	mov	x29, sp
  418f4c:	stp	x19, x20, [sp, #16]
  418f50:	mov	x19, x0
  418f54:	str	x23, [sp, #48]
  418f58:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  418f5c:	add	x20, x23, #0xa28
  418f60:	stp	x21, x22, [sp, #32]
  418f64:	ldr	x0, [x20, #32]
  418f68:	ldr	x1, [x20, #112]
  418f6c:	cmp	x0, x1
  418f70:	b.ne	418fd4 <wcrtomb@plt+0x14084>  // b.any
  418f74:	cbnz	x0, 418f80 <wcrtomb@plt+0x14030>
  418f78:	mov	x0, #0x2                   	// #2
  418f7c:	str	x0, [x20, #112]
  418f80:	ldr	x0, [x23, #2600]
  418f84:	add	x1, x20, #0x70
  418f88:	mov	x2, #0x18                  	// #24
  418f8c:	bl	436e14 <argp_usage@@Base+0x9934>
  418f90:	mov	x21, x0
  418f94:	str	x0, [x23, #2600]
  418f98:	ldr	x0, [x20, #32]
  418f9c:	cbnz	x0, 418fd4 <wcrtomb@plt+0x14084>
  418fa0:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  418fa4:	add	x0, x0, #0xc29
  418fa8:	str	x0, [x21]
  418fac:	bl	436f38 <argp_usage@@Base+0x9a58>
  418fb0:	str	x0, [x21, #8]
  418fb4:	ldr	x2, [x23, #2600]
  418fb8:	mov	x1, #0x18                  	// #24
  418fbc:	ldr	x0, [x20, #32]
  418fc0:	madd	x1, x0, x1, x2
  418fc4:	add	x0, x0, #0x1
  418fc8:	mov	w2, #0xffffff9c            	// #-100
  418fcc:	str	x0, [x20, #32]
  418fd0:	str	w2, [x1, #16]
  418fd4:	ldrb	w0, [x19]
  418fd8:	cbnz	w0, 419088 <wcrtomb@plt+0x14138>
  418fdc:	ldr	x1, [x23, #2600]
  418fe0:	mov	x2, #0x18                  	// #24
  418fe4:	ldr	x0, [x20, #32]
  418fe8:	madd	x0, x0, x2, x1
  418fec:	ldur	x22, [x0, #-16]
  418ff0:	cbz	x22, 4190e8 <wcrtomb@plt+0x14198>
  418ff4:	mov	x0, x22
  418ff8:	bl	418e28 <wcrtomb@plt+0x13ed8>
  418ffc:	ldr	x1, [x0]
  419000:	mov	x21, x0
  419004:	ldr	x2, [x0, #16]
  419008:	add	x1, x1, x2
  41900c:	ldurb	w1, [x1, #-1]
  419010:	cmp	w1, #0x2f
  419014:	b.eq	419034 <wcrtomb@plt+0x140e4>  // b.none
  419018:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x36380>
  41901c:	add	x1, x1, #0x8d8
  419020:	add	x1, x1, #0x4
  419024:	bl	418ed4 <wcrtomb@plt+0x13f84>
  419028:	ldr	x0, [x21, #16]
  41902c:	add	x0, x0, #0x1
  419030:	str	x0, [x21, #16]
  419034:	mov	x1, x19
  419038:	mov	x0, x21
  41903c:	bl	418ed4 <wcrtomb@plt+0x13f84>
  419040:	mov	x0, x19
  419044:	bl	404280 <strlen@plt>
  419048:	ldr	x1, [x21, #16]
  41904c:	ldr	x22, [x21]
  419050:	add	x0, x0, x1
  419054:	str	x0, [x21, #16]
  419058:	add	x1, x22, x0
  41905c:	ldurb	w1, [x1, #-1]
  419060:	cmp	w1, #0x2f
  419064:	b.ne	41906c <wcrtomb@plt+0x1411c>  // b.any
  419068:	strb	wzr, [x22, x0]
  41906c:	mov	x0, x21
  419070:	bl	404ae0 <free@plt>
  419074:	b	4190e8 <wcrtomb@plt+0x14198>
  419078:	add	x19, x19, #0x2
  41907c:	ldrb	w0, [x19]
  419080:	cmp	w0, #0x2f
  419084:	b.eq	4190cc <wcrtomb@plt+0x1417c>  // b.none
  419088:	ldrb	w0, [x19]
  41908c:	cmp	w0, #0x2e
  419090:	b.ne	4190a0 <wcrtomb@plt+0x14150>  // b.any
  419094:	ldrb	w1, [x19, #1]
  419098:	cmp	w1, #0x2f
  41909c:	b.eq	419078 <wcrtomb@plt+0x14128>  // b.none
  4190a0:	cmp	w0, #0x2e
  4190a4:	cset	x1, eq  // eq = none
  4190a8:	ldrb	w1, [x19, x1]
  4190ac:	cbnz	w1, 4190d4 <wcrtomb@plt+0x14184>
  4190b0:	ldr	x0, [x20, #32]
  4190b4:	sub	w0, w0, #0x1
  4190b8:	ldp	x19, x20, [sp, #16]
  4190bc:	ldp	x21, x22, [sp, #32]
  4190c0:	ldr	x23, [sp, #48]
  4190c4:	ldp	x29, x30, [sp], #64
  4190c8:	ret
  4190cc:	add	x19, x19, #0x1
  4190d0:	b	41907c <wcrtomb@plt+0x1412c>
  4190d4:	cmp	w0, #0x2f
  4190d8:	b.ne	418fdc <wcrtomb@plt+0x1408c>  // b.any
  4190dc:	mov	x0, x19
  4190e0:	bl	436f10 <argp_usage@@Base+0x9a30>
  4190e4:	mov	x22, x0
  4190e8:	ldr	x0, [x20, #32]
  4190ec:	mov	x1, #0x18                  	// #24
  4190f0:	ldr	x3, [x23, #2600]
  4190f4:	mul	x1, x0, x1
  4190f8:	add	x2, x3, x1
  4190fc:	str	x19, [x3, x1]
  419100:	add	x1, x0, #0x1
  419104:	str	x22, [x2, #8]
  419108:	str	wzr, [x2, #16]
  41910c:	str	x1, [x20, #32]
  419110:	b	4190b8 <wcrtomb@plt+0x14168>
  419114:	stp	x29, x30, [sp, #-48]!
  419118:	mov	x29, sp
  41911c:	stp	x19, x20, [sp, #16]
  419120:	mov	x20, x0
  419124:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  419128:	mov	w19, w1
  41912c:	mov	x1, x20
  419130:	ldr	w2, [x0, #716]
  419134:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  419138:	stp	x21, x22, [sp, #32]
  41913c:	ldr	w0, [x0, #2264]
  419140:	orr	w2, w2, #0x4000
  419144:	bl	4048b0 <__openat_2@plt>
  419148:	tbz	w0, #31, 419174 <wcrtomb@plt+0x14224>
  41914c:	cbnz	w19, 419160 <wcrtomb@plt+0x14210>
  419150:	bl	404e10 <__errno_location@plt>
  419154:	ldr	w0, [x0]
  419158:	cmp	w0, #0x2
  41915c:	b.eq	4191dc <wcrtomb@plt+0x1428c>  // b.none
  419160:	mov	x0, x20
  419164:	bl	424e5c <wcrtomb@plt+0x1ff0c>
  419168:	mov	w0, #0x0                   	// #0
  41916c:	mov	x19, #0x0                   	// #0
  419170:	b	4191bc <wcrtomb@plt+0x1426c>
  419174:	mov	w22, w0
  419178:	bl	404920 <fdopendir@plt>
  41917c:	mov	x21, x0
  419180:	cbnz	x0, 419198 <wcrtomb@plt+0x14248>
  419184:	mov	x0, x20
  419188:	bl	4250d4 <wcrtomb@plt+0x20184>
  41918c:	cbz	x21, 4191e4 <wcrtomb@plt+0x14294>
  419190:	mov	x19, #0x0                   	// #0
  419194:	b	4191ac <wcrtomb@plt+0x1425c>
  419198:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41919c:	ldr	w1, [x1, #528]
  4191a0:	bl	436548 <argp_usage@@Base+0x9068>
  4191a4:	mov	x19, x0
  4191a8:	cbz	x0, 419184 <wcrtomb@plt+0x14234>
  4191ac:	mov	x0, x21
  4191b0:	bl	404880 <closedir@plt>
  4191b4:	cmp	w0, #0x0
  4191b8:	cset	w0, ne  // ne = any
  4191bc:	cbz	w0, 4191c8 <wcrtomb@plt+0x14278>
  4191c0:	mov	x0, x20
  4191c4:	bl	4250d4 <wcrtomb@plt+0x20184>
  4191c8:	mov	x0, x19
  4191cc:	ldp	x19, x20, [sp, #16]
  4191d0:	ldp	x21, x22, [sp, #32]
  4191d4:	ldp	x29, x30, [sp], #48
  4191d8:	ret
  4191dc:	mov	x19, #0x0                   	// #0
  4191e0:	b	4191c8 <wcrtomb@plt+0x14278>
  4191e4:	mov	w0, w22
  4191e8:	bl	4048c0 <close@plt>
  4191ec:	cmp	w0, #0x0
  4191f0:	cset	w0, ne  // ne = any
  4191f4:	b	41916c <wcrtomb@plt+0x1421c>
  4191f8:	stp	x29, x30, [sp, #-80]!
  4191fc:	mov	w2, #0x0                   	// #0
  419200:	mov	x29, sp
  419204:	stp	x19, x20, [sp, #16]
  419208:	mov	x20, x0
  41920c:	stp	x21, x22, [sp, #32]
  419210:	mov	w21, w1
  419214:	mov	x1, x0
  419218:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  41921c:	stp	x23, x24, [sp, #48]
  419220:	ldr	w0, [x0, #2264]
  419224:	stp	x25, x26, [sp, #64]
  419228:	bl	404410 <unlinkat@plt>
  41922c:	cbnz	w0, 419250 <wcrtomb@plt+0x14300>
  419230:	mov	w19, #0x1                   	// #1
  419234:	mov	w0, w19
  419238:	ldp	x19, x20, [sp, #16]
  41923c:	ldp	x21, x22, [sp, #32]
  419240:	ldp	x23, x24, [sp, #48]
  419244:	ldp	x25, x26, [sp, #64]
  419248:	ldp	x29, x30, [sp], #80
  41924c:	ret
  419250:	bl	404e10 <__errno_location@plt>
  419254:	mov	x23, x0
  419258:	ldr	w0, [x0]
  41925c:	cmp	w0, #0x1
  419260:	ccmp	w0, #0x15, #0x4, ne  // ne = any
  419264:	b.eq	419270 <wcrtomb@plt+0x14320>  // b.none
  419268:	mov	w19, #0x0                   	// #0
  41926c:	b	419234 <wcrtomb@plt+0x142e4>
  419270:	mov	x0, x20
  419274:	bl	418544 <wcrtomb@plt+0x135f4>
  419278:	cbz	w0, 419230 <wcrtomb@plt+0x142e0>
  41927c:	ldr	w1, [x23]
  419280:	cmp	w1, #0x27
  419284:	b.hi	419268 <wcrtomb@plt+0x14318>  // b.pmore
  419288:	mov	x0, #0x1                   	// #1
  41928c:	mov	w19, #0x0                   	// #0
  419290:	lsl	x0, x0, x1
  419294:	mov	x1, #0x1                   	// #1
  419298:	movk	x1, #0x2, lsl #16
  41929c:	movk	x1, #0x80, lsl #32
  4192a0:	tst	x0, x1
  4192a4:	b.eq	419234 <wcrtomb@plt+0x142e4>  // b.none
  4192a8:	cmp	w21, #0x1
  4192ac:	b.eq	4192bc <wcrtomb@plt+0x1436c>  // b.none
  4192b0:	cmp	w21, #0x2
  4192b4:	csetm	w19, eq  // eq = none
  4192b8:	b	419234 <wcrtomb@plt+0x142e4>
  4192bc:	mov	x0, x20
  4192c0:	mov	w1, #0x0                   	// #0
  4192c4:	bl	419114 <wcrtomb@plt+0x141c4>
  4192c8:	mov	x21, x0
  4192cc:	cbz	x0, 419268 <wcrtomb@plt+0x14318>
  4192d0:	mov	x24, x0
  4192d4:	mov	x0, x24
  4192d8:	bl	404280 <strlen@plt>
  4192dc:	mov	x22, x0
  4192e0:	cbnz	x0, 419300 <wcrtomb@plt+0x143b0>
  4192e4:	mov	x0, x21
  4192e8:	bl	404ae0 <free@plt>
  4192ec:	mov	x0, x20
  4192f0:	bl	418544 <wcrtomb@plt+0x135f4>
  4192f4:	cmp	w0, #0x0
  4192f8:	cset	w19, eq  // eq = none
  4192fc:	b	419234 <wcrtomb@plt+0x142e4>
  419300:	mov	x1, x24
  419304:	mov	x0, x20
  419308:	bl	41b368 <wcrtomb@plt+0x16418>
  41930c:	mov	x25, x0
  419310:	mov	w1, #0x1                   	// #1
  419314:	bl	4191f8 <wcrtomb@plt+0x142a8>
  419318:	ldr	w26, [x23]
  41931c:	mov	w19, w0
  419320:	mov	x0, x25
  419324:	bl	404ae0 <free@plt>
  419328:	cbnz	w19, 41933c <wcrtomb@plt+0x143ec>
  41932c:	mov	x0, x21
  419330:	bl	404ae0 <free@plt>
  419334:	str	w26, [x23]
  419338:	b	419234 <wcrtomb@plt+0x142e4>
  41933c:	add	x22, x22, #0x1
  419340:	add	x24, x24, x22
  419344:	b	4192d4 <wcrtomb@plt+0x14384>
  419348:	mov	w2, w0
  41934c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x36380>
  419350:	add	x0, x1, #0x8e0
  419354:	ldr	x3, [x0]
  419358:	ldr	w1, [x0, #8]
  41935c:	cbnz	x3, 419374 <wcrtomb@plt+0x14424>
  419360:	cbnz	w1, 419374 <wcrtomb@plt+0x14424>
  419364:	ldr	x3, [x0, #32]
  419368:	cbnz	x3, 419374 <wcrtomb@plt+0x14424>
  41936c:	mov	x0, #0x0                   	// #0
  419370:	ret
  419374:	cmp	w2, w1
  419378:	b.eq	419370 <wcrtomb@plt+0x14420>  // b.none
  41937c:	add	x0, x0, #0x30
  419380:	b	419354 <wcrtomb@plt+0x14404>
  419384:	stp	x29, x30, [sp, #-64]!
  419388:	cmp	w1, #0x1
  41938c:	mov	x29, sp
  419390:	stp	x19, x20, [sp, #16]
  419394:	mov	x19, x0
  419398:	stp	x21, x22, [sp, #32]
  41939c:	b.ne	4193b4 <wcrtomb@plt+0x14464>  // b.any
  4193a0:	mov	x0, x19
  4193a4:	ldp	x19, x20, [sp, #16]
  4193a8:	ldp	x21, x22, [sp, #32]
  4193ac:	ldp	x29, x30, [sp], #64
  4193b0:	ret
  4193b4:	mov	w3, w1
  4193b8:	mov	x21, x2
  4193bc:	cmp	w1, #0x2
  4193c0:	b.ne	4193e4 <wcrtomb@plt+0x14494>  // b.any
  4193c4:	ldr	x1, [x0]
  4193c8:	blr	x2
  4193cc:	cmp	w0, #0x0
  4193d0:	b.le	4193a0 <wcrtomb@plt+0x14450>
  4193d4:	ldr	x0, [x19]
  4193d8:	str	x19, [x0]
  4193dc:	str	xzr, [x19]
  4193e0:	b	4193a4 <wcrtomb@plt+0x14454>
  4193e4:	add	w1, w1, #0x1
  4193e8:	mov	w20, #0x2                   	// #2
  4193ec:	sdiv	w1, w1, w20
  4193f0:	sdiv	w20, w3, w20
  4193f4:	sub	w2, w1, #0x1
  4193f8:	ldr	x22, [x0]
  4193fc:	cbnz	w2, 41944c <wcrtomb@plt+0x144fc>
  419400:	str	xzr, [x0]
  419404:	mov	x2, x21
  419408:	mov	x0, x19
  41940c:	bl	419384 <wcrtomb@plt+0x14434>
  419410:	mov	x19, x0
  419414:	mov	w1, w20
  419418:	mov	x0, x22
  41941c:	mov	x2, x21
  419420:	add	x22, sp, #0x38
  419424:	bl	419384 <wcrtomb@plt+0x14434>
  419428:	mov	x20, x0
  41942c:	cmp	x19, #0x0
  419430:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  419434:	b.ne	419458 <wcrtomb@plt+0x14508>  // b.any
  419438:	cmp	x19, #0x0
  41943c:	csel	x19, x19, x20, ne  // ne = any
  419440:	str	x19, [x22]
  419444:	ldr	x0, [sp, #56]
  419448:	b	4193a4 <wcrtomb@plt+0x14454>
  41944c:	sub	w2, w2, #0x1
  419450:	mov	x0, x22
  419454:	b	4193f8 <wcrtomb@plt+0x144a8>
  419458:	mov	x1, x20
  41945c:	mov	x0, x19
  419460:	blr	x21
  419464:	tbz	w0, #31, 419480 <wcrtomb@plt+0x14530>
  419468:	mov	x0, x19
  41946c:	mov	x1, x19
  419470:	ldr	x19, [x19]
  419474:	str	x1, [x22]
  419478:	mov	x22, x0
  41947c:	b	41942c <wcrtomb@plt+0x144dc>
  419480:	mov	x0, x20
  419484:	mov	x1, x20
  419488:	ldr	x20, [x20]
  41948c:	b	419474 <wcrtomb@plt+0x14524>
  419490:	stp	x29, x30, [sp, #-32]!
  419494:	mov	x0, #0x38                  	// #56
  419498:	mov	x29, sp
  41949c:	str	x19, [sp, #16]
  4194a0:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4194a4:	bl	436d44 <argp_usage@@Base+0x9864>
  4194a8:	ldr	x1, [x19, #2720]
  4194ac:	cbnz	x1, 4194c8 <wcrtomb@plt+0x14578>
  4194b0:	mov	w1, #0x3                   	// #3
  4194b4:	stp	xzr, xzr, [x0]
  4194b8:	str	w1, [x0, #16]
  4194bc:	str	x0, [x19, #2720]
  4194c0:	mov	x0, #0x38                  	// #56
  4194c4:	bl	436d44 <argp_usage@@Base+0x9864>
  4194c8:	ldr	x1, [x19, #2720]
  4194cc:	ldr	x2, [x1, #8]
  4194d0:	str	x2, [x0, #8]
  4194d4:	cbz	x2, 4194dc <wcrtomb@plt+0x1458c>
  4194d8:	str	x0, [x2]
  4194dc:	ldr	x19, [sp, #16]
  4194e0:	str	x1, [x0]
  4194e4:	str	x0, [x1, #8]
  4194e8:	ldp	x29, x30, [sp], #32
  4194ec:	ret
  4194f0:	stp	x29, x30, [sp, #-16]!
  4194f4:	mov	x29, sp
  4194f8:	ldr	x0, [x0, #88]
  4194fc:	ldr	x1, [x1, #88]
  419500:	bl	404a30 <strcmp@plt>
  419504:	cmp	w0, #0x0
  419508:	cset	w0, eq  // eq = none
  41950c:	ldp	x29, x30, [sp], #16
  419510:	ret
  419514:	ldr	x0, [x0, #16]
  419518:	ldr	x1, [x1, #16]
  41951c:	b	404a30 <strcmp@plt>
  419520:	stp	x29, x30, [sp, #-32]!
  419524:	mov	x29, sp
  419528:	str	x19, [sp, #16]
  41952c:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  419530:	ldr	x0, [x19, #32]
  419534:	cbnz	x0, 419544 <wcrtomb@plt+0x145f4>
  419538:	ldr	x19, [sp, #16]
  41953c:	ldp	x29, x30, [sp], #32
  419540:	ret
  419544:	ldr	x1, [x0, #8]
  419548:	str	x1, [x19, #32]
  41954c:	bl	404ae0 <free@plt>
  419550:	b	419530 <wcrtomb@plt+0x145e0>
  419554:	stp	x29, x30, [sp, #-32]!
  419558:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41955c:	mov	x29, sp
  419560:	str	x19, [sp, #16]
  419564:	ldr	x19, [x1, #2720]
  419568:	ldr	x0, [x19]
  41956c:	str	x0, [x1, #2720]
  419570:	cbz	x0, 419578 <wcrtomb@plt+0x14628>
  419574:	str	xzr, [x0, #8]
  419578:	ldr	w0, [x19, #16]
  41957c:	cmp	w0, #0x4
  419580:	ccmp	w0, #0x1, #0x4, ne  // ne = any
  419584:	b.ne	4195c0 <wcrtomb@plt+0x14670>  // b.any
  419588:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41958c:	ldr	w0, [x0, #868]
  419590:	cmp	w0, #0x3
  419594:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  419598:	b.ne	4195b4 <wcrtomb@plt+0x14664>  // b.any
  41959c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4195a0:	ldr	x1, [x0, #32]
  4195a4:	stp	xzr, x1, [x19]
  4195a8:	cbz	x1, 4195b0 <wcrtomb@plt+0x14660>
  4195ac:	str	x19, [x1]
  4195b0:	str	x19, [x0, #32]
  4195b4:	ldr	x19, [sp, #16]
  4195b8:	ldp	x29, x30, [sp], #32
  4195bc:	ret
  4195c0:	cmp	w0, #0x3
  4195c4:	b.eq	4195cc <wcrtomb@plt+0x1467c>  // b.none
  4195c8:	bl	419520 <wcrtomb@plt+0x145d0>
  4195cc:	mov	x0, x19
  4195d0:	ldr	x19, [sp, #16]
  4195d4:	ldp	x29, x30, [sp], #32
  4195d8:	b	404ae0 <free@plt>
  4195dc:	stp	x29, x30, [sp, #-32]!
  4195e0:	mov	x29, sp
  4195e4:	str	x19, [sp, #16]
  4195e8:	mov	x19, x0
  4195ec:	bl	404280 <strlen@plt>
  4195f0:	sub	x1, x0, #0x1
  4195f4:	add	x1, x19, x1
  4195f8:	cmp	x1, x19
  4195fc:	b.ls	41960c <wcrtomb@plt+0x146bc>  // b.plast
  419600:	ldrb	w0, [x1]
  419604:	cmp	w0, #0x2f
  419608:	b.eq	419618 <wcrtomb@plt+0x146c8>  // b.none
  41960c:	ldr	x19, [sp, #16]
  419610:	ldp	x29, x30, [sp], #32
  419614:	ret
  419618:	strb	wzr, [x1], #-1
  41961c:	b	4195f8 <wcrtomb@plt+0x146a8>
  419620:	stp	x29, x30, [sp, #-320]!
  419624:	mov	x29, sp
  419628:	stp	x19, x20, [sp, #16]
  41962c:	mov	x19, x0
  419630:	str	x21, [sp, #32]
  419634:	mov	x21, x1
  419638:	ldrb	w20, [x19]
  41963c:	cbz	w20, 41974c <wcrtomb@plt+0x147fc>
  419640:	bl	404a60 <__ctype_b_loc@plt>
  419644:	ldr	x0, [x0]
  419648:	ubfiz	x1, x20, #1, #8
  41964c:	ldrh	w0, [x0, x1]
  419650:	tbnz	w0, #13, 4196cc <wcrtomb@plt+0x1477c>
  419654:	cmp	w20, #0x2d
  419658:	b.ne	41974c <wcrtomb@plt+0x147fc>  // b.any
  41965c:	mov	x0, #0x1                   	// #1
  419660:	mov	w2, #0xe46                 	// #3654
  419664:	add	x1, sp, #0x58
  419668:	movk	w2, #0x200, lsl #16
  41966c:	str	x0, [sp, #104]
  419670:	mov	x0, x19
  419674:	bl	4294ac <wcrtomb@plt+0x2455c>
  419678:	mov	w20, w0
  41967c:	cbz	w0, 4196d4 <wcrtomb@plt+0x14784>
  419680:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  419684:	ldr	x0, [x0, #1016]
  419688:	cbz	x0, 419690 <wcrtomb@plt+0x14740>
  41968c:	blr	x0
  419690:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  419694:	add	x1, x1, #0x38a
  419698:	mov	w2, #0x5                   	// #5
  41969c:	mov	x0, #0x0                   	// #0
  4196a0:	bl	404d00 <dcgettext@plt>
  4196a4:	mov	x20, x0
  4196a8:	add	x0, sp, #0x58
  4196ac:	bl	426dc8 <wcrtomb@plt+0x21e78>
  4196b0:	mov	x3, x19
  4196b4:	mov	x4, x0
  4196b8:	mov	x2, x20
  4196bc:	mov	w1, #0x0                   	// #0
  4196c0:	mov	w0, #0x0                   	// #0
  4196c4:	bl	4042e0 <error@plt>
  4196c8:	bl	40d47c <wcrtomb@plt+0x852c>
  4196cc:	add	x19, x19, #0x1
  4196d0:	b	419638 <wcrtomb@plt+0x146e8>
  4196d4:	ldp	x3, x1, [sp, #88]
  4196d8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4196dc:	add	x2, sp, #0x38
  4196e0:	ldr	x0, [x0, #3552]
  4196e4:	str	x0, [x1]
  4196e8:	mov	w0, #0x2                   	// #2
  4196ec:	str	w0, [sp, #56]
  4196f0:	ldr	x0, [x21, #24]
  4196f4:	str	x0, [sp, #64]
  4196f8:	ldr	x0, [x21, #32]
  4196fc:	str	x0, [sp, #72]
  419700:	ldr	x0, [sp, #104]
  419704:	add	w0, w3, w0
  419708:	bl	420b64 <wcrtomb@plt+0x1bc14>
  41970c:	ldp	x1, x2, [sp, #88]
  419710:	ldr	x0, [sp, #104]
  419714:	add	x1, x1, x0
  419718:	mov	x0, #0x0                   	// #0
  41971c:	cmp	x1, x0
  419720:	b.ne	419740 <wcrtomb@plt+0x147f0>  // b.any
  419724:	add	x0, sp, #0x58
  419728:	bl	426d30 <wcrtomb@plt+0x21de0>
  41972c:	mov	w0, w20
  419730:	ldp	x19, x20, [sp, #16]
  419734:	ldr	x21, [sp, #32]
  419738:	ldp	x29, x30, [sp], #320
  41973c:	ret
  419740:	str	xzr, [x2, x0, lsl #3]
  419744:	add	x0, x0, #0x1
  419748:	b	41971c <wcrtomb@plt+0x147cc>
  41974c:	mov	w20, #0x1                   	// #1
  419750:	b	41972c <wcrtomb@plt+0x147dc>
  419754:	stp	x29, x30, [sp, #-48]!
  419758:	mov	x29, sp
  41975c:	stp	x19, x20, [sp, #16]
  419760:	mov	w20, w1
  419764:	mov	x19, x0
  419768:	str	x21, [sp, #32]
  41976c:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  419770:	ldr	x1, [x19], #8
  419774:	cbnz	x1, 419788 <wcrtomb@plt+0x14838>
  419778:	ldp	x19, x20, [sp, #16]
  41977c:	ldr	x21, [sp, #32]
  419780:	ldp	x29, x30, [sp], #48
  419784:	ret
  419788:	ldr	x0, [x21, #72]
  41978c:	mov	w2, w20
  419790:	bl	42e434 <argp_usage@@Base+0xf54>
  419794:	b	419770 <wcrtomb@plt+0x14820>
  419798:	stp	x29, x30, [sp, #-32]!
  41979c:	mov	x29, sp
  4197a0:	stp	x19, x20, [sp, #16]
  4197a4:	mov	x19, x0
  4197a8:	mov	x0, #0x60                  	// #96
  4197ac:	bl	436e84 <argp_usage@@Base+0x99a4>
  4197b0:	mov	x20, x0
  4197b4:	cbnz	x19, 4197c0 <wcrtomb@plt+0x14870>
  4197b8:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x15380>
  4197bc:	add	x19, x19, #0x41a
  4197c0:	mov	x0, x19
  4197c4:	bl	436f10 <argp_usage@@Base+0x9a30>
  4197c8:	str	x0, [x20, #16]
  4197cc:	bl	404280 <strlen@plt>
  4197d0:	str	x0, [x20, #24]
  4197d4:	mov	x0, x20
  4197d8:	ldp	x19, x20, [sp, #16]
  4197dc:	ldp	x29, x30, [sp], #32
  4197e0:	ret
  4197e4:	stp	x29, x30, [sp, #-32]!
  4197e8:	mov	x29, sp
  4197ec:	stp	x19, x20, [sp, #16]
  4197f0:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4197f4:	add	x19, x19, #0xaa0
  4197f8:	ldr	w1, [x19, #8]
  4197fc:	cbnz	w1, 41987c <wcrtomb@plt+0x1492c>
  419800:	bl	42e09c <argp_usage@@Base+0xbbc>
  419804:	tst	w0, #0xff
  419808:	b.eq	41987c <wcrtomb@plt+0x1492c>  // b.none
  41980c:	mov	w0, #0x1                   	// #1
  419810:	str	w0, [x19, #12]
  419814:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  419818:	mov	x20, x0
  41981c:	ldr	x1, [x0, #1016]
  419820:	cbz	x1, 419828 <wcrtomb@plt+0x148d8>
  419824:	blr	x1
  419828:	mov	w2, #0x5                   	// #5
  41982c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  419830:	mov	x0, #0x0                   	// #0
  419834:	add	x1, x1, #0xfab
  419838:	bl	404d00 <dcgettext@plt>
  41983c:	mov	x2, x0
  419840:	mov	w1, #0x0                   	// #0
  419844:	mov	w0, #0x0                   	// #0
  419848:	bl	4042e0 <error@plt>
  41984c:	ldr	x0, [x20, #1016]
  419850:	cbz	x0, 419858 <wcrtomb@plt+0x14908>
  419854:	blr	x0
  419858:	mov	w2, #0x5                   	// #5
  41985c:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  419860:	mov	x0, #0x0                   	// #0
  419864:	add	x1, x1, #0xfda
  419868:	bl	404d00 <dcgettext@plt>
  41986c:	mov	x2, x0
  419870:	mov	w1, #0x0                   	// #0
  419874:	mov	w0, #0x0                   	// #0
  419878:	bl	4042e0 <error@plt>
  41987c:	ldr	w0, [x19, #12]
  419880:	ldp	x19, x20, [sp, #16]
  419884:	ldp	x29, x30, [sp], #32
  419888:	ret
  41988c:	ldr	x0, [x0, #88]
  419890:	b	4304b4 <argp_usage@@Base+0x2fd4>
  419894:	stp	x29, x30, [sp, #-80]!
  419898:	mov	x29, sp
  41989c:	stp	x19, x20, [sp, #16]
  4198a0:	mov	x19, x0
  4198a4:	ldr	x0, [x0, #64]
  4198a8:	stp	x23, x24, [sp, #48]
  4198ac:	ldp	x23, x24, [x1, #16]
  4198b0:	stp	x21, x22, [sp, #32]
  4198b4:	ldr	x22, [x0, #24]
  4198b8:	str	x25, [sp, #64]
  4198bc:	sub	x25, x24, x22
  4198c0:	ldr	x20, [x19, #24]
  4198c4:	add	x20, x25, x20
  4198c8:	add	x0, x20, #0x1
  4198cc:	bl	436d44 <argp_usage@@Base+0x9864>
  4198d0:	mov	x1, x23
  4198d4:	mov	x21, x0
  4198d8:	bl	404c40 <strcpy@plt>
  4198dc:	ldr	x1, [x19, #16]
  4198e0:	mov	x0, x21
  4198e4:	add	x1, x1, x22
  4198e8:	bl	4046e0 <strcat@plt>
  4198ec:	ldr	x0, [x19, #16]
  4198f0:	bl	404ae0 <free@plt>
  4198f4:	stp	x21, x20, [x19, #16]
  4198f8:	mov	x4, x24
  4198fc:	ldr	x0, [x19, #64]
  419900:	mov	x3, x23
  419904:	mov	x2, x22
  419908:	ldr	x1, [x0, #16]
  41990c:	ldr	x0, [x19, #56]
  419910:	bl	413ba4 <wcrtomb@plt+0xec54>
  419914:	ldr	x19, [x19, #80]
  419918:	cbnz	x19, 4198c0 <wcrtomb@plt+0x14970>
  41991c:	ldp	x19, x20, [sp, #16]
  419920:	ldp	x21, x22, [sp, #32]
  419924:	ldp	x23, x24, [sp, #48]
  419928:	ldr	x25, [sp, #64]
  41992c:	ldp	x29, x30, [sp], #80
  419930:	ret
  419934:	mov	x3, x0
  419938:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41993c:	ldr	x2, [x1, #48]
  419940:	ldr	x0, [x0, #768]
  419944:	ldr	x4, [x3, #48]
  419948:	cbnz	x0, 419970 <wcrtomb@plt+0x14a20>
  41994c:	cmp	x2, #0x0
  419950:	cset	w2, ne  // ne = any
  419954:	cmp	x4, #0x0
  419958:	cset	w0, ne  // ne = any
  41995c:	subs	w0, w2, w0
  419960:	b.ne	419984 <wcrtomb@plt+0x14a34>  // b.any
  419964:	ldr	x1, [x1, #16]
  419968:	ldr	x0, [x3, #16]
  41996c:	b	404a30 <strcmp@plt>
  419970:	cmp	x0, x2
  419974:	cset	w2, ls  // ls = plast
  419978:	cmp	x0, x4
  41997c:	cset	w0, ls  // ls = plast
  419980:	b	41995c <wcrtomb@plt+0x14a0c>
  419984:	ret
  419988:	cbz	x0, 4199bc <wcrtomb@plt+0x14a6c>
  41998c:	stp	x29, x30, [sp, #-32]!
  419990:	mov	x29, sp
  419994:	str	x19, [sp, #16]
  419998:	mov	x19, x0
  41999c:	ldr	x0, [x0, #16]
  4199a0:	bl	404ae0 <free@plt>
  4199a4:	ldr	x0, [x19, #88]
  4199a8:	bl	404ae0 <free@plt>
  4199ac:	mov	x0, x19
  4199b0:	ldr	x19, [sp, #16]
  4199b4:	ldp	x29, x30, [sp], #32
  4199b8:	b	404ae0 <free@plt>
  4199bc:	ret
  4199c0:	stp	x29, x30, [sp, #-32]!
  4199c4:	mov	x29, sp
  4199c8:	stp	x19, x20, [sp, #16]
  4199cc:	mov	x20, x0
  4199d0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4199d4:	ldr	x19, [x0, #2736]
  4199d8:	cbz	x19, 419a04 <wcrtomb@plt+0x14ab4>
  4199dc:	ldr	x0, [x19, #16]
  4199e0:	ldrb	w1, [x0]
  4199e4:	cbnz	w1, 4199f0 <wcrtomb@plt+0x14aa0>
  4199e8:	ldr	x19, [x19]
  4199ec:	b	4199d8 <wcrtomb@plt+0x14a88>
  4199f0:	ldr	w2, [x19, #32]
  4199f4:	mov	x1, x20
  4199f8:	bl	42e238 <argp_usage@@Base+0xd58>
  4199fc:	tst	w0, #0xff
  419a00:	b.eq	4199e8 <wcrtomb@plt+0x14a98>  // b.none
  419a04:	mov	x0, x19
  419a08:	ldp	x19, x20, [sp, #16]
  419a0c:	ldp	x29, x30, [sp], #32
  419a10:	ret
  419a14:	stp	x29, x30, [sp, #-224]!
  419a18:	mov	x29, sp
  419a1c:	stp	x19, x20, [sp, #16]
  419a20:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  419a24:	add	x19, x19, #0xaa0
  419a28:	stp	x23, x24, [sp, #48]
  419a2c:	mov	w23, w0
  419a30:	add	x24, x19, #0x60
  419a34:	stp	x21, x22, [sp, #32]
  419a38:	stp	x25, x26, [sp, #64]
  419a3c:	str	x27, [sp, #80]
  419a40:	ldr	x20, [x19]
  419a44:	cbnz	x20, 419adc <wcrtomb@plt+0x14b8c>
  419a48:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  419a4c:	mov	x20, x0
  419a50:	ldr	x19, [x0, #32]
  419a54:	cbz	x19, 419e08 <wcrtomb@plt+0x14eb8>
  419a58:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  419a5c:	ldr	x0, [x21, #1016]
  419a60:	cbz	x0, 419a68 <wcrtomb@plt+0x14b18>
  419a64:	blr	x0
  419a68:	mov	w2, #0x5                   	// #5
  419a6c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  419a70:	mov	x0, #0x0                   	// #0
  419a74:	add	x1, x1, #0xbf
  419a78:	bl	404d00 <dcgettext@plt>
  419a7c:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  419a80:	mov	x2, x0
  419a84:	mov	w1, #0x0                   	// #0
  419a88:	mov	w0, #0x0                   	// #0
  419a8c:	bl	4042e0 <error@plt>
  419a90:	mov	w0, #0x2                   	// #2
  419a94:	str	w0, [x22, #3464]
  419a98:	ldr	x0, [x20, #32]
  419a9c:	mov	x19, x0
  419aa0:	ldr	x0, [x0, #8]
  419aa4:	cbnz	x0, 419a9c <wcrtomb@plt+0x14b4c>
  419aa8:	adrp	x24, 449000 <_obstack_memory_used@@Base+0x11380>
  419aac:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  419ab0:	add	x24, x24, #0x18e
  419ab4:	add	x23, x23, #0xd88
  419ab8:	ldr	w0, [x19, #16]
  419abc:	cmp	w0, #0x1
  419ac0:	b.eq	41a180 <wcrtomb@plt+0x15230>  // b.none
  419ac4:	cmp	w0, #0x4
  419ac8:	b.eq	41a1c8 <wcrtomb@plt+0x15278>  // b.none
  419acc:	ldr	x19, [x19]
  419ad0:	cbnz	x19, 419ab8 <wcrtomb@plt+0x14b68>
  419ad4:	bl	419520 <wcrtomb@plt+0x145d0>
  419ad8:	b	419e08 <wcrtomb@plt+0x14eb8>
  419adc:	ldr	w1, [x20, #16]
  419ae0:	cmp	w1, #0x4
  419ae4:	b.hi	419a44 <wcrtomb@plt+0x14af4>  // b.pmore
  419ae8:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  419aec:	add	x0, x0, #0xac0
  419af0:	ldrh	w0, [x0, w1, uxtw #1]
  419af4:	adr	x1, 419b00 <wcrtomb@plt+0x14bb0>
  419af8:	add	x0, x1, w0, sxth #2
  419afc:	br	x0
  419b00:	ldr	x0, [x20, #48]
  419b04:	cbnz	x0, 419b4c <wcrtomb@plt+0x14bfc>
  419b08:	ldr	x25, [x20, #24]
  419b0c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  419b10:	add	x1, x1, #0x8dc
  419b14:	mov	x0, x25
  419b18:	bl	404a30 <strcmp@plt>
  419b1c:	cbnz	w0, 419c18 <wcrtomb@plt+0x14cc8>
  419b20:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  419b24:	add	x0, x0, #0x31
  419b28:	bl	41f14c <wcrtomb@plt+0x1a1fc>
  419b2c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  419b30:	ldr	x0, [x0, #1176]
  419b34:	str	x0, [x20, #48]
  419b38:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  419b3c:	ldrb	w0, [x0, #3952]
  419b40:	str	w0, [x20, #40]
  419b44:	ldrb	w0, [x19, #88]
  419b48:	strb	w0, [x20, #44]
  419b4c:	ldr	x0, [x20, #32]
  419b50:	mov	x22, #0x0                   	// #0
  419b54:	ldr	x25, [x20, #48]
  419b58:	add	x0, x0, #0x1
  419b5c:	str	x0, [x20, #32]
  419b60:	ldr	w26, [x20, #40]
  419b64:	mov	x0, x25
  419b68:	bl	404890 <getc_unlocked@plt>
  419b6c:	mov	w21, w0
  419b70:	cmn	w21, #0x1
  419b74:	cset	w0, ne  // ne = any
  419b78:	cmp	w0, #0x0
  419b7c:	ccmp	w26, w21, #0x4, ne  // ne = any
  419b80:	b.ne	419d68 <wcrtomb@plt+0x14e18>  // b.any
  419b84:	cmp	x22, #0x0
  419b88:	cset	w25, eq  // eq = none
  419b8c:	cmp	w0, #0x0
  419b90:	ccmp	w25, #0x0, #0x4, ne  // ne = any
  419b94:	b.ne	419b4c <wcrtomb@plt+0x14bfc>  // b.any
  419b98:	ldr	x0, [x19, #96]
  419b9c:	cmp	x22, x0
  419ba0:	b.ne	419bb4 <wcrtomb@plt+0x14c64>  // b.any
  419ba4:	ldr	x0, [x19, #104]
  419ba8:	mov	x1, x24
  419bac:	bl	436e7c <argp_usage@@Base+0x999c>
  419bb0:	str	x0, [x19, #104]
  419bb4:	ldr	x0, [x19, #104]
  419bb8:	strb	wzr, [x0, x22]
  419bbc:	bl	4195dc <wcrtomb@plt+0x1468c>
  419bc0:	cmp	w25, #0x0
  419bc4:	ccmn	w21, #0x1, #0x0, ne  // ne = any
  419bc8:	b.eq	419e28 <wcrtomb@plt+0x14ed8>  // b.none
  419bcc:	ldrb	w21, [x20, #44]
  419bd0:	cbnz	w21, 419df4 <wcrtomb@plt+0x14ea4>
  419bd4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  419bd8:	ldrb	w0, [x0, #764]
  419bdc:	cbz	w0, 419be8 <wcrtomb@plt+0x14c98>
  419be0:	ldr	x0, [x19, #104]
  419be4:	bl	417cd0 <wcrtomb@plt+0x12d80>
  419be8:	ldr	x0, [x19, #104]
  419bec:	mov	x1, x20
  419bf0:	bl	419620 <wcrtomb@plt+0x146d0>
  419bf4:	cbnz	w0, 419df4 <wcrtomb@plt+0x14ea4>
  419bf8:	ldr	x0, [x19]
  419bfc:	cbz	x0, 419a40 <wcrtomb@plt+0x14af0>
  419c00:	mov	x1, x0
  419c04:	ldr	x0, [x0, #8]
  419c08:	cbnz	x0, 419dec <wcrtomb@plt+0x14e9c>
  419c0c:	cbz	w21, 419a40 <wcrtomb@plt+0x14af0>
  419c10:	str	x1, [x19]
  419c14:	b	419a40 <wcrtomb@plt+0x14af0>
  419c18:	add	x1, sp, #0x60
  419c1c:	mov	x0, x25
  419c20:	bl	446a80 <_obstack_memory_used@@Base+0xee00>
  419c24:	cbz	w0, 419c30 <wcrtomb@plt+0x14ce0>
  419c28:	mov	x0, x25
  419c2c:	bl	4252c4 <wcrtomb@plt+0x20374>
  419c30:	mov	x0, x20
  419c34:	ldr	w1, [x0, #16]
  419c38:	cmp	w1, #0x2
  419c3c:	b.ne	419ca0 <wcrtomb@plt+0x14d50>  // b.any
  419c40:	ldr	x1, [x0, #48]
  419c44:	cbz	x1, 419ca0 <wcrtomb@plt+0x14d50>
  419c48:	ldr	x22, [x0, #24]
  419c4c:	ldp	x1, x0, [sp, #96]
  419c50:	ldr	x21, [x19, #80]
  419c54:	cbnz	x21, 419cc0 <wcrtomb@plt+0x14d70>
  419c58:	mov	x0, #0x20                  	// #32
  419c5c:	bl	436d44 <argp_usage@@Base+0x9864>
  419c60:	ldr	x1, [x19, #80]
  419c64:	str	x1, [x0]
  419c68:	ldr	x1, [sp, #104]
  419c6c:	str	x1, [x0, #8]
  419c70:	ldr	x1, [sp, #96]
  419c74:	str	x1, [x0, #16]
  419c78:	str	x22, [x0, #24]
  419c7c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  419c80:	str	x0, [x19, #80]
  419c84:	add	x1, x1, #0xb66
  419c88:	ldr	x0, [x20, #24]
  419c8c:	bl	4045c0 <fopen@plt>
  419c90:	str	x0, [x20, #48]
  419c94:	cbnz	x0, 419b38 <wcrtomb@plt+0x14be8>
  419c98:	ldr	x0, [x20, #24]
  419c9c:	bl	424e6c <wcrtomb@plt+0x1ff1c>
  419ca0:	ldr	x0, [x0]
  419ca4:	cbnz	x0, 419c34 <wcrtomb@plt+0x14ce4>
  419ca8:	mov	w2, #0x5                   	// #5
  419cac:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  419cb0:	add	x1, x1, #0x34
  419cb4:	bl	404d00 <dcgettext@plt>
  419cb8:	mov	x22, x0
  419cbc:	b	419c4c <wcrtomb@plt+0x14cfc>
  419cc0:	ldr	x2, [x21, #8]
  419cc4:	cmp	x2, x0
  419cc8:	b.ne	419d60 <wcrtomb@plt+0x14e10>  // b.any
  419ccc:	ldr	x2, [x21, #16]
  419cd0:	cmp	x2, x1
  419cd4:	b.ne	419d60 <wcrtomb@plt+0x14e10>  // b.any
  419cd8:	mov	w2, #0x1                   	// #1
  419cdc:	mov	w1, #0x3a                  	// #58
  419ce0:	mov	x0, #0x0                   	// #0
  419ce4:	bl	435c3c <argp_usage@@Base+0x875c>
  419ce8:	mov	w20, w0
  419cec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  419cf0:	ldr	x0, [x0, #1016]
  419cf4:	cbz	x0, 419cfc <wcrtomb@plt+0x14dac>
  419cf8:	blr	x0
  419cfc:	mov	w2, #0x5                   	// #5
  419d00:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  419d04:	mov	x0, #0x0                   	// #0
  419d08:	add	x1, x1, #0x41
  419d0c:	bl	404d00 <dcgettext@plt>
  419d10:	mov	x26, x0
  419d14:	mov	x1, x25
  419d18:	mov	w0, #0x0                   	// #0
  419d1c:	bl	435f20 <argp_usage@@Base+0x8a40>
  419d20:	mov	x3, x0
  419d24:	ldr	x5, [x21, #24]
  419d28:	mov	x2, x26
  419d2c:	mov	w1, #0x0                   	// #0
  419d30:	mov	w0, #0x0                   	// #0
  419d34:	mov	x4, x22
  419d38:	bl	4042e0 <error@plt>
  419d3c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  419d40:	mov	w1, #0x2                   	// #2
  419d44:	mov	w2, w20
  419d48:	str	w1, [x0, #3464]
  419d4c:	mov	w1, #0x3a                  	// #58
  419d50:	mov	x0, #0x0                   	// #0
  419d54:	bl	435c3c <argp_usage@@Base+0x875c>
  419d58:	bl	419554 <wcrtomb@plt+0x14604>
  419d5c:	b	419a40 <wcrtomb@plt+0x14af0>
  419d60:	ldr	x21, [x21]
  419d64:	b	419c54 <wcrtomb@plt+0x14d04>
  419d68:	ldr	x0, [x19, #96]
  419d6c:	cmp	x0, x22
  419d70:	b.ne	419d84 <wcrtomb@plt+0x14e34>  // b.any
  419d74:	ldr	x0, [x19, #104]
  419d78:	mov	x1, x24
  419d7c:	bl	436e7c <argp_usage@@Base+0x999c>
  419d80:	str	x0, [x19, #104]
  419d84:	ldr	x0, [x19, #104]
  419d88:	add	x27, x22, #0x1
  419d8c:	strb	w21, [x0, x22]
  419d90:	cbz	w21, 419da8 <wcrtomb@plt+0x14e58>
  419d94:	mov	x0, x25
  419d98:	mov	x22, x27
  419d9c:	bl	404890 <getc_unlocked@plt>
  419da0:	mov	w21, w0
  419da4:	b	419b70 <wcrtomb@plt+0x14c20>
  419da8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  419dac:	ldr	w0, [x0, #480]
  419db0:	tbz	w0, #9, 419de4 <wcrtomb@plt+0x14e94>
  419db4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  419db8:	ldr	x0, [x0, #1016]
  419dbc:	cbz	x0, 419dc4 <wcrtomb@plt+0x14e74>
  419dc0:	blr	x0
  419dc4:	ldr	x0, [x20, #24]
  419dc8:	bl	436084 <argp_usage@@Base+0x8ba4>
  419dcc:	mov	x3, x0
  419dd0:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x11380>
  419dd4:	mov	w1, #0x0                   	// #0
  419dd8:	add	x2, x2, #0x76
  419ddc:	mov	w0, #0x0                   	// #0
  419de0:	bl	4042e0 <error@plt>
  419de4:	str	wzr, [x20, #40]
  419de8:	b	419bcc <wcrtomb@plt+0x14c7c>
  419dec:	mov	w21, #0x1                   	// #1
  419df0:	b	419c00 <wcrtomb@plt+0x14cb0>
  419df4:	add	x0, x19, #0x18
  419df8:	str	wzr, [x19, #40]
  419dfc:	ldr	x1, [x19, #104]
  419e00:	str	x1, [x19, #48]
  419e04:	mov	x19, x0
  419e08:	mov	x0, x19
  419e0c:	ldp	x19, x20, [sp, #16]
  419e10:	ldp	x21, x22, [sp, #32]
  419e14:	ldp	x23, x24, [sp, #48]
  419e18:	ldp	x25, x26, [sp, #64]
  419e1c:	ldr	x27, [sp, #80]
  419e20:	ldp	x29, x30, [sp], #224
  419e24:	ret
  419e28:	ldr	x0, [x20, #24]
  419e2c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  419e30:	add	x1, x1, #0x8dc
  419e34:	bl	404a30 <strcmp@plt>
  419e38:	cbz	w0, 419e44 <wcrtomb@plt+0x14ef4>
  419e3c:	ldr	x0, [x20, #48]
  419e40:	bl	404570 <fclose@plt>
  419e44:	str	xzr, [x20, #48]
  419e48:	b	419d58 <wcrtomb@plt+0x14e08>
  419e4c:	ldr	x0, [x20, #24]
  419e50:	cbz	w23, 419e64 <wcrtomb@plt+0x14f14>
  419e54:	bl	436f10 <argp_usage@@Base+0x9a30>
  419e58:	bl	418f44 <wcrtomb@plt+0x13ff4>
  419e5c:	bl	418a9c <wcrtomb@plt+0x13b4c>
  419e60:	b	419d58 <wcrtomb@plt+0x14e08>
  419e64:	ldr	x22, [x20, #24]
  419e68:	mov	x0, x22
  419e6c:	bl	404280 <strlen@plt>
  419e70:	ldr	x2, [x19, #96]
  419e74:	cmp	x0, x2
  419e78:	b.ls	419eb0 <wcrtomb@plt+0x14f60>  // b.plast
  419e7c:	lsl	x2, x2, #1
  419e80:	cbnz	x2, 419e8c <wcrtomb@plt+0x14f3c>
  419e84:	str	xzr, [x19, #96]
  419e88:	bl	40d4bc <wcrtomb@plt+0x856c>
  419e8c:	cmp	x0, x2
  419e90:	b.hi	419e7c <wcrtomb@plt+0x14f2c>  // b.pmore
  419e94:	ldr	x0, [x19, #104]
  419e98:	str	x2, [x19, #96]
  419e9c:	bl	404ae0 <free@plt>
  419ea0:	ldr	x0, [x19, #96]
  419ea4:	add	x0, x0, #0x2
  419ea8:	bl	436d44 <argp_usage@@Base+0x9864>
  419eac:	str	x0, [x19, #104]
  419eb0:	ldr	x21, [x19, #104]
  419eb4:	mov	x1, x22
  419eb8:	mov	x0, x21
  419ebc:	bl	404c40 <strcpy@plt>
  419ec0:	mov	x0, x21
  419ec4:	bl	4195dc <wcrtomb@plt+0x1468c>
  419ec8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  419ecc:	ldrb	w0, [x0, #764]
  419ed0:	cbz	w0, 419edc <wcrtomb@plt+0x14f8c>
  419ed4:	mov	x0, x21
  419ed8:	bl	417cd0 <wcrtomb@plt+0x12d80>
  419edc:	ldr	w0, [x20, #16]
  419ee0:	add	x20, x19, #0x18
  419ee4:	str	w0, [x19, #40]
  419ee8:	ldr	x0, [x19, #104]
  419eec:	str	x0, [x19, #48]
  419ef0:	mov	x19, x20
  419ef4:	bl	419554 <wcrtomb@plt+0x14604>
  419ef8:	b	419e08 <wcrtomb@plt+0x14eb8>
  419efc:	ldr	w21, [x20, #24]
  419f00:	ldr	x20, [x20, #32]
  419f04:	cmp	w21, #0x58
  419f08:	b.eq	41a070 <wcrtomb@plt+0x15120>  // b.none
  419f0c:	sub	w1, w21, #0x101
  419f10:	cmp	w1, #0x1b
  419f14:	b.hi	41a154 <wcrtomb@plt+0x15204>  // b.pmore
  419f18:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  419f1c:	add	x0, x0, #0xacc
  419f20:	ldrh	w0, [x0, w1, uxtw #1]
  419f24:	adr	x1, 419f30 <wcrtomb@plt+0x14fe0>
  419f28:	add	x0, x1, w0, sxth #2
  419f2c:	br	x0
  419f30:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  419f34:	add	x0, x0, #0xb08
  419f38:	mov	w1, #0x10000000            	// #268435456
  419f3c:	bl	419754 <wcrtomb@plt+0x14804>
  419f40:	b	419d58 <wcrtomb@plt+0x14e08>
  419f44:	ldr	w0, [x19, #8]
  419f48:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  419f4c:	cmp	w0, #0x1
  419f50:	ldr	w1, [x1, #684]
  419f54:	ldr	w0, [x19, #112]
  419f58:	cset	w2, ne  // ne = any
  419f5c:	orr	w0, w0, w1
  419f60:	mov	x1, x20
  419f64:	orr	w2, w0, w2, lsl #28
  419f68:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  419f6c:	ldr	x0, [x0, #72]
  419f70:	bl	42e434 <argp_usage@@Base+0xf54>
  419f74:	b	419d58 <wcrtomb@plt+0x14e08>
  419f78:	adrp	x2, 40a000 <wcrtomb@plt+0x50b0>
  419f7c:	add	x2, x2, #0x83c
  419f80:	mov	w1, #0x1                   	// #1
  419f84:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  419f88:	add	x0, x0, #0x688
  419f8c:	bl	40a728 <wcrtomb@plt+0x57d8>
  419f90:	b	419d58 <wcrtomb@plt+0x14e08>
  419f94:	adrp	x2, 40a000 <wcrtomb@plt+0x50b0>
  419f98:	mov	w1, #0x2                   	// #2
  419f9c:	add	x2, x2, #0x83c
  419fa0:	b	419f84 <wcrtomb@plt+0x15034>
  419fa4:	adrp	x2, 40a000 <wcrtomb@plt+0x50b0>
  419fa8:	mov	w1, #0x3                   	// #3
  419fac:	add	x2, x2, #0x83c
  419fb0:	b	419f84 <wcrtomb@plt+0x15034>
  419fb4:	mov	w1, #0x2                   	// #2
  419fb8:	mov	x0, x20
  419fbc:	bl	40d818 <wcrtomb@plt+0x88c8>
  419fc0:	b	419d58 <wcrtomb@plt+0x14e08>
  419fc4:	mov	w1, #0x1                   	// #1
  419fc8:	b	419fb8 <wcrtomb@plt+0x15068>
  419fcc:	mov	x2, #0x0                   	// #0
  419fd0:	mov	w1, #0x1                   	// #1
  419fd4:	mov	x0, x20
  419fd8:	b	419f8c <wcrtomb@plt+0x1503c>
  419fdc:	mov	x2, #0x0                   	// #0
  419fe0:	mov	w1, #0x2                   	// #2
  419fe4:	b	419fd4 <wcrtomb@plt+0x15084>
  419fe8:	mov	x2, #0x0                   	// #0
  419fec:	mov	w1, #0x3                   	// #3
  419ff0:	b	419fd4 <wcrtomb@plt+0x15084>
  419ff4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  419ff8:	add	x0, x0, #0xb08
  419ffc:	add	x0, x0, #0x20
  41a000:	mov	w1, #0x0                   	// #0
  41a004:	b	419f3c <wcrtomb@plt+0x14fec>
  41a008:	bl	40dbe0 <wcrtomb@plt+0x8c90>
  41a00c:	b	419d58 <wcrtomb@plt+0x14e08>
  41a010:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41a014:	mov	w1, #0x8                   	// #8
  41a018:	str	w1, [x0, #684]
  41a01c:	b	419d58 <wcrtomb@plt+0x14e08>
  41a020:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41a024:	str	wzr, [x0, #684]
  41a028:	b	419d58 <wcrtomb@plt+0x14e08>
  41a02c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41a030:	mov	w1, #0x1                   	// #1
  41a034:	strb	w1, [x0, #764]
  41a038:	b	419d58 <wcrtomb@plt+0x14e08>
  41a03c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41a040:	strb	wzr, [x0, #764]
  41a044:	b	419d58 <wcrtomb@plt+0x14e08>
  41a048:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  41a04c:	strb	wzr, [x0, #3952]
  41a050:	mov	w0, #0x1                   	// #1
  41a054:	strb	w0, [x19, #88]
  41a058:	b	419d58 <wcrtomb@plt+0x14e08>
  41a05c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  41a060:	mov	w1, #0xa                   	// #10
  41a064:	strb	w1, [x0, #3952]
  41a068:	strb	wzr, [x19, #88]
  41a06c:	b	419d58 <wcrtomb@plt+0x14e08>
  41a070:	ldr	w0, [x19, #8]
  41a074:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41a078:	mov	x2, x20
  41a07c:	mov	w4, #0xa                   	// #10
  41a080:	ldr	w1, [x1, #684]
  41a084:	cmp	w0, #0x1
  41a088:	ldr	w0, [x19, #112]
  41a08c:	cset	w3, ne  // ne = any
  41a090:	orr	w0, w0, w1
  41a094:	orr	w3, w0, w3, lsl #28
  41a098:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41a09c:	ldr	x1, [x0, #72]
  41a0a0:	adrp	x0, 42e000 <argp_usage@@Base+0xb20>
  41a0a4:	add	x0, x0, #0x434
  41a0a8:	bl	42e85c <argp_usage@@Base+0x137c>
  41a0ac:	cbz	w0, 419d58 <wcrtomb@plt+0x14e08>
  41a0b0:	bl	404e10 <__errno_location@plt>
  41a0b4:	ldr	w19, [x0]
  41a0b8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41a0bc:	ldr	x0, [x0, #1016]
  41a0c0:	cbz	x0, 41a0c8 <wcrtomb@plt+0x15178>
  41a0c4:	blr	x0
  41a0c8:	mov	x0, x20
  41a0cc:	bl	436084 <argp_usage@@Base+0x8ba4>
  41a0d0:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  41a0d4:	mov	x3, x0
  41a0d8:	add	x2, x2, #0xb0d
  41a0dc:	mov	w1, w19
  41a0e0:	mov	w0, #0x0                   	// #0
  41a0e4:	bl	4042e0 <error@plt>
  41a0e8:	bl	40d47c <wcrtomb@plt+0x852c>
  41a0ec:	ldr	w0, [x19, #112]
  41a0f0:	orr	w0, w0, #0x40000000
  41a0f4:	str	w0, [x19, #112]
  41a0f8:	b	419d58 <wcrtomb@plt+0x14e08>
  41a0fc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  41a100:	str	wzr, [x0, #3956]
  41a104:	ldr	w0, [x19, #112]
  41a108:	and	w0, w0, #0xbfffffff
  41a10c:	b	41a0f4 <wcrtomb@plt+0x151a4>
  41a110:	ldr	w0, [x19, #112]
  41a114:	orr	w0, w0, #0x10
  41a118:	b	41a0f4 <wcrtomb@plt+0x151a4>
  41a11c:	ldr	w0, [x19, #112]
  41a120:	and	w0, w0, #0xffffffef
  41a124:	b	41a0f4 <wcrtomb@plt+0x151a4>
  41a128:	mov	w0, #0x2                   	// #2
  41a12c:	str	w0, [x19, #8]
  41a130:	b	419d58 <wcrtomb@plt+0x14e08>
  41a134:	mov	w0, #0x1                   	// #1
  41a138:	b	41a12c <wcrtomb@plt+0x151dc>
  41a13c:	ldr	w0, [x19, #112]
  41a140:	and	w0, w0, #0xfffffffe
  41a144:	b	41a0f4 <wcrtomb@plt+0x151a4>
  41a148:	ldr	w0, [x19, #112]
  41a14c:	orr	w0, w0, #0x1
  41a150:	b	41a0f4 <wcrtomb@plt+0x151a4>
  41a154:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41a158:	ldr	x0, [x0, #1016]
  41a15c:	cbz	x0, 41a164 <wcrtomb@plt+0x15214>
  41a160:	blr	x0
  41a164:	mov	w3, w21
  41a168:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x11380>
  41a16c:	mov	w1, #0x0                   	// #0
  41a170:	add	x2, x2, #0xa0
  41a174:	mov	w0, #0x0                   	// #0
  41a178:	bl	4042e0 <error@plt>
  41a17c:	b	41a0e8 <wcrtomb@plt+0x15198>
  41a180:	ldr	x0, [x21, #1016]
  41a184:	cbz	x0, 41a18c <wcrtomb@plt+0x1523c>
  41a188:	blr	x0
  41a18c:	mov	x1, x24
  41a190:	mov	w2, #0x5                   	// #5
  41a194:	mov	x0, #0x0                   	// #0
  41a198:	bl	404d00 <dcgettext@plt>
  41a19c:	mov	x20, x0
  41a1a0:	ldr	x0, [x19, #24]
  41a1a4:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  41a1a8:	mov	x3, x0
  41a1ac:	mov	x2, x20
  41a1b0:	mov	w0, #0x0                   	// #0
  41a1b4:	mov	w1, #0x0                   	// #0
  41a1b8:	bl	4042e0 <error@plt>
  41a1bc:	mov	w0, #0x2                   	// #2
  41a1c0:	str	w0, [x22, #3464]
  41a1c4:	b	419acc <wcrtomb@plt+0x14b7c>
  41a1c8:	ldr	x1, [x19, #32]
  41a1cc:	ldr	x0, [x21, #1016]
  41a1d0:	cbz	x1, 41a234 <wcrtomb@plt+0x152e4>
  41a1d4:	cbz	x0, 41a1dc <wcrtomb@plt+0x1528c>
  41a1d8:	blr	x0
  41a1dc:	mov	w2, #0x5                   	// #5
  41a1e0:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41a1e4:	mov	x0, #0x0                   	// #0
  41a1e8:	add	x1, x1, #0x1a2
  41a1ec:	bl	404d00 <dcgettext@plt>
  41a1f0:	mov	x25, x0
  41a1f4:	ldr	w0, [x19, #24]
  41a1f8:	bl	419348 <wcrtomb@plt+0x143f8>
  41a1fc:	mov	x20, x0
  41a200:	cbz	x0, 41a208 <wcrtomb@plt+0x152b8>
  41a204:	ldr	x20, [x0]
  41a208:	ldr	x0, [x19, #32]
  41a20c:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  41a210:	mov	x4, x0
  41a214:	mov	x3, x20
  41a218:	mov	x2, x25
  41a21c:	mov	w1, #0x0                   	// #0
  41a220:	mov	w0, #0x0                   	// #0
  41a224:	bl	4042e0 <error@plt>
  41a228:	mov	w0, #0x2                   	// #2
  41a22c:	str	w0, [x23]
  41a230:	b	419acc <wcrtomb@plt+0x14b7c>
  41a234:	cbz	x0, 41a23c <wcrtomb@plt+0x152ec>
  41a238:	blr	x0
  41a23c:	mov	w2, #0x5                   	// #5
  41a240:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41a244:	mov	x0, #0x0                   	// #0
  41a248:	add	x1, x1, #0x1b8
  41a24c:	bl	404d00 <dcgettext@plt>
  41a250:	mov	x4, x0
  41a254:	ldr	w0, [x19, #24]
  41a258:	bl	419348 <wcrtomb@plt+0x143f8>
  41a25c:	mov	x3, x0
  41a260:	cbz	x0, 41a268 <wcrtomb@plt+0x15318>
  41a264:	ldr	x3, [x0]
  41a268:	mov	x2, x4
  41a26c:	mov	w1, #0x0                   	// #0
  41a270:	mov	w0, #0x0                   	// #0
  41a274:	bl	4042e0 <error@plt>
  41a278:	b	41a228 <wcrtomb@plt+0x152d8>
  41a27c:	stp	x29, x30, [sp, #-48]!
  41a280:	mov	x29, sp
  41a284:	stp	x19, x20, [sp, #16]
  41a288:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  41a28c:	mov	w20, w0
  41a290:	str	x21, [sp, #32]
  41a294:	add	x19, x19, #0xaa0
  41a298:	mov	x21, x1
  41a29c:	cbz	w0, 41a2cc <wcrtomb@plt+0x1537c>
  41a2a0:	ldr	w0, [x19, #116]
  41a2a4:	cmp	w0, w20
  41a2a8:	b.ne	41a2cc <wcrtomb@plt+0x1537c>  // b.any
  41a2ac:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  41a2b0:	add	x0, x0, #0x41a
  41a2b4:	bl	436f10 <argp_usage@@Base+0x9a30>
  41a2b8:	ldp	x19, x20, [sp, #16]
  41a2bc:	str	x0, [x21]
  41a2c0:	ldr	x21, [sp, #32]
  41a2c4:	ldp	x29, x30, [sp], #48
  41a2c8:	ret
  41a2cc:	ldr	x0, [x19, #120]
  41a2d0:	cbz	x0, 41a2e0 <wcrtomb@plt+0x15390>
  41a2d4:	ldr	w0, [x19, #128]
  41a2d8:	cmp	w0, w20
  41a2dc:	b.eq	41a2fc <wcrtomb@plt+0x153ac>  // b.none
  41a2e0:	mov	w0, w20
  41a2e4:	bl	404a40 <getpwuid@plt>
  41a2e8:	cbz	x0, 41a304 <wcrtomb@plt+0x153b4>
  41a2ec:	ldr	x1, [x0]
  41a2f0:	add	x0, x19, #0x78
  41a2f4:	str	w20, [x19, #128]
  41a2f8:	bl	417c2c <wcrtomb@plt+0x12cdc>
  41a2fc:	ldr	x0, [x19, #120]
  41a300:	b	41a2b4 <wcrtomb@plt+0x15364>
  41a304:	str	w20, [x19, #116]
  41a308:	b	41a2ac <wcrtomb@plt+0x1535c>
  41a30c:	stp	x29, x30, [sp, #-48]!
  41a310:	mov	x29, sp
  41a314:	stp	x19, x20, [sp, #16]
  41a318:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  41a31c:	mov	w20, w0
  41a320:	str	x21, [sp, #32]
  41a324:	add	x19, x19, #0xaa0
  41a328:	mov	x21, x1
  41a32c:	cbz	w0, 41a35c <wcrtomb@plt+0x1540c>
  41a330:	ldr	w0, [x19, #132]
  41a334:	cmp	w0, w20
  41a338:	b.ne	41a35c <wcrtomb@plt+0x1540c>  // b.any
  41a33c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  41a340:	add	x0, x0, #0x41a
  41a344:	bl	436f10 <argp_usage@@Base+0x9a30>
  41a348:	ldp	x19, x20, [sp, #16]
  41a34c:	str	x0, [x21]
  41a350:	ldr	x21, [sp, #32]
  41a354:	ldp	x29, x30, [sp], #48
  41a358:	ret
  41a35c:	ldr	x0, [x19, #136]
  41a360:	cbz	x0, 41a370 <wcrtomb@plt+0x15420>
  41a364:	ldr	w0, [x19, #144]
  41a368:	cmp	w0, w20
  41a36c:	b.eq	41a38c <wcrtomb@plt+0x1543c>  // b.none
  41a370:	mov	w0, w20
  41a374:	bl	404e70 <getgrgid@plt>
  41a378:	cbz	x0, 41a394 <wcrtomb@plt+0x15444>
  41a37c:	ldr	x1, [x0]
  41a380:	add	x0, x19, #0x88
  41a384:	str	w20, [x19, #144]
  41a388:	bl	417c2c <wcrtomb@plt+0x12cdc>
  41a38c:	ldr	x0, [x19, #136]
  41a390:	b	41a344 <wcrtomb@plt+0x153f4>
  41a394:	str	w20, [x19, #132]
  41a398:	b	41a33c <wcrtomb@plt+0x153ec>
  41a39c:	stp	x29, x30, [sp, #-48]!
  41a3a0:	mov	x29, sp
  41a3a4:	stp	x19, x20, [sp, #16]
  41a3a8:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  41a3ac:	add	x19, x19, #0xaa0
  41a3b0:	str	x21, [sp, #32]
  41a3b4:	mov	x21, x1
  41a3b8:	mov	x20, x0
  41a3bc:	ldr	x1, [x19, #152]
  41a3c0:	cbz	x1, 41a3cc <wcrtomb@plt+0x1547c>
  41a3c4:	bl	404a30 <strcmp@plt>
  41a3c8:	cbz	w0, 41a430 <wcrtomb@plt+0x154e0>
  41a3cc:	ldr	x1, [x19, #120]
  41a3d0:	cbz	x1, 41a3f0 <wcrtomb@plt+0x154a0>
  41a3d4:	ldrb	w2, [x20]
  41a3d8:	ldrb	w0, [x1]
  41a3dc:	cmp	w2, w0
  41a3e0:	b.ne	41a3f0 <wcrtomb@plt+0x154a0>  // b.any
  41a3e4:	mov	x0, x20
  41a3e8:	bl	404a30 <strcmp@plt>
  41a3ec:	cbz	w0, 41a410 <wcrtomb@plt+0x154c0>
  41a3f0:	mov	x0, x20
  41a3f4:	bl	404730 <getpwnam@plt>
  41a3f8:	cbz	x0, 41a420 <wcrtomb@plt+0x154d0>
  41a3fc:	ldr	w1, [x0, #16]
  41a400:	str	w1, [x19, #128]
  41a404:	ldr	x1, [x0]
  41a408:	add	x0, x19, #0x78
  41a40c:	bl	417c2c <wcrtomb@plt+0x12cdc>
  41a410:	ldr	w0, [x19, #128]
  41a414:	str	w0, [x21]
  41a418:	mov	w0, #0x1                   	// #1
  41a41c:	b	41a430 <wcrtomb@plt+0x154e0>
  41a420:	add	x0, x19, #0x98
  41a424:	mov	x1, x20
  41a428:	bl	417c2c <wcrtomb@plt+0x12cdc>
  41a42c:	mov	w0, #0x0                   	// #0
  41a430:	ldp	x19, x20, [sp, #16]
  41a434:	ldr	x21, [sp, #32]
  41a438:	ldp	x29, x30, [sp], #48
  41a43c:	ret
  41a440:	stp	x29, x30, [sp, #-48]!
  41a444:	mov	x29, sp
  41a448:	stp	x19, x20, [sp, #16]
  41a44c:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  41a450:	add	x19, x19, #0xaa0
  41a454:	str	x21, [sp, #32]
  41a458:	mov	x21, x1
  41a45c:	mov	x20, x0
  41a460:	ldr	x1, [x19, #160]
  41a464:	cbz	x1, 41a470 <wcrtomb@plt+0x15520>
  41a468:	bl	404a30 <strcmp@plt>
  41a46c:	cbz	w0, 41a4d4 <wcrtomb@plt+0x15584>
  41a470:	ldr	x1, [x19, #136]
  41a474:	cbz	x1, 41a494 <wcrtomb@plt+0x15544>
  41a478:	ldrb	w2, [x20]
  41a47c:	ldrb	w0, [x1]
  41a480:	cmp	w2, w0
  41a484:	b.ne	41a494 <wcrtomb@plt+0x15544>  // b.any
  41a488:	mov	x0, x20
  41a48c:	bl	404a30 <strcmp@plt>
  41a490:	cbz	w0, 41a4b4 <wcrtomb@plt+0x15564>
  41a494:	mov	x0, x20
  41a498:	bl	4043b0 <getgrnam@plt>
  41a49c:	cbz	x0, 41a4c4 <wcrtomb@plt+0x15574>
  41a4a0:	ldr	w0, [x0, #16]
  41a4a4:	mov	x1, x20
  41a4a8:	str	w0, [x19, #144]
  41a4ac:	add	x0, x19, #0x88
  41a4b0:	bl	417c2c <wcrtomb@plt+0x12cdc>
  41a4b4:	ldr	w0, [x19, #144]
  41a4b8:	str	w0, [x21]
  41a4bc:	mov	w0, #0x1                   	// #1
  41a4c0:	b	41a4d4 <wcrtomb@plt+0x15584>
  41a4c4:	add	x0, x19, #0xa0
  41a4c8:	mov	x1, x20
  41a4cc:	bl	417c2c <wcrtomb@plt+0x12cdc>
  41a4d0:	mov	w0, #0x0                   	// #0
  41a4d4:	ldp	x19, x20, [sp, #16]
  41a4d8:	ldr	x21, [sp, #32]
  41a4dc:	ldp	x29, x30, [sp], #48
  41a4e0:	ret
  41a4e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41a4e8:	ldr	x0, [x0, #16]
  41a4ec:	cmp	x0, #0x0
  41a4f0:	cset	w0, ne  // ne = any
  41a4f4:	ret
  41a4f8:	stp	x29, x30, [sp, #-32]!
  41a4fc:	mov	x29, sp
  41a500:	str	x19, [sp, #16]
  41a504:	mov	x19, x0
  41a508:	bl	419490 <wcrtomb@plt+0x14540>
  41a50c:	str	wzr, [x0, #16]
  41a510:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41a514:	str	x19, [x0, #24]
  41a518:	ldr	x19, [sp, #16]
  41a51c:	ldr	x0, [x1, #16]
  41a520:	ldp	x29, x30, [sp], #32
  41a524:	add	x0, x0, #0x1
  41a528:	str	x0, [x1, #16]
  41a52c:	ret
  41a530:	stp	x29, x30, [sp, #-32]!
  41a534:	cmp	w0, #0x54
  41a538:	mov	x29, sp
  41a53c:	stp	x19, x20, [sp, #16]
  41a540:	mov	x19, x1
  41a544:	b.eq	41a57c <wcrtomb@plt+0x1562c>  // b.none
  41a548:	mov	w20, w0
  41a54c:	cmp	w0, #0x100
  41a550:	b.eq	41a5a4 <wcrtomb@plt+0x15654>  // b.none
  41a554:	cmp	w0, #0x43
  41a558:	b.ne	41a5b0 <wcrtomb@plt+0x15660>  // b.any
  41a55c:	bl	419490 <wcrtomb@plt+0x14540>
  41a560:	str	x19, [x0, #24]
  41a564:	mov	w1, #0x1                   	// #1
  41a568:	str	w1, [x0, #16]
  41a56c:	mov	w0, #0x0                   	// #0
  41a570:	ldp	x19, x20, [sp, #16]
  41a574:	ldp	x29, x30, [sp], #32
  41a578:	ret
  41a57c:	bl	419490 <wcrtomb@plt+0x14540>
  41a580:	stp	x19, xzr, [x0, #24]
  41a584:	mov	w1, #0x2                   	// #2
  41a588:	str	w1, [x0, #16]
  41a58c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41a590:	str	xzr, [x0, #48]
  41a594:	ldr	x0, [x1, #16]
  41a598:	add	x0, x0, #0x1
  41a59c:	str	x0, [x1, #16]
  41a5a0:	b	41a56c <wcrtomb@plt+0x1561c>
  41a5a4:	mov	x0, x1
  41a5a8:	bl	41a4f8 <wcrtomb@plt+0x155a8>
  41a5ac:	b	41a56c <wcrtomb@plt+0x1561c>
  41a5b0:	bl	419348 <wcrtomb@plt+0x143f8>
  41a5b4:	cbz	x0, 41a5d0 <wcrtomb@plt+0x15680>
  41a5b8:	bl	419490 <wcrtomb@plt+0x14540>
  41a5bc:	str	w20, [x0, #24]
  41a5c0:	mov	w1, #0x4                   	// #4
  41a5c4:	str	w1, [x0, #16]
  41a5c8:	str	x19, [x0, #32]
  41a5cc:	b	41a56c <wcrtomb@plt+0x1561c>
  41a5d0:	mov	w0, #0x7                   	// #7
  41a5d4:	b	41a570 <wcrtomb@plt+0x15620>
  41a5d8:	stp	x29, x30, [sp, #-16]!
  41a5dc:	mov	x0, #0x66                  	// #102
  41a5e0:	mov	x29, sp
  41a5e4:	bl	436d44 <argp_usage@@Base+0x9864>
  41a5e8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41a5ec:	add	x2, x1, #0xaa0
  41a5f0:	str	x0, [x2, #104]
  41a5f4:	mov	x0, #0x64                  	// #100
  41a5f8:	str	x0, [x2, #96]
  41a5fc:	ldr	x0, [x1, #2720]
  41a600:	cbz	x0, 41a61c <wcrtomb@plt+0x156cc>
  41a604:	mov	w2, #0x0                   	// #0
  41a608:	mov	x3, x0
  41a60c:	ldr	x0, [x0, #8]
  41a610:	cbnz	x0, 41a624 <wcrtomb@plt+0x156d4>
  41a614:	cbz	w2, 41a61c <wcrtomb@plt+0x156cc>
  41a618:	str	x3, [x1, #2720]
  41a61c:	ldp	x29, x30, [sp], #16
  41a620:	ret
  41a624:	mov	w2, #0x1                   	// #1
  41a628:	b	41a608 <wcrtomb@plt+0x156b8>
  41a62c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41a630:	ldr	x0, [x0, #2824]
  41a634:	b	404ae0 <free@plt>
  41a638:	stp	x29, x30, [sp, #-16]!
  41a63c:	mov	x29, sp
  41a640:	bl	419a14 <wcrtomb@plt+0x14ac4>
  41a644:	cbz	x0, 41a64c <wcrtomb@plt+0x156fc>
  41a648:	ldr	x0, [x0, #24]
  41a64c:	ldp	x29, x30, [sp], #16
  41a650:	ret
  41a654:	stp	x29, x30, [sp, #-48]!
  41a658:	mov	x29, sp
  41a65c:	stp	x19, x20, [sp, #16]
  41a660:	mov	w20, w1
  41a664:	mov	x19, x3
  41a668:	str	x21, [sp, #32]
  41a66c:	and	w21, w2, #0xff
  41a670:	bl	419798 <wcrtomb@plt+0x14848>
  41a674:	strb	w21, [x0, #36]
  41a678:	adrp	x4, 471000 <_obstack_memory_used@@Base+0x39380>
  41a67c:	add	x4, x4, #0xaa0
  41a680:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x36380>
  41a684:	str	w20, [x0, #40]
  41a688:	stp	xzr, xzr, [x0, #48]
  41a68c:	ldr	w5, [x2, #3956]
  41a690:	ldr	w2, [x4, #112]
  41a694:	ldr	w1, [x4, #8]
  41a698:	orr	w5, w5, w2
  41a69c:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  41a6a0:	cmp	w1, #0x2
  41a6a4:	str	x19, [x0, #64]
  41a6a8:	ldr	w2, [x2, #684]
  41a6ac:	cset	w1, eq  // eq = none
  41a6b0:	ldr	x6, [x4, #168]
  41a6b4:	stp	xzr, x6, [x0]
  41a6b8:	orr	w1, w2, w1, lsl #28
  41a6bc:	orr	w5, w5, w1
  41a6c0:	str	w5, [x0, #32]
  41a6c4:	cbz	x6, 41a6e0 <wcrtomb@plt+0x15790>
  41a6c8:	str	x0, [x6]
  41a6cc:	ldp	x19, x20, [sp, #16]
  41a6d0:	ldr	x21, [sp, #32]
  41a6d4:	str	x0, [x4, #168]
  41a6d8:	ldp	x29, x30, [sp], #48
  41a6dc:	ret
  41a6e0:	str	x0, [x4, #16]
  41a6e4:	b	41a6cc <wcrtomb@plt+0x1577c>
  41a6e8:	stp	x29, x30, [sp, #-32]!
  41a6ec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41a6f0:	mov	x29, sp
  41a6f4:	ldrb	w0, [x0, #648]
  41a6f8:	stp	x19, x20, [sp, #16]
  41a6fc:	cbz	w0, 41a798 <wcrtomb@plt+0x15848>
  41a700:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  41a704:	add	x19, x19, #0xaa0
  41a708:	mov	w0, #0x0                   	// #0
  41a70c:	bl	419a14 <wcrtomb@plt+0x14ac4>
  41a710:	mov	x20, x0
  41a714:	cbz	x0, 41a7fc <wcrtomb@plt+0x158ac>
  41a718:	ldr	w0, [x0, #16]
  41a71c:	cmp	w0, #0x1
  41a720:	b.eq	41a7d8 <wcrtomb@plt+0x15888>  // b.none
  41a724:	ldr	x0, [x19, #184]
  41a728:	bl	419988 <wcrtomb@plt+0x14a38>
  41a72c:	ldr	x0, [x20, #24]
  41a730:	bl	419798 <wcrtomb@plt+0x14848>
  41a734:	str	xzr, [x0]
  41a738:	ldr	w1, [x19, #176]
  41a73c:	str	w1, [x0, #40]
  41a740:	ldr	w1, [x19, #8]
  41a744:	ldr	w3, [x19, #112]
  41a748:	cmp	w1, #0x2
  41a74c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x36380>
  41a750:	cset	w2, eq  // eq = none
  41a754:	str	x0, [x19, #16]
  41a758:	ldr	w1, [x1, #3956]
  41a75c:	stp	xzr, xzr, [x0, #48]
  41a760:	orr	w1, w1, w3
  41a764:	adrp	x3, 472000 <argp_program_version_hook@@Base+0x250>
  41a768:	str	xzr, [x0, #64]
  41a76c:	str	x0, [x19, #168]
  41a770:	ldr	w3, [x3, #684]
  41a774:	str	x0, [x19, #184]
  41a778:	orr	w2, w3, w2, lsl #28
  41a77c:	orr	w1, w1, w2
  41a780:	str	w1, [x0, #32]
  41a784:	mov	w1, #0x1                   	// #1
  41a788:	strb	w1, [x0, #36]
  41a78c:	ldp	x19, x20, [sp, #16]
  41a790:	ldp	x29, x30, [sp], #32
  41a794:	ret
  41a798:	mov	w20, #0x0                   	// #0
  41a79c:	mov	w19, w20
  41a7a0:	mov	w0, #0x0                   	// #0
  41a7a4:	bl	419a14 <wcrtomb@plt+0x14ac4>
  41a7a8:	mov	x1, x0
  41a7ac:	cbz	x0, 41a818 <wcrtomb@plt+0x158c8>
  41a7b0:	ldr	w1, [x1, #16]
  41a7b4:	ldr	x0, [x0, #24]
  41a7b8:	cmp	w1, #0x1
  41a7bc:	b.eq	41a7ec <wcrtomb@plt+0x1589c>  // b.none
  41a7c0:	mov	w1, w19
  41a7c4:	mov	x3, #0x0                   	// #0
  41a7c8:	mov	w2, #0x1                   	// #1
  41a7cc:	mov	w20, w19
  41a7d0:	bl	41a654 <wcrtomb@plt+0x15704>
  41a7d4:	b	41a79c <wcrtomb@plt+0x1584c>
  41a7d8:	ldr	x0, [x20, #24]
  41a7dc:	bl	436f10 <argp_usage@@Base+0x9a30>
  41a7e0:	bl	418f44 <wcrtomb@plt+0x13ff4>
  41a7e4:	str	w0, [x19, #176]
  41a7e8:	b	41a708 <wcrtomb@plt+0x157b8>
  41a7ec:	bl	436f10 <argp_usage@@Base+0x9a30>
  41a7f0:	bl	418f44 <wcrtomb@plt+0x13ff4>
  41a7f4:	mov	w19, w0
  41a7f8:	b	41a7a0 <wcrtomb@plt+0x15850>
  41a7fc:	ldr	w1, [x19, #176]
  41a800:	cbz	w1, 41a78c <wcrtomb@plt+0x1583c>
  41a804:	mov	x3, #0x0                   	// #0
  41a808:	mov	w2, #0x0                   	// #0
  41a80c:	ldp	x19, x20, [sp, #16]
  41a810:	ldp	x29, x30, [sp], #32
  41a814:	b	41a654 <wcrtomb@plt+0x15704>
  41a818:	cmp	w20, w19
  41a81c:	b.eq	41a78c <wcrtomb@plt+0x1583c>  // b.none
  41a820:	mov	w1, w19
  41a824:	mov	x3, #0x0                   	// #0
  41a828:	mov	w2, #0x0                   	// #0
  41a82c:	b	41a80c <wcrtomb@plt+0x158bc>
  41a830:	sub	sp, sp, #0x230
  41a834:	stp	x29, x30, [sp]
  41a838:	mov	x29, sp
  41a83c:	stp	x21, x22, [sp, #32]
  41a840:	mov	x21, x1
  41a844:	stp	x19, x20, [sp, #16]
  41a848:	stp	x23, x24, [sp, #48]
  41a84c:	stp	x25, x26, [sp, #64]
  41a850:	mov	x26, x0
  41a854:	stp	x27, x28, [sp, #80]
  41a858:	bl	413bfc <wcrtomb@plt+0xecac>
  41a85c:	str	x0, [x21, #56]
  41a860:	bl	41409c <wcrtomb@plt+0xf14c>
  41a864:	cbz	x0, 41a8ec <wcrtomb@plt+0x1599c>
  41a868:	ldr	x23, [x21, #24]
  41a86c:	mov	x22, x0
  41a870:	mov	x0, #0x64                  	// #100
  41a874:	cmp	x23, #0x63
  41a878:	add	x20, x23, #0x64
  41a87c:	csel	x20, x20, x0, hi  // hi = pmore
  41a880:	add	x0, x20, #0x1
  41a884:	bl	436d44 <argp_usage@@Base+0x9864>
  41a888:	mov	x19, x0
  41a88c:	ldr	w1, [x21, #40]
  41a890:	str	w1, [sp, #116]
  41a894:	ldr	x1, [x21, #16]
  41a898:	bl	404c40 <strcpy@plt>
  41a89c:	add	x0, x19, x23
  41a8a0:	ldurb	w0, [x0, #-1]
  41a8a4:	cmp	w0, #0x2f
  41a8a8:	b.eq	41a8c0 <wcrtomb@plt+0x15970>  // b.none
  41a8ac:	add	x0, x23, #0x1
  41a8b0:	mov	w1, #0x2f                  	// #47
  41a8b4:	strb	w1, [x19, x23]
  41a8b8:	mov	x23, x0
  41a8bc:	strb	wzr, [x19, x0]
  41a8c0:	adrp	x28, 472000 <argp_program_version_hook@@Base+0x250>
  41a8c4:	add	x28, x28, #0x2cc
  41a8c8:	add	x0, sp, #0xe0
  41a8cc:	mov	x27, #0x0                   	// #0
  41a8d0:	str	xzr, [sp, #96]
  41a8d4:	str	x0, [sp, #120]
  41a8d8:	ldrb	w25, [x22]
  41a8dc:	cbnz	w25, 41a90c <wcrtomb@plt+0x159bc>
  41a8e0:	mov	x0, x19
  41a8e4:	bl	404ae0 <free@plt>
  41a8e8:	str	x27, [x21, #72]
  41a8ec:	ldp	x29, x30, [sp]
  41a8f0:	ldp	x19, x20, [sp, #16]
  41a8f4:	ldp	x21, x22, [sp, #32]
  41a8f8:	ldp	x23, x24, [sp, #48]
  41a8fc:	ldp	x25, x26, [sp, #64]
  41a900:	ldp	x27, x28, [sp, #80]
  41a904:	add	sp, sp, #0x230
  41a908:	ret
  41a90c:	mov	x0, x22
  41a910:	bl	404280 <strlen@plt>
  41a914:	str	x0, [sp, #104]
  41a918:	cmp	w25, #0x44
  41a91c:	b.ne	41a9c0 <wcrtomb@plt+0x15a70>  // b.any
  41a920:	add	x0, x23, x0
  41a924:	cmp	x0, x20
  41a928:	b.cc	41a950 <wcrtomb@plt+0x15a00>  // b.lo, b.ul, b.last
  41a92c:	lsl	x20, x20, #1
  41a930:	cbnz	x20, 41a938 <wcrtomb@plt+0x159e8>
  41a934:	bl	40d4bc <wcrtomb@plt+0x856c>
  41a938:	cmp	x0, x20
  41a93c:	b.cs	41a92c <wcrtomb@plt+0x159dc>  // b.hs, b.nlast
  41a940:	mov	x0, x19
  41a944:	add	x1, x20, #0x1
  41a948:	bl	436da4 <argp_usage@@Base+0x98c4>
  41a94c:	mov	x19, x0
  41a950:	add	x24, x22, #0x1
  41a954:	add	x0, x19, x23
  41a958:	mov	x1, x24
  41a95c:	bl	404c40 <strcpy@plt>
  41a960:	ldr	w1, [sp, #116]
  41a964:	mov	x3, x21
  41a968:	mov	x0, x19
  41a96c:	mov	w2, #0x0                   	// #0
  41a970:	bl	41a654 <wcrtomb@plt+0x15704>
  41a974:	mov	x25, x0
  41a978:	cbz	x27, 41a9d0 <wcrtomb@plt+0x15a80>
  41a97c:	ldr	x0, [sp, #96]
  41a980:	str	x25, [x0, #80]
  41a984:	add	x0, sp, #0x88
  41a988:	bl	421adc <wcrtomb@plt+0x1cb8c>
  41a98c:	ldr	w1, [x26, #408]
  41a990:	str	w1, [sp, #96]
  41a994:	str	x26, [sp, #528]
  41a998:	tbz	w1, #31, 41a9d8 <wcrtomb@plt+0x15a88>
  41a99c:	bl	404e10 <__errno_location@plt>
  41a9a0:	ldr	w1, [sp, #96]
  41a9a4:	neg	w1, w1
  41a9a8:	str	w1, [x0]
  41a9ac:	mov	x0, x19
  41a9b0:	bl	418bdc <wcrtomb@plt+0x13c8c>
  41a9b4:	add	x0, sp, #0x88
  41a9b8:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  41a9bc:	str	x25, [sp, #96]
  41a9c0:	ldr	x0, [sp, #104]
  41a9c4:	add	x24, x0, #0x1
  41a9c8:	add	x22, x22, x24
  41a9cc:	b	41a8d8 <wcrtomb@plt+0x15988>
  41a9d0:	mov	x27, x0
  41a9d4:	b	41a984 <wcrtomb@plt+0x15a34>
  41a9d8:	ldr	w2, [x28]
  41a9dc:	mov	x1, x24
  41a9e0:	mov	x0, x26
  41a9e4:	orr	w2, w2, #0x4000
  41a9e8:	bl	40b8bc <wcrtomb@plt+0x696c>
  41a9ec:	tbnz	w0, #31, 41a9ac <wcrtomb@plt+0x15a5c>
  41a9f0:	ldr	x1, [sp, #120]
  41a9f4:	str	w0, [sp, #544]
  41a9f8:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  41a9fc:	cbz	w0, 41aa0c <wcrtomb@plt+0x15abc>
  41aa00:	mov	x0, x19
  41aa04:	bl	418c90 <wcrtomb@plt+0x13d40>
  41aa08:	b	41a9b4 <wcrtomb@plt+0x15a64>
  41aa0c:	mov	x0, x19
  41aa10:	bl	436f10 <argp_usage@@Base+0x9a30>
  41aa14:	mov	x1, x25
  41aa18:	str	x0, [sp, #136]
  41aa1c:	add	x0, sp, #0x88
  41aa20:	bl	41a830 <wcrtomb@plt+0x158e0>
  41aa24:	add	x0, sp, #0x88
  41aa28:	bl	40ba04 <wcrtomb@plt+0x6ab4>
  41aa2c:	b	41a9b4 <wcrtomb@plt+0x15a64>
  41aa30:	ldp	x2, x1, [x0]
  41aa34:	cbz	x1, 41aa4c <wcrtomb@plt+0x15afc>
  41aa38:	str	x2, [x1]
  41aa3c:	ldr	x0, [x0]
  41aa40:	cbz	x0, 41aa58 <wcrtomb@plt+0x15b08>
  41aa44:	str	x1, [x0, #8]
  41aa48:	ret
  41aa4c:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  41aa50:	str	x2, [x3, #2736]
  41aa54:	b	41aa3c <wcrtomb@plt+0x15aec>
  41aa58:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41aa5c:	str	x1, [x0, #2888]
  41aa60:	b	41aa48 <wcrtomb@plt+0x15af8>
  41aa64:	stp	x29, x30, [sp, #-48]!
  41aa68:	mov	x29, sp
  41aa6c:	stp	x19, x20, [sp, #16]
  41aa70:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  41aa74:	add	x20, x20, #0xaa0
  41aa78:	str	x21, [sp, #32]
  41aa7c:	bl	419798 <wcrtomb@plt+0x14848>
  41aa80:	mov	x19, x0
  41aa84:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41aa88:	mov	x21, x0
  41aa8c:	ldrb	w1, [x0, #688]
  41aa90:	cbz	w1, 41aaa8 <wcrtomb@plt+0x15b58>
  41aa94:	ldr	x4, [x20, #16]
  41aa98:	mov	x0, x4
  41aa9c:	bl	41aa30 <wcrtomb@plt+0x15ae0>
  41aaa0:	mov	x0, x4
  41aaa4:	bl	419988 <wcrtomb@plt+0x14a38>
  41aaa8:	ldr	x0, [x20, #16]
  41aaac:	stp	x0, xzr, [x19]
  41aab0:	ldr	x0, [x20, #168]
  41aab4:	str	x19, [x20, #16]
  41aab8:	cbnz	x0, 41aac0 <wcrtomb@plt+0x15b70>
  41aabc:	str	x19, [x20, #168]
  41aac0:	ldr	w0, [x20, #8]
  41aac4:	ldr	w2, [x20, #112]
  41aac8:	cmp	w0, #0x2
  41aacc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  41aad0:	cset	w1, eq  // eq = none
  41aad4:	str	wzr, [x19, #40]
  41aad8:	ldr	w0, [x0, #3956]
  41aadc:	stp	xzr, xzr, [x19, #48]
  41aae0:	orr	w0, w0, w2
  41aae4:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  41aae8:	str	xzr, [x19, #64]
  41aaec:	ldr	w2, [x2, #684]
  41aaf0:	orr	w1, w2, w1, lsl #28
  41aaf4:	orr	w0, w0, w1
  41aaf8:	str	w0, [x19, #32]
  41aafc:	mov	w0, #0x1                   	// #1
  41ab00:	strb	w0, [x19, #36]
  41ab04:	strb	w0, [x21, #688]
  41ab08:	ldp	x19, x20, [sp, #16]
  41ab0c:	ldr	x21, [sp, #32]
  41ab10:	ldp	x29, x30, [sp], #48
  41ab14:	ret
  41ab18:	stp	x29, x30, [sp, #-64]!
  41ab1c:	mov	x29, sp
  41ab20:	stp	x19, x20, [sp, #16]
  41ab24:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  41ab28:	add	x20, x20, #0xaa0
  41ab2c:	stp	x21, x22, [sp, #32]
  41ab30:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  41ab34:	mov	x21, x0
  41ab38:	add	x22, x22, #0x2b0
  41ab3c:	str	x23, [sp, #48]
  41ab40:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  41ab44:	add	x23, x23, #0x288
  41ab48:	ldr	x0, [x20, #16]
  41ab4c:	cbz	x0, 41ab6c <wcrtomb@plt+0x15c1c>
  41ab50:	ldr	x1, [x0, #16]
  41ab54:	ldrb	w1, [x1]
  41ab58:	cbnz	w1, 41ab74 <wcrtomb@plt+0x15c24>
  41ab5c:	ldr	w0, [x0, #40]
  41ab60:	bl	418a9c <wcrtomb@plt+0x13b4c>
  41ab64:	str	xzr, [x20, #16]
  41ab68:	str	xzr, [x20, #168]
  41ab6c:	mov	w0, #0x1                   	// #1
  41ab70:	b	41abe8 <wcrtomb@plt+0x15c98>
  41ab74:	mov	x0, x21
  41ab78:	bl	4199c0 <wcrtomb@plt+0x14a70>
  41ab7c:	mov	x19, x0
  41ab80:	ldrb	w0, [x22]
  41ab84:	cbz	w0, 41ab98 <wcrtomb@plt+0x15c48>
  41ab88:	ldr	x0, [x20, #16]
  41ab8c:	cmp	x0, x19
  41ab90:	b.ne	41ac08 <wcrtomb@plt+0x15cb8>  // b.any
  41ab94:	strb	wzr, [x22]
  41ab98:	cbz	x19, 41ac08 <wcrtomb@plt+0x15cb8>
  41ab9c:	ldr	x1, [x19, #24]
  41aba0:	ldr	x0, [x19, #48]
  41aba4:	ldrb	w1, [x21, x1]
  41aba8:	cmp	w1, #0x2f
  41abac:	b.ne	41abc0 <wcrtomb@plt+0x15c70>  // b.any
  41abb0:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41abb4:	ldr	w1, [x1, #684]
  41abb8:	cbz	w1, 41abc0 <wcrtomb@plt+0x15c70>
  41abbc:	cbnz	x0, 41abc8 <wcrtomb@plt+0x15c78>
  41abc0:	add	x0, x0, #0x1
  41abc4:	str	x0, [x19, #48]
  41abc8:	ldr	w0, [x19, #40]
  41abcc:	bl	418a9c <wcrtomb@plt+0x13b4c>
  41abd0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41abd4:	ldr	x1, [x19, #48]
  41abd8:	ldr	x0, [x0, #768]
  41abdc:	cbnz	x0, 41abfc <wcrtomb@plt+0x15cac>
  41abe0:	cmp	x1, #0x0
  41abe4:	cset	w0, ne  // ne = any
  41abe8:	ldp	x19, x20, [sp, #16]
  41abec:	ldp	x21, x22, [sp, #32]
  41abf0:	ldr	x23, [sp, #48]
  41abf4:	ldp	x29, x30, [sp], #64
  41abf8:	ret
  41abfc:	cmp	x1, x0
  41ac00:	cset	w0, eq  // eq = none
  41ac04:	b	41abe8 <wcrtomb@plt+0x15c98>
  41ac08:	ldrb	w0, [x23]
  41ac0c:	cbnz	w0, 41ac18 <wcrtomb@plt+0x15cc8>
  41ac10:	mov	w0, #0x0                   	// #0
  41ac14:	b	41abe8 <wcrtomb@plt+0x15c98>
  41ac18:	ldr	x0, [x20, #16]
  41ac1c:	ldr	x0, [x0, #48]
  41ac20:	cbz	x0, 41ac10 <wcrtomb@plt+0x15cc0>
  41ac24:	bl	41a6e8 <wcrtomb@plt+0x15798>
  41ac28:	ldr	x0, [x20, #16]
  41ac2c:	ldr	x0, [x0, #48]
  41ac30:	cbz	x0, 41ab48 <wcrtomb@plt+0x15bf8>
  41ac34:	b	41ac10 <wcrtomb@plt+0x15cc0>
  41ac38:	stp	x29, x30, [sp, #-48]!
  41ac3c:	mov	x29, sp
  41ac40:	stp	x19, x20, [sp, #16]
  41ac44:	ldr	x20, [x0, #8]
  41ac48:	str	x21, [sp, #32]
  41ac4c:	cbz	x20, 41acc8 <wcrtomb@plt+0x15d78>
  41ac50:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41ac54:	ldr	x21, [x1, #768]
  41ac58:	cbz	x21, 41acc8 <wcrtomb@plt+0x15d78>
  41ac5c:	ldrb	w19, [x0, #16]
  41ac60:	cbnz	w19, 41acc8 <wcrtomb@plt+0x15d78>
  41ac64:	mov	x0, x20
  41ac68:	bl	404280 <strlen@plt>
  41ac6c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41ac70:	ldr	x1, [x1, #2736]
  41ac74:	cbnz	x1, 41ac90 <wcrtomb@plt+0x15d40>
  41ac78:	mov	w19, #0x1                   	// #1
  41ac7c:	mov	w0, w19
  41ac80:	ldp	x19, x20, [sp, #16]
  41ac84:	ldr	x21, [sp, #32]
  41ac88:	ldp	x29, x30, [sp], #48
  41ac8c:	ret
  41ac90:	ldr	x2, [x1, #16]
  41ac94:	ldrb	w2, [x2]
  41ac98:	cbz	w2, 41aca8 <wcrtomb@plt+0x15d58>
  41ac9c:	ldr	x2, [x1, #48]
  41aca0:	cmp	x21, x2
  41aca4:	b.hi	41ac7c <wcrtomb@plt+0x15d2c>  // b.pmore
  41aca8:	ldr	x2, [x1, #24]
  41acac:	cmp	x2, x0
  41acb0:	b.hi	41acc0 <wcrtomb@plt+0x15d70>  // b.pmore
  41acb4:	ldrb	w2, [x20, x2]
  41acb8:	cmp	w2, #0x2f
  41acbc:	b.eq	41ac7c <wcrtomb@plt+0x15d2c>  // b.none
  41acc0:	ldr	x1, [x1]
  41acc4:	b	41ac74 <wcrtomb@plt+0x15d24>
  41acc8:	mov	w19, #0x0                   	// #0
  41accc:	b	41ac7c <wcrtomb@plt+0x15d2c>
  41acd0:	stp	x29, x30, [sp, #-64]!
  41acd4:	mov	x29, sp
  41acd8:	stp	x21, x22, [sp, #32]
  41acdc:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  41ace0:	add	x21, x21, #0xaa0
  41ace4:	stp	x19, x20, [sp, #16]
  41ace8:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  41acec:	add	x22, x22, #0xd88
  41acf0:	ldr	x19, [x21, #16]
  41acf4:	stp	x23, x24, [sp, #48]
  41acf8:	adrp	x23, 449000 <_obstack_memory_used@@Base+0x11380>
  41acfc:	add	x23, x23, #0x1e4
  41ad00:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  41ad04:	cbnz	x19, 41ad50 <wcrtomb@plt+0x15e00>
  41ad08:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41ad0c:	str	xzr, [x21, #16]
  41ad10:	str	xzr, [x21, #168]
  41ad14:	ldrb	w0, [x0, #648]
  41ad18:	cbz	w0, 41ad3c <wcrtomb@plt+0x15dec>
  41ad1c:	adrp	x20, 449000 <_obstack_memory_used@@Base+0x11380>
  41ad20:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  41ad24:	add	x20, x20, #0x1cb
  41ad28:	add	x21, x21, #0xd88
  41ad2c:	mov	w0, #0x1                   	// #1
  41ad30:	bl	41a638 <wcrtomb@plt+0x156e8>
  41ad34:	mov	x19, x0
  41ad38:	cbnz	x0, 41ade8 <wcrtomb@plt+0x15e98>
  41ad3c:	ldp	x19, x20, [sp, #16]
  41ad40:	ldp	x21, x22, [sp, #32]
  41ad44:	ldp	x23, x24, [sp, #48]
  41ad48:	ldp	x29, x30, [sp], #64
  41ad4c:	ret
  41ad50:	ldr	x1, [x24, #768]
  41ad54:	ldr	x0, [x19, #48]
  41ad58:	cbnz	x1, 41add0 <wcrtomb@plt+0x15e80>
  41ad5c:	cmp	x0, #0x0
  41ad60:	cset	w0, eq  // eq = none
  41ad64:	cbz	w0, 41adc8 <wcrtomb@plt+0x15e78>
  41ad68:	ldr	x0, [x19, #16]
  41ad6c:	ldrb	w1, [x0]
  41ad70:	cbz	w1, 41adc8 <wcrtomb@plt+0x15e78>
  41ad74:	bl	4197e4 <wcrtomb@plt+0x14894>
  41ad78:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41ad7c:	ldr	x0, [x0, #1016]
  41ad80:	cbz	x0, 41ad88 <wcrtomb@plt+0x15e38>
  41ad84:	blr	x0
  41ad88:	ldr	x0, [x19, #48]
  41ad8c:	mov	w2, #0x5                   	// #5
  41ad90:	cbnz	x0, 41addc <wcrtomb@plt+0x15e8c>
  41ad94:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41ad98:	add	x1, x1, #0x1cb
  41ad9c:	bl	404d00 <dcgettext@plt>
  41ada0:	mov	x20, x0
  41ada4:	ldr	x0, [x19, #16]
  41ada8:	bl	436084 <argp_usage@@Base+0x8ba4>
  41adac:	mov	x3, x0
  41adb0:	mov	x2, x20
  41adb4:	mov	w0, #0x0                   	// #0
  41adb8:	mov	w1, #0x0                   	// #0
  41adbc:	bl	4042e0 <error@plt>
  41adc0:	mov	w0, #0x2                   	// #2
  41adc4:	str	w0, [x22]
  41adc8:	ldr	x19, [x19]
  41adcc:	b	41ad04 <wcrtomb@plt+0x15db4>
  41add0:	cmp	x1, x0
  41add4:	cset	w0, hi  // hi = pmore
  41add8:	b	41ad64 <wcrtomb@plt+0x15e14>
  41addc:	mov	x1, x23
  41ade0:	mov	x0, #0x0                   	// #0
  41ade4:	b	41ad9c <wcrtomb@plt+0x15e4c>
  41ade8:	bl	4197e4 <wcrtomb@plt+0x14894>
  41adec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41adf0:	ldr	x0, [x0, #1016]
  41adf4:	cbz	x0, 41adfc <wcrtomb@plt+0x15eac>
  41adf8:	blr	x0
  41adfc:	mov	x1, x20
  41ae00:	mov	w2, #0x5                   	// #5
  41ae04:	mov	x0, #0x0                   	// #0
  41ae08:	bl	404d00 <dcgettext@plt>
  41ae0c:	mov	x22, x0
  41ae10:	mov	x0, x19
  41ae14:	bl	436084 <argp_usage@@Base+0x8ba4>
  41ae18:	mov	x3, x0
  41ae1c:	mov	x2, x22
  41ae20:	mov	w0, #0x0                   	// #0
  41ae24:	mov	w1, #0x0                   	// #0
  41ae28:	bl	4042e0 <error@plt>
  41ae2c:	mov	w0, #0x2                   	// #2
  41ae30:	str	w0, [x21]
  41ae34:	b	41ad2c <wcrtomb@plt+0x15ddc>
  41ae38:	stp	x29, x30, [sp, #-32]!
  41ae3c:	mov	x29, sp
  41ae40:	stp	x19, x20, [sp, #16]
  41ae44:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  41ae48:	add	x19, x19, #0xaa0
  41ae4c:	ldr	x0, [x19, #16]
  41ae50:	cbz	x0, 41aed8 <wcrtomb@plt+0x15f88>
  41ae54:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41ae58:	ldr	x1, [x1, #768]
  41ae5c:	ldr	x2, [x0, #48]
  41ae60:	cbnz	x1, 41aee4 <wcrtomb@plt+0x15f94>
  41ae64:	cmp	x2, #0x0
  41ae68:	cset	w2, ne  // ne = any
  41ae6c:	cbnz	w2, 41aed8 <wcrtomb@plt+0x15f88>
  41ae70:	ldr	x0, [x0]
  41ae74:	cbnz	x0, 41ae5c <wcrtomb@plt+0x15f0c>
  41ae78:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41ae7c:	ldr	w0, [x0, #652]
  41ae80:	cbz	w0, 41aea8 <wcrtomb@plt+0x15f58>
  41ae84:	mov	w2, #0x5                   	// #5
  41ae88:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41ae8c:	mov	x0, #0x0                   	// #0
  41ae90:	add	x1, x1, #0x211
  41ae94:	bl	404d00 <dcgettext@plt>
  41ae98:	mov	x2, x0
  41ae9c:	mov	w1, #0x0                   	// #0
  41aea0:	mov	w0, #0x0                   	// #0
  41aea4:	bl	4042e0 <error@plt>
  41aea8:	mov	w0, #0x1                   	// #1
  41aeac:	bl	421c04 <wcrtomb@plt+0x1ccb4>
  41aeb0:	ldr	x20, [x19, #16]
  41aeb4:	cbz	x20, 41aec4 <wcrtomb@plt+0x15f74>
  41aeb8:	ldr	x0, [x20, #16]
  41aebc:	bl	4197e4 <wcrtomb@plt+0x14894>
  41aec0:	cbz	w0, 41aef0 <wcrtomb@plt+0x15fa0>
  41aec4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41aec8:	str	xzr, [x19, #16]
  41aecc:	str	xzr, [x19, #168]
  41aed0:	ldrb	w0, [x0, #648]
  41aed4:	cbnz	w0, 41aef8 <wcrtomb@plt+0x15fa8>
  41aed8:	ldp	x19, x20, [sp, #16]
  41aedc:	ldp	x29, x30, [sp], #32
  41aee0:	ret
  41aee4:	cmp	x1, x2
  41aee8:	cset	w2, ls  // ls = plast
  41aeec:	b	41ae6c <wcrtomb@plt+0x15f1c>
  41aef0:	ldr	x20, [x20]
  41aef4:	b	41aeb4 <wcrtomb@plt+0x15f64>
  41aef8:	mov	w0, #0x1                   	// #1
  41aefc:	bl	41a638 <wcrtomb@plt+0x156e8>
  41af00:	cbz	x0, 41aed8 <wcrtomb@plt+0x15f88>
  41af04:	bl	4197e4 <wcrtomb@plt+0x14894>
  41af08:	cbz	w0, 41aef8 <wcrtomb@plt+0x15fa8>
  41af0c:	b	41aed8 <wcrtomb@plt+0x15f88>
  41af10:	sub	sp, sp, #0x200
  41af14:	stp	x29, x30, [sp]
  41af18:	mov	x29, sp
  41af1c:	stp	x19, x20, [sp, #16]
  41af20:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  41af24:	add	x20, x20, #0xaa0
  41af28:	stp	x21, x22, [sp, #32]
  41af2c:	stp	x23, x24, [sp, #48]
  41af30:	stp	x25, x26, [sp, #64]
  41af34:	bl	41a6e8 <wcrtomb@plt+0x15798>
  41af38:	ldr	x0, [x20, #16]
  41af3c:	cbnz	x0, 41af58 <wcrtomb@plt+0x16008>
  41af40:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41af44:	mov	x3, #0x0                   	// #0
  41af48:	add	x0, x0, #0xc29
  41af4c:	mov	w2, #0x0                   	// #0
  41af50:	mov	w1, #0x0                   	// #0
  41af54:	bl	41a654 <wcrtomb@plt+0x15704>
  41af58:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  41af5c:	ldr	x0, [x24, #840]
  41af60:	cbz	x0, 41afe0 <wcrtomb@plt+0x16090>
  41af64:	bl	418a40 <wcrtomb@plt+0x13af0>
  41af68:	cbz	w0, 41afdc <wcrtomb@plt+0x1608c>
  41af6c:	cmp	w0, #0x1
  41af70:	b.ne	41afbc <wcrtomb@plt+0x1606c>  // b.any
  41af74:	ldr	x0, [x20, #16]
  41af78:	ldr	w0, [x0, #40]
  41af7c:	cbnz	w0, 41afdc <wcrtomb@plt+0x1608c>
  41af80:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41af84:	ldr	x0, [x0, #1016]
  41af88:	cbz	x0, 41af90 <wcrtomb@plt+0x16040>
  41af8c:	blr	x0
  41af90:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41af94:	add	x1, x1, #0x228
  41af98:	mov	w2, #0x5                   	// #5
  41af9c:	mov	x0, #0x0                   	// #0
  41afa0:	bl	404d00 <dcgettext@plt>
  41afa4:	mov	x2, x0
  41afa8:	mov	w1, #0x0                   	// #0
  41afac:	mov	w0, #0x0                   	// #0
  41afb0:	bl	4042e0 <error@plt>
  41afb4:	mov	w0, #0x2                   	// #2
  41afb8:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  41afbc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41afc0:	ldr	x0, [x0, #1016]
  41afc4:	cbz	x0, 41afcc <wcrtomb@plt+0x1607c>
  41afc8:	blr	x0
  41afcc:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41afd0:	mov	w2, #0x5                   	// #5
  41afd4:	add	x1, x1, #0x272
  41afd8:	b	41af9c <wcrtomb@plt+0x1604c>
  41afdc:	bl	414434 <wcrtomb@plt+0xf4e4>
  41afe0:	ldr	x19, [x20, #16]
  41afe4:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  41afe8:	add	x23, sp, #0xb0
  41afec:	add	x22, x22, #0x2cc
  41aff0:	mov	w21, #0x0                   	// #0
  41aff4:	adrp	x25, 46e000 <_obstack_memory_used@@Base+0x36380>
  41aff8:	cbnz	x19, 41b09c <wcrtomb@plt+0x1614c>
  41affc:	ldr	x0, [x20, #16]
  41b000:	mov	w1, w21
  41b004:	adrp	x2, 419000 <wcrtomb@plt+0x140b0>
  41b008:	add	x2, x2, #0x514
  41b00c:	bl	419384 <wcrtomb@plt+0x14434>
  41b010:	mov	x21, x0
  41b014:	cbnz	x21, 41b174 <wcrtomb@plt+0x16224>
  41b018:	mov	x4, #0x0                   	// #0
  41b01c:	adrp	x3, 419000 <wcrtomb@plt+0x140b0>
  41b020:	adrp	x2, 419000 <wcrtomb@plt+0x140b0>
  41b024:	add	x3, x3, #0x4f0
  41b028:	add	x2, x2, #0x88c
  41b02c:	mov	x1, #0x0                   	// #0
  41b030:	str	x0, [x20, #16]
  41b034:	mov	x0, #0x0                   	// #0
  41b038:	bl	430500 <argp_usage@@Base+0x3020>
  41b03c:	mov	x23, x0
  41b040:	ldr	x19, [x20, #16]
  41b044:	mov	w25, #0x0                   	// #0
  41b048:	cbnz	x19, 41b184 <wcrtomb@plt+0x16234>
  41b04c:	mov	x0, x23
  41b050:	str	x21, [x20, #168]
  41b054:	bl	430660 <argp_usage@@Base+0x3180>
  41b058:	ldr	x0, [x20, #16]
  41b05c:	mov	w1, w25
  41b060:	adrp	x2, 419000 <wcrtomb@plt+0x140b0>
  41b064:	add	x2, x2, #0x934
  41b068:	bl	419384 <wcrtomb@plt+0x14434>
  41b06c:	mov	x1, x0
  41b070:	cbnz	x1, 41b234 <wcrtomb@plt+0x162e4>
  41b074:	ldr	x1, [x24, #840]
  41b078:	str	x0, [x20, #16]
  41b07c:	cbnz	x1, 41b248 <wcrtomb@plt+0x162f8>
  41b080:	ldp	x29, x30, [sp]
  41b084:	ldp	x19, x20, [sp, #16]
  41b088:	ldp	x21, x22, [sp, #32]
  41b08c:	ldp	x23, x24, [sp, #48]
  41b090:	ldp	x25, x26, [sp, #64]
  41b094:	add	sp, sp, #0x200
  41b098:	ret
  41b09c:	ldr	x0, [x19, #48]
  41b0a0:	cbnz	x0, 41b0e8 <wcrtomb@plt+0x16198>
  41b0a4:	ldr	x0, [x19, #56]
  41b0a8:	cbnz	x0, 41b0e8 <wcrtomb@plt+0x16198>
  41b0ac:	ldr	w0, [x19, #32]
  41b0b0:	tbnz	w0, #28, 41b0e8 <wcrtomb@plt+0x16198>
  41b0b4:	ldr	w0, [x19, #40]
  41b0b8:	bl	418a9c <wcrtomb@plt+0x13b4c>
  41b0bc:	ldr	x0, [x19, #16]
  41b0c0:	ldrb	w0, [x0]
  41b0c4:	cbz	w0, 41b0e8 <wcrtomb@plt+0x16198>
  41b0c8:	add	x0, sp, #0x58
  41b0cc:	bl	421adc <wcrtomb@plt+0x1cb8c>
  41b0d0:	ldr	x0, [x19, #16]
  41b0d4:	mov	x1, x23
  41b0d8:	bl	4186c8 <wcrtomb@plt+0x13778>
  41b0dc:	cbz	w0, 41b0f4 <wcrtomb@plt+0x161a4>
  41b0e0:	ldr	x0, [x19, #16]
  41b0e4:	bl	418c90 <wcrtomb@plt+0x13d40>
  41b0e8:	add	w21, w21, #0x1
  41b0ec:	ldr	x19, [x19]
  41b0f0:	b	41aff8 <wcrtomb@plt+0x160a8>
  41b0f4:	ldr	w0, [sp, #192]
  41b0f8:	and	w0, w0, #0xf000
  41b0fc:	cmp	w0, #0x4, lsl #12
  41b100:	b.ne	41b124 <wcrtomb@plt+0x161d4>  // b.any
  41b104:	ldr	w0, [x25, #2264]
  41b108:	ldr	x1, [x19, #16]
  41b10c:	ldr	w2, [x22]
  41b110:	orr	w2, w2, #0x4000
  41b114:	bl	4048b0 <__openat_2@plt>
  41b118:	tbz	w0, #31, 41b130 <wcrtomb@plt+0x161e0>
  41b11c:	ldr	x0, [x19, #16]
  41b120:	bl	418bdc <wcrtomb@plt+0x13c8c>
  41b124:	add	x0, sp, #0x58
  41b128:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  41b12c:	b	41b0e8 <wcrtomb@plt+0x16198>
  41b130:	mov	x1, x23
  41b134:	str	w0, [sp, #496]
  41b138:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  41b13c:	cbz	w0, 41b14c <wcrtomb@plt+0x161fc>
  41b140:	ldr	x0, [x19, #16]
  41b144:	bl	418c90 <wcrtomb@plt+0x13d40>
  41b148:	b	41b124 <wcrtomb@plt+0x161d4>
  41b14c:	ldr	x0, [x19, #16]
  41b150:	bl	436f10 <argp_usage@@Base+0x9a30>
  41b154:	str	x0, [sp, #88]
  41b158:	ldr	x0, [x19, #48]
  41b15c:	mov	x1, x19
  41b160:	add	x0, x0, #0x1
  41b164:	str	x0, [x19, #48]
  41b168:	add	x0, sp, #0x58
  41b16c:	bl	41a830 <wcrtomb@plt+0x158e0>
  41b170:	b	41b124 <wcrtomb@plt+0x161d4>
  41b174:	str	x19, [x21, #8]
  41b178:	mov	x19, x21
  41b17c:	ldr	x21, [x21]
  41b180:	b	41b014 <wcrtomb@plt+0x160c4>
  41b184:	ldr	w0, [x19, #40]
  41b188:	ldr	x1, [x19, #16]
  41b18c:	ldr	x26, [x19]
  41b190:	bl	417fb8 <wcrtomb@plt+0x13068>
  41b194:	str	x0, [x19, #88]
  41b198:	cbz	x21, 41b1e8 <wcrtomb@plt+0x16298>
  41b19c:	mov	x1, x19
  41b1a0:	mov	x0, x23
  41b1a4:	bl	4302d8 <argp_usage@@Base+0x2df8>
  41b1a8:	mov	x22, x0
  41b1ac:	cbz	x0, 41b1e8 <wcrtomb@plt+0x16298>
  41b1b0:	ldr	x0, [x19, #64]
  41b1b4:	cbnz	x0, 41b200 <wcrtomb@plt+0x162b0>
  41b1b8:	ldr	x0, [x22, #72]
  41b1bc:	cbz	x0, 41b1c8 <wcrtomb@plt+0x16278>
  41b1c0:	mov	x1, x19
  41b1c4:	bl	419894 <wcrtomb@plt+0x14944>
  41b1c8:	mov	x1, x19
  41b1cc:	sub	w25, w25, #0x1
  41b1d0:	mov	x0, x23
  41b1d4:	bl	4309f4 <argp_usage@@Base+0x3514>
  41b1d8:	mov	x0, x22
  41b1dc:	bl	41aa30 <wcrtomb@plt+0x15ae0>
  41b1e0:	mov	x0, x22
  41b1e4:	bl	419988 <wcrtomb@plt+0x14a38>
  41b1e8:	str	xzr, [x19, #48]
  41b1ec:	mov	x1, x19
  41b1f0:	mov	x0, x23
  41b1f4:	bl	4309b4 <argp_usage@@Base+0x34d4>
  41b1f8:	cbnz	x0, 41b228 <wcrtomb@plt+0x162d8>
  41b1fc:	bl	40d4bc <wcrtomb@plt+0x856c>
  41b200:	ldr	x0, [x19, #72]
  41b204:	cbz	x0, 41b210 <wcrtomb@plt+0x162c0>
  41b208:	mov	x1, x22
  41b20c:	bl	419894 <wcrtomb@plt+0x14944>
  41b210:	mov	x0, x19
  41b214:	bl	41aa30 <wcrtomb@plt+0x15ae0>
  41b218:	mov	x0, x19
  41b21c:	bl	419988 <wcrtomb@plt+0x14a38>
  41b220:	mov	x19, x26
  41b224:	b	41b048 <wcrtomb@plt+0x160f8>
  41b228:	add	w25, w25, #0x1
  41b22c:	mov	x21, x19
  41b230:	b	41b220 <wcrtomb@plt+0x162d0>
  41b234:	str	x19, [x1, #8]
  41b238:	mov	x19, x1
  41b23c:	ldr	x1, [x1]
  41b240:	b	41b070 <wcrtomb@plt+0x16120>
  41b244:	ldr	x0, [x0]
  41b248:	cbz	x0, 41b080 <wcrtomb@plt+0x16130>
  41b24c:	ldr	x1, [x0, #16]
  41b250:	ldrb	w1, [x1]
  41b254:	cbz	w1, 41b244 <wcrtomb@plt+0x162f4>
  41b258:	ldr	x0, [x0, #56]
  41b25c:	bl	4140d4 <wcrtomb@plt+0xf184>
  41b260:	b	41b080 <wcrtomb@plt+0x16130>
  41b264:	stp	x29, x30, [sp, #-48]!
  41b268:	mov	x29, sp
  41b26c:	stp	x19, x20, [sp, #16]
  41b270:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  41b274:	add	x20, x20, #0xaa0
  41b278:	stp	x21, x22, [sp, #32]
  41b27c:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  41b280:	mov	x21, x0
  41b284:	add	x22, x22, #0x288
  41b288:	mov	x0, x21
  41b28c:	bl	4199c0 <wcrtomb@plt+0x14a70>
  41b290:	mov	x19, x0
  41b294:	cbnz	x0, 41b2c0 <wcrtomb@plt+0x16370>
  41b298:	ldrb	w0, [x22]
  41b29c:	cbz	w0, 41b2c0 <wcrtomb@plt+0x16370>
  41b2a0:	ldr	x0, [x20, #16]
  41b2a4:	cbz	x0, 41b2c0 <wcrtomb@plt+0x16370>
  41b2a8:	ldr	x0, [x0, #48]
  41b2ac:	cbz	x0, 41b2c0 <wcrtomb@plt+0x16370>
  41b2b0:	bl	41a6e8 <wcrtomb@plt+0x15798>
  41b2b4:	ldr	x0, [x20, #16]
  41b2b8:	ldr	x0, [x0, #48]
  41b2bc:	cbz	x0, 41b288 <wcrtomb@plt+0x16338>
  41b2c0:	mov	x0, x19
  41b2c4:	ldp	x19, x20, [sp, #16]
  41b2c8:	ldp	x21, x22, [sp, #32]
  41b2cc:	ldp	x29, x30, [sp], #48
  41b2d0:	ret
  41b2d4:	stp	x29, x30, [sp, #-32]!
  41b2d8:	mov	x29, sp
  41b2dc:	str	x19, [sp, #16]
  41b2e0:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  41b2e4:	ldr	x0, [x19, #24]
  41b2e8:	cbnz	x0, 41b2f8 <wcrtomb@plt+0x163a8>
  41b2ec:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41b2f0:	ldr	x0, [x0, #2736]
  41b2f4:	str	x0, [x19, #24]
  41b2f8:	add	x19, x19, #0x18
  41b2fc:	ldr	x0, [x19]
  41b300:	cbz	x0, 41b32c <wcrtomb@plt+0x163dc>
  41b304:	ldr	x1, [x0, #48]
  41b308:	cbnz	x1, 41b338 <wcrtomb@plt+0x163e8>
  41b30c:	ldr	x1, [x0, #16]
  41b310:	ldrb	w1, [x1]
  41b314:	cbz	w1, 41b338 <wcrtomb@plt+0x163e8>
  41b318:	mov	x1, #0x1                   	// #1
  41b31c:	str	x1, [x0, #48]
  41b320:	ldr	w0, [x0, #40]
  41b324:	bl	418a9c <wcrtomb@plt+0x13b4c>
  41b328:	ldr	x0, [x19]
  41b32c:	ldr	x19, [sp, #16]
  41b330:	ldp	x29, x30, [sp], #32
  41b334:	ret
  41b338:	ldr	x0, [x0]
  41b33c:	str	x0, [x19]
  41b340:	b	41b2fc <wcrtomb@plt+0x163ac>
  41b344:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41b348:	str	xzr, [x0, #24]
  41b34c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41b350:	ldr	x0, [x0, #2736]
  41b354:	cbnz	x0, 41b35c <wcrtomb@plt+0x1640c>
  41b358:	ret
  41b35c:	str	xzr, [x0, #48]
  41b360:	ldr	x0, [x0]
  41b364:	b	41b354 <wcrtomb@plt+0x16404>
  41b368:	stp	x29, x30, [sp, #-64]!
  41b36c:	mov	x29, sp
  41b370:	stp	x19, x20, [sp, #16]
  41b374:	stp	x21, x22, [sp, #32]
  41b378:	mov	x22, x1
  41b37c:	stp	x23, x24, [sp, #48]
  41b380:	mov	x24, x0
  41b384:	bl	404280 <strlen@plt>
  41b388:	mov	x19, x0
  41b38c:	mov	x0, x22
  41b390:	bl	404280 <strlen@plt>
  41b394:	add	x23, x0, #0x1
  41b398:	cbz	x19, 41b3f8 <wcrtomb@plt+0x164a8>
  41b39c:	add	x0, x24, x19
  41b3a0:	ldurb	w0, [x0, #-1]
  41b3a4:	cmp	w0, #0x2f
  41b3a8:	cset	w21, ne  // ne = any
  41b3ac:	add	x21, x19, w21, sxtw
  41b3b0:	add	x0, x21, x23
  41b3b4:	bl	436d44 <argp_usage@@Base+0x9864>
  41b3b8:	mov	x20, x0
  41b3bc:	mov	x2, x19
  41b3c0:	mov	x1, x24
  41b3c4:	bl	404200 <memcpy@plt>
  41b3c8:	mov	w0, #0x2f                  	// #47
  41b3cc:	mov	x2, x23
  41b3d0:	mov	x1, x22
  41b3d4:	strb	w0, [x20, x19]
  41b3d8:	add	x0, x20, x21
  41b3dc:	bl	404200 <memcpy@plt>
  41b3e0:	mov	x0, x20
  41b3e4:	ldp	x19, x20, [sp, #16]
  41b3e8:	ldp	x21, x22, [sp, #32]
  41b3ec:	ldp	x23, x24, [sp, #48]
  41b3f0:	ldp	x29, x30, [sp], #64
  41b3f4:	ret
  41b3f8:	mov	w21, #0x0                   	// #0
  41b3fc:	b	41b3ac <wcrtomb@plt+0x1645c>
  41b400:	mov	x2, x0
  41b404:	ldrb	w3, [x2]
  41b408:	cmp	w3, #0x2f
  41b40c:	b.eq	41b420 <wcrtomb@plt+0x164d0>  // b.none
  41b410:	ldrb	w3, [x2]
  41b414:	cbnz	w3, 41b428 <wcrtomb@plt+0x164d8>
  41b418:	mov	x0, #0xffffffffffffffff    	// #-1
  41b41c:	b	41b440 <wcrtomb@plt+0x164f0>
  41b420:	add	x2, x2, #0x1
  41b424:	b	41b404 <wcrtomb@plt+0x164b4>
  41b428:	add	x2, x2, #0x1
  41b42c:	cmp	w3, #0x2f
  41b430:	b.ne	41b410 <wcrtomb@plt+0x164c0>  // b.any
  41b434:	subs	x1, x1, #0x1
  41b438:	b.ne	41b448 <wcrtomb@plt+0x164f8>  // b.any
  41b43c:	sub	x0, x2, x0
  41b440:	ret
  41b444:	add	x2, x2, #0x1
  41b448:	ldrb	w3, [x2]
  41b44c:	cmp	w3, #0x2f
  41b450:	b.eq	41b444 <wcrtomb@plt+0x164f4>  // b.none
  41b454:	b	41b410 <wcrtomb@plt+0x164c0>
  41b458:	mov	x1, x0
  41b45c:	ldrb	w0, [x1]
  41b460:	cmp	w0, #0x2e
  41b464:	b.ne	41b494 <wcrtomb@plt+0x16544>  // b.any
  41b468:	ldrb	w0, [x1, #1]
  41b46c:	cmp	w0, #0x2e
  41b470:	b.ne	41b494 <wcrtomb@plt+0x16544>  // b.any
  41b474:	ldrb	w2, [x1, #2]
  41b478:	cmp	w2, #0x2f
  41b47c:	cset	w0, eq  // eq = none
  41b480:	cmp	w2, #0x0
  41b484:	csinc	w0, w0, wzr, ne  // ne = any
  41b488:	cbz	w0, 41b494 <wcrtomb@plt+0x16544>
  41b48c:	ret
  41b490:	cbz	w0, 41b4a4 <wcrtomb@plt+0x16554>
  41b494:	ldrb	w0, [x1], #1
  41b498:	cmp	w0, #0x2f
  41b49c:	b.ne	41b490 <wcrtomb@plt+0x16540>  // b.any
  41b4a0:	b	41b45c <wcrtomb@plt+0x1650c>
  41b4a4:	mov	w0, #0x0                   	// #0
  41b4a8:	b	41b48c <wcrtomb@plt+0x1653c>
  41b4ac:	ldr	x1, [x0, #32]
  41b4b0:	ldr	x1, [x1, #8]
  41b4b4:	cbz	x1, 41b4c0 <wcrtomb@plt+0x16570>
  41b4b8:	mov	x16, x1
  41b4bc:	br	x16
  41b4c0:	mov	w0, #0x1                   	// #1
  41b4c4:	ret
  41b4c8:	ldr	x3, [x0, #32]
  41b4cc:	ldr	x3, [x3, #48]
  41b4d0:	cbz	x3, 41b4dc <wcrtomb@plt+0x1658c>
  41b4d4:	mov	x16, x3
  41b4d8:	br	x16
  41b4dc:	mov	w0, #0x1                   	// #1
  41b4e0:	ret
  41b4e4:	ldr	x1, [x0, #32]
  41b4e8:	ldr	x1, [x1, #40]
  41b4ec:	cbz	x1, 41b4f8 <wcrtomb@plt+0x165a8>
  41b4f0:	mov	x16, x1
  41b4f4:	br	x16
  41b4f8:	mov	w0, #0x1                   	// #1
  41b4fc:	ret
  41b500:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41b504:	ldr	x0, [x0, #4080]
  41b508:	ldrb	w0, [x0, #156]
  41b50c:	cmp	w0, #0x53
  41b510:	cset	w0, eq  // eq = none
  41b514:	ret
  41b518:	ldr	x0, [x0, #24]
  41b51c:	ldr	x1, [x0, #288]
  41b520:	cbnz	x1, 41b534 <wcrtomb@plt+0x165e4>
  41b524:	ldr	w0, [x0, #276]
  41b528:	cmp	w0, #0x0
  41b52c:	cset	w0, ne  // ne = any
  41b530:	ret
  41b534:	mov	w0, #0x1                   	// #1
  41b538:	b	41b530 <wcrtomb@plt+0x165e0>
  41b53c:	stp	x29, x30, [sp, #-32]!
  41b540:	mov	x1, #0xc                   	// #12
  41b544:	mov	x29, sp
  41b548:	str	x19, [sp, #16]
  41b54c:	mov	x19, x0
  41b550:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41b554:	ldr	x0, [x0, #4080]
  41b558:	add	x0, x0, #0x1c4
  41b55c:	bl	4162a0 <wcrtomb@plt+0x11350>
  41b560:	ldr	x1, [x19, #24]
  41b564:	cmp	x0, #0x0
  41b568:	ldr	x19, [sp, #16]
  41b56c:	ldr	x2, [x1, #136]
  41b570:	str	x2, [x1, #264]
  41b574:	csel	x2, x0, xzr, ge  // ge = tcont
  41b578:	mvn	x0, x0
  41b57c:	str	x2, [x1, #136]
  41b580:	lsr	x0, x0, #63
  41b584:	ldp	x29, x30, [sp], #32
  41b588:	ret
  41b58c:	stp	x29, x30, [sp, #-32]!
  41b590:	mov	x1, #0xc                   	// #12
  41b594:	mov	x29, sp
  41b598:	str	x19, [sp, #16]
  41b59c:	mov	x19, x0
  41b5a0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41b5a4:	ldr	x0, [x0, #4080]
  41b5a8:	add	x0, x0, #0x1e3
  41b5ac:	bl	4162a0 <wcrtomb@plt+0x11350>
  41b5b0:	ldr	x1, [x19, #24]
  41b5b4:	cmp	x0, #0x0
  41b5b8:	ldr	x19, [sp, #16]
  41b5bc:	ldr	x2, [x1, #136]
  41b5c0:	str	x2, [x1, #264]
  41b5c4:	csel	x2, x0, xzr, ge  // ge = tcont
  41b5c8:	mvn	x0, x0
  41b5cc:	str	x2, [x1, #136]
  41b5d0:	lsr	x0, x0, #63
  41b5d4:	ldp	x29, x30, [sp], #32
  41b5d8:	ret
  41b5dc:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41b5e0:	stp	xzr, xzr, [x0]
  41b5e4:	ldr	w1, [x1, #4056]
  41b5e8:	stp	xzr, xzr, [x0, #16]
  41b5ec:	stp	xzr, xzr, [x0, #32]
  41b5f0:	cbnz	w1, 41b5fc <wcrtomb@plt+0x166ac>
  41b5f4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41b5f8:	ldr	w1, [x1, #824]
  41b5fc:	sub	w1, w1, #0x2
  41b600:	cmp	w1, #0x4
  41b604:	b.hi	41b654 <wcrtomb@plt+0x16704>  // b.pmore
  41b608:	adrp	x2, 449000 <_obstack_memory_used@@Base+0x11380>
  41b60c:	add	x2, x2, #0xbd8
  41b610:	ldrb	w1, [x2, w1, uxtw]
  41b614:	adr	x2, 41b620 <wcrtomb@plt+0x166d0>
  41b618:	add	x1, x2, w1, sxtb #2
  41b61c:	br	x1
  41b620:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41b624:	add	x1, x1, #0xbe0
  41b628:	str	x1, [x0, #32]
  41b62c:	mov	w0, #0x1                   	// #1
  41b630:	ret
  41b634:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41b638:	add	x1, x1, #0xbe0
  41b63c:	add	x1, x1, #0x48
  41b640:	b	41b628 <wcrtomb@plt+0x166d8>
  41b644:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41b648:	add	x1, x1, #0xbe0
  41b64c:	add	x1, x1, #0x90
  41b650:	b	41b628 <wcrtomb@plt+0x166d8>
  41b654:	mov	w0, #0x0                   	// #0
  41b658:	b	41b630 <wcrtomb@plt+0x166e0>
  41b65c:	stp	x29, x30, [sp, #-64]!
  41b660:	mov	x29, sp
  41b664:	stp	x19, x20, [sp, #16]
  41b668:	mov	x19, x0
  41b66c:	ldrb	w20, [x0, #4]
  41b670:	stp	x21, x22, [sp, #32]
  41b674:	mov	x21, x1
  41b678:	str	x23, [sp, #48]
  41b67c:	cbz	w20, 41b6c0 <wcrtomb@plt+0x16770>
  41b680:	ldr	w0, [x0]
  41b684:	mov	w2, #0x0                   	// #0
  41b688:	bl	404480 <lseek@plt>
  41b68c:	lsr	x20, x0, #63
  41b690:	and	w20, w20, #0xff
  41b694:	cbz	w20, 41b738 <wcrtomb@plt+0x167e8>
  41b698:	ldr	x0, [x19, #24]
  41b69c:	mov	x1, x21
  41b6a0:	ldr	x0, [x0]
  41b6a4:	bl	418c6c <wcrtomb@plt+0x13d1c>
  41b6a8:	mov	w0, #0x0                   	// #0
  41b6ac:	ldp	x19, x20, [sp, #16]
  41b6b0:	ldp	x21, x22, [sp, #32]
  41b6b4:	ldr	x23, [sp, #48]
  41b6b8:	ldp	x29, x30, [sp], #64
  41b6bc:	ret
  41b6c0:	ldr	x0, [x0, #8]
  41b6c4:	cmp	x1, x0
  41b6c8:	b.lt	41b714 <wcrtomb@plt+0x167c4>  // b.tstop
  41b6cc:	adrp	x22, 449000 <_obstack_memory_used@@Base+0x11380>
  41b6d0:	add	x22, x22, #0xbe0
  41b6d4:	add	x22, x22, #0xd8
  41b6d8:	mov	x23, #0x200                 	// #512
  41b6dc:	ldr	x2, [x19, #8]
  41b6e0:	cmp	x21, x2
  41b6e4:	b.gt	41b6f0 <wcrtomb@plt+0x167a0>
  41b6e8:	mov	w20, #0x1                   	// #1
  41b6ec:	b	41b720 <wcrtomb@plt+0x167d0>
  41b6f0:	sub	x2, x21, x2
  41b6f4:	ldr	w0, [x19]
  41b6f8:	cmp	x2, #0x200
  41b6fc:	mov	x1, x22
  41b700:	csel	x2, x2, x23, le
  41b704:	bl	404930 <write@plt>
  41b708:	cmp	x0, #0x0
  41b70c:	b.gt	41b728 <wcrtomb@plt+0x167d8>
  41b710:	b.ne	41b720 <wcrtomb@plt+0x167d0>  // b.any
  41b714:	bl	404e10 <__errno_location@plt>
  41b718:	mov	w1, #0x16                  	// #22
  41b71c:	str	w1, [x0]
  41b720:	eor	w20, w20, #0x1
  41b724:	b	41b694 <wcrtomb@plt+0x16744>
  41b728:	ldr	x1, [x19, #8]
  41b72c:	add	x0, x1, x0
  41b730:	str	x0, [x19, #8]
  41b734:	b	41b6dc <wcrtomb@plt+0x1678c>
  41b738:	mov	w0, #0x1                   	// #1
  41b73c:	b	41b6ac <wcrtomb@plt+0x1675c>
  41b740:	stp	x29, x30, [sp, #-64]!
  41b744:	mov	x29, sp
  41b748:	stp	x21, x22, [sp, #32]
  41b74c:	lsl	x21, x1, #4
  41b750:	ldr	x1, [x0, #24]
  41b754:	stp	x19, x20, [sp, #16]
  41b758:	mov	x19, x0
  41b75c:	stp	x23, x24, [sp, #48]
  41b760:	ldr	x1, [x1, #304]
  41b764:	ldr	x1, [x1, x21]
  41b768:	bl	41b65c <wcrtomb@plt+0x1670c>
  41b76c:	ands	w20, w0, #0xff
  41b770:	b.eq	41b814 <wcrtomb@plt+0x168c4>  // b.none
  41b774:	ldr	x0, [x19, #24]
  41b778:	ldr	x1, [x0, #304]
  41b77c:	add	x21, x1, x21
  41b780:	ldr	x21, [x21, #8]
  41b784:	cbz	x21, 41b7f0 <wcrtomb@plt+0x168a0>
  41b788:	mov	x24, #0x200                 	// #512
  41b78c:	cmp	x21, #0x0
  41b790:	b.le	41b814 <wcrtomb@plt+0x168c4>
  41b794:	cmp	x21, #0x200
  41b798:	csel	x23, x21, x24, le
  41b79c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41b7a0:	mov	x22, x0
  41b7a4:	cbnz	x0, 41b82c <wcrtomb@plt+0x168dc>
  41b7a8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41b7ac:	ldr	x0, [x0, #1016]
  41b7b0:	cbz	x0, 41b7b8 <wcrtomb@plt+0x16868>
  41b7b4:	blr	x0
  41b7b8:	mov	w2, #0x5                   	// #5
  41b7bc:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41b7c0:	mov	x0, #0x0                   	// #0
  41b7c4:	add	x1, x1, #0x41c
  41b7c8:	bl	404d00 <dcgettext@plt>
  41b7cc:	mov	x2, x0
  41b7d0:	mov	w1, #0x0                   	// #0
  41b7d4:	mov	w0, #0x0                   	// #0
  41b7d8:	bl	4042e0 <error@plt>
  41b7dc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41b7e0:	mov	w1, #0x2                   	// #2
  41b7e4:	str	w1, [x0, #3464]
  41b7e8:	mov	w20, #0x0                   	// #0
  41b7ec:	b	41b814 <wcrtomb@plt+0x168c4>
  41b7f0:	ldrb	w21, [x19, #4]
  41b7f4:	cbz	w21, 41b814 <wcrtomb@plt+0x168c4>
  41b7f8:	ldr	w0, [x19]
  41b7fc:	bl	41dadc <wcrtomb@plt+0x18b8c>
  41b800:	cbz	w0, 41b814 <wcrtomb@plt+0x168c4>
  41b804:	ldr	x0, [x19, #24]
  41b808:	mov	w20, w21
  41b80c:	ldr	x0, [x0]
  41b810:	bl	42530c <wcrtomb@plt+0x203bc>
  41b814:	mov	w0, w20
  41b818:	ldp	x19, x20, [sp, #16]
  41b81c:	ldp	x21, x22, [sp, #32]
  41b820:	ldp	x23, x24, [sp, #48]
  41b824:	ldp	x29, x30, [sp], #64
  41b828:	ret
  41b82c:	bl	405c98 <wcrtomb@plt+0xd48>
  41b830:	ldr	x0, [x19, #16]
  41b834:	mov	x1, x22
  41b838:	mov	x2, x23
  41b83c:	add	x0, x0, #0x200
  41b840:	str	x0, [x19, #16]
  41b844:	ldr	w0, [x19]
  41b848:	bl	41897c <wcrtomb@plt+0x13a2c>
  41b84c:	mov	x22, x0
  41b850:	sub	x21, x21, x0
  41b854:	ldr	x0, [x19, #24]
  41b858:	ldr	x1, [x0, #264]
  41b85c:	ldr	x0, [x19, #16]
  41b860:	sub	x0, x1, x0
  41b864:	bl	4058d0 <wcrtomb@plt+0x980>
  41b868:	ldr	x0, [x19, #8]
  41b86c:	cmp	x23, x22
  41b870:	add	x0, x0, x22
  41b874:	str	x0, [x19, #8]
  41b878:	b.eq	41b78c <wcrtomb@plt+0x1683c>  // b.none
  41b87c:	ldr	x0, [x19, #24]
  41b880:	mov	x2, x23
  41b884:	mov	x1, x22
  41b888:	ldr	x0, [x0]
  41b88c:	bl	42535c <wcrtomb@plt+0x2040c>
  41b890:	b	41b7e8 <wcrtomb@plt+0x16898>
  41b894:	stp	x29, x30, [sp, #-240]!
  41b898:	mov	x29, sp
  41b89c:	ldr	x2, [x0, #24]
  41b8a0:	stp	x23, x24, [sp, #48]
  41b8a4:	lsl	x23, x1, #4
  41b8a8:	stp	x21, x22, [sp, #32]
  41b8ac:	ldr	x2, [x2, #304]
  41b8b0:	stp	x19, x20, [sp, #16]
  41b8b4:	mov	x19, x0
  41b8b8:	stp	x25, x26, [sp, #64]
  41b8bc:	add	x1, x2, x1, lsl #4
  41b8c0:	ldr	x21, [x1, #8]
  41b8c4:	ldr	x1, [x2, x23]
  41b8c8:	bl	41b65c <wcrtomb@plt+0x1670c>
  41b8cc:	ands	w22, w0, #0xff
  41b8d0:	b.eq	41b938 <wcrtomb@plt+0x169e8>  // b.none
  41b8d4:	mov	x25, #0x200                 	// #512
  41b8d8:	cmp	x21, #0x0
  41b8dc:	b.le	41b938 <wcrtomb@plt+0x169e8>
  41b8e0:	cmp	x21, #0x200
  41b8e4:	csel	x26, x21, x25, le
  41b8e8:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41b8ec:	mov	x1, x0
  41b8f0:	mov	x24, x0
  41b8f4:	ldr	w0, [x19]
  41b8f8:	mov	x2, x26
  41b8fc:	bl	436390 <argp_usage@@Base+0x8eb0>
  41b900:	mov	x20, x0
  41b904:	cmn	x0, #0x1
  41b908:	b.ne	41b954 <wcrtomb@plt+0x16a04>  // b.any
  41b90c:	ldr	x0, [x19, #24]
  41b910:	ldr	x1, [x0, #304]
  41b914:	ldr	x0, [x0]
  41b918:	add	x2, x1, x23
  41b91c:	ldr	x1, [x1, x23]
  41b920:	ldr	x2, [x2, #8]
  41b924:	add	x1, x1, x2
  41b928:	mov	x2, x26
  41b92c:	sub	x1, x1, x21
  41b930:	bl	418c00 <wcrtomb@plt+0x13cb0>
  41b934:	mov	w22, #0x0                   	// #0
  41b938:	mov	w0, w22
  41b93c:	ldp	x19, x20, [sp, #16]
  41b940:	ldp	x21, x22, [sp, #32]
  41b944:	ldp	x23, x24, [sp, #48]
  41b948:	ldp	x25, x26, [sp, #64]
  41b94c:	ldp	x29, x30, [sp], #240
  41b950:	ret
  41b954:	cbnz	x0, 41ba24 <wcrtomb@plt+0x16ad4>
  41b958:	ldr	w0, [x19]
  41b95c:	add	x1, sp, #0x70
  41b960:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  41b964:	ldr	x1, [x19, #24]
  41b968:	cbnz	w0, 41ba04 <wcrtomb@plt+0x16ab4>
  41b96c:	ldr	x21, [x1, #136]
  41b970:	ldr	x3, [sp, #160]
  41b974:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41b978:	sub	x21, x21, x3
  41b97c:	ldr	w0, [x0, #480]
  41b980:	tbz	w0, #7, 41b9ec <wcrtomb@plt+0x16a9c>
  41b984:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41b988:	ldr	x0, [x0, #1016]
  41b98c:	cbz	x0, 41b994 <wcrtomb@plt+0x16a44>
  41b990:	blr	x0
  41b994:	mov	x3, x21
  41b998:	mov	w4, #0x5                   	// #5
  41b99c:	adrp	x2, 447000 <_obstack_memory_used@@Base+0xf380>
  41b9a0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41b9a4:	add	x2, x2, #0x8da
  41b9a8:	add	x1, x1, #0x90a
  41b9ac:	mov	x0, #0x0                   	// #0
  41b9b0:	bl	404c10 <dcngettext@plt>
  41b9b4:	mov	x20, x0
  41b9b8:	ldr	x0, [x19, #24]
  41b9bc:	ldr	x0, [x0]
  41b9c0:	bl	436084 <argp_usage@@Base+0x8ba4>
  41b9c4:	mov	x19, x0
  41b9c8:	add	x1, sp, #0x58
  41b9cc:	mov	x0, x21
  41b9d0:	bl	431400 <argp_usage@@Base+0x3f20>
  41b9d4:	mov	x4, x0
  41b9d8:	mov	x3, x19
  41b9dc:	mov	x2, x20
  41b9e0:	mov	w1, #0x0                   	// #0
  41b9e4:	mov	w0, #0x0                   	// #0
  41b9e8:	bl	4042e0 <error@plt>
  41b9ec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41b9f0:	ldrb	w0, [x0, #961]
  41b9f4:	cbnz	w0, 41b934 <wcrtomb@plt+0x169e4>
  41b9f8:	mov	w0, #0x1                   	// #1
  41b9fc:	bl	421c04 <wcrtomb@plt+0x1ccb4>
  41ba00:	b	41b934 <wcrtomb@plt+0x169e4>
  41ba04:	ldr	x0, [x1, #304]
  41ba08:	add	x2, x0, x23
  41ba0c:	ldr	x3, [x0, x23]
  41ba10:	ldr	x0, [x2, #8]
  41ba14:	add	x3, x3, x0
  41ba18:	sub	x3, x3, x21
  41ba1c:	ldr	x21, [x1, #136]
  41ba20:	b	41b974 <wcrtomb@plt+0x16a24>
  41ba24:	sub	x2, x25, x0
  41ba28:	mov	w1, #0x0                   	// #0
  41ba2c:	add	x0, x24, x0
  41ba30:	bl	404700 <memset@plt>
  41ba34:	ldr	x0, [x19, #16]
  41ba38:	sub	x21, x21, x20
  41ba3c:	add	x20, x0, x20
  41ba40:	str	x20, [x19, #16]
  41ba44:	mov	x0, x24
  41ba48:	bl	405c98 <wcrtomb@plt+0xd48>
  41ba4c:	b	41b8d8 <wcrtomb@plt+0x16988>
  41ba50:	sub	sp, sp, #0x260
  41ba54:	stp	x29, x30, [sp]
  41ba58:	mov	x29, sp
  41ba5c:	stp	x19, x20, [sp, #16]
  41ba60:	mov	x20, x0
  41ba64:	mov	x19, x1
  41ba68:	stp	x21, x22, [sp, #32]
  41ba6c:	stp	x23, x24, [sp, #48]
  41ba70:	mov	x23, x2
  41ba74:	bl	41b65c <wcrtomb@plt+0x1670c>
  41ba78:	ands	w21, w0, #0xff
  41ba7c:	b.eq	41bacc <wcrtomb@plt+0x16b7c>  // b.none
  41ba80:	mov	x24, #0x200                 	// #512
  41ba84:	cmp	x19, x23
  41ba88:	b.ge	41bacc <wcrtomb@plt+0x16b7c>  // b.tcont
  41ba8c:	sub	x22, x23, x19
  41ba90:	ldr	w0, [x20]
  41ba94:	cmp	x22, #0x200
  41ba98:	add	x1, sp, #0x60
  41ba9c:	csel	x22, x22, x24, le
  41baa0:	mov	x2, x22
  41baa4:	bl	436390 <argp_usage@@Base+0x8eb0>
  41baa8:	mov	x3, x0
  41baac:	cmn	x0, #0x1
  41bab0:	b.ne	41bae8 <wcrtomb@plt+0x16b98>  // b.any
  41bab4:	ldr	x0, [x20, #24]
  41bab8:	mov	x2, x22
  41babc:	mov	x1, x19
  41bac0:	ldr	x0, [x0]
  41bac4:	bl	418c00 <wcrtomb@plt+0x13cb0>
  41bac8:	mov	w21, #0x0                   	// #0
  41bacc:	mov	w0, w21
  41bad0:	ldp	x29, x30, [sp]
  41bad4:	ldp	x19, x20, [sp, #16]
  41bad8:	ldp	x21, x22, [sp, #32]
  41badc:	ldp	x23, x24, [sp, #48]
  41bae0:	add	sp, sp, #0x260
  41bae4:	ret
  41bae8:	cbnz	x0, 41bb10 <wcrtomb@plt+0x16bc0>
  41baec:	ldr	x19, [x20, #24]
  41baf0:	mov	w2, #0x5                   	// #5
  41baf4:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41baf8:	add	x1, x1, #0x519
  41bafc:	bl	404d00 <dcgettext@plt>
  41bb00:	mov	x1, x0
  41bb04:	mov	x0, x19
  41bb08:	bl	40905c <wcrtomb@plt+0x410c>
  41bb0c:	b	41bac8 <wcrtomb@plt+0x16b78>
  41bb10:	mov	x1, #0x0                   	// #0
  41bb14:	add	x1, x1, #0x1
  41bb18:	add	x0, sp, #0x60
  41bb1c:	add	x0, x0, x1
  41bb20:	ldurb	w0, [x0, #-1]
  41bb24:	cbnz	w0, 41bb38 <wcrtomb@plt+0x16be8>
  41bb28:	cmp	x1, x3
  41bb2c:	b.ne	41bb14 <wcrtomb@plt+0x16bc4>  // b.any
  41bb30:	add	x19, x19, x1
  41bb34:	b	41ba84 <wcrtomb@plt+0x16b34>
  41bb38:	mov	w2, #0x5                   	// #5
  41bb3c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41bb40:	ldr	x21, [x20, #24]
  41bb44:	add	x1, x1, #0xeb8
  41bb48:	mov	x0, #0x0                   	// #0
  41bb4c:	bl	404d00 <dcgettext@plt>
  41bb50:	add	x1, sp, #0x48
  41bb54:	mov	x20, x0
  41bb58:	mov	x0, x19
  41bb5c:	bl	4313a0 <argp_usage@@Base+0x3ec0>
  41bb60:	mov	x1, x20
  41bb64:	mov	x2, x0
  41bb68:	mov	x0, x21
  41bb6c:	bl	40905c <wcrtomb@plt+0x410c>
  41bb70:	b	41bac8 <wcrtomb@plt+0x16b78>
  41bb74:	sub	sp, sp, #0x250
  41bb78:	stp	x29, x30, [sp]
  41bb7c:	mov	x29, sp
  41bb80:	stp	x21, x22, [sp, #32]
  41bb84:	lsl	x21, x1, #4
  41bb88:	ldr	x1, [x0, #24]
  41bb8c:	stp	x19, x20, [sp, #16]
  41bb90:	mov	x19, x0
  41bb94:	stp	x23, x24, [sp, #48]
  41bb98:	ldr	x1, [x1, #304]
  41bb9c:	ldr	x1, [x1, x21]
  41bba0:	str	x25, [sp, #64]
  41bba4:	bl	41b65c <wcrtomb@plt+0x1670c>
  41bba8:	ands	w22, w0, #0xff
  41bbac:	b.eq	41bc34 <wcrtomb@plt+0x16ce4>  // b.none
  41bbb0:	ldr	x1, [x19, #24]
  41bbb4:	mov	x25, #0x200                 	// #512
  41bbb8:	ldr	x0, [x1, #304]
  41bbbc:	ldr	x1, [x1, #264]
  41bbc0:	add	x0, x0, x21
  41bbc4:	ldr	x20, [x0, #8]
  41bbc8:	ldr	x0, [x19, #16]
  41bbcc:	sub	x0, x1, x0
  41bbd0:	bl	4058d0 <wcrtomb@plt+0x980>
  41bbd4:	cmp	x20, #0x0
  41bbd8:	b.le	41bc34 <wcrtomb@plt+0x16ce4>
  41bbdc:	cmp	x20, #0x200
  41bbe0:	csel	x24, x20, x25, le
  41bbe4:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41bbe8:	mov	x23, x0
  41bbec:	cbnz	x0, 41bc54 <wcrtomb@plt+0x16d04>
  41bbf0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41bbf4:	ldr	x0, [x0, #1016]
  41bbf8:	cbz	x0, 41bc00 <wcrtomb@plt+0x16cb0>
  41bbfc:	blr	x0
  41bc00:	mov	w2, #0x5                   	// #5
  41bc04:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41bc08:	mov	x0, #0x0                   	// #0
  41bc0c:	add	x1, x1, #0x41c
  41bc10:	bl	404d00 <dcgettext@plt>
  41bc14:	mov	x2, x0
  41bc18:	mov	w1, #0x0                   	// #0
  41bc1c:	mov	w0, #0x0                   	// #0
  41bc20:	bl	4042e0 <error@plt>
  41bc24:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41bc28:	mov	w1, #0x2                   	// #2
  41bc2c:	str	w1, [x0, #3464]
  41bc30:	mov	w22, #0x0                   	// #0
  41bc34:	mov	w0, w22
  41bc38:	ldp	x29, x30, [sp]
  41bc3c:	ldp	x19, x20, [sp, #16]
  41bc40:	ldp	x21, x22, [sp, #32]
  41bc44:	ldp	x23, x24, [sp, #48]
  41bc48:	ldr	x25, [sp, #64]
  41bc4c:	add	sp, sp, #0x250
  41bc50:	ret
  41bc54:	bl	405c98 <wcrtomb@plt+0xd48>
  41bc58:	ldr	x0, [x19, #16]
  41bc5c:	mov	x2, x24
  41bc60:	add	x1, sp, #0x50
  41bc64:	add	x0, x0, #0x200
  41bc68:	str	x0, [x19, #16]
  41bc6c:	ldr	w0, [x19]
  41bc70:	bl	436390 <argp_usage@@Base+0x8eb0>
  41bc74:	cmn	x0, #0x1
  41bc78:	b.ne	41bca8 <wcrtomb@plt+0x16d58>  // b.any
  41bc7c:	ldr	x0, [x19, #24]
  41bc80:	ldr	x1, [x0, #304]
  41bc84:	ldr	x0, [x0]
  41bc88:	add	x2, x1, x21
  41bc8c:	ldr	x1, [x1, x21]
  41bc90:	ldr	x2, [x2, #8]
  41bc94:	add	x1, x1, x2
  41bc98:	mov	x2, x24
  41bc9c:	sub	x1, x1, x20
  41bca0:	bl	418c00 <wcrtomb@plt+0x13cb0>
  41bca4:	b	41bc30 <wcrtomb@plt+0x16ce0>
  41bca8:	cbnz	x0, 41bcd0 <wcrtomb@plt+0x16d80>
  41bcac:	mov	w2, #0x5                   	// #5
  41bcb0:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41bcb4:	add	x1, x1, #0x519
  41bcb8:	bl	404d00 <dcgettext@plt>
  41bcbc:	mov	x1, x0
  41bcc0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41bcc4:	add	x0, x0, #0x68
  41bcc8:	bl	40905c <wcrtomb@plt+0x410c>
  41bccc:	b	41bc30 <wcrtomb@plt+0x16ce0>
  41bcd0:	sub	x20, x20, x0
  41bcd4:	ldr	x0, [x19, #24]
  41bcd8:	ldr	x1, [x0, #264]
  41bcdc:	ldr	x0, [x19, #16]
  41bce0:	sub	x0, x1, x0
  41bce4:	bl	4058d0 <wcrtomb@plt+0x980>
  41bce8:	mov	x2, x24
  41bcec:	add	x1, sp, #0x50
  41bcf0:	mov	x0, x23
  41bcf4:	bl	4049f0 <memcmp@plt>
  41bcf8:	cbz	w0, 41bbd4 <wcrtomb@plt+0x16c84>
  41bcfc:	ldr	x19, [x19, #24]
  41bd00:	mov	w2, #0x5                   	// #5
  41bd04:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41bd08:	mov	x0, #0x0                   	// #0
  41bd0c:	add	x1, x1, #0x477
  41bd10:	bl	404d00 <dcgettext@plt>
  41bd14:	mov	x1, x0
  41bd18:	mov	x0, x19
  41bd1c:	b	41bcc8 <wcrtomb@plt+0x16d78>
  41bd20:	stp	x29, x30, [sp, #-48]!
  41bd24:	mov	x29, sp
  41bd28:	stp	x19, x20, [sp, #16]
  41bd2c:	mov	x19, x0
  41bd30:	ldr	x0, [x0, #304]
  41bd34:	ldr	x20, [x19, #288]
  41bd38:	str	x21, [sp, #32]
  41bd3c:	mov	x21, x1
  41bd40:	ldr	x1, [x19, #296]
  41bd44:	cmp	x20, x1
  41bd48:	b.ne	41bd5c <wcrtomb@plt+0x16e0c>  // b.any
  41bd4c:	add	x1, x19, #0x128
  41bd50:	mov	x2, #0x10                  	// #16
  41bd54:	bl	436e14 <argp_usage@@Base+0x9934>
  41bd58:	str	x0, [x19, #304]
  41bd5c:	add	x0, x0, x20, lsl #4
  41bd60:	add	x20, x20, #0x1
  41bd64:	ldp	x2, x3, [x21]
  41bd68:	stp	x2, x3, [x0]
  41bd6c:	ldr	x21, [sp, #32]
  41bd70:	str	x20, [x19, #288]
  41bd74:	ldp	x19, x20, [sp, #16]
  41bd78:	ldp	x29, x30, [sp], #48
  41bd7c:	ret
  41bd80:	stp	x29, x30, [sp, #-48]!
  41bd84:	mov	x29, sp
  41bd88:	stp	x19, x20, [sp, #16]
  41bd8c:	mov	x20, x0
  41bd90:	ldrb	w0, [x1, #12]
  41bd94:	cbz	w0, 41be08 <wcrtomb@plt+0x16eb8>
  41bd98:	mov	x19, x1
  41bd9c:	mov	x1, #0xc                   	// #12
  41bda0:	mov	x0, x19
  41bda4:	bl	4162a0 <wcrtomb@plt+0x11350>
  41bda8:	mov	x1, #0xc                   	// #12
  41bdac:	str	x0, [sp, #32]
  41bdb0:	add	x0, x19, x1
  41bdb4:	bl	4162a0 <wcrtomb@plt+0x11350>
  41bdb8:	ldr	x1, [sp, #32]
  41bdbc:	str	x0, [sp, #40]
  41bdc0:	tbnz	x1, #63, 41bde0 <wcrtomb@plt+0x16e90>
  41bdc4:	tbnz	x0, #63, 41bde0 <wcrtomb@plt+0x16e90>
  41bdc8:	adds	x1, x1, x0
  41bdcc:	b.vs	41bde0 <wcrtomb@plt+0x16e90>
  41bdd0:	ldr	x0, [x20]
  41bdd4:	ldr	x2, [x0, #136]
  41bdd8:	cmp	x2, x1
  41bddc:	b.ge	41bde8 <wcrtomb@plt+0x16e98>  // b.tcont
  41bde0:	mov	w0, #0x2                   	// #2
  41bde4:	b	41bdfc <wcrtomb@plt+0x16eac>
  41bde8:	ldr	x1, [x0, #264]
  41bdec:	tbnz	x1, #63, 41bde0 <wcrtomb@plt+0x16e90>
  41bdf0:	add	x1, sp, #0x20
  41bdf4:	bl	41bd20 <wcrtomb@plt+0x16dd0>
  41bdf8:	mov	w0, #0x0                   	// #0
  41bdfc:	ldp	x19, x20, [sp, #16]
  41be00:	ldp	x29, x30, [sp], #48
  41be04:	ret
  41be08:	mov	w0, #0x1                   	// #1
  41be0c:	b	41bdfc <wcrtomb@plt+0x16eac>
  41be10:	stp	x29, x30, [sp, #-64]!
  41be14:	mov	x29, sp
  41be18:	stp	x19, x20, [sp, #16]
  41be1c:	mov	x19, x0
  41be20:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41be24:	stp	x21, x22, [sp, #32]
  41be28:	ldr	x20, [x0, #4080]
  41be2c:	ldr	x0, [x19, #24]
  41be30:	str	x23, [sp, #48]
  41be34:	str	xzr, [x0, #288]
  41be38:	ldrb	w0, [x20, #345]
  41be3c:	cbnz	w0, 41bee4 <wcrtomb@plt+0x16f94>
  41be40:	ldrb	w0, [x20, #366]
  41be44:	cbz	w0, 41bee4 <wcrtomb@plt+0x16f94>
  41be48:	add	x21, x20, #0x164
  41be4c:	add	x22, x20, #0x1c4
  41be50:	add	x23, x19, #0x18
  41be54:	mov	x1, x21
  41be58:	mov	x0, x23
  41be5c:	bl	41bd80 <wcrtomb@plt+0x16e30>
  41be60:	cbnz	w0, 41be70 <wcrtomb@plt+0x16f20>
  41be64:	add	x21, x21, #0x18
  41be68:	cmp	x21, x22
  41be6c:	b.ne	41be54 <wcrtomb@plt+0x16f04>  // b.any
  41be70:	ldrb	w1, [x20, #355]
  41be74:	mov	x21, #0x18                  	// #24
  41be78:	add	x22, x19, x21
  41be7c:	cmp	w0, #0x0
  41be80:	cset	w20, eq  // eq = none
  41be84:	cmp	w1, #0x0
  41be88:	csel	w20, w20, wzr, ne  // ne = any
  41be8c:	cbnz	w20, 41bef0 <wcrtomb@plt+0x16fa0>
  41be90:	cmp	w0, #0x2
  41be94:	b.ne	41bf90 <wcrtomb@plt+0x17040>  // b.any
  41be98:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41be9c:	ldr	x0, [x0, #1016]
  41bea0:	cbz	x0, 41bea8 <wcrtomb@plt+0x16f58>
  41bea4:	blr	x0
  41bea8:	mov	w2, #0x5                   	// #5
  41beac:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41beb0:	mov	x0, #0x0                   	// #0
  41beb4:	add	x1, x1, #0xeda
  41beb8:	bl	404d00 <dcgettext@plt>
  41bebc:	mov	x2, x0
  41bec0:	ldr	x1, [x19, #24]
  41bec4:	mov	w0, #0x0                   	// #0
  41bec8:	ldr	x3, [x1]
  41becc:	mov	w1, #0x0                   	// #0
  41bed0:	bl	4042e0 <error@plt>
  41bed4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41bed8:	mov	w1, #0x2                   	// #2
  41bedc:	str	w1, [x0, #3464]
  41bee0:	b	41bf40 <wcrtomb@plt+0x16ff0>
  41bee4:	mov	w0, #0x0                   	// #0
  41bee8:	mov	w1, #0x1                   	// #1
  41beec:	b	41be74 <wcrtomb@plt+0x16f24>
  41bef0:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41bef4:	mov	x20, x0
  41bef8:	cbnz	x0, 41bf58 <wcrtomb@plt+0x17008>
  41befc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41bf00:	ldr	x0, [x0, #1016]
  41bf04:	cbz	x0, 41bf0c <wcrtomb@plt+0x16fbc>
  41bf08:	blr	x0
  41bf0c:	mov	w2, #0x5                   	// #5
  41bf10:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41bf14:	mov	x0, #0x0                   	// #0
  41bf18:	add	x1, x1, #0x41c
  41bf1c:	bl	404d00 <dcgettext@plt>
  41bf20:	mov	x2, x0
  41bf24:	mov	w1, #0x0                   	// #0
  41bf28:	mov	w0, #0x0                   	// #0
  41bf2c:	bl	4042e0 <error@plt>
  41bf30:	mov	w20, #0x0                   	// #0
  41bf34:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41bf38:	mov	w1, #0x2                   	// #2
  41bf3c:	str	w1, [x0, #3464]
  41bf40:	mov	w0, w20
  41bf44:	ldp	x19, x20, [sp, #16]
  41bf48:	ldp	x21, x22, [sp, #32]
  41bf4c:	ldr	x23, [sp, #48]
  41bf50:	ldp	x29, x30, [sp], #64
  41bf54:	ret
  41bf58:	mov	x23, #0x0                   	// #0
  41bf5c:	bl	405c98 <wcrtomb@plt+0xd48>
  41bf60:	madd	x1, x23, x21, x20
  41bf64:	mov	x0, x22
  41bf68:	add	x23, x23, #0x1
  41bf6c:	bl	41bd80 <wcrtomb@plt+0x16e30>
  41bf70:	cmp	w0, #0x0
  41bf74:	ccmp	x23, #0x14, #0x2, eq  // eq = none
  41bf78:	b.ls	41bf60 <wcrtomb@plt+0x17010>  // b.plast
  41bf7c:	ldr	x1, [x19, #16]
  41bf80:	add	x1, x1, #0x200
  41bf84:	str	x1, [x19, #16]
  41bf88:	ldrb	w1, [x20, #504]
  41bf8c:	b	41be7c <wcrtomb@plt+0x16f2c>
  41bf90:	mov	w20, #0x1                   	// #1
  41bf94:	b	41bf40 <wcrtomb@plt+0x16ff0>
  41bf98:	stp	x29, x30, [sp, #-64]!
  41bf9c:	mov	x29, sp
  41bfa0:	stp	x19, x20, [sp, #16]
  41bfa4:	mov	x20, x0
  41bfa8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41bfac:	stp	x21, x22, [sp, #32]
  41bfb0:	mov	x21, x20
  41bfb4:	ldr	x22, [x0, #4080]
  41bfb8:	ldr	x0, [x21, #24]!
  41bfbc:	add	x19, x22, #0x182
  41bfc0:	str	x23, [sp, #48]
  41bfc4:	add	x23, x22, #0x1e2
  41bfc8:	str	xzr, [x0, #288]
  41bfcc:	mov	x1, x19
  41bfd0:	mov	x0, x21
  41bfd4:	bl	41bd80 <wcrtomb@plt+0x16e30>
  41bfd8:	cbnz	w0, 41bfe8 <wcrtomb@plt+0x17098>
  41bfdc:	add	x19, x19, #0x18
  41bfe0:	cmp	x19, x23
  41bfe4:	b.ne	41bfcc <wcrtomb@plt+0x1707c>  // b.any
  41bfe8:	ldrb	w1, [x22, #482]
  41bfec:	mov	x23, #0x18                  	// #24
  41bff0:	cmp	w0, #0x0
  41bff4:	cset	w19, eq  // eq = none
  41bff8:	cmp	w1, #0x0
  41bffc:	csel	w19, w19, wzr, ne  // ne = any
  41c000:	cbnz	w19, 41c058 <wcrtomb@plt+0x17108>
  41c004:	cmp	w0, #0x2
  41c008:	b.ne	41c0ec <wcrtomb@plt+0x1719c>  // b.any
  41c00c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41c010:	ldr	x0, [x0, #1016]
  41c014:	cbz	x0, 41c01c <wcrtomb@plt+0x170cc>
  41c018:	blr	x0
  41c01c:	mov	w2, #0x5                   	// #5
  41c020:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41c024:	mov	x0, #0x0                   	// #0
  41c028:	add	x1, x1, #0xeda
  41c02c:	bl	404d00 <dcgettext@plt>
  41c030:	mov	x2, x0
  41c034:	ldr	x1, [x20, #24]
  41c038:	mov	w0, #0x0                   	// #0
  41c03c:	ldr	x3, [x1]
  41c040:	mov	w1, #0x0                   	// #0
  41c044:	bl	4042e0 <error@plt>
  41c048:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41c04c:	mov	w1, #0x2                   	// #2
  41c050:	str	w1, [x0, #3464]
  41c054:	b	41c0a8 <wcrtomb@plt+0x17158>
  41c058:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41c05c:	mov	x19, x0
  41c060:	cbnz	x0, 41c0c0 <wcrtomb@plt+0x17170>
  41c064:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41c068:	ldr	x0, [x0, #1016]
  41c06c:	cbz	x0, 41c074 <wcrtomb@plt+0x17124>
  41c070:	blr	x0
  41c074:	mov	w2, #0x5                   	// #5
  41c078:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41c07c:	mov	x0, #0x0                   	// #0
  41c080:	add	x1, x1, #0x41c
  41c084:	bl	404d00 <dcgettext@plt>
  41c088:	mov	x2, x0
  41c08c:	mov	w1, #0x0                   	// #0
  41c090:	mov	w0, #0x0                   	// #0
  41c094:	bl	4042e0 <error@plt>
  41c098:	mov	w19, #0x0                   	// #0
  41c09c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41c0a0:	mov	w1, #0x2                   	// #2
  41c0a4:	str	w1, [x0, #3464]
  41c0a8:	mov	w0, w19
  41c0ac:	ldp	x19, x20, [sp, #16]
  41c0b0:	ldp	x21, x22, [sp, #32]
  41c0b4:	ldr	x23, [sp, #48]
  41c0b8:	ldp	x29, x30, [sp], #64
  41c0bc:	ret
  41c0c0:	mov	x22, #0x0                   	// #0
  41c0c4:	bl	405c98 <wcrtomb@plt+0xd48>
  41c0c8:	madd	x1, x22, x23, x19
  41c0cc:	mov	x0, x21
  41c0d0:	add	x22, x22, #0x1
  41c0d4:	bl	41bd80 <wcrtomb@plt+0x16e30>
  41c0d8:	cmp	w0, #0x0
  41c0dc:	ccmp	x22, #0x14, #0x2, eq  // eq = none
  41c0e0:	b.ls	41c0c8 <wcrtomb@plt+0x17178>  // b.plast
  41c0e4:	ldrb	w1, [x19, #504]
  41c0e8:	b	41bff0 <wcrtomb@plt+0x170a0>
  41c0ec:	mov	w19, #0x1                   	// #1
  41c0f0:	b	41c0a8 <wcrtomb@plt+0x17158>
  41c0f4:	stp	x29, x30, [sp, #-64]!
  41c0f8:	mov	x29, sp
  41c0fc:	stp	x19, x20, [sp, #16]
  41c100:	stp	x21, x22, [sp, #32]
  41c104:	mov	x21, x0
  41c108:	ldrb	w0, [x1]
  41c10c:	sub	w0, w0, #0x30
  41c110:	cmp	w0, #0x9
  41c114:	b.hi	41c174 <wcrtomb@plt+0x17224>  // b.pmore
  41c118:	mov	x20, x1
  41c11c:	mov	x22, x2
  41c120:	bl	404e10 <__errno_location@plt>
  41c124:	mov	x19, x0
  41c128:	add	x1, sp, #0x38
  41c12c:	mov	x0, x20
  41c130:	mov	w2, #0xa                   	// #10
  41c134:	str	wzr, [x19]
  41c138:	bl	404940 <strtoumax@plt>
  41c13c:	cmp	x22, x0
  41c140:	b.cc	41c174 <wcrtomb@plt+0x17224>  // b.lo, b.ul, b.last
  41c144:	ldr	w1, [x19]
  41c148:	cmp	w1, #0x22
  41c14c:	b.eq	41c174 <wcrtomb@plt+0x17224>  // b.none
  41c150:	ldr	x1, [sp, #56]
  41c154:	ldrb	w1, [x1]
  41c158:	cbnz	w1, 41c174 <wcrtomb@plt+0x17224>
  41c15c:	str	x0, [x21]
  41c160:	mov	w0, #0x1                   	// #1
  41c164:	ldp	x19, x20, [sp, #16]
  41c168:	ldp	x21, x22, [sp, #32]
  41c16c:	ldp	x29, x30, [sp], #64
  41c170:	ret
  41c174:	mov	w0, #0x0                   	// #0
  41c178:	b	41c164 <wcrtomb@plt+0x17214>
  41c17c:	stp	x29, x30, [sp, #-144]!
  41c180:	mov	x29, sp
  41c184:	stp	x21, x22, [sp, #32]
  41c188:	mov	x21, x0
  41c18c:	ldr	x0, [x0, #24]
  41c190:	stp	x19, x20, [sp, #16]
  41c194:	stp	x23, x24, [sp, #48]
  41c198:	ldr	w0, [x0, #276]
  41c19c:	stp	x25, x26, [sp, #64]
  41c1a0:	str	x27, [sp, #80]
  41c1a4:	cbz	w0, 41c43c <wcrtomb@plt+0x174ec>
  41c1a8:	bl	405c2c <wcrtomb@plt+0xcdc>
  41c1ac:	mov	x25, x0
  41c1b0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41c1b4:	ldr	x0, [x0, #4080]
  41c1b8:	bl	405c98 <wcrtomb@plt+0xd48>
  41c1bc:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41c1c0:	mov	x19, x0
  41c1c4:	cbnz	x0, 41c200 <wcrtomb@plt+0x172b0>
  41c1c8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41c1cc:	ldr	x0, [x0, #1016]
  41c1d0:	cbz	x0, 41c1d8 <wcrtomb@plt+0x17288>
  41c1d4:	blr	x0
  41c1d8:	mov	w2, #0x5                   	// #5
  41c1dc:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41c1e0:	mov	x0, #0x0                   	// #0
  41c1e4:	add	x1, x1, #0x41c
  41c1e8:	bl	404d00 <dcgettext@plt>
  41c1ec:	mov	x2, x0
  41c1f0:	mov	w1, #0x0                   	// #0
  41c1f4:	mov	w0, #0x0                   	// #0
  41c1f8:	bl	4042e0 <error@plt>
  41c1fc:	bl	40d47c <wcrtomb@plt+0x852c>
  41c200:	add	x22, sp, #0x78
  41c204:	mov	x20, x0
  41c208:	add	x1, x0, #0x200
  41c20c:	mov	x23, x22
  41c210:	add	x24, x22, #0x14
  41c214:	cmp	x20, x1
  41c218:	b.ne	41c238 <wcrtomb@plt+0x172e8>  // b.any
  41c21c:	mov	x0, x19
  41c220:	bl	405c98 <wcrtomb@plt+0xd48>
  41c224:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41c228:	mov	x19, x0
  41c22c:	cbz	x0, 41c1c8 <wcrtomb@plt+0x17278>
  41c230:	mov	x20, x0
  41c234:	add	x1, x0, #0x200
  41c238:	ldrb	w0, [x20], #1
  41c23c:	strb	w0, [x22], #1
  41c240:	cmp	w0, #0xa
  41c244:	b.ne	41c284 <wcrtomb@plt+0x17334>  // b.any
  41c248:	sturb	wzr, [x22, #-1]
  41c24c:	mov	x1, x23
  41c250:	add	x0, sp, #0x60
  41c254:	mov	x2, #0xffffffffffffffff    	// #-1
  41c258:	bl	41c0f4 <wcrtomb@plt+0x171a4>
  41c25c:	ands	w22, w0, #0xff
  41c260:	b.ne	41c2f8 <wcrtomb@plt+0x173a8>  // b.any
  41c264:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41c268:	ldr	x0, [x0, #1016]
  41c26c:	cbz	x0, 41c274 <wcrtomb@plt+0x17324>
  41c270:	blr	x0
  41c274:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41c278:	mov	w2, #0x5                   	// #5
  41c27c:	add	x1, x1, #0xf2a
  41c280:	b	41c2a8 <wcrtomb@plt+0x17358>
  41c284:	cmp	x22, x24
  41c288:	b.ne	41c214 <wcrtomb@plt+0x172c4>  // b.any
  41c28c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41c290:	ldr	x0, [x0, #1016]
  41c294:	cbz	x0, 41c29c <wcrtomb@plt+0x1734c>
  41c298:	blr	x0
  41c29c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41c2a0:	add	x1, x1, #0xefc
  41c2a4:	mov	w2, #0x5                   	// #5
  41c2a8:	mov	x0, #0x0                   	// #0
  41c2ac:	bl	404d00 <dcgettext@plt>
  41c2b0:	ldr	x1, [x21, #24]
  41c2b4:	mov	x2, x0
  41c2b8:	mov	w0, #0x0                   	// #0
  41c2bc:	mov	w22, #0x0                   	// #0
  41c2c0:	ldr	x3, [x1]
  41c2c4:	mov	w1, #0x0                   	// #0
  41c2c8:	bl	4042e0 <error@plt>
  41c2cc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41c2d0:	mov	w1, #0x2                   	// #2
  41c2d4:	str	w1, [x0, #3464]
  41c2d8:	mov	w0, w22
  41c2dc:	ldp	x19, x20, [sp, #16]
  41c2e0:	ldp	x21, x22, [sp, #32]
  41c2e4:	ldp	x23, x24, [sp, #48]
  41c2e8:	ldp	x25, x26, [sp, #64]
  41c2ec:	ldr	x27, [sp, #80]
  41c2f0:	ldp	x29, x30, [sp], #144
  41c2f4:	ret
  41c2f8:	ldr	x24, [x21, #24]
  41c2fc:	mov	x1, #0x10                  	// #16
  41c300:	ldr	x0, [sp, #96]
  41c304:	add	x27, x23, #0x14
  41c308:	str	x0, [x24, #296]
  41c30c:	mov	x26, #0x0                   	// #0
  41c310:	bl	436eac <argp_usage@@Base+0x99cc>
  41c314:	str	x0, [x24, #304]
  41c318:	ldr	x0, [x21, #24]
  41c31c:	str	xzr, [x0, #288]
  41c320:	ldr	x0, [x21, #24]
  41c324:	ldr	x0, [x0, #296]
  41c328:	cmp	x26, x0
  41c32c:	b.cc	41c350 <wcrtomb@plt+0x17400>  // b.lo, b.ul, b.last
  41c330:	mov	x0, x19
  41c334:	bl	405c98 <wcrtomb@plt+0xd48>
  41c338:	bl	405c2c <wcrtomb@plt+0xcdc>
  41c33c:	sub	x0, x0, x25
  41c340:	ldr	x1, [x21, #16]
  41c344:	add	x0, x1, x0, lsl #9
  41c348:	str	x0, [x21, #16]
  41c34c:	b	41c2d8 <wcrtomb@plt+0x17388>
  41c350:	add	x1, x19, #0x200
  41c354:	mov	x24, x23
  41c358:	cmp	x20, x1
  41c35c:	b.ne	41c37c <wcrtomb@plt+0x1742c>  // b.any
  41c360:	mov	x0, x19
  41c364:	bl	405c98 <wcrtomb@plt+0xd48>
  41c368:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41c36c:	mov	x19, x0
  41c370:	cbz	x0, 41c1c8 <wcrtomb@plt+0x17278>
  41c374:	mov	x20, x0
  41c378:	add	x1, x0, #0x200
  41c37c:	ldrb	w0, [x20], #1
  41c380:	strb	w0, [x24], #1
  41c384:	cmp	w0, #0xa
  41c388:	b.ne	41c424 <wcrtomb@plt+0x174d4>  // b.any
  41c38c:	sturb	wzr, [x24, #-1]
  41c390:	mov	x1, x23
  41c394:	add	x0, sp, #0x60
  41c398:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41c39c:	bl	41c0f4 <wcrtomb@plt+0x171a4>
  41c3a0:	tst	w0, #0xff
  41c3a4:	b.eq	41c264 <wcrtomb@plt+0x17314>  // b.none
  41c3a8:	add	x1, x19, #0x200
  41c3ac:	mov	x24, x23
  41c3b0:	ldr	x0, [sp, #96]
  41c3b4:	str	x0, [sp, #104]
  41c3b8:	cmp	x20, x1
  41c3bc:	b.ne	41c3dc <wcrtomb@plt+0x1748c>  // b.any
  41c3c0:	mov	x0, x19
  41c3c4:	bl	405c98 <wcrtomb@plt+0xd48>
  41c3c8:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41c3cc:	mov	x19, x0
  41c3d0:	cbz	x0, 41c1c8 <wcrtomb@plt+0x17278>
  41c3d4:	mov	x20, x0
  41c3d8:	add	x1, x0, #0x200
  41c3dc:	ldrb	w0, [x20], #1
  41c3e0:	strb	w0, [x24], #1
  41c3e4:	cmp	w0, #0xa
  41c3e8:	b.ne	41c430 <wcrtomb@plt+0x174e0>  // b.any
  41c3ec:	sturb	wzr, [x24, #-1]
  41c3f0:	mov	x1, x23
  41c3f4:	add	x0, sp, #0x60
  41c3f8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41c3fc:	bl	41c0f4 <wcrtomb@plt+0x171a4>
  41c400:	tst	w0, #0xff
  41c404:	b.eq	41c264 <wcrtomb@plt+0x17314>  // b.none
  41c408:	ldr	x0, [sp, #96]
  41c40c:	str	x0, [sp, #112]
  41c410:	ldr	x0, [x21, #24]
  41c414:	add	x1, sp, #0x68
  41c418:	add	x26, x26, #0x1
  41c41c:	bl	41bd20 <wcrtomb@plt+0x16dd0>
  41c420:	b	41c320 <wcrtomb@plt+0x173d0>
  41c424:	cmp	x24, x27
  41c428:	b.ne	41c358 <wcrtomb@plt+0x17408>  // b.any
  41c42c:	b	41c28c <wcrtomb@plt+0x1733c>
  41c430:	cmp	x24, x27
  41c434:	b.ne	41c3b8 <wcrtomb@plt+0x17468>  // b.any
  41c438:	b	41c28c <wcrtomb@plt+0x1733c>
  41c43c:	mov	w22, #0x1                   	// #1
  41c440:	b	41c2d8 <wcrtomb@plt+0x17388>
  41c444:	stp	x29, x30, [sp, #-48]!
  41c448:	mov	x29, sp
  41c44c:	stp	x21, x22, [sp, #32]
  41c450:	mov	x22, #0x18                  	// #24
  41c454:	mov	x21, x0
  41c458:	madd	x22, x3, x22, x2
  41c45c:	stp	x19, x20, [sp, #16]
  41c460:	mov	x20, x1
  41c464:	mov	x19, x2
  41c468:	ldr	x0, [x21]
  41c46c:	ldr	x1, [x20]
  41c470:	ldr	x2, [x0, #288]
  41c474:	cmp	x1, x2
  41c478:	b.cs	41c484 <wcrtomb@plt+0x17534>  // b.hs, b.nlast
  41c47c:	cmp	x19, x22
  41c480:	b.ne	41c494 <wcrtomb@plt+0x17544>  // b.any
  41c484:	ldp	x19, x20, [sp, #16]
  41c488:	ldp	x21, x22, [sp, #32]
  41c48c:	ldp	x29, x30, [sp], #48
  41c490:	ret
  41c494:	ldr	x0, [x0, #304]
  41c498:	lsl	x4, x1, #4
  41c49c:	mov	x2, #0xc                   	// #12
  41c4a0:	mov	x1, x19
  41c4a4:	ldr	x0, [x0, x4]
  41c4a8:	bl	40a884 <wcrtomb@plt+0x5934>
  41c4ac:	ldr	x1, [x21]
  41c4b0:	mov	x2, #0xc                   	// #12
  41c4b4:	ldr	x0, [x20]
  41c4b8:	ldr	x1, [x1, #304]
  41c4bc:	add	x0, x1, x0, lsl #4
  41c4c0:	add	x1, x19, x2
  41c4c4:	add	x19, x19, #0x18
  41c4c8:	ldr	x0, [x0, #8]
  41c4cc:	bl	40a884 <wcrtomb@plt+0x5934>
  41c4d0:	ldr	x0, [x20]
  41c4d4:	add	x0, x0, #0x1
  41c4d8:	str	x0, [x20]
  41c4dc:	b	41c468 <wcrtomb@plt+0x17518>
  41c4e0:	stp	x29, x30, [sp, #-64]!
  41c4e4:	mov	x29, sp
  41c4e8:	stp	x19, x20, [sp, #16]
  41c4ec:	mov	x20, x0
  41c4f0:	stp	x21, x22, [sp, #32]
  41c4f4:	bl	405c2c <wcrtomb@plt+0xcdc>
  41c4f8:	mov	x22, x0
  41c4fc:	ldr	x0, [x20, #24]
  41c500:	bl	40ac90 <wcrtomb@plt+0x5d40>
  41c504:	mov	x19, x0
  41c508:	mov	w0, #0x53                  	// #83
  41c50c:	strb	w0, [x19, #156]
  41c510:	ldr	x0, [x20, #24]
  41c514:	ldr	x1, [x0, #288]
  41c518:	cmp	x1, #0x4
  41c51c:	b.ls	41c528 <wcrtomb@plt+0x175d8>  // b.plast
  41c520:	mov	w1, #0x1                   	// #1
  41c524:	strb	w1, [x19, #482]
  41c528:	ldr	x0, [x0, #136]
  41c52c:	mov	x21, x20
  41c530:	add	x1, x19, #0x1e3
  41c534:	mov	x2, #0xc                   	// #12
  41c538:	bl	40a884 <wcrtomb@plt+0x5934>
  41c53c:	ldr	x0, [x21, #24]!
  41c540:	add	x1, x19, #0x7c
  41c544:	mov	x2, #0xc                   	// #12
  41c548:	ldr	x0, [x0, #264]
  41c54c:	bl	40a884 <wcrtomb@plt+0x5934>
  41c550:	str	xzr, [sp, #56]
  41c554:	add	x2, x19, #0x182
  41c558:	add	x1, sp, #0x38
  41c55c:	mov	x0, x21
  41c560:	mov	x3, #0x4                   	// #4
  41c564:	bl	41c444 <wcrtomb@plt+0x174f4>
  41c568:	ldr	x0, [x20, #24]
  41c56c:	ldr	x1, [sp, #56]
  41c570:	ldr	x2, [x0, #288]
  41c574:	cmp	x2, x1
  41c578:	mov	x2, x22
  41c57c:	cset	w1, hi  // hi = pmore
  41c580:	mov	w22, #0x1                   	// #1
  41c584:	strb	w1, [x19, #482]
  41c588:	mov	x1, x19
  41c58c:	bl	40aacc <wcrtomb@plt+0x5b7c>
  41c590:	ldr	x0, [x20, #24]
  41c594:	ldr	x1, [x0, #288]
  41c598:	ldr	x0, [sp, #56]
  41c59c:	cmp	x1, x0
  41c5a0:	b.hi	41c5b8 <wcrtomb@plt+0x17668>  // b.pmore
  41c5a4:	mov	w0, #0x1                   	// #1
  41c5a8:	ldp	x19, x20, [sp, #16]
  41c5ac:	ldp	x21, x22, [sp, #32]
  41c5b0:	ldp	x29, x30, [sp], #64
  41c5b4:	ret
  41c5b8:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41c5bc:	mov	x19, x0
  41c5c0:	mov	x2, #0x200                 	// #512
  41c5c4:	mov	w1, #0x0                   	// #0
  41c5c8:	bl	404700 <memset@plt>
  41c5cc:	add	x1, sp, #0x38
  41c5d0:	mov	x0, x21
  41c5d4:	mov	x2, x19
  41c5d8:	mov	x3, #0x15                  	// #21
  41c5dc:	bl	41c444 <wcrtomb@plt+0x174f4>
  41c5e0:	ldr	x0, [x20, #24]
  41c5e4:	ldr	x1, [x0, #288]
  41c5e8:	ldr	x0, [sp, #56]
  41c5ec:	cmp	x1, x0
  41c5f0:	b.ls	41c5f8 <wcrtomb@plt+0x176a8>  // b.plast
  41c5f4:	strb	w22, [x19, #504]
  41c5f8:	mov	x0, x19
  41c5fc:	bl	405c98 <wcrtomb@plt+0xd48>
  41c600:	b	41c590 <wcrtomb@plt+0x17640>
  41c604:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41c608:	ldr	x0, [x0, #4080]
  41c60c:	ldrb	w0, [x0, #156]
  41c610:	cmp	w0, #0x53
  41c614:	cset	w0, eq  // eq = none
  41c618:	ret
  41c61c:	sub	sp, sp, #0x250
  41c620:	mov	x2, #0x0                   	// #0
  41c624:	mov	w1, #0x0                   	// #0
  41c628:	stp	x29, x30, [sp]
  41c62c:	mov	x29, sp
  41c630:	stp	x19, x20, [sp, #16]
  41c634:	ldr	x20, [x0, #24]
  41c638:	stp	x21, x22, [sp, #32]
  41c63c:	mov	x21, x0
  41c640:	str	x23, [sp, #48]
  41c644:	ldr	w23, [x0]
  41c648:	str	xzr, [x20, #264]
  41c64c:	stp	xzr, xzr, [sp, #64]
  41c650:	bl	41b4c8 <wcrtomb@plt+0x16578>
  41c654:	tst	w0, #0xff
  41c658:	b.ne	41c728 <wcrtomb@plt+0x177d8>  // b.any
  41c65c:	mov	w0, #0x0                   	// #0
  41c660:	ldp	x29, x30, [sp]
  41c664:	ldp	x19, x20, [sp, #16]
  41c668:	ldp	x21, x22, [sp, #32]
  41c66c:	ldr	x23, [sp, #48]
  41c670:	add	sp, sp, #0x250
  41c674:	ret
  41c678:	mov	x0, #0x0                   	// #0
  41c67c:	add	x0, x0, #0x1
  41c680:	add	x1, sp, #0x50
  41c684:	add	x1, x1, x0
  41c688:	ldurb	w1, [x1, #-1]
  41c68c:	cbnz	w1, 41c730 <wcrtomb@plt+0x177e0>
  41c690:	cmp	x19, x0
  41c694:	b.ne	41c67c <wcrtomb@plt+0x1772c>  // b.any
  41c698:	ldr	x0, [sp, #72]
  41c69c:	cbz	x0, 41c6c8 <wcrtomb@plt+0x17778>
  41c6a0:	add	x1, sp, #0x40
  41c6a4:	mov	x0, x20
  41c6a8:	bl	41bd20 <wcrtomb@plt+0x16dd0>
  41c6ac:	str	xzr, [sp, #72]
  41c6b0:	mov	x2, #0x0                   	// #0
  41c6b4:	mov	x0, x21
  41c6b8:	mov	w1, #0x1                   	// #1
  41c6bc:	bl	41b4c8 <wcrtomb@plt+0x16578>
  41c6c0:	tst	w0, #0xff
  41c6c4:	b.eq	41c65c <wcrtomb@plt+0x1770c>  // b.none
  41c6c8:	add	x22, x22, x19
  41c6cc:	add	x1, sp, #0x50
  41c6d0:	mov	w0, w23
  41c6d4:	mov	x2, #0x200                 	// #512
  41c6d8:	bl	4188e4 <wcrtomb@plt+0x13994>
  41c6dc:	mov	x19, x0
  41c6e0:	cbz	x0, 41c6ec <wcrtomb@plt+0x1779c>
  41c6e4:	cmn	x0, #0x1
  41c6e8:	b.ne	41c678 <wcrtomb@plt+0x17728>  // b.any
  41c6ec:	ldr	x0, [sp, #72]
  41c6f0:	cbnz	x0, 41c6f8 <wcrtomb@plt+0x177a8>
  41c6f4:	str	x22, [sp, #64]
  41c6f8:	add	x1, sp, #0x40
  41c6fc:	mov	x0, x20
  41c700:	bl	41bd20 <wcrtomb@plt+0x16dd0>
  41c704:	ldr	x0, [x20, #264]
  41c708:	mov	x2, #0x0                   	// #0
  41c70c:	mov	w1, #0x2                   	// #2
  41c710:	add	x19, x0, x19
  41c714:	str	x19, [x20, #264]
  41c718:	mov	x0, x21
  41c71c:	bl	41b4c8 <wcrtomb@plt+0x16578>
  41c720:	and	w0, w0, #0xff
  41c724:	b	41c660 <wcrtomb@plt+0x17710>
  41c728:	mov	x22, #0x0                   	// #0
  41c72c:	b	41c6cc <wcrtomb@plt+0x1777c>
  41c730:	ldr	x0, [sp, #72]
  41c734:	cbnz	x0, 41c73c <wcrtomb@plt+0x177ec>
  41c738:	str	x22, [sp, #64]
  41c73c:	add	x0, x0, x19
  41c740:	str	x0, [sp, #72]
  41c744:	ldr	x0, [x20, #264]
  41c748:	add	x2, sp, #0x50
  41c74c:	add	x0, x0, x19
  41c750:	str	x0, [x20, #264]
  41c754:	b	41c6b4 <wcrtomb@plt+0x17764>
  41c758:	stp	x29, x30, [sp, #-112]!
  41c75c:	mov	x29, sp
  41c760:	stp	x19, x20, [sp, #16]
  41c764:	mov	x20, x0
  41c768:	ldr	x1, [x0, #24]
  41c76c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41c770:	stp	x21, x22, [sp, #32]
  41c774:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  41c778:	ldr	w0, [x0, #616]
  41c77c:	ldr	w2, [x21, #96]
  41c780:	stp	x23, x24, [sp, #48]
  41c784:	stp	x25, x26, [sp, #64]
  41c788:	str	w0, [x1, #276]
  41c78c:	str	w2, [x1, #280]
  41c790:	cbnz	w0, 41c9ac <wcrtomb@plt+0x17a5c>
  41c794:	bl	405c2c <wcrtomb@plt+0xcdc>
  41c798:	mov	x23, x0
  41c79c:	ldr	x1, [x20, #24]
  41c7a0:	mov	x2, #0x0                   	// #0
  41c7a4:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  41c7a8:	add	x0, x0, #0x16c
  41c7ac:	adrp	x19, 448000 <_obstack_memory_used@@Base+0x10380>
  41c7b0:	add	x19, x19, #0x190
  41c7b4:	ldr	x25, [x1, #304]
  41c7b8:	bl	4122e8 <wcrtomb@plt+0xd398>
  41c7bc:	ldr	x1, [x20, #24]
  41c7c0:	mov	x2, #0x0                   	// #0
  41c7c4:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  41c7c8:	add	x0, x0, #0x157
  41c7cc:	bl	4122e8 <wcrtomb@plt+0xd398>
  41c7d0:	mov	x0, x19
  41c7d4:	bl	4117a8 <wcrtomb@plt+0xc858>
  41c7d8:	tst	w0, #0xff
  41c7dc:	b.ne	41c7e8 <wcrtomb@plt+0x17898>  // b.any
  41c7e0:	ldr	w0, [x21, #96]
  41c7e4:	cbnz	w0, 41c88c <wcrtomb@plt+0x1793c>
  41c7e8:	adrp	x19, 447000 <_obstack_memory_used@@Base+0xf380>
  41c7ec:	adrp	x21, 448000 <_obstack_memory_used@@Base+0x10380>
  41c7f0:	add	x19, x19, #0xfae
  41c7f4:	add	x21, x21, #0x17c
  41c7f8:	str	xzr, [sp, #80]
  41c7fc:	ldr	x1, [x20, #24]
  41c800:	ldr	x0, [sp, #80]
  41c804:	ldr	x2, [x1, #288]
  41c808:	cmp	x2, x0
  41c80c:	b.hi	41c860 <wcrtomb@plt+0x17910>  // b.pmore
  41c810:	mov	x21, #0x0                   	// #0
  41c814:	ldr	x19, [x20, #24]
  41c818:	ldr	x0, [x19, #264]
  41c81c:	ldr	x22, [x19, #136]
  41c820:	str	x0, [x19, #136]
  41c824:	mov	x0, x19
  41c828:	bl	40ac90 <wcrtomb@plt+0x5d40>
  41c82c:	mov	x1, x0
  41c830:	ldr	x0, [x20, #24]
  41c834:	str	x22, [x19, #136]
  41c838:	mov	x2, x23
  41c83c:	bl	40aacc <wcrtomb@plt+0x5b7c>
  41c840:	cbz	x21, 41c858 <wcrtomb@plt+0x17908>
  41c844:	ldr	x0, [x20, #24]
  41c848:	ldr	x0, [x0, #8]
  41c84c:	bl	404ae0 <free@plt>
  41c850:	ldr	x0, [x20, #24]
  41c854:	str	x21, [x0, #8]
  41c858:	mov	w19, #0x1                   	// #1
  41c85c:	b	41c914 <wcrtomb@plt+0x179c4>
  41c860:	add	x2, sp, #0x50
  41c864:	mov	x0, x19
  41c868:	bl	4122e8 <wcrtomb@plt+0xd398>
  41c86c:	ldr	x1, [x20, #24]
  41c870:	mov	x0, x21
  41c874:	add	x2, sp, #0x50
  41c878:	bl	4122e8 <wcrtomb@plt+0xd398>
  41c87c:	ldr	x0, [sp, #80]
  41c880:	add	x0, x0, #0x1
  41c884:	str	x0, [sp, #80]
  41c888:	b	41c7fc <wcrtomb@plt+0x178ac>
  41c88c:	ldr	x1, [x20, #24]
  41c890:	mov	x2, #0x0                   	// #0
  41c894:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  41c898:	add	x0, x0, #0x111
  41c89c:	bl	4122e8 <wcrtomb@plt+0xd398>
  41c8a0:	ldr	x22, [x20, #24]
  41c8a4:	mov	x2, #0x0                   	// #0
  41c8a8:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41c8ac:	add	x1, x1, #0xf4e
  41c8b0:	mov	x0, x22
  41c8b4:	ldr	x21, [x22, #8]
  41c8b8:	bl	411bbc <wcrtomb@plt+0xcc6c>
  41c8bc:	str	x0, [x22, #8]
  41c8c0:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x15380>
  41c8c4:	ldr	x0, [x20, #24]
  41c8c8:	add	x22, x22, #0x420
  41c8cc:	add	x0, x0, #0x158
  41c8d0:	bl	4126bc <wcrtomb@plt+0xd76c>
  41c8d4:	str	xzr, [sp, #80]
  41c8d8:	ldr	x2, [x20, #24]
  41c8dc:	ldr	x1, [sp, #80]
  41c8e0:	add	x0, x2, #0x158
  41c8e4:	ldr	x2, [x2, #288]
  41c8e8:	cmp	x1, x2
  41c8ec:	b.cc	41c930 <wcrtomb@plt+0x179e0>  // b.lo, b.ul, b.last
  41c8f0:	mov	x1, x19
  41c8f4:	bl	412724 <wcrtomb@plt+0xd7d4>
  41c8f8:	ands	w19, w0, #0xff
  41c8fc:	b.ne	41c814 <wcrtomb@plt+0x178c4>  // b.any
  41c900:	ldr	x0, [x20, #24]
  41c904:	ldr	x0, [x0, #8]
  41c908:	bl	404ae0 <free@plt>
  41c90c:	ldr	x0, [x20, #24]
  41c910:	str	x21, [x0, #8]
  41c914:	mov	w0, w19
  41c918:	ldp	x19, x20, [sp, #16]
  41c91c:	ldp	x21, x22, [sp, #32]
  41c920:	ldp	x23, x24, [sp, #48]
  41c924:	ldp	x25, x26, [sp, #64]
  41c928:	ldp	x29, x30, [sp], #112
  41c92c:	ret
  41c930:	cbz	x1, 41c93c <wcrtomb@plt+0x179ec>
  41c934:	mov	x1, x22
  41c938:	bl	4126c4 <wcrtomb@plt+0xd774>
  41c93c:	ldr	x0, [sp, #80]
  41c940:	add	x1, sp, #0x58
  41c944:	ldr	x24, [x20, #24]
  41c948:	lsl	x0, x0, #4
  41c94c:	add	x24, x24, #0x158
  41c950:	ldr	x0, [x25, x0]
  41c954:	bl	431400 <argp_usage@@Base+0x3f20>
  41c958:	mov	x1, x0
  41c95c:	mov	x0, x24
  41c960:	bl	4126c4 <wcrtomb@plt+0xd774>
  41c964:	ldr	x0, [x20, #24]
  41c968:	mov	x1, x22
  41c96c:	add	x0, x0, #0x158
  41c970:	bl	4126c4 <wcrtomb@plt+0xd774>
  41c974:	ldr	x0, [sp, #80]
  41c978:	add	x1, sp, #0x58
  41c97c:	ldr	x24, [x20, #24]
  41c980:	add	x0, x25, x0, lsl #4
  41c984:	add	x24, x24, #0x158
  41c988:	ldr	x0, [x0, #8]
  41c98c:	bl	431400 <argp_usage@@Base+0x3f20>
  41c990:	mov	x1, x0
  41c994:	mov	x0, x24
  41c998:	bl	4126c4 <wcrtomb@plt+0xd774>
  41c99c:	ldr	x0, [sp, #80]
  41c9a0:	add	x0, x0, #0x1
  41c9a4:	str	x0, [sp, #80]
  41c9a8:	b	41c8d8 <wcrtomb@plt+0x17988>
  41c9ac:	bl	405c2c <wcrtomb@plt+0xcdc>
  41c9b0:	mov	x22, x0
  41c9b4:	ldr	x0, [x20, #24]
  41c9b8:	add	x1, sp, #0x58
  41c9bc:	mov	x26, #0x0                   	// #0
  41c9c0:	ldr	x23, [x0, #8]
  41c9c4:	ldr	x21, [x0, #304]
  41c9c8:	ldr	x0, [x0, #288]
  41c9cc:	mov	x25, x21
  41c9d0:	bl	431400 <argp_usage@@Base+0x3f20>
  41c9d4:	bl	404280 <strlen@plt>
  41c9d8:	add	x19, x0, #0x1
  41c9dc:	ldr	x1, [x20, #24]
  41c9e0:	ldr	x0, [x1, #288]
  41c9e4:	cmp	x26, x0
  41c9e8:	b.cc	41cb4c <wcrtomb@plt+0x17bfc>  // b.lo, b.ul, b.last
  41c9ec:	add	x19, x19, #0x1ff
  41c9f0:	mov	x0, #0x200                 	// #512
  41c9f4:	mov	x2, #0x0                   	// #0
  41c9f8:	sdiv	x19, x19, x0
  41c9fc:	ldr	x0, [x1, #264]
  41ca00:	add	x0, x0, x19, lsl #9
  41ca04:	str	x0, [x1, #264]
  41ca08:	ldr	x0, [x20, #16]
  41ca0c:	add	x19, x0, x19, lsl #9
  41ca10:	str	x19, [x20, #16]
  41ca14:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  41ca18:	add	x0, x0, #0x121
  41ca1c:	bl	4122e8 <wcrtomb@plt+0xd398>
  41ca20:	ldr	x1, [x20, #24]
  41ca24:	mov	x2, #0x0                   	// #0
  41ca28:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  41ca2c:	add	x0, x0, #0x132
  41ca30:	bl	4122e8 <wcrtomb@plt+0xd398>
  41ca34:	ldr	x1, [x20, #24]
  41ca38:	mov	x2, #0x0                   	// #0
  41ca3c:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  41ca40:	add	x0, x0, #0x111
  41ca44:	bl	4122e8 <wcrtomb@plt+0xd398>
  41ca48:	ldr	x1, [x20, #24]
  41ca4c:	mov	x2, #0x0                   	// #0
  41ca50:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  41ca54:	add	x0, x0, #0x143
  41ca58:	bl	4122e8 <wcrtomb@plt+0xd398>
  41ca5c:	ldr	x19, [x20, #24]
  41ca60:	mov	x2, #0x0                   	// #0
  41ca64:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41ca68:	add	x1, x1, #0xf4e
  41ca6c:	mov	x0, x19
  41ca70:	bl	411bbc <wcrtomb@plt+0xcc6c>
  41ca74:	str	x0, [x19, #8]
  41ca78:	ldr	x0, [x20, #24]
  41ca7c:	ldr	x19, [x0, #8]
  41ca80:	mov	x0, x19
  41ca84:	bl	404280 <strlen@plt>
  41ca88:	cmp	x0, #0x64
  41ca8c:	b.ls	41ca94 <wcrtomb@plt+0x17b44>  // b.plast
  41ca90:	strb	wzr, [x19, #100]
  41ca94:	ldr	x19, [x20, #24]
  41ca98:	ldr	x0, [x19, #264]
  41ca9c:	ldr	x24, [x19, #136]
  41caa0:	str	x0, [x19, #136]
  41caa4:	mov	x0, x19
  41caa8:	bl	40ac90 <wcrtomb@plt+0x5d40>
  41caac:	mov	x1, x0
  41cab0:	ldr	x0, [x20, #24]
  41cab4:	str	x24, [x19, #136]
  41cab8:	mov	x2, x22
  41cabc:	bl	40aacc <wcrtomb@plt+0x5b7c>
  41cac0:	ldr	x0, [x20, #24]
  41cac4:	ldr	x0, [x0, #8]
  41cac8:	bl	404ae0 <free@plt>
  41cacc:	ldr	x0, [x20, #24]
  41cad0:	str	x23, [x0, #8]
  41cad4:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41cad8:	mov	x25, x0
  41cadc:	mov	x19, x0
  41cae0:	add	x1, sp, #0x58
  41cae4:	ldr	x0, [x20, #24]
  41cae8:	ldr	x0, [x0, #288]
  41caec:	bl	431400 <argp_usage@@Base+0x3f20>
  41caf0:	mov	x22, x0
  41caf4:	add	x0, x25, #0x200
  41caf8:	ldrb	w1, [x22]
  41cafc:	cbnz	w1, 41cb88 <wcrtomb@plt+0x17c38>
  41cb00:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x15380>
  41cb04:	add	x22, x22, #0xa99
  41cb08:	add	x0, x25, #0x200
  41cb0c:	mov	x24, x22
  41cb10:	ldrb	w23, [x22]
  41cb14:	cbnz	w23, 41cbb4 <wcrtomb@plt+0x17c64>
  41cb18:	mov	x23, #0x0                   	// #0
  41cb1c:	ldr	x0, [x20, #24]
  41cb20:	ldr	x0, [x0, #288]
  41cb24:	cmp	x23, x0
  41cb28:	b.cc	41cbe0 <wcrtomb@plt+0x17c90>  // b.lo, b.ul, b.last
  41cb2c:	sub	x2, x25, x19
  41cb30:	mov	w1, #0x0                   	// #0
  41cb34:	add	x2, x2, #0x200
  41cb38:	mov	x0, x19
  41cb3c:	bl	404700 <memset@plt>
  41cb40:	mov	x0, x25
  41cb44:	bl	405c98 <wcrtomb@plt+0xd48>
  41cb48:	b	41c858 <wcrtomb@plt+0x17908>
  41cb4c:	ldr	x0, [x25]
  41cb50:	add	x1, sp, #0x58
  41cb54:	add	x19, x19, #0x2
  41cb58:	add	x26, x26, #0x1
  41cb5c:	add	x25, x25, #0x10
  41cb60:	bl	431400 <argp_usage@@Base+0x3f20>
  41cb64:	bl	404280 <strlen@plt>
  41cb68:	mov	x24, x0
  41cb6c:	ldur	x0, [x25, #-8]
  41cb70:	add	x1, sp, #0x58
  41cb74:	bl	431400 <argp_usage@@Base+0x3f20>
  41cb78:	bl	404280 <strlen@plt>
  41cb7c:	add	x0, x24, x0
  41cb80:	add	x19, x19, x0
  41cb84:	b	41c9dc <wcrtomb@plt+0x17a8c>
  41cb88:	cmp	x19, x0
  41cb8c:	b.ne	41cba8 <wcrtomb@plt+0x17c58>  // b.any
  41cb90:	mov	x0, x25
  41cb94:	bl	405c98 <wcrtomb@plt+0xd48>
  41cb98:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41cb9c:	mov	x25, x0
  41cba0:	mov	x19, x0
  41cba4:	add	x0, x0, #0x200
  41cba8:	ldrb	w1, [x22], #1
  41cbac:	strb	w1, [x19], #1
  41cbb0:	b	41caf8 <wcrtomb@plt+0x17ba8>
  41cbb4:	cmp	x19, x0
  41cbb8:	b.ne	41cbd4 <wcrtomb@plt+0x17c84>  // b.any
  41cbbc:	mov	x0, x25
  41cbc0:	bl	405c98 <wcrtomb@plt+0xd48>
  41cbc4:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41cbc8:	mov	x25, x0
  41cbcc:	mov	x19, x0
  41cbd0:	add	x0, x0, #0x200
  41cbd4:	add	x22, x22, #0x1
  41cbd8:	strb	w23, [x19], #1
  41cbdc:	b	41cb10 <wcrtomb@plt+0x17bc0>
  41cbe0:	ldr	x0, [x21]
  41cbe4:	add	x1, sp, #0x58
  41cbe8:	bl	431400 <argp_usage@@Base+0x3f20>
  41cbec:	mov	x22, x0
  41cbf0:	add	x0, x25, #0x200
  41cbf4:	ldrb	w1, [x22]
  41cbf8:	cbnz	w1, 41cc44 <wcrtomb@plt+0x17cf4>
  41cbfc:	add	x0, x25, #0x200
  41cc00:	mov	x22, x24
  41cc04:	ldrb	w26, [x22]
  41cc08:	cbnz	w26, 41cc70 <wcrtomb@plt+0x17d20>
  41cc0c:	ldr	x0, [x21, #8]
  41cc10:	add	x1, sp, #0x58
  41cc14:	bl	431400 <argp_usage@@Base+0x3f20>
  41cc18:	mov	x22, x0
  41cc1c:	add	x0, x25, #0x200
  41cc20:	ldrb	w1, [x22]
  41cc24:	cbnz	w1, 41cc9c <wcrtomb@plt+0x17d4c>
  41cc28:	add	x0, x25, #0x200
  41cc2c:	mov	x22, x24
  41cc30:	ldrb	w26, [x22]
  41cc34:	cbnz	w26, 41ccc8 <wcrtomb@plt+0x17d78>
  41cc38:	add	x23, x23, #0x1
  41cc3c:	add	x21, x21, #0x10
  41cc40:	b	41cb1c <wcrtomb@plt+0x17bcc>
  41cc44:	cmp	x19, x0
  41cc48:	b.ne	41cc64 <wcrtomb@plt+0x17d14>  // b.any
  41cc4c:	mov	x0, x25
  41cc50:	bl	405c98 <wcrtomb@plt+0xd48>
  41cc54:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41cc58:	mov	x25, x0
  41cc5c:	mov	x19, x0
  41cc60:	add	x0, x0, #0x200
  41cc64:	ldrb	w1, [x22], #1
  41cc68:	strb	w1, [x19], #1
  41cc6c:	b	41cbf4 <wcrtomb@plt+0x17ca4>
  41cc70:	cmp	x19, x0
  41cc74:	b.ne	41cc90 <wcrtomb@plt+0x17d40>  // b.any
  41cc78:	mov	x0, x25
  41cc7c:	bl	405c98 <wcrtomb@plt+0xd48>
  41cc80:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41cc84:	mov	x25, x0
  41cc88:	mov	x19, x0
  41cc8c:	add	x0, x0, #0x200
  41cc90:	add	x22, x22, #0x1
  41cc94:	strb	w26, [x19], #1
  41cc98:	b	41cc04 <wcrtomb@plt+0x17cb4>
  41cc9c:	cmp	x19, x0
  41cca0:	b.ne	41ccbc <wcrtomb@plt+0x17d6c>  // b.any
  41cca4:	mov	x0, x25
  41cca8:	bl	405c98 <wcrtomb@plt+0xd48>
  41ccac:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41ccb0:	mov	x25, x0
  41ccb4:	mov	x19, x0
  41ccb8:	add	x0, x0, #0x200
  41ccbc:	ldrb	w1, [x22], #1
  41ccc0:	strb	w1, [x19], #1
  41ccc4:	b	41cc20 <wcrtomb@plt+0x17cd0>
  41ccc8:	cmp	x19, x0
  41cccc:	b.ne	41cce8 <wcrtomb@plt+0x17d98>  // b.any
  41ccd0:	mov	x0, x25
  41ccd4:	bl	405c98 <wcrtomb@plt+0xd48>
  41ccd8:	bl	406f04 <wcrtomb@plt+0x1fb4>
  41ccdc:	mov	x25, x0
  41cce0:	mov	x19, x0
  41cce4:	add	x0, x0, #0x200
  41cce8:	add	x22, x22, #0x1
  41ccec:	strb	w26, [x19], #1
  41ccf0:	b	41cc30 <wcrtomb@plt+0x17ce0>
  41ccf4:	stp	x29, x30, [sp, #-128]!
  41ccf8:	mov	x29, sp
  41ccfc:	stp	x19, x20, [sp, #16]
  41cd00:	mov	x19, x1
  41cd04:	stp	x21, x22, [sp, #32]
  41cd08:	mov	w22, w0
  41cd0c:	add	x0, sp, #0x50
  41cd10:	stp	x23, x24, [sp, #48]
  41cd14:	bl	41b5dc <wcrtomb@plt+0x1668c>
  41cd18:	ands	w20, w0, #0xff
  41cd1c:	b.eq	41cedc <wcrtomb@plt+0x17f8c>  // b.none
  41cd20:	mov	w0, #0x1                   	// #1
  41cd24:	strb	w0, [sp, #84]
  41cd28:	ldr	x0, [x19, #152]
  41cd2c:	str	xzr, [sp, #72]
  41cd30:	str	w22, [sp, #80]
  41cd34:	str	x19, [sp, #104]
  41cd38:	cbz	x0, 41cd94 <wcrtomb@plt+0x17e44>
  41cd3c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41cd40:	ldr	w0, [x0, #924]
  41cd44:	cmp	w0, #0x1
  41cd48:	b.eq	41ce98 <wcrtomb@plt+0x17f48>  // b.none
  41cd4c:	tst	w0, #0xfffffffd
  41cd50:	b.eq	41ce20 <wcrtomb@plt+0x17ed0>  // b.none
  41cd54:	mov	w20, #0x0                   	// #0
  41cd58:	ldr	x0, [sp, #104]
  41cd5c:	eor	w20, w20, #0x1
  41cd60:	ldr	x1, [x0, #264]
  41cd64:	ldr	x0, [sp, #96]
  41cd68:	sub	x0, x1, x0
  41cd6c:	bl	40b59c <wcrtomb@plt+0x664c>
  41cd70:	add	x0, sp, #0x50
  41cd74:	bl	41b4ac <wcrtomb@plt+0x1655c>
  41cd78:	tst	w0, #0xff
  41cd7c:	csinc	w0, w20, wzr, ne  // ne = any
  41cd80:	ldp	x19, x20, [sp, #16]
  41cd84:	ldp	x21, x22, [sp, #32]
  41cd88:	ldp	x23, x24, [sp, #48]
  41cd8c:	ldp	x29, x30, [sp], #128
  41cd90:	ret
  41cd94:	str	xzr, [x19, #264]
  41cd98:	ldr	x0, [x19, #136]
  41cd9c:	add	x1, sp, #0x40
  41cda0:	str	x0, [sp, #64]
  41cda4:	mov	x0, x19
  41cda8:	bl	41bd20 <wcrtomb@plt+0x16dd0>
  41cdac:	ldr	x0, [sp, #112]
  41cdb0:	ldr	x1, [x0, #56]
  41cdb4:	cbz	x1, 41cd58 <wcrtomb@plt+0x17e08>
  41cdb8:	ldr	x1, [x0, #24]
  41cdbc:	cbz	x1, 41cdc8 <wcrtomb@plt+0x17e78>
  41cdc0:	add	x0, sp, #0x50
  41cdc4:	blr	x1
  41cdc8:	tbnz	w22, #31, 41cd58 <wcrtomb@plt+0x17e08>
  41cdcc:	ldp	x1, x0, [sp, #96]
  41cdd0:	mov	x19, #0x0                   	// #0
  41cdd4:	ldr	x2, [x0, #264]
  41cdd8:	sub	x2, x2, x1
  41cddc:	ldr	x1, [x0, #136]
  41cde0:	ldr	x0, [x0, #8]
  41cde4:	bl	405808 <wcrtomb@plt+0x8b8>
  41cde8:	ldr	x0, [sp, #104]
  41cdec:	ldr	x0, [x0, #288]
  41cdf0:	cmp	x0, x19
  41cdf4:	b.ls	41cd58 <wcrtomb@plt+0x17e08>  // b.plast
  41cdf8:	ldr	x0, [sp, #112]
  41cdfc:	ldr	x2, [x0, #56]
  41ce00:	cbz	x2, 41cd54 <wcrtomb@plt+0x17e04>
  41ce04:	mov	x1, x19
  41ce08:	add	x0, sp, #0x50
  41ce0c:	add	x19, x19, #0x1
  41ce10:	blr	x2
  41ce14:	tst	w0, #0xff
  41ce18:	b.ne	41cde8 <wcrtomb@plt+0x17e98>  // b.any
  41ce1c:	b	41cd54 <wcrtomb@plt+0x17e04>
  41ce20:	mov	x23, #0x0                   	// #0
  41ce24:	str	xzr, [sp, #64]
  41ce28:	str	xzr, [x19, #264]
  41ce2c:	mov	x1, x23
  41ce30:	mov	w0, w22
  41ce34:	mov	w2, #0x3                   	// #3
  41ce38:	bl	404480 <lseek@plt>
  41ce3c:	mov	x21, x0
  41ce40:	cmn	x0, #0x1
  41ce44:	b.ne	41ce60 <wcrtomb@plt+0x17f10>  // b.any
  41ce48:	bl	404e10 <__errno_location@plt>
  41ce4c:	ldr	w0, [x0]
  41ce50:	cmp	w0, #0x6
  41ce54:	b.ne	41ce98 <wcrtomb@plt+0x17f48>  // b.any
  41ce58:	str	xzr, [sp, #72]
  41ce5c:	b	41cd98 <wcrtomb@plt+0x17e48>
  41ce60:	mov	x1, x0
  41ce64:	mov	w2, #0x4                   	// #4
  41ce68:	mov	w0, w22
  41ce6c:	orr	x23, x23, x21
  41ce70:	bl	404480 <lseek@plt>
  41ce74:	mov	x24, x0
  41ce78:	cbnz	x23, 41ceac <wcrtomb@plt+0x17f5c>
  41ce7c:	ldr	x0, [x19, #136]
  41ce80:	cmp	x24, x0
  41ce84:	b.ne	41ceac <wcrtomb@plt+0x17f5c>  // b.any
  41ce88:	mov	w0, w22
  41ce8c:	mov	w2, #0x0                   	// #0
  41ce90:	mov	x1, #0x0                   	// #0
  41ce94:	bl	404480 <lseek@plt>
  41ce98:	add	x0, sp, #0x50
  41ce9c:	bl	41c61c <wcrtomb@plt+0x176cc>
  41cea0:	tst	w0, #0xff
  41cea4:	b.eq	41cd54 <wcrtomb@plt+0x17e04>  // b.none
  41cea8:	b	41cdac <wcrtomb@plt+0x17e5c>
  41ceac:	add	x1, sp, #0x40
  41ceb0:	mov	x0, x19
  41ceb4:	str	x21, [sp, #64]
  41ceb8:	sub	x21, x24, x21
  41cebc:	str	x21, [sp, #72]
  41cec0:	bl	41bd20 <wcrtomb@plt+0x16dd0>
  41cec4:	ldr	x1, [sp, #72]
  41cec8:	mov	x23, x24
  41cecc:	ldr	x0, [x19, #264]
  41ced0:	add	x0, x0, x1
  41ced4:	str	x0, [x19, #264]
  41ced8:	b	41ce2c <wcrtomb@plt+0x17edc>
  41cedc:	mov	w0, #0x3                   	// #3
  41cee0:	b	41cd80 <wcrtomb@plt+0x17e30>
  41cee4:	mov	x3, x0
  41cee8:	stp	x29, x30, [sp, #-64]!
  41ceec:	mov	x29, sp
  41cef0:	add	x0, sp, #0x10
  41cef4:	bl	41b5dc <wcrtomb@plt+0x1668c>
  41cef8:	tst	w0, #0xff
  41cefc:	b.ne	41cf0c <wcrtomb@plt+0x17fbc>  // b.any
  41cf00:	mov	w0, #0x0                   	// #0
  41cf04:	ldp	x29, x30, [sp], #64
  41cf08:	ret
  41cf0c:	ldr	x0, [sp, #48]
  41cf10:	ldr	x1, [x0, #16]
  41cf14:	str	x3, [sp, #40]
  41cf18:	cbz	x1, 41cf00 <wcrtomb@plt+0x17fb0>
  41cf1c:	add	x0, sp, #0x10
  41cf20:	blr	x1
  41cf24:	and	w0, w0, #0xff
  41cf28:	b	41cf04 <wcrtomb@plt+0x17fb4>
  41cf2c:	mov	x3, x0
  41cf30:	stp	x29, x30, [sp, #-64]!
  41cf34:	mov	x29, sp
  41cf38:	add	x0, sp, #0x10
  41cf3c:	bl	41b5dc <wcrtomb@plt+0x1668c>
  41cf40:	ands	w0, w0, #0xff
  41cf44:	b.eq	41cf64 <wcrtomb@plt+0x18014>  // b.none
  41cf48:	ldr	x1, [sp, #48]
  41cf4c:	str	x3, [sp, #40]
  41cf50:	ldr	x1, [x1, #32]
  41cf54:	cbz	x1, 41cf64 <wcrtomb@plt+0x18014>
  41cf58:	add	x0, sp, #0x10
  41cf5c:	blr	x1
  41cf60:	and	w0, w0, #0xff
  41cf64:	ldp	x29, x30, [sp], #64
  41cf68:	ret
  41cf6c:	stp	x29, x30, [sp, #-96]!
  41cf70:	mov	w3, w0
  41cf74:	mov	x4, x1
  41cf78:	mov	x29, sp
  41cf7c:	add	x0, sp, #0x30
  41cf80:	stp	x19, x20, [sp, #16]
  41cf84:	str	x21, [sp, #32]
  41cf88:	mov	x21, x2
  41cf8c:	bl	41b5dc <wcrtomb@plt+0x1668c>
  41cf90:	tst	w0, #0xff
  41cf94:	b.eq	41d044 <wcrtomb@plt+0x180f4>  // b.none
  41cf98:	mov	w0, w3
  41cf9c:	mov	w2, #0x0                   	// #0
  41cfa0:	mov	x1, #0x0                   	// #0
  41cfa4:	str	w3, [sp, #48]
  41cfa8:	str	x4, [sp, #72]
  41cfac:	bl	404480 <lseek@plt>
  41cfb0:	cmp	x0, #0x0
  41cfb4:	str	xzr, [sp, #56]
  41cfb8:	cset	w0, eq  // eq = none
  41cfbc:	strb	w0, [sp, #52]
  41cfc0:	add	x0, sp, #0x30
  41cfc4:	mov	x20, #0x0                   	// #0
  41cfc8:	bl	41b4e4 <wcrtomb@plt+0x16594>
  41cfcc:	and	w19, w0, #0xff
  41cfd0:	ldr	x0, [sp, #72]
  41cfd4:	cbz	w19, 41cfe4 <wcrtomb@plt+0x18094>
  41cfd8:	ldr	x1, [x0, #288]
  41cfdc:	cmp	x1, x20
  41cfe0:	b.hi	41d018 <wcrtomb@plt+0x180c8>  // b.pmore
  41cfe4:	ldr	x1, [sp, #64]
  41cfe8:	eor	w19, w19, #0x1
  41cfec:	ldr	x0, [x0, #264]
  41cff0:	sub	x0, x0, x1
  41cff4:	str	x0, [x21]
  41cff8:	add	x0, sp, #0x30
  41cffc:	bl	41b4ac <wcrtomb@plt+0x1655c>
  41d000:	tst	w0, #0xff
  41d004:	csinc	w0, w19, wzr, ne  // ne = any
  41d008:	ldp	x19, x20, [sp, #16]
  41d00c:	ldr	x21, [sp, #32]
  41d010:	ldp	x29, x30, [sp], #96
  41d014:	ret
  41d018:	ldr	x0, [sp, #80]
  41d01c:	ldr	x2, [x0, #64]
  41d020:	cbz	x2, 41d03c <wcrtomb@plt+0x180ec>
  41d024:	mov	x1, x20
  41d028:	add	x0, sp, #0x30
  41d02c:	blr	x2
  41d030:	and	w19, w0, #0xff
  41d034:	add	x20, x20, #0x1
  41d038:	b	41cfd0 <wcrtomb@plt+0x18080>
  41d03c:	mov	w19, #0x0                   	// #0
  41d040:	b	41d034 <wcrtomb@plt+0x180e4>
  41d044:	mov	w0, #0x3                   	// #3
  41d048:	b	41d008 <wcrtomb@plt+0x180b8>
  41d04c:	stp	x29, x30, [sp, #-80]!
  41d050:	mov	x3, x0
  41d054:	mov	x29, sp
  41d058:	add	x0, sp, #0x20
  41d05c:	str	x19, [sp, #16]
  41d060:	bl	41b5dc <wcrtomb@plt+0x1668c>
  41d064:	tst	w0, #0xff
  41d068:	b.eq	41d0b8 <wcrtomb@plt+0x18168>  // b.none
  41d06c:	mov	w0, #0xffffffff            	// #-1
  41d070:	str	w0, [sp, #32]
  41d074:	add	x0, sp, #0x20
  41d078:	str	x3, [sp, #56]
  41d07c:	bl	41b4e4 <wcrtomb@plt+0x16594>
  41d080:	and	w19, w0, #0xff
  41d084:	ldr	x0, [sp, #56]
  41d088:	eor	w19, w19, #0x1
  41d08c:	ldr	x1, [x0, #264]
  41d090:	ldr	x0, [sp, #48]
  41d094:	sub	x0, x1, x0
  41d098:	bl	416fd8 <wcrtomb@plt+0x12088>
  41d09c:	add	x0, sp, #0x20
  41d0a0:	bl	41b4ac <wcrtomb@plt+0x1655c>
  41d0a4:	tst	w0, #0xff
  41d0a8:	csinc	w0, w19, wzr, ne  // ne = any
  41d0ac:	ldr	x19, [sp, #16]
  41d0b0:	ldp	x29, x30, [sp], #80
  41d0b4:	ret
  41d0b8:	mov	w0, #0x3                   	// #3
  41d0bc:	b	41d0ac <wcrtomb@plt+0x1815c>
  41d0c0:	stp	x29, x30, [sp, #-96]!
  41d0c4:	mov	w3, w0
  41d0c8:	mov	x29, sp
  41d0cc:	add	x0, sp, #0x30
  41d0d0:	stp	x19, x20, [sp, #16]
  41d0d4:	mov	x20, x1
  41d0d8:	str	x21, [sp, #32]
  41d0dc:	bl	41b5dc <wcrtomb@plt+0x1668c>
  41d0e0:	tst	w0, #0xff
  41d0e4:	b.eq	41d1a0 <wcrtomb@plt+0x18250>  // b.none
  41d0e8:	mov	w0, #0x1                   	// #1
  41d0ec:	str	w3, [sp, #48]
  41d0f0:	strb	w0, [sp, #52]
  41d0f4:	add	x0, sp, #0x30
  41d0f8:	str	x20, [sp, #72]
  41d0fc:	bl	41b4e4 <wcrtomb@plt+0x16594>
  41d100:	and	w19, w0, #0xff
  41d104:	mov	x0, x20
  41d108:	bl	4058a8 <wcrtomb@plt+0x958>
  41d10c:	mov	x20, #0x0                   	// #0
  41d110:	mov	x1, #0x0                   	// #0
  41d114:	ldr	x0, [sp, #72]
  41d118:	cbz	w19, 41d1a8 <wcrtomb@plt+0x18258>
  41d11c:	ldr	x2, [x0, #288]
  41d120:	cmp	x2, x20
  41d124:	b.hi	41d148 <wcrtomb@plt+0x181f8>  // b.pmore
  41d128:	bl	4058b8 <wcrtomb@plt+0x968>
  41d12c:	add	x0, sp, #0x30
  41d130:	bl	41b4ac <wcrtomb@plt+0x1655c>
  41d134:	mov	w0, w19
  41d138:	ldp	x19, x20, [sp, #16]
  41d13c:	ldr	x21, [sp, #32]
  41d140:	ldp	x29, x30, [sp], #96
  41d144:	ret
  41d148:	ldr	x0, [x0, #304]
  41d14c:	lsl	x21, x20, #4
  41d150:	ldr	x2, [x0, x21]
  41d154:	add	x0, sp, #0x30
  41d158:	bl	41ba50 <wcrtomb@plt+0x16b00>
  41d15c:	tst	w0, #0xff
  41d160:	b.eq	41d198 <wcrtomb@plt+0x18248>  // b.none
  41d164:	mov	x1, x20
  41d168:	add	x0, sp, #0x30
  41d16c:	bl	41bb74 <wcrtomb@plt+0x16c24>
  41d170:	and	w19, w0, #0xff
  41d174:	ldr	x0, [sp, #72]
  41d178:	and	w19, w19, #0x1
  41d17c:	add	x20, x20, #0x1
  41d180:	ldr	x0, [x0, #304]
  41d184:	add	x2, x0, x21
  41d188:	ldr	x1, [x0, x21]
  41d18c:	ldr	x0, [x2, #8]
  41d190:	add	x1, x1, x0
  41d194:	b	41d114 <wcrtomb@plt+0x181c4>
  41d198:	mov	w19, #0x0                   	// #0
  41d19c:	b	41d174 <wcrtomb@plt+0x18224>
  41d1a0:	mov	w19, #0x1                   	// #1
  41d1a4:	b	41d134 <wcrtomb@plt+0x181e4>
  41d1a8:	ldr	x1, [x0, #264]
  41d1ac:	ldr	x0, [sp, #64]
  41d1b0:	sub	x0, x1, x0
  41d1b4:	bl	416fd8 <wcrtomb@plt+0x12088>
  41d1b8:	b	41d128 <wcrtomb@plt+0x181d8>
  41d1bc:	stp	x29, x30, [sp, #-64]!
  41d1c0:	mov	x29, sp
  41d1c4:	stp	x19, x20, [sp, #16]
  41d1c8:	stp	x21, x22, [sp, #32]
  41d1cc:	mov	x22, x0
  41d1d0:	mov	x21, x1
  41d1d4:	mov	w1, #0x2e                  	// #46
  41d1d8:	str	x23, [sp, #48]
  41d1dc:	bl	4048d0 <strrchr@plt>
  41d1e0:	mov	x19, x0
  41d1e4:	cbz	x0, 41d244 <wcrtomb@plt+0x182f4>
  41d1e8:	add	x23, x0, #0x1
  41d1ec:	adrp	x19, 46e000 <_obstack_memory_used@@Base+0x36380>
  41d1f0:	mov	x0, x23
  41d1f4:	add	x19, x19, #0xff0
  41d1f8:	bl	404280 <strlen@plt>
  41d1fc:	mov	x20, x0
  41d200:	ldr	x0, [x19]
  41d204:	cbnz	x0, 41d210 <wcrtomb@plt+0x182c0>
  41d208:	mov	x19, #0x0                   	// #0
  41d20c:	b	41d244 <wcrtomb@plt+0x182f4>
  41d210:	ldr	x1, [x19, #8]
  41d214:	cmp	x1, x20
  41d218:	b.ne	41d25c <wcrtomb@plt+0x1830c>  // b.any
  41d21c:	mov	x2, x20
  41d220:	mov	x1, x23
  41d224:	bl	4049f0 <memcmp@plt>
  41d228:	cbnz	w0, 41d25c <wcrtomb@plt+0x1830c>
  41d22c:	cbz	x21, 41d244 <wcrtomb@plt+0x182f4>
  41d230:	mvn	x20, x20
  41d234:	mov	x0, x22
  41d238:	bl	404280 <strlen@plt>
  41d23c:	add	x20, x20, x0
  41d240:	str	x20, [x21]
  41d244:	mov	x0, x19
  41d248:	ldp	x19, x20, [sp, #16]
  41d24c:	ldp	x21, x22, [sp, #32]
  41d250:	ldr	x23, [sp, #48]
  41d254:	ldp	x29, x30, [sp], #64
  41d258:	ret
  41d25c:	add	x19, x19, #0x18
  41d260:	b	41d200 <wcrtomb@plt+0x182b0>
  41d264:	stp	x29, x30, [sp, #-32]!
  41d268:	mov	x29, sp
  41d26c:	str	x19, [sp, #16]
  41d270:	mov	x19, x1
  41d274:	mov	x1, #0x0                   	// #0
  41d278:	bl	41d1bc <wcrtomb@plt+0x1826c>
  41d27c:	cbz	x0, 41d284 <wcrtomb@plt+0x18334>
  41d280:	ldr	x19, [x0, #16]
  41d284:	cbz	x19, 41d290 <wcrtomb@plt+0x18340>
  41d288:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d28c:	str	x19, [x0, #912]
  41d290:	ldr	x19, [sp, #16]
  41d294:	ldp	x29, x30, [sp], #32
  41d298:	ret
  41d29c:	stp	x29, x30, [sp, #-64]!
  41d2a0:	mov	x29, sp
  41d2a4:	add	x1, sp, #0x38
  41d2a8:	stp	x19, x20, [sp, #16]
  41d2ac:	mov	x20, x0
  41d2b0:	str	x21, [sp, #32]
  41d2b4:	bl	41d1bc <wcrtomb@plt+0x1826c>
  41d2b8:	cbnz	x0, 41d2d4 <wcrtomb@plt+0x18384>
  41d2bc:	mov	x19, #0x0                   	// #0
  41d2c0:	mov	x0, x19
  41d2c4:	ldp	x19, x20, [sp, #16]
  41d2c8:	ldr	x21, [sp, #32]
  41d2cc:	ldp	x29, x30, [sp], #64
  41d2d0:	ret
  41d2d4:	ldr	x19, [sp, #56]
  41d2d8:	cmp	x19, #0x4
  41d2dc:	b.ls	41d314 <wcrtomb@plt+0x183c4>  // b.plast
  41d2e0:	sub	x19, x19, #0x4
  41d2e4:	mov	x21, x0
  41d2e8:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41d2ec:	add	x0, x20, x19
  41d2f0:	add	x1, x1, #0xf65
  41d2f4:	mov	x2, #0x4                   	// #4
  41d2f8:	bl	4046a0 <strncmp@plt>
  41d2fc:	cbnz	w0, 41d314 <wcrtomb@plt+0x183c4>
  41d300:	ldr	x0, [x21]
  41d304:	ldrb	w0, [x0]
  41d308:	cmp	w0, #0x74
  41d30c:	b.eq	41d314 <wcrtomb@plt+0x183c4>  // b.none
  41d310:	str	x19, [sp, #56]
  41d314:	ldr	x0, [sp, #56]
  41d318:	cbz	x0, 41d2bc <wcrtomb@plt+0x1836c>
  41d31c:	add	x0, x0, #0x1
  41d320:	bl	436d44 <argp_usage@@Base+0x9864>
  41d324:	ldr	x21, [sp, #56]
  41d328:	mov	x19, x0
  41d32c:	mov	x1, x20
  41d330:	mov	x2, x21
  41d334:	bl	404200 <memcpy@plt>
  41d338:	strb	wzr, [x19, x21]
  41d33c:	b	41d2c0 <wcrtomb@plt+0x18370>
  41d340:	stp	x29, x30, [sp, #-64]!
  41d344:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41d348:	add	x1, x1, #0xf9c
  41d34c:	mov	x29, sp
  41d350:	str	x1, [sp, #40]
  41d354:	add	x1, sp, #0x20
  41d358:	str	x19, [sp, #16]
  41d35c:	mov	x19, x0
  41d360:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  41d364:	add	x0, x0, #0xf94
  41d368:	str	x0, [sp, #32]
  41d36c:	str	x19, [sp, #48]
  41d370:	str	xzr, [sp, #56]
  41d374:	bl	4047e0 <execv@plt>
  41d378:	mov	x0, x19
  41d37c:	bl	424d80 <wcrtomb@plt+0x1fe30>
  41d380:	stp	x29, x30, [sp, #-48]!
  41d384:	mov	x29, sp
  41d388:	str	x19, [sp, #16]
  41d38c:	mov	w19, w0
  41d390:	add	x1, sp, #0x2c
  41d394:	mov	w0, w19
  41d398:	mov	w2, #0x0                   	// #0
  41d39c:	bl	404ea0 <waitpid@plt>
  41d3a0:	cmn	w0, #0x1
  41d3a4:	b.ne	41d3c4 <wcrtomb@plt+0x18474>  // b.any
  41d3a8:	bl	404e10 <__errno_location@plt>
  41d3ac:	ldr	w0, [x0]
  41d3b0:	cmp	w0, #0x4
  41d3b4:	b.eq	41d390 <wcrtomb@plt+0x18440>  // b.none
  41d3b8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d3bc:	ldr	x0, [x0, #912]
  41d3c0:	bl	42533c <wcrtomb@plt+0x203ec>
  41d3c4:	ldr	w1, [sp, #44]
  41d3c8:	and	w0, w1, #0x7f
  41d3cc:	add	w2, w0, #0x1
  41d3d0:	sbfx	x2, x2, #1, #7
  41d3d4:	cmp	w2, #0x0
  41d3d8:	b.le	41d3e8 <wcrtomb@plt+0x18498>
  41d3dc:	bl	4042c0 <raise@plt>
  41d3e0:	mov	w0, #0x0                   	// #0
  41d3e4:	bl	4042b0 <exit@plt>
  41d3e8:	ubfx	x0, x1, #8, #8
  41d3ec:	b	41d3e4 <wcrtomb@plt+0x18494>
  41d3f0:	stp	x29, x30, [sp, #-304]!
  41d3f4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41d3f8:	mov	x29, sp
  41d3fc:	ldr	x0, [x0, #1184]
  41d400:	str	x0, [sp, #184]
  41d404:	mov	x0, #0x1                   	// #1
  41d408:	stp	x19, x20, [sp, #16]
  41d40c:	mov	x20, #0x0                   	// #0
  41d410:	stp	x21, x22, [sp, #32]
  41d414:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  41d418:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  41d41c:	add	x21, x21, #0x1e0
  41d420:	add	x22, x22, #0x3f8
  41d424:	stp	x23, x24, [sp, #48]
  41d428:	mov	w23, #0xe06                 	// #3590
  41d42c:	movk	w23, #0x208, lsl #16
  41d430:	str	x0, [sp, #88]
  41d434:	add	x0, sp, #0x44
  41d438:	bl	4059ac <wcrtomb@plt+0xa5c>
  41d43c:	mov	x19, x0
  41d440:	cbnz	x19, 41d480 <wcrtomb@plt+0x18530>
  41d444:	cbnz	x20, 41d5b4 <wcrtomb@plt+0x18664>
  41d448:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d44c:	ldr	x0, [x0, #1016]
  41d450:	cbz	x0, 41d458 <wcrtomb@plt+0x18508>
  41d454:	blr	x0
  41d458:	mov	w2, #0x5                   	// #5
  41d45c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41d460:	mov	x0, #0x0                   	// #0
  41d464:	add	x1, x1, #0xfba
  41d468:	bl	404d00 <dcgettext@plt>
  41d46c:	mov	x2, x0
  41d470:	mov	w1, #0x0                   	// #0
  41d474:	mov	w0, #0x0                   	// #0
  41d478:	bl	4042e0 <error@plt>
  41d47c:	b	41d560 <wcrtomb@plt+0x18610>
  41d480:	cbz	x20, 41d504 <wcrtomb@plt+0x185b4>
  41d484:	ldr	w0, [x21]
  41d488:	tbz	w0, #19, 41d504 <wcrtomb@plt+0x185b4>
  41d48c:	ldr	x0, [x22]
  41d490:	cbz	x0, 41d498 <wcrtomb@plt+0x18548>
  41d494:	blr	x0
  41d498:	bl	404e10 <__errno_location@plt>
  41d49c:	ldr	w24, [x0]
  41d4a0:	mov	w2, #0x5                   	// #5
  41d4a4:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41d4a8:	mov	x0, #0x0                   	// #0
  41d4ac:	add	x1, x1, #0xf9f
  41d4b0:	bl	404d00 <dcgettext@plt>
  41d4b4:	mov	x2, x0
  41d4b8:	mov	x3, x20
  41d4bc:	mov	w0, #0x0                   	// #0
  41d4c0:	mov	w1, w24
  41d4c4:	bl	4042e0 <error@plt>
  41d4c8:	ldr	w0, [x21]
  41d4cc:	tbz	w0, #19, 41d504 <wcrtomb@plt+0x185b4>
  41d4d0:	ldr	x0, [x22]
  41d4d4:	cbz	x0, 41d4dc <wcrtomb@plt+0x1858c>
  41d4d8:	blr	x0
  41d4dc:	mov	w2, #0x5                   	// #5
  41d4e0:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41d4e4:	mov	x0, #0x0                   	// #0
  41d4e8:	add	x1, x1, #0xfad
  41d4ec:	bl	404d00 <dcgettext@plt>
  41d4f0:	mov	x2, x0
  41d4f4:	mov	x3, x19
  41d4f8:	mov	w1, #0x0                   	// #0
  41d4fc:	mov	w0, #0x0                   	// #0
  41d500:	bl	4042e0 <error@plt>
  41d504:	mov	w2, w23
  41d508:	add	x1, sp, #0x48
  41d50c:	mov	x0, x19
  41d510:	bl	4294ac <wcrtomb@plt+0x2455c>
  41d514:	cbz	w0, 41d564 <wcrtomb@plt+0x18614>
  41d518:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d51c:	ldr	x0, [x0, #1016]
  41d520:	cbz	x0, 41d528 <wcrtomb@plt+0x185d8>
  41d524:	blr	x0
  41d528:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41d52c:	add	x1, x1, #0x38a
  41d530:	mov	w2, #0x5                   	// #5
  41d534:	mov	x0, #0x0                   	// #0
  41d538:	bl	404d00 <dcgettext@plt>
  41d53c:	mov	x20, x0
  41d540:	add	x0, sp, #0x48
  41d544:	bl	426dc8 <wcrtomb@plt+0x21e78>
  41d548:	mov	x3, x19
  41d54c:	mov	x4, x0
  41d550:	mov	x2, x20
  41d554:	mov	w1, #0x0                   	// #0
  41d558:	mov	w0, #0x0                   	// #0
  41d55c:	bl	4042e0 <error@plt>
  41d560:	bl	40d47c <wcrtomb@plt+0x852c>
  41d564:	ldp	x2, x0, [sp, #72]
  41d568:	mov	w23, #0xe0e                 	// #3598
  41d56c:	ldr	x1, [sp, #88]
  41d570:	mov	x20, x19
  41d574:	movk	w23, #0x208, lsl #16
  41d578:	lsl	x2, x2, #3
  41d57c:	add	x1, x0, x1, lsl #3
  41d580:	bl	404210 <memmove@plt>
  41d584:	ldp	x2, x1, [sp, #72]
  41d588:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  41d58c:	add	x0, x0, #0xfb7
  41d590:	str	x0, [x1, x2, lsl #3]
  41d594:	ldr	x0, [x1]
  41d598:	bl	404a10 <execvp@plt>
  41d59c:	ldp	x1, x0, [sp, #72]
  41d5a0:	str	xzr, [x0, x1, lsl #3]
  41d5a4:	add	x0, sp, #0x44
  41d5a8:	bl	4059f4 <wcrtomb@plt+0xaa4>
  41d5ac:	mov	x19, x0
  41d5b0:	b	41d440 <wcrtomb@plt+0x184f0>
  41d5b4:	mov	x0, x20
  41d5b8:	bl	424d80 <wcrtomb@plt+0x1fe30>
  41d5bc:	cbz	x1, 41d5d8 <wcrtomb@plt+0x18688>
  41d5c0:	stp	x29, x30, [sp, #-16]!
  41d5c4:	mov	w2, #0x1                   	// #1
  41d5c8:	mov	x29, sp
  41d5cc:	bl	4043a0 <setenv@plt>
  41d5d0:	cbz	w0, 41d5dc <wcrtomb@plt+0x1868c>
  41d5d4:	bl	40d4bc <wcrtomb@plt+0x856c>
  41d5d8:	b	404c60 <unsetenv@plt>
  41d5dc:	ldp	x29, x30, [sp], #16
  41d5e0:	ret
  41d5e4:	stp	x29, x30, [sp, #-64]!
  41d5e8:	mov	x29, sp
  41d5ec:	str	x19, [sp, #16]
  41d5f0:	mov	x19, x0
  41d5f4:	mov	x0, x1
  41d5f8:	mov	x1, x2
  41d5fc:	add	x2, sp, #0x20
  41d600:	bl	4182c4 <wcrtomb@plt+0x13374>
  41d604:	mov	w2, #0x1                   	// #1
  41d608:	mov	x1, x0
  41d60c:	mov	x0, x19
  41d610:	bl	4043a0 <setenv@plt>
  41d614:	cbz	w0, 41d61c <wcrtomb@plt+0x186cc>
  41d618:	bl	40d4bc <wcrtomb@plt+0x856c>
  41d61c:	ldr	x19, [sp, #16]
  41d620:	ldp	x29, x30, [sp], #64
  41d624:	ret
  41d628:	stp	x29, x30, [sp, #-64]!
  41d62c:	mov	x29, sp
  41d630:	str	x19, [sp, #16]
  41d634:	mov	x19, x0
  41d638:	mov	x0, x1
  41d63c:	add	x1, sp, #0x28
  41d640:	bl	431400 <argp_usage@@Base+0x3f20>
  41d644:	mov	x1, x0
  41d648:	mov	w2, #0x1                   	// #1
  41d64c:	mov	x0, x19
  41d650:	bl	4043a0 <setenv@plt>
  41d654:	cbz	w0, 41d65c <wcrtomb@plt+0x1870c>
  41d658:	bl	40d4bc <wcrtomb@plt+0x856c>
  41d65c:	ldr	x19, [sp, #16]
  41d660:	ldp	x29, x30, [sp], #64
  41d664:	ret
  41d668:	stp	x29, x30, [sp, #-144]!
  41d66c:	mov	x29, sp
  41d670:	add	x1, sp, #0x10
  41d674:	bl	446a80 <_obstack_memory_used@@Base+0xee00>
  41d678:	cbnz	w0, 41d694 <wcrtomb@plt+0x18744>
  41d67c:	ldr	w0, [sp, #32]
  41d680:	and	w0, w0, #0xf000
  41d684:	cmp	w0, #0x8, lsl #12
  41d688:	cset	w0, eq  // eq = none
  41d68c:	ldp	x29, x30, [sp], #144
  41d690:	ret
  41d694:	bl	404e10 <__errno_location@plt>
  41d698:	ldr	w0, [x0]
  41d69c:	cmp	w0, #0x2
  41d6a0:	b	41d688 <wcrtomb@plt+0x18738>
  41d6a4:	cmp	w0, w1
  41d6a8:	b.eq	41d784 <wcrtomb@plt+0x18834>  // b.none
  41d6ac:	stp	x29, x30, [sp, #-48]!
  41d6b0:	mov	x29, sp
  41d6b4:	stp	x19, x20, [sp, #16]
  41d6b8:	mov	w19, w0
  41d6bc:	mov	w20, w1
  41d6c0:	mov	w0, w1
  41d6c4:	str	x21, [sp, #32]
  41d6c8:	bl	4048c0 <close@plt>
  41d6cc:	cbz	w0, 41d718 <wcrtomb@plt+0x187c8>
  41d6d0:	bl	404e10 <__errno_location@plt>
  41d6d4:	ldr	w21, [x0]
  41d6d8:	cmp	w21, #0x9
  41d6dc:	b.eq	41d718 <wcrtomb@plt+0x187c8>  // b.none
  41d6e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d6e4:	ldr	x0, [x0, #1016]
  41d6e8:	cbz	x0, 41d6f0 <wcrtomb@plt+0x187a0>
  41d6ec:	blr	x0
  41d6f0:	mov	w2, #0x5                   	// #5
  41d6f4:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41d6f8:	mov	x0, #0x0                   	// #0
  41d6fc:	add	x1, x1, #0xfde
  41d700:	bl	404d00 <dcgettext@plt>
  41d704:	mov	x2, x0
  41d708:	mov	w1, w21
  41d70c:	mov	w0, #0x0                   	// #0
  41d710:	bl	4042e0 <error@plt>
  41d714:	bl	40d47c <wcrtomb@plt+0x852c>
  41d718:	mov	w0, w19
  41d71c:	bl	4042d0 <dup@plt>
  41d720:	cmp	w20, w0
  41d724:	b.eq	41d770 <wcrtomb@plt+0x18820>  // b.none
  41d728:	tbz	w0, #31, 41d76c <wcrtomb@plt+0x1881c>
  41d72c:	bl	404e10 <__errno_location@plt>
  41d730:	ldr	w19, [x0]
  41d734:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d738:	ldr	x0, [x0, #1016]
  41d73c:	cbz	x0, 41d744 <wcrtomb@plt+0x187f4>
  41d740:	blr	x0
  41d744:	mov	w2, #0x5                   	// #5
  41d748:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41d74c:	mov	x0, #0x0                   	// #0
  41d750:	add	x1, x1, #0xfeb
  41d754:	bl	404d00 <dcgettext@plt>
  41d758:	mov	x2, x0
  41d75c:	mov	w1, w19
  41d760:	mov	w0, #0x0                   	// #0
  41d764:	bl	4042e0 <error@plt>
  41d768:	bl	40d47c <wcrtomb@plt+0x852c>
  41d76c:	bl	404970 <abort@plt>
  41d770:	mov	w0, w19
  41d774:	ldp	x19, x20, [sp, #16]
  41d778:	ldr	x21, [sp, #32]
  41d77c:	ldp	x29, x30, [sp], #48
  41d780:	b	405db8 <wcrtomb@plt+0xe68>
  41d784:	ret
  41d788:	stp	x29, x30, [sp, #-16]!
  41d78c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d790:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41d794:	mov	x29, sp
  41d798:	ldr	w0, [x0, #984]
  41d79c:	add	x1, x1, #0xb60
  41d7a0:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  41d7a4:	cmp	w0, #0x0
  41d7a8:	cset	w0, eq  // eq = none
  41d7ac:	ldp	x29, x30, [sp], #16
  41d7b0:	ret
  41d7b4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41d7b8:	ldr	x1, [x1, #552]
  41d7bc:	cbz	x1, 41d7e4 <wcrtomb@plt+0x18894>
  41d7c0:	ldr	x2, [x0, #88]
  41d7c4:	cmp	x1, x2
  41d7c8:	b.ne	41d7e4 <wcrtomb@plt+0x18894>  // b.any
  41d7cc:	ldr	x1, [x0, #96]
  41d7d0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d7d4:	ldr	x0, [x0, #896]
  41d7d8:	cmp	x1, x0
  41d7dc:	cset	w0, eq  // eq = none
  41d7e0:	ret
  41d7e4:	mov	w0, #0x0                   	// #0
  41d7e8:	b	41d7e0 <wcrtomb@plt+0x18890>
  41d7ec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d7f0:	ldr	w1, [x0, #984]
  41d7f4:	mov	w0, #0x3fffffff            	// #1073741823
  41d7f8:	cmp	w1, w0
  41d7fc:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41d800:	b.gt	41d834 <wcrtomb@plt+0x188e4>
  41d804:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  41d808:	add	x2, x3, #0xb60
  41d80c:	ldr	w0, [x2, #16]
  41d810:	and	w0, w0, #0xf000
  41d814:	cmp	w0, #0x8, lsl #12
  41d818:	b.ne	41d834 <wcrtomb@plt+0x188e4>  // b.any
  41d81c:	ldr	x0, [x3, #2912]
  41d820:	str	x0, [x1, #552]
  41d824:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d828:	ldr	x1, [x2, #8]
  41d82c:	str	x1, [x0, #896]
  41d830:	ret
  41d834:	str	xzr, [x1, #552]
  41d838:	b	41d830 <wcrtomb@plt+0x188e0>
  41d83c:	stp	x29, x30, [sp, #-176]!
  41d840:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d844:	mov	x29, sp
  41d848:	ldr	x0, [x0, #696]
  41d84c:	stp	x19, x20, [sp, #16]
  41d850:	adrp	x19, 44a000 <_obstack_memory_used@@Base+0x12380>
  41d854:	add	x19, x19, #0x1a8
  41d858:	ldr	x0, [x0]
  41d85c:	mov	x1, x19
  41d860:	str	x21, [sp, #32]
  41d864:	bl	404a30 <strcmp@plt>
  41d868:	cbz	w0, 41d8e8 <wcrtomb@plt+0x18998>
  41d86c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d870:	ldr	w1, [x0, #984]
  41d874:	mov	w0, #0x3fffffff            	// #1073741823
  41d878:	cmp	w1, w0
  41d87c:	b.le	41d89c <wcrtomb@plt+0x1894c>
  41d880:	mov	w0, #0x0                   	// #0
  41d884:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41d888:	ldp	x19, x20, [sp, #16]
  41d88c:	strb	w0, [x1, #544]
  41d890:	ldr	x21, [sp, #32]
  41d894:	ldp	x29, x30, [sp], #176
  41d898:	ret
  41d89c:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  41d8a0:	add	x20, x21, #0xb60
  41d8a4:	ldr	w0, [x20, #16]
  41d8a8:	and	w0, w0, #0xf000
  41d8ac:	cmp	w0, #0x2, lsl #12
  41d8b0:	b.ne	41d880 <wcrtomb@plt+0x18930>  // b.any
  41d8b4:	add	x1, sp, #0x30
  41d8b8:	mov	x0, x19
  41d8bc:	bl	446a80 <_obstack_memory_used@@Base+0xee00>
  41d8c0:	cbnz	w0, 41d880 <wcrtomb@plt+0x18930>
  41d8c4:	ldr	x1, [x21, #2912]
  41d8c8:	ldr	x0, [sp, #48]
  41d8cc:	cmp	x1, x0
  41d8d0:	b.ne	41d880 <wcrtomb@plt+0x18930>  // b.any
  41d8d4:	ldr	x1, [x20, #8]
  41d8d8:	ldr	x0, [sp, #56]
  41d8dc:	cmp	x1, x0
  41d8e0:	cset	w0, eq  // eq = none
  41d8e4:	b	41d884 <wcrtomb@plt+0x18934>
  41d8e8:	mov	w0, #0x1                   	// #1
  41d8ec:	b	41d884 <wcrtomb@plt+0x18934>
  41d8f0:	cbz	w0, 41d9ec <wcrtomb@plt+0x18a9c>
  41d8f4:	stp	x29, x30, [sp, #-48]!
  41d8f8:	mov	x29, sp
  41d8fc:	stp	x19, x20, [sp, #16]
  41d900:	mov	w19, w0
  41d904:	and	w20, w1, #0xff
  41d908:	add	x1, sp, #0x2c
  41d90c:	mov	w0, w19
  41d910:	mov	w2, #0x0                   	// #0
  41d914:	bl	404ea0 <waitpid@plt>
  41d918:	cmn	w0, #0x1
  41d91c:	b.ne	41d93c <wcrtomb@plt+0x189ec>  // b.any
  41d920:	bl	404e10 <__errno_location@plt>
  41d924:	ldr	w0, [x0]
  41d928:	cmp	w0, #0x4
  41d92c:	b.eq	41d908 <wcrtomb@plt+0x189b8>  // b.none
  41d930:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d934:	ldr	x0, [x0, #912]
  41d938:	bl	42533c <wcrtomb@plt+0x203ec>
  41d93c:	ldr	w1, [sp, #44]
  41d940:	and	w19, w1, #0x7f
  41d944:	add	w0, w19, #0x1
  41d948:	sbfx	x0, x0, #1, #7
  41d94c:	cmp	w0, #0x0
  41d950:	b.le	41d99c <wcrtomb@plt+0x18a4c>
  41d954:	cmp	w20, #0x0
  41d958:	ccmp	w19, #0xd, #0x0, eq  // eq = none
  41d95c:	b.eq	41d9e0 <wcrtomb@plt+0x18a90>  // b.none
  41d960:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d964:	ldr	x0, [x0, #1016]
  41d968:	cbz	x0, 41d970 <wcrtomb@plt+0x18a20>
  41d96c:	blr	x0
  41d970:	mov	w2, #0x5                   	// #5
  41d974:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41d978:	mov	x0, #0x0                   	// #0
  41d97c:	add	x1, x1, #0xff6
  41d980:	bl	404d00 <dcgettext@plt>
  41d984:	mov	x2, x0
  41d988:	mov	w3, w19
  41d98c:	mov	w1, #0x0                   	// #0
  41d990:	mov	w0, #0x0                   	// #0
  41d994:	bl	4042e0 <error@plt>
  41d998:	bl	40d47c <wcrtomb@plt+0x852c>
  41d99c:	tst	x1, #0xff00
  41d9a0:	b.eq	41d9e0 <wcrtomb@plt+0x18a90>  // b.none
  41d9a4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41d9a8:	ldr	x0, [x0, #1016]
  41d9ac:	cbz	x0, 41d9b4 <wcrtomb@plt+0x18a64>
  41d9b0:	blr	x0
  41d9b4:	mov	w2, #0x5                   	// #5
  41d9b8:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41d9bc:	mov	x0, #0x0                   	// #0
  41d9c0:	add	x1, x1, #0x11f
  41d9c4:	bl	404d00 <dcgettext@plt>
  41d9c8:	mov	x2, x0
  41d9cc:	ldrb	w3, [sp, #45]
  41d9d0:	mov	w1, #0x0                   	// #0
  41d9d4:	mov	w0, #0x0                   	// #0
  41d9d8:	bl	4042e0 <error@plt>
  41d9dc:	bl	40d47c <wcrtomb@plt+0x852c>
  41d9e0:	ldp	x19, x20, [sp, #16]
  41d9e4:	ldp	x29, x30, [sp], #48
  41d9e8:	ret
  41d9ec:	ret
  41d9f0:	stp	x29, x30, [sp, #-48]!
  41d9f4:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41d9f8:	add	x0, x0, #0x10
  41d9fc:	mov	x29, sp
  41da00:	stp	x19, x20, [sp, #16]
  41da04:	bl	404e40 <getenv@plt>
  41da08:	cbnz	x0, 41da44 <wcrtomb@plt+0x18af4>
  41da0c:	adrp	x19, 449000 <_obstack_memory_used@@Base+0x11380>
  41da10:	add	x19, x19, #0xf94
  41da14:	bl	418d54 <wcrtomb@plt+0x13e04>
  41da18:	mov	w20, w0
  41da1c:	cbnz	w0, 41da4c <wcrtomb@plt+0x18afc>
  41da20:	adrp	x2, 446000 <_obstack_memory_used@@Base+0xe380>
  41da24:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41da28:	add	x2, x2, #0xe91
  41da2c:	add	x1, x1, #0x16
  41da30:	mov	x3, #0x0                   	// #0
  41da34:	mov	x0, x19
  41da38:	bl	404e30 <execlp@plt>
  41da3c:	mov	x0, x19
  41da40:	bl	424d80 <wcrtomb@plt+0x1fe30>
  41da44:	mov	x19, x0
  41da48:	b	41da14 <wcrtomb@plt+0x18ac4>
  41da4c:	add	x1, sp, #0x2c
  41da50:	mov	w0, w20
  41da54:	mov	w2, #0x0                   	// #0
  41da58:	bl	404ea0 <waitpid@plt>
  41da5c:	cmn	w0, #0x1
  41da60:	b.ne	41da7c <wcrtomb@plt+0x18b2c>  // b.any
  41da64:	bl	404e10 <__errno_location@plt>
  41da68:	ldr	w0, [x0]
  41da6c:	cmp	w0, #0x4
  41da70:	b.eq	41da4c <wcrtomb@plt+0x18afc>  // b.none
  41da74:	mov	x0, x19
  41da78:	bl	42533c <wcrtomb@plt+0x203ec>
  41da7c:	ldp	x19, x20, [sp, #16]
  41da80:	ldp	x29, x30, [sp], #48
  41da84:	ret
  41da88:	ldr	w2, [x0, #24]
  41da8c:	ldr	w0, [x1, #24]
  41da90:	cmp	w2, w0
  41da94:	cset	w0, eq  // eq = none
  41da98:	ret
  41da9c:	ldr	w2, [x0, #28]
  41daa0:	ldr	w0, [x1, #28]
  41daa4:	cmp	w2, w0
  41daa8:	cset	w0, eq  // eq = none
  41daac:	ret
  41dab0:	ldr	x2, [x0]
  41dab4:	ldr	x3, [x1]
  41dab8:	cmp	x3, x2
  41dabc:	b.ne	41dad4 <wcrtomb@plt+0x18b84>  // b.any
  41dac0:	ldr	x0, [x0, #8]
  41dac4:	ldr	x1, [x1, #8]
  41dac8:	cmp	x1, x0
  41dacc:	cset	w0, eq  // eq = none
  41dad0:	ret
  41dad4:	mov	w0, #0x0                   	// #0
  41dad8:	b	41dad0 <wcrtomb@plt+0x18b80>
  41dadc:	stp	x29, x30, [sp, #-32]!
  41dae0:	mov	w2, #0x1                   	// #1
  41dae4:	mov	x1, #0x0                   	// #0
  41dae8:	mov	x29, sp
  41daec:	str	x19, [sp, #16]
  41daf0:	mov	w19, w0
  41daf4:	bl	404480 <lseek@plt>
  41daf8:	tbnz	x0, #63, 41db10 <wcrtomb@plt+0x18bc0>
  41dafc:	mov	x1, x0
  41db00:	mov	w0, w19
  41db04:	ldr	x19, [sp, #16]
  41db08:	ldp	x29, x30, [sp], #32
  41db0c:	b	404d50 <ftruncate@plt>
  41db10:	mov	w0, #0xffffffff            	// #-1
  41db14:	ldr	x19, [sp, #16]
  41db18:	ldp	x29, x30, [sp], #32
  41db1c:	ret
  41db20:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41db24:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41db28:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  41db2c:	mov	w3, #0x3fffffff            	// #1073741823
  41db30:	ldr	w0, [x0, #984]
  41db34:	ldr	x1, [x1, #3992]
  41db38:	cmp	w0, w3
  41db3c:	ldr	x2, [x2, #928]
  41db40:	b.le	41db50 <wcrtomb@plt+0x18c00>
  41db44:	mov	w3, #0xc0000000            	// #-1073741824
  41db48:	add	w0, w0, w3
  41db4c:	b	425ebc <wcrtomb@plt+0x20f6c>
  41db50:	b	42fd3c <argp_usage@@Base+0x285c>
  41db54:	stp	x29, x30, [sp, #-96]!
  41db58:	mov	x1, #0x1                   	// #1
  41db5c:	mov	w0, #0xd                   	// #13
  41db60:	mov	x29, sp
  41db64:	stp	x19, x20, [sp, #16]
  41db68:	stp	x21, x22, [sp, #32]
  41db6c:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  41db70:	stp	x23, x24, [sp, #48]
  41db74:	stp	x25, x26, [sp, #64]
  41db78:	bl	404540 <signal@plt>
  41db7c:	add	x0, sp, #0x50
  41db80:	bl	418d94 <wcrtomb@plt+0x13e44>
  41db84:	bl	418d54 <wcrtomb@plt+0x13e04>
  41db88:	cmp	w0, #0x0
  41db8c:	b.gt	41de54 <wcrtomb@plt+0x18f04>
  41db90:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41db94:	add	x1, x1, #0x1a
  41db98:	mov	w2, #0x5                   	// #5
  41db9c:	mov	x0, #0x0                   	// #0
  41dba0:	bl	404d00 <dcgettext@plt>
  41dba4:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  41dba8:	bl	434c68 <argp_usage@@Base+0x7788>
  41dbac:	adrp	x23, 44e000 <_obstack_memory_used@@Base+0x16380>
  41dbb0:	mov	x1, #0x0                   	// #0
  41dbb4:	mov	w0, #0xd                   	// #13
  41dbb8:	bl	404540 <signal@plt>
  41dbbc:	add	x23, x23, #0x8dc
  41dbc0:	ldr	w0, [sp, #80]
  41dbc4:	mov	w1, #0x0                   	// #0
  41dbc8:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  41dbcc:	bl	41d6a4 <wcrtomb@plt+0x18754>
  41dbd0:	ldr	w0, [sp, #84]
  41dbd4:	bl	405db8 <wcrtomb@plt+0xe68>
  41dbd8:	ldrb	w0, [x22, #1024]
  41dbdc:	cbz	w0, 41dc34 <wcrtomb@plt+0x18ce4>
  41dbe0:	ldr	x0, [x19, #696]
  41dbe4:	ldr	x0, [x0]
  41dbe8:	bl	41d668 <wcrtomb@plt+0x18718>
  41dbec:	cbnz	w0, 41dc74 <wcrtomb@plt+0x18d24>
  41dbf0:	add	x0, sp, #0x58
  41dbf4:	bl	418d94 <wcrtomb@plt+0x13e44>
  41dbf8:	bl	418d54 <wcrtomb@plt+0x13e04>
  41dbfc:	mov	w20, w0
  41dc00:	cbnz	w0, 41dcfc <wcrtomb@plt+0x18dac>
  41dc04:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41dc08:	add	x1, x1, #0x26
  41dc0c:	mov	w2, #0x5                   	// #5
  41dc10:	mov	x0, #0x0                   	// #0
  41dc14:	bl	404d00 <dcgettext@plt>
  41dc18:	bl	434c68 <argp_usage@@Base+0x7788>
  41dc1c:	ldr	w0, [sp, #92]
  41dc20:	mov	w1, #0x1                   	// #1
  41dc24:	bl	41d6a4 <wcrtomb@plt+0x18754>
  41dc28:	ldr	w0, [sp, #88]
  41dc2c:	bl	405db8 <wcrtomb@plt+0xe68>
  41dc30:	b	41dcf0 <wcrtomb@plt+0x18da0>
  41dc34:	ldr	x20, [x19, #696]
  41dc38:	mov	w1, #0x3a                  	// #58
  41dc3c:	ldr	x0, [x20]
  41dc40:	bl	404b90 <strchr@plt>
  41dc44:	mov	x2, x0
  41dc48:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41dc4c:	str	x2, [x0, #1032]
  41dc50:	cbz	x2, 41dbe0 <wcrtomb@plt+0x18c90>
  41dc54:	ldr	x0, [x20]
  41dc58:	cmp	x2, x0
  41dc5c:	b.ls	41dbe0 <wcrtomb@plt+0x18c90>  // b.plast
  41dc60:	sub	x2, x2, x0
  41dc64:	mov	w1, #0x2f                  	// #47
  41dc68:	bl	404c90 <memchr@plt>
  41dc6c:	cbnz	x0, 41dbe0 <wcrtomb@plt+0x18c90>
  41dc70:	b	41dbf0 <wcrtomb@plt+0x18ca0>
  41dc74:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41dc78:	mov	x22, x0
  41dc7c:	ldrb	w1, [x0, #765]
  41dc80:	cbz	w1, 41dc94 <wcrtomb@plt+0x18d44>
  41dc84:	ldr	x0, [x19, #696]
  41dc88:	mov	w1, #0x1                   	// #1
  41dc8c:	ldr	x0, [x0]
  41dc90:	bl	4186e4 <wcrtomb@plt+0x13794>
  41dc94:	ldr	x0, [x19, #696]
  41dc98:	mov	x1, x23
  41dc9c:	ldr	x20, [x0]
  41dca0:	mov	x0, x20
  41dca4:	bl	404a30 <strcmp@plt>
  41dca8:	cbz	w0, 41dcf0 <wcrtomb@plt+0x18da0>
  41dcac:	mov	x0, x20
  41dcb0:	mov	w1, #0x1b6                 	// #438
  41dcb4:	bl	404ee0 <creat@plt>
  41dcb8:	str	w0, [x21, #984]
  41dcbc:	tbz	w0, #31, 41dce8 <wcrtomb@plt+0x18d98>
  41dcc0:	bl	404e10 <__errno_location@plt>
  41dcc4:	mov	x20, x0
  41dcc8:	ldrb	w0, [x22, #765]
  41dccc:	ldr	w21, [x20]
  41dcd0:	cbz	w0, 41dcd8 <wcrtomb@plt+0x18d88>
  41dcd4:	bl	4185a4 <wcrtomb@plt+0x13654>
  41dcd8:	str	w21, [x20]
  41dcdc:	ldr	x0, [x19, #696]
  41dce0:	ldr	x0, [x0]
  41dce4:	bl	424e6c <wcrtomb@plt+0x1ff1c>
  41dce8:	mov	w1, #0x1                   	// #1
  41dcec:	bl	41d6a4 <wcrtomb@plt+0x18754>
  41dcf0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41dcf4:	ldr	x0, [x0, #912]
  41dcf8:	bl	41d340 <wcrtomb@plt+0x183f0>
  41dcfc:	ldr	w0, [sp, #88]
  41dd00:	mov	w1, #0x0                   	// #0
  41dd04:	bl	41d6a4 <wcrtomb@plt+0x18754>
  41dd08:	ldr	w0, [sp, #92]
  41dd0c:	bl	405db8 <wcrtomb@plt+0xe68>
  41dd10:	ldr	x25, [x19, #696]
  41dd14:	mov	x1, x23
  41dd18:	ldr	x24, [x25]
  41dd1c:	mov	x0, x24
  41dd20:	bl	404a30 <strcmp@plt>
  41dd24:	cbnz	w0, 41dd74 <wcrtomb@plt+0x18e24>
  41dd28:	mov	w0, #0x1                   	// #1
  41dd2c:	str	w0, [x21, #984]
  41dd30:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  41dd34:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  41dd38:	mov	x25, x23
  41dd3c:	mov	x24, x21
  41dd40:	ldr	x22, [x23, #3992]
  41dd44:	mov	x19, #0x0                   	// #0
  41dd48:	mov	x0, #0x0                   	// #0
  41dd4c:	ldr	x2, [x21, #928]
  41dd50:	add	x26, x21, #0x3a0
  41dd54:	cmp	x2, x19
  41dd58:	b.hi	41dde8 <wcrtomb@plt+0x18e98>  // b.pmore
  41dd5c:	cbz	x0, 41de10 <wcrtomb@plt+0x18ec0>
  41dd60:	bl	41db20 <wcrtomb@plt+0x18bd0>
  41dd64:	ldr	x1, [x26]
  41dd68:	cmp	x1, x0
  41dd6c:	b.eq	41dd40 <wcrtomb@plt+0x18df0>  // b.none
  41dd70:	b	41de50 <wcrtomb@plt+0x18f00>
  41dd74:	ldrb	w0, [x22, #1024]
  41dd78:	cbnz	w0, 41ddd8 <wcrtomb@plt+0x18e88>
  41dd7c:	mov	w1, #0x3a                  	// #58
  41dd80:	mov	x0, x24
  41dd84:	bl	404b90 <strchr@plt>
  41dd88:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41dd8c:	str	x0, [x1, #1032]
  41dd90:	cbz	x0, 41ddd8 <wcrtomb@plt+0x18e88>
  41dd94:	ldr	x22, [x25]
  41dd98:	cmp	x0, x22
  41dd9c:	b.ls	41ddd8 <wcrtomb@plt+0x18e88>  // b.plast
  41dda0:	sub	x2, x0, x22
  41dda4:	mov	w1, #0x2f                  	// #47
  41dda8:	mov	x0, x22
  41ddac:	bl	404c90 <memchr@plt>
  41ddb0:	cbnz	x0, 41ddd8 <wcrtomb@plt+0x18e88>
  41ddb4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41ddb8:	mov	w2, #0x40000000            	// #1073741824
  41ddbc:	mov	w1, #0x41                  	// #65
  41ddc0:	ldr	x3, [x0, #816]
  41ddc4:	mov	x0, x22
  41ddc8:	bl	425898 <wcrtomb@plt+0x20948>
  41ddcc:	str	w0, [x21, #984]
  41ddd0:	tbz	w0, #31, 41dd30 <wcrtomb@plt+0x18de0>
  41ddd4:	b	41dcdc <wcrtomb@plt+0x18d8c>
  41ddd8:	ldr	x0, [x25]
  41dddc:	mov	w1, #0x1b6                 	// #438
  41dde0:	bl	404ee0 <creat@plt>
  41dde4:	b	41ddcc <wcrtomb@plt+0x18e7c>
  41dde8:	sub	x2, x2, x19
  41ddec:	mov	x1, x22
  41ddf0:	mov	w0, #0x0                   	// #0
  41ddf4:	bl	436390 <argp_usage@@Base+0x8eb0>
  41ddf8:	cmn	x0, #0x1
  41ddfc:	b.ne	41de0c <wcrtomb@plt+0x18ebc>  // b.any
  41de00:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41de04:	ldr	x0, [x0, #912]
  41de08:	bl	424ff8 <wcrtomb@plt+0x200a8>
  41de0c:	cbnz	x0, 41de1c <wcrtomb@plt+0x18ecc>
  41de10:	cbnz	x19, 41de28 <wcrtomb@plt+0x18ed8>
  41de14:	mov	w0, w20
  41de18:	bl	41d380 <wcrtomb@plt+0x18430>
  41de1c:	add	x19, x19, x0
  41de20:	add	x22, x22, x0
  41de24:	b	41dd4c <wcrtomb@plt+0x18dfc>
  41de28:	ldr	x2, [x24, #928]
  41de2c:	mov	w1, #0x0                   	// #0
  41de30:	ldr	x0, [x25, #3992]
  41de34:	sub	x2, x2, x19
  41de38:	add	x0, x0, x19
  41de3c:	bl	404700 <memset@plt>
  41de40:	bl	41db20 <wcrtomb@plt+0x18bd0>
  41de44:	ldr	x1, [x24, #928]
  41de48:	cmp	x1, x0
  41de4c:	b.eq	41de14 <wcrtomb@plt+0x18ec4>  // b.none
  41de50:	bl	406218 <wcrtomb@plt+0x12c8>
  41de54:	mov	w19, w0
  41de58:	ldr	w0, [sp, #84]
  41de5c:	str	w0, [x21, #984]
  41de60:	ldr	w0, [sp, #80]
  41de64:	bl	405db8 <wcrtomb@plt+0xe68>
  41de68:	mov	w0, w19
  41de6c:	ldp	x19, x20, [sp, #16]
  41de70:	ldp	x21, x22, [sp, #32]
  41de74:	ldp	x23, x24, [sp, #48]
  41de78:	ldp	x25, x26, [sp, #64]
  41de7c:	ldp	x29, x30, [sp], #96
  41de80:	ret
  41de84:	stp	x29, x30, [sp, #-112]!
  41de88:	add	x0, sp, #0x60
  41de8c:	mov	x29, sp
  41de90:	stp	x19, x20, [sp, #16]
  41de94:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  41de98:	stp	x21, x22, [sp, #32]
  41de9c:	stp	x23, x24, [sp, #48]
  41dea0:	stp	x25, x26, [sp, #64]
  41dea4:	str	x27, [sp, #80]
  41dea8:	bl	418d94 <wcrtomb@plt+0x13e44>
  41deac:	bl	418d54 <wcrtomb@plt+0x13e04>
  41deb0:	cmp	w0, #0x0
  41deb4:	b.gt	41e134 <wcrtomb@plt+0x191e4>
  41deb8:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41debc:	add	x1, x1, #0x1a
  41dec0:	mov	w2, #0x5                   	// #5
  41dec4:	mov	x0, #0x0                   	// #0
  41dec8:	bl	404d00 <dcgettext@plt>
  41decc:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  41ded0:	bl	434c68 <argp_usage@@Base+0x7788>
  41ded4:	adrp	x22, 44e000 <_obstack_memory_used@@Base+0x16380>
  41ded8:	mov	x1, #0x0                   	// #0
  41dedc:	mov	w0, #0xd                   	// #13
  41dee0:	bl	404540 <signal@plt>
  41dee4:	add	x22, x22, #0x8dc
  41dee8:	ldr	w0, [sp, #100]
  41deec:	mov	w1, #0x1                   	// #1
  41def0:	bl	41d6a4 <wcrtomb@plt+0x18754>
  41def4:	ldr	w0, [sp, #96]
  41def8:	bl	405db8 <wcrtomb@plt+0xe68>
  41defc:	ldr	x21, [x20, #696]
  41df00:	mov	x1, x22
  41df04:	ldr	x23, [x21]
  41df08:	mov	x0, x23
  41df0c:	bl	404a30 <strcmp@plt>
  41df10:	cbz	w0, 41df8c <wcrtomb@plt+0x1903c>
  41df14:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41df18:	ldrb	w0, [x0, #1024]
  41df1c:	cbz	w0, 41df54 <wcrtomb@plt+0x19004>
  41df20:	ldr	x0, [x21]
  41df24:	bl	41d668 <wcrtomb@plt+0x18718>
  41df28:	cbz	w0, 41df8c <wcrtomb@plt+0x1903c>
  41df2c:	ldr	x0, [x20, #696]
  41df30:	mov	w2, #0x1b6                 	// #438
  41df34:	mov	w1, #0x0                   	// #0
  41df38:	ldr	x0, [x0]
  41df3c:	bl	404630 <open@plt>
  41df40:	str	w0, [x19, #984]
  41df44:	tbz	w0, #31, 41dfd0 <wcrtomb@plt+0x19080>
  41df48:	ldr	x0, [x20, #696]
  41df4c:	ldr	x0, [x0]
  41df50:	bl	424e6c <wcrtomb@plt+0x1ff1c>
  41df54:	mov	x0, x23
  41df58:	mov	w1, #0x3a                  	// #58
  41df5c:	bl	404b90 <strchr@plt>
  41df60:	mov	x2, x0
  41df64:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41df68:	str	x2, [x0, #1032]
  41df6c:	cbz	x2, 41df20 <wcrtomb@plt+0x18fd0>
  41df70:	ldr	x0, [x21]
  41df74:	cmp	x2, x0
  41df78:	b.ls	41df20 <wcrtomb@plt+0x18fd0>  // b.plast
  41df7c:	sub	x2, x2, x0
  41df80:	mov	w1, #0x2f                  	// #47
  41df84:	bl	404c90 <memchr@plt>
  41df88:	cbnz	x0, 41df20 <wcrtomb@plt+0x18fd0>
  41df8c:	add	x0, sp, #0x68
  41df90:	bl	418d94 <wcrtomb@plt+0x13e44>
  41df94:	bl	418d54 <wcrtomb@plt+0x13e04>
  41df98:	mov	w21, w0
  41df9c:	cbnz	w0, 41dfdc <wcrtomb@plt+0x1908c>
  41dfa0:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41dfa4:	add	x1, x1, #0x26
  41dfa8:	mov	w2, #0x5                   	// #5
  41dfac:	mov	x0, #0x0                   	// #0
  41dfb0:	bl	404d00 <dcgettext@plt>
  41dfb4:	bl	434c68 <argp_usage@@Base+0x7788>
  41dfb8:	ldr	w0, [sp, #104]
  41dfbc:	mov	w1, #0x0                   	// #0
  41dfc0:	bl	41d6a4 <wcrtomb@plt+0x18754>
  41dfc4:	ldr	w0, [sp, #108]
  41dfc8:	bl	405db8 <wcrtomb@plt+0xe68>
  41dfcc:	b	41dfd8 <wcrtomb@plt+0x19088>
  41dfd0:	mov	w1, #0x0                   	// #0
  41dfd4:	bl	41d6a4 <wcrtomb@plt+0x18754>
  41dfd8:	bl	41d3f0 <wcrtomb@plt+0x184a0>
  41dfdc:	ldr	w0, [sp, #108]
  41dfe0:	mov	w1, #0x1                   	// #1
  41dfe4:	bl	41d6a4 <wcrtomb@plt+0x18754>
  41dfe8:	ldr	w0, [sp, #104]
  41dfec:	bl	405db8 <wcrtomb@plt+0xe68>
  41dff0:	ldr	x23, [x20, #696]
  41dff4:	mov	x1, x22
  41dff8:	ldr	x24, [x23]
  41dffc:	mov	x0, x24
  41e000:	bl	404a30 <strcmp@plt>
  41e004:	cbnz	w0, 41e05c <wcrtomb@plt+0x1910c>
  41e008:	str	wzr, [x19, #984]
  41e00c:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  41e010:	add	x24, x19, #0x3d8
  41e014:	add	x22, x22, #0xf98
  41e018:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  41e01c:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  41e020:	mov	w20, #0x3fffffff            	// #1073741823
  41e024:	bl	4058e4 <wcrtomb@plt+0x994>
  41e028:	ldr	w0, [x24]
  41e02c:	ldr	x2, [x25, #928]
  41e030:	cmp	w0, w20
  41e034:	ldr	x1, [x22]
  41e038:	b.le	41e0d8 <wcrtomb@plt+0x19188>
  41e03c:	mov	w3, #0xc0000000            	// #-1073741824
  41e040:	add	w0, w0, w3
  41e044:	bl	425de4 <wcrtomb@plt+0x20e94>
  41e048:	mov	x19, x0
  41e04c:	cmn	x0, #0x1
  41e050:	b.ne	41e0e0 <wcrtomb@plt+0x19190>  // b.any
  41e054:	bl	405dec <wcrtomb@plt+0xe9c>
  41e058:	b	41e028 <wcrtomb@plt+0x190d8>
  41e05c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e060:	ldrb	w0, [x0, #1024]
  41e064:	cbnz	w0, 41e0c4 <wcrtomb@plt+0x19174>
  41e068:	mov	w1, #0x3a                  	// #58
  41e06c:	mov	x0, x24
  41e070:	bl	404b90 <strchr@plt>
  41e074:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41e078:	str	x0, [x1, #1032]
  41e07c:	cbz	x0, 41e0c4 <wcrtomb@plt+0x19174>
  41e080:	ldr	x22, [x23]
  41e084:	cmp	x0, x22
  41e088:	b.ls	41e0c4 <wcrtomb@plt+0x19174>  // b.plast
  41e08c:	sub	x2, x0, x22
  41e090:	mov	w1, #0x2f                  	// #47
  41e094:	mov	x0, x22
  41e098:	bl	404c90 <memchr@plt>
  41e09c:	cbnz	x0, 41e0c4 <wcrtomb@plt+0x19174>
  41e0a0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e0a4:	mov	w2, #0x40000000            	// #1073741824
  41e0a8:	mov	w1, #0x0                   	// #0
  41e0ac:	ldr	x3, [x0, #816]
  41e0b0:	mov	x0, x22
  41e0b4:	bl	425898 <wcrtomb@plt+0x20948>
  41e0b8:	str	w0, [x19, #984]
  41e0bc:	tbnz	w0, #31, 41df48 <wcrtomb@plt+0x18ff8>
  41e0c0:	b	41e00c <wcrtomb@plt+0x190bc>
  41e0c4:	ldr	x0, [x23]
  41e0c8:	mov	w2, #0x1b6                 	// #438
  41e0cc:	mov	w1, #0x0                   	// #0
  41e0d0:	bl	404630 <open@plt>
  41e0d4:	b	41e0b8 <wcrtomb@plt+0x19168>
  41e0d8:	bl	436390 <argp_usage@@Base+0x8eb0>
  41e0dc:	b	41e048 <wcrtomb@plt+0x190f8>
  41e0e0:	cbz	x0, 41e124 <wcrtomb@plt+0x191d4>
  41e0e4:	ldr	x23, [x22]
  41e0e8:	mov	x27, #0x200                 	// #512
  41e0ec:	cmp	x19, #0x200
  41e0f0:	mov	x1, x23
  41e0f4:	csel	x20, x19, x27, ls  // ls = plast
  41e0f8:	mov	w0, #0x1                   	// #1
  41e0fc:	mov	x2, x20
  41e100:	bl	42fd3c <argp_usage@@Base+0x285c>
  41e104:	cmp	x0, x20
  41e108:	b.eq	41e114 <wcrtomb@plt+0x191c4>  // b.none
  41e10c:	ldr	x0, [x26, #912]
  41e110:	bl	42534c <wcrtomb@plt+0x203fc>
  41e114:	add	x23, x23, x20
  41e118:	subs	x19, x19, x20
  41e11c:	b.ne	41e0ec <wcrtomb@plt+0x1919c>  // b.any
  41e120:	b	41e020 <wcrtomb@plt+0x190d0>
  41e124:	mov	w0, #0x1                   	// #1
  41e128:	bl	405db8 <wcrtomb@plt+0xe68>
  41e12c:	mov	w0, w21
  41e130:	bl	41d380 <wcrtomb@plt+0x18430>
  41e134:	mov	w20, w0
  41e138:	ldr	w0, [sp, #96]
  41e13c:	str	w0, [x19, #984]
  41e140:	ldr	w0, [sp, #100]
  41e144:	bl	405db8 <wcrtomb@plt+0xe68>
  41e148:	mov	w0, w20
  41e14c:	ldp	x19, x20, [sp, #16]
  41e150:	ldp	x21, x22, [sp, #32]
  41e154:	ldp	x23, x24, [sp, #48]
  41e158:	ldp	x25, x26, [sp, #64]
  41e15c:	ldr	x27, [sp, #80]
  41e160:	ldp	x29, x30, [sp], #112
  41e164:	ret
  41e168:	stp	x29, x30, [sp, #-112]!
  41e16c:	mov	x29, sp
  41e170:	stp	x19, x20, [sp, #16]
  41e174:	mov	x19, x2
  41e178:	mov	w20, w1
  41e17c:	stp	x21, x22, [sp, #32]
  41e180:	mov	x22, x0
  41e184:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  41e188:	add	x0, sp, #0x50
  41e18c:	add	x21, x21, #0xb60
  41e190:	str	x23, [sp, #48]
  41e194:	bl	418d94 <wcrtomb@plt+0x13e44>
  41e198:	mov	x1, #0x1                   	// #1
  41e19c:	mov	w0, #0xd                   	// #13
  41e1a0:	bl	404540 <signal@plt>
  41e1a4:	str	x0, [x21, #128]
  41e1a8:	bl	418d54 <wcrtomb@plt+0x13e04>
  41e1ac:	str	w0, [x21, #136]
  41e1b0:	cbz	w0, 41e1d4 <wcrtomb@plt+0x19284>
  41e1b4:	ldr	w0, [sp, #80]
  41e1b8:	bl	405db8 <wcrtomb@plt+0xe68>
  41e1bc:	ldr	w0, [sp, #84]
  41e1c0:	ldp	x19, x20, [sp, #16]
  41e1c4:	ldp	x21, x22, [sp, #32]
  41e1c8:	ldr	x23, [sp, #48]
  41e1cc:	ldp	x29, x30, [sp], #112
  41e1d0:	ret
  41e1d4:	ldr	w0, [sp, #80]
  41e1d8:	mov	w1, #0x0                   	// #0
  41e1dc:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  41e1e0:	and	w20, w20, #0xff
  41e1e4:	bl	41d6a4 <wcrtomb@plt+0x18754>
  41e1e8:	ldr	w0, [sp, #84]
  41e1ec:	bl	405db8 <wcrtomb@plt+0xe68>
  41e1f0:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41e1f4:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e1f8:	add	x1, x1, #0x859
  41e1fc:	add	x0, x0, #0x37
  41e200:	bl	41d5bc <wcrtomb@plt+0x1866c>
  41e204:	ldr	x0, [x21, #744]
  41e208:	ldr	x1, [x0]
  41e20c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e210:	add	x0, x0, #0x43
  41e214:	bl	41d5bc <wcrtomb@plt+0x1866c>
  41e218:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e21c:	ldr	x1, [x21, #744]
  41e220:	ldr	x0, [x0, #696]
  41e224:	sub	x1, x1, x0
  41e228:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e22c:	add	x0, x0, #0x4f
  41e230:	asr	x1, x1, #3
  41e234:	add	x1, x1, #0x1
  41e238:	bl	41d628 <wcrtomb@plt+0x186d8>
  41e23c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e240:	ldrsw	x1, [x0, #756]
  41e244:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e248:	add	x0, x0, #0x5a
  41e24c:	bl	41d628 <wcrtomb@plt+0x186d8>
  41e250:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41e254:	ldr	w0, [x0, #4056]
  41e258:	cbnz	w0, 41e264 <wcrtomb@plt+0x19314>
  41e25c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e260:	ldr	w0, [x0, #824]
  41e264:	bl	41eb84 <wcrtomb@plt+0x19c34>
  41e268:	mov	x1, x0
  41e26c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e270:	add	x0, x0, #0x6e
  41e274:	bl	41d5bc <wcrtomb@plt+0x1866c>
  41e278:	strb	w20, [sp, #72]
  41e27c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e280:	add	x1, sp, #0x48
  41e284:	add	x0, x0, #0x79
  41e288:	mov	w2, #0x1                   	// #1
  41e28c:	strb	wzr, [sp, #73]
  41e290:	bl	4043a0 <setenv@plt>
  41e294:	cbz	w0, 41e29c <wcrtomb@plt+0x1934c>
  41e298:	bl	40d4bc <wcrtomb@plt+0x856c>
  41e29c:	ldr	w5, [x19, #104]
  41e2a0:	adrp	x4, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e2a4:	add	x4, x4, #0x86
  41e2a8:	mov	x3, #0x18                  	// #24
  41e2ac:	mov	w2, #0x1                   	// #1
  41e2b0:	mov	x1, x3
  41e2b4:	add	x0, sp, #0x58
  41e2b8:	bl	404560 <__snprintf_chk@plt>
  41e2bc:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e2c0:	add	x1, sp, #0x58
  41e2c4:	add	x0, x0, #0x8b
  41e2c8:	mov	w2, #0x1                   	// #1
  41e2cc:	bl	4043a0 <setenv@plt>
  41e2d0:	cbnz	w0, 41e298 <wcrtomb@plt+0x19348>
  41e2d4:	mov	x1, x22
  41e2d8:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e2dc:	add	x0, x0, #0x94
  41e2e0:	bl	41d5bc <wcrtomb@plt+0x1866c>
  41e2e4:	ldr	x1, [x19, #8]
  41e2e8:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e2ec:	add	x0, x0, #0xa1
  41e2f0:	adrp	x23, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e2f4:	adrp	x22, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e2f8:	adrp	x21, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e2fc:	bl	41d5bc <wcrtomb@plt+0x1866c>
  41e300:	add	x23, x23, #0xf9
  41e304:	ldr	x1, [x19, #32]
  41e308:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e30c:	add	x0, x0, #0xae
  41e310:	add	x22, x22, #0x103
  41e314:	add	x21, x21, #0x10d
  41e318:	bl	41d5bc <wcrtomb@plt+0x1866c>
  41e31c:	ldr	x1, [x19, #40]
  41e320:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e324:	add	x0, x0, #0xb8
  41e328:	bl	41d5bc <wcrtomb@plt+0x1866c>
  41e32c:	ldp	x1, x2, [x19, #216]
  41e330:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e334:	add	x0, x0, #0xc2
  41e338:	bl	41d5e4 <wcrtomb@plt+0x18694>
  41e33c:	ldp	x1, x2, [x19, #232]
  41e340:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e344:	add	x0, x0, #0xcc
  41e348:	bl	41d5e4 <wcrtomb@plt+0x18694>
  41e34c:	ldp	x1, x2, [x19, #248]
  41e350:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e354:	add	x0, x0, #0xd6
  41e358:	bl	41d5e4 <wcrtomb@plt+0x18694>
  41e35c:	ldr	x1, [x19, #136]
  41e360:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e364:	add	x0, x0, #0xe0
  41e368:	bl	41d628 <wcrtomb@plt+0x186d8>
  41e36c:	ldr	w1, [x19, #112]
  41e370:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e374:	add	x0, x0, #0xe9
  41e378:	bl	41d628 <wcrtomb@plt+0x186d8>
  41e37c:	ldr	w1, [x19, #116]
  41e380:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e384:	add	x0, x0, #0xf1
  41e388:	bl	41d628 <wcrtomb@plt+0x186d8>
  41e38c:	cmp	w20, #0x68
  41e390:	b.eq	41e3c4 <wcrtomb@plt+0x19474>  // b.none
  41e394:	b.hi	41e3bc <wcrtomb@plt+0x1946c>  // b.pmore
  41e398:	sub	w20, w20, #0x62
  41e39c:	and	w20, w20, #0xff
  41e3a0:	cmp	w20, #0x1
  41e3a4:	b.ls	41e3ec <wcrtomb@plt+0x1949c>  // b.plast
  41e3a8:	mov	x0, x23
  41e3ac:	bl	404c60 <unsetenv@plt>
  41e3b0:	mov	x0, x22
  41e3b4:	bl	404c60 <unsetenv@plt>
  41e3b8:	b	41e414 <wcrtomb@plt+0x194c4>
  41e3bc:	cmp	w20, #0x6c
  41e3c0:	b.ne	41e3a8 <wcrtomb@plt+0x19458>  // b.any
  41e3c4:	mov	x0, x23
  41e3c8:	bl	404c60 <unsetenv@plt>
  41e3cc:	mov	x0, x22
  41e3d0:	bl	404c60 <unsetenv@plt>
  41e3d4:	ldr	x1, [x19, #24]
  41e3d8:	mov	x0, x21
  41e3dc:	bl	41d5bc <wcrtomb@plt+0x1866c>
  41e3e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e3e4:	ldr	x0, [x0, #624]
  41e3e8:	bl	41d340 <wcrtomb@plt+0x183f0>
  41e3ec:	ldr	x0, [x19, #120]
  41e3f0:	bl	404c30 <gnu_dev_minor@plt>
  41e3f4:	mov	w1, w0
  41e3f8:	mov	x0, x23
  41e3fc:	bl	41d628 <wcrtomb@plt+0x186d8>
  41e400:	ldr	x0, [x19, #120]
  41e404:	bl	4049b0 <gnu_dev_major@plt>
  41e408:	mov	w1, w0
  41e40c:	mov	x0, x22
  41e410:	bl	41d628 <wcrtomb@plt+0x186d8>
  41e414:	mov	x0, x21
  41e418:	bl	404c60 <unsetenv@plt>
  41e41c:	b	41e3e0 <wcrtomb@plt+0x19490>
  41e420:	stp	x29, x30, [sp, #-48]!
  41e424:	mov	x29, sp
  41e428:	stp	x19, x20, [sp, #16]
  41e42c:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  41e430:	add	x19, x19, #0xb60
  41e434:	ldr	w0, [x19, #136]
  41e438:	tbnz	w0, #31, 41e4f0 <wcrtomb@plt+0x195a0>
  41e43c:	ldr	x1, [x19, #128]
  41e440:	mov	w0, #0xd                   	// #13
  41e444:	bl	404540 <signal@plt>
  41e448:	ldr	w0, [x19, #136]
  41e44c:	add	x1, sp, #0x2c
  41e450:	mov	w2, #0x0                   	// #0
  41e454:	bl	404ea0 <waitpid@plt>
  41e458:	mov	w20, w0
  41e45c:	cmn	w0, #0x1
  41e460:	b.eq	41e4d0 <wcrtomb@plt+0x19580>  // b.none
  41e464:	ldr	w1, [sp, #44]
  41e468:	ands	w0, w1, #0x7f
  41e46c:	b.ne	41e4fc <wcrtomb@plt+0x195ac>  // b.any
  41e470:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e474:	ldrb	w0, [x0, #585]
  41e478:	cbnz	w0, 41e54c <wcrtomb@plt+0x195fc>
  41e47c:	tst	x1, #0xff00
  41e480:	b.eq	41e54c <wcrtomb@plt+0x195fc>  // b.none
  41e484:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e488:	ldr	x0, [x0, #1016]
  41e48c:	cbz	x0, 41e494 <wcrtomb@plt+0x19544>
  41e490:	blr	x0
  41e494:	mov	w2, #0x5                   	// #5
  41e498:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e49c:	mov	x0, #0x0                   	// #0
  41e4a0:	add	x1, x1, #0x11a
  41e4a4:	bl	404d00 <dcgettext@plt>
  41e4a8:	mov	x2, x0
  41e4ac:	ldrb	w4, [sp, #45]
  41e4b0:	mov	w1, #0x0                   	// #0
  41e4b4:	ldrsw	x3, [x19, #136]
  41e4b8:	mov	w0, #0x0                   	// #0
  41e4bc:	bl	4042e0 <error@plt>
  41e4c0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41e4c4:	mov	w1, #0x2                   	// #2
  41e4c8:	str	w1, [x0, #3464]
  41e4cc:	b	41e54c <wcrtomb@plt+0x195fc>
  41e4d0:	bl	404e10 <__errno_location@plt>
  41e4d4:	ldr	w0, [x0]
  41e4d8:	cmp	w0, #0x4
  41e4dc:	b.eq	41e448 <wcrtomb@plt+0x194f8>  // b.none
  41e4e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e4e4:	str	w20, [x19, #136]
  41e4e8:	ldr	x0, [x0, #624]
  41e4ec:	bl	42533c <wcrtomb@plt+0x203ec>
  41e4f0:	ldp	x19, x20, [sp, #16]
  41e4f4:	ldp	x29, x30, [sp], #48
  41e4f8:	ret
  41e4fc:	add	w0, w0, #0x1
  41e500:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41e504:	sbfx	x0, x0, #1, #7
  41e508:	ldr	x1, [x1, #1016]
  41e50c:	cmp	w0, #0x0
  41e510:	b.le	41e558 <wcrtomb@plt+0x19608>
  41e514:	cbz	x1, 41e51c <wcrtomb@plt+0x195cc>
  41e518:	blr	x1
  41e51c:	mov	w2, #0x5                   	// #5
  41e520:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e524:	mov	x0, #0x0                   	// #0
  41e528:	add	x1, x1, #0x138
  41e52c:	bl	404d00 <dcgettext@plt>
  41e530:	mov	x2, x0
  41e534:	ldrsw	x3, [x19, #136]
  41e538:	mov	w1, #0x0                   	// #0
  41e53c:	ldr	w4, [sp, #44]
  41e540:	mov	w0, #0x0                   	// #0
  41e544:	and	w4, w4, #0x7f
  41e548:	bl	4042e0 <error@plt>
  41e54c:	mov	w0, #0xffffffff            	// #-1
  41e550:	str	w0, [x19, #136]
  41e554:	b	41e4f0 <wcrtomb@plt+0x195a0>
  41e558:	cbz	x1, 41e560 <wcrtomb@plt+0x19610>
  41e55c:	blr	x1
  41e560:	mov	w2, #0x5                   	// #5
  41e564:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e568:	mov	x0, #0x0                   	// #0
  41e56c:	add	x1, x1, #0x15b
  41e570:	bl	404d00 <dcgettext@plt>
  41e574:	mov	x2, x0
  41e578:	ldrsw	x3, [x19, #136]
  41e57c:	mov	w1, #0x0                   	// #0
  41e580:	mov	w0, #0x0                   	// #0
  41e584:	bl	4042e0 <error@plt>
  41e588:	b	41e4c0 <wcrtomb@plt+0x19570>
  41e58c:	stp	x29, x30, [sp, #-112]!
  41e590:	mov	x29, sp
  41e594:	stp	x19, x20, [sp, #16]
  41e598:	mov	w19, w1
  41e59c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  41e5a0:	add	x20, x20, #0xb60
  41e5a4:	stp	x21, x22, [sp, #32]
  41e5a8:	mov	x21, x0
  41e5ac:	add	x0, sp, #0x48
  41e5b0:	stp	x23, x24, [sp, #48]
  41e5b4:	bl	418d94 <wcrtomb@plt+0x13e44>
  41e5b8:	mov	x1, #0x1                   	// #1
  41e5bc:	mov	w0, #0xd                   	// #13
  41e5c0:	bl	404540 <signal@plt>
  41e5c4:	str	x0, [x20, #144]
  41e5c8:	bl	418d54 <wcrtomb@plt+0x13e04>
  41e5cc:	cbz	w0, 41e6e4 <wcrtomb@plt+0x19794>
  41e5d0:	mov	w22, w0
  41e5d4:	ldr	w0, [sp, #76]
  41e5d8:	stp	xzr, xzr, [sp, #80]
  41e5dc:	bl	405db8 <wcrtomb@plt+0xe68>
  41e5e0:	ldr	w0, [sp, #72]
  41e5e4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e5e8:	add	x1, x1, #0xb66
  41e5ec:	bl	404710 <fdopen@plt>
  41e5f0:	mov	x2, x0
  41e5f4:	add	x1, sp, #0x58
  41e5f8:	mov	x23, x0
  41e5fc:	add	x0, sp, #0x50
  41e600:	bl	404ab0 <getline@plt>
  41e604:	mov	x19, x0
  41e608:	mov	w24, w0
  41e60c:	mov	x0, x23
  41e610:	bl	404570 <fclose@plt>
  41e614:	cmp	w19, #0x0
  41e618:	b.le	41e638 <wcrtomb@plt+0x196e8>
  41e61c:	ldr	x0, [sp, #80]
  41e620:	add	x1, x0, w19, sxtw
  41e624:	ldurb	w1, [x1, #-1]
  41e628:	cmp	w1, #0xa
  41e62c:	b.ne	41e638 <wcrtomb@plt+0x196e8>  // b.any
  41e630:	sub	w24, w19, #0x1
  41e634:	strb	wzr, [x0, w24, sxtw]
  41e638:	add	x1, sp, #0x44
  41e63c:	mov	w0, w22
  41e640:	mov	w2, #0x0                   	// #0
  41e644:	bl	404ea0 <waitpid@plt>
  41e648:	mov	w19, w0
  41e64c:	cmn	w0, #0x1
  41e650:	b.eq	41e68c <wcrtomb@plt+0x1973c>  // b.none
  41e654:	ldr	x1, [x20, #144]
  41e658:	mov	w0, #0xd                   	// #13
  41e65c:	bl	404540 <signal@plt>
  41e660:	ldr	w0, [sp, #68]
  41e664:	tst	x0, #0x7f
  41e668:	b.ne	41e6d4 <wcrtomb@plt+0x19784>  // b.any
  41e66c:	tst	x0, #0xff00
  41e670:	ldr	x0, [sp, #80]
  41e674:	b.ne	41e6cc <wcrtomb@plt+0x1977c>  // b.any
  41e678:	cmp	w24, #0x0
  41e67c:	b.le	41e6cc <wcrtomb@plt+0x1977c>
  41e680:	str	x0, [x21]
  41e684:	ldrb	w19, [sp, #69]
  41e688:	b	41e6b4 <wcrtomb@plt+0x19764>
  41e68c:	bl	404e10 <__errno_location@plt>
  41e690:	ldr	w0, [x0]
  41e694:	cmp	w0, #0x4
  41e698:	b.eq	41e638 <wcrtomb@plt+0x196e8>  // b.none
  41e69c:	ldr	x1, [x20, #144]
  41e6a0:	mov	w0, #0xd                   	// #13
  41e6a4:	bl	404540 <signal@plt>
  41e6a8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e6ac:	ldr	x0, [x0, #776]
  41e6b0:	bl	42533c <wcrtomb@plt+0x203ec>
  41e6b4:	mov	w0, w19
  41e6b8:	ldp	x19, x20, [sp, #16]
  41e6bc:	ldp	x21, x22, [sp, #32]
  41e6c0:	ldp	x23, x24, [sp, #48]
  41e6c4:	ldp	x29, x30, [sp], #112
  41e6c8:	ret
  41e6cc:	bl	404ae0 <free@plt>
  41e6d0:	b	41e684 <wcrtomb@plt+0x19734>
  41e6d4:	ldr	x0, [sp, #80]
  41e6d8:	mov	w19, #0xffffffff            	// #-1
  41e6dc:	bl	404ae0 <free@plt>
  41e6e0:	b	41e6b4 <wcrtomb@plt+0x19764>
  41e6e4:	mov	w2, #0x1                   	// #1
  41e6e8:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41e6ec:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e6f0:	add	x1, x1, #0x859
  41e6f4:	add	x0, x0, #0x37
  41e6f8:	bl	4043a0 <setenv@plt>
  41e6fc:	ldr	x1, [x21]
  41e700:	mov	w2, #0x1                   	// #1
  41e704:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e708:	add	x0, x0, #0x43
  41e70c:	bl	4043a0 <setenv@plt>
  41e710:	add	x1, sp, #0x58
  41e714:	sxtw	x0, w19
  41e718:	bl	431400 <argp_usage@@Base+0x3f20>
  41e71c:	mov	x1, x0
  41e720:	mov	w2, #0x1                   	// #1
  41e724:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e728:	add	x0, x0, #0x4f
  41e72c:	bl	4043a0 <setenv@plt>
  41e730:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e734:	add	x1, sp, #0x58
  41e738:	ldrsw	x0, [x0, #756]
  41e73c:	bl	431400 <argp_usage@@Base+0x3f20>
  41e740:	mov	x1, x0
  41e744:	mov	w2, #0x1                   	// #1
  41e748:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e74c:	add	x0, x0, #0x5a
  41e750:	bl	4043a0 <setenv@plt>
  41e754:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e758:	ldr	w0, [x0, #868]
  41e75c:	bl	41f03c <wcrtomb@plt+0x1a0ec>
  41e760:	mov	x1, x0
  41e764:	mov	w2, #0x1                   	// #1
  41e768:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e76c:	add	x0, x0, #0x183
  41e770:	bl	4043a0 <setenv@plt>
  41e774:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41e778:	ldr	w0, [x0, #4056]
  41e77c:	cbnz	w0, 41e788 <wcrtomb@plt+0x19838>
  41e780:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e784:	ldr	w0, [x0, #824]
  41e788:	bl	41eb84 <wcrtomb@plt+0x19c34>
  41e78c:	mov	x1, x0
  41e790:	mov	w2, #0x1                   	// #1
  41e794:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e798:	add	x0, x0, #0x6e
  41e79c:	bl	4043a0 <setenv@plt>
  41e7a0:	ldrsw	x0, [sp, #76]
  41e7a4:	add	x1, sp, #0x58
  41e7a8:	bl	431400 <argp_usage@@Base+0x3f20>
  41e7ac:	mov	x1, x0
  41e7b0:	mov	w2, #0x1                   	// #1
  41e7b4:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e7b8:	add	x0, x0, #0x192
  41e7bc:	bl	4043a0 <setenv@plt>
  41e7c0:	ldr	w0, [sp, #72]
  41e7c4:	bl	405db8 <wcrtomb@plt+0xe68>
  41e7c8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e7cc:	ldr	x0, [x0, #776]
  41e7d0:	bl	41d340 <wcrtomb@plt+0x183f0>
  41e7d4:	stp	x29, x30, [sp, #-80]!
  41e7d8:	mov	x29, sp
  41e7dc:	stp	x19, x20, [sp, #16]
  41e7e0:	mov	x19, x0
  41e7e4:	stp	x21, x22, [sp, #32]
  41e7e8:	mov	x22, x1
  41e7ec:	mov	w21, w2
  41e7f0:	bl	418d54 <wcrtomb@plt+0x13e04>
  41e7f4:	cbnz	w0, 41e8bc <wcrtomb@plt+0x1996c>
  41e7f8:	mov	w2, #0x1                   	// #1
  41e7fc:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x10380>
  41e800:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e804:	add	x1, x1, #0x859
  41e808:	add	x0, x0, #0x37
  41e80c:	bl	4043a0 <setenv@plt>
  41e810:	mov	w2, #0x1                   	// #1
  41e814:	mov	x1, x22
  41e818:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e81c:	add	x0, x0, #0x43
  41e820:	bl	4043a0 <setenv@plt>
  41e824:	add	x1, sp, #0x38
  41e828:	sxtw	x0, w21
  41e82c:	bl	431400 <argp_usage@@Base+0x3f20>
  41e830:	mov	x1, x0
  41e834:	mov	w2, #0x1                   	// #1
  41e838:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e83c:	add	x0, x0, #0x199
  41e840:	bl	4043a0 <setenv@plt>
  41e844:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e848:	add	x1, sp, #0x38
  41e84c:	ldrsw	x0, [x0, #756]
  41e850:	bl	431400 <argp_usage@@Base+0x3f20>
  41e854:	mov	x1, x0
  41e858:	mov	w2, #0x1                   	// #1
  41e85c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e860:	add	x0, x0, #0x5a
  41e864:	bl	4043a0 <setenv@plt>
  41e868:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e86c:	ldr	w0, [x0, #868]
  41e870:	bl	41f03c <wcrtomb@plt+0x1a0ec>
  41e874:	mov	x1, x0
  41e878:	mov	w2, #0x1                   	// #1
  41e87c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e880:	add	x0, x0, #0x183
  41e884:	bl	4043a0 <setenv@plt>
  41e888:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41e88c:	ldr	w0, [x0, #4056]
  41e890:	cbnz	w0, 41e89c <wcrtomb@plt+0x1994c>
  41e894:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41e898:	ldr	w0, [x0, #824]
  41e89c:	bl	41eb84 <wcrtomb@plt+0x19c34>
  41e8a0:	mov	x1, x0
  41e8a4:	mov	w2, #0x1                   	// #1
  41e8a8:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41e8ac:	add	x0, x0, #0x6e
  41e8b0:	bl	4043a0 <setenv@plt>
  41e8b4:	mov	x0, x19
  41e8b8:	bl	41d340 <wcrtomb@plt+0x183f0>
  41e8bc:	mov	w20, w0
  41e8c0:	add	x1, sp, #0x38
  41e8c4:	mov	w0, w20
  41e8c8:	mov	w2, #0x0                   	// #0
  41e8cc:	bl	404ea0 <waitpid@plt>
  41e8d0:	cmn	w0, #0x1
  41e8d4:	b.ne	41e8f0 <wcrtomb@plt+0x199a0>  // b.any
  41e8d8:	bl	404e10 <__errno_location@plt>
  41e8dc:	ldr	w0, [x0]
  41e8e0:	cmp	w0, #0x4
  41e8e4:	b.eq	41e8c0 <wcrtomb@plt+0x19970>  // b.none
  41e8e8:	mov	x0, x19
  41e8ec:	bl	42533c <wcrtomb@plt+0x203ec>
  41e8f0:	ldp	x19, x20, [sp, #16]
  41e8f4:	ldp	x21, x22, [sp, #32]
  41e8f8:	ldp	x29, x30, [sp], #80
  41e8fc:	ret
  41e900:	ldr	x3, [x0]
  41e904:	ldr	w2, [x0, #8]
  41e908:	cbnz	x3, 41e930 <wcrtomb@plt+0x199e0>
  41e90c:	cbnz	w2, 41e930 <wcrtomb@plt+0x199e0>
  41e910:	ldr	x3, [x0, #16]
  41e914:	cbnz	x3, 41e930 <wcrtomb@plt+0x199e0>
  41e918:	ldr	w3, [x0, #24]
  41e91c:	cbnz	w3, 41e930 <wcrtomb@plt+0x199e0>
  41e920:	ldr	x3, [x0, #32]
  41e924:	cbnz	x3, 41e930 <wcrtomb@plt+0x199e0>
  41e928:	mov	x0, #0x0                   	// #0
  41e92c:	ret
  41e930:	cmp	w1, w2
  41e934:	b.eq	41e92c <wcrtomb@plt+0x199dc>  // b.none
  41e938:	add	x0, x0, #0x30
  41e93c:	b	41e900 <wcrtomb@plt+0x199b0>
  41e940:	stp	x29, x30, [sp, #-48]!
  41e944:	mov	x29, sp
  41e948:	str	x21, [sp, #32]
  41e94c:	mov	w21, w0
  41e950:	ldr	x0, [x1, #8]
  41e954:	stp	x19, x20, [sp, #16]
  41e958:	mov	x20, x1
  41e95c:	cbz	x0, 41e9c0 <wcrtomb@plt+0x19a70>
  41e960:	bl	404280 <strlen@plt>
  41e964:	add	x0, x0, #0x21
  41e968:	bl	436d44 <argp_usage@@Base+0x9864>
  41e96c:	mov	x19, x0
  41e970:	ldr	x1, [x20, #8]
  41e974:	cbz	x1, 41e9c8 <wcrtomb@plt+0x19a78>
  41e978:	add	x2, x0, #0x20
  41e97c:	mov	x0, x2
  41e980:	bl	404c40 <strcpy@plt>
  41e984:	str	x0, [x19, #8]
  41e988:	mov	w2, w21
  41e98c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41e990:	add	x1, x1, #0xbf8
  41e994:	ldr	w0, [x20]
  41e998:	str	w0, [x19]
  41e99c:	ldr	x0, [x20, #16]
  41e9a0:	str	x0, [x19, #16]
  41e9a4:	ldr	x0, [x1, x2, lsl #3]
  41e9a8:	str	x0, [x19, #24]
  41e9ac:	ldr	x21, [sp, #32]
  41e9b0:	str	x19, [x1, x2, lsl #3]
  41e9b4:	ldp	x19, x20, [sp, #16]
  41e9b8:	ldp	x29, x30, [sp], #48
  41e9bc:	ret
  41e9c0:	mov	x0, #0x20                  	// #32
  41e9c4:	b	41e968 <wcrtomb@plt+0x19a18>
  41e9c8:	str	xzr, [x0, #8]
  41e9cc:	b	41e988 <wcrtomb@plt+0x19a38>
  41e9d0:	stp	x29, x30, [sp, #-32]!
  41e9d4:	mov	x29, sp
  41e9d8:	str	x19, [sp, #16]
  41e9dc:	mov	w19, w0
  41e9e0:	bl	405934 <wcrtomb@plt+0x9e4>
  41e9e4:	bl	405c10 <wcrtomb@plt+0xcc0>
  41e9e8:	mov	w0, w19
  41e9ec:	adrp	x1, 41e000 <wcrtomb@plt+0x190b0>
  41e9f0:	ldr	x19, [sp, #16]
  41e9f4:	add	x1, x1, #0x9d0
  41e9f8:	ldp	x29, x30, [sp], #32
  41e9fc:	b	404540 <signal@plt>
  41ea00:	ldr	w3, [x1]
  41ea04:	mov	x2, x0
  41ea08:	ldr	w0, [x0]
  41ea0c:	cmp	w0, w3
  41ea10:	b.ne	41ea40 <wcrtomb@plt+0x19af0>  // b.any
  41ea14:	cmp	w0, #0x1
  41ea18:	b.eq	41ea48 <wcrtomb@plt+0x19af8>  // b.none
  41ea1c:	stp	x29, x30, [sp, #-16]!
  41ea20:	mov	x29, sp
  41ea24:	ldr	x1, [x1, #8]
  41ea28:	ldr	x0, [x2, #8]
  41ea2c:	bl	404a30 <strcmp@plt>
  41ea30:	cmp	w0, #0x0
  41ea34:	cset	w0, eq  // eq = none
  41ea38:	ldp	x29, x30, [sp], #16
  41ea3c:	ret
  41ea40:	mov	w0, #0x0                   	// #0
  41ea44:	ret
  41ea48:	ret
  41ea4c:	stp	x29, x30, [sp, #-80]!
  41ea50:	mov	x29, sp
  41ea54:	str	x21, [sp, #32]
  41ea58:	mov	x21, x1
  41ea5c:	mov	x1, #0xffffffffffffffff    	// #-1
  41ea60:	stp	x19, x20, [sp, #16]
  41ea64:	mov	x20, x0
  41ea68:	str	x1, [sp, #56]
  41ea6c:	mov	w1, #0x3a                  	// #58
  41ea70:	bl	404b90 <strchr@plt>
  41ea74:	cbz	x0, 41eac4 <wcrtomb@plt+0x19b74>
  41ea78:	mov	x19, x0
  41ea7c:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  41ea80:	add	x3, sp, #0x38
  41ea84:	add	x4, x4, #0x41a
  41ea88:	add	x1, sp, #0x40
  41ea8c:	mov	w2, #0xa                   	// #10
  41ea90:	strb	wzr, [x19], #1
  41ea94:	ldrb	w0, [x20]
  41ea98:	cmp	w0, #0x0
  41ea9c:	mov	x0, x19
  41eaa0:	csel	x20, x20, xzr, ne  // ne = any
  41eaa4:	bl	436fdc <argp_usage@@Base+0x9afc>
  41eaa8:	cbnz	w0, 41eb34 <wcrtomb@plt+0x19be4>
  41eaac:	ldr	x1, [sp, #56]
  41eab0:	mov	x0, #0xffffffff            	// #4294967295
  41eab4:	cmp	x1, x0
  41eab8:	b.hi	41eb34 <wcrtomb@plt+0x19be4>  // b.pmore
  41eabc:	cbnz	x20, 41eb00 <wcrtomb@plt+0x19bb0>
  41eac0:	b	41eb1c <wcrtomb@plt+0x19bcc>
  41eac4:	ldrb	w0, [x20]
  41eac8:	sub	w0, w0, #0x30
  41eacc:	and	w0, w0, #0xff
  41ead0:	cmp	w0, #0x9
  41ead4:	b.hi	41eb00 <wcrtomb@plt+0x19bb0>  // b.pmore
  41ead8:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  41eadc:	add	x3, sp, #0x48
  41eae0:	add	x4, x4, #0x41a
  41eae4:	add	x1, sp, #0x40
  41eae8:	mov	x0, x20
  41eaec:	mov	w2, #0xa                   	// #10
  41eaf0:	bl	436fdc <argp_usage@@Base+0x9afc>
  41eaf4:	cbz	w0, 41eb08 <wcrtomb@plt+0x19bb8>
  41eaf8:	cmp	w0, #0x1
  41eafc:	b.eq	41eb30 <wcrtomb@plt+0x19be0>  // b.none
  41eb00:	str	x20, [x21]
  41eb04:	b	41eb1c <wcrtomb@plt+0x19bcc>
  41eb08:	ldr	x0, [sp, #72]
  41eb0c:	mov	x1, #0xffffffff            	// #4294967295
  41eb10:	cmp	x0, x1
  41eb14:	b.hi	41eb30 <wcrtomb@plt+0x19be0>  // b.pmore
  41eb18:	str	x0, [sp, #56]
  41eb1c:	ldp	x19, x20, [sp, #16]
  41eb20:	ldr	x21, [sp, #32]
  41eb24:	ldr	x0, [sp, #56]
  41eb28:	ldp	x29, x30, [sp], #80
  41eb2c:	ret
  41eb30:	mov	x19, x20
  41eb34:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41eb38:	ldr	x0, [x0, #1016]
  41eb3c:	cbz	x0, 41eb44 <wcrtomb@plt+0x19bf4>
  41eb40:	blr	x0
  41eb44:	mov	x0, x19
  41eb48:	bl	436084 <argp_usage@@Base+0x8ba4>
  41eb4c:	mov	w2, #0x5                   	// #5
  41eb50:	mov	x19, x0
  41eb54:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41eb58:	mov	x0, #0x0                   	// #0
  41eb5c:	add	x1, x1, #0x1b2
  41eb60:	bl	404d00 <dcgettext@plt>
  41eb64:	mov	x3, x19
  41eb68:	mov	x4, x0
  41eb6c:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  41eb70:	add	x2, x2, #0xe6f
  41eb74:	mov	w1, #0x0                   	// #0
  41eb78:	mov	w0, #0x0                   	// #0
  41eb7c:	bl	4042e0 <error@plt>
  41eb80:	bl	40d47c <wcrtomb@plt+0x852c>
  41eb84:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x14380>
  41eb88:	mov	w2, w0
  41eb8c:	add	x1, x1, #0xc48
  41eb90:	ldr	x0, [x1]
  41eb94:	cbnz	x0, 41eba4 <wcrtomb@plt+0x19c54>
  41eb98:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41eb9c:	add	x0, x0, #0x1cc
  41eba0:	ret
  41eba4:	ldr	w3, [x1, #8]
  41eba8:	cmp	w3, w2
  41ebac:	b.eq	41eba0 <wcrtomb@plt+0x19c50>  // b.none
  41ebb0:	add	x1, x1, #0x10
  41ebb4:	b	41eb90 <wcrtomb@plt+0x19c40>
  41ebb8:	stp	x29, x30, [sp, #-16]!
  41ebbc:	mov	w0, #0x6                   	// #6
  41ebc0:	mov	x29, sp
  41ebc4:	bl	41eb84 <wcrtomb@plt+0x19c34>
  41ebc8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  41ebcc:	adrp	x5, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ebd0:	ldp	x29, x30, [sp], #16
  41ebd4:	add	x5, x5, #0x1d5
  41ebd8:	ldr	x4, [x1, #1072]
  41ebdc:	mov	w3, #0x14                  	// #20
  41ebe0:	mov	x1, x0
  41ebe4:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  41ebe8:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ebec:	add	x2, x2, #0x8dc
  41ebf0:	add	x0, x0, #0x1e6
  41ebf4:	b	437328 <argp_usage@@Base+0x9e48>
  41ebf8:	stp	x29, x30, [sp, #-160]!
  41ebfc:	cmp	w0, #0x114
  41ec00:	mov	x29, sp
  41ec04:	stp	x19, x20, [sp, #16]
  41ec08:	stp	x21, x22, [sp, #32]
  41ec0c:	stp	x23, x24, [sp, #48]
  41ec10:	b.eq	41ef1c <wcrtomb@plt+0x19fcc>  // b.none
  41ec14:	mov	w2, w0
  41ec18:	mov	x19, x1
  41ec1c:	b.gt	41ec7c <wcrtomb@plt+0x19d2c>
  41ec20:	cmp	w0, #0x6a
  41ec24:	b.eq	41eed4 <wcrtomb@plt+0x19f84>  // b.none
  41ec28:	b.gt	41ec54 <wcrtomb@plt+0x19d04>
  41ec2c:	cmp	w0, #0x4a
  41ec30:	b.eq	41ef5c <wcrtomb@plt+0x1a00c>  // b.none
  41ec34:	cmp	w0, #0x5a
  41ec38:	b.eq	41eefc <wcrtomb@plt+0x19fac>  // b.none
  41ec3c:	mov	x0, x19
  41ec40:	ldp	x19, x20, [sp, #16]
  41ec44:	ldp	x21, x22, [sp, #32]
  41ec48:	ldp	x23, x24, [sp, #48]
  41ec4c:	ldp	x29, x30, [sp], #160
  41ec50:	ret
  41ec54:	cmp	w0, #0x7a
  41ec58:	b.ne	41ec3c <wcrtomb@plt+0x19cec>  // b.any
  41ec5c:	mov	w2, #0x5                   	// #5
  41ec60:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ec64:	mov	x0, #0x0                   	// #0
  41ec68:	add	x1, x1, #0x220
  41ec6c:	bl	404d00 <dcgettext@plt>
  41ec70:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x14380>
  41ec74:	add	x1, x1, #0x106
  41ec78:	b	41eef0 <wcrtomb@plt+0x19fa0>
  41ec7c:	cmp	w0, #0x14f
  41ec80:	b.eq	41ef7c <wcrtomb@plt+0x1a02c>  // b.none
  41ec84:	b.gt	41ecb8 <wcrtomb@plt+0x19d68>
  41ec88:	cmp	w0, #0x115
  41ec8c:	b.eq	41ef3c <wcrtomb@plt+0x19fec>  // b.none
  41ec90:	cmp	w0, #0x116
  41ec94:	b.ne	41ec3c <wcrtomb@plt+0x19cec>  // b.any
  41ec98:	mov	w2, #0x5                   	// #5
  41ec9c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41eca0:	mov	x0, #0x0                   	// #0
  41eca4:	add	x1, x1, #0x220
  41eca8:	bl	404d00 <dcgettext@plt>
  41ecac:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41ecb0:	add	x1, x1, #0x1e2
  41ecb4:	b	41eef0 <wcrtomb@plt+0x19fa0>
  41ecb8:	mov	w0, #0x4                   	// #4
  41ecbc:	movk	w0, #0x200, lsl #16
  41ecc0:	cmp	w2, w0
  41ecc4:	b.ne	41ec3c <wcrtomb@plt+0x19cec>  // b.any
  41ecc8:	mov	x2, #0x0                   	// #0
  41eccc:	mov	x1, #0x0                   	// #0
  41ecd0:	add	x0, sp, #0x48
  41ecd4:	adrp	x4, 404000 <mbrtowc@plt-0x1f0>
  41ecd8:	adrp	x3, 436000 <argp_usage@@Base+0x8b20>
  41ecdc:	add	x4, x4, #0xae0
  41ece0:	add	x3, x3, #0xd44
  41ece4:	bl	437aa0 <_obstack_begin@@Base>
  41ece8:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ecec:	add	x1, x1, #0x23e
  41ecf0:	mov	w2, #0x5                   	// #5
  41ecf4:	mov	x0, #0x0                   	// #0
  41ecf8:	bl	404d00 <dcgettext@plt>
  41ecfc:	mov	x20, x0
  41ed00:	bl	404280 <strlen@plt>
  41ed04:	mov	x19, x0
  41ed08:	ldp	x1, x0, [sp, #96]
  41ed0c:	sub	x0, x0, x1
  41ed10:	cmp	x19, x0
  41ed14:	b.ls	41ed24 <wcrtomb@plt+0x19dd4>  // b.plast
  41ed18:	mov	x1, x19
  41ed1c:	add	x0, sp, #0x48
  41ed20:	bl	437acc <_obstack_newchunk@@Base>
  41ed24:	ldr	x0, [sp, #96]
  41ed28:	mov	x2, x19
  41ed2c:	mov	x1, x20
  41ed30:	bl	404200 <memcpy@plt>
  41ed34:	ldr	x2, [sp, #96]
  41ed38:	add	x19, x2, x19
  41ed3c:	str	x19, [sp, #96]
  41ed40:	ldr	x2, [sp, #104]
  41ed44:	sub	x19, x2, x19
  41ed48:	cmp	x19, #0x1
  41ed4c:	b.hi	41ed5c <wcrtomb@plt+0x19e0c>  // b.pmore
  41ed50:	add	x0, sp, #0x48
  41ed54:	mov	x1, #0x2                   	// #2
  41ed58:	bl	437acc <_obstack_newchunk@@Base>
  41ed5c:	ldr	x0, [sp, #96]
  41ed60:	mov	w1, #0xa0a                 	// #2570
  41ed64:	adrp	x20, 450000 <_obstack_memory_used@@Base+0x18380>
  41ed68:	add	x20, x20, #0x3f8
  41ed6c:	mov	w23, #0x2020                	// #8224
  41ed70:	mov	w24, #0xa                   	// #10
  41ed74:	strh	w1, [x0]
  41ed78:	ldr	x0, [sp, #96]
  41ed7c:	add	x0, x0, #0x2
  41ed80:	str	x0, [sp, #96]
  41ed84:	ldr	x22, [x20]
  41ed88:	cbnz	x22, 41ef9c <wcrtomb@plt+0x1a04c>
  41ed8c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ed90:	add	x1, x1, #0x272
  41ed94:	mov	w2, #0x5                   	// #5
  41ed98:	mov	x0, #0x0                   	// #0
  41ed9c:	bl	404d00 <dcgettext@plt>
  41eda0:	mov	x20, x0
  41eda4:	bl	404280 <strlen@plt>
  41eda8:	mov	x19, x0
  41edac:	ldp	x1, x0, [sp, #96]
  41edb0:	sub	x0, x0, x1
  41edb4:	cmp	x19, x0
  41edb8:	b.ls	41edc8 <wcrtomb@plt+0x19e78>  // b.plast
  41edbc:	mov	x1, x19
  41edc0:	add	x0, sp, #0x48
  41edc4:	bl	437acc <_obstack_newchunk@@Base>
  41edc8:	ldr	x0, [sp, #96]
  41edcc:	mov	x1, x20
  41edd0:	mov	x2, x19
  41edd4:	bl	404200 <memcpy@plt>
  41edd8:	ldr	x0, [sp, #96]
  41eddc:	add	x0, x0, x19
  41ede0:	str	x0, [sp, #96]
  41ede4:	bl	41ebb8 <wcrtomb@plt+0x19c68>
  41ede8:	mov	x20, x0
  41edec:	bl	404280 <strlen@plt>
  41edf0:	mov	x19, x0
  41edf4:	ldp	x1, x0, [sp, #96]
  41edf8:	sub	x0, x0, x1
  41edfc:	cmp	x19, x0
  41ee00:	b.ls	41ee10 <wcrtomb@plt+0x19ec0>  // b.plast
  41ee04:	mov	x1, x19
  41ee08:	add	x0, sp, #0x48
  41ee0c:	bl	437acc <_obstack_newchunk@@Base>
  41ee10:	ldr	x0, [sp, #96]
  41ee14:	mov	x2, x19
  41ee18:	mov	x1, x20
  41ee1c:	bl	404200 <memcpy@plt>
  41ee20:	ldp	x2, x0, [sp, #96]
  41ee24:	add	x19, x2, x19
  41ee28:	str	x19, [sp, #96]
  41ee2c:	cmp	x19, x0
  41ee30:	b.ne	41ee40 <wcrtomb@plt+0x19ef0>  // b.any
  41ee34:	add	x0, sp, #0x48
  41ee38:	mov	x1, #0x1                   	// #1
  41ee3c:	bl	437acc <_obstack_newchunk@@Base>
  41ee40:	ldr	x0, [sp, #96]
  41ee44:	add	x1, x0, #0x1
  41ee48:	str	x1, [sp, #96]
  41ee4c:	mov	w1, #0xa                   	// #10
  41ee50:	strb	w1, [x0]
  41ee54:	ldp	x0, x1, [sp, #96]
  41ee58:	cmp	x1, x0
  41ee5c:	b.ne	41ee6c <wcrtomb@plt+0x19f1c>  // b.any
  41ee60:	add	x0, sp, #0x48
  41ee64:	mov	x1, #0x1                   	// #1
  41ee68:	bl	437acc <_obstack_newchunk@@Base>
  41ee6c:	ldr	x0, [sp, #96]
  41ee70:	add	x1, x0, #0x1
  41ee74:	str	x1, [sp, #96]
  41ee78:	strb	wzr, [x0]
  41ee7c:	ldp	x0, x2, [sp, #88]
  41ee80:	cmp	x2, x0
  41ee84:	b.ne	41ee94 <wcrtomb@plt+0x19f44>  // b.any
  41ee88:	ldrb	w1, [sp, #152]
  41ee8c:	orr	w1, w1, #0x2
  41ee90:	strb	w1, [sp, #152]
  41ee94:	ldr	x1, [sp, #120]
  41ee98:	ldr	x3, [sp, #104]
  41ee9c:	add	x2, x2, x1
  41eea0:	bic	x1, x2, x1
  41eea4:	ldr	x2, [sp, #80]
  41eea8:	sub	x4, x1, x2
  41eeac:	sub	x2, x3, x2
  41eeb0:	cmp	x4, x2
  41eeb4:	csel	x1, x1, x3, ls  // ls = plast
  41eeb8:	stp	x1, x1, [sp, #88]
  41eebc:	bl	436f10 <argp_usage@@Base+0x9a30>
  41eec0:	mov	x19, x0
  41eec4:	mov	x1, #0x0                   	// #0
  41eec8:	add	x0, sp, #0x48
  41eecc:	bl	437c0c <_obstack_free@@Base>
  41eed0:	b	41ec3c <wcrtomb@plt+0x19cec>
  41eed4:	mov	w2, #0x5                   	// #5
  41eed8:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41eedc:	mov	x0, #0x0                   	// #0
  41eee0:	add	x1, x1, #0x220
  41eee4:	bl	404d00 <dcgettext@plt>
  41eee8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41eeec:	add	x1, x1, #0x1c9
  41eef0:	bl	437328 <argp_usage@@Base+0x9e48>
  41eef4:	mov	x19, x0
  41eef8:	b	41ec3c <wcrtomb@plt+0x19cec>
  41eefc:	mov	w2, #0x5                   	// #5
  41ef00:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ef04:	mov	x0, #0x0                   	// #0
  41ef08:	add	x1, x1, #0x220
  41ef0c:	bl	404d00 <dcgettext@plt>
  41ef10:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x14380>
  41ef14:	add	x1, x1, #0x76
  41ef18:	b	41eef0 <wcrtomb@plt+0x19fa0>
  41ef1c:	mov	w2, #0x5                   	// #5
  41ef20:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ef24:	mov	x0, #0x0                   	// #0
  41ef28:	add	x1, x1, #0x220
  41ef2c:	bl	404d00 <dcgettext@plt>
  41ef30:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41ef34:	add	x1, x1, #0x1d1
  41ef38:	b	41eef0 <wcrtomb@plt+0x19fa0>
  41ef3c:	mov	w2, #0x5                   	// #5
  41ef40:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ef44:	mov	x0, #0x0                   	// #0
  41ef48:	add	x1, x1, #0x220
  41ef4c:	bl	404d00 <dcgettext@plt>
  41ef50:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41ef54:	add	x1, x1, #0x1d8
  41ef58:	b	41eef0 <wcrtomb@plt+0x19fa0>
  41ef5c:	mov	w2, #0x5                   	// #5
  41ef60:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ef64:	mov	x0, #0x0                   	// #0
  41ef68:	add	x1, x1, #0x220
  41ef6c:	bl	404d00 <dcgettext@plt>
  41ef70:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  41ef74:	add	x1, x1, #0xf8c
  41ef78:	b	41eef0 <wcrtomb@plt+0x19fa0>
  41ef7c:	mov	w2, #0x5                   	// #5
  41ef80:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ef84:	mov	x0, #0x0                   	// #0
  41ef88:	add	x1, x1, #0x220
  41ef8c:	bl	404d00 <dcgettext@plt>
  41ef90:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  41ef94:	add	x1, x1, #0x1e9
  41ef98:	b	41eef0 <wcrtomb@plt+0x19fa0>
  41ef9c:	ldp	x1, x0, [sp, #96]
  41efa0:	sub	x0, x0, x1
  41efa4:	cmp	x0, #0x1
  41efa8:	b.hi	41efb8 <wcrtomb@plt+0x1a068>  // b.pmore
  41efac:	add	x0, sp, #0x48
  41efb0:	mov	x1, #0x2                   	// #2
  41efb4:	bl	437acc <_obstack_newchunk@@Base>
  41efb8:	ldr	x0, [sp, #96]
  41efbc:	strh	w23, [x0]
  41efc0:	mov	x0, x22
  41efc4:	ldr	x21, [sp, #96]
  41efc8:	add	x21, x21, #0x2
  41efcc:	str	x21, [sp, #96]
  41efd0:	bl	404280 <strlen@plt>
  41efd4:	mov	x19, x0
  41efd8:	ldr	x0, [sp, #104]
  41efdc:	sub	x21, x0, x21
  41efe0:	cmp	x19, x21
  41efe4:	b.ls	41eff4 <wcrtomb@plt+0x1a0a4>  // b.plast
  41efe8:	mov	x1, x19
  41efec:	add	x0, sp, #0x48
  41eff0:	bl	437acc <_obstack_newchunk@@Base>
  41eff4:	ldr	x0, [sp, #96]
  41eff8:	mov	x2, x19
  41effc:	mov	x1, x22
  41f000:	bl	404200 <memcpy@plt>
  41f004:	ldp	x2, x0, [sp, #96]
  41f008:	add	x19, x2, x19
  41f00c:	str	x19, [sp, #96]
  41f010:	cmp	x19, x0
  41f014:	b.ne	41f024 <wcrtomb@plt+0x1a0d4>  // b.any
  41f018:	add	x0, sp, #0x48
  41f01c:	mov	x1, #0x1                   	// #1
  41f020:	bl	437acc <_obstack_newchunk@@Base>
  41f024:	ldr	x0, [sp, #96]
  41f028:	add	x20, x20, #0x8
  41f02c:	add	x1, x0, #0x1
  41f030:	str	x1, [sp, #96]
  41f034:	strb	w24, [x0]
  41f038:	b	41ed84 <wcrtomb@plt+0x19e34>
  41f03c:	cmp	w0, #0x9
  41f040:	b.hi	41f058 <wcrtomb@plt+0x1a108>  // b.pmore
  41f044:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x14380>
  41f048:	add	x1, x1, #0xc48
  41f04c:	add	x1, x1, #0x70
  41f050:	ldr	x0, [x1, w0, uxtw #3]
  41f054:	ret
  41f058:	stp	x29, x30, [sp, #-16]!
  41f05c:	mov	x29, sp
  41f060:	bl	404970 <abort@plt>
  41f064:	stp	x29, x30, [sp, #-48]!
  41f068:	mov	x2, #0x3                   	// #3
  41f06c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f070:	mov	x29, sp
  41f074:	stp	x19, x20, [sp, #16]
  41f078:	mov	x20, x0
  41f07c:	add	x1, x1, #0x28c
  41f080:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x14380>
  41f084:	add	x19, x19, #0xc48
  41f088:	stp	x21, x22, [sp, #32]
  41f08c:	add	x22, x20, #0x3
  41f090:	bl	4046a0 <strncmp@plt>
  41f094:	cmp	w0, #0x0
  41f098:	add	x19, x19, #0xc0
  41f09c:	csel	x22, x22, x20, eq  // eq = none
  41f0a0:	mov	x21, #0x5                   	// #5
  41f0a4:	ldr	x0, [x19]
  41f0a8:	mov	x1, x22
  41f0ac:	bl	404a30 <strcmp@plt>
  41f0b0:	cbnz	w0, 41f0c8 <wcrtomb@plt+0x1a178>
  41f0b4:	ldr	w0, [x19, #8]
  41f0b8:	ldp	x19, x20, [sp, #16]
  41f0bc:	ldp	x21, x22, [sp, #32]
  41f0c0:	ldp	x29, x30, [sp], #48
  41f0c4:	ret
  41f0c8:	add	x19, x19, #0x10
  41f0cc:	subs	x21, x21, #0x1
  41f0d0:	b.ne	41f0a4 <wcrtomb@plt+0x1a154>  // b.any
  41f0d4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f0d8:	ldr	x0, [x0, #1016]
  41f0dc:	cbz	x0, 41f0e4 <wcrtomb@plt+0x1a194>
  41f0e0:	blr	x0
  41f0e4:	mov	w2, #0x5                   	// #5
  41f0e8:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f0ec:	mov	x0, #0x0                   	// #0
  41f0f0:	add	x1, x1, #0x290
  41f0f4:	bl	404d00 <dcgettext@plt>
  41f0f8:	mov	x2, x0
  41f0fc:	mov	x3, x20
  41f100:	mov	w1, #0x0                   	// #0
  41f104:	mov	w0, #0x0                   	// #0
  41f108:	bl	4042e0 <error@plt>
  41f10c:	bl	40d47c <wcrtomb@plt+0x852c>
  41f110:	stp	x29, x30, [sp, #-32]!
  41f114:	mov	w2, #0x4                   	// #4
  41f118:	mov	x29, sp
  41f11c:	str	x19, [sp, #16]
  41f120:	mov	w19, w0
  41f124:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41f128:	ldr	x3, [x0, #3552]
  41f12c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41f130:	ldr	x1, [x0, #1160]
  41f134:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x37380>
  41f138:	add	x0, x0, #0x1b8
  41f13c:	bl	42c4fc <argp_help@@Base>
  41f140:	bl	42dbe0 <argp_usage@@Base+0x700>
  41f144:	mov	w0, w19
  41f148:	bl	4042b0 <exit@plt>
  41f14c:	stp	x29, x30, [sp, #-32]!
  41f150:	mov	x29, sp
  41f154:	stp	x19, x20, [sp, #16]
  41f158:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  41f15c:	add	x19, x19, #0xbf8
  41f160:	mov	x20, x0
  41f164:	ldr	x0, [x19, #80]
  41f168:	cbz	x0, 41f1b0 <wcrtomb@plt+0x1a260>
  41f16c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f170:	ldr	x0, [x0, #1016]
  41f174:	cbz	x0, 41f17c <wcrtomb@plt+0x1a22c>
  41f178:	blr	x0
  41f17c:	mov	w2, #0x5                   	// #5
  41f180:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f184:	mov	x0, #0x0                   	// #0
  41f188:	add	x1, x1, #0x2a8
  41f18c:	bl	404d00 <dcgettext@plt>
  41f190:	mov	x2, x0
  41f194:	ldr	x3, [x19, #80]
  41f198:	mov	x4, x20
  41f19c:	mov	w1, #0x0                   	// #0
  41f1a0:	mov	w0, #0x0                   	// #0
  41f1a4:	bl	4042e0 <error@plt>
  41f1a8:	mov	w0, #0x2                   	// #2
  41f1ac:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  41f1b0:	str	x20, [x19, #80]
  41f1b4:	ldp	x19, x20, [sp, #16]
  41f1b8:	ldp	x29, x30, [sp], #32
  41f1bc:	ret
  41f1c0:	stp	x29, x30, [sp, #-80]!
  41f1c4:	mov	x29, sp
  41f1c8:	stp	x19, x20, [sp, #16]
  41f1cc:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  41f1d0:	add	x19, x19, #0xbf8
  41f1d4:	stp	x21, x22, [sp, #32]
  41f1d8:	mov	x21, x0
  41f1dc:	mov	x22, x1
  41f1e0:	ldr	x0, [x19, #88]
  41f1e4:	str	x23, [sp, #48]
  41f1e8:	cbnz	x0, 41f240 <wcrtomb@plt+0x1a2f0>
  41f1ec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f1f0:	ldr	w0, [x0, #984]
  41f1f4:	cbz	w0, 41f200 <wcrtomb@plt+0x1a2b0>
  41f1f8:	ldr	x0, [x19, #80]
  41f1fc:	cbz	x0, 41f228 <wcrtomb@plt+0x1a2d8>
  41f200:	adrp	x20, 446000 <_obstack_memory_used@@Base+0xe380>
  41f204:	add	x20, x20, #0xc9d
  41f208:	mov	x0, x20
  41f20c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f210:	add	x1, x1, #0xb66
  41f214:	bl	4045c0 <fopen@plt>
  41f218:	str	x0, [x19, #88]
  41f21c:	cbnz	x0, 41f240 <wcrtomb@plt+0x1a2f0>
  41f220:	mov	x0, x20
  41f224:	bl	424e6c <wcrtomb@plt+0x1ff1c>
  41f228:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f22c:	add	x0, x0, #0x2d7
  41f230:	bl	41f14c <wcrtomb@plt+0x1a1fc>
  41f234:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41f238:	ldr	x0, [x0, #1176]
  41f23c:	str	x0, [x19, #88]
  41f240:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  41f244:	mov	x0, x22
  41f248:	ldr	x23, [x20, #3936]
  41f24c:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  41f250:	mov	x3, x21
  41f254:	mov	x4, x0
  41f258:	mov	w1, #0x1                   	// #1
  41f25c:	mov	x0, x23
  41f260:	adrp	x2, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f264:	add	x2, x2, #0x2da
  41f268:	bl	404a20 <__fprintf_chk@plt>
  41f26c:	ldr	x0, [x20, #3936]
  41f270:	bl	404bf0 <fflush_unlocked@plt>
  41f274:	ldr	w0, [x19, #96]
  41f278:	cbnz	w0, 41f2f0 <wcrtomb@plt+0x1a3a0>
  41f27c:	ldr	x2, [x19, #88]
  41f280:	add	x1, sp, #0x48
  41f284:	add	x0, sp, #0x40
  41f288:	stp	xzr, xzr, [sp, #64]
  41f28c:	bl	404ab0 <getline@plt>
  41f290:	tbz	x0, #63, 41f2dc <wcrtomb@plt+0x1a38c>
  41f294:	mov	w0, #0x1                   	// #1
  41f298:	mov	w21, #0x0                   	// #0
  41f29c:	str	w0, [x19, #96]
  41f2a0:	ldr	x0, [sp, #64]
  41f2a4:	bl	404ae0 <free@plt>
  41f2a8:	ldr	w0, [x19, #96]
  41f2ac:	cbz	w0, 41f2c4 <wcrtomb@plt+0x1a374>
  41f2b0:	ldr	x1, [x20, #3936]
  41f2b4:	mov	w0, #0xa                   	// #10
  41f2b8:	bl	404cb0 <fputc_unlocked@plt>
  41f2bc:	ldr	x0, [x20, #3936]
  41f2c0:	bl	404bf0 <fflush_unlocked@plt>
  41f2c4:	mov	w0, w21
  41f2c8:	ldp	x19, x20, [sp, #16]
  41f2cc:	ldp	x21, x22, [sp, #32]
  41f2d0:	ldr	x23, [sp, #48]
  41f2d4:	ldp	x29, x30, [sp], #80
  41f2d8:	ret
  41f2dc:	ldr	x0, [sp, #64]
  41f2e0:	bl	404300 <rpmatch@plt>
  41f2e4:	cmp	w0, #0x0
  41f2e8:	cset	w21, gt
  41f2ec:	b	41f2a0 <wcrtomb@plt+0x1a350>
  41f2f0:	mov	w21, #0x0                   	// #0
  41f2f4:	b	41f2b0 <wcrtomb@plt+0x1a360>
  41f2f8:	stp	x29, x30, [sp, #-192]!
  41f2fc:	mov	x29, sp
  41f300:	stp	x19, x20, [sp, #16]
  41f304:	mov	x19, x2
  41f308:	mov	x20, x3
  41f30c:	stp	x21, x22, [sp, #32]
  41f310:	str	x23, [sp, #48]
  41f314:	ldrb	w2, [x2]
  41f318:	sub	w2, w2, #0x2e
  41f31c:	and	w2, w2, #0xff
  41f320:	cmp	w2, #0x1
  41f324:	b.hi	41f3a0 <wcrtomb@plt+0x1a450>  // b.pmore
  41f328:	add	x1, sp, #0x40
  41f32c:	mov	x0, x19
  41f330:	bl	446a80 <_obstack_memory_used@@Base+0xee00>
  41f334:	cbz	w0, 41f37c <wcrtomb@plt+0x1a42c>
  41f338:	mov	x0, x19
  41f33c:	bl	4252dc <wcrtomb@plt+0x2038c>
  41f340:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f344:	ldr	x0, [x0, #1016]
  41f348:	cbz	x0, 41f350 <wcrtomb@plt+0x1a400>
  41f34c:	blr	x0
  41f350:	mov	w2, #0x5                   	// #5
  41f354:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f358:	mov	x0, #0x0                   	// #0
  41f35c:	add	x1, x1, #0x2e1
  41f360:	bl	404d00 <dcgettext@plt>
  41f364:	mov	x2, x0
  41f368:	mov	w1, #0x0                   	// #0
  41f36c:	mov	w0, #0x0                   	// #0
  41f370:	bl	4042e0 <error@plt>
  41f374:	mov	w0, #0x2                   	// #2
  41f378:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  41f37c:	ldr	x1, [sp, #152]
  41f380:	str	x1, [x20]
  41f384:	ldr	x1, [sp, #160]
  41f388:	str	x1, [x20, #8]
  41f38c:	ldp	x19, x20, [sp, #16]
  41f390:	ldp	x21, x22, [sp, #32]
  41f394:	ldr	x23, [sp, #48]
  41f398:	ldp	x29, x30, [sp], #192
  41f39c:	ret
  41f3a0:	mov	x22, x0
  41f3a4:	mov	x23, x1
  41f3a8:	mov	x0, x3
  41f3ac:	mov	x1, x19
  41f3b0:	mov	x2, #0x0                   	// #0
  41f3b4:	bl	434be4 <argp_usage@@Base+0x7704>
  41f3b8:	tst	w0, #0xff
  41f3bc:	b.ne	41f424 <wcrtomb@plt+0x1a4d4>  // b.any
  41f3c0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f3c4:	ldr	x0, [x0, #1016]
  41f3c8:	cbz	x0, 41f3d0 <wcrtomb@plt+0x1a480>
  41f3cc:	blr	x0
  41f3d0:	mov	w2, #0x5                   	// #5
  41f3d4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f3d8:	mov	x0, #0x0                   	// #0
  41f3dc:	add	x1, x1, #0x2fc
  41f3e0:	bl	404d00 <dcgettext@plt>
  41f3e4:	mov	x21, x0
  41f3e8:	ldp	x0, x1, [x20]
  41f3ec:	mov	w2, #0x0                   	// #0
  41f3f0:	bl	416698 <wcrtomb@plt+0x11748>
  41f3f4:	mov	x22, x0
  41f3f8:	mov	x0, x19
  41f3fc:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  41f400:	mov	x3, x22
  41f404:	mov	x4, x0
  41f408:	mov	x2, x21
  41f40c:	mov	w0, #0x0                   	// #0
  41f410:	mov	w1, #0x0                   	// #0
  41f414:	bl	4042e0 <error@plt>
  41f418:	mov	w0, #0x1                   	// #1
  41f41c:	str	xzr, [x20, #8]
  41f420:	b	41f38c <wcrtomb@plt+0x1a43c>
  41f424:	mov	x0, #0x28                  	// #40
  41f428:	bl	436d44 <argp_usage@@Base+0x9864>
  41f42c:	mov	x21, x0
  41f430:	ldp	x0, x1, [x20]
  41f434:	stp	x0, x1, [x21, #8]
  41f438:	mov	x0, x19
  41f43c:	str	x23, [x21, #24]
  41f440:	bl	436f10 <argp_usage@@Base+0x9a30>
  41f444:	str	x0, [x21, #32]
  41f448:	ldr	x0, [x22]
  41f44c:	str	x0, [x21]
  41f450:	mov	w0, #0x0                   	// #0
  41f454:	str	x21, [x22]
  41f458:	b	41f38c <wcrtomb@plt+0x1a43c>
  41f45c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41f460:	ldr	w2, [x1, #868]
  41f464:	cbz	w2, 41f4b4 <wcrtomb@plt+0x1a564>
  41f468:	cmp	w2, w0
  41f46c:	b.eq	41f4b4 <wcrtomb@plt+0x1a564>  // b.none
  41f470:	stp	x29, x30, [sp, #-16]!
  41f474:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f478:	mov	x29, sp
  41f47c:	ldr	x0, [x0, #1016]
  41f480:	cbz	x0, 41f488 <wcrtomb@plt+0x1a538>
  41f484:	blr	x0
  41f488:	mov	w2, #0x5                   	// #5
  41f48c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f490:	mov	x0, #0x0                   	// #0
  41f494:	add	x1, x1, #0x327
  41f498:	bl	404d00 <dcgettext@plt>
  41f49c:	mov	x2, x0
  41f4a0:	mov	w1, #0x0                   	// #0
  41f4a4:	mov	w0, #0x0                   	// #0
  41f4a8:	bl	4042e0 <error@plt>
  41f4ac:	mov	w0, #0x2                   	// #2
  41f4b0:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  41f4b4:	str	w0, [x1, #868]
  41f4b8:	ret
  41f4bc:	stp	x29, x30, [sp, #-32]!
  41f4c0:	mov	x29, sp
  41f4c4:	stp	x19, x20, [sp, #16]
  41f4c8:	mov	x19, x0
  41f4cc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f4d0:	mov	x20, x1
  41f4d4:	ldr	x0, [x0, #1016]
  41f4d8:	cbz	x0, 41f4e0 <wcrtomb@plt+0x1a590>
  41f4dc:	blr	x0
  41f4e0:	mov	w2, #0x5                   	// #5
  41f4e4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f4e8:	mov	x0, #0x0                   	// #0
  41f4ec:	add	x1, x1, #0x37a
  41f4f0:	bl	404d00 <dcgettext@plt>
  41f4f4:	mov	x2, x0
  41f4f8:	mov	x4, x20
  41f4fc:	mov	x3, x19
  41f500:	mov	w1, #0x0                   	// #0
  41f504:	mov	w0, #0x0                   	// #0
  41f508:	bl	4042e0 <error@plt>
  41f50c:	mov	w0, #0x2                   	// #2
  41f510:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  41f514:	stp	x29, x30, [sp, #-48]!
  41f518:	mov	x29, sp
  41f51c:	stp	x19, x20, [sp, #16]
  41f520:	mov	w19, w0
  41f524:	mov	x20, x1
  41f528:	mov	w0, #0x9                   	// #9
  41f52c:	str	x21, [sp, #32]
  41f530:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  41f534:	bl	41e940 <wcrtomb@plt+0x199f0>
  41f538:	cbz	x0, 41f570 <wcrtomb@plt+0x1a620>
  41f53c:	mov	x1, x0
  41f540:	mov	x0, x20
  41f544:	bl	41ea00 <wcrtomb@plt+0x19ab0>
  41f548:	cbz	w0, 41f570 <wcrtomb@plt+0x1a620>
  41f54c:	ldr	w0, [x21, #760]
  41f550:	cmp	w0, w19
  41f554:	b.eq	41f570 <wcrtomb@plt+0x1a620>  // b.none
  41f558:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x14380>
  41f55c:	add	x2, x2, #0xc48
  41f560:	add	x2, x2, #0x110
  41f564:	ldr	x1, [x2, w0, uxtw #3]
  41f568:	ldr	x0, [x2, w19, sxtw #3]
  41f56c:	bl	41f4bc <wcrtomb@plt+0x1a56c>
  41f570:	str	w19, [x21, #760]
  41f574:	ldp	x19, x20, [sp, #16]
  41f578:	ldr	x21, [sp, #32]
  41f57c:	ldp	x29, x30, [sp], #48
  41f580:	ret
  41f584:	stp	x29, x30, [sp, #-48]!
  41f588:	mov	x29, sp
  41f58c:	stp	x19, x20, [sp, #16]
  41f590:	mov	x20, x0
  41f594:	mov	w0, #0x0                   	// #0
  41f598:	str	x21, [sp, #32]
  41f59c:	bl	41e940 <wcrtomb@plt+0x199f0>
  41f5a0:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41f5a4:	mov	x21, x0
  41f5a8:	mov	x19, x1
  41f5ac:	ldr	x0, [x1, #912]
  41f5b0:	cbz	x0, 41f608 <wcrtomb@plt+0x1a6b8>
  41f5b4:	mov	x1, x20
  41f5b8:	bl	404a30 <strcmp@plt>
  41f5bc:	cbz	w0, 41f608 <wcrtomb@plt+0x1a6b8>
  41f5c0:	ldr	w0, [x21]
  41f5c4:	cmp	w0, #0x1
  41f5c8:	b.ne	41f608 <wcrtomb@plt+0x1a6b8>  // b.any
  41f5cc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f5d0:	ldr	x0, [x0, #1016]
  41f5d4:	cbz	x0, 41f5dc <wcrtomb@plt+0x1a68c>
  41f5d8:	blr	x0
  41f5dc:	mov	w2, #0x5                   	// #5
  41f5e0:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f5e4:	mov	x0, #0x0                   	// #0
  41f5e8:	add	x1, x1, #0x398
  41f5ec:	bl	404d00 <dcgettext@plt>
  41f5f0:	mov	x2, x0
  41f5f4:	mov	w1, #0x0                   	// #0
  41f5f8:	mov	w0, #0x0                   	// #0
  41f5fc:	bl	4042e0 <error@plt>
  41f600:	mov	w0, #0x2                   	// #2
  41f604:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  41f608:	str	x20, [x19, #912]
  41f60c:	ldp	x19, x20, [sp, #16]
  41f610:	ldr	x21, [sp, #32]
  41f614:	ldp	x29, x30, [sp], #48
  41f618:	ret
  41f61c:	stp	x29, x30, [sp, #-32]!
  41f620:	mov	x29, sp
  41f624:	stp	x19, x20, [sp, #16]
  41f628:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x14380>
  41f62c:	mov	x20, x0
  41f630:	add	x19, x19, #0xc48
  41f634:	ldr	x0, [x19]
  41f638:	mov	x1, x20
  41f63c:	bl	404a30 <strcmp@plt>
  41f640:	cbnz	w0, 41f65c <wcrtomb@plt+0x1a70c>
  41f644:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f648:	ldr	w1, [x19, #8]
  41f64c:	ldp	x19, x20, [sp, #16]
  41f650:	str	w1, [x0, #824]
  41f654:	ldp	x29, x30, [sp], #32
  41f658:	ret
  41f65c:	ldr	x0, [x19, #16]!
  41f660:	cbnz	x0, 41f634 <wcrtomb@plt+0x1a6e4>
  41f664:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f668:	ldr	x0, [x0, #1016]
  41f66c:	cbz	x0, 41f674 <wcrtomb@plt+0x1a724>
  41f670:	blr	x0
  41f674:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f678:	add	x1, x1, #0x3b8
  41f67c:	mov	w2, #0x5                   	// #5
  41f680:	mov	x0, #0x0                   	// #0
  41f684:	bl	404d00 <dcgettext@plt>
  41f688:	mov	x19, x0
  41f68c:	mov	x0, x20
  41f690:	bl	436084 <argp_usage@@Base+0x8ba4>
  41f694:	mov	x2, x19
  41f698:	mov	x3, x0
  41f69c:	mov	w1, #0x0                   	// #0
  41f6a0:	mov	w0, #0x0                   	// #0
  41f6a4:	bl	4042e0 <error@plt>
  41f6a8:	mov	w0, #0x2                   	// #2
  41f6ac:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  41f6b0:	stp	x29, x30, [sp, #-240]!
  41f6b4:	cmp	w0, #0x14f
  41f6b8:	mov	x29, sp
  41f6bc:	stp	x19, x20, [sp, #16]
  41f6c0:	mov	w19, w0
  41f6c4:	stp	x21, x22, [sp, #32]
  41f6c8:	stp	x23, x24, [sp, #48]
  41f6cc:	stp	x25, x26, [sp, #64]
  41f6d0:	ldr	x21, [x2, #40]
  41f6d4:	str	x27, [sp, #80]
  41f6d8:	str	d8, [sp, #88]
  41f6dc:	b.gt	41f708 <wcrtomb@plt+0x1a7b8>
  41f6e0:	tbnz	w0, #31, 420b54 <wcrtomb@plt+0x1bc04>
  41f6e4:	cmp	w0, #0x14f
  41f6e8:	b.hi	420b5c <wcrtomb@plt+0x1bc0c>  // b.pmore
  41f6ec:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x14380>
  41f6f0:	mov	x20, x1
  41f6f4:	add	x0, x0, #0x990
  41f6f8:	ldrh	w0, [x0, w19, uxtw #1]
  41f6fc:	adr	x1, 41f708 <wcrtomb@plt+0x1a7b8>
  41f700:	add	x0, x1, w0, sxth #2
  41f704:	br	x0
  41f708:	mov	w0, #0x5                   	// #5
  41f70c:	movk	w0, #0x100, lsl #16
  41f710:	cmp	w19, w0
  41f714:	b.eq	420ae0 <wcrtomb@plt+0x1bb90>  // b.none
  41f718:	mov	w19, #0x7                   	// #7
  41f71c:	mov	w0, w19
  41f720:	ldr	d8, [sp, #88]
  41f724:	ldp	x19, x20, [sp, #16]
  41f728:	ldp	x21, x22, [sp, #32]
  41f72c:	ldp	x23, x24, [sp, #48]
  41f730:	ldp	x25, x26, [sp, #64]
  41f734:	ldr	x27, [sp, #80]
  41f738:	ldp	x29, x30, [sp], #240
  41f73c:	ret
  41f740:	mov	x0, x20
  41f744:	bl	41a4f8 <wcrtomb@plt+0x155a8>
  41f748:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f74c:	mov	w0, #0x2                   	// #2
  41f750:	mov	w19, #0x0                   	// #0
  41f754:	bl	41f45c <wcrtomb@plt+0x1a50c>
  41f758:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f75c:	mov	w0, #0x1                   	// #1
  41f760:	mov	w19, #0x0                   	// #0
  41f764:	str	w0, [x21, #40]
  41f768:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f76c:	mov	w19, #0x0                   	// #0
  41f770:	str	wzr, [x21, #40]
  41f774:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f778:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  41f77c:	add	x3, sp, #0x98
  41f780:	add	x4, x4, #0x41a
  41f784:	mov	x0, x20
  41f788:	mov	w2, #0xa                   	// #10
  41f78c:	mov	x1, #0x0                   	// #0
  41f790:	bl	436fdc <argp_usage@@Base+0x9afc>
  41f794:	cbz	w0, 41f7e8 <wcrtomb@plt+0x1a898>
  41f798:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f79c:	ldr	x0, [x0, #1016]
  41f7a0:	cbnz	x0, 41f820 <wcrtomb@plt+0x1a8d0>
  41f7a4:	mov	x0, x20
  41f7a8:	bl	436084 <argp_usage@@Base+0x8ba4>
  41f7ac:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41f7b0:	mov	x19, x0
  41f7b4:	add	x1, x1, #0x3ee
  41f7b8:	mov	w2, #0x5                   	// #5
  41f7bc:	mov	x0, #0x0                   	// #0
  41f7c0:	bl	404d00 <dcgettext@plt>
  41f7c4:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  41f7c8:	mov	x4, x0
  41f7cc:	mov	x3, x19
  41f7d0:	add	x2, x2, #0xe6f
  41f7d4:	mov	w1, #0x0                   	// #0
  41f7d8:	mov	w0, #0x0                   	// #0
  41f7dc:	bl	4042e0 <error@plt>
  41f7e0:	mov	w0, #0x2                   	// #2
  41f7e4:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  41f7e8:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41f7ec:	ldr	x0, [sp, #152]
  41f7f0:	str	w0, [x1, #756]
  41f7f4:	cmp	x0, w0, sxtw
  41f7f8:	b.ne	41f798 <wcrtomb@plt+0x1a848>  // b.any
  41f7fc:	cmp	w0, #0x0
  41f800:	b.le	41f798 <wcrtomb@plt+0x1a848>
  41f804:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  41f808:	lsl	x1, x0, #9
  41f80c:	str	x1, [x2, #928]
  41f810:	cmp	x0, x1, lsr #9
  41f814:	b.ne	41f798 <wcrtomb@plt+0x1a848>  // b.any
  41f818:	mov	w19, #0x0                   	// #0
  41f81c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f820:	blr	x0
  41f824:	b	41f7a4 <wcrtomb@plt+0x1a854>
  41f828:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f82c:	mov	w1, #0x1                   	// #1
  41f830:	mov	w19, #0x0                   	// #0
  41f834:	strb	w1, [x0, #849]
  41f838:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f83c:	mov	w0, #0x3                   	// #3
  41f840:	mov	w19, #0x0                   	// #0
  41f844:	bl	41f45c <wcrtomb@plt+0x1a50c>
  41f848:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f84c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f850:	mov	w1, #0x2                   	// #2
  41f854:	mov	w19, #0x0                   	// #0
  41f858:	str	w1, [x0, #64]
  41f85c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f860:	mov	w0, #0x5                   	// #5
  41f864:	mov	w19, #0x0                   	// #0
  41f868:	bl	41f45c <wcrtomb@plt+0x1a50c>
  41f86c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f870:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41f874:	add	x1, x1, #0xbf8
  41f878:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  41f87c:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  41f880:	ldr	x2, [x19, #856]
  41f884:	ldr	x0, [x1, #104]
  41f888:	cmp	x2, x0
  41f88c:	b.ne	41f8a4 <wcrtomb@plt+0x1a954>  // b.any
  41f890:	ldr	x0, [x21, #696]
  41f894:	add	x1, x1, #0x68
  41f898:	mov	x2, #0x8                   	// #8
  41f89c:	bl	436e14 <argp_usage@@Base+0x9934>
  41f8a0:	str	x0, [x21, #696]
  41f8a4:	ldr	x0, [x19, #856]
  41f8a8:	ldr	x1, [x21, #696]
  41f8ac:	add	x2, x0, #0x1
  41f8b0:	str	x2, [x19, #856]
  41f8b4:	mov	w19, #0x0                   	// #0
  41f8b8:	str	x20, [x1, x0, lsl #3]
  41f8bc:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f8c0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f8c4:	mov	w1, #0x1                   	// #1
  41f8c8:	mov	w19, #0x0                   	// #0
  41f8cc:	str	x20, [x0, #776]
  41f8d0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f8d4:	strb	w1, [x0, #84]
  41f8d8:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f8dc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f8e0:	mov	w1, #0x1                   	// #1
  41f8e4:	mov	w19, #0x0                   	// #0
  41f8e8:	strb	w1, [x0, #704]
  41f8ec:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f8f0:	ldr	x1, [x21]
  41f8f4:	mov	w0, #0x2                   	// #2
  41f8f8:	bl	41e940 <wcrtomb@plt+0x199f0>
  41f8fc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f900:	mov	w1, #0x1                   	// #1
  41f904:	str	x20, [x0, #840]
  41f908:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f90c:	str	w1, [x0, #980]
  41f910:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f914:	mov	w1, #0x1                   	// #1
  41f918:	mov	w19, #0x0                   	// #0
  41f91c:	strb	w1, [x0, #41]
  41f920:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f924:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f928:	mov	w1, #0x1                   	// #1
  41f92c:	mov	w19, #0x0                   	// #0
  41f930:	strb	w1, [x0, #584]
  41f934:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f938:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f93c:	mov	w1, #0x1                   	// #1
  41f940:	mov	w19, #0x0                   	// #0
  41f944:	strb	w1, [x0, #92]
  41f948:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f94c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f950:	mov	w1, #0x1                   	// #1
  41f954:	mov	w19, #0x0                   	// #0
  41f958:	strb	w1, [x0, #85]
  41f95c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f960:	ldr	x1, [x21]
  41f964:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  41f968:	mov	w19, #0x0                   	// #0
  41f96c:	add	x0, x0, #0x1c9
  41f970:	bl	41f584 <wcrtomb@plt+0x1a634>
  41f974:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f978:	ldr	x1, [x21]
  41f97c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  41f980:	mov	w19, #0x0                   	// #0
  41f984:	add	x0, x0, #0xf8c
  41f988:	bl	41f584 <wcrtomb@plt+0x1a634>
  41f98c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f990:	ldr	x1, [x21]
  41f994:	mov	w0, #0x4                   	// #4
  41f998:	mov	w19, #0x0                   	// #0
  41f99c:	bl	41f514 <wcrtomb@plt+0x1a5c4>
  41f9a0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f9a4:	ldr	x1, [x21]
  41f9a8:	mov	w0, #0x5                   	// #5
  41f9ac:	mov	w19, #0x0                   	// #0
  41f9b0:	bl	41e940 <wcrtomb@plt+0x199f0>
  41f9b4:	mov	x0, x20
  41f9b8:	bl	41aa64 <wcrtomb@plt+0x15b14>
  41f9bc:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f9c0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f9c4:	mov	w1, #0x1                   	// #1
  41f9c8:	mov	w19, #0x0                   	// #0
  41f9cc:	strb	w1, [x0, #93]
  41f9d0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f9d4:	ldr	x1, [x21]
  41f9d8:	mov	w0, #0x7                   	// #7
  41f9dc:	mov	w19, #0x0                   	// #0
  41f9e0:	bl	41e940 <wcrtomb@plt+0x199f0>
  41f9e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f9e8:	mov	w1, #0x1                   	// #1
  41f9ec:	strb	w1, [x0, #851]
  41f9f0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41f9f4:	str	x20, [x0, #576]
  41f9f8:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41f9fc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41fa00:	mov	w1, #0x1                   	// #1
  41fa04:	mov	w19, #0x0                   	// #0
  41fa08:	str	w1, [x0, #3176]
  41fa0c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fa10:	adrp	x19, 44a000 <_obstack_memory_used@@Base+0x12380>
  41fa14:	add	x19, x19, #0x406
  41fa18:	mov	x4, x19
  41fa1c:	add	x3, sp, #0x78
  41fa20:	add	x1, sp, #0x98
  41fa24:	mov	x0, x20
  41fa28:	mov	w2, #0xa                   	// #10
  41fa2c:	bl	436fdc <argp_usage@@Base+0x9afc>
  41fa30:	cbz	w0, 41fa60 <wcrtomb@plt+0x1ab10>
  41fa34:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fa38:	ldr	x0, [x0, #1016]
  41fa3c:	cbz	x0, 41fa44 <wcrtomb@plt+0x1aaf4>
  41fa40:	blr	x0
  41fa44:	mov	x0, x20
  41fa48:	bl	436084 <argp_usage@@Base+0x8ba4>
  41fa4c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41fa50:	mov	x19, x0
  41fa54:	add	x1, x1, #0x414
  41fa58:	mov	w2, #0x5                   	// #5
  41fa5c:	b	41f7bc <wcrtomb@plt+0x1a86c>
  41fa60:	ldr	d0, [sp, #120]
  41fa64:	ldr	x0, [sp, #152]
  41fa68:	ucvtf	d8, d0
  41fa6c:	cmp	x0, x20
  41fa70:	b.ls	41faac <wcrtomb@plt+0x1ab5c>  // b.plast
  41fa74:	ldurb	w1, [x0, #-1]
  41fa78:	mov	x0, x19
  41fa7c:	bl	404b90 <strchr@plt>
  41fa80:	cbnz	x0, 41faac <wcrtomb@plt+0x1ab5c>
  41fa84:	mov	x0, #0x4090000000000000    	// #4652218415073722368
  41fa88:	fmov	d0, x0
  41fa8c:	fmul	d0, d8, d0
  41fa90:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fa94:	mov	w1, #0x1                   	// #1
  41fa98:	mov	w19, #0x0                   	// #0
  41fa9c:	str	d0, [x0, #640]
  41faa0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41faa4:	strb	w1, [x0, #84]
  41faa8:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41faac:	fmov	d0, d8
  41fab0:	b	41fa90 <wcrtomb@plt+0x1ab40>
  41fab4:	add	x1, sp, #0x98
  41fab8:	mov	x0, x20
  41fabc:	mov	w2, #0xa                   	// #10
  41fac0:	bl	404270 <strtoul@plt>
  41fac4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41fac8:	mov	w19, #0x0                   	// #0
  41facc:	str	w0, [x1, #788]
  41fad0:	ldr	x0, [sp, #152]
  41fad4:	ldrb	w0, [x0]
  41fad8:	cbz	w0, 41f71c <wcrtomb@plt+0x1a7cc>
  41fadc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fae0:	ldr	x0, [x0, #1016]
  41fae4:	cbz	x0, 41faec <wcrtomb@plt+0x1ab9c>
  41fae8:	blr	x0
  41faec:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41faf0:	add	x1, x1, #0x428
  41faf4:	mov	w2, #0x5                   	// #5
  41faf8:	mov	x0, #0x0                   	// #0
  41fafc:	bl	404d00 <dcgettext@plt>
  41fb00:	mov	w1, #0x0                   	// #0
  41fb04:	mov	x2, x0
  41fb08:	mov	w0, #0x0                   	// #0
  41fb0c:	bl	4042e0 <error@plt>
  41fb10:	b	41f7e0 <wcrtomb@plt+0x1a890>
  41fb14:	ldr	x1, [x21]
  41fb18:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  41fb1c:	mov	w19, #0x0                   	// #0
  41fb20:	add	x0, x0, #0x1d1
  41fb24:	bl	41f584 <wcrtomb@plt+0x1a634>
  41fb28:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fb2c:	ldr	x1, [x21]
  41fb30:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  41fb34:	mov	w19, #0x0                   	// #0
  41fb38:	add	x0, x0, #0x1d8
  41fb3c:	bl	41f584 <wcrtomb@plt+0x1a634>
  41fb40:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fb44:	ldr	x1, [x21]
  41fb48:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  41fb4c:	mov	w19, #0x0                   	// #0
  41fb50:	add	x0, x0, #0x1e2
  41fb54:	bl	41f584 <wcrtomb@plt+0x1a634>
  41fb58:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fb5c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fb60:	mov	w1, #0x1                   	// #1
  41fb64:	mov	w19, #0x0                   	// #0
  41fb68:	strb	w1, [x0, #560]
  41fb6c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fb70:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fb74:	mov	w1, #0x1                   	// #1
  41fb78:	mov	w19, #0x0                   	// #0
  41fb7c:	strb	w1, [x0, #84]
  41fb80:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fb84:	mov	x2, x20
  41fb88:	add	x0, x21, #0x8
  41fb8c:	adrp	x3, 472000 <argp_program_version_hook@@Base+0x250>
  41fb90:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41fb94:	add	x3, x3, #0x320
  41fb98:	add	x1, x1, #0x8b8
  41fb9c:	bl	41f2f8 <wcrtomb@plt+0x1a3a8>
  41fba0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fba4:	ldr	w1, [x0, #64]
  41fba8:	cbz	w1, 41fbb4 <wcrtomb@plt+0x1ac64>
  41fbac:	mov	w19, #0x0                   	// #0
  41fbb0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fbb4:	mov	w1, #0x1                   	// #1
  41fbb8:	mov	w19, #0x0                   	// #0
  41fbbc:	str	w1, [x0, #64]
  41fbc0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fbc4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fbc8:	mov	w1, #0x1                   	// #1
  41fbcc:	mov	w19, #0x0                   	// #0
  41fbd0:	str	w1, [x0, #80]
  41fbd4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fbd8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fbdc:	mov	w19, #0x0                   	// #0
  41fbe0:	str	wzr, [x0, #80]
  41fbe4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fbe8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fbec:	mov	w1, #0x1                   	// #1
  41fbf0:	str	w1, [x0, #980]
  41fbf4:	adrp	x3, 472000 <argp_program_version_hook@@Base+0x250>
  41fbf8:	add	x3, x3, #0x30
  41fbfc:	ldr	x0, [x3, #8]
  41fc00:	tbnz	x0, #63, 41fc24 <wcrtomb@plt+0x1acd4>
  41fc04:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fc08:	ldr	x0, [x0, #1016]
  41fc0c:	cbz	x0, 41fc14 <wcrtomb@plt+0x1acc4>
  41fc10:	blr	x0
  41fc14:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41fc18:	mov	w2, #0x5                   	// #5
  41fc1c:	add	x1, x1, #0x448
  41fc20:	b	41faf8 <wcrtomb@plt+0x1aba8>
  41fc24:	cmp	w19, #0x119
  41fc28:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41fc2c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41fc30:	add	x1, x1, #0x3e1
  41fc34:	add	x0, x0, #0x3d3
  41fc38:	mov	x2, x20
  41fc3c:	csel	x1, x0, x1, eq  // eq = none
  41fc40:	add	x0, x21, #0x8
  41fc44:	bl	41f2f8 <wcrtomb@plt+0x1a3a8>
  41fc48:	mov	w19, #0x0                   	// #0
  41fc4c:	ldr	x1, [x21]
  41fc50:	mov	w0, #0x3                   	// #3
  41fc54:	bl	41e940 <wcrtomb@plt+0x199f0>
  41fc58:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fc5c:	mov	w0, #0x1                   	// #1
  41fc60:	mov	w19, #0x0                   	// #0
  41fc64:	strb	w0, [x21, #16]
  41fc68:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fc6c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fc70:	mov	w1, #0x1                   	// #1
  41fc74:	mov	w19, #0x0                   	// #0
  41fc78:	strb	w1, [x0, #633]
  41fc7c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fc80:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fc84:	mov	w1, #0x1                   	// #1
  41fc88:	mov	w19, #0x0                   	// #0
  41fc8c:	str	w1, [x0, #620]
  41fc90:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fc94:	ldr	x1, [x21]
  41fc98:	mov	w0, #0x8                   	// #8
  41fc9c:	mov	w19, #0x0                   	// #0
  41fca0:	bl	41e940 <wcrtomb@plt+0x199f0>
  41fca4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fca8:	mov	w1, #0x1                   	// #1
  41fcac:	strb	w1, [x0, #960]
  41fcb0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fcb4:	mov	w0, #0x1                   	// #1
  41fcb8:	mov	w19, #0x0                   	// #0
  41fcbc:	bl	41f45c <wcrtomb@plt+0x1a50c>
  41fcc0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fcc4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fcc8:	mov	w1, #0x1                   	// #1
  41fccc:	mov	w19, #0x0                   	// #0
  41fcd0:	strb	w1, [x0, #681]
  41fcd4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fcd8:	ldr	x1, [x21]
  41fcdc:	mov	w0, #0x6                   	// #6
  41fce0:	mov	w19, #0x0                   	// #0
  41fce4:	bl	41e940 <wcrtomb@plt+0x199f0>
  41fce8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fcec:	mov	w1, #0x1                   	// #1
  41fcf0:	strb	w1, [x0, #648]
  41fcf4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fcf8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fcfc:	mov	w1, #0x1                   	// #1
  41fd00:	mov	w19, #0x0                   	// #0
  41fd04:	strb	w1, [x0, #920]
  41fd08:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fd0c:	ldr	x1, [x21]
  41fd10:	mov	w0, #0x5                   	// #5
  41fd14:	mov	w19, #0x0                   	// #0
  41fd18:	bl	41f514 <wcrtomb@plt+0x1a5c4>
  41fd1c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fd20:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41fd24:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x14380>
  41fd28:	add	x19, x19, #0xc48
  41fd2c:	mov	x1, x20
  41fd30:	ldr	x5, [x0, #984]
  41fd34:	add	x3, x19, #0x148
  41fd38:	add	x2, x19, #0x150
  41fd3c:	mov	x4, #0x4                   	// #4
  41fd40:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41fd44:	add	x0, x0, #0x465
  41fd48:	bl	42a36c <wcrtomb@plt+0x2541c>
  41fd4c:	add	x19, x19, x0, lsl #2
  41fd50:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fd54:	ldr	w1, [x19, #328]
  41fd58:	mov	w19, #0x0                   	// #0
  41fd5c:	str	w1, [x0, #924]
  41fd60:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fd64:	mov	w1, #0x1                   	// #1
  41fd68:	strb	w1, [x0, #920]
  41fd6c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fd70:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fd74:	mov	w1, #0x1                   	// #1
  41fd78:	mov	w2, #0xa                   	// #10
  41fd7c:	strb	w1, [x0, #920]
  41fd80:	add	x1, sp, #0x98
  41fd84:	mov	x0, x20
  41fd88:	bl	404270 <strtoul@plt>
  41fd8c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41fd90:	str	w0, [x1, #616]
  41fd94:	ldr	x0, [sp, #152]
  41fd98:	ldrb	w1, [x0]
  41fd9c:	cbz	w1, 41fdec <wcrtomb@plt+0x1ae9c>
  41fda0:	cmp	w1, #0x2e
  41fda4:	b.eq	41fdc8 <wcrtomb@plt+0x1ae78>  // b.none
  41fda8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fdac:	ldr	x0, [x0, #1016]
  41fdb0:	cbz	x0, 41fdb8 <wcrtomb@plt+0x1ae68>
  41fdb4:	blr	x0
  41fdb8:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41fdbc:	mov	w2, #0x5                   	// #5
  41fdc0:	add	x1, x1, #0x476
  41fdc4:	b	41faf8 <wcrtomb@plt+0x1aba8>
  41fdc8:	add	x1, sp, #0x98
  41fdcc:	add	x0, x0, #0x1
  41fdd0:	mov	w2, #0xa                   	// #10
  41fdd4:	bl	404270 <strtoul@plt>
  41fdd8:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41fddc:	str	w0, [x1, #96]
  41fde0:	ldr	x0, [sp, #152]
  41fde4:	ldrb	w0, [x0]
  41fde8:	cbnz	w0, 41fda8 <wcrtomb@plt+0x1ae58>
  41fdec:	mov	w19, #0x0                   	// #0
  41fdf0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fdf4:	mov	w0, #0x7                   	// #7
  41fdf8:	bl	41f45c <wcrtomb@plt+0x1a50c>
  41fdfc:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41fe00:	mov	w19, #0x0                   	// #0
  41fe04:	ldr	w0, [x1, #652]
  41fe08:	add	w0, w0, #0x1
  41fe0c:	str	w0, [x1, #652]
  41fe10:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fe14:	mov	w0, #0x9                   	// #9
  41fe18:	mov	w19, #0x0                   	// #0
  41fe1c:	bl	41f45c <wcrtomb@plt+0x1a50c>
  41fe20:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fe24:	mov	w0, #0x8                   	// #8
  41fe28:	mov	w19, #0x0                   	// #0
  41fe2c:	bl	41f45c <wcrtomb@plt+0x1a50c>
  41fe30:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fe34:	ldr	x1, [x21]
  41fe38:	mov	w0, #0x3                   	// #3
  41fe3c:	mov	w19, #0x0                   	// #0
  41fe40:	bl	41f514 <wcrtomb@plt+0x1a5c4>
  41fe44:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fe48:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fe4c:	mov	w1, #0x1                   	// #1
  41fe50:	mov	w19, #0x0                   	// #0
  41fe54:	strb	w1, [x0, #561]
  41fe58:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fe5c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41fe60:	mov	w2, #0x3000                	// #12288
  41fe64:	movk	w2, #0x58, lsl #16
  41fe68:	mov	w19, #0x0                   	// #0
  41fe6c:	ldr	w0, [x1, #652]
  41fe70:	add	w0, w0, #0x1
  41fe74:	str	w0, [x1, #652]
  41fe78:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  41fe7c:	ldr	w0, [x1, #480]
  41fe80:	orr	w0, w0, w2
  41fe84:	str	w0, [x1, #480]
  41fe88:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fe8c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fe90:	mov	w19, #0x0                   	// #0
  41fe94:	str	x20, [x0, #656]
  41fe98:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fe9c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fea0:	mov	w1, #0x1                   	// #1
  41fea4:	mov	w19, #0x0                   	// #0
  41fea8:	strb	w1, [x0, #600]
  41feac:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41feb0:	ldr	x1, [x21]
  41feb4:	mov	w0, #0x4                   	// #4
  41feb8:	mov	w19, #0x0                   	// #0
  41febc:	bl	41e940 <wcrtomb@plt+0x199f0>
  41fec0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41fec4:	mov	w1, #0x1                   	// #1
  41fec8:	strb	w1, [x0, #850]
  41fecc:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fed0:	mov	w0, #0x6                   	// #6
  41fed4:	mov	w19, #0x0                   	// #0
  41fed8:	bl	41f45c <wcrtomb@plt+0x1a50c>
  41fedc:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fee0:	ldr	x1, [x21]
  41fee4:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x14380>
  41fee8:	mov	w19, #0x0                   	// #0
  41feec:	add	x0, x0, #0x106
  41fef0:	bl	41f584 <wcrtomb@plt+0x1a634>
  41fef4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41fef8:	ldr	x1, [x21]
  41fefc:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x14380>
  41ff00:	mov	w19, #0x0                   	// #0
  41ff04:	add	x0, x0, #0x76
  41ff08:	bl	41f584 <wcrtomb@plt+0x1a634>
  41ff0c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41ff10:	ldr	x1, [x21]
  41ff14:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  41ff18:	mov	w19, #0x0                   	// #0
  41ff1c:	add	x0, x0, #0x1e9
  41ff20:	bl	41f584 <wcrtomb@plt+0x1a634>
  41ff24:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41ff28:	cbz	x20, 41ff70 <wcrtomb@plt+0x1b020>
  41ff2c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  41ff30:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x14380>
  41ff34:	add	x19, x19, #0xc48
  41ff38:	mov	x1, x20
  41ff3c:	ldr	x5, [x0, #984]
  41ff40:	add	x3, x19, #0x168
  41ff44:	add	x2, x19, #0x170
  41ff48:	mov	x4, #0x4                   	// #4
  41ff4c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ff50:	add	x0, x0, #0x493
  41ff54:	bl	42a36c <wcrtomb@plt+0x2541c>
  41ff58:	add	x19, x19, x0, lsl #2
  41ff5c:	ldr	w0, [x19, #360]
  41ff60:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  41ff64:	mov	w19, #0x0                   	// #0
  41ff68:	str	w0, [x1, #564]
  41ff6c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41ff70:	mov	w0, #0x1                   	// #1
  41ff74:	b	41ff60 <wcrtomb@plt+0x1b010>
  41ff78:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41ff7c:	mov	w1, #0x1                   	// #1
  41ff80:	mov	w19, #0x0                   	// #0
  41ff84:	strb	w1, [x0, #40]
  41ff88:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41ff8c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41ff90:	mov	w19, #0x0                   	// #0
  41ff94:	strb	wzr, [x0, #40]
  41ff98:	b	41f71c <wcrtomb@plt+0x1a7cc>
  41ff9c:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  41ffa0:	cbz	x20, 42001c <wcrtomb@plt+0x1b0cc>
  41ffa4:	ldrb	w0, [x20]
  41ffa8:	cmp	w0, #0x2e
  41ffac:	b.ne	41ffc0 <wcrtomb@plt+0x1b070>  // b.any
  41ffb0:	add	x20, x20, #0x1
  41ffb4:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  41ffb8:	add	x0, x0, #0xc29
  41ffbc:	bl	408a24 <wcrtomb@plt+0x3ad4>
  41ffc0:	add	x1, sp, #0x98
  41ffc4:	mov	x0, x20
  41ffc8:	mov	w2, #0x0                   	// #0
  41ffcc:	bl	404270 <strtoul@plt>
  41ffd0:	str	w0, [x19, #864]
  41ffd4:	mov	w19, #0x0                   	// #0
  41ffd8:	ldr	x0, [sp, #152]
  41ffdc:	ldrb	w0, [x0]
  41ffe0:	cbz	w0, 41f71c <wcrtomb@plt+0x1a7cc>
  41ffe4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  41ffe8:	ldr	x0, [x0, #1016]
  41ffec:	cbz	x0, 41fff4 <wcrtomb@plt+0x1b0a4>
  41fff0:	blr	x0
  41fff4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  41fff8:	add	x1, x1, #0x4a4
  41fffc:	mov	w2, #0x5                   	// #5
  420000:	mov	x0, #0x0                   	// #0
  420004:	bl	404d00 <dcgettext@plt>
  420008:	mov	w1, #0x0                   	// #0
  42000c:	mov	x2, x0
  420010:	mov	w0, #0x0                   	// #0
  420014:	bl	4042e0 <error@plt>
  420018:	bl	40d47c <wcrtomb@plt+0x852c>
  42001c:	mov	w0, #0xa                   	// #10
  420020:	str	w0, [x19, #864]
  420024:	mov	w19, #0x0                   	// #0
  420028:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42002c:	mov	x0, x20
  420030:	mov	w19, #0x0                   	// #0
  420034:	bl	408a24 <wcrtomb@plt+0x3ad4>
  420038:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42003c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420040:	mov	w1, #0x1                   	// #1
  420044:	strb	w1, [x0, #765]
  420048:	cbz	x20, 41fbac <wcrtomb@plt+0x1ac5c>
  42004c:	mov	w19, #0x0                   	// #0
  420050:	str	x20, [x21, #32]
  420054:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420058:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42005c:	mov	w1, #0x1                   	// #1
  420060:	mov	w19, #0x0                   	// #0
  420064:	strb	w1, [x0, #976]
  420068:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42006c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420070:	mov	w19, #0x0                   	// #0
  420074:	strb	wzr, [x0, #976]
  420078:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42007c:	mov	w0, #0x4                   	// #4
  420080:	mov	w19, #0x0                   	// #0
  420084:	bl	41f45c <wcrtomb@plt+0x1a50c>
  420088:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42008c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420090:	mov	w1, #0x1                   	// #1
  420094:	mov	w19, #0x0                   	// #0
  420098:	strb	w1, [x0, #1024]
  42009c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4200a0:	mov	x0, x20
  4200a4:	mov	w19, #0x0                   	// #0
  4200a8:	bl	41f61c <wcrtomb@plt+0x1a6cc>
  4200ac:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4200b0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4200b4:	mov	w19, #0x0                   	// #0
  4200b8:	str	x20, [x0, #968]
  4200bc:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4200c0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4200c4:	mov	w1, #0x1                   	// #1
  4200c8:	mov	w19, #0x0                   	// #0
  4200cc:	strb	w1, [x0, #585]
  4200d0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4200d4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4200d8:	mov	w1, #0x1                   	// #1
  4200dc:	mov	w19, #0x0                   	// #0
  4200e0:	strb	w1, [x0, #961]
  4200e4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4200e8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4200ec:	mov	w1, #0x1                   	// #1
  4200f0:	mov	w19, #0x0                   	// #0
  4200f4:	strb	w1, [x0, #632]
  4200f8:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4200fc:	ldr	x1, [x21]
  420100:	mov	w0, #0x6                   	// #6
  420104:	mov	w19, #0x0                   	// #0
  420108:	bl	41f514 <wcrtomb@plt+0x1a5c4>
  42010c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420110:	mov	x0, x20
  420114:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  420118:	add	x1, x19, #0x218
  42011c:	bl	41ea4c <wcrtomb@plt+0x19afc>
  420120:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  420124:	cmn	x0, #0x1
  420128:	b.ne	420148 <wcrtomb@plt+0x1b1f8>  // b.any
  42012c:	str	w0, [x2, #712]
  420130:	add	x1, x2, #0x2c8
  420134:	ldr	x0, [x19, #536]
  420138:	cbz	x0, 41fbac <wcrtomb@plt+0x1ac5c>
  42013c:	mov	w19, #0x0                   	// #0
  420140:	bl	41a440 <wcrtomb@plt+0x154f0>
  420144:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420148:	str	w0, [x2, #712]
  42014c:	mov	w19, #0x0                   	// #0
  420150:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420154:	mov	x0, x20
  420158:	mov	w19, #0x0                   	// #0
  42015c:	bl	417b40 <wcrtomb@plt+0x12bf0>
  420160:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420164:	mov	x0, x20
  420168:	bl	4317d4 <argp_usage@@Base+0x42f4>
  42016c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420170:	str	x0, [x1, #608]
  420174:	cbnz	x0, 420198 <wcrtomb@plt+0x1b248>
  420178:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42017c:	ldr	x0, [x0, #1016]
  420180:	cbz	x0, 420188 <wcrtomb@plt+0x1b238>
  420184:	blr	x0
  420188:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  42018c:	mov	w2, #0x5                   	// #5
  420190:	add	x1, x1, #0x4c9
  420194:	b	420000 <wcrtomb@plt+0x1b0b0>
  420198:	mov	w0, #0x0                   	// #0
  42019c:	bl	404dc0 <umask@plt>
  4201a0:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4201a4:	mov	w19, #0x0                   	// #0
  4201a8:	str	w0, [x1, #88]
  4201ac:	bl	404dc0 <umask@plt>
  4201b0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4201b4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4201b8:	mov	w19, #0x0                   	// #0
  4201bc:	strb	wzr, [x0, #585]
  4201c0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4201c4:	ldr	x1, [x21]
  4201c8:	mov	w0, #0x1                   	// #1
  4201cc:	mov	w19, #0x0                   	// #0
  4201d0:	bl	41f514 <wcrtomb@plt+0x1a5c4>
  4201d4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4201d8:	add	x20, x20, #0x1
  4201dc:	mov	w2, #0x0                   	// #0
  4201e0:	mov	x0, #0x0                   	// #0
  4201e4:	bl	435c3c <argp_usage@@Base+0x875c>
  4201e8:	ldrb	w1, [x20]
  4201ec:	cbnz	w1, 4201d8 <wcrtomb@plt+0x1b288>
  4201f0:	b	41fbac <wcrtomb@plt+0x1ac5c>
  4201f4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4201f8:	mov	w1, #0x1                   	// #1
  4201fc:	mov	w19, #0x0                   	// #0
  420200:	strb	w1, [x0, #680]
  420204:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420208:	ldr	x1, [x21]
  42020c:	mov	w0, #0x1                   	// #1
  420210:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  420214:	bl	41e940 <wcrtomb@plt+0x199f0>
  420218:	cbnz	x20, 42022c <wcrtomb@plt+0x1b2dc>
  42021c:	mov	x0, #0x1                   	// #1
  420220:	str	x0, [x19, #768]
  420224:	mov	w19, #0x0                   	// #0
  420228:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42022c:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  420230:	add	x3, sp, #0x98
  420234:	add	x4, x4, #0x41a
  420238:	mov	x0, x20
  42023c:	mov	w2, #0xa                   	// #10
  420240:	mov	x1, #0x0                   	// #0
  420244:	bl	436fdc <argp_usage@@Base+0x9afc>
  420248:	cbnz	w0, 42025c <wcrtomb@plt+0x1b30c>
  42024c:	ldr	x0, [sp, #152]
  420250:	str	x0, [x19, #768]
  420254:	mov	w19, #0x0                   	// #0
  420258:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42025c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420260:	ldr	x0, [x0, #1016]
  420264:	cbz	x0, 42026c <wcrtomb@plt+0x1b31c>
  420268:	blr	x0
  42026c:	mov	x0, x20
  420270:	bl	436084 <argp_usage@@Base+0x8ba4>
  420274:	mov	w2, #0x5                   	// #5
  420278:	mov	x19, x0
  42027c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  420280:	mov	x0, #0x0                   	// #0
  420284:	add	x1, x1, #0x4e6
  420288:	bl	404d00 <dcgettext@plt>
  42028c:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  420290:	mov	x4, x0
  420294:	mov	x3, x19
  420298:	add	x2, x2, #0xe6f
  42029c:	mov	w1, #0x0                   	// #0
  4202a0:	mov	w0, #0x0                   	// #0
  4202a4:	bl	4042e0 <error@plt>
  4202a8:	b	420018 <wcrtomb@plt+0x1b0c8>
  4202ac:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  4202b0:	mov	w19, #0x0                   	// #0
  4202b4:	add	x0, x0, #0xeac
  4202b8:	bl	41f61c <wcrtomb@plt+0x1a6cc>
  4202bc:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4202c0:	ldr	x1, [x21]
  4202c4:	mov	w0, #0x0                   	// #0
  4202c8:	mov	w19, #0x0                   	// #0
  4202cc:	bl	41f514 <wcrtomb@plt+0x1a5c4>
  4202d0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4202d4:	ldr	x1, [x21]
  4202d8:	mov	w0, #0x2                   	// #2
  4202dc:	mov	w19, #0x0                   	// #0
  4202e0:	bl	41f514 <wcrtomb@plt+0x1a5c4>
  4202e4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4202e8:	mov	x0, x20
  4202ec:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  4202f0:	add	x1, x19, #0x250
  4202f4:	bl	41ea4c <wcrtomb@plt+0x19afc>
  4202f8:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  4202fc:	cmn	x0, #0x1
  420300:	b.ne	420320 <wcrtomb@plt+0x1b3d0>  // b.any
  420304:	str	w0, [x2, #792]
  420308:	add	x1, x2, #0x318
  42030c:	ldr	x0, [x19, #592]
  420310:	cbz	x0, 41fbac <wcrtomb@plt+0x1ac5c>
  420314:	mov	w19, #0x0                   	// #0
  420318:	bl	41a39c <wcrtomb@plt+0x1544c>
  42031c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420320:	str	w0, [x2, #792]
  420324:	mov	w19, #0x0                   	// #0
  420328:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42032c:	mov	x0, x20
  420330:	mov	w19, #0x0                   	// #0
  420334:	bl	417a9c <wcrtomb@plt+0x12b4c>
  420338:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42033c:	add	x20, x20, #0x1
  420340:	mov	w2, #0x1                   	// #1
  420344:	mov	x0, #0x0                   	// #0
  420348:	bl	435c3c <argp_usage@@Base+0x875c>
  42034c:	ldrb	w1, [x20]
  420350:	cbnz	w1, 42033c <wcrtomb@plt+0x1b3ec>
  420354:	b	41fbac <wcrtomb@plt+0x1ac5c>
  420358:	mov	x0, x20
  42035c:	bl	404a30 <strcmp@plt>
  420360:	mov	w19, w0
  420364:	add	x0, x21, #0x1
  420368:	cbnz	w19, 4203c8 <wcrtomb@plt+0x1b478>
  42036c:	mov	w1, w21
  420370:	mov	x0, #0x0                   	// #0
  420374:	bl	435c24 <argp_usage@@Base+0x8744>
  420378:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42037c:	adrp	x22, 450000 <_obstack_memory_used@@Base+0x18380>
  420380:	add	x22, x22, #0x3f8
  420384:	mov	x21, #0x0                   	// #0
  420388:	ldr	x1, [x22, x21, lsl #3]
  42038c:	cbnz	x1, 420358 <wcrtomb@plt+0x1b408>
  420390:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420394:	ldr	x0, [x0, #1016]
  420398:	cbz	x0, 4203a0 <wcrtomb@plt+0x1b450>
  42039c:	blr	x0
  4203a0:	mov	w2, #0x5                   	// #5
  4203a4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4203a8:	mov	x0, #0x0                   	// #0
  4203ac:	add	x1, x1, #0x4f5
  4203b0:	bl	404d00 <dcgettext@plt>
  4203b4:	mov	x2, x0
  4203b8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  4203bc:	mov	x3, x20
  4203c0:	ldr	x4, [x1, #3552]
  4203c4:	b	42029c <wcrtomb@plt+0x1b34c>
  4203c8:	mov	x21, x0
  4203cc:	b	420388 <wcrtomb@plt+0x1b438>
  4203d0:	adrp	x24, 44d000 <_obstack_memory_used@@Base+0x15380>
  4203d4:	add	x24, x24, #0x420
  4203d8:	add	x0, sp, #0x98
  4203dc:	adrp	x4, 404000 <mbrtowc@plt-0x1f0>
  4203e0:	adrp	x3, 436000 <argp_usage@@Base+0x8b20>
  4203e4:	add	x4, x4, #0xae0
  4203e8:	add	x3, x3, #0xd44
  4203ec:	mov	x2, #0x0                   	// #0
  4203f0:	mov	x1, #0x0                   	// #0
  4203f4:	bl	437aa0 <_obstack_begin@@Base>
  4203f8:	adrp	x25, 44a000 <_obstack_memory_used@@Base+0x12380>
  4203fc:	add	x25, x25, #0x53e
  420400:	ldrb	w0, [x20]
  420404:	ldp	x26, x19, [sp, #176]
  420408:	cbnz	w0, 4204a4 <wcrtomb@plt+0x1b554>
  42040c:	cmp	x26, x19
  420410:	b.ne	420420 <wcrtomb@plt+0x1b4d0>  // b.any
  420414:	add	x0, sp, #0x98
  420418:	mov	x1, #0x1                   	// #1
  42041c:	bl	437acc <_obstack_newchunk@@Base>
  420420:	ldr	x0, [sp, #176]
  420424:	add	x1, x0, #0x1
  420428:	str	x1, [sp, #176]
  42042c:	strb	wzr, [x0]
  420430:	ldp	x0, x2, [sp, #168]
  420434:	cmp	x0, x2
  420438:	b.ne	420448 <wcrtomb@plt+0x1b4f8>  // b.any
  42043c:	ldrb	w1, [sp, #232]
  420440:	orr	w1, w1, #0x2
  420444:	strb	w1, [sp, #232]
  420448:	ldr	x1, [sp, #200]
  42044c:	ldr	x3, [sp, #184]
  420450:	add	x2, x2, x1
  420454:	bic	x1, x2, x1
  420458:	ldr	x2, [sp, #160]
  42045c:	sub	x4, x1, x2
  420460:	sub	x2, x3, x2
  420464:	cmp	x4, x2
  420468:	csel	x1, x1, x3, ls  // ls = plast
  42046c:	stp	x1, x1, [sp, #168]
  420470:	bl	436f10 <argp_usage@@Base+0x9a30>
  420474:	mov	x19, x0
  420478:	mov	x1, #0x0                   	// #0
  42047c:	add	x0, sp, #0x98
  420480:	bl	437c0c <_obstack_free@@Base>
  420484:	mov	w0, #0x1                   	// #1
  420488:	strb	w0, [x21, #17]
  42048c:	mov	x0, x19
  420490:	bl	4118cc <wcrtomb@plt+0xc97c>
  420494:	mov	x0, x19
  420498:	mov	w19, #0x0                   	// #0
  42049c:	bl	404ae0 <free@plt>
  4204a0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4204a4:	mov	x1, x24
  4204a8:	mov	x0, x20
  4204ac:	bl	404dd0 <strcspn@plt>
  4204b0:	mov	x2, x0
  4204b4:	mov	w1, #0x3d                  	// #61
  4204b8:	mov	x23, x0
  4204bc:	mov	x0, x20
  4204c0:	bl	404c90 <memchr@plt>
  4204c4:	sub	x1, x19, x26
  4204c8:	mov	x22, x0
  4204cc:	cbz	x0, 420690 <wcrtomb@plt+0x1b740>
  4204d0:	sub	x19, x0, x20
  4204d4:	add	x19, x19, #0x1
  4204d8:	cmp	x1, x19
  4204dc:	b.cs	4204ec <wcrtomb@plt+0x1b59c>  // b.hs, b.nlast
  4204e0:	mov	x1, x19
  4204e4:	add	x0, sp, #0x98
  4204e8:	bl	437acc <_obstack_newchunk@@Base>
  4204ec:	ldr	x0, [sp, #176]
  4204f0:	mov	x2, x19
  4204f4:	mov	x1, x20
  4204f8:	bl	404200 <memcpy@plt>
  4204fc:	ldr	x26, [sp, #176]
  420500:	add	x26, x26, x19
  420504:	sub	x19, x23, x19
  420508:	str	x26, [sp, #176]
  42050c:	ldrb	w27, [x22, #1]
  420510:	add	x22, x22, #0x1
  420514:	cbz	w27, 420654 <wcrtomb@plt+0x1b704>
  420518:	bl	404a60 <__ctype_b_loc@plt>
  42051c:	ldr	x0, [x0]
  420520:	ubfiz	x1, x27, #1, #8
  420524:	ldrh	w0, [x0, x1]
  420528:	tbnz	w0, #13, 420610 <wcrtomb@plt+0x1b6c0>
  42052c:	cmp	w27, #0x7b
  420530:	b.ne	420654 <wcrtomb@plt+0x1b704>  // b.any
  420534:	add	x0, x22, x19
  420538:	ldurb	w0, [x0, #-1]
  42053c:	cmp	w0, #0x7d
  420540:	b.ne	420654 <wcrtomb@plt+0x1b704>  // b.any
  420544:	sub	x27, x19, #0x2
  420548:	mov	x0, x19
  42054c:	bl	436d44 <argp_usage@@Base+0x9864>
  420550:	mov	x26, x0
  420554:	mov	x2, x27
  420558:	add	x1, x22, #0x1
  42055c:	bl	404200 <memcpy@plt>
  420560:	strb	wzr, [x26, x27]
  420564:	add	x3, sp, #0x68
  420568:	mov	x2, x26
  42056c:	mov	x1, x25
  420570:	add	x0, x21, #0x8
  420574:	bl	41f2f8 <wcrtomb@plt+0x1a3a8>
  420578:	cbnz	w0, 420618 <wcrtomb@plt+0x1b6c8>
  42057c:	ldp	x0, x1, [sp, #104]
  420580:	add	x2, sp, #0x78
  420584:	bl	4182c4 <wcrtomb@plt+0x13374>
  420588:	mov	x22, x0
  42058c:	bl	404280 <strlen@plt>
  420590:	mov	x19, x0
  420594:	ldp	x1, x0, [sp, #176]
  420598:	sub	x0, x0, x1
  42059c:	cmp	x19, x0
  4205a0:	b.ls	4205b0 <wcrtomb@plt+0x1b660>  // b.plast
  4205a4:	mov	x1, x19
  4205a8:	add	x0, sp, #0x98
  4205ac:	bl	437acc <_obstack_newchunk@@Base>
  4205b0:	ldr	x0, [sp, #176]
  4205b4:	mov	x2, x19
  4205b8:	mov	x1, x22
  4205bc:	bl	404200 <memcpy@plt>
  4205c0:	ldr	x0, [sp, #176]
  4205c4:	add	x0, x0, x19
  4205c8:	str	x0, [sp, #176]
  4205cc:	mov	x0, x26
  4205d0:	bl	404ae0 <free@plt>
  4205d4:	add	x20, x20, x23
  4205d8:	ldrb	w0, [x20]
  4205dc:	cbz	w0, 420400 <wcrtomb@plt+0x1b4b0>
  4205e0:	ldp	x0, x1, [sp, #176]
  4205e4:	cmp	x1, x0
  4205e8:	b.ne	4205f8 <wcrtomb@plt+0x1b6a8>  // b.any
  4205ec:	add	x0, sp, #0x98
  4205f0:	mov	x1, #0x1                   	// #1
  4205f4:	bl	437acc <_obstack_newchunk@@Base>
  4205f8:	ldr	x0, [sp, #176]
  4205fc:	add	x1, x0, #0x1
  420600:	str	x1, [sp, #176]
  420604:	ldrb	w1, [x20], #1
  420608:	strb	w1, [x0]
  42060c:	b	4203f8 <wcrtomb@plt+0x1b4a8>
  420610:	sub	x19, x19, #0x1
  420614:	b	42050c <wcrtomb@plt+0x1b5bc>
  420618:	ldp	x1, x0, [sp, #176]
  42061c:	sub	x0, x0, x1
  420620:	cmp	x19, x0
  420624:	b.ls	420634 <wcrtomb@plt+0x1b6e4>  // b.plast
  420628:	mov	x1, x19
  42062c:	add	x0, sp, #0x98
  420630:	bl	437acc <_obstack_newchunk@@Base>
  420634:	ldr	x0, [sp, #176]
  420638:	mov	x2, x19
  42063c:	mov	x1, x22
  420640:	bl	404200 <memcpy@plt>
  420644:	ldr	x2, [sp, #176]
  420648:	add	x19, x2, x19
  42064c:	str	x19, [sp, #176]
  420650:	b	4205cc <wcrtomb@plt+0x1b67c>
  420654:	ldr	x0, [sp, #184]
  420658:	sub	x26, x0, x26
  42065c:	cmp	x19, x26
  420660:	b.ls	420670 <wcrtomb@plt+0x1b720>  // b.plast
  420664:	mov	x1, x19
  420668:	add	x0, sp, #0x98
  42066c:	bl	437acc <_obstack_newchunk@@Base>
  420670:	ldr	x0, [sp, #176]
  420674:	mov	x2, x19
  420678:	mov	x1, x22
  42067c:	bl	404200 <memcpy@plt>
  420680:	ldr	x2, [sp, #176]
  420684:	add	x19, x2, x19
  420688:	str	x19, [sp, #176]
  42068c:	b	4205d4 <wcrtomb@plt+0x1b684>
  420690:	cmp	x1, x23
  420694:	b.cs	4206a4 <wcrtomb@plt+0x1b754>  // b.hs, b.nlast
  420698:	mov	x1, x23
  42069c:	add	x0, sp, #0x98
  4206a0:	bl	437acc <_obstack_newchunk@@Base>
  4206a4:	ldr	x0, [sp, #176]
  4206a8:	mov	x2, x23
  4206ac:	mov	x1, x20
  4206b0:	bl	404200 <memcpy@plt>
  4206b4:	ldr	x0, [sp, #176]
  4206b8:	add	x0, x0, x23
  4206bc:	str	x0, [sp, #176]
  4206c0:	b	4205d4 <wcrtomb@plt+0x1b684>
  4206c4:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  4206c8:	mov	w19, #0x0                   	// #0
  4206cc:	add	x0, x0, #0xf54
  4206d0:	bl	41f61c <wcrtomb@plt+0x1a6cc>
  4206d4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4206d8:	adrp	x4, 44a000 <_obstack_memory_used@@Base+0x12380>
  4206dc:	add	x3, sp, #0x98
  4206e0:	add	x4, x4, #0x406
  4206e4:	mov	x0, x20
  4206e8:	mov	w2, #0xa                   	// #10
  4206ec:	mov	x1, #0x0                   	// #0
  4206f0:	bl	436fdc <argp_usage@@Base+0x9afc>
  4206f4:	cbz	w0, 420724 <wcrtomb@plt+0x1b7d4>
  4206f8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4206fc:	ldr	x0, [x0, #1016]
  420700:	cbz	x0, 420708 <wcrtomb@plt+0x1b7b8>
  420704:	blr	x0
  420708:	mov	x0, x20
  42070c:	bl	436084 <argp_usage@@Base+0x8ba4>
  420710:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  420714:	mov	x19, x0
  420718:	add	x1, x1, #0x54b
  42071c:	mov	w2, #0x5                   	// #5
  420720:	b	41f7bc <wcrtomb@plt+0x1a86c>
  420724:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420728:	ldr	x0, [sp, #152]
  42072c:	str	x0, [x1, #928]
  420730:	tst	x0, #0x1ff
  420734:	b.eq	420774 <wcrtomb@plt+0x1b824>  // b.none
  420738:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42073c:	ldr	x0, [x0, #1016]
  420740:	cbz	x0, 420748 <wcrtomb@plt+0x1b7f8>
  420744:	blr	x0
  420748:	mov	w2, #0x5                   	// #5
  42074c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  420750:	mov	x0, #0x0                   	// #0
  420754:	add	x1, x1, #0x55f
  420758:	bl	404d00 <dcgettext@plt>
  42075c:	mov	x2, x0
  420760:	mov	w3, #0x200                 	// #512
  420764:	mov	w1, #0x0                   	// #0
  420768:	mov	w0, #0x0                   	// #0
  42076c:	bl	4042e0 <error@plt>
  420770:	b	41f7e0 <wcrtomb@plt+0x1a890>
  420774:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420778:	lsr	x0, x0, #9
  42077c:	mov	w19, #0x0                   	// #0
  420780:	str	w0, [x1, #756]
  420784:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420788:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42078c:	mov	w1, #0x1                   	// #1
  420790:	mov	w19, #0x0                   	// #0
  420794:	strb	w1, [x0, #42]
  420798:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42079c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4207a0:	mov	w1, #0x1                   	// #1
  4207a4:	mov	w19, #0x0                   	// #0
  4207a8:	strb	w1, [x0, #752]
  4207ac:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4207b0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4207b4:	mov	w1, #0x1                   	// #1
  4207b8:	mov	w19, #0x0                   	// #0
  4207bc:	strb	w1, [x0, #784]
  4207c0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4207c4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4207c8:	mov	w19, #0x0                   	// #0
  4207cc:	str	x20, [x0, #664]
  4207d0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4207d4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4207d8:	mov	w19, #0x0                   	// #0
  4207dc:	str	x20, [x0, #816]
  4207e0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4207e4:	bl	41ebb8 <wcrtomb@plt+0x19c68>
  4207e8:	mov	x19, x0
  4207ec:	bl	4049d0 <puts@plt>
  4207f0:	bl	42dbe0 <argp_usage@@Base+0x700>
  4207f4:	mov	x0, x19
  4207f8:	bl	404ae0 <free@plt>
  4207fc:	mov	w0, #0x0                   	// #0
  420800:	bl	4042b0 <exit@plt>
  420804:	bl	414378 <wcrtomb@plt+0xf428>
  420808:	bl	42dbe0 <argp_usage@@Base+0x700>
  42080c:	b	4207fc <wcrtomb@plt+0x1b8ac>
  420810:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  420814:	add	x3, sp, #0x98
  420818:	add	x4, x4, #0x41a
  42081c:	mov	x0, x20
  420820:	mov	w2, #0xa                   	// #10
  420824:	mov	x1, #0x0                   	// #0
  420828:	bl	436fdc <argp_usage@@Base+0x9afc>
  42082c:	cbz	w0, 42085c <wcrtomb@plt+0x1b90c>
  420830:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420834:	ldr	x0, [x0, #1016]
  420838:	cbz	x0, 420840 <wcrtomb@plt+0x1b8f0>
  42083c:	blr	x0
  420840:	mov	x0, x20
  420844:	bl	436084 <argp_usage@@Base+0x8ba4>
  420848:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  42084c:	mov	x19, x0
  420850:	add	x1, x1, #0x585
  420854:	mov	w2, #0x5                   	// #5
  420858:	b	41f7bc <wcrtomb@plt+0x1a86c>
  42085c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420860:	mov	w19, #0x0                   	// #0
  420864:	ldr	x1, [sp, #152]
  420868:	str	x1, [x0, #888]
  42086c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420870:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420874:	mov	w1, #0x1                   	// #1
  420878:	mov	w19, #0x0                   	// #0
  42087c:	strb	w1, [x0, #706]
  420880:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420884:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420888:	mov	w1, #0x1                   	// #1
  42088c:	mov	w19, #0x0                   	// #0
  420890:	strb	w1, [x0, #848]
  420894:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420898:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42089c:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x37380>
  4208a0:	add	x19, x19, #0x1b8
  4208a4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x14380>
  4208a8:	ldr	x5, [x0, #984]
  4208ac:	add	x19, x19, #0x38
  4208b0:	add	x2, x2, #0xc48
  4208b4:	mov	x3, x19
  4208b8:	mov	x1, x20
  4208bc:	add	x2, x2, #0x188
  4208c0:	mov	x4, #0x4                   	// #4
  4208c4:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  4208c8:	add	x0, x0, #0x5a0
  4208cc:	bl	42a36c <wcrtomb@plt+0x2541c>
  4208d0:	ldr	w1, [x19, x0, lsl #2]
  4208d4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4208d8:	mov	w19, #0x0                   	// #0
  4208dc:	str	w1, [x0, #528]
  4208e0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4208e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4208e8:	mov	w1, #0x1                   	// #1
  4208ec:	mov	w19, #0x0                   	// #0
  4208f0:	str	x20, [x21, #24]
  4208f4:	strb	w1, [x0, #765]
  4208f8:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4208fc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420900:	ldr	x1, [x0, #624]
  420904:	cbz	x1, 420928 <wcrtomb@plt+0x1b9d8>
  420908:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42090c:	ldr	x0, [x0, #1016]
  420910:	cbz	x0, 420918 <wcrtomb@plt+0x1b9c8>
  420914:	blr	x0
  420918:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  42091c:	mov	w2, #0x5                   	// #5
  420920:	add	x1, x1, #0x5a7
  420924:	b	41faf8 <wcrtomb@plt+0x1aba8>
  420928:	str	x20, [x0, #624]
  42092c:	mov	w19, #0x0                   	// #0
  420930:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420934:	cbz	x20, 420954 <wcrtomb@plt+0x1ba04>
  420938:	mov	x0, x20
  42093c:	bl	41f064 <wcrtomb@plt+0x1a114>
  420940:	adrp	x1, 41e000 <wcrtomb@plt+0x190b0>
  420944:	mov	w19, #0x0                   	// #0
  420948:	add	x1, x1, #0x9d0
  42094c:	bl	404540 <signal@plt>
  420950:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420954:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420958:	mov	w1, #0x1                   	// #1
  42095c:	mov	w19, #0x0                   	// #0
  420960:	strb	w1, [x0, #705]
  420964:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420968:	mov	x0, x20
  42096c:	mov	w19, #0x0                   	// #0
  420970:	bl	422470 <wcrtomb@plt+0x1d520>
  420974:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420978:	ldr	x1, [x21]
  42097c:	mov	x0, x20
  420980:	mov	w19, #0x0                   	// #0
  420984:	bl	41f584 <wcrtomb@plt+0x1a634>
  420988:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42098c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420990:	mov	w19, #0x0                   	// #0
  420994:	str	x20, [x0, #672]
  420998:	b	41f71c <wcrtomb@plt+0x1a7cc>
  42099c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4209a0:	mov	w1, #0xffffffff            	// #-1
  4209a4:	mov	w19, #0x0                   	// #0
  4209a8:	str	w1, [x0, #988]
  4209ac:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4209b0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4209b4:	mov	w1, #0xffffffff            	// #-1
  4209b8:	mov	w19, #0x0                   	// #0
  4209bc:	str	w1, [x0, #620]
  4209c0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4209c4:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  4209c8:	add	x0, x0, #0xf54
  4209cc:	bl	41f61c <wcrtomb@plt+0x1a6cc>
  4209d0:	mov	w19, #0x0                   	// #0
  4209d4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4209d8:	mov	w1, #0x1                   	// #1
  4209dc:	str	w1, [x0, #904]
  4209e0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4209e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4209e8:	mov	w1, #0xffffffff            	// #-1
  4209ec:	mov	w19, #0x0                   	// #0
  4209f0:	str	w1, [x0, #904]
  4209f4:	b	41f71c <wcrtomb@plt+0x1a7cc>
  4209f8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  4209fc:	add	x0, x0, #0xf54
  420a00:	bl	41f61c <wcrtomb@plt+0x1a6cc>
  420a04:	mov	w19, #0x0                   	// #0
  420a08:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420a0c:	mov	w1, #0x1                   	// #1
  420a10:	str	w1, [x0, #992]
  420a14:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420a18:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420a1c:	mov	w1, #0xffffffff            	// #-1
  420a20:	mov	w19, #0x0                   	// #0
  420a24:	str	w1, [x0, #992]
  420a28:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420a2c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  420a30:	add	x0, x0, #0xf54
  420a34:	bl	41f61c <wcrtomb@plt+0x1a6cc>
  420a38:	mov	w19, #0x0                   	// #0
  420a3c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420a40:	mov	w1, #0x1                   	// #1
  420a44:	str	w1, [x0, #664]
  420a48:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420a4c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420a50:	mov	w1, #0xffffffff            	// #-1
  420a54:	mov	w19, #0x0                   	// #0
  420a58:	str	w1, [x0, #664]
  420a5c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420a60:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  420a64:	add	x0, x0, #0xf54
  420a68:	bl	41f61c <wcrtomb@plt+0x1a6cc>
  420a6c:	cmp	w19, #0x14e
  420a70:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420a74:	mov	w1, #0x1                   	// #1
  420a78:	mov	w19, #0x0                   	// #0
  420a7c:	str	w1, [x0, #664]
  420a80:	cset	w1, eq  // eq = none
  420a84:	mov	x0, x20
  420a88:	bl	424218 <wcrtomb@plt+0x1f2c8>
  420a8c:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420a90:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420a94:	mov	w1, #0x1                   	// #1
  420a98:	mov	w19, #0x0                   	// #0
  420a9c:	str	w1, [x0, #988]
  420aa0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420aa4:	mov	x0, x20
  420aa8:	mov	w19, #0x0                   	// #0
  420aac:	bl	42328c <wcrtomb@plt+0x1e33c>
  420ab0:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420ab4:	mov	x22, x2
  420ab8:	mov	w2, #0x5                   	// #5
  420abc:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  420ac0:	mov	x0, #0x0                   	// #0
  420ac4:	add	x1, x1, #0x5cc
  420ac8:	bl	404d00 <dcgettext@plt>
  420acc:	mov	x1, x0
  420ad0:	mov	x0, x22
  420ad4:	bl	42c59c <argp_error@@Base>
  420ad8:	mov	w0, #0x40                  	// #64
  420adc:	b	420800 <wcrtomb@plt+0x1b8b0>
  420ae0:	ldr	x0, [x21]
  420ae4:	ldr	w0, [x0]
  420ae8:	cmp	w0, #0x2
  420aec:	b.ne	420b20 <wcrtomb@plt+0x1bbd0>  // b.any
  420af0:	mov	w2, #0x5                   	// #5
  420af4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  420af8:	mov	x0, #0x0                   	// #0
  420afc:	add	x1, x1, #0x5fe
  420b00:	bl	404d00 <dcgettext@plt>
  420b04:	mov	x2, x0
  420b08:	ldr	x1, [x21]
  420b0c:	mov	w0, #0x0                   	// #0
  420b10:	ldp	x3, x4, [x1, #8]
  420b14:	mov	w1, #0x0                   	// #0
  420b18:	bl	4042e0 <error@plt>
  420b1c:	b	420ad8 <wcrtomb@plt+0x1bb88>
  420b20:	cbnz	w0, 420ad8 <wcrtomb@plt+0x1bb88>
  420b24:	mov	w2, #0x5                   	// #5
  420b28:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  420b2c:	mov	x0, #0x0                   	// #0
  420b30:	add	x1, x1, #0x61c
  420b34:	bl	404d00 <dcgettext@plt>
  420b38:	mov	x2, x0
  420b3c:	ldr	x1, [x21]
  420b40:	mov	w0, #0x0                   	// #0
  420b44:	ldr	x3, [x1, #8]
  420b48:	mov	w1, #0x0                   	// #0
  420b4c:	bl	4042e0 <error@plt>
  420b50:	b	420ad8 <wcrtomb@plt+0x1bb88>
  420b54:	mov	w19, #0x7                   	// #7
  420b58:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420b5c:	mov	w19, #0x7                   	// #7
  420b60:	b	41f71c <wcrtomb@plt+0x1a7cc>
  420b64:	stp	x29, x30, [sp, #-48]!
  420b68:	adrp	x5, 471000 <_obstack_memory_used@@Base+0x39380>
  420b6c:	add	x5, x5, #0xbf8
  420b70:	mov	x29, sp
  420b74:	str	x19, [sp, #16]
  420b78:	add	x4, sp, #0x2c
  420b7c:	mov	x19, x2
  420b80:	add	x5, x5, #0x78
  420b84:	mov	w3, #0x28                  	// #40
  420b88:	str	x2, [x5]
  420b8c:	mov	x2, x1
  420b90:	mov	w1, w0
  420b94:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x37380>
  420b98:	add	x0, x0, #0x1b8
  420b9c:	bl	42cbb0 <argp_parse@@Base>
  420ba0:	cbz	w0, 420ba8 <wcrtomb@plt+0x1bc58>
  420ba4:	bl	404970 <abort@plt>
  420ba8:	ldr	w0, [x19]
  420bac:	cbnz	w0, 420bfc <wcrtomb@plt+0x1bcac>
  420bb0:	bl	41a4e4 <wcrtomb@plt+0x15594>
  420bb4:	tst	w0, #0xff
  420bb8:	b.eq	420bfc <wcrtomb@plt+0x1bcac>  // b.none
  420bbc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420bc0:	ldr	x0, [x0, #1016]
  420bc4:	cbz	x0, 420bcc <wcrtomb@plt+0x1bc7c>
  420bc8:	blr	x0
  420bcc:	mov	w2, #0x5                   	// #5
  420bd0:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  420bd4:	mov	x0, #0x0                   	// #0
  420bd8:	add	x1, x1, #0x62d
  420bdc:	bl	404d00 <dcgettext@plt>
  420be0:	mov	x2, x0
  420be4:	ldr	x3, [x19, #8]
  420be8:	mov	w1, #0x0                   	// #0
  420bec:	mov	w0, #0x0                   	// #0
  420bf0:	bl	4042e0 <error@plt>
  420bf4:	mov	w0, #0x2                   	// #2
  420bf8:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  420bfc:	ldr	x19, [sp, #16]
  420c00:	ldp	x29, x30, [sp], #48
  420c04:	ret
  420c08:	stp	x29, x30, [sp, #-432]!
  420c0c:	mov	x29, sp
  420c10:	stp	x19, x20, [sp, #16]
  420c14:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  420c18:	add	x20, x20, #0xbf8
  420c1c:	stp	x23, x24, [sp, #48]
  420c20:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x37380>
  420c24:	add	x24, x24, #0x1b8
  420c28:	stp	x21, x22, [sp, #32]
  420c2c:	mov	x21, x1
  420c30:	add	x1, x24, #0x48
  420c34:	mov	w23, w0
  420c38:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  420c3c:	add	x0, x0, #0x5fa
  420c40:	stp	x25, x26, [sp, #64]
  420c44:	mov	w25, #0x1                   	// #1
  420c48:	stp	x27, x28, [sp, #80]
  420c4c:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  420c50:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  420c54:	str	w25, [sp, #136]
  420c58:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  420c5c:	stp	xzr, xzr, [sp, #144]
  420c60:	str	xzr, [sp, #160]
  420c64:	bl	42d598 <argp_usage@@Base+0xb8>
  420c68:	strh	wzr, [x20, #136]
  420c6c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  420c70:	add	x0, x0, #0x648
  420c74:	str	xzr, [x20, #128]
  420c78:	bl	404e40 <getenv@plt>
  420c7c:	stp	x0, xzr, [x20, #144]
  420c80:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420c84:	mov	w1, #0x14                  	// #20
  420c88:	str	wzr, [x19, #868]
  420c8c:	str	w1, [x0, #756]
  420c90:	mov	x0, #0x2800                	// #10240
  420c94:	str	wzr, [x22, #824]
  420c98:	str	x0, [x26, #928]
  420c9c:	str	wzr, [x20, #160]
  420ca0:	bl	42e168 <argp_usage@@Base+0xc88>
  420ca4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420ca8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  420cac:	cmp	w23, w25
  420cb0:	str	x0, [x1, #72]
  420cb4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420cb8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420cbc:	str	x2, [x1, #800]
  420cc0:	add	x1, x1, #0x320
  420cc4:	str	wzr, [x0, #924]
  420cc8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420ccc:	add	x27, x0, #0x30
  420cd0:	str	x2, [x0, #48]
  420cd4:	mov	x0, #0xffffffffffffffff    	// #-1
  420cd8:	str	x0, [x1, #8]
  420cdc:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420ce0:	mov	w2, #0x8                   	// #8
  420ce4:	str	x0, [x27, #8]
  420ce8:	str	w2, [x1, #684]
  420cec:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420cf0:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  420cf4:	strb	w25, [x1, #764]
  420cf8:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420cfc:	str	w0, [x2, #80]
  420d00:	str	w25, [x1, #616]
  420d04:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420d08:	str	wzr, [x1, #96]
  420d0c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420d10:	str	wzr, [x1, #528]
  420d14:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420d18:	str	w0, [x1, #792]
  420d1c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420d20:	str	xzr, [x1, #592]
  420d24:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420d28:	str	w0, [x1, #712]
  420d2c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420d30:	str	xzr, [x1, #536]
  420d34:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420d38:	strb	w25, [x1, #40]
  420d3c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  420d40:	stp	x26, x1, [sp, #112]
  420d44:	str	w0, [x1, #788]
  420d48:	b.le	420dd8 <wcrtomb@plt+0x1be88>
  420d4c:	ldr	x0, [x21, #8]
  420d50:	ldrb	w1, [x0]
  420d54:	cmp	w1, #0x2d
  420d58:	b.eq	420dd8 <wcrtomb@plt+0x1be88>  // b.none
  420d5c:	mov	w1, #0x2d                  	// #45
  420d60:	strb	w1, [sp, #200]
  420d64:	strb	wzr, [sp, #202]
  420d68:	mov	x26, x21
  420d6c:	bl	404280 <strlen@plt>
  420d70:	add	w0, w23, w0
  420d74:	sub	w1, w0, #0x1
  420d78:	str	w1, [sp, #108]
  420d7c:	sbfiz	x0, x0, #3, #32
  420d80:	bl	436d44 <argp_usage@@Base+0x9864>
  420d84:	mov	x28, x0
  420d88:	str	x0, [sp, #96]
  420d8c:	ldr	x25, [x21, #8]
  420d90:	add	x21, x21, w23, sxtw #3
  420d94:	ldr	x0, [x26], #16
  420d98:	str	x0, [x28], #8
  420d9c:	ldrb	w0, [x25]
  420da0:	cbnz	w0, 420e5c <wcrtomb@plt+0x1bf0c>
  420da4:	mov	x0, #0x0                   	// #0
  420da8:	add	x1, x26, x0
  420dac:	cmp	x21, x1
  420db0:	b.hi	420ef0 <wcrtomb@plt+0x1bfa0>  // b.pmore
  420db4:	add	x0, x21, #0x7
  420db8:	sub	x2, x26, #0x7
  420dbc:	sub	x0, x0, x26
  420dc0:	cmp	x21, x2
  420dc4:	and	x0, x0, #0xfffffffffffffff8
  420dc8:	ldr	w23, [sp, #108]
  420dcc:	csel	x0, x0, xzr, cs  // cs = hs, nlast
  420dd0:	ldr	x21, [sp, #96]
  420dd4:	str	xzr, [x28, x0]
  420dd8:	adrp	x25, 44a000 <_obstack_memory_used@@Base+0x12380>
  420ddc:	add	x25, x25, #0x683
  420de0:	mov	x0, x25
  420de4:	bl	404e40 <getenv@plt>
  420de8:	str	wzr, [sp, #168]
  420dec:	stp	x25, xzr, [sp, #176]
  420df0:	str	xzr, [sp, #192]
  420df4:	cbz	x0, 420f30 <wcrtomb@plt+0x1bfe0>
  420df8:	mov	x1, #0x1                   	// #1
  420dfc:	mov	w2, #0xe46                 	// #3654
  420e00:	movk	w2, #0x200, lsl #16
  420e04:	str	x1, [sp, #216]
  420e08:	add	x1, sp, #0xc8
  420e0c:	bl	4294ac <wcrtomb@plt+0x2455c>
  420e10:	cbz	w0, 420f00 <wcrtomb@plt+0x1bfb0>
  420e14:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420e18:	ldr	x0, [x0, #1016]
  420e1c:	cbz	x0, 420e24 <wcrtomb@plt+0x1bed4>
  420e20:	blr	x0
  420e24:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  420e28:	add	x1, x1, #0x68f
  420e2c:	mov	w2, #0x5                   	// #5
  420e30:	mov	x0, #0x0                   	// #0
  420e34:	bl	404d00 <dcgettext@plt>
  420e38:	mov	x19, x0
  420e3c:	add	x0, sp, #0xc8
  420e40:	bl	426dc8 <wcrtomb@plt+0x21e78>
  420e44:	mov	x2, x19
  420e48:	mov	x3, x0
  420e4c:	mov	w1, #0x0                   	// #0
  420e50:	mov	w0, #0x0                   	// #0
  420e54:	bl	4042e0 <error@plt>
  420e58:	bl	40d47c <wcrtomb@plt+0x852c>
  420e5c:	mov	x23, x28
  420e60:	strb	w0, [sp, #201]
  420e64:	add	x0, sp, #0xc8
  420e68:	bl	436f10 <argp_usage@@Base+0x9a30>
  420e6c:	str	x0, [x23], #8
  420e70:	ldr	x0, [x24]
  420e74:	ldrb	w1, [x25]
  420e78:	bl	41e900 <wcrtomb@plt+0x199b0>
  420e7c:	cbnz	x0, 421ab4 <wcrtomb@plt+0x1cb64>
  420e80:	ldr	x4, [x24, #32]
  420e84:	cbnz	x4, 420ea4 <wcrtomb@plt+0x1bf54>
  420e88:	add	x25, x25, #0x1
  420e8c:	mov	x28, x23
  420e90:	b	420d9c <wcrtomb@plt+0x1be4c>
  420e94:	ldr	x0, [x0]
  420e98:	bl	41e900 <wcrtomb@plt+0x199b0>
  420e9c:	cbnz	x0, 421ab4 <wcrtomb@plt+0x1cb64>
  420ea0:	add	x4, x4, #0x20
  420ea4:	ldr	x0, [x4]
  420ea8:	cbnz	x0, 420e94 <wcrtomb@plt+0x1bf44>
  420eac:	b	420e88 <wcrtomb@plt+0x1bf38>
  420eb0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420eb4:	ldr	x0, [x0, #1016]
  420eb8:	cbz	x0, 420ec0 <wcrtomb@plt+0x1bf70>
  420ebc:	blr	x0
  420ec0:	mov	w2, #0x5                   	// #5
  420ec4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  420ec8:	mov	x0, #0x0                   	// #0
  420ecc:	add	x1, x1, #0x65d
  420ed0:	bl	404d00 <dcgettext@plt>
  420ed4:	mov	x2, x0
  420ed8:	ldrb	w3, [x25]
  420edc:	mov	w1, #0x0                   	// #0
  420ee0:	mov	w0, #0x0                   	// #0
  420ee4:	bl	4042e0 <error@plt>
  420ee8:	mov	w0, #0x2                   	// #2
  420eec:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  420ef0:	ldr	x1, [x26, x0]
  420ef4:	str	x1, [x28, x0]
  420ef8:	add	x0, x0, #0x8
  420efc:	b	420da8 <wcrtomb@plt+0x1be58>
  420f00:	ldr	x0, [sp, #200]
  420f04:	cbz	x0, 420f28 <wcrtomb@plt+0x1bfd8>
  420f08:	ldp	x1, x3, [sp, #208]
  420f0c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  420f10:	ldr	x2, [x2, #3552]
  420f14:	str	x2, [x1]
  420f18:	add	x2, sp, #0xa8
  420f1c:	add	w0, w3, w0
  420f20:	bl	420b64 <wcrtomb@plt+0x1bc14>
  420f24:	str	xzr, [sp, #200]
  420f28:	add	x0, sp, #0xc8
  420f2c:	bl	426d30 <wcrtomb@plt+0x21de0>
  420f30:	add	x0, sp, #0x88
  420f34:	add	x25, x20, #0x78
  420f38:	mov	x5, x25
  420f3c:	add	x4, sp, #0xc8
  420f40:	mov	x2, x21
  420f44:	mov	w1, w23
  420f48:	mov	w3, #0x8                   	// #8
  420f4c:	str	x0, [x20, #120]
  420f50:	mov	x0, x24
  420f54:	bl	42cbb0 <argp_parse@@Base>
  420f58:	cbz	w0, 420f64 <wcrtomb@plt+0x1c014>
  420f5c:	mov	w0, #0x2                   	// #2
  420f60:	bl	4042b0 <exit@plt>
  420f64:	ldrb	w0, [x25, #16]
  420f68:	cbz	w0, 420f84 <wcrtomb@plt+0x1c034>
  420f6c:	ldr	w0, [x19, #868]
  420f70:	cmp	w0, #0x3
  420f74:	b.ne	42103c <wcrtomb@plt+0x1c0ec>  // b.any
  420f78:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  420f7c:	add	x0, x0, #0xeac
  420f80:	bl	41f61c <wcrtomb@plt+0x1a6cc>
  420f84:	ldr	w0, [sp, #200]
  420f88:	cmp	w0, w23
  420f8c:	b.lt	42104c <wcrtomb@plt+0x1c0fc>  // b.tstop
  420f90:	ldr	w0, [x22, #824]
  420f94:	cbnz	w0, 420fb0 <wcrtomb@plt+0x1c060>
  420f98:	ldrb	w0, [x20, #137]
  420f9c:	mov	w1, #0x6                   	// #6
  420fa0:	cmp	w0, #0x0
  420fa4:	mov	w0, #0x4                   	// #4
  420fa8:	csel	w0, w0, w1, ne  // ne = any
  420fac:	str	w0, [x22, #824]
  420fb0:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  420fb4:	ldr	x0, [x25, #656]
  420fb8:	cbz	x0, 420fc8 <wcrtomb@plt+0x1c078>
  420fbc:	ldr	w0, [x19, #868]
  420fc0:	cmp	w0, #0x3
  420fc4:	b.eq	420fec <wcrtomb@plt+0x1c09c>  // b.none
  420fc8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420fcc:	ldrb	w0, [x0, #41]
  420fd0:	cbnz	w0, 420fec <wcrtomb@plt+0x1c09c>
  420fd4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420fd8:	ldrb	w0, [x0, #84]
  420fdc:	cbnz	w0, 420fec <wcrtomb@plt+0x1c09c>
  420fe0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  420fe4:	ldrb	w0, [x0, #920]
  420fe8:	cbz	w0, 421064 <wcrtomb@plt+0x1c114>
  420fec:	ldr	w1, [x22, #824]
  420ff0:	mov	w0, #0x1                   	// #1
  420ff4:	lsl	w0, w0, w1
  420ff8:	mov	w1, #0x54                  	// #84
  420ffc:	tst	w0, w1
  421000:	b.ne	421064 <wcrtomb@plt+0x1c114>  // b.any
  421004:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421008:	ldr	x0, [x0, #1016]
  42100c:	cbz	x0, 421014 <wcrtomb@plt+0x1c0c4>
  421010:	blr	x0
  421014:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421018:	add	x1, x1, #0x6ac
  42101c:	mov	w2, #0x5                   	// #5
  421020:	mov	x0, #0x0                   	// #0
  421024:	bl	404d00 <dcgettext@plt>
  421028:	mov	w1, #0x0                   	// #0
  42102c:	mov	x2, x0
  421030:	mov	w0, #0x0                   	// #0
  421034:	bl	4042e0 <error@plt>
  421038:	b	420ee8 <wcrtomb@plt+0x1bf98>
  42103c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421040:	mov	w1, #0xffffffff            	// #-1
  421044:	str	w1, [x0, #988]
  421048:	b	420f84 <wcrtomb@plt+0x1c034>
  42104c:	ldr	x0, [x21, w0, sxtw #3]
  421050:	bl	41a4f8 <wcrtomb@plt+0x155a8>
  421054:	ldr	w0, [sp, #200]
  421058:	add	w0, w0, #0x1
  42105c:	str	w0, [sp, #200]
  421060:	b	420f84 <wcrtomb@plt+0x1c034>
  421064:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421068:	mov	x21, x0
  42106c:	ldr	x1, [x0, #768]
  421070:	cbz	x1, 4210e4 <wcrtomb@plt+0x1c194>
  421074:	bl	41a4e4 <wcrtomb@plt+0x15594>
  421078:	tst	w0, #0xff
  42107c:	b.ne	4210a0 <wcrtomb@plt+0x1c150>  // b.any
  421080:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421084:	ldr	x0, [x0, #1016]
  421088:	cbz	x0, 421090 <wcrtomb@plt+0x1c140>
  42108c:	blr	x0
  421090:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421094:	mov	w2, #0x5                   	// #5
  421098:	add	x1, x1, #0x6df
  42109c:	b	421020 <wcrtomb@plt+0x1c0d0>
  4210a0:	ldr	w0, [x19, #868]
  4210a4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x14380>
  4210a8:	add	x1, x1, #0xc48
  4210ac:	add	x1, x1, #0x1a8
  4210b0:	ldr	w1, [x1, w0, uxtw #2]
  4210b4:	tbnz	w1, #4, 4210e4 <wcrtomb@plt+0x1c194>
  4210b8:	ldr	x1, [x20, #8]
  4210bc:	cbz	x1, 4210e0 <wcrtomb@plt+0x1c190>
  4210c0:	ldr	w1, [x1]
  4210c4:	cmp	w1, #0x1
  4210c8:	b.ne	4210e0 <wcrtomb@plt+0x1c190>  // b.any
  4210cc:	bl	41f03c <wcrtomb@plt+0x1a0ec>
  4210d0:	mov	x1, x0
  4210d4:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  4210d8:	add	x0, x0, #0x70f
  4210dc:	bl	41f4bc <wcrtomb@plt+0x1a56c>
  4210e0:	str	xzr, [x21, #768]
  4210e4:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  4210e8:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  4210ec:	ldr	x0, [x21, #856]
  4210f0:	cbnz	x0, 421128 <wcrtomb@plt+0x1c1d8>
  4210f4:	ldr	x24, [x23, #696]
  4210f8:	mov	x0, #0x1                   	// #1
  4210fc:	str	x0, [x21, #856]
  421100:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  421104:	add	x0, x0, #0x71c
  421108:	bl	404e40 <getenv@plt>
  42110c:	ldr	x1, [x23, #696]
  421110:	str	x0, [x24]
  421114:	ldr	x0, [x1]
  421118:	cbnz	x0, 421128 <wcrtomb@plt+0x1c1d8>
  42111c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  421120:	add	x0, x0, #0x8dc
  421124:	str	x0, [x1]
  421128:	ldr	x0, [x21, #856]
  42112c:	cmp	x0, #0x1
  421130:	b.ls	421160 <wcrtomb@plt+0x1c210>  // b.plast
  421134:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421138:	ldrb	w0, [x0, #84]
  42113c:	cbnz	w0, 421160 <wcrtomb@plt+0x1c210>
  421140:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421144:	ldr	x0, [x0, #1016]
  421148:	cbz	x0, 421150 <wcrtomb@plt+0x1c200>
  42114c:	blr	x0
  421150:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421154:	mov	w2, #0x5                   	// #5
  421158:	add	x1, x1, #0x721
  42115c:	b	421020 <wcrtomb@plt+0x1c0d0>
  421160:	adrp	x24, 472000 <argp_program_version_hook@@Base+0x250>
  421164:	ldr	x0, [x24, #840]
  421168:	cbz	x0, 4211a8 <wcrtomb@plt+0x1c258>
  42116c:	ldr	x0, [x27, #8]
  421170:	tbnz	x0, #63, 4211a8 <wcrtomb@plt+0x1c258>
  421174:	ldp	x26, x1, [x20, #16]
  421178:	mov	x0, x26
  42117c:	bl	41ea00 <wcrtomb@plt+0x19ab0>
  421180:	cbz	w0, 421198 <wcrtomb@plt+0x1c248>
  421184:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421188:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  42118c:	add	x1, x1, #0x74c
  421190:	add	x0, x0, #0x295
  421194:	b	4210dc <wcrtomb@plt+0x1c18c>
  421198:	ldr	w0, [x26]
  42119c:	cmp	w0, #0x1
  4211a0:	b.ne	421288 <wcrtomb@plt+0x1c338>  // b.any
  4211a4:	str	xzr, [x24, #840]
  4211a8:	ldr	x0, [sp, #120]
  4211ac:	ldr	w0, [x0, #788]
  4211b0:	cmn	w0, #0x1
  4211b4:	b.eq	4211f4 <wcrtomb@plt+0x1c2a4>  // b.none
  4211b8:	ldr	x0, [x24, #840]
  4211bc:	cbnz	x0, 4211f4 <wcrtomb@plt+0x1c2a4>
  4211c0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4211c4:	ldr	x0, [x0, #1016]
  4211c8:	cbz	x0, 4211d0 <wcrtomb@plt+0x1c280>
  4211cc:	blr	x0
  4211d0:	mov	w2, #0x5                   	// #5
  4211d4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4211d8:	mov	x0, #0x0                   	// #0
  4211dc:	add	x1, x1, #0x754
  4211e0:	bl	404d00 <dcgettext@plt>
  4211e4:	mov	x2, x0
  4211e8:	mov	w1, #0x0                   	// #0
  4211ec:	mov	w0, #0x0                   	// #0
  4211f0:	bl	4042e0 <error@plt>
  4211f4:	ldr	x0, [x25, #656]
  4211f8:	cbz	x0, 421290 <wcrtomb@plt+0x1c340>
  4211fc:	ldr	w1, [x22, #824]
  421200:	and	w1, w1, #0xfffffffb
  421204:	cmp	w1, #0x2
  421208:	b.ne	421290 <wcrtomb@plt+0x1c340>  // b.any
  42120c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  421210:	mov	x26, #0x51                  	// #81
  421214:	ldrb	w1, [x1, #84]
  421218:	cmp	w1, #0x0
  42121c:	mov	x1, #0x63                  	// #99
  421220:	csel	x26, x26, x1, ne  // ne = any
  421224:	bl	404280 <strlen@plt>
  421228:	cmp	x0, x26
  42122c:	b.ls	421290 <wcrtomb@plt+0x1c340>  // b.plast
  421230:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421234:	ldr	x0, [x0, #1016]
  421238:	cbz	x0, 421240 <wcrtomb@plt+0x1c2f0>
  42123c:	blr	x0
  421240:	mov	x3, x26
  421244:	mov	w4, #0x5                   	// #5
  421248:	adrp	x2, 44a000 <_obstack_memory_used@@Base+0x12380>
  42124c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421250:	add	x2, x2, #0x788
  421254:	add	x1, x1, #0x7ba
  421258:	mov	x0, #0x0                   	// #0
  42125c:	bl	404c10 <dcngettext@plt>
  421260:	mov	x19, x0
  421264:	ldr	x0, [x25, #656]
  421268:	bl	436084 <argp_usage@@Base+0x8ba4>
  42126c:	mov	x3, x0
  421270:	mov	x4, x26
  421274:	mov	x2, x19
  421278:	mov	w1, #0x0                   	// #0
  42127c:	mov	w0, #0x0                   	// #0
  421280:	bl	4042e0 <error@plt>
  421284:	b	420ee8 <wcrtomb@plt+0x1bf98>
  421288:	stp	xzr, xzr, [x27]
  42128c:	b	4211a8 <wcrtomb@plt+0x1c258>
  421290:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421294:	adrp	x25, 472000 <argp_program_version_hook@@Base+0x250>
  421298:	mov	x2, x0
  42129c:	ldrb	w1, [x0, #850]
  4212a0:	cbz	w1, 42137c <wcrtomb@plt+0x1c42c>
  4212a4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4212a8:	ldrb	w0, [x0, #84]
  4212ac:	cbz	w0, 4212d0 <wcrtomb@plt+0x1c380>
  4212b0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4212b4:	ldr	x0, [x0, #1016]
  4212b8:	cbz	x0, 4212c0 <wcrtomb@plt+0x1c370>
  4212bc:	blr	x0
  4212c0:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4212c4:	mov	w2, #0x5                   	// #5
  4212c8:	add	x1, x1, #0x7eb
  4212cc:	b	421020 <wcrtomb@plt+0x1c0d0>
  4212d0:	ldr	x0, [x25, #912]
  4212d4:	cbz	x0, 4212f8 <wcrtomb@plt+0x1c3a8>
  4212d8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4212dc:	ldr	x0, [x0, #1016]
  4212e0:	cbz	x0, 4212e8 <wcrtomb@plt+0x1c398>
  4212e4:	blr	x0
  4212e8:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4212ec:	mov	w2, #0x5                   	// #5
  4212f0:	add	x1, x1, #0x80f
  4212f4:	b	421020 <wcrtomb@plt+0x1c0d0>
  4212f8:	ldr	w0, [x19, #868]
  4212fc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x14380>
  421300:	add	x1, x1, #0xc48
  421304:	add	x1, x1, #0x1a8
  421308:	ldr	w1, [x1, w0, uxtw #2]
  42130c:	tbnz	w1, #1, 42133c <wcrtomb@plt+0x1c3ec>
  421310:	ldr	x1, [x20, #32]
  421314:	cbz	x1, 421338 <wcrtomb@plt+0x1c3e8>
  421318:	ldr	w1, [x1]
  42131c:	cmp	w1, #0x1
  421320:	b.ne	421338 <wcrtomb@plt+0x1c3e8>  // b.any
  421324:	bl	41f03c <wcrtomb@plt+0x1a0ec>
  421328:	mov	x1, x0
  42132c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  421330:	add	x0, x0, #0x831
  421334:	b	4210dc <wcrtomb@plt+0x1c18c>
  421338:	strb	wzr, [x2, #850]
  42133c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421340:	ldr	w0, [x0, #64]
  421344:	cmp	w0, #0x2
  421348:	b.ne	421410 <wcrtomb@plt+0x1c4c0>  // b.any
  42134c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421350:	add	x0, x0, #0x320
  421354:	ldr	x0, [x0, #8]
  421358:	tbz	x0, #63, 421410 <wcrtomb@plt+0x1c4c0>
  42135c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421360:	ldr	x0, [x0, #1016]
  421364:	cbz	x0, 42136c <wcrtomb@plt+0x1c41c>
  421368:	blr	x0
  42136c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421370:	mov	w2, #0x5                   	// #5
  421374:	add	x1, x1, #0x88d
  421378:	b	421020 <wcrtomb@plt+0x1c0d0>
  42137c:	ldr	x0, [x25, #912]
  421380:	cbz	x0, 42133c <wcrtomb@plt+0x1c3ec>
  421384:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421388:	ldrb	w0, [x0, #84]
  42138c:	cbz	w0, 4213b0 <wcrtomb@plt+0x1c460>
  421390:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421394:	ldr	x0, [x0, #1016]
  421398:	cbz	x0, 4213a0 <wcrtomb@plt+0x1c450>
  42139c:	blr	x0
  4213a0:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4213a4:	mov	w2, #0x5                   	// #5
  4213a8:	add	x1, x1, #0x83a
  4213ac:	b	421020 <wcrtomb@plt+0x1c0d0>
  4213b0:	ldr	w1, [x19, #868]
  4213b4:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x14380>
  4213b8:	add	x0, x0, #0xc48
  4213bc:	add	x0, x0, #0x1a8
  4213c0:	ldr	w0, [x0, w1, uxtw #2]
  4213c4:	tbz	w0, #2, 4213e8 <wcrtomb@plt+0x1c498>
  4213c8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4213cc:	ldr	x0, [x0, #1016]
  4213d0:	cbz	x0, 4213d8 <wcrtomb@plt+0x1c488>
  4213d4:	blr	x0
  4213d8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  4213dc:	mov	w2, #0x5                   	// #5
  4213e0:	add	x1, x1, #0x164
  4213e4:	b	421020 <wcrtomb@plt+0x1c0d0>
  4213e8:	cmp	w1, #0x2
  4213ec:	b.ne	42133c <wcrtomb@plt+0x1c3ec>  // b.any
  4213f0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4213f4:	ldr	x0, [x0, #1016]
  4213f8:	cbz	x0, 421400 <wcrtomb@plt+0x1c4b0>
  4213fc:	blr	x0
  421400:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421404:	mov	w2, #0x5                   	// #5
  421408:	add	x1, x1, #0x866
  42140c:	b	421020 <wcrtomb@plt+0x1c0d0>
  421410:	ldrb	w0, [x20, #137]
  421414:	cbz	w0, 42145c <wcrtomb@plt+0x1c50c>
  421418:	ldr	w0, [x22, #824]
  42141c:	cmp	w0, #0x4
  421420:	b.eq	42145c <wcrtomb@plt+0x1c50c>  // b.none
  421424:	ldr	w1, [x19, #868]
  421428:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x14380>
  42142c:	add	x0, x0, #0xc48
  421430:	add	x0, x0, #0x1a8
  421434:	ldr	w0, [x0, x1, lsl #2]
  421438:	tbnz	w0, #0, 42145c <wcrtomb@plt+0x1c50c>
  42143c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421440:	ldr	x0, [x0, #1016]
  421444:	cbz	x0, 42144c <wcrtomb@plt+0x1c4fc>
  421448:	blr	x0
  42144c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421450:	mov	w2, #0x5                   	// #5
  421454:	add	x1, x1, #0x8c0
  421458:	b	421020 <wcrtomb@plt+0x1c0d0>
  42145c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421460:	ldr	w0, [x0, #904]
  421464:	cmp	w0, #0x0
  421468:	b.le	4214b0 <wcrtomb@plt+0x1c560>
  42146c:	ldr	w0, [x22, #824]
  421470:	cmp	w0, #0x4
  421474:	b.eq	4214b0 <wcrtomb@plt+0x1c560>  // b.none
  421478:	ldr	w1, [x19, #868]
  42147c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x14380>
  421480:	add	x0, x0, #0xc48
  421484:	add	x0, x0, #0x1a8
  421488:	ldr	w0, [x0, x1, lsl #2]
  42148c:	tbnz	w0, #0, 4214b0 <wcrtomb@plt+0x1c560>
  421490:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421494:	ldr	x0, [x0, #1016]
  421498:	cbz	x0, 4214a0 <wcrtomb@plt+0x1c550>
  42149c:	blr	x0
  4214a0:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4214a4:	mov	w2, #0x5                   	// #5
  4214a8:	add	x1, x1, #0x8f0
  4214ac:	b	421020 <wcrtomb@plt+0x1c0d0>
  4214b0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4214b4:	ldr	w0, [x0, #992]
  4214b8:	cmp	w0, #0x0
  4214bc:	b.le	421504 <wcrtomb@plt+0x1c5b4>
  4214c0:	ldr	w0, [x22, #824]
  4214c4:	cmp	w0, #0x4
  4214c8:	b.eq	421504 <wcrtomb@plt+0x1c5b4>  // b.none
  4214cc:	ldr	w1, [x19, #868]
  4214d0:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x14380>
  4214d4:	add	x0, x0, #0xc48
  4214d8:	add	x0, x0, #0x1a8
  4214dc:	ldr	w0, [x0, x1, lsl #2]
  4214e0:	tbnz	w0, #0, 421504 <wcrtomb@plt+0x1c5b4>
  4214e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4214e8:	ldr	x0, [x0, #1016]
  4214ec:	cbz	x0, 4214f4 <wcrtomb@plt+0x1c5a4>
  4214f0:	blr	x0
  4214f4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  4214f8:	mov	w2, #0x5                   	// #5
  4214fc:	add	x1, x1, #0x91a
  421500:	b	421020 <wcrtomb@plt+0x1c0d0>
  421504:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421508:	ldr	w0, [x0, #664]
  42150c:	cmp	w0, #0x0
  421510:	b.le	421558 <wcrtomb@plt+0x1c608>
  421514:	ldr	w0, [x22, #824]
  421518:	cmp	w0, #0x4
  42151c:	b.eq	421558 <wcrtomb@plt+0x1c608>  // b.none
  421520:	ldr	w1, [x19, #868]
  421524:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x14380>
  421528:	add	x0, x0, #0xc48
  42152c:	add	x0, x0, #0x1a8
  421530:	ldr	w0, [x0, x1, lsl #2]
  421534:	tbnz	w0, #0, 421558 <wcrtomb@plt+0x1c608>
  421538:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42153c:	ldr	x0, [x0, #1016]
  421540:	cbz	x0, 421548 <wcrtomb@plt+0x1c5f8>
  421544:	blr	x0
  421548:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  42154c:	mov	w2, #0x5                   	// #5
  421550:	add	x1, x1, #0x947
  421554:	b	421020 <wcrtomb@plt+0x1c0d0>
  421558:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42155c:	mov	x2, x0
  421560:	ldrb	w1, [x0, #688]
  421564:	cbz	w1, 4215ac <wcrtomb@plt+0x1c65c>
  421568:	ldr	w0, [x19, #868]
  42156c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x14380>
  421570:	add	x1, x1, #0xc48
  421574:	add	x1, x1, #0x1a8
  421578:	ldr	w1, [x1, w0, uxtw #2]
  42157c:	tbnz	w1, #0, 4215ac <wcrtomb@plt+0x1c65c>
  421580:	ldr	x1, [x20, #40]
  421584:	cbz	x1, 4215a8 <wcrtomb@plt+0x1c658>
  421588:	ldr	w1, [x1]
  42158c:	cmp	w1, #0x1
  421590:	b.ne	4215a8 <wcrtomb@plt+0x1c658>  // b.any
  421594:	bl	41f03c <wcrtomb@plt+0x1a0ec>
  421598:	mov	x1, x0
  42159c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  4215a0:	add	x0, x0, #0x973
  4215a4:	b	4210dc <wcrtomb@plt+0x1c18c>
  4215a8:	strb	wzr, [x2, #688]
  4215ac:	adrp	x22, 472000 <argp_program_version_hook@@Base+0x250>
  4215b0:	ldrb	w0, [x22, #648]
  4215b4:	cbz	w0, 4215fc <wcrtomb@plt+0x1c6ac>
  4215b8:	ldr	w0, [x19, #868]
  4215bc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x14380>
  4215c0:	add	x1, x1, #0xc48
  4215c4:	add	x1, x1, #0x1a8
  4215c8:	ldr	w1, [x1, w0, uxtw #2]
  4215cc:	tbnz	w1, #0, 4215fc <wcrtomb@plt+0x1c6ac>
  4215d0:	ldr	x1, [x20, #48]
  4215d4:	cbz	x1, 4215f8 <wcrtomb@plt+0x1c6a8>
  4215d8:	ldr	w1, [x1]
  4215dc:	cmp	w1, #0x1
  4215e0:	b.ne	4215f8 <wcrtomb@plt+0x1c6a8>  // b.any
  4215e4:	bl	41f03c <wcrtomb@plt+0x1a0ec>
  4215e8:	mov	x1, x0
  4215ec:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  4215f0:	add	x0, x0, #0x983
  4215f4:	b	4210dc <wcrtomb@plt+0x1c18c>
  4215f8:	strb	wzr, [x22, #648]
  4215fc:	adrp	x26, 472000 <argp_program_version_hook@@Base+0x250>
  421600:	ldrb	w0, [x26, #851]
  421604:	cbz	w0, 4216a0 <wcrtomb@plt+0x1c750>
  421608:	adrp	x27, 472000 <argp_program_version_hook@@Base+0x250>
  42160c:	ldrb	w0, [x27, #960]
  421610:	cbz	w0, 421648 <wcrtomb@plt+0x1c6f8>
  421614:	ldp	x28, x1, [x20, #56]
  421618:	mov	x0, x28
  42161c:	bl	41ea00 <wcrtomb@plt+0x19ab0>
  421620:	cbz	w0, 421638 <wcrtomb@plt+0x1c6e8>
  421624:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421628:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  42162c:	add	x1, x1, #0x990
  421630:	add	x0, x0, #0x9a1
  421634:	b	4210dc <wcrtomb@plt+0x1c18c>
  421638:	ldr	w0, [x28]
  42163c:	cmp	w0, #0x1
  421640:	b.ne	42169c <wcrtomb@plt+0x1c74c>  // b.any
  421644:	strb	wzr, [x27, #960]
  421648:	adrp	x27, 472000 <argp_program_version_hook@@Base+0x250>
  42164c:	ldr	x0, [x27, #576]
  421650:	cbnz	x0, 4216a0 <wcrtomb@plt+0x1c750>
  421654:	ldr	x0, [x23, #696]
  421658:	ldr	x0, [x0]
  42165c:	bl	42dccc <argp_usage@@Base+0x7ec>
  421660:	mov	x26, x0
  421664:	bl	41d29c <wcrtomb@plt+0x1834c>
  421668:	mov	x20, x0
  42166c:	str	x0, [x27, #576]
  421670:	mov	x0, x26
  421674:	bl	404ae0 <free@plt>
  421678:	cbnz	x20, 4216a0 <wcrtomb@plt+0x1c750>
  42167c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421680:	ldr	x0, [x0, #1016]
  421684:	cbz	x0, 42168c <wcrtomb@plt+0x1c73c>
  421688:	blr	x0
  42168c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421690:	mov	w2, #0x5                   	// #5
  421694:	add	x1, x1, #0x9b1
  421698:	b	421020 <wcrtomb@plt+0x1c0d0>
  42169c:	strb	wzr, [x26, #851]
  4216a0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4216a4:	ldrb	w0, [x0, #42]
  4216a8:	cbz	w0, 4216b8 <wcrtomb@plt+0x1c768>
  4216ac:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4216b0:	mov	w1, #0x3                   	// #3
  4216b4:	str	w1, [x0, #760]
  4216b8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4216bc:	mov	w1, #0x8900                	// #35072
  4216c0:	movk	w1, #0x8, lsl #16
  4216c4:	ldrb	w2, [x0, #584]
  4216c8:	mov	w0, #0x900                 	// #2304
  4216cc:	movk	w0, #0x8, lsl #16
  4216d0:	cmp	w2, #0x0
  4216d4:	csel	w1, w0, w1, ne  // ne = any
  4216d8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4216dc:	ldr	w0, [x0, #564]
  4216e0:	cmp	w0, #0x2
  4216e4:	cset	w0, eq  // eq = none
  4216e8:	cmp	w2, #0x0
  4216ec:	orr	w0, w1, w0, lsl #18
  4216f0:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4216f4:	str	w0, [x1, #716]
  4216f8:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4216fc:	orr	w0, w0, #0x4000
  421700:	str	w0, [x1, #708]
  421704:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  421708:	mov	w0, #0x100                 	// #256
  42170c:	csel	w0, wzr, w0, ne  // ne = any
  421710:	str	w0, [x1, #568]
  421714:	ldr	w0, [x19, #868]
  421718:	cmp	w0, #0x9
  42171c:	b.ne	421780 <wcrtomb@plt+0x1c830>  // b.any
  421720:	bl	41a4e4 <wcrtomb@plt+0x15594>
  421724:	tst	w0, #0xff
  421728:	b.ne	42173c <wcrtomb@plt+0x1c7ec>  // b.any
  42172c:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  421730:	ldr	w0, [x1, #652]
  421734:	add	w0, w0, #0x1
  421738:	str	w0, [x1, #652]
  42173c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421740:	ldr	d1, [x0, #640]
  421744:	fcmp	d1, #0.0
  421748:	b.eq	42179c <wcrtomb@plt+0x1c84c>  // b.none
  42174c:	ldr	x0, [sp, #112]
  421750:	ldr	d0, [x0, #928]
  421754:	ucvtf	d0, d0
  421758:	fcmpe	d1, d0
  42175c:	b.pl	42179c <wcrtomb@plt+0x1c84c>  // b.nfrst
  421760:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421764:	ldr	x0, [x0, #1016]
  421768:	cbz	x0, 421770 <wcrtomb@plt+0x1c820>
  42176c:	blr	x0
  421770:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421774:	mov	w2, #0x5                   	// #5
  421778:	add	x1, x1, #0xa0b
  42177c:	b	421020 <wcrtomb@plt+0x1c0d0>
  421780:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421784:	ldrb	w0, [x0, #561]
  421788:	cbz	w0, 42173c <wcrtomb@plt+0x1c7ec>
  42178c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421790:	mov	w1, #0x2                   	// #2
  421794:	str	w1, [x0, #652]
  421798:	b	42173c <wcrtomb@plt+0x1c7ec>
  42179c:	ldrb	w0, [x22, #648]
  4217a0:	cbz	w0, 4217ec <wcrtomb@plt+0x1c89c>
  4217a4:	ldr	x0, [x24, #840]
  4217a8:	cbz	x0, 4217ec <wcrtomb@plt+0x1c89c>
  4217ac:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4217b0:	add	x0, x0, #0xbf8
  4217b4:	ldr	x1, [x0, #16]
  4217b8:	ldr	x20, [x0, #48]
  4217bc:	mov	x0, x20
  4217c0:	bl	41ea00 <wcrtomb@plt+0x19ab0>
  4217c4:	cbz	w0, 4217dc <wcrtomb@plt+0x1c88c>
  4217c8:	adrp	x1, 449000 <_obstack_memory_used@@Base+0x11380>
  4217cc:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  4217d0:	add	x1, x1, #0x295
  4217d4:	add	x0, x0, #0xa39
  4217d8:	b	4210dc <wcrtomb@plt+0x1c18c>
  4217dc:	ldr	w0, [x20]
  4217e0:	cmp	w0, #0x1
  4217e4:	b.ne	421818 <wcrtomb@plt+0x1c8c8>  // b.any
  4217e8:	str	xzr, [x24, #840]
  4217ec:	ldr	w0, [x19, #868]
  4217f0:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  4217f4:	sub	w0, w0, #0x1
  4217f8:	cmp	w0, #0x8
  4217fc:	b.hi	421888 <wcrtomb@plt+0x1c938>  // b.pmore
  421800:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x14380>
  421804:	add	x1, x1, #0xc30
  421808:	ldrb	w0, [x1, w0, uxtw]
  42180c:	adr	x1, 421818 <wcrtomb@plt+0x1c8c8>
  421810:	add	x0, x1, w0, sxtb #2
  421814:	br	x0
  421818:	strb	wzr, [x22, #648]
  42181c:	b	4217ec <wcrtomb@plt+0x1c89c>
  421820:	bl	41a4e4 <wcrtomb@plt+0x15594>
  421824:	tst	w0, #0xff
  421828:	b.ne	42184c <wcrtomb@plt+0x1c8fc>  // b.any
  42182c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421830:	ldr	x0, [x0, #1016]
  421834:	cbz	x0, 42183c <wcrtomb@plt+0x1c8ec>
  421838:	blr	x0
  42183c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421840:	mov	w2, #0x5                   	// #5
  421844:	add	x1, x1, #0xa4a
  421848:	b	421020 <wcrtomb@plt+0x1c0d0>
  42184c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  421850:	ldr	w0, [x0, #3224]
  421854:	cbz	w0, 421888 <wcrtomb@plt+0x1c938>
  421858:	ldr	x0, [x21, #856]
  42185c:	cbz	x0, 421888 <wcrtomb@plt+0x1c938>
  421860:	ldr	x0, [x23, #696]
  421864:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  421868:	add	x1, x1, #0x8dc
  42186c:	ldr	x20, [x0]
  421870:	mov	x0, x20
  421874:	bl	404a30 <strcmp@plt>
  421878:	cbz	w0, 421888 <wcrtomb@plt+0x1c938>
  42187c:	ldr	x1, [x25, #912]
  421880:	mov	x0, x20
  421884:	bl	41d264 <wcrtomb@plt+0x18314>
  421888:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  42188c:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  421890:	ldr	x0, [x21, #968]
  421894:	cbz	x0, 421970 <wcrtomb@plt+0x1ca20>
  421898:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  42189c:	add	x1, x1, #0x2d8
  4218a0:	bl	4045c0 <fopen@plt>
  4218a4:	str	x0, [x20, #3936]
  4218a8:	cbnz	x0, 421994 <wcrtomb@plt+0x1ca44>
  4218ac:	ldr	x0, [x21, #968]
  4218b0:	bl	424e6c <wcrtomb@plt+0x1ff1c>
  4218b4:	ldr	x0, [x23, #696]
  4218b8:	adrp	x22, 44e000 <_obstack_memory_used@@Base+0x16380>
  4218bc:	adrp	x24, 44a000 <_obstack_memory_used@@Base+0x12380>
  4218c0:	add	x20, x19, #0x2e8
  4218c4:	add	x22, x22, #0x8dc
  4218c8:	add	x24, x24, #0xa77
  4218cc:	str	x0, [x19, #744]
  4218d0:	ldr	x0, [x21, #856]
  4218d4:	ldr	x1, [x23, #696]
  4218d8:	ldr	x2, [x20]
  4218dc:	add	x0, x1, x0, lsl #3
  4218e0:	cmp	x2, x0
  4218e4:	b.cs	421888 <wcrtomb@plt+0x1c938>  // b.hs, b.nlast
  4218e8:	ldr	x0, [x2]
  4218ec:	mov	x1, x22
  4218f0:	bl	404a30 <strcmp@plt>
  4218f4:	cbnz	w0, 421900 <wcrtomb@plt+0x1c9b0>
  4218f8:	mov	x0, x24
  4218fc:	bl	41f14c <wcrtomb@plt+0x1a1fc>
  421900:	ldr	x0, [x20]
  421904:	add	x0, x0, #0x8
  421908:	str	x0, [x20]
  42190c:	b	4218d0 <wcrtomb@plt+0x1c980>
  421910:	ldr	x0, [x23, #696]
  421914:	adrp	x22, 44e000 <_obstack_memory_used@@Base+0x16380>
  421918:	ldr	x21, [x21, #856]
  42191c:	add	x22, x22, #0x8dc
  421920:	str	x0, [x19, #744]
  421924:	add	x21, x0, x21, lsl #3
  421928:	ldr	x20, [x19, #744]
  42192c:	cmp	x21, x20
  421930:	b.ls	421888 <wcrtomb@plt+0x1c938>  // b.plast
  421934:	ldr	x0, [x20]
  421938:	mov	x1, x22
  42193c:	bl	404a30 <strcmp@plt>
  421940:	cbnz	w0, 421964 <wcrtomb@plt+0x1ca14>
  421944:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421948:	ldr	x0, [x0, #1016]
  42194c:	cbz	x0, 421954 <wcrtomb@plt+0x1ca04>
  421950:	blr	x0
  421954:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  421958:	mov	w2, #0x5                   	// #5
  42195c:	add	x1, x1, #0xa7a
  421960:	b	421020 <wcrtomb@plt+0x1c0d0>
  421964:	add	x20, x20, #0x8
  421968:	str	x20, [x19, #744]
  42196c:	b	421928 <wcrtomb@plt+0x1c9d8>
  421970:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421974:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  421978:	ldrb	w2, [x0, #633]
  42197c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  421980:	ldr	x1, [x1, #1168]
  421984:	cmp	w2, #0x0
  421988:	ldr	x0, [x0, #1160]
  42198c:	csel	x0, x0, x1, ne  // ne = any
  421990:	str	x0, [x20, #3936]
  421994:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  421998:	add	x20, x20, #0xbf8
  42199c:	ldr	x0, [x23, #696]
  4219a0:	str	x0, [x19, #744]
  4219a4:	ldr	x0, [x20, #144]
  4219a8:	cbz	x0, 4219b8 <wcrtomb@plt+0x1ca68>
  4219ac:	bl	436f10 <argp_usage@@Base+0x9a30>
  4219b0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  4219b4:	str	x0, [x1, #3528]
  4219b8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4219bc:	mov	x19, x0
  4219c0:	ldrb	w1, [x0, #765]
  4219c4:	cbz	w1, 421a00 <wcrtomb@plt+0x1cab0>
  4219c8:	ldr	x1, [x20, #152]
  4219cc:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  4219d0:	add	x0, x0, #0xaa6
  4219d4:	bl	42db90 <argp_usage@@Base+0x6b0>
  4219d8:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4219dc:	str	w0, [x1, #736]
  4219e0:	cbz	w0, 4219fc <wcrtomb@plt+0x1caac>
  4219e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4219e8:	ldrb	w0, [x0, #633]
  4219ec:	cbnz	w0, 4219fc <wcrtomb@plt+0x1caac>
  4219f0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4219f4:	ldr	x0, [x0, #624]
  4219f8:	cbz	x0, 421a00 <wcrtomb@plt+0x1cab0>
  4219fc:	strb	wzr, [x19, #765]
  421a00:	bl	408c50 <wcrtomb@plt+0x3d00>
  421a04:	adrp	x21, 472000 <argp_program_version_hook@@Base+0x250>
  421a08:	ldr	x20, [x20, #128]
  421a0c:	adrp	x22, 44a000 <_obstack_memory_used@@Base+0x12380>
  421a10:	add	x21, x21, #0x28c
  421a14:	add	x22, x22, #0xaaf
  421a18:	cbnz	x20, 421a38 <wcrtomb@plt+0x1cae8>
  421a1c:	ldp	x19, x20, [sp, #16]
  421a20:	ldp	x21, x22, [sp, #32]
  421a24:	ldp	x23, x24, [sp, #48]
  421a28:	ldp	x25, x26, [sp, #64]
  421a2c:	ldp	x27, x28, [sp, #80]
  421a30:	ldp	x29, x30, [sp], #432
  421a34:	ret
  421a38:	ldr	w0, [x21]
  421a3c:	ldr	x23, [x20]
  421a40:	cbz	w0, 421a9c <wcrtomb@plt+0x1cb4c>
  421a44:	ldp	x0, x1, [x20, #8]
  421a48:	mov	w2, #0x1                   	// #1
  421a4c:	bl	416698 <wcrtomb@plt+0x11748>
  421a50:	mov	x19, x0
  421a54:	mov	x1, x0
  421a58:	ldr	x0, [x20, #32]
  421a5c:	bl	404a30 <strcmp@plt>
  421a60:	cbz	w0, 421a9c <wcrtomb@plt+0x1cb4c>
  421a64:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421a68:	ldr	x0, [x0, #1016]
  421a6c:	cbz	x0, 421a74 <wcrtomb@plt+0x1cb24>
  421a70:	blr	x0
  421a74:	mov	x1, x22
  421a78:	mov	w2, #0x5                   	// #5
  421a7c:	mov	x0, #0x0                   	// #0
  421a80:	bl	404d00 <dcgettext@plt>
  421a84:	ldp	x3, x4, [x20, #24]
  421a88:	mov	x2, x0
  421a8c:	mov	x5, x19
  421a90:	mov	w1, #0x0                   	// #0
  421a94:	mov	w0, #0x0                   	// #0
  421a98:	bl	4042e0 <error@plt>
  421a9c:	ldr	x0, [x20, #32]
  421aa0:	bl	404ae0 <free@plt>
  421aa4:	mov	x0, x20
  421aa8:	mov	x20, x23
  421aac:	bl	404ae0 <free@plt>
  421ab0:	b	421a18 <wcrtomb@plt+0x1cac8>
  421ab4:	ldr	x0, [x0, #16]
  421ab8:	cbz	x0, 420e88 <wcrtomb@plt+0x1bf38>
  421abc:	cmp	x21, x26
  421ac0:	b.ls	420eb0 <wcrtomb@plt+0x1bf60>  // b.plast
  421ac4:	mov	x2, x26
  421ac8:	add	x23, x28, #0x10
  421acc:	ldr	x0, [x2], #8
  421ad0:	str	x0, [x28, #8]
  421ad4:	mov	x26, x2
  421ad8:	b	420e88 <wcrtomb@plt+0x1bf38>
  421adc:	mov	x2, #0x1a8                 	// #424
  421ae0:	mov	w1, #0x0                   	// #0
  421ae4:	b	404700 <memset@plt>
  421ae8:	stp	x29, x30, [sp, #-32]!
  421aec:	mov	x29, sp
  421af0:	str	x19, [sp, #16]
  421af4:	mov	x19, x0
  421af8:	ldr	x0, [x0, #400]
  421afc:	cbz	x0, 421b28 <wcrtomb@plt+0x1cbd8>
  421b00:	bl	404880 <closedir@plt>
  421b04:	str	xzr, [x19, #400]
  421b08:	str	wzr, [x19, #408]
  421b0c:	cbz	w0, 421b44 <wcrtomb@plt+0x1cbf4>
  421b10:	ldr	x0, [x19]
  421b14:	bl	418a78 <wcrtomb@plt+0x13b28>
  421b18:	mov	w0, #0x0                   	// #0
  421b1c:	ldr	x19, [sp, #16]
  421b20:	ldp	x29, x30, [sp], #32
  421b24:	ret
  421b28:	ldr	w0, [x19, #408]
  421b2c:	cmp	w0, #0x0
  421b30:	b.le	421b3c <wcrtomb@plt+0x1cbec>
  421b34:	bl	4048c0 <close@plt>
  421b38:	b	421b04 <wcrtomb@plt+0x1cbb4>
  421b3c:	mov	w0, #0x0                   	// #0
  421b40:	b	421b04 <wcrtomb@plt+0x1cbb4>
  421b44:	mov	w0, #0x1                   	// #1
  421b48:	b	421b1c <wcrtomb@plt+0x1cbcc>
  421b4c:	stp	x29, x30, [sp, #-32]!
  421b50:	mov	x29, sp
  421b54:	str	x19, [sp, #16]
  421b58:	mov	x19, x0
  421b5c:	bl	421ae8 <wcrtomb@plt+0x1cb98>
  421b60:	ldp	x1, x0, [x19, #328]
  421b64:	bl	411f54 <wcrtomb@plt+0xd004>
  421b68:	ldr	x0, [x19]
  421b6c:	bl	404ae0 <free@plt>
  421b70:	ldr	x0, [x19, #8]
  421b74:	bl	404ae0 <free@plt>
  421b78:	ldr	x0, [x19, #24]
  421b7c:	bl	404ae0 <free@plt>
  421b80:	ldr	x0, [x19, #32]
  421b84:	bl	404ae0 <free@plt>
  421b88:	ldr	x0, [x19, #40]
  421b8c:	bl	404ae0 <free@plt>
  421b90:	ldr	x0, [x19, #48]
  421b94:	bl	404ae0 <free@plt>
  421b98:	ldr	x0, [x19, #56]
  421b9c:	bl	404ae0 <free@plt>
  421ba0:	ldr	x0, [x19, #72]
  421ba4:	bl	404ae0 <free@plt>
  421ba8:	ldr	x0, [x19, #304]
  421bac:	bl	404ae0 <free@plt>
  421bb0:	ldr	x0, [x19, #384]
  421bb4:	bl	404ae0 <free@plt>
  421bb8:	add	x0, x19, #0x158
  421bbc:	bl	4124e4 <wcrtomb@plt+0xd594>
  421bc0:	mov	x0, x19
  421bc4:	bl	40da78 <wcrtomb@plt+0x8b28>
  421bc8:	mov	x0, x19
  421bcc:	mov	x2, #0x1a8                 	// #424
  421bd0:	ldr	x19, [sp, #16]
  421bd4:	mov	w1, #0x0                   	// #0
  421bd8:	ldp	x29, x30, [sp], #32
  421bdc:	b	404700 <memset@plt>
  421be0:	adrp	x4, 471000 <_obstack_memory_used@@Base+0x39380>
  421be4:	ldr	w5, [x4, #4056]
  421be8:	mov	w4, #0x10                  	// #16
  421bec:	asr	w4, w4, w5
  421bf0:	ands	w4, w4, #0x1
  421bf4:	csel	x3, x3, xzr, ne  // ne = any
  421bf8:	cmp	w4, #0x0
  421bfc:	csel	x1, x1, xzr, ne  // ne = any
  421c00:	b	43683c <argp_usage@@Base+0x935c>
  421c04:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  421c08:	ldr	w2, [x1, #3464]
  421c0c:	cmp	w2, w0
  421c10:	b.ge	421c18 <wcrtomb@plt+0x1ccc8>  // b.tcont
  421c14:	str	w0, [x1, #3464]
  421c18:	ret
  421c1c:	cmp	w1, #0x68
  421c20:	b.eq	421c84 <wcrtomb@plt+0x1cd34>  // b.none
  421c24:	b.gt	421c48 <wcrtomb@plt+0x1ccf8>
  421c28:	cmp	w1, #0x52
  421c2c:	b.eq	421c78 <wcrtomb@plt+0x1cd28>  // b.none
  421c30:	cmp	w1, #0x53
  421c34:	b.eq	421c9c <wcrtomb@plt+0x1cd4c>  // b.none
  421c38:	cmp	w1, #0x48
  421c3c:	b.eq	421c90 <wcrtomb@plt+0x1cd40>  // b.none
  421c40:	mov	w0, #0x1                   	// #1
  421c44:	ret
  421c48:	cmp	w1, #0x72
  421c4c:	b.eq	421c64 <wcrtomb@plt+0x1cd14>  // b.none
  421c50:	cmp	w1, #0x73
  421c54:	b.ne	421c40 <wcrtomb@plt+0x1ccf0>  // b.any
  421c58:	ldr	w1, [x0]
  421c5c:	orr	w1, w1, #0x4
  421c60:	b	421c6c <wcrtomb@plt+0x1cd1c>
  421c64:	ldr	w1, [x0]
  421c68:	orr	w1, w1, #0x1
  421c6c:	str	w1, [x0]
  421c70:	mov	w0, #0x0                   	// #0
  421c74:	b	421c44 <wcrtomb@plt+0x1ccf4>
  421c78:	ldr	w1, [x0]
  421c7c:	and	w1, w1, #0xfffffffe
  421c80:	b	421c6c <wcrtomb@plt+0x1cd1c>
  421c84:	ldr	w1, [x0]
  421c88:	orr	w1, w1, #0x2
  421c8c:	b	421c6c <wcrtomb@plt+0x1cd1c>
  421c90:	ldr	w1, [x0]
  421c94:	and	w1, w1, #0xfffffffd
  421c98:	b	421c6c <wcrtomb@plt+0x1cd1c>
  421c9c:	ldr	w1, [x0]
  421ca0:	and	w1, w1, #0xfffffffb
  421ca4:	b	421c6c <wcrtomb@plt+0x1cd1c>
  421ca8:	stp	x29, x30, [sp, #-32]!
  421cac:	mov	x29, sp
  421cb0:	str	x19, [sp, #16]
  421cb4:	mov	x19, x0
  421cb8:	mov	x0, #0x20                  	// #32
  421cbc:	bl	436d44 <argp_usage@@Base+0x9864>
  421cc0:	str	xzr, [x0]
  421cc4:	ldr	x1, [x19, #96]
  421cc8:	cbz	x1, 421ce8 <wcrtomb@plt+0x1cd98>
  421ccc:	str	x0, [x1]
  421cd0:	ldr	x1, [x19, #104]
  421cd4:	add	x1, x1, #0x1
  421cd8:	stp	x0, x1, [x19, #96]
  421cdc:	ldr	x19, [sp, #16]
  421ce0:	ldp	x29, x30, [sp], #32
  421ce4:	ret
  421ce8:	str	x0, [x19, #88]
  421cec:	b	421cd0 <wcrtomb@plt+0x1cd80>
  421cf0:	stp	x29, x30, [sp, #-32]!
  421cf4:	mov	x29, sp
  421cf8:	str	x19, [sp, #16]
  421cfc:	mov	w19, w1
  421d00:	bl	421ca8 <wcrtomb@plt+0x1cd58>
  421d04:	str	w19, [x0, #16]
  421d08:	mov	w1, #0x2                   	// #2
  421d0c:	str	w1, [x0, #8]
  421d10:	ldr	x19, [sp, #16]
  421d14:	ldp	x29, x30, [sp], #32
  421d18:	ret
  421d1c:	stp	x29, x30, [sp, #-32]!
  421d20:	mov	x29, sp
  421d24:	stp	x19, x20, [sp, #16]
  421d28:	mov	w20, w1
  421d2c:	bl	421ca8 <wcrtomb@plt+0x1cd58>
  421d30:	mov	x19, x0
  421d34:	mov	x0, #0x2                   	// #2
  421d38:	str	wzr, [x19, #8]
  421d3c:	bl	436d44 <argp_usage@@Base+0x9864>
  421d40:	str	x0, [x19, #16]
  421d44:	strb	w20, [x0]
  421d48:	ldr	x0, [x19, #16]
  421d4c:	strb	wzr, [x0, #1]
  421d50:	mov	x0, #0x1                   	// #1
  421d54:	str	x0, [x19, #24]
  421d58:	ldp	x19, x20, [sp, #16]
  421d5c:	ldp	x29, x30, [sp], #32
  421d60:	ret
  421d64:	stp	x29, x30, [sp, #-48]!
  421d68:	mov	x29, sp
  421d6c:	stp	x19, x20, [sp, #16]
  421d70:	subs	x19, x2, x1
  421d74:	str	x21, [sp, #32]
  421d78:	b.eq	421db0 <wcrtomb@plt+0x1ce60>  // b.none
  421d7c:	mov	x21, x1
  421d80:	bl	421ca8 <wcrtomb@plt+0x1cd58>
  421d84:	mov	x20, x0
  421d88:	add	x0, x19, #0x1
  421d8c:	str	wzr, [x20, #8]
  421d90:	bl	436d44 <argp_usage@@Base+0x9864>
  421d94:	str	x0, [x20, #16]
  421d98:	mov	x2, x19
  421d9c:	mov	x1, x21
  421da0:	bl	404200 <memcpy@plt>
  421da4:	ldr	x0, [x20, #16]
  421da8:	strb	wzr, [x0, x19]
  421dac:	str	x19, [x20, #24]
  421db0:	ldp	x19, x20, [sp, #16]
  421db4:	ldr	x21, [sp, #32]
  421db8:	ldp	x29, x30, [sp], #48
  421dbc:	ret
  421dc0:	stp	x29, x30, [sp, #-48]!
  421dc4:	mov	x29, sp
  421dc8:	stp	x21, x22, [sp, #32]
  421dcc:	mov	w21, w0
  421dd0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  421dd4:	mov	x22, x1
  421dd8:	stp	x19, x20, [sp, #16]
  421ddc:	mov	x19, x2
  421de0:	ldr	x1, [x0, #3232]
  421de4:	add	x20, x0, #0xca0
  421de8:	cmp	x1, x2
  421dec:	b.cs	421e04 <wcrtomb@plt+0x1ceb4>  // b.hs, b.nlast
  421df0:	str	x2, [x0, #3232]
  421df4:	mov	x1, x2
  421df8:	ldr	x0, [x20, #8]
  421dfc:	bl	436da4 <argp_usage@@Base+0x98c4>
  421e00:	str	x0, [x20, #8]
  421e04:	ldr	x20, [x20, #8]
  421e08:	mov	x2, x19
  421e0c:	mov	x1, x22
  421e10:	mov	x0, x20
  421e14:	bl	404200 <memcpy@plt>
  421e18:	sub	w0, w21, #0x1
  421e1c:	cmp	w0, #0x3
  421e20:	b.hi	421e50 <wcrtomb@plt+0x1cf00>  // b.pmore
  421e24:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  421e28:	add	x1, x1, #0xd8
  421e2c:	ldrb	w0, [x1, w0, uxtw]
  421e30:	adr	x1, 421e3c <wcrtomb@plt+0x1ceec>
  421e34:	add	x0, x1, w0, sxtb #2
  421e38:	br	x0
  421e3c:	bl	404830 <__ctype_toupper_loc@plt>
  421e40:	ldrb	w1, [x20]
  421e44:	ldr	x0, [x0]
  421e48:	ldr	w0, [x0, x1, lsl #2]
  421e4c:	strb	w0, [x20]
  421e50:	mov	x0, x20
  421e54:	ldp	x19, x20, [sp, #16]
  421e58:	ldp	x21, x22, [sp, #32]
  421e5c:	ldp	x29, x30, [sp], #48
  421e60:	ret
  421e64:	bl	4044a0 <__ctype_tolower_loc@plt>
  421e68:	b	421e40 <wcrtomb@plt+0x1cef0>
  421e6c:	bl	404830 <__ctype_toupper_loc@plt>
  421e70:	ldrb	w1, [x21]
  421e74:	ldr	x0, [x0]
  421e78:	ldr	w0, [x0, x1, lsl #2]
  421e7c:	strb	w0, [x21], #1
  421e80:	cmp	x21, x19
  421e84:	b.cc	421e6c <wcrtomb@plt+0x1cf1c>  // b.lo, b.ul, b.last
  421e88:	b	421e50 <wcrtomb@plt+0x1cf00>
  421e8c:	mov	x21, x20
  421e90:	add	x19, x20, x19
  421e94:	b	421e80 <wcrtomb@plt+0x1cf30>
  421e98:	bl	4044a0 <__ctype_tolower_loc@plt>
  421e9c:	ldrb	w1, [x21]
  421ea0:	ldr	x0, [x0]
  421ea4:	ldr	w0, [x0, x1, lsl #2]
  421ea8:	strb	w0, [x21], #1
  421eac:	cmp	x21, x19
  421eb0:	b.cc	421e98 <wcrtomb@plt+0x1cf48>  // b.lo, b.ul, b.last
  421eb4:	b	421e50 <wcrtomb@plt+0x1cf00>
  421eb8:	mov	x21, x20
  421ebc:	add	x19, x20, x19
  421ec0:	b	421eac <wcrtomb@plt+0x1cf5c>
  421ec4:	sub	sp, sp, #0x270
  421ec8:	stp	x29, x30, [sp]
  421ecc:	mov	x29, sp
  421ed0:	stp	x19, x20, [sp, #16]
  421ed4:	mov	x20, x0
  421ed8:	mov	x0, #0x70                  	// #112
  421edc:	stp	x21, x22, [sp, #32]
  421ee0:	stp	x23, x24, [sp, #48]
  421ee4:	stp	x25, x26, [sp, #64]
  421ee8:	stp	x27, x28, [sp, #80]
  421eec:	bl	436e84 <argp_usage@@Base+0x99a4>
  421ef0:	mov	x19, x0
  421ef4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  421ef8:	add	x0, x0, #0xca0
  421efc:	ldr	x1, [x0, #16]
  421f00:	cbz	x1, 421f7c <wcrtomb@plt+0x1d02c>
  421f04:	str	x19, [x1]
  421f08:	str	x19, [x0, #16]
  421f0c:	ldrb	w0, [x20]
  421f10:	cmp	w0, #0x73
  421f14:	b.eq	421fd4 <wcrtomb@plt+0x1d084>  // b.none
  421f18:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  421f1c:	mov	x0, x20
  421f20:	add	x1, x1, #0xf7
  421f24:	mov	x2, #0x6                   	// #6
  421f28:	bl	4046a0 <strncmp@plt>
  421f2c:	cbnz	w0, 422108 <wcrtomb@plt+0x1d1b8>
  421f30:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  421f34:	add	x20, x20, #0x6
  421f38:	add	x2, x0, #0x1c8
  421f3c:	str	wzr, [x0, #456]
  421f40:	ldrb	w1, [x20]
  421f44:	cbz	w1, 421f58 <wcrtomb@plt+0x1d008>
  421f48:	cmp	w1, #0x3b
  421f4c:	add	x3, x20, #0x1
  421f50:	b.ne	421f84 <wcrtomb@plt+0x1d034>  // b.any
  421f54:	mov	x20, x3
  421f58:	mov	x0, x20
  421f5c:	ldp	x29, x30, [sp]
  421f60:	ldp	x19, x20, [sp, #16]
  421f64:	ldp	x21, x22, [sp, #32]
  421f68:	ldp	x23, x24, [sp, #48]
  421f6c:	ldp	x25, x26, [sp, #64]
  421f70:	ldp	x27, x28, [sp, #80]
  421f74:	add	sp, sp, #0x270
  421f78:	ret
  421f7c:	str	x19, [x0, #24]
  421f80:	b	421f08 <wcrtomb@plt+0x1cfb8>
  421f84:	mov	x0, x2
  421f88:	bl	421c1c <wcrtomb@plt+0x1cccc>
  421f8c:	cbz	w0, 421fcc <wcrtomb@plt+0x1d07c>
  421f90:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  421f94:	ldr	x0, [x0, #1016]
  421f98:	cbz	x0, 421fa0 <wcrtomb@plt+0x1d050>
  421f9c:	blr	x0
  421fa0:	mov	w2, #0x5                   	// #5
  421fa4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  421fa8:	mov	x0, #0x0                   	// #0
  421fac:	add	x1, x1, #0xfe
  421fb0:	bl	404d00 <dcgettext@plt>
  421fb4:	ldrb	w3, [x20]
  421fb8:	mov	x2, x0
  421fbc:	mov	w1, #0x0                   	// #0
  421fc0:	mov	w0, #0x0                   	// #0
  421fc4:	bl	4042e0 <error@plt>
  421fc8:	b	42213c <wcrtomb@plt+0x1d1ec>
  421fcc:	mov	x20, x3
  421fd0:	b	421f40 <wcrtomb@plt+0x1cff0>
  421fd4:	ldrb	w23, [x20, #1]
  421fd8:	mov	w22, #0x2                   	// #2
  421fdc:	ldrb	w0, [x20, w22, sxtw]
  421fe0:	sxtw	x25, w22
  421fe4:	add	w24, w22, #0x1
  421fe8:	cbz	w0, 422104 <wcrtomb@plt+0x1d1b4>
  421fec:	cmp	w23, w0
  421ff0:	b.ne	4220e4 <wcrtomb@plt+0x1d194>  // b.any
  421ff4:	mov	w21, w24
  421ff8:	ldrb	w1, [x20, w21, sxtw]
  421ffc:	sxtw	x0, w21
  422000:	cbz	w1, 422164 <wcrtomb@plt+0x1d214>
  422004:	cmp	w23, w1
  422008:	b.ne	422144 <wcrtomb@plt+0x1d1f4>  // b.any
  42200c:	mov	x28, x19
  422010:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  422014:	add	x0, x0, #0x1
  422018:	str	wzr, [x19, #8]
  42201c:	ldr	w1, [x1, #456]
  422020:	add	x0, x20, x0
  422024:	mov	w27, #0x0                   	// #0
  422028:	mov	w26, #0x1                   	// #1
  42202c:	str	w1, [x28, #12]!
  422030:	str	x0, [sp, #104]
  422034:	ldr	x0, [sp, #104]
  422038:	ldrb	w1, [x0]
  42203c:	cmp	w1, #0x3b
  422040:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  422044:	b.ne	42216c <wcrtomb@plt+0x1d21c>  // b.any
  422048:	cmp	w1, #0x3b
  42204c:	b.ne	422058 <wcrtomb@plt+0x1d108>  // b.any
  422050:	add	x0, x0, #0x1
  422054:	str	x0, [sp, #104]
  422058:	sub	w0, w22, #0x1
  42205c:	add	x28, x19, #0x18
  422060:	sxtw	x0, w0
  422064:	bl	436d44 <argp_usage@@Base+0x9864>
  422068:	mov	x26, x0
  42206c:	sub	w2, w22, #0x2
  422070:	add	x25, x26, x25
  422074:	add	x1, x20, #0x2
  422078:	sxtw	x2, w2
  42207c:	bl	404200 <memcpy@plt>
  422080:	mov	w2, w27
  422084:	mov	x1, x26
  422088:	sturb	wzr, [x25, #-2]
  42208c:	mov	x0, x28
  422090:	bl	4423bc <_obstack_memory_used@@Base+0xa73c>
  422094:	cbz	w0, 422218 <wcrtomb@plt+0x1d2c8>
  422098:	add	x2, sp, #0x70
  42209c:	mov	x1, x28
  4220a0:	mov	x3, #0x200                 	// #512
  4220a4:	bl	4424bc <_obstack_memory_used@@Base+0xa83c>
  4220a8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4220ac:	ldr	x0, [x0, #1016]
  4220b0:	cbz	x0, 4220b8 <wcrtomb@plt+0x1d168>
  4220b4:	blr	x0
  4220b8:	mov	w2, #0x5                   	// #5
  4220bc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  4220c0:	mov	x0, #0x0                   	// #0
  4220c4:	add	x1, x1, #0x15f
  4220c8:	bl	404d00 <dcgettext@plt>
  4220cc:	mov	x2, x0
  4220d0:	add	x3, sp, #0x70
  4220d4:	mov	w1, #0x0                   	// #0
  4220d8:	mov	w0, #0x0                   	// #0
  4220dc:	bl	4042e0 <error@plt>
  4220e0:	b	42213c <wcrtomb@plt+0x1d1ec>
  4220e4:	cmp	w0, #0x5c
  4220e8:	b.ne	4220fc <wcrtomb@plt+0x1d1ac>  // b.any
  4220ec:	add	x25, x20, x25
  4220f0:	ldrb	w0, [x25, #1]
  4220f4:	cmp	w0, #0x0
  4220f8:	csel	w22, w22, w24, eq  // eq = none
  4220fc:	add	w22, w22, #0x1
  422100:	b	421fdc <wcrtomb@plt+0x1d08c>
  422104:	cbz	w23, 421ff4 <wcrtomb@plt+0x1d0a4>
  422108:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42210c:	ldr	x0, [x0, #1016]
  422110:	cbz	x0, 422118 <wcrtomb@plt+0x1d1c8>
  422114:	blr	x0
  422118:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42211c:	add	x1, x1, #0x119
  422120:	mov	w2, #0x5                   	// #5
  422124:	mov	x0, #0x0                   	// #0
  422128:	bl	404d00 <dcgettext@plt>
  42212c:	mov	w1, #0x0                   	// #0
  422130:	mov	x2, x0
  422134:	mov	w0, #0x0                   	// #0
  422138:	bl	4042e0 <error@plt>
  42213c:	mov	w0, #0x2                   	// #2
  422140:	bl	41f110 <wcrtomb@plt+0x1a1c0>
  422144:	cmp	w1, #0x5c
  422148:	b.ne	42215c <wcrtomb@plt+0x1d20c>  // b.any
  42214c:	add	x0, x20, x0
  422150:	ldrb	w0, [x0, #1]
  422154:	cmp	w0, #0x0
  422158:	cinc	w21, w21, ne  // ne = any
  42215c:	add	w21, w21, #0x1
  422160:	b	421ff8 <wcrtomb@plt+0x1d0a8>
  422164:	cbz	w23, 42200c <wcrtomb@plt+0x1d0bc>
  422168:	b	422108 <wcrtomb@plt+0x1d1b8>
  42216c:	cmp	w1, #0x69
  422170:	b.eq	422210 <wcrtomb@plt+0x1d2c0>  // b.none
  422174:	b.hi	4221ec <wcrtomb@plt+0x1d29c>  // b.pmore
  422178:	cmp	w1, #0x39
  42217c:	b.hi	4221a8 <wcrtomb@plt+0x1d258>  // b.pmore
  422180:	cmp	w1, #0x2f
  422184:	b.ls	4221b0 <wcrtomb@plt+0x1d260>  // b.plast
  422188:	add	x1, sp, #0x68
  42218c:	mov	w2, #0x0                   	// #0
  422190:	bl	404270 <strtoul@plt>
  422194:	str	w0, [x19, #16]
  422198:	ldr	x0, [sp, #104]
  42219c:	sub	x0, x0, #0x1
  4221a0:	str	x0, [sp, #104]
  4221a4:	b	422200 <wcrtomb@plt+0x1d2b0>
  4221a8:	cmp	w1, #0x67
  4221ac:	b.eq	4221fc <wcrtomb@plt+0x1d2ac>  // b.none
  4221b0:	mov	x0, x28
  4221b4:	bl	421c1c <wcrtomb@plt+0x1cccc>
  4221b8:	cbz	w0, 422200 <wcrtomb@plt+0x1d2b0>
  4221bc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4221c0:	ldr	x0, [x0, #1016]
  4221c4:	cbz	x0, 4221cc <wcrtomb@plt+0x1d27c>
  4221c8:	blr	x0
  4221cc:	mov	w2, #0x5                   	// #5
  4221d0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  4221d4:	mov	x0, #0x0                   	// #0
  4221d8:	add	x1, x1, #0x136
  4221dc:	bl	404d00 <dcgettext@plt>
  4221e0:	ldr	x1, [sp, #104]
  4221e4:	ldrb	w3, [x1]
  4221e8:	b	421fb8 <wcrtomb@plt+0x1d068>
  4221ec:	cmp	w1, #0x78
  4221f0:	b.ne	4221b0 <wcrtomb@plt+0x1d260>  // b.any
  4221f4:	orr	w27, w27, #0x1
  4221f8:	b	422200 <wcrtomb@plt+0x1d2b0>
  4221fc:	str	w26, [x19, #8]
  422200:	ldr	x0, [sp, #104]
  422204:	add	x0, x0, #0x1
  422208:	str	x0, [sp, #104]
  42220c:	b	422034 <wcrtomb@plt+0x1d0e4>
  422210:	orr	w27, w27, #0x2
  422214:	b	422200 <wcrtomb@plt+0x1d2b0>
  422218:	ldrb	w0, [x26]
  42221c:	cmp	w0, #0x5e
  422220:	b.eq	422238 <wcrtomb@plt+0x1d2e8>  // b.none
  422224:	cmp	w22, #0x2
  422228:	b.eq	42223c <wcrtomb@plt+0x1d2ec>  // b.none
  42222c:	ldurb	w0, [x25, #-3]
  422230:	cmp	w0, #0x24
  422234:	b.ne	42223c <wcrtomb@plt+0x1d2ec>  // b.any
  422238:	str	wzr, [x19, #8]
  42223c:	mov	x0, x26
  422240:	sub	w21, w21, w24
  422244:	bl	404ae0 <free@plt>
  422248:	add	w0, w21, #0x1
  42224c:	sxtw	x21, w21
  422250:	sxtw	x0, w0
  422254:	bl	436d44 <argp_usage@@Base+0x9864>
  422258:	mov	x22, x0
  42225c:	add	x1, x20, w24, sxtw
  422260:	mov	x2, x21
  422264:	bl	404200 <memcpy@plt>
  422268:	adrp	x20, 44d000 <_obstack_memory_used@@Base+0x15380>
  42226c:	mov	x1, x22
  422270:	add	x20, x20, #0xdc
  422274:	strb	wzr, [x22, x21]
  422278:	add	x21, sp, #0x62
  42227c:	str	x22, [sp, #112]
  422280:	ldr	x2, [sp, #112]
  422284:	ldrb	w0, [x2]
  422288:	cbnz	w0, 4222a4 <wcrtomb@plt+0x1d354>
  42228c:	mov	x0, x19
  422290:	bl	421d64 <wcrtomb@plt+0x1ce14>
  422294:	mov	x0, x22
  422298:	bl	404ae0 <free@plt>
  42229c:	ldr	x20, [sp, #104]
  4222a0:	b	421f58 <wcrtomb@plt+0x1d008>
  4222a4:	cmp	w0, #0x5c
  4222a8:	b.ne	422430 <wcrtomb@plt+0x1d4e0>  // b.any
  4222ac:	mov	x0, x19
  4222b0:	bl	421d64 <wcrtomb@plt+0x1ce14>
  4222b4:	ldr	x1, [sp, #112]
  4222b8:	add	x0, x1, #0x1
  4222bc:	str	x0, [sp, #112]
  4222c0:	ldrb	w1, [x1, #1]
  4222c4:	cmp	w1, #0x76
  4222c8:	b.hi	422360 <wcrtomb@plt+0x1d410>  // b.pmore
  4222cc:	cmp	w1, #0x5b
  4222d0:	b.hi	422334 <wcrtomb@plt+0x1d3e4>  // b.pmore
  4222d4:	cmp	w1, #0x45
  4222d8:	b.eq	422408 <wcrtomb@plt+0x1d4b8>  // b.none
  4222dc:	b.hi	422350 <wcrtomb@plt+0x1d400>  // b.pmore
  4222e0:	cmp	w1, #0x26
  4222e4:	b.eq	422390 <wcrtomb@plt+0x1d440>  // b.none
  4222e8:	sub	w2, w1, #0x30
  4222ec:	and	w2, w2, #0xff
  4222f0:	cmp	w2, #0x9
  4222f4:	b.hi	422360 <wcrtomb@plt+0x1d410>  // b.pmore
  4222f8:	add	x1, sp, #0x70
  4222fc:	mov	w2, #0xa                   	// #10
  422300:	bl	404270 <strtoul@plt>
  422304:	mov	x24, x0
  422308:	ldr	x0, [x19, #72]
  42230c:	cmp	x0, x24
  422310:	b.cs	422370 <wcrtomb@plt+0x1d420>  // b.hs, b.nlast
  422314:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  422318:	ldr	x0, [x0, #1016]
  42231c:	cbz	x0, 422324 <wcrtomb@plt+0x1d3d4>
  422320:	blr	x0
  422324:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  422328:	mov	w2, #0x5                   	// #5
  42232c:	add	x1, x1, #0x180
  422330:	b	422124 <wcrtomb@plt+0x1d1d4>
  422334:	sub	w0, w1, #0x5c
  422338:	cmp	w0, #0x1a
  42233c:	b.hi	422360 <wcrtomb@plt+0x1d410>  // b.pmore
  422340:	ldrb	w0, [x20, w0, uxtw]
  422344:	adr	x2, 422350 <wcrtomb@plt+0x1d400>
  422348:	add	x0, x2, w0, sxtb #2
  42234c:	br	x0
  422350:	cmp	w1, #0x4c
  422354:	b.eq	4223d4 <wcrtomb@plt+0x1d484>  // b.none
  422358:	cmp	w1, #0x55
  42235c:	b.eq	4223f8 <wcrtomb@plt+0x1d4a8>  // b.none
  422360:	cmp	w23, w1
  422364:	b.ne	422410 <wcrtomb@plt+0x1d4c0>  // b.any
  422368:	mov	w1, w23
  42236c:	b	422390 <wcrtomb@plt+0x1d440>
  422370:	mov	x0, x19
  422374:	bl	421ca8 <wcrtomb@plt+0x1cd58>
  422378:	mov	w1, #0x1                   	// #1
  42237c:	str	w1, [x0, #8]
  422380:	str	x24, [x0, #16]
  422384:	ldr	x1, [sp, #112]
  422388:	b	422280 <wcrtomb@plt+0x1d330>
  42238c:	mov	w1, #0x5c                  	// #92
  422390:	mov	x0, x19
  422394:	bl	421d1c <wcrtomb@plt+0x1cdcc>
  422398:	b	4223e0 <wcrtomb@plt+0x1d490>
  42239c:	mov	w1, #0x7                   	// #7
  4223a0:	b	422390 <wcrtomb@plt+0x1d440>
  4223a4:	mov	w1, #0x8                   	// #8
  4223a8:	b	422390 <wcrtomb@plt+0x1d440>
  4223ac:	mov	w1, #0xc                   	// #12
  4223b0:	b	422390 <wcrtomb@plt+0x1d440>
  4223b4:	mov	w1, #0xa                   	// #10
  4223b8:	b	422390 <wcrtomb@plt+0x1d440>
  4223bc:	mov	w1, #0xd                   	// #13
  4223c0:	b	422390 <wcrtomb@plt+0x1d440>
  4223c4:	mov	w1, #0x9                   	// #9
  4223c8:	b	422390 <wcrtomb@plt+0x1d440>
  4223cc:	mov	w1, #0xb                   	// #11
  4223d0:	b	422390 <wcrtomb@plt+0x1d440>
  4223d4:	mov	w1, #0x4                   	// #4
  4223d8:	mov	x0, x19
  4223dc:	bl	421cf0 <wcrtomb@plt+0x1cda0>
  4223e0:	ldr	x0, [sp, #112]
  4223e4:	add	x0, x0, #0x1
  4223e8:	str	x0, [sp, #112]
  4223ec:	b	422384 <wcrtomb@plt+0x1d434>
  4223f0:	mov	w1, #0x2                   	// #2
  4223f4:	b	4223d8 <wcrtomb@plt+0x1d488>
  4223f8:	mov	w1, #0x3                   	// #3
  4223fc:	b	4223d8 <wcrtomb@plt+0x1d488>
  422400:	mov	w1, #0x1                   	// #1
  422404:	b	4223d8 <wcrtomb@plt+0x1d488>
  422408:	mov	w1, #0x0                   	// #0
  42240c:	b	4223d8 <wcrtomb@plt+0x1d488>
  422410:	mov	w0, #0x5c                  	// #92
  422414:	mov	x2, x21
  422418:	strb	w0, [sp, #96]
  42241c:	mov	x0, x19
  422420:	strb	w1, [sp, #97]
  422424:	add	x1, sp, #0x60
  422428:	bl	421d64 <wcrtomb@plt+0x1ce14>
  42242c:	b	4223e0 <wcrtomb@plt+0x1d490>
  422430:	cmp	w0, #0x26
  422434:	b.ne	422464 <wcrtomb@plt+0x1d514>  // b.any
  422438:	mov	x0, x19
  42243c:	bl	421d64 <wcrtomb@plt+0x1ce14>
  422440:	mov	x0, x19
  422444:	bl	421ca8 <wcrtomb@plt+0x1cd58>
  422448:	str	xzr, [x0, #16]
  42244c:	mov	w1, #0x1                   	// #1
  422450:	str	w1, [x0, #8]
  422454:	ldr	x1, [sp, #112]
  422458:	add	x1, x1, #0x1
  42245c:	str	x1, [sp, #112]
  422460:	b	422280 <wcrtomb@plt+0x1d330>
  422464:	add	x2, x2, #0x1
  422468:	str	x2, [sp, #112]
  42246c:	b	422280 <wcrtomb@plt+0x1d330>
  422470:	ldrb	w1, [x0]
  422474:	cbnz	w1, 42247c <wcrtomb@plt+0x1d52c>
  422478:	ret
  42247c:	stp	x29, x30, [sp, #-16]!
  422480:	mov	x29, sp
  422484:	bl	421ec4 <wcrtomb@plt+0x1cf74>
  422488:	ldrb	w1, [x0]
  42248c:	cbnz	w1, 422484 <wcrtomb@plt+0x1d534>
  422490:	ldp	x29, x30, [sp], #16
  422494:	ret
  422498:	stp	x29, x30, [sp, #-160]!
  42249c:	mov	x29, sp
  4224a0:	stp	x23, x24, [sp, #48]
  4224a4:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  4224a8:	add	x23, x23, #0xca0
  4224ac:	stp	x19, x20, [sp, #16]
  4224b0:	stp	x25, x26, [sp, #64]
  4224b4:	mov	x26, x0
  4224b8:	ldr	x19, [x0]
  4224bc:	stp	x21, x22, [sp, #32]
  4224c0:	ldrb	w0, [x23, #32]
  4224c4:	stp	x27, x28, [sp, #80]
  4224c8:	str	x2, [sp, #104]
  4224cc:	str	x3, [sp, #120]
  4224d0:	str	w1, [sp, #132]
  4224d4:	cbnz	w0, 422500 <wcrtomb@plt+0x1d5b0>
  4224d8:	add	x0, x23, #0x28
  4224dc:	adrp	x4, 404000 <mbrtowc@plt-0x1f0>
  4224e0:	adrp	x3, 436000 <argp_usage@@Base+0x8b20>
  4224e4:	add	x4, x4, #0xae0
  4224e8:	add	x3, x3, #0xd44
  4224ec:	mov	x2, #0x0                   	// #0
  4224f0:	mov	x1, #0x0                   	// #0
  4224f4:	bl	437aa0 <_obstack_begin@@Base>
  4224f8:	mov	w0, #0x1                   	// #1
  4224fc:	strb	w0, [x23, #32]
  422500:	ldr	x22, [x23, #24]
  422504:	add	x28, x23, #0x28
  422508:	mov	w20, #0x0                   	// #0
  42250c:	cbnz	x22, 422574 <wcrtomb@plt+0x1d624>
  422510:	ldr	x0, [sp, #104]
  422514:	cbz	w20, 4228e4 <wcrtomb@plt+0x1d994>
  422518:	cbz	x0, 4228cc <wcrtomb@plt+0x1d97c>
  42251c:	ldr	x2, [sp, #104]
  422520:	mov	x0, x19
  422524:	ldr	x1, [sp, #120]
  422528:	blr	x2
  42252c:	mov	x1, x0
  422530:	mov	x0, x26
  422534:	bl	417c2c <wcrtomb@plt+0x12cdc>
  422538:	ldr	x1, [x23, #48]
  42253c:	cmp	x1, x19
  422540:	b.cs	4228d4 <wcrtomb@plt+0x1d984>  // b.hs, b.nlast
  422544:	ldr	x1, [x23, #72]
  422548:	cmp	x1, x19
  42254c:	b.ls	4228d4 <wcrtomb@plt+0x1d984>  // b.plast
  422550:	stp	x19, x19, [x23, #56]
  422554:	mov	w0, w20
  422558:	ldp	x19, x20, [sp, #16]
  42255c:	ldp	x21, x22, [sp, #32]
  422560:	ldp	x23, x24, [sp, #48]
  422564:	ldp	x25, x26, [sp, #64]
  422568:	ldp	x27, x28, [sp, #80]
  42256c:	ldp	x29, x30, [sp], #160
  422570:	ret
  422574:	ldr	w0, [x22, #12]
  422578:	ldr	w1, [sp, #132]
  42257c:	tst	w1, w0
  422580:	b.eq	422740 <wcrtomb@plt+0x1d7f0>  // b.none
  422584:	ldr	x0, [x22, #72]
  422588:	mov	w24, #0x0                   	// #0
  42258c:	mov	w20, #0x0                   	// #0
  422590:	add	x0, x0, #0x1
  422594:	lsl	x0, x0, #4
  422598:	bl	436d44 <argp_usage@@Base+0x9864>
  42259c:	mov	x25, x0
  4225a0:	add	x0, x22, #0x18
  4225a4:	str	xzr, [sp, #112]
  4225a8:	str	x0, [sp, #136]
  4225ac:	ldrb	w0, [x19]
  4225b0:	cbz	w0, 4226cc <wcrtomb@plt+0x1d77c>
  4225b4:	ldr	x0, [sp, #136]
  4225b8:	mov	x3, x25
  4225bc:	ldr	x2, [x22, #72]
  4225c0:	mov	x1, x19
  4225c4:	mov	w4, #0x0                   	// #0
  4225c8:	add	x2, x2, #0x1
  4225cc:	bl	44258c <_obstack_memory_used@@Base+0xa90c>
  4225d0:	cbnz	w0, 422884 <wcrtomb@plt+0x1d934>
  4225d4:	ldp	x27, x21, [x25]
  4225d8:	cbz	x27, 422614 <wcrtomb@plt+0x1d6c4>
  4225dc:	ldp	x1, x0, [x28, #24]
  4225e0:	sub	x0, x0, x1
  4225e4:	cmp	x27, x0
  4225e8:	b.ls	4225f8 <wcrtomb@plt+0x1d6a8>  // b.plast
  4225ec:	mov	x1, x27
  4225f0:	mov	x0, x28
  4225f4:	bl	437acc <_obstack_newchunk@@Base>
  4225f8:	ldr	x0, [x28, #24]
  4225fc:	mov	x2, x27
  422600:	mov	x1, x19
  422604:	bl	404200 <memcpy@plt>
  422608:	ldr	x0, [x28, #24]
  42260c:	add	x2, x0, x27
  422610:	str	x2, [x28, #24]
  422614:	ldr	x0, [sp, #112]
  422618:	add	x0, x0, #0x1
  42261c:	str	x0, [sp, #112]
  422620:	ldr	w0, [x22, #16]
  422624:	cbz	w0, 422674 <wcrtomb@plt+0x1d724>
  422628:	ldr	x1, [sp, #112]
  42262c:	cmp	x1, w0, uxtw
  422630:	b.cs	422674 <wcrtomb@plt+0x1d724>  // b.hs, b.nlast
  422634:	ldp	x1, x0, [x28, #24]
  422638:	sub	x0, x0, x1
  42263c:	cmp	x21, x0
  422640:	b.ls	422650 <wcrtomb@plt+0x1d700>  // b.plast
  422644:	mov	x1, x21
  422648:	mov	x0, x28
  42264c:	bl	437acc <_obstack_newchunk@@Base>
  422650:	ldr	x0, [x28, #24]
  422654:	mov	x1, x19
  422658:	mov	x2, x21
  42265c:	add	x19, x19, x21
  422660:	bl	404200 <memcpy@plt>
  422664:	ldr	x0, [x28, #24]
  422668:	add	x0, x0, x21
  42266c:	str	x0, [x28, #24]
  422670:	b	4225ac <wcrtomb@plt+0x1d65c>
  422674:	ldr	x27, [x22, #88]
  422678:	cbnz	x27, 422748 <wcrtomb@plt+0x1d7f8>
  42267c:	ldr	w0, [x22, #8]
  422680:	add	x19, x19, x21
  422684:	cbnz	w0, 4225ac <wcrtomb@plt+0x1d65c>
  422688:	mov	x0, x19
  42268c:	bl	404280 <strlen@plt>
  422690:	mov	x20, x0
  422694:	ldp	x1, x0, [x28, #24]
  422698:	sub	x0, x0, x1
  42269c:	cmp	x20, x0
  4226a0:	b.ls	4226b0 <wcrtomb@plt+0x1d760>  // b.plast
  4226a4:	mov	x1, x20
  4226a8:	mov	x0, x28
  4226ac:	bl	437acc <_obstack_newchunk@@Base>
  4226b0:	ldr	x0, [x28, #24]
  4226b4:	mov	x2, x20
  4226b8:	mov	x1, x19
  4226bc:	bl	404200 <memcpy@plt>
  4226c0:	ldr	x0, [x28, #24]
  4226c4:	add	x0, x0, x20
  4226c8:	str	x0, [x28, #24]
  4226cc:	ldp	x0, x1, [x28, #24]
  4226d0:	cmp	x1, x0
  4226d4:	b.ne	4226e4 <wcrtomb@plt+0x1d794>  // b.any
  4226d8:	mov	x0, x28
  4226dc:	mov	x1, #0x1                   	// #1
  4226e0:	bl	437acc <_obstack_newchunk@@Base>
  4226e4:	ldr	x0, [x28, #24]
  4226e8:	add	x1, x0, #0x1
  4226ec:	str	x1, [x28, #24]
  4226f0:	strb	wzr, [x0]
  4226f4:	mov	x0, x25
  4226f8:	bl	404ae0 <free@plt>
  4226fc:	ldp	x19, x1, [x28, #16]
  422700:	cmp	x19, x1
  422704:	b.ne	422714 <wcrtomb@plt+0x1d7c4>  // b.any
  422708:	ldrb	w0, [x28, #80]
  42270c:	orr	w0, w0, #0x2
  422710:	strb	w0, [x28, #80]
  422714:	ldr	x0, [x28, #48]
  422718:	mov	w20, #0x1                   	// #1
  42271c:	ldr	x2, [x28, #32]
  422720:	add	x1, x1, x0
  422724:	bic	x0, x1, x0
  422728:	ldr	x1, [x28, #8]
  42272c:	sub	x3, x0, x1
  422730:	sub	x1, x2, x1
  422734:	cmp	x3, x1
  422738:	csel	x0, x0, x2, ls  // ls = plast
  42273c:	stp	x0, x0, [x28, #16]
  422740:	ldr	x22, [x22]
  422744:	b	42250c <wcrtomb@plt+0x1d5bc>
  422748:	ldr	w0, [x27, #8]
  42274c:	cmp	w0, #0x1
  422750:	b.eq	4227e0 <wcrtomb@plt+0x1d890>  // b.none
  422754:	cmp	w0, #0x2
  422758:	b.eq	422840 <wcrtomb@plt+0x1d8f0>  // b.none
  42275c:	cbnz	w0, 4227b0 <wcrtomb@plt+0x1d860>
  422760:	cbnz	w20, 4227b8 <wcrtomb@plt+0x1d868>
  422764:	ldr	x4, [x27, #16]
  422768:	ldr	x2, [x27, #24]
  42276c:	ldp	x1, x0, [x28, #24]
  422770:	sub	x0, x0, x1
  422774:	cmp	x2, x0
  422778:	b.ls	422790 <wcrtomb@plt+0x1d840>  // b.plast
  42277c:	mov	x1, x2
  422780:	mov	x0, x28
  422784:	stp	x2, x4, [sp, #144]
  422788:	bl	437acc <_obstack_newchunk@@Base>
  42278c:	ldp	x2, x4, [sp, #144]
  422790:	mov	x1, x4
  422794:	ldr	x0, [x28, #24]
  422798:	str	x2, [sp, #144]
  42279c:	bl	404200 <memcpy@plt>
  4227a0:	ldr	x0, [x28, #24]
  4227a4:	ldr	x2, [sp, #144]
  4227a8:	add	x2, x0, x2
  4227ac:	str	x2, [x28, #24]
  4227b0:	mov	w0, w20
  4227b4:	b	422870 <wcrtomb@plt+0x1d920>
  4227b8:	ldp	x1, x2, [x27, #16]
  4227bc:	mov	w0, w20
  4227c0:	bl	421dc0 <wcrtomb@plt+0x1ce70>
  4227c4:	mov	x4, x0
  4227c8:	sub	w0, w20, #0x1
  4227cc:	cmp	w0, #0x1
  4227d0:	b.hi	422768 <wcrtomb@plt+0x1d818>  // b.pmore
  4227d4:	mov	w20, w24
  4227d8:	mov	w24, #0x0                   	// #0
  4227dc:	b	422768 <wcrtomb@plt+0x1d818>
  4227e0:	ldr	x0, [x27, #16]
  4227e4:	lsl	x1, x0, #4
  4227e8:	add	x0, x25, x0, lsl #4
  4227ec:	ldr	x4, [x25, x1]
  4227f0:	cmn	x4, #0x1
  4227f4:	b.eq	4227b0 <wcrtomb@plt+0x1d860>  // b.none
  4227f8:	ldr	x2, [x0, #8]
  4227fc:	cmn	x2, #0x1
  422800:	b.eq	4227b0 <wcrtomb@plt+0x1d860>  // b.none
  422804:	sub	x2, x2, x4
  422808:	add	x4, x19, x4
  42280c:	cbz	w20, 42276c <wcrtomb@plt+0x1d81c>
  422810:	mov	x1, x4
  422814:	mov	w0, w20
  422818:	str	x2, [sp, #144]
  42281c:	bl	421dc0 <wcrtomb@plt+0x1ce70>
  422820:	mov	x4, x0
  422824:	sub	w0, w20, #0x1
  422828:	cmp	w0, #0x1
  42282c:	ldr	x2, [sp, #144]
  422830:	b.hi	42276c <wcrtomb@plt+0x1d81c>  // b.pmore
  422834:	mov	w20, w24
  422838:	mov	w24, #0x0                   	// #0
  42283c:	b	42276c <wcrtomb@plt+0x1d81c>
  422840:	ldr	w0, [x27, #16]
  422844:	cmp	w0, #0x2
  422848:	b.hi	422864 <wcrtomb@plt+0x1d914>  // b.pmore
  42284c:	cbz	w0, 422870 <wcrtomb@plt+0x1d920>
  422850:	cbz	w24, 42287c <wcrtomb@plt+0x1d92c>
  422854:	sub	w1, w24, #0x3
  422858:	cmp	w1, #0x1
  42285c:	csel	w24, w24, w20, hi  // hi = pmore
  422860:	b	422870 <wcrtomb@plt+0x1d920>
  422864:	sub	w1, w0, #0x3
  422868:	cmp	w1, #0x2
  42286c:	csel	w0, w0, w20, cc  // cc = lo, ul, last
  422870:	mov	w20, w0
  422874:	ldr	x27, [x27]
  422878:	b	422678 <wcrtomb@plt+0x1d728>
  42287c:	mov	w24, w20
  422880:	b	422870 <wcrtomb@plt+0x1d920>
  422884:	mov	x0, x19
  422888:	bl	404280 <strlen@plt>
  42288c:	mov	x21, x0
  422890:	ldp	x1, x0, [x28, #24]
  422894:	sub	x0, x0, x1
  422898:	cmp	x21, x0
  42289c:	b.ls	4228ac <wcrtomb@plt+0x1d95c>  // b.plast
  4228a0:	mov	x1, x21
  4228a4:	mov	x0, x28
  4228a8:	bl	437acc <_obstack_newchunk@@Base>
  4228ac:	ldr	x0, [x28, #24]
  4228b0:	mov	x2, x21
  4228b4:	mov	x1, x19
  4228b8:	bl	404200 <memcpy@plt>
  4228bc:	ldr	x0, [x28, #24]
  4228c0:	add	x0, x0, x21
  4228c4:	str	x0, [x28, #24]
  4228c8:	b	42267c <wcrtomb@plt+0x1d72c>
  4228cc:	mov	x1, x19
  4228d0:	b	422530 <wcrtomb@plt+0x1d5e0>
  4228d4:	mov	x1, x19
  4228d8:	add	x0, x23, #0x28
  4228dc:	bl	437c0c <_obstack_free@@Base>
  4228e0:	b	422554 <wcrtomb@plt+0x1d604>
  4228e4:	cbz	x0, 422554 <wcrtomb@plt+0x1d604>
  4228e8:	ldr	x2, [sp, #104]
  4228ec:	str	xzr, [x26]
  4228f0:	ldr	x1, [sp, #120]
  4228f4:	mov	x0, x19
  4228f8:	mov	w20, #0x1                   	// #1
  4228fc:	blr	x2
  422900:	mov	x1, x0
  422904:	mov	x0, x26
  422908:	bl	417c2c <wcrtomb@plt+0x12cdc>
  42290c:	mov	x0, x19
  422910:	bl	404ae0 <free@plt>
  422914:	b	422554 <wcrtomb@plt+0x1d604>
  422918:	mov	x3, #0x0                   	// #0
  42291c:	mov	x2, #0x0                   	// #0
  422920:	b	422498 <wcrtomb@plt+0x1d548>
  422924:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  422928:	ldr	x0, [x0, #3256]
  42292c:	cmp	x0, #0x0
  422930:	cset	w0, ne  // ne = any
  422934:	ret
  422938:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  42293c:	cbz	x0, 422970 <wcrtomb@plt+0x1da20>
  422940:	ldr	x2, [x0]
  422944:	str	x2, [x1]
  422948:	str	x1, [x0]
  42294c:	ldr	x2, [x1]
  422950:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  422954:	add	x0, x0, #0xd20
  422958:	cbnz	x2, 422960 <wcrtomb@plt+0x1da10>
  42295c:	str	x1, [x0, #8]
  422960:	ldr	x1, [x0, #16]
  422964:	add	x1, x1, #0x1
  422968:	str	x1, [x0, #16]
  42296c:	ret
  422970:	ldr	x0, [x2, #3360]
  422974:	str	x1, [x2, #3360]
  422978:	str	x0, [x1]
  42297c:	b	42294c <wcrtomb@plt+0x1d9fc>
  422980:	stp	x29, x30, [sp, #-96]!
  422984:	mov	x29, sp
  422988:	stp	x21, x22, [sp, #32]
  42298c:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  422990:	add	x21, x22, #0xd20
  422994:	stp	x25, x26, [sp, #64]
  422998:	and	w26, w0, #0xff
  42299c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4229a0:	stp	x19, x20, [sp, #16]
  4229a4:	adrp	x25, 46e000 <_obstack_memory_used@@Base+0x36380>
  4229a8:	add	x25, x25, #0x8d8
  4229ac:	ldr	x19, [x22, #3360]
  4229b0:	stp	x23, x24, [sp, #48]
  4229b4:	ldr	w23, [x0, #8]
  4229b8:	stp	x27, x28, [sp, #80]
  4229bc:	adrp	x27, 44a000 <_obstack_memory_used@@Base+0x12380>
  4229c0:	add	x27, x27, #0xc29
  4229c4:	mov	x24, #0x0                   	// #0
  4229c8:	cbnz	x19, 4229fc <wcrtomb@plt+0x1daac>
  4229cc:	add	x21, x22, #0xd20
  4229d0:	ldr	x22, [x22, #3360]
  4229d4:	cbnz	x22, 422af8 <wcrtomb@plt+0x1dba8>
  4229d8:	str	xzr, [x21, #8]
  4229dc:	mov	w0, w23
  4229e0:	ldp	x19, x20, [sp, #16]
  4229e4:	ldp	x21, x22, [sp, #32]
  4229e8:	ldp	x23, x24, [sp, #48]
  4229ec:	ldp	x25, x26, [sp, #64]
  4229f0:	ldp	x27, x28, [sp, #80]
  4229f4:	ldp	x29, x30, [sp], #96
  4229f8:	b	418a9c <wcrtomb@plt+0x13b4c>
  4229fc:	ldr	x28, [x19]
  422a00:	cbnz	w26, 422a18 <wcrtomb@plt+0x1dac8>
  422a04:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  422a08:	ldr	x1, [x19, #32]
  422a0c:	ldr	x0, [x0, #3960]
  422a10:	cmp	x1, x0
  422a14:	b.cs	422ab0 <wcrtomb@plt+0x1db60>  // b.hs, b.nlast
  422a18:	ldr	w0, [x19, #8]
  422a1c:	bl	418a9c <wcrtomb@plt+0x13b4c>
  422a20:	ldrb	w0, [x19, #24]
  422a24:	cbz	w0, 422abc <wcrtomb@plt+0x1db6c>
  422a28:	ldr	w0, [x19, #8]
  422a2c:	ldr	x20, [x19, #16]
  422a30:	cbz	w0, 422a4c <wcrtomb@plt+0x1dafc>
  422a34:	ldrb	w0, [x20]
  422a38:	cbz	w0, 422ab0 <wcrtomb@plt+0x1db60>
  422a3c:	mov	x1, x27
  422a40:	mov	x0, x20
  422a44:	bl	404a30 <strcmp@plt>
  422a48:	cbz	w0, 422ab0 <wcrtomb@plt+0x1db60>
  422a4c:	ldr	w0, [x25]
  422a50:	mov	x1, x20
  422a54:	mov	w2, #0x200                 	// #512
  422a58:	bl	404410 <unlinkat@plt>
  422a5c:	cbz	w0, 422a88 <wcrtomb@plt+0x1db38>
  422a60:	bl	404e10 <__errno_location@plt>
  422a64:	ldr	w0, [x0]
  422a68:	cmp	w0, #0x11
  422a6c:	b.eq	422ab0 <wcrtomb@plt+0x1db60>  // b.none
  422a70:	cmp	w0, #0x27
  422a74:	b.eq	422ab0 <wcrtomb@plt+0x1db60>  // b.none
  422a78:	cmp	w0, #0x2
  422a7c:	b.eq	422a88 <wcrtomb@plt+0x1db38>  // b.none
  422a80:	mov	x0, x20
  422a84:	bl	4250c4 <wcrtomb@plt+0x20174>
  422a88:	ldr	x0, [x19, #16]
  422a8c:	bl	404ae0 <free@plt>
  422a90:	ldr	x0, [x21, #24]
  422a94:	str	x0, [x19]
  422a98:	ldr	x0, [x21, #16]
  422a9c:	sub	x0, x0, #0x1
  422aa0:	stp	x0, x19, [x21, #16]
  422aa4:	cbz	x24, 422aec <wcrtomb@plt+0x1db9c>
  422aa8:	mov	x19, x24
  422aac:	str	x28, [x24]
  422ab0:	mov	x24, x19
  422ab4:	mov	x19, x28
  422ab8:	b	4229c8 <wcrtomb@plt+0x1da78>
  422abc:	ldr	w0, [x25]
  422ac0:	mov	w2, #0x0                   	// #0
  422ac4:	ldr	x1, [x19, #16]
  422ac8:	bl	404410 <unlinkat@plt>
  422acc:	cbz	w0, 422a88 <wcrtomb@plt+0x1db38>
  422ad0:	bl	404e10 <__errno_location@plt>
  422ad4:	ldr	w0, [x0]
  422ad8:	cmp	w0, #0x2
  422adc:	b.eq	422a88 <wcrtomb@plt+0x1db38>  // b.none
  422ae0:	ldr	x0, [x19, #16]
  422ae4:	bl	42531c <wcrtomb@plt+0x203cc>
  422ae8:	b	422a88 <wcrtomb@plt+0x1db38>
  422aec:	mov	x19, #0x0                   	// #0
  422af0:	str	x28, [x21]
  422af4:	b	422ab0 <wcrtomb@plt+0x1db60>
  422af8:	cbz	w26, 4229dc <wcrtomb@plt+0x1da8c>
  422afc:	adrp	x25, 44a000 <_obstack_memory_used@@Base+0x12380>
  422b00:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x36380>
  422b04:	add	x25, x25, #0xc29
  422b08:	add	x24, x24, #0x8d8
  422b0c:	ldr	w0, [x22, #8]
  422b10:	mov	x20, x22
  422b14:	ldr	x22, [x22]
  422b18:	bl	418a9c <wcrtomb@plt+0x13b4c>
  422b1c:	ldr	w0, [x20, #8]
  422b20:	ldr	x19, [x20, #16]
  422b24:	cbz	w0, 422b5c <wcrtomb@plt+0x1dc0c>
  422b28:	ldrb	w0, [x20, #24]
  422b2c:	cbz	w0, 422b5c <wcrtomb@plt+0x1dc0c>
  422b30:	ldrb	w0, [x19]
  422b34:	cbz	w0, 422b48 <wcrtomb@plt+0x1dbf8>
  422b38:	mov	x1, x25
  422b3c:	mov	x0, x19
  422b40:	bl	404a30 <strcmp@plt>
  422b44:	cbnz	w0, 422b5c <wcrtomb@plt+0x1dc0c>
  422b48:	bl	418a58 <wcrtomb@plt+0x13b08>
  422b4c:	mov	x19, x0
  422b50:	ldr	w0, [x20, #8]
  422b54:	sub	w0, w0, #0x1
  422b58:	bl	418a9c <wcrtomb@plt+0x13b4c>
  422b5c:	ldr	w0, [x24]
  422b60:	mov	x1, x19
  422b64:	mov	w2, #0x200                 	// #512
  422b68:	bl	404410 <unlinkat@plt>
  422b6c:	cbz	w0, 422b88 <wcrtomb@plt+0x1dc38>
  422b70:	bl	404e10 <__errno_location@plt>
  422b74:	ldr	w0, [x0]
  422b78:	cmp	w0, #0x2
  422b7c:	b.eq	422b88 <wcrtomb@plt+0x1dc38>  // b.none
  422b80:	mov	x0, x19
  422b84:	bl	4250c4 <wcrtomb@plt+0x20174>
  422b88:	ldr	x0, [x20, #16]
  422b8c:	bl	404ae0 <free@plt>
  422b90:	ldr	x0, [x21, #24]
  422b94:	str	x0, [x20]
  422b98:	ldr	x0, [x21, #16]
  422b9c:	sub	x0, x0, #0x1
  422ba0:	stp	x0, x20, [x21, #16]
  422ba4:	cbnz	x22, 422b0c <wcrtomb@plt+0x1dbbc>
  422ba8:	stp	xzr, xzr, [x21]
  422bac:	b	4229dc <wcrtomb@plt+0x1da8c>
  422bb0:	stp	x29, x30, [sp, #-32]!
  422bb4:	mov	w0, #0x1                   	// #1
  422bb8:	mov	x29, sp
  422bbc:	stp	x19, x20, [sp, #16]
  422bc0:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  422bc4:	add	x19, x19, #0xd20
  422bc8:	bl	422980 <wcrtomb@plt+0x1da30>
  422bcc:	ldr	x0, [x19, #24]
  422bd0:	cbnz	x0, 422be0 <wcrtomb@plt+0x1dc90>
  422bd4:	ldp	x19, x20, [sp, #16]
  422bd8:	ldp	x29, x30, [sp], #32
  422bdc:	ret
  422be0:	ldr	x20, [x0]
  422be4:	bl	404ae0 <free@plt>
  422be8:	str	x20, [x19, #24]
  422bec:	b	422bcc <wcrtomb@plt+0x1dc7c>
  422bf0:	stp	x29, x30, [sp, #-64]!
  422bf4:	mov	x29, sp
  422bf8:	stp	x19, x20, [sp, #16]
  422bfc:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  422c00:	stp	x21, x22, [sp, #32]
  422c04:	mov	x22, x0
  422c08:	ldr	x0, [x20, #3360]
  422c0c:	stp	x23, x24, [sp, #48]
  422c10:	and	w23, w1, #0xff
  422c14:	adrp	x24, 471000 <_obstack_memory_used@@Base+0x39380>
  422c18:	cbz	x0, 422c34 <wcrtomb@plt+0x1dce4>
  422c1c:	ldr	x1, [x0, #32]
  422c20:	ldr	x0, [x24, #3960]
  422c24:	cmp	x1, x0
  422c28:	b.cs	422c34 <wcrtomb@plt+0x1dce4>  // b.hs, b.nlast
  422c2c:	mov	w0, #0x0                   	// #0
  422c30:	bl	422980 <wcrtomb@plt+0x1da30>
  422c34:	add	x21, x20, #0xd20
  422c38:	ldr	x19, [x21, #24]
  422c3c:	cbz	x19, 422cb8 <wcrtomb@plt+0x1dd68>
  422c40:	ldr	x0, [x19]
  422c44:	str	xzr, [x19]
  422c48:	str	x0, [x21, #24]
  422c4c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  422c50:	ldr	w0, [x0, #8]
  422c54:	str	xzr, [x19]
  422c58:	str	w0, [x19, #8]
  422c5c:	mov	x0, x22
  422c60:	bl	436f10 <argp_usage@@Base+0x9a30>
  422c64:	str	x0, [x19, #16]
  422c68:	bl	417ed4 <wcrtomb@plt+0x12f84>
  422c6c:	strb	w23, [x19, #24]
  422c70:	ldr	x0, [x24, #3960]
  422c74:	str	x0, [x19, #32]
  422c78:	cbz	w23, 422cac <wcrtomb@plt+0x1dd5c>
  422c7c:	ldr	x0, [x19, #16]
  422c80:	ldrb	w1, [x0]
  422c84:	cbz	w1, 422c98 <wcrtomb@plt+0x1dd48>
  422c88:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  422c8c:	add	x1, x1, #0xc29
  422c90:	bl	404a30 <strcmp@plt>
  422c94:	cbnz	w0, 422cac <wcrtomb@plt+0x1dd5c>
  422c98:	ldr	x20, [x20, #3360]
  422c9c:	adrp	x22, 44a000 <_obstack_memory_used@@Base+0x12380>
  422ca0:	add	x22, x22, #0xc29
  422ca4:	mov	x23, #0x0                   	// #0
  422ca8:	cbnz	x20, 422cc8 <wcrtomb@plt+0x1dd78>
  422cac:	mov	x1, x19
  422cb0:	ldr	x0, [x21, #8]
  422cb4:	b	422d0c <wcrtomb@plt+0x1ddbc>
  422cb8:	mov	x0, #0x28                  	// #40
  422cbc:	bl	436d44 <argp_usage@@Base+0x9864>
  422cc0:	mov	x19, x0
  422cc4:	b	422c4c <wcrtomb@plt+0x1dcfc>
  422cc8:	ldrb	w0, [x20, #24]
  422ccc:	cbz	w0, 422cf8 <wcrtomb@plt+0x1dda8>
  422cd0:	ldr	x0, [x20, #16]
  422cd4:	ldrb	w1, [x0]
  422cd8:	cbz	w1, 422ce8 <wcrtomb@plt+0x1dd98>
  422cdc:	mov	x1, x22
  422ce0:	bl	404a30 <strcmp@plt>
  422ce4:	cbnz	w0, 422cf8 <wcrtomb@plt+0x1dda8>
  422ce8:	ldr	w0, [x19, #8]
  422cec:	ldr	w1, [x20, #8]
  422cf0:	cmp	w1, w0
  422cf4:	b.lt	422d04 <wcrtomb@plt+0x1ddb4>  // b.tstop
  422cf8:	mov	x23, x20
  422cfc:	ldr	x20, [x20]
  422d00:	b	422ca8 <wcrtomb@plt+0x1dd58>
  422d04:	mov	x1, x19
  422d08:	mov	x0, x23
  422d0c:	ldp	x19, x20, [sp, #16]
  422d10:	ldp	x21, x22, [sp, #32]
  422d14:	ldp	x23, x24, [sp, #48]
  422d18:	ldp	x29, x30, [sp], #64
  422d1c:	b	422938 <wcrtomb@plt+0x1d9e8>
  422d20:	stp	x29, x30, [sp, #-240]!
  422d24:	mov	x29, sp
  422d28:	stp	x19, x20, [sp, #16]
  422d2c:	adrp	x19, 472000 <argp_program_version_hook@@Base+0x250>
  422d30:	add	x19, x19, #0x68
  422d34:	stp	x21, x22, [sp, #32]
  422d38:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  422d3c:	add	x21, x21, #0xff0
  422d40:	stp	x23, x24, [sp, #48]
  422d44:	mov	w22, #0x0                   	// #0
  422d48:	stp	x25, x26, [sp, #64]
  422d4c:	bl	41a6e8 <wcrtomb@plt+0x15798>
  422d50:	adrp	x26, 44d000 <_obstack_memory_used@@Base+0x15380>
  422d54:	add	x26, x26, #0x1f4
  422d58:	mov	w0, #0x2                   	// #2
  422d5c:	bl	407d98 <wcrtomb@plt+0x2e48>
  422d60:	bl	411eec <wcrtomb@plt+0xcf9c>
  422d64:	mov	w23, w22
  422d68:	mov	x1, x19
  422d6c:	mov	x0, x21
  422d70:	mov	w2, #0x0                   	// #0
  422d74:	bl	4162bc <wcrtomb@plt+0x1136c>
  422d78:	mov	w22, w0
  422d7c:	cmp	w0, #0x5
  422d80:	b.hi	422ea4 <wcrtomb@plt+0x1df54>  // b.pmore
  422d84:	ldrb	w0, [x26, w22, uxtw]
  422d88:	adr	x1, 422d94 <wcrtomb@plt+0x1de44>
  422d8c:	add	x0, x1, w0, sxtb #2
  422d90:	br	x0
  422d94:	bl	404970 <abort@plt>
  422d98:	ldr	x0, [x21]
  422d9c:	mov	x1, x19
  422da0:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  422da4:	mov	w3, #0x0                   	// #0
  422da8:	add	x2, x20, #0xfd8
  422dac:	bl	415f00 <wcrtomb@plt+0x10fb0>
  422db0:	ldr	x0, [x21]
  422db4:	mov	x1, x19
  422db8:	ldrb	w0, [x0, #156]
  422dbc:	bl	415d2c <wcrtomb@plt+0x10ddc>
  422dc0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  422dc4:	ldr	w1, [x20, #4056]
  422dc8:	str	w1, [x0, #824]
  422dcc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  422dd0:	ldr	w0, [x0, #868]
  422dd4:	cmp	w0, #0x8
  422dd8:	b.ne	422ea0 <wcrtomb@plt+0x1df50>  // b.any
  422ddc:	ldr	x0, [x19, #8]
  422de0:	bl	41b264 <wcrtomb@plt+0x16314>
  422de4:	mov	x20, x0
  422de8:	cbz	x0, 422ea0 <wcrtomb@plt+0x1df50>
  422dec:	ldr	w0, [x0, #40]
  422df0:	bl	418a9c <wcrtomb@plt+0x13b4c>
  422df4:	ldr	x0, [x19, #8]
  422df8:	add	x1, sp, #0x70
  422dfc:	bl	4186c8 <wcrtomb@plt+0x13778>
  422e00:	cbnz	w0, 422ea0 <wcrtomb@plt+0x1df50>
  422e04:	ldr	w0, [sp, #128]
  422e08:	and	w0, w0, #0xf000
  422e0c:	cmp	w0, #0x4, lsl #12
  422e10:	b.ne	422e8c <wcrtomb@plt+0x1df3c>  // b.any
  422e14:	ldr	x0, [x20, #16]
  422e18:	mov	w1, #0x1                   	// #1
  422e1c:	bl	419114 <wcrtomb@plt+0x141c4>
  422e20:	mov	x23, x0
  422e24:	cbz	x0, 422ea0 <wcrtomb@plt+0x1df50>
  422e28:	mov	x24, x0
  422e2c:	ldr	x0, [x20, #16]
  422e30:	bl	418e28 <wcrtomb@plt+0x13ed8>
  422e34:	mov	x25, x0
  422e38:	ldrb	w0, [x24]
  422e3c:	cbnz	w0, 422e5c <wcrtomb@plt+0x1df0c>
  422e40:	mov	x0, x25
  422e44:	bl	418eac <wcrtomb@plt+0x13f5c>
  422e48:	mov	x0, x23
  422e4c:	bl	404ae0 <free@plt>
  422e50:	mov	x0, x20
  422e54:	bl	41aa30 <wcrtomb@plt+0x15ae0>
  422e58:	b	422ea0 <wcrtomb@plt+0x1df50>
  422e5c:	mov	x1, x24
  422e60:	mov	x0, x25
  422e64:	bl	418ed4 <wcrtomb@plt+0x13f84>
  422e68:	ldr	w1, [x20, #40]
  422e6c:	mov	x3, #0x0                   	// #0
  422e70:	mov	w2, #0x0                   	// #0
  422e74:	bl	41a654 <wcrtomb@plt+0x15704>
  422e78:	mov	x0, x24
  422e7c:	bl	404280 <strlen@plt>
  422e80:	add	x0, x0, #0x1
  422e84:	add	x24, x24, x0
  422e88:	b	422e38 <wcrtomb@plt+0x1dee8>
  422e8c:	ldp	x0, x1, [sp, #200]
  422e90:	ldp	x2, x3, [x19, #232]
  422e94:	bl	421be0 <wcrtomb@plt+0x1cc90>
  422e98:	cmp	w0, #0x0
  422e9c:	b.le	422e50 <wcrtomb@plt+0x1df00>
  422ea0:	bl	417070 <wcrtomb@plt+0x12120>
  422ea4:	mov	w20, #0x0                   	// #0
  422ea8:	mov	x0, x19
  422eac:	bl	421b4c <wcrtomb@plt+0x1cbfc>
  422eb0:	cbz	w20, 422d64 <wcrtomb@plt+0x1de14>
  422eb4:	bl	405c50 <wcrtomb@plt+0xd00>
  422eb8:	adrp	x23, 472000 <argp_program_version_hook@@Base+0x250>
  422ebc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  422ec0:	mov	w1, #0x1                   	// #1
  422ec4:	adrp	x24, 447000 <_obstack_memory_used@@Base+0xf380>
  422ec8:	add	x23, x23, #0x258
  422ecc:	strb	w1, [x0, #1000]
  422ed0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  422ed4:	add	x24, x24, #0x94e
  422ed8:	ldr	x1, [x0, #4016]
  422edc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  422ee0:	str	x1, [x0, #1008]
  422ee4:	bl	41b2d4 <wcrtomb@plt+0x16384>
  422ee8:	cbnz	x0, 422fc4 <wcrtomb@plt+0x1e074>
  422eec:	bl	40a8cc <wcrtomb@plt+0x597c>
  422ef0:	bl	40770c <wcrtomb@plt+0x27bc>
  422ef4:	bl	422bb0 <wcrtomb@plt+0x1dc60>
  422ef8:	bl	41acd0 <wcrtomb@plt+0x15d80>
  422efc:	ldp	x19, x20, [sp, #16]
  422f00:	ldp	x21, x22, [sp, #32]
  422f04:	ldp	x23, x24, [sp, #48]
  422f08:	ldp	x25, x26, [sp, #64]
  422f0c:	ldp	x29, x30, [sp], #240
  422f10:	ret
  422f14:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  422f18:	ldr	x1, [x21]
  422f1c:	str	x1, [x0, #4016]
  422f20:	mov	w20, #0x1                   	// #1
  422f24:	b	422ea8 <wcrtomb@plt+0x1df58>
  422f28:	ldr	x0, [x21]
  422f2c:	bl	405c98 <wcrtomb@plt+0xd48>
  422f30:	cmp	w23, #0x4
  422f34:	b.hi	422ea4 <wcrtomb@plt+0x1df54>  // b.pmore
  422f38:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  422f3c:	adrp	x20, 472000 <argp_program_version_hook@@Base+0x250>
  422f40:	add	x0, x0, #0x1fc
  422f44:	ldrb	w0, [x0, w23, uxtw]
  422f48:	adr	x1, 422f54 <wcrtomb@plt+0x1e004>
  422f4c:	add	x0, x1, w0, sxtb #2
  422f50:	br	x0
  422f54:	ldr	x0, [x20, #1016]
  422f58:	cbz	x0, 422f60 <wcrtomb@plt+0x1e010>
  422f5c:	blr	x0
  422f60:	mov	w2, #0x5                   	// #5
  422f64:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xe380>
  422f68:	mov	x0, #0x0                   	// #0
  422f6c:	add	x1, x1, #0xb68
  422f70:	bl	404d00 <dcgettext@plt>
  422f74:	mov	x2, x0
  422f78:	mov	w1, #0x0                   	// #0
  422f7c:	mov	w0, #0x0                   	// #0
  422f80:	bl	4042e0 <error@plt>
  422f84:	ldr	x0, [x20, #1016]
  422f88:	cbz	x0, 422f90 <wcrtomb@plt+0x1e040>
  422f8c:	blr	x0
  422f90:	mov	w2, #0x5                   	// #5
  422f94:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  422f98:	mov	x0, #0x0                   	// #0
  422f9c:	add	x1, x1, #0xa4e
  422fa0:	bl	404d00 <dcgettext@plt>
  422fa4:	mov	x2, x0
  422fa8:	mov	w1, #0x0                   	// #0
  422fac:	mov	w0, #0x0                   	// #0
  422fb0:	bl	4042e0 <error@plt>
  422fb4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  422fb8:	mov	w1, #0x2                   	// #2
  422fbc:	str	w1, [x0, #3464]
  422fc0:	b	422ea4 <wcrtomb@plt+0x1df54>
  422fc4:	ldr	x20, [x0, #16]
  422fc8:	mov	x1, #0x0                   	// #0
  422fcc:	mov	x0, x20
  422fd0:	bl	40dac4 <wcrtomb@plt+0x8b74>
  422fd4:	tst	w0, #0xff
  422fd8:	b.ne	422ee4 <wcrtomb@plt+0x1df94>  // b.any
  422fdc:	ldrb	w0, [x23]
  422fe0:	cbnz	w0, 42301c <wcrtomb@plt+0x1e0cc>
  422fe4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  422fe8:	ldr	w0, [x0, #868]
  422fec:	cmp	w0, #0x2
  422ff0:	b.ne	423150 <wcrtomb@plt+0x1e200>  // b.any
  422ff4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  422ff8:	mov	x1, x20
  422ffc:	mov	w2, #0x0                   	// #0
  423000:	ldr	w0, [x0, #2264]
  423004:	bl	404df0 <openat@plt>
  423008:	mov	w21, w0
  42300c:	tbz	w0, #31, 423030 <wcrtomb@plt+0x1e0e0>
  423010:	mov	x0, x20
  423014:	bl	424e5c <wcrtomb@plt+0x1ff0c>
  423018:	b	422ee4 <wcrtomb@plt+0x1df94>
  42301c:	mov	x1, x20
  423020:	mov	x0, x24
  423024:	bl	41f1c0 <wcrtomb@plt+0x1a270>
  423028:	cbnz	w0, 422fe4 <wcrtomb@plt+0x1e094>
  42302c:	b	422ee4 <wcrtomb@plt+0x1df94>
  423030:	add	x1, sp, #0x70
  423034:	bl	446a90 <_obstack_memory_used@@Base+0xee10>
  423038:	cbz	w0, 42305c <wcrtomb@plt+0x1e10c>
  42303c:	mov	x0, x20
  423040:	bl	4252dc <wcrtomb@plt+0x2038c>
  423044:	mov	w0, w21
  423048:	bl	4048c0 <close@plt>
  42304c:	cbz	w0, 422ee4 <wcrtomb@plt+0x1df94>
  423050:	mov	x0, x20
  423054:	bl	424d60 <wcrtomb@plt+0x1fe10>
  423058:	b	422ee4 <wcrtomb@plt+0x1df94>
  42305c:	ldr	x19, [sp, #160]
  423060:	mov	x25, #0x200                 	// #512
  423064:	cmp	x19, #0x0
  423068:	b.le	423044 <wcrtomb@plt+0x1e0f4>
  42306c:	bl	406f04 <wcrtomb@plt+0x1fb4>
  423070:	mov	x22, x0
  423074:	bl	405da8 <wcrtomb@plt+0xe58>
  423078:	mov	x26, x0
  42307c:	cmp	x0, x19
  423080:	b.ls	4230a0 <wcrtomb@plt+0x1e150>  // b.plast
  423084:	ands	x2, x19, #0x1ff
  423088:	b.eq	42309c <wcrtomb@plt+0x1e14c>  // b.none
  42308c:	sub	x2, x25, x2
  423090:	add	x0, x22, x19
  423094:	mov	w1, #0x0                   	// #0
  423098:	bl	404700 <memset@plt>
  42309c:	mov	x26, x19
  4230a0:	mov	x2, x26
  4230a4:	mov	x1, x22
  4230a8:	mov	w0, w21
  4230ac:	bl	436390 <argp_usage@@Base+0x8eb0>
  4230b0:	cmn	x0, #0x1
  4230b4:	b.ne	4230cc <wcrtomb@plt+0x1e17c>  // b.any
  4230b8:	ldr	x1, [sp, #160]
  4230bc:	mov	x2, x26
  4230c0:	mov	x0, x20
  4230c4:	sub	x1, x1, x19
  4230c8:	bl	425010 <wcrtomb@plt+0x200c0>
  4230cc:	cbnz	x0, 423138 <wcrtomb@plt+0x1e1e8>
  4230d0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4230d4:	ldr	x0, [x0, #1016]
  4230d8:	cbz	x0, 4230e0 <wcrtomb@plt+0x1e190>
  4230dc:	blr	x0
  4230e0:	mov	x3, x19
  4230e4:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  4230e8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  4230ec:	add	x2, x2, #0x1bb
  4230f0:	add	x1, x1, #0x1d7
  4230f4:	mov	w4, #0x5                   	// #5
  4230f8:	mov	x0, #0x0                   	// #0
  4230fc:	bl	404c10 <dcngettext@plt>
  423100:	mov	x21, x0
  423104:	mov	x0, x20
  423108:	bl	436084 <argp_usage@@Base+0x8ba4>
  42310c:	mov	x20, x0
  423110:	add	x1, sp, #0x58
  423114:	mov	x0, x19
  423118:	bl	431400 <argp_usage@@Base+0x3f20>
  42311c:	mov	x4, x0
  423120:	mov	x3, x20
  423124:	mov	x2, x21
  423128:	mov	w1, #0x0                   	// #0
  42312c:	mov	w0, #0x0                   	// #0
  423130:	bl	4042e0 <error@plt>
  423134:	bl	40d47c <wcrtomb@plt+0x852c>
  423138:	sub	x19, x19, x0
  42313c:	sub	x0, x0, #0x1
  423140:	and	x0, x0, #0xfffffffffffffe00
  423144:	add	x0, x22, x0
  423148:	bl	405c98 <wcrtomb@plt+0xd48>
  42314c:	b	423064 <wcrtomb@plt+0x1e114>
  423150:	mov	x2, x20
  423154:	mov	x1, x20
  423158:	mov	x0, #0x0                   	// #0
  42315c:	bl	40bb04 <wcrtomb@plt+0x6bb4>
  423160:	b	422ee4 <wcrtomb@plt+0x1df94>
  423164:	stp	x29, x30, [sp, #-96]!
  423168:	and	w3, w0, #0xff
  42316c:	mov	x29, sp
  423170:	stp	x21, x22, [sp, #32]
  423174:	mov	x21, x2
  423178:	stp	x23, x24, [sp, #48]
  42317c:	and	x23, x0, #0xff
  423180:	adrp	x24, 471000 <_obstack_memory_used@@Base+0x39380>
  423184:	add	x22, x24, #0x1d0
  423188:	stp	x19, x20, [sp, #16]
  42318c:	mov	x20, x1
  423190:	ldr	x0, [x22, x23, lsl #3]
  423194:	cmn	x0, #0x1
  423198:	b.ne	4231bc <wcrtomb@plt+0x1e26c>  // b.any
  42319c:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x15380>
  4231a0:	add	x19, x19, #0x201
  4231a4:	cbz	w3, 4231e8 <wcrtomb@plt+0x1e298>
  4231a8:	bl	431434 <argp_usage@@Base+0x3f54>
  4231ac:	mov	x1, x0
  4231b0:	mov	x0, x19
  4231b4:	bl	404c70 <iconv_open@plt>
  4231b8:	str	x0, [x22, #8]
  4231bc:	ldr	x22, [x22, x23, lsl #3]
  4231c0:	cbnz	x22, 4231fc <wcrtomb@plt+0x1e2ac>
  4231c4:	mov	x0, x20
  4231c8:	bl	436f10 <argp_usage@@Base+0x9a30>
  4231cc:	str	x0, [x21]
  4231d0:	mov	w0, #0x1                   	// #1
  4231d4:	ldp	x19, x20, [sp, #16]
  4231d8:	ldp	x21, x22, [sp, #32]
  4231dc:	ldp	x23, x24, [sp, #48]
  4231e0:	ldp	x29, x30, [sp], #96
  4231e4:	ret
  4231e8:	bl	431434 <argp_usage@@Base+0x3f54>
  4231ec:	mov	x1, x19
  4231f0:	bl	404c70 <iconv_open@plt>
  4231f4:	str	x0, [x24, #464]
  4231f8:	b	4231bc <wcrtomb@plt+0x1e26c>
  4231fc:	cmn	x22, #0x1
  423200:	b.eq	423250 <wcrtomb@plt+0x1e300>  // b.none
  423204:	mov	x0, x20
  423208:	bl	404280 <strlen@plt>
  42320c:	add	x0, x0, #0x1
  423210:	str	x0, [sp, #80]
  423214:	lsl	x0, x0, #4
  423218:	add	x0, x0, #0x1
  42321c:	str	x0, [sp, #88]
  423220:	bl	436d44 <argp_usage@@Base+0x9864>
  423224:	mov	x19, x0
  423228:	add	x4, sp, #0x58
  42322c:	add	x3, sp, #0x48
  423230:	add	x2, sp, #0x50
  423234:	add	x1, sp, #0x40
  423238:	mov	x0, x22
  42323c:	stp	x20, x19, [sp, #64]
  423240:	bl	404a50 <iconv@plt>
  423244:	cbz	x0, 423258 <wcrtomb@plt+0x1e308>
  423248:	mov	x0, x19
  42324c:	bl	404ae0 <free@plt>
  423250:	mov	w0, #0x0                   	// #0
  423254:	b	4231d4 <wcrtomb@plt+0x1e284>
  423258:	ldr	x0, [sp, #72]
  42325c:	strb	wzr, [x0]
  423260:	str	x19, [x21]
  423264:	b	4231d0 <wcrtomb@plt+0x1e280>
  423268:	ldrb	w1, [x0]
  42326c:	cbnz	w1, 423278 <wcrtomb@plt+0x1e328>
  423270:	mov	w0, #0x1                   	// #1
  423274:	ret
  423278:	tbnz	w1, #7, 423284 <wcrtomb@plt+0x1e334>
  42327c:	add	x0, x0, #0x1
  423280:	b	423268 <wcrtomb@plt+0x1e318>
  423284:	mov	w0, #0x0                   	// #0
  423288:	b	423274 <wcrtomb@plt+0x1e324>
  42328c:	stp	x29, x30, [sp, #-48]!
  423290:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  423294:	add	x1, x1, #0xc2f
  423298:	mov	x29, sp
  42329c:	stp	x19, x20, [sp, #16]
  4232a0:	mov	x19, x0
  4232a4:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  4232a8:	stp	x21, x22, [sp, #32]
  4232ac:	bl	404a30 <strcmp@plt>
  4232b0:	cbnz	w0, 4232c8 <wcrtomb@plt+0x1e378>
  4232b4:	str	wzr, [x20, #480]
  4232b8:	ldp	x19, x20, [sp, #16]
  4232bc:	ldp	x21, x22, [sp, #32]
  4232c0:	ldp	x29, x30, [sp], #48
  4232c4:	ret
  4232c8:	mov	x0, x19
  4232cc:	bl	404280 <strlen@plt>
  4232d0:	cmp	x0, #0x2
  4232d4:	b.ls	423340 <wcrtomb@plt+0x1e3f0>  // b.plast
  4232d8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  4232dc:	mov	x0, x19
  4232e0:	add	x1, x1, #0x207
  4232e4:	mov	x2, #0x3                   	// #3
  4232e8:	bl	4049f0 <memcmp@plt>
  4232ec:	cbnz	w0, 423340 <wcrtomb@plt+0x1e3f0>
  4232f0:	add	x19, x19, #0x3
  4232f4:	mov	w22, #0x1                   	// #1
  4232f8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4232fc:	add	x21, x20, #0x1e0
  423300:	add	x21, x21, #0x4
  423304:	mov	x1, x19
  423308:	ldr	x5, [x0, #984]
  42330c:	mov	x3, x21
  423310:	mov	x4, #0x4                   	// #4
  423314:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  423318:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42331c:	add	x2, x2, #0x348
  423320:	add	x0, x0, #0x20b
  423324:	bl	42a36c <wcrtomb@plt+0x2541c>
  423328:	ldr	w1, [x20, #480]
  42332c:	ldr	w0, [x21, x0, lsl #2]
  423330:	cbz	w22, 423348 <wcrtomb@plt+0x1e3f8>
  423334:	bic	w0, w1, w0
  423338:	str	w0, [x20, #480]
  42333c:	b	4232b8 <wcrtomb@plt+0x1e368>
  423340:	mov	w22, #0x0                   	// #0
  423344:	b	4232f8 <wcrtomb@plt+0x1e3a8>
  423348:	orr	w0, w1, w0
  42334c:	b	423338 <wcrtomb@plt+0x1e3e8>
  423350:	mov	x12, #0x1010                	// #4112
  423354:	sub	sp, sp, x12
  423358:	cmn	w0, #0x64
  42335c:	stp	x29, x30, [sp]
  423360:	mov	x29, sp
  423364:	stp	x19, x20, [sp, #16]
  423368:	stp	x21, x22, [sp, #32]
  42336c:	mov	x22, x1
  423370:	stp	x23, x24, [sp, #48]
  423374:	mov	x23, x2
  423378:	stp	x25, x26, [sp, #64]
  42337c:	b.eq	423390 <wcrtomb@plt+0x1e440>  // b.none
  423380:	mov	w21, w0
  423384:	ldrb	w0, [x1]
  423388:	cmp	w0, #0x2f
  42338c:	b.ne	4233c4 <wcrtomb@plt+0x1e474>  // b.any
  423390:	mov	x1, x23
  423394:	mov	x0, x22
  423398:	bl	42e9b0 <argp_usage@@Base+0x14d0>
  42339c:	mov	w19, w0
  4233a0:	mov	w0, w19
  4233a4:	mov	x12, #0x1010                	// #4112
  4233a8:	ldp	x29, x30, [sp]
  4233ac:	ldp	x19, x20, [sp, #16]
  4233b0:	ldp	x21, x22, [sp, #32]
  4233b4:	ldp	x23, x24, [sp, #48]
  4233b8:	ldp	x25, x26, [sp, #64]
  4233bc:	add	sp, sp, x12
  4233c0:	ret
  4233c4:	add	x20, sp, #0x50
  4233c8:	mov	x2, x1
  4233cc:	mov	x0, x20
  4233d0:	mov	w1, w21
  4233d4:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  4233d8:	mov	x24, x0
  4233dc:	cbz	x0, 42343c <wcrtomb@plt+0x1e4ec>
  4233e0:	mov	x1, x23
  4233e4:	bl	42e9b0 <argp_usage@@Base+0x14d0>
  4233e8:	mov	w19, w0
  4233ec:	bl	404e10 <__errno_location@plt>
  4233f0:	ldr	w26, [x0]
  4233f4:	mov	x25, x0
  4233f8:	cmp	x24, x20
  4233fc:	b.eq	423408 <wcrtomb@plt+0x1e4b8>  // b.none
  423400:	mov	x0, x24
  423404:	bl	404ae0 <free@plt>
  423408:	cmn	w19, #0x1
  42340c:	b.ne	4233a0 <wcrtomb@plt+0x1e450>  // b.any
  423410:	cmp	w26, #0x26
  423414:	b.ls	423428 <wcrtomb@plt+0x1e4d8>  // b.plast
  423418:	cmp	w26, #0x5f
  42341c:	b.eq	42343c <wcrtomb@plt+0x1e4ec>  // b.none
  423420:	str	w26, [x25]
  423424:	b	4233a0 <wcrtomb@plt+0x1e450>
  423428:	mov	x0, #0x2006                	// #8198
  42342c:	movk	x0, #0x10, lsl #16
  423430:	movk	x0, #0x40, lsl #32
  423434:	lsr	x0, x0, x26
  423438:	tbz	w0, #0, 423420 <wcrtomb@plt+0x1e4d0>
  42343c:	mov	x0, x20
  423440:	bl	436488 <argp_usage@@Base+0x8fa8>
  423444:	cbz	w0, 423454 <wcrtomb@plt+0x1e504>
  423448:	bl	404e10 <__errno_location@plt>
  42344c:	ldr	w0, [x0]
  423450:	bl	431c3c <argp_usage@@Base+0x475c>
  423454:	tbnz	w21, #31, 423480 <wcrtomb@plt+0x1e530>
  423458:	ldr	w0, [sp, #80]
  42345c:	cmp	w0, w21
  423460:	b.ne	423480 <wcrtomb@plt+0x1e530>  // b.any
  423464:	mov	x0, x20
  423468:	bl	4364f8 <argp_usage@@Base+0x9018>
  42346c:	bl	404e10 <__errno_location@plt>
  423470:	mov	w1, #0x9                   	// #9
  423474:	str	w1, [x0]
  423478:	mov	w19, #0xffffffff            	// #-1
  42347c:	b	4233a0 <wcrtomb@plt+0x1e450>
  423480:	mov	w0, w21
  423484:	bl	4042f0 <fchdir@plt>
  423488:	mov	w21, w0
  42348c:	cbz	w0, 4234ac <wcrtomb@plt+0x1e55c>
  423490:	bl	404e10 <__errno_location@plt>
  423494:	mov	x19, x0
  423498:	mov	x0, x20
  42349c:	ldr	w21, [x19]
  4234a0:	bl	4364f8 <argp_usage@@Base+0x9018>
  4234a4:	str	w21, [x19]
  4234a8:	b	423478 <wcrtomb@plt+0x1e528>
  4234ac:	mov	x1, x23
  4234b0:	mov	x0, x22
  4234b4:	bl	42e9b0 <argp_usage@@Base+0x14d0>
  4234b8:	mov	w19, w0
  4234bc:	cmn	w0, #0x1
  4234c0:	b.ne	4234cc <wcrtomb@plt+0x1e57c>  // b.any
  4234c4:	bl	404e10 <__errno_location@plt>
  4234c8:	ldr	w21, [x0]
  4234cc:	mov	x0, x20
  4234d0:	bl	4364e0 <argp_usage@@Base+0x9000>
  4234d4:	cbz	w0, 4234e4 <wcrtomb@plt+0x1e594>
  4234d8:	bl	404e10 <__errno_location@plt>
  4234dc:	ldr	w0, [x0]
  4234e0:	bl	431c7c <argp_usage@@Base+0x479c>
  4234e4:	mov	x0, x20
  4234e8:	bl	4364f8 <argp_usage@@Base+0x9018>
  4234ec:	cbz	w21, 4233a0 <wcrtomb@plt+0x1e450>
  4234f0:	bl	404e10 <__errno_location@plt>
  4234f4:	str	w21, [x0]
  4234f8:	b	4233a0 <wcrtomb@plt+0x1e450>
  4234fc:	stp	x29, x30, [sp, #-32]!
  423500:	mov	x29, sp
  423504:	stp	x19, x20, [sp, #16]
  423508:	mov	x19, x0
  42350c:	mov	x20, x1
  423510:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  423514:	add	x1, x1, #0x418
  423518:	bl	404dd0 <strcspn@plt>
  42351c:	add	x2, x19, x0
  423520:	mov	x3, x2
  423524:	ldrb	w0, [x2]
  423528:	cbnz	w0, 423544 <wcrtomb@plt+0x1e5f4>
  42352c:	sub	x19, x3, x19
  423530:	str	x19, [x20]
  423534:	strb	wzr, [x3]
  423538:	ldp	x19, x20, [sp, #16]
  42353c:	ldp	x29, x30, [sp], #32
  423540:	ret
  423544:	add	x1, x2, #0x1
  423548:	cmp	w0, #0x9
  42354c:	b.eq	423568 <wcrtomb@plt+0x1e618>  // b.none
  423550:	cmp	w0, #0x23
  423554:	b.ne	423570 <wcrtomb@plt+0x1e620>  // b.any
  423558:	ldrb	w0, [x2, #1]!
  42355c:	cmp	w0, #0xa
  423560:	b.ne	423558 <wcrtomb@plt+0x1e608>  // b.any
  423564:	mov	x1, x2
  423568:	mov	x2, x1
  42356c:	b	423524 <wcrtomb@plt+0x1e5d4>
  423570:	strb	w0, [x3], #1
  423574:	b	423568 <wcrtomb@plt+0x1e618>
  423578:	mov	x12, #0x1010                	// #4112
  42357c:	sub	sp, sp, x12
  423580:	cmn	w0, #0x64
  423584:	stp	x29, x30, [sp]
  423588:	mov	x29, sp
  42358c:	stp	x19, x20, [sp, #16]
  423590:	stp	x21, x22, [sp, #32]
  423594:	mov	x22, x1
  423598:	stp	x23, x24, [sp, #48]
  42359c:	str	x25, [sp, #64]
  4235a0:	b.eq	4235b4 <wcrtomb@plt+0x1e664>  // b.none
  4235a4:	mov	w21, w0
  4235a8:	ldrb	w0, [x1]
  4235ac:	cmp	w0, #0x2f
  4235b0:	b.ne	4235e4 <wcrtomb@plt+0x1e694>  // b.any
  4235b4:	mov	x0, x22
  4235b8:	bl	404550 <acl_delete_def_file@plt>
  4235bc:	mov	w19, w0
  4235c0:	mov	w0, w19
  4235c4:	mov	x12, #0x1010                	// #4112
  4235c8:	ldp	x29, x30, [sp]
  4235cc:	ldp	x19, x20, [sp, #16]
  4235d0:	ldp	x21, x22, [sp, #32]
  4235d4:	ldp	x23, x24, [sp, #48]
  4235d8:	ldr	x25, [sp, #64]
  4235dc:	add	sp, sp, x12
  4235e0:	ret
  4235e4:	add	x20, sp, #0x50
  4235e8:	mov	x2, x1
  4235ec:	mov	x0, x20
  4235f0:	mov	w1, w21
  4235f4:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  4235f8:	mov	x23, x0
  4235fc:	cbz	x0, 423658 <wcrtomb@plt+0x1e708>
  423600:	bl	404550 <acl_delete_def_file@plt>
  423604:	mov	w19, w0
  423608:	bl	404e10 <__errno_location@plt>
  42360c:	ldr	w25, [x0]
  423610:	mov	x24, x0
  423614:	cmp	x23, x20
  423618:	b.eq	423624 <wcrtomb@plt+0x1e6d4>  // b.none
  42361c:	mov	x0, x23
  423620:	bl	404ae0 <free@plt>
  423624:	cmn	w19, #0x1
  423628:	b.ne	4235c0 <wcrtomb@plt+0x1e670>  // b.any
  42362c:	cmp	w25, #0x26
  423630:	b.ls	423644 <wcrtomb@plt+0x1e6f4>  // b.plast
  423634:	cmp	w25, #0x5f
  423638:	b.eq	423658 <wcrtomb@plt+0x1e708>  // b.none
  42363c:	str	w25, [x24]
  423640:	b	4235c0 <wcrtomb@plt+0x1e670>
  423644:	mov	x0, #0x2006                	// #8198
  423648:	movk	x0, #0x10, lsl #16
  42364c:	movk	x0, #0x40, lsl #32
  423650:	lsr	x0, x0, x25
  423654:	tbz	w0, #0, 42363c <wcrtomb@plt+0x1e6ec>
  423658:	mov	x0, x20
  42365c:	bl	436488 <argp_usage@@Base+0x8fa8>
  423660:	cbz	w0, 423670 <wcrtomb@plt+0x1e720>
  423664:	bl	404e10 <__errno_location@plt>
  423668:	ldr	w0, [x0]
  42366c:	bl	431c3c <argp_usage@@Base+0x475c>
  423670:	tbnz	w21, #31, 42369c <wcrtomb@plt+0x1e74c>
  423674:	ldr	w0, [sp, #80]
  423678:	cmp	w0, w21
  42367c:	b.ne	42369c <wcrtomb@plt+0x1e74c>  // b.any
  423680:	mov	x0, x20
  423684:	bl	4364f8 <argp_usage@@Base+0x9018>
  423688:	bl	404e10 <__errno_location@plt>
  42368c:	mov	w1, #0x9                   	// #9
  423690:	str	w1, [x0]
  423694:	mov	w19, #0xffffffff            	// #-1
  423698:	b	4235c0 <wcrtomb@plt+0x1e670>
  42369c:	mov	w0, w21
  4236a0:	bl	4042f0 <fchdir@plt>
  4236a4:	mov	w21, w0
  4236a8:	cbz	w0, 4236c8 <wcrtomb@plt+0x1e778>
  4236ac:	bl	404e10 <__errno_location@plt>
  4236b0:	mov	x19, x0
  4236b4:	mov	x0, x20
  4236b8:	ldr	w21, [x19]
  4236bc:	bl	4364f8 <argp_usage@@Base+0x9018>
  4236c0:	str	w21, [x19]
  4236c4:	b	423694 <wcrtomb@plt+0x1e744>
  4236c8:	mov	x0, x22
  4236cc:	bl	404550 <acl_delete_def_file@plt>
  4236d0:	mov	w19, w0
  4236d4:	cmn	w0, #0x1
  4236d8:	b.ne	4236e4 <wcrtomb@plt+0x1e794>  // b.any
  4236dc:	bl	404e10 <__errno_location@plt>
  4236e0:	ldr	w21, [x0]
  4236e4:	mov	x0, x20
  4236e8:	bl	4364e0 <argp_usage@@Base+0x9000>
  4236ec:	cbz	w0, 4236fc <wcrtomb@plt+0x1e7ac>
  4236f0:	bl	404e10 <__errno_location@plt>
  4236f4:	ldr	w0, [x0]
  4236f8:	bl	431c7c <argp_usage@@Base+0x479c>
  4236fc:	mov	x0, x20
  423700:	bl	4364f8 <argp_usage@@Base+0x9018>
  423704:	cbz	w21, 4235c0 <wcrtomb@plt+0x1e670>
  423708:	bl	404e10 <__errno_location@plt>
  42370c:	str	w21, [x0]
  423710:	b	4235c0 <wcrtomb@plt+0x1e670>
  423714:	mov	x12, #0x1020                	// #4128
  423718:	sub	sp, sp, x12
  42371c:	cmn	w0, #0x64
  423720:	stp	x29, x30, [sp]
  423724:	mov	x29, sp
  423728:	stp	x19, x20, [sp, #16]
  42372c:	stp	x21, x22, [sp, #32]
  423730:	mov	x22, x1
  423734:	stp	x23, x24, [sp, #48]
  423738:	mov	w23, w2
  42373c:	mov	x24, x3
  423740:	stp	x25, x26, [sp, #64]
  423744:	str	x27, [sp, #80]
  423748:	b.eq	42375c <wcrtomb@plt+0x1e80c>  // b.none
  42374c:	mov	w21, w0
  423750:	ldrb	w0, [x1]
  423754:	cmp	w0, #0x2f
  423758:	b.ne	423798 <wcrtomb@plt+0x1e848>  // b.any
  42375c:	mov	x2, x24
  423760:	mov	w1, w23
  423764:	mov	x0, x22
  423768:	bl	404840 <acl_set_file@plt>
  42376c:	mov	w19, w0
  423770:	mov	w0, w19
  423774:	mov	x12, #0x1020                	// #4128
  423778:	ldp	x29, x30, [sp]
  42377c:	ldp	x19, x20, [sp, #16]
  423780:	ldp	x21, x22, [sp, #32]
  423784:	ldp	x23, x24, [sp, #48]
  423788:	ldp	x25, x26, [sp, #64]
  42378c:	ldr	x27, [sp, #80]
  423790:	add	sp, sp, x12
  423794:	ret
  423798:	add	x20, sp, #0x60
  42379c:	mov	x2, x1
  4237a0:	mov	x0, x20
  4237a4:	mov	w1, w21
  4237a8:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  4237ac:	mov	x25, x0
  4237b0:	cbz	x0, 423814 <wcrtomb@plt+0x1e8c4>
  4237b4:	mov	x2, x24
  4237b8:	mov	w1, w23
  4237bc:	bl	404840 <acl_set_file@plt>
  4237c0:	mov	w19, w0
  4237c4:	bl	404e10 <__errno_location@plt>
  4237c8:	ldr	w27, [x0]
  4237cc:	mov	x26, x0
  4237d0:	cmp	x25, x20
  4237d4:	b.eq	4237e0 <wcrtomb@plt+0x1e890>  // b.none
  4237d8:	mov	x0, x25
  4237dc:	bl	404ae0 <free@plt>
  4237e0:	cmn	w19, #0x1
  4237e4:	b.ne	423770 <wcrtomb@plt+0x1e820>  // b.any
  4237e8:	cmp	w27, #0x26
  4237ec:	b.ls	423800 <wcrtomb@plt+0x1e8b0>  // b.plast
  4237f0:	cmp	w27, #0x5f
  4237f4:	b.eq	423814 <wcrtomb@plt+0x1e8c4>  // b.none
  4237f8:	str	w27, [x26]
  4237fc:	b	423770 <wcrtomb@plt+0x1e820>
  423800:	mov	x0, #0x2006                	// #8198
  423804:	movk	x0, #0x10, lsl #16
  423808:	movk	x0, #0x40, lsl #32
  42380c:	lsr	x0, x0, x27
  423810:	tbz	w0, #0, 4237f8 <wcrtomb@plt+0x1e8a8>
  423814:	mov	x0, x20
  423818:	bl	436488 <argp_usage@@Base+0x8fa8>
  42381c:	cbz	w0, 42382c <wcrtomb@plt+0x1e8dc>
  423820:	bl	404e10 <__errno_location@plt>
  423824:	ldr	w0, [x0]
  423828:	bl	431c3c <argp_usage@@Base+0x475c>
  42382c:	tbnz	w21, #31, 423858 <wcrtomb@plt+0x1e908>
  423830:	ldr	w0, [sp, #96]
  423834:	cmp	w0, w21
  423838:	b.ne	423858 <wcrtomb@plt+0x1e908>  // b.any
  42383c:	mov	x0, x20
  423840:	bl	4364f8 <argp_usage@@Base+0x9018>
  423844:	bl	404e10 <__errno_location@plt>
  423848:	mov	w1, #0x9                   	// #9
  42384c:	str	w1, [x0]
  423850:	mov	w19, #0xffffffff            	// #-1
  423854:	b	423770 <wcrtomb@plt+0x1e820>
  423858:	mov	w0, w21
  42385c:	bl	4042f0 <fchdir@plt>
  423860:	mov	w21, w0
  423864:	cbz	w0, 423884 <wcrtomb@plt+0x1e934>
  423868:	bl	404e10 <__errno_location@plt>
  42386c:	mov	x19, x0
  423870:	mov	x0, x20
  423874:	ldr	w21, [x19]
  423878:	bl	4364f8 <argp_usage@@Base+0x9018>
  42387c:	str	w21, [x19]
  423880:	b	423850 <wcrtomb@plt+0x1e900>
  423884:	mov	x2, x24
  423888:	mov	w1, w23
  42388c:	mov	x0, x22
  423890:	bl	404840 <acl_set_file@plt>
  423894:	mov	w19, w0
  423898:	cmn	w0, #0x1
  42389c:	b.ne	4238a8 <wcrtomb@plt+0x1e958>  // b.any
  4238a0:	bl	404e10 <__errno_location@plt>
  4238a4:	ldr	w21, [x0]
  4238a8:	mov	x0, x20
  4238ac:	bl	4364e0 <argp_usage@@Base+0x9000>
  4238b0:	cbz	w0, 4238c0 <wcrtomb@plt+0x1e970>
  4238b4:	bl	404e10 <__errno_location@plt>
  4238b8:	ldr	w0, [x0]
  4238bc:	bl	431c7c <argp_usage@@Base+0x479c>
  4238c0:	mov	x0, x20
  4238c4:	bl	4364f8 <argp_usage@@Base+0x9018>
  4238c8:	cbz	w21, 423770 <wcrtomb@plt+0x1e820>
  4238cc:	bl	404e10 <__errno_location@plt>
  4238d0:	str	w21, [x0]
  4238d4:	b	423770 <wcrtomb@plt+0x1e820>
  4238d8:	mov	x12, #0x1010                	// #4112
  4238dc:	sub	sp, sp, x12
  4238e0:	stp	x29, x30, [sp]
  4238e4:	mov	x29, sp
  4238e8:	stp	x19, x20, [sp, #16]
  4238ec:	add	x20, sp, #0x50
  4238f0:	stp	x21, x22, [sp, #32]
  4238f4:	mov	w21, w0
  4238f8:	stp	x23, x24, [sp, #48]
  4238fc:	mov	x23, x1
  423900:	mov	w24, w2
  423904:	mov	x2, x1
  423908:	mov	w1, w0
  42390c:	mov	x0, x20
  423910:	stp	x25, x26, [sp, #64]
  423914:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  423918:	cbz	x0, 423998 <wcrtomb@plt+0x1ea48>
  42391c:	mov	w1, w24
  423920:	mov	x22, x0
  423924:	bl	404a80 <acl_get_file@plt>
  423928:	mov	x19, x0
  42392c:	bl	404e10 <__errno_location@plt>
  423930:	ldr	w26, [x0]
  423934:	mov	x25, x0
  423938:	cmp	x22, x20
  42393c:	b.eq	423948 <wcrtomb@plt+0x1e9f8>  // b.none
  423940:	mov	x0, x22
  423944:	bl	404ae0 <free@plt>
  423948:	cbnz	x19, 423960 <wcrtomb@plt+0x1ea10>
  42394c:	cmp	w26, #0x26
  423950:	b.ls	423984 <wcrtomb@plt+0x1ea34>  // b.plast
  423954:	cmp	w26, #0x5f
  423958:	b.eq	423998 <wcrtomb@plt+0x1ea48>  // b.none
  42395c:	str	w26, [x25]
  423960:	mov	x0, x19
  423964:	mov	x12, #0x1010                	// #4112
  423968:	ldp	x29, x30, [sp]
  42396c:	ldp	x19, x20, [sp, #16]
  423970:	ldp	x21, x22, [sp, #32]
  423974:	ldp	x23, x24, [sp, #48]
  423978:	ldp	x25, x26, [sp, #64]
  42397c:	add	sp, sp, x12
  423980:	ret
  423984:	mov	x0, #0x2006                	// #8198
  423988:	movk	x0, #0x10, lsl #16
  42398c:	movk	x0, #0x40, lsl #32
  423990:	lsr	x0, x0, x26
  423994:	tbz	w0, #0, 42395c <wcrtomb@plt+0x1ea0c>
  423998:	mov	x0, x20
  42399c:	bl	436488 <argp_usage@@Base+0x8fa8>
  4239a0:	cbz	w0, 4239b0 <wcrtomb@plt+0x1ea60>
  4239a4:	bl	404e10 <__errno_location@plt>
  4239a8:	ldr	w0, [x0]
  4239ac:	bl	431c3c <argp_usage@@Base+0x475c>
  4239b0:	tbnz	w21, #31, 4239dc <wcrtomb@plt+0x1ea8c>
  4239b4:	ldr	w0, [sp, #80]
  4239b8:	cmp	w21, w0
  4239bc:	b.ne	4239dc <wcrtomb@plt+0x1ea8c>  // b.any
  4239c0:	mov	x0, x20
  4239c4:	bl	4364f8 <argp_usage@@Base+0x9018>
  4239c8:	bl	404e10 <__errno_location@plt>
  4239cc:	mov	w1, #0x9                   	// #9
  4239d0:	str	w1, [x0]
  4239d4:	mov	x19, #0x0                   	// #0
  4239d8:	b	423960 <wcrtomb@plt+0x1ea10>
  4239dc:	mov	w0, w21
  4239e0:	bl	4042f0 <fchdir@plt>
  4239e4:	mov	w21, w0
  4239e8:	cbz	w0, 423a08 <wcrtomb@plt+0x1eab8>
  4239ec:	bl	404e10 <__errno_location@plt>
  4239f0:	mov	x19, x0
  4239f4:	mov	x0, x20
  4239f8:	ldr	w21, [x19]
  4239fc:	bl	4364f8 <argp_usage@@Base+0x9018>
  423a00:	str	w21, [x19]
  423a04:	b	4239d4 <wcrtomb@plt+0x1ea84>
  423a08:	mov	w1, w24
  423a0c:	mov	x0, x23
  423a10:	bl	404a80 <acl_get_file@plt>
  423a14:	mov	x19, x0
  423a18:	cbnz	x0, 423a24 <wcrtomb@plt+0x1ead4>
  423a1c:	bl	404e10 <__errno_location@plt>
  423a20:	ldr	w21, [x0]
  423a24:	mov	x0, x20
  423a28:	bl	4364e0 <argp_usage@@Base+0x9000>
  423a2c:	cbz	w0, 423a3c <wcrtomb@plt+0x1eaec>
  423a30:	bl	404e10 <__errno_location@plt>
  423a34:	ldr	w0, [x0]
  423a38:	bl	431c7c <argp_usage@@Base+0x479c>
  423a3c:	mov	x0, x20
  423a40:	bl	4364f8 <argp_usage@@Base+0x9018>
  423a44:	cbz	w21, 423960 <wcrtomb@plt+0x1ea10>
  423a48:	bl	404e10 <__errno_location@plt>
  423a4c:	str	w21, [x0]
  423a50:	b	423960 <wcrtomb@plt+0x1ea10>
  423a54:	mov	x3, x1
  423a58:	mov	w4, w2
  423a5c:	cmn	w0, #0x64
  423a60:	b.eq	423a70 <wcrtomb@plt+0x1eb20>  // b.none
  423a64:	ldrb	w5, [x1]
  423a68:	cmp	w5, #0x2f
  423a6c:	b.ne	423a7c <wcrtomb@plt+0x1eb2c>  // b.any
  423a70:	mov	w1, w4
  423a74:	mov	x0, x3
  423a78:	b	404a80 <acl_get_file@plt>
  423a7c:	b	4238d8 <wcrtomb@plt+0x1e988>
  423a80:	stp	x29, x30, [sp, #-128]!
  423a84:	mov	x29, sp
  423a88:	stp	x19, x20, [sp, #16]
  423a8c:	stp	x21, x22, [sp, #32]
  423a90:	mov	x22, x1
  423a94:	stp	x23, x24, [sp, #48]
  423a98:	mov	w23, w2
  423a9c:	stp	x25, x26, [sp, #64]
  423aa0:	str	x27, [sp, #80]
  423aa4:	cbnz	x3, 423c04 <wcrtomb@plt+0x1ecb4>
  423aa8:	and	w4, w4, #0xff
  423aac:	cbz	w4, 423c2c <wcrtomb@plt+0x1ecdc>
  423ab0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  423ab4:	ldr	w0, [x0, #2264]
  423ab8:	bl	423578 <wcrtomb@plt+0x1e628>
  423abc:	cbz	w0, 423b0c <wcrtomb@plt+0x1ebbc>
  423ac0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  423ac4:	ldr	w0, [x0, #480]
  423ac8:	tbz	w0, #21, 423b0c <wcrtomb@plt+0x1ebbc>
  423acc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  423ad0:	ldr	x0, [x0, #1016]
  423ad4:	cbz	x0, 423adc <wcrtomb@plt+0x1eb8c>
  423ad8:	blr	x0
  423adc:	bl	404e10 <__errno_location@plt>
  423ae0:	ldr	w19, [x0]
  423ae4:	mov	w2, #0x5                   	// #5
  423ae8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  423aec:	mov	x0, #0x0                   	// #0
  423af0:	add	x1, x1, #0x422
  423af4:	bl	404d00 <dcgettext@plt>
  423af8:	mov	x2, x0
  423afc:	mov	x3, x22
  423b00:	mov	w1, w19
  423b04:	mov	w0, #0x0                   	// #0
  423b08:	bl	4042e0 <error@plt>
  423b0c:	ldp	x19, x20, [sp, #16]
  423b10:	ldp	x21, x22, [sp, #32]
  423b14:	ldp	x23, x24, [sp, #48]
  423b18:	ldp	x25, x26, [sp, #64]
  423b1c:	ldr	x27, [sp, #80]
  423b20:	ldp	x29, x30, [sp], #128
  423b24:	ret
  423b28:	mov	x1, x25
  423b2c:	mov	x0, x21
  423b30:	bl	404dd0 <strcspn@plt>
  423b34:	add	x19, x21, x0
  423b38:	ldrb	w0, [x21, x0]
  423b3c:	cmp	w0, #0x3a
  423b40:	b.ne	423b78 <wcrtomb@plt+0x1ec28>  // b.any
  423b44:	add	x27, x19, #0x1
  423b48:	mov	x1, x25
  423b4c:	mov	x0, x27
  423b50:	bl	404dd0 <strcspn@plt>
  423b54:	add	x19, x27, x0
  423b58:	ldrb	w0, [x27, x0]
  423b5c:	cmp	w0, #0x3a
  423b60:	b.ne	423b78 <wcrtomb@plt+0x1ec28>  // b.any
  423b64:	add	x19, x19, #0x1
  423b68:	mov	x1, x25
  423b6c:	mov	x0, x19
  423b70:	bl	404dd0 <strcspn@plt>
  423b74:	add	x19, x19, x0
  423b78:	sub	x27, x19, x21
  423b7c:	cmp	x21, x20
  423b80:	b.eq	423b94 <wcrtomb@plt+0x1ec44>  // b.none
  423b84:	mov	x2, x27
  423b88:	mov	x1, x21
  423b8c:	mov	x0, x20
  423b90:	bl	404210 <memmove@plt>
  423b94:	ldrb	w0, [x19]
  423b98:	add	x20, x20, x27
  423b9c:	cmp	w0, #0x3a
  423ba0:	b.ne	423bb4 <wcrtomb@plt+0x1ec64>  // b.any
  423ba4:	mov	x0, x19
  423ba8:	mov	x1, x26
  423bac:	bl	404dd0 <strcspn@plt>
  423bb0:	add	x19, x19, x0
  423bb4:	ldrb	w0, [x19]
  423bb8:	cmp	w0, #0x2c
  423bbc:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  423bc0:	b.ne	423c24 <wcrtomb@plt+0x1ecd4>  // b.any
  423bc4:	add	x21, x19, #0x1
  423bc8:	strb	w0, [x20], #1
  423bcc:	ldrb	w0, [x21]
  423bd0:	cbnz	w0, 423b28 <wcrtomb@plt+0x1ebd8>
  423bd4:	cmp	x21, x20
  423bd8:	b.eq	423be0 <wcrtomb@plt+0x1ec90>  // b.none
  423bdc:	strb	wzr, [x20]
  423be0:	mov	x0, x24
  423be4:	bl	404d30 <acl_from_text@plt>
  423be8:	mov	x19, x0
  423bec:	cbnz	x0, 423cbc <wcrtomb@plt+0x1ed6c>
  423bf0:	mov	x1, x22
  423bf4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  423bf8:	add	x0, x0, #0x467
  423bfc:	bl	424bc8 <wcrtomb@plt+0x1fc78>
  423c00:	b	423b0c <wcrtomb@plt+0x1ebbc>
  423c04:	adrp	x25, 44d000 <_obstack_memory_used@@Base+0x15380>
  423c08:	adrp	x26, 44d000 <_obstack_memory_used@@Base+0x15380>
  423c0c:	mov	x24, x3
  423c10:	mov	x20, x3
  423c14:	mov	x21, x3
  423c18:	add	x25, x25, #0x41b
  423c1c:	add	x26, x26, #0x41f
  423c20:	b	423bcc <wcrtomb@plt+0x1ec7c>
  423c24:	mov	x21, x19
  423c28:	b	423bcc <wcrtomb@plt+0x1ec7c>
  423c2c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  423c30:	add	x1, x1, #0x4aa
  423c34:	ldr	w0, [x0]
  423c38:	ldp	x2, x3, [x1]
  423c3c:	stp	x2, x3, [sp, #96]
  423c40:	ldp	x2, x3, [x1, #16]
  423c44:	stp	x2, x3, [sp, #112]
  423c48:	tbz	w0, #8, 423c54 <wcrtomb@plt+0x1ed04>
  423c4c:	mov	w1, #0x72                  	// #114
  423c50:	strb	w1, [sp, #102]
  423c54:	tbz	w0, #7, 423c60 <wcrtomb@plt+0x1ed10>
  423c58:	mov	w1, #0x77                  	// #119
  423c5c:	strb	w1, [sp, #103]
  423c60:	tbz	w0, #6, 423c6c <wcrtomb@plt+0x1ed1c>
  423c64:	mov	w1, #0x78                  	// #120
  423c68:	strb	w1, [sp, #104]
  423c6c:	tbz	w0, #5, 423c78 <wcrtomb@plt+0x1ed28>
  423c70:	mov	w1, #0x72                  	// #114
  423c74:	strb	w1, [sp, #113]
  423c78:	tbz	w0, #4, 423c84 <wcrtomb@plt+0x1ed34>
  423c7c:	mov	w1, #0x77                  	// #119
  423c80:	strb	w1, [sp, #114]
  423c84:	tbz	w0, #3, 423c90 <wcrtomb@plt+0x1ed40>
  423c88:	mov	w1, #0x78                  	// #120
  423c8c:	strb	w1, [sp, #115]
  423c90:	tbz	w0, #2, 423c9c <wcrtomb@plt+0x1ed4c>
  423c94:	mov	w1, #0x72                  	// #114
  423c98:	strb	w1, [sp, #124]
  423c9c:	tbz	w0, #1, 423ca8 <wcrtomb@plt+0x1ed58>
  423ca0:	mov	w1, #0x77                  	// #119
  423ca4:	strb	w1, [sp, #125]
  423ca8:	tbz	w0, #0, 423cb4 <wcrtomb@plt+0x1ed64>
  423cac:	mov	w0, #0x78                  	// #120
  423cb0:	strb	w0, [sp, #126]
  423cb4:	add	x0, sp, #0x60
  423cb8:	b	423be4 <wcrtomb@plt+0x1ec94>
  423cbc:	mov	x3, x0
  423cc0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x36380>
  423cc4:	mov	w2, w23
  423cc8:	mov	x1, x22
  423ccc:	ldr	w0, [x0, #2264]
  423cd0:	bl	423714 <wcrtomb@plt+0x1e7c4>
  423cd4:	cmn	w0, #0x1
  423cd8:	b.ne	423d28 <wcrtomb@plt+0x1edd8>  // b.any
  423cdc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  423ce0:	ldr	w0, [x0, #480]
  423ce4:	tbz	w0, #21, 423d28 <wcrtomb@plt+0x1edd8>
  423ce8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  423cec:	ldr	x0, [x0, #1016]
  423cf0:	cbz	x0, 423cf8 <wcrtomb@plt+0x1eda8>
  423cf4:	blr	x0
  423cf8:	bl	404e10 <__errno_location@plt>
  423cfc:	ldr	w20, [x0]
  423d00:	mov	w2, #0x5                   	// #5
  423d04:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  423d08:	mov	x0, #0x0                   	// #0
  423d0c:	add	x1, x1, #0x475
  423d10:	bl	404d00 <dcgettext@plt>
  423d14:	mov	x2, x0
  423d18:	mov	x3, x22
  423d1c:	mov	w1, w20
  423d20:	mov	w0, #0x0                   	// #0
  423d24:	bl	4042e0 <error@plt>
  423d28:	mov	x0, x19
  423d2c:	bl	404f20 <acl_free@plt>
  423d30:	b	423b0c <wcrtomb@plt+0x1ebbc>
  423d34:	stp	x29, x30, [sp, #-48]!
  423d38:	mov	x29, sp
  423d3c:	stp	x19, x20, [sp, #16]
  423d40:	mov	x20, x1
  423d44:	mov	x19, #0x0                   	// #0
  423d48:	str	x21, [sp, #32]
  423d4c:	mov	x21, x0
  423d50:	ldr	x0, [x20, #16]
  423d54:	cmp	x0, x19
  423d58:	b.hi	423d70 <wcrtomb@plt+0x1ee20>  // b.pmore
  423d5c:	mov	w0, #0x0                   	// #0
  423d60:	ldp	x19, x20, [sp, #16]
  423d64:	ldr	x21, [sp, #32]
  423d68:	ldp	x29, x30, [sp], #48
  423d6c:	ret
  423d70:	ldr	x0, [x20]
  423d74:	mov	x1, x21
  423d78:	mov	w2, #0x0                   	// #0
  423d7c:	ldr	x0, [x0, x19, lsl #3]
  423d80:	add	x19, x19, #0x1
  423d84:	bl	404be0 <fnmatch@plt>
  423d88:	cbnz	w0, 423d50 <wcrtomb@plt+0x1ee00>
  423d8c:	mov	w0, #0x1                   	// #1
  423d90:	b	423d60 <wcrtomb@plt+0x1ee10>
  423d94:	stp	x29, x30, [sp, #-32]!
  423d98:	mov	x29, sp
  423d9c:	stp	x19, x20, [sp, #16]
  423da0:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  423da4:	add	x19, x19, #0xd40
  423da8:	mov	x20, x0
  423dac:	ldr	x2, [x19, #8]
  423db0:	cbz	x2, 423dcc <wcrtomb@plt+0x1ee7c>
  423db4:	mov	x1, x19
  423db8:	bl	423d34 <wcrtomb@plt+0x1ede4>
  423dbc:	and	w1, w0, #0xff
  423dc0:	cbnz	w1, 423dd4 <wcrtomb@plt+0x1ee84>
  423dc4:	mov	w0, #0x1                   	// #1
  423dc8:	b	423ddc <wcrtomb@plt+0x1ee8c>
  423dcc:	and	w1, w1, #0xff
  423dd0:	cbz	w1, 423de8 <wcrtomb@plt+0x1ee98>
  423dd4:	ldr	x0, [x19, #32]
  423dd8:	cbnz	x0, 423e04 <wcrtomb@plt+0x1eeb4>
  423ddc:	ldp	x19, x20, [sp, #16]
  423de0:	ldp	x29, x30, [sp], #32
  423de4:	ret
  423de8:	mov	x2, #0x5                   	// #5
  423dec:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  423df0:	add	x1, x1, #0x4ca
  423df4:	bl	4046a0 <strncmp@plt>
  423df8:	cmp	w0, #0x0
  423dfc:	cset	w1, eq  // eq = none
  423e00:	b	423dc0 <wcrtomb@plt+0x1ee70>
  423e04:	add	x1, x19, #0x18
  423e08:	mov	x0, x20
  423e0c:	ldp	x19, x20, [sp, #16]
  423e10:	ldp	x29, x30, [sp], #32
  423e14:	b	423d34 <wcrtomb@plt+0x1ede4>
  423e18:	cmp	x1, #0x0
  423e1c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  423e20:	b.eq	423ff8 <wcrtomb@plt+0x1f0a8>  // b.none
  423e24:	stp	x29, x30, [sp, #-192]!
  423e28:	mov	x29, sp
  423e2c:	stp	x19, x20, [sp, #16]
  423e30:	stp	x21, x22, [sp, #32]
  423e34:	stp	x23, x24, [sp, #48]
  423e38:	mov	x23, x1
  423e3c:	mov	x24, x2
  423e40:	stp	x25, x26, [sp, #64]
  423e44:	mov	x26, x0
  423e48:	mov	x22, x23
  423e4c:	stp	x27, x28, [sp, #80]
  423e50:	bl	404280 <strlen@plt>
  423e54:	mov	x20, x0
  423e58:	adrp	x27, 44f000 <_obstack_memory_used@@Base+0x17380>
  423e5c:	add	x27, x27, #0xfd
  423e60:	sxtw	x20, w20
  423e64:	mov	w25, #0x0                   	// #0
  423e68:	mov	w28, #0x2c                  	// #44
  423e6c:	add	x0, sp, #0x68
  423e70:	adrp	x4, 404000 <mbrtowc@plt-0x1f0>
  423e74:	adrp	x3, 436000 <argp_usage@@Base+0x8b20>
  423e78:	add	x4, x4, #0xae0
  423e7c:	add	x3, x3, #0xd44
  423e80:	mov	x2, #0x0                   	// #0
  423e84:	mov	x1, #0x0                   	// #0
  423e88:	bl	437aa0 <_obstack_begin@@Base>
  423e8c:	mov	x1, x27
  423e90:	mov	x0, x22
  423e94:	bl	404dd0 <strcspn@plt>
  423e98:	mov	x19, x0
  423e9c:	cbnz	w0, 423f3c <wcrtomb@plt+0x1efec>
  423ea0:	ldp	x0, x1, [sp, #128]
  423ea4:	cmp	x1, x0
  423ea8:	b.ne	423eb8 <wcrtomb@plt+0x1ef68>  // b.any
  423eac:	add	x0, sp, #0x68
  423eb0:	mov	x1, #0x1                   	// #1
  423eb4:	bl	437acc <_obstack_newchunk@@Base>
  423eb8:	ldr	x0, [sp, #128]
  423ebc:	add	x1, x0, #0x1
  423ec0:	str	x1, [sp, #128]
  423ec4:	strb	wzr, [x0]
  423ec8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  423ecc:	ldr	x1, [x0, #3936]
  423ed0:	ldp	x0, x3, [sp, #120]
  423ed4:	cmp	x0, x3
  423ed8:	b.ne	423ee8 <wcrtomb@plt+0x1ef98>  // b.any
  423edc:	ldrb	w2, [sp, #184]
  423ee0:	orr	w2, w2, #0x2
  423ee4:	strb	w2, [sp, #184]
  423ee8:	ldr	x2, [sp, #152]
  423eec:	ldr	x4, [sp, #136]
  423ef0:	add	x3, x3, x2
  423ef4:	bic	x2, x3, x2
  423ef8:	ldr	x3, [sp, #112]
  423efc:	sub	x5, x2, x3
  423f00:	sub	x3, x4, x3
  423f04:	cmp	x5, x3
  423f08:	csel	x2, x2, x4, ls  // ls = plast
  423f0c:	stp	x2, x2, [sp, #120]
  423f10:	bl	404290 <fputs@plt>
  423f14:	add	x0, sp, #0x68
  423f18:	mov	x1, #0x0                   	// #0
  423f1c:	bl	437c0c <_obstack_free@@Base>
  423f20:	ldp	x19, x20, [sp, #16]
  423f24:	ldp	x21, x22, [sp, #32]
  423f28:	ldp	x23, x24, [sp, #48]
  423f2c:	ldp	x25, x26, [sp, #64]
  423f30:	ldp	x27, x28, [sp, #80]
  423f34:	ldp	x29, x30, [sp], #192
  423f38:	ret
  423f3c:	cmp	x23, x22
  423f40:	b.eq	423f6c <wcrtomb@plt+0x1f01c>  // b.none
  423f44:	ldp	x1, x0, [sp, #128]
  423f48:	cmp	x1, x0
  423f4c:	b.ne	423f5c <wcrtomb@plt+0x1f00c>  // b.any
  423f50:	add	x0, sp, #0x68
  423f54:	mov	x1, #0x1                   	// #1
  423f58:	bl	437acc <_obstack_newchunk@@Base>
  423f5c:	ldr	x0, [sp, #128]
  423f60:	add	x1, x0, #0x1
  423f64:	str	x1, [sp, #128]
  423f68:	strb	w28, [x0]
  423f6c:	ldp	x1, x0, [sp, #128]
  423f70:	sub	x0, x0, x1
  423f74:	cmp	x20, x0
  423f78:	b.ls	423f88 <wcrtomb@plt+0x1f038>  // b.plast
  423f7c:	mov	x1, x20
  423f80:	add	x0, sp, #0x68
  423f84:	bl	437acc <_obstack_newchunk@@Base>
  423f88:	ldr	x0, [sp, #128]
  423f8c:	mov	x1, x26
  423f90:	mov	x2, x20
  423f94:	sxtw	x21, w19
  423f98:	bl	404200 <memcpy@plt>
  423f9c:	ldp	x0, x1, [sp, #128]
  423fa0:	add	x0, x0, x20
  423fa4:	str	x0, [sp, #128]
  423fa8:	sub	x0, x1, x0
  423fac:	cmp	x0, w19, sxtw
  423fb0:	b.cs	423fc0 <wcrtomb@plt+0x1f070>  // b.hs, b.nlast
  423fb4:	mov	x1, x21
  423fb8:	add	x0, sp, #0x68
  423fbc:	bl	437acc <_obstack_newchunk@@Base>
  423fc0:	ldr	x0, [sp, #128]
  423fc4:	mov	x2, x21
  423fc8:	mov	x1, x22
  423fcc:	add	w19, w19, #0x1
  423fd0:	add	w25, w25, w19
  423fd4:	bl	404200 <memcpy@plt>
  423fd8:	ldr	x0, [sp, #128]
  423fdc:	cmp	x24, w25, sxtw
  423fe0:	add	x0, x0, x21
  423fe4:	str	x0, [sp, #128]
  423fe8:	add	x21, x21, #0x1
  423fec:	add	x22, x22, x21
  423ff0:	b.cs	423e8c <wcrtomb@plt+0x1ef3c>  // b.hs, b.nlast
  423ff4:	b	423ea0 <wcrtomb@plt+0x1ef50>
  423ff8:	ret
  423ffc:	stp	x29, x30, [sp, #-64]!
  424000:	mov	x29, sp
  424004:	stp	x19, x20, [sp, #16]
  424008:	mov	x20, x2
  42400c:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  424010:	stp	x21, x22, [sp, #32]
  424014:	ldr	w2, [x2, #904]
  424018:	stp	x23, x24, [sp, #48]
  42401c:	cmp	w2, #0x0
  424020:	b.le	424174 <wcrtomb@plt+0x1f224>
  424024:	mov	w22, w0
  424028:	mov	x19, x1
  42402c:	mov	w24, w4
  424030:	add	x2, x20, #0x58
  424034:	bl	423350 <wcrtomb@plt+0x1e400>
  424038:	cbz	w0, 424174 <wcrtomb@plt+0x1f224>
  42403c:	cmn	w0, #0x1
  424040:	b.ne	424064 <wcrtomb@plt+0x1f114>  // b.any
  424044:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424048:	mov	x1, x19
  42404c:	add	x0, x0, #0x4d0
  424050:	ldp	x19, x20, [sp, #16]
  424054:	ldp	x21, x22, [sp, #32]
  424058:	ldp	x23, x24, [sp, #48]
  42405c:	ldp	x29, x30, [sp], #64
  424060:	b	424bc8 <wcrtomb@plt+0x1fc78>
  424064:	mov	x1, x19
  424068:	mov	w0, w22
  42406c:	mov	w2, #0x8000                	// #32768
  424070:	bl	423a54 <wcrtomb@plt+0x1eb04>
  424074:	mov	x23, x0
  424078:	cbnz	x0, 4240d8 <wcrtomb@plt+0x1f188>
  42407c:	bl	404e10 <__errno_location@plt>
  424080:	ldr	w0, [x0]
  424084:	cmp	w0, #0x5f
  424088:	b.eq	42409c <wcrtomb@plt+0x1f14c>  // b.none
  42408c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424090:	mov	x1, x19
  424094:	add	x0, x0, #0x4e0
  424098:	bl	424bc8 <wcrtomb@plt+0x1fc78>
  42409c:	cbnz	w24, 424174 <wcrtomb@plt+0x1f224>
  4240a0:	mov	w0, w22
  4240a4:	mov	x1, x19
  4240a8:	mov	w2, #0x4000                	// #16384
  4240ac:	bl	423a54 <wcrtomb@plt+0x1eb04>
  4240b0:	mov	x22, x0
  4240b4:	cbnz	x0, 424120 <wcrtomb@plt+0x1f1d0>
  4240b8:	bl	404e10 <__errno_location@plt>
  4240bc:	ldr	w0, [x0]
  4240c0:	cmp	w0, #0x5f
  4240c4:	b.eq	424174 <wcrtomb@plt+0x1f224>  // b.none
  4240c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4240cc:	mov	x1, x19
  4240d0:	add	x0, x0, #0x4e0
  4240d4:	b	424050 <wcrtomb@plt+0x1f100>
  4240d8:	mov	x1, #0x0                   	// #0
  4240dc:	bl	4048e0 <acl_to_text@plt>
  4240e0:	mov	x21, x0
  4240e4:	mov	x0, x23
  4240e8:	bl	404f20 <acl_free@plt>
  4240ec:	cbnz	x21, 424100 <wcrtomb@plt+0x1f1b0>
  4240f0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4240f4:	mov	x1, x19
  4240f8:	add	x0, x0, #0x4f0
  4240fc:	b	424098 <wcrtomb@plt+0x1f148>
  424100:	mov	x0, x21
  424104:	bl	436f10 <argp_usage@@Base+0x9a30>
  424108:	add	x1, x20, #0x40
  42410c:	str	x0, [x20, #56]
  424110:	bl	4234fc <wcrtomb@plt+0x1e5ac>
  424114:	mov	x0, x21
  424118:	bl	404f20 <acl_free@plt>
  42411c:	b	42409c <wcrtomb@plt+0x1f14c>
  424120:	mov	x1, #0x0                   	// #0
  424124:	bl	4048e0 <acl_to_text@plt>
  424128:	mov	x21, x0
  42412c:	mov	x0, x22
  424130:	bl	404f20 <acl_free@plt>
  424134:	cbnz	x21, 424148 <wcrtomb@plt+0x1f1f8>
  424138:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42413c:	mov	x1, x19
  424140:	add	x0, x0, #0x4f0
  424144:	b	424050 <wcrtomb@plt+0x1f100>
  424148:	mov	x0, x21
  42414c:	bl	436f10 <argp_usage@@Base+0x9a30>
  424150:	str	x0, [x20, #72]
  424154:	add	x1, x20, #0x50
  424158:	bl	4234fc <wcrtomb@plt+0x1e5ac>
  42415c:	mov	x0, x21
  424160:	ldp	x19, x20, [sp, #16]
  424164:	ldp	x21, x22, [sp, #32]
  424168:	ldp	x23, x24, [sp, #48]
  42416c:	ldp	x29, x30, [sp], #64
  424170:	b	404f20 <acl_free@plt>
  424174:	ldp	x19, x20, [sp, #16]
  424178:	ldp	x21, x22, [sp, #32]
  42417c:	ldp	x23, x24, [sp, #48]
  424180:	ldp	x29, x30, [sp], #64
  424184:	ret
  424188:	stp	x29, x30, [sp, #-48]!
  42418c:	mov	x29, sp
  424190:	stp	x19, x20, [sp, #16]
  424194:	mov	x19, x0
  424198:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42419c:	stp	x21, x22, [sp, #32]
  4241a0:	ldr	w0, [x0, #904]
  4241a4:	cmp	w0, #0x0
  4241a8:	b.le	424208 <wcrtomb@plt+0x1f2b8>
  4241ac:	and	w21, w2, #0xff
  4241b0:	cmp	w21, #0x32
  4241b4:	b.eq	424208 <wcrtomb@plt+0x1f2b8>  // b.none
  4241b8:	ldr	x3, [x19, #56]
  4241bc:	add	x22, x19, #0x68
  4241c0:	mov	x0, x22
  4241c4:	mov	x20, x1
  4241c8:	mov	w4, #0x0                   	// #0
  4241cc:	mov	w2, #0x8000                	// #32768
  4241d0:	bl	423a80 <wcrtomb@plt+0x1eb30>
  4241d4:	cmp	w21, #0x35
  4241d8:	mov	w0, #0x44                  	// #68
  4241dc:	ccmp	w21, w0, #0x4, ne  // ne = any
  4241e0:	b.ne	424208 <wcrtomb@plt+0x1f2b8>  // b.any
  4241e4:	mov	x1, x20
  4241e8:	mov	x0, x22
  4241ec:	ldp	x21, x22, [sp, #32]
  4241f0:	mov	w4, #0x1                   	// #1
  4241f4:	ldr	x3, [x19, #72]
  4241f8:	mov	w2, #0x4000                	// #16384
  4241fc:	ldp	x19, x20, [sp, #16]
  424200:	ldp	x29, x30, [sp], #48
  424204:	b	423a80 <wcrtomb@plt+0x1eb30>
  424208:	ldp	x19, x20, [sp, #16]
  42420c:	ldp	x21, x22, [sp, #32]
  424210:	ldp	x29, x30, [sp], #48
  424214:	ret
  424218:	stp	x29, x30, [sp, #-32]!
  42421c:	tst	w1, #0xff
  424220:	mov	x29, sp
  424224:	stp	x19, x20, [sp, #16]
  424228:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  42422c:	add	x2, x19, #0xd40
  424230:	add	x19, x2, #0x18
  424234:	mov	x20, x0
  424238:	csel	x19, x19, x2, eq  // eq = none
  42423c:	ldp	x1, x0, [x19, #8]
  424240:	cmp	x0, x1
  424244:	b.ne	424268 <wcrtomb@plt+0x1f318>  // b.any
  424248:	cbnz	x0, 424254 <wcrtomb@plt+0x1f304>
  42424c:	mov	x0, #0x4                   	// #4
  424250:	str	x0, [x19, #8]
  424254:	ldr	x0, [x19]
  424258:	mov	x2, #0x8                   	// #8
  42425c:	add	x1, x19, x2
  424260:	bl	436e14 <argp_usage@@Base+0x9934>
  424264:	str	x0, [x19]
  424268:	ldr	x1, [x19]
  42426c:	ldr	x0, [x19, #16]
  424270:	add	x2, x0, #0x1
  424274:	str	x2, [x19, #16]
  424278:	str	x20, [x1, x0, lsl #3]
  42427c:	ldp	x19, x20, [sp, #16]
  424280:	ldp	x29, x30, [sp], #32
  424284:	ret
  424288:	stp	x29, x30, [sp, #-32]!
  42428c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  424290:	mov	x29, sp
  424294:	str	x19, [sp, #16]
  424298:	add	x19, x0, #0xd40
  42429c:	ldr	x1, [x19, #8]
  4242a0:	cbz	x1, 4242ac <wcrtomb@plt+0x1f35c>
  4242a4:	ldr	x0, [x0, #3392]
  4242a8:	bl	404ae0 <free@plt>
  4242ac:	ldr	x0, [x19, #32]
  4242b0:	cbz	x0, 4242c4 <wcrtomb@plt+0x1f374>
  4242b4:	ldr	x0, [x19, #24]
  4242b8:	ldr	x19, [sp, #16]
  4242bc:	ldp	x29, x30, [sp], #32
  4242c0:	b	404ae0 <free@plt>
  4242c4:	ldr	x19, [sp, #16]
  4242c8:	ldp	x29, x30, [sp], #32
  4242cc:	ret
  4242d0:	stp	x29, x30, [sp, #-112]!
  4242d4:	mov	x29, sp
  4242d8:	stp	x25, x26, [sp, #64]
  4242dc:	mov	w26, w0
  4242e0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4242e4:	stp	x19, x20, [sp, #16]
  4242e8:	ldr	w0, [x0, #664]
  4242ec:	stp	x21, x22, [sp, #32]
  4242f0:	cmp	w0, #0x0
  4242f4:	stp	x23, x24, [sp, #48]
  4242f8:	stp	x27, x28, [sp, #80]
  4242fc:	str	x2, [sp, #96]
  424300:	b.le	4244d0 <wcrtomb@plt+0x1f580>
  424304:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  424308:	add	x19, x19, #0xd40
  42430c:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  424310:	mov	x24, x1
  424314:	mov	w21, w3
  424318:	add	x22, x22, #0x248
  42431c:	ldr	x0, [x19, #48]
  424320:	cbnz	x0, 424334 <wcrtomb@plt+0x1f3e4>
  424324:	mov	x1, x22
  424328:	mov	x2, #0x1                   	// #1
  42432c:	bl	436e14 <argp_usage@@Base+0x9934>
  424330:	str	x0, [x19, #48]
  424334:	ldr	x2, [x22]
  424338:	ldr	x1, [x19, #48]
  42433c:	cbnz	w21, 4243b8 <wcrtomb@plt+0x1f468>
  424340:	mov	x3, x2
  424344:	mov	w0, w26
  424348:	mov	x2, x1
  42434c:	mov	x1, x24
  424350:	bl	429e3c <wcrtomb@plt+0x24eec>
  424354:	mov	x20, x0
  424358:	cmn	x0, #0x1
  42435c:	b.ne	424490 <wcrtomb@plt+0x1f540>  // b.any
  424360:	bl	404e10 <__errno_location@plt>
  424364:	ldr	w0, [x0]
  424368:	cmp	w0, #0x22
  42436c:	b.eq	4243a8 <wcrtomb@plt+0x1f458>  // b.none
  424370:	cmp	w21, #0x0
  424374:	mov	x1, x24
  424378:	ldp	x19, x20, [sp, #16]
  42437c:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  424380:	ldp	x21, x22, [sp, #32]
  424384:	add	x2, x2, #0x509
  424388:	ldp	x23, x24, [sp, #48]
  42438c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424390:	ldp	x25, x26, [sp, #64]
  424394:	add	x0, x0, #0x4fc
  424398:	ldp	x27, x28, [sp, #80]
  42439c:	csel	x0, x0, x2, eq  // eq = none
  4243a0:	ldp	x29, x30, [sp], #112
  4243a4:	b	424bc8 <wcrtomb@plt+0x1fc78>
  4243a8:	mov	x1, x22
  4243ac:	mov	x2, #0x1                   	// #1
  4243b0:	ldr	x0, [x19, #48]
  4243b4:	b	42432c <wcrtomb@plt+0x1f3dc>
  4243b8:	mov	w0, w21
  4243bc:	bl	404cc0 <flistxattr@plt>
  4243c0:	b	424354 <wcrtomb@plt+0x1f404>
  4243c4:	mov	x0, x23
  4243c8:	bl	404280 <strlen@plt>
  4243cc:	mov	x27, x0
  4243d0:	ldr	x3, [x22, #8]
  4243d4:	ldr	x2, [x19, #56]
  4243d8:	cbnz	w21, 424440 <wcrtomb@plt+0x1f4f0>
  4243dc:	mov	x4, x3
  4243e0:	mov	x1, x24
  4243e4:	mov	x3, x2
  4243e8:	mov	w0, w26
  4243ec:	mov	x2, x23
  4243f0:	bl	429aa4 <wcrtomb@plt+0x24b54>
  4243f4:	mov	x3, x0
  4243f8:	cmn	x0, #0x1
  4243fc:	b.ne	424450 <wcrtomb@plt+0x1f500>  // b.any
  424400:	bl	404e10 <__errno_location@plt>
  424404:	ldr	w0, [x0]
  424408:	cmp	w0, #0x22
  42440c:	b.eq	424428 <wcrtomb@plt+0x1f4d8>  // b.none
  424410:	cmp	w0, #0x3d
  424414:	b.eq	42447c <wcrtomb@plt+0x1f52c>  // b.none
  424418:	mov	x1, x24
  42441c:	mov	x0, x25
  424420:	bl	424bc8 <wcrtomb@plt+0x1fc78>
  424424:	b	42447c <wcrtomb@plt+0x1f52c>
  424428:	ldr	x0, [x19, #56]
  42442c:	mov	x1, x28
  424430:	mov	x2, #0x1                   	// #1
  424434:	bl	436e14 <argp_usage@@Base+0x9934>
  424438:	str	x0, [x19, #56]
  42443c:	b	4243d0 <wcrtomb@plt+0x1f480>
  424440:	mov	x1, x23
  424444:	mov	w0, w21
  424448:	bl	404b50 <fgetxattr@plt>
  42444c:	b	4243f4 <wcrtomb@plt+0x1f4a4>
  424450:	mov	x0, x23
  424454:	mov	w1, #0x1                   	// #1
  424458:	str	x3, [sp, #104]
  42445c:	bl	423d94 <wcrtomb@plt+0x1ee44>
  424460:	tst	w0, #0xff
  424464:	ldr	x3, [sp, #104]
  424468:	b.ne	42447c <wcrtomb@plt+0x1f52c>  // b.any
  42446c:	ldr	x2, [x19, #56]
  424470:	mov	x1, x23
  424474:	ldr	x0, [sp, #96]
  424478:	bl	411fa8 <wcrtomb@plt+0xd058>
  42447c:	add	x0, x27, #0x1
  424480:	sub	x20, x20, #0x1
  424484:	add	x23, x23, x0
  424488:	sub	x20, x20, x27
  42448c:	b	4244c8 <wcrtomb@plt+0x1f578>
  424490:	ldp	x23, x0, [x19, #48]
  424494:	cbnz	x0, 4244ac <wcrtomb@plt+0x1f55c>
  424498:	add	x1, x22, #0x8
  42449c:	mov	x2, #0x1                   	// #1
  4244a0:	mov	x0, #0x0                   	// #0
  4244a4:	bl	436e14 <argp_usage@@Base+0x9934>
  4244a8:	str	x0, [x19, #56]
  4244ac:	cmp	w21, #0x0
  4244b0:	adrp	x25, 44d000 <_obstack_memory_used@@Base+0x15380>
  4244b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4244b8:	add	x25, x25, #0x514
  4244bc:	add	x0, x0, #0x520
  4244c0:	add	x28, x22, #0x8
  4244c4:	csel	x25, x25, x0, eq  // eq = none
  4244c8:	cmp	x20, #0x0
  4244cc:	b.gt	4243c4 <wcrtomb@plt+0x1f474>
  4244d0:	ldp	x19, x20, [sp, #16]
  4244d4:	ldp	x21, x22, [sp, #32]
  4244d8:	ldp	x23, x24, [sp, #48]
  4244dc:	ldp	x25, x26, [sp, #64]
  4244e0:	ldp	x27, x28, [sp, #80]
  4244e4:	ldp	x29, x30, [sp], #112
  4244e8:	ret
  4244ec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4244f0:	ldr	w0, [x0, #992]
  4244f4:	cmp	w0, #0x0
  4244f8:	b.le	424560 <wcrtomb@plt+0x1f610>
  4244fc:	stp	x29, x30, [sp, #-32]!
  424500:	mov	x29, sp
  424504:	str	x19, [sp, #16]
  424508:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  42450c:	add	x19, x19, #0xd40
  424510:	ldr	w0, [x19, #64]
  424514:	cbnz	w0, 42454c <wcrtomb@plt+0x1f5fc>
  424518:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42451c:	ldr	x0, [x0, #1016]
  424520:	cbz	x0, 424528 <wcrtomb@plt+0x1f5d8>
  424524:	blr	x0
  424528:	mov	w2, #0x5                   	// #5
  42452c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424530:	mov	x0, #0x0                   	// #0
  424534:	add	x1, x1, #0x52a
  424538:	bl	404d00 <dcgettext@plt>
  42453c:	mov	x2, x0
  424540:	mov	w1, #0x0                   	// #0
  424544:	mov	w0, #0x0                   	// #0
  424548:	bl	4042e0 <error@plt>
  42454c:	mov	w0, #0x1                   	// #1
  424550:	str	w0, [x19, #64]
  424554:	ldr	x19, [sp, #16]
  424558:	ldp	x29, x30, [sp], #32
  42455c:	ret
  424560:	ret
  424564:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424568:	ldr	w0, [x0, #992]
  42456c:	cmp	w0, #0x0
  424570:	b.le	4245d8 <wcrtomb@plt+0x1f688>
  424574:	stp	x29, x30, [sp, #-32]!
  424578:	mov	x29, sp
  42457c:	str	x19, [sp, #16]
  424580:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  424584:	add	x19, x19, #0xd40
  424588:	ldr	w0, [x19, #68]
  42458c:	cbnz	w0, 4245c4 <wcrtomb@plt+0x1f674>
  424590:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424594:	ldr	x0, [x0, #1016]
  424598:	cbz	x0, 4245a0 <wcrtomb@plt+0x1f650>
  42459c:	blr	x0
  4245a0:	mov	w2, #0x5                   	// #5
  4245a4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  4245a8:	mov	x0, #0x0                   	// #0
  4245ac:	add	x1, x1, #0x52a
  4245b0:	bl	404d00 <dcgettext@plt>
  4245b4:	mov	x2, x0
  4245b8:	mov	w1, #0x0                   	// #0
  4245bc:	mov	w0, #0x0                   	// #0
  4245c0:	bl	4042e0 <error@plt>
  4245c4:	mov	w0, #0x1                   	// #1
  4245c8:	str	w0, [x19, #68]
  4245cc:	ldr	x19, [sp, #16]
  4245d0:	ldp	x29, x30, [sp], #32
  4245d4:	ret
  4245d8:	ret
  4245dc:	stp	x29, x30, [sp, #-112]!
  4245e0:	mov	x29, sp
  4245e4:	stp	x19, x20, [sp, #16]
  4245e8:	mov	x20, x0
  4245ec:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4245f0:	stp	x21, x22, [sp, #32]
  4245f4:	ldr	w0, [x0, #664]
  4245f8:	stp	x23, x24, [sp, #48]
  4245fc:	cmp	w0, #0x0
  424600:	stp	x25, x26, [sp, #64]
  424604:	stp	x27, x28, [sp, #80]
  424608:	b.le	424644 <wcrtomb@plt+0x1f6f4>
  42460c:	ldr	x0, [x20, #328]
  424610:	cbz	x0, 424644 <wcrtomb@plt+0x1f6f4>
  424614:	adrp	x25, 46e000 <_obstack_memory_used@@Base+0x36380>
  424618:	adrp	x26, 471000 <_obstack_memory_used@@Base+0x39380>
  42461c:	mov	x22, x1
  424620:	and	w27, w2, #0xff
  424624:	mov	w24, w3
  424628:	add	x25, x25, #0x8d8
  42462c:	add	x26, x26, #0x1e0
  424630:	mov	x23, #0x0                   	// #0
  424634:	mov	x28, #0x18                  	// #24
  424638:	ldr	x0, [x20, #328]
  42463c:	cmp	x0, x23
  424640:	b.hi	424660 <wcrtomb@plt+0x1f710>  // b.pmore
  424644:	ldp	x19, x20, [sp, #16]
  424648:	ldp	x21, x22, [sp, #32]
  42464c:	ldp	x23, x24, [sp, #48]
  424650:	ldp	x25, x26, [sp, #64]
  424654:	ldp	x27, x28, [sp, #80]
  424658:	ldp	x29, x30, [sp], #112
  42465c:	ret
  424660:	mul	x21, x23, x28
  424664:	cmp	w27, #0x30
  424668:	ldr	x0, [x20, #336]
  42466c:	ldr	x19, [x0, x21]
  424670:	add	x19, x19, #0xd
  424674:	b.ne	424698 <wcrtomb@plt+0x1f748>  // b.any
  424678:	mov	x0, x19
  42467c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424680:	add	x1, x1, #0x560
  424684:	bl	404a30 <strcmp@plt>
  424688:	cmp	w0, #0x0
  42468c:	cset	w0, ne  // ne = any
  424690:	cmp	w0, w24
  424694:	b.eq	424744 <wcrtomb@plt+0x1f7f4>  // b.none
  424698:	mov	x0, x19
  42469c:	mov	w1, #0x0                   	// #0
  4246a0:	bl	423d94 <wcrtomb@plt+0x1ee44>
  4246a4:	tst	w0, #0xff
  4246a8:	b.ne	424744 <wcrtomb@plt+0x1f7f4>  // b.any
  4246ac:	ldr	x0, [x20, #336]
  4246b0:	add	x0, x0, x21
  4246b4:	ldr	x3, [x0, #8]
  4246b8:	cbz	x3, 424744 <wcrtomb@plt+0x1f7f4>
  4246bc:	mov	x2, x19
  4246c0:	mov	x1, x22
  4246c4:	cmp	w27, #0x32
  4246c8:	mov	w5, #0x0                   	// #0
  4246cc:	ldr	x4, [x0, #16]
  4246d0:	ldr	w0, [x25]
  4246d4:	b.eq	42474c <wcrtomb@plt+0x1f7fc>  // b.none
  4246d8:	adrp	x21, 44d000 <_obstack_memory_used@@Base+0x15380>
  4246dc:	add	x21, x21, #0x54b
  4246e0:	bl	4294f8 <wcrtomb@plt+0x245a8>
  4246e4:	cmn	w0, #0x1
  4246e8:	b.ne	424744 <wcrtomb@plt+0x1f7f4>  // b.any
  4246ec:	ldr	w0, [x26]
  4246f0:	tbz	w0, #21, 424744 <wcrtomb@plt+0x1f7f4>
  4246f4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4246f8:	ldr	x0, [x0, #1016]
  4246fc:	cbz	x0, 424704 <wcrtomb@plt+0x1f7b4>
  424700:	blr	x0
  424704:	bl	404e10 <__errno_location@plt>
  424708:	ldr	w6, [x0]
  42470c:	mov	w2, #0x5                   	// #5
  424710:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424714:	mov	x0, #0x0                   	// #0
  424718:	add	x1, x1, #0x574
  42471c:	str	w6, [sp, #108]
  424720:	bl	404d00 <dcgettext@plt>
  424724:	mov	x2, x0
  424728:	ldr	w6, [sp, #108]
  42472c:	mov	x5, x22
  424730:	mov	x4, x19
  424734:	mov	x3, x21
  424738:	mov	w1, w6
  42473c:	mov	w0, #0x0                   	// #0
  424740:	bl	4042e0 <error@plt>
  424744:	add	x23, x23, #0x1
  424748:	b	424638 <wcrtomb@plt+0x1f6e8>
  42474c:	adrp	x21, 44d000 <_obstack_memory_used@@Base+0x15380>
  424750:	bl	4296e4 <wcrtomb@plt+0x24794>
  424754:	add	x21, x21, #0x556
  424758:	b	4246e4 <wcrtomb@plt+0x1f794>
  42475c:	stp	x29, x30, [sp, #-48]!
  424760:	mov	x29, sp
  424764:	stp	x19, x20, [sp, #16]
  424768:	mov	x19, x0
  42476c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424770:	stp	x21, x22, [sp, #32]
  424774:	mov	x20, x1
  424778:	ldr	w0, [x0, #652]
  42477c:	cmp	w0, #0x1
  424780:	b.gt	424798 <wcrtomb@plt+0x1f848>
  424784:	strb	wzr, [x1]
  424788:	ldp	x19, x20, [sp, #16]
  42478c:	ldp	x21, x22, [sp, #32]
  424790:	ldp	x29, x30, [sp], #48
  424794:	ret
  424798:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42479c:	ldr	w1, [x0, #664]
  4247a0:	cmp	w1, #0x0
  4247a4:	b.gt	4247c8 <wcrtomb@plt+0x1f878>
  4247a8:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4247ac:	ldr	w1, [x1, #992]
  4247b0:	cmp	w1, #0x0
  4247b4:	b.gt	4247c8 <wcrtomb@plt+0x1f878>
  4247b8:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  4247bc:	ldr	w1, [x1, #904]
  4247c0:	cmp	w1, #0x0
  4247c4:	b.le	424804 <wcrtomb@plt+0x1f8b4>
  4247c8:	mov	w1, #0x20                  	// #32
  4247cc:	strh	w1, [x20]
  4247d0:	ldr	w0, [x0, #664]
  4247d4:	cmp	w0, #0x0
  4247d8:	b.le	4247e4 <wcrtomb@plt+0x1f894>
  4247dc:	ldr	x0, [x19, #328]
  4247e0:	cbnz	x0, 424830 <wcrtomb@plt+0x1f8e0>
  4247e4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4247e8:	ldr	w0, [x0, #992]
  4247ec:	cmp	w0, #0x0
  4247f0:	b.le	424804 <wcrtomb@plt+0x1f8b4>
  4247f4:	ldr	x0, [x19, #48]
  4247f8:	cbz	x0, 424804 <wcrtomb@plt+0x1f8b4>
  4247fc:	mov	w0, #0x2e                  	// #46
  424800:	strb	w0, [x20]
  424804:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424808:	ldr	w0, [x0, #904]
  42480c:	cmp	w0, #0x0
  424810:	b.le	424788 <wcrtomb@plt+0x1f838>
  424814:	ldr	x0, [x19, #64]
  424818:	cbnz	x0, 424824 <wcrtomb@plt+0x1f8d4>
  42481c:	ldr	x0, [x19, #80]
  424820:	cbz	x0, 424788 <wcrtomb@plt+0x1f838>
  424824:	mov	w0, #0x2b                  	// #43
  424828:	strb	w0, [x20]
  42482c:	b	424788 <wcrtomb@plt+0x1f838>
  424830:	mov	x21, #0x0                   	// #0
  424834:	mov	x22, #0x18                  	// #24
  424838:	ldr	x0, [x19, #328]
  42483c:	cmp	x0, x21
  424840:	b.ls	4247e4 <wcrtomb@plt+0x1f894>  // b.plast
  424844:	mul	x0, x21, x22
  424848:	add	x21, x21, #0x1
  42484c:	ldr	x1, [x19, #336]
  424850:	ldr	x0, [x1, x0]
  424854:	mov	w1, #0x0                   	// #0
  424858:	add	x0, x0, #0xd
  42485c:	bl	423d94 <wcrtomb@plt+0x1ee44>
  424860:	tst	w0, #0xff
  424864:	b.ne	424838 <wcrtomb@plt+0x1f8e8>  // b.any
  424868:	mov	w0, #0x2a                  	// #42
  42486c:	strb	w0, [x20]
  424870:	b	4247e4 <wcrtomb@plt+0x1f894>
  424874:	stp	x29, x30, [sp, #-80]!
  424878:	mov	x29, sp
  42487c:	stp	x19, x20, [sp, #16]
  424880:	mov	x19, x0
  424884:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424888:	stp	x21, x22, [sp, #32]
  42488c:	ldr	w0, [x0, #652]
  424890:	stp	x23, x24, [sp, #48]
  424894:	cmp	w0, #0x2
  424898:	str	x25, [sp, #64]
  42489c:	b.le	424964 <wcrtomb@plt+0x1fa14>
  4248a0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4248a4:	ldr	w0, [x0, #992]
  4248a8:	cmp	w0, #0x0
  4248ac:	b.le	4248d0 <wcrtomb@plt+0x1f980>
  4248b0:	ldr	x3, [x19, #48]
  4248b4:	cbz	x3, 4248d0 <wcrtomb@plt+0x1f980>
  4248b8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4248bc:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  4248c0:	mov	w1, #0x1                   	// #1
  4248c4:	add	x2, x2, #0x5a9
  4248c8:	ldr	x0, [x0, #3936]
  4248cc:	bl	404a20 <__fprintf_chk@plt>
  4248d0:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4248d4:	ldr	w0, [x0, #904]
  4248d8:	cmp	w0, #0x0
  4248dc:	b.le	42494c <wcrtomb@plt+0x1f9fc>
  4248e0:	ldr	x0, [x19, #64]
  4248e4:	cbnz	x0, 4248f0 <wcrtomb@plt+0x1f9a0>
  4248e8:	ldr	x0, [x19, #80]
  4248ec:	cbz	x0, 42494c <wcrtomb@plt+0x1f9fc>
  4248f0:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  4248f4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4248f8:	add	x0, x0, #0x5b2
  4248fc:	ldr	x1, [x20, #3936]
  424900:	bl	404290 <fputs@plt>
  424904:	ldp	x1, x2, [x19, #56]
  424908:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42490c:	add	x0, x0, #0x41a
  424910:	bl	423e18 <wcrtomb@plt+0x1eec8>
  424914:	ldr	x0, [x19, #64]
  424918:	cbz	x0, 424930 <wcrtomb@plt+0x1f9e0>
  42491c:	ldr	x0, [x19, #80]
  424920:	cbz	x0, 424930 <wcrtomb@plt+0x1f9e0>
  424924:	ldr	x1, [x20, #3936]
  424928:	mov	w0, #0x2c                  	// #44
  42492c:	bl	404420 <fputc@plt>
  424930:	ldp	x1, x2, [x19, #72]
  424934:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424938:	add	x0, x0, #0x5b8
  42493c:	bl	423e18 <wcrtomb@plt+0x1eec8>
  424940:	ldr	x1, [x20, #3936]
  424944:	mov	w0, #0xa                   	// #10
  424948:	bl	404420 <fputc@plt>
  42494c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424950:	ldr	w0, [x0, #664]
  424954:	cmp	w0, #0x0
  424958:	b.le	424964 <wcrtomb@plt+0x1fa14>
  42495c:	ldr	x0, [x19, #328]
  424960:	cbnz	x0, 4249d4 <wcrtomb@plt+0x1fa84>
  424964:	ldp	x19, x20, [sp, #16]
  424968:	ldp	x21, x22, [sp, #32]
  42496c:	ldp	x23, x24, [sp, #48]
  424970:	ldr	x25, [sp, #64]
  424974:	ldp	x29, x30, [sp], #80
  424978:	ret
  42497c:	mul	x23, x20, x24
  424980:	mov	w1, #0x0                   	// #0
  424984:	ldr	x0, [x19, #336]
  424988:	ldr	x21, [x0, x23]
  42498c:	add	x21, x21, #0xd
  424990:	mov	x0, x21
  424994:	bl	423d94 <wcrtomb@plt+0x1ee44>
  424998:	tst	w0, #0xff
  42499c:	b.ne	4249c0 <wcrtomb@plt+0x1fa70>  // b.any
  4249a0:	ldr	x0, [x19, #336]
  4249a4:	mov	x4, x21
  4249a8:	mov	x2, x22
  4249ac:	mov	w1, #0x1                   	// #1
  4249b0:	add	x0, x0, x23
  4249b4:	ldr	x3, [x0, #16]
  4249b8:	ldr	x0, [x25, #3936]
  4249bc:	bl	404a20 <__fprintf_chk@plt>
  4249c0:	add	x20, x20, #0x1
  4249c4:	ldr	x0, [x19, #328]
  4249c8:	cmp	x0, x20
  4249cc:	b.hi	42497c <wcrtomb@plt+0x1fa2c>  // b.pmore
  4249d0:	b	424964 <wcrtomb@plt+0x1fa14>
  4249d4:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x15380>
  4249d8:	mov	x20, #0x0                   	// #0
  4249dc:	add	x22, x22, #0x5c1
  4249e0:	mov	x24, #0x18                  	// #24
  4249e4:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x39380>
  4249e8:	b	4249c4 <wcrtomb@plt+0x1fa74>
  4249ec:	tst	x0, #0x100
  4249f0:	mov	w3, #0x2d                  	// #45
  4249f4:	mov	w2, #0x72                  	// #114
  4249f8:	csel	w2, w2, w3, ne  // ne = any
  4249fc:	tst	x0, #0x80
  424a00:	strb	w2, [x1]
  424a04:	mov	w2, #0x77                  	// #119
  424a08:	csel	w2, w2, w3, ne  // ne = any
  424a0c:	strb	w2, [x1, #1]
  424a10:	and	w2, w0, #0x40
  424a14:	tbz	w0, #11, 424ab4 <wcrtomb@plt+0x1fb64>
  424a18:	cmp	w2, #0x0
  424a1c:	mov	w3, #0x53                  	// #83
  424a20:	mov	w2, #0x73                  	// #115
  424a24:	csel	w2, w2, w3, ne  // ne = any
  424a28:	tst	x0, #0x20
  424a2c:	mov	w3, #0x2d                  	// #45
  424a30:	strb	w2, [x1, #2]
  424a34:	mov	w2, #0x72                  	// #114
  424a38:	csel	w2, w2, w3, ne  // ne = any
  424a3c:	tst	x0, #0x10
  424a40:	strb	w2, [x1, #3]
  424a44:	mov	w2, #0x77                  	// #119
  424a48:	csel	w2, w2, w3, ne  // ne = any
  424a4c:	strb	w2, [x1, #4]
  424a50:	and	w2, w0, #0x8
  424a54:	tbz	w0, #10, 424ac0 <wcrtomb@plt+0x1fb70>
  424a58:	cmp	w2, #0x0
  424a5c:	mov	w3, #0x53                  	// #83
  424a60:	mov	w2, #0x73                  	// #115
  424a64:	csel	w2, w2, w3, ne  // ne = any
  424a68:	tst	x0, #0x4
  424a6c:	mov	w3, #0x72                  	// #114
  424a70:	strb	w2, [x1, #5]
  424a74:	mov	w2, #0x2d                  	// #45
  424a78:	csel	w3, w3, w2, ne  // ne = any
  424a7c:	tst	x0, #0x2
  424a80:	strb	w3, [x1, #6]
  424a84:	mov	w3, #0x77                  	// #119
  424a88:	csel	w3, w3, w2, ne  // ne = any
  424a8c:	strb	w3, [x1, #7]
  424a90:	and	w3, w0, #0x1
  424a94:	tbz	w0, #9, 424acc <wcrtomb@plt+0x1fb7c>
  424a98:	cmp	w3, #0x0
  424a9c:	mov	w0, #0x74                  	// #116
  424aa0:	mov	w2, #0x54                  	// #84
  424aa4:	csel	w0, w0, w2, ne  // ne = any
  424aa8:	strb	w0, [x1, #8]
  424aac:	strb	wzr, [x1, #9]
  424ab0:	ret
  424ab4:	cmp	w2, #0x0
  424ab8:	mov	w2, #0x78                  	// #120
  424abc:	b	424a24 <wcrtomb@plt+0x1fad4>
  424ac0:	cmp	w2, #0x0
  424ac4:	mov	w2, #0x78                  	// #120
  424ac8:	b	424a64 <wcrtomb@plt+0x1fb14>
  424acc:	cmp	w3, #0x0
  424ad0:	mov	w0, #0x78                  	// #120
  424ad4:	b	424aa4 <wcrtomb@plt+0x1fb54>
  424ad8:	stp	x29, x30, [sp, #-48]!
  424adc:	mov	x29, sp
  424ae0:	stp	x19, x20, [sp, #16]
  424ae4:	mov	x20, x0
  424ae8:	stp	x21, x22, [sp, #32]
  424aec:	mov	x21, x1
  424af0:	bl	404e10 <__errno_location@plt>
  424af4:	ldr	w22, [x0]
  424af8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424afc:	ldr	x0, [x0, #1016]
  424b00:	cbz	x0, 424b08 <wcrtomb@plt+0x1fbb8>
  424b04:	blr	x0
  424b08:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424b0c:	add	x1, x1, #0x5ce
  424b10:	mov	w2, #0x5                   	// #5
  424b14:	mov	x0, #0x0                   	// #0
  424b18:	bl	404d00 <dcgettext@plt>
  424b1c:	mov	x19, x0
  424b20:	mov	x0, x21
  424b24:	bl	436084 <argp_usage@@Base+0x8ba4>
  424b28:	mov	x4, x20
  424b2c:	mov	x3, x0
  424b30:	mov	x2, x19
  424b34:	mov	w1, w22
  424b38:	mov	w0, #0x0                   	// #0
  424b3c:	bl	4042e0 <error@plt>
  424b40:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  424b44:	mov	w1, #0x2                   	// #2
  424b48:	ldp	x19, x20, [sp, #16]
  424b4c:	str	w1, [x0, #3464]
  424b50:	ldp	x21, x22, [sp, #32]
  424b54:	ldp	x29, x30, [sp], #48
  424b58:	ret
  424b5c:	stp	x29, x30, [sp, #-48]!
  424b60:	mov	x29, sp
  424b64:	stp	x19, x20, [sp, #16]
  424b68:	mov	x20, x0
  424b6c:	stp	x21, x22, [sp, #32]
  424b70:	mov	x21, x1
  424b74:	bl	404e10 <__errno_location@plt>
  424b78:	ldr	w22, [x0]
  424b7c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424b80:	ldr	x0, [x0, #1016]
  424b84:	cbz	x0, 424b8c <wcrtomb@plt+0x1fc3c>
  424b88:	blr	x0
  424b8c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424b90:	add	x1, x1, #0x5ce
  424b94:	mov	w2, #0x5                   	// #5
  424b98:	mov	x0, #0x0                   	// #0
  424b9c:	bl	404d00 <dcgettext@plt>
  424ba0:	mov	x19, x0
  424ba4:	mov	x0, x21
  424ba8:	bl	436084 <argp_usage@@Base+0x8ba4>
  424bac:	mov	x4, x20
  424bb0:	mov	x3, x0
  424bb4:	mov	x2, x19
  424bb8:	mov	w1, w22
  424bbc:	mov	w0, #0x0                   	// #0
  424bc0:	bl	4042e0 <error@plt>
  424bc4:	bl	40d47c <wcrtomb@plt+0x852c>
  424bc8:	stp	x29, x30, [sp, #-48]!
  424bcc:	mov	x29, sp
  424bd0:	stp	x19, x20, [sp, #16]
  424bd4:	mov	x20, x0
  424bd8:	stp	x21, x22, [sp, #32]
  424bdc:	mov	x21, x1
  424be0:	bl	404e10 <__errno_location@plt>
  424be4:	ldr	w22, [x0]
  424be8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424bec:	ldr	x0, [x0, #1016]
  424bf0:	cbz	x0, 424bf8 <wcrtomb@plt+0x1fca8>
  424bf4:	blr	x0
  424bf8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424bfc:	add	x1, x1, #0x5dc
  424c00:	mov	w2, #0x5                   	// #5
  424c04:	mov	x0, #0x0                   	// #0
  424c08:	bl	404d00 <dcgettext@plt>
  424c0c:	mov	x19, x0
  424c10:	mov	x0, x21
  424c14:	bl	436084 <argp_usage@@Base+0x8ba4>
  424c18:	mov	x4, x20
  424c1c:	mov	x2, x19
  424c20:	mov	w1, w22
  424c24:	mov	x3, x0
  424c28:	ldp	x19, x20, [sp, #16]
  424c2c:	mov	w0, #0x0                   	// #0
  424c30:	ldp	x21, x22, [sp, #32]
  424c34:	ldp	x29, x30, [sp], #48
  424c38:	b	4042e0 <error@plt>
  424c3c:	stp	x29, x30, [sp, #-64]!
  424c40:	mov	x29, sp
  424c44:	stp	x19, x20, [sp, #16]
  424c48:	mov	w19, w1
  424c4c:	mov	x20, x0
  424c50:	str	x21, [sp, #32]
  424c54:	bl	404e10 <__errno_location@plt>
  424c58:	add	x1, sp, #0x30
  424c5c:	ldr	w21, [x0]
  424c60:	mov	w0, w19
  424c64:	bl	4249ec <wcrtomb@plt+0x1fa9c>
  424c68:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424c6c:	ldr	x0, [x0, #1016]
  424c70:	cbz	x0, 424c78 <wcrtomb@plt+0x1fd28>
  424c74:	blr	x0
  424c78:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424c7c:	add	x1, x1, #0x5f3
  424c80:	mov	w2, #0x5                   	// #5
  424c84:	mov	x0, #0x0                   	// #0
  424c88:	bl	404d00 <dcgettext@plt>
  424c8c:	mov	x19, x0
  424c90:	mov	x0, x20
  424c94:	bl	436084 <argp_usage@@Base+0x8ba4>
  424c98:	add	x4, sp, #0x30
  424c9c:	mov	x3, x0
  424ca0:	mov	x2, x19
  424ca4:	mov	w1, w21
  424ca8:	mov	w0, #0x0                   	// #0
  424cac:	bl	4042e0 <error@plt>
  424cb0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  424cb4:	mov	w1, #0x2                   	// #2
  424cb8:	ldp	x19, x20, [sp, #16]
  424cbc:	str	w1, [x0, #3464]
  424cc0:	ldr	x21, [sp, #32]
  424cc4:	ldp	x29, x30, [sp], #64
  424cc8:	ret
  424ccc:	stp	x29, x30, [sp, #-64]!
  424cd0:	mov	x29, sp
  424cd4:	stp	x19, x20, [sp, #16]
  424cd8:	mov	w20, w1
  424cdc:	stp	x21, x22, [sp, #32]
  424ce0:	mov	x22, x0
  424ce4:	mov	w21, w2
  424ce8:	str	x23, [sp, #48]
  424cec:	bl	404e10 <__errno_location@plt>
  424cf0:	ldr	w23, [x0]
  424cf4:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424cf8:	ldr	x0, [x0, #1016]
  424cfc:	cbz	x0, 424d04 <wcrtomb@plt+0x1fdb4>
  424d00:	blr	x0
  424d04:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424d08:	add	x1, x1, #0x610
  424d0c:	mov	w2, #0x5                   	// #5
  424d10:	mov	x0, #0x0                   	// #0
  424d14:	bl	404d00 <dcgettext@plt>
  424d18:	mov	x19, x0
  424d1c:	mov	x0, x22
  424d20:	bl	436084 <argp_usage@@Base+0x8ba4>
  424d24:	mov	w5, w21
  424d28:	mov	w4, w20
  424d2c:	mov	x3, x0
  424d30:	mov	x2, x19
  424d34:	mov	w1, w23
  424d38:	mov	w0, #0x0                   	// #0
  424d3c:	bl	4042e0 <error@plt>
  424d40:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  424d44:	mov	w1, #0x2                   	// #2
  424d48:	ldp	x19, x20, [sp, #16]
  424d4c:	str	w1, [x0, #3464]
  424d50:	ldp	x21, x22, [sp, #32]
  424d54:	ldr	x23, [sp, #48]
  424d58:	ldp	x29, x30, [sp], #64
  424d5c:	ret
  424d60:	mov	x1, x0
  424d64:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  424d68:	add	x0, x0, #0xfe5
  424d6c:	b	424ad8 <wcrtomb@plt+0x1fb88>
  424d70:	mov	x1, x0
  424d74:	adrp	x0, 449000 <_obstack_memory_used@@Base+0x11380>
  424d78:	add	x0, x0, #0xfe5
  424d7c:	b	424bc8 <wcrtomb@plt+0x1fc78>
  424d80:	stp	x29, x30, [sp, #-16]!
  424d84:	mov	x1, x0
  424d88:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424d8c:	mov	x29, sp
  424d90:	add	x0, x0, #0x640
  424d94:	bl	424b5c <wcrtomb@plt+0x1fc0c>
  424d98:	stp	x29, x30, [sp, #-48]!
  424d9c:	mov	x29, sp
  424da0:	stp	x19, x20, [sp, #16]
  424da4:	mov	x20, x1
  424da8:	stp	x21, x22, [sp, #32]
  424dac:	mov	x21, x0
  424db0:	bl	404e10 <__errno_location@plt>
  424db4:	ldr	w22, [x0]
  424db8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424dbc:	ldr	x0, [x0, #1016]
  424dc0:	cbz	x0, 424dc8 <wcrtomb@plt+0x1fe78>
  424dc4:	blr	x0
  424dc8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424dcc:	add	x1, x1, #0x645
  424dd0:	mov	w2, #0x5                   	// #5
  424dd4:	mov	x0, #0x0                   	// #0
  424dd8:	bl	404d00 <dcgettext@plt>
  424ddc:	mov	x19, x0
  424de0:	mov	x0, x20
  424de4:	bl	436084 <argp_usage@@Base+0x8ba4>
  424de8:	mov	x1, x21
  424dec:	mov	x20, x0
  424df0:	mov	w0, #0x1                   	// #1
  424df4:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  424df8:	mov	x3, x20
  424dfc:	mov	x4, x0
  424e00:	mov	x2, x19
  424e04:	mov	w1, w22
  424e08:	mov	w0, #0x0                   	// #0
  424e0c:	bl	4042e0 <error@plt>
  424e10:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  424e14:	mov	w1, #0x2                   	// #2
  424e18:	ldp	x19, x20, [sp, #16]
  424e1c:	str	w1, [x0, #3464]
  424e20:	ldp	x21, x22, [sp, #32]
  424e24:	ldp	x29, x30, [sp], #48
  424e28:	ret
  424e2c:	mov	x1, x0
  424e30:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424e34:	add	x0, x0, #0x660
  424e38:	b	424ad8 <wcrtomb@plt+0x1fb88>
  424e3c:	mov	x1, x0
  424e40:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424e44:	add	x0, x0, #0x666
  424e48:	b	424ad8 <wcrtomb@plt+0x1fb88>
  424e4c:	mov	x1, x0
  424e50:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424e54:	add	x0, x0, #0x66d
  424e58:	b	424ad8 <wcrtomb@plt+0x1fb88>
  424e5c:	mov	x1, x0
  424e60:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424e64:	add	x0, x0, #0x673
  424e68:	b	424ad8 <wcrtomb@plt+0x1fb88>
  424e6c:	stp	x29, x30, [sp, #-16]!
  424e70:	mov	x1, x0
  424e74:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424e78:	mov	x29, sp
  424e7c:	add	x0, x0, #0x673
  424e80:	bl	424b5c <wcrtomb@plt+0x1fc0c>
  424e84:	mov	x1, x0
  424e88:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  424e8c:	add	x0, x0, #0x673
  424e90:	b	424bc8 <wcrtomb@plt+0x1fc78>
  424e94:	mov	x1, x0
  424e98:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  424e9c:	add	x0, x0, #0x192
  424ea0:	b	424ad8 <wcrtomb@plt+0x1fb88>
  424ea4:	stp	x29, x30, [sp, #-96]!
  424ea8:	mov	x29, sp
  424eac:	stp	x19, x20, [sp, #16]
  424eb0:	mov	x19, x2
  424eb4:	stp	x21, x22, [sp, #32]
  424eb8:	mov	x21, x0
  424ebc:	mov	x22, x1
  424ec0:	str	x23, [sp, #48]
  424ec4:	bl	404e10 <__errno_location@plt>
  424ec8:	ldr	w23, [x0]
  424ecc:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424ed0:	ldr	x0, [x0, #1016]
  424ed4:	cbz	x0, 424edc <wcrtomb@plt+0x1ff8c>
  424ed8:	blr	x0
  424edc:	mov	x3, x19
  424ee0:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  424ee4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424ee8:	add	x2, x2, #0x678
  424eec:	add	x1, x1, #0x6ab
  424ef0:	mov	w4, #0x5                   	// #5
  424ef4:	mov	x0, #0x0                   	// #0
  424ef8:	bl	404c10 <dcngettext@plt>
  424efc:	mov	x20, x0
  424f00:	mov	x0, x21
  424f04:	bl	436084 <argp_usage@@Base+0x8ba4>
  424f08:	mov	x21, x0
  424f0c:	add	x1, sp, #0x48
  424f10:	mov	x0, x22
  424f14:	bl	431400 <argp_usage@@Base+0x3f20>
  424f18:	mov	x4, x0
  424f1c:	mov	x5, x19
  424f20:	mov	x3, x21
  424f24:	mov	x2, x20
  424f28:	mov	w1, w23
  424f2c:	mov	w0, #0x0                   	// #0
  424f30:	bl	4042e0 <error@plt>
  424f34:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  424f38:	mov	w1, #0x2                   	// #2
  424f3c:	ldp	x19, x20, [sp, #16]
  424f40:	str	w1, [x0, #3464]
  424f44:	ldp	x21, x22, [sp, #32]
  424f48:	ldr	x23, [sp, #48]
  424f4c:	ldp	x29, x30, [sp], #96
  424f50:	ret
  424f54:	stp	x29, x30, [sp, #-96]!
  424f58:	mov	x29, sp
  424f5c:	stp	x19, x20, [sp, #16]
  424f60:	mov	x19, x2
  424f64:	stp	x21, x22, [sp, #32]
  424f68:	mov	x21, x0
  424f6c:	mov	x22, x1
  424f70:	str	x23, [sp, #48]
  424f74:	bl	404e10 <__errno_location@plt>
  424f78:	ldr	w23, [x0]
  424f7c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  424f80:	ldr	x0, [x0, #1016]
  424f84:	cbz	x0, 424f8c <wcrtomb@plt+0x2003c>
  424f88:	blr	x0
  424f8c:	mov	x3, x19
  424f90:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  424f94:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  424f98:	add	x2, x2, #0x6dd
  424f9c:	add	x1, x1, #0x719
  424fa0:	mov	w4, #0x5                   	// #5
  424fa4:	mov	x0, #0x0                   	// #0
  424fa8:	bl	404c10 <dcngettext@plt>
  424fac:	mov	x20, x0
  424fb0:	mov	x0, x21
  424fb4:	bl	436084 <argp_usage@@Base+0x8ba4>
  424fb8:	mov	x21, x0
  424fbc:	add	x1, sp, #0x48
  424fc0:	mov	x0, x22
  424fc4:	bl	431400 <argp_usage@@Base+0x3f20>
  424fc8:	mov	x4, x0
  424fcc:	mov	x5, x19
  424fd0:	mov	x3, x21
  424fd4:	mov	x2, x20
  424fd8:	mov	w1, w23
  424fdc:	mov	w0, #0x0                   	// #0
  424fe0:	bl	4042e0 <error@plt>
  424fe4:	ldp	x19, x20, [sp, #16]
  424fe8:	ldp	x21, x22, [sp, #32]
  424fec:	ldr	x23, [sp, #48]
  424ff0:	ldp	x29, x30, [sp], #96
  424ff4:	ret
  424ff8:	stp	x29, x30, [sp, #-16]!
  424ffc:	mov	x1, x0
  425000:	adrp	x0, 447000 <_obstack_memory_used@@Base+0xf380>
  425004:	mov	x29, sp
  425008:	add	x0, x0, #0x192
  42500c:	bl	424b5c <wcrtomb@plt+0x1fc0c>
  425010:	stp	x29, x30, [sp, #-96]!
  425014:	mov	x29, sp
  425018:	stp	x19, x20, [sp, #16]
  42501c:	mov	x19, x2
  425020:	stp	x21, x22, [sp, #32]
  425024:	mov	x21, x0
  425028:	mov	x22, x1
  42502c:	str	x23, [sp, #48]
  425030:	bl	404e10 <__errno_location@plt>
  425034:	ldr	w23, [x0]
  425038:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42503c:	ldr	x0, [x0, #1016]
  425040:	cbz	x0, 425048 <wcrtomb@plt+0x200f8>
  425044:	blr	x0
  425048:	mov	x3, x19
  42504c:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  425050:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425054:	add	x2, x2, #0x678
  425058:	add	x1, x1, #0x6ab
  42505c:	mov	w4, #0x5                   	// #5
  425060:	mov	x0, #0x0                   	// #0
  425064:	bl	404c10 <dcngettext@plt>
  425068:	mov	x20, x0
  42506c:	mov	x0, x21
  425070:	bl	436084 <argp_usage@@Base+0x8ba4>
  425074:	mov	x21, x0
  425078:	add	x1, sp, #0x48
  42507c:	mov	x0, x22
  425080:	bl	431400 <argp_usage@@Base+0x3f20>
  425084:	mov	x4, x0
  425088:	mov	x5, x19
  42508c:	mov	x3, x21
  425090:	mov	x2, x20
  425094:	mov	w1, w23
  425098:	mov	w0, #0x0                   	// #0
  42509c:	bl	4042e0 <error@plt>
  4250a0:	bl	40d47c <wcrtomb@plt+0x852c>
  4250a4:	mov	x1, x0
  4250a8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4250ac:	add	x0, x0, #0x754
  4250b0:	b	424ad8 <wcrtomb@plt+0x1fb88>
  4250b4:	mov	x1, x0
  4250b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4250bc:	add	x0, x0, #0x754
  4250c0:	b	424bc8 <wcrtomb@plt+0x1fc78>
  4250c4:	mov	x1, x0
  4250c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4250cc:	add	x0, x0, #0x75d
  4250d0:	b	424ad8 <wcrtomb@plt+0x1fb88>
  4250d4:	mov	x1, x0
  4250d8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4250dc:	add	x0, x0, #0x763
  4250e0:	b	424ad8 <wcrtomb@plt+0x1fb88>
  4250e4:	mov	x1, x0
  4250e8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4250ec:	add	x0, x0, #0x763
  4250f0:	b	424bc8 <wcrtomb@plt+0x1fc78>
  4250f4:	mov	x1, x0
  4250f8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  4250fc:	add	x0, x0, #0x66
  425100:	b	424ad8 <wcrtomb@plt+0x1fb88>
  425104:	stp	x29, x30, [sp, #-80]!
  425108:	mov	x29, sp
  42510c:	stp	x19, x20, [sp, #16]
  425110:	mov	x20, x0
  425114:	stp	x21, x22, [sp, #32]
  425118:	mov	x21, x1
  42511c:	bl	404e10 <__errno_location@plt>
  425120:	ldr	w22, [x0]
  425124:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  425128:	ldr	x0, [x0, #1016]
  42512c:	cbz	x0, 425134 <wcrtomb@plt+0x201e4>
  425130:	blr	x0
  425134:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425138:	add	x1, x1, #0x76b
  42513c:	mov	w2, #0x5                   	// #5
  425140:	mov	x0, #0x0                   	// #0
  425144:	bl	404d00 <dcgettext@plt>
  425148:	mov	x19, x0
  42514c:	mov	x0, x20
  425150:	bl	436084 <argp_usage@@Base+0x8ba4>
  425154:	add	x1, sp, #0x38
  425158:	mov	x20, x0
  42515c:	mov	x0, x21
  425160:	bl	431400 <argp_usage@@Base+0x3f20>
  425164:	mov	x3, x20
  425168:	mov	x4, x0
  42516c:	mov	x2, x19
  425170:	mov	w1, w22
  425174:	mov	w0, #0x0                   	// #0
  425178:	bl	4042e0 <error@plt>
  42517c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  425180:	mov	w1, #0x2                   	// #2
  425184:	ldp	x19, x20, [sp, #16]
  425188:	str	w1, [x0, #3464]
  42518c:	ldp	x21, x22, [sp, #32]
  425190:	ldp	x29, x30, [sp], #80
  425194:	ret
  425198:	mov	x1, x0
  42519c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  4251a0:	add	x0, x0, #0x66
  4251a4:	b	424bc8 <wcrtomb@plt+0x1fc78>
  4251a8:	stp	x29, x30, [sp, #-80]!
  4251ac:	mov	x29, sp
  4251b0:	stp	x19, x20, [sp, #16]
  4251b4:	mov	x20, x0
  4251b8:	stp	x21, x22, [sp, #32]
  4251bc:	mov	x21, x1
  4251c0:	bl	404e10 <__errno_location@plt>
  4251c4:	ldr	w22, [x0]
  4251c8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4251cc:	ldr	x0, [x0, #1016]
  4251d0:	cbz	x0, 4251d8 <wcrtomb@plt+0x20288>
  4251d4:	blr	x0
  4251d8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  4251dc:	add	x1, x1, #0x781
  4251e0:	mov	w2, #0x5                   	// #5
  4251e4:	mov	x0, #0x0                   	// #0
  4251e8:	bl	404d00 <dcgettext@plt>
  4251ec:	mov	x19, x0
  4251f0:	mov	x0, x20
  4251f4:	bl	436084 <argp_usage@@Base+0x8ba4>
  4251f8:	add	x1, sp, #0x38
  4251fc:	mov	x20, x0
  425200:	mov	x0, x21
  425204:	bl	431400 <argp_usage@@Base+0x3f20>
  425208:	mov	x3, x20
  42520c:	mov	x4, x0
  425210:	mov	x2, x19
  425214:	mov	w1, w22
  425218:	mov	w0, #0x0                   	// #0
  42521c:	bl	4042e0 <error@plt>
  425220:	ldp	x19, x20, [sp, #16]
  425224:	ldp	x21, x22, [sp, #32]
  425228:	ldp	x29, x30, [sp], #80
  42522c:	ret
  425230:	stp	x29, x30, [sp, #-48]!
  425234:	mov	x29, sp
  425238:	stp	x19, x20, [sp, #16]
  42523c:	mov	x20, x1
  425240:	stp	x21, x22, [sp, #32]
  425244:	mov	x21, x0
  425248:	bl	404e10 <__errno_location@plt>
  42524c:	ldr	w22, [x0]
  425250:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  425254:	ldr	x0, [x0, #1016]
  425258:	cbz	x0, 425260 <wcrtomb@plt+0x20310>
  42525c:	blr	x0
  425260:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425264:	add	x1, x1, #0x7a0
  425268:	mov	w2, #0x5                   	// #5
  42526c:	mov	x0, #0x0                   	// #0
  425270:	bl	404d00 <dcgettext@plt>
  425274:	mov	x19, x0
  425278:	mov	x0, x20
  42527c:	bl	436084 <argp_usage@@Base+0x8ba4>
  425280:	mov	x1, x21
  425284:	mov	x20, x0
  425288:	mov	w0, #0x1                   	// #1
  42528c:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  425290:	mov	x3, x20
  425294:	mov	x4, x0
  425298:	mov	x2, x19
  42529c:	mov	w1, w22
  4252a0:	mov	w0, #0x0                   	// #0
  4252a4:	bl	4042e0 <error@plt>
  4252a8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4252ac:	mov	w1, #0x2                   	// #2
  4252b0:	ldp	x19, x20, [sp, #16]
  4252b4:	str	w1, [x0, #3464]
  4252b8:	ldp	x21, x22, [sp, #32]
  4252bc:	ldp	x29, x30, [sp], #48
  4252c0:	ret
  4252c4:	stp	x29, x30, [sp, #-16]!
  4252c8:	mov	x1, x0
  4252cc:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  4252d0:	mov	x29, sp
  4252d4:	add	x0, x0, #0x9ec
  4252d8:	bl	424b5c <wcrtomb@plt+0x1fc0c>
  4252dc:	mov	x1, x0
  4252e0:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  4252e4:	add	x0, x0, #0x9ec
  4252e8:	b	424ad8 <wcrtomb@plt+0x1fb88>
  4252ec:	mov	x1, x0
  4252f0:	adrp	x0, 448000 <_obstack_memory_used@@Base+0x10380>
  4252f4:	add	x0, x0, #0x9ec
  4252f8:	b	424bc8 <wcrtomb@plt+0x1fc78>
  4252fc:	mov	x1, x0
  425300:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  425304:	add	x0, x0, #0x7c0
  425308:	b	424ad8 <wcrtomb@plt+0x1fb88>
  42530c:	mov	x1, x0
  425310:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  425314:	add	x0, x0, #0x7c0
  425318:	b	424bc8 <wcrtomb@plt+0x1fc78>
  42531c:	mov	x1, x0
  425320:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x13380>
  425324:	add	x0, x0, #0x2c0
  425328:	b	424ad8 <wcrtomb@plt+0x1fb88>
  42532c:	mov	x1, x0
  425330:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  425334:	add	x0, x0, #0x7c9
  425338:	b	424ad8 <wcrtomb@plt+0x1fb88>
  42533c:	mov	x1, x0
  425340:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  425344:	add	x0, x0, #0x7cf
  425348:	b	424ad8 <wcrtomb@plt+0x1fb88>
  42534c:	mov	x1, x0
  425350:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  425354:	add	x0, x0, #0x33b
  425358:	b	424ad8 <wcrtomb@plt+0x1fb88>
  42535c:	cbnz	x1, 425364 <wcrtomb@plt+0x20414>
  425360:	b	42534c <wcrtomb@plt+0x203fc>
  425364:	stp	x29, x30, [sp, #-48]!
  425368:	mov	x29, sp
  42536c:	str	x21, [sp, #32]
  425370:	mov	x21, x0
  425374:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  425378:	stp	x19, x20, [sp, #16]
  42537c:	mov	x19, x1
  425380:	ldr	x0, [x0, #1016]
  425384:	mov	x20, x2
  425388:	cbz	x0, 425390 <wcrtomb@plt+0x20440>
  42538c:	blr	x0
  425390:	mov	x3, x20
  425394:	mov	w4, #0x5                   	// #5
  425398:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  42539c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  4253a0:	add	x2, x2, #0x7d7
  4253a4:	add	x1, x1, #0x7f7
  4253a8:	mov	x0, #0x0                   	// #0
  4253ac:	bl	404c10 <dcngettext@plt>
  4253b0:	mov	x5, x20
  4253b4:	mov	x4, x19
  4253b8:	mov	x3, x21
  4253bc:	mov	x2, x0
  4253c0:	mov	w1, #0x0                   	// #0
  4253c4:	mov	w0, #0x0                   	// #0
  4253c8:	bl	4042e0 <error@plt>
  4253cc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4253d0:	mov	w1, #0x2                   	// #2
  4253d4:	ldp	x19, x20, [sp, #16]
  4253d8:	str	w1, [x0, #3464]
  4253dc:	ldr	x21, [sp, #32]
  4253e0:	ldp	x29, x30, [sp], #48
  4253e4:	ret
  4253e8:	stp	x29, x30, [sp, #-16]!
  4253ec:	mov	x1, x0
  4253f0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4253f4:	mov	x29, sp
  4253f8:	add	x0, x0, #0x816
  4253fc:	bl	424b5c <wcrtomb@plt+0x1fc0c>
  425400:	stp	x29, x30, [sp, #-16]!
  425404:	mov	x29, sp
  425408:	bl	404a30 <strcmp@plt>
  42540c:	cmp	w0, #0x0
  425410:	cset	w0, eq  // eq = none
  425414:	ldp	x29, x30, [sp], #16
  425418:	ret
  42541c:	b	4304b4 <argp_usage@@Base+0x2fd4>
  425420:	stp	x29, x30, [sp, #-32]!
  425424:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  425428:	mov	x29, sp
  42542c:	ldr	x0, [x1, #3472]
  425430:	str	x19, [sp, #16]
  425434:	mov	x19, x1
  425438:	cbz	x0, 425444 <wcrtomb@plt+0x204f4>
  42543c:	bl	430180 <argp_usage@@Base+0x2ca0>
  425440:	cbnz	x0, 425468 <wcrtomb@plt+0x20518>
  425444:	add	x1, x19, #0xd90
  425448:	ldr	x0, [x1, #8]
  42544c:	cbz	x0, 425470 <wcrtomb@plt+0x20520>
  425450:	bl	430180 <argp_usage@@Base+0x2ca0>
  425454:	cmp	x0, #0x0
  425458:	cset	w0, ne  // ne = any
  42545c:	ldr	x19, [sp, #16]
  425460:	ldp	x29, x30, [sp], #32
  425464:	ret
  425468:	mov	w0, #0x1                   	// #1
  42546c:	b	42545c <wcrtomb@plt+0x2050c>
  425470:	mov	w0, #0x0                   	// #0
  425474:	b	42545c <wcrtomb@plt+0x2050c>
  425478:	stp	x29, x30, [sp, #-80]!
  42547c:	tst	w2, #0xff
  425480:	mov	x29, sp
  425484:	stp	x19, x20, [sp, #16]
  425488:	mov	x20, x0
  42548c:	stp	x21, x22, [sp, #32]
  425490:	stp	x23, x24, [sp, #48]
  425494:	and	w23, w1, #0xff
  425498:	stp	x25, x26, [sp, #64]
  42549c:	b.ne	425650 <wcrtomb@plt+0x20700>  // b.any
  4254a0:	mov	x19, #0x0                   	// #0
  4254a4:	ldrb	w1, [x0]
  4254a8:	cbnz	w1, 425524 <wcrtomb@plt+0x205d4>
  4254ac:	add	x19, x20, x19
  4254b0:	ldrb	w0, [x19]
  4254b4:	cmp	w0, #0x2f
  4254b8:	b.eq	425568 <wcrtomb@plt+0x20618>  // b.none
  4254bc:	subs	x26, x19, x20
  4254c0:	b.eq	4255d0 <wcrtomb@plt+0x20680>  // b.none
  4254c4:	sxtw	x24, w23
  4254c8:	adrp	x25, 471000 <_obstack_memory_used@@Base+0x39380>
  4254cc:	add	x25, x25, #0xd90
  4254d0:	add	x0, x26, #0x1
  4254d4:	ldr	x21, [x25, x24, lsl #3]
  4254d8:	bl	436d44 <argp_usage@@Base+0x9864>
  4254dc:	mov	x22, x0
  4254e0:	mov	x2, x26
  4254e4:	mov	x1, x20
  4254e8:	bl	404200 <memcpy@plt>
  4254ec:	strb	wzr, [x22, x26]
  4254f0:	cbnz	x21, 425570 <wcrtomb@plt+0x20620>
  4254f4:	mov	x4, #0x0                   	// #0
  4254f8:	adrp	x3, 425000 <wcrtomb@plt+0x200b0>
  4254fc:	adrp	x2, 425000 <wcrtomb@plt+0x200b0>
  425500:	add	x3, x3, #0x400
  425504:	add	x2, x2, #0x41c
  425508:	mov	x1, #0x0                   	// #0
  42550c:	mov	x0, #0x0                   	// #0
  425510:	bl	430500 <argp_usage@@Base+0x3020>
  425514:	str	x0, [x25, x24, lsl #3]
  425518:	mov	x21, x0
  42551c:	cbnz	x0, 425570 <wcrtomb@plt+0x20620>
  425520:	bl	40d4bc <wcrtomb@plt+0x856c>
  425524:	cmp	w1, #0x2e
  425528:	b.ne	425550 <wcrtomb@plt+0x20600>  // b.any
  42552c:	ldrb	w1, [x0, #1]
  425530:	cmp	w1, #0x2e
  425534:	b.ne	425550 <wcrtomb@plt+0x20600>  // b.any
  425538:	ldrb	w1, [x0, #2]
  42553c:	cmp	w1, #0x2f
  425540:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  425544:	add	x1, x0, #0x2
  425548:	sub	x1, x1, x20
  42554c:	csel	x19, x1, x19, eq  // eq = none
  425550:	ldrb	w1, [x0, #1]!
  425554:	ldurb	w2, [x0, #-1]
  425558:	cmp	w2, #0x2f
  42555c:	b.eq	4254a4 <wcrtomb@plt+0x20554>  // b.none
  425560:	cbnz	w1, 425550 <wcrtomb@plt+0x20600>
  425564:	b	4254a4 <wcrtomb@plt+0x20554>
  425568:	add	x19, x19, #0x1
  42556c:	b	4254b0 <wcrtomb@plt+0x20560>
  425570:	mov	x0, x21
  425574:	mov	x1, x22
  425578:	bl	4309b4 <argp_usage@@Base+0x34d4>
  42557c:	mov	x21, x0
  425580:	cbz	x0, 425520 <wcrtomb@plt+0x205d0>
  425584:	cmp	x22, x0
  425588:	b.ne	4255c8 <wcrtomb@plt+0x20678>  // b.any
  42558c:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  425590:	ldr	x0, [x0, #1016]
  425594:	cbnz	x0, 425648 <wcrtomb@plt+0x206f8>
  425598:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42559c:	add	x0, x0, #0x8c8
  4255a0:	mov	w2, #0x5                   	// #5
  4255a4:	ldr	x1, [x0, x24, lsl #3]
  4255a8:	mov	x0, #0x0                   	// #0
  4255ac:	bl	404d00 <dcgettext@plt>
  4255b0:	mov	x2, x0
  4255b4:	mov	x3, x21
  4255b8:	mov	w1, #0x0                   	// #0
  4255bc:	mov	w0, #0x0                   	// #0
  4255c0:	bl	4042e0 <error@plt>
  4255c4:	b	4255d0 <wcrtomb@plt+0x20680>
  4255c8:	mov	x0, x22
  4255cc:	bl	404ae0 <free@plt>
  4255d0:	ldrb	w0, [x19]
  4255d4:	cbnz	w0, 42562c <wcrtomb@plt+0x206dc>
  4255d8:	cmp	x19, x20
  4255dc:	adrp	x19, 44a000 <_obstack_memory_used@@Base+0x12380>
  4255e0:	add	x19, x19, #0xc29
  4255e4:	b.ne	42562c <wcrtomb@plt+0x206dc>  // b.any
  4255e8:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  4255ec:	ldr	x0, [x0, #1016]
  4255f0:	cbz	x0, 4255f8 <wcrtomb@plt+0x206a8>
  4255f4:	blr	x0
  4255f8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4255fc:	add	x0, x0, #0x8c8
  425600:	add	x23, x0, w23, sxtw #3
  425604:	mov	w2, #0x5                   	// #5
  425608:	mov	x0, #0x0                   	// #0
  42560c:	ldr	x1, [x23, #16]
  425610:	bl	404d00 <dcgettext@plt>
  425614:	mov	x3, x0
  425618:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  42561c:	mov	w1, #0x0                   	// #0
  425620:	add	x2, x2, #0xb0d
  425624:	mov	w0, #0x0                   	// #0
  425628:	bl	4042e0 <error@plt>
  42562c:	mov	x0, x19
  425630:	ldp	x19, x20, [sp, #16]
  425634:	ldp	x21, x22, [sp, #32]
  425638:	ldp	x23, x24, [sp, #48]
  42563c:	ldp	x25, x26, [sp, #64]
  425640:	ldp	x29, x30, [sp], #80
  425644:	ret
  425648:	blr	x0
  42564c:	b	425598 <wcrtomb@plt+0x20648>
  425650:	mov	x19, x0
  425654:	b	4255d0 <wcrtomb@plt+0x20680>
  425658:	stp	x29, x30, [sp, #-48]!
  42565c:	mov	x29, sp
  425660:	stp	x19, x20, [sp, #16]
  425664:	sbfiz	x19, x0, #3, #32
  425668:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  42566c:	add	x20, x20, #0x258
  425670:	stp	x21, x22, [sp, #32]
  425674:	add	x21, x20, #0x20
  425678:	add	x21, x21, x19
  42567c:	mov	w22, w1
  425680:	ldr	w0, [x20, x19]
  425684:	bl	4048c0 <close@plt>
  425688:	ldr	w0, [x21, #4]
  42568c:	bl	4048c0 <close@plt>
  425690:	mov	w0, #0xffffffff            	// #-1
  425694:	str	w0, [x20, x19]
  425698:	str	w0, [x21, #4]
  42569c:	bl	404e10 <__errno_location@plt>
  4256a0:	ldp	x19, x20, [sp, #16]
  4256a4:	str	w22, [x0]
  4256a8:	ldp	x21, x22, [sp, #32]
  4256ac:	ldp	x29, x30, [sp], #48
  4256b0:	ret
  4256b4:	stp	x29, x30, [sp, #-48]!
  4256b8:	mov	x29, sp
  4256bc:	stp	x19, x20, [sp, #16]
  4256c0:	mov	w19, w0
  4256c4:	mov	x0, x1
  4256c8:	stp	x21, x22, [sp, #32]
  4256cc:	mov	x21, x1
  4256d0:	bl	404280 <strlen@plt>
  4256d4:	mov	x1, #0x1                   	// #1
  4256d8:	mov	x20, x0
  4256dc:	mov	w0, #0xd                   	// #13
  4256e0:	bl	404540 <signal@plt>
  4256e4:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  4256e8:	add	x3, x3, #0x258
  4256ec:	add	x3, x3, w19, sxtw #3
  4256f0:	mov	x22, x0
  4256f4:	mov	x2, x20
  4256f8:	mov	x1, x21
  4256fc:	ldr	w0, [x3, #36]
  425700:	bl	42fd3c <argp_usage@@Base+0x285c>
  425704:	mov	x21, x0
  425708:	mov	x1, x22
  42570c:	mov	w0, #0xd                   	// #13
  425710:	bl	404540 <signal@plt>
  425714:	cmp	x21, x20
  425718:	b.eq	42573c <wcrtomb@plt+0x207ec>  // b.none
  42571c:	mov	w0, w19
  425720:	mov	w1, #0x5                   	// #5
  425724:	bl	425658 <wcrtomb@plt+0x20708>
  425728:	mov	w0, #0xffffffff            	// #-1
  42572c:	ldp	x19, x20, [sp, #16]
  425730:	ldp	x21, x22, [sp, #32]
  425734:	ldp	x29, x30, [sp], #48
  425738:	ret
  42573c:	mov	w0, #0x0                   	// #0
  425740:	b	42572c <wcrtomb@plt+0x207dc>
  425744:	stp	x29, x30, [sp, #-96]!
  425748:	mov	x29, sp
  42574c:	stp	x23, x24, [sp, #48]
  425750:	sxtw	x23, w0
  425754:	add	x24, x1, #0x40
  425758:	stp	x21, x22, [sp, #32]
  42575c:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  425760:	add	x22, x22, #0x258
  425764:	mov	x21, x1
  425768:	stp	x19, x20, [sp, #16]
  42576c:	mov	x20, x23
  425770:	mov	x19, x1
  425774:	str	x25, [sp, #64]
  425778:	add	x25, x22, w23, sxtw #3
  42577c:	ldr	w0, [x25]
  425780:	mov	x1, x21
  425784:	mov	x2, #0x1                   	// #1
  425788:	bl	436390 <argp_usage@@Base+0x8eb0>
  42578c:	cmp	x0, #0x1
  425790:	b.eq	4257a4 <wcrtomb@plt+0x20854>  // b.none
  425794:	mov	w1, #0x5                   	// #5
  425798:	mov	w0, w20
  42579c:	bl	425658 <wcrtomb@plt+0x20708>
  4257a0:	b	425838 <wcrtomb@plt+0x208e8>
  4257a4:	ldrb	w0, [x21]
  4257a8:	cmp	w0, #0xa
  4257ac:	b.ne	4257cc <wcrtomb@plt+0x2087c>  // b.any
  4257b0:	strb	wzr, [x21]
  4257b4:	ldrb	w0, [x19]
  4257b8:	cbz	w0, 425794 <wcrtomb@plt+0x20844>
  4257bc:	cmp	w0, #0x20
  4257c0:	b.ne	4257dc <wcrtomb@plt+0x2088c>  // b.any
  4257c4:	add	x19, x19, #0x1
  4257c8:	b	4257b4 <wcrtomb@plt+0x20864>
  4257cc:	add	x21, x21, #0x1
  4257d0:	cmp	x24, x21
  4257d4:	b.ne	42577c <wcrtomb@plt+0x2082c>  // b.any
  4257d8:	b	425794 <wcrtomb@plt+0x20844>
  4257dc:	sub	w1, w0, #0x45
  4257e0:	and	w1, w1, #0xff
  4257e4:	cmp	w1, #0x1
  4257e8:	b.hi	425840 <wcrtomb@plt+0x208f0>  // b.pmore
  4257ec:	lsl	x23, x23, #3
  4257f0:	ldr	w0, [x22, x23]
  4257f4:	add	x1, sp, #0x5f
  4257f8:	mov	x2, #0x1                   	// #1
  4257fc:	bl	436390 <argp_usage@@Base+0x8eb0>
  425800:	cmp	x0, #0x1
  425804:	b.ne	425814 <wcrtomb@plt+0x208c4>  // b.any
  425808:	ldrb	w0, [sp, #95]
  42580c:	cmp	w0, #0xa
  425810:	b.ne	4257f0 <wcrtomb@plt+0x208a0>  // b.any
  425814:	bl	404e10 <__errno_location@plt>
  425818:	mov	x21, x0
  42581c:	add	x0, x19, #0x1
  425820:	bl	404590 <atoi@plt>
  425824:	mov	w1, w0
  425828:	str	w0, [x21]
  42582c:	ldrb	w0, [x19]
  425830:	cmp	w0, #0x46
  425834:	b.eq	425798 <wcrtomb@plt+0x20848>  // b.none
  425838:	mov	x0, #0x0                   	// #0
  42583c:	b	42584c <wcrtomb@plt+0x208fc>
  425840:	cmp	w0, #0x41
  425844:	b.ne	425794 <wcrtomb@plt+0x20844>  // b.any
  425848:	add	x0, x19, #0x1
  42584c:	ldp	x19, x20, [sp, #16]
  425850:	ldp	x21, x22, [sp, #32]
  425854:	ldp	x23, x24, [sp, #48]
  425858:	ldr	x25, [sp, #64]
  42585c:	ldp	x29, x30, [sp], #96
  425860:	ret
  425864:	stp	x29, x30, [sp, #-80]!
  425868:	mov	x29, sp
  42586c:	add	x1, sp, #0x10
  425870:	bl	425744 <wcrtomb@plt+0x207f4>
  425874:	cbz	x0, 42588c <wcrtomb@plt+0x2093c>
  425878:	bl	4048f0 <atol@plt>
  42587c:	tbz	x0, #63, 425890 <wcrtomb@plt+0x20940>
  425880:	bl	404e10 <__errno_location@plt>
  425884:	mov	w1, #0x5                   	// #5
  425888:	str	w1, [x0]
  42588c:	mov	x0, #0xffffffffffffffff    	// #-1
  425890:	ldp	x29, x30, [sp], #80
  425894:	ret
  425898:	stp	x29, x30, [sp, #-128]!
  42589c:	mov	x29, sp
  4258a0:	stp	x19, x20, [sp, #16]
  4258a4:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  4258a8:	add	x19, x19, #0x258
  4258ac:	stp	x27, x28, [sp, #80]
  4258b0:	mov	x27, x3
  4258b4:	add	x3, x19, #0x20
  4258b8:	mov	w20, w1
  4258bc:	mov	x1, #0x0                   	// #0
  4258c0:	stp	x21, x22, [sp, #32]
  4258c4:	stp	x23, x24, [sp, #48]
  4258c8:	stp	x25, x26, [sp, #64]
  4258cc:	str	w2, [sp, #108]
  4258d0:	lsl	x2, x1, #3
  4258d4:	mov	w23, w1
  4258d8:	ldr	w4, [x2, x19]
  4258dc:	cmn	w4, #0x1
  4258e0:	b.ne	4258f4 <wcrtomb@plt+0x209a4>  // b.any
  4258e4:	add	x2, x3, x2
  4258e8:	ldr	w28, [x2, #4]
  4258ec:	cmn	w28, #0x1
  4258f0:	b.eq	425d7c <wcrtomb@plt+0x20e2c>  // b.none
  4258f4:	add	x1, x1, #0x1
  4258f8:	cmp	x1, #0x4
  4258fc:	b.ne	4258d0 <wcrtomb@plt+0x20980>  // b.any
  425900:	bl	404e10 <__errno_location@plt>
  425904:	mov	w1, #0x18                  	// #24
  425908:	str	w1, [x0]
  42590c:	b	425a48 <wcrtomb@plt+0x20af8>
  425910:	cmp	w1, #0x3a
  425914:	b.eq	4259d4 <wcrtomb@plt+0x20a84>  // b.none
  425918:	cmp	w1, #0x40
  42591c:	b.eq	42595c <wcrtomb@plt+0x20a0c>  // b.none
  425920:	cmp	w1, #0xa
  425924:	b.ne	425970 <wcrtomb@plt+0x20a20>  // b.any
  425928:	mov	x0, x21
  42592c:	bl	404ae0 <free@plt>
  425930:	bl	404e10 <__errno_location@plt>
  425934:	mov	w1, #0x2                   	// #2
  425938:	str	w1, [x0]
  42593c:	mov	w0, w28
  425940:	ldp	x19, x20, [sp, #16]
  425944:	ldp	x21, x22, [sp, #32]
  425948:	ldp	x23, x24, [sp, #48]
  42594c:	ldp	x25, x26, [sp, #64]
  425950:	ldp	x27, x28, [sp, #80]
  425954:	ldp	x29, x30, [sp], #128
  425958:	ret
  42595c:	cbnz	x22, 425970 <wcrtomb@plt+0x20a20>
  425960:	mov	x1, x0
  425964:	mov	x22, x26
  425968:	strb	wzr, [x1], #1
  42596c:	mov	x26, x1
  425970:	add	x0, x0, #0x1
  425974:	ldrb	w1, [x0]
  425978:	cbnz	w1, 425910 <wcrtomb@plt+0x209c0>
  42597c:	mov	x0, x26
  425980:	bl	404ef0 <gethostbyname@plt>
  425984:	cbnz	x0, 4259ac <wcrtomb@plt+0x20a5c>
  425988:	mov	w2, #0x5                   	// #5
  42598c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425990:	add	x1, x1, #0x8e8
  425994:	bl	404d00 <dcgettext@plt>
  425998:	mov	x3, x26
  42599c:	mov	x2, x0
  4259a0:	mov	w1, #0x0                   	// #0
  4259a4:	mov	w0, #0x80                  	// #128
  4259a8:	bl	4042e0 <error@plt>
  4259ac:	cbz	x22, 4259bc <wcrtomb@plt+0x20a6c>
  4259b0:	ldrb	w0, [x22]
  4259b4:	cmp	w0, #0x0
  4259b8:	csel	x22, x22, xzr, ne  // ne = any
  4259bc:	cbnz	x27, 4259e4 <wcrtomb@plt+0x20a94>
  4259c0:	mov	x0, x21
  4259c4:	bl	404ae0 <free@plt>
  4259c8:	bl	404e10 <__errno_location@plt>
  4259cc:	mov	w1, #0x5                   	// #5
  4259d0:	b	425938 <wcrtomb@plt+0x209e8>
  4259d4:	cbnz	x25, 425970 <wcrtomb@plt+0x20a20>
  4259d8:	mov	x25, x0
  4259dc:	strb	wzr, [x25], #1
  4259e0:	b	425970 <wcrtomb@plt+0x20a20>
  4259e4:	mov	x0, x27
  4259e8:	bl	42dde0 <argp_usage@@Base+0x900>
  4259ec:	str	x0, [sp, #96]
  4259f0:	add	x0, x19, #0x20
  4259f4:	sxtw	x24, w23
  4259f8:	str	x0, [sp, #112]
  4259fc:	add	x0, x0, w23, sxtw #3
  425a00:	bl	4043e0 <pipe@plt>
  425a04:	cmn	w0, #0x1
  425a08:	b.ne	425a18 <wcrtomb@plt+0x20ac8>  // b.any
  425a0c:	mov	x0, x21
  425a10:	bl	404ae0 <free@plt>
  425a14:	b	42593c <wcrtomb@plt+0x209ec>
  425a18:	sbfiz	x0, x23, #3, #32
  425a1c:	add	x0, x19, x0
  425a20:	bl	4043e0 <pipe@plt>
  425a24:	cmn	w0, #0x1
  425a28:	b.eq	425a0c <wcrtomb@plt+0x20abc>  // b.none
  425a2c:	bl	404470 <fork@plt>
  425a30:	mov	w1, w0
  425a34:	cmn	w0, #0x1
  425a38:	b.ne	425a50 <wcrtomb@plt+0x20b00>  // b.any
  425a3c:	mov	x0, x21
  425a40:	str	w1, [sp, #96]
  425a44:	bl	404ae0 <free@plt>
  425a48:	mov	w28, #0xffffffff            	// #-1
  425a4c:	b	42593c <wcrtomb@plt+0x209ec>
  425a50:	cbnz	w0, 425b84 <wcrtomb@plt+0x20c34>
  425a54:	add	x0, x19, #0x20
  425a58:	sbfiz	x2, x23, #3, #32
  425a5c:	ldr	w0, [x0, x2]
  425a60:	bl	404d70 <dup2@plt>
  425a64:	tbz	w0, #31, 425aac <wcrtomb@plt+0x20b5c>
  425a68:	bl	404e10 <__errno_location@plt>
  425a6c:	ldr	w3, [x0]
  425a70:	mov	w2, #0x5                   	// #5
  425a74:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425a78:	mov	x0, #0x0                   	// #0
  425a7c:	add	x1, x1, #0x90d
  425a80:	str	w3, [sp, #112]
  425a84:	bl	404d00 <dcgettext@plt>
  425a88:	mov	x2, x0
  425a8c:	ldr	w3, [sp, #112]
  425a90:	mov	w0, #0x80                  	// #128
  425a94:	mov	w1, w3
  425a98:	bl	4042e0 <error@plt>
  425a9c:	bl	4043d0 <getuid@plt>
  425aa0:	bl	404240 <setuid@plt>
  425aa4:	cbz	w0, 425b20 <wcrtomb@plt+0x20bd0>
  425aa8:	bl	404970 <abort@plt>
  425aac:	add	x0, x19, #0x20
  425ab0:	sbfiz	x1, x23, #3, #32
  425ab4:	ldr	w0, [x0, x1]
  425ab8:	cbnz	w0, 425b08 <wcrtomb@plt+0x20bb8>
  425abc:	add	x0, x19, x24, lsl #3
  425ac0:	ldr	w0, [x0, #36]
  425ac4:	cbnz	w0, 425b14 <wcrtomb@plt+0x20bc4>
  425ac8:	add	x0, x19, x24, lsl #3
  425acc:	lsl	x2, x24, #3
  425ad0:	stp	x2, x0, [sp, #112]
  425ad4:	mov	w1, #0x1                   	// #1
  425ad8:	ldr	w0, [x0, #4]
  425adc:	bl	404d70 <dup2@plt>
  425ae0:	tbnz	w0, #31, 425a68 <wcrtomb@plt+0x20b18>
  425ae4:	ldr	x2, [sp, #112]
  425ae8:	ldr	w0, [x19, x2]
  425aec:	bl	4048c0 <close@plt>
  425af0:	cbnz	w0, 425a68 <wcrtomb@plt+0x20b18>
  425af4:	add	x0, x19, x24, lsl #3
  425af8:	ldr	w0, [x0, #4]
  425afc:	bl	4048c0 <close@plt>
  425b00:	cbnz	w0, 425a68 <wcrtomb@plt+0x20b18>
  425b04:	b	425a9c <wcrtomb@plt+0x20b4c>
  425b08:	bl	4048c0 <close@plt>
  425b0c:	cbnz	w0, 425a68 <wcrtomb@plt+0x20b18>
  425b10:	b	425abc <wcrtomb@plt+0x20b6c>
  425b14:	bl	4048c0 <close@plt>
  425b18:	cbnz	w0, 425a68 <wcrtomb@plt+0x20b18>
  425b1c:	b	425ac8 <wcrtomb@plt+0x20b78>
  425b20:	bl	404b20 <getgid@plt>
  425b24:	bl	404980 <setgid@plt>
  425b28:	cbnz	w0, 425aa8 <wcrtomb@plt+0x20b58>
  425b2c:	ldr	x3, [x19, #64]
  425b30:	cbz	x22, 425d20 <wcrtomb@plt+0x20dd0>
  425b34:	ldr	x1, [sp, #96]
  425b38:	mov	x5, x3
  425b3c:	mov	x4, x22
  425b40:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  425b44:	mov	x2, x26
  425b48:	add	x3, x3, #0x934
  425b4c:	mov	x0, x27
  425b50:	mov	x6, #0x0                   	// #0
  425b54:	bl	404310 <execl@plt>
  425b58:	bl	404e10 <__errno_location@plt>
  425b5c:	ldr	w22, [x0]
  425b60:	mov	w2, #0x5                   	// #5
  425b64:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425b68:	mov	x0, #0x0                   	// #0
  425b6c:	add	x1, x1, #0x937
  425b70:	bl	404d00 <dcgettext@plt>
  425b74:	mov	x2, x0
  425b78:	mov	w1, w22
  425b7c:	mov	w0, #0x80                  	// #128
  425b80:	bl	4042e0 <error@plt>
  425b84:	lsl	x22, x24, #3
  425b88:	add	x24, x19, x24, lsl #3
  425b8c:	add	x19, x19, #0x20
  425b90:	ldr	w0, [x24, #4]
  425b94:	bl	4048c0 <close@plt>
  425b98:	ldr	w0, [x19, x22]
  425b9c:	bl	4048c0 <close@plt>
  425ba0:	mov	x0, x25
  425ba4:	bl	404280 <strlen@plt>
  425ba8:	mov	x19, x0
  425bac:	add	x0, x0, #0x3e8
  425bb0:	add	x19, x19, #0x2
  425bb4:	bl	436d44 <argp_usage@@Base+0x9864>
  425bb8:	mov	x22, x0
  425bbc:	mov	x4, x25
  425bc0:	mov	x2, #0xffffffffffffffff    	// #-1
  425bc4:	mov	w1, #0x1                   	// #1
  425bc8:	add	x19, x22, x19
  425bcc:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  425bd0:	add	x3, x3, #0x953
  425bd4:	bl	4042a0 <__sprintf_chk@plt>
  425bd8:	mov	w4, w20
  425bdc:	mov	x0, x19
  425be0:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  425be4:	mov	x2, #0xffffffffffffffff    	// #-1
  425be8:	add	x3, x3, #0x958
  425bec:	mov	w1, #0x1                   	// #1
  425bf0:	bl	4042a0 <__sprintf_chk@plt>
  425bf4:	and	w0, w20, #0x3
  425bf8:	cmp	w0, #0x1
  425bfc:	b.eq	425d44 <wcrtomb@plt+0x20df4>  // b.none
  425c00:	cmp	w0, #0x2
  425c04:	b.eq	425d38 <wcrtomb@plt+0x20de8>  // b.none
  425c08:	cbnz	w0, 425aa8 <wcrtomb@plt+0x20b58>
  425c0c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425c10:	add	x1, x1, #0x95c
  425c14:	mov	x0, x19
  425c18:	bl	4046e0 <strcat@plt>
  425c1c:	tbz	w20, #10, 425c30 <wcrtomb@plt+0x20ce0>
  425c20:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425c24:	mov	x0, x19
  425c28:	add	x1, x1, #0x975
  425c2c:	bl	4046e0 <strcat@plt>
  425c30:	tbz	w20, #6, 425c44 <wcrtomb@plt+0x20cf4>
  425c34:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425c38:	mov	x0, x19
  425c3c:	add	x1, x1, #0x97f
  425c40:	bl	4046e0 <strcat@plt>
  425c44:	tbz	w20, #12, 425c58 <wcrtomb@plt+0x20d08>
  425c48:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425c4c:	mov	x0, x19
  425c50:	add	x1, x1, #0x988
  425c54:	bl	4046e0 <strcat@plt>
  425c58:	tbz	w20, #7, 425c6c <wcrtomb@plt+0x20d1c>
  425c5c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425c60:	mov	x0, x19
  425c64:	add	x1, x1, #0x991
  425c68:	bl	4046e0 <strcat@plt>
  425c6c:	tbz	w20, #8, 425c80 <wcrtomb@plt+0x20d30>
  425c70:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425c74:	mov	x0, x19
  425c78:	add	x1, x1, #0x999
  425c7c:	bl	4046e0 <strcat@plt>
  425c80:	tbz	w20, #11, 425c94 <wcrtomb@plt+0x20d44>
  425c84:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425c88:	mov	x0, x19
  425c8c:	add	x1, x1, #0x9a3
  425c90:	bl	4046e0 <strcat@plt>
  425c94:	and	w0, w20, #0x1ff000
  425c98:	and	w0, w0, #0xfff01fff
  425c9c:	cbz	w0, 425cc0 <wcrtomb@plt+0x20d70>
  425ca0:	mov	x0, x19
  425ca4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425ca8:	add	x1, x1, #0x9af
  425cac:	bl	4046e0 <strcat@plt>
  425cb0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425cb4:	mov	x0, x19
  425cb8:	add	x1, x1, #0x9b8
  425cbc:	bl	4046e0 <strcat@plt>
  425cc0:	tbz	w20, #9, 425cd4 <wcrtomb@plt+0x20d84>
  425cc4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425cc8:	mov	x0, x19
  425ccc:	add	x1, x1, #0x9c0
  425cd0:	bl	4046e0 <strcat@plt>
  425cd4:	mov	x0, x22
  425cd8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425cdc:	add	x1, x1, #0xa99
  425ce0:	bl	4046e0 <strcat@plt>
  425ce4:	mov	x1, x22
  425ce8:	mov	w0, w23
  425cec:	bl	4256b4 <wcrtomb@plt+0x20764>
  425cf0:	cmn	w0, #0x1
  425cf4:	b.ne	425d50 <wcrtomb@plt+0x20e00>  // b.any
  425cf8:	bl	404e10 <__errno_location@plt>
  425cfc:	ldr	w19, [x0]
  425d00:	mov	x0, x22
  425d04:	bl	404ae0 <free@plt>
  425d08:	mov	x0, x21
  425d0c:	bl	404ae0 <free@plt>
  425d10:	mov	w1, w19
  425d14:	mov	w0, w23
  425d18:	bl	425658 <wcrtomb@plt+0x20708>
  425d1c:	b	42593c <wcrtomb@plt+0x209ec>
  425d20:	ldr	x1, [sp, #96]
  425d24:	mov	x2, x26
  425d28:	mov	x0, x27
  425d2c:	mov	x4, #0x0                   	// #0
  425d30:	bl	404310 <execl@plt>
  425d34:	b	425b58 <wcrtomb@plt+0x20c08>
  425d38:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425d3c:	add	x1, x1, #0x965
  425d40:	b	425c14 <wcrtomb@plt+0x20cc4>
  425d44:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425d48:	add	x1, x1, #0x96c
  425d4c:	b	425c14 <wcrtomb@plt+0x20cc4>
  425d50:	mov	w0, w23
  425d54:	bl	425864 <wcrtomb@plt+0x20914>
  425d58:	cmn	x0, #0x1
  425d5c:	b.eq	425cf8 <wcrtomb@plt+0x20da8>  // b.none
  425d60:	mov	x0, x22
  425d64:	bl	404ae0 <free@plt>
  425d68:	mov	x0, x21
  425d6c:	bl	404ae0 <free@plt>
  425d70:	ldr	w0, [sp, #108]
  425d74:	add	w28, w0, w23
  425d78:	b	42593c <wcrtomb@plt+0x209ec>
  425d7c:	bl	436f10 <argp_usage@@Base+0x9a30>
  425d80:	mov	x22, #0x0                   	// #0
  425d84:	mov	x21, x0
  425d88:	mov	x26, x0
  425d8c:	mov	x25, #0x0                   	// #0
  425d90:	b	425974 <wcrtomb@plt+0x20a24>
  425d94:	stp	x29, x30, [sp, #-32]!
  425d98:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  425d9c:	add	x1, x1, #0x9c9
  425da0:	mov	x29, sp
  425da4:	stp	x19, x20, [sp, #16]
  425da8:	mov	w20, w0
  425dac:	bl	4256b4 <wcrtomb@plt+0x20764>
  425db0:	cmn	w0, #0x1
  425db4:	b.eq	425dd8 <wcrtomb@plt+0x20e88>  // b.none
  425db8:	mov	w0, w20
  425dbc:	bl	425864 <wcrtomb@plt+0x20914>
  425dc0:	mov	x19, x0
  425dc4:	bl	404e10 <__errno_location@plt>
  425dc8:	ldr	w1, [x0]
  425dcc:	mov	w0, w20
  425dd0:	bl	425658 <wcrtomb@plt+0x20708>
  425dd4:	mov	w0, w19
  425dd8:	ldp	x19, x20, [sp, #16]
  425ddc:	ldp	x29, x30, [sp], #32
  425de0:	ret
  425de4:	stp	x29, x30, [sp, #-128]!
  425de8:	mov	x4, x2
  425dec:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  425df0:	mov	x29, sp
  425df4:	add	x3, x3, #0x9cc
  425df8:	stp	x21, x22, [sp, #32]
  425dfc:	mov	x22, x2
  425e00:	mov	x2, #0x40                  	// #64
  425e04:	mov	x21, x1
  425e08:	mov	w1, #0x1                   	// #1
  425e0c:	stp	x19, x20, [sp, #16]
  425e10:	mov	w20, w0
  425e14:	add	x0, sp, x2
  425e18:	str	x23, [sp, #48]
  425e1c:	bl	4042a0 <__sprintf_chk@plt>
  425e20:	add	x1, sp, #0x40
  425e24:	mov	w0, w20
  425e28:	bl	4256b4 <wcrtomb@plt+0x20764>
  425e2c:	cmn	w0, #0x1
  425e30:	b.ne	425e50 <wcrtomb@plt+0x20f00>  // b.any
  425e34:	mov	x19, #0xffffffffffffffff    	// #-1
  425e38:	mov	x0, x19
  425e3c:	ldp	x19, x20, [sp, #16]
  425e40:	ldp	x21, x22, [sp, #32]
  425e44:	ldr	x23, [sp, #48]
  425e48:	ldp	x29, x30, [sp], #128
  425e4c:	ret
  425e50:	mov	w0, w20
  425e54:	bl	425864 <wcrtomb@plt+0x20914>
  425e58:	mov	x19, x0
  425e5c:	cmn	x0, #0x1
  425e60:	b.eq	425e34 <wcrtomb@plt+0x20ee4>  // b.none
  425e64:	cmp	x22, x0
  425e68:	b.cc	425e34 <wcrtomb@plt+0x20ee4>  // b.lo, b.ul, b.last
  425e6c:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  425e70:	add	x22, x22, #0x258
  425e74:	add	x22, x22, w20, sxtw #3
  425e78:	mov	x23, #0x0                   	// #0
  425e7c:	cmp	x23, x19
  425e80:	b.cs	425e38 <wcrtomb@plt+0x20ee8>  // b.hs, b.nlast
  425e84:	ldr	w0, [x22]
  425e88:	mov	x1, x21
  425e8c:	sub	x2, x19, x23
  425e90:	bl	436390 <argp_usage@@Base+0x8eb0>
  425e94:	sub	x1, x0, #0x1
  425e98:	cmn	x1, #0x3
  425e9c:	b.ls	425eb0 <wcrtomb@plt+0x20f60>  // b.plast
  425ea0:	mov	w0, w20
  425ea4:	mov	w1, #0x5                   	// #5
  425ea8:	bl	425658 <wcrtomb@plt+0x20708>
  425eac:	b	425e34 <wcrtomb@plt+0x20ee4>
  425eb0:	add	x23, x23, x0
  425eb4:	add	x21, x21, x0
  425eb8:	b	425e7c <wcrtomb@plt+0x20f2c>
  425ebc:	stp	x29, x30, [sp, #-112]!
  425ec0:	mov	x4, x2
  425ec4:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  425ec8:	mov	x29, sp
  425ecc:	add	x3, x3, #0x9d2
  425ed0:	stp	x21, x22, [sp, #32]
  425ed4:	mov	x21, x2
  425ed8:	mov	x2, #0x40                  	// #64
  425edc:	stp	x19, x20, [sp, #16]
  425ee0:	mov	w20, w0
  425ee4:	mov	x19, x1
  425ee8:	add	x0, sp, #0x30
  425eec:	mov	w1, #0x1                   	// #1
  425ef0:	bl	4042a0 <__sprintf_chk@plt>
  425ef4:	add	x1, sp, #0x30
  425ef8:	mov	w0, w20
  425efc:	bl	4256b4 <wcrtomb@plt+0x20764>
  425f00:	cmn	w0, #0x1
  425f04:	b.ne	425f20 <wcrtomb@plt+0x20fd0>  // b.any
  425f08:	mov	x19, #0x0                   	// #0
  425f0c:	mov	x0, x19
  425f10:	ldp	x19, x20, [sp, #16]
  425f14:	ldp	x21, x22, [sp, #32]
  425f18:	ldp	x29, x30, [sp], #112
  425f1c:	ret
  425f20:	mov	x1, #0x1                   	// #1
  425f24:	mov	w0, #0xd                   	// #13
  425f28:	bl	404540 <signal@plt>
  425f2c:	mov	x22, x0
  425f30:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  425f34:	add	x3, x3, #0x258
  425f38:	add	x3, x3, w20, sxtw #3
  425f3c:	mov	x2, x21
  425f40:	mov	x1, x19
  425f44:	ldr	w0, [x3, #36]
  425f48:	bl	42fd3c <argp_usage@@Base+0x285c>
  425f4c:	mov	x19, x0
  425f50:	mov	x1, x22
  425f54:	mov	w0, #0xd                   	// #13
  425f58:	bl	404540 <signal@plt>
  425f5c:	cmp	x21, x19
  425f60:	b.ne	425f7c <wcrtomb@plt+0x2102c>  // b.any
  425f64:	mov	w0, w20
  425f68:	bl	425864 <wcrtomb@plt+0x20914>
  425f6c:	tbnz	x0, #63, 425f08 <wcrtomb@plt+0x20fb8>
  425f70:	cmp	x19, x0
  425f74:	b.eq	425f0c <wcrtomb@plt+0x20fbc>  // b.none
  425f78:	mov	x19, x0
  425f7c:	mov	w0, w20
  425f80:	mov	w1, #0x5                   	// #5
  425f84:	bl	425658 <wcrtomb@plt+0x20708>
  425f88:	b	425f0c <wcrtomb@plt+0x20fbc>
  425f8c:	stp	x29, x30, [sp, #-192]!
  425f90:	cmp	x1, #0x0
  425f94:	mov	w5, w2
  425f98:	mov	x29, sp
  425f9c:	add	x4, sp, #0x3c
  425fa0:	str	x19, [sp, #16]
  425fa4:	mov	w19, w0
  425fa8:	cneg	x0, x1, lt  // lt = tstop
  425fac:	mov	x6, #0xa                   	// #10
  425fb0:	strb	wzr, [sp, #60]
  425fb4:	udiv	x3, x0, x6
  425fb8:	mov	x7, x4
  425fbc:	msub	x2, x3, x6, x0
  425fc0:	add	w2, w2, #0x30
  425fc4:	strb	w2, [x4, #-1]!
  425fc8:	mov	x2, x0
  425fcc:	mov	x0, x3
  425fd0:	cmp	x2, #0x9
  425fd4:	b.hi	425fb4 <wcrtomb@plt+0x21064>  // b.pmore
  425fd8:	tbz	x1, #63, 425fe8 <wcrtomb@plt+0x21098>
  425fdc:	mov	w0, #0x2d                  	// #45
  425fe0:	sturb	w0, [x4, #-1]
  425fe4:	sub	x4, x7, #0x2
  425fe8:	cmp	w5, #0x2
  425fec:	b.hi	42602c <wcrtomb@plt+0x210dc>  // b.pmore
  425ff0:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  425ff4:	add	x3, x3, #0x9d8
  425ff8:	mov	x2, #0x40                  	// #64
  425ffc:	mov	w1, #0x1                   	// #1
  426000:	add	x0, sp, x2
  426004:	bl	4042a0 <__sprintf_chk@plt>
  426008:	add	x1, sp, #0x40
  42600c:	mov	w0, w19
  426010:	bl	4256b4 <wcrtomb@plt+0x20764>
  426014:	cmn	w0, #0x1
  426018:	b.ne	426030 <wcrtomb@plt+0x210e0>  // b.any
  42601c:	mov	x0, #0xffffffffffffffff    	// #-1
  426020:	ldr	x19, [sp, #16]
  426024:	ldp	x29, x30, [sp], #192
  426028:	ret
  42602c:	bl	404970 <abort@plt>
  426030:	add	x1, sp, #0x80
  426034:	mov	w0, w19
  426038:	bl	425744 <wcrtomb@plt+0x207f4>
  42603c:	cbz	x0, 42601c <wcrtomb@plt+0x210cc>
  426040:	ldrb	w1, [x0]
  426044:	cmp	w1, #0x20
  426048:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  42604c:	b.eq	42609c <wcrtomb@plt+0x2114c>  // b.none
  426050:	cmp	w1, #0x2d
  426054:	b.eq	4260a4 <wcrtomb@plt+0x21154>  // b.none
  426058:	cmp	w1, #0x2b
  42605c:	cset	w2, eq  // eq = none
  426060:	add	x2, x0, w2, sxtw
  426064:	mov	x5, #0xa                   	// #10
  426068:	mov	x0, #0x0                   	// #0
  42606c:	ldrb	w4, [x2], #1
  426070:	sub	w4, w4, #0x30
  426074:	cmp	w4, #0x9
  426078:	b.hi	426020 <wcrtomb@plt+0x210d0>  // b.pmore
  42607c:	mul	x3, x0, x5
  426080:	cmp	w1, #0x2d
  426084:	sxtw	x0, w4
  426088:	b.ne	4260ac <wcrtomb@plt+0x2115c>  // b.any
  42608c:	sub	x0, x3, x0
  426090:	cmp	x3, x0
  426094:	b.ge	42606c <wcrtomb@plt+0x2111c>  // b.tcont
  426098:	b	42601c <wcrtomb@plt+0x210cc>
  42609c:	add	x0, x0, #0x1
  4260a0:	b	426040 <wcrtomb@plt+0x210f0>
  4260a4:	mov	w2, #0x1                   	// #1
  4260a8:	b	426060 <wcrtomb@plt+0x21110>
  4260ac:	add	x0, x3, x0
  4260b0:	cmp	x3, x0
  4260b4:	b.le	42606c <wcrtomb@plt+0x2111c>
  4260b8:	b	42601c <wcrtomb@plt+0x210cc>
  4260bc:	stp	x29, x30, [sp, #-144]!
  4260c0:	mov	x29, sp
  4260c4:	stp	x19, x20, [sp, #16]
  4260c8:	mov	x19, x2
  4260cc:	mov	w2, #0x6d02                	// #27906
  4260d0:	stp	x21, x22, [sp, #32]
  4260d4:	movk	w2, #0x8030, lsl #16
  4260d8:	mov	w21, w0
  4260dc:	cmp	w1, w2
  4260e0:	b.eq	42619c <wcrtomb@plt+0x2124c>  // b.none
  4260e4:	mov	w0, #0x6d01                	// #27905
  4260e8:	movk	w0, #0x4008, lsl #16
  4260ec:	cmp	w1, w0
  4260f0:	b.eq	426104 <wcrtomb@plt+0x211b4>  // b.none
  4260f4:	bl	404e10 <__errno_location@plt>
  4260f8:	mov	w1, #0x5f                  	// #95
  4260fc:	str	w1, [x0]
  426100:	b	4261b0 <wcrtomb@plt+0x21260>
  426104:	ldr	w1, [x19, #4]
  426108:	sxtw	x0, w1
  42610c:	tbz	w1, #31, 426114 <wcrtomb@plt+0x211c4>
  426110:	neg	x0, x0
  426114:	add	x5, sp, #0x4c
  426118:	mov	x4, #0xa                   	// #10
  42611c:	strb	wzr, [sp, #76]
  426120:	udiv	x3, x0, x4
  426124:	mov	x6, x5
  426128:	msub	x2, x3, x4, x0
  42612c:	add	w2, w2, #0x30
  426130:	strb	w2, [x5, #-1]!
  426134:	mov	x2, x0
  426138:	mov	x0, x3
  42613c:	cmp	x2, #0x9
  426140:	b.hi	426120 <wcrtomb@plt+0x211d0>  // b.pmore
  426144:	tbz	w1, #31, 426154 <wcrtomb@plt+0x21204>
  426148:	mov	w0, #0x2d                  	// #45
  42614c:	sturb	w0, [x5, #-1]
  426150:	sub	x5, x6, #0x2
  426154:	ldrsh	w4, [x19]
  426158:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  42615c:	add	x3, x3, #0x9e0
  426160:	mov	x2, #0x40                  	// #64
  426164:	mov	w1, #0x1                   	// #1
  426168:	add	x0, sp, #0x50
  42616c:	bl	4042a0 <__sprintf_chk@plt>
  426170:	add	x1, sp, #0x50
  426174:	mov	w0, w21
  426178:	bl	4256b4 <wcrtomb@plt+0x20764>
  42617c:	cmn	w0, #0x1
  426180:	b.eq	42618c <wcrtomb@plt+0x2123c>  // b.none
  426184:	mov	w0, w21
  426188:	bl	425864 <wcrtomb@plt+0x20914>
  42618c:	ldp	x19, x20, [sp, #16]
  426190:	ldp	x21, x22, [sp, #32]
  426194:	ldp	x29, x30, [sp], #144
  426198:	ret
  42619c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4261a0:	add	x1, x1, #0x772
  4261a4:	bl	4256b4 <wcrtomb@plt+0x20764>
  4261a8:	cmn	w0, #0x1
  4261ac:	b.ne	4261b8 <wcrtomb@plt+0x21268>  // b.any
  4261b0:	mov	w0, #0xffffffff            	// #-1
  4261b4:	b	42618c <wcrtomb@plt+0x2123c>
  4261b8:	mov	w0, w21
  4261bc:	bl	425864 <wcrtomb@plt+0x20914>
  4261c0:	mov	x20, x0
  4261c4:	cmn	x0, #0x1
  4261c8:	b.eq	4261b0 <wcrtomb@plt+0x21260>  // b.none
  4261cc:	cmp	x0, #0x8
  4261d0:	b.hi	42620c <wcrtomb@plt+0x212bc>  // b.pmore
  4261d4:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  4261d8:	add	x22, x22, #0x258
  4261dc:	add	x22, x22, w21, sxtw #3
  4261e0:	cmp	x20, #0x0
  4261e4:	b.gt	426218 <wcrtomb@plt+0x212c8>
  4261e8:	ldr	x0, [x19]
  4261ec:	cmp	x0, #0xff
  4261f0:	b.le	426204 <wcrtomb@plt+0x212b4>
  4261f4:	mov	x0, x19
  4261f8:	sub	x1, x0, x19
  4261fc:	cmp	x1, x20
  426200:	b.cc	426250 <wcrtomb@plt+0x21300>  // b.lo, b.ul, b.last
  426204:	mov	w0, #0x0                   	// #0
  426208:	b	42618c <wcrtomb@plt+0x2123c>
  42620c:	bl	404e10 <__errno_location@plt>
  426210:	mov	w1, #0x4b                  	// #75
  426214:	b	4260fc <wcrtomb@plt+0x211ac>
  426218:	ldr	w0, [x22]
  42621c:	mov	x1, x19
  426220:	mov	x2, x20
  426224:	bl	436390 <argp_usage@@Base+0x8eb0>
  426228:	sub	x1, x0, #0x1
  42622c:	cmn	x1, #0x3
  426230:	b.ls	426244 <wcrtomb@plt+0x212f4>  // b.plast
  426234:	mov	w0, w21
  426238:	mov	w1, #0x5                   	// #5
  42623c:	bl	425658 <wcrtomb@plt+0x20708>
  426240:	b	4261b0 <wcrtomb@plt+0x21260>
  426244:	sub	x20, x20, x0
  426248:	add	x19, x19, x0
  42624c:	b	4261e0 <wcrtomb@plt+0x21290>
  426250:	ldrb	w1, [x0]
  426254:	add	x0, x0, #0x2
  426258:	ldurb	w2, [x0, #-1]
  42625c:	sturb	w2, [x0, #-2]
  426260:	sturb	w1, [x0, #-1]
  426264:	b	4261f8 <wcrtomb@plt+0x212a8>
  426268:	stp	x29, x30, [sp, #-64]!
  42626c:	mov	x29, sp
  426270:	stp	x21, x22, [sp, #32]
  426274:	adrp	x21, 44d000 <_obstack_memory_used@@Base+0x15380>
  426278:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x15380>
  42627c:	add	x21, x21, #0x9fc
  426280:	add	x22, x22, #0x9f2
  426284:	stp	x19, x20, [sp, #16]
  426288:	mov	x19, #0x0                   	// #0
  42628c:	mov	w20, #0x1                   	// #1
  426290:	str	x23, [sp, #48]
  426294:	mov	w0, w19
  426298:	mov	w1, #0x1                   	// #1
  42629c:	bl	4376ac <argp_usage@@Base+0xa1cc>
  4262a0:	tbz	w0, #31, 4262dc <wcrtomb@plt+0x2138c>
  4262a4:	bl	404e10 <__errno_location@plt>
  4262a8:	ldr	w0, [x0]
  4262ac:	cmp	w0, #0x9
  4262b0:	b.eq	4262bc <wcrtomb@plt+0x2136c>  // b.none
  4262b4:	mov	w20, #0x0                   	// #0
  4262b8:	b	4262dc <wcrtomb@plt+0x2138c>
  4262bc:	ldr	w23, [x21, x19, lsl #2]
  4262c0:	cbnz	w23, 426300 <wcrtomb@plt+0x213b0>
  4262c4:	mov	w1, w23
  4262c8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4262cc:	add	x0, x0, #0x9e8
  4262d0:	bl	404ed0 <__open_2@plt>
  4262d4:	cmp	w0, w19
  4262d8:	b.ne	426320 <wcrtomb@plt+0x213d0>  // b.any
  4262dc:	add	x19, x19, #0x1
  4262e0:	cmp	x19, #0x3
  4262e4:	b.ne	426294 <wcrtomb@plt+0x21344>  // b.any
  4262e8:	mov	w0, w20
  4262ec:	ldp	x19, x20, [sp, #16]
  4262f0:	ldp	x21, x22, [sp, #32]
  4262f4:	ldr	x23, [sp, #48]
  4262f8:	ldp	x29, x30, [sp], #64
  4262fc:	ret
  426300:	mov	w1, w23
  426304:	mov	x0, x22
  426308:	bl	404ed0 <__open_2@plt>
  42630c:	cmp	w0, w19
  426310:	b.ne	4262c4 <wcrtomb@plt+0x21374>  // b.any
  426314:	cbz	w0, 4262dc <wcrtomb@plt+0x2138c>
  426318:	mov	w0, #0x0                   	// #0
  42631c:	b	426324 <wcrtomb@plt+0x213d4>
  426320:	tbnz	w0, #31, 4262b4 <wcrtomb@plt+0x21364>
  426324:	bl	4048c0 <close@plt>
  426328:	b	4262b4 <wcrtomb@plt+0x21364>
  42632c:	mov	w2, w0
  426330:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  426334:	tbz	w2, #1, 4263a0 <wcrtomb@plt+0x21450>
  426338:	mov	w0, #0x77                  	// #119
  42633c:	tst	x2, #0x4
  426340:	strb	w0, [x1, #3488]
  426344:	add	x0, x1, #0xda0
  426348:	mov	w3, #0x2d                  	// #45
  42634c:	mov	w4, #0x71                  	// #113
  426350:	csel	w4, w3, w4, eq  // eq = none
  426354:	tst	x2, #0x8
  426358:	mov	w1, #0x45                  	// #69
  42635c:	csel	w1, w3, w1, eq  // eq = none
  426360:	tst	x2, #0x10
  426364:	strb	w1, [x0, #2]
  426368:	mov	w1, #0x6a                  	// #106
  42636c:	csel	w1, w3, w1, eq  // eq = none
  426370:	tst	x2, #0x20
  426374:	strb	w1, [x0, #3]
  426378:	mov	w1, #0x73                  	// #115
  42637c:	csel	w1, w3, w1, eq  // eq = none
  426380:	tst	x2, #0x40
  426384:	strb	w4, [x0, #1]
  426388:	strb	w1, [x0, #4]
  42638c:	mov	w1, #0x64                  	// #100
  426390:	csel	w3, w1, w3, ne  // ne = any
  426394:	strb	w3, [x0, #5]
  426398:	strb	wzr, [x0, #6]
  42639c:	ret
  4263a0:	tst	x2, #0x1
  4263a4:	mov	w0, #0x6e                  	// #110
  4263a8:	mov	w3, #0x2d                  	// #45
  4263ac:	csel	w0, w0, w3, ne  // ne = any
  4263b0:	b	42633c <wcrtomb@plt+0x213ec>
  4263b4:	ldp	x2, x3, [x1]
  4263b8:	cbz	x2, 4263e8 <wcrtomb@plt+0x21498>
  4263bc:	str	x3, [x2, #8]
  4263c0:	ldr	x3, [x1, #8]
  4263c4:	cbnz	x3, 4263d4 <wcrtomb@plt+0x21484>
  4263c8:	ldr	w3, [x2, #16]
  4263cc:	and	w3, w3, #0xffffffef
  4263d0:	str	w3, [x2, #16]
  4263d4:	ldr	x3, [x1, #8]
  4263d8:	cbz	x3, 4263f0 <wcrtomb@plt+0x214a0>
  4263dc:	str	x2, [x3]
  4263e0:	stp	xzr, xzr, [x1]
  4263e4:	ret
  4263e8:	str	x3, [x0, #208]
  4263ec:	b	4263d4 <wcrtomb@plt+0x21484>
  4263f0:	str	x2, [x0, #216]
  4263f4:	b	4263e0 <wcrtomb@plt+0x21490>
  4263f8:	stp	x29, x30, [sp, #-64]!
  4263fc:	mov	x29, sp
  426400:	stp	x19, x20, [sp, #16]
  426404:	mov	x20, x0
  426408:	stp	x21, x22, [sp, #32]
  42640c:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x15380>
  426410:	add	x22, x22, #0xa27
  426414:	ldr	x19, [x0, #208]
  426418:	str	x23, [sp, #48]
  42641c:	adrp	x23, 44d000 <_obstack_memory_used@@Base+0x15380>
  426420:	add	x23, x23, #0xa08
  426424:	mov	w21, #0x0                   	// #0
  426428:	cbnz	x19, 426440 <wcrtomb@plt+0x214f0>
  42642c:	ldp	x19, x20, [sp, #16]
  426430:	ldp	x21, x22, [sp, #32]
  426434:	ldr	x23, [sp, #48]
  426438:	ldp	x29, x30, [sp], #64
  42643c:	ret
  426440:	ldr	w8, [x19, #16]
  426444:	ldr	w10, [x20, #224]
  426448:	mov	w0, w8
  42644c:	ldr	x9, [x20, #104]
  426450:	tbz	w8, #1, 426484 <wcrtomb@plt+0x21534>
  426454:	bl	42632c <wcrtomb@plt+0x213dc>
  426458:	mov	x5, x0
  42645c:	ldr	x6, [x19, #24]
  426460:	mov	w4, w8
  426464:	mov	x3, x19
  426468:	mov	w2, w21
  42646c:	mov	w1, w10
  426470:	mov	x0, x23
  426474:	blr	x9
  426478:	add	w21, w21, #0x1
  42647c:	ldr	x19, [x19, #8]
  426480:	b	426428 <wcrtomb@plt+0x214d8>
  426484:	bl	42632c <wcrtomb@plt+0x213dc>
  426488:	mov	x5, x0
  42648c:	ldp	x1, x6, [x19, #24]
  426490:	mov	w4, w8
  426494:	ldr	x7, [x20, #168]
  426498:	mov	x3, x19
  42649c:	mov	w2, w21
  4264a0:	mov	x0, x22
  4264a4:	sub	w6, w6, w1
  4264a8:	add	x7, x7, x1
  4264ac:	mov	w1, w10
  4264b0:	blr	x9
  4264b4:	b	426478 <wcrtomb@plt+0x21528>
  4264b8:	mov	x7, #0x1                   	// #1
  4264bc:	mov	w5, #0x0                   	// #0
  4264c0:	cmp	x1, x2
  4264c4:	b.cc	4264d0 <wcrtomb@plt+0x21580>  // b.lo, b.ul, b.last
  4264c8:	mov	w0, #0x1                   	// #1
  4264cc:	b	426528 <wcrtomb@plt+0x215d8>
  4264d0:	ldrb	w6, [x0, x1]
  4264d4:	cmp	w5, #0x1
  4264d8:	b.eq	42652c <wcrtomb@plt+0x215dc>  // b.none
  4264dc:	cmp	w5, #0x2
  4264e0:	b.eq	42653c <wcrtomb@plt+0x215ec>  // b.none
  4264e4:	cmp	w6, #0x22
  4264e8:	b.eq	426558 <wcrtomb@plt+0x21608>  // b.none
  4264ec:	cmp	w6, #0x27
  4264f0:	b.eq	426560 <wcrtomb@plt+0x21610>  // b.none
  4264f4:	ldrb	w5, [x4]
  4264f8:	cmp	w5, w6
  4264fc:	b.ne	42650c <wcrtomb@plt+0x215bc>  // b.any
  426500:	add	x7, x7, #0x1
  426504:	mov	w5, #0x0                   	// #0
  426508:	b	426534 <wcrtomb@plt+0x215e4>
  42650c:	ldrb	w5, [x4, #1]
  426510:	cmp	w5, w6
  426514:	b.ne	426504 <wcrtomb@plt+0x215b4>  // b.any
  426518:	subs	x7, x7, #0x1
  42651c:	b.ne	426504 <wcrtomb@plt+0x215b4>  // b.any
  426520:	mov	w0, #0x0                   	// #0
  426524:	str	x1, [x3]
  426528:	ret
  42652c:	cmp	w6, #0x27
  426530:	cset	w5, ne  // ne = any
  426534:	add	x1, x1, #0x1
  426538:	b	4264c0 <wcrtomb@plt+0x21570>
  42653c:	cmp	w6, #0x5c
  426540:	b.ne	42654c <wcrtomb@plt+0x215fc>  // b.any
  426544:	add	x1, x1, #0x1
  426548:	b	426534 <wcrtomb@plt+0x215e4>
  42654c:	cmp	w6, #0x22
  426550:	csel	w5, w5, wzr, ne  // ne = any
  426554:	b	426534 <wcrtomb@plt+0x215e4>
  426558:	mov	w5, #0x2                   	// #2
  42655c:	b	426534 <wcrtomb@plt+0x215e4>
  426560:	mov	w5, #0x1                   	// #1
  426564:	b	426534 <wcrtomb@plt+0x215e4>
  426568:	cmp	w0, #0x28
  42656c:	cset	w0, eq  // eq = none
  426570:	ret
  426574:	stp	x29, x30, [sp, #-32]!
  426578:	mov	x29, sp
  42657c:	str	x19, [sp, #16]
  426580:	mov	x19, x0
  426584:	ldr	w0, [x0, #16]
  426588:	tbz	w0, #1, 426594 <wcrtomb@plt+0x21644>
  42658c:	ldr	x0, [x19, #24]
  426590:	bl	404ae0 <free@plt>
  426594:	mov	x0, x19
  426598:	ldr	x19, [sp, #16]
  42659c:	ldp	x29, x30, [sp], #32
  4265a0:	b	404ae0 <free@plt>
  4265a4:	stp	x29, x30, [sp, #-32]!
  4265a8:	mov	x29, sp
  4265ac:	stp	x19, x20, [sp, #16]
  4265b0:	mov	x19, x0
  4265b4:	ldr	x0, [x0, #208]
  4265b8:	cbnz	x0, 4265cc <wcrtomb@plt+0x2167c>
  4265bc:	stp	xzr, xzr, [x19, #208]
  4265c0:	ldp	x19, x20, [sp, #16]
  4265c4:	ldp	x29, x30, [sp], #32
  4265c8:	ret
  4265cc:	ldr	x20, [x0, #8]
  4265d0:	bl	426574 <wcrtomb@plt+0x21624>
  4265d4:	mov	x0, x20
  4265d8:	b	4265b8 <wcrtomb@plt+0x21668>
  4265dc:	stp	x29, x30, [sp, #-32]!
  4265e0:	mov	x29, sp
  4265e4:	ldr	x1, [x0, #208]
  4265e8:	stp	x19, x20, [sp, #16]
  4265ec:	mov	x19, x0
  4265f0:	cbnz	x1, 426600 <wcrtomb@plt+0x216b0>
  4265f4:	ldp	x19, x20, [sp, #16]
  4265f8:	ldp	x29, x30, [sp], #32
  4265fc:	ret
  426600:	ldr	w0, [x1, #16]
  426604:	ldr	x20, [x1, #8]
  426608:	tbz	w0, #6, 426620 <wcrtomb@plt+0x216d0>
  42660c:	ldr	x0, [x1]
  426610:	cbz	x0, 426620 <wcrtomb@plt+0x216d0>
  426614:	ldr	w2, [x0, #16]
  426618:	and	w2, w2, #0xffffffef
  42661c:	str	w2, [x0, #16]
  426620:	ldr	w0, [x1, #16]
  426624:	tbz	w0, #0, 426638 <wcrtomb@plt+0x216e8>
  426628:	mov	x0, x19
  42662c:	bl	4263b4 <wcrtomb@plt+0x21464>
  426630:	mov	x0, x1
  426634:	bl	426574 <wcrtomb@plt+0x21624>
  426638:	mov	x1, x20
  42663c:	b	4265f0 <wcrtomb@plt+0x216a0>
  426640:	stp	x29, x30, [sp, #-16]!
  426644:	mov	x29, sp
  426648:	ldr	x1, [x0, #208]
  42664c:	cbnz	x1, 426660 <wcrtomb@plt+0x21710>
  426650:	bl	4265dc <wcrtomb@plt+0x2168c>
  426654:	mov	w0, #0x0                   	// #0
  426658:	ldp	x29, x30, [sp], #16
  42665c:	ret
  426660:	ldr	w2, [x1, #16]
  426664:	tbnz	w2, #2, 426694 <wcrtomb@plt+0x21744>
  426668:	ldp	x2, x5, [x1, #24]
  42666c:	cmp	x5, x2
  426670:	b.ls	426690 <wcrtomb@plt+0x21740>  // b.plast
  426674:	ldr	x3, [x0, #168]
  426678:	ldrb	w4, [x3, x2]
  42667c:	sub	w3, w4, #0x9
  426680:	cmp	w4, #0x20
  426684:	and	w3, w3, #0xff
  426688:	ccmp	w3, #0x1, #0x0, ne  // ne = any
  42668c:	b.ls	4266f0 <wcrtomb@plt+0x217a0>  // b.plast
  426690:	str	x2, [x1, #24]
  426694:	ldr	w3, [x1, #16]
  426698:	mov	x2, x1
  42669c:	ldr	x1, [x1, #8]
  4266a0:	cbz	x1, 4266a8 <wcrtomb@plt+0x21758>
  4266a4:	tbnz	w3, #4, 426694 <wcrtomb@plt+0x21744>
  4266a8:	tbnz	w3, #2, 42664c <wcrtomb@plt+0x216fc>
  4266ac:	ldp	x6, x4, [x2, #24]
  4266b0:	cmp	x6, x4
  4266b4:	b.cs	4266d8 <wcrtomb@plt+0x21788>  // b.hs, b.nlast
  4266b8:	ldr	x5, [x0, #168]
  4266bc:	sub	x8, x4, #0x1
  4266c0:	ldrb	w7, [x5, x8]
  4266c4:	sub	w5, w7, #0x9
  4266c8:	cmp	w7, #0x20
  4266cc:	and	w5, w5, #0xff
  4266d0:	ccmp	w5, #0x1, #0x0, ne  // ne = any
  4266d4:	b.ls	4266f8 <wcrtomb@plt+0x217a8>  // b.plast
  4266d8:	str	x4, [x2, #32]
  4266dc:	cmp	x6, x4
  4266e0:	b.ne	42664c <wcrtomb@plt+0x216fc>  // b.any
  4266e4:	orr	w3, w3, #0x1
  4266e8:	str	w3, [x2, #16]
  4266ec:	b	42664c <wcrtomb@plt+0x216fc>
  4266f0:	add	x2, x2, #0x1
  4266f4:	b	42666c <wcrtomb@plt+0x2171c>
  4266f8:	mov	x4, x8
  4266fc:	b	4266b0 <wcrtomb@plt+0x21760>
  426700:	stp	x29, x30, [sp, #-32]!
  426704:	mov	x29, sp
  426708:	stp	x19, x20, [sp, #16]
  42670c:	mov	x20, x0
  426710:	ldr	w0, [x0, #192]
  426714:	mov	x19, x1
  426718:	cmp	w0, #0x9
  42671c:	b.ne	426728 <wcrtomb@plt+0x217d8>  // b.any
  426720:	ldr	x0, [x20, #200]
  426724:	bl	404ae0 <free@plt>
  426728:	ldr	w0, [x19, #192]
  42672c:	str	w0, [x20, #192]
  426730:	cmp	w0, #0x9
  426734:	b.ne	426748 <wcrtomb@plt+0x217f8>  // b.any
  426738:	ldr	x0, [x19, #200]
  42673c:	str	x0, [x20, #200]
  426740:	str	wzr, [x19, #192]
  426744:	str	xzr, [x19, #200]
  426748:	ldp	x19, x20, [sp, #16]
  42674c:	ldp	x29, x30, [sp], #32
  426750:	ret
  426754:	stp	x29, x30, [sp, #-320]!
  426758:	mov	x29, sp
  42675c:	stp	x1, x2, [sp, #264]
  426760:	add	x1, sp, #0x140
  426764:	stp	x1, x1, [sp, #64]
  426768:	add	x1, sp, #0x100
  42676c:	str	x1, [sp, #80]
  426770:	mov	w1, #0xffffffc8            	// #-56
  426774:	str	w1, [sp, #88]
  426778:	mov	w1, #0xffffff80            	// #-128
  42677c:	str	w1, [sp, #92]
  426780:	mov	w1, #0x1                   	// #1
  426784:	stp	x3, x4, [sp, #280]
  426788:	ldp	x2, x3, [sp, #80]
  42678c:	str	x19, [sp, #16]
  426790:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  426794:	stp	x5, x6, [sp, #296]
  426798:	ldp	x4, x5, [sp, #64]
  42679c:	stp	x2, x3, [sp, #48]
  4267a0:	stp	x2, x3, [sp, #112]
  4267a4:	mov	x2, x0
  4267a8:	add	x3, sp, #0x20
  4267ac:	ldr	x0, [x19, #1160]
  4267b0:	stp	x4, x5, [sp, #32]
  4267b4:	stp	x4, x5, [sp, #96]
  4267b8:	str	q0, [sp, #128]
  4267bc:	str	q1, [sp, #144]
  4267c0:	str	q2, [sp, #160]
  4267c4:	str	q3, [sp, #176]
  4267c8:	str	q4, [sp, #192]
  4267cc:	str	q5, [sp, #208]
  4267d0:	str	q6, [sp, #224]
  4267d4:	str	q7, [sp, #240]
  4267d8:	str	x7, [sp, #312]
  4267dc:	bl	404790 <__vfprintf_chk@plt>
  4267e0:	ldr	x1, [x19, #1160]
  4267e4:	mov	w0, #0xa                   	// #10
  4267e8:	bl	404420 <fputc@plt>
  4267ec:	ldr	x19, [sp, #16]
  4267f0:	ldp	x29, x30, [sp], #320
  4267f4:	ret
  4267f8:	stp	x29, x30, [sp, #-32]!
  4267fc:	mov	w2, #0x5                   	// #5
  426800:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  426804:	mov	x29, sp
  426808:	add	x1, x1, #0xab4
  42680c:	str	x19, [sp, #16]
  426810:	ldr	x19, [x0, #96]
  426814:	mov	x0, #0x0                   	// #0
  426818:	bl	404d00 <dcgettext@plt>
  42681c:	mov	x1, x0
  426820:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  426824:	add	x0, x0, #0xb0d
  426828:	blr	x19
  42682c:	bl	404970 <abort@plt>
  426830:	stp	x29, x30, [sp, #-96]!
  426834:	mov	x29, sp
  426838:	stp	x19, x20, [sp, #16]
  42683c:	mov	x20, x0
  426840:	mov	w19, w2
  426844:	stp	x21, x22, [sp, #32]
  426848:	mov	x22, x1
  42684c:	mov	w21, w3
  426850:	stp	x23, x24, [sp, #48]
  426854:	adrp	x23, 44d000 <_obstack_memory_used@@Base+0x15380>
  426858:	add	x23, x23, #0xa48
  42685c:	stp	x25, x26, [sp, #64]
  426860:	mov	x26, #0x0                   	// #0
  426864:	stp	x27, x28, [sp, #80]
  426868:	mov	w28, #0x0                   	// #0
  42686c:	ldrb	w27, [x22, x26]
  426870:	mov	w25, w26
  426874:	mov	w24, w26
  426878:	cmp	w27, #0x7f
  42687c:	b.gt	4268c4 <wcrtomb@plt+0x21974>
  426880:	sub	w4, w27, #0x30
  426884:	cmp	w4, #0x9
  426888:	b.ls	4268a8 <wcrtomb@plt+0x21958>  // b.plast
  42688c:	mov	w1, w27
  426890:	mov	x0, x23
  426894:	bl	404b90 <strchr@plt>
  426898:	cbz	x0, 4268c4 <wcrtomb@plt+0x21974>
  42689c:	mov	w0, w27
  4268a0:	bl	404600 <toupper@plt>
  4268a4:	sub	w4, w0, #0x37
  4268a8:	cmp	w4, w19
  4268ac:	b.ge	4268c4 <wcrtomb@plt+0x21974>  // b.tcont
  4268b0:	add	x26, x26, #0x1
  4268b4:	madd	w28, w19, w28, w4
  4268b8:	add	w24, w25, #0x1
  4268bc:	cmp	w21, w26
  4268c0:	b.gt	42686c <wcrtomb@plt+0x2191c>
  4268c4:	mov	w0, w24
  4268c8:	ldp	x21, x22, [sp, #32]
  4268cc:	ldp	x23, x24, [sp, #48]
  4268d0:	ldp	x25, x26, [sp, #64]
  4268d4:	str	w28, [x20]
  4268d8:	ldp	x19, x20, [sp, #16]
  4268dc:	ldp	x27, x28, [sp, #80]
  4268e0:	ldp	x29, x30, [sp], #96
  4268e4:	ret
  4268e8:	ldr	w3, [x1, #16]
  4268ec:	mov	x2, x0
  4268f0:	tbnz	w3, #0, 426908 <wcrtomb@plt+0x219b8>
  4268f4:	ldr	x0, [x1, #24]
  4268f8:	tbnz	w3, #1, 426904 <wcrtomb@plt+0x219b4>
  4268fc:	ldr	x1, [x2]
  426900:	add	x0, x1, x0
  426904:	ret
  426908:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42690c:	add	x0, x0, #0x41a
  426910:	b	426904 <wcrtomb@plt+0x219b4>
  426914:	sub	w1, w0, #0x41
  426918:	mov	x0, #0xffffffff43ffffff    	// #-3154116609
  42691c:	movk	x0, #0x7ff, lsl #48
  426920:	cmp	w1, #0x3b
  426924:	lsr	x0, x0, x1
  426928:	and	w0, w0, #0x1
  42692c:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
  426930:	ret
  426934:	ldr	w2, [x0, #16]
  426938:	mov	x1, x0
  42693c:	tbnz	w2, #0, 426958 <wcrtomb@plt+0x21a08>
  426940:	ldr	x0, [x0, #24]
  426944:	tbz	w2, #1, 42694c <wcrtomb@plt+0x219fc>
  426948:	b	404280 <strlen@plt>
  42694c:	ldr	x1, [x1, #32]
  426950:	sub	x0, x1, x0
  426954:	ret
  426958:	mov	x0, #0x0                   	// #0
  42695c:	b	426954 <wcrtomb@plt+0x21a04>
  426960:	ldr	x4, [x0, #208]
  426964:	mov	x3, x1
  426968:	cbnz	x4, 42697c <wcrtomb@plt+0x21a2c>
  42696c:	stp	xzr, xzr, [x1]
  426970:	stp	x1, x1, [x0, #208]
  426974:	ret
  426978:	mov	x3, x4
  42697c:	cbz	x3, 426988 <wcrtomb@plt+0x21a38>
  426980:	ldr	x4, [x3, #8]
  426984:	cbnz	x4, 426978 <wcrtomb@plt+0x21a28>
  426988:	ldr	x4, [x2, #8]
  42698c:	cbz	x4, 4269a4 <wcrtomb@plt+0x21a54>
  426990:	str	x3, [x4]
  426994:	str	x4, [x3, #8]
  426998:	str	x2, [x1]
  42699c:	str	x1, [x2, #8]
  4269a0:	b	426974 <wcrtomb@plt+0x21a24>
  4269a4:	str	x3, [x0, #216]
  4269a8:	b	426994 <wcrtomb@plt+0x21a44>
  4269ac:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  4269b0:	mov	w3, w0
  4269b4:	ldrb	w2, [x1, #672]
  4269b8:	add	x1, x1, #0x2a0
  4269bc:	cbz	w2, 4269dc <wcrtomb@plt+0x21a8c>
  4269c0:	ldrb	w0, [x1, #1]
  4269c4:	cbnz	w0, 4269cc <wcrtomb@plt+0x21a7c>
  4269c8:	ret
  4269cc:	cmp	w3, w2
  4269d0:	b.eq	4269c8 <wcrtomb@plt+0x21a78>  // b.none
  4269d4:	ldrb	w2, [x1, #2]!
  4269d8:	b	4269bc <wcrtomb@plt+0x21a6c>
  4269dc:	mov	w0, #0x0                   	// #0
  4269e0:	b	4269c8 <wcrtomb@plt+0x21a78>
  4269e4:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  4269e8:	mov	w2, w0
  4269ec:	add	x1, x1, #0x2a0
  4269f0:	ldrb	w0, [x1]
  4269f4:	cbz	w0, 426a00 <wcrtomb@plt+0x21ab0>
  4269f8:	ldrb	w3, [x1, #1]
  4269fc:	cbnz	w3, 426a08 <wcrtomb@plt+0x21ab8>
  426a00:	mov	w0, #0x0                   	// #0
  426a04:	ret
  426a08:	cmp	w2, w3
  426a0c:	b.eq	426a04 <wcrtomb@plt+0x21ab4>  // b.none
  426a10:	add	x1, x1, #0x2
  426a14:	b	4269f0 <wcrtomb@plt+0x21aa0>
  426a18:	stp	x29, x30, [sp, #-80]!
  426a1c:	mov	x29, sp
  426a20:	stp	x19, x20, [sp, #16]
  426a24:	mov	x20, x0
  426a28:	mov	x19, #0x0                   	// #0
  426a2c:	stp	x21, x22, [sp, #32]
  426a30:	mov	w22, w1
  426a34:	mov	x21, x2
  426a38:	stp	x23, x24, [sp, #48]
  426a3c:	adrp	x23, 44d000 <_obstack_memory_used@@Base+0x15380>
  426a40:	add	x23, x23, #0xa55
  426a44:	mov	w24, #0x1                   	// #1
  426a48:	str	wzr, [x2]
  426a4c:	str	x25, [sp, #64]
  426a50:	mov	w25, #0x5c                  	// #92
  426a54:	ldrb	w1, [x20]
  426a58:	cbnz	w1, 426a78 <wcrtomb@plt+0x21b28>
  426a5c:	mov	x0, x19
  426a60:	ldp	x19, x20, [sp, #16]
  426a64:	ldp	x21, x22, [sp, #32]
  426a68:	ldp	x23, x24, [sp, #48]
  426a6c:	ldr	x25, [sp, #64]
  426a70:	ldp	x29, x30, [sp], #80
  426a74:	ret
  426a78:	mov	x0, x23
  426a7c:	bl	404b90 <strchr@plt>
  426a80:	cbz	x0, 426a88 <wcrtomb@plt+0x21b38>
  426a84:	str	w24, [x21]
  426a88:	ldrb	w0, [x20]
  426a8c:	cmp	w0, #0x20
  426a90:	b.ne	426a9c <wcrtomb@plt+0x21b4c>  // b.any
  426a94:	add	x19, x19, #0x1
  426a98:	b	426aa8 <wcrtomb@plt+0x21b58>
  426a9c:	cmp	w0, #0x22
  426aa0:	b.ne	426ab0 <wcrtomb@plt+0x21b60>  // b.any
  426aa4:	add	x19, x19, #0x2
  426aa8:	add	x20, x20, #0x1
  426aac:	b	426a54 <wcrtomb@plt+0x21b04>
  426ab0:	sub	w1, w0, #0x20
  426ab4:	and	w1, w1, #0xff
  426ab8:	cmp	w1, #0x5f
  426abc:	ccmp	w0, w25, #0x4, ls  // ls = plast
  426ac0:	b.ne	426a94 <wcrtomb@plt+0x21b44>  // b.any
  426ac4:	cbz	w22, 426ad0 <wcrtomb@plt+0x21b80>
  426ac8:	add	x19, x19, #0x3
  426acc:	b	426aa8 <wcrtomb@plt+0x21b58>
  426ad0:	bl	4269e4 <wcrtomb@plt+0x21a94>
  426ad4:	cmp	w0, #0x0
  426ad8:	add	x1, x19, #0x2
  426adc:	add	x19, x19, #0x4
  426ae0:	csel	x19, x19, x1, eq  // eq = none
  426ae4:	b	426aa8 <wcrtomb@plt+0x21b58>
  426ae8:	stp	x29, x30, [sp, #-80]!
  426aec:	mov	x29, sp
  426af0:	stp	x19, x20, [sp, #16]
  426af4:	mov	x19, x0
  426af8:	mov	x20, x1
  426afc:	stp	x21, x22, [sp, #32]
  426b00:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x15380>
  426b04:	mov	w21, w2
  426b08:	add	x22, x22, #0xa5f
  426b0c:	str	x23, [sp, #48]
  426b10:	adrp	x23, 44d000 <_obstack_memory_used@@Base+0x15380>
  426b14:	add	x23, x23, #0xa58
  426b18:	ldrb	w5, [x20]
  426b1c:	cbnz	w5, 426b34 <wcrtomb@plt+0x21be4>
  426b20:	ldp	x19, x20, [sp, #16]
  426b24:	ldp	x21, x22, [sp, #32]
  426b28:	ldr	x23, [sp, #48]
  426b2c:	ldp	x29, x30, [sp], #80
  426b30:	ret
  426b34:	cmp	w5, #0x22
  426b38:	b.ne	426b5c <wcrtomb@plt+0x21c0c>  // b.any
  426b3c:	mov	x0, x19
  426b40:	mov	w1, #0x5c                  	// #92
  426b44:	strb	w1, [x0], #2
  426b48:	ldrb	w1, [x20]
  426b4c:	strb	w1, [x19, #1]
  426b50:	mov	x19, x0
  426b54:	add	x20, x20, #0x1
  426b58:	b	426b18 <wcrtomb@plt+0x21bc8>
  426b5c:	sub	w0, w5, #0x20
  426b60:	mov	w4, #0x5c                  	// #92
  426b64:	and	w0, w0, #0xff
  426b68:	cmp	w0, #0x5f
  426b6c:	ccmp	w5, w4, #0x4, ls  // ls = plast
  426b70:	b.eq	426b7c <wcrtomb@plt+0x21c2c>  // b.none
  426b74:	strb	w5, [x19], #1
  426b78:	b	426b54 <wcrtomb@plt+0x21c04>
  426b7c:	cbz	w21, 426bb0 <wcrtomb@plt+0x21c60>
  426b80:	mov	x3, #0x4                   	// #4
  426b84:	mov	x4, x23
  426b88:	mov	x1, x3
  426b8c:	add	x0, sp, #0x48
  426b90:	mov	w2, #0x1                   	// #1
  426b94:	bl	404560 <__snprintf_chk@plt>
  426b98:	ldrh	w0, [sp, #72]
  426b9c:	add	x19, x19, #0x3
  426ba0:	sturh	w0, [x19, #-3]
  426ba4:	ldrb	w0, [sp, #74]
  426ba8:	sturb	w0, [x19, #-1]
  426bac:	b	426b54 <wcrtomb@plt+0x21c04>
  426bb0:	mov	w0, w5
  426bb4:	bl	4269e4 <wcrtomb@plt+0x21a94>
  426bb8:	strb	w4, [x19]
  426bbc:	cbz	w0, 426bcc <wcrtomb@plt+0x21c7c>
  426bc0:	add	x19, x19, #0x2
  426bc4:	sturb	w0, [x19, #-1]
  426bc8:	b	426b54 <wcrtomb@plt+0x21c04>
  426bcc:	ldrb	w5, [x20]
  426bd0:	mov	x3, #0x4                   	// #4
  426bd4:	mov	x4, x22
  426bd8:	mov	x1, x3
  426bdc:	add	x0, sp, #0x48
  426be0:	mov	w2, #0x1                   	// #1
  426be4:	add	x19, x19, #0x4
  426be8:	bl	404560 <__snprintf_chk@plt>
  426bec:	ldrh	w0, [sp, #72]
  426bf0:	sturh	w0, [x19, #-3]
  426bf4:	ldrb	w0, [sp, #74]
  426bf8:	sturb	w0, [x19, #-1]
  426bfc:	b	426b54 <wcrtomb@plt+0x21c04>
  426c00:	stp	x29, x30, [sp, #-32]!
  426c04:	mov	x29, sp
  426c08:	stp	x19, x20, [sp, #16]
  426c0c:	mov	x19, x0
  426c10:	mov	x20, #0x0                   	// #0
  426c14:	ldr	x0, [x19]
  426c18:	cmp	x0, x20
  426c1c:	b.hi	426c30 <wcrtomb@plt+0x21ce0>  // b.pmore
  426c20:	str	xzr, [x19]
  426c24:	ldp	x19, x20, [sp, #16]
  426c28:	ldp	x29, x30, [sp], #32
  426c2c:	ret
  426c30:	ldp	x1, x0, [x19, #8]
  426c34:	add	x0, x20, x0
  426c38:	ldr	x0, [x1, x0, lsl #3]
  426c3c:	cbz	x0, 426c50 <wcrtomb@plt+0x21d00>
  426c40:	bl	404ae0 <free@plt>
  426c44:	ldp	x1, x0, [x19, #8]
  426c48:	add	x0, x20, x0
  426c4c:	str	xzr, [x1, x0, lsl #3]
  426c50:	add	x20, x20, #0x1
  426c54:	b	426c14 <wcrtomb@plt+0x21cc4>
  426c58:	stp	x29, x30, [sp, #-32]!
  426c5c:	mov	x29, sp
  426c60:	stp	x19, x20, [sp, #16]
  426c64:	mov	x19, x0
  426c68:	ldr	w0, [x0, #32]
  426c6c:	tbnz	w0, #2, 426c78 <wcrtomb@plt+0x21d28>
  426c70:	ldr	x0, [x19, #120]
  426c74:	cbnz	x0, 426cac <wcrtomb@plt+0x21d5c>
  426c78:	ldp	x19, x20, [sp, #16]
  426c7c:	ldp	x29, x30, [sp], #32
  426c80:	ret
  426c84:	mov	x0, x1
  426c88:	bl	404ae0 <free@plt>
  426c8c:	ldr	x0, [x19, #120]
  426c90:	ldr	x1, [x0, x20]
  426c94:	add	x20, x20, #0x8
  426c98:	cbnz	x1, 426c84 <wcrtomb@plt+0x21d34>
  426c9c:	bl	404ae0 <free@plt>
  426ca0:	stp	xzr, xzr, [x19, #120]
  426ca4:	str	xzr, [x19, #136]
  426ca8:	b	426c78 <wcrtomb@plt+0x21d28>
  426cac:	mov	x20, #0x0                   	// #0
  426cb0:	b	426c8c <wcrtomb@plt+0x21d3c>
  426cb4:	stp	x29, x30, [sp, #-32]!
  426cb8:	mov	x29, sp
  426cbc:	str	x19, [sp, #16]
  426cc0:	mov	x19, x0
  426cc4:	ldr	w0, [x0, #192]
  426cc8:	cmp	w0, #0x9
  426ccc:	b.ne	426cd8 <wcrtomb@plt+0x21d88>  // b.any
  426cd0:	ldr	x0, [x19, #200]
  426cd4:	bl	404ae0 <free@plt>
  426cd8:	str	wzr, [x19, #192]
  426cdc:	str	xzr, [x19, #200]
  426ce0:	ldr	x19, [sp, #16]
  426ce4:	ldp	x29, x30, [sp], #32
  426ce8:	ret
  426cec:	stp	x29, x30, [sp, #-32]!
  426cf0:	mov	x29, sp
  426cf4:	ldr	w1, [x0, #32]
  426cf8:	str	x19, [sp, #16]
  426cfc:	mov	x19, x0
  426d00:	tbz	w1, #3, 426d24 <wcrtomb@plt+0x21dd4>
  426d04:	tbnz	w1, #0, 426d0c <wcrtomb@plt+0x21dbc>
  426d08:	bl	426c00 <wcrtomb@plt+0x21cb0>
  426d0c:	mov	x0, x19
  426d10:	bl	426cb4 <wcrtomb@plt+0x21d64>
  426d14:	str	wzr, [x19, #192]
  426d18:	ldr	x19, [sp, #16]
  426d1c:	ldp	x29, x30, [sp], #32
  426d20:	ret
  426d24:	stp	xzr, xzr, [x0]
  426d28:	str	xzr, [x0, #24]
  426d2c:	b	426d14 <wcrtomb@plt+0x21dc4>
  426d30:	stp	x29, x30, [sp, #-32]!
  426d34:	mov	x29, sp
  426d38:	str	x19, [sp, #16]
  426d3c:	mov	x19, x0
  426d40:	bl	4265a4 <wcrtomb@plt+0x21654>
  426d44:	mov	x0, x19
  426d48:	bl	426c00 <wcrtomb@plt+0x21cb0>
  426d4c:	ldr	x0, [x19, #8]
  426d50:	bl	404ae0 <free@plt>
  426d54:	str	xzr, [x19, #8]
  426d58:	mov	x0, x19
  426d5c:	ldr	x19, [sp, #16]
  426d60:	ldp	x29, x30, [sp], #32
  426d64:	b	426c58 <wcrtomb@plt+0x21d08>
  426d68:	stp	x29, x30, [sp, #-48]!
  426d6c:	mov	x29, sp
  426d70:	stp	x19, x20, [sp, #16]
  426d74:	mov	x19, x0
  426d78:	mov	x20, x1
  426d7c:	ldp	x1, x0, [x0]
  426d80:	str	x21, [sp, #32]
  426d84:	mov	x21, x2
  426d88:	add	x1, x1, #0x1
  426d8c:	lsl	x1, x1, #3
  426d90:	bl	404820 <realloc@plt>
  426d94:	cbz	x0, 426dc0 <wcrtomb@plt+0x21e70>
  426d98:	str	x0, [x21]
  426d9c:	ldr	x0, [x19]
  426da0:	str	x0, [x20]
  426da4:	mov	w0, #0x0                   	// #0
  426da8:	stp	xzr, xzr, [x19]
  426dac:	str	xzr, [x19, #24]
  426db0:	ldp	x19, x20, [sp, #16]
  426db4:	ldr	x21, [sp, #32]
  426db8:	ldp	x29, x30, [sp], #48
  426dbc:	ret
  426dc0:	mov	w0, #0xffffffff            	// #-1
  426dc4:	b	426db0 <wcrtomb@plt+0x21e60>
  426dc8:	ldr	w1, [x0, #192]
  426dcc:	cmp	w1, #0x9
  426dd0:	b.ne	426ddc <wcrtomb@plt+0x21e8c>  // b.any
  426dd4:	ldr	x0, [x0, #200]
  426dd8:	ret
  426ddc:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  426de0:	add	x0, x0, #0x2a0
  426de4:	ldr	w2, [x0, #20]
  426de8:	cmp	w1, w2
  426dec:	b.ge	426dfc <wcrtomb@plt+0x21eac>  // b.tcont
  426df0:	add	x0, x0, #0x18
  426df4:	ldr	x0, [x0, w1, sxtw #3]
  426df8:	b	426dd8 <wcrtomb@plt+0x21e88>
  426dfc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  426e00:	add	x0, x0, #0xa64
  426e04:	b	426dd8 <wcrtomb@plt+0x21e88>
  426e08:	stp	x29, x30, [sp, #-32]!
  426e0c:	mov	x29, sp
  426e10:	ldr	w1, [x0, #192]
  426e14:	stp	x19, x20, [sp, #16]
  426e18:	cmp	w1, #0x1
  426e1c:	ldr	x20, [x0, #96]
  426e20:	b.ne	426e58 <wcrtomb@plt+0x21f08>  // b.any
  426e24:	mov	x19, x0
  426e28:	mov	w2, #0x5                   	// #5
  426e2c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  426e30:	mov	x0, #0x0                   	// #0
  426e34:	add	x1, x1, #0xa72
  426e38:	bl	404d00 <dcgettext@plt>
  426e3c:	ldr	x1, [x19, #168]
  426e40:	mov	x16, x20
  426e44:	ldr	x2, [x19, #184]
  426e48:	ldp	x19, x20, [sp, #16]
  426e4c:	ldp	x29, x30, [sp], #32
  426e50:	ldrb	w1, [x1, x2]
  426e54:	br	x16
  426e58:	bl	426dc8 <wcrtomb@plt+0x21e78>
  426e5c:	mov	x1, x0
  426e60:	mov	x16, x20
  426e64:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  426e68:	ldp	x19, x20, [sp, #16]
  426e6c:	add	x0, x0, #0xb0d
  426e70:	ldp	x29, x30, [sp], #32
  426e74:	br	x16
  426e78:	stp	x29, x30, [sp, #-32]!
  426e7c:	mov	x29, sp
  426e80:	str	x19, [sp, #16]
  426e84:	mov	x19, x0
  426e88:	bl	404e10 <__errno_location@plt>
  426e8c:	mov	w1, #0xc                   	// #12
  426e90:	str	w1, [x0]
  426e94:	mov	w0, #0x2                   	// #2
  426e98:	str	w0, [x19, #192]
  426e9c:	ldr	w0, [x19, #32]
  426ea0:	tbz	w0, #7, 426eb0 <wcrtomb@plt+0x21f60>
  426ea4:	ldr	x1, [x19, #88]
  426ea8:	mov	x0, x19
  426eac:	blr	x1
  426eb0:	ldr	w0, [x19, #32]
  426eb4:	tbz	w0, #4, 426ec0 <wcrtomb@plt+0x21f70>
  426eb8:	mov	x0, x19
  426ebc:	bl	426e08 <wcrtomb@plt+0x21eb8>
  426ec0:	ldr	w0, [x19, #32]
  426ec4:	tbnz	w0, #3, 426ed0 <wcrtomb@plt+0x21f80>
  426ec8:	mov	x0, x19
  426ecc:	bl	426d30 <wcrtomb@plt+0x21de0>
  426ed0:	mov	x0, x19
  426ed4:	bl	4265a4 <wcrtomb@plt+0x21654>
  426ed8:	ldr	w0, [x19, #192]
  426edc:	ldr	x19, [sp, #16]
  426ee0:	ldp	x29, x30, [sp], #32
  426ee4:	ret
  426ee8:	stp	x29, x30, [sp, #-32]!
  426eec:	mov	x29, sp
  426ef0:	stp	x19, x20, [sp, #16]
  426ef4:	mov	x20, x0
  426ef8:	ldr	w0, [x0, #32]
  426efc:	mov	x19, x1
  426f00:	tbz	w0, #1, 426f48 <wcrtomb@plt+0x21ff8>
  426f04:	ldr	x1, [x20, #16]
  426f08:	ldr	x0, [x20, #8]
  426f0c:	cbnz	x0, 426f50 <wcrtomb@plt+0x22000>
  426f10:	add	x1, x1, x19
  426f14:	mov	x0, #0x80                  	// #128
  426f18:	cmp	x1, #0x80
  426f1c:	mov	x1, #0x8                   	// #8
  426f20:	csel	x19, x19, x0, hi  // hi = pmore
  426f24:	mov	x0, x19
  426f28:	bl	4047a0 <calloc@plt>
  426f2c:	cbz	x0, 426f84 <wcrtomb@plt+0x22034>
  426f30:	str	x0, [x20, #8]
  426f34:	str	x19, [x20, #24]
  426f38:	mov	w0, #0x0                   	// #0
  426f3c:	ldp	x19, x20, [sp, #16]
  426f40:	ldp	x29, x30, [sp], #32
  426f44:	ret
  426f48:	mov	x1, #0x0                   	// #0
  426f4c:	b	426f08 <wcrtomb@plt+0x21fb8>
  426f50:	ldr	x2, [x20]
  426f54:	ldr	x3, [x20, #24]
  426f58:	add	x1, x1, x2
  426f5c:	add	x2, x1, x19
  426f60:	cmp	x3, x2
  426f64:	b.cs	426f38 <wcrtomb@plt+0x21fe8>  // b.hs, b.nlast
  426f68:	cmp	x19, #0x80
  426f6c:	mov	x2, #0x80                  	// #128
  426f70:	csel	x19, x19, x2, cs  // cs = hs, nlast
  426f74:	add	x19, x19, x1
  426f78:	lsl	x1, x19, #3
  426f7c:	bl	404820 <realloc@plt>
  426f80:	b	426f2c <wcrtomb@plt+0x21fdc>
  426f84:	mov	x0, x20
  426f88:	ldp	x19, x20, [sp, #16]
  426f8c:	ldp	x29, x30, [sp], #32
  426f90:	b	426e78 <wcrtomb@plt+0x21f28>
  426f94:	stp	x29, x30, [sp, #-64]!
  426f98:	mov	x29, sp
  426f9c:	stp	x21, x22, [sp, #32]
  426fa0:	sxtw	x22, w1
  426fa4:	ldr	x1, [x0]
  426fa8:	str	x23, [sp, #48]
  426fac:	mov	x23, x2
  426fb0:	add	x2, x22, #0x1
  426fb4:	add	x1, x2, x1
  426fb8:	stp	x19, x20, [sp, #16]
  426fbc:	mov	x19, x0
  426fc0:	bl	426ee8 <wcrtomb@plt+0x21f98>
  426fc4:	mov	w21, w0
  426fc8:	cbnz	w0, 426ff4 <wcrtomb@plt+0x220a4>
  426fcc:	mov	x20, #0x0                   	// #0
  426fd0:	cmp	x22, x20
  426fd4:	b.hi	42700c <wcrtomb@plt+0x220bc>  // b.pmore
  426fd8:	ldr	x0, [x19]
  426fdc:	add	x20, x20, x0
  426fe0:	str	x20, [x19]
  426fe4:	ldr	x0, [x19, #16]
  426fe8:	add	x20, x20, x0
  426fec:	ldr	x0, [x19, #8]
  426ff0:	str	xzr, [x0, x20, lsl #3]
  426ff4:	mov	w0, w21
  426ff8:	ldp	x19, x20, [sp, #16]
  426ffc:	ldp	x21, x22, [sp, #32]
  427000:	ldr	x23, [sp, #48]
  427004:	ldp	x29, x30, [sp], #64
  427008:	ret
  42700c:	ldr	x0, [x23, x20, lsl #3]
  427010:	bl	404870 <strdup@plt>
  427014:	cbnz	x0, 427078 <wcrtomb@plt+0x22128>
  427018:	cbnz	x20, 427034 <wcrtomb@plt+0x220e4>
  42701c:	mov	x0, x19
  427020:	ldp	x19, x20, [sp, #16]
  427024:	ldp	x21, x22, [sp, #32]
  427028:	ldr	x23, [sp, #48]
  42702c:	ldp	x29, x30, [sp], #64
  427030:	b	426e78 <wcrtomb@plt+0x21f28>
  427034:	ldr	x0, [x19, #16]
  427038:	ldr	x1, [x19]
  42703c:	add	x0, x20, x0
  427040:	add	x0, x0, x1
  427044:	ldr	x1, [x19, #8]
  427048:	add	x0, x1, x0, lsl #3
  42704c:	ldur	x0, [x0, #-8]
  427050:	bl	404ae0 <free@plt>
  427054:	ldr	x0, [x19, #16]
  427058:	ldr	x1, [x19]
  42705c:	add	x0, x20, x0
  427060:	sub	x20, x20, #0x1
  427064:	add	x0, x0, x1
  427068:	ldr	x1, [x19, #8]
  42706c:	add	x0, x1, x0, lsl #3
  427070:	stur	xzr, [x0, #-8]
  427074:	b	427018 <wcrtomb@plt+0x220c8>
  427078:	ldr	x3, [x19, #16]
  42707c:	ldr	x1, [x19]
  427080:	add	x3, x20, x3
  427084:	add	x20, x20, #0x1
  427088:	add	x3, x3, x1
  42708c:	ldr	x1, [x19, #8]
  427090:	str	x0, [x1, x3, lsl #3]
  427094:	b	426fd0 <wcrtomb@plt+0x22080>
  427098:	stp	x29, x30, [sp, #-32]!
  42709c:	mov	x29, sp
  4270a0:	stp	x19, x20, [sp, #16]
  4270a4:	mov	x20, x0
  4270a8:	mov	x19, x1
  4270ac:	mov	x0, #0x1                   	// #1
  4270b0:	mov	x1, #0x28                  	// #40
  4270b4:	bl	4047a0 <calloc@plt>
  4270b8:	cbnz	x0, 4270cc <wcrtomb@plt+0x2217c>
  4270bc:	mov	x0, x20
  4270c0:	ldp	x19, x20, [sp, #16]
  4270c4:	ldp	x29, x30, [sp], #32
  4270c8:	b	426e78 <wcrtomb@plt+0x21f28>
  4270cc:	str	x0, [x19]
  4270d0:	mov	w0, #0x0                   	// #0
  4270d4:	ldp	x19, x20, [sp, #16]
  4270d8:	ldp	x29, x30, [sp], #32
  4270dc:	ret
  4270e0:	stp	x29, x30, [sp, #-64]!
  4270e4:	cmp	x2, x1
  4270e8:	mov	x29, sp
  4270ec:	stp	x19, x20, [sp, #16]
  4270f0:	mov	x20, x0
  4270f4:	mov	w19, w3
  4270f8:	stp	x21, x22, [sp, #32]
  4270fc:	mov	x22, x1
  427100:	mov	x21, x2
  427104:	b.ne	427110 <wcrtomb@plt+0x221c0>  // b.any
  427108:	and	w0, w3, #0x100
  42710c:	tbz	w19, #8, 427148 <wcrtomb@plt+0x221f8>
  427110:	add	x1, sp, #0x38
  427114:	mov	x0, x20
  427118:	bl	427098 <wcrtomb@plt+0x22148>
  42711c:	cbnz	w0, 427148 <wcrtomb@plt+0x221f8>
  427120:	ldr	x4, [sp, #56]
  427124:	mov	w3, #0xfffffefd            	// #-259
  427128:	ldr	x1, [x20, #216]
  42712c:	and	w19, w19, w3
  427130:	stp	x1, xzr, [x4]
  427134:	str	w19, [x4, #16]
  427138:	stp	x22, x21, [x4, #24]
  42713c:	cbz	x1, 427158 <wcrtomb@plt+0x22208>
  427140:	str	x4, [x1, #8]
  427144:	str	x4, [x20, #216]
  427148:	ldp	x19, x20, [sp, #16]
  42714c:	ldp	x21, x22, [sp, #32]
  427150:	ldp	x29, x30, [sp], #64
  427154:	ret
  427158:	str	x4, [x20, #208]
  42715c:	b	427144 <wcrtomb@plt+0x221f4>
  427160:	stp	x29, x30, [sp, #-144]!
  427164:	mov	x29, sp
  427168:	stp	x23, x24, [sp, #48]
  42716c:	add	x23, x0, #0xa8
  427170:	ldr	x24, [x0, #208]
  427174:	stp	x19, x20, [sp, #16]
  427178:	mov	x19, x0
  42717c:	stp	x21, x22, [sp, #32]
  427180:	stp	x25, x26, [sp, #64]
  427184:	stp	x27, x28, [sp, #80]
  427188:	cbnz	x24, 427194 <wcrtomb@plt+0x22244>
  42718c:	mov	w0, #0x0                   	// #0
  427190:	b	4271e0 <wcrtomb@plt+0x22290>
  427194:	ldr	w0, [x19, #32]
  427198:	tst	w0, #0x600
  42719c:	b.eq	42726c <wcrtomb@plt+0x2231c>  // b.none
  4271a0:	ldr	w21, [x24, #16]
  4271a4:	tbnz	w21, #3, 42726c <wcrtomb@plt+0x2231c>
  4271a8:	mov	x1, x24
  4271ac:	mov	x0, x23
  4271b0:	bl	4268e8 <wcrtomb@plt+0x21998>
  4271b4:	mov	x26, x0
  4271b8:	mov	x0, x24
  4271bc:	bl	426934 <wcrtomb@plt+0x219e4>
  4271c0:	mov	x20, x0
  4271c4:	tbnz	w21, #1, 42721c <wcrtomb@plt+0x222cc>
  4271c8:	add	x0, x0, #0x1
  4271cc:	bl	4045f0 <malloc@plt>
  4271d0:	mov	x21, x0
  4271d4:	cbnz	x0, 4271fc <wcrtomb@plt+0x222ac>
  4271d8:	mov	x0, x19
  4271dc:	bl	426e78 <wcrtomb@plt+0x21f28>
  4271e0:	ldp	x19, x20, [sp, #16]
  4271e4:	ldp	x21, x22, [sp, #32]
  4271e8:	ldp	x23, x24, [sp, #48]
  4271ec:	ldp	x25, x26, [sp, #64]
  4271f0:	ldp	x27, x28, [sp, #80]
  4271f4:	ldp	x29, x30, [sp], #144
  4271f8:	ret
  4271fc:	mov	x2, x20
  427200:	mov	x1, x26
  427204:	bl	404200 <memcpy@plt>
  427208:	strb	wzr, [x21, x20]
  42720c:	str	x21, [x24, #24]
  427210:	ldr	w0, [x24, #16]
  427214:	orr	w0, w0, #0x2
  427218:	str	w0, [x24, #16]
  42721c:	ldr	w21, [x24, #16]
  427220:	mov	w1, #0x40                  	// #64
  427224:	ldr	x28, [x24, #24]
  427228:	and	w0, w21, #0x4
  42722c:	ubfx	x21, x21, #2, #1
  427230:	mov	w22, #0x10                  	// #16
  427234:	lsl	w1, w1, w0
  427238:	add	x21, x21, #0x8
  42723c:	str	w1, [sp, #108]
  427240:	mov	w1, #0x20                  	// #32
  427244:	lsl	w1, w1, w0
  427248:	mov	w25, #0x0                   	// #0
  42724c:	lsl	w22, w22, w0
  427250:	add	x0, x19, x21, lsl #3
  427254:	str	x0, [sp, #112]
  427258:	str	w1, [sp, #120]
  42725c:	sxtw	x0, w25
  427260:	cmp	x20, w25, sxtw
  427264:	b.hi	427274 <wcrtomb@plt+0x22324>  // b.pmore
  427268:	strb	wzr, [x28]
  42726c:	ldr	x24, [x24, #8]
  427270:	b	427188 <wcrtomb@plt+0x22238>
  427274:	ldrb	w9, [x26, x0]
  427278:	add	w27, w25, #0x1
  42727c:	cmp	w9, #0x5c
  427280:	b.ne	4273dc <wcrtomb@plt+0x2248c>  // b.any
  427284:	ldr	w2, [x19, #36]
  427288:	sxtw	x21, w27
  42728c:	ldr	w0, [sp, #108]
  427290:	add	x1, x26, w27, sxtw
  427294:	ldrb	w3, [x26, w27, sxtw]
  427298:	tst	w2, w0
  42729c:	b.eq	427318 <wcrtomb@plt+0x223c8>  // b.none
  4272a0:	and	w0, w3, #0xffffffdf
  4272a4:	cmp	w0, #0x58
  4272a8:	b.ne	427318 <wcrtomb@plt+0x223c8>  // b.any
  4272ac:	sub	x0, x20, x21
  4272b0:	cmp	x0, #0x1
  4272b4:	b.hi	4272d8 <wcrtomb@plt+0x22388>  // b.pmore
  4272b8:	mov	x1, x28
  4272bc:	strb	w9, [x1], #2
  4272c0:	ldrb	w0, [x26, x21]
  4272c4:	add	w27, w25, #0x2
  4272c8:	strb	w0, [x28, #1]
  4272cc:	mov	w25, w27
  4272d0:	mov	x28, x1
  4272d4:	b	42725c <wcrtomb@plt+0x2230c>
  4272d8:	add	x1, x21, #0x1
  4272dc:	add	x0, sp, #0x8c
  4272e0:	add	x1, x26, x1
  4272e4:	mov	w3, #0x2                   	// #2
  4272e8:	mov	w2, #0x10                  	// #16
  4272ec:	str	w9, [sp, #124]
  4272f0:	bl	426830 <wcrtomb@plt+0x218e0>
  4272f4:	mov	x1, x28
  4272f8:	cbnz	w0, 427304 <wcrtomb@plt+0x223b4>
  4272fc:	ldr	w9, [sp, #124]
  427300:	b	4272bc <wcrtomb@plt+0x2236c>
  427304:	ldr	w2, [sp, #140]
  427308:	add	w0, w0, #0x1
  42730c:	strb	w2, [x1], #1
  427310:	add	w27, w27, w0
  427314:	b	4272cc <wcrtomb@plt+0x2237c>
  427318:	ldr	w0, [sp, #120]
  42731c:	tst	w2, w0
  427320:	b.eq	427370 <wcrtomb@plt+0x22420>  // b.none
  427324:	sub	w0, w3, #0x30
  427328:	and	w0, w0, #0xff
  42732c:	cmp	w0, #0x9
  427330:	b.hi	427370 <wcrtomb@plt+0x22420>  // b.pmore
  427334:	cmp	x20, x21
  427338:	b.ne	42734c <wcrtomb@plt+0x223fc>  // b.any
  42733c:	mov	x1, x28
  427340:	mov	w0, #0x5c                  	// #92
  427344:	strb	w0, [x1], #2
  427348:	b	4272c0 <wcrtomb@plt+0x22370>
  42734c:	add	x0, sp, #0x8c
  427350:	mov	w3, #0x3                   	// #3
  427354:	mov	w2, #0x8                   	// #8
  427358:	bl	426830 <wcrtomb@plt+0x218e0>
  42735c:	mov	x1, x28
  427360:	cbz	w0, 427340 <wcrtomb@plt+0x223f0>
  427364:	ldr	w2, [sp, #140]
  427368:	strb	w2, [x1], #1
  42736c:	b	427310 <wcrtomb@plt+0x223c0>
  427370:	ldr	x0, [sp, #112]
  427374:	ldr	x1, [x0, #8]
  427378:	ldrb	w4, [x1]
  42737c:	cbz	w4, 4273b0 <wcrtomb@plt+0x22460>
  427380:	ldrb	w0, [x1, #1]
  427384:	cbnz	w0, 4273a0 <wcrtomb@plt+0x22450>
  427388:	str	w0, [sp, #140]
  42738c:	add	w27, w25, #0x2
  427390:	add	x1, x28, #0x1
  427394:	cbz	w0, 4273b8 <wcrtomb@plt+0x22468>
  427398:	strb	w0, [x28]
  42739c:	b	4272cc <wcrtomb@plt+0x2237c>
  4273a0:	cmp	w4, w3
  4273a4:	b.eq	427388 <wcrtomb@plt+0x22438>  // b.none
  4273a8:	add	x1, x1, #0x2
  4273ac:	b	427378 <wcrtomb@plt+0x22428>
  4273b0:	mov	w0, #0x0                   	// #0
  4273b4:	b	427388 <wcrtomb@plt+0x22438>
  4273b8:	tst	w2, w22
  4273bc:	b.eq	4273cc <wcrtomb@plt+0x2247c>  // b.none
  4273c0:	mov	w0, #0x5c                  	// #92
  4273c4:	strb	w0, [x28]
  4273c8:	mov	x28, x1
  4273cc:	mov	x1, x28
  4273d0:	ldrb	w0, [x26, x21]
  4273d4:	strb	w0, [x1], #1
  4273d8:	b	4272cc <wcrtomb@plt+0x2237c>
  4273dc:	mov	x1, x28
  4273e0:	strb	w9, [x1], #1
  4273e4:	b	4272cc <wcrtomb@plt+0x2237c>
  4273e8:	stp	x29, x30, [sp, #-96]!
  4273ec:	mov	x29, sp
  4273f0:	stp	x19, x20, [sp, #16]
  4273f4:	mov	x20, x4
  4273f8:	stp	x21, x22, [sp, #32]
  4273fc:	mov	x22, x2
  427400:	mov	x21, x3
  427404:	stp	x23, x24, [sp, #48]
  427408:	mov	x23, x1
  42740c:	mov	w24, w5
  427410:	add	x1, sp, #0x58
  427414:	stp	x25, x26, [sp, #64]
  427418:	mov	x25, x0
  42741c:	bl	427098 <wcrtomb@plt+0x22148>
  427420:	cbnz	w0, 4274d8 <wcrtomb@plt+0x22588>
  427424:	ldr	x2, [x23]
  427428:	mov	w19, w0
  42742c:	ldr	x1, [sp, #88]
  427430:	mov	x0, x25
  427434:	bl	426960 <wcrtomb@plt+0x21a10>
  427438:	ldr	w0, [x22, #16]
  42743c:	tbz	w0, #1, 4274c0 <wcrtomb@plt+0x22570>
  427440:	mov	x1, x22
  427444:	add	x0, x25, #0xa8
  427448:	bl	4268e8 <wcrtomb@plt+0x21998>
  42744c:	mov	x26, x0
  427450:	add	x0, x20, #0x1
  427454:	bl	4045f0 <malloc@plt>
  427458:	mov	x22, x0
  42745c:	cbnz	x0, 427488 <wcrtomb@plt+0x22538>
  427460:	mov	x0, x25
  427464:	bl	426e78 <wcrtomb@plt+0x21f28>
  427468:	mov	w19, w0
  42746c:	mov	w0, w19
  427470:	ldp	x19, x20, [sp, #16]
  427474:	ldp	x21, x22, [sp, #32]
  427478:	ldp	x23, x24, [sp, #48]
  42747c:	ldp	x25, x26, [sp, #64]
  427480:	ldp	x29, x30, [sp], #96
  427484:	ret
  427488:	add	x1, x26, x21
  42748c:	mov	x2, x20
  427490:	bl	404200 <memcpy@plt>
  427494:	strb	wzr, [x22, x20]
  427498:	ldr	x0, [sp, #88]
  42749c:	mov	w1, #0x2                   	// #2
  4274a0:	str	w1, [x0, #16]
  4274a4:	str	x22, [x0, #24]
  4274a8:	ldr	x0, [sp, #88]
  4274ac:	ldr	w5, [x0, #16]
  4274b0:	orr	w24, w5, w24
  4274b4:	str	w24, [x0, #16]
  4274b8:	str	x0, [x23]
  4274bc:	b	42746c <wcrtomb@plt+0x2251c>
  4274c0:	ldr	x3, [x22, #24]
  4274c4:	ldr	x0, [sp, #88]
  4274c8:	add	x21, x21, x3
  4274cc:	add	x20, x20, x21
  4274d0:	stp	x21, x20, [x0, #24]
  4274d4:	b	4274a8 <wcrtomb@plt+0x22558>
  4274d8:	mov	w19, #0x1                   	// #1
  4274dc:	b	42746c <wcrtomb@plt+0x2251c>
  4274e0:	stp	x29, x30, [sp, #-112]!
  4274e4:	mov	x29, sp
  4274e8:	stp	x19, x20, [sp, #16]
  4274ec:	mov	x19, x1
  4274f0:	stp	x21, x22, [sp, #32]
  4274f4:	mov	x21, x0
  4274f8:	add	x0, x0, #0xa8
  4274fc:	stp	x23, x24, [sp, #48]
  427500:	mov	x23, x2
  427504:	mov	x24, x3
  427508:	stp	x25, x26, [sp, #64]
  42750c:	mov	w26, #0x14                  	// #20
  427510:	stp	x27, x28, [sp, #80]
  427514:	bl	4268e8 <wcrtomb@plt+0x21998>
  427518:	mov	x20, x0
  42751c:	mov	x0, x19
  427520:	bl	426934 <wcrtomb@plt+0x219e4>
  427524:	mov	x22, x0
  427528:	add	x25, x20, x0
  42752c:	mov	x27, #0x0                   	// #0
  427530:	stp	x20, x19, [sp, #96]
  427534:	ldr	x4, [sp, #96]
  427538:	cmp	x4, x25
  42753c:	b.cc	42755c <wcrtomb@plt+0x2260c>  // b.lo, b.ul, b.last
  427540:	cmp	x4, x20
  427544:	b.hi	42763c <wcrtomb@plt+0x226ec>  // b.pmore
  427548:	ldr	x0, [sp, #104]
  42754c:	cmp	x0, x19
  427550:	b.ne	427684 <wcrtomb@plt+0x22734>  // b.any
  427554:	mov	w0, #0x0                   	// #0
  427558:	b	4275e4 <wcrtomb@plt+0x22694>
  42755c:	ldrb	w0, [x4]
  427560:	cmp	w0, #0x5c
  427564:	b.ne	427580 <wcrtomb@plt+0x22630>  // b.any
  427568:	add	x4, x4, #0x1
  42756c:	str	x4, [sp, #96]
  427570:	ldr	x0, [sp, #96]
  427574:	add	x0, x0, #0x1
  427578:	str	x0, [sp, #96]
  42757c:	b	427534 <wcrtomb@plt+0x225e4>
  427580:	cmp	w0, #0x24
  427584:	b.ne	427570 <wcrtomb@plt+0x22620>  // b.any
  427588:	ldrb	w0, [x4, #1]
  42758c:	blr	x23
  427590:	cbz	w0, 427570 <wcrtomb@plt+0x22620>
  427594:	ldp	x28, x0, [sp, #96]
  427598:	sub	x28, x28, x20
  42759c:	cmp	x0, x19
  4275a0:	b.eq	4275b0 <wcrtomb@plt+0x22660>  // b.none
  4275a4:	ldr	w1, [x0, #16]
  4275a8:	orr	w1, w1, #0x10
  4275ac:	str	w1, [x0, #16]
  4275b0:	cbnz	x28, 427600 <wcrtomb@plt+0x226b0>
  4275b4:	ldr	x1, [sp, #96]
  4275b8:	add	x4, sp, #0x60
  4275bc:	ldr	w5, [x19, #16]
  4275c0:	add	x3, sp, #0x68
  4275c4:	add	x1, x1, #0x1
  4275c8:	sub	x2, x22, x28
  4275cc:	mov	x0, x21
  4275d0:	and	w5, w5, w26
  4275d4:	str	x1, [sp, #96]
  4275d8:	blr	x24
  4275dc:	cbz	w0, 427624 <wcrtomb@plt+0x226d4>
  4275e0:	mov	w0, #0x1                   	// #1
  4275e4:	ldp	x19, x20, [sp, #16]
  4275e8:	ldp	x21, x22, [sp, #32]
  4275ec:	ldp	x23, x24, [sp, #48]
  4275f0:	ldp	x25, x26, [sp, #64]
  4275f4:	ldp	x27, x28, [sp, #80]
  4275f8:	ldp	x29, x30, [sp], #112
  4275fc:	ret
  427600:	mov	x4, x28
  427604:	mov	x3, x27
  427608:	mov	x2, x19
  42760c:	add	x1, sp, #0x68
  427610:	mov	x0, x21
  427614:	mov	w5, #0x10                  	// #16
  427618:	bl	4273e8 <wcrtomb@plt+0x22498>
  42761c:	cbz	w0, 4275b4 <wcrtomb@plt+0x22664>
  427620:	b	4275e0 <wcrtomb@plt+0x22690>
  427624:	ldr	x1, [sp, #96]
  427628:	add	x27, x27, #0x1
  42762c:	sub	x20, x1, x20
  427630:	add	x27, x20, x27
  427634:	add	x20, x1, #0x1
  427638:	b	427570 <wcrtomb@plt+0x22620>
  42763c:	ldr	x0, [sp, #104]
  427640:	cmp	x19, x0
  427644:	b.eq	427654 <wcrtomb@plt+0x22704>  // b.none
  427648:	ldr	w1, [x0, #16]
  42764c:	orr	w1, w1, #0x10
  427650:	str	w1, [x0, #16]
  427654:	subs	x4, x4, x20
  427658:	b.eq	427548 <wcrtomb@plt+0x225f8>  // b.none
  42765c:	ldr	w5, [x19, #16]
  427660:	mov	w0, #0x14                  	// #20
  427664:	mov	x3, x27
  427668:	mov	x2, x19
  42766c:	and	w5, w5, w0
  427670:	add	x1, sp, #0x68
  427674:	mov	x0, x21
  427678:	bl	4273e8 <wcrtomb@plt+0x22498>
  42767c:	cbnz	w0, 4275e0 <wcrtomb@plt+0x22690>
  427680:	b	427548 <wcrtomb@plt+0x225f8>
  427684:	mov	x1, x19
  427688:	mov	x0, x21
  42768c:	bl	4263b4 <wcrtomb@plt+0x21464>
  427690:	mov	x0, x19
  427694:	bl	426574 <wcrtomb@plt+0x21624>
  427698:	b	427554 <wcrtomb@plt+0x22604>
  42769c:	stp	x29, x30, [sp, #-64]!
  4276a0:	mov	x29, sp
  4276a4:	stp	x19, x20, [sp, #16]
  4276a8:	adrp	x20, 428000 <wcrtomb@plt+0x230b0>
  4276ac:	mov	x19, x0
  4276b0:	add	x20, x20, #0x894
  4276b4:	stp	x21, x22, [sp, #32]
  4276b8:	adrp	x21, 426000 <wcrtomb@plt+0x210b0>
  4276bc:	add	x21, x21, #0x914
  4276c0:	mov	w22, #0x48                  	// #72
  4276c4:	ldr	x1, [x0, #208]
  4276c8:	str	x23, [sp, #48]
  4276cc:	cbnz	x1, 4276f0 <wcrtomb@plt+0x227a0>
  4276d0:	mov	x0, x19
  4276d4:	bl	4265dc <wcrtomb@plt+0x2168c>
  4276d8:	mov	w0, #0x0                   	// #0
  4276dc:	ldp	x19, x20, [sp, #16]
  4276e0:	ldp	x21, x22, [sp, #32]
  4276e4:	ldr	x23, [sp, #48]
  4276e8:	ldp	x29, x30, [sp], #64
  4276ec:	ret
  4276f0:	ldr	w0, [x1, #16]
  4276f4:	ldr	x23, [x1, #8]
  4276f8:	tst	w0, w22
  4276fc:	b.eq	427708 <wcrtomb@plt+0x227b8>  // b.none
  427700:	mov	x1, x23
  427704:	b	4276cc <wcrtomb@plt+0x2277c>
  427708:	mov	x3, x20
  42770c:	mov	x2, x21
  427710:	mov	x0, x19
  427714:	bl	4274e0 <wcrtomb@plt+0x22590>
  427718:	cbz	w0, 427700 <wcrtomb@plt+0x227b0>
  42771c:	mov	w0, #0x1                   	// #1
  427720:	b	4276dc <wcrtomb@plt+0x2278c>
  427724:	stp	x29, x30, [sp, #-48]!
  427728:	mov	x29, sp
  42772c:	ldr	x1, [x0, #208]
  427730:	stp	x19, x20, [sp, #16]
  427734:	adrp	x20, 429000 <wcrtomb@plt+0x240b0>
  427738:	mov	x19, x0
  42773c:	add	x20, x20, #0x1b8
  427740:	stp	x21, x22, [sp, #32]
  427744:	adrp	x21, 426000 <wcrtomb@plt+0x210b0>
  427748:	add	x21, x21, #0x568
  42774c:	cbnz	x1, 42776c <wcrtomb@plt+0x2281c>
  427750:	mov	x0, x19
  427754:	bl	4265dc <wcrtomb@plt+0x2168c>
  427758:	mov	w0, #0x0                   	// #0
  42775c:	ldp	x19, x20, [sp, #16]
  427760:	ldp	x21, x22, [sp, #32]
  427764:	ldp	x29, x30, [sp], #48
  427768:	ret
  42776c:	ldr	w0, [x1, #16]
  427770:	ldr	x22, [x1, #8]
  427774:	tbz	w0, #3, 427780 <wcrtomb@plt+0x22830>
  427778:	mov	x1, x22
  42777c:	b	42774c <wcrtomb@plt+0x227fc>
  427780:	mov	x3, x20
  427784:	mov	x2, x21
  427788:	mov	x0, x19
  42778c:	bl	4274e0 <wcrtomb@plt+0x22590>
  427790:	cbz	w0, 427778 <wcrtomb@plt+0x22828>
  427794:	mov	w0, #0x1                   	// #1
  427798:	b	42775c <wcrtomb@plt+0x2280c>
  42779c:	stp	x29, x30, [sp, #-112]!
  4277a0:	mov	x29, sp
  4277a4:	stp	x19, x20, [sp, #16]
  4277a8:	stp	x21, x22, [sp, #32]
  4277ac:	mov	x21, #0x0                   	// #0
  4277b0:	stp	x23, x24, [sp, #48]
  4277b4:	mov	x23, x0
  4277b8:	add	x0, x0, #0xa8
  4277bc:	stp	x25, x26, [sp, #64]
  4277c0:	stp	x27, x28, [sp, #80]
  4277c4:	mov	x27, #0x0                   	// #0
  4277c8:	ldr	x20, [x0, #40]
  4277cc:	str	x0, [sp, #96]
  4277d0:	cbnz	x20, 4277fc <wcrtomb@plt+0x228ac>
  4277d4:	mov	x0, x21
  4277d8:	bl	404ae0 <free@plt>
  4277dc:	mov	w0, #0x0                   	// #0
  4277e0:	ldp	x19, x20, [sp, #16]
  4277e4:	ldp	x21, x22, [sp, #32]
  4277e8:	ldp	x23, x24, [sp, #48]
  4277ec:	ldp	x25, x26, [sp, #64]
  4277f0:	ldp	x27, x28, [sp, #80]
  4277f4:	ldp	x29, x30, [sp], #112
  4277f8:	ret
  4277fc:	ldr	w0, [x20, #16]
  427800:	tbnz	w0, #2, 427864 <wcrtomb@plt+0x22914>
  427804:	ldr	x0, [sp, #96]
  427808:	mov	x1, x20
  42780c:	bl	4268e8 <wcrtomb@plt+0x21998>
  427810:	mov	x25, x0
  427814:	ldrb	w0, [x0]
  427818:	cmp	w0, #0x7e
  42781c:	b.ne	427864 <wcrtomb@plt+0x22914>  // b.any
  427820:	mov	x0, x20
  427824:	bl	426934 <wcrtomb@plt+0x219e4>
  427828:	mov	x22, x0
  42782c:	mov	x19, #0x1                   	// #1
  427830:	cmp	x19, x22
  427834:	b.cs	427860 <wcrtomb@plt+0x22910>  // b.hs, b.nlast
  427838:	ldrb	w0, [x25, x19]
  42783c:	cmp	w0, #0x2f
  427840:	b.ne	427858 <wcrtomb@plt+0x22908>  // b.any
  427844:	cmp	x19, #0x1
  427848:	b.ne	42786c <wcrtomb@plt+0x2291c>  // b.any
  42784c:	bl	4043d0 <getuid@plt>
  427850:	bl	404a40 <getpwuid@plt>
  427854:	b	4278d4 <wcrtomb@plt+0x22984>
  427858:	add	x19, x19, #0x1
  42785c:	b	427830 <wcrtomb@plt+0x228e0>
  427860:	b.ne	427844 <wcrtomb@plt+0x228f4>  // b.any
  427864:	ldr	x20, [x20, #8]
  427868:	b	4277d0 <wcrtomb@plt+0x22880>
  42786c:	cmp	x27, x19
  427870:	b.cs	4278b4 <wcrtomb@plt+0x22964>  // b.hs, b.nlast
  427874:	mov	x1, x19
  427878:	mov	x0, x21
  42787c:	bl	404820 <realloc@plt>
  427880:	cbnz	x0, 4278ac <wcrtomb@plt+0x2295c>
  427884:	mov	x0, x21
  427888:	bl	404ae0 <free@plt>
  42788c:	mov	x0, x23
  427890:	ldp	x19, x20, [sp, #16]
  427894:	ldp	x21, x22, [sp, #32]
  427898:	ldp	x23, x24, [sp, #48]
  42789c:	ldp	x25, x26, [sp, #64]
  4278a0:	ldp	x27, x28, [sp, #80]
  4278a4:	ldp	x29, x30, [sp], #112
  4278a8:	b	426e78 <wcrtomb@plt+0x21f28>
  4278ac:	mov	x27, x19
  4278b0:	mov	x21, x0
  4278b4:	sub	x19, x19, #0x1
  4278b8:	add	x1, x25, #0x1
  4278bc:	mov	x2, x19
  4278c0:	mov	x0, x21
  4278c4:	bl	404200 <memcpy@plt>
  4278c8:	strb	wzr, [x21, x19]
  4278cc:	mov	x0, x21
  4278d0:	bl	404730 <getpwnam@plt>
  4278d4:	cbz	x0, 427864 <wcrtomb@plt+0x22914>
  4278d8:	ldr	x1, [x0, #32]
  4278dc:	sub	x22, x22, x19
  4278e0:	str	x1, [sp, #104]
  4278e4:	mov	x0, x1
  4278e8:	bl	404280 <strlen@plt>
  4278ec:	add	x26, x22, x0
  4278f0:	mov	x28, x0
  4278f4:	mov	x0, x26
  4278f8:	bl	4045f0 <malloc@plt>
  4278fc:	mov	x24, x0
  427900:	ldr	x1, [sp, #104]
  427904:	cbz	x0, 427884 <wcrtomb@plt+0x22934>
  427908:	add	x26, x24, x26
  42790c:	mov	x2, x28
  427910:	bl	404200 <memcpy@plt>
  427914:	add	x1, x19, #0x1
  427918:	sub	x2, x22, #0x1
  42791c:	add	x1, x25, x1
  427920:	add	x0, x24, x28
  427924:	bl	404200 <memcpy@plt>
  427928:	sturb	wzr, [x26, #-1]
  42792c:	ldr	w0, [x20, #16]
  427930:	tbz	w0, #1, 42793c <wcrtomb@plt+0x229ec>
  427934:	ldr	x0, [x20, #24]
  427938:	bl	404ae0 <free@plt>
  42793c:	ldr	w0, [x20, #16]
  427940:	str	x24, [x20, #24]
  427944:	orr	w0, w0, #0x2
  427948:	str	w0, [x20, #16]
  42794c:	b	427864 <wcrtomb@plt+0x22914>
  427950:	stp	x29, x30, [sp, #-96]!
  427954:	mov	x29, sp
  427958:	stp	x19, x20, [sp, #16]
  42795c:	mov	x19, x1
  427960:	mov	x20, #0x0                   	// #0
  427964:	stp	x21, x22, [sp, #32]
  427968:	mov	x21, x1
  42796c:	stp	x23, x24, [sp, #48]
  427970:	mov	x23, x0
  427974:	stp	x25, x26, [sp, #64]
  427978:	stp	x27, x28, [sp, #80]
  42797c:	cbz	x21, 427994 <wcrtomb@plt+0x22a44>
  427980:	mov	x0, x21
  427984:	bl	426934 <wcrtomb@plt+0x219e4>
  427988:	add	x20, x20, x0
  42798c:	ldr	w0, [x21, #16]
  427990:	tbnz	w0, #4, 4279c4 <wcrtomb@plt+0x22a74>
  427994:	add	x0, x20, #0x1
  427998:	bl	4045f0 <malloc@plt>
  42799c:	mov	x22, x0
  4279a0:	cbnz	x0, 4279cc <wcrtomb@plt+0x22a7c>
  4279a4:	mov	x0, x23
  4279a8:	ldp	x19, x20, [sp, #16]
  4279ac:	ldp	x21, x22, [sp, #32]
  4279b0:	ldp	x23, x24, [sp, #48]
  4279b4:	ldp	x25, x26, [sp, #64]
  4279b8:	ldp	x27, x28, [sp, #80]
  4279bc:	ldp	x29, x30, [sp], #96
  4279c0:	b	426e78 <wcrtomb@plt+0x21f28>
  4279c4:	ldr	x21, [x21, #8]
  4279c8:	b	42797c <wcrtomb@plt+0x22a2c>
  4279cc:	mov	x24, x0
  4279d0:	mov	x20, x19
  4279d4:	add	x27, x23, #0xa8
  4279d8:	mov	x1, x20
  4279dc:	mov	x0, x27
  4279e0:	bl	4268e8 <wcrtomb@plt+0x21998>
  4279e4:	mov	x28, x0
  4279e8:	mov	x0, x20
  4279ec:	bl	426934 <wcrtomb@plt+0x219e4>
  4279f0:	mov	x25, x0
  4279f4:	mov	x2, x0
  4279f8:	mov	x1, x28
  4279fc:	mov	x0, x24
  427a00:	add	x24, x24, x25
  427a04:	ldr	x26, [x20, #8]
  427a08:	bl	404200 <memcpy@plt>
  427a0c:	cmp	x19, x20
  427a10:	b.ne	427a1c <wcrtomb@plt+0x22acc>  // b.any
  427a14:	mov	x20, x26
  427a18:	b	4279d8 <wcrtomb@plt+0x22a88>
  427a1c:	ldr	w0, [x20, #16]
  427a20:	and	w1, w0, #0x4
  427a24:	ldr	w0, [x19, #16]
  427a28:	orr	w0, w0, w1
  427a2c:	mov	x1, x20
  427a30:	str	w0, [x19, #16]
  427a34:	mov	x0, x23
  427a38:	bl	4263b4 <wcrtomb@plt+0x21464>
  427a3c:	mov	x0, x20
  427a40:	bl	426574 <wcrtomb@plt+0x21624>
  427a44:	cmp	x20, x21
  427a48:	b.ne	427a14 <wcrtomb@plt+0x22ac4>  // b.any
  427a4c:	ldr	w1, [x19, #16]
  427a50:	strb	wzr, [x24]
  427a54:	and	w0, w1, #0xffffffef
  427a58:	str	w0, [x19, #16]
  427a5c:	tbz	w1, #1, 427a8c <wcrtomb@plt+0x22b3c>
  427a60:	ldr	x0, [x19, #24]
  427a64:	bl	404ae0 <free@plt>
  427a68:	ldp	x23, x24, [sp, #48]
  427a6c:	mov	w0, #0x0                   	// #0
  427a70:	ldp	x25, x26, [sp, #64]
  427a74:	ldp	x27, x28, [sp, #80]
  427a78:	str	x22, [x19, #24]
  427a7c:	ldp	x19, x20, [sp, #16]
  427a80:	ldp	x21, x22, [sp, #32]
  427a84:	ldp	x29, x30, [sp], #96
  427a88:	ret
  427a8c:	orr	w0, w0, #0x2
  427a90:	str	w0, [x19, #16]
  427a94:	b	427a68 <wcrtomb@plt+0x22b18>
  427a98:	stp	x29, x30, [sp, #-32]!
  427a9c:	mov	x29, sp
  427aa0:	str	w1, [x0, #192]
  427aa4:	str	x19, [sp, #16]
  427aa8:	mov	w19, w1
  427aac:	ldr	w1, [x0, #32]
  427ab0:	tbz	w1, #4, 427ab8 <wcrtomb@plt+0x22b68>
  427ab4:	bl	426e08 <wcrtomb@plt+0x21eb8>
  427ab8:	mov	w0, w19
  427abc:	ldr	x19, [sp, #16]
  427ac0:	ldp	x29, x30, [sp], #32
  427ac4:	ret
  427ac8:	stp	x29, x30, [sp, #-32]!
  427acc:	mov	x29, sp
  427ad0:	str	x19, [sp, #16]
  427ad4:	mov	x19, x0
  427ad8:	str	w3, [x0, #32]
  427adc:	tbnz	w3, #16, 427aec <wcrtomb@plt+0x22b9c>
  427ae0:	adrp	x0, 426000 <wcrtomb@plt+0x210b0>
  427ae4:	add	x0, x0, #0x7f8
  427ae8:	str	x0, [x19, #88]
  427aec:	and	w4, w3, #0x20000
  427af0:	tbnz	w3, #17, 427b00 <wcrtomb@plt+0x22bb0>
  427af4:	adrp	x0, 426000 <wcrtomb@plt+0x210b0>
  427af8:	add	x0, x0, #0x754
  427afc:	str	x0, [x19, #96]
  427b00:	tbnz	w3, #6, 427b0c <wcrtomb@plt+0x22bbc>
  427b04:	stp	xzr, xzr, [x19, #120]
  427b08:	str	xzr, [x19, #136]
  427b0c:	tbnz	w3, #2, 427b40 <wcrtomb@plt+0x22bf0>
  427b10:	ldr	x0, [x19, #160]
  427b14:	cbnz	x0, 427b40 <wcrtomb@plt+0x22bf0>
  427b18:	mov	w1, #0x3                   	// #3
  427b1c:	mov	x0, x19
  427b20:	bl	427a98 <wcrtomb@plt+0x22b48>
  427b24:	bl	404e10 <__errno_location@plt>
  427b28:	mov	w1, #0x16                  	// #22
  427b2c:	str	w1, [x0]
  427b30:	ldr	w0, [x19, #192]
  427b34:	ldr	x19, [sp, #16]
  427b38:	ldp	x29, x30, [sp], #32
  427b3c:	ret
  427b40:	tbz	w3, #21, 427b54 <wcrtomb@plt+0x22c04>
  427b44:	tbnz	w3, #18, 427b54 <wcrtomb@plt+0x22c04>
  427b48:	cbz	w4, 427be0 <wcrtomb@plt+0x22c90>
  427b4c:	ldr	x0, [x19, #96]
  427b50:	str	x0, [x19, #104]
  427b54:	ldr	w0, [x19, #32]
  427b58:	stp	x1, x2, [x19, #168]
  427b5c:	tbnz	w0, #1, 427b64 <wcrtomb@plt+0x22c14>
  427b60:	str	xzr, [x19, #16]
  427b64:	tbnz	w0, #14, 427b74 <wcrtomb@plt+0x22c24>
  427b68:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  427b6c:	add	x1, x1, #0xa97
  427b70:	str	x1, [x19, #56]
  427b74:	tbnz	w0, #15, 427b7c <wcrtomb@plt+0x22c2c>
  427b78:	str	xzr, [x19, #64]
  427b7c:	tbnz	w0, #26, 427b84 <wcrtomb@plt+0x22c34>
  427b80:	str	xzr, [x19, #152]
  427b84:	tbnz	w0, #31, 427b8c <wcrtomb@plt+0x22c3c>
  427b88:	str	wzr, [x19, #36]
  427b8c:	tbz	w0, #28, 427bfc <wcrtomb@plt+0x22cac>
  427b90:	ldr	x1, [x19, #72]
  427b94:	cbnz	x1, 427ba4 <wcrtomb@plt+0x22c54>
  427b98:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  427b9c:	add	x1, x1, #0x41a
  427ba0:	str	x1, [x19, #72]
  427ba4:	ldr	x1, [x19, #80]
  427ba8:	cbnz	x1, 427bb8 <wcrtomb@plt+0x22c68>
  427bac:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  427bb0:	add	x1, x1, #0x41a
  427bb4:	str	x1, [x19, #80]
  427bb8:	str	xzr, [x19, #48]
  427bbc:	str	xzr, [x19, #184]
  427bc0:	tbz	w0, #3, 427bcc <wcrtomb@plt+0x22c7c>
  427bc4:	mov	x0, x19
  427bc8:	bl	4265a4 <wcrtomb@plt+0x21654>
  427bcc:	stp	xzr, xzr, [x19, #208]
  427bd0:	mov	x0, x19
  427bd4:	bl	426cec <wcrtomb@plt+0x21d9c>
  427bd8:	mov	w0, #0x0                   	// #0
  427bdc:	b	427b34 <wcrtomb@plt+0x22be4>
  427be0:	tbz	w3, #4, 427bf0 <wcrtomb@plt+0x22ca0>
  427be4:	adrp	x0, 426000 <wcrtomb@plt+0x210b0>
  427be8:	add	x0, x0, #0x754
  427bec:	b	427b50 <wcrtomb@plt+0x22c00>
  427bf0:	and	w3, w3, #0xffdfffff
  427bf4:	str	w3, [x19, #32]
  427bf8:	b	427b54 <wcrtomb@plt+0x22c04>
  427bfc:	ldr	w1, [x19, #36]
  427c00:	tbz	w0, #25, 427c20 <wcrtomb@plt+0x22cd0>
  427c04:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  427c08:	add	x2, x2, #0x2a0
  427c0c:	stp	x2, x2, [x19, #72]
  427c10:	mov	w2, #0x660                 	// #1632
  427c14:	orr	w1, w1, w2
  427c18:	str	w1, [x19, #36]
  427c1c:	b	427bb8 <wcrtomb@plt+0x22c68>
  427c20:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  427c24:	add	x2, x2, #0x41a
  427c28:	orr	w1, w1, #0x100
  427c2c:	str	x2, [x19, #72]
  427c30:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  427c34:	add	x2, x2, #0xa9b
  427c38:	str	x2, [x19, #80]
  427c3c:	b	427c18 <wcrtomb@plt+0x22cc8>
  427c40:	stp	x29, x30, [sp, #-304]!
  427c44:	mov	x29, sp
  427c48:	stp	x23, x24, [sp, #48]
  427c4c:	adrp	x24, 44d000 <_obstack_memory_used@@Base+0x15380>
  427c50:	ldr	w23, [x0, #36]
  427c54:	add	x24, x24, #0xaa0
  427c58:	stp	x19, x20, [sp, #16]
  427c5c:	mov	x19, x0
  427c60:	ubfx	x23, x23, #2, #1
  427c64:	stp	x21, x22, [sp, #32]
  427c68:	lsl	w23, w23, #7
  427c6c:	stp	x25, x26, [sp, #64]
  427c70:	ldr	x21, [x0, #208]
  427c74:	str	x27, [sp, #80]
  427c78:	cbnz	x21, 427c84 <wcrtomb@plt+0x22d34>
  427c7c:	mov	w0, #0x0                   	// #0
  427c80:	b	427e04 <wcrtomb@plt+0x22eb4>
  427c84:	ldr	w0, [x21, #16]
  427c88:	ldr	x25, [x21, #8]
  427c8c:	tbnz	w0, #2, 427cbc <wcrtomb@plt+0x22d6c>
  427c90:	mov	x1, x21
  427c94:	add	x0, x19, #0xa8
  427c98:	bl	4268e8 <wcrtomb@plt+0x21998>
  427c9c:	mov	x26, x0
  427ca0:	mov	x0, x21
  427ca4:	mov	x20, #0x0                   	// #0
  427ca8:	bl	426934 <wcrtomb@plt+0x219e4>
  427cac:	mov	x22, x0
  427cb0:	and	x27, x0, #0xffffffff
  427cb4:	cmp	x27, x20
  427cb8:	b.ne	427cc4 <wcrtomb@plt+0x22d74>  // b.any
  427cbc:	mov	x21, x25
  427cc0:	b	427c78 <wcrtomb@plt+0x22d28>
  427cc4:	ldrb	w1, [x26, x20]
  427cc8:	mov	x0, x24
  427ccc:	add	x20, x20, #0x1
  427cd0:	bl	404b90 <strchr@plt>
  427cd4:	cbz	x0, 427cb4 <wcrtomb@plt+0x22d64>
  427cd8:	add	x0, x22, #0x1
  427cdc:	bl	4045f0 <malloc@plt>
  427ce0:	mov	x20, x0
  427ce4:	cbz	x0, 427d64 <wcrtomb@plt+0x22e14>
  427ce8:	mov	x2, x22
  427cec:	mov	x1, x26
  427cf0:	bl	404200 <memcpy@plt>
  427cf4:	strb	wzr, [x20, x22]
  427cf8:	add	x3, sp, #0x68
  427cfc:	mov	w1, w23
  427d00:	mov	x0, x20
  427d04:	mov	x2, #0x0                   	// #0
  427d08:	bl	404d40 <glob@plt>
  427d0c:	cmp	w0, #0x1
  427d10:	b.eq	427d5c <wcrtomb@plt+0x22e0c>  // b.none
  427d14:	cmp	w0, #0x3
  427d18:	b.eq	427d70 <wcrtomb@plt+0x22e20>  // b.none
  427d1c:	cbnz	w0, 427e20 <wcrtomb@plt+0x22ed0>
  427d20:	mov	x22, x21
  427d24:	mov	x0, x20
  427d28:	mov	x20, #0x0                   	// #0
  427d2c:	bl	404ae0 <free@plt>
  427d30:	ldr	x0, [sp, #104]
  427d34:	cmp	x20, x0
  427d38:	b.cc	427e30 <wcrtomb@plt+0x22ee0>  // b.lo, b.ul, b.last
  427d3c:	add	x0, sp, #0x68
  427d40:	bl	404ba0 <globfree@plt>
  427d44:	mov	x1, x21
  427d48:	mov	x0, x19
  427d4c:	bl	4263b4 <wcrtomb@plt+0x21464>
  427d50:	mov	x0, x21
  427d54:	bl	426574 <wcrtomb@plt+0x21624>
  427d58:	b	427cbc <wcrtomb@plt+0x22d6c>
  427d5c:	mov	x0, x20
  427d60:	bl	404ae0 <free@plt>
  427d64:	mov	x0, x19
  427d68:	bl	426e78 <wcrtomb@plt+0x21f28>
  427d6c:	b	427e04 <wcrtomb@plt+0x22eb4>
  427d70:	ldr	w0, [x19, #36]
  427d74:	tbz	w0, #0, 427d98 <wcrtomb@plt+0x22e48>
  427d78:	mov	x1, x21
  427d7c:	mov	x0, x19
  427d80:	bl	4263b4 <wcrtomb@plt+0x21464>
  427d84:	mov	x0, x21
  427d88:	bl	426574 <wcrtomb@plt+0x21624>
  427d8c:	mov	x0, x20
  427d90:	bl	404ae0 <free@plt>
  427d94:	b	427cbc <wcrtomb@plt+0x22d6c>
  427d98:	tbz	w0, #1, 427d8c <wcrtomb@plt+0x22e3c>
  427d9c:	ldr	w0, [x19, #192]
  427da0:	cmp	w0, #0x9
  427da4:	b.ne	427db0 <wcrtomb@plt+0x22e60>  // b.any
  427da8:	ldr	x0, [x19, #200]
  427dac:	bl	404ae0 <free@plt>
  427db0:	mov	w2, #0x5                   	// #5
  427db4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  427db8:	mov	x0, #0x0                   	// #0
  427dbc:	add	x1, x1, #0xaa4
  427dc0:	bl	404d00 <dcgettext@plt>
  427dc4:	mov	x4, x0
  427dc8:	mov	x3, #0x80                  	// #128
  427dcc:	mov	x5, x20
  427dd0:	mov	x1, x3
  427dd4:	mov	w2, #0x1                   	// #1
  427dd8:	add	x0, sp, #0xb0
  427ddc:	bl	404560 <__snprintf_chk@plt>
  427de0:	mov	x0, x20
  427de4:	bl	404ae0 <free@plt>
  427de8:	add	x0, sp, #0xb0
  427dec:	bl	404870 <strdup@plt>
  427df0:	str	x0, [x19, #200]
  427df4:	cbz	x0, 427d64 <wcrtomb@plt+0x22e14>
  427df8:	mov	w1, #0x9                   	// #9
  427dfc:	mov	x0, x19
  427e00:	bl	427a98 <wcrtomb@plt+0x22b48>
  427e04:	ldp	x19, x20, [sp, #16]
  427e08:	ldp	x21, x22, [sp, #32]
  427e0c:	ldp	x23, x24, [sp, #48]
  427e10:	ldp	x25, x26, [sp, #64]
  427e14:	ldr	x27, [sp, #80]
  427e18:	ldp	x29, x30, [sp], #304
  427e1c:	ret
  427e20:	mov	x0, x20
  427e24:	bl	404ae0 <free@plt>
  427e28:	mov	w1, #0x8                   	// #8
  427e2c:	b	427dfc <wcrtomb@plt+0x22eac>
  427e30:	add	x1, sp, #0xb0
  427e34:	mov	x0, x19
  427e38:	bl	427098 <wcrtomb@plt+0x22148>
  427e3c:	cbnz	w0, 427e88 <wcrtomb@plt+0x22f38>
  427e40:	ldr	x0, [sp, #112]
  427e44:	ldr	x0, [x0, x20, lsl #3]
  427e48:	add	x20, x20, #0x1
  427e4c:	bl	404870 <strdup@plt>
  427e50:	ldr	x1, [sp, #176]
  427e54:	cbnz	x0, 427e64 <wcrtomb@plt+0x22f14>
  427e58:	mov	x0, x1
  427e5c:	bl	426574 <wcrtomb@plt+0x21624>
  427e60:	b	427d64 <wcrtomb@plt+0x22e14>
  427e64:	str	x0, [x1, #24]
  427e68:	mov	x2, x22
  427e6c:	ldr	w0, [x1, #16]
  427e70:	orr	w0, w0, #0x6
  427e74:	str	w0, [x1, #16]
  427e78:	mov	x0, x19
  427e7c:	bl	426960 <wcrtomb@plt+0x21a10>
  427e80:	ldr	x22, [sp, #176]
  427e84:	b	427d30 <wcrtomb@plt+0x22de0>
  427e88:	mov	w0, #0x1                   	// #1
  427e8c:	b	427e04 <wcrtomb@plt+0x22eb4>
  427e90:	stp	x29, x30, [sp, #-128]!
  427e94:	mov	x29, sp
  427e98:	stp	x21, x22, [sp, #32]
  427e9c:	stp	x25, x26, [sp, #64]
  427ea0:	ldp	x22, x25, [x0, #168]
  427ea4:	stp	x19, x20, [sp, #16]
  427ea8:	mov	x19, x0
  427eac:	stp	x23, x24, [sp, #48]
  427eb0:	stp	x27, x28, [sp, #80]
  427eb4:	cmp	x25, x1
  427eb8:	str	x1, [sp, #120]
  427ebc:	ldr	x27, [x0, #64]
  427ec0:	ldr	x23, [x0, #216]
  427ec4:	b.hi	427eec <wcrtomb@plt+0x22f9c>  // b.pmore
  427ec8:	mov	w0, #0x0                   	// #0
  427ecc:	str	wzr, [x19, #192]
  427ed0:	ldp	x19, x20, [sp, #16]
  427ed4:	ldp	x21, x22, [sp, #32]
  427ed8:	ldp	x23, x24, [sp, #48]
  427edc:	ldp	x25, x26, [sp, #64]
  427ee0:	ldp	x27, x28, [sp, #80]
  427ee4:	ldp	x29, x30, [sp], #128
  427ee8:	ret
  427eec:	ldr	w21, [x0, #32]
  427ef0:	mov	x20, x1
  427ef4:	mov	w24, w2
  427ef8:	tbz	w21, #13, 427f30 <wcrtomb@plt+0x22fe0>
  427efc:	ldrb	w0, [x22, x1]
  427f00:	cmp	w0, #0x73
  427f04:	b.ne	427f30 <wcrtomb@plt+0x22fe0>  // b.any
  427f08:	add	x0, x1, #0x3
  427f0c:	cmp	x0, x25
  427f10:	b.cs	427f30 <wcrtomb@plt+0x22fe0>  // b.hs, b.nlast
  427f14:	add	x0, x22, x1
  427f18:	adrp	x26, 44d000 <_obstack_memory_used@@Base+0x15380>
  427f1c:	add	x26, x26, #0xabe
  427f20:	ldrb	w1, [x0, #1]
  427f24:	mov	x0, x26
  427f28:	bl	404b90 <strchr@plt>
  427f2c:	cbnz	x0, 427f5c <wcrtomb@plt+0x2300c>
  427f30:	cbnz	w24, 427f44 <wcrtomb@plt+0x22ff4>
  427f34:	ldrb	w1, [x22, x20]
  427f38:	ldr	x0, [x19, #56]
  427f3c:	bl	404b90 <strchr@plt>
  427f40:	cbnz	x0, 42829c <wcrtomb@plt+0x2334c>
  427f44:	adrp	x21, 44d000 <_obstack_memory_used@@Base+0x15380>
  427f48:	adrp	x26, 44d000 <_obstack_memory_used@@Base+0x15380>
  427f4c:	add	x21, x21, #0xadf
  427f50:	add	x26, x26, #0xae2
  427f54:	mov	w28, #0x0                   	// #0
  427f58:	b	4281f4 <wcrtomb@plt+0x232a4>
  427f5c:	mov	x21, x20
  427f60:	b	427fa8 <wcrtomb@plt+0x23058>
  427f64:	ldrb	w0, [x22, x21]
  427f68:	cmp	w1, #0x3
  427f6c:	b.ne	42803c <wcrtomb@plt+0x230ec>  // b.any
  427f70:	cmp	w27, w0
  427f74:	b.eq	427f9c <wcrtomb@plt+0x2304c>  // b.none
  427f78:	and	w2, w0, #0xffffffdf
  427f7c:	sub	w2, w2, #0x41
  427f80:	and	w2, w2, #0xff
  427f84:	cmp	w2, #0x19
  427f88:	b.ls	428048 <wcrtomb@plt+0x230f8>  // b.plast
  427f8c:	sub	w2, w0, #0x30
  427f90:	and	w2, w2, #0xff
  427f94:	cmp	w2, #0x9
  427f98:	b.ls	428048 <wcrtomb@plt+0x230f8>  // b.plast
  427f9c:	cmp	w0, #0x3b
  427fa0:	b.ne	427fe8 <wcrtomb@plt+0x23098>  // b.any
  427fa4:	add	x21, x21, #0x1
  427fa8:	ldrb	w0, [x22, x21]
  427fac:	cmp	w0, #0x73
  427fb0:	b.ne	427fe8 <wcrtomb@plt+0x23098>  // b.any
  427fb4:	add	x0, x21, #0x3
  427fb8:	cmp	x25, x0
  427fbc:	b.ls	427fe8 <wcrtomb@plt+0x23098>  // b.plast
  427fc0:	add	x0, x22, x21
  427fc4:	ldrb	w27, [x0, #1]
  427fc8:	mov	x0, x26
  427fcc:	mov	w1, w27
  427fd0:	bl	404b90 <strchr@plt>
  427fd4:	cbz	x0, 427fe8 <wcrtomb@plt+0x23098>
  427fd8:	add	x21, x21, #0x2
  427fdc:	mov	w1, #0x1                   	// #1
  427fe0:	cmp	x25, x21
  427fe4:	b.hi	427f64 <wcrtomb@plt+0x23014>  // b.pmore
  427fe8:	sxtw	x21, w21
  427fec:	mov	w3, #0x20                  	// #32
  427ff0:	str	x21, [sp, #120]
  427ff4:	ldr	x2, [sp, #120]
  427ff8:	mov	x1, x20
  427ffc:	mov	x0, x19
  428000:	bl	4270e0 <wcrtomb@plt+0x22190>
  428004:	cbnz	w0, 428250 <wcrtomb@plt+0x23300>
  428008:	ldr	x1, [sp, #120]
  42800c:	str	x1, [x19, #184]
  428010:	ldr	w1, [x19, #32]
  428014:	tbnz	w1, #29, 427ed0 <wcrtomb@plt+0x22f80>
  428018:	cbz	w24, 428068 <wcrtomb@plt+0x23118>
  42801c:	cbnz	x23, 428028 <wcrtomb@plt+0x230d8>
  428020:	ldr	x23, [x19, #208]
  428024:	cbz	x23, 428068 <wcrtomb@plt+0x23118>
  428028:	ldr	w0, [x23, #16]
  42802c:	orr	w0, w0, #0x4
  428030:	str	w0, [x23, #16]
  428034:	ldr	x23, [x23, #8]
  428038:	b	428024 <wcrtomb@plt+0x230d4>
  42803c:	cmp	w0, #0x5c
  428040:	b.ne	428050 <wcrtomb@plt+0x23100>  // b.any
  428044:	add	x21, x21, #0x1
  428048:	add	x21, x21, #0x1
  42804c:	b	427fe0 <wcrtomb@plt+0x23090>
  428050:	cmp	w27, w0
  428054:	cinc	w1, w1, eq  // eq = none
  428058:	b	428048 <wcrtomb@plt+0x230f8>
  42805c:	add	x21, x21, #0x1
  428060:	b	428228 <wcrtomb@plt+0x232d8>
  428064:	str	x21, [x19, #184]
  428068:	mov	w0, #0x1                   	// #1
  42806c:	b	427ed0 <wcrtomb@plt+0x22f80>
  428070:	ldr	w0, [x19, #32]
  428074:	tst	w0, #0x600
  428078:	b.eq	428134 <wcrtomb@plt+0x231e4>  // b.none
  42807c:	cmp	w1, #0x5c
  428080:	b.ne	42809c <wcrtomb@plt+0x2314c>  // b.any
  428084:	add	x0, x2, #0x1
  428088:	cmp	x0, x25
  42808c:	b.eq	4282cc <wcrtomb@plt+0x2337c>  // b.none
  428090:	add	x2, x2, #0x2
  428094:	str	x2, [sp, #120]
  428098:	b	4281f4 <wcrtomb@plt+0x232a4>
  42809c:	tbz	w0, #9, 4280a8 <wcrtomb@plt+0x23158>
  4280a0:	cmp	w1, #0x27
  4280a4:	b.eq	4280b4 <wcrtomb@plt+0x23164>  // b.none
  4280a8:	tbz	w0, #10, 428134 <wcrtomb@plt+0x231e4>
  4280ac:	cmp	w1, #0x22
  4280b0:	b.ne	428134 <wcrtomb@plt+0x231e4>  // b.any
  4280b4:	cbz	w28, 4280cc <wcrtomb@plt+0x2317c>
  4280b8:	ldr	x0, [x19, #216]
  4280bc:	cbz	x0, 4280cc <wcrtomb@plt+0x2317c>
  4280c0:	ldr	w1, [x0, #16]
  4280c4:	orr	w1, w1, #0x10
  4280c8:	str	w1, [x0, #16]
  4280cc:	mov	x1, x20
  4280d0:	mov	x0, x19
  4280d4:	mov	w3, #0x10                  	// #16
  4280d8:	bl	4270e0 <wcrtomb@plt+0x22190>
  4280dc:	cbnz	w0, 428250 <wcrtomb@plt+0x23300>
  4280e0:	ldp	x4, x5, [x19, #168]
  4280e4:	ldr	x2, [sp, #120]
  4280e8:	add	x1, x2, #0x1
  4280ec:	ldrb	w0, [x4, x2]
  4280f0:	mov	x20, x1
  4280f4:	cmp	x5, x20
  4280f8:	b.ls	428170 <wcrtomb@plt+0x23220>  // b.plast
  4280fc:	ldrb	w3, [x4, x20]
  428100:	cmp	w0, w3
  428104:	b.ne	428154 <wcrtomb@plt+0x23204>  // b.any
  428108:	cmp	w0, #0x27
  42810c:	mov	w0, #0x104                 	// #260
  428110:	mov	w3, #0x10c                 	// #268
  428114:	mov	x2, x20
  428118:	csel	w3, w3, w0, eq  // eq = none
  42811c:	mov	x0, x19
  428120:	bl	4270e0 <wcrtomb@plt+0x22190>
  428124:	cbnz	w0, 428250 <wcrtomb@plt+0x23300>
  428128:	str	x20, [sp, #120]
  42812c:	add	x20, x20, #0x1
  428130:	mov	w28, #0x1                   	// #1
  428134:	ldr	x1, [sp, #120]
  428138:	ldrb	w0, [x22, x1]
  42813c:	cmp	w0, #0x24
  428140:	b.eq	428184 <wcrtomb@plt+0x23234>  // b.none
  428144:	ldr	x2, [sp, #120]
  428148:	cbz	w24, 428258 <wcrtomb@plt+0x23308>
  42814c:	add	x2, x2, #0x1
  428150:	b	428094 <wcrtomb@plt+0x23144>
  428154:	cmp	w0, #0x22
  428158:	b.ne	428168 <wcrtomb@plt+0x23218>  // b.any
  42815c:	cmp	w3, #0x5c
  428160:	b.ne	428168 <wcrtomb@plt+0x23218>  // b.any
  428164:	add	x20, x20, #0x1
  428168:	add	x20, x20, #0x1
  42816c:	b	4280f4 <wcrtomb@plt+0x231a4>
  428170:	str	x2, [x19, #184]
  428174:	mov	x0, x19
  428178:	mov	w1, #0x1                   	// #1
  42817c:	bl	427a98 <wcrtomb@plt+0x22b48>
  428180:	b	428250 <wcrtomb@plt+0x23300>
  428184:	ldr	w0, [x19, #32]
  428188:	tbz	w0, #6, 4281c8 <wcrtomb@plt+0x23278>
  42818c:	ldr	w0, [x19, #32]
  428190:	tbnz	w0, #2, 428144 <wcrtomb@plt+0x231f4>
  428194:	ldr	x1, [sp, #120]
  428198:	add	x0, x22, x1
  42819c:	ldrb	w0, [x0, #1]
  4281a0:	cmp	w0, #0x28
  4281a4:	b.ne	428144 <wcrtomb@plt+0x231f4>  // b.any
  4281a8:	mov	x4, x26
  4281ac:	add	x3, sp, #0x78
  4281b0:	mov	x2, x25
  4281b4:	add	x1, x1, #0x2
  4281b8:	mov	x0, x22
  4281bc:	bl	4264b8 <wcrtomb@plt+0x21568>
  4281c0:	cbnz	w0, 428144 <wcrtomb@plt+0x231f4>
  4281c4:	b	4281f4 <wcrtomb@plt+0x232a4>
  4281c8:	add	x0, x22, x1
  4281cc:	ldrb	w0, [x0, #1]
  4281d0:	cmp	w0, #0x7b
  4281d4:	b.ne	42818c <wcrtomb@plt+0x2323c>  // b.any
  4281d8:	mov	x4, x21
  4281dc:	add	x3, sp, #0x78
  4281e0:	mov	x2, x25
  4281e4:	add	x1, x1, #0x2
  4281e8:	mov	x0, x22
  4281ec:	bl	4264b8 <wcrtomb@plt+0x21568>
  4281f0:	cbnz	w0, 42818c <wcrtomb@plt+0x2323c>
  4281f4:	ldr	x2, [sp, #120]
  4281f8:	cmp	x2, x25
  4281fc:	b.cs	428270 <wcrtomb@plt+0x23320>  // b.hs, b.nlast
  428200:	ldrb	w1, [x22, x2]
  428204:	cbz	x27, 428070 <wcrtomb@plt+0x23120>
  428208:	mov	x0, x27
  42820c:	str	w1, [sp, #96]
  428210:	str	x2, [sp, #104]
  428214:	bl	404b90 <strchr@plt>
  428218:	ldr	w1, [sp, #96]
  42821c:	ldr	x2, [sp, #104]
  428220:	cbz	x0, 428070 <wcrtomb@plt+0x23120>
  428224:	add	x21, x2, #0x1
  428228:	cmp	x21, x25
  42822c:	b.cs	42823c <wcrtomb@plt+0x232ec>  // b.hs, b.nlast
  428230:	ldrb	w0, [x22, x21]
  428234:	cmp	w0, #0xa
  428238:	b.ne	42805c <wcrtomb@plt+0x2310c>  // b.any
  42823c:	mov	x1, x20
  428240:	mov	x0, x19
  428244:	mov	w3, #0x0                   	// #0
  428248:	bl	4270e0 <wcrtomb@plt+0x22190>
  42824c:	cbz	w0, 428064 <wcrtomb@plt+0x23114>
  428250:	mov	w0, #0x2                   	// #2
  428254:	b	427ed0 <wcrtomb@plt+0x22f80>
  428258:	ldrb	w1, [x22, x2]
  42825c:	ldr	x0, [x19, #56]
  428260:	str	x2, [sp, #96]
  428264:	bl	404b90 <strchr@plt>
  428268:	ldr	x2, [sp, #96]
  42826c:	cbz	x0, 42814c <wcrtomb@plt+0x231fc>
  428270:	ldr	x0, [sp, #120]
  428274:	cbz	w28, 428294 <wcrtomb@plt+0x23344>
  428278:	cmp	x20, x0
  42827c:	b.cs	428294 <wcrtomb@plt+0x23344>  // b.hs, b.nlast
  428280:	ldr	x0, [x19, #216]
  428284:	cbz	x0, 428294 <wcrtomb@plt+0x23344>
  428288:	ldr	w1, [x0, #16]
  42828c:	orr	w1, w1, #0x10
  428290:	str	w1, [x0, #16]
  428294:	mov	w3, #0x0                   	// #0
  428298:	b	427ff4 <wcrtomb@plt+0x230a4>
  42829c:	ldr	x0, [x19, #32]
  4282a0:	and	x0, x0, #0xfffffff000
  4282a4:	and	x0, x0, #0xffffff8000001fff
  4282a8:	cbz	x0, 4282bc <wcrtomb@plt+0x2336c>
  4282ac:	add	x0, x20, #0x1
  4282b0:	mov	w3, #0x40                  	// #64
  4282b4:	str	x0, [sp, #120]
  4282b8:	b	427ff4 <wcrtomb@plt+0x230a4>
  4282bc:	tst	x21, #0x800
  4282c0:	cset	w3, eq  // eq = none
  4282c4:	lsl	w3, w3, #8
  4282c8:	b	427ff4 <wcrtomb@plt+0x230a4>
  4282cc:	str	x25, [sp, #120]
  4282d0:	b	428270 <wcrtomb@plt+0x23320>
  4282d4:	stp	x29, x30, [sp, #-64]!
  4282d8:	mov	x29, sp
  4282dc:	stp	x19, x20, [sp, #16]
  4282e0:	mov	x19, x0
  4282e4:	ldr	w0, [x0, #32]
  4282e8:	stp	x21, x22, [sp, #32]
  4282ec:	mov	x20, x1
  4282f0:	stp	x23, x24, [sp, #48]
  4282f4:	tbz	w0, #21, 428320 <wcrtomb@plt+0x233d0>
  4282f8:	mov	w2, #0x5                   	// #5
  4282fc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  428300:	mov	x0, #0x0                   	// #0
  428304:	add	x1, x1, #0xae5
  428308:	ldr	x21, [x19, #104]
  42830c:	bl	404d00 <dcgettext@plt>
  428310:	ldr	w2, [x19, #176]
  428314:	ldr	w1, [x19, #224]
  428318:	ldr	x3, [x19, #168]
  42831c:	blr	x21
  428320:	ldr	w0, [x19, #32]
  428324:	tbnz	w0, #22, 428340 <wcrtomb@plt+0x233f0>
  428328:	ldr	w0, [x19, #36]
  42832c:	tbz	w0, #7, 4283b4 <wcrtomb@plt+0x23464>
  428330:	ldp	x1, x0, [x19, #40]
  428334:	add	x0, x0, #0x1
  428338:	cmp	x0, x1
  42833c:	b.ne	4283b4 <wcrtomb@plt+0x23464>  // b.any
  428340:	mov	x1, x20
  428344:	mov	x0, x19
  428348:	mov	w2, #0x1                   	// #1
  42834c:	bl	427e90 <wcrtomb@plt+0x22f40>
  428350:	cmp	w0, #0x2
  428354:	b.ne	4283c0 <wcrtomb@plt+0x23470>  // b.any
  428358:	ldr	w0, [x19, #192]
  42835c:	ldp	x19, x20, [sp, #16]
  428360:	ldp	x21, x22, [sp, #32]
  428364:	ldp	x23, x24, [sp, #48]
  428368:	ldp	x29, x30, [sp], #64
  42836c:	ret
  428370:	ldr	x0, [x19, #32]
  428374:	ldr	x20, [x19, #184]
  428378:	tst	x0, x21
  42837c:	cset	x0, eq  // eq = none
  428380:	add	x20, x20, x0
  428384:	mov	x1, x20
  428388:	mov	x0, x19
  42838c:	mov	w2, #0x0                   	// #0
  428390:	bl	427e90 <wcrtomb@plt+0x22f40>
  428394:	cmp	w0, #0x1
  428398:	b.eq	428370 <wcrtomb@plt+0x23420>  // b.none
  42839c:	ldr	x1, [x19, #216]
  4283a0:	cbz	x1, 428350 <wcrtomb@plt+0x23400>
  4283a4:	ldr	w2, [x1, #16]
  4283a8:	and	w2, w2, #0xffffffef
  4283ac:	str	w2, [x1, #16]
  4283b0:	b	428350 <wcrtomb@plt+0x23400>
  4283b4:	mov	x21, #0x1000                	// #4096
  4283b8:	movk	x21, #0x80, lsl #32
  4283bc:	b	428384 <wcrtomb@plt+0x23434>
  4283c0:	ldr	w0, [x19, #32]
  4283c4:	tbz	w0, #21, 428400 <wcrtomb@plt+0x234b0>
  4283c8:	ldr	w21, [x19, #224]
  4283cc:	mov	w2, #0x5                   	// #5
  4283d0:	ldr	x20, [x19, #104]
  4283d4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  4283d8:	mov	x0, #0x0                   	// #0
  4283dc:	add	x1, x1, #0xaf8
  4283e0:	bl	404d00 <dcgettext@plt>
  4283e4:	mov	x2, x0
  4283e8:	mov	w1, w21
  4283ec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4283f0:	add	x0, x0, #0xb06
  4283f4:	blr	x20
  4283f8:	mov	x0, x19
  4283fc:	bl	4263f8 <wcrtomb@plt+0x214a8>
  428400:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  428404:	add	x20, x20, #0x2a0
  428408:	adrp	x22, 44d000 <_obstack_memory_used@@Base+0x15380>
  42840c:	adrp	x23, 44d000 <_obstack_memory_used@@Base+0x15380>
  428410:	add	x20, x20, #0x60
  428414:	add	x22, x22, #0xb06
  428418:	add	x23, x23, #0xb10
  42841c:	ldr	x0, [x20]
  428420:	cbz	x0, 428358 <wcrtomb@plt+0x23408>
  428424:	ldp	w2, w1, [x20, #8]
  428428:	ldr	w0, [x19, #32]
  42842c:	and	w0, w2, w0
  428430:	tbz	w1, #1, 42843c <wcrtomb@plt+0x234ec>
  428434:	cmp	w2, w0
  428438:	cset	w0, eq  // eq = none
  42843c:	tbz	w1, #0, 428448 <wcrtomb@plt+0x234f8>
  428440:	cmp	w0, #0x0
  428444:	cset	w0, eq  // eq = none
  428448:	cbz	w0, 4284dc <wcrtomb@plt+0x2358c>
  42844c:	tbz	w1, #2, 428490 <wcrtomb@plt+0x23540>
  428450:	ldr	x21, [x19, #208]
  428454:	cbnz	x21, 4284e4 <wcrtomb@plt+0x23594>
  428458:	ldr	w0, [x19, #32]
  42845c:	tbz	w0, #21, 428490 <wcrtomb@plt+0x23540>
  428460:	ldr	w24, [x19, #224]
  428464:	mov	x1, x23
  428468:	ldr	x21, [x19, #104]
  42846c:	mov	w2, #0x5                   	// #5
  428470:	mov	x0, #0x0                   	// #0
  428474:	bl	404d00 <dcgettext@plt>
  428478:	mov	w1, w24
  42847c:	mov	x2, x0
  428480:	mov	x0, x22
  428484:	blr	x21
  428488:	mov	x0, x19
  42848c:	bl	4263f8 <wcrtomb@plt+0x214a8>
  428490:	ldr	x1, [x20, #16]
  428494:	cbz	x1, 4284dc <wcrtomb@plt+0x2358c>
  428498:	mov	x0, x19
  42849c:	blr	x1
  4284a0:	cbnz	w0, 428358 <wcrtomb@plt+0x23408>
  4284a4:	ldr	w0, [x19, #32]
  4284a8:	tbz	w0, #21, 4284dc <wcrtomb@plt+0x2358c>
  4284ac:	ldr	x1, [x20]
  4284b0:	mov	w2, #0x5                   	// #5
  4284b4:	ldr	w24, [x19, #224]
  4284b8:	mov	x0, #0x0                   	// #0
  4284bc:	ldr	x21, [x19, #104]
  4284c0:	bl	404d00 <dcgettext@plt>
  4284c4:	mov	w1, w24
  4284c8:	mov	x2, x0
  4284cc:	mov	x0, x22
  4284d0:	blr	x21
  4284d4:	mov	x0, x19
  4284d8:	bl	4263f8 <wcrtomb@plt+0x214a8>
  4284dc:	add	x20, x20, #0x18
  4284e0:	b	42841c <wcrtomb@plt+0x234cc>
  4284e4:	ldr	w0, [x21, #16]
  4284e8:	tbnz	w0, #4, 4284f4 <wcrtomb@plt+0x235a4>
  4284ec:	ldr	x21, [x21, #8]
  4284f0:	b	428454 <wcrtomb@plt+0x23504>
  4284f4:	mov	x1, x21
  4284f8:	mov	x0, x19
  4284fc:	bl	427950 <wcrtomb@plt+0x22a00>
  428500:	cbz	w0, 4284ec <wcrtomb@plt+0x2359c>
  428504:	b	428358 <wcrtomb@plt+0x23408>
  428508:	stp	x29, x30, [sp, #-80]!
  42850c:	mov	x29, sp
  428510:	stp	x19, x20, [sp, #16]
  428514:	mov	x19, x0
  428518:	stp	x21, x22, [sp, #32]
  42851c:	mov	x21, #0x1000                	// #4096
  428520:	movk	x21, #0x80, lsl #32
  428524:	stp	x23, x24, [sp, #48]
  428528:	str	x25, [sp, #64]
  42852c:	ldr	x4, [x19, #208]
  428530:	add	x7, x19, #0xa8
  428534:	mov	w5, #0x0                   	// #0
  428538:	mov	x20, #0x0                   	// #0
  42853c:	cbnz	x4, 4285b8 <wcrtomb@plt+0x23668>
  428540:	cbnz	x20, 4286ac <wcrtomb@plt+0x2375c>
  428544:	ldr	w0, [x19, #32]
  428548:	tbz	w0, #29, 4286ac <wcrtomb@plt+0x2375c>
  42854c:	ldp	x1, x2, [x19, #176]
  428550:	cmp	x2, x1
  428554:	b.cs	4286a0 <wcrtomb@plt+0x23750>  // b.hs, b.nlast
  428558:	tbz	w0, #21, 428578 <wcrtomb@plt+0x23628>
  42855c:	ldr	x20, [x19, #104]
  428560:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  428564:	add	x1, x1, #0xb20
  428568:	mov	w2, #0x5                   	// #5
  42856c:	mov	x0, #0x0                   	// #0
  428570:	bl	404d00 <dcgettext@plt>
  428574:	blr	x20
  428578:	ldr	x0, [x19, #32]
  42857c:	ldr	x1, [x19, #184]
  428580:	tst	x0, x21
  428584:	cset	x0, eq  // eq = none
  428588:	add	x1, x1, x0
  42858c:	mov	x0, x19
  428590:	bl	4282d4 <wcrtomb@plt+0x23384>
  428594:	mov	w20, w0
  428598:	cbz	w0, 42852c <wcrtomb@plt+0x235dc>
  42859c:	mov	w0, w20
  4285a0:	ldp	x19, x20, [sp, #16]
  4285a4:	ldp	x21, x22, [sp, #32]
  4285a8:	ldp	x23, x24, [sp, #48]
  4285ac:	ldr	x25, [sp, #64]
  4285b0:	ldp	x29, x30, [sp], #80
  4285b4:	ret
  4285b8:	ldr	w0, [x4, #16]
  4285bc:	ldr	x6, [x4, #8]
  4285c0:	tbz	w0, #6, 428628 <wcrtomb@plt+0x236d8>
  4285c4:	ldr	w0, [x19, #32]
  4285c8:	tbz	w0, #12, 42860c <wcrtomb@plt+0x236bc>
  4285cc:	tbz	w0, #11, 428614 <wcrtomb@plt+0x236c4>
  4285d0:	mov	x1, x4
  4285d4:	mov	x0, x7
  4285d8:	bl	4268e8 <wcrtomb@plt+0x21998>
  4285dc:	ldrb	w0, [x0]
  4285e0:	cbz	w5, 428658 <wcrtomb@plt+0x23708>
  4285e4:	cmp	w5, w0
  4285e8:	b.ne	428600 <wcrtomb@plt+0x236b0>  // b.any
  4285ec:	mov	x1, x4
  4285f0:	mov	x0, x19
  4285f4:	bl	4263b4 <wcrtomb@plt+0x21464>
  4285f8:	mov	x4, x6
  4285fc:	b	42853c <wcrtomb@plt+0x235ec>
  428600:	add	x20, x20, #0x1
  428604:	mov	w5, #0x0                   	// #0
  428608:	b	428614 <wcrtomb@plt+0x236c4>
  42860c:	ldr	w0, [x19, #36]
  428610:	tbnz	w0, #7, 4285ec <wcrtomb@plt+0x2369c>
  428614:	ldr	w0, [x19, #32]
  428618:	add	x20, x20, #0x1
  42861c:	tst	x0, #0x20000000
  428620:	csel	x6, x6, xzr, eq  // eq = none
  428624:	b	4285f8 <wcrtomb@plt+0x236a8>
  428628:	cbz	w5, 428630 <wcrtomb@plt+0x236e0>
  42862c:	add	x20, x20, #0x1
  428630:	ldr	w0, [x19, #36]
  428634:	tbz	w0, #7, 428604 <wcrtomb@plt+0x236b4>
  428638:	ldp	x1, x0, [x19, #40]
  42863c:	add	x0, x0, #0x1
  428640:	add	x0, x0, x20
  428644:	cmp	x0, x1
  428648:	b.ne	428604 <wcrtomb@plt+0x236b4>  // b.any
  42864c:	cbnz	x6, 428698 <wcrtomb@plt+0x23748>
  428650:	add	x20, x20, #0x1
  428654:	b	428540 <wcrtomb@plt+0x235f0>
  428658:	mov	w5, w0
  42865c:	b	4285f8 <wcrtomb@plt+0x236a8>
  428660:	ldr	w1, [x0, #16]
  428664:	orr	w1, w1, #0x10
  428668:	str	w1, [x0, #16]
  42866c:	mov	x0, x2
  428670:	ldr	x2, [x0, #8]
  428674:	cbnz	x2, 428660 <wcrtomb@plt+0x23710>
  428678:	ldr	w0, [x4, #16]
  42867c:	tbz	w0, #4, 428650 <wcrtomb@plt+0x23700>
  428680:	mov	x1, x4
  428684:	mov	x0, x19
  428688:	bl	427950 <wcrtomb@plt+0x22a00>
  42868c:	cbz	w0, 428650 <wcrtomb@plt+0x23700>
  428690:	ldr	w20, [x19, #192]
  428694:	b	42859c <wcrtomb@plt+0x2364c>
  428698:	mov	x0, x4
  42869c:	b	428670 <wcrtomb@plt+0x23720>
  4286a0:	mov	w20, #0x0                   	// #0
  4286a4:	str	xzr, [x19, #96]
  4286a8:	b	42859c <wcrtomb@plt+0x2364c>
  4286ac:	add	x1, x20, #0x1
  4286b0:	mov	x0, x19
  4286b4:	bl	426ee8 <wcrtomb@plt+0x21f98>
  4286b8:	mov	w20, w0
  4286bc:	cbnz	w0, 428690 <wcrtomb@plt+0x23740>
  4286c0:	add	x24, x19, #0xa8
  4286c4:	ldr	x23, [x19, #208]
  4286c8:	cbz	x23, 428764 <wcrtomb@plt+0x23814>
  4286cc:	mov	x1, x23
  4286d0:	mov	x0, x24
  4286d4:	bl	4268e8 <wcrtomb@plt+0x21998>
  4286d8:	mov	x25, x0
  4286dc:	mov	x0, x23
  4286e0:	bl	426934 <wcrtomb@plt+0x219e4>
  4286e4:	mov	x21, x0
  4286e8:	add	x0, x0, #0x1
  4286ec:	bl	4045f0 <malloc@plt>
  4286f0:	ldr	x2, [x19]
  4286f4:	mov	x22, x0
  4286f8:	ldr	x1, [x19, #16]
  4286fc:	add	x1, x1, x2
  428700:	ldr	x2, [x19, #8]
  428704:	str	x0, [x2, x1, lsl #3]
  428708:	cbnz	x0, 428728 <wcrtomb@plt+0x237d8>
  42870c:	mov	x0, x19
  428710:	ldp	x19, x20, [sp, #16]
  428714:	ldp	x21, x22, [sp, #32]
  428718:	ldp	x23, x24, [sp, #48]
  42871c:	ldr	x25, [sp, #64]
  428720:	ldp	x29, x30, [sp], #80
  428724:	b	426e78 <wcrtomb@plt+0x21f28>
  428728:	mov	x2, x21
  42872c:	mov	x1, x25
  428730:	bl	404200 <memcpy@plt>
  428734:	strb	wzr, [x22, x21]
  428738:	mov	x0, x19
  42873c:	mov	x1, x23
  428740:	bl	4263b4 <wcrtomb@plt+0x21464>
  428744:	ldr	x0, [x19]
  428748:	add	x0, x0, #0x1
  42874c:	str	x0, [x19]
  428750:	ldr	x0, [x19, #48]
  428754:	add	x0, x0, #0x1
  428758:	str	x0, [x19, #48]
  42875c:	ldr	w0, [x19, #32]
  428760:	tbz	w0, #29, 4286c4 <wcrtomb@plt+0x23774>
  428764:	ldr	x1, [x19]
  428768:	ldr	x0, [x19, #16]
  42876c:	add	x0, x0, x1
  428770:	ldr	x1, [x19, #8]
  428774:	str	xzr, [x1, x0, lsl #3]
  428778:	b	42859c <wcrtomb@plt+0x2364c>
  42877c:	stp	x29, x30, [sp, #-48]!
  428780:	mov	x29, sp
  428784:	stp	x19, x20, [sp, #16]
  428788:	mov	x20, x0
  42878c:	mov	x19, x1
  428790:	stp	x21, x22, [sp, #32]
  428794:	mov	x1, x2
  428798:	mov	w22, w5
  42879c:	ldr	x0, [x0, #56]
  4287a0:	str	x0, [x19, #56]
  4287a4:	ldr	x0, [x20, #104]
  4287a8:	str	x0, [x19, #104]
  4287ac:	ldr	x0, [x20, #96]
  4287b0:	str	x0, [x19, #96]
  4287b4:	ldr	x0, [x20, #88]
  4287b8:	str	x0, [x19, #88]
  4287bc:	sxtw	x2, w3
  4287c0:	ldr	w0, [x20, #32]
  4287c4:	tbnz	w4, #6, 4287e4 <wcrtomb@plt+0x23894>
  4287c8:	ldr	x3, [x20, #112]
  4287cc:	str	x3, [x19, #112]
  4287d0:	ldr	x3, [x20, #144]
  4287d4:	str	x3, [x19, #144]
  4287d8:	mov	w3, #0x8180000             	// #135790592
  4287dc:	and	w3, w0, w3
  4287e0:	orr	w4, w4, w3
  4287e4:	tbnz	w4, #2, 4287f0 <wcrtomb@plt+0x238a0>
  4287e8:	ldr	x3, [x20, #160]
  4287ec:	str	x3, [x19, #160]
  4287f0:	mov	w3, #0x44                  	// #68
  4287f4:	and	w3, w4, w3
  4287f8:	cmp	w3, #0x44
  4287fc:	b.eq	428810 <wcrtomb@plt+0x238c0>  // b.none
  428800:	ldr	x3, [x20, #152]
  428804:	str	x3, [x19, #152]
  428808:	and	w3, w0, #0x4000000
  42880c:	orr	w4, w4, w3
  428810:	ldr	w3, [x20, #36]
  428814:	str	w3, [x19, #36]
  428818:	mov	w3, #0x10                  	// #16
  42881c:	movk	w3, #0x8020, lsl #16
  428820:	and	w0, w0, w3
  428824:	orr	w4, w0, w4
  428828:	mov	w3, #0x4000                	// #16384
  42882c:	mov	x0, x19
  428830:	movk	w3, #0x7, lsl #16
  428834:	orr	w3, w4, w3
  428838:	bl	427ac8 <wcrtomb@plt+0x22b78>
  42883c:	mov	w21, w0
  428840:	cbnz	w0, 42886c <wcrtomb@plt+0x2391c>
  428844:	ldr	w0, [x20, #224]
  428848:	mov	x1, #0x0                   	// #0
  42884c:	add	w0, w0, #0x1
  428850:	str	w0, [x19, #224]
  428854:	mov	x0, x19
  428858:	bl	4282d4 <wcrtomb@plt+0x23384>
  42885c:	mov	w21, w0
  428860:	cbz	w0, 428880 <wcrtomb@plt+0x23930>
  428864:	mov	x0, x19
  428868:	bl	4265a4 <wcrtomb@plt+0x21654>
  42886c:	mov	w0, w21
  428870:	ldp	x19, x20, [sp, #16]
  428874:	ldp	x21, x22, [sp, #32]
  428878:	ldp	x29, x30, [sp], #48
  42887c:	ret
  428880:	cbz	w22, 42886c <wcrtomb@plt+0x2391c>
  428884:	mov	x0, x19
  428888:	bl	428508 <wcrtomb@plt+0x235b8>
  42888c:	mov	w21, w0
  428890:	b	428864 <wcrtomb@plt+0x23914>
  428894:	sub	sp, sp, #0x260
  428898:	stp	x29, x30, [sp]
  42889c:	mov	x29, sp
  4288a0:	stp	x19, x20, [sp, #16]
  4288a4:	mov	x19, x0
  4288a8:	stp	x21, x22, [sp, #32]
  4288ac:	stp	x23, x24, [sp, #48]
  4288b0:	mov	x24, x1
  4288b4:	stp	x25, x26, [sp, #64]
  4288b8:	mov	x25, x3
  4288bc:	mov	x26, x4
  4288c0:	stp	x27, x28, [sp, #80]
  4288c4:	mov	w27, w5
  4288c8:	ldrb	w3, [x1]
  4288cc:	and	w1, w3, #0xffffffdf
  4288d0:	sub	w1, w1, #0x41
  4288d4:	and	w1, w1, #0xff
  4288d8:	cmp	w1, #0x19
  4288dc:	b.ls	4288e8 <wcrtomb@plt+0x23998>  // b.plast
  4288e0:	cmp	w3, #0x5f
  4288e4:	b.ne	428994 <wcrtomb@plt+0x23a44>  // b.any
  4288e8:	mov	x21, #0x1                   	// #1
  4288ec:	b	428924 <wcrtomb@plt+0x239d4>
  4288f0:	ldrb	w1, [x24, x21]
  4288f4:	and	w0, w1, #0xffffffdf
  4288f8:	sub	w0, w0, #0x41
  4288fc:	and	w0, w0, #0xff
  428900:	cmp	w0, #0x19
  428904:	b.ls	428920 <wcrtomb@plt+0x239d0>  // b.plast
  428908:	sub	w0, w1, #0x30
  42890c:	and	w0, w0, #0xff
  428910:	cmp	w0, #0x9
  428914:	b.ls	428920 <wcrtomb@plt+0x239d0>  // b.plast
  428918:	cmp	w1, #0x5f
  42891c:	b.ne	42892c <wcrtomb@plt+0x239dc>  // b.any
  428920:	add	x21, x21, #0x1
  428924:	cmp	x21, x2
  428928:	b.cc	4288f0 <wcrtomb@plt+0x239a0>  // b.lo, b.ul, b.last
  42892c:	sub	x0, x21, #0x1
  428930:	mov	x23, x24
  428934:	add	x0, x24, x0
  428938:	str	x0, [x26]
  42893c:	mov	x22, #0x0                   	// #0
  428940:	ldr	w28, [x19, #32]
  428944:	tbz	w28, #19, 428c88 <wcrtomb@plt+0x23d38>
  428948:	ldr	x20, [x19, #112]
  42894c:	tbnz	w28, #27, 428cc8 <wcrtomb@plt+0x23d78>
  428950:	cbz	x20, 428c88 <wcrtomb@plt+0x23d38>
  428954:	ldr	x0, [x20]
  428958:	cbz	x0, 428c88 <wcrtomb@plt+0x23d38>
  42895c:	mov	x1, #0x0                   	// #0
  428960:	ldrb	w3, [x23, x1]
  428964:	ldrb	w2, [x0, x1]
  428968:	cmp	w3, w2
  42896c:	b.ne	428cd8 <wcrtomb@plt+0x23d88>  // b.any
  428970:	add	x1, x1, #0x1
  428974:	cmp	x1, x21
  428978:	b.ne	428960 <wcrtomb@plt+0x23a10>  // b.any
  42897c:	ldrb	w1, [x0, x21]
  428980:	cmp	w1, #0x3d
  428984:	b.ne	428cd8 <wcrtomb@plt+0x23d88>  // b.any
  428988:	add	x1, x21, #0x1
  42898c:	add	x0, x0, x1
  428990:	b	428b68 <wcrtomb@plt+0x23c18>
  428994:	cmp	w3, #0x7b
  428998:	b.ne	428a8c <wcrtomb@plt+0x23b3c>  // b.any
  42899c:	sub	x20, x2, #0x1
  4289a0:	add	x23, x24, #0x1
  4289a4:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  4289a8:	add	x28, x24, #0x2
  4289ac:	add	x2, x2, #0xb2b
  4289b0:	mov	x21, #0x1                   	// #1
  4289b4:	cmp	x21, x20
  4289b8:	b.cc	4289c4 <wcrtomb@plt+0x23a74>  // b.lo, b.ul, b.last
  4289bc:	b.eq	4289f8 <wcrtomb@plt+0x23aa8>  // b.none
  4289c0:	b	42893c <wcrtomb@plt+0x239ec>
  4289c4:	ldrb	w1, [x28]
  4289c8:	mov	x22, x28
  4289cc:	cmp	w1, #0x3a
  4289d0:	b.ne	428a0c <wcrtomb@plt+0x23abc>  // b.any
  4289d4:	add	x1, x21, #0x1
  4289d8:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  4289dc:	add	x22, x23, x1
  4289e0:	add	x4, x4, #0xadf
  4289e4:	add	x3, sp, #0x178
  4289e8:	mov	x2, x20
  4289ec:	mov	x0, x23
  4289f0:	bl	4264b8 <wcrtomb@plt+0x21568>
  4289f4:	cbz	w0, 428a4c <wcrtomb@plt+0x23afc>
  4289f8:	mov	x0, x19
  4289fc:	mov	w1, #0x4                   	// #4
  428a00:	bl	427a98 <wcrtomb@plt+0x22b48>
  428a04:	mov	w20, w0
  428a08:	b	428b04 <wcrtomb@plt+0x23bb4>
  428a0c:	cmp	w1, #0x7d
  428a10:	b.ne	428a1c <wcrtomb@plt+0x23acc>  // b.any
  428a14:	str	x28, [x26]
  428a18:	b	42893c <wcrtomb@plt+0x239ec>
  428a1c:	mov	x0, x2
  428a20:	bl	404b90 <strchr@plt>
  428a24:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  428a28:	add	x28, x28, #0x1
  428a2c:	add	x2, x1, #0xb2b
  428a30:	cbz	x0, 428a84 <wcrtomb@plt+0x23b34>
  428a34:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  428a38:	add	x3, sp, #0x178
  428a3c:	add	x4, x4, #0xadf
  428a40:	mov	x2, x20
  428a44:	mov	x1, x21
  428a48:	b	4289ec <wcrtomb@plt+0x23a9c>
  428a4c:	ldr	x0, [sp, #376]
  428a50:	add	x0, x23, x0
  428a54:	str	x0, [x26]
  428a58:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  428a5c:	add	x0, x0, #0xb2b
  428a60:	ldrb	w1, [x22]
  428a64:	bl	404b90 <strchr@plt>
  428a68:	cbnz	x0, 428940 <wcrtomb@plt+0x239f0>
  428a6c:	ldr	w0, [x19, #32]
  428a70:	tbz	w0, #5, 428fd4 <wcrtomb@plt+0x24084>
  428a74:	mov	w1, #0x5                   	// #5
  428a78:	mov	x0, x19
  428a7c:	bl	427a98 <wcrtomb@plt+0x22b48>
  428a80:	b	428a9c <wcrtomb@plt+0x23b4c>
  428a84:	add	x21, x21, #0x1
  428a88:	b	4289b4 <wcrtomb@plt+0x23a64>
  428a8c:	add	x1, sp, #0x178
  428a90:	bl	427098 <wcrtomb@plt+0x22148>
  428a94:	mov	w20, w0
  428a98:	cbz	w0, 428aa4 <wcrtomb@plt+0x23b54>
  428a9c:	mov	w20, #0x1                   	// #1
  428aa0:	b	428b04 <wcrtomb@plt+0x23bb4>
  428aa4:	ldr	x2, [x25]
  428aa8:	mov	x0, x19
  428aac:	ldr	x1, [sp, #376]
  428ab0:	orr	w27, w27, #0x2
  428ab4:	bl	426960 <wcrtomb@plt+0x21a10>
  428ab8:	ldr	x21, [sp, #376]
  428abc:	str	x21, [x25]
  428ac0:	mov	x0, #0x3                   	// #3
  428ac4:	str	w27, [x21, #16]
  428ac8:	bl	4045f0 <malloc@plt>
  428acc:	str	x0, [x21, #24]
  428ad0:	cbnz	x0, 428ae0 <wcrtomb@plt+0x23b90>
  428ad4:	mov	x0, x19
  428ad8:	bl	426e78 <wcrtomb@plt+0x21f28>
  428adc:	b	428a04 <wcrtomb@plt+0x23ab4>
  428ae0:	mov	w1, #0x24                  	// #36
  428ae4:	strb	w1, [x0]
  428ae8:	ldrb	w1, [x24]
  428aec:	ldr	x0, [x21, #24]
  428af0:	strb	w1, [x0, #1]
  428af4:	ldr	x0, [sp, #376]
  428af8:	ldr	x0, [x0, #24]
  428afc:	strb	wzr, [x0, #2]
  428b00:	str	x24, [x26]
  428b04:	mov	w0, w20
  428b08:	ldp	x29, x30, [sp]
  428b0c:	ldp	x19, x20, [sp, #16]
  428b10:	ldp	x21, x22, [sp, #32]
  428b14:	ldp	x23, x24, [sp, #48]
  428b18:	ldp	x25, x26, [sp, #64]
  428b1c:	ldp	x27, x28, [sp, #80]
  428b20:	add	sp, sp, #0x260
  428b24:	ret
  428b28:	mov	x0, x5
  428b2c:	stp	x5, x3, [sp, #112]
  428b30:	bl	404280 <strlen@plt>
  428b34:	cmp	x0, x21
  428b38:	ldp	x5, x3, [sp, #112]
  428b3c:	b.ne	428c70 <wcrtomb@plt+0x23d20>  // b.any
  428b40:	mov	x2, x21
  428b44:	mov	x1, x23
  428b48:	mov	x0, x5
  428b4c:	str	x3, [sp, #112]
  428b50:	bl	4049f0 <memcmp@plt>
  428b54:	ldr	x3, [sp, #112]
  428b58:	cbnz	w0, 428c70 <wcrtomb@plt+0x23d20>
  428b5c:	add	x3, x3, #0x1
  428b60:	ldr	x0, [x20, x3, lsl #3]
  428b64:	cbz	x0, 428d84 <wcrtomb@plt+0x23e34>
  428b68:	bl	404870 <strdup@plt>
  428b6c:	str	x0, [sp, #136]
  428b70:	cbz	x0, 428ad4 <wcrtomb@plt+0x23b84>
  428b74:	ldr	x0, [sp, #136]
  428b78:	cbnz	x0, 428ce0 <wcrtomb@plt+0x23d90>
  428b7c:	cbz	x22, 428cec <wcrtomb@plt+0x23d9c>
  428b80:	ldurb	w1, [x22, #-1]
  428b84:	cmp	w1, #0x3a
  428b88:	b.ne	428d18 <wcrtomb@plt+0x23dc8>  // b.any
  428b8c:	bl	404ae0 <free@plt>
  428b90:	ldrb	w0, [x22]
  428b94:	and	w1, w0, #0xffffffef
  428b98:	cmp	w1, #0x2d
  428b9c:	b.ne	428f10 <wcrtomb@plt+0x23fc0>  // b.any
  428ba0:	ldr	w0, [x19, #32]
  428ba4:	mov	w4, #0x44                  	// #68
  428ba8:	ldr	x3, [x26]
  428bac:	and	w0, w0, w4
  428bb0:	add	x2, x22, #0x1
  428bb4:	mov	w4, #0x700                 	// #1792
  428bb8:	add	x1, sp, #0x90
  428bbc:	sub	w3, w3, w2
  428bc0:	mov	w5, #0x1                   	// #1
  428bc4:	movk	w4, #0x40, lsl #16
  428bc8:	orr	w4, w0, w4
  428bcc:	mov	x0, x19
  428bd0:	bl	42877c <wcrtomb@plt+0x2382c>
  428bd4:	mov	w20, w0
  428bd8:	cbnz	w0, 428b04 <wcrtomb@plt+0x23bb4>
  428bdc:	ldr	x0, [sp, #152]
  428be0:	ldr	x1, [x0]
  428be4:	str	x1, [sp, #136]
  428be8:	str	xzr, [x0]
  428bec:	add	x0, sp, #0x90
  428bf0:	bl	426d30 <wcrtomb@plt+0x21de0>
  428bf4:	ldrb	w0, [x22]
  428bf8:	cmp	w0, #0x3d
  428bfc:	b.ne	428cec <wcrtomb@plt+0x23d9c>  // b.any
  428c00:	ldr	w20, [x19, #32]
  428c04:	ldp	x2, x1, [x19, #128]
  428c08:	ubfx	x0, x20, #27, #1
  428c0c:	add	w0, w0, #0x1
  428c10:	ldr	x28, [sp, #136]
  428c14:	sxtw	x22, w0
  428c18:	add	x0, x2, w0, sxtw
  428c1c:	cmp	x0, x1
  428c20:	b.cc	428e00 <wcrtomb@plt+0x23eb0>  // b.lo, b.ul, b.last
  428c24:	ldr	x0, [x19, #120]
  428c28:	cbnz	x0, 428e64 <wcrtomb@plt+0x23f14>
  428c2c:	tbz	w20, #19, 428e3c <wcrtomb@plt+0x23eec>
  428c30:	ldr	x3, [x19, #112]
  428c34:	mov	x2, #0x0                   	// #0
  428c38:	cbnz	x3, 428d90 <wcrtomb@plt+0x23e40>
  428c3c:	add	x22, x22, #0x1
  428c40:	mov	x1, #0x8                   	// #8
  428c44:	add	x0, x22, x2
  428c48:	stp	x0, x2, [sp, #104]
  428c4c:	mov	x20, #0x0                   	// #0
  428c50:	str	x3, [sp, #120]
  428c54:	bl	4047a0 <calloc@plt>
  428c58:	mov	x22, x0
  428c5c:	ldp	x2, x3, [sp, #112]
  428c60:	cbnz	x0, 428de4 <wcrtomb@plt+0x23e94>
  428c64:	mov	x0, x19
  428c68:	bl	426e78 <wcrtomb@plt+0x21f28>
  428c6c:	b	428cec <wcrtomb@plt+0x23d9c>
  428c70:	ldr	x0, [sp, #104]
  428c74:	ldr	x0, [x0, x3, lsl #3]
  428c78:	cbz	x0, 428c88 <wcrtomb@plt+0x23d38>
  428c7c:	add	x3, x3, #0x2
  428c80:	ldr	x5, [x20, x3, lsl #3]
  428c84:	cbnz	x5, 428b28 <wcrtomb@plt+0x23bd8>
  428c88:	tbz	w28, #20, 428d84 <wcrtomb@plt+0x23e34>
  428c8c:	ldp	x4, x3, [x19, #144]
  428c90:	mov	x2, x21
  428c94:	mov	x1, x23
  428c98:	add	x0, sp, #0x88
  428c9c:	blr	x4
  428ca0:	mov	w20, w0
  428ca4:	cbz	w0, 428b74 <wcrtomb@plt+0x23c24>
  428ca8:	cmp	w0, #0x5
  428cac:	b.eq	428d84 <wcrtomb@plt+0x23e34>  // b.none
  428cb0:	cmp	w0, #0x9
  428cb4:	b.eq	42901c <wcrtomb@plt+0x240cc>  // b.none
  428cb8:	cmp	w0, #0x2
  428cbc:	b.eq	428ad4 <wcrtomb@plt+0x23b84>  // b.none
  428cc0:	mov	w1, w20
  428cc4:	b	428a78 <wcrtomb@plt+0x23b28>
  428cc8:	add	x0, x20, #0x8
  428ccc:	mov	x3, #0x0                   	// #0
  428cd0:	str	x0, [sp, #104]
  428cd4:	b	428c80 <wcrtomb@plt+0x23d30>
  428cd8:	add	x20, x20, #0x8
  428cdc:	b	428954 <wcrtomb@plt+0x23a04>
  428ce0:	ldrb	w1, [x0]
  428ce4:	cbz	w1, 428b7c <wcrtomb@plt+0x23c2c>
  428ce8:	cbnz	x22, 428d18 <wcrtomb@plt+0x23dc8>
  428cec:	ldr	x20, [sp, #136]
  428cf0:	cbz	x20, 429140 <wcrtomb@plt+0x241f0>
  428cf4:	tbz	w27, #2, 42906c <wcrtomb@plt+0x2411c>
  428cf8:	add	x1, sp, #0x178
  428cfc:	mov	x0, x19
  428d00:	bl	427098 <wcrtomb@plt+0x22148>
  428d04:	mov	w20, w0
  428d08:	cbz	w0, 42903c <wcrtomb@plt+0x240ec>
  428d0c:	ldr	x0, [sp, #136]
  428d10:	bl	404ae0 <free@plt>
  428d14:	b	428a9c <wcrtomb@plt+0x23b4c>
  428d18:	ldrb	w0, [x22]
  428d1c:	cmp	w0, #0x2b
  428d20:	b.ne	428cec <wcrtomb@plt+0x23d9c>  // b.any
  428d24:	ldr	w0, [x19, #32]
  428d28:	mov	w4, #0x44                  	// #68
  428d2c:	ldr	x3, [x26]
  428d30:	and	w0, w0, w4
  428d34:	add	x2, x22, #0x1
  428d38:	mov	w4, #0x700                 	// #1792
  428d3c:	add	x1, sp, #0x90
  428d40:	sub	w3, w3, w2
  428d44:	mov	w5, #0x1                   	// #1
  428d48:	movk	w4, #0x40, lsl #16
  428d4c:	orr	w4, w0, w4
  428d50:	mov	x0, x19
  428d54:	bl	42877c <wcrtomb@plt+0x2382c>
  428d58:	mov	w20, w0
  428d5c:	cbnz	w0, 428b04 <wcrtomb@plt+0x23bb4>
  428d60:	ldr	x0, [sp, #136]
  428d64:	bl	404ae0 <free@plt>
  428d68:	ldr	x0, [sp, #152]
  428d6c:	ldr	x1, [x0]
  428d70:	str	x1, [sp, #136]
  428d74:	str	xzr, [x0]
  428d78:	add	x0, sp, #0x90
  428d7c:	bl	426d30 <wcrtomb@plt+0x21de0>
  428d80:	b	428cec <wcrtomb@plt+0x23d9c>
  428d84:	cbnz	x22, 428b90 <wcrtomb@plt+0x23c40>
  428d88:	b	428a6c <wcrtomb@plt+0x23b1c>
  428d8c:	add	x2, x2, #0x1
  428d90:	ldr	x0, [x3, x2, lsl #3]
  428d94:	cbnz	x0, 428d8c <wcrtomb@plt+0x23e3c>
  428d98:	b	428c3c <wcrtomb@plt+0x23cec>
  428d9c:	ldr	x0, [x3, x20, lsl #3]
  428da0:	stp	x3, x2, [sp, #112]
  428da4:	bl	404870 <strdup@plt>
  428da8:	str	x0, [x22, x20, lsl #3]
  428dac:	ldp	x3, x2, [sp, #112]
  428db0:	cbnz	x0, 428de0 <wcrtomb@plt+0x23e90>
  428db4:	sub	x21, x22, #0x8
  428db8:	cmp	x20, #0x1
  428dbc:	ldr	x0, [x21, x20, lsl #3]
  428dc0:	b.hi	428dd4 <wcrtomb@plt+0x23e84>  // b.pmore
  428dc4:	bl	404ae0 <free@plt>
  428dc8:	mov	x0, x22
  428dcc:	bl	404ae0 <free@plt>
  428dd0:	b	428c64 <wcrtomb@plt+0x23d14>
  428dd4:	sub	x20, x20, #0x1
  428dd8:	bl	404ae0 <free@plt>
  428ddc:	b	428db8 <wcrtomb@plt+0x23e68>
  428de0:	add	x20, x20, #0x1
  428de4:	add	x0, x22, x20, lsl #3
  428de8:	cmp	x2, x20
  428dec:	b.ne	428d9c <wcrtomb@plt+0x23e4c>  // b.any
  428df0:	str	xzr, [x0]
  428df4:	ldr	x0, [sp, #104]
  428df8:	stp	x22, x22, [x19, #112]
  428dfc:	stp	x2, x0, [x19, #128]
  428e00:	ldr	w0, [x19, #32]
  428e04:	tbz	w0, #27, 428eb8 <wcrtomb@plt+0x23f68>
  428e08:	add	x0, x21, #0x1
  428e0c:	bl	4045f0 <malloc@plt>
  428e10:	mov	x20, x0
  428e14:	cbz	x0, 428c64 <wcrtomb@plt+0x23d14>
  428e18:	mov	x2, x21
  428e1c:	mov	x1, x23
  428e20:	bl	404200 <memcpy@plt>
  428e24:	strb	wzr, [x20, x21]
  428e28:	mov	x0, x28
  428e2c:	bl	404870 <strdup@plt>
  428e30:	cbnz	x0, 428e80 <wcrtomb@plt+0x23f30>
  428e34:	mov	x0, x20
  428e38:	b	428dcc <wcrtomb@plt+0x23e7c>
  428e3c:	mov	x1, #0x8                   	// #8
  428e40:	mov	x0, #0x10                  	// #16
  428e44:	bl	4047a0 <calloc@plt>
  428e48:	cbz	x0, 428c64 <wcrtomb@plt+0x23d14>
  428e4c:	orr	w20, w20, #0x80000
  428e50:	mov	x1, #0x10                  	// #16
  428e54:	str	w20, [x19, #32]
  428e58:	stp	x0, x0, [x19, #112]
  428e5c:	stp	xzr, x1, [x19, #128]
  428e60:	b	428e00 <wcrtomb@plt+0x23eb0>
  428e64:	lsl	x2, x1, #1
  428e68:	str	x2, [x19, #136]
  428e6c:	lsl	x1, x1, #4
  428e70:	bl	404820 <realloc@plt>
  428e74:	cbz	x0, 428c64 <wcrtomb@plt+0x23d14>
  428e78:	stp	x0, x0, [x19, #112]
  428e7c:	b	428e00 <wcrtomb@plt+0x23eb0>
  428e80:	ldr	x2, [x19, #128]
  428e84:	ldr	x1, [x19, #112]
  428e88:	lsl	x3, x2, #3
  428e8c:	add	x2, x2, #0x2
  428e90:	str	x20, [x1, x3]
  428e94:	add	x1, x1, x3
  428e98:	str	x2, [x19, #128]
  428e9c:	str	x0, [x1, #8]
  428ea0:	ldr	x1, [x19, #112]
  428ea4:	ldr	x0, [x19, #128]
  428ea8:	add	x2, x0, #0x1
  428eac:	str	x2, [x19, #128]
  428eb0:	str	xzr, [x1, x0, lsl #3]
  428eb4:	b	428cec <wcrtomb@plt+0x23d9c>
  428eb8:	mov	x0, x28
  428ebc:	bl	404280 <strlen@plt>
  428ec0:	add	x1, x21, #0x2
  428ec4:	add	x0, x1, x0
  428ec8:	bl	4045f0 <malloc@plt>
  428ecc:	mov	x20, x0
  428ed0:	cbz	x0, 428c64 <wcrtomb@plt+0x23d14>
  428ed4:	mov	x2, x21
  428ed8:	mov	x1, x23
  428edc:	bl	404200 <memcpy@plt>
  428ee0:	mov	w0, #0x3d                  	// #61
  428ee4:	strb	w0, [x20, x21]
  428ee8:	add	x0, x21, #0x1
  428eec:	mov	x1, x28
  428ef0:	add	x0, x20, x0
  428ef4:	bl	404c40 <strcpy@plt>
  428ef8:	ldr	x1, [x19, #112]
  428efc:	ldr	x0, [x19, #128]
  428f00:	add	x2, x0, #0x1
  428f04:	str	x2, [x19, #128]
  428f08:	str	x20, [x1, x0, lsl #3]
  428f0c:	b	428ea0 <wcrtomb@plt+0x23f50>
  428f10:	cmp	w0, #0x3f
  428f14:	b.ne	428f4c <wcrtomb@plt+0x23ffc>  // b.any
  428f18:	ldr	x20, [x26]
  428f1c:	add	x22, x22, #0x1
  428f20:	subs	x20, x20, x22
  428f24:	b.ne	428f54 <wcrtomb@plt+0x24004>  // b.any
  428f28:	ldr	x20, [x19, #96]
  428f2c:	mov	w2, #0x5                   	// #5
  428f30:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  428f34:	mov	x0, #0x0                   	// #0
  428f38:	add	x1, x1, #0xb30
  428f3c:	bl	404d00 <dcgettext@plt>
  428f40:	mov	x2, x23
  428f44:	mov	w1, w21
  428f48:	blr	x20
  428f4c:	str	xzr, [sp, #136]
  428f50:	b	428cec <wcrtomb@plt+0x23d9c>
  428f54:	ldr	w0, [x19, #32]
  428f58:	mov	w4, #0x44                  	// #68
  428f5c:	mov	w5, #0x1                   	// #1
  428f60:	mov	w3, w20
  428f64:	and	w0, w0, w4
  428f68:	mov	w4, #0x700                 	// #1792
  428f6c:	mov	x2, x22
  428f70:	add	x1, sp, #0x90
  428f74:	movk	w4, #0x40, lsl #16
  428f78:	orr	w4, w0, w4
  428f7c:	mov	x0, x19
  428f80:	bl	42877c <wcrtomb@plt+0x2382c>
  428f84:	ldr	x5, [x19, #96]
  428f88:	cbnz	w0, 428fb4 <wcrtomb@plt+0x24064>
  428f8c:	ldr	x0, [sp, #152]
  428f90:	mov	x2, x23
  428f94:	mov	w1, w21
  428f98:	ldr	x3, [x0]
  428f9c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  428fa0:	add	x0, x0, #0xb4f
  428fa4:	blr	x5
  428fa8:	add	x0, sp, #0x90
  428fac:	bl	426d30 <wcrtomb@plt+0x21de0>
  428fb0:	b	428f4c <wcrtomb@plt+0x23ffc>
  428fb4:	mov	x4, x22
  428fb8:	mov	w3, w20
  428fbc:	mov	x2, x23
  428fc0:	mov	w1, w21
  428fc4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  428fc8:	add	x0, x0, #0xb58
  428fcc:	blr	x5
  428fd0:	b	428fa8 <wcrtomb@plt+0x24058>
  428fd4:	tbz	w0, #24, 428ffc <wcrtomb@plt+0x240ac>
  428fd8:	ldr	x20, [x19, #96]
  428fdc:	mov	w2, #0x5                   	// #5
  428fe0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  428fe4:	mov	x0, #0x0                   	// #0
  428fe8:	add	x1, x1, #0xb63
  428fec:	bl	404d00 <dcgettext@plt>
  428ff0:	mov	x2, x23
  428ff4:	mov	w1, w21
  428ff8:	blr	x20
  428ffc:	ldr	w0, [x19, #32]
  429000:	tbnz	w0, #23, 428f4c <wcrtomb@plt+0x23ffc>
  429004:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  429008:	add	x0, x0, #0x41a
  42900c:	bl	404870 <strdup@plt>
  429010:	str	x0, [sp, #136]
  429014:	cbnz	x0, 428cec <wcrtomb@plt+0x23d9c>
  429018:	b	428ad4 <wcrtomb@plt+0x23b84>
  42901c:	ldr	w0, [x19, #192]
  429020:	cmp	w0, #0x9
  429024:	b.ne	429030 <wcrtomb@plt+0x240e0>  // b.any
  429028:	ldr	x0, [x19, #200]
  42902c:	bl	404ae0 <free@plt>
  429030:	ldr	x0, [sp, #136]
  429034:	str	x0, [x19, #200]
  429038:	b	428cc0 <wcrtomb@plt+0x23d70>
  42903c:	ldr	x2, [x25]
  429040:	mov	x0, x19
  429044:	ldr	x1, [sp, #376]
  429048:	bl	426960 <wcrtomb@plt+0x21a10>
  42904c:	ldr	x0, [sp, #376]
  429050:	str	x0, [x25]
  429054:	ldr	x1, [sp, #136]
  429058:	mov	w5, #0xa                   	// #10
  42905c:	orr	w27, w27, w5
  429060:	str	w27, [x0, #16]
  429064:	str	x1, [x0, #24]
  429068:	b	428b04 <wcrtomb@plt+0x23bb4>
  42906c:	ldrb	w0, [x20]
  429070:	cbnz	w0, 4290b4 <wcrtomb@plt+0x24164>
  429074:	mov	x0, x20
  429078:	bl	404ae0 <free@plt>
  42907c:	add	x1, sp, #0x178
  429080:	mov	x0, x19
  429084:	bl	427098 <wcrtomb@plt+0x22148>
  429088:	mov	w20, w0
  42908c:	cbnz	w0, 428a9c <wcrtomb@plt+0x23b4c>
  429090:	ldr	x2, [x25]
  429094:	mov	x0, x19
  429098:	ldr	x1, [sp, #376]
  42909c:	bl	426960 <wcrtomb@plt+0x21a10>
  4290a0:	ldr	x0, [sp, #376]
  4290a4:	str	x0, [x25]
  4290a8:	mov	w1, #0x1                   	// #1
  4290ac:	str	w1, [x0, #16]
  4290b0:	b	428b04 <wcrtomb@plt+0x23bb4>
  4290b4:	mov	x0, x20
  4290b8:	bl	404280 <strlen@plt>
  4290bc:	ldr	x1, [x19, #32]
  4290c0:	mov	w3, w0
  4290c4:	mov	x2, x20
  4290c8:	mov	x0, x19
  4290cc:	and	x1, x1, #0xfffffff000
  4290d0:	mov	w5, #0x0                   	// #0
  4290d4:	ands	x1, x1, #0xffffff8000001fff
  4290d8:	mov	w4, #0x1644                	// #5700
  4290dc:	mov	w1, #0x644                 	// #1604
  4290e0:	csel	w4, w4, w1, ne  // ne = any
  4290e4:	add	x1, sp, #0x178
  4290e8:	bl	42877c <wcrtomb@plt+0x2382c>
  4290ec:	mov	w20, w0
  4290f0:	ldr	x0, [sp, #136]
  4290f4:	bl	404ae0 <free@plt>
  4290f8:	cbz	w20, 429114 <wcrtomb@plt+0x241c4>
  4290fc:	add	x1, sp, #0x178
  429100:	mov	x0, x19
  429104:	bl	426700 <wcrtomb@plt+0x217b0>
  429108:	add	x0, sp, #0x178
  42910c:	bl	426d30 <wcrtomb@plt+0x21de0>
  429110:	b	428a9c <wcrtomb@plt+0x23b4c>
  429114:	ldr	x2, [x25]
  429118:	mov	x0, x19
  42911c:	ldr	x1, [sp, #584]
  429120:	bl	426960 <wcrtomb@plt+0x21a10>
  429124:	str	xzr, [sp, #584]
  429128:	ldr	x0, [sp, #592]
  42912c:	str	x0, [x25]
  429130:	add	x0, sp, #0x178
  429134:	str	xzr, [sp, #592]
  429138:	bl	426d30 <wcrtomb@plt+0x21de0>
  42913c:	b	428b04 <wcrtomb@plt+0x23bb4>
  429140:	ldr	w0, [x19, #32]
  429144:	tbz	w0, #23, 42907c <wcrtomb@plt+0x2412c>
  429148:	add	x1, sp, #0x178
  42914c:	mov	x0, x19
  429150:	ldr	x21, [x26]
  429154:	bl	427098 <wcrtomb@plt+0x22148>
  429158:	mov	w20, w0
  42915c:	cbnz	w0, 428a9c <wcrtomb@plt+0x23b4c>
  429160:	ldr	x2, [x25]
  429164:	mov	x0, x19
  429168:	ldr	x1, [sp, #376]
  42916c:	sub	x24, x24, #0x1
  429170:	sub	x21, x21, x24
  429174:	bl	426960 <wcrtomb@plt+0x21a10>
  429178:	ldr	x22, [sp, #376]
  42917c:	str	x22, [x25]
  429180:	mov	w5, #0xa                   	// #10
  429184:	orr	w27, w27, w5
  429188:	add	x0, x21, #0x2
  42918c:	str	w27, [x22, #16]
  429190:	bl	4045f0 <malloc@plt>
  429194:	str	x0, [x22, #24]
  429198:	cbz	x0, 428ad4 <wcrtomb@plt+0x23b84>
  42919c:	add	x21, x21, #0x1
  4291a0:	mov	x1, x24
  4291a4:	mov	x2, x21
  4291a8:	bl	404200 <memcpy@plt>
  4291ac:	ldr	x0, [x22, #24]
  4291b0:	strb	wzr, [x0, x21]
  4291b4:	b	428b04 <wcrtomb@plt+0x23bb4>
  4291b8:	stp	x29, x30, [sp, #-304]!
  4291bc:	mov	x8, x4
  4291c0:	sub	x2, x2, #0x1
  4291c4:	mov	x29, sp
  4291c8:	stp	x19, x20, [sp, #16]
  4291cc:	add	x20, x1, #0x1
  4291d0:	mov	x19, x0
  4291d4:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  4291d8:	mov	x0, x20
  4291dc:	add	x4, x4, #0xae2
  4291e0:	mov	x1, #0x0                   	// #0
  4291e4:	stp	x21, x22, [sp, #32]
  4291e8:	mov	x21, x3
  4291ec:	mov	w22, w5
  4291f0:	add	x3, sp, #0x38
  4291f4:	bl	4264b8 <wcrtomb@plt+0x21568>
  4291f8:	cbz	w0, 429210 <wcrtomb@plt+0x242c0>
  4291fc:	mov	w1, #0x7                   	// #7
  429200:	mov	x0, x19
  429204:	bl	427a98 <wcrtomb@plt+0x22b48>
  429208:	mov	w20, #0x1                   	// #1
  42920c:	b	429294 <wcrtomb@plt+0x24344>
  429210:	ldr	x2, [sp, #56]
  429214:	add	x0, x20, x2
  429218:	str	x0, [x8]
  42921c:	ldr	w0, [x19, #36]
  429220:	tbz	w0, #3, 4292a8 <wcrtomb@plt+0x24358>
  429224:	mov	w3, w2
  429228:	add	x1, sp, #0x48
  42922c:	mov	x2, x20
  429230:	mov	x0, x19
  429234:	mov	w5, #0x1                   	// #1
  429238:	mov	w4, #0x700                 	// #1792
  42923c:	bl	42877c <wcrtomb@plt+0x2382c>
  429240:	cbz	w0, 42925c <wcrtomb@plt+0x2430c>
  429244:	add	x1, sp, #0x48
  429248:	mov	x0, x19
  42924c:	bl	426700 <wcrtomb@plt+0x217b0>
  429250:	add	x0, sp, #0x48
  429254:	bl	426d30 <wcrtomb@plt+0x21de0>
  429258:	b	429208 <wcrtomb@plt+0x242b8>
  42925c:	ldp	x4, x5, [x19, #152]
  429260:	mov	x1, x20
  429264:	ldr	x2, [sp, #56]
  429268:	add	x0, sp, #0x40
  42926c:	ldr	x3, [sp, #80]
  429270:	blr	x5
  429274:	mov	w20, w0
  429278:	add	x0, sp, #0x48
  42927c:	bl	426d30 <wcrtomb@plt+0x21de0>
  429280:	cmp	w20, #0x2
  429284:	b.ne	4292c4 <wcrtomb@plt+0x24374>  // b.any
  429288:	mov	x0, x19
  42928c:	bl	426e78 <wcrtomb@plt+0x21f28>
  429290:	mov	w20, w0
  429294:	mov	w0, w20
  429298:	ldp	x19, x20, [sp, #16]
  42929c:	ldp	x21, x22, [sp, #32]
  4292a0:	ldp	x29, x30, [sp], #304
  4292a4:	ret
  4292a8:	ldp	x4, x5, [x19, #152]
  4292ac:	mov	x1, x20
  4292b0:	add	x0, sp, #0x40
  4292b4:	mov	x3, #0x0                   	// #0
  4292b8:	blr	x5
  4292bc:	mov	w20, w0
  4292c0:	b	429280 <wcrtomb@plt+0x24330>
  4292c4:	cbz	w20, 4292f4 <wcrtomb@plt+0x243a4>
  4292c8:	cmp	w20, #0x9
  4292cc:	b.ne	4292ec <wcrtomb@plt+0x2439c>  // b.any
  4292d0:	ldr	w0, [x19, #192]
  4292d4:	cmp	w0, #0x9
  4292d8:	b.ne	4292e4 <wcrtomb@plt+0x24394>  // b.any
  4292dc:	ldr	x0, [x19, #200]
  4292e0:	bl	404ae0 <free@plt>
  4292e4:	ldr	x0, [sp, #64]
  4292e8:	str	x0, [x19, #200]
  4292ec:	mov	w1, w20
  4292f0:	b	429200 <wcrtomb@plt+0x242b0>
  4292f4:	ldr	x20, [sp, #64]
  4292f8:	cbz	x20, 429350 <wcrtomb@plt+0x24400>
  4292fc:	tbz	w22, #2, 429340 <wcrtomb@plt+0x243f0>
  429300:	add	x1, sp, #0x48
  429304:	mov	x0, x19
  429308:	bl	427098 <wcrtomb@plt+0x22148>
  42930c:	mov	w20, w0
  429310:	cbnz	w0, 429208 <wcrtomb@plt+0x242b8>
  429314:	ldr	x2, [x21]
  429318:	mov	x0, x19
  42931c:	ldr	x1, [sp, #72]
  429320:	bl	426960 <wcrtomb@plt+0x21a10>
  429324:	ldp	x1, x0, [sp, #64]
  429328:	str	x0, [x21]
  42932c:	mov	w5, #0xa                   	// #10
  429330:	orr	w22, w22, w5
  429334:	str	w22, [x0, #16]
  429338:	str	x1, [x0, #24]
  42933c:	b	429294 <wcrtomb@plt+0x24344>
  429340:	ldrb	w0, [x20]
  429344:	cbnz	w0, 429388 <wcrtomb@plt+0x24438>
  429348:	mov	x0, x20
  42934c:	bl	404ae0 <free@plt>
  429350:	add	x1, sp, #0x48
  429354:	mov	x0, x19
  429358:	bl	427098 <wcrtomb@plt+0x22148>
  42935c:	mov	w20, w0
  429360:	cbnz	w0, 429208 <wcrtomb@plt+0x242b8>
  429364:	ldr	x2, [x21]
  429368:	mov	x0, x19
  42936c:	ldr	x1, [sp, #72]
  429370:	bl	426960 <wcrtomb@plt+0x21a10>
  429374:	ldr	x0, [sp, #72]
  429378:	str	x0, [x21]
  42937c:	mov	w1, #0x1                   	// #1
  429380:	str	w1, [x0, #16]
  429384:	b	429294 <wcrtomb@plt+0x24344>
  429388:	mov	x0, x20
  42938c:	bl	404280 <strlen@plt>
  429390:	ldr	x1, [x19, #32]
  429394:	mov	w3, w0
  429398:	mov	x2, x20
  42939c:	mov	x0, x19
  4293a0:	and	x1, x1, #0xfffffff000
  4293a4:	mov	w5, #0x0                   	// #0
  4293a8:	ands	x1, x1, #0xffffff8000001fff
  4293ac:	mov	w4, #0x1744                	// #5956
  4293b0:	mov	w1, #0x744                 	// #1860
  4293b4:	csel	w4, w4, w1, ne  // ne = any
  4293b8:	add	x1, sp, #0x48
  4293bc:	bl	42877c <wcrtomb@plt+0x2382c>
  4293c0:	mov	w20, w0
  4293c4:	ldr	x0, [sp, #64]
  4293c8:	bl	404ae0 <free@plt>
  4293cc:	cbnz	w20, 429244 <wcrtomb@plt+0x242f4>
  4293d0:	ldr	x2, [x21]
  4293d4:	mov	x0, x19
  4293d8:	ldr	x1, [sp, #280]
  4293dc:	bl	426960 <wcrtomb@plt+0x21a10>
  4293e0:	ldr	x0, [sp, #288]
  4293e4:	str	x0, [x21]
  4293e8:	add	x0, sp, #0x48
  4293ec:	stp	xzr, xzr, [sp, #280]
  4293f0:	bl	426d30 <wcrtomb@plt+0x21de0>
  4293f4:	b	429294 <wcrtomb@plt+0x24344>
  4293f8:	stp	x29, x30, [sp, #-32]!
  4293fc:	mov	x29, sp
  429400:	stp	x19, x20, [sp, #16]
  429404:	mov	x19, x2
  429408:	cbnz	x0, 42948c <wcrtomb@plt+0x2453c>
  42940c:	mov	w2, w3
  429410:	tbnz	w2, #29, 429428 <wcrtomb@plt+0x244d8>
  429414:	mov	w1, #0x3                   	// #3
  429418:	mov	x0, x19
  42941c:	ldp	x19, x20, [sp, #16]
  429420:	ldp	x29, x30, [sp], #32
  429424:	b	427a98 <wcrtomb@plt+0x22b48>
  429428:	ldr	x0, [x19, #208]
  42942c:	cbz	x0, 429440 <wcrtomb@plt+0x244f0>
  429430:	mov	x0, x19
  429434:	ldp	x19, x20, [sp, #16]
  429438:	ldp	x29, x30, [sp], #32
  42943c:	b	428508 <wcrtomb@plt+0x235b8>
  429440:	ldp	x2, x1, [x19, #176]
  429444:	ldr	w0, [x19, #32]
  429448:	tst	x0, #0x1000
  42944c:	cinc	x20, x1, eq  // eq = none
  429450:	cmp	x2, x1
  429454:	b.ne	429460 <wcrtomb@plt+0x24510>  // b.any
  429458:	mov	w1, #0x6                   	// #6
  42945c:	b	429418 <wcrtomb@plt+0x244c8>
  429460:	orr	w0, w0, #0x8
  429464:	str	w0, [x19, #32]
  429468:	mov	x0, x19
  42946c:	bl	426cec <wcrtomb@plt+0x21d9c>
  429470:	mov	x1, x20
  429474:	mov	x0, x19
  429478:	bl	4282d4 <wcrtomb@plt+0x23384>
  42947c:	cbz	w0, 429430 <wcrtomb@plt+0x244e0>
  429480:	ldp	x19, x20, [sp, #16]
  429484:	ldp	x29, x30, [sp], #32
  429488:	ret
  42948c:	mov	x2, x1
  429490:	mov	x1, x0
  429494:	mov	x0, x19
  429498:	bl	427ac8 <wcrtomb@plt+0x22b78>
  42949c:	cbnz	w0, 429480 <wcrtomb@plt+0x24530>
  4294a0:	mov	x20, #0x0                   	// #0
  4294a4:	str	wzr, [x19, #224]
  4294a8:	b	429470 <wcrtomb@plt+0x24520>
  4294ac:	stp	x29, x30, [sp, #-48]!
  4294b0:	mov	x29, sp
  4294b4:	stp	x19, x20, [sp, #16]
  4294b8:	mov	x19, x0
  4294bc:	mov	x20, x1
  4294c0:	str	x21, [sp, #32]
  4294c4:	mov	w21, w2
  4294c8:	cbz	x0, 4294f0 <wcrtomb@plt+0x245a0>
  4294cc:	bl	404280 <strlen@plt>
  4294d0:	mov	x1, x0
  4294d4:	mov	w3, w21
  4294d8:	mov	x2, x20
  4294dc:	mov	x0, x19
  4294e0:	ldp	x19, x20, [sp, #16]
  4294e4:	ldr	x21, [sp, #32]
  4294e8:	ldp	x29, x30, [sp], #48
  4294ec:	b	4293f8 <wcrtomb@plt+0x244a8>
  4294f0:	mov	x1, #0x0                   	// #0
  4294f4:	b	4294d4 <wcrtomb@plt+0x24584>
  4294f8:	mov	x12, #0x1030                	// #4144
  4294fc:	sub	sp, sp, x12
  429500:	cmn	w0, #0x64
  429504:	stp	x29, x30, [sp]
  429508:	mov	x29, sp
  42950c:	stp	x19, x20, [sp, #16]
  429510:	stp	x21, x22, [sp, #32]
  429514:	mov	x22, x1
  429518:	stp	x23, x24, [sp, #48]
  42951c:	mov	x23, x2
  429520:	mov	x24, x3
  429524:	stp	x25, x26, [sp, #64]
  429528:	mov	x25, x4
  42952c:	mov	w26, w5
  429530:	stp	x27, x28, [sp, #80]
  429534:	b.eq	429548 <wcrtomb@plt+0x245f8>  // b.none
  429538:	mov	w21, w0
  42953c:	ldrb	w0, [x1]
  429540:	cmp	w0, #0x2f
  429544:	b.ne	42958c <wcrtomb@plt+0x2463c>  // b.any
  429548:	mov	w4, w26
  42954c:	mov	x3, x25
  429550:	mov	x2, x24
  429554:	mov	x1, x23
  429558:	mov	x0, x22
  42955c:	bl	4046d0 <setxattr@plt>
  429560:	mov	w19, w0
  429564:	mov	w0, w19
  429568:	mov	x12, #0x1030                	// #4144
  42956c:	ldp	x29, x30, [sp]
  429570:	ldp	x19, x20, [sp, #16]
  429574:	ldp	x21, x22, [sp, #32]
  429578:	ldp	x23, x24, [sp, #48]
  42957c:	ldp	x25, x26, [sp, #64]
  429580:	ldp	x27, x28, [sp, #80]
  429584:	add	sp, sp, x12
  429588:	ret
  42958c:	add	x20, sp, #0x70
  429590:	mov	x2, x1
  429594:	mov	x0, x20
  429598:	mov	w1, w21
  42959c:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  4295a0:	mov	x27, x0
  4295a4:	cbz	x0, 429618 <wcrtomb@plt+0x246c8>
  4295a8:	mov	x1, x23
  4295ac:	mov	w4, w26
  4295b0:	mov	x3, x25
  4295b4:	mov	x2, x24
  4295b8:	bl	4046d0 <setxattr@plt>
  4295bc:	mov	w19, w0
  4295c0:	bl	404e10 <__errno_location@plt>
  4295c4:	ldr	w1, [x0]
  4295c8:	mov	x28, x0
  4295cc:	cmp	x27, x20
  4295d0:	b.eq	4295e4 <wcrtomb@plt+0x24694>  // b.none
  4295d4:	mov	x0, x27
  4295d8:	str	w1, [sp, #108]
  4295dc:	bl	404ae0 <free@plt>
  4295e0:	ldr	w1, [sp, #108]
  4295e4:	cmn	w19, #0x1
  4295e8:	b.ne	429564 <wcrtomb@plt+0x24614>  // b.any
  4295ec:	cmp	w1, #0x26
  4295f0:	b.ls	429604 <wcrtomb@plt+0x246b4>  // b.plast
  4295f4:	cmp	w1, #0x5f
  4295f8:	b.eq	429618 <wcrtomb@plt+0x246c8>  // b.none
  4295fc:	str	w1, [x28]
  429600:	b	429564 <wcrtomb@plt+0x24614>
  429604:	mov	x0, #0x2006                	// #8198
  429608:	movk	x0, #0x10, lsl #16
  42960c:	movk	x0, #0x40, lsl #32
  429610:	lsr	x0, x0, x1
  429614:	tbz	w0, #0, 4295fc <wcrtomb@plt+0x246ac>
  429618:	mov	x0, x20
  42961c:	bl	436488 <argp_usage@@Base+0x8fa8>
  429620:	cbz	w0, 429630 <wcrtomb@plt+0x246e0>
  429624:	bl	404e10 <__errno_location@plt>
  429628:	ldr	w0, [x0]
  42962c:	bl	431c3c <argp_usage@@Base+0x475c>
  429630:	tbnz	w21, #31, 42965c <wcrtomb@plt+0x2470c>
  429634:	ldr	w0, [sp, #112]
  429638:	cmp	w0, w21
  42963c:	b.ne	42965c <wcrtomb@plt+0x2470c>  // b.any
  429640:	mov	x0, x20
  429644:	bl	4364f8 <argp_usage@@Base+0x9018>
  429648:	bl	404e10 <__errno_location@plt>
  42964c:	mov	w1, #0x9                   	// #9
  429650:	str	w1, [x0]
  429654:	mov	w19, #0xffffffff            	// #-1
  429658:	b	429564 <wcrtomb@plt+0x24614>
  42965c:	mov	w0, w21
  429660:	bl	4042f0 <fchdir@plt>
  429664:	mov	w21, w0
  429668:	cbz	w0, 429688 <wcrtomb@plt+0x24738>
  42966c:	bl	404e10 <__errno_location@plt>
  429670:	mov	x19, x0
  429674:	mov	x0, x20
  429678:	ldr	w21, [x19]
  42967c:	bl	4364f8 <argp_usage@@Base+0x9018>
  429680:	str	w21, [x19]
  429684:	b	429654 <wcrtomb@plt+0x24704>
  429688:	mov	w4, w26
  42968c:	mov	x3, x25
  429690:	mov	x2, x24
  429694:	mov	x1, x23
  429698:	mov	x0, x22
  42969c:	bl	4046d0 <setxattr@plt>
  4296a0:	mov	w19, w0
  4296a4:	cmn	w0, #0x1
  4296a8:	b.ne	4296b4 <wcrtomb@plt+0x24764>  // b.any
  4296ac:	bl	404e10 <__errno_location@plt>
  4296b0:	ldr	w21, [x0]
  4296b4:	mov	x0, x20
  4296b8:	bl	4364e0 <argp_usage@@Base+0x9000>
  4296bc:	cbz	w0, 4296cc <wcrtomb@plt+0x2477c>
  4296c0:	bl	404e10 <__errno_location@plt>
  4296c4:	ldr	w0, [x0]
  4296c8:	bl	431c7c <argp_usage@@Base+0x479c>
  4296cc:	mov	x0, x20
  4296d0:	bl	4364f8 <argp_usage@@Base+0x9018>
  4296d4:	cbz	w21, 429564 <wcrtomb@plt+0x24614>
  4296d8:	bl	404e10 <__errno_location@plt>
  4296dc:	str	w21, [x0]
  4296e0:	b	429564 <wcrtomb@plt+0x24614>
  4296e4:	mov	x12, #0x1030                	// #4144
  4296e8:	sub	sp, sp, x12
  4296ec:	cmn	w0, #0x64
  4296f0:	stp	x29, x30, [sp]
  4296f4:	mov	x29, sp
  4296f8:	stp	x19, x20, [sp, #16]
  4296fc:	stp	x21, x22, [sp, #32]
  429700:	mov	x22, x1
  429704:	stp	x23, x24, [sp, #48]
  429708:	mov	x23, x2
  42970c:	mov	x24, x3
  429710:	stp	x25, x26, [sp, #64]
  429714:	mov	x25, x4
  429718:	mov	w26, w5
  42971c:	stp	x27, x28, [sp, #80]
  429720:	b.eq	429734 <wcrtomb@plt+0x247e4>  // b.none
  429724:	mov	w21, w0
  429728:	ldrb	w0, [x1]
  42972c:	cmp	w0, #0x2f
  429730:	b.ne	429778 <wcrtomb@plt+0x24828>  // b.any
  429734:	mov	w4, w26
  429738:	mov	x3, x25
  42973c:	mov	x2, x24
  429740:	mov	x1, x23
  429744:	mov	x0, x22
  429748:	bl	4047b0 <lsetxattr@plt>
  42974c:	mov	w19, w0
  429750:	mov	w0, w19
  429754:	mov	x12, #0x1030                	// #4144
  429758:	ldp	x29, x30, [sp]
  42975c:	ldp	x19, x20, [sp, #16]
  429760:	ldp	x21, x22, [sp, #32]
  429764:	ldp	x23, x24, [sp, #48]
  429768:	ldp	x25, x26, [sp, #64]
  42976c:	ldp	x27, x28, [sp, #80]
  429770:	add	sp, sp, x12
  429774:	ret
  429778:	add	x20, sp, #0x70
  42977c:	mov	x2, x1
  429780:	mov	x0, x20
  429784:	mov	w1, w21
  429788:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  42978c:	mov	x27, x0
  429790:	cbz	x0, 429804 <wcrtomb@plt+0x248b4>
  429794:	mov	x1, x23
  429798:	mov	w4, w26
  42979c:	mov	x3, x25
  4297a0:	mov	x2, x24
  4297a4:	bl	4047b0 <lsetxattr@plt>
  4297a8:	mov	w19, w0
  4297ac:	bl	404e10 <__errno_location@plt>
  4297b0:	ldr	w1, [x0]
  4297b4:	mov	x28, x0
  4297b8:	cmp	x27, x20
  4297bc:	b.eq	4297d0 <wcrtomb@plt+0x24880>  // b.none
  4297c0:	mov	x0, x27
  4297c4:	str	w1, [sp, #108]
  4297c8:	bl	404ae0 <free@plt>
  4297cc:	ldr	w1, [sp, #108]
  4297d0:	cmn	w19, #0x1
  4297d4:	b.ne	429750 <wcrtomb@plt+0x24800>  // b.any
  4297d8:	cmp	w1, #0x26
  4297dc:	b.ls	4297f0 <wcrtomb@plt+0x248a0>  // b.plast
  4297e0:	cmp	w1, #0x5f
  4297e4:	b.eq	429804 <wcrtomb@plt+0x248b4>  // b.none
  4297e8:	str	w1, [x28]
  4297ec:	b	429750 <wcrtomb@plt+0x24800>
  4297f0:	mov	x0, #0x2006                	// #8198
  4297f4:	movk	x0, #0x10, lsl #16
  4297f8:	movk	x0, #0x40, lsl #32
  4297fc:	lsr	x0, x0, x1
  429800:	tbz	w0, #0, 4297e8 <wcrtomb@plt+0x24898>
  429804:	mov	x0, x20
  429808:	bl	436488 <argp_usage@@Base+0x8fa8>
  42980c:	cbz	w0, 42981c <wcrtomb@plt+0x248cc>
  429810:	bl	404e10 <__errno_location@plt>
  429814:	ldr	w0, [x0]
  429818:	bl	431c3c <argp_usage@@Base+0x475c>
  42981c:	tbnz	w21, #31, 429848 <wcrtomb@plt+0x248f8>
  429820:	ldr	w0, [sp, #112]
  429824:	cmp	w0, w21
  429828:	b.ne	429848 <wcrtomb@plt+0x248f8>  // b.any
  42982c:	mov	x0, x20
  429830:	bl	4364f8 <argp_usage@@Base+0x9018>
  429834:	bl	404e10 <__errno_location@plt>
  429838:	mov	w1, #0x9                   	// #9
  42983c:	str	w1, [x0]
  429840:	mov	w19, #0xffffffff            	// #-1
  429844:	b	429750 <wcrtomb@plt+0x24800>
  429848:	mov	w0, w21
  42984c:	bl	4042f0 <fchdir@plt>
  429850:	mov	w21, w0
  429854:	cbz	w0, 429874 <wcrtomb@plt+0x24924>
  429858:	bl	404e10 <__errno_location@plt>
  42985c:	mov	x19, x0
  429860:	mov	x0, x20
  429864:	ldr	w21, [x19]
  429868:	bl	4364f8 <argp_usage@@Base+0x9018>
  42986c:	str	w21, [x19]
  429870:	b	429840 <wcrtomb@plt+0x248f0>
  429874:	mov	w4, w26
  429878:	mov	x3, x25
  42987c:	mov	x2, x24
  429880:	mov	x1, x23
  429884:	mov	x0, x22
  429888:	bl	4047b0 <lsetxattr@plt>
  42988c:	mov	w19, w0
  429890:	cmn	w0, #0x1
  429894:	b.ne	4298a0 <wcrtomb@plt+0x24950>  // b.any
  429898:	bl	404e10 <__errno_location@plt>
  42989c:	ldr	w21, [x0]
  4298a0:	mov	x0, x20
  4298a4:	bl	4364e0 <argp_usage@@Base+0x9000>
  4298a8:	cbz	w0, 4298b8 <wcrtomb@plt+0x24968>
  4298ac:	bl	404e10 <__errno_location@plt>
  4298b0:	ldr	w0, [x0]
  4298b4:	bl	431c7c <argp_usage@@Base+0x479c>
  4298b8:	mov	x0, x20
  4298bc:	bl	4364f8 <argp_usage@@Base+0x9018>
  4298c0:	cbz	w21, 429750 <wcrtomb@plt+0x24800>
  4298c4:	bl	404e10 <__errno_location@plt>
  4298c8:	str	w21, [x0]
  4298cc:	b	429750 <wcrtomb@plt+0x24800>
  4298d0:	mov	x12, #0x1020                	// #4128
  4298d4:	sub	sp, sp, x12
  4298d8:	cmn	w0, #0x64
  4298dc:	stp	x29, x30, [sp]
  4298e0:	mov	x29, sp
  4298e4:	stp	x19, x20, [sp, #16]
  4298e8:	stp	x21, x22, [sp, #32]
  4298ec:	mov	x22, x1
  4298f0:	stp	x23, x24, [sp, #48]
  4298f4:	mov	x23, x2
  4298f8:	mov	x24, x3
  4298fc:	stp	x25, x26, [sp, #64]
  429900:	mov	x25, x4
  429904:	stp	x27, x28, [sp, #80]
  429908:	b.eq	42991c <wcrtomb@plt+0x249cc>  // b.none
  42990c:	mov	w21, w0
  429910:	ldrb	w0, [x1]
  429914:	cmp	w0, #0x2f
  429918:	b.ne	42995c <wcrtomb@plt+0x24a0c>  // b.any
  42991c:	mov	x3, x25
  429920:	mov	x2, x24
  429924:	mov	x1, x23
  429928:	mov	x0, x22
  42992c:	bl	4049e0 <getxattr@plt>
  429930:	mov	x19, x0
  429934:	mov	x0, x19
  429938:	mov	x12, #0x1020                	// #4128
  42993c:	ldp	x29, x30, [sp]
  429940:	ldp	x19, x20, [sp, #16]
  429944:	ldp	x21, x22, [sp, #32]
  429948:	ldp	x23, x24, [sp, #48]
  42994c:	ldp	x25, x26, [sp, #64]
  429950:	ldp	x27, x28, [sp, #80]
  429954:	add	sp, sp, x12
  429958:	ret
  42995c:	add	x20, sp, #0x60
  429960:	mov	x2, x1
  429964:	mov	x0, x20
  429968:	mov	w1, w21
  42996c:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  429970:	mov	x26, x0
  429974:	cbz	x0, 4299dc <wcrtomb@plt+0x24a8c>
  429978:	mov	x3, x25
  42997c:	mov	x2, x24
  429980:	mov	x1, x23
  429984:	bl	4049e0 <getxattr@plt>
  429988:	mov	x19, x0
  42998c:	bl	404e10 <__errno_location@plt>
  429990:	ldr	w28, [x0]
  429994:	mov	x27, x0
  429998:	cmp	x26, x20
  42999c:	b.eq	4299a8 <wcrtomb@plt+0x24a58>  // b.none
  4299a0:	mov	x0, x26
  4299a4:	bl	404ae0 <free@plt>
  4299a8:	cmn	x19, #0x1
  4299ac:	b.ne	429934 <wcrtomb@plt+0x249e4>  // b.any
  4299b0:	cmp	w28, #0x26
  4299b4:	b.ls	4299c8 <wcrtomb@plt+0x24a78>  // b.plast
  4299b8:	cmp	w28, #0x5f
  4299bc:	b.eq	4299dc <wcrtomb@plt+0x24a8c>  // b.none
  4299c0:	str	w28, [x27]
  4299c4:	b	429934 <wcrtomb@plt+0x249e4>
  4299c8:	mov	x0, #0x2006                	// #8198
  4299cc:	movk	x0, #0x10, lsl #16
  4299d0:	movk	x0, #0x40, lsl #32
  4299d4:	lsr	x0, x0, x28
  4299d8:	tbz	w0, #0, 4299c0 <wcrtomb@plt+0x24a70>
  4299dc:	mov	x0, x20
  4299e0:	bl	436488 <argp_usage@@Base+0x8fa8>
  4299e4:	cbz	w0, 4299f4 <wcrtomb@plt+0x24aa4>
  4299e8:	bl	404e10 <__errno_location@plt>
  4299ec:	ldr	w0, [x0]
  4299f0:	bl	431c3c <argp_usage@@Base+0x475c>
  4299f4:	tbnz	w21, #31, 429a20 <wcrtomb@plt+0x24ad0>
  4299f8:	ldr	w0, [sp, #96]
  4299fc:	cmp	w0, w21
  429a00:	b.ne	429a20 <wcrtomb@plt+0x24ad0>  // b.any
  429a04:	mov	x0, x20
  429a08:	bl	4364f8 <argp_usage@@Base+0x9018>
  429a0c:	bl	404e10 <__errno_location@plt>
  429a10:	mov	w1, #0x9                   	// #9
  429a14:	str	w1, [x0]
  429a18:	mov	x19, #0xffffffffffffffff    	// #-1
  429a1c:	b	429934 <wcrtomb@plt+0x249e4>
  429a20:	mov	w0, w21
  429a24:	bl	4042f0 <fchdir@plt>
  429a28:	mov	w21, w0
  429a2c:	cbz	w0, 429a4c <wcrtomb@plt+0x24afc>
  429a30:	bl	404e10 <__errno_location@plt>
  429a34:	mov	x19, x0
  429a38:	mov	x0, x20
  429a3c:	ldr	w21, [x19]
  429a40:	bl	4364f8 <argp_usage@@Base+0x9018>
  429a44:	str	w21, [x19]
  429a48:	b	429a18 <wcrtomb@plt+0x24ac8>
  429a4c:	mov	x3, x25
  429a50:	mov	x2, x24
  429a54:	mov	x1, x23
  429a58:	mov	x0, x22
  429a5c:	bl	4049e0 <getxattr@plt>
  429a60:	mov	x19, x0
  429a64:	cmn	x0, #0x1
  429a68:	b.ne	429a74 <wcrtomb@plt+0x24b24>  // b.any
  429a6c:	bl	404e10 <__errno_location@plt>
  429a70:	ldr	w21, [x0]
  429a74:	mov	x0, x20
  429a78:	bl	4364e0 <argp_usage@@Base+0x9000>
  429a7c:	cbz	w0, 429a8c <wcrtomb@plt+0x24b3c>
  429a80:	bl	404e10 <__errno_location@plt>
  429a84:	ldr	w0, [x0]
  429a88:	bl	431c7c <argp_usage@@Base+0x479c>
  429a8c:	mov	x0, x20
  429a90:	bl	4364f8 <argp_usage@@Base+0x9018>
  429a94:	cbz	w21, 429934 <wcrtomb@plt+0x249e4>
  429a98:	bl	404e10 <__errno_location@plt>
  429a9c:	str	w21, [x0]
  429aa0:	b	429934 <wcrtomb@plt+0x249e4>
  429aa4:	mov	x12, #0x1020                	// #4128
  429aa8:	sub	sp, sp, x12
  429aac:	cmn	w0, #0x64
  429ab0:	stp	x29, x30, [sp]
  429ab4:	mov	x29, sp
  429ab8:	stp	x19, x20, [sp, #16]
  429abc:	stp	x21, x22, [sp, #32]
  429ac0:	mov	x22, x1
  429ac4:	stp	x23, x24, [sp, #48]
  429ac8:	mov	x23, x2
  429acc:	mov	x24, x3
  429ad0:	stp	x25, x26, [sp, #64]
  429ad4:	mov	x25, x4
  429ad8:	stp	x27, x28, [sp, #80]
  429adc:	b.eq	429af0 <wcrtomb@plt+0x24ba0>  // b.none
  429ae0:	mov	w21, w0
  429ae4:	ldrb	w0, [x1]
  429ae8:	cmp	w0, #0x2f
  429aec:	b.ne	429b30 <wcrtomb@plt+0x24be0>  // b.any
  429af0:	mov	x3, x25
  429af4:	mov	x2, x24
  429af8:	mov	x1, x23
  429afc:	mov	x0, x22
  429b00:	bl	404860 <lgetxattr@plt>
  429b04:	mov	x19, x0
  429b08:	mov	x0, x19
  429b0c:	mov	x12, #0x1020                	// #4128
  429b10:	ldp	x29, x30, [sp]
  429b14:	ldp	x19, x20, [sp, #16]
  429b18:	ldp	x21, x22, [sp, #32]
  429b1c:	ldp	x23, x24, [sp, #48]
  429b20:	ldp	x25, x26, [sp, #64]
  429b24:	ldp	x27, x28, [sp, #80]
  429b28:	add	sp, sp, x12
  429b2c:	ret
  429b30:	add	x20, sp, #0x60
  429b34:	mov	x2, x1
  429b38:	mov	x0, x20
  429b3c:	mov	w1, w21
  429b40:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  429b44:	mov	x26, x0
  429b48:	cbz	x0, 429bb0 <wcrtomb@plt+0x24c60>
  429b4c:	mov	x3, x25
  429b50:	mov	x2, x24
  429b54:	mov	x1, x23
  429b58:	bl	404860 <lgetxattr@plt>
  429b5c:	mov	x19, x0
  429b60:	bl	404e10 <__errno_location@plt>
  429b64:	ldr	w28, [x0]
  429b68:	mov	x27, x0
  429b6c:	cmp	x26, x20
  429b70:	b.eq	429b7c <wcrtomb@plt+0x24c2c>  // b.none
  429b74:	mov	x0, x26
  429b78:	bl	404ae0 <free@plt>
  429b7c:	cmn	x19, #0x1
  429b80:	b.ne	429b08 <wcrtomb@plt+0x24bb8>  // b.any
  429b84:	cmp	w28, #0x26
  429b88:	b.ls	429b9c <wcrtomb@plt+0x24c4c>  // b.plast
  429b8c:	cmp	w28, #0x5f
  429b90:	b.eq	429bb0 <wcrtomb@plt+0x24c60>  // b.none
  429b94:	str	w28, [x27]
  429b98:	b	429b08 <wcrtomb@plt+0x24bb8>
  429b9c:	mov	x0, #0x2006                	// #8198
  429ba0:	movk	x0, #0x10, lsl #16
  429ba4:	movk	x0, #0x40, lsl #32
  429ba8:	lsr	x0, x0, x28
  429bac:	tbz	w0, #0, 429b94 <wcrtomb@plt+0x24c44>
  429bb0:	mov	x0, x20
  429bb4:	bl	436488 <argp_usage@@Base+0x8fa8>
  429bb8:	cbz	w0, 429bc8 <wcrtomb@plt+0x24c78>
  429bbc:	bl	404e10 <__errno_location@plt>
  429bc0:	ldr	w0, [x0]
  429bc4:	bl	431c3c <argp_usage@@Base+0x475c>
  429bc8:	tbnz	w21, #31, 429bf4 <wcrtomb@plt+0x24ca4>
  429bcc:	ldr	w0, [sp, #96]
  429bd0:	cmp	w0, w21
  429bd4:	b.ne	429bf4 <wcrtomb@plt+0x24ca4>  // b.any
  429bd8:	mov	x0, x20
  429bdc:	bl	4364f8 <argp_usage@@Base+0x9018>
  429be0:	bl	404e10 <__errno_location@plt>
  429be4:	mov	w1, #0x9                   	// #9
  429be8:	str	w1, [x0]
  429bec:	mov	x19, #0xffffffffffffffff    	// #-1
  429bf0:	b	429b08 <wcrtomb@plt+0x24bb8>
  429bf4:	mov	w0, w21
  429bf8:	bl	4042f0 <fchdir@plt>
  429bfc:	mov	w21, w0
  429c00:	cbz	w0, 429c20 <wcrtomb@plt+0x24cd0>
  429c04:	bl	404e10 <__errno_location@plt>
  429c08:	mov	x19, x0
  429c0c:	mov	x0, x20
  429c10:	ldr	w21, [x19]
  429c14:	bl	4364f8 <argp_usage@@Base+0x9018>
  429c18:	str	w21, [x19]
  429c1c:	b	429bec <wcrtomb@plt+0x24c9c>
  429c20:	mov	x3, x25
  429c24:	mov	x2, x24
  429c28:	mov	x1, x23
  429c2c:	mov	x0, x22
  429c30:	bl	404860 <lgetxattr@plt>
  429c34:	mov	x19, x0
  429c38:	cmn	x0, #0x1
  429c3c:	b.ne	429c48 <wcrtomb@plt+0x24cf8>  // b.any
  429c40:	bl	404e10 <__errno_location@plt>
  429c44:	ldr	w21, [x0]
  429c48:	mov	x0, x20
  429c4c:	bl	4364e0 <argp_usage@@Base+0x9000>
  429c50:	cbz	w0, 429c60 <wcrtomb@plt+0x24d10>
  429c54:	bl	404e10 <__errno_location@plt>
  429c58:	ldr	w0, [x0]
  429c5c:	bl	431c7c <argp_usage@@Base+0x479c>
  429c60:	mov	x0, x20
  429c64:	bl	4364f8 <argp_usage@@Base+0x9018>
  429c68:	cbz	w21, 429b08 <wcrtomb@plt+0x24bb8>
  429c6c:	bl	404e10 <__errno_location@plt>
  429c70:	str	w21, [x0]
  429c74:	b	429b08 <wcrtomb@plt+0x24bb8>
  429c78:	mov	x12, #0x1020                	// #4128
  429c7c:	sub	sp, sp, x12
  429c80:	cmn	w0, #0x64
  429c84:	stp	x29, x30, [sp]
  429c88:	mov	x29, sp
  429c8c:	stp	x19, x20, [sp, #16]
  429c90:	stp	x21, x22, [sp, #32]
  429c94:	mov	x22, x1
  429c98:	stp	x23, x24, [sp, #48]
  429c9c:	mov	x23, x2
  429ca0:	mov	x24, x3
  429ca4:	stp	x25, x26, [sp, #64]
  429ca8:	str	x27, [sp, #80]
  429cac:	b.eq	429cc0 <wcrtomb@plt+0x24d70>  // b.none
  429cb0:	mov	w21, w0
  429cb4:	ldrb	w0, [x1]
  429cb8:	cmp	w0, #0x2f
  429cbc:	b.ne	429cfc <wcrtomb@plt+0x24dac>  // b.any
  429cc0:	mov	x2, x24
  429cc4:	mov	x1, x23
  429cc8:	mov	x0, x22
  429ccc:	bl	4047c0 <listxattr@plt>
  429cd0:	mov	x19, x0
  429cd4:	mov	x0, x19
  429cd8:	mov	x12, #0x1020                	// #4128
  429cdc:	ldp	x29, x30, [sp]
  429ce0:	ldp	x19, x20, [sp, #16]
  429ce4:	ldp	x21, x22, [sp, #32]
  429ce8:	ldp	x23, x24, [sp, #48]
  429cec:	ldp	x25, x26, [sp, #64]
  429cf0:	ldr	x27, [sp, #80]
  429cf4:	add	sp, sp, x12
  429cf8:	ret
  429cfc:	add	x20, sp, #0x60
  429d00:	mov	x2, x1
  429d04:	mov	x0, x20
  429d08:	mov	w1, w21
  429d0c:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  429d10:	mov	x25, x0
  429d14:	cbz	x0, 429d78 <wcrtomb@plt+0x24e28>
  429d18:	mov	x2, x24
  429d1c:	mov	x1, x23
  429d20:	bl	4047c0 <listxattr@plt>
  429d24:	mov	x19, x0
  429d28:	bl	404e10 <__errno_location@plt>
  429d2c:	ldr	w27, [x0]
  429d30:	mov	x26, x0
  429d34:	cmp	x25, x20
  429d38:	b.eq	429d44 <wcrtomb@plt+0x24df4>  // b.none
  429d3c:	mov	x0, x25
  429d40:	bl	404ae0 <free@plt>
  429d44:	cmn	x19, #0x1
  429d48:	b.ne	429cd4 <wcrtomb@plt+0x24d84>  // b.any
  429d4c:	cmp	w27, #0x26
  429d50:	b.ls	429d64 <wcrtomb@plt+0x24e14>  // b.plast
  429d54:	cmp	w27, #0x5f
  429d58:	b.eq	429d78 <wcrtomb@plt+0x24e28>  // b.none
  429d5c:	str	w27, [x26]
  429d60:	b	429cd4 <wcrtomb@plt+0x24d84>
  429d64:	mov	x0, #0x2006                	// #8198
  429d68:	movk	x0, #0x10, lsl #16
  429d6c:	movk	x0, #0x40, lsl #32
  429d70:	lsr	x0, x0, x27
  429d74:	tbz	w0, #0, 429d5c <wcrtomb@plt+0x24e0c>
  429d78:	mov	x0, x20
  429d7c:	bl	436488 <argp_usage@@Base+0x8fa8>
  429d80:	cbz	w0, 429d90 <wcrtomb@plt+0x24e40>
  429d84:	bl	404e10 <__errno_location@plt>
  429d88:	ldr	w0, [x0]
  429d8c:	bl	431c3c <argp_usage@@Base+0x475c>
  429d90:	tbnz	w21, #31, 429dbc <wcrtomb@plt+0x24e6c>
  429d94:	ldr	w0, [sp, #96]
  429d98:	cmp	w0, w21
  429d9c:	b.ne	429dbc <wcrtomb@plt+0x24e6c>  // b.any
  429da0:	mov	x0, x20
  429da4:	bl	4364f8 <argp_usage@@Base+0x9018>
  429da8:	bl	404e10 <__errno_location@plt>
  429dac:	mov	w1, #0x9                   	// #9
  429db0:	str	w1, [x0]
  429db4:	mov	x19, #0xffffffffffffffff    	// #-1
  429db8:	b	429cd4 <wcrtomb@plt+0x24d84>
  429dbc:	mov	w0, w21
  429dc0:	bl	4042f0 <fchdir@plt>
  429dc4:	mov	w21, w0
  429dc8:	cbz	w0, 429de8 <wcrtomb@plt+0x24e98>
  429dcc:	bl	404e10 <__errno_location@plt>
  429dd0:	mov	x19, x0
  429dd4:	mov	x0, x20
  429dd8:	ldr	w21, [x19]
  429ddc:	bl	4364f8 <argp_usage@@Base+0x9018>
  429de0:	str	w21, [x19]
  429de4:	b	429db4 <wcrtomb@plt+0x24e64>
  429de8:	mov	x2, x24
  429dec:	mov	x1, x23
  429df0:	mov	x0, x22
  429df4:	bl	4047c0 <listxattr@plt>
  429df8:	mov	x19, x0
  429dfc:	cmn	x0, #0x1
  429e00:	b.ne	429e0c <wcrtomb@plt+0x24ebc>  // b.any
  429e04:	bl	404e10 <__errno_location@plt>
  429e08:	ldr	w21, [x0]
  429e0c:	mov	x0, x20
  429e10:	bl	4364e0 <argp_usage@@Base+0x9000>
  429e14:	cbz	w0, 429e24 <wcrtomb@plt+0x24ed4>
  429e18:	bl	404e10 <__errno_location@plt>
  429e1c:	ldr	w0, [x0]
  429e20:	bl	431c7c <argp_usage@@Base+0x479c>
  429e24:	mov	x0, x20
  429e28:	bl	4364f8 <argp_usage@@Base+0x9018>
  429e2c:	cbz	w21, 429cd4 <wcrtomb@plt+0x24d84>
  429e30:	bl	404e10 <__errno_location@plt>
  429e34:	str	w21, [x0]
  429e38:	b	429cd4 <wcrtomb@plt+0x24d84>
  429e3c:	mov	x12, #0x1020                	// #4128
  429e40:	sub	sp, sp, x12
  429e44:	cmn	w0, #0x64
  429e48:	stp	x29, x30, [sp]
  429e4c:	mov	x29, sp
  429e50:	stp	x19, x20, [sp, #16]
  429e54:	stp	x21, x22, [sp, #32]
  429e58:	mov	x22, x1
  429e5c:	stp	x23, x24, [sp, #48]
  429e60:	mov	x23, x2
  429e64:	mov	x24, x3
  429e68:	stp	x25, x26, [sp, #64]
  429e6c:	str	x27, [sp, #80]
  429e70:	b.eq	429e84 <wcrtomb@plt+0x24f34>  // b.none
  429e74:	mov	w21, w0
  429e78:	ldrb	w0, [x1]
  429e7c:	cmp	w0, #0x2f
  429e80:	b.ne	429ec0 <wcrtomb@plt+0x24f70>  // b.any
  429e84:	mov	x2, x24
  429e88:	mov	x1, x23
  429e8c:	mov	x0, x22
  429e90:	bl	404d60 <llistxattr@plt>
  429e94:	mov	x19, x0
  429e98:	mov	x0, x19
  429e9c:	mov	x12, #0x1020                	// #4128
  429ea0:	ldp	x29, x30, [sp]
  429ea4:	ldp	x19, x20, [sp, #16]
  429ea8:	ldp	x21, x22, [sp, #32]
  429eac:	ldp	x23, x24, [sp, #48]
  429eb0:	ldp	x25, x26, [sp, #64]
  429eb4:	ldr	x27, [sp, #80]
  429eb8:	add	sp, sp, x12
  429ebc:	ret
  429ec0:	add	x20, sp, #0x60
  429ec4:	mov	x2, x1
  429ec8:	mov	x0, x20
  429ecc:	mov	w1, w21
  429ed0:	bl	437ca4 <_obstack_memory_used@@Base+0x24>
  429ed4:	mov	x25, x0
  429ed8:	cbz	x0, 429f3c <wcrtomb@plt+0x24fec>
  429edc:	mov	x2, x24
  429ee0:	mov	x1, x23
  429ee4:	bl	404d60 <llistxattr@plt>
  429ee8:	mov	x19, x0
  429eec:	bl	404e10 <__errno_location@plt>
  429ef0:	ldr	w27, [x0]
  429ef4:	mov	x26, x0
  429ef8:	cmp	x25, x20
  429efc:	b.eq	429f08 <wcrtomb@plt+0x24fb8>  // b.none
  429f00:	mov	x0, x25
  429f04:	bl	404ae0 <free@plt>
  429f08:	cmn	x19, #0x1
  429f0c:	b.ne	429e98 <wcrtomb@plt+0x24f48>  // b.any
  429f10:	cmp	w27, #0x26
  429f14:	b.ls	429f28 <wcrtomb@plt+0x24fd8>  // b.plast
  429f18:	cmp	w27, #0x5f
  429f1c:	b.eq	429f3c <wcrtomb@plt+0x24fec>  // b.none
  429f20:	str	w27, [x26]
  429f24:	b	429e98 <wcrtomb@plt+0x24f48>
  429f28:	mov	x0, #0x2006                	// #8198
  429f2c:	movk	x0, #0x10, lsl #16
  429f30:	movk	x0, #0x40, lsl #32
  429f34:	lsr	x0, x0, x27
  429f38:	tbz	w0, #0, 429f20 <wcrtomb@plt+0x24fd0>
  429f3c:	mov	x0, x20
  429f40:	bl	436488 <argp_usage@@Base+0x8fa8>
  429f44:	cbz	w0, 429f54 <wcrtomb@plt+0x25004>
  429f48:	bl	404e10 <__errno_location@plt>
  429f4c:	ldr	w0, [x0]
  429f50:	bl	431c3c <argp_usage@@Base+0x475c>
  429f54:	tbnz	w21, #31, 429f80 <wcrtomb@plt+0x25030>
  429f58:	ldr	w0, [sp, #96]
  429f5c:	cmp	w0, w21
  429f60:	b.ne	429f80 <wcrtomb@plt+0x25030>  // b.any
  429f64:	mov	x0, x20
  429f68:	bl	4364f8 <argp_usage@@Base+0x9018>
  429f6c:	bl	404e10 <__errno_location@plt>
  429f70:	mov	w1, #0x9                   	// #9
  429f74:	str	w1, [x0]
  429f78:	mov	x19, #0xffffffffffffffff    	// #-1
  429f7c:	b	429e98 <wcrtomb@plt+0x24f48>
  429f80:	mov	w0, w21
  429f84:	bl	4042f0 <fchdir@plt>
  429f88:	mov	w21, w0
  429f8c:	cbz	w0, 429fac <wcrtomb@plt+0x2505c>
  429f90:	bl	404e10 <__errno_location@plt>
  429f94:	mov	x19, x0
  429f98:	mov	x0, x20
  429f9c:	ldr	w21, [x19]
  429fa0:	bl	4364f8 <argp_usage@@Base+0x9018>
  429fa4:	str	w21, [x19]
  429fa8:	b	429f78 <wcrtomb@plt+0x25028>
  429fac:	mov	x2, x24
  429fb0:	mov	x1, x23
  429fb4:	mov	x0, x22
  429fb8:	bl	404d60 <llistxattr@plt>
  429fbc:	mov	x19, x0
  429fc0:	cmn	x0, #0x1
  429fc4:	b.ne	429fd0 <wcrtomb@plt+0x25080>  // b.any
  429fc8:	bl	404e10 <__errno_location@plt>
  429fcc:	ldr	w21, [x0]
  429fd0:	mov	x0, x20
  429fd4:	bl	4364e0 <argp_usage@@Base+0x9000>
  429fd8:	cbz	w0, 429fe8 <wcrtomb@plt+0x25098>
  429fdc:	bl	404e10 <__errno_location@plt>
  429fe0:	ldr	w0, [x0]
  429fe4:	bl	431c7c <argp_usage@@Base+0x479c>
  429fe8:	mov	x0, x20
  429fec:	bl	4364f8 <argp_usage@@Base+0x9018>
  429ff0:	cbz	w21, 429e98 <wcrtomb@plt+0x24f48>
  429ff4:	bl	404e10 <__errno_location@plt>
  429ff8:	str	w21, [x0]
  429ffc:	b	429e98 <wcrtomb@plt+0x24f48>
  42a000:	stp	x29, x30, [sp, #-80]!
  42a004:	cmp	x2, #0x401
  42a008:	mov	x29, sp
  42a00c:	stp	x19, x20, [sp, #16]
  42a010:	mov	x19, #0x401                 	// #1025
  42a014:	csinc	x19, x19, x2, cs  // cs = hs, nlast
  42a018:	stp	x21, x22, [sp, #32]
  42a01c:	mov	w22, w0
  42a020:	stp	x23, x24, [sp, #48]
  42a024:	mov	x23, x1
  42a028:	mov	x24, #0x7ffffffffffffffe    	// #9223372036854775806
  42a02c:	str	x25, [sp, #64]
  42a030:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
  42a034:	mov	x0, x19
  42a038:	bl	4045f0 <malloc@plt>
  42a03c:	mov	x20, x0
  42a040:	cbz	x0, 42a094 <wcrtomb@plt+0x25144>
  42a044:	mov	x2, x0
  42a048:	mov	x3, x19
  42a04c:	mov	x1, x23
  42a050:	mov	w0, w22
  42a054:	bl	404f40 <readlinkat@plt>
  42a058:	mov	x21, x0
  42a05c:	tbz	x0, #63, 42a088 <wcrtomb@plt+0x25138>
  42a060:	bl	404e10 <__errno_location@plt>
  42a064:	ldr	w0, [x0]
  42a068:	cmp	w0, #0x22
  42a06c:	b.eq	42a088 <wcrtomb@plt+0x25138>  // b.none
  42a070:	mov	x0, x20
  42a074:	bl	404ae0 <free@plt>
  42a078:	mov	x20, #0x0                   	// #0
  42a07c:	b	42a094 <wcrtomb@plt+0x25144>
  42a080:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  42a084:	b	42a034 <wcrtomb@plt+0x250e4>
  42a088:	cmp	x19, x21
  42a08c:	b.ls	42a0b0 <wcrtomb@plt+0x25160>  // b.plast
  42a090:	strb	wzr, [x20, x21]
  42a094:	mov	x0, x20
  42a098:	ldp	x19, x20, [sp, #16]
  42a09c:	ldp	x21, x22, [sp, #32]
  42a0a0:	ldp	x23, x24, [sp, #48]
  42a0a4:	ldr	x25, [sp, #64]
  42a0a8:	ldp	x29, x30, [sp], #80
  42a0ac:	ret
  42a0b0:	mov	x0, x20
  42a0b4:	bl	404ae0 <free@plt>
  42a0b8:	cmp	x19, x25
  42a0bc:	b.hi	42a0c8 <wcrtomb@plt+0x25178>  // b.pmore
  42a0c0:	lsl	x19, x19, #1
  42a0c4:	b	42a034 <wcrtomb@plt+0x250e4>
  42a0c8:	cmp	x19, x24
  42a0cc:	b.ls	42a080 <wcrtomb@plt+0x25130>  // b.plast
  42a0d0:	bl	404e10 <__errno_location@plt>
  42a0d4:	mov	w1, #0xc                   	// #12
  42a0d8:	str	w1, [x0]
  42a0dc:	b	42a078 <wcrtomb@plt+0x25128>
  42a0e0:	stp	x29, x30, [sp, #-16]!
  42a0e4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42a0e8:	mov	x29, sp
  42a0ec:	ldr	w0, [x0, #1032]
  42a0f0:	bl	4042b0 <exit@plt>
  42a0f4:	stp	x29, x30, [sp, #-112]!
  42a0f8:	mov	x29, sp
  42a0fc:	stp	x21, x22, [sp, #32]
  42a100:	mov	x21, x2
  42a104:	mov	x22, x3
  42a108:	stp	x19, x20, [sp, #16]
  42a10c:	mov	x19, #0xffffffffffffffff    	// #-1
  42a110:	mov	x20, #0x0                   	// #0
  42a114:	stp	x23, x24, [sp, #48]
  42a118:	mov	w23, #0x0                   	// #0
  42a11c:	stp	x25, x26, [sp, #64]
  42a120:	mov	x25, x1
  42a124:	mov	x26, x21
  42a128:	stp	x27, x28, [sp, #80]
  42a12c:	mov	x27, x0
  42a130:	bl	404280 <strlen@plt>
  42a134:	mov	x24, x0
  42a138:	mov	w28, #0x1                   	// #1
  42a13c:	ldr	x3, [x25, x20, lsl #3]
  42a140:	cbnz	x3, 42a154 <wcrtomb@plt+0x25204>
  42a144:	cmp	w23, #0x0
  42a148:	mov	x0, #0xfffffffffffffffe    	// #-2
  42a14c:	csel	x19, x19, x0, eq  // eq = none
  42a150:	b	42a184 <wcrtomb@plt+0x25234>
  42a154:	mov	x2, x24
  42a158:	mov	x1, x27
  42a15c:	mov	x0, x3
  42a160:	str	x3, [sp, #104]
  42a164:	bl	4046a0 <strncmp@plt>
  42a168:	cbnz	w0, 42a1b0 <wcrtomb@plt+0x25260>
  42a16c:	ldr	x3, [sp, #104]
  42a170:	mov	x0, x3
  42a174:	bl	404280 <strlen@plt>
  42a178:	cmp	x0, x24
  42a17c:	b.ne	42a1a4 <wcrtomb@plt+0x25254>  // b.any
  42a180:	mov	x19, x20
  42a184:	mov	x0, x19
  42a188:	ldp	x19, x20, [sp, #16]
  42a18c:	ldp	x21, x22, [sp, #32]
  42a190:	ldp	x23, x24, [sp, #48]
  42a194:	ldp	x25, x26, [sp, #64]
  42a198:	ldp	x27, x28, [sp, #80]
  42a19c:	ldp	x29, x30, [sp], #112
  42a1a0:	ret
  42a1a4:	cmn	x19, #0x1
  42a1a8:	b.ne	42a1bc <wcrtomb@plt+0x2526c>  // b.any
  42a1ac:	mov	x19, x20
  42a1b0:	add	x20, x20, #0x1
  42a1b4:	add	x26, x26, x22
  42a1b8:	b	42a13c <wcrtomb@plt+0x251ec>
  42a1bc:	cbz	x21, 42a1dc <wcrtomb@plt+0x2528c>
  42a1c0:	madd	x0, x19, x22, x21
  42a1c4:	mov	x2, x22
  42a1c8:	mov	x1, x26
  42a1cc:	bl	4049f0 <memcmp@plt>
  42a1d0:	cmp	w0, #0x0
  42a1d4:	csel	w23, w23, w28, eq  // eq = none
  42a1d8:	b	42a1b0 <wcrtomb@plt+0x25260>
  42a1dc:	mov	w23, #0x1                   	// #1
  42a1e0:	b	42a1b0 <wcrtomb@plt+0x25260>
  42a1e4:	stp	x29, x30, [sp, #-48]!
  42a1e8:	cmn	x2, #0x1
  42a1ec:	mov	w2, #0x5                   	// #5
  42a1f0:	mov	x29, sp
  42a1f4:	stp	x19, x20, [sp, #16]
  42a1f8:	mov	x20, x1
  42a1fc:	str	x21, [sp, #32]
  42a200:	mov	x21, x0
  42a204:	b.ne	42a260 <wcrtomb@plt+0x25310>  // b.any
  42a208:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42a20c:	add	x1, x1, #0xc8c
  42a210:	mov	x0, #0x0                   	// #0
  42a214:	bl	404d00 <dcgettext@plt>
  42a218:	mov	x2, x20
  42a21c:	mov	x19, x0
  42a220:	mov	w1, #0x8                   	// #8
  42a224:	mov	w0, #0x0                   	// #0
  42a228:	bl	435f60 <argp_usage@@Base+0x8a80>
  42a22c:	mov	x20, x0
  42a230:	mov	x1, x21
  42a234:	mov	w0, #0x1                   	// #1
  42a238:	bl	4361c0 <argp_usage@@Base+0x8ce0>
  42a23c:	mov	x4, x0
  42a240:	mov	x3, x20
  42a244:	mov	x2, x19
  42a248:	ldp	x19, x20, [sp, #16]
  42a24c:	mov	w1, #0x0                   	// #0
  42a250:	ldr	x21, [sp, #32]
  42a254:	mov	w0, #0x0                   	// #0
  42a258:	ldp	x29, x30, [sp], #48
  42a25c:	b	4042e0 <error@plt>
  42a260:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42a264:	add	x1, x1, #0xca7
  42a268:	b	42a210 <wcrtomb@plt+0x252c0>
  42a26c:	stp	x29, x30, [sp, #-112]!
  42a270:	mov	x29, sp
  42a274:	stp	x19, x20, [sp, #16]
  42a278:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  42a27c:	mov	x19, x1
  42a280:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42a284:	add	x1, x1, #0xcc4
  42a288:	stp	x21, x22, [sp, #32]
  42a28c:	mov	x22, x2
  42a290:	mov	w2, #0x5                   	// #5
  42a294:	stp	x23, x24, [sp, #48]
  42a298:	mov	x21, #0x0                   	// #0
  42a29c:	stp	x25, x26, [sp, #64]
  42a2a0:	adrp	x26, 44d000 <_obstack_memory_used@@Base+0x15380>
  42a2a4:	mov	x25, #0x0                   	// #0
  42a2a8:	stp	x27, x28, [sp, #80]
  42a2ac:	add	x26, x26, #0xcd9
  42a2b0:	adrp	x27, 44d000 <_obstack_memory_used@@Base+0x15380>
  42a2b4:	str	x0, [sp, #104]
  42a2b8:	mov	x0, #0x0                   	// #0
  42a2bc:	bl	404d00 <dcgettext@plt>
  42a2c0:	add	x27, x27, #0xce1
  42a2c4:	ldr	x1, [x20, #1160]
  42a2c8:	bl	404d20 <fputs_unlocked@plt>
  42a2cc:	ldr	x0, [sp, #104]
  42a2d0:	ldr	x23, [x20, #1160]
  42a2d4:	ldr	x24, [x0, x21, lsl #3]
  42a2d8:	cbnz	x24, 42a300 <wcrtomb@plt+0x253b0>
  42a2dc:	mov	x1, x23
  42a2e0:	mov	w0, #0xa                   	// #10
  42a2e4:	ldp	x19, x20, [sp, #16]
  42a2e8:	ldp	x21, x22, [sp, #32]
  42a2ec:	ldp	x23, x24, [sp, #48]
  42a2f0:	ldp	x25, x26, [sp, #64]
  42a2f4:	ldp	x27, x28, [sp, #80]
  42a2f8:	ldp	x29, x30, [sp], #112
  42a2fc:	b	404500 <putc_unlocked@plt>
  42a300:	mov	x28, x19
  42a304:	cbz	x21, 42a31c <wcrtomb@plt+0x253cc>
  42a308:	mov	x2, x22
  42a30c:	mov	x1, x19
  42a310:	mov	x0, x25
  42a314:	bl	4049f0 <memcmp@plt>
  42a318:	cbz	w0, 42a348 <wcrtomb@plt+0x253f8>
  42a31c:	mov	x0, x24
  42a320:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  42a324:	mov	x2, x26
  42a328:	mov	x3, x0
  42a32c:	mov	w1, #0x1                   	// #1
  42a330:	mov	x0, x23
  42a334:	bl	404a20 <__fprintf_chk@plt>
  42a338:	add	x21, x21, #0x1
  42a33c:	add	x19, x19, x22
  42a340:	mov	x25, x28
  42a344:	b	42a2cc <wcrtomb@plt+0x2537c>
  42a348:	mov	x0, x24
  42a34c:	bl	4361c8 <argp_usage@@Base+0x8ce8>
  42a350:	mov	x2, x27
  42a354:	mov	x3, x0
  42a358:	mov	w1, #0x1                   	// #1
  42a35c:	mov	x0, x23
  42a360:	mov	x28, x25
  42a364:	bl	404a20 <__fprintf_chk@plt>
  42a368:	b	42a338 <wcrtomb@plt+0x253e8>
  42a36c:	stp	x29, x30, [sp, #-64]!
  42a370:	mov	x29, sp
  42a374:	stp	x19, x20, [sp, #16]
  42a378:	mov	x19, x2
  42a37c:	mov	x20, x3
  42a380:	stp	x21, x22, [sp, #32]
  42a384:	mov	x22, x1
  42a388:	mov	x21, x4
  42a38c:	mov	x3, x4
  42a390:	mov	x2, x20
  42a394:	mov	x1, x19
  42a398:	stp	x23, x24, [sp, #48]
  42a39c:	mov	x24, x0
  42a3a0:	mov	x23, x5
  42a3a4:	mov	x0, x22
  42a3a8:	bl	42a0f4 <wcrtomb@plt+0x251a4>
  42a3ac:	tbz	x0, #63, 42a3d8 <wcrtomb@plt+0x25488>
  42a3b0:	mov	x2, x0
  42a3b4:	mov	x1, x22
  42a3b8:	mov	x0, x24
  42a3bc:	bl	42a1e4 <wcrtomb@plt+0x25294>
  42a3c0:	mov	x0, x19
  42a3c4:	mov	x2, x21
  42a3c8:	mov	x1, x20
  42a3cc:	bl	42a26c <wcrtomb@plt+0x2531c>
  42a3d0:	blr	x23
  42a3d4:	mov	x0, #0xffffffffffffffff    	// #-1
  42a3d8:	ldp	x19, x20, [sp, #16]
  42a3dc:	ldp	x21, x22, [sp, #32]
  42a3e0:	ldp	x23, x24, [sp, #48]
  42a3e4:	ldp	x29, x30, [sp], #64
  42a3e8:	ret
  42a3ec:	stp	x29, x30, [sp, #-64]!
  42a3f0:	mov	x29, sp
  42a3f4:	stp	x19, x20, [sp, #16]
  42a3f8:	mov	x19, x1
  42a3fc:	mov	x20, x2
  42a400:	stp	x21, x22, [sp, #32]
  42a404:	mov	x22, x0
  42a408:	mov	x21, x3
  42a40c:	str	x23, [sp, #48]
  42a410:	ldr	x23, [x19]
  42a414:	cbz	x23, 42a434 <wcrtomb@plt+0x254e4>
  42a418:	mov	x1, x20
  42a41c:	mov	x2, x21
  42a420:	mov	x0, x22
  42a424:	add	x19, x19, #0x8
  42a428:	add	x20, x20, x21
  42a42c:	bl	4049f0 <memcmp@plt>
  42a430:	cbnz	w0, 42a410 <wcrtomb@plt+0x254c0>
  42a434:	mov	x0, x23
  42a438:	ldp	x19, x20, [sp, #16]
  42a43c:	ldp	x21, x22, [sp, #32]
  42a440:	ldr	x23, [sp, #48]
  42a444:	ldp	x29, x30, [sp], #64
  42a448:	ret
  42a44c:	stp	x29, x30, [sp, #-80]!
  42a450:	mov	x29, sp
  42a454:	stp	x19, x20, [sp, #16]
  42a458:	ldr	x20, [x0]
  42a45c:	stp	x21, x22, [sp, #32]
  42a460:	mov	x22, x1
  42a464:	mov	x19, x20
  42a468:	stp	x23, x24, [sp, #48]
  42a46c:	mov	x23, x2
  42a470:	mov	x24, x3
  42a474:	ldr	w21, [x0, #8]
  42a478:	str	x25, [sp, #64]
  42a47c:	ldr	x25, [x0, #16]
  42a480:	mov	w0, #0x0                   	// #0
  42a484:	cmp	w21, #0x0
  42a488:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42a48c:	b.eq	42a4a8 <wcrtomb@plt+0x25558>  // b.none
  42a490:	ldp	x19, x20, [sp, #16]
  42a494:	ldp	x21, x22, [sp, #32]
  42a498:	ldp	x23, x24, [sp, #48]
  42a49c:	ldr	x25, [sp, #64]
  42a4a0:	ldp	x29, x30, [sp], #80
  42a4a4:	ret
  42a4a8:	mov	x0, x19
  42a4ac:	bl	42d4f0 <argp_usage@@Base+0x10>
  42a4b0:	cbz	w0, 42a4ec <wcrtomb@plt+0x2559c>
  42a4b4:	ldrb	w1, [x25]
  42a4b8:	ldr	w0, [x19, #8]
  42a4bc:	cmp	w1, w0
  42a4c0:	b.ne	42a500 <wcrtomb@plt+0x255b0>  // b.any
  42a4c4:	ldr	w0, [x19, #24]
  42a4c8:	tst	x0, #0x4
  42a4cc:	csel	x20, x20, x19, ne  // ne = any
  42a4d0:	tbnz	w0, #1, 42a4f8 <wcrtomb@plt+0x255a8>
  42a4d4:	mov	x3, x24
  42a4d8:	mov	x2, x23
  42a4dc:	mov	x1, x20
  42a4e0:	mov	x0, x19
  42a4e4:	blr	x22
  42a4e8:	add	x25, x25, #0x1
  42a4ec:	add	x19, x19, #0x30
  42a4f0:	sub	w21, w21, #0x1
  42a4f4:	b	42a484 <wcrtomb@plt+0x25534>
  42a4f8:	mov	w0, #0x0                   	// #0
  42a4fc:	b	42a4e8 <wcrtomb@plt+0x25598>
  42a500:	mov	w0, #0x0                   	// #0
  42a504:	b	42a4ec <wcrtomb@plt+0x2559c>
  42a508:	stp	x29, x30, [sp, #-32]!
  42a50c:	mov	x29, sp
  42a510:	str	x19, [sp, #16]
  42a514:	mov	x19, x0
  42a518:	bl	42d4f0 <argp_usage@@Base+0x10>
  42a51c:	cbz	w0, 42a524 <wcrtomb@plt+0x255d4>
  42a520:	ldr	w0, [x19, #8]
  42a524:	ldr	x19, [sp, #16]
  42a528:	ldp	x29, x30, [sp], #32
  42a52c:	ret
  42a530:	ldr	w2, [x0, #8]
  42a534:	ldr	x1, [x0]
  42a538:	cbnz	w2, 42a544 <wcrtomb@plt+0x255f4>
  42a53c:	mov	x0, #0x0                   	// #0
  42a540:	ret
  42a544:	ldr	x0, [x1]
  42a548:	cbz	x0, 42a554 <wcrtomb@plt+0x25604>
  42a54c:	ldr	w3, [x1, #24]
  42a550:	tbz	w3, #1, 42a540 <wcrtomb@plt+0x255f0>
  42a554:	add	x1, x1, #0x30
  42a558:	sub	w2, w2, #0x1
  42a55c:	b	42a538 <wcrtomb@plt+0x255e8>
  42a560:	mov	w3, w0
  42a564:	mov	w0, w2
  42a568:	cmp	w3, w1
  42a56c:	b.eq	42a588 <wcrtomb@plt+0x25638>  // b.none
  42a570:	mvn	w0, w1
  42a574:	sub	w2, w3, w1
  42a578:	sub	w1, w1, w3
  42a57c:	lsr	w0, w0, #31
  42a580:	cmp	w0, w3, lsr #31
  42a584:	csel	w0, w1, w2, eq  // eq = none
  42a588:	ret
  42a58c:	stp	x29, x30, [sp, #-32]!
  42a590:	mov	x29, sp
  42a594:	stp	x19, x20, [sp, #16]
  42a598:	mov	w19, w1
  42a59c:	mov	x20, x0
  42a5a0:	bl	443474 <_obstack_memory_used@@Base+0xb7f4>
  42a5a4:	sub	w19, w19, w0
  42a5a8:	cmp	w19, #0x0
  42a5ac:	b.gt	42a5bc <wcrtomb@plt+0x2566c>
  42a5b0:	ldp	x19, x20, [sp, #16]
  42a5b4:	ldp	x29, x30, [sp], #32
  42a5b8:	ret
  42a5bc:	mov	x0, x20
  42a5c0:	mov	w1, #0x20                  	// #32
  42a5c4:	sub	w19, w19, #0x1
  42a5c8:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42a5cc:	b	42a5a8 <wcrtomb@plt+0x25658>
  42a5d0:	stp	x29, x30, [sp, #-32]!
  42a5d4:	mov	x29, sp
  42a5d8:	stp	x19, x20, [sp, #16]
  42a5dc:	mov	x19, x0
  42a5e0:	mov	x20, x1
  42a5e4:	bl	443474 <_obstack_memory_used@@Base+0xb7f4>
  42a5e8:	add	x0, x0, x20
  42a5ec:	ldr	x1, [x19, #16]
  42a5f0:	cmp	x0, x1
  42a5f4:	b.cc	42a60c <wcrtomb@plt+0x256bc>  // b.lo, b.ul, b.last
  42a5f8:	mov	w1, #0xa                   	// #10
  42a5fc:	mov	x0, x19
  42a600:	ldp	x19, x20, [sp, #16]
  42a604:	ldp	x29, x30, [sp], #32
  42a608:	b	443360 <_obstack_memory_used@@Base+0xb6e0>
  42a60c:	mov	w1, #0x20                  	// #32
  42a610:	b	42a5fc <wcrtomb@plt+0x256ac>
  42a614:	stp	x29, x30, [sp, #-48]!
  42a618:	mov	x5, x0
  42a61c:	mov	x29, sp
  42a620:	stp	x19, x20, [sp, #16]
  42a624:	mov	x20, x1
  42a628:	ldr	x1, [x0, #16]
  42a62c:	str	x21, [sp, #32]
  42a630:	cbz	x1, 42a680 <wcrtomb@plt+0x25730>
  42a634:	mov	x21, x2
  42a638:	ldr	w2, [x5, #24]
  42a63c:	mov	x0, x3
  42a640:	mov	x19, x4
  42a644:	tbz	w2, #0, 42a66c <wcrtomb@plt+0x2571c>
  42a648:	mov	w2, #0x5                   	// #5
  42a64c:	bl	404d00 <dcgettext@plt>
  42a650:	mov	x1, x21
  42a654:	mov	x2, x0
  42a658:	mov	x0, x19
  42a65c:	ldp	x19, x20, [sp, #16]
  42a660:	ldr	x21, [sp, #32]
  42a664:	ldp	x29, x30, [sp], #48
  42a668:	b	4431a0 <_obstack_memory_used@@Base+0xb520>
  42a66c:	mov	w2, #0x5                   	// #5
  42a670:	bl	404d00 <dcgettext@plt>
  42a674:	mov	x1, x20
  42a678:	mov	x2, x0
  42a67c:	b	42a658 <wcrtomb@plt+0x25708>
  42a680:	ldp	x19, x20, [sp, #16]
  42a684:	ldr	x21, [sp, #32]
  42a688:	ldp	x29, x30, [sp], #48
  42a68c:	ret
  42a690:	stp	x29, x30, [sp, #-32]!
  42a694:	mov	x29, sp
  42a698:	str	x19, [sp, #16]
  42a69c:	mov	x19, x0
  42a6a0:	bl	404a60 <__ctype_b_loc@plt>
  42a6a4:	ldr	x3, [x0]
  42a6a8:	ldr	x0, [x19]
  42a6ac:	ldrb	w2, [x0]
  42a6b0:	ldrb	w1, [x0]
  42a6b4:	ldrh	w2, [x3, x2, lsl #1]
  42a6b8:	tbnz	w2, #13, 42a6e8 <wcrtomb@plt+0x25798>
  42a6bc:	cmp	w1, #0x2d
  42a6c0:	cset	w0, ne  // ne = any
  42a6c4:	ldr	x2, [x19]
  42a6c8:	ldrb	w1, [x2]
  42a6cc:	cbz	w1, 42a6dc <wcrtomb@plt+0x2578c>
  42a6d0:	ubfiz	x1, x1, #1, #8
  42a6d4:	ldrh	w1, [x3, x1]
  42a6d8:	tbz	w1, #3, 42a6f4 <wcrtomb@plt+0x257a4>
  42a6dc:	ldr	x19, [sp, #16]
  42a6e0:	ldp	x29, x30, [sp], #32
  42a6e4:	ret
  42a6e8:	add	x0, x0, #0x1
  42a6ec:	str	x0, [x19]
  42a6f0:	b	42a6a8 <wcrtomb@plt+0x25758>
  42a6f4:	add	x2, x2, #0x1
  42a6f8:	str	x2, [x19]
  42a6fc:	b	42a6c4 <wcrtomb@plt+0x25774>
  42a700:	stp	x29, x30, [sp, #-48]!
  42a704:	mov	x4, x1
  42a708:	mov	x29, sp
  42a70c:	stp	x19, x20, [sp, #16]
  42a710:	mov	x19, x0
  42a714:	mov	x20, x3
  42a718:	stp	x21, x22, [sp, #32]
  42a71c:	mov	x0, x2
  42a720:	ldr	x1, [x19, #16]
  42a724:	cbnz	x1, 42a730 <wcrtomb@plt+0x257e0>
  42a728:	ldr	x1, [x4, #16]
  42a72c:	cbz	x1, 42a768 <wcrtomb@plt+0x25818>
  42a730:	ldr	w2, [x4, #24]
  42a734:	ldr	w22, [x19, #24]
  42a738:	orr	w22, w22, w2
  42a73c:	tbnz	w22, #4, 42a768 <wcrtomb@plt+0x25818>
  42a740:	mov	w2, #0x5                   	// #5
  42a744:	bl	404d00 <dcgettext@plt>
  42a748:	mov	x21, x0
  42a74c:	tbz	w22, #0, 42a77c <wcrtomb@plt+0x2582c>
  42a750:	ldr	w2, [x19, #8]
  42a754:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42a758:	mov	x3, x0
  42a75c:	add	x1, x1, #0xce6
  42a760:	mov	x0, x20
  42a764:	bl	4431a0 <_obstack_memory_used@@Base+0xb520>
  42a768:	mov	w0, #0x0                   	// #0
  42a76c:	ldp	x19, x20, [sp, #16]
  42a770:	ldp	x21, x22, [sp, #32]
  42a774:	ldp	x29, x30, [sp], #48
  42a778:	ret
  42a77c:	bl	404280 <strlen@plt>
  42a780:	add	x1, x0, #0x6
  42a784:	mov	x0, x20
  42a788:	bl	42a5d0 <wcrtomb@plt+0x25680>
  42a78c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42a790:	ldr	w2, [x19, #8]
  42a794:	mov	x3, x21
  42a798:	add	x1, x1, #0xcf1
  42a79c:	b	42a760 <wcrtomb@plt+0x25810>
  42a7a0:	stp	x29, x30, [sp, #-32]!
  42a7a4:	mov	x29, sp
  42a7a8:	stp	x19, x20, [sp, #16]
  42a7ac:	mov	x19, x0
  42a7b0:	ldr	x0, [x0, #24]
  42a7b4:	cbnz	x0, 42a7e0 <wcrtomb@plt+0x25890>
  42a7b8:	ldr	w0, [x19, #8]
  42a7bc:	cbz	w0, 42a7d0 <wcrtomb@plt+0x25880>
  42a7c0:	ldr	x0, [x19]
  42a7c4:	bl	404ae0 <free@plt>
  42a7c8:	ldr	x0, [x19, #16]
  42a7cc:	bl	404ae0 <free@plt>
  42a7d0:	mov	x0, x19
  42a7d4:	ldp	x19, x20, [sp, #16]
  42a7d8:	ldp	x29, x30, [sp], #32
  42a7dc:	b	404ae0 <free@plt>
  42a7e0:	ldr	x20, [x0, #40]
  42a7e4:	bl	404ae0 <free@plt>
  42a7e8:	mov	x0, x20
  42a7ec:	b	42a7b4 <wcrtomb@plt+0x25864>
  42a7f0:	stp	x29, x30, [sp, #-32]!
  42a7f4:	mov	x29, sp
  42a7f8:	stp	x19, x20, [sp, #16]
  42a7fc:	ldr	x20, [x0, #32]
  42a800:	ldr	x0, [x0, #16]
  42a804:	cbz	x0, 42a82c <wcrtomb@plt+0x258dc>
  42a808:	mov	w1, #0xa                   	// #10
  42a80c:	bl	404b90 <strchr@plt>
  42a810:	cmp	x0, #0x0
  42a814:	cset	x19, ne  // ne = any
  42a818:	cbnz	x20, 42a840 <wcrtomb@plt+0x258f0>
  42a81c:	mov	x0, x19
  42a820:	ldp	x19, x20, [sp, #16]
  42a824:	ldp	x29, x30, [sp], #32
  42a828:	ret
  42a82c:	mov	x19, #0x0                   	// #0
  42a830:	b	42a818 <wcrtomb@plt+0x258c8>
  42a834:	bl	42a7f0 <wcrtomb@plt+0x258a0>
  42a838:	add	x20, x20, #0x20
  42a83c:	add	x19, x19, x0
  42a840:	ldr	x0, [x20]
  42a844:	cbnz	x0, 42a834 <wcrtomb@plt+0x258e4>
  42a848:	b	42a81c <wcrtomb@plt+0x258cc>
  42a84c:	stp	x29, x30, [sp, #-112]!
  42a850:	mov	x29, sp
  42a854:	stp	x21, x22, [sp, #32]
  42a858:	mov	x21, x0
  42a85c:	mov	w22, w2
  42a860:	stp	x27, x28, [sp, #80]
  42a864:	mov	x27, x1
  42a868:	mov	w2, #0x5                   	// #5
  42a86c:	ldr	x1, [x0, #24]
  42a870:	stp	x19, x20, [sp, #16]
  42a874:	mov	x20, x5
  42a878:	ldr	x0, [x0, #48]
  42a87c:	stp	x23, x24, [sp, #48]
  42a880:	stp	x25, x26, [sp, #64]
  42a884:	stp	w3, w4, [sp, #104]
  42a888:	bl	404d00 <dcgettext@plt>
  42a88c:	ldr	x26, [x21, #32]
  42a890:	cbz	x0, 42a978 <wcrtomb@plt+0x25a28>
  42a894:	mov	x19, x0
  42a898:	mov	w1, #0xb                   	// #11
  42a89c:	bl	404b90 <strchr@plt>
  42a8a0:	cbz	w22, 42a970 <wcrtomb@plt+0x25a20>
  42a8a4:	cmp	x0, #0x0
  42a8a8:	csinc	x24, xzr, x0, eq  // eq = none
  42a8ac:	cmp	x0, #0x0
  42a8b0:	eor	w1, w22, #0x1
  42a8b4:	cset	w2, ne  // ne = any
  42a8b8:	sub	x0, x0, x19
  42a8bc:	tst	w1, w2
  42a8c0:	csel	x19, x0, xzr, ne  // ne = any
  42a8c4:	ldr	x0, [x21, #40]
  42a8c8:	cbz	x0, 42a984 <wcrtomb@plt+0x25a34>
  42a8cc:	cbz	x19, 42a8e0 <wcrtomb@plt+0x25990>
  42a8d0:	mov	x0, x24
  42a8d4:	mov	x1, x19
  42a8d8:	bl	404b70 <strndup@plt>
  42a8dc:	mov	x24, x0
  42a8e0:	mov	x1, x27
  42a8e4:	mov	x0, x21
  42a8e8:	bl	42d4a0 <argp_parse@@Base+0x8f0>
  42a8ec:	mov	x2, x0
  42a8f0:	ldr	x4, [x21, #40]
  42a8f4:	mov	x25, x0
  42a8f8:	mov	w0, #0x1                   	// #1
  42a8fc:	mov	x1, x24
  42a900:	mov	x23, x24
  42a904:	movk	w0, #0x200, lsl #16
  42a908:	add	w0, w22, w0
  42a90c:	blr	x4
  42a910:	mov	x24, x0
  42a914:	cbz	x24, 42a9a0 <wcrtomb@plt+0x25a50>
  42a918:	ldr	w0, [sp, #104]
  42a91c:	cbz	w0, 42a92c <wcrtomb@plt+0x259dc>
  42a920:	mov	x0, x20
  42a924:	mov	w1, #0xa                   	// #10
  42a928:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42a92c:	cmp	x19, #0x0
  42a930:	ccmp	x24, x23, #0x0, ne  // ne = any
  42a934:	b.ne	42a990 <wcrtomb@plt+0x25a40>  // b.any
  42a938:	mov	x2, x19
  42a93c:	mov	x1, x23
  42a940:	mov	x0, x20
  42a944:	bl	443294 <_obstack_memory_used@@Base+0xb614>
  42a948:	mov	x0, x20
  42a94c:	bl	443474 <_obstack_memory_used@@Base+0xb7f4>
  42a950:	ldr	x1, [x20, #8]
  42a954:	cmp	x0, x1
  42a958:	b.ls	42a968 <wcrtomb@plt+0x25a18>  // b.plast
  42a95c:	mov	x0, x20
  42a960:	mov	w1, #0xa                   	// #10
  42a964:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42a968:	mov	w28, #0x1                   	// #1
  42a96c:	b	42a9a4 <wcrtomb@plt+0x25a54>
  42a970:	mov	x24, x19
  42a974:	b	42a8ac <wcrtomb@plt+0x2595c>
  42a978:	mov	x24, #0x0                   	// #0
  42a97c:	mov	x19, #0x0                   	// #0
  42a980:	b	42a8c4 <wcrtomb@plt+0x25974>
  42a984:	mov	x23, x24
  42a988:	mov	x25, #0x0                   	// #0
  42a98c:	b	42a914 <wcrtomb@plt+0x259c4>
  42a990:	mov	x1, x24
  42a994:	mov	x0, x20
  42a998:	bl	443308 <_obstack_memory_used@@Base+0xb688>
  42a99c:	b	42a948 <wcrtomb@plt+0x259f8>
  42a9a0:	mov	w28, #0x0                   	// #0
  42a9a4:	cmp	x24, #0x0
  42a9a8:	ccmp	x24, x23, #0x4, ne  // ne = any
  42a9ac:	b.eq	42a9b8 <wcrtomb@plt+0x25a68>  // b.none
  42a9b0:	mov	x0, x24
  42a9b4:	bl	404ae0 <free@plt>
  42a9b8:	cmp	x23, #0x0
  42a9bc:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  42a9c0:	b.eq	42a9d4 <wcrtomb@plt+0x25a84>  // b.none
  42a9c4:	ldr	x0, [x21, #40]
  42a9c8:	cbz	x0, 42a9d4 <wcrtomb@plt+0x25a84>
  42a9cc:	mov	x0, x23
  42a9d0:	bl	404ae0 <free@plt>
  42a9d4:	cbz	w22, 42aa4c <wcrtomb@plt+0x25afc>
  42a9d8:	ldr	x3, [x21, #40]
  42a9dc:	cbz	x3, 42aa4c <wcrtomb@plt+0x25afc>
  42a9e0:	mov	w0, #0x4                   	// #4
  42a9e4:	mov	x2, x25
  42a9e8:	mov	x1, #0x0                   	// #0
  42a9ec:	movk	w0, #0x200, lsl #16
  42a9f0:	blr	x3
  42a9f4:	mov	x19, x0
  42a9f8:	cbz	x0, 42aa4c <wcrtomb@plt+0x25afc>
  42a9fc:	ldr	w0, [sp, #104]
  42aa00:	orr	w6, w28, w0
  42aa04:	cbz	w6, 42aa14 <wcrtomb@plt+0x25ac4>
  42aa08:	mov	x0, x20
  42aa0c:	mov	w1, #0xa                   	// #10
  42aa10:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42aa14:	mov	x1, x19
  42aa18:	mov	x0, x20
  42aa1c:	bl	443308 <_obstack_memory_used@@Base+0xb688>
  42aa20:	mov	x0, x19
  42aa24:	bl	404ae0 <free@plt>
  42aa28:	mov	x0, x20
  42aa2c:	bl	443474 <_obstack_memory_used@@Base+0xb7f4>
  42aa30:	ldr	x1, [x20, #8]
  42aa34:	cmp	x0, x1
  42aa38:	b.ls	42aa48 <wcrtomb@plt+0x25af8>  // b.plast
  42aa3c:	mov	x0, x20
  42aa40:	mov	w1, #0xa                   	// #10
  42aa44:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42aa48:	mov	w28, w22
  42aa4c:	cbz	x26, 42aa70 <wcrtomb@plt+0x25b20>
  42aa50:	ldr	w0, [sp, #108]
  42aa54:	eor	w19, w0, #0x1
  42aa58:	and	w19, w19, #0x1
  42aa5c:	ldr	x0, [x26]
  42aa60:	cbz	x0, 42aa70 <wcrtomb@plt+0x25b20>
  42aa64:	cmp	w28, #0x0
  42aa68:	csinc	w1, w19, wzr, ne  // ne = any
  42aa6c:	cbnz	w1, 42aa90 <wcrtomb@plt+0x25b40>
  42aa70:	mov	w0, w28
  42aa74:	ldp	x19, x20, [sp, #16]
  42aa78:	ldp	x21, x22, [sp, #32]
  42aa7c:	ldp	x23, x24, [sp, #48]
  42aa80:	ldp	x25, x26, [sp, #64]
  42aa84:	ldp	x27, x28, [sp, #80]
  42aa88:	ldp	x29, x30, [sp], #112
  42aa8c:	ret
  42aa90:	ldp	w1, w4, [sp, #104]
  42aa94:	mov	x5, x20
  42aa98:	mov	w2, w22
  42aa9c:	add	x26, x26, #0x20
  42aaa0:	orr	w1, w28, w1
  42aaa4:	cmp	w1, #0x0
  42aaa8:	mov	x1, x27
  42aaac:	cset	w3, ne  // ne = any
  42aab0:	bl	42a84c <wcrtomb@plt+0x258fc>
  42aab4:	orr	w28, w28, w0
  42aab8:	b	42aa5c <wcrtomb@plt+0x25b0c>
  42aabc:	ldr	x2, [x0, #16]
  42aac0:	cbnz	x2, 42aaf0 <wcrtomb@plt+0x25ba0>
  42aac4:	ldr	x2, [x1, #16]
  42aac8:	cbnz	x2, 42aaf0 <wcrtomb@plt+0x25ba0>
  42aacc:	ldr	w2, [x0, #24]
  42aad0:	ldr	w1, [x1, #24]
  42aad4:	orr	w1, w2, w1
  42aad8:	tbnz	w1, #4, 42aaf0 <wcrtomb@plt+0x25ba0>
  42aadc:	ldr	w1, [x0, #8]
  42aae0:	ldr	x0, [x3]
  42aae4:	add	x2, x0, #0x1
  42aae8:	str	x2, [x3]
  42aaec:	strb	w1, [x0]
  42aaf0:	mov	w0, #0x0                   	// #0
  42aaf4:	ret
  42aaf8:	stp	x29, x30, [sp, #-112]!
  42aafc:	mov	x29, sp
  42ab00:	stp	x21, x22, [sp, #32]
  42ab04:	ldr	w21, [x0, #8]
  42ab08:	stp	x19, x20, [sp, #16]
  42ab0c:	stp	x23, x24, [sp, #48]
  42ab10:	stp	x25, x26, [sp, #64]
  42ab14:	stp	x27, x28, [sp, #80]
  42ab18:	cbz	w21, 42abcc <wcrtomb@plt+0x25c7c>
  42ab1c:	mov	x19, x0
  42ab20:	mov	x20, x1
  42ab24:	ldr	x0, [x0, #16]
  42ab28:	adrp	x24, 42a000 <wcrtomb@plt+0x250b0>
  42ab2c:	add	x24, x24, #0xabc
  42ab30:	bl	404280 <strlen@plt>
  42ab34:	add	x0, x0, #0x10
  42ab38:	and	x0, x0, #0xfffffffffffffff0
  42ab3c:	ldr	x22, [x19]
  42ab40:	sub	sp, sp, x0
  42ab44:	mov	x23, sp
  42ab48:	str	x23, [x29, #104]
  42ab4c:	ldr	x0, [x22, #40]
  42ab50:	add	x3, x29, #0x68
  42ab54:	mov	x1, x24
  42ab58:	ldr	x2, [x0, #48]
  42ab5c:	mov	x0, x22
  42ab60:	add	x22, x22, #0x38
  42ab64:	bl	42a44c <wcrtomb@plt+0x254fc>
  42ab68:	subs	w21, w21, #0x1
  42ab6c:	b.ne	42ab4c <wcrtomb@plt+0x25bfc>  // b.any
  42ab70:	ldr	x0, [x29, #104]
  42ab74:	cmp	x0, x23
  42ab78:	b.ls	42ab9c <wcrtomb@plt+0x25c4c>  // b.plast
  42ab7c:	add	x1, x0, #0x1
  42ab80:	str	x1, [x29, #104]
  42ab84:	strb	wzr, [x0]
  42ab88:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42ab8c:	mov	x2, x23
  42ab90:	add	x1, x1, #0xcfa
  42ab94:	mov	x0, x20
  42ab98:	bl	4431a0 <_obstack_memory_used@@Base+0xb520>
  42ab9c:	ldr	w22, [x19, #8]
  42aba0:	adrp	x23, 42a000 <wcrtomb@plt+0x250b0>
  42aba4:	ldr	x21, [x19]
  42aba8:	add	x23, x23, #0x700
  42abac:	cbnz	w22, 42abec <wcrtomb@plt+0x25c9c>
  42abb0:	ldr	w23, [x19, #8]
  42abb4:	adrp	x24, 44d000 <_obstack_memory_used@@Base+0x15380>
  42abb8:	ldr	x21, [x19]
  42abbc:	adrp	x25, 44d000 <_obstack_memory_used@@Base+0x15380>
  42abc0:	add	x24, x24, #0xd19
  42abc4:	add	x25, x25, #0xd0e
  42abc8:	cbnz	w23, 42ac10 <wcrtomb@plt+0x25cc0>
  42abcc:	mov	sp, x29
  42abd0:	ldp	x19, x20, [sp, #16]
  42abd4:	ldp	x21, x22, [sp, #32]
  42abd8:	ldp	x23, x24, [sp, #48]
  42abdc:	ldp	x25, x26, [sp, #64]
  42abe0:	ldp	x27, x28, [sp, #80]
  42abe4:	ldp	x29, x30, [sp], #112
  42abe8:	ret
  42abec:	ldr	x0, [x21, #40]
  42abf0:	mov	x3, x20
  42abf4:	mov	x1, x23
  42abf8:	sub	w22, w22, #0x1
  42abfc:	ldr	x2, [x0, #48]
  42ac00:	mov	x0, x21
  42ac04:	add	x21, x21, #0x38
  42ac08:	bl	42a44c <wcrtomb@plt+0x254fc>
  42ac0c:	b	42abac <wcrtomb@plt+0x25c5c>
  42ac10:	ldr	x0, [x21, #40]
  42ac14:	ldr	x22, [x21]
  42ac18:	ldr	w26, [x21, #8]
  42ac1c:	ldr	x27, [x0, #48]
  42ac20:	mov	x19, x22
  42ac24:	cbnz	w26, 42ac34 <wcrtomb@plt+0x25ce4>
  42ac28:	add	x21, x21, #0x38
  42ac2c:	sub	w23, w23, #0x1
  42ac30:	b	42abc8 <wcrtomb@plt+0x25c78>
  42ac34:	ldr	x2, [x19]
  42ac38:	cbz	x2, 42ac90 <wcrtomb@plt+0x25d40>
  42ac3c:	ldr	w0, [x19, #24]
  42ac40:	tst	x0, #0x4
  42ac44:	csel	x22, x22, x19, ne  // ne = any
  42ac48:	tbnz	w0, #1, 42ac90 <wcrtomb@plt+0x25d40>
  42ac4c:	ldr	x1, [x19, #16]
  42ac50:	ldr	w28, [x22, #24]
  42ac54:	orr	w28, w0, w28
  42ac58:	cbnz	x1, 42ac60 <wcrtomb@plt+0x25d10>
  42ac5c:	ldr	x1, [x22, #16]
  42ac60:	tbnz	w28, #4, 42ac90 <wcrtomb@plt+0x25d40>
  42ac64:	cbz	x1, 42aca4 <wcrtomb@plt+0x25d54>
  42ac68:	mov	w2, #0x5                   	// #5
  42ac6c:	mov	x0, x27
  42ac70:	bl	404d00 <dcgettext@plt>
  42ac74:	mov	x3, x0
  42ac78:	ldr	x2, [x19]
  42ac7c:	tbz	w28, #0, 42ac9c <wcrtomb@plt+0x25d4c>
  42ac80:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42ac84:	add	x1, x1, #0xd01
  42ac88:	mov	x0, x20
  42ac8c:	bl	4431a0 <_obstack_memory_used@@Base+0xb520>
  42ac90:	add	x19, x19, #0x30
  42ac94:	sub	w26, w26, #0x1
  42ac98:	b	42ac24 <wcrtomb@plt+0x25cd4>
  42ac9c:	mov	x1, x25
  42aca0:	b	42ac88 <wcrtomb@plt+0x25d38>
  42aca4:	mov	x1, x24
  42aca8:	mov	x0, x20
  42acac:	bl	4431a0 <_obstack_memory_used@@Base+0xb520>
  42acb0:	b	42ac90 <wcrtomb@plt+0x25d40>
  42acb4:	stp	x29, x30, [sp, #-48]!
  42acb8:	mov	x29, sp
  42acbc:	stp	x19, x20, [sp, #16]
  42acc0:	mov	x20, x0
  42acc4:	str	x21, [sp, #32]
  42acc8:	cbz	x2, 42ad0c <wcrtomb@plt+0x25dbc>
  42accc:	ldr	x0, [x2, #40]
  42acd0:	mov	x19, x2
  42acd4:	cbz	x0, 42ad0c <wcrtomb@plt+0x25dbc>
  42acd8:	mov	w21, w1
  42acdc:	mov	x0, x2
  42ace0:	mov	x1, x3
  42ace4:	bl	42d4a0 <argp_parse@@Base+0x8f0>
  42ace8:	mov	x1, x20
  42acec:	mov	x2, x0
  42acf0:	mov	w0, w21
  42acf4:	ldr	x21, [sp, #32]
  42acf8:	ldr	x3, [x19, #40]
  42acfc:	ldp	x19, x20, [sp, #16]
  42ad00:	mov	x16, x3
  42ad04:	ldp	x29, x30, [sp], #48
  42ad08:	br	x16
  42ad0c:	mov	x0, x20
  42ad10:	ldp	x19, x20, [sp, #16]
  42ad14:	ldr	x21, [sp, #32]
  42ad18:	ldp	x29, x30, [sp], #48
  42ad1c:	ret
  42ad20:	stp	x29, x30, [sp, #-112]!
  42ad24:	mov	x29, sp
  42ad28:	stp	x19, x20, [sp, #16]
  42ad2c:	mov	x19, x0
  42ad30:	mov	w20, w3
  42ad34:	stp	x21, x22, [sp, #32]
  42ad38:	mov	x21, x2
  42ad3c:	stp	x25, x26, [sp, #64]
  42ad40:	mov	x25, x1
  42ad44:	ldr	x1, [x0, #16]
  42ad48:	stp	x23, x24, [sp, #48]
  42ad4c:	mov	x23, x4
  42ad50:	ldr	x22, [x0, #32]
  42ad54:	stp	x27, x28, [sp, #80]
  42ad58:	ldr	x0, [x0, #48]
  42ad5c:	ldr	x24, [x2]
  42ad60:	mov	w2, #0x5                   	// #5
  42ad64:	bl	404d00 <dcgettext@plt>
  42ad68:	mov	x26, x0
  42ad6c:	mov	w1, #0x6                   	// #6
  42ad70:	mov	x3, x25
  42ad74:	mov	x2, x19
  42ad78:	movk	w1, #0x200, lsl #16
  42ad7c:	bl	42acb4 <wcrtomb@plt+0x25d64>
  42ad80:	cbz	x0, 42ae8c <wcrtomb@plt+0x25f3c>
  42ad84:	mov	x27, x0
  42ad88:	mov	w1, #0xa                   	// #10
  42ad8c:	bl	404cf0 <strchrnul@plt>
  42ad90:	mov	x19, x0
  42ad94:	ldrb	w0, [x0]
  42ad98:	cbz	w0, 42ae74 <wcrtomb@plt+0x25f24>
  42ad9c:	ldrb	w4, [x24]
  42ada0:	mov	x3, x27
  42ada4:	mov	w28, #0x0                   	// #0
  42ada8:	add	x2, x19, #0x1
  42adac:	cmp	w4, w28
  42adb0:	b.gt	42ae48 <wcrtomb@plt+0x25ef8>
  42adb4:	ldr	x0, [x21]
  42adb8:	mov	w28, #0x1                   	// #1
  42adbc:	add	x0, x0, #0x1
  42adc0:	str	x0, [x21]
  42adc4:	add	x1, x19, #0x1
  42adc8:	mov	x0, x23
  42adcc:	sub	x1, x1, x3
  42add0:	str	x3, [sp, #96]
  42add4:	bl	42a5d0 <wcrtomb@plt+0x25680>
  42add8:	ldr	x3, [sp, #96]
  42addc:	mov	x0, x23
  42ade0:	sub	x2, x19, x3
  42ade4:	mov	x1, x3
  42ade8:	bl	443294 <_obstack_memory_used@@Base+0xb614>
  42adec:	cmp	x26, x27
  42adf0:	b.eq	42adfc <wcrtomb@plt+0x25eac>  // b.none
  42adf4:	mov	x0, x27
  42adf8:	bl	404ae0 <free@plt>
  42adfc:	cbnz	x22, 42ae98 <wcrtomb@plt+0x25f48>
  42ae00:	cmp	w20, #0x0
  42ae04:	csel	w28, w28, wzr, ne  // ne = any
  42ae08:	cbz	w28, 42ae24 <wcrtomb@plt+0x25ed4>
  42ae0c:	ldrb	w1, [x19]
  42ae10:	ldrb	w0, [x24]
  42ae14:	cbz	w1, 42ae80 <wcrtomb@plt+0x25f30>
  42ae18:	add	w0, w0, #0x1
  42ae1c:	mov	w20, #0x0                   	// #0
  42ae20:	strb	w0, [x24]
  42ae24:	cmp	w20, #0x0
  42ae28:	cset	w0, eq  // eq = none
  42ae2c:	ldp	x19, x20, [sp, #16]
  42ae30:	ldp	x21, x22, [sp, #32]
  42ae34:	ldp	x23, x24, [sp, #48]
  42ae38:	ldp	x25, x26, [sp, #64]
  42ae3c:	ldp	x27, x28, [sp, #80]
  42ae40:	ldp	x29, x30, [sp], #112
  42ae44:	ret
  42ae48:	mov	x0, x2
  42ae4c:	mov	w1, #0xa                   	// #10
  42ae50:	str	x2, [sp, #96]
  42ae54:	add	w28, w28, #0x1
  42ae58:	str	w4, [sp, #108]
  42ae5c:	bl	404cf0 <strchrnul@plt>
  42ae60:	ldr	x2, [sp, #96]
  42ae64:	mov	x19, x0
  42ae68:	ldr	w4, [sp, #108]
  42ae6c:	mov	x3, x2
  42ae70:	b	42ada8 <wcrtomb@plt+0x25e58>
  42ae74:	mov	x3, x27
  42ae78:	mov	w28, #0x0                   	// #0
  42ae7c:	b	42adc4 <wcrtomb@plt+0x25e74>
  42ae80:	cbz	w0, 42ae24 <wcrtomb@plt+0x25ed4>
  42ae84:	strb	wzr, [x24]
  42ae88:	b	42ae24 <wcrtomb@plt+0x25ed4>
  42ae8c:	cbz	x22, 42ae24 <wcrtomb@plt+0x25ed4>
  42ae90:	mov	x19, #0x0                   	// #0
  42ae94:	mov	w28, #0x0                   	// #0
  42ae98:	ldr	x0, [x22]
  42ae9c:	cbz	x0, 42ae00 <wcrtomb@plt+0x25eb0>
  42aea0:	mov	w3, w20
  42aea4:	mov	x4, x23
  42aea8:	mov	x2, x21
  42aeac:	mov	x1, x25
  42aeb0:	bl	42ad20 <wcrtomb@plt+0x25dd0>
  42aeb4:	cmp	w0, #0x0
  42aeb8:	add	x22, x22, #0x20
  42aebc:	cset	w20, eq  // eq = none
  42aec0:	b	42ae98 <wcrtomb@plt+0x25f48>
  42aec4:	stp	x29, x30, [sp, #-48]!
  42aec8:	mov	x29, sp
  42aecc:	stp	x19, x20, [sp, #16]
  42aed0:	mov	x20, x1
  42aed4:	mov	x1, x0
  42aed8:	mov	x19, x2
  42aedc:	mov	w2, #0x5                   	// #5
  42aee0:	ldr	x0, [x20, #48]
  42aee4:	stp	x21, x22, [sp, #32]
  42aee8:	bl	404d00 <dcgettext@plt>
  42aeec:	mov	x22, x0
  42aef0:	ldr	x3, [x19, #32]
  42aef4:	mov	w1, #0x3                   	// #3
  42aef8:	mov	x2, x20
  42aefc:	movk	w1, #0x200, lsl #16
  42af00:	bl	42acb4 <wcrtomb@plt+0x25d64>
  42af04:	mov	x20, x0
  42af08:	cbz	x0, 42af88 <wcrtomb@plt+0x26038>
  42af0c:	ldrb	w0, [x0]
  42af10:	cbz	w0, 42af7c <wcrtomb@plt+0x2602c>
  42af14:	ldr	x0, [x19, #16]
  42af18:	ldr	x0, [x0]
  42af1c:	cbz	x0, 42af2c <wcrtomb@plt+0x25fdc>
  42af20:	ldr	x0, [x19, #8]
  42af24:	mov	w1, #0xa                   	// #10
  42af28:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42af2c:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  42af30:	add	x21, x21, #0x3e0
  42af34:	ldr	x0, [x19, #8]
  42af38:	ldr	w1, [x21, #24]
  42af3c:	bl	42a58c <wcrtomb@plt+0x2563c>
  42af40:	ldrsw	x1, [x21, #24]
  42af44:	ldr	x0, [x19, #8]
  42af48:	bl	4433b4 <_obstack_memory_used@@Base+0xb734>
  42af4c:	ldrsw	x1, [x21, #24]
  42af50:	ldr	x0, [x19, #8]
  42af54:	bl	443434 <_obstack_memory_used@@Base+0xb7b4>
  42af58:	ldr	x0, [x19, #8]
  42af5c:	mov	x1, x20
  42af60:	bl	443308 <_obstack_memory_used@@Base+0xb688>
  42af64:	ldr	x0, [x19, #8]
  42af68:	mov	x1, #0x0                   	// #0
  42af6c:	bl	4433b4 <_obstack_memory_used@@Base+0xb734>
  42af70:	ldr	x0, [x19, #8]
  42af74:	mov	w1, #0xa                   	// #10
  42af78:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42af7c:	ldr	x0, [x19, #16]
  42af80:	mov	w1, #0x1                   	// #1
  42af84:	str	w1, [x0, #8]
  42af88:	cmp	x22, x20
  42af8c:	b.eq	42afa4 <wcrtomb@plt+0x26054>  // b.none
  42af90:	mov	x0, x20
  42af94:	ldp	x19, x20, [sp, #16]
  42af98:	ldp	x21, x22, [sp, #32]
  42af9c:	ldp	x29, x30, [sp], #48
  42afa0:	b	404ae0 <free@plt>
  42afa4:	ldp	x19, x20, [sp, #16]
  42afa8:	ldp	x21, x22, [sp, #32]
  42afac:	ldp	x29, x30, [sp], #48
  42afb0:	ret
  42afb4:	stp	x29, x30, [sp, #-48]!
  42afb8:	mov	x29, sp
  42afbc:	stp	x19, x20, [sp, #16]
  42afc0:	mov	x19, x1
  42afc4:	stp	x21, x22, [sp, #32]
  42afc8:	mov	w22, w0
  42afcc:	ldr	x0, [x1, #8]
  42afd0:	ldr	w1, [x1, #24]
  42afd4:	cbz	w1, 42b088 <wcrtomb@plt+0x26138>
  42afd8:	ldr	x2, [x19, #16]
  42afdc:	ldr	x1, [x19]
  42afe0:	ldr	x21, [x2]
  42afe4:	ldr	w2, [x2, #8]
  42afe8:	ldr	x20, [x1, #32]
  42afec:	cbz	w2, 42b00c <wcrtomb@plt+0x260bc>
  42aff0:	cbz	x21, 42b00c <wcrtomb@plt+0x260bc>
  42aff4:	ldr	w2, [x1, #24]
  42aff8:	ldr	w1, [x21, #24]
  42affc:	cmp	w2, w1
  42b000:	b.eq	42b00c <wcrtomb@plt+0x260bc>  // b.none
  42b004:	mov	w1, #0xa                   	// #10
  42b008:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42b00c:	cbz	x20, 42b030 <wcrtomb@plt+0x260e0>
  42b010:	ldr	x0, [x20]
  42b014:	cbz	x0, 42b030 <wcrtomb@plt+0x260e0>
  42b018:	ldrb	w1, [x0]
  42b01c:	cbz	w1, 42b030 <wcrtomb@plt+0x260e0>
  42b020:	cbz	x21, 42b064 <wcrtomb@plt+0x26114>
  42b024:	ldr	x1, [x21, #32]
  42b028:	cmp	x1, x20
  42b02c:	b.ne	42b050 <wcrtomb@plt+0x26100>  // b.any
  42b030:	str	wzr, [x19, #24]
  42b034:	mov	w1, w22
  42b038:	ldr	x0, [x19, #8]
  42b03c:	ldp	x19, x20, [sp, #16]
  42b040:	ldp	x21, x22, [sp, #32]
  42b044:	ldp	x29, x30, [sp], #48
  42b048:	b	42a58c <wcrtomb@plt+0x2563c>
  42b04c:	ldr	x1, [x1, #16]
  42b050:	cmp	x1, #0x0
  42b054:	ccmp	x20, x1, #0x4, ne  // ne = any
  42b058:	b.ne	42b04c <wcrtomb@plt+0x260fc>  // b.any
  42b05c:	cmp	x20, x1
  42b060:	b.eq	42b030 <wcrtomb@plt+0x260e0>  // b.none
  42b064:	ldr	x1, [x19, #8]
  42b068:	mov	x2, x19
  42b06c:	ldr	x21, [x1, #24]
  42b070:	ldr	x1, [x20, #24]
  42b074:	bl	42aec4 <wcrtomb@plt+0x25f74>
  42b078:	ldr	x0, [x19, #8]
  42b07c:	sxtw	x1, w21
  42b080:	bl	443434 <_obstack_memory_used@@Base+0xb7b4>
  42b084:	b	42b030 <wcrtomb@plt+0x260e0>
  42b088:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b08c:	add	x1, x1, #0xd21
  42b090:	bl	443308 <_obstack_memory_used@@Base+0xb688>
  42b094:	b	42b034 <wcrtomb@plt+0x260e4>
  42b098:	stp	x29, x30, [sp, #-64]!
  42b09c:	mov	x29, sp
  42b0a0:	stp	x21, x22, [sp, #32]
  42b0a4:	mov	x22, x1
  42b0a8:	ldr	w21, [x0, #8]
  42b0ac:	stp	x19, x20, [sp, #16]
  42b0b0:	ldr	x19, [x0]
  42b0b4:	str	x23, [sp, #48]
  42b0b8:	cbnz	w21, 42b0d0 <wcrtomb@plt+0x26180>
  42b0bc:	ldp	x19, x20, [sp, #16]
  42b0c0:	ldp	x21, x22, [sp, #32]
  42b0c4:	ldr	x23, [sp, #48]
  42b0c8:	ldp	x29, x30, [sp], #64
  42b0cc:	ret
  42b0d0:	ldr	w23, [x19, #8]
  42b0d4:	ldr	x20, [x19]
  42b0d8:	cbnz	w23, 42b0e8 <wcrtomb@plt+0x26198>
  42b0dc:	sub	w21, w21, #0x1
  42b0e0:	add	x19, x19, #0x38
  42b0e4:	b	42b0b8 <wcrtomb@plt+0x26168>
  42b0e8:	ldr	x0, [x20]
  42b0ec:	cbz	x0, 42b104 <wcrtomb@plt+0x261b4>
  42b0f0:	ldr	w1, [x20, #24]
  42b0f4:	tbnz	w1, #1, 42b104 <wcrtomb@plt+0x261b4>
  42b0f8:	mov	x1, x22
  42b0fc:	bl	404a30 <strcmp@plt>
  42b100:	cbz	w0, 42b110 <wcrtomb@plt+0x261c0>
  42b104:	add	x20, x20, #0x30
  42b108:	sub	w23, w23, #0x1
  42b10c:	b	42b0d8 <wcrtomb@plt+0x26188>
  42b110:	mov	w0, #0xffffffff            	// #-1
  42b114:	str	w0, [x19, #24]
  42b118:	b	42b0bc <wcrtomb@plt+0x2616c>
  42b11c:	stp	x29, x30, [sp, #-144]!
  42b120:	mov	x29, sp
  42b124:	stp	x19, x20, [sp, #16]
  42b128:	stp	x21, x22, [sp, #32]
  42b12c:	stp	x23, x24, [sp, #48]
  42b130:	stp	x25, x26, [sp, #64]
  42b134:	mov	x25, x0
  42b138:	mov	x26, x1
  42b13c:	stp	x27, x28, [sp, #80]
  42b140:	ldr	x20, [x0]
  42b144:	ldr	x22, [x0, #32]
  42b148:	mov	x0, #0x20                  	// #32
  42b14c:	bl	4045f0 <malloc@plt>
  42b150:	cbnz	x0, 42b174 <wcrtomb@plt+0x26224>
  42b154:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b158:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b15c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b160:	add	x3, x3, #0xf44
  42b164:	add	x1, x1, #0xd24
  42b168:	add	x0, x0, #0xd30
  42b16c:	mov	w2, #0x1b9                 	// #441
  42b170:	bl	404e00 <__assert_fail@plt>
  42b174:	str	wzr, [x0, #8]
  42b178:	mov	x19, x0
  42b17c:	str	xzr, [x0, #24]
  42b180:	cbz	x20, 42b2c8 <wcrtomb@plt+0x26378>
  42b184:	ldr	w0, [x20, #24]
  42b188:	and	w24, w0, #0x4
  42b18c:	tbz	w0, #2, 42b234 <wcrtomb@plt+0x262e4>
  42b190:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b194:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b198:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b19c:	add	x3, x3, #0xf44
  42b1a0:	add	x1, x1, #0xd24
  42b1a4:	add	x0, x0, #0xd34
  42b1a8:	mov	w2, #0x1c3                 	// #451
  42b1ac:	b	42b170 <wcrtomb@plt+0x26220>
  42b1b0:	ldr	w0, [x21, #24]
  42b1b4:	tbnz	w0, #2, 42b1c0 <wcrtomb@plt+0x26270>
  42b1b8:	add	w1, w1, #0x1
  42b1bc:	str	w1, [x19, #8]
  42b1c0:	mov	x0, x21
  42b1c4:	bl	42d4f0 <argp_usage@@Base+0x10>
  42b1c8:	cmp	w0, #0x0
  42b1cc:	add	x21, x21, #0x30
  42b1d0:	cinc	w23, w23, ne  // ne = any
  42b1d4:	mov	x0, x21
  42b1d8:	bl	42d540 <argp_usage@@Base+0x60>
  42b1dc:	ldr	w1, [x19, #8]
  42b1e0:	cbz	w0, 42b1b0 <wcrtomb@plt+0x26260>
  42b1e4:	mov	w0, #0x38                  	// #56
  42b1e8:	umull	x0, w1, w0
  42b1ec:	bl	4045f0 <malloc@plt>
  42b1f0:	mov	x21, x0
  42b1f4:	str	x21, [x19]
  42b1f8:	add	w0, w23, #0x1
  42b1fc:	bl	4045f0 <malloc@plt>
  42b200:	str	x0, [x19, #16]
  42b204:	mov	x27, x0
  42b208:	cbz	x21, 42b214 <wcrtomb@plt+0x262c4>
  42b20c:	mov	x23, x0
  42b210:	cbnz	x0, 42b2b8 <wcrtomb@plt+0x26368>
  42b214:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b218:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b21c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b220:	add	x3, x3, #0xf44
  42b224:	add	x1, x1, #0xd24
  42b228:	add	x0, x0, #0xd44
  42b22c:	mov	w2, #0x1d1                 	// #465
  42b230:	b	42b170 <wcrtomb@plt+0x26220>
  42b234:	mov	x21, x20
  42b238:	mov	w23, #0x0                   	// #0
  42b23c:	b	42b1d4 <wcrtomb@plt+0x26284>
  42b240:	str	wzr, [x21, #8]
  42b244:	str	x20, [x21]
  42b248:	ldr	w0, [x20, #40]
  42b24c:	str	x23, [x21, #16]
  42b250:	cbnz	w0, 42b2fc <wcrtomb@plt+0x263ac>
  42b254:	ldr	x0, [x20]
  42b258:	cbnz	x0, 42b268 <wcrtomb@plt+0x26318>
  42b25c:	ldr	w0, [x20, #8]
  42b260:	cmp	w0, #0x0
  42b264:	cinc	w24, w24, eq  // eq = none
  42b268:	str	w24, [x21, #24]
  42b26c:	stp	x26, x25, [x21, #32]
  42b270:	ldr	w0, [x21, #8]
  42b274:	add	w0, w0, #0x1
  42b278:	str	w0, [x21, #8]
  42b27c:	mov	x0, x20
  42b280:	bl	42d4f0 <argp_usage@@Base+0x10>
  42b284:	cbz	w0, 42b29c <wcrtomb@plt+0x2634c>
  42b288:	ldrb	w1, [x20, #8]
  42b28c:	mov	x0, x27
  42b290:	cmp	x23, x0
  42b294:	b.hi	42b304 <wcrtomb@plt+0x263b4>  // b.pmore
  42b298:	strb	w1, [x23], #1
  42b29c:	add	x20, x20, #0x30
  42b2a0:	mov	x0, x20
  42b2a4:	bl	42d540 <argp_usage@@Base+0x60>
  42b2a8:	cbnz	w0, 42b2b4 <wcrtomb@plt+0x26364>
  42b2ac:	ldr	w0, [x20, #24]
  42b2b0:	tbnz	w0, #2, 42b270 <wcrtomb@plt+0x26320>
  42b2b4:	add	x21, x21, #0x38
  42b2b8:	mov	x0, x20
  42b2bc:	bl	42d540 <argp_usage@@Base+0x60>
  42b2c0:	cbz	w0, 42b240 <wcrtomb@plt+0x262f0>
  42b2c4:	strb	wzr, [x23]
  42b2c8:	cbz	x22, 42b2dc <wcrtomb@plt+0x2638c>
  42b2cc:	add	x0, x19, #0x18
  42b2d0:	str	x0, [sp, #104]
  42b2d4:	ldr	x21, [x22]
  42b2d8:	cbnz	x21, 42b318 <wcrtomb@plt+0x263c8>
  42b2dc:	mov	x0, x19
  42b2e0:	ldp	x19, x20, [sp, #16]
  42b2e4:	ldp	x21, x22, [sp, #32]
  42b2e8:	ldp	x23, x24, [sp, #48]
  42b2ec:	ldp	x25, x26, [sp, #64]
  42b2f0:	ldp	x27, x28, [sp, #80]
  42b2f4:	ldp	x29, x30, [sp], #144
  42b2f8:	ret
  42b2fc:	mov	w24, w0
  42b300:	b	42b268 <wcrtomb@plt+0x26318>
  42b304:	ldrb	w2, [x0]
  42b308:	cmp	w2, w1
  42b30c:	b.eq	42b29c <wcrtomb@plt+0x2634c>  // b.none
  42b310:	add	x0, x0, #0x1
  42b314:	b	42b290 <wcrtomb@plt+0x26340>
  42b318:	ldr	w24, [x22, #24]
  42b31c:	ldr	x23, [x22, #16]
  42b320:	cbnz	w24, 42b328 <wcrtomb@plt+0x263d8>
  42b324:	cbz	x23, 42b3d0 <wcrtomb@plt+0x26480>
  42b328:	ldr	x20, [x25, #32]
  42b32c:	mov	x0, #0x30                  	// #48
  42b330:	bl	4045f0 <malloc@plt>
  42b334:	mov	x1, x0
  42b338:	sub	x20, x22, x20
  42b33c:	asr	x20, x20, #5
  42b340:	cbz	x0, 42b36c <wcrtomb@plt+0x2641c>
  42b344:	str	x23, [x0]
  42b348:	stp	w20, w24, [x0, #8]
  42b34c:	stp	x26, x25, [x0, #16]
  42b350:	cbz	x26, 42b3c8 <wcrtomb@plt+0x26478>
  42b354:	ldr	w0, [x26, #32]
  42b358:	add	w0, w0, #0x1
  42b35c:	str	w0, [x1, #32]
  42b360:	ldr	x0, [x19, #24]
  42b364:	str	x1, [x19, #24]
  42b368:	str	x0, [x1, #40]
  42b36c:	mov	x0, x21
  42b370:	bl	42b11c <wcrtomb@plt+0x261cc>
  42b374:	mov	x27, x0
  42b378:	ldr	x0, [x19, #24]
  42b37c:	ldr	x1, [sp, #104]
  42b380:	cbnz	x0, 42b3d8 <wcrtomb@plt+0x26488>
  42b384:	ldr	w24, [x27, #8]
  42b388:	ldr	x0, [x27, #24]
  42b38c:	str	x0, [x1]
  42b390:	str	xzr, [x27, #24]
  42b394:	cbz	w24, 42b3b8 <wcrtomb@plt+0x26468>
  42b398:	ldr	w4, [x19, #8]
  42b39c:	cbnz	w4, 42b3e4 <wcrtomb@plt+0x26494>
  42b3a0:	ldr	x0, [x27]
  42b3a4:	str	x0, [x19]
  42b3a8:	ldr	x0, [x27, #16]
  42b3ac:	str	w24, [x19, #8]
  42b3b0:	str	x0, [x19, #16]
  42b3b4:	str	wzr, [x27, #8]
  42b3b8:	mov	x0, x27
  42b3bc:	add	x22, x22, #0x20
  42b3c0:	bl	42a7a0 <wcrtomb@plt+0x25850>
  42b3c4:	b	42b2d4 <wcrtomb@plt+0x26384>
  42b3c8:	mov	w0, #0x0                   	// #0
  42b3cc:	b	42b35c <wcrtomb@plt+0x2640c>
  42b3d0:	mov	x1, x26
  42b3d4:	b	42b36c <wcrtomb@plt+0x2641c>
  42b3d8:	add	x1, x0, #0x28
  42b3dc:	ldr	x0, [x0, #40]
  42b3e0:	b	42b380 <wcrtomb@plt+0x26430>
  42b3e4:	add	w0, w24, w4
  42b3e8:	mov	w1, #0x38                  	// #56
  42b3ec:	str	w0, [sp, #136]
  42b3f0:	str	w4, [sp, #112]
  42b3f4:	umull	x0, w0, w1
  42b3f8:	bl	4045f0 <malloc@plt>
  42b3fc:	mov	x23, x0
  42b400:	ldr	x28, [x19, #16]
  42b404:	mov	x0, x28
  42b408:	bl	404280 <strlen@plt>
  42b40c:	mov	w21, w0
  42b410:	ldr	x0, [x27, #16]
  42b414:	str	x0, [sp, #96]
  42b418:	bl	404280 <strlen@plt>
  42b41c:	add	x0, x0, #0x1
  42b420:	add	x0, x0, x21
  42b424:	bl	4045f0 <malloc@plt>
  42b428:	cmp	x23, #0x0
  42b42c:	ldr	w4, [sp, #112]
  42b430:	mov	x20, x0
  42b434:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  42b438:	b.ne	42b460 <wcrtomb@plt+0x26510>  // b.any
  42b43c:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b440:	add	x3, x3, #0xf44
  42b444:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b448:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b44c:	add	x3, x3, #0x9
  42b450:	add	x1, x1, #0xd24
  42b454:	add	x0, x0, #0xd67
  42b458:	mov	w2, #0x366                 	// #870
  42b45c:	b	42b170 <wcrtomb@plt+0x26220>
  42b460:	mov	w0, #0x38                  	// #56
  42b464:	str	w4, [sp, #120]
  42b468:	ldr	x5, [x19]
  42b46c:	umull	x2, w4, w0
  42b470:	mov	x0, x23
  42b474:	str	x5, [sp, #112]
  42b478:	mov	x1, x5
  42b47c:	bl	404b40 <mempcpy@plt>
  42b480:	mov	w1, #0x38                  	// #56
  42b484:	umull	x2, w24, w1
  42b488:	ldr	x1, [x27]
  42b48c:	bl	404200 <memcpy@plt>
  42b490:	mov	x2, x21
  42b494:	mov	x1, x28
  42b498:	mov	x0, x20
  42b49c:	bl	404200 <memcpy@plt>
  42b4a0:	ldr	w4, [sp, #120]
  42b4a4:	mov	x1, x23
  42b4a8:	ldr	x5, [sp, #112]
  42b4ac:	mov	w2, w4
  42b4b0:	ldr	x0, [x1, #16]
  42b4b4:	subs	w2, w2, #0x1
  42b4b8:	add	x1, x1, #0x38
  42b4bc:	sub	x0, x0, x28
  42b4c0:	add	x0, x20, x0
  42b4c4:	stur	x0, [x1, #-40]
  42b4c8:	b.ne	42b4b0 <wcrtomb@plt+0x26560>  // b.any
  42b4cc:	sub	w4, w4, #0x1
  42b4d0:	mov	x28, #0x38                  	// #56
  42b4d4:	add	x1, x20, x21
  42b4d8:	mov	x21, x1
  42b4dc:	madd	x28, x4, x28, x28
  42b4e0:	add	x28, x23, x28
  42b4e4:	ldr	w6, [x28, #8]
  42b4e8:	ldr	x2, [x28]
  42b4ec:	str	x21, [x28, #16]
  42b4f0:	cbnz	w6, 42b528 <wcrtomb@plt+0x265d8>
  42b4f4:	add	x28, x28, #0x38
  42b4f8:	subs	w24, w24, #0x1
  42b4fc:	b.ne	42b4e4 <wcrtomb@plt+0x26594>  // b.any
  42b500:	strb	wzr, [x21]
  42b504:	mov	x0, x5
  42b508:	bl	404ae0 <free@plt>
  42b50c:	ldr	x0, [x19, #16]
  42b510:	bl	404ae0 <free@plt>
  42b514:	str	x23, [x19]
  42b518:	ldr	w0, [sp, #136]
  42b51c:	str	w0, [x19, #8]
  42b520:	str	x20, [x19, #16]
  42b524:	b	42b3b8 <wcrtomb@plt+0x26468>
  42b528:	mov	x0, x2
  42b52c:	stp	x2, x5, [sp, #112]
  42b530:	str	x1, [sp, #128]
  42b534:	str	w6, [sp, #140]
  42b538:	bl	42d4f0 <argp_usage@@Base+0x10>
  42b53c:	ldr	w6, [sp, #140]
  42b540:	ldp	x2, x5, [sp, #112]
  42b544:	ldr	x1, [sp, #128]
  42b548:	cbz	w0, 42b590 <wcrtomb@plt+0x26640>
  42b54c:	ldr	x0, [sp, #96]
  42b550:	ldrb	w4, [x0]
  42b554:	ldr	w0, [x2, #8]
  42b558:	cmp	w4, w0
  42b55c:	b.ne	42b590 <wcrtomb@plt+0x26640>  // b.any
  42b560:	mov	x0, x20
  42b564:	b	42b578 <wcrtomb@plt+0x26628>
  42b568:	ldrb	w7, [x0]
  42b56c:	cmp	w7, w4
  42b570:	b.eq	42b584 <wcrtomb@plt+0x26634>  // b.none
  42b574:	add	x0, x0, #0x1
  42b578:	cmp	x1, x0
  42b57c:	b.hi	42b568 <wcrtomb@plt+0x26618>  // b.pmore
  42b580:	strb	w4, [x21], #1
  42b584:	ldr	x0, [sp, #96]
  42b588:	add	x0, x0, #0x1
  42b58c:	str	x0, [sp, #96]
  42b590:	add	x2, x2, #0x30
  42b594:	sub	w6, w6, #0x1
  42b598:	b	42b4f0 <wcrtomb@plt+0x265a0>
  42b59c:	stp	x29, x30, [sp, #-80]!
  42b5a0:	mov	x29, sp
  42b5a4:	stp	x19, x20, [sp, #16]
  42b5a8:	mov	x19, x1
  42b5ac:	ldr	w4, [x0, #24]
  42b5b0:	ldr	x3, [x0, #32]
  42b5b4:	stp	x21, x22, [sp, #32]
  42b5b8:	ldr	w1, [x1, #24]
  42b5bc:	ldr	x2, [x19, #32]
  42b5c0:	str	x23, [sp, #48]
  42b5c4:	cmp	x3, x2
  42b5c8:	b.eq	42b670 <wcrtomb@plt+0x26720>  // b.none
  42b5cc:	cbnz	x3, 42b5ec <wcrtomb@plt+0x2669c>
  42b5d0:	mov	x0, x2
  42b5d4:	ldr	x2, [x2, #16]
  42b5d8:	cbnz	x2, 42b5d0 <wcrtomb@plt+0x26680>
  42b5dc:	ldr	w1, [x0, #12]
  42b5e0:	mov	w2, #0xffffffff            	// #-1
  42b5e4:	mov	w0, w4
  42b5e8:	b	42b65c <wcrtomb@plt+0x2670c>
  42b5ec:	cbz	x2, 42b648 <wcrtomb@plt+0x266f8>
  42b5f0:	ldr	w0, [x2, #32]
  42b5f4:	ldr	w4, [x3, #32]
  42b5f8:	mov	x1, x3
  42b5fc:	ldr	x3, [x3, #16]
  42b600:	cmp	w4, w0
  42b604:	b.gt	42b5f4 <wcrtomb@plt+0x266a4>
  42b608:	ldr	w3, [x2, #32]
  42b60c:	mov	x0, x2
  42b610:	ldr	x2, [x2, #16]
  42b614:	cmp	w4, w3
  42b618:	b.lt	42b608 <wcrtomb@plt+0x266b8>  // b.tstop
  42b61c:	mov	x3, x1
  42b620:	mov	x4, x0
  42b624:	ldr	x1, [x1, #16]
  42b628:	ldr	x0, [x0, #16]
  42b62c:	cmp	x1, x0
  42b630:	b.ne	42b61c <wcrtomb@plt+0x266cc>  // b.any
  42b634:	ldp	w2, w1, [x4, #8]
  42b638:	ldr	w0, [x3, #8]
  42b63c:	sub	w2, w2, w0
  42b640:	ldr	w0, [x3, #12]
  42b644:	b	42b65c <wcrtomb@plt+0x2670c>
  42b648:	mov	x0, x3
  42b64c:	ldr	x3, [x3, #16]
  42b650:	cbnz	x3, 42b648 <wcrtomb@plt+0x266f8>
  42b654:	ldr	w0, [x0, #12]
  42b658:	mov	w2, #0x1                   	// #1
  42b65c:	ldp	x19, x20, [sp, #16]
  42b660:	ldp	x21, x22, [sp, #32]
  42b664:	ldr	x23, [sp, #48]
  42b668:	ldp	x29, x30, [sp], #80
  42b66c:	b	42a560 <wcrtomb@plt+0x25610>
  42b670:	cmp	w4, w1
  42b674:	b.ne	42b7a0 <wcrtomb@plt+0x26850>  // b.any
  42b678:	ldr	x1, [x0, #40]
  42b67c:	adrp	x20, 42a000 <wcrtomb@plt+0x250b0>
  42b680:	add	x20, x20, #0x508
  42b684:	mov	x21, x0
  42b688:	mov	x3, #0x0                   	// #0
  42b68c:	ldr	x2, [x1, #48]
  42b690:	mov	x1, x20
  42b694:	bl	42a44c <wcrtomb@plt+0x254fc>
  42b698:	mov	w22, w0
  42b69c:	ldr	x0, [x19, #40]
  42b6a0:	mov	x1, x20
  42b6a4:	mov	x3, #0x0                   	// #0
  42b6a8:	ldr	x2, [x0, #48]
  42b6ac:	mov	x0, x19
  42b6b0:	bl	42a44c <wcrtomb@plt+0x254fc>
  42b6b4:	mov	w23, w0
  42b6b8:	ldr	x0, [x21]
  42b6bc:	ldr	w5, [x0, #24]
  42b6c0:	ldr	x0, [x19]
  42b6c4:	and	w5, w5, #0x8
  42b6c8:	ldr	w20, [x0, #24]
  42b6cc:	mov	x0, x21
  42b6d0:	bl	42a530 <wcrtomb@plt+0x255e0>
  42b6d4:	mov	x4, x0
  42b6d8:	mov	x0, x19
  42b6dc:	str	x4, [sp, #64]
  42b6e0:	and	w20, w20, #0x8
  42b6e4:	bl	42a530 <wcrtomb@plt+0x255e0>
  42b6e8:	str	x0, [sp, #72]
  42b6ec:	cbz	w5, 42b7a8 <wcrtomb@plt+0x26858>
  42b6f0:	cbz	x4, 42b7a8 <wcrtomb@plt+0x26858>
  42b6f4:	add	x0, sp, #0x40
  42b6f8:	bl	42a690 <wcrtomb@plt+0x25740>
  42b6fc:	cmp	w0, #0x0
  42b700:	cset	w19, ne  // ne = any
  42b704:	cbz	w20, 42b720 <wcrtomb@plt+0x267d0>
  42b708:	ldr	x0, [sp, #72]
  42b70c:	cbz	x0, 42b748 <wcrtomb@plt+0x267f8>
  42b710:	add	x0, sp, #0x48
  42b714:	bl	42a690 <wcrtomb@plt+0x25740>
  42b718:	cmp	w0, #0x0
  42b71c:	cset	w20, ne  // ne = any
  42b720:	cmp	w20, w19
  42b724:	b.eq	42b7ac <wcrtomb@plt+0x2685c>  // b.none
  42b728:	sub	w0, w19, w20
  42b72c:	ldp	x19, x20, [sp, #16]
  42b730:	ldp	x21, x22, [sp, #32]
  42b734:	ldr	x23, [sp, #48]
  42b738:	ldp	x29, x30, [sp], #80
  42b73c:	ret
  42b740:	mov	w19, #0x0                   	// #0
  42b744:	b	42b708 <wcrtomb@plt+0x267b8>
  42b748:	mov	w20, #0x0                   	// #0
  42b74c:	b	42b720 <wcrtomb@plt+0x267d0>
  42b750:	cbnz	w22, 42b760 <wcrtomb@plt+0x26810>
  42b754:	ldr	x0, [sp, #64]
  42b758:	cbz	x0, 42b798 <wcrtomb@plt+0x26848>
  42b75c:	ldrb	w22, [x0]
  42b760:	cbnz	w23, 42b770 <wcrtomb@plt+0x26820>
  42b764:	ldr	x0, [sp, #72]
  42b768:	cbz	x0, 42b770 <wcrtomb@plt+0x26820>
  42b76c:	ldrb	w23, [x0]
  42b770:	bl	4044a0 <__ctype_tolower_loc@plt>
  42b774:	ldr	x2, [x0]
  42b778:	ubfiz	x1, x23, #2, #8
  42b77c:	ubfiz	x0, x22, #2, #8
  42b780:	ldr	w1, [x2, x1]
  42b784:	ldr	w0, [x2, x0]
  42b788:	subs	w0, w0, w1
  42b78c:	b.ne	42b72c <wcrtomb@plt+0x267dc>  // b.any
  42b790:	sub	w0, w23, w22
  42b794:	b	42b72c <wcrtomb@plt+0x267dc>
  42b798:	mov	w22, #0x0                   	// #0
  42b79c:	b	42b760 <wcrtomb@plt+0x26810>
  42b7a0:	mov	w2, #0x0                   	// #0
  42b7a4:	b	42b5e4 <wcrtomb@plt+0x26694>
  42b7a8:	cbnz	w20, 42b740 <wcrtomb@plt+0x267f0>
  42b7ac:	and	w22, w22, #0xff
  42b7b0:	and	w23, w23, #0xff
  42b7b4:	orr	w0, w23, w22
  42b7b8:	cbnz	w0, 42b750 <wcrtomb@plt+0x26800>
  42b7bc:	ldr	x0, [sp, #64]
  42b7c0:	cbz	x0, 42b754 <wcrtomb@plt+0x26804>
  42b7c4:	ldr	x1, [sp, #72]
  42b7c8:	cbz	x1, 42b754 <wcrtomb@plt+0x26804>
  42b7cc:	bl	4047f0 <strcasecmp@plt>
  42b7d0:	b	42b72c <wcrtomb@plt+0x267dc>

000000000042b7d4 <argp_failure@@Base>:
  42b7d4:	stp	x29, x30, [sp, #-496]!
  42b7d8:	mov	x29, sp
  42b7dc:	stp	x19, x20, [sp, #16]
  42b7e0:	mov	x20, x0
  42b7e4:	stp	x21, x22, [sp, #32]
  42b7e8:	mov	w22, w1
  42b7ec:	mov	w21, w2
  42b7f0:	str	x23, [sp, #48]
  42b7f4:	mov	x23, x3
  42b7f8:	str	q0, [sp, #336]
  42b7fc:	str	q1, [sp, #352]
  42b800:	str	q2, [sp, #368]
  42b804:	str	q3, [sp, #384]
  42b808:	str	q4, [sp, #400]
  42b80c:	str	q5, [sp, #416]
  42b810:	str	q6, [sp, #432]
  42b814:	str	q7, [sp, #448]
  42b818:	stp	x4, x5, [sp, #464]
  42b81c:	stp	x6, x7, [sp, #480]
  42b820:	cbz	x0, 42b93c <argp_failure@@Base+0x168>
  42b824:	ldr	w0, [x0, #28]
  42b828:	tbnz	w0, #1, 42b954 <argp_failure@@Base+0x180>
  42b82c:	ldr	x19, [x20, #72]
  42b830:	cbz	x19, 42b954 <argp_failure@@Base+0x180>
  42b834:	mov	x0, x19
  42b838:	bl	404320 <flockfile@plt>
  42b83c:	cbz	x20, 42b948 <argp_failure@@Base+0x174>
  42b840:	ldr	x0, [x20, #64]
  42b844:	mov	x1, x19
  42b848:	bl	404d20 <fputs_unlocked@plt>
  42b84c:	cbz	x23, 42b8b4 <argp_failure@@Base+0xe0>
  42b850:	add	x0, sp, #0x1f0
  42b854:	stp	x0, x0, [sp, #104]
  42b858:	add	x0, sp, #0x1d0
  42b85c:	str	x0, [sp, #120]
  42b860:	mov	w0, #0xffffffe0            	// #-32
  42b864:	str	w0, [sp, #128]
  42b868:	mov	w0, #0xffffff80            	// #-128
  42b86c:	mov	x1, x19
  42b870:	str	w0, [sp, #132]
  42b874:	mov	w0, #0x3a                  	// #58
  42b878:	bl	404500 <putc_unlocked@plt>
  42b87c:	mov	x1, x19
  42b880:	mov	w0, #0x20                  	// #32
  42b884:	bl	404500 <putc_unlocked@plt>
  42b888:	ldp	x0, x1, [sp, #120]
  42b88c:	stp	x0, x1, [sp, #80]
  42b890:	ldp	x2, x3, [sp, #104]
  42b894:	stp	x2, x3, [sp, #64]
  42b898:	stp	x2, x3, [sp, #136]
  42b89c:	add	x3, sp, #0x40
  42b8a0:	mov	x2, x23
  42b8a4:	stp	x0, x1, [sp, #152]
  42b8a8:	mov	x0, x19
  42b8ac:	mov	w1, #0x1                   	// #1
  42b8b0:	bl	404790 <__vfprintf_chk@plt>
  42b8b4:	cbz	w21, 42b910 <argp_failure@@Base+0x13c>
  42b8b8:	mov	x1, x19
  42b8bc:	mov	w0, #0x3a                  	// #58
  42b8c0:	bl	404500 <putc_unlocked@plt>
  42b8c4:	mov	x1, x19
  42b8c8:	mov	w0, #0x20                  	// #32
  42b8cc:	bl	404500 <putc_unlocked@plt>
  42b8d0:	add	x1, sp, #0x88
  42b8d4:	mov	w0, w21
  42b8d8:	mov	x2, #0xc8                  	// #200
  42b8dc:	bl	404780 <strerror_r@plt>
  42b8e0:	cbnz	x0, 42b908 <argp_failure@@Base+0x134>
  42b8e4:	mov	w0, w21
  42b8e8:	bl	4048a0 <strerror@plt>
  42b8ec:	cbnz	x0, 42b908 <argp_failure@@Base+0x134>
  42b8f0:	ldr	x0, [x20]
  42b8f4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b8f8:	mov	w2, #0x5                   	// #5
  42b8fc:	add	x1, x1, #0xd80
  42b900:	ldr	x0, [x0, #48]
  42b904:	bl	404d00 <dcgettext@plt>
  42b908:	mov	x1, x19
  42b90c:	bl	404d20 <fputs_unlocked@plt>
  42b910:	mov	x1, x19
  42b914:	mov	w0, #0xa                   	// #10
  42b918:	bl	404500 <putc_unlocked@plt>
  42b91c:	mov	x0, x19
  42b920:	bl	404620 <funlockfile@plt>
  42b924:	cbz	w22, 42b954 <argp_failure@@Base+0x180>
  42b928:	cbz	x20, 42b934 <argp_failure@@Base+0x160>
  42b92c:	ldr	w0, [x20, #28]
  42b930:	tbnz	w0, #5, 42b954 <argp_failure@@Base+0x180>
  42b934:	mov	w0, w22
  42b938:	bl	4042b0 <exit@plt>
  42b93c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42b940:	ldr	x19, [x0, #1160]
  42b944:	b	42b830 <argp_failure@@Base+0x5c>
  42b948:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42b94c:	ldr	x0, [x0, #1192]
  42b950:	b	42b844 <argp_failure@@Base+0x70>
  42b954:	ldp	x19, x20, [sp, #16]
  42b958:	ldp	x21, x22, [sp, #32]
  42b95c:	ldr	x23, [sp, #48]
  42b960:	ldp	x29, x30, [sp], #496
  42b964:	ret
  42b968:	cbz	x2, 42c4f8 <argp_failure@@Base+0xd24>
  42b96c:	stp	x29, x30, [sp, #-224]!
  42b970:	mov	x29, sp
  42b974:	stp	x21, x22, [sp, #32]
  42b978:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  42b97c:	add	x21, x21, #0x3e0
  42b980:	mov	x22, x4
  42b984:	stp	x19, x20, [sp, #16]
  42b988:	mov	x20, x1
  42b98c:	stp	x23, x24, [sp, #48]
  42b990:	mov	x24, x0
  42b994:	mov	x0, x2
  42b998:	stp	x25, x26, [sp, #64]
  42b99c:	mov	w25, w3
  42b9a0:	stp	x27, x28, [sp, #80]
  42b9a4:	mov	x27, x2
  42b9a8:	bl	404320 <flockfile@plt>
  42b9ac:	ldr	w0, [x21, #36]
  42b9b0:	cbnz	w0, 42bd2c <argp_failure@@Base+0x558>
  42b9b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b9b8:	add	x0, x0, #0xd95
  42b9bc:	bl	404e40 <getenv@plt>
  42b9c0:	mov	x28, x0
  42b9c4:	ldp	x0, x1, [x21]
  42b9c8:	stp	x0, x1, [x29, #184]
  42b9cc:	ldp	x0, x1, [x21, #16]
  42b9d0:	stp	x0, x1, [x29, #200]
  42b9d4:	ldr	x0, [x21, #32]
  42b9d8:	str	x0, [x29, #216]
  42b9dc:	cbz	x28, 42bd2c <argp_failure@@Base+0x558>
  42b9e0:	adrp	x23, 44d000 <_obstack_memory_used@@Base+0x15380>
  42b9e4:	add	x0, x23, #0xf44
  42b9e8:	str	x0, [x29, #144]
  42b9ec:	add	x0, x0, #0xa4
  42b9f0:	str	x0, [x29, #136]
  42b9f4:	ldrb	w0, [x28]
  42b9f8:	cbz	w0, 42bc78 <argp_failure@@Base+0x4a4>
  42b9fc:	bl	404a60 <__ctype_b_loc@plt>
  42ba00:	ldr	x26, [x0]
  42ba04:	b	42ba0c <argp_failure@@Base+0x238>
  42ba08:	add	x28, x28, #0x1
  42ba0c:	ldrb	w0, [x28]
  42ba10:	ldrb	w1, [x28]
  42ba14:	ldrh	w0, [x26, x0, lsl #1]
  42ba18:	tbnz	w0, #13, 42ba08 <argp_failure@@Base+0x234>
  42ba1c:	tbz	w0, #10, 42bc40 <argp_failure@@Base+0x46c>
  42ba20:	mov	x23, x28
  42ba24:	b	42ba2c <argp_failure@@Base+0x258>
  42ba28:	add	x23, x23, #0x1
  42ba2c:	ldrb	w2, [x23]
  42ba30:	ldrb	w0, [x23]
  42ba34:	ldrh	w2, [x26, x2, lsl #1]
  42ba38:	tbnz	w2, #3, 42ba28 <argp_failure@@Base+0x254>
  42ba3c:	cmp	w0, #0x2d
  42ba40:	b.eq	42ba28 <argp_failure@@Base+0x254>  // b.none
  42ba44:	cmp	w0, #0x5f
  42ba48:	b.eq	42ba28 <argp_failure@@Base+0x254>  // b.none
  42ba4c:	sub	x19, x23, x28
  42ba50:	ldrb	w2, [x23]
  42ba54:	ldrb	w0, [x23]
  42ba58:	ldrh	w2, [x26, x2, lsl #1]
  42ba5c:	tbnz	w2, #13, 42babc <argp_failure@@Base+0x2e8>
  42ba60:	cmp	w0, #0x2c
  42ba64:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  42ba68:	b.eq	42bac4 <argp_failure@@Base+0x2f0>  // b.none
  42ba6c:	cmp	w0, #0x3d
  42ba70:	b.ne	42ba84 <argp_failure@@Base+0x2b0>  // b.any
  42ba74:	ldrb	w0, [x23, #1]
  42ba78:	add	x23, x23, #0x1
  42ba7c:	ldrh	w0, [x26, x0, lsl #1]
  42ba80:	tbnz	w0, #13, 42ba74 <argp_failure@@Base+0x2a0>
  42ba84:	ldrb	w0, [x23]
  42ba88:	ldrh	w0, [x26, x0, lsl #1]
  42ba8c:	tbz	w0, #11, 42bbfc <argp_failure@@Base+0x428>
  42ba90:	mov	x0, x23
  42ba94:	bl	404590 <atoi@plt>
  42ba98:	mov	w4, w0
  42ba9c:	ldrb	w0, [x23, #1]!
  42baa0:	ldrh	w0, [x26, x0, lsl #1]
  42baa4:	tbnz	w0, #11, 42ba9c <argp_failure@@Base+0x2c8>
  42baa8:	ldrb	w0, [x23]
  42baac:	ldrh	w0, [x26, x0, lsl #1]
  42bab0:	tbnz	w0, #13, 42bbe8 <argp_failure@@Base+0x414>
  42bab4:	mov	w3, #0x0                   	// #0
  42bab8:	b	42baf4 <argp_failure@@Base+0x320>
  42babc:	add	x23, x23, #0x1
  42bac0:	b	42ba50 <argp_failure@@Base+0x27c>
  42bac4:	cmp	w1, #0x6e
  42bac8:	b.ne	42bbf0 <argp_failure@@Base+0x41c>  // b.any
  42bacc:	ldrb	w0, [x28, #1]
  42bad0:	cmp	w0, #0x6f
  42bad4:	b.ne	42bbf0 <argp_failure@@Base+0x41c>  // b.any
  42bad8:	ldrb	w0, [x28, #2]
  42badc:	cmp	w0, #0x2d
  42bae0:	b.ne	42bbf0 <argp_failure@@Base+0x41c>  // b.any
  42bae4:	add	x28, x28, #0x3
  42bae8:	sub	x19, x19, #0x3
  42baec:	mov	w4, #0x0                   	// #0
  42baf0:	mov	w3, #0x1                   	// #1
  42baf4:	mov	x0, #0x9                   	// #9
  42baf8:	str	x0, [x29, #152]
  42bafc:	ldr	x0, [x29, #144]
  42bb00:	add	x26, x0, #0x14
  42bb04:	mov	x0, x26
  42bb08:	str	w3, [x29, #120]
  42bb0c:	str	w4, [x29, #128]
  42bb10:	bl	404280 <strlen@plt>
  42bb14:	ldr	w3, [x29, #120]
  42bb18:	cmp	x0, x19
  42bb1c:	ldr	w4, [x29, #128]
  42bb20:	b.ne	42bc20 <argp_failure@@Base+0x44c>  // b.any
  42bb24:	mov	x2, x19
  42bb28:	mov	x1, x26
  42bb2c:	mov	x0, x28
  42bb30:	str	w3, [x29, #120]
  42bb34:	str	w4, [x29, #128]
  42bb38:	bl	4046a0 <strncmp@plt>
  42bb3c:	ldr	w3, [x29, #120]
  42bb40:	ldr	w4, [x29, #128]
  42bb44:	cbnz	w0, 42bc20 <argp_failure@@Base+0x44c>
  42bb48:	cbz	w3, 42bc10 <argp_failure@@Base+0x43c>
  42bb4c:	ldrb	w0, [x26, #14]
  42bb50:	cbnz	w0, 42bc10 <argp_failure@@Base+0x43c>
  42bb54:	cbz	x20, 42bc08 <argp_failure@@Base+0x434>
  42bb58:	ldr	x0, [x20]
  42bb5c:	ldr	x0, [x0, #48]
  42bb60:	mov	w2, #0x5                   	// #5
  42bb64:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bb68:	add	x1, x1, #0xda3
  42bb6c:	bl	404d00 <dcgettext@plt>
  42bb70:	mov	x3, x0
  42bb74:	mov	x5, x28
  42bb78:	mov	w4, w19
  42bb7c:	mov	x0, x20
  42bb80:	mov	w2, #0x0                   	// #0
  42bb84:	mov	w1, #0x0                   	// #0
  42bb88:	bl	42b7d4 <argp_failure@@Base>
  42bb8c:	ldr	x0, [x29, #136]
  42bb90:	cmp	x26, x0
  42bb94:	b.ne	42bbd0 <argp_failure@@Base+0x3fc>  // b.any
  42bb98:	cbz	x20, 42bc38 <argp_failure@@Base+0x464>
  42bb9c:	ldr	x0, [x20]
  42bba0:	ldr	x0, [x0, #48]
  42bba4:	mov	w2, #0x5                   	// #5
  42bba8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bbac:	add	x1, x1, #0xdd2
  42bbb0:	bl	404d00 <dcgettext@plt>
  42bbb4:	mov	x3, x0
  42bbb8:	mov	x5, x28
  42bbbc:	mov	w4, w19
  42bbc0:	mov	x0, x20
  42bbc4:	mov	w2, #0x0                   	// #0
  42bbc8:	mov	w1, #0x0                   	// #0
  42bbcc:	bl	42b7d4 <argp_failure@@Base>
  42bbd0:	ldrb	w0, [x23]
  42bbd4:	cmp	w0, #0x2c
  42bbd8:	b.ne	42bbe0 <argp_failure@@Base+0x40c>  // b.any
  42bbdc:	add	x23, x23, #0x1
  42bbe0:	mov	x28, x23
  42bbe4:	b	42b9f4 <argp_failure@@Base+0x220>
  42bbe8:	add	x23, x23, #0x1
  42bbec:	b	42baa8 <argp_failure@@Base+0x2d4>
  42bbf0:	mov	w3, #0x1                   	// #1
  42bbf4:	mov	w4, w3
  42bbf8:	b	42baf4 <argp_failure@@Base+0x320>
  42bbfc:	mov	w3, #0x0                   	// #0
  42bc00:	mov	w4, #0x0                   	// #0
  42bc04:	b	42baf4 <argp_failure@@Base+0x320>
  42bc08:	mov	x0, #0x0                   	// #0
  42bc0c:	b	42bb60 <argp_failure@@Base+0x38c>
  42bc10:	ldrb	w0, [x26, #15]
  42bc14:	add	x1, x29, #0xb8
  42bc18:	str	w4, [x1, x0]
  42bc1c:	b	42bb8c <argp_failure@@Base+0x3b8>
  42bc20:	ldr	x0, [x29, #152]
  42bc24:	add	x26, x26, #0x10
  42bc28:	subs	x0, x0, #0x1
  42bc2c:	str	x0, [x29, #152]
  42bc30:	b.ne	42bb04 <argp_failure@@Base+0x330>  // b.any
  42bc34:	b	42bb8c <argp_failure@@Base+0x3b8>
  42bc38:	mov	x0, #0x0                   	// #0
  42bc3c:	b	42bba4 <argp_failure@@Base+0x3d0>
  42bc40:	cbz	w1, 42bcc8 <argp_failure@@Base+0x4f4>
  42bc44:	cbz	x20, 42bcc0 <argp_failure@@Base+0x4ec>
  42bc48:	ldr	x0, [x20]
  42bc4c:	ldr	x0, [x0, #48]
  42bc50:	mov	w2, #0x5                   	// #5
  42bc54:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bc58:	add	x1, x1, #0xdf8
  42bc5c:	bl	404d00 <dcgettext@plt>
  42bc60:	mov	x3, x0
  42bc64:	mov	x4, x28
  42bc68:	mov	x0, x20
  42bc6c:	mov	w2, #0x0                   	// #0
  42bc70:	mov	w1, #0x0                   	// #0
  42bc74:	bl	42b7d4 <argp_failure@@Base>
  42bc78:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bc7c:	ldr	w2, [x29, #216]
  42bc80:	add	x19, x19, #0xf44
  42bc84:	add	x3, x29, #0xb8
  42bc88:	add	x19, x19, #0x14
  42bc8c:	mov	x1, #0x9                   	// #9
  42bc90:	add	x19, x19, #0x10
  42bc94:	subs	x1, x1, #0x1
  42bc98:	b.ne	42bcd0 <argp_failure@@Base+0x4fc>  // b.any
  42bc9c:	ldp	x0, x1, [x29, #184]
  42bca0:	stp	x0, x1, [x21]
  42bca4:	ldp	x0, x1, [x29, #200]
  42bca8:	stp	x0, x1, [x21, #16]
  42bcac:	ldr	x0, [x29, #216]
  42bcb0:	str	x0, [x21, #32]
  42bcb4:	mov	w0, #0x1                   	// #1
  42bcb8:	str	w0, [x21, #36]
  42bcbc:	b	42bd2c <argp_failure@@Base+0x558>
  42bcc0:	mov	x0, #0x0                   	// #0
  42bcc4:	b	42bc50 <argp_failure@@Base+0x47c>
  42bcc8:	mov	x23, x28
  42bccc:	b	42bbe0 <argp_failure@@Base+0x40c>
  42bcd0:	ldrb	w0, [x19, #14]
  42bcd4:	cbnz	w0, 42bc90 <argp_failure@@Base+0x4bc>
  42bcd8:	ldrb	w0, [x19, #15]
  42bcdc:	cmp	w0, #0x20
  42bce0:	b.eq	42bc90 <argp_failure@@Base+0x4bc>  // b.none
  42bce4:	and	x0, x0, #0xff
  42bce8:	ldr	w0, [x3, x0]
  42bcec:	cmp	w0, w2
  42bcf0:	b.lt	42bc90 <argp_failure@@Base+0x4bc>  // b.tstop
  42bcf4:	ldr	x0, [x20]
  42bcf8:	mov	w2, #0x5                   	// #5
  42bcfc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bd00:	add	x1, x1, #0xe15
  42bd04:	ldr	x0, [x0, #48]
  42bd08:	bl	404d00 <dcgettext@plt>
  42bd0c:	mov	x3, x0
  42bd10:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bd14:	mov	x5, x19
  42bd18:	add	x4, x4, #0xe49
  42bd1c:	mov	x0, x20
  42bd20:	mov	w2, #0x0                   	// #0
  42bd24:	mov	w1, #0x0                   	// #0
  42bd28:	bl	42b7d4 <argp_failure@@Base>
  42bd2c:	ldrsw	x2, [x21, #32]
  42bd30:	mov	x0, x27
  42bd34:	mov	x3, #0x0                   	// #0
  42bd38:	mov	x1, #0x0                   	// #0
  42bd3c:	bl	442c28 <_obstack_memory_used@@Base+0xafa8>
  42bd40:	mov	x19, x0
  42bd44:	cbnz	x0, 42bd70 <argp_failure@@Base+0x59c>
  42bd48:	mov	x0, x27
  42bd4c:	bl	404620 <funlockfile@plt>
  42bd50:	mov	sp, x29
  42bd54:	ldp	x19, x20, [sp, #16]
  42bd58:	ldp	x21, x22, [sp, #32]
  42bd5c:	ldp	x23, x24, [sp, #48]
  42bd60:	ldp	x25, x26, [sp, #64]
  42bd64:	ldp	x27, x28, [sp, #80]
  42bd68:	ldp	x29, x30, [sp], #224
  42bd6c:	ret
  42bd70:	mov	w0, #0xb                   	// #11
  42bd74:	tst	w25, w0
  42bd78:	b.eq	42c0c8 <argp_failure@@Base+0x8f4>  // b.none
  42bd7c:	mov	x1, #0x0                   	// #0
  42bd80:	mov	x0, x24
  42bd84:	bl	42b11c <wcrtomb@plt+0x261cc>
  42bd88:	mov	x23, x0
  42bd8c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bd90:	add	x1, x1, #0xe51
  42bd94:	bl	42b098 <wcrtomb@plt+0x26148>
  42bd98:	mov	x0, x23
  42bd9c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42bda0:	add	x1, x1, #0x50
  42bda4:	bl	42b098 <wcrtomb@plt+0x26148>
  42bda8:	ldr	w1, [x23, #8]
  42bdac:	cbz	w1, 42bddc <argp_failure@@Base+0x608>
  42bdb0:	ldr	x0, [x23]
  42bdb4:	mov	x2, #0x0                   	// #0
  42bdb8:	mov	x4, #0x38                  	// #56
  42bdbc:	add	x3, x0, #0x30
  42bdc0:	cmp	w1, w2
  42bdc4:	b.hi	42c0b8 <argp_failure@@Base+0x8e4>  // b.pmore
  42bdc8:	adrp	x3, 42b000 <wcrtomb@plt+0x260b0>
  42bdcc:	mov	w1, w1
  42bdd0:	add	x3, x3, #0x59c
  42bdd4:	mov	x2, #0x38                  	// #56
  42bdd8:	bl	404450 <qsort@plt>
  42bddc:	tst	x25, #0x3
  42bde0:	b.eq	42c0ec <argp_failure@@Base+0x918>  // b.none
  42bde4:	mov	x0, x24
  42bde8:	bl	42a7f0 <wcrtomb@plt+0x258a0>
  42bdec:	mov	x2, x0
  42bdf0:	add	x0, x0, #0xf
  42bdf4:	and	x0, x0, #0xfffffffffffffff0
  42bdf8:	mov	w1, #0x0                   	// #0
  42bdfc:	sub	sp, sp, x0
  42be00:	adrp	x26, 448000 <_obstack_memory_used@@Base+0x10380>
  42be04:	mov	x28, sp
  42be08:	add	x26, x26, #0x627
  42be0c:	mov	x0, x28
  42be10:	bl	404700 <memset@plt>
  42be14:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42be18:	add	x0, x0, #0xe5d
  42be1c:	mov	w3, #0x1                   	// #1
  42be20:	str	x0, [x29, #136]
  42be24:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42be28:	add	x0, x0, #0xe56
  42be2c:	str	x0, [x29, #128]
  42be30:	ldrsw	x1, [x21, #28]
  42be34:	mov	x0, x19
  42be38:	str	w3, [x29, #144]
  42be3c:	bl	443434 <_obstack_memory_used@@Base+0xb7b4>
  42be40:	str	x0, [x29, #152]
  42be44:	ldr	w3, [x29, #144]
  42be48:	mov	w2, #0x5                   	// #5
  42be4c:	str	x28, [x29, #184]
  42be50:	cbz	w3, 42c0d0 <argp_failure@@Base+0x8fc>
  42be54:	ldr	x1, [x29, #128]
  42be58:	ldr	x0, [x24, #48]
  42be5c:	bl	404d00 <dcgettext@plt>
  42be60:	mov	x2, x0
  42be64:	mov	x3, x22
  42be68:	mov	x1, x26
  42be6c:	mov	x0, x19
  42be70:	bl	4431a0 <_obstack_memory_used@@Base+0xb520>
  42be74:	ldrsw	x1, [x21, #28]
  42be78:	mov	x0, x19
  42be7c:	bl	4433b4 <_obstack_memory_used@@Base+0xb734>
  42be80:	str	x0, [x29, #144]
  42be84:	tbz	w25, #1, 42c0d8 <argp_failure@@Base+0x904>
  42be88:	ldr	w0, [x23, #8]
  42be8c:	cbz	w0, 42beb0 <argp_failure@@Base+0x6dc>
  42be90:	ldr	x0, [x24, #48]
  42be94:	mov	w2, #0x5                   	// #5
  42be98:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42be9c:	add	x1, x1, #0xe64
  42bea0:	bl	404d00 <dcgettext@plt>
  42bea4:	mov	x1, x0
  42bea8:	mov	x0, x19
  42beac:	bl	443308 <_obstack_memory_used@@Base+0xb688>
  42beb0:	mov	w3, #0x1                   	// #1
  42beb4:	mov	x4, x19
  42beb8:	add	x2, x29, #0xb8
  42bebc:	mov	x1, x20
  42bec0:	mov	x0, x24
  42bec4:	bl	42ad20 <wcrtomb@plt+0x25dd0>
  42bec8:	ldrsw	x1, [x29, #152]
  42becc:	mov	w2, w0
  42bed0:	mov	x0, x19
  42bed4:	str	w2, [x29, #120]
  42bed8:	bl	443434 <_obstack_memory_used@@Base+0xb7b4>
  42bedc:	ldrsw	x1, [x29, #144]
  42bee0:	mov	x0, x19
  42bee4:	bl	4433b4 <_obstack_memory_used@@Base+0xb734>
  42bee8:	mov	x0, x19
  42beec:	mov	w1, #0xa                   	// #10
  42bef0:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42bef4:	ldr	w2, [x29, #120]
  42bef8:	mov	w3, #0x0                   	// #0
  42befc:	cbnz	w2, 42be30 <argp_failure@@Base+0x65c>
  42bf00:	mov	w26, #0x1                   	// #1
  42bf04:	tbz	w25, #4, 42bf28 <argp_failure@@Base+0x754>
  42bf08:	mov	x5, x19
  42bf0c:	mov	x1, x20
  42bf10:	mov	x0, x24
  42bf14:	mov	w4, #0x1                   	// #1
  42bf18:	mov	w3, #0x0                   	// #0
  42bf1c:	mov	w2, #0x0                   	// #0
  42bf20:	bl	42a84c <wcrtomb@plt+0x258fc>
  42bf24:	orr	w26, w26, w0
  42bf28:	tbz	w25, #2, 42bf58 <argp_failure@@Base+0x784>
  42bf2c:	ldr	x0, [x24, #48]
  42bf30:	mov	w2, #0x5                   	// #5
  42bf34:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bf38:	add	x1, x1, #0xe71
  42bf3c:	mov	w26, #0x1                   	// #1
  42bf40:	bl	404d00 <dcgettext@plt>
  42bf44:	mov	x1, x0
  42bf48:	mov	x3, x22
  42bf4c:	mov	x2, x22
  42bf50:	mov	x0, x19
  42bf54:	bl	4431a0 <_obstack_memory_used@@Base+0xb520>
  42bf58:	tbz	w25, #3, 42c02c <argp_failure@@Base+0x858>
  42bf5c:	ldr	w0, [x23, #8]
  42bf60:	cbz	w0, 42c02c <argp_failure@@Base+0x858>
  42bf64:	cbz	w26, 42bf74 <argp_failure@@Base+0x7a0>
  42bf68:	mov	x0, x19
  42bf6c:	mov	w1, #0xa                   	// #10
  42bf70:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42bf74:	ldr	w0, [x23, #8]
  42bf78:	str	w0, [x29, #144]
  42bf7c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bf80:	add	x0, x0, #0xea8
  42bf84:	str	x0, [x29, #96]
  42bf88:	ldr	x26, [x23]
  42bf8c:	stp	xzr, xzr, [x29, #168]
  42bf90:	ldr	w0, [x29, #144]
  42bf94:	cbnz	w0, 42c0f4 <argp_failure@@Base+0x920>
  42bf98:	ldr	w0, [x29, #180]
  42bf9c:	cbz	w0, 42c028 <argp_failure@@Base+0x854>
  42bfa0:	ldr	w0, [x21, #4]
  42bfa4:	cbz	w0, 42c028 <argp_failure@@Base+0x854>
  42bfa8:	cbz	x20, 42c4e8 <argp_failure@@Base+0xd14>
  42bfac:	ldr	x0, [x20]
  42bfb0:	ldr	x0, [x0, #48]
  42bfb4:	mov	w2, #0x5                   	// #5
  42bfb8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42bfbc:	add	x1, x1, #0xebc
  42bfc0:	bl	404d00 <dcgettext@plt>
  42bfc4:	mov	x22, x0
  42bfc8:	cbz	x20, 42c4f0 <argp_failure@@Base+0xd1c>
  42bfcc:	ldr	x2, [x20]
  42bfd0:	mov	w1, #0x5                   	// #5
  42bfd4:	mov	x3, x20
  42bfd8:	mov	x0, x22
  42bfdc:	movk	w1, #0x200, lsl #16
  42bfe0:	bl	42acb4 <wcrtomb@plt+0x25d64>
  42bfe4:	mov	x21, x0
  42bfe8:	cbz	x0, 42c028 <argp_failure@@Base+0x854>
  42bfec:	ldrb	w0, [x0]
  42bff0:	cbz	w0, 42c018 <argp_failure@@Base+0x844>
  42bff4:	mov	w1, #0xa                   	// #10
  42bff8:	mov	x0, x19
  42bffc:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42c000:	mov	x1, x21
  42c004:	mov	x0, x19
  42c008:	bl	443308 <_obstack_memory_used@@Base+0xb688>
  42c00c:	mov	x0, x19
  42c010:	mov	w1, #0xa                   	// #10
  42c014:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42c018:	cmp	x22, x21
  42c01c:	b.eq	42c028 <argp_failure@@Base+0x854>  // b.none
  42c020:	mov	x0, x21
  42c024:	bl	404ae0 <free@plt>
  42c028:	mov	w26, #0x1                   	// #1
  42c02c:	tbz	w25, #5, 42c050 <argp_failure@@Base+0x87c>
  42c030:	mov	w3, w26
  42c034:	mov	x5, x19
  42c038:	mov	x1, x20
  42c03c:	mov	x0, x24
  42c040:	mov	w4, #0x0                   	// #0
  42c044:	mov	w2, #0x1                   	// #1
  42c048:	bl	42a84c <wcrtomb@plt+0x258fc>
  42c04c:	orr	w26, w26, w0
  42c050:	tbz	w25, #6, 42c098 <argp_failure@@Base+0x8c4>
  42c054:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42c058:	mov	x20, x0
  42c05c:	ldr	x1, [x0, #1056]
  42c060:	cbz	x1, 42c098 <argp_failure@@Base+0x8c4>
  42c064:	cbz	w26, 42c074 <argp_failure@@Base+0x8a0>
  42c068:	mov	x0, x19
  42c06c:	mov	w1, #0xa                   	// #10
  42c070:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42c074:	ldr	x0, [x24, #48]
  42c078:	mov	w2, #0x5                   	// #5
  42c07c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42c080:	add	x1, x1, #0xf30
  42c084:	bl	404d00 <dcgettext@plt>
  42c088:	mov	x1, x0
  42c08c:	ldr	x2, [x20, #1056]
  42c090:	mov	x0, x19
  42c094:	bl	4431a0 <_obstack_memory_used@@Base+0xb520>
  42c098:	mov	x0, x27
  42c09c:	bl	404620 <funlockfile@plt>
  42c0a0:	cbz	x23, 42c0ac <argp_failure@@Base+0x8d8>
  42c0a4:	mov	x0, x23
  42c0a8:	bl	42a7a0 <wcrtomb@plt+0x25850>
  42c0ac:	mov	x0, x19
  42c0b0:	bl	443084 <_obstack_memory_used@@Base+0xb404>
  42c0b4:	b	42bd50 <argp_failure@@Base+0x57c>
  42c0b8:	mul	x5, x2, x4
  42c0bc:	str	w2, [x3, x5]
  42c0c0:	add	x2, x2, #0x1
  42c0c4:	b	42bdc0 <argp_failure@@Base+0x5ec>
  42c0c8:	mov	x23, #0x0                   	// #0
  42c0cc:	b	42bddc <argp_failure@@Base+0x608>
  42c0d0:	ldr	x1, [x29, #136]
  42c0d4:	b	42be58 <argp_failure@@Base+0x684>
  42c0d8:	mov	x1, x19
  42c0dc:	mov	x0, x23
  42c0e0:	orr	w25, w25, #0x2
  42c0e4:	bl	42aaf8 <wcrtomb@plt+0x25ba8>
  42c0e8:	b	42beb0 <argp_failure@@Base+0x6dc>
  42c0ec:	mov	w26, #0x0                   	// #0
  42c0f0:	b	42bf04 <argp_failure@@Base+0x730>
  42c0f4:	ldr	x0, [x26, #16]
  42c0f8:	mov	x1, #0x0                   	// #0
  42c0fc:	str	x0, [x29, #152]
  42c100:	mov	x0, x19
  42c104:	ldr	x22, [x26]
  42c108:	bl	4433b4 <_obstack_memory_used@@Base+0xb734>
  42c10c:	str	x0, [x29, #120]
  42c110:	ldr	x0, [x19, #24]
  42c114:	str	x0, [x29, #112]
  42c118:	add	x0, x29, #0xa8
  42c11c:	str	x0, [x29, #200]
  42c120:	mov	w0, #0x1                   	// #1
  42c124:	str	w0, [x29, #208]
  42c128:	ldr	w0, [x22, #24]
  42c12c:	stp	x26, x19, [x29, #184]
  42c130:	and	w1, w0, #0x8
  42c134:	str	w1, [x29, #136]
  42c138:	str	x20, [x29, #216]
  42c13c:	tbnz	w0, #3, 42c290 <argp_failure@@Base+0xabc>
  42c140:	ldr	w1, [x26, #8]
  42c144:	mov	x0, x22
  42c148:	cbnz	w1, 42c274 <argp_failure@@Base+0xaa0>
  42c14c:	ldrsw	x1, [x21, #8]
  42c150:	mov	x0, x19
  42c154:	mov	x28, x22
  42c158:	bl	443434 <_obstack_memory_used@@Base+0xb7b4>
  42c15c:	ldr	w0, [x26, #8]
  42c160:	str	w0, [x29, #128]
  42c164:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42c168:	add	x0, x0, #0xb0c
  42c16c:	str	x0, [x29, #104]
  42c170:	ldr	w0, [x29, #128]
  42c174:	cbnz	w0, 42c2a4 <argp_failure@@Base+0xad0>
  42c178:	ldr	w0, [x22, #24]
  42c17c:	tbz	w0, #3, 42c3c0 <argp_failure@@Base+0xbec>
  42c180:	ldrsw	x1, [x21, #16]
  42c184:	mov	x0, x19
  42c188:	mov	x28, x22
  42c18c:	bl	443434 <_obstack_memory_used@@Base+0xb7b4>
  42c190:	ldr	w3, [x26, #8]
  42c194:	cbnz	w3, 42c35c <argp_failure@@Base+0xb88>
  42c198:	mov	x0, x19
  42c19c:	mov	x1, #0x0                   	// #0
  42c1a0:	bl	4433b4 <_obstack_memory_used@@Base+0xb734>
  42c1a4:	ldr	w0, [x29, #208]
  42c1a8:	cbnz	w0, 42c464 <argp_failure@@Base+0xc90>
  42c1ac:	ldr	x28, [x22, #32]
  42c1b0:	cbz	x28, 42c1d0 <argp_failure@@Base+0x9fc>
  42c1b4:	cbz	x20, 42c4b8 <argp_failure@@Base+0xce4>
  42c1b8:	ldr	x0, [x20]
  42c1bc:	ldr	x0, [x0, #48]
  42c1c0:	mov	x1, x28
  42c1c4:	mov	w2, #0x5                   	// #5
  42c1c8:	bl	404d00 <dcgettext@plt>
  42c1cc:	mov	x28, x0
  42c1d0:	ldr	w1, [x22, #8]
  42c1d4:	mov	x3, x20
  42c1d8:	ldr	x2, [x26, #40]
  42c1dc:	mov	x0, x28
  42c1e0:	bl	42acb4 <wcrtomb@plt+0x25d64>
  42c1e4:	mov	x22, x0
  42c1e8:	cbz	x0, 42c258 <argp_failure@@Base+0xa84>
  42c1ec:	ldrb	w0, [x0]
  42c1f0:	cbz	w0, 42c248 <argp_failure@@Base+0xa74>
  42c1f4:	mov	x0, x19
  42c1f8:	bl	443474 <_obstack_memory_used@@Base+0xb7f4>
  42c1fc:	ldrsw	x1, [x21, #20]
  42c200:	mov	x2, x0
  42c204:	mov	x0, x19
  42c208:	str	x2, [x29, #152]
  42c20c:	bl	4433b4 <_obstack_memory_used@@Base+0xb734>
  42c210:	ldrsw	x1, [x21, #20]
  42c214:	mov	x0, x19
  42c218:	bl	443434 <_obstack_memory_used@@Base+0xb7b4>
  42c21c:	ldr	w1, [x21, #20]
  42c220:	ldr	x2, [x29, #152]
  42c224:	add	w0, w1, #0x3
  42c228:	cmp	w2, w0
  42c22c:	b.ls	42c4c0 <argp_failure@@Base+0xcec>  // b.plast
  42c230:	mov	x0, x19
  42c234:	mov	w1, #0xa                   	// #10
  42c238:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42c23c:	mov	x1, x22
  42c240:	mov	x0, x19
  42c244:	bl	443308 <_obstack_memory_used@@Base+0xb688>
  42c248:	cmp	x28, x22
  42c24c:	b.eq	42c258 <argp_failure@@Base+0xa84>  // b.none
  42c250:	mov	x0, x22
  42c254:	bl	404ae0 <free@plt>
  42c258:	mov	x0, x19
  42c25c:	mov	x1, #0x0                   	// #0
  42c260:	bl	4433b4 <_obstack_memory_used@@Base+0xb734>
  42c264:	mov	x0, x19
  42c268:	mov	w1, #0xa                   	// #10
  42c26c:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42c270:	b	42c488 <argp_failure@@Base+0xcb4>
  42c274:	ldr	x2, [x0]
  42c278:	cbz	x2, 42c284 <argp_failure@@Base+0xab0>
  42c27c:	ldr	w2, [x0, #24]
  42c280:	tbz	w2, #1, 42c298 <argp_failure@@Base+0xac4>
  42c284:	add	x0, x0, #0x30
  42c288:	sub	w1, w1, #0x1
  42c28c:	b	42c148 <argp_failure@@Base+0x974>
  42c290:	str	wzr, [x29, #136]
  42c294:	b	42c14c <argp_failure@@Base+0x978>
  42c298:	mov	w0, #0x1                   	// #1
  42c29c:	str	w0, [x29, #136]
  42c2a0:	b	42c14c <argp_failure@@Base+0x978>
  42c2a4:	mov	x0, x28
  42c2a8:	bl	42d4f0 <argp_usage@@Base+0x10>
  42c2ac:	cbz	w0, 42c32c <argp_failure@@Base+0xb58>
  42c2b0:	ldr	x0, [x29, #152]
  42c2b4:	ldr	w1, [x28, #8]
  42c2b8:	ldrb	w0, [x0]
  42c2bc:	cmp	w1, w0
  42c2c0:	b.ne	42c32c <argp_failure@@Base+0xb58>  // b.any
  42c2c4:	ldr	w0, [x28, #24]
  42c2c8:	tbnz	w0, #1, 42c320 <argp_failure@@Base+0xb4c>
  42c2cc:	ldr	w0, [x21, #8]
  42c2d0:	add	x1, x29, #0xb8
  42c2d4:	bl	42afb4 <wcrtomb@plt+0x26064>
  42c2d8:	mov	w1, #0x2d                  	// #45
  42c2dc:	mov	x0, x19
  42c2e0:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42c2e4:	ldr	x0, [x29, #152]
  42c2e8:	ldrb	w1, [x0]
  42c2ec:	mov	x0, x19
  42c2f0:	bl	443360 <_obstack_memory_used@@Base+0xb6e0>
  42c2f4:	ldr	w0, [x29, #136]
  42c2f8:	cbz	w0, 42c304 <argp_failure@@Base+0xb30>
  42c2fc:	ldr	w0, [x21]
  42c300:	cbz	w0, 42c348 <argp_failure@@Base+0xb74>
  42c304:	cbz	x20, 42c340 <argp_failure@@Base+0xb6c>
  42c308:	ldr	x0, [x20]
  42c30c:	ldr	x3, [x0, #48]
  42c310:	mov	x4, x19
  42c314:	ldp	x2, x1, [x29, #96]
  42c318:	mov	x0, x22
  42c31c:	bl	42a614 <wcrtomb@plt+0x256c4>
  42c320:	ldr	x0, [x29, #152]
  42c324:	add	x0, x0, #0x1
  42c328:	str	x0, [x29, #152]
  42c32c:	ldr	w0, [x29, #128]
  42c330:	add	x28, x28, #0x30
  42c334:	sub	w0, w0, #0x1
  42c338:	str	w0, [x29, #128]
  42c33c:	b	42c170 <argp_failure@@Base+0x99c>
  42c340:	mov	x3, #0x0                   	// #0
  42c344:	b	42c310 <argp_failure@@Base+0xb3c>
  42c348:	ldr	x0, [x22, #16]
  42c34c:	cbz	x0, 42c320 <argp_failure@@Base+0xb4c>
  42c350:	mov	w0, #0x1                   	// #1
  42c354:	str	w0, [x29, #180]
  42c358:	b	42c320 <argp_failure@@Base+0xb4c>
  42c35c:	ldr	x0, [x28]
  42c360:	cbz	x0, 42c3ac <argp_failure@@Base+0xbd8>
  42c364:	ldr	w0, [x28, #24]
  42c368:	tbnz	w0, #1, 42c3ac <argp_failure@@Base+0xbd8>
  42c36c:	ldr	w0, [x21, #16]
  42c370:	add	x1, x29, #0xb8
  42c374:	str	w3, [x29, #152]
  42c378:	bl	42afb4 <wcrtomb@plt+0x26064>
  42c37c:	ldr	w3, [x29, #152]
  42c380:	cbz	x20, 42c3b8 <argp_failure@@Base+0xbe4>
  42c384:	ldr	x0, [x20]
  42c388:	ldr	x0, [x0, #48]
  42c38c:	mov	w2, #0x5                   	// #5
  42c390:	ldr	x1, [x28]
  42c394:	str	w3, [x29, #152]
  42c398:	bl	404d00 <dcgettext@plt>
  42c39c:	mov	x1, x0
  42c3a0:	mov	x0, x19
  42c3a4:	bl	443308 <_obstack_memory_used@@Base+0xb688>
  42c3a8:	ldr	w3, [x29, #152]
  42c3ac:	add	x28, x28, #0x30
  42c3b0:	sub	w3, w3, #0x1
  42c3b4:	b	42c194 <argp_failure@@Base+0x9c0>
  42c3b8:	mov	x0, #0x0                   	// #0
  42c3bc:	b	42c38c <argp_failure@@Base+0xbb8>
  42c3c0:	ldrsw	x1, [x21, #12]
  42c3c4:	mov	x0, x19
  42c3c8:	mov	x28, x22
  42c3cc:	bl	443434 <_obstack_memory_used@@Base+0xb7b4>
  42c3d0:	ldr	w6, [x26, #8]
  42c3d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42c3d8:	add	x0, x0, #0xead
  42c3dc:	str	x0, [x29, #152]
  42c3e0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  42c3e4:	add	x0, x0, #0xeb2
  42c3e8:	str	x0, [x29, #136]
  42c3ec:	cbz	w6, 42c198 <argp_failure@@Base+0x9c4>
  42c3f0:	ldr	x0, [x28]
  42c3f4:	cbz	x0, 42c450 <argp_failure@@Base+0xc7c>
  42c3f8:	ldr	w0, [x28, #24]
  42c3fc:	tbnz	w0, #1, 42c450 <argp_failure@@Base+0xc7c>
  42c400:	ldr	w0, [x21, #12]
  42c404:	add	x1, x29, #0xb8
  42c408:	str	w6, [x29, #128]
  42c40c:	bl	42afb4 <wcrtomb@plt+0x26064>
  42c410:	ldr	x2, [x28]
  42c414:	mov	x0, x19
  42c418:	ldr	x1, [x29, #152]
  42c41c:	bl	4431a0 <_obstack_memory_used@@Base+0xb520>
  42c420:	ldr	w6, [x29, #128]
  42c424:	cbz	x20, 42c45c <argp_failure@@Base+0xc88>
  42c428:	ldr	x0, [x20]
  42c42c:	ldr	x3, [x0, #48]
  42c430:	mov	x4, x19
  42c434:	ldr	x2, [x29, #136]
  42c438:	mov	x0, x22
  42c43c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42c440:	add	x1, x1, #0x777
  42c444:	str	w6, [x29, #128]
  42c448:	bl	42a614 <wcrtomb@plt+0x256c4>
  42c44c:	ldr	w6, [x29, #128]
  42c450:	add	x28, x28, #0x30
  42c454:	sub	w6, w6, #0x1
  42c458:	b	42c3ec <argp_failure@@Base+0xc18>
  42c45c:	mov	x3, #0x0                   	// #0
  42c460:	b	42c430 <argp_failure@@Base+0xc5c>
  42c464:	mov	x0, x22
  42c468:	bl	42d4f0 <argp_usage@@Base+0x10>
  42c46c:	cbnz	w0, 42c48c <argp_failure@@Base+0xcb8>
  42c470:	ldr	x0, [x22]
  42c474:	cbnz	x0, 42c48c <argp_failure@@Base+0xcb8>
  42c478:	ldr	x0, [x22, #32]
  42c47c:	add	x2, x29, #0xb8
  42c480:	ldr	x1, [x26, #40]
  42c484:	bl	42aec4 <wcrtomb@plt+0x25f74>
  42c488:	str	x26, [x29, #168]
  42c48c:	ldrsw	x1, [x29, #120]
  42c490:	mov	x0, x19
  42c494:	add	x26, x26, #0x38
  42c498:	bl	4433b4 <_obstack_memory_used@@Base+0xb734>
  42c49c:	ldrsw	x1, [x29, #112]
  42c4a0:	mov	x0, x19
  42c4a4:	bl	443434 <_obstack_memory_used@@Base+0xb7b4>
  42c4a8:	ldr	w0, [x29, #144]
  42c4ac:	sub	w0, w0, #0x1
  42c4b0:	str	w0, [x29, #144]
  42c4b4:	b	42bf90 <argp_failure@@Base+0x7bc>
  42c4b8:	mov	x0, #0x0                   	// #0
  42c4bc:	b	42c1c0 <argp_failure@@Base+0x9ec>
  42c4c0:	cmp	w2, w1
  42c4c4:	b.cc	42c4dc <argp_failure@@Base+0xd08>  // b.lo, b.ul, b.last
  42c4c8:	mov	x0, x19
  42c4cc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42c4d0:	add	x1, x1, #0xeb8
  42c4d4:	bl	443308 <_obstack_memory_used@@Base+0xb688>
  42c4d8:	b	42c23c <argp_failure@@Base+0xa68>
  42c4dc:	mov	x0, x19
  42c4e0:	bl	42a58c <wcrtomb@plt+0x2563c>
  42c4e4:	b	42c23c <argp_failure@@Base+0xa68>
  42c4e8:	mov	x0, #0x0                   	// #0
  42c4ec:	b	42bfb4 <argp_failure@@Base+0x7e0>
  42c4f0:	mov	x2, #0x0                   	// #0
  42c4f4:	b	42bfd0 <argp_failure@@Base+0x7fc>
  42c4f8:	ret

000000000042c4fc <argp_help@@Base>:
  42c4fc:	mov	x4, x3
  42c500:	mov	w3, w2
  42c504:	mov	x2, x1
  42c508:	mov	x1, #0x0                   	// #0
  42c50c:	b	42b968 <argp_failure@@Base+0x194>

000000000042c510 <argp_state_help@@Base>:
  42c510:	stp	x29, x30, [sp, #-32]!
  42c514:	mov	x29, sp
  42c518:	stp	x19, x20, [sp, #16]
  42c51c:	mov	x19, x0
  42c520:	mov	w20, w2
  42c524:	cbz	x0, 42c548 <argp_state_help@@Base+0x38>
  42c528:	ldr	w0, [x0, #28]
  42c52c:	tbz	w0, #1, 42c584 <argp_state_help@@Base+0x74>
  42c530:	ldp	x19, x20, [sp, #16]
  42c534:	ldp	x29, x30, [sp], #32
  42c538:	ret
  42c53c:	tbz	w20, #9, 42c530 <argp_state_help@@Base+0x20>
  42c540:	mov	w0, #0x0                   	// #0
  42c544:	b	42c580 <argp_state_help@@Base+0x70>
  42c548:	cbz	x1, 42c530 <argp_state_help@@Base+0x20>
  42c54c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42c550:	ldr	x4, [x0, #1192]
  42c554:	mov	x0, #0x0                   	// #0
  42c558:	mov	x2, x1
  42c55c:	mov	w3, w20
  42c560:	mov	x1, x19
  42c564:	bl	42b968 <argp_failure@@Base+0x194>
  42c568:	cbz	x19, 42c574 <argp_state_help@@Base+0x64>
  42c56c:	ldr	w0, [x19, #28]
  42c570:	tbnz	w0, #5, 42c530 <argp_state_help@@Base+0x20>
  42c574:	tbz	w20, #8, 42c53c <argp_state_help@@Base+0x2c>
  42c578:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42c57c:	ldr	w0, [x0, #1136]
  42c580:	bl	4042b0 <exit@plt>
  42c584:	cbz	x1, 42c530 <argp_state_help@@Base+0x20>
  42c588:	tbz	w0, #6, 42c590 <argp_state_help@@Base+0x80>
  42c58c:	orr	w20, w20, #0x80
  42c590:	ldr	x0, [x19]
  42c594:	ldr	x4, [x19, #64]
  42c598:	b	42c558 <argp_state_help@@Base+0x48>

000000000042c59c <argp_error@@Base>:
  42c59c:	stp	x29, x30, [sp, #-320]!
  42c5a0:	mov	x29, sp
  42c5a4:	stp	x19, x20, [sp, #16]
  42c5a8:	mov	x20, x0
  42c5ac:	str	x21, [sp, #32]
  42c5b0:	mov	x21, x1
  42c5b4:	str	q0, [sp, #144]
  42c5b8:	str	q1, [sp, #160]
  42c5bc:	str	q2, [sp, #176]
  42c5c0:	str	q3, [sp, #192]
  42c5c4:	str	q4, [sp, #208]
  42c5c8:	str	q5, [sp, #224]
  42c5cc:	str	q6, [sp, #240]
  42c5d0:	str	q7, [sp, #256]
  42c5d4:	stp	x2, x3, [sp, #272]
  42c5d8:	stp	x4, x5, [sp, #288]
  42c5dc:	stp	x6, x7, [sp, #304]
  42c5e0:	cbz	x0, 42c6a4 <argp_error@@Base+0x108>
  42c5e4:	ldr	w0, [x0, #28]
  42c5e8:	tbnz	w0, #1, 42c694 <argp_error@@Base+0xf8>
  42c5ec:	ldr	x19, [x20, #72]
  42c5f0:	cbz	x19, 42c694 <argp_error@@Base+0xf8>
  42c5f4:	mov	x0, x19
  42c5f8:	bl	404320 <flockfile@plt>
  42c5fc:	add	x0, sp, #0x140
  42c600:	stp	x0, x0, [sp, #80]
  42c604:	add	x0, sp, #0x110
  42c608:	str	x0, [sp, #96]
  42c60c:	mov	w0, #0xffffffd0            	// #-48
  42c610:	str	w0, [sp, #104]
  42c614:	mov	w0, #0xffffff80            	// #-128
  42c618:	str	w0, [sp, #108]
  42c61c:	cbz	x20, 42c6b0 <argp_error@@Base+0x114>
  42c620:	ldr	x0, [x20, #64]
  42c624:	mov	x1, x19
  42c628:	bl	404d20 <fputs_unlocked@plt>
  42c62c:	mov	x1, x19
  42c630:	mov	w0, #0x3a                  	// #58
  42c634:	bl	404500 <putc_unlocked@plt>
  42c638:	mov	x1, x19
  42c63c:	mov	w0, #0x20                  	// #32
  42c640:	bl	404500 <putc_unlocked@plt>
  42c644:	ldp	x2, x3, [sp, #80]
  42c648:	stp	x2, x3, [sp, #48]
  42c64c:	ldp	x0, x1, [sp, #96]
  42c650:	stp	x2, x3, [sp, #112]
  42c654:	add	x3, sp, #0x30
  42c658:	mov	x2, x21
  42c65c:	stp	x0, x1, [sp, #64]
  42c660:	stp	x0, x1, [sp, #128]
  42c664:	mov	w1, #0x1                   	// #1
  42c668:	mov	x0, x19
  42c66c:	bl	404790 <__vfprintf_chk@plt>
  42c670:	mov	x1, x19
  42c674:	mov	w0, #0xa                   	// #10
  42c678:	bl	404500 <putc_unlocked@plt>
  42c67c:	mov	x1, x19
  42c680:	mov	w2, #0x104                 	// #260
  42c684:	mov	x0, x20
  42c688:	bl	42c510 <argp_state_help@@Base>
  42c68c:	mov	x0, x19
  42c690:	bl	404620 <funlockfile@plt>
  42c694:	ldp	x19, x20, [sp, #16]
  42c698:	ldr	x21, [sp, #32]
  42c69c:	ldp	x29, x30, [sp], #320
  42c6a0:	ret
  42c6a4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42c6a8:	ldr	x19, [x0, #1160]
  42c6ac:	b	42c5f0 <argp_error@@Base+0x54>
  42c6b0:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42c6b4:	ldr	x0, [x0, #1192]
  42c6b8:	b	42c624 <argp_error@@Base+0x88>
  42c6bc:	stp	x29, x30, [sp, #-32]!
  42c6c0:	mov	x29, sp
  42c6c4:	stp	x19, x20, [sp, #16]
  42c6c8:	mov	x20, x1
  42c6cc:	mov	x1, x3
  42c6d0:	ldr	x3, [x0]
  42c6d4:	mov	x19, x0
  42c6d8:	cbz	x3, 42c71c <argp_error@@Base+0x180>
  42c6dc:	mov	w0, w2
  42c6e0:	ldr	x2, [x19, #64]
  42c6e4:	str	x2, [x20, #56]
  42c6e8:	ldr	x2, [x19, #48]
  42c6ec:	str	x2, [x20, #40]
  42c6f0:	ldr	x2, [x19, #56]
  42c6f4:	str	x2, [x20, #48]
  42c6f8:	ldr	w2, [x19, #24]
  42c6fc:	str	w2, [x20, #32]
  42c700:	mov	x2, x20
  42c704:	blr	x3
  42c708:	ldr	x1, [x20, #56]
  42c70c:	str	x1, [x19, #64]
  42c710:	ldp	x19, x20, [sp, #16]
  42c714:	ldp	x29, x30, [sp], #32
  42c718:	ret
  42c71c:	mov	w0, #0x7                   	// #7
  42c720:	b	42c710 <argp_error@@Base+0x174>
  42c724:	stp	x29, x30, [sp, #-48]!
  42c728:	mov	x2, x0
  42c72c:	mov	x29, sp
  42c730:	stp	x21, x22, [sp, #32]
  42c734:	ldr	x21, [x0, #32]
  42c738:	stp	x19, x20, [sp, #16]
  42c73c:	mov	x19, x1
  42c740:	ldr	x0, [x0]
  42c744:	cbnz	x0, 42c750 <argp_error@@Base+0x1b4>
  42c748:	ldr	x1, [x2, #8]
  42c74c:	cbz	x1, 42c760 <argp_error@@Base+0x1c4>
  42c750:	ldr	x1, [x19, #16]
  42c754:	add	x1, x1, #0x1
  42c758:	str	x1, [x19, #16]
  42c75c:	cbnz	x0, 42c7a8 <argp_error@@Base+0x20c>
  42c760:	cbnz	x21, 42c7c8 <argp_error@@Base+0x22c>
  42c764:	ldp	x19, x20, [sp, #16]
  42c768:	ldp	x21, x22, [sp, #32]
  42c76c:	ldp	x29, x30, [sp], #48
  42c770:	ret
  42c774:	add	w20, w20, #0x1
  42c778:	mov	x0, x22
  42c77c:	add	x22, x0, #0x30
  42c780:	bl	42d540 <argp_usage@@Base+0x60>
  42c784:	cbz	w0, 42c774 <argp_error@@Base+0x1d8>
  42c788:	ldr	x1, [x19]
  42c78c:	add	w0, w20, w20, lsl #1
  42c790:	add	x0, x1, w0, sxtw
  42c794:	str	x0, [x19]
  42c798:	ldr	x0, [x19, #8]
  42c79c:	add	x20, x0, w20, sxtw
  42c7a0:	str	x20, [x19, #8]
  42c7a4:	b	42c760 <argp_error@@Base+0x1c4>
  42c7a8:	mov	w20, #0x0                   	// #0
  42c7ac:	b	42c77c <argp_error@@Base+0x1e0>
  42c7b0:	mov	x1, x19
  42c7b4:	bl	42c724 <argp_error@@Base+0x188>
  42c7b8:	ldr	x0, [x19, #24]
  42c7bc:	add	x21, x21, #0x20
  42c7c0:	add	x0, x0, #0x1
  42c7c4:	str	x0, [x19, #24]
  42c7c8:	ldr	x0, [x21]
  42c7cc:	cbnz	x0, 42c7b0 <argp_error@@Base+0x214>
  42c7d0:	b	42c764 <argp_error@@Base+0x1c8>
  42c7d4:	stp	x29, x30, [sp, #-144]!
  42c7d8:	mov	x29, sp
  42c7dc:	stp	x21, x22, [sp, #32]
  42c7e0:	ldr	x21, [x0]
  42c7e4:	stp	x19, x20, [sp, #16]
  42c7e8:	mov	x19, x3
  42c7ec:	stp	x23, x24, [sp, #48]
  42c7f0:	mov	x20, x4
  42c7f4:	mov	x23, x0
  42c7f8:	stp	x25, x26, [sp, #64]
  42c7fc:	mov	w24, w2
  42c800:	stp	x27, x28, [sp, #80]
  42c804:	str	x1, [sp, #104]
  42c808:	ldr	x22, [x0, #32]
  42c80c:	cbnz	x21, 42c99c <argp_error@@Base+0x400>
  42c810:	ldr	x0, [x0, #8]
  42c814:	cbz	x0, 42c84c <argp_error@@Base+0x2b0>
  42c818:	ldr	x0, [x23, #8]
  42c81c:	stp	x0, x23, [x19]
  42c820:	ldr	x0, [x20, #8]
  42c824:	str	x0, [x19, #16]
  42c828:	ldr	x0, [sp, #104]
  42c82c:	str	wzr, [x19, #24]
  42c830:	str	x0, [x19, #32]
  42c834:	str	w24, [x19, #40]
  42c838:	stp	xzr, xzr, [x19, #48]
  42c83c:	str	xzr, [x19, #64]
  42c840:	cbnz	x22, 42c9e0 <argp_error@@Base+0x444>
  42c844:	mov	x21, x19
  42c848:	add	x19, x19, #0x48
  42c84c:	cbnz	x22, 42ca14 <argp_error@@Base+0x478>
  42c850:	mov	x0, x19
  42c854:	ldp	x19, x20, [sp, #16]
  42c858:	ldp	x21, x22, [sp, #32]
  42c85c:	ldp	x23, x24, [sp, #48]
  42c860:	ldp	x25, x26, [sp, #64]
  42c864:	ldp	x27, x28, [sp, #80]
  42c868:	ldp	x29, x30, [sp], #144
  42c86c:	ret
  42c870:	ldr	w0, [x27, #24]
  42c874:	tst	x0, #0x4
  42c878:	csel	x21, x21, x27, ne  // ne = any
  42c87c:	ldr	w0, [x21, #24]
  42c880:	and	w28, w0, #0x8
  42c884:	tbnz	w0, #3, 42c978 <argp_error@@Base+0x3dc>
  42c888:	mov	x0, x27
  42c88c:	bl	42d4f0 <argp_usage@@Base+0x10>
  42c890:	cbz	w0, 42c8e0 <argp_error@@Base+0x344>
  42c894:	ldr	x0, [x20, #8]
  42c898:	ldr	w1, [x27, #8]
  42c89c:	add	x2, x0, #0x1
  42c8a0:	str	x2, [x20, #8]
  42c8a4:	strb	w1, [x0]
  42c8a8:	ldr	x0, [x21, #16]
  42c8ac:	cbz	x0, 42c8d8 <argp_error@@Base+0x33c>
  42c8b0:	ldr	x0, [x20, #8]
  42c8b4:	add	x1, x0, #0x1
  42c8b8:	str	x1, [x20, #8]
  42c8bc:	strb	w25, [x0]
  42c8c0:	ldr	w0, [x21, #24]
  42c8c4:	tbz	w0, #0, 42c8d8 <argp_error@@Base+0x33c>
  42c8c8:	ldr	x0, [x20, #8]
  42c8cc:	add	x1, x0, #0x1
  42c8d0:	str	x1, [x20, #8]
  42c8d4:	strb	w25, [x0]
  42c8d8:	ldr	x0, [x20, #8]
  42c8dc:	strb	wzr, [x0]
  42c8e0:	ldr	x1, [x27]
  42c8e4:	cbz	x1, 42c978 <argp_error@@Base+0x3dc>
  42c8e8:	ldr	x4, [x20]
  42c8ec:	ldr	x3, [x4, #16]
  42c8f0:	mov	x2, x3
  42c8f4:	ldr	x0, [x2]
  42c8f8:	cbz	x0, 42c920 <argp_error@@Base+0x384>
  42c8fc:	stp	x1, x4, [sp, #112]
  42c900:	stp	x3, x2, [sp, #128]
  42c904:	bl	404a30 <strcmp@plt>
  42c908:	ldp	x1, x4, [sp, #112]
  42c90c:	ldp	x3, x2, [sp, #128]
  42c910:	cbnz	w0, 42c98c <argp_error@@Base+0x3f0>
  42c914:	sub	x2, x2, x3
  42c918:	asr	x2, x2, #5
  42c91c:	tbz	w2, #31, 42c978 <argp_error@@Base+0x3dc>
  42c920:	ldr	x2, [x20, #16]
  42c924:	ldr	x0, [x21, #16]
  42c928:	str	x1, [x2]
  42c92c:	cbz	x0, 42c93c <argp_error@@Base+0x3a0>
  42c930:	ldr	w28, [x21, #24]
  42c934:	and	w28, w28, #0x1
  42c938:	add	w28, w28, #0x1
  42c93c:	str	w28, [x2, #8]
  42c940:	str	xzr, [x2, #16]
  42c944:	ldr	w3, [x27, #8]
  42c948:	cbz	w3, 42c994 <argp_error@@Base+0x3f8>
  42c94c:	and	w0, w3, #0xffffff
  42c950:	ldr	x3, [x4, #80]
  42c954:	sub	x3, x19, x3
  42c958:	asr	x3, x3, #3
  42c95c:	mul	x3, x3, x26
  42c960:	add	w3, w3, #0x1
  42c964:	add	w3, w0, w3, lsl #24
  42c968:	str	w3, [x2, #24]
  42c96c:	add	x0, x2, #0x20
  42c970:	str	x0, [x20, #16]
  42c974:	str	xzr, [x2, #32]
  42c978:	add	x27, x27, #0x30
  42c97c:	mov	x0, x27
  42c980:	bl	42d540 <argp_usage@@Base+0x60>
  42c984:	cbz	w0, 42c870 <argp_error@@Base+0x2d4>
  42c988:	b	42c818 <argp_error@@Base+0x27c>
  42c98c:	add	x2, x2, #0x20
  42c990:	b	42c8f4 <argp_error@@Base+0x358>
  42c994:	ldr	w3, [x21, #8]
  42c998:	b	42c94c <argp_error@@Base+0x3b0>
  42c99c:	mov	x26, #0x8e39                	// #36409
  42c9a0:	mov	x27, x21
  42c9a4:	movk	x26, #0x38e3, lsl #16
  42c9a8:	mov	w25, #0x3a                  	// #58
  42c9ac:	movk	x26, #0xe38e, lsl #32
  42c9b0:	movk	x26, #0x8e38, lsl #48
  42c9b4:	b	42c97c <argp_error@@Base+0x3e0>
  42c9b8:	add	w0, w0, #0x1
  42c9bc:	ubfiz	x2, x0, #5, #32
  42c9c0:	mov	w1, w0
  42c9c4:	ldr	x2, [x22, x2]
  42c9c8:	cbnz	x2, 42c9b8 <argp_error@@Base+0x41c>
  42c9cc:	ldr	x0, [x20, #24]
  42c9d0:	str	x0, [x19, #56]
  42c9d4:	add	x0, x0, x1, lsl #3
  42c9d8:	str	x0, [x20, #24]
  42c9dc:	b	42c844 <argp_error@@Base+0x2a8>
  42c9e0:	mov	w0, #0x0                   	// #0
  42c9e4:	b	42c9bc <argp_error@@Base+0x420>
  42c9e8:	mov	x3, x19
  42c9ec:	mov	x4, x20
  42c9f0:	mov	x1, x21
  42c9f4:	bl	42c7d4 <argp_error@@Base+0x238>
  42c9f8:	mov	x19, x0
  42c9fc:	mov	w2, w23
  42ca00:	add	x23, x23, #0x1
  42ca04:	lsl	x0, x23, #5
  42ca08:	ldr	x0, [x22, x0]
  42ca0c:	cbnz	x0, 42c9e8 <argp_error@@Base+0x44c>
  42ca10:	b	42c850 <argp_error@@Base+0x2b4>
  42ca14:	sub	x22, x22, #0x20
  42ca18:	mov	x23, #0x0                   	// #0
  42ca1c:	b	42c9fc <argp_error@@Base+0x460>
  42ca20:	cmp	w0, #0x56
  42ca24:	b.ne	42cab4 <argp_error@@Base+0x518>  // b.any
  42ca28:	stp	x29, x30, [sp, #-32]!
  42ca2c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42ca30:	mov	x29, sp
  42ca34:	str	x19, [sp, #16]
  42ca38:	mov	x19, x2
  42ca3c:	ldr	x2, [x0, #3504]
  42ca40:	cbz	x2, 42ca60 <argp_error@@Base+0x4c4>
  42ca44:	ldr	x0, [x19, #80]
  42ca48:	mov	x1, x19
  42ca4c:	blr	x2
  42ca50:	ldr	w0, [x19, #28]
  42ca54:	tbnz	w0, #5, 42cabc <argp_error@@Base+0x520>
  42ca58:	mov	w0, #0x0                   	// #0
  42ca5c:	bl	4042b0 <exit@plt>
  42ca60:	adrp	x0, 472000 <argp_program_version_hook@@Base+0x250>
  42ca64:	ldr	x3, [x0, #1040]
  42ca68:	cbz	x3, 42ca84 <argp_error@@Base+0x4e8>
  42ca6c:	ldr	x0, [x19, #80]
  42ca70:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  42ca74:	mov	w1, #0x1                   	// #1
  42ca78:	add	x2, x2, #0x9e4
  42ca7c:	bl	404a20 <__fprintf_chk@plt>
  42ca80:	b	42ca50 <argp_error@@Base+0x4b4>
  42ca84:	ldr	x0, [x19]
  42ca88:	mov	w2, #0x5                   	// #5
  42ca8c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42ca90:	add	x1, x1, #0xfe8
  42ca94:	ldr	x0, [x0, #48]
  42ca98:	bl	404d00 <dcgettext@plt>
  42ca9c:	mov	x2, x0
  42caa0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  42caa4:	mov	x0, x19
  42caa8:	add	x1, x1, #0xb0d
  42caac:	bl	42c59c <argp_error@@Base>
  42cab0:	b	42ca50 <argp_error@@Base+0x4b4>
  42cab4:	mov	w0, #0x7                   	// #7
  42cab8:	ret
  42cabc:	mov	w0, #0x0                   	// #0
  42cac0:	ldr	x19, [sp, #16]
  42cac4:	ldp	x29, x30, [sp], #32
  42cac8:	ret
  42cacc:	stp	x29, x30, [sp, #-32]!
  42cad0:	cmn	w0, #0x2
  42cad4:	mov	x29, sp
  42cad8:	stp	x19, x20, [sp, #16]
  42cadc:	mov	x19, x1
  42cae0:	mov	x20, x2
  42cae4:	b.eq	42cb38 <argp_error@@Base+0x59c>  // b.none
  42cae8:	cmn	w0, #0x1
  42caec:	b.ge	42cb08 <argp_error@@Base+0x56c>  // b.tcont
  42caf0:	cmn	w0, #0x4
  42caf4:	b.eq	42cb70 <argp_error@@Base+0x5d4>  // b.none
  42caf8:	cmn	w0, #0x3
  42cafc:	b.eq	42cb30 <argp_error@@Base+0x594>  // b.none
  42cb00:	mov	w0, #0x7                   	// #7
  42cb04:	b	42cb24 <argp_error@@Base+0x588>
  42cb08:	cmp	w0, #0x3f
  42cb0c:	b.ne	42cb00 <argp_error@@Base+0x564>  // b.any
  42cb10:	mov	w2, #0x27a                 	// #634
  42cb14:	ldr	x1, [x20, #80]
  42cb18:	mov	x0, x20
  42cb1c:	bl	42c510 <argp_state_help@@Base>
  42cb20:	mov	w0, #0x0                   	// #0
  42cb24:	ldp	x19, x20, [sp, #16]
  42cb28:	ldp	x29, x30, [sp], #32
  42cb2c:	ret
  42cb30:	mov	w2, #0x201                 	// #513
  42cb34:	b	42cb14 <argp_error@@Base+0x578>
  42cb38:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42cb3c:	str	x1, [x0, #1152]
  42cb40:	mov	x0, x1
  42cb44:	bl	42dde0 <argp_usage@@Base+0x900>
  42cb48:	str	x0, [x20, #64]
  42cb4c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  42cb50:	str	x0, [x1, #1192]
  42cb54:	ldr	w0, [x20, #28]
  42cb58:	and	w0, w0, #0x3
  42cb5c:	cmp	w0, #0x1
  42cb60:	b.ne	42cb20 <argp_error@@Base+0x584>  // b.any
  42cb64:	ldr	x0, [x20, #16]
  42cb68:	str	x19, [x0]
  42cb6c:	b	42cb20 <argp_error@@Base+0x584>
  42cb70:	cbnz	x1, 42cb7c <argp_error@@Base+0x5e0>
  42cb74:	adrp	x19, 44e000 <_obstack_memory_used@@Base+0x16380>
  42cb78:	add	x19, x19, #0xb
  42cb7c:	mov	x0, x19
  42cb80:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  42cb84:	bl	404590 <atoi@plt>
  42cb88:	str	w0, [x19, #3496]
  42cb8c:	add	x19, x19, #0xda8
  42cb90:	ldr	w0, [x19]
  42cb94:	sub	w1, w0, #0x1
  42cb98:	str	w1, [x19]
  42cb9c:	cmp	w0, #0x0
  42cba0:	b.le	42cb20 <argp_error@@Base+0x584>
  42cba4:	mov	w0, #0x1                   	// #1
  42cba8:	bl	404750 <sleep@plt>
  42cbac:	b	42cb90 <argp_error@@Base+0x5f4>

000000000042cbb0 <argp_parse@@Base>:
  42cbb0:	stp	x29, x30, [sp, #-464]!
  42cbb4:	mov	x29, sp
  42cbb8:	stp	x19, x20, [sp, #16]
  42cbbc:	mov	x19, x0
  42cbc0:	stp	x21, x22, [sp, #32]
  42cbc4:	mov	w22, w3
  42cbc8:	stp	x23, x24, [sp, #48]
  42cbcc:	mov	x24, x2
  42cbd0:	mov	x23, x4
  42cbd4:	stp	x25, x26, [sp, #64]
  42cbd8:	mov	w26, w1
  42cbdc:	stp	x27, x28, [sp, #80]
  42cbe0:	str	x5, [x29, #120]
  42cbe4:	tbnz	w22, #0, 42cc14 <argp_parse@@Base+0x64>
  42cbe8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42cbec:	ldr	x1, [x0, #1152]
  42cbf0:	cbnz	x1, 42cbfc <argp_parse@@Base+0x4c>
  42cbf4:	ldr	x1, [x2]
  42cbf8:	str	x1, [x0, #1152]
  42cbfc:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  42cc00:	ldr	x0, [x20, #1192]
  42cc04:	cbnz	x0, 42cc14 <argp_parse@@Base+0x64>
  42cc08:	ldr	x0, [x24]
  42cc0c:	bl	42dde0 <argp_usage@@Base+0x900>
  42cc10:	str	x0, [x20, #1192]
  42cc14:	tbnz	w22, #4, 42cc88 <argp_parse@@Base+0xd8>
  42cc18:	sub	sp, sp, #0x80
  42cc1c:	mov	x2, #0x80                  	// #128
  42cc20:	mov	x6, sp
  42cc24:	sub	sp, sp, #0x40
  42cc28:	mov	x20, sp
  42cc2c:	mov	x0, x6
  42cc30:	mov	w1, #0x0                   	// #0
  42cc34:	stp	xzr, xzr, [x20, #32]
  42cc38:	stp	xzr, xzr, [x20]
  42cc3c:	stp	xzr, xzr, [x20, #16]
  42cc40:	str	x6, [x20, #32]
  42cc44:	str	xzr, [x20, #48]
  42cc48:	bl	404700 <memset@plt>
  42cc4c:	mov	x6, x0
  42cc50:	cbz	x19, 42cc58 <argp_parse@@Base+0xa8>
  42cc54:	str	x19, [x6], #32
  42cc58:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  42cc5c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  42cc60:	add	x0, x0, #0xd8
  42cc64:	str	x0, [x6]
  42cc68:	ldr	x1, [x1, #1040]
  42cc6c:	cbnz	x1, 42cd24 <argp_parse@@Base+0x174>
  42cc70:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  42cc74:	ldr	x1, [x1, #3504]
  42cc78:	cbnz	x1, 42cd24 <argp_parse@@Base+0x174>
  42cc7c:	add	x1, x6, #0x20
  42cc80:	mov	x19, x20
  42cc84:	str	xzr, [x1]
  42cc88:	ands	w27, w22, #0x4
  42cc8c:	stp	xzr, xzr, [x29, #144]
  42cc90:	cset	x0, eq  // eq = none
  42cc94:	stp	x0, xzr, [x29, #128]
  42cc98:	stp	xzr, xzr, [x29, #192]
  42cc9c:	stp	xzr, xzr, [x29, #208]
  42cca0:	stp	xzr, xzr, [x29, #224]
  42cca4:	str	xzr, [x29, #240]
  42cca8:	cbz	x19, 42ccb8 <argp_parse@@Base+0x108>
  42ccac:	add	x1, x29, #0x80
  42ccb0:	mov	x0, x19
  42ccb4:	bl	42c724 <argp_error@@Base+0x188>
  42ccb8:	ldp	x3, x0, [x29, #136]
  42ccbc:	mov	x28, #0x48                  	// #72
  42ccc0:	ldr	x5, [x29, #152]
  42ccc4:	madd	x28, x0, x28, x28
  42ccc8:	add	x3, x3, #0x1
  42cccc:	ldr	x0, [x29, #128]
  42ccd0:	lsl	x21, x5, #3
  42ccd4:	add	x5, x28, x5, lsl #3
  42ccd8:	str	x5, [x29, #112]
  42ccdc:	add	x25, x5, x3, lsl #5
  42cce0:	add	x0, x0, #0x1
  42cce4:	add	x0, x0, x25
  42cce8:	bl	4045f0 <malloc@plt>
  42ccec:	str	x0, [x29, #456]
  42ccf0:	mov	x20, x0
  42ccf4:	ldr	x5, [x29, #112]
  42ccf8:	cbnz	x0, 42cd34 <argp_parse@@Base+0x184>
  42ccfc:	mov	w19, #0xc                   	// #12
  42cd00:	mov	sp, x29
  42cd04:	mov	w0, w19
  42cd08:	ldp	x19, x20, [sp, #16]
  42cd0c:	ldp	x21, x22, [sp, #32]
  42cd10:	ldp	x23, x24, [sp, #48]
  42cd14:	ldp	x25, x26, [sp, #64]
  42cd18:	ldp	x27, x28, [sp, #80]
  42cd1c:	ldp	x29, x30, [sp], #464
  42cd20:	ret
  42cd24:	add	x0, x0, #0x38
  42cd28:	add	x1, x6, #0x40
  42cd2c:	str	x0, [x6, #32]
  42cd30:	b	42cc80 <argp_parse@@Base+0xd0>
  42cd34:	add	x5, x0, x5
  42cd38:	add	x4, x0, x25
  42cd3c:	add	x28, x0, x28
  42cd40:	mov	x0, #0x100000001           	// #4294967297
  42cd44:	add	x1, x29, #0xc0
  42cd48:	mov	x2, #0x38                  	// #56
  42cd4c:	stp	x5, x4, [x29, #104]
  42cd50:	str	x0, [x29, #192]
  42cd54:	add	x0, x29, #0x110
  42cd58:	stp	x4, x5, [x29, #256]
  42cd5c:	str	x20, [x29, #328]
  42cd60:	str	x28, [x29, #344]
  42cd64:	bl	404200 <memcpy@plt>
  42cd68:	mov	x2, x21
  42cd6c:	mov	x0, x28
  42cd70:	mov	w1, #0x0                   	// #0
  42cd74:	bl	404700 <memset@plt>
  42cd78:	ldp	x5, x4, [x29, #104]
  42cd7c:	add	x21, x29, #0xf8
  42cd80:	stp	x21, x4, [x29, #160]
  42cd84:	stp	x5, x28, [x29, #176]
  42cd88:	tbz	w22, #3, 42ceb4 <argp_parse@@Base+0x304>
  42cd8c:	add	x4, x4, #0x1
  42cd90:	mov	w0, #0x2d                  	// #45
  42cd94:	str	x4, [x29, #168]
  42cd98:	strb	w0, [x20, x25]
  42cd9c:	ldr	x0, [x29, #168]
  42cda0:	strb	wzr, [x0]
  42cda4:	ldr	x0, [x29, #176]
  42cda8:	str	xzr, [x0]
  42cdac:	str	x19, [x29, #248]
  42cdb0:	cbz	x19, 42cec8 <argp_parse@@Base+0x318>
  42cdb4:	ldr	x3, [x29, #328]
  42cdb8:	add	x4, x29, #0xa0
  42cdbc:	mov	x0, x19
  42cdc0:	mov	w2, #0x0                   	// #0
  42cdc4:	mov	x1, #0x0                   	// #0
  42cdc8:	bl	42c7d4 <argp_error@@Base+0x238>
  42cdcc:	str	x0, [x29, #336]
  42cdd0:	ldr	x0, [x29, #248]
  42cdd4:	str	x0, [x29, #360]
  42cdd8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42cddc:	stp	xzr, xzr, [x29, #368]
  42cde0:	ldr	x0, [x0, #1160]
  42cde4:	stp	xzr, xzr, [x21, #136]
  42cde8:	stp	xzr, xzr, [x21, #152]
  42cdec:	stp	xzr, xzr, [x21, #168]
  42cdf0:	str	x0, [x29, #432]
  42cdf4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42cdf8:	ldr	x20, [x29, #328]
  42cdfc:	str	w26, [x29, #368]
  42ce00:	ldr	x0, [x0, #1168]
  42ce04:	str	x0, [x29, #440]
  42ce08:	mov	w0, #0x1                   	// #1
  42ce0c:	str	w0, [x29, #352]
  42ce10:	ldr	x0, [x29, #336]
  42ce14:	str	x24, [x29, #376]
  42ce18:	str	w22, [x29, #388]
  42ce1c:	str	x21, [x29, #448]
  42ce20:	cmp	x20, x0
  42ce24:	b.cs	42ce30 <argp_parse@@Base+0x280>  // b.hs, b.nlast
  42ce28:	ldr	x0, [x29, #120]
  42ce2c:	str	x0, [x20, #48]
  42ce30:	mov	w25, #0x3                   	// #3
  42ce34:	add	x22, x21, #0x70
  42ce38:	mov	w19, #0x0                   	// #0
  42ce3c:	movk	w25, #0x100, lsl #16
  42ce40:	ldr	x0, [x29, #336]
  42ce44:	cmp	x20, x0
  42ce48:	b.cs	42ced0 <argp_parse@@Base+0x320>  // b.hs, b.nlast
  42ce4c:	cmp	w19, #0x0
  42ce50:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  42ce54:	b.ne	42cd00 <argp_parse@@Base+0x150>  // b.any
  42ce58:	ldr	x0, [x20, #32]
  42ce5c:	cbz	x0, 42ce70 <argp_parse@@Base+0x2c0>
  42ce60:	ldr	w1, [x20, #40]
  42ce64:	ldr	x0, [x0, #56]
  42ce68:	ldr	x0, [x0, x1, lsl #3]
  42ce6c:	str	x0, [x20, #48]
  42ce70:	ldr	x0, [x20]
  42ce74:	cbnz	x0, 42ce94 <argp_parse@@Base+0x2e4>
  42ce78:	ldr	x0, [x20, #8]
  42ce7c:	ldr	x0, [x0, #32]
  42ce80:	cbz	x0, 42ce94 <argp_parse@@Base+0x2e4>
  42ce84:	ldr	x0, [x0]
  42ce88:	cbz	x0, 42ce94 <argp_parse@@Base+0x2e4>
  42ce8c:	ldp	x1, x0, [x20, #48]
  42ce90:	str	x1, [x0]
  42ce94:	mov	x0, x20
  42ce98:	mov	w2, w25
  42ce9c:	mov	x1, x22
  42cea0:	mov	x3, #0x0                   	// #0
  42cea4:	add	x20, x20, #0x48
  42cea8:	bl	42c6bc <argp_error@@Base+0x120>
  42ceac:	mov	w19, w0
  42ceb0:	b	42ce40 <argp_parse@@Base+0x290>
  42ceb4:	cbz	w27, 42cd9c <argp_parse@@Base+0x1ec>
  42ceb8:	add	x4, x4, #0x1
  42cebc:	mov	w0, #0x2b                  	// #43
  42cec0:	str	x4, [x29, #168]
  42cec4:	b	42cd98 <argp_parse@@Base+0x1e8>
  42cec8:	ldr	x0, [x29, #328]
  42cecc:	b	42cdcc <argp_parse@@Base+0x21c>
  42ced0:	cmp	w19, #0x7
  42ced4:	b.eq	42cedc <argp_parse@@Base+0x32c>  // b.none
  42ced8:	cbnz	w19, 42cd00 <argp_parse@@Base+0x150>
  42cedc:	ldr	w1, [x29, #388]
  42cee0:	tbz	w1, #1, 42d058 <argp_parse@@Base+0x4a8>
  42cee4:	str	wzr, [x29, #276]
  42cee8:	ldr	x0, [x29, #376]
  42ceec:	tbz	w1, #0, 42cf04 <argp_parse@@Base+0x354>
  42cef0:	sub	x0, x0, #0x8
  42cef4:	str	x0, [x29, #376]
  42cef8:	ldr	w0, [x29, #368]
  42cefc:	add	w0, w0, #0x1
  42cf00:	str	w0, [x29, #368]
  42cf04:	ldr	x0, [x29, #376]
  42cf08:	cmp	x24, x0
  42cf0c:	b.ne	42d064 <argp_parse@@Base+0x4b4>  // b.any
  42cf10:	ldr	x0, [x24]
  42cf14:	cbz	x0, 42d064 <argp_parse@@Base+0x4b4>
  42cf18:	bl	42dde0 <argp_usage@@Base+0x900>
  42cf1c:	mov	w25, #0x6                   	// #6
  42cf20:	adrp	x26, 44e000 <_obstack_memory_used@@Base+0x16380>
  42cf24:	add	x24, x21, #0x70
  42cf28:	add	x26, x26, #0x8db
  42cf2c:	movk	w25, #0x100, lsl #16
  42cf30:	str	x0, [x29, #424]
  42cf34:	ldr	w0, [x29, #396]
  42cf38:	ldr	w1, [x29, #384]
  42cf3c:	cbz	w0, 42cf4c <argp_parse@@Base+0x39c>
  42cf40:	cmp	w0, w1
  42cf44:	b.le	42cf4c <argp_parse@@Base+0x39c>
  42cf48:	str	wzr, [x29, #396]
  42cf4c:	ldr	w0, [x29, #352]
  42cf50:	cbz	w0, 42cfc8 <argp_parse@@Base+0x418>
  42cf54:	ldr	w22, [x29, #396]
  42cf58:	cbnz	w22, 42cfc8 <argp_parse@@Base+0x418>
  42cf5c:	ldr	w4, [x29, #388]
  42cf60:	add	x5, x21, #0x18
  42cf64:	str	w1, [x29, #272]
  42cf68:	mov	w1, #0xffffffff            	// #-1
  42cf6c:	str	w1, [x29, #280]
  42cf70:	ldr	w0, [x29, #368]
  42cf74:	ldp	x2, x3, [x29, #256]
  42cf78:	ldr	x1, [x29, #376]
  42cf7c:	tbz	w4, #6, 42d070 <argp_parse@@Base+0x4c0>
  42cf80:	mov	x4, #0x0                   	// #0
  42cf84:	bl	4378e0 <argp_usage@@Base+0xa400>
  42cf88:	ldr	w19, [x29, #272]
  42cf8c:	mov	w20, w0
  42cf90:	str	w19, [x29, #384]
  42cf94:	cmn	w0, #0x1
  42cf98:	b.ne	42d07c <argp_parse@@Base+0x4cc>  // b.any
  42cf9c:	str	wzr, [x29, #352]
  42cfa0:	cmp	w19, #0x1
  42cfa4:	b.le	42cfc8 <argp_parse@@Base+0x418>
  42cfa8:	mov	x0, #0xfffffffffffffff8    	// #-8
  42cfac:	mov	x1, x26
  42cfb0:	ldr	x2, [x29, #376]
  42cfb4:	add	x0, x0, w19, sxtw #3
  42cfb8:	ldr	x0, [x2, x0]
  42cfbc:	bl	404a30 <strcmp@plt>
  42cfc0:	cbnz	w0, 42cfc8 <argp_parse@@Base+0x418>
  42cfc4:	str	w19, [x29, #396]
  42cfc8:	ldr	w1, [x29, #368]
  42cfcc:	ldr	w0, [x29, #384]
  42cfd0:	cmp	w0, w1
  42cfd4:	b.ge	42d2c0 <argp_parse@@Base+0x710>  // b.tcont
  42cfd8:	ldr	w1, [x29, #388]
  42cfdc:	tbnz	w1, #2, 42d2c0 <argp_parse@@Base+0x710>
  42cfe0:	add	w1, w0, #0x1
  42cfe4:	str	w1, [x29, #384]
  42cfe8:	ldr	x1, [x29, #376]
  42cfec:	ldr	x0, [x1, w0, sxtw #3]
  42cff0:	str	x0, [x29, #288]
  42cff4:	ldr	w22, [x29, #384]
  42cff8:	mov	w0, #0x0                   	// #0
  42cffc:	ldr	x27, [x29, #288]
  42d000:	sub	w22, w22, #0x1
  42d004:	ldr	x20, [x29, #328]
  42d008:	mov	w19, #0x7                   	// #7
  42d00c:	str	w22, [x29, #384]
  42d010:	ldr	x1, [x29, #336]
  42d014:	cmp	x20, x1
  42d018:	b.cs	42d024 <argp_parse@@Base+0x474>  // b.hs, b.nlast
  42d01c:	cmp	w19, #0x7
  42d020:	b.eq	42d098 <argp_parse@@Base+0x4e8>  // b.none
  42d024:	cbnz	w19, 42d1e0 <argp_parse@@Base+0x630>
  42d028:	cmp	w0, w25
  42d02c:	b.ne	42d038 <argp_parse@@Base+0x488>  // b.any
  42d030:	ldr	w0, [x29, #368]
  42d034:	str	w0, [x29, #384]
  42d038:	ldr	w0, [x29, #384]
  42d03c:	cmp	w22, w0
  42d040:	b.ge	42d0fc <argp_parse@@Base+0x54c>  // b.tcont
  42d044:	sub	w22, w0, w22
  42d048:	ldur	w0, [x20, #-48]
  42d04c:	add	w22, w0, w22
  42d050:	stur	w22, [x20, #-48]
  42d054:	b	42cf34 <argp_parse@@Base+0x384>
  42d058:	mov	w0, #0x1                   	// #1
  42d05c:	str	w0, [x29, #276]
  42d060:	b	42cf04 <argp_parse@@Base+0x354>
  42d064:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42d068:	ldr	x0, [x0, #1192]
  42d06c:	b	42cf1c <argp_parse@@Base+0x36c>
  42d070:	mov	x4, #0x0                   	// #0
  42d074:	bl	4378c4 <argp_usage@@Base+0xa3e4>
  42d078:	b	42cf88 <argp_parse@@Base+0x3d8>
  42d07c:	cmp	w0, #0x3f
  42d080:	b.ne	42d438 <argp_parse@@Base+0x888>  // b.any
  42d084:	ldr	w0, [x29, #280]
  42d088:	cmn	w0, #0x1
  42d08c:	b.eq	42d440 <argp_parse@@Base+0x890>  // b.none
  42d090:	mov	w19, #0x7                   	// #7
  42d094:	b	42d1f4 <argp_parse@@Base+0x644>
  42d098:	ldr	w0, [x29, #384]
  42d09c:	mov	x3, x27
  42d0a0:	mov	x1, x24
  42d0a4:	mov	w2, #0x0                   	// #0
  42d0a8:	add	w0, w0, #0x1
  42d0ac:	str	w0, [x29, #384]
  42d0b0:	mov	x0, x20
  42d0b4:	bl	42c6bc <argp_error@@Base+0x120>
  42d0b8:	mov	w19, w0
  42d0bc:	cmp	w0, #0x7
  42d0c0:	b.ne	42d0f4 <argp_parse@@Base+0x544>  // b.any
  42d0c4:	ldr	w0, [x29, #384]
  42d0c8:	mov	w2, w25
  42d0cc:	mov	x1, x24
  42d0d0:	mov	x3, #0x0                   	// #0
  42d0d4:	sub	w0, w0, #0x1
  42d0d8:	str	w0, [x29, #384]
  42d0dc:	mov	x0, x20
  42d0e0:	bl	42c6bc <argp_error@@Base+0x120>
  42d0e4:	mov	w19, w0
  42d0e8:	mov	w0, w25
  42d0ec:	add	x20, x20, #0x48
  42d0f0:	b	42d010 <argp_parse@@Base+0x460>
  42d0f4:	mov	w0, #0x0                   	// #0
  42d0f8:	b	42d0ec <argp_parse@@Base+0x53c>
  42d0fc:	mov	w0, #0x1                   	// #1
  42d100:	str	w0, [x29, #352]
  42d104:	b	42cf34 <argp_parse@@Base+0x384>
  42d108:	ldp	x0, x2, [x29, #328]
  42d10c:	cmp	x0, x2
  42d110:	b.cs	42d460 <argp_parse@@Base+0x8b0>  // b.hs, b.nlast
  42d114:	ldr	x3, [x0, #16]
  42d118:	cmp	x1, x3
  42d11c:	b.cs	42d198 <argp_parse@@Base+0x5e8>  // b.hs, b.nlast
  42d120:	ldr	x3, [x29, #288]
  42d124:	mov	w2, w20
  42d128:	mov	x1, x24
  42d12c:	bl	42c6bc <argp_error@@Base+0x120>
  42d130:	mov	w19, w0
  42d134:	cmp	w0, #0x7
  42d138:	b.ne	42d1f0 <argp_parse@@Base+0x640>  // b.any
  42d13c:	cbz	w27, 42d460 <argp_parse@@Base+0x8b0>
  42d140:	ldr	x0, [x29, #264]
  42d144:	ldr	w1, [x0, #24]
  42d148:	ldr	x19, [x0]
  42d14c:	cmp	w20, w1
  42d150:	b.ne	42d1d4 <argp_parse@@Base+0x624>  // b.any
  42d154:	cbnz	x19, 42d160 <argp_parse@@Base+0x5b0>
  42d158:	adrp	x19, 44e000 <_obstack_memory_used@@Base+0x16380>
  42d15c:	add	x19, x19, #0x10
  42d160:	ldr	x0, [x29, #248]
  42d164:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42d168:	add	x1, x1, #0xd8
  42d16c:	mov	w2, #0x5                   	// #5
  42d170:	add	x1, x1, #0x70
  42d174:	ldr	x0, [x0, #48]
  42d178:	bl	404d00 <dcgettext@plt>
  42d17c:	mov	x3, x0
  42d180:	mov	x2, x19
  42d184:	add	x0, x21, #0x70
  42d188:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42d18c:	add	x1, x1, #0x1c
  42d190:	bl	42c59c <argp_error@@Base>
  42d194:	b	42d494 <argp_parse@@Base+0x8e4>
  42d198:	add	x0, x0, #0x48
  42d19c:	b	42d10c <argp_parse@@Base+0x55c>
  42d1a0:	mov	w0, #0xff000000            	// #-16777216
  42d1a4:	ands	w1, w20, #0x800000
  42d1a8:	csel	w1, w1, w0, eq  // eq = none
  42d1ac:	mov	x3, #0xffffffffffffffb8    	// #-72
  42d1b0:	mov	w0, #0x48                  	// #72
  42d1b4:	and	w2, w20, #0xffffff
  42d1b8:	ldr	x4, [x29, #328]
  42d1bc:	smaddl	x0, w27, w0, x3
  42d1c0:	orr	w2, w2, w1
  42d1c4:	mov	x1, x24
  42d1c8:	add	x0, x4, x0
  42d1cc:	ldr	x3, [x29, #288]
  42d1d0:	b	42d12c <argp_parse@@Base+0x57c>
  42d1d4:	cbz	x19, 42d158 <argp_parse@@Base+0x5a8>
  42d1d8:	add	x0, x0, #0x20
  42d1dc:	b	42d144 <argp_parse@@Base+0x594>
  42d1e0:	cmp	w19, #0x7
  42d1e4:	b.ne	42d2c8 <argp_parse@@Base+0x718>  // b.any
  42d1e8:	mov	w20, #0x1                   	// #1
  42d1ec:	b	42d494 <argp_parse@@Base+0x8e4>
  42d1f0:	cbz	w0, 42cf34 <argp_parse@@Base+0x384>
  42d1f4:	cmp	w19, #0x7
  42d1f8:	and	w22, w22, #0x1
  42d1fc:	csel	w22, w22, wzr, eq  // eq = none
  42d200:	cbz	w22, 42d3e0 <argp_parse@@Base+0x830>
  42d204:	ldr	w1, [x29, #368]
  42d208:	ldr	w0, [x29, #384]
  42d20c:	cmp	w0, w1
  42d210:	b.ne	42d334 <argp_parse@@Base+0x784>  // b.any
  42d214:	ldr	x22, [x29, #328]
  42d218:	mov	w25, #0x2                   	// #2
  42d21c:	add	x24, x21, #0x70
  42d220:	mov	w19, #0x0                   	// #0
  42d224:	movk	w25, #0x100, lsl #16
  42d228:	ldr	x20, [x29, #336]
  42d22c:	cmp	x22, x20
  42d230:	b.cs	42d240 <argp_parse@@Base+0x690>  // b.hs, b.nlast
  42d234:	cmp	w19, #0x0
  42d238:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  42d23c:	b.eq	42d2d0 <argp_parse@@Base+0x720>  // b.none
  42d240:	mov	w24, #0x1                   	// #1
  42d244:	sub	x20, x20, #0x48
  42d248:	add	x22, x21, #0x70
  42d24c:	movk	w24, #0x100, lsl #16
  42d250:	ldr	x0, [x29, #328]
  42d254:	cmp	x20, x0
  42d258:	b.cc	42d318 <argp_parse@@Base+0x768>  // b.lo, b.ul, b.last
  42d25c:	cmp	w19, #0x0
  42d260:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  42d264:	b.eq	42d2f8 <argp_parse@@Base+0x748>  // b.none
  42d268:	cbnz	x23, 42d324 <argp_parse@@Base+0x774>
  42d26c:	ldr	x20, [x29, #328]
  42d270:	mov	w23, #0x5                   	// #5
  42d274:	add	x22, x21, #0x70
  42d278:	movk	w23, #0x100, lsl #16
  42d27c:	ldr	x0, [x29, #336]
  42d280:	cmp	x20, x0
  42d284:	b.cc	42d3e8 <argp_parse@@Base+0x838>  // b.lo, b.ul, b.last
  42d288:	ldr	x20, [x29, #336]
  42d28c:	mov	w22, #0x7                   	// #7
  42d290:	add	x21, x21, #0x70
  42d294:	movk	w22, #0x100, lsl #16
  42d298:	sub	x20, x20, #0x48
  42d29c:	ldr	x0, [x29, #328]
  42d2a0:	cmp	x20, x0
  42d2a4:	b.cs	42d410 <argp_parse@@Base+0x860>  // b.hs, b.nlast
  42d2a8:	cmp	w19, #0x7
  42d2ac:	mov	w0, #0x16                  	// #22
  42d2b0:	csel	w19, w19, w0, ne  // ne = any
  42d2b4:	ldr	x0, [x29, #456]
  42d2b8:	bl	404ae0 <free@plt>
  42d2bc:	b	42cd00 <argp_parse@@Base+0x150>
  42d2c0:	mov	w22, #0x1                   	// #1
  42d2c4:	b	42d090 <argp_parse@@Base+0x4e0>
  42d2c8:	mov	w22, #0x0                   	// #0
  42d2cc:	b	42d1f4 <argp_parse@@Base+0x644>
  42d2d0:	ldr	w0, [x22, #24]
  42d2d4:	cbnz	w0, 42d2f0 <argp_parse@@Base+0x740>
  42d2d8:	mov	w2, w25
  42d2dc:	mov	x1, x24
  42d2e0:	mov	x0, x22
  42d2e4:	mov	x3, #0x0                   	// #0
  42d2e8:	bl	42c6bc <argp_error@@Base+0x120>
  42d2ec:	mov	w19, w0
  42d2f0:	add	x22, x22, #0x48
  42d2f4:	b	42d228 <argp_parse@@Base+0x678>
  42d2f8:	mov	x0, x20
  42d2fc:	mov	w2, w24
  42d300:	mov	x1, x22
  42d304:	mov	x3, #0x0                   	// #0
  42d308:	sub	x20, x20, #0x48
  42d30c:	bl	42c6bc <argp_error@@Base+0x120>
  42d310:	mov	w19, w0
  42d314:	b	42d250 <argp_parse@@Base+0x6a0>
  42d318:	cmp	w19, #0x7
  42d31c:	b.eq	42d42c <argp_parse@@Base+0x87c>  // b.none
  42d320:	cbz	x23, 42d32c <argp_parse@@Base+0x77c>
  42d324:	ldr	w0, [x29, #384]
  42d328:	str	w0, [x23]
  42d32c:	cbz	w19, 42d33c <argp_parse@@Base+0x78c>
  42d330:	b	42d26c <argp_parse@@Base+0x6bc>
  42d334:	cbz	x23, 42d38c <argp_parse@@Base+0x7dc>
  42d338:	str	w0, [x23]
  42d33c:	ldr	x20, [x29, #336]
  42d340:	mov	w23, #0x4                   	// #4
  42d344:	add	x22, x21, #0x70
  42d348:	mov	w19, #0x0                   	// #0
  42d34c:	sub	x20, x20, #0x48
  42d350:	movk	w23, #0x100, lsl #16
  42d354:	ldr	x0, [x29, #328]
  42d358:	cmp	x20, x0
  42d35c:	b.cc	42d404 <argp_parse@@Base+0x854>  // b.lo, b.ul, b.last
  42d360:	cmp	w19, #0x0
  42d364:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  42d368:	b.ne	42d288 <argp_parse@@Base+0x6d8>  // b.any
  42d36c:	mov	x0, x20
  42d370:	mov	w2, w23
  42d374:	mov	x1, x22
  42d378:	mov	x3, #0x0                   	// #0
  42d37c:	sub	x20, x20, #0x48
  42d380:	bl	42c6bc <argp_error@@Base+0x120>
  42d384:	mov	w19, w0
  42d388:	b	42d354 <argp_parse@@Base+0x7a4>
  42d38c:	ldr	w0, [x29, #388]
  42d390:	tbnz	w0, #1, 42d3c8 <argp_parse@@Base+0x818>
  42d394:	ldr	x19, [x29, #432]
  42d398:	cbz	x19, 42d3c8 <argp_parse@@Base+0x818>
  42d39c:	ldr	x0, [x29, #248]
  42d3a0:	mov	w2, #0x5                   	// #5
  42d3a4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42d3a8:	add	x1, x1, #0x25
  42d3ac:	ldr	x0, [x0, #48]
  42d3b0:	bl	404d00 <dcgettext@plt>
  42d3b4:	mov	x2, x0
  42d3b8:	ldr	x3, [x29, #424]
  42d3bc:	mov	x0, x19
  42d3c0:	mov	w1, #0x1                   	// #1
  42d3c4:	bl	404a20 <__fprintf_chk@plt>
  42d3c8:	ldr	x1, [x29, #432]
  42d3cc:	add	x0, x21, #0x70
  42d3d0:	mov	w2, #0x104                 	// #260
  42d3d4:	mov	w19, #0x7                   	// #7
  42d3d8:	bl	42c510 <argp_state_help@@Base>
  42d3dc:	b	42d26c <argp_parse@@Base+0x6bc>
  42d3e0:	b.ne	42d26c <argp_parse@@Base+0x6bc>  // b.any
  42d3e4:	b	42d3c8 <argp_parse@@Base+0x818>
  42d3e8:	mov	x0, x20
  42d3ec:	mov	w2, w23
  42d3f0:	mov	x1, x22
  42d3f4:	mov	x3, #0x0                   	// #0
  42d3f8:	add	x20, x20, #0x48
  42d3fc:	bl	42c6bc <argp_error@@Base+0x120>
  42d400:	b	42d27c <argp_parse@@Base+0x6cc>
  42d404:	cmp	w19, #0x7
  42d408:	csel	w19, w19, wzr, ne  // ne = any
  42d40c:	b	42d288 <argp_parse@@Base+0x6d8>
  42d410:	mov	x0, x20
  42d414:	mov	w2, w22
  42d418:	mov	x1, x21
  42d41c:	mov	x3, #0x0                   	// #0
  42d420:	sub	x20, x20, #0x48
  42d424:	bl	42c6bc <argp_error@@Base+0x120>
  42d428:	b	42d29c <argp_parse@@Base+0x6ec>
  42d42c:	cbz	x23, 42d33c <argp_parse@@Base+0x78c>
  42d430:	mov	w19, #0x0                   	// #0
  42d434:	b	42d324 <argp_parse@@Base+0x774>
  42d438:	cmp	w0, #0x1
  42d43c:	b.eq	42cff4 <argp_parse@@Base+0x444>  // b.none
  42d440:	asr	w27, w20, #24
  42d444:	cmp	wzr, w20, asr #24
  42d448:	b.ne	42d1a0 <argp_parse@@Base+0x5f0>  // b.any
  42d44c:	ldr	x0, [x29, #256]
  42d450:	mov	w1, w20
  42d454:	bl	404b90 <strchr@plt>
  42d458:	mov	x1, x0
  42d45c:	cbnz	x0, 42d108 <argp_parse@@Base+0x558>
  42d460:	ldr	x0, [x29, #248]
  42d464:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42d468:	add	x1, x1, #0xd8
  42d46c:	mov	w2, #0x5                   	// #5
  42d470:	add	x1, x1, #0x70
  42d474:	ldr	x0, [x0, #48]
  42d478:	bl	404d00 <dcgettext@plt>
  42d47c:	mov	x3, x0
  42d480:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42d484:	mov	w2, w20
  42d488:	add	x1, x1, #0x14
  42d48c:	add	x0, x21, #0x70
  42d490:	bl	42c59c <argp_error@@Base>
  42d494:	cmp	w20, #0x1
  42d498:	cset	w22, eq  // eq = none
  42d49c:	b	42d090 <argp_parse@@Base+0x4e0>
  42d4a0:	mov	x2, x0
  42d4a4:	mov	x0, x1
  42d4a8:	cbz	x1, 42d4d4 <argp_parse@@Base+0x924>
  42d4ac:	ldr	x0, [x1, #88]
  42d4b0:	ldp	x1, x0, [x0, #80]
  42d4b4:	cmp	x0, x1
  42d4b8:	b.hi	42d4c4 <argp_parse@@Base+0x914>  // b.pmore
  42d4bc:	mov	x0, #0x0                   	// #0
  42d4c0:	b	42d4d4 <argp_parse@@Base+0x924>
  42d4c4:	ldr	x3, [x1, #8]
  42d4c8:	cmp	x3, x2
  42d4cc:	b.ne	42d4d8 <argp_parse@@Base+0x928>  // b.any
  42d4d0:	ldr	x0, [x1, #48]
  42d4d4:	ret
  42d4d8:	add	x1, x1, #0x48
  42d4dc:	b	42d4b4 <argp_parse@@Base+0x904>

000000000042d4e0 <argp_usage@@Base>:
  42d4e0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  42d4e4:	mov	w2, #0x106                 	// #262
  42d4e8:	ldr	x1, [x1, #1160]
  42d4ec:	b	42c510 <argp_state_help@@Base>
  42d4f0:	ldr	w2, [x0, #24]
  42d4f4:	tbnz	w2, #3, 42d538 <argp_usage@@Base+0x58>
  42d4f8:	stp	x29, x30, [sp, #-32]!
  42d4fc:	mov	x1, x0
  42d500:	and	w0, w2, #0x8
  42d504:	mov	x29, sp
  42d508:	str	x19, [sp, #16]
  42d50c:	ldr	w19, [x1, #8]
  42d510:	sub	w1, w19, #0x1
  42d514:	cmp	w1, #0xfe
  42d518:	b.hi	42d52c <argp_usage@@Base+0x4c>  // b.pmore
  42d51c:	bl	404a60 <__ctype_b_loc@plt>
  42d520:	ldr	x0, [x0]
  42d524:	ldrh	w0, [x0, w19, sxtw #1]
  42d528:	ubfx	x0, x0, #14, #1
  42d52c:	ldr	x19, [sp, #16]
  42d530:	ldp	x29, x30, [sp], #32
  42d534:	ret
  42d538:	mov	w0, #0x0                   	// #0
  42d53c:	ret
  42d540:	mov	x1, x0
  42d544:	ldr	w0, [x0, #8]
  42d548:	cbnz	w0, 42d56c <argp_usage@@Base+0x8c>
  42d54c:	ldr	x2, [x1]
  42d550:	cbnz	x2, 42d568 <argp_usage@@Base+0x88>
  42d554:	ldr	x2, [x1, #32]
  42d558:	cbnz	x2, 42d568 <argp_usage@@Base+0x88>
  42d55c:	ldr	w0, [x1, #40]
  42d560:	cmp	w0, #0x0
  42d564:	cset	w0, eq  // eq = none
  42d568:	ret
  42d56c:	mov	w0, #0x0                   	// #0
  42d570:	b	42d568 <argp_usage@@Base+0x88>
  42d574:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  42d578:	add	x5, x1, #0xdb8
  42d57c:	adrp	x3, 448000 <_obstack_memory_used@@Base+0x10380>
  42d580:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  42d584:	ldr	x4, [x1, #3512]
  42d588:	add	x3, x3, #0x859
  42d58c:	ldr	x1, [x5, #8]
  42d590:	add	x2, x2, #0x74c
  42d594:	b	436bc0 <argp_usage@@Base+0x96e0>
  42d598:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  42d59c:	adrp	x2, 42d000 <argp_parse@@Base+0x450>
  42d5a0:	add	x2, x2, #0x574
  42d5a4:	str	x2, [x3, #3504]
  42d5a8:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  42d5ac:	add	x3, x2, #0xdb8
  42d5b0:	str	x1, [x2, #3512]
  42d5b4:	str	x0, [x3, #8]
  42d5b8:	ret
  42d5bc:	stp	x29, x30, [sp, #-32]!
  42d5c0:	mov	x29, sp
  42d5c4:	str	x19, [sp, #16]
  42d5c8:	cbnz	x0, 42d614 <argp_usage@@Base+0x134>
  42d5cc:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  42d5d0:	add	x0, x0, #0x648
  42d5d4:	bl	404e40 <getenv@plt>
  42d5d8:	mov	x19, x0
  42d5dc:	cbz	x0, 42d5f8 <argp_usage@@Base+0x118>
  42d5e0:	ldrb	w0, [x19]
  42d5e4:	cbz	w0, 42d5f8 <argp_usage@@Base+0x118>
  42d5e8:	mov	x0, x19
  42d5ec:	bl	42dde0 <argp_usage@@Base+0x900>
  42d5f0:	cmp	x19, x0
  42d5f4:	b.eq	42d600 <argp_usage@@Base+0x120>  // b.none
  42d5f8:	adrp	x19, 449000 <_obstack_memory_used@@Base+0x11380>
  42d5fc:	add	x19, x19, #0x2af
  42d600:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42d604:	str	x19, [x0, #3528]
  42d608:	ldr	x19, [sp, #16]
  42d60c:	ldp	x29, x30, [sp], #32
  42d610:	ret
  42d614:	mov	x19, x0
  42d618:	b	42d5e0 <argp_usage@@Base+0x100>
  42d61c:	stp	x29, x30, [sp, #-208]!
  42d620:	mov	x29, sp
  42d624:	stp	x27, x28, [sp, #80]
  42d628:	mov	x27, x1
  42d62c:	mov	w28, w2
  42d630:	str	w0, [sp, #152]
  42d634:	and	w0, w3, #0xff
  42d638:	stp	x19, x20, [sp, #16]
  42d63c:	stp	x21, x22, [sp, #32]
  42d640:	stp	x23, x24, [sp, #48]
  42d644:	stp	x25, x26, [sp, #64]
  42d648:	str	w0, [sp, #156]
  42d64c:	mov	x0, x1
  42d650:	bl	42dde0 <argp_usage@@Base+0x900>
  42d654:	sub	x23, x0, x27
  42d658:	bl	404280 <strlen@plt>
  42d65c:	add	x22, x23, x0
  42d660:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42d664:	str	x0, [sp, #112]
  42d668:	ldr	x1, [x0, #3528]
  42d66c:	cbnz	x1, 42d678 <argp_usage@@Base+0x198>
  42d670:	mov	x0, #0x0                   	// #0
  42d674:	bl	42d5bc <argp_usage@@Base+0xdc>
  42d678:	ldr	x0, [sp, #112]
  42d67c:	ldr	x0, [x0, #3528]
  42d680:	bl	404280 <strlen@plt>
  42d684:	add	x26, x0, #0x1
  42d688:	cmp	x26, #0x9
  42d68c:	add	x1, x22, #0x1
  42d690:	add	x0, x22, #0x1
  42d694:	str	x0, [sp, #144]
  42d698:	mov	x0, #0x9                   	// #9
  42d69c:	csel	x0, x26, x0, cs  // cs = hs, nlast
  42d6a0:	add	x0, x0, x1
  42d6a4:	str	x0, [sp, #120]
  42d6a8:	bl	4045f0 <malloc@plt>
  42d6ac:	mov	x19, x0
  42d6b0:	cbz	x0, 42daf0 <argp_usage@@Base+0x610>
  42d6b4:	mov	w0, #0xffffffff            	// #-1
  42d6b8:	mov	x20, #0x0                   	// #0
  42d6bc:	mov	x21, #0x0                   	// #0
  42d6c0:	str	w0, [sp, #204]
  42d6c4:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  42d6c8:	add	x0, x0, #0xc29
  42d6cc:	str	x0, [sp, #136]
  42d6d0:	ldr	x2, [sp, #144]
  42d6d4:	mov	x1, x27
  42d6d8:	mov	x0, x19
  42d6dc:	bl	404200 <memcpy@plt>
  42d6e0:	cmp	w28, #0x1
  42d6e4:	b.ne	42d768 <argp_usage@@Base+0x288>  // b.any
  42d6e8:	ldr	x0, [sp, #112]
  42d6ec:	mov	x2, x26
  42d6f0:	ldr	x1, [x0, #3528]
  42d6f4:	add	x0, x19, x22
  42d6f8:	bl	404200 <memcpy@plt>
  42d6fc:	ldr	w0, [sp, #156]
  42d700:	cbz	w0, 42db10 <argp_usage@@Base+0x630>
  42d704:	ldr	w0, [sp, #204]
  42d708:	tbz	w0, #31, 42d718 <argp_usage@@Base+0x238>
  42d70c:	mov	w0, #0xffffff9c            	// #-100
  42d710:	mov	x23, #0x0                   	// #0
  42d714:	str	w0, [sp, #204]
  42d718:	ldr	w2, [sp, #204]
  42d71c:	cmp	w28, #0x1
  42d720:	cset	w4, ne  // ne = any
  42d724:	add	x3, x19, x23
  42d728:	mov	x1, x27
  42d72c:	mov	w0, #0xffffff9c            	// #-100
  42d730:	bl	4361d4 <argp_usage@@Base+0x8cf4>
  42d734:	cbz	w0, 42db10 <argp_usage@@Base+0x630>
  42d738:	bl	404e10 <__errno_location@plt>
  42d73c:	ldr	w25, [x0]
  42d740:	mov	x24, x0
  42d744:	cmp	w25, #0x11
  42d748:	b.eq	42d6d0 <argp_usage@@Base+0x1f0>  // b.none
  42d74c:	cbz	x21, 42d758 <argp_usage@@Base+0x278>
  42d750:	mov	x0, x21
  42d754:	bl	404880 <closedir@plt>
  42d758:	mov	x0, x19
  42d75c:	bl	404ae0 <free@plt>
  42d760:	str	w25, [x24]
  42d764:	b	42daec <argp_usage@@Base+0x60c>
  42d768:	add	x25, x19, x23
  42d76c:	mov	x0, x25
  42d770:	bl	42de30 <argp_usage@@Base+0x950>
  42d774:	str	x0, [sp, #96]
  42d778:	cbz	x21, 42d7bc <argp_usage@@Base+0x2dc>
  42d77c:	mov	w24, #0x2                   	// #2
  42d780:	mov	x0, x21
  42d784:	bl	404a70 <rewinddir@plt>
  42d788:	ldr	x0, [sp, #120]
  42d78c:	str	x0, [sp, #104]
  42d790:	mov	x0, #0x1                   	// #1
  42d794:	str	x0, [sp, #128]
  42d798:	ldr	x0, [sp, #96]
  42d79c:	add	x0, x0, #0x4
  42d7a0:	str	x0, [sp, #160]
  42d7a4:	ldr	x0, [sp, #96]
  42d7a8:	add	x0, x0, #0x2
  42d7ac:	str	x0, [sp, #96]
  42d7b0:	add	x0, x22, #0x4
  42d7b4:	str	x0, [sp, #168]
  42d7b8:	b	42da28 <argp_usage@@Base+0x548>
  42d7bc:	ldr	x1, [sp, #136]
  42d7c0:	ldrh	w0, [x19, x23]
  42d7c4:	str	w0, [sp, #104]
  42d7c8:	mov	x0, x25
  42d7cc:	bl	404c40 <strcpy@plt>
  42d7d0:	ldr	w0, [sp, #152]
  42d7d4:	add	x3, sp, #0xcc
  42d7d8:	mov	x1, x19
  42d7dc:	mov	w2, #0x0                   	// #0
  42d7e0:	bl	431cbc <argp_usage@@Base+0x47dc>
  42d7e4:	mov	x21, x0
  42d7e8:	cbnz	x0, 42d8b8 <argp_usage@@Base+0x3d8>
  42d7ec:	bl	404e10 <__errno_location@plt>
  42d7f0:	ldr	w0, [x0]
  42d7f4:	cmp	w0, #0xc
  42d7f8:	cset	w24, eq  // eq = none
  42d7fc:	add	w24, w24, #0x2
  42d800:	ldrh	w0, [sp, #104]
  42d804:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42d808:	strh	w0, [x25]
  42d80c:	add	x1, x1, #0x2d0
  42d810:	ldr	x0, [sp, #96]
  42d814:	add	x0, x25, x0
  42d818:	bl	404c40 <strcpy@plt>
  42d81c:	cbnz	x21, 42d788 <argp_usage@@Base+0x2a8>
  42d820:	cmp	w24, #0x2
  42d824:	b.eq	42da5c <argp_usage@@Base+0x57c>  // b.none
  42d828:	cmp	w24, #0x3
  42d82c:	b.eq	42dad8 <argp_usage@@Base+0x5f8>  // b.none
  42d830:	cmp	w24, #0x1
  42d834:	b.ne	42d6fc <argp_usage@@Base+0x21c>  // b.any
  42d838:	mov	x0, x19
  42d83c:	bl	42dde0 <argp_usage@@Base+0x900>
  42d840:	mov	x24, x0
  42d844:	bl	42de30 <argp_usage@@Base+0x950>
  42d848:	str	x0, [sp, #96]
  42d84c:	cmp	x0, #0xe
  42d850:	b.ls	42d6fc <argp_usage@@Base+0x21c>  // b.plast
  42d854:	cbnz	x20, 42daa4 <argp_usage@@Base+0x5c4>
  42d858:	bl	404e10 <__errno_location@plt>
  42d85c:	ldr	w20, [sp, #204]
  42d860:	mov	x25, x0
  42d864:	tbz	w20, #31, 42da80 <argp_usage@@Base+0x5a0>
  42d868:	ldrh	w2, [x24]
  42d86c:	mov	x0, x24
  42d870:	ldr	x1, [sp, #136]
  42d874:	str	w2, [sp, #104]
  42d878:	bl	404c40 <strcpy@plt>
  42d87c:	str	wzr, [x25]
  42d880:	mov	w1, #0x3                   	// #3
  42d884:	mov	x0, x19
  42d888:	bl	404460 <pathconf@plt>
  42d88c:	ldr	w1, [x25]
  42d890:	ldr	w2, [sp, #104]
  42d894:	cmp	w1, #0x0
  42d898:	strh	w2, [x24]
  42d89c:	cset	x20, eq  // eq = none
  42d8a0:	sub	x20, x0, x20
  42d8a4:	tbz	x20, #63, 42daa4 <argp_usage@@Base+0x5c4>
  42d8a8:	cmn	x20, #0x1
  42d8ac:	b.eq	42d6fc <argp_usage@@Base+0x21c>  // b.none
  42d8b0:	mov	x20, #0xe                   	// #14
  42d8b4:	b	42dab0 <argp_usage@@Base+0x5d0>
  42d8b8:	mov	w24, #0x2                   	// #2
  42d8bc:	b	42d800 <argp_usage@@Base+0x320>
  42d8c0:	add	x25, x0, #0x13
  42d8c4:	mov	x0, x25
  42d8c8:	bl	404280 <strlen@plt>
  42d8cc:	ldr	x1, [sp, #160]
  42d8d0:	cmp	x0, x1
  42d8d4:	b.cc	42da28 <argp_usage@@Base+0x548>  // b.lo, b.ul, b.last
  42d8d8:	ldr	x2, [sp, #96]
  42d8dc:	mov	x1, x25
  42d8e0:	add	x0, x19, x23
  42d8e4:	bl	4049f0 <memcmp@plt>
  42d8e8:	cbnz	w0, 42da28 <argp_usage@@Base+0x548>
  42d8ec:	ldr	x0, [sp, #96]
  42d8f0:	add	x6, x25, x0
  42d8f4:	ldrb	w1, [x25, x0]
  42d8f8:	sub	w0, w1, #0x31
  42d8fc:	and	w0, w0, #0xff
  42d900:	cmp	w0, #0x8
  42d904:	b.hi	42da28 <argp_usage@@Base+0x548>  // b.pmore
  42d908:	cmp	w1, #0x39
  42d90c:	mov	x25, #0x1                   	// #1
  42d910:	cset	w3, eq  // eq = none
  42d914:	ldrb	w0, [x6, x25]
  42d918:	sub	w1, w0, #0x30
  42d91c:	cmp	w1, #0x9
  42d920:	b.ls	42da38 <argp_usage@@Base+0x558>  // b.plast
  42d924:	cmp	w0, #0x7e
  42d928:	b.ne	42da28 <argp_usage@@Base+0x548>  // b.any
  42d92c:	add	x0, x6, x25
  42d930:	ldrb	w0, [x0, #1]
  42d934:	cbnz	w0, 42da28 <argp_usage@@Base+0x548>
  42d938:	ldr	x0, [sp, #128]
  42d93c:	cmp	x25, x0
  42d940:	b.hi	42d974 <argp_usage@@Base+0x494>  // b.pmore
  42d944:	str	w3, [sp, #184]
  42d948:	b.ne	42da28 <argp_usage@@Base+0x548>  // b.any
  42d94c:	add	x0, x22, #0x2
  42d950:	mov	x1, x6
  42d954:	mov	x2, x25
  42d958:	add	x0, x19, x0
  42d95c:	str	x6, [sp, #176]
  42d960:	bl	4049f0 <memcmp@plt>
  42d964:	ldr	w3, [sp, #184]
  42d968:	cmp	w0, #0x0
  42d96c:	ldr	x6, [sp, #176]
  42d970:	b.gt	42da28 <argp_usage@@Base+0x548>
  42d974:	and	x4, x3, #0xff
  42d978:	mov	w24, w3
  42d97c:	add	x0, x25, x4
  42d980:	str	x0, [sp, #128]
  42d984:	ldr	x0, [sp, #168]
  42d988:	add	x1, x25, x4
  42d98c:	add	x3, x0, x1
  42d990:	ldr	x0, [sp, #104]
  42d994:	cmp	x3, x0
  42d998:	b.ls	42da48 <argp_usage@@Base+0x568>  // b.plast
  42d99c:	cmp	x3, #0x0
  42d9a0:	lsl	x0, x3, #1
  42d9a4:	cset	x1, lt  // lt = tstop
  42d9a8:	tbnz	x3, #62, 42d9b4 <argp_usage@@Base+0x4d4>
  42d9ac:	cmp	x1, #0x0
  42d9b0:	csel	x3, x3, x0, ne  // ne = any
  42d9b4:	mov	x1, x3
  42d9b8:	mov	x0, x19
  42d9bc:	str	x3, [sp, #104]
  42d9c0:	stp	x6, x4, [sp, #176]
  42d9c4:	bl	404820 <realloc@plt>
  42d9c8:	cbz	x0, 42dad8 <argp_usage@@Base+0x5f8>
  42d9cc:	ldp	x6, x4, [sp, #176]
  42d9d0:	mov	x19, x0
  42d9d4:	ldr	x3, [sp, #104]
  42d9d8:	add	x1, x19, x22
  42d9dc:	add	x0, x1, #0x2
  42d9e0:	mov	w2, #0x7e2e                	// #32302
  42d9e4:	add	x4, x0, x4
  42d9e8:	strh	w2, [x19, x22]
  42d9ec:	mov	w2, #0x30                  	// #48
  42d9f0:	strb	w2, [x1, #2]
  42d9f4:	mov	x0, x4
  42d9f8:	add	x2, x25, #0x2
  42d9fc:	mov	x1, x6
  42da00:	str	x3, [sp, #104]
  42da04:	bl	404200 <memcpy@plt>
  42da08:	add	x0, x0, x25
  42da0c:	ldr	x3, [sp, #104]
  42da10:	ldrb	w1, [x0, #-1]!
  42da14:	cmp	w1, #0x39
  42da18:	b.eq	42da50 <argp_usage@@Base+0x570>  // b.none
  42da1c:	add	w1, w1, #0x1
  42da20:	strb	w1, [x0]
  42da24:	str	x3, [sp, #104]
  42da28:	mov	x0, x21
  42da2c:	bl	404810 <readdir@plt>
  42da30:	cbnz	x0, 42d8c0 <argp_usage@@Base+0x3e0>
  42da34:	b	42d820 <argp_usage@@Base+0x340>
  42da38:	cmp	w0, #0x39
  42da3c:	add	x25, x25, #0x1
  42da40:	csel	w3, w3, wzr, eq  // eq = none
  42da44:	b	42d914 <argp_usage@@Base+0x434>
  42da48:	ldr	x3, [sp, #104]
  42da4c:	b	42d9d8 <argp_usage@@Base+0x4f8>
  42da50:	mov	w1, #0x30                  	// #48
  42da54:	strb	w1, [x0]
  42da58:	b	42da10 <argp_usage@@Base+0x530>
  42da5c:	cmp	w28, #0x2
  42da60:	b.ne	42d838 <argp_usage@@Base+0x358>  // b.any
  42da64:	ldr	x0, [sp, #112]
  42da68:	mov	x2, x26
  42da6c:	mov	w28, #0x1                   	// #1
  42da70:	ldr	x1, [x0, #3528]
  42da74:	add	x0, x19, x22
  42da78:	bl	404200 <memcpy@plt>
  42da7c:	b	42d838 <argp_usage@@Base+0x358>
  42da80:	str	wzr, [x25]
  42da84:	mov	w0, w20
  42da88:	mov	w1, #0x3                   	// #3
  42da8c:	bl	4049c0 <fpathconf@plt>
  42da90:	ldr	w1, [x25]
  42da94:	cmp	w1, #0x0
  42da98:	cset	x20, eq  // eq = none
  42da9c:	sub	x20, x0, x20
  42daa0:	b	42d8a4 <argp_usage@@Base+0x3c4>
  42daa4:	ldr	x0, [sp, #96]
  42daa8:	cmp	x0, x20
  42daac:	b.ls	42d6fc <argp_usage@@Base+0x21c>  // b.plast
  42dab0:	add	x0, x19, x22
  42dab4:	sub	x0, x0, x24
  42dab8:	cmp	x0, x20
  42dabc:	b.cc	42dac4 <argp_usage@@Base+0x5e4>  // b.lo, b.ul, b.last
  42dac0:	sub	x0, x20, #0x1
  42dac4:	mov	w1, #0x7e                  	// #126
  42dac8:	strb	w1, [x24, x0]
  42dacc:	add	x24, x24, x0
  42dad0:	strb	wzr, [x24, #1]
  42dad4:	b	42d6fc <argp_usage@@Base+0x21c>
  42dad8:	mov	x0, x19
  42dadc:	bl	404ae0 <free@plt>
  42dae0:	bl	404e10 <__errno_location@plt>
  42dae4:	mov	w1, #0xc                   	// #12
  42dae8:	str	w1, [x0]
  42daec:	mov	x19, #0x0                   	// #0
  42daf0:	mov	x0, x19
  42daf4:	ldp	x19, x20, [sp, #16]
  42daf8:	ldp	x21, x22, [sp, #32]
  42dafc:	ldp	x23, x24, [sp, #48]
  42db00:	ldp	x25, x26, [sp, #64]
  42db04:	ldp	x27, x28, [sp, #80]
  42db08:	ldp	x29, x30, [sp], #208
  42db0c:	ret
  42db10:	cbz	x21, 42daf0 <argp_usage@@Base+0x610>
  42db14:	mov	x0, x21
  42db18:	bl	404880 <closedir@plt>
  42db1c:	b	42daf0 <argp_usage@@Base+0x610>
  42db20:	stp	x29, x30, [sp, #-16]!
  42db24:	mov	w3, #0x0                   	// #0
  42db28:	mov	x29, sp
  42db2c:	bl	42d61c <argp_usage@@Base+0x13c>
  42db30:	cbnz	x0, 42db38 <argp_usage@@Base+0x658>
  42db34:	bl	40d4bc <wcrtomb@plt+0x856c>
  42db38:	ldp	x29, x30, [sp], #16
  42db3c:	ret
  42db40:	cbz	x1, 42db88 <argp_usage@@Base+0x6a8>
  42db44:	ldrb	w2, [x1]
  42db48:	cbz	w2, 42db88 <argp_usage@@Base+0x6a8>
  42db4c:	stp	x29, x30, [sp, #-32]!
  42db50:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  42db54:	mov	x4, #0x4                   	// #4
  42db58:	mov	x29, sp
  42db5c:	ldr	x5, [x2, #984]
  42db60:	str	x19, [sp, #16]
  42db64:	adrp	x19, 44e000 <_obstack_memory_used@@Base+0x16380>
  42db68:	add	x19, x19, #0x310
  42db6c:	mov	x3, x19
  42db70:	add	x2, x19, #0x20
  42db74:	bl	42a36c <wcrtomb@plt+0x2541c>
  42db78:	ldr	w0, [x19, x0, lsl #2]
  42db7c:	ldr	x19, [sp, #16]
  42db80:	ldp	x29, x30, [sp], #32
  42db84:	ret
  42db88:	mov	w0, #0x2                   	// #2
  42db8c:	ret
  42db90:	cbz	x1, 42dba0 <argp_usage@@Base+0x6c0>
  42db94:	ldrb	w2, [x1]
  42db98:	cbz	w2, 42dba0 <argp_usage@@Base+0x6c0>
  42db9c:	b	42db40 <argp_usage@@Base+0x660>
  42dba0:	stp	x29, x30, [sp, #-16]!
  42dba4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  42dba8:	add	x0, x0, #0x2d6
  42dbac:	mov	x29, sp
  42dbb0:	bl	404e40 <getenv@plt>
  42dbb4:	mov	x1, x0
  42dbb8:	ldp	x29, x30, [sp], #16
  42dbbc:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  42dbc0:	add	x0, x0, #0x2d5
  42dbc4:	b	42db9c <argp_usage@@Base+0x6bc>
  42dbc8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  42dbcc:	str	x0, [x1, #3536]
  42dbd0:	ret
  42dbd4:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  42dbd8:	strb	w0, [x1, #3544]
  42dbdc:	ret
  42dbe0:	stp	x29, x30, [sp, #-48]!
  42dbe4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42dbe8:	mov	x29, sp
  42dbec:	ldr	x0, [x0, #1168]
  42dbf0:	stp	x19, x20, [sp, #16]
  42dbf4:	stp	x21, x22, [sp, #32]
  42dbf8:	bl	443658 <_obstack_memory_used@@Base+0xb9d8>
  42dbfc:	cbz	w0, 42dc90 <argp_usage@@Base+0x7b0>
  42dc00:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  42dc04:	add	x0, x21, #0xdd0
  42dc08:	ldrb	w22, [x0, #8]
  42dc0c:	bl	404e10 <__errno_location@plt>
  42dc10:	mov	x19, x0
  42dc14:	cbz	w22, 42dc24 <argp_usage@@Base+0x744>
  42dc18:	ldr	w0, [x0]
  42dc1c:	cmp	w0, #0x20
  42dc20:	b.eq	42dc90 <argp_usage@@Base+0x7b0>  // b.none
  42dc24:	mov	w2, #0x5                   	// #5
  42dc28:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42dc2c:	mov	x0, #0x0                   	// #0
  42dc30:	add	x1, x1, #0x378
  42dc34:	bl	404d00 <dcgettext@plt>
  42dc38:	mov	x20, x0
  42dc3c:	ldr	x0, [x21, #3536]
  42dc40:	cbz	x0, 42dc74 <argp_usage@@Base+0x794>
  42dc44:	ldr	w19, [x19]
  42dc48:	bl	436084 <argp_usage@@Base+0x8ba4>
  42dc4c:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  42dc50:	mov	x3, x0
  42dc54:	mov	x4, x20
  42dc58:	add	x2, x2, #0xe6f
  42dc5c:	mov	w1, w19
  42dc60:	mov	w0, #0x0                   	// #0
  42dc64:	bl	4042e0 <error@plt>
  42dc68:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42dc6c:	ldr	w0, [x0, #1032]
  42dc70:	bl	404220 <_exit@plt>
  42dc74:	ldr	w1, [x19]
  42dc78:	mov	x3, x20
  42dc7c:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  42dc80:	mov	w0, #0x0                   	// #0
  42dc84:	add	x2, x2, #0xb0d
  42dc88:	bl	4042e0 <error@plt>
  42dc8c:	b	42dc68 <argp_usage@@Base+0x788>
  42dc90:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42dc94:	ldr	x0, [x0, #1160]
  42dc98:	bl	443658 <_obstack_memory_used@@Base+0xb9d8>
  42dc9c:	cbnz	w0, 42dc68 <argp_usage@@Base+0x788>
  42dca0:	ldp	x19, x20, [sp, #16]
  42dca4:	ldp	x21, x22, [sp, #32]
  42dca8:	ldp	x29, x30, [sp], #48
  42dcac:	ret
  42dcb0:	stp	x29, x30, [sp, #-16]!
  42dcb4:	mov	x29, sp
  42dcb8:	bl	42dd78 <argp_usage@@Base+0x898>
  42dcbc:	cbnz	x0, 42dcc4 <argp_usage@@Base+0x7e4>
  42dcc0:	bl	40d4bc <wcrtomb@plt+0x856c>
  42dcc4:	ldp	x29, x30, [sp], #16
  42dcc8:	ret
  42dccc:	stp	x29, x30, [sp, #-32]!
  42dcd0:	mov	x29, sp
  42dcd4:	stp	x19, x20, [sp, #16]
  42dcd8:	mov	x20, x0
  42dcdc:	bl	42dde0 <argp_usage@@Base+0x900>
  42dce0:	ldrb	w1, [x0]
  42dce4:	cbnz	w1, 42dd04 <argp_usage@@Base+0x824>
  42dce8:	mov	x0, x20
  42dcec:	bl	42de30 <argp_usage@@Base+0x950>
  42dcf0:	mov	x1, x0
  42dcf4:	mov	x0, x20
  42dcf8:	ldp	x19, x20, [sp, #16]
  42dcfc:	ldp	x29, x30, [sp], #32
  42dd00:	b	436f7c <argp_usage@@Base+0x9a9c>
  42dd04:	mov	x19, x0
  42dd08:	bl	42de30 <argp_usage@@Base+0x950>
  42dd0c:	mov	x1, x0
  42dd10:	ldrb	w0, [x19, x0]
  42dd14:	cmp	w0, #0x2f
  42dd18:	b.ne	42dd20 <argp_usage@@Base+0x840>  // b.any
  42dd1c:	add	x1, x1, #0x1
  42dd20:	mov	x0, x19
  42dd24:	b	42dcf8 <argp_usage@@Base+0x818>
  42dd28:	stp	x29, x30, [sp, #-32]!
  42dd2c:	mov	x29, sp
  42dd30:	stp	x19, x20, [sp, #16]
  42dd34:	mov	x19, x0
  42dd38:	ldrb	w1, [x0]
  42dd3c:	cmp	w1, #0x2f
  42dd40:	cset	x20, eq  // eq = none
  42dd44:	bl	42dde0 <argp_usage@@Base+0x900>
  42dd48:	sub	x0, x0, x19
  42dd4c:	cmp	x0, x20
  42dd50:	b.hi	42dd60 <argp_usage@@Base+0x880>  // b.pmore
  42dd54:	ldp	x19, x20, [sp, #16]
  42dd58:	ldp	x29, x30, [sp], #32
  42dd5c:	ret
  42dd60:	sub	x1, x0, #0x1
  42dd64:	ldrb	w2, [x19, x1]
  42dd68:	cmp	w2, #0x2f
  42dd6c:	b.ne	42dd54 <argp_usage@@Base+0x874>  // b.any
  42dd70:	mov	x0, x1
  42dd74:	b	42dd4c <argp_usage@@Base+0x86c>
  42dd78:	stp	x29, x30, [sp, #-48]!
  42dd7c:	mov	x29, sp
  42dd80:	stp	x19, x20, [sp, #16]
  42dd84:	str	x21, [sp, #32]
  42dd88:	mov	x21, x0
  42dd8c:	bl	42dd28 <argp_usage@@Base+0x848>
  42dd90:	cmp	x0, #0x0
  42dd94:	mov	x19, x0
  42dd98:	add	x0, x0, #0x1
  42dd9c:	cinc	x0, x0, eq  // eq = none
  42dda0:	bl	4045f0 <malloc@plt>
  42dda4:	mov	x20, x0
  42dda8:	cbz	x0, 42ddcc <argp_usage@@Base+0x8ec>
  42ddac:	mov	x2, x19
  42ddb0:	mov	x1, x21
  42ddb4:	bl	404200 <memcpy@plt>
  42ddb8:	cbnz	x19, 42ddc8 <argp_usage@@Base+0x8e8>
  42ddbc:	mov	w0, #0x2e                  	// #46
  42ddc0:	mov	x19, #0x1                   	// #1
  42ddc4:	strb	w0, [x20]
  42ddc8:	strb	wzr, [x20, x19]
  42ddcc:	mov	x0, x20
  42ddd0:	ldp	x19, x20, [sp, #16]
  42ddd4:	ldr	x21, [sp, #32]
  42ddd8:	ldp	x29, x30, [sp], #48
  42dddc:	ret
  42dde0:	ldrb	w1, [x0]
  42dde4:	cmp	w1, #0x2f
  42dde8:	b.eq	42de00 <argp_usage@@Base+0x920>  // b.none
  42ddec:	mov	x1, x0
  42ddf0:	mov	w2, #0x0                   	// #0
  42ddf4:	ldrb	w3, [x1]
  42ddf8:	cbnz	w3, 42de08 <argp_usage@@Base+0x928>
  42ddfc:	ret
  42de00:	add	x0, x0, #0x1
  42de04:	b	42dde0 <argp_usage@@Base+0x900>
  42de08:	cmp	w3, #0x2f
  42de0c:	b.eq	42de1c <argp_usage@@Base+0x93c>  // b.none
  42de10:	cbnz	w2, 42de24 <argp_usage@@Base+0x944>
  42de14:	add	x1, x1, #0x1
  42de18:	b	42ddf4 <argp_usage@@Base+0x914>
  42de1c:	mov	w2, #0x1                   	// #1
  42de20:	b	42de14 <argp_usage@@Base+0x934>
  42de24:	mov	x0, x1
  42de28:	mov	w2, #0x0                   	// #0
  42de2c:	b	42de14 <argp_usage@@Base+0x934>
  42de30:	stp	x29, x30, [sp, #-32]!
  42de34:	mov	x29, sp
  42de38:	str	x19, [sp, #16]
  42de3c:	mov	x19, x0
  42de40:	bl	404280 <strlen@plt>
  42de44:	cmp	x0, #0x1
  42de48:	b.ls	42de5c <argp_usage@@Base+0x97c>  // b.plast
  42de4c:	sub	x1, x0, #0x1
  42de50:	ldrb	w2, [x19, x1]
  42de54:	cmp	w2, #0x2f
  42de58:	b.eq	42de68 <argp_usage@@Base+0x988>  // b.none
  42de5c:	ldr	x19, [sp, #16]
  42de60:	ldp	x29, x30, [sp], #32
  42de64:	ret
  42de68:	mov	x0, x1
  42de6c:	b	42de44 <argp_usage@@Base+0x964>
  42de70:	stp	x29, x30, [sp, #-32]!
  42de74:	mov	x29, sp
  42de78:	str	x19, [sp, #16]
  42de7c:	mov	x19, x0
  42de80:	bl	42dde0 <argp_usage@@Base+0x900>
  42de84:	ldrb	w1, [x0]
  42de88:	cmp	w1, #0x0
  42de8c:	csel	x19, x19, x0, eq  // eq = none
  42de90:	mov	x0, x19
  42de94:	bl	42de30 <argp_usage@@Base+0x950>
  42de98:	ldrb	w1, [x19, x0]
  42de9c:	strb	wzr, [x19, x0]
  42dea0:	cmp	w1, #0x0
  42dea4:	cset	w0, ne  // ne = any
  42dea8:	ldr	x19, [sp, #16]
  42deac:	ldp	x29, x30, [sp], #32
  42deb0:	ret
  42deb4:	ldr	x3, [x3]
  42deb8:	mov	x16, x3
  42debc:	br	x16
  42dec0:	b	404ae0 <free@plt>
  42dec4:	stp	x29, x30, [sp, #-16]!
  42dec8:	mov	x29, sp
  42decc:	bl	431460 <argp_usage@@Base+0x3f80>
  42ded0:	cmp	w0, #0x0
  42ded4:	cset	w0, eq  // eq = none
  42ded8:	ldp	x29, x30, [sp], #16
  42dedc:	ret
  42dee0:	stp	x29, x30, [sp, #-16]!
  42dee4:	mov	x29, sp
  42dee8:	bl	404a30 <strcmp@plt>
  42deec:	cmp	w0, #0x0
  42def0:	cset	w0, eq  // eq = none
  42def4:	ldp	x29, x30, [sp], #16
  42def8:	ret
  42defc:	b	4304b4 <argp_usage@@Base+0x2fd4>
  42df00:	and	w3, w2, #0x10
  42df04:	tbnz	w2, #3, 42df14 <argp_usage@@Base+0xa34>
  42df08:	cbz	w3, 42df10 <argp_usage@@Base+0xa30>
  42df0c:	b	431460 <argp_usage@@Base+0x3f80>
  42df10:	b	404a30 <strcmp@plt>
  42df14:	stp	x29, x30, [sp, #-64]!
  42df18:	mov	x29, sp
  42df1c:	stp	x19, x20, [sp, #16]
  42df20:	mov	x20, x1
  42df24:	stp	x21, x22, [sp, #32]
  42df28:	mov	x22, x0
  42df2c:	str	x23, [sp, #48]
  42df30:	cbnz	w3, 42df78 <argp_usage@@Base+0xa98>
  42df34:	bl	404280 <strlen@plt>
  42df38:	mov	x2, x0
  42df3c:	mov	x21, x0
  42df40:	mov	x1, x20
  42df44:	mov	x0, x22
  42df48:	bl	4046a0 <strncmp@plt>
  42df4c:	mov	w19, w0
  42df50:	cbnz	w0, 42df60 <argp_usage@@Base+0xa80>
  42df54:	ldrb	w19, [x20, x21]
  42df58:	cmp	w19, #0x2f
  42df5c:	csel	w19, wzr, w19, eq  // eq = none
  42df60:	mov	w0, w19
  42df64:	ldp	x19, x20, [sp, #16]
  42df68:	ldp	x21, x22, [sp, #32]
  42df6c:	ldr	x23, [sp, #48]
  42df70:	ldp	x29, x30, [sp], #64
  42df74:	ret
  42df78:	mov	x0, x1
  42df7c:	bl	436f10 <argp_usage@@Base+0x9a30>
  42df80:	mov	x21, x0
  42df84:	mov	w23, #0x2f                  	// #47
  42df88:	mov	w1, #0x2f                  	// #47
  42df8c:	bl	404b90 <strchr@plt>
  42df90:	mov	x20, x0
  42df94:	cbz	x0, 42df9c <argp_usage@@Base+0xabc>
  42df98:	strb	wzr, [x0]
  42df9c:	mov	x1, x21
  42dfa0:	mov	x0, x22
  42dfa4:	bl	431460 <argp_usage@@Base+0x3f80>
  42dfa8:	mov	w19, w0
  42dfac:	cmp	x20, #0x0
  42dfb0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  42dfb4:	b.le	42dfc4 <argp_usage@@Base+0xae4>
  42dfb8:	mov	x0, x20
  42dfbc:	strb	w23, [x0], #1
  42dfc0:	b	42df88 <argp_usage@@Base+0xaa8>
  42dfc4:	mov	x0, x21
  42dfc8:	bl	404ae0 <free@plt>
  42dfcc:	b	42df60 <argp_usage@@Base+0xa80>
  42dfd0:	stp	x29, x30, [sp, #-112]!
  42dfd4:	mov	x29, sp
  42dfd8:	stp	x19, x20, [sp, #16]
  42dfdc:	mov	x20, x1
  42dfe0:	mov	x19, #0x0                   	// #0
  42dfe4:	stp	x21, x22, [sp, #32]
  42dfe8:	mov	x22, #0x1f                  	// #31
  42dfec:	strb	wzr, [sp, #48]
  42dff0:	stur	xzr, [sp, #52]
  42dff4:	strb	wzr, [sp, #60]
  42dff8:	str	x0, [sp, #64]
  42dffc:	add	x0, sp, #0x30
  42e000:	bl	431628 <argp_usage@@Base+0x4148>
  42e004:	ldrb	w0, [sp, #80]
  42e008:	cbz	w0, 42e028 <argp_usage@@Base+0xb48>
  42e00c:	ldr	w0, [sp, #84]
  42e010:	cbnz	w0, 42e028 <argp_usage@@Base+0xb48>
  42e014:	mov	x0, x19
  42e018:	ldp	x19, x20, [sp, #16]
  42e01c:	ldp	x21, x22, [sp, #32]
  42e020:	ldp	x29, x30, [sp], #112
  42e024:	ret
  42e028:	ldrb	w0, [sp, #80]
  42e02c:	ldr	x21, [sp, #64]
  42e030:	cbz	w0, 42e060 <argp_usage@@Base+0xb80>
  42e034:	ldr	w0, [sp, #84]
  42e038:	bl	404ec0 <towlower@plt>
  42e03c:	mov	w0, w0
  42e040:	strb	wzr, [sp, #60]
  42e044:	madd	x19, x19, x22, x0
  42e048:	udiv	x0, x19, x20
  42e04c:	msub	x19, x0, x20, x19
  42e050:	ldr	x0, [sp, #72]
  42e054:	add	x21, x21, x0
  42e058:	str	x21, [sp, #64]
  42e05c:	b	42dffc <argp_usage@@Base+0xb1c>
  42e060:	ldrb	w0, [x21]
  42e064:	b	42e03c <argp_usage@@Base+0xb5c>
  42e068:	stp	x29, x30, [sp, #-32]!
  42e06c:	mov	x29, sp
  42e070:	stp	x19, x20, [sp, #16]
  42e074:	mov	x19, x0
  42e078:	mov	x20, x1
  42e07c:	mov	x0, #0x10                  	// #16
  42e080:	bl	436d44 <argp_usage@@Base+0x9864>
  42e084:	ldr	x1, [x19, #8]
  42e088:	stp	x1, x20, [x0]
  42e08c:	str	x0, [x19, #8]
  42e090:	ldp	x19, x20, [sp, #16]
  42e094:	ldp	x29, x30, [sp], #32
  42e098:	ret
  42e09c:	and	w6, w1, #0x20
  42e0a0:	and	w4, w1, #0x8000000
  42e0a4:	adrp	x5, 44e000 <_obstack_memory_used@@Base+0x16380>
  42e0a8:	and	w1, w1, #0x2
  42e0ac:	add	x5, x5, #0x384
  42e0b0:	mov	x3, x0
  42e0b4:	ldrb	w2, [x3], #1
  42e0b8:	cmp	w2, #0x3f
  42e0bc:	b.eq	42e124 <argp_usage@@Base+0xc44>  // b.none
  42e0c0:	b.hi	42e0f0 <argp_usage@@Base+0xc10>  // b.pmore
  42e0c4:	cbz	w2, 42e160 <argp_usage@@Base+0xc80>
  42e0c8:	sub	w2, w2, #0x21
  42e0cc:	and	w7, w2, #0xff
  42e0d0:	cmp	w7, #0xd
  42e0d4:	b.hi	42e148 <argp_usage@@Base+0xc68>  // b.pmore
  42e0d8:	cmp	w2, #0xd
  42e0dc:	b.hi	42e148 <argp_usage@@Base+0xc68>  // b.pmore
  42e0e0:	ldrb	w2, [x5, w2, uxtw]
  42e0e4:	adr	x7, 42e0f0 <argp_usage@@Base+0xc10>
  42e0e8:	add	x2, x7, w2, sxtb #2
  42e0ec:	br	x2
  42e0f0:	cmp	w2, #0x5c
  42e0f4:	b.eq	42e12c <argp_usage@@Base+0xc4c>  // b.none
  42e0f8:	b.hi	42e110 <argp_usage@@Base+0xc30>  // b.pmore
  42e0fc:	cmp	w2, #0x40
  42e100:	b.eq	42e150 <argp_usage@@Base+0xc70>  // b.none
  42e104:	cmp	w2, #0x5b
  42e108:	b.eq	42e124 <argp_usage@@Base+0xc44>  // b.none
  42e10c:	b	42e148 <argp_usage@@Base+0xc68>
  42e110:	cmp	w2, #0x7b
  42e114:	b.eq	42e120 <argp_usage@@Base+0xc40>  // b.none
  42e118:	cmp	w2, #0x7d
  42e11c:	b.ne	42e148 <argp_usage@@Base+0xc68>  // b.any
  42e120:	cbz	w4, 42e148 <argp_usage@@Base+0xc68>
  42e124:	mov	w0, #0x1                   	// #1
  42e128:	b	42e164 <argp_usage@@Base+0xc84>
  42e12c:	mov	w2, w4
  42e130:	cbnz	w4, 42e148 <argp_usage@@Base+0xc68>
  42e134:	cbnz	w1, 42e144 <argp_usage@@Base+0xc64>
  42e138:	ldrb	w0, [x0, #1]
  42e13c:	cmp	w0, #0x0
  42e140:	cset	w2, ne  // ne = any
  42e144:	add	x3, x3, w2, sxtw
  42e148:	mov	x0, x3
  42e14c:	b	42e0b0 <argp_usage@@Base+0xbd0>
  42e150:	cbz	w6, 42e148 <argp_usage@@Base+0xc68>
  42e154:	ldrb	w0, [x0, #1]
  42e158:	cmp	w0, #0x28
  42e15c:	b	42e108 <argp_usage@@Base+0xc28>
  42e160:	mov	w0, #0x0                   	// #0
  42e164:	ret
  42e168:	mov	x0, #0x10                  	// #16
  42e16c:	b	436e84 <argp_usage@@Base+0x99a4>
  42e170:	stp	x29, x30, [sp, #-64]!
  42e174:	mov	x29, sp
  42e178:	stp	x19, x20, [sp, #16]
  42e17c:	mov	x20, x0
  42e180:	stp	x21, x22, [sp, #32]
  42e184:	mov	x22, #0x48                  	// #72
  42e188:	ldr	x19, [x0]
  42e18c:	str	x23, [sp, #48]
  42e190:	cbnz	x19, 42e1b4 <argp_usage@@Base+0xcd4>
  42e194:	ldr	x19, [x20, #8]
  42e198:	cbnz	x19, 42e220 <argp_usage@@Base+0xd40>
  42e19c:	mov	x0, x20
  42e1a0:	ldp	x19, x20, [sp, #16]
  42e1a4:	ldp	x21, x22, [sp, #32]
  42e1a8:	ldr	x23, [sp, #48]
  42e1ac:	ldp	x29, x30, [sp], #64
  42e1b0:	b	404ae0 <free@plt>
  42e1b4:	ldr	w0, [x19, #8]
  42e1b8:	ldr	x23, [x19]
  42e1bc:	cbz	w0, 42e214 <argp_usage@@Base+0xd34>
  42e1c0:	cmp	w0, #0x1
  42e1c4:	b.eq	42e20c <argp_usage@@Base+0xd2c>  // b.none
  42e1c8:	mov	x0, x19
  42e1cc:	mov	x19, x23
  42e1d0:	bl	404ae0 <free@plt>
  42e1d4:	b	42e190 <argp_usage@@Base+0xcb0>
  42e1d8:	mul	x1, x21, x22
  42e1dc:	add	x2, x0, x1
  42e1e0:	ldr	w0, [x0, x1]
  42e1e4:	tbz	w0, #27, 42e1f0 <argp_usage@@Base+0xd10>
  42e1e8:	add	x0, x2, #0x8
  42e1ec:	bl	442548 <_obstack_memory_used@@Base+0xa8c8>
  42e1f0:	add	x21, x21, #0x1
  42e1f4:	ldr	x1, [x19, #32]
  42e1f8:	ldr	x0, [x19, #16]
  42e1fc:	cmp	x21, x1
  42e200:	b.cc	42e1d8 <argp_usage@@Base+0xcf8>  // b.lo, b.ul, b.last
  42e204:	bl	404ae0 <free@plt>
  42e208:	b	42e1c8 <argp_usage@@Base+0xce8>
  42e20c:	mov	x21, #0x0                   	// #0
  42e210:	b	42e1f4 <argp_usage@@Base+0xd14>
  42e214:	ldr	x0, [x19, #16]
  42e218:	bl	430660 <argp_usage@@Base+0x3180>
  42e21c:	b	42e1c8 <argp_usage@@Base+0xce8>
  42e220:	ldp	x21, x0, [x19]
  42e224:	bl	404ae0 <free@plt>
  42e228:	mov	x0, x19
  42e22c:	mov	x19, x21
  42e230:	bl	404ae0 <free@plt>
  42e234:	b	42e198 <argp_usage@@Base+0xcb8>
  42e238:	stp	x29, x30, [sp, #-48]!
  42e23c:	adrp	x3, 42d000 <argp_parse@@Base+0x450>
  42e240:	add	x3, x3, #0xf00
  42e244:	mov	x29, sp
  42e248:	stp	x21, x22, [sp, #32]
  42e24c:	mov	w21, w2
  42e250:	mov	x22, x0
  42e254:	tst	x21, #0x10000000
  42e258:	stp	x19, x20, [sp, #16]
  42e25c:	adrp	x20, 404000 <mbrtowc@plt-0x1f0>
  42e260:	add	x20, x20, #0xbe0
  42e264:	mov	x19, x1
  42e268:	csel	x20, x20, x3, ne  // ne = any
  42e26c:	blr	x20
  42e270:	cmp	w0, #0x0
  42e274:	cset	w0, eq  // eq = none
  42e278:	tbz	w21, #30, 42e2bc <argp_usage@@Base+0xddc>
  42e27c:	ldp	x19, x20, [sp, #16]
  42e280:	ldp	x21, x22, [sp, #32]
  42e284:	ldp	x29, x30, [sp], #48
  42e288:	ret
  42e28c:	add	x19, x19, #0x1
  42e290:	cmp	w1, #0x2f
  42e294:	b.ne	42e2bc <argp_usage@@Base+0xddc>  // b.any
  42e298:	ldrb	w1, [x19]
  42e29c:	cmp	w1, #0x2f
  42e2a0:	b.eq	42e2bc <argp_usage@@Base+0xddc>  // b.none
  42e2a4:	mov	w2, w21
  42e2a8:	mov	x1, x19
  42e2ac:	mov	x0, x22
  42e2b0:	blr	x20
  42e2b4:	cmp	w0, #0x0
  42e2b8:	cset	w0, eq  // eq = none
  42e2bc:	ldrb	w1, [x19]
  42e2c0:	cbz	w1, 42e27c <argp_usage@@Base+0xd9c>
  42e2c4:	cbz	w0, 42e28c <argp_usage@@Base+0xdac>
  42e2c8:	b	42e27c <argp_usage@@Base+0xd9c>
  42e2cc:	stp	x29, x30, [sp, #-80]!
  42e2d0:	mov	x29, sp
  42e2d4:	stp	x19, x20, [sp, #16]
  42e2d8:	ldr	x19, [x0]
  42e2dc:	stp	x21, x22, [sp, #32]
  42e2e0:	stp	x23, x24, [sp, #48]
  42e2e4:	str	x25, [sp, #64]
  42e2e8:	cbz	x19, 42e42c <argp_usage@@Base+0xf4c>
  42e2ec:	mov	x22, x1
  42e2f0:	mov	x20, #0x0                   	// #0
  42e2f4:	ldr	w0, [x19, #8]
  42e2f8:	cbnz	w0, 42e384 <argp_usage@@Base+0xea4>
  42e2fc:	cbnz	x20, 42e314 <argp_usage@@Base+0xe34>
  42e300:	mov	x0, x22
  42e304:	bl	404280 <strlen@plt>
  42e308:	add	x0, x0, #0x1
  42e30c:	bl	436d44 <argp_usage@@Base+0x9864>
  42e310:	mov	x20, x0
  42e314:	ldr	w23, [x19, #12]
  42e318:	mov	x21, x22
  42e31c:	ldr	x24, [x19, #16]
  42e320:	and	w25, w23, #0x8
  42e324:	and	w23, w23, #0x40000000
  42e328:	mov	x1, x21
  42e32c:	mov	x0, x20
  42e330:	bl	404c40 <strcpy@plt>
  42e334:	mov	x1, x20
  42e338:	mov	x0, x24
  42e33c:	bl	4302d8 <argp_usage@@Base+0x2df8>
  42e340:	cbnz	x0, 42e424 <argp_usage@@Base+0xf44>
  42e344:	cbz	w25, 42e368 <argp_usage@@Base+0xe88>
  42e348:	mov	x0, x20
  42e34c:	mov	w1, #0x2f                  	// #47
  42e350:	bl	4048d0 <strrchr@plt>
  42e354:	cbz	x0, 42e368 <argp_usage@@Base+0xe88>
  42e358:	strb	wzr, [x0]
  42e35c:	b	42e334 <argp_usage@@Base+0xe54>
  42e360:	mov	x19, x0
  42e364:	b	42e2f4 <argp_usage@@Base+0xe14>
  42e368:	cbnz	w23, 42e39c <argp_usage@@Base+0xebc>
  42e36c:	mov	x0, x21
  42e370:	mov	w1, #0x2f                  	// #47
  42e374:	bl	404b90 <strchr@plt>
  42e378:	cbz	x0, 42e39c <argp_usage@@Base+0xebc>
  42e37c:	add	x21, x0, #0x1
  42e380:	b	42e328 <argp_usage@@Base+0xe48>
  42e384:	ldr	x21, [x19, #16]
  42e388:	mov	x23, #0x0                   	// #0
  42e38c:	ldr	x24, [x19, #32]
  42e390:	add	x21, x21, #0x8
  42e394:	cmp	x24, x23
  42e398:	b.ne	42e3d8 <argp_usage@@Base+0xef8>  // b.any
  42e39c:	ldr	x0, [x19]
  42e3a0:	cbnz	x0, 42e360 <argp_usage@@Base+0xe80>
  42e3a4:	mov	w21, #0x1                   	// #1
  42e3a8:	mov	x0, x20
  42e3ac:	bl	404ae0 <free@plt>
  42e3b0:	ldr	w0, [x19, #12]
  42e3b4:	eor	x0, x0, #0x20000000
  42e3b8:	ubfx	x0, x0, #29, #1
  42e3bc:	eor	w0, w21, w0
  42e3c0:	ldp	x19, x20, [sp, #16]
  42e3c4:	ldp	x21, x22, [sp, #32]
  42e3c8:	ldp	x23, x24, [sp, #48]
  42e3cc:	ldr	x25, [sp, #64]
  42e3d0:	ldp	x29, x30, [sp], #80
  42e3d4:	ret
  42e3d8:	ldur	w2, [x21, #-8]
  42e3dc:	tbz	w2, #27, 42e410 <argp_usage@@Base+0xf30>
  42e3e0:	mov	x1, x22
  42e3e4:	mov	x0, x21
  42e3e8:	mov	w4, #0x0                   	// #0
  42e3ec:	mov	x3, #0x0                   	// #0
  42e3f0:	mov	x2, #0x0                   	// #0
  42e3f4:	bl	44258c <_obstack_memory_used@@Base+0xa90c>
  42e3f8:	cmp	w0, #0x0
  42e3fc:	cset	w0, eq  // eq = none
  42e400:	add	x21, x21, #0x48
  42e404:	cbnz	w0, 42e424 <argp_usage@@Base+0xf44>
  42e408:	add	x23, x23, #0x1
  42e40c:	b	42e394 <argp_usage@@Base+0xeb4>
  42e410:	ldr	x0, [x21]
  42e414:	mov	x1, x22
  42e418:	bl	42e238 <argp_usage@@Base+0xd58>
  42e41c:	and	w0, w0, #0xff
  42e420:	b	42e400 <argp_usage@@Base+0xf20>
  42e424:	mov	w21, #0x0                   	// #0
  42e428:	b	42e3a8 <argp_usage@@Base+0xec8>
  42e42c:	mov	w0, #0x0                   	// #0
  42e430:	b	42e3c0 <argp_usage@@Base+0xee0>
  42e434:	stp	x29, x30, [sp, #-64]!
  42e438:	tst	w2, #0x18000000
  42e43c:	mov	x29, sp
  42e440:	stp	x19, x20, [sp, #16]
  42e444:	mov	x20, x1
  42e448:	mov	w19, w2
  42e44c:	stp	x21, x22, [sp, #32]
  42e450:	mov	x21, x0
  42e454:	stp	x23, x24, [sp, #48]
  42e458:	ldr	x8, [x0]
  42e45c:	b.eq	42e5d4 <argp_usage@@Base+0x10f4>  // b.none
  42e460:	mov	w1, w2
  42e464:	mov	x0, x20
  42e468:	bl	42e09c <argp_usage@@Base+0xbbc>
  42e46c:	tst	w0, #0xff
  42e470:	b.eq	42e5d4 <argp_usage@@Base+0x10f4>  // b.none
  42e474:	cbz	x8, 42e490 <argp_usage@@Base+0xfb0>
  42e478:	ldr	w0, [x8, #8]
  42e47c:	cmp	w0, #0x1
  42e480:	b.ne	42e490 <argp_usage@@Base+0xfb0>  // b.any
  42e484:	ldr	w0, [x8, #12]
  42e488:	eor	w0, w19, w0
  42e48c:	tbz	w0, #29, 42e4ac <argp_usage@@Base+0xfcc>
  42e490:	mov	x0, #0x28                  	// #40
  42e494:	bl	436e84 <argp_usage@@Base+0x99a4>
  42e498:	mov	w1, #0x1                   	// #1
  42e49c:	stp	w1, w19, [x0, #8]
  42e4a0:	ldr	x1, [x21]
  42e4a4:	str	x1, [x0]
  42e4a8:	str	x0, [x21]
  42e4ac:	ldr	x23, [x21]
  42e4b0:	add	x22, x23, #0x10
  42e4b4:	ldp	x0, x1, [x22, #8]
  42e4b8:	cmp	x1, x0
  42e4bc:	b.ne	42e4d4 <argp_usage@@Base+0xff4>  // b.any
  42e4c0:	ldr	x0, [x23, #16]
  42e4c4:	add	x1, x23, #0x18
  42e4c8:	mov	x2, #0x48                  	// #72
  42e4cc:	bl	436e14 <argp_usage@@Base+0x9934>
  42e4d0:	str	x0, [x23, #16]
  42e4d4:	ldr	x0, [x22, #16]
  42e4d8:	ldr	x1, [x23, #16]
  42e4dc:	add	x2, x0, #0x1
  42e4e0:	str	x2, [x22, #16]
  42e4e4:	mov	x2, #0x48                  	// #72
  42e4e8:	mul	x0, x0, x2
  42e4ec:	add	x23, x1, x0
  42e4f0:	str	w19, [x1, x0]
  42e4f4:	tbz	w19, #27, 42e5b0 <argp_usage@@Base+0x10d0>
  42e4f8:	asr	w21, w19, #3
  42e4fc:	mov	w0, #0x9                   	// #9
  42e500:	and	w21, w21, #0x2
  42e504:	orr	w21, w21, w0
  42e508:	tbz	w19, #3, 42e594 <argp_usage@@Base+0x10b4>
  42e50c:	mov	x0, x20
  42e510:	bl	404280 <strlen@plt>
  42e514:	mov	x19, x0
  42e518:	cbnz	x0, 42e53c <argp_usage@@Base+0x105c>
  42e51c:	ldr	x0, [x22, #16]
  42e520:	sub	x0, x0, #0x1
  42e524:	str	x0, [x22, #16]
  42e528:	ldp	x19, x20, [sp, #16]
  42e52c:	ldp	x21, x22, [sp, #32]
  42e530:	ldp	x23, x24, [sp, #48]
  42e534:	ldp	x29, x30, [sp], #64
  42e538:	ret
  42e53c:	sub	x0, x0, #0x1
  42e540:	ldrb	w1, [x20, x0]
  42e544:	cmp	w1, #0x2f
  42e548:	b.eq	42e514 <argp_usage@@Base+0x1034>  // b.none
  42e54c:	add	x0, x19, #0x7
  42e550:	bl	436d44 <argp_usage@@Base+0x9864>
  42e554:	mov	x2, x19
  42e558:	mov	x24, x0
  42e55c:	mov	x1, x20
  42e560:	bl	404200 <memcpy@plt>
  42e564:	add	x0, x24, x19
  42e568:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42e56c:	add	x1, x1, #0x392
  42e570:	bl	404c40 <strcpy@plt>
  42e574:	mov	w2, w21
  42e578:	mov	x1, x24
  42e57c:	add	x0, x23, #0x8
  42e580:	bl	4423bc <_obstack_memory_used@@Base+0xa73c>
  42e584:	mov	w19, w0
  42e588:	mov	x0, x24
  42e58c:	bl	404ae0 <free@plt>
  42e590:	b	42e5a8 <argp_usage@@Base+0x10c8>
  42e594:	mov	w2, w21
  42e598:	mov	x1, x20
  42e59c:	add	x0, x23, #0x8
  42e5a0:	bl	4423bc <_obstack_memory_used@@Base+0xa73c>
  42e5a4:	mov	w19, w0
  42e5a8:	cbz	w19, 42e528 <argp_usage@@Base+0x1048>
  42e5ac:	b	42e51c <argp_usage@@Base+0x103c>
  42e5b0:	tbz	w19, #26, 42e5cc <argp_usage@@Base+0x10ec>
  42e5b4:	mov	x0, x20
  42e5b8:	bl	436f10 <argp_usage@@Base+0x9a30>
  42e5bc:	mov	x20, x0
  42e5c0:	mov	x1, x0
  42e5c4:	mov	x0, x21
  42e5c8:	bl	42e068 <argp_usage@@Base+0xb88>
  42e5cc:	str	x20, [x23, #8]
  42e5d0:	b	42e528 <argp_usage@@Base+0x1048>
  42e5d4:	cbz	x8, 42e5f4 <argp_usage@@Base+0x1114>
  42e5d8:	ldr	w0, [x8, #8]
  42e5dc:	cbnz	w0, 42e5f4 <argp_usage@@Base+0x1114>
  42e5e0:	ldr	w0, [x8, #12]
  42e5e4:	eor	w0, w19, w0
  42e5e8:	and	w0, w0, #0x7ffffff8
  42e5ec:	and	w0, w0, #0xe000001f
  42e5f0:	cbz	w0, 42e63c <argp_usage@@Base+0x115c>
  42e5f4:	mov	x0, #0x28                  	// #40
  42e5f8:	bl	436e84 <argp_usage@@Base+0x99a4>
  42e5fc:	stp	wzr, w19, [x0, #8]
  42e600:	mov	x22, x0
  42e604:	tbnz	w19, #4, 42e68c <argp_usage@@Base+0x11ac>
  42e608:	adrp	x2, 42d000 <argp_parse@@Base+0x450>
  42e60c:	adrp	x3, 42d000 <argp_parse@@Base+0x450>
  42e610:	add	x2, x2, #0xefc
  42e614:	add	x3, x3, #0xee0
  42e618:	adrp	x4, 42d000 <argp_parse@@Base+0x450>
  42e61c:	mov	x1, #0x0                   	// #0
  42e620:	add	x4, x4, #0xec0
  42e624:	mov	x0, #0x0                   	// #0
  42e628:	bl	430500 <argp_usage@@Base+0x3020>
  42e62c:	str	x0, [x22, #16]
  42e630:	ldr	x0, [x21]
  42e634:	str	x0, [x22]
  42e638:	str	x22, [x21]
  42e63c:	and	w19, w19, #0x1ffffffe
  42e640:	mov	x0, x20
  42e644:	and	w19, w19, #0xf0000003
  42e648:	ldr	x21, [x21]
  42e64c:	bl	436f10 <argp_usage@@Base+0x9a30>
  42e650:	mov	x20, x0
  42e654:	mov	w0, #0x10000000            	// #268435456
  42e658:	cmp	w19, w0
  42e65c:	b.eq	42e6a0 <argp_usage@@Base+0x11c0>  // b.none
  42e660:	ldr	x0, [x21, #16]
  42e664:	mov	x1, x20
  42e668:	bl	4309b4 <argp_usage@@Base+0x34d4>
  42e66c:	cmp	x20, x0
  42e670:	b.eq	42e528 <argp_usage@@Base+0x1048>  // b.none
  42e674:	mov	x0, x20
  42e678:	ldp	x19, x20, [sp, #16]
  42e67c:	ldp	x21, x22, [sp, #32]
  42e680:	ldp	x23, x24, [sp, #48]
  42e684:	ldp	x29, x30, [sp], #64
  42e688:	b	404ae0 <free@plt>
  42e68c:	adrp	x2, 42d000 <argp_parse@@Base+0x450>
  42e690:	adrp	x3, 42d000 <argp_parse@@Base+0x450>
  42e694:	add	x2, x2, #0xfd0
  42e698:	add	x3, x3, #0xec4
  42e69c:	b	42e618 <argp_usage@@Base+0x1138>
  42e6a0:	mov	x0, x20
  42e6a4:	mov	x2, x20
  42e6a8:	ldrb	w1, [x0]
  42e6ac:	cmp	w1, #0x5c
  42e6b0:	b.ne	42e6d4 <argp_usage@@Base+0x11f4>  // b.any
  42e6b4:	ldrb	w1, [x0, #1]
  42e6b8:	cmp	w1, #0x0
  42e6bc:	cset	w1, ne  // ne = any
  42e6c0:	add	x0, x0, w1, sxtw
  42e6c4:	ldrb	w1, [x0], #1
  42e6c8:	strb	w1, [x2], #1
  42e6cc:	cbnz	w1, 42e6a8 <argp_usage@@Base+0x11c8>
  42e6d0:	b	42e660 <argp_usage@@Base+0x1180>
  42e6d4:	mov	w1, #0x0                   	// #0
  42e6d8:	b	42e6c0 <argp_usage@@Base+0x11e0>
  42e6dc:	stp	x29, x30, [sp, #-128]!
  42e6e0:	mov	x29, sp
  42e6e4:	stp	x21, x22, [sp, #32]
  42e6e8:	mov	x21, x2
  42e6ec:	stp	x23, x24, [sp, #48]
  42e6f0:	mov	x23, x1
  42e6f4:	and	w24, w4, #0xff
  42e6f8:	stp	x25, x26, [sp, #64]
  42e6fc:	mov	w26, w3
  42e700:	stp	x27, x28, [sp, #80]
  42e704:	mov	x27, x5
  42e708:	stp	x19, x20, [sp, #16]
  42e70c:	mov	x20, #0x0                   	// #0
  42e710:	mov	x19, #0x0                   	// #0
  42e714:	str	x0, [sp, #104]
  42e718:	str	xzr, [sp, #120]
  42e71c:	mov	x0, x21
  42e720:	add	x28, x20, #0x1
  42e724:	bl	404890 <getc_unlocked@plt>
  42e728:	mov	w22, w0
  42e72c:	cmn	w0, #0x1
  42e730:	b.ne	42e7c4 <argp_usage@@Base+0x12e4>  // b.any
  42e734:	mov	x0, x21
  42e738:	bl	4043c0 <ferror_unlocked@plt>
  42e73c:	mov	w21, w0
  42e740:	bl	404e10 <__errno_location@plt>
  42e744:	mov	x22, x0
  42e748:	cbz	w21, 42e750 <argp_usage@@Base+0x1270>
  42e74c:	ldr	w21, [x0]
  42e750:	mov	x0, x19
  42e754:	mov	x1, x28
  42e758:	bl	436da4 <argp_usage@@Base+0x98c4>
  42e75c:	strb	w24, [x0, x20]
  42e760:	mov	x19, x0
  42e764:	cbz	x20, 42e7ec <argp_usage@@Base+0x130c>
  42e768:	add	x0, x0, x20
  42e76c:	ldurb	w0, [x0, #-1]
  42e770:	cmp	w0, w24
  42e774:	cset	w0, ne  // ne = any
  42e778:	add	x20, x20, w0, sxtw
  42e77c:	ubfiz	x28, x24, #1, #8
  42e780:	add	x20, x19, x20
  42e784:	mov	x25, x19
  42e788:	mov	x1, x19
  42e78c:	mov	x0, x23
  42e790:	bl	42e068 <argp_usage@@Base+0xb88>
  42e794:	cmp	x25, x20
  42e798:	b.cc	42e7f4 <argp_usage@@Base+0x1314>  // b.lo, b.ul, b.last
  42e79c:	ldp	x19, x20, [sp, #16]
  42e7a0:	cmp	w21, #0x0
  42e7a4:	ldp	x23, x24, [sp, #48]
  42e7a8:	csetm	w0, ne  // ne = any
  42e7ac:	ldp	x25, x26, [sp, #64]
  42e7b0:	ldp	x27, x28, [sp, #80]
  42e7b4:	str	w21, [x22]
  42e7b8:	ldp	x21, x22, [sp, #32]
  42e7bc:	ldp	x29, x30, [sp], #128
  42e7c0:	ret
  42e7c4:	ldr	x0, [sp, #120]
  42e7c8:	cmp	x0, x20
  42e7cc:	b.ne	42e7e0 <argp_usage@@Base+0x1300>  // b.any
  42e7d0:	mov	x0, x19
  42e7d4:	add	x1, sp, #0x78
  42e7d8:	bl	436e7c <argp_usage@@Base+0x999c>
  42e7dc:	mov	x19, x0
  42e7e0:	strb	w22, [x19, x20]
  42e7e4:	mov	x20, x28
  42e7e8:	b	42e71c <argp_usage@@Base+0x123c>
  42e7ec:	mov	w0, #0x0                   	// #0
  42e7f0:	b	42e778 <argp_usage@@Base+0x1298>
  42e7f4:	ldrb	w0, [x25]
  42e7f8:	cmp	w0, w24
  42e7fc:	b.ne	42e854 <argp_usage@@Base+0x1374>  // b.any
  42e800:	bl	404a60 <__ctype_b_loc@plt>
  42e804:	ldr	x1, [x0]
  42e808:	ldrh	w0, [x1, x28]
  42e80c:	tbz	w0, #13, 42e830 <argp_usage@@Base+0x1350>
  42e810:	mov	x0, x25
  42e814:	cmp	x19, x0
  42e818:	b.eq	42e850 <argp_usage@@Base+0x1370>  // b.none
  42e81c:	ldurb	w2, [x0, #-1]
  42e820:	ldrh	w2, [x1, x2, lsl #1]
  42e824:	tbz	w2, #13, 42e834 <argp_usage@@Base+0x1354>
  42e828:	sub	x0, x0, #0x1
  42e82c:	b	42e814 <argp_usage@@Base+0x1334>
  42e830:	mov	x0, x25
  42e834:	ldr	x4, [sp, #104]
  42e838:	strb	wzr, [x0]
  42e83c:	mov	x3, x27
  42e840:	mov	w2, w26
  42e844:	mov	x1, x19
  42e848:	mov	x0, x23
  42e84c:	blr	x4
  42e850:	add	x19, x25, #0x1
  42e854:	add	x25, x25, #0x1
  42e858:	b	42e794 <argp_usage@@Base+0x12b4>
  42e85c:	stp	x29, x30, [sp, #-80]!
  42e860:	mov	x29, sp
  42e864:	stp	x19, x20, [sp, #16]
  42e868:	mov	x20, x1
  42e86c:	stp	x21, x22, [sp, #32]
  42e870:	mov	w21, w3
  42e874:	str	x23, [sp, #48]
  42e878:	and	w23, w4, #0xff
  42e87c:	str	x0, [sp, #72]
  42e880:	mov	x0, x2
  42e884:	ldrb	w1, [x2]
  42e888:	cmp	w1, #0x2d
  42e88c:	b.ne	42e8f4 <argp_usage@@Base+0x1414>  // b.any
  42e890:	ldrb	w1, [x2, #1]
  42e894:	cbnz	w1, 42e8f4 <argp_usage@@Base+0x1414>
  42e898:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  42e89c:	mov	w22, #0x1                   	// #1
  42e8a0:	ldr	x19, [x0, #1176]
  42e8a4:	mov	x1, x20
  42e8a8:	add	x5, sp, #0x48
  42e8ac:	mov	w4, w23
  42e8b0:	mov	w3, w21
  42e8b4:	mov	x2, x19
  42e8b8:	adrp	x0, 42d000 <argp_parse@@Base+0x450>
  42e8bc:	add	x0, x0, #0xeb4
  42e8c0:	bl	42e6dc <argp_usage@@Base+0x11fc>
  42e8c4:	mov	w20, w0
  42e8c8:	cbnz	w22, 42e8dc <argp_usage@@Base+0x13fc>
  42e8cc:	mov	x0, x19
  42e8d0:	bl	404570 <fclose@plt>
  42e8d4:	cbz	w0, 42e8dc <argp_usage@@Base+0x13fc>
  42e8d8:	mov	w20, #0xffffffff            	// #-1
  42e8dc:	mov	w0, w20
  42e8e0:	ldp	x19, x20, [sp, #16]
  42e8e4:	ldp	x21, x22, [sp, #32]
  42e8e8:	ldr	x23, [sp, #48]
  42e8ec:	ldp	x29, x30, [sp], #80
  42e8f0:	ret
  42e8f4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  42e8f8:	add	x1, x1, #0xb66
  42e8fc:	bl	4045c0 <fopen@plt>
  42e900:	mov	x19, x0
  42e904:	cbz	x0, 42e8d8 <argp_usage@@Base+0x13f8>
  42e908:	mov	w22, #0x0                   	// #0
  42e90c:	b	42e8a4 <argp_usage@@Base+0x13c4>
  42e910:	stp	x29, x30, [sp, #-64]!
  42e914:	mov	x29, sp
  42e918:	stp	x19, x20, [sp, #16]
  42e91c:	mov	x20, x2
  42e920:	stp	x21, x22, [sp, #32]
  42e924:	mov	w22, w1
  42e928:	mov	x21, x3
  42e92c:	str	x23, [sp, #48]
  42e930:	mov	w23, w4
  42e934:	tbnz	w0, #31, 42e9a8 <argp_usage@@Base+0x14c8>
  42e938:	mov	x1, x3
  42e93c:	bl	404690 <futimens@plt>
  42e940:	mov	w19, w0
  42e944:	cbz	x20, 42e978 <argp_usage@@Base+0x1498>
  42e948:	cmn	w0, #0x1
  42e94c:	b.ne	42e978 <argp_usage@@Base+0x1498>  // b.any
  42e950:	bl	404e10 <__errno_location@plt>
  42e954:	ldr	w0, [x0]
  42e958:	cmp	w0, #0x26
  42e95c:	b.ne	42e990 <argp_usage@@Base+0x14b0>  // b.any
  42e960:	mov	w3, w23
  42e964:	mov	x2, x21
  42e968:	mov	x1, x20
  42e96c:	mov	w0, w22
  42e970:	bl	404bc0 <utimensat@plt>
  42e974:	mov	w19, w0
  42e978:	cmp	w19, #0x1
  42e97c:	b.ne	42e990 <argp_usage@@Base+0x14b0>  // b.any
  42e980:	bl	404e10 <__errno_location@plt>
  42e984:	mov	w19, #0xffffffff            	// #-1
  42e988:	mov	w1, #0x9                   	// #9
  42e98c:	str	w1, [x0]
  42e990:	mov	w0, w19
  42e994:	ldp	x19, x20, [sp, #16]
  42e998:	ldp	x21, x22, [sp, #32]
  42e99c:	ldr	x23, [sp, #48]
  42e9a0:	ldp	x29, x30, [sp], #64
  42e9a4:	ret
  42e9a8:	cbz	x2, 42e980 <argp_usage@@Base+0x14a0>
  42e9ac:	b	42e960 <argp_usage@@Base+0x1480>
  42e9b0:	stp	x29, x30, [sp, #-32]!
  42e9b4:	mov	x29, sp
  42e9b8:	stp	x19, x20, [sp, #16]
  42e9bc:	mov	x19, x1
  42e9c0:	ldr	w1, [x1, #16]
  42e9c4:	and	w1, w1, #0xf000
  42e9c8:	cmp	w1, #0xa, lsl #12
  42e9cc:	b.ne	42e9e0 <argp_usage@@Base+0x1500>  // b.any
  42e9d0:	mov	w0, #0x0                   	// #0
  42e9d4:	ldp	x19, x20, [sp, #16]
  42e9d8:	ldp	x29, x30, [sp], #32
  42e9dc:	ret
  42e9e0:	mov	x20, x0
  42e9e4:	mov	x3, #0x0                   	// #0
  42e9e8:	mov	x2, #0x0                   	// #0
  42e9ec:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42e9f0:	add	x1, x1, #0x399
  42e9f4:	bl	4049e0 <getxattr@plt>
  42e9f8:	cmp	x0, #0x0
  42e9fc:	b.ge	42ea68 <argp_usage@@Base+0x1588>  // b.tcont
  42ea00:	bl	404e10 <__errno_location@plt>
  42ea04:	ldr	w0, [x0]
  42ea08:	cmp	w0, #0x3d
  42ea0c:	b.ne	42ea50 <argp_usage@@Base+0x1570>  // b.any
  42ea10:	ldr	w0, [x19, #16]
  42ea14:	and	w0, w0, #0xf000
  42ea18:	cmp	w0, #0x4, lsl #12
  42ea1c:	b.ne	42e9d0 <argp_usage@@Base+0x14f0>  // b.any
  42ea20:	mov	x0, x20
  42ea24:	mov	x3, #0x0                   	// #0
  42ea28:	mov	x2, #0x0                   	// #0
  42ea2c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  42ea30:	add	x1, x1, #0x3b1
  42ea34:	bl	4049e0 <getxattr@plt>
  42ea38:	cmp	x0, #0x0
  42ea3c:	b.ge	42ea74 <argp_usage@@Base+0x1594>  // b.tcont
  42ea40:	bl	404e10 <__errno_location@plt>
  42ea44:	ldr	w0, [x0]
  42ea48:	cmp	w0, #0x3d
  42ea4c:	b.eq	42e9d0 <argp_usage@@Base+0x14f0>  // b.none
  42ea50:	bl	404e10 <__errno_location@plt>
  42ea54:	ldr	w0, [x0]
  42ea58:	bl	442bf8 <_obstack_memory_used@@Base+0xaf78>
  42ea5c:	and	w0, w0, #0xff
  42ea60:	neg	w0, w0
  42ea64:	b	42e9d4 <argp_usage@@Base+0x14f4>
  42ea68:	b.eq	42ea10 <argp_usage@@Base+0x1530>  // b.none
  42ea6c:	mov	w0, #0x1                   	// #1
  42ea70:	b	42e9d4 <argp_usage@@Base+0x14f4>
  42ea74:	b.ne	42ea6c <argp_usage@@Base+0x158c>  // b.any
  42ea78:	b	42e9d0 <argp_usage@@Base+0x14f0>
  42ea7c:	stp	x29, x30, [sp, #-48]!
  42ea80:	mov	x29, sp
  42ea84:	stp	x19, x20, [sp, #16]
  42ea88:	mov	x19, x1
  42ea8c:	add	x20, x1, x2
  42ea90:	str	x21, [sp, #32]
  42ea94:	mov	x21, x0
  42ea98:	cmp	x19, x20
  42ea9c:	b.ne	42eab0 <argp_usage@@Base+0x15d0>  // b.any
  42eaa0:	ldp	x19, x20, [sp, #16]
  42eaa4:	ldr	x21, [sp, #32]
  42eaa8:	ldp	x29, x30, [sp], #48
  42eaac:	ret
  42eab0:	bl	4044a0 <__ctype_tolower_loc@plt>
  42eab4:	ldrb	w2, [x19], #1
  42eab8:	mov	x1, x21
  42eabc:	ldr	x0, [x0]
  42eac0:	ldr	w0, [x0, x2, lsl #2]
  42eac4:	bl	404420 <fputc@plt>
  42eac8:	b	42ea98 <argp_usage@@Base+0x15b8>
  42eacc:	stp	x29, x30, [sp, #-48]!
  42ead0:	mov	x29, sp
  42ead4:	stp	x19, x20, [sp, #16]
  42ead8:	mov	x19, x1
  42eadc:	add	x20, x1, x2
  42eae0:	str	x21, [sp, #32]
  42eae4:	mov	x21, x0
  42eae8:	cmp	x19, x20
  42eaec:	b.ne	42eb00 <argp_usage@@Base+0x1620>  // b.any
  42eaf0:	ldp	x19, x20, [sp, #16]
  42eaf4:	ldr	x21, [sp, #32]
  42eaf8:	ldp	x29, x30, [sp], #48
  42eafc:	ret
  42eb00:	bl	404830 <__ctype_toupper_loc@plt>
  42eb04:	ldrb	w2, [x19], #1
  42eb08:	mov	x1, x21
  42eb0c:	ldr	x0, [x0]
  42eb10:	ldr	w0, [x0, x2, lsl #2]
  42eb14:	bl	404420 <fputc@plt>
  42eb18:	b	42eae8 <argp_usage@@Base+0x1608>
  42eb1c:	sub	sp, sp, #0x4d0
  42eb20:	stp	x29, x30, [sp]
  42eb24:	mov	x29, sp
  42eb28:	stp	x19, x20, [sp, #16]
  42eb2c:	mov	x19, x0
  42eb30:	and	w0, w3, #0xff
  42eb34:	stp	w6, w0, [sp, #160]
  42eb38:	ldr	w0, [x2, #8]
  42eb3c:	str	w0, [sp, #100]
  42eb40:	ldr	x0, [x2, #48]
  42eb44:	stp	x21, x22, [sp, #32]
  42eb48:	mov	x22, x2
  42eb4c:	stp	x23, x24, [sp, #48]
  42eb50:	mov	x23, x1
  42eb54:	stp	x25, x26, [sp, #64]
  42eb58:	stp	x27, x28, [sp, #80]
  42eb5c:	str	x0, [sp, #112]
  42eb60:	str	x5, [sp, #120]
  42eb64:	str	x4, [sp, #144]
  42eb68:	cbnz	x0, 42eb78 <argp_usage@@Base+0x1698>
  42eb6c:	adrp	x27, 44d000 <_obstack_memory_used@@Base+0x15380>
  42eb70:	add	x0, x27, #0x41a
  42eb74:	str	x0, [sp, #112]
  42eb78:	ldr	w0, [sp, #100]
  42eb7c:	cmp	w0, #0xc
  42eb80:	b.le	42ebd0 <argp_usage@@Base+0x16f0>
  42eb84:	sub	w0, w0, #0xc
  42eb88:	str	w0, [sp, #100]
  42eb8c:	add	x0, sp, #0xcf
  42eb90:	mov	x21, #0x0                   	// #0
  42eb94:	str	x0, [sp, #152]
  42eb98:	add	x0, sp, #0xd1
  42eb9c:	str	x0, [sp, #128]
  42eba0:	ldrb	w0, [x23]
  42eba4:	cbz	w0, 42fc98 <argp_usage@@Base+0x27b8>
  42eba8:	cmp	w0, #0x25
  42ebac:	b.eq	42eca8 <argp_usage@@Base+0x17c8>  // b.none
  42ebb0:	cmn	x21, #0x3
  42ebb4:	b.hi	42fc94 <argp_usage@@Base+0x27b4>  // b.pmore
  42ebb8:	cbz	x19, 42ebc4 <argp_usage@@Base+0x16e4>
  42ebbc:	mov	x1, x19
  42ebc0:	bl	404420 <fputc@plt>
  42ebc4:	add	x21, x21, #0x1
  42ebc8:	add	x23, x23, #0x1
  42ebcc:	b	42eba0 <argp_usage@@Base+0x16c0>
  42ebd0:	ldr	w0, [sp, #100]
  42ebd4:	ldr	w1, [sp, #100]
  42ebd8:	cmp	w0, #0x0
  42ebdc:	mov	w0, #0xc                   	// #12
  42ebe0:	csel	w0, w1, w0, ne  // ne = any
  42ebe4:	b	42eb88 <argp_usage@@Base+0x16a8>
  42ebe8:	mov	w24, w0
  42ebec:	ldrb	w0, [x23, #1]!
  42ebf0:	cmp	w0, #0x30
  42ebf4:	b.eq	42ebe8 <argp_usage@@Base+0x1708>  // b.none
  42ebf8:	b.hi	42ecb8 <argp_usage@@Base+0x17d8>  // b.pmore
  42ebfc:	cmp	w0, #0x23
  42ec00:	b.eq	42ec98 <argp_usage@@Base+0x17b8>  // b.none
  42ec04:	cmp	w0, #0x2d
  42ec08:	b.eq	42ebe8 <argp_usage@@Base+0x1708>  // b.none
  42ec0c:	sub	w0, w0, #0x30
  42ec10:	cmp	w0, #0x9
  42ec14:	b.hi	42ecd0 <argp_usage@@Base+0x17f0>  // b.pmore
  42ec18:	mov	w1, #0xcccc                	// #52428
  42ec1c:	mov	w28, #0x0                   	// #0
  42ec20:	movk	w1, #0xccc, lsl #16
  42ec24:	mov	w2, #0xa                   	// #10
  42ec28:	cmp	w28, w1
  42ec2c:	b.gt	42ecc8 <argp_usage@@Base+0x17e8>
  42ec30:	ldrb	w0, [x23]
  42ec34:	b.ne	42ec40 <argp_usage@@Base+0x1760>  // b.any
  42ec38:	cmp	w0, #0x37
  42ec3c:	b.hi	42ecc8 <argp_usage@@Base+0x17e8>  // b.pmore
  42ec40:	sub	w0, w0, #0x30
  42ec44:	madd	w28, w28, w2, w0
  42ec48:	ldrb	w0, [x23, #1]!
  42ec4c:	sub	w0, w0, #0x30
  42ec50:	cmp	w0, #0x9
  42ec54:	b.ls	42ec28 <argp_usage@@Base+0x1748>  // b.plast
  42ec58:	ldrb	w2, [x23]
  42ec5c:	cmp	w2, #0x45
  42ec60:	b.eq	42ec6c <argp_usage@@Base+0x178c>  // b.none
  42ec64:	cmp	w2, #0x4f
  42ec68:	b.ne	42ecd8 <argp_usage@@Base+0x17f8>  // b.any
  42ec6c:	add	x23, x23, #0x1
  42ec70:	ldrb	w8, [x23]
  42ec74:	mov	w3, w8
  42ec78:	cmp	w8, #0x7a
  42ec7c:	b.hi	42fbb8 <argp_usage@@Base+0x26d8>  // b.pmore
  42ec80:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  42ec84:	add	x0, x0, #0x3dc
  42ec88:	ldrh	w0, [x0, w8, uxtw #1]
  42ec8c:	adr	x1, 42ec98 <argp_usage@@Base+0x17b8>
  42ec90:	add	x0, x1, w0, sxth #2
  42ec94:	br	x0
  42ec98:	mov	w27, #0x1                   	// #1
  42ec9c:	b	42ebec <argp_usage@@Base+0x170c>
  42eca0:	mov	w25, #0x1                   	// #1
  42eca4:	b	42ebec <argp_usage@@Base+0x170c>
  42eca8:	ldr	w25, [sp, #164]
  42ecac:	mov	w27, #0x0                   	// #0
  42ecb0:	mov	w24, #0x0                   	// #0
  42ecb4:	b	42ebec <argp_usage@@Base+0x170c>
  42ecb8:	cmp	w0, #0x5e
  42ecbc:	b.eq	42eca0 <argp_usage@@Base+0x17c0>  // b.none
  42ecc0:	cmp	w0, #0x5f
  42ecc4:	b	42ec08 <argp_usage@@Base+0x1728>
  42ecc8:	mov	w28, #0x7fffffff            	// #2147483647
  42eccc:	b	42ec48 <argp_usage@@Base+0x1768>
  42ecd0:	mov	w28, #0xffffffff            	// #-1
  42ecd4:	b	42ec58 <argp_usage@@Base+0x1778>
  42ecd8:	mov	w2, #0x0                   	// #0
  42ecdc:	b	42ec70 <argp_usage@@Base+0x1790>
  42ece0:	adrp	x8, 44e000 <_obstack_memory_used@@Base+0x16380>
  42ece4:	add	x27, x8, #0x76b
  42ece8:	ldr	w6, [sp, #160]
  42ecec:	mov	x2, x22
  42ecf0:	ldr	x5, [sp, #120]
  42ecf4:	mov	x1, x27
  42ecf8:	ldr	x4, [sp, #144]
  42ecfc:	mov	w3, w25
  42ed00:	mov	x0, #0x0                   	// #0
  42ed04:	bl	42eb1c <argp_usage@@Base+0x163c>
  42ed08:	cmp	w28, #0x0
  42ed0c:	csel	w2, w28, wzr, ge  // ge = tcont
  42ed10:	cmp	x0, w2, sxtw
  42ed14:	sxtw	x1, w2
  42ed18:	csel	x26, x0, x1, cs  // cs = hs, nlast
  42ed1c:	mvn	x2, x21
  42ed20:	cmp	x2, x26
  42ed24:	b.ls	42fc94 <argp_usage@@Base+0x27b4>  // b.plast
  42ed28:	cbz	x19, 42ed54 <argp_usage@@Base+0x1874>
  42ed2c:	cmp	x0, x1
  42ed30:	b.cc	42ee6c <argp_usage@@Base+0x198c>  // b.lo, b.ul, b.last
  42ed34:	ldr	w6, [sp, #160]
  42ed38:	mov	w3, w25
  42ed3c:	ldr	x5, [sp, #120]
  42ed40:	mov	x2, x22
  42ed44:	ldr	x4, [sp, #144]
  42ed48:	mov	x1, x27
  42ed4c:	mov	x0, x19
  42ed50:	bl	42eb1c <argp_usage@@Base+0x163c>
  42ed54:	add	x21, x21, x26
  42ed58:	b	42ebc8 <argp_usage@@Base+0x16e8>
  42ed5c:	cmp	w28, #0x0
  42ed60:	mvn	x1, x21
  42ed64:	csel	w0, w28, wzr, ge  // ge = tcont
  42ed68:	sxtw	x0, w0
  42ed6c:	cbnz	w2, 42fbb8 <argp_usage@@Base+0x26d8>
  42ed70:	cmp	x0, #0x0
  42ed74:	csinc	x25, x0, xzr, ne  // ne = any
  42ed78:	cmp	x25, x1
  42ed7c:	b.cs	42fc94 <argp_usage@@Base+0x27b4>  // b.hs, b.nlast
  42ed80:	cbz	x19, 42ed98 <argp_usage@@Base+0x18b8>
  42ed84:	cmp	w28, #0x1
  42ed88:	b.gt	42eda0 <argp_usage@@Base+0x18c0>
  42ed8c:	ldrb	w0, [x23]
  42ed90:	mov	x1, x19
  42ed94:	bl	404420 <fputc@plt>
  42ed98:	add	x21, x21, x25
  42ed9c:	b	42ebc8 <argp_usage@@Base+0x16e8>
  42eda0:	sxtw	x20, w28
  42eda4:	cmp	w24, #0x30
  42eda8:	sub	x20, x20, #0x1
  42edac:	mov	x24, #0x0                   	// #0
  42edb0:	b.ne	42edd0 <argp_usage@@Base+0x18f0>  // b.any
  42edb4:	mov	x1, x19
  42edb8:	add	x24, x24, #0x1
  42edbc:	mov	w0, #0x30                  	// #48
  42edc0:	bl	404420 <fputc@plt>
  42edc4:	cmp	x20, x24
  42edc8:	b.hi	42edb4 <argp_usage@@Base+0x18d4>  // b.pmore
  42edcc:	b	42ed8c <argp_usage@@Base+0x18ac>
  42edd0:	mov	x1, x19
  42edd4:	add	x24, x24, #0x1
  42edd8:	mov	w0, #0x20                  	// #32
  42eddc:	bl	404420 <fputc@plt>
  42ede0:	cmp	x20, x24
  42ede4:	b.hi	42edd0 <argp_usage@@Base+0x18f0>  // b.pmore
  42ede8:	b	42ed8c <argp_usage@@Base+0x18ac>
  42edec:	cbnz	w2, 42fbb8 <argp_usage@@Base+0x26d8>
  42edf0:	cbz	w27, 42eec0 <argp_usage@@Base+0x19e0>
  42edf4:	mov	w25, w27
  42edf8:	mov	w20, #0x0                   	// #0
  42edfc:	mov	w3, #0x61                  	// #97
  42ee00:	mov	w27, #0x0                   	// #0
  42ee04:	b	42eec8 <argp_usage@@Base+0x19e8>
  42ee08:	cbnz	w2, 42fbb8 <argp_usage@@Base+0x26d8>
  42ee0c:	cbz	w27, 42ef54 <argp_usage@@Base+0x1a74>
  42ee10:	mov	w25, w27
  42ee14:	mov	w20, #0x0                   	// #0
  42ee18:	mov	w3, #0x41                  	// #65
  42ee1c:	b	42ee00 <argp_usage@@Base+0x1920>
  42ee20:	cmp	w27, #0x0
  42ee24:	csel	w25, w25, w27, eq  // eq = none
  42ee28:	cmp	w2, #0x45
  42ee2c:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42ee30:	mov	w27, #0x0                   	// #0
  42ee34:	b	42ef64 <argp_usage@@Base+0x1a84>
  42ee38:	cmp	w2, #0x45
  42ee3c:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42ee40:	cbz	w27, 42ef60 <argp_usage@@Base+0x1a80>
  42ee44:	mov	w25, w27
  42ee48:	mov	w3, #0x42                  	// #66
  42ee4c:	b	42ee30 <argp_usage@@Base+0x1950>
  42ee50:	cmp	w2, #0x4f
  42ee54:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42ee58:	mov	w3, #0x63                  	// #99
  42ee5c:	b	42ee30 <argp_usage@@Base+0x1950>
  42ee60:	adrp	x8, 448000 <_obstack_memory_used@@Base+0x10380>
  42ee64:	add	x27, x8, #0xca9
  42ee68:	b	42ece8 <argp_usage@@Base+0x1808>
  42ee6c:	sxtw	x20, w28
  42ee70:	cmp	w24, #0x30
  42ee74:	sub	x20, x20, x0
  42ee78:	mov	x24, #0x0                   	// #0
  42ee7c:	b.eq	42eeac <argp_usage@@Base+0x19cc>  // b.none
  42ee80:	cmp	x24, x20
  42ee84:	b.eq	42ed34 <argp_usage@@Base+0x1854>  // b.none
  42ee88:	mov	x1, x19
  42ee8c:	mov	w0, #0x20                  	// #32
  42ee90:	add	x24, x24, #0x1
  42ee94:	bl	404420 <fputc@plt>
  42ee98:	b	42ee80 <argp_usage@@Base+0x19a0>
  42ee9c:	add	x24, x24, #0x1
  42eea0:	mov	x1, x19
  42eea4:	mov	w0, #0x30                  	// #48
  42eea8:	bl	404420 <fputc@plt>
  42eeac:	cmp	x24, x20
  42eeb0:	b.ne	42ee9c <argp_usage@@Base+0x19bc>  // b.any
  42eeb4:	b	42ed34 <argp_usage@@Base+0x1854>
  42eeb8:	mov	w3, #0x72                  	// #114
  42eebc:	b	42ee30 <argp_usage@@Base+0x1950>
  42eec0:	mov	w20, #0x0                   	// #0
  42eec4:	mov	w3, #0x61                  	// #97
  42eec8:	mov	w0, #0x2520                	// #9504
  42eecc:	strh	w0, [sp, #184]
  42eed0:	cbz	w2, 42ef90 <argp_usage@@Base+0x1ab0>
  42eed4:	add	x0, sp, #0xbb
  42eed8:	strb	w2, [sp, #186]
  42eedc:	strb	w3, [x0]
  42eee0:	add	x2, sp, #0xb8
  42eee4:	strb	wzr, [x0, #1]
  42eee8:	mov	x3, x22
  42eeec:	add	x0, sp, #0xd0
  42eef0:	mov	x1, #0x400                 	// #1024
  42eef4:	bl	404400 <strftime@plt>
  42eef8:	cbz	x0, 42ebc8 <argp_usage@@Base+0x16e8>
  42eefc:	cmp	w28, #0x0
  42ef00:	sub	x26, x0, #0x1
  42ef04:	csel	w1, w28, wzr, ge  // ge = tcont
  42ef08:	cmp	x26, w1, sxtw
  42ef0c:	sxtw	x0, w1
  42ef10:	csel	x1, x26, x0, cs  // cs = hs, nlast
  42ef14:	str	x1, [sp, #104]
  42ef18:	mvn	x1, x21
  42ef1c:	ldr	x2, [sp, #104]
  42ef20:	cmp	x1, x2
  42ef24:	b.ls	42fc94 <argp_usage@@Base+0x27b4>  // b.plast
  42ef28:	cbz	x19, 42ef4c <argp_usage@@Base+0x1a6c>
  42ef2c:	cmp	w20, #0x0
  42ef30:	ccmp	x26, x0, #0x2, eq  // eq = none
  42ef34:	b.cc	42ef98 <argp_usage@@Base+0x1ab8>  // b.lo, b.ul, b.last
  42ef38:	cbz	w27, 42efe4 <argp_usage@@Base+0x1b04>
  42ef3c:	ldr	x1, [sp, #128]
  42ef40:	mov	x2, x26
  42ef44:	mov	x0, x19
  42ef48:	bl	42ea7c <argp_usage@@Base+0x159c>
  42ef4c:	ldr	x0, [sp, #104]
  42ef50:	b	42f4bc <argp_usage@@Base+0x1fdc>
  42ef54:	mov	w20, #0x0                   	// #0
  42ef58:	mov	w3, #0x41                  	// #65
  42ef5c:	b	42eec8 <argp_usage@@Base+0x19e8>
  42ef60:	mov	w3, #0x42                  	// #66
  42ef64:	mov	w20, #0x0                   	// #0
  42ef68:	b	42eec8 <argp_usage@@Base+0x19e8>
  42ef6c:	mov	w3, #0x43                  	// #67
  42ef70:	b	42ee30 <argp_usage@@Base+0x1950>
  42ef74:	mov	w27, w0
  42ef78:	mov	w3, #0x70                  	// #112
  42ef7c:	b	42ef64 <argp_usage@@Base+0x1a84>
  42ef80:	mov	w3, #0x59                  	// #89
  42ef84:	b	42ee30 <argp_usage@@Base+0x1950>
  42ef88:	mov	w3, #0x79                  	// #121
  42ef8c:	b	42ee30 <argp_usage@@Base+0x1950>
  42ef90:	add	x0, sp, #0xba
  42ef94:	b	42eedc <argp_usage@@Base+0x19fc>
  42ef98:	sxtw	x20, w28
  42ef9c:	cmp	w24, #0x30
  42efa0:	sub	x20, x20, x26
  42efa4:	mov	x24, #0x0                   	// #0
  42efa8:	b.eq	42efd8 <argp_usage@@Base+0x1af8>  // b.none
  42efac:	cmp	x24, x20
  42efb0:	b.eq	42ef38 <argp_usage@@Base+0x1a58>  // b.none
  42efb4:	mov	x1, x19
  42efb8:	mov	w0, #0x20                  	// #32
  42efbc:	add	x24, x24, #0x1
  42efc0:	bl	404420 <fputc@plt>
  42efc4:	b	42efac <argp_usage@@Base+0x1acc>
  42efc8:	add	x24, x24, #0x1
  42efcc:	mov	x1, x19
  42efd0:	mov	w0, #0x30                  	// #48
  42efd4:	bl	404420 <fputc@plt>
  42efd8:	cmp	x24, x20
  42efdc:	b.ne	42efc8 <argp_usage@@Base+0x1ae8>  // b.any
  42efe0:	b	42ef38 <argp_usage@@Base+0x1a58>
  42efe4:	cbz	w25, 42effc <argp_usage@@Base+0x1b1c>
  42efe8:	ldr	x1, [sp, #128]
  42efec:	mov	x2, x26
  42eff0:	mov	x0, x19
  42eff4:	bl	42eacc <argp_usage@@Base+0x15ec>
  42eff8:	b	42ef4c <argp_usage@@Base+0x1a6c>
  42effc:	ldr	x0, [sp, #128]
  42f000:	mov	x3, x19
  42f004:	mov	x1, x26
  42f008:	mov	x2, #0x1                   	// #1
  42f00c:	bl	404bd0 <fwrite@plt>
  42f010:	b	42ef4c <argp_usage@@Base+0x1a6c>
  42f014:	cmp	w2, #0x45
  42f018:	b.eq	42ef6c <argp_usage@@Base+0x1a8c>  // b.none
  42f01c:	ldr	w4, [x22, #20]
  42f020:	mov	w5, #0x64                  	// #100
  42f024:	sdiv	w1, w4, w5
  42f028:	add	w0, w1, #0x13
  42f02c:	msub	w1, w1, w5, w4
  42f030:	tbz	w1, #31, 42f058 <argp_usage@@Base+0x1b78>
  42f034:	cmp	w0, #0x0
  42f038:	cset	w1, gt
  42f03c:	cmn	w4, #0x76c
  42f040:	sub	w0, w0, w1
  42f044:	cset	w5, lt  // lt = tstop
  42f048:	mov	w1, #0x0                   	// #0
  42f04c:	mov	w4, #0x0                   	// #0
  42f050:	mov	w20, #0x2                   	// #2
  42f054:	b	42f0c4 <argp_usage@@Base+0x1be4>
  42f058:	mov	w1, #0x0                   	// #0
  42f05c:	b	42f03c <argp_usage@@Base+0x1b5c>
  42f060:	cmp	w2, #0x4f
  42f064:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f068:	mov	w3, #0x78                  	// #120
  42f06c:	b	42ee30 <argp_usage@@Base+0x1950>
  42f070:	cbnz	w2, 42fbb8 <argp_usage@@Base+0x26d8>
  42f074:	adrp	x8, 44e000 <_obstack_memory_used@@Base+0x16380>
  42f078:	add	x27, x8, #0x3ca
  42f07c:	b	42ece8 <argp_usage@@Base+0x1808>
  42f080:	cmp	w2, #0x45
  42f084:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f088:	ldr	w0, [x22, #12]
  42f08c:	mov	w20, #0x2                   	// #2
  42f090:	b	42f0b8 <argp_usage@@Base+0x1bd8>
  42f094:	cmp	w2, #0x45
  42f098:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f09c:	ldr	w0, [x22, #12]
  42f0a0:	cmp	w24, #0x30
  42f0a4:	mov	w1, #0x2d                  	// #45
  42f0a8:	ccmp	w24, w1, #0x4, ne  // ne = any
  42f0ac:	mov	w1, #0x5f                  	// #95
  42f0b0:	csel	w24, w24, w1, eq  // eq = none
  42f0b4:	mov	w20, #0x2                   	// #2
  42f0b8:	lsr	w5, w0, #31
  42f0bc:	mov	w1, #0x0                   	// #0
  42f0c0:	mov	w4, #0x0                   	// #0
  42f0c4:	cmp	w2, #0x4f
  42f0c8:	eor	w6, w5, #0x1
  42f0cc:	csel	w6, w6, wzr, eq  // eq = none
  42f0d0:	cbnz	w6, 42ee00 <argp_usage@@Base+0x1920>
  42f0d4:	cbz	w5, 42f0dc <argp_usage@@Base+0x1bfc>
  42f0d8:	neg	w0, w0
  42f0dc:	add	x26, sp, #0xcf
  42f0e0:	mov	w9, #0x3a                  	// #58
  42f0e4:	mov	w6, #0xa                   	// #10
  42f0e8:	tbz	w1, #0, 42f20c <argp_usage@@Base+0x1d2c>
  42f0ec:	sub	x2, x26, #0x1
  42f0f0:	sturb	w9, [x26, #-1]
  42f0f4:	udiv	w8, w0, w6
  42f0f8:	asr	w1, w1, #1
  42f0fc:	cmp	w1, #0x0
  42f100:	sub	x26, x2, #0x1
  42f104:	ccmp	w0, #0x9, #0x2, eq  // eq = none
  42f108:	msub	w3, w8, w6, w0
  42f10c:	add	w3, w3, #0x30
  42f110:	sturb	w3, [x2, #-1]
  42f114:	b.hi	42f204 <argp_usage@@Base+0x1d24>  // b.pmore
  42f118:	cmp	w20, w28
  42f11c:	csel	w0, w20, w28, ge  // ge = tcont
  42f120:	str	w0, [sp, #104]
  42f124:	mvn	x0, x21
  42f128:	cbnz	w5, 42fcbc <argp_usage@@Base+0x27dc>
  42f12c:	cbnz	w4, 42fd0c <argp_usage@@Base+0x282c>
  42f130:	cmp	w24, #0x2d
  42f134:	b.eq	42f2e4 <argp_usage@@Base+0x1e04>  // b.none
  42f138:	mov	w20, #0x0                   	// #0
  42f13c:	ldr	x1, [sp, #152]
  42f140:	cmp	w20, #0x0
  42f144:	ldr	w2, [sp, #104]
  42f148:	cset	w3, ne  // ne = any
  42f14c:	sub	x1, x1, x26
  42f150:	sub	w1, w2, w1
  42f154:	sub	w27, w1, w3
  42f158:	cmp	w27, #0x0
  42f15c:	b.le	42f3c0 <argp_usage@@Base+0x1ee0>
  42f160:	cmp	w24, #0x5f
  42f164:	b.ne	42f27c <argp_usage@@Base+0x1d9c>  // b.any
  42f168:	sxtw	x4, w27
  42f16c:	cmp	x0, w27, sxtw
  42f170:	b.ls	42fc94 <argp_usage@@Base+0x27b4>  // b.plast
  42f174:	cbnz	x19, 42f24c <argp_usage@@Base+0x1d6c>
  42f178:	subs	w0, w28, w27
  42f17c:	add	x21, x21, x4
  42f180:	csel	w28, w0, wzr, gt
  42f184:	cbz	w20, 42f2e4 <argp_usage@@Base+0x1e04>
  42f188:	cmp	w28, #0x0
  42f18c:	mvn	x1, x21
  42f190:	csel	w0, w28, wzr, ge  // ge = tcont
  42f194:	sxtw	x0, w0
  42f198:	cmp	x0, #0x0
  42f19c:	csinc	x27, x0, xzr, ne  // ne = any
  42f1a0:	cmp	x27, x1
  42f1a4:	b.cs	42fc94 <argp_usage@@Base+0x27b4>  // b.hs, b.nlast
  42f1a8:	cbz	x19, 42fd04 <argp_usage@@Base+0x2824>
  42f1ac:	ldr	w1, [sp, #104]
  42f1b0:	cmp	w1, #0x0
  42f1b4:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  42f1b8:	b.ls	42fcf8 <argp_usage@@Base+0x2818>  // b.plast
  42f1bc:	sxtw	x3, w28
  42f1c0:	mov	x4, #0x0                   	// #0
  42f1c4:	sub	x3, x3, #0x1
  42f1c8:	cmp	x4, x3
  42f1cc:	b.cs	42fcf8 <argp_usage@@Base+0x2818>  // b.hs, b.nlast
  42f1d0:	mov	x1, x19
  42f1d4:	mov	w0, #0x20                  	// #32
  42f1d8:	str	x4, [sp, #136]
  42f1dc:	str	x3, [sp, #168]
  42f1e0:	bl	404420 <fputc@plt>
  42f1e4:	ldr	x4, [sp, #136]
  42f1e8:	ldr	x3, [sp, #168]
  42f1ec:	add	x4, x4, #0x1
  42f1f0:	b	42f1c8 <argp_usage@@Base+0x1ce8>
  42f1f4:	ldr	w0, [sp, #160]
  42f1f8:	mov	w28, #0x9                   	// #9
  42f1fc:	mov	w20, w28
  42f200:	b	42f0b8 <argp_usage@@Base+0x1bd8>
  42f204:	mov	w0, w8
  42f208:	b	42f0e8 <argp_usage@@Base+0x1c08>
  42f20c:	mov	x2, x26
  42f210:	b	42f0f4 <argp_usage@@Base+0x1c14>
  42f214:	sxtw	x3, w28
  42f218:	mov	x4, #0x0                   	// #0
  42f21c:	sub	x3, x3, #0x1
  42f220:	cmp	x4, x3
  42f224:	b.cs	42fcf8 <argp_usage@@Base+0x2818>  // b.hs, b.nlast
  42f228:	mov	x1, x19
  42f22c:	mov	w0, #0x20                  	// #32
  42f230:	str	x4, [sp, #136]
  42f234:	str	x3, [sp, #168]
  42f238:	bl	404420 <fputc@plt>
  42f23c:	ldr	x4, [sp, #136]
  42f240:	ldr	x3, [sp, #168]
  42f244:	add	x4, x4, #0x1
  42f248:	b	42f220 <argp_usage@@Base+0x1d40>
  42f24c:	mov	x3, #0x0                   	// #0
  42f250:	mov	x1, x19
  42f254:	mov	w0, #0x20                  	// #32
  42f258:	str	x4, [sp, #136]
  42f25c:	str	x3, [sp, #168]
  42f260:	bl	404420 <fputc@plt>
  42f264:	ldr	x3, [sp, #168]
  42f268:	ldr	x4, [sp, #136]
  42f26c:	add	x3, x3, #0x1
  42f270:	cmp	x4, x3
  42f274:	b.hi	42f250 <argp_usage@@Base+0x1d70>  // b.pmore
  42f278:	b	42f178 <argp_usage@@Base+0x1c98>
  42f27c:	ldr	w1, [sp, #104]
  42f280:	cmp	x0, w1, sxtw
  42f284:	b.ls	42fc94 <argp_usage@@Base+0x27b4>  // b.plast
  42f288:	cbz	w20, 42f2d4 <argp_usage@@Base+0x1df4>
  42f28c:	cmp	w28, #0x0
  42f290:	csel	w1, w28, wzr, ge  // ge = tcont
  42f294:	sxtw	x1, w1
  42f298:	cmp	x1, #0x0
  42f29c:	csinc	x2, x1, xzr, ne  // ne = any
  42f2a0:	str	x2, [sp, #136]
  42f2a4:	cmp	x2, x0
  42f2a8:	b.cs	42fc94 <argp_usage@@Base+0x27b4>  // b.hs, b.nlast
  42f2ac:	cbz	x19, 42f2cc <argp_usage@@Base+0x1dec>
  42f2b0:	ldr	w0, [sp, #104]
  42f2b4:	cmp	w0, #0x0
  42f2b8:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  42f2bc:	b.hi	42f344 <argp_usage@@Base+0x1e64>  // b.pmore
  42f2c0:	mov	x1, x19
  42f2c4:	mov	w0, w20
  42f2c8:	bl	404420 <fputc@plt>
  42f2cc:	ldr	x0, [sp, #136]
  42f2d0:	add	x21, x21, x0
  42f2d4:	sxtw	x20, w27
  42f2d8:	cbnz	x19, 42f3a0 <argp_usage@@Base+0x1ec0>
  42f2dc:	add	x21, x21, x20
  42f2e0:	mov	w28, #0x0                   	// #0
  42f2e4:	ldr	x0, [sp, #152]
  42f2e8:	cmp	w28, #0x0
  42f2ec:	csel	w1, w28, wzr, ge  // ge = tcont
  42f2f0:	sub	x27, x0, x26
  42f2f4:	cmp	x27, w1, sxtw
  42f2f8:	sxtw	x0, w1
  42f2fc:	csel	x1, x27, x0, cs  // cs = hs, nlast
  42f300:	str	x1, [sp, #136]
  42f304:	mvn	x1, x21
  42f308:	ldr	x2, [sp, #136]
  42f30c:	cmp	x1, x2
  42f310:	b.ls	42fc94 <argp_usage@@Base+0x27b4>  // b.plast
  42f314:	cbz	x19, 42f4b8 <argp_usage@@Base+0x1fd8>
  42f318:	ldr	w1, [sp, #104]
  42f31c:	cmp	w1, #0x0
  42f320:	ccmp	x27, x0, #0x2, eq  // eq = none
  42f324:	b.cc	42f45c <argp_usage@@Base+0x1f7c>  // b.lo, b.ul, b.last
  42f328:	cbnz	w25, 42f4a8 <argp_usage@@Base+0x1fc8>
  42f32c:	mov	x3, x19
  42f330:	mov	x1, x27
  42f334:	mov	x0, x26
  42f338:	mov	x2, #0x1                   	// #1
  42f33c:	bl	404bd0 <fwrite@plt>
  42f340:	b	42f4b8 <argp_usage@@Base+0x1fd8>
  42f344:	sxtw	x7, w28
  42f348:	cmp	w24, #0x30
  42f34c:	sub	x28, x7, #0x1
  42f350:	mov	x3, #0x0                   	// #0
  42f354:	b.eq	42f394 <argp_usage@@Base+0x1eb4>  // b.none
  42f358:	cmp	x3, x28
  42f35c:	b.cs	42f2c0 <argp_usage@@Base+0x1de0>  // b.hs, b.nlast
  42f360:	mov	x1, x19
  42f364:	mov	w0, #0x20                  	// #32
  42f368:	str	x3, [sp, #168]
  42f36c:	bl	404420 <fputc@plt>
  42f370:	ldr	x3, [sp, #168]
  42f374:	add	x3, x3, #0x1
  42f378:	b	42f358 <argp_usage@@Base+0x1e78>
  42f37c:	mov	x1, x19
  42f380:	mov	w0, #0x30                  	// #48
  42f384:	str	x3, [sp, #168]
  42f388:	bl	404420 <fputc@plt>
  42f38c:	ldr	x3, [sp, #168]
  42f390:	add	x3, x3, #0x1
  42f394:	cmp	x3, x28
  42f398:	b.cc	42f37c <argp_usage@@Base+0x1e9c>  // b.lo, b.ul, b.last
  42f39c:	b	42f2c0 <argp_usage@@Base+0x1de0>
  42f3a0:	mov	x27, #0x0                   	// #0
  42f3a4:	mov	x1, x19
  42f3a8:	add	x27, x27, #0x1
  42f3ac:	mov	w0, #0x30                  	// #48
  42f3b0:	bl	404420 <fputc@plt>
  42f3b4:	cmp	x20, x27
  42f3b8:	b.hi	42f3a4 <argp_usage@@Base+0x1ec4>  // b.pmore
  42f3bc:	b	42f2dc <argp_usage@@Base+0x1dfc>
  42f3c0:	cbz	w20, 42f2e4 <argp_usage@@Base+0x1e04>
  42f3c4:	cmp	w28, #0x0
  42f3c8:	csel	w1, w28, wzr, ge  // ge = tcont
  42f3cc:	sxtw	x1, w1
  42f3d0:	cmp	x1, #0x0
  42f3d4:	csinc	x27, x1, xzr, ne  // ne = any
  42f3d8:	cmp	x27, x0
  42f3dc:	b.cs	42fc94 <argp_usage@@Base+0x27b4>  // b.hs, b.nlast
  42f3e0:	cbz	x19, 42fd04 <argp_usage@@Base+0x2824>
  42f3e4:	ldr	w0, [sp, #104]
  42f3e8:	cmp	w0, #0x0
  42f3ec:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  42f3f0:	b.ls	42fcf8 <argp_usage@@Base+0x2818>  // b.plast
  42f3f4:	sxtw	x0, w28
  42f3f8:	cmp	w24, #0x30
  42f3fc:	sub	x0, x0, #0x1
  42f400:	str	x0, [sp, #136]
  42f404:	mov	x3, #0x0                   	// #0
  42f408:	b.eq	42f44c <argp_usage@@Base+0x1f6c>  // b.none
  42f40c:	ldr	x0, [sp, #136]
  42f410:	cmp	x3, x0
  42f414:	b.cs	42fcf8 <argp_usage@@Base+0x2818>  // b.hs, b.nlast
  42f418:	mov	x1, x19
  42f41c:	mov	w0, #0x20                  	// #32
  42f420:	str	x3, [sp, #168]
  42f424:	bl	404420 <fputc@plt>
  42f428:	ldr	x3, [sp, #168]
  42f42c:	add	x3, x3, #0x1
  42f430:	b	42f40c <argp_usage@@Base+0x1f2c>
  42f434:	mov	x1, x19
  42f438:	mov	w0, #0x30                  	// #48
  42f43c:	str	x3, [sp, #168]
  42f440:	bl	404420 <fputc@plt>
  42f444:	ldr	x3, [sp, #168]
  42f448:	add	x3, x3, #0x1
  42f44c:	ldr	x0, [sp, #136]
  42f450:	cmp	x3, x0
  42f454:	b.cc	42f434 <argp_usage@@Base+0x1f54>  // b.lo, b.ul, b.last
  42f458:	b	42fcf8 <argp_usage@@Base+0x2818>
  42f45c:	sxtw	x20, w28
  42f460:	cmp	w24, #0x30
  42f464:	sub	x20, x20, x27
  42f468:	mov	x24, #0x0                   	// #0
  42f46c:	b.eq	42f49c <argp_usage@@Base+0x1fbc>  // b.none
  42f470:	cmp	x24, x20
  42f474:	b.eq	42f328 <argp_usage@@Base+0x1e48>  // b.none
  42f478:	mov	x1, x19
  42f47c:	mov	w0, #0x20                  	// #32
  42f480:	add	x24, x24, #0x1
  42f484:	bl	404420 <fputc@plt>
  42f488:	b	42f470 <argp_usage@@Base+0x1f90>
  42f48c:	add	x24, x24, #0x1
  42f490:	mov	x1, x19
  42f494:	mov	w0, #0x30                  	// #48
  42f498:	bl	404420 <fputc@plt>
  42f49c:	cmp	x24, x20
  42f4a0:	b.ne	42f48c <argp_usage@@Base+0x1fac>  // b.any
  42f4a4:	b	42f328 <argp_usage@@Base+0x1e48>
  42f4a8:	mov	x2, x27
  42f4ac:	mov	x1, x26
  42f4b0:	mov	x0, x19
  42f4b4:	bl	42eacc <argp_usage@@Base+0x15ec>
  42f4b8:	ldr	x0, [sp, #136]
  42f4bc:	add	x21, x21, x0
  42f4c0:	b	42ebc8 <argp_usage@@Base+0x16e8>
  42f4c4:	cbnz	w2, 42fbb8 <argp_usage@@Base+0x26d8>
  42f4c8:	adrp	x8, 44e000 <_obstack_memory_used@@Base+0x16380>
  42f4cc:	add	x27, x8, #0x3d3
  42f4d0:	b	42ece8 <argp_usage@@Base+0x1808>
  42f4d4:	cmp	w2, #0x45
  42f4d8:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f4dc:	ldr	w0, [x22, #8]
  42f4e0:	b	42f08c <argp_usage@@Base+0x1bac>
  42f4e4:	cmp	w2, #0x45
  42f4e8:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f4ec:	ldr	w0, [sp, #100]
  42f4f0:	b	42f08c <argp_usage@@Base+0x1bac>
  42f4f4:	cmp	w2, #0x45
  42f4f8:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f4fc:	ldr	w0, [x22, #8]
  42f500:	b	42f0a0 <argp_usage@@Base+0x1bc0>
  42f504:	cmp	w2, #0x45
  42f508:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f50c:	ldr	w0, [sp, #100]
  42f510:	b	42f0a0 <argp_usage@@Base+0x1bc0>
  42f514:	cmp	w2, #0x45
  42f518:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f51c:	ldr	w0, [x22, #28]
  42f520:	mov	w1, #0x0                   	// #0
  42f524:	mov	w4, #0x0                   	// #0
  42f528:	cmn	w0, #0x1
  42f52c:	add	w0, w0, #0x1
  42f530:	cset	w5, lt  // lt = tstop
  42f534:	mov	w20, #0x3                   	// #3
  42f538:	b	42f0c4 <argp_usage@@Base+0x1be4>
  42f53c:	cmp	w2, #0x45
  42f540:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f544:	ldr	w0, [x22, #4]
  42f548:	b	42f08c <argp_usage@@Base+0x1bac>
  42f54c:	cmp	w2, #0x45
  42f550:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f554:	ldr	w0, [x22, #16]
  42f558:	cmn	w0, #0x1
  42f55c:	add	w0, w0, #0x1
  42f560:	cset	w5, lt  // lt = tstop
  42f564:	b	42f048 <argp_usage@@Base+0x1b68>
  42f568:	cmp	w2, #0x45
  42f56c:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f570:	cmn	w28, #0x1
  42f574:	b.eq	42f1f4 <argp_usage@@Base+0x1d14>  // b.none
  42f578:	ldr	w0, [sp, #160]
  42f57c:	mov	w1, w28
  42f580:	mov	w4, #0xa                   	// #10
  42f584:	cmp	w1, #0x8
  42f588:	b.gt	42f1fc <argp_usage@@Base+0x1d1c>
  42f58c:	sdiv	w0, w0, w4
  42f590:	add	w1, w1, #0x1
  42f594:	b	42f584 <argp_usage@@Base+0x20a4>
  42f598:	cmp	w28, #0x0
  42f59c:	mvn	x0, x21
  42f5a0:	csel	w25, w28, wzr, ge  // ge = tcont
  42f5a4:	sxtw	x25, w25
  42f5a8:	cmp	x25, #0x0
  42f5ac:	csinc	x25, x25, xzr, ne  // ne = any
  42f5b0:	cmp	x0, x25
  42f5b4:	b.ls	42fc94 <argp_usage@@Base+0x27b4>  // b.plast
  42f5b8:	cbz	x19, 42ed98 <argp_usage@@Base+0x18b8>
  42f5bc:	cmp	w28, #0x1
  42f5c0:	b.gt	42f5d0 <argp_usage@@Base+0x20f0>
  42f5c4:	mov	x1, x19
  42f5c8:	mov	w0, #0xa                   	// #10
  42f5cc:	b	42ed94 <argp_usage@@Base+0x18b4>
  42f5d0:	sxtw	x20, w28
  42f5d4:	cmp	w24, #0x30
  42f5d8:	sub	x20, x20, #0x1
  42f5dc:	mov	x24, #0x0                   	// #0
  42f5e0:	b.ne	42f600 <argp_usage@@Base+0x2120>  // b.any
  42f5e4:	mov	x1, x19
  42f5e8:	add	x24, x24, #0x1
  42f5ec:	mov	w0, #0x30                  	// #48
  42f5f0:	bl	404420 <fputc@plt>
  42f5f4:	cmp	x20, x24
  42f5f8:	b.hi	42f5e4 <argp_usage@@Base+0x2104>  // b.pmore
  42f5fc:	b	42f5c4 <argp_usage@@Base+0x20e4>
  42f600:	mov	x1, x19
  42f604:	add	x24, x24, #0x1
  42f608:	mov	w0, #0x20                  	// #32
  42f60c:	bl	404420 <fputc@plt>
  42f610:	cmp	x20, x24
  42f614:	b.hi	42f600 <argp_usage@@Base+0x2120>  // b.pmore
  42f618:	b	42f5c4 <argp_usage@@Base+0x20e4>
  42f61c:	mov	w0, #0x1                   	// #1
  42f620:	cbz	w27, 42ef74 <argp_usage@@Base+0x1a94>
  42f624:	mov	w3, #0x70                  	// #112
  42f628:	mov	w25, #0x0                   	// #0
  42f62c:	b	42ef64 <argp_usage@@Base+0x1a84>
  42f630:	mov	w0, #0x0                   	// #0
  42f634:	b	42f620 <argp_usage@@Base+0x2140>
  42f638:	ldr	w0, [x22, #16]
  42f63c:	mov	w1, #0xb                   	// #11
  42f640:	mov	w4, #0x0                   	// #0
  42f644:	mov	w5, #0x0                   	// #0
  42f648:	mov	w20, #0x1                   	// #1
  42f64c:	mul	w0, w0, w1
  42f650:	mov	w1, #0x0                   	// #0
  42f654:	asr	w0, w0, #5
  42f658:	add	w0, w0, #0x1
  42f65c:	b	42f0c4 <argp_usage@@Base+0x1be4>
  42f660:	cmp	w2, #0x45
  42f664:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f668:	ldr	w0, [x22]
  42f66c:	b	42f08c <argp_usage@@Base+0x1bac>
  42f670:	mov	x1, x22
  42f674:	mov	x2, #0x38                  	// #56
  42f678:	add	x0, sp, #0xd0
  42f67c:	bl	404200 <memcpy@plt>
  42f680:	ldr	x0, [sp, #120]
  42f684:	add	x1, sp, #0xd0
  42f688:	add	x26, sp, #0xcf
  42f68c:	bl	442ac8 <_obstack_memory_used@@Base+0xae48>
  42f690:	lsr	x5, x0, #63
  42f694:	and	w5, w5, #0xff
  42f698:	mov	x3, x0
  42f69c:	mov	x4, #0xa                   	// #10
  42f6a0:	mov	w6, #0x30                  	// #48
  42f6a4:	sdiv	x1, x3, x4
  42f6a8:	cmp	x0, #0x0
  42f6ac:	msub	x2, x1, x4, x3
  42f6b0:	mov	x3, x1
  42f6b4:	and	w1, w2, #0xff
  42f6b8:	add	w1, w1, #0x30
  42f6bc:	sub	w2, w6, w2, uxtb
  42f6c0:	and	w2, w2, #0xff
  42f6c4:	and	w1, w1, #0xff
  42f6c8:	csel	w1, w1, w2, ge  // ge = tcont
  42f6cc:	strb	w1, [x26, #-1]!
  42f6d0:	cbnz	x3, 42f6a4 <argp_usage@@Base+0x21c4>
  42f6d4:	mov	w4, #0x0                   	// #0
  42f6d8:	mov	w20, #0x1                   	// #1
  42f6dc:	b	42f118 <argp_usage@@Base+0x1c38>
  42f6e0:	cmp	w2, #0x4f
  42f6e4:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f6e8:	mov	w3, #0x58                  	// #88
  42f6ec:	b	42ee30 <argp_usage@@Base+0x1950>
  42f6f0:	cmp	w28, #0x0
  42f6f4:	mvn	x0, x21
  42f6f8:	csel	w25, w28, wzr, ge  // ge = tcont
  42f6fc:	sxtw	x25, w25
  42f700:	cmp	x25, #0x0
  42f704:	csinc	x25, x25, xzr, ne  // ne = any
  42f708:	cmp	x0, x25
  42f70c:	b.ls	42fc94 <argp_usage@@Base+0x27b4>  // b.plast
  42f710:	cbz	x19, 42ed98 <argp_usage@@Base+0x18b8>
  42f714:	cmp	w28, #0x1
  42f718:	b.gt	42f728 <argp_usage@@Base+0x2248>
  42f71c:	mov	x1, x19
  42f720:	mov	w0, #0x9                   	// #9
  42f724:	b	42ed94 <argp_usage@@Base+0x18b4>
  42f728:	sxtw	x20, w28
  42f72c:	cmp	w24, #0x30
  42f730:	sub	x20, x20, #0x1
  42f734:	mov	x24, #0x0                   	// #0
  42f738:	b.ne	42f758 <argp_usage@@Base+0x2278>  // b.any
  42f73c:	mov	x1, x19
  42f740:	add	x24, x24, #0x1
  42f744:	mov	w0, #0x30                  	// #48
  42f748:	bl	404420 <fputc@plt>
  42f74c:	cmp	x20, x24
  42f750:	b.hi	42f73c <argp_usage@@Base+0x225c>  // b.pmore
  42f754:	b	42f71c <argp_usage@@Base+0x223c>
  42f758:	mov	x1, x19
  42f75c:	add	x24, x24, #0x1
  42f760:	mov	w0, #0x20                  	// #32
  42f764:	bl	404420 <fputc@plt>
  42f768:	cmp	x20, x24
  42f76c:	b.hi	42f758 <argp_usage@@Base+0x2278>  // b.pmore
  42f770:	b	42f71c <argp_usage@@Base+0x223c>
  42f774:	ldr	w0, [x22, #24]
  42f778:	mov	w4, #0x7                   	// #7
  42f77c:	add	w1, w0, #0x6
  42f780:	sdiv	w0, w1, w4
  42f784:	msub	w0, w0, w4, w1
  42f788:	add	w0, w0, #0x1
  42f78c:	mov	w20, #0x1                   	// #1
  42f790:	b	42f0b8 <argp_usage@@Base+0x1bd8>
  42f794:	cmp	w2, #0x45
  42f798:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f79c:	ldp	w1, w0, [x22, #24]
  42f7a0:	sub	w0, w0, w1
  42f7a4:	mov	w1, #0x7                   	// #7
  42f7a8:	add	w0, w0, #0x7
  42f7ac:	sdiv	w0, w0, w1
  42f7b0:	b	42f08c <argp_usage@@Base+0x1bac>
  42f7b4:	cmp	w2, #0x45
  42f7b8:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f7bc:	ldp	w6, w9, [x22, #20]
  42f7c0:	mov	w0, #0xffffff9c            	// #-100
  42f7c4:	mov	w4, #0x12c                 	// #300
  42f7c8:	mov	w10, #0x7                   	// #7
  42f7cc:	cmp	w6, #0x0
  42f7d0:	csel	w4, w4, w0, lt  // lt = tstop
  42f7d4:	ldr	w0, [x22, #28]
  42f7d8:	add	w4, w6, w4
  42f7dc:	sub	w1, w0, w9
  42f7e0:	add	w5, w1, #0x17e
  42f7e4:	sdiv	w1, w5, w10
  42f7e8:	msub	w1, w1, w10, w5
  42f7ec:	sub	w1, w0, w1
  42f7f0:	adds	w1, w1, #0x3
  42f7f4:	b.pl	42f8a4 <argp_usage@@Base+0x23c4>  // b.nfrst
  42f7f8:	sub	w4, w4, #0x1
  42f7fc:	tst	x4, #0x3
  42f800:	b.ne	42f894 <argp_usage@@Base+0x23b4>  // b.any
  42f804:	mov	w5, #0x64                  	// #100
  42f808:	sdiv	w1, w4, w5
  42f80c:	msub	w1, w1, w5, w4
  42f810:	cbnz	w1, 42f89c <argp_usage@@Base+0x23bc>
  42f814:	mov	w5, #0x190                 	// #400
  42f818:	sdiv	w1, w4, w5
  42f81c:	msub	w4, w1, w5, w4
  42f820:	cmp	w4, #0x0
  42f824:	cset	w5, eq  // eq = none
  42f828:	add	w5, w5, #0x16d
  42f82c:	add	w4, w5, w0
  42f830:	sub	w5, w4, w9
  42f834:	mov	w9, #0x7                   	// #7
  42f838:	add	w5, w5, #0x17e
  42f83c:	sdiv	w1, w5, w9
  42f840:	msub	w1, w1, w9, w5
  42f844:	sub	w4, w4, w1
  42f848:	add	w1, w4, #0x3
  42f84c:	mov	w4, #0xffffffff            	// #-1
  42f850:	cmp	w8, #0x47
  42f854:	b.eq	42f914 <argp_usage@@Base+0x2434>  // b.none
  42f858:	cmp	w8, #0x67
  42f85c:	b.ne	42f93c <argp_usage@@Base+0x245c>  // b.any
  42f860:	mov	w5, #0x64                  	// #100
  42f864:	sdiv	w0, w6, w5
  42f868:	msub	w0, w0, w5, w6
  42f86c:	add	w0, w0, w4
  42f870:	sdiv	w1, w0, w5
  42f874:	msub	w0, w1, w5, w0
  42f878:	tbz	w0, #31, 42f08c <argp_usage@@Base+0x1bac>
  42f87c:	mov	w1, #0xfffff894            	// #-1900
  42f880:	sub	w4, w1, w4
  42f884:	cmp	w6, w4
  42f888:	b.ge	42f9d4 <argp_usage@@Base+0x24f4>  // b.tcont
  42f88c:	neg	w0, w0
  42f890:	b	42f08c <argp_usage@@Base+0x1bac>
  42f894:	mov	w5, #0x0                   	// #0
  42f898:	b	42f828 <argp_usage@@Base+0x2348>
  42f89c:	mov	w5, #0x1                   	// #1
  42f8a0:	b	42f828 <argp_usage@@Base+0x2348>
  42f8a4:	tst	x4, #0x3
  42f8a8:	b.ne	42f904 <argp_usage@@Base+0x2424>  // b.any
  42f8ac:	mov	w10, #0x64                  	// #100
  42f8b0:	sdiv	w5, w4, w10
  42f8b4:	msub	w5, w5, w10, w4
  42f8b8:	cbnz	w5, 42f90c <argp_usage@@Base+0x242c>
  42f8bc:	mov	w10, #0x190                 	// #400
  42f8c0:	sdiv	w5, w4, w10
  42f8c4:	msub	w4, w5, w10, w4
  42f8c8:	cmp	w4, #0x0
  42f8cc:	cset	w4, eq  // eq = none
  42f8d0:	add	w4, w4, #0x16d
  42f8d4:	sub	w4, w0, w4
  42f8d8:	sub	w5, w4, w9
  42f8dc:	mov	w9, #0x7                   	// #7
  42f8e0:	add	w5, w5, #0x17e
  42f8e4:	sdiv	w0, w5, w9
  42f8e8:	msub	w5, w0, w9, w5
  42f8ec:	sub	w4, w4, w5
  42f8f0:	adds	w4, w4, #0x3
  42f8f4:	csel	w1, w1, w4, mi  // mi = first
  42f8f8:	cmp	w4, #0x0
  42f8fc:	cset	w4, ge  // ge = tcont
  42f900:	b	42f850 <argp_usage@@Base+0x2370>
  42f904:	mov	w4, #0x0                   	// #0
  42f908:	b	42f8d0 <argp_usage@@Base+0x23f0>
  42f90c:	mov	w4, #0x1                   	// #1
  42f910:	b	42f8d0 <argp_usage@@Base+0x23f0>
  42f914:	mov	w0, #0xfffff894            	// #-1900
  42f918:	sub	w0, w0, w4
  42f91c:	cmp	w6, w0
  42f920:	add	w0, w6, #0x76c
  42f924:	cset	w5, lt  // lt = tstop
  42f928:	add	w0, w0, w4
  42f92c:	mov	w1, #0x0                   	// #0
  42f930:	mov	w4, #0x0                   	// #0
  42f934:	mov	w20, #0x4                   	// #4
  42f938:	b	42f0c4 <argp_usage@@Base+0x1be4>
  42f93c:	mov	w0, #0x7                   	// #7
  42f940:	sdiv	w0, w1, w0
  42f944:	add	w0, w0, #0x1
  42f948:	b	42f08c <argp_usage@@Base+0x1bac>
  42f94c:	cmp	w2, #0x45
  42f950:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f954:	ldr	w1, [x22, #24]
  42f958:	mov	w4, #0x7                   	// #7
  42f95c:	add	w1, w1, #0x6
  42f960:	sdiv	w0, w1, w4
  42f964:	msub	w1, w0, w4, w1
  42f968:	ldr	w0, [x22, #28]
  42f96c:	sub	w0, w0, w1
  42f970:	add	w0, w0, w4
  42f974:	sdiv	w0, w0, w4
  42f978:	b	42f08c <argp_usage@@Base+0x1bac>
  42f97c:	cmp	w2, #0x45
  42f980:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f984:	ldr	w0, [x22, #24]
  42f988:	b	42f78c <argp_usage@@Base+0x22ac>
  42f98c:	cmp	w2, #0x45
  42f990:	b.eq	42ef80 <argp_usage@@Base+0x1aa0>  // b.none
  42f994:	cmp	w2, #0x4f
  42f998:	b.eq	42fbb8 <argp_usage@@Base+0x26d8>  // b.none
  42f99c:	ldr	w0, [x22, #20]
  42f9a0:	cmn	w0, #0x76c
  42f9a4:	add	w0, w0, #0x76c
  42f9a8:	cset	w5, lt  // lt = tstop
  42f9ac:	b	42f92c <argp_usage@@Base+0x244c>
  42f9b0:	cmp	w2, #0x45
  42f9b4:	b.eq	42ef88 <argp_usage@@Base+0x1aa8>  // b.none
  42f9b8:	ldr	w1, [x22, #20]
  42f9bc:	mov	w4, #0x64                  	// #100
  42f9c0:	sdiv	w0, w1, w4
  42f9c4:	msub	w0, w0, w4, w1
  42f9c8:	tbz	w0, #31, 42f08c <argp_usage@@Base+0x1bac>
  42f9cc:	cmn	w1, #0x76c
  42f9d0:	b	42f888 <argp_usage@@Base+0x23a8>
  42f9d4:	add	w0, w0, #0x64
  42f9d8:	b	42f08c <argp_usage@@Base+0x1bac>
  42f9dc:	ldr	x0, [sp, #112]
  42f9e0:	cmp	w27, #0x0
  42f9e4:	csel	w25, w25, wzr, eq  // eq = none
  42f9e8:	bl	404280 <strlen@plt>
  42f9ec:	mov	x26, x0
  42f9f0:	cmp	w28, #0x0
  42f9f4:	csel	w1, w28, wzr, ge  // ge = tcont
  42f9f8:	cmp	x26, w1, sxtw
  42f9fc:	sxtw	x0, w1
  42fa00:	csel	x1, x26, x0, cs  // cs = hs, nlast
  42fa04:	str	x1, [sp, #104]
  42fa08:	mvn	x1, x21
  42fa0c:	ldr	x2, [sp, #104]
  42fa10:	cmp	x1, x2
  42fa14:	b.ls	42fc94 <argp_usage@@Base+0x27b4>  // b.plast
  42fa18:	cbz	x19, 42ef4c <argp_usage@@Base+0x1a6c>
  42fa1c:	cmp	x26, x0
  42fa20:	b.cc	42fa34 <argp_usage@@Base+0x2554>  // b.lo, b.ul, b.last
  42fa24:	cbz	w27, 42fa80 <argp_usage@@Base+0x25a0>
  42fa28:	mov	x2, x26
  42fa2c:	ldr	x1, [sp, #112]
  42fa30:	b	42ef44 <argp_usage@@Base+0x1a64>
  42fa34:	sxtw	x20, w28
  42fa38:	cmp	w24, #0x30
  42fa3c:	sub	x20, x20, x26
  42fa40:	mov	x24, #0x0                   	// #0
  42fa44:	b.eq	42fa74 <argp_usage@@Base+0x2594>  // b.none
  42fa48:	cmp	x24, x20
  42fa4c:	b.eq	42fa24 <argp_usage@@Base+0x2544>  // b.none
  42fa50:	mov	x1, x19
  42fa54:	mov	w0, #0x20                  	// #32
  42fa58:	add	x24, x24, #0x1
  42fa5c:	bl	404420 <fputc@plt>
  42fa60:	b	42fa48 <argp_usage@@Base+0x2568>
  42fa64:	add	x24, x24, #0x1
  42fa68:	mov	x1, x19
  42fa6c:	mov	w0, #0x30                  	// #48
  42fa70:	bl	404420 <fputc@plt>
  42fa74:	cmp	x24, x20
  42fa78:	b.ne	42fa64 <argp_usage@@Base+0x2584>  // b.any
  42fa7c:	b	42fa24 <argp_usage@@Base+0x2544>
  42fa80:	cbz	w25, 42fa90 <argp_usage@@Base+0x25b0>
  42fa84:	mov	x2, x26
  42fa88:	ldr	x1, [sp, #112]
  42fa8c:	b	42eff0 <argp_usage@@Base+0x1b10>
  42fa90:	mov	x3, x19
  42fa94:	mov	x1, x26
  42fa98:	mov	x2, #0x1                   	// #1
  42fa9c:	ldr	x0, [sp, #112]
  42faa0:	b	42f00c <argp_usage@@Base+0x1b2c>
  42faa4:	add	x4, x4, #0x1
  42faa8:	ldrb	w0, [x23, x4]
  42faac:	add	x1, x23, x4
  42fab0:	cmp	w0, #0x3a
  42fab4:	b.eq	42faa4 <argp_usage@@Base+0x25c4>  // b.none
  42fab8:	cmp	w0, #0x7a
  42fabc:	b.ne	42fbb8 <argp_usage@@Base+0x26d8>  // b.any
  42fac0:	mov	x23, x1
  42fac4:	ldr	w0, [x22, #32]
  42fac8:	tbnz	w0, #31, 42ebc8 <argp_usage@@Base+0x16e8>
  42facc:	ldr	x9, [x22, #40]
  42fad0:	cmp	w9, #0x0
  42fad4:	b.lt	42fb40 <argp_usage@@Base+0x2660>  // b.tstop
  42fad8:	b.ne	42fb48 <argp_usage@@Base+0x2668>  // b.any
  42fadc:	ldr	x0, [sp, #112]
  42fae0:	ldrb	w0, [x0]
  42fae4:	cmp	w0, #0x2d
  42fae8:	cset	w5, eq  // eq = none
  42faec:	mov	w8, #0x3c                  	// #60
  42faf0:	mov	w0, #0xe10                 	// #3600
  42faf4:	cmp	x4, #0x3
  42faf8:	sdiv	w6, w9, w8
  42fafc:	sdiv	w0, w9, w0
  42fb00:	sdiv	w1, w6, w8
  42fb04:	msub	w1, w1, w8, w6
  42fb08:	msub	w6, w6, w8, w9
  42fb0c:	b.hi	42fbb8 <argp_usage@@Base+0x26d8>  // b.pmore
  42fb10:	cmp	w4, #0x3
  42fb14:	b.hi	42fbb8 <argp_usage@@Base+0x26d8>  // b.pmore
  42fb18:	adrp	x8, 44e000 <_obstack_memory_used@@Base+0x16380>
  42fb1c:	add	x8, x8, #0x4d4
  42fb20:	ldrb	w4, [x8, w4, uxtw]
  42fb24:	adr	x7, 42fb30 <argp_usage@@Base+0x2650>
  42fb28:	add	x4, x7, w4, sxtb #2
  42fb2c:	br	x4
  42fb30:	mov	x4, #0x1                   	// #1
  42fb34:	b	42faa8 <argp_usage@@Base+0x25c8>
  42fb38:	mov	x4, #0x0                   	// #0
  42fb3c:	b	42fac4 <argp_usage@@Base+0x25e4>
  42fb40:	mov	w5, #0x1                   	// #1
  42fb44:	b	42faec <argp_usage@@Base+0x260c>
  42fb48:	mov	w5, #0x0                   	// #0
  42fb4c:	b	42faec <argp_usage@@Base+0x260c>
  42fb50:	mov	w4, #0x64                  	// #100
  42fb54:	mov	w20, #0x5                   	// #5
  42fb58:	madd	w0, w0, w4, w1
  42fb5c:	mov	w1, #0x0                   	// #0
  42fb60:	mov	w4, #0x1                   	// #1
  42fb64:	b	42f0c4 <argp_usage@@Base+0x1be4>
  42fb68:	mov	w4, #0x64                  	// #100
  42fb6c:	mov	w20, #0x6                   	// #6
  42fb70:	madd	w0, w0, w4, w1
  42fb74:	mov	w1, #0x4                   	// #4
  42fb78:	mov	w4, #0x1                   	// #1
  42fb7c:	b	42f0c4 <argp_usage@@Base+0x1be4>
  42fb80:	mov	w4, #0x64                  	// #100
  42fb84:	mov	w20, #0x9                   	// #9
  42fb88:	mul	w1, w1, w4
  42fb8c:	mov	w4, #0x2710                	// #10000
  42fb90:	madd	w0, w0, w4, w1
  42fb94:	mov	w1, #0x14                  	// #20
  42fb98:	mov	w4, #0x1                   	// #1
  42fb9c:	add	w0, w0, w6
  42fba0:	b	42f0c4 <argp_usage@@Base+0x1be4>
  42fba4:	cbnz	w6, 42fb80 <argp_usage@@Base+0x26a0>
  42fba8:	cbnz	w1, 42fb68 <argp_usage@@Base+0x2688>
  42fbac:	mov	w4, #0x1                   	// #1
  42fbb0:	b	42f534 <argp_usage@@Base+0x2054>
  42fbb4:	sub	x23, x23, #0x1
  42fbb8:	mov	x0, x23
  42fbbc:	add	w3, w23, #0x1
  42fbc0:	sub	w1, w3, w0
  42fbc4:	mov	x26, x0
  42fbc8:	ldrb	w2, [x0], #-1
  42fbcc:	cmp	w2, #0x25
  42fbd0:	b.ne	42fbc0 <argp_usage@@Base+0x26e0>  // b.any
  42fbd4:	cmp	w28, #0x0
  42fbd8:	sxtw	x4, w1
  42fbdc:	csel	w0, w28, wzr, ge  // ge = tcont
  42fbe0:	sxtw	x0, w0
  42fbe4:	cmp	x0, w1, sxtw
  42fbe8:	mvn	x1, x21
  42fbec:	csel	x27, x4, x0, ls  // ls = plast
  42fbf0:	cmp	x1, x27
  42fbf4:	b.ls	42fc94 <argp_usage@@Base+0x27b4>  // b.plast
  42fbf8:	cbz	x19, 42fc8c <argp_usage@@Base+0x27ac>
  42fbfc:	cmp	x4, x0
  42fc00:	b.cc	42fc20 <argp_usage@@Base+0x2740>  // b.lo, b.ul, b.last
  42fc04:	cbnz	w25, 42fc7c <argp_usage@@Base+0x279c>
  42fc08:	mov	x3, x19
  42fc0c:	mov	x1, x4
  42fc10:	mov	x0, x26
  42fc14:	mov	x2, #0x1                   	// #1
  42fc18:	bl	404bd0 <fwrite@plt>
  42fc1c:	b	42fc8c <argp_usage@@Base+0x27ac>
  42fc20:	sxtw	x20, w28
  42fc24:	cmp	w24, #0x30
  42fc28:	sub	x20, x20, x4
  42fc2c:	mov	x24, #0x0                   	// #0
  42fc30:	b.eq	42fc70 <argp_usage@@Base+0x2790>  // b.none
  42fc34:	cmp	x24, x20
  42fc38:	b.eq	42fc04 <argp_usage@@Base+0x2724>  // b.none
  42fc3c:	mov	x1, x19
  42fc40:	mov	w0, #0x20                  	// #32
  42fc44:	str	x4, [sp, #104]
  42fc48:	bl	404420 <fputc@plt>
  42fc4c:	add	x24, x24, #0x1
  42fc50:	ldr	x4, [sp, #104]
  42fc54:	b	42fc34 <argp_usage@@Base+0x2754>
  42fc58:	mov	x1, x19
  42fc5c:	mov	w0, #0x30                  	// #48
  42fc60:	str	x4, [sp, #104]
  42fc64:	bl	404420 <fputc@plt>
  42fc68:	ldr	x4, [sp, #104]
  42fc6c:	add	x24, x24, #0x1
  42fc70:	cmp	x24, x20
  42fc74:	b.ne	42fc58 <argp_usage@@Base+0x2778>  // b.any
  42fc78:	b	42fc04 <argp_usage@@Base+0x2724>
  42fc7c:	mov	x2, x4
  42fc80:	mov	x1, x26
  42fc84:	mov	x0, x19
  42fc88:	bl	42eacc <argp_usage@@Base+0x15ec>
  42fc8c:	add	x21, x21, x27
  42fc90:	b	42ebc8 <argp_usage@@Base+0x16e8>
  42fc94:	mov	x21, #0x0                   	// #0
  42fc98:	mov	x0, x21
  42fc9c:	ldp	x29, x30, [sp]
  42fca0:	ldp	x19, x20, [sp, #16]
  42fca4:	ldp	x21, x22, [sp, #32]
  42fca8:	ldp	x23, x24, [sp, #48]
  42fcac:	ldp	x25, x26, [sp, #64]
  42fcb0:	ldp	x27, x28, [sp, #80]
  42fcb4:	add	sp, sp, #0x4d0
  42fcb8:	ret
  42fcbc:	mov	w20, #0x2d                  	// #45
  42fcc0:	cmp	w24, #0x2d
  42fcc4:	b.ne	42f13c <argp_usage@@Base+0x1c5c>  // b.any
  42fcc8:	cmp	w28, #0x0
  42fccc:	csel	w1, w28, wzr, ge  // ge = tcont
  42fcd0:	sxtw	x1, w1
  42fcd4:	cmp	x1, #0x0
  42fcd8:	csinc	x27, x1, xzr, ne  // ne = any
  42fcdc:	cmp	x27, x0
  42fce0:	b.cs	42fc94 <argp_usage@@Base+0x27b4>  // b.hs, b.nlast
  42fce4:	cbz	x19, 42fd04 <argp_usage@@Base+0x2824>
  42fce8:	ldr	w0, [sp, #104]
  42fcec:	cmp	w0, #0x0
  42fcf0:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  42fcf4:	b.hi	42f214 <argp_usage@@Base+0x1d34>  // b.pmore
  42fcf8:	mov	x1, x19
  42fcfc:	mov	w0, w20
  42fd00:	bl	404420 <fputc@plt>
  42fd04:	add	x21, x21, x27
  42fd08:	b	42f2e4 <argp_usage@@Base+0x1e04>
  42fd0c:	mov	w20, #0x2b                  	// #43
  42fd10:	b	42fcc0 <argp_usage@@Base+0x27e0>
  42fd14:	stp	x29, x30, [sp, #-32]!
  42fd18:	mov	w6, w4
  42fd1c:	mov	x5, x3
  42fd20:	mov	x29, sp
  42fd24:	add	x4, sp, #0x1f
  42fd28:	mov	w3, #0x0                   	// #0
  42fd2c:	strb	wzr, [sp, #31]
  42fd30:	bl	42eb1c <argp_usage@@Base+0x163c>
  42fd34:	ldp	x29, x30, [sp], #32
  42fd38:	ret
  42fd3c:	stp	x29, x30, [sp, #-48]!
  42fd40:	mov	x29, sp
  42fd44:	stp	x19, x20, [sp, #16]
  42fd48:	mov	x20, x1
  42fd4c:	mov	x19, x2
  42fd50:	stp	x21, x22, [sp, #32]
  42fd54:	mov	w22, w0
  42fd58:	mov	x21, #0x0                   	// #0
  42fd5c:	cbz	x19, 42fd88 <argp_usage@@Base+0x28a8>
  42fd60:	mov	x2, x19
  42fd64:	mov	x1, x20
  42fd68:	mov	w0, w22
  42fd6c:	bl	43640c <argp_usage@@Base+0x8f2c>
  42fd70:	cmn	x0, #0x1
  42fd74:	b.eq	42fd88 <argp_usage@@Base+0x28a8>  // b.none
  42fd78:	cbnz	x0, 42fd9c <argp_usage@@Base+0x28bc>
  42fd7c:	bl	404e10 <__errno_location@plt>
  42fd80:	mov	w1, #0x1c                  	// #28
  42fd84:	str	w1, [x0]
  42fd88:	mov	x0, x21
  42fd8c:	ldp	x19, x20, [sp, #16]
  42fd90:	ldp	x21, x22, [sp, #32]
  42fd94:	ldp	x29, x30, [sp], #48
  42fd98:	ret
  42fd9c:	add	x21, x21, x0
  42fda0:	add	x20, x20, x0
  42fda4:	sub	x19, x19, x0
  42fda8:	b	42fd5c <argp_usage@@Base+0x287c>
  42fdac:	mov	x1, x0
  42fdb0:	mov	w0, #0x0                   	// #0
  42fdb4:	b	404440 <clock_gettime@plt>
  42fdb8:	stp	x29, x30, [sp, #-32]!
  42fdbc:	mov	x29, sp
  42fdc0:	add	x0, sp, #0x10
  42fdc4:	bl	42fdac <argp_usage@@Base+0x28cc>
  42fdc8:	ldp	x0, x1, [sp, #16]
  42fdcc:	ldp	x29, x30, [sp], #32
  42fdd0:	ret
  42fdd4:	ror	x2, x0, #3
  42fdd8:	udiv	x0, x2, x1
  42fddc:	msub	x0, x0, x1, x2
  42fde0:	ret
  42fde4:	cmp	x1, x0
  42fde8:	cset	w0, eq  // eq = none
  42fdec:	ret
  42fdf0:	ldrb	w2, [x1, #16]
  42fdf4:	cbnz	w2, 42fe18 <argp_usage@@Base+0x2938>
  42fdf8:	ucvtf	s0, x0
  42fdfc:	ldr	s1, [x1, #8]
  42fe00:	mov	w0, #0x5f800000            	// #1602224128
  42fe04:	fdiv	s0, s0, s1
  42fe08:	fmov	s1, w0
  42fe0c:	fcmpe	s0, s1
  42fe10:	b.ge	42fe30 <argp_usage@@Base+0x2950>  // b.tcont
  42fe14:	fcvtzu	x0, s0
  42fe18:	cmp	x0, #0xa
  42fe1c:	mov	x1, #0xa                   	// #10
  42fe20:	csel	x0, x0, x1, cs  // cs = hs, nlast
  42fe24:	orr	x0, x0, #0x1
  42fe28:	cmn	x0, #0x1
  42fe2c:	b.ne	42fe60 <argp_usage@@Base+0x2980>  // b.any
  42fe30:	mov	x0, #0x0                   	// #0
  42fe34:	b	42fe80 <argp_usage@@Base+0x29a0>
  42fe38:	add	x2, x1, #0x1
  42fe3c:	add	x1, x1, #0x2
  42fe40:	add	x3, x3, x2, lsl #2
  42fe44:	udiv	x2, x0, x1
  42fe48:	cmp	x0, x3
  42fe4c:	msub	x2, x2, x1, x0
  42fe50:	b.ls	42fe6c <argp_usage@@Base+0x298c>  // b.plast
  42fe54:	cbnz	x2, 42fe38 <argp_usage@@Base+0x2958>
  42fe58:	add	x0, x0, #0x2
  42fe5c:	b	42fe28 <argp_usage@@Base+0x2948>
  42fe60:	mov	x3, #0x9                   	// #9
  42fe64:	mov	x1, #0x3                   	// #3
  42fe68:	b	42fe44 <argp_usage@@Base+0x2964>
  42fe6c:	cbz	x2, 42fe58 <argp_usage@@Base+0x2978>
  42fe70:	cmp	xzr, x0, lsr #61
  42fe74:	cset	x1, ne  // ne = any
  42fe78:	tbnz	x0, #60, 42fe30 <argp_usage@@Base+0x2950>
  42fe7c:	cbnz	x1, 42fe30 <argp_usage@@Base+0x2950>
  42fe80:	ret
  42fe84:	stp	x29, x30, [sp, #-32]!
  42fe88:	mov	x29, sp
  42fe8c:	str	x19, [sp, #16]
  42fe90:	mov	x19, x0
  42fe94:	mov	x0, x1
  42fe98:	ldr	x1, [x19, #16]
  42fe9c:	ldr	x2, [x19, #48]
  42fea0:	blr	x2
  42fea4:	ldr	x1, [x19, #16]
  42fea8:	cmp	x1, x0
  42feac:	b.hi	42feb4 <argp_usage@@Base+0x29d4>  // b.pmore
  42feb0:	bl	404970 <abort@plt>
  42feb4:	ldr	x1, [x19]
  42feb8:	ldr	x19, [sp, #16]
  42febc:	add	x0, x1, x0, lsl #4
  42fec0:	ldp	x29, x30, [sp], #32
  42fec4:	ret
  42fec8:	stp	x29, x30, [sp, #-64]!
  42fecc:	mov	x29, sp
  42fed0:	stp	x21, x22, [sp, #32]
  42fed4:	mov	x22, x2
  42fed8:	mov	x21, x1
  42fedc:	stp	x19, x20, [sp, #16]
  42fee0:	mov	x20, x0
  42fee4:	str	x23, [sp, #48]
  42fee8:	and	w23, w3, #0xff
  42feec:	bl	42fe84 <argp_usage@@Base+0x29a4>
  42fef0:	str	x0, [x22]
  42fef4:	ldr	x1, [x0]
  42fef8:	cbnz	x1, 42ff14 <argp_usage@@Base+0x2a34>
  42fefc:	mov	x0, #0x0                   	// #0
  42ff00:	ldp	x19, x20, [sp, #16]
  42ff04:	ldp	x21, x22, [sp, #32]
  42ff08:	ldr	x23, [sp, #48]
  42ff0c:	ldp	x29, x30, [sp], #64
  42ff10:	ret
  42ff14:	mov	x19, x0
  42ff18:	cmp	x1, x21
  42ff1c:	b.eq	42ff34 <argp_usage@@Base+0x2a54>  // b.none
  42ff20:	ldr	x2, [x20, #56]
  42ff24:	mov	x0, x21
  42ff28:	blr	x2
  42ff2c:	tst	w0, #0xff
  42ff30:	b.eq	42ff80 <argp_usage@@Base+0x2aa0>  // b.none
  42ff34:	ldr	x0, [x19]
  42ff38:	cbz	w23, 42ff00 <argp_usage@@Base+0x2a20>
  42ff3c:	ldr	x1, [x19, #8]
  42ff40:	cbz	x1, 42ff60 <argp_usage@@Base+0x2a80>
  42ff44:	ldp	x2, x3, [x1]
  42ff48:	stp	x2, x3, [x19]
  42ff4c:	str	xzr, [x1]
  42ff50:	ldr	x2, [x20, #72]
  42ff54:	str	x2, [x1, #8]
  42ff58:	str	x1, [x20, #72]
  42ff5c:	b	42ff00 <argp_usage@@Base+0x2a20>
  42ff60:	str	xzr, [x19]
  42ff64:	b	42ff00 <argp_usage@@Base+0x2a20>
  42ff68:	ldr	x2, [x20, #56]
  42ff6c:	mov	x0, x21
  42ff70:	blr	x2
  42ff74:	tst	w0, #0xff
  42ff78:	b.ne	42ff94 <argp_usage@@Base+0x2ab4>  // b.any
  42ff7c:	ldr	x19, [x19, #8]
  42ff80:	ldr	x0, [x19, #8]
  42ff84:	cbz	x0, 42fefc <argp_usage@@Base+0x2a1c>
  42ff88:	ldr	x1, [x0]
  42ff8c:	cmp	x1, x21
  42ff90:	b.ne	42ff68 <argp_usage@@Base+0x2a88>  // b.any
  42ff94:	ldr	x1, [x19, #8]
  42ff98:	ldr	x0, [x1]
  42ff9c:	cbz	w23, 42ff00 <argp_usage@@Base+0x2a20>
  42ffa0:	ldr	x2, [x1, #8]
  42ffa4:	str	x2, [x19, #8]
  42ffa8:	b	42ff4c <argp_usage@@Base+0x2a6c>
  42ffac:	ldr	x1, [x0]
  42ffb0:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  42ffb4:	add	x2, x2, #0x548
  42ffb8:	cmp	x1, x2
  42ffbc:	b.eq	43003c <argp_usage@@Base+0x2b5c>  // b.none
  42ffc0:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  42ffc4:	ldr	s1, [x1, #8]
  42ffc8:	ldr	s2, [x3, #1348]
  42ffcc:	fcmpe	s1, s2
  42ffd0:	b.le	430030 <argp_usage@@Base+0x2b50>
  42ffd4:	mov	w3, #0x6666                	// #26214
  42ffd8:	movk	w3, #0x3f66, lsl #16
  42ffdc:	fmov	s0, w3
  42ffe0:	fcmpe	s1, s0
  42ffe4:	b.pl	430030 <argp_usage@@Base+0x2b50>  // b.nfrst
  42ffe8:	mov	w3, #0xcccd                	// #52429
  42ffec:	ldr	s3, [x1, #12]
  42fff0:	movk	w3, #0x3f8c, lsl #16
  42fff4:	fmov	s0, w3
  42fff8:	fcmpe	s3, s0
  42fffc:	b.le	430030 <argp_usage@@Base+0x2b50>
  430000:	ldr	s0, [x1]
  430004:	fcmpe	s0, #0.0
  430008:	b.lt	430030 <argp_usage@@Base+0x2b50>  // b.tstop
  43000c:	fadd	s0, s0, s2
  430010:	ldr	s2, [x1, #4]
  430014:	fcmpe	s0, s2
  430018:	b.pl	430030 <argp_usage@@Base+0x2b50>  // b.nfrst
  43001c:	fmov	s3, #1.000000000000000000e+00
  430020:	fcmpe	s2, s3
  430024:	b.hi	430030 <argp_usage@@Base+0x2b50>  // b.pmore
  430028:	fcmpe	s1, s0
  43002c:	b.gt	43003c <argp_usage@@Base+0x2b5c>
  430030:	str	x2, [x0]
  430034:	mov	w0, #0x0                   	// #0
  430038:	ret
  43003c:	mov	w0, #0x1                   	// #1
  430040:	b	430038 <argp_usage@@Base+0x2b58>
  430044:	stp	x29, x30, [sp, #-64]!
  430048:	mov	x29, sp
  43004c:	stp	x21, x22, [sp, #32]
  430050:	mov	x22, x1
  430054:	ldr	x21, [x1]
  430058:	stp	x19, x20, [sp, #16]
  43005c:	mov	x19, x0
  430060:	stp	x23, x24, [sp, #48]
  430064:	and	w23, w2, #0xff
  430068:	ldr	x0, [x22, #8]
  43006c:	cmp	x0, x21
  430070:	b.hi	43007c <argp_usage@@Base+0x2b9c>  // b.pmore
  430074:	mov	w23, #0x1                   	// #1
  430078:	b	430144 <argp_usage@@Base+0x2c64>
  43007c:	ldr	x0, [x21]
  430080:	cbz	x0, 4300dc <argp_usage@@Base+0x2bfc>
  430084:	ldr	x20, [x21, #8]
  430088:	cbnz	x20, 4300e4 <argp_usage@@Base+0x2c04>
  43008c:	str	xzr, [x21, #8]
  430090:	ldr	x24, [x21]
  430094:	cbnz	w23, 4300dc <argp_usage@@Base+0x2bfc>
  430098:	mov	x1, x24
  43009c:	mov	x0, x19
  4300a0:	bl	42fe84 <argp_usage@@Base+0x29a4>
  4300a4:	mov	x20, x0
  4300a8:	ldr	x0, [x0]
  4300ac:	cbz	x0, 43015c <argp_usage@@Base+0x2c7c>
  4300b0:	ldr	x0, [x19, #72]
  4300b4:	cbz	x0, 430138 <argp_usage@@Base+0x2c58>
  4300b8:	ldr	x1, [x0, #8]
  4300bc:	str	x1, [x19, #72]
  4300c0:	ldr	x1, [x20, #8]
  4300c4:	stp	x24, x1, [x0]
  4300c8:	str	x0, [x20, #8]
  4300cc:	ldr	x0, [x22, #24]
  4300d0:	str	xzr, [x21]
  4300d4:	sub	x0, x0, #0x1
  4300d8:	str	x0, [x22, #24]
  4300dc:	add	x21, x21, #0x10
  4300e0:	b	430068 <argp_usage@@Base+0x2b88>
  4300e4:	ldr	x24, [x20]
  4300e8:	mov	x0, x19
  4300ec:	mov	x1, x24
  4300f0:	bl	42fe84 <argp_usage@@Base+0x29a4>
  4300f4:	ldr	x2, [x0]
  4300f8:	ldr	x1, [x20, #8]
  4300fc:	cbz	x2, 430114 <argp_usage@@Base+0x2c34>
  430100:	ldr	x2, [x0, #8]
  430104:	str	x2, [x20, #8]
  430108:	str	x20, [x0, #8]
  43010c:	mov	x20, x1
  430110:	b	430088 <argp_usage@@Base+0x2ba8>
  430114:	str	x24, [x0]
  430118:	ldr	x0, [x19, #24]
  43011c:	add	x0, x0, #0x1
  430120:	str	x0, [x19, #24]
  430124:	str	xzr, [x20]
  430128:	ldr	x0, [x19, #72]
  43012c:	str	x0, [x20, #8]
  430130:	str	x20, [x19, #72]
  430134:	b	43010c <argp_usage@@Base+0x2c2c>
  430138:	mov	x0, #0x10                  	// #16
  43013c:	bl	4045f0 <malloc@plt>
  430140:	cbnz	x0, 4300c0 <argp_usage@@Base+0x2be0>
  430144:	mov	w0, w23
  430148:	ldp	x19, x20, [sp, #16]
  43014c:	ldp	x21, x22, [sp, #32]
  430150:	ldp	x23, x24, [sp, #48]
  430154:	ldp	x29, x30, [sp], #64
  430158:	ret
  43015c:	ldr	x0, [x19, #24]
  430160:	str	x24, [x20]
  430164:	add	x0, x0, #0x1
  430168:	str	x0, [x19, #24]
  43016c:	b	4300cc <argp_usage@@Base+0x2bec>
  430170:	ldr	x0, [x0, #16]
  430174:	ret
  430178:	ldr	x0, [x0, #24]
  43017c:	ret
  430180:	ldr	x0, [x0, #32]
  430184:	ret
  430188:	ldp	x1, x4, [x0]
  43018c:	mov	x0, #0x0                   	// #0
  430190:	cmp	x4, x1
  430194:	b.hi	43019c <argp_usage@@Base+0x2cbc>  // b.pmore
  430198:	ret
  43019c:	ldr	x2, [x1]
  4301a0:	cbz	x2, 4301c4 <argp_usage@@Base+0x2ce4>
  4301a4:	mov	x3, x1
  4301a8:	mov	x2, #0x1                   	// #1
  4301ac:	b	4301b4 <argp_usage@@Base+0x2cd4>
  4301b0:	add	x2, x2, #0x1
  4301b4:	ldr	x3, [x3, #8]
  4301b8:	cbnz	x3, 4301b0 <argp_usage@@Base+0x2cd0>
  4301bc:	cmp	x0, x2
  4301c0:	csel	x0, x0, x2, cs  // cs = hs, nlast
  4301c4:	add	x1, x1, #0x10
  4301c8:	b	430190 <argp_usage@@Base+0x2cb0>
  4301cc:	ldp	x2, x5, [x0]
  4301d0:	mov	x1, #0x0                   	// #0
  4301d4:	mov	x3, #0x0                   	// #0
  4301d8:	cmp	x5, x2
  4301dc:	b.hi	4301fc <argp_usage@@Base+0x2d1c>  // b.pmore
  4301e0:	ldr	x2, [x0, #24]
  4301e4:	cmp	x2, x3
  4301e8:	b.ne	430228 <argp_usage@@Base+0x2d48>  // b.any
  4301ec:	ldr	x0, [x0, #32]
  4301f0:	cmp	x0, x1
  4301f4:	cset	w0, eq  // eq = none
  4301f8:	ret
  4301fc:	ldr	x4, [x2]
  430200:	cbz	x4, 430218 <argp_usage@@Base+0x2d38>
  430204:	add	x3, x3, #0x1
  430208:	add	x1, x1, #0x1
  43020c:	mov	x4, x2
  430210:	ldr	x4, [x4, #8]
  430214:	cbnz	x4, 430220 <argp_usage@@Base+0x2d40>
  430218:	add	x2, x2, #0x10
  43021c:	b	4301d8 <argp_usage@@Base+0x2cf8>
  430220:	add	x1, x1, #0x1
  430224:	b	430210 <argp_usage@@Base+0x2d30>
  430228:	mov	w0, #0x0                   	// #0
  43022c:	b	4301f8 <argp_usage@@Base+0x2d18>
  430230:	stp	x29, x30, [sp, #-48]!
  430234:	mov	x5, x0
  430238:	mov	x29, sp
  43023c:	stp	x19, x20, [sp, #16]
  430240:	mov	x19, x1
  430244:	stp	x21, x22, [sp, #32]
  430248:	ldp	x20, x22, [x0, #16]
  43024c:	bl	430188 <argp_usage@@Base+0x2ca8>
  430250:	ldr	x3, [x5, #32]
  430254:	mov	x21, x0
  430258:	mov	w1, #0x1                   	// #1
  43025c:	mov	x0, x19
  430260:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  430264:	add	x2, x2, #0x4d8
  430268:	bl	404a20 <__fprintf_chk@plt>
  43026c:	mov	x3, x20
  430270:	mov	x0, x19
  430274:	mov	w1, #0x1                   	// #1
  430278:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  43027c:	add	x2, x2, #0x4f0
  430280:	bl	404a20 <__fprintf_chk@plt>
  430284:	ucvtf	d1, x22
  430288:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  43028c:	fmov	d0, x0
  430290:	mov	x3, x22
  430294:	mov	x0, x19
  430298:	mov	w1, #0x1                   	// #1
  43029c:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  4302a0:	add	x2, x2, #0x508
  4302a4:	fmul	d1, d1, d0
  4302a8:	ucvtf	d0, x20
  4302ac:	fdiv	d0, d1, d0
  4302b0:	bl	404a20 <__fprintf_chk@plt>
  4302b4:	mov	x3, x21
  4302b8:	mov	x0, x19
  4302bc:	ldp	x19, x20, [sp, #16]
  4302c0:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  4302c4:	ldp	x21, x22, [sp, #32]
  4302c8:	add	x2, x2, #0x529
  4302cc:	ldp	x29, x30, [sp], #48
  4302d0:	mov	w1, #0x1                   	// #1
  4302d4:	b	404a20 <__fprintf_chk@plt>
  4302d8:	stp	x29, x30, [sp, #-48]!
  4302dc:	mov	x29, sp
  4302e0:	stp	x19, x20, [sp, #16]
  4302e4:	mov	x20, x1
  4302e8:	str	x21, [sp, #32]
  4302ec:	mov	x21, x0
  4302f0:	bl	42fe84 <argp_usage@@Base+0x29a4>
  4302f4:	mov	x19, x0
  4302f8:	ldr	x0, [x0]
  4302fc:	cbz	x0, 43033c <argp_usage@@Base+0x2e5c>
  430300:	ldr	x1, [x19]
  430304:	cmp	x1, x20
  430308:	b.ne	430320 <argp_usage@@Base+0x2e40>  // b.any
  43030c:	ldr	x0, [x19]
  430310:	ldp	x19, x20, [sp, #16]
  430314:	ldr	x21, [sp, #32]
  430318:	ldp	x29, x30, [sp], #48
  43031c:	ret
  430320:	ldr	x2, [x21, #56]
  430324:	mov	x0, x20
  430328:	blr	x2
  43032c:	tst	w0, #0xff
  430330:	b.ne	43030c <argp_usage@@Base+0x2e2c>  // b.any
  430334:	ldr	x19, [x19, #8]
  430338:	cbnz	x19, 430300 <argp_usage@@Base+0x2e20>
  43033c:	mov	x0, #0x0                   	// #0
  430340:	b	430310 <argp_usage@@Base+0x2e30>
  430344:	ldr	x1, [x0, #32]
  430348:	cbz	x1, 430374 <argp_usage@@Base+0x2e94>
  43034c:	ldp	x1, x2, [x0]
  430350:	cmp	x2, x1
  430354:	b.hi	430364 <argp_usage@@Base+0x2e84>  // b.pmore
  430358:	stp	x29, x30, [sp, #-16]!
  43035c:	mov	x29, sp
  430360:	bl	404970 <abort@plt>
  430364:	ldr	x0, [x1]
  430368:	cbnz	x0, 430378 <argp_usage@@Base+0x2e98>
  43036c:	add	x1, x1, #0x10
  430370:	b	430350 <argp_usage@@Base+0x2e70>
  430374:	mov	x0, #0x0                   	// #0
  430378:	ret
  43037c:	stp	x29, x30, [sp, #-32]!
  430380:	mov	x29, sp
  430384:	stp	x19, x20, [sp, #16]
  430388:	mov	x19, x0
  43038c:	mov	x20, x1
  430390:	bl	42fe84 <argp_usage@@Base+0x29a4>
  430394:	mov	x2, x0
  430398:	mov	x3, x0
  43039c:	ldp	x0, x3, [x3]
  4303a0:	cmp	x0, x20
  4303a4:	b.ne	4303bc <argp_usage@@Base+0x2edc>  // b.any
  4303a8:	cbz	x3, 4303c0 <argp_usage@@Base+0x2ee0>
  4303ac:	ldr	x0, [x3]
  4303b0:	ldp	x19, x20, [sp, #16]
  4303b4:	ldp	x29, x30, [sp], #32
  4303b8:	ret
  4303bc:	cbnz	x3, 43039c <argp_usage@@Base+0x2ebc>
  4303c0:	ldr	x1, [x19, #8]
  4303c4:	add	x2, x2, #0x10
  4303c8:	cmp	x1, x2
  4303cc:	b.hi	4303d8 <argp_usage@@Base+0x2ef8>  // b.pmore
  4303d0:	mov	x0, #0x0                   	// #0
  4303d4:	b	4303b0 <argp_usage@@Base+0x2ed0>
  4303d8:	ldr	x0, [x2]
  4303dc:	cbz	x0, 4303c4 <argp_usage@@Base+0x2ee4>
  4303e0:	b	4303b0 <argp_usage@@Base+0x2ed0>
  4303e4:	mov	x4, x0
  4303e8:	sub	x1, x1, #0x8
  4303ec:	mov	x0, #0x0                   	// #0
  4303f0:	ldr	x3, [x4]
  4303f4:	ldr	x5, [x4, #8]
  4303f8:	cmp	x5, x3
  4303fc:	b.hi	430404 <argp_usage@@Base+0x2f24>  // b.pmore
  430400:	ret
  430404:	ldr	x5, [x3]
  430408:	cbz	x5, 43042c <argp_usage@@Base+0x2f4c>
  43040c:	mov	x5, x3
  430410:	cmp	x2, x0
  430414:	b.ls	430400 <argp_usage@@Base+0x2f20>  // b.plast
  430418:	add	x0, x0, #0x1
  43041c:	ldr	x6, [x5]
  430420:	str	x6, [x1, x0, lsl #3]
  430424:	ldr	x5, [x5, #8]
  430428:	cbnz	x5, 430410 <argp_usage@@Base+0x2f30>
  43042c:	add	x3, x3, #0x10
  430430:	b	4303f4 <argp_usage@@Base+0x2f14>
  430434:	stp	x29, x30, [sp, #-64]!
  430438:	mov	x29, sp
  43043c:	stp	x19, x20, [sp, #16]
  430440:	mov	x20, x0
  430444:	ldr	x19, [x0]
  430448:	stp	x23, x24, [sp, #48]
  43044c:	mov	x23, x1
  430450:	mov	x24, x2
  430454:	stp	x21, x22, [sp, #32]
  430458:	mov	x22, #0x0                   	// #0
  43045c:	ldr	x0, [x20, #8]
  430460:	cmp	x0, x19
  430464:	b.hi	430480 <argp_usage@@Base+0x2fa0>  // b.pmore
  430468:	mov	x0, x22
  43046c:	ldp	x19, x20, [sp, #16]
  430470:	ldp	x21, x22, [sp, #32]
  430474:	ldp	x23, x24, [sp, #48]
  430478:	ldp	x29, x30, [sp], #64
  43047c:	ret
  430480:	ldr	x0, [x19]
  430484:	cbz	x0, 4304ac <argp_usage@@Base+0x2fcc>
  430488:	mov	x21, x19
  43048c:	ldr	x0, [x21]
  430490:	mov	x1, x24
  430494:	blr	x23
  430498:	tst	w0, #0xff
  43049c:	b.eq	430468 <argp_usage@@Base+0x2f88>  // b.none
  4304a0:	ldr	x21, [x21, #8]
  4304a4:	add	x22, x22, #0x1
  4304a8:	cbnz	x21, 43048c <argp_usage@@Base+0x2fac>
  4304ac:	add	x19, x19, #0x10
  4304b0:	b	43045c <argp_usage@@Base+0x2f7c>
  4304b4:	mov	x3, x0
  4304b8:	mov	x4, #0x1f                  	// #31
  4304bc:	mov	x0, #0x0                   	// #0
  4304c0:	ldrb	w2, [x3]
  4304c4:	cbnz	w2, 4304cc <argp_usage@@Base+0x2fec>
  4304c8:	ret
  4304cc:	and	x2, x2, #0xff
  4304d0:	add	x3, x3, #0x1
  4304d4:	madd	x2, x0, x4, x2
  4304d8:	udiv	x0, x2, x1
  4304dc:	msub	x0, x0, x1, x2
  4304e0:	b	4304c0 <argp_usage@@Base+0x2fe0>
  4304e4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4304e8:	add	x1, x1, #0x548
  4304ec:	ldp	x2, x3, [x1]
  4304f0:	stp	x2, x3, [x0]
  4304f4:	ldr	w1, [x1, #16]
  4304f8:	str	w1, [x0, #16]
  4304fc:	ret
  430500:	stp	x29, x30, [sp, #-64]!
  430504:	mov	x29, sp
  430508:	stp	x19, x20, [sp, #16]
  43050c:	mov	x20, x1
  430510:	stp	x21, x22, [sp, #32]
  430514:	mov	x21, x3
  430518:	stp	x23, x24, [sp, #48]
  43051c:	mov	x24, x0
  430520:	mov	x23, x4
  430524:	cbnz	x2, 4305c0 <argp_usage@@Base+0x30e0>
  430528:	adrp	x22, 42f000 <argp_usage@@Base+0x1b20>
  43052c:	add	x22, x22, #0xdd4
  430530:	cbnz	x21, 43053c <argp_usage@@Base+0x305c>
  430534:	adrp	x21, 42f000 <argp_usage@@Base+0x1b20>
  430538:	add	x21, x21, #0xde4
  43053c:	mov	x0, #0x50                  	// #80
  430540:	bl	4045f0 <malloc@plt>
  430544:	mov	x19, x0
  430548:	cbz	x0, 4305a8 <argp_usage@@Base+0x30c8>
  43054c:	cbnz	x20, 430558 <argp_usage@@Base+0x3078>
  430550:	adrp	x20, 44e000 <_obstack_memory_used@@Base+0x16380>
  430554:	add	x20, x20, #0x548
  430558:	mov	x0, x19
  43055c:	str	x20, [x0, #40]!
  430560:	bl	42ffac <argp_usage@@Base+0x2acc>
  430564:	tst	w0, #0xff
  430568:	b.eq	4305c8 <argp_usage@@Base+0x30e8>  // b.none
  43056c:	mov	x1, x20
  430570:	mov	x0, x24
  430574:	bl	42fdf0 <argp_usage@@Base+0x2910>
  430578:	str	x0, [x19, #16]
  43057c:	mov	x20, x0
  430580:	cbz	x0, 4305c8 <argp_usage@@Base+0x30e8>
  430584:	mov	x1, #0x10                  	// #16
  430588:	bl	4047a0 <calloc@plt>
  43058c:	str	x0, [x19]
  430590:	cbz	x0, 4305c8 <argp_usage@@Base+0x30e8>
  430594:	add	x20, x0, x20, lsl #4
  430598:	str	x20, [x19, #8]
  43059c:	stp	xzr, xzr, [x19, #24]
  4305a0:	stp	x22, x21, [x19, #48]
  4305a4:	stp	x23, xzr, [x19, #64]
  4305a8:	mov	x0, x19
  4305ac:	ldp	x19, x20, [sp, #16]
  4305b0:	ldp	x21, x22, [sp, #32]
  4305b4:	ldp	x23, x24, [sp, #48]
  4305b8:	ldp	x29, x30, [sp], #64
  4305bc:	ret
  4305c0:	mov	x22, x2
  4305c4:	b	430530 <argp_usage@@Base+0x3050>
  4305c8:	mov	x0, x19
  4305cc:	mov	x19, #0x0                   	// #0
  4305d0:	bl	404ae0 <free@plt>
  4305d4:	b	4305a8 <argp_usage@@Base+0x30c8>
  4305d8:	stp	x29, x30, [sp, #-48]!
  4305dc:	mov	x29, sp
  4305e0:	stp	x19, x20, [sp, #16]
  4305e4:	mov	x19, x0
  4305e8:	ldr	x20, [x0]
  4305ec:	str	x21, [sp, #32]
  4305f0:	ldr	x0, [x19, #8]
  4305f4:	cmp	x0, x20
  4305f8:	b.hi	430610 <argp_usage@@Base+0x3130>  // b.pmore
  4305fc:	ldr	x21, [sp, #32]
  430600:	stp	xzr, xzr, [x19, #24]
  430604:	ldp	x19, x20, [sp, #16]
  430608:	ldp	x29, x30, [sp], #48
  43060c:	ret
  430610:	ldr	x0, [x20]
  430614:	cbz	x0, 430634 <argp_usage@@Base+0x3154>
  430618:	ldr	x21, [x20, #8]
  43061c:	ldr	x1, [x19, #64]
  430620:	cbnz	x21, 43063c <argp_usage@@Base+0x315c>
  430624:	cbz	x1, 430630 <argp_usage@@Base+0x3150>
  430628:	ldr	x0, [x20]
  43062c:	blr	x1
  430630:	stp	xzr, xzr, [x20]
  430634:	add	x20, x20, #0x10
  430638:	b	4305f0 <argp_usage@@Base+0x3110>
  43063c:	cbz	x1, 430648 <argp_usage@@Base+0x3168>
  430640:	ldr	x0, [x21]
  430644:	blr	x1
  430648:	ldr	x0, [x21, #8]
  43064c:	ldr	x1, [x19, #72]
  430650:	stp	xzr, x1, [x21]
  430654:	str	x21, [x19, #72]
  430658:	mov	x21, x0
  43065c:	b	43061c <argp_usage@@Base+0x313c>
  430660:	stp	x29, x30, [sp, #-48]!
  430664:	mov	x29, sp
  430668:	stp	x19, x20, [sp, #16]
  43066c:	mov	x19, x0
  430670:	ldr	x0, [x0, #64]
  430674:	str	x21, [sp, #32]
  430678:	cbnz	x0, 4306b0 <argp_usage@@Base+0x31d0>
  43067c:	ldr	x20, [x19]
  430680:	ldr	x0, [x19, #8]
  430684:	cmp	x0, x20
  430688:	b.hi	4306f4 <argp_usage@@Base+0x3214>  // b.pmore
  43068c:	ldr	x0, [x19, #72]
  430690:	cbnz	x0, 430714 <argp_usage@@Base+0x3234>
  430694:	ldr	x0, [x19]
  430698:	bl	404ae0 <free@plt>
  43069c:	mov	x0, x19
  4306a0:	ldp	x19, x20, [sp, #16]
  4306a4:	ldr	x21, [sp, #32]
  4306a8:	ldp	x29, x30, [sp], #48
  4306ac:	b	404ae0 <free@plt>
  4306b0:	ldr	x0, [x19, #32]
  4306b4:	cbz	x0, 43067c <argp_usage@@Base+0x319c>
  4306b8:	ldr	x20, [x19]
  4306bc:	ldr	x0, [x19, #8]
  4306c0:	cmp	x0, x20
  4306c4:	b.ls	43067c <argp_usage@@Base+0x319c>  // b.plast
  4306c8:	ldr	x0, [x20]
  4306cc:	cbnz	x0, 4306d8 <argp_usage@@Base+0x31f8>
  4306d0:	add	x20, x20, #0x10
  4306d4:	b	4306bc <argp_usage@@Base+0x31dc>
  4306d8:	mov	x21, x20
  4306dc:	ldr	x0, [x21]
  4306e0:	ldr	x1, [x19, #64]
  4306e4:	blr	x1
  4306e8:	ldr	x21, [x21, #8]
  4306ec:	cbnz	x21, 4306dc <argp_usage@@Base+0x31fc>
  4306f0:	b	4306d0 <argp_usage@@Base+0x31f0>
  4306f4:	ldr	x0, [x20, #8]
  4306f8:	cbnz	x0, 430704 <argp_usage@@Base+0x3224>
  4306fc:	add	x20, x20, #0x10
  430700:	b	430680 <argp_usage@@Base+0x31a0>
  430704:	ldr	x21, [x0, #8]
  430708:	bl	404ae0 <free@plt>
  43070c:	mov	x0, x21
  430710:	b	4306f8 <argp_usage@@Base+0x3218>
  430714:	ldr	x20, [x0, #8]
  430718:	bl	404ae0 <free@plt>
  43071c:	mov	x0, x20
  430720:	b	430690 <argp_usage@@Base+0x31b0>
  430724:	stp	x29, x30, [sp, #-128]!
  430728:	mov	x29, sp
  43072c:	stp	x19, x20, [sp, #16]
  430730:	mov	x19, x0
  430734:	mov	x0, x1
  430738:	str	x21, [sp, #32]
  43073c:	ldr	x21, [x19, #40]
  430740:	mov	x1, x21
  430744:	bl	42fdf0 <argp_usage@@Base+0x2910>
  430748:	cbnz	x0, 430764 <argp_usage@@Base+0x3284>
  43074c:	mov	w20, #0x0                   	// #0
  430750:	mov	w0, w20
  430754:	ldp	x19, x20, [sp, #16]
  430758:	ldr	x21, [sp, #32]
  43075c:	ldp	x29, x30, [sp], #128
  430760:	ret
  430764:	ldr	x1, [x19, #16]
  430768:	mov	x20, x0
  43076c:	cmp	x1, x0
  430770:	b.eq	430848 <argp_usage@@Base+0x3368>  // b.none
  430774:	mov	x1, #0x10                  	// #16
  430778:	bl	4047a0 <calloc@plt>
  43077c:	str	x0, [sp, #48]
  430780:	cbz	x0, 43074c <argp_usage@@Base+0x326c>
  430784:	stp	x20, xzr, [sp, #64]
  430788:	add	x20, x0, x20, lsl #4
  43078c:	mov	x1, x19
  430790:	ldr	x0, [x19, #48]
  430794:	str	x0, [sp, #96]
  430798:	ldr	x0, [x19, #56]
  43079c:	str	x0, [sp, #104]
  4307a0:	ldr	x0, [x19, #64]
  4307a4:	str	x0, [sp, #112]
  4307a8:	ldr	x0, [x19, #72]
  4307ac:	mov	w2, #0x0                   	// #0
  4307b0:	str	x20, [sp, #56]
  4307b4:	stp	xzr, x21, [sp, #80]
  4307b8:	str	x0, [sp, #120]
  4307bc:	add	x0, sp, #0x30
  4307c0:	bl	430044 <argp_usage@@Base+0x2b64>
  4307c4:	ands	w20, w0, #0xff
  4307c8:	b.eq	430800 <argp_usage@@Base+0x3320>  // b.none
  4307cc:	ldr	x0, [x19]
  4307d0:	bl	404ae0 <free@plt>
  4307d4:	ldr	x0, [sp, #48]
  4307d8:	str	x0, [x19]
  4307dc:	ldr	x0, [sp, #56]
  4307e0:	str	x0, [x19, #8]
  4307e4:	ldr	x0, [sp, #64]
  4307e8:	str	x0, [x19, #16]
  4307ec:	ldr	x0, [sp, #72]
  4307f0:	str	x0, [x19, #24]
  4307f4:	ldr	x0, [sp, #120]
  4307f8:	str	x0, [x19, #72]
  4307fc:	b	430750 <argp_usage@@Base+0x3270>
  430800:	ldr	x0, [sp, #120]
  430804:	str	x0, [x19, #72]
  430808:	add	x1, sp, #0x30
  43080c:	mov	x0, x19
  430810:	mov	w2, #0x1                   	// #1
  430814:	bl	430044 <argp_usage@@Base+0x2b64>
  430818:	tst	w0, #0xff
  43081c:	b.ne	430824 <argp_usage@@Base+0x3344>  // b.any
  430820:	bl	404970 <abort@plt>
  430824:	add	x1, sp, #0x30
  430828:	mov	x0, x19
  43082c:	mov	w2, #0x0                   	// #0
  430830:	bl	430044 <argp_usage@@Base+0x2b64>
  430834:	tst	w0, #0xff
  430838:	b.eq	430820 <argp_usage@@Base+0x3340>  // b.none
  43083c:	ldr	x0, [sp, #48]
  430840:	bl	404ae0 <free@plt>
  430844:	b	430750 <argp_usage@@Base+0x3270>
  430848:	mov	w20, #0x1                   	// #1
  43084c:	b	430750 <argp_usage@@Base+0x3270>
  430850:	stp	x29, x30, [sp, #-64]!
  430854:	mov	x29, sp
  430858:	stp	x19, x20, [sp, #16]
  43085c:	str	x21, [sp, #32]
  430860:	cbnz	x1, 430868 <argp_usage@@Base+0x3388>
  430864:	bl	404970 <abort@plt>
  430868:	mov	x21, x2
  43086c:	mov	x19, x0
  430870:	mov	x20, x1
  430874:	add	x2, sp, #0x38
  430878:	mov	w3, #0x0                   	// #0
  43087c:	bl	42fec8 <argp_usage@@Base+0x29e8>
  430880:	cbz	x0, 430894 <argp_usage@@Base+0x33b4>
  430884:	cbz	x21, 43088c <argp_usage@@Base+0x33ac>
  430888:	str	x0, [x21]
  43088c:	mov	w0, #0x0                   	// #0
  430890:	b	43090c <argp_usage@@Base+0x342c>
  430894:	ldr	x0, [x19, #24]
  430898:	ldr	x1, [x19, #40]
  43089c:	ucvtf	s1, x0
  4308a0:	ldr	x0, [x19, #16]
  4308a4:	ldr	s2, [x1, #8]
  4308a8:	ucvtf	s0, x0
  4308ac:	fmul	s0, s0, s2
  4308b0:	fcmpe	s1, s0
  4308b4:	b.le	430948 <argp_usage@@Base+0x3468>
  4308b8:	add	x0, x19, #0x28
  4308bc:	bl	42ffac <argp_usage@@Base+0x2acc>
  4308c0:	ldr	x0, [x19, #16]
  4308c4:	ldr	x1, [x19, #40]
  4308c8:	ucvtf	s0, x0
  4308cc:	ldr	x0, [x19, #24]
  4308d0:	ldr	s2, [x1, #8]
  4308d4:	ucvtf	s1, x0
  4308d8:	fmul	s3, s2, s0
  4308dc:	fcmpe	s1, s3
  4308e0:	b.le	430948 <argp_usage@@Base+0x3468>
  4308e4:	ldrb	w0, [x1, #16]
  4308e8:	ldr	s1, [x1, #12]
  4308ec:	fmul	s0, s0, s1
  4308f0:	cbnz	w0, 4308f8 <argp_usage@@Base+0x3418>
  4308f4:	fmul	s0, s0, s2
  4308f8:	mov	w0, #0x5f800000            	// #1602224128
  4308fc:	fmov	s1, w0
  430900:	fcmpe	s0, s1
  430904:	b.lt	43091c <argp_usage@@Base+0x343c>  // b.tstop
  430908:	mov	w0, #0xffffffff            	// #-1
  43090c:	ldp	x19, x20, [sp, #16]
  430910:	ldr	x21, [sp, #32]
  430914:	ldp	x29, x30, [sp], #64
  430918:	ret
  43091c:	fcvtzu	x1, s0
  430920:	mov	x0, x19
  430924:	bl	430724 <argp_usage@@Base+0x3244>
  430928:	tst	w0, #0xff
  43092c:	b.eq	430908 <argp_usage@@Base+0x3428>  // b.none
  430930:	add	x2, sp, #0x38
  430934:	mov	x1, x20
  430938:	mov	x0, x19
  43093c:	mov	w3, #0x0                   	// #0
  430940:	bl	42fec8 <argp_usage@@Base+0x29e8>
  430944:	cbnz	x0, 430864 <argp_usage@@Base+0x3384>
  430948:	ldr	x21, [sp, #56]
  43094c:	ldr	x0, [x21]
  430950:	cbz	x0, 430994 <argp_usage@@Base+0x34b4>
  430954:	ldr	x0, [x19, #72]
  430958:	cbz	x0, 430984 <argp_usage@@Base+0x34a4>
  43095c:	ldr	x1, [x0, #8]
  430960:	str	x1, [x19, #72]
  430964:	ldr	x1, [x21, #8]
  430968:	stp	x20, x1, [x0]
  43096c:	str	x0, [x21, #8]
  430970:	ldr	x0, [x19, #32]
  430974:	add	x0, x0, #0x1
  430978:	str	x0, [x19, #32]
  43097c:	mov	w0, #0x1                   	// #1
  430980:	b	43090c <argp_usage@@Base+0x342c>
  430984:	mov	x0, #0x10                  	// #16
  430988:	bl	4045f0 <malloc@plt>
  43098c:	cbz	x0, 430908 <argp_usage@@Base+0x3428>
  430990:	b	430964 <argp_usage@@Base+0x3484>
  430994:	ldr	x0, [x19, #32]
  430998:	str	x20, [x21]
  43099c:	add	x0, x0, #0x1
  4309a0:	str	x0, [x19, #32]
  4309a4:	ldr	x0, [x19, #24]
  4309a8:	add	x0, x0, #0x1
  4309ac:	str	x0, [x19, #24]
  4309b0:	b	43097c <argp_usage@@Base+0x349c>
  4309b4:	stp	x29, x30, [sp, #-48]!
  4309b8:	mov	x29, sp
  4309bc:	add	x2, sp, #0x28
  4309c0:	str	x19, [sp, #16]
  4309c4:	mov	x19, x1
  4309c8:	bl	430850 <argp_usage@@Base+0x3370>
  4309cc:	cmn	w0, #0x1
  4309d0:	b.eq	4309ec <argp_usage@@Base+0x350c>  // b.none
  4309d4:	cbnz	w0, 4309dc <argp_usage@@Base+0x34fc>
  4309d8:	ldr	x19, [sp, #40]
  4309dc:	mov	x0, x19
  4309e0:	ldr	x19, [sp, #16]
  4309e4:	ldp	x29, x30, [sp], #48
  4309e8:	ret
  4309ec:	mov	x19, #0x0                   	// #0
  4309f0:	b	4309dc <argp_usage@@Base+0x34fc>
  4309f4:	stp	x29, x30, [sp, #-64]!
  4309f8:	mov	w3, #0x1                   	// #1
  4309fc:	mov	x29, sp
  430a00:	add	x2, sp, #0x38
  430a04:	stp	x19, x20, [sp, #16]
  430a08:	mov	x19, x0
  430a0c:	str	x21, [sp, #32]
  430a10:	bl	42fec8 <argp_usage@@Base+0x29e8>
  430a14:	mov	x20, x0
  430a18:	cbz	x0, 430abc <argp_usage@@Base+0x35dc>
  430a1c:	ldr	x0, [x19, #32]
  430a20:	sub	x0, x0, #0x1
  430a24:	str	x0, [x19, #32]
  430a28:	ldr	x0, [sp, #56]
  430a2c:	ldr	x0, [x0]
  430a30:	cbnz	x0, 430abc <argp_usage@@Base+0x35dc>
  430a34:	ldr	x1, [x19, #24]
  430a38:	ldr	x0, [x19, #40]
  430a3c:	sub	x1, x1, #0x1
  430a40:	ucvtf	s0, x1
  430a44:	ldr	s2, [x0]
  430a48:	str	x1, [x19, #24]
  430a4c:	ldr	x1, [x19, #16]
  430a50:	ucvtf	s1, x1
  430a54:	fmul	s1, s1, s2
  430a58:	fcmpe	s0, s1
  430a5c:	b.pl	430abc <argp_usage@@Base+0x35dc>  // b.nfrst
  430a60:	add	x0, x19, #0x28
  430a64:	bl	42ffac <argp_usage@@Base+0x2acc>
  430a68:	ldr	x1, [x19, #16]
  430a6c:	ldr	x0, [x19, #40]
  430a70:	ucvtf	s0, x1
  430a74:	ldr	x1, [x19, #24]
  430a78:	ldr	s1, [x0]
  430a7c:	ucvtf	s2, x1
  430a80:	fmul	s1, s0, s1
  430a84:	fcmpe	s2, s1
  430a88:	b.pl	430abc <argp_usage@@Base+0x35dc>  // b.nfrst
  430a8c:	ldrb	w1, [x0, #16]
  430a90:	ldr	s1, [x0, #4]
  430a94:	fmul	s0, s0, s1
  430a98:	cbz	w1, 430ad0 <argp_usage@@Base+0x35f0>
  430a9c:	fcvtzu	x1, s0
  430aa0:	mov	x0, x19
  430aa4:	bl	430724 <argp_usage@@Base+0x3244>
  430aa8:	tst	w0, #0xff
  430aac:	b.ne	430abc <argp_usage@@Base+0x35dc>  // b.any
  430ab0:	ldr	x0, [x19, #72]
  430ab4:	cbnz	x0, 430adc <argp_usage@@Base+0x35fc>
  430ab8:	str	xzr, [x19, #72]
  430abc:	mov	x0, x20
  430ac0:	ldp	x19, x20, [sp, #16]
  430ac4:	ldr	x21, [sp, #32]
  430ac8:	ldp	x29, x30, [sp], #64
  430acc:	ret
  430ad0:	ldr	s1, [x0, #8]
  430ad4:	fmul	s0, s0, s1
  430ad8:	b	430a9c <argp_usage@@Base+0x35bc>
  430adc:	ldr	x21, [x0, #8]
  430ae0:	bl	404ae0 <free@plt>
  430ae4:	mov	x0, x21
  430ae8:	b	430ab4 <argp_usage@@Base+0x35d4>
  430aec:	cmp	w0, #0x1
  430af0:	b.eq	430b6c <argp_usage@@Base+0x368c>  // b.none
  430af4:	stp	x29, x30, [sp, #-48]!
  430af8:	mov	x29, sp
  430afc:	stp	x19, x20, [sp, #16]
  430b00:	mov	w19, w0
  430b04:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  430b08:	add	x0, x0, #0x5c0
  430b0c:	str	q0, [sp, #32]
  430b10:	ldr	q1, [x0]
  430b14:	bl	445ff4 <_obstack_memory_used@@Base+0xe374>
  430b18:	ldr	q2, [sp, #32]
  430b1c:	tbz	w0, #31, 430b54 <argp_usage@@Base+0x3674>
  430b20:	mov	v0.16b, v2.16b
  430b24:	bl	44680c <_obstack_memory_used@@Base+0xeb8c>
  430b28:	mov	x20, x0
  430b2c:	cbnz	w19, 430b64 <argp_usage@@Base+0x3684>
  430b30:	bl	446918 <_obstack_memory_used@@Base+0xec98>
  430b34:	ldr	q2, [sp, #32]
  430b38:	mov	v1.16b, v2.16b
  430b3c:	bl	445ef4 <_obstack_memory_used@@Base+0xe274>
  430b40:	cmp	w0, #0x0
  430b44:	cset	w0, ne  // ne = any
  430b48:	add	x0, x20, w0, sxtw
  430b4c:	bl	446918 <_obstack_memory_used@@Base+0xec98>
  430b50:	mov	v2.16b, v0.16b
  430b54:	mov	v0.16b, v2.16b
  430b58:	ldp	x19, x20, [sp, #16]
  430b5c:	ldp	x29, x30, [sp], #48
  430b60:	ret
  430b64:	mov	w0, #0x0                   	// #0
  430b68:	b	430b48 <argp_usage@@Base+0x3668>
  430b6c:	ret
  430b70:	stp	x29, x30, [sp, #-224]!
  430b74:	mov	x29, sp
  430b78:	stp	x27, x28, [sp, #80]
  430b7c:	mov	x28, x0
  430b80:	ands	w0, w2, #0x20
  430b84:	str	w0, [sp, #116]
  430b88:	mov	x0, #0x3e8                 	// #1000
  430b8c:	stp	x19, x20, [sp, #16]
  430b90:	mov	x20, x1
  430b94:	stp	x21, x22, [sp, #32]
  430b98:	mov	w22, w2
  430b9c:	stp	x23, x24, [sp, #48]
  430ba0:	mov	x24, x4
  430ba4:	mov	x23, #0x400                 	// #1024
  430ba8:	csel	x23, x23, x0, ne  // ne = any
  430bac:	stp	x25, x26, [sp, #64]
  430bb0:	mov	x26, x3
  430bb4:	and	w25, w2, #0x3
  430bb8:	bl	4044d0 <localeconv@plt>
  430bbc:	ldr	x27, [x0]
  430bc0:	mov	x19, x0
  430bc4:	mov	x0, x27
  430bc8:	bl	404280 <strlen@plt>
  430bcc:	mov	x21, x0
  430bd0:	sub	x0, x0, #0x1
  430bd4:	cmp	x0, #0xf
  430bd8:	b.ls	430be8 <argp_usage@@Base+0x3708>  // b.plast
  430bdc:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  430be0:	add	x27, x1, #0xc29
  430be4:	mov	x21, #0x1                   	// #1
  430be8:	ldr	x0, [x19, #16]
  430bec:	str	x0, [sp, #120]
  430bf0:	ldr	x0, [x19, #8]
  430bf4:	str	x0, [sp, #104]
  430bf8:	bl	404280 <strlen@plt>
  430bfc:	cmp	x0, #0x10
  430c00:	b.ls	430c10 <argp_usage@@Base+0x3730>  // b.plast
  430c04:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  430c08:	add	x0, x0, #0x41a
  430c0c:	str	x0, [sp, #104]
  430c10:	add	x19, x20, #0x287
  430c14:	cmp	x24, x26
  430c18:	and	w7, w22, #0x10
  430c1c:	b.hi	430c48 <argp_usage@@Base+0x3768>  // b.pmore
  430c20:	udiv	x0, x26, x24
  430c24:	msub	x2, x0, x24, x26
  430c28:	cbnz	x2, 430cfc <argp_usage@@Base+0x381c>
  430c2c:	mul	x6, x28, x0
  430c30:	udiv	x0, x6, x0
  430c34:	cmp	x0, x28
  430c38:	b.ne	430cfc <argp_usage@@Base+0x381c>  // b.any
  430c3c:	mov	w0, #0x0                   	// #0
  430c40:	mov	w2, #0x0                   	// #0
  430c44:	b	430c84 <argp_usage@@Base+0x37a4>
  430c48:	cbz	x26, 430cfc <argp_usage@@Base+0x381c>
  430c4c:	udiv	x4, x24, x26
  430c50:	msub	x0, x4, x26, x24
  430c54:	cbnz	x0, 430cfc <argp_usage@@Base+0x381c>
  430c58:	udiv	x6, x28, x4
  430c5c:	mov	x0, #0xa                   	// #10
  430c60:	msub	x5, x6, x4, x28
  430c64:	mul	x5, x5, x0
  430c68:	udiv	x2, x5, x4
  430c6c:	msub	x5, x2, x4, x5
  430c70:	lsl	x5, x5, #1
  430c74:	cmp	x4, x5
  430c78:	b.ls	430cf0 <argp_usage@@Base+0x3810>  // b.plast
  430c7c:	cmp	x5, #0x0
  430c80:	cset	w0, ne  // ne = any
  430c84:	cbz	w7, 4310ac <argp_usage@@Base+0x3bcc>
  430c88:	mov	w9, w23
  430c8c:	cmp	x6, w23, uxtw
  430c90:	b.cc	4310b8 <argp_usage@@Base+0x3bd8>  // b.lo, b.ul, b.last
  430c94:	mov	w28, #0x0                   	// #0
  430c98:	mov	w10, #0xa                   	// #10
  430c9c:	udiv	x8, x6, x9
  430ca0:	asr	w3, w0, #1
  430ca4:	msub	x6, x8, x9, x6
  430ca8:	madd	w2, w10, w6, w2
  430cac:	mov	x6, x8
  430cb0:	udiv	w4, w2, w23
  430cb4:	msub	w2, w4, w23, w2
  430cb8:	add	w3, w3, w2, lsl #1
  430cbc:	mov	w2, w4
  430cc0:	add	w0, w0, w3
  430cc4:	cmp	w23, w3
  430cc8:	b.ls	430f70 <argp_usage@@Base+0x3a90>  // b.plast
  430ccc:	cmp	w0, #0x0
  430cd0:	cset	w0, ne  // ne = any
  430cd4:	add	w28, w28, #0x1
  430cd8:	cmp	x9, x8
  430cdc:	b.hi	430f80 <argp_usage@@Base+0x3aa0>  // b.pmore
  430ce0:	cmp	w28, #0x8
  430ce4:	b.ne	430c9c <argp_usage@@Base+0x37bc>  // b.any
  430ce8:	mov	x26, x19
  430cec:	b	431000 <argp_usage@@Base+0x3b20>
  430cf0:	cset	w0, cc  // cc = lo, ul, last
  430cf4:	add	w0, w0, #0x2
  430cf8:	b	430c84 <argp_usage@@Base+0x37a4>
  430cfc:	mov	x0, x26
  430d00:	str	w7, [sp, #144]
  430d04:	bl	446918 <_obstack_memory_used@@Base+0xec98>
  430d08:	str	q0, [sp, #128]
  430d0c:	mov	x0, x24
  430d10:	bl	446918 <_obstack_memory_used@@Base+0xec98>
  430d14:	ldr	q2, [sp, #128]
  430d18:	mov	v1.16b, v0.16b
  430d1c:	mov	v0.16b, v2.16b
  430d20:	bl	445744 <_obstack_memory_used@@Base+0xdac4>
  430d24:	mov	x0, x28
  430d28:	str	q0, [sp, #128]
  430d2c:	bl	446918 <_obstack_memory_used@@Base+0xec98>
  430d30:	mov	v1.16b, v0.16b
  430d34:	ldr	q2, [sp, #128]
  430d38:	mov	v0.16b, v2.16b
  430d3c:	bl	446134 <_obstack_memory_used@@Base+0xe4b4>
  430d40:	ldr	w7, [sp, #144]
  430d44:	mov	v4.16b, v0.16b
  430d48:	cbnz	w7, 430e30 <argp_usage@@Base+0x3950>
  430d4c:	mov	w0, w25
  430d50:	bl	430aec <argp_usage@@Base+0x360c>
  430d54:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  430d58:	add	x3, x3, #0x55c
  430d5c:	mov	x2, #0xffffffffffffffff    	// #-1
  430d60:	mov	w1, #0x1                   	// #1
  430d64:	mov	x0, x20
  430d68:	bl	4042a0 <__sprintf_chk@plt>
  430d6c:	mov	x0, x20
  430d70:	bl	404280 <strlen@plt>
  430d74:	mov	x26, x0
  430d78:	mov	x21, #0x0                   	// #0
  430d7c:	mov	w28, #0xffffffff            	// #-1
  430d80:	sub	x27, x19, x26
  430d84:	mov	x2, x26
  430d88:	mov	x1, x20
  430d8c:	mov	x0, x27
  430d90:	bl	404210 <memmove@plt>
  430d94:	sub	x2, x26, x21
  430d98:	add	x26, x27, x2
  430d9c:	tbz	w22, #2, 4310f4 <argp_usage@@Base+0x3c14>
  430da0:	ldr	x0, [sp, #104]
  430da4:	sub	x21, x26, x27
  430da8:	mov	x25, #0xffffffffffffffff    	// #-1
  430dac:	bl	404280 <strlen@plt>
  430db0:	str	x0, [sp, #128]
  430db4:	mov	x2, x21
  430db8:	mov	x1, x27
  430dbc:	add	x0, sp, #0xb0
  430dc0:	mov	x3, #0x29                  	// #41
  430dc4:	bl	404520 <__memcpy_chk@plt>
  430dc8:	ldr	x0, [sp, #120]
  430dcc:	ldrb	w0, [x0]
  430dd0:	cbz	w0, 430dec <argp_usage@@Base+0x390c>
  430dd4:	and	x25, x0, #0xff
  430dd8:	cmp	w0, #0xff
  430ddc:	ldr	x0, [sp, #120]
  430de0:	csel	x25, x25, x21, ne  // ne = any
  430de4:	add	x0, x0, #0x1
  430de8:	str	x0, [sp, #120]
  430dec:	cmp	x25, x21
  430df0:	add	x0, sp, #0xb0
  430df4:	csel	x25, x25, x21, ls  // ls = plast
  430df8:	sub	x21, x21, x25
  430dfc:	sub	x27, x26, x25
  430e00:	add	x1, x0, x21
  430e04:	mov	x2, x25
  430e08:	mov	x0, x27
  430e0c:	bl	404200 <memcpy@plt>
  430e10:	cbz	x21, 4310f4 <argp_usage@@Base+0x3c14>
  430e14:	ldr	x1, [sp, #104]
  430e18:	ldr	x0, [sp, #128]
  430e1c:	sub	x26, x27, x0
  430e20:	mov	x2, x0
  430e24:	mov	x0, x26
  430e28:	bl	404200 <memcpy@plt>
  430e2c:	b	430dc8 <argp_usage@@Base+0x38e8>
  430e30:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  430e34:	add	x0, x0, #0x5d0
  430e38:	mov	w28, #0x0                   	// #0
  430e3c:	ldr	q2, [x0]
  430e40:	mov	w0, w23
  430e44:	str	q2, [sp, #144]
  430e48:	str	q4, [sp, #160]
  430e4c:	bl	4467c0 <_obstack_memory_used@@Base+0xeb40>
  430e50:	ldr	q2, [sp, #144]
  430e54:	mov	v1.16b, v0.16b
  430e58:	str	q0, [sp, #128]
  430e5c:	add	w28, w28, #0x1
  430e60:	mov	v0.16b, v2.16b
  430e64:	bl	446134 <_obstack_memory_used@@Base+0xe4b4>
  430e68:	ldr	q6, [sp, #128]
  430e6c:	mov	v1.16b, v0.16b
  430e70:	str	q0, [sp, #144]
  430e74:	mov	v0.16b, v6.16b
  430e78:	bl	446134 <_obstack_memory_used@@Base+0xe4b4>
  430e7c:	ldr	q4, [sp, #160]
  430e80:	mov	v1.16b, v4.16b
  430e84:	str	q4, [sp, #128]
  430e88:	bl	445ff4 <_obstack_memory_used@@Base+0xe374>
  430e8c:	cmp	w0, #0x0
  430e90:	ldr	q4, [sp, #128]
  430e94:	ldr	q2, [sp, #144]
  430e98:	b.gt	430ea4 <argp_usage@@Base+0x39c4>
  430e9c:	cmp	w28, #0x8
  430ea0:	b.ne	430e40 <argp_usage@@Base+0x3960>  // b.any
  430ea4:	mov	v1.16b, v2.16b
  430ea8:	mov	v0.16b, v4.16b
  430eac:	bl	445744 <_obstack_memory_used@@Base+0xdac4>
  430eb0:	str	q0, [sp, #128]
  430eb4:	mov	w0, w25
  430eb8:	add	x21, x21, #0x1
  430ebc:	bl	430aec <argp_usage@@Base+0x360c>
  430ec0:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  430ec4:	add	x3, x3, #0x562
  430ec8:	mov	x2, #0xffffffffffffffff    	// #-1
  430ecc:	mov	w1, #0x1                   	// #1
  430ed0:	mov	x0, x20
  430ed4:	bl	4042a0 <__sprintf_chk@plt>
  430ed8:	mov	x0, x20
  430edc:	bl	404280 <strlen@plt>
  430ee0:	mov	x26, x0
  430ee4:	ldr	w0, [sp, #116]
  430ee8:	ldr	q2, [sp, #128]
  430eec:	cmp	w0, #0x0
  430ef0:	cset	x0, eq  // eq = none
  430ef4:	add	x0, x0, #0x1
  430ef8:	add	x0, x0, x21
  430efc:	cmp	x0, x26
  430f00:	b.cc	430f18 <argp_usage@@Base+0x3a38>  // b.lo, b.ul, b.last
  430f04:	tbz	w22, #3, 430d80 <argp_usage@@Base+0x38a0>
  430f08:	add	x0, x20, x26
  430f0c:	ldurb	w0, [x0, #-1]
  430f10:	cmp	w0, #0x30
  430f14:	b.ne	430d80 <argp_usage@@Base+0x38a0>  // b.any
  430f18:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  430f1c:	add	x0, x0, #0x5e0
  430f20:	mov	v0.16b, v2.16b
  430f24:	mov	x21, #0x0                   	// #0
  430f28:	ldr	q1, [x0]
  430f2c:	bl	446134 <_obstack_memory_used@@Base+0xe4b4>
  430f30:	mov	w0, w25
  430f34:	bl	430aec <argp_usage@@Base+0x360c>
  430f38:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  430f3c:	add	x0, x0, #0x5e0
  430f40:	ldr	q1, [x0]
  430f44:	bl	445744 <_obstack_memory_used@@Base+0xdac4>
  430f48:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  430f4c:	add	x3, x3, #0x55c
  430f50:	mov	x2, #0xffffffffffffffff    	// #-1
  430f54:	mov	w1, #0x1                   	// #1
  430f58:	mov	x0, x20
  430f5c:	bl	4042a0 <__sprintf_chk@plt>
  430f60:	mov	x0, x20
  430f64:	bl	404280 <strlen@plt>
  430f68:	mov	x26, x0
  430f6c:	b	430d80 <argp_usage@@Base+0x38a0>
  430f70:	cmp	w23, w0
  430f74:	cset	w0, cc  // cc = lo, ul, last
  430f78:	add	w0, w0, #0x2
  430f7c:	b	430cd4 <argp_usage@@Base+0x37f4>
  430f80:	cmp	x8, #0x9
  430f84:	b.hi	430ce8 <argp_usage@@Base+0x3808>  // b.pmore
  430f88:	cmp	w25, #0x1
  430f8c:	b.ne	431094 <argp_usage@@Base+0x3bb4>  // b.any
  430f90:	and	w3, w4, #0x1
  430f94:	add	w3, w3, w0
  430f98:	cmp	w3, #0x2
  430f9c:	cset	w3, gt
  430fa0:	cbz	w3, 4311b0 <argp_usage@@Base+0x3cd0>
  430fa4:	add	w2, w4, #0x1
  430fa8:	cmp	w4, #0x9
  430fac:	b.ne	430fc8 <argp_usage@@Base+0x3ae8>  // b.any
  430fb0:	add	x6, x8, #0x1
  430fb4:	cmp	x8, #0x9
  430fb8:	b.eq	4310c4 <argp_usage@@Base+0x3be4>  // b.none
  430fbc:	mov	w0, #0x0                   	// #0
  430fc0:	and	w2, w22, #0x8
  430fc4:	tbnz	w22, #3, 4310d4 <argp_usage@@Base+0x3bf4>
  430fc8:	add	x4, x20, #0x286
  430fcc:	add	w2, w2, #0x30
  430fd0:	strb	w2, [x20, #646]
  430fd4:	sub	x26, x4, x21
  430fd8:	mov	x2, x21
  430fdc:	mov	x1, x27
  430fe0:	mov	x0, x26
  430fe4:	str	x6, [sp, #128]
  430fe8:	str	w7, [sp, #144]
  430fec:	bl	404200 <memcpy@plt>
  430ff0:	ldr	w7, [sp, #144]
  430ff4:	mov	w0, #0x0                   	// #0
  430ff8:	ldr	x6, [sp, #128]
  430ffc:	mov	w2, #0x0                   	// #0
  431000:	cmp	w25, #0x1
  431004:	b.ne	4310dc <argp_usage@@Base+0x3bfc>  // b.any
  431008:	and	x3, x6, #0x1
  43100c:	add	x0, x3, w0, sxtw
  431010:	cmp	x0, #0x0
  431014:	cinc	w2, w2, ne  // ne = any
  431018:	cmp	w2, #0x5
  43101c:	cset	w0, gt
  431020:	cbz	w0, 431068 <argp_usage@@Base+0x3b88>
  431024:	add	x6, x6, #0x1
  431028:	cbz	w7, 431068 <argp_usage@@Base+0x3b88>
  43102c:	cmp	x6, w23, uxtw
  431030:	b.ne	431068 <argp_usage@@Base+0x3b88>  // b.any
  431034:	cmp	w28, #0x8
  431038:	b.eq	431068 <argp_usage@@Base+0x3b88>  // b.none
  43103c:	add	w28, w28, #0x1
  431040:	tbnz	w22, #3, 431064 <argp_usage@@Base+0x3b84>
  431044:	mov	w0, #0x30                  	// #48
  431048:	sturb	w0, [x26, #-1]
  43104c:	mvn	x0, x21
  431050:	mov	x2, x21
  431054:	add	x26, x26, x0
  431058:	mov	x1, x27
  43105c:	mov	x0, x26
  431060:	bl	404200 <memcpy@plt>
  431064:	mov	x6, #0x1                   	// #1
  431068:	mov	x27, x26
  43106c:	mov	x2, #0xa                   	// #10
  431070:	udiv	x1, x6, x2
  431074:	msub	x0, x1, x2, x6
  431078:	add	w0, w0, #0x30
  43107c:	strb	w0, [x27, #-1]!
  431080:	mov	x0, x6
  431084:	mov	x6, x1
  431088:	cmp	x0, #0x9
  43108c:	b.hi	431070 <argp_usage@@Base+0x3b90>  // b.pmore
  431090:	b	430d9c <argp_usage@@Base+0x38bc>
  431094:	cmp	w25, #0x0
  431098:	cset	w3, eq  // eq = none
  43109c:	cmp	w0, #0x0
  4310a0:	cset	w9, gt
  4310a4:	and	w3, w3, w9
  4310a8:	b	430fa0 <argp_usage@@Base+0x3ac0>
  4310ac:	mov	x26, x19
  4310b0:	mov	w28, #0xffffffff            	// #-1
  4310b4:	b	431000 <argp_usage@@Base+0x3b20>
  4310b8:	mov	x26, x19
  4310bc:	mov	w28, #0x0                   	// #0
  4310c0:	b	431000 <argp_usage@@Base+0x3b20>
  4310c4:	mov	x26, x19
  4310c8:	mov	w0, #0x0                   	// #0
  4310cc:	mov	w2, #0x0                   	// #0
  4310d0:	b	431000 <argp_usage@@Base+0x3b20>
  4310d4:	mov	x26, x19
  4310d8:	b	4310cc <argp_usage@@Base+0x3bec>
  4310dc:	cbnz	w25, 4310ec <argp_usage@@Base+0x3c0c>
  4310e0:	add	w0, w2, w0
  4310e4:	cmp	w0, #0x0
  4310e8:	b	43101c <argp_usage@@Base+0x3b3c>
  4310ec:	mov	w0, #0x0                   	// #0
  4310f0:	b	431020 <argp_usage@@Base+0x3b40>
  4310f4:	tbz	w22, #7, 431184 <argp_usage@@Base+0x3ca4>
  4310f8:	cmn	w28, #0x1
  4310fc:	b.ne	431124 <argp_usage@@Base+0x3c44>  // b.any
  431100:	mov	x0, #0x1                   	// #1
  431104:	mov	w28, #0x0                   	// #0
  431108:	b	43111c <argp_usage@@Base+0x3c3c>
  43110c:	add	w28, w28, #0x1
  431110:	cmp	w28, #0x8
  431114:	b.eq	431124 <argp_usage@@Base+0x3c44>  // b.none
  431118:	mul	x0, x0, x23
  43111c:	cmp	x0, x24
  431120:	b.cc	43110c <argp_usage@@Base+0x3c2c>  // b.lo, b.ul, b.last
  431124:	and	w1, w22, #0x100
  431128:	orr	w0, w1, w28
  43112c:	cbz	w0, 431184 <argp_usage@@Base+0x3ca4>
  431130:	tbz	w22, #6, 431140 <argp_usage@@Base+0x3c60>
  431134:	add	x19, x20, #0x288
  431138:	mov	w0, #0x20                  	// #32
  43113c:	strb	w0, [x20, #647]
  431140:	cbz	w28, 431164 <argp_usage@@Base+0x3c84>
  431144:	ldr	w0, [sp, #116]
  431148:	cbnz	w0, 431154 <argp_usage@@Base+0x3c74>
  43114c:	cmp	w28, #0x1
  431150:	b.eq	4311a8 <argp_usage@@Base+0x3cc8>  // b.none
  431154:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  431158:	add	x0, x0, #0x5f0
  43115c:	ldrb	w0, [x0, w28, sxtw]
  431160:	strb	w0, [x19], #1
  431164:	cbz	w1, 431184 <argp_usage@@Base+0x3ca4>
  431168:	ldr	w0, [sp, #116]
  43116c:	cbz	w0, 43117c <argp_usage@@Base+0x3c9c>
  431170:	cbz	w28, 43117c <argp_usage@@Base+0x3c9c>
  431174:	mov	w0, #0x69                  	// #105
  431178:	strb	w0, [x19], #1
  43117c:	mov	w0, #0x42                  	// #66
  431180:	strb	w0, [x19], #1
  431184:	strb	wzr, [x19]
  431188:	mov	x0, x27
  43118c:	ldp	x19, x20, [sp, #16]
  431190:	ldp	x21, x22, [sp, #32]
  431194:	ldp	x23, x24, [sp, #48]
  431198:	ldp	x25, x26, [sp, #64]
  43119c:	ldp	x27, x28, [sp, #80]
  4311a0:	ldp	x29, x30, [sp], #224
  4311a4:	ret
  4311a8:	mov	w0, #0x6b                  	// #107
  4311ac:	b	431160 <argp_usage@@Base+0x3c80>
  4311b0:	cbz	w4, 430fc0 <argp_usage@@Base+0x3ae0>
  4311b4:	b	430fc8 <argp_usage@@Base+0x3ae8>
  4311b8:	stp	x29, x30, [sp, #-80]!
  4311bc:	mov	x29, sp
  4311c0:	stp	x19, x20, [sp, #16]
  4311c4:	mov	x19, x0
  4311c8:	stp	x21, x22, [sp, #32]
  4311cc:	mov	x22, x1
  4311d0:	mov	x21, x2
  4311d4:	str	x23, [sp, #48]
  4311d8:	cbnz	x0, 431234 <argp_usage@@Base+0x3d54>
  4311dc:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  4311e0:	add	x0, x0, #0x568
  4311e4:	bl	404e40 <getenv@plt>
  4311e8:	mov	x19, x0
  4311ec:	cbnz	x0, 431234 <argp_usage@@Base+0x3d54>
  4311f0:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  4311f4:	add	x0, x0, #0x573
  4311f8:	bl	404e40 <getenv@plt>
  4311fc:	mov	x19, x0
  431200:	cbnz	x0, 431234 <argp_usage@@Base+0x3d54>
  431204:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  431208:	add	x0, x0, #0x57d
  43120c:	bl	404e40 <getenv@plt>
  431210:	cmp	x0, #0x0
  431214:	mov	x1, #0x400                 	// #1024
  431218:	mov	x0, #0x200                 	// #512
  43121c:	mov	w20, #0x0                   	// #0
  431220:	csel	x0, x0, x1, ne  // ne = any
  431224:	str	x0, [x21]
  431228:	mov	w0, #0x0                   	// #0
  43122c:	str	w20, [x22]
  431230:	b	4312e4 <argp_usage@@Base+0x3e04>
  431234:	ldrb	w0, [x19]
  431238:	cmp	w0, #0x27
  43123c:	b.ne	431280 <argp_usage@@Base+0x3da0>  // b.any
  431240:	add	x19, x19, #0x1
  431244:	mov	w20, #0x4                   	// #4
  431248:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  43124c:	add	x23, x0, #0x5f0
  431250:	add	x2, x23, #0xc
  431254:	add	x1, x23, #0x18
  431258:	mov	x0, x19
  43125c:	mov	x3, #0x4                   	// #4
  431260:	bl	42a0f4 <wcrtomb@plt+0x251a4>
  431264:	tbnz	w0, #31, 431288 <argp_usage@@Base+0x3da8>
  431268:	add	x0, x23, w0, sxtw #2
  43126c:	ldr	w0, [x0, #12]
  431270:	orr	w20, w20, w0
  431274:	mov	x0, #0x1                   	// #1
  431278:	str	x0, [x21]
  43127c:	b	431228 <argp_usage@@Base+0x3d48>
  431280:	mov	w20, #0x0                   	// #0
  431284:	b	431248 <argp_usage@@Base+0x3d68>
  431288:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x16380>
  43128c:	mov	x3, x21
  431290:	add	x4, x4, #0x58d
  431294:	add	x1, sp, #0x48
  431298:	mov	x0, x19
  43129c:	mov	w2, #0x0                   	// #0
  4312a0:	bl	436fdc <argp_usage@@Base+0x9afc>
  4312a4:	cbnz	w0, 4312e0 <argp_usage@@Base+0x3e00>
  4312a8:	ldr	x1, [sp, #72]
  4312ac:	ldrb	w0, [x19]
  4312b0:	sub	w0, w0, #0x30
  4312b4:	and	w0, w0, #0xff
  4312b8:	cmp	w0, #0x9
  4312bc:	b.ls	431228 <argp_usage@@Base+0x3d48>  // b.plast
  4312c0:	cmp	x1, x19
  4312c4:	b.ne	431338 <argp_usage@@Base+0x3e58>  // b.any
  4312c8:	ldurb	w0, [x1, #-1]
  4312cc:	cmp	w0, #0x42
  4312d0:	b.eq	431324 <argp_usage@@Base+0x3e44>  // b.none
  4312d4:	orr	w20, w20, #0x80
  4312d8:	orr	w20, w20, #0x20
  4312dc:	b	431228 <argp_usage@@Base+0x3d48>
  4312e0:	str	wzr, [x22]
  4312e4:	ldr	x1, [x21]
  4312e8:	cbnz	x1, 431310 <argp_usage@@Base+0x3e30>
  4312ec:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  4312f0:	add	x0, x0, #0x57d
  4312f4:	bl	404e40 <getenv@plt>
  4312f8:	cmp	x0, #0x0
  4312fc:	mov	x1, #0x400                 	// #1024
  431300:	mov	x0, #0x200                 	// #512
  431304:	csel	x0, x0, x1, ne  // ne = any
  431308:	str	x0, [x21]
  43130c:	mov	w0, #0x4                   	// #4
  431310:	ldp	x19, x20, [sp, #16]
  431314:	ldp	x21, x22, [sp, #32]
  431318:	ldr	x23, [sp, #48]
  43131c:	ldp	x29, x30, [sp], #80
  431320:	ret
  431324:	ldurb	w0, [x1, #-2]
  431328:	orr	w20, w20, #0x180
  43132c:	cmp	w0, #0x69
  431330:	b.ne	431228 <argp_usage@@Base+0x3d48>  // b.any
  431334:	b	4312d8 <argp_usage@@Base+0x3df8>
  431338:	add	x19, x19, #0x1
  43133c:	b	4312ac <argp_usage@@Base+0x3dcc>
  431340:	strb	wzr, [x1, #20]
  431344:	mov	x2, x0
  431348:	mov	x3, #0xa                   	// #10
  43134c:	add	x0, x1, #0x14
  431350:	tbnz	x2, #63, 431370 <argp_usage@@Base+0x3e90>
  431354:	udiv	x1, x2, x3
  431358:	msub	x2, x1, x3, x2
  43135c:	add	w2, w2, #0x30
  431360:	strb	w2, [x0, #-1]!
  431364:	mov	x2, x1
  431368:	cbnz	x1, 431354 <argp_usage@@Base+0x3e74>
  43136c:	b	43139c <argp_usage@@Base+0x3ebc>
  431370:	mov	w5, #0x30                  	// #48
  431374:	sdiv	x1, x2, x3
  431378:	mov	x4, x0
  43137c:	msub	x2, x1, x3, x2
  431380:	sub	w2, w5, w2
  431384:	strb	w2, [x0, #-1]!
  431388:	mov	x2, x1
  43138c:	cbnz	x1, 431374 <argp_usage@@Base+0x3e94>
  431390:	mov	w1, #0x2d                  	// #45
  431394:	sturb	w1, [x0, #-1]
  431398:	sub	x0, x4, #0x2
  43139c:	ret
  4313a0:	strb	wzr, [x1, #20]
  4313a4:	mov	x2, x0
  4313a8:	mov	x3, #0xa                   	// #10
  4313ac:	add	x0, x1, #0x14
  4313b0:	tbnz	x2, #63, 4313d0 <argp_usage@@Base+0x3ef0>
  4313b4:	udiv	x1, x2, x3
  4313b8:	msub	x2, x1, x3, x2
  4313bc:	add	w2, w2, #0x30
  4313c0:	strb	w2, [x0, #-1]!
  4313c4:	mov	x2, x1
  4313c8:	cbnz	x1, 4313b4 <argp_usage@@Base+0x3ed4>
  4313cc:	b	4313fc <argp_usage@@Base+0x3f1c>
  4313d0:	mov	w5, #0x30                  	// #48
  4313d4:	sdiv	x1, x2, x3
  4313d8:	mov	x4, x0
  4313dc:	msub	x2, x1, x3, x2
  4313e0:	sub	w2, w5, w2
  4313e4:	strb	w2, [x0, #-1]!
  4313e8:	mov	x2, x1
  4313ec:	cbnz	x1, 4313d4 <argp_usage@@Base+0x3ef4>
  4313f0:	mov	w1, #0x2d                  	// #45
  4313f4:	sturb	w1, [x0, #-1]
  4313f8:	sub	x0, x4, #0x2
  4313fc:	ret
  431400:	mov	x2, x0
  431404:	add	x0, x1, #0x14
  431408:	mov	x4, #0xa                   	// #10
  43140c:	strb	wzr, [x1, #20]
  431410:	udiv	x3, x2, x4
  431414:	msub	x1, x3, x4, x2
  431418:	add	w1, w1, #0x30
  43141c:	strb	w1, [x0, #-1]!
  431420:	mov	x1, x2
  431424:	mov	x2, x3
  431428:	cmp	x1, #0x9
  43142c:	b.hi	431410 <argp_usage@@Base+0x3f30>  // b.pmore
  431430:	ret
  431434:	stp	x29, x30, [sp, #-16]!
  431438:	mov	w0, #0xe                   	// #14
  43143c:	mov	x29, sp
  431440:	bl	4045b0 <nl_langinfo@plt>
  431444:	cbz	x0, 431450 <argp_usage@@Base+0x3f70>
  431448:	ldrb	w1, [x0]
  43144c:	cbnz	w1, 431458 <argp_usage@@Base+0x3f78>
  431450:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  431454:	add	x0, x0, #0x620
  431458:	ldp	x29, x30, [sp], #16
  43145c:	ret
  431460:	cmp	x0, x1
  431464:	b.eq	431620 <argp_usage@@Base+0x4140>  // b.none
  431468:	stp	x29, x30, [sp, #-192]!
  43146c:	mov	x29, sp
  431470:	stp	x19, x20, [sp, #16]
  431474:	stp	x21, x22, [sp, #32]
  431478:	mov	x21, x0
  43147c:	mov	x22, x1
  431480:	stp	x23, x24, [sp, #48]
  431484:	bl	404b10 <__ctype_get_mb_cur_max@plt>
  431488:	cmp	x0, #0x1
  43148c:	b.ls	4315bc <argp_usage@@Base+0x40dc>  // b.plast
  431490:	strb	wzr, [sp, #64]
  431494:	stur	xzr, [sp, #68]
  431498:	strb	wzr, [sp, #76]
  43149c:	str	x21, [sp, #80]
  4314a0:	strb	wzr, [sp, #128]
  4314a4:	stur	xzr, [sp, #132]
  4314a8:	str	x22, [sp, #144]
  4314ac:	add	x0, sp, #0x40
  4314b0:	strb	wzr, [sp, #140]
  4314b4:	bl	431628 <argp_usage@@Base+0x4148>
  4314b8:	ldrb	w0, [sp, #96]
  4314bc:	cbz	w0, 431558 <argp_usage@@Base+0x4078>
  4314c0:	ldr	w0, [sp, #100]
  4314c4:	cbnz	w0, 431558 <argp_usage@@Base+0x4078>
  4314c8:	add	x0, sp, #0x40
  4314cc:	bl	431628 <argp_usage@@Base+0x4148>
  4314d0:	ldrb	w0, [sp, #96]
  4314d4:	cbz	w0, 431500 <argp_usage@@Base+0x4020>
  4314d8:	ldr	w0, [sp, #100]
  4314dc:	cbnz	w0, 431500 <argp_usage@@Base+0x4020>
  4314e0:	add	x0, sp, #0x80
  4314e4:	bl	431628 <argp_usage@@Base+0x4148>
  4314e8:	ldrb	w0, [sp, #160]
  4314ec:	cbz	w0, 431540 <argp_usage@@Base+0x4060>
  4314f0:	ldr	w0, [sp, #164]
  4314f4:	cbnz	w0, 431540 <argp_usage@@Base+0x4060>
  4314f8:	b	431504 <argp_usage@@Base+0x4024>
  4314fc:	cbz	w0, 431518 <argp_usage@@Base+0x4038>
  431500:	mov	w0, #0x1                   	// #1
  431504:	ldp	x19, x20, [sp, #16]
  431508:	ldp	x21, x22, [sp, #32]
  43150c:	ldp	x23, x24, [sp, #48]
  431510:	ldp	x29, x30, [sp], #192
  431514:	ret
  431518:	ldp	x0, x2, [sp, #80]
  43151c:	ldp	x1, x3, [sp, #144]
  431520:	cmp	x2, x3
  431524:	b.ne	431530 <argp_usage@@Base+0x4050>  // b.any
  431528:	bl	4049f0 <memcmp@plt>
  43152c:	b	431594 <argp_usage@@Base+0x40b4>
  431530:	b.cs	431548 <argp_usage@@Base+0x4068>  // b.hs, b.nlast
  431534:	bl	4049f0 <memcmp@plt>
  431538:	cmp	w0, #0x0
  43153c:	b.gt	431500 <argp_usage@@Base+0x4020>
  431540:	mov	w0, #0xffffffff            	// #-1
  431544:	b	431504 <argp_usage@@Base+0x4024>
  431548:	mov	x2, x3
  43154c:	bl	4049f0 <memcmp@plt>
  431550:	tbz	w0, #31, 431500 <argp_usage@@Base+0x4020>
  431554:	b	431540 <argp_usage@@Base+0x4060>
  431558:	add	x0, sp, #0x80
  43155c:	bl	431628 <argp_usage@@Base+0x4148>
  431560:	ldrb	w0, [sp, #160]
  431564:	cbz	w0, 431570 <argp_usage@@Base+0x4090>
  431568:	ldr	w1, [sp, #164]
  43156c:	cbz	w1, 4314c8 <argp_usage@@Base+0x3fe8>
  431570:	ldrb	w1, [sp, #96]
  431574:	cbz	w1, 4314fc <argp_usage@@Base+0x401c>
  431578:	cbz	w0, 431540 <argp_usage@@Base+0x4060>
  43157c:	ldr	w0, [sp, #100]
  431580:	bl	404ec0 <towlower@plt>
  431584:	mov	w19, w0
  431588:	ldr	w0, [sp, #164]
  43158c:	bl	404ec0 <towlower@plt>
  431590:	sub	w0, w19, w0
  431594:	cbnz	w0, 431504 <argp_usage@@Base+0x4024>
  431598:	ldp	x0, x1, [sp, #80]
  43159c:	strb	wzr, [sp, #76]
  4315a0:	add	x0, x0, x1
  4315a4:	str	x0, [sp, #80]
  4315a8:	ldr	x0, [sp, #144]
  4315ac:	ldr	x1, [sp, #152]
  4315b0:	add	x0, x0, x1
  4315b4:	str	x0, [sp, #144]
  4315b8:	b	4314ac <argp_usage@@Base+0x3fcc>
  4315bc:	bl	404a60 <__ctype_b_loc@plt>
  4315c0:	mov	x20, #0x0                   	// #0
  4315c4:	ldr	x23, [x0]
  4315c8:	ldrb	w24, [x21, x20]
  4315cc:	ldrb	w19, [x21, x20]
  4315d0:	ldrh	w0, [x23, x24, lsl #1]
  4315d4:	tbz	w0, #8, 4315e8 <argp_usage@@Base+0x4108>
  4315d8:	bl	4044a0 <__ctype_tolower_loc@plt>
  4315dc:	ldr	x0, [x0]
  4315e0:	ldr	w19, [x0, x24, lsl #2]
  4315e4:	and	w19, w19, #0xff
  4315e8:	ldrb	w24, [x22, x20]
  4315ec:	ldrb	w0, [x22, x20]
  4315f0:	ldrh	w1, [x23, x24, lsl #1]
  4315f4:	tbz	w1, #8, 431608 <argp_usage@@Base+0x4128>
  4315f8:	bl	4044a0 <__ctype_tolower_loc@plt>
  4315fc:	ldr	x0, [x0]
  431600:	ldr	w0, [x0, x24, lsl #2]
  431604:	and	w0, w0, #0xff
  431608:	cbz	w19, 431618 <argp_usage@@Base+0x4138>
  43160c:	add	x20, x20, #0x1
  431610:	cmp	w19, w0
  431614:	b.eq	4315c8 <argp_usage@@Base+0x40e8>  // b.none
  431618:	sub	w0, w19, w0
  43161c:	b	431504 <argp_usage@@Base+0x4024>
  431620:	mov	w0, #0x0                   	// #0
  431624:	ret
  431628:	stp	x29, x30, [sp, #-48]!
  43162c:	mov	x29, sp
  431630:	stp	x19, x20, [sp, #16]
  431634:	mov	x19, x0
  431638:	ldrb	w0, [x0, #12]
  43163c:	str	x21, [sp, #32]
  431640:	cbnz	w0, 43167c <argp_usage@@Base+0x419c>
  431644:	ldrb	w0, [x19]
  431648:	ldr	x20, [x19, #16]
  43164c:	cbnz	w0, 4316c0 <argp_usage@@Base+0x41e0>
  431650:	ldrb	w0, [x20]
  431654:	bl	4438a4 <_obstack_memory_used@@Base+0xbc24>
  431658:	tst	w0, #0xff
  43165c:	b.eq	43168c <argp_usage@@Base+0x41ac>  // b.none
  431660:	mov	x0, #0x1                   	// #1
  431664:	str	x0, [x19, #24]
  431668:	ldrb	w1, [x20]
  43166c:	strb	w0, [x19, #32]
  431670:	str	w1, [x19, #36]
  431674:	mov	w0, #0x1                   	// #1
  431678:	strb	w0, [x19, #12]
  43167c:	ldp	x19, x20, [sp, #16]
  431680:	ldr	x21, [sp, #32]
  431684:	ldp	x29, x30, [sp], #48
  431688:	ret
  43168c:	add	x0, x19, #0x4
  431690:	bl	404990 <mbsinit@plt>
  431694:	cbnz	w0, 4316b8 <argp_usage@@Base+0x41d8>
  431698:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  43169c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4316a0:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  4316a4:	add	x3, x3, #0x670
  4316a8:	add	x1, x1, #0x626
  4316ac:	add	x0, x0, #0x630
  4316b0:	mov	w2, #0x96                  	// #150
  4316b4:	bl	404e00 <__assert_fail@plt>
  4316b8:	mov	w0, #0x1                   	// #1
  4316bc:	strb	w0, [x19]
  4316c0:	bl	404b10 <__ctype_get_mb_cur_max@plt>
  4316c4:	add	x21, x19, #0x4
  4316c8:	mov	x1, x0
  4316cc:	mov	x0, x20
  4316d0:	bl	4367fc <argp_usage@@Base+0x931c>
  4316d4:	mov	x2, x0
  4316d8:	mov	x3, x21
  4316dc:	mov	x1, x20
  4316e0:	add	x0, x19, #0x24
  4316e4:	bl	4378f0 <argp_usage@@Base+0xa410>
  4316e8:	str	x0, [x19, #24]
  4316ec:	cmn	x0, #0x1
  4316f0:	b.ne	431704 <argp_usage@@Base+0x4224>  // b.any
  4316f4:	mov	x0, #0x1                   	// #1
  4316f8:	str	x0, [x19, #24]
  4316fc:	strb	wzr, [x19, #32]
  431700:	b	431674 <argp_usage@@Base+0x4194>
  431704:	cmn	x0, #0x2
  431708:	b.ne	431718 <argp_usage@@Base+0x4238>  // b.any
  43170c:	ldr	x0, [x19, #16]
  431710:	bl	404280 <strlen@plt>
  431714:	b	4316f8 <argp_usage@@Base+0x4218>
  431718:	cbnz	x0, 431778 <argp_usage@@Base+0x4298>
  43171c:	mov	x0, #0x1                   	// #1
  431720:	str	x0, [x19, #24]
  431724:	ldr	x0, [x19, #16]
  431728:	ldrb	w0, [x0]
  43172c:	cbz	w0, 431750 <argp_usage@@Base+0x4270>
  431730:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  431734:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  431738:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  43173c:	add	x3, x3, #0x670
  431740:	add	x1, x1, #0x626
  431744:	add	x0, x0, #0x647
  431748:	mov	w2, #0xb2                  	// #178
  43174c:	b	4316b4 <argp_usage@@Base+0x41d4>
  431750:	ldr	w0, [x19, #36]
  431754:	cbz	w0, 431778 <argp_usage@@Base+0x4298>
  431758:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  43175c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  431760:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  431764:	add	x3, x3, #0x670
  431768:	add	x1, x1, #0x626
  43176c:	add	x0, x0, #0x65e
  431770:	mov	w2, #0xb3                  	// #179
  431774:	b	4316b4 <argp_usage@@Base+0x41d4>
  431778:	mov	w0, #0x1                   	// #1
  43177c:	strb	w0, [x19, #32]
  431780:	mov	x0, x21
  431784:	bl	404990 <mbsinit@plt>
  431788:	cbz	w0, 431674 <argp_usage@@Base+0x4194>
  43178c:	strb	wzr, [x19]
  431790:	b	431674 <argp_usage@@Base+0x4194>
  431794:	ldr	x2, [x0, #16]
  431798:	add	x2, x2, x1
  43179c:	str	x2, [x0, #16]
  4317a0:	ret
  4317a4:	ldrb	w2, [x1]
  4317a8:	strb	w2, [x0]
  4317ac:	cbz	w2, 4317cc <argp_usage@@Base+0x42ec>
  4317b0:	ldur	x2, [x1, #4]
  4317b4:	stur	x2, [x0, #4]
  4317b8:	ldrb	w2, [x1, #12]
  4317bc:	add	x0, x0, #0x10
  4317c0:	sturb	w2, [x0, #-4]
  4317c4:	add	x1, x1, #0x10
  4317c8:	b	44383c <_obstack_memory_used@@Base+0xbbbc>
  4317cc:	stur	xzr, [x0, #4]
  4317d0:	b	4317b8 <argp_usage@@Base+0x42d8>
  4317d4:	stp	x29, x30, [sp, #-48]!
  4317d8:	mov	x29, sp
  4317dc:	stp	x19, x20, [sp, #16]
  4317e0:	mov	x19, x0
  4317e4:	str	x21, [sp, #32]
  4317e8:	ldrb	w0, [x0]
  4317ec:	sub	w0, w0, #0x30
  4317f0:	and	w0, w0, #0xff
  4317f4:	cmp	w0, #0x7
  4317f8:	b.hi	431910 <argp_usage@@Base+0x4430>  // b.pmore
  4317fc:	mov	x0, x19
  431800:	mov	w20, #0x0                   	// #0
  431804:	ldrb	w1, [x0], #1
  431808:	lsl	w20, w20, #3
  43180c:	sub	w20, w20, #0x30
  431810:	add	w20, w1, w20
  431814:	cmp	w20, #0xfff
  431818:	b.hi	431900 <argp_usage@@Base+0x4420>  // b.pmore
  43181c:	ldrb	w2, [x0]
  431820:	sub	w1, w2, #0x30
  431824:	and	w1, w1, #0xff
  431828:	cmp	w1, #0x7
  43182c:	b.ls	431804 <argp_usage@@Base+0x4324>  // b.plast
  431830:	cbnz	w2, 431900 <argp_usage@@Base+0x4420>
  431834:	sub	x0, x0, x19
  431838:	and	w19, w20, #0xc00
  43183c:	cmp	x0, #0x5
  431840:	orr	w19, w19, #0x3ff
  431844:	mov	w21, #0xfff                 	// #4095
  431848:	mov	x0, #0x20                  	// #32
  43184c:	csel	w19, w19, w21, lt  // lt = tstop
  431850:	bl	436d44 <argp_usage@@Base+0x9864>
  431854:	stp	w21, w20, [x0, #4]
  431858:	mov	w1, #0x13d                 	// #317
  43185c:	strh	w1, [x0]
  431860:	str	w19, [x0, #12]
  431864:	strb	wzr, [x0, #17]
  431868:	ldp	x19, x20, [sp, #16]
  43186c:	ldr	x21, [sp, #32]
  431870:	ldp	x29, x30, [sp], #48
  431874:	ret
  431878:	cmp	w1, #0x2b
  43187c:	b.eq	431908 <argp_usage@@Base+0x4428>  // b.none
  431880:	and	w1, w1, #0xffffffef
  431884:	cmp	w1, #0x2d
  431888:	cset	w1, eq  // eq = none
  43188c:	add	x0, x0, w1, sxtw
  431890:	add	x2, x2, #0x1
  431894:	ldrb	w1, [x2]
  431898:	cbnz	w1, 431878 <argp_usage@@Base+0x4398>
  43189c:	mov	x1, #0x10                  	// #16
  4318a0:	bl	436d74 <argp_usage@@Base+0x9894>
  4318a4:	adrp	x8, 44e000 <_obstack_memory_used@@Base+0x16380>
  4318a8:	add	x8, x8, #0x684
  4318ac:	mov	x7, #0x0                   	// #0
  4318b0:	mov	w9, #0x438                 	// #1080
  4318b4:	mov	w10, #0x207                 	// #519
  4318b8:	mov	w11, #0x9c0                 	// #2496
  4318bc:	mov	w12, #0x49                  	// #73
  4318c0:	mov	w13, #0x92                  	// #146
  4318c4:	mov	w14, #0x124                 	// #292
  4318c8:	mov	w3, #0x0                   	// #0
  4318cc:	ldrb	w1, [x19]
  4318d0:	cmp	w1, #0x67
  4318d4:	b.eq	4319a0 <argp_usage@@Base+0x44c0>  // b.none
  4318d8:	b.hi	43191c <argp_usage@@Base+0x443c>  // b.pmore
  4318dc:	cmp	w1, #0x61
  4318e0:	b.eq	4319b0 <argp_usage@@Base+0x44d0>  // b.none
  4318e4:	b.hi	4318fc <argp_usage@@Base+0x441c>  // b.pmore
  4318e8:	and	w2, w1, #0xffffffef
  4318ec:	cmp	w2, #0x2d
  4318f0:	b.eq	431938 <argp_usage@@Base+0x4458>  // b.none
  4318f4:	cmp	w1, #0x2b
  4318f8:	b.eq	431938 <argp_usage@@Base+0x4458>  // b.none
  4318fc:	bl	404ae0 <free@plt>
  431900:	mov	x0, #0x0                   	// #0
  431904:	b	431868 <argp_usage@@Base+0x4388>
  431908:	mov	w1, #0x1                   	// #1
  43190c:	b	43188c <argp_usage@@Base+0x43ac>
  431910:	mov	x2, x19
  431914:	mov	x0, #0x1                   	// #1
  431918:	b	431894 <argp_usage@@Base+0x43b4>
  43191c:	cmp	w1, #0x6f
  431920:	b.eq	4319a8 <argp_usage@@Base+0x44c8>  // b.none
  431924:	cmp	w1, #0x75
  431928:	b.ne	4318fc <argp_usage@@Base+0x441c>  // b.any
  43192c:	orr	w3, w3, w11
  431930:	add	x19, x19, #0x1
  431934:	b	4318cc <argp_usage@@Base+0x43ec>
  431938:	add	x6, x0, x7, lsl #4
  43193c:	mov	x2, x19
  431940:	ldrb	w1, [x19, #1]
  431944:	cmp	w1, #0x6f
  431948:	ldrb	w15, [x2], #1
  43194c:	b.eq	431a94 <argp_usage@@Base+0x45b4>  // b.none
  431950:	b.hi	4319e0 <argp_usage@@Base+0x4500>  // b.pmore
  431954:	cmp	w1, #0x37
  431958:	b.hi	4319c4 <argp_usage@@Base+0x44e4>  // b.pmore
  43195c:	cmp	w1, #0x2f
  431960:	b.hi	4319fc <argp_usage@@Base+0x451c>  // b.pmore
  431964:	mov	w5, #0x1                   	// #1
  431968:	mov	w1, #0x0                   	// #0
  43196c:	ldrb	w4, [x2]
  431970:	cmp	w4, #0x58
  431974:	b.eq	431ad4 <argp_usage@@Base+0x45f4>  // b.none
  431978:	sub	w4, w4, #0x72
  43197c:	and	w16, w4, #0xff
  431980:	cmp	w16, #0x6
  431984:	b.hi	431adc <argp_usage@@Base+0x45fc>  // b.pmore
  431988:	cmp	w4, #0x6
  43198c:	b.hi	431adc <argp_usage@@Base+0x45fc>  // b.pmore
  431990:	ldrb	w4, [x8, w4, uxtw]
  431994:	adr	x16, 4319a0 <argp_usage@@Base+0x44c0>
  431998:	add	x4, x16, w4, sxtb #2
  43199c:	br	x4
  4319a0:	orr	w3, w3, w9
  4319a4:	b	431930 <argp_usage@@Base+0x4450>
  4319a8:	orr	w3, w3, w10
  4319ac:	b	431930 <argp_usage@@Base+0x4450>
  4319b0:	mov	w3, #0xfff                 	// #4095
  4319b4:	b	431930 <argp_usage@@Base+0x4450>
  4319b8:	add	x6, x6, #0x10
  4319bc:	mov	x19, x2
  4319c0:	b	43193c <argp_usage@@Base+0x445c>
  4319c4:	cmp	w1, #0x67
  4319c8:	b.ne	431964 <argp_usage@@Base+0x4484>  // b.any
  4319cc:	add	x2, x19, #0x2
  4319d0:	mov	w5, #0x3                   	// #3
  4319d4:	mov	w4, #0x0                   	// #0
  4319d8:	mov	w1, #0x38                  	// #56
  4319dc:	b	431a48 <argp_usage@@Base+0x4568>
  4319e0:	cmp	w1, #0x75
  4319e4:	b.ne	431964 <argp_usage@@Base+0x4484>  // b.any
  4319e8:	add	x2, x19, #0x2
  4319ec:	mov	w5, #0x3                   	// #3
  4319f0:	mov	w4, #0x0                   	// #0
  4319f4:	mov	w1, #0x1c0                 	// #448
  4319f8:	b	431a48 <argp_usage@@Base+0x4568>
  4319fc:	mov	w1, #0x0                   	// #0
  431a00:	ldrb	w4, [x2], #1
  431a04:	lsl	w1, w1, #3
  431a08:	sub	w1, w1, #0x30
  431a0c:	add	w1, w4, w1
  431a10:	cmp	w1, #0xfff
  431a14:	b.hi	4318fc <argp_usage@@Base+0x441c>  // b.pmore
  431a18:	ldrb	w4, [x2]
  431a1c:	sub	w5, w4, #0x30
  431a20:	and	w5, w5, #0xff
  431a24:	cmp	w5, #0x7
  431a28:	b.ls	431a00 <argp_usage@@Base+0x4520>  // b.plast
  431a2c:	cbnz	w3, 4318fc <argp_usage@@Base+0x441c>
  431a30:	cmp	w4, #0x2c
  431a34:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  431a38:	b.ne	4318fc <argp_usage@@Base+0x441c>  // b.any
  431a3c:	mov	w3, #0xfff                 	// #4095
  431a40:	mov	w4, w3
  431a44:	mov	w5, #0x1                   	// #1
  431a48:	strb	w15, [x6]
  431a4c:	add	x7, x7, #0x1
  431a50:	strb	w5, [x6, #1]
  431a54:	stp	w3, w1, [x6, #4]
  431a58:	cbnz	w4, 431a68 <argp_usage@@Base+0x4588>
  431a5c:	and	w4, w3, w1
  431a60:	cmp	w3, #0x0
  431a64:	csel	w4, w4, w1, ne  // ne = any
  431a68:	ldrb	w1, [x2]
  431a6c:	str	w4, [x6, #12]
  431a70:	cmp	w1, #0x2b
  431a74:	b.eq	4319b8 <argp_usage@@Base+0x44d8>  // b.none
  431a78:	and	w4, w1, #0xffffffef
  431a7c:	cmp	w4, #0x2d
  431a80:	b.eq	4319b8 <argp_usage@@Base+0x44d8>  // b.none
  431a84:	cmp	w1, #0x2c
  431a88:	b.ne	431ae4 <argp_usage@@Base+0x4604>  // b.any
  431a8c:	add	x19, x2, #0x1
  431a90:	b	4318c8 <argp_usage@@Base+0x43e8>
  431a94:	add	x2, x19, #0x2
  431a98:	mov	w5, #0x3                   	// #3
  431a9c:	mov	w4, #0x0                   	// #0
  431aa0:	mov	w1, #0x7                   	// #7
  431aa4:	b	431a48 <argp_usage@@Base+0x4568>
  431aa8:	orr	w1, w1, w14
  431aac:	add	x2, x2, #0x1
  431ab0:	b	43196c <argp_usage@@Base+0x448c>
  431ab4:	orr	w1, w1, w13
  431ab8:	b	431aac <argp_usage@@Base+0x45cc>
  431abc:	orr	w1, w1, w12
  431ac0:	b	431aac <argp_usage@@Base+0x45cc>
  431ac4:	orr	w1, w1, #0xc00
  431ac8:	b	431aac <argp_usage@@Base+0x45cc>
  431acc:	orr	w1, w1, #0x200
  431ad0:	b	431aac <argp_usage@@Base+0x45cc>
  431ad4:	mov	w5, #0x2                   	// #2
  431ad8:	b	431aac <argp_usage@@Base+0x45cc>
  431adc:	mov	w4, #0x0                   	// #0
  431ae0:	b	431a48 <argp_usage@@Base+0x4568>
  431ae4:	cbnz	w1, 4318fc <argp_usage@@Base+0x441c>
  431ae8:	add	x7, x0, x7, lsl #4
  431aec:	strb	wzr, [x7, #1]
  431af0:	b	431868 <argp_usage@@Base+0x4388>
  431af4:	stp	x29, x30, [sp, #-160]!
  431af8:	mov	x29, sp
  431afc:	add	x1, sp, #0x20
  431b00:	str	x19, [sp, #16]
  431b04:	bl	446a80 <_obstack_memory_used@@Base+0xee00>
  431b08:	cbnz	w0, 431b3c <argp_usage@@Base+0x465c>
  431b0c:	ldr	w19, [sp, #48]
  431b10:	mov	x0, #0x20                  	// #32
  431b14:	bl	436d44 <argp_usage@@Base+0x9864>
  431b18:	strb	wzr, [x0, #17]
  431b1c:	mov	w1, #0x13d                 	// #317
  431b20:	strh	w1, [x0]
  431b24:	mov	w1, #0xfff                 	// #4095
  431b28:	stp	w1, w19, [x0, #4]
  431b2c:	str	w1, [x0, #12]
  431b30:	ldr	x19, [sp, #16]
  431b34:	ldp	x29, x30, [sp], #160
  431b38:	ret
  431b3c:	mov	x0, #0x0                   	// #0
  431b40:	b	431b30 <argp_usage@@Base+0x4650>
  431b44:	ands	w1, w1, #0xff
  431b48:	mov	w11, #0xc00                 	// #3072
  431b4c:	and	w0, w0, #0xfff
  431b50:	csel	w11, w11, wzr, ne  // ne = any
  431b54:	mvn	w2, w2
  431b58:	mov	w7, #0x0                   	// #0
  431b5c:	mov	w9, #0x49                  	// #73
  431b60:	mov	w12, #0x124                 	// #292
  431b64:	mov	w13, #0x92                  	// #146
  431b68:	ldrb	w8, [x3, #1]
  431b6c:	cbnz	w8, 431b7c <argp_usage@@Base+0x469c>
  431b70:	cbz	x4, 431b78 <argp_usage@@Base+0x4698>
  431b74:	str	w7, [x4]
  431b78:	ret
  431b7c:	ldr	w10, [x3, #12]
  431b80:	cmp	w8, #0x2
  431b84:	ldp	w6, w5, [x3, #4]
  431b88:	bic	w10, w11, w10
  431b8c:	b.eq	431bf4 <argp_usage@@Base+0x4714>  // b.none
  431b90:	cmp	w8, #0x3
  431b94:	b.ne	431bc0 <argp_usage@@Base+0x46e0>  // b.any
  431b98:	and	w5, w0, w5
  431b9c:	tst	w5, w12
  431ba0:	csel	w8, w12, wzr, ne  // ne = any
  431ba4:	tst	w5, w13
  431ba8:	csel	w14, w13, wzr, ne  // ne = any
  431bac:	tst	w5, w9
  431bb0:	orr	w8, w8, w14
  431bb4:	csel	w14, w9, wzr, ne  // ne = any
  431bb8:	orr	w8, w8, w14
  431bbc:	orr	w5, w8, w5
  431bc0:	cmp	w6, #0x0
  431bc4:	bic	w5, w5, w10
  431bc8:	csel	w8, w2, w6, eq  // eq = none
  431bcc:	and	w5, w8, w5
  431bd0:	ldrb	w8, [x3]
  431bd4:	cmp	w8, #0x2d
  431bd8:	b.eq	431c30 <argp_usage@@Base+0x4750>  // b.none
  431bdc:	cmp	w8, #0x3d
  431be0:	b.eq	431c08 <argp_usage@@Base+0x4728>  // b.none
  431be4:	cmp	w8, #0x2b
  431be8:	b.ne	431c28 <argp_usage@@Base+0x4748>  // b.any
  431bec:	orr	w7, w7, w5
  431bf0:	b	431c24 <argp_usage@@Base+0x4744>
  431bf4:	and	w8, w0, w9
  431bf8:	orr	w8, w8, w1
  431bfc:	cbz	w8, 431bc0 <argp_usage@@Base+0x46e0>
  431c00:	orr	w5, w5, w9
  431c04:	b	431bc0 <argp_usage@@Base+0x46e0>
  431c08:	cbz	w6, 431c10 <argp_usage@@Base+0x4730>
  431c0c:	mvn	w6, w6
  431c10:	orr	w6, w6, w10
  431c14:	mvn	w8, w6
  431c18:	and	w0, w0, w6
  431c1c:	and	w8, w8, #0xfff
  431c20:	orr	w7, w7, w8
  431c24:	orr	w0, w0, w5
  431c28:	add	x3, x3, #0x10
  431c2c:	b	431b68 <argp_usage@@Base+0x4688>
  431c30:	orr	w7, w7, w5
  431c34:	bic	w0, w0, w5
  431c38:	b	431c28 <argp_usage@@Base+0x4748>
  431c3c:	stp	x29, x30, [sp, #-32]!
  431c40:	mov	w2, #0x5                   	// #5
  431c44:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  431c48:	mov	x29, sp
  431c4c:	stp	x19, x20, [sp, #16]
  431c50:	mov	w19, w0
  431c54:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  431c58:	add	x1, x1, #0x68b
  431c5c:	ldr	w20, [x0, #1032]
  431c60:	mov	x0, #0x0                   	// #0
  431c64:	bl	404d00 <dcgettext@plt>
  431c68:	mov	x2, x0
  431c6c:	mov	w1, w19
  431c70:	mov	w0, w20
  431c74:	bl	4042e0 <error@plt>
  431c78:	bl	404970 <abort@plt>
  431c7c:	stp	x29, x30, [sp, #-32]!
  431c80:	mov	w2, #0x5                   	// #5
  431c84:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  431c88:	mov	x29, sp
  431c8c:	stp	x19, x20, [sp, #16]
  431c90:	mov	w19, w0
  431c94:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  431c98:	add	x1, x1, #0x6b6
  431c9c:	ldr	w20, [x0, #1032]
  431ca0:	mov	x0, #0x0                   	// #0
  431ca4:	bl	404d00 <dcgettext@plt>
  431ca8:	mov	x2, x0
  431cac:	mov	w1, w19
  431cb0:	mov	w0, w20
  431cb4:	bl	4042e0 <error@plt>
  431cb8:	bl	404970 <abort@plt>
  431cbc:	stp	x29, x30, [sp, #-48]!
  431cc0:	mov	x29, sp
  431cc4:	stp	x21, x22, [sp, #32]
  431cc8:	mov	x21, x3
  431ccc:	mov	w3, #0x4900                	// #18688
  431cd0:	movk	w3, #0x8, lsl #16
  431cd4:	orr	w2, w2, w3
  431cd8:	stp	x19, x20, [sp, #16]
  431cdc:	bl	4449dc <_obstack_memory_used@@Base+0xcd5c>
  431ce0:	tbnz	w0, #31, 431d28 <argp_usage@@Base+0x4848>
  431ce4:	mov	w20, w0
  431ce8:	bl	404920 <fdopendir@plt>
  431cec:	mov	x19, x0
  431cf0:	cbz	x0, 431d0c <argp_usage@@Base+0x482c>
  431cf4:	str	w20, [x21]
  431cf8:	mov	x0, x19
  431cfc:	ldp	x19, x20, [sp, #16]
  431d00:	ldp	x21, x22, [sp, #32]
  431d04:	ldp	x29, x30, [sp], #48
  431d08:	ret
  431d0c:	bl	404e10 <__errno_location@plt>
  431d10:	mov	x21, x0
  431d14:	mov	w0, w20
  431d18:	ldr	w22, [x21]
  431d1c:	bl	4048c0 <close@plt>
  431d20:	str	w22, [x21]
  431d24:	b	431cf8 <argp_usage@@Base+0x4818>
  431d28:	mov	x19, #0x0                   	// #0
  431d2c:	b	431cf8 <argp_usage@@Base+0x4818>
  431d30:	ldr	x4, [x0, #168]
  431d34:	ldp	x2, x3, [x1, #8]
  431d38:	cbz	x4, 431d78 <argp_usage@@Base+0x4898>
  431d3c:	ldr	x5, [x0, #48]
  431d40:	cbnz	x5, 431d78 <argp_usage@@Base+0x4898>
  431d44:	ldrb	w5, [x0, #161]
  431d48:	cbnz	w5, 431d78 <argp_usage@@Base+0x4898>
  431d4c:	ldr	x4, [x0, #200]
  431d50:	cbnz	x4, 431d5c <argp_usage@@Base+0x487c>
  431d54:	cmp	x3, #0x2
  431d58:	b.le	431dbc <argp_usage@@Base+0x48dc>
  431d5c:	mov	w2, #0x1                   	// #1
  431d60:	strb	w2, [x0, #216]
  431d64:	ldp	x2, x3, [x1]
  431d68:	stp	x2, x3, [x0, #32]
  431d6c:	ldr	x1, [x1, #16]
  431d70:	str	x1, [x0, #48]
  431d74:	ret
  431d78:	cmp	x3, #0x4
  431d7c:	b.le	431dbc <argp_usage@@Base+0x48dc>
  431d80:	mov	x1, #0x64                  	// #100
  431d84:	add	x4, x4, #0x1
  431d88:	str	x4, [x0, #168]
  431d8c:	sub	x3, x3, #0x4
  431d90:	sdiv	x5, x2, x1
  431d94:	str	x3, [x0, #48]
  431d98:	msub	x4, x5, x1, x2
  431d9c:	str	x4, [x0, #64]
  431da0:	sdiv	x4, x5, x1
  431da4:	msub	x1, x4, x1, x5
  431da8:	str	x1, [x0, #56]
  431dac:	mov	x1, #0x2710                	// #10000
  431db0:	sdiv	x2, x2, x1
  431db4:	str	x2, [x0, #40]
  431db8:	b	431d74 <argp_usage@@Base+0x4894>
  431dbc:	ldr	x1, [x0, #200]
  431dc0:	cmp	x3, #0x2
  431dc4:	add	x1, x1, #0x1
  431dc8:	str	x1, [x0, #200]
  431dcc:	b.gt	431de4 <argp_usage@@Base+0x4904>
  431dd0:	stp	x2, xzr, [x0, #72]
  431dd4:	mov	w1, #0x2                   	// #2
  431dd8:	str	w1, [x0, #28]
  431ddc:	stp	xzr, xzr, [x0, #88]
  431de0:	b	431d74 <argp_usage@@Base+0x4894>
  431de4:	mov	x3, #0x64                  	// #100
  431de8:	sdiv	x1, x2, x3
  431dec:	msub	x2, x1, x3, x2
  431df0:	stp	x1, x2, [x0, #72]
  431df4:	b	431dd4 <argp_usage@@Base+0x48f4>
  431df8:	ldr	w2, [x1, #24]
  431dfc:	tbnz	w2, #31, 431e5c <argp_usage@@Base+0x497c>
  431e00:	ldp	w3, w4, [x1]
  431e04:	ldr	w2, [x0]
  431e08:	ldr	w5, [x1, #12]
  431e0c:	eor	w2, w2, w3
  431e10:	ldr	w3, [x0, #4]
  431e14:	eor	w3, w3, w4
  431e18:	ldr	w4, [x1, #8]
  431e1c:	orr	w2, w2, w3
  431e20:	ldr	w3, [x0, #8]
  431e24:	eor	w3, w3, w4
  431e28:	ldr	w4, [x0, #12]
  431e2c:	eor	w4, w4, w5
  431e30:	orr	w3, w3, w4
  431e34:	orr	w2, w2, w3
  431e38:	ldp	w4, w1, [x1, #16]
  431e3c:	ldp	w3, w0, [x0, #16]
  431e40:	eor	w3, w3, w4
  431e44:	eor	w0, w0, w1
  431e48:	orr	w0, w3, w0
  431e4c:	orr	w0, w2, w0
  431e50:	cmp	w0, #0x0
  431e54:	cset	w0, eq  // eq = none
  431e58:	ret
  431e5c:	mov	w0, #0x0                   	// #0
  431e60:	b	431e58 <argp_usage@@Base+0x4978>
  431e64:	stp	x29, x30, [sp, #-48]!
  431e68:	cmp	w0, #0x0
  431e6c:	mov	w4, #0x2d                  	// #45
  431e70:	mov	x29, sp
  431e74:	stp	x21, x22, [sp, #32]
  431e78:	mov	w21, w0
  431e7c:	mov	w22, #0xe10                 	// #3600
  431e80:	stp	x19, x20, [sp, #16]
  431e84:	mov	w0, #0x2b                  	// #43
  431e88:	csel	w4, w4, w0, lt  // lt = tstop
  431e8c:	sdiv	w19, w21, w22
  431e90:	mov	x20, x1
  431e94:	mov	x0, x20
  431e98:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  431e9c:	mov	x2, #0xffffffffffffffff    	// #-1
  431ea0:	add	x3, x3, #0x6e4
  431ea4:	mov	w1, #0x1                   	// #1
  431ea8:	cmp	w19, #0x0
  431eac:	cneg	w5, w19, lt  // lt = tstop
  431eb0:	msub	w19, w19, w22, w21
  431eb4:	bl	4042a0 <__sprintf_chk@plt>
  431eb8:	cbz	w19, 431f04 <argp_usage@@Base+0x4a24>
  431ebc:	cmp	w19, #0x0
  431ec0:	mov	w1, #0x3c                  	// #60
  431ec4:	cneg	w19, w19, lt  // lt = tstop
  431ec8:	mov	w3, #0xa                   	// #10
  431ecc:	add	x2, x20, w0, sxtw
  431ed0:	mov	w5, #0x3a                  	// #58
  431ed4:	strb	w5, [x20, w0, sxtw]
  431ed8:	udiv	w4, w19, w1
  431edc:	msub	w19, w4, w1, w19
  431ee0:	udiv	w1, w4, w3
  431ee4:	add	w0, w1, #0x30
  431ee8:	msub	w1, w1, w3, w4
  431eec:	strb	w0, [x2, #1]
  431ef0:	add	w1, w1, #0x30
  431ef4:	strb	w1, [x2, #2]
  431ef8:	cbnz	w19, 431f18 <argp_usage@@Base+0x4a38>
  431efc:	add	x1, x2, #0x3
  431f00:	strb	wzr, [x1]
  431f04:	mov	x0, x20
  431f08:	ldp	x19, x20, [sp, #16]
  431f0c:	ldp	x21, x22, [sp, #32]
  431f10:	ldp	x29, x30, [sp], #48
  431f14:	ret
  431f18:	udiv	w0, w19, w3
  431f1c:	strb	w5, [x2, #3]
  431f20:	add	w1, w0, #0x30
  431f24:	msub	w0, w0, w3, w19
  431f28:	strb	w1, [x2, #4]
  431f2c:	add	x1, x2, #0x6
  431f30:	add	w0, w0, #0x30
  431f34:	strb	w0, [x2, #5]
  431f38:	b	431f00 <argp_usage@@Base+0x4a20>
  431f3c:	mov	w5, #0x64                  	// #100
  431f40:	stp	x29, x30, [sp, #-32]!
  431f44:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  431f48:	sdiv	w4, w0, w5
  431f4c:	mov	x29, sp
  431f50:	add	x3, x3, #0x6eb
  431f54:	str	x19, [sp, #16]
  431f58:	mov	x19, x1
  431f5c:	mov	x2, #0xffffffffffffffff    	// #-1
  431f60:	mov	w1, #0x1                   	// #1
  431f64:	msub	w5, w4, w5, w0
  431f68:	cmp	w5, #0x0
  431f6c:	cneg	w5, w5, lt  // lt = tstop
  431f70:	adds	w4, w4, #0x13
  431f74:	cneg	w4, w4, mi  // mi = first
  431f78:	cmn	w0, #0x76c
  431f7c:	cinc	x3, x3, ge  // ge = tcont
  431f80:	mov	x0, x19
  431f84:	bl	4042a0 <__sprintf_chk@plt>
  431f88:	mov	x0, x19
  431f8c:	ldr	x19, [sp, #16]
  431f90:	ldp	x29, x30, [sp], #32
  431f94:	ret
  431f98:	stp	x29, x30, [sp, #-320]!
  431f9c:	mov	x29, sp
  431fa0:	stp	x19, x20, [sp, #16]
  431fa4:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  431fa8:	mov	x19, x0
  431fac:	stp	x1, x2, [sp, #264]
  431fb0:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  431fb4:	add	x0, x0, #0x6f5
  431fb8:	ldr	x1, [x20, #1160]
  431fbc:	str	q0, [sp, #128]
  431fc0:	str	q1, [sp, #144]
  431fc4:	str	q2, [sp, #160]
  431fc8:	str	q3, [sp, #176]
  431fcc:	str	q4, [sp, #192]
  431fd0:	str	q5, [sp, #208]
  431fd4:	str	q6, [sp, #224]
  431fd8:	str	q7, [sp, #240]
  431fdc:	stp	x3, x4, [sp, #280]
  431fe0:	stp	x5, x6, [sp, #296]
  431fe4:	str	x7, [sp, #312]
  431fe8:	bl	404290 <fputs@plt>
  431fec:	add	x0, sp, #0x140
  431ff0:	stp	x0, x0, [sp, #64]
  431ff4:	add	x0, sp, #0x100
  431ff8:	str	x0, [sp, #80]
  431ffc:	mov	w0, #0xffffffc8            	// #-56
  432000:	str	w0, [sp, #88]
  432004:	mov	w0, #0xffffff80            	// #-128
  432008:	str	w0, [sp, #92]
  43200c:	ldp	x2, x3, [sp, #64]
  432010:	stp	x2, x3, [sp, #32]
  432014:	ldp	x0, x1, [sp, #80]
  432018:	stp	x0, x1, [sp, #48]
  43201c:	stp	x0, x1, [sp, #112]
  432020:	mov	w1, #0x1                   	// #1
  432024:	ldr	x0, [x20, #1160]
  432028:	stp	x2, x3, [sp, #96]
  43202c:	add	x3, sp, #0x20
  432030:	mov	x2, x19
  432034:	bl	404790 <__vfprintf_chk@plt>
  432038:	ldp	x19, x20, [sp, #16]
  43203c:	ldp	x29, x30, [sp], #320
  432040:	ret
  432044:	and	w0, w0, #0xff
  432048:	cbz	x1, 432088 <argp_usage@@Base+0x4ba8>
  43204c:	eor	w0, w0, #0x1
  432050:	mov	x4, x2
  432054:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  432058:	add	x2, x2, #0x6fc
  43205c:	stp	x29, x30, [sp, #-16]!
  432060:	add	x2, x2, w0, uxtb
  432064:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  432068:	mov	x29, sp
  43206c:	ldr	x0, [x0, #1160]
  432070:	mov	x3, x1
  432074:	mov	w1, #0x1                   	// #1
  432078:	bl	404a20 <__fprintf_chk@plt>
  43207c:	mov	w0, #0x1                   	// #1
  432080:	ldp	x29, x30, [sp], #16
  432084:	ret
  432088:	ret
  43208c:	and	w1, w1, #0xff
  432090:	cmp	x3, #0x2
  432094:	b.gt	4320d8 <argp_usage@@Base+0x4bf8>
  432098:	tbz	x4, #63, 4320dc <argp_usage@@Base+0x4bfc>
  43209c:	mov	x1, #0x64                  	// #100
  4320a0:	mul	x2, x2, x1
  4320a4:	mov	x1, #0x64                  	// #100
  4320a8:	mov	x4, #0x3c                  	// #60
  4320ac:	sdiv	x3, x2, x1
  4320b0:	msub	x2, x3, x1, x2
  4320b4:	madd	x3, x3, x4, x2
  4320b8:	add	x1, x3, #0x5a0
  4320bc:	cmp	x1, #0xb40
  4320c0:	b.hi	432104 <argp_usage@@Base+0x4c24>  // b.pmore
  4320c4:	mov	w1, #0x3c                  	// #60
  4320c8:	mul	w3, w3, w1
  4320cc:	str	w3, [x0]
  4320d0:	mov	w0, #0x1                   	// #1
  4320d4:	ret
  4320d8:	tbnz	x4, #63, 4320a4 <argp_usage@@Base+0x4bc4>
  4320dc:	mov	x5, #0x3c                  	// #60
  4320e0:	mul	x3, x2, x5
  4320e4:	smulh	x2, x2, x5
  4320e8:	cmp	x2, x3, asr #63
  4320ec:	cset	w2, ne  // ne = any
  4320f0:	cbz	w1, 43210c <argp_usage@@Base+0x4c2c>
  4320f4:	subs	x3, x3, x4
  4320f8:	cset	w1, vs
  4320fc:	orr	w2, w2, w1
  432100:	cbz	w2, 4320b8 <argp_usage@@Base+0x4bd8>
  432104:	mov	w0, #0x0                   	// #0
  432108:	b	4320d4 <argp_usage@@Base+0x4bf4>
  43210c:	adds	x3, x3, x4
  432110:	b	4320f8 <argp_usage@@Base+0x4c18>
  432114:	stp	x29, x30, [sp, #-48]!
  432118:	mov	x29, sp
  43211c:	stp	x19, x20, [sp, #16]
  432120:	adrp	x19, 44f000 <_obstack_memory_used@@Base+0x17380>
  432124:	add	x19, x19, #0x4e8
  432128:	mov	x20, x1
  43212c:	stp	x21, x22, [sp, #32]
  432130:	mov	x21, x0
  432134:	mov	x22, x19
  432138:	ldr	x1, [x19]
  43213c:	cbnz	x1, 432170 <argp_usage@@Base+0x4c90>
  432140:	add	x19, x21, #0xe8
  432144:	ldr	x1, [x19]
  432148:	cbnz	x1, 432184 <argp_usage@@Base+0x4ca4>
  43214c:	add	x19, x22, #0x40
  432150:	ldr	x1, [x19]
  432154:	cbnz	x1, 432198 <argp_usage@@Base+0x4cb8>
  432158:	mov	x19, #0x0                   	// #0
  43215c:	mov	x0, x19
  432160:	ldp	x19, x20, [sp, #16]
  432164:	ldp	x21, x22, [sp, #32]
  432168:	ldp	x29, x30, [sp], #48
  43216c:	ret
  432170:	mov	x0, x20
  432174:	bl	404a30 <strcmp@plt>
  432178:	cbz	w0, 43215c <argp_usage@@Base+0x4c7c>
  43217c:	add	x19, x19, #0x10
  432180:	b	432138 <argp_usage@@Base+0x4c58>
  432184:	mov	x0, x20
  432188:	bl	404a30 <strcmp@plt>
  43218c:	cbz	w0, 43215c <argp_usage@@Base+0x4c7c>
  432190:	add	x19, x19, #0x10
  432194:	b	432144 <argp_usage@@Base+0x4c64>
  432198:	mov	x0, x20
  43219c:	bl	404a30 <strcmp@plt>
  4321a0:	cbz	w0, 43215c <argp_usage@@Base+0x4c7c>
  4321a4:	add	x19, x19, #0x10
  4321a8:	b	432150 <argp_usage@@Base+0x4c70>
  4321ac:	stp	x29, x30, [sp, #-32]!
  4321b0:	mov	x29, sp
  4321b4:	stp	x19, x20, [sp, #16]
  4321b8:	mov	x20, x0
  4321bc:	ldrb	w0, [x1, #217]
  4321c0:	cbz	w0, 4322c8 <argp_usage@@Base+0x4de8>
  4321c4:	mov	x19, x1
  4321c8:	mov	w2, #0x5                   	// #5
  4321cc:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4321d0:	mov	x0, #0x0                   	// #0
  4321d4:	add	x1, x1, #0x705
  4321d8:	bl	404d00 <dcgettext@plt>
  4321dc:	mov	x1, x20
  4321e0:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4321e4:	ldr	x1, [x19, #104]
  4321e8:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  4321ec:	cbnz	x1, 432244 <argp_usage@@Base+0x4d64>
  4321f0:	ldr	x0, [x19, #112]
  4321f4:	cbnz	x0, 432244 <argp_usage@@Base+0x4d64>
  4321f8:	ldr	x0, [x19, #120]
  4321fc:	cbnz	x0, 432244 <argp_usage@@Base+0x4d64>
  432200:	ldr	x0, [x19, #128]
  432204:	cbnz	x0, 432244 <argp_usage@@Base+0x4d64>
  432208:	ldr	x0, [x19, #136]
  43220c:	cbnz	x0, 432244 <argp_usage@@Base+0x4d64>
  432210:	ldr	x0, [x19, #144]
  432214:	cbnz	x0, 432244 <argp_usage@@Base+0x4d64>
  432218:	ldr	w0, [x19, #152]
  43221c:	cbnz	w0, 432244 <argp_usage@@Base+0x4d64>
  432220:	mov	w2, #0x5                   	// #5
  432224:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  432228:	mov	x0, #0x0                   	// #0
  43222c:	add	x1, x1, #0x716
  432230:	bl	404d00 <dcgettext@plt>
  432234:	ldr	x1, [x20, #1160]
  432238:	ldp	x19, x20, [sp, #16]
  43223c:	ldp	x29, x30, [sp], #32
  432240:	b	404290 <fputs@plt>
  432244:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  432248:	mov	w0, #0x0                   	// #0
  43224c:	add	x2, x2, #0x726
  432250:	bl	432044 <argp_usage@@Base+0x4b64>
  432254:	ldr	x1, [x19, #112]
  432258:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  43225c:	add	x2, x2, #0x72e
  432260:	bl	432044 <argp_usage@@Base+0x4b64>
  432264:	ldr	x1, [x19, #120]
  432268:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  43226c:	add	x2, x2, #0x737
  432270:	bl	432044 <argp_usage@@Base+0x4b64>
  432274:	ldr	x1, [x19, #128]
  432278:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  43227c:	add	x2, x2, #0x73e
  432280:	bl	432044 <argp_usage@@Base+0x4b64>
  432284:	ldr	x1, [x19, #136]
  432288:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  43228c:	add	x2, x2, #0x746
  432290:	bl	432044 <argp_usage@@Base+0x4b64>
  432294:	ldr	x1, [x19, #144]
  432298:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  43229c:	add	x2, x2, #0x82f
  4322a0:	bl	432044 <argp_usage@@Base+0x4b64>
  4322a4:	ldrsw	x1, [x19, #152]
  4322a8:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  4322ac:	add	x2, x2, #0x74e
  4322b0:	bl	432044 <argp_usage@@Base+0x4b64>
  4322b4:	ldr	x1, [x20, #1160]
  4322b8:	mov	w0, #0xa                   	// #10
  4322bc:	ldp	x19, x20, [sp, #16]
  4322c0:	ldp	x29, x30, [sp], #32
  4322c4:	b	404420 <fputc@plt>
  4322c8:	ldp	x19, x20, [sp, #16]
  4322cc:	ldp	x29, x30, [sp], #32
  4322d0:	ret
  4322d4:	stp	x29, x30, [sp, #-80]!
  4322d8:	mov	x3, x0
  4322dc:	mov	w5, #0x0                   	// #0
  4322e0:	mov	x29, sp
  4322e4:	stp	x19, x20, [sp, #16]
  4322e8:	mov	x19, x2
  4322ec:	mov	x0, x19
  4322f0:	mov	x4, #0x0                   	// #0
  4322f4:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  4322f8:	add	x2, x2, #0x75a
  4322fc:	stp	x21, x22, [sp, #32]
  432300:	mov	x21, x1
  432304:	mov	x1, #0x64                  	// #100
  432308:	bl	4449b4 <_obstack_memory_used@@Base+0xcd34>
  43230c:	cmp	w0, #0x63
  432310:	ccmp	x21, #0x0, #0x4, le
  432314:	b.eq	43235c <argp_usage@@Base+0x4e7c>  // b.none
  432318:	mov	x20, x0
  43231c:	ldr	x0, [x21, #208]
  432320:	cbz	x0, 43235c <argp_usage@@Base+0x4e7c>
  432324:	ldr	w0, [x21, #24]
  432328:	add	x1, sp, #0x30
  43232c:	add	x22, x19, w20, sxtw
  432330:	bl	431e64 <argp_usage@@Base+0x4984>
  432334:	mov	x5, x0
  432338:	mov	w1, #0x64                  	// #100
  43233c:	sub	w1, w1, w20
  432340:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x16380>
  432344:	mov	x0, x22
  432348:	add	x4, x4, #0x774
  43234c:	sxtw	x1, w1
  432350:	mov	x3, #0xffffffffffffffff    	// #-1
  432354:	mov	w2, #0x1                   	// #1
  432358:	bl	404560 <__snprintf_chk@plt>
  43235c:	mov	x0, x19
  432360:	ldp	x19, x20, [sp, #16]
  432364:	ldp	x21, x22, [sp, #32]
  432368:	ldp	x29, x30, [sp], #80
  43236c:	ret
  432370:	stp	x29, x30, [sp, #-32]!
  432374:	mov	x29, sp
  432378:	stp	x19, x20, [sp, #16]
  43237c:	mov	x20, x0
  432380:	ldrb	w0, [x0, #224]
  432384:	mov	x19, x1
  432388:	cbz	w0, 432444 <argp_usage@@Base+0x4f64>
  43238c:	ldr	x5, [x20, #8]
  432390:	add	x1, x5, #0x1
  432394:	cmp	x1, #0xd
  432398:	b.hi	432424 <argp_usage@@Base+0x4f44>  // b.pmore
  43239c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x17380>
  4323a0:	add	x0, x0, #0x4e8
  4323a4:	add	x0, x0, #0x340
  4323a8:	mov	x3, #0xb                   	// #11
  4323ac:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  4323b0:	add	x2, x2, #0xb0d
  4323b4:	madd	x3, x1, x3, x0
  4323b8:	mov	x0, x19
  4323bc:	mov	x1, #0x64                  	// #100
  4323c0:	bl	4044b0 <snprintf@plt>
  4323c4:	ldr	w5, [x20, #16]
  4323c8:	cmp	w5, #0x6
  4323cc:	b.hi	432414 <argp_usage@@Base+0x4f34>  // b.pmore
  4323d0:	cmp	w0, #0x63
  4323d4:	b.hi	432414 <argp_usage@@Base+0x4f34>  // b.pmore
  4323d8:	cmp	w0, #0x0
  4323dc:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x17380>
  4323e0:	mov	w1, #0x64                  	// #100
  4323e4:	add	x2, x2, #0x4e8
  4323e8:	sub	w1, w1, w0
  4323ec:	add	x2, x2, #0x3da
  4323f0:	adrp	x4, 44d000 <_obstack_memory_used@@Base+0x15380>
  4323f4:	add	x4, x4, #0xb0c
  4323f8:	add	x5, x2, w5, sxtw #2
  4323fc:	cinc	x4, x4, eq  // eq = none
  432400:	sxtw	x1, w1
  432404:	add	x0, x19, w0, sxtw
  432408:	mov	x3, #0xffffffffffffffff    	// #-1
  43240c:	mov	w2, #0x1                   	// #1
  432410:	bl	404560 <__snprintf_chk@plt>
  432414:	mov	x0, x19
  432418:	ldp	x19, x20, [sp, #16]
  43241c:	ldp	x29, x30, [sp], #32
  432420:	ret
  432424:	mov	x0, x19
  432428:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x16380>
  43242c:	mov	x3, #0xffffffffffffffff    	// #-1
  432430:	add	x4, x4, #0x807
  432434:	mov	w2, #0x1                   	// #1
  432438:	mov	x1, #0x64                  	// #100
  43243c:	bl	404560 <__snprintf_chk@plt>
  432440:	b	4323c4 <argp_usage@@Base+0x4ee4>
  432444:	mov	w0, #0x0                   	// #0
  432448:	strb	wzr, [x1]
  43244c:	b	4323c4 <argp_usage@@Base+0x4ee4>
  432450:	stp	x29, x30, [sp, #-176]!
  432454:	mov	x29, sp
  432458:	stp	x21, x22, [sp, #32]
  43245c:	ldrb	w22, [x1, #217]
  432460:	stp	x19, x20, [sp, #16]
  432464:	str	x23, [sp, #48]
  432468:	cbz	w22, 432704 <argp_usage@@Base+0x5224>
  43246c:	mov	x19, x1
  432470:	mov	w2, #0x5                   	// #5
  432474:	mov	x20, x0
  432478:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  43247c:	mov	x0, #0x0                   	// #0
  432480:	add	x1, x1, #0x705
  432484:	bl	404d00 <dcgettext@plt>
  432488:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  43248c:	mov	x1, x20
  432490:	bl	431f98 <argp_usage@@Base+0x4ab8>
  432494:	ldr	x0, [x19, #168]
  432498:	cbz	x0, 432718 <argp_usage@@Base+0x5238>
  43249c:	ldrb	w0, [x19, #218]
  4324a0:	cbnz	w0, 432718 <argp_usage@@Base+0x5238>
  4324a4:	ldp	x4, x5, [x19, #56]
  4324a8:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  4324ac:	ldr	x0, [x21, #1160]
  4324b0:	add	x2, x2, #0x780
  4324b4:	ldr	x3, [x19, #40]
  4324b8:	mov	w1, #0x1                   	// #1
  4324bc:	mov	w20, w22
  4324c0:	bl	404a20 <__fprintf_chk@plt>
  4324c4:	mov	w0, #0x1                   	// #1
  4324c8:	strb	w0, [x19, #218]
  4324cc:	ldrb	w1, [x19, #216]
  4324d0:	ldrb	w0, [x19, #223]
  4324d4:	cmp	w1, w0
  4324d8:	b.eq	432524 <argp_usage@@Base+0x5044>  // b.none
  4324dc:	cbz	w20, 4324ec <argp_usage@@Base+0x500c>
  4324e0:	ldr	x1, [x21, #1160]
  4324e4:	mov	w0, #0x20                  	// #32
  4324e8:	bl	404420 <fputc@plt>
  4324ec:	ldr	x20, [x21, #1160]
  4324f0:	mov	w2, #0x5                   	// #5
  4324f4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4324f8:	mov	x0, #0x0                   	// #0
  4324fc:	add	x1, x1, #0x79a
  432500:	bl	404d00 <dcgettext@plt>
  432504:	ldr	x3, [x19, #40]
  432508:	mov	x2, x0
  43250c:	mov	w1, #0x1                   	// #1
  432510:	mov	x0, x20
  432514:	mov	w20, w22
  432518:	bl	404a20 <__fprintf_chk@plt>
  43251c:	ldrb	w0, [x19, #216]
  432520:	strb	w0, [x19, #223]
  432524:	ldr	x0, [x19, #200]
  432528:	cbz	x0, 43259c <argp_usage@@Base+0x50bc>
  43252c:	ldrb	w0, [x19, #221]
  432530:	cbnz	w0, 43259c <argp_usage@@Base+0x50bc>
  432534:	ldp	x3, x4, [x19, #72]
  432538:	eor	w20, w20, #0x1
  43253c:	ldr	x0, [x21, #1160]
  432540:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  432544:	ldr	x5, [x19, #88]
  432548:	add	x2, x2, #0x7a6
  43254c:	add	x2, x2, w20, uxtb
  432550:	mov	w1, #0x1                   	// #1
  432554:	bl	404a20 <__fprintf_chk@plt>
  432558:	ldr	x3, [x19, #96]
  43255c:	cbz	x3, 432574 <argp_usage@@Base+0x5094>
  432560:	ldr	x0, [x21, #1160]
  432564:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  432568:	mov	w1, #0x1                   	// #1
  43256c:	add	x2, x2, #0x7b9
  432570:	bl	404a20 <__fprintf_chk@plt>
  432574:	ldr	w0, [x19, #28]
  432578:	cmp	w0, #0x1
  43257c:	b.ne	432590 <argp_usage@@Base+0x50b0>  // b.any
  432580:	ldr	x1, [x21, #1160]
  432584:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  432588:	add	x0, x0, #0x7bf
  43258c:	bl	404290 <fputs@plt>
  432590:	mov	w20, w22
  432594:	mov	w0, #0x1                   	// #1
  432598:	strb	w0, [x19, #221]
  43259c:	ldr	x0, [x19, #176]
  4325a0:	cbz	x0, 43260c <argp_usage@@Base+0x512c>
  4325a4:	ldrb	w0, [x19, #219]
  4325a8:	cbnz	w0, 43260c <argp_usage@@Base+0x512c>
  4325ac:	cbz	w20, 4325bc <argp_usage@@Base+0x50dc>
  4325b0:	ldr	x1, [x21, #1160]
  4325b4:	mov	w0, #0x20                  	// #32
  4325b8:	bl	404420 <fputc@plt>
  4325bc:	mov	w2, #0x5                   	// #5
  4325c0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4325c4:	ldr	x23, [x21, #1160]
  4325c8:	add	x1, x1, #0x7c2
  4325cc:	mov	x0, #0x0                   	// #0
  4325d0:	bl	404d00 <dcgettext@plt>
  4325d4:	add	x1, sp, #0x48
  4325d8:	mov	x20, x0
  4325dc:	mov	x0, x19
  4325e0:	bl	432370 <argp_usage@@Base+0x4e90>
  4325e4:	ldr	w5, [x19, #16]
  4325e8:	mov	x3, x0
  4325ec:	ldr	x4, [x19, #8]
  4325f0:	mov	x2, x20
  4325f4:	mov	x0, x23
  4325f8:	mov	w1, #0x1                   	// #1
  4325fc:	mov	w20, w22
  432600:	bl	404a20 <__fprintf_chk@plt>
  432604:	mov	w0, #0x1                   	// #1
  432608:	strb	w0, [x19, #219]
  43260c:	ldr	x0, [x19, #184]
  432610:	cbz	x0, 432664 <argp_usage@@Base+0x5184>
  432614:	ldrb	w0, [x19, #220]
  432618:	cbnz	w0, 432664 <argp_usage@@Base+0x5184>
  43261c:	ldr	x1, [x19, #192]
  432620:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  432624:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x16380>
  432628:	add	x0, x0, #0x41a
  43262c:	cmp	x1, #0x0
  432630:	add	x4, x4, #0x77b
  432634:	csel	x4, x4, x0, ne  // ne = any
  432638:	ldr	w3, [x19, #20]
  43263c:	ldr	x0, [x21, #1160]
  432640:	eor	w20, w20, #0x1
  432644:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  432648:	add	x2, x2, #0x7e1
  43264c:	add	x2, x2, w20, uxtb
  432650:	mov	w1, #0x1                   	// #1
  432654:	mov	w20, w22
  432658:	bl	404a20 <__fprintf_chk@plt>
  43265c:	mov	w0, #0x1                   	// #1
  432660:	strb	w0, [x19, #220]
  432664:	ldr	x0, [x19, #208]
  432668:	cbz	x0, 4326b0 <argp_usage@@Base+0x51d0>
  43266c:	ldrb	w0, [x19, #222]
  432670:	cbnz	w0, 4326b0 <argp_usage@@Base+0x51d0>
  432674:	ldr	w0, [x19, #24]
  432678:	add	x1, sp, #0x48
  43267c:	ldr	x23, [x21, #1160]
  432680:	eor	w20, w20, #0x1
  432684:	bl	431e64 <argp_usage@@Base+0x4984>
  432688:	mov	x3, x0
  43268c:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  432690:	add	x2, x2, #0x7ed
  432694:	add	x2, x2, w20, uxtb
  432698:	mov	x0, x23
  43269c:	mov	w1, #0x1                   	// #1
  4326a0:	mov	w20, w22
  4326a4:	bl	404a20 <__fprintf_chk@plt>
  4326a8:	mov	w0, #0x1                   	// #1
  4326ac:	strb	w0, [x19, #222]
  4326b0:	ldrb	w0, [x19, #160]
  4326b4:	cbz	w0, 4326f8 <argp_usage@@Base+0x5218>
  4326b8:	ldr	x22, [x19, #88]
  4326bc:	cbz	w20, 4326cc <argp_usage@@Base+0x51ec>
  4326c0:	ldr	x1, [x21, #1160]
  4326c4:	mov	w0, #0x20                  	// #32
  4326c8:	bl	404420 <fputc@plt>
  4326cc:	ldr	x19, [x21, #1160]
  4326d0:	mov	w2, #0x5                   	// #5
  4326d4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4326d8:	mov	x0, #0x0                   	// #0
  4326dc:	add	x1, x1, #0x7f4
  4326e0:	bl	404d00 <dcgettext@plt>
  4326e4:	mov	x3, x22
  4326e8:	mov	x2, x0
  4326ec:	mov	w1, #0x1                   	// #1
  4326f0:	mov	x0, x19
  4326f4:	bl	404a20 <__fprintf_chk@plt>
  4326f8:	ldr	x1, [x21, #1160]
  4326fc:	mov	w0, #0xa                   	// #10
  432700:	bl	404420 <fputc@plt>
  432704:	ldp	x19, x20, [sp, #16]
  432708:	ldp	x21, x22, [sp, #32]
  43270c:	ldr	x23, [sp, #48]
  432710:	ldp	x29, x30, [sp], #176
  432714:	ret
  432718:	mov	w20, #0x0                   	// #0
  43271c:	b	4324cc <argp_usage@@Base+0x4fec>
  432720:	sub	sp, sp, #0x5e0
  432724:	stp	x29, x30, [sp]
  432728:	mov	x29, sp
  43272c:	stp	x23, x24, [sp, #48]
  432730:	mov	x24, x0
  432734:	add	x0, sp, #0xe8
  432738:	stp	x25, x26, [sp, #64]
  43273c:	add	x26, sp, #0x180
  432740:	str	x0, [sp, #104]
  432744:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x17380>
  432748:	add	x0, x0, #0x4e8
  43274c:	stp	x19, x20, [sp, #16]
  432750:	mov	w19, #0x0                   	// #0
  432754:	stp	x21, x22, [sp, #32]
  432758:	stp	x27, x28, [sp, #80]
  43275c:	mov	w27, #0xfffffffe            	// #-2
  432760:	str	x0, [sp, #96]
  432764:	add	x0, x0, #0xb10
  432768:	str	wzr, [sp, #116]
  43276c:	str	x0, [sp, #136]
  432770:	ldr	x0, [sp, #104]
  432774:	add	x22, sp, #0xe8
  432778:	ldr	x1, [sp, #104]
  43277c:	strh	w19, [x0]
  432780:	add	x0, x22, #0x26
  432784:	cmp	x1, x0
  432788:	b.cs	43384c <argp_usage@@Base+0x636c>  // b.hs, b.nlast
  43278c:	cmp	w19, #0xc
  432790:	b.eq	433854 <argp_usage@@Base+0x6374>  // b.none
  432794:	ldr	x0, [sp, #96]
  432798:	sxtw	x1, w19
  43279c:	str	x1, [sp, #120]
  4327a0:	add	x0, x0, #0x988
  4327a4:	ldrsb	w20, [x0, w19, sxtw]
  4327a8:	cmn	w20, #0x5d
  4327ac:	b.eq	432d28 <argp_usage@@Base+0x5848>  // b.none
  4327b0:	cmn	w27, #0x2
  4327b4:	b.ne	432ca8 <argp_usage@@Base+0x57c8>  // b.any
  4327b8:	mov	x25, #0x280000000000        	// #43980465111040
  4327bc:	mov	w27, #0x2b                  	// #43
  4327c0:	movk	x25, #0x3ff, lsl #48
  4327c4:	mov	w23, #0xffffffff            	// #-1
  4327c8:	ldr	x21, [x24]
  4327cc:	ldrb	w28, [x21]
  4327d0:	mov	w0, w28
  4327d4:	bl	4435d0 <_obstack_memory_used@@Base+0xb950>
  4327d8:	tst	w0, #0xff
  4327dc:	b.ne	4329bc <argp_usage@@Base+0x54dc>  // b.any
  4327e0:	cmp	w28, #0x39
  4327e4:	b.hi	432a34 <argp_usage@@Base+0x5554>  // b.pmore
  4327e8:	lsr	x0, x25, x28
  4327ec:	tbz	w0, #0, 432a34 <argp_usage@@Base+0x5554>
  4327f0:	cmp	w28, #0x2d
  4327f4:	ccmp	w28, w27, #0x4, ne  // ne = any
  4327f8:	b.ne	4329c8 <argp_usage@@Base+0x54e8>  // b.any
  4327fc:	cmp	w28, #0x2d
  432800:	cneg	w21, w23, ne  // ne = any
  432804:	ldr	x0, [x24]
  432808:	add	x1, x0, #0x1
  43280c:	str	x1, [x24]
  432810:	ldrb	w28, [x0, #1]
  432814:	mov	w0, w28
  432818:	bl	4435d0 <_obstack_memory_used@@Base+0xb950>
  43281c:	tst	w0, #0xff
  432820:	b.ne	432804 <argp_usage@@Base+0x5324>  // b.any
  432824:	sub	w0, w28, #0x30
  432828:	cmp	w0, #0x9
  43282c:	b.hi	4327c8 <argp_usage@@Base+0x52e8>  // b.pmore
  432830:	ldr	x3, [x24]
  432834:	mov	x4, #0x0                   	// #0
  432838:	mov	x1, #0xa                   	// #10
  43283c:	mov	w8, #0x30                  	// #48
  432840:	mov	x0, x3
  432844:	mul	x2, x4, x1
  432848:	smulh	x4, x4, x1
  43284c:	cmp	x4, x2, asr #63
  432850:	b.ne	432c64 <argp_usage@@Base+0x5784>  // b.any
  432854:	cmn	w21, #0x1
  432858:	b.ne	4329d0 <argp_usage@@Base+0x54f0>  // b.any
  43285c:	sub	w28, w8, w28
  432860:	sxtw	x28, w28
  432864:	adds	x2, x2, x28
  432868:	mov	x4, x2
  43286c:	b.vs	432c64 <argp_usage@@Base+0x5784>
  432870:	ldrb	w28, [x0, #1]!
  432874:	sub	w7, w28, #0x30
  432878:	cmp	w7, #0x9
  43287c:	b.ls	432844 <argp_usage@@Base+0x5364>  // b.plast
  432880:	and	w28, w28, #0xfffffffd
  432884:	cmp	w28, #0x2c
  432888:	b.ne	432a08 <argp_usage@@Base+0x5528>  // b.any
  43288c:	ldrb	w1, [x0, #1]
  432890:	sub	w1, w1, #0x30
  432894:	cmp	w1, #0x9
  432898:	b.hi	432a08 <argp_usage@@Base+0x5528>  // b.pmore
  43289c:	add	x0, x0, #0x2
  4328a0:	mov	w7, #0x8                   	// #8
  4328a4:	mov	w8, #0xa                   	// #10
  4328a8:	ldrb	w3, [x0]
  4328ac:	mul	w1, w1, w8
  4328b0:	sub	w3, w3, #0x30
  4328b4:	cmp	w3, #0x9
  4328b8:	b.hi	4328c4 <argp_usage@@Base+0x53e4>  // b.pmore
  4328bc:	add	x0, x0, #0x1
  4328c0:	add	w1, w1, w3
  4328c4:	subs	w7, w7, #0x1
  4328c8:	b.ne	4328a8 <argp_usage@@Base+0x53c8>  // b.any
  4328cc:	cmn	w21, #0x1
  4328d0:	b.ne	4328f0 <argp_usage@@Base+0x5410>  // b.any
  4328d4:	ldrb	w3, [x0]
  4328d8:	sub	w7, w3, #0x30
  4328dc:	cmp	w7, #0x9
  4328e0:	b.hi	432900 <argp_usage@@Base+0x5420>  // b.pmore
  4328e4:	cmp	w3, #0x30
  4328e8:	b.eq	4329d8 <argp_usage@@Base+0x54f8>  // b.none
  4328ec:	add	w1, w1, #0x1
  4328f0:	ldrb	w3, [x0]
  4328f4:	sub	w3, w3, #0x30
  4328f8:	cmp	w3, #0x9
  4328fc:	b.ls	4329e0 <argp_usage@@Base+0x5500>  // b.plast
  432900:	cmp	w21, #0x0
  432904:	ccmp	w1, #0x0, #0x4, lt  // lt = tstop
  432908:	b.ne	4329e8 <argp_usage@@Base+0x5508>  // b.any
  43290c:	cmp	w21, #0x0
  432910:	str	x0, [x24]
  432914:	cset	w0, eq  // eq = none
  432918:	sxtw	x1, w1
  43291c:	add	w27, w0, #0x114
  432920:	str	x1, [sp, #128]
  432924:	str	x4, [sp, #272]
  432928:	ldr	x0, [sp, #96]
  43292c:	add	x0, x0, #0x9fa
  432930:	ldrb	w0, [x0, w27, sxtw]
  432934:	add	w20, w0, w20
  432938:	cmp	w20, #0x70
  43293c:	b.hi	432d28 <argp_usage@@Base+0x5848>  // b.pmore
  432940:	ldr	x2, [sp, #136]
  432944:	sxtw	x1, w20
  432948:	ldrsb	w2, [x2, w20, sxtw]
  43294c:	cmp	w2, w0
  432950:	b.ne	432d28 <argp_usage@@Base+0x5848>  // b.any
  432954:	ldr	x0, [sp, #96]
  432958:	add	x0, x0, #0xb81
  43295c:	ldrb	w0, [x0, x1]
  432960:	str	w0, [sp, #112]
  432964:	cbz	w0, 432dac <argp_usage@@Base+0x58cc>
  432968:	ldr	w0, [sp, #116]
  43296c:	add	x26, x26, #0x38
  432970:	ldr	w1, [sp, #116]
  432974:	mov	x2, #0x38                  	// #56
  432978:	cmp	w0, #0x0
  43297c:	mov	w27, #0xfffffffe            	// #-2
  432980:	cset	w0, ne  // ne = any
  432984:	sub	w0, w1, w0
  432988:	str	w0, [sp, #116]
  43298c:	ldr	x0, [sp, #128]
  432990:	str	x0, [sp, #280]
  432994:	ldr	x0, [sp, #144]
  432998:	add	x1, sp, #0x110
  43299c:	str	x0, [sp, #288]
  4329a0:	mov	x0, x26
  4329a4:	bl	404200 <memcpy@plt>
  4329a8:	ldr	x0, [sp, #104]
  4329ac:	ldr	w19, [sp, #112]
  4329b0:	add	x0, x0, #0x2
  4329b4:	str	x0, [sp, #104]
  4329b8:	b	432770 <argp_usage@@Base+0x5290>
  4329bc:	add	x1, x21, #0x1
  4329c0:	str	x1, [x24]
  4329c4:	b	4327c8 <argp_usage@@Base+0x52e8>
  4329c8:	mov	w21, #0x0                   	// #0
  4329cc:	b	432830 <argp_usage@@Base+0x5350>
  4329d0:	sub	w28, w28, #0x30
  4329d4:	b	432860 <argp_usage@@Base+0x5380>
  4329d8:	add	x0, x0, #0x1
  4329dc:	b	4328d4 <argp_usage@@Base+0x53f4>
  4329e0:	add	x0, x0, #0x1
  4329e4:	b	4328f0 <argp_usage@@Base+0x5410>
  4329e8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  4329ec:	cmp	x2, x3
  4329f0:	b.eq	432c64 <argp_usage@@Base+0x5784>  // b.none
  4329f4:	sub	x4, x2, #0x1
  4329f8:	mov	w2, #0xca00                	// #51712
  4329fc:	movk	w2, #0x3b9a, lsl #16
  432a00:	sub	w1, w2, w1
  432a04:	b	43290c <argp_usage@@Base+0x542c>
  432a08:	lsr	w1, w21, #31
  432a0c:	cmp	w21, #0x0
  432a10:	strb	w1, [sp, #272]
  432a14:	sub	x1, x0, x3
  432a18:	str	x0, [x24]
  432a1c:	mov	w0, #0x113                 	// #275
  432a20:	str	x2, [sp, #128]
  432a24:	str	x1, [sp, #144]
  432a28:	mov	w1, #0x112                 	// #274
  432a2c:	csel	w27, w1, w0, ne  // ne = any
  432a30:	b	432928 <argp_usage@@Base+0x5448>
  432a34:	mov	w0, w28
  432a38:	bl	4434e8 <_obstack_memory_used@@Base+0xb868>
  432a3c:	ands	w0, w0, #0xff
  432a40:	str	w0, [sp, #112]
  432a44:	b.eq	432cc0 <argp_usage@@Base+0x57e0>  // b.none
  432a48:	add	x23, sp, #0xd0
  432a4c:	mov	x21, x23
  432a50:	add	x27, x23, #0x13
  432a54:	cmp	x23, x27
  432a58:	b.cs	432a60 <argp_usage@@Base+0x5580>  // b.hs, b.nlast
  432a5c:	strb	w28, [x23], #1
  432a60:	ldr	x0, [x24]
  432a64:	add	x1, x0, #0x1
  432a68:	str	x1, [x24]
  432a6c:	ldrb	w28, [x0, #1]
  432a70:	mov	w0, w28
  432a74:	bl	4434e8 <_obstack_memory_used@@Base+0xb868>
  432a78:	ands	w25, w0, #0xff
  432a7c:	b.ne	432a54 <argp_usage@@Base+0x5574>  // b.any
  432a80:	cmp	w28, #0x2e
  432a84:	b.eq	432a54 <argp_usage@@Base+0x5574>  // b.none
  432a88:	strb	wzr, [x23]
  432a8c:	mov	x23, x21
  432a90:	ldrb	w0, [x23]
  432a94:	cbnz	w0, 432b7c <argp_usage@@Base+0x569c>
  432a98:	ldr	x0, [sp, #96]
  432a9c:	add	x27, x0, #0x3f8
  432aa0:	ldr	x1, [x27]
  432aa4:	mov	x0, x21
  432aa8:	cbnz	x1, 432b88 <argp_usage@@Base+0x56a8>
  432aac:	bl	404280 <strlen@plt>
  432ab0:	mov	x23, x0
  432ab4:	cmp	x0, #0x3
  432ab8:	b.eq	432b98 <argp_usage@@Base+0x56b8>  // b.none
  432abc:	cmp	x0, #0x4
  432ac0:	b.ne	432ba0 <argp_usage@@Base+0x56c0>  // b.any
  432ac4:	ldrb	w0, [sp, #211]
  432ac8:	cmp	w0, #0x2e
  432acc:	cset	w28, eq  // eq = none
  432ad0:	ldr	x0, [sp, #96]
  432ad4:	add	x27, x0, #0x448
  432ad8:	ldr	x1, [x27]
  432adc:	cbnz	x1, 432ba8 <argp_usage@@Base+0x56c8>
  432ae0:	mov	x1, x21
  432ae4:	mov	x0, x24
  432ae8:	bl	432114 <argp_usage@@Base+0x4c34>
  432aec:	mov	x27, x0
  432af0:	cbnz	x0, 432c9c <argp_usage@@Base+0x57bc>
  432af4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  432af8:	mov	x0, x21
  432afc:	add	x1, x1, #0x77c
  432b00:	bl	404a30 <strcmp@plt>
  432b04:	cbz	w0, 432c94 <argp_usage@@Base+0x57b4>
  432b08:	ldr	x0, [sp, #96]
  432b0c:	add	x27, x0, #0x5d8
  432b10:	ldr	x1, [x27]
  432b14:	cbnz	x1, 432bd8 <argp_usage@@Base+0x56f8>
  432b18:	sub	x28, x23, #0x1
  432b1c:	ldrb	w0, [x21, x28]
  432b20:	cmp	w0, #0x53
  432b24:	b.ne	432b44 <argp_usage@@Base+0x5664>  // b.any
  432b28:	ldr	x0, [sp, #96]
  432b2c:	strb	wzr, [x21, x28]
  432b30:	add	x27, x0, #0x5d8
  432b34:	ldr	x1, [x27]
  432b38:	cbnz	x1, 432bec <argp_usage@@Base+0x570c>
  432b3c:	mov	w0, #0x53                  	// #83
  432b40:	strb	w0, [x21, x28]
  432b44:	ldr	x0, [sp, #96]
  432b48:	add	x27, x0, #0x688
  432b4c:	ldr	x1, [x27]
  432b50:	cbnz	x1, 432c00 <argp_usage@@Base+0x5720>
  432b54:	cmp	x23, #0x1
  432b58:	b.ne	432b70 <argp_usage@@Base+0x5690>  // b.any
  432b5c:	ldr	x0, [sp, #96]
  432b60:	ldrb	w1, [sp, #208]
  432b64:	add	x27, x0, #0x7d8
  432b68:	ldr	x0, [x27]
  432b6c:	cbnz	x0, 432c14 <argp_usage@@Base+0x5734>
  432b70:	mov	x1, x21
  432b74:	mov	x0, x21
  432b78:	b	432c38 <argp_usage@@Base+0x5758>
  432b7c:	bl	443644 <_obstack_memory_used@@Base+0xb9c4>
  432b80:	strb	w0, [x23], #1
  432b84:	b	432a90 <argp_usage@@Base+0x55b0>
  432b88:	bl	404a30 <strcmp@plt>
  432b8c:	cbz	w0, 432c9c <argp_usage@@Base+0x57bc>
  432b90:	add	x27, x27, #0x10
  432b94:	b	432aa0 <argp_usage@@Base+0x55c0>
  432b98:	mov	w28, #0x1                   	// #1
  432b9c:	b	432ad0 <argp_usage@@Base+0x55f0>
  432ba0:	mov	w28, #0x0                   	// #0
  432ba4:	b	432ad0 <argp_usage@@Base+0x55f0>
  432ba8:	cbz	w28, 432bcc <argp_usage@@Base+0x56ec>
  432bac:	mov	x0, x21
  432bb0:	mov	x2, #0x3                   	// #3
  432bb4:	bl	4046a0 <strncmp@plt>
  432bb8:	cmp	w0, #0x0
  432bbc:	cset	w0, eq  // eq = none
  432bc0:	cbnz	w0, 432c9c <argp_usage@@Base+0x57bc>
  432bc4:	add	x27, x27, #0x10
  432bc8:	b	432ad8 <argp_usage@@Base+0x55f8>
  432bcc:	mov	x0, x21
  432bd0:	bl	404a30 <strcmp@plt>
  432bd4:	b	432bb8 <argp_usage@@Base+0x56d8>
  432bd8:	mov	x0, x21
  432bdc:	bl	404a30 <strcmp@plt>
  432be0:	cbz	w0, 432c9c <argp_usage@@Base+0x57bc>
  432be4:	add	x27, x27, #0x10
  432be8:	b	432b10 <argp_usage@@Base+0x5630>
  432bec:	mov	x0, x21
  432bf0:	bl	404a30 <strcmp@plt>
  432bf4:	cbz	w0, 432c9c <argp_usage@@Base+0x57bc>
  432bf8:	add	x27, x27, #0x10
  432bfc:	b	432b34 <argp_usage@@Base+0x5654>
  432c00:	mov	x0, x21
  432c04:	bl	404a30 <strcmp@plt>
  432c08:	cbz	w0, 432c9c <argp_usage@@Base+0x57bc>
  432c0c:	add	x27, x27, #0x10
  432c10:	b	432b4c <argp_usage@@Base+0x566c>
  432c14:	ldrb	w0, [x0]
  432c18:	cmp	w0, w1
  432c1c:	b.eq	432c9c <argp_usage@@Base+0x57bc>  // b.none
  432c20:	add	x27, x27, #0x10
  432c24:	b	432b68 <argp_usage@@Base+0x5688>
  432c28:	cmp	w2, #0x2e
  432c2c:	b.eq	432c6c <argp_usage@@Base+0x578c>  // b.none
  432c30:	add	x0, x0, #0x1
  432c34:	add	x1, x1, #0x1
  432c38:	ldrb	w2, [x1]
  432c3c:	strb	w2, [x0]
  432c40:	cbnz	w2, 432c28 <argp_usage@@Base+0x5748>
  432c44:	cbz	w25, 432c5c <argp_usage@@Base+0x577c>
  432c48:	mov	x1, x21
  432c4c:	mov	x0, x24
  432c50:	bl	432114 <argp_usage@@Base+0x4c34>
  432c54:	mov	x27, x0
  432c58:	cbnz	x0, 432c9c <argp_usage@@Base+0x57bc>
  432c5c:	ldrb	w0, [x24, #217]
  432c60:	cbnz	w0, 432c74 <argp_usage@@Base+0x5794>
  432c64:	mov	w27, #0x3f                  	// #63
  432c68:	b	432928 <argp_usage@@Base+0x5448>
  432c6c:	ldr	w25, [sp, #112]
  432c70:	b	432c34 <argp_usage@@Base+0x5754>
  432c74:	mov	w2, #0x5                   	// #5
  432c78:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  432c7c:	mov	x0, #0x0                   	// #0
  432c80:	add	x1, x1, #0x80b
  432c84:	bl	404d00 <dcgettext@plt>
  432c88:	mov	x1, x21
  432c8c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  432c90:	b	432c64 <argp_usage@@Base+0x5784>
  432c94:	ldr	x0, [sp, #96]
  432c98:	add	x27, x0, #0x978
  432c9c:	ldrsw	x0, [x27, #12]
  432ca0:	ldr	w27, [x27, #8]
  432ca4:	str	x0, [sp, #272]
  432ca8:	cmp	w27, #0x0
  432cac:	b.le	432d1c <argp_usage@@Base+0x583c>
  432cb0:	cmp	w27, #0x115
  432cb4:	b.le	432928 <argp_usage@@Base+0x5448>
  432cb8:	mov	w0, #0x2                   	// #2
  432cbc:	b	432934 <argp_usage@@Base+0x5454>
  432cc0:	cmp	w28, #0x28
  432cc4:	b.eq	432ce0 <argp_usage@@Base+0x5800>  // b.none
  432cc8:	add	x0, x21, #0x1
  432ccc:	str	x0, [x24]
  432cd0:	ldrb	w27, [x21]
  432cd4:	cbnz	w27, 432928 <argp_usage@@Base+0x5448>
  432cd8:	mov	w0, #0x0                   	// #0
  432cdc:	b	432934 <argp_usage@@Base+0x5454>
  432ce0:	mov	x0, #0x0                   	// #0
  432ce4:	ldr	x1, [x24]
  432ce8:	add	x2, x1, #0x1
  432cec:	str	x2, [x24]
  432cf0:	ldrb	w1, [x1]
  432cf4:	cbz	w1, 432d1c <argp_usage@@Base+0x583c>
  432cf8:	cmp	w1, #0x28
  432cfc:	b.ne	432d0c <argp_usage@@Base+0x582c>  // b.any
  432d00:	add	x0, x0, #0x1
  432d04:	cbnz	x0, 432ce4 <argp_usage@@Base+0x5804>
  432d08:	b	4327c8 <argp_usage@@Base+0x52e8>
  432d0c:	cmp	w1, #0x29
  432d10:	cset	x1, eq  // eq = none
  432d14:	sub	x0, x0, x1
  432d18:	b	432d04 <argp_usage@@Base+0x5824>
  432d1c:	mov	w0, #0x0                   	// #0
  432d20:	mov	w27, #0x0                   	// #0
  432d24:	b	432934 <argp_usage@@Base+0x5454>
  432d28:	ldr	x0, [sp, #96]
  432d2c:	ldr	x1, [sp, #120]
  432d30:	add	x0, x0, #0xbf2
  432d34:	ldrb	w0, [x0, x1]
  432d38:	str	w0, [sp, #112]
  432d3c:	cbnz	w0, 432dac <argp_usage@@Base+0x58cc>
  432d40:	ldr	w0, [sp, #116]
  432d44:	cmp	w0, #0x3
  432d48:	b.eq	433804 <argp_usage@@Base+0x6324>  // b.none
  432d4c:	ldr	x0, [sp, #96]
  432d50:	add	x1, x0, #0x988
  432d54:	add	x2, x0, #0xb81
  432d58:	ldrsb	w0, [x1, w19, sxtw]
  432d5c:	cmn	w0, #0x5d
  432d60:	b.eq	432d90 <argp_usage@@Base+0x58b0>  // b.none
  432d64:	add	w0, w0, #0x1
  432d68:	cmp	w0, #0x70
  432d6c:	b.hi	432d90 <argp_usage@@Base+0x58b0>  // b.pmore
  432d70:	ldr	x4, [sp, #136]
  432d74:	sxtw	x3, w0
  432d78:	ldrsb	w0, [x4, w0, sxtw]
  432d7c:	cmp	w0, #0x1
  432d80:	b.ne	432d90 <argp_usage@@Base+0x58b0>  // b.any
  432d84:	ldrb	w0, [x2, x3]
  432d88:	str	w0, [sp, #112]
  432d8c:	cbnz	w0, 43381c <argp_usage@@Base+0x633c>
  432d90:	ldr	x0, [sp, #104]
  432d94:	cmp	x0, x22
  432d98:	b.eq	4330b0 <argp_usage@@Base+0x5bd0>  // b.none
  432d9c:	ldrsh	w19, [x0, #-2]!
  432da0:	sub	x26, x26, #0x38
  432da4:	str	x0, [sp, #104]
  432da8:	b	432d58 <argp_usage@@Base+0x5878>
  432dac:	ldr	x0, [sp, #96]
  432db0:	mov	w3, #0x1                   	// #1
  432db4:	ldr	w1, [sp, #112]
  432db8:	mov	x2, #0x38                  	// #56
  432dbc:	add	x0, x0, #0xc64
  432dc0:	ldrb	w0, [x0, w1, sxtw]
  432dc4:	str	w0, [sp, #120]
  432dc8:	sub	w19, w3, w0
  432dcc:	mov	w0, #0x38                  	// #56
  432dd0:	smull	x19, w19, w0
  432dd4:	add	x0, sp, #0x148
  432dd8:	add	x22, x26, x19
  432ddc:	mov	x1, x22
  432de0:	bl	404200 <memcpy@plt>
  432de4:	ldr	w0, [sp, #112]
  432de8:	mov	w3, #0x1                   	// #1
  432dec:	ldr	x20, [x26, x19]
  432df0:	sub	w1, w0, #0x4
  432df4:	cmp	w1, #0x57
  432df8:	ldp	x21, x19, [x22, #8]
  432dfc:	ldp	x25, x28, [x22, #24]
  432e00:	ldr	x23, [x22, #40]
  432e04:	ldr	w22, [x22, #48]
  432e08:	b.hi	432e40 <argp_usage@@Base+0x5960>  // b.pmore
  432e0c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x17380>
  432e10:	add	x0, x0, #0x438
  432e14:	ldrh	w0, [x0, w1, uxtw #1]
  432e18:	adr	x1, 432e24 <argp_usage@@Base+0x5944>
  432e1c:	add	x0, x1, w0, sxth #2
  432e20:	br	x0
  432e24:	mov	w22, #0x0                   	// #0
  432e28:	mov	x23, #0x0                   	// #0
  432e2c:	mov	x28, #0x0                   	// #0
  432e30:	mov	x25, #0x0                   	// #0
  432e34:	mov	x19, #0x0                   	// #0
  432e38:	mov	x21, #0x0                   	// #0
  432e3c:	mov	x20, #0x1                   	// #1
  432e40:	ldr	w1, [sp, #120]
  432e44:	mov	w0, #0x38                  	// #56
  432e48:	mov	x2, #0x38                  	// #56
  432e4c:	stp	x20, x21, [sp, #328]
  432e50:	stp	x19, x25, [sp, #344]
  432e54:	umsubl	x6, w1, w0, x26
  432e58:	ldr	x1, [sp, #104]
  432e5c:	add	x26, x6, #0x38
  432e60:	ldr	x0, [sp, #120]
  432e64:	stp	x28, x23, [sp, #360]
  432e68:	str	w22, [sp, #376]
  432e6c:	sub	x0, x1, w0, uxtb #1
  432e70:	add	x1, sp, #0x148
  432e74:	str	x0, [sp, #104]
  432e78:	mov	x0, x26
  432e7c:	bl	404200 <memcpy@plt>
  432e80:	ldr	x0, [sp, #96]
  432e84:	ldr	w1, [sp, #112]
  432e88:	add	x0, x0, #0xcc0
  432e8c:	ldrb	w0, [x0, w1, sxtw]
  432e90:	ldr	x1, [sp, #104]
  432e94:	sub	w0, w0, #0x1c
  432e98:	sxtw	x3, w0
  432e9c:	ldrsh	w2, [x1]
  432ea0:	ldr	x1, [sp, #96]
  432ea4:	add	x1, x1, #0xd1c
  432ea8:	ldrsb	w0, [x1, w0, sxtw]
  432eac:	add	w0, w0, w2
  432eb0:	cmp	w0, #0x70
  432eb4:	b.hi	4337f4 <argp_usage@@Base+0x6314>  // b.pmore
  432eb8:	ldr	x4, [sp, #136]
  432ebc:	sxtw	x1, w0
  432ec0:	ldrsb	w0, [x4, w0, sxtw]
  432ec4:	cmp	w0, w2
  432ec8:	b.ne	4337f4 <argp_usage@@Base+0x6314>  // b.any
  432ecc:	ldr	x0, [sp, #96]
  432ed0:	add	x0, x0, #0xb81
  432ed4:	ldrb	w0, [x0, x1]
  432ed8:	str	w0, [sp, #112]
  432edc:	b	4329a8 <argp_usage@@Base+0x54c8>
  432ee0:	ldp	x0, x1, [x26]
  432ee4:	stp	x0, x1, [x24, #88]
  432ee8:	mov	w2, #0x5                   	// #5
  432eec:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  432ef0:	add	x1, x1, #0x825
  432ef4:	mov	w0, #0x1                   	// #1
  432ef8:	strb	w0, [x24, #160]
  432efc:	mov	x0, #0x0                   	// #0
  432f00:	bl	404d00 <dcgettext@plt>
  432f04:	mov	x1, x24
  432f08:	bl	432450 <argp_usage@@Base+0x4f70>
  432f0c:	b	432e40 <argp_usage@@Base+0x5960>
  432f10:	ldr	x0, [x24, #200]
  432f14:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  432f18:	mov	w2, #0x5                   	// #5
  432f1c:	add	x1, x1, #0x837
  432f20:	add	x0, x0, #0x1
  432f24:	str	x0, [x24, #200]
  432f28:	ldr	x0, [x24, #168]
  432f2c:	add	x0, x0, #0x1
  432f30:	str	x0, [x24, #168]
  432f34:	b	432efc <argp_usage@@Base+0x5a1c>
  432f38:	ldr	x0, [x24, #200]
  432f3c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x13380>
  432f40:	mov	w2, #0x5                   	// #5
  432f44:	add	x1, x1, #0x737
  432f48:	add	x0, x0, #0x1
  432f4c:	str	x0, [x24, #200]
  432f50:	b	432efc <argp_usage@@Base+0x5a1c>
  432f54:	ldr	x0, [x24, #184]
  432f58:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  432f5c:	mov	w2, #0x5                   	// #5
  432f60:	add	x1, x1, #0x840
  432f64:	add	x0, x0, #0x1
  432f68:	str	x0, [x24, #184]
  432f6c:	b	432efc <argp_usage@@Base+0x5a1c>
  432f70:	ldr	x0, [x24, #208]
  432f74:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  432f78:	mov	w2, #0x5                   	// #5
  432f7c:	add	x1, x1, #0x846
  432f80:	add	x0, x0, #0x1
  432f84:	str	x0, [x24, #208]
  432f88:	b	432efc <argp_usage@@Base+0x5a1c>
  432f8c:	ldr	x0, [x24, #168]
  432f90:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  432f94:	mov	w2, #0x5                   	// #5
  432f98:	add	x1, x1, #0x460
  432f9c:	add	x0, x0, #0x1
  432fa0:	str	x0, [x24, #168]
  432fa4:	b	432efc <argp_usage@@Base+0x5a1c>
  432fa8:	ldr	x0, [x24, #176]
  432fac:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  432fb0:	mov	w2, #0x5                   	// #5
  432fb4:	add	x1, x1, #0x84b
  432fb8:	add	x0, x0, #0x1
  432fbc:	str	x0, [x24, #176]
  432fc0:	b	432efc <argp_usage@@Base+0x5a1c>
  432fc4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x12380>
  432fc8:	mov	w2, #0x5                   	// #5
  432fcc:	add	x1, x1, #0x4ee
  432fd0:	b	432efc <argp_usage@@Base+0x5a1c>
  432fd4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  432fd8:	add	x1, x1, #0x858
  432fdc:	mov	w2, #0x5                   	// #5
  432fe0:	mov	x0, #0x0                   	// #0
  432fe4:	bl	404d00 <dcgettext@plt>
  432fe8:	mov	x1, x24
  432fec:	bl	4321ac <argp_usage@@Base+0x4ccc>
  432ff0:	b	432e40 <argp_usage@@Base+0x5960>
  432ff4:	ldur	x0, [x26, #-48]
  432ff8:	stp	x0, xzr, [x24, #72]
  432ffc:	stp	xzr, xzr, [x24, #88]
  433000:	ldr	x0, [x26]
  433004:	str	w0, [x24, #28]
  433008:	b	432e40 <argp_usage@@Base+0x5960>
  43300c:	ldur	x1, [x26, #-160]
  433010:	ldur	x0, [x26, #-48]
  433014:	stp	x1, x0, [x24, #72]
  433018:	b	432ffc <argp_usage@@Base+0x5b1c>
  43301c:	sub	x2, x26, #0x118
  433020:	ldur	x0, [x26, #-56]
  433024:	str	x0, [x24, #88]
  433028:	ldursw	x0, [x26, #-48]
  43302c:	ldur	x1, [x26, #-160]
  433030:	str	x0, [x24, #96]
  433034:	ldr	x2, [x2, #8]
  433038:	stp	x2, x1, [x24, #72]
  43303c:	b	433000 <argp_usage@@Base+0x5b20>
  433040:	ldur	x0, [x26, #-48]
  433044:	stp	x0, xzr, [x24, #72]
  433048:	stp	xzr, xzr, [x24, #88]
  43304c:	mov	w0, #0x2                   	// #2
  433050:	b	433004 <argp_usage@@Base+0x5b24>
  433054:	ldur	x1, [x26, #-160]
  433058:	ldur	x0, [x26, #-48]
  43305c:	stp	x1, x0, [x24, #72]
  433060:	b	433048 <argp_usage@@Base+0x5b68>
  433064:	sub	x2, x26, #0x118
  433068:	ldur	x0, [x26, #-56]
  43306c:	str	x0, [x24, #88]
  433070:	ldursw	x0, [x26, #-48]
  433074:	ldur	x1, [x26, #-160]
  433078:	str	x0, [x24, #96]
  43307c:	ldr	x2, [x2, #8]
  433080:	stp	x2, x1, [x24, #72]
  433084:	b	43304c <argp_usage@@Base+0x5b6c>
  433088:	ldp	x2, x3, [x26, #-48]
  43308c:	ldr	x0, [x24, #208]
  433090:	ldurb	w1, [x26, #-56]
  433094:	ldr	x4, [x26]
  433098:	add	x0, x0, #0x1
  43309c:	str	x0, [x24, #208]
  4330a0:	add	x0, x24, #0x18
  4330a4:	bl	43208c <argp_usage@@Base+0x4bac>
  4330a8:	tst	w0, #0xff
  4330ac:	b.ne	432e40 <argp_usage@@Base+0x5960>  // b.any
  4330b0:	mov	w0, #0x1                   	// #1
  4330b4:	ldp	x29, x30, [sp]
  4330b8:	ldp	x19, x20, [sp, #16]
  4330bc:	ldp	x21, x22, [sp, #32]
  4330c0:	ldp	x23, x24, [sp, #48]
  4330c4:	ldp	x25, x26, [sp, #64]
  4330c8:	ldp	x27, x28, [sp, #80]
  4330cc:	add	sp, sp, #0x5e0
  4330d0:	ret
  4330d4:	ldr	x0, [x26]
  4330d8:	str	w0, [x24, #20]
  4330dc:	b	432e40 <argp_usage@@Base+0x5960>
  4330e0:	ldr	x0, [x24, #192]
  4330e4:	str	w3, [x24, #20]
  4330e8:	add	x0, x0, #0x1
  4330ec:	str	x0, [x24, #192]
  4330f0:	b	432e40 <argp_usage@@Base+0x5960>
  4330f4:	ldr	x0, [x26]
  4330f8:	str	w0, [x24, #24]
  4330fc:	b	432e40 <argp_usage@@Base+0x5960>
  433100:	mov	w0, #0x6270                	// #25200
  433104:	b	4330f8 <argp_usage@@Base+0x5c18>
  433108:	ldur	x0, [x26, #-56]
  43310c:	str	w0, [x24, #24]
  433110:	ldp	x4, x7, [x26, #32]
  433114:	ldr	w8, [x26, #48]
  433118:	ldr	w0, [x24, #152]
  43311c:	ldp	x2, x3, [x26, #16]
  433120:	adds	w0, w0, w8
  433124:	ldr	x8, [x24, #144]
  433128:	cset	w9, vs
  43312c:	str	w0, [x24, #152]
  433130:	adds	x8, x8, x7
  433134:	ldr	x7, [x24, #136]
  433138:	cset	x10, vs
  43313c:	ldp	x11, x1, [x26]
  433140:	adds	x7, x7, x4
  433144:	ldr	x4, [x24, #128]
  433148:	cset	x0, vs
  43314c:	stp	x7, x8, [x24, #136]
  433150:	adds	x4, x4, x3
  433154:	ldr	x3, [x24, #120]
  433158:	cset	x7, vs
  43315c:	orr	x0, x0, x7
  433160:	adds	x3, x3, x2
  433164:	stp	x3, x4, [x24, #120]
  433168:	cset	x4, vs
  43316c:	ldr	x2, [x24, #112]
  433170:	adds	x2, x2, x1
  433174:	ldr	x1, [x24, #104]
  433178:	cset	x3, vs
  43317c:	adds	x1, x1, x11
  433180:	stp	x1, x2, [x24, #104]
  433184:	orr	x2, x4, x3
  433188:	orr	w0, w0, w2
  43318c:	orr	w1, w9, w10
  433190:	orr	w0, w0, w1
  433194:	csinc	w0, w0, wzr, vc
  433198:	cbnz	w0, 4330b0 <argp_usage@@Base+0x5bd0>
  43319c:	mov	w0, #0x1                   	// #1
  4331a0:	strb	w0, [x24, #161]
  4331a4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4331a8:	mov	w2, #0x5                   	// #5
  4331ac:	add	x1, x1, #0x84f
  4331b0:	b	432fe0 <argp_usage@@Base+0x5b00>
  4331b4:	ldp	x3, x4, [x26, #32]
  4331b8:	mov	w0, #0x6270                	// #25200
  4331bc:	ldr	w7, [x26, #48]
  4331c0:	str	w0, [x24, #24]
  4331c4:	ldr	w0, [x24, #152]
  4331c8:	ldr	x8, [x24, #144]
  4331cc:	adds	w0, w0, w7
  4331d0:	cset	w9, vs
  4331d4:	str	w0, [x24, #152]
  4331d8:	adds	x8, x8, x4
  4331dc:	ldp	x4, x7, [x24, #128]
  4331e0:	cset	x10, vs
  4331e4:	ldp	x12, x2, [x26, #16]
  4331e8:	ldp	x11, x1, [x26]
  4331ec:	adds	x7, x7, x3
  4331f0:	stp	x7, x8, [x24, #136]
  4331f4:	cset	x8, vs
  4331f8:	ldr	x3, [x24, #120]
  4331fc:	adds	x4, x4, x2
  433200:	ldr	x2, [x24, #112]
  433204:	cset	x7, vs
  433208:	adds	x3, x3, x12
  43320c:	str	x4, [x24, #128]
  433210:	cset	x0, vs
  433214:	adds	x2, x2, x1
  433218:	ldr	x1, [x24, #104]
  43321c:	stp	x2, x3, [x24, #112]
  433220:	cset	x3, vs
  433224:	orr	x0, x0, x3
  433228:	adds	x1, x1, x11
  43322c:	orr	x2, x8, x7
  433230:	str	x1, [x24, #104]
  433234:	b	433188 <argp_usage@@Base+0x5ca8>
  433238:	ldp	x2, x3, [x26, #-48]
  43323c:	add	x0, x24, #0x18
  433240:	ldurb	w1, [x26, #-56]
  433244:	ldr	x4, [x26]
  433248:	bl	43208c <argp_usage@@Base+0x4bac>
  43324c:	tst	w0, #0xff
  433250:	b.eq	4330b0 <argp_usage@@Base+0x5bd0>  // b.none
  433254:	ldur	x1, [x26, #-112]
  433258:	ldrsw	x0, [x24, #24]
  43325c:	adds	x0, x0, x1
  433260:	str	w0, [x24, #24]
  433264:	cset	w1, vs
  433268:	cmp	x0, w0, sxtw
  43326c:	csinc	w1, w1, wzr, eq  // eq = none
  433270:	cbz	w1, 432e40 <argp_usage@@Base+0x5960>
  433274:	b	4330b0 <argp_usage@@Base+0x5bd0>
  433278:	ldr	x0, [x26]
  43327c:	add	w0, w0, #0xe10
  433280:	b	4330f8 <argp_usage@@Base+0x5c18>
  433284:	ldur	x0, [x26, #-56]
  433288:	b	43327c <argp_usage@@Base+0x5d9c>
  43328c:	ldr	x0, [x26]
  433290:	str	xzr, [x24, #8]
  433294:	str	w0, [x24, #16]
  433298:	b	432e40 <argp_usage@@Base+0x5960>
  43329c:	str	xzr, [x24, #8]
  4332a0:	ldur	x0, [x26, #-56]
  4332a4:	b	433294 <argp_usage@@Base+0x5db4>
  4332a8:	ldur	x0, [x26, #-56]
  4332ac:	str	x0, [x24, #8]
  4332b0:	ldr	x0, [x26]
  4332b4:	str	w0, [x24, #16]
  4332b8:	mov	w0, #0x1                   	// #1
  4332bc:	strb	w0, [x24, #224]
  4332c0:	b	432e40 <argp_usage@@Base+0x5960>
  4332c4:	ldur	x0, [x26, #-48]
  4332c8:	b	4332ac <argp_usage@@Base+0x5dcc>
  4332cc:	ldur	x0, [x26, #-104]
  4332d0:	str	x0, [x24, #56]
  4332d4:	ldr	x0, [x26, #8]
  4332d8:	str	x0, [x24, #64]
  4332dc:	b	432e40 <argp_usage@@Base+0x5960>
  4332e0:	ldur	x4, [x26, #-208]
  4332e4:	add	x1, x24, #0x20
  4332e8:	str	x1, [sp, #152]
  4332ec:	sub	x5, x26, #0xe0
  4332f0:	ldrb	w0, [x24, #217]
  4332f4:	sub	x3, x26, #0x70
  4332f8:	cmp	x4, #0x3
  4332fc:	b.le	433354 <argp_usage@@Base+0x5e74>
  433300:	cbz	w0, 43333c <argp_usage@@Base+0x5e5c>
  433304:	mov	w2, #0x5                   	// #5
  433308:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  43330c:	mov	x0, #0x0                   	// #0
  433310:	add	x1, x1, #0x85f
  433314:	stp	x4, x5, [sp, #152]
  433318:	str	x3, [sp, #168]
  43331c:	bl	404d00 <dcgettext@plt>
  433320:	ldp	x4, x5, [sp, #152]
  433324:	str	x5, [sp, #152]
  433328:	ldr	x1, [x5, #8]
  43332c:	mov	x2, x4
  433330:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433334:	ldr	x5, [sp, #152]
  433338:	ldr	x3, [sp, #168]
  43333c:	ldp	x0, x1, [x5]
  433340:	stp	x0, x1, [x24, #32]
  433344:	ldr	x0, [x5, #16]
  433348:	str	x0, [x24, #48]
  43334c:	ldr	x0, [x3, #8]
  433350:	b	4332d0 <argp_usage@@Base+0x5df0>
  433354:	ldur	x1, [x26, #-216]
  433358:	str	x1, [sp, #152]
  43335c:	cbz	w0, 433384 <argp_usage@@Base+0x5ea4>
  433360:	mov	w2, #0x5                   	// #5
  433364:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433368:	mov	x0, #0x0                   	// #0
  43336c:	add	x1, x1, #0x897
  433370:	str	x3, [sp, #160]
  433374:	bl	404d00 <dcgettext@plt>
  433378:	ldr	x1, [sp, #152]
  43337c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433380:	ldr	x3, [sp, #160]
  433384:	ldr	x0, [sp, #152]
  433388:	str	x0, [x24, #56]
  43338c:	ldr	x0, [x3, #8]
  433390:	str	x0, [x24, #64]
  433394:	ldp	x0, x1, [x26]
  433398:	stp	x0, x1, [x24, #32]
  43339c:	b	4333c0 <argp_usage@@Base+0x5ee0>
  4333a0:	ldur	x0, [x26, #-104]
  4333a4:	str	x0, [x24, #64]
  4333a8:	ldur	x0, [x26, #-56]
  4333ac:	str	x0, [x24, #56]
  4333b0:	ldr	x0, [x26, #8]
  4333b4:	negs	x0, x0
  4333b8:	str	x0, [x24, #40]
  4333bc:	b.vs	4330b0 <argp_usage@@Base+0x5bd0>
  4333c0:	ldr	x0, [x26, #16]
  4333c4:	str	x0, [x24, #48]
  4333c8:	b	432e40 <argp_usage@@Base+0x5960>
  4333cc:	ldur	x0, [x26, #-112]
  4333d0:	str	x0, [x24, #56]
  4333d4:	ldur	x0, [x26, #-48]
  4333d8:	negs	x0, x0
  4333dc:	str	x0, [x24, #64]
  4333e0:	b.vc	4333b0 <argp_usage@@Base+0x5ed0>
  4333e4:	b	4330b0 <argp_usage@@Base+0x5bd0>
  4333e8:	ldur	x0, [x26, #-56]
  4333ec:	b	4332d0 <argp_usage@@Base+0x5df0>
  4333f0:	ldur	x0, [x26, #-168]
  4333f4:	str	x0, [x24, #56]
  4333f8:	ldur	x0, [x26, #-104]
  4333fc:	b	433390 <argp_usage@@Base+0x5eb0>
  433400:	ldur	x0, [x26, #-48]
  433404:	str	x0, [x24, #64]
  433408:	ldr	x0, [x26]
  43340c:	str	x0, [x24, #56]
  433410:	b	432e40 <argp_usage@@Base+0x5960>
  433414:	ldur	x0, [x26, #-104]
  433418:	str	x0, [x24, #64]
  43341c:	ldur	x0, [x26, #-56]
  433420:	str	x0, [x24, #56]
  433424:	b	433394 <argp_usage@@Base+0x5eb4>
  433428:	ldp	x0, x1, [x26, #-112]
  43342c:	stp	x0, x1, [x24, #32]
  433430:	ldur	x0, [x26, #-96]
  433434:	str	x0, [x24, #48]
  433438:	ldur	x0, [x26, #-48]
  43343c:	negs	x0, x0
  433440:	str	x0, [x24, #56]
  433444:	b.vs	4330b0 <argp_usage@@Base+0x5bd0>
  433448:	ldr	x0, [x26, #8]
  43344c:	negs	x0, x0
  433450:	str	x0, [x24, #64]
  433454:	b.vc	432e40 <argp_usage@@Base+0x5960>
  433458:	b	4330b0 <argp_usage@@Base+0x5bd0>
  43345c:	ldr	x16, [x26]
  433460:	ldr	w0, [x24, #152]
  433464:	ldur	w9, [x26, #-8]
  433468:	ldp	x10, x11, [x26, #-56]
  43346c:	ldp	x12, x14, [x26, #-40]
  433470:	ldp	x15, x13, [x26, #-24]
  433474:	ldp	x1, x2, [x24, #104]
  433478:	ldp	x3, x4, [x24, #120]
  43347c:	ldp	x7, x8, [x24, #136]
  433480:	tbz	w16, #31, 4334e4 <argp_usage@@Base+0x6004>
  433484:	subs	w0, w0, w9
  433488:	str	w0, [x24, #152]
  43348c:	cset	w9, vs
  433490:	subs	x8, x8, x13
  433494:	cset	x16, vs
  433498:	subs	x7, x7, x15
  43349c:	stp	x7, x8, [x24, #136]
  4334a0:	cset	x8, vs
  4334a4:	subs	x4, x4, x14
  4334a8:	cset	x7, vs
  4334ac:	subs	x3, x3, x12
  4334b0:	cset	x0, vs
  4334b4:	subs	x2, x2, x11
  4334b8:	stp	x2, x3, [x24, #112]
  4334bc:	cset	x3, vs
  4334c0:	orr	x0, x0, x3
  4334c4:	subs	x1, x1, x10
  4334c8:	orr	x2, x8, x7
  4334cc:	orr	w0, w0, w2
  4334d0:	str	x1, [x24, #104]
  4334d4:	orr	w1, w9, w16
  4334d8:	str	x4, [x24, #128]
  4334dc:	orr	w0, w0, w1
  4334e0:	b	43353c <argp_usage@@Base+0x605c>
  4334e4:	adds	w0, w0, w9
  4334e8:	str	w0, [x24, #152]
  4334ec:	cset	w9, vs
  4334f0:	adds	x8, x8, x13
  4334f4:	cset	x13, vs
  4334f8:	adds	x7, x7, x15
  4334fc:	cset	x0, vs
  433500:	adds	x4, x4, x14
  433504:	stp	x7, x8, [x24, #136]
  433508:	cset	x7, vs
  43350c:	adds	x3, x3, x12
  433510:	stp	x3, x4, [x24, #120]
  433514:	cset	x4, vs
  433518:	adds	x2, x2, x11
  43351c:	cset	x3, vs
  433520:	adds	x1, x1, x10
  433524:	orr	x0, x0, x7
  433528:	stp	x1, x2, [x24, #104]
  43352c:	orr	x1, x4, x3
  433530:	orr	w9, w9, w13
  433534:	orr	w0, w0, w1
  433538:	orr	w0, w0, w9
  43353c:	csinc	w0, w0, wzr, vc
  433540:	cbnz	w0, 4330b0 <argp_usage@@Base+0x5bd0>
  433544:	mov	w0, #0x1                   	// #1
  433548:	strb	w0, [x24, #161]
  43354c:	b	432e40 <argp_usage@@Base+0x5960>
  433550:	ldp	x4, x7, [x26, #32]
  433554:	ldr	w0, [x24, #152]
  433558:	ldr	w8, [x26, #48]
  43355c:	ldp	x2, x3, [x26, #16]
  433560:	adds	w0, w0, w8
  433564:	ldr	x8, [x24, #144]
  433568:	cset	w9, vs
  43356c:	str	w0, [x24, #152]
  433570:	adds	x8, x8, x7
  433574:	ldr	x7, [x24, #136]
  433578:	cset	x10, vs
  43357c:	ldp	x11, x1, [x26]
  433580:	adds	x7, x7, x4
  433584:	ldr	x4, [x24, #128]
  433588:	cset	x0, vs
  43358c:	stp	x7, x8, [x24, #136]
  433590:	adds	x4, x4, x3
  433594:	ldr	x3, [x24, #120]
  433598:	cset	x7, vs
  43359c:	orr	x0, x0, x7
  4335a0:	adds	x3, x3, x2
  4335a4:	stp	x3, x4, [x24, #120]
  4335a8:	cset	x4, vs
  4335ac:	ldr	x2, [x24, #112]
  4335b0:	adds	x2, x2, x1
  4335b4:	ldr	x1, [x24, #104]
  4335b8:	cset	x3, vs
  4335bc:	adds	x1, x1, x11
  4335c0:	stp	x1, x2, [x24, #104]
  4335c4:	orr	x2, x4, x3
  4335c8:	orr	w0, w0, w2
  4335cc:	orr	w1, w9, w10
  4335d0:	b	4334dc <argp_usage@@Base+0x5ffc>
  4335d4:	ldur	x20, [x26, #-56]
  4335d8:	mov	w22, #0x0                   	// #0
  4335dc:	mov	x23, #0x0                   	// #0
  4335e0:	mov	x28, #0x0                   	// #0
  4335e4:	mov	x25, #0x0                   	// #0
  4335e8:	mov	x19, #0x0                   	// #0
  4335ec:	mov	x21, #0x0                   	// #0
  4335f0:	b	432e40 <argp_usage@@Base+0x5960>
  4335f4:	ldur	x21, [x26, #-56]
  4335f8:	mov	w22, #0x0                   	// #0
  4335fc:	mov	x23, #0x0                   	// #0
  433600:	mov	x28, #0x0                   	// #0
  433604:	mov	x25, #0x0                   	// #0
  433608:	mov	x19, #0x0                   	// #0
  43360c:	b	433628 <argp_usage@@Base+0x6148>
  433610:	mov	w22, #0x0                   	// #0
  433614:	mov	x23, #0x0                   	// #0
  433618:	mov	x28, #0x0                   	// #0
  43361c:	mov	x25, #0x0                   	// #0
  433620:	mov	x19, #0x0                   	// #0
  433624:	mov	x21, #0x1                   	// #1
  433628:	mov	x20, #0x0                   	// #0
  43362c:	b	432e40 <argp_usage@@Base+0x5960>
  433630:	ldur	x0, [x26, #-56]
  433634:	ldr	x1, [x26]
  433638:	mul	x19, x0, x1
  43363c:	smulh	x0, x0, x1
  433640:	cmp	x0, x19, asr #63
  433644:	cset	x20, ne  // ne = any
  433648:	b.ne	4330b0 <argp_usage@@Base+0x5bd0>  // b.any
  43364c:	mov	x23, #0x0                   	// #0
  433650:	mov	x28, #0x0                   	// #0
  433654:	mov	x25, #0x0                   	// #0
  433658:	mov	x21, #0x0                   	// #0
  43365c:	mov	w22, #0x0                   	// #0
  433660:	b	432e40 <argp_usage@@Base+0x5960>
  433664:	ldur	x25, [x26, #-56]
  433668:	mov	w22, #0x0                   	// #0
  43366c:	mov	x23, #0x0                   	// #0
  433670:	mov	x28, #0x0                   	// #0
  433674:	b	433688 <argp_usage@@Base+0x61a8>
  433678:	mov	w22, #0x0                   	// #0
  43367c:	mov	x23, #0x0                   	// #0
  433680:	mov	x28, #0x0                   	// #0
  433684:	mov	x25, #0x1                   	// #1
  433688:	mov	x19, #0x0                   	// #0
  43368c:	mov	x21, #0x0                   	// #0
  433690:	b	433628 <argp_usage@@Base+0x6148>
  433694:	ldur	x28, [x26, #-56]
  433698:	mov	w22, #0x0                   	// #0
  43369c:	mov	x23, #0x0                   	// #0
  4336a0:	b	4336b0 <argp_usage@@Base+0x61d0>
  4336a4:	mov	w22, #0x0                   	// #0
  4336a8:	mov	x23, #0x0                   	// #0
  4336ac:	mov	x28, #0x1                   	// #1
  4336b0:	mov	x25, #0x0                   	// #0
  4336b4:	b	433688 <argp_usage@@Base+0x61a8>
  4336b8:	ldur	x23, [x26, #-56]
  4336bc:	mov	w22, #0x0                   	// #0
  4336c0:	b	4336cc <argp_usage@@Base+0x61ec>
  4336c4:	ldur	w22, [x26, #-48]
  4336c8:	ldur	x23, [x26, #-56]
  4336cc:	mov	x28, #0x0                   	// #0
  4336d0:	b	4336b0 <argp_usage@@Base+0x61d0>
  4336d4:	mov	w22, #0x0                   	// #0
  4336d8:	mov	x23, #0x1                   	// #1
  4336dc:	b	4336cc <argp_usage@@Base+0x61ec>
  4336e0:	ldur	x20, [x26, #-48]
  4336e4:	b	4335d8 <argp_usage@@Base+0x60f8>
  4336e8:	ldur	x21, [x26, #-48]
  4336ec:	b	4335f8 <argp_usage@@Base+0x6118>
  4336f0:	ldur	x0, [x26, #-48]
  4336f4:	b	433634 <argp_usage@@Base+0x6154>
  4336f8:	ldur	x25, [x26, #-48]
  4336fc:	b	433668 <argp_usage@@Base+0x6188>
  433700:	ldur	x28, [x26, #-48]
  433704:	b	433698 <argp_usage@@Base+0x61b8>
  433708:	ldur	x23, [x26, #-48]
  43370c:	b	4336bc <argp_usage@@Base+0x61dc>
  433710:	mov	w22, #0x0                   	// #0
  433714:	mov	x23, #0x0                   	// #0
  433718:	mov	x28, #0x0                   	// #0
  43371c:	mov	x25, #0x0                   	// #0
  433720:	ldr	x19, [x26]
  433724:	b	43368c <argp_usage@@Base+0x61ac>
  433728:	ldr	x20, [x26, #8]
  43372c:	b	4335ec <argp_usage@@Base+0x610c>
  433730:	ldp	x0, x1, [x26]
  433734:	stp	x0, x1, [sp, #176]
  433738:	ldr	x0, [x26, #16]
  43373c:	add	x1, sp, #0xb0
  433740:	str	x0, [sp, #192]
  433744:	mov	x0, x24
  433748:	bl	431d30 <argp_usage@@Base+0x4850>
  43374c:	b	432e40 <argp_usage@@Base+0x5960>
  433750:	ldp	x0, x1, [x26, #-56]
  433754:	stp	x0, x1, [sp, #176]
  433758:	ldur	x0, [x26, #-40]
  43375c:	add	x1, sp, #0xb0
  433760:	str	x0, [sp, #192]
  433764:	mov	x0, x24
  433768:	bl	431d30 <argp_usage@@Base+0x4850>
  43376c:	ldr	w0, [x24, #152]
  433770:	ldr	w7, [x26, #48]
  433774:	ldp	x3, x4, [x26, #32]
  433778:	adds	w0, w0, w7
  43377c:	ldp	x7, x8, [x24, #136]
  433780:	cset	w9, vs
  433784:	ldp	x12, x2, [x26, #16]
  433788:	str	w0, [x24, #152]
  43378c:	ldp	x11, x1, [x26]
  433790:	adds	x8, x8, x4
  433794:	cset	x10, vs
  433798:	adds	x7, x7, x3
  43379c:	ldp	x3, x4, [x24, #120]
  4337a0:	stp	x7, x8, [x24, #136]
  4337a4:	cset	x8, vs
  4337a8:	adds	x4, x4, x2
  4337ac:	str	x4, [x24, #128]
  4337b0:	ldr	x2, [x24, #112]
  4337b4:	cset	x7, vs
  4337b8:	adds	x3, x3, x12
  4337bc:	cset	x0, vs
  4337c0:	adds	x2, x2, x1
  4337c4:	ldr	x1, [x24, #104]
  4337c8:	stp	x2, x3, [x24, #112]
  4337cc:	cset	x3, vs
  4337d0:	orr	x0, x0, x3
  4337d4:	adds	x1, x1, x11
  4337d8:	orr	x2, x8, x7
  4337dc:	str	x1, [x24, #104]
  4337e0:	b	4335c8 <argp_usage@@Base+0x60e8>
  4337e4:	mov	x20, #0xffffffffffffffff    	// #-1
  4337e8:	b	432e40 <argp_usage@@Base+0x5960>
  4337ec:	ldr	x20, [x26, #8]
  4337f0:	b	432e40 <argp_usage@@Base+0x5960>
  4337f4:	ldr	x0, [sp, #96]
  4337f8:	add	x0, x0, #0xd36
  4337fc:	ldrsb	w0, [x0, x3]
  433800:	b	432ed8 <argp_usage@@Base+0x59f8>
  433804:	cmp	w27, #0x0
  433808:	b.gt	433814 <argp_usage@@Base+0x6334>
  43380c:	b.ne	432d4c <argp_usage@@Base+0x586c>  // b.any
  433810:	b	4330b0 <argp_usage@@Base+0x5bd0>
  433814:	mov	w27, #0xfffffffe            	// #-2
  433818:	b	432d4c <argp_usage@@Base+0x586c>
  43381c:	ldr	x0, [sp, #128]
  433820:	add	x26, x26, #0x38
  433824:	str	x0, [sp, #280]
  433828:	add	x1, sp, #0x110
  43382c:	ldr	x0, [sp, #144]
  433830:	mov	x2, #0x38                  	// #56
  433834:	str	x0, [sp, #288]
  433838:	mov	x0, x26
  43383c:	bl	404200 <memcpy@plt>
  433840:	mov	w0, #0x3                   	// #3
  433844:	str	w0, [sp, #116]
  433848:	b	4329a8 <argp_usage@@Base+0x54c8>
  43384c:	mov	w0, #0x2                   	// #2
  433850:	b	4330b4 <argp_usage@@Base+0x5bd4>
  433854:	mov	w0, #0x0                   	// #0
  433858:	b	4330b4 <argp_usage@@Base+0x5bd4>
  43385c:	sub	sp, sp, #0x420
  433860:	stp	x29, x30, [sp, #32]
  433864:	add	x29, sp, #0x20
  433868:	stp	x19, x20, [sp, #48]
  43386c:	mov	x20, x5
  433870:	stp	x21, x22, [sp, #64]
  433874:	mov	x21, x0
  433878:	mov	x22, x2
  43387c:	mov	x0, x1
  433880:	stp	x23, x24, [sp, #80]
  433884:	stp	x25, x26, [sp, #96]
  433888:	mov	x26, x1
  43388c:	mov	x25, x4
  433890:	stp	x27, x28, [sp, #112]
  433894:	str	w3, [sp, #156]
  433898:	bl	404280 <strlen@plt>
  43389c:	str	x0, [sp, #136]
  4338a0:	cbnz	x22, 4338b0 <argp_usage@@Base+0x63d0>
  4338a4:	add	x22, sp, #0xc0
  4338a8:	add	x0, sp, #0xc0
  4338ac:	bl	42fdac <argp_usage@@Base+0x28cc>
  4338b0:	ldr	x0, [x22]
  4338b4:	mov	x27, x26
  4338b8:	str	x0, [sp, #144]
  4338bc:	ldr	x0, [x22, #8]
  4338c0:	str	x0, [sp, #160]
  4338c4:	ldrb	w0, [x27]
  4338c8:	bl	4435d0 <_obstack_memory_used@@Base+0xb950>
  4338cc:	ands	w23, w0, #0xff
  4338d0:	b.ne	43392c <argp_usage@@Base+0x644c>  // b.any
  4338d4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4338d8:	mov	x0, x27
  4338dc:	add	x1, x1, #0x8de
  4338e0:	mov	x2, #0x4                   	// #4
  4338e4:	bl	4046a0 <strncmp@plt>
  4338e8:	cbnz	w0, 433920 <argp_usage@@Base+0x6440>
  4338ec:	add	x28, x27, #0x4
  4338f0:	mov	x0, #0x1                   	// #1
  4338f4:	mov	x2, x28
  4338f8:	mov	w5, #0x22                  	// #34
  4338fc:	ldrb	w4, [x2]
  433900:	cbz	w4, 433920 <argp_usage@@Base+0x6440>
  433904:	cmp	w4, #0x5c
  433908:	b.ne	433934 <argp_usage@@Base+0x6454>  // b.any
  43390c:	add	x4, x2, #0x1
  433910:	ldrb	w2, [x2, #1]
  433914:	cmp	w2, #0x5c
  433918:	ccmp	w2, w5, #0x4, ne  // ne = any
  43391c:	b.eq	433bb4 <argp_usage@@Base+0x66d4>  // b.none
  433920:	mov	x19, x25
  433924:	mov	x24, #0x0                   	// #0
  433928:	b	43398c <argp_usage@@Base+0x64ac>
  43392c:	add	x27, x27, #0x1
  433930:	b	4338c4 <argp_usage@@Base+0x63e4>
  433934:	cmp	w4, #0x22
  433938:	b.ne	433bb0 <argp_usage@@Base+0x66d0>  // b.any
  43393c:	cmp	x0, #0x64
  433940:	b.le	433b80 <argp_usage@@Base+0x66a0>
  433944:	bl	4045f0 <malloc@plt>
  433948:	mov	x24, x0
  43394c:	cbz	x0, 433b54 <argp_usage@@Base+0x6674>
  433950:	mov	x20, x0
  433954:	mov	x0, x20
  433958:	ldrb	w2, [x28]
  43395c:	cmp	w2, #0x22
  433960:	b.ne	433b8c <argp_usage@@Base+0x66ac>  // b.any
  433964:	strb	wzr, [x0]
  433968:	mov	x0, x20
  43396c:	bl	442704 <_obstack_memory_used@@Base+0xaa84>
  433970:	mov	x19, x0
  433974:	cbz	x0, 433b54 <argp_usage@@Base+0x6674>
  433978:	add	x27, x28, #0x1
  43397c:	ldrb	w0, [x27]
  433980:	bl	4435d0 <_obstack_memory_used@@Base+0xb950>
  433984:	tst	w0, #0xff
  433988:	b.ne	433ba8 <argp_usage@@Base+0x66c8>  // b.any
  43398c:	add	x2, sp, #0x160
  433990:	mov	x1, x22
  433994:	mov	x0, x19
  433998:	bl	442a20 <_obstack_memory_used@@Base+0xada0>
  43399c:	cbz	x0, 433b44 <argp_usage@@Base+0x6664>
  4339a0:	ldrb	w0, [x27]
  4339a4:	cbnz	w0, 4339b0 <argp_usage@@Base+0x64d0>
  4339a8:	adrp	x3, 44e000 <_obstack_memory_used@@Base+0x16380>
  4339ac:	add	x27, x3, #0x66e
  4339b0:	ldr	w0, [sp, #156]
  4339b4:	add	x2, sp, #0x368
  4339b8:	str	x27, [sp, #776]
  4339bc:	mov	w1, #0x2                   	// #2
  4339c0:	and	w27, w0, #0x1
  4339c4:	ldrsw	x0, [sp, #372]
  4339c8:	ldrsw	x28, [sp, #160]
  4339cc:	mov	w22, #0xa700                	// #42752
  4339d0:	add	x0, x0, #0x76c
  4339d4:	str	x0, [sp, #816]
  4339d8:	ldr	w0, [sp, #368]
  4339dc:	movk	w22, #0x76, lsl #16
  4339e0:	stp	x28, xzr, [x2]
  4339e4:	mov	w28, w22
  4339e8:	add	w0, w0, #0x1
  4339ec:	stp	xzr, xzr, [x2, #16]
  4339f0:	sxtw	x0, w0
  4339f4:	str	x0, [sp, #832]
  4339f8:	ldrsw	x0, [sp, #364]
  4339fc:	str	x0, [sp, #840]
  433a00:	ldrsw	x0, [sp, #360]
  433a04:	str	x0, [sp, #848]
  433a08:	ldrsw	x0, [sp, #356]
  433a0c:	str	x0, [sp, #856]
  433a10:	ldrsw	x0, [sp, #352]
  433a14:	str	x0, [sp, #864]
  433a18:	ldr	w0, [sp, #384]
  433a1c:	str	w0, [sp, #272]
  433a20:	str	w1, [sp, #804]
  433a24:	str	xzr, [sp, #824]
  433a28:	str	xzr, [sp, #904]
  433a2c:	str	xzr, [sp, #912]
  433a30:	str	xzr, [sp, #920]
  433a34:	str	wzr, [sp, #928]
  433a38:	strh	wzr, [sp, #936]
  433a3c:	str	xzr, [sp, #944]
  433a40:	str	xzr, [sp, #952]
  433a44:	str	xzr, [sp, #976]
  433a48:	strb	w27, [sp, #993]
  433a4c:	mov	w27, #0x9c00                	// #39936
  433a50:	str	xzr, [sp, #960]
  433a54:	movk	w27, #0x1da, lsl #16
  433a58:	ldr	x1, [sp, #400]
  433a5c:	str	xzr, [sp, #968]
  433a60:	str	xzr, [sp, #984]
  433a64:	strb	wzr, [sp, #992]
  433a68:	strh	wzr, [sp, #994]
  433a6c:	str	wzr, [sp, #996]
  433a70:	strb	wzr, [sp, #1000]
  433a74:	str	x1, [sp, #1008]
  433a78:	mov	w1, #0x10d                 	// #269
  433a7c:	str	w1, [sp, #1016]
  433a80:	str	w0, [sp, #1020]
  433a84:	str	xzr, [sp, #1024]
  433a88:	ldr	x1, [sp, #144]
  433a8c:	sxtw	x0, w22
  433a90:	adds	x0, x1, x0
  433a94:	b.vs	433adc <argp_usage@@Base+0x65fc>
  433a98:	add	x2, sp, #0x2a0
  433a9c:	add	x1, sp, #0x1d0
  433aa0:	str	x0, [sp, #464]
  433aa4:	mov	x0, x19
  433aa8:	bl	442a20 <_obstack_memory_used@@Base+0xada0>
  433aac:	cbz	x0, 433bc0 <argp_usage@@Base+0x66e0>
  433ab0:	ldr	x1, [sp, #720]
  433ab4:	cbz	x1, 433bc0 <argp_usage@@Base+0x66e0>
  433ab8:	ldr	w0, [sp, #704]
  433abc:	ldr	w2, [sp, #1020]
  433ac0:	cmp	w0, w2
  433ac4:	b.eq	433bc0 <argp_usage@@Base+0x66e0>  // b.none
  433ac8:	str	x1, [sp, #1024]
  433acc:	mov	w1, #0x10d                 	// #269
  433ad0:	str	w1, [sp, #1032]
  433ad4:	str	w0, [sp, #1036]
  433ad8:	str	xzr, [sp, #1040]
  433adc:	ldr	x0, [sp, #1008]
  433ae0:	cbz	x0, 433b00 <argp_usage@@Base+0x6620>
  433ae4:	ldr	x1, [sp, #1024]
  433ae8:	cbz	x1, 433b00 <argp_usage@@Base+0x6620>
  433aec:	bl	404a30 <strcmp@plt>
  433af0:	cbnz	w0, 433b00 <argp_usage@@Base+0x6620>
  433af4:	mov	w0, #0xffffffff            	// #-1
  433af8:	str	w0, [sp, #1020]
  433afc:	str	xzr, [sp, #1024]
  433b00:	add	x0, sp, #0x308
  433b04:	bl	432720 <argp_usage@@Base+0x5240>
  433b08:	ldrb	w1, [sp, #993]
  433b0c:	cbz	w0, 433bdc <argp_usage@@Base+0x66fc>
  433b10:	cbz	w1, 433b44 <argp_usage@@Base+0x6664>
  433b14:	ldr	x0, [sp, #136]
  433b18:	mov	w2, #0x5                   	// #5
  433b1c:	add	x26, x26, x0
  433b20:	ldr	x0, [sp, #776]
  433b24:	cmp	x0, x26
  433b28:	b.cc	433bd0 <argp_usage@@Base+0x66f0>  // b.lo, b.ul, b.last
  433b2c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433b30:	add	x1, x1, #0x8e3
  433b34:	mov	x0, #0x0                   	// #0
  433b38:	bl	404d00 <dcgettext@plt>
  433b3c:	ldr	x1, [sp, #776]
  433b40:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433b44:	cmp	x19, x25
  433b48:	b.eq	433b54 <argp_usage@@Base+0x6674>  // b.none
  433b4c:	mov	x0, x19
  433b50:	bl	4428c0 <_obstack_memory_used@@Base+0xac40>
  433b54:	mov	x0, x24
  433b58:	bl	404ae0 <free@plt>
  433b5c:	mov	w0, w23
  433b60:	ldp	x29, x30, [sp, #32]
  433b64:	ldp	x19, x20, [sp, #48]
  433b68:	ldp	x21, x22, [sp, #64]
  433b6c:	ldp	x23, x24, [sp, #80]
  433b70:	ldp	x25, x26, [sp, #96]
  433b74:	ldp	x27, x28, [sp, #112]
  433b78:	add	sp, sp, #0x420
  433b7c:	ret
  433b80:	add	x20, sp, #0x238
  433b84:	mov	x24, #0x0                   	// #0
  433b88:	b	433954 <argp_usage@@Base+0x6474>
  433b8c:	cmp	w2, #0x5c
  433b90:	cset	x3, eq  // eq = none
  433b94:	cinc	x2, x28, eq  // eq = none
  433b98:	ldrb	w1, [x28, x3]
  433b9c:	add	x28, x2, #0x1
  433ba0:	strb	w1, [x0], #1
  433ba4:	b	433958 <argp_usage@@Base+0x6478>
  433ba8:	add	x27, x27, #0x1
  433bac:	b	43397c <argp_usage@@Base+0x649c>
  433bb0:	mov	x4, x2
  433bb4:	add	x2, x4, #0x1
  433bb8:	add	x0, x0, #0x1
  433bbc:	b	4338fc <argp_usage@@Base+0x641c>
  433bc0:	add	w22, w22, w28
  433bc4:	cmp	w22, w27
  433bc8:	b.ne	433a88 <argp_usage@@Base+0x65a8>  // b.any
  433bcc:	b	433adc <argp_usage@@Base+0x65fc>
  433bd0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433bd4:	add	x1, x1, #0x8fa
  433bd8:	b	433b34 <argp_usage@@Base+0x6654>
  433bdc:	cbz	w1, 433cc0 <argp_usage@@Base+0x67e0>
  433be0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433be4:	add	x1, x1, #0x922
  433be8:	mov	w2, #0x5                   	// #5
  433bec:	mov	x0, #0x0                   	// #0
  433bf0:	bl	404d00 <dcgettext@plt>
  433bf4:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  433bf8:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433bfc:	ldrb	w0, [sp, #936]
  433c00:	ldr	x23, [x22, #1160]
  433c04:	cbz	w0, 433c30 <argp_usage@@Base+0x6750>
  433c08:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433c0c:	add	x1, x1, #0x933
  433c10:	mov	w2, #0x5                   	// #5
  433c14:	mov	x0, #0x0                   	// #0
  433c18:	bl	404d00 <dcgettext@plt>
  433c1c:	mov	w1, #0x1                   	// #1
  433c20:	mov	x2, x0
  433c24:	mov	x0, x23
  433c28:	bl	404a20 <__fprintf_chk@plt>
  433c2c:	b	433c7c <argp_usage@@Base+0x679c>
  433c30:	ldr	x0, [sp, #984]
  433c34:	cbz	x0, 433c48 <argp_usage@@Base+0x6768>
  433c38:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433c3c:	mov	w2, #0x5                   	// #5
  433c40:	add	x1, x1, #0x94c
  433c44:	b	433c14 <argp_usage@@Base+0x6734>
  433c48:	cbz	x20, 433df0 <argp_usage@@Base+0x6910>
  433c4c:	cmp	x19, x25
  433c50:	b.eq	433dc0 <argp_usage@@Base+0x68e0>  // b.none
  433c54:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433c58:	add	x1, x1, #0x964
  433c5c:	mov	w2, #0x5                   	// #5
  433c60:	mov	x0, #0x0                   	// #0
  433c64:	bl	404d00 <dcgettext@plt>
  433c68:	mov	x3, x20
  433c6c:	mov	x2, x0
  433c70:	mov	w1, #0x1                   	// #1
  433c74:	mov	x0, x23
  433c78:	bl	404a20 <__fprintf_chk@plt>
  433c7c:	ldr	x0, [sp, #960]
  433c80:	cbz	x0, 433e1c <argp_usage@@Base+0x693c>
  433c84:	ldr	x0, [sp, #984]
  433c88:	cbz	x0, 433e00 <argp_usage@@Base+0x6920>
  433c8c:	ldr	w0, [sp, #800]
  433c90:	add	x1, sp, #0xd0
  433c94:	ldr	x23, [x22, #1160]
  433c98:	bl	431e64 <argp_usage@@Base+0x4984>
  433c9c:	mov	x3, x0
  433ca0:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x16380>
  433ca4:	mov	x0, x23
  433ca8:	add	x2, x2, #0x9cb
  433cac:	mov	w1, #0x1                   	// #1
  433cb0:	bl	404a20 <__fprintf_chk@plt>
  433cb4:	ldr	x1, [x22, #1160]
  433cb8:	mov	w0, #0xa                   	// #10
  433cbc:	bl	404420 <fputc@plt>
  433cc0:	ldrb	w23, [sp, #936]
  433cc4:	cbz	w23, 433e28 <argp_usage@@Base+0x6948>
  433cc8:	add	x0, sp, #0x440
  433ccc:	ldp	x0, x1, [x0, #-224]
  433cd0:	stp	x0, x1, [x21]
  433cd4:	ldrb	w23, [sp, #993]
  433cd8:	cbz	w23, 434b60 <argp_usage@@Base+0x7680>
  433cdc:	cbnz	x20, 434b20 <argp_usage@@Base+0x7640>
  433ce0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  433ce4:	add	x1, x1, #0x15f
  433ce8:	mov	w2, #0x5                   	// #5
  433cec:	mov	x0, #0x0                   	// #0
  433cf0:	bl	404d00 <dcgettext@plt>
  433cf4:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433cf8:	ldp	x20, x22, [x21]
  433cfc:	mov	w2, #0x5                   	// #5
  433d00:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  433d04:	mov	x0, #0x0                   	// #0
  433d08:	add	x1, x1, #0x1b8
  433d0c:	bl	404d00 <dcgettext@plt>
  433d10:	mov	w2, w22
  433d14:	mov	x1, x20
  433d18:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433d1c:	add	x1, sp, #0x198
  433d20:	mov	x0, x21
  433d24:	bl	404740 <gmtime_r@plt>
  433d28:	cbz	x0, 433d60 <argp_usage@@Base+0x6880>
  433d2c:	mov	w2, #0x5                   	// #5
  433d30:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  433d34:	mov	x0, #0x0                   	// #0
  433d38:	add	x1, x1, #0x1d9
  433d3c:	bl	404d00 <dcgettext@plt>
  433d40:	mov	x20, x0
  433d44:	add	x2, sp, #0x1d0
  433d48:	mov	x1, #0x0                   	// #0
  433d4c:	add	x0, sp, #0x198
  433d50:	bl	4322d4 <argp_usage@@Base+0x4df4>
  433d54:	mov	x1, x0
  433d58:	mov	x0, x20
  433d5c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433d60:	add	x2, sp, #0x2a0
  433d64:	mov	x1, x21
  433d68:	mov	x0, x19
  433d6c:	bl	442a20 <_obstack_memory_used@@Base+0xada0>
  433d70:	cbz	x0, 433b44 <argp_usage@@Base+0x6664>
  433d74:	mov	w2, #0x5                   	// #5
  433d78:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  433d7c:	mov	x0, #0x0                   	// #0
  433d80:	add	x1, x1, #0x1ea
  433d84:	ldr	x22, [sp, #712]
  433d88:	bl	404d00 <dcgettext@plt>
  433d8c:	add	x2, sp, #0x1d0
  433d90:	mov	x20, x0
  433d94:	mov	x1, #0x0                   	// #0
  433d98:	add	x0, sp, #0x2a0
  433d9c:	bl	4322d4 <argp_usage@@Base+0x4df4>
  433da0:	mov	x21, x0
  433da4:	add	x1, sp, #0xd0
  433da8:	mov	w0, w22
  433dac:	bl	431e64 <argp_usage@@Base+0x4984>
  433db0:	mov	x2, x0
  433db4:	mov	x1, x21
  433db8:	mov	x0, x20
  433dbc:	b	43403c <argp_usage@@Base+0x6b5c>
  433dc0:	mov	x0, x20
  433dc4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433dc8:	add	x1, x1, #0x97b
  433dcc:	bl	404a30 <strcmp@plt>
  433dd0:	mov	w2, #0x5                   	// #5
  433dd4:	cbnz	w0, 433de4 <argp_usage@@Base+0x6904>
  433dd8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433ddc:	add	x1, x1, #0x980
  433de0:	b	433c14 <argp_usage@@Base+0x6734>
  433de4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433de8:	add	x1, x1, #0x9a2
  433dec:	b	433c60 <argp_usage@@Base+0x6780>
  433df0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433df4:	mov	w2, #0x5                   	// #5
  433df8:	add	x1, x1, #0x9bc
  433dfc:	b	433c14 <argp_usage@@Base+0x6734>
  433e00:	ldr	w0, [sp, #796]
  433e04:	cmp	w0, #0x0
  433e08:	b.le	433cb4 <argp_usage@@Base+0x67d4>
  433e0c:	ldr	x1, [x22, #1160]
  433e10:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  433e14:	add	x0, x0, #0x9d1
  433e18:	bl	404290 <fputs@plt>
  433e1c:	ldr	x0, [sp, #984]
  433e20:	cbz	x0, 433cb4 <argp_usage@@Base+0x67d4>
  433e24:	b	433c8c <argp_usage@@Base+0x67ac>
  433e28:	ldr	x0, [sp, #952]
  433e2c:	ldr	x1, [sp, #968]
  433e30:	ldr	x2, [sp, #976]
  433e34:	orr	x0, x0, x1
  433e38:	ldr	x1, [sp, #944]
  433e3c:	ldr	x3, [sp, #984]
  433e40:	orr	x1, x2, x1
  433e44:	orr	x0, x0, x1
  433e48:	ldrb	w27, [sp, #993]
  433e4c:	ldr	x1, [sp, #960]
  433e50:	add	x1, x1, x3
  433e54:	orr	x0, x0, x1
  433e58:	cmp	x0, #0x1
  433e5c:	b.le	433ee4 <argp_usage@@Base+0x6a04>
  433e60:	cbz	w27, 433b44 <argp_usage@@Base+0x6664>
  433e64:	cmp	x2, #0x1
  433e68:	b.le	433e78 <argp_usage@@Base+0x6998>
  433e6c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  433e70:	add	x0, x0, #0x9d7
  433e74:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433e78:	ldr	x0, [sp, #944]
  433e7c:	cmp	x0, #0x1
  433e80:	b.le	433e90 <argp_usage@@Base+0x69b0>
  433e84:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  433e88:	add	x0, x0, #0x9f8
  433e8c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433e90:	ldr	x0, [sp, #952]
  433e94:	cmp	x0, #0x1
  433e98:	b.le	433ea8 <argp_usage@@Base+0x69c8>
  433e9c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  433ea0:	add	x0, x0, #0xa19
  433ea4:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433ea8:	ldr	x0, [sp, #968]
  433eac:	cmp	x0, #0x1
  433eb0:	b.le	433ec0 <argp_usage@@Base+0x69e0>
  433eb4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  433eb8:	add	x0, x0, #0xa3a
  433ebc:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433ec0:	ldr	x0, [sp, #960]
  433ec4:	ldr	x1, [sp, #984]
  433ec8:	add	x0, x0, x1
  433ecc:	cmp	x0, #0x1
  433ed0:	b.le	433b44 <argp_usage@@Base+0x6664>
  433ed4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  433ed8:	add	x0, x0, #0xa66
  433edc:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433ee0:	b	433b44 <argp_usage@@Base+0x6664>
  433ee4:	ldr	x26, [sp, #816]
  433ee8:	tbnz	x26, #63, 434b68 <argp_usage@@Base+0x7688>
  433eec:	ldr	x0, [sp, #824]
  433ef0:	cmp	x0, #0x2
  433ef4:	b.ne	434bc4 <argp_usage@@Base+0x76e4>  // b.any
  433ef8:	cmp	x26, #0x45
  433efc:	mov	x22, #0x7d0                 	// #2000
  433f00:	mov	x0, #0x76c                 	// #1900
  433f04:	csel	x22, x22, x0, lt  // lt = tstop
  433f08:	add	x22, x26, x22
  433f0c:	cbz	w27, 433f30 <argp_usage@@Base+0x6a50>
  433f10:	mov	w2, #0x5                   	// #5
  433f14:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433f18:	mov	x0, #0x0                   	// #0
  433f1c:	add	x1, x1, #0xa8c
  433f20:	bl	404d00 <dcgettext@plt>
  433f24:	mov	x2, x22
  433f28:	mov	x1, x26
  433f2c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433f30:	subs	x1, x22, #0x76c
  433f34:	mov	w0, #0x0                   	// #0
  433f38:	b.cs	434bcc <argp_usage@@Base+0x76ec>  // b.hs, b.nlast
  433f3c:	tbnz	x1, #63, 434bd0 <argp_usage@@Base+0x76f0>
  433f40:	mov	w0, #0x1                   	// #1
  433f44:	b	434bd0 <argp_usage@@Base+0x76f0>
  433f48:	cbz	w27, 434ba4 <argp_usage@@Base+0x76c4>
  433f4c:	mov	w2, #0x5                   	// #5
  433f50:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  433f54:	mov	x0, #0x0                   	// #0
  433f58:	add	x1, x1, #0xab6
  433f5c:	bl	404d00 <dcgettext@plt>
  433f60:	mov	x1, x22
  433f64:	bl	431f98 <argp_usage@@Base+0x4ab8>
  433f68:	b	434ba4 <argp_usage@@Base+0x76c4>
  433f6c:	ldr	x0, [sp, #840]
  433f70:	str	w0, [sp, #252]
  433f74:	cmp	x0, w0, sxtw
  433f78:	cset	w26, ne  // ne = any
  433f7c:	b.ne	434ba4 <argp_usage@@Base+0x76c4>  // b.any
  433f80:	ldr	x2, [sp, #976]
  433f84:	ldrb	w1, [sp, #993]
  433f88:	cbnz	x2, 433fa4 <argp_usage@@Base+0x6ac4>
  433f8c:	ldrb	w0, [sp, #937]
  433f90:	cbz	w0, 434374 <argp_usage@@Base+0x6e94>
  433f94:	ldr	x0, [sp, #944]
  433f98:	ldr	x3, [sp, #952]
  433f9c:	orr	x0, x0, x3
  433fa0:	cbnz	x0, 434374 <argp_usage@@Base+0x6e94>
  433fa4:	ldr	w3, [sp, #804]
  433fa8:	ldr	x0, [sp, #848]
  433fac:	cbz	w3, 433fc8 <argp_usage@@Base+0x6ae8>
  433fb0:	cmp	w3, #0x1
  433fb4:	b.eq	433ff0 <argp_usage@@Base+0x6b10>  // b.none
  433fb8:	cmp	x0, #0x17
  433fbc:	b.hi	434350 <argp_usage@@Base+0x6e70>  // b.pmore
  433fc0:	str	w0, [sp, #248]
  433fc4:	b	434048 <argp_usage@@Base+0x6b68>
  433fc8:	sub	x3, x0, #0x1
  433fcc:	cmp	x3, #0xa
  433fd0:	b.ls	433fc0 <argp_usage@@Base+0x6ae0>  // b.plast
  433fd4:	cmp	x0, #0xc
  433fd8:	b.eq	434044 <argp_usage@@Base+0x6b64>  // b.none
  433fdc:	mov	w0, #0xffffffff            	// #-1
  433fe0:	adrp	x20, 44c000 <_obstack_memory_used@@Base+0x14380>
  433fe4:	add	x20, x20, #0xbb
  433fe8:	str	w0, [sp, #248]
  433fec:	b	43401c <argp_usage@@Base+0x6b3c>
  433ff0:	sub	x3, x0, #0x1
  433ff4:	cmp	x3, #0xa
  433ff8:	b.hi	434004 <argp_usage@@Base+0x6b24>  // b.pmore
  433ffc:	add	w0, w0, #0xc
  434000:	b	433fc0 <argp_usage@@Base+0x6ae0>
  434004:	cmp	x0, #0xc
  434008:	b.eq	433fc0 <argp_usage@@Base+0x6ae0>  // b.none
  43400c:	adrp	x20, 44e000 <_obstack_memory_used@@Base+0x16380>
  434010:	add	x20, x20, #0x7bf
  434014:	mov	w0, #0xffffffff            	// #-1
  434018:	str	w0, [sp, #248]
  43401c:	cbz	w1, 433b44 <argp_usage@@Base+0x6664>
  434020:	mov	w2, #0x5                   	// #5
  434024:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434028:	mov	x0, #0x0                   	// #0
  43402c:	add	x1, x1, #0xaf9
  434030:	bl	404d00 <dcgettext@plt>
  434034:	ldr	x1, [sp, #848]
  434038:	mov	x2, x20
  43403c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434040:	b	433b44 <argp_usage@@Base+0x6664>
  434044:	str	wzr, [sp, #248]
  434048:	ldr	x0, [sp, #856]
  43404c:	str	w0, [sp, #244]
  434050:	ldr	x0, [sp, #864]
  434054:	str	w0, [sp, #240]
  434058:	cbz	w1, 4340a8 <argp_usage@@Base+0x6bc8>
  43405c:	cbz	x2, 434364 <argp_usage@@Base+0x6e84>
  434060:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434064:	add	x1, x1, #0xb14
  434068:	mov	w2, #0x5                   	// #5
  43406c:	mov	x0, #0x0                   	// #0
  434070:	bl	404d00 <dcgettext@plt>
  434074:	ldp	w7, w6, [sp, #240]
  434078:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x16380>
  43407c:	ldr	w5, [sp, #248]
  434080:	add	x4, x4, #0xb6e
  434084:	mov	x3, #0x64                  	// #100
  434088:	mov	w2, #0x1                   	// #1
  43408c:	mov	x22, x0
  434090:	mov	x1, x3
  434094:	add	x0, sp, #0x1d0
  434098:	bl	404560 <__snprintf_chk@plt>
  43409c:	add	x1, sp, #0x1d0
  4340a0:	mov	x0, x22
  4340a4:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4340a8:	ldr	x0, [sp, #944]
  4340ac:	ldr	x1, [sp, #952]
  4340b0:	orr	x0, x0, x1
  4340b4:	ldr	x1, [sp, #976]
  4340b8:	orr	x0, x0, x1
  4340bc:	cbz	x0, 4340c8 <argp_usage@@Base+0x6be8>
  4340c0:	mov	w0, #0xffffffff            	// #-1
  4340c4:	str	w0, [sp, #272]
  4340c8:	ldr	x0, [sp, #960]
  4340cc:	cbz	x0, 4340d8 <argp_usage@@Base+0x6bf8>
  4340d0:	ldr	w0, [sp, #796]
  4340d4:	str	w0, [sp, #272]
  4340d8:	ldr	x0, [sp, #240]
  4340dc:	str	x0, [sp, #296]
  4340e0:	ldr	x0, [sp, #248]
  4340e4:	str	x0, [sp, #304]
  4340e8:	ldr	x0, [sp, #256]
  4340ec:	str	x0, [sp, #312]
  4340f0:	ldr	w0, [sp, #272]
  4340f4:	add	x1, sp, #0xf0
  4340f8:	mov	w28, #0xffffffff            	// #-1
  4340fc:	str	w28, [sp, #264]
  434100:	str	w0, [sp, #328]
  434104:	mov	x0, x19
  434108:	bl	442ac8 <_obstack_memory_used@@Base+0xae48>
  43410c:	mov	x22, x0
  434110:	add	x1, sp, #0xf0
  434114:	add	x0, sp, #0x128
  434118:	bl	431df8 <argp_usage@@Base+0x4918>
  43411c:	tst	w0, #0xff
  434120:	b.ne	43442c <argp_usage@@Base+0x6f4c>  // b.any
  434124:	ldr	x0, [sp, #984]
  434128:	str	x0, [sp, #136]
  43412c:	cbnz	x0, 434394 <argp_usage@@Base+0x6eb4>
  434130:	add	x0, sp, #0x118
  434134:	add	x1, sp, #0x138
  434138:	ldp	w3, w9, [sp, #240]
  43413c:	ldp	w4, w10, [x0, #16]
  434140:	ldp	w11, w22, [sp, #248]
  434144:	cmp	w4, w3
  434148:	ldp	w20, w6, [x0, #-24]
  43414c:	ccmp	w10, w9, #0x0, eq  // eq = none
  434150:	ldp	w12, w28, [x1, #-8]
  434154:	ldp	w21, w7, [x1]
  434158:	b.eq	4344f8 <argp_usage@@Base+0x7018>  // b.none
  43415c:	ldrb	w0, [sp, #993]
  434160:	stp	w4, w3, [sp, #156]
  434164:	stp	w10, w9, [sp, #168]
  434168:	stp	w12, w11, [sp, #176]
  43416c:	stp	w7, w6, [sp, #184]
  434170:	cbz	w0, 433b44 <argp_usage@@Base+0x6664>
  434174:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434178:	add	x1, x1, #0xbcf
  43417c:	mov	w2, #0x5                   	// #5
  434180:	mov	x0, #0x0                   	// #0
  434184:	bl	404d00 <dcgettext@plt>
  434188:	add	x27, sp, #0x2a0
  43418c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434190:	mov	w2, #0x5                   	// #5
  434194:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434198:	mov	x0, #0x0                   	// #0
  43419c:	add	x1, x1, #0xbf0
  4341a0:	bl	404d00 <dcgettext@plt>
  4341a4:	mov	x5, x0
  4341a8:	mov	x2, x27
  4341ac:	add	x1, sp, #0x308
  4341b0:	add	x0, sp, #0x128
  4341b4:	str	x5, [sp, #144]
  4341b8:	bl	4322d4 <argp_usage@@Base+0x4df4>
  4341bc:	mov	x1, x0
  4341c0:	ldr	x5, [sp, #144]
  4341c4:	mov	x0, x5
  4341c8:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4341cc:	mov	w2, #0x5                   	// #5
  4341d0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4341d4:	mov	x0, #0x0                   	// #0
  4341d8:	add	x1, x1, #0xc0e
  4341dc:	bl	404d00 <dcgettext@plt>
  4341e0:	mov	x5, x0
  4341e4:	mov	x2, x27
  4341e8:	add	x1, sp, #0x308
  4341ec:	add	x0, sp, #0xf0
  4341f0:	str	x5, [sp, #144]
  4341f4:	bl	4322d4 <argp_usage@@Base+0x4df4>
  4341f8:	mov	x1, x0
  4341fc:	ldr	x5, [sp, #144]
  434200:	mov	x0, x5
  434204:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434208:	ldp	w7, w6, [sp, #184]
  43420c:	adrp	x5, 44e000 <_obstack_memory_used@@Base+0x16380>
  434210:	ldp	w12, w11, [sp, #176]
  434214:	cmp	w7, w6
  434218:	add	x5, x5, #0x8d9
  43421c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  434220:	add	x0, x0, #0x41a
  434224:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434228:	ldp	w10, w9, [sp, #168]
  43422c:	add	x1, x1, #0x8db
  434230:	csel	x5, x0, x5, eq  // eq = none
  434234:	cmp	w21, w20
  434238:	ldp	w4, w3, [sp, #156]
  43423c:	csel	x6, x0, x1, eq  // eq = none
  434240:	cmp	w28, w22
  434244:	csel	x7, x0, x1, eq  // eq = none
  434248:	cmp	w12, w11
  43424c:	csel	x2, x0, x1, eq  // eq = none
  434250:	cmp	w10, w9
  434254:	csel	x9, x0, x1, eq  // eq = none
  434258:	cmp	w4, w3
  43425c:	csel	x0, x0, x1, eq  // eq = none
  434260:	stp	x2, x9, [sp]
  434264:	mov	x3, #0x64                  	// #100
  434268:	str	x0, [sp, #16]
  43426c:	mov	x1, x3
  434270:	mov	x0, x27
  434274:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x16380>
  434278:	mov	w2, #0x1                   	// #1
  43427c:	add	x4, x4, #0xc2c
  434280:	bl	404560 <__snprintf_chk@plt>
  434284:	mov	x0, #0x34                  	// #52
  434288:	mov	w1, w0
  43428c:	cbz	w0, 4342a0 <argp_usage@@Base+0x6dc0>
  434290:	sub	x0, x0, #0x1
  434294:	ldrb	w2, [x27, x0]
  434298:	cmp	w2, #0x20
  43429c:	b.eq	434288 <argp_usage@@Base+0x6da8>  // b.none
  4342a0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x15380>
  4342a4:	add	x0, x0, #0x9e4
  4342a8:	strb	wzr, [x27, w1, sxtw]
  4342ac:	mov	x1, x27
  4342b0:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4342b4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4342b8:	add	x1, x1, #0xc65
  4342bc:	mov	w2, #0x5                   	// #5
  4342c0:	mov	x0, #0x0                   	// #0
  4342c4:	bl	404d00 <dcgettext@plt>
  4342c8:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4342cc:	cbz	w26, 4342e8 <argp_usage@@Base+0x6e08>
  4342d0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4342d4:	add	x1, x1, #0xc7d
  4342d8:	mov	w2, #0x5                   	// #5
  4342dc:	mov	x0, #0x0                   	// #0
  4342e0:	bl	404d00 <dcgettext@plt>
  4342e4:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4342e8:	cmp	w28, w22
  4342ec:	ccmp	w21, w20, #0x4, ne  // ne = any
  4342f0:	b.eq	43430c <argp_usage@@Base+0x6e2c>  // b.none
  4342f4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4342f8:	add	x1, x1, #0xcaf
  4342fc:	mov	w2, #0x5                   	// #5
  434300:	mov	x0, #0x0                   	// #0
  434304:	bl	404d00 <dcgettext@plt>
  434308:	bl	431f98 <argp_usage@@Base+0x4ab8>
  43430c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434310:	add	x1, x1, #0xcd6
  434314:	mov	w2, #0x5                   	// #5
  434318:	mov	x0, #0x0                   	// #0
  43431c:	bl	404d00 <dcgettext@plt>
  434320:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434324:	ldr	x0, [sp, #136]
  434328:	mov	w2, #0x5                   	// #5
  43432c:	cbz	x0, 434514 <argp_usage@@Base+0x7034>
  434330:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434334:	add	x1, x1, #0xcf7
  434338:	mov	x0, #0x0                   	// #0
  43433c:	bl	404d00 <dcgettext@plt>
  434340:	mov	x1, x0
  434344:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  434348:	add	x0, x0, #0xd1b
  43434c:	b	433b40 <argp_usage@@Base+0x6660>
  434350:	mov	w0, #0xffffffff            	// #-1
  434354:	adrp	x20, 44d000 <_obstack_memory_used@@Base+0x15380>
  434358:	add	x20, x20, #0x41a
  43435c:	str	w0, [sp, #248]
  434360:	b	43401c <argp_usage@@Base+0x6b3c>
  434364:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434368:	mov	w2, #0x5                   	// #5
  43436c:	add	x1, x1, #0xb42
  434370:	b	43406c <argp_usage@@Base+0x6b8c>
  434374:	str	xzr, [sp, #240]
  434378:	str	wzr, [sp, #248]
  43437c:	str	xzr, [sp, #872]
  434380:	cbz	w1, 4340a8 <argp_usage@@Base+0x6bc8>
  434384:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  434388:	add	x0, x0, #0xb7d
  43438c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434390:	b	4340a8 <argp_usage@@Base+0x6bc8>
  434394:	mov	w0, #0x5858                	// #22616
  434398:	strh	w0, [sp, #672]
  43439c:	mov	w0, #0x58                  	// #88
  4343a0:	strb	w0, [sp, #674]
  4343a4:	ldr	w0, [sp, #800]
  4343a8:	add	x1, sp, #0x2a3
  4343ac:	bl	431e64 <argp_usage@@Base+0x4984>
  4343b0:	add	x0, sp, #0x2a0
  4343b4:	bl	442704 <_obstack_memory_used@@Base+0xaa84>
  4343b8:	mov	x27, x0
  4343bc:	cbnz	x0, 4343e0 <argp_usage@@Base+0x6f00>
  4343c0:	ldrb	w1, [sp, #993]
  4343c4:	cbz	w1, 433b44 <argp_usage@@Base+0x6664>
  4343c8:	mov	w2, #0x5                   	// #5
  4343cc:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4343d0:	add	x1, x1, #0xbb1
  4343d4:	bl	404d00 <dcgettext@plt>
  4343d8:	add	x1, sp, #0x2a0
  4343dc:	b	433b40 <argp_usage@@Base+0x6660>
  4343e0:	ldr	x1, [sp, #296]
  4343e4:	str	x1, [sp, #240]
  4343e8:	ldr	x1, [sp, #304]
  4343ec:	str	x1, [sp, #248]
  4343f0:	ldr	x1, [sp, #312]
  4343f4:	str	x1, [sp, #256]
  4343f8:	ldr	w1, [sp, #328]
  4343fc:	str	w28, [sp, #264]
  434400:	str	w1, [sp, #272]
  434404:	add	x1, sp, #0xf0
  434408:	bl	442ac8 <_obstack_memory_used@@Base+0xae48>
  43440c:	mov	x22, x0
  434410:	add	x1, sp, #0xf0
  434414:	add	x0, sp, #0x128
  434418:	bl	431df8 <argp_usage@@Base+0x4918>
  43441c:	and	w28, w0, #0xff
  434420:	mov	x0, x27
  434424:	bl	4428c0 <_obstack_memory_used@@Base+0xac40>
  434428:	cbz	w28, 434130 <argp_usage@@Base+0x6c50>
  43442c:	ldr	x0, [sp, #952]
  434430:	cbz	x0, 4345ac <argp_usage@@Base+0x70cc>
  434434:	ldr	x0, [sp, #944]
  434438:	cbnz	x0, 4345ac <argp_usage@@Base+0x70cc>
  43443c:	ldr	x0, [sp, #784]
  434440:	cmp	x0, #0x0
  434444:	b.le	434458 <argp_usage@@Base+0x6f78>
  434448:	ldr	w2, [sp, #264]
  43444c:	ldr	w1, [sp, #792]
  434450:	cmp	w2, w1
  434454:	cset	w26, ne  // ne = any
  434458:	sub	x26, x0, w26, sxtw
  43445c:	mov	x3, #0x7                   	// #7
  434460:	mul	x2, x26, x3
  434464:	smulh	x26, x26, x3
  434468:	cmp	x26, x2, asr #63
  43446c:	b.ne	434494 <argp_usage@@Base+0x6fb4>  // b.any
  434470:	ldr	w0, [sp, #264]
  434474:	ldr	w1, [sp, #792]
  434478:	sub	w1, w1, w0
  43447c:	add	w1, w1, #0x7
  434480:	sdiv	w0, w1, w3
  434484:	msub	w0, w0, w3, w1
  434488:	sxtw	x0, w0
  43448c:	adds	x0, x0, x2
  434490:	b.vc	434520 <argp_usage@@Base+0x7040>
  434494:	ldrb	w0, [sp, #993]
  434498:	cbz	w0, 433b44 <argp_usage@@Base+0x6664>
  43449c:	mov	w2, #0x5                   	// #5
  4344a0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4344a4:	mov	x0, #0x0                   	// #0
  4344a8:	add	x1, x1, #0xd26
  4344ac:	bl	404d00 <dcgettext@plt>
  4344b0:	mov	x20, x0
  4344b4:	add	x1, sp, #0x2a0
  4344b8:	add	x0, sp, #0x308
  4344bc:	bl	432370 <argp_usage@@Base+0x4e90>
  4344c0:	ldr	w26, [sp, #792]
  4344c4:	ldr	x22, [sp, #784]
  4344c8:	mov	x21, x0
  4344cc:	add	x2, sp, #0x1d0
  4344d0:	add	x1, sp, #0x308
  4344d4:	add	x0, sp, #0xf0
  4344d8:	bl	4322d4 <argp_usage@@Base+0x4df4>
  4344dc:	mov	w3, w26
  4344e0:	mov	x4, x0
  4344e4:	mov	x2, x22
  4344e8:	mov	x1, x21
  4344ec:	mov	x0, x20
  4344f0:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4344f4:	b	433b44 <argp_usage@@Base+0x6664>
  4344f8:	cmp	w28, w22
  4344fc:	ccmp	w12, w11, #0x4, eq  // eq = none
  434500:	b.eq	43415c <argp_usage@@Base+0x6c7c>  // b.none
  434504:	cmp	w21, w20
  434508:	ccmp	w7, w6, #0x0, eq  // eq = none
  43450c:	cset	w26, eq  // eq = none
  434510:	b	43415c <argp_usage@@Base+0x6c7c>
  434514:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434518:	add	x1, x1, #0xd0a
  43451c:	b	434338 <argp_usage@@Base+0x6e58>
  434520:	ldrsw	x1, [sp, #252]
  434524:	adds	x0, x0, x1
  434528:	str	w0, [sp, #252]
  43452c:	cset	w1, vs
  434530:	cmp	x0, w0, sxtw
  434534:	csinc	w1, w1, wzr, eq  // eq = none
  434538:	cbnz	w1, 434494 <argp_usage@@Base+0x6fb4>
  43453c:	mov	w0, #0xffffffff            	// #-1
  434540:	add	x1, sp, #0xf0
  434544:	str	w0, [sp, #272]
  434548:	mov	x0, x19
  43454c:	bl	442ac8 <_obstack_memory_used@@Base+0xae48>
  434550:	mov	x22, x0
  434554:	cmn	x0, #0x1
  434558:	b.eq	434494 <argp_usage@@Base+0x6fb4>  // b.none
  43455c:	ldrb	w0, [sp, #993]
  434560:	cbz	w0, 4345ac <argp_usage@@Base+0x70cc>
  434564:	mov	w2, #0x5                   	// #5
  434568:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  43456c:	mov	x0, #0x0                   	// #0
  434570:	add	x1, x1, #0xd75
  434574:	bl	404d00 <dcgettext@plt>
  434578:	mov	x26, x0
  43457c:	add	x1, sp, #0x2a0
  434580:	add	x0, sp, #0x308
  434584:	bl	432370 <argp_usage@@Base+0x4e90>
  434588:	mov	x27, x0
  43458c:	add	x2, sp, #0x1d0
  434590:	add	x1, sp, #0x308
  434594:	add	x0, sp, #0xf0
  434598:	bl	4322d4 <argp_usage@@Base+0x4df4>
  43459c:	mov	x1, x27
  4345a0:	mov	x2, x0
  4345a4:	mov	x0, x26
  4345a8:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4345ac:	ldrb	w0, [sp, #993]
  4345b0:	cbz	w0, 434660 <argp_usage@@Base+0x7180>
  4345b4:	ldr	x0, [sp, #944]
  4345b8:	cbnz	x0, 43461c <argp_usage@@Base+0x713c>
  4345bc:	ldr	x0, [sp, #952]
  4345c0:	cbnz	x0, 43462c <argp_usage@@Base+0x714c>
  4345c4:	mov	w2, #0x5                   	// #5
  4345c8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4345cc:	mov	x0, #0x0                   	// #0
  4345d0:	add	x1, x1, #0xd93
  4345d4:	bl	404d00 <dcgettext@plt>
  4345d8:	mov	x26, x0
  4345dc:	ldr	w0, [sp, #260]
  4345e0:	add	x1, sp, #0x198
  4345e4:	bl	431f3c <argp_usage@@Base+0x4a5c>
  4345e8:	mov	x5, x0
  4345ec:	ldp	w7, w6, [sp, #252]
  4345f0:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x16380>
  4345f4:	add	x4, x4, #0xdbf
  4345f8:	mov	x3, #0x64                  	// #100
  4345fc:	add	w6, w6, #0x1
  434600:	mov	w2, #0x1                   	// #1
  434604:	mov	x1, x3
  434608:	add	x0, sp, #0x1d0
  43460c:	bl	404560 <__snprintf_chk@plt>
  434610:	add	x1, sp, #0x1d0
  434614:	mov	x0, x26
  434618:	bl	431f98 <argp_usage@@Base+0x4ab8>
  43461c:	ldr	x0, [sp, #952]
  434620:	cbz	x0, 43462c <argp_usage@@Base+0x714c>
  434624:	ldr	x0, [sp, #944]
  434628:	cbnz	x0, 434758 <argp_usage@@Base+0x7278>
  43462c:	mov	w2, #0x5                   	// #5
  434630:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434634:	mov	x0, #0x0                   	// #0
  434638:	add	x1, x1, #0xe0d
  43463c:	bl	404d00 <dcgettext@plt>
  434640:	mov	x26, x0
  434644:	add	x2, sp, #0x1d0
  434648:	add	x1, sp, #0x308
  43464c:	add	x0, sp, #0xf0
  434650:	bl	4322d4 <argp_usage@@Base+0x4df4>
  434654:	mov	x1, x0
  434658:	mov	x0, x26
  43465c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434660:	ldr	x0, [sp, #880]
  434664:	ldr	x1, [sp, #888]
  434668:	orr	x0, x0, x1
  43466c:	ldr	x1, [sp, #896]
  434670:	orr	x1, x0, x1
  434674:	cbz	x1, 43494c <argp_usage@@Base+0x746c>
  434678:	ldrb	w1, [sp, #993]
  43467c:	cbz	w1, 4346d4 <argp_usage@@Base+0x71f4>
  434680:	cbz	x0, 4346b0 <argp_usage@@Base+0x71d0>
  434684:	ldr	w0, [sp, #252]
  434688:	cmp	w0, #0xf
  43468c:	b.eq	4346a8 <argp_usage@@Base+0x71c8>  // b.none
  434690:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434694:	add	x1, x1, #0xe27
  434698:	mov	w2, #0x5                   	// #5
  43469c:	mov	x0, #0x0                   	// #0
  4346a0:	bl	404d00 <dcgettext@plt>
  4346a4:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4346a8:	ldr	x0, [sp, #896]
  4346ac:	cbz	x0, 4346d4 <argp_usage@@Base+0x71f4>
  4346b0:	ldr	w0, [sp, #248]
  4346b4:	cmp	w0, #0xc
  4346b8:	b.eq	4346d4 <argp_usage@@Base+0x71f4>  // b.none
  4346bc:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4346c0:	add	x1, x1, #0xe88
  4346c4:	mov	w2, #0x5                   	// #5
  4346c8:	mov	x0, #0x0                   	// #0
  4346cc:	bl	404d00 <dcgettext@plt>
  4346d0:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4346d4:	ldr	x0, [sp, #880]
  4346d8:	ldrsw	x28, [sp, #260]
  4346dc:	adds	x28, x28, x0
  4346e0:	cset	w0, vs
  4346e4:	cmp	x28, w28, sxtw
  4346e8:	b.ne	434728 <argp_usage@@Base+0x7248>  // b.any
  4346ec:	cbnz	w0, 434728 <argp_usage@@Base+0x7248>
  4346f0:	ldr	x0, [sp, #888]
  4346f4:	ldrsw	x26, [sp, #256]
  4346f8:	adds	x26, x26, x0
  4346fc:	cset	w0, vs
  434700:	cmp	x26, w26, sxtw
  434704:	b.ne	434728 <argp_usage@@Base+0x7248>  // b.any
  434708:	cbnz	w0, 434728 <argp_usage@@Base+0x7248>
  43470c:	ldr	x0, [sp, #896]
  434710:	ldrsw	x27, [sp, #252]
  434714:	adds	x27, x27, x0
  434718:	cset	w0, vs
  43471c:	cmp	x27, w27, sxtw
  434720:	b.ne	434728 <argp_usage@@Base+0x7248>  // b.any
  434724:	cbz	w0, 43478c <argp_usage@@Base+0x72ac>
  434728:	ldrb	w0, [sp, #993]
  43472c:	cbz	w0, 433b44 <argp_usage@@Base+0x6664>
  434730:	mov	w2, #0x5                   	// #5
  434734:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434738:	mov	x0, #0x0                   	// #0
  43473c:	add	x1, x1, #0xecf
  434740:	bl	404d00 <dcgettext@plt>
  434744:	mov	w2, #0x877                 	// #2167
  434748:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  43474c:	add	x1, x1, #0xedd
  434750:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434754:	b	433b44 <argp_usage@@Base+0x6664>
  434758:	mov	w2, #0x5                   	// #5
  43475c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434760:	mov	x0, #0x0                   	// #0
  434764:	add	x1, x1, #0xdd4
  434768:	bl	404d00 <dcgettext@plt>
  43476c:	mov	x26, x0
  434770:	add	x1, sp, #0x2a0
  434774:	add	x0, sp, #0x308
  434778:	bl	432370 <argp_usage@@Base+0x4e90>
  43477c:	mov	x1, x0
  434780:	mov	x0, x26
  434784:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434788:	b	43462c <argp_usage@@Base+0x714c>
  43478c:	ldr	x0, [sp, #296]
  434790:	str	x0, [sp, #240]
  434794:	ldr	w0, [sp, #304]
  434798:	add	x1, sp, #0xf0
  43479c:	str	w0, [sp, #248]
  4347a0:	ldr	w0, [sp, #328]
  4347a4:	stp	w27, w26, [sp, #252]
  4347a8:	str	w28, [sp, #260]
  4347ac:	str	w0, [sp, #272]
  4347b0:	mov	x0, x19
  4347b4:	bl	442ac8 <_obstack_memory_used@@Base+0xae48>
  4347b8:	mov	x22, x0
  4347bc:	cmn	x0, #0x1
  4347c0:	ldrb	w0, [sp, #993]
  4347c4:	b.ne	434800 <argp_usage@@Base+0x7320>  // b.any
  4347c8:	cbz	w0, 433b44 <argp_usage@@Base+0x6664>
  4347cc:	mov	w2, #0x5                   	// #5
  4347d0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4347d4:	mov	x0, #0x0                   	// #0
  4347d8:	add	x1, x1, #0xeee
  4347dc:	bl	404d00 <dcgettext@plt>
  4347e0:	mov	x20, x0
  4347e4:	add	x1, sp, #0x308
  4347e8:	add	x2, sp, #0x1d0
  4347ec:	add	x0, sp, #0xf0
  4347f0:	bl	4322d4 <argp_usage@@Base+0x4df4>
  4347f4:	mov	x1, x0
  4347f8:	mov	x0, x20
  4347fc:	b	433b40 <argp_usage@@Base+0x6660>
  434800:	cbz	w0, 43494c <argp_usage@@Base+0x746c>
  434804:	mov	w2, #0x5                   	// #5
  434808:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  43480c:	mov	x0, #0x0                   	// #0
  434810:	add	x1, x1, #0xf2d
  434814:	bl	404d00 <dcgettext@plt>
  434818:	ldr	x1, [sp, #880]
  43481c:	ldr	x2, [sp, #888]
  434820:	ldr	x3, [sp, #896]
  434824:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434828:	mov	w2, #0x5                   	// #5
  43482c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434830:	mov	x0, #0x0                   	// #0
  434834:	add	x1, x1, #0xf6a
  434838:	bl	404d00 <dcgettext@plt>
  43483c:	mov	x3, x0
  434840:	add	x2, sp, #0x1d0
  434844:	add	x1, sp, #0x308
  434848:	add	x0, sp, #0xf0
  43484c:	str	x3, [sp, #136]
  434850:	bl	4322d4 <argp_usage@@Base+0x4df4>
  434854:	mov	x1, x0
  434858:	ldr	x3, [sp, #136]
  43485c:	mov	x0, x3
  434860:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434864:	ldr	w0, [sp, #328]
  434868:	cmn	w0, #0x1
  43486c:	b.eq	434894 <argp_usage@@Base+0x73b4>  // b.none
  434870:	ldr	w1, [sp, #272]
  434874:	cmp	w0, w1
  434878:	b.eq	434894 <argp_usage@@Base+0x73b4>  // b.none
  43487c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434880:	add	x1, x1, #0xf84
  434884:	mov	w2, #0x5                   	// #5
  434888:	mov	x0, #0x0                   	// #0
  43488c:	bl	404d00 <dcgettext@plt>
  434890:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434894:	ldr	x0, [sp, #896]
  434898:	cbnz	x0, 43494c <argp_usage@@Base+0x746c>
  43489c:	ldr	w0, [sp, #252]
  4348a0:	cmp	w27, w0
  4348a4:	b.ne	4348bc <argp_usage@@Base+0x73dc>  // b.any
  4348a8:	ldr	x0, [sp, #888]
  4348ac:	cbnz	x0, 43494c <argp_usage@@Base+0x746c>
  4348b0:	ldr	w0, [sp, #256]
  4348b4:	cmp	w26, w0
  4348b8:	b.eq	43494c <argp_usage@@Base+0x746c>  // b.none
  4348bc:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4348c0:	add	x1, x1, #0xfc1
  4348c4:	mov	w2, #0x5                   	// #5
  4348c8:	mov	x0, #0x0                   	// #0
  4348cc:	bl	404d00 <dcgettext@plt>
  4348d0:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4348d4:	mov	w2, #0x5                   	// #5
  4348d8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  4348dc:	mov	x0, #0x0                   	// #0
  4348e0:	add	x1, x1, #0xffc
  4348e4:	bl	404d00 <dcgettext@plt>
  4348e8:	mov	x4, x0
  4348ec:	add	x1, sp, #0x198
  4348f0:	mov	w0, w28
  4348f4:	str	x4, [sp, #136]
  4348f8:	bl	431f3c <argp_usage@@Base+0x4a5c>
  4348fc:	mov	x1, x0
  434900:	ldr	x4, [sp, #136]
  434904:	mov	w3, w27
  434908:	add	w2, w26, #0x1
  43490c:	mov	x0, x4
  434910:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434914:	mov	w2, #0x5                   	// #5
  434918:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  43491c:	mov	x0, #0x0                   	// #0
  434920:	add	x1, x1, #0x1f
  434924:	bl	404d00 <dcgettext@plt>
  434928:	mov	x26, x0
  43492c:	ldr	w0, [sp, #260]
  434930:	add	x1, sp, #0x198
  434934:	bl	431f3c <argp_usage@@Base+0x4a5c>
  434938:	mov	x1, x0
  43493c:	ldp	w3, w2, [sp, #252]
  434940:	mov	x0, x26
  434944:	add	w2, w2, #0x1
  434948:	bl	431f98 <argp_usage@@Base+0x4ab8>
  43494c:	ldr	x0, [sp, #984]
  434950:	ldrb	w2, [sp, #993]
  434954:	cbz	x0, 434978 <argp_usage@@Base+0x7498>
  434958:	ldr	x1, [sp, #280]
  43495c:	ldrsw	x0, [sp, #800]
  434960:	subs	x0, x0, x1
  434964:	cset	x1, vs
  434968:	subs	x0, x22, x0
  43496c:	csinc	x1, x1, xzr, vc
  434970:	cbnz	x1, 434ae8 <argp_usage@@Base+0x7608>
  434974:	mov	x22, x0
  434978:	cbz	w2, 4349b4 <argp_usage@@Base+0x74d4>
  43497c:	mov	w2, #0x5                   	// #5
  434980:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  434984:	mov	x0, #0x0                   	// #0
  434988:	add	x1, x1, #0x6d
  43498c:	bl	404d00 <dcgettext@plt>
  434990:	mov	x26, x0
  434994:	add	x2, sp, #0x1d0
  434998:	add	x1, sp, #0x308
  43499c:	add	x0, sp, #0xf0
  4349a0:	bl	4322d4 <argp_usage@@Base+0x4df4>
  4349a4:	mov	x2, x22
  4349a8:	mov	x1, x0
  4349ac:	mov	x0, x26
  4349b0:	bl	431f98 <argp_usage@@Base+0x4ab8>
  4349b4:	ldr	x0, [sp, #904]
  4349b8:	mov	x2, #0xe10                 	// #3600
  4349bc:	ldrb	w6, [sp, #993]
  4349c0:	mul	x1, x0, x2
  4349c4:	smulh	x2, x0, x2
  4349c8:	cmp	x2, x1, asr #63
  4349cc:	b.ne	434b0c <argp_usage@@Base+0x762c>  // b.any
  4349d0:	adds	x22, x22, x1
  4349d4:	b.vs	434b0c <argp_usage@@Base+0x762c>
  4349d8:	ldr	x1, [sp, #912]
  4349dc:	mov	x2, #0x3c                  	// #60
  4349e0:	orr	x5, x0, x1
  4349e4:	mul	x0, x1, x2
  4349e8:	smulh	x1, x1, x2
  4349ec:	cmp	x1, x0, asr #63
  4349f0:	b.ne	434b0c <argp_usage@@Base+0x762c>  // b.any
  4349f4:	adds	x22, x22, x0
  4349f8:	b.vs	434b0c <argp_usage@@Base+0x762c>
  4349fc:	ldr	x0, [sp, #920]
  434a00:	adds	x22, x22, x0
  434a04:	b.vs	434b0c <argp_usage@@Base+0x762c>
  434a08:	ldrsw	x1, [sp, #928]
  434a0c:	mov	x3, #0xca00                	// #51712
  434a10:	movk	x3, #0x3b9a, lsl #16
  434a14:	orr	x2, x1, x0
  434a18:	ldr	x0, [sp, #872]
  434a1c:	add	x1, x1, x0
  434a20:	sdiv	x4, x1, x3
  434a24:	msub	x4, x4, x3, x1
  434a28:	add	x4, x4, x3
  434a2c:	udiv	x0, x4, x3
  434a30:	msub	x4, x0, x3, x4
  434a34:	sub	x0, x1, x4
  434a38:	sdiv	x0, x0, x3
  434a3c:	sxtw	x0, w0
  434a40:	adds	x22, x22, x0
  434a44:	b.vs	434b0c <argp_usage@@Base+0x762c>
  434a48:	stp	x22, x4, [x21]
  434a4c:	cbz	w6, 433cd4 <argp_usage@@Base+0x67f4>
  434a50:	orr	x0, x2, x5
  434a54:	cbz	x0, 433cd4 <argp_usage@@Base+0x67f4>
  434a58:	mov	w2, #0x5                   	// #5
  434a5c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  434a60:	mov	x0, #0x0                   	// #0
  434a64:	add	x1, x1, #0xb7
  434a68:	bl	404d00 <dcgettext@plt>
  434a6c:	ldr	w4, [sp, #928]
  434a70:	ldr	x1, [sp, #904]
  434a74:	ldr	x2, [sp, #912]
  434a78:	ldr	x3, [sp, #920]
  434a7c:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434a80:	mov	w2, #0x5                   	// #5
  434a84:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  434a88:	mov	x0, #0x0                   	// #0
  434a8c:	add	x1, x1, #0x100
  434a90:	bl	404d00 <dcgettext@plt>
  434a94:	mov	x1, x22
  434a98:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434a9c:	ldr	w0, [sp, #272]
  434aa0:	cmn	w0, #0x1
  434aa4:	b.eq	433cd4 <argp_usage@@Base+0x67f4>  // b.none
  434aa8:	add	x2, sp, #0x198
  434aac:	mov	x1, x21
  434ab0:	mov	x0, x19
  434ab4:	bl	442a20 <_obstack_memory_used@@Base+0xada0>
  434ab8:	cbz	x0, 433cd4 <argp_usage@@Base+0x67f4>
  434abc:	ldr	w1, [sp, #272]
  434ac0:	ldr	w0, [sp, #440]
  434ac4:	cmp	w1, w0
  434ac8:	b.eq	433cd4 <argp_usage@@Base+0x67f4>  // b.none
  434acc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  434ad0:	add	x1, x1, #0x122
  434ad4:	mov	w2, #0x5                   	// #5
  434ad8:	mov	x0, #0x0                   	// #0
  434adc:	bl	404d00 <dcgettext@plt>
  434ae0:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434ae4:	b	433cd4 <argp_usage@@Base+0x67f4>
  434ae8:	cbz	w2, 433b44 <argp_usage@@Base+0x6664>
  434aec:	mov	w2, #0x5                   	// #5
  434af0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  434af4:	mov	x0, #0x0                   	// #0
  434af8:	add	x1, x1, #0x42
  434afc:	bl	404d00 <dcgettext@plt>
  434b00:	ldr	w1, [sp, #800]
  434b04:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434b08:	b	433b44 <argp_usage@@Base+0x6664>
  434b0c:	cbz	w6, 433b44 <argp_usage@@Base+0x6664>
  434b10:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  434b14:	mov	w2, #0x5                   	// #5
  434b18:	add	x1, x1, #0x87
  434b1c:	b	434bb8 <argp_usage@@Base+0x76d8>
  434b20:	mov	x0, x20
  434b24:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434b28:	add	x1, x1, #0x97b
  434b2c:	bl	404a30 <strcmp@plt>
  434b30:	mov	w2, #0x5                   	// #5
  434b34:	cbnz	w0, 434b44 <argp_usage@@Base+0x7664>
  434b38:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  434b3c:	add	x1, x1, #0x179
  434b40:	b	433cec <argp_usage@@Base+0x680c>
  434b44:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  434b48:	mov	x0, #0x0                   	// #0
  434b4c:	add	x1, x1, #0x193
  434b50:	bl	404d00 <dcgettext@plt>
  434b54:	mov	x1, x20
  434b58:	bl	431f98 <argp_usage@@Base+0x4ab8>
  434b5c:	b	433cf8 <argp_usage@@Base+0x6818>
  434b60:	mov	w23, #0x1                   	// #1
  434b64:	b	433b44 <argp_usage@@Base+0x6664>
  434b68:	mov	x1, #0xfffffffffffff894    	// #-1900
  434b6c:	subs	x1, x1, x26
  434b70:	cset	w0, vs
  434b74:	mov	x22, x26
  434b78:	cmp	x1, w1, sxtw
  434b7c:	str	w1, [sp, #260]
  434b80:	csinc	w0, w0, wzr, eq  // eq = none
  434b84:	cbnz	w0, 433f48 <argp_usage@@Base+0x6a68>
  434b88:	ldr	x0, [sp, #832]
  434b8c:	subs	x0, x0, #0x1
  434b90:	str	w0, [sp, #256]
  434b94:	cset	w1, vs
  434b98:	cmp	x0, w0, sxtw
  434b9c:	csinc	w1, w1, wzr, eq  // eq = none
  434ba0:	cbz	w1, 433f6c <argp_usage@@Base+0x6a8c>
  434ba4:	ldrb	w0, [sp, #993]
  434ba8:	cbz	w0, 433b44 <argp_usage@@Base+0x6664>
  434bac:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  434bb0:	add	x1, x1, #0xad4
  434bb4:	mov	w2, #0x5                   	// #5
  434bb8:	mov	x0, #0x0                   	// #0
  434bbc:	bl	404d00 <dcgettext@plt>
  434bc0:	b	433edc <argp_usage@@Base+0x69fc>
  434bc4:	mov	x22, x26
  434bc8:	b	433f30 <argp_usage@@Base+0x6a50>
  434bcc:	tbnz	x1, #63, 433f40 <argp_usage@@Base+0x6a60>
  434bd0:	cmp	x1, w1, sxtw
  434bd4:	str	w1, [sp, #260]
  434bd8:	csinc	w0, w0, wzr, eq  // eq = none
  434bdc:	and	w0, w0, #0x1
  434be0:	b	434b84 <argp_usage@@Base+0x76a4>
  434be4:	stp	x29, x30, [sp, #-64]!
  434be8:	mov	x29, sp
  434bec:	stp	x19, x20, [sp, #16]
  434bf0:	mov	x20, x0
  434bf4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x17380>
  434bf8:	add	x0, x0, #0x1fd
  434bfc:	stp	x21, x22, [sp, #32]
  434c00:	mov	x21, x1
  434c04:	mov	x22, x2
  434c08:	str	x23, [sp, #48]
  434c0c:	bl	404e40 <getenv@plt>
  434c10:	mov	x23, x0
  434c14:	bl	442704 <_obstack_memory_used@@Base+0xaa84>
  434c18:	cbz	x0, 434c60 <argp_usage@@Base+0x7780>
  434c1c:	mov	x4, x0
  434c20:	mov	x5, x23
  434c24:	mov	x2, x22
  434c28:	mov	x1, x21
  434c2c:	mov	w3, #0x0                   	// #0
  434c30:	mov	x19, x0
  434c34:	mov	x0, x20
  434c38:	bl	43385c <argp_usage@@Base+0x637c>
  434c3c:	and	w20, w0, #0xff
  434c40:	mov	x0, x19
  434c44:	bl	4428c0 <_obstack_memory_used@@Base+0xac40>
  434c48:	mov	w0, w20
  434c4c:	ldp	x19, x20, [sp, #16]
  434c50:	ldp	x21, x22, [sp, #32]
  434c54:	ldr	x23, [sp, #48]
  434c58:	ldp	x29, x30, [sp], #64
  434c5c:	ret
  434c60:	mov	w20, #0x0                   	// #0
  434c64:	b	434c48 <argp_usage@@Base+0x7768>
  434c68:	stp	x29, x30, [sp, #-48]!
  434c6c:	mov	x29, sp
  434c70:	stp	x19, x20, [sp, #16]
  434c74:	str	x21, [sp, #32]
  434c78:	cbnz	x0, 434c94 <argp_usage@@Base+0x77b4>
  434c7c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  434c80:	ldr	x1, [x0, #1160]
  434c84:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  434c88:	add	x0, x0, #0x238
  434c8c:	bl	404290 <fputs@plt>
  434c90:	bl	404970 <abort@plt>
  434c94:	mov	x19, x0
  434c98:	mov	w1, #0x2f                  	// #47
  434c9c:	bl	4048d0 <strrchr@plt>
  434ca0:	mov	x20, x0
  434ca4:	cbz	x0, 434cf4 <argp_usage@@Base+0x7814>
  434ca8:	add	x21, x0, #0x1
  434cac:	sub	x0, x21, x19
  434cb0:	cmp	x0, #0x6
  434cb4:	b.le	434cf4 <argp_usage@@Base+0x7814>
  434cb8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  434cbc:	sub	x0, x20, #0x6
  434cc0:	add	x1, x1, #0x270
  434cc4:	mov	x2, #0x7                   	// #7
  434cc8:	bl	4046a0 <strncmp@plt>
  434ccc:	cbnz	w0, 434cf4 <argp_usage@@Base+0x7814>
  434cd0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  434cd4:	mov	x0, x21
  434cd8:	add	x1, x1, #0x278
  434cdc:	mov	x2, #0x3                   	// #3
  434ce0:	bl	4046a0 <strncmp@plt>
  434ce4:	cbnz	w0, 434d14 <argp_usage@@Base+0x7834>
  434ce8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  434cec:	add	x19, x20, #0x4
  434cf0:	str	x19, [x0, #1192]
  434cf4:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  434cf8:	ldr	x21, [sp, #32]
  434cfc:	str	x19, [x0, #3552]
  434d00:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  434d04:	str	x19, [x0, #1152]
  434d08:	ldp	x19, x20, [sp, #16]
  434d0c:	ldp	x29, x30, [sp], #48
  434d10:	ret
  434d14:	mov	x19, x21
  434d18:	b	434cf4 <argp_usage@@Base+0x7814>
  434d1c:	stp	xzr, xzr, [x8]
  434d20:	cmp	w0, #0xa
  434d24:	stp	xzr, xzr, [x8, #16]
  434d28:	stp	xzr, xzr, [x8, #32]
  434d2c:	str	xzr, [x8, #48]
  434d30:	b.ne	434d40 <argp_usage@@Base+0x7860>  // b.any
  434d34:	stp	x29, x30, [sp, #-16]!
  434d38:	mov	x29, sp
  434d3c:	bl	404970 <abort@plt>
  434d40:	str	w0, [x8]
  434d44:	ret
  434d48:	stp	x29, x30, [sp, #-48]!
  434d4c:	mov	w2, #0x5                   	// #5
  434d50:	mov	x29, sp
  434d54:	stp	x19, x20, [sp, #16]
  434d58:	mov	x20, x0
  434d5c:	str	x21, [sp, #32]
  434d60:	mov	w21, w1
  434d64:	mov	x1, x0
  434d68:	mov	x0, #0x0                   	// #0
  434d6c:	bl	404d00 <dcgettext@plt>
  434d70:	mov	x19, x0
  434d74:	cmp	x20, x0
  434d78:	b.ne	434dec <argp_usage@@Base+0x790c>  // b.any
  434d7c:	bl	431434 <argp_usage@@Base+0x3f54>
  434d80:	ldrb	w2, [x0]
  434d84:	and	w2, w2, #0xffffffdf
  434d88:	cmp	w2, #0x55
  434d8c:	b.ne	434e00 <argp_usage@@Base+0x7920>  // b.any
  434d90:	ldrb	w1, [x0, #1]
  434d94:	and	w1, w1, #0xffffffdf
  434d98:	cmp	w1, #0x54
  434d9c:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434da0:	ldrb	w1, [x0, #2]
  434da4:	and	w1, w1, #0xffffffdf
  434da8:	cmp	w1, #0x46
  434dac:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434db0:	ldrb	w1, [x0, #3]
  434db4:	cmp	w1, #0x2d
  434db8:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434dbc:	ldrb	w1, [x0, #4]
  434dc0:	cmp	w1, #0x38
  434dc4:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434dc8:	ldrb	w0, [x0, #5]
  434dcc:	cbnz	w0, 434e78 <argp_usage@@Base+0x7998>
  434dd0:	ldrb	w1, [x19]
  434dd4:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  434dd8:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x18380>
  434ddc:	add	x0, x0, #0x27c
  434de0:	cmp	w1, #0x60
  434de4:	add	x19, x19, #0x287
  434de8:	csel	x19, x19, x0, eq  // eq = none
  434dec:	mov	x0, x19
  434df0:	ldp	x19, x20, [sp, #16]
  434df4:	ldr	x21, [sp, #32]
  434df8:	ldp	x29, x30, [sp], #48
  434dfc:	ret
  434e00:	cmp	w2, #0x47
  434e04:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434e08:	ldrb	w1, [x0, #1]
  434e0c:	and	w1, w1, #0xffffffdf
  434e10:	cmp	w1, #0x42
  434e14:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434e18:	ldrb	w1, [x0, #2]
  434e1c:	cmp	w1, #0x31
  434e20:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434e24:	ldrb	w1, [x0, #3]
  434e28:	cmp	w1, #0x38
  434e2c:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434e30:	ldrb	w1, [x0, #4]
  434e34:	cmp	w1, #0x30
  434e38:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434e3c:	ldrb	w1, [x0, #5]
  434e40:	cmp	w1, #0x33
  434e44:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434e48:	ldrb	w1, [x0, #6]
  434e4c:	cmp	w1, #0x30
  434e50:	b.ne	434e78 <argp_usage@@Base+0x7998>  // b.any
  434e54:	ldrb	w0, [x0, #7]
  434e58:	cbnz	w0, 434e78 <argp_usage@@Base+0x7998>
  434e5c:	ldrb	w1, [x19]
  434e60:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  434e64:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x18380>
  434e68:	add	x0, x0, #0x280
  434e6c:	cmp	w1, #0x60
  434e70:	add	x19, x19, #0x283
  434e74:	b	434de8 <argp_usage@@Base+0x7908>
  434e78:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  434e7c:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x15380>
  434e80:	cmp	w21, #0x9
  434e84:	add	x0, x0, #0xaa4
  434e88:	add	x19, x19, #0xa56
  434e8c:	b	434de8 <argp_usage@@Base+0x7908>
  434e90:	sub	sp, sp, #0xf0
  434e94:	stp	x29, x30, [sp, #16]
  434e98:	add	x29, sp, #0x10
  434e9c:	stp	x19, x20, [sp, #32]
  434ea0:	stp	x21, x22, [sp, #48]
  434ea4:	mov	x21, x2
  434ea8:	stp	x23, x24, [sp, #64]
  434eac:	mov	x24, x3
  434eb0:	stp	x25, x26, [sp, #80]
  434eb4:	mov	w25, w4
  434eb8:	mov	x26, x0
  434ebc:	stp	x27, x28, [sp, #96]
  434ec0:	str	x1, [sp, #112]
  434ec4:	str	w5, [sp, #120]
  434ec8:	str	x7, [sp, #128]
  434ecc:	str	x6, [sp, #152]
  434ed0:	bl	404b10 <__ctype_get_mb_cur_max@plt>
  434ed4:	str	x0, [sp, #160]
  434ed8:	cmp	w25, #0xa
  434edc:	ldr	x0, [sp, #120]
  434ee0:	str	xzr, [sp, #136]
  434ee4:	ubfx	x28, x0, #1, #1
  434ee8:	mov	w0, #0x1                   	// #1
  434eec:	str	w0, [sp, #148]
  434ef0:	b.hi	4350ec <argp_usage@@Base+0x7c0c>  // b.pmore
  434ef4:	mov	w20, #0x0                   	// #0
  434ef8:	mov	w23, #0x0                   	// #0
  434efc:	mov	w22, #0x0                   	// #0
  434f00:	mov	x10, #0x0                   	// #0
  434f04:	mov	x6, #0x0                   	// #0
  434f08:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  434f0c:	add	x0, x0, #0x2d8
  434f10:	ldrb	w0, [x0, w25, uxtw]
  434f14:	adr	x1, 434f20 <argp_usage@@Base+0x7a40>
  434f18:	add	x0, x1, w0, sxtb #2
  434f1c:	br	x0
  434f20:	ldr	x0, [sp, #112]
  434f24:	mov	w28, #0x0                   	// #0
  434f28:	str	x0, [sp, #136]
  434f2c:	b	434f08 <argp_usage@@Base+0x7a28>
  434f30:	mov	w28, #0x0                   	// #0
  434f34:	mov	x19, #0x0                   	// #0
  434f38:	b	434f58 <argp_usage@@Base+0x7a78>
  434f3c:	mov	w28, #0x1                   	// #1
  434f40:	adrp	x6, 44d000 <_obstack_memory_used@@Base+0x15380>
  434f44:	mov	w22, w28
  434f48:	add	x6, x6, #0xa56
  434f4c:	mov	x10, #0x1                   	// #1
  434f50:	mov	x19, #0x0                   	// #0
  434f54:	mov	w25, #0x5                   	// #5
  434f58:	ldr	x0, [sp, #136]
  434f5c:	mov	x13, #0x0                   	// #0
  434f60:	str	w20, [sp, #144]
  434f64:	ldr	x27, [sp, #112]
  434f68:	str	x0, [sp, #112]
  434f6c:	cmn	x24, #0x1
  434f70:	b.ne	43598c <argp_usage@@Base+0x84ac>  // b.any
  434f74:	ldrb	w0, [x21, x13]
  434f78:	cmp	w0, #0x0
  434f7c:	cset	w14, ne  // ne = any
  434f80:	cmp	w25, #0x2
  434f84:	cbnz	w14, 435110 <argp_usage@@Base+0x7c30>
  434f88:	cset	w0, eq  // eq = none
  434f8c:	cmp	x19, #0x0
  434f90:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  434f94:	b.eq	434f9c <argp_usage@@Base+0x7abc>  // b.none
  434f98:	cbnz	w28, 435224 <argp_usage@@Base+0x7d44>
  434f9c:	eor	w5, w28, #0x1
  434fa0:	ands	w0, w0, w5
  434fa4:	b.eq	4359f0 <argp_usage@@Base+0x8510>  // b.none
  434fa8:	ldr	w1, [sp, #144]
  434fac:	cbz	w1, 4359b4 <argp_usage@@Base+0x84d4>
  434fb0:	ldr	w0, [sp, #148]
  434fb4:	cbz	w0, 435994 <argp_usage@@Base+0x84b4>
  434fb8:	ldr	w5, [sp, #120]
  434fbc:	mov	x3, x24
  434fc0:	ldr	x1, [sp, #112]
  434fc4:	mov	x2, x21
  434fc8:	ldr	x7, [sp, #128]
  434fcc:	mov	w4, #0x5                   	// #5
  434fd0:	ldr	x6, [sp, #152]
  434fd4:	ldr	x0, [sp, #240]
  434fd8:	str	x0, [sp]
  434fdc:	mov	x0, x26
  434fe0:	bl	434e90 <argp_usage@@Base+0x79b0>
  434fe4:	b	4359d0 <argp_usage@@Base+0x84f0>
  434fe8:	adrp	x6, 44d000 <_obstack_memory_used@@Base+0x15380>
  434fec:	add	x6, x6, #0xa56
  434ff0:	cbnz	w28, 435104 <argp_usage@@Base+0x7c24>
  434ff4:	ldr	x0, [sp, #112]
  434ff8:	cbz	x0, 435004 <argp_usage@@Base+0x7b24>
  434ffc:	mov	w0, #0x22                  	// #34
  435000:	strb	w0, [x26]
  435004:	mov	x10, #0x1                   	// #1
  435008:	mov	w22, #0x1                   	// #1
  43500c:	mov	x19, x10
  435010:	b	434f58 <argp_usage@@Base+0x7a78>
  435014:	cmp	w25, #0xa
  435018:	b.eq	435044 <argp_usage@@Base+0x7b64>  // b.none
  43501c:	mov	w1, w25
  435020:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  435024:	add	x0, x0, #0x28b
  435028:	bl	434d48 <argp_usage@@Base+0x7868>
  43502c:	mov	w1, w25
  435030:	str	x0, [sp, #128]
  435034:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  435038:	add	x0, x0, #0xaa4
  43503c:	bl	434d48 <argp_usage@@Base+0x7868>
  435040:	str	x0, [sp, #240]
  435044:	mov	x19, #0x0                   	// #0
  435048:	cbnz	w28, 435058 <argp_usage@@Base+0x7b78>
  43504c:	ldr	x0, [sp, #128]
  435050:	ldrb	w0, [x0, x19]
  435054:	cbnz	w0, 435070 <argp_usage@@Base+0x7b90>
  435058:	ldr	x0, [sp, #240]
  43505c:	mov	w22, #0x1                   	// #1
  435060:	bl	404280 <strlen@plt>
  435064:	mov	x10, x0
  435068:	ldr	x6, [sp, #240]
  43506c:	b	434f58 <argp_usage@@Base+0x7a78>
  435070:	ldr	x1, [sp, #112]
  435074:	cmp	x1, x19
  435078:	b.ls	435080 <argp_usage@@Base+0x7ba0>  // b.plast
  43507c:	strb	w0, [x26, x19]
  435080:	add	x19, x19, #0x1
  435084:	b	43504c <argp_usage@@Base+0x7b6c>
  435088:	cbnz	w28, 4350d4 <argp_usage@@Base+0x7bf4>
  43508c:	mov	w22, #0x1                   	// #1
  435090:	ldr	x0, [sp, #112]
  435094:	adrp	x6, 44a000 <_obstack_memory_used@@Base+0x12380>
  435098:	add	x6, x6, #0xaa4
  43509c:	cbz	x0, 4350a8 <argp_usage@@Base+0x7bc8>
  4350a0:	mov	w0, #0x27                  	// #39
  4350a4:	strb	w0, [x26]
  4350a8:	mov	x10, #0x1                   	// #1
  4350ac:	mov	w28, #0x0                   	// #0
  4350b0:	mov	x19, x10
  4350b4:	b	4350e4 <argp_usage@@Base+0x7c04>
  4350b8:	cbz	w28, 435090 <argp_usage@@Base+0x7bb0>
  4350bc:	adrp	x6, 44a000 <_obstack_memory_used@@Base+0x12380>
  4350c0:	mov	x10, #0x1                   	// #1
  4350c4:	add	x6, x6, #0xaa4
  4350c8:	b	434f34 <argp_usage@@Base+0x7a54>
  4350cc:	mov	w28, #0x1                   	// #1
  4350d0:	mov	w22, w28
  4350d4:	adrp	x6, 44a000 <_obstack_memory_used@@Base+0x12380>
  4350d8:	add	x6, x6, #0xaa4
  4350dc:	mov	x10, #0x1                   	// #1
  4350e0:	mov	x19, #0x0                   	// #0
  4350e4:	mov	w25, #0x2                   	// #2
  4350e8:	b	434f58 <argp_usage@@Base+0x7a78>
  4350ec:	bl	404970 <abort@plt>
  4350f0:	mov	w28, #0x0                   	// #0
  4350f4:	mov	w22, #0x1                   	// #1
  4350f8:	b	434f34 <argp_usage@@Base+0x7a54>
  4350fc:	mov	w28, #0x1                   	// #1
  435100:	b	4350d4 <argp_usage@@Base+0x7bf4>
  435104:	mov	w22, w28
  435108:	mov	x10, #0x1                   	// #1
  43510c:	b	434f34 <argp_usage@@Base+0x7a54>
  435110:	add	x0, x21, x13
  435114:	str	x0, [sp, #136]
  435118:	cset	w3, ne  // ne = any
  43511c:	ands	w3, w22, w3
  435120:	b.eq	4351d4 <argp_usage@@Base+0x7cf4>  // b.none
  435124:	cbz	x10, 4351d4 <argp_usage@@Base+0x7cf4>
  435128:	cmp	x10, #0x1
  43512c:	add	x20, x13, x10
  435130:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  435134:	b.ne	435164 <argp_usage@@Base+0x7c84>  // b.any
  435138:	mov	x0, x21
  43513c:	stp	x13, x6, [sp, #168]
  435140:	str	x10, [sp, #184]
  435144:	str	w3, [sp, #192]
  435148:	str	w14, [sp, #200]
  43514c:	bl	404280 <strlen@plt>
  435150:	ldp	x13, x6, [sp, #168]
  435154:	mov	x24, x0
  435158:	ldr	w3, [sp, #192]
  43515c:	ldr	w14, [sp, #200]
  435160:	ldr	x10, [sp, #184]
  435164:	cmp	x20, x24
  435168:	b.hi	4351d4 <argp_usage@@Base+0x7cf4>  // b.pmore
  43516c:	ldr	x0, [sp, #136]
  435170:	mov	x2, x10
  435174:	mov	x1, x6
  435178:	stp	x6, x10, [sp, #168]
  43517c:	str	x13, [sp, #184]
  435180:	str	w3, [sp, #192]
  435184:	str	w14, [sp, #200]
  435188:	bl	4049f0 <memcmp@plt>
  43518c:	ldr	w3, [sp, #192]
  435190:	ldr	w14, [sp, #200]
  435194:	ldp	x6, x10, [sp, #168]
  435198:	ldr	x13, [sp, #184]
  43519c:	cbnz	w0, 4351d4 <argp_usage@@Base+0x7cf4>
  4351a0:	cbnz	w28, 435a1c <argp_usage@@Base+0x853c>
  4351a4:	mov	w18, w3
  4351a8:	ldr	x0, [sp, #136]
  4351ac:	ldrb	w7, [x0]
  4351b0:	cmp	w7, #0x3f
  4351b4:	b.ls	4351fc <argp_usage@@Base+0x7d1c>  // b.plast
  4351b8:	cmp	w7, #0x5a
  4351bc:	b.hi	4352b0 <argp_usage@@Base+0x7dd0>  // b.pmore
  4351c0:	cmp	w7, #0x40
  4351c4:	b.eq	4352c0 <argp_usage@@Base+0x7de0>  // b.none
  4351c8:	mov	w20, w14
  4351cc:	mov	w3, #0x0                   	// #0
  4351d0:	b	435514 <argp_usage@@Base+0x8034>
  4351d4:	mov	w18, #0x0                   	// #0
  4351d8:	b	4351a8 <argp_usage@@Base+0x7cc8>
  4351dc:	cmp	w0, #0x23
  4351e0:	b.hi	4352c0 <argp_usage@@Base+0x7de0>  // b.pmore
  4351e4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4351e8:	add	x1, x1, #0x2e4
  4351ec:	ldrh	w0, [x1, w0, uxtw #1]
  4351f0:	adr	x1, 4351fc <argp_usage@@Base+0x7d1c>
  4351f4:	add	x0, x1, w0, sxth #2
  4351f8:	br	x0
  4351fc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  435200:	add	x0, x0, #0x32c
  435204:	ldrh	w0, [x0, w7, uxtw #1]
  435208:	adr	x1, 435214 <argp_usage@@Base+0x7d34>
  43520c:	add	x0, x1, w0, sxth #2
  435210:	br	x0
  435214:	mov	w0, #0x72                  	// #114
  435218:	cmp	w28, #0x0
  43521c:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  435220:	b.ne	435230 <argp_usage@@Base+0x7d50>  // b.any
  435224:	mov	w25, #0x2                   	// #2
  435228:	b	43546c <argp_usage@@Base+0x7f8c>
  43522c:	mov	w0, #0x62                  	// #98
  435230:	cbz	w22, 4353f4 <argp_usage@@Base+0x7f14>
  435234:	mov	w7, w0
  435238:	mov	w20, #0x0                   	// #0
  43523c:	cmp	w25, #0x2
  435240:	cset	w0, eq  // eq = none
  435244:	cbnz	w28, 43546c <argp_usage@@Base+0x7f8c>
  435248:	eor	w1, w23, #0x1
  43524c:	ands	w0, w0, w1
  435250:	b.eq	435294 <argp_usage@@Base+0x7db4>  // b.none
  435254:	cmp	x27, x19
  435258:	b.ls	435264 <argp_usage@@Base+0x7d84>  // b.plast
  43525c:	mov	w1, #0x27                  	// #39
  435260:	strb	w1, [x26, x19]
  435264:	add	x1, x19, #0x1
  435268:	cmp	x27, x1
  43526c:	b.ls	435278 <argp_usage@@Base+0x7d98>  // b.plast
  435270:	mov	w2, #0x24                  	// #36
  435274:	strb	w2, [x26, x1]
  435278:	add	x1, x19, #0x2
  43527c:	cmp	x27, x1
  435280:	b.ls	43528c <argp_usage@@Base+0x7dac>  // b.plast
  435284:	mov	w2, #0x27                  	// #39
  435288:	strb	w2, [x26, x1]
  43528c:	add	x19, x19, #0x3
  435290:	mov	w23, w0
  435294:	cmp	x27, x19
  435298:	b.ls	4352a4 <argp_usage@@Base+0x7dc4>  // b.plast
  43529c:	mov	w0, #0x5c                  	// #92
  4352a0:	strb	w0, [x26, x19]
  4352a4:	add	x19, x19, #0x1
  4352a8:	mov	w3, w14
  4352ac:	b	435550 <argp_usage@@Base+0x8070>
  4352b0:	sub	w0, w7, #0x5b
  4352b4:	and	w1, w0, #0xff
  4352b8:	cmp	w1, #0x23
  4352bc:	b.ls	4351dc <argp_usage@@Base+0x7cfc>  // b.plast
  4352c0:	ldr	x0, [sp, #160]
  4352c4:	cmp	x0, #0x1
  4352c8:	b.ne	4356c0 <argp_usage@@Base+0x81e0>  // b.any
  4352cc:	str	x13, [sp, #136]
  4352d0:	stp	x6, x10, [sp, #168]
  4352d4:	str	w7, [sp, #184]
  4352d8:	str	w18, [sp, #192]
  4352dc:	str	w14, [sp, #200]
  4352e0:	bl	404a60 <__ctype_b_loc@plt>
  4352e4:	ldr	w7, [sp, #184]
  4352e8:	ldr	x0, [x0]
  4352ec:	ldp	x15, x6, [sp, #160]
  4352f0:	ldrh	w20, [x0, w7, uxtw #1]
  4352f4:	ldr	w18, [sp, #192]
  4352f8:	ldr	w14, [sp, #200]
  4352fc:	ldr	x13, [sp, #136]
  435300:	ubfx	x20, x20, #14, #1
  435304:	ldr	x10, [sp, #176]
  435308:	eor	w3, w20, #0x1
  43530c:	and	w3, w22, w3
  435310:	ands	w3, w3, #0xff
  435314:	b.eq	435514 <argp_usage@@Base+0x8034>  // b.none
  435318:	mov	w20, #0x0                   	// #0
  43531c:	b	435830 <argp_usage@@Base+0x8350>
  435320:	cbz	w22, 4353ec <argp_usage@@Base+0x7f0c>
  435324:	cmp	w25, #0x2
  435328:	cset	w0, eq  // eq = none
  43532c:	cbnz	w28, 435a1c <argp_usage@@Base+0x853c>
  435330:	eor	w1, w23, #0x1
  435334:	ands	w1, w0, w1
  435338:	b.eq	4353e4 <argp_usage@@Base+0x7f04>  // b.none
  43533c:	cmp	x27, x19
  435340:	b.ls	43534c <argp_usage@@Base+0x7e6c>  // b.plast
  435344:	mov	w0, #0x27                  	// #39
  435348:	strb	w0, [x26, x19]
  43534c:	add	x0, x19, #0x1
  435350:	cmp	x27, x0
  435354:	b.ls	435360 <argp_usage@@Base+0x7e80>  // b.plast
  435358:	mov	w2, #0x24                  	// #36
  43535c:	strb	w2, [x26, x0]
  435360:	add	x0, x19, #0x2
  435364:	cmp	x27, x0
  435368:	b.ls	435374 <argp_usage@@Base+0x7e94>  // b.plast
  43536c:	mov	w2, #0x27                  	// #39
  435370:	strb	w2, [x26, x0]
  435374:	add	x0, x19, #0x3
  435378:	mov	w23, w1
  43537c:	cmp	x27, x0
  435380:	b.ls	43538c <argp_usage@@Base+0x7eac>  // b.plast
  435384:	mov	w1, #0x5c                  	// #92
  435388:	strb	w1, [x26, x0]
  43538c:	add	x19, x0, #0x1
  435390:	cbz	w3, 435960 <argp_usage@@Base+0x8480>
  435394:	add	x1, x13, #0x1
  435398:	cmp	x1, x24
  43539c:	b.cs	4353dc <argp_usage@@Base+0x7efc>  // b.hs, b.nlast
  4353a0:	ldrb	w1, [x21, x1]
  4353a4:	sub	w1, w1, #0x30
  4353a8:	and	w1, w1, #0xff
  4353ac:	cmp	w1, #0x9
  4353b0:	b.hi	4353dc <argp_usage@@Base+0x7efc>  // b.pmore
  4353b4:	cmp	x27, x19
  4353b8:	b.ls	4353c4 <argp_usage@@Base+0x7ee4>  // b.plast
  4353bc:	mov	w1, #0x30                  	// #48
  4353c0:	strb	w1, [x26, x19]
  4353c4:	add	x1, x0, #0x2
  4353c8:	cmp	x27, x1
  4353cc:	b.ls	4353d8 <argp_usage@@Base+0x7ef8>  // b.plast
  4353d0:	mov	w2, #0x30                  	// #48
  4353d4:	strb	w2, [x26, x1]
  4353d8:	add	x19, x0, #0x3
  4353dc:	mov	w20, #0x0                   	// #0
  4353e0:	b	435968 <argp_usage@@Base+0x8488>
  4353e4:	mov	x0, x19
  4353e8:	b	43537c <argp_usage@@Base+0x7e9c>
  4353ec:	ldr	x0, [sp, #120]
  4353f0:	tbnz	w0, #0, 4355a8 <argp_usage@@Base+0x80c8>
  4353f4:	mov	w20, #0x0                   	// #0
  4353f8:	b	4351cc <argp_usage@@Base+0x7cec>
  4353fc:	cmp	w25, #0x2
  435400:	b.eq	435468 <argp_usage@@Base+0x7f88>  // b.none
  435404:	cmp	w25, #0x5
  435408:	b.ne	4353f4 <argp_usage@@Base+0x7f14>  // b.any
  43540c:	ldr	x0, [sp, #120]
  435410:	tbz	w0, #2, 4353f4 <argp_usage@@Base+0x7f14>
  435414:	add	x1, x13, #0x2
  435418:	cmp	x1, x24
  43541c:	b.cs	4353f4 <argp_usage@@Base+0x7f14>  // b.hs, b.nlast
  435420:	ldr	x0, [sp, #136]
  435424:	ldrb	w0, [x0, #1]
  435428:	cmp	w0, #0x3f
  43542c:	b.ne	4353f4 <argp_usage@@Base+0x7f14>  // b.any
  435430:	ldrb	w7, [x21, x1]
  435434:	cmp	w7, #0x2f
  435438:	b.hi	4354a4 <argp_usage@@Base+0x7fc4>  // b.pmore
  43543c:	cmp	w7, #0x20
  435440:	b.ls	435978 <argp_usage@@Base+0x8498>  // b.plast
  435444:	sub	w2, w7, #0x21
  435448:	cmp	w2, #0xe
  43544c:	b.hi	435970 <argp_usage@@Base+0x8490>  // b.pmore
  435450:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  435454:	add	x0, x0, #0x3ac
  435458:	ldrh	w0, [x0, w2, uxtw #1]
  43545c:	adr	x2, 435468 <argp_usage@@Base+0x7f88>
  435460:	add	x0, x2, w0, sxth #2
  435464:	br	x0
  435468:	cbz	w28, 4353f4 <argp_usage@@Base+0x7f14>
  43546c:	ldr	x0, [sp, #240]
  435470:	cmp	w22, #0x0
  435474:	str	x0, [sp]
  435478:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  43547c:	ldr	w0, [sp, #120]
  435480:	mov	x3, x24
  435484:	mov	x2, x21
  435488:	mov	x1, x27
  43548c:	and	w5, w0, #0xfffffffd
  435490:	mov	x6, #0x0                   	// #0
  435494:	mov	w0, #0x4                   	// #4
  435498:	csel	w4, w25, w0, ne  // ne = any
  43549c:	ldr	x7, [sp, #128]
  4354a0:	b	434fdc <argp_usage@@Base+0x7afc>
  4354a4:	sub	w2, w7, #0x3c
  4354a8:	and	w2, w2, #0xff
  4354ac:	cmp	w2, #0x2
  4354b0:	b.hi	435978 <argp_usage@@Base+0x8498>  // b.pmore
  4354b4:	cbnz	w28, 43546c <argp_usage@@Base+0x7f8c>
  4354b8:	cmp	x27, x19
  4354bc:	b.ls	4354c8 <argp_usage@@Base+0x7fe8>  // b.plast
  4354c0:	mov	w0, #0x3f                  	// #63
  4354c4:	strb	w0, [x26, x19]
  4354c8:	add	x0, x19, #0x1
  4354cc:	cmp	x27, x0
  4354d0:	b.ls	4354dc <argp_usage@@Base+0x7ffc>  // b.plast
  4354d4:	mov	w2, #0x22                  	// #34
  4354d8:	strb	w2, [x26, x0]
  4354dc:	add	x0, x19, #0x2
  4354e0:	cmp	x27, x0
  4354e4:	b.ls	4354f0 <argp_usage@@Base+0x8010>  // b.plast
  4354e8:	mov	w2, #0x22                  	// #34
  4354ec:	strb	w2, [x26, x0]
  4354f0:	add	x0, x19, #0x3
  4354f4:	cmp	x27, x0
  4354f8:	b.ls	435504 <argp_usage@@Base+0x8024>  // b.plast
  4354fc:	mov	w2, #0x3f                  	// #63
  435500:	strb	w2, [x26, x0]
  435504:	add	x19, x19, #0x4
  435508:	mov	x13, x1
  43550c:	mov	w20, #0x0                   	// #0
  435510:	mov	w3, #0x0                   	// #0
  435514:	cmp	w25, #0x2
  435518:	eor	w0, w22, #0x1
  43551c:	cset	w1, eq  // eq = none
  435520:	orr	w0, w1, w0
  435524:	tst	w0, #0xff
  435528:	b.eq	435530 <argp_usage@@Base+0x8050>  // b.none
  43552c:	cbz	w28, 43554c <argp_usage@@Base+0x806c>
  435530:	ldr	x0, [sp, #152]
  435534:	cbz	x0, 43554c <argp_usage@@Base+0x806c>
  435538:	ldr	x1, [sp, #152]
  43553c:	ubfx	x0, x7, #5, #8
  435540:	ldr	w0, [x1, x0, lsl #2]
  435544:	lsr	w0, w0, w7
  435548:	tbnz	w0, #0, 43523c <argp_usage@@Base+0x7d5c>
  43554c:	cbnz	w18, 43523c <argp_usage@@Base+0x7d5c>
  435550:	eor	w3, w3, #0x1
  435554:	tst	w23, w3
  435558:	b.eq	435588 <argp_usage@@Base+0x80a8>  // b.none
  43555c:	cmp	x27, x19
  435560:	b.ls	43556c <argp_usage@@Base+0x808c>  // b.plast
  435564:	mov	w0, #0x27                  	// #39
  435568:	strb	w0, [x26, x19]
  43556c:	add	x0, x19, #0x1
  435570:	cmp	x27, x0
  435574:	b.ls	435580 <argp_usage@@Base+0x80a0>  // b.plast
  435578:	mov	w1, #0x27                  	// #39
  43557c:	strb	w1, [x26, x0]
  435580:	add	x19, x19, #0x2
  435584:	mov	w23, #0x0                   	// #0
  435588:	cmp	x27, x19
  43558c:	b.ls	435594 <argp_usage@@Base+0x80b4>  // b.plast
  435590:	strb	w7, [x26, x19]
  435594:	ldr	w0, [sp, #148]
  435598:	cmp	w20, #0x0
  43559c:	add	x19, x19, #0x1
  4355a0:	csel	w0, w0, wzr, ne  // ne = any
  4355a4:	str	w0, [sp, #148]
  4355a8:	add	x13, x13, #0x1
  4355ac:	b	434f6c <argp_usage@@Base+0x7a8c>
  4355b0:	mov	w0, #0x74                  	// #116
  4355b4:	b	435218 <argp_usage@@Base+0x7d38>
  4355b8:	mov	w0, #0x76                  	// #118
  4355bc:	b	435230 <argp_usage@@Base+0x7d50>
  4355c0:	cmp	w25, #0x2
  4355c4:	b.ne	4355d8 <argp_usage@@Base+0x80f8>  // b.any
  4355c8:	cbnz	w28, 43546c <argp_usage@@Base+0x7f8c>
  4355cc:	mov	w20, #0x0                   	// #0
  4355d0:	mov	w3, #0x0                   	// #0
  4355d4:	b	435550 <argp_usage@@Base+0x8070>
  4355d8:	cmp	w22, #0x0
  4355dc:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  4355e0:	b.eq	4355e8 <argp_usage@@Base+0x8108>  // b.none
  4355e4:	cbnz	x10, 4355cc <argp_usage@@Base+0x80ec>
  4355e8:	mov	w0, w7
  4355ec:	b	435218 <argp_usage@@Base+0x7d38>
  4355f0:	mov	w0, #0x6e                  	// #110
  4355f4:	b	435218 <argp_usage@@Base+0x7d38>
  4355f8:	mov	w0, #0x61                  	// #97
  4355fc:	b	435230 <argp_usage@@Base+0x7d50>
  435600:	mov	w0, #0x66                  	// #102
  435604:	b	435230 <argp_usage@@Base+0x7d50>
  435608:	cmn	x24, #0x1
  43560c:	b.ne	435638 <argp_usage@@Base+0x8158>  // b.any
  435610:	ldrb	w0, [x21, #1]
  435614:	cmp	w0, #0x0
  435618:	cset	w0, ne  // ne = any
  43561c:	cbnz	w0, 4353f4 <argp_usage@@Base+0x7f14>
  435620:	cbnz	x13, 4353f4 <argp_usage@@Base+0x7f14>
  435624:	mov	w20, w14
  435628:	cmp	w25, #0x2
  43562c:	csel	w3, w28, wzr, eq  // eq = none
  435630:	cbz	w3, 435514 <argp_usage@@Base+0x8034>
  435634:	b	435224 <argp_usage@@Base+0x7d44>
  435638:	cmp	x24, #0x1
  43563c:	b	435618 <argp_usage@@Base+0x8138>
  435640:	mov	w20, #0x0                   	// #0
  435644:	b	435628 <argp_usage@@Base+0x8148>
  435648:	cmp	w25, #0x2
  43564c:	b.ne	435980 <argp_usage@@Base+0x84a0>  // b.any
  435650:	cbnz	w28, 43546c <argp_usage@@Base+0x7f8c>
  435654:	ldr	x0, [sp, #112]
  435658:	cmp	x27, #0x0
  43565c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  435660:	b.eq	4356b4 <argp_usage@@Base+0x81d4>  // b.none
  435664:	cmp	x27, x19
  435668:	b.ls	435674 <argp_usage@@Base+0x8194>  // b.plast
  43566c:	mov	w0, #0x27                  	// #39
  435670:	strb	w0, [x26, x19]
  435674:	add	x0, x19, #0x1
  435678:	cmp	x0, x27
  43567c:	b.cs	435688 <argp_usage@@Base+0x81a8>  // b.hs, b.nlast
  435680:	mov	w1, #0x5c                  	// #92
  435684:	strb	w1, [x26, x0]
  435688:	add	x0, x19, #0x2
  43568c:	cmp	x0, x27
  435690:	b.cs	43569c <argp_usage@@Base+0x81bc>  // b.hs, b.nlast
  435694:	mov	w1, #0x27                  	// #39
  435698:	strb	w1, [x26, x0]
  43569c:	add	x19, x19, #0x3
  4356a0:	mov	w20, w14
  4356a4:	mov	w3, #0x0                   	// #0
  4356a8:	mov	w23, #0x0                   	// #0
  4356ac:	str	w14, [sp, #144]
  4356b0:	b	435514 <argp_usage@@Base+0x8034>
  4356b4:	str	x27, [sp, #112]
  4356b8:	mov	x27, #0x0                   	// #0
  4356bc:	b	435674 <argp_usage@@Base+0x8194>
  4356c0:	str	xzr, [sp, #232]
  4356c4:	cmn	x24, #0x1
  4356c8:	b.ne	435700 <argp_usage@@Base+0x8220>  // b.any
  4356cc:	mov	x0, x21
  4356d0:	stp	x13, x6, [sp, #168]
  4356d4:	str	x10, [sp, #184]
  4356d8:	str	w7, [sp, #192]
  4356dc:	str	w18, [sp, #200]
  4356e0:	str	w14, [sp, #208]
  4356e4:	bl	404280 <strlen@plt>
  4356e8:	ldp	x13, x6, [sp, #168]
  4356ec:	mov	x24, x0
  4356f0:	ldr	w7, [sp, #192]
  4356f4:	ldr	w18, [sp, #200]
  4356f8:	ldr	w14, [sp, #208]
  4356fc:	ldr	x10, [sp, #184]
  435700:	mov	w20, w14
  435704:	mov	x15, #0x0                   	// #0
  435708:	add	x2, x13, x15
  43570c:	add	x3, sp, #0xe8
  435710:	add	x1, x21, x2
  435714:	add	x0, sp, #0xe4
  435718:	sub	x2, x24, x2
  43571c:	stp	x1, x13, [sp, #168]
  435720:	stp	x15, x6, [sp, #184]
  435724:	str	x10, [sp, #200]
  435728:	stp	w7, w18, [sp, #208]
  43572c:	str	w14, [sp, #216]
  435730:	bl	4378f0 <argp_usage@@Base+0xa410>
  435734:	ldp	w7, w18, [sp, #208]
  435738:	mov	x3, x0
  43573c:	ldr	w14, [sp, #216]
  435740:	ldp	x13, x15, [sp, #176]
  435744:	ldp	x6, x10, [sp, #192]
  435748:	cbz	x0, 435828 <argp_usage@@Base+0x8348>
  43574c:	cmn	x0, #0x1
  435750:	b.eq	435778 <argp_usage@@Base+0x8298>  // b.none
  435754:	cmn	x0, #0x2
  435758:	ldr	x1, [sp, #168]
  43575c:	b.ne	435788 <argp_usage@@Base+0x82a8>  // b.any
  435760:	add	x0, x13, x15
  435764:	cmp	x24, x0
  435768:	b.ls	435778 <argp_usage@@Base+0x8298>  // b.plast
  43576c:	ldr	x0, [sp, #136]
  435770:	ldrb	w0, [x0, x15]
  435774:	cbnz	w0, 435780 <argp_usage@@Base+0x82a0>
  435778:	mov	w20, #0x0                   	// #0
  43577c:	b	435828 <argp_usage@@Base+0x8348>
  435780:	add	x15, x15, #0x1
  435784:	b	435760 <argp_usage@@Base+0x8280>
  435788:	cmp	w28, #0x0
  43578c:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  435790:	b.ne	4357d4 <argp_usage@@Base+0x82f4>  // b.any
  435794:	mov	x0, #0x1                   	// #1
  435798:	b	4357cc <argp_usage@@Base+0x82ec>
  43579c:	ldrb	w2, [x1, x0]
  4357a0:	sub	w2, w2, #0x5b
  4357a4:	and	w2, w2, #0xff
  4357a8:	cmp	w2, #0x21
  4357ac:	b.hi	4357c8 <argp_usage@@Base+0x82e8>  // b.pmore
  4357b0:	mov	x4, #0x1                   	// #1
  4357b4:	lsl	x2, x4, x2
  4357b8:	mov	x4, #0x2b                  	// #43
  4357bc:	movk	x4, #0x2, lsl #32
  4357c0:	tst	x2, x4
  4357c4:	b.ne	435224 <argp_usage@@Base+0x7d44>  // b.any
  4357c8:	add	x0, x0, #0x1
  4357cc:	cmp	x0, x3
  4357d0:	b.ne	43579c <argp_usage@@Base+0x82bc>  // b.any
  4357d4:	ldr	w0, [sp, #228]
  4357d8:	stp	x15, x13, [sp, #168]
  4357dc:	stp	x6, x10, [sp, #184]
  4357e0:	str	w7, [sp, #200]
  4357e4:	stp	w18, w14, [sp, #208]
  4357e8:	str	x3, [sp, #216]
  4357ec:	bl	404db0 <iswprint@plt>
  4357f0:	ldr	x15, [sp, #168]
  4357f4:	cmp	w0, #0x0
  4357f8:	ldr	x3, [sp, #216]
  4357fc:	csel	w20, w20, wzr, ne  // ne = any
  435800:	add	x0, sp, #0xe8
  435804:	add	x15, x15, x3
  435808:	str	x15, [sp, #168]
  43580c:	str	x15, [sp, #216]
  435810:	bl	404990 <mbsinit@plt>
  435814:	ldr	w7, [sp, #200]
  435818:	ldp	w18, w14, [sp, #208]
  43581c:	ldp	x15, x13, [sp, #168]
  435820:	ldp	x6, x10, [sp, #184]
  435824:	cbz	w0, 435708 <argp_usage@@Base+0x8228>
  435828:	cmp	x15, #0x1
  43582c:	b.ls	435308 <argp_usage@@Base+0x7e28>  // b.plast
  435830:	eor	w0, w20, #0x1
  435834:	add	x15, x13, x15
  435838:	and	w0, w22, w0
  43583c:	mov	w3, #0x0                   	// #0
  435840:	and	w0, w0, #0xff
  435844:	mov	w16, #0x5c                  	// #92
  435848:	mov	w1, #0x27                  	// #39
  43584c:	mov	w17, #0x24                  	// #36
  435850:	cbz	w0, 435944 <argp_usage@@Base+0x8464>
  435854:	cmp	w25, #0x2
  435858:	cset	w3, eq  // eq = none
  43585c:	cbnz	w28, 435a1c <argp_usage@@Base+0x853c>
  435860:	eor	w2, w23, #0x1
  435864:	ands	w2, w3, w2
  435868:	b.eq	4358a0 <argp_usage@@Base+0x83c0>  // b.none
  43586c:	cmp	x27, x19
  435870:	b.ls	435878 <argp_usage@@Base+0x8398>  // b.plast
  435874:	strb	w1, [x26, x19]
  435878:	add	x3, x19, #0x1
  43587c:	cmp	x27, x3
  435880:	b.ls	435888 <argp_usage@@Base+0x83a8>  // b.plast
  435884:	strb	w17, [x26, x3]
  435888:	add	x3, x19, #0x2
  43588c:	cmp	x27, x3
  435890:	b.ls	435898 <argp_usage@@Base+0x83b8>  // b.plast
  435894:	strb	w1, [x26, x3]
  435898:	add	x19, x19, #0x3
  43589c:	mov	w23, w2
  4358a0:	cmp	x27, x19
  4358a4:	b.ls	4358ac <argp_usage@@Base+0x83cc>  // b.plast
  4358a8:	strb	w16, [x26, x19]
  4358ac:	add	x3, x19, #0x1
  4358b0:	cmp	x27, x3
  4358b4:	b.ls	4358c4 <argp_usage@@Base+0x83e4>  // b.plast
  4358b8:	lsr	w2, w7, #6
  4358bc:	add	w2, w2, #0x30
  4358c0:	strb	w2, [x26, x3]
  4358c4:	add	x3, x19, #0x2
  4358c8:	cmp	x27, x3
  4358cc:	b.ls	4358dc <argp_usage@@Base+0x83fc>  // b.plast
  4358d0:	ubfx	x2, x7, #3, #3
  4358d4:	add	w2, w2, #0x30
  4358d8:	strb	w2, [x26, x3]
  4358dc:	and	w7, w7, #0x7
  4358e0:	add	x19, x19, #0x3
  4358e4:	add	w7, w7, #0x30
  4358e8:	mov	w3, w0
  4358ec:	add	x2, x13, #0x1
  4358f0:	eor	w14, w3, #0x1
  4358f4:	and	w14, w23, w14
  4358f8:	cmp	x2, x15
  4358fc:	b.cs	435550 <argp_usage@@Base+0x8070>  // b.hs, b.nlast
  435900:	cbz	w14, 435928 <argp_usage@@Base+0x8448>
  435904:	cmp	x27, x19
  435908:	b.ls	435910 <argp_usage@@Base+0x8430>  // b.plast
  43590c:	strb	w1, [x26, x19]
  435910:	add	x13, x19, #0x1
  435914:	cmp	x27, x13
  435918:	b.ls	435920 <argp_usage@@Base+0x8440>  // b.plast
  43591c:	strb	w1, [x26, x13]
  435920:	add	x19, x19, #0x2
  435924:	mov	w23, #0x0                   	// #0
  435928:	cmp	x27, x19
  43592c:	b.ls	435934 <argp_usage@@Base+0x8454>  // b.plast
  435930:	strb	w7, [x26, x19]
  435934:	ldrb	w7, [x21, x2]
  435938:	add	x19, x19, #0x1
  43593c:	mov	x13, x2
  435940:	b	435850 <argp_usage@@Base+0x8370>
  435944:	cbz	w18, 4358ec <argp_usage@@Base+0x840c>
  435948:	cmp	x27, x19
  43594c:	b.ls	435954 <argp_usage@@Base+0x8474>  // b.plast
  435950:	strb	w16, [x26, x19]
  435954:	add	x19, x19, #0x1
  435958:	mov	w18, #0x0                   	// #0
  43595c:	b	4358ec <argp_usage@@Base+0x840c>
  435960:	mov	w3, w22
  435964:	mov	w20, #0x0                   	// #0
  435968:	mov	w7, #0x30                  	// #48
  43596c:	b	435514 <argp_usage@@Base+0x8034>
  435970:	mov	w7, #0x3f                  	// #63
  435974:	b	4353f4 <argp_usage@@Base+0x7f14>
  435978:	mov	w7, w0
  43597c:	b	4353f4 <argp_usage@@Base+0x7f14>
  435980:	mov	w20, w14
  435984:	str	w14, [sp, #144]
  435988:	b	4351cc <argp_usage@@Base+0x7cec>
  43598c:	cmp	x24, x13
  435990:	b	434f7c <argp_usage@@Base+0x7a9c>
  435994:	ldr	x0, [sp, #112]
  435998:	cmp	x27, #0x0
  43599c:	cset	w28, eq  // eq = none
  4359a0:	mov	w25, #0x2                   	// #2
  4359a4:	cmp	x0, #0x0
  4359a8:	csel	w20, w28, wzr, ne  // ne = any
  4359ac:	cbnz	w20, 434f20 <argp_usage@@Base+0x7a40>
  4359b0:	ldr	w0, [sp, #144]
  4359b4:	cmp	x6, #0x0
  4359b8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4359bc:	mov	x0, x19
  4359c0:	b.ne	435a14 <argp_usage@@Base+0x8534>  // b.any
  4359c4:	cmp	x27, x0
  4359c8:	b.ls	4359d0 <argp_usage@@Base+0x84f0>  // b.plast
  4359cc:	strb	wzr, [x26, x0]
  4359d0:	ldp	x29, x30, [sp, #16]
  4359d4:	ldp	x19, x20, [sp, #32]
  4359d8:	ldp	x21, x22, [sp, #48]
  4359dc:	ldp	x23, x24, [sp, #64]
  4359e0:	ldp	x25, x26, [sp, #80]
  4359e4:	ldp	x27, x28, [sp, #96]
  4359e8:	add	sp, sp, #0xf0
  4359ec:	ret
  4359f0:	mov	w0, w5
  4359f4:	b	4359b4 <argp_usage@@Base+0x84d4>
  4359f8:	cmp	x27, x0
  4359fc:	b.ls	435a04 <argp_usage@@Base+0x8524>  // b.plast
  435a00:	strb	w1, [x26, x0]
  435a04:	add	x0, x0, #0x1
  435a08:	ldrb	w1, [x6, x0]
  435a0c:	cbnz	w1, 4359f8 <argp_usage@@Base+0x8518>
  435a10:	b	4359c4 <argp_usage@@Base+0x84e4>
  435a14:	sub	x6, x6, x19
  435a18:	b	435a08 <argp_usage@@Base+0x8528>
  435a1c:	mov	w22, w28
  435a20:	b	43546c <argp_usage@@Base+0x7f8c>
  435a24:	sub	sp, sp, #0x80
  435a28:	stp	x29, x30, [sp, #16]
  435a2c:	add	x29, sp, #0x10
  435a30:	stp	x19, x20, [sp, #32]
  435a34:	mov	w19, w0
  435a38:	mov	x20, x3
  435a3c:	stp	x21, x22, [sp, #48]
  435a40:	stp	x23, x24, [sp, #64]
  435a44:	mov	x24, x1
  435a48:	stp	x25, x26, [sp, #80]
  435a4c:	mov	x25, x2
  435a50:	stp	x27, x28, [sp, #96]
  435a54:	bl	404e10 <__errno_location@plt>
  435a58:	mov	x23, x0
  435a5c:	ldr	w0, [x0]
  435a60:	adrp	x27, 471000 <_obstack_memory_used@@Base+0x39380>
  435a64:	str	w0, [sp, #116]
  435a68:	ldr	x28, [x27, #1040]
  435a6c:	tbz	w19, #31, 435a74 <argp_usage@@Base+0x8594>
  435a70:	bl	404970 <abort@plt>
  435a74:	add	x22, x27, #0x410
  435a78:	ldr	w0, [x22, #8]
  435a7c:	cmp	w0, w19
  435a80:	b.gt	435aec <argp_usage@@Base+0x860c>
  435a84:	mov	w0, #0x7fffffff            	// #2147483647
  435a88:	cmp	w19, w0
  435a8c:	b.ne	435a94 <argp_usage@@Base+0x85b4>  // b.any
  435a90:	bl	40d4bc <wcrtomb@plt+0x856c>
  435a94:	add	x2, x22, #0x10
  435a98:	add	w26, w19, #0x1
  435a9c:	cmp	x28, x2
  435aa0:	str	x2, [sp, #120]
  435aa4:	csel	x0, x28, xzr, ne  // ne = any
  435aa8:	sbfiz	x1, x26, #4, #32
  435aac:	bl	436da4 <argp_usage@@Base+0x98c4>
  435ab0:	str	x0, [x27, #1040]
  435ab4:	ldr	x2, [sp, #120]
  435ab8:	mov	x21, x0
  435abc:	cmp	x28, x2
  435ac0:	b.ne	435acc <argp_usage@@Base+0x85ec>  // b.any
  435ac4:	ldp	x0, x1, [x22, #16]
  435ac8:	stp	x0, x1, [x21]
  435acc:	ldr	w0, [x22, #8]
  435ad0:	mov	x28, x21
  435ad4:	mov	w1, #0x0                   	// #0
  435ad8:	sub	w2, w26, w0
  435adc:	add	x0, x21, w0, sxtw #4
  435ae0:	sbfiz	x2, x2, #4, #32
  435ae4:	bl	404700 <memset@plt>
  435ae8:	str	w26, [x22, #8]
  435aec:	sbfiz	x9, x19, #4, #32
  435af0:	add	x19, x28, w19, sxtw #4
  435af4:	ldp	x7, x0, [x20, #40]
  435af8:	add	x27, x20, #0x8
  435afc:	ldp	w4, w26, [x20]
  435b00:	mov	x6, x27
  435b04:	ldr	x22, [x28, x9]
  435b08:	orr	w26, w26, #0x1
  435b0c:	ldr	x21, [x19, #8]
  435b10:	str	x0, [sp]
  435b14:	mov	x3, x25
  435b18:	mov	x2, x24
  435b1c:	mov	x1, x22
  435b20:	mov	w5, w26
  435b24:	mov	x0, x21
  435b28:	str	x9, [sp, #120]
  435b2c:	bl	434e90 <argp_usage@@Base+0x79b0>
  435b30:	cmp	x22, x0
  435b34:	b.hi	435b90 <argp_usage@@Base+0x86b0>  // b.pmore
  435b38:	ldr	x9, [sp, #120]
  435b3c:	add	x22, x0, #0x1
  435b40:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  435b44:	add	x0, x0, #0xde8
  435b48:	cmp	x21, x0
  435b4c:	str	x22, [x28, x9]
  435b50:	b.eq	435b5c <argp_usage@@Base+0x867c>  // b.none
  435b54:	mov	x0, x21
  435b58:	bl	404ae0 <free@plt>
  435b5c:	mov	x0, x22
  435b60:	bl	436d44 <argp_usage@@Base+0x9864>
  435b64:	ldp	x7, x1, [x20, #40]
  435b68:	mov	x21, x0
  435b6c:	ldr	w4, [x20]
  435b70:	mov	x6, x27
  435b74:	str	x0, [x19, #8]
  435b78:	mov	w5, w26
  435b7c:	str	x1, [sp]
  435b80:	mov	x3, x25
  435b84:	mov	x2, x24
  435b88:	mov	x1, x22
  435b8c:	bl	434e90 <argp_usage@@Base+0x79b0>
  435b90:	ldr	w0, [sp, #116]
  435b94:	ldp	x29, x30, [sp, #16]
  435b98:	ldp	x19, x20, [sp, #32]
  435b9c:	ldp	x25, x26, [sp, #80]
  435ba0:	ldp	x27, x28, [sp, #96]
  435ba4:	str	w0, [x23]
  435ba8:	mov	x0, x21
  435bac:	ldp	x21, x22, [sp, #48]
  435bb0:	ldp	x23, x24, [sp, #64]
  435bb4:	add	sp, sp, #0x80
  435bb8:	ret
  435bbc:	stp	x29, x30, [sp, #-48]!
  435bc0:	mov	x29, sp
  435bc4:	stp	x19, x20, [sp, #16]
  435bc8:	mov	x19, x0
  435bcc:	str	x21, [sp, #32]
  435bd0:	bl	404e10 <__errno_location@plt>
  435bd4:	ldr	w21, [x0]
  435bd8:	mov	x20, x0
  435bdc:	cbnz	x19, 435bec <argp_usage@@Base+0x870c>
  435be0:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  435be4:	add	x19, x19, #0xde8
  435be8:	add	x19, x19, #0x100
  435bec:	mov	x0, x19
  435bf0:	mov	x1, #0x38                  	// #56
  435bf4:	bl	436ee0 <argp_usage@@Base+0x9a00>
  435bf8:	str	w21, [x20]
  435bfc:	ldp	x19, x20, [sp, #16]
  435c00:	ldr	x21, [sp, #32]
  435c04:	ldp	x29, x30, [sp], #48
  435c08:	ret
  435c0c:	cbnz	x0, 435c1c <argp_usage@@Base+0x873c>
  435c10:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  435c14:	add	x0, x0, #0xde8
  435c18:	add	x0, x0, #0x100
  435c1c:	ldr	w0, [x0]
  435c20:	ret
  435c24:	cbnz	x0, 435c34 <argp_usage@@Base+0x8754>
  435c28:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  435c2c:	add	x0, x0, #0xde8
  435c30:	add	x0, x0, #0x100
  435c34:	str	w1, [x0]
  435c38:	ret
  435c3c:	and	w1, w1, #0xff
  435c40:	cbnz	x0, 435c50 <argp_usage@@Base+0x8770>
  435c44:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  435c48:	add	x0, x0, #0xde8
  435c4c:	add	x0, x0, #0x100
  435c50:	ubfx	x4, x1, #5, #3
  435c54:	add	x0, x0, #0x8
  435c58:	and	w3, w1, #0x1f
  435c5c:	lsl	x4, x4, #2
  435c60:	ldr	w6, [x0, x4]
  435c64:	lsr	w5, w6, w3
  435c68:	eor	w1, w5, w2
  435c6c:	and	w1, w1, #0x1
  435c70:	lsl	w1, w1, w3
  435c74:	eor	w1, w1, w6
  435c78:	str	w1, [x0, x4]
  435c7c:	and	w0, w5, #0x1
  435c80:	ret
  435c84:	mov	x2, x0
  435c88:	cbnz	x0, 435c98 <argp_usage@@Base+0x87b8>
  435c8c:	adrp	x2, 471000 <_obstack_memory_used@@Base+0x39380>
  435c90:	add	x2, x2, #0xde8
  435c94:	add	x2, x2, #0x100
  435c98:	ldr	w0, [x2, #4]
  435c9c:	str	w1, [x2, #4]
  435ca0:	ret
  435ca4:	cbnz	x0, 435cb4 <argp_usage@@Base+0x87d4>
  435ca8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  435cac:	add	x0, x0, #0xde8
  435cb0:	add	x0, x0, #0x100
  435cb4:	mov	w3, #0xa                   	// #10
  435cb8:	str	w3, [x0]
  435cbc:	cmp	x1, #0x0
  435cc0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  435cc4:	b.ne	435cd4 <argp_usage@@Base+0x87f4>  // b.any
  435cc8:	stp	x29, x30, [sp, #-16]!
  435ccc:	mov	x29, sp
  435cd0:	bl	404970 <abort@plt>
  435cd4:	stp	x1, x2, [x0, #40]
  435cd8:	ret
  435cdc:	sub	sp, sp, #0x60
  435ce0:	stp	x29, x30, [sp, #16]
  435ce4:	add	x29, sp, #0x10
  435ce8:	stp	x19, x20, [sp, #32]
  435cec:	stp	x21, x22, [sp, #48]
  435cf0:	mov	x21, x0
  435cf4:	mov	x22, x1
  435cf8:	stp	x23, x24, [sp, #64]
  435cfc:	mov	x23, x2
  435d00:	mov	x24, x3
  435d04:	str	x25, [sp, #80]
  435d08:	cbnz	x4, 435d6c <argp_usage@@Base+0x888c>
  435d0c:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  435d10:	add	x19, x19, #0xde8
  435d14:	add	x19, x19, #0x100
  435d18:	bl	404e10 <__errno_location@plt>
  435d1c:	ldr	w25, [x0]
  435d20:	mov	x20, x0
  435d24:	add	x6, x19, #0x8
  435d28:	ldr	x0, [x19, #48]
  435d2c:	str	x0, [sp]
  435d30:	mov	x3, x24
  435d34:	mov	x2, x23
  435d38:	ldp	w4, w5, [x19]
  435d3c:	mov	x1, x22
  435d40:	ldr	x7, [x19, #40]
  435d44:	mov	x0, x21
  435d48:	bl	434e90 <argp_usage@@Base+0x79b0>
  435d4c:	ldp	x29, x30, [sp, #16]
  435d50:	ldp	x21, x22, [sp, #48]
  435d54:	ldp	x23, x24, [sp, #64]
  435d58:	str	w25, [x20]
  435d5c:	ldp	x19, x20, [sp, #32]
  435d60:	ldr	x25, [sp, #80]
  435d64:	add	sp, sp, #0x60
  435d68:	ret
  435d6c:	mov	x19, x4
  435d70:	b	435d18 <argp_usage@@Base+0x8838>
  435d74:	sub	sp, sp, #0x80
  435d78:	stp	x29, x30, [sp, #16]
  435d7c:	add	x29, sp, #0x10
  435d80:	stp	x19, x20, [sp, #32]
  435d84:	mov	x20, x2
  435d88:	stp	x21, x22, [sp, #48]
  435d8c:	stp	x23, x24, [sp, #64]
  435d90:	mov	x23, x0
  435d94:	mov	x24, x1
  435d98:	stp	x25, x26, [sp, #80]
  435d9c:	stp	x27, x28, [sp, #96]
  435da0:	cbnz	x3, 435e70 <argp_usage@@Base+0x8990>
  435da4:	adrp	x19, 471000 <_obstack_memory_used@@Base+0x39380>
  435da8:	add	x19, x19, #0xde8
  435dac:	add	x19, x19, #0x100
  435db0:	bl	404e10 <__errno_location@plt>
  435db4:	ldr	w8, [x0]
  435db8:	mov	x22, x0
  435dbc:	ldr	w5, [x19, #4]
  435dc0:	ldr	x0, [x19, #48]
  435dc4:	str	x0, [sp]
  435dc8:	cmp	x20, #0x0
  435dcc:	add	x28, x19, #0x8
  435dd0:	cset	w25, eq  // eq = none
  435dd4:	ldr	w4, [x19]
  435dd8:	ldr	x7, [x19, #40]
  435ddc:	orr	w25, w25, w5
  435de0:	mov	x6, x28
  435de4:	mov	x3, x24
  435de8:	mov	x2, x23
  435dec:	mov	w5, w25
  435df0:	mov	x1, #0x0                   	// #0
  435df4:	mov	x0, #0x0                   	// #0
  435df8:	str	w8, [sp, #124]
  435dfc:	bl	434e90 <argp_usage@@Base+0x79b0>
  435e00:	add	x27, x0, #0x1
  435e04:	mov	x21, x0
  435e08:	mov	x0, x27
  435e0c:	bl	436d44 <argp_usage@@Base+0x9864>
  435e10:	ldr	x1, [x19, #48]
  435e14:	str	x1, [sp]
  435e18:	mov	x26, x0
  435e1c:	mov	x6, x28
  435e20:	ldr	w4, [x19]
  435e24:	mov	w5, w25
  435e28:	ldr	x7, [x19, #40]
  435e2c:	mov	x3, x24
  435e30:	mov	x2, x23
  435e34:	mov	x1, x27
  435e38:	bl	434e90 <argp_usage@@Base+0x79b0>
  435e3c:	ldr	w8, [sp, #124]
  435e40:	str	w8, [x22]
  435e44:	cbz	x20, 435e4c <argp_usage@@Base+0x896c>
  435e48:	str	x21, [x20]
  435e4c:	mov	x0, x26
  435e50:	ldp	x29, x30, [sp, #16]
  435e54:	ldp	x19, x20, [sp, #32]
  435e58:	ldp	x21, x22, [sp, #48]
  435e5c:	ldp	x23, x24, [sp, #64]
  435e60:	ldp	x25, x26, [sp, #80]
  435e64:	ldp	x27, x28, [sp, #96]
  435e68:	add	sp, sp, #0x80
  435e6c:	ret
  435e70:	mov	x19, x3
  435e74:	b	435db0 <argp_usage@@Base+0x88d0>
  435e78:	mov	x3, x2
  435e7c:	mov	x2, #0x0                   	// #0
  435e80:	b	435d74 <argp_usage@@Base+0x8894>
  435e84:	stp	x29, x30, [sp, #-64]!
  435e88:	mov	x29, sp
  435e8c:	stp	x19, x20, [sp, #16]
  435e90:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  435e94:	add	x19, x20, #0x410
  435e98:	stp	x21, x22, [sp, #32]
  435e9c:	mov	x22, #0x0                   	// #0
  435ea0:	ldr	x21, [x20, #1040]
  435ea4:	str	x23, [sp, #48]
  435ea8:	add	x23, x21, #0x8
  435eac:	ldr	w0, [x19, #8]
  435eb0:	add	x22, x22, #0x1
  435eb4:	cmp	w0, w22
  435eb8:	b.gt	435f10 <argp_usage@@Base+0x8a30>
  435ebc:	ldr	x0, [x21, #8]
  435ec0:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x39380>
  435ec4:	add	x22, x22, #0xde8
  435ec8:	cmp	x0, x22
  435ecc:	b.eq	435edc <argp_usage@@Base+0x89fc>  // b.none
  435ed0:	bl	404ae0 <free@plt>
  435ed4:	mov	x0, #0x100                 	// #256
  435ed8:	stp	x0, x22, [x19, #16]
  435edc:	add	x22, x19, #0x10
  435ee0:	cmp	x21, x22
  435ee4:	b.eq	435ef4 <argp_usage@@Base+0x8a14>  // b.none
  435ee8:	mov	x0, x21
  435eec:	bl	404ae0 <free@plt>
  435ef0:	str	x22, [x20, #1040]
  435ef4:	mov	w0, #0x1                   	// #1
  435ef8:	str	w0, [x19, #8]
  435efc:	ldp	x19, x20, [sp, #16]
  435f00:	ldp	x21, x22, [sp, #32]
  435f04:	ldr	x23, [sp, #48]
  435f08:	ldp	x29, x30, [sp], #64
  435f0c:	ret
  435f10:	lsl	x0, x22, #4
  435f14:	ldr	x0, [x23, x0]
  435f18:	bl	404ae0 <free@plt>
  435f1c:	b	435eac <argp_usage@@Base+0x89cc>
  435f20:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  435f24:	add	x3, x3, #0xde8
  435f28:	add	x3, x3, #0x100
  435f2c:	mov	x2, #0xffffffffffffffff    	// #-1
  435f30:	b	435a24 <argp_usage@@Base+0x8544>
  435f34:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  435f38:	add	x3, x3, #0xde8
  435f3c:	add	x3, x3, #0x100
  435f40:	b	435a24 <argp_usage@@Base+0x8544>
  435f44:	mov	x1, x0
  435f48:	mov	w0, #0x0                   	// #0
  435f4c:	b	435f20 <argp_usage@@Base+0x8a40>
  435f50:	mov	x2, x1
  435f54:	mov	x1, x0
  435f58:	mov	w0, #0x0                   	// #0
  435f5c:	b	435f34 <argp_usage@@Base+0x8a54>
  435f60:	stp	x29, x30, [sp, #-96]!
  435f64:	add	x8, sp, #0x28
  435f68:	mov	x29, sp
  435f6c:	stp	x19, x20, [sp, #16]
  435f70:	mov	x20, x2
  435f74:	mov	w19, w0
  435f78:	mov	w0, w1
  435f7c:	bl	434d1c <argp_usage@@Base+0x783c>
  435f80:	add	x3, sp, #0x28
  435f84:	mov	x1, x20
  435f88:	mov	w0, w19
  435f8c:	mov	x2, #0xffffffffffffffff    	// #-1
  435f90:	bl	435a24 <argp_usage@@Base+0x8544>
  435f94:	ldp	x19, x20, [sp, #16]
  435f98:	ldp	x29, x30, [sp], #96
  435f9c:	ret
  435fa0:	stp	x29, x30, [sp, #-112]!
  435fa4:	add	x8, sp, #0x38
  435fa8:	mov	x29, sp
  435fac:	stp	x19, x20, [sp, #16]
  435fb0:	mov	x20, x2
  435fb4:	mov	w19, w0
  435fb8:	mov	w0, w1
  435fbc:	str	x21, [sp, #32]
  435fc0:	mov	x21, x3
  435fc4:	bl	434d1c <argp_usage@@Base+0x783c>
  435fc8:	add	x3, sp, #0x38
  435fcc:	mov	x2, x21
  435fd0:	mov	x1, x20
  435fd4:	mov	w0, w19
  435fd8:	bl	435a24 <argp_usage@@Base+0x8544>
  435fdc:	ldp	x19, x20, [sp, #16]
  435fe0:	ldr	x21, [sp, #32]
  435fe4:	ldp	x29, x30, [sp], #112
  435fe8:	ret
  435fec:	mov	x2, x1
  435ff0:	mov	w1, w0
  435ff4:	mov	w0, #0x0                   	// #0
  435ff8:	b	435f60 <argp_usage@@Base+0x8a80>
  435ffc:	mov	x3, x2
  436000:	mov	x2, x1
  436004:	mov	w1, w0
  436008:	mov	w0, #0x0                   	// #0
  43600c:	b	435fa0 <argp_usage@@Base+0x8ac0>
  436010:	stp	x29, x30, [sp, #-112]!
  436014:	mov	x29, sp
  436018:	stp	x19, x20, [sp, #16]
  43601c:	mov	x20, x1
  436020:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  436024:	add	x1, x1, #0xde8
  436028:	mov	x19, x0
  43602c:	add	x1, x1, #0x100
  436030:	str	x21, [sp, #32]
  436034:	and	w21, w2, #0xff
  436038:	mov	x2, #0x38                  	// #56
  43603c:	add	x0, sp, x2
  436040:	bl	404200 <memcpy@plt>
  436044:	mov	w1, w21
  436048:	add	x0, sp, #0x38
  43604c:	mov	w2, #0x1                   	// #1
  436050:	bl	435c3c <argp_usage@@Base+0x875c>
  436054:	add	x3, sp, #0x38
  436058:	mov	x2, x20
  43605c:	mov	x1, x19
  436060:	mov	w0, #0x0                   	// #0
  436064:	bl	435a24 <argp_usage@@Base+0x8544>
  436068:	ldp	x19, x20, [sp, #16]
  43606c:	ldr	x21, [sp, #32]
  436070:	ldp	x29, x30, [sp], #112
  436074:	ret
  436078:	mov	w2, w1
  43607c:	mov	x1, #0xffffffffffffffff    	// #-1
  436080:	b	436010 <argp_usage@@Base+0x8b30>
  436084:	mov	w1, #0x3a                  	// #58
  436088:	b	436078 <argp_usage@@Base+0x8b98>
  43608c:	mov	w2, #0x3a                  	// #58
  436090:	b	436010 <argp_usage@@Base+0x8b30>
  436094:	stp	x29, x30, [sp, #-160]!
  436098:	add	x8, sp, #0x20
  43609c:	mov	x29, sp
  4360a0:	stp	x19, x20, [sp, #16]
  4360a4:	mov	x20, x2
  4360a8:	mov	w19, w0
  4360ac:	mov	w0, w1
  4360b0:	bl	434d1c <argp_usage@@Base+0x783c>
  4360b4:	add	x1, sp, #0x20
  4360b8:	add	x0, sp, #0x68
  4360bc:	mov	x2, #0x38                  	// #56
  4360c0:	bl	404200 <memcpy@plt>
  4360c4:	add	x0, sp, #0x68
  4360c8:	mov	w2, #0x1                   	// #1
  4360cc:	mov	w1, #0x3a                  	// #58
  4360d0:	bl	435c3c <argp_usage@@Base+0x875c>
  4360d4:	add	x3, sp, #0x68
  4360d8:	mov	x1, x20
  4360dc:	mov	w0, w19
  4360e0:	mov	x2, #0xffffffffffffffff    	// #-1
  4360e4:	bl	435a24 <argp_usage@@Base+0x8544>
  4360e8:	ldp	x19, x20, [sp, #16]
  4360ec:	ldp	x29, x30, [sp], #160
  4360f0:	ret
  4360f4:	stp	x29, x30, [sp, #-128]!
  4360f8:	mov	x29, sp
  4360fc:	stp	x21, x22, [sp, #32]
  436100:	mov	x22, x1
  436104:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  436108:	add	x1, x1, #0xde8
  43610c:	mov	x21, x4
  436110:	add	x1, x1, #0x100
  436114:	stp	x19, x20, [sp, #16]
  436118:	mov	x20, x3
  43611c:	mov	w19, w0
  436120:	add	x0, sp, #0x48
  436124:	str	x23, [sp, #48]
  436128:	mov	x23, x2
  43612c:	mov	x2, #0x38                  	// #56
  436130:	bl	404200 <memcpy@plt>
  436134:	mov	x2, x23
  436138:	mov	x1, x22
  43613c:	add	x0, sp, #0x48
  436140:	bl	435ca4 <argp_usage@@Base+0x87c4>
  436144:	add	x3, sp, #0x48
  436148:	mov	x2, x21
  43614c:	mov	x1, x20
  436150:	mov	w0, w19
  436154:	bl	435a24 <argp_usage@@Base+0x8544>
  436158:	ldp	x19, x20, [sp, #16]
  43615c:	ldp	x21, x22, [sp, #32]
  436160:	ldr	x23, [sp, #48]
  436164:	ldp	x29, x30, [sp], #128
  436168:	ret
  43616c:	mov	x4, #0xffffffffffffffff    	// #-1
  436170:	b	4360f4 <argp_usage@@Base+0x8c14>
  436174:	mov	x3, x2
  436178:	mov	x2, x1
  43617c:	mov	x1, x0
  436180:	mov	w0, #0x0                   	// #0
  436184:	b	43616c <argp_usage@@Base+0x8c8c>
  436188:	mov	x4, x3
  43618c:	mov	x3, x2
  436190:	mov	x2, x1
  436194:	mov	x1, x0
  436198:	mov	w0, #0x0                   	// #0
  43619c:	b	4360f4 <argp_usage@@Base+0x8c14>
  4361a0:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x39380>
  4361a4:	add	x3, x3, #0x410
  4361a8:	add	x3, x3, #0x20
  4361ac:	b	435a24 <argp_usage@@Base+0x8544>
  4361b0:	mov	x2, x1
  4361b4:	mov	x1, x0
  4361b8:	mov	w0, #0x0                   	// #0
  4361bc:	b	4361a0 <argp_usage@@Base+0x8cc0>
  4361c0:	mov	x2, #0xffffffffffffffff    	// #-1
  4361c4:	b	4361a0 <argp_usage@@Base+0x8cc0>
  4361c8:	mov	x1, x0
  4361cc:	mov	w0, #0x0                   	// #0
  4361d0:	b	4361c0 <argp_usage@@Base+0x8ce0>
  4361d4:	stp	x29, x30, [sp, #-336]!
  4361d8:	mov	x29, sp
  4361dc:	stp	x19, x20, [sp, #16]
  4361e0:	stp	x21, x22, [sp, #32]
  4361e4:	mov	x22, x1
  4361e8:	mov	x21, x3
  4361ec:	stp	x23, x24, [sp, #48]
  4361f0:	mov	w24, w0
  4361f4:	mov	w23, w2
  4361f8:	str	x25, [sp, #64]
  4361fc:	mov	w25, w4
  436200:	bl	404b00 <renameat2@plt>
  436204:	mov	w19, w0
  436208:	tbz	w0, #31, 436278 <argp_usage@@Base+0x8d98>
  43620c:	bl	404e10 <__errno_location@plt>
  436210:	mov	x20, x0
  436214:	ldr	w0, [x0]
  436218:	cmp	w0, #0x26
  43621c:	ccmp	w0, #0x16, #0x4, ne  // ne = any
  436220:	b.eq	43622c <argp_usage@@Base+0x8d4c>  // b.none
  436224:	cmp	w0, #0x5f
  436228:	b.ne	436278 <argp_usage@@Base+0x8d98>  // b.any
  43622c:	cbz	w25, 436294 <argp_usage@@Base+0x8db4>
  436230:	tst	w25, #0xfffffffe
  436234:	b.eq	436244 <argp_usage@@Base+0x8d64>  // b.none
  436238:	mov	w0, #0x5f                  	// #95
  43623c:	str	w0, [x20]
  436240:	b	436274 <argp_usage@@Base+0x8d94>
  436244:	add	x2, sp, #0xd0
  436248:	mov	x1, x21
  43624c:	mov	w0, w23
  436250:	bl	4367f4 <argp_usage@@Base+0x9314>
  436254:	cbz	w0, 436264 <argp_usage@@Base+0x8d84>
  436258:	ldr	w0, [x20]
  43625c:	cmp	w0, #0x4b
  436260:	b.ne	43626c <argp_usage@@Base+0x8d8c>  // b.any
  436264:	mov	w0, #0x11                  	// #17
  436268:	b	43623c <argp_usage@@Base+0x8d5c>
  43626c:	cmp	w0, #0x2
  436270:	b.eq	4362d4 <argp_usage@@Base+0x8df4>  // b.none
  436274:	mov	w19, #0xffffffff            	// #-1
  436278:	mov	w0, w19
  43627c:	ldp	x19, x20, [sp, #16]
  436280:	ldp	x21, x22, [sp, #32]
  436284:	ldp	x23, x24, [sp, #48]
  436288:	ldr	x25, [sp, #64]
  43628c:	ldp	x29, x30, [sp], #336
  436290:	ret
  436294:	mov	w25, #0x0                   	// #0
  436298:	mov	x0, x22
  43629c:	bl	404280 <strlen@plt>
  4362a0:	mov	x19, x0
  4362a4:	mov	x0, x21
  4362a8:	bl	404280 <strlen@plt>
  4362ac:	cmp	x19, #0x0
  4362b0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4362b4:	b.ne	4362dc <argp_usage@@Base+0x8dfc>  // b.any
  4362b8:	mov	x3, x21
  4362bc:	mov	w2, w23
  4362c0:	mov	x1, x22
  4362c4:	mov	w0, w24
  4362c8:	bl	404b30 <renameat@plt>
  4362cc:	mov	w19, w0
  4362d0:	b	436278 <argp_usage@@Base+0x8d98>
  4362d4:	mov	w25, #0x1                   	// #1
  4362d8:	b	436298 <argp_usage@@Base+0x8db8>
  4362dc:	add	x19, x22, x19
  4362e0:	add	x0, x21, x0
  4362e4:	ldurb	w2, [x19, #-1]
  4362e8:	ldurb	w1, [x0, #-1]
  4362ec:	mov	w0, #0x2f                  	// #47
  4362f0:	cmp	w2, #0x2f
  4362f4:	ccmp	w1, w0, #0x4, ne  // ne = any
  4362f8:	b.ne	4362b8 <argp_usage@@Base+0x8dd8>  // b.any
  4362fc:	add	x2, sp, #0x50
  436300:	mov	x1, x22
  436304:	mov	w0, w24
  436308:	bl	4367f4 <argp_usage@@Base+0x9314>
  43630c:	cbnz	w0, 436274 <argp_usage@@Base+0x8d94>
  436310:	cbz	w25, 43632c <argp_usage@@Base+0x8e4c>
  436314:	ldr	w0, [sp, #96]
  436318:	and	w0, w0, #0xf000
  43631c:	cmp	w0, #0x4, lsl #12
  436320:	b.eq	4362b8 <argp_usage@@Base+0x8dd8>  // b.none
  436324:	mov	w0, #0x2                   	// #2
  436328:	b	43623c <argp_usage@@Base+0x8d5c>
  43632c:	add	x2, sp, #0xd0
  436330:	mov	x1, x21
  436334:	mov	w0, w23
  436338:	bl	4367f4 <argp_usage@@Base+0x9314>
  43633c:	cbz	w0, 436360 <argp_usage@@Base+0x8e80>
  436340:	ldr	w0, [x20]
  436344:	cmp	w0, #0x2
  436348:	b.ne	436274 <argp_usage@@Base+0x8d94>  // b.any
  43634c:	ldr	w0, [sp, #96]
  436350:	and	w0, w0, #0xf000
  436354:	cmp	w0, #0x4, lsl #12
  436358:	b.ne	436274 <argp_usage@@Base+0x8d94>  // b.any
  43635c:	b	4362b8 <argp_usage@@Base+0x8dd8>
  436360:	ldr	w0, [sp, #224]
  436364:	and	w0, w0, #0xf000
  436368:	cmp	w0, #0x4, lsl #12
  43636c:	b.eq	436378 <argp_usage@@Base+0x8e98>  // b.none
  436370:	mov	w0, #0x14                  	// #20
  436374:	b	43623c <argp_usage@@Base+0x8d5c>
  436378:	ldr	w0, [sp, #96]
  43637c:	and	w0, w0, #0xf000
  436380:	cmp	w0, #0x4, lsl #12
  436384:	b.eq	4362b8 <argp_usage@@Base+0x8dd8>  // b.none
  436388:	mov	w0, #0x15                  	// #21
  43638c:	b	43623c <argp_usage@@Base+0x8d5c>
  436390:	stp	x29, x30, [sp, #-64]!
  436394:	mov	x29, sp
  436398:	stp	x19, x20, [sp, #16]
  43639c:	mov	x19, x2
  4363a0:	stp	x21, x22, [sp, #32]
  4363a4:	mov	w21, w0
  4363a8:	mov	x22, x1
  4363ac:	str	x23, [sp, #48]
  4363b0:	mov	x23, #0x7ff00000            	// #2146435072
  4363b4:	mov	x2, x19
  4363b8:	mov	x1, x22
  4363bc:	mov	w0, w21
  4363c0:	bl	404c80 <read@plt>
  4363c4:	mov	x20, x0
  4363c8:	tbz	x0, #63, 4363ec <argp_usage@@Base+0x8f0c>
  4363cc:	bl	404e10 <__errno_location@plt>
  4363d0:	ldr	w0, [x0]
  4363d4:	cmp	w0, #0x4
  4363d8:	b.eq	4363b4 <argp_usage@@Base+0x8ed4>  // b.none
  4363dc:	cmp	w0, #0x16
  4363e0:	b.ne	4363ec <argp_usage@@Base+0x8f0c>  // b.any
  4363e4:	cmp	x19, x23
  4363e8:	b.hi	436404 <argp_usage@@Base+0x8f24>  // b.pmore
  4363ec:	mov	x0, x20
  4363f0:	ldp	x19, x20, [sp, #16]
  4363f4:	ldp	x21, x22, [sp, #32]
  4363f8:	ldr	x23, [sp, #48]
  4363fc:	ldp	x29, x30, [sp], #64
  436400:	ret
  436404:	mov	x19, #0x7ff00000            	// #2146435072
  436408:	b	4363b4 <argp_usage@@Base+0x8ed4>
  43640c:	stp	x29, x30, [sp, #-64]!
  436410:	mov	x29, sp
  436414:	stp	x19, x20, [sp, #16]
  436418:	mov	x19, x2
  43641c:	stp	x21, x22, [sp, #32]
  436420:	mov	w21, w0
  436424:	mov	x22, x1
  436428:	str	x23, [sp, #48]
  43642c:	mov	x23, #0x7ff00000            	// #2146435072
  436430:	mov	x2, x19
  436434:	mov	x1, x22
  436438:	mov	w0, w21
  43643c:	bl	404930 <write@plt>
  436440:	mov	x20, x0
  436444:	tbz	x0, #63, 436468 <argp_usage@@Base+0x8f88>
  436448:	bl	404e10 <__errno_location@plt>
  43644c:	ldr	w0, [x0]
  436450:	cmp	w0, #0x4
  436454:	b.eq	436430 <argp_usage@@Base+0x8f50>  // b.none
  436458:	cmp	w0, #0x16
  43645c:	b.ne	436468 <argp_usage@@Base+0x8f88>  // b.any
  436460:	cmp	x19, x23
  436464:	b.hi	436480 <argp_usage@@Base+0x8fa0>  // b.pmore
  436468:	mov	x0, x20
  43646c:	ldp	x19, x20, [sp, #16]
  436470:	ldp	x21, x22, [sp, #32]
  436474:	ldr	x23, [sp, #48]
  436478:	ldp	x29, x30, [sp], #64
  43647c:	ret
  436480:	mov	x19, #0x7ff00000            	// #2146435072
  436484:	b	436430 <argp_usage@@Base+0x8f50>
  436488:	stp	x29, x30, [sp, #-32]!
  43648c:	mov	w1, #0x80000               	// #524288
  436490:	mov	x29, sp
  436494:	str	x19, [sp, #16]
  436498:	mov	x19, x0
  43649c:	str	xzr, [x0, #8]
  4364a0:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x12380>
  4364a4:	add	x0, x0, #0xc29
  4364a8:	bl	443760 <_obstack_memory_used@@Base+0xbae0>
  4364ac:	str	w0, [x19]
  4364b0:	tbz	w0, #31, 4364d8 <argp_usage@@Base+0x8ff8>
  4364b4:	mov	x1, #0x0                   	// #0
  4364b8:	mov	x0, #0x0                   	// #0
  4364bc:	bl	404230 <getcwd@plt>
  4364c0:	cmp	x0, #0x0
  4364c4:	str	x0, [x19, #8]
  4364c8:	csetm	w0, eq  // eq = none
  4364cc:	ldr	x19, [sp, #16]
  4364d0:	ldp	x29, x30, [sp], #32
  4364d4:	ret
  4364d8:	mov	w0, #0x0                   	// #0
  4364dc:	b	4364cc <argp_usage@@Base+0x8fec>
  4364e0:	mov	x1, x0
  4364e4:	ldr	w0, [x0]
  4364e8:	tbnz	w0, #31, 4364f0 <argp_usage@@Base+0x9010>
  4364ec:	b	4042f0 <fchdir@plt>
  4364f0:	ldr	x0, [x1, #8]
  4364f4:	b	437428 <argp_usage@@Base+0x9f48>
  4364f8:	stp	x29, x30, [sp, #-32]!
  4364fc:	mov	x29, sp
  436500:	str	x19, [sp, #16]
  436504:	mov	x19, x0
  436508:	ldr	w0, [x0]
  43650c:	tbnz	w0, #31, 436514 <argp_usage@@Base+0x9034>
  436510:	bl	4048c0 <close@plt>
  436514:	ldr	x0, [x19, #8]
  436518:	ldr	x19, [sp, #16]
  43651c:	ldp	x29, x30, [sp], #32
  436520:	b	404ae0 <free@plt>
  436524:	ldr	x2, [x0, #8]
  436528:	ldr	x1, [x1, #8]
  43652c:	cmp	x2, x1
  436530:	cset	w0, hi  // hi = pmore
  436534:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  436538:	ret
  43653c:	ldr	x0, [x0]
  436540:	ldr	x1, [x1]
  436544:	b	404a30 <strcmp@plt>
  436548:	stp	x29, x30, [sp, #-144]!
  43654c:	mov	x29, sp
  436550:	stp	x23, x24, [sp, #48]
  436554:	mov	x23, x0
  436558:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  43655c:	add	x0, x0, #0x450
  436560:	stp	x19, x20, [sp, #16]
  436564:	stp	x21, x22, [sp, #32]
  436568:	stp	x25, x26, [sp, #64]
  43656c:	stp	x27, x28, [sp, #80]
  436570:	ldr	x26, [x0, w1, uxtw #3]
  436574:	cbz	x23, 4366c4 <argp_usage@@Base+0x91e4>
  436578:	bl	404e10 <__errno_location@plt>
  43657c:	mov	x24, x0
  436580:	mov	x20, #0x0                   	// #0
  436584:	mov	x22, #0x0                   	// #0
  436588:	mov	x21, #0x0                   	// #0
  43658c:	mov	x25, #0x0                   	// #0
  436590:	mov	x19, #0x0                   	// #0
  436594:	str	xzr, [sp, #104]
  436598:	str	wzr, [x24]
  43659c:	mov	x0, x23
  4365a0:	bl	404810 <readdir@plt>
  4365a4:	mov	x28, x0
  4365a8:	cbz	x0, 4366a4 <argp_usage@@Base+0x91c4>
  4365ac:	add	x27, x0, #0x13
  4365b0:	ldrb	w0, [x0, #19]
  4365b4:	cmp	w0, #0x2e
  4365b8:	b.ne	43664c <argp_usage@@Base+0x916c>  // b.any
  4365bc:	ldrb	w0, [x28, #20]
  4365c0:	cmp	w0, #0x2e
  4365c4:	cset	x0, eq  // eq = none
  4365c8:	add	x0, x0, #0x1
  4365cc:	ldrb	w0, [x27, x0]
  4365d0:	cbz	w0, 436598 <argp_usage@@Base+0x90b8>
  4365d4:	mov	x0, x27
  4365d8:	bl	404280 <strlen@plt>
  4365dc:	add	x4, x0, #0x1
  4365e0:	adds	x0, x20, x4
  4365e4:	str	x0, [sp, #112]
  4365e8:	cset	x0, cs  // cs = hs, nlast
  4365ec:	cbz	x26, 436654 <argp_usage@@Base+0x9174>
  4365f0:	ldr	x0, [sp, #104]
  4365f4:	cmp	x22, x0
  4365f8:	b.ne	43661c <argp_usage@@Base+0x913c>  // b.any
  4365fc:	mov	x0, x21
  436600:	add	x1, sp, #0x88
  436604:	mov	x2, #0x10                  	// #16
  436608:	str	x22, [sp, #136]
  43660c:	bl	436e14 <argp_usage@@Base+0x9934>
  436610:	mov	x21, x0
  436614:	ldr	x0, [sp, #136]
  436618:	str	x0, [sp, #104]
  43661c:	lsl	x1, x22, #4
  436620:	mov	x0, x27
  436624:	str	x1, [sp, #120]
  436628:	add	x20, x21, x22, lsl #4
  43662c:	add	x22, x22, #0x1
  436630:	bl	436f10 <argp_usage@@Base+0x9a30>
  436634:	ldr	x1, [sp, #120]
  436638:	str	x0, [x21, x1]
  43663c:	ldr	x0, [x28]
  436640:	str	x0, [x20, #8]
  436644:	ldr	x20, [sp, #112]
  436648:	b	436598 <argp_usage@@Base+0x90b8>
  43664c:	mov	x0, #0x0                   	// #0
  436650:	b	4365cc <argp_usage@@Base+0x90ec>
  436654:	sub	x1, x25, x20
  436658:	cmp	x1, x4
  43665c:	b.hi	436690 <argp_usage@@Base+0x91b0>  // b.pmore
  436660:	adds	x1, x20, x4
  436664:	str	x1, [sp, #136]
  436668:	cbz	x0, 436670 <argp_usage@@Base+0x9190>
  43666c:	bl	40d4bc <wcrtomb@plt+0x856c>
  436670:	mov	x0, x19
  436674:	add	x1, sp, #0x88
  436678:	mov	x2, #0x1                   	// #1
  43667c:	str	x4, [sp, #120]
  436680:	bl	436e14 <argp_usage@@Base+0x9934>
  436684:	mov	x19, x0
  436688:	ldr	x4, [sp, #120]
  43668c:	ldr	x25, [sp, #136]
  436690:	mov	x2, x4
  436694:	mov	x1, x27
  436698:	add	x0, x19, x20
  43669c:	bl	404200 <memcpy@plt>
  4366a0:	b	436644 <argp_usage@@Base+0x9164>
  4366a4:	ldr	w23, [x24]
  4366a8:	cbz	w23, 4366e4 <argp_usage@@Base+0x9204>
  4366ac:	mov	x0, x21
  4366b0:	bl	404ae0 <free@plt>
  4366b4:	mov	x0, x19
  4366b8:	bl	404ae0 <free@plt>
  4366bc:	str	w23, [x24]
  4366c0:	mov	x23, #0x0                   	// #0
  4366c4:	mov	x0, x23
  4366c8:	ldp	x19, x20, [sp, #16]
  4366cc:	ldp	x21, x22, [sp, #32]
  4366d0:	ldp	x23, x24, [sp, #48]
  4366d4:	ldp	x25, x26, [sp, #64]
  4366d8:	ldp	x27, x28, [sp, #80]
  4366dc:	ldp	x29, x30, [sp], #144
  4366e0:	ret
  4366e4:	cbz	x26, 436760 <argp_usage@@Base+0x9280>
  4366e8:	cbz	x22, 436700 <argp_usage@@Base+0x9220>
  4366ec:	mov	x3, x26
  4366f0:	mov	x1, x22
  4366f4:	mov	x0, x21
  4366f8:	mov	x2, #0x10                  	// #16
  4366fc:	bl	404450 <qsort@plt>
  436700:	add	x0, x20, #0x1
  436704:	bl	436d44 <argp_usage@@Base+0x9864>
  436708:	mov	x19, x0
  43670c:	mov	x23, #0x0                   	// #0
  436710:	mov	x20, #0x0                   	// #0
  436714:	add	x24, x19, x20
  436718:	cmp	x22, x23
  43671c:	b.ne	436734 <argp_usage@@Base+0x9254>  // b.any
  436720:	mov	x0, x21
  436724:	bl	404ae0 <free@plt>
  436728:	mov	x23, x19
  43672c:	strb	wzr, [x19, x20]
  436730:	b	4366c4 <argp_usage@@Base+0x91e4>
  436734:	lsl	x25, x23, #4
  436738:	mov	x0, x24
  43673c:	add	x23, x23, #0x1
  436740:	ldr	x1, [x21, x25]
  436744:	bl	4044e0 <stpcpy@plt>
  436748:	sub	x0, x0, x24
  43674c:	add	x0, x0, #0x1
  436750:	add	x20, x20, x0
  436754:	ldr	x0, [x21, x25]
  436758:	bl	404ae0 <free@plt>
  43675c:	b	436714 <argp_usage@@Base+0x9234>
  436760:	cmp	x25, x20
  436764:	b.ne	436728 <argp_usage@@Base+0x9248>  // b.any
  436768:	mov	x0, x19
  43676c:	add	x1, x20, #0x1
  436770:	bl	436da4 <argp_usage@@Base+0x98c4>
  436774:	mov	x19, x0
  436778:	b	436728 <argp_usage@@Base+0x9248>
  43677c:	stp	x29, x30, [sp, #-48]!
  436780:	mov	x29, sp
  436784:	stp	x19, x20, [sp, #16]
  436788:	mov	w20, w1
  43678c:	str	x21, [sp, #32]
  436790:	bl	4436c8 <_obstack_memory_used@@Base+0xba48>
  436794:	mov	x19, x0
  436798:	cbz	x0, 4367d0 <argp_usage@@Base+0x92f0>
  43679c:	mov	w1, w20
  4367a0:	bl	436548 <argp_usage@@Base+0x9068>
  4367a4:	mov	x20, x0
  4367a8:	mov	x0, x19
  4367ac:	bl	404880 <closedir@plt>
  4367b0:	cbz	w0, 4367e4 <argp_usage@@Base+0x9304>
  4367b4:	bl	404e10 <__errno_location@plt>
  4367b8:	mov	x19, x0
  4367bc:	mov	x0, x20
  4367c0:	ldr	w21, [x19]
  4367c4:	bl	404ae0 <free@plt>
  4367c8:	str	w21, [x19]
  4367cc:	mov	x19, #0x0                   	// #0
  4367d0:	mov	x0, x19
  4367d4:	ldp	x19, x20, [sp, #16]
  4367d8:	ldr	x21, [sp, #32]
  4367dc:	ldp	x29, x30, [sp], #48
  4367e0:	ret
  4367e4:	mov	x19, x20
  4367e8:	b	4367d0 <argp_usage@@Base+0x92f0>
  4367ec:	mov	w3, #0x0                   	// #0
  4367f0:	b	446aa0 <_obstack_memory_used@@Base+0xee20>
  4367f4:	mov	w3, #0x100                 	// #256
  4367f8:	b	446aa0 <_obstack_memory_used@@Base+0xee20>
  4367fc:	stp	x29, x30, [sp, #-32]!
  436800:	mov	x2, x1
  436804:	mov	x29, sp
  436808:	stp	x19, x20, [sp, #16]
  43680c:	mov	x19, x1
  436810:	mov	x20, x0
  436814:	mov	w1, #0x0                   	// #0
  436818:	bl	404c90 <memchr@plt>
  43681c:	cbz	x0, 436828 <argp_usage@@Base+0x9348>
  436820:	sub	x0, x0, x20
  436824:	add	x19, x0, #0x1
  436828:	mov	x0, x19
  43682c:	ldp	x19, x20, [sp, #16]
  436830:	ldp	x29, x30, [sp], #32
  436834:	ret
  436838:	ret
  43683c:	cmp	x0, x2
  436840:	sub	w1, w1, w3
  436844:	csinc	w1, w1, wzr, le
  436848:	csinv	w0, w1, wzr, ge  // ge = tcont
  43684c:	ret
  436850:	tbnz	x0, #63, 436864 <argp_usage@@Base+0x9384>
  436854:	orr	x0, x0, x1
  436858:	cmp	x0, #0x0
  43685c:	cset	w0, ne  // ne = any
  436860:	ret
  436864:	mov	w0, #0xffffffff            	// #-1
  436868:	b	436860 <argp_usage@@Base+0x9380>
  43686c:	scvtf	d0, x1
  436870:	mov	x1, #0xcd6500000000        	// #225833675390976
  436874:	movk	x1, #0x41cd, lsl #48
  436878:	fmov	d1, x1
  43687c:	fdiv	d0, d0, d1
  436880:	scvtf	d1, x0
  436884:	fadd	d0, d0, d1
  436888:	ret
  43688c:	sub	sp, sp, #0x50
  436890:	stp	x29, x30, [sp, #32]
  436894:	add	x29, sp, #0x20
  436898:	stp	x19, x20, [sp, #48]
  43689c:	mov	x20, x0
  4368a0:	mov	x19, x4
  4368a4:	str	x21, [sp, #64]
  4368a8:	mov	x21, x5
  4368ac:	cbz	x1, 436940 <argp_usage@@Base+0x9460>
  4368b0:	mov	x5, x3
  4368b4:	mov	x4, x2
  4368b8:	mov	x3, x1
  4368bc:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x18380>
  4368c0:	mov	w1, #0x1                   	// #1
  4368c4:	add	x2, x2, #0x468
  4368c8:	bl	404a20 <__fprintf_chk@plt>
  4368cc:	mov	w2, #0x5                   	// #5
  4368d0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4368d4:	mov	x0, #0x0                   	// #0
  4368d8:	add	x1, x1, #0x47b
  4368dc:	bl	404d00 <dcgettext@plt>
  4368e0:	mov	x3, x0
  4368e4:	mov	w4, #0x7e3                 	// #2019
  4368e8:	mov	w1, #0x1                   	// #1
  4368ec:	mov	x0, x20
  4368f0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x18380>
  4368f4:	add	x2, x2, #0x778
  4368f8:	bl	404a20 <__fprintf_chk@plt>
  4368fc:	mov	w2, #0x5                   	// #5
  436900:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436904:	mov	x0, #0x0                   	// #0
  436908:	add	x1, x1, #0x47f
  43690c:	bl	404d00 <dcgettext@plt>
  436910:	mov	x1, x20
  436914:	bl	404d20 <fputs_unlocked@plt>
  436918:	cmp	x21, #0x9
  43691c:	b.hi	436bb0 <argp_usage@@Base+0x96d0>  // b.pmore
  436920:	cmp	w21, #0x9
  436924:	b.hi	436bb0 <argp_usage@@Base+0x96d0>  // b.pmore
  436928:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  43692c:	add	x0, x0, #0x764
  436930:	ldrh	w0, [x0, w21, uxtw #1]
  436934:	adr	x1, 436940 <argp_usage@@Base+0x9460>
  436938:	add	x0, x1, w0, sxth #2
  43693c:	br	x0
  436940:	mov	x4, x3
  436944:	mov	w1, #0x1                   	// #1
  436948:	mov	x3, x2
  43694c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x18380>
  436950:	add	x2, x2, #0x474
  436954:	bl	404a20 <__fprintf_chk@plt>
  436958:	b	4368cc <argp_usage@@Base+0x93ec>
  43695c:	mov	w2, #0x5                   	// #5
  436960:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436964:	mov	x0, #0x0                   	// #0
  436968:	add	x1, x1, #0x54b
  43696c:	bl	404d00 <dcgettext@plt>
  436970:	mov	x2, x0
  436974:	mov	x0, x20
  436978:	mov	w1, #0x1                   	// #1
  43697c:	ldr	x3, [x19]
  436980:	ldp	x29, x30, [sp, #32]
  436984:	ldp	x19, x20, [sp, #48]
  436988:	ldr	x21, [sp, #64]
  43698c:	add	sp, sp, #0x50
  436990:	b	404a20 <__fprintf_chk@plt>
  436994:	mov	w2, #0x5                   	// #5
  436998:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  43699c:	mov	x0, #0x0                   	// #0
  4369a0:	add	x1, x1, #0x55b
  4369a4:	bl	404d00 <dcgettext@plt>
  4369a8:	mov	x2, x0
  4369ac:	mov	x0, x20
  4369b0:	mov	w1, #0x1                   	// #1
  4369b4:	ldp	x3, x4, [x19]
  4369b8:	ldp	x29, x30, [sp, #32]
  4369bc:	ldp	x19, x20, [sp, #48]
  4369c0:	ldr	x21, [sp, #64]
  4369c4:	add	sp, sp, #0x50
  4369c8:	b	404a20 <__fprintf_chk@plt>
  4369cc:	mov	w2, #0x5                   	// #5
  4369d0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4369d4:	mov	x0, #0x0                   	// #0
  4369d8:	add	x1, x1, #0x572
  4369dc:	bl	404d00 <dcgettext@plt>
  4369e0:	mov	x2, x0
  4369e4:	mov	x0, x20
  4369e8:	mov	w1, #0x1                   	// #1
  4369ec:	ldp	x3, x4, [x19]
  4369f0:	ldr	x5, [x19, #16]
  4369f4:	ldp	x29, x30, [sp, #32]
  4369f8:	ldp	x19, x20, [sp, #48]
  4369fc:	ldr	x21, [sp, #64]
  436a00:	add	sp, sp, #0x50
  436a04:	b	404a20 <__fprintf_chk@plt>
  436a08:	mov	w2, #0x5                   	// #5
  436a0c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436a10:	mov	x0, #0x0                   	// #0
  436a14:	add	x1, x1, #0x58e
  436a18:	bl	404d00 <dcgettext@plt>
  436a1c:	mov	x2, x0
  436a20:	mov	x0, x20
  436a24:	mov	w1, #0x1                   	// #1
  436a28:	ldp	x3, x4, [x19]
  436a2c:	ldp	x5, x6, [x19, #16]
  436a30:	ldp	x29, x30, [sp, #32]
  436a34:	ldp	x19, x20, [sp, #48]
  436a38:	ldr	x21, [sp, #64]
  436a3c:	add	sp, sp, #0x50
  436a40:	b	404a20 <__fprintf_chk@plt>
  436a44:	mov	w2, #0x5                   	// #5
  436a48:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436a4c:	mov	x0, #0x0                   	// #0
  436a50:	add	x1, x1, #0x5ae
  436a54:	bl	404d00 <dcgettext@plt>
  436a58:	mov	x2, x0
  436a5c:	mov	x0, x20
  436a60:	mov	w1, #0x1                   	// #1
  436a64:	ldp	x3, x4, [x19]
  436a68:	ldp	x5, x6, [x19, #16]
  436a6c:	ldp	x29, x30, [sp, #32]
  436a70:	ldr	x7, [x19, #32]
  436a74:	ldp	x19, x20, [sp, #48]
  436a78:	ldr	x21, [sp, #64]
  436a7c:	add	sp, sp, #0x50
  436a80:	b	404a20 <__fprintf_chk@plt>
  436a84:	mov	w2, #0x5                   	// #5
  436a88:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436a8c:	mov	x0, #0x0                   	// #0
  436a90:	add	x1, x1, #0x5d2
  436a94:	bl	404d00 <dcgettext@plt>
  436a98:	mov	x2, x0
  436a9c:	ldp	x3, x4, [x19]
  436aa0:	mov	x0, x20
  436aa4:	ldp	x5, x6, [x19, #16]
  436aa8:	ldp	x7, x1, [x19, #32]
  436aac:	str	x1, [sp]
  436ab0:	mov	w1, #0x1                   	// #1
  436ab4:	bl	404a20 <__fprintf_chk@plt>
  436ab8:	ldp	x29, x30, [sp, #32]
  436abc:	ldp	x19, x20, [sp, #48]
  436ac0:	ldr	x21, [sp, #64]
  436ac4:	add	sp, sp, #0x50
  436ac8:	ret
  436acc:	mov	w2, #0x5                   	// #5
  436ad0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436ad4:	mov	x0, #0x0                   	// #0
  436ad8:	add	x1, x1, #0x5fa
  436adc:	bl	404d00 <dcgettext@plt>
  436ae0:	mov	x2, x0
  436ae4:	ldp	x3, x4, [x19]
  436ae8:	mov	x0, x20
  436aec:	ldp	x5, x6, [x19, #16]
  436af0:	ldr	x1, [x19, #48]
  436af4:	ldr	x7, [x19, #32]
  436af8:	str	x1, [sp, #8]
  436afc:	ldr	x1, [x19, #40]
  436b00:	str	x1, [sp]
  436b04:	mov	w1, #0x1                   	// #1
  436b08:	bl	404a20 <__fprintf_chk@plt>
  436b0c:	b	436ab8 <argp_usage@@Base+0x95d8>
  436b10:	mov	w2, #0x5                   	// #5
  436b14:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436b18:	mov	x0, #0x0                   	// #0
  436b1c:	add	x1, x1, #0x626
  436b20:	bl	404d00 <dcgettext@plt>
  436b24:	mov	x2, x0
  436b28:	ldr	x1, [x19, #56]
  436b2c:	mov	x0, x20
  436b30:	ldp	x3, x4, [x19]
  436b34:	ldp	x5, x6, [x19, #16]
  436b38:	ldr	x7, [x19, #32]
  436b3c:	str	x1, [sp, #16]
  436b40:	ldr	x1, [x19, #48]
  436b44:	str	x1, [sp, #8]
  436b48:	ldr	x1, [x19, #40]
  436b4c:	str	x1, [sp]
  436b50:	mov	w1, #0x1                   	// #1
  436b54:	bl	404a20 <__fprintf_chk@plt>
  436b58:	b	436ab8 <argp_usage@@Base+0x95d8>
  436b5c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436b60:	add	x1, x1, #0x656
  436b64:	mov	w2, #0x5                   	// #5
  436b68:	mov	x0, #0x0                   	// #0
  436b6c:	bl	404d00 <dcgettext@plt>
  436b70:	ldr	x1, [x19, #64]
  436b74:	mov	x2, x0
  436b78:	ldp	x3, x4, [x19]
  436b7c:	mov	x0, x20
  436b80:	ldp	x5, x6, [x19, #16]
  436b84:	ldr	x7, [x19, #32]
  436b88:	str	x1, [sp, #24]
  436b8c:	ldr	x1, [x19, #56]
  436b90:	str	x1, [sp, #16]
  436b94:	ldr	x1, [x19, #48]
  436b98:	str	x1, [sp, #8]
  436b9c:	ldr	x1, [x19, #40]
  436ba0:	str	x1, [sp]
  436ba4:	mov	w1, #0x1                   	// #1
  436ba8:	bl	404a20 <__fprintf_chk@plt>
  436bac:	b	436ab8 <argp_usage@@Base+0x95d8>
  436bb0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436bb4:	mov	w2, #0x5                   	// #5
  436bb8:	add	x1, x1, #0x68a
  436bbc:	b	436b68 <argp_usage@@Base+0x9688>
  436bc0:	mov	x5, #0x0                   	// #0
  436bc4:	ldr	x6, [x4, x5, lsl #3]
  436bc8:	cbnz	x6, 436bd0 <argp_usage@@Base+0x96f0>
  436bcc:	b	43688c <argp_usage@@Base+0x93ac>
  436bd0:	add	x5, x5, #0x1
  436bd4:	b	436bc4 <argp_usage@@Base+0x96e4>
  436bd8:	stp	x29, x30, [sp, #-96]!
  436bdc:	mov	x5, #0x0                   	// #0
  436be0:	mov	x29, sp
  436be4:	ldr	w7, [x4, #24]
  436be8:	ldp	x6, x10, [x4]
  436bec:	add	x4, sp, #0x10
  436bf0:	tbnz	w7, #31, 436c24 <argp_usage@@Base+0x9744>
  436bf4:	add	x9, x6, #0xf
  436bf8:	mov	x8, x6
  436bfc:	and	x6, x9, #0xfffffffffffffff8
  436c00:	ldr	x8, [x8]
  436c04:	str	x8, [x4, x5, lsl #3]
  436c08:	cbz	x8, 436c18 <argp_usage@@Base+0x9738>
  436c0c:	add	x5, x5, #0x1
  436c10:	cmp	x5, #0xa
  436c14:	b.ne	436bf0 <argp_usage@@Base+0x9710>  // b.any
  436c18:	bl	43688c <argp_usage@@Base+0x93ac>
  436c1c:	ldp	x29, x30, [sp], #96
  436c20:	ret
  436c24:	add	w9, w7, #0x8
  436c28:	cmp	w9, #0x0
  436c2c:	b.le	436c44 <argp_usage@@Base+0x9764>
  436c30:	add	x11, x6, #0xf
  436c34:	mov	x8, x6
  436c38:	mov	w7, w9
  436c3c:	and	x6, x11, #0xfffffffffffffff8
  436c40:	b	436c00 <argp_usage@@Base+0x9720>
  436c44:	add	x8, x10, w7, sxtw
  436c48:	mov	w7, w9
  436c4c:	b	436c00 <argp_usage@@Base+0x9720>
  436c50:	stp	x29, x30, [sp, #-240]!
  436c54:	mov	x29, sp
  436c58:	stp	x4, x5, [sp, #208]
  436c5c:	add	x4, sp, #0xf0
  436c60:	stp	x4, x4, [sp, #48]
  436c64:	add	x4, sp, #0xd0
  436c68:	str	x4, [sp, #64]
  436c6c:	mov	w4, #0xffffffe0            	// #-32
  436c70:	str	w4, [sp, #72]
  436c74:	mov	w4, #0xffffff80            	// #-128
  436c78:	str	w4, [sp, #76]
  436c7c:	ldp	x4, x5, [sp, #48]
  436c80:	stp	x4, x5, [sp, #16]
  436c84:	ldp	x4, x5, [sp, #64]
  436c88:	stp	x4, x5, [sp, #32]
  436c8c:	add	x4, sp, #0x10
  436c90:	str	q0, [sp, #80]
  436c94:	str	q1, [sp, #96]
  436c98:	str	q2, [sp, #112]
  436c9c:	str	q3, [sp, #128]
  436ca0:	str	q4, [sp, #144]
  436ca4:	str	q5, [sp, #160]
  436ca8:	str	q6, [sp, #176]
  436cac:	str	q7, [sp, #192]
  436cb0:	stp	x6, x7, [sp, #224]
  436cb4:	bl	436bd8 <argp_usage@@Base+0x96f8>
  436cb8:	ldp	x29, x30, [sp], #240
  436cbc:	ret
  436cc0:	stp	x29, x30, [sp, #-16]!
  436cc4:	mov	w2, #0x5                   	// #5
  436cc8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436ccc:	mov	x29, sp
  436cd0:	add	x1, x1, #0x6c6
  436cd4:	mov	x0, #0x0                   	// #0
  436cd8:	bl	404d00 <dcgettext@plt>
  436cdc:	mov	x1, x0
  436ce0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x18380>
  436ce4:	mov	w0, #0x1                   	// #1
  436ce8:	add	x2, x2, #0x6db
  436cec:	bl	4046f0 <__printf_chk@plt>
  436cf0:	mov	w2, #0x5                   	// #5
  436cf4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436cf8:	mov	x0, #0x0                   	// #0
  436cfc:	add	x1, x1, #0x6eb
  436d00:	bl	404d00 <dcgettext@plt>
  436d04:	mov	x1, x0
  436d08:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  436d0c:	add	x3, x3, #0x6ff
  436d10:	adrp	x2, 448000 <_obstack_memory_used@@Base+0x10380>
  436d14:	mov	w0, #0x1                   	// #1
  436d18:	add	x2, x2, #0x74c
  436d1c:	bl	4046f0 <__printf_chk@plt>
  436d20:	mov	w2, #0x5                   	// #5
  436d24:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  436d28:	mov	x0, #0x0                   	// #0
  436d2c:	add	x1, x1, #0x720
  436d30:	bl	404d00 <dcgettext@plt>
  436d34:	ldp	x29, x30, [sp], #16
  436d38:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x39380>
  436d3c:	ldr	x1, [x1, #1168]
  436d40:	b	404d20 <fputs_unlocked@plt>
  436d44:	stp	x29, x30, [sp, #-32]!
  436d48:	mov	x29, sp
  436d4c:	str	x19, [sp, #16]
  436d50:	mov	x19, x0
  436d54:	bl	4045f0 <malloc@plt>
  436d58:	cmp	x0, #0x0
  436d5c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  436d60:	b.eq	436d68 <argp_usage@@Base+0x9888>  // b.none
  436d64:	bl	40d4bc <wcrtomb@plt+0x856c>
  436d68:	ldr	x19, [sp, #16]
  436d6c:	ldp	x29, x30, [sp], #32
  436d70:	ret
  436d74:	mov	x2, x0
  436d78:	mul	x0, x0, x1
  436d7c:	umulh	x2, x2, x1
  436d80:	cmp	x2, #0x0
  436d84:	cset	x1, ne  // ne = any
  436d88:	tbnz	x0, #63, 436d90 <argp_usage@@Base+0x98b0>
  436d8c:	cbz	x1, 436d9c <argp_usage@@Base+0x98bc>
  436d90:	stp	x29, x30, [sp, #-16]!
  436d94:	mov	x29, sp
  436d98:	bl	40d4bc <wcrtomb@plt+0x856c>
  436d9c:	b	436d44 <argp_usage@@Base+0x9864>
  436da0:	b	436d44 <argp_usage@@Base+0x9864>
  436da4:	stp	x29, x30, [sp, #-32]!
  436da8:	cmp	x1, #0x0
  436dac:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  436db0:	mov	x29, sp
  436db4:	str	x19, [sp, #16]
  436db8:	b.eq	436dd0 <argp_usage@@Base+0x98f0>  // b.none
  436dbc:	bl	404ae0 <free@plt>
  436dc0:	mov	x0, #0x0                   	// #0
  436dc4:	ldr	x19, [sp, #16]
  436dc8:	ldp	x29, x30, [sp], #32
  436dcc:	ret
  436dd0:	mov	x19, x1
  436dd4:	bl	404820 <realloc@plt>
  436dd8:	cmp	x0, #0x0
  436ddc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  436de0:	b.eq	436dc4 <argp_usage@@Base+0x98e4>  // b.none
  436de4:	bl	40d4bc <wcrtomb@plt+0x856c>
  436de8:	mov	x3, x1
  436dec:	mul	x1, x1, x2
  436df0:	umulh	x3, x3, x2
  436df4:	cmp	x3, #0x0
  436df8:	cset	x2, ne  // ne = any
  436dfc:	tbnz	x1, #63, 436e04 <argp_usage@@Base+0x9924>
  436e00:	cbz	x2, 436e10 <argp_usage@@Base+0x9930>
  436e04:	stp	x29, x30, [sp, #-16]!
  436e08:	mov	x29, sp
  436e0c:	bl	40d4bc <wcrtomb@plt+0x856c>
  436e10:	b	436da4 <argp_usage@@Base+0x98c4>
  436e14:	ldr	x3, [x1]
  436e18:	cbnz	x0, 436e54 <argp_usage@@Base+0x9974>
  436e1c:	cbnz	x3, 436e30 <argp_usage@@Base+0x9950>
  436e20:	mov	x3, #0x80                  	// #128
  436e24:	cmp	x2, #0x80
  436e28:	udiv	x3, x3, x2
  436e2c:	cinc	x3, x3, hi  // hi = pmore
  436e30:	umulh	x5, x3, x2
  436e34:	mul	x4, x3, x2
  436e38:	cmp	x5, #0x0
  436e3c:	cset	x5, ne  // ne = any
  436e40:	tbnz	x4, #63, 436e48 <argp_usage@@Base+0x9968>
  436e44:	cbz	x5, 436e70 <argp_usage@@Base+0x9990>
  436e48:	stp	x29, x30, [sp, #-16]!
  436e4c:	mov	x29, sp
  436e50:	bl	40d4bc <wcrtomb@plt+0x856c>
  436e54:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  436e58:	movk	x4, #0x5554
  436e5c:	udiv	x4, x4, x2
  436e60:	cmp	x4, x3
  436e64:	b.ls	436e48 <argp_usage@@Base+0x9968>  // b.plast
  436e68:	add	x4, x3, #0x1
  436e6c:	add	x3, x4, x3, lsr #1
  436e70:	str	x3, [x1]
  436e74:	mul	x1, x3, x2
  436e78:	b	436da4 <argp_usage@@Base+0x98c4>
  436e7c:	mov	x2, #0x1                   	// #1
  436e80:	b	436e14 <argp_usage@@Base+0x9934>
  436e84:	stp	x29, x30, [sp, #-32]!
  436e88:	mov	x29, sp
  436e8c:	str	x19, [sp, #16]
  436e90:	mov	x19, x0
  436e94:	bl	436d44 <argp_usage@@Base+0x9864>
  436e98:	mov	x2, x19
  436e9c:	mov	w1, #0x0                   	// #0
  436ea0:	ldr	x19, [sp, #16]
  436ea4:	ldp	x29, x30, [sp], #32
  436ea8:	b	404700 <memset@plt>
  436eac:	umulh	x2, x0, x1
  436eb0:	stp	x29, x30, [sp, #-16]!
  436eb4:	mul	x4, x0, x1
  436eb8:	cmp	x2, #0x0
  436ebc:	mov	x29, sp
  436ec0:	cset	x2, ne  // ne = any
  436ec4:	tbnz	x4, #63, 436ecc <argp_usage@@Base+0x99ec>
  436ec8:	cbz	x2, 436ed0 <argp_usage@@Base+0x99f0>
  436ecc:	bl	40d4bc <wcrtomb@plt+0x856c>
  436ed0:	bl	4047a0 <calloc@plt>
  436ed4:	cbz	x0, 436ecc <argp_usage@@Base+0x99ec>
  436ed8:	ldp	x29, x30, [sp], #16
  436edc:	ret
  436ee0:	stp	x29, x30, [sp, #-32]!
  436ee4:	mov	x29, sp
  436ee8:	stp	x19, x20, [sp, #16]
  436eec:	mov	x19, x1
  436ef0:	mov	x20, x0
  436ef4:	mov	x0, x1
  436ef8:	bl	436d44 <argp_usage@@Base+0x9864>
  436efc:	mov	x2, x19
  436f00:	mov	x1, x20
  436f04:	ldp	x19, x20, [sp, #16]
  436f08:	ldp	x29, x30, [sp], #32
  436f0c:	b	404200 <memcpy@plt>
  436f10:	stp	x29, x30, [sp, #-32]!
  436f14:	mov	x29, sp
  436f18:	str	x19, [sp, #16]
  436f1c:	mov	x19, x0
  436f20:	bl	404280 <strlen@plt>
  436f24:	add	x1, x0, #0x1
  436f28:	mov	x0, x19
  436f2c:	ldr	x19, [sp, #16]
  436f30:	ldp	x29, x30, [sp], #32
  436f34:	b	436ee0 <argp_usage@@Base+0x9a00>
  436f38:	stp	x29, x30, [sp, #-32]!
  436f3c:	mov	x1, #0x0                   	// #0
  436f40:	mov	x0, #0x0                   	// #0
  436f44:	mov	x29, sp
  436f48:	str	x19, [sp, #16]
  436f4c:	bl	404230 <getcwd@plt>
  436f50:	mov	x19, x0
  436f54:	cbnz	x0, 436f6c <argp_usage@@Base+0x9a8c>
  436f58:	bl	404e10 <__errno_location@plt>
  436f5c:	ldr	w0, [x0]
  436f60:	cmp	w0, #0xc
  436f64:	b.ne	436f6c <argp_usage@@Base+0x9a8c>  // b.any
  436f68:	bl	40d4bc <wcrtomb@plt+0x856c>
  436f6c:	mov	x0, x19
  436f70:	ldr	x19, [sp, #16]
  436f74:	ldp	x29, x30, [sp], #32
  436f78:	ret
  436f7c:	stp	x29, x30, [sp, #-16]!
  436f80:	mov	x29, sp
  436f84:	bl	404b70 <strndup@plt>
  436f88:	cbnz	x0, 436f90 <argp_usage@@Base+0x9ab0>
  436f8c:	bl	40d4bc <wcrtomb@plt+0x856c>
  436f90:	ldp	x29, x30, [sp], #16
  436f94:	ret
  436f98:	sxtw	x1, w1
  436f9c:	mov	x4, x0
  436fa0:	mov	w0, #0x0                   	// #0
  436fa4:	sub	w2, w2, #0x1
  436fa8:	cmn	w2, #0x1
  436fac:	b.ne	436fb4 <argp_usage@@Base+0x9ad4>  // b.any
  436fb0:	ret
  436fb4:	ldr	x3, [x4]
  436fb8:	umulh	x5, x3, x1
  436fbc:	cbnz	x5, 436fd0 <argp_usage@@Base+0x9af0>
  436fc0:	mul	x3, x3, x1
  436fc4:	orr	w0, w0, w5
  436fc8:	str	x3, [x4]
  436fcc:	b	436fa4 <argp_usage@@Base+0x9ac4>
  436fd0:	mov	x3, #0xffffffffffffffff    	// #-1
  436fd4:	mov	w5, #0x1                   	// #1
  436fd8:	b	436fc4 <argp_usage@@Base+0x9ae4>
  436fdc:	stp	x29, x30, [sp, #-96]!
  436fe0:	cmp	w2, #0x24
  436fe4:	mov	x29, sp
  436fe8:	stp	x19, x20, [sp, #16]
  436fec:	stp	x21, x22, [sp, #32]
  436ff0:	stp	x23, x24, [sp, #48]
  436ff4:	str	x25, [sp, #64]
  436ff8:	b.ls	43701c <argp_usage@@Base+0x9b3c>  // b.plast
  436ffc:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  437000:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  437004:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  437008:	add	x3, x3, #0x819
  43700c:	add	x1, x1, #0x7a7
  437010:	add	x0, x0, #0x7b1
  437014:	mov	w2, #0x54                  	// #84
  437018:	bl	404e00 <__assert_fail@plt>
  43701c:	mov	x19, x0
  437020:	mov	x20, x1
  437024:	mov	w24, w2
  437028:	mov	x21, x3
  43702c:	mov	x23, x4
  437030:	cbnz	x1, 437038 <argp_usage@@Base+0x9b58>
  437034:	add	x20, sp, #0x50
  437038:	bl	404e10 <__errno_location@plt>
  43703c:	str	wzr, [x0]
  437040:	mov	x22, x0
  437044:	ldrb	w25, [x19]
  437048:	bl	404a60 <__ctype_b_loc@plt>
  43704c:	ldr	x2, [x0]
  437050:	mov	x0, x19
  437054:	ubfiz	x1, x25, #1, #8
  437058:	ldrh	w1, [x2, x1]
  43705c:	tbnz	w1, #13, 437088 <argp_usage@@Base+0x9ba8>
  437060:	cmp	w25, #0x2d
  437064:	b.ne	437090 <argp_usage@@Base+0x9bb0>  // b.any
  437068:	mov	w19, #0x4                   	// #4
  43706c:	mov	w0, w19
  437070:	ldp	x19, x20, [sp, #16]
  437074:	ldp	x21, x22, [sp, #32]
  437078:	ldp	x23, x24, [sp, #48]
  43707c:	ldr	x25, [sp, #64]
  437080:	ldp	x29, x30, [sp], #96
  437084:	ret
  437088:	ldrb	w25, [x0, #1]!
  43708c:	b	437054 <argp_usage@@Base+0x9b74>
  437090:	mov	w2, w24
  437094:	mov	x1, x20
  437098:	mov	x0, x19
  43709c:	bl	404940 <strtoumax@plt>
  4370a0:	ldr	x24, [x20]
  4370a4:	str	x0, [sp, #88]
  4370a8:	cmp	x24, x19
  4370ac:	b.ne	4370fc <argp_usage@@Base+0x9c1c>  // b.any
  4370b0:	cbz	x23, 437068 <argp_usage@@Base+0x9b88>
  4370b4:	ldrb	w1, [x19]
  4370b8:	cbz	w1, 437068 <argp_usage@@Base+0x9b88>
  4370bc:	mov	x0, x23
  4370c0:	bl	404b90 <strchr@plt>
  4370c4:	cbz	x0, 437068 <argp_usage@@Base+0x9b88>
  4370c8:	mov	x0, #0x1                   	// #1
  4370cc:	mov	w19, #0x0                   	// #0
  4370d0:	str	x0, [sp, #88]
  4370d4:	ldrb	w22, [x24]
  4370d8:	cbz	w22, 4372c4 <argp_usage@@Base+0x9de4>
  4370dc:	mov	w1, w22
  4370e0:	mov	x0, x23
  4370e4:	bl	404b90 <strchr@plt>
  4370e8:	cbnz	x0, 437124 <argp_usage@@Base+0x9c44>
  4370ec:	ldr	x0, [sp, #88]
  4370f0:	orr	w19, w19, #0x2
  4370f4:	str	x0, [x21]
  4370f8:	b	43706c <argp_usage@@Base+0x9b8c>
  4370fc:	ldr	w1, [x22]
  437100:	cbz	w1, 43711c <argp_usage@@Base+0x9c3c>
  437104:	cmp	w1, #0x22
  437108:	b.ne	437068 <argp_usage@@Base+0x9b88>  // b.any
  43710c:	mov	w19, #0x1                   	// #1
  437110:	cbnz	x23, 4370d4 <argp_usage@@Base+0x9bf4>
  437114:	str	x0, [x21]
  437118:	b	43706c <argp_usage@@Base+0x9b8c>
  43711c:	mov	w19, #0x0                   	// #0
  437120:	b	437110 <argp_usage@@Base+0x9c30>
  437124:	cmp	w22, #0x5a
  437128:	b.hi	437210 <argp_usage@@Base+0x9d30>  // b.pmore
  43712c:	cmp	w22, #0x44
  437130:	b.hi	4371ec <argp_usage@@Base+0x9d0c>  // b.pmore
  437134:	mov	w6, #0x1                   	// #1
  437138:	mov	w1, #0x400                 	// #1024
  43713c:	cmp	w22, #0x58
  437140:	b.hi	437230 <argp_usage@@Base+0x9d50>  // b.pmore
  437144:	sub	w22, w22, #0x42
  437148:	and	w0, w22, #0xff
  43714c:	cmp	w0, #0x12
  437150:	b.hi	4370ec <argp_usage@@Base+0x9c0c>  // b.pmore
  437154:	cmp	w22, #0x12
  437158:	b.hi	4370ec <argp_usage@@Base+0x9c0c>  // b.pmore
  43715c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  437160:	add	x0, x0, #0x7d8
  437164:	ldrb	w0, [x0, w22, uxtw]
  437168:	adr	x2, 437174 <argp_usage@@Base+0x9c94>
  43716c:	add	x0, x2, w0, sxtb #2
  437170:	br	x0
  437174:	mov	x1, #0x1                   	// #1
  437178:	lsl	x0, x1, x0
  43717c:	mov	x1, #0x2051                	// #8273
  437180:	tst	x0, x1
  437184:	b.eq	437220 <argp_usage@@Base+0x9d40>  // b.none
  437188:	mov	x0, x23
  43718c:	mov	w1, #0x30                  	// #48
  437190:	bl	404b90 <strchr@plt>
  437194:	cbz	x0, 43726c <argp_usage@@Base+0x9d8c>
  437198:	ldrb	w0, [x24, #1]
  43719c:	cmp	w0, #0x44
  4371a0:	b.eq	437274 <argp_usage@@Base+0x9d94>  // b.none
  4371a4:	cmp	w0, #0x69
  4371a8:	b.eq	437254 <argp_usage@@Base+0x9d74>  // b.none
  4371ac:	cmp	w0, #0x42
  4371b0:	mov	w6, #0x2                   	// #2
  4371b4:	mov	w1, #0x400                 	// #1024
  4371b8:	mov	w0, #0x3e8                 	// #1000
  4371bc:	csinc	w6, w6, wzr, eq  // eq = none
  4371c0:	csel	w1, w1, w0, ne  // ne = any
  4371c4:	cmp	w22, #0x6d
  4371c8:	b.ls	43713c <argp_usage@@Base+0x9c5c>  // b.plast
  4371cc:	cmp	w22, #0x74
  4371d0:	b.eq	437310 <argp_usage@@Base+0x9e30>  // b.none
  4371d4:	cmp	w22, #0x77
  4371d8:	b.ne	4370ec <argp_usage@@Base+0x9c0c>  // b.any
  4371dc:	ldr	x0, [sp, #88]
  4371e0:	tbnz	x0, #63, 43729c <argp_usage@@Base+0x9dbc>
  4371e4:	lsl	x0, x0, #1
  4371e8:	b	437290 <argp_usage@@Base+0x9db0>
  4371ec:	sub	w1, w22, #0x45
  4371f0:	cmp	w1, #0x15
  4371f4:	b.hi	43726c <argp_usage@@Base+0x9d8c>  // b.pmore
  4371f8:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  4371fc:	add	x0, x0, #0x7ec
  437200:	ldrb	w0, [x0, w1, uxtw]
  437204:	adr	x1, 437210 <argp_usage@@Base+0x9d30>
  437208:	add	x0, x1, w0, sxtb #2
  43720c:	br	x0
  437210:	sub	w0, w22, #0x67
  437214:	and	w0, w0, #0xff
  437218:	cmp	w0, #0xd
  43721c:	b.ls	437174 <argp_usage@@Base+0x9c94>  // b.plast
  437220:	cmp	w22, #0x6d
  437224:	mov	w6, #0x1                   	// #1
  437228:	mov	w1, #0x400                 	// #1024
  43722c:	b.hi	4371cc <argp_usage@@Base+0x9cec>  // b.pmore
  437230:	sub	w22, w22, #0x59
  437234:	cmp	w22, #0x14
  437238:	b.hi	4370ec <argp_usage@@Base+0x9c0c>  // b.pmore
  43723c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  437240:	add	x0, x0, #0x804
  437244:	ldrb	w0, [x0, w22, uxtw]
  437248:	adr	x2, 437254 <argp_usage@@Base+0x9d74>
  43724c:	add	x0, x2, w0, sxtb #2
  437250:	br	x0
  437254:	ldrb	w0, [x24, #2]
  437258:	mov	w6, #0x3                   	// #3
  43725c:	cmp	w0, #0x42
  437260:	csinc	w6, w6, wzr, eq  // eq = none
  437264:	mov	w1, #0x400                 	// #1024
  437268:	b	4371c4 <argp_usage@@Base+0x9ce4>
  43726c:	mov	w6, #0x1                   	// #1
  437270:	b	437264 <argp_usage@@Base+0x9d84>
  437274:	mov	w6, #0x2                   	// #2
  437278:	mov	w1, #0x3e8                 	// #1000
  43727c:	b	4371c4 <argp_usage@@Base+0x9ce4>
  437280:	ldr	x0, [sp, #88]
  437284:	cmp	xzr, x0, lsr #55
  437288:	b.ne	43729c <argp_usage@@Base+0x9dbc>  // b.any
  43728c:	lsl	x0, x0, #9
  437290:	str	x0, [sp, #88]
  437294:	mov	w0, #0x0                   	// #0
  437298:	b	4372a8 <argp_usage@@Base+0x9dc8>
  43729c:	mov	x0, #0xffffffffffffffff    	// #-1
  4372a0:	str	x0, [sp, #88]
  4372a4:	mov	w0, #0x1                   	// #1
  4372a8:	orr	w19, w19, w0
  4372ac:	ldr	x0, [x20]
  4372b0:	add	x1, x0, w6, sxtw
  4372b4:	str	x1, [x20]
  4372b8:	ldrb	w0, [x0, w6, sxtw]
  4372bc:	cbz	w0, 4372c4 <argp_usage@@Base+0x9de4>
  4372c0:	orr	w19, w19, #0x2
  4372c4:	ldr	x0, [sp, #88]
  4372c8:	b	437114 <argp_usage@@Base+0x9c34>
  4372cc:	ldr	x0, [sp, #88]
  4372d0:	cmp	xzr, x0, lsr #54
  4372d4:	b.ne	43729c <argp_usage@@Base+0x9dbc>  // b.any
  4372d8:	lsl	x0, x0, #10
  4372dc:	b	437290 <argp_usage@@Base+0x9db0>
  4372e0:	mov	w2, #0x6                   	// #6
  4372e4:	add	x0, sp, #0x58
  4372e8:	bl	436f98 <argp_usage@@Base+0x9ab8>
  4372ec:	b	4372a8 <argp_usage@@Base+0x9dc8>
  4372f0:	mov	w2, #0x3                   	// #3
  4372f4:	b	4372e4 <argp_usage@@Base+0x9e04>
  4372f8:	mov	w2, #0x1                   	// #1
  4372fc:	b	4372e4 <argp_usage@@Base+0x9e04>
  437300:	mov	w2, #0x2                   	// #2
  437304:	b	4372e4 <argp_usage@@Base+0x9e04>
  437308:	mov	w2, #0x5                   	// #5
  43730c:	b	4372e4 <argp_usage@@Base+0x9e04>
  437310:	mov	w2, #0x4                   	// #4
  437314:	b	4372e4 <argp_usage@@Base+0x9e04>
  437318:	mov	w2, #0x8                   	// #8
  43731c:	b	4372e4 <argp_usage@@Base+0x9e04>
  437320:	mov	w2, #0x7                   	// #7
  437324:	b	4372e4 <argp_usage@@Base+0x9e04>
  437328:	stp	x29, x30, [sp, #-272]!
  43732c:	mov	x29, sp
  437330:	stp	x1, x2, [sp, #216]
  437334:	add	x1, sp, #0x110
  437338:	stp	x1, x1, [sp, #48]
  43733c:	add	x1, sp, #0xd0
  437340:	str	x1, [sp, #64]
  437344:	mov	w1, #0xffffffc8            	// #-56
  437348:	str	w1, [sp, #72]
  43734c:	mov	w1, #0xffffff80            	// #-128
  437350:	str	w1, [sp, #76]
  437354:	add	x1, sp, #0x10
  437358:	stp	x3, x4, [sp, #232]
  43735c:	ldp	x2, x3, [sp, #48]
  437360:	stp	x2, x3, [sp, #16]
  437364:	ldp	x2, x3, [sp, #64]
  437368:	stp	x2, x3, [sp, #32]
  43736c:	str	q0, [sp, #80]
  437370:	str	q1, [sp, #96]
  437374:	str	q2, [sp, #112]
  437378:	str	q3, [sp, #128]
  43737c:	str	q4, [sp, #144]
  437380:	str	q5, [sp, #160]
  437384:	str	q6, [sp, #176]
  437388:	str	q7, [sp, #192]
  43738c:	stp	x5, x6, [sp, #248]
  437390:	str	x7, [sp, #264]
  437394:	bl	444bc8 <_obstack_memory_used@@Base+0xcf48>
  437398:	ldp	x29, x30, [sp], #272
  43739c:	ret
  4373a0:	tbnz	w0, #31, 4373dc <argp_usage@@Base+0x9efc>
  4373a4:	stp	x29, x30, [sp, #-16]!
  4373a8:	mov	x29, sp
  4373ac:	bl	4048c0 <close@plt>
  4373b0:	cbz	w0, 4373d4 <argp_usage@@Base+0x9ef4>
  4373b4:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  4373b8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4373bc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  4373c0:	add	x3, x3, #0x880
  4373c4:	add	x1, x1, #0x824
  4373c8:	add	x0, x0, #0x831
  4373cc:	mov	w2, #0x40                  	// #64
  4373d0:	bl	404e00 <__assert_fail@plt>
  4373d4:	ldp	x29, x30, [sp], #16
  4373d8:	ret
  4373dc:	ret
  4373e0:	stp	x29, x30, [sp, #-32]!
  4373e4:	mov	w2, #0x4900                	// #18688
  4373e8:	mov	x29, sp
  4373ec:	stp	x19, x20, [sp, #16]
  4373f0:	mov	x19, x0
  4373f4:	ldr	w0, [x0]
  4373f8:	bl	404df0 <openat@plt>
  4373fc:	tbnz	w0, #31, 437420 <argp_usage@@Base+0x9f40>
  437400:	mov	w20, w0
  437404:	ldr	w0, [x19]
  437408:	bl	4373a0 <argp_usage@@Base+0x9ec0>
  43740c:	str	w20, [x19]
  437410:	mov	w0, #0x0                   	// #0
  437414:	ldp	x19, x20, [sp, #16]
  437418:	ldp	x29, x30, [sp], #32
  43741c:	ret
  437420:	mov	w0, #0xffffffff            	// #-1
  437424:	b	437414 <argp_usage@@Base+0x9f34>
  437428:	stp	x29, x30, [sp, #-80]!
  43742c:	mov	x29, sp
  437430:	stp	x19, x20, [sp, #16]
  437434:	stp	x21, x22, [sp, #32]
  437438:	mov	x21, x0
  43743c:	stp	x23, x24, [sp, #48]
  437440:	bl	404ad0 <chdir@plt>
  437444:	mov	w19, w0
  437448:	cbz	w0, 4375c8 <argp_usage@@Base+0xa0e8>
  43744c:	bl	404e10 <__errno_location@plt>
  437450:	mov	x20, x0
  437454:	ldr	w0, [x0]
  437458:	cmp	w0, #0x24
  43745c:	b.ne	4375c8 <argp_usage@@Base+0xa0e8>  // b.any
  437460:	mov	x0, x21
  437464:	bl	404280 <strlen@plt>
  437468:	mov	x23, x0
  43746c:	mov	w0, #0xffffff9c            	// #-100
  437470:	str	w0, [sp, #72]
  437474:	cbnz	x23, 43749c <argp_usage@@Base+0x9fbc>
  437478:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  43747c:	add	x3, x3, #0x880
  437480:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  437484:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  437488:	add	x3, x3, #0x9
  43748c:	add	x1, x1, #0x824
  437490:	add	x0, x0, #0x83e
  437494:	mov	w2, #0x7e                  	// #126
  437498:	bl	404e00 <__assert_fail@plt>
  43749c:	cmp	x23, #0xfff
  4374a0:	b.hi	4374c8 <argp_usage@@Base+0x9fe8>  // b.pmore
  4374a4:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  4374a8:	add	x3, x3, #0x880
  4374ac:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4374b0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  4374b4:	add	x3, x3, #0x9
  4374b8:	add	x1, x1, #0x824
  4374bc:	add	x0, x0, #0x846
  4374c0:	mov	w2, #0x7f                  	// #127
  4374c4:	b	437498 <argp_usage@@Base+0x9fb8>
  4374c8:	adrp	x22, 450000 <_obstack_memory_used@@Base+0x18380>
  4374cc:	add	x22, x22, #0x8e0
  4374d0:	mov	x1, x22
  4374d4:	mov	x0, x21
  4374d8:	bl	404b80 <strspn@plt>
  4374dc:	mov	x19, x0
  4374e0:	cmp	x0, #0x2
  4374e4:	b.ne	437568 <argp_usage@@Base+0xa088>  // b.any
  4374e8:	sub	x2, x23, #0x3
  4374ec:	add	x0, x21, #0x3
  4374f0:	mov	w1, #0x2f                  	// #47
  4374f4:	bl	404c90 <memchr@plt>
  4374f8:	mov	x19, x0
  4374fc:	cbnz	x0, 437508 <argp_usage@@Base+0xa028>
  437500:	mov	w19, #0xffffffff            	// #-1
  437504:	b	4375c8 <argp_usage@@Base+0xa0e8>
  437508:	strb	wzr, [x0]
  43750c:	mov	x1, x21
  437510:	add	x0, sp, #0x48
  437514:	bl	4373e0 <argp_usage@@Base+0x9f00>
  437518:	mov	w1, #0x2f                  	// #47
  43751c:	strb	w1, [x19]
  437520:	cbnz	w0, 437698 <argp_usage@@Base+0xa1b8>
  437524:	add	x19, x19, #0x1
  437528:	mov	x1, x22
  43752c:	mov	x0, x19
  437530:	bl	404b80 <strspn@plt>
  437534:	add	x19, x19, x0
  437538:	ldrb	w0, [x19]
  43753c:	cmp	w0, #0x2f
  437540:	b.ne	43758c <argp_usage@@Base+0xa0ac>  // b.any
  437544:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  437548:	add	x3, x3, #0x880
  43754c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  437550:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  437554:	add	x3, x3, #0x9
  437558:	add	x1, x1, #0x824
  43755c:	add	x0, x0, #0x852
  437560:	mov	w2, #0xa2                  	// #162
  437564:	b	437498 <argp_usage@@Base+0x9fb8>
  437568:	cbz	x0, 437584 <argp_usage@@Base+0xa0a4>
  43756c:	mov	x1, x22
  437570:	add	x0, sp, #0x48
  437574:	bl	4373e0 <argp_usage@@Base+0x9f00>
  437578:	cbnz	w0, 437698 <argp_usage@@Base+0xa1b8>
  43757c:	add	x19, x21, x19
  437580:	b	437538 <argp_usage@@Base+0xa058>
  437584:	mov	x19, x21
  437588:	b	437538 <argp_usage@@Base+0xa058>
  43758c:	add	x21, x21, x23
  437590:	cmp	x19, x21
  437594:	b.hi	4375e0 <argp_usage@@Base+0xa100>  // b.pmore
  437598:	mov	w24, #0x2f                  	// #47
  43759c:	sub	x0, x21, x19
  4375a0:	cmp	x0, #0xfff
  4375a4:	b.gt	437604 <argp_usage@@Base+0xa124>
  4375a8:	cmp	x19, x21
  4375ac:	b.cc	437688 <argp_usage@@Base+0xa1a8>  // b.lo, b.ul, b.last
  4375b0:	ldr	w0, [sp, #72]
  4375b4:	bl	4042f0 <fchdir@plt>
  4375b8:	mov	w19, w0
  4375bc:	cbnz	w0, 437698 <argp_usage@@Base+0xa1b8>
  4375c0:	ldr	w0, [sp, #72]
  4375c4:	bl	4373a0 <argp_usage@@Base+0x9ec0>
  4375c8:	mov	w0, w19
  4375cc:	ldp	x19, x20, [sp, #16]
  4375d0:	ldp	x21, x22, [sp, #32]
  4375d4:	ldp	x23, x24, [sp, #48]
  4375d8:	ldp	x29, x30, [sp], #80
  4375dc:	ret
  4375e0:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  4375e4:	add	x3, x3, #0x880
  4375e8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4375ec:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  4375f0:	add	x3, x3, #0x9
  4375f4:	add	x1, x1, #0x824
  4375f8:	add	x0, x0, #0x85e
  4375fc:	mov	w2, #0xa3                  	// #163
  437600:	b	437498 <argp_usage@@Base+0x9fb8>
  437604:	mov	x0, x19
  437608:	mov	x2, #0x1000                	// #4096
  43760c:	mov	w1, #0x2f                  	// #47
  437610:	bl	404bb0 <memrchr@plt>
  437614:	mov	x23, x0
  437618:	cbnz	x0, 437628 <argp_usage@@Base+0xa148>
  43761c:	mov	w0, #0x24                  	// #36
  437620:	str	w0, [x20]
  437624:	b	437500 <argp_usage@@Base+0xa020>
  437628:	strb	wzr, [x0]
  43762c:	sub	x0, x0, x19
  437630:	cmp	x0, #0xfff
  437634:	b.le	43765c <argp_usage@@Base+0xa17c>
  437638:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  43763c:	add	x3, x3, #0x880
  437640:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  437644:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  437648:	add	x3, x3, #0x9
  43764c:	add	x1, x1, #0x824
  437650:	add	x0, x0, #0x86d
  437654:	mov	w2, #0xb3                  	// #179
  437658:	b	437498 <argp_usage@@Base+0x9fb8>
  43765c:	mov	x1, x19
  437660:	add	x0, sp, #0x48
  437664:	bl	4373e0 <argp_usage@@Base+0x9f00>
  437668:	strb	w24, [x23]
  43766c:	cbnz	w0, 437698 <argp_usage@@Base+0xa1b8>
  437670:	add	x19, x23, #0x1
  437674:	mov	x1, x22
  437678:	mov	x0, x19
  43767c:	bl	404b80 <strspn@plt>
  437680:	add	x19, x19, x0
  437684:	b	43759c <argp_usage@@Base+0xa0bc>
  437688:	mov	x1, x19
  43768c:	add	x0, sp, #0x48
  437690:	bl	4373e0 <argp_usage@@Base+0x9f00>
  437694:	cbz	w0, 4375b0 <argp_usage@@Base+0xa0d0>
  437698:	ldr	w0, [sp, #72]
  43769c:	ldr	w19, [x20]
  4376a0:	bl	4373a0 <argp_usage@@Base+0x9ec0>
  4376a4:	str	w19, [x20]
  4376a8:	b	437500 <argp_usage@@Base+0xa020>
  4376ac:	stp	x29, x30, [sp, #-128]!
  4376b0:	mov	x29, sp
  4376b4:	stp	x2, x3, [sp, #96]
  4376b8:	add	x2, sp, #0x80
  4376bc:	stp	x2, x2, [sp, #64]
  4376c0:	add	x2, sp, #0x60
  4376c4:	stp	x19, x20, [sp, #16]
  4376c8:	stp	x21, x22, [sp, #32]
  4376cc:	str	x23, [sp, #48]
  4376d0:	str	x2, [sp, #80]
  4376d4:	mov	w2, #0xffffffe0            	// #-32
  4376d8:	str	w2, [sp, #88]
  4376dc:	str	wzr, [sp, #92]
  4376e0:	stp	x4, x5, [sp, #112]
  4376e4:	cbz	w1, 43772c <argp_usage@@Base+0xa24c>
  4376e8:	mov	w20, w0
  4376ec:	mov	w6, w1
  4376f0:	cmp	w1, #0x406
  4376f4:	b.eq	437738 <argp_usage@@Base+0xa258>  // b.none
  4376f8:	cmp	w1, #0xb
  4376fc:	b.gt	43783c <argp_usage@@Base+0xa35c>
  437700:	cmp	w1, #0x0
  437704:	b.le	437848 <argp_usage@@Base+0xa368>
  437708:	sub	w1, w1, #0x1
  43770c:	cmp	w1, #0xa
  437710:	b.hi	437848 <argp_usage@@Base+0xa368>  // b.pmore
  437714:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  437718:	add	x0, x0, #0x894
  43771c:	ldrb	w0, [x0, w1, uxtw]
  437720:	adr	x1, 43772c <argp_usage@@Base+0xa24c>
  437724:	add	x0, x1, w0, sxtb #2
  437728:	br	x0
  43772c:	ldr	w2, [sp, #96]
  437730:	bl	404c00 <fcntl@plt>
  437734:	b	437884 <argp_usage@@Base+0xa3a4>
  437738:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  43773c:	mov	w2, #0xffffffe8            	// #-24
  437740:	str	w2, [sp, #88]
  437744:	mov	x23, x21
  437748:	ldr	w2, [x21, #3872]
  43774c:	ldr	w22, [sp, #96]
  437750:	tbnz	w2, #31, 4377e4 <argp_usage@@Base+0xa304>
  437754:	mov	w2, w22
  437758:	bl	404c00 <fcntl@plt>
  43775c:	mov	w19, w0
  437760:	tbz	w0, #31, 437774 <argp_usage@@Base+0xa294>
  437764:	bl	404e10 <__errno_location@plt>
  437768:	ldr	w0, [x0]
  43776c:	cmp	w0, #0x16
  437770:	b.eq	437794 <argp_usage@@Base+0xa2b4>  // b.none
  437774:	mov	w0, #0x1                   	// #1
  437778:	str	w0, [x23, #3872]
  43777c:	mov	w0, w19
  437780:	ldp	x19, x20, [sp, #16]
  437784:	ldp	x21, x22, [sp, #32]
  437788:	ldr	x23, [sp, #48]
  43778c:	ldp	x29, x30, [sp], #128
  437790:	ret
  437794:	mov	w2, w22
  437798:	mov	w0, w20
  43779c:	mov	w1, #0x0                   	// #0
  4377a0:	bl	404c00 <fcntl@plt>
  4377a4:	mov	w19, w0
  4377a8:	tbnz	w0, #31, 43777c <argp_usage@@Base+0xa29c>
  4377ac:	mov	w0, #0xffffffff            	// #-1
  4377b0:	str	w0, [x21, #3872]
  4377b4:	mov	w0, w19
  4377b8:	mov	w1, #0x1                   	// #1
  4377bc:	bl	404c00 <fcntl@plt>
  4377c0:	tbz	w0, #31, 437808 <argp_usage@@Base+0xa328>
  4377c4:	bl	404e10 <__errno_location@plt>
  4377c8:	mov	x20, x0
  4377cc:	mov	w0, w19
  4377d0:	mov	w19, #0xffffffff            	// #-1
  4377d4:	ldr	w21, [x20]
  4377d8:	bl	4048c0 <close@plt>
  4377dc:	str	w21, [x20]
  4377e0:	b	43777c <argp_usage@@Base+0xa29c>
  4377e4:	mov	w2, w22
  4377e8:	mov	w1, #0x0                   	// #0
  4377ec:	bl	404c00 <fcntl@plt>
  4377f0:	mov	w19, w0
  4377f4:	tbnz	w0, #31, 43777c <argp_usage@@Base+0xa29c>
  4377f8:	ldr	w0, [x21, #3872]
  4377fc:	cmn	w0, #0x1
  437800:	b.ne	43777c <argp_usage@@Base+0xa29c>  // b.any
  437804:	b	4377b4 <argp_usage@@Base+0xa2d4>
  437808:	orr	w2, w0, #0x1
  43780c:	mov	w1, #0x2                   	// #2
  437810:	mov	w0, w19
  437814:	bl	404c00 <fcntl@plt>
  437818:	cmn	w0, #0x1
  43781c:	b.ne	43777c <argp_usage@@Base+0xa29c>  // b.any
  437820:	b	4377c4 <argp_usage@@Base+0xa2e4>
  437824:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  437828:	add	x0, x0, #0x8a0
  43782c:	ldrb	w0, [x0, w1, uxtw]
  437830:	adr	x1, 43783c <argp_usage@@Base+0xa35c>
  437834:	add	x0, x1, w0, sxtb #2
  437838:	br	x0
  43783c:	sub	w1, w1, #0x400
  437840:	cmp	w1, #0xa
  437844:	b.ls	437824 <argp_usage@@Base+0xa344>  // b.plast
  437848:	ldr	w1, [sp, #88]
  43784c:	ldr	x0, [sp, #64]
  437850:	tbz	w1, #31, 437864 <argp_usage@@Base+0xa384>
  437854:	cmn	w1, #0x7
  437858:	b.ge	437864 <argp_usage@@Base+0xa384>  // b.tcont
  43785c:	ldr	x0, [sp, #72]
  437860:	add	x0, x0, w1, sxtw
  437864:	ldr	x2, [x0]
  437868:	mov	w1, w6
  43786c:	mov	w0, w20
  437870:	bl	404c00 <fcntl@plt>
  437874:	b	437884 <argp_usage@@Base+0xa3a4>
  437878:	mov	w1, w6
  43787c:	mov	w0, w20
  437880:	bl	404c00 <fcntl@plt>
  437884:	mov	w19, w0
  437888:	b	43777c <argp_usage@@Base+0xa29c>
  43788c:	ldr	w1, [sp, #88]
  437890:	ldr	x0, [sp, #64]
  437894:	tbz	w1, #31, 4378a8 <argp_usage@@Base+0xa3c8>
  437898:	cmn	w1, #0x7
  43789c:	b.ge	4378a8 <argp_usage@@Base+0xa3c8>  // b.tcont
  4378a0:	ldr	x0, [sp, #72]
  4378a4:	add	x0, x0, w1, sxtw
  4378a8:	ldr	w2, [x0]
  4378ac:	mov	w1, w6
  4378b0:	mov	w0, w20
  4378b4:	b	437730 <argp_usage@@Base+0xa250>
  4378b8:	mov	w6, #0x0                   	// #0
  4378bc:	mov	w5, #0x0                   	// #0
  4378c0:	b	4456bc <_obstack_memory_used@@Base+0xda3c>
  4378c4:	mov	x6, x5
  4378c8:	mov	w7, #0x0                   	// #0
  4378cc:	mov	w5, #0x0                   	// #0
  4378d0:	b	4451a8 <_obstack_memory_used@@Base+0xd528>
  4378d4:	mov	w6, #0x0                   	// #0
  4378d8:	mov	w5, #0x1                   	// #1
  4378dc:	b	4456bc <_obstack_memory_used@@Base+0xda3c>
  4378e0:	mov	x6, x5
  4378e4:	mov	w7, #0x0                   	// #0
  4378e8:	mov	w5, #0x1                   	// #1
  4378ec:	b	4451a8 <_obstack_memory_used@@Base+0xd528>
  4378f0:	stp	x29, x30, [sp, #-64]!
  4378f4:	mov	x29, sp
  4378f8:	stp	x19, x20, [sp, #16]
  4378fc:	stp	x21, x22, [sp, #32]
  437900:	mov	x21, x1
  437904:	mov	x22, x2
  437908:	cbnz	x0, 437960 <argp_usage@@Base+0xa480>
  43790c:	add	x19, sp, #0x3c
  437910:	mov	x2, x22
  437914:	mov	x1, x21
  437918:	mov	x0, x19
  43791c:	bl	4041f0 <mbrtowc@plt>
  437920:	cmp	x22, #0x0
  437924:	mov	x20, x0
  437928:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  43792c:	b.ls	43794c <argp_usage@@Base+0xa46c>  // b.plast
  437930:	mov	w0, #0x0                   	// #0
  437934:	bl	4437a8 <_obstack_memory_used@@Base+0xbb28>
  437938:	tst	w0, #0xff
  43793c:	b.ne	43794c <argp_usage@@Base+0xa46c>  // b.any
  437940:	ldrb	w0, [x21]
  437944:	mov	x20, #0x1                   	// #1
  437948:	str	w0, [x19]
  43794c:	mov	x0, x20
  437950:	ldp	x19, x20, [sp, #16]
  437954:	ldp	x21, x22, [sp, #32]
  437958:	ldp	x29, x30, [sp], #64
  43795c:	ret
  437960:	mov	x19, x0
  437964:	b	437910 <argp_usage@@Base+0xa430>
  437968:	stp	x29, x30, [sp, #-32]!
  43796c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  437970:	mov	w2, #0x5                   	// #5
  437974:	mov	x29, sp
  437978:	str	x19, [sp, #16]
  43797c:	adrp	x1, 447000 <_obstack_memory_used@@Base+0xf380>
  437980:	ldr	x19, [x0, #1160]
  437984:	add	x1, x1, #0xab4
  437988:	mov	x0, #0x0                   	// #0
  43798c:	bl	404d00 <dcgettext@plt>
  437990:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x15380>
  437994:	mov	x3, x0
  437998:	add	x2, x2, #0x9e4
  43799c:	mov	x0, x19
  4379a0:	mov	w1, #0x1                   	// #1
  4379a4:	bl	404a20 <__fprintf_chk@plt>
  4379a8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4379ac:	ldr	w0, [x0, #1032]
  4379b0:	bl	4042b0 <exit@plt>
  4379b4:	mov	x2, x0
  4379b8:	mov	x0, x1
  4379bc:	ldrb	w4, [x2, #80]
  4379c0:	ldr	x3, [x2, #56]
  4379c4:	tbz	w4, #0, 4379d4 <argp_usage@@Base+0xa4f4>
  4379c8:	ldr	x0, [x2, #72]
  4379cc:	mov	x16, x3
  4379d0:	br	x16
  4379d4:	mov	x16, x3
  4379d8:	br	x16
  4379dc:	mov	x2, x0
  4379e0:	mov	x0, x1
  4379e4:	ldrb	w4, [x2, #80]
  4379e8:	ldr	x3, [x2, #64]
  4379ec:	tbz	w4, #0, 4379fc <argp_usage@@Base+0xa51c>
  4379f0:	ldr	x0, [x2, #72]
  4379f4:	mov	x16, x3
  4379f8:	br	x16
  4379fc:	mov	x16, x3
  437a00:	br	x16
  437a04:	stp	x29, x30, [sp, #-48]!
  437a08:	cmp	x2, #0x0
  437a0c:	mov	x29, sp
  437a10:	stp	x19, x20, [sp, #16]
  437a14:	mov	x20, x2
  437a18:	mov	x19, x0
  437a1c:	mov	x2, #0x10                  	// #16
  437a20:	csel	x20, x20, x2, ne  // ne = any
  437a24:	cmp	x1, #0x0
  437a28:	str	x21, [sp, #32]
  437a2c:	mov	x2, #0xfe0                 	// #4064
  437a30:	sub	x21, x20, #0x1
  437a34:	csel	x1, x1, x2, ne  // ne = any
  437a38:	str	x1, [x0]
  437a3c:	str	x21, [x0, #48]
  437a40:	bl	4379b4 <argp_usage@@Base+0xa4d4>
  437a44:	str	x0, [x19, #8]
  437a48:	cbnz	x0, 437a58 <argp_usage@@Base+0xa578>
  437a4c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  437a50:	ldr	x0, [x0, #1128]
  437a54:	blr	x0
  437a58:	add	x2, x0, #0x10
  437a5c:	neg	x20, x20
  437a60:	ldr	x1, [x19]
  437a64:	add	x2, x2, x21
  437a68:	and	x20, x2, x20
  437a6c:	ldr	x21, [sp, #32]
  437a70:	stp	x20, x20, [x19, #16]
  437a74:	add	x1, x0, x1
  437a78:	str	x1, [x0]
  437a7c:	str	x1, [x19, #32]
  437a80:	str	xzr, [x0, #8]
  437a84:	ldrb	w0, [x19, #80]
  437a88:	and	w0, w0, #0xfffffff9
  437a8c:	strb	w0, [x19, #80]
  437a90:	mov	w0, #0x1                   	// #1
  437a94:	ldp	x19, x20, [sp, #16]
  437a98:	ldp	x29, x30, [sp], #48
  437a9c:	ret

0000000000437aa0 <_obstack_begin@@Base>:
  437aa0:	stp	x3, x4, [x0, #56]
  437aa4:	ldrb	w3, [x0, #80]
  437aa8:	and	w3, w3, #0xfffffffe
  437aac:	strb	w3, [x0, #80]
  437ab0:	b	437a04 <argp_usage@@Base+0xa524>

0000000000437ab4 <_obstack_begin_1@@Base>:
  437ab4:	stp	x3, x4, [x0, #56]
  437ab8:	ldrb	w3, [x0, #80]
  437abc:	str	x5, [x0, #72]
  437ac0:	orr	w3, w3, #0x1
  437ac4:	strb	w3, [x0, #80]
  437ac8:	b	437a04 <argp_usage@@Base+0xa524>

0000000000437acc <_obstack_newchunk@@Base>:
  437acc:	stp	x29, x30, [sp, #-64]!
  437ad0:	mov	x29, sp
  437ad4:	stp	x19, x20, [sp, #16]
  437ad8:	ldp	x2, x20, [x0, #16]
  437adc:	stp	x21, x22, [sp, #32]
  437ae0:	sub	x21, x20, x2
  437ae4:	ldr	x20, [x0, #48]
  437ae8:	adds	x1, x21, x1
  437aec:	cset	x4, cs  // cs = hs, nlast
  437af0:	adds	x1, x20, x1
  437af4:	lsr	x20, x21, #3
  437af8:	add	x20, x20, #0x64
  437afc:	cset	x3, cs  // cs = hs, nlast
  437b00:	add	x2, x20, x1
  437b04:	ldr	x20, [x0]
  437b08:	str	x23, [sp, #48]
  437b0c:	ldr	x23, [x0, #8]
  437b10:	cmp	x20, x1
  437b14:	csel	x20, x20, x1, cs  // cs = hs, nlast
  437b18:	cmp	x20, x2
  437b1c:	csel	x20, x20, x2, cs  // cs = hs, nlast
  437b20:	cmp	x4, #0x0
  437b24:	ccmp	x3, #0x0, #0x0, eq  // eq = none
  437b28:	b.eq	437b38 <_obstack_newchunk@@Base+0x6c>  // b.none
  437b2c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  437b30:	ldr	x0, [x0, #1128]
  437b34:	blr	x0
  437b38:	mov	x19, x0
  437b3c:	mov	x1, x20
  437b40:	bl	4379b4 <argp_usage@@Base+0xa4d4>
  437b44:	mov	x22, x0
  437b48:	cbz	x0, 437b2c <_obstack_newchunk@@Base+0x60>
  437b4c:	mov	x2, x0
  437b50:	str	x0, [x19, #8]
  437b54:	ldr	x1, [x19, #16]
  437b58:	str	x23, [x0, #8]
  437b5c:	add	x20, x0, x20
  437b60:	str	x20, [x19, #32]
  437b64:	str	x20, [x2], #16
  437b68:	ldr	x20, [x19, #48]
  437b6c:	add	x2, x2, x20
  437b70:	bic	x20, x2, x20
  437b74:	mov	x2, x21
  437b78:	mov	x0, x20
  437b7c:	bl	404200 <memcpy@plt>
  437b80:	ldrb	w0, [x19, #80]
  437b84:	tbnz	w0, #1, 437bb8 <_obstack_newchunk@@Base+0xec>
  437b88:	ldr	x0, [x19, #48]
  437b8c:	add	x1, x23, #0x10
  437b90:	add	x1, x1, x0
  437b94:	bic	x0, x1, x0
  437b98:	ldr	x1, [x19, #16]
  437b9c:	cmp	x1, x0
  437ba0:	b.ne	437bb8 <_obstack_newchunk@@Base+0xec>  // b.any
  437ba4:	ldr	x0, [x23, #8]
  437ba8:	str	x0, [x22, #8]
  437bac:	mov	x1, x23
  437bb0:	mov	x0, x19
  437bb4:	bl	4379dc <argp_usage@@Base+0xa4fc>
  437bb8:	ldrb	w0, [x19, #80]
  437bbc:	ldr	x23, [sp, #48]
  437bc0:	and	w0, w0, #0xfffffffd
  437bc4:	str	x20, [x19, #16]
  437bc8:	add	x20, x20, x21
  437bcc:	strb	w0, [x19, #80]
  437bd0:	ldp	x21, x22, [sp, #32]
  437bd4:	str	x20, [x19, #24]
  437bd8:	ldp	x19, x20, [sp, #16]
  437bdc:	ldp	x29, x30, [sp], #64
  437be0:	ret

0000000000437be4 <_obstack_allocated_p@@Base>:
  437be4:	ldr	x0, [x0, #8]
  437be8:	cbz	x0, 437c00 <_obstack_allocated_p@@Base+0x1c>
  437bec:	cmp	x0, x1
  437bf0:	b.cs	437be4 <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  437bf4:	ldr	x2, [x0]
  437bf8:	cmp	x2, x1
  437bfc:	b.cc	437be4 <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  437c00:	cmp	x0, #0x0
  437c04:	cset	w0, ne  // ne = any
  437c08:	ret

0000000000437c0c <_obstack_free@@Base>:
  437c0c:	stp	x29, x30, [sp, #-48]!
  437c10:	mov	x29, sp
  437c14:	stp	x19, x20, [sp, #16]
  437c18:	mov	x19, x0
  437c1c:	mov	x20, x1
  437c20:	ldr	x1, [x0, #8]
  437c24:	str	x21, [sp, #32]
  437c28:	cbz	x1, 437c78 <_obstack_free@@Base+0x6c>
  437c2c:	cmp	x1, x20
  437c30:	b.cs	437c58 <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  437c34:	ldr	x0, [x1]
  437c38:	cmp	x0, x20
  437c3c:	b.cc	437c58 <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  437c40:	stp	x1, x20, [x19, #8]
  437c44:	stp	x20, x0, [x19, #24]
  437c48:	ldp	x19, x20, [sp, #16]
  437c4c:	ldr	x21, [sp, #32]
  437c50:	ldp	x29, x30, [sp], #48
  437c54:	ret
  437c58:	mov	x0, x19
  437c5c:	ldr	x21, [x1, #8]
  437c60:	bl	4379dc <argp_usage@@Base+0xa4fc>
  437c64:	ldrb	w0, [x19, #80]
  437c68:	mov	x1, x21
  437c6c:	orr	w0, w0, #0x2
  437c70:	strb	w0, [x19, #80]
  437c74:	b	437c28 <_obstack_free@@Base+0x1c>
  437c78:	cbz	x20, 437c48 <_obstack_free@@Base+0x3c>
  437c7c:	bl	404970 <abort@plt>

0000000000437c80 <_obstack_memory_used@@Base>:
  437c80:	ldr	x1, [x0, #8]
  437c84:	mov	x0, #0x0                   	// #0
  437c88:	cbnz	x1, 437c90 <_obstack_memory_used@@Base+0x10>
  437c8c:	ret
  437c90:	ldr	x2, [x1]
  437c94:	sub	x2, x2, x1
  437c98:	add	x0, x0, x2
  437c9c:	ldr	x1, [x1, #8]
  437ca0:	b	437c88 <_obstack_memory_used@@Base+0x8>
  437ca4:	stp	x29, x30, [sp, #-96]!
  437ca8:	mov	x29, sp
  437cac:	stp	x19, x20, [sp, #16]
  437cb0:	mov	x19, x0
  437cb4:	stp	x21, x22, [sp, #32]
  437cb8:	stp	x23, x24, [sp, #48]
  437cbc:	ldrb	w0, [x2]
  437cc0:	cbnz	w0, 437ce0 <_obstack_memory_used@@Base+0x60>
  437cc4:	strb	wzr, [x19]
  437cc8:	mov	x0, x19
  437ccc:	ldp	x19, x20, [sp, #16]
  437cd0:	ldp	x21, x22, [sp, #32]
  437cd4:	ldp	x23, x24, [sp, #48]
  437cd8:	ldp	x29, x30, [sp], #96
  437cdc:	ret
  437ce0:	adrp	x23, 471000 <_obstack_memory_used@@Base+0x39380>
  437ce4:	mov	w22, w1
  437ce8:	mov	x20, x2
  437cec:	mov	x24, x23
  437cf0:	ldr	w0, [x23, #3876]
  437cf4:	cbnz	w0, 437d60 <_obstack_memory_used@@Base+0xe0>
  437cf8:	mov	w1, #0x4900                	// #18688
  437cfc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  437d00:	add	x0, x0, #0x8ab
  437d04:	bl	404630 <open@plt>
  437d08:	mov	w21, w0
  437d0c:	tbz	w0, #31, 437d20 <_obstack_memory_used@@Base+0xa0>
  437d10:	mov	w0, #0xffffffff            	// #-1
  437d14:	str	w0, [x23, #3876]
  437d18:	mov	x19, #0x0                   	// #0
  437d1c:	b	437cc8 <_obstack_memory_used@@Base+0x48>
  437d20:	mov	w4, w0
  437d24:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  437d28:	add	x3, x3, #0x8b9
  437d2c:	mov	x2, #0x20                  	// #32
  437d30:	mov	w1, #0x1                   	// #1
  437d34:	add	x0, sp, #0x40
  437d38:	bl	4042a0 <__sprintf_chk@plt>
  437d3c:	add	x0, sp, #0x40
  437d40:	mov	w1, #0x0                   	// #0
  437d44:	bl	4049a0 <access@plt>
  437d48:	cmp	w0, #0x0
  437d4c:	mov	w2, #0x1                   	// #1
  437d50:	cneg	w2, w2, ne  // ne = any
  437d54:	mov	w0, w21
  437d58:	str	w2, [x23, #3876]
  437d5c:	bl	4048c0 <close@plt>
  437d60:	ldr	w0, [x24, #3876]
  437d64:	tbnz	w0, #31, 437d18 <_obstack_memory_used@@Base+0x98>
  437d68:	mov	x0, x20
  437d6c:	bl	404280 <strlen@plt>
  437d70:	add	x0, x0, #0x1b
  437d74:	cmp	x0, #0xfc0
  437d78:	b.ls	437d88 <_obstack_memory_used@@Base+0x108>  // b.plast
  437d7c:	bl	4045f0 <malloc@plt>
  437d80:	mov	x19, x0
  437d84:	cbz	x0, 437d18 <_obstack_memory_used@@Base+0x98>
  437d88:	mov	w4, w22
  437d8c:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  437d90:	add	x3, x3, #0x8d0
  437d94:	mov	x2, #0xffffffffffffffff    	// #-1
  437d98:	mov	x0, x19
  437d9c:	mov	w1, #0x1                   	// #1
  437da0:	bl	4042a0 <__sprintf_chk@plt>
  437da4:	add	x0, x19, w0, sxtw
  437da8:	mov	x1, x20
  437dac:	bl	404c40 <strcpy@plt>
  437db0:	b	437cc8 <_obstack_memory_used@@Base+0x48>
  437db4:	asr	x2, x1, #6
  437db8:	mov	x3, #0x1                   	// #1
  437dbc:	lsl	x3, x3, x1
  437dc0:	lsl	x2, x2, #3
  437dc4:	ldr	x1, [x0, x2]
  437dc8:	orr	x1, x1, x3
  437dcc:	str	x1, [x0, x2]
  437dd0:	ret
  437dd4:	mov	x1, #0x0                   	// #0
  437dd8:	ldr	x2, [x0, x1, lsl #3]
  437ddc:	mvn	x2, x2
  437de0:	str	x2, [x0, x1, lsl #3]
  437de4:	add	x1, x1, #0x1
  437de8:	cmp	x1, #0x4
  437dec:	b.ne	437dd8 <_obstack_memory_used@@Base+0x158>  // b.any
  437df0:	ret
  437df4:	mov	x2, #0x0                   	// #0
  437df8:	ldr	x3, [x0, x2]
  437dfc:	ldr	x4, [x1, x2]
  437e00:	orr	x3, x3, x4
  437e04:	str	x3, [x0, x2]
  437e08:	add	x2, x2, #0x8
  437e0c:	cmp	x2, #0x20
  437e10:	b.ne	437df8 <_obstack_memory_used@@Base+0x178>  // b.any
  437e14:	ret
  437e18:	mov	x2, #0x0                   	// #0
  437e1c:	ldr	x3, [x0, x2]
  437e20:	ldr	x4, [x1, x2]
  437e24:	and	x3, x3, x4
  437e28:	str	x3, [x0, x2]
  437e2c:	add	x2, x2, #0x8
  437e30:	cmp	x2, #0x20
  437e34:	b.ne	437e1c <_obstack_memory_used@@Base+0x19c>  // b.any
  437e38:	ret
  437e3c:	ldr	w2, [x0, #144]
  437e40:	cmp	w2, #0x1
  437e44:	b.ne	437e54 <_obstack_memory_used@@Base+0x1d4>  // b.any
  437e48:	ldr	x0, [x0, #8]
  437e4c:	ldrb	w0, [x0, x1]
  437e50:	ret
  437e54:	ldr	x0, [x0, #16]
  437e58:	ldr	w0, [x0, x1, lsl #2]
  437e5c:	b	437e50 <_obstack_memory_used@@Base+0x1d0>
  437e60:	ldr	x2, [x0, #64]
  437e64:	ldr	x1, [x0, #88]
  437e68:	cmp	x2, x1
  437e6c:	csel	x2, x2, x1, le
  437e70:	ldr	x1, [x0, #48]
  437e74:	mov	x3, x1
  437e78:	cmp	x3, x2
  437e7c:	b.lt	437e94 <_obstack_memory_used@@Base+0x214>  // b.tstop
  437e80:	subs	x3, x2, x1
  437e84:	csel	x3, x3, xzr, ge  // ge = tcont
  437e88:	add	x1, x1, x3
  437e8c:	stp	x1, x1, [x0, #48]
  437e90:	ret
  437e94:	ldr	x4, [x0]
  437e98:	ldr	x5, [x0, #40]
  437e9c:	add	x4, x4, x3
  437ea0:	ldrb	w4, [x4, x5]
  437ea4:	ldr	x5, [x0, #120]
  437ea8:	ldrb	w5, [x5, x4]
  437eac:	ldr	x4, [x0, #8]
  437eb0:	strb	w5, [x4, x3]
  437eb4:	add	x3, x3, #0x1
  437eb8:	b	437e78 <_obstack_memory_used@@Base+0x1f8>
  437ebc:	cmp	x0, #0x0
  437ec0:	mov	x3, x0
  437ec4:	cset	w2, eq  // eq = none
  437ec8:	cmp	x1, #0x0
  437ecc:	csinc	w0, w2, wzr, ne  // ne = any
  437ed0:	cbnz	w0, 437f10 <_obstack_memory_used@@Base+0x290>
  437ed4:	ldr	x4, [x1, #8]
  437ed8:	ldr	x2, [x3, #8]
  437edc:	cmp	x2, x4
  437ee0:	b.ne	437ef0 <_obstack_memory_used@@Base+0x270>  // b.any
  437ee4:	subs	x2, x2, #0x1
  437ee8:	b.pl	437ef4 <_obstack_memory_used@@Base+0x274>  // b.nfrst
  437eec:	mov	w0, #0x1                   	// #1
  437ef0:	ret
  437ef4:	ldr	x6, [x1, #16]
  437ef8:	lsl	x4, x2, #3
  437efc:	ldr	x5, [x3, #16]
  437f00:	ldr	x5, [x5, x4]
  437f04:	ldr	x4, [x6, x4]
  437f08:	cmp	x5, x4
  437f0c:	b	437ee0 <_obstack_memory_used@@Base+0x260>
  437f10:	mov	w0, #0x0                   	// #0
  437f14:	b	437ef0 <_obstack_memory_used@@Base+0x270>
  437f18:	ldr	x2, [x0, #8]
  437f1c:	cmp	x2, #0x0
  437f20:	b.le	437f6c <_obstack_memory_used@@Base+0x2ec>
  437f24:	sub	x2, x2, #0x1
  437f28:	ldr	x4, [x0, #16]
  437f2c:	mov	x0, #0x0                   	// #0
  437f30:	cmp	x0, x2
  437f34:	b.cc	437f48 <_obstack_memory_used@@Base+0x2c8>  // b.lo, b.ul, b.last
  437f38:	ldr	x2, [x4, x0, lsl #3]
  437f3c:	cmp	x2, x1
  437f40:	csinc	x0, xzr, x0, ne  // ne = any
  437f44:	ret
  437f48:	add	x3, x0, x2
  437f4c:	lsr	x3, x3, #1
  437f50:	ldr	x5, [x4, x3, lsl #3]
  437f54:	cmp	x5, x1
  437f58:	b.ge	437f64 <_obstack_memory_used@@Base+0x2e4>  // b.tcont
  437f5c:	add	x0, x3, #0x1
  437f60:	b	437f30 <_obstack_memory_used@@Base+0x2b0>
  437f64:	mov	x2, x3
  437f68:	b	437f30 <_obstack_memory_used@@Base+0x2b0>
  437f6c:	mov	x0, #0x0                   	// #0
  437f70:	b	437f44 <_obstack_memory_used@@Base+0x2c4>
  437f74:	ldr	x3, [x1, #72]
  437f78:	ldr	x4, [x1, #104]
  437f7c:	cmp	x4, x3
  437f80:	b.gt	437f94 <_obstack_memory_used@@Base+0x314>
  437f84:	mov	w1, #0x2                   	// #2
  437f88:	strb	w1, [x0, #8]
  437f8c:	mov	w0, #0x0                   	// #0
  437f90:	ret
  437f94:	ldr	x5, [x1, #8]
  437f98:	ldr	w6, [x1, #144]
  437f9c:	ldrb	w4, [x5, x3]
  437fa0:	cmp	w6, #0x1
  437fa4:	strb	w4, [x0]
  437fa8:	b.le	437fd0 <_obstack_memory_used@@Base+0x350>
  437fac:	ldr	x6, [x1, #48]
  437fb0:	cmp	x3, x6
  437fb4:	b.eq	437fd0 <_obstack_memory_used@@Base+0x350>  // b.none
  437fb8:	ldr	x6, [x1, #16]
  437fbc:	ldr	w6, [x6, x3, lsl #2]
  437fc0:	cmn	w6, #0x1
  437fc4:	b.ne	437fd0 <_obstack_memory_used@@Base+0x350>  // b.any
  437fc8:	mov	w1, #0x1                   	// #1
  437fcc:	b	438090 <_obstack_memory_used@@Base+0x410>
  437fd0:	cmp	w4, #0x5c
  437fd4:	b.ne	437ffc <_obstack_memory_used@@Base+0x37c>  // b.any
  437fd8:	tbz	w2, #0, 437fc8 <_obstack_memory_used@@Base+0x348>
  437fdc:	ldr	x2, [x1, #88]
  437fe0:	add	x3, x3, #0x1
  437fe4:	cmp	x3, x2
  437fe8:	b.ge	437fc8 <_obstack_memory_used@@Base+0x348>  // b.tcont
  437fec:	str	x3, [x1, #72]
  437ff0:	ldrb	w1, [x5, x3]
  437ff4:	strb	w1, [x0]
  437ff8:	b	437fc8 <_obstack_memory_used@@Base+0x348>
  437ffc:	cmp	w4, #0x5b
  438000:	b.ne	438074 <_obstack_memory_used@@Base+0x3f4>  // b.any
  438004:	ldr	x6, [x1, #88]
  438008:	add	x4, x3, #0x1
  43800c:	cmp	x4, x6
  438010:	b.ge	43805c <_obstack_memory_used@@Base+0x3dc>  // b.tcont
  438014:	add	x3, x5, x3
  438018:	ldrb	w1, [x3, #1]
  43801c:	strb	w1, [x0]
  438020:	cmp	w1, #0x3a
  438024:	b.eq	438050 <_obstack_memory_used@@Base+0x3d0>  // b.none
  438028:	cmp	w1, #0x3d
  43802c:	b.eq	438048 <_obstack_memory_used@@Base+0x3c8>  // b.none
  438030:	cmp	w1, #0x2e
  438034:	b.ne	43805c <_obstack_memory_used@@Base+0x3dc>  // b.any
  438038:	mov	w1, #0x1a                  	// #26
  43803c:	strb	w1, [x0, #8]
  438040:	mov	w0, #0x2                   	// #2
  438044:	b	437f90 <_obstack_memory_used@@Base+0x310>
  438048:	mov	w1, #0x1c                  	// #28
  43804c:	b	43803c <_obstack_memory_used@@Base+0x3bc>
  438050:	tbz	w2, #2, 43805c <_obstack_memory_used@@Base+0x3dc>
  438054:	mov	w1, #0x1e                  	// #30
  438058:	b	43803c <_obstack_memory_used@@Base+0x3bc>
  43805c:	mov	w1, #0x1                   	// #1
  438060:	strb	w1, [x0, #8]
  438064:	mov	w1, #0x5b                  	// #91
  438068:	strb	w1, [x0]
  43806c:	mov	w0, #0x1                   	// #1
  438070:	b	437f90 <_obstack_memory_used@@Base+0x310>
  438074:	cmp	w4, #0x5d
  438078:	b.eq	438098 <_obstack_memory_used@@Base+0x418>  // b.none
  43807c:	cmp	w4, #0x5e
  438080:	b.eq	4380a0 <_obstack_memory_used@@Base+0x420>  // b.none
  438084:	cmp	w4, #0x2d
  438088:	b.ne	437fc8 <_obstack_memory_used@@Base+0x348>  // b.any
  43808c:	mov	w1, #0x16                  	// #22
  438090:	strb	w1, [x0, #8]
  438094:	b	43806c <_obstack_memory_used@@Base+0x3ec>
  438098:	mov	w1, #0x15                  	// #21
  43809c:	b	438090 <_obstack_memory_used@@Base+0x410>
  4380a0:	mov	w1, #0x19                  	// #25
  4380a4:	b	438090 <_obstack_memory_used@@Base+0x410>
  4380a8:	ldrb	w2, [x1, #48]
  4380ac:	cmp	w2, #0x11
  4380b0:	b.ne	4380cc <_obstack_memory_used@@Base+0x44c>  // b.any
  4380b4:	ldr	x2, [x1, #40]
  4380b8:	cmp	x0, x2
  4380bc:	b.ne	4380cc <_obstack_memory_used@@Base+0x44c>  // b.any
  4380c0:	ldrb	w0, [x1, #50]
  4380c4:	orr	w0, w0, #0x8
  4380c8:	strb	w0, [x1, #50]
  4380cc:	mov	w0, #0x0                   	// #0
  4380d0:	ret
  4380d4:	stp	x29, x30, [sp, #-144]!
  4380d8:	mov	x6, #0x28                  	// #40
  4380dc:	and	w10, w1, #0x1
  4380e0:	mov	x29, sp
  4380e4:	ldr	x8, [x0, #152]
  4380e8:	stp	x25, x26, [sp, #64]
  4380ec:	mov	x26, #0x1                   	// #1
  4380f0:	stp	x27, x28, [sp, #80]
  4380f4:	mov	x28, #0x18                  	// #24
  4380f8:	lsl	x26, x26, x2
  4380fc:	ldr	x25, [x8, #48]
  438100:	mvn	w7, w26
  438104:	mul	x6, x4, x6
  438108:	mov	x27, x3
  43810c:	and	w7, w7, #0xffff
  438110:	and	w9, w1, #0x2
  438114:	madd	x25, x3, x28, x25
  438118:	stp	x19, x20, [sp, #16]
  43811c:	mov	w19, w1
  438120:	stp	x21, x22, [sp, #32]
  438124:	mov	x22, x0
  438128:	mov	x21, x2
  43812c:	stp	x23, x24, [sp, #48]
  438130:	mov	x23, x4
  438134:	mov	x24, #0x0                   	// #0
  438138:	ldr	x0, [x25, #8]
  43813c:	cmp	x0, x24
  438140:	b.gt	43814c <_obstack_memory_used@@Base+0x4cc>
  438144:	asr	w0, w19, #1
  438148:	b	4381cc <_obstack_memory_used@@Base+0x54c>
  43814c:	ldr	x0, [x25, #16]
  438150:	ldr	x5, [x0, x24, lsl #3]
  438154:	ldr	x0, [x8]
  438158:	lsl	x2, x5, #4
  43815c:	add	x1, x0, x5, lsl #4
  438160:	ldrb	w1, [x1, #8]
  438164:	cmp	w1, #0x8
  438168:	b.eq	438264 <_obstack_memory_used@@Base+0x5e4>  // b.none
  43816c:	cmp	w1, #0x9
  438170:	b.eq	438278 <_obstack_memory_used@@Base+0x5f8>  // b.none
  438174:	cmp	w1, #0x4
  438178:	b.ne	43825c <_obstack_memory_used@@Base+0x5dc>  // b.any
  43817c:	cmn	x23, #0x1
  438180:	b.eq	43825c <_obstack_memory_used@@Base+0x5dc>  // b.none
  438184:	ldr	x20, [x22, #216]
  438188:	mul	x11, x5, x28
  43818c:	add	x20, x20, x6
  438190:	ldr	x0, [x20]
  438194:	cmp	x0, x5
  438198:	b.ne	438250 <_obstack_memory_used@@Base+0x5d0>  // b.any
  43819c:	cmp	x21, #0x3f
  4381a0:	b.gt	4381b0 <_obstack_memory_used@@Base+0x530>
  4381a4:	ldrh	w0, [x20, #34]
  4381a8:	tst	x0, x26
  4381ac:	b.eq	438250 <_obstack_memory_used@@Base+0x5d0>  // b.none
  4381b0:	ldr	x0, [x8, #40]
  4381b4:	add	x0, x0, x11
  4381b8:	ldr	x0, [x0, #16]
  4381bc:	ldr	x3, [x0]
  4381c0:	cmp	x27, x3
  4381c4:	b.ne	4381e8 <_obstack_memory_used@@Base+0x568>  // b.any
  4381c8:	sbfx	x0, x19, #0, #1
  4381cc:	ldp	x19, x20, [sp, #16]
  4381d0:	ldp	x21, x22, [sp, #32]
  4381d4:	ldp	x23, x24, [sp, #48]
  4381d8:	ldp	x25, x26, [sp, #64]
  4381dc:	ldp	x27, x28, [sp, #80]
  4381e0:	ldp	x29, x30, [sp], #144
  4381e4:	ret
  4381e8:	mov	x4, x23
  4381ec:	mov	x2, x21
  4381f0:	mov	w1, w19
  4381f4:	mov	x0, x22
  4381f8:	stp	x6, x11, [sp, #96]
  4381fc:	str	w7, [sp, #116]
  438200:	stp	x8, x5, [sp, #120]
  438204:	stp	w10, w9, [sp, #136]
  438208:	bl	4380d4 <_obstack_memory_used@@Base+0x454>
  43820c:	ldr	w7, [sp, #116]
  438210:	cmn	w0, #0x1
  438214:	ldp	w10, w9, [sp, #136]
  438218:	ldp	x6, x11, [sp, #96]
  43821c:	ldp	x8, x5, [sp, #120]
  438220:	b.ne	43822c <_obstack_memory_used@@Base+0x5ac>  // b.any
  438224:	mov	w0, #0xffffffff            	// #-1
  438228:	b	4381cc <_obstack_memory_used@@Base+0x54c>
  43822c:	cbnz	w0, 43823c <_obstack_memory_used@@Base+0x5bc>
  438230:	cbz	w9, 43823c <_obstack_memory_used@@Base+0x5bc>
  438234:	mov	w0, #0x0                   	// #0
  438238:	b	4381cc <_obstack_memory_used@@Base+0x54c>
  43823c:	cmp	x21, #0x3f
  438240:	b.gt	438250 <_obstack_memory_used@@Base+0x5d0>
  438244:	ldrh	w0, [x20, #34]
  438248:	and	w0, w7, w0
  43824c:	strh	w0, [x20, #34]
  438250:	ldrb	w0, [x20, #32]
  438254:	add	x20, x20, #0x28
  438258:	cbnz	w0, 438190 <_obstack_memory_used@@Base+0x510>
  43825c:	add	x24, x24, #0x1
  438260:	b	438138 <_obstack_memory_used@@Base+0x4b8>
  438264:	cbz	w10, 43825c <_obstack_memory_used@@Base+0x5dc>
  438268:	ldr	x0, [x0, x2]
  43826c:	cmp	x0, x21
  438270:	b.ne	43825c <_obstack_memory_used@@Base+0x5dc>  // b.any
  438274:	b	438224 <_obstack_memory_used@@Base+0x5a4>
  438278:	cbz	w9, 43825c <_obstack_memory_used@@Base+0x5dc>
  43827c:	ldr	x0, [x0, x2]
  438280:	cmp	x0, x21
  438284:	b.ne	43825c <_obstack_memory_used@@Base+0x5dc>  // b.any
  438288:	b	438234 <_obstack_memory_used@@Base+0x5b4>
  43828c:	mov	x6, x4
  438290:	mov	x4, x5
  438294:	ldr	x5, [x0, #216]
  438298:	mov	x7, #0x28                  	// #40
  43829c:	madd	x1, x1, x7, x5
  4382a0:	ldr	x7, [x1, #16]
  4382a4:	cmp	x7, x6
  4382a8:	b.gt	4382d4 <_obstack_memory_used@@Base+0x654>
  4382ac:	ldr	x5, [x1, #24]
  4382b0:	cmp	x5, x6
  4382b4:	b.lt	4382e0 <_obstack_memory_used@@Base+0x660>  // b.tstop
  4382b8:	cmp	x7, x6
  4382bc:	cset	w7, eq  // eq = none
  4382c0:	cmp	x5, x6
  4382c4:	cset	w1, eq  // eq = none
  4382c8:	orr	w1, w7, w1, lsl #1
  4382cc:	cbz	w1, 4382d8 <_obstack_memory_used@@Base+0x658>
  4382d0:	b	4380d4 <_obstack_memory_used@@Base+0x454>
  4382d4:	mov	w1, #0xffffffff            	// #-1
  4382d8:	mov	w0, w1
  4382dc:	ret
  4382e0:	mov	w1, #0x1                   	// #1
  4382e4:	b	4382d8 <_obstack_memory_used@@Base+0x658>
  4382e8:	mov	x2, x0
  4382ec:	mov	x7, #0x28                  	// #40
  4382f0:	mov	x0, #0x0                   	// #0
  4382f4:	ldr	x6, [x2, #200]
  4382f8:	mov	x4, x6
  4382fc:	cmp	x4, x0
  438300:	b.gt	438328 <_obstack_memory_used@@Base+0x6a8>
  438304:	cmp	x6, x0
  438308:	b.le	438354 <_obstack_memory_used@@Base+0x6d4>
  43830c:	ldr	x3, [x2, #216]
  438310:	mov	x2, #0x28                  	// #40
  438314:	madd	x2, x0, x2, x3
  438318:	ldr	x2, [x2, #8]
  43831c:	cmp	x2, x1
  438320:	csinv	x0, x0, xzr, eq  // eq = none
  438324:	ret
  438328:	add	x3, x4, x0
  43832c:	ldr	x5, [x2, #216]
  438330:	asr	x3, x3, #1
  438334:	madd	x5, x3, x7, x5
  438338:	ldr	x5, [x5, #8]
  43833c:	cmp	x5, x1
  438340:	b.ge	43834c <_obstack_memory_used@@Base+0x6cc>  // b.tcont
  438344:	add	x0, x3, #0x1
  438348:	b	4382fc <_obstack_memory_used@@Base+0x67c>
  43834c:	mov	x4, x3
  438350:	b	4382fc <_obstack_memory_used@@Base+0x67c>
  438354:	mov	x0, #0xffffffffffffffff    	// #-1
  438358:	b	438324 <_obstack_memory_used@@Base+0x6a4>
  43835c:	stp	x29, x30, [sp, #-96]!
  438360:	mov	x12, x0
  438364:	mov	x13, x1
  438368:	mov	x18, x5
  43836c:	mov	x15, x3
  438370:	mov	x29, sp
  438374:	mov	x1, x3
  438378:	stp	x19, x20, [sp, #16]
  43837c:	stp	x21, x22, [sp, #32]
  438380:	mov	x22, x2
  438384:	stp	x23, x24, [sp, #48]
  438388:	mov	x23, x4
  43838c:	stp	x25, x26, [sp, #64]
  438390:	ldr	x25, [x0, #152]
  438394:	str	x27, [sp, #80]
  438398:	bl	4382e8 <_obstack_memory_used@@Base+0x668>
  43839c:	mov	x20, x0
  4383a0:	mov	x1, x18
  4383a4:	mov	x0, x12
  4383a8:	bl	4382e8 <_obstack_memory_used@@Base+0x668>
  4383ac:	mov	x21, x0
  4383b0:	mov	x14, #0x0                   	// #0
  4383b4:	mov	x27, #0x28                  	// #40
  4383b8:	ldr	x0, [x13, #8]
  4383bc:	cmp	x0, x14
  4383c0:	b.gt	4383e4 <_obstack_memory_used@@Base+0x764>
  4383c4:	mov	w0, #0x0                   	// #0
  4383c8:	ldp	x19, x20, [sp, #16]
  4383cc:	ldp	x21, x22, [sp, #32]
  4383d0:	ldp	x23, x24, [sp, #48]
  4383d4:	ldp	x25, x26, [sp, #64]
  4383d8:	ldr	x27, [sp, #80]
  4383dc:	ldp	x29, x30, [sp], #96
  4383e0:	ret
  4383e4:	ldr	x0, [x13, #16]
  4383e8:	lsl	x19, x14, #3
  4383ec:	ldr	x2, [x12, #216]
  4383f0:	mov	x4, x15
  4383f4:	ldr	x1, [x0, x19]
  4383f8:	mov	x5, x20
  4383fc:	mov	x3, x22
  438400:	mul	x0, x1, x27
  438404:	ldr	x0, [x2, x0]
  438408:	ldr	x2, [x25]
  43840c:	lsl	x0, x0, #4
  438410:	ldr	x26, [x2, x0]
  438414:	mov	x0, x12
  438418:	mov	x2, x26
  43841c:	bl	43828c <_obstack_memory_used@@Base+0x60c>
  438420:	mov	w24, w0
  438424:	mov	x5, x21
  438428:	ldr	x0, [x13, #16]
  43842c:	mov	x4, x18
  438430:	mov	x3, x23
  438434:	mov	x2, x26
  438438:	ldr	x1, [x0, x19]
  43843c:	mov	x0, x12
  438440:	bl	43828c <_obstack_memory_used@@Base+0x60c>
  438444:	cmp	w24, w0
  438448:	b.ne	438454 <_obstack_memory_used@@Base+0x7d4>  // b.any
  43844c:	add	x14, x14, #0x1
  438450:	b	4383b8 <_obstack_memory_used@@Base+0x738>
  438454:	mov	w0, #0x1                   	// #1
  438458:	b	4383c8 <_obstack_memory_used@@Base+0x748>
  43845c:	stp	x29, x30, [sp, #-48]!
  438460:	mov	x29, sp
  438464:	stp	x19, x20, [sp, #16]
  438468:	mov	x20, x1
  43846c:	str	x21, [sp, #32]
  438470:	mov	x21, x2
  438474:	mov	x19, x0
  438478:	ldr	x0, [x0, #8]
  43847c:	cbnz	x0, 438474 <_obstack_memory_used@@Base+0x7f4>
  438480:	ldr	x0, [x19, #16]
  438484:	cbnz	x0, 438474 <_obstack_memory_used@@Base+0x7f4>
  438488:	mov	x1, x19
  43848c:	mov	x0, x21
  438490:	blr	x20
  438494:	cbnz	w0, 4384b8 <_obstack_memory_used@@Base+0x838>
  438498:	ldr	x1, [x19]
  43849c:	cbz	x1, 4384b8 <_obstack_memory_used@@Base+0x838>
  4384a0:	ldr	x0, [x1, #16]
  4384a4:	cmp	x0, x19
  4384a8:	b.eq	4384b0 <_obstack_memory_used@@Base+0x830>  // b.none
  4384ac:	cbnz	x0, 438474 <_obstack_memory_used@@Base+0x7f4>
  4384b0:	mov	x19, x1
  4384b4:	b	438488 <_obstack_memory_used@@Base+0x808>
  4384b8:	ldp	x19, x20, [sp, #16]
  4384bc:	ldr	x21, [sp, #32]
  4384c0:	ldp	x29, x30, [sp], #48
  4384c4:	ret
  4384c8:	stp	x29, x30, [sp, #-48]!
  4384cc:	mov	x29, sp
  4384d0:	stp	x19, x20, [sp, #16]
  4384d4:	mov	x19, x0
  4384d8:	mov	x20, x1
  4384dc:	str	x21, [sp, #32]
  4384e0:	mov	x21, x2
  4384e4:	mov	x1, x19
  4384e8:	mov	x0, x21
  4384ec:	blr	x20
  4384f0:	cbnz	w0, 43852c <_obstack_memory_used@@Base+0x8ac>
  4384f4:	ldr	x3, [x19, #8]
  4384f8:	cbnz	x3, 438510 <_obstack_memory_used@@Base+0x890>
  4384fc:	mov	x1, #0x0                   	// #0
  438500:	ldr	x3, [x19, #16]
  438504:	cmp	x3, x1
  438508:	b.eq	438518 <_obstack_memory_used@@Base+0x898>  // b.none
  43850c:	cbz	x3, 438518 <_obstack_memory_used@@Base+0x898>
  438510:	mov	x19, x3
  438514:	b	4384e4 <_obstack_memory_used@@Base+0x864>
  438518:	ldr	x2, [x19]
  43851c:	mov	x1, x19
  438520:	cbz	x2, 43852c <_obstack_memory_used@@Base+0x8ac>
  438524:	mov	x19, x2
  438528:	b	438500 <_obstack_memory_used@@Base+0x880>
  43852c:	ldp	x19, x20, [sp, #16]
  438530:	ldr	x21, [sp, #32]
  438534:	ldp	x29, x30, [sp], #48
  438538:	ret
  43853c:	stp	x29, x30, [sp, #-32]!
  438540:	mov	x29, sp
  438544:	stp	x19, x20, [sp, #16]
  438548:	mov	x19, x0
  43854c:	ldr	w0, [x0, #144]
  438550:	mov	x20, x1
  438554:	cmp	w0, #0x1
  438558:	b.le	4385a4 <_obstack_memory_used@@Base+0x924>
  43855c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  438560:	cmp	x1, x0
  438564:	b.ls	438578 <_obstack_memory_used@@Base+0x8f8>  // b.plast
  438568:	mov	w0, #0xc                   	// #12
  43856c:	ldp	x19, x20, [sp, #16]
  438570:	ldp	x29, x30, [sp], #32
  438574:	ret
  438578:	ldr	x0, [x19, #16]
  43857c:	lsl	x1, x1, #2
  438580:	bl	404820 <realloc@plt>
  438584:	cbz	x0, 438568 <_obstack_memory_used@@Base+0x8e8>
  438588:	str	x0, [x19, #16]
  43858c:	ldr	x0, [x19, #24]
  438590:	cbz	x0, 4385a4 <_obstack_memory_used@@Base+0x924>
  438594:	lsl	x1, x20, #3
  438598:	bl	404820 <realloc@plt>
  43859c:	cbz	x0, 438568 <_obstack_memory_used@@Base+0x8e8>
  4385a0:	str	x0, [x19, #24]
  4385a4:	ldrb	w0, [x19, #139]
  4385a8:	cbz	w0, 4385c0 <_obstack_memory_used@@Base+0x940>
  4385ac:	ldr	x0, [x19, #8]
  4385b0:	mov	x1, x20
  4385b4:	bl	404820 <realloc@plt>
  4385b8:	cbz	x0, 438568 <_obstack_memory_used@@Base+0x8e8>
  4385bc:	str	x0, [x19, #8]
  4385c0:	mov	w0, #0x0                   	// #0
  4385c4:	str	x20, [x19, #64]
  4385c8:	b	43856c <_obstack_memory_used@@Base+0x8ec>
  4385cc:	stp	x29, x30, [sp, #-32]!
  4385d0:	mov	x29, sp
  4385d4:	stp	x19, x20, [sp, #16]
  4385d8:	mov	x19, x0
  4385dc:	mov	x20, x1
  4385e0:	ldr	x0, [x0]
  4385e4:	ldr	x1, [x19, #8]
  4385e8:	cmp	x0, x1
  4385ec:	b.ne	438610 <_obstack_memory_used@@Base+0x990>  // b.any
  4385f0:	add	x0, x0, #0x1
  4385f4:	lsl	x1, x0, #1
  4385f8:	str	x1, [x19]
  4385fc:	lsl	x1, x0, #4
  438600:	ldr	x0, [x19, #16]
  438604:	bl	404820 <realloc@plt>
  438608:	cbz	x0, 438630 <_obstack_memory_used@@Base+0x9b0>
  43860c:	str	x0, [x19, #16]
  438610:	ldp	x0, x1, [x19, #8]
  438614:	add	x2, x0, #0x1
  438618:	str	x2, [x19, #8]
  43861c:	str	x20, [x1, x0, lsl #3]
  438620:	mov	w0, #0x1                   	// #1
  438624:	ldp	x19, x20, [sp, #16]
  438628:	ldp	x29, x30, [sp], #32
  43862c:	ret
  438630:	mov	w0, #0x0                   	// #0
  438634:	b	438624 <_obstack_memory_used@@Base+0x9a4>
  438638:	stp	x29, x30, [sp, #-32]!
  43863c:	mov	x29, sp
  438640:	stp	x19, x20, [sp, #16]
  438644:	mov	x19, x0
  438648:	mov	x0, #0x1                   	// #1
  43864c:	mov	x20, x1
  438650:	stp	x0, x0, [x19]
  438654:	mov	x0, #0x8                   	// #8
  438658:	bl	4045f0 <malloc@plt>
  43865c:	str	x0, [x19, #16]
  438660:	cbnz	x0, 438678 <_obstack_memory_used@@Base+0x9f8>
  438664:	mov	w0, #0xc                   	// #12
  438668:	stp	xzr, xzr, [x19]
  43866c:	ldp	x19, x20, [sp, #16]
  438670:	ldp	x29, x30, [sp], #32
  438674:	ret
  438678:	str	x20, [x0]
  43867c:	mov	w0, #0x0                   	// #0
  438680:	b	43866c <_obstack_memory_used@@Base+0x9ec>
  438684:	stp	x29, x30, [sp, #-32]!
  438688:	mov	x29, sp
  43868c:	str	x19, [sp, #16]
  438690:	mov	x19, x0
  438694:	lsl	x0, x1, #3
  438698:	stp	x1, xzr, [x19]
  43869c:	bl	4045f0 <malloc@plt>
  4386a0:	str	x0, [x19, #16]
  4386a4:	cmp	x0, #0x0
  4386a8:	mov	w0, #0xc                   	// #12
  4386ac:	csel	w0, w0, wzr, eq  // eq = none
  4386b0:	ldr	x19, [sp, #16]
  4386b4:	ldp	x29, x30, [sp], #32
  4386b8:	ret
  4386bc:	stp	x29, x30, [sp, #-96]!
  4386c0:	mov	x29, sp
  4386c4:	stp	x19, x20, [sp, #16]
  4386c8:	mov	x19, x0
  4386cc:	mov	x20, #0x0                   	// #0
  4386d0:	stp	x21, x22, [sp, #32]
  4386d4:	mov	x21, x1
  4386d8:	stp	x23, x24, [sp, #48]
  4386dc:	mov	x23, x2
  4386e0:	stp	x25, x26, [sp, #64]
  4386e4:	ldr	x25, [x0, #152]
  4386e8:	str	x27, [sp, #80]
  4386ec:	ldr	x0, [x21, #8]
  4386f0:	cmp	x0, x20
  4386f4:	b.gt	438700 <_obstack_memory_used@@Base+0xa80>
  4386f8:	mov	w0, #0x0                   	// #0
  4386fc:	b	43875c <_obstack_memory_used@@Base+0xadc>
  438700:	ldr	x0, [x21, #16]
  438704:	ldr	x24, [x0, x20, lsl #3]
  438708:	ldr	x0, [x25]
  43870c:	lsl	x1, x24, #4
  438710:	add	x2, x0, x24, lsl #4
  438714:	ldrb	w2, [x2, #8]
  438718:	cmp	w2, #0x8
  43871c:	b.ne	4387a8 <_obstack_memory_used@@Base+0xb28>  // b.any
  438720:	ldr	x1, [x0, x1]
  438724:	cmp	x1, #0x3f
  438728:	b.gt	4387a8 <_obstack_memory_used@@Base+0xb28>
  43872c:	ldr	x0, [x25, #160]
  438730:	lsr	x0, x0, x1
  438734:	tbz	w0, #0, 4387a8 <_obstack_memory_used@@Base+0xb28>
  438738:	ldp	x1, x0, [x19, #232]
  43873c:	cmp	x1, x0
  438740:	b.ne	43877c <_obstack_memory_used@@Base+0xafc>  // b.any
  438744:	ldr	x0, [x19, #248]
  438748:	lsl	x22, x1, #1
  43874c:	lsl	x1, x1, #4
  438750:	bl	404820 <realloc@plt>
  438754:	cbnz	x0, 438778 <_obstack_memory_used@@Base+0xaf8>
  438758:	mov	w0, #0xc                   	// #12
  43875c:	ldp	x19, x20, [sp, #16]
  438760:	ldp	x21, x22, [sp, #32]
  438764:	ldp	x23, x24, [sp, #48]
  438768:	ldp	x25, x26, [sp, #64]
  43876c:	ldr	x27, [sp, #80]
  438770:	ldp	x29, x30, [sp], #96
  438774:	ret
  438778:	stp	x22, x0, [x19, #240]
  43877c:	mov	x1, #0x30                  	// #48
  438780:	ldr	x22, [x19, #232]
  438784:	mov	x0, #0x1                   	// #1
  438788:	ldr	x27, [x19, #248]
  43878c:	bl	4047a0 <calloc@plt>
  438790:	lsl	x26, x22, #3
  438794:	str	x0, [x27, x26]
  438798:	cbz	x0, 438758 <_obstack_memory_used@@Base+0xad8>
  43879c:	add	x22, x22, #0x1
  4387a0:	stp	x23, x24, [x0]
  4387a4:	str	x22, [x19, #232]
  4387a8:	add	x20, x20, #0x1
  4387ac:	b	4386ec <_obstack_memory_used@@Base+0xa6c>
  4387b0:	stp	xzr, xzr, [x0]
  4387b4:	stp	xzr, xzr, [x0, #16]
  4387b8:	ret
  4387bc:	stp	x29, x30, [sp, #-144]!
  4387c0:	mov	x29, sp
  4387c4:	stp	x19, x20, [sp, #16]
  4387c8:	mov	x19, x0
  4387cc:	stp	x21, x22, [sp, #32]
  4387d0:	add	x22, sp, #0x50
  4387d4:	ldr	x21, [x19, #64]
  4387d8:	stp	x23, x24, [sp, #48]
  4387dc:	mov	w23, #0xffffffff            	// #-1
  4387e0:	ldr	x0, [x0, #88]
  4387e4:	ldr	x20, [x19, #48]
  4387e8:	cmp	x21, x0
  4387ec:	csel	x21, x21, x0, le
  4387f0:	cmp	x20, x21
  4387f4:	b.ge	438908 <_obstack_memory_used@@Base+0xc88>  // b.tcont
  4387f8:	ldr	x0, [x19, #120]
  4387fc:	sub	x2, x21, x20
  438800:	ldr	x24, [x19, #32]
  438804:	cbz	x0, 43885c <_obstack_memory_used@@Base+0xbdc>
  438808:	mov	x0, #0x0                   	// #0
  43880c:	ldr	w1, [x19, #144]
  438810:	cmp	w1, w0
  438814:	b.le	438820 <_obstack_memory_used@@Base+0xba0>
  438818:	cmp	x2, x0
  43881c:	b.ne	438828 <_obstack_memory_used@@Base+0xba8>  // b.any
  438820:	mov	x1, x22
  438824:	b	43886c <_obstack_memory_used@@Base+0xbec>
  438828:	ldr	x1, [x19]
  43882c:	ldr	x3, [x19, #40]
  438830:	add	x1, x1, x0
  438834:	add	x1, x1, x20
  438838:	ldrb	w1, [x1, x3]
  43883c:	ldr	x3, [x19, #120]
  438840:	ldrb	w3, [x3, x1]
  438844:	ldr	x1, [x19, #8]
  438848:	add	x1, x1, x20
  43884c:	strb	w3, [x1, x0]
  438850:	strb	w3, [x22, x0]
  438854:	add	x0, x0, #0x1
  438858:	b	43880c <_obstack_memory_used@@Base+0xb8c>
  43885c:	ldr	x1, [x19, #40]
  438860:	add	x0, x20, x1
  438864:	ldr	x1, [x19]
  438868:	add	x1, x1, x0
  43886c:	add	x3, x19, #0x20
  438870:	add	x0, sp, #0x4c
  438874:	bl	4378f0 <argp_usage@@Base+0xa410>
  438878:	sub	x1, x0, #0x1
  43887c:	cmn	x1, #0x3
  438880:	b.hi	43889c <_obstack_memory_used@@Base+0xc1c>  // b.pmore
  438884:	cmn	x0, #0x2
  438888:	b.ne	4388cc <_obstack_memory_used@@Base+0xc4c>  // b.any
  43888c:	ldr	x1, [x19, #64]
  438890:	ldr	x0, [x19, #88]
  438894:	cmp	x1, x0
  438898:	b.lt	438904 <_obstack_memory_used@@Base+0xc84>  // b.tstop
  43889c:	ldr	x0, [x19]
  4388a0:	ldr	x1, [x19, #40]
  4388a4:	add	x0, x0, x20
  4388a8:	ldrb	w0, [x0, x1]
  4388ac:	ldr	x1, [x19, #120]
  4388b0:	str	w0, [sp, #76]
  4388b4:	cbz	x1, 4388c4 <_obstack_memory_used@@Base+0xc44>
  4388b8:	and	x0, x0, #0xff
  4388bc:	ldrb	w0, [x1, x0]
  4388c0:	str	w0, [sp, #76]
  4388c4:	mov	x0, #0x1                   	// #1
  4388c8:	str	x24, [x19, #32]
  4388cc:	ldr	x3, [x19, #16]
  4388d0:	add	x2, x20, #0x1
  4388d4:	ldr	w1, [sp, #76]
  4388d8:	add	x0, x20, x0
  4388dc:	str	w1, [x3, x20, lsl #2]
  4388e0:	mov	x1, x2
  4388e4:	cmp	x1, x0
  4388e8:	b.lt	438920 <_obstack_memory_used@@Base+0xca0>  // b.tstop
  4388ec:	mvn	x1, x20
  4388f0:	cmp	x20, x0
  4388f4:	add	x1, x1, x0
  4388f8:	csel	x1, x1, xzr, lt  // lt = tstop
  4388fc:	add	x20, x1, x2
  438900:	b	4387f0 <_obstack_memory_used@@Base+0xb70>
  438904:	str	x24, [x19, #32]
  438908:	ldp	x21, x22, [sp, #32]
  43890c:	ldp	x23, x24, [sp, #48]
  438910:	stp	x20, x20, [x19, #48]
  438914:	ldp	x19, x20, [sp, #16]
  438918:	ldp	x29, x30, [sp], #144
  43891c:	ret
  438920:	str	w23, [x3, x1, lsl #2]
  438924:	add	x1, x1, #0x1
  438928:	b	4388e4 <_obstack_memory_used@@Base+0xc64>
  43892c:	stp	x29, x30, [sp, #-176]!
  438930:	mov	x29, sp
  438934:	stp	x19, x20, [sp, #16]
  438938:	mov	x19, x0
  43893c:	stp	x23, x24, [sp, #48]
  438940:	ldr	x20, [x0, #48]
  438944:	stp	x21, x22, [sp, #32]
  438948:	ldr	x24, [x19, #64]
  43894c:	stp	x25, x26, [sp, #64]
  438950:	ldr	x0, [x0, #88]
  438954:	cmp	x24, x0
  438958:	csel	x24, x24, x0, le
  43895c:	ldrb	w0, [x19, #138]
  438960:	str	x27, [sp, #80]
  438964:	cbnz	w0, 438bec <_obstack_memory_used@@Base+0xf6c>
  438968:	ldr	x0, [x19, #120]
  43896c:	cbnz	x0, 438bec <_obstack_memory_used@@Base+0xf6c>
  438970:	ldrb	w0, [x19, #140]
  438974:	cbnz	w0, 438bec <_obstack_memory_used@@Base+0xf6c>
  438978:	mov	w23, #0xffffffff            	// #-1
  43897c:	cmp	x20, x24
  438980:	b.ge	438bdc <_obstack_memory_used@@Base+0xf5c>  // b.tcont
  438984:	ldr	x26, [x19]
  438988:	add	x27, x19, #0x20
  43898c:	ldr	x21, [x19, #40]
  438990:	mov	x25, x20
  438994:	add	x0, x26, x21
  438998:	ldrb	w22, [x0, x20]
  43899c:	tbnz	w22, #7, 4389d8 <_obstack_memory_used@@Base+0xd58>
  4389a0:	mov	x0, x27
  4389a4:	bl	404990 <mbsinit@plt>
  4389a8:	cbz	w0, 4389d8 <_obstack_memory_used@@Base+0xd58>
  4389ac:	bl	404830 <__ctype_toupper_loc@plt>
  4389b0:	ubfiz	x22, x22, #2, #8
  4389b4:	ldr	x0, [x0]
  4389b8:	ldr	x1, [x19, #8]
  4389bc:	ldr	w0, [x0, x22]
  4389c0:	strb	w0, [x1, x20]
  4389c4:	ldp	x1, x0, [x19, #8]
  4389c8:	ldrb	w1, [x1, x20]
  4389cc:	str	w1, [x0, x20, lsl #2]
  4389d0:	add	x20, x20, #0x1
  4389d4:	b	43897c <_obstack_memory_used@@Base+0xcfc>
  4389d8:	add	x21, x21, x20
  4389dc:	mov	x3, x27
  4389e0:	ldr	x0, [x19, #32]
  4389e4:	add	x1, x26, x21
  4389e8:	sub	x2, x24, x20
  4389ec:	str	x0, [sp, #104]
  4389f0:	add	x0, sp, #0x64
  4389f4:	bl	4378f0 <argp_usage@@Base+0xa410>
  4389f8:	mov	x21, x0
  4389fc:	sub	x0, x0, #0x1
  438a00:	cmn	x0, #0x4
  438a04:	b.hi	438b84 <_obstack_memory_used@@Base+0xf04>  // b.pmore
  438a08:	ldr	w25, [sp, #100]
  438a0c:	mov	w0, w25
  438a10:	bl	404da0 <towupper@plt>
  438a14:	mov	w22, w0
  438a18:	cmp	w25, w0
  438a1c:	b.eq	438b60 <_obstack_memory_used@@Base+0xee0>  // b.none
  438a20:	mov	w1, w0
  438a24:	add	x2, sp, #0x68
  438a28:	add	x0, sp, #0x70
  438a2c:	bl	404f50 <wcrtomb@plt>
  438a30:	cmp	x21, x0
  438a34:	b.ne	438a80 <_obstack_memory_used@@Base+0xe00>  // b.any
  438a38:	ldr	x0, [x19, #8]
  438a3c:	mov	x2, x21
  438a40:	add	x1, sp, #0x70
  438a44:	add	x0, x0, x20
  438a48:	bl	404200 <memcpy@plt>
  438a4c:	ldr	x2, [x19, #16]
  438a50:	add	x1, x20, #0x1
  438a54:	add	x21, x21, x20
  438a58:	mov	x0, x1
  438a5c:	str	w22, [x2, x20, lsl #2]
  438a60:	cmp	x0, x21
  438a64:	b.lt	438b78 <_obstack_memory_used@@Base+0xef8>  // b.tstop
  438a68:	mvn	x0, x20
  438a6c:	cmp	x20, x21
  438a70:	add	x0, x0, x21
  438a74:	csel	x0, x0, xzr, lt  // lt = tstop
  438a78:	add	x20, x0, x1
  438a7c:	b	43897c <_obstack_memory_used@@Base+0xcfc>
  438a80:	mov	x21, x20
  438a84:	ldr	x3, [x19, #120]
  438a88:	sub	x2, x24, x21
  438a8c:	ldr	x0, [x19, #32]
  438a90:	str	x0, [sp, #104]
  438a94:	cbz	x3, 438c24 <_obstack_memory_used@@Base+0xfa4>
  438a98:	ldr	w4, [x19, #144]
  438a9c:	add	x23, sp, #0x70
  438aa0:	mov	x0, #0x0                   	// #0
  438aa4:	cmp	w4, w0
  438aa8:	b.le	438ab4 <_obstack_memory_used@@Base+0xe34>
  438aac:	cmp	x0, x2
  438ab0:	b.lt	438c00 <_obstack_memory_used@@Base+0xf80>  // b.tstop
  438ab4:	add	x3, x19, #0x20
  438ab8:	mov	x1, x23
  438abc:	add	x0, sp, #0x64
  438ac0:	bl	4378f0 <argp_usage@@Base+0xa410>
  438ac4:	sub	x26, x0, #0x1
  438ac8:	mov	x22, x0
  438acc:	cmn	x26, #0x4
  438ad0:	b.hi	438d9c <_obstack_memory_used@@Base+0x111c>  // b.pmore
  438ad4:	ldr	w25, [sp, #100]
  438ad8:	mov	w0, w25
  438adc:	bl	404da0 <towupper@plt>
  438ae0:	mov	w27, w0
  438ae4:	cmp	w25, w0
  438ae8:	b.eq	438d5c <_obstack_memory_used@@Base+0x10dc>  // b.none
  438aec:	mov	w1, w0
  438af0:	add	x2, sp, #0x68
  438af4:	add	x0, sp, #0x70
  438af8:	bl	404f50 <wcrtomb@plt>
  438afc:	mov	x25, x0
  438b00:	cmp	x22, x0
  438b04:	b.ne	438c38 <_obstack_memory_used@@Base+0xfb8>  // b.any
  438b08:	ldr	x0, [x19, #8]
  438b0c:	mov	x2, x22
  438b10:	add	x1, sp, #0x70
  438b14:	add	x0, x0, x21
  438b18:	bl	404200 <memcpy@plt>
  438b1c:	ldrb	w0, [x19, #140]
  438b20:	cbnz	w0, 438d6c <_obstack_memory_used@@Base+0x10ec>
  438b24:	ldr	x2, [x19, #16]
  438b28:	add	x0, x21, #0x1
  438b2c:	add	x20, x20, x22
  438b30:	mov	x1, x0
  438b34:	add	x22, x22, x21
  438b38:	mov	w3, #0xffffffff            	// #-1
  438b3c:	str	w27, [x2, x21, lsl #2]
  438b40:	cmp	x1, x22
  438b44:	b.lt	438d90 <_obstack_memory_used@@Base+0x1110>  // b.tstop
  438b48:	mvn	x1, x21
  438b4c:	cmp	x21, x22
  438b50:	add	x1, x1, x22
  438b54:	csel	x1, x1, xzr, lt  // lt = tstop
  438b58:	add	x21, x1, x0
  438b5c:	b	438bf4 <_obstack_memory_used@@Base+0xf74>
  438b60:	ldp	x3, x0, [x19]
  438b64:	mov	x2, x21
  438b68:	ldr	x1, [x19, #40]
  438b6c:	add	x1, x20, x1
  438b70:	add	x1, x3, x1
  438b74:	b	438a44 <_obstack_memory_used@@Base+0xdc4>
  438b78:	str	w23, [x2, x0, lsl #2]
  438b7c:	add	x0, x0, #0x1
  438b80:	b	438a60 <_obstack_memory_used@@Base+0xde0>
  438b84:	cmn	x0, #0x3
  438b88:	b.ne	438b9c <_obstack_memory_used@@Base+0xf1c>  // b.any
  438b8c:	ldr	x1, [x19, #64]
  438b90:	ldr	x0, [x19, #88]
  438b94:	cmp	x1, x0
  438b98:	b.lt	438bd4 <_obstack_memory_used@@Base+0xf54>  // b.tstop
  438b9c:	ldr	x0, [x19]
  438ba0:	cmn	x21, #0x1
  438ba4:	ldr	x1, [x19, #40]
  438ba8:	add	x0, x0, x20
  438bac:	ldrb	w0, [x0, x1]
  438bb0:	ldr	x1, [x19, #8]
  438bb4:	strb	w0, [x1, x20]
  438bb8:	add	x20, x20, #0x1
  438bbc:	ldr	x1, [x19, #16]
  438bc0:	str	w0, [x1, x25, lsl #2]
  438bc4:	b.ne	43897c <_obstack_memory_used@@Base+0xcfc>  // b.any
  438bc8:	ldr	x0, [sp, #104]
  438bcc:	str	x0, [x19, #32]
  438bd0:	b	43897c <_obstack_memory_used@@Base+0xcfc>
  438bd4:	ldr	x0, [sp, #104]
  438bd8:	str	x0, [x19, #32]
  438bdc:	str	x20, [x19, #48]
  438be0:	mov	w0, #0x0                   	// #0
  438be4:	str	x20, [x19, #56]
  438be8:	b	438c7c <_obstack_memory_used@@Base+0xffc>
  438bec:	mov	x21, x20
  438bf0:	ldr	x20, [x19, #56]
  438bf4:	cmp	x24, x21
  438bf8:	b.gt	438a84 <_obstack_memory_used@@Base+0xe04>
  438bfc:	b	438c58 <_obstack_memory_used@@Base+0xfd8>
  438c00:	ldr	x1, [x19]
  438c04:	ldr	x5, [x19, #40]
  438c08:	add	x1, x1, x20
  438c0c:	add	x1, x1, x0
  438c10:	ldrb	w1, [x1, x5]
  438c14:	ldrb	w1, [x3, x1]
  438c18:	strb	w1, [x23, x0]
  438c1c:	add	x0, x0, #0x1
  438c20:	b	438aa4 <_obstack_memory_used@@Base+0xe24>
  438c24:	ldr	x23, [x19, #40]
  438c28:	add	x0, x20, x23
  438c2c:	ldr	x23, [x19]
  438c30:	add	x23, x23, x0
  438c34:	b	438ab4 <_obstack_memory_used@@Base+0xe34>
  438c38:	cmn	x0, #0x1
  438c3c:	b.eq	438d5c <_obstack_memory_used@@Base+0x10dc>  // b.none
  438c40:	add	x23, x0, x21
  438c44:	ldr	x0, [x19, #64]
  438c48:	cmp	x23, x0
  438c4c:	b.ls	438c60 <_obstack_memory_used@@Base+0xfe0>  // b.plast
  438c50:	ldr	x0, [sp, #104]
  438c54:	str	x0, [x19, #32]
  438c58:	str	x21, [x19, #48]
  438c5c:	b	438be0 <_obstack_memory_used@@Base+0xf60>
  438c60:	ldr	x1, [x19, #24]
  438c64:	cbnz	x1, 438c98 <_obstack_memory_used@@Base+0x1018>
  438c68:	lsl	x0, x0, #3
  438c6c:	bl	4045f0 <malloc@plt>
  438c70:	str	x0, [x19, #24]
  438c74:	cbnz	x0, 438c98 <_obstack_memory_used@@Base+0x1018>
  438c78:	mov	w0, #0xc                   	// #12
  438c7c:	ldp	x19, x20, [sp, #16]
  438c80:	ldp	x21, x22, [sp, #32]
  438c84:	ldp	x23, x24, [sp, #48]
  438c88:	ldp	x25, x26, [sp, #64]
  438c8c:	ldr	x27, [sp, #80]
  438c90:	ldp	x29, x30, [sp], #176
  438c94:	ret
  438c98:	ldrb	w0, [x19, #140]
  438c9c:	cbz	w0, 438d38 <_obstack_memory_used@@Base+0x10b8>
  438ca0:	ldr	x0, [x19, #8]
  438ca4:	mov	x2, x25
  438ca8:	add	x1, sp, #0x70
  438cac:	add	x0, x0, x21
  438cb0:	bl	404200 <memcpy@plt>
  438cb4:	ldr	x0, [x19, #16]
  438cb8:	mov	w4, #0xffffffff            	// #-1
  438cbc:	add	x2, x0, x21, lsl #2
  438cc0:	str	w27, [x0, x21, lsl #2]
  438cc4:	ldr	x0, [x19, #24]
  438cc8:	add	x3, x0, x21, lsl #3
  438ccc:	str	x20, [x0, x21, lsl #3]
  438cd0:	mov	x0, #0x1                   	// #1
  438cd4:	cmp	x0, x25
  438cd8:	b.cc	438d40 <_obstack_memory_used@@Base+0x10c0>  // b.lo, b.ul, b.last
  438cdc:	ldp	x24, x0, [x19, #88]
  438ce0:	sub	x25, x25, x22
  438ce4:	add	x1, x25, x24
  438ce8:	str	x1, [x19, #88]
  438cec:	cmp	x20, x0
  438cf0:	b.ge	438d00 <_obstack_memory_used@@Base+0x1080>  // b.tcont
  438cf4:	ldr	x2, [x19, #104]
  438cf8:	add	x25, x2, x25
  438cfc:	str	x25, [x19, #104]
  438d00:	ldr	x24, [x19, #64]
  438d04:	mov	x21, x23
  438d08:	add	x20, x20, x22
  438d0c:	cmp	x24, x1
  438d10:	csel	x24, x24, x1, le
  438d14:	b	438bf4 <_obstack_memory_used@@Base+0xf74>
  438d18:	ldr	x1, [x19, #24]
  438d1c:	str	x0, [x1, x0, lsl #3]
  438d20:	add	x0, x0, #0x1
  438d24:	cmp	x0, x21
  438d28:	b.ne	438d18 <_obstack_memory_used@@Base+0x1098>  // b.any
  438d2c:	mov	w0, #0x1                   	// #1
  438d30:	strb	w0, [x19, #140]
  438d34:	b	438ca0 <_obstack_memory_used@@Base+0x1020>
  438d38:	mov	x0, #0x0                   	// #0
  438d3c:	b	438d24 <_obstack_memory_used@@Base+0x10a4>
  438d40:	cmp	x0, x22
  438d44:	csel	x1, x26, x0, cs  // cs = hs, nlast
  438d48:	add	x1, x20, x1
  438d4c:	str	x1, [x3, x0, lsl #3]
  438d50:	str	w4, [x2, x0, lsl #2]
  438d54:	add	x0, x0, #0x1
  438d58:	b	438cd4 <_obstack_memory_used@@Base+0x1054>
  438d5c:	mov	x2, x22
  438d60:	mov	x1, x23
  438d64:	ldr	x0, [x19, #8]
  438d68:	b	438b14 <_obstack_memory_used@@Base+0xe94>
  438d6c:	ldr	x1, [x19, #24]
  438d70:	mov	x0, #0x0                   	// #0
  438d74:	add	x1, x1, x21, lsl #3
  438d78:	add	x2, x20, x0
  438d7c:	str	x2, [x1, x0, lsl #3]
  438d80:	add	x0, x0, #0x1
  438d84:	cmp	x22, x0
  438d88:	b.ne	438d78 <_obstack_memory_used@@Base+0x10f8>  // b.any
  438d8c:	b	438b24 <_obstack_memory_used@@Base+0xea4>
  438d90:	str	w3, [x2, x1, lsl #2]
  438d94:	add	x1, x1, #0x1
  438d98:	b	438b40 <_obstack_memory_used@@Base+0xec0>
  438d9c:	cmn	x26, #0x3
  438da0:	b.ne	438db4 <_obstack_memory_used@@Base+0x1134>  // b.any
  438da4:	ldr	x1, [x19, #64]
  438da8:	ldr	x0, [x19, #88]
  438dac:	cmp	x1, x0
  438db0:	b.lt	438c50 <_obstack_memory_used@@Base+0xfd0>  // b.tstop
  438db4:	ldr	x0, [x19]
  438db8:	ldr	x1, [x19, #40]
  438dbc:	add	x0, x0, x20
  438dc0:	ldrb	w0, [x0, x1]
  438dc4:	ldr	x1, [x19, #120]
  438dc8:	cbz	x1, 438dd4 <_obstack_memory_used@@Base+0x1154>
  438dcc:	and	x0, x0, #0xff
  438dd0:	ldrb	w0, [x1, x0]
  438dd4:	ldr	x1, [x19, #8]
  438dd8:	mov	x2, x21
  438ddc:	strb	w0, [x1, x21]
  438de0:	ldrb	w1, [x19, #140]
  438de4:	cbz	w1, 438df0 <_obstack_memory_used@@Base+0x1170>
  438de8:	ldr	x1, [x19, #24]
  438dec:	str	x20, [x1, x21, lsl #3]
  438df0:	ldr	x1, [x19, #16]
  438df4:	add	x20, x20, #0x1
  438df8:	add	x21, x21, #0x1
  438dfc:	cmn	x22, #0x1
  438e00:	str	w0, [x1, x2, lsl #2]
  438e04:	b.ne	438bf4 <_obstack_memory_used@@Base+0xf74>  // b.any
  438e08:	ldr	x0, [sp, #104]
  438e0c:	str	x0, [x19, #32]
  438e10:	b	438bf4 <_obstack_memory_used@@Base+0xf74>
  438e14:	stp	x29, x30, [sp, #-48]!
  438e18:	mov	x29, sp
  438e1c:	stp	x19, x20, [sp, #16]
  438e20:	mov	x19, x0
  438e24:	ldr	x0, [x0, #88]
  438e28:	stp	x21, x22, [sp, #32]
  438e2c:	ldr	x20, [x19, #64]
  438e30:	ldr	x22, [x19, #48]
  438e34:	cmp	x20, x0
  438e38:	csel	x20, x20, x0, le
  438e3c:	mov	x21, x22
  438e40:	cmp	x21, x20
  438e44:	b.lt	438e68 <_obstack_memory_used@@Base+0x11e8>  // b.tstop
  438e48:	subs	x0, x20, x22
  438e4c:	csel	x0, x0, xzr, ge  // ge = tcont
  438e50:	add	x0, x0, x22
  438e54:	ldp	x21, x22, [sp, #32]
  438e58:	stp	x0, x0, [x19, #48]
  438e5c:	ldp	x19, x20, [sp, #16]
  438e60:	ldp	x29, x30, [sp], #48
  438e64:	ret
  438e68:	ldr	x0, [x19]
  438e6c:	ldr	x1, [x19, #40]
  438e70:	add	x0, x0, x21
  438e74:	ldrb	w0, [x0, x1]
  438e78:	ldr	x1, [x19, #120]
  438e7c:	cbz	x1, 438e88 <_obstack_memory_used@@Base+0x1208>
  438e80:	and	x0, x0, #0xff
  438e84:	ldrb	w0, [x1, x0]
  438e88:	bl	404600 <toupper@plt>
  438e8c:	ldr	x1, [x19, #8]
  438e90:	strb	w0, [x1, x21]
  438e94:	add	x21, x21, #0x1
  438e98:	b	438e40 <_obstack_memory_used@@Base+0x11c0>
  438e9c:	stp	x29, x30, [sp, #-32]!
  438ea0:	mov	x3, #0xffffffffffffffe     	// #1152921504606846974
  438ea4:	mov	x29, sp
  438ea8:	ldr	x2, [x0, #64]
  438eac:	stp	x19, x20, [sp, #16]
  438eb0:	cmp	x2, x3
  438eb4:	b.ls	438ecc <_obstack_memory_used@@Base+0x124c>  // b.plast
  438eb8:	mov	w20, #0xc                   	// #12
  438ebc:	mov	w0, w20
  438ec0:	ldp	x19, x20, [sp, #16]
  438ec4:	ldp	x29, x30, [sp], #32
  438ec8:	ret
  438ecc:	ldr	x3, [x0, #88]
  438ed0:	lsl	x2, x2, #1
  438ed4:	mov	x19, x0
  438ed8:	cmp	x2, x3
  438edc:	csel	x2, x2, x3, le
  438ee0:	sxtw	x3, w1
  438ee4:	cmp	x2, w1, sxtw
  438ee8:	csel	x1, x2, x3, ge  // ge = tcont
  438eec:	bl	43853c <_obstack_memory_used@@Base+0x8bc>
  438ef0:	mov	w20, w0
  438ef4:	cbnz	w0, 438ebc <_obstack_memory_used@@Base+0x123c>
  438ef8:	ldr	x0, [x19, #184]
  438efc:	cbz	x0, 438f18 <_obstack_memory_used@@Base+0x1298>
  438f00:	ldr	x1, [x19, #64]
  438f04:	add	x1, x1, #0x1
  438f08:	lsl	x1, x1, #3
  438f0c:	bl	404820 <realloc@plt>
  438f10:	cbz	x0, 438eb8 <_obstack_memory_used@@Base+0x1238>
  438f14:	str	x0, [x19, #184]
  438f18:	ldrb	w1, [x19, #136]
  438f1c:	ldr	w0, [x19, #144]
  438f20:	cmp	w0, #0x1
  438f24:	cbz	w1, 438f44 <_obstack_memory_used@@Base+0x12c4>
  438f28:	mov	x0, x19
  438f2c:	b.le	438f3c <_obstack_memory_used@@Base+0x12bc>
  438f30:	ldp	x19, x20, [sp, #16]
  438f34:	ldp	x29, x30, [sp], #32
  438f38:	b	43892c <_obstack_memory_used@@Base+0xcac>
  438f3c:	bl	438e14 <_obstack_memory_used@@Base+0x1194>
  438f40:	b	438ebc <_obstack_memory_used@@Base+0x123c>
  438f44:	b.le	438f54 <_obstack_memory_used@@Base+0x12d4>
  438f48:	mov	x0, x19
  438f4c:	bl	4387bc <_obstack_memory_used@@Base+0xb3c>
  438f50:	b	438ebc <_obstack_memory_used@@Base+0x123c>
  438f54:	ldr	x0, [x19, #120]
  438f58:	cbz	x0, 438ebc <_obstack_memory_used@@Base+0x123c>
  438f5c:	mov	x0, x19
  438f60:	bl	437e60 <_obstack_memory_used@@Base+0x1e0>
  438f64:	b	438ebc <_obstack_memory_used@@Base+0x123c>
  438f68:	stp	x29, x30, [sp, #-48]!
  438f6c:	mov	x29, sp
  438f70:	stp	x19, x20, [sp, #16]
  438f74:	mov	x19, x0
  438f78:	mov	x20, x1
  438f7c:	str	x21, [sp, #32]
  438f80:	ldr	x21, [x0, #192]
  438f84:	ldr	x0, [x0, #64]
  438f88:	cmp	x0, x1
  438f8c:	b.gt	438f9c <_obstack_memory_used@@Base+0x131c>
  438f90:	ldr	x1, [x19, #88]
  438f94:	cmp	x0, x1
  438f98:	b.lt	438fc4 <_obstack_memory_used@@Base+0x1344>  // b.tstop
  438f9c:	ldr	x0, [x19, #48]
  438fa0:	cmp	x0, x20
  438fa4:	b.le	438fb8 <_obstack_memory_used@@Base+0x1338>
  438fa8:	cmp	x21, x20
  438fac:	b.lt	438fe4 <_obstack_memory_used@@Base+0x1364>  // b.tstop
  438fb0:	mov	w0, #0x0                   	// #0
  438fb4:	b	438fd4 <_obstack_memory_used@@Base+0x1354>
  438fb8:	ldr	x1, [x19, #88]
  438fbc:	cmp	x0, x1
  438fc0:	b.ge	438fa8 <_obstack_memory_used@@Base+0x1328>  // b.tcont
  438fc4:	add	w1, w20, #0x1
  438fc8:	mov	x0, x19
  438fcc:	bl	438e9c <_obstack_memory_used@@Base+0x121c>
  438fd0:	cbz	w0, 438fa8 <_obstack_memory_used@@Base+0x1328>
  438fd4:	ldp	x19, x20, [sp, #16]
  438fd8:	ldr	x21, [sp, #32]
  438fdc:	ldp	x29, x30, [sp], #48
  438fe0:	ret
  438fe4:	ldr	x0, [x19, #184]
  438fe8:	sub	x2, x20, x21
  438fec:	add	x21, x21, #0x1
  438ff0:	mov	w1, #0x0                   	// #0
  438ff4:	lsl	x2, x2, #3
  438ff8:	add	x0, x0, x21, lsl #3
  438ffc:	bl	404700 <memset@plt>
  439000:	str	x20, [x19, #192]
  439004:	b	438fb0 <_obstack_memory_used@@Base+0x1330>
  439008:	stp	x29, x30, [sp, #-32]!
  43900c:	mov	x29, sp
  439010:	str	x19, [sp, #16]
  439014:	mov	x19, x0
  439018:	ldr	x0, [x0]
  43901c:	bl	404ae0 <free@plt>
  439020:	ldr	x0, [x19, #8]
  439024:	bl	404ae0 <free@plt>
  439028:	ldr	x0, [x19, #16]
  43902c:	bl	404ae0 <free@plt>
  439030:	ldr	x0, [x19, #24]
  439034:	bl	404ae0 <free@plt>
  439038:	mov	x0, x19
  43903c:	ldr	x19, [sp, #16]
  439040:	ldp	x29, x30, [sp], #32
  439044:	b	404ae0 <free@plt>
  439048:	ldr	w1, [x0, #8]
  43904c:	and	w1, w1, #0x7ffff
  439050:	and	w1, w1, #0xfffc00ff
  439054:	cmp	w1, #0x6
  439058:	b.ne	439064 <_obstack_memory_used@@Base+0x13e4>  // b.any
  43905c:	ldr	x0, [x0]
  439060:	b	439008 <_obstack_memory_used@@Base+0x1388>
  439064:	cmp	w1, #0x3
  439068:	b.ne	439074 <_obstack_memory_used@@Base+0x13f4>  // b.any
  43906c:	ldr	x0, [x0]
  439070:	b	404ae0 <free@plt>
  439074:	ret
  439078:	stp	x29, x30, [sp, #-16]!
  43907c:	add	x0, x1, #0x28
  439080:	mov	x29, sp
  439084:	bl	439048 <_obstack_memory_used@@Base+0x13c8>
  439088:	mov	w0, #0x0                   	// #0
  43908c:	ldp	x29, x30, [sp], #16
  439090:	ret
  439094:	stp	x29, x30, [sp, #-96]!
  439098:	mov	x29, sp
  43909c:	stp	x19, x20, [sp, #16]
  4390a0:	mov	x19, x0
  4390a4:	ldp	x20, x0, [x0, #8]
  4390a8:	stp	x21, x22, [sp, #32]
  4390ac:	mov	x21, x2
  4390b0:	stp	x23, x24, [sp, #48]
  4390b4:	mov	x23, x1
  4390b8:	and	w24, w2, #0xff
  4390bc:	stp	x25, x26, [sp, #64]
  4390c0:	cmp	x0, x20
  4390c4:	str	x27, [sp, #80]
  4390c8:	b.cc	4391a8 <_obstack_memory_used@@Base+0x1528>  // b.lo, b.ul, b.last
  4390cc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4390d0:	lsl	x25, x20, #1
  4390d4:	movk	x0, #0xaaa, lsl #48
  4390d8:	cmp	x0, x20, lsl #1
  4390dc:	b.cs	439100 <_obstack_memory_used@@Base+0x1480>  // b.hs, b.nlast
  4390e0:	mov	x0, #0xffffffffffffffff    	// #-1
  4390e4:	ldp	x19, x20, [sp, #16]
  4390e8:	ldp	x21, x22, [sp, #32]
  4390ec:	ldp	x23, x24, [sp, #48]
  4390f0:	ldp	x25, x26, [sp, #64]
  4390f4:	ldr	x27, [sp, #80]
  4390f8:	ldp	x29, x30, [sp], #96
  4390fc:	ret
  439100:	ldr	x0, [x19]
  439104:	lsl	x1, x20, #5
  439108:	bl	404820 <realloc@plt>
  43910c:	cbz	x0, 4390e0 <_obstack_memory_used@@Base+0x1460>
  439110:	str	x0, [x19]
  439114:	lsl	x22, x20, #4
  439118:	ldr	x0, [x19, #24]
  43911c:	mov	x1, x22
  439120:	bl	404820 <realloc@plt>
  439124:	mov	x27, x0
  439128:	ldr	x0, [x19, #32]
  43912c:	mov	x1, x22
  439130:	bl	404820 <realloc@plt>
  439134:	mov	x26, x0
  439138:	mov	x1, #0x30                  	// #48
  43913c:	ldr	x0, [x19, #40]
  439140:	mul	x20, x20, x1
  439144:	mov	x1, x20
  439148:	bl	404820 <realloc@plt>
  43914c:	mov	x22, x0
  439150:	ldr	x0, [x19, #48]
  439154:	mov	x1, x20
  439158:	bl	404820 <realloc@plt>
  43915c:	mov	x20, x0
  439160:	cmp	x27, #0x0
  439164:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  439168:	b.eq	439178 <_obstack_memory_used@@Base+0x14f8>  // b.none
  43916c:	cmp	x22, #0x0
  439170:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  439174:	b.ne	43919c <_obstack_memory_used@@Base+0x151c>  // b.any
  439178:	mov	x0, x27
  43917c:	bl	404ae0 <free@plt>
  439180:	mov	x0, x26
  439184:	bl	404ae0 <free@plt>
  439188:	mov	x0, x22
  43918c:	bl	404ae0 <free@plt>
  439190:	mov	x0, x20
  439194:	bl	404ae0 <free@plt>
  439198:	b	4390e0 <_obstack_memory_used@@Base+0x1460>
  43919c:	str	x25, [x19, #8]
  4391a0:	stp	x27, x26, [x19, #24]
  4391a4:	stp	x22, x0, [x19, #40]
  4391a8:	cmp	w24, #0x5
  4391ac:	ldr	x1, [x19, #16]
  4391b0:	ldr	x2, [x19]
  4391b4:	lsl	x3, x1, #4
  4391b8:	add	x0, x2, x1, lsl #4
  4391bc:	str	x23, [x2, x3]
  4391c0:	str	x21, [x0, #8]
  4391c4:	and	w21, w21, #0xfffc00ff
  4391c8:	str	w21, [x0, #8]
  4391cc:	b.ne	439230 <_obstack_memory_used@@Base+0x15b0>  // b.any
  4391d0:	ldr	w2, [x19, #180]
  4391d4:	cmp	w2, #0x1
  4391d8:	cset	w3, gt
  4391dc:	ldrb	w2, [x0, #10]
  4391e0:	bfi	w2, w3, #4, #1
  4391e4:	strb	w2, [x0, #10]
  4391e8:	mov	x2, #0xffffffffffffffff    	// #-1
  4391ec:	ldr	x0, [x19, #24]
  4391f0:	str	x2, [x0, x1, lsl #3]
  4391f4:	mov	x2, #0x18                  	// #24
  4391f8:	ldr	x0, [x19, #40]
  4391fc:	ldr	x1, [x19, #16]
  439200:	madd	x1, x1, x2, x0
  439204:	stp	xzr, xzr, [x1]
  439208:	str	xzr, [x1, #16]
  43920c:	ldr	x0, [x19, #16]
  439210:	ldr	x1, [x19, #48]
  439214:	madd	x0, x0, x2, x1
  439218:	stp	xzr, xzr, [x0]
  43921c:	str	xzr, [x0, #16]
  439220:	ldr	x0, [x19, #16]
  439224:	add	x1, x0, #0x1
  439228:	str	x1, [x19, #16]
  43922c:	b	4390e4 <_obstack_memory_used@@Base+0x1464>
  439230:	cmp	w24, #0x6
  439234:	cset	w3, eq  // eq = none
  439238:	b	4391dc <_obstack_memory_used@@Base+0x155c>
  43923c:	stp	x29, x30, [sp, #-48]!
  439240:	mov	x29, sp
  439244:	stp	x19, x20, [sp, #16]
  439248:	mov	x20, x1
  43924c:	mov	w19, w2
  439250:	stp	x21, x22, [sp, #32]
  439254:	lsl	x22, x1, #4
  439258:	mov	x21, x0
  43925c:	ldr	x1, [x0]
  439260:	add	x1, x1, x20, lsl #4
  439264:	ldp	x1, x2, [x1]
  439268:	bl	439094 <_obstack_memory_used@@Base+0x1414>
  43926c:	cmn	x0, #0x1
  439270:	b.eq	4392b8 <_obstack_memory_used@@Base+0x1638>  // b.none
  439274:	ldr	x2, [x21]
  439278:	and	w3, w19, #0x3ff
  43927c:	add	x4, x2, x0, lsl #4
  439280:	add	x2, x2, x22
  439284:	ldr	w1, [x4, #8]
  439288:	bfi	w1, w3, #8, #10
  43928c:	str	w1, [x4, #8]
  439290:	and	w1, w1, #0xfff800ff
  439294:	ldr	w2, [x2, #8]
  439298:	ubfx	x2, x2, #8, #10
  43929c:	orr	w2, w2, w3
  4392a0:	lsl	w2, w2, #8
  4392a4:	orr	w2, w2, #0x40000
  4392a8:	orr	w2, w2, w1
  4392ac:	ldr	x1, [x21, #32]
  4392b0:	str	w2, [x4, #8]
  4392b4:	str	x20, [x1, x0, lsl #3]
  4392b8:	ldp	x19, x20, [sp, #16]
  4392bc:	ldp	x21, x22, [sp, #32]
  4392c0:	ldp	x29, x30, [sp], #48
  4392c4:	ret
  4392c8:	stp	x29, x30, [sp, #-32]!
  4392cc:	mov	x29, sp
  4392d0:	str	x19, [sp, #16]
  4392d4:	mov	x19, x0
  4392d8:	ldr	x0, [x0, #48]
  4392dc:	bl	404ae0 <free@plt>
  4392e0:	ldr	x0, [x19, #72]
  4392e4:	bl	404ae0 <free@plt>
  4392e8:	ldr	x0, [x19, #80]
  4392ec:	add	x1, x19, #0x8
  4392f0:	cmp	x0, x1
  4392f4:	b.eq	439308 <_obstack_memory_used@@Base+0x1688>  // b.none
  4392f8:	ldr	x0, [x0, #16]
  4392fc:	bl	404ae0 <free@plt>
  439300:	ldr	x0, [x19, #80]
  439304:	bl	404ae0 <free@plt>
  439308:	ldr	x0, [x19, #24]
  43930c:	bl	404ae0 <free@plt>
  439310:	ldr	x0, [x19, #96]
  439314:	bl	404ae0 <free@plt>
  439318:	ldr	x0, [x19, #88]
  43931c:	bl	404ae0 <free@plt>
  439320:	mov	x0, x19
  439324:	ldr	x19, [sp, #16]
  439328:	ldp	x29, x30, [sp], #32
  43932c:	b	404ae0 <free@plt>
  439330:	stp	x29, x30, [sp, #-32]!
  439334:	mov	x29, sp
  439338:	str	x19, [sp, #16]
  43933c:	mov	x19, x0
  439340:	ldr	x0, [x0, #16]
  439344:	bl	404ae0 <free@plt>
  439348:	ldr	x0, [x19, #24]
  43934c:	bl	404ae0 <free@plt>
  439350:	ldrb	w0, [x19, #139]
  439354:	cbz	w0, 439368 <_obstack_memory_used@@Base+0x16e8>
  439358:	ldr	x0, [x19, #8]
  43935c:	ldr	x19, [sp, #16]
  439360:	ldp	x29, x30, [sp], #32
  439364:	b	404ae0 <free@plt>
  439368:	ldr	x19, [sp, #16]
  43936c:	ldp	x29, x30, [sp], #32
  439370:	ret
  439374:	stp	x29, x30, [sp, #-64]!
  439378:	mov	x29, sp
  43937c:	stp	x19, x20, [sp, #16]
  439380:	mov	x19, x0
  439384:	ldr	x0, [x0]
  439388:	stp	x21, x22, [sp, #32]
  43938c:	str	x23, [sp, #48]
  439390:	cbnz	x0, 439434 <_obstack_memory_used@@Base+0x17b4>
  439394:	ldr	x0, [x19, #24]
  439398:	mov	x20, #0x0                   	// #0
  43939c:	mov	x21, #0x18                  	// #24
  4393a0:	bl	404ae0 <free@plt>
  4393a4:	ldr	x0, [x19, #16]
  4393a8:	cmp	x0, x20
  4393ac:	b.hi	43943c <_obstack_memory_used@@Base+0x17bc>  // b.pmore
  4393b0:	ldr	x0, [x19, #40]
  4393b4:	bl	404ae0 <free@plt>
  4393b8:	ldr	x0, [x19, #48]
  4393bc:	bl	404ae0 <free@plt>
  4393c0:	ldr	x0, [x19, #56]
  4393c4:	bl	404ae0 <free@plt>
  4393c8:	ldr	x0, [x19]
  4393cc:	bl	404ae0 <free@plt>
  4393d0:	ldr	x0, [x19, #64]
  4393d4:	cbnz	x0, 4394c4 <_obstack_memory_used@@Base+0x1844>
  4393d8:	ldr	x0, [x19, #64]
  4393dc:	bl	404ae0 <free@plt>
  4393e0:	ldr	x0, [x19, #120]
  4393e4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4393e8:	add	x1, x1, #0xab0
  4393ec:	cmp	x0, x1
  4393f0:	b.ne	4394d0 <_obstack_memory_used@@Base+0x1850>  // b.any
  4393f4:	ldr	x0, [x19, #224]
  4393f8:	bl	404ae0 <free@plt>
  4393fc:	mov	x0, x19
  439400:	ldp	x19, x20, [sp, #16]
  439404:	ldp	x21, x22, [sp, #32]
  439408:	ldr	x23, [sp, #48]
  43940c:	ldp	x29, x30, [sp], #64
  439410:	b	404ae0 <free@plt>
  439414:	ldr	x0, [x19]
  439418:	add	x0, x0, x20, lsl #4
  43941c:	add	x20, x20, #0x1
  439420:	bl	439048 <_obstack_memory_used@@Base+0x13c8>
  439424:	ldr	x0, [x19, #16]
  439428:	cmp	x0, x20
  43942c:	b.hi	439414 <_obstack_memory_used@@Base+0x1794>  // b.pmore
  439430:	b	439394 <_obstack_memory_used@@Base+0x1714>
  439434:	mov	x20, #0x0                   	// #0
  439438:	b	439424 <_obstack_memory_used@@Base+0x17a4>
  43943c:	ldr	x0, [x19, #48]
  439440:	cbz	x0, 439450 <_obstack_memory_used@@Base+0x17d0>
  439444:	madd	x0, x20, x21, x0
  439448:	ldr	x0, [x0, #16]
  43944c:	bl	404ae0 <free@plt>
  439450:	ldr	x0, [x19, #56]
  439454:	cbz	x0, 439464 <_obstack_memory_used@@Base+0x17e4>
  439458:	madd	x0, x20, x21, x0
  43945c:	ldr	x0, [x0, #16]
  439460:	bl	404ae0 <free@plt>
  439464:	ldr	x0, [x19, #40]
  439468:	cbz	x0, 439478 <_obstack_memory_used@@Base+0x17f8>
  43946c:	madd	x0, x20, x21, x0
  439470:	ldr	x0, [x0, #16]
  439474:	bl	404ae0 <free@plt>
  439478:	add	x20, x20, #0x1
  43947c:	b	4393a4 <_obstack_memory_used@@Base+0x1724>
  439480:	madd	x21, x20, x23, x21
  439484:	mov	x22, #0x0                   	// #0
  439488:	ldr	x1, [x21]
  43948c:	ldr	x0, [x21, #16]
  439490:	cmp	x1, x22
  439494:	b.gt	4394b4 <_obstack_memory_used@@Base+0x1834>
  439498:	add	x20, x20, #0x1
  43949c:	bl	404ae0 <free@plt>
  4394a0:	ldr	x0, [x19, #136]
  4394a4:	ldr	x21, [x19, #64]
  4394a8:	cmp	x20, x0
  4394ac:	b.ls	439480 <_obstack_memory_used@@Base+0x1800>  // b.plast
  4394b0:	b	4393d8 <_obstack_memory_used@@Base+0x1758>
  4394b4:	ldr	x0, [x0, x22, lsl #3]
  4394b8:	add	x22, x22, #0x1
  4394bc:	bl	4392c8 <_obstack_memory_used@@Base+0x1648>
  4394c0:	b	439488 <_obstack_memory_used@@Base+0x1808>
  4394c4:	mov	x20, #0x0                   	// #0
  4394c8:	mov	x23, #0x18                  	// #24
  4394cc:	b	4394a0 <_obstack_memory_used@@Base+0x1820>
  4394d0:	bl	404ae0 <free@plt>
  4394d4:	b	4393f4 <_obstack_memory_used@@Base+0x1774>
  4394d8:	stp	x29, x30, [sp, #-64]!
  4394dc:	mov	x29, sp
  4394e0:	stp	x19, x20, [sp, #16]
  4394e4:	mov	x19, x0
  4394e8:	stp	x21, x22, [sp, #32]
  4394ec:	mov	x21, #0x0                   	// #0
  4394f0:	str	x23, [sp, #48]
  4394f4:	ldr	x0, [x19, #232]
  4394f8:	cmp	x0, x21
  4394fc:	b.gt	43951c <_obstack_memory_used@@Base+0x189c>
  439500:	ldp	x21, x22, [sp, #32]
  439504:	ldr	x23, [sp, #48]
  439508:	str	xzr, [x19, #200]
  43950c:	str	xzr, [x19, #232]
  439510:	ldp	x19, x20, [sp, #16]
  439514:	ldp	x29, x30, [sp], #64
  439518:	ret
  43951c:	ldr	x0, [x19, #248]
  439520:	mov	x22, #0x0                   	// #0
  439524:	ldr	x20, [x0, x21, lsl #3]
  439528:	ldp	x1, x0, [x20, #32]
  43952c:	cmp	x1, x22
  439530:	b.gt	439560 <_obstack_memory_used@@Base+0x18e0>
  439534:	bl	404ae0 <free@plt>
  439538:	ldr	x0, [x20, #16]
  43953c:	cbz	x0, 439550 <_obstack_memory_used@@Base+0x18d0>
  439540:	ldr	x0, [x0, #16]
  439544:	bl	404ae0 <free@plt>
  439548:	ldr	x0, [x20, #16]
  43954c:	bl	404ae0 <free@plt>
  439550:	mov	x0, x20
  439554:	add	x21, x21, #0x1
  439558:	bl	404ae0 <free@plt>
  43955c:	b	4394f4 <_obstack_memory_used@@Base+0x1874>
  439560:	ldr	x23, [x0, x22, lsl #3]
  439564:	add	x22, x22, #0x1
  439568:	ldr	x0, [x23, #32]
  43956c:	bl	404ae0 <free@plt>
  439570:	mov	x0, x23
  439574:	bl	404ae0 <free@plt>
  439578:	b	439528 <_obstack_memory_used@@Base+0x18a8>
  43957c:	stp	x29, x30, [sp, #-48]!
  439580:	mov	x2, x1
  439584:	mov	x29, sp
  439588:	ldrb	w4, [x1, #48]
  43958c:	stp	x19, x20, [sp, #16]
  439590:	sub	w5, w4, #0x2
  439594:	stp	x21, x22, [sp, #32]
  439598:	cmp	w5, #0xe
  43959c:	ldr	x3, [x1, #56]
  4395a0:	b.hi	439728 <_obstack_memory_used@@Base+0x1aa8>  // b.pmore
  4395a4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4395a8:	add	x1, x1, #0x9f0
  4395ac:	ldrb	w1, [x1, w5, uxtw]
  4395b0:	adr	x5, 4395bc <_obstack_memory_used@@Base+0x193c>
  4395b4:	add	x1, x5, w1, sxtb #2
  4395b8:	br	x1
  4395bc:	ldr	x0, [x2, #32]
  4395c0:	cbnz	x0, 4395d8 <_obstack_memory_used@@Base+0x1958>
  4395c4:	mov	w0, #0x0                   	// #0
  4395c8:	ldp	x19, x20, [sp, #16]
  4395cc:	ldp	x21, x22, [sp, #32]
  4395d0:	ldp	x29, x30, [sp], #48
  4395d4:	ret
  4395d8:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  4395dc:	add	x3, x3, #0xab0
  4395e0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4395e4:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  4395e8:	add	x3, x3, #0x20
  4395ec:	add	x1, x1, #0x8e2
  4395f0:	add	x0, x0, #0x8ec
  4395f4:	mov	w2, #0x59f                 	// #1439
  4395f8:	bl	404e00 <__assert_fail@plt>
  4395fc:	ldrb	w1, [x0, #176]
  439600:	orr	w1, w1, #0x1
  439604:	strb	w1, [x0, #176]
  439608:	ldr	x1, [x2, #8]
  43960c:	cbz	x1, 439650 <_obstack_memory_used@@Base+0x19d0>
  439610:	ldr	x1, [x1, #24]
  439614:	ldr	x19, [x1, #56]
  439618:	ldr	x1, [x2, #16]
  43961c:	cbz	x1, 439658 <_obstack_memory_used@@Base+0x19d8>
  439620:	ldr	x1, [x1, #24]
  439624:	ldr	x20, [x1, #56]
  439628:	tbz	x19, #63, 439660 <_obstack_memory_used@@Base+0x19e0>
  43962c:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  439630:	add	x3, x3, #0xab0
  439634:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439638:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  43963c:	add	x3, x3, #0x20
  439640:	add	x1, x1, #0x8e2
  439644:	add	x0, x0, #0x8ff
  439648:	mov	w2, #0x5af                 	// #1455
  43964c:	b	4395f8 <_obstack_memory_used@@Base+0x1978>
  439650:	ldr	x1, [x2, #32]
  439654:	b	439614 <_obstack_memory_used@@Base+0x1994>
  439658:	ldr	x1, [x2, #32]
  43965c:	b	439624 <_obstack_memory_used@@Base+0x19a4>
  439660:	tbz	x20, #63, 439688 <_obstack_memory_used@@Base+0x1a08>
  439664:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  439668:	add	x3, x3, #0xab0
  43966c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439670:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  439674:	add	x3, x3, #0x20
  439678:	add	x1, x1, #0x8e2
  43967c:	add	x0, x0, #0x909
  439680:	mov	w2, #0x5b0                 	// #1456
  439684:	b	4395f8 <_obstack_memory_used@@Base+0x1978>
  439688:	mov	x1, #0x18                  	// #24
  43968c:	mov	x22, #0x2                   	// #2
  439690:	ldr	x0, [x0, #40]
  439694:	mul	x3, x3, x1
  439698:	add	x21, x0, x3
  43969c:	str	x22, [x0, x3]
  4396a0:	mov	x0, #0x10                  	// #16
  4396a4:	bl	4045f0 <malloc@plt>
  4396a8:	str	x0, [x21, #16]
  4396ac:	cbz	x0, 439764 <_obstack_memory_used@@Base+0x1ae4>
  4396b0:	cmp	x19, x20
  4396b4:	b.ne	4396c8 <_obstack_memory_used@@Base+0x1a48>  // b.any
  4396b8:	mov	x1, #0x1                   	// #1
  4396bc:	str	x1, [x21, #8]
  4396c0:	str	x19, [x0]
  4396c4:	b	4395c4 <_obstack_memory_used@@Base+0x1944>
  4396c8:	str	x22, [x21, #8]
  4396cc:	b.ge	4396d8 <_obstack_memory_used@@Base+0x1a58>  // b.tcont
  4396d0:	stp	x19, x20, [x0]
  4396d4:	b	4395c4 <_obstack_memory_used@@Base+0x1944>
  4396d8:	stp	x20, x19, [x0]
  4396dc:	b	4395c4 <_obstack_memory_used@@Base+0x1944>
  4396e0:	ldr	x1, [x2, #32]
  4396e4:	ldr	x0, [x0, #40]
  4396e8:	ldr	x1, [x1, #56]
  4396ec:	mov	x2, #0x18                  	// #24
  4396f0:	ldp	x19, x20, [sp, #16]
  4396f4:	madd	x0, x3, x2, x0
  4396f8:	ldp	x21, x22, [sp, #32]
  4396fc:	ldp	x29, x30, [sp], #48
  439700:	b	438638 <_obstack_memory_used@@Base+0x9b8>
  439704:	ldr	x1, [x2, #32]
  439708:	ldr	x4, [x0, #24]
  43970c:	ldr	x1, [x1, #56]
  439710:	str	x1, [x4, x3, lsl #3]
  439714:	ldrb	w2, [x2, #48]
  439718:	cmp	w2, #0x4
  43971c:	b.ne	4395c4 <_obstack_memory_used@@Base+0x1944>  // b.any
  439720:	ldr	x0, [x0, #40]
  439724:	b	4396ec <_obstack_memory_used@@Base+0x1a6c>
  439728:	tbz	w4, #3, 439750 <_obstack_memory_used@@Base+0x1ad0>
  43972c:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  439730:	add	x3, x3, #0xab0
  439734:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439738:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  43973c:	add	x3, x3, #0x20
  439740:	add	x1, x1, #0x8e2
  439744:	add	x0, x0, #0x914
  439748:	mov	w2, #0x5c2                 	// #1474
  43974c:	b	4395f8 <_obstack_memory_used@@Base+0x1978>
  439750:	ldr	x1, [x2, #32]
  439754:	ldr	x0, [x0, #24]
  439758:	ldr	x1, [x1, #56]
  43975c:	str	x1, [x0, x3, lsl #3]
  439760:	b	4395c4 <_obstack_memory_used@@Base+0x1944>
  439764:	mov	w0, #0xc                   	// #12
  439768:	b	4395c8 <_obstack_memory_used@@Base+0x1948>
  43976c:	stp	x29, x30, [sp, #-64]!
  439770:	mov	x29, sp
  439774:	stp	x19, x20, [sp, #16]
  439778:	mov	x20, x0
  43977c:	mov	x19, x1
  439780:	stp	x21, x22, [sp, #32]
  439784:	mov	x22, x2
  439788:	mov	x21, x4
  43978c:	stp	x23, x24, [sp, #48]
  439790:	mov	x24, x3
  439794:	tbz	w5, #22, 4397c8 <_obstack_memory_used@@Base+0x1b48>
  439798:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  43979c:	mov	x0, x4
  4397a0:	add	x1, x1, #0x93e
  4397a4:	bl	404a30 <strcmp@plt>
  4397a8:	cbz	w0, 4397c0 <_obstack_memory_used@@Base+0x1b40>
  4397ac:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4397b0:	mov	x0, x21
  4397b4:	add	x1, x1, #0x944
  4397b8:	bl	404a30 <strcmp@plt>
  4397bc:	cbnz	w0, 4397c8 <_obstack_memory_used@@Base+0x1b48>
  4397c0:	adrp	x21, 450000 <_obstack_memory_used@@Base+0x18380>
  4397c4:	add	x21, x21, #0x938
  4397c8:	ldr	x23, [x24]
  4397cc:	ldr	x0, [x22, #72]
  4397d0:	cmp	x23, x0
  4397d4:	b.ne	4397f8 <_obstack_memory_used@@Base+0x1b78>  // b.any
  4397d8:	ldr	x0, [x22, #24]
  4397dc:	lsl	x23, x23, #1
  4397e0:	add	x23, x23, #0x1
  4397e4:	lsl	x1, x23, #3
  4397e8:	bl	404820 <realloc@plt>
  4397ec:	cbz	x0, 439d9c <_obstack_memory_used@@Base+0x211c>
  4397f0:	str	x0, [x22, #24]
  4397f4:	str	x23, [x24]
  4397f8:	ldr	x0, [x22, #72]
  4397fc:	ldr	x23, [x22, #24]
  439800:	add	x1, x0, #0x1
  439804:	str	x1, [x22, #72]
  439808:	lsl	x22, x0, #3
  43980c:	mov	x0, x21
  439810:	bl	404340 <wctype@plt>
  439814:	str	x0, [x23, x22]
  439818:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  43981c:	mov	x0, x21
  439820:	add	x1, x1, #0x94a
  439824:	bl	404a30 <strcmp@plt>
  439828:	cbnz	w0, 4398a0 <_obstack_memory_used@@Base+0x1c20>
  43982c:	bl	404a60 <__ctype_b_loc@plt>
  439830:	mov	x5, x0
  439834:	mov	x4, #0x0                   	// #0
  439838:	cbz	x20, 439878 <_obstack_memory_used@@Base+0x1bf8>
  43983c:	ldr	x0, [x5]
  439840:	ldrh	w0, [x0, x4, lsl #1]
  439844:	tbz	w0, #3, 439854 <_obstack_memory_used@@Base+0x1bd4>
  439848:	ldrb	w1, [x20, x4]
  43984c:	mov	x0, x19
  439850:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439854:	add	x4, x4, #0x1
  439858:	cmp	x4, #0x100
  43985c:	b.ne	43983c <_obstack_memory_used@@Base+0x1bbc>  // b.any
  439860:	mov	w0, #0x0                   	// #0
  439864:	ldp	x19, x20, [sp, #16]
  439868:	ldp	x21, x22, [sp, #32]
  43986c:	ldp	x23, x24, [sp, #48]
  439870:	ldp	x29, x30, [sp], #64
  439874:	ret
  439878:	ldr	x0, [x5]
  43987c:	ldrh	w0, [x0, x4, lsl #1]
  439880:	tbz	w0, #3, 439890 <_obstack_memory_used@@Base+0x1c10>
  439884:	mov	x1, x4
  439888:	mov	x0, x19
  43988c:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439890:	add	x4, x4, #0x1
  439894:	cmp	x4, #0x100
  439898:	b.ne	439878 <_obstack_memory_used@@Base+0x1bf8>  // b.any
  43989c:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  4398a0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4398a4:	mov	x0, x21
  4398a8:	add	x1, x1, #0x950
  4398ac:	bl	404a30 <strcmp@plt>
  4398b0:	cbnz	w0, 439914 <_obstack_memory_used@@Base+0x1c94>
  4398b4:	bl	404a60 <__ctype_b_loc@plt>
  4398b8:	mov	x5, x0
  4398bc:	mov	x4, #0x0                   	// #0
  4398c0:	cbz	x20, 4398ec <_obstack_memory_used@@Base+0x1c6c>
  4398c4:	ldr	x0, [x5]
  4398c8:	ldrh	w0, [x0, x4, lsl #1]
  4398cc:	tbz	w0, #1, 4398dc <_obstack_memory_used@@Base+0x1c5c>
  4398d0:	ldrb	w1, [x20, x4]
  4398d4:	mov	x0, x19
  4398d8:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  4398dc:	add	x4, x4, #0x1
  4398e0:	cmp	x4, #0x100
  4398e4:	b.ne	4398c4 <_obstack_memory_used@@Base+0x1c44>  // b.any
  4398e8:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  4398ec:	ldr	x0, [x5]
  4398f0:	ldrh	w0, [x0, x4, lsl #1]
  4398f4:	tbz	w0, #1, 439904 <_obstack_memory_used@@Base+0x1c84>
  4398f8:	mov	x1, x4
  4398fc:	mov	x0, x19
  439900:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439904:	add	x4, x4, #0x1
  439908:	cmp	x4, #0x100
  43990c:	b.ne	4398ec <_obstack_memory_used@@Base+0x1c6c>  // b.any
  439910:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439914:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439918:	mov	x0, x21
  43991c:	add	x1, x1, #0x944
  439920:	bl	404a30 <strcmp@plt>
  439924:	cbnz	w0, 439988 <_obstack_memory_used@@Base+0x1d08>
  439928:	bl	404a60 <__ctype_b_loc@plt>
  43992c:	mov	x5, x0
  439930:	mov	x4, #0x0                   	// #0
  439934:	cbz	x20, 439960 <_obstack_memory_used@@Base+0x1ce0>
  439938:	ldr	x0, [x5]
  43993c:	ldrh	w0, [x0, x4, lsl #1]
  439940:	tbz	w0, #9, 439950 <_obstack_memory_used@@Base+0x1cd0>
  439944:	ldrb	w1, [x20, x4]
  439948:	mov	x0, x19
  43994c:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439950:	add	x4, x4, #0x1
  439954:	cmp	x4, #0x100
  439958:	b.ne	439938 <_obstack_memory_used@@Base+0x1cb8>  // b.any
  43995c:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439960:	ldr	x0, [x5]
  439964:	ldrh	w0, [x0, x4, lsl #1]
  439968:	tbz	w0, #9, 439978 <_obstack_memory_used@@Base+0x1cf8>
  43996c:	mov	x1, x4
  439970:	mov	x0, x19
  439974:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439978:	add	x4, x4, #0x1
  43997c:	cmp	x4, #0x100
  439980:	b.ne	439960 <_obstack_memory_used@@Base+0x1ce0>  // b.any
  439984:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439988:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  43998c:	mov	x0, x21
  439990:	add	x1, x1, #0x956
  439994:	bl	404a30 <strcmp@plt>
  439998:	cbnz	w0, 4399fc <_obstack_memory_used@@Base+0x1d7c>
  43999c:	bl	404a60 <__ctype_b_loc@plt>
  4399a0:	mov	x5, x0
  4399a4:	mov	x4, #0x0                   	// #0
  4399a8:	cbz	x20, 4399d4 <_obstack_memory_used@@Base+0x1d54>
  4399ac:	ldr	x0, [x5]
  4399b0:	ldrh	w0, [x0, x4, lsl #1]
  4399b4:	tbz	w0, #13, 4399c4 <_obstack_memory_used@@Base+0x1d44>
  4399b8:	ldrb	w1, [x20, x4]
  4399bc:	mov	x0, x19
  4399c0:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  4399c4:	add	x4, x4, #0x1
  4399c8:	cmp	x4, #0x100
  4399cc:	b.ne	4399ac <_obstack_memory_used@@Base+0x1d2c>  // b.any
  4399d0:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  4399d4:	ldr	x0, [x5]
  4399d8:	ldrh	w0, [x0, x4, lsl #1]
  4399dc:	tbz	w0, #13, 4399ec <_obstack_memory_used@@Base+0x1d6c>
  4399e0:	mov	x1, x4
  4399e4:	mov	x0, x19
  4399e8:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  4399ec:	add	x4, x4, #0x1
  4399f0:	cmp	x4, #0x100
  4399f4:	b.ne	4399d4 <_obstack_memory_used@@Base+0x1d54>  // b.any
  4399f8:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  4399fc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439a00:	mov	x0, x21
  439a04:	add	x1, x1, #0x938
  439a08:	bl	404a30 <strcmp@plt>
  439a0c:	cbnz	w0, 439a70 <_obstack_memory_used@@Base+0x1df0>
  439a10:	bl	404a60 <__ctype_b_loc@plt>
  439a14:	mov	x5, x0
  439a18:	mov	x4, #0x0                   	// #0
  439a1c:	cbz	x20, 439a48 <_obstack_memory_used@@Base+0x1dc8>
  439a20:	ldr	x0, [x5]
  439a24:	ldrh	w0, [x0, x4, lsl #1]
  439a28:	tbz	w0, #10, 439a38 <_obstack_memory_used@@Base+0x1db8>
  439a2c:	ldrb	w1, [x20, x4]
  439a30:	mov	x0, x19
  439a34:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439a38:	add	x4, x4, #0x1
  439a3c:	cmp	x4, #0x100
  439a40:	b.ne	439a20 <_obstack_memory_used@@Base+0x1da0>  // b.any
  439a44:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439a48:	ldr	x0, [x5]
  439a4c:	ldrh	w0, [x0, x4, lsl #1]
  439a50:	tbz	w0, #10, 439a60 <_obstack_memory_used@@Base+0x1de0>
  439a54:	mov	x1, x4
  439a58:	mov	x0, x19
  439a5c:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439a60:	add	x4, x4, #0x1
  439a64:	cmp	x4, #0x100
  439a68:	b.ne	439a48 <_obstack_memory_used@@Base+0x1dc8>  // b.any
  439a6c:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439a70:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439a74:	mov	x0, x21
  439a78:	add	x1, x1, #0x975
  439a7c:	bl	404a30 <strcmp@plt>
  439a80:	cbnz	w0, 439ae4 <_obstack_memory_used@@Base+0x1e64>
  439a84:	bl	404a60 <__ctype_b_loc@plt>
  439a88:	mov	x5, x0
  439a8c:	mov	x4, #0x0                   	// #0
  439a90:	cbz	x20, 439abc <_obstack_memory_used@@Base+0x1e3c>
  439a94:	ldr	x0, [x5]
  439a98:	ldrh	w0, [x0, x4, lsl #1]
  439a9c:	tbz	w0, #11, 439aac <_obstack_memory_used@@Base+0x1e2c>
  439aa0:	ldrb	w1, [x20, x4]
  439aa4:	mov	x0, x19
  439aa8:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439aac:	add	x4, x4, #0x1
  439ab0:	cmp	x4, #0x100
  439ab4:	b.ne	439a94 <_obstack_memory_used@@Base+0x1e14>  // b.any
  439ab8:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439abc:	ldr	x0, [x5]
  439ac0:	ldrh	w0, [x0, x4, lsl #1]
  439ac4:	tbz	w0, #11, 439ad4 <_obstack_memory_used@@Base+0x1e54>
  439ac8:	mov	x1, x4
  439acc:	mov	x0, x19
  439ad0:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439ad4:	add	x4, x4, #0x1
  439ad8:	cmp	x4, #0x100
  439adc:	b.ne	439abc <_obstack_memory_used@@Base+0x1e3c>  // b.any
  439ae0:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439ae4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439ae8:	mov	x0, x21
  439aec:	add	x1, x1, #0x95c
  439af0:	bl	404a30 <strcmp@plt>
  439af4:	cbnz	w0, 439b58 <_obstack_memory_used@@Base+0x1ed8>
  439af8:	bl	404a60 <__ctype_b_loc@plt>
  439afc:	mov	x5, x0
  439b00:	mov	x4, #0x0                   	// #0
  439b04:	cbz	x20, 439b30 <_obstack_memory_used@@Base+0x1eb0>
  439b08:	ldr	x0, [x5]
  439b0c:	ldrh	w0, [x0, x4, lsl #1]
  439b10:	tbz	w0, #14, 439b20 <_obstack_memory_used@@Base+0x1ea0>
  439b14:	ldrb	w1, [x20, x4]
  439b18:	mov	x0, x19
  439b1c:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439b20:	add	x4, x4, #0x1
  439b24:	cmp	x4, #0x100
  439b28:	b.ne	439b08 <_obstack_memory_used@@Base+0x1e88>  // b.any
  439b2c:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439b30:	ldr	x0, [x5]
  439b34:	ldrh	w0, [x0, x4, lsl #1]
  439b38:	tbz	w0, #14, 439b48 <_obstack_memory_used@@Base+0x1ec8>
  439b3c:	mov	x1, x4
  439b40:	mov	x0, x19
  439b44:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439b48:	add	x4, x4, #0x1
  439b4c:	cmp	x4, #0x100
  439b50:	b.ne	439b30 <_obstack_memory_used@@Base+0x1eb0>  // b.any
  439b54:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439b58:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439b5c:	mov	x0, x21
  439b60:	add	x1, x1, #0x93e
  439b64:	bl	404a30 <strcmp@plt>
  439b68:	cbnz	w0, 439bcc <_obstack_memory_used@@Base+0x1f4c>
  439b6c:	bl	404a60 <__ctype_b_loc@plt>
  439b70:	mov	x5, x0
  439b74:	mov	x4, #0x0                   	// #0
  439b78:	cbz	x20, 439ba4 <_obstack_memory_used@@Base+0x1f24>
  439b7c:	ldr	x0, [x5]
  439b80:	ldrh	w0, [x0, x4, lsl #1]
  439b84:	tbz	w0, #8, 439b94 <_obstack_memory_used@@Base+0x1f14>
  439b88:	ldrb	w1, [x20, x4]
  439b8c:	mov	x0, x19
  439b90:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439b94:	add	x4, x4, #0x1
  439b98:	cmp	x4, #0x100
  439b9c:	b.ne	439b7c <_obstack_memory_used@@Base+0x1efc>  // b.any
  439ba0:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439ba4:	ldr	x0, [x5]
  439ba8:	ldrh	w0, [x0, x4, lsl #1]
  439bac:	tbz	w0, #8, 439bbc <_obstack_memory_used@@Base+0x1f3c>
  439bb0:	mov	x1, x4
  439bb4:	mov	x0, x19
  439bb8:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439bbc:	add	x4, x4, #0x1
  439bc0:	cmp	x4, #0x100
  439bc4:	b.ne	439ba4 <_obstack_memory_used@@Base+0x1f24>  // b.any
  439bc8:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439bcc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439bd0:	mov	x0, x21
  439bd4:	add	x1, x1, #0x962
  439bd8:	bl	404a30 <strcmp@plt>
  439bdc:	cbnz	w0, 439c40 <_obstack_memory_used@@Base+0x1fc0>
  439be0:	bl	404a60 <__ctype_b_loc@plt>
  439be4:	mov	x5, x0
  439be8:	mov	x4, #0x0                   	// #0
  439bec:	cbz	x20, 439c18 <_obstack_memory_used@@Base+0x1f98>
  439bf0:	ldr	x0, [x5]
  439bf4:	ldrh	w0, [x0, x4, lsl #1]
  439bf8:	tbz	w0, #0, 439c08 <_obstack_memory_used@@Base+0x1f88>
  439bfc:	ldrb	w1, [x20, x4]
  439c00:	mov	x0, x19
  439c04:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439c08:	add	x4, x4, #0x1
  439c0c:	cmp	x4, #0x100
  439c10:	b.ne	439bf0 <_obstack_memory_used@@Base+0x1f70>  // b.any
  439c14:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439c18:	ldr	x0, [x5]
  439c1c:	ldrh	w0, [x0, x4, lsl #1]
  439c20:	tbz	w0, #0, 439c30 <_obstack_memory_used@@Base+0x1fb0>
  439c24:	mov	x1, x4
  439c28:	mov	x0, x19
  439c2c:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439c30:	add	x4, x4, #0x1
  439c34:	cmp	x4, #0x100
  439c38:	b.ne	439c18 <_obstack_memory_used@@Base+0x1f98>  // b.any
  439c3c:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439c40:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439c44:	mov	x0, x21
  439c48:	add	x1, x1, #0x968
  439c4c:	bl	404a30 <strcmp@plt>
  439c50:	cbnz	w0, 439cb4 <_obstack_memory_used@@Base+0x2034>
  439c54:	bl	404a60 <__ctype_b_loc@plt>
  439c58:	mov	x5, x0
  439c5c:	mov	x4, #0x0                   	// #0
  439c60:	cbz	x20, 439c8c <_obstack_memory_used@@Base+0x200c>
  439c64:	ldr	x0, [x5]
  439c68:	ldrsh	w0, [x0, x4, lsl #1]
  439c6c:	tbz	w0, #31, 439c7c <_obstack_memory_used@@Base+0x1ffc>
  439c70:	ldrb	w1, [x20, x4]
  439c74:	mov	x0, x19
  439c78:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439c7c:	add	x4, x4, #0x1
  439c80:	cmp	x4, #0x100
  439c84:	b.ne	439c64 <_obstack_memory_used@@Base+0x1fe4>  // b.any
  439c88:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439c8c:	ldr	x0, [x5]
  439c90:	ldrsh	w0, [x0, x4, lsl #1]
  439c94:	tbz	w0, #31, 439ca4 <_obstack_memory_used@@Base+0x2024>
  439c98:	mov	x1, x4
  439c9c:	mov	x0, x19
  439ca0:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439ca4:	add	x4, x4, #0x1
  439ca8:	cmp	x4, #0x100
  439cac:	b.ne	439c8c <_obstack_memory_used@@Base+0x200c>  // b.any
  439cb0:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439cb4:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439cb8:	mov	x0, x21
  439cbc:	add	x1, x1, #0x96e
  439cc0:	bl	404a30 <strcmp@plt>
  439cc4:	cbnz	w0, 439d28 <_obstack_memory_used@@Base+0x20a8>
  439cc8:	bl	404a60 <__ctype_b_loc@plt>
  439ccc:	mov	x5, x0
  439cd0:	mov	x4, #0x0                   	// #0
  439cd4:	cbz	x20, 439d00 <_obstack_memory_used@@Base+0x2080>
  439cd8:	ldr	x0, [x5]
  439cdc:	ldrh	w0, [x0, x4, lsl #1]
  439ce0:	tbz	w0, #2, 439cf0 <_obstack_memory_used@@Base+0x2070>
  439ce4:	ldrb	w1, [x20, x4]
  439ce8:	mov	x0, x19
  439cec:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439cf0:	add	x4, x4, #0x1
  439cf4:	cmp	x4, #0x100
  439cf8:	b.ne	439cd8 <_obstack_memory_used@@Base+0x2058>  // b.any
  439cfc:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439d00:	ldr	x0, [x5]
  439d04:	ldrh	w0, [x0, x4, lsl #1]
  439d08:	tbz	w0, #2, 439d18 <_obstack_memory_used@@Base+0x2098>
  439d0c:	mov	x1, x4
  439d10:	mov	x0, x19
  439d14:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439d18:	add	x4, x4, #0x1
  439d1c:	cmp	x4, #0x100
  439d20:	b.ne	439d00 <_obstack_memory_used@@Base+0x2080>  // b.any
  439d24:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439d28:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  439d2c:	mov	x0, x21
  439d30:	add	x1, x1, #0x974
  439d34:	bl	404a30 <strcmp@plt>
  439d38:	cbnz	w0, 439da4 <_obstack_memory_used@@Base+0x2124>
  439d3c:	bl	404a60 <__ctype_b_loc@plt>
  439d40:	mov	x5, x0
  439d44:	mov	x4, #0x0                   	// #0
  439d48:	cbz	x20, 439d74 <_obstack_memory_used@@Base+0x20f4>
  439d4c:	ldr	x0, [x5]
  439d50:	ldrh	w0, [x0, x4, lsl #1]
  439d54:	tbz	w0, #12, 439d64 <_obstack_memory_used@@Base+0x20e4>
  439d58:	ldrb	w1, [x20, x4]
  439d5c:	mov	x0, x19
  439d60:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439d64:	add	x4, x4, #0x1
  439d68:	cmp	x4, #0x100
  439d6c:	b.ne	439d4c <_obstack_memory_used@@Base+0x20cc>  // b.any
  439d70:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439d74:	ldr	x0, [x5]
  439d78:	ldrh	w0, [x0, x4, lsl #1]
  439d7c:	tbz	w0, #12, 439d8c <_obstack_memory_used@@Base+0x210c>
  439d80:	mov	x1, x4
  439d84:	mov	x0, x19
  439d88:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  439d8c:	add	x4, x4, #0x1
  439d90:	cmp	x4, #0x100
  439d94:	b.ne	439d74 <_obstack_memory_used@@Base+0x20f4>  // b.any
  439d98:	b	439860 <_obstack_memory_used@@Base+0x1be0>
  439d9c:	mov	w0, #0xc                   	// #12
  439da0:	b	439864 <_obstack_memory_used@@Base+0x1be4>
  439da4:	mov	w0, #0x4                   	// #4
  439da8:	b	439864 <_obstack_memory_used@@Base+0x1be4>
  439dac:	mov	x3, x0
  439db0:	ldr	w0, [x0, #144]
  439db4:	cmp	w0, #0x1
  439db8:	b.eq	439de4 <_obstack_memory_used@@Base+0x2164>  // b.none
  439dbc:	ldr	x4, [x3, #48]
  439dc0:	add	x2, x1, #0x1
  439dc4:	sub	w0, w2, w1
  439dc8:	cmp	x4, x2
  439dcc:	b.le	439de4 <_obstack_memory_used@@Base+0x2164>
  439dd0:	ldr	x5, [x3, #16]
  439dd4:	ldr	w5, [x5, x2, lsl #2]
  439dd8:	add	x2, x2, #0x1
  439ddc:	cmn	w5, #0x1
  439de0:	b.eq	439dc4 <_obstack_memory_used@@Base+0x2144>  // b.none
  439de4:	ret
  439de8:	mov	x7, x0
  439dec:	stp	x29, x30, [sp, #-48]!
  439df0:	mov	x0, x1
  439df4:	mov	x29, sp
  439df8:	ldr	x9, [x7]
  439dfc:	lsl	x10, x0, #4
  439e00:	stp	x19, x20, [sp, #16]
  439e04:	mov	x6, x2
  439e08:	mov	x1, x3
  439e0c:	add	x0, x9, x0, lsl #4
  439e10:	stp	x21, x22, [sp, #32]
  439e14:	ldrb	w8, [x0, #8]
  439e18:	cmp	w8, #0x7
  439e1c:	b.ne	439f2c <_obstack_memory_used@@Base+0x22ac>  // b.any
  439e20:	ldr	x0, [x2, #8]
  439e24:	add	x4, x0, x3
  439e28:	ldrb	w0, [x0, x3]
  439e2c:	cmp	w0, #0xc1
  439e30:	b.ls	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.plast
  439e34:	ldr	x5, [x6, #88]
  439e38:	add	x2, x3, #0x1
  439e3c:	cmp	x2, x5
  439e40:	b.ge	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.tcont
  439e44:	ldrb	w2, [x4, #1]
  439e48:	cmp	w0, #0xdf
  439e4c:	b.hi	439e78 <_obstack_memory_used@@Base+0x21f8>  // b.pmore
  439e50:	sub	w2, w2, #0x80
  439e54:	and	w2, w2, #0xff
  439e58:	cmp	w2, #0x3f
  439e5c:	b.hi	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.pmore
  439e60:	mov	w19, #0x2                   	// #2
  439e64:	mov	w0, w19
  439e68:	ldp	x19, x20, [sp, #16]
  439e6c:	ldp	x21, x22, [sp, #32]
  439e70:	ldp	x29, x30, [sp], #48
  439e74:	ret
  439e78:	cmp	w0, #0xef
  439e7c:	b.hi	439ecc <_obstack_memory_used@@Base+0x224c>  // b.pmore
  439e80:	cmp	w0, #0xe0
  439e84:	mov	w0, #0x9f                  	// #159
  439e88:	ccmp	w2, w0, #0x2, eq  // eq = none
  439e8c:	b.ls	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.plast
  439e90:	mov	w19, #0x3                   	// #3
  439e94:	add	x1, x1, w19, sxtw
  439e98:	sxtw	x2, w19
  439e9c:	cmp	x5, x1
  439ea0:	b.lt	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.tstop
  439ea4:	mov	x1, #0x1                   	// #1
  439ea8:	ldrb	w0, [x4, x1]
  439eac:	sub	w0, w0, #0x80
  439eb0:	and	w0, w0, #0xff
  439eb4:	cmp	w0, #0x3f
  439eb8:	b.hi	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.pmore
  439ebc:	add	x1, x1, #0x1
  439ec0:	cmp	x2, x1
  439ec4:	b.gt	439ea8 <_obstack_memory_used@@Base+0x2228>
  439ec8:	b	439e64 <_obstack_memory_used@@Base+0x21e4>
  439ecc:	cmp	w0, #0xf7
  439ed0:	b.hi	439eec <_obstack_memory_used@@Base+0x226c>  // b.pmore
  439ed4:	cmp	w0, #0xf0
  439ed8:	mov	w0, #0x8f                  	// #143
  439edc:	ccmp	w2, w0, #0x2, eq  // eq = none
  439ee0:	b.ls	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.plast
  439ee4:	mov	w19, #0x4                   	// #4
  439ee8:	b	439e94 <_obstack_memory_used@@Base+0x2214>
  439eec:	cmp	w0, #0xfb
  439ef0:	b.hi	439f0c <_obstack_memory_used@@Base+0x228c>  // b.pmore
  439ef4:	cmp	w0, #0xf8
  439ef8:	mov	w0, #0x87                  	// #135
  439efc:	ccmp	w2, w0, #0x2, eq  // eq = none
  439f00:	b.ls	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.plast
  439f04:	mov	w19, #0x5                   	// #5
  439f08:	b	439e94 <_obstack_memory_used@@Base+0x2214>
  439f0c:	cmp	w0, #0xfd
  439f10:	b.hi	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.pmore
  439f14:	cmp	w0, #0xfc
  439f18:	mov	w0, #0x83                  	// #131
  439f1c:	ccmp	w2, w0, #0x2, eq  // eq = none
  439f20:	b.ls	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.plast
  439f24:	mov	w19, #0x6                   	// #6
  439f28:	b	439e94 <_obstack_memory_used@@Base+0x2214>
  439f2c:	mov	x0, x2
  439f30:	bl	439dac <_obstack_memory_used@@Base+0x212c>
  439f34:	mov	w19, w0
  439f38:	cmp	w8, #0x5
  439f3c:	b.ne	439f78 <_obstack_memory_used@@Base+0x22f8>  // b.any
  439f40:	cmp	w0, #0x1
  439f44:	b.le	439f70 <_obstack_memory_used@@Base+0x22f0>
  439f48:	ldr	x0, [x7, #216]
  439f4c:	tbnz	w0, #6, 439f60 <_obstack_memory_used@@Base+0x22e0>
  439f50:	ldr	x2, [x6, #8]
  439f54:	ldrb	w2, [x2, x1]
  439f58:	cmp	w2, #0xa
  439f5c:	b.eq	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.none
  439f60:	tbz	w0, #7, 439e64 <_obstack_memory_used@@Base+0x21e4>
  439f64:	ldr	x0, [x6, #8]
  439f68:	ldrb	w0, [x0, x1]
  439f6c:	cbnz	w0, 439e64 <_obstack_memory_used@@Base+0x21e4>
  439f70:	mov	w19, #0x0                   	// #0
  439f74:	b	439e64 <_obstack_memory_used@@Base+0x21e4>
  439f78:	cmp	w0, #0x1
  439f7c:	b.le	439f70 <_obstack_memory_used@@Base+0x22f0>
  439f80:	cmp	w8, #0x6
  439f84:	b.ne	439f70 <_obstack_memory_used@@Base+0x22f0>  // b.any
  439f88:	ldr	x20, [x9, x10]
  439f8c:	ldr	x0, [x20, #64]
  439f90:	ldr	x3, [x20, #40]
  439f94:	cbnz	x0, 439fa4 <_obstack_memory_used@@Base+0x2324>
  439f98:	ldr	x0, [x20, #72]
  439f9c:	cbnz	x0, 439fa4 <_obstack_memory_used@@Base+0x2324>
  439fa0:	cbz	x3, 43a024 <_obstack_memory_used@@Base+0x23a4>
  439fa4:	mov	x0, x6
  439fa8:	bl	437e3c <_obstack_memory_used@@Base+0x1bc>
  439fac:	mov	w21, w0
  439fb0:	mov	x0, #0x0                   	// #0
  439fb4:	cmp	x3, x0
  439fb8:	b.gt	439ff0 <_obstack_memory_used@@Base+0x2370>
  439fbc:	mov	x22, #0x0                   	// #0
  439fc0:	ldr	x0, [x20, #72]
  439fc4:	cmp	x0, x22
  439fc8:	b.gt	43a008 <_obstack_memory_used@@Base+0x2388>
  439fcc:	ldr	x2, [x20, #64]
  439fd0:	mov	x0, #0x0                   	// #0
  439fd4:	cmp	x2, x0
  439fd8:	b.gt	43a02c <_obstack_memory_used@@Base+0x23ac>
  439fdc:	mov	w0, #0x0                   	// #0
  439fe0:	ldrb	w1, [x20, #32]
  439fe4:	tbz	w1, #0, 43a060 <_obstack_memory_used@@Base+0x23e0>
  439fe8:	cbz	w0, 439e64 <_obstack_memory_used@@Base+0x21e4>
  439fec:	b	439f70 <_obstack_memory_used@@Base+0x22f0>
  439ff0:	ldr	x1, [x20]
  439ff4:	ldr	w1, [x1, x0, lsl #2]
  439ff8:	cmp	w1, w21
  439ffc:	b.eq	43a058 <_obstack_memory_used@@Base+0x23d8>  // b.none
  43a000:	add	x0, x0, #0x1
  43a004:	b	439fb4 <_obstack_memory_used@@Base+0x2334>
  43a008:	ldr	x0, [x20, #24]
  43a00c:	ldr	x1, [x0, x22, lsl #3]
  43a010:	mov	w0, w21
  43a014:	bl	4045e0 <iswctype@plt>
  43a018:	cbnz	w0, 43a058 <_obstack_memory_used@@Base+0x23d8>
  43a01c:	add	x22, x22, #0x1
  43a020:	b	439fc0 <_obstack_memory_used@@Base+0x2340>
  43a024:	mov	w21, #0x0                   	// #0
  43a028:	b	439fcc <_obstack_memory_used@@Base+0x234c>
  43a02c:	ldr	x3, [x20, #8]
  43a030:	lsl	x1, x0, #2
  43a034:	ldr	w3, [x3, x1]
  43a038:	cmp	w21, w3
  43a03c:	b.cc	43a050 <_obstack_memory_used@@Base+0x23d0>  // b.lo, b.ul, b.last
  43a040:	ldr	x3, [x20, #16]
  43a044:	ldr	w1, [x3, x1]
  43a048:	cmp	w21, w1
  43a04c:	b.ls	43a058 <_obstack_memory_used@@Base+0x23d8>  // b.plast
  43a050:	add	x0, x0, #0x1
  43a054:	b	439fd4 <_obstack_memory_used@@Base+0x2354>
  43a058:	mov	w0, w19
  43a05c:	b	439fe0 <_obstack_memory_used@@Base+0x2360>
  43a060:	mov	w19, w0
  43a064:	b	439e64 <_obstack_memory_used@@Base+0x21e4>
  43a068:	tbnz	x1, #63, 43a08c <_obstack_memory_used@@Base+0x240c>
  43a06c:	ldr	x2, [x0, #8]
  43a070:	cmp	x2, x1
  43a074:	b.le	43a08c <_obstack_memory_used@@Base+0x240c>
  43a078:	sub	x2, x2, #0x1
  43a07c:	str	x2, [x0, #8]
  43a080:	ldr	x2, [x0, #8]
  43a084:	cmp	x1, x2
  43a088:	b.lt	43a090 <_obstack_memory_used@@Base+0x2410>  // b.tstop
  43a08c:	ret
  43a090:	add	x1, x1, #0x1
  43a094:	ldr	x2, [x0, #16]
  43a098:	lsl	x3, x1, #3
  43a09c:	ldr	x4, [x2, x3]
  43a0a0:	add	x2, x2, x3
  43a0a4:	stur	x4, [x2, #-8]
  43a0a8:	b	43a080 <_obstack_memory_used@@Base+0x2400>
  43a0ac:	ldrb	w2, [x1, #48]
  43a0b0:	cmp	w2, #0x4
  43a0b4:	b.ne	43a0ec <_obstack_memory_used@@Base+0x246c>  // b.any
  43a0b8:	ldr	x2, [x0, #224]
  43a0bc:	cbz	x2, 43a0e4 <_obstack_memory_used@@Base+0x2464>
  43a0c0:	ldrsw	x3, [x1, #40]
  43a0c4:	ldr	x2, [x2, x3, lsl #3]
  43a0c8:	str	x2, [x1, #40]
  43a0cc:	mov	w1, #0x1                   	// #1
  43a0d0:	lsl	w1, w1, w2
  43a0d4:	ldr	x2, [x0, #160]
  43a0d8:	sxtw	x1, w1
  43a0dc:	orr	x1, x2, x1
  43a0e0:	str	x1, [x0, #160]
  43a0e4:	mov	w0, #0x0                   	// #0
  43a0e8:	ret
  43a0ec:	cmp	w2, #0x11
  43a0f0:	b.ne	43a0e4 <_obstack_memory_used@@Base+0x2464>  // b.any
  43a0f4:	ldr	x2, [x1, #8]
  43a0f8:	cbz	x2, 43a0e4 <_obstack_memory_used@@Base+0x2464>
  43a0fc:	ldrb	w3, [x2, #48]
  43a100:	cmp	w3, #0x11
  43a104:	b.ne	43a0e4 <_obstack_memory_used@@Base+0x2464>  // b.any
  43a108:	ldr	x3, [x2, #40]
  43a10c:	ldr	x2, [x2, #8]
  43a110:	str	x2, [x1, #8]
  43a114:	cbz	x2, 43a11c <_obstack_memory_used@@Base+0x249c>
  43a118:	str	x1, [x2]
  43a11c:	ldr	x1, [x1, #40]
  43a120:	cmp	x3, #0x3f
  43a124:	ldr	x2, [x0, #224]
  43a128:	ldr	x1, [x2, x1, lsl #3]
  43a12c:	str	x1, [x2, x3, lsl #3]
  43a130:	b.gt	43a0e4 <_obstack_memory_used@@Base+0x2464>
  43a134:	ldr	x2, [x0, #160]
  43a138:	mov	x1, #0x1                   	// #1
  43a13c:	lsl	x1, x1, x3
  43a140:	bic	x1, x2, x1
  43a144:	b	43a0e0 <_obstack_memory_used@@Base+0x2460>
  43a148:	ldrb	w0, [x1, #48]
  43a14c:	ldr	x2, [x1, #8]
  43a150:	cmp	w0, #0xb
  43a154:	b.eq	43a178 <_obstack_memory_used@@Base+0x24f8>  // b.none
  43a158:	cmp	w0, #0x10
  43a15c:	ldr	x0, [x1, #16]
  43a160:	b.eq	43a184 <_obstack_memory_used@@Base+0x2504>  // b.none
  43a164:	cbz	x2, 43a170 <_obstack_memory_used@@Base+0x24f0>
  43a168:	ldr	x3, [x1, #32]
  43a16c:	str	x3, [x2, #32]
  43a170:	cbnz	x0, 43a18c <_obstack_memory_used@@Base+0x250c>
  43a174:	b	43a17c <_obstack_memory_used@@Base+0x24fc>
  43a178:	str	x1, [x2, #32]
  43a17c:	mov	w0, #0x0                   	// #0
  43a180:	ret
  43a184:	ldr	x3, [x0, #24]
  43a188:	str	x3, [x2, #32]
  43a18c:	ldr	x1, [x1, #32]
  43a190:	str	x1, [x0, #32]
  43a194:	b	43a17c <_obstack_memory_used@@Base+0x24fc>
  43a198:	cbnz	x1, 43a1a4 <_obstack_memory_used@@Base+0x2524>
  43a19c:	mov	w0, #0x0                   	// #0
  43a1a0:	ret
  43a1a4:	stp	x29, x30, [sp, #-48]!
  43a1a8:	mov	x29, sp
  43a1ac:	stp	x19, x20, [sp, #16]
  43a1b0:	mov	x20, x1
  43a1b4:	ldr	x1, [x1, #8]
  43a1b8:	str	x21, [sp, #32]
  43a1bc:	cbz	x1, 43a2d0 <_obstack_memory_used@@Base+0x2650>
  43a1c0:	mov	x19, x0
  43a1c4:	ldp	x2, x0, [x0]
  43a1c8:	add	x0, x0, x1, lsl #1
  43a1cc:	cmp	x2, x0
  43a1d0:	b.ge	43a1f4 <_obstack_memory_used@@Base+0x2574>  // b.tcont
  43a1d4:	ldr	x0, [x19, #16]
  43a1d8:	add	x1, x1, x2
  43a1dc:	lsl	x21, x1, #1
  43a1e0:	lsl	x1, x1, #4
  43a1e4:	bl	404820 <realloc@plt>
  43a1e8:	cbz	x0, 43a2fc <_obstack_memory_used@@Base+0x267c>
  43a1ec:	str	x21, [x19]
  43a1f0:	str	x0, [x19, #16]
  43a1f4:	ldr	x0, [x19, #8]
  43a1f8:	ldr	x2, [x20, #8]
  43a1fc:	cbnz	x0, 43a21c <_obstack_memory_used@@Base+0x259c>
  43a200:	ldr	x1, [x20, #16]
  43a204:	str	x2, [x19, #8]
  43a208:	ldr	x0, [x19, #16]
  43a20c:	ldr	x2, [x20, #8]
  43a210:	lsl	x2, x2, #3
  43a214:	bl	404200 <memcpy@plt>
  43a218:	b	43a2d0 <_obstack_memory_used@@Base+0x2650>
  43a21c:	add	x21, x0, x2, lsl #1
  43a220:	sub	x2, x2, #0x1
  43a224:	sub	x0, x0, #0x1
  43a228:	b	43a254 <_obstack_memory_used@@Base+0x25d4>
  43a22c:	ldr	x1, [x19, #16]
  43a230:	ldr	x3, [x20, #16]
  43a234:	ldr	x4, [x1, x0, lsl #3]
  43a238:	ldr	x3, [x3, x2, lsl #3]
  43a23c:	cmp	x4, x3
  43a240:	b.eq	43a220 <_obstack_memory_used@@Base+0x25a0>  // b.none
  43a244:	b.ge	43a224 <_obstack_memory_used@@Base+0x25a4>  // b.tcont
  43a248:	sub	x21, x21, #0x1
  43a24c:	sub	x2, x2, #0x1
  43a250:	str	x3, [x1, x21, lsl #3]
  43a254:	cmp	x2, #0x0
  43a258:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
  43a25c:	b.ge	43a22c <_obstack_memory_used@@Base+0x25ac>  // b.tcont
  43a260:	tbnz	x2, #63, 43a280 <_obstack_memory_used@@Base+0x2600>
  43a264:	ldr	x0, [x19, #16]
  43a268:	add	x2, x2, #0x1
  43a26c:	ldr	x1, [x20, #16]
  43a270:	sub	x21, x21, x2
  43a274:	lsl	x2, x2, #3
  43a278:	add	x0, x0, x21, lsl #3
  43a27c:	bl	404200 <memcpy@plt>
  43a280:	ldr	x0, [x19, #8]
  43a284:	ldr	x2, [x20, #8]
  43a288:	add	x2, x0, x2, lsl #1
  43a28c:	sub	x4, x2, #0x1
  43a290:	subs	x2, x2, x21
  43a294:	b.eq	43a2d0 <_obstack_memory_used@@Base+0x2650>  // b.none
  43a298:	sub	x1, x0, #0x1
  43a29c:	add	x0, x0, x2
  43a2a0:	str	x0, [x19, #8]
  43a2a4:	ldr	x0, [x19, #16]
  43a2a8:	add	x3, x1, x2
  43a2ac:	ldr	x6, [x0, x4, lsl #3]
  43a2b0:	lsl	x3, x3, #3
  43a2b4:	ldr	x5, [x0, x1, lsl #3]
  43a2b8:	cmp	x6, x5
  43a2bc:	b.le	43a2e4 <_obstack_memory_used@@Base+0x2664>
  43a2c0:	str	x6, [x0, x3]
  43a2c4:	sub	x4, x4, #0x1
  43a2c8:	subs	x2, x2, #0x1
  43a2cc:	b.ne	43a2a8 <_obstack_memory_used@@Base+0x2628>  // b.any
  43a2d0:	mov	w0, #0x0                   	// #0
  43a2d4:	ldp	x19, x20, [sp, #16]
  43a2d8:	ldr	x21, [sp, #32]
  43a2dc:	ldp	x29, x30, [sp], #48
  43a2e0:	ret
  43a2e4:	str	x5, [x0, x3]
  43a2e8:	subs	x1, x1, #0x1
  43a2ec:	b.pl	43a2a8 <_obstack_memory_used@@Base+0x2628>  // b.nfrst
  43a2f0:	lsl	x2, x2, #3
  43a2f4:	add	x1, x0, x21, lsl #3
  43a2f8:	b	43a214 <_obstack_memory_used@@Base+0x2594>
  43a2fc:	mov	w0, #0xc                   	// #12
  43a300:	b	43a2d4 <_obstack_memory_used@@Base+0x2654>
  43a304:	stp	x29, x30, [sp, #-48]!
  43a308:	mov	x29, sp
  43a30c:	stp	x19, x20, [sp, #16]
  43a310:	ldr	x20, [x1, #8]
  43a314:	stp	x21, x22, [sp, #32]
  43a318:	cbz	x20, 43a42c <_obstack_memory_used@@Base+0x27ac>
  43a31c:	mov	x19, x0
  43a320:	mov	x22, x2
  43a324:	ldr	x0, [x2, #8]
  43a328:	cbz	x0, 43a42c <_obstack_memory_used@@Base+0x27ac>
  43a32c:	add	x20, x20, x0
  43a330:	mov	x21, x1
  43a334:	ldp	x1, x0, [x19]
  43a338:	add	x0, x20, x0
  43a33c:	cmp	x0, x1
  43a340:	b.le	43a360 <_obstack_memory_used@@Base+0x26e0>
  43a344:	ldr	x0, [x19, #16]
  43a348:	add	x20, x20, x1
  43a34c:	lsl	x1, x20, #3
  43a350:	bl	404820 <realloc@plt>
  43a354:	cbz	x0, 43a468 <_obstack_memory_used@@Base+0x27e8>
  43a358:	str	x20, [x19]
  43a35c:	str	x0, [x19, #16]
  43a360:	ldp	x0, x6, [x21, #8]
  43a364:	ldp	x3, x7, [x22, #8]
  43a368:	ldr	x5, [x19, #8]
  43a36c:	add	x4, x5, x0
  43a370:	sub	x0, x0, #0x1
  43a374:	add	x4, x4, x3
  43a378:	sub	x5, x5, #0x1
  43a37c:	sub	x3, x3, #0x1
  43a380:	ldr	x1, [x6, x0, lsl #3]
  43a384:	ldr	x2, [x7, x3, lsl #3]
  43a388:	cmp	x1, x2
  43a38c:	b.ne	43a448 <_obstack_memory_used@@Base+0x27c8>  // b.any
  43a390:	ldr	x2, [x19, #16]
  43a394:	tbnz	x5, #63, 43a3a8 <_obstack_memory_used@@Base+0x2728>
  43a398:	ldr	x8, [x2, x5, lsl #3]
  43a39c:	cmp	x1, x8
  43a3a0:	b.lt	43a440 <_obstack_memory_used@@Base+0x27c0>  // b.tstop
  43a3a4:	b.eq	43a3b0 <_obstack_memory_used@@Base+0x2730>  // b.none
  43a3a8:	sub	x4, x4, #0x1
  43a3ac:	str	x1, [x2, x4, lsl #3]
  43a3b0:	subs	x0, x0, #0x1
  43a3b4:	b.mi	43a3c0 <_obstack_memory_used@@Base+0x2740>  // b.first
  43a3b8:	subs	x3, x3, #0x1
  43a3bc:	b.pl	43a380 <_obstack_memory_used@@Base+0x2700>  // b.nfrst
  43a3c0:	ldr	x0, [x19, #8]
  43a3c4:	ldr	x3, [x21, #8]
  43a3c8:	sub	x1, x0, #0x1
  43a3cc:	ldr	x2, [x22, #8]
  43a3d0:	add	x3, x0, x3
  43a3d4:	add	x2, x3, x2
  43a3d8:	sub	x5, x2, #0x1
  43a3dc:	sub	x2, x2, x4
  43a3e0:	add	x0, x0, x2
  43a3e4:	str	x0, [x19, #8]
  43a3e8:	cmp	x2, #0x0
  43a3ec:	ccmp	x1, #0x0, #0x1, gt
  43a3f0:	ldr	x0, [x19, #16]
  43a3f4:	b.lt	43a420 <_obstack_memory_used@@Base+0x27a0>  // b.tstop
  43a3f8:	ldr	x7, [x0, x5, lsl #3]
  43a3fc:	add	x3, x1, x2
  43a400:	ldr	x6, [x0, x1, lsl #3]
  43a404:	lsl	x3, x3, #3
  43a408:	cmp	x7, x6
  43a40c:	b.le	43a454 <_obstack_memory_used@@Base+0x27d4>
  43a410:	str	x7, [x0, x3]
  43a414:	sub	x5, x5, #0x1
  43a418:	subs	x2, x2, #0x1
  43a41c:	b.ne	43a3f8 <_obstack_memory_used@@Base+0x2778>  // b.any
  43a420:	lsl	x2, x2, #3
  43a424:	add	x1, x0, x4, lsl #3
  43a428:	bl	404200 <memcpy@plt>
  43a42c:	mov	w0, #0x0                   	// #0
  43a430:	ldp	x19, x20, [sp, #16]
  43a434:	ldp	x21, x22, [sp, #32]
  43a438:	ldp	x29, x30, [sp], #48
  43a43c:	ret
  43a440:	sub	x5, x5, #0x1
  43a444:	b	43a394 <_obstack_memory_used@@Base+0x2714>
  43a448:	b.lt	43a3b8 <_obstack_memory_used@@Base+0x2738>  // b.tstop
  43a44c:	subs	x0, x0, #0x1
  43a450:	b	43a3bc <_obstack_memory_used@@Base+0x273c>
  43a454:	str	x6, [x0, x3]
  43a458:	sub	x1, x1, #0x1
  43a45c:	cmn	x1, #0x1
  43a460:	b.ne	43a3f8 <_obstack_memory_used@@Base+0x2778>  // b.any
  43a464:	b	43a420 <_obstack_memory_used@@Base+0x27a0>
  43a468:	mov	w0, #0xc                   	// #12
  43a46c:	b	43a430 <_obstack_memory_used@@Base+0x27b0>
  43a470:	stp	x29, x30, [sp, #-48]!
  43a474:	mov	x29, sp
  43a478:	stp	x19, x20, [sp, #16]
  43a47c:	mov	x19, x0
  43a480:	ldr	w0, [x0, #128]
  43a484:	stp	x21, x22, [sp, #32]
  43a488:	mov	x20, x2
  43a48c:	mov	x21, x1
  43a490:	mov	x22, x3
  43a494:	cmp	w0, #0xf
  43a498:	b.ne	43a4bc <_obstack_memory_used@@Base+0x283c>  // b.any
  43a49c:	mov	x0, #0x3c8                 	// #968
  43a4a0:	bl	4045f0 <malloc@plt>
  43a4a4:	mov	x4, x0
  43a4a8:	cbz	x0, 43a51c <_obstack_memory_used@@Base+0x289c>
  43a4ac:	ldr	x0, [x19, #112]
  43a4b0:	str	x0, [x4]
  43a4b4:	str	x4, [x19, #112]
  43a4b8:	str	wzr, [x19, #128]
  43a4bc:	ldr	w4, [x19, #128]
  43a4c0:	ldr	x6, [x19, #112]
  43a4c4:	add	w0, w4, #0x1
  43a4c8:	sbfiz	x4, x4, #6, #32
  43a4cc:	str	w0, [x19, #128]
  43a4d0:	add	x5, x6, x4
  43a4d4:	add	x0, x4, #0x8
  43a4d8:	add	x4, x4, #0x20
  43a4dc:	add	x0, x6, x0
  43a4e0:	add	x4, x6, x4
  43a4e4:	stp	xzr, x21, [x5, #8]
  43a4e8:	str	x20, [x5, #24]
  43a4ec:	ldp	x2, x3, [x22]
  43a4f0:	stp	x2, x3, [x5, #48]
  43a4f4:	ldrb	w1, [x4, #26]
  43a4f8:	and	w1, w1, #0xfffffff3
  43a4fc:	strb	w1, [x4, #26]
  43a500:	mov	x1, #0xffffffffffffffff    	// #-1
  43a504:	stp	xzr, xzr, [x5, #32]
  43a508:	str	x1, [x5, #64]
  43a50c:	cbz	x21, 43a514 <_obstack_memory_used@@Base+0x2894>
  43a510:	str	x0, [x21]
  43a514:	cbz	x20, 43a51c <_obstack_memory_used@@Base+0x289c>
  43a518:	str	x0, [x20]
  43a51c:	ldp	x19, x20, [sp, #16]
  43a520:	ldp	x21, x22, [sp, #32]
  43a524:	ldp	x29, x30, [sp], #48
  43a528:	ret
  43a52c:	stp	x29, x30, [sp, #-64]!
  43a530:	mov	x29, sp
  43a534:	stp	x19, x20, [sp, #16]
  43a538:	mov	x19, x0
  43a53c:	ldr	x20, [x0]
  43a540:	stp	x21, x22, [sp, #32]
  43a544:	mov	x22, x1
  43a548:	add	x21, sp, #0x38
  43a54c:	add	x3, x19, #0x28
  43a550:	mov	x0, x22
  43a554:	mov	x2, #0x0                   	// #0
  43a558:	mov	x1, #0x0                   	// #0
  43a55c:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  43a560:	str	x0, [x21]
  43a564:	cbz	x0, 43a5a4 <_obstack_memory_used@@Base+0x2924>
  43a568:	str	x20, [x0]
  43a56c:	ldr	x20, [x21]
  43a570:	ldrb	w0, [x20, #50]
  43a574:	orr	w0, w0, #0x4
  43a578:	strb	w0, [x20, #50]
  43a57c:	ldr	x0, [x19, #8]
  43a580:	cbz	x0, 43a5b8 <_obstack_memory_used@@Base+0x2938>
  43a584:	add	x21, x20, #0x8
  43a588:	mov	x19, x0
  43a58c:	b	43a54c <_obstack_memory_used@@Base+0x28cc>
  43a590:	ldr	x1, [x19]
  43a594:	mov	x0, x19
  43a598:	ldr	x20, [x20]
  43a59c:	cbnz	x1, 43a5b4 <_obstack_memory_used@@Base+0x2934>
  43a5a0:	ldr	x0, [sp, #56]
  43a5a4:	ldp	x19, x20, [sp, #16]
  43a5a8:	ldp	x21, x22, [sp, #32]
  43a5ac:	ldp	x29, x30, [sp], #64
  43a5b0:	ret
  43a5b4:	mov	x19, x1
  43a5b8:	ldr	x2, [x19, #16]
  43a5bc:	cmp	x2, x0
  43a5c0:	b.eq	43a590 <_obstack_memory_used@@Base+0x2910>  // b.none
  43a5c4:	cbz	x2, 43a590 <_obstack_memory_used@@Base+0x2910>
  43a5c8:	add	x21, x20, #0x10
  43a5cc:	mov	x0, x2
  43a5d0:	b	43a588 <_obstack_memory_used@@Base+0x2908>
  43a5d4:	stp	x29, x30, [sp, #-32]!
  43a5d8:	mov	x29, sp
  43a5dc:	strb	w3, [sp, #24]
  43a5e0:	add	x3, sp, #0x10
  43a5e4:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  43a5e8:	ldp	x29, x30, [sp], #32
  43a5ec:	ret
  43a5f0:	stp	x29, x30, [sp, #-80]!
  43a5f4:	mov	x29, sp
  43a5f8:	stp	x23, x24, [sp, #48]
  43a5fc:	mov	x24, x0
  43a600:	ldrb	w0, [x1, #56]
  43a604:	stp	x19, x20, [sp, #16]
  43a608:	stp	x21, x22, [sp, #32]
  43a60c:	mov	x22, x2
  43a610:	ldr	x19, [x2, #8]
  43a614:	str	x25, [sp, #64]
  43a618:	ldr	x25, [x1]
  43a61c:	tbz	w0, #4, 43a63c <_obstack_memory_used@@Base+0x29bc>
  43a620:	cbz	x19, 43a63c <_obstack_memory_used@@Base+0x29bc>
  43a624:	ldr	x1, [x2, #40]
  43a628:	cmp	x1, #0x3f
  43a62c:	b.gt	43a6c4 <_obstack_memory_used@@Base+0x2a44>
  43a630:	ldr	x0, [x25, #160]
  43a634:	lsr	x0, x0, x1
  43a638:	tbz	w0, #0, 43a6c4 <_obstack_memory_used@@Base+0x2a44>
  43a63c:	mov	w3, #0x8                   	// #8
  43a640:	mov	x2, #0x0                   	// #0
  43a644:	mov	x1, #0x0                   	// #0
  43a648:	mov	x0, x25
  43a64c:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  43a650:	mov	x21, x0
  43a654:	mov	w3, #0x9                   	// #9
  43a658:	mov	x0, x25
  43a65c:	mov	x2, #0x0                   	// #0
  43a660:	mov	x1, #0x0                   	// #0
  43a664:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  43a668:	mov	x20, x0
  43a66c:	cbz	x19, 43a6e0 <_obstack_memory_used@@Base+0x2a60>
  43a670:	mov	x2, x0
  43a674:	mov	x1, x19
  43a678:	mov	x0, x25
  43a67c:	mov	w3, #0x10                  	// #16
  43a680:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  43a684:	mov	x23, x0
  43a688:	mov	x2, x23
  43a68c:	mov	x1, x21
  43a690:	mov	x0, x25
  43a694:	mov	w3, #0x10                  	// #16
  43a698:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  43a69c:	cmp	x0, #0x0
  43a6a0:	mov	x19, x0
  43a6a4:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  43a6a8:	b.eq	43a6b8 <_obstack_memory_used@@Base+0x2a38>  // b.none
  43a6ac:	cmp	x21, #0x0
  43a6b0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  43a6b4:	b.ne	43a6e8 <_obstack_memory_used@@Base+0x2a68>  // b.any
  43a6b8:	mov	w0, #0xc                   	// #12
  43a6bc:	mov	x19, #0x0                   	// #0
  43a6c0:	str	w0, [x24]
  43a6c4:	mov	x0, x19
  43a6c8:	ldp	x19, x20, [sp, #16]
  43a6cc:	ldp	x21, x22, [sp, #32]
  43a6d0:	ldp	x23, x24, [sp, #48]
  43a6d4:	ldr	x25, [sp, #64]
  43a6d8:	ldp	x29, x30, [sp], #80
  43a6dc:	ret
  43a6e0:	mov	x23, x0
  43a6e4:	b	43a688 <_obstack_memory_used@@Base+0x2a08>
  43a6e8:	ldr	x0, [x22, #40]
  43a6ec:	str	x0, [x20, #40]
  43a6f0:	str	x0, [x21, #40]
  43a6f4:	ldrb	w0, [x22, #50]
  43a6f8:	ldrb	w1, [x20, #50]
  43a6fc:	ubfx	x0, x0, #3, #1
  43a700:	bfi	w1, w0, #3, #1
  43a704:	strb	w1, [x20, #50]
  43a708:	ldrb	w1, [x21, #50]
  43a70c:	bfi	w1, w0, #3, #1
  43a710:	strb	w1, [x21, #50]
  43a714:	b	43a6c4 <_obstack_memory_used@@Base+0x2a44>
  43a718:	stp	x29, x30, [sp, #-48]!
  43a71c:	mov	x29, sp
  43a720:	ldr	x2, [x1, #8]
  43a724:	stp	x19, x20, [sp, #16]
  43a728:	mov	x20, x0
  43a72c:	str	wzr, [sp, #44]
  43a730:	mov	x19, x1
  43a734:	cbz	x2, 43a75c <_obstack_memory_used@@Base+0x2adc>
  43a738:	ldrb	w0, [x2, #48]
  43a73c:	cmp	w0, #0x11
  43a740:	b.ne	43a75c <_obstack_memory_used@@Base+0x2adc>  // b.any
  43a744:	mov	x1, x20
  43a748:	add	x0, sp, #0x2c
  43a74c:	bl	43a5f0 <_obstack_memory_used@@Base+0x2970>
  43a750:	str	x0, [x19, #8]
  43a754:	cbz	x0, 43a75c <_obstack_memory_used@@Base+0x2adc>
  43a758:	str	x19, [x0]
  43a75c:	ldr	x2, [x19, #16]
  43a760:	cbz	x2, 43a788 <_obstack_memory_used@@Base+0x2b08>
  43a764:	ldrb	w0, [x2, #48]
  43a768:	cmp	w0, #0x11
  43a76c:	b.ne	43a788 <_obstack_memory_used@@Base+0x2b08>  // b.any
  43a770:	mov	x1, x20
  43a774:	add	x0, sp, #0x2c
  43a778:	bl	43a5f0 <_obstack_memory_used@@Base+0x2970>
  43a77c:	str	x0, [x19, #16]
  43a780:	cbz	x0, 43a788 <_obstack_memory_used@@Base+0x2b08>
  43a784:	str	x19, [x0]
  43a788:	ldr	w0, [sp, #44]
  43a78c:	ldp	x19, x20, [sp, #16]
  43a790:	ldp	x29, x30, [sp], #48
  43a794:	ret
  43a798:	stp	x29, x30, [sp, #-112]!
  43a79c:	mov	x29, sp
  43a7a0:	stp	x19, x20, [sp, #16]
  43a7a4:	stp	x21, x22, [sp, #32]
  43a7a8:	mov	x21, x0
  43a7ac:	mov	x22, x5
  43a7b0:	mov	x0, #0x20                  	// #32
  43a7b4:	stp	x23, x24, [sp, #48]
  43a7b8:	mov	x24, x1
  43a7bc:	mov	x23, x3
  43a7c0:	mov	x1, #0x1                   	// #1
  43a7c4:	stp	x25, x26, [sp, #64]
  43a7c8:	mov	x25, x2
  43a7cc:	and	w26, w4, #0xff
  43a7d0:	str	xzr, [sp, #88]
  43a7d4:	bl	4047a0 <calloc@plt>
  43a7d8:	mov	x19, x0
  43a7dc:	cbnz	x0, 43a804 <_obstack_memory_used@@Base+0x2b84>
  43a7e0:	mov	w0, #0xc                   	// #12
  43a7e4:	str	w0, [x22]
  43a7e8:	mov	x0, x19
  43a7ec:	ldp	x19, x20, [sp, #16]
  43a7f0:	ldp	x21, x22, [sp, #32]
  43a7f4:	ldp	x23, x24, [sp, #48]
  43a7f8:	ldp	x25, x26, [sp, #64]
  43a7fc:	ldp	x29, x30, [sp], #112
  43a800:	ret
  43a804:	mov	x1, #0x1                   	// #1
  43a808:	mov	x0, #0x50                  	// #80
  43a80c:	bl	4047a0 <calloc@plt>
  43a810:	mov	x20, x0
  43a814:	cbnz	x0, 43a82c <_obstack_memory_used@@Base+0x2bac>
  43a818:	mov	x0, x19
  43a81c:	bl	404ae0 <free@plt>
  43a820:	mov	w0, #0xc                   	// #12
  43a824:	str	w0, [x22]
  43a828:	b	43a870 <_obstack_memory_used@@Base+0x2bf0>
  43a82c:	ldrb	w0, [x0, #32]
  43a830:	mov	x4, x25
  43a834:	add	x3, sp, #0x58
  43a838:	mov	x2, x20
  43a83c:	mov	x1, x19
  43a840:	mov	x5, #0x0                   	// #0
  43a844:	bfxil	w0, w26, #0, #1
  43a848:	strb	w0, [x20, #32]
  43a84c:	mov	x0, x24
  43a850:	bl	43976c <_obstack_memory_used@@Base+0x1aec>
  43a854:	mov	w24, w0
  43a858:	cbz	w0, 43a888 <_obstack_memory_used@@Base+0x2c08>
  43a85c:	mov	x0, x19
  43a860:	bl	404ae0 <free@plt>
  43a864:	mov	x0, x20
  43a868:	bl	439008 <_obstack_memory_used@@Base+0x1388>
  43a86c:	str	w24, [x22]
  43a870:	mov	x19, #0x0                   	// #0
  43a874:	b	43a7e8 <_obstack_memory_used@@Base+0x2b68>
  43a878:	add	x23, x23, #0x1
  43a87c:	and	x1, x1, #0xff
  43a880:	mov	x0, x19
  43a884:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  43a888:	ldrb	w1, [x23]
  43a88c:	cbnz	w1, 43a878 <_obstack_memory_used@@Base+0x2bf8>
  43a890:	cbz	w26, 43a89c <_obstack_memory_used@@Base+0x2c1c>
  43a894:	mov	x0, x19
  43a898:	bl	437dd4 <_obstack_memory_used@@Base+0x154>
  43a89c:	ldr	w0, [x21, #180]
  43a8a0:	cmp	w0, #0x1
  43a8a4:	b.le	43a8b4 <_obstack_memory_used@@Base+0x2c34>
  43a8a8:	ldr	x1, [x21, #120]
  43a8ac:	mov	x0, x19
  43a8b0:	bl	437e18 <_obstack_memory_used@@Base+0x198>
  43a8b4:	mov	w0, #0x3                   	// #3
  43a8b8:	add	x3, sp, #0x60
  43a8bc:	mov	x2, #0x0                   	// #0
  43a8c0:	mov	x1, #0x0                   	// #0
  43a8c4:	str	x19, [sp, #96]
  43a8c8:	strb	w0, [sp, #104]
  43a8cc:	mov	x0, x21
  43a8d0:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  43a8d4:	mov	x23, x0
  43a8d8:	cbz	x0, 43a944 <_obstack_memory_used@@Base+0x2cc4>
  43a8dc:	ldr	w0, [x21, #180]
  43a8e0:	cmp	w0, #0x1
  43a8e4:	b.le	43a934 <_obstack_memory_used@@Base+0x2cb4>
  43a8e8:	mov	w0, #0x6                   	// #6
  43a8ec:	strb	w0, [sp, #104]
  43a8f0:	ldrb	w0, [x21, #176]
  43a8f4:	mov	x2, #0x0                   	// #0
  43a8f8:	add	x3, sp, #0x60
  43a8fc:	mov	x1, #0x0                   	// #0
  43a900:	orr	w0, w0, #0x2
  43a904:	strb	w0, [x21, #176]
  43a908:	mov	x0, x21
  43a90c:	str	x20, [sp, #96]
  43a910:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  43a914:	mov	x2, x0
  43a918:	cbz	x0, 43a944 <_obstack_memory_used@@Base+0x2cc4>
  43a91c:	mov	x1, x23
  43a920:	mov	x0, x21
  43a924:	mov	w3, #0xa                   	// #10
  43a928:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  43a92c:	mov	x19, x0
  43a930:	b	43a7e8 <_obstack_memory_used@@Base+0x2b68>
  43a934:	mov	x0, x20
  43a938:	mov	x19, x23
  43a93c:	bl	439008 <_obstack_memory_used@@Base+0x1388>
  43a940:	b	43a7e8 <_obstack_memory_used@@Base+0x2b68>
  43a944:	mov	x0, x19
  43a948:	bl	404ae0 <free@plt>
  43a94c:	mov	x0, x20
  43a950:	bl	439008 <_obstack_memory_used@@Base+0x1388>
  43a954:	b	43a820 <_obstack_memory_used@@Base+0x2ba0>
  43a958:	stp	x29, x30, [sp, #-32]!
  43a95c:	mov	x29, sp
  43a960:	ldr	x2, [x0]
  43a964:	stp	x19, x20, [sp, #16]
  43a968:	cbnz	x2, 43a984 <_obstack_memory_used@@Base+0x2d04>
  43a96c:	bl	438638 <_obstack_memory_used@@Base+0x9b8>
  43a970:	cmp	w0, #0x0
  43a974:	cset	w0, eq  // eq = none
  43a978:	ldp	x19, x20, [sp, #16]
  43a97c:	ldp	x29, x30, [sp], #32
  43a980:	ret
  43a984:	mov	x19, x0
  43a988:	mov	x20, x1
  43a98c:	ldp	x1, x0, [x0, #8]
  43a990:	cbnz	x1, 43a9ac <_obstack_memory_used@@Base+0x2d2c>
  43a994:	str	x20, [x0]
  43a998:	ldr	x0, [x19, #8]
  43a99c:	add	x0, x0, #0x1
  43a9a0:	str	x0, [x19, #8]
  43a9a4:	mov	w0, #0x1                   	// #1
  43a9a8:	b	43a978 <_obstack_memory_used@@Base+0x2cf8>
  43a9ac:	cmp	x2, x1
  43a9b0:	b.ne	43a9cc <_obstack_memory_used@@Base+0x2d4c>  // b.any
  43a9b4:	lsl	x1, x2, #1
  43a9b8:	str	x1, [x19]
  43a9bc:	lsl	x1, x2, #4
  43a9c0:	bl	404820 <realloc@plt>
  43a9c4:	cbz	x0, 43aa2c <_obstack_memory_used@@Base+0x2dac>
  43a9c8:	str	x0, [x19, #16]
  43a9cc:	ldp	x0, x2, [x19, #8]
  43a9d0:	ldr	x1, [x2]
  43a9d4:	cmp	x20, x1
  43a9d8:	b.lt	43aa20 <_obstack_memory_used@@Base+0x2da0>  // b.tstop
  43a9dc:	sub	x3, x2, #0x8
  43a9e0:	ldr	x1, [x3, x0, lsl #3]
  43a9e4:	cmp	x20, x1
  43a9e8:	b.ge	43aa18 <_obstack_memory_used@@Base+0x2d98>  // b.tcont
  43a9ec:	str	x1, [x2, x0, lsl #3]
  43a9f0:	sub	x0, x0, #0x1
  43a9f4:	b	43a9e0 <_obstack_memory_used@@Base+0x2d60>
  43a9f8:	ldr	x4, [x3, x1, lsl #3]
  43a9fc:	str	x4, [x2, x1, lsl #3]
  43aa00:	sub	x1, x1, #0x1
  43aa04:	cmp	x1, #0x0
  43aa08:	b.gt	43a9f8 <_obstack_memory_used@@Base+0x2d78>
  43aa0c:	cmp	x0, #0x0
  43aa10:	csel	x1, x0, xzr, ge  // ge = tcont
  43aa14:	sub	x0, x0, x1
  43aa18:	str	x20, [x2, x0, lsl #3]
  43aa1c:	b	43a998 <_obstack_memory_used@@Base+0x2d18>
  43aa20:	mov	x1, x0
  43aa24:	sub	x3, x2, #0x8
  43aa28:	b	43aa04 <_obstack_memory_used@@Base+0x2d84>
  43aa2c:	mov	w0, #0x0                   	// #0
  43aa30:	b	43a978 <_obstack_memory_used@@Base+0x2cf8>
  43aa34:	stp	x29, x30, [sp, #-64]!
  43aa38:	mov	x29, sp
  43aa3c:	stp	x19, x20, [sp, #16]
  43aa40:	mov	x20, x1
  43aa44:	mov	x19, x2
  43aa48:	stp	x21, x22, [sp, #32]
  43aa4c:	mov	x21, x0
  43aa50:	mov	w22, w4
  43aa54:	stp	x23, x24, [sp, #48]
  43aa58:	mov	x23, x3
  43aa5c:	mov	x24, #0x18                  	// #24
  43aa60:	mov	x1, x19
  43aa64:	mov	x0, x20
  43aa68:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43aa6c:	cbz	x0, 43aa78 <_obstack_memory_used@@Base+0x2df8>
  43aa70:	mov	w0, #0x0                   	// #0
  43aa74:	b	43aabc <_obstack_memory_used@@Base+0x2e3c>
  43aa78:	ldr	x0, [x21]
  43aa7c:	lsl	x1, x19, #4
  43aa80:	add	x2, x0, x19, lsl #4
  43aa84:	ldrb	w2, [x2, #8]
  43aa88:	cmp	w2, w22
  43aa8c:	b.ne	43aad0 <_obstack_memory_used@@Base+0x2e50>  // b.any
  43aa90:	ldr	x0, [x0, x1]
  43aa94:	cmp	x0, x23
  43aa98:	b.ne	43aad0 <_obstack_memory_used@@Base+0x2e50>  // b.any
  43aa9c:	cmp	w22, #0x9
  43aaa0:	b.ne	43aa70 <_obstack_memory_used@@Base+0x2df0>  // b.any
  43aaa4:	mov	x1, x19
  43aaa8:	mov	x0, x20
  43aaac:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43aab0:	tst	w0, #0xff
  43aab4:	b.ne	43aa70 <_obstack_memory_used@@Base+0x2df0>  // b.any
  43aab8:	mov	w0, #0xc                   	// #12
  43aabc:	ldp	x19, x20, [sp, #16]
  43aac0:	ldp	x21, x22, [sp, #32]
  43aac4:	ldp	x23, x24, [sp, #48]
  43aac8:	ldp	x29, x30, [sp], #64
  43aacc:	ret
  43aad0:	mov	x1, x19
  43aad4:	mov	x0, x20
  43aad8:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43aadc:	tst	w0, #0xff
  43aae0:	b.eq	43aab8 <_obstack_memory_used@@Base+0x2e38>  // b.none
  43aae4:	ldr	x0, [x21, #40]
  43aae8:	mul	x19, x19, x24
  43aaec:	add	x0, x0, x19
  43aaf0:	ldr	x1, [x0, #8]
  43aaf4:	cbz	x1, 43aa70 <_obstack_memory_used@@Base+0x2df0>
  43aaf8:	cmp	x1, #0x2
  43aafc:	b.eq	43ab14 <_obstack_memory_used@@Base+0x2e94>  // b.none
  43ab00:	ldr	x1, [x21, #40]
  43ab04:	add	x19, x1, x19
  43ab08:	ldr	x0, [x19, #16]
  43ab0c:	ldr	x19, [x0]
  43ab10:	b	43aa60 <_obstack_memory_used@@Base+0x2de0>
  43ab14:	ldr	x0, [x0, #16]
  43ab18:	mov	w4, w22
  43ab1c:	mov	x3, x23
  43ab20:	mov	x1, x20
  43ab24:	ldr	x2, [x0, #8]
  43ab28:	mov	x0, x21
  43ab2c:	bl	43aa34 <_obstack_memory_used@@Base+0x2db4>
  43ab30:	cbz	w0, 43ab00 <_obstack_memory_used@@Base+0x2e80>
  43ab34:	b	43aabc <_obstack_memory_used@@Base+0x2e3c>
  43ab38:	stp	x29, x30, [sp, #-96]!
  43ab3c:	mov	x29, sp
  43ab40:	stp	x19, x20, [sp, #16]
  43ab44:	mov	x20, x0
  43ab48:	mov	x19, x2
  43ab4c:	stp	x21, x22, [sp, #32]
  43ab50:	mov	w22, w4
  43ab54:	stp	x23, x24, [sp, #48]
  43ab58:	mov	x24, x3
  43ab5c:	stp	x25, x26, [sp, #64]
  43ab60:	mov	x25, #0x18                  	// #24
  43ab64:	str	x27, [sp, #80]
  43ab68:	ldr	x3, [x20]
  43ab6c:	mov	x27, x19
  43ab70:	ldr	x0, [x20, #40]
  43ab74:	add	x2, x3, x1, lsl #4
  43ab78:	ldrb	w4, [x2, #8]
  43ab7c:	cmp	w4, #0x4
  43ab80:	b.ne	43ac04 <_obstack_memory_used@@Base+0x2f84>  // b.any
  43ab84:	mul	x26, x19, x25
  43ab88:	lsl	x21, x1, #3
  43ab8c:	ldr	x1, [x20, #24]
  43ab90:	add	x0, x0, x26
  43ab94:	mov	w2, w22
  43ab98:	ldr	x23, [x1, x21]
  43ab9c:	str	xzr, [x0, #8]
  43aba0:	mov	x0, x20
  43aba4:	mov	x1, x23
  43aba8:	bl	43923c <_obstack_memory_used@@Base+0x15bc>
  43abac:	mov	x19, x0
  43abb0:	cmn	x0, #0x1
  43abb4:	b.ne	43abd8 <_obstack_memory_used@@Base+0x2f58>  // b.any
  43abb8:	mov	w0, #0xc                   	// #12
  43abbc:	ldp	x19, x20, [sp, #16]
  43abc0:	ldp	x21, x22, [sp, #32]
  43abc4:	ldp	x23, x24, [sp, #48]
  43abc8:	ldp	x25, x26, [sp, #64]
  43abcc:	ldr	x27, [sp, #80]
  43abd0:	ldp	x29, x30, [sp], #96
  43abd4:	ret
  43abd8:	ldr	x0, [x20, #24]
  43abdc:	ldr	x1, [x0, x21]
  43abe0:	str	x1, [x0, x27, lsl #3]
  43abe4:	ldr	x0, [x20, #40]
  43abe8:	mov	x1, x19
  43abec:	add	x0, x0, x26
  43abf0:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43abf4:	tst	w0, #0xff
  43abf8:	b.eq	43abb8 <_obstack_memory_used@@Base+0x2f38>  // b.none
  43abfc:	mov	x1, x23
  43ac00:	b	43ab68 <_obstack_memory_used@@Base+0x2ee8>
  43ac04:	mul	x26, x1, x25
  43ac08:	add	x5, x0, x26
  43ac0c:	ldr	x4, [x5, #8]
  43ac10:	cbnz	x4, 43ac28 <_obstack_memory_used@@Base+0x2fa8>
  43ac14:	ldr	x0, [x20, #24]
  43ac18:	ldr	x1, [x0, x1, lsl #3]
  43ac1c:	str	x1, [x0, x19, lsl #3]
  43ac20:	mov	w0, #0x0                   	// #0
  43ac24:	b	43abbc <_obstack_memory_used@@Base+0x2f3c>
  43ac28:	mul	x21, x19, x25
  43ac2c:	cmp	x4, #0x1
  43ac30:	ldr	x5, [x5, #16]
  43ac34:	add	x0, x0, x21
  43ac38:	ldr	x23, [x5]
  43ac3c:	str	xzr, [x0, #8]
  43ac40:	b.ne	43aca4 <_obstack_memory_used@@Base+0x3024>  // b.any
  43ac44:	cmp	x1, x24
  43ac48:	ccmp	x1, x19, #0x4, eq  // eq = none
  43ac4c:	b.eq	43ac6c <_obstack_memory_used@@Base+0x2fec>  // b.none
  43ac50:	mov	x1, x23
  43ac54:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43ac58:	mov	w1, w0
  43ac5c:	mov	w0, #0x0                   	// #0
  43ac60:	tst	w1, #0xff
  43ac64:	b.ne	43abbc <_obstack_memory_used@@Base+0x2f3c>  // b.any
  43ac68:	b	43abb8 <_obstack_memory_used@@Base+0x2f38>
  43ac6c:	ldr	w0, [x2, #8]
  43ac70:	ubfx	x0, x0, #8, #10
  43ac74:	orr	w22, w22, w0
  43ac78:	mov	w2, w22
  43ac7c:	mov	x1, x23
  43ac80:	mov	x0, x20
  43ac84:	bl	43923c <_obstack_memory_used@@Base+0x15bc>
  43ac88:	mov	x19, x0
  43ac8c:	cmn	x0, #0x1
  43ac90:	b.eq	43abb8 <_obstack_memory_used@@Base+0x2f38>  // b.none
  43ac94:	mov	x1, x0
  43ac98:	ldr	x0, [x20, #40]
  43ac9c:	add	x0, x0, x21
  43aca0:	b	43abf0 <_obstack_memory_used@@Base+0x2f70>
  43aca4:	ldr	x1, [x20, #16]
  43aca8:	sub	x1, x1, #0x1
  43acac:	add	x2, x3, x1, lsl #4
  43acb0:	ldrb	w4, [x2, #10]
  43acb4:	tbz	w4, #2, 43acc0 <_obstack_memory_used@@Base+0x3040>
  43acb8:	cmp	x1, #0x0
  43acbc:	b.gt	43ad24 <_obstack_memory_used@@Base+0x30a4>
  43acc0:	mov	w2, w22
  43acc4:	mov	x1, x23
  43acc8:	mov	x0, x20
  43accc:	bl	43923c <_obstack_memory_used@@Base+0x15bc>
  43acd0:	mov	x19, x0
  43acd4:	cmn	x0, #0x1
  43acd8:	b.eq	43abb8 <_obstack_memory_used@@Base+0x2f38>  // b.none
  43acdc:	ldr	x0, [x20, #40]
  43ace0:	mov	x1, x19
  43ace4:	add	x0, x0, x21
  43ace8:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43acec:	tst	w0, #0xff
  43acf0:	b.eq	43abb8 <_obstack_memory_used@@Base+0x2f38>  // b.none
  43acf4:	mov	w4, w22
  43acf8:	mov	x3, x24
  43acfc:	mov	x2, x19
  43ad00:	mov	x1, x23
  43ad04:	mov	x0, x20
  43ad08:	bl	43ab38 <_obstack_memory_used@@Base+0x2eb8>
  43ad0c:	cbnz	w0, 43abbc <_obstack_memory_used@@Base+0x2f3c>
  43ad10:	ldr	x0, [x20, #40]
  43ad14:	add	x26, x0, x26
  43ad18:	ldr	x0, [x26, #16]
  43ad1c:	ldr	x23, [x0, #8]
  43ad20:	b	43ac78 <_obstack_memory_used@@Base+0x2ff8>
  43ad24:	ldr	x4, [x20, #32]
  43ad28:	ldr	x4, [x4, x1, lsl #3]
  43ad2c:	cmp	x4, x23
  43ad30:	b.ne	43aca8 <_obstack_memory_used@@Base+0x3028>  // b.any
  43ad34:	ldr	w2, [x2, #8]
  43ad38:	ubfx	x2, x2, #8, #10
  43ad3c:	cmp	w22, w2
  43ad40:	b.ne	43aca8 <_obstack_memory_used@@Base+0x3028>  // b.any
  43ad44:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43ad48:	tst	w0, #0xff
  43ad4c:	b.ne	43ad10 <_obstack_memory_used@@Base+0x3090>  // b.any
  43ad50:	b	43abb8 <_obstack_memory_used@@Base+0x2f38>
  43ad54:	stp	x29, x30, [sp, #-144]!
  43ad58:	mov	x29, sp
  43ad5c:	stp	x21, x22, [sp, #32]
  43ad60:	mov	x22, #0x18                  	// #24
  43ad64:	stp	x23, x24, [sp, #48]
  43ad68:	mov	x23, x0
  43ad6c:	mul	x22, x2, x22
  43ad70:	ldr	x0, [x1, #40]
  43ad74:	stp	x19, x20, [sp, #16]
  43ad78:	mov	x19, x1
  43ad7c:	add	x0, x0, x22
  43ad80:	mov	x20, x2
  43ad84:	stp	x25, x26, [sp, #64]
  43ad88:	and	w26, w3, #0xff
  43ad8c:	ldr	x1, [x0, #8]
  43ad90:	add	x0, sp, #0x60
  43ad94:	stp	x27, x28, [sp, #80]
  43ad98:	add	x1, x1, #0x1
  43ad9c:	bl	438684 <_obstack_memory_used@@Base+0xa04>
  43ada0:	mov	w21, w0
  43ada4:	cbnz	w0, 43ae20 <_obstack_memory_used@@Base+0x31a0>
  43ada8:	ldr	x0, [x19, #48]
  43adac:	mov	x1, #0xffffffffffffffff    	// #-1
  43adb0:	lsl	x24, x20, #4
  43adb4:	add	x0, x0, x22
  43adb8:	str	x1, [x0, #8]
  43adbc:	ldr	x1, [x19]
  43adc0:	add	x0, x1, x20, lsl #4
  43adc4:	ldr	w4, [x0, #8]
  43adc8:	tst	w4, #0x3ff00
  43adcc:	b.ne	43ae40 <_obstack_memory_used@@Base+0x31c0>  // b.any
  43add0:	ldr	x0, [x19]
  43add4:	add	x0, x0, x24
  43add8:	mov	w24, #0x0                   	// #0
  43addc:	ldrb	w0, [x0, #8]
  43ade0:	tbnz	w0, #3, 43af20 <_obstack_memory_used@@Base+0x32a0>
  43ade4:	mov	x1, x20
  43ade8:	add	x0, sp, #0x60
  43adec:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43adf0:	tst	w0, #0xff
  43adf4:	b.eq	43af40 <_obstack_memory_used@@Base+0x32c0>  // b.none
  43adf8:	ldr	x0, [x19, #48]
  43adfc:	eor	w26, w26, #0x1
  43ae00:	tst	w24, w26
  43ae04:	add	x22, x0, x22
  43ae08:	b.eq	43af2c <_obstack_memory_used@@Base+0x32ac>  // b.none
  43ae0c:	str	xzr, [x22, #8]
  43ae10:	ldp	x0, x1, [sp, #96]
  43ae14:	stp	x0, x1, [x23]
  43ae18:	ldr	x0, [sp, #112]
  43ae1c:	str	x0, [x23, #16]
  43ae20:	mov	w0, w21
  43ae24:	ldp	x19, x20, [sp, #16]
  43ae28:	ldp	x21, x22, [sp, #32]
  43ae2c:	ldp	x23, x24, [sp, #48]
  43ae30:	ldp	x25, x26, [sp, #64]
  43ae34:	ldp	x27, x28, [sp, #80]
  43ae38:	ldp	x29, x30, [sp], #144
  43ae3c:	ret
  43ae40:	ldr	x0, [x19, #40]
  43ae44:	add	x0, x0, x22
  43ae48:	ldr	x2, [x0, #8]
  43ae4c:	cbz	x2, 43add0 <_obstack_memory_used@@Base+0x3150>
  43ae50:	ldr	x0, [x0, #16]
  43ae54:	ldr	x0, [x0]
  43ae58:	add	x0, x1, x0, lsl #4
  43ae5c:	ldrb	w0, [x0, #10]
  43ae60:	tbnz	w0, #2, 43add0 <_obstack_memory_used@@Base+0x3150>
  43ae64:	ubfx	x4, x4, #8, #10
  43ae68:	mov	x3, x20
  43ae6c:	mov	x2, x20
  43ae70:	mov	x1, x20
  43ae74:	mov	x0, x19
  43ae78:	bl	43ab38 <_obstack_memory_used@@Base+0x2eb8>
  43ae7c:	cbz	w0, 43add0 <_obstack_memory_used@@Base+0x3150>
  43ae80:	mov	w21, w0
  43ae84:	b	43ae20 <_obstack_memory_used@@Base+0x31a0>
  43ae88:	ldr	x0, [x0, #16]
  43ae8c:	ldr	x2, [x0, x25, lsl #3]
  43ae90:	ldr	x0, [x19, #48]
  43ae94:	mul	x27, x2, x28
  43ae98:	add	x0, x0, x27
  43ae9c:	ldr	x1, [x0, #8]
  43aea0:	cmn	x1, #0x1
  43aea4:	b.ne	43aec8 <_obstack_memory_used@@Base+0x3248>  // b.any
  43aea8:	mov	w24, #0x1                   	// #1
  43aeac:	add	x25, x25, #0x1
  43aeb0:	ldr	x0, [x19, #40]
  43aeb4:	add	x0, x0, x22
  43aeb8:	ldr	x1, [x0, #8]
  43aebc:	cmp	x1, x25
  43aec0:	b.gt	43ae88 <_obstack_memory_used@@Base+0x3208>
  43aec4:	b	43ade4 <_obstack_memory_used@@Base+0x3164>
  43aec8:	cbnz	x1, 43af0c <_obstack_memory_used@@Base+0x328c>
  43aecc:	mov	x1, x19
  43aed0:	add	x0, sp, #0x78
  43aed4:	mov	w3, #0x0                   	// #0
  43aed8:	bl	43ad54 <_obstack_memory_used@@Base+0x30d4>
  43aedc:	cbnz	w0, 43ae80 <_obstack_memory_used@@Base+0x3200>
  43aee0:	add	x1, sp, #0x78
  43aee4:	add	x0, sp, #0x60
  43aee8:	bl	43a198 <_obstack_memory_used@@Base+0x2518>
  43aeec:	cbnz	w0, 43ae80 <_obstack_memory_used@@Base+0x3200>
  43aef0:	ldr	x0, [x19, #48]
  43aef4:	add	x27, x0, x27
  43aef8:	ldr	x0, [x27, #8]
  43aefc:	cbnz	x0, 43aeac <_obstack_memory_used@@Base+0x322c>
  43af00:	ldr	x0, [sp, #136]
  43af04:	bl	404ae0 <free@plt>
  43af08:	b	43aea8 <_obstack_memory_used@@Base+0x3228>
  43af0c:	ldp	x2, x3, [x0]
  43af10:	stp	x2, x3, [sp, #120]
  43af14:	ldr	x0, [x0, #16]
  43af18:	str	x0, [sp, #136]
  43af1c:	b	43aee0 <_obstack_memory_used@@Base+0x3260>
  43af20:	mov	x25, #0x0                   	// #0
  43af24:	mov	x28, #0x18                  	// #24
  43af28:	b	43aeb0 <_obstack_memory_used@@Base+0x3230>
  43af2c:	ldp	x0, x1, [sp, #96]
  43af30:	stp	x0, x1, [x22]
  43af34:	ldr	x0, [sp, #112]
  43af38:	str	x0, [x22, #16]
  43af3c:	b	43ae10 <_obstack_memory_used@@Base+0x3190>
  43af40:	mov	w21, #0xc                   	// #12
  43af44:	b	43ae20 <_obstack_memory_used@@Base+0x31a0>
  43af48:	stp	x29, x30, [sp, #-64]!
  43af4c:	mov	x29, sp
  43af50:	stp	x23, x24, [sp, #48]
  43af54:	mov	x24, x1
  43af58:	stp	x19, x20, [sp, #16]
  43af5c:	mov	x20, x1
  43af60:	mov	x19, x2
  43af64:	ldr	x1, [x1, #16]
  43af68:	stp	x21, x22, [sp, #32]
  43af6c:	mov	x22, x0
  43af70:	str	x2, [x24], #32
  43af74:	mov	x0, x24
  43af78:	bl	438684 <_obstack_memory_used@@Base+0xa04>
  43af7c:	cbz	w0, 43b034 <_obstack_memory_used@@Base+0x33b4>
  43af80:	mov	w21, #0xc                   	// #12
  43af84:	mov	w0, w21
  43af88:	ldp	x19, x20, [sp, #16]
  43af8c:	ldp	x21, x22, [sp, #32]
  43af90:	ldp	x23, x24, [sp, #48]
  43af94:	ldp	x29, x30, [sp], #64
  43af98:	ret
  43af9c:	ldr	x0, [x20, #24]
  43afa0:	ldr	x1, [x0, x23, lsl #3]
  43afa4:	ldr	x0, [x22]
  43afa8:	add	x0, x0, x1, lsl #4
  43afac:	ldrb	w0, [x0, #8]
  43afb0:	tbz	w0, #3, 43b020 <_obstack_memory_used@@Base+0x33a0>
  43afb4:	add	x23, x23, #0x1
  43afb8:	ldr	x0, [x20, #16]
  43afbc:	cmp	x0, x23
  43afc0:	b.gt	43af9c <_obstack_memory_used@@Base+0x331c>
  43afc4:	ldr	x2, [x22, #136]
  43afc8:	ldr	x23, [x22, #64]
  43afcc:	and	x19, x19, x2
  43afd0:	mov	x2, #0x18                  	// #24
  43afd4:	mul	x19, x19, x2
  43afd8:	add	x22, x23, x19
  43afdc:	ldr	x1, [x23, x19]
  43afe0:	ldr	x0, [x22, #8]
  43afe4:	cmp	x0, x1
  43afe8:	b.gt	43b008 <_obstack_memory_used@@Base+0x3388>
  43afec:	ldr	x0, [x22, #16]
  43aff0:	add	x1, x1, #0x1
  43aff4:	lsl	x24, x1, #1
  43aff8:	lsl	x1, x1, #4
  43affc:	bl	404820 <realloc@plt>
  43b000:	cbz	x0, 43af80 <_obstack_memory_used@@Base+0x3300>
  43b004:	stp	x24, x0, [x22, #8]
  43b008:	ldr	x0, [x23, x19]
  43b00c:	ldr	x1, [x22, #16]
  43b010:	add	x2, x0, #0x1
  43b014:	str	x2, [x23, x19]
  43b018:	str	x20, [x1, x0, lsl #3]
  43b01c:	b	43af84 <_obstack_memory_used@@Base+0x3304>
  43b020:	mov	x0, x24
  43b024:	bl	4385cc <_obstack_memory_used@@Base+0x94c>
  43b028:	tst	w0, #0xff
  43b02c:	b.ne	43afb4 <_obstack_memory_used@@Base+0x3334>  // b.any
  43b030:	b	43af80 <_obstack_memory_used@@Base+0x3300>
  43b034:	mov	w21, w0
  43b038:	mov	x23, #0x0                   	// #0
  43b03c:	b	43afb8 <_obstack_memory_used@@Base+0x3338>
  43b040:	stp	x29, x30, [sp, #-48]!
  43b044:	mov	x29, sp
  43b048:	stp	x19, x20, [sp, #16]
  43b04c:	mov	x19, x0
  43b050:	ldr	x2, [x1, #8]
  43b054:	str	x21, [sp, #32]
  43b058:	str	x2, [x0, #8]
  43b05c:	cmp	x2, #0x0
  43b060:	b.le	43b0ac <_obstack_memory_used@@Base+0x342c>
  43b064:	str	x2, [x19]
  43b068:	lsl	x20, x2, #3
  43b06c:	mov	x21, x1
  43b070:	mov	x0, x20
  43b074:	bl	4045f0 <malloc@plt>
  43b078:	str	x0, [x19, #16]
  43b07c:	cbnz	x0, 43b098 <_obstack_memory_used@@Base+0x3418>
  43b080:	mov	w0, #0xc                   	// #12
  43b084:	stp	xzr, xzr, [x19]
  43b088:	ldp	x19, x20, [sp, #16]
  43b08c:	ldr	x21, [sp, #32]
  43b090:	ldp	x29, x30, [sp], #48
  43b094:	ret
  43b098:	ldr	x1, [x21, #16]
  43b09c:	mov	x2, x20
  43b0a0:	bl	404200 <memcpy@plt>
  43b0a4:	mov	w0, #0x0                   	// #0
  43b0a8:	b	43b088 <_obstack_memory_used@@Base+0x3408>
  43b0ac:	stp	xzr, xzr, [x0]
  43b0b0:	str	xzr, [x0, #16]
  43b0b4:	b	43b0a4 <_obstack_memory_used@@Base+0x3424>
  43b0b8:	stp	x29, x30, [sp, #-64]!
  43b0bc:	mov	x29, sp
  43b0c0:	stp	x19, x20, [sp, #16]
  43b0c4:	mov	x19, x0
  43b0c8:	stp	x21, x22, [sp, #32]
  43b0cc:	mov	x21, x2
  43b0d0:	str	x23, [sp, #48]
  43b0d4:	cbz	x1, 43b134 <_obstack_memory_used@@Base+0x34b4>
  43b0d8:	ldr	x22, [x1, #8]
  43b0dc:	mov	x23, x1
  43b0e0:	cmp	x22, #0x0
  43b0e4:	b.le	43b134 <_obstack_memory_used@@Base+0x34b4>
  43b0e8:	cbz	x2, 43b118 <_obstack_memory_used@@Base+0x3498>
  43b0ec:	ldr	x20, [x2, #8]
  43b0f0:	cmp	x20, #0x0
  43b0f4:	b.le	43b118 <_obstack_memory_used@@Base+0x3498>
  43b0f8:	add	x0, x22, x20
  43b0fc:	str	x0, [x19]
  43b100:	lsl	x0, x0, #3
  43b104:	bl	4045f0 <malloc@plt>
  43b108:	str	x0, [x19, #16]
  43b10c:	cbnz	x0, 43b16c <_obstack_memory_used@@Base+0x34ec>
  43b110:	mov	w0, #0xc                   	// #12
  43b114:	b	43b158 <_obstack_memory_used@@Base+0x34d8>
  43b118:	mov	x1, x23
  43b11c:	mov	x0, x19
  43b120:	ldp	x19, x20, [sp, #16]
  43b124:	ldp	x21, x22, [sp, #32]
  43b128:	ldr	x23, [sp, #48]
  43b12c:	ldp	x29, x30, [sp], #64
  43b130:	b	43b040 <_obstack_memory_used@@Base+0x33c0>
  43b134:	cbz	x21, 43b14c <_obstack_memory_used@@Base+0x34cc>
  43b138:	ldr	x0, [x21, #8]
  43b13c:	cmp	x0, #0x0
  43b140:	b.le	43b14c <_obstack_memory_used@@Base+0x34cc>
  43b144:	mov	x1, x21
  43b148:	b	43b11c <_obstack_memory_used@@Base+0x349c>
  43b14c:	stp	xzr, xzr, [x19]
  43b150:	str	xzr, [x19, #16]
  43b154:	mov	w0, #0x0                   	// #0
  43b158:	ldp	x19, x20, [sp, #16]
  43b15c:	ldp	x21, x22, [sp, #32]
  43b160:	ldr	x23, [sp, #48]
  43b164:	ldp	x29, x30, [sp], #64
  43b168:	ret
  43b16c:	ldr	x5, [x23, #16]
  43b170:	mov	x3, #0x0                   	// #0
  43b174:	mov	x4, #0x0                   	// #0
  43b178:	ldr	x1, [x21, #16]
  43b17c:	mov	x21, #0x0                   	// #0
  43b180:	ldr	x7, [x5, x4, lsl #3]
  43b184:	mov	x6, x21
  43b188:	ldr	x8, [x1, x3, lsl #3]
  43b18c:	add	x21, x21, #0x1
  43b190:	mov	x2, x21
  43b194:	cmp	x7, x8
  43b198:	b.le	43b1d4 <_obstack_memory_used@@Base+0x3554>
  43b19c:	add	x3, x3, #0x1
  43b1a0:	str	x8, [x0, x6, lsl #3]
  43b1a4:	cmp	x22, x4
  43b1a8:	b.le	43b1e8 <_obstack_memory_used@@Base+0x3568>
  43b1ac:	cmp	x20, x3
  43b1b0:	b.gt	43b180 <_obstack_memory_used@@Base+0x3500>
  43b1b4:	sub	x22, x22, x4
  43b1b8:	add	x1, x5, x4, lsl #3
  43b1bc:	add	x0, x0, x21, lsl #3
  43b1c0:	lsl	x2, x22, #3
  43b1c4:	bl	404200 <memcpy@plt>
  43b1c8:	add	x2, x21, x22
  43b1cc:	str	x2, [x19, #8]
  43b1d0:	b	43b154 <_obstack_memory_used@@Base+0x34d4>
  43b1d4:	cset	x8, eq  // eq = none
  43b1d8:	add	x4, x4, #0x1
  43b1dc:	add	x3, x3, x8
  43b1e0:	str	x7, [x0, x6, lsl #3]
  43b1e4:	b	43b1a4 <_obstack_memory_used@@Base+0x3524>
  43b1e8:	cmp	x20, x3
  43b1ec:	b.le	43b1cc <_obstack_memory_used@@Base+0x354c>
  43b1f0:	sub	x20, x20, x3
  43b1f4:	add	x1, x1, x3, lsl #3
  43b1f8:	add	x0, x0, x21, lsl #3
  43b1fc:	lsl	x2, x20, #3
  43b200:	bl	404200 <memcpy@plt>
  43b204:	add	x2, x21, x20
  43b208:	b	43b1cc <_obstack_memory_used@@Base+0x354c>
  43b20c:	stp	x29, x30, [sp, #-112]!
  43b210:	mov	x29, sp
  43b214:	stp	x21, x22, [sp, #32]
  43b218:	mov	x21, x1
  43b21c:	ldr	x1, [x2, #8]
  43b220:	stp	x19, x20, [sp, #16]
  43b224:	stp	x23, x24, [sp, #48]
  43b228:	mov	x23, x0
  43b22c:	stp	x25, x26, [sp, #64]
  43b230:	stp	x27, x28, [sp, #80]
  43b234:	cbnz	x1, 43b244 <_obstack_memory_used@@Base+0x35c4>
  43b238:	str	wzr, [x0]
  43b23c:	mov	x19, #0x0                   	// #0
  43b240:	b	43b35c <_obstack_memory_used@@Base+0x36dc>
  43b244:	mov	x27, x2
  43b248:	mov	w20, w3
  43b24c:	add	x22, x1, w3, uxtw
  43b250:	mov	x0, #0x0                   	// #0
  43b254:	cmp	x1, x0
  43b258:	b.gt	43b2c0 <_obstack_memory_used@@Base+0x3640>
  43b25c:	ldr	x0, [x21, #136]
  43b260:	mov	x1, #0x18                  	// #24
  43b264:	mov	x7, #0x0                   	// #0
  43b268:	and	x0, x22, x0
  43b26c:	mul	x0, x0, x1
  43b270:	ldr	x1, [x21, #64]
  43b274:	add	x9, x1, x0
  43b278:	ldr	x8, [x1, x0]
  43b27c:	cmp	x8, x7
  43b280:	b.gt	43b2d4 <_obstack_memory_used@@Base+0x3654>
  43b284:	mov	x1, #0x1                   	// #1
  43b288:	mov	x0, #0x70                  	// #112
  43b28c:	bl	4047a0 <calloc@plt>
  43b290:	mov	x19, x0
  43b294:	cbz	x0, 43b2b4 <_obstack_memory_used@@Base+0x3634>
  43b298:	add	x24, x0, #0x8
  43b29c:	mov	x1, x27
  43b2a0:	mov	x0, x24
  43b2a4:	bl	43b040 <_obstack_memory_used@@Base+0x33c0>
  43b2a8:	cbz	w0, 43b314 <_obstack_memory_used@@Base+0x3694>
  43b2ac:	mov	x0, x19
  43b2b0:	bl	404ae0 <free@plt>
  43b2b4:	mov	w0, #0xc                   	// #12
  43b2b8:	str	w0, [x23]
  43b2bc:	b	43b23c <_obstack_memory_used@@Base+0x35bc>
  43b2c0:	ldr	x2, [x27, #16]
  43b2c4:	ldr	x2, [x2, x0, lsl #3]
  43b2c8:	add	x0, x0, #0x1
  43b2cc:	add	x22, x22, x2
  43b2d0:	b	43b254 <_obstack_memory_used@@Base+0x35d4>
  43b2d4:	ldr	x0, [x9, #16]
  43b2d8:	ldr	x19, [x0, x7, lsl #3]
  43b2dc:	ldr	x0, [x19]
  43b2e0:	cmp	x0, x22
  43b2e4:	b.ne	43b30c <_obstack_memory_used@@Base+0x368c>  // b.any
  43b2e8:	ldrb	w0, [x19, #104]
  43b2ec:	and	w0, w0, #0xf
  43b2f0:	cmp	w0, w20
  43b2f4:	b.ne	43b30c <_obstack_memory_used@@Base+0x368c>  // b.any
  43b2f8:	ldr	x0, [x19, #80]
  43b2fc:	mov	x1, x27
  43b300:	bl	437ebc <_obstack_memory_used@@Base+0x23c>
  43b304:	tst	w0, #0xff
  43b308:	b.ne	43b35c <_obstack_memory_used@@Base+0x36dc>  // b.any
  43b30c:	add	x7, x7, #0x1
  43b310:	b	43b27c <_obstack_memory_used@@Base+0x35fc>
  43b314:	ldrb	w0, [x19, #104]
  43b318:	and	w26, w20, #0x2
  43b31c:	mov	x5, #0x0                   	// #0
  43b320:	mov	x25, #0x0                   	// #0
  43b324:	str	x24, [x19, #80]
  43b328:	bfxil	w0, w20, #0, #4
  43b32c:	strb	w0, [x19, #104]
  43b330:	and	w0, w20, #0x4
  43b334:	and	w20, w20, #0x1
  43b338:	str	w0, [sp, #108]
  43b33c:	ldr	x0, [x27, #8]
  43b340:	cmp	x25, x0
  43b344:	b.lt	43b37c <_obstack_memory_used@@Base+0x36fc>  // b.tstop
  43b348:	mov	x2, x22
  43b34c:	mov	x1, x19
  43b350:	mov	x0, x21
  43b354:	bl	43af48 <_obstack_memory_used@@Base+0x32c8>
  43b358:	cbnz	w0, 43b3f0 <_obstack_memory_used@@Base+0x3770>
  43b35c:	mov	x0, x19
  43b360:	ldp	x19, x20, [sp, #16]
  43b364:	ldp	x21, x22, [sp, #32]
  43b368:	ldp	x23, x24, [sp, #48]
  43b36c:	ldp	x25, x26, [sp, #64]
  43b370:	ldp	x27, x28, [sp, #80]
  43b374:	ldp	x29, x30, [sp], #112
  43b378:	ret
  43b37c:	ldr	x0, [x27, #16]
  43b380:	ldr	x1, [x21]
  43b384:	ldr	x0, [x0, x25, lsl #3]
  43b388:	add	x0, x1, x0, lsl #4
  43b38c:	ldr	w28, [x0, #8]
  43b390:	ldrb	w1, [x0, #8]
  43b394:	ubfx	x28, x28, #8, #10
  43b398:	cmp	w28, #0x0
  43b39c:	ccmp	w1, #0x1, #0x0, eq  // eq = none
  43b3a0:	b.eq	43b45c <_obstack_memory_used@@Base+0x37dc>  // b.none
  43b3a4:	ldrb	w3, [x19, #104]
  43b3a8:	cmp	w1, #0x2
  43b3ac:	ldrb	w0, [x0, #10]
  43b3b0:	ubfx	x4, x3, #5, #1
  43b3b4:	ubfx	x0, x0, #4, #1
  43b3b8:	orr	w0, w4, w0
  43b3bc:	bfi	w3, w0, #5, #1
  43b3c0:	strb	w3, [x19, #104]
  43b3c4:	b.ne	43b3fc <_obstack_memory_used@@Base+0x377c>  // b.any
  43b3c8:	orr	w3, w3, #0x10
  43b3cc:	strb	w3, [x19, #104]
  43b3d0:	cbz	w28, 43b45c <_obstack_memory_used@@Base+0x37dc>
  43b3d4:	ldr	x0, [x19, #80]
  43b3d8:	cmp	x24, x0
  43b3dc:	b.ne	43b428 <_obstack_memory_used@@Base+0x37a8>  // b.any
  43b3e0:	mov	x0, #0x18                  	// #24
  43b3e4:	bl	4045f0 <malloc@plt>
  43b3e8:	str	x0, [x19, #80]
  43b3ec:	cbnz	x0, 43b40c <_obstack_memory_used@@Base+0x378c>
  43b3f0:	mov	x0, x19
  43b3f4:	bl	4392c8 <_obstack_memory_used@@Base+0x1648>
  43b3f8:	b	43b2b4 <_obstack_memory_used@@Base+0x3634>
  43b3fc:	cmp	w1, #0x4
  43b400:	b.ne	43b3d0 <_obstack_memory_used@@Base+0x3750>  // b.any
  43b404:	orr	w3, w3, #0x40
  43b408:	b	43b3cc <_obstack_memory_used@@Base+0x374c>
  43b40c:	mov	x1, x27
  43b410:	bl	43b040 <_obstack_memory_used@@Base+0x33c0>
  43b414:	cbnz	w0, 43b2b4 <_obstack_memory_used@@Base+0x3634>
  43b418:	ldrb	w0, [x19, #104]
  43b41c:	mov	x5, #0x0                   	// #0
  43b420:	orr	w0, w0, #0xffffff80
  43b424:	strb	w0, [x19, #104]
  43b428:	tbz	w28, #0, 43b430 <_obstack_memory_used@@Base+0x37b0>
  43b42c:	cbz	w20, 43b44c <_obstack_memory_used@@Base+0x37cc>
  43b430:	tbz	w28, #1, 43b438 <_obstack_memory_used@@Base+0x37b8>
  43b434:	cbnz	w20, 43b44c <_obstack_memory_used@@Base+0x37cc>
  43b438:	tbz	w28, #4, 43b440 <_obstack_memory_used@@Base+0x37c0>
  43b43c:	cbz	w26, 43b44c <_obstack_memory_used@@Base+0x37cc>
  43b440:	tbz	w28, #6, 43b45c <_obstack_memory_used@@Base+0x37dc>
  43b444:	ldr	w0, [sp, #108]
  43b448:	cbnz	w0, 43b45c <_obstack_memory_used@@Base+0x37dc>
  43b44c:	sub	x1, x25, x5
  43b450:	mov	x0, x24
  43b454:	bl	43a068 <_obstack_memory_used@@Base+0x23e8>
  43b458:	add	x5, x5, #0x1
  43b45c:	add	x25, x25, #0x1
  43b460:	b	43b33c <_obstack_memory_used@@Base+0x36bc>
  43b464:	stp	x29, x30, [sp, #-112]!
  43b468:	mov	x29, sp
  43b46c:	stp	x19, x20, [sp, #16]
  43b470:	mov	x20, x2
  43b474:	ldr	x19, [x0, #56]
  43b478:	stp	x25, x26, [sp, #64]
  43b47c:	mov	x25, #0x18                  	// #24
  43b480:	mov	x26, x3
  43b484:	stp	x21, x22, [sp, #32]
  43b488:	madd	x19, x1, x25, x19
  43b48c:	mov	x21, x0
  43b490:	stp	x23, x24, [sp, #48]
  43b494:	mov	x24, x1
  43b498:	mov	x23, #0x0                   	// #0
  43b49c:	stp	xzr, xzr, [sp, #88]
  43b4a0:	str	xzr, [sp, #104]
  43b4a4:	ldr	x0, [x19, #8]
  43b4a8:	cmp	x0, x23
  43b4ac:	b.gt	43b4d0 <_obstack_memory_used@@Base+0x3850>
  43b4b0:	mov	x6, #0x0                   	// #0
  43b4b4:	ldr	x0, [x19, #8]
  43b4b8:	cmp	x0, x6
  43b4bc:	b.gt	43b5a0 <_obstack_memory_used@@Base+0x3920>
  43b4c0:	ldr	x0, [sp, #104]
  43b4c4:	mov	w22, #0x0                   	// #0
  43b4c8:	bl	404ae0 <free@plt>
  43b4cc:	b	43b574 <_obstack_memory_used@@Base+0x38f4>
  43b4d0:	ldr	x0, [x19, #16]
  43b4d4:	ldr	x2, [x0, x23, lsl #3]
  43b4d8:	cmp	x24, x2
  43b4dc:	b.eq	43b598 <_obstack_memory_used@@Base+0x3918>  // b.none
  43b4e0:	ldr	x0, [x21]
  43b4e4:	add	x0, x0, x2, lsl #4
  43b4e8:	ldrb	w0, [x0, #8]
  43b4ec:	tbz	w0, #3, 43b598 <_obstack_memory_used@@Base+0x3918>
  43b4f0:	ldr	x0, [x21, #40]
  43b4f4:	mul	x6, x2, x25
  43b4f8:	add	x0, x0, x6
  43b4fc:	ldr	x2, [x0, #16]
  43b500:	ldr	x0, [x0, #8]
  43b504:	ldr	x1, [x2]
  43b508:	cmp	x0, #0x1
  43b50c:	b.le	43b590 <_obstack_memory_used@@Base+0x3910>
  43b510:	ldr	x7, [x2, #8]
  43b514:	mov	x0, x19
  43b518:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43b51c:	cbnz	x0, 43b52c <_obstack_memory_used@@Base+0x38ac>
  43b520:	mov	x0, x20
  43b524:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43b528:	cbnz	x0, 43b550 <_obstack_memory_used@@Base+0x38d0>
  43b52c:	cmp	x7, #0x0
  43b530:	b.le	43b598 <_obstack_memory_used@@Base+0x3918>
  43b534:	mov	x1, x7
  43b538:	mov	x0, x19
  43b53c:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43b540:	cbnz	x0, 43b598 <_obstack_memory_used@@Base+0x3918>
  43b544:	mov	x0, x20
  43b548:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43b54c:	cbz	x0, 43b598 <_obstack_memory_used@@Base+0x3918>
  43b550:	ldr	x2, [x21, #56]
  43b554:	mov	x1, x26
  43b558:	add	x0, sp, #0x58
  43b55c:	add	x2, x2, x6
  43b560:	bl	43a304 <_obstack_memory_used@@Base+0x2684>
  43b564:	mov	w22, w0
  43b568:	cbz	w0, 43b598 <_obstack_memory_used@@Base+0x3918>
  43b56c:	ldr	x0, [sp, #104]
  43b570:	bl	404ae0 <free@plt>
  43b574:	mov	w0, w22
  43b578:	ldp	x19, x20, [sp, #16]
  43b57c:	ldp	x21, x22, [sp, #32]
  43b580:	ldp	x23, x24, [sp, #48]
  43b584:	ldp	x25, x26, [sp, #64]
  43b588:	ldp	x29, x30, [sp], #112
  43b58c:	ret
  43b590:	mov	x7, #0xffffffffffffffff    	// #-1
  43b594:	b	43b514 <_obstack_memory_used@@Base+0x3894>
  43b598:	add	x23, x23, #0x1
  43b59c:	b	43b4a4 <_obstack_memory_used@@Base+0x3824>
  43b5a0:	ldr	x0, [x19, #16]
  43b5a4:	ldr	x1, [x0, x6, lsl #3]
  43b5a8:	add	x0, sp, #0x58
  43b5ac:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43b5b0:	cbnz	x0, 43b5c8 <_obstack_memory_used@@Base+0x3948>
  43b5b4:	mov	x0, x20
  43b5b8:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43b5bc:	sub	x1, x0, #0x1
  43b5c0:	mov	x0, x20
  43b5c4:	bl	43a068 <_obstack_memory_used@@Base+0x23e8>
  43b5c8:	add	x6, x6, #0x1
  43b5cc:	b	43b4b4 <_obstack_memory_used@@Base+0x3834>
  43b5d0:	stp	x29, x30, [sp, #-400]!
  43b5d4:	mov	x29, sp
  43b5d8:	stp	x19, x20, [sp, #16]
  43b5dc:	mov	x19, x2
  43b5e0:	ldr	x20, [x0]
  43b5e4:	stp	x21, x22, [sp, #32]
  43b5e8:	mov	x21, x0
  43b5ec:	stp	x23, x24, [sp, #48]
  43b5f0:	ldr	w0, [x20, #180]
  43b5f4:	stp	x25, x26, [sp, #64]
  43b5f8:	cmp	w0, #0x1
  43b5fc:	stp	x27, x28, [sp, #80]
  43b600:	mov	x27, x1
  43b604:	b.ne	43b714 <_obstack_memory_used@@Base+0x3a94>  // b.any
  43b608:	ldr	x25, [x21, #24]
  43b60c:	ubfx	w25, w25, #22, #1
  43b610:	add	x22, sp, #0x90
  43b614:	mov	x26, #0x0                   	// #0
  43b618:	ldr	x0, [x27, #16]
  43b61c:	cmp	x0, x26
  43b620:	b.le	43b8f0 <_obstack_memory_used@@Base+0x3c70>
  43b624:	ldr	x0, [x27, #24]
  43b628:	ldr	x2, [x20]
  43b62c:	ldr	x24, [x0, x26, lsl #3]
  43b630:	add	x0, x2, x24, lsl #4
  43b634:	lsl	x28, x24, #4
  43b638:	ldrb	w23, [x0, #8]
  43b63c:	cmp	w23, #0x1
  43b640:	b.ne	43b728 <_obstack_memory_used@@Base+0x3aa8>  // b.any
  43b644:	ldrb	w0, [x2, x28]
  43b648:	ldrb	w2, [x2, x28]
  43b64c:	strb	w23, [x19, x2]
  43b650:	cbz	w25, 43b65c <_obstack_memory_used@@Base+0x39dc>
  43b654:	bl	404e20 <tolower@plt>
  43b658:	strb	w23, [x19, w0, sxtw]
  43b65c:	ldr	x0, [x21, #24]
  43b660:	tbz	w0, #22, 43b70c <_obstack_memory_used@@Base+0x3a8c>
  43b664:	ldr	w0, [x20, #180]
  43b668:	cmp	w0, #0x1
  43b66c:	b.le	43b70c <_obstack_memory_used@@Base+0x3a8c>
  43b670:	ldr	x0, [x20]
  43b674:	mov	w3, #0x1                   	// #1
  43b678:	add	x2, x22, #0x1
  43b67c:	movk	w3, #0x20, lsl #16
  43b680:	ldrb	w0, [x0, x28]
  43b684:	strb	w0, [sp, #144]
  43b688:	ldr	x0, [x20, #16]
  43b68c:	add	x24, x24, #0x1
  43b690:	cmp	x0, x24
  43b694:	b.ls	43b6bc <_obstack_memory_used@@Base+0x3a3c>  // b.plast
  43b698:	ldr	x1, [x20]
  43b69c:	mov	w5, #0xff                  	// #255
  43b6a0:	movk	w5, #0x20, lsl #16
  43b6a4:	lsl	x4, x24, #4
  43b6a8:	add	x0, x1, x24, lsl #4
  43b6ac:	ldr	w0, [x0, #8]
  43b6b0:	and	w0, w0, w5
  43b6b4:	cmp	w0, w3
  43b6b8:	b.eq	43b71c <_obstack_memory_used@@Base+0x3a9c>  // b.none
  43b6bc:	sub	x23, x2, x22
  43b6c0:	add	x3, sp, #0x88
  43b6c4:	mov	x2, x23
  43b6c8:	mov	x1, x22
  43b6cc:	add	x0, sp, #0x84
  43b6d0:	str	xzr, [sp, #136]
  43b6d4:	bl	4378f0 <argp_usage@@Base+0xa410>
  43b6d8:	cmp	x23, x0
  43b6dc:	b.ne	43b70c <_obstack_memory_used@@Base+0x3a8c>  // b.any
  43b6e0:	ldr	w0, [sp, #132]
  43b6e4:	bl	404ec0 <towlower@plt>
  43b6e8:	mov	w1, w0
  43b6ec:	add	x2, sp, #0x88
  43b6f0:	mov	x0, x22
  43b6f4:	bl	404f50 <wcrtomb@plt>
  43b6f8:	cmn	x0, #0x1
  43b6fc:	b.eq	43b70c <_obstack_memory_used@@Base+0x3a8c>  // b.none
  43b700:	ldrb	w0, [sp, #144]
  43b704:	mov	w1, #0x1                   	// #1
  43b708:	strb	w1, [x19, x0]
  43b70c:	add	x26, x26, #0x1
  43b710:	b	43b618 <_obstack_memory_used@@Base+0x3998>
  43b714:	mov	w25, #0x0                   	// #0
  43b718:	b	43b610 <_obstack_memory_used@@Base+0x3990>
  43b71c:	ldrb	w0, [x1, x4]
  43b720:	strb	w0, [x2], #1
  43b724:	b	43b688 <_obstack_memory_used@@Base+0x3a08>
  43b728:	cmp	w23, #0x3
  43b72c:	b.ne	43b798 <_obstack_memory_used@@Base+0x3b18>  // b.any
  43b730:	mov	x23, #0x0                   	// #0
  43b734:	mov	w3, #0x1                   	// #1
  43b738:	ldr	x0, [x20]
  43b73c:	lsl	x2, x23, #3
  43b740:	mov	w24, #0x0                   	// #0
  43b744:	ldr	x0, [x0, x28]
  43b748:	ldr	x4, [x0, x23]
  43b74c:	lsr	x0, x4, x24
  43b750:	tbz	w0, #0, 43b778 <_obstack_memory_used@@Base+0x3af8>
  43b754:	strb	w3, [x19, x2]
  43b758:	cbz	w25, 43b778 <_obstack_memory_used@@Base+0x3af8>
  43b75c:	mov	w0, w2
  43b760:	stp	x2, x4, [sp, #104]
  43b764:	str	w3, [sp, #124]
  43b768:	bl	404e20 <tolower@plt>
  43b76c:	ldp	x2, x4, [sp, #104]
  43b770:	ldr	w3, [sp, #124]
  43b774:	strb	w3, [x19, w0, sxtw]
  43b778:	add	w24, w24, #0x1
  43b77c:	add	x2, x2, #0x1
  43b780:	cmp	w24, #0x40
  43b784:	b.ne	43b74c <_obstack_memory_used@@Base+0x3acc>  // b.any
  43b788:	add	x23, x23, #0x8
  43b78c:	cmp	x23, #0x20
  43b790:	b.ne	43b738 <_obstack_memory_used@@Base+0x3ab8>  // b.any
  43b794:	b	43b70c <_obstack_memory_used@@Base+0x3a8c>
  43b798:	cmp	w23, #0x6
  43b79c:	b.ne	43b8b8 <_obstack_memory_used@@Base+0x3c38>  // b.any
  43b7a0:	ldr	w0, [x20, #180]
  43b7a4:	ldr	x24, [x2, x28]
  43b7a8:	cmp	w0, #0x1
  43b7ac:	b.le	43b8ac <_obstack_memory_used@@Base+0x3c2c>
  43b7b0:	ldr	x0, [x24, #72]
  43b7b4:	cbnz	x0, 43b7c8 <_obstack_memory_used@@Base+0x3b48>
  43b7b8:	ldrb	w0, [x24, #32]
  43b7bc:	tbnz	w0, #0, 43b7c8 <_obstack_memory_used@@Base+0x3b48>
  43b7c0:	ldr	x28, [x24, #64]
  43b7c4:	cbz	x28, 43b8b0 <_obstack_memory_used@@Base+0x3c30>
  43b7c8:	mov	w23, #0x1                   	// #1
  43b7cc:	strb	wzr, [sp, #136]
  43b7d0:	mov	x3, x22
  43b7d4:	add	x1, sp, #0x88
  43b7d8:	mov	x2, #0x1                   	// #1
  43b7dc:	mov	x0, #0x0                   	// #0
  43b7e0:	str	xzr, [x22]
  43b7e4:	bl	4378f0 <argp_usage@@Base+0xa410>
  43b7e8:	cmn	x0, #0x2
  43b7ec:	b.ne	43b7f8 <_obstack_memory_used@@Base+0x3b78>  // b.any
  43b7f0:	ldrb	w0, [sp, #136]
  43b7f4:	strb	w23, [x19, x0]
  43b7f8:	ldrb	w0, [sp, #136]
  43b7fc:	add	w0, w0, #0x1
  43b800:	and	w0, w0, #0xff
  43b804:	strb	w0, [sp, #136]
  43b808:	cbnz	w0, 43b7d0 <_obstack_memory_used@@Base+0x3b50>
  43b80c:	b	43b70c <_obstack_memory_used@@Base+0x3a8c>
  43b810:	str	xzr, [sp, #136]
  43b814:	lsl	x0, x28, #2
  43b818:	str	x0, [sp, #104]
  43b81c:	lsl	x1, x28, #2
  43b820:	ldr	x0, [x24]
  43b824:	add	x2, sp, #0x88
  43b828:	ldr	w1, [x0, x1]
  43b82c:	mov	x0, x22
  43b830:	bl	404f50 <wcrtomb@plt>
  43b834:	cmn	x0, #0x1
  43b838:	b.eq	43b854 <_obstack_memory_used@@Base+0x3bd4>  // b.none
  43b83c:	ldrb	w1, [sp, #144]
  43b840:	ldrb	w0, [sp, #144]
  43b844:	strb	w23, [x19, x1]
  43b848:	cbz	w25, 43b854 <_obstack_memory_used@@Base+0x3bd4>
  43b84c:	bl	404e20 <tolower@plt>
  43b850:	strb	w23, [x19, w0, sxtw]
  43b854:	ldr	x0, [x21, #24]
  43b858:	tbz	w0, #22, 43b898 <_obstack_memory_used@@Base+0x3c18>
  43b85c:	ldr	w0, [x20, #180]
  43b860:	cmp	w0, #0x1
  43b864:	b.le	43b898 <_obstack_memory_used@@Base+0x3c18>
  43b868:	ldr	x0, [x24]
  43b86c:	lsl	x1, x28, #2
  43b870:	ldr	w0, [x0, x1]
  43b874:	bl	404ec0 <towlower@plt>
  43b878:	mov	w1, w0
  43b87c:	add	x2, sp, #0x88
  43b880:	mov	x0, x22
  43b884:	bl	404f50 <wcrtomb@plt>
  43b888:	cmn	x0, #0x1
  43b88c:	b.eq	43b898 <_obstack_memory_used@@Base+0x3c18>  // b.none
  43b890:	ldrb	w0, [sp, #144]
  43b894:	strb	w23, [x19, x0]
  43b898:	add	x28, x28, #0x1
  43b89c:	ldr	x0, [x24, #40]
  43b8a0:	cmp	x0, x28
  43b8a4:	b.gt	43b810 <_obstack_memory_used@@Base+0x3b90>
  43b8a8:	b	43b70c <_obstack_memory_used@@Base+0x3a8c>
  43b8ac:	mov	x28, #0x0                   	// #0
  43b8b0:	mov	w23, #0x1                   	// #1
  43b8b4:	b	43b89c <_obstack_memory_used@@Base+0x3c1c>
  43b8b8:	and	w0, w23, #0xfffffffd
  43b8bc:	cmp	w0, #0x5
  43b8c0:	b.eq	43b8cc <_obstack_memory_used@@Base+0x3c4c>  // b.none
  43b8c4:	cmp	w23, #0x2
  43b8c8:	b.ne	43b70c <_obstack_memory_used@@Base+0x3a8c>  // b.any
  43b8cc:	mov	x0, x19
  43b8d0:	mov	x2, #0x100                 	// #256
  43b8d4:	mov	w1, #0x1                   	// #1
  43b8d8:	bl	404700 <memset@plt>
  43b8dc:	cmp	w23, #0x2
  43b8e0:	b.ne	43b8f0 <_obstack_memory_used@@Base+0x3c70>  // b.any
  43b8e4:	ldrb	w0, [x21, #56]
  43b8e8:	orr	w0, w0, #0x1
  43b8ec:	strb	w0, [x21, #56]
  43b8f0:	ldp	x19, x20, [sp, #16]
  43b8f4:	ldp	x21, x22, [sp, #32]
  43b8f8:	ldp	x23, x24, [sp, #48]
  43b8fc:	ldp	x25, x26, [sp, #64]
  43b900:	ldp	x27, x28, [sp, #80]
  43b904:	ldp	x29, x30, [sp], #400
  43b908:	ret
  43b90c:	stp	x29, x30, [sp, #-32]!
  43b910:	mov	x29, sp
  43b914:	stp	x19, x20, [sp, #16]
  43b918:	mov	x19, x1
  43b91c:	ldrb	w1, [x1, #48]
  43b920:	cmp	w1, #0x10
  43b924:	b.ne	43b944 <_obstack_memory_used@@Base+0x3cc4>  // b.any
  43b928:	ldr	x0, [x19, #8]
  43b92c:	ldr	x1, [x0, #24]
  43b930:	ldr	x0, [x0, #56]
  43b934:	str	x1, [x19, #24]
  43b938:	str	x0, [x19, #56]
  43b93c:	mov	w0, #0x0                   	// #0
  43b940:	b	43b98c <_obstack_memory_used@@Base+0x3d0c>
  43b944:	ldp	x1, x2, [x19, #40]
  43b948:	str	x19, [x19, #24]
  43b94c:	mov	x20, x0
  43b950:	bl	439094 <_obstack_memory_used@@Base+0x1414>
  43b954:	str	x0, [x19, #56]
  43b958:	cmn	x0, #0x1
  43b95c:	b.eq	43b988 <_obstack_memory_used@@Base+0x3d08>  // b.none
  43b960:	ldrb	w1, [x19, #48]
  43b964:	cmp	w1, #0xc
  43b968:	b.ne	43b93c <_obstack_memory_used@@Base+0x3cbc>  // b.any
  43b96c:	ldr	x1, [x20]
  43b970:	ldr	w2, [x19, #40]
  43b974:	add	x0, x1, x0, lsl #4
  43b978:	ldr	w1, [x0, #8]
  43b97c:	bfi	w1, w2, #8, #10
  43b980:	str	w1, [x0, #8]
  43b984:	b	43b93c <_obstack_memory_used@@Base+0x3cbc>
  43b988:	mov	w0, #0xc                   	// #12
  43b98c:	ldp	x19, x20, [sp, #16]
  43b990:	ldp	x29, x30, [sp], #32
  43b994:	ret
  43b998:	cbnz	x0, 43b9f0 <_obstack_memory_used@@Base+0x3d70>
  43b99c:	mov	w0, #0x0                   	// #0
  43b9a0:	ret
  43b9a4:	mul	x21, x20, x22
  43b9a8:	add	x20, x20, #0x1
  43b9ac:	add	x0, x0, x21
  43b9b0:	ldr	x0, [x0, #40]
  43b9b4:	bl	404ae0 <free@plt>
  43b9b8:	ldr	x0, [x19, #16]
  43b9bc:	add	x0, x0, x21
  43b9c0:	ldr	x0, [x0, #16]
  43b9c4:	bl	404ae0 <free@plt>
  43b9c8:	ldr	x1, [x19]
  43b9cc:	ldr	x0, [x19, #16]
  43b9d0:	cmp	x20, x1
  43b9d4:	b.lt	43b9a4 <_obstack_memory_used@@Base+0x3d24>  // b.tstop
  43b9d8:	bl	404ae0 <free@plt>
  43b9dc:	mov	w0, #0x0                   	// #0
  43b9e0:	ldp	x19, x20, [sp, #16]
  43b9e4:	ldp	x21, x22, [sp, #32]
  43b9e8:	ldp	x29, x30, [sp], #48
  43b9ec:	ret
  43b9f0:	stp	x29, x30, [sp, #-48]!
  43b9f4:	mov	x29, sp
  43b9f8:	stp	x19, x20, [sp, #16]
  43b9fc:	mov	x19, x0
  43ba00:	mov	x20, #0x0                   	// #0
  43ba04:	stp	x21, x22, [sp, #32]
  43ba08:	mov	x22, #0x30                  	// #48
  43ba0c:	b	43b9c8 <_obstack_memory_used@@Base+0x3d48>
  43ba10:	stp	x29, x30, [sp, #-48]!
  43ba14:	mov	x29, sp
  43ba18:	stp	x19, x20, [sp, #16]
  43ba1c:	mov	x20, x0
  43ba20:	ldr	x19, [x0]
  43ba24:	sub	x19, x19, #0x1
  43ba28:	str	x19, [x0]
  43ba2c:	str	x21, [sp, #32]
  43ba30:	tbz	x19, #63, 43ba58 <_obstack_memory_used@@Base+0x3dd8>
  43ba34:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  43ba38:	add	x3, x3, #0xab0
  43ba3c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  43ba40:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  43ba44:	add	x3, x3, #0x2f
  43ba48:	add	x1, x1, #0x97b
  43ba4c:	add	x0, x0, #0x985
  43ba50:	mov	w2, #0x553                 	// #1363
  43ba54:	bl	404e00 <__assert_fail@plt>
  43ba58:	mov	x0, x3
  43ba5c:	mov	x3, #0x30                  	// #48
  43ba60:	mov	x21, x4
  43ba64:	lsl	x2, x2, #4
  43ba68:	mul	x19, x19, x3
  43ba6c:	ldr	x3, [x20, #16]
  43ba70:	add	x4, x3, x19
  43ba74:	ldr	x3, [x3, x19]
  43ba78:	str	x3, [x1]
  43ba7c:	ldr	x1, [x4, #16]
  43ba80:	bl	404200 <memcpy@plt>
  43ba84:	ldr	x0, [x21, #16]
  43ba88:	bl	404ae0 <free@plt>
  43ba8c:	ldr	x0, [x20, #16]
  43ba90:	add	x0, x0, x19
  43ba94:	ldr	x0, [x0, #16]
  43ba98:	bl	404ae0 <free@plt>
  43ba9c:	ldr	x0, [x20, #16]
  43baa0:	add	x19, x0, x19
  43baa4:	ldp	x0, x1, [x19, #24]
  43baa8:	stp	x0, x1, [x21]
  43baac:	ldr	x0, [x19, #40]
  43bab0:	str	x0, [x21, #16]
  43bab4:	ldr	x0, [x19, #8]
  43bab8:	ldp	x19, x20, [sp, #16]
  43babc:	ldr	x21, [sp, #32]
  43bac0:	ldp	x29, x30, [sp], #48
  43bac4:	ret
  43bac8:	stp	x29, x30, [sp, #-32]!
  43bacc:	mov	x7, x0
  43bad0:	mov	x6, x1
  43bad4:	mov	x29, sp
  43bad8:	mov	x0, x1
  43badc:	ldr	x1, [x1, #72]
  43bae0:	mov	x9, x2
  43bae4:	mov	w8, w3
  43bae8:	mov	x11, x4
  43baec:	and	w12, w5, #0xff
  43baf0:	bl	439dac <_obstack_memory_used@@Base+0x212c>
  43baf4:	cmp	w0, #0x1
  43baf8:	b.le	43bb24 <_obstack_memory_used@@Base+0x3ea4>
  43bafc:	mov	w10, w0
  43bb00:	mov	w0, #0x1                   	// #1
  43bb04:	str	w0, [x7]
  43bb08:	mov	x0, x6
  43bb0c:	bl	437e3c <_obstack_memory_used@@Base+0x1bc>
  43bb10:	str	w0, [x7, #8]
  43bb14:	add	x10, x1, w10, sxtw
  43bb18:	str	x10, [x6, #72]
  43bb1c:	mov	w0, #0x0                   	// #0
  43bb20:	b	43bb54 <_obstack_memory_used@@Base+0x3ed4>
  43bb24:	ldrb	w0, [x9, #8]
  43bb28:	add	x1, x1, w8, sxtw
  43bb2c:	str	x1, [x6, #72]
  43bb30:	and	w2, w0, #0xfffffffb
  43bb34:	cmp	w2, #0x1a
  43bb38:	b.eq	43bb44 <_obstack_memory_used@@Base+0x3ec4>  // b.none
  43bb3c:	cmp	w0, #0x1c
  43bb40:	b.ne	43bc80 <_obstack_memory_used@@Base+0x4000>  // b.any
  43bb44:	ldr	x0, [x6, #104]
  43bb48:	cmp	x1, x0
  43bb4c:	b.lt	43bb5c <_obstack_memory_used@@Base+0x3edc>  // b.tstop
  43bb50:	mov	w0, #0x7                   	// #7
  43bb54:	ldp	x29, x30, [sp], #32
  43bb58:	ret
  43bb5c:	ldrb	w12, [x9]
  43bb60:	mov	x10, #0x0                   	// #0
  43bb64:	ldrb	w0, [x9, #8]
  43bb68:	mov	w11, w10
  43bb6c:	ldr	x1, [x6, #72]
  43bb70:	cmp	w0, #0x1e
  43bb74:	b.ne	43bb80 <_obstack_memory_used@@Base+0x3f00>  // b.any
  43bb78:	ldrb	w0, [x6, #139]
  43bb7c:	cbnz	w0, 43bb90 <_obstack_memory_used@@Base+0x3f10>
  43bb80:	add	x2, x1, #0x1
  43bb84:	str	x2, [x6, #72]
  43bb88:	ldr	x0, [x6, #8]
  43bb8c:	b	43bc34 <_obstack_memory_used@@Base+0x3fb4>
  43bb90:	ldrb	w0, [x6, #140]
  43bb94:	cbz	w0, 43bc20 <_obstack_memory_used@@Base+0x3fa0>
  43bb98:	ldr	x0, [x6, #48]
  43bb9c:	cmp	x0, x1
  43bba0:	b.eq	43bbb4 <_obstack_memory_used@@Base+0x3f34>  // b.none
  43bba4:	ldr	x0, [x6, #16]
  43bba8:	ldr	w0, [x0, x1, lsl #2]
  43bbac:	cmn	w0, #0x1
  43bbb0:	b.eq	43bb80 <_obstack_memory_used@@Base+0x3f00>  // b.none
  43bbb4:	ldr	x2, [x6, #24]
  43bbb8:	ldr	x0, [x6]
  43bbbc:	ldr	x3, [x2, x1, lsl #3]
  43bbc0:	ldr	x2, [x6, #40]
  43bbc4:	add	x0, x0, x3
  43bbc8:	ldrb	w8, [x0, x2]
  43bbcc:	tbnz	w8, #7, 43bb80 <_obstack_memory_used@@Base+0x3f00>
  43bbd0:	mov	x0, x6
  43bbd4:	bl	439dac <_obstack_memory_used@@Base+0x212c>
  43bbd8:	add	x1, x1, w0, sxtw
  43bbdc:	str	x1, [x6, #72]
  43bbe0:	ldr	x0, [x6, #72]
  43bbe4:	ldr	x1, [x6, #104]
  43bbe8:	cmp	x1, x0
  43bbec:	b.le	43bb50 <_obstack_memory_used@@Base+0x3ed0>
  43bbf0:	cmp	w12, w8
  43bbf4:	ldr	x1, [x7, #8]
  43bbf8:	b.ne	43bc0c <_obstack_memory_used@@Base+0x3f8c>  // b.any
  43bbfc:	ldr	x2, [x6, #8]
  43bc00:	ldrb	w2, [x2, x0]
  43bc04:	cmp	w2, #0x5d
  43bc08:	b.eq	43bc3c <_obstack_memory_used@@Base+0x3fbc>  // b.none
  43bc0c:	strb	w8, [x1, x10]
  43bc10:	add	x10, x10, #0x1
  43bc14:	cmp	x10, #0x20
  43bc18:	b.ne	43bb64 <_obstack_memory_used@@Base+0x3ee4>  // b.any
  43bc1c:	b	43bb50 <_obstack_memory_used@@Base+0x3ed0>
  43bc20:	ldr	x0, [x6]
  43bc24:	add	x3, x1, #0x1
  43bc28:	ldr	x2, [x6, #40]
  43bc2c:	str	x3, [x6, #72]
  43bc30:	add	x0, x0, x2
  43bc34:	ldrb	w8, [x0, x1]
  43bc38:	b	43bbe0 <_obstack_memory_used@@Base+0x3f60>
  43bc3c:	add	x0, x0, #0x1
  43bc40:	str	x0, [x6, #72]
  43bc44:	strb	wzr, [x1, w11, sxtw]
  43bc48:	ldrb	w0, [x9, #8]
  43bc4c:	cmp	w0, #0x1c
  43bc50:	b.eq	43bc70 <_obstack_memory_used@@Base+0x3ff0>  // b.none
  43bc54:	cmp	w0, #0x1e
  43bc58:	b.eq	43bc78 <_obstack_memory_used@@Base+0x3ff8>  // b.none
  43bc5c:	cmp	w0, #0x1a
  43bc60:	b.ne	43bb1c <_obstack_memory_used@@Base+0x3e9c>  // b.any
  43bc64:	mov	w0, #0x3                   	// #3
  43bc68:	str	w0, [x7]
  43bc6c:	b	43bb1c <_obstack_memory_used@@Base+0x3e9c>
  43bc70:	mov	w0, #0x2                   	// #2
  43bc74:	b	43bc68 <_obstack_memory_used@@Base+0x3fe8>
  43bc78:	mov	w0, #0x4                   	// #4
  43bc7c:	b	43bc68 <_obstack_memory_used@@Base+0x3fe8>
  43bc80:	cmp	w0, #0x16
  43bc84:	b.ne	43bcb0 <_obstack_memory_used@@Base+0x4030>  // b.any
  43bc88:	cbnz	w12, 43bcb0 <_obstack_memory_used@@Base+0x4030>
  43bc8c:	mov	x2, x11
  43bc90:	mov	x1, x6
  43bc94:	add	x0, sp, #0x10
  43bc98:	bl	437f74 <_obstack_memory_used@@Base+0x2f4>
  43bc9c:	ldrb	w0, [sp, #24]
  43bca0:	cmp	w0, #0x15
  43bca4:	b.eq	43bcb0 <_obstack_memory_used@@Base+0x4030>  // b.none
  43bca8:	mov	w0, #0xb                   	// #11
  43bcac:	b	43bb54 <_obstack_memory_used@@Base+0x3ed4>
  43bcb0:	ldrb	w0, [x9]
  43bcb4:	str	wzr, [x7]
  43bcb8:	strb	w0, [x7, #8]
  43bcbc:	b	43bb1c <_obstack_memory_used@@Base+0x3e9c>
  43bcc0:	stp	x29, x30, [sp, #-96]!
  43bcc4:	mov	x29, sp
  43bcc8:	stp	x19, x20, [sp, #16]
  43bccc:	mov	x19, x0
  43bcd0:	stp	x25, x26, [sp, #64]
  43bcd4:	ldr	x25, [x1, #72]
  43bcd8:	stp	x21, x22, [sp, #32]
  43bcdc:	ldr	x0, [x1, #104]
  43bce0:	stp	x23, x24, [sp, #48]
  43bce4:	cmp	x0, x25
  43bce8:	b.gt	43bd10 <_obstack_memory_used@@Base+0x4090>
  43bcec:	mov	w0, #0x2                   	// #2
  43bcf0:	strb	w0, [x19, #8]
  43bcf4:	mov	w0, #0x0                   	// #0
  43bcf8:	ldp	x19, x20, [sp, #16]
  43bcfc:	ldp	x21, x22, [sp, #32]
  43bd00:	ldp	x23, x24, [sp, #48]
  43bd04:	ldp	x25, x26, [sp, #64]
  43bd08:	ldp	x29, x30, [sp], #96
  43bd0c:	ret
  43bd10:	ldr	x26, [x1, #8]
  43bd14:	mov	x21, x1
  43bd18:	ldrb	w0, [x19, #10]
  43bd1c:	mov	x20, x2
  43bd20:	ldrb	w22, [x26, x25]
  43bd24:	and	w0, w0, #0xffffff9f
  43bd28:	strb	w22, [x19]
  43bd2c:	strb	w0, [x19, #10]
  43bd30:	ldr	w0, [x1, #144]
  43bd34:	cmp	w0, #0x1
  43bd38:	b.le	43bd7c <_obstack_memory_used@@Base+0x40fc>
  43bd3c:	ldr	x1, [x1, #48]
  43bd40:	cmp	x25, x1
  43bd44:	b.eq	43bd7c <_obstack_memory_used@@Base+0x40fc>  // b.none
  43bd48:	ldr	x1, [x21, #16]
  43bd4c:	ldr	w1, [x1, x25, lsl #2]
  43bd50:	cmn	w1, #0x1
  43bd54:	b.ne	43bd7c <_obstack_memory_used@@Base+0x40fc>  // b.any
  43bd58:	ldr	w0, [x19, #8]
  43bd5c:	mov	w1, #0x1                   	// #1
  43bd60:	movk	w1, #0x20, lsl #16
  43bd64:	and	w0, w0, #0xffffff00
  43bd68:	and	w0, w0, #0xffdfffff
  43bd6c:	orr	w0, w0, w1
  43bd70:	str	w0, [x19, #8]
  43bd74:	mov	w0, #0x1                   	// #1
  43bd78:	b	43bcf8 <_obstack_memory_used@@Base+0x4078>
  43bd7c:	cmp	w22, #0x5c
  43bd80:	b.ne	43c06c <_obstack_memory_used@@Base+0x43ec>  // b.any
  43bd84:	ldr	x2, [x21, #88]
  43bd88:	add	x1, x25, #0x1
  43bd8c:	cmp	x1, x2
  43bd90:	b.lt	43bda0 <_obstack_memory_used@@Base+0x4120>  // b.tstop
  43bd94:	mov	w0, #0x24                  	// #36
  43bd98:	strb	w0, [x19, #8]
  43bd9c:	b	43bd74 <_obstack_memory_used@@Base+0x40f4>
  43bda0:	ldrb	w2, [x21, #139]
  43bda4:	cbnz	w2, 43bdb0 <_obstack_memory_used@@Base+0x4130>
  43bda8:	ldrb	w22, [x26, x1]
  43bdac:	b	43be14 <_obstack_memory_used@@Base+0x4194>
  43bdb0:	cmp	w0, #0x1
  43bdb4:	b.le	43bdec <_obstack_memory_used@@Base+0x416c>
  43bdb8:	ldr	x2, [x21, #16]
  43bdbc:	lsl	x3, x1, #2
  43bdc0:	ldr	w4, [x2, x3]
  43bdc4:	cmn	w4, #0x1
  43bdc8:	b.eq	43bda8 <_obstack_memory_used@@Base+0x4128>  // b.none
  43bdcc:	ldr	x4, [x21, #48]
  43bdd0:	add	x25, x25, #0x2
  43bdd4:	cmp	x4, x25
  43bdd8:	b.eq	43bdec <_obstack_memory_used@@Base+0x416c>  // b.none
  43bddc:	add	x2, x2, x3
  43bde0:	ldr	w2, [x2, #4]
  43bde4:	cmn	w2, #0x1
  43bde8:	b.eq	43bda8 <_obstack_memory_used@@Base+0x4128>  // b.none
  43bdec:	ldrb	w3, [x21, #140]
  43bdf0:	cbz	w3, 43be78 <_obstack_memory_used@@Base+0x41f8>
  43bdf4:	ldr	x2, [x21, #24]
  43bdf8:	ldr	x4, [x2, x1, lsl #3]
  43bdfc:	ldr	x2, [x21]
  43be00:	ldr	x5, [x21, #40]
  43be04:	add	x2, x2, x4
  43be08:	ldrb	w22, [x2, x5]
  43be0c:	cbz	w3, 43be14 <_obstack_memory_used@@Base+0x4194>
  43be10:	tbnz	w22, #7, 43bda8 <_obstack_memory_used@@Base+0x4128>
  43be14:	mov	w2, #0x1                   	// #1
  43be18:	strb	w22, [x19]
  43be1c:	strb	w2, [x19, #8]
  43be20:	cmp	w0, #0x1
  43be24:	ldrb	w23, [x19, #10]
  43be28:	b.le	43be80 <_obstack_memory_used@@Base+0x4200>
  43be2c:	mov	x0, x21
  43be30:	bl	437e3c <_obstack_memory_used@@Base+0x1bc>
  43be34:	mov	w21, w0
  43be38:	bl	404cd0 <iswalnum@plt>
  43be3c:	cbnz	w0, 43be9c <_obstack_memory_used@@Base+0x421c>
  43be40:	cmp	w21, #0x5f
  43be44:	cset	w1, eq  // eq = none
  43be48:	mov	w0, w23
  43be4c:	cmp	w22, #0x53
  43be50:	bfi	w0, w1, #6, #1
  43be54:	strb	w0, [x19, #10]
  43be58:	b.eq	43bfbc <_obstack_memory_used@@Base+0x433c>  // b.none
  43be5c:	b.hi	43bee8 <_obstack_memory_used@@Base+0x4268>  // b.pmore
  43be60:	sub	w1, w22, #0x27
  43be64:	and	w0, w1, #0xff
  43be68:	cmp	w0, #0x1b
  43be6c:	b.ls	43bec8 <_obstack_memory_used@@Base+0x4248>  // b.plast
  43be70:	mov	w0, #0x2                   	// #2
  43be74:	b	43bcf8 <_obstack_memory_used@@Base+0x4078>
  43be78:	mov	x4, x1
  43be7c:	b	43bdfc <_obstack_memory_used@@Base+0x417c>
  43be80:	bl	404a60 <__ctype_b_loc@plt>
  43be84:	ldr	x0, [x0]
  43be88:	ubfiz	x1, x22, #1, #8
  43be8c:	ldrh	w0, [x0, x1]
  43be90:	tbnz	w0, #3, 43be9c <_obstack_memory_used@@Base+0x421c>
  43be94:	cmp	w22, #0x5f
  43be98:	b	43be44 <_obstack_memory_used@@Base+0x41c4>
  43be9c:	mov	w1, #0x1                   	// #1
  43bea0:	b	43be48 <_obstack_memory_used@@Base+0x41c8>
  43bea4:	sub	w22, w22, #0x73
  43bea8:	cmp	w22, #0xa
  43beac:	b.hi	43be70 <_obstack_memory_used@@Base+0x41f0>  // b.pmore
  43beb0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  43beb4:	add	x0, x0, #0xa00
  43beb8:	ldrb	w0, [x0, w22, uxtw]
  43bebc:	adr	x1, 43bec8 <_obstack_memory_used@@Base+0x4248>
  43bec0:	add	x0, x1, w0, sxtb #2
  43bec4:	br	x0
  43bec8:	cmp	w1, #0x1b
  43becc:	b.hi	43be70 <_obstack_memory_used@@Base+0x41f0>  // b.pmore
  43bed0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  43bed4:	add	x0, x0, #0xa0c
  43bed8:	ldrb	w0, [x0, w1, uxtw]
  43bedc:	adr	x1, 43bee8 <_obstack_memory_used@@Base+0x4268>
  43bee0:	add	x0, x1, w0, sxtb #2
  43bee4:	br	x0
  43bee8:	cmp	w22, #0x7d
  43beec:	b.hi	43be70 <_obstack_memory_used@@Base+0x41f0>  // b.pmore
  43bef0:	cmp	w22, #0x72
  43bef4:	b.hi	43bea4 <_obstack_memory_used@@Base+0x4224>  // b.pmore
  43bef8:	cmp	w22, #0x60
  43befc:	b.eq	43bfc8 <_obstack_memory_used@@Base+0x4348>  // b.none
  43bf00:	cmp	w22, #0x62
  43bf04:	b.eq	43bf7c <_obstack_memory_used@@Base+0x42fc>  // b.none
  43bf08:	cmp	w22, #0x57
  43bf0c:	b.ne	43be70 <_obstack_memory_used@@Base+0x41f0>  // b.any
  43bf10:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bf14:	mov	w0, #0x21                  	// #33
  43bf18:	b	43bf2c <_obstack_memory_used@@Base+0x42ac>
  43bf1c:	mov	x0, #0x8400                	// #33792
  43bf20:	tst	x20, x0
  43bf24:	b.ne	43be70 <_obstack_memory_used@@Base+0x41f0>  // b.any
  43bf28:	mov	w0, #0xa                   	// #10
  43bf2c:	strb	w0, [x19, #8]
  43bf30:	b	43be70 <_obstack_memory_used@@Base+0x41f0>
  43bf34:	tbnz	w20, #14, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bf38:	sub	w22, w22, #0x31
  43bf3c:	mov	w0, #0x4                   	// #4
  43bf40:	strb	w0, [x19, #8]
  43bf44:	sxtw	x22, w22
  43bf48:	str	x22, [x19]
  43bf4c:	b	43be70 <_obstack_memory_used@@Base+0x41f0>
  43bf50:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bf54:	mov	w0, #0xc                   	// #12
  43bf58:	strb	w0, [x19, #8]
  43bf5c:	mov	w0, #0x6                   	// #6
  43bf60:	str	w0, [x19]
  43bf64:	b	43be70 <_obstack_memory_used@@Base+0x41f0>
  43bf68:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bf6c:	mov	w0, #0xc                   	// #12
  43bf70:	strb	w0, [x19, #8]
  43bf74:	mov	w0, #0x9                   	// #9
  43bf78:	b	43bf60 <_obstack_memory_used@@Base+0x42e0>
  43bf7c:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bf80:	mov	w0, #0xc                   	// #12
  43bf84:	strb	w0, [x19, #8]
  43bf88:	mov	w0, #0x100                 	// #256
  43bf8c:	b	43bf60 <_obstack_memory_used@@Base+0x42e0>
  43bf90:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bf94:	mov	w0, #0xc                   	// #12
  43bf98:	strb	w0, [x19, #8]
  43bf9c:	mov	w0, #0x200                 	// #512
  43bfa0:	b	43bf60 <_obstack_memory_used@@Base+0x42e0>
  43bfa4:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bfa8:	mov	w0, #0x20                  	// #32
  43bfac:	b	43bf2c <_obstack_memory_used@@Base+0x42ac>
  43bfb0:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bfb4:	mov	w0, #0x22                  	// #34
  43bfb8:	b	43bf2c <_obstack_memory_used@@Base+0x42ac>
  43bfbc:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bfc0:	mov	w0, #0x23                  	// #35
  43bfc4:	b	43bf2c <_obstack_memory_used@@Base+0x42ac>
  43bfc8:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bfcc:	mov	w0, #0xc                   	// #12
  43bfd0:	strb	w0, [x19, #8]
  43bfd4:	mov	w0, #0x40                  	// #64
  43bfd8:	b	43bf60 <_obstack_memory_used@@Base+0x42e0>
  43bfdc:	tbnz	w20, #19, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bfe0:	mov	w0, #0xc                   	// #12
  43bfe4:	strb	w0, [x19, #8]
  43bfe8:	mov	w0, #0x80                  	// #128
  43bfec:	b	43bf60 <_obstack_memory_used@@Base+0x42e0>
  43bff0:	tbnz	w20, #13, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43bff4:	mov	w0, #0x8                   	// #8
  43bff8:	b	43bf2c <_obstack_memory_used@@Base+0x42ac>
  43bffc:	tbnz	w20, #13, 43be70 <_obstack_memory_used@@Base+0x41f0>
  43c000:	mov	w0, #0x9                   	// #9
  43c004:	b	43bf2c <_obstack_memory_used@@Base+0x42ac>
  43c008:	mov	x0, #0x402                 	// #1026
  43c00c:	and	x0, x20, x0
  43c010:	cmp	x0, #0x2
  43c014:	b.ne	43be70 <_obstack_memory_used@@Base+0x41f0>  // b.any
  43c018:	mov	w1, #0x12                  	// #18
  43c01c:	strb	w1, [x19, #8]
  43c020:	b	43bcf8 <_obstack_memory_used@@Base+0x4078>
  43c024:	mov	x1, #0x402                 	// #1026
  43c028:	and	x0, x20, x1
  43c02c:	cmp	x0, #0x2
  43c030:	b.ne	43be70 <_obstack_memory_used@@Base+0x41f0>  // b.any
  43c034:	mov	w1, #0x13                  	// #19
  43c038:	b	43c01c <_obstack_memory_used@@Base+0x439c>
  43c03c:	mov	x0, #0x1200                	// #4608
  43c040:	and	x0, x20, x0
  43c044:	cmp	x0, #0x200
  43c048:	b.ne	43be70 <_obstack_memory_used@@Base+0x41f0>  // b.any
  43c04c:	mov	w0, #0x17                  	// #23
  43c050:	b	43bf2c <_obstack_memory_used@@Base+0x42ac>
  43c054:	mov	x0, #0x1200                	// #4608
  43c058:	and	x0, x20, x0
  43c05c:	cmp	x0, #0x200
  43c060:	b.ne	43be70 <_obstack_memory_used@@Base+0x41f0>  // b.any
  43c064:	mov	w0, #0x18                  	// #24
  43c068:	b	43bf2c <_obstack_memory_used@@Base+0x42ac>
  43c06c:	mov	w1, #0x1                   	// #1
  43c070:	strb	w1, [x19, #8]
  43c074:	ldrb	w24, [x19, #10]
  43c078:	cmp	w0, #0x1
  43c07c:	b.le	43c0d0 <_obstack_memory_used@@Base+0x4450>
  43c080:	mov	x1, x25
  43c084:	mov	x0, x21
  43c088:	bl	437e3c <_obstack_memory_used@@Base+0x1bc>
  43c08c:	mov	w23, w0
  43c090:	bl	404cd0 <iswalnum@plt>
  43c094:	cbnz	w0, 43c0ec <_obstack_memory_used@@Base+0x446c>
  43c098:	cmp	w23, #0x5f
  43c09c:	cset	w2, eq  // eq = none
  43c0a0:	mov	w0, w24
  43c0a4:	cmp	w22, #0x2e
  43c0a8:	bfi	w0, w2, #6, #1
  43c0ac:	strb	w0, [x19, #10]
  43c0b0:	b.hi	43c118 <_obstack_memory_used@@Base+0x4498>  // b.pmore
  43c0b4:	cmp	w22, #0x23
  43c0b8:	b.hi	43c0f4 <_obstack_memory_used@@Base+0x4474>  // b.pmore
  43c0bc:	cmp	w22, #0xa
  43c0c0:	b.ne	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.any
  43c0c4:	tbz	w20, #11, 43bd74 <_obstack_memory_used@@Base+0x40f4>
  43c0c8:	mov	w0, #0xa                   	// #10
  43c0cc:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c0d0:	bl	404a60 <__ctype_b_loc@plt>
  43c0d4:	ldr	x0, [x0]
  43c0d8:	ubfiz	x2, x22, #1, #8
  43c0dc:	ldrh	w0, [x0, x2]
  43c0e0:	tbnz	w0, #3, 43c0ec <_obstack_memory_used@@Base+0x446c>
  43c0e4:	cmp	w22, #0x5f
  43c0e8:	b	43c09c <_obstack_memory_used@@Base+0x441c>
  43c0ec:	mov	w2, #0x1                   	// #1
  43c0f0:	b	43c0a0 <_obstack_memory_used@@Base+0x4420>
  43c0f4:	sub	w22, w22, #0x24
  43c0f8:	cmp	w22, #0xa
  43c0fc:	b.hi	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.pmore
  43c100:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  43c104:	add	x0, x0, #0xa28
  43c108:	ldrh	w0, [x0, w22, uxtw #1]
  43c10c:	adr	x1, 43c118 <_obstack_memory_used@@Base+0x4498>
  43c110:	add	x0, x1, w0, sxth #2
  43c114:	br	x0
  43c118:	cmp	w22, #0x7b
  43c11c:	b.eq	43c1a4 <_obstack_memory_used@@Base+0x4524>  // b.none
  43c120:	b.hi	43c150 <_obstack_memory_used@@Base+0x44d0>  // b.pmore
  43c124:	cmp	w22, #0x5b
  43c128:	b.eq	43c1d0 <_obstack_memory_used@@Base+0x4550>  // b.none
  43c12c:	cmp	w22, #0x5e
  43c130:	b.eq	43c1e0 <_obstack_memory_used@@Base+0x4560>  // b.none
  43c134:	cmp	w22, #0x3f
  43c138:	b.ne	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.any
  43c13c:	mov	x0, #0x402                 	// #1026
  43c140:	tst	x20, x0
  43c144:	b.ne	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.any
  43c148:	mov	w0, #0x13                  	// #19
  43c14c:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c150:	cmp	w22, #0x7c
  43c154:	b.eq	43c174 <_obstack_memory_used@@Base+0x44f4>  // b.none
  43c158:	cmp	w22, #0x7d
  43c15c:	b.ne	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.any
  43c160:	mov	x0, #0x1200                	// #4608
  43c164:	bics	xzr, x0, x20
  43c168:	b.ne	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.any
  43c16c:	mov	w0, #0x18                  	// #24
  43c170:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c174:	mov	x0, #0x8400                	// #33792
  43c178:	and	x0, x20, x0
  43c17c:	cmp	x0, #0x8, lsl #12
  43c180:	b.ne	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.any
  43c184:	b	43c0c8 <_obstack_memory_used@@Base+0x4448>
  43c188:	mov	w0, #0xb                   	// #11
  43c18c:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c190:	mov	x0, #0x402                 	// #1026
  43c194:	tst	x20, x0
  43c198:	b.ne	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.any
  43c19c:	mov	w0, #0x12                  	// #18
  43c1a0:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c1a4:	mov	x0, #0x1200                	// #4608
  43c1a8:	bics	xzr, x0, x20
  43c1ac:	b.ne	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.any
  43c1b0:	mov	w0, #0x17                  	// #23
  43c1b4:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c1b8:	tbz	w20, #13, 43bd74 <_obstack_memory_used@@Base+0x40f4>
  43c1bc:	mov	w0, #0x8                   	// #8
  43c1c0:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c1c4:	tbz	w20, #13, 43bd74 <_obstack_memory_used@@Base+0x40f4>
  43c1c8:	mov	w0, #0x9                   	// #9
  43c1cc:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c1d0:	mov	w0, #0x14                  	// #20
  43c1d4:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c1d8:	mov	w0, #0x5                   	// #5
  43c1dc:	b	43bd98 <_obstack_memory_used@@Base+0x4118>
  43c1e0:	and	x0, x20, #0xfffff8
  43c1e4:	and	x0, x0, #0xffffffffff80000f
  43c1e8:	cbnz	x0, 43c204 <_obstack_memory_used@@Base+0x4584>
  43c1ec:	cbz	x25, 43c204 <_obstack_memory_used@@Base+0x4584>
  43c1f0:	add	x1, x26, x25
  43c1f4:	ldurb	w0, [x1, #-1]
  43c1f8:	tbz	w20, #11, 43bd74 <_obstack_memory_used@@Base+0x40f4>
  43c1fc:	cmp	w0, #0xa
  43c200:	b.ne	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.any
  43c204:	mov	w0, #0xc                   	// #12
  43c208:	strb	w0, [x19, #8]
  43c20c:	mov	w0, #0x10                  	// #16
  43c210:	str	w0, [x19]
  43c214:	b	43bd74 <_obstack_memory_used@@Base+0x40f4>
  43c218:	tbnz	w20, #3, 43c260 <_obstack_memory_used@@Base+0x45e0>
  43c21c:	ldr	x0, [x21, #88]
  43c220:	add	x1, x25, #0x1
  43c224:	cmp	x1, x0
  43c228:	b.eq	43c260 <_obstack_memory_used@@Base+0x45e0>  // b.none
  43c22c:	str	x1, [x21, #72]
  43c230:	mov	x2, x20
  43c234:	add	x0, sp, #0x50
  43c238:	mov	x1, x21
  43c23c:	bl	43bcc0 <_obstack_memory_used@@Base+0x4040>
  43c240:	ldr	x0, [x21, #72]
  43c244:	sub	x0, x0, #0x1
  43c248:	str	x0, [x21, #72]
  43c24c:	ldrb	w0, [sp, #88]
  43c250:	sub	w0, w0, #0x9
  43c254:	and	w0, w0, #0xff
  43c258:	cmp	w0, #0x1
  43c25c:	b.hi	43bd74 <_obstack_memory_used@@Base+0x40f4>  // b.pmore
  43c260:	mov	w0, #0xc                   	// #12
  43c264:	strb	w0, [x19, #8]
  43c268:	mov	w0, #0x20                  	// #32
  43c26c:	b	43c210 <_obstack_memory_used@@Base+0x4590>
  43c270:	stp	x29, x30, [sp, #-32]!
  43c274:	mov	x29, sp
  43c278:	str	x19, [sp, #16]
  43c27c:	mov	x19, x1
  43c280:	bl	43bcc0 <_obstack_memory_used@@Base+0x4040>
  43c284:	ldr	x1, [x19, #72]
  43c288:	add	x0, x1, w0, sxtw
  43c28c:	str	x0, [x19, #72]
  43c290:	ldr	x19, [sp, #16]
  43c294:	ldp	x29, x30, [sp], #32
  43c298:	ret
  43c29c:	stp	x29, x30, [sp, #-64]!
  43c2a0:	mov	x29, sp
  43c2a4:	stp	x19, x20, [sp, #16]
  43c2a8:	mov	x20, x1
  43c2ac:	mov	x19, #0xffffffffffffffff    	// #-1
  43c2b0:	stp	x21, x22, [sp, #32]
  43c2b4:	mov	x21, x0
  43c2b8:	mov	x22, x2
  43c2bc:	stp	x23, x24, [sp, #48]
  43c2c0:	mov	x24, #0xa                   	// #10
  43c2c4:	mov	x23, #0x8030                	// #32816
  43c2c8:	mov	x0, x20
  43c2cc:	mov	x2, x22
  43c2d0:	mov	x1, x21
  43c2d4:	bl	43c270 <_obstack_memory_used@@Base+0x45f0>
  43c2d8:	ldrb	w0, [x20, #8]
  43c2dc:	ldrb	w3, [x20]
  43c2e0:	cmp	w0, #0x2
  43c2e4:	b.eq	43c348 <_obstack_memory_used@@Base+0x46c8>  // b.none
  43c2e8:	cmp	w0, #0x18
  43c2ec:	b.eq	43c34c <_obstack_memory_used@@Base+0x46cc>  // b.none
  43c2f0:	cmp	w3, #0x2c
  43c2f4:	b.eq	43c34c <_obstack_memory_used@@Base+0x46cc>  // b.none
  43c2f8:	cmp	w0, #0x1
  43c2fc:	b.ne	43c328 <_obstack_memory_used@@Base+0x46a8>  // b.any
  43c300:	sub	w0, w3, #0x30
  43c304:	and	w1, w0, #0xff
  43c308:	cmp	w1, #0x9
  43c30c:	b.hi	43c328 <_obstack_memory_used@@Base+0x46a8>  // b.pmore
  43c310:	cmn	x19, #0x2
  43c314:	b.eq	43c2c8 <_obstack_memory_used@@Base+0x4648>  // b.none
  43c318:	cmn	x19, #0x1
  43c31c:	b.ne	43c330 <_obstack_memory_used@@Base+0x46b0>  // b.any
  43c320:	sxtw	x19, w0
  43c324:	b	43c2c8 <_obstack_memory_used@@Base+0x4648>
  43c328:	mov	x19, #0xfffffffffffffffe    	// #-2
  43c32c:	b	43c2c8 <_obstack_memory_used@@Base+0x4648>
  43c330:	and	x3, x3, #0xff
  43c334:	madd	x19, x19, x24, x3
  43c338:	cmp	x19, x23
  43c33c:	csel	x19, x19, x23, le
  43c340:	sub	x19, x19, #0x30
  43c344:	b	43c2c8 <_obstack_memory_used@@Base+0x4648>
  43c348:	mov	x19, #0xfffffffffffffffe    	// #-2
  43c34c:	mov	x0, x19
  43c350:	ldp	x19, x20, [sp, #16]
  43c354:	ldp	x21, x22, [sp, #32]
  43c358:	ldp	x23, x24, [sp, #48]
  43c35c:	ldp	x29, x30, [sp], #64
  43c360:	ret
  43c364:	stp	x29, x30, [sp, #-240]!
  43c368:	mov	x29, sp
  43c36c:	stp	x19, x20, [sp, #16]
  43c370:	stp	x21, x22, [sp, #32]
  43c374:	mov	x21, x0
  43c378:	mov	x0, #0x3800                	// #14336
  43c37c:	stp	x23, x24, [sp, #48]
  43c380:	mov	x24, x1
  43c384:	stp	x25, x26, [sp, #64]
  43c388:	stp	x27, x28, [sp, #80]
  43c38c:	bl	4045f0 <malloc@plt>
  43c390:	cbnz	x0, 43c39c <_obstack_memory_used@@Base+0x471c>
  43c394:	mov	w0, #0x0                   	// #0
  43c398:	b	43c404 <_obstack_memory_used@@Base+0x4784>
  43c39c:	stp	xzr, xzr, [x24, #88]
  43c3a0:	mov	x22, x0
  43c3a4:	add	x20, sp, #0x90
  43c3a8:	mov	x0, #0x1800                	// #6144
  43c3ac:	add	x27, x24, #0x8
  43c3b0:	add	x28, sp, #0xd0
  43c3b4:	add	x26, x22, x0
  43c3b8:	mov	x19, #0x0                   	// #0
  43c3bc:	mov	x0, x20
  43c3c0:	bl	4387b0 <_obstack_memory_used@@Base+0xb30>
  43c3c4:	str	xzr, [sp, #96]
  43c3c8:	ldr	x0, [x27, #8]
  43c3cc:	ldr	x1, [sp, #96]
  43c3d0:	cmp	x1, x0
  43c3d4:	b.lt	43c420 <_obstack_memory_used@@Base+0x47a0>  // b.tstop
  43c3d8:	cmp	x19, #0x0
  43c3dc:	b.gt	43c818 <_obstack_memory_used@@Base+0x4b98>
  43c3e0:	mov	x0, x22
  43c3e4:	bl	404ae0 <free@plt>
  43c3e8:	cbnz	x19, 43c394 <_obstack_memory_used@@Base+0x4714>
  43c3ec:	mov	x1, #0x100                 	// #256
  43c3f0:	mov	x0, #0x8                   	// #8
  43c3f4:	bl	4047a0 <calloc@plt>
  43c3f8:	cmp	x0, #0x0
  43c3fc:	str	x0, [x24, #88]
  43c400:	cset	w0, ne  // ne = any
  43c404:	ldp	x19, x20, [sp, #16]
  43c408:	ldp	x21, x22, [sp, #32]
  43c40c:	ldp	x23, x24, [sp, #48]
  43c410:	ldp	x25, x26, [sp, #64]
  43c414:	ldp	x27, x28, [sp, #80]
  43c418:	ldp	x29, x30, [sp], #240
  43c41c:	ret
  43c420:	ldr	x0, [sp, #96]
  43c424:	lsl	x0, x0, #3
  43c428:	str	x0, [sp, #104]
  43c42c:	ldr	x0, [x27, #16]
  43c430:	ldr	x1, [sp, #104]
  43c434:	ldr	x23, [x0, x1]
  43c438:	ldr	x0, [x21]
  43c43c:	lsl	x1, x23, #4
  43c440:	add	x23, x0, x23, lsl #4
  43c444:	ldr	w5, [x23, #8]
  43c448:	ldrb	w25, [x23, #8]
  43c44c:	ubfx	x5, x5, #8, #10
  43c450:	cmp	w25, #0x1
  43c454:	b.ne	43c49c <_obstack_memory_used@@Base+0x481c>  // b.any
  43c458:	ldrb	w1, [x0, x1]
  43c45c:	mov	x0, x20
  43c460:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  43c464:	cbz	w5, 43c544 <_obstack_memory_used@@Base+0x48c4>
  43c468:	tbz	w5, #5, 43c48c <_obstack_memory_used@@Base+0x480c>
  43c46c:	ldr	x1, [sp, #144]
  43c470:	mov	x0, x20
  43c474:	ubfx	w1, w1, #10, #1
  43c478:	bl	4387b0 <_obstack_memory_used@@Base+0xb30>
  43c47c:	cbz	w1, 43c5ac <_obstack_memory_used@@Base+0x492c>
  43c480:	ldr	x0, [sp, #144]
  43c484:	orr	x0, x0, #0x400
  43c488:	str	x0, [sp, #144]
  43c48c:	tbz	w5, #7, 43c53c <_obstack_memory_used@@Base+0x48bc>
  43c490:	mov	x0, x20
  43c494:	bl	4387b0 <_obstack_memory_used@@Base+0xb30>
  43c498:	b	43c5ac <_obstack_memory_used@@Base+0x492c>
  43c49c:	cmp	w25, #0x3
  43c4a0:	b.ne	43c4b4 <_obstack_memory_used@@Base+0x4834>  // b.any
  43c4a4:	ldr	x1, [x0, x1]
  43c4a8:	mov	x0, x20
  43c4ac:	bl	437df4 <_obstack_memory_used@@Base+0x174>
  43c4b0:	b	43c464 <_obstack_memory_used@@Base+0x47e4>
  43c4b4:	cmp	w25, #0x5
  43c4b8:	b.ne	43c510 <_obstack_memory_used@@Base+0x4890>  // b.any
  43c4bc:	ldr	w0, [x21, #180]
  43c4c0:	cmp	w0, #0x1
  43c4c4:	b.le	43c4fc <_obstack_memory_used@@Base+0x487c>
  43c4c8:	ldr	x1, [x21, #120]
  43c4cc:	mov	x0, x20
  43c4d0:	bl	437df4 <_obstack_memory_used@@Base+0x174>
  43c4d4:	ldr	x1, [x21, #216]
  43c4d8:	tbnz	w1, #6, 43c4e8 <_obstack_memory_used@@Base+0x4868>
  43c4dc:	ldr	x0, [sp, #144]
  43c4e0:	and	x0, x0, #0xfffffffffffffbff
  43c4e4:	str	x0, [sp, #144]
  43c4e8:	tbz	w1, #7, 43c464 <_obstack_memory_used@@Base+0x47e4>
  43c4ec:	ldr	x0, [sp, #144]
  43c4f0:	and	x0, x0, #0xfffffffffffffffe
  43c4f4:	str	x0, [sp, #144]
  43c4f8:	b	43c464 <_obstack_memory_used@@Base+0x47e4>
  43c4fc:	mov	x0, #0xffffffffffffffff    	// #-1
  43c500:	mov	x1, #0xffffffffffffffff    	// #-1
  43c504:	stp	x0, x1, [x20]
  43c508:	stp	x0, x1, [x20, #16]
  43c50c:	b	43c4d4 <_obstack_memory_used@@Base+0x4854>
  43c510:	cmp	w25, #0x7
  43c514:	b.ne	43c5ac <_obstack_memory_used@@Base+0x492c>  // b.any
  43c518:	mov	x0, #0xffffffffffffffff    	// #-1
  43c51c:	mov	x1, #0xffffffffffffffff    	// #-1
  43c520:	stp	x0, x1, [x20]
  43c524:	ldr	x0, [x21, #216]
  43c528:	tbnz	w0, #6, 43c534 <_obstack_memory_used@@Base+0x48b4>
  43c52c:	mov	x1, #0xfffffffffffffbff    	// #-1025
  43c530:	str	x1, [sp, #144]
  43c534:	tbz	w0, #7, 43c464 <_obstack_memory_used@@Base+0x47e4>
  43c538:	b	43c4ec <_obstack_memory_used@@Base+0x486c>
  43c53c:	tbnz	w5, #2, 43c550 <_obstack_memory_used@@Base+0x48d0>
  43c540:	tbnz	w5, #3, 43c5ec <_obstack_memory_used@@Base+0x496c>
  43c544:	mov	x3, x26
  43c548:	mov	x2, #0x0                   	// #0
  43c54c:	b	43c7a0 <_obstack_memory_used@@Base+0x4b20>
  43c550:	cmp	w25, #0x1
  43c554:	b.ne	43c560 <_obstack_memory_used@@Base+0x48e0>  // b.any
  43c558:	ldrb	w0, [x23, #10]
  43c55c:	tbz	w0, #6, 43c490 <_obstack_memory_used@@Base+0x4810>
  43c560:	ldr	w0, [x21, #180]
  43c564:	add	x4, x21, #0xb8
  43c568:	cmp	w0, #0x1
  43c56c:	b.le	43c5bc <_obstack_memory_used@@Base+0x493c>
  43c570:	ldr	x7, [x21, #120]
  43c574:	mov	x3, x20
  43c578:	mov	x0, #0x0                   	// #0
  43c57c:	mov	x2, #0x0                   	// #0
  43c580:	ldr	x1, [x7, x2, lsl #3]
  43c584:	ldr	x6, [x4, x2, lsl #3]
  43c588:	add	x2, x2, #0x1
  43c58c:	cmp	x2, #0x4
  43c590:	orn	x1, x6, x1
  43c594:	ldr	x6, [x3]
  43c598:	and	x1, x1, x6
  43c59c:	str	x1, [x3], #8
  43c5a0:	orr	x0, x0, x1
  43c5a4:	b.ne	43c580 <_obstack_memory_used@@Base+0x4900>  // b.any
  43c5a8:	cbnz	x0, 43c540 <_obstack_memory_used@@Base+0x48c0>
  43c5ac:	ldr	x0, [sp, #96]
  43c5b0:	add	x0, x0, #0x1
  43c5b4:	str	x0, [sp, #96]
  43c5b8:	b	43c3c8 <_obstack_memory_used@@Base+0x4748>
  43c5bc:	mov	x3, x20
  43c5c0:	mov	x0, #0x0                   	// #0
  43c5c4:	mov	x1, #0x0                   	// #0
  43c5c8:	ldr	x2, [x4, x1, lsl #3]
  43c5cc:	add	x1, x1, #0x1
  43c5d0:	ldr	x6, [x3]
  43c5d4:	cmp	x1, #0x4
  43c5d8:	and	x2, x2, x6
  43c5dc:	str	x2, [x3], #8
  43c5e0:	orr	x0, x0, x2
  43c5e4:	b.ne	43c5c8 <_obstack_memory_used@@Base+0x4948>  // b.any
  43c5e8:	b	43c5a8 <_obstack_memory_used@@Base+0x4928>
  43c5ec:	cmp	w25, #0x1
  43c5f0:	b.ne	43c5fc <_obstack_memory_used@@Base+0x497c>  // b.any
  43c5f4:	ldrb	w0, [x23, #10]
  43c5f8:	tbnz	w0, #6, 43c490 <_obstack_memory_used@@Base+0x4810>
  43c5fc:	ldr	w0, [x21, #180]
  43c600:	add	x4, x21, #0xb8
  43c604:	cmp	w0, #0x1
  43c608:	b.le	43c64c <_obstack_memory_used@@Base+0x49cc>
  43c60c:	ldr	x6, [x21, #120]
  43c610:	mov	x3, x20
  43c614:	mov	x0, #0x0                   	// #0
  43c618:	mov	x2, #0x0                   	// #0
  43c61c:	ldr	x5, [x6, x2, lsl #3]
  43c620:	ldr	x1, [x4, x2, lsl #3]
  43c624:	add	x2, x2, #0x1
  43c628:	cmp	x2, #0x4
  43c62c:	and	x1, x1, x5
  43c630:	ldr	x5, [x3]
  43c634:	bic	x1, x5, x1
  43c638:	str	x1, [x3], #8
  43c63c:	orr	x0, x0, x1
  43c640:	b.ne	43c61c <_obstack_memory_used@@Base+0x499c>  // b.any
  43c644:	cbz	x0, 43c5ac <_obstack_memory_used@@Base+0x492c>
  43c648:	b	43c544 <_obstack_memory_used@@Base+0x48c4>
  43c64c:	mov	x3, x20
  43c650:	mov	x0, #0x0                   	// #0
  43c654:	mov	x1, #0x0                   	// #0
  43c658:	ldr	x2, [x4, x1, lsl #3]
  43c65c:	add	x1, x1, #0x1
  43c660:	ldr	x5, [x3]
  43c664:	cmp	x1, #0x4
  43c668:	bic	x2, x5, x2
  43c66c:	str	x2, [x3], #8
  43c670:	orr	x0, x0, x2
  43c674:	b.ne	43c658 <_obstack_memory_used@@Base+0x49d8>  // b.any
  43c678:	b	43c644 <_obstack_memory_used@@Base+0x49c4>
  43c67c:	lsl	x4, x2, #5
  43c680:	cmp	w25, #0x1
  43c684:	b.ne	43c6a4 <_obstack_memory_used@@Base+0x4a24>  // b.any
  43c688:	ldrb	w0, [x23]
  43c68c:	ldrb	w1, [x23]
  43c690:	asr	x0, x0, #6
  43c694:	add	x0, x26, x0, lsl #3
  43c698:	ldr	x0, [x0, x4]
  43c69c:	lsr	x0, x0, x1
  43c6a0:	tbz	w0, #0, 43c798 <_obstack_memory_used@@Base+0x4b18>
  43c6a4:	mov	x4, #0x0                   	// #0
  43c6a8:	mov	x0, #0x0                   	// #0
  43c6ac:	ldr	x5, [x3, x0, lsl #3]
  43c6b0:	ldr	x1, [x20, x0, lsl #3]
  43c6b4:	and	x1, x1, x5
  43c6b8:	add	x5, sp, #0xb0
  43c6bc:	orr	x4, x4, x1
  43c6c0:	str	x1, [x5, x0, lsl #3]
  43c6c4:	add	x0, x0, #0x1
  43c6c8:	cmp	x0, #0x4
  43c6cc:	b.ne	43c6ac <_obstack_memory_used@@Base+0x4a2c>  // b.any
  43c6d0:	cbz	x4, 43c798 <_obstack_memory_used@@Base+0x4b18>
  43c6d4:	mov	x5, x20
  43c6d8:	mov	x6, #0x0                   	// #0
  43c6dc:	mov	x4, #0x0                   	// #0
  43c6e0:	mov	x0, #0x0                   	// #0
  43c6e4:	ldr	x1, [x3, x0, lsl #3]
  43c6e8:	ldr	x7, [x5]
  43c6ec:	bic	x8, x1, x7
  43c6f0:	bic	x1, x7, x1
  43c6f4:	str	x8, [x28, x0, lsl #3]
  43c6f8:	add	x0, x0, #0x1
  43c6fc:	str	x1, [x5], #8
  43c700:	orr	x4, x4, x8
  43c704:	orr	x6, x6, x1
  43c708:	cmp	x0, #0x4
  43c70c:	b.ne	43c6e4 <_obstack_memory_used@@Base+0x4a64>  // b.any
  43c710:	mov	x0, #0x18                  	// #24
  43c714:	madd	x7, x2, x0, x22
  43c718:	cbz	x4, 43c768 <_obstack_memory_used@@Base+0x4ae8>
  43c71c:	add	x0, x26, x19, lsl #5
  43c720:	stp	x7, x3, [sp, #112]
  43c724:	ldp	x4, x5, [x28]
  43c728:	stp	x4, x5, [x0]
  43c72c:	ldp	x4, x5, [x28, #16]
  43c730:	stp	x4, x5, [x0, #16]
  43c734:	ldp	x0, x1, [sp, #176]
  43c738:	stp	x0, x1, [x3]
  43c73c:	ldp	x0, x1, [sp, #192]
  43c740:	stp	x0, x1, [x3, #16]
  43c744:	mov	x1, x7
  43c748:	stp	x2, x6, [sp, #128]
  43c74c:	mov	x0, #0x18                  	// #24
  43c750:	madd	x0, x19, x0, x22
  43c754:	bl	43b040 <_obstack_memory_used@@Base+0x33c0>
  43c758:	cbnz	w0, 43c7e8 <_obstack_memory_used@@Base+0x4b68>
  43c75c:	ldp	x7, x3, [sp, #112]
  43c760:	add	x19, x19, #0x1
  43c764:	ldp	x2, x6, [sp, #128]
  43c768:	stp	x2, x6, [sp, #112]
  43c76c:	ldr	x0, [x27, #16]
  43c770:	str	x3, [sp, #128]
  43c774:	ldr	x1, [sp, #104]
  43c778:	ldr	x1, [x0, x1]
  43c77c:	mov	x0, x7
  43c780:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43c784:	tst	w0, #0xff
  43c788:	b.eq	43c7e8 <_obstack_memory_used@@Base+0x4b68>  // b.none
  43c78c:	ldp	x2, x6, [sp, #112]
  43c790:	ldr	x3, [sp, #128]
  43c794:	cbz	x6, 43c7a8 <_obstack_memory_used@@Base+0x4b28>
  43c798:	add	x2, x2, #0x1
  43c79c:	add	x3, x3, #0x20
  43c7a0:	cmp	x2, x19
  43c7a4:	b.lt	43c67c <_obstack_memory_used@@Base+0x49fc>  // b.tstop
  43c7a8:	cmp	x2, x19
  43c7ac:	b.ne	43c5ac <_obstack_memory_used@@Base+0x492c>  // b.any
  43c7b0:	add	x0, x26, x19, lsl #5
  43c7b4:	ldp	x2, x3, [x20]
  43c7b8:	stp	x2, x3, [x0]
  43c7bc:	ldp	x2, x3, [x20, #16]
  43c7c0:	stp	x2, x3, [x0, #16]
  43c7c4:	ldr	x0, [x27, #16]
  43c7c8:	ldr	x1, [sp, #104]
  43c7cc:	ldr	x1, [x0, x1]
  43c7d0:	mov	x0, #0x18                  	// #24
  43c7d4:	madd	x0, x19, x0, x22
  43c7d8:	bl	438638 <_obstack_memory_used@@Base+0x9b8>
  43c7dc:	cbnz	w0, 43c7e8 <_obstack_memory_used@@Base+0x4b68>
  43c7e0:	add	x19, x19, #0x1
  43c7e4:	b	43c490 <_obstack_memory_used@@Base+0x4810>
  43c7e8:	add	x21, x22, #0x10
  43c7ec:	mov	x20, #0x0                   	// #0
  43c7f0:	mov	x23, #0x18                  	// #24
  43c7f4:	cmp	x20, x19
  43c7f8:	b.ne	43c804 <_obstack_memory_used@@Base+0x4b84>  // b.any
  43c7fc:	mov	x19, #0xffffffffffffffff    	// #-1
  43c800:	b	43c3e0 <_obstack_memory_used@@Base+0x4760>
  43c804:	mul	x0, x20, x23
  43c808:	add	x20, x20, #0x1
  43c80c:	ldr	x0, [x21, x0]
  43c810:	bl	404ae0 <free@plt>
  43c814:	b	43c7f4 <_obstack_memory_used@@Base+0x4b74>
  43c818:	add	x1, x19, #0x1
  43c81c:	add	x0, sp, #0xb0
  43c820:	bl	438684 <_obstack_memory_used@@Base+0xa04>
  43c824:	str	w0, [sp, #144]
  43c828:	cbnz	w0, 43c858 <_obstack_memory_used@@Base+0x4bd8>
  43c82c:	mov	x0, #0xa855                	// #43093
  43c830:	movk	x0, #0xaaaa, lsl #16
  43c834:	movk	x0, #0xaaaa, lsl #32
  43c838:	movk	x0, #0xaaa, lsl #48
  43c83c:	cmp	x19, x0
  43c840:	b.gt	43c858 <_obstack_memory_used@@Base+0x4bd8>
  43c844:	mov	x0, #0x18                  	// #24
  43c848:	mul	x0, x19, x0
  43c84c:	bl	4045f0 <malloc@plt>
  43c850:	mov	x23, x0
  43c854:	cbnz	x0, 43c890 <_obstack_memory_used@@Base+0x4c10>
  43c858:	ldr	x0, [sp, #192]
  43c85c:	add	x21, x22, #0x10
  43c860:	mov	x20, #0x0                   	// #0
  43c864:	mov	x23, #0x18                  	// #24
  43c868:	bl	404ae0 <free@plt>
  43c86c:	mul	x0, x20, x23
  43c870:	add	x20, x20, #0x1
  43c874:	ldr	x0, [x21, x0]
  43c878:	bl	404ae0 <free@plt>
  43c87c:	cmp	x20, x19
  43c880:	b.ne	43c86c <_obstack_memory_used@@Base+0x4bec>  // b.any
  43c884:	mov	x0, x22
  43c888:	bl	404ae0 <free@plt>
  43c88c:	b	43c394 <_obstack_memory_used@@Base+0x4714>
  43c890:	add	x25, x0, x19, lsl #3
  43c894:	add	x0, x0, x19, lsl #4
  43c898:	add	x28, x22, #0x8
  43c89c:	str	x0, [sp, #104]
  43c8a0:	add	x0, sp, #0xd0
  43c8a4:	bl	4387b0 <_obstack_memory_used@@Base+0xb30>
  43c8a8:	mov	x0, #0x18                  	// #24
  43c8ac:	mov	x27, #0x0                   	// #0
  43c8b0:	str	wzr, [sp, #96]
  43c8b4:	str	x0, [sp, #112]
  43c8b8:	mov	x2, #0x0                   	// #0
  43c8bc:	str	xzr, [sp, #184]
  43c8c0:	ldr	x0, [x28]
  43c8c4:	cmp	x0, x2
  43c8c8:	b.gt	43ca40 <_obstack_memory_used@@Base+0x4dc0>
  43c8cc:	add	x2, sp, #0xb0
  43c8d0:	mov	x1, x21
  43c8d4:	mov	x0, x20
  43c8d8:	mov	w3, #0x0                   	// #0
  43c8dc:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43c8e0:	str	x0, [x23, x27, lsl #3]
  43c8e4:	cbnz	x0, 43c8f0 <_obstack_memory_used@@Base+0x4c70>
  43c8e8:	ldr	w1, [sp, #144]
  43c8ec:	cbnz	w1, 43ca84 <_obstack_memory_used@@Base+0x4e04>
  43c8f0:	ldrsb	w1, [x0, #104]
  43c8f4:	tbz	w1, #31, 43ca90 <_obstack_memory_used@@Base+0x4e10>
  43c8f8:	add	x2, sp, #0xb0
  43c8fc:	mov	x1, x21
  43c900:	mov	x0, x20
  43c904:	mov	w3, #0x1                   	// #1
  43c908:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43c90c:	str	x0, [x25, x27, lsl #3]
  43c910:	cbnz	x0, 43c91c <_obstack_memory_used@@Base+0x4c9c>
  43c914:	ldr	w1, [sp, #144]
  43c918:	cbnz	w1, 43ca84 <_obstack_memory_used@@Base+0x4e04>
  43c91c:	ldr	x1, [x23, x27, lsl #3]
  43c920:	cmp	x0, x1
  43c924:	b.eq	43c93c <_obstack_memory_used@@Base+0x4cbc>  // b.none
  43c928:	ldr	w0, [x21, #180]
  43c92c:	cmp	w0, #0x2
  43c930:	ldr	w0, [sp, #96]
  43c934:	csinc	w0, w0, wzr, lt  // lt = tstop
  43c938:	str	w0, [sp, #96]
  43c93c:	mov	x1, x21
  43c940:	add	x2, sp, #0xb0
  43c944:	mov	x0, x20
  43c948:	mov	w3, #0x2                   	// #2
  43c94c:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43c950:	ldr	x1, [sp, #104]
  43c954:	str	x0, [x1, x27, lsl #3]
  43c958:	cbnz	x0, 43c964 <_obstack_memory_used@@Base+0x4ce4>
  43c95c:	ldr	w0, [sp, #144]
  43c960:	cbnz	w0, 43ca84 <_obstack_memory_used@@Base+0x4e04>
  43c964:	add	x1, x26, x27, lsl #5
  43c968:	add	x0, sp, #0xd0
  43c96c:	add	x27, x27, #0x1
  43c970:	bl	437df4 <_obstack_memory_used@@Base+0x174>
  43c974:	add	x28, x28, #0x18
  43c978:	cmp	x27, x19
  43c97c:	b.ne	43c8b8 <_obstack_memory_used@@Base+0x4c38>  // b.any
  43c980:	ldr	w0, [sp, #96]
  43c984:	cbnz	w0, 43caf8 <_obstack_memory_used@@Base+0x4e78>
  43c988:	mov	x1, #0x100                 	// #256
  43c98c:	mov	x0, #0x8                   	// #8
  43c990:	bl	4047a0 <calloc@plt>
  43c994:	str	x0, [x24, #88]
  43c998:	cbz	x0, 43ca84 <_obstack_memory_used@@Base+0x4e04>
  43c99c:	add	x21, x21, #0xb8
  43c9a0:	mov	x1, #0x0                   	// #0
  43c9a4:	add	x2, sp, #0xd0
  43c9a8:	lsl	x6, x1, #3
  43c9ac:	mov	x5, #0x1                   	// #1
  43c9b0:	ldr	x3, [x2, x1]
  43c9b4:	cbnz	x3, 43caa4 <_obstack_memory_used@@Base+0x4e24>
  43c9b8:	add	x1, x1, #0x8
  43c9bc:	cmp	x1, #0x20
  43c9c0:	b.ne	43c9a4 <_obstack_memory_used@@Base+0x4d24>  // b.any
  43c9c4:	ldr	x1, [sp, #208]
  43c9c8:	tst	w1, #0x400
  43c9cc:	b.eq	43c9fc <_obstack_memory_used@@Base+0x4d7c>  // b.none
  43c9d0:	mov	x1, #0x0                   	// #0
  43c9d4:	lsl	x2, x1, #5
  43c9d8:	ldr	x2, [x26, x2]
  43c9dc:	tst	w2, #0x400
  43c9e0:	b.eq	43cb7c <_obstack_memory_used@@Base+0x4efc>  // b.none
  43c9e4:	ldr	x2, [sp, #104]
  43c9e8:	ldr	x1, [x2, x1, lsl #3]
  43c9ec:	str	x1, [x0, #80]
  43c9f0:	ldr	w2, [sp, #96]
  43c9f4:	cbz	w2, 43c9fc <_obstack_memory_used@@Base+0x4d7c>
  43c9f8:	str	x1, [x0, #2128]
  43c9fc:	mov	x0, x23
  43ca00:	bl	404ae0 <free@plt>
  43ca04:	ldr	x0, [sp, #192]
  43ca08:	add	x23, x22, #0x10
  43ca0c:	mov	x20, #0x0                   	// #0
  43ca10:	mov	x21, #0x18                  	// #24
  43ca14:	bl	404ae0 <free@plt>
  43ca18:	mul	x0, x20, x21
  43ca1c:	add	x20, x20, #0x1
  43ca20:	ldr	x0, [x23, x0]
  43ca24:	bl	404ae0 <free@plt>
  43ca28:	cmp	x20, x19
  43ca2c:	b.ne	43ca18 <_obstack_memory_used@@Base+0x4d98>  // b.any
  43ca30:	mov	x0, x22
  43ca34:	bl	404ae0 <free@plt>
  43ca38:	mov	w0, #0x1                   	// #1
  43ca3c:	b	43c404 <_obstack_memory_used@@Base+0x4784>
  43ca40:	ldr	x0, [x28, #8]
  43ca44:	ldr	x1, [x0, x2, lsl #3]
  43ca48:	ldr	x0, [x21, #24]
  43ca4c:	ldr	x0, [x0, x1, lsl #3]
  43ca50:	cmn	x0, #0x1
  43ca54:	b.ne	43ca60 <_obstack_memory_used@@Base+0x4de0>  // b.any
  43ca58:	add	x2, x2, #0x1
  43ca5c:	b	43c8c0 <_obstack_memory_used@@Base+0x4c40>
  43ca60:	str	x2, [sp, #120]
  43ca64:	ldr	x1, [x21, #48]
  43ca68:	ldr	x2, [sp, #112]
  43ca6c:	madd	x1, x0, x2, x1
  43ca70:	add	x0, sp, #0xb0
  43ca74:	bl	43a198 <_obstack_memory_used@@Base+0x2518>
  43ca78:	str	w0, [sp, #144]
  43ca7c:	ldr	x2, [sp, #120]
  43ca80:	cbz	w0, 43ca58 <_obstack_memory_used@@Base+0x4dd8>
  43ca84:	mov	x0, x23
  43ca88:	bl	404ae0 <free@plt>
  43ca8c:	b	43c858 <_obstack_memory_used@@Base+0x4bd8>
  43ca90:	ldr	x1, [sp, #104]
  43ca94:	str	x0, [x25, x27, lsl #3]
  43ca98:	ldr	x0, [x23, x27, lsl #3]
  43ca9c:	str	x0, [x1, x27, lsl #3]
  43caa0:	b	43c964 <_obstack_memory_used@@Base+0x4ce4>
  43caa4:	tbz	w3, #0, 43cad8 <_obstack_memory_used@@Base+0x4e58>
  43caa8:	add	x7, x22, x1
  43caac:	mov	x2, #0x0                   	// #0
  43cab0:	ldr	x8, [x7, #6144]
  43cab4:	add	x7, x7, #0x20
  43cab8:	tst	x5, x8
  43cabc:	b.eq	43cae8 <_obstack_memory_used@@Base+0x4e68>  // b.none
  43cac0:	ldr	x7, [x21, x1]
  43cac4:	lsl	x2, x2, #3
  43cac8:	tst	x5, x7
  43cacc:	b.eq	43caf0 <_obstack_memory_used@@Base+0x4e70>  // b.none
  43cad0:	ldr	x2, [x25, x2]
  43cad4:	str	x2, [x0, x6, lsl #3]
  43cad8:	lsl	x5, x5, #1
  43cadc:	lsr	x3, x3, #1
  43cae0:	add	x6, x6, #0x1
  43cae4:	b	43c9b4 <_obstack_memory_used@@Base+0x4d34>
  43cae8:	add	x2, x2, #0x1
  43caec:	b	43cab0 <_obstack_memory_used@@Base+0x4e30>
  43caf0:	ldr	x2, [x23, x2]
  43caf4:	b	43cad4 <_obstack_memory_used@@Base+0x4e54>
  43caf8:	mov	x1, #0x200                 	// #512
  43cafc:	mov	x0, #0x8                   	// #8
  43cb00:	bl	4047a0 <calloc@plt>
  43cb04:	str	x0, [x24, #96]
  43cb08:	cbz	x0, 43ca84 <_obstack_memory_used@@Base+0x4e04>
  43cb0c:	mov	x1, #0x0                   	// #0
  43cb10:	add	x2, sp, #0xd0
  43cb14:	add	x5, x0, x1, lsl #6
  43cb18:	mov	x6, #0x1                   	// #1
  43cb1c:	ldr	x3, [x2, x1]
  43cb20:	cbnz	x3, 43cb34 <_obstack_memory_used@@Base+0x4eb4>
  43cb24:	add	x1, x1, #0x8
  43cb28:	cmp	x1, #0x20
  43cb2c:	b.ne	43cb10 <_obstack_memory_used@@Base+0x4e90>  // b.any
  43cb30:	b	43c9c4 <_obstack_memory_used@@Base+0x4d44>
  43cb34:	tbz	w3, #0, 43cb64 <_obstack_memory_used@@Base+0x4ee4>
  43cb38:	add	x7, x22, x1
  43cb3c:	mov	x2, #0x0                   	// #0
  43cb40:	ldr	x8, [x7, #6144]
  43cb44:	add	x7, x7, #0x20
  43cb48:	tst	x6, x8
  43cb4c:	b.eq	43cb74 <_obstack_memory_used@@Base+0x4ef4>  // b.none
  43cb50:	lsl	x2, x2, #3
  43cb54:	ldr	x7, [x23, x2]
  43cb58:	str	x7, [x5]
  43cb5c:	ldr	x2, [x25, x2]
  43cb60:	str	x2, [x5, #2048]
  43cb64:	lsl	x6, x6, #1
  43cb68:	lsr	x3, x3, #1
  43cb6c:	add	x5, x5, #0x8
  43cb70:	b	43cb20 <_obstack_memory_used@@Base+0x4ea0>
  43cb74:	add	x2, x2, #0x1
  43cb78:	b	43cb40 <_obstack_memory_used@@Base+0x4ec0>
  43cb7c:	add	x1, x1, #0x1
  43cb80:	cmp	x1, x19
  43cb84:	b.ne	43c9d4 <_obstack_memory_used@@Base+0x4d54>  // b.any
  43cb88:	b	43c9fc <_obstack_memory_used@@Base+0x4d7c>
  43cb8c:	stp	x29, x30, [sp, #-32]!
  43cb90:	mov	x29, sp
  43cb94:	stp	x19, x20, [sp, #16]
  43cb98:	mov	x19, x0
  43cb9c:	tbz	x1, #63, 43cbb0 <_obstack_memory_used@@Base+0x4f30>
  43cba0:	ldr	w0, [x19, #112]
  43cba4:	ldp	x19, x20, [sp, #16]
  43cba8:	ldp	x29, x30, [sp], #32
  43cbac:	ret
  43cbb0:	ldr	x0, [x0, #88]
  43cbb4:	cmp	x0, x1
  43cbb8:	b.ne	43cbd0 <_obstack_memory_used@@Base+0x4f50>  // b.any
  43cbbc:	tst	x2, #0x2
  43cbc0:	mov	w0, #0x8                   	// #8
  43cbc4:	mov	w1, #0xa                   	// #10
  43cbc8:	csel	w0, w0, w1, ne  // ne = any
  43cbcc:	b	43cba4 <_obstack_memory_used@@Base+0x4f24>
  43cbd0:	ldr	w0, [x19, #144]
  43cbd4:	cmp	w0, #0x1
  43cbd8:	b.gt	43cc54 <_obstack_memory_used@@Base+0x4fd4>
  43cbdc:	ldr	x0, [x19, #8]
  43cbe0:	ldrb	w2, [x0, x1]
  43cbe4:	ldrb	w0, [x0, x1]
  43cbe8:	ldr	x1, [x19, #128]
  43cbec:	asr	x0, x0, #6
  43cbf0:	ldr	x0, [x1, x0, lsl #3]
  43cbf4:	lsr	x0, x0, x2
  43cbf8:	tbnz	w0, #0, 43cc64 <_obstack_memory_used@@Base+0x4fe4>
  43cbfc:	cmp	w2, #0xa
  43cc00:	b	43cc3c <_obstack_memory_used@@Base+0x4fbc>
  43cc04:	sub	x1, x1, #0x1
  43cc08:	cmn	x1, #0x1
  43cc0c:	b.eq	43cba0 <_obstack_memory_used@@Base+0x4f20>  // b.none
  43cc10:	ldr	w20, [x0, x1, lsl #2]
  43cc14:	cmn	w20, #0x1
  43cc18:	b.eq	43cc04 <_obstack_memory_used@@Base+0x4f84>  // b.none
  43cc1c:	ldrb	w0, [x19, #142]
  43cc20:	cbz	w0, 43cc38 <_obstack_memory_used@@Base+0x4fb8>
  43cc24:	mov	w0, w20
  43cc28:	bl	404cd0 <iswalnum@plt>
  43cc2c:	cbnz	w0, 43cc64 <_obstack_memory_used@@Base+0x4fe4>
  43cc30:	cmp	w20, #0x5f
  43cc34:	b.eq	43cc64 <_obstack_memory_used@@Base+0x4fe4>  // b.none
  43cc38:	cmp	w20, #0xa
  43cc3c:	b.ne	43cc5c <_obstack_memory_used@@Base+0x4fdc>  // b.any
  43cc40:	ldrb	w0, [x19, #141]
  43cc44:	cmp	w0, #0x0
  43cc48:	cset	w0, ne  // ne = any
  43cc4c:	lsl	w0, w0, #1
  43cc50:	b	43cba4 <_obstack_memory_used@@Base+0x4f24>
  43cc54:	ldr	x0, [x19, #16]
  43cc58:	b	43cc10 <_obstack_memory_used@@Base+0x4f90>
  43cc5c:	mov	w0, #0x0                   	// #0
  43cc60:	b	43cba4 <_obstack_memory_used@@Base+0x4f24>
  43cc64:	mov	w0, #0x1                   	// #1
  43cc68:	b	43cba4 <_obstack_memory_used@@Base+0x4f24>
  43cc6c:	stp	x29, x30, [sp, #-32]!
  43cc70:	mov	x29, sp
  43cc74:	stp	x19, x20, [sp, #16]
  43cc78:	mov	x20, x1
  43cc7c:	mov	x1, x2
  43cc80:	ldr	w2, [x0, #160]
  43cc84:	mov	x19, x0
  43cc88:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43cc8c:	and	w6, w0, #0x8
  43cc90:	ldr	x5, [x20, #16]
  43cc94:	and	w7, w0, #0x2
  43cc98:	and	w2, w0, #0x1
  43cc9c:	mov	x4, #0x0                   	// #0
  43cca0:	cmp	x5, x4
  43cca4:	b.gt	43ccb8 <_obstack_memory_used@@Base+0x5038>
  43cca8:	mov	x0, #0x0                   	// #0
  43ccac:	ldp	x19, x20, [sp, #16]
  43ccb0:	ldp	x29, x30, [sp], #32
  43ccb4:	ret
  43ccb8:	ldr	x0, [x20, #24]
  43ccbc:	ldr	x1, [x19, #152]
  43ccc0:	ldr	x0, [x0, x4, lsl #3]
  43ccc4:	ldr	x1, [x1]
  43ccc8:	add	x1, x1, x0, lsl #4
  43cccc:	ldr	w3, [x1, #8]
  43ccd0:	ldrb	w1, [x1, #8]
  43ccd4:	ubfx	x3, x3, #8, #10
  43ccd8:	cmp	w1, #0x2
  43ccdc:	b.ne	43cd04 <_obstack_memory_used@@Base+0x5084>  // b.any
  43cce0:	cbz	w3, 43ccac <_obstack_memory_used@@Base+0x502c>
  43cce4:	tbz	w3, #2, 43ccec <_obstack_memory_used@@Base+0x506c>
  43cce8:	cbz	w2, 43cd04 <_obstack_memory_used@@Base+0x5084>
  43ccec:	tbz	w3, #3, 43ccf4 <_obstack_memory_used@@Base+0x5074>
  43ccf0:	cbnz	w2, 43cd04 <_obstack_memory_used@@Base+0x5084>
  43ccf4:	tbz	w3, #5, 43ccfc <_obstack_memory_used@@Base+0x507c>
  43ccf8:	cbz	w7, 43cd04 <_obstack_memory_used@@Base+0x5084>
  43ccfc:	tbz	w3, #7, 43ccac <_obstack_memory_used@@Base+0x502c>
  43cd00:	cbnz	w6, 43ccac <_obstack_memory_used@@Base+0x502c>
  43cd04:	add	x4, x4, #0x1
  43cd08:	b	43cca0 <_obstack_memory_used@@Base+0x5020>
  43cd0c:	stp	x29, x30, [sp, #-128]!
  43cd10:	mov	x29, sp
  43cd14:	stp	x19, x20, [sp, #16]
  43cd18:	mov	x19, x0
  43cd1c:	ldr	x20, [x0, #40]
  43cd20:	stp	x21, x22, [sp, #32]
  43cd24:	mov	x22, x1
  43cd28:	stp	x23, x24, [sp, #48]
  43cd2c:	cmp	x20, x1
  43cd30:	stp	x25, x26, [sp, #64]
  43cd34:	mov	w25, w2
  43cd38:	stp	x27, x28, [sp, #80]
  43cd3c:	b.gt	43ce8c <_obstack_memory_used@@Base+0x520c>
  43cd40:	sub	x20, x1, x20
  43cd44:	cbz	x20, 43ce34 <_obstack_memory_used@@Base+0x51b4>
  43cd48:	ldp	x23, x1, [x19, #48]
  43cd4c:	ldrb	w0, [x19, #140]
  43cd50:	cmp	x1, x20
  43cd54:	b.le	43d028 <_obstack_memory_used@@Base+0x53a8>
  43cd58:	cbz	w0, 43cfbc <_obstack_memory_used@@Base+0x533c>
  43cd5c:	ldr	x24, [x19, #24]
  43cd60:	mov	x0, x23
  43cd64:	mov	x1, #0x0                   	// #0
  43cd68:	mov	x3, #0x2                   	// #2
  43cd6c:	add	x21, x1, x0
  43cd70:	sdiv	x21, x21, x3
  43cd74:	ldr	x2, [x24, x21, lsl #3]
  43cd78:	cmp	x2, x20
  43cd7c:	b.gt	43cee4 <_obstack_memory_used@@Base+0x5264>
  43cd80:	b.ge	43cd9c <_obstack_memory_used@@Base+0x511c>  // b.tcont
  43cd84:	add	x1, x21, #0x1
  43cd88:	cmp	x1, x0
  43cd8c:	b.lt	43cd6c <_obstack_memory_used@@Base+0x50ec>  // b.tstop
  43cd90:	cmp	x2, x20
  43cd94:	b.ge	43cd9c <_obstack_memory_used@@Base+0x511c>  // b.tcont
  43cd98:	add	x21, x21, #0x1
  43cd9c:	mov	w2, w25
  43cda0:	sub	x1, x21, #0x1
  43cda4:	mov	x0, x19
  43cda8:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43cdac:	str	w0, [x19, #112]
  43cdb0:	cmp	x20, x23
  43cdb4:	b.ge	43cf08 <_obstack_memory_used@@Base+0x5288>  // b.tcont
  43cdb8:	cmp	x20, x21
  43cdbc:	b.ne	43cf08 <_obstack_memory_used@@Base+0x5288>  // b.any
  43cdc0:	ldr	x0, [x24, x20, lsl #3]
  43cdc4:	cmp	x0, x20
  43cdc8:	b.ne	43cf08 <_obstack_memory_used@@Base+0x5288>  // b.any
  43cdcc:	ldr	x0, [x19, #16]
  43cdd0:	sub	x2, x23, x20
  43cdd4:	lsl	x2, x2, #2
  43cdd8:	add	x1, x0, x20, lsl #2
  43cddc:	bl	404210 <memmove@plt>
  43cde0:	ldr	x0, [x19, #8]
  43cde4:	ldr	x2, [x19, #48]
  43cde8:	add	x1, x0, x20
  43cdec:	sub	x2, x2, x20
  43cdf0:	bl	404210 <memmove@plt>
  43cdf4:	ldr	x0, [x19, #48]
  43cdf8:	lsl	x1, x20, #3
  43cdfc:	sub	x0, x0, x20
  43ce00:	str	x0, [x19, #48]
  43ce04:	ldr	x0, [x19, #56]
  43ce08:	sub	x0, x0, x20
  43ce0c:	str	x0, [x19, #56]
  43ce10:	mov	x0, #0x0                   	// #0
  43ce14:	ldr	x2, [x19, #48]
  43ce18:	cmp	x2, x0
  43ce1c:	b.gt	43ceec <_obstack_memory_used@@Base+0x526c>
  43ce20:	ldrb	w0, [x19, #139]
  43ce24:	cbnz	w0, 43ce34 <_obstack_memory_used@@Base+0x51b4>
  43ce28:	ldr	x0, [x19, #8]
  43ce2c:	add	x0, x0, x20
  43ce30:	str	x0, [x19, #8]
  43ce34:	ldr	x0, [x19, #88]
  43ce38:	str	x22, [x19, #40]
  43ce3c:	ldr	x1, [x19, #104]
  43ce40:	sub	x0, x0, x20
  43ce44:	str	x0, [x19, #88]
  43ce48:	sub	x20, x1, x20
  43ce4c:	ldr	w1, [x19, #144]
  43ce50:	str	x20, [x19, #104]
  43ce54:	cmp	w1, #0x1
  43ce58:	b.le	43d2c8 <_obstack_memory_used@@Base+0x5648>
  43ce5c:	ldrb	w0, [x19, #136]
  43ce60:	cbz	w0, 43d2b4 <_obstack_memory_used@@Base+0x5634>
  43ce64:	mov	x0, x19
  43ce68:	bl	43892c <_obstack_memory_used@@Base+0xcac>
  43ce6c:	cbz	w0, 43d2bc <_obstack_memory_used@@Base+0x563c>
  43ce70:	ldp	x19, x20, [sp, #16]
  43ce74:	ldp	x21, x22, [sp, #32]
  43ce78:	ldp	x23, x24, [sp, #48]
  43ce7c:	ldp	x25, x26, [sp, #64]
  43ce80:	ldp	x27, x28, [sp, #80]
  43ce84:	ldp	x29, x30, [sp], #128
  43ce88:	ret
  43ce8c:	ldr	w0, [x0, #144]
  43ce90:	cmp	w0, #0x1
  43ce94:	b.le	43ce9c <_obstack_memory_used@@Base+0x521c>
  43ce98:	str	xzr, [x19, #32]
  43ce9c:	ldr	x0, [x19, #80]
  43cea0:	str	x0, [x19, #88]
  43cea4:	ldr	x0, [x19, #96]
  43cea8:	tst	x25, #0x1
  43ceac:	mov	w1, #0x6                   	// #6
  43ceb0:	str	x0, [x19, #104]
  43ceb4:	mov	w0, #0x4                   	// #4
  43ceb8:	csel	w0, w0, w1, ne  // ne = any
  43cebc:	str	w0, [x19, #112]
  43cec0:	ldrb	w0, [x19, #139]
  43cec4:	stp	xzr, xzr, [x19, #40]
  43cec8:	str	xzr, [x19, #56]
  43cecc:	strb	wzr, [x19, #140]
  43ced0:	cbnz	w0, 43cedc <_obstack_memory_used@@Base+0x525c>
  43ced4:	ldr	x0, [x19]
  43ced8:	str	x0, [x19, #8]
  43cedc:	mov	x20, x22
  43cee0:	b	43cd44 <_obstack_memory_used@@Base+0x50c4>
  43cee4:	mov	x0, x21
  43cee8:	b	43cd88 <_obstack_memory_used@@Base+0x5108>
  43ceec:	ldr	x3, [x19, #24]
  43cef0:	ldr	x2, [x3, x1]
  43cef4:	add	x1, x1, #0x8
  43cef8:	sub	x2, x2, x20
  43cefc:	str	x2, [x3, x0, lsl #3]
  43cf00:	add	x0, x0, #0x1
  43cf04:	b	43ce14 <_obstack_memory_used@@Base+0x5194>
  43cf08:	ldr	x0, [x19, #80]
  43cf0c:	sub	x1, x24, #0x8
  43cf10:	strb	wzr, [x19, #140]
  43cf14:	sub	x0, x0, x22
  43cf18:	add	x0, x0, x20
  43cf1c:	str	x0, [x19, #88]
  43cf20:	ldr	x0, [x19, #96]
  43cf24:	sub	x0, x0, x22
  43cf28:	add	x0, x0, x20
  43cf2c:	str	x0, [x19, #104]
  43cf30:	cmp	x21, #0x0
  43cf34:	b.le	43cf44 <_obstack_memory_used@@Base+0x52c4>
  43cf38:	ldr	x0, [x1, x21, lsl #3]
  43cf3c:	cmp	x0, x20
  43cf40:	b.eq	43cf5c <_obstack_memory_used@@Base+0x52dc>  // b.none
  43cf44:	cmp	x21, x23
  43cf48:	b.lt	43cf64 <_obstack_memory_used@@Base+0x52e4>  // b.tstop
  43cf4c:	b.ne	43cf7c <_obstack_memory_used@@Base+0x52fc>  // b.any
  43cf50:	str	xzr, [x19, #48]
  43cf54:	ldr	x0, [x19, #48]
  43cf58:	b	43d020 <_obstack_memory_used@@Base+0x53a0>
  43cf5c:	sub	x21, x21, #0x1
  43cf60:	b	43cf30 <_obstack_memory_used@@Base+0x52b0>
  43cf64:	ldr	x0, [x19, #16]
  43cf68:	ldr	w0, [x0, x21, lsl #2]
  43cf6c:	cmn	w0, #0x1
  43cf70:	b.ne	43cf7c <_obstack_memory_used@@Base+0x52fc>  // b.any
  43cf74:	add	x21, x21, #0x1
  43cf78:	b	43cf44 <_obstack_memory_used@@Base+0x52c4>
  43cf7c:	ldr	x2, [x24, x21, lsl #3]
  43cf80:	sub	x2, x2, x20
  43cf84:	str	x2, [x19, #48]
  43cf88:	cbz	x2, 43cf54 <_obstack_memory_used@@Base+0x52d4>
  43cf8c:	mov	x0, #0x0                   	// #0
  43cf90:	mov	w1, #0xffffffff            	// #-1
  43cf94:	b	43cfa4 <_obstack_memory_used@@Base+0x5324>
  43cf98:	ldr	x3, [x19, #16]
  43cf9c:	str	w1, [x3, x0, lsl #2]
  43cfa0:	add	x0, x0, #0x1
  43cfa4:	cmp	x2, x0
  43cfa8:	b.gt	43cf98 <_obstack_memory_used@@Base+0x5318>
  43cfac:	ldr	x0, [x19, #8]
  43cfb0:	mov	w1, #0xff                  	// #255
  43cfb4:	bl	404700 <memset@plt>
  43cfb8:	b	43cf54 <_obstack_memory_used@@Base+0x52d4>
  43cfbc:	mov	w2, w25
  43cfc0:	sub	x1, x20, #0x1
  43cfc4:	mov	x0, x19
  43cfc8:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43cfcc:	str	w0, [x19, #112]
  43cfd0:	ldr	w0, [x19, #144]
  43cfd4:	cmp	w0, #0x1
  43cfd8:	b.le	43cff0 <_obstack_memory_used@@Base+0x5370>
  43cfdc:	ldr	x0, [x19, #16]
  43cfe0:	sub	x2, x23, x20
  43cfe4:	lsl	x2, x2, #2
  43cfe8:	add	x1, x0, x20, lsl #2
  43cfec:	bl	404210 <memmove@plt>
  43cff0:	ldrb	w0, [x19, #139]
  43cff4:	cbz	w0, 43d00c <_obstack_memory_used@@Base+0x538c>
  43cff8:	ldr	x0, [x19, #8]
  43cffc:	ldr	x2, [x19, #48]
  43d000:	add	x1, x0, x20
  43d004:	sub	x2, x2, x20
  43d008:	bl	404210 <memmove@plt>
  43d00c:	ldr	x0, [x19, #48]
  43d010:	sub	x0, x0, x20
  43d014:	str	x0, [x19, #48]
  43d018:	ldr	x0, [x19, #56]
  43d01c:	sub	x0, x0, x20
  43d020:	str	x0, [x19, #56]
  43d024:	b	43ce20 <_obstack_memory_used@@Base+0x51a0>
  43d028:	cbz	w0, 43d050 <_obstack_memory_used@@Base+0x53d0>
  43d02c:	ldr	x0, [x19, #80]
  43d030:	strb	wzr, [x19, #140]
  43d034:	sub	x0, x0, x22
  43d038:	add	x0, x0, x20
  43d03c:	str	x0, [x19, #88]
  43d040:	ldr	x0, [x19, #96]
  43d044:	sub	x0, x0, x22
  43d048:	add	x0, x0, x20
  43d04c:	str	x0, [x19, #104]
  43d050:	ldr	w0, [x19, #144]
  43d054:	str	xzr, [x19, #48]
  43d058:	cmp	w0, #0x1
  43d05c:	ldr	x21, [x19, #40]
  43d060:	b.le	43d24c <_obstack_memory_used@@Base+0x55cc>
  43d064:	ldrb	w1, [x19, #137]
  43d068:	cbz	w1, 43d118 <_obstack_memory_used@@Base+0x5498>
  43d06c:	ldr	x1, [x19]
  43d070:	sub	x0, x20, w0, sxtw
  43d074:	sub	x24, x20, #0x1
  43d078:	add	x21, x1, x21
  43d07c:	add	x0, x21, x0
  43d080:	add	x24, x21, x24
  43d084:	cmp	x1, x0
  43d088:	csel	x0, x1, x0, cs  // cs = hs, nlast
  43d08c:	cmp	x24, x0
  43d090:	b.cc	43d118 <_obstack_memory_used@@Base+0x5498>  // b.lo, b.ul, b.last
  43d094:	ldrb	w1, [x24]
  43d098:	and	w1, w1, #0xc0
  43d09c:	cmp	w1, #0x80
  43d0a0:	b.eq	43d17c <_obstack_memory_used@@Base+0x54fc>  // b.none
  43d0a4:	ldr	x0, [x19, #88]
  43d0a8:	mov	x1, x24
  43d0ac:	ldr	x3, [x19, #120]
  43d0b0:	add	x0, x21, x0
  43d0b4:	sub	x2, x0, x24
  43d0b8:	cbz	x3, 43d0d8 <_obstack_memory_used@@Base+0x5458>
  43d0bc:	cmp	x2, #0x6
  43d0c0:	mov	x0, #0x6                   	// #6
  43d0c4:	csel	x0, x2, x0, le
  43d0c8:	add	x1, sp, #0x70
  43d0cc:	sxtw	x0, w0
  43d0d0:	sub	x0, x0, #0x1
  43d0d4:	tbz	w0, #31, 43d16c <_obstack_memory_used@@Base+0x54ec>
  43d0d8:	add	x21, x21, x20
  43d0dc:	add	x3, sp, #0x78
  43d0e0:	sub	x24, x21, x24
  43d0e4:	add	x0, sp, #0x6c
  43d0e8:	str	xzr, [sp, #120]
  43d0ec:	bl	4378f0 <argp_usage@@Base+0xa410>
  43d0f0:	cmp	x24, x0
  43d0f4:	b.hi	43d118 <_obstack_memory_used@@Base+0x5498>  // b.pmore
  43d0f8:	cmn	x0, #0x3
  43d0fc:	b.hi	43d118 <_obstack_memory_used@@Base+0x5498>  // b.pmore
  43d100:	sub	x0, x0, x24
  43d104:	ldr	w24, [sp, #108]
  43d108:	str	xzr, [x19, #32]
  43d10c:	str	x0, [x19, #48]
  43d110:	cmn	w24, #0x1
  43d114:	b.ne	43d1e4 <_obstack_memory_used@@Base+0x5564>  // b.any
  43d118:	ldr	x21, [x19, #40]
  43d11c:	add	x27, x19, #0x20
  43d120:	ldr	x0, [x19, #56]
  43d124:	mov	w24, #0xffffffff            	// #-1
  43d128:	add	x21, x21, x0
  43d12c:	cmp	x22, x21
  43d130:	b.gt	43d184 <_obstack_memory_used@@Base+0x5504>
  43d134:	sub	x21, x21, x22
  43d138:	str	x21, [x19, #48]
  43d13c:	cmn	w24, #0x1
  43d140:	b.ne	43d1e4 <_obstack_memory_used@@Base+0x5564>  // b.any
  43d144:	mov	w2, w25
  43d148:	sub	x1, x23, #0x1
  43d14c:	mov	x0, x19
  43d150:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43d154:	ldr	x2, [x19, #48]
  43d158:	str	w0, [x19, #112]
  43d15c:	cbz	x2, 43cf54 <_obstack_memory_used@@Base+0x52d4>
  43d160:	mov	x0, #0x0                   	// #0
  43d164:	mov	w1, #0xffffffff            	// #-1
  43d168:	b	43d238 <_obstack_memory_used@@Base+0x55b8>
  43d16c:	ldrb	w4, [x24, x0]
  43d170:	ldrb	w4, [x3, x4]
  43d174:	strb	w4, [x1, x0]
  43d178:	b	43d0d0 <_obstack_memory_used@@Base+0x5450>
  43d17c:	sub	x24, x24, #0x1
  43d180:	b	43d08c <_obstack_memory_used@@Base+0x540c>
  43d184:	ldr	x1, [x19]
  43d188:	mov	x3, x27
  43d18c:	ldr	x26, [x19, #80]
  43d190:	add	x1, x1, x21
  43d194:	add	x0, sp, #0x78
  43d198:	sub	x26, x26, x21
  43d19c:	mov	x2, x26
  43d1a0:	ldr	x28, [x19, #32]
  43d1a4:	bl	4378f0 <argp_usage@@Base+0xa410>
  43d1a8:	sub	x1, x0, #0x1
  43d1ac:	ldr	w24, [sp, #120]
  43d1b0:	cmn	x1, #0x4
  43d1b4:	b.ls	43d1d4 <_obstack_memory_used@@Base+0x5554>  // b.plast
  43d1b8:	cmp	x0, #0x0
  43d1bc:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  43d1c0:	b.eq	43d1dc <_obstack_memory_used@@Base+0x555c>  // b.none
  43d1c4:	ldr	x0, [x19]
  43d1c8:	ldrb	w24, [x0, x21]
  43d1cc:	mov	x0, #0x1                   	// #1
  43d1d0:	str	x28, [x19, #32]
  43d1d4:	add	x21, x21, x0
  43d1d8:	b	43d12c <_obstack_memory_used@@Base+0x54ac>
  43d1dc:	mov	w24, #0x0                   	// #0
  43d1e0:	b	43d1cc <_obstack_memory_used@@Base+0x554c>
  43d1e4:	ldrb	w0, [x19, #142]
  43d1e8:	cbz	w0, 43d200 <_obstack_memory_used@@Base+0x5580>
  43d1ec:	mov	w0, w24
  43d1f0:	bl	404cd0 <iswalnum@plt>
  43d1f4:	cbnz	w0, 43d21c <_obstack_memory_used@@Base+0x559c>
  43d1f8:	cmp	w24, #0x5f
  43d1fc:	b.eq	43d21c <_obstack_memory_used@@Base+0x559c>  // b.none
  43d200:	cmp	w24, #0xa
  43d204:	b.ne	43d224 <_obstack_memory_used@@Base+0x55a4>  // b.any
  43d208:	ldrb	w0, [x19, #141]
  43d20c:	cmp	w0, #0x0
  43d210:	cset	w0, ne  // ne = any
  43d214:	lsl	w0, w0, #1
  43d218:	b	43d154 <_obstack_memory_used@@Base+0x54d4>
  43d21c:	mov	w0, #0x1                   	// #1
  43d220:	b	43d154 <_obstack_memory_used@@Base+0x54d4>
  43d224:	mov	w0, #0x0                   	// #0
  43d228:	b	43d154 <_obstack_memory_used@@Base+0x54d4>
  43d22c:	ldr	x3, [x19, #16]
  43d230:	str	w1, [x3, x0, lsl #2]
  43d234:	add	x0, x0, #0x1
  43d238:	cmp	x2, x0
  43d23c:	b.gt	43d22c <_obstack_memory_used@@Base+0x55ac>
  43d240:	ldrb	w0, [x19, #139]
  43d244:	cbz	w0, 43cf54 <_obstack_memory_used@@Base+0x52d4>
  43d248:	b	43cfac <_obstack_memory_used@@Base+0x532c>
  43d24c:	ldr	x0, [x19]
  43d250:	ldr	x1, [x19, #120]
  43d254:	add	x0, x0, x20
  43d258:	add	x21, x0, x21
  43d25c:	ldurb	w0, [x21, #-1]
  43d260:	str	xzr, [x19, #56]
  43d264:	cbz	x1, 43d270 <_obstack_memory_used@@Base+0x55f0>
  43d268:	and	x0, x0, #0xff
  43d26c:	ldrb	w0, [x1, x0]
  43d270:	ldr	x2, [x19, #128]
  43d274:	ubfx	x1, x0, #6, #2
  43d278:	ldr	x1, [x2, x1, lsl #3]
  43d27c:	lsr	x1, x1, x0
  43d280:	tbnz	w1, #0, 43d2a4 <_obstack_memory_used@@Base+0x5624>
  43d284:	cmp	w0, #0xa
  43d288:	b.ne	43d2ac <_obstack_memory_used@@Base+0x562c>  // b.any
  43d28c:	ldrb	w0, [x19, #141]
  43d290:	cmp	w0, #0x0
  43d294:	cset	w0, ne  // ne = any
  43d298:	lsl	w0, w0, #1
  43d29c:	str	w0, [x19, #112]
  43d2a0:	b	43ce20 <_obstack_memory_used@@Base+0x51a0>
  43d2a4:	mov	w0, #0x1                   	// #1
  43d2a8:	b	43d29c <_obstack_memory_used@@Base+0x561c>
  43d2ac:	mov	w0, #0x0                   	// #0
  43d2b0:	b	43d29c <_obstack_memory_used@@Base+0x561c>
  43d2b4:	mov	x0, x19
  43d2b8:	bl	4387bc <_obstack_memory_used@@Base+0xb3c>
  43d2bc:	mov	w0, #0x0                   	// #0
  43d2c0:	str	xzr, [x19, #72]
  43d2c4:	b	43ce70 <_obstack_memory_used@@Base+0x51f0>
  43d2c8:	ldrb	w1, [x19, #139]
  43d2cc:	cbz	w1, 43d2f8 <_obstack_memory_used@@Base+0x5678>
  43d2d0:	ldrb	w0, [x19, #136]
  43d2d4:	cbz	w0, 43d2e4 <_obstack_memory_used@@Base+0x5664>
  43d2d8:	mov	x0, x19
  43d2dc:	bl	438e14 <_obstack_memory_used@@Base+0x1194>
  43d2e0:	b	43d2bc <_obstack_memory_used@@Base+0x563c>
  43d2e4:	ldr	x0, [x19, #120]
  43d2e8:	cbz	x0, 43d2bc <_obstack_memory_used@@Base+0x563c>
  43d2ec:	mov	x0, x19
  43d2f0:	bl	437e60 <_obstack_memory_used@@Base+0x1e0>
  43d2f4:	b	43d2bc <_obstack_memory_used@@Base+0x563c>
  43d2f8:	str	x0, [x19, #48]
  43d2fc:	b	43d2bc <_obstack_memory_used@@Base+0x563c>
  43d300:	stp	x29, x30, [sp, #-112]!
  43d304:	mov	x29, sp
  43d308:	stp	x19, x20, [sp, #16]
  43d30c:	mov	x19, x1
  43d310:	ldr	x1, [x1, #8]
  43d314:	stp	x21, x22, [sp, #32]
  43d318:	mov	x21, x0
  43d31c:	add	x0, sp, #0x58
  43d320:	stp	x23, x24, [sp, #48]
  43d324:	mov	x23, x2
  43d328:	mov	w24, w3
  43d32c:	stp	x25, x26, [sp, #64]
  43d330:	bl	438684 <_obstack_memory_used@@Base+0xa04>
  43d334:	mov	w20, w0
  43d338:	cbnz	w0, 43d39c <_obstack_memory_used@@Base+0x571c>
  43d33c:	mov	x22, #0x0                   	// #0
  43d340:	mov	x26, #0x18                  	// #24
  43d344:	ldp	x1, x0, [x19, #8]
  43d348:	cmp	x1, x22
  43d34c:	b.gt	43d368 <_obstack_memory_used@@Base+0x56e8>
  43d350:	bl	404ae0 <free@plt>
  43d354:	ldp	x0, x1, [sp, #88]
  43d358:	stp	x0, x1, [x19]
  43d35c:	ldr	x0, [sp, #104]
  43d360:	str	x0, [x19, #16]
  43d364:	b	43d39c <_obstack_memory_used@@Base+0x571c>
  43d368:	ldr	x2, [x0, x22, lsl #3]
  43d36c:	mov	x0, #0x0                   	// #0
  43d370:	ldr	x1, [x21, #48]
  43d374:	madd	x1, x2, x26, x1
  43d378:	ldr	x5, [x1, #8]
  43d37c:	cmp	x0, x5
  43d380:	b.lt	43d3b8 <_obstack_memory_used@@Base+0x5738>  // b.tstop
  43d384:	add	x0, sp, #0x58
  43d388:	bl	43a198 <_obstack_memory_used@@Base+0x2518>
  43d38c:	cbz	w0, 43d40c <_obstack_memory_used@@Base+0x578c>
  43d390:	mov	w20, w0
  43d394:	ldr	x0, [sp, #104]
  43d398:	bl	404ae0 <free@plt>
  43d39c:	mov	w0, w20
  43d3a0:	ldp	x19, x20, [sp, #16]
  43d3a4:	ldp	x21, x22, [sp, #32]
  43d3a8:	ldp	x23, x24, [sp, #48]
  43d3ac:	ldp	x25, x26, [sp, #64]
  43d3b0:	ldp	x29, x30, [sp], #112
  43d3b4:	ret
  43d3b8:	ldr	x3, [x1, #16]
  43d3bc:	ldr	x4, [x21]
  43d3c0:	ldr	x3, [x3, x0, lsl #3]
  43d3c4:	add	x7, x4, x3, lsl #4
  43d3c8:	lsl	x6, x3, #4
  43d3cc:	ldrb	w7, [x7, #8]
  43d3d0:	cmp	w24, w7
  43d3d4:	b.ne	43d3e4 <_obstack_memory_used@@Base+0x5764>  // b.any
  43d3d8:	ldr	x4, [x4, x6]
  43d3dc:	cmp	x23, x4
  43d3e0:	b.eq	43d3ec <_obstack_memory_used@@Base+0x576c>  // b.none
  43d3e4:	add	x0, x0, #0x1
  43d3e8:	b	43d37c <_obstack_memory_used@@Base+0x56fc>
  43d3ec:	cmn	x3, #0x1
  43d3f0:	b.eq	43d384 <_obstack_memory_used@@Base+0x5704>  // b.none
  43d3f4:	mov	w4, w24
  43d3f8:	mov	x3, x23
  43d3fc:	add	x1, sp, #0x58
  43d400:	mov	x0, x21
  43d404:	bl	43aa34 <_obstack_memory_used@@Base+0x2db4>
  43d408:	b	43d38c <_obstack_memory_used@@Base+0x570c>
  43d40c:	add	x22, x22, #0x1
  43d410:	b	43d344 <_obstack_memory_used@@Base+0x56c4>
  43d414:	mov	x4, x1
  43d418:	mov	x1, x2
  43d41c:	ldr	x2, [x0, #8]
  43d420:	ldrb	w3, [x2, x1]
  43d424:	ldrb	w2, [x4, #8]
  43d428:	sub	w2, w2, #0x1
  43d42c:	cmp	w2, #0x6
  43d430:	b.hi	43d4e8 <_obstack_memory_used@@Base+0x5868>  // b.pmore
  43d434:	adrp	x5, 450000 <_obstack_memory_used@@Base+0x18380>
  43d438:	add	x5, x5, #0xa40
  43d43c:	ldrb	w2, [x5, w2, uxtw]
  43d440:	adr	x5, 43d44c <_obstack_memory_used@@Base+0x57cc>
  43d444:	add	x2, x5, w2, sxtb #2
  43d448:	br	x2
  43d44c:	ldrb	w2, [x4]
  43d450:	cmp	w2, w3
  43d454:	b.ne	43d4e8 <_obstack_memory_used@@Base+0x5868>  // b.any
  43d458:	stp	x29, x30, [sp, #-32]!
  43d45c:	mov	x29, sp
  43d460:	str	x19, [sp, #16]
  43d464:	ldr	w19, [x4, #8]
  43d468:	tst	w19, #0x3ff00
  43d46c:	b.eq	43d504 <_obstack_memory_used@@Base+0x5884>  // b.none
  43d470:	ldr	w2, [x0, #160]
  43d474:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43d478:	ubfx	x1, x19, #8, #10
  43d47c:	tbz	w19, #10, 43d484 <_obstack_memory_used@@Base+0x5804>
  43d480:	tbz	w0, #0, 43d50c <_obstack_memory_used@@Base+0x588c>
  43d484:	tbz	w1, #3, 43d48c <_obstack_memory_used@@Base+0x580c>
  43d488:	tbnz	w0, #0, 43d50c <_obstack_memory_used@@Base+0x588c>
  43d48c:	tbz	w1, #5, 43d494 <_obstack_memory_used@@Base+0x5814>
  43d490:	tbz	w0, #1, 43d50c <_obstack_memory_used@@Base+0x588c>
  43d494:	ubfx	x0, x0, #3, #1
  43d498:	tst	x1, #0x80
  43d49c:	csinc	w3, w0, wzr, ne  // ne = any
  43d4a0:	mov	w0, w3
  43d4a4:	ldr	x19, [sp, #16]
  43d4a8:	ldp	x29, x30, [sp], #32
  43d4ac:	ret
  43d4b0:	ldr	x2, [x4]
  43d4b4:	ubfx	x5, x3, #6, #2
  43d4b8:	ldr	x2, [x2, x5, lsl #3]
  43d4bc:	lsr	x2, x2, x3
  43d4c0:	and	w3, w2, #0x1
  43d4c4:	tbnz	w2, #0, 43d458 <_obstack_memory_used@@Base+0x57d8>
  43d4c8:	mov	w0, w3
  43d4cc:	ret
  43d4d0:	tbnz	w3, #7, 43d4e8 <_obstack_memory_used@@Base+0x5868>
  43d4d4:	cmp	w3, #0xa
  43d4d8:	b.ne	43d4f0 <_obstack_memory_used@@Base+0x5870>  // b.any
  43d4dc:	ldr	x2, [x0, #152]
  43d4e0:	ldr	x2, [x2, #216]
  43d4e4:	tbnz	w2, #6, 43d458 <_obstack_memory_used@@Base+0x57d8>
  43d4e8:	mov	w3, #0x0                   	// #0
  43d4ec:	b	43d4c8 <_obstack_memory_used@@Base+0x5848>
  43d4f0:	cbnz	w3, 43d458 <_obstack_memory_used@@Base+0x57d8>
  43d4f4:	ldr	x2, [x0, #152]
  43d4f8:	ldr	x2, [x2, #216]
  43d4fc:	tbz	w2, #7, 43d458 <_obstack_memory_used@@Base+0x57d8>
  43d500:	b	43d4e8 <_obstack_memory_used@@Base+0x5868>
  43d504:	mov	w3, #0x1                   	// #1
  43d508:	b	43d4a0 <_obstack_memory_used@@Base+0x5820>
  43d50c:	mov	w3, #0x0                   	// #0
  43d510:	b	43d4a0 <_obstack_memory_used@@Base+0x5820>
  43d514:	stp	x29, x30, [sp, #-192]!
  43d518:	tst	w4, #0xff
  43d51c:	mov	x29, sp
  43d520:	ldr	x0, [x0]
  43d524:	stp	x19, x20, [sp, #16]
  43d528:	mov	x20, x3
  43d52c:	stp	x21, x22, [sp, #32]
  43d530:	mov	x22, x1
  43d534:	stp	x23, x24, [sp, #48]
  43d538:	mov	x23, x2
  43d53c:	stp	x25, x26, [sp, #64]
  43d540:	stp	x27, x28, [sp, #80]
  43d544:	str	x0, [x29, #112]
  43d548:	mov	x0, #0x2                   	// #2
  43d54c:	str	xzr, [x29, #168]
  43d550:	str	x0, [x29, #176]
  43d554:	str	xzr, [x29, #184]
  43d558:	b.eq	43d66c <_obstack_memory_used@@Base+0x59ec>  // b.none
  43d55c:	mov	x0, #0x60                  	// #96
  43d560:	bl	4045f0 <malloc@plt>
  43d564:	str	x0, [x29, #184]
  43d568:	cbz	x0, 43d694 <_obstack_memory_used@@Base+0x5a14>
  43d56c:	add	x19, x29, #0xa8
  43d570:	ldr	x0, [x29, #112]
  43d574:	stp	xzr, xzr, [x29, #144]
  43d578:	lsl	x24, x23, #4
  43d57c:	str	xzr, [x29, #160]
  43d580:	cmp	x24, #0xfbf
  43d584:	ldr	x25, [x0, #144]
  43d588:	b.hi	43d674 <_obstack_memory_used@@Base+0x59f4>  // b.pmore
  43d58c:	sub	sp, sp, x24
  43d590:	str	wzr, [x29, #124]
  43d594:	mov	x21, sp
  43d598:	mov	x2, x24
  43d59c:	mov	x1, x20
  43d5a0:	mov	x0, x21
  43d5a4:	bl	404200 <memcpy@plt>
  43d5a8:	ldr	x0, [x20]
  43d5ac:	str	x0, [x29, #136]
  43d5b0:	ldr	x0, [x20, #8]
  43d5b4:	ldr	x26, [x29, #136]
  43d5b8:	cmp	x0, x26
  43d5bc:	b.lt	43d62c <_obstack_memory_used@@Base+0x59ac>  // b.tstop
  43d5c0:	ldr	x0, [x29, #112]
  43d5c4:	lsl	x1, x25, #4
  43d5c8:	ldr	x0, [x0]
  43d5cc:	add	x2, x0, x25, lsl #4
  43d5d0:	ldrb	w4, [x2, #8]
  43d5d4:	cmp	w4, #0x8
  43d5d8:	b.ne	43d69c <_obstack_memory_used@@Base+0x5a1c>  // b.any
  43d5dc:	ldr	x0, [x0, x1]
  43d5e0:	add	x0, x0, #0x1
  43d5e4:	cmp	x23, x0
  43d5e8:	b.le	43d600 <_obstack_memory_used@@Base+0x5980>
  43d5ec:	lsl	x1, x0, #4
  43d5f0:	add	x0, x20, x0, lsl #4
  43d5f4:	str	x26, [x20, x1]
  43d5f8:	mov	x1, #0xffffffffffffffff    	// #-1
  43d5fc:	str	x1, [x0, #8]
  43d600:	ldr	x0, [x20, #8]
  43d604:	cmp	x0, x26
  43d608:	b.ne	43d73c <_obstack_memory_used@@Base+0x5abc>  // b.any
  43d60c:	ldr	x0, [x22, #176]
  43d610:	cmp	x0, x25
  43d614:	b.ne	43d73c <_obstack_memory_used@@Base+0x5abc>  // b.any
  43d618:	cbz	x19, 43d7b8 <_obstack_memory_used@@Base+0x5b38>
  43d61c:	mov	x0, x20
  43d620:	mov	x1, #0x0                   	// #0
  43d624:	cmp	x23, x1
  43d628:	b.ne	43d70c <_obstack_memory_used@@Base+0x5a8c>  // b.any
  43d62c:	ldr	x0, [x29, #160]
  43d630:	bl	404ae0 <free@plt>
  43d634:	ldr	w0, [x29, #124]
  43d638:	cbz	w0, 43d644 <_obstack_memory_used@@Base+0x59c4>
  43d63c:	mov	x0, x21
  43d640:	bl	404ae0 <free@plt>
  43d644:	mov	x0, x19
  43d648:	bl	43b998 <_obstack_memory_used@@Base+0x3d18>
  43d64c:	mov	sp, x29
  43d650:	ldp	x19, x20, [sp, #16]
  43d654:	ldp	x21, x22, [sp, #32]
  43d658:	ldp	x23, x24, [sp, #48]
  43d65c:	ldp	x25, x26, [sp, #64]
  43d660:	ldp	x27, x28, [sp, #80]
  43d664:	ldp	x29, x30, [sp], #192
  43d668:	ret
  43d66c:	mov	x19, #0x0                   	// #0
  43d670:	b	43d570 <_obstack_memory_used@@Base+0x58f0>
  43d674:	mov	x0, x24
  43d678:	bl	4045f0 <malloc@plt>
  43d67c:	mov	x21, x0
  43d680:	mov	w0, #0x1                   	// #1
  43d684:	str	w0, [x29, #124]
  43d688:	cbnz	x21, 43d598 <_obstack_memory_used@@Base+0x5918>
  43d68c:	mov	x0, x19
  43d690:	bl	43b998 <_obstack_memory_used@@Base+0x3d18>
  43d694:	mov	w0, #0xc                   	// #12
  43d698:	b	43d64c <_obstack_memory_used@@Base+0x59cc>
  43d69c:	cmp	w4, #0x9
  43d6a0:	b.ne	43d600 <_obstack_memory_used@@Base+0x5980>  // b.any
  43d6a4:	ldr	x0, [x0, x1]
  43d6a8:	add	x0, x0, #0x1
  43d6ac:	cmp	x23, x0
  43d6b0:	b.le	43d600 <_obstack_memory_used@@Base+0x5980>
  43d6b4:	lsl	x1, x0, #4
  43d6b8:	add	x0, x20, x0, lsl #4
  43d6bc:	ldr	x4, [x20, x1]
  43d6c0:	cmp	x26, x4
  43d6c4:	b.le	43d6e0 <_obstack_memory_used@@Base+0x5a60>
  43d6c8:	mov	x2, x24
  43d6cc:	mov	x1, x20
  43d6d0:	str	x26, [x0, #8]
  43d6d4:	mov	x0, x21
  43d6d8:	bl	404200 <memcpy@plt>
  43d6dc:	b	43d600 <_obstack_memory_used@@Base+0x5980>
  43d6e0:	ldrb	w2, [x2, #10]
  43d6e4:	tbz	w2, #3, 43d704 <_obstack_memory_used@@Base+0x5a84>
  43d6e8:	ldr	x1, [x21, x1]
  43d6ec:	cmn	x1, #0x1
  43d6f0:	b.eq	43d704 <_obstack_memory_used@@Base+0x5a84>  // b.none
  43d6f4:	mov	x2, x24
  43d6f8:	mov	x1, x21
  43d6fc:	mov	x0, x20
  43d700:	b	43d6d8 <_obstack_memory_used@@Base+0x5a58>
  43d704:	str	x26, [x0, #8]
  43d708:	b	43d600 <_obstack_memory_used@@Base+0x5980>
  43d70c:	ldr	x2, [x0]
  43d710:	tbnz	x2, #63, 43d7ac <_obstack_memory_used@@Base+0x5b2c>
  43d714:	ldr	x2, [x0, #8]
  43d718:	cmn	x2, #0x1
  43d71c:	b.ne	43d7ac <_obstack_memory_used@@Base+0x5b2c>  // b.any
  43d720:	add	x4, x29, #0x90
  43d724:	mov	x3, x20
  43d728:	mov	x2, x23
  43d72c:	add	x1, x29, #0x88
  43d730:	mov	x0, x19
  43d734:	bl	43ba10 <_obstack_memory_used@@Base+0x3d90>
  43d738:	mov	x25, x0
  43d73c:	ldr	x26, [x22, #152]
  43d740:	mov	x27, x25
  43d744:	lsl	x28, x25, #4
  43d748:	ldr	x0, [x26]
  43d74c:	add	x2, x0, x25, lsl #4
  43d750:	ldrb	w1, [x2, #8]
  43d754:	tbz	w1, #3, 43d8b8 <_obstack_memory_used@@Base+0x5c38>
  43d758:	ldr	x1, [x29, #136]
  43d75c:	ldr	x0, [x22, #184]
  43d760:	ldr	x28, [x26, #40]
  43d764:	ldr	x27, [x0, x1, lsl #3]
  43d768:	mov	x0, #0x18                  	// #24
  43d76c:	mov	x1, x25
  43d770:	madd	x28, x25, x0, x28
  43d774:	add	x27, x27, #0x8
  43d778:	add	x0, x29, #0x90
  43d77c:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43d780:	tst	w0, #0xff
  43d784:	b.eq	43d890 <_obstack_memory_used@@Base+0x5c10>  // b.none
  43d788:	ldr	x7, [x28, #8]
  43d78c:	mov	x25, #0xffffffffffffffff    	// #-1
  43d790:	mov	x6, #0x0                   	// #0
  43d794:	cmp	x6, x7
  43d798:	b.lt	43d7d8 <_obstack_memory_used@@Base+0x5b58>  // b.tstop
  43d79c:	tbz	x25, #63, 43d5b0 <_obstack_memory_used@@Base+0x5930>
  43d7a0:	cmn	x25, #0x2
  43d7a4:	b.ne	43d8f8 <_obstack_memory_used@@Base+0x5c78>  // b.any
  43d7a8:	b	43d890 <_obstack_memory_used@@Base+0x5c10>
  43d7ac:	add	x1, x1, #0x1
  43d7b0:	add	x0, x0, #0x10
  43d7b4:	b	43d624 <_obstack_memory_used@@Base+0x59a4>
  43d7b8:	ldr	x0, [x29, #160]
  43d7bc:	bl	404ae0 <free@plt>
  43d7c0:	ldr	w0, [x29, #124]
  43d7c4:	cbz	w0, 43d7d0 <_obstack_memory_used@@Base+0x5b50>
  43d7c8:	mov	x0, x21
  43d7cc:	bl	404ae0 <free@plt>
  43d7d0:	mov	w0, #0x0                   	// #0
  43d7d4:	b	43d64c <_obstack_memory_used@@Base+0x59cc>
  43d7d8:	ldr	x0, [x28, #16]
  43d7dc:	ldr	x26, [x0, x6, lsl #3]
  43d7e0:	mov	x0, x27
  43d7e4:	mov	x1, x26
  43d7e8:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43d7ec:	cbz	x0, 43d8b0 <_obstack_memory_used@@Base+0x5c30>
  43d7f0:	cmn	x25, #0x1
  43d7f4:	b.eq	43d8ac <_obstack_memory_used@@Base+0x5c2c>  // b.none
  43d7f8:	mov	x1, x25
  43d7fc:	add	x0, x29, #0x90
  43d800:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43d804:	cbnz	x0, 43da38 <_obstack_memory_used@@Base+0x5db8>
  43d808:	cbz	x19, 43d79c <_obstack_memory_used@@Base+0x5b1c>
  43d80c:	ldp	x27, x1, [x19]
  43d810:	ldr	x2, [x29, #136]
  43d814:	add	x0, x27, #0x1
  43d818:	str	x0, [x19]
  43d81c:	cmp	x0, x1
  43d820:	b.ne	43d84c <_obstack_memory_used@@Base+0x5bcc>  // b.any
  43d824:	mov	x1, #0x60                  	// #96
  43d828:	str	x2, [x29, #104]
  43d82c:	mul	x1, x0, x1
  43d830:	ldr	x0, [x19, #16]
  43d834:	bl	404820 <realloc@plt>
  43d838:	cbz	x0, 43d890 <_obstack_memory_used@@Base+0x5c10>
  43d83c:	ldr	x1, [x19, #8]
  43d840:	ldr	x2, [x29, #104]
  43d844:	lsl	x1, x1, #1
  43d848:	stp	x1, x0, [x19, #8]
  43d84c:	mov	x0, #0x30                  	// #48
  43d850:	mul	x27, x27, x0
  43d854:	ldr	x0, [x19, #16]
  43d858:	add	x28, x0, x27
  43d85c:	str	x2, [x0, x27]
  43d860:	mov	x0, x24
  43d864:	str	x26, [x28, #8]
  43d868:	bl	4045f0 <malloc@plt>
  43d86c:	str	x0, [x28, #16]
  43d870:	cbz	x0, 43d890 <_obstack_memory_used@@Base+0x5c10>
  43d874:	mov	x2, x24
  43d878:	mov	x1, x20
  43d87c:	bl	404200 <memcpy@plt>
  43d880:	add	x1, x29, #0x90
  43d884:	add	x0, x28, #0x18
  43d888:	bl	43b040 <_obstack_memory_used@@Base+0x33c0>
  43d88c:	cbz	w0, 43d79c <_obstack_memory_used@@Base+0x5b1c>
  43d890:	ldr	x0, [x29, #160]
  43d894:	bl	404ae0 <free@plt>
  43d898:	ldr	w0, [x29, #124]
  43d89c:	cbz	w0, 43d68c <_obstack_memory_used@@Base+0x5a0c>
  43d8a0:	mov	x0, x21
  43d8a4:	bl	404ae0 <free@plt>
  43d8a8:	b	43d68c <_obstack_memory_used@@Base+0x5a0c>
  43d8ac:	mov	x25, x26
  43d8b0:	add	x6, x6, #0x1
  43d8b4:	b	43d794 <_obstack_memory_used@@Base+0x5b14>
  43d8b8:	ldrb	w2, [x2, #10]
  43d8bc:	tbz	w2, #4, 43d91c <_obstack_memory_used@@Base+0x5c9c>
  43d8c0:	ldr	x3, [x29, #136]
  43d8c4:	mov	x2, x22
  43d8c8:	mov	x1, x25
  43d8cc:	mov	x0, x26
  43d8d0:	bl	439de8 <_obstack_memory_used@@Base+0x2168>
  43d8d4:	sxtw	x2, w0
  43d8d8:	cbnz	w0, 43d9e8 <_obstack_memory_used@@Base+0x5d68>
  43d8dc:	ldr	x2, [x29, #136]
  43d8e0:	mov	x0, x22
  43d8e4:	ldr	x1, [x26]
  43d8e8:	add	x1, x1, x28
  43d8ec:	bl	43d414 <_obstack_memory_used@@Base+0x5794>
  43d8f0:	tst	w0, #0xff
  43d8f4:	b.ne	43d9e4 <_obstack_memory_used@@Base+0x5d64>  // b.any
  43d8f8:	cbnz	x19, 43d978 <_obstack_memory_used@@Base+0x5cf8>
  43d8fc:	ldr	x0, [x29, #160]
  43d900:	bl	404ae0 <free@plt>
  43d904:	ldr	w0, [x29, #124]
  43d908:	cbz	w0, 43d914 <_obstack_memory_used@@Base+0x5c94>
  43d90c:	mov	x0, x21
  43d910:	bl	404ae0 <free@plt>
  43d914:	mov	w0, #0x1                   	// #1
  43d918:	b	43d64c <_obstack_memory_used@@Base+0x59cc>
  43d91c:	cmp	w1, #0x4
  43d920:	b.ne	43d8dc <_obstack_memory_used@@Base+0x5c5c>  // b.any
  43d924:	ldr	x0, [x0, x28]
  43d928:	add	x0, x0, #0x1
  43d92c:	lsl	x2, x0, #4
  43d930:	add	x0, x20, x0, lsl #4
  43d934:	ldr	x1, [x0, #8]
  43d938:	ldr	x0, [x20, x2]
  43d93c:	sub	x2, x1, x0
  43d940:	cbz	x19, 43d998 <_obstack_memory_used@@Base+0x5d18>
  43d944:	cmn	x0, #0x1
  43d948:	b.eq	43d978 <_obstack_memory_used@@Base+0x5cf8>  // b.none
  43d94c:	cmn	x1, #0x1
  43d950:	b.eq	43d978 <_obstack_memory_used@@Base+0x5cf8>  // b.none
  43d954:	cbz	x2, 43d99c <_obstack_memory_used@@Base+0x5d1c>
  43d958:	ldr	x3, [x22, #8]
  43d95c:	str	x2, [x29, #104]
  43d960:	ldr	x1, [x29, #136]
  43d964:	add	x0, x3, x0
  43d968:	add	x1, x3, x1
  43d96c:	bl	4049f0 <memcmp@plt>
  43d970:	ldr	x2, [x29, #104]
  43d974:	cbz	w0, 43d9e8 <_obstack_memory_used@@Base+0x5d68>
  43d978:	add	x4, x29, #0x90
  43d97c:	mov	x3, x20
  43d980:	mov	x2, x23
  43d984:	add	x1, x29, #0x88
  43d988:	mov	x0, x19
  43d98c:	bl	43ba10 <_obstack_memory_used@@Base+0x3d90>
  43d990:	mov	x25, x0
  43d994:	b	43d5b0 <_obstack_memory_used@@Base+0x5930>
  43d998:	cbnz	x2, 43d9e8 <_obstack_memory_used@@Base+0x5d68>
  43d99c:	mov	x1, x25
  43d9a0:	add	x0, x29, #0x90
  43d9a4:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43d9a8:	tst	w0, #0xff
  43d9ac:	b.eq	43d890 <_obstack_memory_used@@Base+0x5c10>  // b.none
  43d9b0:	ldr	x0, [x26, #40]
  43d9b4:	mov	x1, #0x18                  	// #24
  43d9b8:	madd	x3, x25, x1, x0
  43d9bc:	ldr	x1, [x29, #136]
  43d9c0:	ldr	x0, [x3, #16]
  43d9c4:	ldr	x25, [x0]
  43d9c8:	ldr	x0, [x22, #184]
  43d9cc:	ldr	x0, [x0, x1, lsl #3]
  43d9d0:	mov	x1, x25
  43d9d4:	add	x0, x0, #0x8
  43d9d8:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43d9dc:	cbz	x0, 43d8dc <_obstack_memory_used@@Base+0x5c5c>
  43d9e0:	b	43d79c <_obstack_memory_used@@Base+0x5b1c>
  43d9e4:	mov	x2, #0x0                   	// #0
  43d9e8:	ldr	x0, [x26, #24]
  43d9ec:	cmp	x2, #0x0
  43d9f0:	ldr	x25, [x0, x27, lsl #3]
  43d9f4:	ldr	x0, [x29, #136]
  43d9f8:	add	x1, x0, x2
  43d9fc:	csinc	x0, x1, x0, ne  // ne = any
  43da00:	str	x0, [x29, #136]
  43da04:	cbz	x19, 43da30 <_obstack_memory_used@@Base+0x5db0>
  43da08:	ldr	x1, [x22, #168]
  43da0c:	cmp	x0, x1
  43da10:	b.gt	43d978 <_obstack_memory_used@@Base+0x5cf8>
  43da14:	ldr	x1, [x22, #184]
  43da18:	ldr	x0, [x1, x0, lsl #3]
  43da1c:	cbz	x0, 43d978 <_obstack_memory_used@@Base+0x5cf8>
  43da20:	mov	x1, x25
  43da24:	add	x0, x0, #0x8
  43da28:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43da2c:	cbz	x0, 43d978 <_obstack_memory_used@@Base+0x5cf8>
  43da30:	str	xzr, [x29, #152]
  43da34:	b	43d79c <_obstack_memory_used@@Base+0x5b1c>
  43da38:	mov	x25, x26
  43da3c:	b	43d79c <_obstack_memory_used@@Base+0x5b1c>
  43da40:	stp	x29, x30, [sp, #-64]!
  43da44:	mov	x29, sp
  43da48:	stp	x21, x22, [sp, #32]
  43da4c:	mov	x21, x1
  43da50:	mov	x22, x0
  43da54:	ldr	x1, [x2, #8]
  43da58:	stp	x19, x20, [sp, #16]
  43da5c:	stp	x23, x24, [sp, #48]
  43da60:	cbnz	x1, 43da84 <_obstack_memory_used@@Base+0x5e04>
  43da64:	str	wzr, [x0]
  43da68:	mov	x19, #0x0                   	// #0
  43da6c:	mov	x0, x19
  43da70:	ldp	x19, x20, [sp, #16]
  43da74:	ldp	x21, x22, [sp, #32]
  43da78:	ldp	x23, x24, [sp, #48]
  43da7c:	ldp	x29, x30, [sp], #64
  43da80:	ret
  43da84:	mov	x20, x2
  43da88:	mov	x23, x1
  43da8c:	mov	x0, #0x0                   	// #0
  43da90:	cmp	x1, x0
  43da94:	b.gt	43dafc <_obstack_memory_used@@Base+0x5e7c>
  43da98:	ldr	x0, [x21, #136]
  43da9c:	mov	x1, #0x18                  	// #24
  43daa0:	mov	x7, #0x0                   	// #0
  43daa4:	and	x0, x23, x0
  43daa8:	mul	x0, x0, x1
  43daac:	ldr	x1, [x21, #64]
  43dab0:	add	x9, x1, x0
  43dab4:	ldr	x8, [x1, x0]
  43dab8:	cmp	x8, x7
  43dabc:	b.gt	43db10 <_obstack_memory_used@@Base+0x5e90>
  43dac0:	mov	x1, #0x1                   	// #1
  43dac4:	mov	x0, #0x70                  	// #112
  43dac8:	bl	4047a0 <calloc@plt>
  43dacc:	mov	x19, x0
  43dad0:	cbz	x0, 43daf0 <_obstack_memory_used@@Base+0x5e70>
  43dad4:	add	x24, x0, #0x8
  43dad8:	mov	x1, x20
  43dadc:	mov	x0, x24
  43dae0:	bl	43b040 <_obstack_memory_used@@Base+0x33c0>
  43dae4:	cbz	w0, 43db40 <_obstack_memory_used@@Base+0x5ec0>
  43dae8:	mov	x0, x19
  43daec:	bl	404ae0 <free@plt>
  43daf0:	mov	w0, #0xc                   	// #12
  43daf4:	str	w0, [x22]
  43daf8:	b	43da68 <_obstack_memory_used@@Base+0x5de8>
  43dafc:	ldr	x2, [x20, #16]
  43db00:	ldr	x2, [x2, x0, lsl #3]
  43db04:	add	x0, x0, #0x1
  43db08:	add	x23, x23, x2
  43db0c:	b	43da90 <_obstack_memory_used@@Base+0x5e10>
  43db10:	ldr	x0, [x9, #16]
  43db14:	ldr	x19, [x0, x7, lsl #3]
  43db18:	ldr	x0, [x19]
  43db1c:	cmp	x0, x23
  43db20:	b.ne	43db38 <_obstack_memory_used@@Base+0x5eb8>  // b.any
  43db24:	mov	x1, x20
  43db28:	add	x0, x19, #0x8
  43db2c:	bl	437ebc <_obstack_memory_used@@Base+0x23c>
  43db30:	tst	w0, #0xff
  43db34:	b.ne	43da6c <_obstack_memory_used@@Base+0x5dec>  // b.any
  43db38:	add	x7, x7, #0x1
  43db3c:	b	43dab8 <_obstack_memory_used@@Base+0x5e38>
  43db40:	ldr	x6, [x20, #8]
  43db44:	mov	x0, #0x0                   	// #0
  43db48:	str	x24, [x19, #80]
  43db4c:	cmp	x0, x6
  43db50:	b.lt	43db74 <_obstack_memory_used@@Base+0x5ef4>  // b.tstop
  43db54:	mov	x2, x23
  43db58:	mov	x1, x19
  43db5c:	mov	x0, x21
  43db60:	bl	43af48 <_obstack_memory_used@@Base+0x32c8>
  43db64:	cbz	w0, 43da6c <_obstack_memory_used@@Base+0x5dec>
  43db68:	mov	x0, x19
  43db6c:	bl	4392c8 <_obstack_memory_used@@Base+0x1648>
  43db70:	b	43daf0 <_obstack_memory_used@@Base+0x5e70>
  43db74:	ldr	x1, [x20, #16]
  43db78:	ldr	x2, [x21]
  43db7c:	ldr	x1, [x1, x0, lsl #3]
  43db80:	add	x1, x2, x1, lsl #4
  43db84:	ldrb	w2, [x1, #8]
  43db88:	cmp	w2, #0x1
  43db8c:	b.ne	43db9c <_obstack_memory_used@@Base+0x5f1c>  // b.any
  43db90:	ldr	w3, [x1, #8]
  43db94:	tst	w3, #0x3ff00
  43db98:	b.eq	43dbc8 <_obstack_memory_used@@Base+0x5f48>  // b.none
  43db9c:	ldrb	w3, [x19, #104]
  43dba0:	cmp	w2, #0x2
  43dba4:	ldrb	w5, [x1, #10]
  43dba8:	ubfx	x4, x3, #5, #1
  43dbac:	ubfx	x5, x5, #4, #1
  43dbb0:	orr	w4, w4, w5
  43dbb4:	bfi	w3, w4, #5, #1
  43dbb8:	strb	w3, [x19, #104]
  43dbbc:	b.ne	43dbd0 <_obstack_memory_used@@Base+0x5f50>  // b.any
  43dbc0:	orr	w3, w3, #0x10
  43dbc4:	strb	w3, [x19, #104]
  43dbc8:	add	x0, x0, #0x1
  43dbcc:	b	43db4c <_obstack_memory_used@@Base+0x5ecc>
  43dbd0:	cmp	w2, #0x4
  43dbd4:	b.ne	43dbe0 <_obstack_memory_used@@Base+0x5f60>  // b.any
  43dbd8:	orr	w3, w3, #0x40
  43dbdc:	b	43dbc4 <_obstack_memory_used@@Base+0x5f44>
  43dbe0:	cmp	w2, #0xc
  43dbe4:	b.eq	43dbf4 <_obstack_memory_used@@Base+0x5f74>  // b.none
  43dbe8:	ldr	w1, [x1, #8]
  43dbec:	tst	w1, #0x3ff00
  43dbf0:	b.eq	43dbc8 <_obstack_memory_used@@Base+0x5f48>  // b.none
  43dbf4:	ldrb	w1, [x19, #104]
  43dbf8:	orr	w1, w1, #0xffffff80
  43dbfc:	strb	w1, [x19, #104]
  43dc00:	b	43dbc8 <_obstack_memory_used@@Base+0x5f48>
  43dc04:	stp	x29, x30, [sp, #-128]!
  43dc08:	mov	x29, sp
  43dc0c:	stp	x19, x20, [sp, #16]
  43dc10:	stp	x21, x22, [sp, #32]
  43dc14:	mov	x21, x0
  43dc18:	stp	x23, x24, [sp, #48]
  43dc1c:	mov	x23, x1
  43dc20:	mov	x24, x2
  43dc24:	mov	x1, x2
  43dc28:	stp	x25, x26, [sp, #64]
  43dc2c:	mov	x26, x3
  43dc30:	stp	x27, x28, [sp, #80]
  43dc34:	mov	w27, w4
  43dc38:	bl	4382e8 <_obstack_memory_used@@Base+0x668>
  43dc3c:	cmn	x0, #0x1
  43dc40:	b.ne	43dc64 <_obstack_memory_used@@Base+0x5fe4>  // b.any
  43dc44:	mov	w0, #0x0                   	// #0
  43dc48:	ldp	x19, x20, [sp, #16]
  43dc4c:	ldp	x21, x22, [sp, #32]
  43dc50:	ldp	x23, x24, [sp, #48]
  43dc54:	ldp	x25, x26, [sp, #64]
  43dc58:	ldp	x27, x28, [sp, #80]
  43dc5c:	ldp	x29, x30, [sp], #128
  43dc60:	ret
  43dc64:	mov	x22, #0x28                  	// #40
  43dc68:	ldr	x25, [x21, #152]
  43dc6c:	mul	x22, x0, x22
  43dc70:	ldr	x20, [x21, #216]
  43dc74:	add	x20, x20, x22
  43dc78:	ldr	x1, [x20]
  43dc7c:	mov	x0, x23
  43dc80:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43dc84:	cbz	x0, 43ddb0 <_obstack_memory_used@@Base+0x6130>
  43dc88:	ldp	x0, x19, [x20, #16]
  43dc8c:	add	x19, x24, x19
  43dc90:	sub	x19, x19, x0
  43dc94:	cmp	x24, x19
  43dc98:	b.ne	43dd18 <_obstack_memory_used@@Base+0x6098>  // b.any
  43dc9c:	ldr	x0, [x25, #40]
  43dca0:	mov	x2, #0x18                  	// #24
  43dca4:	madd	x1, x1, x2, x0
  43dca8:	ldr	x0, [x1, #16]
  43dcac:	ldr	x1, [x0]
  43dcb0:	mov	x0, x23
  43dcb4:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43dcb8:	cbnz	x0, 43ddb0 <_obstack_memory_used@@Base+0x6130>
  43dcbc:	add	x0, sp, #0x68
  43dcc0:	bl	438638 <_obstack_memory_used@@Base+0x9b8>
  43dcc4:	mov	w3, w27
  43dcc8:	mov	x2, x26
  43dccc:	add	x1, sp, #0x68
  43dcd0:	str	w0, [sp, #100]
  43dcd4:	mov	x0, x25
  43dcd8:	bl	43d300 <_obstack_memory_used@@Base+0x5680>
  43dcdc:	add	x1, sp, #0x68
  43dce0:	mov	w19, w0
  43dce4:	mov	x0, x23
  43dce8:	bl	43a198 <_obstack_memory_used@@Base+0x2518>
  43dcec:	mov	w20, w0
  43dcf0:	ldr	x0, [sp, #120]
  43dcf4:	bl	404ae0 <free@plt>
  43dcf8:	ldr	w0, [sp, #100]
  43dcfc:	orr	w1, w19, w20
  43dd00:	orr	w1, w1, w0
  43dd04:	cbz	w1, 43dc70 <_obstack_memory_used@@Base+0x5ff0>
  43dd08:	cbnz	w0, 43dc48 <_obstack_memory_used@@Base+0x5fc8>
  43dd0c:	cmp	w19, #0x0
  43dd10:	csel	w0, w19, w20, ne  // ne = any
  43dd14:	b	43dc48 <_obstack_memory_used@@Base+0x5fc8>
  43dd18:	ldr	x0, [x25, #24]
  43dd1c:	lsl	x19, x19, #3
  43dd20:	ldr	x28, [x0, x1, lsl #3]
  43dd24:	ldr	x0, [x21, #184]
  43dd28:	ldr	x6, [x0, x19]
  43dd2c:	cbz	x6, 43dddc <_obstack_memory_used@@Base+0x615c>
  43dd30:	add	x6, x6, #0x8
  43dd34:	mov	x1, x28
  43dd38:	mov	x0, x6
  43dd3c:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43dd40:	cbnz	x0, 43ddb0 <_obstack_memory_used@@Base+0x6130>
  43dd44:	mov	x1, x6
  43dd48:	add	x0, sp, #0x68
  43dd4c:	bl	43b040 <_obstack_memory_used@@Base+0x33c0>
  43dd50:	str	w0, [sp, #100]
  43dd54:	mov	x1, x28
  43dd58:	add	x0, sp, #0x68
  43dd5c:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43dd60:	and	w0, w0, #0xff
  43dd64:	ldr	w1, [sp, #100]
  43dd68:	eor	w0, w0, #0x1
  43dd6c:	cmp	w1, #0x0
  43dd70:	cset	w1, ne  // ne = any
  43dd74:	orr	w0, w1, w0
  43dd78:	cbnz	w0, 43ddc0 <_obstack_memory_used@@Base+0x6140>
  43dd7c:	ldr	x28, [x21, #184]
  43dd80:	add	x2, sp, #0x68
  43dd84:	mov	x1, x25
  43dd88:	add	x0, sp, #0x64
  43dd8c:	bl	43da40 <_obstack_memory_used@@Base+0x5dc0>
  43dd90:	str	x0, [x28, x19]
  43dd94:	ldr	x0, [sp, #120]
  43dd98:	bl	404ae0 <free@plt>
  43dd9c:	ldr	x0, [x21, #184]
  43dda0:	ldr	x0, [x0, x19]
  43dda4:	cbnz	x0, 43ddb0 <_obstack_memory_used@@Base+0x6130>
  43dda8:	ldr	w0, [sp, #100]
  43ddac:	cbnz	w0, 43dc48 <_obstack_memory_used@@Base+0x5fc8>
  43ddb0:	ldrb	w0, [x20, #32]
  43ddb4:	add	x20, x20, #0x28
  43ddb8:	cbnz	w0, 43dc78 <_obstack_memory_used@@Base+0x5ff8>
  43ddbc:	b	43dc44 <_obstack_memory_used@@Base+0x5fc4>
  43ddc0:	ldr	x0, [sp, #120]
  43ddc4:	bl	404ae0 <free@plt>
  43ddc8:	ldr	w0, [sp, #100]
  43ddcc:	mov	w1, #0xc                   	// #12
  43ddd0:	cmp	w0, #0x0
  43ddd4:	csel	w0, w0, w1, ne  // ne = any
  43ddd8:	b	43dc48 <_obstack_memory_used@@Base+0x5fc8>
  43dddc:	mov	x1, x28
  43dde0:	add	x0, sp, #0x68
  43dde4:	bl	438638 <_obstack_memory_used@@Base+0x9b8>
  43dde8:	str	w0, [sp, #100]
  43ddec:	cbz	w0, 43dd7c <_obstack_memory_used@@Base+0x60fc>
  43ddf0:	b	43dc48 <_obstack_memory_used@@Base+0x5fc8>
  43ddf4:	stp	x29, x30, [sp, #-96]!
  43ddf8:	mov	x29, sp
  43ddfc:	stp	x19, x20, [sp, #16]
  43de00:	mov	x20, x1
  43de04:	mov	x19, #0x0                   	// #0
  43de08:	stp	x21, x22, [sp, #32]
  43de0c:	mov	x22, x0
  43de10:	mov	x21, x3
  43de14:	str	x23, [sp, #48]
  43de18:	mov	x23, x2
  43de1c:	cmp	x19, x21
  43de20:	b.lt	43de2c <_obstack_memory_used@@Base+0x61ac>  // b.tstop
  43de24:	mov	w0, #0x0                   	// #0
  43de28:	b	43de84 <_obstack_memory_used@@Base+0x6204>
  43de2c:	ldr	x1, [x20, x19, lsl #3]
  43de30:	ldr	x2, [x23, x19, lsl #3]
  43de34:	cbnz	x1, 43de44 <_obstack_memory_used@@Base+0x61c4>
  43de38:	str	x2, [x20, x19, lsl #3]
  43de3c:	add	x19, x19, #0x1
  43de40:	b	43de1c <_obstack_memory_used@@Base+0x619c>
  43de44:	cbz	x2, 43de3c <_obstack_memory_used@@Base+0x61bc>
  43de48:	add	x2, x2, #0x8
  43de4c:	add	x1, x1, #0x8
  43de50:	add	x0, sp, #0x48
  43de54:	bl	43b0b8 <_obstack_memory_used@@Base+0x3438>
  43de58:	str	w0, [sp, #68]
  43de5c:	cbnz	w0, 43de84 <_obstack_memory_used@@Base+0x6204>
  43de60:	add	x2, sp, #0x48
  43de64:	mov	x1, x22
  43de68:	add	x0, sp, #0x44
  43de6c:	bl	43da40 <_obstack_memory_used@@Base+0x5dc0>
  43de70:	str	x0, [x20, x19, lsl #3]
  43de74:	ldr	x0, [sp, #88]
  43de78:	bl	404ae0 <free@plt>
  43de7c:	ldr	w0, [sp, #68]
  43de80:	cbz	w0, 43de3c <_obstack_memory_used@@Base+0x61bc>
  43de84:	ldp	x19, x20, [sp, #16]
  43de88:	ldp	x21, x22, [sp, #32]
  43de8c:	ldr	x23, [sp, #48]
  43de90:	ldp	x29, x30, [sp], #96
  43de94:	ret
  43de98:	stp	x29, x30, [sp, #-240]!
  43de9c:	mov	x29, sp
  43dea0:	stp	x23, x24, [sp, #48]
  43dea4:	mov	w23, w6
  43dea8:	ldr	x24, [x0, #152]
  43deac:	stp	x21, x22, [sp, #32]
  43deb0:	mov	x22, x1
  43deb4:	stp	x25, x26, [sp, #64]
  43deb8:	ldrsw	x21, [x0, #224]
  43debc:	ldr	x25, [x1, #8]
  43dec0:	stp	x19, x20, [sp, #16]
  43dec4:	mov	x19, x0
  43dec8:	ldr	x1, [x24]
  43decc:	lsl	x0, x2, #4
  43ded0:	stp	x27, x28, [sp, #80]
  43ded4:	add	x21, x21, x5
  43ded8:	mov	x20, x2
  43dedc:	str	x5, [sp, #120]
  43dee0:	mov	x27, x3
  43dee4:	str	x4, [sp, #160]
  43dee8:	cmp	x21, x25
  43deec:	ldr	x26, [x1, x0]
  43def0:	str	wzr, [sp, #184]
  43def4:	b.lt	43df60 <_obstack_memory_used@@Base+0x62e0>  // b.tstop
  43def8:	add	x21, x21, #0x1
  43defc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  43df00:	sub	x0, x0, x25
  43df04:	cmp	x0, x21
  43df08:	b.ge	43df2c <_obstack_memory_used@@Base+0x62ac>  // b.tcont
  43df0c:	mov	w0, #0xc                   	// #12
  43df10:	ldp	x19, x20, [sp, #16]
  43df14:	ldp	x21, x22, [sp, #32]
  43df18:	ldp	x23, x24, [sp, #48]
  43df1c:	ldp	x25, x26, [sp, #64]
  43df20:	ldp	x27, x28, [sp, #80]
  43df24:	ldp	x29, x30, [sp], #240
  43df28:	ret
  43df2c:	add	x28, x25, x21
  43df30:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  43df34:	cmp	x28, x0
  43df38:	b.hi	43df0c <_obstack_memory_used@@Base+0x628c>  // b.pmore
  43df3c:	ldr	x0, [x22, #16]
  43df40:	lsl	x1, x28, #3
  43df44:	bl	404820 <realloc@plt>
  43df48:	cbz	x0, 43df0c <_obstack_memory_used@@Base+0x628c>
  43df4c:	stp	x28, x0, [x22, #8]
  43df50:	lsl	x2, x21, #3
  43df54:	add	x0, x0, x25, lsl #3
  43df58:	mov	w1, #0x0                   	// #0
  43df5c:	bl	404700 <memset@plt>
  43df60:	ldr	x21, [x22]
  43df64:	ldr	w2, [x19, #160]
  43df68:	cmp	x21, #0x0
  43df6c:	ldr	x28, [x22, #16]
  43df70:	csel	x21, x21, x27, ne  // ne = any
  43df74:	ldr	x0, [x19, #184]
  43df78:	str	x0, [sp, #144]
  43df7c:	str	x28, [x19, #184]
  43df80:	sub	x1, x21, #0x1
  43df84:	ldr	x0, [x19, #72]
  43df88:	str	x21, [x19, #72]
  43df8c:	str	x0, [sp, #152]
  43df90:	mov	x0, x19
  43df94:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43df98:	mov	w25, w0
  43df9c:	cmp	x21, x27
  43dfa0:	b.ne	43e00c <_obstack_memory_used@@Base+0x638c>  // b.any
  43dfa4:	mov	x1, x20
  43dfa8:	add	x0, sp, #0xc0
  43dfac:	bl	438638 <_obstack_memory_used@@Base+0x9b8>
  43dfb0:	str	w0, [sp, #184]
  43dfb4:	cbnz	w0, 43df10 <_obstack_memory_used@@Base+0x6290>
  43dfb8:	mov	w3, w23
  43dfbc:	mov	x2, x26
  43dfc0:	add	x1, sp, #0xc0
  43dfc4:	mov	x0, x24
  43dfc8:	bl	43d300 <_obstack_memory_used@@Base+0x5680>
  43dfcc:	str	w0, [sp, #184]
  43dfd0:	cbnz	w0, 43e070 <_obstack_memory_used@@Base+0x63f0>
  43dfd4:	ldr	x0, [sp, #200]
  43dfd8:	cbnz	x0, 43e050 <_obstack_memory_used@@Base+0x63d0>
  43dfdc:	mov	w3, w25
  43dfe0:	add	x2, sp, #0xc0
  43dfe4:	mov	x1, x24
  43dfe8:	add	x0, sp, #0xb8
  43dfec:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43dff0:	mov	x20, x0
  43dff4:	cbnz	x0, 43e000 <_obstack_memory_used@@Base+0x6380>
  43dff8:	ldr	w0, [sp, #184]
  43dffc:	cbnz	w0, 43e070 <_obstack_memory_used@@Base+0x63f0>
  43e000:	ldr	x0, [x19, #184]
  43e004:	str	x20, [x0, x21, lsl #3]
  43e008:	b	43e038 <_obstack_memory_used@@Base+0x63b8>
  43e00c:	ldr	x20, [x28, x21, lsl #3]
  43e010:	cbz	x20, 43e040 <_obstack_memory_used@@Base+0x63c0>
  43e014:	ldrb	w0, [x20, #104]
  43e018:	tbz	w0, #6, 43e040 <_obstack_memory_used@@Base+0x63c0>
  43e01c:	add	x1, x20, #0x8
  43e020:	add	x0, sp, #0xc0
  43e024:	bl	43b040 <_obstack_memory_used@@Base+0x33c0>
  43e028:	str	w0, [sp, #184]
  43e02c:	cbnz	w0, 43df10 <_obstack_memory_used@@Base+0x6290>
  43e030:	ldrb	w0, [x20, #104]
  43e034:	tbnz	w0, #6, 43dfd4 <_obstack_memory_used@@Base+0x6354>
  43e038:	str	xzr, [sp, #104]
  43e03c:	b	43e240 <_obstack_memory_used@@Base+0x65c0>
  43e040:	stp	xzr, xzr, [sp, #192]
  43e044:	str	xzr, [sp, #208]
  43e048:	cbnz	x20, 43e030 <_obstack_memory_used@@Base+0x63b0>
  43e04c:	b	43e038 <_obstack_memory_used@@Base+0x63b8>
  43e050:	mov	w4, w23
  43e054:	mov	x3, x26
  43e058:	mov	x2, x21
  43e05c:	add	x1, sp, #0xc0
  43e060:	mov	x0, x19
  43e064:	bl	43dc04 <_obstack_memory_used@@Base+0x5f84>
  43e068:	str	w0, [sp, #184]
  43e06c:	cbz	w0, 43dfdc <_obstack_memory_used@@Base+0x635c>
  43e070:	ldr	x0, [sp, #208]
  43e074:	bl	404ae0 <free@plt>
  43e078:	ldr	w0, [sp, #184]
  43e07c:	b	43df10 <_obstack_memory_used@@Base+0x6290>
  43e080:	add	x0, x21, #0x1
  43e084:	str	x0, [sp, #136]
  43e088:	str	xzr, [sp, #200]
  43e08c:	lsl	x0, x0, #3
  43e090:	str	x0, [sp, #128]
  43e094:	ldr	x0, [x19, #184]
  43e098:	ldr	x1, [sp, #128]
  43e09c:	ldr	x1, [x0, x1]
  43e0a0:	cbz	x1, 43e0b8 <_obstack_memory_used@@Base+0x6438>
  43e0a4:	add	x1, x1, #0x8
  43e0a8:	add	x0, sp, #0xc0
  43e0ac:	bl	43a198 <_obstack_memory_used@@Base+0x2518>
  43e0b0:	str	w0, [sp, #184]
  43e0b4:	cbnz	w0, 43e070 <_obstack_memory_used@@Base+0x63f0>
  43e0b8:	cbz	x20, 43e1ac <_obstack_memory_used@@Base+0x652c>
  43e0bc:	ldr	x28, [x19, #152]
  43e0c0:	mov	x27, #0x0                   	// #0
  43e0c4:	str	wzr, [sp, #188]
  43e0c8:	stp	xzr, xzr, [sp, #216]
  43e0cc:	str	xzr, [sp, #232]
  43e0d0:	ldr	x1, [x20, #40]
  43e0d4:	add	x0, x20, #0x20
  43e0d8:	cmp	x27, x1
  43e0dc:	b.lt	43e0f0 <_obstack_memory_used@@Base+0x6470>  // b.tstop
  43e0e0:	ldr	x0, [sp, #232]
  43e0e4:	bl	404ae0 <free@plt>
  43e0e8:	str	wzr, [sp, #184]
  43e0ec:	b	43e1ac <_obstack_memory_used@@Base+0x652c>
  43e0f0:	ldr	x0, [x0, #16]
  43e0f4:	ldr	x25, [x0, x27, lsl #3]
  43e0f8:	ldr	x0, [x28]
  43e0fc:	lsl	x5, x25, #4
  43e100:	add	x0, x0, x25, lsl #4
  43e104:	ldrb	w0, [x0, #10]
  43e108:	tbnz	w0, #4, 43e130 <_obstack_memory_used@@Base+0x64b0>
  43e10c:	ldr	x1, [x28]
  43e110:	mov	x2, x21
  43e114:	mov	x0, x19
  43e118:	add	x1, x1, x5
  43e11c:	bl	43d414 <_obstack_memory_used@@Base+0x5794>
  43e120:	tst	w0, #0xff
  43e124:	b.ne	43e2fc <_obstack_memory_used@@Base+0x667c>  // b.any
  43e128:	add	x27, x27, #0x1
  43e12c:	b	43e0d0 <_obstack_memory_used@@Base+0x6450>
  43e130:	mov	x3, x21
  43e134:	mov	x2, x19
  43e138:	mov	x1, x25
  43e13c:	mov	x0, x28
  43e140:	str	x5, [sp, #112]
  43e144:	bl	439de8 <_obstack_memory_used@@Base+0x2168>
  43e148:	cmp	w0, #0x1
  43e14c:	ldr	x5, [sp, #112]
  43e150:	b.le	43e324 <_obstack_memory_used@@Base+0x66a4>
  43e154:	add	x0, x21, w0, sxtw
  43e158:	ldr	x1, [x28, #24]
  43e15c:	lsl	x0, x0, #3
  43e160:	str	x0, [sp, #112]
  43e164:	ldr	x0, [x19, #184]
  43e168:	ldr	x2, [x1, x25, lsl #3]
  43e16c:	ldr	x1, [sp, #112]
  43e170:	ldr	x1, [x0, x1]
  43e174:	str	xzr, [sp, #224]
  43e178:	cbz	x1, 43e2a4 <_obstack_memory_used@@Base+0x6624>
  43e17c:	add	x1, x1, #0x8
  43e180:	add	x0, sp, #0xd8
  43e184:	str	x2, [sp, #168]
  43e188:	bl	43a198 <_obstack_memory_used@@Base+0x2518>
  43e18c:	str	w0, [sp, #188]
  43e190:	ldr	x2, [sp, #168]
  43e194:	cbz	w0, 43e2a4 <_obstack_memory_used@@Base+0x6624>
  43e198:	ldr	x0, [sp, #232]
  43e19c:	bl	404ae0 <free@plt>
  43e1a0:	ldr	w0, [sp, #188]
  43e1a4:	str	w0, [sp, #184]
  43e1a8:	cbnz	w0, 43e070 <_obstack_memory_used@@Base+0x63f0>
  43e1ac:	ldr	x0, [sp, #200]
  43e1b0:	cbz	x0, 43e1f0 <_obstack_memory_used@@Base+0x6570>
  43e1b4:	mov	w3, w23
  43e1b8:	mov	x2, x26
  43e1bc:	add	x1, sp, #0xc0
  43e1c0:	mov	x0, x24
  43e1c4:	bl	43d300 <_obstack_memory_used@@Base+0x5680>
  43e1c8:	str	w0, [sp, #184]
  43e1cc:	cbnz	w0, 43e070 <_obstack_memory_used@@Base+0x63f0>
  43e1d0:	ldr	x2, [sp, #136]
  43e1d4:	mov	w4, w23
  43e1d8:	mov	x3, x26
  43e1dc:	add	x1, sp, #0xc0
  43e1e0:	mov	x0, x19
  43e1e4:	bl	43dc04 <_obstack_memory_used@@Base+0x5f84>
  43e1e8:	str	w0, [sp, #184]
  43e1ec:	cbnz	w0, 43e070 <_obstack_memory_used@@Base+0x63f0>
  43e1f0:	ldr	w2, [x19, #160]
  43e1f4:	mov	x1, x21
  43e1f8:	mov	x0, x19
  43e1fc:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43e200:	mov	w3, w0
  43e204:	add	x2, sp, #0xc0
  43e208:	mov	x1, x24
  43e20c:	add	x0, sp, #0xb8
  43e210:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43e214:	mov	x20, x0
  43e218:	cbnz	x0, 43e224 <_obstack_memory_used@@Base+0x65a4>
  43e21c:	ldr	w0, [sp, #184]
  43e220:	cbnz	w0, 43e070 <_obstack_memory_used@@Base+0x63f0>
  43e224:	ldr	x0, [x19, #184]
  43e228:	cmp	x20, #0x0
  43e22c:	ldp	x1, x21, [sp, #128]
  43e230:	str	x20, [x0, x1]
  43e234:	ldr	x0, [sp, #104]
  43e238:	csinc	x0, xzr, x0, ne  // ne = any
  43e23c:	str	x0, [sp, #104]
  43e240:	ldr	x0, [sp, #120]
  43e244:	cmp	x21, x0
  43e248:	b.ge	43e25c <_obstack_memory_used@@Base+0x65dc>  // b.tcont
  43e24c:	ldr	x1, [sp, #104]
  43e250:	ldrsw	x0, [x19, #224]
  43e254:	cmp	x0, x1
  43e258:	b.ge	43e080 <_obstack_memory_used@@Base+0x6400>  // b.tcont
  43e25c:	ldr	x0, [sp, #208]
  43e260:	bl	404ae0 <free@plt>
  43e264:	ldr	x1, [sp, #120]
  43e268:	ldr	x0, [x19, #184]
  43e26c:	ldr	x0, [x0, x1, lsl #3]
  43e270:	cbz	x0, 43e278 <_obstack_memory_used@@Base+0x65f8>
  43e274:	add	x0, x0, #0x8
  43e278:	str	x21, [x22]
  43e27c:	ldr	x1, [sp, #144]
  43e280:	str	x1, [x19, #184]
  43e284:	ldr	x1, [sp, #152]
  43e288:	str	x1, [x19, #72]
  43e28c:	cbz	x0, 43e32c <_obstack_memory_used@@Base+0x66ac>
  43e290:	ldr	x1, [sp, #160]
  43e294:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43e298:	cmp	x0, #0x0
  43e29c:	cset	w0, eq  // eq = none
  43e2a0:	b	43df10 <_obstack_memory_used@@Base+0x6290>
  43e2a4:	mov	x1, x2
  43e2a8:	add	x0, sp, #0xd8
  43e2ac:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43e2b0:	tst	w0, #0xff
  43e2b4:	b.ne	43e2cc <_obstack_memory_used@@Base+0x664c>  // b.any
  43e2b8:	ldr	x0, [sp, #232]
  43e2bc:	bl	404ae0 <free@plt>
  43e2c0:	mov	w0, #0xc                   	// #12
  43e2c4:	str	w0, [sp, #184]
  43e2c8:	b	43e070 <_obstack_memory_used@@Base+0x63f0>
  43e2cc:	ldr	x3, [x19, #184]
  43e2d0:	mov	x1, x28
  43e2d4:	add	x2, sp, #0xd8
  43e2d8:	add	x0, sp, #0xbc
  43e2dc:	str	x3, [sp, #168]
  43e2e0:	bl	43da40 <_obstack_memory_used@@Base+0x5dc0>
  43e2e4:	ldr	x1, [sp, #112]
  43e2e8:	ldr	x3, [sp, #168]
  43e2ec:	str	x0, [x3, x1]
  43e2f0:	ldr	x0, [x19, #184]
  43e2f4:	ldr	x0, [x0, x1]
  43e2f8:	cbz	x0, 43e318 <_obstack_memory_used@@Base+0x6698>
  43e2fc:	ldr	x0, [x28, #24]
  43e300:	ldr	x1, [x0, x25, lsl #3]
  43e304:	add	x0, sp, #0xc0
  43e308:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43e30c:	tst	w0, #0xff
  43e310:	b.ne	43e128 <_obstack_memory_used@@Base+0x64a8>  // b.any
  43e314:	b	43e2b8 <_obstack_memory_used@@Base+0x6638>
  43e318:	ldr	w0, [sp, #188]
  43e31c:	cbz	w0, 43e2fc <_obstack_memory_used@@Base+0x667c>
  43e320:	b	43e198 <_obstack_memory_used@@Base+0x6518>
  43e324:	cbz	w0, 43e10c <_obstack_memory_used@@Base+0x648c>
  43e328:	b	43e2fc <_obstack_memory_used@@Base+0x667c>
  43e32c:	mov	w0, #0x1                   	// #1
  43e330:	b	43df10 <_obstack_memory_used@@Base+0x6290>
  43e334:	stp	x29, x30, [sp, #-80]!
  43e338:	mov	x5, x4
  43e33c:	mov	w6, #0x8                   	// #8
  43e340:	mov	x29, sp
  43e344:	stp	x19, x20, [sp, #16]
  43e348:	mov	x20, x4
  43e34c:	mov	x4, x3
  43e350:	stp	x21, x22, [sp, #32]
  43e354:	mov	x21, x2
  43e358:	mov	x19, x0
  43e35c:	stp	x23, x24, [sp, #48]
  43e360:	mov	x23, x1
  43e364:	mov	x24, x3
  43e368:	add	x1, x2, #0x10
  43e36c:	ldr	x3, [x2, #8]
  43e370:	ldr	x2, [x2]
  43e374:	str	x25, [sp, #64]
  43e378:	bl	43de98 <_obstack_memory_used@@Base+0x6218>
  43e37c:	cbnz	w0, 43e3b4 <_obstack_memory_used@@Base+0x6734>
  43e380:	ldp	x1, x0, [x19, #200]
  43e384:	ldr	x25, [x23]
  43e388:	ldr	x22, [x21, #8]
  43e38c:	cmp	x1, x0
  43e390:	b.lt	43e3f4 <_obstack_memory_used@@Base+0x6774>  // b.tstop
  43e394:	mov	x1, #0x50                  	// #80
  43e398:	mul	x1, x0, x1
  43e39c:	ldr	x0, [x19, #216]
  43e3a0:	bl	404820 <realloc@plt>
  43e3a4:	cbnz	x0, 43e3cc <_obstack_memory_used@@Base+0x674c>
  43e3a8:	ldr	x0, [x19, #216]
  43e3ac:	bl	404ae0 <free@plt>
  43e3b0:	mov	w0, #0xc                   	// #12
  43e3b4:	ldp	x19, x20, [sp, #16]
  43e3b8:	ldp	x21, x22, [sp, #32]
  43e3bc:	ldp	x23, x24, [sp, #48]
  43e3c0:	ldr	x25, [sp, #64]
  43e3c4:	ldp	x29, x30, [sp], #80
  43e3c8:	ret
  43e3cc:	ldp	x4, x2, [x19, #200]
  43e3d0:	mov	x3, #0x28                  	// #40
  43e3d4:	str	x0, [x19, #216]
  43e3d8:	mov	w1, #0x0                   	// #0
  43e3dc:	mul	x2, x2, x3
  43e3e0:	madd	x0, x4, x3, x0
  43e3e4:	bl	404700 <memset@plt>
  43e3e8:	ldr	x0, [x19, #208]
  43e3ec:	lsl	x0, x0, #1
  43e3f0:	str	x0, [x19, #208]
  43e3f4:	ldr	x1, [x19, #200]
  43e3f8:	mov	x2, #0x28                  	// #40
  43e3fc:	ldr	x3, [x19, #216]
  43e400:	cmp	x1, #0x0
  43e404:	mul	x2, x1, x2
  43e408:	b.le	43e428 <_obstack_memory_used@@Base+0x67a8>
  43e40c:	sub	x0, x2, #0x28
  43e410:	add	x0, x3, x0
  43e414:	ldr	x4, [x0, #8]
  43e418:	cmp	x20, x4
  43e41c:	b.ne	43e428 <_obstack_memory_used@@Base+0x67a8>  // b.any
  43e420:	mov	w4, #0x1                   	// #1
  43e424:	strb	w4, [x0, #32]
  43e428:	add	x0, x3, x2
  43e42c:	cmp	x25, x22
  43e430:	str	x24, [x3, x2]
  43e434:	csetm	w2, eq  // eq = none
  43e438:	add	x1, x1, #0x1
  43e43c:	stp	x20, x25, [x0, #8]
  43e440:	str	x22, [x0, #24]
  43e444:	strh	w2, [x0, #34]
  43e448:	str	x1, [x19, #200]
  43e44c:	strb	wzr, [x0, #32]
  43e450:	sub	x0, x22, x25
  43e454:	ldrsw	x1, [x19, #224]
  43e458:	cmp	x1, x0
  43e45c:	b.ge	43e468 <_obstack_memory_used@@Base+0x67e8>  // b.tcont
  43e460:	sub	w22, w22, w25
  43e464:	str	w22, [x19, #224]
  43e468:	ldr	x5, [x21, #8]
  43e46c:	mov	x0, x19
  43e470:	ldr	x1, [x23]
  43e474:	add	x20, x20, x5
  43e478:	ldp	x21, x22, [sp, #32]
  43e47c:	sub	x1, x20, x1
  43e480:	ldp	x19, x20, [sp, #16]
  43e484:	ldp	x23, x24, [sp, #48]
  43e488:	ldr	x25, [sp, #64]
  43e48c:	ldp	x29, x30, [sp], #80
  43e490:	b	438f68 <_obstack_memory_used@@Base+0x12e8>
  43e494:	stp	x29, x30, [sp, #-208]!
  43e498:	mov	x29, sp
  43e49c:	stp	x19, x20, [sp, #16]
  43e4a0:	ldr	x19, [x0, #72]
  43e4a4:	stp	x21, x22, [sp, #32]
  43e4a8:	stp	x23, x24, [sp, #48]
  43e4ac:	mov	x23, x0
  43e4b0:	stp	x25, x26, [sp, #64]
  43e4b4:	stp	x27, x28, [sp, #80]
  43e4b8:	str	xzr, [sp, #96]
  43e4bc:	str	x1, [sp, #160]
  43e4c0:	ldr	x22, [x0, #152]
  43e4c4:	lsl	x0, x19, #3
  43e4c8:	str	x0, [sp, #128]
  43e4cc:	ldr	x0, [sp, #160]
  43e4d0:	ldr	x1, [sp, #96]
  43e4d4:	ldr	x0, [x0, #8]
  43e4d8:	cmp	x0, x1
  43e4dc:	b.gt	43e4e8 <_obstack_memory_used@@Base+0x6868>
  43e4e0:	str	wzr, [sp, #180]
  43e4e4:	b	43e6b0 <_obstack_memory_used@@Base+0x6a30>
  43e4e8:	ldr	x0, [sp, #160]
  43e4ec:	ldr	x1, [sp, #96]
  43e4f0:	ldr	x0, [x0, #16]
  43e4f4:	ldr	x21, [x0, x1, lsl #3]
  43e4f8:	ldr	x0, [x22]
  43e4fc:	lsl	x20, x21, #4
  43e500:	add	x0, x0, x21, lsl #4
  43e504:	ldrb	w1, [x0, #8]
  43e508:	cmp	w1, #0x4
  43e50c:	b.eq	43e520 <_obstack_memory_used@@Base+0x68a0>  // b.none
  43e510:	ldr	x0, [sp, #96]
  43e514:	add	x0, x0, #0x1
  43e518:	str	x0, [sp, #96]
  43e51c:	b	43e4cc <_obstack_memory_used@@Base+0x684c>
  43e520:	ldr	w25, [x0, #8]
  43e524:	tst	w25, #0x3ff00
  43e528:	b.eq	43e560 <_obstack_memory_used@@Base+0x68e0>  // b.none
  43e52c:	ldr	w2, [x23, #160]
  43e530:	mov	x1, x19
  43e534:	mov	x0, x23
  43e538:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43e53c:	ubfx	x1, x25, #8, #10
  43e540:	tbz	w25, #10, 43e548 <_obstack_memory_used@@Base+0x68c8>
  43e544:	tbz	w0, #0, 43e510 <_obstack_memory_used@@Base+0x6890>
  43e548:	tbz	w1, #3, 43e550 <_obstack_memory_used@@Base+0x68d0>
  43e54c:	tbnz	w0, #0, 43e510 <_obstack_memory_used@@Base+0x6890>
  43e550:	tbz	w1, #5, 43e558 <_obstack_memory_used@@Base+0x68d8>
  43e554:	tbz	w0, #1, 43e510 <_obstack_memory_used@@Base+0x6890>
  43e558:	tbz	w1, #7, 43e560 <_obstack_memory_used@@Base+0x68e0>
  43e55c:	tbz	w0, #3, 43e510 <_obstack_memory_used@@Base+0x6890>
  43e560:	ldr	x0, [x23, #200]
  43e564:	mov	x1, x19
  43e568:	str	x0, [sp, #104]
  43e56c:	mov	x0, x23
  43e570:	bl	4382e8 <_obstack_memory_used@@Base+0x668>
  43e574:	cmn	x0, #0x1
  43e578:	b.eq	43e5f8 <_obstack_memory_used@@Base+0x6978>  // b.none
  43e57c:	ldr	x1, [x23, #216]
  43e580:	mov	x2, #0x28                  	// #40
  43e584:	madd	x0, x0, x2, x1
  43e588:	ldr	x1, [x0]
  43e58c:	cmp	x21, x1
  43e590:	b.ne	43e5ec <_obstack_memory_used@@Base+0x696c>  // b.any
  43e594:	lsl	x0, x21, #3
  43e598:	str	wzr, [sp, #180]
  43e59c:	mov	x25, x0
  43e5a0:	mov	x0, #0x18                  	// #24
  43e5a4:	mul	x0, x21, x0
  43e5a8:	mov	x24, x0
  43e5ac:	ldr	x1, [sp, #104]
  43e5b0:	ldr	x0, [x23, #200]
  43e5b4:	cmp	x0, x1
  43e5b8:	b.le	43e510 <_obstack_memory_used@@Base+0x6890>
  43e5bc:	ldr	x0, [sp, #104]
  43e5c0:	mov	x1, #0x28                  	// #40
  43e5c4:	ldr	x2, [x23, #216]
  43e5c8:	mul	x0, x0, x1
  43e5cc:	add	x1, x2, x0
  43e5d0:	ldr	x0, [x2, x0]
  43e5d4:	cmp	x0, x21
  43e5d8:	b.eq	43e8dc <_obstack_memory_used@@Base+0x6c5c>  // b.none
  43e5dc:	ldr	x0, [sp, #104]
  43e5e0:	add	x0, x0, #0x1
  43e5e4:	str	x0, [sp, #104]
  43e5e8:	b	43e5ac <_obstack_memory_used@@Base+0x692c>
  43e5ec:	ldrb	w1, [x0, #32]
  43e5f0:	add	x0, x0, #0x28
  43e5f4:	cbnz	w1, 43e588 <_obstack_memory_used@@Base+0x6908>
  43e5f8:	ldr	x28, [x23, #152]
  43e5fc:	str	xzr, [sp, #112]
  43e600:	ldr	x24, [x23, #8]
  43e604:	ldr	x0, [x28]
  43e608:	ldr	x0, [x0, x20]
  43e60c:	str	x0, [sp, #136]
  43e610:	ldr	x1, [sp, #112]
  43e614:	ldr	x0, [x23, #232]
  43e618:	cmp	x1, x0
  43e61c:	b.ge	43e594 <_obstack_memory_used@@Base+0x6914>  // b.tcont
  43e620:	ldr	x1, [sp, #112]
  43e624:	ldr	x0, [x23, #248]
  43e628:	ldr	x26, [x0, x1, lsl #3]
  43e62c:	ldr	x1, [x28]
  43e630:	ldr	x0, [x26, #8]
  43e634:	lsl	x0, x0, #4
  43e638:	ldr	x0, [x1, x0]
  43e63c:	ldr	x1, [sp, #136]
  43e640:	cmp	x1, x0
  43e644:	b.ne	43e734 <_obstack_memory_used@@Base+0x6ab4>  // b.any
  43e648:	ldr	x25, [x26]
  43e64c:	mov	x20, x19
  43e650:	mov	x27, #0x0                   	// #0
  43e654:	ldr	x0, [x26, #32]
  43e658:	cmp	x27, x0
  43e65c:	b.ge	43e718 <_obstack_memory_used@@Base+0x6a98>  // b.tcont
  43e660:	ldr	x0, [x26, #40]
  43e664:	ldr	x0, [x0, x27, lsl #3]
  43e668:	str	x0, [sp, #144]
  43e66c:	ldr	x0, [x0, #8]
  43e670:	str	x0, [sp, #152]
  43e674:	sub	x2, x0, x25
  43e678:	add	x0, x2, x20
  43e67c:	str	x0, [sp, #120]
  43e680:	cmp	x2, #0x0
  43e684:	b.gt	43e6d0 <_obstack_memory_used@@Base+0x6a50>
  43e688:	ldr	x2, [sp, #144]
  43e68c:	mov	x4, x19
  43e690:	mov	x3, x21
  43e694:	mov	x1, x26
  43e698:	mov	x0, x23
  43e69c:	bl	43e334 <_obstack_memory_used@@Base+0x66b4>
  43e6a0:	cmp	w0, #0x1
  43e6a4:	ldr	x24, [x23, #8]
  43e6a8:	b.ls	43e744 <_obstack_memory_used@@Base+0x6ac4>  // b.plast
  43e6ac:	str	w0, [sp, #180]
  43e6b0:	ldr	w0, [sp, #180]
  43e6b4:	ldp	x19, x20, [sp, #16]
  43e6b8:	ldp	x21, x22, [sp, #32]
  43e6bc:	ldp	x23, x24, [sp, #48]
  43e6c0:	ldp	x25, x26, [sp, #64]
  43e6c4:	ldp	x27, x28, [sp, #80]
  43e6c8:	ldp	x29, x30, [sp], #208
  43e6cc:	ret
  43e6d0:	ldr	x0, [x23, #48]
  43e6d4:	add	x1, x2, x20
  43e6d8:	cmp	x0, x1
  43e6dc:	b.ge	43e708 <_obstack_memory_used@@Base+0x6a88>  // b.tcont
  43e6e0:	ldr	x0, [x23, #88]
  43e6e4:	str	x2, [sp, #168]
  43e6e8:	ldr	x1, [sp, #120]
  43e6ec:	cmp	x0, x1
  43e6f0:	b.lt	43e718 <_obstack_memory_used@@Base+0x6a98>  // b.tstop
  43e6f4:	mov	x0, x23
  43e6f8:	bl	438f68 <_obstack_memory_used@@Base+0x12e8>
  43e6fc:	cbnz	w0, 43e6ac <_obstack_memory_used@@Base+0x6a2c>
  43e700:	ldr	x24, [x23, #8]
  43e704:	ldr	x2, [sp, #168]
  43e708:	add	x1, x24, x25
  43e70c:	add	x0, x24, x20
  43e710:	bl	4049f0 <memcmp@plt>
  43e714:	cbz	w0, 43e688 <_obstack_memory_used@@Base+0x6a08>
  43e718:	ldr	x0, [x26, #32]
  43e71c:	cmp	x27, x0
  43e720:	b.lt	43e734 <_obstack_memory_used@@Base+0x6ab4>  // b.tstop
  43e724:	cbz	x27, 43e72c <_obstack_memory_used@@Base+0x6aac>
  43e728:	add	x25, x25, #0x1
  43e72c:	cmp	x19, x25
  43e730:	b.ge	43e754 <_obstack_memory_used@@Base+0x6ad4>  // b.tcont
  43e734:	ldr	x0, [sp, #112]
  43e738:	add	x0, x0, #0x1
  43e73c:	str	x0, [sp, #112]
  43e740:	b	43e610 <_obstack_memory_used@@Base+0x6990>
  43e744:	add	x27, x27, #0x1
  43e748:	ldr	x20, [sp, #120]
  43e74c:	ldr	x25, [sp, #152]
  43e750:	b	43e654 <_obstack_memory_used@@Base+0x69d4>
  43e754:	ldr	x0, [x26]
  43e758:	sub	x0, x25, x0
  43e75c:	cmp	x0, #0x0
  43e760:	b.le	43e7ac <_obstack_memory_used@@Base+0x6b2c>
  43e764:	ldr	x0, [x23, #48]
  43e768:	cmp	x0, x20
  43e76c:	b.gt	43e790 <_obstack_memory_used@@Base+0x6b10>
  43e770:	ldr	x0, [x23, #88]
  43e774:	cmp	x20, x0
  43e778:	b.ge	43e734 <_obstack_memory_used@@Base+0x6ab4>  // b.tcont
  43e77c:	add	w1, w20, #0x1
  43e780:	mov	x0, x23
  43e784:	bl	438e9c <_obstack_memory_used@@Base+0x121c>
  43e788:	cbnz	w0, 43e6ac <_obstack_memory_used@@Base+0x6a2c>
  43e78c:	ldr	x24, [x23, #8]
  43e790:	add	x0, x24, x25
  43e794:	ldrb	w2, [x24, x20]
  43e798:	add	x1, x20, #0x1
  43e79c:	ldurb	w0, [x0, #-1]
  43e7a0:	cmp	w2, w0
  43e7a4:	b.ne	43e734 <_obstack_memory_used@@Base+0x6ab4>  // b.any
  43e7a8:	mov	x20, x1
  43e7ac:	ldr	x0, [x23, #184]
  43e7b0:	ldr	x0, [x0, x25, lsl #3]
  43e7b4:	cbz	x0, 43e728 <_obstack_memory_used@@Base+0x6aa8>
  43e7b8:	ldr	x3, [x0, #16]
  43e7bc:	add	x0, x0, #0x8
  43e7c0:	mov	x1, #0x0                   	// #0
  43e7c4:	cmp	x1, x3
  43e7c8:	b.ge	43e728 <_obstack_memory_used@@Base+0x6aa8>  // b.tcont
  43e7cc:	ldr	x2, [x0, #16]
  43e7d0:	ldr	x27, [x2, x1, lsl #3]
  43e7d4:	ldr	x2, [x28]
  43e7d8:	lsl	x4, x27, #4
  43e7dc:	add	x6, x2, x27, lsl #4
  43e7e0:	ldrb	w6, [x6, #8]
  43e7e4:	cmp	w6, #0x9
  43e7e8:	b.ne	43e7fc <_obstack_memory_used@@Base+0x6b7c>  // b.any
  43e7ec:	ldr	x2, [x2, x4]
  43e7f0:	ldr	x4, [sp, #136]
  43e7f4:	cmp	x4, x2
  43e7f8:	b.eq	43e804 <_obstack_memory_used@@Base+0x6b84>  // b.none
  43e7fc:	add	x1, x1, #0x1
  43e800:	b	43e7c4 <_obstack_memory_used@@Base+0x6b44>
  43e804:	cmn	x27, #0x1
  43e808:	b.eq	43e728 <_obstack_memory_used@@Base+0x6aa8>  // b.none
  43e80c:	ldr	x0, [x26, #16]
  43e810:	ldr	x3, [x26]
  43e814:	cbz	x0, 43e8b4 <_obstack_memory_used@@Base+0x6c34>
  43e818:	ldp	x2, x1, [x26, #8]
  43e81c:	mov	x5, x25
  43e820:	mov	x4, x27
  43e824:	mov	x0, x23
  43e828:	mov	w6, #0x9                   	// #9
  43e82c:	bl	43de98 <_obstack_memory_used@@Base+0x6218>
  43e830:	cmp	w0, #0x1
  43e834:	b.eq	43e728 <_obstack_memory_used@@Base+0x6aa8>  // b.none
  43e838:	cbnz	w0, 43e6ac <_obstack_memory_used@@Base+0x6a2c>
  43e83c:	ldp	x0, x2, [x26, #24]
  43e840:	cmp	x2, x0
  43e844:	b.ne	43e868 <_obstack_memory_used@@Base+0x6be8>  // b.any
  43e848:	ldr	x0, [x26, #40]
  43e84c:	lsl	x2, x2, #1
  43e850:	add	x24, x2, #0x1
  43e854:	lsl	x1, x24, #3
  43e858:	bl	404820 <realloc@plt>
  43e85c:	cbz	x0, 43e8d4 <_obstack_memory_used@@Base+0x6c54>
  43e860:	str	x24, [x26, #24]
  43e864:	str	x0, [x26, #40]
  43e868:	mov	x1, #0x28                  	// #40
  43e86c:	mov	x0, #0x1                   	// #1
  43e870:	bl	4047a0 <calloc@plt>
  43e874:	mov	x2, x0
  43e878:	cbz	x0, 43e8d4 <_obstack_memory_used@@Base+0x6c54>
  43e87c:	ldp	x0, x1, [x26, #32]
  43e880:	mov	x4, x19
  43e884:	mov	x3, x21
  43e888:	str	x2, [x1, x0, lsl #3]
  43e88c:	add	x0, x0, #0x1
  43e890:	stp	x27, x25, [x2]
  43e894:	mov	x1, x26
  43e898:	str	x0, [x26, #32]
  43e89c:	mov	x0, x23
  43e8a0:	bl	43e334 <_obstack_memory_used@@Base+0x66b4>
  43e8a4:	cmp	w0, #0x1
  43e8a8:	ldr	x24, [x23, #8]
  43e8ac:	b.ls	43e728 <_obstack_memory_used@@Base+0x6aa8>  // b.plast
  43e8b0:	b	43e6ac <_obstack_memory_used@@Base+0x6a2c>
  43e8b4:	sub	x1, x25, x3
  43e8b8:	mov	x0, #0x18                  	// #24
  43e8bc:	add	x1, x1, #0x1
  43e8c0:	str	x3, [sp, #120]
  43e8c4:	bl	4047a0 <calloc@plt>
  43e8c8:	str	x0, [x26, #16]
  43e8cc:	ldr	x3, [sp, #120]
  43e8d0:	cbnz	x0, 43e818 <_obstack_memory_used@@Base+0x6b98>
  43e8d4:	mov	w0, #0xc                   	// #12
  43e8d8:	b	43e6ac <_obstack_memory_used@@Base+0x6a2c>
  43e8dc:	ldr	x0, [x1, #8]
  43e8e0:	cmp	x0, x19
  43e8e4:	b.ne	43e5dc <_obstack_memory_used@@Base+0x695c>  // b.any
  43e8e8:	ldr	x0, [x1, #24]
  43e8ec:	ldr	x1, [x1, #16]
  43e8f0:	ldr	x26, [x22, #48]
  43e8f4:	subs	x28, x0, x1
  43e8f8:	b.ne	43e9cc <_obstack_memory_used@@Base+0x6d4c>  // b.any
  43e8fc:	ldr	x2, [x22, #40]
  43e900:	add	x2, x2, x24
  43e904:	ldr	x2, [x2, #16]
  43e908:	ldr	x2, [x2]
  43e90c:	mov	x3, #0x18                  	// #24
  43e910:	add	x20, x0, x19
  43e914:	mov	x0, x23
  43e918:	madd	x26, x2, x3, x26
  43e91c:	ldr	w2, [x23, #160]
  43e920:	sub	x20, x20, x1
  43e924:	sub	x1, x20, #0x1
  43e928:	lsl	x20, x20, #3
  43e92c:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43e930:	mov	w3, w0
  43e934:	ldr	x1, [sp, #128]
  43e938:	ldr	x4, [x23, #184]
  43e93c:	ldr	x1, [x4, x1]
  43e940:	ldr	x0, [x4, x20]
  43e944:	cbz	x1, 43e9d8 <_obstack_memory_used@@Base+0x6d58>
  43e948:	ldr	x27, [x1, #16]
  43e94c:	cbnz	x0, 43e9e0 <_obstack_memory_used@@Base+0x6d60>
  43e950:	mov	x2, x26
  43e954:	mov	x1, x22
  43e958:	add	x0, sp, #0xb4
  43e95c:	str	x4, [sp, #112]
  43e960:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43e964:	ldr	x4, [sp, #112]
  43e968:	str	x0, [x4, x20]
  43e96c:	ldr	x0, [x23, #184]
  43e970:	ldr	x0, [x0, x20]
  43e974:	cbnz	x0, 43e980 <_obstack_memory_used@@Base+0x6d00>
  43e978:	ldr	w0, [sp, #180]
  43e97c:	cbnz	w0, 43e6b0 <_obstack_memory_used@@Base+0x6a30>
  43e980:	cbnz	x28, 43e5dc <_obstack_memory_used@@Base+0x695c>
  43e984:	ldr	x1, [sp, #128]
  43e988:	ldr	x0, [x23, #184]
  43e98c:	ldr	x0, [x0, x1]
  43e990:	ldr	x0, [x0, #16]
  43e994:	cmp	x0, x27
  43e998:	b.le	43e5dc <_obstack_memory_used@@Base+0x695c>
  43e99c:	mov	x2, x19
  43e9a0:	mov	x1, x26
  43e9a4:	mov	x0, x23
  43e9a8:	bl	4386bc <_obstack_memory_used@@Base+0xa3c>
  43e9ac:	str	w0, [sp, #180]
  43e9b0:	cbnz	w0, 43e6b0 <_obstack_memory_used@@Base+0x6a30>
  43e9b4:	mov	x1, x26
  43e9b8:	mov	x0, x23
  43e9bc:	bl	43e494 <_obstack_memory_used@@Base+0x6814>
  43e9c0:	str	w0, [sp, #180]
  43e9c4:	cbz	w0, 43e5dc <_obstack_memory_used@@Base+0x695c>
  43e9c8:	b	43e6b0 <_obstack_memory_used@@Base+0x6a30>
  43e9cc:	ldr	x2, [x22, #24]
  43e9d0:	ldr	x2, [x2, x25]
  43e9d4:	b	43e90c <_obstack_memory_used@@Base+0x6c8c>
  43e9d8:	mov	x27, #0x0                   	// #0
  43e9dc:	b	43e94c <_obstack_memory_used@@Base+0x6ccc>
  43e9e0:	ldr	x1, [x0, #80]
  43e9e4:	mov	x2, x26
  43e9e8:	add	x0, sp, #0xb8
  43e9ec:	str	w3, [sp, #112]
  43e9f0:	bl	43b0b8 <_obstack_memory_used@@Base+0x3438>
  43e9f4:	str	w0, [sp, #180]
  43e9f8:	ldr	w3, [sp, #112]
  43e9fc:	cbz	w0, 43ea0c <_obstack_memory_used@@Base+0x6d8c>
  43ea00:	ldr	x0, [sp, #200]
  43ea04:	bl	404ae0 <free@plt>
  43ea08:	b	43e6b0 <_obstack_memory_used@@Base+0x6a30>
  43ea0c:	ldr	x4, [x23, #184]
  43ea10:	add	x2, sp, #0xb8
  43ea14:	mov	x1, x22
  43ea18:	add	x0, sp, #0xb4
  43ea1c:	str	x4, [sp, #112]
  43ea20:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43ea24:	ldr	x4, [sp, #112]
  43ea28:	str	x0, [x4, x20]
  43ea2c:	ldr	x0, [sp, #200]
  43ea30:	bl	404ae0 <free@plt>
  43ea34:	b	43e96c <_obstack_memory_used@@Base+0x6cec>
  43ea38:	stp	x29, x30, [sp, #-112]!
  43ea3c:	mov	x29, sp
  43ea40:	stp	x19, x20, [sp, #16]
  43ea44:	mov	x20, x1
  43ea48:	mov	x19, x2
  43ea4c:	stp	x21, x22, [sp, #32]
  43ea50:	mov	x21, x0
  43ea54:	stp	x23, x24, [sp, #48]
  43ea58:	stp	x25, x26, [sp, #64]
  43ea5c:	ldr	x23, [x1, #72]
  43ea60:	ldr	x25, [x1, #152]
  43ea64:	ldp	x0, x1, [x1, #184]
  43ea68:	lsl	x22, x23, #3
  43ea6c:	cmp	x1, x23
  43ea70:	b.ge	43eacc <_obstack_memory_used@@Base+0x6e4c>  // b.tcont
  43ea74:	str	x2, [x0, x22]
  43ea78:	str	x23, [x20, #192]
  43ea7c:	ldr	x0, [x25, #152]
  43ea80:	cbz	x0, 43eb00 <_obstack_memory_used@@Base+0x6e80>
  43ea84:	cbz	x19, 43eafc <_obstack_memory_used@@Base+0x6e7c>
  43ea88:	add	x24, x19, #0x8
  43ea8c:	mov	x2, x23
  43ea90:	mov	x1, x24
  43ea94:	mov	x0, x20
  43ea98:	bl	4386bc <_obstack_memory_used@@Base+0xa3c>
  43ea9c:	str	w0, [x21]
  43eaa0:	cbnz	w0, 43eafc <_obstack_memory_used@@Base+0x6e7c>
  43eaa4:	ldrb	w0, [x19, #104]
  43eaa8:	tbz	w0, #6, 43eb00 <_obstack_memory_used@@Base+0x6e80>
  43eaac:	mov	x1, x24
  43eab0:	mov	x0, x20
  43eab4:	bl	43e494 <_obstack_memory_used@@Base+0x6814>
  43eab8:	str	w0, [x21]
  43eabc:	cbnz	w0, 43eafc <_obstack_memory_used@@Base+0x6e7c>
  43eac0:	ldr	x0, [x20, #184]
  43eac4:	ldr	x19, [x0, x22]
  43eac8:	b	43eb00 <_obstack_memory_used@@Base+0x6e80>
  43eacc:	ldr	x1, [x0, x22]
  43ead0:	cbnz	x1, 43eadc <_obstack_memory_used@@Base+0x6e5c>
  43ead4:	str	x2, [x0, x22]
  43ead8:	b	43ea7c <_obstack_memory_used@@Base+0x6dfc>
  43eadc:	ldr	x2, [x1, #80]
  43eae0:	cbz	x19, 43eb1c <_obstack_memory_used@@Base+0x6e9c>
  43eae4:	ldr	x24, [x19, #80]
  43eae8:	add	x0, sp, #0x58
  43eaec:	mov	x1, x24
  43eaf0:	bl	43b0b8 <_obstack_memory_used@@Base+0x3438>
  43eaf4:	str	w0, [x21]
  43eaf8:	cbz	w0, 43eb30 <_obstack_memory_used@@Base+0x6eb0>
  43eafc:	mov	x19, #0x0                   	// #0
  43eb00:	mov	x0, x19
  43eb04:	ldp	x19, x20, [sp, #16]
  43eb08:	ldp	x21, x22, [sp, #32]
  43eb0c:	ldp	x23, x24, [sp, #48]
  43eb10:	ldp	x25, x26, [sp, #64]
  43eb14:	ldp	x29, x30, [sp], #112
  43eb18:	ret
  43eb1c:	ldp	x0, x1, [x2]
  43eb20:	stp	x0, x1, [sp, #88]
  43eb24:	mov	x24, #0x0                   	// #0
  43eb28:	ldr	x0, [x2, #16]
  43eb2c:	str	x0, [sp, #104]
  43eb30:	ldr	w2, [x20, #160]
  43eb34:	mov	x0, x20
  43eb38:	ldr	x1, [x20, #72]
  43eb3c:	sub	x1, x1, #0x1
  43eb40:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43eb44:	ldr	x26, [x20, #184]
  43eb48:	mov	w3, w0
  43eb4c:	add	x2, sp, #0x58
  43eb50:	mov	x1, x25
  43eb54:	mov	x0, x21
  43eb58:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43eb5c:	str	x0, [x26, x22]
  43eb60:	mov	x19, x0
  43eb64:	cbz	x24, 43ea7c <_obstack_memory_used@@Base+0x6dfc>
  43eb68:	ldr	x0, [sp, #104]
  43eb6c:	bl	404ae0 <free@plt>
  43eb70:	b	43ea7c <_obstack_memory_used@@Base+0x6dfc>
  43eb74:	stp	x29, x30, [sp, #-224]!
  43eb78:	mov	x29, sp
  43eb7c:	stp	x19, x20, [sp, #16]
  43eb80:	mov	x20, x0
  43eb84:	mov	x19, x1
  43eb88:	stp	x23, x24, [sp, #48]
  43eb8c:	lsl	x24, x2, #3
  43eb90:	ldr	x23, [x0, #152]
  43eb94:	stp	x21, x22, [sp, #32]
  43eb98:	mov	x21, x2
  43eb9c:	ldr	x0, [x0, #184]
  43eba0:	stp	x25, x26, [sp, #64]
  43eba4:	stp	x27, x28, [sp, #80]
  43eba8:	mov	x28, x3
  43ebac:	ldr	x22, [x0, x24]
  43ebb0:	str	wzr, [sp, #164]
  43ebb4:	cbz	x22, 43ebbc <_obstack_memory_used@@Base+0x6f3c>
  43ebb8:	add	x22, x22, #0x8
  43ebbc:	ldr	x0, [x28, #8]
  43ebc0:	cbnz	x0, 43ec00 <_obstack_memory_used@@Base+0x6f80>
  43ebc4:	ldr	x0, [x19]
  43ebc8:	str	xzr, [x0, x24]
  43ebcc:	cbz	x22, 43ebf8 <_obstack_memory_used@@Base+0x6f78>
  43ebd0:	ldr	x0, [x20, #184]
  43ebd4:	ldr	x0, [x0, x24]
  43ebd8:	ldrb	w0, [x0, #104]
  43ebdc:	tbz	w0, #6, 43ebf8 <_obstack_memory_used@@Base+0x6f78>
  43ebe0:	mov	x1, x21
  43ebe4:	mov	x0, x20
  43ebe8:	bl	4382e8 <_obstack_memory_used@@Base+0x668>
  43ebec:	str	x0, [sp, #104]
  43ebf0:	cmn	x0, #0x1
  43ebf4:	b.ne	43eed0 <_obstack_memory_used@@Base+0x7250>  // b.any
  43ebf8:	mov	w1, #0x0                   	// #0
  43ebfc:	b	43ec24 <_obstack_memory_used@@Base+0x6fa4>
  43ec00:	cbnz	x22, 43ec44 <_obstack_memory_used@@Base+0x6fc4>
  43ec04:	ldr	x25, [x19]
  43ec08:	mov	x1, x23
  43ec0c:	mov	x2, x28
  43ec10:	add	x0, sp, #0xa4
  43ec14:	bl	43da40 <_obstack_memory_used@@Base+0x5dc0>
  43ec18:	ldr	w1, [sp, #164]
  43ec1c:	str	x0, [x25, x24]
  43ec20:	cbz	w1, 43ebcc <_obstack_memory_used@@Base+0x6f4c>
  43ec24:	mov	w0, w1
  43ec28:	ldp	x19, x20, [sp, #16]
  43ec2c:	ldp	x21, x22, [sp, #32]
  43ec30:	ldp	x23, x24, [sp, #48]
  43ec34:	ldp	x25, x26, [sp, #64]
  43ec38:	ldp	x27, x28, [sp, #80]
  43ec3c:	ldp	x29, x30, [sp], #224
  43ec40:	ret
  43ec44:	mov	x2, x28
  43ec48:	mov	x1, x23
  43ec4c:	add	x0, sp, #0xa8
  43ec50:	str	wzr, [sp, #168]
  43ec54:	bl	43da40 <_obstack_memory_used@@Base+0x5dc0>
  43ec58:	mov	x25, x0
  43ec5c:	ldr	w0, [sp, #168]
  43ec60:	cbnz	w0, 43ec7c <_obstack_memory_used@@Base+0x6ffc>
  43ec64:	ldr	x26, [x25, #56]!
  43ec68:	cbz	x26, 43ecb0 <_obstack_memory_used@@Base+0x7030>
  43ec6c:	mov	x2, x25
  43ec70:	mov	x1, x22
  43ec74:	mov	x0, x28
  43ec78:	bl	43a304 <_obstack_memory_used@@Base+0x2684>
  43ec7c:	str	w0, [sp, #164]
  43ec80:	cbnz	w0, 43f0fc <_obstack_memory_used@@Base+0x747c>
  43ec84:	ldr	x0, [x19, #40]
  43ec88:	cbz	x0, 43ec04 <_obstack_memory_used@@Base+0x6f84>
  43ec8c:	ldr	x0, [x20, #216]
  43ec90:	mov	x25, #0x0                   	// #0
  43ec94:	str	x0, [sp, #104]
  43ec98:	ldr	x1, [x19, #40]
  43ec9c:	add	x0, x19, #0x20
  43eca0:	cmp	x25, x1
  43eca4:	b.lt	43ed0c <_obstack_memory_used@@Base+0x708c>  // b.tstop
  43eca8:	mov	w1, #0x0                   	// #0
  43ecac:	b	43edec <_obstack_memory_used@@Base+0x716c>
  43ecb0:	ldr	x1, [x28, #8]
  43ecb4:	mov	x0, x25
  43ecb8:	bl	438684 <_obstack_memory_used@@Base+0xa04>
  43ecbc:	str	w0, [sp, #168]
  43ecc0:	cbnz	w0, 43ecfc <_obstack_memory_used@@Base+0x707c>
  43ecc4:	mov	x27, #0x18                  	// #24
  43ecc8:	ldr	x0, [x28, #8]
  43eccc:	cmp	x26, x0
  43ecd0:	b.ge	43ec6c <_obstack_memory_used@@Base+0x6fec>  // b.tcont
  43ecd4:	ldr	x0, [x28, #16]
  43ecd8:	ldr	x1, [x0, x26, lsl #3]
  43ecdc:	ldr	x0, [x23, #56]
  43ece0:	madd	x1, x1, x27, x0
  43ece4:	mov	x0, x25
  43ece8:	bl	43a198 <_obstack_memory_used@@Base+0x2518>
  43ecec:	str	w0, [sp, #168]
  43ecf0:	cbnz	w0, 43ed04 <_obstack_memory_used@@Base+0x7084>
  43ecf4:	add	x26, x26, #0x1
  43ecf8:	b	43ecc8 <_obstack_memory_used@@Base+0x7048>
  43ecfc:	mov	w1, #0xc                   	// #12
  43ed00:	b	43ec24 <_obstack_memory_used@@Base+0x6fa4>
  43ed04:	mov	w0, #0xc                   	// #12
  43ed08:	b	43ec7c <_obstack_memory_used@@Base+0x6ffc>
  43ed0c:	ldr	x0, [x0, #16]
  43ed10:	mov	x1, #0x28                  	// #40
  43ed14:	ldr	x0, [x0, x25, lsl #3]
  43ed18:	mul	x0, x0, x1
  43ed1c:	ldr	x1, [sp, #104]
  43ed20:	add	x1, x1, x0
  43ed24:	ldr	x2, [x1, #16]
  43ed28:	cmp	x21, x2
  43ed2c:	b.gt	43ed38 <_obstack_memory_used@@Base+0x70b8>
  43ed30:	add	x25, x25, #0x1
  43ed34:	b	43ec98 <_obstack_memory_used@@Base+0x7018>
  43ed38:	ldr	x2, [x1, #8]
  43ed3c:	cmp	x21, x2
  43ed40:	b.gt	43ed30 <_obstack_memory_used@@Base+0x70b0>
  43ed44:	ldr	x3, [sp, #104]
  43ed48:	ldr	x2, [x23]
  43ed4c:	ldr	x0, [x3, x0]
  43ed50:	lsl	x0, x0, #4
  43ed54:	ldr	x7, [x2, x0]
  43ed58:	ldr	x0, [x1, #24]
  43ed5c:	cmp	x21, x0
  43ed60:	b.ne	43eec8 <_obstack_memory_used@@Base+0x7248>  // b.any
  43ed64:	ldr	x9, [x28, #8]
  43ed68:	mov	x26, #0xffffffffffffffff    	// #-1
  43ed6c:	mov	x1, x26
  43ed70:	mov	x0, #0x0                   	// #0
  43ed74:	cmp	x0, x9
  43ed78:	b.lt	43ed8c <_obstack_memory_used@@Base+0x710c>  // b.tstop
  43ed7c:	tbz	x1, #63, 43edd4 <_obstack_memory_used@@Base+0x7154>
  43ed80:	tbnz	x26, #63, 43ed30 <_obstack_memory_used@@Base+0x70b0>
  43ed84:	mov	x27, #0x0                   	// #0
  43ed88:	b	43ee50 <_obstack_memory_used@@Base+0x71d0>
  43ed8c:	ldr	x3, [x28, #16]
  43ed90:	ldr	x3, [x3, x0, lsl #3]
  43ed94:	add	x8, x2, x3, lsl #4
  43ed98:	lsl	x5, x3, #4
  43ed9c:	ldrb	w8, [x8, #8]
  43eda0:	cmp	w8, #0x8
  43eda4:	b.ne	43edbc <_obstack_memory_used@@Base+0x713c>  // b.any
  43eda8:	ldr	x5, [x2, x5]
  43edac:	cmp	x7, x5
  43edb0:	csel	x1, x1, x3, ne  // ne = any
  43edb4:	add	x0, x0, #0x1
  43edb8:	b	43ed74 <_obstack_memory_used@@Base+0x70f4>
  43edbc:	cmp	w8, #0x9
  43edc0:	b.ne	43edb4 <_obstack_memory_used@@Base+0x7134>  // b.any
  43edc4:	ldr	x5, [x2, x5]
  43edc8:	cmp	x7, x5
  43edcc:	csel	x26, x26, x3, ne  // ne = any
  43edd0:	b	43edb4 <_obstack_memory_used@@Base+0x7134>
  43edd4:	mov	x3, x22
  43edd8:	mov	x2, x28
  43eddc:	mov	x0, x23
  43ede0:	bl	43b464 <_obstack_memory_used@@Base+0x37e4>
  43ede4:	mov	w1, w0
  43ede8:	cbz	w0, 43ed80 <_obstack_memory_used@@Base+0x7100>
  43edec:	str	w1, [sp, #164]
  43edf0:	cbz	w1, 43ec04 <_obstack_memory_used@@Base+0x6f84>
  43edf4:	b	43ec24 <_obstack_memory_used@@Base+0x6fa4>
  43edf8:	ldr	x0, [x28, #16]
  43edfc:	mov	x1, x26
  43ee00:	ldr	x7, [x0, x27, lsl #3]
  43ee04:	mov	x0, #0x18                  	// #24
  43ee08:	mul	x8, x7, x0
  43ee0c:	ldr	x0, [x23, #56]
  43ee10:	add	x0, x0, x8
  43ee14:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43ee18:	cbnz	x0, 43ee4c <_obstack_memory_used@@Base+0x71cc>
  43ee1c:	ldr	x0, [x23, #48]
  43ee20:	add	x0, x0, x8
  43ee24:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43ee28:	cbnz	x0, 43ee4c <_obstack_memory_used@@Base+0x71cc>
  43ee2c:	mov	x1, x7
  43ee30:	mov	x3, x22
  43ee34:	mov	x2, x28
  43ee38:	mov	x0, x23
  43ee3c:	bl	43b464 <_obstack_memory_used@@Base+0x37e4>
  43ee40:	mov	w1, w0
  43ee44:	cbnz	w0, 43edec <_obstack_memory_used@@Base+0x716c>
  43ee48:	sub	x27, x27, #0x1
  43ee4c:	add	x27, x27, #0x1
  43ee50:	ldr	x0, [x28, #8]
  43ee54:	cmp	x27, x0
  43ee58:	b.lt	43edf8 <_obstack_memory_used@@Base+0x7178>  // b.tstop
  43ee5c:	b	43ed30 <_obstack_memory_used@@Base+0x70b0>
  43ee60:	ldr	x0, [x28, #16]
  43ee64:	ldr	x2, [x23]
  43ee68:	ldr	x1, [x0, x5, lsl #3]
  43ee6c:	add	x0, x2, x1, lsl #4
  43ee70:	lsl	x3, x1, #4
  43ee74:	ldrb	w0, [x0, #8]
  43ee78:	sub	w0, w0, #0x8
  43ee7c:	cmp	w0, #0x1
  43ee80:	b.ls	43ee98 <_obstack_memory_used@@Base+0x7218>  // b.plast
  43ee84:	add	x5, x5, #0x1
  43ee88:	ldr	x0, [x28, #8]
  43ee8c:	cmp	x5, x0
  43ee90:	b.lt	43ee60 <_obstack_memory_used@@Base+0x71e0>  // b.tstop
  43ee94:	b	43ed30 <_obstack_memory_used@@Base+0x70b0>
  43ee98:	ldr	x0, [x2, x3]
  43ee9c:	cmp	x7, x0
  43eea0:	b.ne	43ee84 <_obstack_memory_used@@Base+0x7204>  // b.any
  43eea4:	mov	x3, x22
  43eea8:	mov	x2, x28
  43eeac:	mov	x0, x23
  43eeb0:	stp	x7, x5, [sp, #112]
  43eeb4:	bl	43b464 <_obstack_memory_used@@Base+0x37e4>
  43eeb8:	mov	w1, w0
  43eebc:	ldp	x7, x5, [sp, #112]
  43eec0:	cbz	w0, 43ee84 <_obstack_memory_used@@Base+0x7204>
  43eec4:	b	43edec <_obstack_memory_used@@Base+0x716c>
  43eec8:	mov	x5, #0x0                   	// #0
  43eecc:	b	43ee88 <_obstack_memory_used@@Base+0x7208>
  43eed0:	ldr	x1, [sp, #104]
  43eed4:	mov	x0, #0x28                  	// #40
  43eed8:	ldr	x27, [x20, #152]
  43eedc:	add	x28, sp, #0xc8
  43eee0:	mul	x0, x1, x0
  43eee4:	mov	x26, #0x0                   	// #0
  43eee8:	str	x0, [sp, #120]
  43eeec:	add	x0, x19, #0x20
  43eef0:	str	x0, [sp, #112]
  43eef4:	str	xzr, [sp, #168]
  43eef8:	ldr	x0, [x22, #8]
  43eefc:	cmp	x26, x0
  43ef00:	b.lt	43ef0c <_obstack_memory_used@@Base+0x728c>  // b.tstop
  43ef04:	mov	w1, #0x0                   	// #0
  43ef08:	b	43f014 <_obstack_memory_used@@Base+0x7394>
  43ef0c:	ldr	x0, [x22, #16]
  43ef10:	ldr	x1, [x19, #16]
  43ef14:	ldr	x23, [x0, x26, lsl #3]
  43ef18:	ldr	x0, [x27]
  43ef1c:	cmp	x23, x1
  43ef20:	add	x0, x0, x23, lsl #4
  43ef24:	ldrb	w0, [x0, #8]
  43ef28:	b.ne	43ef40 <_obstack_memory_used@@Base+0x72c0>  // b.any
  43ef2c:	ldr	x1, [x19, #24]
  43ef30:	cmp	x21, x1
  43ef34:	b.ne	43ef40 <_obstack_memory_used@@Base+0x72c0>  // b.any
  43ef38:	add	x26, x26, #0x1
  43ef3c:	b	43eef8 <_obstack_memory_used@@Base+0x7278>
  43ef40:	cmp	w0, #0x4
  43ef44:	b.ne	43ef38 <_obstack_memory_used@@Base+0x72b8>  // b.any
  43ef48:	ldr	x0, [sp, #120]
  43ef4c:	ldr	x6, [x20, #216]
  43ef50:	ldr	x25, [sp, #104]
  43ef54:	add	x6, x6, x0
  43ef58:	mov	x0, #0x18                  	// #24
  43ef5c:	mul	x0, x23, x0
  43ef60:	str	x0, [sp, #136]
  43ef64:	lsl	x0, x23, #3
  43ef68:	str	x0, [sp, #128]
  43ef6c:	add	x0, x21, #0x1
  43ef70:	str	x0, [sp, #152]
  43ef74:	ldr	x0, [x6]
  43ef78:	cmp	x23, x0
  43ef7c:	b.ne	43f0c8 <_obstack_memory_used@@Base+0x7448>  // b.any
  43ef80:	ldp	x1, x0, [x6, #16]
  43ef84:	sub	x0, x0, x1
  43ef88:	add	x7, x21, x0
  43ef8c:	cbz	x0, 43f030 <_obstack_memory_used@@Base+0x73b0>
  43ef90:	ldr	x0, [x27, #24]
  43ef94:	ldr	x1, [sp, #128]
  43ef98:	ldr	x1, [x0, x1]
  43ef9c:	ldr	x0, [x19, #24]
  43efa0:	cmp	x7, x0
  43efa4:	b.gt	43f0c8 <_obstack_memory_used@@Base+0x7448>
  43efa8:	ldr	x0, [x19]
  43efac:	ldr	x0, [x0, x7, lsl #3]
  43efb0:	cbz	x0, 43f0c8 <_obstack_memory_used@@Base+0x7448>
  43efb4:	add	x0, x0, #0x8
  43efb8:	str	x6, [sp, #144]
  43efbc:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43efc0:	ldr	x6, [sp, #144]
  43efc4:	cbz	x0, 43f0c8 <_obstack_memory_used@@Base+0x7448>
  43efc8:	mov	x4, x1
  43efcc:	mov	x5, x7
  43efd0:	ldr	x1, [sp, #112]
  43efd4:	mov	x3, x21
  43efd8:	mov	x2, x23
  43efdc:	mov	x0, x20
  43efe0:	bl	43835c <_obstack_memory_used@@Base+0x6dc>
  43efe4:	tst	w0, #0xff
  43efe8:	ldr	x6, [sp, #144]
  43efec:	b.ne	43f0c8 <_obstack_memory_used@@Base+0x7448>  // b.any
  43eff0:	ldr	x0, [sp, #168]
  43eff4:	cbz	x0, 43f048 <_obstack_memory_used@@Base+0x73c8>
  43eff8:	mov	x1, x25
  43effc:	mov	x0, x28
  43f000:	stp	x23, x21, [sp, #184]
  43f004:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43f008:	tst	w0, #0xff
  43f00c:	b.ne	43f070 <_obstack_memory_used@@Base+0x73f0>  // b.any
  43f010:	mov	w1, #0xc                   	// #12
  43f014:	ldr	x0, [sp, #168]
  43f018:	cbz	x0, 43ec24 <_obstack_memory_used@@Base+0x6fa4>
  43f01c:	ldr	x0, [sp, #216]
  43f020:	str	w1, [sp, #104]
  43f024:	bl	404ae0 <free@plt>
  43f028:	ldr	w1, [sp, #104]
  43f02c:	b	43ec24 <_obstack_memory_used@@Base+0x6fa4>
  43f030:	ldr	x0, [x27, #40]
  43f034:	ldr	x1, [sp, #136]
  43f038:	add	x0, x0, x1
  43f03c:	ldr	x0, [x0, #16]
  43f040:	ldr	x1, [x0]
  43f044:	b	43ef9c <_obstack_memory_used@@Base+0x731c>
  43f048:	mov	x1, x19
  43f04c:	mov	x2, #0x38                  	// #56
  43f050:	add	x0, sp, #0xa8
  43f054:	bl	404200 <memcpy@plt>
  43f058:	ldr	x1, [sp, #112]
  43f05c:	mov	x0, x28
  43f060:	bl	43b040 <_obstack_memory_used@@Base+0x33c0>
  43f064:	mov	w1, w0
  43f068:	cbz	w0, 43eff8 <_obstack_memory_used@@Base+0x7378>
  43f06c:	b	43f014 <_obstack_memory_used@@Base+0x7394>
  43f070:	ldr	x0, [sp, #168]
  43f074:	add	x1, sp, #0xa8
  43f078:	ldr	x0, [x0, x24]
  43f07c:	str	x0, [sp, #144]
  43f080:	mov	x0, x20
  43f084:	bl	43f104 <_obstack_memory_used@@Base+0x7484>
  43f088:	mov	w1, w0
  43f08c:	cbnz	w0, 43f014 <_obstack_memory_used@@Base+0x7394>
  43f090:	ldr	x1, [x19, #8]
  43f094:	cbnz	x1, 43f0e0 <_obstack_memory_used@@Base+0x7460>
  43f098:	ldr	x0, [sp, #168]
  43f09c:	ldr	x1, [sp, #144]
  43f0a0:	str	x1, [x0, x24]
  43f0a4:	mov	x1, x25
  43f0a8:	mov	x0, x28
  43f0ac:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43f0b0:	sub	x1, x0, #0x1
  43f0b4:	mov	x0, x28
  43f0b8:	bl	43a068 <_obstack_memory_used@@Base+0x23e8>
  43f0bc:	ldr	x0, [x20, #216]
  43f0c0:	mov	x6, #0x28                  	// #40
  43f0c4:	madd	x6, x25, x6, x0
  43f0c8:	ldrb	w0, [x6, #32]
  43f0cc:	add	x25, x25, #0x1
  43f0d0:	add	x1, x6, #0x28
  43f0d4:	cbz	w0, 43ef38 <_obstack_memory_used@@Base+0x72b8>
  43f0d8:	mov	x6, x1
  43f0dc:	b	43ef74 <_obstack_memory_used@@Base+0x72f4>
  43f0e0:	ldr	x3, [sp, #152]
  43f0e4:	mov	x0, x27
  43f0e8:	ldr	x2, [sp, #168]
  43f0ec:	bl	43ddf4 <_obstack_memory_used@@Base+0x6174>
  43f0f0:	mov	w1, w0
  43f0f4:	cbz	w0, 43f098 <_obstack_memory_used@@Base+0x7418>
  43f0f8:	b	43f014 <_obstack_memory_used@@Base+0x7394>
  43f0fc:	mov	w1, w0
  43f100:	b	43ec24 <_obstack_memory_used@@Base+0x6fa4>
  43f104:	stp	x29, x30, [sp, #-160]!
  43f108:	mov	x29, sp
  43f10c:	stp	x19, x20, [sp, #16]
  43f110:	mov	x19, x1
  43f114:	ldr	x20, [x1, #24]
  43f118:	stp	x21, x22, [sp, #32]
  43f11c:	mov	x21, x0
  43f120:	ldr	x1, [x1, #16]
  43f124:	add	x0, sp, #0x88
  43f128:	stp	x23, x24, [sp, #48]
  43f12c:	stp	x25, x26, [sp, #64]
  43f130:	stp	x27, x28, [sp, #80]
  43f134:	bl	438638 <_obstack_memory_used@@Base+0x9b8>
  43f138:	mov	w22, w0
  43f13c:	cbnz	w0, 43f1a4 <_obstack_memory_used@@Base+0x7524>
  43f140:	add	x3, sp, #0x88
  43f144:	mov	x2, x20
  43f148:	mov	x1, x19
  43f14c:	mov	x0, x21
  43f150:	bl	43eb74 <_obstack_memory_used@@Base+0x6ef4>
  43f154:	mov	w22, w0
  43f158:	cbnz	w0, 43f19c <_obstack_memory_used@@Base+0x751c>
  43f15c:	add	x0, x19, #0x20
  43f160:	mov	w26, #0x0                   	// #0
  43f164:	str	x0, [sp, #104]
  43f168:	cmp	x20, #0x0
  43f16c:	b.le	43f19c <_obstack_memory_used@@Base+0x751c>
  43f170:	ldr	x0, [x19]
  43f174:	lsl	x24, x20, #3
  43f178:	ldr	x1, [x0, x24]
  43f17c:	cmp	x1, #0x0
  43f180:	ldr	w1, [x21, #224]
  43f184:	csinc	w26, wzr, w26, ne  // ne = any
  43f188:	cmp	w1, w26
  43f18c:	b.ge	43f1c4 <_obstack_memory_used@@Base+0x7544>  // b.tcont
  43f190:	mov	x2, x24
  43f194:	mov	w1, #0x0                   	// #0
  43f198:	bl	404700 <memset@plt>
  43f19c:	ldr	x0, [sp, #152]
  43f1a0:	bl	404ae0 <free@plt>
  43f1a4:	mov	w0, w22
  43f1a8:	ldp	x19, x20, [sp, #16]
  43f1ac:	ldp	x21, x22, [sp, #32]
  43f1b0:	ldp	x23, x24, [sp, #48]
  43f1b4:	ldp	x25, x26, [sp, #64]
  43f1b8:	ldp	x27, x28, [sp, #80]
  43f1bc:	ldp	x29, x30, [sp], #160
  43f1c0:	ret
  43f1c4:	ldr	x0, [x21, #184]
  43f1c8:	sub	x20, x20, #0x1
  43f1cc:	add	x0, x0, x24
  43f1d0:	ldur	x27, [x0, #-8]
  43f1d4:	str	xzr, [sp, #144]
  43f1d8:	cbnz	x27, 43f1fc <_obstack_memory_used@@Base+0x757c>
  43f1dc:	add	x3, sp, #0x88
  43f1e0:	mov	x2, x20
  43f1e4:	mov	x1, x19
  43f1e8:	mov	x0, x21
  43f1ec:	bl	43eb74 <_obstack_memory_used@@Base+0x6ef4>
  43f1f0:	cbz	w0, 43f168 <_obstack_memory_used@@Base+0x74e8>
  43f1f4:	mov	w22, w0
  43f1f8:	b	43f19c <_obstack_memory_used@@Base+0x751c>
  43f1fc:	ldr	x25, [x21, #152]
  43f200:	mov	x23, #0x0                   	// #0
  43f204:	ldr	x1, [x27, #40]
  43f208:	add	x0, x27, #0x20
  43f20c:	cmp	x23, x1
  43f210:	b.ge	43f1dc <_obstack_memory_used@@Base+0x755c>  // b.tcont
  43f214:	ldr	x0, [x0, #16]
  43f218:	ldr	x28, [x0, x23, lsl #3]
  43f21c:	lsl	x0, x28, #4
  43f220:	str	x0, [sp, #112]
  43f224:	ldr	x0, [x25]
  43f228:	add	x0, x0, x28, lsl #4
  43f22c:	ldrb	w0, [x0, #10]
  43f230:	tbnz	w0, #4, 43f25c <_obstack_memory_used@@Base+0x75dc>
  43f234:	ldr	x1, [x25]
  43f238:	lsl	x0, x28, #4
  43f23c:	mov	x2, x20
  43f240:	add	x1, x1, x0
  43f244:	mov	x0, x21
  43f248:	bl	43d414 <_obstack_memory_used@@Base+0x5794>
  43f24c:	tst	w0, #0xff
  43f250:	b.ne	43f2e8 <_obstack_memory_used@@Base+0x7668>  // b.any
  43f254:	add	x23, x23, #0x1
  43f258:	b	43f204 <_obstack_memory_used@@Base+0x7584>
  43f25c:	ldr	x7, [x19, #24]
  43f260:	mov	x3, x20
  43f264:	ldr	x5, [x21, #152]
  43f268:	mov	x2, x21
  43f26c:	mov	x1, x28
  43f270:	stp	x5, x7, [sp, #112]
  43f274:	mov	x0, x5
  43f278:	bl	439de8 <_obstack_memory_used@@Base+0x2168>
  43f27c:	mov	w6, w0
  43f280:	cmp	w0, #0x0
  43f284:	b.le	43f2e0 <_obstack_memory_used@@Base+0x7660>
  43f288:	ldr	x7, [sp, #120]
  43f28c:	add	x0, x20, w0, sxtw
  43f290:	cmp	x7, x0
  43f294:	b.lt	43f2bc <_obstack_memory_used@@Base+0x763c>  // b.tstop
  43f298:	ldr	x1, [x19]
  43f29c:	ldr	x0, [x1, x0, lsl #3]
  43f2a0:	cbz	x0, 43f234 <_obstack_memory_used@@Base+0x75b4>
  43f2a4:	ldr	x5, [sp, #112]
  43f2a8:	add	x0, x0, #0x8
  43f2ac:	ldr	x1, [x5, #24]
  43f2b0:	ldr	x1, [x1, x28, lsl #3]
  43f2b4:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43f2b8:	cbz	x0, 43f234 <_obstack_memory_used@@Base+0x75b4>
  43f2bc:	ldr	x0, [x19, #40]
  43f2c0:	cbnz	x0, 43f310 <_obstack_memory_used@@Base+0x7690>
  43f2c4:	mov	x1, x28
  43f2c8:	add	x0, sp, #0x88
  43f2cc:	bl	43a958 <_obstack_memory_used@@Base+0x2cd8>
  43f2d0:	tst	w0, #0xff
  43f2d4:	b.ne	43f254 <_obstack_memory_used@@Base+0x75d4>  // b.any
  43f2d8:	mov	w22, #0xc                   	// #12
  43f2dc:	b	43f19c <_obstack_memory_used@@Base+0x751c>
  43f2e0:	b.eq	43f234 <_obstack_memory_used@@Base+0x75b4>  // b.none
  43f2e4:	b	43f2bc <_obstack_memory_used@@Base+0x763c>
  43f2e8:	ldr	x0, [x19]
  43f2ec:	ldr	x0, [x0, x24]
  43f2f0:	cbz	x0, 43f254 <_obstack_memory_used@@Base+0x75d4>
  43f2f4:	ldr	x1, [x25, #24]
  43f2f8:	add	x0, x0, #0x8
  43f2fc:	ldr	x1, [x1, x28, lsl #3]
  43f300:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  43f304:	cbz	x0, 43f254 <_obstack_memory_used@@Base+0x75d4>
  43f308:	mov	w6, #0x1                   	// #1
  43f30c:	b	43f2bc <_obstack_memory_used@@Base+0x763c>
  43f310:	ldr	x0, [x25, #24]
  43f314:	mov	x5, x20
  43f318:	ldr	x1, [sp, #104]
  43f31c:	mov	x4, x28
  43f320:	ldr	x2, [x0, x28, lsl #3]
  43f324:	add	x3, x20, w6, sxtw
  43f328:	mov	x0, x21
  43f32c:	bl	43835c <_obstack_memory_used@@Base+0x6dc>
  43f330:	tst	w0, #0xff
  43f334:	b.eq	43f2c4 <_obstack_memory_used@@Base+0x7644>  // b.none
  43f338:	b	43f254 <_obstack_memory_used@@Base+0x75d4>
  43f33c:	sub	sp, sp, #0x250
  43f340:	stp	x29, x30, [sp]
  43f344:	mov	x29, sp
  43f348:	stp	x23, x24, [sp, #48]
  43f34c:	mov	x24, x0
  43f350:	ldr	w0, [sp, #592]
  43f354:	mov	x23, x6
  43f358:	stp	x19, x20, [sp, #16]
  43f35c:	mov	x20, x5
  43f360:	stp	x21, x22, [sp, #32]
  43f364:	mov	x21, x3
  43f368:	stp	x25, x26, [sp, #64]
  43f36c:	mov	x26, x2
  43f370:	mov	x2, #0x100                 	// #256
  43f374:	stp	x27, x28, [sp, #80]
  43f378:	mov	x27, x4
  43f37c:	str	x7, [sp, #112]
  43f380:	str	x1, [sp, #128]
  43f384:	mov	w1, #0x0                   	// #0
  43f388:	str	w0, [sp, #184]
  43f38c:	add	x0, sp, #0x150
  43f390:	ldr	x22, [x24]
  43f394:	bl	404700 <memset@plt>
  43f398:	ldr	x25, [x24, #32]
  43f39c:	str	x22, [sp, #488]
  43f3a0:	cbz	x25, 43f3bc <_obstack_memory_used@@Base+0x773c>
  43f3a4:	ldrb	w0, [x24, #56]
  43f3a8:	tbz	w0, #3, 43f6dc <_obstack_memory_used@@Base+0x7a5c>
  43f3ac:	cmp	x21, x27
  43f3b0:	b.eq	43f6dc <_obstack_memory_used@@Base+0x7a5c>  // b.none
  43f3b4:	tst	x0, #0x1
  43f3b8:	csel	x25, x25, xzr, eq  // eq = none
  43f3bc:	ldr	x1, [x24, #48]
  43f3c0:	sub	x0, x23, #0x1
  43f3c4:	sub	x0, x0, x1
  43f3c8:	cmp	x1, x23
  43f3cc:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
  43f3d0:	str	x0, [sp, #208]
  43f3d4:	ldr	x0, [x24, #16]
  43f3d8:	cbz	x0, 440228 <_obstack_memory_used@@Base+0x85a8>
  43f3dc:	ldr	x2, [x22, #72]
  43f3e0:	cbz	x2, 440228 <_obstack_memory_used@@Base+0x85a8>
  43f3e4:	ldr	x1, [x22, #80]
  43f3e8:	cbz	x1, 440228 <_obstack_memory_used@@Base+0x85a8>
  43f3ec:	ldr	x0, [x22, #88]
  43f3f0:	cbz	x0, 440228 <_obstack_memory_used@@Base+0x85a8>
  43f3f4:	ldr	x3, [x22, #96]
  43f3f8:	cbz	x3, 440228 <_obstack_memory_used@@Base+0x85a8>
  43f3fc:	ldr	x2, [x2, #16]
  43f400:	cbnz	x2, 43f430 <_obstack_memory_used@@Base+0x77b0>
  43f404:	ldr	x1, [x1, #16]
  43f408:	cbnz	x1, 43f430 <_obstack_memory_used@@Base+0x77b0>
  43f40c:	ldr	x0, [x0, #16]
  43f410:	cbz	x0, 43f41c <_obstack_memory_used@@Base+0x779c>
  43f414:	ldrsb	w0, [x24, #56]
  43f418:	tbnz	w0, #31, 43f430 <_obstack_memory_used@@Base+0x77b0>
  43f41c:	cmp	x21, #0x0
  43f420:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  43f424:	b.ne	440228 <_obstack_memory_used@@Base+0x85a8>  // b.any
  43f428:	mov	x27, #0x0                   	// #0
  43f42c:	mov	x21, #0x0                   	// #0
  43f430:	ldr	x0, [sp, #208]
  43f434:	subs	x23, x23, x0
  43f438:	b.ne	43f6e4 <_obstack_memory_used@@Base+0x7a64>  // b.any
  43f43c:	ldr	x0, [x22, #152]
  43f440:	cmp	x0, #0x0
  43f444:	cset	w0, ne  // ne = any
  43f448:	ldr	x1, [x22, #16]
  43f44c:	str	w0, [sp, #164]
  43f450:	ldr	w2, [x22, #180]
  43f454:	add	x1, x1, #0x1
  43f458:	str	w2, [sp, #480]
  43f45c:	ldr	x0, [x24, #40]
  43f460:	sxtw	x3, w2
  43f464:	cmp	x1, w2, sxtw
  43f468:	str	x0, [sp, #104]
  43f46c:	csel	x1, x1, x3, ge  // ge = tcont
  43f470:	add	x3, x26, #0x1
  43f474:	ldr	x0, [x24, #24]
  43f478:	cmp	x1, x3
  43f47c:	csel	x1, x1, x3, le
  43f480:	stp	x26, x26, [sp, #416]
  43f484:	ldr	x3, [sp, #128]
  43f488:	str	x3, [sp, #336]
  43f48c:	ldr	x3, [sp, #104]
  43f490:	str	x3, [sp, #456]
  43f494:	and	x3, x0, #0x400000
  43f498:	ubfx	w0, w0, #22, #1
  43f49c:	strb	w0, [sp, #472]
  43f4a0:	ldr	x0, [sp, #104]
  43f4a4:	stp	x26, x26, [sp, #432]
  43f4a8:	orr	x0, x0, x3
  43f4ac:	cmp	x0, #0x0
  43f4b0:	cset	w0, ne  // ne = any
  43f4b4:	strb	w0, [sp, #475]
  43f4b8:	ldrb	w0, [x22, #176]
  43f4bc:	ubfx	x2, x0, #2, #1
  43f4c0:	ubfx	x0, x0, #3, #1
  43f4c4:	strb	w2, [sp, #473]
  43f4c8:	strb	w0, [sp, #474]
  43f4cc:	add	x0, sp, #0x150
  43f4d0:	bl	43853c <_obstack_memory_used@@Base+0x8bc>
  43f4d4:	cbnz	w0, 43ff58 <_obstack_memory_used@@Base+0x82d8>
  43f4d8:	add	x0, x22, #0xb8
  43f4dc:	str	x0, [sp, #464]
  43f4e0:	ldrb	w0, [x22, #176]
  43f4e4:	ldrb	w1, [sp, #475]
  43f4e8:	ldr	x2, [sp, #128]
  43f4ec:	ubfx	x0, x0, #4, #1
  43f4f0:	strb	w0, [sp, #478]
  43f4f4:	cmp	w1, #0x0
  43f4f8:	ldr	x0, [sp, #344]
  43f4fc:	csel	x0, x0, x2, ne  // ne = any
  43f500:	str	x0, [sp, #344]
  43f504:	cbnz	w1, 43f6ec <_obstack_memory_used@@Base+0x7a6c>
  43f508:	ldr	w0, [x22, #180]
  43f50c:	cmp	w0, #0x1
  43f510:	csel	x0, x26, xzr, le
  43f514:	stp	x0, x0, [sp, #384]
  43f518:	ldrb	w0, [x24, #56]
  43f51c:	ldr	x28, [x22, #152]
  43f520:	stp	x20, x20, [sp, #432]
  43f524:	ubfx	x0, x0, #7, #1
  43f528:	strb	w0, [sp, #477]
  43f52c:	ldr	w0, [sp, #184]
  43f530:	lsl	x19, x28, #1
  43f534:	str	w0, [sp, #496]
  43f538:	cmp	xzr, x28, lsl #1
  43f53c:	mov	x0, #0xffffffffffffffff    	// #-1
  43f540:	str	x0, [sp, #504]
  43f544:	b.lt	43f6f4 <_obstack_memory_used@@Base+0x7a74>  // b.tstop
  43f548:	mov	w0, #0x1                   	// #1
  43f54c:	str	x19, [sp, #544]
  43f550:	str	w0, [sp, #560]
  43f554:	cmp	x23, #0x1
  43f558:	str	x19, [sp, #576]
  43f55c:	b.hi	43f568 <_obstack_memory_used@@Base+0x78e8>  // b.pmore
  43f560:	ldrb	w0, [x22, #176]
  43f564:	tbz	w0, #1, 43f738 <_obstack_memory_used@@Base+0x7ab8>
  43f568:	ldr	x0, [sp, #400]
  43f56c:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  43f570:	cmp	x0, x1
  43f574:	b.hi	43f704 <_obstack_memory_used@@Base+0x7a84>  // b.pmore
  43f578:	add	x0, x0, #0x1
  43f57c:	lsl	x0, x0, #3
  43f580:	bl	4045f0 <malloc@plt>
  43f584:	str	x0, [sp, #520]
  43f588:	cbz	x0, 43f704 <_obstack_memory_used@@Base+0x7a84>
  43f58c:	ldr	x1, [sp, #184]
  43f590:	mov	w0, #0x4                   	// #4
  43f594:	str	x21, [sp, #272]
  43f598:	tst	x1, #0x1
  43f59c:	mov	w1, #0x6                   	// #6
  43f5a0:	csel	w1, w0, w1, ne  // ne = any
  43f5a4:	cmp	x21, x27
  43f5a8:	str	w1, [sp, #448]
  43f5ac:	mov	w1, #0x1                   	// #1
  43f5b0:	cneg	w1, w1, gt
  43f5b4:	str	w1, [sp, #220]
  43f5b8:	csel	x1, x21, x27, le
  43f5bc:	str	x1, [sp, #192]
  43f5c0:	csel	x1, x21, x27, ge  // ge = tcont
  43f5c4:	str	x1, [sp, #120]
  43f5c8:	ldr	w1, [x22, #180]
  43f5cc:	str	w1, [sp, #216]
  43f5d0:	cbz	x25, 43f748 <_obstack_memory_used@@Base+0x7ac8>
  43f5d4:	mov	w1, w1
  43f5d8:	cmp	w1, #0x1
  43f5dc:	b.eq	43f5f8 <_obstack_memory_used@@Base+0x7978>  // b.none
  43f5e0:	ldr	x0, [x24, #24]
  43f5e4:	tbnz	w0, #22, 43f740 <_obstack_memory_used@@Base+0x7ac0>
  43f5e8:	ldr	x0, [sp, #104]
  43f5ec:	cmp	x0, #0x0
  43f5f0:	cset	w0, eq  // eq = none
  43f5f4:	lsl	w0, w0, #2
  43f5f8:	ldr	x1, [sp, #104]
  43f5fc:	cmp	x21, x27
  43f600:	cset	w2, le
  43f604:	cmp	x1, #0x0
  43f608:	cset	w1, ne  // ne = any
  43f60c:	orr	w0, w1, w0
  43f610:	orr	w0, w0, w2, lsl #1
  43f614:	cmp	x21, x27
  43f618:	str	w0, [sp, #232]
  43f61c:	add	x0, sp, #0x110
  43f620:	csel	x0, x0, xzr, le
  43f624:	str	x0, [sp, #224]
  43f628:	cmp	x0, #0x0
  43f62c:	cset	w0, ne  // ne = any
  43f630:	str	w0, [sp, #236]
  43f634:	ldr	x1, [sp, #192]
  43f638:	ldr	x0, [sp, #272]
  43f63c:	ldr	x2, [sp, #120]
  43f640:	cmp	x0, x1
  43f644:	cset	w1, lt  // lt = tstop
  43f648:	cmp	x0, x2
  43f64c:	cset	w2, gt
  43f650:	orr	w1, w1, w2
  43f654:	cbnz	w1, 43f7b8 <_obstack_memory_used@@Base+0x7b38>
  43f658:	ldr	w1, [sp, #232]
  43f65c:	sub	w2, w1, #0x4
  43f660:	cmp	w2, #0x4
  43f664:	b.ls	43f750 <_obstack_memory_used@@Base+0x7ad0>  // b.plast
  43f668:	ldrsw	x21, [sp, #220]
  43f66c:	ldr	x20, [sp, #272]
  43f670:	ldr	x0, [sp, #376]
  43f674:	ldr	x1, [sp, #392]
  43f678:	sub	x0, x20, x0
  43f67c:	cmp	x1, x0
  43f680:	b.hi	43f6a4 <_obstack_memory_used@@Base+0x7a24>  // b.pmore
  43f684:	ldr	w2, [sp, #184]
  43f688:	mov	x1, x20
  43f68c:	add	x0, sp, #0x150
  43f690:	bl	43cd0c <_obstack_memory_used@@Base+0x508c>
  43f694:	mov	w19, w0
  43f698:	cbnz	w0, 43f7bc <_obstack_memory_used@@Base+0x7b3c>
  43f69c:	ldr	x0, [sp, #376]
  43f6a0:	sub	x0, x20, x0
  43f6a4:	cmp	x20, x26
  43f6a8:	b.ge	43f8d0 <_obstack_memory_used@@Base+0x7c50>  // b.tcont
  43f6ac:	ldr	x1, [sp, #344]
  43f6b0:	ldrb	w0, [x1, x0]
  43f6b4:	ldrb	w0, [x25, w0, sxtw]
  43f6b8:	cbnz	w0, 43f8e0 <_obstack_memory_used@@Base+0x7c60>
  43f6bc:	ldr	x0, [sp, #192]
  43f6c0:	add	x20, x21, x20
  43f6c4:	str	x20, [sp, #272]
  43f6c8:	cmp	x20, x0
  43f6cc:	ldr	x0, [sp, #120]
  43f6d0:	ccmp	x20, x0, #0x0, ge  // ge = tcont
  43f6d4:	b.le	43f66c <_obstack_memory_used@@Base+0x79ec>
  43f6d8:	b	43f7b8 <_obstack_memory_used@@Base+0x7b38>
  43f6dc:	mov	x25, #0x0                   	// #0
  43f6e0:	b	43f3bc <_obstack_memory_used@@Base+0x773c>
  43f6e4:	mov	w0, #0x1                   	// #1
  43f6e8:	b	43f448 <_obstack_memory_used@@Base+0x77c8>
  43f6ec:	mov	x0, #0x0                   	// #0
  43f6f0:	b	43f514 <_obstack_memory_used@@Base+0x7894>
  43f6f4:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  43f6f8:	movk	x0, #0x666, lsl #48
  43f6fc:	cmp	x19, x0
  43f700:	b.le	43f70c <_obstack_memory_used@@Base+0x7a8c>
  43f704:	mov	w19, #0xc                   	// #12
  43f708:	b	43f7bc <_obstack_memory_used@@Base+0x7b3c>
  43f70c:	mov	x0, #0x28                  	// #40
  43f710:	mul	x0, x19, x0
  43f714:	bl	4045f0 <malloc@plt>
  43f718:	mov	x20, x0
  43f71c:	lsl	x0, x28, #4
  43f720:	str	x20, [sp, #552]
  43f724:	bl	4045f0 <malloc@plt>
  43f728:	str	x0, [sp, #584]
  43f72c:	cbz	x20, 43f704 <_obstack_memory_used@@Base+0x7a84>
  43f730:	cbnz	x0, 43f548 <_obstack_memory_used@@Base+0x78c8>
  43f734:	b	43f704 <_obstack_memory_used@@Base+0x7a84>
  43f738:	str	xzr, [sp, #520]
  43f73c:	b	43f58c <_obstack_memory_used@@Base+0x790c>
  43f740:	mov	w0, #0x0                   	// #0
  43f744:	b	43f5f8 <_obstack_memory_used@@Base+0x7978>
  43f748:	mov	w0, #0x8                   	// #8
  43f74c:	b	43f614 <_obstack_memory_used@@Base+0x7994>
  43f750:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  43f754:	add	x1, x1, #0xa48
  43f758:	ldrb	w1, [x1, w2, uxtw]
  43f75c:	adr	x2, 43f768 <_obstack_memory_used@@Base+0x7ae8>
  43f760:	add	x1, x2, w1, sxtb #2
  43f764:	br	x1
  43f768:	mov	w1, #0x0                   	// #0
  43f76c:	ldr	x3, [sp, #120]
  43f770:	mov	x2, x0
  43f774:	cmp	x3, x0
  43f778:	b.gt	43f868 <_obstack_memory_used@@Base+0x7be8>
  43f77c:	cbz	w1, 43f784 <_obstack_memory_used@@Base+0x7b04>
  43f780:	str	x0, [sp, #272]
  43f784:	ldr	x1, [sp, #120]
  43f788:	ldr	x0, [sp, #272]
  43f78c:	cmp	x0, x1
  43f790:	b.ne	43f8e0 <_obstack_memory_used@@Base+0x7c60>  // b.any
  43f794:	cmp	x1, x26
  43f798:	b.ge	43f890 <_obstack_memory_used@@Base+0x7c10>  // b.tcont
  43f79c:	ldr	x0, [sp, #128]
  43f7a0:	ldrb	w0, [x0, x1]
  43f7a4:	ldr	x1, [sp, #104]
  43f7a8:	cbz	x1, 43f7b0 <_obstack_memory_used@@Base+0x7b30>
  43f7ac:	ldrb	w0, [x1, x0]
  43f7b0:	ldrb	w0, [x25, x0]
  43f7b4:	cbnz	w0, 43f8e0 <_obstack_memory_used@@Base+0x7c60>
  43f7b8:	mov	w19, #0x1                   	// #1
  43f7bc:	ldr	x0, [sp, #520]
  43f7c0:	bl	404ae0 <free@plt>
  43f7c4:	ldr	x0, [x22, #152]
  43f7c8:	cbz	x0, 43f7e4 <_obstack_memory_used@@Base+0x7b64>
  43f7cc:	add	x0, sp, #0x150
  43f7d0:	bl	4394d8 <_obstack_memory_used@@Base+0x1858>
  43f7d4:	ldr	x0, [sp, #584]
  43f7d8:	bl	404ae0 <free@plt>
  43f7dc:	ldr	x0, [sp, #552]
  43f7e0:	bl	404ae0 <free@plt>
  43f7e4:	add	x0, sp, #0x150
  43f7e8:	bl	439330 <_obstack_memory_used@@Base+0x16b0>
  43f7ec:	mov	w0, w19
  43f7f0:	ldp	x29, x30, [sp]
  43f7f4:	ldp	x19, x20, [sp, #16]
  43f7f8:	ldp	x21, x22, [sp, #32]
  43f7fc:	ldp	x23, x24, [sp, #48]
  43f800:	ldp	x25, x26, [sp, #64]
  43f804:	ldp	x27, x28, [sp, #80]
  43f808:	add	sp, sp, #0x250
  43f80c:	ret
  43f810:	mov	w1, #0x0                   	// #0
  43f814:	ldr	x3, [sp, #120]
  43f818:	mov	x2, x0
  43f81c:	cmp	x3, x0
  43f820:	b.le	43f77c <_obstack_memory_used@@Base+0x7afc>
  43f824:	ldr	x3, [sp, #128]
  43f828:	ldrb	w3, [x3, x0]
  43f82c:	add	x0, x0, #0x1
  43f830:	ldrb	w3, [x25, x3]
  43f834:	cbnz	w3, 43f884 <_obstack_memory_used@@Base+0x7c04>
  43f838:	mov	w1, #0x1                   	// #1
  43f83c:	b	43f814 <_obstack_memory_used@@Base+0x7b94>
  43f840:	mov	w2, #0x0                   	// #0
  43f844:	ldr	x1, [sp, #192]
  43f848:	mov	x3, x0
  43f84c:	cmp	x0, x1
  43f850:	b.ge	43f898 <_obstack_memory_used@@Base+0x7c18>  // b.tcont
  43f854:	cbz	w2, 43f7b8 <_obstack_memory_used@@Base+0x7b38>
  43f858:	str	x0, [sp, #272]
  43f85c:	b	43f7b8 <_obstack_memory_used@@Base+0x7b38>
  43f860:	mov	w1, #0x1                   	// #1
  43f864:	b	43f76c <_obstack_memory_used@@Base+0x7aec>
  43f868:	ldr	x3, [sp, #128]
  43f86c:	ldr	x4, [sp, #104]
  43f870:	ldrb	w3, [x3, x0]
  43f874:	add	x0, x0, #0x1
  43f878:	ldrb	w3, [x4, x3]
  43f87c:	ldrb	w3, [x25, x3]
  43f880:	cbz	w3, 43f860 <_obstack_memory_used@@Base+0x7be0>
  43f884:	cbz	w1, 43f784 <_obstack_memory_used@@Base+0x7b04>
  43f888:	str	x2, [sp, #272]
  43f88c:	b	43f784 <_obstack_memory_used@@Base+0x7b04>
  43f890:	mov	x0, #0x0                   	// #0
  43f894:	b	43f7a4 <_obstack_memory_used@@Base+0x7b24>
  43f898:	cmp	x0, x26
  43f89c:	b.ge	43f8c8 <_obstack_memory_used@@Base+0x7c48>  // b.tcont
  43f8a0:	ldr	x1, [sp, #128]
  43f8a4:	ldrb	w1, [x1, x0]
  43f8a8:	ldr	x4, [sp, #104]
  43f8ac:	cbz	x4, 43f8b4 <_obstack_memory_used@@Base+0x7c34>
  43f8b0:	ldrb	w1, [x4, x1]
  43f8b4:	ldrb	w1, [x25, x1]
  43f8b8:	sub	x0, x0, #0x1
  43f8bc:	cbnz	w1, 43f8d8 <_obstack_memory_used@@Base+0x7c58>
  43f8c0:	mov	w2, #0x1                   	// #1
  43f8c4:	b	43f844 <_obstack_memory_used@@Base+0x7bc4>
  43f8c8:	mov	x1, #0x0                   	// #0
  43f8cc:	b	43f8a8 <_obstack_memory_used@@Base+0x7c28>
  43f8d0:	mov	w0, #0x0                   	// #0
  43f8d4:	b	43f6b4 <_obstack_memory_used@@Base+0x7a34>
  43f8d8:	cbz	w2, 43f8e0 <_obstack_memory_used@@Base+0x7c60>
  43f8dc:	str	x3, [sp, #272]
  43f8e0:	ldr	w2, [sp, #184]
  43f8e4:	add	x0, sp, #0x150
  43f8e8:	ldr	x1, [sp, #272]
  43f8ec:	bl	43cd0c <_obstack_memory_used@@Base+0x508c>
  43f8f0:	mov	w19, w0
  43f8f4:	cbnz	w0, 43f7bc <_obstack_memory_used@@Base+0x7b3c>
  43f8f8:	ldr	w0, [sp, #216]
  43f8fc:	cmp	w0, #0x1
  43f900:	b.eq	43f91c <_obstack_memory_used@@Base+0x7c9c>  // b.none
  43f904:	ldr	x0, [sp, #384]
  43f908:	cbz	x0, 43f91c <_obstack_memory_used@@Base+0x7c9c>
  43f90c:	ldr	x0, [sp, #352]
  43f910:	ldr	w0, [x0]
  43f914:	cmn	w0, #0x1
  43f918:	b.eq	43fa1c <_obstack_memory_used@@Base+0x7d9c>  // b.none
  43f91c:	ldr	x27, [sp, #488]
  43f920:	str	wzr, [sp, #264]
  43f924:	ldr	x20, [sp, #408]
  43f928:	ldr	x21, [x27, #72]
  43f92c:	ldrsb	w0, [x21, #104]
  43f930:	str	xzr, [sp, #528]
  43f934:	str	xzr, [sp, #536]
  43f938:	str	wzr, [sp, #560]
  43f93c:	tbz	w0, #31, 43f9d0 <_obstack_memory_used@@Base+0x7d50>
  43f940:	ldr	w2, [sp, #496]
  43f944:	sub	x1, x20, #0x1
  43f948:	add	x0, sp, #0x150
  43f94c:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43f950:	mov	w3, w0
  43f954:	tbz	w3, #0, 43f990 <_obstack_memory_used@@Base+0x7d10>
  43f958:	ldr	x21, [x27, #80]
  43f95c:	cbnz	x21, 43f9d0 <_obstack_memory_used@@Base+0x7d50>
  43f960:	ldr	w0, [sp, #264]
  43f964:	cmp	w0, #0xc
  43f968:	b.eq	43f704 <_obstack_memory_used@@Base+0x7a84>  // b.none
  43f96c:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  43f970:	add	x3, x3, #0xab0
  43f974:	add	x3, x3, #0x3e
  43f978:	mov	w2, #0x435                 	// #1077
  43f97c:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  43f980:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  43f984:	add	x1, x1, #0x97b
  43f988:	add	x0, x0, #0x98e
  43f98c:	bl	404e00 <__assert_fail@plt>
  43f990:	cbz	w0, 43f9d0 <_obstack_memory_used@@Base+0x7d50>
  43f994:	and	w0, w0, #0x6
  43f998:	cmp	w0, #0x6
  43f99c:	b.ne	43f9a8 <_obstack_memory_used@@Base+0x7d28>  // b.any
  43f9a0:	ldr	x21, [x27, #96]
  43f9a4:	b	43f95c <_obstack_memory_used@@Base+0x7cdc>
  43f9a8:	tbz	w3, #1, 43f9b4 <_obstack_memory_used@@Base+0x7d34>
  43f9ac:	ldr	x21, [x27, #88]
  43f9b0:	b	43f95c <_obstack_memory_used@@Base+0x7cdc>
  43f9b4:	tbz	w3, #2, 43f9d0 <_obstack_memory_used@@Base+0x7d50>
  43f9b8:	ldr	x2, [x21, #80]
  43f9bc:	mov	x1, x27
  43f9c0:	add	x0, sp, #0x108
  43f9c4:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43f9c8:	mov	x21, x0
  43f9cc:	b	43f95c <_obstack_memory_used@@Base+0x7cdc>
  43f9d0:	ldr	x0, [sp, #520]
  43f9d4:	cbz	x0, 43fa94 <_obstack_memory_used@@Base+0x7e14>
  43f9d8:	str	x21, [x0, x20, lsl #3]
  43f9dc:	ldr	x0, [x27, #152]
  43f9e0:	ldr	w1, [sp, #236]
  43f9e4:	str	w1, [sp, #144]
  43f9e8:	cbz	x0, 43fa3c <_obstack_memory_used@@Base+0x7dbc>
  43f9ec:	add	x27, x21, #0x8
  43f9f0:	add	x0, sp, #0x150
  43f9f4:	mov	x1, x27
  43f9f8:	mov	x2, #0x0                   	// #0
  43f9fc:	bl	4386bc <_obstack_memory_used@@Base+0xa3c>
  43fa00:	str	w0, [sp, #264]
  43fa04:	cbz	w0, 43fa30 <_obstack_memory_used@@Base+0x7db0>
  43fa08:	sxtw	x20, w0
  43fa0c:	cmn	x20, #0x1
  43fa10:	b.ne	43fe9c <_obstack_memory_used@@Base+0x821c>  // b.any
  43fa14:	add	x0, sp, #0x150
  43fa18:	bl	4394d8 <_obstack_memory_used@@Base+0x1858>
  43fa1c:	ldr	x0, [sp, #272]
  43fa20:	ldr	w1, [sp, #220]
  43fa24:	add	x0, x0, w1, sxtw
  43fa28:	str	x0, [sp, #272]
  43fa2c:	b	43f634 <_obstack_memory_used@@Base+0x79b4>
  43fa30:	ldrb	w0, [x21, #104]
  43fa34:	tbnz	w0, #6, 43fa7c <_obstack_memory_used@@Base+0x7dfc>
  43fa38:	str	wzr, [sp, #144]
  43fa3c:	ldrb	w0, [x21, #104]
  43fa40:	tbz	w0, #4, 43fdf8 <_obstack_memory_used@@Base+0x8178>
  43fa44:	ldrsb	w0, [x21, #104]
  43fa48:	tbz	w0, #31, 43fa64 <_obstack_memory_used@@Base+0x7de4>
  43fa4c:	mov	x2, x20
  43fa50:	mov	x1, x21
  43fa54:	add	x0, sp, #0x150
  43fa58:	bl	43cc6c <_obstack_memory_used@@Base+0x4fec>
  43fa5c:	str	x0, [sp, #136]
  43fa60:	cbz	x0, 43fe94 <_obstack_memory_used@@Base+0x8214>
  43fa64:	ldr	w0, [sp, #164]
  43fa68:	cbz	w0, 43fa0c <_obstack_memory_used@@Base+0x7d8c>
  43fa6c:	mov	x1, #0x1                   	// #1
  43fa70:	mov	x0, x20
  43fa74:	str	x1, [sp, #136]
  43fa78:	b	43fe00 <_obstack_memory_used@@Base+0x8180>
  43fa7c:	mov	x1, x27
  43fa80:	add	x0, sp, #0x150
  43fa84:	bl	43e494 <_obstack_memory_used@@Base+0x6814>
  43fa88:	str	w0, [sp, #264]
  43fa8c:	cbz	w0, 43fa38 <_obstack_memory_used@@Base+0x7db8>
  43fa90:	b	43fa08 <_obstack_memory_used@@Base+0x7d88>
  43fa94:	ldr	w0, [sp, #236]
  43fa98:	str	w0, [sp, #144]
  43fa9c:	b	43fa3c <_obstack_memory_used@@Base+0x7dbc>
  43faa0:	ldrb	w0, [x21, #104]
  43faa4:	tbnz	w0, #5, 43fb58 <_obstack_memory_used@@Base+0x7ed8>
  43faa8:	ldr	x0, [sp, #408]
  43faac:	add	x1, x0, #0x1
  43fab0:	str	x1, [sp, #408]
  43fab4:	ldr	x1, [sp, #344]
  43fab8:	ldrb	w28, [x1, x0]
  43fabc:	ldr	x0, [x21, #88]
  43fac0:	cbz	x0, 43fcfc <_obstack_memory_used@@Base+0x807c>
  43fac4:	ubfiz	x28, x28, #3, #8
  43fac8:	ldr	x27, [x0, x28]
  43facc:	ldr	x0, [sp, #520]
  43fad0:	cbz	x0, 43fae8 <_obstack_memory_used@@Base+0x7e68>
  43fad4:	mov	x2, x27
  43fad8:	add	x1, sp, #0x150
  43fadc:	add	x0, sp, #0x108
  43fae0:	bl	43ea38 <_obstack_memory_used@@Base+0x6db8>
  43fae4:	mov	x27, x0
  43fae8:	cbnz	x27, 43fd88 <_obstack_memory_used@@Base+0x8108>
  43faec:	ldr	w1, [sp, #264]
  43faf0:	ldr	x0, [sp, #520]
  43faf4:	cbnz	w1, 43f704 <_obstack_memory_used@@Base+0x7a84>
  43faf8:	cbz	x0, 43fb38 <_obstack_memory_used@@Base+0x7eb8>
  43fafc:	ldr	w0, [sp, #164]
  43fb00:	ldr	w1, [sp, #136]
  43fb04:	eor	w0, w0, #0x1
  43fb08:	tst	w0, w1
  43fb0c:	b.ne	43fb38 <_obstack_memory_used@@Base+0x7eb8>  // b.any
  43fb10:	ldr	x0, [sp, #408]
  43fb14:	mov	w1, #0x0                   	// #0
  43fb18:	ldr	x3, [sp, #520]
  43fb1c:	ldr	x4, [sp, #528]
  43fb20:	mov	x2, x0
  43fb24:	add	x0, x0, #0x1
  43fb28:	cmp	x4, x0
  43fb2c:	b.ge	43fd58 <_obstack_memory_used@@Base+0x80d8>  // b.tcont
  43fb30:	cbz	w1, 43fb38 <_obstack_memory_used@@Base+0x7eb8>
  43fb34:	str	x2, [sp, #408]
  43fb38:	ldr	x0, [sp, #152]
  43fb3c:	cbz	x0, 43fa0c <_obstack_memory_used@@Base+0x7d8c>
  43fb40:	ldr	x0, [x0]
  43fb44:	ldr	x1, [sp, #200]
  43fb48:	add	x0, x0, x1
  43fb4c:	ldr	x1, [sp, #152]
  43fb50:	str	x0, [x1]
  43fb54:	b	43fa0c <_obstack_memory_used@@Base+0x7d8c>
  43fb58:	ldr	x27, [sp, #488]
  43fb5c:	str	xzr, [sp, #176]
  43fb60:	ldr	x0, [x21, #16]
  43fb64:	ldr	x1, [sp, #176]
  43fb68:	cmp	x1, x0
  43fb6c:	b.lt	43fb78 <_obstack_memory_used@@Base+0x7ef8>  // b.tstop
  43fb70:	mov	w0, #0x0                   	// #0
  43fb74:	b	43fcec <_obstack_memory_used@@Base+0x806c>
  43fb78:	ldr	x0, [x21, #24]
  43fb7c:	ldr	x1, [sp, #176]
  43fb80:	ldr	x28, [x0, x1, lsl #3]
  43fb84:	ldr	x0, [x27]
  43fb88:	add	x0, x0, x28, lsl #4
  43fb8c:	ldrb	w1, [x0, #10]
  43fb90:	tbz	w1, #4, 43fcc0 <_obstack_memory_used@@Base+0x8040>
  43fb94:	ldr	w4, [x0, #8]
  43fb98:	str	w4, [sp, #248]
  43fb9c:	tst	w4, #0x3ff00
  43fba0:	ldr	x3, [sp, #408]
  43fba4:	b.eq	43fbe8 <_obstack_memory_used@@Base+0x7f68>  // b.none
  43fba8:	ldr	w2, [sp, #496]
  43fbac:	mov	x1, x3
  43fbb0:	add	x0, sp, #0x150
  43fbb4:	str	x3, [sp, #240]
  43fbb8:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43fbbc:	ldr	w4, [sp, #248]
  43fbc0:	ldr	x3, [sp, #240]
  43fbc4:	ubfx	x2, x4, #8, #10
  43fbc8:	tbz	w4, #10, 43fbd0 <_obstack_memory_used@@Base+0x7f50>
  43fbcc:	tbz	w0, #0, 43fcc0 <_obstack_memory_used@@Base+0x8040>
  43fbd0:	tbz	w2, #3, 43fbd8 <_obstack_memory_used@@Base+0x7f58>
  43fbd4:	tbnz	w0, #0, 43fcc0 <_obstack_memory_used@@Base+0x8040>
  43fbd8:	tbz	w2, #5, 43fbe0 <_obstack_memory_used@@Base+0x7f60>
  43fbdc:	tbz	w0, #1, 43fcc0 <_obstack_memory_used@@Base+0x8040>
  43fbe0:	tbz	w2, #7, 43fbe8 <_obstack_memory_used@@Base+0x7f68>
  43fbe4:	tbz	w0, #3, 43fcc0 <_obstack_memory_used@@Base+0x8040>
  43fbe8:	add	x2, sp, #0x150
  43fbec:	mov	x1, x28
  43fbf0:	mov	x0, x27
  43fbf4:	bl	439de8 <_obstack_memory_used@@Base+0x2168>
  43fbf8:	cbz	w0, 43fcc0 <_obstack_memory_used@@Base+0x8040>
  43fbfc:	ldr	x3, [sp, #408]
  43fc00:	ldr	w1, [sp, #560]
  43fc04:	add	x3, x3, w0, sxtw
  43fc08:	cmp	w1, w0
  43fc0c:	csel	w0, w1, w0, ge  // ge = tcont
  43fc10:	mov	x1, x3
  43fc14:	str	x3, [sp, #240]
  43fc18:	str	w0, [sp, #560]
  43fc1c:	add	x0, sp, #0x150
  43fc20:	bl	438f68 <_obstack_memory_used@@Base+0x12e8>
  43fc24:	str	w0, [sp, #268]
  43fc28:	cbnz	w0, 43fcec <_obstack_memory_used@@Base+0x806c>
  43fc2c:	ldr	x0, [x27, #24]
  43fc30:	mov	x1, #0x18                  	// #24
  43fc34:	ldr	x3, [sp, #240]
  43fc38:	ldr	x2, [x0, x28, lsl #3]
  43fc3c:	ldr	x0, [x27, #48]
  43fc40:	lsl	x28, x3, #3
  43fc44:	madd	x2, x2, x1, x0
  43fc48:	ldr	x0, [sp, #520]
  43fc4c:	ldr	x4, [x0, x28]
  43fc50:	cbnz	x4, 43fcd0 <_obstack_memory_used@@Base+0x8050>
  43fc54:	add	x5, sp, #0x200
  43fc58:	ldp	x0, x1, [x2]
  43fc5c:	stp	x0, x1, [x5, #-232]
  43fc60:	ldr	x0, [x2, #16]
  43fc64:	str	x0, [sp, #296]
  43fc68:	ldr	w2, [sp, #496]
  43fc6c:	sub	x1, x3, #0x1
  43fc70:	add	x0, sp, #0x150
  43fc74:	str	x4, [sp, #248]
  43fc78:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43fc7c:	mov	w3, w0
  43fc80:	ldr	x5, [sp, #520]
  43fc84:	add	x2, sp, #0x118
  43fc88:	mov	x1, x27
  43fc8c:	add	x0, sp, #0x10c
  43fc90:	str	x5, [sp, #240]
  43fc94:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  43fc98:	ldp	x5, x4, [sp, #240]
  43fc9c:	str	x0, [x5, x28]
  43fca0:	cbz	x4, 43fcac <_obstack_memory_used@@Base+0x802c>
  43fca4:	ldr	x0, [sp, #296]
  43fca8:	bl	404ae0 <free@plt>
  43fcac:	ldr	x0, [sp, #520]
  43fcb0:	ldr	x0, [x0, x28]
  43fcb4:	cbnz	x0, 43fcc0 <_obstack_memory_used@@Base+0x8040>
  43fcb8:	ldr	w0, [sp, #268]
  43fcbc:	cbnz	w0, 43fcec <_obstack_memory_used@@Base+0x806c>
  43fcc0:	ldr	x0, [sp, #176]
  43fcc4:	add	x0, x0, #0x1
  43fcc8:	str	x0, [sp, #176]
  43fccc:	b	43fb60 <_obstack_memory_used@@Base+0x7ee0>
  43fcd0:	ldr	x1, [x4, #80]
  43fcd4:	add	x0, sp, #0x118
  43fcd8:	stp	x4, x3, [sp, #240]
  43fcdc:	bl	43b0b8 <_obstack_memory_used@@Base+0x3438>
  43fce0:	str	w0, [sp, #268]
  43fce4:	ldp	x4, x3, [sp, #240]
  43fce8:	cbz	w0, 43fc68 <_obstack_memory_used@@Base+0x7fe8>
  43fcec:	str	w0, [sp, #264]
  43fcf0:	cbz	w0, 43faa8 <_obstack_memory_used@@Base+0x7e28>
  43fcf4:	mov	x27, #0x0                   	// #0
  43fcf8:	b	43facc <_obstack_memory_used@@Base+0x7e4c>
  43fcfc:	ldr	x27, [x21, #96]
  43fd00:	cbz	x27, 43fd38 <_obstack_memory_used@@Base+0x80b8>
  43fd04:	ldr	w2, [sp, #496]
  43fd08:	add	x0, sp, #0x150
  43fd0c:	ldr	x1, [sp, #408]
  43fd10:	sub	x1, x1, #0x1
  43fd14:	bl	43cb8c <_obstack_memory_used@@Base+0x4f0c>
  43fd18:	and	x1, x28, #0xff
  43fd1c:	tbz	w0, #0, 43fd2c <_obstack_memory_used@@Base+0x80ac>
  43fd20:	add	x1, x1, #0x100
  43fd24:	ldr	x27, [x27, x1, lsl #3]
  43fd28:	b	43facc <_obstack_memory_used@@Base+0x7e4c>
  43fd2c:	ubfiz	x28, x28, #3, #8
  43fd30:	ldr	x27, [x27, x28]
  43fd34:	b	43facc <_obstack_memory_used@@Base+0x7e4c>
  43fd38:	ldr	x0, [sp, #488]
  43fd3c:	mov	x1, x21
  43fd40:	bl	43c364 <_obstack_memory_used@@Base+0x46e4>
  43fd44:	tst	w0, #0xff
  43fd48:	b.ne	43fabc <_obstack_memory_used@@Base+0x7e3c>  // b.any
  43fd4c:	mov	w0, #0xc                   	// #12
  43fd50:	str	w0, [sp, #264]
  43fd54:	b	43facc <_obstack_memory_used@@Base+0x7e4c>
  43fd58:	ldr	x2, [x3, x0, lsl #3]
  43fd5c:	mov	w1, #0x1                   	// #1
  43fd60:	cbz	x2, 43fb20 <_obstack_memory_used@@Base+0x7ea0>
  43fd64:	add	x1, sp, #0x150
  43fd68:	mov	x2, #0x0                   	// #0
  43fd6c:	str	x0, [sp, #408]
  43fd70:	add	x0, sp, #0x108
  43fd74:	bl	43ea38 <_obstack_memory_used@@Base+0x6db8>
  43fd78:	mov	x27, x0
  43fd7c:	ldr	w0, [sp, #264]
  43fd80:	cbnz	w0, 43fdf0 <_obstack_memory_used@@Base+0x8170>
  43fd84:	cbz	x27, 43fb10 <_obstack_memory_used@@Base+0x7e90>
  43fd88:	ldr	w0, [sp, #144]
  43fd8c:	cbz	w0, 43fdac <_obstack_memory_used@@Base+0x812c>
  43fd90:	cmp	x21, x27
  43fd94:	csel	w0, w0, wzr, eq  // eq = none
  43fd98:	str	w0, [sp, #144]
  43fd9c:	ldr	x0, [sp, #168]
  43fda0:	ldr	x1, [sp, #200]
  43fda4:	csel	x0, x0, x1, eq  // eq = none
  43fda8:	str	x0, [sp, #200]
  43fdac:	ldrb	w0, [x27, #104]
  43fdb0:	tbz	w0, #4, 43fde8 <_obstack_memory_used@@Base+0x8168>
  43fdb4:	ldr	x21, [sp, #408]
  43fdb8:	tbz	w0, #7, 43fdd0 <_obstack_memory_used@@Base+0x8150>
  43fdbc:	mov	x2, x21
  43fdc0:	mov	x1, x27
  43fdc4:	add	x0, sp, #0x150
  43fdc8:	bl	43cc6c <_obstack_memory_used@@Base+0x4fec>
  43fdcc:	cbz	x0, 43fde8 <_obstack_memory_used@@Base+0x8168>
  43fdd0:	ldr	w0, [sp, #164]
  43fdd4:	mov	x20, x21
  43fdd8:	cbz	w0, 43fa0c <_obstack_memory_used@@Base+0x7d8c>
  43fddc:	mov	x0, #0x1                   	// #1
  43fde0:	str	x0, [sp, #136]
  43fde4:	str	xzr, [sp, #152]
  43fde8:	mov	x21, x27
  43fdec:	b	43fe10 <_obstack_memory_used@@Base+0x8190>
  43fdf0:	cbnz	x27, 43fd88 <_obstack_memory_used@@Base+0x8108>
  43fdf4:	b	43fb38 <_obstack_memory_used@@Base+0x7eb8>
  43fdf8:	mov	x0, #0xffffffffffffffff    	// #-1
  43fdfc:	str	xzr, [sp, #136]
  43fe00:	str	x20, [sp, #200]
  43fe04:	mov	x20, x0
  43fe08:	ldr	x0, [sp, #224]
  43fe0c:	str	x0, [sp, #152]
  43fe10:	ldr	x0, [sp, #408]
  43fe14:	ldr	x1, [sp, #440]
  43fe18:	cmp	x0, x1
  43fe1c:	b.ge	43fb38 <_obstack_memory_used@@Base+0x7eb8>  // b.tcont
  43fe20:	add	x0, x0, #0x1
  43fe24:	str	x0, [sp, #168]
  43fe28:	ldr	x0, [sp, #400]
  43fe2c:	ldr	x1, [sp, #168]
  43fe30:	cmp	x1, x0
  43fe34:	b.lt	43fe44 <_obstack_memory_used@@Base+0x81c4>  // b.tstop
  43fe38:	ldr	x1, [sp, #424]
  43fe3c:	cmp	x0, x1
  43fe40:	b.lt	43fe60 <_obstack_memory_used@@Base+0x81e0>  // b.tstop
  43fe44:	ldr	x1, [sp, #168]
  43fe48:	ldr	x0, [sp, #384]
  43fe4c:	cmp	x1, x0
  43fe50:	b.lt	43faa0 <_obstack_memory_used@@Base+0x7e20>  // b.tstop
  43fe54:	ldr	x1, [sp, #424]
  43fe58:	cmp	x0, x1
  43fe5c:	b.ge	43faa0 <_obstack_memory_used@@Base+0x7e20>  // b.tcont
  43fe60:	ldr	w0, [sp, #168]
  43fe64:	add	w1, w0, #0x1
  43fe68:	add	x0, sp, #0x150
  43fe6c:	bl	438e9c <_obstack_memory_used@@Base+0x121c>
  43fe70:	str	w0, [sp, #264]
  43fe74:	cbz	w0, 43faa0 <_obstack_memory_used@@Base+0x7e20>
  43fe78:	cmp	w0, #0xc
  43fe7c:	b.eq	43f704 <_obstack_memory_used@@Base+0x7a84>  // b.none
  43fe80:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  43fe84:	add	x3, x3, #0xab0
  43fe88:	add	x3, x3, #0x3e
  43fe8c:	mov	w2, #0x46c                 	// #1132
  43fe90:	b	43f97c <_obstack_memory_used@@Base+0x7cfc>
  43fe94:	mov	x0, #0xffffffffffffffff    	// #-1
  43fe98:	b	43fe00 <_obstack_memory_used@@Base+0x8180>
  43fe9c:	cmn	x20, #0x2
  43fea0:	b.eq	43f704 <_obstack_memory_used@@Base+0x7a84>  // b.none
  43fea4:	ldrb	w0, [x24, #56]
  43fea8:	str	x20, [sp, #504]
  43feac:	and	w21, w0, #0x10
  43feb0:	tbnz	w0, #4, 43febc <_obstack_memory_used@@Base+0x823c>
  43feb4:	cmp	x23, #0x1
  43feb8:	b.hi	43fec4 <_obstack_memory_used@@Base+0x8244>  // b.pmore
  43febc:	ldr	x0, [x22, #152]
  43fec0:	cbz	x0, 440230 <_obstack_memory_used@@Base+0x85b0>
  43fec4:	ldr	x0, [sp, #520]
  43fec8:	mov	x2, x20
  43fecc:	ldr	x1, [x0, x20, lsl #3]
  43fed0:	add	x0, sp, #0x150
  43fed4:	bl	43cc6c <_obstack_memory_used@@Base+0x4fec>
  43fed8:	str	x0, [sp, #512]
  43fedc:	cbz	w21, 43ff60 <_obstack_memory_used@@Base+0x82e0>
  43fee0:	ldr	x0, [x22, #152]
  43fee4:	cbnz	x0, 43ff70 <_obstack_memory_used@@Base+0x82f0>
  43fee8:	cbz	x23, 43f7bc <_obstack_memory_used@@Base+0x7b3c>
  43feec:	ldr	x0, [sp, #112]
  43fef0:	mov	x2, #0xffffffffffffffff    	// #-1
  43fef4:	add	x20, x0, #0x10
  43fef8:	mov	x0, #0x1                   	// #1
  43fefc:	mov	x1, x20
  43ff00:	cmp	x23, x0
  43ff04:	b.ne	440110 <_obstack_memory_used@@Base+0x8490>  // b.any
  43ff08:	ldr	x0, [sp, #112]
  43ff0c:	ldr	x1, [sp, #112]
  43ff10:	str	xzr, [x0]
  43ff14:	ldr	x0, [sp, #504]
  43ff18:	str	x0, [x1, #8]
  43ff1c:	ldrb	w0, [x24, #56]
  43ff20:	tbnz	w0, #4, 440138 <_obstack_memory_used@@Base+0x84b8>
  43ff24:	cmp	x23, #0x1
  43ff28:	b.eq	440138 <_obstack_memory_used@@Base+0x84b8>  // b.none
  43ff2c:	ldrb	w0, [x22, #176]
  43ff30:	tbz	w0, #0, 440120 <_obstack_memory_used@@Base+0x84a0>
  43ff34:	ldr	x0, [x22, #152]
  43ff38:	cmp	x0, #0x0
  43ff3c:	cset	w4, gt
  43ff40:	ldr	x3, [sp, #112]
  43ff44:	mov	x2, x23
  43ff48:	add	x1, sp, #0x150
  43ff4c:	mov	x0, x24
  43ff50:	bl	43d514 <_obstack_memory_used@@Base+0x5894>
  43ff54:	cbz	w0, 440138 <_obstack_memory_used@@Base+0x84b8>
  43ff58:	mov	w19, w0
  43ff5c:	b	43f7bc <_obstack_memory_used@@Base+0x7b3c>
  43ff60:	cmp	x23, #0x1
  43ff64:	b.ls	43fee0 <_obstack_memory_used@@Base+0x8260>  // b.plast
  43ff68:	ldrb	w0, [x22, #176]
  43ff6c:	tbz	w0, #0, 43fee0 <_obstack_memory_used@@Base+0x8260>
  43ff70:	ldr	x0, [sp, #488]
  43ff74:	str	x0, [sp, #144]
  43ff78:	ldr	x0, [sp, #512]
  43ff7c:	str	x0, [sp, #136]
  43ff80:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  43ff84:	cmp	x20, x0
  43ff88:	b.hi	43f704 <_obstack_memory_used@@Base+0x7a84>  // b.pmore
  43ff8c:	add	x1, x20, #0x1
  43ff90:	lsl	x27, x1, #3
  43ff94:	mov	x0, x27
  43ff98:	bl	4045f0 <malloc@plt>
  43ff9c:	mov	x21, x0
  43ffa0:	cbz	x0, 4400fc <_obstack_memory_used@@Base+0x847c>
  43ffa4:	ldr	x0, [sp, #144]
  43ffa8:	ldr	x0, [x0, #152]
  43ffac:	cbz	x0, 44007c <_obstack_memory_used@@Base+0x83fc>
  43ffb0:	mov	x0, x27
  43ffb4:	bl	4045f0 <malloc@plt>
  43ffb8:	mov	x27, x0
  43ffbc:	cbz	x0, 440100 <_obstack_memory_used@@Base+0x8480>
  43ffc0:	add	x3, x20, #0x1
  43ffc4:	mov	w1, #0x0                   	// #0
  43ffc8:	mov	x0, x27
  43ffcc:	str	x3, [sp, #152]
  43ffd0:	lsl	x2, x3, #3
  43ffd4:	bl	404700 <memset@plt>
  43ffd8:	stp	x21, x27, [sp, #280]
  43ffdc:	add	x1, sp, #0x118
  43ffe0:	ldr	x0, [sp, #136]
  43ffe4:	stp	x0, x20, [sp, #296]
  43ffe8:	add	x0, sp, #0x200
  43ffec:	stp	xzr, xzr, [x0, #-200]
  43fff0:	add	x0, sp, #0x150
  43fff4:	str	xzr, [sp, #328]
  43fff8:	bl	43f104 <_obstack_memory_used@@Base+0x7484>
  43fffc:	mov	w28, w0
  440000:	ldr	x0, [sp, #328]
  440004:	bl	404ae0 <free@plt>
  440008:	cbnz	w28, 4400d8 <_obstack_memory_used@@Base+0x8458>
  44000c:	ldr	x0, [x21]
  440010:	ldr	x3, [sp, #152]
  440014:	cbnz	x0, 440054 <_obstack_memory_used@@Base+0x83d4>
  440018:	ldr	x0, [x27]
  44001c:	cbnz	x0, 440054 <_obstack_memory_used@@Base+0x83d4>
  440020:	ldr	x2, [sp, #520]
  440024:	sub	x20, x20, #0x1
  440028:	cmn	x20, #0x1
  44002c:	b.eq	440108 <_obstack_memory_used@@Base+0x8488>  // b.none
  440030:	ldr	x1, [x2, x20, lsl #3]
  440034:	cbz	x1, 440024 <_obstack_memory_used@@Base+0x83a4>
  440038:	ldrb	w0, [x1, #104]
  44003c:	tbz	w0, #4, 440024 <_obstack_memory_used@@Base+0x83a4>
  440040:	mov	x2, x20
  440044:	add	x0, sp, #0x150
  440048:	bl	43cc6c <_obstack_memory_used@@Base+0x4fec>
  44004c:	str	x0, [sp, #136]
  440050:	b	43ffc0 <_obstack_memory_used@@Base+0x8340>
  440054:	ldr	x0, [sp, #144]
  440058:	mov	x2, x27
  44005c:	mov	x1, x21
  440060:	bl	43ddf4 <_obstack_memory_used@@Base+0x6174>
  440064:	mov	w28, w0
  440068:	mov	x0, x27
  44006c:	bl	404ae0 <free@plt>
  440070:	cbz	w28, 4400b8 <_obstack_memory_used@@Base+0x8438>
  440074:	mov	x27, #0x0                   	// #0
  440078:	b	4400d8 <_obstack_memory_used@@Base+0x8458>
  44007c:	ldr	x0, [sp, #136]
  440080:	stp	x0, x20, [sp, #296]
  440084:	add	x0, sp, #0x200
  440088:	stp	x21, xzr, [sp, #280]
  44008c:	add	x1, sp, #0x118
  440090:	stp	xzr, xzr, [x0, #-200]
  440094:	add	x0, sp, #0x150
  440098:	str	xzr, [sp, #328]
  44009c:	bl	43f104 <_obstack_memory_used@@Base+0x7484>
  4400a0:	mov	w28, w0
  4400a4:	ldr	x0, [sp, #328]
  4400a8:	bl	404ae0 <free@plt>
  4400ac:	cbnz	w28, 440074 <_obstack_memory_used@@Base+0x83f4>
  4400b0:	ldr	x27, [x21]
  4400b4:	cbz	x27, 440108 <_obstack_memory_used@@Base+0x8488>
  4400b8:	ldr	x0, [sp, #520]
  4400bc:	mov	w28, #0x0                   	// #0
  4400c0:	mov	x27, #0x0                   	// #0
  4400c4:	bl	404ae0 <free@plt>
  4400c8:	str	x21, [sp, #520]
  4400cc:	ldr	x0, [sp, #136]
  4400d0:	mov	x21, #0x0                   	// #0
  4400d4:	stp	x20, x0, [sp, #504]
  4400d8:	mov	x0, x21
  4400dc:	bl	404ae0 <free@plt>
  4400e0:	mov	x0, x27
  4400e4:	bl	404ae0 <free@plt>
  4400e8:	cbz	w28, 43fee8 <_obstack_memory_used@@Base+0x8268>
  4400ec:	cmp	w28, #0x1
  4400f0:	b.eq	43fa14 <_obstack_memory_used@@Base+0x7d94>  // b.none
  4400f4:	mov	w19, w28
  4400f8:	b	43f7bc <_obstack_memory_used@@Base+0x7b3c>
  4400fc:	mov	x27, #0x0                   	// #0
  440100:	mov	w28, #0xc                   	// #12
  440104:	b	4400d8 <_obstack_memory_used@@Base+0x8458>
  440108:	mov	w28, #0x1                   	// #1
  44010c:	b	4400d8 <_obstack_memory_used@@Base+0x8458>
  440110:	str	x2, [x1, #8]
  440114:	add	x0, x0, #0x1
  440118:	str	x2, [x1], #16
  44011c:	b	43ff00 <_obstack_memory_used@@Base+0x8280>
  440120:	mov	w4, #0x0                   	// #0
  440124:	b	43ff40 <_obstack_memory_used@@Base+0x82c0>
  440128:	mov	x2, x4
  44012c:	b	44016c <_obstack_memory_used@@Base+0x84ec>
  440130:	mov	x2, x4
  440134:	b	440180 <_obstack_memory_used@@Base+0x8500>
  440138:	ldp	x6, x4, [sp, #384]
  44013c:	mov	x1, #0x0                   	// #0
  440140:	ldrb	w7, [sp, #476]
  440144:	ldr	x0, [sp, #112]
  440148:	ldr	x3, [sp, #272]
  44014c:	ldr	x5, [sp, #360]
  440150:	ldr	x2, [x0]
  440154:	cmn	x2, #0x1
  440158:	b.eq	44019c <_obstack_memory_used@@Base+0x851c>  // b.none
  44015c:	cbz	w7, 440184 <_obstack_memory_used@@Base+0x8504>
  440160:	cmp	x2, x6
  440164:	b.eq	440128 <_obstack_memory_used@@Base+0x84a8>  // b.none
  440168:	ldr	x2, [x5, x2, lsl #3]
  44016c:	str	x2, [x0]
  440170:	ldr	x2, [x0, #8]
  440174:	cmp	x6, x2
  440178:	b.eq	440130 <_obstack_memory_used@@Base+0x84b0>  // b.none
  44017c:	ldr	x2, [x5, x2, lsl #3]
  440180:	str	x2, [x0, #8]
  440184:	ldr	x2, [x0]
  440188:	add	x2, x2, x3
  44018c:	str	x2, [x0]
  440190:	ldr	x2, [x0, #8]
  440194:	add	x2, x2, x3
  440198:	str	x2, [x0, #8]
  44019c:	add	x1, x1, #0x1
  4401a0:	add	x0, x0, #0x10
  4401a4:	cmp	x23, x1
  4401a8:	b.ne	440150 <_obstack_memory_used@@Base+0x84d0>  // b.any
  4401ac:	ldr	x0, [sp, #112]
  4401b0:	mov	x1, #0x0                   	// #0
  4401b4:	mov	x2, #0xffffffffffffffff    	// #-1
  4401b8:	add	x0, x0, x23, lsl #4
  4401bc:	ldr	x3, [sp, #208]
  4401c0:	cmp	x1, x3
  4401c4:	b.lt	440218 <_obstack_memory_used@@Base+0x8598>  // b.tstop
  4401c8:	ldr	x2, [x22, #224]
  4401cc:	cbz	x2, 43f7bc <_obstack_memory_used@@Base+0x7b3c>
  4401d0:	sub	x23, x23, #0x1
  4401d4:	mov	x0, #0x0                   	// #0
  4401d8:	cmp	x23, x0
  4401dc:	b.eq	43f7bc <_obstack_memory_used@@Base+0x7b3c>  // b.none
  4401e0:	ldr	x1, [x2, x0, lsl #3]
  4401e4:	cmp	x1, x0
  4401e8:	b.eq	44020c <_obstack_memory_used@@Base+0x858c>  // b.none
  4401ec:	ldr	x3, [sp, #112]
  4401f0:	add	x1, x3, x1, lsl #4
  4401f4:	ldr	x1, [x1, #16]
  4401f8:	str	x1, [x20]
  4401fc:	ldr	x1, [x2, x0, lsl #3]
  440200:	add	x1, x3, x1, lsl #4
  440204:	ldr	x1, [x1, #24]
  440208:	str	x1, [x20, #8]
  44020c:	add	x0, x0, #0x1
  440210:	add	x20, x20, #0x10
  440214:	b	4401d8 <_obstack_memory_used@@Base+0x8558>
  440218:	add	x1, x1, #0x1
  44021c:	stp	x2, x2, [x0]
  440220:	add	x0, x0, #0x10
  440224:	b	4401bc <_obstack_memory_used@@Base+0x853c>
  440228:	mov	w19, #0x1                   	// #1
  44022c:	b	43f7ec <_obstack_memory_used@@Base+0x7b6c>
  440230:	cbnz	w21, 43fee8 <_obstack_memory_used@@Base+0x8268>
  440234:	cmp	x23, #0x1
  440238:	b.hi	43ff68 <_obstack_memory_used@@Base+0x82e8>  // b.pmore
  44023c:	b	43fee8 <_obstack_memory_used@@Base+0x8268>
  440240:	stp	x29, x30, [sp, #-288]!
  440244:	mov	x29, sp
  440248:	stp	x19, x20, [sp, #16]
  44024c:	mov	x19, x2
  440250:	stp	x21, x22, [sp, #32]
  440254:	mov	x21, x0
  440258:	mov	x22, x5
  44025c:	stp	x23, x24, [sp, #48]
  440260:	mov	x23, x3
  440264:	mov	x24, x1
  440268:	stp	x25, x26, [sp, #64]
  44026c:	adrp	x25, 450000 <_obstack_memory_used@@Base+0x18380>
  440270:	mov	x26, x4
  440274:	add	x25, x25, #0xa50
  440278:	stp	x27, x28, [sp, #80]
  44027c:	and	x27, x3, #0x1000000
  440280:	and	x28, x3, #0x20
  440284:	and	x3, x3, #0x10
  440288:	ldrb	w0, [x19, #8]
  44028c:	ldr	x20, [x24]
  440290:	sub	w1, w0, #0x1
  440294:	cmp	w1, #0x23
  440298:	b.hi	4404cc <_obstack_memory_used@@Base+0x884c>  // b.pmore
  44029c:	ldrh	w1, [x25, w1, uxtw #1]
  4402a0:	adr	x2, 4402ac <_obstack_memory_used@@Base+0x862c>
  4402a4:	add	x1, x2, w1, sxth #2
  4402a8:	br	x1
  4402ac:	mov	x3, x19
  4402b0:	mov	x0, x20
  4402b4:	mov	x2, #0x0                   	// #0
  4402b8:	mov	x1, #0x0                   	// #0
  4402bc:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  4402c0:	mov	x26, x0
  4402c4:	cbnz	x0, 4402d4 <_obstack_memory_used@@Base+0x8654>
  4402c8:	mov	w0, #0xc                   	// #12
  4402cc:	str	w0, [x22]
  4402d0:	b	4404cc <_obstack_memory_used@@Base+0x884c>
  4402d4:	ldr	w0, [x20, #180]
  4402d8:	cmp	w0, #0x1
  4402dc:	b.gt	4403cc <_obstack_memory_used@@Base+0x874c>
  4402e0:	mov	x0, x19
  4402e4:	mov	x2, x23
  4402e8:	mov	x1, x21
  4402ec:	bl	43c270 <_obstack_memory_used@@Base+0x45f0>
  4402f0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x380>
  4402f4:	add	x0, x0, #0xa8
  4402f8:	adrp	x27, 439000 <_obstack_memory_used@@Base+0x1380>
  4402fc:	str	x0, [sp, #96]
  440300:	add	x0, x27, #0x78
  440304:	str	x0, [sp, #104]
  440308:	ldrb	w1, [x19, #8]
  44030c:	cmp	w1, #0x12
  440310:	cset	w0, eq  // eq = none
  440314:	cmp	w0, #0x0
  440318:	and	x5, x0, #0xff
  44031c:	ccmp	w1, #0xb, #0x4, eq  // eq = none
  440320:	b.eq	440330 <_obstack_memory_used@@Base+0x86b0>  // b.none
  440324:	and	w0, w1, #0xfffffffb
  440328:	cmp	w0, #0x13
  44032c:	b.ne	440ce0 <_obstack_memory_used@@Base+0x9060>  // b.any
  440330:	cmp	w1, #0x17
  440334:	ldp	x24, x25, [x19]
  440338:	ldr	x28, [x21, #72]
  44033c:	b.ne	440f44 <_obstack_memory_used@@Base+0x92c4>  // b.any
  440340:	mov	x2, x23
  440344:	mov	x1, x19
  440348:	mov	x0, x21
  44034c:	bl	43c29c <_obstack_memory_used@@Base+0x461c>
  440350:	mov	x5, x0
  440354:	cmn	x0, #0x1
  440358:	b.ne	440e44 <_obstack_memory_used@@Base+0x91c4>  // b.any
  44035c:	ldrb	w0, [x19, #8]
  440360:	cmp	w0, #0x1
  440364:	b.ne	440374 <_obstack_memory_used@@Base+0x86f4>  // b.any
  440368:	ldrb	w0, [x19]
  44036c:	cmp	w0, #0x2c
  440370:	b.eq	440e54 <_obstack_memory_used@@Base+0x91d4>  // b.none
  440374:	mov	w0, #0xa                   	// #10
  440378:	str	w0, [x22]
  44037c:	b	440f84 <_obstack_memory_used@@Base+0x9304>
  440380:	mov	x2, x23
  440384:	mov	x1, x21
  440388:	mov	x0, x19
  44038c:	bl	43c270 <_obstack_memory_used@@Base+0x45f0>
  440390:	mov	x3, x19
  440394:	mov	x2, #0x0                   	// #0
  440398:	mov	x1, #0x0                   	// #0
  44039c:	mov	x0, x20
  4403a0:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  4403a4:	mov	x24, x0
  4403a8:	mov	x2, x0
  4403ac:	mov	x1, x26
  4403b0:	mov	x0, x20
  4403b4:	mov	w3, #0x10                  	// #16
  4403b8:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  4403bc:	mov	x26, x0
  4403c0:	cmp	x24, #0x0
  4403c4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4403c8:	b.eq	4402c8 <_obstack_memory_used@@Base+0x8648>  // b.none
  4403cc:	ldr	x0, [x21, #72]
  4403d0:	ldr	x1, [x21, #104]
  4403d4:	cmp	x1, x0
  4403d8:	b.le	4402e0 <_obstack_memory_used@@Base+0x8660>
  4403dc:	ldr	x1, [x21, #48]
  4403e0:	cmp	x0, x1
  4403e4:	b.eq	4402e0 <_obstack_memory_used@@Base+0x8660>  // b.none
  4403e8:	ldr	x1, [x21, #16]
  4403ec:	ldr	w0, [x1, x0, lsl #2]
  4403f0:	cmn	w0, #0x1
  4403f4:	b.eq	440380 <_obstack_memory_used@@Base+0x8700>  // b.none
  4403f8:	b	4402e0 <_obstack_memory_used@@Base+0x8660>
  4403fc:	ldr	x25, [x24, #48]
  440400:	orr	x2, x23, #0x800000
  440404:	mov	x1, x21
  440408:	add	x0, x25, #0x1
  44040c:	str	x0, [x24, #48]
  440410:	mov	x0, x19
  440414:	bl	43c270 <_obstack_memory_used@@Base+0x45f0>
  440418:	ldrb	w0, [x19, #8]
  44041c:	cmp	w0, #0x9
  440420:	b.eq	44047c <_obstack_memory_used@@Base+0x87fc>  // b.none
  440424:	mov	x2, x19
  440428:	mov	x1, x24
  44042c:	mov	x5, x22
  440430:	add	x4, x26, #0x1
  440434:	mov	x3, x23
  440438:	mov	x0, x21
  44043c:	bl	4412d4 <_obstack_memory_used@@Base+0x9654>
  440440:	mov	x1, x0
  440444:	ldr	w2, [x22]
  440448:	cbnz	w2, 440474 <_obstack_memory_used@@Base+0x87f4>
  44044c:	ldrb	w2, [x19, #8]
  440450:	cmp	w2, #0x9
  440454:	b.eq	440480 <_obstack_memory_used@@Base+0x8800>  // b.none
  440458:	cbz	x0, 44046c <_obstack_memory_used@@Base+0x87ec>
  44045c:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1380>
  440460:	mov	x2, #0x0                   	// #0
  440464:	add	x1, x1, #0x78
  440468:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  44046c:	mov	w0, #0x8                   	// #8
  440470:	str	w0, [x22]
  440474:	mov	x26, #0x0                   	// #0
  440478:	b	4404c0 <_obstack_memory_used@@Base+0x8840>
  44047c:	mov	x1, #0x0                   	// #0
  440480:	cmp	x25, #0x8
  440484:	b.hi	4404a0 <_obstack_memory_used@@Base+0x8820>  // b.pmore
  440488:	mov	w0, #0x1                   	// #1
  44048c:	ldr	x2, [x20, #168]
  440490:	lsl	w0, w0, w25
  440494:	sxtw	x0, w0
  440498:	orr	x0, x2, x0
  44049c:	str	x0, [x20, #168]
  4404a0:	mov	x0, x20
  4404a4:	mov	w3, #0x11                  	// #17
  4404a8:	mov	x2, #0x0                   	// #0
  4404ac:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  4404b0:	mov	x26, x0
  4404b4:	cbnz	x0, 4404d4 <_obstack_memory_used@@Base+0x8854>
  4404b8:	mov	w0, #0xc                   	// #12
  4404bc:	str	w0, [x22]
  4404c0:	ldr	w0, [x22]
  4404c4:	cbz	w0, 4402e0 <_obstack_memory_used@@Base+0x8660>
  4404c8:	cbnz	x26, 4402e0 <_obstack_memory_used@@Base+0x8660>
  4404cc:	mov	x26, #0x0                   	// #0
  4404d0:	b	440ce0 <_obstack_memory_used@@Base+0x9060>
  4404d4:	str	x25, [x0, #40]
  4404d8:	b	4404c0 <_obstack_memory_used@@Base+0x8840>
  4404dc:	mov	x1, #0x1                   	// #1
  4404e0:	mov	x0, #0x20                  	// #32
  4404e4:	str	xzr, [sp, #168]
  4404e8:	bl	4047a0 <calloc@plt>
  4404ec:	mov	x1, #0x1                   	// #1
  4404f0:	mov	x25, x0
  4404f4:	mov	x0, #0x50                  	// #80
  4404f8:	bl	4047a0 <calloc@plt>
  4404fc:	cmp	x25, #0x0
  440500:	mov	x24, x0
  440504:	cset	w0, eq  // eq = none
  440508:	cmp	x24, #0x0
  44050c:	csinc	w0, w0, wzr, ne  // ne = any
  440510:	cbz	w0, 44052c <_obstack_memory_used@@Base+0x88ac>
  440514:	mov	x0, x25
  440518:	bl	404ae0 <free@plt>
  44051c:	mov	x0, x24
  440520:	bl	404ae0 <free@plt>
  440524:	mov	w0, #0xc                   	// #12
  440528:	b	440470 <_obstack_memory_used@@Base+0x87f0>
  44052c:	mov	x2, x23
  440530:	mov	x1, x21
  440534:	mov	x0, x19
  440538:	bl	437f74 <_obstack_memory_used@@Base+0x2f4>
  44053c:	str	w0, [sp, #96]
  440540:	ldrb	w0, [x19, #8]
  440544:	cmp	w0, #0x2
  440548:	b.ne	440558 <_obstack_memory_used@@Base+0x88d8>  // b.any
  44054c:	mov	w0, #0x2                   	// #2
  440550:	str	w0, [x22]
  440554:	b	4406b8 <_obstack_memory_used@@Base+0x8a38>
  440558:	cmp	w0, #0x19
  44055c:	b.ne	440640 <_obstack_memory_used@@Base+0x89c0>  // b.any
  440560:	ldrb	w0, [x24, #32]
  440564:	orr	w0, w0, #0x1
  440568:	strb	w0, [x24, #32]
  44056c:	tbz	w23, #8, 44057c <_obstack_memory_used@@Base+0x88fc>
  440570:	mov	x0, x25
  440574:	mov	x1, #0xa                   	// #10
  440578:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  44057c:	ldr	x0, [x21, #72]
  440580:	mov	x2, x23
  440584:	ldr	w1, [sp, #96]
  440588:	add	x0, x0, w1, sxtw
  44058c:	str	x0, [x21, #72]
  440590:	mov	x1, x21
  440594:	mov	x0, x19
  440598:	bl	437f74 <_obstack_memory_used@@Base+0x2f4>
  44059c:	str	w0, [sp, #96]
  4405a0:	ldrb	w0, [x19, #8]
  4405a4:	cmp	w0, #0x2
  4405a8:	b.eq	44054c <_obstack_memory_used@@Base+0x88cc>  // b.none
  4405ac:	mov	w0, #0x1                   	// #1
  4405b0:	str	w0, [sp, #152]
  4405b4:	ldrb	w0, [x19, #8]
  4405b8:	cmp	w0, #0x15
  4405bc:	b.ne	4405c8 <_obstack_memory_used@@Base+0x8948>  // b.any
  4405c0:	mov	w0, #0x1                   	// #1
  4405c4:	strb	w0, [x19, #8]
  4405c8:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  4405cc:	mov	w5, #0x1                   	// #1
  4405d0:	add	x0, x0, #0xa98
  4405d4:	stp	xzr, xzr, [sp, #104]
  4405d8:	str	x0, [sp, #128]
  4405dc:	ldr	w3, [sp, #96]
  4405e0:	mov	w13, #0x3                   	// #3
  4405e4:	add	x0, sp, #0xe0
  4405e8:	mov	x4, x23
  4405ec:	mov	x2, x19
  4405f0:	mov	x1, x21
  4405f4:	str	w13, [sp, #176]
  4405f8:	str	x0, [sp, #184]
  4405fc:	add	x0, sp, #0xb0
  440600:	bl	43bac8 <_obstack_memory_used@@Base+0x3e48>
  440604:	cbnz	w0, 440550 <_obstack_memory_used@@Base+0x88d0>
  440608:	mov	x2, x23
  44060c:	mov	x1, x21
  440610:	mov	x0, x19
  440614:	bl	437f74 <_obstack_memory_used@@Base+0x2f4>
  440618:	str	w0, [sp, #96]
  44061c:	ldr	w0, [sp, #176]
  440620:	cmp	w0, #0x4
  440624:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  440628:	b.eq	4406e8 <_obstack_memory_used@@Base+0x8a68>  // b.none
  44062c:	ldrb	w0, [x19, #8]
  440630:	cmp	w0, #0x2
  440634:	b.ne	440648 <_obstack_memory_used@@Base+0x89c8>  // b.any
  440638:	mov	w0, #0x7                   	// #7
  44063c:	b	440550 <_obstack_memory_used@@Base+0x88d0>
  440640:	str	wzr, [sp, #152]
  440644:	b	4405b4 <_obstack_memory_used@@Base+0x8934>
  440648:	cmp	w0, #0x16
  44064c:	b.ne	4406e8 <_obstack_memory_used@@Base+0x8a68>  // b.any
  440650:	ldr	x0, [x21, #72]
  440654:	mov	x2, x23
  440658:	ldr	w1, [sp, #96]
  44065c:	add	x0, x0, w1, sxtw
  440660:	str	x0, [x21, #72]
  440664:	mov	x1, x21
  440668:	add	x0, sp, #0xd0
  44066c:	bl	437f74 <_obstack_memory_used@@Base+0x2f4>
  440670:	mov	w3, w0
  440674:	ldrb	w0, [sp, #216]
  440678:	cmp	w0, #0x2
  44067c:	b.eq	440638 <_obstack_memory_used@@Base+0x89b8>  // b.none
  440680:	cmp	w0, #0x15
  440684:	b.eq	4406cc <_obstack_memory_used@@Base+0x8a4c>  // b.none
  440688:	add	x0, sp, #0x100
  44068c:	mov	x4, x23
  440690:	add	x2, sp, #0xd0
  440694:	mov	x1, x21
  440698:	mov	w5, #0x1                   	// #1
  44069c:	str	w13, [sp, #192]
  4406a0:	str	x0, [sp, #200]
  4406a4:	add	x0, sp, #0xc0
  4406a8:	bl	43bac8 <_obstack_memory_used@@Base+0x3e48>
  4406ac:	mov	w27, w0
  4406b0:	cbz	w0, 440708 <_obstack_memory_used@@Base+0x8a88>
  4406b4:	str	w0, [x22]
  4406b8:	mov	x0, x25
  4406bc:	bl	404ae0 <free@plt>
  4406c0:	mov	x0, x24
  4406c4:	bl	439008 <_obstack_memory_used@@Base+0x1388>
  4406c8:	b	440474 <_obstack_memory_used@@Base+0x87f4>
  4406cc:	ldr	w0, [sp, #96]
  4406d0:	ldr	x1, [x21, #72]
  4406d4:	neg	w0, w0
  4406d8:	add	x0, x1, w0, sxtw
  4406dc:	str	x0, [x21, #72]
  4406e0:	mov	w0, #0x1                   	// #1
  4406e4:	strb	w0, [x19, #8]
  4406e8:	ldr	w0, [sp, #176]
  4406ec:	cmp	w0, #0x4
  4406f0:	b.hi	440a18 <_obstack_memory_used@@Base+0x8d98>  // b.pmore
  4406f4:	ldr	x1, [sp, #128]
  4406f8:	ldrh	w0, [x1, w0, uxtw #1]
  4406fc:	adr	x1, 440708 <_obstack_memory_used@@Base+0x8a88>
  440700:	add	x0, x1, w0, sxth #2
  440704:	br	x0
  440708:	mov	x1, x21
  44070c:	mov	x2, x23
  440710:	mov	x0, x19
  440714:	bl	437f74 <_obstack_memory_used@@Base+0x2f4>
  440718:	str	w0, [sp, #96]
  44071c:	ldr	w0, [x20, #180]
  440720:	ldr	w1, [sp, #176]
  440724:	cmp	w0, #0x2
  440728:	csel	x26, x24, xzr, ge  // ge = tcont
  44072c:	cmp	w1, #0x2
  440730:	ccmp	w1, #0x4, #0x4, ne  // ne = any
  440734:	b.eq	44095c <_obstack_memory_used@@Base+0x8cdc>  // b.none
  440738:	ldr	w4, [sp, #192]
  44073c:	cmp	w4, #0x2
  440740:	b.eq	44095c <_obstack_memory_used@@Base+0x8cdc>  // b.none
  440744:	cmp	w4, #0x4
  440748:	b.eq	44095c <_obstack_memory_used@@Base+0x8cdc>  // b.none
  44074c:	cmp	w1, #0x3
  440750:	cset	w0, eq  // eq = none
  440754:	str	w0, [sp, #120]
  440758:	b.ne	440784 <_obstack_memory_used@@Base+0x8b04>  // b.any
  44075c:	ldr	x0, [sp, #184]
  440760:	str	w1, [sp, #136]
  440764:	str	w4, [sp, #144]
  440768:	bl	404280 <strlen@plt>
  44076c:	cmp	x0, #0x1
  440770:	ldr	w1, [sp, #136]
  440774:	ldr	w4, [sp, #144]
  440778:	b.ls	441180 <_obstack_memory_used@@Base+0x9500>  // b.plast
  44077c:	mov	w27, #0x3                   	// #3
  440780:	b	440898 <_obstack_memory_used@@Base+0x8c18>
  440784:	cmp	w4, #0x3
  440788:	b.ne	44118c <_obstack_memory_used@@Base+0x950c>  // b.any
  44078c:	ldr	x0, [sp, #200]
  440790:	str	w1, [sp, #136]
  440794:	str	w4, [sp, #144]
  440798:	bl	404280 <strlen@plt>
  44079c:	cmp	x0, #0x1
  4407a0:	b.hi	44077c <_obstack_memory_used@@Base+0x8afc>  // b.pmore
  4407a4:	ldr	w1, [sp, #136]
  4407a8:	ldr	w4, [sp, #144]
  4407ac:	cbnz	w1, 4408bc <_obstack_memory_used@@Base+0x8c3c>
  4407b0:	ldrb	w28, [sp, #184]
  4407b4:	cbnz	w4, 4408e0 <_obstack_memory_used@@Base+0x8c60>
  4407b8:	ldrb	w4, [sp, #200]
  4407bc:	ldr	w0, [sp, #120]
  4407c0:	cmp	w1, #0x0
  4407c4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4407c8:	b.eq	4408f0 <_obstack_memory_used@@Base+0x8c70>  // b.none
  4407cc:	cbz	x26, 4407e4 <_obstack_memory_used@@Base+0x8b64>
  4407d0:	mov	w0, w28
  4407d4:	str	w4, [sp, #120]
  4407d8:	bl	404950 <btowc@plt>
  4407dc:	mov	w28, w0
  4407e0:	ldr	w4, [sp, #120]
  4407e4:	ldr	w0, [sp, #192]
  4407e8:	cmp	w0, #0x0
  4407ec:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  4407f0:	b.ne	4408f8 <_obstack_memory_used@@Base+0x8c78>  // b.any
  4407f4:	cbz	x26, 440804 <_obstack_memory_used@@Base+0x8b84>
  4407f8:	mov	w0, w4
  4407fc:	bl	404950 <btowc@plt>
  440800:	mov	w4, w0
  440804:	cmn	w28, #0x1
  440808:	ccmn	w4, #0x1, #0x4, ne  // ne = any
  44080c:	b.eq	44077c <_obstack_memory_used@@Base+0x8afc>  // b.none
  440810:	tbz	w23, #16, 44081c <_obstack_memory_used@@Base+0x8b9c>
  440814:	cmp	w28, w4
  440818:	b.hi	44095c <_obstack_memory_used@@Base+0x8cdc>  // b.pmore
  44081c:	cbz	x26, 440928 <_obstack_memory_used@@Base+0x8ca8>
  440820:	ldr	x0, [x26, #64]
  440824:	ldr	x1, [sp, #112]
  440828:	cmp	x0, x1
  44082c:	b.ne	440908 <_obstack_memory_used@@Base+0x8c88>  // b.any
  440830:	lsl	x6, x1, #1
  440834:	str	w4, [sp, #156]
  440838:	ldr	x0, [x26, #8]
  44083c:	add	x6, x6, #0x1
  440840:	lsl	x1, x6, #2
  440844:	stp	x1, x6, [sp, #136]
  440848:	bl	404820 <realloc@plt>
  44084c:	mov	x5, x0
  440850:	str	x5, [sp, #120]
  440854:	ldr	x0, [x26, #16]
  440858:	ldr	x1, [sp, #136]
  44085c:	bl	404820 <realloc@plt>
  440860:	mov	x1, x0
  440864:	ldr	x5, [sp, #120]
  440868:	ldr	w4, [sp, #156]
  44086c:	cmp	x5, #0x0
  440870:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  440874:	ldr	x6, [sp, #144]
  440878:	b.ne	440900 <_obstack_memory_used@@Base+0x8c80>  // b.any
  44087c:	mov	x0, x5
  440880:	str	x1, [sp, #120]
  440884:	bl	404ae0 <free@plt>
  440888:	mov	w27, #0xc                   	// #12
  44088c:	ldr	x1, [sp, #120]
  440890:	mov	x0, x1
  440894:	bl	404ae0 <free@plt>
  440898:	str	w27, [x22]
  44089c:	cbnz	w27, 4406b8 <_obstack_memory_used@@Base+0x8a38>
  4408a0:	ldrb	w0, [x19, #8]
  4408a4:	cmp	w0, #0x2
  4408a8:	b.eq	440638 <_obstack_memory_used@@Base+0x89b8>  // b.none
  4408ac:	cmp	w0, #0x15
  4408b0:	b.eq	440a3c <_obstack_memory_used@@Base+0x8dbc>  // b.none
  4408b4:	mov	w5, #0x0                   	// #0
  4408b8:	b	4405dc <_obstack_memory_used@@Base+0x895c>
  4408bc:	cmp	w1, #0x3
  4408c0:	b.ne	4408d0 <_obstack_memory_used@@Base+0x8c50>  // b.any
  4408c4:	ldr	x0, [sp, #184]
  4408c8:	ldrb	w28, [x0]
  4408cc:	b	4407b4 <_obstack_memory_used@@Base+0x8b34>
  4408d0:	mov	w28, #0x0                   	// #0
  4408d4:	ldr	x0, [sp, #200]
  4408d8:	ldrb	w4, [x0]
  4408dc:	b	4407bc <_obstack_memory_used@@Base+0x8b3c>
  4408e0:	cmp	w4, #0x3
  4408e4:	b.eq	4408d4 <_obstack_memory_used@@Base+0x8c54>  // b.none
  4408e8:	mov	w4, #0x0                   	// #0
  4408ec:	b	4407bc <_obstack_memory_used@@Base+0x8b3c>
  4408f0:	ldr	w28, [sp, #184]
  4408f4:	b	4407e4 <_obstack_memory_used@@Base+0x8b64>
  4408f8:	ldr	w4, [sp, #200]
  4408fc:	b	440804 <_obstack_memory_used@@Base+0x8b84>
  440900:	stp	x5, x0, [x26, #8]
  440904:	str	x6, [sp, #112]
  440908:	ldr	x0, [x26, #64]
  44090c:	ldr	x5, [x26, #8]
  440910:	lsl	x1, x0, #2
  440914:	add	x0, x0, #0x1
  440918:	str	w28, [x5, x1]
  44091c:	ldr	x5, [x26, #16]
  440920:	str	x0, [x26, #64]
  440924:	str	w4, [x5, x1]
  440928:	mov	x5, #0x0                   	// #0
  44092c:	cmp	w5, w28
  440930:	ccmp	w5, w4, #0x2, cs  // cs = hs, nlast
  440934:	b.hi	44094c <_obstack_memory_used@@Base+0x8ccc>  // b.pmore
  440938:	mov	x1, x5
  44093c:	mov	x0, x25
  440940:	str	w4, [sp, #120]
  440944:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  440948:	ldr	w4, [sp, #120]
  44094c:	add	x5, x5, #0x1
  440950:	cmp	x5, #0x100
  440954:	b.ne	44092c <_obstack_memory_used@@Base+0x8cac>  // b.any
  440958:	b	440898 <_obstack_memory_used@@Base+0x8c18>
  44095c:	mov	w27, #0xb                   	// #11
  440960:	b	440898 <_obstack_memory_used@@Base+0x8c18>
  440964:	ldrb	w1, [sp, #184]
  440968:	mov	x0, x25
  44096c:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  440970:	b	4408a0 <_obstack_memory_used@@Base+0x8c20>
  440974:	ldr	x0, [x24, #40]
  440978:	ldr	x1, [sp, #104]
  44097c:	cmp	x0, x1
  440980:	b.ne	4409a4 <_obstack_memory_used@@Base+0x8d24>  // b.any
  440984:	lsl	x28, x1, #1
  440988:	add	x0, x28, #0x1
  44098c:	str	x0, [sp, #104]
  440990:	lsl	x1, x0, #2
  440994:	ldr	x0, [x24]
  440998:	bl	404820 <realloc@plt>
  44099c:	cbz	x0, 441178 <_obstack_memory_used@@Base+0x94f8>
  4409a0:	str	x0, [x24]
  4409a4:	ldr	x0, [x24, #40]
  4409a8:	ldr	x1, [x24]
  4409ac:	add	x2, x0, #0x1
  4409b0:	str	x2, [x24, #40]
  4409b4:	ldr	w2, [sp, #184]
  4409b8:	str	w2, [x1, x0, lsl #2]
  4409bc:	b	4408a0 <_obstack_memory_used@@Base+0x8c20>
  4409c0:	ldr	x27, [sp, #184]
  4409c4:	mov	x0, x27
  4409c8:	bl	404280 <strlen@plt>
  4409cc:	cmp	x0, #0x1
  4409d0:	b.eq	4409dc <_obstack_memory_used@@Base+0x8d5c>  // b.none
  4409d4:	mov	w0, #0x3                   	// #3
  4409d8:	b	440550 <_obstack_memory_used@@Base+0x88d0>
  4409dc:	ldrb	w1, [x27]
  4409e0:	mov	x0, x25
  4409e4:	bl	437db4 <_obstack_memory_used@@Base+0x134>
  4409e8:	str	wzr, [x22]
  4409ec:	b	4408a0 <_obstack_memory_used@@Base+0x8c20>
  4409f0:	ldr	x0, [x21, #120]
  4409f4:	mov	x5, x23
  4409f8:	ldr	x4, [sp, #184]
  4409fc:	add	x3, sp, #0xa8
  440a00:	mov	x2, x24
  440a04:	mov	x1, x25
  440a08:	bl	43976c <_obstack_memory_used@@Base+0x1aec>
  440a0c:	str	w0, [x22]
  440a10:	cbz	w0, 4408a0 <_obstack_memory_used@@Base+0x8c20>
  440a14:	b	4406b8 <_obstack_memory_used@@Base+0x8a38>
  440a18:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  440a1c:	add	x3, x3, #0xab0
  440a20:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  440a24:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  440a28:	add	x3, x3, #0x4d
  440a2c:	add	x1, x1, #0x8e2
  440a30:	add	x0, x0, #0x66e
  440a34:	mov	w2, #0xced                 	// #3309
  440a38:	bl	404e00 <__assert_fail@plt>
  440a3c:	ldr	x0, [x21, #72]
  440a40:	ldr	w1, [sp, #96]
  440a44:	add	x0, x0, w1, sxtw
  440a48:	str	x0, [x21, #72]
  440a4c:	ldr	w0, [sp, #152]
  440a50:	cbz	w0, 440a5c <_obstack_memory_used@@Base+0x8ddc>
  440a54:	mov	x0, x25
  440a58:	bl	437dd4 <_obstack_memory_used@@Base+0x154>
  440a5c:	ldr	w0, [x20, #180]
  440a60:	cmp	w0, #0x1
  440a64:	b.le	440a74 <_obstack_memory_used@@Base+0x8df4>
  440a68:	ldr	x1, [x20, #120]
  440a6c:	mov	x0, x25
  440a70:	bl	437e18 <_obstack_memory_used@@Base+0x198>
  440a74:	ldr	x0, [x24, #40]
  440a78:	cbnz	x0, 440ab0 <_obstack_memory_used@@Base+0x8e30>
  440a7c:	ldr	x0, [x24, #48]
  440a80:	cbnz	x0, 440ab0 <_obstack_memory_used@@Base+0x8e30>
  440a84:	ldr	x0, [x24, #56]
  440a88:	cbnz	x0, 440ab0 <_obstack_memory_used@@Base+0x8e30>
  440a8c:	ldr	x0, [x24, #64]
  440a90:	cbnz	x0, 440ab0 <_obstack_memory_used@@Base+0x8e30>
  440a94:	ldr	w0, [x20, #180]
  440a98:	cmp	w0, #0x1
  440a9c:	b.le	440b08 <_obstack_memory_used@@Base+0x8e88>
  440aa0:	ldr	x0, [x24, #72]
  440aa4:	cbnz	x0, 440ab0 <_obstack_memory_used@@Base+0x8e30>
  440aa8:	ldrb	w0, [x24, #32]
  440aac:	tbz	w0, #0, 440b08 <_obstack_memory_used@@Base+0x8e88>
  440ab0:	ldrb	w0, [x20, #176]
  440ab4:	add	x3, sp, #0x100
  440ab8:	mov	x2, #0x0                   	// #0
  440abc:	mov	x1, #0x0                   	// #0
  440ac0:	orr	w0, w0, #0x2
  440ac4:	strb	w0, [x20, #176]
  440ac8:	mov	w0, #0x6                   	// #6
  440acc:	str	x24, [sp, #256]
  440ad0:	strb	w0, [sp, #264]
  440ad4:	mov	x0, x20
  440ad8:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  440adc:	mov	x26, x0
  440ae0:	mov	x0, #0x0                   	// #0
  440ae4:	cbz	x26, 441178 <_obstack_memory_used@@Base+0x94f8>
  440ae8:	ldr	x1, [x25, x0, lsl #3]
  440aec:	cbnz	x1, 441138 <_obstack_memory_used@@Base+0x94b8>
  440af0:	add	x0, x0, #0x1
  440af4:	cmp	x0, #0x4
  440af8:	b.ne	440ae8 <_obstack_memory_used@@Base+0x8e68>  // b.any
  440afc:	mov	x0, x25
  440b00:	bl	404ae0 <free@plt>
  440b04:	b	4404c0 <_obstack_memory_used@@Base+0x8840>
  440b08:	mov	x0, x24
  440b0c:	bl	439008 <_obstack_memory_used@@Base+0x1388>
  440b10:	mov	w0, #0x3                   	// #3
  440b14:	add	x3, sp, #0x100
  440b18:	mov	x2, #0x0                   	// #0
  440b1c:	mov	x1, #0x0                   	// #0
  440b20:	str	x25, [sp, #256]
  440b24:	strb	w0, [sp, #264]
  440b28:	mov	x0, x20
  440b2c:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  440b30:	b	441170 <_obstack_memory_used@@Base+0x94f0>
  440b34:	ldr	x1, [x19]
  440b38:	mov	w0, #0x1                   	// #1
  440b3c:	lsl	w0, w0, w1
  440b40:	ldr	x1, [x20, #168]
  440b44:	sxtw	x0, w0
  440b48:	tst	x0, x1
  440b4c:	b.ne	440b58 <_obstack_memory_used@@Base+0x8ed8>  // b.any
  440b50:	mov	w0, #0x6                   	// #6
  440b54:	b	4402cc <_obstack_memory_used@@Base+0x864c>
  440b58:	ldr	x1, [x20, #160]
  440b5c:	mov	x3, x19
  440b60:	mov	x2, #0x0                   	// #0
  440b64:	orr	x0, x1, x0
  440b68:	str	x0, [x20, #160]
  440b6c:	mov	x1, #0x0                   	// #0
  440b70:	mov	x0, x20
  440b74:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  440b78:	mov	x26, x0
  440b7c:	cbz	x0, 4402c8 <_obstack_memory_used@@Base+0x8648>
  440b80:	ldr	x0, [x20, #152]
  440b84:	add	x0, x0, #0x1
  440b88:	str	x0, [x20, #152]
  440b8c:	ldrb	w0, [x20, #176]
  440b90:	orr	w0, w0, #0x2
  440b94:	strb	w0, [x20, #176]
  440b98:	b	4402e0 <_obstack_memory_used@@Base+0x8660>
  440b9c:	cbz	x27, 440ba8 <_obstack_memory_used@@Base+0x8f28>
  440ba0:	mov	w0, #0xd                   	// #13
  440ba4:	b	4402cc <_obstack_memory_used@@Base+0x864c>
  440ba8:	cbnz	x28, 440ba0 <_obstack_memory_used@@Base+0x8f20>
  440bac:	str	x3, [sp, #96]
  440bb0:	cbz	x3, 440bcc <_obstack_memory_used@@Base+0x8f4c>
  440bb4:	mov	x2, x23
  440bb8:	mov	x1, x21
  440bbc:	mov	x0, x19
  440bc0:	bl	43c270 <_obstack_memory_used@@Base+0x45f0>
  440bc4:	ldr	x3, [sp, #96]
  440bc8:	b	440288 <_obstack_memory_used@@Base+0x8608>
  440bcc:	cmp	w0, #0x9
  440bd0:	b.ne	440be0 <_obstack_memory_used@@Base+0x8f60>  // b.any
  440bd4:	tbnz	w23, #17, 440be0 <_obstack_memory_used@@Base+0x8f60>
  440bd8:	mov	w0, #0x10                  	// #16
  440bdc:	b	4402cc <_obstack_memory_used@@Base+0x864c>
  440be0:	mov	w0, #0x1                   	// #1
  440be4:	strb	w0, [x19, #8]
  440be8:	mov	x3, x19
  440bec:	mov	x0, x20
  440bf0:	mov	x2, #0x0                   	// #0
  440bf4:	mov	x1, #0x0                   	// #0
  440bf8:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  440bfc:	mov	x26, x0
  440c00:	cbnz	x0, 4402e0 <_obstack_memory_used@@Base+0x8660>
  440c04:	b	4402c8 <_obstack_memory_used@@Base+0x8648>
  440c08:	ldr	w1, [x19]
  440c0c:	mov	w0, #0x30f                 	// #783
  440c10:	tst	w1, w0
  440c14:	b.eq	440c4c <_obstack_memory_used@@Base+0x8fcc>  // b.none
  440c18:	ldrb	w0, [x20, #176]
  440c1c:	tbnz	w0, #4, 440c4c <_obstack_memory_used@@Base+0x8fcc>
  440c20:	orr	w0, w0, #0x10
  440c24:	strb	w0, [x20, #176]
  440c28:	mov	w1, w0
  440c2c:	tbnz	w0, #3, 440d4c <_obstack_memory_used@@Base+0x90cc>
  440c30:	mov	x0, #0x3ff000000000000     	// #287948901175001088
  440c34:	str	x0, [x20, #184]
  440c38:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
  440c3c:	movk	x0, #0x87ff, lsl #16
  440c40:	str	x0, [x20, #192]
  440c44:	tbz	w1, #2, 440d70 <_obstack_memory_used@@Base+0x90f0>
  440c48:	stp	xzr, xzr, [x20, #200]
  440c4c:	ldr	w0, [x19]
  440c50:	mov	w1, #0x200                 	// #512
  440c54:	cmp	w0, #0x100
  440c58:	ccmp	w0, w1, #0x4, ne  // ne = any
  440c5c:	b.ne	440da4 <_obstack_memory_used@@Base+0x9124>  // b.any
  440c60:	cmp	w0, #0x100
  440c64:	b.ne	440d7c <_obstack_memory_used@@Base+0x90fc>  // b.any
  440c68:	mov	w0, #0x6                   	// #6
  440c6c:	str	w0, [x19]
  440c70:	mov	x3, x19
  440c74:	mov	x0, x20
  440c78:	mov	x2, #0x0                   	// #0
  440c7c:	mov	x1, #0x0                   	// #0
  440c80:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  440c84:	mov	x24, x0
  440c88:	mov	w0, #0x9                   	// #9
  440c8c:	str	w0, [x19]
  440c90:	mov	x3, x19
  440c94:	mov	x2, #0x0                   	// #0
  440c98:	mov	x1, #0x0                   	// #0
  440c9c:	mov	x0, x20
  440ca0:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  440ca4:	mov	x1, x24
  440ca8:	mov	x25, x0
  440cac:	mov	x2, x0
  440cb0:	mov	w3, #0xa                   	// #10
  440cb4:	mov	x0, x20
  440cb8:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  440cbc:	cmp	x24, #0x0
  440cc0:	mov	x26, x0
  440cc4:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  440cc8:	b.eq	4402c8 <_obstack_memory_used@@Base+0x8648>  // b.none
  440ccc:	cbz	x26, 4402c8 <_obstack_memory_used@@Base+0x8648>
  440cd0:	mov	x2, x23
  440cd4:	mov	x1, x21
  440cd8:	mov	x0, x19
  440cdc:	bl	43c270 <_obstack_memory_used@@Base+0x45f0>
  440ce0:	mov	x0, x26
  440ce4:	ldp	x19, x20, [sp, #16]
  440ce8:	ldp	x21, x22, [sp, #32]
  440cec:	ldp	x23, x24, [sp, #48]
  440cf0:	ldp	x25, x26, [sp, #64]
  440cf4:	ldp	x27, x28, [sp, #80]
  440cf8:	ldp	x29, x30, [sp], #288
  440cfc:	ret
  440d00:	ldrh	w4, [x7, x3, lsl #1]
  440d04:	tbnz	w4, #3, 440d10 <_obstack_memory_used@@Base+0x9090>
  440d08:	cmp	w3, #0x5f
  440d0c:	b.ne	440d20 <_obstack_memory_used@@Base+0x90a0>  // b.any
  440d10:	ldr	x5, [x6, x0, lsl #3]
  440d14:	lsl	x4, x8, x2
  440d18:	orr	x4, x5, x4
  440d1c:	str	x4, [x6, x0, lsl #3]
  440d20:	add	w2, w2, #0x1
  440d24:	add	x3, x3, #0x1
  440d28:	cmp	w2, #0x40
  440d2c:	b.ne	440d00 <_obstack_memory_used@@Base+0x9080>  // b.any
  440d30:	add	x0, x0, #0x1
  440d34:	add	x1, x1, #0x40
  440d38:	cmp	w0, #0x3
  440d3c:	b.gt	440c4c <_obstack_memory_used@@Base+0x8fcc>
  440d40:	mov	x3, x1
  440d44:	mov	w2, #0x0                   	// #0
  440d48:	b	440d00 <_obstack_memory_used@@Base+0x9080>
  440d4c:	mov	w25, #0x0                   	// #0
  440d50:	mov	w24, #0x0                   	// #0
  440d54:	bl	404a60 <__ctype_b_loc@plt>
  440d58:	sxtw	x1, w25
  440d5c:	add	x6, x20, #0xb8
  440d60:	mov	x8, #0x1                   	// #1
  440d64:	ldr	x7, [x0]
  440d68:	sxtw	x0, w24
  440d6c:	b	440d40 <_obstack_memory_used@@Base+0x90c0>
  440d70:	mov	w25, #0x80                  	// #128
  440d74:	mov	w24, #0x2                   	// #2
  440d78:	b	440d54 <_obstack_memory_used@@Base+0x90d4>
  440d7c:	mov	w0, #0x5                   	// #5
  440d80:	str	w0, [x19]
  440d84:	mov	x3, x19
  440d88:	mov	x0, x20
  440d8c:	mov	x2, #0x0                   	// #0
  440d90:	mov	x1, #0x0                   	// #0
  440d94:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  440d98:	mov	x24, x0
  440d9c:	mov	w0, #0xa                   	// #10
  440da0:	b	440c8c <_obstack_memory_used@@Base+0x900c>
  440da4:	mov	x3, x19
  440da8:	mov	x0, x20
  440dac:	mov	x2, #0x0                   	// #0
  440db0:	mov	x1, #0x0                   	// #0
  440db4:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  440db8:	mov	x26, x0
  440dbc:	b	440ccc <_obstack_memory_used@@Base+0x904c>
  440dc0:	mov	x3, x19
  440dc4:	mov	x0, x20
  440dc8:	mov	x2, #0x0                   	// #0
  440dcc:	mov	x1, #0x0                   	// #0
  440dd0:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  440dd4:	mov	x26, x0
  440dd8:	cbz	x0, 4402c8 <_obstack_memory_used@@Base+0x8648>
  440ddc:	ldr	w0, [x20, #180]
  440de0:	cmp	w0, #0x1
  440de4:	b.gt	440b8c <_obstack_memory_used@@Base+0x8f0c>
  440de8:	b	4402e0 <_obstack_memory_used@@Base+0x8660>
  440dec:	cmp	w0, #0x21
  440df0:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  440df4:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x18380>
  440df8:	mov	x5, x22
  440dfc:	cset	w4, eq  // eq = none
  440e00:	add	x3, x3, #0x9a0
  440e04:	add	x2, x2, #0x94a
  440e08:	ldr	x1, [x21, #120]
  440e0c:	mov	x0, x20
  440e10:	bl	43a798 <_obstack_memory_used@@Base+0x2b18>
  440e14:	mov	x26, x0
  440e18:	b	4404c0 <_obstack_memory_used@@Base+0x8840>
  440e1c:	cmp	w0, #0x23
  440e20:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x15380>
  440e24:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x18380>
  440e28:	mov	x5, x22
  440e2c:	cset	w4, eq  // eq = none
  440e30:	add	x3, x3, #0x41a
  440e34:	add	x2, x2, #0x956
  440e38:	b	440e08 <_obstack_memory_used@@Base+0x9188>
  440e3c:	mov	w0, #0x5                   	// #5
  440e40:	b	4402cc <_obstack_memory_used@@Base+0x864c>
  440e44:	cmn	x0, #0x2
  440e48:	b.ne	440e58 <_obstack_memory_used@@Base+0x91d8>  // b.any
  440e4c:	mov	x27, #0x0                   	// #0
  440e50:	b	440e94 <_obstack_memory_used@@Base+0x9214>
  440e54:	mov	x5, #0x0                   	// #0
  440e58:	ldrb	w0, [x19, #8]
  440e5c:	cmp	w0, #0x18
  440e60:	b.eq	440eb8 <_obstack_memory_used@@Base+0x9238>  // b.none
  440e64:	cmp	w0, #0x1
  440e68:	b.ne	440ec0 <_obstack_memory_used@@Base+0x9240>  // b.any
  440e6c:	ldrb	w0, [x19]
  440e70:	cmp	w0, #0x2c
  440e74:	b.ne	440ec0 <_obstack_memory_used@@Base+0x9240>  // b.any
  440e78:	mov	x2, x23
  440e7c:	mov	x1, x19
  440e80:	mov	x0, x21
  440e84:	str	x5, [sp, #112]
  440e88:	bl	43c29c <_obstack_memory_used@@Base+0x461c>
  440e8c:	mov	x27, x0
  440e90:	ldr	x5, [sp, #112]
  440e94:	cmn	x5, #0x2
  440e98:	ccmn	x27, #0x2, #0x4, ne  // ne = any
  440e9c:	b.ne	440f04 <_obstack_memory_used@@Base+0x9284>  // b.any
  440ea0:	tbnz	w23, #21, 440ec8 <_obstack_memory_used@@Base+0x9248>
  440ea4:	ldrb	w0, [x19, #8]
  440ea8:	cmp	w0, #0x2
  440eac:	b.ne	440374 <_obstack_memory_used@@Base+0x86f4>  // b.any
  440eb0:	mov	w0, #0x9                   	// #9
  440eb4:	b	440378 <_obstack_memory_used@@Base+0x86f8>
  440eb8:	mov	x27, x5
  440ebc:	b	440e94 <_obstack_memory_used@@Base+0x9214>
  440ec0:	mov	x27, #0xfffffffffffffffe    	// #-2
  440ec4:	b	440e94 <_obstack_memory_used@@Base+0x9214>
  440ec8:	str	x28, [x21, #72]
  440ecc:	mov	w0, #0x1                   	// #1
  440ed0:	stp	x24, x25, [x19]
  440ed4:	mov	x24, x26
  440ed8:	strb	w0, [x19, #8]
  440edc:	ldr	w0, [x22]
  440ee0:	cbz	w0, 441100 <_obstack_memory_used@@Base+0x9480>
  440ee4:	cbnz	x24, 441100 <_obstack_memory_used@@Base+0x9480>
  440ee8:	cbz	x26, 4404cc <_obstack_memory_used@@Base+0x884c>
  440eec:	mov	x0, x26
  440ef0:	mov	x2, #0x0                   	// #0
  440ef4:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1380>
  440ef8:	add	x1, x1, #0x78
  440efc:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  440f00:	b	4404cc <_obstack_memory_used@@Base+0x884c>
  440f04:	cmp	x5, x27
  440f08:	ccmn	x27, #0x1, #0x4, gt
  440f0c:	b.ne	440374 <_obstack_memory_used@@Base+0x86f4>  // b.any
  440f10:	ldrb	w0, [x19, #8]
  440f14:	cmp	w0, #0x18
  440f18:	b.ne	440374 <_obstack_memory_used@@Base+0x86f4>  // b.any
  440f1c:	cmn	x27, #0x1
  440f20:	mov	x0, #0x7fff                	// #32767
  440f24:	b.ne	440f3c <_obstack_memory_used@@Base+0x92bc>  // b.any
  440f28:	cmp	x5, x0
  440f2c:	cset	x0, gt
  440f30:	cbz	x0, 440f50 <_obstack_memory_used@@Base+0x92d0>
  440f34:	mov	w0, #0xf                   	// #15
  440f38:	b	440378 <_obstack_memory_used@@Base+0x86f8>
  440f3c:	cmp	x27, x0
  440f40:	b	440f2c <_obstack_memory_used@@Base+0x92ac>
  440f44:	cmp	w1, #0x13
  440f48:	mov	x6, #0xffffffffffffffff    	// #-1
  440f4c:	cneg	x27, x6, eq  // eq = none
  440f50:	mov	x2, x23
  440f54:	mov	x1, x21
  440f58:	mov	x0, x19
  440f5c:	str	x5, [sp, #112]
  440f60:	bl	43c270 <_obstack_memory_used@@Base+0x45f0>
  440f64:	cbz	x26, 440f84 <_obstack_memory_used@@Base+0x9304>
  440f68:	ldr	x5, [sp, #112]
  440f6c:	orr	x0, x5, x27
  440f70:	cbnz	x0, 440f8c <_obstack_memory_used@@Base+0x930c>
  440f74:	ldr	x1, [sp, #104]
  440f78:	mov	x0, x26
  440f7c:	mov	x2, #0x0                   	// #0
  440f80:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  440f84:	mov	x24, #0x0                   	// #0
  440f88:	b	440edc <_obstack_memory_used@@Base+0x925c>
  440f8c:	cmp	x5, #0x0
  440f90:	b.gt	44108c <_obstack_memory_used@@Base+0x940c>
  440f94:	mov	x28, x26
  440f98:	mov	x25, #0x0                   	// #0
  440f9c:	ldrb	w0, [x28, #48]
  440fa0:	cmp	w0, #0x11
  440fa4:	b.ne	440fc0 <_obstack_memory_used@@Base+0x9340>  // b.any
  440fa8:	ldr	x2, [x28, #40]
  440fac:	mov	x0, x28
  440fb0:	ldr	x1, [sp, #96]
  440fb4:	str	x5, [sp, #112]
  440fb8:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  440fbc:	ldr	x5, [sp, #112]
  440fc0:	cmn	x27, #0x1
  440fc4:	cset	w3, eq  // eq = none
  440fc8:	mov	x1, x28
  440fcc:	add	w3, w3, #0xa
  440fd0:	mov	x0, x20
  440fd4:	mov	x2, #0x0                   	// #0
  440fd8:	str	x5, [sp, #112]
  440fdc:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  440fe0:	mov	x24, x0
  440fe4:	cbz	x0, 4410f8 <_obstack_memory_used@@Base+0x9478>
  440fe8:	ldr	x5, [sp, #112]
  440fec:	add	x4, x5, #0x2
  440ff0:	cmp	x27, x4
  440ff4:	b.ge	44109c <_obstack_memory_used@@Base+0x941c>  // b.tcont
  440ff8:	cbz	x25, 440edc <_obstack_memory_used@@Base+0x925c>
  440ffc:	mov	x2, x24
  441000:	mov	x1, x25
  441004:	mov	x0, x20
  441008:	mov	w3, #0x10                  	// #16
  44100c:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  441010:	mov	x24, x0
  441014:	b	440edc <_obstack_memory_used@@Base+0x925c>
  441018:	mov	x1, x20
  44101c:	mov	x0, x25
  441020:	str	x5, [sp, #112]
  441024:	bl	43a52c <_obstack_memory_used@@Base+0x28ac>
  441028:	mov	x1, x24
  44102c:	mov	x25, x0
  441030:	mov	x2, x0
  441034:	mov	w3, #0x10                  	// #16
  441038:	mov	x0, x20
  44103c:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  441040:	cmp	x25, #0x0
  441044:	mov	x24, x0
  441048:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44104c:	b.eq	4410f8 <_obstack_memory_used@@Base+0x9478>  // b.none
  441050:	ldr	x5, [sp, #112]
  441054:	add	x28, x28, #0x1
  441058:	cmp	x5, x28
  44105c:	b.ge	441018 <_obstack_memory_used@@Base+0x9398>  // b.tcont
  441060:	str	x5, [sp, #112]
  441064:	cmp	x5, x27
  441068:	b.eq	440edc <_obstack_memory_used@@Base+0x925c>  // b.none
  44106c:	mov	x1, x20
  441070:	mov	x0, x25
  441074:	bl	43a52c <_obstack_memory_used@@Base+0x28ac>
  441078:	mov	x28, x0
  44107c:	cbz	x0, 4410f8 <_obstack_memory_used@@Base+0x9478>
  441080:	mov	x25, x24
  441084:	ldr	x5, [sp, #112]
  441088:	b	440f9c <_obstack_memory_used@@Base+0x931c>
  44108c:	mov	x24, x26
  441090:	mov	x25, x26
  441094:	mov	x28, #0x2                   	// #2
  441098:	b	441058 <_obstack_memory_used@@Base+0x93d8>
  44109c:	mov	x1, x20
  4410a0:	mov	x0, x28
  4410a4:	str	x4, [sp, #112]
  4410a8:	bl	43a52c <_obstack_memory_used@@Base+0x28ac>
  4410ac:	mov	x1, x24
  4410b0:	mov	x28, x0
  4410b4:	mov	x2, x0
  4410b8:	mov	w3, #0x10                  	// #16
  4410bc:	mov	x0, x20
  4410c0:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  4410c4:	cmp	x28, #0x0
  4410c8:	mov	x1, x0
  4410cc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4410d0:	b.eq	4410f8 <_obstack_memory_used@@Base+0x9478>  // b.none
  4410d4:	mov	x0, x20
  4410d8:	mov	w3, #0xa                   	// #10
  4410dc:	mov	x2, #0x0                   	// #0
  4410e0:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  4410e4:	mov	x24, x0
  4410e8:	cbz	x0, 4410f8 <_obstack_memory_used@@Base+0x9478>
  4410ec:	ldr	x4, [sp, #112]
  4410f0:	add	x4, x4, #0x1
  4410f4:	b	440ff0 <_obstack_memory_used@@Base+0x9370>
  4410f8:	mov	w0, #0xc                   	// #12
  4410fc:	b	440378 <_obstack_memory_used@@Base+0x86f8>
  441100:	tbz	w23, #24, 441130 <_obstack_memory_used@@Base+0x94b0>
  441104:	ldrb	w0, [x19, #8]
  441108:	cmp	w0, #0xb
  44110c:	ccmp	w0, #0x17, #0x4, ne  // ne = any
  441110:	b.ne	441130 <_obstack_memory_used@@Base+0x94b0>  // b.any
  441114:	cbz	x24, 440ba0 <_obstack_memory_used@@Base+0x8f20>
  441118:	mov	x0, x24
  44111c:	mov	x2, #0x0                   	// #0
  441120:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1380>
  441124:	add	x1, x1, #0x78
  441128:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  44112c:	b	440ba0 <_obstack_memory_used@@Base+0x8f20>
  441130:	mov	x26, x24
  441134:	b	440308 <_obstack_memory_used@@Base+0x8688>
  441138:	mov	w0, #0x3                   	// #3
  44113c:	mov	x1, #0x0                   	// #0
  441140:	add	x3, sp, #0x100
  441144:	mov	x2, #0x0                   	// #0
  441148:	str	x25, [sp, #256]
  44114c:	strb	w0, [sp, #264]
  441150:	mov	x0, x20
  441154:	bl	43a470 <_obstack_memory_used@@Base+0x27f0>
  441158:	mov	x1, x0
  44115c:	cbz	x0, 441178 <_obstack_memory_used@@Base+0x94f8>
  441160:	mov	x2, x26
  441164:	mov	x0, x20
  441168:	mov	w3, #0xa                   	// #10
  44116c:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  441170:	mov	x26, x0
  441174:	cbnz	x0, 4404c0 <_obstack_memory_used@@Base+0x8840>
  441178:	mov	w0, #0xc                   	// #12
  44117c:	b	440550 <_obstack_memory_used@@Base+0x88d0>
  441180:	cmp	w4, #0x3
  441184:	b.ne	4408c4 <_obstack_memory_used@@Base+0x8c44>  // b.any
  441188:	b	44078c <_obstack_memory_used@@Base+0x8b0c>
  44118c:	cbz	w1, 4407b0 <_obstack_memory_used@@Base+0x8b30>
  441190:	mov	w28, #0x0                   	// #0
  441194:	b	4407b4 <_obstack_memory_used@@Base+0x8b34>
  441198:	stp	x29, x30, [sp, #-96]!
  44119c:	mov	x29, sp
  4411a0:	stp	x21, x22, [sp, #32]
  4411a4:	mov	x21, x5
  4411a8:	mov	x22, x1
  4411ac:	stp	x19, x20, [sp, #16]
  4411b0:	stp	x23, x24, [sp, #48]
  4411b4:	mov	x23, x2
  4411b8:	mov	x24, x4
  4411bc:	stp	x25, x26, [sp, #64]
  4411c0:	mov	x25, x0
  4411c4:	mov	x26, x3
  4411c8:	str	x27, [sp, #80]
  4411cc:	ldr	x27, [x1]
  4411d0:	bl	440240 <_obstack_memory_used@@Base+0x85c0>
  4411d4:	mov	x19, x0
  4411d8:	ldr	w0, [x21]
  4411dc:	cbz	w0, 441268 <_obstack_memory_used@@Base+0x95e8>
  4411e0:	cbnz	x19, 441268 <_obstack_memory_used@@Base+0x95e8>
  4411e4:	mov	x19, #0x0                   	// #0
  4411e8:	mov	x0, x19
  4411ec:	ldp	x19, x20, [sp, #16]
  4411f0:	ldp	x21, x22, [sp, #32]
  4411f4:	ldp	x23, x24, [sp, #48]
  4411f8:	ldp	x25, x26, [sp, #64]
  4411fc:	ldr	x27, [sp, #80]
  441200:	ldp	x29, x30, [sp], #96
  441204:	ret
  441208:	cmp	x19, #0x0
  44120c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  441210:	b.eq	441260 <_obstack_memory_used@@Base+0x95e0>  // b.none
  441214:	mov	x2, x20
  441218:	mov	x1, x19
  44121c:	mov	x0, x27
  441220:	mov	w3, #0x10                  	// #16
  441224:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  441228:	cbnz	x0, 4412cc <_obstack_memory_used@@Base+0x964c>
  44122c:	adrp	x22, 439000 <_obstack_memory_used@@Base+0x1380>
  441230:	add	x22, x22, #0x78
  441234:	mov	x1, x22
  441238:	mov	x2, #0x0                   	// #0
  44123c:	mov	x0, x20
  441240:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  441244:	mov	x1, x22
  441248:	mov	x0, x19
  44124c:	mov	x2, #0x0                   	// #0
  441250:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  441254:	mov	w0, #0xc                   	// #12
  441258:	str	w0, [x21]
  44125c:	b	4411e4 <_obstack_memory_used@@Base+0x9564>
  441260:	cmp	x19, #0x0
  441264:	csel	x19, x19, x20, ne  // ne = any
  441268:	ldrb	w0, [x23, #8]
  44126c:	and	w1, w0, #0xfffffff7
  441270:	cmp	w1, #0x2
  441274:	b.eq	4411e8 <_obstack_memory_used@@Base+0x9568>  // b.none
  441278:	cbz	x24, 441284 <_obstack_memory_used@@Base+0x9604>
  44127c:	cmp	w0, #0x9
  441280:	b.eq	4411e8 <_obstack_memory_used@@Base+0x9568>  // b.none
  441284:	mov	x5, x21
  441288:	mov	x4, x24
  44128c:	mov	x3, x26
  441290:	mov	x2, x23
  441294:	mov	x1, x22
  441298:	mov	x0, x25
  44129c:	bl	440240 <_obstack_memory_used@@Base+0x85c0>
  4412a0:	mov	x20, x0
  4412a4:	ldr	w0, [x21]
  4412a8:	cbz	w0, 441208 <_obstack_memory_used@@Base+0x9588>
  4412ac:	cbnz	x20, 441208 <_obstack_memory_used@@Base+0x9588>
  4412b0:	cbz	x19, 4411e4 <_obstack_memory_used@@Base+0x9564>
  4412b4:	mov	x0, x19
  4412b8:	mov	x2, #0x0                   	// #0
  4412bc:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1380>
  4412c0:	add	x1, x1, #0x78
  4412c4:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  4412c8:	b	4411e4 <_obstack_memory_used@@Base+0x9564>
  4412cc:	mov	x19, x0
  4412d0:	b	441268 <_obstack_memory_used@@Base+0x95e8>
  4412d4:	stp	x29, x30, [sp, #-112]!
  4412d8:	mov	x29, sp
  4412dc:	stp	x21, x22, [sp, #32]
  4412e0:	mov	x22, x5
  4412e4:	ldr	x21, [x1]
  4412e8:	stp	x19, x20, [sp, #16]
  4412ec:	mov	x20, x2
  4412f0:	stp	x23, x24, [sp, #48]
  4412f4:	mov	x23, x0
  4412f8:	mov	x24, x1
  4412fc:	stp	x25, x26, [sp, #64]
  441300:	mov	x25, x3
  441304:	mov	x26, x4
  441308:	stp	x27, x28, [sp, #80]
  44130c:	ldr	x27, [x21, #168]
  441310:	bl	441198 <_obstack_memory_used@@Base+0x9518>
  441314:	mov	x19, x0
  441318:	ldr	w0, [x22]
  44131c:	cbz	w0, 441380 <_obstack_memory_used@@Base+0x9700>
  441320:	cbnz	x19, 441380 <_obstack_memory_used@@Base+0x9700>
  441324:	mov	x19, #0x0                   	// #0
  441328:	mov	x0, x19
  44132c:	ldp	x19, x20, [sp, #16]
  441330:	ldp	x21, x22, [sp, #32]
  441334:	ldp	x23, x24, [sp, #48]
  441338:	ldp	x25, x26, [sp, #64]
  44133c:	ldp	x27, x28, [sp, #80]
  441340:	ldp	x29, x30, [sp], #112
  441344:	ret
  441348:	ldr	x0, [x21, #168]
  44134c:	orr	x0, x0, x6
  441350:	str	x0, [x21, #168]
  441354:	mov	x1, x19
  441358:	mov	x0, x21
  44135c:	mov	w3, #0xa                   	// #10
  441360:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  441364:	mov	x19, x0
  441368:	cbnz	x0, 441384 <_obstack_memory_used@@Base+0x9704>
  44136c:	mov	w0, #0xc                   	// #12
  441370:	str	w0, [x22]
  441374:	b	441328 <_obstack_memory_used@@Base+0x96a8>
  441378:	mov	x2, #0x0                   	// #0
  44137c:	b	441354 <_obstack_memory_used@@Base+0x96d4>
  441380:	orr	x28, x25, #0x800000
  441384:	ldrb	w0, [x20, #8]
  441388:	cmp	w0, #0xa
  44138c:	b.ne	441328 <_obstack_memory_used@@Base+0x96a8>  // b.any
  441390:	mov	x1, x23
  441394:	mov	x0, x20
  441398:	mov	x2, x28
  44139c:	bl	43c270 <_obstack_memory_used@@Base+0x45f0>
  4413a0:	ldrb	w0, [x20, #8]
  4413a4:	and	w1, w0, #0xfffffff7
  4413a8:	cmp	w1, #0x2
  4413ac:	b.eq	441378 <_obstack_memory_used@@Base+0x96f8>  // b.none
  4413b0:	cbz	x26, 4413bc <_obstack_memory_used@@Base+0x973c>
  4413b4:	cmp	w0, #0x9
  4413b8:	b.eq	441378 <_obstack_memory_used@@Base+0x96f8>  // b.none
  4413bc:	ldr	x6, [x21, #168]
  4413c0:	str	x27, [x21, #168]
  4413c4:	mov	x2, x20
  4413c8:	mov	x5, x22
  4413cc:	mov	x4, x26
  4413d0:	mov	x3, x25
  4413d4:	mov	x1, x24
  4413d8:	mov	x0, x23
  4413dc:	str	x6, [sp, #104]
  4413e0:	bl	441198 <_obstack_memory_used@@Base+0x9518>
  4413e4:	mov	x2, x0
  4413e8:	ldr	w0, [x22]
  4413ec:	ldr	x6, [sp, #104]
  4413f0:	cbz	w0, 441348 <_obstack_memory_used@@Base+0x96c8>
  4413f4:	cbnz	x2, 441348 <_obstack_memory_used@@Base+0x96c8>
  4413f8:	cbz	x19, 441324 <_obstack_memory_used@@Base+0x96a4>
  4413fc:	mov	x0, x19
  441400:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1380>
  441404:	add	x1, x1, #0x78
  441408:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  44140c:	b	441324 <_obstack_memory_used@@Base+0x96a4>
  441410:	stp	x29, x30, [sp, #-304]!
  441414:	mov	x29, sp
  441418:	stp	x19, x20, [sp, #16]
  44141c:	mov	x20, x0
  441420:	stp	x21, x22, [sp, #32]
  441424:	mov	x21, x2
  441428:	mov	x22, x3
  44142c:	stp	x23, x24, [sp, #48]
  441430:	mov	x24, x1
  441434:	mov	w1, #0xffffff90            	// #-112
  441438:	stp	x25, x26, [sp, #64]
  44143c:	stp	x27, x28, [sp, #80]
  441440:	str	xzr, [x0, #16]
  441444:	str	x3, [x0, #24]
  441448:	str	xzr, [x0, #48]
  44144c:	ldr	x19, [x0]
  441450:	str	wzr, [sp, #120]
  441454:	ldrb	w0, [x0, #56]
  441458:	and	w0, w0, w1
  44145c:	strb	w0, [x20, #56]
  441460:	ldr	x0, [x20, #8]
  441464:	cmp	x0, #0xe7
  441468:	b.hi	441488 <_obstack_memory_used@@Base+0x9808>  // b.pmore
  44146c:	mov	x0, x19
  441470:	mov	x1, #0xe8                  	// #232
  441474:	bl	404820 <realloc@plt>
  441478:	mov	x19, x0
  44147c:	cbz	x0, 441e40 <_obstack_memory_used@@Base+0xa1c0>
  441480:	mov	x0, #0xe8                  	// #232
  441484:	stp	x19, x0, [x20]
  441488:	mov	x2, #0xe8                  	// #232
  44148c:	str	x2, [x20, #16]
  441490:	mov	x0, x19
  441494:	mov	w1, #0x0                   	// #0
  441498:	bl	404700 <memset@plt>
  44149c:	mov	w0, #0xf                   	// #15
  4414a0:	str	w0, [x19, #128]
  4414a4:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  4414a8:	movk	x0, #0x555, lsl #48
  4414ac:	cmp	x21, x0
  4414b0:	b.cs	4415a8 <_obstack_memory_used@@Base+0x9928>  // b.hs, b.nlast
  4414b4:	add	x25, x21, #0x1
  4414b8:	str	x25, [x19, #8]
  4414bc:	mov	x23, #0x1                   	// #1
  4414c0:	lsl	x0, x25, #4
  4414c4:	bl	4045f0 <malloc@plt>
  4414c8:	str	x0, [x19]
  4414cc:	cmp	x21, x23
  4414d0:	b.cc	4414dc <_obstack_memory_used@@Base+0x985c>  // b.lo, b.ul, b.last
  4414d4:	lsl	x23, x23, #1
  4414d8:	b	4414cc <_obstack_memory_used@@Base+0x984c>
  4414dc:	mov	x1, x23
  4414e0:	mov	x0, #0x18                  	// #24
  4414e4:	sub	x23, x23, #0x1
  4414e8:	bl	4047a0 <calloc@plt>
  4414ec:	str	x0, [x19, #64]
  4414f0:	str	x23, [x19, #136]
  4414f4:	bl	404b10 <__ctype_get_mb_cur_max@plt>
  4414f8:	str	w0, [x19, #180]
  4414fc:	mov	w0, #0xe                   	// #14
  441500:	bl	4045b0 <nl_langinfo@plt>
  441504:	ldrb	w1, [x0]
  441508:	and	w1, w1, #0xffffffdf
  44150c:	and	w1, w1, #0xff
  441510:	cmp	w1, #0x55
  441514:	b.ne	441570 <_obstack_memory_used@@Base+0x98f0>  // b.any
  441518:	ldrb	w1, [x0, #1]
  44151c:	and	w1, w1, #0xffffffdf
  441520:	and	w1, w1, #0xff
  441524:	cmp	w1, #0x54
  441528:	b.ne	441570 <_obstack_memory_used@@Base+0x98f0>  // b.any
  44152c:	ldrb	w1, [x0, #2]
  441530:	and	w1, w1, #0xffffffdf
  441534:	and	w1, w1, #0xff
  441538:	cmp	w1, #0x46
  44153c:	b.ne	441570 <_obstack_memory_used@@Base+0x98f0>  // b.any
  441540:	ldrb	w1, [x0, #3]
  441544:	cmp	w1, #0x2d
  441548:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0x15380>
  44154c:	cset	x2, eq  // eq = none
  441550:	add	x1, x1, #0x205
  441554:	add	x2, x2, #0x3
  441558:	add	x0, x0, x2
  44155c:	bl	404a30 <strcmp@plt>
  441560:	cbnz	w0, 441570 <_obstack_memory_used@@Base+0x98f0>
  441564:	ldrb	w0, [x19, #176]
  441568:	orr	w0, w0, #0x4
  44156c:	strb	w0, [x19, #176]
  441570:	ldrb	w0, [x19, #176]
  441574:	and	w1, w0, #0xfffffff7
  441578:	strb	w1, [x19, #176]
  44157c:	ldr	w1, [x19, #180]
  441580:	cmp	w1, #0x1
  441584:	b.le	441598 <_obstack_memory_used@@Base+0x9918>
  441588:	tbz	w0, #2, 4415c0 <_obstack_memory_used@@Base+0x9940>
  44158c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  441590:	add	x0, x0, #0xab0
  441594:	str	x0, [x19, #120]
  441598:	ldr	x0, [x19]
  44159c:	cbz	x0, 4415a8 <_obstack_memory_used@@Base+0x9928>
  4415a0:	ldr	x0, [x19, #64]
  4415a4:	cbnz	x0, 441648 <_obstack_memory_used@@Base+0x99c8>
  4415a8:	mov	w0, #0xc                   	// #12
  4415ac:	str	w0, [sp, #120]
  4415b0:	mov	x0, x19
  4415b4:	bl	439374 <_obstack_memory_used@@Base+0x16f4>
  4415b8:	stp	xzr, xzr, [x20]
  4415bc:	b	441c40 <_obstack_memory_used@@Base+0x9fc0>
  4415c0:	mov	x1, #0x1                   	// #1
  4415c4:	mov	x0, #0x20                  	// #32
  4415c8:	bl	4047a0 <calloc@plt>
  4415cc:	str	x0, [x19, #120]
  4415d0:	cbz	x0, 4415a8 <_obstack_memory_used@@Base+0x9928>
  4415d4:	mov	x27, #0x0                   	// #0
  4415d8:	mov	w26, #0x0                   	// #0
  4415dc:	mov	w23, #0x0                   	// #0
  4415e0:	add	w28, w26, w23
  4415e4:	mov	w0, w28
  4415e8:	bl	404950 <btowc@plt>
  4415ec:	mov	x4, #0x1                   	// #1
  4415f0:	cmn	w0, #0x1
  4415f4:	b.eq	44160c <_obstack_memory_used@@Base+0x998c>  // b.none
  4415f8:	ldr	x3, [x19, #120]
  4415fc:	lsl	x1, x4, x23
  441600:	ldr	x2, [x3, x27]
  441604:	orr	x1, x2, x1
  441608:	str	x1, [x3, x27]
  44160c:	tst	w28, #0xffffff80
  441610:	b.ne	441628 <_obstack_memory_used@@Base+0x99a8>  // b.any
  441614:	cmp	w0, w28
  441618:	b.eq	441628 <_obstack_memory_used@@Base+0x99a8>  // b.none
  44161c:	ldrb	w0, [x19, #176]
  441620:	orr	w0, w0, #0x8
  441624:	strb	w0, [x19, #176]
  441628:	add	w23, w23, #0x1
  44162c:	cmp	w23, #0x40
  441630:	b.ne	4415e0 <_obstack_memory_used@@Base+0x9960>  // b.any
  441634:	add	w26, w26, #0x40
  441638:	add	x27, x27, #0x8
  44163c:	cmp	w26, #0x100
  441640:	b.ne	4415dc <_obstack_memory_used@@Base+0x995c>  // b.any
  441644:	b	441598 <_obstack_memory_used@@Base+0x9918>
  441648:	ldr	x27, [x20, #40]
  44164c:	and	x23, x22, #0x400000
  441650:	mov	w1, #0x0                   	// #0
  441654:	add	x0, sp, #0xa0
  441658:	mov	x2, #0x90                  	// #144
  44165c:	str	wzr, [sp, #120]
  441660:	bl	404700 <memset@plt>
  441664:	orr	x26, x27, x23
  441668:	cmp	x23, #0x0
  44166c:	str	x24, [sp, #152]
  441670:	cset	w0, ne  // ne = any
  441674:	cmp	x26, #0x0
  441678:	strb	w0, [sp, #288]
  44167c:	cset	w0, ne  // ne = any
  441680:	strb	w0, [sp, #291]
  441684:	ldr	w0, [x19, #180]
  441688:	str	w0, [sp, #296]
  44168c:	ldrb	w0, [x19, #176]
  441690:	stp	x21, x21, [sp, #232]
  441694:	ubfx	x1, x0, #2, #1
  441698:	ubfx	x0, x0, #3, #1
  44169c:	stp	x21, x21, [sp, #248]
  4416a0:	str	x27, [sp, #272]
  4416a4:	strb	w1, [sp, #289]
  4416a8:	strb	w0, [sp, #290]
  4416ac:	cbnz	x21, 441710 <_obstack_memory_used@@Base+0x9a90>
  4416b0:	ldrb	w0, [sp, #291]
  4416b4:	cbnz	w0, 441758 <_obstack_memory_used@@Base+0x9ad8>
  4416b8:	ldr	w0, [x19, #180]
  4416bc:	str	x24, [sp, #160]
  4416c0:	cmp	w0, #0x1
  4416c4:	cbz	x23, 44180c <_obstack_memory_used@@Base+0x9b8c>
  4416c8:	b.le	441760 <_obstack_memory_used@@Base+0x9ae0>
  4416cc:	add	x0, sp, #0x98
  4416d0:	bl	43892c <_obstack_memory_used@@Base+0xcac>
  4416d4:	cbnz	w0, 441720 <_obstack_memory_used@@Base+0x9aa0>
  4416d8:	ldr	x1, [sp, #208]
  4416dc:	cmp	x21, x1
  4416e0:	b.le	441720 <_obstack_memory_used@@Base+0x9aa0>
  4416e4:	ldr	x3, [sp, #200]
  4416e8:	ldrsw	x2, [x19, #180]
  4416ec:	ldr	x1, [sp, #216]
  4416f0:	add	x2, x2, x3
  4416f4:	cmp	x1, x2
  4416f8:	b.gt	441720 <_obstack_memory_used@@Base+0x9aa0>
  4416fc:	lsl	x1, x1, #1
  441700:	add	x0, sp, #0x98
  441704:	bl	43853c <_obstack_memory_used@@Base+0x8bc>
  441708:	cbz	w0, 4416cc <_obstack_memory_used@@Base+0x9a4c>
  44170c:	b	441720 <_obstack_memory_used@@Base+0x9aa0>
  441710:	mov	x1, x25
  441714:	add	x0, sp, #0x98
  441718:	bl	43853c <_obstack_memory_used@@Base+0x8bc>
  44171c:	cbz	w0, 4416b0 <_obstack_memory_used@@Base+0x9a30>
  441720:	str	w0, [sp, #120]
  441724:	cbz	w0, 44176c <_obstack_memory_used@@Base+0x9aec>
  441728:	ldr	x21, [x20]
  44172c:	ldr	x0, [x21, #112]
  441730:	cbnz	x0, 441838 <_obstack_memory_used@@Base+0x9bb8>
  441734:	mov	w0, #0xf                   	// #15
  441738:	str	w0, [x21, #128]
  44173c:	ldr	x0, [x21, #32]
  441740:	stp	xzr, xzr, [x21, #104]
  441744:	bl	404ae0 <free@plt>
  441748:	str	xzr, [x21, #32]
  44174c:	add	x0, sp, #0x98
  441750:	bl	439330 <_obstack_memory_used@@Base+0x16b0>
  441754:	b	4415b0 <_obstack_memory_used@@Base+0x9930>
  441758:	ldr	x24, [sp, #160]
  44175c:	b	4416b8 <_obstack_memory_used@@Base+0x9a38>
  441760:	add	x0, sp, #0x98
  441764:	bl	438e14 <_obstack_memory_used@@Base+0x1194>
  441768:	str	wzr, [sp, #120]
  44176c:	ldr	x24, [x20]
  441770:	str	xzr, [x20, #48]
  441774:	orr	x2, x22, #0x800000
  441778:	add	x1, sp, #0x98
  44177c:	add	x0, sp, #0x80
  441780:	str	x22, [x24, #216]
  441784:	bl	43c270 <_obstack_memory_used@@Base+0x45f0>
  441788:	mov	x3, x22
  44178c:	add	x5, sp, #0x78
  441790:	add	x2, sp, #0x80
  441794:	mov	x1, x20
  441798:	add	x0, sp, #0x98
  44179c:	mov	x4, #0x0                   	// #0
  4417a0:	bl	4412d4 <_obstack_memory_used@@Base+0x9654>
  4417a4:	mov	x22, x0
  4417a8:	ldr	w0, [sp, #120]
  4417ac:	cbz	w0, 4417b4 <_obstack_memory_used@@Base+0x9b34>
  4417b0:	cbz	x22, 441804 <_obstack_memory_used@@Base+0x9b84>
  4417b4:	mov	x0, x24
  4417b8:	mov	w3, #0x2                   	// #2
  4417bc:	mov	x2, #0x0                   	// #0
  4417c0:	mov	x1, #0x0                   	// #0
  4417c4:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  4417c8:	mov	x21, x0
  4417cc:	cbz	x22, 4417e4 <_obstack_memory_used@@Base+0x9b64>
  4417d0:	mov	x2, x0
  4417d4:	mov	x1, x22
  4417d8:	mov	x0, x24
  4417dc:	mov	w3, #0x10                  	// #16
  4417e0:	bl	43a5d4 <_obstack_memory_used@@Base+0x2954>
  4417e4:	cmp	x21, #0x0
  4417e8:	cset	w25, eq  // eq = none
  4417ec:	cmp	x0, #0x0
  4417f0:	csinc	w25, w25, wzr, ne  // ne = any
  4417f4:	ldr	x21, [x20]
  4417f8:	cbz	w25, 441848 <_obstack_memory_used@@Base+0x9bc8>
  4417fc:	mov	w0, #0xc                   	// #12
  441800:	str	w0, [sp, #120]
  441804:	str	xzr, [x19, #104]
  441808:	b	441728 <_obstack_memory_used@@Base+0x9aa8>
  44180c:	b.le	44181c <_obstack_memory_used@@Base+0x9b9c>
  441810:	add	x0, sp, #0x98
  441814:	bl	4387bc <_obstack_memory_used@@Base+0xb3c>
  441818:	b	441768 <_obstack_memory_used@@Base+0x9ae8>
  44181c:	cbz	x26, 44182c <_obstack_memory_used@@Base+0x9bac>
  441820:	add	x0, sp, #0x98
  441824:	bl	437e60 <_obstack_memory_used@@Base+0x1e0>
  441828:	b	441768 <_obstack_memory_used@@Base+0x9ae8>
  44182c:	ldr	x0, [sp, #216]
  441830:	stp	x0, x0, [sp, #200]
  441834:	b	441768 <_obstack_memory_used@@Base+0x9ae8>
  441838:	ldr	x22, [x0]
  44183c:	bl	404ae0 <free@plt>
  441840:	mov	x0, x22
  441844:	b	441730 <_obstack_memory_used@@Base+0x9ab0>
  441848:	ldr	x22, [x21, #8]
  44184c:	str	x0, [x19, #104]
  441850:	lsl	x24, x22, #3
  441854:	mov	x0, x24
  441858:	bl	4045f0 <malloc@plt>
  44185c:	mov	x27, x0
  441860:	str	x27, [x21, #24]
  441864:	mov	x0, x24
  441868:	bl	4045f0 <malloc@plt>
  44186c:	mov	x26, x0
  441870:	mov	x0, #0x18                  	// #24
  441874:	str	x26, [x21, #32]
  441878:	mul	x22, x22, x0
  44187c:	mov	x0, x22
  441880:	bl	4045f0 <malloc@plt>
  441884:	mov	x24, x0
  441888:	str	x24, [x21, #40]
  44188c:	mov	x0, x22
  441890:	bl	4045f0 <malloc@plt>
  441894:	str	x0, [x21, #48]
  441898:	cbnz	x27, 4418a8 <_obstack_memory_used@@Base+0x9c28>
  44189c:	mov	w0, #0xc                   	// #12
  4418a0:	str	w0, [sp, #120]
  4418a4:	b	441728 <_obstack_memory_used@@Base+0x9aa8>
  4418a8:	cbz	x26, 44189c <_obstack_memory_used@@Base+0x9c1c>
  4418ac:	cbz	x24, 44189c <_obstack_memory_used@@Base+0x9c1c>
  4418b0:	cbz	x0, 44189c <_obstack_memory_used@@Base+0x9c1c>
  4418b4:	ldr	x22, [x20, #48]
  4418b8:	lsl	x0, x22, #3
  4418bc:	bl	4045f0 <malloc@plt>
  4418c0:	str	x0, [x21, #224]
  4418c4:	cbz	x0, 441904 <_obstack_memory_used@@Base+0x9c84>
  4418c8:	mov	x1, #0x0                   	// #0
  4418cc:	cmp	x22, x1
  4418d0:	b.ne	4419cc <_obstack_memory_used@@Base+0x9d4c>  // b.any
  4418d4:	ldr	x0, [x21, #104]
  4418d8:	mov	x2, x21
  4418dc:	adrp	x1, 43a000 <_obstack_memory_used@@Base+0x2380>
  4418e0:	add	x1, x1, #0xac
  4418e4:	bl	4384c8 <_obstack_memory_used@@Base+0x848>
  4418e8:	ldr	x1, [x20, #48]
  4418ec:	mov	x0, #0x0                   	// #0
  4418f0:	cmp	x0, x1
  4418f4:	b.ne	4419d8 <_obstack_memory_used@@Base+0x9d58>  // b.any
  4418f8:	ldr	x0, [x21, #224]
  4418fc:	bl	404ae0 <free@plt>
  441900:	str	xzr, [x21, #224]
  441904:	ldr	x0, [x21, #104]
  441908:	mov	x2, x20
  44190c:	adrp	x1, 43a000 <_obstack_memory_used@@Base+0x2380>
  441910:	add	x1, x1, #0x718
  441914:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  441918:	mov	w22, w0
  44191c:	cbnz	w0, 4419c0 <_obstack_memory_used@@Base+0x9d40>
  441920:	ldr	x0, [x21, #104]
  441924:	mov	x2, x21
  441928:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x3380>
  44192c:	add	x1, x1, #0x90c
  441930:	bl	43845c <_obstack_memory_used@@Base+0x7dc>
  441934:	mov	w22, w0
  441938:	cbnz	w0, 4419c0 <_obstack_memory_used@@Base+0x9d40>
  44193c:	ldr	x0, [x21, #104]
  441940:	mov	x2, x21
  441944:	adrp	x1, 43a000 <_obstack_memory_used@@Base+0x2380>
  441948:	add	x1, x1, #0x148
  44194c:	bl	4384c8 <_obstack_memory_used@@Base+0x848>
  441950:	ldr	x0, [x21, #104]
  441954:	mov	x2, x21
  441958:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1380>
  44195c:	add	x1, x1, #0x57c
  441960:	bl	4384c8 <_obstack_memory_used@@Base+0x848>
  441964:	mov	w22, w0
  441968:	cbnz	w0, 4419c0 <_obstack_memory_used@@Base+0x9d40>
  44196c:	mov	w27, #0x0                   	// #0
  441970:	mov	x24, #0x0                   	// #0
  441974:	mov	x26, #0x18                  	// #24
  441978:	ldr	x0, [x21, #16]
  44197c:	cmp	x0, x24
  441980:	b.ne	441990 <_obstack_memory_used@@Base+0x9d10>  // b.any
  441984:	cbz	w27, 441a14 <_obstack_memory_used@@Base+0x9d94>
  441988:	mov	w27, #0x0                   	// #0
  44198c:	mov	x24, #0x0                   	// #0
  441990:	ldr	x0, [x21, #48]
  441994:	mul	x28, x24, x26
  441998:	add	x0, x0, x28
  44199c:	ldr	x0, [x0, #8]
  4419a0:	cbnz	x0, 441a0c <_obstack_memory_used@@Base+0x9d8c>
  4419a4:	mov	x2, x24
  4419a8:	mov	x1, x21
  4419ac:	add	x0, sp, #0x80
  4419b0:	mov	w3, #0x1                   	// #1
  4419b4:	bl	43ad54 <_obstack_memory_used@@Base+0x30d4>
  4419b8:	cbz	w0, 4419f0 <_obstack_memory_used@@Base+0x9d70>
  4419bc:	mov	w22, w0
  4419c0:	str	w22, [sp, #120]
  4419c4:	cbz	w22, 441a28 <_obstack_memory_used@@Base+0x9da8>
  4419c8:	b	441728 <_obstack_memory_used@@Base+0x9aa8>
  4419cc:	str	x1, [x0, x1, lsl #3]
  4419d0:	add	x1, x1, #0x1
  4419d4:	b	4418cc <_obstack_memory_used@@Base+0x9c4c>
  4419d8:	ldr	x2, [x21, #224]
  4419dc:	ldr	x2, [x2, x0, lsl #3]
  4419e0:	cmp	x2, x0
  4419e4:	b.ne	441904 <_obstack_memory_used@@Base+0x9c84>  // b.any
  4419e8:	add	x0, x0, #0x1
  4419ec:	b	4418f0 <_obstack_memory_used@@Base+0x9c70>
  4419f0:	ldr	x0, [x21, #48]
  4419f4:	add	x0, x0, x28
  4419f8:	ldr	x0, [x0, #8]
  4419fc:	cbnz	x0, 441a0c <_obstack_memory_used@@Base+0x9d8c>
  441a00:	ldr	x0, [sp, #144]
  441a04:	mov	w27, #0x1                   	// #1
  441a08:	bl	404ae0 <free@plt>
  441a0c:	add	x24, x24, #0x1
  441a10:	b	441978 <_obstack_memory_used@@Base+0x9cf8>
  441a14:	ldrb	w0, [x20, #56]
  441a18:	tbz	w0, #4, 441a9c <_obstack_memory_used@@Base+0x9e1c>
  441a1c:	ldr	x0, [x21, #152]
  441a20:	cbnz	x0, 441aac <_obstack_memory_used@@Base+0x9e2c>
  441a24:	str	wzr, [sp, #120]
  441a28:	ldrb	w0, [x19, #176]
  441a2c:	tbz	w0, #2, 441bac <_obstack_memory_used@@Base+0x9f2c>
  441a30:	cbnz	x23, 441bac <_obstack_memory_used@@Base+0x9f2c>
  441a34:	ldr	x0, [x20, #40]
  441a38:	cbnz	x0, 441bac <_obstack_memory_used@@Base+0x9f2c>
  441a3c:	ldr	x6, [x19, #16]
  441a40:	adrp	x4, 450000 <_obstack_memory_used@@Base+0x18380>
  441a44:	mov	x7, #0x1                   	// #1
  441a48:	mov	w8, #0x10001               	// #65537
  441a4c:	add	x4, x4, #0xaa4
  441a50:	mov	w9, w7
  441a54:	mov	w1, #0x0                   	// #0
  441a58:	mov	x2, #0x0                   	// #0
  441a5c:	movk	x8, #0x1, lsl #48
  441a60:	cmp	x2, x6
  441a64:	b.ne	441b60 <_obstack_memory_used@@Base+0x9ee0>  // b.any
  441a68:	cmp	w25, #0x0
  441a6c:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  441a70:	b.ne	441cf4 <_obstack_memory_used@@Base+0xa074>  // b.any
  441a74:	ldr	x3, [x19, #152]
  441a78:	mov	w2, #0x1                   	// #1
  441a7c:	ldrb	w0, [x19, #176]
  441a80:	cmp	x3, #0x0
  441a84:	str	w2, [x19, #180]
  441a88:	and	w0, w0, #0xfffffffb
  441a8c:	csel	w1, w1, w2, le
  441a90:	bfi	w0, w1, #1, #1
  441a94:	strb	w0, [x19, #176]
  441a98:	b	441bac <_obstack_memory_used@@Base+0x9f2c>
  441a9c:	ldr	x0, [x20, #48]
  441aa0:	cbz	x0, 441a1c <_obstack_memory_used@@Base+0x9d9c>
  441aa4:	ldrb	w0, [x21, #176]
  441aa8:	tbz	w0, #0, 441a1c <_obstack_memory_used@@Base+0x9d9c>
  441aac:	mov	x26, #0x18                  	// #24
  441ab0:	mul	x0, x24, x26
  441ab4:	bl	4045f0 <malloc@plt>
  441ab8:	str	x0, [x21, #56]
  441abc:	cbz	x0, 44189c <_obstack_memory_used@@Base+0x9c1c>
  441ac0:	mov	x0, #0x0                   	// #0
  441ac4:	ldr	x1, [x21, #16]
  441ac8:	cmp	x0, x1
  441acc:	b.cc	441b14 <_obstack_memory_used@@Base+0x9e94>  // b.lo, b.ul, b.last
  441ad0:	mov	x24, #0x0                   	// #0
  441ad4:	mov	x27, #0x18                  	// #24
  441ad8:	ldr	x0, [x21, #16]
  441adc:	cmp	x0, x24
  441ae0:	b.ls	4419c0 <_obstack_memory_used@@Base+0x9d40>  // b.plast
  441ae4:	ldr	x0, [x21, #48]
  441ae8:	mul	x28, x24, x27
  441aec:	mov	x26, #0x0                   	// #0
  441af0:	add	x0, x0, x28
  441af4:	ldr	x2, [x0, #16]
  441af8:	ldr	x0, [x21, #48]
  441afc:	add	x0, x0, x28
  441b00:	ldr	x0, [x0, #8]
  441b04:	cmp	x26, x0
  441b08:	b.lt	441b2c <_obstack_memory_used@@Base+0x9eac>  // b.tstop
  441b0c:	add	x24, x24, #0x1
  441b10:	b	441ad8 <_obstack_memory_used@@Base+0x9e58>
  441b14:	ldr	x1, [x21, #56]
  441b18:	madd	x1, x0, x26, x1
  441b1c:	add	x0, x0, #0x1
  441b20:	stp	xzr, xzr, [x1]
  441b24:	str	xzr, [x1, #16]
  441b28:	b	441ac4 <_obstack_memory_used@@Base+0x9e44>
  441b2c:	ldr	x3, [x2, x26, lsl #3]
  441b30:	mov	x1, x24
  441b34:	ldr	x0, [x21, #56]
  441b38:	str	x2, [sp, #104]
  441b3c:	madd	x0, x3, x27, x0
  441b40:	bl	4385cc <_obstack_memory_used@@Base+0x94c>
  441b44:	tst	w0, #0xff
  441b48:	b.eq	441b58 <_obstack_memory_used@@Base+0x9ed8>  // b.none
  441b4c:	add	x26, x26, #0x1
  441b50:	ldr	x2, [sp, #104]
  441b54:	b	441af8 <_obstack_memory_used@@Base+0x9e78>
  441b58:	mov	w22, #0xc                   	// #12
  441b5c:	b	4419c0 <_obstack_memory_used@@Base+0x9d40>
  441b60:	ldr	x0, [x19]
  441b64:	lsl	x5, x2, #4
  441b68:	add	x3, x0, x2, lsl #4
  441b6c:	ldrb	w3, [x3, #8]
  441b70:	sub	w3, w3, #0x1
  441b74:	cmp	w3, #0xb
  441b78:	b.hi	441ca4 <_obstack_memory_used@@Base+0xa024>  // b.pmore
  441b7c:	ldrb	w3, [x4, w3, uxtw]
  441b80:	adr	x10, 441b8c <_obstack_memory_used@@Base+0x9f0c>
  441b84:	add	x3, x10, w3, sxtb #2
  441b88:	br	x3
  441b8c:	mov	w1, #0x1                   	// #1
  441b90:	add	x2, x2, #0x1
  441b94:	b	441a60 <_obstack_memory_used@@Base+0x9de0>
  441b98:	ldr	x0, [x0, x5]
  441b9c:	ldr	x3, [x0, #16]
  441ba0:	cbnz	x3, 441bac <_obstack_memory_used@@Base+0x9f2c>
  441ba4:	ldr	x0, [x0, #24]
  441ba8:	cbz	x0, 441b90 <_obstack_memory_used@@Base+0x9f10>
  441bac:	ldr	x0, [x19, #104]
  441bb0:	mov	x22, #0x18                  	// #24
  441bb4:	ldr	x1, [x19, #48]
  441bb8:	ldr	x0, [x0, #24]
  441bbc:	ldr	x0, [x0, #56]
  441bc0:	str	x0, [x19, #144]
  441bc4:	madd	x1, x0, x22, x1
  441bc8:	add	x0, sp, #0x80
  441bcc:	bl	43b040 <_obstack_memory_used@@Base+0x33c0>
  441bd0:	str	w0, [sp, #124]
  441bd4:	mov	w21, w0
  441bd8:	cbnz	w0, 441c08 <_obstack_memory_used@@Base+0x9f88>
  441bdc:	ldr	x0, [x19, #152]
  441be0:	cmp	x0, #0x0
  441be4:	b.gt	441da4 <_obstack_memory_used@@Base+0xa124>
  441be8:	add	x2, sp, #0x80
  441bec:	mov	x1, x19
  441bf0:	add	x0, sp, #0x7c
  441bf4:	mov	w3, #0x0                   	// #0
  441bf8:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  441bfc:	str	x0, [x19, #72]
  441c00:	cbnz	x0, 441dac <_obstack_memory_used@@Base+0xa12c>
  441c04:	ldr	w21, [sp, #124]
  441c08:	str	w21, [sp, #120]
  441c0c:	ldr	x21, [x20]
  441c10:	ldr	x0, [x21, #112]
  441c14:	cbnz	x0, 441e30 <_obstack_memory_used@@Base+0xa1b0>
  441c18:	mov	w0, #0xf                   	// #15
  441c1c:	str	w0, [x21, #128]
  441c20:	ldr	x0, [x21, #32]
  441c24:	stp	xzr, xzr, [x21, #104]
  441c28:	bl	404ae0 <free@plt>
  441c2c:	str	xzr, [x21, #32]
  441c30:	add	x0, sp, #0x98
  441c34:	bl	439330 <_obstack_memory_used@@Base+0x16b0>
  441c38:	ldr	w0, [sp, #120]
  441c3c:	cbnz	w0, 4415b0 <_obstack_memory_used@@Base+0x9930>
  441c40:	ldr	w0, [sp, #120]
  441c44:	ldp	x19, x20, [sp, #16]
  441c48:	ldp	x21, x22, [sp, #32]
  441c4c:	ldp	x23, x24, [sp, #48]
  441c50:	ldp	x25, x26, [sp, #64]
  441c54:	ldp	x27, x28, [sp, #80]
  441c58:	ldp	x29, x30, [sp], #304
  441c5c:	ret
  441c60:	ldrsb	w0, [x0, x5]
  441c64:	cmp	w0, #0x0
  441c68:	csel	w25, w25, w9, ge  // ge = tcont
  441c6c:	b	441b90 <_obstack_memory_used@@Base+0x9f10>
  441c70:	ldr	w0, [x0, x5]
  441c74:	cmp	w0, #0x40
  441c78:	b.hi	441c98 <_obstack_memory_used@@Base+0xa018>  // b.pmore
  441c7c:	cmp	w0, #0xf
  441c80:	b.ls	441bac <_obstack_memory_used@@Base+0x9f2c>  // b.plast
  441c84:	sub	w0, w0, #0x10
  441c88:	lsl	x0, x7, x0
  441c8c:	tst	x0, x8
  441c90:	b.eq	441bac <_obstack_memory_used@@Base+0x9f2c>  // b.none
  441c94:	b	441b90 <_obstack_memory_used@@Base+0x9f10>
  441c98:	cmp	w0, #0x80
  441c9c:	b.eq	441b90 <_obstack_memory_used@@Base+0x9f10>  // b.none
  441ca0:	b	441bac <_obstack_memory_used@@Base+0x9f2c>
  441ca4:	bl	404970 <abort@plt>
  441ca8:	ldr	x4, [x19]
  441cac:	lsl	x7, x0, #4
  441cb0:	add	x2, x4, x0, lsl #4
  441cb4:	ldrb	w3, [x2, #8]
  441cb8:	cmp	w3, #0x1
  441cbc:	b.ne	441ce4 <_obstack_memory_used@@Base+0xa064>  // b.any
  441cc0:	ldrsb	w3, [x4, x7]
  441cc4:	tbz	w3, #31, 441cd4 <_obstack_memory_used@@Base+0xa054>
  441cc8:	ldrb	w3, [x2, #10]
  441ccc:	and	w3, w3, #0xffffffdf
  441cd0:	strb	w3, [x2, #10]
  441cd4:	add	x0, x0, #0x1
  441cd8:	cmp	x0, x6
  441cdc:	b.ne	441ca8 <_obstack_memory_used@@Base+0xa028>  // b.any
  441ce0:	b	441a74 <_obstack_memory_used@@Base+0x9df4>
  441ce4:	cmp	w3, #0x5
  441ce8:	b.ne	441cd4 <_obstack_memory_used@@Base+0xa054>  // b.any
  441cec:	strb	w5, [x2, #8]
  441cf0:	b	441cd4 <_obstack_memory_used@@Base+0xa054>
  441cf4:	mov	x0, #0x0                   	// #0
  441cf8:	mov	w5, #0x7                   	// #7
  441cfc:	b	441cd8 <_obstack_memory_used@@Base+0xa058>
  441d00:	ldr	x5, [sp, #144]
  441d04:	ldr	x3, [x19]
  441d08:	ldr	x0, [x5, x6, lsl #3]
  441d0c:	add	x7, x3, x0, lsl #4
  441d10:	ldrb	w1, [x7, #8]
  441d14:	cmp	w1, #0x4
  441d18:	b.ne	441d60 <_obstack_memory_used@@Base+0xa0e0>  // b.any
  441d1c:	mov	x1, #0x0                   	// #0
  441d20:	cmp	x1, x4
  441d24:	b.lt	441d74 <_obstack_memory_used@@Base+0xa0f4>  // b.tstop
  441d28:	b.eq	441d60 <_obstack_memory_used@@Base+0xa0e0>  // b.none
  441d2c:	ldr	x1, [x19, #40]
  441d30:	madd	x0, x0, x22, x1
  441d34:	ldr	x0, [x0, #16]
  441d38:	ldr	x1, [x0]
  441d3c:	add	x0, sp, #0x80
  441d40:	bl	437f18 <_obstack_memory_used@@Base+0x298>
  441d44:	cbnz	x0, 441d60 <_obstack_memory_used@@Base+0xa0e0>
  441d48:	ldr	x0, [x19, #48]
  441d4c:	madd	x1, x1, x22, x0
  441d50:	add	x0, sp, #0x80
  441d54:	bl	43a198 <_obstack_memory_used@@Base+0x2518>
  441d58:	cbnz	w0, 441e28 <_obstack_memory_used@@Base+0xa1a8>
  441d5c:	mov	x6, #0x0                   	// #0
  441d60:	add	x6, x6, #0x1
  441d64:	ldr	x4, [sp, #136]
  441d68:	cmp	x6, x4
  441d6c:	b.lt	441d00 <_obstack_memory_used@@Base+0xa080>  // b.tstop
  441d70:	b	441be8 <_obstack_memory_used@@Base+0x9f68>
  441d74:	ldr	x2, [x5, x1, lsl #3]
  441d78:	lsl	x8, x2, #4
  441d7c:	add	x2, x3, x2, lsl #4
  441d80:	ldrb	w2, [x2, #8]
  441d84:	cmp	w2, #0x9
  441d88:	b.ne	441d9c <_obstack_memory_used@@Base+0xa11c>  // b.any
  441d8c:	ldr	x8, [x3, x8]
  441d90:	ldr	x2, [x7]
  441d94:	cmp	x8, x2
  441d98:	b.eq	441d2c <_obstack_memory_used@@Base+0xa0ac>  // b.none
  441d9c:	add	x1, x1, #0x1
  441da0:	b	441d20 <_obstack_memory_used@@Base+0xa0a0>
  441da4:	mov	x6, #0x0                   	// #0
  441da8:	b	441d64 <_obstack_memory_used@@Base+0xa0e4>
  441dac:	ldrsb	w1, [x0, #104]
  441db0:	tbz	w1, #31, 441e1c <_obstack_memory_used@@Base+0xa19c>
  441db4:	add	x2, sp, #0x80
  441db8:	mov	x1, x19
  441dbc:	mov	w3, #0x1                   	// #1
  441dc0:	add	x0, sp, #0x7c
  441dc4:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  441dc8:	str	x0, [x19, #80]
  441dcc:	add	x2, sp, #0x80
  441dd0:	mov	x1, x19
  441dd4:	mov	w3, #0x2                   	// #2
  441dd8:	add	x0, sp, #0x7c
  441ddc:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  441de0:	str	x0, [x19, #88]
  441de4:	mov	x1, x19
  441de8:	add	x2, sp, #0x80
  441dec:	add	x0, sp, #0x7c
  441df0:	mov	w3, #0x6                   	// #6
  441df4:	bl	43b20c <_obstack_memory_used@@Base+0x358c>
  441df8:	str	x0, [x19, #96]
  441dfc:	ldr	x1, [x19, #80]
  441e00:	cbz	x1, 441c04 <_obstack_memory_used@@Base+0x9f84>
  441e04:	ldr	x1, [x19, #88]
  441e08:	cbz	x1, 441c04 <_obstack_memory_used@@Base+0x9f84>
  441e0c:	cbz	x0, 441c04 <_obstack_memory_used@@Base+0x9f84>
  441e10:	ldr	x0, [sp, #144]
  441e14:	bl	404ae0 <free@plt>
  441e18:	b	441c08 <_obstack_memory_used@@Base+0x9f88>
  441e1c:	stp	x0, x0, [x19, #80]
  441e20:	str	x0, [x19, #96]
  441e24:	b	441e10 <_obstack_memory_used@@Base+0xa190>
  441e28:	mov	w21, w0
  441e2c:	b	441c08 <_obstack_memory_used@@Base+0x9f88>
  441e30:	ldr	x22, [x0]
  441e34:	bl	404ae0 <free@plt>
  441e38:	mov	x0, x22
  441e3c:	b	441c14 <_obstack_memory_used@@Base+0x9f94>
  441e40:	mov	w0, #0xc                   	// #12
  441e44:	b	441c44 <_obstack_memory_used@@Base+0x9fc4>
  441e48:	stp	x29, x30, [sp, #-16]!
  441e4c:	mov	x5, x0
  441e50:	mov	x0, x2
  441e54:	adrp	x2, 472000 <argp_program_version_hook@@Base+0x250>
  441e58:	mov	x29, sp
  441e5c:	mov	w6, #0x6f                  	// #111
  441e60:	ldr	x3, [x2, #1048]
  441e64:	ldrb	w2, [x0, #56]
  441e68:	ubfx	w4, w3, #25, #1
  441e6c:	and	w2, w2, w6
  441e70:	ubfiz	w4, w4, #4, #4
  441e74:	orr	w4, w4, #0xffffff80
  441e78:	orr	w4, w4, w2
  441e7c:	strb	w4, [x0, #56]
  441e80:	mov	x2, x1
  441e84:	mov	x1, x5
  441e88:	bl	441410 <_obstack_memory_used@@Base+0x9790>
  441e8c:	cbz	w0, 441eb8 <_obstack_memory_used@@Base+0xa238>
  441e90:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x18380>
  441e94:	add	x2, x2, #0xab0
  441e98:	add	x1, x2, #0x5f
  441e9c:	add	x2, x2, #0x1e0
  441ea0:	ldp	x29, x30, [sp], #16
  441ea4:	ldr	x0, [x2, w0, sxtw #3]
  441ea8:	mov	w2, #0x5                   	// #5
  441eac:	add	x1, x1, x0
  441eb0:	mov	x0, #0x0                   	// #0
  441eb4:	b	404d00 <dcgettext@plt>
  441eb8:	mov	x0, #0x0                   	// #0
  441ebc:	ldp	x29, x30, [sp], #16
  441ec0:	ret
  441ec4:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  441ec8:	mov	x2, x0
  441ecc:	ldr	x0, [x1, #1048]
  441ed0:	str	x2, [x1, #1048]
  441ed4:	ret
  441ed8:	stp	x29, x30, [sp, #-48]!
  441edc:	mov	x2, #0x100                 	// #256
  441ee0:	mov	w1, #0x0                   	// #0
  441ee4:	mov	x29, sp
  441ee8:	stp	x19, x20, [sp, #16]
  441eec:	mov	x19, x0
  441ef0:	ldr	x20, [x0]
  441ef4:	str	x21, [sp, #32]
  441ef8:	ldr	x21, [x0, #32]
  441efc:	mov	x0, x21
  441f00:	bl	404700 <memset@plt>
  441f04:	ldr	x1, [x20, #72]
  441f08:	mov	x0, x19
  441f0c:	mov	x2, x21
  441f10:	bl	43b5d0 <_obstack_memory_used@@Base+0x3950>
  441f14:	ldp	x0, x1, [x20, #72]
  441f18:	cmp	x0, x1
  441f1c:	b.eq	441f2c <_obstack_memory_used@@Base+0xa2ac>  // b.none
  441f20:	mov	x2, x21
  441f24:	mov	x0, x19
  441f28:	bl	43b5d0 <_obstack_memory_used@@Base+0x3950>
  441f2c:	ldr	x0, [x20, #72]
  441f30:	ldr	x1, [x20, #88]
  441f34:	cmp	x0, x1
  441f38:	b.eq	441f48 <_obstack_memory_used@@Base+0xa2c8>  // b.none
  441f3c:	mov	x2, x21
  441f40:	mov	x0, x19
  441f44:	bl	43b5d0 <_obstack_memory_used@@Base+0x3950>
  441f48:	ldr	x0, [x20, #72]
  441f4c:	ldr	x1, [x20, #96]
  441f50:	cmp	x0, x1
  441f54:	b.eq	441f64 <_obstack_memory_used@@Base+0xa2e4>  // b.none
  441f58:	mov	x2, x21
  441f5c:	mov	x0, x19
  441f60:	bl	43b5d0 <_obstack_memory_used@@Base+0x3950>
  441f64:	ldrb	w0, [x19, #56]
  441f68:	ldr	x21, [sp, #32]
  441f6c:	orr	w0, w0, #0x8
  441f70:	strb	w0, [x19, #56]
  441f74:	mov	w0, #0x0                   	// #0
  441f78:	ldp	x19, x20, [sp, #16]
  441f7c:	ldp	x29, x30, [sp], #48
  441f80:	ret
  441f84:	sub	sp, sp, #0x80
  441f88:	cmp	x3, #0x0
  441f8c:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  441f90:	stp	x29, x30, [sp, #16]
  441f94:	add	x29, sp, #0x10
  441f98:	stp	x19, x20, [sp, #32]
  441f9c:	stp	x21, x22, [sp, #48]
  441fa0:	add	x21, x3, x4
  441fa4:	stp	x23, x24, [sp, #64]
  441fa8:	mov	x23, x0
  441fac:	and	w0, w7, #0xff
  441fb0:	stp	x25, x26, [sp, #80]
  441fb4:	stp	x27, x28, [sp, #96]
  441fb8:	str	w0, [sp, #124]
  441fbc:	b.gt	4422b8 <_obstack_memory_used@@Base+0xa638>
  441fc0:	mov	x26, x1
  441fc4:	mov	x25, x2
  441fc8:	mov	x22, x3
  441fcc:	mov	x27, x5
  441fd0:	mov	x19, x6
  441fd4:	cmp	x21, x2
  441fd8:	b.gt	442058 <_obstack_memory_used@@Base+0xa3d8>
  441fdc:	cmp	x4, #0x0
  441fe0:	ccmp	x3, x21, #0x4, ge  // ge = tcont
  441fe4:	b.gt	442058 <_obstack_memory_used@@Base+0xa3d8>
  441fe8:	tbnz	x21, #63, 442060 <_obstack_memory_used@@Base+0xa3e0>
  441fec:	cmp	x4, #0x0
  441ff0:	ccmp	x3, x21, #0x0, lt  // lt = tstop
  441ff4:	csel	x21, x21, xzr, gt
  441ff8:	ldrb	w0, [x23, #56]
  441ffc:	cmp	x21, x22
  442000:	ubfx	x28, x0, #5, #2
  442004:	b.le	44201c <_obstack_memory_used@@Base+0xa39c>
  442008:	ldr	x1, [x23, #32]
  44200c:	cbz	x1, 44201c <_obstack_memory_used@@Base+0xa39c>
  442010:	tbnz	w0, #3, 44201c <_obstack_memory_used@@Base+0xa39c>
  442014:	mov	x0, x23
  442018:	bl	441ed8 <_obstack_memory_used@@Base+0xa258>
  44201c:	ldrb	w0, [x23, #56]
  442020:	tbnz	w0, #4, 44204c <_obstack_memory_used@@Base+0xa3cc>
  442024:	cbz	x19, 4420e0 <_obstack_memory_used@@Base+0xa460>
  442028:	and	w0, w0, #0x6
  44202c:	cmp	w0, #0x4
  442030:	ldr	x1, [x23, #48]
  442034:	b.ne	442068 <_obstack_memory_used@@Base+0xa3e8>  // b.any
  442038:	ldr	x20, [x19]
  44203c:	cmp	x1, x20
  442040:	b.cc	442068 <_obstack_memory_used@@Base+0xa3e8>  // b.lo, b.ul, b.last
  442044:	cmp	x20, #0x0
  442048:	b.gt	44206c <_obstack_memory_used@@Base+0xa3ec>
  44204c:	mov	x20, #0x1                   	// #1
  442050:	mov	x19, #0x0                   	// #0
  442054:	b	44206c <_obstack_memory_used@@Base+0xa3ec>
  442058:	mov	x21, x25
  44205c:	b	441ff8 <_obstack_memory_used@@Base+0xa378>
  442060:	mov	x21, #0x0                   	// #0
  442064:	b	441ff8 <_obstack_memory_used@@Base+0xa378>
  442068:	add	x20, x1, #0x1
  44206c:	lsl	x0, x20, #4
  442070:	bl	4045f0 <malloc@plt>
  442074:	mov	x24, x0
  442078:	cbz	x0, 4422c0 <_obstack_memory_used@@Base+0xa640>
  44207c:	str	w28, [sp]
  442080:	mov	x7, x0
  442084:	mov	x6, x20
  442088:	mov	x5, x27
  44208c:	mov	x4, x21
  442090:	mov	x3, x22
  442094:	mov	x2, x25
  442098:	mov	x1, x26
  44209c:	mov	x0, x23
  4420a0:	bl	43f33c <_obstack_memory_used@@Base+0x76bc>
  4420a4:	cbz	w0, 4420e8 <_obstack_memory_used@@Base+0xa468>
  4420a8:	cmp	w0, #0x1
  4420ac:	b.eq	4422b0 <_obstack_memory_used@@Base+0xa630>  // b.none
  4420b0:	mov	x19, #0xfffffffffffffffe    	// #-2
  4420b4:	mov	x0, x24
  4420b8:	bl	404ae0 <free@plt>
  4420bc:	mov	x0, x19
  4420c0:	ldp	x29, x30, [sp, #16]
  4420c4:	ldp	x19, x20, [sp, #32]
  4420c8:	ldp	x21, x22, [sp, #48]
  4420cc:	ldp	x23, x24, [sp, #64]
  4420d0:	ldp	x25, x26, [sp, #80]
  4420d4:	ldp	x27, x28, [sp, #96]
  4420d8:	add	sp, sp, #0x80
  4420dc:	ret
  4420e0:	mov	x20, #0x1                   	// #1
  4420e4:	b	44206c <_obstack_memory_used@@Base+0xa3ec>
  4420e8:	cbnz	x19, 442124 <_obstack_memory_used@@Base+0xa4a4>
  4420ec:	ldr	w0, [sp, #124]
  4420f0:	ldr	x19, [x24]
  4420f4:	cbz	w0, 4420b4 <_obstack_memory_used@@Base+0xa434>
  4420f8:	cmp	x19, x22
  4420fc:	b.eq	4422a4 <_obstack_memory_used@@Base+0xa624>  // b.none
  442100:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  442104:	add	x3, x3, #0xab0
  442108:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  44210c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  442110:	add	x3, x3, #0x275
  442114:	add	x1, x1, #0x97b
  442118:	add	x0, x0, #0x9d7
  44211c:	mov	w2, #0x1be                 	// #446
  442120:	b	442248 <_obstack_memory_used@@Base+0xa5c8>
  442124:	ldrb	w21, [x23, #56]
  442128:	add	x26, x20, #0x1
  44212c:	ubfx	x21, x21, #1, #2
  442130:	cbnz	w21, 4421d0 <_obstack_memory_used@@Base+0xa550>
  442134:	lsl	x27, x26, #3
  442138:	mov	x0, x27
  44213c:	bl	4045f0 <malloc@plt>
  442140:	str	x0, [x19, #8]
  442144:	mov	x21, x0
  442148:	cbnz	x0, 442168 <_obstack_memory_used@@Base+0xa4e8>
  44214c:	mov	w21, #0x0                   	// #0
  442150:	ldrb	w0, [x23, #56]
  442154:	bfi	w0, w21, #1, #2
  442158:	strb	w0, [x23, #56]
  44215c:	tst	w0, #0x6
  442160:	b.ne	4420ec <_obstack_memory_used@@Base+0xa46c>  // b.any
  442164:	b	4420b0 <_obstack_memory_used@@Base+0xa430>
  442168:	mov	x0, x27
  44216c:	bl	4045f0 <malloc@plt>
  442170:	str	x0, [x19, #16]
  442174:	cbnz	x0, 442184 <_obstack_memory_used@@Base+0xa504>
  442178:	mov	x0, x21
  44217c:	bl	404ae0 <free@plt>
  442180:	b	44214c <_obstack_memory_used@@Base+0xa4cc>
  442184:	mov	w21, #0x1                   	// #1
  442188:	str	x26, [x19]
  44218c:	mov	x1, x24
  442190:	mov	x0, #0x0                   	// #0
  442194:	cmp	x20, x0
  442198:	b.gt	44227c <_obstack_memory_used@@Base+0xa5fc>
  44219c:	cmp	x20, #0x0
  4421a0:	mov	x0, #0xffffffffffffffff    	// #-1
  4421a4:	csel	x20, x20, xzr, ge  // ge = tcont
  4421a8:	ldr	x1, [x19]
  4421ac:	cmp	x20, x1
  4421b0:	b.cs	442150 <_obstack_memory_used@@Base+0xa4d0>  // b.hs, b.nlast
  4421b4:	ldr	x2, [x19, #16]
  4421b8:	lsl	x1, x20, #3
  4421bc:	add	x20, x20, #0x1
  4421c0:	str	x0, [x2, x1]
  4421c4:	ldr	x2, [x19, #8]
  4421c8:	str	x0, [x2, x1]
  4421cc:	b	4421a8 <_obstack_memory_used@@Base+0xa528>
  4421d0:	cmp	w21, #0x1
  4421d4:	b.ne	442220 <_obstack_memory_used@@Base+0xa5a0>  // b.any
  4421d8:	ldr	x0, [x19]
  4421dc:	cmp	x0, x26
  4421e0:	b.cs	44218c <_obstack_memory_used@@Base+0xa50c>  // b.hs, b.nlast
  4421e4:	ldr	x0, [x19, #8]
  4421e8:	lsl	x28, x26, #3
  4421ec:	mov	x1, x28
  4421f0:	bl	404820 <realloc@plt>
  4421f4:	mov	x27, x0
  4421f8:	cbz	x0, 44214c <_obstack_memory_used@@Base+0xa4cc>
  4421fc:	ldr	x0, [x19, #16]
  442200:	mov	x1, x28
  442204:	bl	404820 <realloc@plt>
  442208:	cbnz	x0, 442214 <_obstack_memory_used@@Base+0xa594>
  44220c:	mov	x0, x27
  442210:	b	44217c <_obstack_memory_used@@Base+0xa4fc>
  442214:	stp	x26, x27, [x19]
  442218:	str	x0, [x19, #16]
  44221c:	b	44218c <_obstack_memory_used@@Base+0xa50c>
  442220:	cmp	w21, #0x2
  442224:	b.eq	44224c <_obstack_memory_used@@Base+0xa5cc>  // b.none
  442228:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  44222c:	add	x3, x3, #0xab0
  442230:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  442234:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  442238:	add	x3, x3, #0x268
  44223c:	add	x1, x1, #0x97b
  442240:	add	x0, x0, #0x9a2
  442244:	mov	w2, #0x1f9                 	// #505
  442248:	bl	404e00 <__assert_fail@plt>
  44224c:	ldr	x0, [x19]
  442250:	cmp	x20, x0
  442254:	b.ls	44218c <_obstack_memory_used@@Base+0xa50c>  // b.plast
  442258:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x18380>
  44225c:	add	x3, x3, #0xab0
  442260:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  442264:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  442268:	add	x3, x3, #0x268
  44226c:	add	x1, x1, #0x97b
  442270:	add	x0, x0, #0x9bf
  442274:	mov	w2, #0x1fb                 	// #507
  442278:	b	442248 <_obstack_memory_used@@Base+0xa5c8>
  44227c:	ldr	x3, [x19, #8]
  442280:	lsl	x2, x0, #3
  442284:	ldr	x4, [x1]
  442288:	add	x0, x0, #0x1
  44228c:	str	x4, [x3, x2]
  442290:	add	x1, x1, #0x10
  442294:	ldr	x3, [x19, #16]
  442298:	ldur	x4, [x1, #-8]
  44229c:	str	x4, [x3, x2]
  4422a0:	b	442194 <_obstack_memory_used@@Base+0xa514>
  4422a4:	ldr	x19, [x24, #8]
  4422a8:	sub	x19, x19, x22
  4422ac:	b	4420b4 <_obstack_memory_used@@Base+0xa434>
  4422b0:	mov	x19, #0xffffffffffffffff    	// #-1
  4422b4:	b	4420b4 <_obstack_memory_used@@Base+0xa434>
  4422b8:	mov	x19, #0xffffffffffffffff    	// #-1
  4422bc:	b	4420bc <_obstack_memory_used@@Base+0xa43c>
  4422c0:	mov	x19, #0xfffffffffffffffe    	// #-2
  4422c4:	b	4420bc <_obstack_memory_used@@Base+0xa43c>
  4422c8:	stp	x29, x30, [sp, #-96]!
  4422cc:	cmp	x2, #0x0
  4422d0:	ccmp	x4, #0x0, #0x1, ge  // ge = tcont
  4422d4:	mov	x29, sp
  4422d8:	stp	x19, x20, [sp, #16]
  4422dc:	stp	x21, x22, [sp, #32]
  4422e0:	stp	x23, x24, [sp, #48]
  4422e4:	stp	x25, x26, [sp, #64]
  4422e8:	stp	x27, x28, [sp, #80]
  4422ec:	b.ge	442314 <_obstack_memory_used@@Base+0xa694>  // b.tcont
  4422f0:	mov	x19, #0xfffffffffffffffe    	// #-2
  4422f4:	mov	x0, x19
  4422f8:	ldp	x19, x20, [sp, #16]
  4422fc:	ldp	x21, x22, [sp, #32]
  442300:	ldp	x23, x24, [sp, #48]
  442304:	ldp	x25, x26, [sp, #64]
  442308:	ldp	x27, x28, [sp, #80]
  44230c:	ldp	x29, x30, [sp], #96
  442310:	ret
  442314:	mov	x23, x0
  442318:	ldr	x0, [sp, #96]
  44231c:	tbnz	x0, #63, 4422f0 <_obstack_memory_used@@Base+0xa670>
  442320:	mov	x19, x2
  442324:	mov	x21, x4
  442328:	adds	x27, x2, x4
  44232c:	b.vs	4422f0 <_obstack_memory_used@@Base+0xa670>
  442330:	mov	x28, x1
  442334:	mov	x24, x5
  442338:	mov	x25, x6
  44233c:	mov	x26, x7
  442340:	cbz	x4, 4423b4 <_obstack_memory_used@@Base+0xa734>
  442344:	mov	x22, x3
  442348:	cbz	x2, 4423b0 <_obstack_memory_used@@Base+0xa730>
  44234c:	mov	x0, x27
  442350:	bl	4045f0 <malloc@plt>
  442354:	mov	x20, x0
  442358:	cbz	x0, 4422f0 <_obstack_memory_used@@Base+0xa670>
  44235c:	mov	x1, x28
  442360:	mov	x28, x20
  442364:	mov	x2, x19
  442368:	bl	404200 <memcpy@plt>
  44236c:	mov	x2, x21
  442370:	mov	x1, x22
  442374:	add	x0, x20, x19
  442378:	bl	404200 <memcpy@plt>
  44237c:	ldrb	w7, [sp, #104]
  442380:	mov	x6, x26
  442384:	ldr	x5, [sp, #96]
  442388:	mov	x4, x25
  44238c:	mov	x3, x24
  442390:	mov	x2, x27
  442394:	mov	x1, x28
  442398:	mov	x0, x23
  44239c:	bl	441f84 <_obstack_memory_used@@Base+0xa304>
  4423a0:	mov	x19, x0
  4423a4:	mov	x0, x20
  4423a8:	bl	404ae0 <free@plt>
  4423ac:	b	4422f4 <_obstack_memory_used@@Base+0xa674>
  4423b0:	mov	x28, x3
  4423b4:	mov	x20, #0x0                   	// #0
  4423b8:	b	44237c <_obstack_memory_used@@Base+0xa6fc>
  4423bc:	stp	x29, x30, [sp, #-64]!
  4423c0:	mov	x29, sp
  4423c4:	stp	x19, x20, [sp, #16]
  4423c8:	mov	w20, w2
  4423cc:	mov	x19, x0
  4423d0:	tst	x20, #0x1
  4423d4:	stp	x21, x22, [sp, #32]
  4423d8:	mov	x21, #0xb2fc                	// #45820
  4423dc:	str	x23, [sp, #48]
  4423e0:	mov	x23, #0x2c6                 	// #710
  4423e4:	stp	xzr, xzr, [x0]
  4423e8:	mov	x22, x1
  4423ec:	movk	x21, #0x3, lsl #16
  4423f0:	str	xzr, [x0, #16]
  4423f4:	movk	x23, #0x101, lsl #16
  4423f8:	mov	x0, #0x100                 	// #256
  4423fc:	csel	x23, x21, x23, ne  // ne = any
  442400:	bl	4045f0 <malloc@plt>
  442404:	str	x0, [x19, #32]
  442408:	cbz	x0, 4424b4 <_obstack_memory_used@@Base+0xa834>
  44240c:	sbfiz	x21, x20, #21, #32
  442410:	and	x21, x21, #0x400000
  442414:	orr	x21, x21, x23
  442418:	tbz	w20, #2, 442498 <_obstack_memory_used@@Base+0xa818>
  44241c:	and	x21, x21, #0xffffffffffffffbf
  442420:	mov	w0, #0x1                   	// #1
  442424:	orr	x21, x21, #0x100
  442428:	ubfx	x20, x20, #3, #1
  44242c:	ubfiz	w0, w0, #7, #1
  442430:	mov	w1, #0x6f                  	// #111
  442434:	str	xzr, [x19, #40]
  442438:	orr	w20, w0, w20, lsl #4
  44243c:	ldrb	w0, [x19, #56]
  442440:	and	w0, w0, w1
  442444:	orr	w20, w20, w0
  442448:	strb	w20, [x19, #56]
  44244c:	mov	x0, x22
  442450:	bl	404280 <strlen@plt>
  442454:	mov	x2, x0
  442458:	mov	x3, x21
  44245c:	mov	x1, x22
  442460:	mov	x0, x19
  442464:	bl	441410 <_obstack_memory_used@@Base+0x9790>
  442468:	mov	w20, w0
  44246c:	cmp	w0, #0x10
  442470:	b.eq	4424a0 <_obstack_memory_used@@Base+0xa820>  // b.none
  442474:	cbnz	w0, 4424a4 <_obstack_memory_used@@Base+0xa824>
  442478:	mov	x0, x19
  44247c:	bl	441ed8 <_obstack_memory_used@@Base+0xa258>
  442480:	mov	w0, w20
  442484:	ldp	x19, x20, [sp, #16]
  442488:	ldp	x21, x22, [sp, #32]
  44248c:	ldr	x23, [sp, #48]
  442490:	ldp	x29, x30, [sp], #64
  442494:	ret
  442498:	mov	w0, #0x0                   	// #0
  44249c:	b	442428 <_obstack_memory_used@@Base+0xa7a8>
  4424a0:	mov	w20, #0x8                   	// #8
  4424a4:	ldr	x0, [x19, #32]
  4424a8:	bl	404ae0 <free@plt>
  4424ac:	str	xzr, [x19, #32]
  4424b0:	b	442480 <_obstack_memory_used@@Base+0xa800>
  4424b4:	mov	w20, #0xc                   	// #12
  4424b8:	b	442480 <_obstack_memory_used@@Base+0xa800>
  4424bc:	stp	x29, x30, [sp, #-48]!
  4424c0:	cmp	w0, #0x10
  4424c4:	mov	x29, sp
  4424c8:	stp	x19, x20, [sp, #16]
  4424cc:	stp	x21, x22, [sp, #32]
  4424d0:	b.ls	4424d8 <_obstack_memory_used@@Base+0xa858>  // b.plast
  4424d4:	bl	404970 <abort@plt>
  4424d8:	adrp	x4, 450000 <_obstack_memory_used@@Base+0x18380>
  4424dc:	add	x4, x4, #0xab0
  4424e0:	add	x1, x4, #0x5f
  4424e4:	add	x4, x4, #0x1e0
  4424e8:	mov	x21, x2
  4424ec:	mov	w2, #0x5                   	// #5
  4424f0:	mov	x20, x3
  4424f4:	ldr	x0, [x4, w0, sxtw #3]
  4424f8:	add	x1, x1, x0
  4424fc:	mov	x0, #0x0                   	// #0
  442500:	bl	404d00 <dcgettext@plt>
  442504:	mov	x22, x0
  442508:	bl	404280 <strlen@plt>
  44250c:	add	x19, x0, #0x1
  442510:	cbz	x20, 442534 <_obstack_memory_used@@Base+0xa8b4>
  442514:	mov	x2, x19
  442518:	cmp	x19, x20
  44251c:	b.ls	442528 <_obstack_memory_used@@Base+0xa8a8>  // b.plast
  442520:	sub	x2, x20, #0x1
  442524:	strb	wzr, [x21, x2]
  442528:	mov	x1, x22
  44252c:	mov	x0, x21
  442530:	bl	404200 <memcpy@plt>
  442534:	mov	x0, x19
  442538:	ldp	x19, x20, [sp, #16]
  44253c:	ldp	x21, x22, [sp, #32]
  442540:	ldp	x29, x30, [sp], #48
  442544:	ret
  442548:	stp	x29, x30, [sp, #-32]!
  44254c:	mov	x29, sp
  442550:	str	x19, [sp, #16]
  442554:	mov	x19, x0
  442558:	ldr	x0, [x0]
  44255c:	cbz	x0, 442564 <_obstack_memory_used@@Base+0xa8e4>
  442560:	bl	439374 <_obstack_memory_used@@Base+0x16f4>
  442564:	ldr	x0, [x19, #32]
  442568:	stp	xzr, xzr, [x19]
  44256c:	bl	404ae0 <free@plt>
  442570:	str	xzr, [x19, #32]
  442574:	ldr	x0, [x19, #40]
  442578:	bl	404ae0 <free@plt>
  44257c:	str	xzr, [x19, #40]
  442580:	ldr	x19, [sp, #16]
  442584:	ldp	x29, x30, [sp], #32
  442588:	ret
  44258c:	tst	w4, #0xfffffff8
  442590:	b.ne	442630 <_obstack_memory_used@@Base+0xa9b0>  // b.any
  442594:	sub	sp, sp, #0x50
  442598:	stp	x29, x30, [sp, #16]
  44259c:	add	x29, sp, #0x10
  4425a0:	stp	x19, x20, [sp, #32]
  4425a4:	mov	x20, x0
  4425a8:	mov	w19, w4
  4425ac:	stp	x21, x22, [sp, #48]
  4425b0:	mov	x21, x1
  4425b4:	mov	x22, x3
  4425b8:	str	x23, [sp, #64]
  4425bc:	mov	x23, x2
  4425c0:	tbz	w19, #2, 442610 <_obstack_memory_used@@Base+0xa990>
  4425c4:	ldp	x3, x5, [x3]
  4425c8:	ldrb	w0, [x20, #56]
  4425cc:	str	w19, [sp]
  4425d0:	tbz	w0, #4, 442624 <_obstack_memory_used@@Base+0xa9a4>
  4425d4:	mov	x7, #0x0                   	// #0
  4425d8:	mov	x6, #0x0                   	// #0
  4425dc:	mov	x1, x21
  4425e0:	mov	x4, x5
  4425e4:	mov	x2, x5
  4425e8:	mov	x0, x20
  4425ec:	bl	43f33c <_obstack_memory_used@@Base+0x76bc>
  4425f0:	cmp	w0, #0x0
  4425f4:	cset	w0, ne  // ne = any
  4425f8:	ldp	x29, x30, [sp, #16]
  4425fc:	ldp	x19, x20, [sp, #32]
  442600:	ldp	x21, x22, [sp, #48]
  442604:	ldr	x23, [sp, #64]
  442608:	add	sp, sp, #0x50
  44260c:	ret
  442610:	mov	x0, x1
  442614:	bl	404280 <strlen@plt>
  442618:	mov	x3, #0x0                   	// #0
  44261c:	mov	x5, x0
  442620:	b	4425c8 <_obstack_memory_used@@Base+0xa948>
  442624:	mov	x7, x22
  442628:	mov	x6, x23
  44262c:	b	4425dc <_obstack_memory_used@@Base+0xa95c>
  442630:	mov	w0, #0x2                   	// #2
  442634:	ret
  442638:	mov	x6, x4
  44263c:	mov	x5, x2
  442640:	mov	w7, #0x1                   	// #1
  442644:	mov	x4, #0x0                   	// #0
  442648:	b	441f84 <_obstack_memory_used@@Base+0xa304>
  44264c:	mov	x6, x5
  442650:	mov	w7, #0x0                   	// #0
  442654:	mov	x5, x2
  442658:	b	441f84 <_obstack_memory_used@@Base+0xa304>
  44265c:	sub	sp, sp, #0x20
  442660:	mov	w8, #0x1                   	// #1
  442664:	stp	x29, x30, [sp, #16]
  442668:	add	x29, sp, #0x10
  44266c:	str	x7, [sp]
  442670:	mov	x7, x6
  442674:	strb	w8, [sp, #8]
  442678:	mov	x6, #0x0                   	// #0
  44267c:	bl	4422c8 <_obstack_memory_used@@Base+0xa648>
  442680:	ldp	x29, x30, [sp, #16]
  442684:	add	sp, sp, #0x20
  442688:	ret
  44268c:	sub	sp, sp, #0x20
  442690:	stp	x29, x30, [sp, #16]
  442694:	add	x29, sp, #0x10
  442698:	ldr	x8, [sp, #32]
  44269c:	str	x8, [sp]
  4426a0:	strb	wzr, [sp, #8]
  4426a4:	bl	4422c8 <_obstack_memory_used@@Base+0xa648>
  4426a8:	ldp	x29, x30, [sp, #16]
  4426ac:	add	sp, sp, #0x20
  4426b0:	ret
  4426b4:	ldrb	w5, [x0, #56]
  4426b8:	cbz	x2, 4426d4 <_obstack_memory_used@@Base+0xaa54>
  4426bc:	mov	w6, #0x1                   	// #1
  4426c0:	bfi	w5, w6, #1, #2
  4426c4:	strb	w5, [x0, #56]
  4426c8:	stp	x2, x3, [x1]
  4426cc:	str	x4, [x1, #16]
  4426d0:	ret
  4426d4:	and	w5, w5, #0xfffffff9
  4426d8:	strb	w5, [x0, #56]
  4426dc:	stp	xzr, xzr, [x1]
  4426e0:	str	xzr, [x1, #16]
  4426e4:	b	4426d0 <_obstack_memory_used@@Base+0xaa50>
  4426e8:	mov	x1, x0
  4426ec:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x17380>
  4426f0:	add	x0, x2, #0x1fd
  4426f4:	cbz	x1, 442700 <_obstack_memory_used@@Base+0xaa80>
  4426f8:	mov	w2, #0x1                   	// #1
  4426fc:	b	4043a0 <setenv@plt>
  442700:	b	404c60 <unsetenv@plt>
  442704:	stp	x29, x30, [sp, #-48]!
  442708:	mov	x29, sp
  44270c:	stp	x19, x20, [sp, #16]
  442710:	str	x21, [sp, #32]
  442714:	mov	x21, x0
  442718:	cbz	x0, 442788 <_obstack_memory_used@@Base+0xab08>
  44271c:	bl	404280 <strlen@plt>
  442720:	add	x20, x0, #0x1
  442724:	cmp	x20, #0x76
  442728:	mov	x0, #0x76                  	// #118
  44272c:	csel	x0, x20, x0, cs  // cs = hs, nlast
  442730:	add	x0, x0, #0x11
  442734:	and	x0, x0, #0xfffffffffffffff8
  442738:	bl	4045f0 <malloc@plt>
  44273c:	mov	x19, x0
  442740:	cbz	x0, 442774 <_obstack_memory_used@@Base+0xaaf4>
  442744:	cmp	x21, #0x0
  442748:	str	xzr, [x19]
  44274c:	cset	w0, ne  // ne = any
  442750:	strb	w0, [x19, #8]
  442754:	strb	wzr, [x19, #9]
  442758:	cbz	x21, 442774 <_obstack_memory_used@@Base+0xaaf4>
  44275c:	add	x3, x19, #0x9
  442760:	mov	x2, x20
  442764:	mov	x1, x21
  442768:	mov	x0, x3
  44276c:	bl	404200 <memcpy@plt>
  442770:	strb	wzr, [x0, x20]
  442774:	mov	x0, x19
  442778:	ldp	x19, x20, [sp, #16]
  44277c:	ldr	x21, [sp, #32]
  442780:	ldp	x29, x30, [sp], #48
  442784:	ret
  442788:	mov	x20, #0x0                   	// #0
  44278c:	b	442724 <_obstack_memory_used@@Base+0xaaa4>
  442790:	stp	x29, x30, [sp, #-64]!
  442794:	mov	x29, sp
  442798:	stp	x19, x20, [sp, #16]
  44279c:	ldr	x20, [x1, #48]
  4427a0:	stp	x21, x22, [sp, #32]
  4427a4:	stp	x23, x24, [sp, #48]
  4427a8:	cbz	x20, 442880 <_obstack_memory_used@@Base+0xac00>
  4427ac:	mov	x21, x0
  4427b0:	mov	x23, x1
  4427b4:	cmp	x1, x20
  4427b8:	b.hi	4427c8 <_obstack_memory_used@@Base+0xab48>  // b.pmore
  4427bc:	add	x0, x1, #0x38
  4427c0:	cmp	x20, x0
  4427c4:	b.cc	442880 <_obstack_memory_used@@Base+0xac00>  // b.lo, b.ul, b.last
  4427c8:	ldrb	w0, [x20]
  4427cc:	cbz	w0, 4428b4 <_obstack_memory_used@@Base+0xac34>
  4427d0:	add	x19, x21, #0x9
  4427d4:	mov	x1, x20
  4427d8:	mov	x0, x19
  4427dc:	bl	404a30 <strcmp@plt>
  4427e0:	cbz	w0, 44287c <_obstack_memory_used@@Base+0xabfc>
  4427e4:	ldrb	w0, [x19]
  4427e8:	cbnz	w0, 442830 <_obstack_memory_used@@Base+0xabb0>
  4427ec:	add	x22, x21, #0x9
  4427f0:	cmp	x22, x19
  4427f4:	b.eq	442828 <_obstack_memory_used@@Base+0xaba8>  // b.none
  4427f8:	mov	x0, x20
  4427fc:	sub	x22, x19, x22
  442800:	bl	404280 <strlen@plt>
  442804:	add	x24, x0, #0x1
  442808:	mvn	x0, x22
  44280c:	cmp	x0, x24
  442810:	b.cs	44285c <_obstack_memory_used@@Base+0xabdc>  // b.hs, b.nlast
  442814:	bl	404e10 <__errno_location@plt>
  442818:	mov	w1, #0xc                   	// #12
  44281c:	str	w1, [x0]
  442820:	mov	w0, #0x0                   	// #0
  442824:	b	442884 <_obstack_memory_used@@Base+0xac04>
  442828:	ldrb	w0, [x21, #8]
  44282c:	cbz	w0, 4427f8 <_obstack_memory_used@@Base+0xab78>
  442830:	mov	x0, x19
  442834:	bl	404280 <strlen@plt>
  442838:	add	x0, x0, #0x1
  44283c:	add	x19, x19, x0
  442840:	ldrb	w0, [x19]
  442844:	cbnz	w0, 4427d4 <_obstack_memory_used@@Base+0xab54>
  442848:	ldr	x0, [x21]
  44284c:	cbz	x0, 4427d4 <_obstack_memory_used@@Base+0xab54>
  442850:	add	x19, x0, #0x9
  442854:	mov	x21, x0
  442858:	b	4427d4 <_obstack_memory_used@@Base+0xab54>
  44285c:	add	x22, x24, x22
  442860:	cmp	x22, #0x76
  442864:	b.hi	442898 <_obstack_memory_used@@Base+0xac18>  // b.pmore
  442868:	mov	x2, x24
  44286c:	mov	x1, x20
  442870:	mov	x0, x19
  442874:	bl	404200 <memcpy@plt>
  442878:	strb	wzr, [x19, x24]
  44287c:	str	x19, [x23, #48]
  442880:	mov	w0, #0x1                   	// #1
  442884:	ldp	x19, x20, [sp, #16]
  442888:	ldp	x21, x22, [sp, #32]
  44288c:	ldp	x23, x24, [sp, #48]
  442890:	ldp	x29, x30, [sp], #64
  442894:	ret
  442898:	mov	x0, x20
  44289c:	bl	442704 <_obstack_memory_used@@Base+0xaa84>
  4428a0:	str	x0, [x21]
  4428a4:	cbz	x0, 442820 <_obstack_memory_used@@Base+0xaba0>
  4428a8:	add	x19, x0, #0x9
  4428ac:	strb	wzr, [x0, #8]
  4428b0:	b	44287c <_obstack_memory_used@@Base+0xabfc>
  4428b4:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0x15380>
  4428b8:	add	x19, x19, #0x41a
  4428bc:	b	44287c <_obstack_memory_used@@Base+0xabfc>
  4428c0:	cmp	x0, #0x1
  4428c4:	b.ne	4428cc <_obstack_memory_used@@Base+0xac4c>  // b.any
  4428c8:	ret
  4428cc:	cbnz	x0, 4428d4 <_obstack_memory_used@@Base+0xac54>
  4428d0:	ret
  4428d4:	stp	x29, x30, [sp, #-32]!
  4428d8:	mov	x29, sp
  4428dc:	str	x19, [sp, #16]
  4428e0:	ldr	x19, [x0]
  4428e4:	bl	404ae0 <free@plt>
  4428e8:	mov	x0, x19
  4428ec:	cbnz	x19, 4428e0 <_obstack_memory_used@@Base+0xac60>
  4428f0:	ldr	x19, [sp, #16]
  4428f4:	ldp	x29, x30, [sp], #32
  4428f8:	ret
  4428fc:	stp	x29, x30, [sp, #-48]!
  442900:	mov	x29, sp
  442904:	stp	x19, x20, [sp, #16]
  442908:	mov	x19, x0
  44290c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x17380>
  442910:	add	x0, x0, #0x1fd
  442914:	str	x21, [sp, #32]
  442918:	bl	404e40 <getenv@plt>
  44291c:	mov	x20, x0
  442920:	ldrb	w0, [x19, #8]
  442924:	cbz	x20, 442938 <_obstack_memory_used@@Base+0xacb8>
  442928:	cbz	w0, 442944 <_obstack_memory_used@@Base+0xacc4>
  44292c:	mov	x1, x20
  442930:	add	x0, x19, #0x9
  442934:	bl	404a30 <strcmp@plt>
  442938:	cmp	w0, #0x0
  44293c:	cset	w0, eq  // eq = none
  442940:	b	442948 <_obstack_memory_used@@Base+0xacc8>
  442944:	mov	w0, #0x0                   	// #0
  442948:	cbnz	w0, 4429ac <_obstack_memory_used@@Base+0xad2c>
  44294c:	mov	x0, x20
  442950:	bl	442704 <_obstack_memory_used@@Base+0xaa84>
  442954:	mov	x20, x0
  442958:	cbz	x0, 442990 <_obstack_memory_used@@Base+0xad10>
  44295c:	ldrb	w1, [x19, #8]
  442960:	add	x0, x19, #0x9
  442964:	cmp	w1, #0x0
  442968:	csel	x0, x0, xzr, ne  // ne = any
  44296c:	bl	4426e8 <_obstack_memory_used@@Base+0xaa68>
  442970:	cbz	w0, 4429a4 <_obstack_memory_used@@Base+0xad24>
  442974:	bl	404e10 <__errno_location@plt>
  442978:	mov	x19, x0
  44297c:	mov	x0, x20
  442980:	mov	x20, #0x0                   	// #0
  442984:	ldr	w21, [x19]
  442988:	bl	4428c0 <_obstack_memory_used@@Base+0xac40>
  44298c:	str	w21, [x19]
  442990:	mov	x0, x20
  442994:	ldp	x19, x20, [sp, #16]
  442998:	ldr	x21, [sp, #32]
  44299c:	ldp	x29, x30, [sp], #48
  4429a0:	ret
  4429a4:	bl	404650 <tzset@plt>
  4429a8:	b	442990 <_obstack_memory_used@@Base+0xad10>
  4429ac:	mov	x20, #0x1                   	// #1
  4429b0:	b	442990 <_obstack_memory_used@@Base+0xad10>
  4429b4:	stp	x29, x30, [sp, #-48]!
  4429b8:	mov	x29, sp
  4429bc:	stp	x19, x20, [sp, #16]
  4429c0:	mov	x20, x0
  4429c4:	stp	x21, x22, [sp, #32]
  4429c8:	bl	404e10 <__errno_location@plt>
  4429cc:	ldrb	w1, [x20, #8]
  4429d0:	ldr	w22, [x0]
  4429d4:	mov	x19, x0
  4429d8:	cmp	w1, #0x0
  4429dc:	add	x0, x20, #0x9
  4429e0:	csel	x0, x0, xzr, ne  // ne = any
  4429e4:	bl	4426e8 <_obstack_memory_used@@Base+0xaa68>
  4429e8:	cbz	w0, 442a14 <_obstack_memory_used@@Base+0xad94>
  4429ec:	ldr	w22, [x19]
  4429f0:	mov	w21, #0x0                   	// #0
  4429f4:	mov	x0, x20
  4429f8:	bl	4428c0 <_obstack_memory_used@@Base+0xac40>
  4429fc:	str	w22, [x19]
  442a00:	mov	w0, w21
  442a04:	ldp	x19, x20, [sp, #16]
  442a08:	ldp	x21, x22, [sp, #32]
  442a0c:	ldp	x29, x30, [sp], #48
  442a10:	ret
  442a14:	mov	w21, #0x1                   	// #1
  442a18:	bl	404650 <tzset@plt>
  442a1c:	b	4429f4 <_obstack_memory_used@@Base+0xad74>
  442a20:	stp	x29, x30, [sp, #-48]!
  442a24:	mov	x29, sp
  442a28:	stp	x19, x20, [sp, #16]
  442a2c:	mov	x19, x2
  442a30:	stp	x21, x22, [sp, #32]
  442a34:	mov	x22, x1
  442a38:	cbnz	x0, 442a54 <_obstack_memory_used@@Base+0xadd4>
  442a3c:	mov	x0, x22
  442a40:	mov	x1, x2
  442a44:	ldp	x19, x20, [sp, #16]
  442a48:	ldp	x21, x22, [sp, #32]
  442a4c:	ldp	x29, x30, [sp], #48
  442a50:	b	404740 <gmtime_r@plt>
  442a54:	mov	x21, x0
  442a58:	bl	4428fc <_obstack_memory_used@@Base+0xac7c>
  442a5c:	mov	x20, x0
  442a60:	cbz	x0, 442aa0 <_obstack_memory_used@@Base+0xae20>
  442a64:	mov	x1, x19
  442a68:	mov	x0, x22
  442a6c:	bl	404390 <localtime_r@plt>
  442a70:	cbz	x0, 442ab8 <_obstack_memory_used@@Base+0xae38>
  442a74:	mov	x0, x21
  442a78:	mov	x1, x19
  442a7c:	bl	442790 <_obstack_memory_used@@Base+0xab10>
  442a80:	and	w21, w0, #0xff
  442a84:	cmp	x20, #0x1
  442a88:	b.eq	442a9c <_obstack_memory_used@@Base+0xae1c>  // b.none
  442a8c:	mov	x0, x20
  442a90:	bl	4429b4 <_obstack_memory_used@@Base+0xad34>
  442a94:	tst	w0, #0xff
  442a98:	b.eq	442aa0 <_obstack_memory_used@@Base+0xae20>  // b.none
  442a9c:	cbnz	w21, 442aa4 <_obstack_memory_used@@Base+0xae24>
  442aa0:	mov	x19, #0x0                   	// #0
  442aa4:	mov	x0, x19
  442aa8:	ldp	x19, x20, [sp, #16]
  442aac:	ldp	x21, x22, [sp, #32]
  442ab0:	ldp	x29, x30, [sp], #48
  442ab4:	ret
  442ab8:	cmp	x20, #0x1
  442abc:	b.eq	442aa0 <_obstack_memory_used@@Base+0xae20>  // b.none
  442ac0:	mov	w21, #0x0                   	// #0
  442ac4:	b	442a8c <_obstack_memory_used@@Base+0xae0c>
  442ac8:	stp	x29, x30, [sp, #-112]!
  442acc:	mov	x29, sp
  442ad0:	stp	x19, x20, [sp, #16]
  442ad4:	mov	x19, x1
  442ad8:	str	x21, [sp, #32]
  442adc:	cbnz	x0, 442af8 <_obstack_memory_used@@Base+0xae78>
  442ae0:	mov	x0, x1
  442ae4:	bl	404e90 <timegm@plt>
  442ae8:	ldp	x19, x20, [sp, #16]
  442aec:	ldr	x21, [sp, #32]
  442af0:	ldp	x29, x30, [sp], #112
  442af4:	ret
  442af8:	mov	x21, x0
  442afc:	bl	4428fc <_obstack_memory_used@@Base+0xac7c>
  442b00:	mov	x20, x0
  442b04:	cbz	x0, 442bf0 <_obstack_memory_used@@Base+0xaf70>
  442b08:	mov	x0, x19
  442b0c:	bl	404910 <mktime@plt>
  442b10:	str	x0, [sp, #48]
  442b14:	cmn	x0, #0x1
  442b18:	b.eq	442b3c <_obstack_memory_used@@Base+0xaebc>  // b.none
  442b1c:	mov	x1, x19
  442b20:	mov	x0, x21
  442b24:	bl	442790 <_obstack_memory_used@@Base+0xab10>
  442b28:	tst	w0, #0xff
  442b2c:	b.ne	442bd0 <_obstack_memory_used@@Base+0xaf50>  // b.any
  442b30:	mov	x0, #0xffffffffffffffff    	// #-1
  442b34:	str	x0, [sp, #48]
  442b38:	b	442bd0 <_obstack_memory_used@@Base+0xaf50>
  442b3c:	add	x1, sp, #0x38
  442b40:	add	x0, sp, #0x30
  442b44:	bl	404390 <localtime_r@plt>
  442b48:	cbz	x0, 442bd0 <_obstack_memory_used@@Base+0xaf50>
  442b4c:	ldr	w1, [x19, #32]
  442b50:	ldr	w0, [sp, #88]
  442b54:	cmp	w1, #0x0
  442b58:	cset	w3, eq  // eq = none
  442b5c:	cmp	w0, #0x0
  442b60:	cset	w2, eq  // eq = none
  442b64:	cmp	w3, w2
  442b68:	b.eq	442b78 <_obstack_memory_used@@Base+0xaef8>  // b.none
  442b6c:	cmp	w1, #0x0
  442b70:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  442b74:	b.ge	442bd0 <_obstack_memory_used@@Base+0xaf50>  // b.tcont
  442b78:	ldp	w3, w0, [sp, #68]
  442b7c:	ldr	w1, [x19, #16]
  442b80:	ldr	w2, [sp, #76]
  442b84:	eor	w1, w1, w0
  442b88:	ldr	w0, [x19, #20]
  442b8c:	eor	w0, w0, w2
  442b90:	ldr	w2, [sp, #64]
  442b94:	orr	w1, w1, w0
  442b98:	ldr	w0, [x19, #8]
  442b9c:	eor	w0, w0, w2
  442ba0:	ldr	w2, [x19, #12]
  442ba4:	eor	w2, w2, w3
  442ba8:	orr	w0, w0, w2
  442bac:	ldr	w2, [x19]
  442bb0:	orr	w1, w1, w0
  442bb4:	ldp	w0, w3, [sp, #56]
  442bb8:	eor	w2, w2, w0
  442bbc:	ldr	w0, [x19, #4]
  442bc0:	eor	w0, w0, w3
  442bc4:	orr	w2, w2, w0
  442bc8:	orr	w1, w1, w2
  442bcc:	cbz	w1, 442b1c <_obstack_memory_used@@Base+0xae9c>
  442bd0:	cmp	x20, #0x1
  442bd4:	b.ne	442be0 <_obstack_memory_used@@Base+0xaf60>  // b.any
  442bd8:	ldr	x0, [sp, #48]
  442bdc:	b	442ae8 <_obstack_memory_used@@Base+0xae68>
  442be0:	mov	x0, x20
  442be4:	bl	4429b4 <_obstack_memory_used@@Base+0xad34>
  442be8:	tst	w0, #0xff
  442bec:	b.ne	442bd8 <_obstack_memory_used@@Base+0xaf58>  // b.any
  442bf0:	mov	x0, #0xffffffffffffffff    	// #-1
  442bf4:	b	442ae8 <_obstack_memory_used@@Base+0xae68>
  442bf8:	cmp	w0, #0x26
  442bfc:	b.eq	442c20 <_obstack_memory_used@@Base+0xafa0>  // b.none
  442c00:	b.gt	442c18 <_obstack_memory_used@@Base+0xaf98>
  442c04:	cmp	w0, #0x10
  442c08:	b.eq	442c20 <_obstack_memory_used@@Base+0xafa0>  // b.none
  442c0c:	cmp	w0, #0x16
  442c10:	cset	w0, ne  // ne = any
  442c14:	ret
  442c18:	cmp	w0, #0x5f
  442c1c:	b	442c10 <_obstack_memory_used@@Base+0xaf90>
  442c20:	mov	w0, #0x0                   	// #0
  442c24:	b	442c14 <_obstack_memory_used@@Base+0xaf94>
  442c28:	stp	x29, x30, [sp, #-64]!
  442c2c:	mov	x29, sp
  442c30:	stp	x19, x20, [sp, #16]
  442c34:	mov	x20, x3
  442c38:	stp	x21, x22, [sp, #32]
  442c3c:	mov	x22, x1
  442c40:	mov	x21, x2
  442c44:	str	x23, [sp, #48]
  442c48:	mov	x23, x0
  442c4c:	mov	x0, #0x48                  	// #72
  442c50:	bl	4045f0 <malloc@plt>
  442c54:	mov	x19, x0
  442c58:	cbz	x0, 442c84 <_obstack_memory_used@@Base+0xb004>
  442c5c:	stp	x23, x22, [x19]
  442c60:	mov	x0, #0xc8                  	// #200
  442c64:	stp	x21, x20, [x19, #16]
  442c68:	stp	xzr, xzr, [x19, #32]
  442c6c:	bl	4045f0 <malloc@plt>
  442c70:	str	x0, [x19, #48]
  442c74:	cbnz	x0, 442c9c <_obstack_memory_used@@Base+0xb01c>
  442c78:	mov	x0, x19
  442c7c:	mov	x19, #0x0                   	// #0
  442c80:	bl	404ae0 <free@plt>
  442c84:	mov	x0, x19
  442c88:	ldp	x19, x20, [sp, #16]
  442c8c:	ldp	x21, x22, [sp, #32]
  442c90:	ldr	x23, [sp, #48]
  442c94:	ldp	x29, x30, [sp], #64
  442c98:	ret
  442c9c:	str	x0, [x19, #56]
  442ca0:	add	x0, x0, #0xc8
  442ca4:	str	x0, [x19, #64]
  442ca8:	b	442c84 <_obstack_memory_used@@Base+0xb004>
  442cac:	stp	x29, x30, [sp, #-96]!
  442cb0:	mov	x29, sp
  442cb4:	stp	x19, x20, [sp, #16]
  442cb8:	mov	x19, x0
  442cbc:	ldr	x1, [x0, #48]
  442cc0:	stp	x27, x28, [sp, #80]
  442cc4:	ldr	x0, [x0, #32]
  442cc8:	stp	x21, x22, [sp, #32]
  442ccc:	add	x28, x1, x0
  442cd0:	stp	x23, x24, [sp, #48]
  442cd4:	mov	w24, #0x20                  	// #32
  442cd8:	stp	x25, x26, [sp, #64]
  442cdc:	ldr	x2, [x19, #56]
  442ce0:	cmp	x2, x28
  442ce4:	b.ls	442d84 <_obstack_memory_used@@Base+0xb104>  // b.plast
  442ce8:	ldr	x0, [x19, #40]
  442cec:	cbnz	x0, 442d40 <_obstack_memory_used@@Base+0xb0c0>
  442cf0:	ldr	x20, [x19, #8]
  442cf4:	cbz	x20, 442d40 <_obstack_memory_used@@Base+0xb0c0>
  442cf8:	ldr	x1, [x19, #64]
  442cfc:	add	x0, x2, x20
  442d00:	cmp	x1, x0
  442d04:	b.ls	442dac <_obstack_memory_used@@Base+0xb12c>  // b.plast
  442d08:	add	x21, x28, x20
  442d0c:	sub	x2, x2, x28
  442d10:	mov	x1, x28
  442d14:	mov	x0, x21
  442d18:	bl	404210 <memmove@plt>
  442d1c:	ldr	x0, [x19, #56]
  442d20:	mov	x2, x20
  442d24:	mov	w1, #0x20                  	// #32
  442d28:	add	x0, x0, x20
  442d2c:	str	x0, [x19, #56]
  442d30:	mov	x0, x28
  442d34:	mov	x28, x21
  442d38:	bl	404700 <memset@plt>
  442d3c:	str	x20, [x19, #40]
  442d40:	ldr	x25, [x19, #56]
  442d44:	mov	x0, x28
  442d48:	mov	w1, #0xa                   	// #10
  442d4c:	sub	x22, x25, x28
  442d50:	mov	x2, x22
  442d54:	bl	404c90 <memchr@plt>
  442d58:	mov	x21, x0
  442d5c:	ldr	x0, [x19, #40]
  442d60:	tbz	x0, #63, 442d68 <_obstack_memory_used@@Base+0xb0e8>
  442d64:	str	xzr, [x19, #40]
  442d68:	ldr	x20, [x19, #16]
  442d6c:	ldr	x0, [x19, #40]
  442d70:	cbnz	x21, 442dcc <_obstack_memory_used@@Base+0xb14c>
  442d74:	add	x1, x0, x22
  442d78:	cmp	x1, x20
  442d7c:	b.cs	442de8 <_obstack_memory_used@@Base+0xb168>  // b.hs, b.nlast
  442d80:	str	x1, [x19, #40]
  442d84:	ldp	x1, x0, [x19, #48]
  442d88:	ldp	x21, x22, [sp, #32]
  442d8c:	ldp	x23, x24, [sp, #48]
  442d90:	sub	x0, x0, x1
  442d94:	ldp	x25, x26, [sp, #64]
  442d98:	ldp	x27, x28, [sp, #80]
  442d9c:	str	x0, [x19, #32]
  442da0:	ldp	x19, x20, [sp, #16]
  442da4:	ldp	x29, x30, [sp], #96
  442da8:	ret
  442dac:	mov	x21, #0x0                   	// #0
  442db0:	ldr	x1, [x19]
  442db4:	add	x21, x21, #0x1
  442db8:	mov	w0, #0x20                  	// #32
  442dbc:	bl	404500 <putc_unlocked@plt>
  442dc0:	cmp	x20, x21
  442dc4:	b.ne	442db0 <_obstack_memory_used@@Base+0xb130>  // b.any
  442dc8:	b	442d3c <_obstack_memory_used@@Base+0xb0bc>
  442dcc:	sub	x1, x21, x28
  442dd0:	add	x1, x1, x0
  442dd4:	cmp	x1, x20
  442dd8:	b.ge	442dec <_obstack_memory_used@@Base+0xb16c>  // b.tcont
  442ddc:	add	x21, x21, #0x1
  442de0:	str	xzr, [x19, #40]
  442de4:	b	442e38 <_obstack_memory_used@@Base+0xb1b8>
  442de8:	mov	x21, x25
  442dec:	ldr	x27, [x19, #24]
  442df0:	tbz	x27, #63, 442e58 <_obstack_memory_used@@Base+0xb1d8>
  442df4:	sub	x26, x20, #0x1
  442df8:	cmp	x25, x21
  442dfc:	b.ls	442e40 <_obstack_memory_used@@Base+0xb1c0>  // b.plast
  442e00:	sub	x0, x26, x0
  442e04:	sub	x2, x25, x21
  442e08:	mov	x1, x21
  442e0c:	add	x0, x28, x0
  442e10:	bl	404210 <memmove@plt>
  442e14:	ldr	x25, [x19, #40]
  442e18:	str	xzr, [x19, #40]
  442e1c:	sub	x26, x26, x25
  442e20:	add	x26, x28, x26
  442e24:	sub	x26, x26, x21
  442e28:	ldr	x21, [x19, #56]
  442e2c:	sub	x26, x21, x26
  442e30:	add	x21, x28, x20
  442e34:	str	x26, [x19, #56]
  442e38:	mov	x28, x21
  442e3c:	b	442cdc <_obstack_memory_used@@Base+0xb05c>
  442e40:	add	x22, x22, x0
  442e44:	str	x22, [x19, #40]
  442e48:	sub	x26, x26, x22
  442e4c:	add	x25, x25, x26
  442e50:	str	x25, [x19, #56]
  442e54:	b	442d84 <_obstack_memory_used@@Base+0xb104>
  442e58:	sub	x20, x20, x0
  442e5c:	add	x20, x28, x20
  442e60:	mov	x26, x20
  442e64:	cmp	x28, x26
  442e68:	b.hi	442e80 <_obstack_memory_used@@Base+0xb200>  // b.pmore
  442e6c:	bl	404a60 <__ctype_b_loc@plt>
  442e70:	ldrb	w1, [x26]
  442e74:	ldr	x0, [x0]
  442e78:	ldrh	w0, [x0, x1, lsl #1]
  442e7c:	tbz	w0, #0, 442ee4 <_obstack_memory_used@@Base+0xb264>
  442e80:	add	x23, x26, #0x1
  442e84:	cmp	x28, x23
  442e88:	b.cs	442eec <_obstack_memory_used@@Base+0xb26c>  // b.hs, b.nlast
  442e8c:	cmp	x28, x26
  442e90:	b.hi	442eb4 <_obstack_memory_used@@Base+0xb234>  // b.pmore
  442e94:	sub	x26, x26, #0x1
  442e98:	cmp	x28, x26
  442e9c:	b.hi	442eb4 <_obstack_memory_used@@Base+0xb234>  // b.pmore
  442ea0:	bl	404a60 <__ctype_b_loc@plt>
  442ea4:	ldrb	w1, [x26]
  442ea8:	ldr	x0, [x0]
  442eac:	ldrh	w0, [x0, x1, lsl #1]
  442eb0:	tbnz	w0, #0, 442e94 <_obstack_memory_used@@Base+0xb214>
  442eb4:	add	x20, x26, #0x1
  442eb8:	add	x0, x22, #0x1
  442ebc:	add	x0, x28, x0
  442ec0:	cmp	x23, x0
  442ec4:	b.ne	442f38 <_obstack_memory_used@@Base+0xb2b8>  // b.any
  442ec8:	ldr	x0, [x19, #64]
  442ecc:	sub	x0, x0, x20
  442ed0:	cmp	x27, x0
  442ed4:	b.ge	442f48 <_obstack_memory_used@@Base+0xb2c8>  // b.tcont
  442ed8:	mov	w0, #0xa                   	// #10
  442edc:	strb	w0, [x20], #1
  442ee0:	b	442fc8 <_obstack_memory_used@@Base+0xb348>
  442ee4:	sub	x26, x26, #0x1
  442ee8:	b	442e64 <_obstack_memory_used@@Base+0xb1e4>
  442eec:	cmp	x21, x20
  442ef0:	b.ls	442f30 <_obstack_memory_used@@Base+0xb2b0>  // b.plast
  442ef4:	add	x20, x20, #0x1
  442ef8:	cmp	x21, x20
  442efc:	b.eq	442ddc <_obstack_memory_used@@Base+0xb15c>  // b.none
  442f00:	bl	404a60 <__ctype_b_loc@plt>
  442f04:	ldrb	w1, [x20]
  442f08:	ldr	x0, [x0]
  442f0c:	ldrh	w0, [x0, x1, lsl #1]
  442f10:	tbz	w0, #0, 442ef4 <_obstack_memory_used@@Base+0xb274>
  442f14:	bl	404a60 <__ctype_b_loc@plt>
  442f18:	mov	x23, x20
  442f1c:	ldr	x1, [x0]
  442f20:	ldrb	w0, [x23, #1]!
  442f24:	ldrh	w0, [x1, x0, lsl #1]
  442f28:	tbnz	w0, #0, 442f20 <_obstack_memory_used@@Base+0xb2a0>
  442f2c:	b	442eb8 <_obstack_memory_used@@Base+0xb238>
  442f30:	b.ne	442f14 <_obstack_memory_used@@Base+0xb294>  // b.any
  442f34:	b	442ddc <_obstack_memory_used@@Base+0xb15c>
  442f38:	add	x0, x20, #0x1
  442f3c:	sub	x0, x23, x0
  442f40:	cmp	x27, x0
  442f44:	b.le	442ed8 <_obstack_memory_used@@Base+0xb258>
  442f48:	cmp	x25, x23
  442f4c:	b.ls	442ed8 <_obstack_memory_used@@Base+0xb258>  // b.plast
  442f50:	ldr	x1, [x19, #64]
  442f54:	add	x0, x27, #0x1
  442f58:	sub	x1, x1, x25
  442f5c:	cmp	x1, x0
  442f60:	b.le	442f90 <_obstack_memory_used@@Base+0xb310>
  442f64:	sub	x25, x25, x23
  442f68:	mov	x1, x23
  442f6c:	mov	x2, x25
  442f70:	add	x0, x20, x0
  442f74:	bl	404210 <memmove@plt>
  442f78:	ldr	x1, [x19, #24]
  442f7c:	add	x1, x1, #0x1
  442f80:	add	x23, x20, x1
  442f84:	add	x25, x23, x25
  442f88:	sub	x22, x25, x28
  442f8c:	b	442ed8 <_obstack_memory_used@@Base+0xb258>
  442f90:	ldr	x0, [x19, #48]
  442f94:	cmp	x0, x20
  442f98:	b.cs	442fac <_obstack_memory_used@@Base+0xb32c>  // b.hs, b.nlast
  442f9c:	ldr	x3, [x19]
  442fa0:	sub	x2, x20, x0
  442fa4:	mov	x1, #0x1                   	// #1
  442fa8:	bl	404260 <fwrite_unlocked@plt>
  442fac:	ldr	x1, [x19]
  442fb0:	mov	w0, #0xa                   	// #10
  442fb4:	bl	404500 <putc_unlocked@plt>
  442fb8:	ldr	x20, [x19, #48]
  442fbc:	sub	x1, x28, x20
  442fc0:	mov	x28, x20
  442fc4:	add	x22, x22, x1
  442fc8:	ldr	x1, [x19, #24]
  442fcc:	sub	x0, x23, x20
  442fd0:	cmp	x0, x1
  442fd4:	b.ge	443058 <_obstack_memory_used@@Base+0xb3d8>  // b.tcont
  442fd8:	add	x0, x22, #0x1
  442fdc:	add	x0, x28, x0
  442fe0:	cmp	x23, x0
  442fe4:	b.ne	442ff8 <_obstack_memory_used@@Base+0xb378>  // b.any
  442fe8:	ldr	x0, [x19, #64]
  442fec:	sub	x0, x0, x23
  442ff0:	cmp	x1, x0
  442ff4:	b.le	443058 <_obstack_memory_used@@Base+0xb3d8>
  442ff8:	mov	x21, #0x0                   	// #0
  442ffc:	b	443070 <_obstack_memory_used@@Base+0xb3f0>
  443000:	strb	w24, [x20, x0]
  443004:	add	x0, x0, #0x1
  443008:	ldr	x1, [x19, #24]
  44300c:	add	x21, x20, x0
  443010:	cmp	x1, x0
  443014:	b.gt	443000 <_obstack_memory_used@@Base+0xb380>
  443018:	cmp	x21, x23
  44301c:	b.cs	443034 <_obstack_memory_used@@Base+0xb3b4>  // b.hs, b.nlast
  443020:	add	x2, x28, x22
  443024:	mov	x1, x23
  443028:	sub	x2, x2, x23
  44302c:	mov	x0, x21
  443030:	bl	404210 <memmove@plt>
  443034:	ldr	x0, [x19, #24]
  443038:	sub	x1, x23, x28
  44303c:	sub	x1, x22, x1
  443040:	cmp	x0, #0x0
  443044:	add	x1, x21, x1
  443048:	csinv	x0, x0, xzr, ne  // ne = any
  44304c:	str	x0, [x19, #40]
  443050:	str	x1, [x19, #56]
  443054:	b	442e38 <_obstack_memory_used@@Base+0xb1b8>
  443058:	mov	x0, #0x0                   	// #0
  44305c:	b	443008 <_obstack_memory_used@@Base+0xb388>
  443060:	ldr	x1, [x19]
  443064:	add	x21, x21, #0x1
  443068:	mov	w0, #0x20                  	// #32
  44306c:	bl	404500 <putc_unlocked@plt>
  443070:	ldr	x0, [x19, #24]
  443074:	cmp	x0, x21
  443078:	b.gt	443060 <_obstack_memory_used@@Base+0xb3e0>
  44307c:	mov	x21, x20
  443080:	b	443018 <_obstack_memory_used@@Base+0xb398>
  443084:	stp	x29, x30, [sp, #-32]!
  443088:	mov	x29, sp
  44308c:	str	x19, [sp, #16]
  443090:	mov	x19, x0
  443094:	bl	442cac <_obstack_memory_used@@Base+0xb02c>
  443098:	ldp	x0, x2, [x19, #48]
  44309c:	cmp	x2, x0
  4430a0:	b.ls	4430b4 <_obstack_memory_used@@Base+0xb434>  // b.plast
  4430a4:	ldr	x3, [x19]
  4430a8:	sub	x2, x2, x0
  4430ac:	mov	x1, #0x1                   	// #1
  4430b0:	bl	404260 <fwrite_unlocked@plt>
  4430b4:	ldr	x0, [x19, #48]
  4430b8:	bl	404ae0 <free@plt>
  4430bc:	mov	x0, x19
  4430c0:	ldr	x19, [sp, #16]
  4430c4:	ldp	x29, x30, [sp], #32
  4430c8:	b	404ae0 <free@plt>
  4430cc:	stp	x29, x30, [sp, #-32]!
  4430d0:	mov	x29, sp
  4430d4:	stp	x19, x20, [sp, #16]
  4430d8:	mov	x20, x1
  4430dc:	ldp	x2, x1, [x0, #56]
  4430e0:	sub	x1, x1, x2
  4430e4:	cmp	x1, x20
  4430e8:	b.cc	4430f4 <_obstack_memory_used@@Base+0xb474>  // b.lo, b.ul, b.last
  4430ec:	mov	w0, #0x1                   	// #1
  4430f0:	b	443184 <_obstack_memory_used@@Base+0xb504>
  4430f4:	mov	x19, x0
  4430f8:	bl	442cac <_obstack_memory_used@@Base+0xb02c>
  4430fc:	mov	x1, #0x1                   	// #1
  443100:	ldp	x0, x2, [x19, #48]
  443104:	ldr	x3, [x19]
  443108:	sub	x2, x2, x0
  44310c:	bl	404260 <fwrite_unlocked@plt>
  443110:	mov	x1, x0
  443114:	ldp	x0, x2, [x19, #48]
  443118:	sub	x3, x2, x0
  44311c:	cmp	x1, x3
  443120:	b.ne	443160 <_obstack_memory_used@@Base+0xb4e0>  // b.any
  443124:	ldr	x1, [x19, #64]
  443128:	str	xzr, [x19, #32]
  44312c:	str	x0, [x19, #56]
  443130:	sub	x1, x1, x0
  443134:	cmp	x20, x1
  443138:	b.ls	4430ec <_obstack_memory_used@@Base+0xb46c>  // b.plast
  44313c:	adds	x20, x20, x1
  443140:	b.cs	443150 <_obstack_memory_used@@Base+0xb4d0>  // b.hs, b.nlast
  443144:	mov	x1, x20
  443148:	bl	404820 <realloc@plt>
  44314c:	cbnz	x0, 443190 <_obstack_memory_used@@Base+0xb510>
  443150:	bl	404e10 <__errno_location@plt>
  443154:	mov	w1, #0xc                   	// #12
  443158:	str	w1, [x0]
  44315c:	b	443180 <_obstack_memory_used@@Base+0xb500>
  443160:	ldr	x3, [x19, #32]
  443164:	sub	x2, x2, x1
  443168:	str	x2, [x19, #56]
  44316c:	sub	x2, x2, x0
  443170:	sub	x3, x3, x1
  443174:	str	x3, [x19, #32]
  443178:	add	x1, x0, x1
  44317c:	bl	404210 <memmove@plt>
  443180:	mov	w0, #0x0                   	// #0
  443184:	ldp	x19, x20, [sp, #16]
  443188:	ldp	x29, x30, [sp], #32
  44318c:	ret
  443190:	add	x20, x0, x20
  443194:	stp	x0, x0, [x19, #48]
  443198:	str	x20, [x19, #64]
  44319c:	b	4430ec <_obstack_memory_used@@Base+0xb46c>
  4431a0:	stp	x29, x30, [sp, #-336]!
  4431a4:	mov	x29, sp
  4431a8:	stp	x19, x20, [sp, #16]
  4431ac:	mov	x19, x0
  4431b0:	mov	x20, x1
  4431b4:	stp	x21, x22, [sp, #32]
  4431b8:	add	x21, sp, #0x120
  4431bc:	mov	x1, #0x96                  	// #150
  4431c0:	mov	w22, #0xffffffd0            	// #-48
  4431c4:	stp	x23, x24, [sp, #48]
  4431c8:	mov	w23, #0xffffff80            	// #-128
  4431cc:	str	q0, [sp, #160]
  4431d0:	str	q1, [sp, #176]
  4431d4:	str	q2, [sp, #192]
  4431d8:	str	q3, [sp, #208]
  4431dc:	str	q4, [sp, #224]
  4431e0:	str	q5, [sp, #240]
  4431e4:	str	q6, [sp, #256]
  4431e8:	str	q7, [sp, #272]
  4431ec:	stp	x2, x3, [sp, #288]
  4431f0:	stp	x4, x5, [sp, #304]
  4431f4:	stp	x6, x7, [sp, #320]
  4431f8:	mov	x0, x19
  4431fc:	bl	4430cc <_obstack_memory_used@@Base+0xb44c>
  443200:	cbnz	w0, 44321c <_obstack_memory_used@@Base+0xb59c>
  443204:	mov	x0, #0xffffffffffffffff    	// #-1
  443208:	ldp	x19, x20, [sp, #16]
  44320c:	ldp	x21, x22, [sp, #32]
  443210:	ldp	x23, x24, [sp, #48]
  443214:	ldp	x29, x30, [sp], #336
  443218:	ret
  44321c:	add	x0, sp, #0x150
  443220:	stp	x0, x0, [sp, #96]
  443224:	str	x21, [sp, #112]
  443228:	stp	w22, w23, [sp, #120]
  44322c:	ldp	x4, x5, [sp, #96]
  443230:	stp	x4, x5, [sp, #128]
  443234:	ldp	x2, x3, [sp, #112]
  443238:	stp	x2, x3, [sp, #144]
  44323c:	ldr	x24, [x19, #64]
  443240:	stp	x4, x5, [sp, #64]
  443244:	add	x5, sp, #0x40
  443248:	stp	x2, x3, [sp, #80]
  44324c:	mov	w2, #0x1                   	// #1
  443250:	mov	x4, x20
  443254:	ldr	x0, [x19, #56]
  443258:	mov	x3, #0xffffffffffffffff    	// #-1
  44325c:	sub	x24, x24, x0
  443260:	mov	x1, x24
  443264:	bl	4045d0 <__vsnprintf_chk@plt>
  443268:	sxtw	x2, w0
  44326c:	cmp	x24, w0, sxtw
  443270:	b.hi	443280 <_obstack_memory_used@@Base+0xb600>  // b.pmore
  443274:	add	w2, w0, #0x1
  443278:	sxtw	x1, w2
  44327c:	b	4431f8 <_obstack_memory_used@@Base+0xb578>
  443280:	ldr	x0, [x19, #56]
  443284:	add	x0, x0, x2
  443288:	str	x0, [x19, #56]
  44328c:	mov	x0, x2
  443290:	b	443208 <_obstack_memory_used@@Base+0xb588>
  443294:	stp	x29, x30, [sp, #-48]!
  443298:	mov	x29, sp
  44329c:	str	x21, [sp, #32]
  4432a0:	mov	x21, x1
  4432a4:	ldr	x1, [x0, #56]
  4432a8:	stp	x19, x20, [sp, #16]
  4432ac:	mov	x19, x2
  4432b0:	add	x1, x1, x2
  4432b4:	mov	x20, x0
  4432b8:	ldr	x2, [x0, #64]
  4432bc:	cmp	x2, x1
  4432c0:	b.cc	4432f4 <_obstack_memory_used@@Base+0xb674>  // b.lo, b.ul, b.last
  4432c4:	ldr	x0, [x20, #56]
  4432c8:	mov	x2, x19
  4432cc:	mov	x1, x21
  4432d0:	bl	404200 <memcpy@plt>
  4432d4:	ldr	x0, [x20, #56]
  4432d8:	add	x0, x0, x19
  4432dc:	str	x0, [x20, #56]
  4432e0:	mov	x0, x19
  4432e4:	ldp	x19, x20, [sp, #16]
  4432e8:	ldr	x21, [sp, #32]
  4432ec:	ldp	x29, x30, [sp], #48
  4432f0:	ret
  4432f4:	mov	x1, x19
  4432f8:	bl	4430cc <_obstack_memory_used@@Base+0xb44c>
  4432fc:	cbnz	w0, 4432c4 <_obstack_memory_used@@Base+0xb644>
  443300:	mov	x19, #0x0                   	// #0
  443304:	b	4432e0 <_obstack_memory_used@@Base+0xb660>
  443308:	stp	x29, x30, [sp, #-48]!
  44330c:	mov	x29, sp
  443310:	stp	x19, x20, [sp, #16]
  443314:	mov	x20, x1
  443318:	str	x21, [sp, #32]
  44331c:	mov	x21, x0
  443320:	mov	x0, x1
  443324:	bl	404280 <strlen@plt>
  443328:	cbz	x0, 443358 <_obstack_memory_used@@Base+0xb6d8>
  44332c:	mov	x19, x0
  443330:	mov	x2, x0
  443334:	mov	x1, x20
  443338:	mov	x0, x21
  44333c:	bl	443294 <_obstack_memory_used@@Base+0xb614>
  443340:	cmp	x19, x0
  443344:	csetm	w0, ne  // ne = any
  443348:	ldp	x19, x20, [sp, #16]
  44334c:	ldr	x21, [sp, #32]
  443350:	ldp	x29, x30, [sp], #48
  443354:	ret
  443358:	mov	w0, #0x0                   	// #0
  44335c:	b	443348 <_obstack_memory_used@@Base+0xb6c8>
  443360:	stp	x29, x30, [sp, #-32]!
  443364:	mov	x29, sp
  443368:	stp	x19, x20, [sp, #16]
  44336c:	mov	w19, w1
  443370:	mov	x20, x0
  443374:	ldp	x2, x1, [x0, #56]
  443378:	cmp	x2, x1
  44337c:	b.cs	4433a0 <_obstack_memory_used@@Base+0xb720>  // b.hs, b.nlast
  443380:	ldr	x0, [x20, #56]
  443384:	add	x1, x0, #0x1
  443388:	str	x1, [x20, #56]
  44338c:	strb	w19, [x0]
  443390:	and	w0, w19, #0xff
  443394:	ldp	x19, x20, [sp, #16]
  443398:	ldp	x29, x30, [sp], #32
  44339c:	ret
  4433a0:	mov	x1, #0x1                   	// #1
  4433a4:	bl	4430cc <_obstack_memory_used@@Base+0xb44c>
  4433a8:	cbnz	w0, 443380 <_obstack_memory_used@@Base+0xb700>
  4433ac:	mov	w0, #0xffffffff            	// #-1
  4433b0:	b	443394 <_obstack_memory_used@@Base+0xb714>
  4433b4:	stp	x29, x30, [sp, #-32]!
  4433b8:	mov	x29, sp
  4433bc:	stp	x19, x20, [sp, #16]
  4433c0:	mov	x20, x1
  4433c4:	mov	x19, x0
  4433c8:	ldp	x2, x1, [x0, #48]
  4433cc:	sub	x1, x1, x2
  4433d0:	ldr	x2, [x0, #32]
  4433d4:	cmp	x1, x2
  4433d8:	b.ls	4433e0 <_obstack_memory_used@@Base+0xb760>  // b.plast
  4433dc:	bl	442cac <_obstack_memory_used@@Base+0xb02c>
  4433e0:	ldr	x0, [x19, #8]
  4433e4:	str	x20, [x19, #8]
  4433e8:	ldp	x19, x20, [sp, #16]
  4433ec:	ldp	x29, x30, [sp], #32
  4433f0:	ret
  4433f4:	stp	x29, x30, [sp, #-32]!
  4433f8:	mov	x29, sp
  4433fc:	stp	x19, x20, [sp, #16]
  443400:	mov	x20, x1
  443404:	mov	x19, x0
  443408:	ldp	x2, x1, [x0, #48]
  44340c:	sub	x1, x1, x2
  443410:	ldr	x2, [x0, #32]
  443414:	cmp	x1, x2
  443418:	b.ls	443420 <_obstack_memory_used@@Base+0xb7a0>  // b.plast
  44341c:	bl	442cac <_obstack_memory_used@@Base+0xb02c>
  443420:	ldr	x0, [x19, #16]
  443424:	str	x20, [x19, #16]
  443428:	ldp	x19, x20, [sp, #16]
  44342c:	ldp	x29, x30, [sp], #32
  443430:	ret
  443434:	stp	x29, x30, [sp, #-32]!
  443438:	mov	x29, sp
  44343c:	stp	x19, x20, [sp, #16]
  443440:	mov	x20, x1
  443444:	mov	x19, x0
  443448:	ldp	x2, x1, [x0, #48]
  44344c:	sub	x1, x1, x2
  443450:	ldr	x2, [x0, #32]
  443454:	cmp	x1, x2
  443458:	b.ls	443460 <_obstack_memory_used@@Base+0xb7e0>  // b.plast
  44345c:	bl	442cac <_obstack_memory_used@@Base+0xb02c>
  443460:	ldr	x0, [x19, #24]
  443464:	str	x20, [x19, #24]
  443468:	ldp	x19, x20, [sp, #16]
  44346c:	ldp	x29, x30, [sp], #32
  443470:	ret
  443474:	stp	x29, x30, [sp, #-32]!
  443478:	mov	x29, sp
  44347c:	ldp	x2, x1, [x0, #48]
  443480:	sub	x1, x1, x2
  443484:	ldr	x2, [x0, #32]
  443488:	str	x19, [sp, #16]
  44348c:	mov	x19, x0
  443490:	cmp	x1, x2
  443494:	b.ls	44349c <_obstack_memory_used@@Base+0xb81c>  // b.plast
  443498:	bl	442cac <_obstack_memory_used@@Base+0xb02c>
  44349c:	ldr	x0, [x19, #40]
  4434a0:	ldr	x19, [sp, #16]
  4434a4:	cmp	x0, #0x0
  4434a8:	csel	x0, x0, xzr, ge  // ge = tcont
  4434ac:	ldp	x29, x30, [sp], #32
  4434b0:	ret
  4434b4:	cmp	w0, #0x5a
  4434b8:	b.gt	4434d4 <_obstack_memory_used@@Base+0xb854>
  4434bc:	cmp	w0, #0x40
  4434c0:	b.gt	4434e0 <_obstack_memory_used@@Base+0xb860>
  4434c4:	sub	w0, w0, #0x30
  4434c8:	cmp	w0, #0x9
  4434cc:	cset	w0, ls  // ls = plast
  4434d0:	ret
  4434d4:	sub	w0, w0, #0x61
  4434d8:	cmp	w0, #0x19
  4434dc:	b	4434cc <_obstack_memory_used@@Base+0xb84c>
  4434e0:	mov	w0, #0x1                   	// #1
  4434e4:	b	4434d0 <_obstack_memory_used@@Base+0xb850>
  4434e8:	cmp	w0, #0x5a
  4434ec:	b.gt	4434fc <_obstack_memory_used@@Base+0xb87c>
  4434f0:	cmp	w0, #0x40
  4434f4:	cset	w0, gt
  4434f8:	ret
  4434fc:	sub	w0, w0, #0x61
  443500:	cmp	w0, #0x19
  443504:	cset	w0, ls  // ls = plast
  443508:	b	4434f8 <_obstack_memory_used@@Base+0xb878>
  44350c:	cmp	w0, #0x7f
  443510:	cset	w0, ls  // ls = plast
  443514:	ret
  443518:	cmp	w0, #0x20
  44351c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  443520:	cset	w0, eq  // eq = none
  443524:	ret
  443528:	cmp	w0, #0x1f
  44352c:	b.gt	44353c <_obstack_memory_used@@Base+0xb8bc>
  443530:	mvn	w0, w0
  443534:	lsr	w0, w0, #31
  443538:	ret
  44353c:	cmp	w0, #0x7f
  443540:	cset	w0, eq  // eq = none
  443544:	b	443538 <_obstack_memory_used@@Base+0xb8b8>
  443548:	sub	w0, w0, #0x30
  44354c:	cmp	w0, #0x9
  443550:	cset	w0, ls  // ls = plast
  443554:	ret
  443558:	sub	w0, w0, #0x21
  44355c:	cmp	w0, #0x5d
  443560:	cset	w0, ls  // ls = plast
  443564:	ret
  443568:	sub	w0, w0, #0x61
  44356c:	cmp	w0, #0x19
  443570:	cset	w0, ls  // ls = plast
  443574:	ret
  443578:	sub	w0, w0, #0x20
  44357c:	cmp	w0, #0x5e
  443580:	cset	w0, ls  // ls = plast
  443584:	ret
  443588:	cmp	w0, #0x60
  44358c:	b.gt	4435bc <_obstack_memory_used@@Base+0xb93c>
  443590:	cmp	w0, #0x5a
  443594:	b.gt	4435c8 <_obstack_memory_used@@Base+0xb948>
  443598:	cmp	w0, #0x2f
  44359c:	b.gt	4435ac <_obstack_memory_used@@Base+0xb92c>
  4435a0:	cmp	w0, #0x20
  4435a4:	cset	w0, gt
  4435a8:	ret
  4435ac:	sub	w0, w0, #0x3a
  4435b0:	cmp	w0, #0x6
  4435b4:	cset	w0, ls  // ls = plast
  4435b8:	b	4435a8 <_obstack_memory_used@@Base+0xb928>
  4435bc:	sub	w0, w0, #0x7b
  4435c0:	cmp	w0, #0x3
  4435c4:	b	4435b4 <_obstack_memory_used@@Base+0xb934>
  4435c8:	mov	w0, #0x1                   	// #1
  4435cc:	b	4435a8 <_obstack_memory_used@@Base+0xb928>
  4435d0:	cmp	w0, #0xd
  4435d4:	b.gt	4435e4 <_obstack_memory_used@@Base+0xb964>
  4435d8:	cmp	w0, #0x8
  4435dc:	cset	w0, gt
  4435e0:	ret
  4435e4:	cmp	w0, #0x20
  4435e8:	cset	w0, eq  // eq = none
  4435ec:	b	4435e0 <_obstack_memory_used@@Base+0xb960>
  4435f0:	sub	w0, w0, #0x41
  4435f4:	cmp	w0, #0x19
  4435f8:	cset	w0, ls  // ls = plast
  4435fc:	ret
  443600:	sub	w0, w0, #0x30
  443604:	cmp	w0, #0x36
  443608:	b.hi	443628 <_obstack_memory_used@@Base+0xb9a8>  // b.pmore
  44360c:	mov	x1, #0x1                   	// #1
  443610:	lsl	x0, x1, x0
  443614:	mov	x1, #0x7e0000007e0000      	// #35465847073800192
  443618:	movk	x1, #0x3ff
  44361c:	tst	x0, x1
  443620:	cset	w0, ne  // ne = any
  443624:	ret
  443628:	mov	w0, #0x0                   	// #0
  44362c:	b	443624 <_obstack_memory_used@@Base+0xb9a4>
  443630:	sub	w1, w0, #0x41
  443634:	cmp	w1, #0x19
  443638:	b.hi	443640 <_obstack_memory_used@@Base+0xb9c0>  // b.pmore
  44363c:	add	w0, w0, #0x20
  443640:	ret
  443644:	sub	w1, w0, #0x61
  443648:	cmp	w1, #0x19
  44364c:	b.hi	443654 <_obstack_memory_used@@Base+0xb9d4>  // b.pmore
  443650:	sub	w0, w0, #0x20
  443654:	ret
  443658:	stp	x29, x30, [sp, #-48]!
  44365c:	mov	x29, sp
  443660:	stp	x19, x20, [sp, #16]
  443664:	mov	x19, x0
  443668:	str	x21, [sp, #32]
  44366c:	bl	404490 <__fpending@plt>
  443670:	mov	x20, x0
  443674:	mov	x0, x19
  443678:	bl	4043c0 <ferror_unlocked@plt>
  44367c:	mov	w21, w0
  443680:	mov	x0, x19
  443684:	bl	404570 <fclose@plt>
  443688:	cbnz	w21, 4436b4 <_obstack_memory_used@@Base+0xba34>
  44368c:	cbz	w0, 4436a4 <_obstack_memory_used@@Base+0xba24>
  443690:	cbnz	x20, 4436c0 <_obstack_memory_used@@Base+0xba40>
  443694:	bl	404e10 <__errno_location@plt>
  443698:	ldr	w0, [x0]
  44369c:	cmp	w0, #0x9
  4436a0:	csetm	w0, ne  // ne = any
  4436a4:	ldp	x19, x20, [sp, #16]
  4436a8:	ldr	x21, [sp, #32]
  4436ac:	ldp	x29, x30, [sp], #48
  4436b0:	ret
  4436b4:	cbnz	w0, 4436c0 <_obstack_memory_used@@Base+0xba40>
  4436b8:	bl	404e10 <__errno_location@plt>
  4436bc:	str	wzr, [x0]
  4436c0:	mov	w0, #0xffffffff            	// #-1
  4436c4:	b	4436a4 <_obstack_memory_used@@Base+0xba24>
  4436c8:	stp	x29, x30, [sp, #-64]!
  4436cc:	mov	x29, sp
  4436d0:	stp	x19, x20, [sp, #16]
  4436d4:	stp	x21, x22, [sp, #32]
  4436d8:	str	x23, [sp, #48]
  4436dc:	bl	4043f0 <opendir@plt>
  4436e0:	mov	x19, x0
  4436e4:	cbz	x0, 443728 <_obstack_memory_used@@Base+0xbaa8>
  4436e8:	bl	404c50 <dirfd@plt>
  4436ec:	cmp	w0, #0x2
  4436f0:	b.hi	443728 <_obstack_memory_used@@Base+0xbaa8>  // b.pmore
  4436f4:	mov	w2, #0x3                   	// #3
  4436f8:	mov	w1, #0x406                 	// #1030
  4436fc:	bl	4376ac <argp_usage@@Base+0xa1cc>
  443700:	mov	w22, w0
  443704:	bl	404e10 <__errno_location@plt>
  443708:	mov	x21, x0
  44370c:	tbz	w22, #31, 443740 <_obstack_memory_used@@Base+0xbac0>
  443710:	ldr	w23, [x0]
  443714:	mov	x20, #0x0                   	// #0
  443718:	mov	x0, x19
  44371c:	mov	x19, x20
  443720:	bl	404880 <closedir@plt>
  443724:	str	w23, [x21]
  443728:	mov	x0, x19
  44372c:	ldp	x19, x20, [sp, #16]
  443730:	ldp	x21, x22, [sp, #32]
  443734:	ldr	x23, [sp, #48]
  443738:	ldp	x29, x30, [sp], #64
  44373c:	ret
  443740:	mov	w0, w22
  443744:	bl	404920 <fdopendir@plt>
  443748:	ldr	w23, [x21]
  44374c:	mov	x20, x0
  443750:	cbnz	x0, 443718 <_obstack_memory_used@@Base+0xba98>
  443754:	mov	w0, w22
  443758:	bl	4048c0 <close@plt>
  44375c:	b	443718 <_obstack_memory_used@@Base+0xba98>
  443760:	stp	x29, x30, [sp, #-64]!
  443764:	mov	x29, sp
  443768:	str	x2, [sp, #56]
  44376c:	tbz	w1, #6, 4437a0 <_obstack_memory_used@@Base+0xbb20>
  443770:	add	x2, sp, #0x40
  443774:	stp	x2, x2, [sp, #16]
  443778:	add	x2, sp, #0x30
  44377c:	str	x2, [sp, #32]
  443780:	mov	w2, #0xfffffff8            	// #-8
  443784:	str	w2, [sp, #40]
  443788:	ldr	w2, [sp, #56]
  44378c:	str	wzr, [sp, #44]
  443790:	bl	404630 <open@plt>
  443794:	bl	444a24 <_obstack_memory_used@@Base+0xcda4>
  443798:	ldp	x29, x30, [sp], #64
  44379c:	ret
  4437a0:	mov	w2, #0x0                   	// #0
  4437a4:	b	443790 <_obstack_memory_used@@Base+0xbb10>
  4437a8:	stp	x29, x30, [sp, #-32]!
  4437ac:	mov	x1, #0x0                   	// #0
  4437b0:	mov	x29, sp
  4437b4:	str	x19, [sp, #16]
  4437b8:	bl	404f10 <setlocale@plt>
  4437bc:	cbz	x0, 4437f8 <_obstack_memory_used@@Base+0xbb78>
  4437c0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x17380>
  4437c4:	mov	x19, x0
  4437c8:	add	x1, x1, #0x379
  4437cc:	bl	404a30 <strcmp@plt>
  4437d0:	cbz	w0, 443800 <_obstack_memory_used@@Base+0xbb80>
  4437d4:	mov	x0, x19
  4437d8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4437dc:	add	x1, x1, #0xd34
  4437e0:	bl	404a30 <strcmp@plt>
  4437e4:	cmp	w0, #0x0
  4437e8:	cset	w0, ne  // ne = any
  4437ec:	ldr	x19, [sp, #16]
  4437f0:	ldp	x29, x30, [sp], #32
  4437f4:	ret
  4437f8:	mov	w0, #0x1                   	// #1
  4437fc:	b	4437ec <_obstack_memory_used@@Base+0xbb6c>
  443800:	mov	w0, #0x0                   	// #0
  443804:	b	4437ec <_obstack_memory_used@@Base+0xbb6c>
  443808:	stp	x29, x30, [sp, #-32]!
  44380c:	mov	x29, sp
  443810:	str	x19, [sp, #16]
  443814:	mov	w19, w0
  443818:	bl	404610 <wcwidth@plt>
  44381c:	tbz	w0, #31, 443830 <_obstack_memory_used@@Base+0xbbb0>
  443820:	mov	w0, w19
  443824:	bl	404430 <iswcntrl@plt>
  443828:	cmp	w0, #0x0
  44382c:	cset	w0, eq  // eq = none
  443830:	ldr	x19, [sp, #16]
  443834:	ldp	x29, x30, [sp], #32
  443838:	ret
  44383c:	stp	x29, x30, [sp, #-32]!
  443840:	mov	x29, sp
  443844:	stp	x19, x20, [sp, #16]
  443848:	mov	x19, x0
  44384c:	mov	x0, x1
  443850:	mov	x20, x1
  443854:	ldr	x1, [x0], #24
  443858:	cmp	x1, x0
  44385c:	b.ne	44389c <_obstack_memory_used@@Base+0xbc1c>  // b.any
  443860:	ldr	x2, [x20, #8]
  443864:	add	x3, x19, #0x18
  443868:	mov	x0, x3
  44386c:	bl	404200 <memcpy@plt>
  443870:	str	x0, [x19]
  443874:	ldr	x0, [x20, #8]
  443878:	str	x0, [x19, #8]
  44387c:	ldrb	w0, [x20, #16]
  443880:	strb	w0, [x19, #16]
  443884:	cbz	w0, 443890 <_obstack_memory_used@@Base+0xbc10>
  443888:	ldr	w0, [x20, #20]
  44388c:	str	w0, [x19, #20]
  443890:	ldp	x19, x20, [sp, #16]
  443894:	ldp	x29, x30, [sp], #32
  443898:	ret
  44389c:	str	x1, [x19]
  4438a0:	b	443874 <_obstack_memory_used@@Base+0xbbf4>
  4438a4:	ubfx	x2, x0, #5, #3
  4438a8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4438ac:	add	x1, x1, #0xd3c
  4438b0:	ldr	w1, [x1, x2, lsl #2]
  4438b4:	lsr	w0, w1, w0
  4438b8:	and	w0, w0, #0x1
  4438bc:	ret
  4438c0:	stp	x29, x30, [sp, #-48]!
  4438c4:	mov	x29, sp
  4438c8:	stp	x19, x20, [sp, #16]
  4438cc:	mov	x20, x0
  4438d0:	mov	x19, x2
  4438d4:	str	x21, [sp, #32]
  4438d8:	mov	x21, x1
  4438dc:	sub	x19, x19, #0x1
  4438e0:	cmn	x19, #0x1
  4438e4:	b.ne	4438fc <_obstack_memory_used@@Base+0xbc7c>  // b.any
  4438e8:	mov	x0, x20
  4438ec:	ldp	x19, x20, [sp, #16]
  4438f0:	ldr	x21, [sp, #32]
  4438f4:	ldp	x29, x30, [sp], #48
  4438f8:	ret
  4438fc:	bl	4044a0 <__ctype_tolower_loc@plt>
  443900:	ldrb	w1, [x21, x19]
  443904:	ldr	x0, [x0]
  443908:	ldr	w0, [x0, x1, lsl #2]
  44390c:	strb	w0, [x20, x19]
  443910:	b	4438dc <_obstack_memory_used@@Base+0xbc5c>
  443914:	stp	x29, x30, [sp, #-48]!
  443918:	mov	x29, sp
  44391c:	stp	x19, x20, [sp, #16]
  443920:	mov	x20, x0
  443924:	mov	x19, x2
  443928:	str	x21, [sp, #32]
  44392c:	mov	x21, x1
  443930:	sub	x19, x19, #0x1
  443934:	cmn	x19, #0x1
  443938:	b.ne	443950 <_obstack_memory_used@@Base+0xbcd0>  // b.any
  44393c:	mov	x0, x20
  443940:	ldp	x19, x20, [sp, #16]
  443944:	ldr	x21, [sp, #32]
  443948:	ldp	x29, x30, [sp], #48
  44394c:	ret
  443950:	bl	404830 <__ctype_toupper_loc@plt>
  443954:	ldrb	w1, [x21, x19]
  443958:	ldr	x0, [x0]
  44395c:	ldr	w0, [x0, x1, lsl #2]
  443960:	strb	w0, [x20, x19]
  443964:	b	443930 <_obstack_memory_used@@Base+0xbcb0>
  443968:	sub	sp, sp, #0x4d0
  44396c:	stp	x29, x30, [sp]
  443970:	mov	x29, sp
  443974:	stp	x23, x24, [sp, #48]
  443978:	mov	x23, x0
  44397c:	and	w0, w4, #0xff
  443980:	str	w0, [sp, #168]
  443984:	ldr	w0, [x3, #8]
  443988:	str	w0, [sp, #120]
  44398c:	ldr	x0, [x3, #48]
  443990:	stp	x19, x20, [sp, #16]
  443994:	mov	x20, x3
  443998:	stp	x21, x22, [sp, #32]
  44399c:	mov	x21, x2
  4439a0:	stp	x25, x26, [sp, #64]
  4439a4:	stp	x27, x28, [sp, #80]
  4439a8:	str	x1, [sp, #96]
  4439ac:	str	x0, [sp, #104]
  4439b0:	str	w7, [sp, #124]
  4439b4:	str	x6, [sp, #128]
  4439b8:	str	x5, [sp, #152]
  4439bc:	cbnz	x0, 4439cc <_obstack_memory_used@@Base+0xbd4c>
  4439c0:	adrp	x26, 44d000 <_obstack_memory_used@@Base+0x15380>
  4439c4:	add	x0, x26, #0x41a
  4439c8:	str	x0, [sp, #104]
  4439cc:	ldr	w0, [sp, #120]
  4439d0:	cmp	w0, #0xc
  4439d4:	b.le	443a14 <_obstack_memory_used@@Base+0xbd94>
  4439d8:	sub	w0, w0, #0xc
  4439dc:	str	w0, [sp, #120]
  4439e0:	add	x0, sp, #0xcf
  4439e4:	mov	x19, #0x0                   	// #0
  4439e8:	str	x0, [sp, #160]
  4439ec:	add	x0, sp, #0xd1
  4439f0:	str	x0, [sp, #136]
  4439f4:	ldrb	w0, [x21]
  4439f8:	cbnz	w0, 443a2c <_obstack_memory_used@@Base+0xbdac>
  4439fc:	ldr	x0, [sp, #96]
  443a00:	cmp	x23, #0x0
  443a04:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  443a08:	b.eq	44489c <_obstack_memory_used@@Base+0xcc1c>  // b.none
  443a0c:	strb	wzr, [x23]
  443a10:	b	44489c <_obstack_memory_used@@Base+0xcc1c>
  443a14:	ldr	w0, [sp, #120]
  443a18:	ldr	w1, [sp, #120]
  443a1c:	cmp	w0, #0x0
  443a20:	mov	w0, #0xc                   	// #12
  443a24:	csel	w0, w1, w0, ne  // ne = any
  443a28:	b	4439dc <_obstack_memory_used@@Base+0xbd5c>
  443a2c:	cmp	w0, #0x25
  443a30:	b.eq	443b18 <_obstack_memory_used@@Base+0xbe98>  // b.none
  443a34:	ldr	x1, [sp, #96]
  443a38:	sub	x1, x1, x19
  443a3c:	cmp	x1, #0x1
  443a40:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  443a44:	cbz	x23, 443a4c <_obstack_memory_used@@Base+0xbdcc>
  443a48:	strb	w0, [x23], #1
  443a4c:	add	x19, x19, #0x1
  443a50:	add	x21, x21, #0x1
  443a54:	b	4439f4 <_obstack_memory_used@@Base+0xbd74>
  443a58:	mov	w27, w0
  443a5c:	ldrb	w0, [x21, #1]!
  443a60:	cmp	w0, #0x30
  443a64:	b.eq	443a58 <_obstack_memory_used@@Base+0xbdd8>  // b.none
  443a68:	b.hi	443b28 <_obstack_memory_used@@Base+0xbea8>  // b.pmore
  443a6c:	cmp	w0, #0x23
  443a70:	b.eq	443b08 <_obstack_memory_used@@Base+0xbe88>  // b.none
  443a74:	cmp	w0, #0x2d
  443a78:	b.eq	443a58 <_obstack_memory_used@@Base+0xbdd8>  // b.none
  443a7c:	sub	w0, w0, #0x30
  443a80:	cmp	w0, #0x9
  443a84:	b.hi	443b40 <_obstack_memory_used@@Base+0xbec0>  // b.pmore
  443a88:	mov	w1, #0xcccc                	// #52428
  443a8c:	mov	w26, #0x0                   	// #0
  443a90:	movk	w1, #0xccc, lsl #16
  443a94:	mov	w2, #0xa                   	// #10
  443a98:	cmp	w26, w1
  443a9c:	b.gt	443b38 <_obstack_memory_used@@Base+0xbeb8>
  443aa0:	ldrb	w0, [x21]
  443aa4:	b.ne	443ab0 <_obstack_memory_used@@Base+0xbe30>  // b.any
  443aa8:	cmp	w0, #0x37
  443aac:	b.hi	443b38 <_obstack_memory_used@@Base+0xbeb8>  // b.pmore
  443ab0:	sub	w0, w0, #0x30
  443ab4:	madd	w26, w26, w2, w0
  443ab8:	ldrb	w0, [x21, #1]!
  443abc:	sub	w0, w0, #0x30
  443ac0:	cmp	w0, #0x9
  443ac4:	b.ls	443a98 <_obstack_memory_used@@Base+0xbe18>  // b.plast
  443ac8:	ldrb	w3, [x21]
  443acc:	cmp	w3, #0x45
  443ad0:	b.eq	443adc <_obstack_memory_used@@Base+0xbe5c>  // b.none
  443ad4:	cmp	w3, #0x4f
  443ad8:	b.ne	443b48 <_obstack_memory_used@@Base+0xbec8>  // b.any
  443adc:	add	x21, x21, #0x1
  443ae0:	ldrb	w11, [x21]
  443ae4:	mov	w4, w11
  443ae8:	cmp	w11, #0x7a
  443aec:	b.hi	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.pmore
  443af0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  443af4:	add	x0, x0, #0xd5c
  443af8:	ldrh	w0, [x0, w11, uxtw #1]
  443afc:	adr	x1, 443b08 <_obstack_memory_used@@Base+0xbe88>
  443b00:	add	x0, x1, w0, sxth #2
  443b04:	br	x0
  443b08:	mov	w25, #0x1                   	// #1
  443b0c:	b	443a5c <_obstack_memory_used@@Base+0xbddc>
  443b10:	mov	w22, #0x1                   	// #1
  443b14:	b	443a5c <_obstack_memory_used@@Base+0xbddc>
  443b18:	ldr	w22, [sp, #168]
  443b1c:	mov	w25, #0x0                   	// #0
  443b20:	mov	w27, #0x0                   	// #0
  443b24:	b	443a5c <_obstack_memory_used@@Base+0xbddc>
  443b28:	cmp	w0, #0x5e
  443b2c:	b.eq	443b10 <_obstack_memory_used@@Base+0xbe90>  // b.none
  443b30:	cmp	w0, #0x5f
  443b34:	b	443a78 <_obstack_memory_used@@Base+0xbdf8>
  443b38:	mov	w26, #0x7fffffff            	// #2147483647
  443b3c:	b	443ab8 <_obstack_memory_used@@Base+0xbe38>
  443b40:	mov	w26, #0xffffffff            	// #-1
  443b44:	b	443ac8 <_obstack_memory_used@@Base+0xbe48>
  443b48:	mov	w3, #0x0                   	// #0
  443b4c:	b	443ae0 <_obstack_memory_used@@Base+0xbe60>
  443b50:	adrp	x11, 44e000 <_obstack_memory_used@@Base+0x16380>
  443b54:	add	x28, x11, #0x76b
  443b58:	ldr	w7, [sp, #124]
  443b5c:	mov	x2, x28
  443b60:	ldr	x6, [sp, #128]
  443b64:	mov	x1, #0xffffffffffffffff    	// #-1
  443b68:	ldr	x5, [sp, #152]
  443b6c:	mov	w4, w22
  443b70:	mov	x3, x20
  443b74:	mov	x0, #0x0                   	// #0
  443b78:	bl	443968 <_obstack_memory_used@@Base+0xbce8>
  443b7c:	mov	x25, x0
  443b80:	cmp	w26, #0x0
  443b84:	csel	w1, w26, wzr, ge  // ge = tcont
  443b88:	cmp	x25, w1, sxtw
  443b8c:	sxtw	x0, w1
  443b90:	csel	x1, x25, x0, cs  // cs = hs, nlast
  443b94:	str	x1, [sp, #144]
  443b98:	ldr	x1, [sp, #96]
  443b9c:	ldr	x2, [sp, #144]
  443ba0:	sub	x1, x1, x19
  443ba4:	str	x1, [sp, #112]
  443ba8:	cmp	x1, x2
  443bac:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  443bb0:	cbz	x23, 443c04 <_obstack_memory_used@@Base+0xbf84>
  443bb4:	cmp	x25, x0
  443bb8:	b.cs	443d10 <_obstack_memory_used@@Base+0xc090>  // b.hs, b.nlast
  443bbc:	sxtw	x2, w26
  443bc0:	cmp	w27, #0x30
  443bc4:	sub	x2, x2, x25
  443bc8:	add	x24, x23, x2
  443bcc:	b.ne	443d08 <_obstack_memory_used@@Base+0xc088>  // b.any
  443bd0:	mov	w1, w27
  443bd4:	mov	x0, x23
  443bd8:	bl	404700 <memset@plt>
  443bdc:	ldr	w7, [sp, #124]
  443be0:	mov	w4, w22
  443be4:	ldr	x1, [sp, #112]
  443be8:	mov	x3, x20
  443bec:	ldr	x6, [sp, #128]
  443bf0:	mov	x2, x28
  443bf4:	ldr	x5, [sp, #152]
  443bf8:	mov	x0, x24
  443bfc:	add	x23, x24, x25
  443c00:	bl	443968 <_obstack_memory_used@@Base+0xbce8>
  443c04:	ldr	x0, [sp, #144]
  443c08:	add	x19, x19, x0
  443c0c:	b	443a50 <_obstack_memory_used@@Base+0xbdd0>
  443c10:	cmp	w26, #0x0
  443c14:	ldr	x0, [sp, #96]
  443c18:	csel	w24, w26, wzr, ge  // ge = tcont
  443c1c:	sub	x0, x0, x19
  443c20:	sxtw	x24, w24
  443c24:	cbnz	w3, 4447f0 <_obstack_memory_used@@Base+0xcb70>
  443c28:	cmp	x24, #0x0
  443c2c:	csinc	x24, x24, xzr, ne  // ne = any
  443c30:	cmp	x24, x0
  443c34:	b.cs	444898 <_obstack_memory_used@@Base+0xcc18>  // b.hs, b.nlast
  443c38:	cbz	x23, 443c70 <_obstack_memory_used@@Base+0xbff0>
  443c3c:	cmp	w26, #0x1
  443c40:	b.le	443c80 <_obstack_memory_used@@Base+0xc000>
  443c44:	sxtw	x2, w26
  443c48:	cmp	w27, #0x30
  443c4c:	sub	x2, x2, #0x1
  443c50:	add	x22, x23, x2
  443c54:	b.ne	443c78 <_obstack_memory_used@@Base+0xbff8>  // b.any
  443c58:	mov	w1, w27
  443c5c:	mov	x0, x23
  443c60:	bl	404700 <memset@plt>
  443c64:	ldrb	w0, [x21]
  443c68:	mov	x23, x22
  443c6c:	strb	w0, [x23], #1
  443c70:	add	x19, x19, x24
  443c74:	b	443a50 <_obstack_memory_used@@Base+0xbdd0>
  443c78:	mov	w1, #0x20                  	// #32
  443c7c:	b	443c5c <_obstack_memory_used@@Base+0xbfdc>
  443c80:	mov	x22, x23
  443c84:	b	443c64 <_obstack_memory_used@@Base+0xbfe4>
  443c88:	cbnz	w3, 4447f0 <_obstack_memory_used@@Base+0xcb70>
  443c8c:	cbz	w25, 443d20 <_obstack_memory_used@@Base+0xc0a0>
  443c90:	mov	w22, w25
  443c94:	mov	w5, #0x0                   	// #0
  443c98:	mov	w4, #0x61                  	// #97
  443c9c:	mov	w25, #0x0                   	// #0
  443ca0:	b	443d28 <_obstack_memory_used@@Base+0xc0a8>
  443ca4:	cbnz	w3, 4447f0 <_obstack_memory_used@@Base+0xcb70>
  443ca8:	cbz	w25, 443de4 <_obstack_memory_used@@Base+0xc164>
  443cac:	mov	w22, w25
  443cb0:	mov	w5, #0x0                   	// #0
  443cb4:	mov	w4, #0x41                  	// #65
  443cb8:	b	443c9c <_obstack_memory_used@@Base+0xc01c>
  443cbc:	cmp	w25, #0x0
  443cc0:	csel	w22, w22, w25, eq  // eq = none
  443cc4:	cmp	w3, #0x45
  443cc8:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  443ccc:	mov	w25, #0x0                   	// #0
  443cd0:	b	443df4 <_obstack_memory_used@@Base+0xc174>
  443cd4:	cmp	w3, #0x45
  443cd8:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  443cdc:	cbz	w25, 443df0 <_obstack_memory_used@@Base+0xc170>
  443ce0:	mov	w22, w25
  443ce4:	mov	w4, #0x42                  	// #66
  443ce8:	b	443ccc <_obstack_memory_used@@Base+0xc04c>
  443cec:	cmp	w3, #0x4f
  443cf0:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  443cf4:	mov	w4, #0x63                  	// #99
  443cf8:	b	443ccc <_obstack_memory_used@@Base+0xc04c>
  443cfc:	adrp	x11, 448000 <_obstack_memory_used@@Base+0x10380>
  443d00:	add	x28, x11, #0xca9
  443d04:	b	443b58 <_obstack_memory_used@@Base+0xbed8>
  443d08:	mov	w1, #0x20                  	// #32
  443d0c:	b	443bd4 <_obstack_memory_used@@Base+0xbf54>
  443d10:	mov	x24, x23
  443d14:	b	443bdc <_obstack_memory_used@@Base+0xbf5c>
  443d18:	mov	w4, #0x72                  	// #114
  443d1c:	b	443ccc <_obstack_memory_used@@Base+0xc04c>
  443d20:	mov	w5, #0x0                   	// #0
  443d24:	mov	w4, #0x61                  	// #97
  443d28:	mov	w0, #0x2520                	// #9504
  443d2c:	strh	w0, [sp, #184]
  443d30:	cbz	w3, 443e20 <_obstack_memory_used@@Base+0xc1a0>
  443d34:	add	x0, sp, #0xbb
  443d38:	strb	w3, [sp, #186]
  443d3c:	strb	w4, [x0]
  443d40:	mov	x3, x20
  443d44:	strb	wzr, [x0, #1]
  443d48:	add	x2, sp, #0xb8
  443d4c:	add	x0, sp, #0xd0
  443d50:	mov	x1, #0x400                 	// #1024
  443d54:	str	w5, [sp, #144]
  443d58:	bl	404400 <strftime@plt>
  443d5c:	cbz	x0, 443a50 <_obstack_memory_used@@Base+0xbdd0>
  443d60:	cmp	w26, #0x0
  443d64:	sub	x28, x0, #0x1
  443d68:	csel	w1, w26, wzr, ge  // ge = tcont
  443d6c:	cmp	x28, w1, sxtw
  443d70:	sxtw	x0, w1
  443d74:	csel	x1, x28, x0, cs  // cs = hs, nlast
  443d78:	str	x1, [sp, #112]
  443d7c:	ldr	x1, [sp, #96]
  443d80:	ldr	x2, [sp, #112]
  443d84:	sub	x1, x1, x19
  443d88:	cmp	x1, x2
  443d8c:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  443d90:	cbz	x23, 443ddc <_obstack_memory_used@@Base+0xc15c>
  443d94:	ldr	w5, [sp, #144]
  443d98:	cmp	w5, #0x0
  443d9c:	ccmp	x28, x0, #0x2, eq  // eq = none
  443da0:	b.cs	443e30 <_obstack_memory_used@@Base+0xc1b0>  // b.hs, b.nlast
  443da4:	sxtw	x2, w26
  443da8:	cmp	w27, #0x30
  443dac:	sub	x2, x2, x28
  443db0:	add	x24, x23, x2
  443db4:	b.ne	443e28 <_obstack_memory_used@@Base+0xc1a8>  // b.any
  443db8:	mov	w1, w27
  443dbc:	mov	x0, x23
  443dc0:	bl	404700 <memset@plt>
  443dc4:	ldr	x1, [sp, #136]
  443dc8:	mov	x2, x28
  443dcc:	mov	x0, x24
  443dd0:	cbz	w25, 444874 <_obstack_memory_used@@Base+0xcbf4>
  443dd4:	bl	4438c0 <_obstack_memory_used@@Base+0xbc40>
  443dd8:	add	x23, x24, x28
  443ddc:	ldr	x0, [sp, #112]
  443de0:	b	443c08 <_obstack_memory_used@@Base+0xbf88>
  443de4:	mov	w5, #0x0                   	// #0
  443de8:	mov	w4, #0x41                  	// #65
  443dec:	b	443d28 <_obstack_memory_used@@Base+0xc0a8>
  443df0:	mov	w4, #0x42                  	// #66
  443df4:	mov	w5, #0x0                   	// #0
  443df8:	b	443d28 <_obstack_memory_used@@Base+0xc0a8>
  443dfc:	mov	w4, #0x43                  	// #67
  443e00:	b	443ccc <_obstack_memory_used@@Base+0xc04c>
  443e04:	mov	w25, w0
  443e08:	mov	w4, #0x70                  	// #112
  443e0c:	b	443df4 <_obstack_memory_used@@Base+0xc174>
  443e10:	mov	w4, #0x59                  	// #89
  443e14:	b	443ccc <_obstack_memory_used@@Base+0xc04c>
  443e18:	mov	w4, #0x79                  	// #121
  443e1c:	b	443ccc <_obstack_memory_used@@Base+0xc04c>
  443e20:	add	x0, sp, #0xba
  443e24:	b	443d3c <_obstack_memory_used@@Base+0xc0bc>
  443e28:	mov	w1, #0x20                  	// #32
  443e2c:	b	443dbc <_obstack_memory_used@@Base+0xc13c>
  443e30:	mov	x24, x23
  443e34:	b	443dc4 <_obstack_memory_used@@Base+0xc144>
  443e38:	cmp	w3, #0x45
  443e3c:	b.eq	443dfc <_obstack_memory_used@@Base+0xc17c>  // b.none
  443e40:	ldr	w2, [x20, #20]
  443e44:	mov	w5, #0x64                  	// #100
  443e48:	sdiv	w0, w2, w5
  443e4c:	add	w1, w0, #0x13
  443e50:	msub	w0, w0, w5, w2
  443e54:	tbz	w0, #31, 443e7c <_obstack_memory_used@@Base+0xc1fc>
  443e58:	cmp	w1, #0x0
  443e5c:	cset	w0, gt
  443e60:	cmn	w2, #0x76c
  443e64:	sub	w1, w1, w0
  443e68:	cset	w6, lt  // lt = tstop
  443e6c:	mov	w0, #0x0                   	// #0
  443e70:	mov	w2, #0x0                   	// #0
  443e74:	mov	w5, #0x2                   	// #2
  443e78:	b	443ee8 <_obstack_memory_used@@Base+0xc268>
  443e7c:	mov	w0, #0x0                   	// #0
  443e80:	b	443e60 <_obstack_memory_used@@Base+0xc1e0>
  443e84:	cmp	w3, #0x4f
  443e88:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  443e8c:	mov	w4, #0x78                  	// #120
  443e90:	b	443ccc <_obstack_memory_used@@Base+0xc04c>
  443e94:	cbnz	w3, 4447f0 <_obstack_memory_used@@Base+0xcb70>
  443e98:	adrp	x11, 44e000 <_obstack_memory_used@@Base+0x16380>
  443e9c:	add	x28, x11, #0x3ca
  443ea0:	b	443b58 <_obstack_memory_used@@Base+0xbed8>
  443ea4:	cmp	w3, #0x45
  443ea8:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  443eac:	ldr	w1, [x20, #12]
  443eb0:	mov	w5, #0x2                   	// #2
  443eb4:	b	443edc <_obstack_memory_used@@Base+0xc25c>
  443eb8:	cmp	w3, #0x45
  443ebc:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  443ec0:	ldr	w1, [x20, #12]
  443ec4:	cmp	w27, #0x30
  443ec8:	mov	w0, #0x2d                  	// #45
  443ecc:	ccmp	w27, w0, #0x4, ne  // ne = any
  443ed0:	mov	w0, #0x5f                  	// #95
  443ed4:	csel	w27, w27, w0, eq  // eq = none
  443ed8:	mov	w5, #0x2                   	// #2
  443edc:	lsr	w6, w1, #31
  443ee0:	mov	w0, #0x0                   	// #0
  443ee4:	mov	w2, #0x0                   	// #0
  443ee8:	cmp	w3, #0x4f
  443eec:	eor	w7, w6, #0x1
  443ef0:	csel	w7, w7, wzr, eq  // eq = none
  443ef4:	cbnz	w7, 443c9c <_obstack_memory_used@@Base+0xc01c>
  443ef8:	cbz	w6, 443f00 <_obstack_memory_used@@Base+0xc280>
  443efc:	neg	w1, w1
  443f00:	add	x24, sp, #0xcf
  443f04:	mov	w12, #0x3a                  	// #58
  443f08:	mov	w7, #0xa                   	// #10
  443f0c:	tbz	w0, #0, 44401c <_obstack_memory_used@@Base+0xc39c>
  443f10:	sub	x3, x24, #0x1
  443f14:	sturb	w12, [x24, #-1]
  443f18:	udiv	w11, w1, w7
  443f1c:	asr	w0, w0, #1
  443f20:	cmp	w0, #0x0
  443f24:	sub	x24, x3, #0x1
  443f28:	ccmp	w1, #0x9, #0x2, eq  // eq = none
  443f2c:	msub	w4, w11, w7, w1
  443f30:	add	w4, w4, #0x30
  443f34:	sturb	w4, [x3, #-1]
  443f38:	b.hi	444014 <_obstack_memory_used@@Base+0xc394>  // b.pmore
  443f3c:	cmp	w5, w26
  443f40:	csel	w0, w5, w26, ge  // ge = tcont
  443f44:	str	w0, [sp, #112]
  443f48:	ldr	x0, [sp, #96]
  443f4c:	sub	x0, x0, x19
  443f50:	cbnz	w6, 4448c0 <_obstack_memory_used@@Base+0xcc40>
  443f54:	cbnz	w2, 4449ac <_obstack_memory_used@@Base+0xcd2c>
  443f58:	cmp	w27, #0x2d
  443f5c:	b.eq	444928 <_obstack_memory_used@@Base+0xcca8>  // b.none
  443f60:	mov	w25, #0x0                   	// #0
  443f64:	ldr	x1, [sp, #160]
  443f68:	cmp	w25, #0x0
  443f6c:	cset	w2, ne  // ne = any
  443f70:	sub	x3, x1, x24
  443f74:	ldr	w1, [sp, #112]
  443f78:	sub	w3, w1, w3
  443f7c:	sub	w3, w3, w2
  443f80:	cmp	w3, #0x0
  443f84:	b.le	4440d8 <_obstack_memory_used@@Base+0xc458>
  443f88:	cmp	w27, #0x5f
  443f8c:	b.ne	444024 <_obstack_memory_used@@Base+0xc3a4>  // b.any
  443f90:	sxtw	x28, w3
  443f94:	cmp	x0, w3, sxtw
  443f98:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  443f9c:	cbz	x23, 443fbc <_obstack_memory_used@@Base+0xc33c>
  443fa0:	mov	x0, x23
  443fa4:	mov	x2, x28
  443fa8:	mov	w1, #0x20                  	// #32
  443fac:	str	w3, [sp, #144]
  443fb0:	bl	404700 <memset@plt>
  443fb4:	add	x23, x23, x28
  443fb8:	ldr	w3, [sp, #144]
  443fbc:	subs	w0, w26, w3
  443fc0:	add	x19, x19, x28
  443fc4:	csel	w26, w0, wzr, gt
  443fc8:	cbz	w25, 444928 <_obstack_memory_used@@Base+0xcca8>
  443fcc:	cmp	w26, #0x0
  443fd0:	csel	w0, w26, wzr, ge  // ge = tcont
  443fd4:	ldr	x1, [sp, #96]
  443fd8:	sxtw	x0, w0
  443fdc:	cmp	x0, #0x0
  443fe0:	csinc	x3, x0, xzr, ne  // ne = any
  443fe4:	sub	x1, x1, x19
  443fe8:	cmp	x3, x1
  443fec:	b.cs	444898 <_obstack_memory_used@@Base+0xcc18>  // b.hs, b.nlast
  443ff0:	cbz	x23, 444924 <_obstack_memory_used@@Base+0xcca4>
  443ff4:	ldr	w1, [sp, #112]
  443ff8:	cmp	w1, #0x0
  443ffc:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  444000:	b	4448f8 <_obstack_memory_used@@Base+0xcc78>
  444004:	ldr	w1, [sp, #124]
  444008:	mov	w26, #0x9                   	// #9
  44400c:	mov	w5, w26
  444010:	b	443edc <_obstack_memory_used@@Base+0xc25c>
  444014:	mov	w1, w11
  444018:	b	443f0c <_obstack_memory_used@@Base+0xc28c>
  44401c:	mov	x3, x24
  444020:	b	443f18 <_obstack_memory_used@@Base+0xc298>
  444024:	ldr	w1, [sp, #112]
  444028:	cmp	x0, w1, sxtw
  44402c:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  444030:	cbz	w25, 4440a0 <_obstack_memory_used@@Base+0xc420>
  444034:	cmp	w26, #0x0
  444038:	csel	w1, w26, wzr, ge  // ge = tcont
  44403c:	sxtw	x1, w1
  444040:	cmp	x1, #0x0
  444044:	csinc	x2, x1, xzr, ne  // ne = any
  444048:	str	x2, [sp, #144]
  44404c:	cmp	x2, x0
  444050:	b.cs	444898 <_obstack_memory_used@@Base+0xcc18>  // b.hs, b.nlast
  444054:	cbz	x23, 444098 <_obstack_memory_used@@Base+0xc418>
  444058:	ldr	w0, [sp, #112]
  44405c:	cmp	w0, #0x0
  444060:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  444064:	b.ls	4440d0 <_obstack_memory_used@@Base+0xc450>  // b.plast
  444068:	sxtw	x2, w26
  44406c:	str	w3, [sp, #172]
  444070:	sub	x2, x2, #0x1
  444074:	cmp	w27, #0x30
  444078:	add	x28, x23, x2
  44407c:	b.ne	4440c8 <_obstack_memory_used@@Base+0xc448>  // b.any
  444080:	mov	w1, w27
  444084:	mov	x0, x23
  444088:	bl	404700 <memset@plt>
  44408c:	ldr	w3, [sp, #172]
  444090:	mov	x23, x28
  444094:	strb	w25, [x23], #1
  444098:	ldr	x0, [sp, #144]
  44409c:	add	x19, x19, x0
  4440a0:	sxtw	x25, w3
  4440a4:	cbz	x23, 4440bc <_obstack_memory_used@@Base+0xc43c>
  4440a8:	mov	x0, x23
  4440ac:	add	x23, x23, x25
  4440b0:	mov	x2, x25
  4440b4:	mov	w1, #0x30                  	// #48
  4440b8:	bl	404700 <memset@plt>
  4440bc:	add	x19, x19, x25
  4440c0:	mov	w26, #0x0                   	// #0
  4440c4:	b	444928 <_obstack_memory_used@@Base+0xcca8>
  4440c8:	mov	w1, #0x20                  	// #32
  4440cc:	b	444084 <_obstack_memory_used@@Base+0xc404>
  4440d0:	mov	x28, x23
  4440d4:	b	444090 <_obstack_memory_used@@Base+0xc410>
  4440d8:	cbz	w25, 444928 <_obstack_memory_used@@Base+0xcca8>
  4440dc:	cmp	w26, #0x0
  4440e0:	csel	w1, w26, wzr, ge  // ge = tcont
  4440e4:	sxtw	x1, w1
  4440e8:	cmp	x1, #0x0
  4440ec:	csinc	x2, x1, xzr, ne  // ne = any
  4440f0:	str	x2, [sp, #144]
  4440f4:	cmp	x2, x0
  4440f8:	b.cs	444898 <_obstack_memory_used@@Base+0xcc18>  // b.hs, b.nlast
  4440fc:	cbz	x23, 444138 <_obstack_memory_used@@Base+0xc4b8>
  444100:	ldr	w0, [sp, #112]
  444104:	cmp	w0, #0x0
  444108:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  44410c:	b.ls	44414c <_obstack_memory_used@@Base+0xc4cc>  // b.plast
  444110:	sxtw	x2, w26
  444114:	cmp	w27, #0x30
  444118:	sub	x2, x2, #0x1
  44411c:	add	x28, x23, x2
  444120:	b.ne	444144 <_obstack_memory_used@@Base+0xc4c4>  // b.any
  444124:	mov	w1, w27
  444128:	mov	x0, x23
  44412c:	bl	404700 <memset@plt>
  444130:	mov	x23, x28
  444134:	strb	w25, [x23], #1
  444138:	ldr	x0, [sp, #144]
  44413c:	add	x19, x19, x0
  444140:	b	444928 <_obstack_memory_used@@Base+0xcca8>
  444144:	mov	w1, #0x20                  	// #32
  444148:	b	444128 <_obstack_memory_used@@Base+0xc4a8>
  44414c:	mov	x28, x23
  444150:	b	444130 <_obstack_memory_used@@Base+0xc4b0>
  444154:	mov	w1, #0x20                  	// #32
  444158:	b	444988 <_obstack_memory_used@@Base+0xcd08>
  44415c:	mov	x25, x23
  444160:	b	444990 <_obstack_memory_used@@Base+0xcd10>
  444164:	bl	404200 <memcpy@plt>
  444168:	b	4449a4 <_obstack_memory_used@@Base+0xcd24>
  44416c:	cbnz	w3, 4447f0 <_obstack_memory_used@@Base+0xcb70>
  444170:	adrp	x11, 44e000 <_obstack_memory_used@@Base+0x16380>
  444174:	add	x28, x11, #0x3d3
  444178:	b	443b58 <_obstack_memory_used@@Base+0xbed8>
  44417c:	cmp	w3, #0x45
  444180:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  444184:	ldr	w1, [x20, #8]
  444188:	b	443eb0 <_obstack_memory_used@@Base+0xc230>
  44418c:	cmp	w3, #0x45
  444190:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  444194:	ldr	w1, [sp, #120]
  444198:	b	443eb0 <_obstack_memory_used@@Base+0xc230>
  44419c:	cmp	w3, #0x45
  4441a0:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  4441a4:	ldr	w1, [x20, #8]
  4441a8:	b	443ec4 <_obstack_memory_used@@Base+0xc244>
  4441ac:	cmp	w3, #0x45
  4441b0:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  4441b4:	ldr	w1, [sp, #120]
  4441b8:	b	443ec4 <_obstack_memory_used@@Base+0xc244>
  4441bc:	cmp	w3, #0x45
  4441c0:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  4441c4:	ldr	w1, [x20, #28]
  4441c8:	mov	w0, #0x0                   	// #0
  4441cc:	mov	w2, #0x0                   	// #0
  4441d0:	cmn	w1, #0x1
  4441d4:	add	w1, w1, #0x1
  4441d8:	cset	w6, lt  // lt = tstop
  4441dc:	mov	w5, #0x3                   	// #3
  4441e0:	b	443ee8 <_obstack_memory_used@@Base+0xc268>
  4441e4:	cmp	w3, #0x45
  4441e8:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  4441ec:	ldr	w1, [x20, #4]
  4441f0:	b	443eb0 <_obstack_memory_used@@Base+0xc230>
  4441f4:	cmp	w3, #0x45
  4441f8:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  4441fc:	ldr	w1, [x20, #16]
  444200:	cmn	w1, #0x1
  444204:	add	w1, w1, #0x1
  444208:	cset	w6, lt  // lt = tstop
  44420c:	b	443e6c <_obstack_memory_used@@Base+0xc1ec>
  444210:	cmp	w3, #0x45
  444214:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  444218:	cmn	w26, #0x1
  44421c:	b.eq	444004 <_obstack_memory_used@@Base+0xc384>  // b.none
  444220:	ldr	w1, [sp, #124]
  444224:	mov	w0, w26
  444228:	mov	w2, #0xa                   	// #10
  44422c:	cmp	w0, #0x8
  444230:	b.gt	44400c <_obstack_memory_used@@Base+0xc38c>
  444234:	sdiv	w1, w1, w2
  444238:	add	w0, w0, #0x1
  44423c:	b	44422c <_obstack_memory_used@@Base+0xc5ac>
  444240:	cmp	w26, #0x0
  444244:	csel	w24, w26, wzr, ge  // ge = tcont
  444248:	ldr	x0, [sp, #96]
  44424c:	sxtw	x24, w24
  444250:	cmp	x24, #0x0
  444254:	csinc	x24, x24, xzr, ne  // ne = any
  444258:	sub	x0, x0, x19
  44425c:	cmp	x0, x24
  444260:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  444264:	cbz	x23, 443c70 <_obstack_memory_used@@Base+0xbff0>
  444268:	cmp	w26, #0x1
  44426c:	b.le	4442a4 <_obstack_memory_used@@Base+0xc624>
  444270:	sxtw	x2, w26
  444274:	cmp	w27, #0x30
  444278:	sub	x2, x2, #0x1
  44427c:	add	x22, x23, x2
  444280:	b.ne	44429c <_obstack_memory_used@@Base+0xc61c>  // b.any
  444284:	mov	w1, w27
  444288:	mov	x0, x23
  44428c:	bl	404700 <memset@plt>
  444290:	mov	x23, x22
  444294:	mov	w0, #0xa                   	// #10
  444298:	b	443c6c <_obstack_memory_used@@Base+0xbfec>
  44429c:	mov	w1, #0x20                  	// #32
  4442a0:	b	444288 <_obstack_memory_used@@Base+0xc608>
  4442a4:	mov	x22, x23
  4442a8:	b	444290 <_obstack_memory_used@@Base+0xc610>
  4442ac:	mov	w0, #0x1                   	// #1
  4442b0:	cbz	w25, 443e04 <_obstack_memory_used@@Base+0xc184>
  4442b4:	mov	w4, #0x70                  	// #112
  4442b8:	mov	w22, #0x0                   	// #0
  4442bc:	b	443df4 <_obstack_memory_used@@Base+0xc174>
  4442c0:	mov	w0, #0x0                   	// #0
  4442c4:	b	4442b0 <_obstack_memory_used@@Base+0xc630>
  4442c8:	ldr	w1, [x20, #16]
  4442cc:	mov	w0, #0xb                   	// #11
  4442d0:	mov	w2, #0x0                   	// #0
  4442d4:	mov	w6, #0x0                   	// #0
  4442d8:	mov	w5, #0x1                   	// #1
  4442dc:	mul	w1, w1, w0
  4442e0:	mov	w0, #0x0                   	// #0
  4442e4:	asr	w1, w1, #5
  4442e8:	add	w1, w1, #0x1
  4442ec:	b	443ee8 <_obstack_memory_used@@Base+0xc268>
  4442f0:	cmp	w3, #0x45
  4442f4:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  4442f8:	ldr	w1, [x20]
  4442fc:	b	443eb0 <_obstack_memory_used@@Base+0xc230>
  444300:	mov	x1, x20
  444304:	mov	x2, #0x38                  	// #56
  444308:	add	x0, sp, #0xd0
  44430c:	bl	404200 <memcpy@plt>
  444310:	ldr	x0, [sp, #128]
  444314:	add	x1, sp, #0xd0
  444318:	add	x24, sp, #0xcf
  44431c:	bl	442ac8 <_obstack_memory_used@@Base+0xae48>
  444320:	lsr	x6, x0, #63
  444324:	and	w6, w6, #0xff
  444328:	mov	x3, x0
  44432c:	mov	x4, #0xa                   	// #10
  444330:	mov	w5, #0x30                  	// #48
  444334:	sdiv	x1, x3, x4
  444338:	cmp	x0, #0x0
  44433c:	msub	x2, x1, x4, x3
  444340:	mov	x3, x1
  444344:	and	w1, w2, #0xff
  444348:	add	w1, w1, #0x30
  44434c:	sub	w2, w5, w2, uxtb
  444350:	and	w2, w2, #0xff
  444354:	and	w1, w1, #0xff
  444358:	csel	w1, w1, w2, ge  // ge = tcont
  44435c:	strb	w1, [x24, #-1]!
  444360:	cbnz	x3, 444334 <_obstack_memory_used@@Base+0xc6b4>
  444364:	mov	w2, #0x0                   	// #0
  444368:	mov	w5, #0x1                   	// #1
  44436c:	b	443f3c <_obstack_memory_used@@Base+0xc2bc>
  444370:	cmp	w3, #0x4f
  444374:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  444378:	mov	w4, #0x58                  	// #88
  44437c:	b	443ccc <_obstack_memory_used@@Base+0xc04c>
  444380:	cmp	w26, #0x0
  444384:	csel	w24, w26, wzr, ge  // ge = tcont
  444388:	ldr	x0, [sp, #96]
  44438c:	sxtw	x24, w24
  444390:	cmp	x24, #0x0
  444394:	csinc	x24, x24, xzr, ne  // ne = any
  444398:	sub	x0, x0, x19
  44439c:	cmp	x0, x24
  4443a0:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  4443a4:	cbz	x23, 443c70 <_obstack_memory_used@@Base+0xbff0>
  4443a8:	cmp	w26, #0x1
  4443ac:	b.le	4443e4 <_obstack_memory_used@@Base+0xc764>
  4443b0:	sxtw	x2, w26
  4443b4:	cmp	w27, #0x30
  4443b8:	sub	x2, x2, #0x1
  4443bc:	add	x22, x23, x2
  4443c0:	b.ne	4443dc <_obstack_memory_used@@Base+0xc75c>  // b.any
  4443c4:	mov	w1, w27
  4443c8:	mov	x0, x23
  4443cc:	bl	404700 <memset@plt>
  4443d0:	mov	x23, x22
  4443d4:	mov	w0, #0x9                   	// #9
  4443d8:	b	443c6c <_obstack_memory_used@@Base+0xbfec>
  4443dc:	mov	w1, #0x20                  	// #32
  4443e0:	b	4443c8 <_obstack_memory_used@@Base+0xc748>
  4443e4:	mov	x22, x23
  4443e8:	b	4443d0 <_obstack_memory_used@@Base+0xc750>
  4443ec:	ldr	w1, [x20, #24]
  4443f0:	mov	w2, #0x7                   	// #7
  4443f4:	add	w0, w1, #0x6
  4443f8:	sdiv	w1, w0, w2
  4443fc:	msub	w1, w1, w2, w0
  444400:	add	w1, w1, #0x1
  444404:	mov	w5, #0x1                   	// #1
  444408:	b	443edc <_obstack_memory_used@@Base+0xc25c>
  44440c:	cmp	w3, #0x45
  444410:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  444414:	ldp	w0, w1, [x20, #24]
  444418:	sub	w1, w1, w0
  44441c:	mov	w0, #0x7                   	// #7
  444420:	add	w1, w1, #0x7
  444424:	sdiv	w1, w1, w0
  444428:	b	443eb0 <_obstack_memory_used@@Base+0xc230>
  44442c:	cmp	w3, #0x45
  444430:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  444434:	ldp	w7, w6, [x20, #20]
  444438:	mov	w1, #0xffffff9c            	// #-100
  44443c:	ldr	w12, [x20, #28]
  444440:	mov	w0, #0x12c                 	// #300
  444444:	cmp	w7, #0x0
  444448:	mov	w5, #0x7                   	// #7
  44444c:	sub	w2, w12, w6
  444450:	csel	w0, w0, w1, lt  // lt = tstop
  444454:	add	w1, w2, #0x17e
  444458:	add	w0, w7, w0
  44445c:	sdiv	w2, w1, w5
  444460:	msub	w2, w2, w5, w1
  444464:	sub	w2, w12, w2
  444468:	adds	w2, w2, #0x3
  44446c:	b.pl	44451c <_obstack_memory_used@@Base+0xc89c>  // b.nfrst
  444470:	sub	w1, w0, #0x1
  444474:	tst	x1, #0x3
  444478:	b.ne	44450c <_obstack_memory_used@@Base+0xc88c>  // b.any
  44447c:	mov	w2, #0x64                  	// #100
  444480:	sdiv	w0, w1, w2
  444484:	msub	w0, w0, w2, w1
  444488:	cbnz	w0, 444514 <_obstack_memory_used@@Base+0xc894>
  44448c:	mov	w2, #0x190                 	// #400
  444490:	sdiv	w0, w1, w2
  444494:	msub	w0, w0, w2, w1
  444498:	cmp	w0, #0x0
  44449c:	cset	w5, eq  // eq = none
  4444a0:	add	w5, w5, #0x16d
  4444a4:	add	w0, w5, w12
  4444a8:	sub	w5, w0, w6
  4444ac:	mov	w6, #0x7                   	// #7
  4444b0:	add	w5, w5, #0x17e
  4444b4:	sdiv	w2, w5, w6
  4444b8:	msub	w2, w2, w6, w5
  4444bc:	mov	w5, #0xffffffff            	// #-1
  4444c0:	sub	w0, w0, w2
  4444c4:	add	w2, w0, #0x3
  4444c8:	cmp	w11, #0x47
  4444cc:	b.eq	44458c <_obstack_memory_used@@Base+0xc90c>  // b.none
  4444d0:	cmp	w11, #0x67
  4444d4:	b.ne	4445b4 <_obstack_memory_used@@Base+0xc934>  // b.any
  4444d8:	mov	w2, #0x64                  	// #100
  4444dc:	sdiv	w1, w7, w2
  4444e0:	msub	w1, w1, w2, w7
  4444e4:	add	w1, w1, w5
  4444e8:	sdiv	w0, w1, w2
  4444ec:	msub	w1, w0, w2, w1
  4444f0:	tbz	w1, #31, 443eb0 <_obstack_memory_used@@Base+0xc230>
  4444f4:	mov	w0, #0xfffff894            	// #-1900
  4444f8:	sub	w5, w0, w5
  4444fc:	cmp	w7, w5
  444500:	b.ge	44464c <_obstack_memory_used@@Base+0xc9cc>  // b.tcont
  444504:	neg	w1, w1
  444508:	b	443eb0 <_obstack_memory_used@@Base+0xc230>
  44450c:	mov	w5, #0x0                   	// #0
  444510:	b	4444a0 <_obstack_memory_used@@Base+0xc820>
  444514:	mov	w5, #0x1                   	// #1
  444518:	b	4444a0 <_obstack_memory_used@@Base+0xc820>
  44451c:	tst	x0, #0x3
  444520:	b.ne	44457c <_obstack_memory_used@@Base+0xc8fc>  // b.any
  444524:	mov	w5, #0x64                  	// #100
  444528:	sdiv	w1, w0, w5
  44452c:	msub	w1, w1, w5, w0
  444530:	cbnz	w1, 444584 <_obstack_memory_used@@Base+0xc904>
  444534:	mov	w5, #0x190                 	// #400
  444538:	sdiv	w1, w0, w5
  44453c:	msub	w0, w1, w5, w0
  444540:	cmp	w0, #0x0
  444544:	cset	w1, eq  // eq = none
  444548:	add	w1, w1, #0x16d
  44454c:	sub	w0, w12, w1
  444550:	sub	w5, w0, w6
  444554:	mov	w6, #0x7                   	// #7
  444558:	add	w5, w5, #0x17e
  44455c:	sdiv	w1, w5, w6
  444560:	msub	w5, w1, w6, w5
  444564:	sub	w0, w0, w5
  444568:	adds	w0, w0, #0x3
  44456c:	csel	w2, w2, w0, mi  // mi = first
  444570:	cmp	w0, #0x0
  444574:	cset	w5, ge  // ge = tcont
  444578:	b	4444c8 <_obstack_memory_used@@Base+0xc848>
  44457c:	mov	w1, #0x0                   	// #0
  444580:	b	444548 <_obstack_memory_used@@Base+0xc8c8>
  444584:	mov	w1, #0x1                   	// #1
  444588:	b	444548 <_obstack_memory_used@@Base+0xc8c8>
  44458c:	mov	w0, #0xfffff894            	// #-1900
  444590:	sub	w0, w0, w5
  444594:	cmp	w7, w0
  444598:	add	w1, w7, #0x76c
  44459c:	cset	w6, lt  // lt = tstop
  4445a0:	add	w1, w1, w5
  4445a4:	mov	w0, #0x0                   	// #0
  4445a8:	mov	w2, #0x0                   	// #0
  4445ac:	mov	w5, #0x4                   	// #4
  4445b0:	b	443ee8 <_obstack_memory_used@@Base+0xc268>
  4445b4:	mov	w1, #0x7                   	// #7
  4445b8:	sdiv	w1, w2, w1
  4445bc:	add	w1, w1, #0x1
  4445c0:	b	443eb0 <_obstack_memory_used@@Base+0xc230>
  4445c4:	cmp	w3, #0x45
  4445c8:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  4445cc:	ldr	w0, [x20, #24]
  4445d0:	mov	w2, #0x7                   	// #7
  4445d4:	add	w0, w0, #0x6
  4445d8:	sdiv	w1, w0, w2
  4445dc:	msub	w0, w1, w2, w0
  4445e0:	ldr	w1, [x20, #28]
  4445e4:	sub	w1, w1, w0
  4445e8:	add	w1, w1, w2
  4445ec:	sdiv	w1, w1, w2
  4445f0:	b	443eb0 <_obstack_memory_used@@Base+0xc230>
  4445f4:	cmp	w3, #0x45
  4445f8:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  4445fc:	ldr	w1, [x20, #24]
  444600:	b	444404 <_obstack_memory_used@@Base+0xc784>
  444604:	cmp	w3, #0x45
  444608:	b.eq	443e10 <_obstack_memory_used@@Base+0xc190>  // b.none
  44460c:	cmp	w3, #0x4f
  444610:	b.eq	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.none
  444614:	ldr	w1, [x20, #20]
  444618:	cmn	w1, #0x76c
  44461c:	add	w1, w1, #0x76c
  444620:	cset	w6, lt  // lt = tstop
  444624:	b	4445a4 <_obstack_memory_used@@Base+0xc924>
  444628:	cmp	w3, #0x45
  44462c:	b.eq	443e18 <_obstack_memory_used@@Base+0xc198>  // b.none
  444630:	ldr	w0, [x20, #20]
  444634:	mov	w2, #0x64                  	// #100
  444638:	sdiv	w1, w0, w2
  44463c:	msub	w1, w1, w2, w0
  444640:	tbz	w1, #31, 443eb0 <_obstack_memory_used@@Base+0xc230>
  444644:	cmn	w0, #0x76c
  444648:	b	444500 <_obstack_memory_used@@Base+0xc880>
  44464c:	add	w1, w1, #0x64
  444650:	b	443eb0 <_obstack_memory_used@@Base+0xc230>
  444654:	ldr	x0, [sp, #104]
  444658:	cmp	w25, #0x0
  44465c:	csel	w22, w22, wzr, eq  // eq = none
  444660:	bl	404280 <strlen@plt>
  444664:	mov	x28, x0
  444668:	cmp	w26, #0x0
  44466c:	csel	w1, w26, wzr, ge  // ge = tcont
  444670:	cmp	x28, w1, sxtw
  444674:	sxtw	x0, w1
  444678:	csel	x1, x28, x0, cs  // cs = hs, nlast
  44467c:	str	x1, [sp, #112]
  444680:	ldr	x1, [sp, #96]
  444684:	ldr	x2, [sp, #112]
  444688:	sub	x1, x1, x19
  44468c:	cmp	x1, x2
  444690:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  444694:	cbz	x23, 443ddc <_obstack_memory_used@@Base+0xc15c>
  444698:	cmp	x28, x0
  44469c:	b.cs	4446d4 <_obstack_memory_used@@Base+0xca54>  // b.hs, b.nlast
  4446a0:	sxtw	x2, w26
  4446a4:	cmp	w27, #0x30
  4446a8:	sub	x2, x2, x28
  4446ac:	add	x24, x23, x2
  4446b0:	b.ne	4446cc <_obstack_memory_used@@Base+0xca4c>  // b.any
  4446b4:	mov	w1, w27
  4446b8:	mov	x0, x23
  4446bc:	bl	404700 <memset@plt>
  4446c0:	mov	x2, x28
  4446c4:	ldr	x1, [sp, #104]
  4446c8:	b	443dcc <_obstack_memory_used@@Base+0xc14c>
  4446cc:	mov	w1, #0x20                  	// #32
  4446d0:	b	4446b8 <_obstack_memory_used@@Base+0xca38>
  4446d4:	mov	x24, x23
  4446d8:	b	4446c0 <_obstack_memory_used@@Base+0xca40>
  4446dc:	add	x2, x2, #0x1
  4446e0:	ldrb	w0, [x21, x2]
  4446e4:	add	x1, x21, x2
  4446e8:	cmp	w0, #0x3a
  4446ec:	b.eq	4446dc <_obstack_memory_used@@Base+0xca5c>  // b.none
  4446f0:	cmp	w0, #0x7a
  4446f4:	b.ne	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.any
  4446f8:	mov	x21, x1
  4446fc:	ldr	w0, [x20, #32]
  444700:	tbnz	w0, #31, 443a50 <_obstack_memory_used@@Base+0xbdd0>
  444704:	ldr	x11, [x20, #40]
  444708:	cmp	w11, #0x0
  44470c:	b.lt	444778 <_obstack_memory_used@@Base+0xcaf8>  // b.tstop
  444710:	b.ne	444780 <_obstack_memory_used@@Base+0xcb00>  // b.any
  444714:	ldr	x0, [sp, #104]
  444718:	ldrb	w0, [x0]
  44471c:	cmp	w0, #0x2d
  444720:	cset	w6, eq  // eq = none
  444724:	mov	w7, #0x3c                  	// #60
  444728:	mov	w1, #0xe10                 	// #3600
  44472c:	cmp	x2, #0x3
  444730:	sdiv	w5, w11, w7
  444734:	sdiv	w1, w11, w1
  444738:	sdiv	w0, w5, w7
  44473c:	msub	w0, w0, w7, w5
  444740:	msub	w5, w5, w7, w11
  444744:	b.hi	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.pmore
  444748:	cmp	w2, #0x3
  44474c:	b.hi	4447f0 <_obstack_memory_used@@Base+0xcb70>  // b.pmore
  444750:	adrp	x7, 450000 <_obstack_memory_used@@Base+0x18380>
  444754:	add	x7, x7, #0xe54
  444758:	ldrb	w2, [x7, w2, uxtw]
  44475c:	adr	x7, 444768 <_obstack_memory_used@@Base+0xcae8>
  444760:	add	x2, x7, w2, sxtb #2
  444764:	br	x2
  444768:	mov	x2, #0x1                   	// #1
  44476c:	b	4446e0 <_obstack_memory_used@@Base+0xca60>
  444770:	mov	x2, #0x0                   	// #0
  444774:	b	4446fc <_obstack_memory_used@@Base+0xca7c>
  444778:	mov	w6, #0x1                   	// #1
  44477c:	b	444724 <_obstack_memory_used@@Base+0xcaa4>
  444780:	mov	w6, #0x0                   	// #0
  444784:	b	444724 <_obstack_memory_used@@Base+0xcaa4>
  444788:	mov	w2, #0x64                  	// #100
  44478c:	mov	w5, #0x5                   	// #5
  444790:	madd	w1, w1, w2, w0
  444794:	mov	w0, #0x0                   	// #0
  444798:	mov	w2, #0x1                   	// #1
  44479c:	b	443ee8 <_obstack_memory_used@@Base+0xc268>
  4447a0:	mov	w2, #0x64                  	// #100
  4447a4:	mov	w5, #0x6                   	// #6
  4447a8:	madd	w1, w1, w2, w0
  4447ac:	mov	w0, #0x4                   	// #4
  4447b0:	mov	w2, #0x1                   	// #1
  4447b4:	b	443ee8 <_obstack_memory_used@@Base+0xc268>
  4447b8:	mov	w2, #0x64                  	// #100
  4447bc:	mul	w2, w0, w2
  4447c0:	mov	w0, #0x2710                	// #10000
  4447c4:	madd	w1, w1, w0, w2
  4447c8:	mov	w0, #0x14                  	// #20
  4447cc:	mov	w2, #0x1                   	// #1
  4447d0:	add	w1, w1, w5
  4447d4:	mov	w5, #0x9                   	// #9
  4447d8:	b	443ee8 <_obstack_memory_used@@Base+0xc268>
  4447dc:	cbnz	w5, 4447b8 <_obstack_memory_used@@Base+0xcb38>
  4447e0:	cbnz	w0, 4447a0 <_obstack_memory_used@@Base+0xcb20>
  4447e4:	mov	w2, #0x1                   	// #1
  4447e8:	b	4441dc <_obstack_memory_used@@Base+0xc55c>
  4447ec:	sub	x21, x21, #0x1
  4447f0:	mov	x0, x21
  4447f4:	add	w4, w21, #0x1
  4447f8:	sub	w1, w4, w0
  4447fc:	mov	x25, x0
  444800:	ldrb	w2, [x0], #-1
  444804:	cmp	w2, #0x25
  444808:	b.ne	4447f8 <_obstack_memory_used@@Base+0xcb78>  // b.any
  44480c:	cmp	w26, #0x0
  444810:	sxtw	x28, w1
  444814:	csel	w0, w26, wzr, ge  // ge = tcont
  444818:	sxtw	x0, w0
  44481c:	cmp	x0, w1, sxtw
  444820:	csel	x1, x28, x0, ls  // ls = plast
  444824:	str	x1, [sp, #112]
  444828:	ldr	x1, [sp, #96]
  44482c:	ldr	x2, [sp, #112]
  444830:	sub	x1, x1, x19
  444834:	cmp	x1, x2
  444838:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  44483c:	cbz	x23, 443ddc <_obstack_memory_used@@Base+0xc15c>
  444840:	cmp	x28, x0
  444844:	b.cs	444888 <_obstack_memory_used@@Base+0xcc08>  // b.hs, b.nlast
  444848:	sxtw	x2, w26
  44484c:	cmp	w27, #0x30
  444850:	sub	x2, x2, x28
  444854:	add	x24, x23, x2
  444858:	b.ne	444880 <_obstack_memory_used@@Base+0xcc00>  // b.any
  44485c:	mov	w1, w27
  444860:	mov	x0, x23
  444864:	bl	404700 <memset@plt>
  444868:	mov	x2, x28
  44486c:	mov	x1, x25
  444870:	mov	x0, x24
  444874:	cbz	w22, 444890 <_obstack_memory_used@@Base+0xcc10>
  444878:	bl	443914 <_obstack_memory_used@@Base+0xbc94>
  44487c:	b	443dd8 <_obstack_memory_used@@Base+0xc158>
  444880:	mov	w1, #0x20                  	// #32
  444884:	b	444860 <_obstack_memory_used@@Base+0xcbe0>
  444888:	mov	x24, x23
  44488c:	b	444868 <_obstack_memory_used@@Base+0xcbe8>
  444890:	bl	404200 <memcpy@plt>
  444894:	b	443dd8 <_obstack_memory_used@@Base+0xc158>
  444898:	mov	x19, #0x0                   	// #0
  44489c:	mov	x0, x19
  4448a0:	ldp	x29, x30, [sp]
  4448a4:	ldp	x19, x20, [sp, #16]
  4448a8:	ldp	x21, x22, [sp, #32]
  4448ac:	ldp	x23, x24, [sp, #48]
  4448b0:	ldp	x25, x26, [sp, #64]
  4448b4:	ldp	x27, x28, [sp, #80]
  4448b8:	add	sp, sp, #0x4d0
  4448bc:	ret
  4448c0:	mov	w25, #0x2d                  	// #45
  4448c4:	cmp	w27, #0x2d
  4448c8:	b.ne	443f64 <_obstack_memory_used@@Base+0xc2e4>  // b.any
  4448cc:	cmp	w26, #0x0
  4448d0:	csel	w1, w26, wzr, ge  // ge = tcont
  4448d4:	sxtw	x1, w1
  4448d8:	cmp	x1, #0x0
  4448dc:	csinc	x3, x1, xzr, ne  // ne = any
  4448e0:	cmp	x3, x0
  4448e4:	b.cs	444898 <_obstack_memory_used@@Base+0xcc18>  // b.hs, b.nlast
  4448e8:	cbz	x23, 444924 <_obstack_memory_used@@Base+0xcca4>
  4448ec:	ldr	w0, [sp, #112]
  4448f0:	cmp	w0, #0x0
  4448f4:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  4448f8:	b.ls	444920 <_obstack_memory_used@@Base+0xcca0>  // b.plast
  4448fc:	sxtw	x28, w26
  444900:	mov	x0, x23
  444904:	sub	x28, x28, #0x1
  444908:	mov	w1, #0x20                  	// #32
  44490c:	mov	x2, x28
  444910:	str	x3, [sp, #144]
  444914:	bl	404700 <memset@plt>
  444918:	add	x23, x23, x28
  44491c:	ldr	x3, [sp, #144]
  444920:	strb	w25, [x23], #1
  444924:	add	x19, x19, x3
  444928:	ldr	x0, [sp, #160]
  44492c:	cmp	w26, #0x0
  444930:	csel	w1, w26, wzr, ge  // ge = tcont
  444934:	sub	x28, x0, x24
  444938:	cmp	x28, w1, sxtw
  44493c:	sxtw	x0, w1
  444940:	csel	x1, x28, x0, cs  // cs = hs, nlast
  444944:	str	x1, [sp, #144]
  444948:	ldr	x1, [sp, #96]
  44494c:	ldr	x2, [sp, #144]
  444950:	sub	x1, x1, x19
  444954:	cmp	x1, x2
  444958:	b.ls	444898 <_obstack_memory_used@@Base+0xcc18>  // b.plast
  44495c:	cbz	x23, 443c04 <_obstack_memory_used@@Base+0xbf84>
  444960:	ldr	w1, [sp, #112]
  444964:	cmp	w1, #0x0
  444968:	ccmp	x28, x0, #0x2, eq  // eq = none
  44496c:	b.cs	44415c <_obstack_memory_used@@Base+0xc4dc>  // b.hs, b.nlast
  444970:	sxtw	x2, w26
  444974:	cmp	w27, #0x30
  444978:	sub	x2, x2, x28
  44497c:	add	x25, x23, x2
  444980:	b.ne	444154 <_obstack_memory_used@@Base+0xc4d4>  // b.any
  444984:	mov	w1, w27
  444988:	mov	x0, x23
  44498c:	bl	404700 <memset@plt>
  444990:	mov	x2, x28
  444994:	mov	x1, x24
  444998:	mov	x0, x25
  44499c:	cbz	w22, 444164 <_obstack_memory_used@@Base+0xc4e4>
  4449a0:	bl	443914 <_obstack_memory_used@@Base+0xbc94>
  4449a4:	add	x23, x25, x28
  4449a8:	b	443c04 <_obstack_memory_used@@Base+0xbf84>
  4449ac:	mov	w25, #0x2b                  	// #43
  4449b0:	b	4448c4 <_obstack_memory_used@@Base+0xcc44>
  4449b4:	stp	x29, x30, [sp, #-32]!
  4449b8:	mov	w7, w5
  4449bc:	mov	x6, x4
  4449c0:	mov	x29, sp
  4449c4:	add	x5, sp, #0x1f
  4449c8:	mov	w4, #0x0                   	// #0
  4449cc:	strb	wzr, [sp, #31]
  4449d0:	bl	443968 <_obstack_memory_used@@Base+0xbce8>
  4449d4:	ldp	x29, x30, [sp], #32
  4449d8:	ret
  4449dc:	stp	x29, x30, [sp, #-64]!
  4449e0:	mov	x29, sp
  4449e4:	str	x3, [sp, #56]
  4449e8:	tbz	w2, #6, 444a1c <_obstack_memory_used@@Base+0xcd9c>
  4449ec:	add	x3, sp, #0x40
  4449f0:	stp	x3, x3, [sp, #16]
  4449f4:	add	x3, sp, #0x30
  4449f8:	str	x3, [sp, #32]
  4449fc:	mov	w3, #0xfffffff8            	// #-8
  444a00:	str	w3, [sp, #40]
  444a04:	ldr	w3, [sp, #56]
  444a08:	str	wzr, [sp, #44]
  444a0c:	bl	404df0 <openat@plt>
  444a10:	bl	444a24 <_obstack_memory_used@@Base+0xcda4>
  444a14:	ldp	x29, x30, [sp], #64
  444a18:	ret
  444a1c:	mov	w3, #0x0                   	// #0
  444a20:	b	444a0c <_obstack_memory_used@@Base+0xcd8c>
  444a24:	stp	x29, x30, [sp, #-48]!
  444a28:	cmp	w0, #0x2
  444a2c:	mov	x29, sp
  444a30:	stp	x19, x20, [sp, #16]
  444a34:	mov	w19, w0
  444a38:	stp	x21, x22, [sp, #32]
  444a3c:	b.hi	444a64 <_obstack_memory_used@@Base+0xcde4>  // b.pmore
  444a40:	bl	445738 <_obstack_memory_used@@Base+0xdab8>
  444a44:	mov	w21, w0
  444a48:	bl	404e10 <__errno_location@plt>
  444a4c:	mov	x20, x0
  444a50:	mov	w0, w19
  444a54:	mov	w19, w21
  444a58:	ldr	w22, [x20]
  444a5c:	bl	4048c0 <close@plt>
  444a60:	str	w22, [x20]
  444a64:	mov	w0, w19
  444a68:	ldp	x19, x20, [sp, #16]
  444a6c:	ldp	x21, x22, [sp, #32]
  444a70:	ldp	x29, x30, [sp], #48
  444a74:	ret
  444a78:	stp	x29, x30, [sp, #-112]!
  444a7c:	mov	x29, sp
  444a80:	stp	x19, x20, [sp, #16]
  444a84:	mov	x19, x1
  444a88:	mov	x20, #0x0                   	// #0
  444a8c:	stp	x21, x22, [sp, #32]
  444a90:	mov	x21, x0
  444a94:	stp	x23, x24, [sp, #48]
  444a98:	mov	x23, x0
  444a9c:	ldr	w24, [x1, #24]
  444aa0:	ldr	x22, [x1]
  444aa4:	stp	x25, x26, [sp, #64]
  444aa8:	mov	x26, #0xffffffffffffffff    	// #-1
  444aac:	ldp	x0, x1, [x1]
  444ab0:	stp	x0, x1, [sp, #80]
  444ab4:	ldr	x25, [sp, #88]
  444ab8:	ldp	x0, x1, [x19, #16]
  444abc:	stp	x0, x1, [sp, #96]
  444ac0:	cbnz	x23, 444af8 <_obstack_memory_used@@Base+0xce78>
  444ac4:	mov	x0, #0x7fffffff            	// #2147483647
  444ac8:	cmp	x20, x0
  444acc:	b.ls	444b40 <_obstack_memory_used@@Base+0xcec0>  // b.plast
  444ad0:	bl	404e10 <__errno_location@plt>
  444ad4:	mov	w1, #0x4b                  	// #75
  444ad8:	str	w1, [x0]
  444adc:	mov	x0, x23
  444ae0:	ldp	x19, x20, [sp, #16]
  444ae4:	ldp	x21, x22, [sp, #32]
  444ae8:	ldp	x23, x24, [sp, #48]
  444aec:	ldp	x25, x26, [sp, #64]
  444af0:	ldp	x29, x30, [sp], #112
  444af4:	ret
  444af8:	ldr	w1, [sp, #104]
  444afc:	ldr	x0, [sp, #80]
  444b00:	tbnz	w1, #31, 444b28 <_obstack_memory_used@@Base+0xcea8>
  444b04:	add	x1, x0, #0xf
  444b08:	and	x1, x1, #0xfffffffffffffff8
  444b0c:	str	x1, [sp, #80]
  444b10:	ldr	x0, [x0]
  444b14:	sub	x23, x23, #0x1
  444b18:	bl	404280 <strlen@plt>
  444b1c:	adds	x20, x0, x20
  444b20:	csel	x20, x20, x26, cc  // cc = lo, ul, last
  444b24:	b	444ac0 <_obstack_memory_used@@Base+0xce40>
  444b28:	add	w2, w1, #0x8
  444b2c:	str	w2, [sp, #104]
  444b30:	cmp	w2, #0x0
  444b34:	b.gt	444b04 <_obstack_memory_used@@Base+0xce84>
  444b38:	add	x0, x25, w1, sxtw
  444b3c:	b	444b10 <_obstack_memory_used@@Base+0xce90>
  444b40:	add	x0, x20, #0x1
  444b44:	bl	436d44 <argp_usage@@Base+0x9864>
  444b48:	mov	x23, x0
  444b4c:	mov	x25, x0
  444b50:	cbnz	x21, 444b5c <_obstack_memory_used@@Base+0xcedc>
  444b54:	strb	wzr, [x25]
  444b58:	b	444adc <_obstack_memory_used@@Base+0xce5c>
  444b5c:	tbnz	w24, #31, 444ba0 <_obstack_memory_used@@Base+0xcf20>
  444b60:	add	x20, x22, #0xf
  444b64:	mov	w26, w24
  444b68:	and	x20, x20, #0xfffffffffffffff8
  444b6c:	ldr	x24, [x22]
  444b70:	sub	x21, x21, #0x1
  444b74:	mov	x0, x24
  444b78:	bl	404280 <strlen@plt>
  444b7c:	mov	x22, x0
  444b80:	mov	x2, x0
  444b84:	mov	x1, x24
  444b88:	mov	x0, x25
  444b8c:	mov	w24, w26
  444b90:	add	x25, x25, x22
  444b94:	bl	404200 <memcpy@plt>
  444b98:	mov	x22, x20
  444b9c:	b	444b50 <_obstack_memory_used@@Base+0xced0>
  444ba0:	add	w26, w24, #0x8
  444ba4:	cmp	w26, #0x0
  444ba8:	b.le	444bb8 <_obstack_memory_used@@Base+0xcf38>
  444bac:	add	x20, x22, #0xf
  444bb0:	and	x20, x20, #0xfffffffffffffff8
  444bb4:	b	444b6c <_obstack_memory_used@@Base+0xceec>
  444bb8:	ldr	x0, [x19, #8]
  444bbc:	mov	x20, x22
  444bc0:	add	x22, x0, w24, sxtw
  444bc4:	b	444b6c <_obstack_memory_used@@Base+0xceec>
  444bc8:	stp	x29, x30, [sp, #-96]!
  444bcc:	mov	x2, x0
  444bd0:	mov	x3, x0
  444bd4:	mov	x0, #0x0                   	// #0
  444bd8:	mov	x29, sp
  444bdc:	ldrb	w4, [x3]
  444be0:	cbnz	w4, 444c04 <_obstack_memory_used@@Base+0xcf84>
  444be4:	ldp	x2, x3, [x1]
  444be8:	stp	x2, x3, [sp, #16]
  444bec:	ldp	x2, x3, [x1, #16]
  444bf0:	add	x1, sp, #0x10
  444bf4:	stp	x2, x3, [sp, #32]
  444bf8:	bl	444a78 <_obstack_memory_used@@Base+0xcdf8>
  444bfc:	ldp	x29, x30, [sp], #96
  444c00:	ret
  444c04:	cmp	w4, #0x25
  444c08:	b.ne	444c24 <_obstack_memory_used@@Base+0xcfa4>  // b.any
  444c0c:	ldrb	w4, [x3, #1]
  444c10:	cmp	w4, #0x73
  444c14:	b.ne	444c24 <_obstack_memory_used@@Base+0xcfa4>  // b.any
  444c18:	add	x3, x3, #0x2
  444c1c:	add	x0, x0, #0x1
  444c20:	b	444bdc <_obstack_memory_used@@Base+0xcf5c>
  444c24:	ldp	x4, x5, [x1]
  444c28:	add	x3, sp, #0x10
  444c2c:	ldp	x0, x1, [x1, #16]
  444c30:	stp	x4, x5, [sp, #16]
  444c34:	stp	x0, x1, [sp, #32]
  444c38:	stp	x4, x5, [sp, #64]
  444c3c:	stp	x0, x1, [sp, #80]
  444c40:	add	x0, sp, #0x38
  444c44:	mov	w1, #0x1                   	// #1
  444c48:	bl	404640 <__vasprintf_chk@plt>
  444c4c:	tbz	w0, #31, 444c68 <_obstack_memory_used@@Base+0xcfe8>
  444c50:	bl	404e10 <__errno_location@plt>
  444c54:	ldr	w1, [x0]
  444c58:	mov	x0, #0x0                   	// #0
  444c5c:	cmp	w1, #0xc
  444c60:	b.ne	444bfc <_obstack_memory_used@@Base+0xcf7c>  // b.any
  444c64:	bl	40d4bc <wcrtomb@plt+0x856c>
  444c68:	ldr	x0, [sp, #56]
  444c6c:	b	444bfc <_obstack_memory_used@@Base+0xcf7c>
  444c70:	ldp	w10, w2, [x1, #44]
  444c74:	ldr	w8, [x1]
  444c78:	mov	w6, w10
  444c7c:	add	x11, x0, w2, sxtw #3
  444c80:	mov	w4, w8
  444c84:	cmp	w4, w2
  444c88:	ccmp	w6, w2, #0x0, gt
  444c8c:	b.lt	444ca0 <_obstack_memory_used@@Base+0xd020>  // b.tstop
  444c90:	sub	w2, w8, w2
  444c94:	add	w2, w2, w10
  444c98:	stp	w2, w8, [x1, #44]
  444c9c:	ret
  444ca0:	sxtw	x3, w6
  444ca4:	sub	w5, w4, w2
  444ca8:	sub	w7, w2, w6
  444cac:	cmp	w5, w7
  444cb0:	add	x3, x0, x3, lsl #3
  444cb4:	b.le	444cec <_obstack_memory_used@@Base+0xd06c>
  444cb8:	sxtw	x5, w4
  444cbc:	sub	w4, w4, w7
  444cc0:	sub	x5, x5, w7, sxtw
  444cc4:	mov	w9, #0x0                   	// #0
  444cc8:	add	x5, x0, x5, lsl #3
  444ccc:	ldr	x13, [x5]
  444cd0:	add	w9, w9, #0x1
  444cd4:	ldr	x12, [x3]
  444cd8:	str	x13, [x3], #8
  444cdc:	str	x12, [x5], #8
  444ce0:	cmp	w7, w9
  444ce4:	b.ne	444ccc <_obstack_memory_used@@Base+0xd04c>  // b.any
  444ce8:	b	444c84 <_obstack_memory_used@@Base+0xd004>
  444cec:	mov	x9, x11
  444cf0:	mov	w7, #0x0                   	// #0
  444cf4:	ldr	x13, [x9]
  444cf8:	add	w7, w7, #0x1
  444cfc:	ldr	x12, [x3]
  444d00:	str	x13, [x3], #8
  444d04:	str	x12, [x9], #8
  444d08:	cmp	w5, w7
  444d0c:	b.ne	444cf4 <_obstack_memory_used@@Base+0xd074>  // b.any
  444d10:	add	w6, w6, w5
  444d14:	b	444c84 <_obstack_memory_used@@Base+0xd004>
  444d18:	stp	x29, x30, [sp, #-176]!
  444d1c:	mov	x29, sp
  444d20:	stp	x25, x26, [sp, #64]
  444d24:	ldr	x25, [x6, #32]
  444d28:	stp	x23, x24, [sp, #48]
  444d2c:	ldr	x23, [sp, #176]
  444d30:	stp	x19, x20, [sp, #16]
  444d34:	mov	x20, x1
  444d38:	mov	x19, x6
  444d3c:	stp	x21, x22, [sp, #32]
  444d40:	mov	w22, w7
  444d44:	mov	x21, x25
  444d48:	stp	x27, x28, [sp, #80]
  444d4c:	stp	x3, x2, [sp, #128]
  444d50:	str	x4, [sp, #144]
  444d54:	str	w5, [sp, #156]
  444d58:	str	w0, [sp, #168]
  444d5c:	ldrb	w0, [x21]
  444d60:	cmp	w0, #0x3d
  444d64:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  444d68:	b.ne	444e4c <_obstack_memory_used@@Base+0xd1cc>  // b.any
  444d6c:	ldr	x28, [sp, #128]
  444d70:	sub	x0, x21, x25
  444d74:	mov	w24, #0x0                   	// #0
  444d78:	str	x0, [sp, #120]
  444d7c:	ldr	x26, [x28]
  444d80:	cbnz	x26, 444e54 <_obstack_memory_used@@Base+0xd1d4>
  444d84:	ldr	x27, [sp, #128]
  444d88:	mov	w0, #0xffffffff            	// #-1
  444d8c:	mov	x28, #0x0                   	// #0
  444d90:	mov	w4, #0x0                   	// #0
  444d94:	str	xzr, [sp, #104]
  444d98:	str	w0, [sp, #116]
  444d9c:	sxtw	x0, w24
  444da0:	str	wzr, [sp, #152]
  444da4:	str	x0, [sp, #160]
  444da8:	ldr	x0, [x27]
  444dac:	cbnz	x0, 444e88 <_obstack_memory_used@@Base+0xd208>
  444db0:	cmp	x26, #0x0
  444db4:	ccmp	w4, #0x0, #0x0, eq  // eq = none
  444db8:	b.eq	444fdc <_obstack_memory_used@@Base+0xd35c>  // b.none
  444dbc:	cbz	w22, 444df8 <_obstack_memory_used@@Base+0xd178>
  444dc0:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  444dc4:	ldr	x22, [x21, #1160]
  444dc8:	cbz	w4, 444f40 <_obstack_memory_used@@Base+0xd2c0>
  444dcc:	mov	w2, #0x5                   	// #5
  444dd0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  444dd4:	add	x1, x1, #0xe58
  444dd8:	bl	404d00 <dcgettext@plt>
  444ddc:	ldr	x3, [x20]
  444de0:	mov	x2, x0
  444de4:	ldr	x5, [x19, #32]
  444de8:	mov	x4, x23
  444dec:	mov	x0, x22
  444df0:	mov	w1, #0x1                   	// #1
  444df4:	bl	404a20 <__fprintf_chk@plt>
  444df8:	ldr	w0, [sp, #152]
  444dfc:	cbz	w0, 444e08 <_obstack_memory_used@@Base+0xd188>
  444e00:	mov	x0, x26
  444e04:	bl	404ae0 <free@plt>
  444e08:	ldr	x20, [x19, #32]
  444e0c:	mov	x0, x20
  444e10:	bl	404280 <strlen@plt>
  444e14:	add	x20, x20, x0
  444e18:	str	x20, [x19, #32]
  444e1c:	ldr	w0, [x19]
  444e20:	str	wzr, [x19, #8]
  444e24:	add	w0, w0, #0x1
  444e28:	str	w0, [x19]
  444e2c:	mov	w0, #0x3f                  	// #63
  444e30:	ldp	x19, x20, [sp, #16]
  444e34:	ldp	x21, x22, [sp, #32]
  444e38:	ldp	x23, x24, [sp, #48]
  444e3c:	ldp	x25, x26, [sp, #64]
  444e40:	ldp	x27, x28, [sp, #80]
  444e44:	ldp	x29, x30, [sp], #176
  444e48:	ret
  444e4c:	add	x21, x21, #0x1
  444e50:	b	444d5c <_obstack_memory_used@@Base+0xd0dc>
  444e54:	ldr	x2, [sp, #120]
  444e58:	mov	x1, x25
  444e5c:	mov	x0, x26
  444e60:	bl	4046a0 <strncmp@plt>
  444e64:	cbnz	w0, 444e7c <_obstack_memory_used@@Base+0xd1fc>
  444e68:	mov	x0, x26
  444e6c:	bl	404280 <strlen@plt>
  444e70:	ldr	x1, [sp, #120]
  444e74:	cmp	x0, x1
  444e78:	b.eq	445050 <_obstack_memory_used@@Base+0xd3d0>  // b.none
  444e7c:	add	x28, x28, #0x20
  444e80:	add	w24, w24, #0x1
  444e84:	b	444d7c <_obstack_memory_used@@Base+0xd0fc>
  444e88:	ldr	x2, [sp, #120]
  444e8c:	mov	x1, x25
  444e90:	str	w4, [sp, #172]
  444e94:	bl	4046a0 <strncmp@plt>
  444e98:	ldr	w4, [sp, #172]
  444e9c:	cbnz	w0, 444f1c <_obstack_memory_used@@Base+0xd29c>
  444ea0:	cbz	x28, 444f30 <_obstack_memory_used@@Base+0xd2b0>
  444ea4:	ldr	w0, [sp, #156]
  444ea8:	cbnz	w0, 444edc <_obstack_memory_used@@Base+0xd25c>
  444eac:	ldr	w0, [x27, #8]
  444eb0:	ldr	w1, [x28, #8]
  444eb4:	cmp	w1, w0
  444eb8:	b.ne	444edc <_obstack_memory_used@@Base+0xd25c>  // b.any
  444ebc:	ldr	x0, [x27, #16]
  444ec0:	ldr	x1, [x28, #16]
  444ec4:	cmp	x1, x0
  444ec8:	b.ne	444edc <_obstack_memory_used@@Base+0xd25c>  // b.any
  444ecc:	ldr	w0, [x27, #24]
  444ed0:	ldr	w1, [x28, #24]
  444ed4:	cmp	w1, w0
  444ed8:	b.eq	444f1c <_obstack_memory_used@@Base+0xd29c>  // b.none
  444edc:	cbnz	w4, 444f1c <_obstack_memory_used@@Base+0xd29c>
  444ee0:	cbz	w22, 444f08 <_obstack_memory_used@@Base+0xd288>
  444ee4:	cbnz	x26, 444f10 <_obstack_memory_used@@Base+0xd290>
  444ee8:	ldr	x0, [sp, #160]
  444eec:	str	w4, [sp, #172]
  444ef0:	bl	4045f0 <malloc@plt>
  444ef4:	mov	x26, x0
  444ef8:	ldr	w4, [sp, #172]
  444efc:	cbnz	x0, 44517c <_obstack_memory_used@@Base+0xd4fc>
  444f00:	mov	w4, #0x1                   	// #1
  444f04:	b	444f1c <_obstack_memory_used@@Base+0xd29c>
  444f08:	mov	w4, #0x1                   	// #1
  444f0c:	cbz	x26, 444f1c <_obstack_memory_used@@Base+0xd29c>
  444f10:	ldr	x0, [sp, #104]
  444f14:	mov	w1, #0x1                   	// #1
  444f18:	strb	w1, [x26, x0]
  444f1c:	ldr	x0, [sp, #104]
  444f20:	add	x27, x27, #0x20
  444f24:	add	x0, x0, #0x1
  444f28:	str	x0, [sp, #104]
  444f2c:	b	444da8 <_obstack_memory_used@@Base+0xd128>
  444f30:	ldr	w0, [sp, #104]
  444f34:	mov	x28, x27
  444f38:	str	w0, [sp, #116]
  444f3c:	b	444f1c <_obstack_memory_used@@Base+0xd29c>
  444f40:	mov	x0, x22
  444f44:	bl	404320 <flockfile@plt>
  444f48:	ldr	x22, [x21, #1160]
  444f4c:	mov	w2, #0x5                   	// #5
  444f50:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  444f54:	mov	x0, #0x0                   	// #0
  444f58:	add	x1, x1, #0xe78
  444f5c:	bl	404d00 <dcgettext@plt>
  444f60:	ldr	x3, [x20]
  444f64:	mov	x2, x0
  444f68:	ldr	x5, [x19, #32]
  444f6c:	mov	x0, x22
  444f70:	adrp	x22, 450000 <_obstack_memory_used@@Base+0x18380>
  444f74:	add	x22, x22, #0xea7
  444f78:	mov	x20, #0x0                   	// #0
  444f7c:	mov	x4, x23
  444f80:	mov	w1, #0x1                   	// #1
  444f84:	bl	404a20 <__fprintf_chk@plt>
  444f88:	ldr	x0, [x21, #1160]
  444f8c:	add	x25, x21, #0x488
  444f90:	cmp	w24, w20
  444f94:	b.gt	444fb0 <_obstack_memory_used@@Base+0xd330>
  444f98:	mov	x1, x0
  444f9c:	mov	w0, #0xa                   	// #10
  444fa0:	bl	404420 <fputc@plt>
  444fa4:	ldr	x0, [x25]
  444fa8:	bl	404620 <funlockfile@plt>
  444fac:	b	444df8 <_obstack_memory_used@@Base+0xd178>
  444fb0:	ldrb	w1, [x26, x20]
  444fb4:	cbz	w1, 444fd4 <_obstack_memory_used@@Base+0xd354>
  444fb8:	ldr	x2, [sp, #128]
  444fbc:	lsl	x1, x20, #5
  444fc0:	mov	x3, x23
  444fc4:	ldr	x4, [x2, x1]
  444fc8:	mov	x2, x22
  444fcc:	mov	w1, #0x1                   	// #1
  444fd0:	bl	404a20 <__fprintf_chk@plt>
  444fd4:	add	x20, x20, #0x1
  444fd8:	b	444f88 <_obstack_memory_used@@Base+0xd308>
  444fdc:	cbnz	x28, 445054 <_obstack_memory_used@@Base+0xd3d4>
  444fe0:	ldr	w0, [sp, #156]
  444fe4:	cbz	w0, 44500c <_obstack_memory_used@@Base+0xd38c>
  444fe8:	ldrsw	x0, [x19]
  444fec:	ldr	x0, [x20, x0, lsl #3]
  444ff0:	ldrb	w0, [x0, #1]
  444ff4:	cmp	w0, #0x2d
  444ff8:	b.eq	44500c <_obstack_memory_used@@Base+0xd38c>  // b.none
  444ffc:	ldrb	w1, [x25]
  445000:	ldr	x0, [sp, #136]
  445004:	bl	404b90 <strchr@plt>
  445008:	cbnz	x0, 445174 <_obstack_memory_used@@Base+0xd4f4>
  44500c:	cbz	w22, 445048 <_obstack_memory_used@@Base+0xd3c8>
  445010:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  445014:	mov	w2, #0x5                   	// #5
  445018:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  44501c:	add	x1, x1, #0xeaf
  445020:	ldr	x21, [x0, #1160]
  445024:	mov	x0, #0x0                   	// #0
  445028:	bl	404d00 <dcgettext@plt>
  44502c:	mov	x2, x0
  445030:	ldr	x3, [x20]
  445034:	mov	x4, x23
  445038:	ldr	x5, [x19, #32]
  44503c:	mov	x0, x21
  445040:	mov	w1, #0x1                   	// #1
  445044:	bl	404a20 <__fprintf_chk@plt>
  445048:	str	xzr, [x19, #32]
  44504c:	b	444e1c <_obstack_memory_used@@Base+0xd19c>
  445050:	str	w24, [sp, #116]
  445054:	ldr	w0, [x19]
  445058:	ldr	w24, [x28, #8]
  44505c:	add	w1, w0, #0x1
  445060:	str	w1, [x19]
  445064:	str	xzr, [x19, #32]
  445068:	ldrb	w2, [x21]
  44506c:	cbz	w2, 4450ec <_obstack_memory_used@@Base+0xd46c>
  445070:	cbz	w24, 4450a4 <_obstack_memory_used@@Base+0xd424>
  445074:	add	x21, x21, #0x1
  445078:	str	x21, [x19, #16]
  44507c:	ldr	x0, [sp, #144]
  445080:	cbz	x0, 44508c <_obstack_memory_used@@Base+0xd40c>
  445084:	ldr	w1, [sp, #116]
  445088:	str	w1, [x0]
  44508c:	ldr	x1, [x28, #16]
  445090:	ldr	w0, [x28, #24]
  445094:	cbz	x1, 444e30 <_obstack_memory_used@@Base+0xd1b0>
  445098:	str	w0, [x1]
  44509c:	mov	w0, #0x0                   	// #0
  4450a0:	b	444e30 <_obstack_memory_used@@Base+0xd1b0>
  4450a4:	cbz	w22, 4450e0 <_obstack_memory_used@@Base+0xd460>
  4450a8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4450ac:	mov	w2, #0x5                   	// #5
  4450b0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4450b4:	add	x1, x1, #0xecf
  4450b8:	ldr	x21, [x0, #1160]
  4450bc:	mov	x0, #0x0                   	// #0
  4450c0:	bl	404d00 <dcgettext@plt>
  4450c4:	mov	x2, x0
  4450c8:	ldr	x3, [x20]
  4450cc:	mov	x4, x23
  4450d0:	ldr	x5, [x28]
  4450d4:	mov	x0, x21
  4450d8:	mov	w1, #0x1                   	// #1
  4450dc:	bl	404a20 <__fprintf_chk@plt>
  4450e0:	ldr	w0, [x28, #24]
  4450e4:	str	w0, [x19, #8]
  4450e8:	b	444e2c <_obstack_memory_used@@Base+0xd1ac>
  4450ec:	cmp	w24, #0x1
  4450f0:	b.ne	44507c <_obstack_memory_used@@Base+0xd3fc>  // b.any
  4450f4:	ldr	w2, [sp, #168]
  4450f8:	cmp	w1, w2
  4450fc:	b.ge	445114 <_obstack_memory_used@@Base+0xd494>  // b.tcont
  445100:	add	w0, w0, #0x2
  445104:	str	w0, [x19]
  445108:	ldr	x0, [x20, w1, sxtw #3]
  44510c:	str	x0, [x19, #16]
  445110:	b	44507c <_obstack_memory_used@@Base+0xd3fc>
  445114:	cbz	w22, 445150 <_obstack_memory_used@@Base+0xd4d0>
  445118:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  44511c:	mov	w2, #0x5                   	// #5
  445120:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  445124:	add	x1, x1, #0xefc
  445128:	ldr	x21, [x0, #1160]
  44512c:	mov	x0, #0x0                   	// #0
  445130:	bl	404d00 <dcgettext@plt>
  445134:	mov	x2, x0
  445138:	ldr	x3, [x20]
  44513c:	mov	x4, x23
  445140:	ldr	x5, [x28]
  445144:	mov	w1, w24
  445148:	mov	x0, x21
  44514c:	bl	404a20 <__fprintf_chk@plt>
  445150:	ldr	w0, [x28, #24]
  445154:	mov	w1, #0x3f                  	// #63
  445158:	str	w0, [x19, #8]
  44515c:	ldr	x0, [sp, #136]
  445160:	ldrb	w0, [x0]
  445164:	cmp	w0, #0x3a
  445168:	mov	w0, #0x3a                  	// #58
  44516c:	csel	w0, w0, w1, eq  // eq = none
  445170:	b	444e30 <_obstack_memory_used@@Base+0xd1b0>
  445174:	mov	w0, #0xffffffff            	// #-1
  445178:	b	444e30 <_obstack_memory_used@@Base+0xd1b0>
  44517c:	ldr	x2, [sp, #160]
  445180:	mov	w1, #0x0                   	// #0
  445184:	str	w4, [sp, #172]
  445188:	bl	404700 <memset@plt>
  44518c:	ldr	w0, [sp, #116]
  445190:	mov	w1, #0x1                   	// #1
  445194:	ldr	w4, [sp, #172]
  445198:	strb	w1, [x26, w0, sxtw]
  44519c:	mov	w0, #0x1                   	// #1
  4451a0:	str	w0, [sp, #152]
  4451a4:	b	444f10 <_obstack_memory_used@@Base+0xd290>
  4451a8:	sub	sp, sp, #0x70
  4451ac:	cmp	w0, #0x0
  4451b0:	stp	x29, x30, [sp, #16]
  4451b4:	add	x29, sp, #0x10
  4451b8:	stp	x19, x20, [sp, #32]
  4451bc:	stp	x21, x22, [sp, #48]
  4451c0:	stp	x23, x24, [sp, #64]
  4451c4:	ldr	w24, [x6, #4]
  4451c8:	stp	x25, x26, [sp, #80]
  4451cc:	stp	x27, x28, [sp, #96]
  4451d0:	b.gt	4451f8 <_obstack_memory_used@@Base+0xd578>
  4451d4:	mov	w0, #0xffffffff            	// #-1
  4451d8:	ldp	x29, x30, [sp, #16]
  4451dc:	ldp	x19, x20, [sp, #32]
  4451e0:	ldp	x21, x22, [sp, #48]
  4451e4:	ldp	x23, x24, [sp, #64]
  4451e8:	ldp	x25, x26, [sp, #80]
  4451ec:	ldp	x27, x28, [sp, #96]
  4451f0:	add	sp, sp, #0x70
  4451f4:	ret
  4451f8:	mov	w23, w0
  4451fc:	ldr	w0, [x6]
  445200:	str	xzr, [x6, #16]
  445204:	mov	x22, x1
  445208:	mov	x21, x2
  44520c:	mov	x25, x3
  445210:	mov	x26, x4
  445214:	mov	w27, w5
  445218:	mov	x19, x6
  44521c:	cbz	w0, 445244 <_obstack_memory_used@@Base+0xd5c4>
  445220:	ldr	w0, [x6, #24]
  445224:	cbz	w0, 44524c <_obstack_memory_used@@Base+0xd5cc>
  445228:	ldrb	w0, [x2]
  44522c:	mov	w1, #0x2b                  	// #43
  445230:	cmp	w0, #0x2d
  445234:	ccmp	w0, w1, #0x4, ne  // ne = any
  445238:	cset	x0, eq  // eq = none
  44523c:	add	x21, x2, x0
  445240:	b	445278 <_obstack_memory_used@@Base+0xd5f8>
  445244:	mov	w0, #0x1                   	// #1
  445248:	str	w0, [x6]
  44524c:	ldr	w0, [x19]
  445250:	str	xzr, [x19, #32]
  445254:	stp	w0, w0, [x19, #44]
  445258:	ldrb	w0, [x21]
  44525c:	cmp	w0, #0x2d
  445260:	b.ne	44537c <_obstack_memory_used@@Base+0xd6fc>  // b.any
  445264:	mov	w0, #0x2                   	// #2
  445268:	str	w0, [x19, #40]
  44526c:	add	x21, x21, #0x1
  445270:	mov	w0, #0x1                   	// #1
  445274:	str	w0, [x19, #24]
  445278:	ldrb	w0, [x21]
  44527c:	cmp	w0, #0x3a
  445280:	ldr	x0, [x19, #32]
  445284:	csel	w24, w24, wzr, ne  // ne = any
  445288:	cbz	x0, 445294 <_obstack_memory_used@@Base+0xd614>
  44528c:	ldrb	w0, [x0]
  445290:	cbnz	w0, 445420 <_obstack_memory_used@@Base+0xd7a0>
  445294:	ldr	w0, [x19]
  445298:	ldr	w1, [x19, #48]
  44529c:	cmp	w1, w0
  4452a0:	b.le	4452a8 <_obstack_memory_used@@Base+0xd628>
  4452a4:	str	w0, [x19, #48]
  4452a8:	ldr	w1, [x19, #44]
  4452ac:	cmp	w0, w1
  4452b0:	b.ge	4452b8 <_obstack_memory_used@@Base+0xd638>  // b.tcont
  4452b4:	str	w0, [x19, #44]
  4452b8:	ldr	w1, [x19, #40]
  4452bc:	cmp	w1, #0x1
  4452c0:	b.ne	44530c <_obstack_memory_used@@Base+0xd68c>  // b.any
  4452c4:	ldp	w1, w2, [x19, #44]
  4452c8:	cmp	w1, w2
  4452cc:	b.eq	4453b4 <_obstack_memory_used@@Base+0xd734>  // b.none
  4452d0:	cmp	w0, w2
  4452d4:	b.eq	4452e4 <_obstack_memory_used@@Base+0xd664>  // b.none
  4452d8:	mov	x1, x19
  4452dc:	mov	x0, x22
  4452e0:	bl	444c70 <_obstack_memory_used@@Base+0xcff0>
  4452e4:	ldr	w0, [x19]
  4452e8:	cmp	w0, w23
  4452ec:	b.ge	445308 <_obstack_memory_used@@Base+0xd688>  // b.tcont
  4452f0:	ldr	x1, [x22, w0, sxtw #3]
  4452f4:	ldrb	w2, [x1]
  4452f8:	cmp	w2, #0x2d
  4452fc:	b.ne	4453c4 <_obstack_memory_used@@Base+0xd744>  // b.any
  445300:	ldrb	w1, [x1, #1]
  445304:	cbz	w1, 4453c4 <_obstack_memory_used@@Base+0xd744>
  445308:	str	w0, [x19, #48]
  44530c:	ldr	w20, [x19]
  445310:	cmp	w20, w23
  445314:	b.eq	44535c <_obstack_memory_used@@Base+0xd6dc>  // b.none
  445318:	ldr	x0, [x22, w20, sxtw #3]
  44531c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x16380>
  445320:	add	x1, x1, #0x8db
  445324:	bl	404a30 <strcmp@plt>
  445328:	cbnz	w0, 44535c <_obstack_memory_used@@Base+0xd6dc>
  44532c:	ldp	w1, w0, [x19, #44]
  445330:	add	w20, w20, #0x1
  445334:	str	w20, [x19]
  445338:	cmp	w1, w0
  44533c:	b.eq	4453d0 <_obstack_memory_used@@Base+0xd750>  // b.none
  445340:	cmp	w20, w0
  445344:	b.eq	445354 <_obstack_memory_used@@Base+0xd6d4>  // b.none
  445348:	mov	x1, x19
  44534c:	mov	x0, x22
  445350:	bl	444c70 <_obstack_memory_used@@Base+0xcff0>
  445354:	str	w23, [x19]
  445358:	str	w23, [x19, #48]
  44535c:	ldr	w0, [x19]
  445360:	cmp	w0, w23
  445364:	b.ne	4453d8 <_obstack_memory_used@@Base+0xd758>  // b.any
  445368:	ldp	w0, w1, [x19, #44]
  44536c:	cmp	w0, w1
  445370:	b.eq	4451d4 <_obstack_memory_used@@Base+0xd554>  // b.none
  445374:	str	w0, [x19]
  445378:	b	4451d4 <_obstack_memory_used@@Base+0xd554>
  44537c:	cmp	w0, #0x2b
  445380:	b.ne	44538c <_obstack_memory_used@@Base+0xd70c>  // b.any
  445384:	str	wzr, [x19, #40]
  445388:	b	44526c <_obstack_memory_used@@Base+0xd5ec>
  44538c:	cbz	w7, 445398 <_obstack_memory_used@@Base+0xd718>
  445390:	str	wzr, [x19, #40]
  445394:	b	445270 <_obstack_memory_used@@Base+0xd5f0>
  445398:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  44539c:	add	x0, x0, #0x57d
  4453a0:	bl	404e40 <getenv@plt>
  4453a4:	cbnz	x0, 445390 <_obstack_memory_used@@Base+0xd710>
  4453a8:	mov	w0, #0x1                   	// #1
  4453ac:	str	w0, [x19, #40]
  4453b0:	b	445270 <_obstack_memory_used@@Base+0xd5f0>
  4453b4:	cmp	w0, w1
  4453b8:	b.eq	4452e4 <_obstack_memory_used@@Base+0xd664>  // b.none
  4453bc:	str	w0, [x19, #44]
  4453c0:	b	4452e4 <_obstack_memory_used@@Base+0xd664>
  4453c4:	add	w0, w0, #0x1
  4453c8:	str	w0, [x19]
  4453cc:	b	4452e4 <_obstack_memory_used@@Base+0xd664>
  4453d0:	str	w20, [x19, #44]
  4453d4:	b	445354 <_obstack_memory_used@@Base+0xd6d4>
  4453d8:	ldr	x20, [x22, w0, sxtw #3]
  4453dc:	ldrb	w1, [x20]
  4453e0:	cmp	w1, #0x2d
  4453e4:	b.ne	4453f0 <_obstack_memory_used@@Base+0xd770>  // b.any
  4453e8:	ldrb	w1, [x20, #1]
  4453ec:	cbnz	w1, 44540c <_obstack_memory_used@@Base+0xd78c>
  4453f0:	ldr	w1, [x19, #40]
  4453f4:	cbz	w1, 4451d4 <_obstack_memory_used@@Base+0xd554>
  4453f8:	add	w0, w0, #0x1
  4453fc:	str	w0, [x19]
  445400:	mov	w0, #0x1                   	// #1
  445404:	str	x20, [x19, #16]
  445408:	b	4451d8 <_obstack_memory_used@@Base+0xd558>
  44540c:	cbnz	x25, 4454a8 <_obstack_memory_used@@Base+0xd828>
  445410:	ldrsw	x0, [x19]
  445414:	ldr	x0, [x22, x0, lsl #3]
  445418:	add	x0, x0, #0x1
  44541c:	str	x0, [x19, #32]
  445420:	ldr	x27, [x19, #32]
  445424:	mov	x0, x21
  445428:	add	x28, x27, #0x1
  44542c:	str	x28, [x19, #32]
  445430:	ldrb	w20, [x27]
  445434:	mov	w1, w20
  445438:	bl	404b90 <strchr@plt>
  44543c:	ldrb	w1, [x27, #1]
  445440:	cbnz	w1, 445450 <_obstack_memory_used@@Base+0xd7d0>
  445444:	ldr	w1, [x19]
  445448:	add	w1, w1, #0x1
  44544c:	str	w1, [x19]
  445450:	sub	w1, w20, #0x3a
  445454:	cmp	x0, #0x0
  445458:	and	w1, w1, #0xff
  44545c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  445460:	b.hi	445548 <_obstack_memory_used@@Base+0xd8c8>  // b.pmore
  445464:	cbz	w24, 44549c <_obstack_memory_used@@Base+0xd81c>
  445468:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  44546c:	mov	w2, #0x5                   	// #5
  445470:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  445474:	add	x1, x1, #0xf24
  445478:	ldr	x21, [x0, #1160]
  44547c:	mov	x0, #0x0                   	// #0
  445480:	bl	404d00 <dcgettext@plt>
  445484:	mov	x2, x0
  445488:	ldr	x3, [x22]
  44548c:	mov	w4, w20
  445490:	mov	x0, x21
  445494:	mov	w1, #0x1                   	// #1
  445498:	bl	404a20 <__fprintf_chk@plt>
  44549c:	mov	w0, #0x3f                  	// #63
  4454a0:	str	w20, [x19, #8]
  4454a4:	b	4451d8 <_obstack_memory_used@@Base+0xd558>
  4454a8:	cmp	w1, #0x2d
  4454ac:	b.ne	4454ec <_obstack_memory_used@@Base+0xd86c>  // b.any
  4454b0:	add	x20, x20, #0x2
  4454b4:	mov	w7, w24
  4454b8:	mov	x6, x19
  4454bc:	mov	w5, w27
  4454c0:	str	x20, [x19, #32]
  4454c4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  4454c8:	add	x0, x0, #0x8db
  4454cc:	str	x0, [sp]
  4454d0:	mov	x4, x26
  4454d4:	mov	x3, x25
  4454d8:	mov	x2, x21
  4454dc:	mov	x1, x22
  4454e0:	mov	w0, w23
  4454e4:	bl	444d18 <_obstack_memory_used@@Base+0xd098>
  4454e8:	b	4451d8 <_obstack_memory_used@@Base+0xd558>
  4454ec:	cbz	w27, 445410 <_obstack_memory_used@@Base+0xd790>
  4454f0:	ldrb	w0, [x20, #2]
  4454f4:	cbnz	w0, 445504 <_obstack_memory_used@@Base+0xd884>
  4454f8:	mov	x0, x21
  4454fc:	bl	404b90 <strchr@plt>
  445500:	cbnz	x0, 445410 <_obstack_memory_used@@Base+0xd790>
  445504:	add	x20, x20, #0x1
  445508:	str	x20, [x19, #32]
  44550c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x16380>
  445510:	add	x0, x0, #0x8dc
  445514:	str	x0, [sp]
  445518:	mov	w7, w24
  44551c:	mov	x6, x19
  445520:	mov	w5, w27
  445524:	mov	x4, x26
  445528:	mov	x3, x25
  44552c:	mov	x2, x21
  445530:	mov	x1, x22
  445534:	mov	w0, w23
  445538:	bl	444d18 <_obstack_memory_used@@Base+0xd098>
  44553c:	cmn	w0, #0x1
  445540:	b.ne	4451d8 <_obstack_memory_used@@Base+0xd558>  // b.any
  445544:	b	445410 <_obstack_memory_used@@Base+0xd790>
  445548:	ldrb	w2, [x0]
  44554c:	ldrb	w1, [x0, #1]
  445550:	cmp	w2, #0x57
  445554:	b.ne	445600 <_obstack_memory_used@@Base+0xd980>  // b.any
  445558:	cmp	w1, #0x3b
  44555c:	b.ne	445600 <_obstack_memory_used@@Base+0xd980>  // b.any
  445560:	cbz	x25, 445638 <_obstack_memory_used@@Base+0xd9b8>
  445564:	ldrb	w0, [x27, #1]
  445568:	cbz	w0, 445598 <_obstack_memory_used@@Base+0xd918>
  44556c:	str	x28, [x19, #16]
  445570:	ldr	x0, [x19, #16]
  445574:	str	xzr, [x19, #16]
  445578:	str	x0, [x19, #32]
  44557c:	mov	w7, w24
  445580:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x18380>
  445584:	mov	x6, x19
  445588:	add	x0, x0, #0xf69
  44558c:	mov	w5, #0x0                   	// #0
  445590:	str	x0, [sp]
  445594:	b	4454d0 <_obstack_memory_used@@Base+0xd850>
  445598:	ldr	w0, [x19]
  44559c:	cmp	w0, w23
  4455a0:	b.ne	4455f4 <_obstack_memory_used@@Base+0xd974>  // b.any
  4455a4:	cbz	w24, 4455dc <_obstack_memory_used@@Base+0xd95c>
  4455a8:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  4455ac:	mov	w2, #0x5                   	// #5
  4455b0:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  4455b4:	add	x1, x1, #0xf40
  4455b8:	ldr	x23, [x0, #1160]
  4455bc:	mov	x0, #0x0                   	// #0
  4455c0:	bl	404d00 <dcgettext@plt>
  4455c4:	mov	x2, x0
  4455c8:	ldr	x3, [x22]
  4455cc:	mov	w4, w20
  4455d0:	mov	x0, x23
  4455d4:	mov	w1, #0x1                   	// #1
  4455d8:	bl	404a20 <__fprintf_chk@plt>
  4455dc:	str	w20, [x19, #8]
  4455e0:	mov	w20, #0x3f                  	// #63
  4455e4:	ldrb	w0, [x21]
  4455e8:	cmp	w0, #0x3a
  4455ec:	csel	w0, w0, w20, eq  // eq = none
  4455f0:	b	4451d8 <_obstack_memory_used@@Base+0xd558>
  4455f4:	ldr	x0, [x22, w0, sxtw #3]
  4455f8:	str	x0, [x19, #16]
  4455fc:	b	445570 <_obstack_memory_used@@Base+0xd8f0>
  445600:	cmp	w1, #0x3a
  445604:	b.ne	445638 <_obstack_memory_used@@Base+0xd9b8>  // b.any
  445608:	ldrb	w0, [x0, #2]
  44560c:	ldrb	w1, [x27, #1]
  445610:	cmp	w0, #0x3a
  445614:	b.ne	445640 <_obstack_memory_used@@Base+0xd9c0>  // b.any
  445618:	cbz	w1, 445630 <_obstack_memory_used@@Base+0xd9b0>
  44561c:	ldr	w0, [x19]
  445620:	str	x28, [x19, #16]
  445624:	add	w0, w0, #0x1
  445628:	str	w0, [x19]
  44562c:	b	445634 <_obstack_memory_used@@Base+0xd9b4>
  445630:	str	xzr, [x19, #16]
  445634:	str	xzr, [x19, #32]
  445638:	mov	w0, w20
  44563c:	b	4451d8 <_obstack_memory_used@@Base+0xd558>
  445640:	ldr	w0, [x19]
  445644:	cbz	w1, 445650 <_obstack_memory_used@@Base+0xd9d0>
  445648:	str	x28, [x19, #16]
  44564c:	b	445624 <_obstack_memory_used@@Base+0xd9a4>
  445650:	cmp	w23, w0
  445654:	b.ne	4456a8 <_obstack_memory_used@@Base+0xda28>  // b.any
  445658:	cbz	w24, 445690 <_obstack_memory_used@@Base+0xda10>
  44565c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x39380>
  445660:	mov	w2, #0x5                   	// #5
  445664:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x18380>
  445668:	add	x1, x1, #0xf40
  44566c:	ldr	x23, [x0, #1160]
  445670:	mov	x0, #0x0                   	// #0
  445674:	bl	404d00 <dcgettext@plt>
  445678:	mov	x2, x0
  44567c:	ldr	x3, [x22]
  445680:	mov	w4, w20
  445684:	mov	x0, x23
  445688:	mov	w1, #0x1                   	// #1
  44568c:	bl	404a20 <__fprintf_chk@plt>
  445690:	str	w20, [x19, #8]
  445694:	mov	w0, #0x3f                  	// #63
  445698:	ldrb	w20, [x21]
  44569c:	cmp	w20, #0x3a
  4456a0:	csel	w20, w20, w0, eq  // eq = none
  4456a4:	b	445634 <_obstack_memory_used@@Base+0xd9b4>
  4456a8:	add	w1, w0, #0x1
  4456ac:	ldr	x0, [x22, w0, sxtw #3]
  4456b0:	str	w1, [x19]
  4456b4:	str	x0, [x19, #16]
  4456b8:	b	445634 <_obstack_memory_used@@Base+0xd9b4>
  4456bc:	stp	x29, x30, [sp, #-48]!
  4456c0:	mov	x29, sp
  4456c4:	stp	x19, x20, [sp, #16]
  4456c8:	adrp	x20, 471000 <_obstack_memory_used@@Base+0x39380>
  4456cc:	stp	x21, x22, [sp, #32]
  4456d0:	add	x22, x20, #0x474
  4456d4:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x39380>
  4456d8:	add	x19, x21, #0xf28
  4456dc:	ldr	w7, [x20, #1140]
  4456e0:	str	w7, [x21, #3880]
  4456e4:	ldr	w7, [x22, #4]
  4456e8:	str	w7, [x19, #4]
  4456ec:	mov	w7, w6
  4456f0:	mov	x6, x19
  4456f4:	bl	4451a8 <_obstack_memory_used@@Base+0xd528>
  4456f8:	ldr	w1, [x21, #3880]
  4456fc:	str	w1, [x20, #1140]
  445700:	adrp	x1, 472000 <argp_program_version_hook@@Base+0x250>
  445704:	ldr	x2, [x19, #16]
  445708:	str	x2, [x1, #1064]
  44570c:	ldr	w1, [x19, #8]
  445710:	str	w1, [x22, #8]
  445714:	ldp	x19, x20, [sp, #16]
  445718:	ldp	x21, x22, [sp, #32]
  44571c:	ldp	x29, x30, [sp], #48
  445720:	ret
  445724:	mov	w6, #0x1                   	// #1
  445728:	mov	w5, #0x0                   	// #0
  44572c:	mov	x4, #0x0                   	// #0
  445730:	mov	x3, #0x0                   	// #0
  445734:	b	4456bc <_obstack_memory_used@@Base+0xda3c>
  445738:	mov	w2, #0x3                   	// #3
  44573c:	mov	w1, #0x0                   	// #0
  445740:	b	4376ac <argp_usage@@Base+0xa1cc>
  445744:	stp	x29, x30, [sp, #-32]!
  445748:	mov	x29, sp
  44574c:	str	q0, [sp, #16]
  445750:	ldp	x1, x10, [sp, #16]
  445754:	str	q1, [sp, #16]
  445758:	ldp	x8, x9, [sp, #16]
  44575c:	mrs	x6, fpcr
  445760:	ubfx	x4, x10, #0, #48
  445764:	ubfx	x11, x10, #48, #15
  445768:	lsr	x10, x10, #63
  44576c:	and	w5, w10, #0xff
  445770:	cbz	w11, 4457a4 <_obstack_memory_used@@Base+0xdb24>
  445774:	mov	w2, #0x7fff                	// #32767
  445778:	cmp	w11, w2
  44577c:	b.eq	445804 <_obstack_memory_used@@Base+0xdb84>  // b.none
  445780:	and	x11, x11, #0xffff
  445784:	extr	x2, x4, x1, #61
  445788:	mov	x12, #0xffffffffffffc001    	// #-16383
  44578c:	orr	x2, x2, #0x8000000000000
  445790:	lsl	x1, x1, #3
  445794:	add	x11, x11, x12
  445798:	mov	x14, #0x0                   	// #0
  44579c:	mov	w0, #0x0                   	// #0
  4457a0:	b	445820 <_obstack_memory_used@@Base+0xdba0>
  4457a4:	orr	x2, x4, x1
  4457a8:	cbz	x2, 445898 <_obstack_memory_used@@Base+0xdc18>
  4457ac:	clz	x2, x1
  4457b0:	cmp	x4, #0x0
  4457b4:	add	x2, x2, #0x40
  4457b8:	clz	x11, x4
  4457bc:	csel	x0, x2, x11, eq  // eq = none
  4457c0:	sub	x2, x0, #0xf
  4457c4:	cmp	x2, #0x3c
  4457c8:	b.gt	4457f4 <_obstack_memory_used@@Base+0xdb74>
  4457cc:	add	w7, w2, #0x3
  4457d0:	mov	w3, #0x3d                  	// #61
  4457d4:	sub	w2, w3, w2
  4457d8:	lsl	x4, x4, x7
  4457dc:	lsr	x2, x1, x2
  4457e0:	orr	x2, x2, x4
  4457e4:	lsl	x1, x1, x7
  4457e8:	mov	x11, #0xffffffffffffc011    	// #-16367
  4457ec:	sub	x11, x11, x0
  4457f0:	b	445798 <_obstack_memory_used@@Base+0xdb18>
  4457f4:	sub	w2, w2, #0x3d
  4457f8:	lsl	x2, x1, x2
  4457fc:	mov	x1, #0x0                   	// #0
  445800:	b	4457e8 <_obstack_memory_used@@Base+0xdb68>
  445804:	orr	x2, x4, x1
  445808:	cbz	x2, 4458a8 <_obstack_memory_used@@Base+0xdc28>
  44580c:	lsr	x0, x4, #47
  445810:	mov	x2, x4
  445814:	eor	w0, w0, #0x1
  445818:	mov	x11, #0x7fff                	// #32767
  44581c:	mov	x14, #0x3                   	// #3
  445820:	lsr	x13, x9, #63
  445824:	ubfx	x7, x9, #0, #48
  445828:	ubfx	x4, x9, #48, #15
  44582c:	and	w3, w13, #0xff
  445830:	cbz	w4, 4458b8 <_obstack_memory_used@@Base+0xdc38>
  445834:	mov	w9, #0x7fff                	// #32767
  445838:	cmp	w4, w9
  44583c:	b.eq	445918 <_obstack_memory_used@@Base+0xdc98>  // b.none
  445840:	and	x4, x4, #0xffff
  445844:	extr	x7, x7, x8, #61
  445848:	mov	x9, #0xffffffffffffc001    	// #-16383
  44584c:	orr	x7, x7, #0x8000000000000
  445850:	lsl	x8, x8, #3
  445854:	add	x4, x4, x9
  445858:	mov	x12, #0x0                   	// #0
  44585c:	eor	w5, w5, w3
  445860:	orr	x3, x12, x14, lsl #2
  445864:	sub	x3, x3, #0x1
  445868:	and	x5, x5, #0xff
  44586c:	sub	x9, x11, x4
  445870:	cmp	x3, #0xe
  445874:	b.hi	44595c <_obstack_memory_used@@Base+0xdcdc>  // b.pmore
  445878:	cmp	w3, #0xe
  44587c:	b.hi	44595c <_obstack_memory_used@@Base+0xdcdc>  // b.pmore
  445880:	adrp	x4, 450000 <_obstack_memory_used@@Base+0x18380>
  445884:	add	x4, x4, #0xf70
  445888:	ldrh	w3, [x4, w3, uxtw #1]
  44588c:	adr	x4, 445898 <_obstack_memory_used@@Base+0xdc18>
  445890:	add	x3, x4, w3, sxth #2
  445894:	br	x3
  445898:	mov	x1, #0x0                   	// #0
  44589c:	mov	x11, #0x0                   	// #0
  4458a0:	mov	x14, #0x1                   	// #1
  4458a4:	b	44579c <_obstack_memory_used@@Base+0xdb1c>
  4458a8:	mov	x1, #0x0                   	// #0
  4458ac:	mov	x11, #0x7fff                	// #32767
  4458b0:	mov	x14, #0x2                   	// #2
  4458b4:	b	44579c <_obstack_memory_used@@Base+0xdb1c>
  4458b8:	orr	x4, x7, x8
  4458bc:	cbz	x4, 445934 <_obstack_memory_used@@Base+0xdcb4>
  4458c0:	clz	x12, x8
  4458c4:	cmp	x7, #0x0
  4458c8:	add	x12, x12, #0x40
  4458cc:	clz	x9, x7
  4458d0:	csel	x9, x12, x9, eq  // eq = none
  4458d4:	sub	x12, x9, #0xf
  4458d8:	cmp	x12, #0x3c
  4458dc:	b.gt	445908 <_obstack_memory_used@@Base+0xdc88>
  4458e0:	add	w16, w12, #0x3
  4458e4:	mov	w15, #0x3d                  	// #61
  4458e8:	sub	w12, w15, w12
  4458ec:	lsl	x7, x7, x16
  4458f0:	lsr	x12, x8, x12
  4458f4:	orr	x7, x12, x7
  4458f8:	lsl	x8, x8, x16
  4458fc:	mov	x4, #0xffffffffffffc011    	// #-16367
  445900:	sub	x4, x4, x9
  445904:	b	445858 <_obstack_memory_used@@Base+0xdbd8>
  445908:	sub	w7, w12, #0x3d
  44590c:	lsl	x7, x8, x7
  445910:	mov	x8, #0x0                   	// #0
  445914:	b	4458fc <_obstack_memory_used@@Base+0xdc7c>
  445918:	orr	x4, x7, x8
  44591c:	cbz	x4, 445948 <_obstack_memory_used@@Base+0xdcc8>
  445920:	tst	x7, #0x800000000000
  445924:	mov	x4, #0x7fff                	// #32767
  445928:	csinc	w0, w0, wzr, ne  // ne = any
  44592c:	mov	x12, #0x3                   	// #3
  445930:	b	44585c <_obstack_memory_used@@Base+0xdbdc>
  445934:	mov	x7, #0x0                   	// #0
  445938:	mov	x8, #0x0                   	// #0
  44593c:	mov	x4, #0x0                   	// #0
  445940:	mov	x12, #0x1                   	// #1
  445944:	b	44585c <_obstack_memory_used@@Base+0xdbdc>
  445948:	mov	x7, #0x0                   	// #0
  44594c:	mov	x8, #0x0                   	// #0
  445950:	mov	x4, #0x7fff                	// #32767
  445954:	mov	x12, #0x2                   	// #2
  445958:	b	44585c <_obstack_memory_used@@Base+0xdbdc>
  44595c:	cmp	x7, x2
  445960:	b.cc	44596c <_obstack_memory_used@@Base+0xdcec>  // b.lo, b.ul, b.last
  445964:	ccmp	x8, x1, #0x2, eq  // eq = none
  445968:	b.hi	445c04 <_obstack_memory_used@@Base+0xdf84>  // b.pmore
  44596c:	lsl	x14, x1, #63
  445970:	extr	x1, x2, x1, #1
  445974:	lsr	x2, x2, #1
  445978:	extr	x3, x7, x8, #52
  44597c:	ubfx	x7, x7, #20, #32
  445980:	and	x13, x3, #0xffffffff
  445984:	lsl	x8, x8, #12
  445988:	udiv	x10, x2, x7
  44598c:	msub	x2, x10, x7, x2
  445990:	mul	x11, x13, x10
  445994:	extr	x2, x2, x1, #32
  445998:	cmp	x11, x2
  44599c:	b.ls	445c10 <_obstack_memory_used@@Base+0xdf90>  // b.plast
  4459a0:	sub	x4, x10, #0x1
  4459a4:	adds	x2, x3, x2
  4459a8:	b.cs	4459bc <_obstack_memory_used@@Base+0xdd3c>  // b.hs, b.nlast
  4459ac:	cmp	x11, x2
  4459b0:	b.ls	4459bc <_obstack_memory_used@@Base+0xdd3c>  // b.plast
  4459b4:	sub	x4, x10, #0x2
  4459b8:	add	x2, x2, x3
  4459bc:	sub	x2, x2, x11
  4459c0:	and	x1, x1, #0xffffffff
  4459c4:	udiv	x10, x2, x7
  4459c8:	msub	x2, x10, x7, x2
  4459cc:	mul	x11, x13, x10
  4459d0:	orr	x1, x1, x2, lsl #32
  4459d4:	cmp	x11, x1
  4459d8:	b.ls	445c18 <_obstack_memory_used@@Base+0xdf98>  // b.plast
  4459dc:	sub	x2, x10, #0x1
  4459e0:	adds	x1, x3, x1
  4459e4:	b.cs	4459f8 <_obstack_memory_used@@Base+0xdd78>  // b.hs, b.nlast
  4459e8:	cmp	x11, x1
  4459ec:	b.ls	4459f8 <_obstack_memory_used@@Base+0xdd78>  // b.plast
  4459f0:	sub	x2, x10, #0x2
  4459f4:	add	x1, x1, x3
  4459f8:	orr	x4, x2, x4, lsl #32
  4459fc:	and	x15, x8, #0xffffffff
  445a00:	lsr	x10, x8, #32
  445a04:	sub	x1, x1, x11
  445a08:	lsr	x12, x4, #32
  445a0c:	and	x11, x4, #0xffffffff
  445a10:	mul	x16, x12, x15
  445a14:	mul	x2, x11, x15
  445a18:	madd	x11, x10, x11, x16
  445a1c:	mul	x12, x12, x10
  445a20:	add	x11, x11, x2, lsr #32
  445a24:	cmp	x16, x11
  445a28:	b.ls	445a34 <_obstack_memory_used@@Base+0xddb4>  // b.plast
  445a2c:	mov	x16, #0x100000000           	// #4294967296
  445a30:	add	x12, x12, x16
  445a34:	add	x12, x12, x11, lsr #32
  445a38:	and	x2, x2, #0xffffffff
  445a3c:	add	x11, x2, x11, lsl #32
  445a40:	cmp	x1, x12
  445a44:	b.cc	445a50 <_obstack_memory_used@@Base+0xddd0>  // b.lo, b.ul, b.last
  445a48:	ccmp	x14, x11, #0x2, eq  // eq = none
  445a4c:	b.cs	445c20 <_obstack_memory_used@@Base+0xdfa0>  // b.hs, b.nlast
  445a50:	adds	x16, x14, x8
  445a54:	sub	x2, x4, #0x1
  445a58:	adc	x1, x1, x3
  445a5c:	cset	x17, cs  // cs = hs, nlast
  445a60:	mov	x14, x16
  445a64:	cmp	x3, x1
  445a68:	b.cc	445a78 <_obstack_memory_used@@Base+0xddf8>  // b.lo, b.ul, b.last
  445a6c:	cmp	x17, #0x0
  445a70:	ccmp	x3, x1, #0x0, eq  // eq = none
  445a74:	b.ne	445a94 <_obstack_memory_used@@Base+0xde14>  // b.any
  445a78:	cmp	x12, x1
  445a7c:	b.hi	445a88 <_obstack_memory_used@@Base+0xde08>  // b.pmore
  445a80:	ccmp	x11, x16, #0x0, eq  // eq = none
  445a84:	b.ls	445a94 <_obstack_memory_used@@Base+0xde14>  // b.plast
  445a88:	adds	x14, x8, x16
  445a8c:	sub	x2, x4, #0x2
  445a90:	adc	x1, x1, x3
  445a94:	subs	x16, x14, x11
  445a98:	cmp	x14, x11
  445a9c:	sbc	x1, x1, x12
  445aa0:	cmp	x3, x1
  445aa4:	b.eq	445cb4 <_obstack_memory_used@@Base+0xe034>  // b.none
  445aa8:	udiv	x12, x1, x7
  445aac:	msub	x1, x12, x7, x1
  445ab0:	mul	x4, x13, x12
  445ab4:	extr	x1, x1, x16, #32
  445ab8:	cmp	x4, x1
  445abc:	b.ls	445c28 <_obstack_memory_used@@Base+0xdfa8>  // b.plast
  445ac0:	sub	x11, x12, #0x1
  445ac4:	adds	x1, x3, x1
  445ac8:	b.cs	445adc <_obstack_memory_used@@Base+0xde5c>  // b.hs, b.nlast
  445acc:	cmp	x4, x1
  445ad0:	b.ls	445adc <_obstack_memory_used@@Base+0xde5c>  // b.plast
  445ad4:	sub	x11, x12, #0x2
  445ad8:	add	x1, x1, x3
  445adc:	sub	x1, x1, x4
  445ae0:	and	x16, x16, #0xffffffff
  445ae4:	udiv	x12, x1, x7
  445ae8:	msub	x4, x12, x7, x1
  445aec:	mul	x13, x13, x12
  445af0:	orr	x4, x16, x4, lsl #32
  445af4:	cmp	x13, x4
  445af8:	b.ls	445c30 <_obstack_memory_used@@Base+0xdfb0>  // b.plast
  445afc:	sub	x1, x12, #0x1
  445b00:	adds	x4, x3, x4
  445b04:	b.cs	445b18 <_obstack_memory_used@@Base+0xde98>  // b.hs, b.nlast
  445b08:	cmp	x13, x4
  445b0c:	b.ls	445b18 <_obstack_memory_used@@Base+0xde98>  // b.plast
  445b10:	sub	x1, x12, #0x2
  445b14:	add	x4, x4, x3
  445b18:	orr	x11, x1, x11, lsl #32
  445b1c:	sub	x4, x4, x13
  445b20:	and	x12, x11, #0xffffffff
  445b24:	lsr	x7, x11, #32
  445b28:	mul	x1, x15, x12
  445b2c:	mul	x15, x7, x15
  445b30:	mul	x7, x10, x7
  445b34:	madd	x10, x10, x12, x15
  445b38:	add	x10, x10, x1, lsr #32
  445b3c:	cmp	x15, x10
  445b40:	b.ls	445b4c <_obstack_memory_used@@Base+0xdecc>  // b.plast
  445b44:	mov	x12, #0x100000000           	// #4294967296
  445b48:	add	x7, x7, x12
  445b4c:	add	x7, x7, x10, lsr #32
  445b50:	and	x1, x1, #0xffffffff
  445b54:	add	x10, x1, x10, lsl #32
  445b58:	cmp	x4, x7
  445b5c:	b.cc	445b6c <_obstack_memory_used@@Base+0xdeec>  // b.lo, b.ul, b.last
  445b60:	cmp	x10, #0x0
  445b64:	ccmp	x4, x7, #0x0, ne  // ne = any
  445b68:	b.ne	445c38 <_obstack_memory_used@@Base+0xdfb8>  // b.any
  445b6c:	adds	x12, x3, x4
  445b70:	sub	x1, x11, #0x1
  445b74:	mov	x4, x12
  445b78:	b.cs	445ba4 <_obstack_memory_used@@Base+0xdf24>  // b.hs, b.nlast
  445b7c:	cmp	x12, x7
  445b80:	b.cc	445b8c <_obstack_memory_used@@Base+0xdf0c>  // b.lo, b.ul, b.last
  445b84:	ccmp	x8, x10, #0x2, eq  // eq = none
  445b88:	b.cs	445ba4 <_obstack_memory_used@@Base+0xdf24>  // b.hs, b.nlast
  445b8c:	sub	x1, x11, #0x2
  445b90:	lsl	x11, x8, #1
  445b94:	cmp	x8, x11
  445b98:	mov	x8, x11
  445b9c:	cinc	x4, x3, hi  // hi = pmore
  445ba0:	add	x4, x12, x4
  445ba4:	cmp	x4, x7
  445ba8:	mov	x3, x1
  445bac:	ccmp	x8, x10, #0x0, eq  // eq = none
  445bb0:	orr	x1, x1, #0x1
  445bb4:	csel	x1, x1, x3, ne  // ne = any
  445bb8:	mov	x3, #0x3fff                	// #16383
  445bbc:	add	x3, x9, x3
  445bc0:	cmp	x3, #0x0
  445bc4:	b.le	445d80 <_obstack_memory_used@@Base+0xe100>
  445bc8:	tst	x1, #0x7
  445bcc:	b.eq	445ccc <_obstack_memory_used@@Base+0xe04c>  // b.none
  445bd0:	and	x4, x6, #0xc00000
  445bd4:	orr	w0, w0, #0x10
  445bd8:	cmp	x4, #0x400, lsl #12
  445bdc:	b.eq	445cbc <_obstack_memory_used@@Base+0xe03c>  // b.none
  445be0:	cmp	x4, #0x800, lsl #12
  445be4:	b.eq	445cc8 <_obstack_memory_used@@Base+0xe048>  // b.none
  445be8:	cbnz	x4, 445ccc <_obstack_memory_used@@Base+0xe04c>
  445bec:	and	x4, x1, #0xf
  445bf0:	cmp	x4, #0x4
  445bf4:	b.eq	445ccc <_obstack_memory_used@@Base+0xe04c>  // b.none
  445bf8:	adds	x1, x1, #0x4
  445bfc:	cinc	x2, x2, cs  // cs = hs, nlast
  445c00:	b	445ccc <_obstack_memory_used@@Base+0xe04c>
  445c04:	sub	x9, x9, #0x1
  445c08:	mov	x14, #0x0                   	// #0
  445c0c:	b	445978 <_obstack_memory_used@@Base+0xdcf8>
  445c10:	mov	x4, x10
  445c14:	b	4459bc <_obstack_memory_used@@Base+0xdd3c>
  445c18:	mov	x2, x10
  445c1c:	b	4459f8 <_obstack_memory_used@@Base+0xdd78>
  445c20:	mov	x2, x4
  445c24:	b	445a94 <_obstack_memory_used@@Base+0xde14>
  445c28:	mov	x11, x12
  445c2c:	b	445adc <_obstack_memory_used@@Base+0xde5c>
  445c30:	mov	x1, x12
  445c34:	b	445b18 <_obstack_memory_used@@Base+0xde98>
  445c38:	mov	x1, x11
  445c3c:	mov	x8, #0x0                   	// #0
  445c40:	b	445ba4 <_obstack_memory_used@@Base+0xdf24>
  445c44:	tbz	x2, #47, 445c58 <_obstack_memory_used@@Base+0xdfd8>
  445c48:	tbnz	x7, #47, 445c58 <_obstack_memory_used@@Base+0xdfd8>
  445c4c:	mov	x2, x7
  445c50:	mov	x1, x8
  445c54:	mov	x10, x13
  445c58:	orr	x2, x2, #0x800000000000
  445c5c:	mov	x5, x10
  445c60:	mov	x3, #0x7fff                	// #32767
  445c64:	b	445cec <_obstack_memory_used@@Base+0xe06c>
  445c68:	orr	w0, w0, #0x2
  445c6c:	mov	x2, #0x0                   	// #0
  445c70:	mov	x1, #0x0                   	// #0
  445c74:	b	445c60 <_obstack_memory_used@@Base+0xdfe0>
  445c78:	mov	x5, x10
  445c7c:	mov	x12, x14
  445c80:	cmp	x12, #0x1
  445c84:	b.eq	445ee8 <_obstack_memory_used@@Base+0xe268>  // b.none
  445c88:	cbz	x12, 445bb8 <_obstack_memory_used@@Base+0xdf38>
  445c8c:	cmp	x12, #0x2
  445c90:	b.eq	445c6c <_obstack_memory_used@@Base+0xdfec>  // b.none
  445c94:	cmp	x12, #0x3
  445c98:	b.ne	445bb8 <_obstack_memory_used@@Base+0xdf38>  // b.any
  445c9c:	mov	x10, x5
  445ca0:	b	445c58 <_obstack_memory_used@@Base+0xdfd8>
  445ca4:	mov	x2, x7
  445ca8:	mov	x1, x8
  445cac:	mov	x5, x13
  445cb0:	b	445c80 <_obstack_memory_used@@Base+0xe000>
  445cb4:	mov	x1, #0xffffffffffffffff    	// #-1
  445cb8:	b	445bb8 <_obstack_memory_used@@Base+0xdf38>
  445cbc:	cbnz	x5, 445ccc <_obstack_memory_used@@Base+0xe04c>
  445cc0:	adds	x1, x1, #0x8
  445cc4:	b	445bfc <_obstack_memory_used@@Base+0xdf7c>
  445cc8:	cbnz	x5, 445cc0 <_obstack_memory_used@@Base+0xe040>
  445ccc:	tbz	x2, #52, 445cd8 <_obstack_memory_used@@Base+0xe058>
  445cd0:	and	x2, x2, #0xffefffffffffffff
  445cd4:	add	x3, x9, #0x4, lsl #12
  445cd8:	mov	x4, #0x7ffe                	// #32766
  445cdc:	cmp	x3, x4
  445ce0:	b.gt	445d20 <_obstack_memory_used@@Base+0xe0a0>
  445ce4:	extr	x1, x2, x1, #3
  445ce8:	lsr	x2, x2, #3
  445cec:	and	x3, x3, #0x7fff
  445cf0:	mov	x7, #0x0                   	// #0
  445cf4:	bfxil	x7, x2, #0, #48
  445cf8:	orr	w3, w3, w5, lsl #15
  445cfc:	fmov	d0, x1
  445d00:	bfi	x7, x3, #48, #16
  445d04:	fmov	v0.d[1], x7
  445d08:	cbz	w0, 445d18 <_obstack_memory_used@@Base+0xe098>
  445d0c:	str	q0, [sp, #16]
  445d10:	bl	446988 <_obstack_memory_used@@Base+0xed08>
  445d14:	ldr	q0, [sp, #16]
  445d18:	ldp	x29, x30, [sp], #32
  445d1c:	ret
  445d20:	and	x1, x6, #0xc00000
  445d24:	cmp	x1, #0x400, lsl #12
  445d28:	b.eq	445d4c <_obstack_memory_used@@Base+0xe0cc>  // b.none
  445d2c:	cmp	x1, #0x800, lsl #12
  445d30:	b.eq	445d60 <_obstack_memory_used@@Base+0xe0e0>  // b.none
  445d34:	cbnz	x1, 445d74 <_obstack_memory_used@@Base+0xe0f4>
  445d38:	mov	x3, #0x7fff                	// #32767
  445d3c:	mov	w2, #0x14                  	// #20
  445d40:	orr	w0, w0, w2
  445d44:	mov	x2, x1
  445d48:	b	445cec <_obstack_memory_used@@Base+0xe06c>
  445d4c:	cmp	x5, #0x0
  445d50:	mov	x2, #0x7fff                	// #32767
  445d54:	csetm	x1, ne  // ne = any
  445d58:	csel	x3, x2, x4, eq  // eq = none
  445d5c:	b	445d3c <_obstack_memory_used@@Base+0xe0bc>
  445d60:	cmp	x5, #0x0
  445d64:	mov	x2, #0x7fff                	// #32767
  445d68:	csetm	x1, eq  // eq = none
  445d6c:	csel	x3, x2, x4, ne  // ne = any
  445d70:	b	445d3c <_obstack_memory_used@@Base+0xe0bc>
  445d74:	mov	x3, x4
  445d78:	mov	x1, #0xffffffffffffffff    	// #-1
  445d7c:	b	445d3c <_obstack_memory_used@@Base+0xe0bc>
  445d80:	mov	x4, #0x1                   	// #1
  445d84:	sub	x3, x4, x3
  445d88:	cmp	x3, #0x74
  445d8c:	b.gt	445e74 <_obstack_memory_used@@Base+0xe1f4>
  445d90:	cmp	x3, #0x3f
  445d94:	b.gt	445dfc <_obstack_memory_used@@Base+0xe17c>
  445d98:	mov	w7, #0x40                  	// #64
  445d9c:	sub	w7, w7, w3
  445da0:	lsr	x8, x1, x3
  445da4:	lsl	x1, x1, x7
  445da8:	cmp	x1, #0x0
  445dac:	lsl	x4, x2, x7
  445db0:	cset	x1, ne  // ne = any
  445db4:	orr	x4, x4, x8
  445db8:	lsr	x2, x2, x3
  445dbc:	orr	x1, x4, x1
  445dc0:	tst	x1, #0x7
  445dc4:	b.eq	445e40 <_obstack_memory_used@@Base+0xe1c0>  // b.none
  445dc8:	and	x3, x6, #0xc00000
  445dcc:	orr	w0, w0, #0x10
  445dd0:	cmp	x3, #0x400, lsl #12
  445dd4:	b.eq	445e30 <_obstack_memory_used@@Base+0xe1b0>  // b.none
  445dd8:	cmp	x3, #0x800, lsl #12
  445ddc:	b.eq	445e3c <_obstack_memory_used@@Base+0xe1bc>  // b.none
  445de0:	cbnz	x3, 445e40 <_obstack_memory_used@@Base+0xe1c0>
  445de4:	and	x3, x1, #0xf
  445de8:	cmp	x3, #0x4
  445dec:	b.eq	445e40 <_obstack_memory_used@@Base+0xe1c0>  // b.none
  445df0:	adds	x1, x1, #0x4
  445df4:	cinc	x2, x2, cs  // cs = hs, nlast
  445df8:	b	445e40 <_obstack_memory_used@@Base+0xe1c0>
  445dfc:	sub	w4, w3, #0x40
  445e00:	mov	w7, #0x80                  	// #128
  445e04:	sub	w7, w7, w3
  445e08:	cmp	x3, #0x40
  445e0c:	lsr	x4, x2, x4
  445e10:	lsl	x2, x2, x7
  445e14:	csel	x2, x2, xzr, ne  // ne = any
  445e18:	orr	x1, x2, x1
  445e1c:	mov	x2, #0x0                   	// #0
  445e20:	cmp	x1, #0x0
  445e24:	cset	x1, ne  // ne = any
  445e28:	orr	x1, x4, x1
  445e2c:	b	445dc0 <_obstack_memory_used@@Base+0xe140>
  445e30:	cbnz	x5, 445e40 <_obstack_memory_used@@Base+0xe1c0>
  445e34:	adds	x1, x1, #0x8
  445e38:	b	445df4 <_obstack_memory_used@@Base+0xe174>
  445e3c:	cbnz	x5, 445e34 <_obstack_memory_used@@Base+0xe1b4>
  445e40:	tbz	x2, #51, 445e5c <_obstack_memory_used@@Base+0xe1dc>
  445e44:	orr	w0, w0, #0x10
  445e48:	mov	x2, #0x0                   	// #0
  445e4c:	mov	x1, #0x0                   	// #0
  445e50:	mov	x3, #0x1                   	// #1
  445e54:	orr	w0, w0, #0x8
  445e58:	b	445cec <_obstack_memory_used@@Base+0xe06c>
  445e5c:	mov	x3, #0x0                   	// #0
  445e60:	extr	x1, x2, x1, #3
  445e64:	lsr	x2, x2, #3
  445e68:	tbnz	w0, #4, 445e54 <_obstack_memory_used@@Base+0xe1d4>
  445e6c:	tbz	w6, #11, 445cec <_obstack_memory_used@@Base+0xe06c>
  445e70:	b	445e54 <_obstack_memory_used@@Base+0xe1d4>
  445e74:	orr	x1, x1, x2
  445e78:	cbz	x1, 445ea4 <_obstack_memory_used@@Base+0xe224>
  445e7c:	and	x6, x6, #0xc00000
  445e80:	orr	w0, w0, #0x10
  445e84:	cmp	x6, #0x400, lsl #12
  445e88:	b.eq	445eb4 <_obstack_memory_used@@Base+0xe234>  // b.none
  445e8c:	cmp	x6, #0x800, lsl #12
  445e90:	b.eq	445ec4 <_obstack_memory_used@@Base+0xe244>  // b.none
  445e94:	cmp	x6, #0x0
  445e98:	mov	x1, #0x5                   	// #5
  445e9c:	csel	x4, x4, x1, ne  // ne = any
  445ea0:	lsr	x1, x4, #3
  445ea4:	orr	w0, w0, #0x8
  445ea8:	mov	x2, #0x0                   	// #0
  445eac:	mov	x3, #0x0                   	// #0
  445eb0:	b	445cec <_obstack_memory_used@@Base+0xe06c>
  445eb4:	cmp	x5, #0x0
  445eb8:	mov	x1, #0x9                   	// #9
  445ebc:	csel	x4, x1, x4, eq  // eq = none
  445ec0:	b	445ea0 <_obstack_memory_used@@Base+0xe220>
  445ec4:	cmp	x5, #0x0
  445ec8:	mov	x1, #0x9                   	// #9
  445ecc:	csel	x4, x1, x4, ne  // ne = any
  445ed0:	b	445ea0 <_obstack_memory_used@@Base+0xe220>
  445ed4:	mov	x2, #0xffffffffffff        	// #281474976710655
  445ed8:	mov	x1, #0xffffffffffffffff    	// #-1
  445edc:	mov	w0, #0x1                   	// #1
  445ee0:	mov	x10, #0x0                   	// #0
  445ee4:	b	445c58 <_obstack_memory_used@@Base+0xdfd8>
  445ee8:	mov	x2, #0x0                   	// #0
  445eec:	mov	x1, #0x0                   	// #0
  445ef0:	b	445eac <_obstack_memory_used@@Base+0xe22c>
  445ef4:	stp	x29, x30, [sp, #-32]!
  445ef8:	mov	x29, sp
  445efc:	str	q0, [sp, #16]
  445f00:	ldp	x8, x0, [sp, #16]
  445f04:	str	q1, [sp, #16]
  445f08:	ldp	x9, x1, [sp, #16]
  445f0c:	mrs	x2, fpcr
  445f10:	ubfx	x3, x0, #48, #15
  445f14:	ubfx	x2, x0, #0, #48
  445f18:	ubfx	x7, x1, #0, #48
  445f1c:	lsr	x0, x0, #63
  445f20:	ubfx	x5, x1, #48, #15
  445f24:	lsr	x1, x1, #63
  445f28:	mov	x10, #0x7fff                	// #32767
  445f2c:	mov	x4, x8
  445f30:	and	w0, w0, #0xff
  445f34:	mov	x6, x9
  445f38:	and	w1, w1, #0xff
  445f3c:	cmp	x3, x10
  445f40:	b.ne	445f58 <_obstack_memory_used@@Base+0xe2d8>  // b.any
  445f44:	orr	x10, x2, x8
  445f48:	cbnz	x10, 445fc4 <_obstack_memory_used@@Base+0xe344>
  445f4c:	cmp	x5, x3
  445f50:	b.ne	445fec <_obstack_memory_used@@Base+0xe36c>  // b.any
  445f54:	b	445f60 <_obstack_memory_used@@Base+0xe2e0>
  445f58:	cmp	x5, x10
  445f5c:	b.ne	445f68 <_obstack_memory_used@@Base+0xe2e8>  // b.any
  445f60:	orr	x10, x7, x6
  445f64:	cbnz	x10, 445fb0 <_obstack_memory_used@@Base+0xe330>
  445f68:	cmp	x3, x5
  445f6c:	b.ne	445fec <_obstack_memory_used@@Base+0xe36c>  // b.any
  445f70:	cmp	x2, x7
  445f74:	ccmp	x8, x9, #0x0, eq  // eq = none
  445f78:	b.ne	445fec <_obstack_memory_used@@Base+0xe36c>  // b.any
  445f7c:	cmp	w0, w1
  445f80:	b.eq	445fa8 <_obstack_memory_used@@Base+0xe328>  // b.none
  445f84:	cbnz	x3, 445fec <_obstack_memory_used@@Base+0xe36c>
  445f88:	orr	x2, x2, x4
  445f8c:	cmp	x2, #0x0
  445f90:	cset	w0, ne  // ne = any
  445f94:	ldp	x29, x30, [sp], #32
  445f98:	ret
  445f9c:	mov	w0, #0x1                   	// #1
  445fa0:	bl	446988 <_obstack_memory_used@@Base+0xed08>
  445fa4:	b	445fec <_obstack_memory_used@@Base+0xe36c>
  445fa8:	mov	w0, #0x0                   	// #0
  445fac:	b	445f94 <_obstack_memory_used@@Base+0xe314>
  445fb0:	mov	x0, #0x7fff                	// #32767
  445fb4:	cmp	x3, x0
  445fb8:	b.ne	445fe4 <_obstack_memory_used@@Base+0xe364>  // b.any
  445fbc:	orr	x4, x2, x4
  445fc0:	cbz	x4, 445fe4 <_obstack_memory_used@@Base+0xe364>
  445fc4:	tst	x2, #0x800000000000
  445fc8:	b.eq	445f9c <_obstack_memory_used@@Base+0xe31c>  // b.none
  445fcc:	mov	x1, #0x7fff                	// #32767
  445fd0:	mov	w0, #0x1                   	// #1
  445fd4:	cmp	x5, x1
  445fd8:	b.ne	445f94 <_obstack_memory_used@@Base+0xe314>  // b.any
  445fdc:	orr	x6, x7, x6
  445fe0:	cbz	x6, 445f94 <_obstack_memory_used@@Base+0xe314>
  445fe4:	tst	x7, #0x800000000000
  445fe8:	b.eq	445f9c <_obstack_memory_used@@Base+0xe31c>  // b.none
  445fec:	mov	w0, #0x1                   	// #1
  445ff0:	b	445f94 <_obstack_memory_used@@Base+0xe314>
  445ff4:	stp	x29, x30, [sp, #-32]!
  445ff8:	mov	x29, sp
  445ffc:	str	q0, [sp, #16]
  446000:	ldp	x8, x1, [sp, #16]
  446004:	str	q1, [sp, #16]
  446008:	ldp	x7, x0, [sp, #16]
  44600c:	mrs	x2, fpcr
  446010:	ubfx	x10, x1, #48, #15
  446014:	lsr	x2, x0, #63
  446018:	ubfx	x4, x1, #0, #48
  44601c:	lsr	x1, x1, #63
  446020:	ubfx	x3, x0, #0, #48
  446024:	ubfx	x9, x0, #48, #15
  446028:	mov	x5, x8
  44602c:	mov	x0, #0x7fff                	// #32767
  446030:	and	w1, w1, #0xff
  446034:	mov	x6, x7
  446038:	and	w2, w2, #0xff
  44603c:	cmp	x10, x0
  446040:	b.ne	44604c <_obstack_memory_used@@Base+0xe3cc>  // b.any
  446044:	orr	x11, x4, x8
  446048:	cbnz	x11, 44611c <_obstack_memory_used@@Base+0xe49c>
  44604c:	cmp	x9, x0
  446050:	b.ne	44605c <_obstack_memory_used@@Base+0xe3dc>  // b.any
  446054:	orr	x0, x3, x6
  446058:	cbnz	x0, 44611c <_obstack_memory_used@@Base+0xe49c>
  44605c:	cbnz	x10, 44609c <_obstack_memory_used@@Base+0xe41c>
  446060:	orr	x5, x4, x5
  446064:	cmp	x5, #0x0
  446068:	cset	w5, eq  // eq = none
  44606c:	cbnz	x9, 4460a4 <_obstack_memory_used@@Base+0xe424>
  446070:	orr	x6, x3, x6
  446074:	cmp	x6, #0x0
  446078:	cset	w0, eq  // eq = none
  44607c:	csel	w6, w5, wzr, eq  // eq = none
  446080:	cbnz	w6, 44612c <_obstack_memory_used@@Base+0xe4ac>
  446084:	and	x2, x2, #0xff
  446088:	cbz	w5, 4460ac <_obstack_memory_used@@Base+0xe42c>
  44608c:	cmp	x2, #0x0
  446090:	csinv	w0, w5, wzr, ne  // ne = any
  446094:	ldp	x29, x30, [sp], #32
  446098:	ret
  44609c:	mov	w5, #0x0                   	// #0
  4460a0:	b	44606c <_obstack_memory_used@@Base+0xe3ec>
  4460a4:	mov	w0, #0x0                   	// #0
  4460a8:	b	446084 <_obstack_memory_used@@Base+0xe404>
  4460ac:	and	x1, x1, #0xff
  4460b0:	cbz	w0, 4460c0 <_obstack_memory_used@@Base+0xe440>
  4460b4:	cmp	x1, #0x0
  4460b8:	csinv	w0, w0, wzr, eq  // eq = none
  4460bc:	b	446094 <_obstack_memory_used@@Base+0xe414>
  4460c0:	cmp	x1, x2
  4460c4:	b.eq	4460d8 <_obstack_memory_used@@Base+0xe458>  // b.none
  4460c8:	mov	w0, #0xffffffff            	// #-1
  4460cc:	cmp	x1, #0x0
  4460d0:	cneg	w0, w0, eq  // eq = none
  4460d4:	b	446094 <_obstack_memory_used@@Base+0xe414>
  4460d8:	cmp	x10, x9
  4460dc:	b.gt	4460c8 <_obstack_memory_used@@Base+0xe448>
  4460e0:	b.ge	4460ec <_obstack_memory_used@@Base+0xe46c>  // b.tcont
  4460e4:	mov	w0, #0x1                   	// #1
  4460e8:	b	4460cc <_obstack_memory_used@@Base+0xe44c>
  4460ec:	cmp	x4, x3
  4460f0:	b.hi	4460c8 <_obstack_memory_used@@Base+0xe448>  // b.pmore
  4460f4:	cset	w2, eq  // eq = none
  4460f8:	cmp	w2, #0x0
  4460fc:	ccmp	x8, x7, #0x0, ne  // ne = any
  446100:	b.hi	4460c8 <_obstack_memory_used@@Base+0xe448>  // b.pmore
  446104:	cmp	x4, x3
  446108:	b.cc	4460e4 <_obstack_memory_used@@Base+0xe464>  // b.lo, b.ul, b.last
  44610c:	cmp	w2, #0x0
  446110:	ccmp	x8, x7, #0x2, ne  // ne = any
  446114:	b.cs	446094 <_obstack_memory_used@@Base+0xe414>  // b.hs, b.nlast
  446118:	b	4460e4 <_obstack_memory_used@@Base+0xe464>
  44611c:	mov	w0, #0x1                   	// #1
  446120:	bl	446988 <_obstack_memory_used@@Base+0xed08>
  446124:	mov	w0, #0x2                   	// #2
  446128:	b	446094 <_obstack_memory_used@@Base+0xe414>
  44612c:	mov	w0, #0x0                   	// #0
  446130:	b	446094 <_obstack_memory_used@@Base+0xe414>
  446134:	stp	x29, x30, [sp, #-32]!
  446138:	mov	x29, sp
  44613c:	str	q0, [sp, #16]
  446140:	ldp	x8, x4, [sp, #16]
  446144:	str	q1, [sp, #16]
  446148:	ldp	x1, x9, [sp, #16]
  44614c:	mrs	x6, fpcr
  446150:	ubfx	x11, x4, #0, #48
  446154:	ubfx	x10, x4, #48, #15
  446158:	lsr	x4, x4, #63
  44615c:	and	w5, w4, #0xff
  446160:	cbz	w10, 446194 <_obstack_memory_used@@Base+0xe514>
  446164:	mov	w2, #0x7fff                	// #32767
  446168:	cmp	w10, w2
  44616c:	b.eq	4461f4 <_obstack_memory_used@@Base+0xe574>  // b.none
  446170:	and	x10, x10, #0xffff
  446174:	extr	x11, x11, x8, #61
  446178:	mov	x12, #0xffffffffffffc001    	// #-16383
  44617c:	orr	x11, x11, #0x8000000000000
  446180:	lsl	x2, x8, #3
  446184:	add	x10, x10, x12
  446188:	mov	x15, #0x0                   	// #0
  44618c:	mov	w0, #0x0                   	// #0
  446190:	b	446214 <_obstack_memory_used@@Base+0xe594>
  446194:	orr	x2, x11, x8
  446198:	cbz	x2, 446294 <_obstack_memory_used@@Base+0xe614>
  44619c:	clz	x2, x8
  4461a0:	cmp	x11, #0x0
  4461a4:	clz	x0, x11
  4461a8:	add	x2, x2, #0x40
  4461ac:	csel	x0, x2, x0, eq  // eq = none
  4461b0:	sub	x7, x0, #0xf
  4461b4:	cmp	x7, #0x3c
  4461b8:	b.gt	4461e4 <_obstack_memory_used@@Base+0xe564>
  4461bc:	add	w2, w7, #0x3
  4461c0:	mov	w10, #0x3d                  	// #61
  4461c4:	sub	w7, w10, w7
  4461c8:	lsl	x11, x11, x2
  4461cc:	lsr	x7, x8, x7
  4461d0:	orr	x11, x7, x11
  4461d4:	lsl	x2, x8, x2
  4461d8:	mov	x10, #0xffffffffffffc011    	// #-16367
  4461dc:	sub	x10, x10, x0
  4461e0:	b	446188 <_obstack_memory_used@@Base+0xe508>
  4461e4:	sub	w11, w7, #0x3d
  4461e8:	mov	x2, #0x0                   	// #0
  4461ec:	lsl	x11, x8, x11
  4461f0:	b	4461d8 <_obstack_memory_used@@Base+0xe558>
  4461f4:	orr	x2, x11, x8
  4461f8:	cbz	x2, 4462a4 <_obstack_memory_used@@Base+0xe624>
  4461fc:	lsr	x0, x11, #47
  446200:	mov	x2, x8
  446204:	eor	x0, x0, #0x1
  446208:	mov	x10, #0x7fff                	// #32767
  44620c:	and	w0, w0, #0x1
  446210:	mov	x15, #0x3                   	// #3
  446214:	lsr	x8, x9, #63
  446218:	ubfx	x12, x9, #0, #48
  44621c:	ubfx	x7, x9, #48, #15
  446220:	and	w3, w8, #0xff
  446224:	mov	x16, x8
  446228:	cbz	w7, 4462b4 <_obstack_memory_used@@Base+0xe634>
  44622c:	mov	w8, #0x7fff                	// #32767
  446230:	cmp	w7, w8
  446234:	b.eq	446314 <_obstack_memory_used@@Base+0xe694>  // b.none
  446238:	and	x7, x7, #0xffff
  44623c:	extr	x12, x12, x1, #61
  446240:	mov	x8, #0xffffffffffffc001    	// #-16383
  446244:	orr	x12, x12, #0x8000000000000
  446248:	lsl	x1, x1, #3
  44624c:	add	x7, x7, x8
  446250:	mov	x8, #0x0                   	// #0
  446254:	eor	w5, w5, w3
  446258:	orr	x3, x8, x15, lsl #2
  44625c:	add	x10, x7, x10
  446260:	sub	x3, x3, #0x1
  446264:	and	x5, x5, #0xff
  446268:	add	x9, x10, #0x1
  44626c:	cmp	x3, #0xe
  446270:	b.hi	446388 <_obstack_memory_used@@Base+0xe708>  // b.pmore
  446274:	cmp	w3, #0xe
  446278:	b.hi	446388 <_obstack_memory_used@@Base+0xe708>  // b.pmore
  44627c:	adrp	x7, 450000 <_obstack_memory_used@@Base+0x18380>
  446280:	add	x7, x7, #0xf90
  446284:	ldrh	w3, [x7, w3, uxtw #1]
  446288:	adr	x7, 446294 <_obstack_memory_used@@Base+0xe614>
  44628c:	add	x3, x7, w3, sxth #2
  446290:	br	x3
  446294:	mov	x11, #0x0                   	// #0
  446298:	mov	x10, #0x0                   	// #0
  44629c:	mov	x15, #0x1                   	// #1
  4462a0:	b	44618c <_obstack_memory_used@@Base+0xe50c>
  4462a4:	mov	x11, #0x0                   	// #0
  4462a8:	mov	x10, #0x7fff                	// #32767
  4462ac:	mov	x15, #0x2                   	// #2
  4462b0:	b	44618c <_obstack_memory_used@@Base+0xe50c>
  4462b4:	orr	x7, x12, x1
  4462b8:	cbz	x7, 446330 <_obstack_memory_used@@Base+0xe6b0>
  4462bc:	clz	x13, x1
  4462c0:	cmp	x12, #0x0
  4462c4:	add	x13, x13, #0x40
  4462c8:	clz	x7, x12
  4462cc:	csel	x9, x13, x7, eq  // eq = none
  4462d0:	sub	x13, x9, #0xf
  4462d4:	cmp	x13, #0x3c
  4462d8:	b.gt	446304 <_obstack_memory_used@@Base+0xe684>
  4462dc:	add	w7, w13, #0x3
  4462e0:	mov	w14, #0x3d                  	// #61
  4462e4:	sub	w13, w14, w13
  4462e8:	lsl	x12, x12, x7
  4462ec:	lsr	x13, x1, x13
  4462f0:	orr	x12, x13, x12
  4462f4:	lsl	x1, x1, x7
  4462f8:	mov	x7, #0xffffffffffffc011    	// #-16367
  4462fc:	sub	x7, x7, x9
  446300:	b	446250 <_obstack_memory_used@@Base+0xe5d0>
  446304:	sub	w12, w13, #0x3d
  446308:	lsl	x12, x1, x12
  44630c:	mov	x1, #0x0                   	// #0
  446310:	b	4462f8 <_obstack_memory_used@@Base+0xe678>
  446314:	orr	x7, x12, x1
  446318:	cbz	x7, 446344 <_obstack_memory_used@@Base+0xe6c4>
  44631c:	tst	x12, #0x800000000000
  446320:	mov	x7, #0x7fff                	// #32767
  446324:	csinc	w0, w0, wzr, ne  // ne = any
  446328:	mov	x8, #0x3                   	// #3
  44632c:	b	446254 <_obstack_memory_used@@Base+0xe5d4>
  446330:	mov	x12, #0x0                   	// #0
  446334:	mov	x1, #0x0                   	// #0
  446338:	mov	x7, #0x0                   	// #0
  44633c:	mov	x8, #0x1                   	// #1
  446340:	b	446254 <_obstack_memory_used@@Base+0xe5d4>
  446344:	mov	x12, #0x0                   	// #0
  446348:	mov	x1, #0x0                   	// #0
  44634c:	mov	x7, #0x7fff                	// #32767
  446350:	mov	x8, #0x2                   	// #2
  446354:	b	446254 <_obstack_memory_used@@Base+0xe5d4>
  446358:	mov	x12, x11
  44635c:	mov	x1, x2
  446360:	mov	x8, x15
  446364:	cmp	x8, #0x2
  446368:	b.eq	4467b4 <_obstack_memory_used@@Base+0xeb34>  // b.none
  44636c:	cmp	x8, #0x3
  446370:	b.eq	4467a4 <_obstack_memory_used@@Base+0xeb24>  // b.none
  446374:	cmp	x8, #0x1
  446378:	b.ne	4464e8 <_obstack_memory_used@@Base+0xe868>  // b.any
  44637c:	mov	x1, #0x0                   	// #0
  446380:	mov	x2, #0x0                   	// #0
  446384:	b	446768 <_obstack_memory_used@@Base+0xeae8>
  446388:	lsr	x14, x2, #32
  44638c:	and	x15, x1, #0xffffffff
  446390:	lsr	x4, x1, #32
  446394:	and	x2, x2, #0xffffffff
  446398:	mul	x1, x14, x15
  44639c:	mul	x3, x15, x2
  4463a0:	madd	x13, x4, x2, x1
  4463a4:	mul	x17, x14, x4
  4463a8:	add	x13, x13, x3, lsr #32
  4463ac:	cmp	x1, x13
  4463b0:	b.ls	4463bc <_obstack_memory_used@@Base+0xe73c>  // b.plast
  4463b4:	mov	x1, #0x100000000           	// #4294967296
  4463b8:	add	x17, x17, x1
  4463bc:	and	x3, x3, #0xffffffff
  4463c0:	and	x1, x12, #0xffffffff
  4463c4:	lsr	x7, x13, #32
  4463c8:	add	x13, x3, x13, lsl #32
  4463cc:	lsr	x3, x12, #32
  4463d0:	mul	x12, x14, x1
  4463d4:	mul	x18, x2, x1
  4463d8:	madd	x2, x3, x2, x12
  4463dc:	mul	x14, x14, x3
  4463e0:	add	x8, x2, x18, lsr #32
  4463e4:	cmp	x12, x8
  4463e8:	b.ls	4463f4 <_obstack_memory_used@@Base+0xe774>  // b.plast
  4463ec:	mov	x2, #0x100000000           	// #4294967296
  4463f0:	add	x14, x14, x2
  4463f4:	lsr	x16, x11, #32
  4463f8:	and	x11, x11, #0xffffffff
  4463fc:	and	x18, x18, #0xffffffff
  446400:	add	x14, x14, x8, lsr #32
  446404:	add	x18, x18, x8, lsl #32
  446408:	mul	x8, x15, x11
  44640c:	add	x7, x7, x18
  446410:	mul	x15, x16, x15
  446414:	mul	x2, x4, x16
  446418:	madd	x4, x4, x11, x15
  44641c:	add	x4, x4, x8, lsr #32
  446420:	cmp	x15, x4
  446424:	b.ls	446430 <_obstack_memory_used@@Base+0xe7b0>  // b.plast
  446428:	mov	x12, #0x100000000           	// #4294967296
  44642c:	add	x2, x2, x12
  446430:	mul	x12, x16, x1
  446434:	and	x8, x8, #0xffffffff
  446438:	mul	x16, x3, x16
  44643c:	add	x15, x2, x4, lsr #32
  446440:	madd	x3, x3, x11, x12
  446444:	add	x8, x8, x4, lsl #32
  446448:	mul	x4, x11, x1
  44644c:	add	x3, x3, x4, lsr #32
  446450:	cmp	x12, x3
  446454:	b.ls	446460 <_obstack_memory_used@@Base+0xe7e0>  // b.plast
  446458:	mov	x1, #0x100000000           	// #4294967296
  44645c:	add	x16, x16, x1
  446460:	and	x2, x4, #0xffffffff
  446464:	add	x7, x17, x7
  446468:	add	x2, x2, x3, lsl #32
  44646c:	lsr	x3, x3, #32
  446470:	adds	x2, x2, x14
  446474:	cset	x4, cs  // cs = hs, nlast
  446478:	cmp	x7, x18
  44647c:	cset	x1, cc  // cc = lo, ul, last
  446480:	adds	x2, x2, x1
  446484:	cset	x1, cs  // cs = hs, nlast
  446488:	cmp	x4, #0x0
  44648c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  446490:	cinc	x3, x3, ne  // ne = any
  446494:	adds	x7, x7, x8
  446498:	cset	x1, cs  // cs = hs, nlast
  44649c:	adds	x2, x2, x15
  4464a0:	cset	x4, cs  // cs = hs, nlast
  4464a4:	adds	x2, x2, x1
  4464a8:	cset	x1, cs  // cs = hs, nlast
  4464ac:	cmp	x4, #0x0
  4464b0:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  4464b4:	orr	x13, x13, x7, lsl #13
  4464b8:	cinc	x1, x16, ne  // ne = any
  4464bc:	cmp	x13, #0x0
  4464c0:	add	x3, x1, x3
  4464c4:	cset	x1, ne  // ne = any
  4464c8:	orr	x7, x1, x7, lsr #51
  4464cc:	orr	x1, x7, x2, lsl #13
  4464d0:	extr	x12, x3, x2, #51
  4464d4:	tbz	x3, #39, 446570 <_obstack_memory_used@@Base+0xe8f0>
  4464d8:	and	x2, x1, #0x1
  4464dc:	orr	x1, x2, x1, lsr #1
  4464e0:	orr	x1, x1, x12, lsl #63
  4464e4:	lsr	x12, x12, #1
  4464e8:	mov	x2, #0x3fff                	// #16383
  4464ec:	add	x3, x9, x2
  4464f0:	cmp	x3, #0x0
  4464f4:	b.le	44663c <_obstack_memory_used@@Base+0xe9bc>
  4464f8:	tst	x1, #0x7
  4464fc:	b.eq	446588 <_obstack_memory_used@@Base+0xe908>  // b.none
  446500:	and	x2, x6, #0xc00000
  446504:	orr	w0, w0, #0x10
  446508:	cmp	x2, #0x400, lsl #12
  44650c:	b.eq	446578 <_obstack_memory_used@@Base+0xe8f8>  // b.none
  446510:	cmp	x2, #0x800, lsl #12
  446514:	b.eq	446584 <_obstack_memory_used@@Base+0xe904>  // b.none
  446518:	cbnz	x2, 446588 <_obstack_memory_used@@Base+0xe908>
  44651c:	and	x2, x1, #0xf
  446520:	cmp	x2, #0x4
  446524:	b.eq	446588 <_obstack_memory_used@@Base+0xe908>  // b.none
  446528:	adds	x1, x1, #0x4
  44652c:	cinc	x12, x12, cs  // cs = hs, nlast
  446530:	b	446588 <_obstack_memory_used@@Base+0xe908>
  446534:	tbz	x11, #47, 446548 <_obstack_memory_used@@Base+0xe8c8>
  446538:	tbnz	x12, #47, 446548 <_obstack_memory_used@@Base+0xe8c8>
  44653c:	mov	x11, x12
  446540:	mov	x2, x1
  446544:	mov	x4, x16
  446548:	orr	x1, x11, #0x800000000000
  44654c:	mov	x5, x4
  446550:	mov	x3, #0x7fff                	// #32767
  446554:	b	4465a8 <_obstack_memory_used@@Base+0xe928>
  446558:	mov	x12, x11
  44655c:	mov	x1, x2
  446560:	mov	x5, x4
  446564:	b	446360 <_obstack_memory_used@@Base+0xe6e0>
  446568:	mov	x5, x16
  44656c:	b	446364 <_obstack_memory_used@@Base+0xe6e4>
  446570:	mov	x9, x10
  446574:	b	4464e8 <_obstack_memory_used@@Base+0xe868>
  446578:	cbnz	x5, 446588 <_obstack_memory_used@@Base+0xe908>
  44657c:	adds	x1, x1, #0x8
  446580:	b	44652c <_obstack_memory_used@@Base+0xe8ac>
  446584:	cbnz	x5, 44657c <_obstack_memory_used@@Base+0xe8fc>
  446588:	tbz	x12, #52, 446594 <_obstack_memory_used@@Base+0xe914>
  44658c:	and	x12, x12, #0xffefffffffffffff
  446590:	add	x3, x9, #0x4, lsl #12
  446594:	mov	x4, #0x7ffe                	// #32766
  446598:	cmp	x3, x4
  44659c:	b.gt	4465dc <_obstack_memory_used@@Base+0xe95c>
  4465a0:	extr	x2, x12, x1, #3
  4465a4:	lsr	x1, x12, #3
  4465a8:	and	x3, x3, #0x7fff
  4465ac:	mov	x7, #0x0                   	// #0
  4465b0:	bfxil	x7, x1, #0, #48
  4465b4:	orr	w3, w3, w5, lsl #15
  4465b8:	fmov	d0, x2
  4465bc:	bfi	x7, x3, #48, #16
  4465c0:	fmov	v0.d[1], x7
  4465c4:	cbz	w0, 4465d4 <_obstack_memory_used@@Base+0xe954>
  4465c8:	str	q0, [sp, #16]
  4465cc:	bl	446988 <_obstack_memory_used@@Base+0xed08>
  4465d0:	ldr	q0, [sp, #16]
  4465d4:	ldp	x29, x30, [sp], #32
  4465d8:	ret
  4465dc:	and	x2, x6, #0xc00000
  4465e0:	cmp	x2, #0x400, lsl #12
  4465e4:	b.eq	446608 <_obstack_memory_used@@Base+0xe988>  // b.none
  4465e8:	cmp	x2, #0x800, lsl #12
  4465ec:	b.eq	44661c <_obstack_memory_used@@Base+0xe99c>  // b.none
  4465f0:	cbnz	x2, 446630 <_obstack_memory_used@@Base+0xe9b0>
  4465f4:	mov	x3, #0x7fff                	// #32767
  4465f8:	mov	w1, #0x14                  	// #20
  4465fc:	orr	w0, w0, w1
  446600:	mov	x1, x2
  446604:	b	4465a8 <_obstack_memory_used@@Base+0xe928>
  446608:	cmp	x5, #0x0
  44660c:	mov	x3, #0x7fff                	// #32767
  446610:	csetm	x2, ne  // ne = any
  446614:	csel	x3, x3, x4, eq  // eq = none
  446618:	b	4465f8 <_obstack_memory_used@@Base+0xe978>
  44661c:	cmp	x5, #0x0
  446620:	mov	x3, #0x7fff                	// #32767
  446624:	csetm	x2, eq  // eq = none
  446628:	csel	x3, x3, x4, ne  // ne = any
  44662c:	b	4465f8 <_obstack_memory_used@@Base+0xe978>
  446630:	mov	x3, x4
  446634:	mov	x2, #0xffffffffffffffff    	// #-1
  446638:	b	4465f8 <_obstack_memory_used@@Base+0xe978>
  44663c:	mov	x4, #0x1                   	// #1
  446640:	sub	x3, x4, x3
  446644:	cmp	x3, #0x74
  446648:	b.gt	446730 <_obstack_memory_used@@Base+0xeab0>
  44664c:	cmp	x3, #0x3f
  446650:	b.gt	4466b8 <_obstack_memory_used@@Base+0xea38>
  446654:	mov	w4, #0x40                  	// #64
  446658:	sub	w4, w4, w3
  44665c:	lsr	x7, x1, x3
  446660:	lsl	x1, x1, x4
  446664:	cmp	x1, #0x0
  446668:	cset	x1, ne  // ne = any
  44666c:	lsl	x2, x12, x4
  446670:	orr	x2, x2, x7
  446674:	orr	x2, x2, x1
  446678:	lsr	x1, x12, x3
  44667c:	tst	x2, #0x7
  446680:	b.eq	4466fc <_obstack_memory_used@@Base+0xea7c>  // b.none
  446684:	and	x3, x6, #0xc00000
  446688:	orr	w0, w0, #0x10
  44668c:	cmp	x3, #0x400, lsl #12
  446690:	b.eq	4466ec <_obstack_memory_used@@Base+0xea6c>  // b.none
  446694:	cmp	x3, #0x800, lsl #12
  446698:	b.eq	4466f8 <_obstack_memory_used@@Base+0xea78>  // b.none
  44669c:	cbnz	x3, 4466fc <_obstack_memory_used@@Base+0xea7c>
  4466a0:	and	x3, x2, #0xf
  4466a4:	cmp	x3, #0x4
  4466a8:	b.eq	4466fc <_obstack_memory_used@@Base+0xea7c>  // b.none
  4466ac:	adds	x2, x2, #0x4
  4466b0:	cinc	x1, x1, cs  // cs = hs, nlast
  4466b4:	b	4466fc <_obstack_memory_used@@Base+0xea7c>
  4466b8:	sub	w2, w3, #0x40
  4466bc:	mov	w4, #0x80                  	// #128
  4466c0:	sub	w4, w4, w3
  4466c4:	cmp	x3, #0x40
  4466c8:	lsr	x2, x12, x2
  4466cc:	lsl	x12, x12, x4
  4466d0:	csel	x12, x12, xzr, ne  // ne = any
  4466d4:	orr	x1, x12, x1
  4466d8:	cmp	x1, #0x0
  4466dc:	cset	x1, ne  // ne = any
  4466e0:	orr	x2, x2, x1
  4466e4:	mov	x1, #0x0                   	// #0
  4466e8:	b	44667c <_obstack_memory_used@@Base+0xe9fc>
  4466ec:	cbnz	x5, 4466fc <_obstack_memory_used@@Base+0xea7c>
  4466f0:	adds	x2, x2, #0x8
  4466f4:	b	4466b0 <_obstack_memory_used@@Base+0xea30>
  4466f8:	cbnz	x5, 4466f0 <_obstack_memory_used@@Base+0xea70>
  4466fc:	tbz	x1, #51, 446718 <_obstack_memory_used@@Base+0xea98>
  446700:	orr	w0, w0, #0x10
  446704:	mov	x1, #0x0                   	// #0
  446708:	mov	x2, #0x0                   	// #0
  44670c:	mov	x3, #0x1                   	// #1
  446710:	orr	w0, w0, #0x8
  446714:	b	4465a8 <_obstack_memory_used@@Base+0xe928>
  446718:	mov	x3, #0x0                   	// #0
  44671c:	extr	x2, x1, x2, #3
  446720:	lsr	x1, x1, #3
  446724:	tbnz	w0, #4, 446710 <_obstack_memory_used@@Base+0xea90>
  446728:	tbz	w6, #11, 4465a8 <_obstack_memory_used@@Base+0xe928>
  44672c:	b	446710 <_obstack_memory_used@@Base+0xea90>
  446730:	orr	x2, x1, x12
  446734:	cbz	x2, 446760 <_obstack_memory_used@@Base+0xeae0>
  446738:	and	x6, x6, #0xc00000
  44673c:	orr	w0, w0, #0x10
  446740:	cmp	x6, #0x400, lsl #12
  446744:	b.eq	446770 <_obstack_memory_used@@Base+0xeaf0>  // b.none
  446748:	cmp	x6, #0x800, lsl #12
  44674c:	b.eq	446780 <_obstack_memory_used@@Base+0xeb00>  // b.none
  446750:	cmp	x6, #0x0
  446754:	mov	x2, #0x5                   	// #5
  446758:	csel	x4, x4, x2, ne  // ne = any
  44675c:	lsr	x2, x4, #3
  446760:	orr	w0, w0, #0x8
  446764:	mov	x1, #0x0                   	// #0
  446768:	mov	x3, #0x0                   	// #0
  44676c:	b	4465a8 <_obstack_memory_used@@Base+0xe928>
  446770:	cmp	x5, #0x0
  446774:	mov	x2, #0x9                   	// #9
  446778:	csel	x4, x2, x4, eq  // eq = none
  44677c:	b	44675c <_obstack_memory_used@@Base+0xeadc>
  446780:	cmp	x5, #0x0
  446784:	mov	x2, #0x9                   	// #9
  446788:	csel	x4, x2, x4, ne  // ne = any
  44678c:	b	44675c <_obstack_memory_used@@Base+0xeadc>
  446790:	mov	x11, #0xffffffffffff        	// #281474976710655
  446794:	mov	x2, #0xffffffffffffffff    	// #-1
  446798:	mov	w0, #0x1                   	// #1
  44679c:	mov	x4, #0x0                   	// #0
  4467a0:	b	446548 <_obstack_memory_used@@Base+0xe8c8>
  4467a4:	mov	x11, x12
  4467a8:	mov	x2, x1
  4467ac:	mov	x4, x5
  4467b0:	b	446548 <_obstack_memory_used@@Base+0xe8c8>
  4467b4:	mov	x1, #0x0                   	// #0
  4467b8:	mov	x2, #0x0                   	// #0
  4467bc:	b	446550 <_obstack_memory_used@@Base+0xe8d0>
  4467c0:	cbz	w0, 446800 <_obstack_memory_used@@Base+0xeb80>
  4467c4:	mov	w0, w0
  4467c8:	mov	w1, #0x403e                	// #16446
  4467cc:	clz	x2, x0
  4467d0:	sub	w1, w1, w2
  4467d4:	mov	w2, #0x402f                	// #16431
  4467d8:	sxtw	x4, w1
  4467dc:	sub	w1, w2, w1
  4467e0:	lsl	x0, x0, x1
  4467e4:	mov	x3, #0x0                   	// #0
  4467e8:	mov	x2, #0x0                   	// #0
  4467ec:	bfxil	x3, x0, #0, #48
  4467f0:	fmov	d0, x2
  4467f4:	bfi	x3, x4, #48, #16
  4467f8:	fmov	v0.d[1], x3
  4467fc:	ret
  446800:	mov	x0, #0x0                   	// #0
  446804:	mov	x4, #0x0                   	// #0
  446808:	b	4467e4 <_obstack_memory_used@@Base+0xeb64>
  44680c:	stp	x29, x30, [sp, #-48]!
  446810:	mov	x29, sp
  446814:	str	x19, [sp, #16]
  446818:	str	q0, [sp, #32]
  44681c:	ldr	x19, [sp, #32]
  446820:	ldr	x0, [sp, #40]
  446824:	mrs	x1, fpcr
  446828:	ubfx	x3, x0, #48, #15
  44682c:	mov	x1, x19
  446830:	mov	x4, #0x3ffe                	// #16382
  446834:	ubfx	x19, x0, #0, #48
  446838:	cmp	x3, x4
  44683c:	b.gt	44685c <_obstack_memory_used@@Base+0xebdc>
  446840:	cbnz	x3, 446904 <_obstack_memory_used@@Base+0xec84>
  446844:	orr	x19, x1, x19
  446848:	cbnz	x19, 446904 <_obstack_memory_used@@Base+0xec84>
  44684c:	mov	x0, x19
  446850:	ldr	x19, [sp, #16]
  446854:	ldp	x29, x30, [sp], #48
  446858:	ret
  44685c:	lsr	x0, x0, #63
  446860:	mov	x4, #0x403f                	// #16447
  446864:	and	w0, w0, #0xff
  446868:	and	x5, x0, #0xff
  44686c:	sub	x4, x4, x5
  446870:	cmp	x4, x3
  446874:	b.le	4468c0 <_obstack_memory_used@@Base+0xec40>
  446878:	cbnz	x5, 446910 <_obstack_memory_used@@Base+0xec90>
  44687c:	mov	x4, #0x406f                	// #16495
  446880:	sub	x2, x4, x3
  446884:	orr	x0, x19, #0x1000000000000
  446888:	cmp	x2, #0x3f
  44688c:	b.gt	4468d4 <_obstack_memory_used@@Base+0xec54>
  446890:	mov	w5, #0xffffbfd1            	// #-16431
  446894:	add	w5, w3, w5
  446898:	sub	w19, w4, w3
  44689c:	lsl	x2, x1, x5
  4468a0:	cmp	x2, #0x0
  4468a4:	lsr	x1, x1, x19
  4468a8:	cset	w2, ne  // ne = any
  4468ac:	lsl	x19, x0, x5
  4468b0:	orr	x19, x1, x19
  4468b4:	cbz	w2, 44684c <_obstack_memory_used@@Base+0xebcc>
  4468b8:	mov	w0, #0x10                  	// #16
  4468bc:	b	4468cc <_obstack_memory_used@@Base+0xec4c>
  4468c0:	eor	w0, w0, #0x1
  4468c4:	sbfx	x19, x0, #0, #1
  4468c8:	mov	w0, #0x1                   	// #1
  4468cc:	bl	446988 <_obstack_memory_used@@Base+0xed08>
  4468d0:	b	44684c <_obstack_memory_used@@Base+0xebcc>
  4468d4:	mov	w4, #0xffffc011            	// #-16367
  4468d8:	add	w19, w3, w4
  4468dc:	cmp	x2, #0x40
  4468e0:	lsl	x19, x0, x19
  4468e4:	csel	x19, x19, xzr, ne  // ne = any
  4468e8:	orr	x19, x19, x1
  4468ec:	cmp	x19, #0x0
  4468f0:	mov	w19, #0x402f                	// #16431
  4468f4:	sub	w19, w19, w3
  4468f8:	cset	w2, ne  // ne = any
  4468fc:	lsr	x19, x0, x19
  446900:	b	4468b4 <_obstack_memory_used@@Base+0xec34>
  446904:	mov	w0, #0x10                  	// #16
  446908:	mov	x19, #0x0                   	// #0
  44690c:	b	4468cc <_obstack_memory_used@@Base+0xec4c>
  446910:	mov	w0, #0x1                   	// #1
  446914:	b	446908 <_obstack_memory_used@@Base+0xec88>
  446918:	cbz	x0, 44697c <_obstack_memory_used@@Base+0xecfc>
  44691c:	clz	x2, x0
  446920:	mov	w1, #0x403e                	// #16446
  446924:	sub	w2, w1, w2
  446928:	mov	x3, #0x406f                	// #16495
  44692c:	sub	x1, x3, w2, sxtw
  446930:	sxtw	x4, w2
  446934:	cmp	x1, #0x3f
  446938:	b.gt	446968 <_obstack_memory_used@@Base+0xece8>
  44693c:	mov	w1, #0xffffbfd1            	// #-16431
  446940:	add	w1, w2, w1
  446944:	sub	w2, w3, w2
  446948:	lsr	x1, x0, x1
  44694c:	lsl	x0, x0, x2
  446950:	mov	x3, #0x0                   	// #0
  446954:	fmov	d0, x0
  446958:	bfxil	x3, x1, #0, #48
  44695c:	bfi	x3, x4, #48, #16
  446960:	fmov	v0.d[1], x3
  446964:	ret
  446968:	mov	w1, #0x402f                	// #16431
  44696c:	sub	w1, w1, w2
  446970:	lsl	x1, x0, x1
  446974:	mov	x0, #0x0                   	// #0
  446978:	b	446950 <_obstack_memory_used@@Base+0xecd0>
  44697c:	mov	x1, #0x0                   	// #0
  446980:	mov	x4, #0x0                   	// #0
  446984:	b	446950 <_obstack_memory_used@@Base+0xecd0>
  446988:	tbz	w0, #0, 446998 <_obstack_memory_used@@Base+0xed18>
  44698c:	movi	v1.2s, #0x0
  446990:	fdiv	s0, s1, s1
  446994:	mrs	x1, fpsr
  446998:	tbz	w0, #1, 4469ac <_obstack_memory_used@@Base+0xed2c>
  44699c:	fmov	s1, #1.000000000000000000e+00
  4469a0:	movi	v2.2s, #0x0
  4469a4:	fdiv	s0, s1, s2
  4469a8:	mrs	x1, fpsr
  4469ac:	tbz	w0, #2, 4469cc <_obstack_memory_used@@Base+0xed4c>
  4469b0:	mov	w1, #0x7f7fffff            	// #2139095039
  4469b4:	fmov	s1, w1
  4469b8:	mov	w1, #0xc5ae                	// #50606
  4469bc:	movk	w1, #0x749d, lsl #16
  4469c0:	fmov	s2, w1
  4469c4:	fadd	s0, s1, s2
  4469c8:	mrs	x1, fpsr
  4469cc:	tbz	w0, #3, 4469dc <_obstack_memory_used@@Base+0xed5c>
  4469d0:	movi	v1.2s, #0x80, lsl #16
  4469d4:	fmul	s0, s1, s1
  4469d8:	mrs	x1, fpsr
  4469dc:	tbz	w0, #4, 4469f4 <_obstack_memory_used@@Base+0xed74>
  4469e0:	mov	w0, #0x7f7fffff            	// #2139095039
  4469e4:	fmov	s2, #1.000000000000000000e+00
  4469e8:	fmov	s1, w0
  4469ec:	fsub	s0, s1, s2
  4469f0:	mrs	x0, fpsr
  4469f4:	ret
  4469f8:	stp	x29, x30, [sp, #-64]!
  4469fc:	mov	x29, sp
  446a00:	stp	x19, x20, [sp, #16]
  446a04:	adrp	x20, 46d000 <_obstack_memory_used@@Base+0x35380>
  446a08:	add	x20, x20, #0xde0
  446a0c:	stp	x21, x22, [sp, #32]
  446a10:	adrp	x21, 46d000 <_obstack_memory_used@@Base+0x35380>
  446a14:	add	x21, x21, #0xdd8
  446a18:	sub	x20, x20, x21
  446a1c:	mov	w22, w0
  446a20:	stp	x23, x24, [sp, #48]
  446a24:	mov	x23, x1
  446a28:	mov	x24, x2
  446a2c:	bl	4041b8 <mbrtowc@plt-0x38>
  446a30:	cmp	xzr, x20, asr #3
  446a34:	b.eq	446a60 <_obstack_memory_used@@Base+0xede0>  // b.none
  446a38:	asr	x20, x20, #3
  446a3c:	mov	x19, #0x0                   	// #0
  446a40:	ldr	x3, [x21, x19, lsl #3]
  446a44:	mov	x2, x24
  446a48:	add	x19, x19, #0x1
  446a4c:	mov	x1, x23
  446a50:	mov	w0, w22
  446a54:	blr	x3
  446a58:	cmp	x20, x19
  446a5c:	b.ne	446a40 <_obstack_memory_used@@Base+0xedc0>  // b.any
  446a60:	ldp	x19, x20, [sp, #16]
  446a64:	ldp	x21, x22, [sp, #32]
  446a68:	ldp	x23, x24, [sp, #48]
  446a6c:	ldp	x29, x30, [sp], #64
  446a70:	ret
  446a74:	nop
  446a78:	ret
  446a7c:	nop
  446a80:	mov	x2, x1
  446a84:	mov	x1, x0
  446a88:	mov	w0, #0x0                   	// #0
  446a8c:	b	404e60 <__xstat@plt>
  446a90:	mov	x2, x1
  446a94:	mov	w1, w0
  446a98:	mov	w0, #0x0                   	// #0
  446a9c:	b	404ce0 <__fxstat@plt>
  446aa0:	mov	x4, x1
  446aa4:	mov	x5, x2
  446aa8:	mov	w1, w0
  446aac:	mov	x2, x4
  446ab0:	mov	w0, #0x0                   	// #0
  446ab4:	mov	w4, w3
  446ab8:	mov	x3, x5
  446abc:	b	404f30 <__fxstatat@plt>
  446ac0:	stp	x29, x30, [sp, #-32]!
  446ac4:	mov	w5, w2
  446ac8:	mov	x4, x1
  446acc:	mov	x29, sp
  446ad0:	mov	w1, w0
  446ad4:	mov	x2, x4
  446ad8:	mov	w0, #0x0                   	// #0
  446adc:	add	x4, sp, #0x18
  446ae0:	str	x3, [sp, #24]
  446ae4:	mov	w3, w5
  446ae8:	bl	404770 <__xmknodat@plt>
  446aec:	ldp	x29, x30, [sp], #32
  446af0:	ret

Disassembly of section .fini:

0000000000446af4 <.fini>:
  446af4:	stp	x29, x30, [sp, #-16]!
  446af8:	mov	x29, sp
  446afc:	ldp	x29, x30, [sp], #16
  446b00:	ret
