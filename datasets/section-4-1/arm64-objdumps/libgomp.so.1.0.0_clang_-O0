
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgomp.so.1.0.0_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000008660 <.init>:
    8660:	stp	x29, x30, [sp, #-16]!
    8664:	mov	x29, sp
    8668:	bl	8c40 <fprintf@plt+0x10>
    866c:	ldp	x29, x30, [sp], #16
    8670:	ret

Disassembly of section .plt:

0000000000008680 <memcpy@plt-0x20>:
    8680:	stp	x16, x30, [sp, #-16]!
    8684:	adrp	x16, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    8688:	ldr	x17, [x16, #4088]
    868c:	add	x16, x16, #0xff8
    8690:	br	x17
    8694:	nop
    8698:	nop
    869c:	nop

00000000000086a0 <memcpy@plt>:
    86a0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    86a4:	ldr	x17, [x16]
    86a8:	add	x16, x16, #0x0
    86ac:	br	x17

00000000000086b0 <memmove@plt>:
    86b0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    86b4:	ldr	x17, [x16, #8]
    86b8:	add	x16, x16, #0x8
    86bc:	br	x17

00000000000086c0 <strtoul@plt>:
    86c0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    86c4:	ldr	x17, [x16, #16]
    86c8:	add	x16, x16, #0x10
    86cc:	br	x17

00000000000086d0 <strlen@plt>:
    86d0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    86d4:	ldr	x17, [x16, #24]
    86d8:	add	x16, x16, #0x18
    86dc:	br	x17

00000000000086e0 <fputs@plt>:
    86e0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    86e4:	ldr	x17, [x16, #32]
    86e8:	add	x16, x16, #0x20
    86ec:	br	x17

00000000000086f0 <exit@plt>:
    86f0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    86f4:	ldr	x17, [x16, #40]
    86f8:	add	x16, x16, #0x28
    86fc:	br	x17

0000000000008700 <acc_wait_all@plt>:
    8700:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8704:	ldr	x17, [x16, #48]
    8708:	add	x16, x16, #0x30
    870c:	br	x17

0000000000008710 <secure_getenv@plt>:
    8710:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8714:	ldr	x17, [x16, #56]
    8718:	add	x16, x16, #0x38
    871c:	br	x17

0000000000008720 <pthread_key_create@plt>:
    8720:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8724:	ldr	x17, [x16, #64]
    8728:	add	x16, x16, #0x40
    872c:	br	x17

0000000000008730 <acc_copyout_finalize@plt>:
    8730:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8734:	ldr	x17, [x16, #72]
    8738:	add	x16, x16, #0x48
    873c:	br	x17

0000000000008740 <__cxa_finalize@plt>:
    8740:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8744:	ldr	x17, [x16, #80]
    8748:	add	x16, x16, #0x50
    874c:	br	x17

0000000000008750 <sprintf@plt>:
    8750:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8754:	ldr	x17, [x16, #88]
    8758:	add	x16, x16, #0x58
    875c:	br	x17

0000000000008760 <getloadavg@plt>:
    8760:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8764:	ldr	x17, [x16, #96]
    8768:	add	x16, x16, #0x60
    876c:	br	x17

0000000000008770 <__cxa_atexit@plt>:
    8770:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8774:	ldr	x17, [x16, #104]
    8778:	add	x16, x16, #0x68
    877c:	br	x17

0000000000008780 <pthread_attr_init@plt>:
    8780:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8784:	ldr	x17, [x16, #112]
    8788:	add	x16, x16, #0x70
    878c:	br	x17

0000000000008790 <fputc@plt>:
    8790:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8794:	ldr	x17, [x16, #120]
    8798:	add	x16, x16, #0x78
    879c:	br	x17

00000000000087a0 <clock_gettime@plt>:
    87a0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    87a4:	ldr	x17, [x16, #128]
    87a8:	add	x16, x16, #0x80
    87ac:	br	x17

00000000000087b0 <acc_copyin@plt>:
    87b0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    87b4:	ldr	x17, [x16, #136]
    87b8:	add	x16, x16, #0x88
    87bc:	br	x17

00000000000087c0 <dlclose@plt>:
    87c0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    87c4:	ldr	x17, [x16, #144]
    87c8:	add	x16, x16, #0x90
    87cc:	br	x17

00000000000087d0 <acc_delete_finalize@plt>:
    87d0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    87d4:	ldr	x17, [x16, #152]
    87d8:	add	x16, x16, #0x98
    87dc:	br	x17

00000000000087e0 <dlopen@plt>:
    87e0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    87e4:	ldr	x17, [x16, #160]
    87e8:	add	x16, x16, #0xa0
    87ec:	br	x17

00000000000087f0 <acc_create@plt>:
    87f0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    87f4:	ldr	x17, [x16, #168]
    87f8:	add	x16, x16, #0xa8
    87fc:	br	x17

0000000000008800 <acc_unmap_data@plt>:
    8800:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8804:	ldr	x17, [x16, #176]
    8808:	add	x16, x16, #0xb0
    880c:	br	x17

0000000000008810 <acc_wait_async@plt>:
    8810:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8814:	ldr	x17, [x16, #184]
    8818:	add	x16, x16, #0xb8
    881c:	br	x17

0000000000008820 <fclose@plt>:
    8820:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8824:	ldr	x17, [x16, #192]
    8828:	add	x16, x16, #0xc0
    882c:	br	x17

0000000000008830 <getpid@plt>:
    8830:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8834:	ldr	x17, [x16, #200]
    8838:	add	x16, x16, #0xc8
    883c:	br	x17

0000000000008840 <fopen@plt>:
    8840:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8844:	ldr	x17, [x16, #208]
    8848:	add	x16, x16, #0xd0
    884c:	br	x17

0000000000008850 <malloc@plt>:
    8850:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8854:	ldr	x17, [x16, #216]
    8858:	add	x16, x16, #0xd8
    885c:	br	x17

0000000000008860 <acc_async_test@plt>:
    8860:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8864:	ldr	x17, [x16, #224]
    8868:	add	x16, x16, #0xe0
    886c:	br	x17

0000000000008870 <dlerror@plt>:
    8870:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8874:	ldr	x17, [x16, #232]
    8878:	add	x16, x16, #0xe8
    887c:	br	x17

0000000000008880 <dlsym@plt>:
    8880:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8884:	ldr	x17, [x16, #240]
    8888:	add	x16, x16, #0xf0
    888c:	br	x17

0000000000008890 <pthread_attr_destroy@plt>:
    8890:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8894:	ldr	x17, [x16, #248]
    8898:	add	x16, x16, #0xf8
    889c:	br	x17

00000000000088a0 <strncmp@plt>:
    88a0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    88a4:	ldr	x17, [x16, #256]
    88a8:	add	x16, x16, #0x100
    88ac:	br	x17

00000000000088b0 <aligned_alloc@plt>:
    88b0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    88b4:	ldr	x17, [x16, #264]
    88b8:	add	x16, x16, #0x108
    88bc:	br	x17

00000000000088c0 <pthread_detach@plt>:
    88c0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    88c4:	ldr	x17, [x16, #272]
    88c8:	add	x16, x16, #0x110
    88cc:	br	x17

00000000000088d0 <memset@plt>:
    88d0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    88d4:	ldr	x17, [x16, #280]
    88d8:	add	x16, x16, #0x118
    88dc:	br	x17

00000000000088e0 <pthread_attr_setstacksize@plt>:
    88e0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    88e4:	ldr	x17, [x16, #288]
    88e8:	add	x16, x16, #0x120
    88ec:	br	x17

00000000000088f0 <calloc@plt>:
    88f0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    88f4:	ldr	x17, [x16, #296]
    88f8:	add	x16, x16, #0x128
    88fc:	br	x17

0000000000008900 <acc_is_present@plt>:
    8900:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8904:	ldr	x17, [x16, #304]
    8908:	add	x16, x16, #0x130
    890c:	br	x17

0000000000008910 <strcasecmp@plt>:
    8910:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8914:	ldr	x17, [x16, #312]
    8918:	add	x16, x16, #0x138
    891c:	br	x17

0000000000008920 <realloc@plt>:
    8920:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8924:	ldr	x17, [x16, #320]
    8928:	add	x16, x16, #0x140
    892c:	br	x17

0000000000008930 <strdup@plt>:
    8930:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8934:	ldr	x17, [x16, #328]
    8938:	add	x16, x16, #0x148
    893c:	br	x17

0000000000008940 <strerror@plt>:
    8940:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8944:	ldr	x17, [x16, #336]
    8948:	add	x16, x16, #0x150
    894c:	br	x17

0000000000008950 <pthread_create@plt>:
    8950:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8954:	ldr	x17, [x16, #344]
    8958:	add	x16, x16, #0x158
    895c:	br	x17

0000000000008960 <__gmon_start__@plt>:
    8960:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8964:	ldr	x17, [x16, #352]
    8968:	add	x16, x16, #0x160
    896c:	br	x17

0000000000008970 <pthread_join@plt>:
    8970:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8974:	ldr	x17, [x16, #360]
    8978:	add	x16, x16, #0x168
    897c:	br	x17

0000000000008980 <abort@plt>:
    8980:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8984:	ldr	x17, [x16, #368]
    8988:	add	x16, x16, #0x170
    898c:	br	x17

0000000000008990 <pthread_exit@plt>:
    8990:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8994:	ldr	x17, [x16, #376]
    8998:	add	x16, x16, #0x178
    899c:	br	x17

00000000000089a0 <memcmp@plt>:
    89a0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    89a4:	ldr	x17, [x16, #384]
    89a8:	add	x16, x16, #0x180
    89ac:	br	x17

00000000000089b0 <strcmp@plt>:
    89b0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    89b4:	ldr	x17, [x16, #392]
    89b8:	add	x16, x16, #0x188
    89bc:	br	x17

00000000000089c0 <__ctype_b_loc@plt>:
    89c0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    89c4:	ldr	x17, [x16, #400]
    89c8:	add	x16, x16, #0x190
    89cc:	br	x17

00000000000089d0 <strtol@plt>:
    89d0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    89d4:	ldr	x17, [x16, #408]
    89d8:	add	x16, x16, #0x198
    89dc:	br	x17

00000000000089e0 <acc_wait_all_async@plt>:
    89e0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    89e4:	ldr	x17, [x16, #416]
    89e8:	add	x16, x16, #0x1a0
    89ec:	br	x17

00000000000089f0 <getline@plt>:
    89f0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    89f4:	ldr	x17, [x16, #424]
    89f8:	add	x16, x16, #0x1a8
    89fc:	br	x17

0000000000008a00 <acc_deviceptr@plt>:
    8a00:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a04:	ldr	x17, [x16, #432]
    8a08:	add	x16, x16, #0x1b0
    8a0c:	br	x17

0000000000008a10 <clock_getres@plt>:
    8a10:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a14:	ldr	x17, [x16, #440]
    8a18:	add	x16, x16, #0x1b8
    8a1c:	br	x17

0000000000008a20 <free@plt>:
    8a20:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a24:	ldr	x17, [x16, #448]
    8a28:	add	x16, x16, #0x1c0
    8a2c:	br	x17

0000000000008a30 <acc_delete@plt>:
    8a30:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a34:	ldr	x17, [x16, #456]
    8a38:	add	x16, x16, #0x1c8
    8a3c:	br	x17

0000000000008a40 <GOMP_offload_unregister_ver@plt>:
    8a40:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a44:	ldr	x17, [x16, #464]
    8a48:	add	x16, x16, #0x1d0
    8a4c:	br	x17

0000000000008a50 <pthread_key_delete@plt>:
    8a50:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a54:	ldr	x17, [x16, #472]
    8a58:	add	x16, x16, #0x1d8
    8a5c:	br	x17

0000000000008a60 <strncasecmp@plt>:
    8a60:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a64:	ldr	x17, [x16, #480]
    8a68:	add	x16, x16, #0x1e0
    8a6c:	br	x17

0000000000008a70 <pthread_once@plt>:
    8a70:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a74:	ldr	x17, [x16, #488]
    8a78:	add	x16, x16, #0x1e8
    8a7c:	br	x17

0000000000008a80 <pthread_getaffinity_np@plt>:
    8a80:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a84:	ldr	x17, [x16, #496]
    8a88:	add	x16, x16, #0x1f0
    8a8c:	br	x17

0000000000008a90 <acc_init@plt>:
    8a90:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8a94:	ldr	x17, [x16, #504]
    8a98:	add	x16, x16, #0x1f8
    8a9c:	br	x17

0000000000008aa0 <acc_copyout@plt>:
    8aa0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8aa4:	ldr	x17, [x16, #512]
    8aa8:	add	x16, x16, #0x200
    8aac:	br	x17

0000000000008ab0 <acc_wait@plt>:
    8ab0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8ab4:	ldr	x17, [x16, #520]
    8ab8:	add	x16, x16, #0x208
    8abc:	br	x17

0000000000008ac0 <strchr@plt>:
    8ac0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8ac4:	ldr	x17, [x16, #528]
    8ac8:	add	x16, x16, #0x210
    8acc:	br	x17

0000000000008ad0 <pthread_setspecific@plt>:
    8ad0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8ad4:	ldr	x17, [x16, #536]
    8ad8:	add	x16, x16, #0x218
    8adc:	br	x17

0000000000008ae0 <strtoull@plt>:
    8ae0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8ae4:	ldr	x17, [x16, #544]
    8ae8:	add	x16, x16, #0x220
    8aec:	br	x17

0000000000008af0 <fwrite@plt>:
    8af0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8af4:	ldr	x17, [x16, #552]
    8af8:	add	x16, x16, #0x228
    8afc:	br	x17

0000000000008b00 <__sched_cpucount@plt>:
    8b00:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b04:	ldr	x17, [x16, #560]
    8b08:	add	x16, x16, #0x230
    8b0c:	br	x17

0000000000008b10 <acc_update_self@plt>:
    8b10:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b14:	ldr	x17, [x16, #568]
    8b18:	add	x16, x16, #0x238
    8b1c:	br	x17

0000000000008b20 <pthread_attr_getstacksize@plt>:
    8b20:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b24:	ldr	x17, [x16, #576]
    8b28:	add	x16, x16, #0x240
    8b2c:	br	x17

0000000000008b30 <GOMP_offload_register_ver@plt>:
    8b30:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b34:	ldr	x17, [x16, #584]
    8b38:	add	x16, x16, #0x248
    8b3c:	br	x17

0000000000008b40 <GOACC_enter_exit_data@plt>:
    8b40:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b44:	ldr	x17, [x16, #592]
    8b48:	add	x16, x16, #0x250
    8b4c:	br	x17

0000000000008b50 <sysconf@plt>:
    8b50:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b54:	ldr	x17, [x16, #600]
    8b58:	add	x16, x16, #0x258
    8b5c:	br	x17

0000000000008b60 <gethostname@plt>:
    8b60:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b64:	ldr	x17, [x16, #608]
    8b68:	add	x16, x16, #0x260
    8b6c:	br	x17

0000000000008b70 <omp_get_team_num@plt>:
    8b70:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b74:	ldr	x17, [x16, #616]
    8b78:	add	x16, x16, #0x268
    8b7c:	br	x17

0000000000008b80 <pthread_attr_setaffinity_np@plt>:
    8b80:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b84:	ldr	x17, [x16, #624]
    8b88:	add	x16, x16, #0x270
    8b8c:	br	x17

0000000000008b90 <pthread_setaffinity_np@plt>:
    8b90:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8b94:	ldr	x17, [x16, #632]
    8b98:	add	x16, x16, #0x278
    8b9c:	br	x17

0000000000008ba0 <omp_get_num_teams@plt>:
    8ba0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8ba4:	ldr	x17, [x16, #640]
    8ba8:	add	x16, x16, #0x280
    8bac:	br	x17

0000000000008bb0 <pthread_self@plt>:
    8bb0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8bb4:	ldr	x17, [x16, #648]
    8bb8:	add	x16, x16, #0x288
    8bbc:	br	x17

0000000000008bc0 <vfprintf@plt>:
    8bc0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8bc4:	ldr	x17, [x16, #656]
    8bc8:	add	x16, x16, #0x290
    8bcc:	br	x17

0000000000008bd0 <__assert_fail@plt>:
    8bd0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8bd4:	ldr	x17, [x16, #664]
    8bd8:	add	x16, x16, #0x298
    8bdc:	br	x17

0000000000008be0 <__errno_location@plt>:
    8be0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8be4:	ldr	x17, [x16, #672]
    8be8:	add	x16, x16, #0x2a0
    8bec:	br	x17

0000000000008bf0 <tolower@plt>:
    8bf0:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8bf4:	ldr	x17, [x16, #680]
    8bf8:	add	x16, x16, #0x2a8
    8bfc:	br	x17

0000000000008c00 <getenv@plt>:
    8c00:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8c04:	ldr	x17, [x16, #688]
    8c08:	add	x16, x16, #0x2b0
    8c0c:	br	x17

0000000000008c10 <syscall@plt>:
    8c10:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8c14:	ldr	x17, [x16, #696]
    8c18:	add	x16, x16, #0x2b8
    8c1c:	br	x17

0000000000008c20 <acc_update_device@plt>:
    8c20:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8c24:	ldr	x17, [x16, #704]
    8c28:	add	x16, x16, #0x2c0
    8c2c:	br	x17

0000000000008c30 <fprintf@plt>:
    8c30:	adrp	x16, 4f000 <memcpy@GLIBC_2.17>
    8c34:	ldr	x17, [x16, #712]
    8c38:	add	x16, x16, #0x2c8
    8c3c:	br	x17

Disassembly of section .text:

0000000000008c40 <GOMP_atomic_start@@GOMP_1.0-0x398>:
    8c40:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    8c44:	ldr	x0, [x0, #4056]
    8c48:	cbz	x0, 8c50 <fprintf@plt+0x20>
    8c4c:	b	8960 <__gmon_start__@plt>
    8c50:	ret
    8c54:	stp	x29, x30, [sp, #-32]!
    8c58:	mov	x29, sp
    8c5c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8c60:	add	x0, x0, #0x568
    8c64:	str	x0, [sp, #24]
    8c68:	ldr	x0, [sp, #24]
    8c6c:	str	x0, [sp, #24]
    8c70:	ldr	x1, [sp, #24]
    8c74:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8c78:	add	x0, x0, #0x568
    8c7c:	cmp	x1, x0
    8c80:	b.eq	8cb8 <fprintf@plt+0x88>  // b.none
    8c84:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    8c88:	ldr	x0, [x0, #4024]
    8c8c:	str	x0, [sp, #16]
    8c90:	ldr	x0, [sp, #16]
    8c94:	str	x0, [sp, #16]
    8c98:	ldr	x0, [sp, #16]
    8c9c:	cmp	x0, #0x0
    8ca0:	b.eq	8cbc <fprintf@plt+0x8c>  // b.none
    8ca4:	ldr	x1, [sp, #16]
    8ca8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8cac:	add	x0, x0, #0x568
    8cb0:	blr	x1
    8cb4:	b	8cbc <fprintf@plt+0x8c>
    8cb8:	nop
    8cbc:	ldp	x29, x30, [sp], #32
    8cc0:	ret
    8cc4:	stp	x29, x30, [sp, #-48]!
    8cc8:	mov	x29, sp
    8ccc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8cd0:	add	x0, x0, #0x568
    8cd4:	str	x0, [sp, #40]
    8cd8:	ldr	x0, [sp, #40]
    8cdc:	str	x0, [sp, #40]
    8ce0:	ldr	x1, [sp, #40]
    8ce4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8ce8:	add	x0, x0, #0x568
    8cec:	sub	x0, x1, x0
    8cf0:	asr	x0, x0, #3
    8cf4:	lsr	x1, x0, #63
    8cf8:	add	x0, x1, x0
    8cfc:	asr	x0, x0, #1
    8d00:	str	x0, [sp, #32]
    8d04:	ldr	x0, [sp, #32]
    8d08:	cmp	x0, #0x0
    8d0c:	b.eq	8d48 <fprintf@plt+0x118>  // b.none
    8d10:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    8d14:	ldr	x0, [x0, #4064]
    8d18:	str	x0, [sp, #24]
    8d1c:	ldr	x0, [sp, #24]
    8d20:	str	x0, [sp, #24]
    8d24:	ldr	x0, [sp, #24]
    8d28:	cmp	x0, #0x0
    8d2c:	b.eq	8d4c <fprintf@plt+0x11c>  // b.none
    8d30:	ldr	x2, [sp, #24]
    8d34:	ldr	x1, [sp, #32]
    8d38:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8d3c:	add	x0, x0, #0x568
    8d40:	blr	x2
    8d44:	b	8d4c <fprintf@plt+0x11c>
    8d48:	nop
    8d4c:	ldp	x29, x30, [sp], #48
    8d50:	ret
    8d54:	stp	x29, x30, [sp, #-16]!
    8d58:	mov	x29, sp
    8d5c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8d60:	add	x0, x0, #0x568
    8d64:	ldrb	w0, [x0]
    8d68:	and	x0, x0, #0xff
    8d6c:	cmp	x0, #0x0
    8d70:	b.ne	8dac <fprintf@plt+0x17c>  // b.any
    8d74:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    8d78:	ldr	x0, [x0, #4032]
    8d7c:	cmp	x0, #0x0
    8d80:	b.eq	8d94 <fprintf@plt+0x164>  // b.none
    8d84:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8d88:	add	x0, x0, #0x2d0
    8d8c:	ldr	x0, [x0]
    8d90:	bl	8740 <__cxa_finalize@plt>
    8d94:	bl	8c54 <fprintf@plt+0x24>
    8d98:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8d9c:	add	x0, x0, #0x568
    8da0:	mov	w1, #0x1                   	// #1
    8da4:	strb	w1, [x0]
    8da8:	b	8db0 <fprintf@plt+0x180>
    8dac:	nop
    8db0:	ldp	x29, x30, [sp], #16
    8db4:	ret
    8db8:	stp	x29, x30, [sp, #-16]!
    8dbc:	mov	x29, sp
    8dc0:	bl	8cc4 <fprintf@plt+0x94>
    8dc4:	nop
    8dc8:	ldp	x29, x30, [sp], #16
    8dcc:	ret
    8dd0:	stp	x29, x30, [sp, #-48]!
    8dd4:	mov	x29, sp
    8dd8:	str	x0, [sp, #24]
    8ddc:	ldr	x0, [sp, #24]
    8de0:	bl	8850 <malloc@plt>
    8de4:	str	x0, [sp, #40]
    8de8:	ldr	x0, [sp, #40]
    8dec:	cmp	x0, #0x0
    8df0:	b.ne	8e04 <fprintf@plt+0x1d4>  // b.any
    8df4:	ldr	x1, [sp, #24]
    8df8:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    8dfc:	add	x0, x0, #0xa68
    8e00:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
    8e04:	ldr	x0, [sp, #40]
    8e08:	ldp	x29, x30, [sp], #48
    8e0c:	ret
    8e10:	stp	x29, x30, [sp, #-48]!
    8e14:	mov	x29, sp
    8e18:	str	x0, [sp, #24]
    8e1c:	ldr	x1, [sp, #24]
    8e20:	mov	x0, #0x1                   	// #1
    8e24:	bl	88f0 <calloc@plt>
    8e28:	str	x0, [sp, #40]
    8e2c:	ldr	x0, [sp, #40]
    8e30:	cmp	x0, #0x0
    8e34:	b.ne	8e48 <fprintf@plt+0x218>  // b.any
    8e38:	ldr	x1, [sp, #24]
    8e3c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    8e40:	add	x0, x0, #0xa68
    8e44:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
    8e48:	ldr	x0, [sp, #40]
    8e4c:	ldp	x29, x30, [sp], #48
    8e50:	ret
    8e54:	stp	x29, x30, [sp, #-48]!
    8e58:	mov	x29, sp
    8e5c:	str	x0, [sp, #24]
    8e60:	str	x1, [sp, #16]
    8e64:	ldr	x1, [sp, #16]
    8e68:	ldr	x0, [sp, #24]
    8e6c:	bl	8920 <realloc@plt>
    8e70:	str	x0, [sp, #40]
    8e74:	ldr	x0, [sp, #40]
    8e78:	cmp	x0, #0x0
    8e7c:	b.ne	8e90 <fprintf@plt+0x260>  // b.any
    8e80:	ldr	x1, [sp, #16]
    8e84:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    8e88:	add	x0, x0, #0xa68
    8e8c:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
    8e90:	ldr	x0, [sp, #40]
    8e94:	ldp	x29, x30, [sp], #48
    8e98:	ret
    8e9c:	stp	x29, x30, [sp, #-48]!
    8ea0:	mov	x29, sp
    8ea4:	str	x0, [sp, #24]
    8ea8:	str	x1, [sp, #16]
    8eac:	ldr	x0, [sp, #24]
    8eb0:	cmp	x0, #0x7
    8eb4:	b.hi	8ec0 <fprintf@plt+0x290>  // b.pmore
    8eb8:	mov	x0, #0x8                   	// #8
    8ebc:	str	x0, [sp, #24]
    8ec0:	ldr	x1, [sp, #16]
    8ec4:	ldr	x0, [sp, #24]
    8ec8:	bl	88b0 <aligned_alloc@plt>
    8ecc:	str	x0, [sp, #40]
    8ed0:	ldr	x0, [sp, #40]
    8ed4:	cmp	x0, #0x0
    8ed8:	b.ne	8eec <fprintf@plt+0x2bc>  // b.any
    8edc:	ldr	x1, [sp, #16]
    8ee0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    8ee4:	add	x0, x0, #0xa68
    8ee8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
    8eec:	ldr	x0, [sp, #40]
    8ef0:	ldp	x29, x30, [sp], #48
    8ef4:	ret
    8ef8:	stp	x29, x30, [sp, #-32]!
    8efc:	mov	x29, sp
    8f00:	str	x0, [sp, #24]
    8f04:	ldr	x0, [sp, #24]
    8f08:	bl	8a20 <free@plt>
    8f0c:	nop
    8f10:	ldp	x29, x30, [sp], #32
    8f14:	ret
    8f18:	stp	x29, x30, [sp, #-48]!
    8f1c:	mov	x29, sp
    8f20:	str	x0, [sp, #24]
    8f24:	str	wzr, [sp, #44]
    8f28:	ldr	x1, [sp, #24]
    8f2c:	add	x0, sp, #0x2c
    8f30:	ldr	w3, [x0]
    8f34:	mov	w4, #0x1                   	// #1
    8f38:	ldaxr	w2, [x1]
    8f3c:	cmp	w2, w3
    8f40:	b.ne	8f4c <fprintf@plt+0x31c>  // b.any
    8f44:	stxr	w5, w4, [x1]
    8f48:	cbnz	w5, 8f38 <fprintf@plt+0x308>
    8f4c:	cset	w1, eq  // eq = none
    8f50:	cmp	w1, #0x0
    8f54:	b.ne	8f5c <fprintf@plt+0x32c>  // b.any
    8f58:	str	w2, [x0]
    8f5c:	mov	w0, w1
    8f60:	eor	w0, w0, #0x1
    8f64:	and	w0, w0, #0xff
    8f68:	cmp	w0, #0x0
    8f6c:	b.eq	8f80 <fprintf@plt+0x350>  // b.none
    8f70:	ldr	w0, [sp, #44]
    8f74:	mov	w1, w0
    8f78:	ldr	x0, [sp, #24]
    8f7c:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
    8f80:	nop
    8f84:	ldp	x29, x30, [sp], #48
    8f88:	ret
    8f8c:	stp	x29, x30, [sp, #-48]!
    8f90:	mov	x29, sp
    8f94:	str	x0, [sp, #24]
    8f98:	ldr	x1, [sp, #24]
    8f9c:	ldxr	w0, [x1]
    8fa0:	stlxr	w2, wzr, [x1]
    8fa4:	cbnz	w2, 8f9c <fprintf@plt+0x36c>
    8fa8:	str	w0, [sp, #44]
    8fac:	ldr	w0, [sp, #44]
    8fb0:	lsr	w0, w0, #31
    8fb4:	and	w0, w0, #0xff
    8fb8:	and	x0, x0, #0xff
    8fbc:	cmp	x0, #0x0
    8fc0:	b.eq	8fcc <fprintf@plt+0x39c>  // b.none
    8fc4:	ldr	x0, [sp, #24]
    8fc8:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
    8fcc:	nop
    8fd0:	ldp	x29, x30, [sp], #48
    8fd4:	ret

0000000000008fd8 <GOMP_atomic_start@@GOMP_1.0>:
    8fd8:	stp	x29, x30, [sp, #-16]!
    8fdc:	mov	x29, sp
    8fe0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    8fe4:	add	x0, x0, #0x56c
    8fe8:	bl	8f18 <fprintf@plt+0x2e8>
    8fec:	nop
    8ff0:	ldp	x29, x30, [sp], #16
    8ff4:	ret

0000000000008ff8 <GOMP_atomic_end@@GOMP_1.0>:
    8ff8:	stp	x29, x30, [sp, #-16]!
    8ffc:	mov	x29, sp
    9000:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9004:	add	x0, x0, #0x56c
    9008:	bl	8f8c <fprintf@plt+0x35c>
    900c:	nop
    9010:	ldp	x29, x30, [sp], #16
    9014:	ret
    9018:	mrs	x1, tpidr_el0
    901c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    9020:	ldr	x0, [x0, #4016]
    9024:	add	x0, x1, x0
    9028:	ret

000000000000902c <GOMP_barrier@@GOMP_1.0>:
    902c:	stp	x29, x30, [sp, #-32]!
    9030:	mov	x29, sp
    9034:	bl	9018 <GOMP_atomic_end@@GOMP_1.0+0x20>
    9038:	str	x0, [sp, #24]
    903c:	ldr	x0, [sp, #24]
    9040:	ldr	x0, [x0, #16]
    9044:	str	x0, [sp, #16]
    9048:	ldr	x0, [sp, #16]
    904c:	cmp	x0, #0x0
    9050:	b.eq	9064 <GOMP_barrier@@GOMP_1.0+0x38>  // b.none
    9054:	ldr	x0, [sp, #16]
    9058:	add	x0, x0, #0x80
    905c:	bl	221e8 <omp_get_num_procs@@OMP_1.0+0xb8c>
    9060:	b	9068 <GOMP_barrier@@GOMP_1.0+0x3c>
    9064:	nop
    9068:	ldp	x29, x30, [sp], #32
    906c:	ret

0000000000009070 <GOMP_barrier_cancel@@GOMP_4.0>:
    9070:	stp	x29, x30, [sp, #-32]!
    9074:	mov	x29, sp
    9078:	bl	9018 <GOMP_atomic_end@@GOMP_1.0+0x20>
    907c:	str	x0, [sp, #24]
    9080:	ldr	x0, [sp, #24]
    9084:	ldr	x0, [x0, #16]
    9088:	str	x0, [sp, #16]
    908c:	ldr	x0, [sp, #16]
    9090:	add	x0, x0, #0x80
    9094:	bl	223c4 <omp_get_num_procs@@OMP_1.0+0xd68>
    9098:	and	w0, w0, #0xff
    909c:	ldp	x29, x30, [sp], #32
    90a0:	ret
    90a4:	stp	x29, x30, [sp, #-48]!
    90a8:	mov	x29, sp
    90ac:	str	x0, [sp, #24]
    90b0:	str	wzr, [sp, #44]
    90b4:	ldr	x1, [sp, #24]
    90b8:	add	x0, sp, #0x2c
    90bc:	ldr	w3, [x0]
    90c0:	mov	w4, #0x1                   	// #1
    90c4:	ldaxr	w2, [x1]
    90c8:	cmp	w2, w3
    90cc:	b.ne	90d8 <GOMP_barrier_cancel@@GOMP_4.0+0x68>  // b.any
    90d0:	stxr	w5, w4, [x1]
    90d4:	cbnz	w5, 90c4 <GOMP_barrier_cancel@@GOMP_4.0+0x54>
    90d8:	cset	w1, eq  // eq = none
    90dc:	cmp	w1, #0x0
    90e0:	b.ne	90e8 <GOMP_barrier_cancel@@GOMP_4.0+0x78>  // b.any
    90e4:	str	w2, [x0]
    90e8:	mov	w0, w1
    90ec:	eor	w0, w0, #0x1
    90f0:	and	w0, w0, #0xff
    90f4:	cmp	w0, #0x0
    90f8:	b.eq	910c <GOMP_barrier_cancel@@GOMP_4.0+0x9c>  // b.none
    90fc:	ldr	w0, [sp, #44]
    9100:	mov	w1, w0
    9104:	ldr	x0, [sp, #24]
    9108:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
    910c:	nop
    9110:	ldp	x29, x30, [sp], #48
    9114:	ret
    9118:	stp	x29, x30, [sp, #-48]!
    911c:	mov	x29, sp
    9120:	str	x0, [sp, #24]
    9124:	ldr	x1, [sp, #24]
    9128:	ldxr	w0, [x1]
    912c:	stlxr	w2, wzr, [x1]
    9130:	cbnz	w2, 9128 <GOMP_barrier_cancel@@GOMP_4.0+0xb8>
    9134:	str	w0, [sp, #44]
    9138:	ldr	w0, [sp, #44]
    913c:	lsr	w0, w0, #31
    9140:	and	w0, w0, #0xff
    9144:	and	x0, x0, #0xff
    9148:	cmp	x0, #0x0
    914c:	b.eq	9158 <GOMP_barrier_cancel@@GOMP_4.0+0xe8>  // b.none
    9150:	ldr	x0, [sp, #24]
    9154:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
    9158:	nop
    915c:	ldp	x29, x30, [sp], #48
    9160:	ret

0000000000009164 <GOMP_critical_start@@GOMP_1.0>:
    9164:	stp	x29, x30, [sp, #-16]!
    9168:	mov	x29, sp
    916c:	dmb	ish
    9170:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9174:	add	x0, x0, #0x570
    9178:	bl	90a4 <GOMP_barrier_cancel@@GOMP_4.0+0x34>
    917c:	nop
    9180:	ldp	x29, x30, [sp], #16
    9184:	ret

0000000000009188 <GOMP_critical_end@@GOMP_1.0>:
    9188:	stp	x29, x30, [sp, #-16]!
    918c:	mov	x29, sp
    9190:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9194:	add	x0, x0, #0x570
    9198:	bl	9118 <GOMP_barrier_cancel@@GOMP_4.0+0xa8>
    919c:	nop
    91a0:	ldp	x29, x30, [sp], #16
    91a4:	ret

00000000000091a8 <GOMP_critical_name_start@@GOMP_1.0>:
    91a8:	stp	x29, x30, [sp, #-48]!
    91ac:	mov	x29, sp
    91b0:	str	x0, [sp, #24]
    91b4:	ldr	x0, [sp, #24]
    91b8:	str	x0, [sp, #40]
    91bc:	ldr	x0, [sp, #40]
    91c0:	bl	90a4 <GOMP_barrier_cancel@@GOMP_4.0+0x34>
    91c4:	nop
    91c8:	ldp	x29, x30, [sp], #48
    91cc:	ret

00000000000091d0 <GOMP_critical_name_end@@GOMP_1.0>:
    91d0:	stp	x29, x30, [sp, #-48]!
    91d4:	mov	x29, sp
    91d8:	str	x0, [sp, #24]
    91dc:	ldr	x0, [sp, #24]
    91e0:	str	x0, [sp, #40]
    91e4:	ldr	x0, [sp, #40]
    91e8:	bl	9118 <GOMP_barrier_cancel@@GOMP_4.0+0xa8>
    91ec:	nop
    91f0:	ldp	x29, x30, [sp], #48
    91f4:	ret
    91f8:	sub	sp, sp, #0x10
    91fc:	nop
    9200:	add	sp, sp, #0x10
    9204:	ret
    9208:	stp	x29, x30, [sp, #-48]!
    920c:	mov	x29, sp
    9210:	str	wzr, [sp, #28]
    9214:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    9218:	add	x0, x0, #0xab0
    921c:	bl	8c00 <getenv@plt>
    9220:	str	x0, [sp, #40]
    9224:	ldr	x0, [sp, #40]
    9228:	cmp	x0, #0x0
    922c:	b.eq	96a8 <GOMP_critical_name_end@@GOMP_1.0+0x4d8>  // b.none
    9230:	b	9240 <GOMP_critical_name_end@@GOMP_1.0+0x70>
    9234:	ldr	x0, [sp, #40]
    9238:	add	x0, x0, #0x1
    923c:	str	x0, [sp, #40]
    9240:	bl	89c0 <__ctype_b_loc@plt>
    9244:	ldr	x1, [x0]
    9248:	ldr	x0, [sp, #40]
    924c:	ldrb	w0, [x0]
    9250:	and	x0, x0, #0xff
    9254:	lsl	x0, x0, #1
    9258:	add	x0, x1, x0
    925c:	ldrh	w0, [x0]
    9260:	and	w0, w0, #0x2000
    9264:	cmp	w0, #0x0
    9268:	b.ne	9234 <GOMP_critical_name_end@@GOMP_1.0+0x64>  // b.any
    926c:	mov	x2, #0x9                   	// #9
    9270:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    9274:	add	x1, x0, #0xac0
    9278:	ldr	x0, [sp, #40]
    927c:	bl	8a60 <strncasecmp@plt>
    9280:	cmp	w0, #0x0
    9284:	b.ne	92a0 <GOMP_critical_name_end@@GOMP_1.0+0xd0>  // b.any
    9288:	mov	w0, #0x1                   	// #1
    928c:	str	w0, [sp, #28]
    9290:	ldr	x0, [sp, #40]
    9294:	add	x0, x0, #0x9
    9298:	str	x0, [sp, #40]
    929c:	b	92d0 <GOMP_critical_name_end@@GOMP_1.0+0x100>
    92a0:	mov	x2, #0xc                   	// #12
    92a4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    92a8:	add	x1, x0, #0xad0
    92ac:	ldr	x0, [sp, #40]
    92b0:	bl	8a60 <strncasecmp@plt>
    92b4:	cmp	w0, #0x0
    92b8:	b.ne	92d0 <GOMP_critical_name_end@@GOMP_1.0+0x100>  // b.any
    92bc:	mov	w0, #0xffffffff            	// #-1
    92c0:	str	w0, [sp, #28]
    92c4:	ldr	x0, [sp, #40]
    92c8:	add	x0, x0, #0xc
    92cc:	str	x0, [sp, #40]
    92d0:	ldr	w0, [sp, #28]
    92d4:	cmp	w0, #0x0
    92d8:	b.eq	9370 <GOMP_critical_name_end@@GOMP_1.0+0x1a0>  // b.none
    92dc:	b	92ec <GOMP_critical_name_end@@GOMP_1.0+0x11c>
    92e0:	ldr	x0, [sp, #40]
    92e4:	add	x0, x0, #0x1
    92e8:	str	x0, [sp, #40]
    92ec:	bl	89c0 <__ctype_b_loc@plt>
    92f0:	ldr	x1, [x0]
    92f4:	ldr	x0, [sp, #40]
    92f8:	ldrb	w0, [x0]
    92fc:	and	x0, x0, #0xff
    9300:	lsl	x0, x0, #1
    9304:	add	x0, x1, x0
    9308:	ldrh	w0, [x0]
    930c:	and	w0, w0, #0x2000
    9310:	cmp	w0, #0x0
    9314:	b.ne	92e0 <GOMP_critical_name_end@@GOMP_1.0+0x110>  // b.any
    9318:	ldr	x0, [sp, #40]
    931c:	ldrb	w0, [x0]
    9320:	cmp	w0, #0x3a
    9324:	b.ne	9658 <GOMP_critical_name_end@@GOMP_1.0+0x488>  // b.any
    9328:	ldr	x0, [sp, #40]
    932c:	add	x0, x0, #0x1
    9330:	str	x0, [sp, #40]
    9334:	b	9344 <GOMP_critical_name_end@@GOMP_1.0+0x174>
    9338:	ldr	x0, [sp, #40]
    933c:	add	x0, x0, #0x1
    9340:	str	x0, [sp, #40]
    9344:	bl	89c0 <__ctype_b_loc@plt>
    9348:	ldr	x1, [x0]
    934c:	ldr	x0, [sp, #40]
    9350:	ldrb	w0, [x0]
    9354:	and	x0, x0, #0xff
    9358:	lsl	x0, x0, #1
    935c:	add	x0, x1, x0
    9360:	ldrh	w0, [x0]
    9364:	and	w0, w0, #0x2000
    9368:	cmp	w0, #0x0
    936c:	b.ne	9338 <GOMP_critical_name_end@@GOMP_1.0+0x168>  // b.any
    9370:	mov	x2, #0x6                   	// #6
    9374:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    9378:	add	x1, x0, #0xae0
    937c:	ldr	x0, [sp, #40]
    9380:	bl	8a60 <strncasecmp@plt>
    9384:	cmp	w0, #0x0
    9388:	b.ne	93ac <GOMP_critical_name_end@@GOMP_1.0+0x1dc>  // b.any
    938c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9390:	add	x0, x0, #0x2d8
    9394:	mov	w1, #0x1                   	// #1
    9398:	str	w1, [x0, #8]
    939c:	ldr	x0, [sp, #40]
    93a0:	add	x0, x0, #0x6
    93a4:	str	x0, [sp, #40]
    93a8:	b	945c <GOMP_critical_name_end@@GOMP_1.0+0x28c>
    93ac:	mov	x2, #0x7                   	// #7
    93b0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    93b4:	add	x1, x0, #0xae8
    93b8:	ldr	x0, [sp, #40]
    93bc:	bl	8a60 <strncasecmp@plt>
    93c0:	cmp	w0, #0x0
    93c4:	b.ne	93e8 <GOMP_critical_name_end@@GOMP_1.0+0x218>  // b.any
    93c8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    93cc:	add	x0, x0, #0x2d8
    93d0:	mov	w1, #0x2                   	// #2
    93d4:	str	w1, [x0, #8]
    93d8:	ldr	x0, [sp, #40]
    93dc:	add	x0, x0, #0x7
    93e0:	str	x0, [sp, #40]
    93e4:	b	945c <GOMP_critical_name_end@@GOMP_1.0+0x28c>
    93e8:	mov	x2, #0x6                   	// #6
    93ec:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    93f0:	add	x1, x0, #0xaf0
    93f4:	ldr	x0, [sp, #40]
    93f8:	bl	8a60 <strncasecmp@plt>
    93fc:	cmp	w0, #0x0
    9400:	b.ne	9424 <GOMP_critical_name_end@@GOMP_1.0+0x254>  // b.any
    9404:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9408:	add	x0, x0, #0x2d8
    940c:	mov	w1, #0x3                   	// #3
    9410:	str	w1, [x0, #8]
    9414:	ldr	x0, [sp, #40]
    9418:	add	x0, x0, #0x6
    941c:	str	x0, [sp, #40]
    9420:	b	945c <GOMP_critical_name_end@@GOMP_1.0+0x28c>
    9424:	mov	x2, #0x4                   	// #4
    9428:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    942c:	add	x1, x0, #0xaf8
    9430:	ldr	x0, [sp, #40]
    9434:	bl	8a60 <strncasecmp@plt>
    9438:	cmp	w0, #0x0
    943c:	b.ne	9660 <GOMP_critical_name_end@@GOMP_1.0+0x490>  // b.any
    9440:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9444:	add	x0, x0, #0x2d8
    9448:	mov	w1, #0x4                   	// #4
    944c:	str	w1, [x0, #8]
    9450:	ldr	x0, [sp, #40]
    9454:	add	x0, x0, #0x4
    9458:	str	x0, [sp, #40]
    945c:	ldr	w0, [sp, #28]
    9460:	cmp	w0, #0x1
    9464:	b.eq	9488 <GOMP_critical_name_end@@GOMP_1.0+0x2b8>  // b.none
    9468:	ldr	w0, [sp, #28]
    946c:	cmp	w0, #0x0
    9470:	b.ne	94b4 <GOMP_critical_name_end@@GOMP_1.0+0x2e4>  // b.any
    9474:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9478:	add	x0, x0, #0x2d8
    947c:	ldr	w0, [x0, #8]
    9480:	cmp	w0, #0x1
    9484:	b.ne	94b4 <GOMP_critical_name_end@@GOMP_1.0+0x2e4>  // b.any
    9488:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    948c:	add	x0, x0, #0x2d8
    9490:	ldr	w0, [x0, #8]
    9494:	orr	w1, w0, #0x80000000
    9498:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    949c:	add	x0, x0, #0x2d8
    94a0:	str	w1, [x0, #8]
    94a4:	b	94b4 <GOMP_critical_name_end@@GOMP_1.0+0x2e4>
    94a8:	ldr	x0, [sp, #40]
    94ac:	add	x0, x0, #0x1
    94b0:	str	x0, [sp, #40]
    94b4:	bl	89c0 <__ctype_b_loc@plt>
    94b8:	ldr	x1, [x0]
    94bc:	ldr	x0, [sp, #40]
    94c0:	ldrb	w0, [x0]
    94c4:	and	x0, x0, #0xff
    94c8:	lsl	x0, x0, #1
    94cc:	add	x0, x1, x0
    94d0:	ldrh	w0, [x0]
    94d4:	and	w0, w0, #0x2000
    94d8:	cmp	w0, #0x0
    94dc:	b.ne	94a8 <GOMP_critical_name_end@@GOMP_1.0+0x2d8>  // b.any
    94e0:	ldr	x0, [sp, #40]
    94e4:	ldrb	w0, [x0]
    94e8:	cmp	w0, #0x0
    94ec:	b.ne	9520 <GOMP_critical_name_end@@GOMP_1.0+0x350>  // b.any
    94f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    94f4:	add	x0, x0, #0x2d8
    94f8:	ldr	w0, [x0, #8]
    94fc:	and	w0, w0, #0x7fffffff
    9500:	cmp	w0, #0x1
    9504:	cset	w0, ne  // ne = any
    9508:	and	w0, w0, #0xff
    950c:	mov	w1, w0
    9510:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9514:	add	x0, x0, #0x2d8
    9518:	str	w1, [x0, #12]
    951c:	b	96ac <GOMP_critical_name_end@@GOMP_1.0+0x4dc>
    9520:	ldr	x0, [sp, #40]
    9524:	add	x1, x0, #0x1
    9528:	str	x1, [sp, #40]
    952c:	ldrb	w0, [x0]
    9530:	cmp	w0, #0x2c
    9534:	b.ne	9668 <GOMP_critical_name_end@@GOMP_1.0+0x498>  // b.any
    9538:	b	9548 <GOMP_critical_name_end@@GOMP_1.0+0x378>
    953c:	ldr	x0, [sp, #40]
    9540:	add	x0, x0, #0x1
    9544:	str	x0, [sp, #40]
    9548:	bl	89c0 <__ctype_b_loc@plt>
    954c:	ldr	x1, [x0]
    9550:	ldr	x0, [sp, #40]
    9554:	ldrb	w0, [x0]
    9558:	and	x0, x0, #0xff
    955c:	lsl	x0, x0, #1
    9560:	add	x0, x1, x0
    9564:	ldrh	w0, [x0]
    9568:	and	w0, w0, #0x2000
    956c:	cmp	w0, #0x0
    9570:	b.ne	953c <GOMP_critical_name_end@@GOMP_1.0+0x36c>  // b.any
    9574:	ldr	x0, [sp, #40]
    9578:	ldrb	w0, [x0]
    957c:	cmp	w0, #0x0
    9580:	b.eq	967c <GOMP_critical_name_end@@GOMP_1.0+0x4ac>  // b.none
    9584:	bl	8be0 <__errno_location@plt>
    9588:	str	wzr, [x0]
    958c:	add	x0, sp, #0x10
    9590:	mov	w2, #0xa                   	// #10
    9594:	mov	x1, x0
    9598:	ldr	x0, [sp, #40]
    959c:	bl	86c0 <strtoul@plt>
    95a0:	str	x0, [sp, #32]
    95a4:	bl	8be0 <__errno_location@plt>
    95a8:	ldr	w0, [x0]
    95ac:	cmp	w0, #0x0
    95b0:	b.ne	9684 <GOMP_critical_name_end@@GOMP_1.0+0x4b4>  // b.any
    95b4:	b	95c4 <GOMP_critical_name_end@@GOMP_1.0+0x3f4>
    95b8:	ldr	x0, [sp, #16]
    95bc:	add	x0, x0, #0x1
    95c0:	str	x0, [sp, #16]
    95c4:	bl	89c0 <__ctype_b_loc@plt>
    95c8:	ldr	x1, [x0]
    95cc:	ldr	x0, [sp, #16]
    95d0:	ldrb	w0, [x0]
    95d4:	and	x0, x0, #0xff
    95d8:	lsl	x0, x0, #1
    95dc:	add	x0, x1, x0
    95e0:	ldrh	w0, [x0]
    95e4:	and	w0, w0, #0x2000
    95e8:	cmp	w0, #0x0
    95ec:	b.ne	95b8 <GOMP_critical_name_end@@GOMP_1.0+0x3e8>  // b.any
    95f0:	ldr	x0, [sp, #16]
    95f4:	ldrb	w0, [x0]
    95f8:	cmp	w0, #0x0
    95fc:	b.ne	968c <GOMP_critical_name_end@@GOMP_1.0+0x4bc>  // b.any
    9600:	ldr	x0, [sp, #32]
    9604:	sxtw	x0, w0
    9608:	ldr	x1, [sp, #32]
    960c:	cmp	x1, x0
    9610:	b.ne	9694 <GOMP_critical_name_end@@GOMP_1.0+0x4c4>  // b.any
    9614:	ldr	x0, [sp, #32]
    9618:	cmp	x0, #0x0
    961c:	b.ne	9640 <GOMP_critical_name_end@@GOMP_1.0+0x470>  // b.any
    9620:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9624:	add	x0, x0, #0x2d8
    9628:	ldr	w0, [x0, #8]
    962c:	and	w0, w0, #0x7fffffff
    9630:	cmp	w0, #0x1
    9634:	b.eq	9640 <GOMP_critical_name_end@@GOMP_1.0+0x470>  // b.none
    9638:	mov	x0, #0x1                   	// #1
    963c:	str	x0, [sp, #32]
    9640:	ldr	x0, [sp, #32]
    9644:	mov	w1, w0
    9648:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    964c:	add	x0, x0, #0x2d8
    9650:	str	w1, [x0, #12]
    9654:	b	96ac <GOMP_critical_name_end@@GOMP_1.0+0x4dc>
    9658:	nop
    965c:	b	966c <GOMP_critical_name_end@@GOMP_1.0+0x49c>
    9660:	nop
    9664:	b	966c <GOMP_critical_name_end@@GOMP_1.0+0x49c>
    9668:	nop
    966c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    9670:	add	x0, x0, #0xb00
    9674:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    9678:	b	96ac <GOMP_critical_name_end@@GOMP_1.0+0x4dc>
    967c:	nop
    9680:	b	9698 <GOMP_critical_name_end@@GOMP_1.0+0x4c8>
    9684:	nop
    9688:	b	9698 <GOMP_critical_name_end@@GOMP_1.0+0x4c8>
    968c:	nop
    9690:	b	9698 <GOMP_critical_name_end@@GOMP_1.0+0x4c8>
    9694:	nop
    9698:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    969c:	add	x0, x0, #0xb38
    96a0:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    96a4:	b	96ac <GOMP_critical_name_end@@GOMP_1.0+0x4dc>
    96a8:	nop
    96ac:	ldp	x29, x30, [sp], #48
    96b0:	ret
    96b4:	stp	x29, x30, [sp, #-80]!
    96b8:	mov	x29, sp
    96bc:	str	x0, [sp, #40]
    96c0:	str	x1, [sp, #32]
    96c4:	strb	w2, [sp, #31]
    96c8:	strb	w3, [sp, #30]
    96cc:	ldrb	w0, [sp, #30]
    96d0:	cmp	w0, #0x0
    96d4:	b.eq	96e4 <GOMP_critical_name_end@@GOMP_1.0+0x514>  // b.none
    96d8:	ldr	x0, [sp, #40]
    96dc:	bl	8710 <secure_getenv@plt>
    96e0:	b	96ec <GOMP_critical_name_end@@GOMP_1.0+0x51c>
    96e4:	ldr	x0, [sp, #40]
    96e8:	bl	8c00 <getenv@plt>
    96ec:	str	x0, [sp, #72]
    96f0:	ldr	x0, [sp, #72]
    96f4:	cmp	x0, #0x0
    96f8:	b.ne	9710 <GOMP_critical_name_end@@GOMP_1.0+0x540>  // b.any
    96fc:	mov	w0, #0x0                   	// #0
    9700:	b	981c <GOMP_critical_name_end@@GOMP_1.0+0x64c>
    9704:	ldr	x0, [sp, #72]
    9708:	add	x0, x0, #0x1
    970c:	str	x0, [sp, #72]
    9710:	bl	89c0 <__ctype_b_loc@plt>
    9714:	ldr	x1, [x0]
    9718:	ldr	x0, [sp, #72]
    971c:	ldrb	w0, [x0]
    9720:	and	x0, x0, #0xff
    9724:	lsl	x0, x0, #1
    9728:	add	x0, x1, x0
    972c:	ldrh	w0, [x0]
    9730:	and	w0, w0, #0x2000
    9734:	cmp	w0, #0x0
    9738:	b.ne	9704 <GOMP_critical_name_end@@GOMP_1.0+0x534>  // b.any
    973c:	ldr	x0, [sp, #72]
    9740:	ldrb	w0, [x0]
    9744:	cmp	w0, #0x0
    9748:	b.eq	97f4 <GOMP_critical_name_end@@GOMP_1.0+0x624>  // b.none
    974c:	bl	8be0 <__errno_location@plt>
    9750:	str	wzr, [x0]
    9754:	add	x0, sp, #0x38
    9758:	mov	w2, #0xa                   	// #10
    975c:	mov	x1, x0
    9760:	ldr	x0, [sp, #72]
    9764:	bl	86c0 <strtoul@plt>
    9768:	str	x0, [sp, #64]
    976c:	bl	8be0 <__errno_location@plt>
    9770:	ldr	w0, [x0]
    9774:	cmp	w0, #0x0
    9778:	b.ne	97fc <GOMP_critical_name_end@@GOMP_1.0+0x62c>  // b.any
    977c:	ldrb	w0, [sp, #31]
    9780:	neg	w0, w0
    9784:	sxtw	x1, w0
    9788:	ldr	x0, [sp, #64]
    978c:	cmp	x1, x0
    9790:	b.ge	97fc <GOMP_critical_name_end@@GOMP_1.0+0x62c>  // b.tcont
    9794:	b	97a4 <GOMP_critical_name_end@@GOMP_1.0+0x5d4>
    9798:	ldr	x0, [sp, #56]
    979c:	add	x0, x0, #0x1
    97a0:	str	x0, [sp, #56]
    97a4:	bl	89c0 <__ctype_b_loc@plt>
    97a8:	ldr	x1, [x0]
    97ac:	ldr	x0, [sp, #56]
    97b0:	ldrb	w0, [x0]
    97b4:	and	x0, x0, #0xff
    97b8:	lsl	x0, x0, #1
    97bc:	add	x0, x1, x0
    97c0:	ldrh	w0, [x0]
    97c4:	and	w0, w0, #0x2000
    97c8:	cmp	w0, #0x0
    97cc:	b.ne	9798 <GOMP_critical_name_end@@GOMP_1.0+0x5c8>  // b.any
    97d0:	ldr	x0, [sp, #56]
    97d4:	ldrb	w0, [x0]
    97d8:	cmp	w0, #0x0
    97dc:	b.ne	9804 <GOMP_critical_name_end@@GOMP_1.0+0x634>  // b.any
    97e0:	ldr	x0, [sp, #32]
    97e4:	ldr	x1, [sp, #64]
    97e8:	str	x1, [x0]
    97ec:	mov	w0, #0x1                   	// #1
    97f0:	b	981c <GOMP_critical_name_end@@GOMP_1.0+0x64c>
    97f4:	nop
    97f8:	b	9808 <GOMP_critical_name_end@@GOMP_1.0+0x638>
    97fc:	nop
    9800:	b	9808 <GOMP_critical_name_end@@GOMP_1.0+0x638>
    9804:	nop
    9808:	ldr	x1, [sp, #40]
    980c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    9810:	add	x0, x0, #0xb80
    9814:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    9818:	mov	w0, #0x0                   	// #0
    981c:	ldp	x29, x30, [sp], #80
    9820:	ret
    9824:	stp	x29, x30, [sp, #-48]!
    9828:	mov	x29, sp
    982c:	str	x0, [sp, #40]
    9830:	str	x1, [sp, #32]
    9834:	strb	w2, [sp, #31]
    9838:	mov	w3, #0x0                   	// #0
    983c:	ldrb	w2, [sp, #31]
    9840:	ldr	x1, [sp, #32]
    9844:	ldr	x0, [sp, #40]
    9848:	bl	96b4 <GOMP_critical_name_end@@GOMP_1.0+0x4e4>
    984c:	and	w0, w0, #0xff
    9850:	ldp	x29, x30, [sp], #48
    9854:	ret
    9858:	stp	x29, x30, [sp, #-64]!
    985c:	mov	x29, sp
    9860:	str	x0, [sp, #40]
    9864:	str	x1, [sp, #32]
    9868:	strb	w2, [sp, #31]
    986c:	strb	w3, [sp, #30]
    9870:	add	x0, sp, #0x38
    9874:	ldrb	w3, [sp, #30]
    9878:	ldrb	w2, [sp, #31]
    987c:	mov	x1, x0
    9880:	ldr	x0, [sp, #40]
    9884:	bl	96b4 <GOMP_critical_name_end@@GOMP_1.0+0x4e4>
    9888:	and	w0, w0, #0xff
    988c:	eor	w0, w0, #0x1
    9890:	and	w0, w0, #0xff
    9894:	cmp	w0, #0x0
    9898:	b.eq	98a4 <GOMP_critical_name_end@@GOMP_1.0+0x6d4>  // b.none
    989c:	mov	w0, #0x0                   	// #0
    98a0:	b	98e0 <GOMP_critical_name_end@@GOMP_1.0+0x710>
    98a4:	ldr	x1, [sp, #56]
    98a8:	mov	x0, #0x7fffffff            	// #2147483647
    98ac:	cmp	x1, x0
    98b0:	b.ls	98cc <GOMP_critical_name_end@@GOMP_1.0+0x6fc>  // b.plast
    98b4:	ldr	x1, [sp, #40]
    98b8:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    98bc:	add	x0, x0, #0xb80
    98c0:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    98c4:	mov	w0, #0x0                   	// #0
    98c8:	b	98e0 <GOMP_critical_name_end@@GOMP_1.0+0x710>
    98cc:	ldr	x0, [sp, #56]
    98d0:	mov	w1, w0
    98d4:	ldr	x0, [sp, #32]
    98d8:	str	w1, [x0]
    98dc:	mov	w0, #0x1                   	// #1
    98e0:	ldp	x29, x30, [sp], #64
    98e4:	ret
    98e8:	stp	x29, x30, [sp, #-48]!
    98ec:	mov	x29, sp
    98f0:	str	x0, [sp, #40]
    98f4:	str	x1, [sp, #32]
    98f8:	strb	w2, [sp, #31]
    98fc:	mov	w3, #0x0                   	// #0
    9900:	ldrb	w2, [sp, #31]
    9904:	ldr	x1, [sp, #32]
    9908:	ldr	x0, [sp, #40]
    990c:	bl	9858 <GOMP_critical_name_end@@GOMP_1.0+0x688>
    9910:	and	w0, w0, #0xff
    9914:	ldp	x29, x30, [sp], #48
    9918:	ret
    991c:	stp	x29, x30, [sp, #-48]!
    9920:	mov	x29, sp
    9924:	str	x0, [sp, #40]
    9928:	str	x1, [sp, #32]
    992c:	strb	w2, [sp, #31]
    9930:	mov	w3, #0x1                   	// #1
    9934:	ldrb	w2, [sp, #31]
    9938:	ldr	x1, [sp, #32]
    993c:	ldr	x0, [sp, #40]
    9940:	bl	9858 <GOMP_critical_name_end@@GOMP_1.0+0x688>
    9944:	and	w0, w0, #0xff
    9948:	ldp	x29, x30, [sp], #48
    994c:	ret
    9950:	stp	x29, x30, [sp, #-112]!
    9954:	mov	x29, sp
    9958:	str	x0, [sp, #40]
    995c:	str	x1, [sp, #32]
    9960:	str	x2, [sp, #24]
    9964:	str	x3, [sp, #16]
    9968:	str	xzr, [sp, #88]
    996c:	ldr	x0, [sp, #40]
    9970:	bl	8c00 <getenv@plt>
    9974:	str	x0, [sp, #104]
    9978:	ldr	x0, [sp, #104]
    997c:	cmp	x0, #0x0
    9980:	b.ne	9998 <GOMP_critical_name_end@@GOMP_1.0+0x7c8>  // b.any
    9984:	mov	w0, #0x0                   	// #0
    9988:	b	9cc0 <GOMP_critical_name_end@@GOMP_1.0+0xaf0>
    998c:	ldr	x0, [sp, #104]
    9990:	add	x0, x0, #0x1
    9994:	str	x0, [sp, #104]
    9998:	bl	89c0 <__ctype_b_loc@plt>
    999c:	ldr	x1, [x0]
    99a0:	ldr	x0, [sp, #104]
    99a4:	ldrb	w0, [x0]
    99a8:	and	x0, x0, #0xff
    99ac:	lsl	x0, x0, #1
    99b0:	add	x0, x1, x0
    99b4:	ldrh	w0, [x0]
    99b8:	and	w0, w0, #0x2000
    99bc:	cmp	w0, #0x0
    99c0:	b.ne	998c <GOMP_critical_name_end@@GOMP_1.0+0x7bc>  // b.any
    99c4:	ldr	x0, [sp, #104]
    99c8:	ldrb	w0, [x0]
    99cc:	cmp	w0, #0x0
    99d0:	b.eq	9c78 <GOMP_critical_name_end@@GOMP_1.0+0xaa8>  // b.none
    99d4:	bl	8be0 <__errno_location@plt>
    99d8:	str	wzr, [x0]
    99dc:	add	x0, sp, #0x38
    99e0:	mov	w2, #0xa                   	// #10
    99e4:	mov	x1, x0
    99e8:	ldr	x0, [sp, #104]
    99ec:	bl	86c0 <strtoul@plt>
    99f0:	str	x0, [sp, #96]
    99f4:	bl	8be0 <__errno_location@plt>
    99f8:	ldr	w0, [x0]
    99fc:	cmp	w0, #0x0
    9a00:	b.ne	9c80 <GOMP_critical_name_end@@GOMP_1.0+0xab0>  // b.any
    9a04:	ldr	x0, [sp, #96]
    9a08:	cmp	x0, #0x0
    9a0c:	b.le	9c80 <GOMP_critical_name_end@@GOMP_1.0+0xab0>
    9a10:	b	9a20 <GOMP_critical_name_end@@GOMP_1.0+0x850>
    9a14:	ldr	x0, [sp, #56]
    9a18:	add	x0, x0, #0x1
    9a1c:	str	x0, [sp, #56]
    9a20:	bl	89c0 <__ctype_b_loc@plt>
    9a24:	ldr	x1, [x0]
    9a28:	ldr	x0, [sp, #56]
    9a2c:	ldrb	w0, [x0]
    9a30:	and	x0, x0, #0xff
    9a34:	lsl	x0, x0, #1
    9a38:	add	x0, x1, x0
    9a3c:	ldrh	w0, [x0]
    9a40:	and	w0, w0, #0x2000
    9a44:	cmp	w0, #0x0
    9a48:	b.ne	9a14 <GOMP_critical_name_end@@GOMP_1.0+0x844>  // b.any
    9a4c:	ldr	x0, [sp, #56]
    9a50:	ldrb	w0, [x0]
    9a54:	cmp	w0, #0x0
    9a58:	b.eq	9c64 <GOMP_critical_name_end@@GOMP_1.0+0xa94>  // b.none
    9a5c:	ldr	x0, [sp, #56]
    9a60:	ldrb	w0, [x0]
    9a64:	cmp	w0, #0x2c
    9a68:	b.ne	9c88 <GOMP_critical_name_end@@GOMP_1.0+0xab8>  // b.any
    9a6c:	str	xzr, [sp, #80]
    9a70:	str	xzr, [sp, #72]
    9a74:	ldr	x0, [sp, #56]
    9a78:	add	x0, x0, #0x1
    9a7c:	str	x0, [sp, #104]
    9a80:	ldr	x1, [sp, #80]
    9a84:	ldr	x0, [sp, #72]
    9a88:	cmp	x1, x0
    9a8c:	b.ne	9b38 <GOMP_critical_name_end@@GOMP_1.0+0x968>  // b.any
    9a90:	ldr	x0, [sp, #72]
    9a94:	cmp	x0, #0x0
    9a98:	b.eq	9aa8 <GOMP_critical_name_end@@GOMP_1.0+0x8d8>  // b.none
    9a9c:	ldr	x0, [sp, #72]
    9aa0:	lsl	x0, x0, #1
    9aa4:	b	9aac <GOMP_critical_name_end@@GOMP_1.0+0x8dc>
    9aa8:	mov	x0, #0x10                  	// #16
    9aac:	str	x0, [sp, #72]
    9ab0:	ldr	x0, [sp, #72]
    9ab4:	lsl	x0, x0, #3
    9ab8:	mov	x1, x0
    9abc:	ldr	x0, [sp, #88]
    9ac0:	bl	8920 <realloc@plt>
    9ac4:	str	x0, [sp, #64]
    9ac8:	ldr	x0, [sp, #64]
    9acc:	cmp	x0, #0x0
    9ad0:	b.ne	9af4 <GOMP_critical_name_end@@GOMP_1.0+0x924>  // b.any
    9ad4:	ldr	x0, [sp, #88]
    9ad8:	bl	8a20 <free@plt>
    9adc:	ldr	x1, [sp, #40]
    9ae0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    9ae4:	add	x0, x0, #0xbb0
    9ae8:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    9aec:	mov	w0, #0x0                   	// #0
    9af0:	b	9cc0 <GOMP_critical_name_end@@GOMP_1.0+0xaf0>
    9af4:	ldr	x0, [sp, #64]
    9af8:	str	x0, [sp, #88]
    9afc:	ldr	x0, [sp, #80]
    9b00:	cmp	x0, #0x0
    9b04:	b.ne	9b38 <GOMP_critical_name_end@@GOMP_1.0+0x968>  // b.any
    9b08:	ldr	x0, [sp, #80]
    9b0c:	add	x1, x0, #0x1
    9b10:	str	x1, [sp, #80]
    9b14:	lsl	x0, x0, #3
    9b18:	ldr	x1, [sp, #88]
    9b1c:	add	x0, x1, x0
    9b20:	ldr	x1, [sp, #96]
    9b24:	str	x1, [x0]
    9b28:	b	9b38 <GOMP_critical_name_end@@GOMP_1.0+0x968>
    9b2c:	ldr	x0, [sp, #104]
    9b30:	add	x0, x0, #0x1
    9b34:	str	x0, [sp, #104]
    9b38:	bl	89c0 <__ctype_b_loc@plt>
    9b3c:	ldr	x1, [x0]
    9b40:	ldr	x0, [sp, #104]
    9b44:	ldrb	w0, [x0]
    9b48:	and	x0, x0, #0xff
    9b4c:	lsl	x0, x0, #1
    9b50:	add	x0, x1, x0
    9b54:	ldrh	w0, [x0]
    9b58:	and	w0, w0, #0x2000
    9b5c:	cmp	w0, #0x0
    9b60:	b.ne	9b2c <GOMP_critical_name_end@@GOMP_1.0+0x95c>  // b.any
    9b64:	ldr	x0, [sp, #104]
    9b68:	ldrb	w0, [x0]
    9b6c:	cmp	w0, #0x0
    9b70:	b.eq	9c90 <GOMP_critical_name_end@@GOMP_1.0+0xac0>  // b.none
    9b74:	bl	8be0 <__errno_location@plt>
    9b78:	str	wzr, [x0]
    9b7c:	add	x0, sp, #0x38
    9b80:	mov	w2, #0xa                   	// #10
    9b84:	mov	x1, x0
    9b88:	ldr	x0, [sp, #104]
    9b8c:	bl	86c0 <strtoul@plt>
    9b90:	str	x0, [sp, #96]
    9b94:	bl	8be0 <__errno_location@plt>
    9b98:	ldr	w0, [x0]
    9b9c:	cmp	w0, #0x0
    9ba0:	b.ne	9c98 <GOMP_critical_name_end@@GOMP_1.0+0xac8>  // b.any
    9ba4:	ldr	x0, [sp, #96]
    9ba8:	cmp	x0, #0x0
    9bac:	b.le	9c98 <GOMP_critical_name_end@@GOMP_1.0+0xac8>
    9bb0:	ldr	x0, [sp, #80]
    9bb4:	add	x1, x0, #0x1
    9bb8:	str	x1, [sp, #80]
    9bbc:	lsl	x0, x0, #3
    9bc0:	ldr	x1, [sp, #88]
    9bc4:	add	x0, x1, x0
    9bc8:	ldr	x1, [sp, #96]
    9bcc:	str	x1, [x0]
    9bd0:	b	9be0 <GOMP_critical_name_end@@GOMP_1.0+0xa10>
    9bd4:	ldr	x0, [sp, #56]
    9bd8:	add	x0, x0, #0x1
    9bdc:	str	x0, [sp, #56]
    9be0:	bl	89c0 <__ctype_b_loc@plt>
    9be4:	ldr	x1, [x0]
    9be8:	ldr	x0, [sp, #56]
    9bec:	ldrb	w0, [x0]
    9bf0:	and	x0, x0, #0xff
    9bf4:	lsl	x0, x0, #1
    9bf8:	add	x0, x1, x0
    9bfc:	ldrh	w0, [x0]
    9c00:	and	w0, w0, #0x2000
    9c04:	cmp	w0, #0x0
    9c08:	b.ne	9bd4 <GOMP_critical_name_end@@GOMP_1.0+0xa04>  // b.any
    9c0c:	ldr	x0, [sp, #56]
    9c10:	ldrb	w0, [x0]
    9c14:	cmp	w0, #0x0
    9c18:	b.eq	9c30 <GOMP_critical_name_end@@GOMP_1.0+0xa60>  // b.none
    9c1c:	ldr	x0, [sp, #56]
    9c20:	ldrb	w0, [x0]
    9c24:	cmp	w0, #0x2c
    9c28:	b.ne	9ca0 <GOMP_critical_name_end@@GOMP_1.0+0xad0>  // b.any
    9c2c:	b	9a74 <GOMP_critical_name_end@@GOMP_1.0+0x8a4>
    9c30:	nop
    9c34:	ldr	x0, [sp, #88]
    9c38:	ldr	x1, [x0]
    9c3c:	ldr	x0, [sp, #32]
    9c40:	str	x1, [x0]
    9c44:	ldr	x0, [sp, #24]
    9c48:	ldr	x1, [sp, #88]
    9c4c:	str	x1, [x0]
    9c50:	ldr	x0, [sp, #16]
    9c54:	ldr	x1, [sp, #80]
    9c58:	str	x1, [x0]
    9c5c:	mov	w0, #0x1                   	// #1
    9c60:	b	9cc0 <GOMP_critical_name_end@@GOMP_1.0+0xaf0>
    9c64:	ldr	x0, [sp, #32]
    9c68:	ldr	x1, [sp, #96]
    9c6c:	str	x1, [x0]
    9c70:	mov	w0, #0x1                   	// #1
    9c74:	b	9cc0 <GOMP_critical_name_end@@GOMP_1.0+0xaf0>
    9c78:	nop
    9c7c:	b	9ca4 <GOMP_critical_name_end@@GOMP_1.0+0xad4>
    9c80:	nop
    9c84:	b	9ca4 <GOMP_critical_name_end@@GOMP_1.0+0xad4>
    9c88:	nop
    9c8c:	b	9ca4 <GOMP_critical_name_end@@GOMP_1.0+0xad4>
    9c90:	nop
    9c94:	b	9ca4 <GOMP_critical_name_end@@GOMP_1.0+0xad4>
    9c98:	nop
    9c9c:	b	9ca4 <GOMP_critical_name_end@@GOMP_1.0+0xad4>
    9ca0:	nop
    9ca4:	ldr	x0, [sp, #88]
    9ca8:	bl	8a20 <free@plt>
    9cac:	ldr	x1, [sp, #40]
    9cb0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    9cb4:	add	x0, x0, #0xb80
    9cb8:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    9cbc:	mov	w0, #0x0                   	// #0
    9cc0:	ldp	x29, x30, [sp], #112
    9cc4:	ret
    9cc8:	stp	x29, x30, [sp, #-112]!
    9ccc:	mov	x29, sp
    9cd0:	str	x0, [sp, #40]
    9cd4:	str	x1, [sp, #32]
    9cd8:	str	x2, [sp, #24]
    9cdc:	str	x3, [sp, #16]
    9ce0:	strb	wzr, [sp, #103]
    9ce4:	str	xzr, [sp, #88]
    9ce8:	ldr	x0, [sp, #40]
    9cec:	bl	8c00 <getenv@plt>
    9cf0:	str	x0, [sp, #104]
    9cf4:	ldr	x0, [sp, #104]
    9cf8:	cmp	x0, #0x0
    9cfc:	b.ne	9d14 <GOMP_critical_name_end@@GOMP_1.0+0xb44>  // b.any
    9d00:	mov	w0, #0x0                   	// #0
    9d04:	b	a1b0 <GOMP_critical_name_end@@GOMP_1.0+0xfe0>
    9d08:	ldr	x0, [sp, #104]
    9d0c:	add	x0, x0, #0x1
    9d10:	str	x0, [sp, #104]
    9d14:	bl	89c0 <__ctype_b_loc@plt>
    9d18:	ldr	x1, [x0]
    9d1c:	ldr	x0, [sp, #104]
    9d20:	ldrb	w0, [x0]
    9d24:	and	x0, x0, #0xff
    9d28:	lsl	x0, x0, #1
    9d2c:	add	x0, x1, x0
    9d30:	ldrh	w0, [x0]
    9d34:	and	w0, w0, #0x2000
    9d38:	cmp	w0, #0x0
    9d3c:	b.ne	9d08 <GOMP_critical_name_end@@GOMP_1.0+0xb38>  // b.any
    9d40:	ldr	x0, [sp, #104]
    9d44:	ldrb	w0, [x0]
    9d48:	cmp	w0, #0x0
    9d4c:	b.eq	a160 <GOMP_critical_name_end@@GOMP_1.0+0xf90>  // b.none
    9d50:	str	wzr, [sp, #84]
    9d54:	b	9e24 <GOMP_critical_name_end@@GOMP_1.0+0xc54>
    9d58:	ldrsw	x1, [sp, #84]
    9d5c:	mov	x0, x1
    9d60:	lsl	x0, x0, #1
    9d64:	add	x0, x0, x1
    9d68:	lsl	x0, x0, #2
    9d6c:	adrp	x1, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9d70:	add	x1, x1, #0x318
    9d74:	add	x3, x0, x1
    9d78:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9d7c:	add	x2, x0, #0x318
    9d80:	ldrsw	x1, [sp, #84]
    9d84:	mov	x0, x1
    9d88:	lsl	x0, x0, #1
    9d8c:	add	x0, x0, x1
    9d90:	lsl	x0, x0, #2
    9d94:	add	x0, x2, x0
    9d98:	ldrb	w0, [x0, #7]
    9d9c:	and	x0, x0, #0xff
    9da0:	mov	x2, x0
    9da4:	mov	x1, x3
    9da8:	ldr	x0, [sp, #104]
    9dac:	bl	8a60 <strncasecmp@plt>
    9db0:	cmp	w0, #0x0
    9db4:	b.ne	9e18 <GOMP_critical_name_end@@GOMP_1.0+0xc48>  // b.any
    9db8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9dbc:	add	x2, x0, #0x318
    9dc0:	ldrsw	x1, [sp, #84]
    9dc4:	mov	x0, x1
    9dc8:	lsl	x0, x0, #1
    9dcc:	add	x0, x0, x1
    9dd0:	lsl	x0, x0, #2
    9dd4:	add	x0, x2, x0
    9dd8:	ldr	w0, [x0, #8]
    9ddc:	strb	w0, [sp, #103]
    9de0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9de4:	add	x2, x0, #0x318
    9de8:	ldrsw	x1, [sp, #84]
    9dec:	mov	x0, x1
    9df0:	lsl	x0, x0, #1
    9df4:	add	x0, x0, x1
    9df8:	lsl	x0, x0, #2
    9dfc:	add	x0, x2, x0
    9e00:	ldrb	w0, [x0, #7]
    9e04:	and	x0, x0, #0xff
    9e08:	ldr	x1, [sp, #104]
    9e0c:	add	x0, x1, x0
    9e10:	str	x0, [sp, #104]
    9e14:	b	9e30 <GOMP_critical_name_end@@GOMP_1.0+0xc60>
    9e18:	ldr	w0, [sp, #84]
    9e1c:	add	w0, w0, #0x1
    9e20:	str	w0, [sp, #84]
    9e24:	ldr	w0, [sp, #84]
    9e28:	cmp	w0, #0x4
    9e2c:	b.le	9d58 <GOMP_critical_name_end@@GOMP_1.0+0xb88>
    9e30:	ldr	w0, [sp, #84]
    9e34:	cmp	w0, #0x5
    9e38:	b.eq	a168 <GOMP_critical_name_end@@GOMP_1.0+0xf98>  // b.none
    9e3c:	b	9e4c <GOMP_critical_name_end@@GOMP_1.0+0xc7c>
    9e40:	ldr	x0, [sp, #104]
    9e44:	add	x0, x0, #0x1
    9e48:	str	x0, [sp, #104]
    9e4c:	bl	89c0 <__ctype_b_loc@plt>
    9e50:	ldr	x1, [x0]
    9e54:	ldr	x0, [sp, #104]
    9e58:	ldrb	w0, [x0]
    9e5c:	and	x0, x0, #0xff
    9e60:	lsl	x0, x0, #1
    9e64:	add	x0, x1, x0
    9e68:	ldrh	w0, [x0]
    9e6c:	and	w0, w0, #0x2000
    9e70:	cmp	w0, #0x0
    9e74:	b.ne	9e40 <GOMP_critical_name_end@@GOMP_1.0+0xc70>  // b.any
    9e78:	ldr	x0, [sp, #104]
    9e7c:	ldrb	w0, [x0]
    9e80:	cmp	w0, #0x0
    9e84:	b.eq	a14c <GOMP_critical_name_end@@GOMP_1.0+0xf7c>  // b.none
    9e88:	ldr	x0, [sp, #104]
    9e8c:	ldrb	w0, [x0]
    9e90:	cmp	w0, #0x2c
    9e94:	b.ne	a170 <GOMP_critical_name_end@@GOMP_1.0+0xfa0>  // b.any
    9e98:	str	xzr, [sp, #72]
    9e9c:	str	xzr, [sp, #64]
    9ea0:	ldrb	w0, [sp, #103]
    9ea4:	cmp	w0, #0x0
    9ea8:	b.eq	a178 <GOMP_critical_name_end@@GOMP_1.0+0xfa8>  // b.none
    9eac:	ldrb	w0, [sp, #103]
    9eb0:	cmp	w0, #0x1
    9eb4:	b.eq	a178 <GOMP_critical_name_end@@GOMP_1.0+0xfa8>  // b.none
    9eb8:	ldr	x0, [sp, #104]
    9ebc:	add	x0, x0, #0x1
    9ec0:	str	x0, [sp, #104]
    9ec4:	ldr	x1, [sp, #72]
    9ec8:	ldr	x0, [sp, #64]
    9ecc:	cmp	x1, x0
    9ed0:	b.ne	9f70 <GOMP_critical_name_end@@GOMP_1.0+0xda0>  // b.any
    9ed4:	ldr	x0, [sp, #64]
    9ed8:	cmp	x0, #0x0
    9edc:	b.eq	9eec <GOMP_critical_name_end@@GOMP_1.0+0xd1c>  // b.none
    9ee0:	ldr	x0, [sp, #64]
    9ee4:	lsl	x0, x0, #1
    9ee8:	b	9ef0 <GOMP_critical_name_end@@GOMP_1.0+0xd20>
    9eec:	mov	x0, #0x10                  	// #16
    9ef0:	str	x0, [sp, #64]
    9ef4:	ldr	x1, [sp, #64]
    9ef8:	ldr	x0, [sp, #88]
    9efc:	bl	8920 <realloc@plt>
    9f00:	str	x0, [sp, #56]
    9f04:	ldr	x0, [sp, #56]
    9f08:	cmp	x0, #0x0
    9f0c:	b.ne	9f30 <GOMP_critical_name_end@@GOMP_1.0+0xd60>  // b.any
    9f10:	ldr	x0, [sp, #88]
    9f14:	bl	8a20 <free@plt>
    9f18:	ldr	x1, [sp, #40]
    9f1c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    9f20:	add	x0, x0, #0xbb0
    9f24:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    9f28:	mov	w0, #0x0                   	// #0
    9f2c:	b	a1b0 <GOMP_critical_name_end@@GOMP_1.0+0xfe0>
    9f30:	ldr	x0, [sp, #56]
    9f34:	str	x0, [sp, #88]
    9f38:	ldr	x0, [sp, #72]
    9f3c:	cmp	x0, #0x0
    9f40:	b.ne	9f70 <GOMP_critical_name_end@@GOMP_1.0+0xda0>  // b.any
    9f44:	ldr	x0, [sp, #72]
    9f48:	add	x1, x0, #0x1
    9f4c:	str	x1, [sp, #72]
    9f50:	ldr	x1, [sp, #88]
    9f54:	add	x0, x1, x0
    9f58:	ldrb	w1, [sp, #103]
    9f5c:	strb	w1, [x0]
    9f60:	b	9f70 <GOMP_critical_name_end@@GOMP_1.0+0xda0>
    9f64:	ldr	x0, [sp, #104]
    9f68:	add	x0, x0, #0x1
    9f6c:	str	x0, [sp, #104]
    9f70:	bl	89c0 <__ctype_b_loc@plt>
    9f74:	ldr	x1, [x0]
    9f78:	ldr	x0, [sp, #104]
    9f7c:	ldrb	w0, [x0]
    9f80:	and	x0, x0, #0xff
    9f84:	lsl	x0, x0, #1
    9f88:	add	x0, x1, x0
    9f8c:	ldrh	w0, [x0]
    9f90:	and	w0, w0, #0x2000
    9f94:	cmp	w0, #0x0
    9f98:	b.ne	9f64 <GOMP_critical_name_end@@GOMP_1.0+0xd94>  // b.any
    9f9c:	ldr	x0, [sp, #104]
    9fa0:	ldrb	w0, [x0]
    9fa4:	cmp	w0, #0x0
    9fa8:	b.eq	a180 <GOMP_critical_name_end@@GOMP_1.0+0xfb0>  // b.none
    9fac:	mov	w0, #0x2                   	// #2
    9fb0:	str	w0, [sp, #84]
    9fb4:	b	a084 <GOMP_critical_name_end@@GOMP_1.0+0xeb4>
    9fb8:	ldrsw	x1, [sp, #84]
    9fbc:	mov	x0, x1
    9fc0:	lsl	x0, x0, #1
    9fc4:	add	x0, x0, x1
    9fc8:	lsl	x0, x0, #2
    9fcc:	adrp	x1, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9fd0:	add	x1, x1, #0x318
    9fd4:	add	x3, x0, x1
    9fd8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    9fdc:	add	x2, x0, #0x318
    9fe0:	ldrsw	x1, [sp, #84]
    9fe4:	mov	x0, x1
    9fe8:	lsl	x0, x0, #1
    9fec:	add	x0, x0, x1
    9ff0:	lsl	x0, x0, #2
    9ff4:	add	x0, x2, x0
    9ff8:	ldrb	w0, [x0, #7]
    9ffc:	and	x0, x0, #0xff
    a000:	mov	x2, x0
    a004:	mov	x1, x3
    a008:	ldr	x0, [sp, #104]
    a00c:	bl	8a60 <strncasecmp@plt>
    a010:	cmp	w0, #0x0
    a014:	b.ne	a078 <GOMP_critical_name_end@@GOMP_1.0+0xea8>  // b.any
    a018:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    a01c:	add	x2, x0, #0x318
    a020:	ldrsw	x1, [sp, #84]
    a024:	mov	x0, x1
    a028:	lsl	x0, x0, #1
    a02c:	add	x0, x0, x1
    a030:	lsl	x0, x0, #2
    a034:	add	x0, x2, x0
    a038:	ldr	w0, [x0, #8]
    a03c:	strb	w0, [sp, #103]
    a040:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    a044:	add	x2, x0, #0x318
    a048:	ldrsw	x1, [sp, #84]
    a04c:	mov	x0, x1
    a050:	lsl	x0, x0, #1
    a054:	add	x0, x0, x1
    a058:	lsl	x0, x0, #2
    a05c:	add	x0, x2, x0
    a060:	ldrb	w0, [x0, #7]
    a064:	and	x0, x0, #0xff
    a068:	ldr	x1, [sp, #104]
    a06c:	add	x0, x1, x0
    a070:	str	x0, [sp, #104]
    a074:	b	a090 <GOMP_critical_name_end@@GOMP_1.0+0xec0>
    a078:	ldr	w0, [sp, #84]
    a07c:	add	w0, w0, #0x1
    a080:	str	w0, [sp, #84]
    a084:	ldr	w0, [sp, #84]
    a088:	cmp	w0, #0x4
    a08c:	b.le	9fb8 <GOMP_critical_name_end@@GOMP_1.0+0xde8>
    a090:	ldr	w0, [sp, #84]
    a094:	cmp	w0, #0x5
    a098:	b.eq	a188 <GOMP_critical_name_end@@GOMP_1.0+0xfb8>  // b.none
    a09c:	ldr	x0, [sp, #72]
    a0a0:	add	x1, x0, #0x1
    a0a4:	str	x1, [sp, #72]
    a0a8:	ldr	x1, [sp, #88]
    a0ac:	add	x0, x1, x0
    a0b0:	ldrb	w1, [sp, #103]
    a0b4:	strb	w1, [x0]
    a0b8:	b	a0c8 <GOMP_critical_name_end@@GOMP_1.0+0xef8>
    a0bc:	ldr	x0, [sp, #104]
    a0c0:	add	x0, x0, #0x1
    a0c4:	str	x0, [sp, #104]
    a0c8:	bl	89c0 <__ctype_b_loc@plt>
    a0cc:	ldr	x1, [x0]
    a0d0:	ldr	x0, [sp, #104]
    a0d4:	ldrb	w0, [x0]
    a0d8:	and	x0, x0, #0xff
    a0dc:	lsl	x0, x0, #1
    a0e0:	add	x0, x1, x0
    a0e4:	ldrh	w0, [x0]
    a0e8:	and	w0, w0, #0x2000
    a0ec:	cmp	w0, #0x0
    a0f0:	b.ne	a0bc <GOMP_critical_name_end@@GOMP_1.0+0xeec>  // b.any
    a0f4:	ldr	x0, [sp, #104]
    a0f8:	ldrb	w0, [x0]
    a0fc:	cmp	w0, #0x0
    a100:	b.eq	a118 <GOMP_critical_name_end@@GOMP_1.0+0xf48>  // b.none
    a104:	ldr	x0, [sp, #104]
    a108:	ldrb	w0, [x0]
    a10c:	cmp	w0, #0x2c
    a110:	b.ne	a190 <GOMP_critical_name_end@@GOMP_1.0+0xfc0>  // b.any
    a114:	b	9eb8 <GOMP_critical_name_end@@GOMP_1.0+0xce8>
    a118:	nop
    a11c:	ldr	x0, [sp, #88]
    a120:	ldrb	w1, [x0]
    a124:	ldr	x0, [sp, #32]
    a128:	strb	w1, [x0]
    a12c:	ldr	x0, [sp, #24]
    a130:	ldr	x1, [sp, #88]
    a134:	str	x1, [x0]
    a138:	ldr	x0, [sp, #16]
    a13c:	ldr	x1, [sp, #72]
    a140:	str	x1, [x0]
    a144:	mov	w0, #0x1                   	// #1
    a148:	b	a1b0 <GOMP_critical_name_end@@GOMP_1.0+0xfe0>
    a14c:	ldr	x0, [sp, #32]
    a150:	ldrb	w1, [sp, #103]
    a154:	strb	w1, [x0]
    a158:	mov	w0, #0x1                   	// #1
    a15c:	b	a1b0 <GOMP_critical_name_end@@GOMP_1.0+0xfe0>
    a160:	nop
    a164:	b	a194 <GOMP_critical_name_end@@GOMP_1.0+0xfc4>
    a168:	nop
    a16c:	b	a194 <GOMP_critical_name_end@@GOMP_1.0+0xfc4>
    a170:	nop
    a174:	b	a194 <GOMP_critical_name_end@@GOMP_1.0+0xfc4>
    a178:	nop
    a17c:	b	a194 <GOMP_critical_name_end@@GOMP_1.0+0xfc4>
    a180:	nop
    a184:	b	a194 <GOMP_critical_name_end@@GOMP_1.0+0xfc4>
    a188:	nop
    a18c:	b	a194 <GOMP_critical_name_end@@GOMP_1.0+0xfc4>
    a190:	nop
    a194:	ldr	x0, [sp, #88]
    a198:	bl	8a20 <free@plt>
    a19c:	ldr	x1, [sp, #40]
    a1a0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    a1a4:	add	x0, x0, #0xb80
    a1a8:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    a1ac:	mov	w0, #0x0                   	// #0
    a1b0:	ldp	x29, x30, [sp], #112
    a1b4:	ret
    a1b8:	stp	x29, x30, [sp, #-128]!
    a1bc:	mov	x29, sp
    a1c0:	str	x0, [sp, #40]
    a1c4:	str	x1, [sp, #32]
    a1c8:	str	x2, [sp, #24]
    a1cc:	str	x3, [sp, #16]
    a1d0:	ldr	x0, [sp, #40]
    a1d4:	ldr	x0, [x0]
    a1d8:	str	x0, [sp, #48]
    a1dc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    a1e0:	add	x0, x0, #0x650
    a1e4:	ldr	x0, [x0]
    a1e8:	cmp	x0, #0x0
    a1ec:	b.eq	a218 <GOMP_critical_name_end@@GOMP_1.0+0x1048>  // b.none
    a1f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    a1f4:	add	x0, x0, #0x650
    a1f8:	ldr	x1, [x0]
    a1fc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    a200:	add	x0, x0, #0x678
    a204:	ldr	x0, [x0]
    a208:	lsl	x0, x0, #3
    a20c:	add	x0, x1, x0
    a210:	ldr	x0, [x0]
    a214:	b	a21c <GOMP_critical_name_end@@GOMP_1.0+0x104c>
    a218:	mov	x0, #0x0                   	// #0
    a21c:	str	x0, [sp, #80]
    a220:	mov	x0, #0x1                   	// #1
    a224:	str	x0, [sp, #120]
    a228:	mov	x0, #0x1                   	// #1
    a22c:	str	x0, [sp, #112]
    a230:	strb	wzr, [sp, #107]
    a234:	ldr	x0, [sp, #32]
    a238:	strb	wzr, [x0]
    a23c:	b	a24c <GOMP_critical_name_end@@GOMP_1.0+0x107c>
    a240:	ldr	x0, [sp, #48]
    a244:	add	x0, x0, #0x1
    a248:	str	x0, [sp, #48]
    a24c:	bl	89c0 <__ctype_b_loc@plt>
    a250:	ldr	x1, [x0]
    a254:	ldr	x0, [sp, #48]
    a258:	ldrb	w0, [x0]
    a25c:	and	x0, x0, #0xff
    a260:	lsl	x0, x0, #1
    a264:	add	x0, x1, x0
    a268:	ldrh	w0, [x0]
    a26c:	and	w0, w0, #0x2000
    a270:	cmp	w0, #0x0
    a274:	b.ne	a240 <GOMP_critical_name_end@@GOMP_1.0+0x1070>  // b.any
    a278:	ldr	x0, [sp, #48]
    a27c:	ldrb	w0, [x0]
    a280:	cmp	w0, #0x21
    a284:	b.ne	a2dc <GOMP_critical_name_end@@GOMP_1.0+0x110c>  // b.any
    a288:	ldr	x0, [sp, #32]
    a28c:	mov	w1, #0x1                   	// #1
    a290:	strb	w1, [x0]
    a294:	ldr	x0, [sp, #48]
    a298:	add	x0, x0, #0x1
    a29c:	str	x0, [sp, #48]
    a2a0:	b	a2b0 <GOMP_critical_name_end@@GOMP_1.0+0x10e0>
    a2a4:	ldr	x0, [sp, #48]
    a2a8:	add	x0, x0, #0x1
    a2ac:	str	x0, [sp, #48]
    a2b0:	bl	89c0 <__ctype_b_loc@plt>
    a2b4:	ldr	x1, [x0]
    a2b8:	ldr	x0, [sp, #48]
    a2bc:	ldrb	w0, [x0]
    a2c0:	and	x0, x0, #0xff
    a2c4:	lsl	x0, x0, #1
    a2c8:	add	x0, x1, x0
    a2cc:	ldrh	w0, [x0]
    a2d0:	and	w0, w0, #0x2000
    a2d4:	cmp	w0, #0x0
    a2d8:	b.ne	a2a4 <GOMP_critical_name_end@@GOMP_1.0+0x10d4>  // b.any
    a2dc:	ldr	x0, [sp, #48]
    a2e0:	ldrb	w0, [x0]
    a2e4:	cmp	w0, #0x7b
    a2e8:	b.eq	a2f4 <GOMP_critical_name_end@@GOMP_1.0+0x1124>  // b.none
    a2ec:	mov	w0, #0x0                   	// #0
    a2f0:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a2f4:	ldr	x0, [sp, #48]
    a2f8:	add	x0, x0, #0x1
    a2fc:	str	x0, [sp, #48]
    a300:	b	a310 <GOMP_critical_name_end@@GOMP_1.0+0x1140>
    a304:	ldr	x0, [sp, #48]
    a308:	add	x0, x0, #0x1
    a30c:	str	x0, [sp, #48]
    a310:	bl	89c0 <__ctype_b_loc@plt>
    a314:	ldr	x1, [x0]
    a318:	ldr	x0, [sp, #48]
    a31c:	ldrb	w0, [x0]
    a320:	and	x0, x0, #0xff
    a324:	lsl	x0, x0, #1
    a328:	add	x0, x1, x0
    a32c:	ldrh	w0, [x0]
    a330:	and	w0, w0, #0x2000
    a334:	cmp	w0, #0x0
    a338:	b.ne	a304 <GOMP_critical_name_end@@GOMP_1.0+0x1134>  // b.any
    a33c:	ldr	x0, [sp, #48]
    a340:	str	x0, [sp, #72]
    a344:	str	wzr, [sp, #108]
    a348:	b	a6dc <GOMP_critical_name_end@@GOMP_1.0+0x150c>
    a34c:	ldr	x0, [sp, #72]
    a350:	str	x0, [sp, #48]
    a354:	mov	x0, #0x1                   	// #1
    a358:	str	x0, [sp, #96]
    a35c:	mov	x0, #0x1                   	// #1
    a360:	str	x0, [sp, #88]
    a364:	ldr	x0, [sp, #48]
    a368:	ldrb	w0, [x0]
    a36c:	cmp	w0, #0x21
    a370:	cset	w0, eq  // eq = none
    a374:	strb	w0, [sp, #71]
    a378:	ldrb	w0, [sp, #71]
    a37c:	cmp	w0, #0x0
    a380:	b.eq	a3e8 <GOMP_critical_name_end@@GOMP_1.0+0x1218>  // b.none
    a384:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    a388:	add	x0, x0, #0x650
    a38c:	ldr	x0, [x0]
    a390:	cmp	x0, #0x0
    a394:	b.eq	a3a0 <GOMP_critical_name_end@@GOMP_1.0+0x11d0>  // b.none
    a398:	mov	w0, #0x1                   	// #1
    a39c:	strb	w0, [sp, #107]
    a3a0:	ldr	x0, [sp, #48]
    a3a4:	add	x0, x0, #0x1
    a3a8:	str	x0, [sp, #48]
    a3ac:	b	a3bc <GOMP_critical_name_end@@GOMP_1.0+0x11ec>
    a3b0:	ldr	x0, [sp, #48]
    a3b4:	add	x0, x0, #0x1
    a3b8:	str	x0, [sp, #48]
    a3bc:	bl	89c0 <__ctype_b_loc@plt>
    a3c0:	ldr	x1, [x0]
    a3c4:	ldr	x0, [sp, #48]
    a3c8:	ldrb	w0, [x0]
    a3cc:	and	x0, x0, #0xff
    a3d0:	lsl	x0, x0, #1
    a3d4:	add	x0, x1, x0
    a3d8:	ldrh	w0, [x0]
    a3dc:	and	w0, w0, #0x2000
    a3e0:	cmp	w0, #0x0
    a3e4:	b.ne	a3b0 <GOMP_critical_name_end@@GOMP_1.0+0x11e0>  // b.any
    a3e8:	bl	8be0 <__errno_location@plt>
    a3ec:	str	wzr, [x0]
    a3f0:	ldr	x0, [sp, #48]
    a3f4:	add	x1, sp, #0x30
    a3f8:	mov	w2, #0xa                   	// #10
    a3fc:	bl	86c0 <strtoul@plt>
    a400:	str	x0, [sp, #56]
    a404:	bl	8be0 <__errno_location@plt>
    a408:	ldr	w0, [x0]
    a40c:	cmp	w0, #0x0
    a410:	b.eq	a428 <GOMP_critical_name_end@@GOMP_1.0+0x1258>  // b.none
    a414:	mov	w0, #0x0                   	// #0
    a418:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a41c:	ldr	x0, [sp, #48]
    a420:	add	x0, x0, #0x1
    a424:	str	x0, [sp, #48]
    a428:	bl	89c0 <__ctype_b_loc@plt>
    a42c:	ldr	x1, [x0]
    a430:	ldr	x0, [sp, #48]
    a434:	ldrb	w0, [x0]
    a438:	and	x0, x0, #0xff
    a43c:	lsl	x0, x0, #1
    a440:	add	x0, x1, x0
    a444:	ldrh	w0, [x0]
    a448:	and	w0, w0, #0x2000
    a44c:	cmp	w0, #0x0
    a450:	b.ne	a41c <GOMP_critical_name_end@@GOMP_1.0+0x124c>  // b.any
    a454:	ldr	x0, [sp, #48]
    a458:	ldrb	w0, [x0]
    a45c:	cmp	w0, #0x3a
    a460:	b.ne	a5e8 <GOMP_critical_name_end@@GOMP_1.0+0x1418>  // b.any
    a464:	ldr	x0, [sp, #48]
    a468:	add	x0, x0, #0x1
    a46c:	str	x0, [sp, #48]
    a470:	b	a480 <GOMP_critical_name_end@@GOMP_1.0+0x12b0>
    a474:	ldr	x0, [sp, #48]
    a478:	add	x0, x0, #0x1
    a47c:	str	x0, [sp, #48]
    a480:	bl	89c0 <__ctype_b_loc@plt>
    a484:	ldr	x1, [x0]
    a488:	ldr	x0, [sp, #48]
    a48c:	ldrb	w0, [x0]
    a490:	and	x0, x0, #0xff
    a494:	lsl	x0, x0, #1
    a498:	add	x0, x1, x0
    a49c:	ldrh	w0, [x0]
    a4a0:	and	w0, w0, #0x2000
    a4a4:	cmp	w0, #0x0
    a4a8:	b.ne	a474 <GOMP_critical_name_end@@GOMP_1.0+0x12a4>  // b.any
    a4ac:	bl	8be0 <__errno_location@plt>
    a4b0:	str	wzr, [x0]
    a4b4:	ldr	x0, [sp, #48]
    a4b8:	add	x1, sp, #0x30
    a4bc:	mov	w2, #0xa                   	// #10
    a4c0:	bl	86c0 <strtoul@plt>
    a4c4:	str	x0, [sp, #96]
    a4c8:	bl	8be0 <__errno_location@plt>
    a4cc:	ldr	w0, [x0]
    a4d0:	cmp	w0, #0x0
    a4d4:	b.ne	a4e4 <GOMP_critical_name_end@@GOMP_1.0+0x1314>  // b.any
    a4d8:	ldr	x0, [sp, #96]
    a4dc:	cmp	x0, #0x0
    a4e0:	b.ne	a4f8 <GOMP_critical_name_end@@GOMP_1.0+0x1328>  // b.any
    a4e4:	mov	w0, #0x0                   	// #0
    a4e8:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a4ec:	ldr	x0, [sp, #48]
    a4f0:	add	x0, x0, #0x1
    a4f4:	str	x0, [sp, #48]
    a4f8:	bl	89c0 <__ctype_b_loc@plt>
    a4fc:	ldr	x1, [x0]
    a500:	ldr	x0, [sp, #48]
    a504:	ldrb	w0, [x0]
    a508:	and	x0, x0, #0xff
    a50c:	lsl	x0, x0, #1
    a510:	add	x0, x1, x0
    a514:	ldrh	w0, [x0]
    a518:	and	w0, w0, #0x2000
    a51c:	cmp	w0, #0x0
    a520:	b.ne	a4ec <GOMP_critical_name_end@@GOMP_1.0+0x131c>  // b.any
    a524:	ldr	x0, [sp, #48]
    a528:	ldrb	w0, [x0]
    a52c:	cmp	w0, #0x3a
    a530:	b.ne	a5e8 <GOMP_critical_name_end@@GOMP_1.0+0x1418>  // b.any
    a534:	ldr	x0, [sp, #48]
    a538:	add	x0, x0, #0x1
    a53c:	str	x0, [sp, #48]
    a540:	b	a550 <GOMP_critical_name_end@@GOMP_1.0+0x1380>
    a544:	ldr	x0, [sp, #48]
    a548:	add	x0, x0, #0x1
    a54c:	str	x0, [sp, #48]
    a550:	bl	89c0 <__ctype_b_loc@plt>
    a554:	ldr	x1, [x0]
    a558:	ldr	x0, [sp, #48]
    a55c:	ldrb	w0, [x0]
    a560:	and	x0, x0, #0xff
    a564:	lsl	x0, x0, #1
    a568:	add	x0, x1, x0
    a56c:	ldrh	w0, [x0]
    a570:	and	w0, w0, #0x2000
    a574:	cmp	w0, #0x0
    a578:	b.ne	a544 <GOMP_critical_name_end@@GOMP_1.0+0x1374>  // b.any
    a57c:	bl	8be0 <__errno_location@plt>
    a580:	str	wzr, [x0]
    a584:	ldr	x0, [sp, #48]
    a588:	add	x1, sp, #0x30
    a58c:	mov	w2, #0xa                   	// #10
    a590:	bl	89d0 <strtol@plt>
    a594:	str	x0, [sp, #88]
    a598:	bl	8be0 <__errno_location@plt>
    a59c:	ldr	w0, [x0]
    a5a0:	cmp	w0, #0x0
    a5a4:	b.eq	a5bc <GOMP_critical_name_end@@GOMP_1.0+0x13ec>  // b.none
    a5a8:	mov	w0, #0x0                   	// #0
    a5ac:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a5b0:	ldr	x0, [sp, #48]
    a5b4:	add	x0, x0, #0x1
    a5b8:	str	x0, [sp, #48]
    a5bc:	bl	89c0 <__ctype_b_loc@plt>
    a5c0:	ldr	x1, [x0]
    a5c4:	ldr	x0, [sp, #48]
    a5c8:	ldrb	w0, [x0]
    a5cc:	and	x0, x0, #0xff
    a5d0:	lsl	x0, x0, #1
    a5d4:	add	x0, x1, x0
    a5d8:	ldrh	w0, [x0]
    a5dc:	and	w0, w0, #0x2000
    a5e0:	cmp	w0, #0x0
    a5e4:	b.ne	a5b0 <GOMP_critical_name_end@@GOMP_1.0+0x13e0>  // b.any
    a5e8:	ldrb	w0, [sp, #71]
    a5ec:	cmp	w0, #0x0
    a5f0:	b.eq	a608 <GOMP_critical_name_end@@GOMP_1.0+0x1438>  // b.none
    a5f4:	ldr	x0, [sp, #96]
    a5f8:	cmp	x0, #0x1
    a5fc:	b.eq	a608 <GOMP_critical_name_end@@GOMP_1.0+0x1438>  // b.none
    a600:	mov	w0, #0x0                   	// #0
    a604:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a608:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    a60c:	add	x0, x0, #0x650
    a610:	ldr	x0, [x0]
    a614:	cmp	x0, #0x0
    a618:	b.eq	a694 <GOMP_critical_name_end@@GOMP_1.0+0x14c4>  // b.none
    a61c:	ldrb	w0, [sp, #71]
    a620:	ldr	w1, [sp, #108]
    a624:	cmp	w1, w0
    a628:	b.ne	a694 <GOMP_critical_name_end@@GOMP_1.0+0x14c4>  // b.any
    a62c:	ldrb	w0, [sp, #71]
    a630:	cmp	w0, #0x0
    a634:	b.eq	a660 <GOMP_critical_name_end@@GOMP_1.0+0x1490>  // b.none
    a638:	ldr	x1, [sp, #56]
    a63c:	ldr	x0, [sp, #80]
    a640:	bl	23b24 <omp_pause_resource_all_@@OMP_5.0+0x41c>
    a644:	and	w0, w0, #0xff
    a648:	eor	w0, w0, #0x1
    a64c:	and	w0, w0, #0xff
    a650:	cmp	w0, #0x0
    a654:	b.eq	a694 <GOMP_critical_name_end@@GOMP_1.0+0x14c4>  // b.none
    a658:	mov	w0, #0x0                   	// #0
    a65c:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a660:	mov	w4, #0x0                   	// #0
    a664:	ldr	x3, [sp, #88]
    a668:	ldr	x2, [sp, #96]
    a66c:	ldr	x1, [sp, #56]
    a670:	ldr	x0, [sp, #80]
    a674:	bl	2399c <omp_pause_resource_all_@@OMP_5.0+0x294>
    a678:	and	w0, w0, #0xff
    a67c:	eor	w0, w0, #0x1
    a680:	and	w0, w0, #0xff
    a684:	cmp	w0, #0x0
    a688:	b.eq	a694 <GOMP_critical_name_end@@GOMP_1.0+0x14c4>  // b.none
    a68c:	mov	w0, #0x0                   	// #0
    a690:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a694:	ldr	x0, [sp, #48]
    a698:	ldrb	w0, [x0]
    a69c:	cmp	w0, #0x7d
    a6a0:	b.eq	a6cc <GOMP_critical_name_end@@GOMP_1.0+0x14fc>  // b.none
    a6a4:	ldr	x0, [sp, #48]
    a6a8:	ldrb	w0, [x0]
    a6ac:	cmp	w0, #0x2c
    a6b0:	b.eq	a6bc <GOMP_critical_name_end@@GOMP_1.0+0x14ec>  // b.none
    a6b4:	mov	w0, #0x0                   	// #0
    a6b8:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a6bc:	ldr	x0, [sp, #48]
    a6c0:	add	x0, x0, #0x1
    a6c4:	str	x0, [sp, #48]
    a6c8:	b	a354 <GOMP_critical_name_end@@GOMP_1.0+0x1184>
    a6cc:	nop
    a6d0:	ldr	w0, [sp, #108]
    a6d4:	add	w0, w0, #0x1
    a6d8:	str	w0, [sp, #108]
    a6dc:	ldrb	w0, [sp, #107]
    a6e0:	cmp	w0, #0x0
    a6e4:	b.eq	a6f0 <GOMP_critical_name_end@@GOMP_1.0+0x1520>  // b.none
    a6e8:	mov	w0, #0x2                   	// #2
    a6ec:	b	a6f4 <GOMP_critical_name_end@@GOMP_1.0+0x1524>
    a6f0:	mov	w0, #0x1                   	// #1
    a6f4:	ldr	w1, [sp, #108]
    a6f8:	cmp	w0, w1
    a6fc:	b.gt	a34c <GOMP_critical_name_end@@GOMP_1.0+0x117c>
    a700:	ldr	x0, [sp, #48]
    a704:	add	x0, x0, #0x1
    a708:	str	x0, [sp, #48]
    a70c:	b	a71c <GOMP_critical_name_end@@GOMP_1.0+0x154c>
    a710:	ldr	x0, [sp, #48]
    a714:	add	x0, x0, #0x1
    a718:	str	x0, [sp, #48]
    a71c:	bl	89c0 <__ctype_b_loc@plt>
    a720:	ldr	x1, [x0]
    a724:	ldr	x0, [sp, #48]
    a728:	ldrb	w0, [x0]
    a72c:	and	x0, x0, #0xff
    a730:	lsl	x0, x0, #1
    a734:	add	x0, x1, x0
    a738:	ldrh	w0, [x0]
    a73c:	and	w0, w0, #0x2000
    a740:	cmp	w0, #0x0
    a744:	b.ne	a710 <GOMP_critical_name_end@@GOMP_1.0+0x1540>  // b.any
    a748:	ldr	x0, [sp, #48]
    a74c:	ldrb	w0, [x0]
    a750:	cmp	w0, #0x3a
    a754:	b.ne	a8ec <GOMP_critical_name_end@@GOMP_1.0+0x171c>  // b.any
    a758:	ldr	x0, [sp, #48]
    a75c:	add	x0, x0, #0x1
    a760:	str	x0, [sp, #48]
    a764:	b	a774 <GOMP_critical_name_end@@GOMP_1.0+0x15a4>
    a768:	ldr	x0, [sp, #48]
    a76c:	add	x0, x0, #0x1
    a770:	str	x0, [sp, #48]
    a774:	bl	89c0 <__ctype_b_loc@plt>
    a778:	ldr	x1, [x0]
    a77c:	ldr	x0, [sp, #48]
    a780:	ldrb	w0, [x0]
    a784:	and	x0, x0, #0xff
    a788:	lsl	x0, x0, #1
    a78c:	add	x0, x1, x0
    a790:	ldrh	w0, [x0]
    a794:	and	w0, w0, #0x2000
    a798:	cmp	w0, #0x0
    a79c:	b.ne	a768 <GOMP_critical_name_end@@GOMP_1.0+0x1598>  // b.any
    a7a0:	bl	8be0 <__errno_location@plt>
    a7a4:	str	wzr, [x0]
    a7a8:	ldr	x0, [sp, #48]
    a7ac:	add	x1, sp, #0x30
    a7b0:	mov	w2, #0xa                   	// #10
    a7b4:	bl	86c0 <strtoul@plt>
    a7b8:	str	x0, [sp, #120]
    a7bc:	bl	8be0 <__errno_location@plt>
    a7c0:	ldr	w0, [x0]
    a7c4:	cmp	w0, #0x0
    a7c8:	b.ne	a7e8 <GOMP_critical_name_end@@GOMP_1.0+0x1618>  // b.any
    a7cc:	ldr	x0, [sp, #120]
    a7d0:	cmp	x0, #0x0
    a7d4:	b.eq	a7e8 <GOMP_critical_name_end@@GOMP_1.0+0x1618>  // b.none
    a7d8:	ldr	x1, [sp, #120]
    a7dc:	mov	x0, #0xffff                	// #65535
    a7e0:	cmp	x1, x0
    a7e4:	b.ls	a7fc <GOMP_critical_name_end@@GOMP_1.0+0x162c>  // b.plast
    a7e8:	mov	w0, #0x0                   	// #0
    a7ec:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a7f0:	ldr	x0, [sp, #48]
    a7f4:	add	x0, x0, #0x1
    a7f8:	str	x0, [sp, #48]
    a7fc:	bl	89c0 <__ctype_b_loc@plt>
    a800:	ldr	x1, [x0]
    a804:	ldr	x0, [sp, #48]
    a808:	ldrb	w0, [x0]
    a80c:	and	x0, x0, #0xff
    a810:	lsl	x0, x0, #1
    a814:	add	x0, x1, x0
    a818:	ldrh	w0, [x0]
    a81c:	and	w0, w0, #0x2000
    a820:	cmp	w0, #0x0
    a824:	b.ne	a7f0 <GOMP_critical_name_end@@GOMP_1.0+0x1620>  // b.any
    a828:	ldr	x0, [sp, #48]
    a82c:	ldrb	w0, [x0]
    a830:	cmp	w0, #0x3a
    a834:	b.ne	a8ec <GOMP_critical_name_end@@GOMP_1.0+0x171c>  // b.any
    a838:	ldr	x0, [sp, #48]
    a83c:	add	x0, x0, #0x1
    a840:	str	x0, [sp, #48]
    a844:	b	a854 <GOMP_critical_name_end@@GOMP_1.0+0x1684>
    a848:	ldr	x0, [sp, #48]
    a84c:	add	x0, x0, #0x1
    a850:	str	x0, [sp, #48]
    a854:	bl	89c0 <__ctype_b_loc@plt>
    a858:	ldr	x1, [x0]
    a85c:	ldr	x0, [sp, #48]
    a860:	ldrb	w0, [x0]
    a864:	and	x0, x0, #0xff
    a868:	lsl	x0, x0, #1
    a86c:	add	x0, x1, x0
    a870:	ldrh	w0, [x0]
    a874:	and	w0, w0, #0x2000
    a878:	cmp	w0, #0x0
    a87c:	b.ne	a848 <GOMP_critical_name_end@@GOMP_1.0+0x1678>  // b.any
    a880:	bl	8be0 <__errno_location@plt>
    a884:	str	wzr, [x0]
    a888:	ldr	x0, [sp, #48]
    a88c:	add	x1, sp, #0x30
    a890:	mov	w2, #0xa                   	// #10
    a894:	bl	89d0 <strtol@plt>
    a898:	str	x0, [sp, #112]
    a89c:	bl	8be0 <__errno_location@plt>
    a8a0:	ldr	w0, [x0]
    a8a4:	cmp	w0, #0x0
    a8a8:	b.eq	a8c0 <GOMP_critical_name_end@@GOMP_1.0+0x16f0>  // b.none
    a8ac:	mov	w0, #0x0                   	// #0
    a8b0:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a8b4:	ldr	x0, [sp, #48]
    a8b8:	add	x0, x0, #0x1
    a8bc:	str	x0, [sp, #48]
    a8c0:	bl	89c0 <__ctype_b_loc@plt>
    a8c4:	ldr	x1, [x0]
    a8c8:	ldr	x0, [sp, #48]
    a8cc:	ldrb	w0, [x0]
    a8d0:	and	x0, x0, #0xff
    a8d4:	lsl	x0, x0, #1
    a8d8:	add	x0, x1, x0
    a8dc:	ldrh	w0, [x0]
    a8e0:	and	w0, w0, #0x2000
    a8e4:	cmp	w0, #0x0
    a8e8:	b.ne	a8b4 <GOMP_critical_name_end@@GOMP_1.0+0x16e4>  // b.any
    a8ec:	ldr	x0, [sp, #32]
    a8f0:	ldrb	w0, [x0]
    a8f4:	cmp	w0, #0x0
    a8f8:	b.eq	a910 <GOMP_critical_name_end@@GOMP_1.0+0x1740>  // b.none
    a8fc:	ldr	x0, [sp, #120]
    a900:	cmp	x0, #0x1
    a904:	b.eq	a910 <GOMP_critical_name_end@@GOMP_1.0+0x1740>  // b.none
    a908:	mov	w0, #0x0                   	// #0
    a90c:	b	a938 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a910:	ldr	x1, [sp, #48]
    a914:	ldr	x0, [sp, #40]
    a918:	str	x1, [x0]
    a91c:	ldr	x0, [sp, #24]
    a920:	ldr	x1, [sp, #120]
    a924:	str	x1, [x0]
    a928:	ldr	x0, [sp, #16]
    a92c:	ldr	x1, [sp, #112]
    a930:	str	x1, [x0]
    a934:	mov	w0, #0x1                   	// #1
    a938:	ldp	x29, x30, [sp], #128
    a93c:	ret
    a940:	stp	x29, x30, [sp, #-128]!
    a944:	mov	x29, sp
    a948:	str	x0, [sp, #24]
    a94c:	strb	w1, [sp, #23]
    a950:	ldr	x0, [sp, #24]
    a954:	bl	8c00 <getenv@plt>
    a958:	str	x0, [sp, #96]
    a95c:	strb	wzr, [sp, #127]
    a960:	str	wzr, [sp, #120]
    a964:	str	xzr, [sp, #112]
    a968:	ldr	x0, [sp, #96]
    a96c:	cmp	x0, #0x0
    a970:	b.ne	a988 <GOMP_critical_name_end@@GOMP_1.0+0x17b8>  // b.any
    a974:	mov	w0, #0x0                   	// #0
    a978:	b	b100 <GOMP_critical_name_end@@GOMP_1.0+0x1f30>
    a97c:	ldr	x0, [sp, #96]
    a980:	add	x0, x0, #0x1
    a984:	str	x0, [sp, #96]
    a988:	bl	89c0 <__ctype_b_loc@plt>
    a98c:	ldr	x1, [x0]
    a990:	ldr	x0, [sp, #96]
    a994:	ldrb	w0, [x0]
    a998:	and	x0, x0, #0xff
    a99c:	lsl	x0, x0, #1
    a9a0:	add	x0, x1, x0
    a9a4:	ldrh	w0, [x0]
    a9a8:	and	w0, w0, #0x2000
    a9ac:	cmp	w0, #0x0
    a9b0:	b.ne	a97c <GOMP_critical_name_end@@GOMP_1.0+0x17ac>  // b.any
    a9b4:	ldr	x0, [sp, #96]
    a9b8:	ldrb	w0, [x0]
    a9bc:	cmp	w0, #0x0
    a9c0:	b.eq	b070 <GOMP_critical_name_end@@GOMP_1.0+0x1ea0>  // b.none
    a9c4:	ldr	x3, [sp, #96]
    a9c8:	mov	x2, #0x7                   	// #7
    a9cc:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    a9d0:	add	x1, x0, #0xbf0
    a9d4:	mov	x0, x3
    a9d8:	bl	8a60 <strncasecmp@plt>
    a9dc:	cmp	w0, #0x0
    a9e0:	b.ne	a9fc <GOMP_critical_name_end@@GOMP_1.0+0x182c>  // b.any
    a9e4:	ldr	x0, [sp, #96]
    a9e8:	add	x0, x0, #0x7
    a9ec:	str	x0, [sp, #96]
    a9f0:	mov	w0, #0x1                   	// #1
    a9f4:	str	w0, [sp, #120]
    a9f8:	b	aa68 <GOMP_critical_name_end@@GOMP_1.0+0x1898>
    a9fc:	ldr	x3, [sp, #96]
    aa00:	mov	x2, #0x5                   	// #5
    aa04:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    aa08:	add	x1, x0, #0xbf8
    aa0c:	mov	x0, x3
    aa10:	bl	8a60 <strncasecmp@plt>
    aa14:	cmp	w0, #0x0
    aa18:	b.ne	aa34 <GOMP_critical_name_end@@GOMP_1.0+0x1864>  // b.any
    aa1c:	ldr	x0, [sp, #96]
    aa20:	add	x0, x0, #0x5
    aa24:	str	x0, [sp, #96]
    aa28:	mov	w0, #0x2                   	// #2
    aa2c:	str	w0, [sp, #120]
    aa30:	b	aa68 <GOMP_critical_name_end@@GOMP_1.0+0x1898>
    aa34:	ldr	x3, [sp, #96]
    aa38:	mov	x2, #0x7                   	// #7
    aa3c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    aa40:	add	x1, x0, #0xc00
    aa44:	mov	x0, x3
    aa48:	bl	8a60 <strncasecmp@plt>
    aa4c:	cmp	w0, #0x0
    aa50:	b.ne	aa68 <GOMP_critical_name_end@@GOMP_1.0+0x1898>  // b.any
    aa54:	ldr	x0, [sp, #96]
    aa58:	add	x0, x0, #0x7
    aa5c:	str	x0, [sp, #96]
    aa60:	mov	w0, #0x3                   	// #3
    aa64:	str	w0, [sp, #120]
    aa68:	ldr	w0, [sp, #120]
    aa6c:	cmp	w0, #0x0
    aa70:	b.eq	ac20 <GOMP_critical_name_end@@GOMP_1.0+0x1a50>  // b.none
    aa74:	mov	x0, #0xffffffffffffffff    	// #-1
    aa78:	str	x0, [sp, #112]
    aa7c:	b	aa8c <GOMP_critical_name_end@@GOMP_1.0+0x18bc>
    aa80:	ldr	x0, [sp, #96]
    aa84:	add	x0, x0, #0x1
    aa88:	str	x0, [sp, #96]
    aa8c:	bl	89c0 <__ctype_b_loc@plt>
    aa90:	ldr	x1, [x0]
    aa94:	ldr	x0, [sp, #96]
    aa98:	ldrb	w0, [x0]
    aa9c:	and	x0, x0, #0xff
    aaa0:	lsl	x0, x0, #1
    aaa4:	add	x0, x1, x0
    aaa8:	ldrh	w0, [x0]
    aaac:	and	w0, w0, #0x2000
    aab0:	cmp	w0, #0x0
    aab4:	b.ne	aa80 <GOMP_critical_name_end@@GOMP_1.0+0x18b0>  // b.any
    aab8:	ldr	x0, [sp, #96]
    aabc:	ldrb	w0, [x0]
    aac0:	cmp	w0, #0x0
    aac4:	b.eq	abf4 <GOMP_critical_name_end@@GOMP_1.0+0x1a24>  // b.none
    aac8:	ldr	x0, [sp, #96]
    aacc:	add	x1, x0, #0x1
    aad0:	str	x1, [sp, #96]
    aad4:	ldrb	w0, [x0]
    aad8:	cmp	w0, #0x28
    aadc:	b.ne	b078 <GOMP_critical_name_end@@GOMP_1.0+0x1ea8>  // b.any
    aae0:	b	aaf0 <GOMP_critical_name_end@@GOMP_1.0+0x1920>
    aae4:	ldr	x0, [sp, #96]
    aae8:	add	x0, x0, #0x1
    aaec:	str	x0, [sp, #96]
    aaf0:	bl	89c0 <__ctype_b_loc@plt>
    aaf4:	ldr	x1, [x0]
    aaf8:	ldr	x0, [sp, #96]
    aafc:	ldrb	w0, [x0]
    ab00:	and	x0, x0, #0xff
    ab04:	lsl	x0, x0, #1
    ab08:	add	x0, x1, x0
    ab0c:	ldrh	w0, [x0]
    ab10:	and	w0, w0, #0x2000
    ab14:	cmp	w0, #0x0
    ab18:	b.ne	aae4 <GOMP_critical_name_end@@GOMP_1.0+0x1914>  // b.any
    ab1c:	bl	8be0 <__errno_location@plt>
    ab20:	str	wzr, [x0]
    ab24:	ldr	x0, [sp, #96]
    ab28:	add	x1, sp, #0x58
    ab2c:	mov	w2, #0xa                   	// #10
    ab30:	bl	86c0 <strtoul@plt>
    ab34:	str	x0, [sp, #112]
    ab38:	bl	8be0 <__errno_location@plt>
    ab3c:	ldr	w0, [x0]
    ab40:	cmp	w0, #0x0
    ab44:	b.ne	b080 <GOMP_critical_name_end@@GOMP_1.0+0x1eb0>  // b.any
    ab48:	ldr	x0, [sp, #88]
    ab4c:	str	x0, [sp, #96]
    ab50:	b	ab60 <GOMP_critical_name_end@@GOMP_1.0+0x1990>
    ab54:	ldr	x0, [sp, #96]
    ab58:	add	x0, x0, #0x1
    ab5c:	str	x0, [sp, #96]
    ab60:	bl	89c0 <__ctype_b_loc@plt>
    ab64:	ldr	x1, [x0]
    ab68:	ldr	x0, [sp, #96]
    ab6c:	ldrb	w0, [x0]
    ab70:	and	x0, x0, #0xff
    ab74:	lsl	x0, x0, #1
    ab78:	add	x0, x1, x0
    ab7c:	ldrh	w0, [x0]
    ab80:	and	w0, w0, #0x2000
    ab84:	cmp	w0, #0x0
    ab88:	b.ne	ab54 <GOMP_critical_name_end@@GOMP_1.0+0x1984>  // b.any
    ab8c:	ldr	x0, [sp, #96]
    ab90:	ldrb	w0, [x0]
    ab94:	cmp	w0, #0x29
    ab98:	b.ne	b088 <GOMP_critical_name_end@@GOMP_1.0+0x1eb8>  // b.any
    ab9c:	ldr	x0, [sp, #96]
    aba0:	add	x0, x0, #0x1
    aba4:	str	x0, [sp, #96]
    aba8:	b	abb8 <GOMP_critical_name_end@@GOMP_1.0+0x19e8>
    abac:	ldr	x0, [sp, #96]
    abb0:	add	x0, x0, #0x1
    abb4:	str	x0, [sp, #96]
    abb8:	bl	89c0 <__ctype_b_loc@plt>
    abbc:	ldr	x1, [x0]
    abc0:	ldr	x0, [sp, #96]
    abc4:	ldrb	w0, [x0]
    abc8:	and	x0, x0, #0xff
    abcc:	lsl	x0, x0, #1
    abd0:	add	x0, x1, x0
    abd4:	ldrh	w0, [x0]
    abd8:	and	w0, w0, #0x2000
    abdc:	cmp	w0, #0x0
    abe0:	b.ne	abac <GOMP_critical_name_end@@GOMP_1.0+0x19dc>  // b.any
    abe4:	ldr	x0, [sp, #96]
    abe8:	ldrb	w0, [x0]
    abec:	cmp	w0, #0x0
    abf0:	b.ne	b090 <GOMP_critical_name_end@@GOMP_1.0+0x1ec0>  // b.any
    abf4:	ldrb	w0, [sp, #23]
    abf8:	cmp	w0, #0x0
    abfc:	b.eq	ac08 <GOMP_critical_name_end@@GOMP_1.0+0x1a38>  // b.none
    ac00:	mov	w0, #0x0                   	// #0
    ac04:	b	b100 <GOMP_critical_name_end@@GOMP_1.0+0x1f30>
    ac08:	mov	w2, #0x0                   	// #0
    ac0c:	ldr	x1, [sp, #112]
    ac10:	ldr	w0, [sp, #120]
    ac14:	bl	2462c <omp_pause_resource_all_@@OMP_5.0+0xf24>
    ac18:	and	w0, w0, #0xff
    ac1c:	b	b100 <GOMP_critical_name_end@@GOMP_1.0+0x1f30>
    ac20:	str	xzr, [sp, #112]
    ac24:	ldr	x0, [sp, #96]
    ac28:	str	x0, [sp, #88]
    ac2c:	add	x3, sp, #0x40
    ac30:	add	x2, sp, #0x48
    ac34:	add	x1, sp, #0x57
    ac38:	add	x0, sp, #0x58
    ac3c:	bl	a1b8 <GOMP_critical_name_end@@GOMP_1.0+0xfe8>
    ac40:	and	w0, w0, #0xff
    ac44:	eor	w0, w0, #0x1
    ac48:	and	w0, w0, #0xff
    ac4c:	cmp	w0, #0x0
    ac50:	b.ne	b098 <GOMP_critical_name_end@@GOMP_1.0+0x1ec8>  // b.any
    ac54:	ldrb	w0, [sp, #87]
    ac58:	cmp	w0, #0x0
    ac5c:	b.eq	ac8c <GOMP_critical_name_end@@GOMP_1.0+0x1abc>  // b.none
    ac60:	ldrb	w0, [sp, #127]
    ac64:	eor	w0, w0, #0x1
    ac68:	and	w0, w0, #0xff
    ac6c:	cmp	w0, #0x0
    ac70:	b.eq	ac80 <GOMP_critical_name_end@@GOMP_1.0+0x1ab0>  // b.none
    ac74:	ldr	x0, [sp, #112]
    ac78:	add	x0, x0, #0x1
    ac7c:	str	x0, [sp, #112]
    ac80:	mov	w0, #0x1                   	// #1
    ac84:	strb	w0, [sp, #127]
    ac88:	b	ac9c <GOMP_critical_name_end@@GOMP_1.0+0x1acc>
    ac8c:	ldr	x0, [sp, #72]
    ac90:	ldr	x1, [sp, #112]
    ac94:	add	x0, x1, x0
    ac98:	str	x0, [sp, #112]
    ac9c:	ldr	x0, [sp, #112]
    aca0:	cmp	x0, #0x10, lsl #12
    aca4:	b.hi	b0a0 <GOMP_critical_name_end@@GOMP_1.0+0x1ed0>  // b.pmore
    aca8:	ldr	x0, [sp, #88]
    acac:	ldrb	w0, [x0]
    acb0:	cmp	w0, #0x0
    acb4:	b.ne	acc8 <GOMP_critical_name_end@@GOMP_1.0+0x1af8>  // b.any
    acb8:	ldrb	w0, [sp, #23]
    acbc:	cmp	w0, #0x0
    acc0:	b.ne	ace8 <GOMP_critical_name_end@@GOMP_1.0+0x1b18>  // b.any
    acc4:	b	acf0 <GOMP_critical_name_end@@GOMP_1.0+0x1b20>
    acc8:	ldr	x0, [sp, #88]
    accc:	ldrb	w0, [x0]
    acd0:	cmp	w0, #0x2c
    acd4:	b.ne	b0a8 <GOMP_critical_name_end@@GOMP_1.0+0x1ed8>  // b.any
    acd8:	ldr	x0, [sp, #88]
    acdc:	add	x0, x0, #0x1
    ace0:	str	x0, [sp, #88]
    ace4:	b	ac2c <GOMP_critical_name_end@@GOMP_1.0+0x1a5c>
    ace8:	mov	w0, #0x0                   	// #0
    acec:	b	b100 <GOMP_critical_name_end@@GOMP_1.0+0x1f30>
    acf0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    acf4:	add	x0, x0, #0x678
    acf8:	str	xzr, [x0]
    acfc:	mov	w1, #0x0                   	// #0
    ad00:	ldr	x0, [sp, #112]
    ad04:	bl	23844 <omp_pause_resource_all_@@OMP_5.0+0x13c>
    ad08:	mov	x1, x0
    ad0c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ad10:	add	x0, x0, #0x650
    ad14:	str	x1, [x0]
    ad18:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ad1c:	add	x0, x0, #0x650
    ad20:	ldr	x0, [x0]
    ad24:	cmp	x0, #0x0
    ad28:	b.ne	ad34 <GOMP_critical_name_end@@GOMP_1.0+0x1b64>  // b.any
    ad2c:	mov	w0, #0x0                   	// #0
    ad30:	b	b100 <GOMP_critical_name_end@@GOMP_1.0+0x1f30>
    ad34:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ad38:	add	x0, x0, #0x650
    ad3c:	ldr	x1, [x0]
    ad40:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ad44:	add	x0, x0, #0x678
    ad48:	ldr	x0, [x0]
    ad4c:	lsl	x0, x0, #3
    ad50:	add	x0, x1, x0
    ad54:	ldr	x0, [x0]
    ad58:	bl	23958 <omp_pause_resource_all_@@OMP_5.0+0x250>
    ad5c:	add	x3, sp, #0x28
    ad60:	add	x2, sp, #0x30
    ad64:	add	x1, sp, #0x3f
    ad68:	add	x0, sp, #0x60
    ad6c:	bl	a1b8 <GOMP_critical_name_end@@GOMP_1.0+0xfe8>
    ad70:	and	w0, w0, #0xff
    ad74:	eor	w0, w0, #0x1
    ad78:	and	w0, w0, #0xff
    ad7c:	cmp	w0, #0x0
    ad80:	b.ne	b0b0 <GOMP_critical_name_end@@GOMP_1.0+0x1ee0>  // b.any
    ad84:	ldrb	w0, [sp, #63]
    ad88:	cmp	w0, #0x0
    ad8c:	b.eq	af0c <GOMP_critical_name_end@@GOMP_1.0+0x1d3c>  // b.none
    ad90:	str	xzr, [sp, #112]
    ad94:	b	adfc <GOMP_critical_name_end@@GOMP_1.0+0x1c2c>
    ad98:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ad9c:	add	x0, x0, #0x650
    ada0:	ldr	x1, [x0]
    ada4:	ldr	x0, [sp, #112]
    ada8:	lsl	x0, x0, #3
    adac:	add	x0, x1, x0
    adb0:	ldr	x2, [x0]
    adb4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    adb8:	add	x0, x0, #0x650
    adbc:	ldr	x1, [x0]
    adc0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    adc4:	add	x0, x0, #0x678
    adc8:	ldr	x0, [x0]
    adcc:	lsl	x0, x0, #3
    add0:	add	x0, x1, x0
    add4:	ldr	x0, [x0]
    add8:	mov	x1, x0
    addc:	mov	x0, x2
    ade0:	bl	23e38 <omp_pause_resource_all_@@OMP_5.0+0x730>
    ade4:	and	w0, w0, #0xff
    ade8:	cmp	w0, #0x0
    adec:	b.ne	ae18 <GOMP_critical_name_end@@GOMP_1.0+0x1c48>  // b.any
    adf0:	ldr	x0, [sp, #112]
    adf4:	add	x0, x0, #0x1
    adf8:	str	x0, [sp, #112]
    adfc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ae00:	add	x0, x0, #0x678
    ae04:	ldr	x0, [x0]
    ae08:	ldr	x1, [sp, #112]
    ae0c:	cmp	x1, x0
    ae10:	b.cc	ad98 <GOMP_critical_name_end@@GOMP_1.0+0x1bc8>  // b.lo, b.ul, b.last
    ae14:	b	ae1c <GOMP_critical_name_end@@GOMP_1.0+0x1c4c>
    ae18:	nop
    ae1c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ae20:	add	x0, x0, #0x678
    ae24:	ldr	x0, [x0]
    ae28:	ldr	x1, [sp, #112]
    ae2c:	cmp	x1, x0
    ae30:	b.ne	ae44 <GOMP_critical_name_end@@GOMP_1.0+0x1c74>  // b.any
    ae34:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    ae38:	add	x0, x0, #0xc08
    ae3c:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    ae40:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    ae44:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ae48:	add	x0, x0, #0x650
    ae4c:	ldr	x1, [x0]
    ae50:	ldr	x0, [sp, #112]
    ae54:	lsl	x0, x0, #3
    ae58:	add	x0, x1, x0
    ae5c:	ldr	x0, [x0]
    ae60:	str	x0, [sp, #104]
    ae64:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ae68:	add	x0, x0, #0x650
    ae6c:	ldr	x1, [x0]
    ae70:	ldr	x0, [sp, #112]
    ae74:	lsl	x0, x0, #3
    ae78:	add	x3, x1, x0
    ae7c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ae80:	add	x0, x0, #0x650
    ae84:	ldr	x1, [x0]
    ae88:	ldr	x0, [sp, #112]
    ae8c:	add	x0, x0, #0x1
    ae90:	lsl	x0, x0, #3
    ae94:	add	x4, x1, x0
    ae98:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ae9c:	add	x0, x0, #0x678
    aea0:	ldr	x1, [x0]
    aea4:	ldr	x0, [sp, #112]
    aea8:	sub	x0, x1, x0
    aeac:	sub	x0, x0, #0x1
    aeb0:	lsl	x0, x0, #3
    aeb4:	mov	x2, x0
    aeb8:	mov	x1, x4
    aebc:	mov	x0, x3
    aec0:	bl	86b0 <memmove@plt>
    aec4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    aec8:	add	x0, x0, #0x678
    aecc:	ldr	x0, [x0]
    aed0:	sub	x1, x0, #0x1
    aed4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    aed8:	add	x0, x0, #0x678
    aedc:	str	x1, [x0]
    aee0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    aee4:	add	x0, x0, #0x650
    aee8:	ldr	x1, [x0]
    aeec:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    aef0:	add	x0, x0, #0x678
    aef4:	ldr	x0, [x0]
    aef8:	lsl	x0, x0, #3
    aefc:	add	x0, x1, x0
    af00:	ldr	x1, [sp, #104]
    af04:	str	x1, [x0]
    af08:	b	b004 <GOMP_critical_name_end@@GOMP_1.0+0x1e34>
    af0c:	ldr	x0, [sp, #48]
    af10:	cmp	x0, #0x1
    af14:	b.ne	af38 <GOMP_critical_name_end@@GOMP_1.0+0x1d68>  // b.any
    af18:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    af1c:	add	x0, x0, #0x678
    af20:	ldr	x0, [x0]
    af24:	add	x1, x0, #0x1
    af28:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    af2c:	add	x0, x0, #0x678
    af30:	str	x1, [x0]
    af34:	b	b004 <GOMP_critical_name_end@@GOMP_1.0+0x1e34>
    af38:	str	xzr, [sp, #112]
    af3c:	b	afd0 <GOMP_critical_name_end@@GOMP_1.0+0x1e00>
    af40:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    af44:	add	x0, x0, #0x650
    af48:	ldr	x1, [x0]
    af4c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    af50:	add	x0, x0, #0x678
    af54:	ldr	x2, [x0]
    af58:	ldr	x0, [sp, #112]
    af5c:	add	x0, x2, x0
    af60:	add	x0, x0, #0x1
    af64:	lsl	x0, x0, #3
    af68:	add	x0, x1, x0
    af6c:	ldr	x3, [x0]
    af70:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    af74:	add	x0, x0, #0x650
    af78:	ldr	x1, [x0]
    af7c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    af80:	add	x0, x0, #0x678
    af84:	ldr	x2, [x0]
    af88:	ldr	x0, [sp, #112]
    af8c:	add	x0, x2, x0
    af90:	lsl	x0, x0, #3
    af94:	add	x0, x1, x0
    af98:	ldr	x0, [x0]
    af9c:	ldr	x1, [sp, #40]
    afa0:	mov	x2, x1
    afa4:	mov	x1, x0
    afa8:	mov	x0, x3
    afac:	bl	23c60 <omp_pause_resource_all_@@OMP_5.0+0x558>
    afb0:	and	w0, w0, #0xff
    afb4:	eor	w0, w0, #0x1
    afb8:	and	w0, w0, #0xff
    afbc:	cmp	w0, #0x0
    afc0:	b.ne	b0b8 <GOMP_critical_name_end@@GOMP_1.0+0x1ee8>  // b.any
    afc4:	ldr	x0, [sp, #112]
    afc8:	add	x0, x0, #0x1
    afcc:	str	x0, [sp, #112]
    afd0:	ldr	x0, [sp, #48]
    afd4:	sub	x0, x0, #0x1
    afd8:	ldr	x1, [sp, #112]
    afdc:	cmp	x1, x0
    afe0:	b.cc	af40 <GOMP_critical_name_end@@GOMP_1.0+0x1d70>  // b.lo, b.ul, b.last
    afe4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    afe8:	add	x0, x0, #0x678
    afec:	ldr	x1, [x0]
    aff0:	ldr	x0, [sp, #48]
    aff4:	add	x1, x1, x0
    aff8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    affc:	add	x0, x0, #0x678
    b000:	str	x1, [x0]
    b004:	ldr	x0, [sp, #96]
    b008:	ldrb	w0, [x0]
    b00c:	cmp	w0, #0x0
    b010:	b.ne	b02c <GOMP_critical_name_end@@GOMP_1.0+0x1e5c>  // b.any
    b014:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    b018:	add	x0, x0, #0x678
    b01c:	ldr	x0, [x0]
    b020:	cmp	x0, #0x0
    b024:	b.eq	b03c <GOMP_critical_name_end@@GOMP_1.0+0x1e6c>  // b.none
    b028:	b	b04c <GOMP_critical_name_end@@GOMP_1.0+0x1e7c>
    b02c:	ldr	x0, [sp, #96]
    b030:	add	x0, x0, #0x1
    b034:	str	x0, [sp, #96]
    b038:	b	ad34 <GOMP_critical_name_end@@GOMP_1.0+0x1b64>
    b03c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b040:	add	x0, x0, #0xc48
    b044:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    b048:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b04c:	mov	w0, #0x0                   	// #0
    b050:	bl	23e78 <omp_pause_resource_all_@@OMP_5.0+0x770>
    b054:	and	w0, w0, #0xff
    b058:	eor	w0, w0, #0x1
    b05c:	and	w0, w0, #0xff
    b060:	cmp	w0, #0x0
    b064:	b.ne	b0c0 <GOMP_critical_name_end@@GOMP_1.0+0x1ef0>  // b.any
    b068:	mov	w0, #0x1                   	// #1
    b06c:	b	b100 <GOMP_critical_name_end@@GOMP_1.0+0x1f30>
    b070:	nop
    b074:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b078:	nop
    b07c:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b080:	nop
    b084:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b088:	nop
    b08c:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b090:	nop
    b094:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b098:	nop
    b09c:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b0a0:	nop
    b0a4:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b0a8:	nop
    b0ac:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b0b0:	nop
    b0b4:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b0b8:	nop
    b0bc:	b	b0c4 <GOMP_critical_name_end@@GOMP_1.0+0x1ef4>
    b0c0:	nop
    b0c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    b0c8:	add	x0, x0, #0x650
    b0cc:	ldr	x0, [x0]
    b0d0:	bl	8a20 <free@plt>
    b0d4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    b0d8:	add	x0, x0, #0x650
    b0dc:	str	xzr, [x0]
    b0e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    b0e4:	add	x0, x0, #0x678
    b0e8:	str	xzr, [x0]
    b0ec:	ldr	x1, [sp, #24]
    b0f0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b0f4:	add	x0, x0, #0xb80
    b0f8:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    b0fc:	mov	w0, #0x0                   	// #0
    b100:	ldp	x29, x30, [sp], #128
    b104:	ret
    b108:	stp	x29, x30, [sp, #-64]!
    b10c:	mov	x29, sp
    b110:	str	x0, [sp, #24]
    b114:	str	x1, [sp, #16]
    b118:	mov	x0, #0xa                   	// #10
    b11c:	str	x0, [sp, #48]
    b120:	ldr	x0, [sp, #24]
    b124:	bl	8c00 <getenv@plt>
    b128:	str	x0, [sp, #56]
    b12c:	ldr	x0, [sp, #56]
    b130:	cmp	x0, #0x0
    b134:	b.ne	b14c <GOMP_critical_name_end@@GOMP_1.0+0x1f7c>  // b.any
    b138:	mov	w0, #0x0                   	// #0
    b13c:	b	b33c <GOMP_critical_name_end@@GOMP_1.0+0x216c>
    b140:	ldr	x0, [sp, #56]
    b144:	add	x0, x0, #0x1
    b148:	str	x0, [sp, #56]
    b14c:	bl	89c0 <__ctype_b_loc@plt>
    b150:	ldr	x1, [x0]
    b154:	ldr	x0, [sp, #56]
    b158:	ldrb	w0, [x0]
    b15c:	and	x0, x0, #0xff
    b160:	lsl	x0, x0, #1
    b164:	add	x0, x1, x0
    b168:	ldrh	w0, [x0]
    b16c:	and	w0, w0, #0x2000
    b170:	cmp	w0, #0x0
    b174:	b.ne	b140 <GOMP_critical_name_end@@GOMP_1.0+0x1f70>  // b.any
    b178:	ldr	x0, [sp, #56]
    b17c:	ldrb	w0, [x0]
    b180:	cmp	w0, #0x0
    b184:	b.eq	b304 <GOMP_critical_name_end@@GOMP_1.0+0x2134>  // b.none
    b188:	bl	8be0 <__errno_location@plt>
    b18c:	str	wzr, [x0]
    b190:	add	x0, sp, #0x20
    b194:	mov	w2, #0xa                   	// #10
    b198:	mov	x1, x0
    b19c:	ldr	x0, [sp, #56]
    b1a0:	bl	86c0 <strtoul@plt>
    b1a4:	str	x0, [sp, #40]
    b1a8:	bl	8be0 <__errno_location@plt>
    b1ac:	ldr	w0, [x0]
    b1b0:	cmp	w0, #0x0
    b1b4:	b.ne	b30c <GOMP_critical_name_end@@GOMP_1.0+0x213c>  // b.any
    b1b8:	b	b1c8 <GOMP_critical_name_end@@GOMP_1.0+0x1ff8>
    b1bc:	ldr	x0, [sp, #32]
    b1c0:	add	x0, x0, #0x1
    b1c4:	str	x0, [sp, #32]
    b1c8:	bl	89c0 <__ctype_b_loc@plt>
    b1cc:	ldr	x1, [x0]
    b1d0:	ldr	x0, [sp, #32]
    b1d4:	ldrb	w0, [x0]
    b1d8:	and	x0, x0, #0xff
    b1dc:	lsl	x0, x0, #1
    b1e0:	add	x0, x1, x0
    b1e4:	ldrh	w0, [x0]
    b1e8:	and	w0, w0, #0x2000
    b1ec:	cmp	w0, #0x0
    b1f0:	b.ne	b1bc <GOMP_critical_name_end@@GOMP_1.0+0x1fec>  // b.any
    b1f4:	ldr	x0, [sp, #32]
    b1f8:	ldrb	w0, [x0]
    b1fc:	cmp	w0, #0x0
    b200:	b.eq	b2c0 <GOMP_critical_name_end@@GOMP_1.0+0x20f0>  // b.none
    b204:	ldr	x0, [sp, #32]
    b208:	ldrb	w0, [x0]
    b20c:	bl	8bf0 <tolower@plt>
    b210:	cmp	w0, #0x6d
    b214:	b.eq	b24c <GOMP_critical_name_end@@GOMP_1.0+0x207c>  // b.none
    b218:	cmp	w0, #0x6d
    b21c:	b.gt	b314 <GOMP_critical_name_end@@GOMP_1.0+0x2144>
    b220:	cmp	w0, #0x6b
    b224:	b.eq	b264 <GOMP_critical_name_end@@GOMP_1.0+0x2094>  // b.none
    b228:	cmp	w0, #0x6b
    b22c:	b.gt	b314 <GOMP_critical_name_end@@GOMP_1.0+0x2144>
    b230:	cmp	w0, #0x62
    b234:	b.eq	b244 <GOMP_critical_name_end@@GOMP_1.0+0x2074>  // b.none
    b238:	cmp	w0, #0x67
    b23c:	b.eq	b258 <GOMP_critical_name_end@@GOMP_1.0+0x2088>  // b.none
    b240:	b	b314 <GOMP_critical_name_end@@GOMP_1.0+0x2144>
    b244:	str	xzr, [sp, #48]
    b248:	b	b268 <GOMP_critical_name_end@@GOMP_1.0+0x2098>
    b24c:	mov	x0, #0x14                  	// #20
    b250:	str	x0, [sp, #48]
    b254:	b	b268 <GOMP_critical_name_end@@GOMP_1.0+0x2098>
    b258:	mov	x0, #0x1e                  	// #30
    b25c:	str	x0, [sp, #48]
    b260:	b	b268 <GOMP_critical_name_end@@GOMP_1.0+0x2098>
    b264:	nop
    b268:	ldr	x0, [sp, #32]
    b26c:	add	x0, x0, #0x1
    b270:	str	x0, [sp, #32]
    b274:	b	b284 <GOMP_critical_name_end@@GOMP_1.0+0x20b4>
    b278:	ldr	x0, [sp, #32]
    b27c:	add	x0, x0, #0x1
    b280:	str	x0, [sp, #32]
    b284:	bl	89c0 <__ctype_b_loc@plt>
    b288:	ldr	x1, [x0]
    b28c:	ldr	x0, [sp, #32]
    b290:	ldrb	w0, [x0]
    b294:	and	x0, x0, #0xff
    b298:	lsl	x0, x0, #1
    b29c:	add	x0, x1, x0
    b2a0:	ldrh	w0, [x0]
    b2a4:	and	w0, w0, #0x2000
    b2a8:	cmp	w0, #0x0
    b2ac:	b.ne	b278 <GOMP_critical_name_end@@GOMP_1.0+0x20a8>  // b.any
    b2b0:	ldr	x0, [sp, #32]
    b2b4:	ldrb	w0, [x0]
    b2b8:	cmp	w0, #0x0
    b2bc:	b.ne	b31c <GOMP_critical_name_end@@GOMP_1.0+0x214c>  // b.any
    b2c0:	ldr	x0, [sp, #48]
    b2c4:	mov	w1, w0
    b2c8:	ldr	x0, [sp, #40]
    b2cc:	lsl	x0, x0, x1
    b2d0:	ldr	x1, [sp, #48]
    b2d4:	lsr	x0, x0, x1
    b2d8:	ldr	x1, [sp, #40]
    b2dc:	cmp	x1, x0
    b2e0:	b.ne	b324 <GOMP_critical_name_end@@GOMP_1.0+0x2154>  // b.any
    b2e4:	ldr	x0, [sp, #48]
    b2e8:	mov	w1, w0
    b2ec:	ldr	x0, [sp, #40]
    b2f0:	lsl	x1, x0, x1
    b2f4:	ldr	x0, [sp, #16]
    b2f8:	str	x1, [x0]
    b2fc:	mov	w0, #0x1                   	// #1
    b300:	b	b33c <GOMP_critical_name_end@@GOMP_1.0+0x216c>
    b304:	nop
    b308:	b	b328 <GOMP_critical_name_end@@GOMP_1.0+0x2158>
    b30c:	nop
    b310:	b	b328 <GOMP_critical_name_end@@GOMP_1.0+0x2158>
    b314:	nop
    b318:	b	b328 <GOMP_critical_name_end@@GOMP_1.0+0x2158>
    b31c:	nop
    b320:	b	b328 <GOMP_critical_name_end@@GOMP_1.0+0x2158>
    b324:	nop
    b328:	ldr	x1, [sp, #24]
    b32c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b330:	add	x0, x0, #0xb80
    b334:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    b338:	mov	w0, #0x0                   	// #0
    b33c:	ldp	x29, x30, [sp], #64
    b340:	ret
    b344:	stp	x29, x30, [sp, #-64]!
    b348:	mov	x29, sp
    b34c:	str	x0, [sp, #24]
    b350:	str	x1, [sp, #16]
    b354:	mov	x0, #0x1                   	// #1
    b358:	str	x0, [sp, #40]
    b35c:	ldr	x0, [sp, #24]
    b360:	bl	8c00 <getenv@plt>
    b364:	str	x0, [sp, #56]
    b368:	ldr	x0, [sp, #56]
    b36c:	cmp	x0, #0x0
    b370:	b.ne	b388 <GOMP_critical_name_end@@GOMP_1.0+0x21b8>  // b.any
    b374:	mov	w0, #0x0                   	// #0
    b378:	b	b5ec <GOMP_critical_name_end@@GOMP_1.0+0x241c>
    b37c:	ldr	x0, [sp, #56]
    b380:	add	x0, x0, #0x1
    b384:	str	x0, [sp, #56]
    b388:	bl	89c0 <__ctype_b_loc@plt>
    b38c:	ldr	x1, [x0]
    b390:	ldr	x0, [sp, #56]
    b394:	ldrb	w0, [x0]
    b398:	and	x0, x0, #0xff
    b39c:	lsl	x0, x0, #1
    b3a0:	add	x0, x1, x0
    b3a4:	ldrh	w0, [x0]
    b3a8:	and	w0, w0, #0x2000
    b3ac:	cmp	w0, #0x0
    b3b0:	b.ne	b37c <GOMP_critical_name_end@@GOMP_1.0+0x21ac>  // b.any
    b3b4:	ldr	x0, [sp, #56]
    b3b8:	ldrb	w0, [x0]
    b3bc:	cmp	w0, #0x0
    b3c0:	b.eq	b5bc <GOMP_critical_name_end@@GOMP_1.0+0x23ec>  // b.none
    b3c4:	mov	x2, #0x8                   	// #8
    b3c8:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b3cc:	add	x1, x0, #0xc68
    b3d0:	ldr	x0, [sp, #56]
    b3d4:	bl	8a60 <strncasecmp@plt>
    b3d8:	cmp	w0, #0x0
    b3dc:	b.eq	b3fc <GOMP_critical_name_end@@GOMP_1.0+0x222c>  // b.none
    b3e0:	mov	x2, #0x8                   	// #8
    b3e4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b3e8:	add	x1, x0, #0xc78
    b3ec:	ldr	x0, [sp, #56]
    b3f0:	bl	8a60 <strncasecmp@plt>
    b3f4:	cmp	w0, #0x0
    b3f8:	b.ne	b414 <GOMP_critical_name_end@@GOMP_1.0+0x2244>  // b.any
    b3fc:	mov	x0, #0xffffffffffffffff    	// #-1
    b400:	str	x0, [sp, #48]
    b404:	ldr	x0, [sp, #56]
    b408:	add	x0, x0, #0x8
    b40c:	str	x0, [sp, #32]
    b410:	b	b518 <GOMP_critical_name_end@@GOMP_1.0+0x2348>
    b414:	bl	8be0 <__errno_location@plt>
    b418:	str	wzr, [x0]
    b41c:	add	x0, sp, #0x20
    b420:	mov	w2, #0xa                   	// #10
    b424:	mov	x1, x0
    b428:	ldr	x0, [sp, #56]
    b42c:	bl	8ae0 <strtoull@plt>
    b430:	str	x0, [sp, #48]
    b434:	bl	8be0 <__errno_location@plt>
    b438:	ldr	w0, [x0]
    b43c:	cmp	w0, #0x0
    b440:	b.ne	b5c4 <GOMP_critical_name_end@@GOMP_1.0+0x23f4>  // b.any
    b444:	b	b454 <GOMP_critical_name_end@@GOMP_1.0+0x2284>
    b448:	ldr	x0, [sp, #32]
    b44c:	add	x0, x0, #0x1
    b450:	str	x0, [sp, #32]
    b454:	bl	89c0 <__ctype_b_loc@plt>
    b458:	ldr	x1, [x0]
    b45c:	ldr	x0, [sp, #32]
    b460:	ldrb	w0, [x0]
    b464:	and	x0, x0, #0xff
    b468:	lsl	x0, x0, #1
    b46c:	add	x0, x1, x0
    b470:	ldrh	w0, [x0]
    b474:	and	w0, w0, #0x2000
    b478:	cmp	w0, #0x0
    b47c:	b.ne	b448 <GOMP_critical_name_end@@GOMP_1.0+0x2278>  // b.any
    b480:	ldr	x0, [sp, #32]
    b484:	ldrb	w0, [x0]
    b488:	cmp	w0, #0x0
    b48c:	b.eq	b564 <GOMP_critical_name_end@@GOMP_1.0+0x2394>  // b.none
    b490:	ldr	x0, [sp, #32]
    b494:	ldrb	w0, [x0]
    b498:	bl	8bf0 <tolower@plt>
    b49c:	cmp	w0, #0x74
    b4a0:	b.eq	b4f8 <GOMP_critical_name_end@@GOMP_1.0+0x2328>  // b.none
    b4a4:	cmp	w0, #0x74
    b4a8:	b.gt	b5cc <GOMP_critical_name_end@@GOMP_1.0+0x23fc>
    b4ac:	cmp	w0, #0x6d
    b4b0:	b.eq	b4d8 <GOMP_critical_name_end@@GOMP_1.0+0x2308>  // b.none
    b4b4:	cmp	w0, #0x6d
    b4b8:	b.gt	b5cc <GOMP_critical_name_end@@GOMP_1.0+0x23fc>
    b4bc:	cmp	w0, #0x67
    b4c0:	b.eq	b4e8 <GOMP_critical_name_end@@GOMP_1.0+0x2318>  // b.none
    b4c4:	cmp	w0, #0x6b
    b4c8:	b.ne	b5cc <GOMP_critical_name_end@@GOMP_1.0+0x23fc>  // b.any
    b4cc:	mov	x0, #0x3e8                 	// #1000
    b4d0:	str	x0, [sp, #40]
    b4d4:	b	b50c <GOMP_critical_name_end@@GOMP_1.0+0x233c>
    b4d8:	mov	x0, #0x4240                	// #16960
    b4dc:	movk	x0, #0xf, lsl #16
    b4e0:	str	x0, [sp, #40]
    b4e4:	b	b50c <GOMP_critical_name_end@@GOMP_1.0+0x233c>
    b4e8:	mov	x0, #0xca00                	// #51712
    b4ec:	movk	x0, #0x3b9a, lsl #16
    b4f0:	str	x0, [sp, #40]
    b4f4:	b	b50c <GOMP_critical_name_end@@GOMP_1.0+0x233c>
    b4f8:	mov	x0, #0x1000                	// #4096
    b4fc:	movk	x0, #0xd4a5, lsl #16
    b500:	movk	x0, #0xe8, lsl #32
    b504:	str	x0, [sp, #40]
    b508:	nop
    b50c:	ldr	x0, [sp, #32]
    b510:	add	x0, x0, #0x1
    b514:	str	x0, [sp, #32]
    b518:	b	b528 <GOMP_critical_name_end@@GOMP_1.0+0x2358>
    b51c:	ldr	x0, [sp, #32]
    b520:	add	x0, x0, #0x1
    b524:	str	x0, [sp, #32]
    b528:	bl	89c0 <__ctype_b_loc@plt>
    b52c:	ldr	x1, [x0]
    b530:	ldr	x0, [sp, #32]
    b534:	ldrb	w0, [x0]
    b538:	and	x0, x0, #0xff
    b53c:	lsl	x0, x0, #1
    b540:	add	x0, x1, x0
    b544:	ldrh	w0, [x0]
    b548:	and	w0, w0, #0x2000
    b54c:	cmp	w0, #0x0
    b550:	b.ne	b51c <GOMP_critical_name_end@@GOMP_1.0+0x234c>  // b.any
    b554:	ldr	x0, [sp, #32]
    b558:	ldrb	w0, [x0]
    b55c:	cmp	w0, #0x0
    b560:	b.ne	b5d4 <GOMP_critical_name_end@@GOMP_1.0+0x2404>  // b.any
    b564:	mov	x2, #0x0                   	// #0
    b568:	ldr	x1, [sp, #48]
    b56c:	ldr	x0, [sp, #40]
    b570:	umulh	x0, x1, x0
    b574:	cmp	x0, #0x0
    b578:	b.eq	b580 <GOMP_critical_name_end@@GOMP_1.0+0x23b0>  // b.none
    b57c:	mov	x2, #0x1                   	// #1
    b580:	mov	x0, x2
    b584:	cmp	x0, #0x0
    b588:	b.eq	b598 <GOMP_critical_name_end@@GOMP_1.0+0x23c8>  // b.none
    b58c:	mov	x0, #0xffffffffffffffff    	// #-1
    b590:	str	x0, [sp, #48]
    b594:	b	b5a8 <GOMP_critical_name_end@@GOMP_1.0+0x23d8>
    b598:	ldr	x1, [sp, #48]
    b59c:	ldr	x0, [sp, #40]
    b5a0:	mul	x0, x1, x0
    b5a4:	str	x0, [sp, #48]
    b5a8:	ldr	x0, [sp, #16]
    b5ac:	ldr	x1, [sp, #48]
    b5b0:	str	x1, [x0]
    b5b4:	mov	w0, #0x1                   	// #1
    b5b8:	b	b5ec <GOMP_critical_name_end@@GOMP_1.0+0x241c>
    b5bc:	nop
    b5c0:	b	b5d8 <GOMP_critical_name_end@@GOMP_1.0+0x2408>
    b5c4:	nop
    b5c8:	b	b5d8 <GOMP_critical_name_end@@GOMP_1.0+0x2408>
    b5cc:	nop
    b5d0:	b	b5d8 <GOMP_critical_name_end@@GOMP_1.0+0x2408>
    b5d4:	nop
    b5d8:	ldr	x1, [sp, #24]
    b5dc:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b5e0:	add	x0, x0, #0xb80
    b5e4:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    b5e8:	mov	w0, #0x0                   	// #0
    b5ec:	ldp	x29, x30, [sp], #64
    b5f0:	ret
    b5f4:	stp	x29, x30, [sp, #-48]!
    b5f8:	mov	x29, sp
    b5fc:	str	x0, [sp, #24]
    b600:	str	x1, [sp, #16]
    b604:	ldr	x0, [sp, #24]
    b608:	bl	8c00 <getenv@plt>
    b60c:	str	x0, [sp, #40]
    b610:	ldr	x0, [sp, #40]
    b614:	cmp	x0, #0x0
    b618:	b.eq	b730 <GOMP_critical_name_end@@GOMP_1.0+0x2560>  // b.none
    b61c:	b	b62c <GOMP_critical_name_end@@GOMP_1.0+0x245c>
    b620:	ldr	x0, [sp, #40]
    b624:	add	x0, x0, #0x1
    b628:	str	x0, [sp, #40]
    b62c:	bl	89c0 <__ctype_b_loc@plt>
    b630:	ldr	x1, [x0]
    b634:	ldr	x0, [sp, #40]
    b638:	ldrb	w0, [x0]
    b63c:	and	x0, x0, #0xff
    b640:	lsl	x0, x0, #1
    b644:	add	x0, x1, x0
    b648:	ldrh	w0, [x0]
    b64c:	and	w0, w0, #0x2000
    b650:	cmp	w0, #0x0
    b654:	b.ne	b620 <GOMP_critical_name_end@@GOMP_1.0+0x2450>  // b.any
    b658:	mov	x2, #0x4                   	// #4
    b65c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b660:	add	x1, x0, #0xc88
    b664:	ldr	x0, [sp, #40]
    b668:	bl	8a60 <strncasecmp@plt>
    b66c:	cmp	w0, #0x0
    b670:	b.ne	b690 <GOMP_critical_name_end@@GOMP_1.0+0x24c0>  // b.any
    b674:	ldr	x0, [sp, #16]
    b678:	mov	w1, #0x1                   	// #1
    b67c:	strb	w1, [x0]
    b680:	ldr	x0, [sp, #40]
    b684:	add	x0, x0, #0x4
    b688:	str	x0, [sp, #40]
    b68c:	b	b6e0 <GOMP_critical_name_end@@GOMP_1.0+0x2510>
    b690:	mov	x2, #0x5                   	// #5
    b694:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b698:	add	x1, x0, #0xc90
    b69c:	ldr	x0, [sp, #40]
    b6a0:	bl	8a60 <strncasecmp@plt>
    b6a4:	cmp	w0, #0x0
    b6a8:	b.ne	b6c4 <GOMP_critical_name_end@@GOMP_1.0+0x24f4>  // b.any
    b6ac:	ldr	x0, [sp, #16]
    b6b0:	strb	wzr, [x0]
    b6b4:	ldr	x0, [sp, #40]
    b6b8:	add	x0, x0, #0x5
    b6bc:	str	x0, [sp, #40]
    b6c0:	b	b6e0 <GOMP_critical_name_end@@GOMP_1.0+0x2510>
    b6c4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b6c8:	add	x0, x0, #0xc98
    b6cc:	str	x0, [sp, #40]
    b6d0:	b	b6e0 <GOMP_critical_name_end@@GOMP_1.0+0x2510>
    b6d4:	ldr	x0, [sp, #40]
    b6d8:	add	x0, x0, #0x1
    b6dc:	str	x0, [sp, #40]
    b6e0:	bl	89c0 <__ctype_b_loc@plt>
    b6e4:	ldr	x1, [x0]
    b6e8:	ldr	x0, [sp, #40]
    b6ec:	ldrb	w0, [x0]
    b6f0:	and	x0, x0, #0xff
    b6f4:	lsl	x0, x0, #1
    b6f8:	add	x0, x1, x0
    b6fc:	ldrh	w0, [x0]
    b700:	and	w0, w0, #0x2000
    b704:	cmp	w0, #0x0
    b708:	b.ne	b6d4 <GOMP_critical_name_end@@GOMP_1.0+0x2504>  // b.any
    b70c:	ldr	x0, [sp, #40]
    b710:	ldrb	w0, [x0]
    b714:	cmp	w0, #0x0
    b718:	b.eq	b734 <GOMP_critical_name_end@@GOMP_1.0+0x2564>  // b.none
    b71c:	ldr	x1, [sp, #24]
    b720:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b724:	add	x0, x0, #0xb80
    b728:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    b72c:	b	b734 <GOMP_critical_name_end@@GOMP_1.0+0x2564>
    b730:	nop
    b734:	ldp	x29, x30, [sp], #48
    b738:	ret
    b73c:	stp	x29, x30, [sp, #-32]!
    b740:	mov	x29, sp
    b744:	mov	w0, #0xffffffff            	// #-1
    b748:	str	w0, [sp, #20]
    b74c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b750:	add	x0, x0, #0xca0
    b754:	bl	8c00 <getenv@plt>
    b758:	str	x0, [sp, #24]
    b75c:	ldr	x0, [sp, #24]
    b760:	cmp	x0, #0x0
    b764:	b.ne	b77c <GOMP_critical_name_end@@GOMP_1.0+0x25ac>  // b.any
    b768:	mov	w0, #0xffffffff            	// #-1
    b76c:	b	b87c <GOMP_critical_name_end@@GOMP_1.0+0x26ac>
    b770:	ldr	x0, [sp, #24]
    b774:	add	x0, x0, #0x1
    b778:	str	x0, [sp, #24]
    b77c:	bl	89c0 <__ctype_b_loc@plt>
    b780:	ldr	x1, [x0]
    b784:	ldr	x0, [sp, #24]
    b788:	ldrb	w0, [x0]
    b78c:	and	x0, x0, #0xff
    b790:	lsl	x0, x0, #1
    b794:	add	x0, x1, x0
    b798:	ldrh	w0, [x0]
    b79c:	and	w0, w0, #0x2000
    b7a0:	cmp	w0, #0x0
    b7a4:	b.ne	b770 <GOMP_critical_name_end@@GOMP_1.0+0x25a0>  // b.any
    b7a8:	mov	x2, #0x6                   	// #6
    b7ac:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b7b0:	add	x1, x0, #0xcb0
    b7b4:	ldr	x0, [sp, #24]
    b7b8:	bl	8a60 <strncasecmp@plt>
    b7bc:	cmp	w0, #0x0
    b7c0:	b.ne	b7dc <GOMP_critical_name_end@@GOMP_1.0+0x260c>  // b.any
    b7c4:	mov	w0, #0x1                   	// #1
    b7c8:	str	w0, [sp, #20]
    b7cc:	ldr	x0, [sp, #24]
    b7d0:	add	x0, x0, #0x6
    b7d4:	str	x0, [sp, #24]
    b7d8:	b	b828 <GOMP_critical_name_end@@GOMP_1.0+0x2658>
    b7dc:	mov	x2, #0x7                   	// #7
    b7e0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b7e4:	add	x1, x0, #0xcb8
    b7e8:	ldr	x0, [sp, #24]
    b7ec:	bl	8a60 <strncasecmp@plt>
    b7f0:	cmp	w0, #0x0
    b7f4:	b.ne	b80c <GOMP_critical_name_end@@GOMP_1.0+0x263c>  // b.any
    b7f8:	str	wzr, [sp, #20]
    b7fc:	ldr	x0, [sp, #24]
    b800:	add	x0, x0, #0x7
    b804:	str	x0, [sp, #24]
    b808:	b	b828 <GOMP_critical_name_end@@GOMP_1.0+0x2658>
    b80c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b810:	add	x0, x0, #0xc98
    b814:	str	x0, [sp, #24]
    b818:	b	b828 <GOMP_critical_name_end@@GOMP_1.0+0x2658>
    b81c:	ldr	x0, [sp, #24]
    b820:	add	x0, x0, #0x1
    b824:	str	x0, [sp, #24]
    b828:	bl	89c0 <__ctype_b_loc@plt>
    b82c:	ldr	x1, [x0]
    b830:	ldr	x0, [sp, #24]
    b834:	ldrb	w0, [x0]
    b838:	and	x0, x0, #0xff
    b83c:	lsl	x0, x0, #1
    b840:	add	x0, x1, x0
    b844:	ldrh	w0, [x0]
    b848:	and	w0, w0, #0x2000
    b84c:	cmp	w0, #0x0
    b850:	b.ne	b81c <GOMP_critical_name_end@@GOMP_1.0+0x264c>  // b.any
    b854:	ldr	x0, [sp, #24]
    b858:	ldrb	w0, [x0]
    b85c:	cmp	w0, #0x0
    b860:	b.ne	b86c <GOMP_critical_name_end@@GOMP_1.0+0x269c>  // b.any
    b864:	ldr	w0, [sp, #20]
    b868:	b	b87c <GOMP_critical_name_end@@GOMP_1.0+0x26ac>
    b86c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b870:	add	x0, x0, #0xcc0
    b874:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    b878:	mov	w0, #0xffffffff            	// #-1
    b87c:	ldp	x29, x30, [sp], #32
    b880:	ret
    b884:	stp	x29, x30, [sp, #-112]!
    b888:	mov	x29, sp
    b88c:	strb	w0, [sp, #31]
    b890:	str	xzr, [sp, #64]
    b894:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    b898:	add	x0, x0, #0xcf8
    b89c:	bl	8c00 <getenv@plt>
    b8a0:	str	x0, [sp, #104]
    b8a4:	ldr	x0, [sp, #104]
    b8a8:	cmp	x0, #0x0
    b8ac:	b.ne	b8b8 <GOMP_critical_name_end@@GOMP_1.0+0x26e8>  // b.any
    b8b0:	mov	w0, #0x0                   	// #0
    b8b4:	b	bc68 <GOMP_critical_name_end@@GOMP_1.0+0x2a98>
    b8b8:	ldr	x0, [sp, #104]
    b8bc:	str	x0, [sp, #48]
    b8c0:	str	wzr, [sp, #100]
    b8c4:	b	bbf8 <GOMP_critical_name_end@@GOMP_1.0+0x2a28>
    b8c8:	ldr	x0, [sp, #48]
    b8cc:	str	x0, [sp, #104]
    b8d0:	ldr	w0, [sp, #100]
    b8d4:	cmp	w0, #0x1
    b8d8:	b.ne	b940 <GOMP_critical_name_end@@GOMP_1.0+0x2770>  // b.any
    b8dc:	ldrb	w0, [sp, #31]
    b8e0:	cmp	w0, #0x0
    b8e4:	b.eq	b8f0 <GOMP_critical_name_end@@GOMP_1.0+0x2720>  // b.none
    b8e8:	mov	w0, #0x0                   	// #0
    b8ec:	b	bc68 <GOMP_critical_name_end@@GOMP_1.0+0x2a98>
    b8f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    b8f4:	add	x0, x0, #0x678
    b8f8:	str	xzr, [x0]
    b8fc:	mov	w1, #0x1                   	// #1
    b900:	ldr	x0, [sp, #64]
    b904:	bl	23844 <omp_pause_resource_all_@@OMP_5.0+0x13c>
    b908:	mov	x1, x0
    b90c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    b910:	add	x0, x0, #0x650
    b914:	str	x1, [x0]
    b918:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    b91c:	add	x0, x0, #0x650
    b920:	ldr	x0, [x0]
    b924:	cmp	x0, #0x0
    b928:	b.ne	b940 <GOMP_critical_name_end@@GOMP_1.0+0x2770>  // b.any
    b92c:	mov	w0, #0x0                   	// #0
    b930:	b	bc68 <GOMP_critical_name_end@@GOMP_1.0+0x2a98>
    b934:	ldr	x0, [sp, #104]
    b938:	add	x0, x0, #0x1
    b93c:	str	x0, [sp, #104]
    b940:	bl	89c0 <__ctype_b_loc@plt>
    b944:	ldr	x1, [x0]
    b948:	ldr	x0, [sp, #104]
    b94c:	ldrb	w0, [x0]
    b950:	and	x0, x0, #0xff
    b954:	lsl	x0, x0, #1
    b958:	add	x0, x1, x0
    b95c:	ldrh	w0, [x0]
    b960:	and	w0, w0, #0x2000
    b964:	cmp	w0, #0x0
    b968:	b.ne	b934 <GOMP_critical_name_end@@GOMP_1.0+0x2764>  // b.any
    b96c:	bl	8be0 <__errno_location@plt>
    b970:	str	wzr, [x0]
    b974:	add	x0, sp, #0x20
    b978:	mov	w2, #0x0                   	// #0
    b97c:	mov	x1, x0
    b980:	ldr	x0, [sp, #104]
    b984:	bl	86c0 <strtoul@plt>
    b988:	str	x0, [sp, #88]
    b98c:	bl	8be0 <__errno_location@plt>
    b990:	ldr	w0, [x0]
    b994:	cmp	w0, #0x0
    b998:	b.ne	bc44 <GOMP_critical_name_end@@GOMP_1.0+0x2a74>  // b.any
    b99c:	ldr	x1, [sp, #88]
    b9a0:	mov	x0, #0xffff                	// #65535
    b9a4:	cmp	x1, x0
    b9a8:	b.hi	bc44 <GOMP_critical_name_end@@GOMP_1.0+0x2a74>  // b.pmore
    b9ac:	ldr	x0, [sp, #88]
    b9b0:	str	x0, [sp, #80]
    b9b4:	mov	x0, #0x1                   	// #1
    b9b8:	str	x0, [sp, #72]
    b9bc:	ldr	x0, [sp, #32]
    b9c0:	str	x0, [sp, #104]
    b9c4:	ldr	x0, [sp, #104]
    b9c8:	ldrb	w0, [x0]
    b9cc:	cmp	w0, #0x2d
    b9d0:	b.ne	baa8 <GOMP_critical_name_end@@GOMP_1.0+0x28d8>  // b.any
    b9d4:	bl	8be0 <__errno_location@plt>
    b9d8:	str	wzr, [x0]
    b9dc:	ldr	x0, [sp, #104]
    b9e0:	add	x0, x0, #0x1
    b9e4:	str	x0, [sp, #104]
    b9e8:	add	x0, sp, #0x20
    b9ec:	mov	w2, #0x0                   	// #0
    b9f0:	mov	x1, x0
    b9f4:	ldr	x0, [sp, #104]
    b9f8:	bl	86c0 <strtoul@plt>
    b9fc:	str	x0, [sp, #80]
    ba00:	bl	8be0 <__errno_location@plt>
    ba04:	ldr	w0, [x0]
    ba08:	cmp	w0, #0x0
    ba0c:	b.ne	bc4c <GOMP_critical_name_end@@GOMP_1.0+0x2a7c>  // b.any
    ba10:	ldr	x1, [sp, #80]
    ba14:	mov	x0, #0xffff                	// #65535
    ba18:	cmp	x1, x0
    ba1c:	b.hi	bc4c <GOMP_critical_name_end@@GOMP_1.0+0x2a7c>  // b.pmore
    ba20:	ldr	x1, [sp, #80]
    ba24:	ldr	x0, [sp, #88]
    ba28:	cmp	x1, x0
    ba2c:	b.cc	bc4c <GOMP_critical_name_end@@GOMP_1.0+0x2a7c>  // b.lo, b.ul, b.last
    ba30:	ldr	x0, [sp, #32]
    ba34:	str	x0, [sp, #104]
    ba38:	ldr	x0, [sp, #104]
    ba3c:	ldrb	w0, [x0]
    ba40:	cmp	w0, #0x3a
    ba44:	b.ne	baa8 <GOMP_critical_name_end@@GOMP_1.0+0x28d8>  // b.any
    ba48:	bl	8be0 <__errno_location@plt>
    ba4c:	str	wzr, [x0]
    ba50:	ldr	x0, [sp, #104]
    ba54:	add	x0, x0, #0x1
    ba58:	str	x0, [sp, #104]
    ba5c:	add	x0, sp, #0x20
    ba60:	mov	w2, #0x0                   	// #0
    ba64:	mov	x1, x0
    ba68:	ldr	x0, [sp, #104]
    ba6c:	bl	86c0 <strtoul@plt>
    ba70:	str	x0, [sp, #72]
    ba74:	bl	8be0 <__errno_location@plt>
    ba78:	ldr	w0, [x0]
    ba7c:	cmp	w0, #0x0
    ba80:	b.ne	bc54 <GOMP_critical_name_end@@GOMP_1.0+0x2a84>  // b.any
    ba84:	ldr	x0, [sp, #72]
    ba88:	cmp	x0, #0x0
    ba8c:	b.eq	bc54 <GOMP_critical_name_end@@GOMP_1.0+0x2a84>  // b.none
    ba90:	ldr	x1, [sp, #72]
    ba94:	mov	x0, #0xffff                	// #65535
    ba98:	cmp	x1, x0
    ba9c:	b.hi	bc54 <GOMP_critical_name_end@@GOMP_1.0+0x2a84>  // b.pmore
    baa0:	ldr	x0, [sp, #32]
    baa4:	str	x0, [sp, #104]
    baa8:	ldr	x1, [sp, #80]
    baac:	ldr	x0, [sp, #88]
    bab0:	sub	x1, x1, x0
    bab4:	ldr	x0, [sp, #72]
    bab8:	udiv	x0, x1, x0
    babc:	add	x0, x0, #0x1
    bac0:	str	x0, [sp, #56]
    bac4:	ldr	w0, [sp, #100]
    bac8:	cmp	w0, #0x0
    bacc:	b.ne	bb64 <GOMP_critical_name_end@@GOMP_1.0+0x2994>  // b.any
    bad0:	ldr	x1, [sp, #64]
    bad4:	ldr	x0, [sp, #56]
    bad8:	add	x0, x1, x0
    badc:	str	x0, [sp, #64]
    bae0:	b	bb88 <GOMP_critical_name_end@@GOMP_1.0+0x29b8>
    bae4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bae8:	add	x0, x0, #0x650
    baec:	ldr	x1, [x0]
    baf0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    baf4:	add	x0, x0, #0x678
    baf8:	ldr	x0, [x0]
    bafc:	lsl	x0, x0, #3
    bb00:	add	x0, x1, x0
    bb04:	ldr	x0, [x0]
    bb08:	str	x0, [sp, #40]
    bb0c:	ldr	x0, [sp, #40]
    bb10:	bl	23958 <omp_pause_resource_all_@@OMP_5.0+0x250>
    bb14:	mov	w4, #0x1                   	// #1
    bb18:	mov	x3, #0x0                   	// #0
    bb1c:	mov	x2, #0x1                   	// #1
    bb20:	ldr	x1, [sp, #88]
    bb24:	ldr	x0, [sp, #40]
    bb28:	bl	2399c <omp_pause_resource_all_@@OMP_5.0+0x294>
    bb2c:	and	w0, w0, #0xff
    bb30:	cmp	w0, #0x0
    bb34:	b.eq	bb54 <GOMP_critical_name_end@@GOMP_1.0+0x2984>  // b.none
    bb38:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bb3c:	add	x0, x0, #0x678
    bb40:	ldr	x0, [x0]
    bb44:	add	x1, x0, #0x1
    bb48:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bb4c:	add	x0, x0, #0x678
    bb50:	str	x1, [x0]
    bb54:	ldr	x1, [sp, #88]
    bb58:	ldr	x0, [sp, #72]
    bb5c:	add	x0, x1, x0
    bb60:	str	x0, [sp, #88]
    bb64:	ldr	x0, [sp, #56]
    bb68:	sub	x1, x0, #0x1
    bb6c:	str	x1, [sp, #56]
    bb70:	cmp	x0, #0x0
    bb74:	b.ne	bae4 <GOMP_critical_name_end@@GOMP_1.0+0x2914>  // b.any
    bb78:	b	bb88 <GOMP_critical_name_end@@GOMP_1.0+0x29b8>
    bb7c:	ldr	x0, [sp, #104]
    bb80:	add	x0, x0, #0x1
    bb84:	str	x0, [sp, #104]
    bb88:	bl	89c0 <__ctype_b_loc@plt>
    bb8c:	ldr	x1, [x0]
    bb90:	ldr	x0, [sp, #104]
    bb94:	ldrb	w0, [x0]
    bb98:	and	x0, x0, #0xff
    bb9c:	lsl	x0, x0, #1
    bba0:	add	x0, x1, x0
    bba4:	ldrh	w0, [x0]
    bba8:	and	w0, w0, #0x2000
    bbac:	cmp	w0, #0x0
    bbb0:	b.ne	bb7c <GOMP_critical_name_end@@GOMP_1.0+0x29ac>  // b.any
    bbb4:	ldr	x0, [sp, #104]
    bbb8:	ldrb	w0, [x0]
    bbbc:	cmp	w0, #0x2c
    bbc0:	b.ne	bbd4 <GOMP_critical_name_end@@GOMP_1.0+0x2a04>  // b.any
    bbc4:	ldr	x0, [sp, #104]
    bbc8:	add	x0, x0, #0x1
    bbcc:	str	x0, [sp, #104]
    bbd0:	b	b940 <GOMP_critical_name_end@@GOMP_1.0+0x2770>
    bbd4:	ldr	x0, [sp, #104]
    bbd8:	ldrb	w0, [x0]
    bbdc:	cmp	w0, #0x0
    bbe0:	b.eq	bbe8 <GOMP_critical_name_end@@GOMP_1.0+0x2a18>  // b.none
    bbe4:	b	b940 <GOMP_critical_name_end@@GOMP_1.0+0x2770>
    bbe8:	nop
    bbec:	ldr	w0, [sp, #100]
    bbf0:	add	w0, w0, #0x1
    bbf4:	str	w0, [sp, #100]
    bbf8:	ldr	w0, [sp, #100]
    bbfc:	cmp	w0, #0x1
    bc00:	b.le	b8c8 <GOMP_critical_name_end@@GOMP_1.0+0x26f8>
    bc04:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bc08:	add	x0, x0, #0x678
    bc0c:	ldr	x0, [x0]
    bc10:	cmp	x0, #0x0
    bc14:	b.ne	bc3c <GOMP_critical_name_end@@GOMP_1.0+0x2a6c>  // b.any
    bc18:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bc1c:	add	x0, x0, #0x650
    bc20:	ldr	x0, [x0]
    bc24:	bl	8a20 <free@plt>
    bc28:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bc2c:	add	x0, x0, #0x650
    bc30:	str	xzr, [x0]
    bc34:	mov	w0, #0x0                   	// #0
    bc38:	b	bc68 <GOMP_critical_name_end@@GOMP_1.0+0x2a98>
    bc3c:	mov	w0, #0x1                   	// #1
    bc40:	b	bc68 <GOMP_critical_name_end@@GOMP_1.0+0x2a98>
    bc44:	nop
    bc48:	b	bc58 <GOMP_critical_name_end@@GOMP_1.0+0x2a88>
    bc4c:	nop
    bc50:	b	bc58 <GOMP_critical_name_end@@GOMP_1.0+0x2a88>
    bc54:	nop
    bc58:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    bc5c:	add	x0, x0, #0xd10
    bc60:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    bc64:	mov	w0, #0x0                   	// #0
    bc68:	ldp	x29, x30, [sp], #112
    bc6c:	ret
    bc70:	stp	x29, x30, [sp, #-32]!
    bc74:	mov	x29, sp
    bc78:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    bc7c:	add	x0, x0, #0xd48
    bc80:	bl	8c00 <getenv@plt>
    bc84:	str	x0, [sp, #24]
    bc88:	ldr	x0, [sp, #24]
    bc8c:	cmp	x0, #0x0
    bc90:	b.eq	bcc0 <GOMP_critical_name_end@@GOMP_1.0+0x2af0>  // b.none
    bc94:	ldr	x0, [sp, #24]
    bc98:	ldrb	w0, [x0]
    bc9c:	cmp	w0, #0x0
    bca0:	b.eq	bcc0 <GOMP_critical_name_end@@GOMP_1.0+0x2af0>  // b.none
    bca4:	ldr	x0, [sp, #24]
    bca8:	bl	8930 <strdup@plt>
    bcac:	mov	x1, x0
    bcb0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bcb4:	add	x0, x0, #0x618
    bcb8:	str	x1, [x0]
    bcbc:	b	bcd0 <GOMP_critical_name_end@@GOMP_1.0+0x2b00>
    bcc0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bcc4:	add	x0, x0, #0x618
    bcc8:	str	xzr, [x0]
    bccc:	nop
    bcd0:	nop
    bcd4:	ldp	x29, x30, [sp], #32
    bcd8:	ret
    bcdc:	stp	x29, x30, [sp, #-64]!
    bce0:	mov	x29, sp
    bce4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    bce8:	add	x0, x0, #0xd58
    bcec:	str	x0, [sp, #40]
    bcf0:	ldr	x0, [sp, #40]
    bcf4:	bl	8c00 <getenv@plt>
    bcf8:	str	x0, [sp, #32]
    bcfc:	ldr	x0, [sp, #32]
    bd00:	cmp	x0, #0x0
    bd04:	b.eq	bdf0 <GOMP_critical_name_end@@GOMP_1.0+0x2c20>  // b.none
    bd08:	ldr	x0, [sp, #32]
    bd0c:	str	x0, [sp, #56]
    bd10:	str	wzr, [sp, #52]
    bd14:	b	bdd0 <GOMP_critical_name_end@@GOMP_1.0+0x2c00>
    bd18:	ldr	w0, [sp, #52]
    bd1c:	cmp	w0, #0x0
    bd20:	b.eq	bd3c <GOMP_critical_name_end@@GOMP_1.0+0x2b6c>  // b.none
    bd24:	ldr	x0, [sp, #56]
    bd28:	add	x1, x0, #0x1
    bd2c:	str	x1, [sp, #56]
    bd30:	ldrb	w0, [x0]
    bd34:	cmp	w0, #0x3a
    bd38:	b.ne	bdf8 <GOMP_critical_name_end@@GOMP_1.0+0x2c28>  // b.any
    bd3c:	ldr	x0, [sp, #56]
    bd40:	ldrb	w0, [x0]
    bd44:	cmp	w0, #0x3a
    bd48:	b.eq	bdc0 <GOMP_critical_name_end@@GOMP_1.0+0x2bf0>  // b.none
    bd4c:	bl	8be0 <__errno_location@plt>
    bd50:	str	wzr, [x0]
    bd54:	add	x0, sp, #0x10
    bd58:	mov	w2, #0xa                   	// #10
    bd5c:	mov	x1, x0
    bd60:	ldr	x0, [sp, #56]
    bd64:	bl	89d0 <strtol@plt>
    bd68:	str	x0, [sp, #24]
    bd6c:	bl	8be0 <__errno_location@plt>
    bd70:	ldr	w0, [x0]
    bd74:	cmp	w0, #0x0
    bd78:	b.ne	bdf8 <GOMP_critical_name_end@@GOMP_1.0+0x2c28>  // b.any
    bd7c:	ldr	x0, [sp, #24]
    bd80:	cmp	x0, #0x0
    bd84:	b.lt	bdf8 <GOMP_critical_name_end@@GOMP_1.0+0x2c28>  // b.tstop
    bd88:	ldr	x0, [sp, #24]
    bd8c:	mov	w0, w0
    bd90:	ldr	x1, [sp, #24]
    bd94:	cmp	x1, x0
    bd98:	b.ne	bdf8 <GOMP_critical_name_end@@GOMP_1.0+0x2c28>  // b.any
    bd9c:	ldr	x0, [sp, #24]
    bda0:	mov	w2, w0
    bda4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bda8:	add	x0, x0, #0x640
    bdac:	ldrsw	x1, [sp, #52]
    bdb0:	str	w2, [x0, x1, lsl #2]
    bdb4:	ldr	x0, [sp, #16]
    bdb8:	str	x0, [sp, #56]
    bdbc:	b	bdc4 <GOMP_critical_name_end@@GOMP_1.0+0x2bf4>
    bdc0:	nop
    bdc4:	ldr	w0, [sp, #52]
    bdc8:	add	w0, w0, #0x1
    bdcc:	str	w0, [sp, #52]
    bdd0:	ldr	x0, [sp, #56]
    bdd4:	ldrb	w0, [x0]
    bdd8:	cmp	w0, #0x0
    bddc:	b.eq	bdfc <GOMP_critical_name_end@@GOMP_1.0+0x2c2c>  // b.none
    bde0:	ldr	w0, [sp, #52]
    bde4:	cmp	w0, #0x3
    bde8:	b.ne	bd18 <GOMP_critical_name_end@@GOMP_1.0+0x2b48>  // b.any
    bdec:	b	bdfc <GOMP_critical_name_end@@GOMP_1.0+0x2c2c>
    bdf0:	nop
    bdf4:	b	bdfc <GOMP_critical_name_end@@GOMP_1.0+0x2c2c>
    bdf8:	nop
    bdfc:	ldp	x29, x30, [sp], #64
    be00:	ret
    be04:	stp	x29, x30, [sp, #-48]!
    be08:	mov	x29, sp
    be0c:	str	x0, [sp, #24]
    be10:	str	w1, [sp, #20]
    be14:	strb	wzr, [sp, #39]
    be18:	strb	wzr, [sp, #38]
    be1c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    be20:	add	x0, x0, #0xd70
    be24:	bl	8c00 <getenv@plt>
    be28:	str	x0, [sp, #40]
    be2c:	ldr	x0, [sp, #40]
    be30:	cmp	x0, #0x0
    be34:	b.eq	c9d0 <GOMP_critical_name_end@@GOMP_1.0+0x3800>  // b.none
    be38:	b	be48 <GOMP_critical_name_end@@GOMP_1.0+0x2c78>
    be3c:	ldr	x0, [sp, #40]
    be40:	add	x0, x0, #0x1
    be44:	str	x0, [sp, #40]
    be48:	bl	89c0 <__ctype_b_loc@plt>
    be4c:	ldr	x1, [x0]
    be50:	ldr	x0, [sp, #40]
    be54:	ldrb	w0, [x0]
    be58:	and	x0, x0, #0xff
    be5c:	lsl	x0, x0, #1
    be60:	add	x0, x1, x0
    be64:	ldrh	w0, [x0]
    be68:	and	w0, w0, #0x2000
    be6c:	cmp	w0, #0x0
    be70:	b.ne	be3c <GOMP_critical_name_end@@GOMP_1.0+0x2c6c>  // b.any
    be74:	mov	x2, #0x4                   	// #4
    be78:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    be7c:	add	x1, x0, #0xc88
    be80:	ldr	x0, [sp, #40]
    be84:	bl	8a60 <strncasecmp@plt>
    be88:	cmp	w0, #0x0
    be8c:	b.ne	bea8 <GOMP_critical_name_end@@GOMP_1.0+0x2cd8>  // b.any
    be90:	mov	w0, #0x1                   	// #1
    be94:	strb	w0, [sp, #39]
    be98:	ldr	x0, [sp, #40]
    be9c:	add	x0, x0, #0x4
    bea0:	str	x0, [sp, #40]
    bea4:	b	bf30 <GOMP_critical_name_end@@GOMP_1.0+0x2d60>
    bea8:	mov	x2, #0x5                   	// #5
    beac:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    beb0:	add	x1, x0, #0xc90
    beb4:	ldr	x0, [sp, #40]
    beb8:	bl	8a60 <strncasecmp@plt>
    bebc:	cmp	w0, #0x0
    bec0:	b.ne	bed8 <GOMP_critical_name_end@@GOMP_1.0+0x2d08>  // b.any
    bec4:	strb	wzr, [sp, #39]
    bec8:	ldr	x0, [sp, #40]
    becc:	add	x0, x0, #0x5
    bed0:	str	x0, [sp, #40]
    bed4:	b	bf30 <GOMP_critical_name_end@@GOMP_1.0+0x2d60>
    bed8:	mov	x2, #0x7                   	// #7
    bedc:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    bee0:	add	x1, x0, #0xd80
    bee4:	ldr	x0, [sp, #40]
    bee8:	bl	8a60 <strncasecmp@plt>
    beec:	cmp	w0, #0x0
    bef0:	b.ne	bf14 <GOMP_critical_name_end@@GOMP_1.0+0x2d44>  // b.any
    bef4:	mov	w0, #0x1                   	// #1
    bef8:	strb	w0, [sp, #39]
    befc:	mov	w0, #0x1                   	// #1
    bf00:	strb	w0, [sp, #38]
    bf04:	ldr	x0, [sp, #40]
    bf08:	add	x0, x0, #0x7
    bf0c:	str	x0, [sp, #40]
    bf10:	b	bf30 <GOMP_critical_name_end@@GOMP_1.0+0x2d60>
    bf14:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    bf18:	add	x0, x0, #0xc98
    bf1c:	str	x0, [sp, #40]
    bf20:	b	bf30 <GOMP_critical_name_end@@GOMP_1.0+0x2d60>
    bf24:	ldr	x0, [sp, #40]
    bf28:	add	x0, x0, #0x1
    bf2c:	str	x0, [sp, #40]
    bf30:	bl	89c0 <__ctype_b_loc@plt>
    bf34:	ldr	x1, [x0]
    bf38:	ldr	x0, [sp, #40]
    bf3c:	ldrb	w0, [x0]
    bf40:	and	x0, x0, #0xff
    bf44:	lsl	x0, x0, #1
    bf48:	add	x0, x1, x0
    bf4c:	ldrh	w0, [x0]
    bf50:	and	w0, w0, #0x2000
    bf54:	cmp	w0, #0x0
    bf58:	b.ne	bf24 <GOMP_critical_name_end@@GOMP_1.0+0x2d54>  // b.any
    bf5c:	ldr	x0, [sp, #40]
    bf60:	ldrb	w0, [x0]
    bf64:	cmp	w0, #0x0
    bf68:	b.eq	bf78 <GOMP_critical_name_end@@GOMP_1.0+0x2da8>  // b.none
    bf6c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    bf70:	add	x0, x0, #0xd88
    bf74:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    bf78:	ldrb	w0, [sp, #39]
    bf7c:	eor	w0, w0, #0x1
    bf80:	and	w0, w0, #0xff
    bf84:	cmp	w0, #0x0
    bf88:	b.ne	c9d8 <GOMP_critical_name_end@@GOMP_1.0+0x3808>  // b.any
    bf8c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    bf90:	ldr	x0, [x0, #4040]
    bf94:	ldr	x0, [x0]
    bf98:	mov	x3, x0
    bf9c:	mov	x2, #0x22                  	// #34
    bfa0:	mov	x1, #0x1                   	// #1
    bfa4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    bfa8:	add	x0, x0, #0xdc0
    bfac:	bl	8af0 <fwrite@plt>
    bfb0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    bfb4:	ldr	x0, [x0, #4040]
    bfb8:	ldr	x0, [x0]
    bfbc:	mov	x3, x0
    bfc0:	mov	x2, #0x15                  	// #21
    bfc4:	mov	x1, #0x1                   	// #1
    bfc8:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    bfcc:	add	x0, x0, #0xde8
    bfd0:	bl	8af0 <fwrite@plt>
    bfd4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    bfd8:	ldr	x0, [x0, #4040]
    bfdc:	ldr	x3, [x0]
    bfe0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    bfe4:	add	x0, x0, #0x2d8
    bfe8:	ldrb	w0, [x0, #24]
    bfec:	cmp	w0, #0x0
    bff0:	b.eq	c000 <GOMP_critical_name_end@@GOMP_1.0+0x2e30>  // b.none
    bff4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    bff8:	add	x0, x0, #0xe00
    bffc:	b	c008 <GOMP_critical_name_end@@GOMP_1.0+0x2e38>
    c000:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c004:	add	x0, x0, #0xe08
    c008:	mov	x2, x0
    c00c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c010:	add	x1, x0, #0xe10
    c014:	mov	x0, x3
    c018:	bl	8c30 <fprintf@plt>
    c01c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c020:	ldr	x0, [x0, #4040]
    c024:	ldr	x3, [x0]
    c028:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c02c:	add	x0, x0, #0x2d8
    c030:	ldrb	w0, [x0, #25]
    c034:	cmp	w0, #0x0
    c038:	b.eq	c048 <GOMP_critical_name_end@@GOMP_1.0+0x2e78>  // b.none
    c03c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c040:	add	x0, x0, #0xe00
    c044:	b	c050 <GOMP_critical_name_end@@GOMP_1.0+0x2e80>
    c048:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c04c:	add	x0, x0, #0xe08
    c050:	mov	x2, x0
    c054:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c058:	add	x1, x0, #0xe28
    c05c:	mov	x0, x3
    c060:	bl	8c30 <fprintf@plt>
    c064:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c068:	ldr	x0, [x0, #4040]
    c06c:	ldr	x3, [x0]
    c070:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c074:	add	x0, x0, #0x2d8
    c078:	ldr	x0, [x0]
    c07c:	mov	x2, x0
    c080:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c084:	add	x1, x0, #0xe40
    c088:	mov	x0, x3
    c08c:	bl	8c30 <fprintf@plt>
    c090:	mov	w0, #0x1                   	// #1
    c094:	str	w0, [sp, #32]
    c098:	b	c0e4 <GOMP_critical_name_end@@GOMP_1.0+0x2f14>
    c09c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c0a0:	ldr	x0, [x0, #4040]
    c0a4:	ldr	x3, [x0]
    c0a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c0ac:	add	x0, x0, #0x610
    c0b0:	ldr	x1, [x0]
    c0b4:	ldrsw	x0, [sp, #32]
    c0b8:	lsl	x0, x0, #3
    c0bc:	add	x0, x1, x0
    c0c0:	ldr	x0, [x0]
    c0c4:	mov	x2, x0
    c0c8:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c0cc:	add	x1, x0, #0xe60
    c0d0:	mov	x0, x3
    c0d4:	bl	8c30 <fprintf@plt>
    c0d8:	ldr	w0, [sp, #32]
    c0dc:	add	w0, w0, #0x1
    c0e0:	str	w0, [sp, #32]
    c0e4:	ldrsw	x1, [sp, #32]
    c0e8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c0ec:	add	x0, x0, #0x688
    c0f0:	ldr	x0, [x0]
    c0f4:	cmp	x1, x0
    c0f8:	b.cc	c09c <GOMP_critical_name_end@@GOMP_1.0+0x2ecc>  // b.lo, b.ul, b.last
    c0fc:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c100:	ldr	x0, [x0, #4040]
    c104:	ldr	x0, [x0]
    c108:	mov	x3, x0
    c10c:	mov	x2, #0x2                   	// #2
    c110:	mov	x1, #0x1                   	// #1
    c114:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c118:	add	x0, x0, #0xe68
    c11c:	bl	8af0 <fwrite@plt>
    c120:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c124:	ldr	x0, [x0, #4040]
    c128:	ldr	x0, [x0]
    c12c:	mov	x3, x0
    c130:	mov	x2, #0x12                  	// #18
    c134:	mov	x1, #0x1                   	// #1
    c138:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c13c:	add	x0, x0, #0xe70
    c140:	bl	8af0 <fwrite@plt>
    c144:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c148:	add	x0, x0, #0x2d8
    c14c:	ldr	w0, [x0, #8]
    c150:	cmp	w0, #0x0
    c154:	b.ge	c198 <GOMP_critical_name_end@@GOMP_1.0+0x2fc8>  // b.tcont
    c158:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c15c:	add	x0, x0, #0x2d8
    c160:	ldr	w1, [x0, #8]
    c164:	mov	w0, #0x80000001            	// #-2147483647
    c168:	cmp	w1, w0
    c16c:	b.eq	c1d0 <GOMP_critical_name_end@@GOMP_1.0+0x3000>  // b.none
    c170:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c174:	ldr	x0, [x0, #4040]
    c178:	ldr	x0, [x0]
    c17c:	mov	x3, x0
    c180:	mov	x2, #0xa                   	// #10
    c184:	mov	x1, #0x1                   	// #1
    c188:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c18c:	add	x0, x0, #0xe88
    c190:	bl	8af0 <fwrite@plt>
    c194:	b	c1d0 <GOMP_critical_name_end@@GOMP_1.0+0x3000>
    c198:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c19c:	add	x0, x0, #0x2d8
    c1a0:	ldr	w0, [x0, #8]
    c1a4:	cmp	w0, #0x1
    c1a8:	b.ne	c1d0 <GOMP_critical_name_end@@GOMP_1.0+0x3000>  // b.any
    c1ac:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c1b0:	ldr	x0, [x0, #4040]
    c1b4:	ldr	x0, [x0]
    c1b8:	mov	x3, x0
    c1bc:	mov	x2, #0xd                   	// #13
    c1c0:	mov	x1, #0x1                   	// #1
    c1c4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c1c8:	add	x0, x0, #0xe98
    c1cc:	bl	8af0 <fwrite@plt>
    c1d0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c1d4:	add	x0, x0, #0x2d8
    c1d8:	ldr	w0, [x0, #8]
    c1dc:	and	w0, w0, #0x7fffffff
    c1e0:	cmp	w0, #0x4
    c1e4:	b.eq	c3c4 <GOMP_critical_name_end@@GOMP_1.0+0x31f4>  // b.none
    c1e8:	cmp	w0, #0x4
    c1ec:	b.hi	c408 <GOMP_critical_name_end@@GOMP_1.0+0x3238>  // b.pmore
    c1f0:	cmp	w0, #0x3
    c1f4:	b.eq	c35c <GOMP_critical_name_end@@GOMP_1.0+0x318c>  // b.none
    c1f8:	cmp	w0, #0x3
    c1fc:	b.hi	c408 <GOMP_critical_name_end@@GOMP_1.0+0x3238>  // b.pmore
    c200:	cmp	w0, #0x2
    c204:	b.eq	c2f4 <GOMP_critical_name_end@@GOMP_1.0+0x3124>  // b.none
    c208:	cmp	w0, #0x2
    c20c:	b.hi	c408 <GOMP_critical_name_end@@GOMP_1.0+0x3238>  // b.pmore
    c210:	cmp	w0, #0x0
    c214:	b.eq	c224 <GOMP_critical_name_end@@GOMP_1.0+0x3054>  // b.none
    c218:	cmp	w0, #0x1
    c21c:	b.eq	c28c <GOMP_critical_name_end@@GOMP_1.0+0x30bc>  // b.none
    c220:	b	c408 <GOMP_critical_name_end@@GOMP_1.0+0x3238>
    c224:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c228:	ldr	x0, [x0, #4040]
    c22c:	ldr	x0, [x0]
    c230:	mov	x3, x0
    c234:	mov	x2, #0x7                   	// #7
    c238:	mov	x1, #0x1                   	// #1
    c23c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c240:	add	x0, x0, #0xea8
    c244:	bl	8af0 <fwrite@plt>
    c248:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c24c:	add	x0, x0, #0x2d8
    c250:	ldr	w0, [x0, #12]
    c254:	cmp	w0, #0x1
    c258:	b.eq	c3ec <GOMP_critical_name_end@@GOMP_1.0+0x321c>  // b.none
    c25c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c260:	ldr	x0, [x0, #4040]
    c264:	ldr	x3, [x0]
    c268:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c26c:	add	x0, x0, #0x2d8
    c270:	ldr	w0, [x0, #12]
    c274:	mov	w2, w0
    c278:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c27c:	add	x1, x0, #0xeb0
    c280:	mov	x0, x3
    c284:	bl	8c30 <fprintf@plt>
    c288:	b	c3ec <GOMP_critical_name_end@@GOMP_1.0+0x321c>
    c28c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c290:	ldr	x0, [x0, #4040]
    c294:	ldr	x0, [x0]
    c298:	mov	x3, x0
    c29c:	mov	x2, #0x6                   	// #6
    c2a0:	mov	x1, #0x1                   	// #1
    c2a4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c2a8:	add	x0, x0, #0xeb8
    c2ac:	bl	8af0 <fwrite@plt>
    c2b0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c2b4:	add	x0, x0, #0x2d8
    c2b8:	ldr	w0, [x0, #12]
    c2bc:	cmp	w0, #0x0
    c2c0:	b.eq	c3f4 <GOMP_critical_name_end@@GOMP_1.0+0x3224>  // b.none
    c2c4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c2c8:	ldr	x0, [x0, #4040]
    c2cc:	ldr	x3, [x0]
    c2d0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c2d4:	add	x0, x0, #0x2d8
    c2d8:	ldr	w0, [x0, #12]
    c2dc:	mov	w2, w0
    c2e0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c2e4:	add	x1, x0, #0xeb0
    c2e8:	mov	x0, x3
    c2ec:	bl	8c30 <fprintf@plt>
    c2f0:	b	c3f4 <GOMP_critical_name_end@@GOMP_1.0+0x3224>
    c2f4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c2f8:	ldr	x0, [x0, #4040]
    c2fc:	ldr	x0, [x0]
    c300:	mov	x3, x0
    c304:	mov	x2, #0x7                   	// #7
    c308:	mov	x1, #0x1                   	// #1
    c30c:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c310:	add	x0, x0, #0xec0
    c314:	bl	8af0 <fwrite@plt>
    c318:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c31c:	add	x0, x0, #0x2d8
    c320:	ldr	w0, [x0, #12]
    c324:	cmp	w0, #0x1
    c328:	b.eq	c3fc <GOMP_critical_name_end@@GOMP_1.0+0x322c>  // b.none
    c32c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c330:	ldr	x0, [x0, #4040]
    c334:	ldr	x3, [x0]
    c338:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c33c:	add	x0, x0, #0x2d8
    c340:	ldr	w0, [x0, #12]
    c344:	mov	w2, w0
    c348:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c34c:	add	x1, x0, #0xeb0
    c350:	mov	x0, x3
    c354:	bl	8c30 <fprintf@plt>
    c358:	b	c3fc <GOMP_critical_name_end@@GOMP_1.0+0x322c>
    c35c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c360:	ldr	x0, [x0, #4040]
    c364:	ldr	x0, [x0]
    c368:	mov	x3, x0
    c36c:	mov	x2, #0x6                   	// #6
    c370:	mov	x1, #0x1                   	// #1
    c374:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c378:	add	x0, x0, #0xec8
    c37c:	bl	8af0 <fwrite@plt>
    c380:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c384:	add	x0, x0, #0x2d8
    c388:	ldr	w0, [x0, #12]
    c38c:	cmp	w0, #0x1
    c390:	b.eq	c404 <GOMP_critical_name_end@@GOMP_1.0+0x3234>  // b.none
    c394:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c398:	ldr	x0, [x0, #4040]
    c39c:	ldr	x3, [x0]
    c3a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c3a4:	add	x0, x0, #0x2d8
    c3a8:	ldr	w0, [x0, #12]
    c3ac:	mov	w2, w0
    c3b0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c3b4:	add	x1, x0, #0xeb0
    c3b8:	mov	x0, x3
    c3bc:	bl	8c30 <fprintf@plt>
    c3c0:	b	c404 <GOMP_critical_name_end@@GOMP_1.0+0x3234>
    c3c4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c3c8:	ldr	x0, [x0, #4040]
    c3cc:	ldr	x0, [x0]
    c3d0:	mov	x3, x0
    c3d4:	mov	x2, #0x4                   	// #4
    c3d8:	mov	x1, #0x1                   	// #1
    c3dc:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c3e0:	add	x0, x0, #0xed0
    c3e4:	bl	8af0 <fwrite@plt>
    c3e8:	b	c408 <GOMP_critical_name_end@@GOMP_1.0+0x3238>
    c3ec:	nop
    c3f0:	b	c408 <GOMP_critical_name_end@@GOMP_1.0+0x3238>
    c3f4:	nop
    c3f8:	b	c408 <GOMP_critical_name_end@@GOMP_1.0+0x3238>
    c3fc:	nop
    c400:	b	c408 <GOMP_critical_name_end@@GOMP_1.0+0x3238>
    c404:	nop
    c408:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c40c:	ldr	x0, [x0, #4040]
    c410:	ldr	x0, [x0]
    c414:	mov	x3, x0
    c418:	mov	x2, #0x2                   	// #2
    c41c:	mov	x1, #0x1                   	// #1
    c420:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c424:	add	x0, x0, #0xe68
    c428:	bl	8af0 <fwrite@plt>
    c42c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c430:	ldr	x0, [x0, #4040]
    c434:	ldr	x0, [x0]
    c438:	mov	x3, x0
    c43c:	mov	x2, #0x13                  	// #19
    c440:	mov	x1, #0x1                   	// #1
    c444:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c448:	add	x0, x0, #0xed8
    c44c:	bl	8af0 <fwrite@plt>
    c450:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c454:	add	x0, x0, #0x2d8
    c458:	ldrb	w0, [x0, #26]
    c45c:	cmp	w0, #0x4
    c460:	b.eq	c540 <GOMP_critical_name_end@@GOMP_1.0+0x3370>  // b.none
    c464:	cmp	w0, #0x4
    c468:	b.gt	c568 <GOMP_critical_name_end@@GOMP_1.0+0x3398>
    c46c:	cmp	w0, #0x3
    c470:	b.eq	c518 <GOMP_critical_name_end@@GOMP_1.0+0x3348>  // b.none
    c474:	cmp	w0, #0x3
    c478:	b.gt	c568 <GOMP_critical_name_end@@GOMP_1.0+0x3398>
    c47c:	cmp	w0, #0x2
    c480:	b.eq	c4f0 <GOMP_critical_name_end@@GOMP_1.0+0x3320>  // b.none
    c484:	cmp	w0, #0x2
    c488:	b.gt	c568 <GOMP_critical_name_end@@GOMP_1.0+0x3398>
    c48c:	cmp	w0, #0x0
    c490:	b.eq	c4a0 <GOMP_critical_name_end@@GOMP_1.0+0x32d0>  // b.none
    c494:	cmp	w0, #0x1
    c498:	b.eq	c4c8 <GOMP_critical_name_end@@GOMP_1.0+0x32f8>  // b.none
    c49c:	b	c568 <GOMP_critical_name_end@@GOMP_1.0+0x3398>
    c4a0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c4a4:	ldr	x0, [x0, #4040]
    c4a8:	ldr	x0, [x0]
    c4ac:	mov	x3, x0
    c4b0:	mov	x2, #0x5                   	// #5
    c4b4:	mov	x1, #0x1                   	// #1
    c4b8:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c4bc:	add	x0, x0, #0xe08
    c4c0:	bl	8af0 <fwrite@plt>
    c4c4:	b	c568 <GOMP_critical_name_end@@GOMP_1.0+0x3398>
    c4c8:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c4cc:	ldr	x0, [x0, #4040]
    c4d0:	ldr	x0, [x0]
    c4d4:	mov	x3, x0
    c4d8:	mov	x2, #0x4                   	// #4
    c4dc:	mov	x1, #0x1                   	// #1
    c4e0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c4e4:	add	x0, x0, #0xe00
    c4e8:	bl	8af0 <fwrite@plt>
    c4ec:	b	c568 <GOMP_critical_name_end@@GOMP_1.0+0x3398>
    c4f0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c4f4:	ldr	x0, [x0, #4040]
    c4f8:	ldr	x0, [x0]
    c4fc:	mov	x3, x0
    c500:	mov	x2, #0x6                   	// #6
    c504:	mov	x1, #0x1                   	// #1
    c508:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c50c:	add	x0, x0, #0xef0
    c510:	bl	8af0 <fwrite@plt>
    c514:	b	c568 <GOMP_critical_name_end@@GOMP_1.0+0x3398>
    c518:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c51c:	ldr	x0, [x0, #4040]
    c520:	ldr	x0, [x0]
    c524:	mov	x3, x0
    c528:	mov	x2, #0x5                   	// #5
    c52c:	mov	x1, #0x1                   	// #1
    c530:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c534:	add	x0, x0, #0xef8
    c538:	bl	8af0 <fwrite@plt>
    c53c:	b	c568 <GOMP_critical_name_end@@GOMP_1.0+0x3398>
    c540:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c544:	ldr	x0, [x0, #4040]
    c548:	ldr	x0, [x0]
    c54c:	mov	x3, x0
    c550:	mov	x2, #0x6                   	// #6
    c554:	mov	x1, #0x1                   	// #1
    c558:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c55c:	add	x0, x0, #0xf00
    c560:	bl	8af0 <fwrite@plt>
    c564:	nop
    c568:	mov	w0, #0x1                   	// #1
    c56c:	str	w0, [sp, #32]
    c570:	b	c634 <GOMP_critical_name_end@@GOMP_1.0+0x3464>
    c574:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c578:	add	x0, x0, #0x638
    c57c:	ldr	x1, [x0]
    c580:	ldrsw	x0, [sp, #32]
    c584:	add	x0, x1, x0
    c588:	ldrb	w0, [x0]
    c58c:	cmp	w0, #0x4
    c590:	b.eq	c600 <GOMP_critical_name_end@@GOMP_1.0+0x3430>  // b.none
    c594:	cmp	w0, #0x4
    c598:	b.gt	c628 <GOMP_critical_name_end@@GOMP_1.0+0x3458>
    c59c:	cmp	w0, #0x2
    c5a0:	b.eq	c5b0 <GOMP_critical_name_end@@GOMP_1.0+0x33e0>  // b.none
    c5a4:	cmp	w0, #0x3
    c5a8:	b.eq	c5d8 <GOMP_critical_name_end@@GOMP_1.0+0x3408>  // b.none
    c5ac:	b	c628 <GOMP_critical_name_end@@GOMP_1.0+0x3458>
    c5b0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c5b4:	ldr	x0, [x0, #4040]
    c5b8:	ldr	x0, [x0]
    c5bc:	mov	x3, x0
    c5c0:	mov	x2, #0x7                   	// #7
    c5c4:	mov	x1, #0x1                   	// #1
    c5c8:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c5cc:	add	x0, x0, #0xf08
    c5d0:	bl	8af0 <fwrite@plt>
    c5d4:	b	c628 <GOMP_critical_name_end@@GOMP_1.0+0x3458>
    c5d8:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c5dc:	ldr	x0, [x0, #4040]
    c5e0:	ldr	x0, [x0]
    c5e4:	mov	x3, x0
    c5e8:	mov	x2, #0x6                   	// #6
    c5ec:	mov	x1, #0x1                   	// #1
    c5f0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c5f4:	add	x0, x0, #0xf10
    c5f8:	bl	8af0 <fwrite@plt>
    c5fc:	b	c628 <GOMP_critical_name_end@@GOMP_1.0+0x3458>
    c600:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c604:	ldr	x0, [x0, #4040]
    c608:	ldr	x0, [x0]
    c60c:	mov	x3, x0
    c610:	mov	x2, #0x7                   	// #7
    c614:	mov	x1, #0x1                   	// #1
    c618:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c61c:	add	x0, x0, #0xf18
    c620:	bl	8af0 <fwrite@plt>
    c624:	nop
    c628:	ldr	w0, [sp, #32]
    c62c:	add	w0, w0, #0x1
    c630:	str	w0, [sp, #32]
    c634:	ldrsw	x1, [sp, #32]
    c638:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c63c:	add	x0, x0, #0x628
    c640:	ldr	x0, [x0]
    c644:	cmp	x1, x0
    c648:	b.cc	c574 <GOMP_critical_name_end@@GOMP_1.0+0x33a4>  // b.lo, b.ul, b.last
    c64c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c650:	ldr	x0, [x0, #4040]
    c654:	ldr	x0, [x0]
    c658:	mov	x3, x0
    c65c:	mov	x2, #0x2                   	// #2
    c660:	mov	x1, #0x1                   	// #1
    c664:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c668:	add	x0, x0, #0xe68
    c66c:	bl	8af0 <fwrite@plt>
    c670:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c674:	ldr	x0, [x0, #4040]
    c678:	ldr	x0, [x0]
    c67c:	mov	x3, x0
    c680:	mov	x2, #0x10                  	// #16
    c684:	mov	x1, #0x1                   	// #1
    c688:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c68c:	add	x0, x0, #0xf20
    c690:	bl	8af0 <fwrite@plt>
    c694:	str	wzr, [sp, #32]
    c698:	b	c724 <GOMP_critical_name_end@@GOMP_1.0+0x3554>
    c69c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c6a0:	ldr	x0, [x0, #4040]
    c6a4:	ldr	x0, [x0]
    c6a8:	mov	x1, x0
    c6ac:	mov	w0, #0x7b                  	// #123
    c6b0:	bl	8790 <fputc@plt>
    c6b4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c6b8:	add	x0, x0, #0x650
    c6bc:	ldr	x1, [x0]
    c6c0:	ldrsw	x0, [sp, #32]
    c6c4:	lsl	x0, x0, #3
    c6c8:	add	x0, x1, x0
    c6cc:	ldr	x0, [x0]
    c6d0:	bl	247dc <omp_pause_resource_all_@@OMP_5.0+0x10d4>
    c6d4:	ldr	w0, [sp, #32]
    c6d8:	add	w0, w0, #0x1
    c6dc:	sxtw	x1, w0
    c6e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c6e4:	add	x0, x0, #0x678
    c6e8:	ldr	x0, [x0]
    c6ec:	cmp	x1, x0
    c6f0:	b.ne	c700 <GOMP_critical_name_end@@GOMP_1.0+0x3530>  // b.any
    c6f4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c6f8:	add	x0, x0, #0xf38
    c6fc:	b	c708 <GOMP_critical_name_end@@GOMP_1.0+0x3538>
    c700:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c704:	add	x0, x0, #0xf40
    c708:	adrp	x1, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c70c:	ldr	x1, [x1, #4040]
    c710:	ldr	x1, [x1]
    c714:	bl	86e0 <fputs@plt>
    c718:	ldr	w0, [sp, #32]
    c71c:	add	w0, w0, #0x1
    c720:	str	w0, [sp, #32]
    c724:	ldrsw	x1, [sp, #32]
    c728:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c72c:	add	x0, x0, #0x678
    c730:	ldr	x0, [x0]
    c734:	cmp	x1, x0
    c738:	b.cc	c69c <GOMP_critical_name_end@@GOMP_1.0+0x34cc>  // b.lo, b.ul, b.last
    c73c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c740:	ldr	x0, [x0, #4040]
    c744:	ldr	x0, [x0]
    c748:	mov	x3, x0
    c74c:	mov	x2, #0x2                   	// #2
    c750:	mov	x1, #0x1                   	// #1
    c754:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c758:	add	x0, x0, #0xe68
    c75c:	bl	8af0 <fwrite@plt>
    c760:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c764:	ldr	x0, [x0, #4040]
    c768:	ldr	x3, [x0]
    c76c:	ldr	x2, [sp, #24]
    c770:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c774:	add	x1, x0, #0xf48
    c778:	mov	x0, x3
    c77c:	bl	8c30 <fprintf@plt>
    c780:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c784:	ldr	x0, [x0, #4040]
    c788:	ldr	x3, [x0]
    c78c:	ldr	w0, [sp, #20]
    c790:	cmp	w0, #0x0
    c794:	b.le	c7a4 <GOMP_critical_name_end@@GOMP_1.0+0x35d4>
    c798:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c79c:	add	x0, x0, #0xf68
    c7a0:	b	c7ac <GOMP_critical_name_end@@GOMP_1.0+0x35dc>
    c7a4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c7a8:	add	x0, x0, #0xf70
    c7ac:	mov	x2, x0
    c7b0:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c7b4:	add	x1, x0, #0xf78
    c7b8:	mov	x0, x3
    c7bc:	bl	8c30 <fprintf@plt>
    c7c0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c7c4:	ldr	x0, [x0, #4040]
    c7c8:	ldr	x3, [x0]
    c7cc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c7d0:	add	x0, x0, #0x2d8
    c7d4:	ldr	w0, [x0, #20]
    c7d8:	mov	w2, w0
    c7dc:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c7e0:	add	x1, x0, #0xf98
    c7e4:	mov	x0, x3
    c7e8:	bl	8c30 <fprintf@plt>
    c7ec:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c7f0:	ldr	x0, [x0, #4040]
    c7f4:	ldr	x3, [x0]
    c7f8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c7fc:	add	x0, x0, #0x300
    c800:	ldr	x0, [x0]
    c804:	mov	x2, x0
    c808:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c80c:	add	x1, x0, #0xfb8
    c810:	mov	x0, x3
    c814:	bl	8c30 <fprintf@plt>
    c818:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c81c:	ldr	x0, [x0, #4040]
    c820:	ldr	x3, [x0]
    c824:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c828:	add	x0, x0, #0x574
    c82c:	ldrb	w0, [x0]
    c830:	cmp	w0, #0x0
    c834:	b.eq	c844 <GOMP_critical_name_end@@GOMP_1.0+0x3674>  // b.none
    c838:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c83c:	add	x0, x0, #0xe00
    c840:	b	c84c <GOMP_critical_name_end@@GOMP_1.0+0x367c>
    c844:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c848:	add	x0, x0, #0xe08
    c84c:	mov	x2, x0
    c850:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c854:	add	x1, x0, #0xfe0
    c858:	mov	x0, x3
    c85c:	bl	8c30 <fprintf@plt>
    c860:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c864:	ldr	x0, [x0, #4040]
    c868:	ldr	x3, [x0]
    c86c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c870:	add	x0, x0, #0x2d8
    c874:	ldr	w0, [x0, #16]
    c878:	mov	w2, w0
    c87c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    c880:	add	x1, x0, #0x0
    c884:	mov	x0, x3
    c888:	bl	8c30 <fprintf@plt>
    c88c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c890:	ldr	x0, [x0, #4040]
    c894:	ldr	x3, [x0]
    c898:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c89c:	add	x0, x0, #0x578
    c8a0:	ldr	w0, [x0]
    c8a4:	mov	w2, w0
    c8a8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    c8ac:	add	x1, x0, #0x20
    c8b0:	mov	x0, x3
    c8b4:	bl	8c30 <fprintf@plt>
    c8b8:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c8bc:	ldr	x0, [x0, #4040]
    c8c0:	ldr	x3, [x0]
    c8c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c8c8:	add	x0, x0, #0x620
    c8cc:	ldrb	w0, [x0]
    c8d0:	cmp	w0, #0x0
    c8d4:	b.eq	c8e4 <GOMP_critical_name_end@@GOMP_1.0+0x3714>  // b.none
    c8d8:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c8dc:	add	x0, x0, #0xe00
    c8e0:	b	c8ec <GOMP_critical_name_end@@GOMP_1.0+0x371c>
    c8e4:	adrp	x0, 34000 <omp_get_affinity_format@@OMP_5.0+0x7e4>
    c8e8:	add	x0, x0, #0xe08
    c8ec:	mov	x2, x0
    c8f0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    c8f4:	add	x1, x0, #0x40
    c8f8:	mov	x0, x3
    c8fc:	bl	8c30 <fprintf@plt>
    c900:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c904:	ldr	x0, [x0, #4040]
    c908:	ldr	x3, [x0]
    c90c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c910:	add	x0, x0, #0x358
    c914:	ldr	x0, [x0]
    c918:	mov	x2, x0
    c91c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    c920:	add	x1, x0, #0x60
    c924:	mov	x0, x3
    c928:	bl	8c30 <fprintf@plt>
    c92c:	ldrb	w0, [sp, #38]
    c930:	cmp	w0, #0x0
    c934:	b.eq	c9a8 <GOMP_critical_name_end@@GOMP_1.0+0x37d8>  // b.none
    c938:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c93c:	ldr	x0, [x0, #4040]
    c940:	ldr	x0, [x0]
    c944:	mov	x3, x0
    c948:	mov	x2, #0x19                  	// #25
    c94c:	mov	x1, #0x1                   	// #1
    c950:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    c954:	add	x0, x0, #0x80
    c958:	bl	8af0 <fwrite@plt>
    c95c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c960:	ldr	x0, [x0, #4040]
    c964:	ldr	x3, [x0]
    c968:	ldr	x2, [sp, #24]
    c96c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    c970:	add	x1, x0, #0xa0
    c974:	mov	x0, x3
    c978:	bl	8c30 <fprintf@plt>
    c97c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c980:	ldr	x0, [x0, #4040]
    c984:	ldr	x3, [x0]
    c988:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c98c:	add	x0, x0, #0x660
    c990:	ldr	x0, [x0]
    c994:	mov	x2, x0
    c998:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    c99c:	add	x1, x0, #0xc0
    c9a0:	mov	x0, x3
    c9a4:	bl	8c30 <fprintf@plt>
    c9a8:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    c9ac:	ldr	x0, [x0, #4040]
    c9b0:	ldr	x0, [x0]
    c9b4:	mov	x3, x0
    c9b8:	mov	x2, #0x1f                  	// #31
    c9bc:	mov	x1, #0x1                   	// #1
    c9c0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    c9c4:	add	x0, x0, #0xe0
    c9c8:	bl	8af0 <fwrite@plt>
    c9cc:	b	c9dc <GOMP_critical_name_end@@GOMP_1.0+0x380c>
    c9d0:	nop
    c9d4:	b	c9dc <GOMP_critical_name_end@@GOMP_1.0+0x380c>
    c9d8:	nop
    c9dc:	ldp	x29, x30, [sp], #48
    c9e0:	ret
    c9e4:	stp	x29, x30, [sp, #-64]!
    c9e8:	mov	x29, sp
    c9ec:	str	xzr, [sp, #24]
    c9f0:	bl	91f8 <GOMP_critical_name_end@@GOMP_1.0+0x28>
    c9f4:	bl	9208 <GOMP_critical_name_end@@GOMP_1.0+0x38>
    c9f8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    c9fc:	add	x1, x0, #0x2f0
    ca00:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ca04:	add	x0, x0, #0x100
    ca08:	bl	b5f4 <GOMP_critical_name_end@@GOMP_1.0+0x2424>
    ca0c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ca10:	add	x1, x0, #0x2f1
    ca14:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ca18:	add	x0, x0, #0x110
    ca1c:	bl	b5f4 <GOMP_critical_name_end@@GOMP_1.0+0x2424>
    ca20:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ca24:	add	x1, x0, #0x574
    ca28:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ca2c:	add	x0, x0, #0x120
    ca30:	bl	b5f4 <GOMP_critical_name_end@@GOMP_1.0+0x2424>
    ca34:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ca38:	add	x1, x0, #0x620
    ca3c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ca40:	add	x0, x0, #0x138
    ca44:	bl	b5f4 <GOMP_critical_name_end@@GOMP_1.0+0x2424>
    ca48:	mov	w2, #0x1                   	// #1
    ca4c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ca50:	add	x1, x0, #0x2e8
    ca54:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ca58:	add	x0, x0, #0x150
    ca5c:	bl	98e8 <GOMP_critical_name_end@@GOMP_1.0+0x718>
    ca60:	mov	w2, #0x1                   	// #1
    ca64:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ca68:	add	x1, x0, #0x578
    ca6c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ca70:	add	x0, x0, #0x168
    ca74:	bl	98e8 <GOMP_critical_name_end@@GOMP_1.0+0x718>
    ca78:	mov	w2, #0x1                   	// #1
    ca7c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ca80:	add	x1, x0, #0x300
    ca84:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ca88:	add	x0, x0, #0x180
    ca8c:	bl	9824 <GOMP_critical_name_end@@GOMP_1.0+0x654>
    ca90:	add	x0, sp, #0x20
    ca94:	mov	w2, #0x0                   	// #0
    ca98:	mov	x1, x0
    ca9c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    caa0:	add	x0, x0, #0x198
    caa4:	bl	9824 <GOMP_critical_name_end@@GOMP_1.0+0x654>
    caa8:	and	w0, w0, #0xff
    caac:	cmp	w0, #0x0
    cab0:	b.eq	cadc <GOMP_critical_name_end@@GOMP_1.0+0x390c>  // b.none
    cab4:	ldr	x1, [sp, #32]
    cab8:	mov	x0, #0x7fffffff            	// #2147483647
    cabc:	cmp	x1, x0
    cac0:	b.hi	cacc <GOMP_critical_name_end@@GOMP_1.0+0x38fc>  // b.pmore
    cac4:	ldr	x0, [sp, #32]
    cac8:	b	cad0 <GOMP_critical_name_end@@GOMP_1.0+0x3900>
    cacc:	mov	w0, #0xffffffff            	// #-1
    cad0:	adrp	x1, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cad4:	add	x1, x1, #0x2d8
    cad8:	str	w0, [x1, #20]
    cadc:	mov	w2, #0x1                   	// #1
    cae0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cae4:	add	x1, x0, #0x630
    cae8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    caec:	add	x0, x0, #0x1b0
    caf0:	bl	991c <GOMP_critical_name_end@@GOMP_1.0+0x74c>
    caf4:	bl	211e0 <omp_test_nest_lock@OMP_1.0+0x50c>
    caf8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cafc:	add	x0, x0, #0x2d8
    cb00:	ldr	x1, [x0]
    cb04:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb08:	add	x0, x0, #0x308
    cb0c:	str	x1, [x0]
    cb10:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb14:	add	x3, x0, #0x688
    cb18:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb1c:	add	x2, x0, #0x610
    cb20:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb24:	add	x1, x0, #0x2d8
    cb28:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    cb2c:	add	x0, x0, #0x1c0
    cb30:	bl	9950 <GOMP_critical_name_end@@GOMP_1.0+0x780>
    cb34:	and	w0, w0, #0xff
    cb38:	eor	w0, w0, #0x1
    cb3c:	and	w0, w0, #0xff
    cb40:	cmp	w0, #0x0
    cb44:	b.eq	cb60 <GOMP_critical_name_end@@GOMP_1.0+0x3990>  // b.none
    cb48:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb4c:	add	x0, x0, #0x308
    cb50:	ldr	x1, [x0]
    cb54:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb58:	add	x0, x0, #0x2d8
    cb5c:	str	x1, [x0]
    cb60:	strb	wzr, [sp, #63]
    cb64:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb68:	add	x3, x0, #0x628
    cb6c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb70:	add	x2, x0, #0x638
    cb74:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb78:	add	x1, x0, #0x2f2
    cb7c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    cb80:	add	x0, x0, #0x1d0
    cb84:	bl	9cc8 <GOMP_critical_name_end@@GOMP_1.0+0xaf8>
    cb88:	and	w0, w0, #0xff
    cb8c:	cmp	w0, #0x0
    cb90:	b.eq	cbb0 <GOMP_critical_name_end@@GOMP_1.0+0x39e0>  // b.none
    cb94:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cb98:	add	x0, x0, #0x2d8
    cb9c:	ldrb	w0, [x0, #26]
    cba0:	cmp	w0, #0x0
    cba4:	b.ne	cbb0 <GOMP_critical_name_end@@GOMP_1.0+0x39e0>  // b.any
    cba8:	mov	w0, #0x1                   	// #1
    cbac:	strb	w0, [sp, #63]
    cbb0:	ldrb	w1, [sp, #63]
    cbb4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    cbb8:	add	x0, x0, #0x1e0
    cbbc:	bl	a940 <GOMP_critical_name_end@@GOMP_1.0+0x1770>
    cbc0:	and	w0, w0, #0xff
    cbc4:	cmp	w0, #0x0
    cbc8:	b.eq	cbf8 <GOMP_critical_name_end@@GOMP_1.0+0x3a28>  // b.none
    cbcc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cbd0:	add	x0, x0, #0x2d8
    cbd4:	ldrb	w0, [x0, #26]
    cbd8:	cmp	w0, #0x0
    cbdc:	b.ne	cbf0 <GOMP_critical_name_end@@GOMP_1.0+0x3a20>  // b.any
    cbe0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cbe4:	add	x0, x0, #0x2d8
    cbe8:	mov	w1, #0x1                   	// #1
    cbec:	strb	w1, [x0, #26]
    cbf0:	mov	w0, #0x1                   	// #1
    cbf4:	strb	w0, [sp, #63]
    cbf8:	ldrb	w0, [sp, #63]
    cbfc:	bl	b884 <GOMP_critical_name_end@@GOMP_1.0+0x26b4>
    cc00:	and	w0, w0, #0xff
    cc04:	cmp	w0, #0x0
    cc08:	b.eq	cc38 <GOMP_critical_name_end@@GOMP_1.0+0x3a68>  // b.none
    cc0c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cc10:	add	x0, x0, #0x2d8
    cc14:	ldrb	w0, [x0, #26]
    cc18:	cmp	w0, #0x0
    cc1c:	b.ne	cc30 <GOMP_critical_name_end@@GOMP_1.0+0x3a60>  // b.any
    cc20:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cc24:	add	x0, x0, #0x2d8
    cc28:	mov	w1, #0x1                   	// #1
    cc2c:	strb	w1, [x0, #26]
    cc30:	mov	w0, #0x1                   	// #1
    cc34:	strb	w0, [sp, #63]
    cc38:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cc3c:	add	x0, x0, #0x2d8
    cc40:	ldrb	w0, [x0, #26]
    cc44:	cmp	w0, #0x0
    cc48:	b.eq	cc50 <GOMP_critical_name_end@@GOMP_1.0+0x3a80>  // b.none
    cc4c:	bl	2373c <omp_pause_resource_all_@@OMP_5.0+0x34>
    cc50:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    cc54:	add	x0, x0, #0x1f0
    cc58:	bl	8c00 <getenv@plt>
    cc5c:	str	x0, [sp, #48]
    cc60:	ldr	x0, [sp, #48]
    cc64:	cmp	x0, #0x0
    cc68:	b.eq	cc80 <GOMP_critical_name_end@@GOMP_1.0+0x3ab0>  // b.none
    cc6c:	ldr	x0, [sp, #48]
    cc70:	bl	86d0 <strlen@plt>
    cc74:	mov	x1, x0
    cc78:	ldr	x0, [sp, #48]
    cc7c:	bl	33708 <acc_set_cuda_stream@@OACC_2.0+0xb00>
    cc80:	bl	b73c <GOMP_critical_name_end@@GOMP_1.0+0x256c>
    cc84:	str	w0, [sp, #44]
    cc88:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cc8c:	add	x1, x0, #0x660
    cc90:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    cc94:	add	x0, x0, #0x208
    cc98:	bl	b344 <GOMP_critical_name_end@@GOMP_1.0+0x2174>
    cc9c:	and	w0, w0, #0xff
    cca0:	eor	w0, w0, #0x1
    cca4:	and	w0, w0, #0xff
    cca8:	cmp	w0, #0x0
    ccac:	b.eq	ccf8 <GOMP_critical_name_end@@GOMP_1.0+0x3b28>  // b.none
    ccb0:	ldr	w0, [sp, #44]
    ccb4:	cmp	w0, #0x0
    ccb8:	b.le	ccd8 <GOMP_critical_name_end@@GOMP_1.0+0x3b08>
    ccbc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ccc0:	add	x0, x0, #0x660
    ccc4:	mov	x1, #0xac00                	// #44032
    ccc8:	movk	x1, #0xfc23, lsl #16
    cccc:	movk	x1, #0x6, lsl #32
    ccd0:	str	x1, [x0]
    ccd4:	b	ccf8 <GOMP_critical_name_end@@GOMP_1.0+0x3b28>
    ccd8:	ldr	w0, [sp, #44]
    ccdc:	cmp	w0, #0x0
    cce0:	b.ge	ccf8 <GOMP_critical_name_end@@GOMP_1.0+0x3b28>  // b.tcont
    cce4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cce8:	add	x0, x0, #0x660
    ccec:	mov	x1, #0x93e0                	// #37856
    ccf0:	movk	x1, #0x4, lsl #16
    ccf4:	str	x1, [x0]
    ccf8:	ldr	w0, [sp, #44]
    ccfc:	cmp	w0, #0x0
    cd00:	b.le	cd18 <GOMP_critical_name_end@@GOMP_1.0+0x3b48>
    cd04:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cd08:	add	x0, x0, #0x670
    cd0c:	mov	x1, #0x3e8                 	// #1000
    cd10:	str	x1, [x0]
    cd14:	b	cd34 <GOMP_critical_name_end@@GOMP_1.0+0x3b64>
    cd18:	ldr	w0, [sp, #44]
    cd1c:	cmp	w0, #0x0
    cd20:	b.ge	cd34 <GOMP_critical_name_end@@GOMP_1.0+0x3b64>  // b.tcont
    cd24:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cd28:	add	x0, x0, #0x670
    cd2c:	mov	x1, #0x64                  	// #100
    cd30:	str	x1, [x0]
    cd34:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cd38:	add	x0, x0, #0x670
    cd3c:	ldr	x1, [x0]
    cd40:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cd44:	add	x0, x0, #0x660
    cd48:	ldr	x0, [x0]
    cd4c:	cmp	x1, x0
    cd50:	b.ls	cd6c <GOMP_critical_name_end@@GOMP_1.0+0x3b9c>  // b.plast
    cd54:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cd58:	add	x0, x0, #0x660
    cd5c:	ldr	x1, [x0]
    cd60:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cd64:	add	x0, x0, #0x670
    cd68:	str	x1, [x0]
    cd6c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cd70:	add	x0, x0, #0x690
    cd74:	bl	8780 <pthread_attr_init@plt>
    cd78:	add	x0, sp, #0x18
    cd7c:	mov	x1, x0
    cd80:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    cd84:	add	x0, x0, #0x218
    cd88:	bl	b108 <GOMP_critical_name_end@@GOMP_1.0+0x1f38>
    cd8c:	and	w0, w0, #0xff
    cd90:	cmp	w0, #0x0
    cd94:	b.ne	cdb8 <GOMP_critical_name_end@@GOMP_1.0+0x3be8>  // b.any
    cd98:	add	x0, sp, #0x18
    cd9c:	mov	x1, x0
    cda0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    cda4:	add	x0, x0, #0x228
    cda8:	bl	b108 <GOMP_critical_name_end@@GOMP_1.0+0x1f38>
    cdac:	and	w0, w0, #0xff
    cdb0:	cmp	w0, #0x0
    cdb4:	b.eq	ce34 <GOMP_critical_name_end@@GOMP_1.0+0x3c64>  // b.none
    cdb8:	ldr	x0, [sp, #24]
    cdbc:	mov	x1, x0
    cdc0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    cdc4:	add	x0, x0, #0x690
    cdc8:	bl	88e0 <pthread_attr_setstacksize@plt>
    cdcc:	str	w0, [sp, #40]
    cdd0:	ldr	w0, [sp, #40]
    cdd4:	cmp	w0, #0x16
    cdd8:	b.ne	ce10 <GOMP_critical_name_end@@GOMP_1.0+0x3c40>  // b.any
    cddc:	ldr	x1, [sp, #24]
    cde0:	mov	x0, #0x1ffff               	// #131071
    cde4:	cmp	x1, x0
    cde8:	b.hi	ce00 <GOMP_critical_name_end@@GOMP_1.0+0x3c30>  // b.pmore
    cdec:	mov	x1, #0x80                  	// #128
    cdf0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    cdf4:	add	x0, x0, #0x238
    cdf8:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    cdfc:	b	ce34 <GOMP_critical_name_end@@GOMP_1.0+0x3c64>
    ce00:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ce04:	add	x0, x0, #0x260
    ce08:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    ce0c:	b	ce34 <GOMP_critical_name_end@@GOMP_1.0+0x3c64>
    ce10:	ldr	w0, [sp, #40]
    ce14:	cmp	w0, #0x0
    ce18:	b.eq	ce34 <GOMP_critical_name_end@@GOMP_1.0+0x3c64>  // b.none
    ce1c:	ldr	w0, [sp, #40]
    ce20:	bl	8940 <strerror@plt>
    ce24:	mov	x1, x0
    ce28:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ce2c:	add	x0, x0, #0x288
    ce30:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
    ce34:	ldr	x0, [sp, #24]
    ce38:	ldr	w1, [sp, #44]
    ce3c:	bl	be04 <GOMP_critical_name_end@@GOMP_1.0+0x2c34>
    ce40:	mov	w2, #0x1                   	// #1
    ce44:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ce48:	add	x1, x0, #0x680
    ce4c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    ce50:	add	x0, x0, #0x2a8
    ce54:	bl	98e8 <GOMP_critical_name_end@@GOMP_1.0+0x718>
    ce58:	and	w0, w0, #0xff
    ce5c:	eor	w0, w0, #0x1
    ce60:	and	w0, w0, #0xff
    ce64:	cmp	w0, #0x0
    ce68:	b.eq	ce78 <GOMP_critical_name_end@@GOMP_1.0+0x3ca8>  // b.none
    ce6c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ce70:	add	x0, x0, #0x680
    ce74:	str	wzr, [x0]
    ce78:	bl	bc70 <GOMP_critical_name_end@@GOMP_1.0+0x2aa0>
    ce7c:	bl	bcdc <GOMP_critical_name_end@@GOMP_1.0+0x2b0c>
    ce80:	bl	306c8 <acc_on_device@@OACC_2.0+0x10>
    ce84:	nop
    ce88:	ldp	x29, x30, [sp], #64
    ce8c:	ret
    ce90:	stp	x29, x30, [sp, #-80]!
    ce94:	mov	x29, sp
    ce98:	str	x19, [sp, #16]
    ce9c:	str	w0, [sp, #76]
    cea0:	str	x1, [sp, #64]
    cea4:	mov	x19, x2
    cea8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    ceac:	add	x0, x0, #0x630
    ceb0:	ldr	w0, [x0]
    ceb4:	cmp	w0, #0x0
    ceb8:	b.eq	cef4 <GOMP_critical_name_end@@GOMP_1.0+0x3d24>  // b.none
    cebc:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    cec0:	ldr	x0, [x0, #4040]
    cec4:	ldr	x4, [x0]
    cec8:	add	x2, sp, #0x20
    cecc:	mov	x3, x19
    ced0:	ldp	x0, x1, [x3]
    ced4:	stp	x0, x1, [x2]
    ced8:	ldp	x0, x1, [x3, #16]
    cedc:	stp	x0, x1, [x2, #16]
    cee0:	add	x0, sp, #0x20
    cee4:	mov	x2, x0
    cee8:	ldr	x1, [sp, #64]
    ceec:	mov	x0, x4
    cef0:	bl	8bc0 <vfprintf@plt>
    cef4:	nop
    cef8:	ldr	x19, [sp, #16]
    cefc:	ldp	x29, x30, [sp], #80
    cf00:	ret
    cf04:	stp	x29, x30, [sp, #-272]!
    cf08:	mov	x29, sp
    cf0c:	str	w0, [sp, #60]
    cf10:	str	x1, [sp, #48]
    cf14:	str	x2, [sp, #224]
    cf18:	str	x3, [sp, #232]
    cf1c:	str	x4, [sp, #240]
    cf20:	str	x5, [sp, #248]
    cf24:	str	x6, [sp, #256]
    cf28:	str	x7, [sp, #264]
    cf2c:	str	q0, [sp, #96]
    cf30:	str	q1, [sp, #112]
    cf34:	str	q2, [sp, #128]
    cf38:	str	q3, [sp, #144]
    cf3c:	str	q4, [sp, #160]
    cf40:	str	q5, [sp, #176]
    cf44:	str	q6, [sp, #192]
    cf48:	str	q7, [sp, #208]
    cf4c:	add	x0, sp, #0x110
    cf50:	str	x0, [sp, #64]
    cf54:	add	x0, sp, #0x110
    cf58:	str	x0, [sp, #72]
    cf5c:	add	x0, sp, #0xe0
    cf60:	str	x0, [sp, #80]
    cf64:	mov	w0, #0xffffffd0            	// #-48
    cf68:	str	w0, [sp, #88]
    cf6c:	mov	w0, #0xffffff80            	// #-128
    cf70:	str	w0, [sp, #92]
    cf74:	add	x2, sp, #0x10
    cf78:	add	x3, sp, #0x40
    cf7c:	ldp	x0, x1, [x3]
    cf80:	stp	x0, x1, [x2]
    cf84:	ldp	x0, x1, [x3, #16]
    cf88:	stp	x0, x1, [x2, #16]
    cf8c:	add	x0, sp, #0x10
    cf90:	mov	x2, x0
    cf94:	ldr	x1, [sp, #48]
    cf98:	ldr	w0, [sp, #60]
    cf9c:	bl	ce90 <GOMP_critical_name_end@@GOMP_1.0+0x3cc0>
    cfa0:	nop
    cfa4:	ldp	x29, x30, [sp], #272
    cfa8:	ret
    cfac:	stp	x29, x30, [sp, #-80]!
    cfb0:	mov	x29, sp
    cfb4:	str	x19, [sp, #16]
    cfb8:	str	x0, [sp, #72]
    cfbc:	mov	x19, x1
    cfc0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    cfc4:	ldr	x0, [x0, #4040]
    cfc8:	ldr	x0, [x0]
    cfcc:	mov	x3, x0
    cfd0:	mov	x2, #0xa                   	// #10
    cfd4:	mov	x1, #0x1                   	// #1
    cfd8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
    cfdc:	add	x0, x0, #0x2b8
    cfe0:	bl	8af0 <fwrite@plt>
    cfe4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    cfe8:	ldr	x0, [x0, #4040]
    cfec:	ldr	x4, [x0]
    cff0:	add	x2, sp, #0x20
    cff4:	mov	x3, x19
    cff8:	ldp	x0, x1, [x3]
    cffc:	stp	x0, x1, [x2]
    d000:	ldp	x0, x1, [x3, #16]
    d004:	stp	x0, x1, [x2, #16]
    d008:	add	x0, sp, #0x20
    d00c:	mov	x2, x0
    d010:	ldr	x1, [sp, #72]
    d014:	mov	x0, x4
    d018:	bl	8bc0 <vfprintf@plt>
    d01c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    d020:	ldr	x0, [x0, #4040]
    d024:	ldr	x0, [x0]
    d028:	mov	x1, x0
    d02c:	mov	w0, #0xa                   	// #10
    d030:	bl	8790 <fputc@plt>
    d034:	nop
    d038:	ldr	x19, [sp, #16]
    d03c:	ldp	x29, x30, [sp], #80
    d040:	ret
    d044:	stp	x29, x30, [sp, #-288]!
    d048:	mov	x29, sp
    d04c:	str	x0, [sp, #56]
    d050:	str	x1, [sp, #232]
    d054:	str	x2, [sp, #240]
    d058:	str	x3, [sp, #248]
    d05c:	str	x4, [sp, #256]
    d060:	str	x5, [sp, #264]
    d064:	str	x6, [sp, #272]
    d068:	str	x7, [sp, #280]
    d06c:	str	q0, [sp, #96]
    d070:	str	q1, [sp, #112]
    d074:	str	q2, [sp, #128]
    d078:	str	q3, [sp, #144]
    d07c:	str	q4, [sp, #160]
    d080:	str	q5, [sp, #176]
    d084:	str	q6, [sp, #192]
    d088:	str	q7, [sp, #208]
    d08c:	add	x0, sp, #0x120
    d090:	str	x0, [sp, #64]
    d094:	add	x0, sp, #0x120
    d098:	str	x0, [sp, #72]
    d09c:	add	x0, sp, #0xe0
    d0a0:	str	x0, [sp, #80]
    d0a4:	mov	w0, #0xffffffc8            	// #-56
    d0a8:	str	w0, [sp, #88]
    d0ac:	mov	w0, #0xffffff80            	// #-128
    d0b0:	str	w0, [sp, #92]
    d0b4:	add	x2, sp, #0x10
    d0b8:	add	x3, sp, #0x40
    d0bc:	ldp	x0, x1, [x3]
    d0c0:	stp	x0, x1, [x2]
    d0c4:	ldp	x0, x1, [x3, #16]
    d0c8:	stp	x0, x1, [x2, #16]
    d0cc:	add	x0, sp, #0x10
    d0d0:	mov	x1, x0
    d0d4:	ldr	x0, [sp, #56]
    d0d8:	bl	cfac <GOMP_critical_name_end@@GOMP_1.0+0x3ddc>
    d0dc:	nop
    d0e0:	ldp	x29, x30, [sp], #288
    d0e4:	ret
    d0e8:	stp	x29, x30, [sp, #-80]!
    d0ec:	mov	x29, sp
    d0f0:	str	x19, [sp, #16]
    d0f4:	str	x0, [sp, #72]
    d0f8:	mov	x19, x1
    d0fc:	add	x2, sp, #0x20
    d100:	mov	x3, x19
    d104:	ldp	x0, x1, [x3]
    d108:	stp	x0, x1, [x2]
    d10c:	ldp	x0, x1, [x3, #16]
    d110:	stp	x0, x1, [x2, #16]
    d114:	add	x0, sp, #0x20
    d118:	mov	x1, x0
    d11c:	ldr	x0, [sp, #72]
    d120:	bl	cfac <GOMP_critical_name_end@@GOMP_1.0+0x3ddc>
    d124:	mov	w0, #0x1                   	// #1
    d128:	bl	86f0 <exit@plt>
    d12c:	stp	x29, x30, [sp, #-288]!
    d130:	mov	x29, sp
    d134:	str	x0, [sp, #56]
    d138:	str	x1, [sp, #232]
    d13c:	str	x2, [sp, #240]
    d140:	str	x3, [sp, #248]
    d144:	str	x4, [sp, #256]
    d148:	str	x5, [sp, #264]
    d14c:	str	x6, [sp, #272]
    d150:	str	x7, [sp, #280]
    d154:	str	q0, [sp, #96]
    d158:	str	q1, [sp, #112]
    d15c:	str	q2, [sp, #128]
    d160:	str	q3, [sp, #144]
    d164:	str	q4, [sp, #160]
    d168:	str	q5, [sp, #176]
    d16c:	str	q6, [sp, #192]
    d170:	str	q7, [sp, #208]
    d174:	add	x0, sp, #0x120
    d178:	str	x0, [sp, #64]
    d17c:	add	x0, sp, #0x120
    d180:	str	x0, [sp, #72]
    d184:	add	x0, sp, #0xe0
    d188:	str	x0, [sp, #80]
    d18c:	mov	w0, #0xffffffc8            	// #-56
    d190:	str	w0, [sp, #88]
    d194:	mov	w0, #0xffffff80            	// #-128
    d198:	str	w0, [sp, #92]
    d19c:	add	x2, sp, #0x10
    d1a0:	add	x3, sp, #0x40
    d1a4:	ldp	x0, x1, [x3]
    d1a8:	stp	x0, x1, [x2]
    d1ac:	ldp	x0, x1, [x3, #16]
    d1b0:	stp	x0, x1, [x2, #16]
    d1b4:	add	x0, sp, #0x10
    d1b8:	mov	x1, x0
    d1bc:	ldr	x0, [sp, #56]
    d1c0:	bl	d0e8 <GOMP_critical_name_end@@GOMP_1.0+0x3f18>
    d1c4:	mrs	x1, tpidr_el0
    d1c8:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    d1cc:	ldr	x0, [x0, #4016]
    d1d0:	add	x0, x1, x0
    d1d4:	ret
    d1d8:	stp	x29, x30, [sp, #-48]!
    d1dc:	mov	x29, sp
    d1e0:	strb	w0, [sp, #31]
    d1e4:	bl	d1c4 <GOMP_critical_name_end@@GOMP_1.0+0x3ff4>
    d1e8:	ldr	x0, [x0, #80]
    d1ec:	str	x0, [sp, #40]
    d1f0:	ldr	x0, [sp, #40]
    d1f4:	cmp	x0, #0x0
    d1f8:	b.eq	d208 <GOMP_critical_name_end@@GOMP_1.0+0x4038>  // b.none
    d1fc:	ldr	x0, [sp, #40]
    d200:	add	x0, x0, #0x90
    d204:	b	d224 <GOMP_critical_name_end@@GOMP_1.0+0x4054>
    d208:	ldrb	w0, [sp, #31]
    d20c:	cmp	w0, #0x0
    d210:	b.eq	d21c <GOMP_critical_name_end@@GOMP_1.0+0x404c>  // b.none
    d214:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
    d218:	b	d224 <GOMP_critical_name_end@@GOMP_1.0+0x4054>
    d21c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d220:	add	x0, x0, #0x2d8
    d224:	ldp	x29, x30, [sp], #48
    d228:	ret

000000000000d22c <omp_set_num_threads@@OMP_1.0>:
    d22c:	stp	x29, x30, [sp, #-48]!
    d230:	mov	x29, sp
    d234:	str	w0, [sp, #28]
    d238:	mov	w0, #0x1                   	// #1
    d23c:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d240:	str	x0, [sp, #40]
    d244:	ldr	w2, [sp, #28]
    d248:	ldr	w1, [sp, #28]
    d24c:	mov	w0, #0x1                   	// #1
    d250:	cmp	w2, #0x0
    d254:	csel	w0, w1, w0, gt
    d258:	sxtw	x1, w0
    d25c:	ldr	x0, [sp, #40]
    d260:	str	x1, [x0]
    d264:	nop
    d268:	ldp	x29, x30, [sp], #48
    d26c:	ret

000000000000d270 <omp_set_dynamic@@OMP_1.0>:
    d270:	stp	x29, x30, [sp, #-48]!
    d274:	mov	x29, sp
    d278:	str	w0, [sp, #28]
    d27c:	mov	w0, #0x1                   	// #1
    d280:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d284:	str	x0, [sp, #40]
    d288:	ldr	w0, [sp, #28]
    d28c:	cmp	w0, #0x0
    d290:	cset	w0, ne  // ne = any
    d294:	and	w1, w0, #0xff
    d298:	ldr	x0, [sp, #40]
    d29c:	strb	w1, [x0, #24]
    d2a0:	nop
    d2a4:	ldp	x29, x30, [sp], #48
    d2a8:	ret

000000000000d2ac <omp_get_dynamic@@OMP_1.0>:
    d2ac:	stp	x29, x30, [sp, #-32]!
    d2b0:	mov	x29, sp
    d2b4:	mov	w0, #0x0                   	// #0
    d2b8:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d2bc:	str	x0, [sp, #24]
    d2c0:	ldr	x0, [sp, #24]
    d2c4:	ldrb	w0, [x0, #24]
    d2c8:	ldp	x29, x30, [sp], #32
    d2cc:	ret

000000000000d2d0 <omp_set_nested@@OMP_1.0>:
    d2d0:	stp	x29, x30, [sp, #-48]!
    d2d4:	mov	x29, sp
    d2d8:	str	w0, [sp, #28]
    d2dc:	mov	w0, #0x1                   	// #1
    d2e0:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d2e4:	str	x0, [sp, #40]
    d2e8:	ldr	w0, [sp, #28]
    d2ec:	cmp	w0, #0x0
    d2f0:	cset	w0, ne  // ne = any
    d2f4:	and	w1, w0, #0xff
    d2f8:	ldr	x0, [sp, #40]
    d2fc:	strb	w1, [x0, #25]
    d300:	nop
    d304:	ldp	x29, x30, [sp], #48
    d308:	ret

000000000000d30c <omp_get_nested@@OMP_1.0>:
    d30c:	stp	x29, x30, [sp, #-32]!
    d310:	mov	x29, sp
    d314:	mov	w0, #0x0                   	// #0
    d318:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d31c:	str	x0, [sp, #24]
    d320:	ldr	x0, [sp, #24]
    d324:	ldrb	w0, [x0, #25]
    d328:	ldp	x29, x30, [sp], #32
    d32c:	ret

000000000000d330 <omp_set_schedule@@OMP_3.0>:
    d330:	stp	x29, x30, [sp, #-48]!
    d334:	mov	x29, sp
    d338:	str	w0, [sp, #28]
    d33c:	str	w1, [sp, #24]
    d340:	mov	w0, #0x1                   	// #1
    d344:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d348:	str	x0, [sp, #40]
    d34c:	ldr	w0, [sp, #28]
    d350:	and	w0, w0, #0x7fffffff
    d354:	cmp	w0, #0x4
    d358:	b.eq	d3c8 <omp_set_schedule@@OMP_3.0+0x98>  // b.none
    d35c:	cmp	w0, #0x4
    d360:	b.hi	d3dc <omp_set_schedule@@OMP_3.0+0xac>  // b.pmore
    d364:	cmp	w0, #0x1
    d368:	b.eq	d384 <omp_set_schedule@@OMP_3.0+0x54>  // b.none
    d36c:	cmp	w0, #0x0
    d370:	b.eq	d3dc <omp_set_schedule@@OMP_3.0+0xac>  // b.none
    d374:	sub	w0, w0, #0x2
    d378:	cmp	w0, #0x1
    d37c:	b.hi	d3dc <omp_set_schedule@@OMP_3.0+0xac>  // b.pmore
    d380:	b	d3a4 <omp_set_schedule@@OMP_3.0+0x74>
    d384:	ldr	w0, [sp, #24]
    d388:	cmp	w0, #0x0
    d38c:	b.gt	d394 <omp_set_schedule@@OMP_3.0+0x64>
    d390:	str	wzr, [sp, #24]
    d394:	ldr	x0, [sp, #40]
    d398:	ldr	w1, [sp, #24]
    d39c:	str	w1, [x0, #12]
    d3a0:	b	d3cc <omp_set_schedule@@OMP_3.0+0x9c>
    d3a4:	ldr	w0, [sp, #24]
    d3a8:	cmp	w0, #0x0
    d3ac:	b.gt	d3b8 <omp_set_schedule@@OMP_3.0+0x88>
    d3b0:	mov	w0, #0x1                   	// #1
    d3b4:	str	w0, [sp, #24]
    d3b8:	ldr	x0, [sp, #40]
    d3bc:	ldr	w1, [sp, #24]
    d3c0:	str	w1, [x0, #12]
    d3c4:	b	d3cc <omp_set_schedule@@OMP_3.0+0x9c>
    d3c8:	nop
    d3cc:	ldr	x0, [sp, #40]
    d3d0:	ldr	w1, [sp, #28]
    d3d4:	str	w1, [x0, #8]
    d3d8:	b	d3e0 <omp_set_schedule@@OMP_3.0+0xb0>
    d3dc:	nop
    d3e0:	ldp	x29, x30, [sp], #48
    d3e4:	ret

000000000000d3e8 <omp_get_schedule@@OMP_3.0>:
    d3e8:	stp	x29, x30, [sp, #-48]!
    d3ec:	mov	x29, sp
    d3f0:	str	x0, [sp, #24]
    d3f4:	str	x1, [sp, #16]
    d3f8:	mov	w0, #0x0                   	// #0
    d3fc:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d400:	str	x0, [sp, #40]
    d404:	ldr	x0, [sp, #40]
    d408:	ldr	w1, [x0, #8]
    d40c:	ldr	x0, [sp, #24]
    d410:	str	w1, [x0]
    d414:	ldr	x0, [sp, #40]
    d418:	ldr	w1, [x0, #12]
    d41c:	ldr	x0, [sp, #16]
    d420:	str	w1, [x0]
    d424:	nop
    d428:	ldp	x29, x30, [sp], #48
    d42c:	ret

000000000000d430 <omp_get_max_threads@@OMP_1.0>:
    d430:	stp	x29, x30, [sp, #-32]!
    d434:	mov	x29, sp
    d438:	mov	w0, #0x0                   	// #0
    d43c:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d440:	str	x0, [sp, #24]
    d444:	ldr	x0, [sp, #24]
    d448:	ldr	x0, [x0]
    d44c:	ldp	x29, x30, [sp], #32
    d450:	ret

000000000000d454 <omp_get_thread_limit@@OMP_3.0>:
    d454:	stp	x29, x30, [sp, #-32]!
    d458:	mov	x29, sp
    d45c:	mov	w0, #0x0                   	// #0
    d460:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d464:	str	x0, [sp, #24]
    d468:	ldr	x0, [sp, #24]
    d46c:	ldr	w0, [x0, #20]
    d470:	cmp	w0, #0x0
    d474:	b.lt	d484 <omp_get_thread_limit@@OMP_3.0+0x30>  // b.tstop
    d478:	ldr	x0, [sp, #24]
    d47c:	ldr	w0, [x0, #20]
    d480:	b	d488 <omp_get_thread_limit@@OMP_3.0+0x34>
    d484:	mov	w0, #0x7fffffff            	// #2147483647
    d488:	ldp	x29, x30, [sp], #32
    d48c:	ret

000000000000d490 <omp_set_max_active_levels@@OMP_3.0>:
    d490:	sub	sp, sp, #0x10
    d494:	str	w0, [sp, #12]
    d498:	ldr	w0, [sp, #12]
    d49c:	cmp	w0, #0x0
    d4a0:	b.lt	d4b4 <omp_set_max_active_levels@@OMP_3.0+0x24>  // b.tstop
    d4a4:	ldrsw	x1, [sp, #12]
    d4a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d4ac:	add	x0, x0, #0x300
    d4b0:	str	x1, [x0]
    d4b4:	nop
    d4b8:	add	sp, sp, #0x10
    d4bc:	ret

000000000000d4c0 <omp_get_max_active_levels@@OMP_3.0>:
    d4c0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d4c4:	add	x0, x0, #0x300
    d4c8:	ldr	x0, [x0]
    d4cc:	ret

000000000000d4d0 <omp_get_cancellation@@OMP_4.0>:
    d4d0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d4d4:	add	x0, x0, #0x574
    d4d8:	ldrb	w0, [x0]
    d4dc:	ret

000000000000d4e0 <omp_get_max_task_priority@@OMP_4.5>:
    d4e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d4e4:	add	x0, x0, #0x578
    d4e8:	ldr	w0, [x0]
    d4ec:	ret

000000000000d4f0 <omp_get_proc_bind@@OMP_4.0>:
    d4f0:	stp	x29, x30, [sp, #-32]!
    d4f4:	mov	x29, sp
    d4f8:	mov	w0, #0x0                   	// #0
    d4fc:	bl	d1d8 <GOMP_critical_name_end@@GOMP_1.0+0x4008>
    d500:	str	x0, [sp, #24]
    d504:	ldr	x0, [sp, #24]
    d508:	ldrb	w0, [x0, #26]
    d50c:	ldp	x29, x30, [sp], #32
    d510:	ret

000000000000d514 <omp_get_initial_device@@OMP_4.5>:
    d514:	mov	w0, #0xfffffffe            	// #-2
    d518:	ret

000000000000d51c <omp_get_num_places@@OMP_4.5>:
    d51c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d520:	add	x0, x0, #0x678
    d524:	ldr	x0, [x0]
    d528:	ret

000000000000d52c <omp_get_place_num@@OMP_4.5>:
    d52c:	stp	x29, x30, [sp, #-32]!
    d530:	mov	x29, sp
    d534:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d538:	add	x0, x0, #0x650
    d53c:	ldr	x0, [x0]
    d540:	cmp	x0, #0x0
    d544:	b.ne	d550 <omp_get_place_num@@OMP_4.5+0x24>  // b.any
    d548:	mov	w0, #0xffffffff            	// #-1
    d54c:	b	d578 <omp_get_place_num@@OMP_4.5+0x4c>
    d550:	bl	d1c4 <GOMP_critical_name_end@@GOMP_1.0+0x3ff4>
    d554:	str	x0, [sp, #24]
    d558:	ldr	x0, [sp, #24]
    d55c:	ldr	w0, [x0, #92]
    d560:	cmp	w0, #0x0
    d564:	b.ne	d56c <omp_get_place_num@@OMP_4.5+0x40>  // b.any
    d568:	bl	2373c <omp_pause_resource_all_@@OMP_5.0+0x34>
    d56c:	ldr	x0, [sp, #24]
    d570:	ldr	w0, [x0, #92]
    d574:	sub	w0, w0, #0x1
    d578:	ldp	x29, x30, [sp], #32
    d57c:	ret

000000000000d580 <omp_get_partition_num_places@@OMP_4.5>:
    d580:	stp	x29, x30, [sp, #-32]!
    d584:	mov	x29, sp
    d588:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d58c:	add	x0, x0, #0x650
    d590:	ldr	x0, [x0]
    d594:	cmp	x0, #0x0
    d598:	b.ne	d5a4 <omp_get_partition_num_places@@OMP_4.5+0x24>  // b.any
    d59c:	mov	w0, #0x0                   	// #0
    d5a0:	b	d5c8 <omp_get_partition_num_places@@OMP_4.5+0x48>
    d5a4:	bl	d1c4 <GOMP_critical_name_end@@GOMP_1.0+0x3ff4>
    d5a8:	str	x0, [sp, #24]
    d5ac:	ldr	x0, [sp, #24]
    d5b0:	ldr	w0, [x0, #92]
    d5b4:	cmp	w0, #0x0
    d5b8:	b.ne	d5c0 <omp_get_partition_num_places@@OMP_4.5+0x40>  // b.any
    d5bc:	bl	2373c <omp_pause_resource_all_@@OMP_5.0+0x34>
    d5c0:	ldr	x0, [sp, #24]
    d5c4:	ldr	w0, [x0, #56]
    d5c8:	ldp	x29, x30, [sp], #32
    d5cc:	ret

000000000000d5d0 <omp_get_partition_place_nums@@OMP_4.5>:
    d5d0:	stp	x29, x30, [sp, #-48]!
    d5d4:	mov	x29, sp
    d5d8:	str	x0, [sp, #24]
    d5dc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d5e0:	add	x0, x0, #0x650
    d5e4:	ldr	x0, [x0]
    d5e8:	cmp	x0, #0x0
    d5ec:	b.eq	d65c <omp_get_partition_place_nums@@OMP_4.5+0x8c>  // b.none
    d5f0:	bl	d1c4 <GOMP_critical_name_end@@GOMP_1.0+0x3ff4>
    d5f4:	str	x0, [sp, #32]
    d5f8:	ldr	x0, [sp, #32]
    d5fc:	ldr	w0, [x0, #92]
    d600:	cmp	w0, #0x0
    d604:	b.ne	d60c <omp_get_partition_place_nums@@OMP_4.5+0x3c>  // b.any
    d608:	bl	2373c <omp_pause_resource_all_@@OMP_5.0+0x34>
    d60c:	str	wzr, [sp, #44]
    d610:	b	d644 <omp_get_partition_place_nums@@OMP_4.5+0x74>
    d614:	ldr	x0, [sp, #32]
    d618:	ldr	w1, [x0, #52]
    d61c:	ldr	w0, [sp, #44]
    d620:	add	w2, w1, w0
    d624:	ldr	x0, [sp, #24]
    d628:	add	x1, x0, #0x4
    d62c:	str	x1, [sp, #24]
    d630:	mov	w1, w2
    d634:	str	w1, [x0]
    d638:	ldr	w0, [sp, #44]
    d63c:	add	w0, w0, #0x1
    d640:	str	w0, [sp, #44]
    d644:	ldr	x0, [sp, #32]
    d648:	ldr	w0, [x0, #56]
    d64c:	ldr	w1, [sp, #44]
    d650:	cmp	w1, w0
    d654:	b.cc	d614 <omp_get_partition_place_nums@@OMP_4.5+0x44>  // b.lo, b.ul, b.last
    d658:	b	d660 <omp_get_partition_place_nums@@OMP_4.5+0x90>
    d65c:	nop
    d660:	ldp	x29, x30, [sp], #48
    d664:	ret
    d668:	mrs	x1, tpidr_el0
    d66c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    d670:	ldr	x0, [x0, #4016]
    d674:	add	x0, x1, x0
    d678:	ret
    d67c:	stp	x29, x30, [sp, #-48]!
    d680:	mov	x29, sp
    d684:	strb	w0, [sp, #31]
    d688:	bl	d668 <omp_get_partition_place_nums@@OMP_4.5+0x98>
    d68c:	ldr	x0, [x0, #80]
    d690:	str	x0, [sp, #40]
    d694:	ldr	x0, [sp, #40]
    d698:	cmp	x0, #0x0
    d69c:	b.eq	d6ac <omp_get_partition_place_nums@@OMP_4.5+0xdc>  // b.none
    d6a0:	ldr	x0, [sp, #40]
    d6a4:	add	x0, x0, #0x90
    d6a8:	b	d6c8 <omp_get_partition_place_nums@@OMP_4.5+0xf8>
    d6ac:	ldrb	w0, [sp, #31]
    d6b0:	cmp	w0, #0x0
    d6b4:	b.eq	d6c0 <omp_get_partition_place_nums@@OMP_4.5+0xf0>  // b.none
    d6b8:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
    d6bc:	b	d6c8 <omp_get_partition_place_nums@@OMP_4.5+0xf8>
    d6c0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    d6c4:	add	x0, x0, #0x2d8
    d6c8:	ldp	x29, x30, [sp], #48
    d6cc:	ret

000000000000d6d0 <omp_set_default_device@@OMP_4.0>:
    d6d0:	stp	x29, x30, [sp, #-48]!
    d6d4:	mov	x29, sp
    d6d8:	str	w0, [sp, #28]
    d6dc:	mov	w0, #0x1                   	// #1
    d6e0:	bl	d67c <omp_get_partition_place_nums@@OMP_4.5+0xac>
    d6e4:	str	x0, [sp, #40]
    d6e8:	ldr	w1, [sp, #28]
    d6ec:	ldr	w0, [sp, #28]
    d6f0:	mov	w2, #0x0                   	// #0
    d6f4:	cmp	w1, #0x0
    d6f8:	csel	w1, w0, w2, ge  // ge = tcont
    d6fc:	ldr	x0, [sp, #40]
    d700:	str	w1, [x0, #16]
    d704:	nop
    d708:	ldp	x29, x30, [sp], #48
    d70c:	ret

000000000000d710 <omp_get_default_device@@OMP_4.0>:
    d710:	stp	x29, x30, [sp, #-32]!
    d714:	mov	x29, sp
    d718:	mov	w0, #0x0                   	// #0
    d71c:	bl	d67c <omp_get_partition_place_nums@@OMP_4.5+0xac>
    d720:	str	x0, [sp, #24]
    d724:	ldr	x0, [sp, #24]
    d728:	ldr	w0, [x0, #16]
    d72c:	ldp	x29, x30, [sp], #32
    d730:	ret

000000000000d734 <omp_get_num_devices@@OMP_4.0>:
    d734:	stp	x29, x30, [sp, #-16]!
    d738:	mov	x29, sp
    d73c:	bl	250a0 <omp_get_place_proc_ids@@OMP_4.5+0x6c4>
    d740:	ldp	x29, x30, [sp], #16
    d744:	ret

000000000000d748 <omp_is_initial_device@@OMP_4.0>:
    d748:	mov	w0, #0x1                   	// #1
    d74c:	ret
    d750:	mrs	x1, tpidr_el0
    d754:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    d758:	ldr	x0, [x0, #4016]
    d75c:	add	x0, x1, x0
    d760:	ret
    d764:	stp	x29, x30, [sp, #-192]!
    d768:	mov	x29, sp
    d76c:	str	x0, [sp, #24]
    d770:	str	x1, [sp, #16]
    d774:	bl	d750 <omp_is_initial_device@@OMP_4.0+0x8>
    d778:	str	x0, [sp, #160]
    d77c:	ldr	x0, [sp, #160]
    d780:	ldr	x0, [x0, #16]
    d784:	str	x0, [sp, #152]
    d788:	ldr	x0, [sp, #160]
    d78c:	ldr	x0, [x0, #24]
    d790:	str	x0, [sp, #144]
    d794:	ldr	x0, [sp, #152]
    d798:	cmp	x0, #0x0
    d79c:	b.eq	d7b0 <omp_is_initial_device@@OMP_4.0+0x68>  // b.none
    d7a0:	ldr	x0, [sp, #152]
    d7a4:	ldr	w0, [x0]
    d7a8:	mov	w0, w0
    d7ac:	b	d7b4 <omp_is_initial_device@@OMP_4.0+0x6c>
    d7b0:	mov	x0, #0x1                   	// #1
    d7b4:	str	x0, [sp, #136]
    d7b8:	ldr	x0, [sp, #160]
    d7bc:	ldr	x0, [x0, #72]
    d7c0:	cmn	x0, #0x1
    d7c4:	b.ne	d7d0 <omp_is_initial_device@@OMP_4.0+0x88>  // b.any
    d7c8:	mov	w0, #0xffffffff            	// #-1
    d7cc:	b	db3c <omp_is_initial_device@@OMP_4.0+0x3f4>
    d7d0:	ldr	x0, [sp, #136]
    d7d4:	cmp	x0, #0x1
    d7d8:	b.ne	d828 <omp_is_initial_device@@OMP_4.0+0xe0>  // b.any
    d7dc:	ldr	x0, [sp, #144]
    d7e0:	ldr	x1, [x0, #72]
    d7e4:	ldr	x0, [sp, #24]
    d7e8:	str	x1, [x0]
    d7ec:	ldr	x0, [sp, #144]
    d7f0:	ldr	x1, [x0, #16]
    d7f4:	ldr	x0, [sp, #16]
    d7f8:	str	x1, [x0]
    d7fc:	ldr	x0, [sp, #160]
    d800:	mov	x1, #0xffffffffffffffff    	// #-1
    d804:	str	x1, [x0, #72]
    d808:	ldr	x0, [sp, #144]
    d80c:	ldr	x1, [x0, #72]
    d810:	ldr	x0, [sp, #144]
    d814:	ldr	x0, [x0, #16]
    d818:	cmp	x1, x0
    d81c:	cset	w0, eq  // eq = none
    d820:	and	w0, w0, #0xff
    d824:	b	db3c <omp_is_initial_device@@OMP_4.0+0x3f4>
    d828:	ldr	x0, [sp, #144]
    d82c:	ldr	x0, [x0, #8]
    d830:	cmp	x0, #0x0
    d834:	b.ne	d9d4 <omp_is_initial_device@@OMP_4.0+0x28c>  // b.any
    d838:	ldr	x0, [sp, #160]
    d83c:	ldr	x0, [x0, #72]
    d840:	cmp	x0, #0x0
    d844:	b.eq	d850 <omp_is_initial_device@@OMP_4.0+0x108>  // b.none
    d848:	mov	w0, #0x1                   	// #1
    d84c:	b	db3c <omp_is_initial_device@@OMP_4.0+0x3f4>
    d850:	ldr	x0, [sp, #144]
    d854:	ldr	x1, [x0, #24]
    d858:	ldr	x0, [sp, #144]
    d85c:	ldr	x0, [x0, #24]
    d860:	cmp	x0, #0x0
    d864:	b.le	d870 <omp_is_initial_device@@OMP_4.0+0x128>
    d868:	mov	x0, #0xffffffffffffffff    	// #-1
    d86c:	b	d874 <omp_is_initial_device@@OMP_4.0+0x12c>
    d870:	mov	x0, #0x1                   	// #1
    d874:	add	x0, x0, x1
    d878:	str	x0, [sp, #80]
    d87c:	ldr	x0, [sp, #144]
    d880:	ldr	x1, [x0, #16]
    d884:	ldr	x0, [sp, #144]
    d888:	ldr	x0, [x0, #72]
    d88c:	sub	x1, x1, x0
    d890:	ldr	x0, [sp, #80]
    d894:	add	x1, x1, x0
    d898:	ldr	x0, [sp, #144]
    d89c:	ldr	x0, [x0, #24]
    d8a0:	sdiv	x0, x1, x0
    d8a4:	str	x0, [sp, #72]
    d8a8:	ldr	x0, [sp, #160]
    d8ac:	ldr	w0, [x0, #40]
    d8b0:	mov	w0, w0
    d8b4:	str	x0, [sp, #64]
    d8b8:	ldr	x1, [sp, #72]
    d8bc:	ldr	x0, [sp, #136]
    d8c0:	udiv	x0, x1, x0
    d8c4:	str	x0, [sp, #184]
    d8c8:	ldr	x0, [sp, #72]
    d8cc:	ldr	x1, [sp, #136]
    d8d0:	udiv	x2, x0, x1
    d8d4:	ldr	x1, [sp, #136]
    d8d8:	mul	x1, x2, x1
    d8dc:	sub	x0, x0, x1
    d8e0:	str	x0, [sp, #176]
    d8e4:	ldr	x1, [sp, #64]
    d8e8:	ldr	x0, [sp, #176]
    d8ec:	cmp	x1, x0
    d8f0:	b.cs	d904 <omp_is_initial_device@@OMP_4.0+0x1bc>  // b.hs, b.nlast
    d8f4:	str	xzr, [sp, #176]
    d8f8:	ldr	x0, [sp, #184]
    d8fc:	add	x0, x0, #0x1
    d900:	str	x0, [sp, #184]
    d904:	ldr	x1, [sp, #184]
    d908:	ldr	x0, [sp, #64]
    d90c:	mul	x0, x1, x0
    d910:	ldr	x1, [sp, #176]
    d914:	add	x0, x1, x0
    d918:	str	x0, [sp, #56]
    d91c:	ldr	x1, [sp, #56]
    d920:	ldr	x0, [sp, #184]
    d924:	add	x0, x1, x0
    d928:	str	x0, [sp, #48]
    d92c:	ldr	x1, [sp, #56]
    d930:	ldr	x0, [sp, #48]
    d934:	cmp	x1, x0
    d938:	b.cc	d950 <omp_is_initial_device@@OMP_4.0+0x208>  // b.lo, b.ul, b.last
    d93c:	ldr	x0, [sp, #160]
    d940:	mov	x1, #0x1                   	// #1
    d944:	str	x1, [x0, #72]
    d948:	mov	w0, #0x1                   	// #1
    d94c:	b	db3c <omp_is_initial_device@@OMP_4.0+0x3f4>
    d950:	ldr	x0, [sp, #144]
    d954:	ldr	x1, [x0, #24]
    d958:	ldr	x0, [sp, #56]
    d95c:	mul	x1, x1, x0
    d960:	ldr	x0, [sp, #144]
    d964:	ldr	x0, [x0, #72]
    d968:	add	x0, x1, x0
    d96c:	str	x0, [sp, #80]
    d970:	ldr	x0, [sp, #144]
    d974:	ldr	x1, [x0, #24]
    d978:	ldr	x0, [sp, #48]
    d97c:	mul	x1, x1, x0
    d980:	ldr	x0, [sp, #144]
    d984:	ldr	x0, [x0, #72]
    d988:	add	x0, x1, x0
    d98c:	str	x0, [sp, #40]
    d990:	ldr	x0, [sp, #24]
    d994:	ldr	x1, [sp, #80]
    d998:	str	x1, [x0]
    d99c:	ldr	x0, [sp, #16]
    d9a0:	ldr	x1, [sp, #40]
    d9a4:	str	x1, [x0]
    d9a8:	ldr	x1, [sp, #48]
    d9ac:	ldr	x0, [sp, #72]
    d9b0:	cmp	x1, x0
    d9b4:	b.ne	d9c0 <omp_is_initial_device@@OMP_4.0+0x278>  // b.any
    d9b8:	mov	x0, #0xffffffffffffffff    	// #-1
    d9bc:	b	d9c4 <omp_is_initial_device@@OMP_4.0+0x27c>
    d9c0:	mov	x0, #0x1                   	// #1
    d9c4:	ldr	x1, [sp, #160]
    d9c8:	str	x0, [x1, #72]
    d9cc:	mov	w0, #0x0                   	// #0
    d9d0:	b	db3c <omp_is_initial_device@@OMP_4.0+0x3f4>
    d9d4:	ldr	x0, [sp, #144]
    d9d8:	ldr	x1, [x0, #24]
    d9dc:	ldr	x0, [sp, #144]
    d9e0:	ldr	x0, [x0, #24]
    d9e4:	cmp	x0, #0x0
    d9e8:	b.le	d9f4 <omp_is_initial_device@@OMP_4.0+0x2ac>
    d9ec:	mov	x0, #0xffffffffffffffff    	// #-1
    d9f0:	b	d9f8 <omp_is_initial_device@@OMP_4.0+0x2b0>
    d9f4:	mov	x0, #0x1                   	// #1
    d9f8:	add	x0, x0, x1
    d9fc:	str	x0, [sp, #128]
    da00:	ldr	x0, [sp, #144]
    da04:	ldr	x1, [x0, #16]
    da08:	ldr	x0, [sp, #144]
    da0c:	ldr	x0, [x0, #72]
    da10:	sub	x1, x1, x0
    da14:	ldr	x0, [sp, #128]
    da18:	add	x1, x1, x0
    da1c:	ldr	x0, [sp, #144]
    da20:	ldr	x0, [x0, #24]
    da24:	sdiv	x0, x1, x0
    da28:	str	x0, [sp, #120]
    da2c:	ldr	x0, [sp, #160]
    da30:	ldr	w0, [x0, #40]
    da34:	mov	w0, w0
    da38:	str	x0, [sp, #112]
    da3c:	ldr	x0, [sp, #144]
    da40:	ldr	x0, [x0, #8]
    da44:	str	x0, [sp, #104]
    da48:	ldr	x0, [sp, #160]
    da4c:	ldr	x1, [x0, #72]
    da50:	ldr	x0, [sp, #136]
    da54:	mul	x1, x1, x0
    da58:	ldr	x0, [sp, #112]
    da5c:	add	x0, x1, x0
    da60:	ldr	x1, [sp, #104]
    da64:	mul	x0, x1, x0
    da68:	str	x0, [sp, #96]
    da6c:	ldr	x1, [sp, #96]
    da70:	ldr	x0, [sp, #104]
    da74:	add	x0, x1, x0
    da78:	str	x0, [sp, #168]
    da7c:	ldr	x1, [sp, #96]
    da80:	ldr	x0, [sp, #120]
    da84:	cmp	x1, x0
    da88:	b.cc	da94 <omp_is_initial_device@@OMP_4.0+0x34c>  // b.lo, b.ul, b.last
    da8c:	mov	w0, #0x1                   	// #1
    da90:	b	db3c <omp_is_initial_device@@OMP_4.0+0x3f4>
    da94:	ldr	x1, [sp, #168]
    da98:	ldr	x0, [sp, #120]
    da9c:	cmp	x1, x0
    daa0:	b.ls	daac <omp_is_initial_device@@OMP_4.0+0x364>  // b.plast
    daa4:	ldr	x0, [sp, #120]
    daa8:	str	x0, [sp, #168]
    daac:	ldr	x0, [sp, #144]
    dab0:	ldr	x1, [x0, #24]
    dab4:	ldr	x0, [sp, #96]
    dab8:	mul	x1, x1, x0
    dabc:	ldr	x0, [sp, #144]
    dac0:	ldr	x0, [x0, #72]
    dac4:	add	x0, x1, x0
    dac8:	str	x0, [sp, #128]
    dacc:	ldr	x0, [sp, #144]
    dad0:	ldr	x1, [x0, #24]
    dad4:	ldr	x0, [sp, #168]
    dad8:	mul	x1, x1, x0
    dadc:	ldr	x0, [sp, #144]
    dae0:	ldr	x0, [x0, #72]
    dae4:	add	x0, x1, x0
    dae8:	str	x0, [sp, #88]
    daec:	ldr	x0, [sp, #24]
    daf0:	ldr	x1, [sp, #128]
    daf4:	str	x1, [x0]
    daf8:	ldr	x0, [sp, #16]
    dafc:	ldr	x1, [sp, #88]
    db00:	str	x1, [x0]
    db04:	ldr	x1, [sp, #168]
    db08:	ldr	x0, [sp, #120]
    db0c:	cmp	x1, x0
    db10:	b.ne	db24 <omp_is_initial_device@@OMP_4.0+0x3dc>  // b.any
    db14:	ldr	x0, [sp, #160]
    db18:	mov	x1, #0xffffffffffffffff    	// #-1
    db1c:	str	x1, [x0, #72]
    db20:	b	db38 <omp_is_initial_device@@OMP_4.0+0x3f0>
    db24:	ldr	x0, [sp, #160]
    db28:	ldr	x0, [x0, #72]
    db2c:	add	x1, x0, #0x1
    db30:	ldr	x0, [sp, #160]
    db34:	str	x1, [x0, #72]
    db38:	mov	w0, #0x0                   	// #0
    db3c:	ldp	x29, x30, [sp], #192
    db40:	ret
    db44:	stp	x29, x30, [sp, #-80]!
    db48:	mov	x29, sp
    db4c:	str	x0, [sp, #24]
    db50:	str	x1, [sp, #16]
    db54:	bl	d750 <omp_is_initial_device@@OMP_4.0+0x8>
    db58:	str	x0, [sp, #64]
    db5c:	ldr	x0, [sp, #64]
    db60:	ldr	x0, [x0, #24]
    db64:	str	x0, [sp, #56]
    db68:	ldr	x0, [sp, #56]
    db6c:	ldr	x0, [x0, #72]
    db70:	str	x0, [sp, #48]
    db74:	ldr	x0, [sp, #56]
    db78:	ldr	x0, [x0, #16]
    db7c:	ldr	x1, [sp, #48]
    db80:	cmp	x1, x0
    db84:	b.ne	db90 <omp_is_initial_device@@OMP_4.0+0x448>  // b.any
    db88:	mov	w0, #0x0                   	// #0
    db8c:	b	dc2c <omp_is_initial_device@@OMP_4.0+0x4e4>
    db90:	ldr	x0, [sp, #56]
    db94:	ldr	x0, [x0, #8]
    db98:	str	x0, [sp, #72]
    db9c:	ldr	x0, [sp, #56]
    dba0:	ldr	x1, [x0, #16]
    dba4:	ldr	x0, [sp, #48]
    dba8:	sub	x0, x1, x0
    dbac:	str	x0, [sp, #40]
    dbb0:	ldr	x0, [sp, #56]
    dbb4:	ldr	x0, [x0, #24]
    dbb8:	cmp	x0, #0x0
    dbbc:	b.ge	dbdc <omp_is_initial_device@@OMP_4.0+0x494>  // b.tcont
    dbc0:	ldr	x1, [sp, #72]
    dbc4:	ldr	x0, [sp, #40]
    dbc8:	cmp	x1, x0
    dbcc:	b.ge	dbf4 <omp_is_initial_device@@OMP_4.0+0x4ac>  // b.tcont
    dbd0:	ldr	x0, [sp, #40]
    dbd4:	str	x0, [sp, #72]
    dbd8:	b	dbf4 <omp_is_initial_device@@OMP_4.0+0x4ac>
    dbdc:	ldr	x1, [sp, #72]
    dbe0:	ldr	x0, [sp, #40]
    dbe4:	cmp	x1, x0
    dbe8:	b.le	dbf4 <omp_is_initial_device@@OMP_4.0+0x4ac>
    dbec:	ldr	x0, [sp, #40]
    dbf0:	str	x0, [sp, #72]
    dbf4:	ldr	x1, [sp, #48]
    dbf8:	ldr	x0, [sp, #72]
    dbfc:	add	x0, x1, x0
    dc00:	str	x0, [sp, #32]
    dc04:	ldr	x0, [sp, #56]
    dc08:	ldr	x1, [sp, #32]
    dc0c:	str	x1, [x0, #72]
    dc10:	ldr	x0, [sp, #24]
    dc14:	ldr	x1, [sp, #48]
    dc18:	str	x1, [x0]
    dc1c:	ldr	x0, [sp, #16]
    dc20:	ldr	x1, [sp, #32]
    dc24:	str	x1, [x0]
    dc28:	mov	w0, #0x1                   	// #1
    dc2c:	ldp	x29, x30, [sp], #80
    dc30:	ret
    dc34:	stp	x29, x30, [sp, #-112]!
    dc38:	mov	x29, sp
    dc3c:	str	x0, [sp, #24]
    dc40:	str	x1, [sp, #16]
    dc44:	bl	d750 <omp_is_initial_device@@OMP_4.0+0x8>
    dc48:	str	x0, [sp, #80]
    dc4c:	ldr	x0, [sp, #80]
    dc50:	ldr	x0, [x0, #24]
    dc54:	str	x0, [sp, #72]
    dc58:	ldr	x0, [sp, #72]
    dc5c:	ldr	x0, [x0, #16]
    dc60:	str	x0, [sp, #64]
    dc64:	ldr	x0, [sp, #72]
    dc68:	ldr	x0, [x0, #24]
    dc6c:	str	x0, [sp, #56]
    dc70:	ldr	x0, [sp, #72]
    dc74:	ldr	x0, [x0, #8]
    dc78:	str	x0, [sp, #88]
    dc7c:	ldr	x0, [sp, #72]
    dc80:	ldr	w0, [x0, #4]
    dc84:	sxtw	x0, w0
    dc88:	cmp	x0, #0x0
    dc8c:	b.eq	dd80 <omp_is_initial_device@@OMP_4.0+0x638>  // b.none
    dc90:	ldr	x0, [sp, #72]
    dc94:	add	x0, x0, #0x48
    dc98:	ldr	x2, [sp, #88]
    dc9c:	ldxr	x1, [x0]
    dca0:	add	x3, x1, x2
    dca4:	stlxr	w4, x3, [x0]
    dca8:	cbnz	w4, dc9c <omp_is_initial_device@@OMP_4.0+0x554>
    dcac:	dmb	ish
    dcb0:	str	x1, [sp, #32]
    dcb4:	ldr	x0, [sp, #56]
    dcb8:	cmp	x0, #0x0
    dcbc:	b.le	dd20 <omp_is_initial_device@@OMP_4.0+0x5d8>
    dcc0:	ldr	x1, [sp, #32]
    dcc4:	ldr	x0, [sp, #64]
    dcc8:	cmp	x1, x0
    dccc:	b.lt	dcd8 <omp_is_initial_device@@OMP_4.0+0x590>  // b.tstop
    dcd0:	mov	w0, #0x0                   	// #0
    dcd4:	b	de80 <omp_is_initial_device@@OMP_4.0+0x738>
    dcd8:	ldr	x1, [sp, #32]
    dcdc:	ldr	x0, [sp, #88]
    dce0:	add	x0, x1, x0
    dce4:	str	x0, [sp, #96]
    dce8:	ldr	x1, [sp, #96]
    dcec:	ldr	x0, [sp, #64]
    dcf0:	cmp	x1, x0
    dcf4:	b.le	dd00 <omp_is_initial_device@@OMP_4.0+0x5b8>
    dcf8:	ldr	x0, [sp, #64]
    dcfc:	str	x0, [sp, #96]
    dd00:	ldr	x0, [sp, #24]
    dd04:	ldr	x1, [sp, #32]
    dd08:	str	x1, [x0]
    dd0c:	ldr	x0, [sp, #16]
    dd10:	ldr	x1, [sp, #96]
    dd14:	str	x1, [x0]
    dd18:	mov	w0, #0x1                   	// #1
    dd1c:	b	de80 <omp_is_initial_device@@OMP_4.0+0x738>
    dd20:	ldr	x1, [sp, #32]
    dd24:	ldr	x0, [sp, #64]
    dd28:	cmp	x1, x0
    dd2c:	b.gt	dd38 <omp_is_initial_device@@OMP_4.0+0x5f0>
    dd30:	mov	w0, #0x0                   	// #0
    dd34:	b	de80 <omp_is_initial_device@@OMP_4.0+0x738>
    dd38:	ldr	x1, [sp, #32]
    dd3c:	ldr	x0, [sp, #88]
    dd40:	add	x0, x1, x0
    dd44:	str	x0, [sp, #96]
    dd48:	ldr	x1, [sp, #96]
    dd4c:	ldr	x0, [sp, #64]
    dd50:	cmp	x1, x0
    dd54:	b.ge	dd60 <omp_is_initial_device@@OMP_4.0+0x618>  // b.tcont
    dd58:	ldr	x0, [sp, #64]
    dd5c:	str	x0, [sp, #96]
    dd60:	ldr	x0, [sp, #24]
    dd64:	ldr	x1, [sp, #32]
    dd68:	str	x1, [x0]
    dd6c:	ldr	x0, [sp, #16]
    dd70:	ldr	x1, [sp, #96]
    dd74:	str	x1, [x0]
    dd78:	mov	w0, #0x1                   	// #1
    dd7c:	b	de80 <omp_is_initial_device@@OMP_4.0+0x738>
    dd80:	ldr	x0, [sp, #72]
    dd84:	add	x0, x0, #0x48
    dd88:	ldr	x0, [x0]
    dd8c:	str	x0, [sp, #104]
    dd90:	ldr	x1, [sp, #64]
    dd94:	ldr	x0, [sp, #104]
    dd98:	sub	x0, x1, x0
    dd9c:	str	x0, [sp, #48]
    dda0:	ldr	x1, [sp, #104]
    dda4:	ldr	x0, [sp, #64]
    dda8:	cmp	x1, x0
    ddac:	b.ne	ddb8 <omp_is_initial_device@@OMP_4.0+0x670>  // b.any
    ddb0:	mov	w0, #0x0                   	// #0
    ddb4:	b	de80 <omp_is_initial_device@@OMP_4.0+0x738>
    ddb8:	ldr	x0, [sp, #56]
    ddbc:	cmp	x0, #0x0
    ddc0:	b.ge	dde0 <omp_is_initial_device@@OMP_4.0+0x698>  // b.tcont
    ddc4:	ldr	x1, [sp, #88]
    ddc8:	ldr	x0, [sp, #48]
    ddcc:	cmp	x1, x0
    ddd0:	b.ge	ddf8 <omp_is_initial_device@@OMP_4.0+0x6b0>  // b.tcont
    ddd4:	ldr	x0, [sp, #48]
    ddd8:	str	x0, [sp, #88]
    dddc:	b	ddf8 <omp_is_initial_device@@OMP_4.0+0x6b0>
    dde0:	ldr	x1, [sp, #88]
    dde4:	ldr	x0, [sp, #48]
    dde8:	cmp	x1, x0
    ddec:	b.le	ddf8 <omp_is_initial_device@@OMP_4.0+0x6b0>
    ddf0:	ldr	x0, [sp, #48]
    ddf4:	str	x0, [sp, #88]
    ddf8:	ldr	x1, [sp, #104]
    ddfc:	ldr	x0, [sp, #88]
    de00:	add	x0, x1, x0
    de04:	str	x0, [sp, #96]
    de08:	ldr	x0, [sp, #72]
    de0c:	add	x1, x0, #0x48
    de10:	ldr	x2, [sp, #104]
    de14:	ldr	x3, [sp, #96]
    de18:	ldxr	x0, [x1]
    de1c:	cmp	x0, x2
    de20:	b.ne	de2c <omp_is_initial_device@@OMP_4.0+0x6e4>  // b.any
    de24:	stlxr	w4, x3, [x1]
    de28:	cbnz	w4, de18 <omp_is_initial_device@@OMP_4.0+0x6d0>
    de2c:	dmb	ish
    de30:	str	x0, [sp, #40]
    de34:	ldr	x1, [sp, #40]
    de38:	ldr	x0, [sp, #104]
    de3c:	cmp	x1, x0
    de40:	cset	w0, eq  // eq = none
    de44:	and	w0, w0, #0xff
    de48:	and	x0, x0, #0xff
    de4c:	cmp	x0, #0x0
    de50:	b.ne	de60 <omp_is_initial_device@@OMP_4.0+0x718>  // b.any
    de54:	ldr	x0, [sp, #40]
    de58:	str	x0, [sp, #104]
    de5c:	b	dd90 <omp_is_initial_device@@OMP_4.0+0x648>
    de60:	nop
    de64:	ldr	x0, [sp, #24]
    de68:	ldr	x1, [sp, #104]
    de6c:	str	x1, [x0]
    de70:	ldr	x0, [sp, #16]
    de74:	ldr	x1, [sp, #96]
    de78:	str	x1, [x0]
    de7c:	mov	w0, #0x1                   	// #1
    de80:	ldp	x29, x30, [sp], #112
    de84:	ret
    de88:	stp	x29, x30, [sp, #-96]!
    de8c:	mov	x29, sp
    de90:	str	x0, [sp, #24]
    de94:	str	x1, [sp, #16]
    de98:	bl	d750 <omp_is_initial_device@@OMP_4.0+0x8>
    de9c:	str	x0, [sp, #72]
    dea0:	ldr	x0, [sp, #72]
    dea4:	ldr	x0, [x0, #24]
    dea8:	str	x0, [sp, #64]
    deac:	ldr	x0, [sp, #72]
    deb0:	ldr	x0, [x0, #16]
    deb4:	str	x0, [sp, #56]
    deb8:	ldr	x0, [sp, #56]
    debc:	cmp	x0, #0x0
    dec0:	b.eq	ded4 <omp_is_initial_device@@OMP_4.0+0x78c>  // b.none
    dec4:	ldr	x0, [sp, #56]
    dec8:	ldr	w0, [x0]
    decc:	mov	w0, w0
    ded0:	b	ded8 <omp_is_initial_device@@OMP_4.0+0x790>
    ded4:	mov	x0, #0x1                   	// #1
    ded8:	str	x0, [sp, #48]
    dedc:	ldr	x0, [sp, #64]
    dee0:	ldr	x1, [x0, #72]
    dee4:	ldr	x0, [sp, #64]
    dee8:	ldr	x0, [x0, #16]
    deec:	cmp	x1, x0
    def0:	b.ne	defc <omp_is_initial_device@@OMP_4.0+0x7b4>  // b.any
    def4:	mov	w0, #0x0                   	// #0
    def8:	b	dfd0 <omp_is_initial_device@@OMP_4.0+0x888>
    defc:	ldr	x0, [sp, #64]
    df00:	ldr	x0, [x0, #72]
    df04:	str	x0, [sp, #40]
    df08:	ldr	x0, [sp, #64]
    df0c:	ldr	x1, [x0, #16]
    df10:	ldr	x0, [sp, #40]
    df14:	sub	x1, x1, x0
    df18:	ldr	x0, [sp, #64]
    df1c:	ldr	x0, [x0, #24]
    df20:	sdiv	x0, x1, x0
    df24:	str	x0, [sp, #32]
    df28:	ldr	x1, [sp, #32]
    df2c:	ldr	x0, [sp, #48]
    df30:	add	x0, x1, x0
    df34:	sub	x1, x0, #0x1
    df38:	ldr	x0, [sp, #48]
    df3c:	udiv	x0, x1, x0
    df40:	str	x0, [sp, #88]
    df44:	ldr	x0, [sp, #64]
    df48:	ldr	x0, [x0, #8]
    df4c:	mov	x1, x0
    df50:	ldr	x0, [sp, #88]
    df54:	cmp	x0, x1
    df58:	b.cs	df68 <omp_is_initial_device@@OMP_4.0+0x820>  // b.hs, b.nlast
    df5c:	ldr	x0, [sp, #64]
    df60:	ldr	x0, [x0, #8]
    df64:	str	x0, [sp, #88]
    df68:	ldr	x1, [sp, #88]
    df6c:	ldr	x0, [sp, #32]
    df70:	cmp	x1, x0
    df74:	b.hi	df9c <omp_is_initial_device@@OMP_4.0+0x854>  // b.pmore
    df78:	ldr	x0, [sp, #64]
    df7c:	ldr	x0, [x0, #24]
    df80:	mov	x1, x0
    df84:	ldr	x0, [sp, #88]
    df88:	mul	x1, x1, x0
    df8c:	ldr	x0, [sp, #40]
    df90:	add	x0, x1, x0
    df94:	str	x0, [sp, #80]
    df98:	b	dfa8 <omp_is_initial_device@@OMP_4.0+0x860>
    df9c:	ldr	x0, [sp, #64]
    dfa0:	ldr	x0, [x0, #16]
    dfa4:	str	x0, [sp, #80]
    dfa8:	ldr	x0, [sp, #64]
    dfac:	ldr	x1, [sp, #80]
    dfb0:	str	x1, [x0, #72]
    dfb4:	ldr	x0, [sp, #24]
    dfb8:	ldr	x1, [sp, #40]
    dfbc:	str	x1, [x0]
    dfc0:	ldr	x0, [sp, #16]
    dfc4:	ldr	x1, [sp, #80]
    dfc8:	str	x1, [x0]
    dfcc:	mov	w0, #0x1                   	// #1
    dfd0:	ldp	x29, x30, [sp], #96
    dfd4:	ret
    dfd8:	stp	x29, x30, [sp, #-128]!
    dfdc:	mov	x29, sp
    dfe0:	str	x0, [sp, #24]
    dfe4:	str	x1, [sp, #16]
    dfe8:	bl	d750 <omp_is_initial_device@@OMP_4.0+0x8>
    dfec:	str	x0, [sp, #96]
    dff0:	ldr	x0, [sp, #96]
    dff4:	ldr	x0, [x0, #24]
    dff8:	str	x0, [sp, #88]
    dffc:	ldr	x0, [sp, #96]
    e000:	ldr	x0, [x0, #16]
    e004:	str	x0, [sp, #80]
    e008:	ldr	x0, [sp, #80]
    e00c:	cmp	x0, #0x0
    e010:	b.eq	e024 <omp_is_initial_device@@OMP_4.0+0x8dc>  // b.none
    e014:	ldr	x0, [sp, #80]
    e018:	ldr	w0, [x0]
    e01c:	mov	w0, w0
    e020:	b	e028 <omp_is_initial_device@@OMP_4.0+0x8e0>
    e024:	mov	x0, #0x1                   	// #1
    e028:	str	x0, [sp, #72]
    e02c:	ldr	x0, [sp, #88]
    e030:	add	x0, x0, #0x48
    e034:	ldr	x0, [x0]
    e038:	str	x0, [sp, #120]
    e03c:	ldr	x0, [sp, #88]
    e040:	ldr	x0, [x0, #16]
    e044:	str	x0, [sp, #64]
    e048:	ldr	x0, [sp, #88]
    e04c:	ldr	x0, [x0, #24]
    e050:	str	x0, [sp, #56]
    e054:	ldr	x0, [sp, #88]
    e058:	ldr	x0, [x0, #8]
    e05c:	str	x0, [sp, #48]
    e060:	ldr	x1, [sp, #120]
    e064:	ldr	x0, [sp, #64]
    e068:	cmp	x1, x0
    e06c:	b.ne	e078 <omp_is_initial_device@@OMP_4.0+0x930>  // b.any
    e070:	mov	w0, #0x0                   	// #0
    e074:	b	e180 <omp_is_initial_device@@OMP_4.0+0xa38>
    e078:	ldr	x1, [sp, #64]
    e07c:	ldr	x0, [sp, #120]
    e080:	sub	x1, x1, x0
    e084:	ldr	x0, [sp, #56]
    e088:	sdiv	x0, x1, x0
    e08c:	str	x0, [sp, #40]
    e090:	ldr	x1, [sp, #40]
    e094:	ldr	x0, [sp, #72]
    e098:	add	x0, x1, x0
    e09c:	sub	x1, x0, #0x1
    e0a0:	ldr	x0, [sp, #72]
    e0a4:	udiv	x0, x1, x0
    e0a8:	str	x0, [sp, #104]
    e0ac:	ldr	x1, [sp, #104]
    e0b0:	ldr	x0, [sp, #48]
    e0b4:	cmp	x1, x0
    e0b8:	b.cs	e0c4 <omp_is_initial_device@@OMP_4.0+0x97c>  // b.hs, b.nlast
    e0bc:	ldr	x0, [sp, #48]
    e0c0:	str	x0, [sp, #104]
    e0c4:	ldr	x1, [sp, #104]
    e0c8:	ldr	x0, [sp, #40]
    e0cc:	cmp	x1, x0
    e0d0:	cset	w0, ls  // ls = plast
    e0d4:	and	w0, w0, #0xff
    e0d8:	and	x0, x0, #0xff
    e0dc:	cmp	x0, #0x0
    e0e0:	b.eq	e100 <omp_is_initial_device@@OMP_4.0+0x9b8>  // b.none
    e0e4:	ldr	x1, [sp, #56]
    e0e8:	ldr	x0, [sp, #104]
    e0ec:	mul	x1, x1, x0
    e0f0:	ldr	x0, [sp, #120]
    e0f4:	add	x0, x1, x0
    e0f8:	str	x0, [sp, #112]
    e0fc:	b	e108 <omp_is_initial_device@@OMP_4.0+0x9c0>
    e100:	ldr	x0, [sp, #64]
    e104:	str	x0, [sp, #112]
    e108:	ldr	x0, [sp, #88]
    e10c:	add	x1, x0, #0x48
    e110:	ldr	x2, [sp, #120]
    e114:	ldr	x3, [sp, #112]
    e118:	ldxr	x0, [x1]
    e11c:	cmp	x0, x2
    e120:	b.ne	e12c <omp_is_initial_device@@OMP_4.0+0x9e4>  // b.any
    e124:	stlxr	w4, x3, [x1]
    e128:	cbnz	w4, e118 <omp_is_initial_device@@OMP_4.0+0x9d0>
    e12c:	dmb	ish
    e130:	str	x0, [sp, #32]
    e134:	ldr	x1, [sp, #32]
    e138:	ldr	x0, [sp, #120]
    e13c:	cmp	x1, x0
    e140:	cset	w0, eq  // eq = none
    e144:	and	w0, w0, #0xff
    e148:	and	x0, x0, #0xff
    e14c:	cmp	x0, #0x0
    e150:	b.ne	e160 <omp_is_initial_device@@OMP_4.0+0xa18>  // b.any
    e154:	ldr	x0, [sp, #32]
    e158:	str	x0, [sp, #120]
    e15c:	b	e060 <omp_is_initial_device@@OMP_4.0+0x918>
    e160:	nop
    e164:	ldr	x0, [sp, #24]
    e168:	ldr	x1, [sp, #120]
    e16c:	str	x1, [x0]
    e170:	ldr	x0, [sp, #16]
    e174:	ldr	x1, [sp, #112]
    e178:	str	x1, [x0]
    e17c:	mov	w0, #0x1                   	// #1
    e180:	ldp	x29, x30, [sp], #128
    e184:	ret
    e188:	mrs	x1, tpidr_el0
    e18c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    e190:	ldr	x0, [x0, #4016]
    e194:	add	x0, x1, x0
    e198:	ret
    e19c:	stp	x29, x30, [sp, #-192]!
    e1a0:	mov	x29, sp
    e1a4:	str	x0, [sp, #24]
    e1a8:	str	x1, [sp, #16]
    e1ac:	bl	e188 <omp_is_initial_device@@OMP_4.0+0xa40>
    e1b0:	str	x0, [sp, #144]
    e1b4:	ldr	x0, [sp, #144]
    e1b8:	ldr	x0, [x0, #16]
    e1bc:	str	x0, [sp, #136]
    e1c0:	ldr	x0, [sp, #144]
    e1c4:	ldr	x0, [x0, #24]
    e1c8:	str	x0, [sp, #128]
    e1cc:	ldr	x0, [sp, #136]
    e1d0:	cmp	x0, #0x0
    e1d4:	b.eq	e1e8 <omp_is_initial_device@@OMP_4.0+0xaa0>  // b.none
    e1d8:	ldr	x0, [sp, #136]
    e1dc:	ldr	w0, [x0]
    e1e0:	mov	w0, w0
    e1e4:	b	e1ec <omp_is_initial_device@@OMP_4.0+0xaa4>
    e1e8:	mov	x0, #0x1                   	// #1
    e1ec:	str	x0, [sp, #120]
    e1f0:	ldr	x0, [sp, #144]
    e1f4:	ldr	x0, [x0, #72]
    e1f8:	cmn	x0, #0x1
    e1fc:	b.ne	e208 <omp_is_initial_device@@OMP_4.0+0xac0>  // b.any
    e200:	mov	w0, #0xffffffff            	// #-1
    e204:	b	e5cc <omp_is_initial_device@@OMP_4.0+0xe84>
    e208:	ldr	x0, [sp, #120]
    e20c:	cmp	x0, #0x1
    e210:	b.ne	e260 <omp_is_initial_device@@OMP_4.0+0xb18>  // b.any
    e214:	ldr	x0, [sp, #128]
    e218:	ldr	x1, [x0, #72]
    e21c:	ldr	x0, [sp, #24]
    e220:	str	x1, [x0]
    e224:	ldr	x0, [sp, #128]
    e228:	ldr	x1, [x0, #16]
    e22c:	ldr	x0, [sp, #16]
    e230:	str	x1, [x0]
    e234:	ldr	x0, [sp, #144]
    e238:	mov	x1, #0xffffffffffffffff    	// #-1
    e23c:	str	x1, [x0, #72]
    e240:	ldr	x0, [sp, #128]
    e244:	ldr	x1, [x0, #72]
    e248:	ldr	x0, [sp, #128]
    e24c:	ldr	x0, [x0, #16]
    e250:	cmp	x1, x0
    e254:	cset	w0, eq  // eq = none
    e258:	and	w0, w0, #0xff
    e25c:	b	e5cc <omp_is_initial_device@@OMP_4.0+0xe84>
    e260:	ldr	x0, [sp, #128]
    e264:	ldr	x0, [x0, #8]
    e268:	cmp	x0, #0x0
    e26c:	b.ne	e438 <omp_is_initial_device@@OMP_4.0+0xcf0>  // b.any
    e270:	ldr	x0, [sp, #144]
    e274:	ldr	x0, [x0, #72]
    e278:	cmp	x0, #0x0
    e27c:	b.eq	e288 <omp_is_initial_device@@OMP_4.0+0xb40>  // b.none
    e280:	mov	w0, #0x1                   	// #1
    e284:	b	e5cc <omp_is_initial_device@@OMP_4.0+0xe84>
    e288:	ldr	x0, [sp, #128]
    e28c:	ldr	w0, [x0, #4]
    e290:	sxtw	x0, w0
    e294:	cmp	x0, #0x0
    e298:	b.ne	e2d4 <omp_is_initial_device@@OMP_4.0+0xb8c>  // b.any
    e29c:	ldr	x0, [sp, #128]
    e2a0:	ldr	x1, [x0, #16]
    e2a4:	ldr	x0, [sp, #128]
    e2a8:	ldr	x0, [x0, #72]
    e2ac:	sub	x1, x1, x0
    e2b0:	ldr	x0, [sp, #128]
    e2b4:	ldr	x0, [x0, #24]
    e2b8:	add	x0, x1, x0
    e2bc:	sub	x1, x0, #0x1
    e2c0:	ldr	x0, [sp, #128]
    e2c4:	ldr	x0, [x0, #24]
    e2c8:	udiv	x0, x1, x0
    e2cc:	str	x0, [sp, #184]
    e2d0:	b	e30c <omp_is_initial_device@@OMP_4.0+0xbc4>
    e2d4:	ldr	x0, [sp, #128]
    e2d8:	ldr	x1, [x0, #72]
    e2dc:	ldr	x0, [sp, #128]
    e2e0:	ldr	x0, [x0, #16]
    e2e4:	sub	x1, x1, x0
    e2e8:	ldr	x0, [sp, #128]
    e2ec:	ldr	x0, [x0, #24]
    e2f0:	sub	x0, x1, x0
    e2f4:	sub	x1, x0, #0x1
    e2f8:	ldr	x0, [sp, #128]
    e2fc:	ldr	x0, [x0, #24]
    e300:	neg	x0, x0
    e304:	udiv	x0, x1, x0
    e308:	str	x0, [sp, #184]
    e30c:	ldr	x0, [sp, #144]
    e310:	ldr	w0, [x0, #40]
    e314:	mov	w0, w0
    e318:	str	x0, [sp, #72]
    e31c:	ldr	x1, [sp, #184]
    e320:	ldr	x0, [sp, #120]
    e324:	udiv	x0, x1, x0
    e328:	str	x0, [sp, #176]
    e32c:	ldr	x0, [sp, #184]
    e330:	ldr	x1, [sp, #120]
    e334:	udiv	x2, x0, x1
    e338:	ldr	x1, [sp, #120]
    e33c:	mul	x1, x2, x1
    e340:	sub	x0, x0, x1
    e344:	str	x0, [sp, #168]
    e348:	ldr	x1, [sp, #72]
    e34c:	ldr	x0, [sp, #168]
    e350:	cmp	x1, x0
    e354:	b.cs	e368 <omp_is_initial_device@@OMP_4.0+0xc20>  // b.hs, b.nlast
    e358:	str	xzr, [sp, #168]
    e35c:	ldr	x0, [sp, #176]
    e360:	add	x0, x0, #0x1
    e364:	str	x0, [sp, #176]
    e368:	ldr	x1, [sp, #176]
    e36c:	ldr	x0, [sp, #72]
    e370:	mul	x0, x1, x0
    e374:	ldr	x1, [sp, #168]
    e378:	add	x0, x1, x0
    e37c:	str	x0, [sp, #64]
    e380:	ldr	x1, [sp, #64]
    e384:	ldr	x0, [sp, #176]
    e388:	add	x0, x1, x0
    e38c:	str	x0, [sp, #56]
    e390:	ldr	x1, [sp, #64]
    e394:	ldr	x0, [sp, #56]
    e398:	cmp	x1, x0
    e39c:	b.cc	e3b4 <omp_is_initial_device@@OMP_4.0+0xc6c>  // b.lo, b.ul, b.last
    e3a0:	ldr	x0, [sp, #144]
    e3a4:	mov	x1, #0x1                   	// #1
    e3a8:	str	x1, [x0, #72]
    e3ac:	mov	w0, #0x1                   	// #1
    e3b0:	b	e5cc <omp_is_initial_device@@OMP_4.0+0xe84>
    e3b4:	ldr	x0, [sp, #128]
    e3b8:	ldr	x1, [x0, #24]
    e3bc:	ldr	x0, [sp, #64]
    e3c0:	mul	x1, x1, x0
    e3c4:	ldr	x0, [sp, #128]
    e3c8:	ldr	x0, [x0, #72]
    e3cc:	add	x0, x1, x0
    e3d0:	str	x0, [sp, #48]
    e3d4:	ldr	x0, [sp, #128]
    e3d8:	ldr	x1, [x0, #24]
    e3dc:	ldr	x0, [sp, #56]
    e3e0:	mul	x1, x1, x0
    e3e4:	ldr	x0, [sp, #128]
    e3e8:	ldr	x0, [x0, #72]
    e3ec:	add	x0, x1, x0
    e3f0:	str	x0, [sp, #40]
    e3f4:	ldr	x0, [sp, #24]
    e3f8:	ldr	x1, [sp, #48]
    e3fc:	str	x1, [x0]
    e400:	ldr	x0, [sp, #16]
    e404:	ldr	x1, [sp, #40]
    e408:	str	x1, [x0]
    e40c:	ldr	x1, [sp, #56]
    e410:	ldr	x0, [sp, #184]
    e414:	cmp	x1, x0
    e418:	b.ne	e424 <omp_is_initial_device@@OMP_4.0+0xcdc>  // b.any
    e41c:	mov	x0, #0xffffffffffffffff    	// #-1
    e420:	b	e428 <omp_is_initial_device@@OMP_4.0+0xce0>
    e424:	mov	x0, #0x1                   	// #1
    e428:	ldr	x1, [sp, #144]
    e42c:	str	x0, [x1, #72]
    e430:	mov	w0, #0x0                   	// #0
    e434:	b	e5cc <omp_is_initial_device@@OMP_4.0+0xe84>
    e438:	ldr	x0, [sp, #128]
    e43c:	ldr	w0, [x0, #4]
    e440:	sxtw	x0, w0
    e444:	cmp	x0, #0x0
    e448:	b.ne	e484 <omp_is_initial_device@@OMP_4.0+0xd3c>  // b.any
    e44c:	ldr	x0, [sp, #128]
    e450:	ldr	x1, [x0, #16]
    e454:	ldr	x0, [sp, #128]
    e458:	ldr	x0, [x0, #72]
    e45c:	sub	x1, x1, x0
    e460:	ldr	x0, [sp, #128]
    e464:	ldr	x0, [x0, #24]
    e468:	add	x0, x1, x0
    e46c:	sub	x1, x0, #0x1
    e470:	ldr	x0, [sp, #128]
    e474:	ldr	x0, [x0, #24]
    e478:	udiv	x0, x1, x0
    e47c:	str	x0, [sp, #160]
    e480:	b	e4bc <omp_is_initial_device@@OMP_4.0+0xd74>
    e484:	ldr	x0, [sp, #128]
    e488:	ldr	x1, [x0, #72]
    e48c:	ldr	x0, [sp, #128]
    e490:	ldr	x0, [x0, #16]
    e494:	sub	x1, x1, x0
    e498:	ldr	x0, [sp, #128]
    e49c:	ldr	x0, [x0, #24]
    e4a0:	sub	x0, x1, x0
    e4a4:	sub	x1, x0, #0x1
    e4a8:	ldr	x0, [sp, #128]
    e4ac:	ldr	x0, [x0, #24]
    e4b0:	neg	x0, x0
    e4b4:	udiv	x0, x1, x0
    e4b8:	str	x0, [sp, #160]
    e4bc:	ldr	x0, [sp, #144]
    e4c0:	ldr	w0, [x0, #40]
    e4c4:	mov	w0, w0
    e4c8:	str	x0, [sp, #112]
    e4cc:	ldr	x0, [sp, #128]
    e4d0:	ldr	x0, [x0, #8]
    e4d4:	str	x0, [sp, #104]
    e4d8:	ldr	x0, [sp, #144]
    e4dc:	ldr	x1, [x0, #72]
    e4e0:	ldr	x0, [sp, #120]
    e4e4:	mul	x1, x1, x0
    e4e8:	ldr	x0, [sp, #112]
    e4ec:	add	x0, x1, x0
    e4f0:	ldr	x1, [sp, #104]
    e4f4:	mul	x0, x1, x0
    e4f8:	str	x0, [sp, #96]
    e4fc:	ldr	x1, [sp, #96]
    e500:	ldr	x0, [sp, #104]
    e504:	add	x0, x1, x0
    e508:	str	x0, [sp, #152]
    e50c:	ldr	x1, [sp, #96]
    e510:	ldr	x0, [sp, #160]
    e514:	cmp	x1, x0
    e518:	b.cc	e524 <omp_is_initial_device@@OMP_4.0+0xddc>  // b.lo, b.ul, b.last
    e51c:	mov	w0, #0x1                   	// #1
    e520:	b	e5cc <omp_is_initial_device@@OMP_4.0+0xe84>
    e524:	ldr	x1, [sp, #152]
    e528:	ldr	x0, [sp, #160]
    e52c:	cmp	x1, x0
    e530:	b.ls	e53c <omp_is_initial_device@@OMP_4.0+0xdf4>  // b.plast
    e534:	ldr	x0, [sp, #160]
    e538:	str	x0, [sp, #152]
    e53c:	ldr	x0, [sp, #128]
    e540:	ldr	x1, [x0, #24]
    e544:	ldr	x0, [sp, #96]
    e548:	mul	x1, x1, x0
    e54c:	ldr	x0, [sp, #128]
    e550:	ldr	x0, [x0, #72]
    e554:	add	x0, x1, x0
    e558:	str	x0, [sp, #88]
    e55c:	ldr	x0, [sp, #128]
    e560:	ldr	x1, [x0, #24]
    e564:	ldr	x0, [sp, #152]
    e568:	mul	x1, x1, x0
    e56c:	ldr	x0, [sp, #128]
    e570:	ldr	x0, [x0, #72]
    e574:	add	x0, x1, x0
    e578:	str	x0, [sp, #80]
    e57c:	ldr	x0, [sp, #24]
    e580:	ldr	x1, [sp, #88]
    e584:	str	x1, [x0]
    e588:	ldr	x0, [sp, #16]
    e58c:	ldr	x1, [sp, #80]
    e590:	str	x1, [x0]
    e594:	ldr	x1, [sp, #152]
    e598:	ldr	x0, [sp, #160]
    e59c:	cmp	x1, x0
    e5a0:	b.ne	e5b4 <omp_is_initial_device@@OMP_4.0+0xe6c>  // b.any
    e5a4:	ldr	x0, [sp, #144]
    e5a8:	mov	x1, #0xffffffffffffffff    	// #-1
    e5ac:	str	x1, [x0, #72]
    e5b0:	b	e5c8 <omp_is_initial_device@@OMP_4.0+0xe80>
    e5b4:	ldr	x0, [sp, #144]
    e5b8:	ldr	x0, [x0, #72]
    e5bc:	add	x1, x0, #0x1
    e5c0:	ldr	x0, [sp, #144]
    e5c4:	str	x1, [x0, #72]
    e5c8:	mov	w0, #0x0                   	// #0
    e5cc:	ldp	x29, x30, [sp], #192
    e5d0:	ret
    e5d4:	stp	x29, x30, [sp, #-80]!
    e5d8:	mov	x29, sp
    e5dc:	str	x0, [sp, #24]
    e5e0:	str	x1, [sp, #16]
    e5e4:	bl	e188 <omp_is_initial_device@@OMP_4.0+0xa40>
    e5e8:	str	x0, [sp, #64]
    e5ec:	ldr	x0, [sp, #64]
    e5f0:	ldr	x0, [x0, #24]
    e5f4:	str	x0, [sp, #56]
    e5f8:	ldr	x0, [sp, #56]
    e5fc:	ldr	x0, [x0, #72]
    e600:	str	x0, [sp, #48]
    e604:	ldr	x0, [sp, #56]
    e608:	ldr	x0, [x0, #16]
    e60c:	ldr	x1, [sp, #48]
    e610:	cmp	x1, x0
    e614:	b.ne	e620 <omp_is_initial_device@@OMP_4.0+0xed8>  // b.any
    e618:	mov	w0, #0x0                   	// #0
    e61c:	b	e6c4 <omp_is_initial_device@@OMP_4.0+0xf7c>
    e620:	ldr	x0, [sp, #56]
    e624:	ldr	x0, [x0, #8]
    e628:	str	x0, [sp, #72]
    e62c:	ldr	x0, [sp, #56]
    e630:	ldr	x1, [x0, #16]
    e634:	ldr	x0, [sp, #48]
    e638:	sub	x0, x1, x0
    e63c:	str	x0, [sp, #40]
    e640:	ldr	x0, [sp, #56]
    e644:	ldr	w0, [x0, #4]
    e648:	mov	w0, w0
    e64c:	and	x0, x0, #0x2
    e650:	cmp	x0, #0x0
    e654:	b.eq	e674 <omp_is_initial_device@@OMP_4.0+0xf2c>  // b.none
    e658:	ldr	x1, [sp, #72]
    e65c:	ldr	x0, [sp, #40]
    e660:	cmp	x1, x0
    e664:	b.cs	e68c <omp_is_initial_device@@OMP_4.0+0xf44>  // b.hs, b.nlast
    e668:	ldr	x0, [sp, #40]
    e66c:	str	x0, [sp, #72]
    e670:	b	e68c <omp_is_initial_device@@OMP_4.0+0xf44>
    e674:	ldr	x1, [sp, #72]
    e678:	ldr	x0, [sp, #40]
    e67c:	cmp	x1, x0
    e680:	b.ls	e68c <omp_is_initial_device@@OMP_4.0+0xf44>  // b.plast
    e684:	ldr	x0, [sp, #40]
    e688:	str	x0, [sp, #72]
    e68c:	ldr	x1, [sp, #48]
    e690:	ldr	x0, [sp, #72]
    e694:	add	x0, x1, x0
    e698:	str	x0, [sp, #32]
    e69c:	ldr	x0, [sp, #56]
    e6a0:	ldr	x1, [sp, #32]
    e6a4:	str	x1, [x0, #72]
    e6a8:	ldr	x0, [sp, #24]
    e6ac:	ldr	x1, [sp, #48]
    e6b0:	str	x1, [x0]
    e6b4:	ldr	x0, [sp, #16]
    e6b8:	ldr	x1, [sp, #32]
    e6bc:	str	x1, [x0]
    e6c0:	mov	w0, #0x1                   	// #1
    e6c4:	ldp	x29, x30, [sp], #80
    e6c8:	ret
    e6cc:	stp	x29, x30, [sp, #-112]!
    e6d0:	mov	x29, sp
    e6d4:	str	x0, [sp, #24]
    e6d8:	str	x1, [sp, #16]
    e6dc:	bl	e188 <omp_is_initial_device@@OMP_4.0+0xa40>
    e6e0:	str	x0, [sp, #80]
    e6e4:	ldr	x0, [sp, #80]
    e6e8:	ldr	x0, [x0, #24]
    e6ec:	str	x0, [sp, #72]
    e6f0:	ldr	x0, [sp, #72]
    e6f4:	ldr	x0, [x0, #16]
    e6f8:	str	x0, [sp, #64]
    e6fc:	ldr	x0, [sp, #72]
    e700:	ldr	x0, [x0, #8]
    e704:	str	x0, [sp, #88]
    e708:	ldr	x0, [sp, #72]
    e70c:	ldr	w0, [x0, #4]
    e710:	mov	w0, w0
    e714:	and	x0, x0, #0x1
    e718:	cmp	x0, #0x0
    e71c:	b.eq	e81c <omp_is_initial_device@@OMP_4.0+0x10d4>  // b.none
    e720:	ldr	x0, [sp, #72]
    e724:	add	x0, x0, #0x48
    e728:	ldr	x2, [sp, #88]
    e72c:	ldxr	x1, [x0]
    e730:	add	x3, x1, x2
    e734:	stlxr	w4, x3, [x0]
    e738:	cbnz	w4, e72c <omp_is_initial_device@@OMP_4.0+0xfe4>
    e73c:	dmb	ish
    e740:	str	x1, [sp, #40]
    e744:	ldr	x0, [sp, #72]
    e748:	ldr	w0, [x0, #4]
    e74c:	mov	w0, w0
    e750:	and	x0, x0, #0x2
    e754:	cmp	x0, #0x0
    e758:	b.ne	e7bc <omp_is_initial_device@@OMP_4.0+0x1074>  // b.any
    e75c:	ldr	x1, [sp, #40]
    e760:	ldr	x0, [sp, #64]
    e764:	cmp	x1, x0
    e768:	b.cc	e774 <omp_is_initial_device@@OMP_4.0+0x102c>  // b.lo, b.ul, b.last
    e76c:	mov	w0, #0x0                   	// #0
    e770:	b	e928 <omp_is_initial_device@@OMP_4.0+0x11e0>
    e774:	ldr	x1, [sp, #40]
    e778:	ldr	x0, [sp, #88]
    e77c:	add	x0, x1, x0
    e780:	str	x0, [sp, #96]
    e784:	ldr	x1, [sp, #96]
    e788:	ldr	x0, [sp, #64]
    e78c:	cmp	x1, x0
    e790:	b.ls	e79c <omp_is_initial_device@@OMP_4.0+0x1054>  // b.plast
    e794:	ldr	x0, [sp, #64]
    e798:	str	x0, [sp, #96]
    e79c:	ldr	x0, [sp, #24]
    e7a0:	ldr	x1, [sp, #40]
    e7a4:	str	x1, [x0]
    e7a8:	ldr	x0, [sp, #16]
    e7ac:	ldr	x1, [sp, #96]
    e7b0:	str	x1, [x0]
    e7b4:	mov	w0, #0x1                   	// #1
    e7b8:	b	e928 <omp_is_initial_device@@OMP_4.0+0x11e0>
    e7bc:	ldr	x1, [sp, #40]
    e7c0:	ldr	x0, [sp, #64]
    e7c4:	cmp	x1, x0
    e7c8:	b.hi	e7d4 <omp_is_initial_device@@OMP_4.0+0x108c>  // b.pmore
    e7cc:	mov	w0, #0x0                   	// #0
    e7d0:	b	e928 <omp_is_initial_device@@OMP_4.0+0x11e0>
    e7d4:	ldr	x1, [sp, #40]
    e7d8:	ldr	x0, [sp, #88]
    e7dc:	add	x0, x1, x0
    e7e0:	str	x0, [sp, #96]
    e7e4:	ldr	x1, [sp, #96]
    e7e8:	ldr	x0, [sp, #64]
    e7ec:	cmp	x1, x0
    e7f0:	b.cs	e7fc <omp_is_initial_device@@OMP_4.0+0x10b4>  // b.hs, b.nlast
    e7f4:	ldr	x0, [sp, #64]
    e7f8:	str	x0, [sp, #96]
    e7fc:	ldr	x0, [sp, #24]
    e800:	ldr	x1, [sp, #40]
    e804:	str	x1, [x0]
    e808:	ldr	x0, [sp, #16]
    e80c:	ldr	x1, [sp, #96]
    e810:	str	x1, [x0]
    e814:	mov	w0, #0x1                   	// #1
    e818:	b	e928 <omp_is_initial_device@@OMP_4.0+0x11e0>
    e81c:	ldr	x0, [sp, #72]
    e820:	add	x0, x0, #0x48
    e824:	ldr	x0, [x0]
    e828:	str	x0, [sp, #104]
    e82c:	ldr	x1, [sp, #64]
    e830:	ldr	x0, [sp, #104]
    e834:	sub	x0, x1, x0
    e838:	str	x0, [sp, #56]
    e83c:	ldr	x1, [sp, #104]
    e840:	ldr	x0, [sp, #64]
    e844:	cmp	x1, x0
    e848:	b.ne	e854 <omp_is_initial_device@@OMP_4.0+0x110c>  // b.any
    e84c:	mov	w0, #0x0                   	// #0
    e850:	b	e928 <omp_is_initial_device@@OMP_4.0+0x11e0>
    e854:	ldr	x0, [sp, #72]
    e858:	ldr	w0, [x0, #4]
    e85c:	mov	w0, w0
    e860:	and	x0, x0, #0x2
    e864:	cmp	x0, #0x0
    e868:	b.eq	e888 <omp_is_initial_device@@OMP_4.0+0x1140>  // b.none
    e86c:	ldr	x1, [sp, #88]
    e870:	ldr	x0, [sp, #56]
    e874:	cmp	x1, x0
    e878:	b.cs	e8a0 <omp_is_initial_device@@OMP_4.0+0x1158>  // b.hs, b.nlast
    e87c:	ldr	x0, [sp, #56]
    e880:	str	x0, [sp, #88]
    e884:	b	e8a0 <omp_is_initial_device@@OMP_4.0+0x1158>
    e888:	ldr	x1, [sp, #88]
    e88c:	ldr	x0, [sp, #56]
    e890:	cmp	x1, x0
    e894:	b.ls	e8a0 <omp_is_initial_device@@OMP_4.0+0x1158>  // b.plast
    e898:	ldr	x0, [sp, #56]
    e89c:	str	x0, [sp, #88]
    e8a0:	ldr	x1, [sp, #104]
    e8a4:	ldr	x0, [sp, #88]
    e8a8:	add	x0, x1, x0
    e8ac:	str	x0, [sp, #96]
    e8b0:	ldr	x0, [sp, #72]
    e8b4:	add	x1, x0, #0x48
    e8b8:	ldr	x2, [sp, #104]
    e8bc:	ldr	x3, [sp, #96]
    e8c0:	ldxr	x0, [x1]
    e8c4:	cmp	x0, x2
    e8c8:	b.ne	e8d4 <omp_is_initial_device@@OMP_4.0+0x118c>  // b.any
    e8cc:	stlxr	w4, x3, [x1]
    e8d0:	cbnz	w4, e8c0 <omp_is_initial_device@@OMP_4.0+0x1178>
    e8d4:	dmb	ish
    e8d8:	str	x0, [sp, #48]
    e8dc:	ldr	x1, [sp, #48]
    e8e0:	ldr	x0, [sp, #104]
    e8e4:	cmp	x1, x0
    e8e8:	cset	w0, eq  // eq = none
    e8ec:	and	w0, w0, #0xff
    e8f0:	and	x0, x0, #0xff
    e8f4:	cmp	x0, #0x0
    e8f8:	b.ne	e908 <omp_is_initial_device@@OMP_4.0+0x11c0>  // b.any
    e8fc:	ldr	x0, [sp, #48]
    e900:	str	x0, [sp, #104]
    e904:	b	e82c <omp_is_initial_device@@OMP_4.0+0x10e4>
    e908:	nop
    e90c:	ldr	x0, [sp, #24]
    e910:	ldr	x1, [sp, #104]
    e914:	str	x1, [x0]
    e918:	ldr	x0, [sp, #16]
    e91c:	ldr	x1, [sp, #96]
    e920:	str	x1, [x0]
    e924:	mov	w0, #0x1                   	// #1
    e928:	ldp	x29, x30, [sp], #112
    e92c:	ret
    e930:	stp	x29, x30, [sp, #-96]!
    e934:	mov	x29, sp
    e938:	str	x0, [sp, #24]
    e93c:	str	x1, [sp, #16]
    e940:	bl	e188 <omp_is_initial_device@@OMP_4.0+0xa40>
    e944:	str	x0, [sp, #64]
    e948:	ldr	x0, [sp, #64]
    e94c:	ldr	x0, [x0, #24]
    e950:	str	x0, [sp, #56]
    e954:	ldr	x0, [sp, #64]
    e958:	ldr	x0, [x0, #16]
    e95c:	str	x0, [sp, #48]
    e960:	ldr	x0, [sp, #48]
    e964:	cmp	x0, #0x0
    e968:	b.eq	e97c <omp_is_initial_device@@OMP_4.0+0x1234>  // b.none
    e96c:	ldr	x0, [sp, #48]
    e970:	ldr	w0, [x0]
    e974:	mov	w0, w0
    e978:	b	e980 <omp_is_initial_device@@OMP_4.0+0x1238>
    e97c:	mov	x0, #0x1                   	// #1
    e980:	str	x0, [sp, #40]
    e984:	ldr	x0, [sp, #56]
    e988:	ldr	x1, [x0, #72]
    e98c:	ldr	x0, [sp, #56]
    e990:	ldr	x0, [x0, #16]
    e994:	cmp	x1, x0
    e998:	b.ne	e9a4 <omp_is_initial_device@@OMP_4.0+0x125c>  // b.any
    e99c:	mov	w0, #0x0                   	// #0
    e9a0:	b	eaac <omp_is_initial_device@@OMP_4.0+0x1364>
    e9a4:	ldr	x0, [sp, #56]
    e9a8:	ldr	x0, [x0, #72]
    e9ac:	str	x0, [sp, #32]
    e9b0:	ldr	x0, [sp, #56]
    e9b4:	ldr	w0, [x0, #4]
    e9b8:	sxtw	x0, w0
    e9bc:	cmp	x0, #0x0
    e9c0:	b.ne	e9e8 <omp_is_initial_device@@OMP_4.0+0x12a0>  // b.any
    e9c4:	ldr	x0, [sp, #56]
    e9c8:	ldr	x1, [x0, #16]
    e9cc:	ldr	x0, [sp, #32]
    e9d0:	sub	x1, x1, x0
    e9d4:	ldr	x0, [sp, #56]
    e9d8:	ldr	x0, [x0, #24]
    e9dc:	udiv	x0, x1, x0
    e9e0:	str	x0, [sp, #88]
    e9e4:	b	ea0c <omp_is_initial_device@@OMP_4.0+0x12c4>
    e9e8:	ldr	x0, [sp, #56]
    e9ec:	ldr	x0, [x0, #16]
    e9f0:	ldr	x1, [sp, #32]
    e9f4:	sub	x1, x1, x0
    e9f8:	ldr	x0, [sp, #56]
    e9fc:	ldr	x0, [x0, #24]
    ea00:	neg	x0, x0
    ea04:	udiv	x0, x1, x0
    ea08:	str	x0, [sp, #88]
    ea0c:	ldr	x1, [sp, #88]
    ea10:	ldr	x0, [sp, #40]
    ea14:	add	x0, x1, x0
    ea18:	sub	x1, x0, #0x1
    ea1c:	ldr	x0, [sp, #40]
    ea20:	udiv	x0, x1, x0
    ea24:	str	x0, [sp, #80]
    ea28:	ldr	x0, [sp, #56]
    ea2c:	ldr	x0, [x0, #8]
    ea30:	ldr	x1, [sp, #80]
    ea34:	cmp	x1, x0
    ea38:	b.cs	ea48 <omp_is_initial_device@@OMP_4.0+0x1300>  // b.hs, b.nlast
    ea3c:	ldr	x0, [sp, #56]
    ea40:	ldr	x0, [x0, #8]
    ea44:	str	x0, [sp, #80]
    ea48:	ldr	x1, [sp, #80]
    ea4c:	ldr	x0, [sp, #88]
    ea50:	cmp	x1, x0
    ea54:	b.hi	ea78 <omp_is_initial_device@@OMP_4.0+0x1330>  // b.pmore
    ea58:	ldr	x0, [sp, #56]
    ea5c:	ldr	x1, [x0, #24]
    ea60:	ldr	x0, [sp, #80]
    ea64:	mul	x0, x1, x0
    ea68:	ldr	x1, [sp, #32]
    ea6c:	add	x0, x1, x0
    ea70:	str	x0, [sp, #72]
    ea74:	b	ea84 <omp_is_initial_device@@OMP_4.0+0x133c>
    ea78:	ldr	x0, [sp, #56]
    ea7c:	ldr	x0, [x0, #16]
    ea80:	str	x0, [sp, #72]
    ea84:	ldr	x0, [sp, #56]
    ea88:	ldr	x1, [sp, #72]
    ea8c:	str	x1, [x0, #72]
    ea90:	ldr	x0, [sp, #24]
    ea94:	ldr	x1, [sp, #32]
    ea98:	str	x1, [x0]
    ea9c:	ldr	x0, [sp, #16]
    eaa0:	ldr	x1, [sp, #72]
    eaa4:	str	x1, [x0]
    eaa8:	mov	w0, #0x1                   	// #1
    eaac:	ldp	x29, x30, [sp], #96
    eab0:	ret
    eab4:	stp	x29, x30, [sp, #-128]!
    eab8:	mov	x29, sp
    eabc:	str	x0, [sp, #24]
    eac0:	str	x1, [sp, #16]
    eac4:	bl	e188 <omp_is_initial_device@@OMP_4.0+0xa40>
    eac8:	str	x0, [sp, #88]
    eacc:	ldr	x0, [sp, #88]
    ead0:	ldr	x0, [x0, #24]
    ead4:	str	x0, [sp, #80]
    ead8:	ldr	x0, [sp, #88]
    eadc:	ldr	x0, [x0, #16]
    eae0:	str	x0, [sp, #72]
    eae4:	ldr	x0, [sp, #72]
    eae8:	cmp	x0, #0x0
    eaec:	b.eq	eb00 <omp_is_initial_device@@OMP_4.0+0x13b8>  // b.none
    eaf0:	ldr	x0, [sp, #72]
    eaf4:	ldr	w0, [x0]
    eaf8:	mov	w0, w0
    eafc:	b	eb04 <omp_is_initial_device@@OMP_4.0+0x13bc>
    eb00:	mov	x0, #0x1                   	// #1
    eb04:	str	x0, [sp, #64]
    eb08:	ldr	x0, [sp, #80]
    eb0c:	add	x0, x0, #0x48
    eb10:	ldr	x0, [x0]
    eb14:	str	x0, [sp, #120]
    eb18:	ldr	x0, [sp, #80]
    eb1c:	ldr	x0, [x0, #16]
    eb20:	str	x0, [sp, #56]
    eb24:	ldr	x0, [sp, #80]
    eb28:	ldr	x0, [x0, #24]
    eb2c:	str	x0, [sp, #48]
    eb30:	ldr	x0, [sp, #80]
    eb34:	ldr	x0, [x0, #8]
    eb38:	str	x0, [sp, #40]
    eb3c:	ldr	x1, [sp, #120]
    eb40:	ldr	x0, [sp, #56]
    eb44:	cmp	x1, x0
    eb48:	b.ne	eb54 <omp_is_initial_device@@OMP_4.0+0x140c>  // b.any
    eb4c:	mov	w0, #0x0                   	// #0
    eb50:	b	ec90 <omp_is_initial_device@@OMP_4.0+0x1548>
    eb54:	ldr	x0, [sp, #80]
    eb58:	ldr	w0, [x0, #4]
    eb5c:	sxtw	x0, w0
    eb60:	cmp	x0, #0x0
    eb64:	b.ne	eb84 <omp_is_initial_device@@OMP_4.0+0x143c>  // b.any
    eb68:	ldr	x1, [sp, #56]
    eb6c:	ldr	x0, [sp, #120]
    eb70:	sub	x1, x1, x0
    eb74:	ldr	x0, [sp, #48]
    eb78:	udiv	x0, x1, x0
    eb7c:	str	x0, [sp, #104]
    eb80:	b	eba0 <omp_is_initial_device@@OMP_4.0+0x1458>
    eb84:	ldr	x1, [sp, #120]
    eb88:	ldr	x0, [sp, #56]
    eb8c:	sub	x1, x1, x0
    eb90:	ldr	x0, [sp, #48]
    eb94:	neg	x0, x0
    eb98:	udiv	x0, x1, x0
    eb9c:	str	x0, [sp, #104]
    eba0:	ldr	x1, [sp, #104]
    eba4:	ldr	x0, [sp, #64]
    eba8:	add	x0, x1, x0
    ebac:	sub	x1, x0, #0x1
    ebb0:	ldr	x0, [sp, #64]
    ebb4:	udiv	x0, x1, x0
    ebb8:	str	x0, [sp, #96]
    ebbc:	ldr	x1, [sp, #96]
    ebc0:	ldr	x0, [sp, #40]
    ebc4:	cmp	x1, x0
    ebc8:	b.cs	ebd4 <omp_is_initial_device@@OMP_4.0+0x148c>  // b.hs, b.nlast
    ebcc:	ldr	x0, [sp, #40]
    ebd0:	str	x0, [sp, #96]
    ebd4:	ldr	x1, [sp, #96]
    ebd8:	ldr	x0, [sp, #104]
    ebdc:	cmp	x1, x0
    ebe0:	cset	w0, ls  // ls = plast
    ebe4:	and	w0, w0, #0xff
    ebe8:	and	x0, x0, #0xff
    ebec:	cmp	x0, #0x0
    ebf0:	b.eq	ec10 <omp_is_initial_device@@OMP_4.0+0x14c8>  // b.none
    ebf4:	ldr	x1, [sp, #96]
    ebf8:	ldr	x0, [sp, #48]
    ebfc:	mul	x0, x1, x0
    ec00:	ldr	x1, [sp, #120]
    ec04:	add	x0, x1, x0
    ec08:	str	x0, [sp, #112]
    ec0c:	b	ec18 <omp_is_initial_device@@OMP_4.0+0x14d0>
    ec10:	ldr	x0, [sp, #56]
    ec14:	str	x0, [sp, #112]
    ec18:	ldr	x0, [sp, #80]
    ec1c:	add	x1, x0, #0x48
    ec20:	ldr	x2, [sp, #120]
    ec24:	ldr	x3, [sp, #112]
    ec28:	ldxr	x0, [x1]
    ec2c:	cmp	x0, x2
    ec30:	b.ne	ec3c <omp_is_initial_device@@OMP_4.0+0x14f4>  // b.any
    ec34:	stlxr	w4, x3, [x1]
    ec38:	cbnz	w4, ec28 <omp_is_initial_device@@OMP_4.0+0x14e0>
    ec3c:	dmb	ish
    ec40:	str	x0, [sp, #32]
    ec44:	ldr	x1, [sp, #32]
    ec48:	ldr	x0, [sp, #120]
    ec4c:	cmp	x1, x0
    ec50:	cset	w0, eq  // eq = none
    ec54:	and	w0, w0, #0xff
    ec58:	and	x0, x0, #0xff
    ec5c:	cmp	x0, #0x0
    ec60:	b.ne	ec70 <omp_is_initial_device@@OMP_4.0+0x1528>  // b.any
    ec64:	ldr	x0, [sp, #32]
    ec68:	str	x0, [sp, #120]
    ec6c:	b	eb3c <omp_is_initial_device@@OMP_4.0+0x13f4>
    ec70:	nop
    ec74:	ldr	x0, [sp, #24]
    ec78:	ldr	x1, [sp, #120]
    ec7c:	str	x1, [x0]
    ec80:	ldr	x0, [sp, #16]
    ec84:	ldr	x1, [sp, #112]
    ec88:	str	x1, [x0]
    ec8c:	mov	w0, #0x1                   	// #1
    ec90:	ldp	x29, x30, [sp], #128
    ec94:	ret
    ec98:	stp	x29, x30, [sp, #-48]!
    ec9c:	mov	x29, sp
    eca0:	str	x0, [sp, #24]
    eca4:	str	wzr, [sp, #44]
    eca8:	ldr	x1, [sp, #24]
    ecac:	add	x0, sp, #0x2c
    ecb0:	ldr	w3, [x0]
    ecb4:	mov	w4, #0x1                   	// #1
    ecb8:	ldaxr	w2, [x1]
    ecbc:	cmp	w2, w3
    ecc0:	b.ne	eccc <omp_is_initial_device@@OMP_4.0+0x1584>  // b.any
    ecc4:	stxr	w5, w4, [x1]
    ecc8:	cbnz	w5, ecb8 <omp_is_initial_device@@OMP_4.0+0x1570>
    eccc:	cset	w1, eq  // eq = none
    ecd0:	cmp	w1, #0x0
    ecd4:	b.ne	ecdc <omp_is_initial_device@@OMP_4.0+0x1594>  // b.any
    ecd8:	str	w2, [x0]
    ecdc:	mov	w0, w1
    ece0:	eor	w0, w0, #0x1
    ece4:	and	w0, w0, #0xff
    ece8:	cmp	w0, #0x0
    ecec:	b.eq	ed00 <omp_is_initial_device@@OMP_4.0+0x15b8>  // b.none
    ecf0:	ldr	w0, [sp, #44]
    ecf4:	mov	w1, w0
    ecf8:	ldr	x0, [sp, #24]
    ecfc:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
    ed00:	nop
    ed04:	ldp	x29, x30, [sp], #48
    ed08:	ret
    ed0c:	stp	x29, x30, [sp, #-48]!
    ed10:	mov	x29, sp
    ed14:	str	x0, [sp, #24]
    ed18:	ldr	x1, [sp, #24]
    ed1c:	ldxr	w0, [x1]
    ed20:	stlxr	w2, wzr, [x1]
    ed24:	cbnz	w2, ed1c <omp_is_initial_device@@OMP_4.0+0x15d4>
    ed28:	str	w0, [sp, #44]
    ed2c:	ldr	w0, [sp, #44]
    ed30:	lsr	w0, w0, #31
    ed34:	and	w0, w0, #0xff
    ed38:	and	x0, x0, #0xff
    ed3c:	cmp	x0, #0x0
    ed40:	b.eq	ed4c <omp_is_initial_device@@OMP_4.0+0x1604>  // b.none
    ed44:	ldr	x0, [sp, #24]
    ed48:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
    ed4c:	nop
    ed50:	ldp	x29, x30, [sp], #48
    ed54:	ret
    ed58:	stp	x29, x30, [sp, #-48]!
    ed5c:	mov	x29, sp
    ed60:	str	x0, [sp, #24]
    ed64:	str	x1, [sp, #16]
    ed68:	ldr	x2, [sp, #16]
    ed6c:	ldr	x1, [sp, #24]
    ed70:	ldxr	x0, [x1]
    ed74:	stlxr	w3, x2, [x1]
    ed78:	cbnz	w3, ed70 <omp_is_initial_device@@OMP_4.0+0x1628>
    ed7c:	str	x0, [sp, #40]
    ed80:	ldr	x0, [sp, #40]
    ed84:	cmp	x0, #0x1
    ed88:	b.eq	ed94 <omp_is_initial_device@@OMP_4.0+0x164c>  // b.none
    ed8c:	ldr	x0, [sp, #24]
    ed90:	bl	22790 <omp_get_num_procs@@OMP_1.0+0x1134>
    ed94:	nop
    ed98:	ldp	x29, x30, [sp], #48
    ed9c:	ret
    eda0:	mrs	x1, tpidr_el0
    eda4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
    eda8:	ldr	x0, [x0, #4016]
    edac:	add	x0, x1, x0
    edb0:	ret
    edb4:	stp	x29, x30, [sp, #-48]!
    edb8:	mov	x29, sp
    edbc:	strb	w0, [sp, #31]
    edc0:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    edc4:	ldr	x0, [x0, #80]
    edc8:	str	x0, [sp, #40]
    edcc:	ldr	x0, [sp, #40]
    edd0:	cmp	x0, #0x0
    edd4:	b.eq	ede4 <omp_is_initial_device@@OMP_4.0+0x169c>  // b.none
    edd8:	ldr	x0, [sp, #40]
    eddc:	add	x0, x0, #0x90
    ede0:	b	ee00 <omp_is_initial_device@@OMP_4.0+0x16b8>
    ede4:	ldrb	w0, [sp, #31]
    ede8:	cmp	w0, #0x0
    edec:	b.eq	edf8 <omp_is_initial_device@@OMP_4.0+0x16b0>  // b.none
    edf0:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
    edf4:	b	ee00 <omp_is_initial_device@@OMP_4.0+0x16b8>
    edf8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
    edfc:	add	x0, x0, #0x2d8
    ee00:	ldp	x29, x30, [sp], #48
    ee04:	ret
    ee08:	stp	x29, x30, [sp, #-32]!
    ee0c:	mov	x29, sp
    ee10:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    ee14:	str	x0, [sp, #24]
    ee18:	ldr	x0, [sp, #24]
    ee1c:	ldr	x0, [x0, #32]
    ee20:	cmp	x0, #0x0
    ee24:	cset	w0, ne  // ne = any
    ee28:	and	w0, w0, #0xff
    ee2c:	and	x0, x0, #0xff
    ee30:	cmp	x0, #0x0
    ee34:	b.eq	ee58 <omp_is_initial_device@@OMP_4.0+0x1710>  // b.none
    ee38:	ldr	x0, [sp, #24]
    ee3c:	ldr	x0, [x0, #32]
    ee40:	add	x2, x0, #0x50
    ee44:	ldr	x0, [sp, #24]
    ee48:	ldr	x0, [x0, #24]
    ee4c:	mov	x1, x0
    ee50:	mov	x0, x2
    ee54:	bl	ed58 <omp_is_initial_device@@OMP_4.0+0x1610>
    ee58:	nop
    ee5c:	ldp	x29, x30, [sp], #32
    ee60:	ret
    ee64:	stp	x29, x30, [sp, #-96]!
    ee68:	mov	x29, sp
    ee6c:	str	x0, [sp, #56]
    ee70:	str	x1, [sp, #48]
    ee74:	str	x2, [sp, #40]
    ee78:	str	x3, [sp, #32]
    ee7c:	str	w4, [sp, #28]
    ee80:	str	x5, [sp, #16]
    ee84:	ldr	x0, [sp, #56]
    ee88:	ldr	w1, [sp, #28]
    ee8c:	str	w1, [x0]
    ee90:	ldr	x0, [sp, #56]
    ee94:	ldr	x1, [sp, #16]
    ee98:	str	x1, [x0, #8]
    ee9c:	ldr	x0, [sp, #32]
    eea0:	cmp	x0, #0x0
    eea4:	b.le	eeb8 <omp_is_initial_device@@OMP_4.0+0x1770>
    eea8:	ldr	x1, [sp, #48]
    eeac:	ldr	x0, [sp, #40]
    eeb0:	cmp	x1, x0
    eeb4:	b.gt	eed4 <omp_is_initial_device@@OMP_4.0+0x178c>
    eeb8:	ldr	x0, [sp, #32]
    eebc:	cmp	x0, #0x0
    eec0:	b.ge	eedc <omp_is_initial_device@@OMP_4.0+0x1794>  // b.tcont
    eec4:	ldr	x1, [sp, #48]
    eec8:	ldr	x0, [sp, #40]
    eecc:	cmp	x1, x0
    eed0:	b.ge	eedc <omp_is_initial_device@@OMP_4.0+0x1794>  // b.tcont
    eed4:	ldr	x0, [sp, #48]
    eed8:	b	eee0 <omp_is_initial_device@@OMP_4.0+0x1798>
    eedc:	ldr	x0, [sp, #40]
    eee0:	ldr	x1, [sp, #56]
    eee4:	str	x0, [x1, #16]
    eee8:	ldr	x0, [sp, #56]
    eeec:	ldr	x1, [sp, #32]
    eef0:	str	x1, [x0, #24]
    eef4:	ldr	x0, [sp, #56]
    eef8:	ldr	x1, [sp, #48]
    eefc:	str	x1, [x0, #72]
    ef00:	ldr	w0, [sp, #28]
    ef04:	cmp	w0, #0x2
    ef08:	b.ne	f078 <omp_is_initial_device@@OMP_4.0+0x1930>  // b.any
    ef0c:	ldr	x0, [sp, #56]
    ef10:	ldr	x1, [x0, #8]
    ef14:	ldr	x0, [sp, #32]
    ef18:	mul	x1, x1, x0
    ef1c:	ldr	x0, [sp, #56]
    ef20:	str	x1, [x0, #8]
    ef24:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    ef28:	str	x0, [sp, #88]
    ef2c:	ldr	x0, [sp, #88]
    ef30:	ldr	x0, [x0, #16]
    ef34:	str	x0, [sp, #80]
    ef38:	ldr	x0, [sp, #80]
    ef3c:	cmp	x0, #0x0
    ef40:	b.eq	ef54 <omp_is_initial_device@@OMP_4.0+0x180c>  // b.none
    ef44:	ldr	x0, [sp, #80]
    ef48:	ldr	w0, [x0]
    ef4c:	mov	w0, w0
    ef50:	b	ef58 <omp_is_initial_device@@OMP_4.0+0x1810>
    ef54:	mov	x0, #0x1                   	// #1
    ef58:	str	x0, [sp, #72]
    ef5c:	ldr	x0, [sp, #32]
    ef60:	cmp	x0, #0x0
    ef64:	cset	w0, gt
    ef68:	and	w0, w0, #0xff
    ef6c:	and	x0, x0, #0xff
    ef70:	cmp	x0, #0x0
    ef74:	b.eq	eff4 <omp_is_initial_device@@OMP_4.0+0x18ac>  // b.none
    ef78:	ldr	x0, [sp, #56]
    ef7c:	ldr	x1, [x0, #8]
    ef80:	ldr	x0, [sp, #72]
    ef84:	orr	x0, x1, x0
    ef88:	mov	x1, x0
    ef8c:	mov	x0, #0x7fffffff            	// #2147483647
    ef90:	cmp	x1, x0
    ef94:	cset	w0, hi  // hi = pmore
    ef98:	and	w0, w0, #0xff
    ef9c:	and	x0, x0, #0xff
    efa0:	cmp	x0, #0x0
    efa4:	b.eq	efb4 <omp_is_initial_device@@OMP_4.0+0x186c>  // b.none
    efa8:	ldr	x0, [sp, #56]
    efac:	str	wzr, [x0, #4]
    efb0:	b	f078 <omp_is_initial_device@@OMP_4.0+0x1930>
    efb4:	ldr	x0, [sp, #56]
    efb8:	ldr	x1, [x0, #16]
    efbc:	ldr	x0, [sp, #72]
    efc0:	add	x2, x0, #0x1
    efc4:	ldr	x0, [sp, #56]
    efc8:	ldr	x0, [x0, #8]
    efcc:	mul	x0, x2, x0
    efd0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    efd4:	sub	x0, x2, x0
    efd8:	cmp	x1, x0
    efdc:	cset	w0, lt  // lt = tstop
    efe0:	and	w0, w0, #0xff
    efe4:	mov	w1, w0
    efe8:	ldr	x0, [sp, #56]
    efec:	str	w1, [x0, #4]
    eff0:	b	f078 <omp_is_initial_device@@OMP_4.0+0x1930>
    eff4:	ldr	x0, [sp, #56]
    eff8:	ldr	x0, [x0, #8]
    effc:	neg	x1, x0
    f000:	ldr	x0, [sp, #72]
    f004:	orr	x0, x1, x0
    f008:	mov	x1, x0
    f00c:	mov	x0, #0x7fffffff            	// #2147483647
    f010:	cmp	x1, x0
    f014:	cset	w0, hi  // hi = pmore
    f018:	and	w0, w0, #0xff
    f01c:	and	x0, x0, #0xff
    f020:	cmp	x0, #0x0
    f024:	b.eq	f034 <omp_is_initial_device@@OMP_4.0+0x18ec>  // b.none
    f028:	ldr	x0, [sp, #56]
    f02c:	str	wzr, [x0, #4]
    f030:	b	f078 <omp_is_initial_device@@OMP_4.0+0x1930>
    f034:	ldr	x0, [sp, #72]
    f038:	add	x1, x0, #0x1
    f03c:	ldr	x0, [sp, #56]
    f040:	ldr	x0, [x0, #8]
    f044:	neg	x0, x0
    f048:	mul	x1, x1, x0
    f04c:	mov	x0, #0x2                   	// #2
    f050:	movk	x0, #0x8000, lsl #48
    f054:	add	x1, x1, x0
    f058:	ldr	x0, [sp, #56]
    f05c:	ldr	x0, [x0, #16]
    f060:	cmp	x1, x0
    f064:	cset	w0, le
    f068:	and	w0, w0, #0xff
    f06c:	mov	w1, w0
    f070:	ldr	x0, [sp, #56]
    f074:	str	w1, [x0, #4]
    f078:	nop
    f07c:	ldp	x29, x30, [sp], #96
    f080:	ret

000000000000f084 <GOMP_loop_static_start@@GOMP_1.0>:
    f084:	stp	x29, x30, [sp, #-80]!
    f088:	mov	x29, sp
    f08c:	str	x0, [sp, #56]
    f090:	str	x1, [sp, #48]
    f094:	str	x2, [sp, #40]
    f098:	str	x3, [sp, #32]
    f09c:	str	x4, [sp, #24]
    f0a0:	str	x5, [sp, #16]
    f0a4:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    f0a8:	str	x0, [sp, #72]
    f0ac:	ldr	x0, [sp, #72]
    f0b0:	str	xzr, [x0, #72]
    f0b4:	mov	x0, #0x0                   	// #0
    f0b8:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    f0bc:	and	w0, w0, #0xff
    f0c0:	cmp	w0, #0x0
    f0c4:	b.eq	f0ec <GOMP_loop_static_start@@GOMP_1.0+0x68>  // b.none
    f0c8:	ldr	x0, [sp, #72]
    f0cc:	ldr	x0, [x0, #24]
    f0d0:	ldr	x5, [sp, #32]
    f0d4:	mov	w4, #0x1                   	// #1
    f0d8:	ldr	x3, [sp, #40]
    f0dc:	ldr	x2, [sp, #48]
    f0e0:	ldr	x1, [sp, #56]
    f0e4:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    f0e8:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    f0ec:	ldr	x1, [sp, #16]
    f0f0:	ldr	x0, [sp, #24]
    f0f4:	bl	d764 <omp_is_initial_device@@OMP_4.0+0x1c>
    f0f8:	cmp	w0, #0x0
    f0fc:	cset	w0, eq  // eq = none
    f100:	and	w0, w0, #0xff
    f104:	ldp	x29, x30, [sp], #80
    f108:	ret

000000000000f10c <GOMP_loop_dynamic_start@@GOMP_1.0>:
    f10c:	stp	x29, x30, [sp, #-80]!
    f110:	mov	x29, sp
    f114:	str	x0, [sp, #56]
    f118:	str	x1, [sp, #48]
    f11c:	str	x2, [sp, #40]
    f120:	str	x3, [sp, #32]
    f124:	str	x4, [sp, #24]
    f128:	str	x5, [sp, #16]
    f12c:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    f130:	str	x0, [sp, #72]
    f134:	mov	x0, #0x0                   	// #0
    f138:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    f13c:	and	w0, w0, #0xff
    f140:	cmp	w0, #0x0
    f144:	b.eq	f16c <GOMP_loop_dynamic_start@@GOMP_1.0+0x60>  // b.none
    f148:	ldr	x0, [sp, #72]
    f14c:	ldr	x0, [x0, #24]
    f150:	ldr	x5, [sp, #32]
    f154:	mov	w4, #0x2                   	// #2
    f158:	ldr	x3, [sp, #40]
    f15c:	ldr	x2, [sp, #48]
    f160:	ldr	x1, [sp, #56]
    f164:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    f168:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    f16c:	ldr	x1, [sp, #16]
    f170:	ldr	x0, [sp, #24]
    f174:	bl	dc34 <omp_is_initial_device@@OMP_4.0+0x4ec>
    f178:	strb	w0, [sp, #71]
    f17c:	ldrb	w0, [sp, #71]
    f180:	ldp	x29, x30, [sp], #80
    f184:	ret

000000000000f188 <GOMP_loop_guided_start@@GOMP_1.0>:
    f188:	stp	x29, x30, [sp, #-80]!
    f18c:	mov	x29, sp
    f190:	str	x0, [sp, #56]
    f194:	str	x1, [sp, #48]
    f198:	str	x2, [sp, #40]
    f19c:	str	x3, [sp, #32]
    f1a0:	str	x4, [sp, #24]
    f1a4:	str	x5, [sp, #16]
    f1a8:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    f1ac:	str	x0, [sp, #72]
    f1b0:	mov	x0, #0x0                   	// #0
    f1b4:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    f1b8:	and	w0, w0, #0xff
    f1bc:	cmp	w0, #0x0
    f1c0:	b.eq	f1e8 <GOMP_loop_guided_start@@GOMP_1.0+0x60>  // b.none
    f1c4:	ldr	x0, [sp, #72]
    f1c8:	ldr	x0, [x0, #24]
    f1cc:	ldr	x5, [sp, #32]
    f1d0:	mov	w4, #0x3                   	// #3
    f1d4:	ldr	x3, [sp, #40]
    f1d8:	ldr	x2, [sp, #48]
    f1dc:	ldr	x1, [sp, #56]
    f1e0:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    f1e4:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    f1e8:	ldr	x1, [sp, #16]
    f1ec:	ldr	x0, [sp, #24]
    f1f0:	bl	dfd8 <omp_is_initial_device@@OMP_4.0+0x890>
    f1f4:	strb	w0, [sp, #71]
    f1f8:	ldrb	w0, [sp, #71]
    f1fc:	ldp	x29, x30, [sp], #80
    f200:	ret

000000000000f204 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
    f204:	stp	x29, x30, [sp, #-80]!
    f208:	mov	x29, sp
    f20c:	str	x0, [sp, #56]
    f210:	str	x1, [sp, #48]
    f214:	str	x2, [sp, #40]
    f218:	str	x3, [sp, #32]
    f21c:	str	x4, [sp, #24]
    f220:	mov	w0, #0x0                   	// #0
    f224:	bl	edb4 <omp_is_initial_device@@OMP_4.0+0x166c>
    f228:	str	x0, [sp, #72]
    f22c:	ldr	x0, [sp, #72]
    f230:	ldr	w0, [x0, #8]
    f234:	and	w0, w0, #0x7fffffff
    f238:	cmp	w0, #0x4
    f23c:	b.eq	f2fc <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xf8>  // b.none
    f240:	cmp	w0, #0x4
    f244:	b.hi	f320 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x11c>  // b.pmore
    f248:	cmp	w0, #0x3
    f24c:	b.eq	f2cc <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xc8>  // b.none
    f250:	cmp	w0, #0x3
    f254:	b.hi	f320 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x11c>  // b.pmore
    f258:	cmp	w0, #0x1
    f25c:	b.eq	f26c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x68>  // b.none
    f260:	cmp	w0, #0x2
    f264:	b.eq	f29c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x98>  // b.none
    f268:	b	f320 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x11c>
    f26c:	ldr	x0, [sp, #72]
    f270:	ldr	w0, [x0, #12]
    f274:	sxtw	x0, w0
    f278:	ldr	x5, [sp, #24]
    f27c:	ldr	x4, [sp, #32]
    f280:	mov	x3, x0
    f284:	ldr	x2, [sp, #40]
    f288:	ldr	x1, [sp, #48]
    f28c:	ldr	x0, [sp, #56]
    f290:	bl	f084 <GOMP_loop_static_start@@GOMP_1.0>
    f294:	and	w0, w0, #0xff
    f298:	b	f324 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x120>
    f29c:	ldr	x0, [sp, #72]
    f2a0:	ldr	w0, [x0, #12]
    f2a4:	sxtw	x0, w0
    f2a8:	ldr	x5, [sp, #24]
    f2ac:	ldr	x4, [sp, #32]
    f2b0:	mov	x3, x0
    f2b4:	ldr	x2, [sp, #40]
    f2b8:	ldr	x1, [sp, #48]
    f2bc:	ldr	x0, [sp, #56]
    f2c0:	bl	f10c <GOMP_loop_dynamic_start@@GOMP_1.0>
    f2c4:	and	w0, w0, #0xff
    f2c8:	b	f324 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x120>
    f2cc:	ldr	x0, [sp, #72]
    f2d0:	ldr	w0, [x0, #12]
    f2d4:	sxtw	x0, w0
    f2d8:	ldr	x5, [sp, #24]
    f2dc:	ldr	x4, [sp, #32]
    f2e0:	mov	x3, x0
    f2e4:	ldr	x2, [sp, #40]
    f2e8:	ldr	x1, [sp, #48]
    f2ec:	ldr	x0, [sp, #56]
    f2f0:	bl	f188 <GOMP_loop_guided_start@@GOMP_1.0>
    f2f4:	and	w0, w0, #0xff
    f2f8:	b	f324 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x120>
    f2fc:	ldr	x5, [sp, #24]
    f300:	ldr	x4, [sp, #32]
    f304:	mov	x3, #0x0                   	// #0
    f308:	ldr	x2, [sp, #40]
    f30c:	ldr	x1, [sp, #48]
    f310:	ldr	x0, [sp, #56]
    f314:	bl	f084 <GOMP_loop_static_start@@GOMP_1.0>
    f318:	and	w0, w0, #0xff
    f31c:	b	f324 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x120>
    f320:	bl	8980 <abort@plt>
    f324:	ldp	x29, x30, [sp], #80
    f328:	ret
    f32c:	stp	x29, x30, [sp, #-48]!
    f330:	mov	x29, sp
    f334:	str	x0, [sp, #24]
    f338:	str	x1, [sp, #16]
    f33c:	ldr	x0, [sp, #24]
    f340:	and	x0, x0, #0x7fffffff
    f344:	str	x0, [sp, #24]
    f348:	ldr	x0, [sp, #24]
    f34c:	cmp	x0, #0x4
    f350:	b.eq	f390 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x18c>  // b.none
    f354:	ldr	x0, [sp, #24]
    f358:	cmp	x0, #0x4
    f35c:	b.gt	f414 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x210>
    f360:	ldr	x0, [sp, #24]
    f364:	cmp	x0, #0x0
    f368:	b.eq	f390 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x18c>  // b.none
    f36c:	ldr	x0, [sp, #24]
    f370:	cmp	x0, #0x0
    f374:	b.lt	f414 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x210>  // b.tstop
    f378:	ldr	x0, [sp, #24]
    f37c:	sub	x0, x0, #0x1
    f380:	cmp	x0, #0x2
    f384:	b.hi	f414 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x210>  // b.pmore
    f388:	ldr	x0, [sp, #24]
    f38c:	b	f418 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x214>
    f390:	mov	w0, #0x0                   	// #0
    f394:	bl	edb4 <omp_is_initial_device@@OMP_4.0+0x166c>
    f398:	str	x0, [sp, #40]
    f39c:	ldr	x0, [sp, #40]
    f3a0:	ldr	w0, [x0, #8]
    f3a4:	mov	w0, w0
    f3a8:	and	x0, x0, #0x7fffffff
    f3ac:	str	x0, [sp, #24]
    f3b0:	ldr	x0, [sp, #24]
    f3b4:	cmp	x0, #0x3
    f3b8:	b.gt	f3cc <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1c8>
    f3bc:	ldr	x0, [sp, #24]
    f3c0:	cmp	x0, #0x0
    f3c4:	b.gt	f3dc <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1d8>
    f3c8:	b	f408 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x204>
    f3cc:	ldr	x0, [sp, #24]
    f3d0:	cmp	x0, #0x4
    f3d4:	b.eq	f3f4 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1f0>  // b.none
    f3d8:	b	f408 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x204>
    f3dc:	ldr	x0, [sp, #40]
    f3e0:	ldr	w0, [x0, #12]
    f3e4:	sxtw	x1, w0
    f3e8:	ldr	x0, [sp, #16]
    f3ec:	str	x1, [x0]
    f3f0:	b	f40c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x208>
    f3f4:	mov	x0, #0x1                   	// #1
    f3f8:	str	x0, [sp, #24]
    f3fc:	ldr	x0, [sp, #16]
    f400:	str	xzr, [x0]
    f404:	b	f40c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x208>
    f408:	bl	8980 <abort@plt>
    f40c:	ldr	x0, [sp, #24]
    f410:	b	f418 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x214>
    f414:	bl	8980 <abort@plt>
    f418:	ldp	x29, x30, [sp], #48
    f41c:	ret

000000000000f420 <GOMP_loop_start@@GOMP_5.0>:
    f420:	stp	x29, x30, [sp, #-128]!
    f424:	mov	x29, sp
    f428:	str	x19, [sp, #16]
    f42c:	str	x0, [sp, #88]
    f430:	str	x1, [sp, #80]
    f434:	str	x2, [sp, #72]
    f438:	str	x3, [sp, #64]
    f43c:	str	x4, [sp, #56]
    f440:	str	x5, [sp, #48]
    f444:	str	x6, [sp, #40]
    f448:	str	x7, [sp, #32]
    f44c:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    f450:	str	x0, [sp, #120]
    f454:	ldr	x0, [sp, #120]
    f458:	str	xzr, [x0, #72]
    f45c:	ldr	x0, [sp, #32]
    f460:	cmp	x0, #0x0
    f464:	b.eq	f46c <GOMP_loop_start@@GOMP_5.0+0x4c>  // b.none
    f468:	bl	1d2bc <GOMP_task_reduction_remap@@GOMP_5.0+0xadc>
    f46c:	mov	x0, #0x0                   	// #0
    f470:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    f474:	and	w0, w0, #0xff
    f478:	cmp	w0, #0x0
    f47c:	b.eq	f56c <GOMP_loop_start@@GOMP_5.0+0x14c>  // b.none
    f480:	add	x0, sp, #0x38
    f484:	mov	x1, x0
    f488:	ldr	x0, [sp, #64]
    f48c:	bl	f32c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x128>
    f490:	str	x0, [sp, #64]
    f494:	ldr	x0, [sp, #120]
    f498:	ldr	x0, [x0, #24]
    f49c:	ldr	x1, [sp, #64]
    f4a0:	mov	w2, w1
    f4a4:	ldr	x1, [sp, #56]
    f4a8:	mov	x5, x1
    f4ac:	mov	w4, w2
    f4b0:	ldr	x3, [sp, #72]
    f4b4:	ldr	x2, [sp, #80]
    f4b8:	ldr	x1, [sp, #88]
    f4bc:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    f4c0:	ldr	x0, [sp, #32]
    f4c4:	cmp	x0, #0x0
    f4c8:	b.eq	f4f8 <GOMP_loop_start@@GOMP_5.0+0xd8>  // b.none
    f4cc:	ldr	x0, [sp, #32]
    f4d0:	bl	1c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    f4d4:	ldr	x0, [sp, #120]
    f4d8:	ldr	x0, [x0, #80]
    f4dc:	ldr	x0, [x0, #40]
    f4e0:	mov	w1, #0x1                   	// #1
    f4e4:	strb	w1, [x0, #50]
    f4e8:	ldr	x0, [sp, #120]
    f4ec:	ldr	x0, [x0, #24]
    f4f0:	ldr	x1, [sp, #32]
    f4f4:	str	x1, [x0, #88]
    f4f8:	ldr	x0, [sp, #128]
    f4fc:	cmp	x0, #0x0
    f500:	b.eq	f564 <GOMP_loop_start@@GOMP_5.0+0x144>  // b.none
    f504:	ldr	x0, [sp, #128]
    f508:	ldr	x0, [x0]
    f50c:	str	x0, [sp, #104]
    f510:	ldr	x0, [sp, #104]
    f514:	cmp	x0, #0x20
    f518:	b.ls	f540 <GOMP_loop_start@@GOMP_5.0+0x120>  // b.plast
    f51c:	ldr	x0, [sp, #120]
    f520:	ldr	x19, [x0, #24]
    f524:	ldr	x0, [sp, #104]
    f528:	bl	8e10 <fprintf@plt+0x1e0>
    f52c:	str	x0, [x19, #32]
    f530:	ldr	x1, [x19, #32]
    f534:	ldr	x0, [sp, #128]
    f538:	str	x1, [x0]
    f53c:	b	f564 <GOMP_loop_start@@GOMP_5.0+0x144>
    f540:	ldr	x0, [sp, #120]
    f544:	ldr	x0, [x0, #24]
    f548:	add	x0, x0, #0x60
    f54c:	ldr	x2, [sp, #104]
    f550:	mov	w1, #0x0                   	// #0
    f554:	bl	88d0 <memset@plt>
    f558:	mov	x1, x0
    f55c:	ldr	x0, [sp, #128]
    f560:	str	x1, [x0]
    f564:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    f568:	b	f5b4 <GOMP_loop_start@@GOMP_5.0+0x194>
    f56c:	ldr	x0, [sp, #32]
    f570:	cmp	x0, #0x0
    f574:	b.eq	f594 <GOMP_loop_start@@GOMP_5.0+0x174>  // b.none
    f578:	ldr	x0, [sp, #120]
    f57c:	ldr	x0, [x0, #24]
    f580:	ldr	x0, [x0, #88]
    f584:	str	x0, [sp, #112]
    f588:	ldr	x1, [sp, #112]
    f58c:	ldr	x0, [sp, #32]
    f590:	bl	1cf34 <GOMP_task_reduction_remap@@GOMP_5.0+0x754>
    f594:	ldr	x0, [sp, #128]
    f598:	cmp	x0, #0x0
    f59c:	b.eq	f5b4 <GOMP_loop_start@@GOMP_5.0+0x194>  // b.none
    f5a0:	ldr	x0, [sp, #120]
    f5a4:	ldr	x0, [x0, #24]
    f5a8:	ldr	x1, [x0, #32]
    f5ac:	ldr	x0, [sp, #128]
    f5b0:	str	x1, [x0]
    f5b4:	ldr	x0, [sp, #48]
    f5b8:	cmp	x0, #0x0
    f5bc:	b.ne	f5c8 <GOMP_loop_start@@GOMP_5.0+0x1a8>  // b.any
    f5c0:	mov	w0, #0x1                   	// #1
    f5c4:	b	f5d8 <GOMP_loop_start@@GOMP_5.0+0x1b8>
    f5c8:	ldr	x1, [sp, #40]
    f5cc:	ldr	x0, [sp, #48]
    f5d0:	bl	100d0 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    f5d4:	and	w0, w0, #0xff
    f5d8:	ldr	x19, [sp, #16]
    f5dc:	ldp	x29, x30, [sp], #128
    f5e0:	ret

000000000000f5e4 <GOMP_loop_ordered_static_start@@GOMP_1.0>:
    f5e4:	stp	x29, x30, [sp, #-80]!
    f5e8:	mov	x29, sp
    f5ec:	str	x0, [sp, #56]
    f5f0:	str	x1, [sp, #48]
    f5f4:	str	x2, [sp, #40]
    f5f8:	str	x3, [sp, #32]
    f5fc:	str	x4, [sp, #24]
    f600:	str	x5, [sp, #16]
    f604:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    f608:	str	x0, [sp, #72]
    f60c:	ldr	x0, [sp, #72]
    f610:	str	xzr, [x0, #72]
    f614:	mov	x0, #0x1                   	// #1
    f618:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    f61c:	and	w0, w0, #0xff
    f620:	cmp	w0, #0x0
    f624:	b.eq	f650 <GOMP_loop_ordered_static_start@@GOMP_1.0+0x6c>  // b.none
    f628:	ldr	x0, [sp, #72]
    f62c:	ldr	x0, [x0, #24]
    f630:	ldr	x5, [sp, #32]
    f634:	mov	w4, #0x1                   	// #1
    f638:	ldr	x3, [sp, #40]
    f63c:	ldr	x2, [sp, #48]
    f640:	ldr	x1, [sp, #56]
    f644:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    f648:	bl	123f4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x58c>
    f64c:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    f650:	ldr	x1, [sp, #16]
    f654:	ldr	x0, [sp, #24]
    f658:	bl	d764 <omp_is_initial_device@@OMP_4.0+0x1c>
    f65c:	cmp	w0, #0x0
    f660:	cset	w0, eq  // eq = none
    f664:	and	w0, w0, #0xff
    f668:	ldp	x29, x30, [sp], #80
    f66c:	ret

000000000000f670 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>:
    f670:	stp	x29, x30, [sp, #-80]!
    f674:	mov	x29, sp
    f678:	str	x0, [sp, #56]
    f67c:	str	x1, [sp, #48]
    f680:	str	x2, [sp, #40]
    f684:	str	x3, [sp, #32]
    f688:	str	x4, [sp, #24]
    f68c:	str	x5, [sp, #16]
    f690:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    f694:	str	x0, [sp, #72]
    f698:	mov	x0, #0x1                   	// #1
    f69c:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    f6a0:	and	w0, w0, #0xff
    f6a4:	cmp	w0, #0x0
    f6a8:	b.eq	f6e4 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x74>  // b.none
    f6ac:	ldr	x0, [sp, #72]
    f6b0:	ldr	x0, [x0, #24]
    f6b4:	ldr	x5, [sp, #32]
    f6b8:	mov	w4, #0x2                   	// #2
    f6bc:	ldr	x3, [sp, #40]
    f6c0:	ldr	x2, [sp, #48]
    f6c4:	ldr	x1, [sp, #56]
    f6c8:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    f6cc:	ldr	x0, [sp, #72]
    f6d0:	ldr	x0, [x0, #24]
    f6d4:	add	x0, x0, #0x40
    f6d8:	bl	ec98 <omp_is_initial_device@@OMP_4.0+0x1550>
    f6dc:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    f6e0:	b	f6f4 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x84>
    f6e4:	ldr	x0, [sp, #72]
    f6e8:	ldr	x0, [x0, #24]
    f6ec:	add	x0, x0, #0x40
    f6f0:	bl	ec98 <omp_is_initial_device@@OMP_4.0+0x1550>
    f6f4:	ldr	x1, [sp, #16]
    f6f8:	ldr	x0, [sp, #24]
    f6fc:	bl	db44 <omp_is_initial_device@@OMP_4.0+0x3fc>
    f700:	strb	w0, [sp, #71]
    f704:	ldrb	w0, [sp, #71]
    f708:	cmp	w0, #0x0
    f70c:	b.eq	f714 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0xa4>  // b.none
    f710:	bl	12094 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x22c>
    f714:	ldr	x0, [sp, #72]
    f718:	ldr	x0, [x0, #24]
    f71c:	add	x0, x0, #0x40
    f720:	bl	ed0c <omp_is_initial_device@@OMP_4.0+0x15c4>
    f724:	ldrb	w0, [sp, #71]
    f728:	ldp	x29, x30, [sp], #80
    f72c:	ret

000000000000f730 <GOMP_loop_ordered_guided_start@@GOMP_1.0>:
    f730:	stp	x29, x30, [sp, #-80]!
    f734:	mov	x29, sp
    f738:	str	x0, [sp, #56]
    f73c:	str	x1, [sp, #48]
    f740:	str	x2, [sp, #40]
    f744:	str	x3, [sp, #32]
    f748:	str	x4, [sp, #24]
    f74c:	str	x5, [sp, #16]
    f750:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    f754:	str	x0, [sp, #72]
    f758:	mov	x0, #0x1                   	// #1
    f75c:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    f760:	and	w0, w0, #0xff
    f764:	cmp	w0, #0x0
    f768:	b.eq	f7a4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x74>  // b.none
    f76c:	ldr	x0, [sp, #72]
    f770:	ldr	x0, [x0, #24]
    f774:	ldr	x5, [sp, #32]
    f778:	mov	w4, #0x3                   	// #3
    f77c:	ldr	x3, [sp, #40]
    f780:	ldr	x2, [sp, #48]
    f784:	ldr	x1, [sp, #56]
    f788:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    f78c:	ldr	x0, [sp, #72]
    f790:	ldr	x0, [x0, #24]
    f794:	add	x0, x0, #0x40
    f798:	bl	ec98 <omp_is_initial_device@@OMP_4.0+0x1550>
    f79c:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    f7a0:	b	f7b4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x84>
    f7a4:	ldr	x0, [sp, #72]
    f7a8:	ldr	x0, [x0, #24]
    f7ac:	add	x0, x0, #0x40
    f7b0:	bl	ec98 <omp_is_initial_device@@OMP_4.0+0x1550>
    f7b4:	ldr	x1, [sp, #16]
    f7b8:	ldr	x0, [sp, #24]
    f7bc:	bl	de88 <omp_is_initial_device@@OMP_4.0+0x740>
    f7c0:	strb	w0, [sp, #71]
    f7c4:	ldrb	w0, [sp, #71]
    f7c8:	cmp	w0, #0x0
    f7cc:	b.eq	f7d4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xa4>  // b.none
    f7d0:	bl	12094 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x22c>
    f7d4:	ldr	x0, [sp, #72]
    f7d8:	ldr	x0, [x0, #24]
    f7dc:	add	x0, x0, #0x40
    f7e0:	bl	ed0c <omp_is_initial_device@@OMP_4.0+0x15c4>
    f7e4:	ldrb	w0, [sp, #71]
    f7e8:	ldp	x29, x30, [sp], #80
    f7ec:	ret

000000000000f7f0 <GOMP_loop_ordered_runtime_start@@GOMP_1.0>:
    f7f0:	stp	x29, x30, [sp, #-80]!
    f7f4:	mov	x29, sp
    f7f8:	str	x0, [sp, #56]
    f7fc:	str	x1, [sp, #48]
    f800:	str	x2, [sp, #40]
    f804:	str	x3, [sp, #32]
    f808:	str	x4, [sp, #24]
    f80c:	mov	w0, #0x0                   	// #0
    f810:	bl	edb4 <omp_is_initial_device@@OMP_4.0+0x166c>
    f814:	str	x0, [sp, #72]
    f818:	ldr	x0, [sp, #72]
    f81c:	ldr	w0, [x0, #8]
    f820:	and	w0, w0, #0x7fffffff
    f824:	cmp	w0, #0x4
    f828:	b.eq	f8e8 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0xf8>  // b.none
    f82c:	cmp	w0, #0x4
    f830:	b.hi	f90c <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x11c>  // b.pmore
    f834:	cmp	w0, #0x3
    f838:	b.eq	f8b8 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0xc8>  // b.none
    f83c:	cmp	w0, #0x3
    f840:	b.hi	f90c <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x11c>  // b.pmore
    f844:	cmp	w0, #0x1
    f848:	b.eq	f858 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x68>  // b.none
    f84c:	cmp	w0, #0x2
    f850:	b.eq	f888 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x98>  // b.none
    f854:	b	f90c <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x11c>
    f858:	ldr	x0, [sp, #72]
    f85c:	ldr	w0, [x0, #12]
    f860:	sxtw	x0, w0
    f864:	ldr	x5, [sp, #24]
    f868:	ldr	x4, [sp, #32]
    f86c:	mov	x3, x0
    f870:	ldr	x2, [sp, #40]
    f874:	ldr	x1, [sp, #48]
    f878:	ldr	x0, [sp, #56]
    f87c:	bl	f5e4 <GOMP_loop_ordered_static_start@@GOMP_1.0>
    f880:	and	w0, w0, #0xff
    f884:	b	f910 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x120>
    f888:	ldr	x0, [sp, #72]
    f88c:	ldr	w0, [x0, #12]
    f890:	sxtw	x0, w0
    f894:	ldr	x5, [sp, #24]
    f898:	ldr	x4, [sp, #32]
    f89c:	mov	x3, x0
    f8a0:	ldr	x2, [sp, #40]
    f8a4:	ldr	x1, [sp, #48]
    f8a8:	ldr	x0, [sp, #56]
    f8ac:	bl	f670 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>
    f8b0:	and	w0, w0, #0xff
    f8b4:	b	f910 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x120>
    f8b8:	ldr	x0, [sp, #72]
    f8bc:	ldr	w0, [x0, #12]
    f8c0:	sxtw	x0, w0
    f8c4:	ldr	x5, [sp, #24]
    f8c8:	ldr	x4, [sp, #32]
    f8cc:	mov	x3, x0
    f8d0:	ldr	x2, [sp, #40]
    f8d4:	ldr	x1, [sp, #48]
    f8d8:	ldr	x0, [sp, #56]
    f8dc:	bl	f730 <GOMP_loop_ordered_guided_start@@GOMP_1.0>
    f8e0:	and	w0, w0, #0xff
    f8e4:	b	f910 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x120>
    f8e8:	ldr	x5, [sp, #24]
    f8ec:	ldr	x4, [sp, #32]
    f8f0:	mov	x3, #0x0                   	// #0
    f8f4:	ldr	x2, [sp, #40]
    f8f8:	ldr	x1, [sp, #48]
    f8fc:	ldr	x0, [sp, #56]
    f900:	bl	f5e4 <GOMP_loop_ordered_static_start@@GOMP_1.0>
    f904:	and	w0, w0, #0xff
    f908:	b	f910 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x120>
    f90c:	bl	8980 <abort@plt>
    f910:	ldp	x29, x30, [sp], #80
    f914:	ret

000000000000f918 <GOMP_loop_ordered_start@@GOMP_5.0>:
    f918:	stp	x29, x30, [sp, #-128]!
    f91c:	mov	x29, sp
    f920:	str	x0, [sp, #72]
    f924:	str	x1, [sp, #64]
    f928:	str	x2, [sp, #56]
    f92c:	str	x3, [sp, #48]
    f930:	str	x4, [sp, #40]
    f934:	str	x5, [sp, #32]
    f938:	str	x6, [sp, #24]
    f93c:	str	x7, [sp, #16]
    f940:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    f944:	str	x0, [sp, #104]
    f948:	mov	x0, #0x1                   	// #1
    f94c:	str	x0, [sp, #120]
    f950:	ldr	x0, [sp, #104]
    f954:	str	xzr, [x0, #72]
    f958:	ldr	x0, [sp, #16]
    f95c:	cmp	x0, #0x0
    f960:	b.eq	f968 <GOMP_loop_ordered_start@@GOMP_5.0+0x50>  // b.none
    f964:	bl	1d2bc <GOMP_task_reduction_remap@@GOMP_5.0+0xadc>
    f968:	ldr	x0, [sp, #128]
    f96c:	cmp	x0, #0x0
    f970:	b.eq	f98c <GOMP_loop_ordered_start@@GOMP_5.0+0x74>  // b.none
    f974:	ldr	x0, [sp, #128]
    f978:	ldr	x0, [x0]
    f97c:	mov	x1, x0
    f980:	ldr	x0, [sp, #120]
    f984:	add	x0, x0, x1
    f988:	str	x0, [sp, #120]
    f98c:	ldr	x0, [sp, #120]
    f990:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    f994:	and	w0, w0, #0xff
    f998:	cmp	w0, #0x0
    f99c:	b.eq	fa44 <GOMP_loop_ordered_start@@GOMP_5.0+0x12c>  // b.none
    f9a0:	add	x0, sp, #0x28
    f9a4:	mov	x1, x0
    f9a8:	ldr	x0, [sp, #48]
    f9ac:	bl	f32c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x128>
    f9b0:	str	x0, [sp, #48]
    f9b4:	ldr	x0, [sp, #104]
    f9b8:	ldr	x0, [x0, #24]
    f9bc:	ldr	x1, [sp, #48]
    f9c0:	mov	w2, w1
    f9c4:	ldr	x1, [sp, #40]
    f9c8:	mov	x5, x1
    f9cc:	mov	w4, w2
    f9d0:	ldr	x3, [sp, #56]
    f9d4:	ldr	x2, [sp, #64]
    f9d8:	ldr	x1, [sp, #72]
    f9dc:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    f9e0:	ldr	x0, [sp, #16]
    f9e4:	cmp	x0, #0x0
    f9e8:	b.eq	fa18 <GOMP_loop_ordered_start@@GOMP_5.0+0x100>  // b.none
    f9ec:	ldr	x0, [sp, #16]
    f9f0:	bl	1c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    f9f4:	ldr	x0, [sp, #104]
    f9f8:	ldr	x0, [x0, #80]
    f9fc:	ldr	x0, [x0, #40]
    fa00:	mov	w1, #0x1                   	// #1
    fa04:	strb	w1, [x0, #50]
    fa08:	ldr	x0, [sp, #104]
    fa0c:	ldr	x0, [x0, #24]
    fa10:	ldr	x1, [sp, #16]
    fa14:	str	x1, [x0, #88]
    fa18:	ldr	x0, [sp, #48]
    fa1c:	cmp	x0, #0x1
    fa20:	b.ne	fa2c <GOMP_loop_ordered_start@@GOMP_5.0+0x114>  // b.any
    fa24:	bl	123f4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x58c>
    fa28:	b	fa3c <GOMP_loop_ordered_start@@GOMP_5.0+0x124>
    fa2c:	ldr	x0, [sp, #104]
    fa30:	ldr	x0, [x0, #24]
    fa34:	add	x0, x0, #0x40
    fa38:	bl	ec98 <omp_is_initial_device@@OMP_4.0+0x1550>
    fa3c:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    fa40:	b	fa9c <GOMP_loop_ordered_start@@GOMP_5.0+0x184>
    fa44:	ldr	x0, [sp, #16]
    fa48:	cmp	x0, #0x0
    fa4c:	b.eq	fa6c <GOMP_loop_ordered_start@@GOMP_5.0+0x154>  // b.none
    fa50:	ldr	x0, [sp, #104]
    fa54:	ldr	x0, [x0, #24]
    fa58:	ldr	x0, [x0, #88]
    fa5c:	str	x0, [sp, #96]
    fa60:	ldr	x1, [sp, #96]
    fa64:	ldr	x0, [sp, #16]
    fa68:	bl	1cf34 <GOMP_task_reduction_remap@@GOMP_5.0+0x754>
    fa6c:	ldr	x0, [sp, #104]
    fa70:	ldr	x0, [x0, #24]
    fa74:	ldr	w0, [x0]
    fa78:	mov	w0, w0
    fa7c:	str	x0, [sp, #48]
    fa80:	ldr	x0, [sp, #48]
    fa84:	cmp	x0, #0x1
    fa88:	b.eq	fa9c <GOMP_loop_ordered_start@@GOMP_5.0+0x184>  // b.none
    fa8c:	ldr	x0, [sp, #104]
    fa90:	ldr	x0, [x0, #24]
    fa94:	add	x0, x0, #0x40
    fa98:	bl	ec98 <omp_is_initial_device@@OMP_4.0+0x1550>
    fa9c:	ldr	x0, [sp, #128]
    faa0:	cmp	x0, #0x0
    faa4:	b.eq	fb0c <GOMP_loop_ordered_start@@GOMP_5.0+0x1f4>  // b.none
    faa8:	ldr	x0, [sp, #104]
    faac:	ldr	x0, [x0, #24]
    fab0:	ldr	x1, [x0, #32]
    fab4:	ldr	x0, [sp, #104]
    fab8:	ldr	x0, [x0, #16]
    fabc:	cmp	x0, #0x0
    fac0:	b.eq	fadc <GOMP_loop_ordered_start@@GOMP_5.0+0x1c4>  // b.none
    fac4:	ldr	x0, [sp, #104]
    fac8:	ldr	x0, [x0, #16]
    facc:	ldr	w0, [x0]
    fad0:	mov	w0, w0
    fad4:	lsl	x0, x0, #2
    fad8:	b	fae0 <GOMP_loop_ordered_start@@GOMP_5.0+0x1c8>
    fadc:	mov	x0, #0x4                   	// #4
    fae0:	add	x0, x1, x0
    fae4:	str	x0, [sp, #88]
    fae8:	ldr	x0, [sp, #88]
    faec:	add	x0, x0, #0x7
    faf0:	str	x0, [sp, #88]
    faf4:	ldr	x0, [sp, #88]
    faf8:	and	x0, x0, #0xfffffffffffffff8
    fafc:	str	x0, [sp, #88]
    fb00:	ldr	x1, [sp, #88]
    fb04:	ldr	x0, [sp, #128]
    fb08:	str	x1, [x0]
    fb0c:	ldr	x0, [sp, #48]
    fb10:	cmp	x0, #0x4
    fb14:	b.eq	fb58 <GOMP_loop_ordered_start@@GOMP_5.0+0x240>  // b.none
    fb18:	ldr	x0, [sp, #48]
    fb1c:	cmp	x0, #0x4
    fb20:	b.gt	fb9c <GOMP_loop_ordered_start@@GOMP_5.0+0x284>
    fb24:	ldr	x0, [sp, #48]
    fb28:	cmp	x0, #0x3
    fb2c:	b.eq	fb88 <GOMP_loop_ordered_start@@GOMP_5.0+0x270>  // b.none
    fb30:	ldr	x0, [sp, #48]
    fb34:	cmp	x0, #0x3
    fb38:	b.gt	fb9c <GOMP_loop_ordered_start@@GOMP_5.0+0x284>
    fb3c:	ldr	x0, [sp, #48]
    fb40:	cmp	x0, #0x1
    fb44:	b.eq	fb58 <GOMP_loop_ordered_start@@GOMP_5.0+0x240>  // b.none
    fb48:	ldr	x0, [sp, #48]
    fb4c:	cmp	x0, #0x2
    fb50:	b.eq	fb74 <GOMP_loop_ordered_start@@GOMP_5.0+0x25c>  // b.none
    fb54:	b	fb9c <GOMP_loop_ordered_start@@GOMP_5.0+0x284>
    fb58:	ldr	x1, [sp, #24]
    fb5c:	ldr	x0, [sp, #32]
    fb60:	bl	d764 <omp_is_initial_device@@OMP_4.0+0x1c>
    fb64:	cmp	w0, #0x0
    fb68:	cset	w0, eq  // eq = none
    fb6c:	and	w0, w0, #0xff
    fb70:	b	fbc4 <GOMP_loop_ordered_start@@GOMP_5.0+0x2ac>
    fb74:	ldr	x1, [sp, #24]
    fb78:	ldr	x0, [sp, #32]
    fb7c:	bl	db44 <omp_is_initial_device@@OMP_4.0+0x3fc>
    fb80:	strb	w0, [sp, #119]
    fb84:	b	fba0 <GOMP_loop_ordered_start@@GOMP_5.0+0x288>
    fb88:	ldr	x1, [sp, #24]
    fb8c:	ldr	x0, [sp, #32]
    fb90:	bl	de88 <omp_is_initial_device@@OMP_4.0+0x740>
    fb94:	strb	w0, [sp, #119]
    fb98:	b	fba0 <GOMP_loop_ordered_start@@GOMP_5.0+0x288>
    fb9c:	bl	8980 <abort@plt>
    fba0:	ldrb	w0, [sp, #119]
    fba4:	cmp	w0, #0x0
    fba8:	b.eq	fbb0 <GOMP_loop_ordered_start@@GOMP_5.0+0x298>  // b.none
    fbac:	bl	12094 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x22c>
    fbb0:	ldr	x0, [sp, #104]
    fbb4:	ldr	x0, [x0, #24]
    fbb8:	add	x0, x0, #0x40
    fbbc:	bl	ed0c <omp_is_initial_device@@OMP_4.0+0x15c4>
    fbc0:	ldrb	w0, [sp, #119]
    fbc4:	ldp	x29, x30, [sp], #128
    fbc8:	ret

000000000000fbcc <GOMP_loop_doacross_static_start@@GOMP_4.5>:
    fbcc:	stp	x29, x30, [sp, #-80]!
    fbd0:	mov	x29, sp
    fbd4:	str	w0, [sp, #60]
    fbd8:	str	x1, [sp, #48]
    fbdc:	str	x2, [sp, #40]
    fbe0:	str	x3, [sp, #32]
    fbe4:	str	x4, [sp, #24]
    fbe8:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    fbec:	str	x0, [sp, #72]
    fbf0:	ldr	x0, [sp, #72]
    fbf4:	str	xzr, [x0, #72]
    fbf8:	mov	x0, #0x0                   	// #0
    fbfc:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    fc00:	and	w0, w0, #0xff
    fc04:	cmp	w0, #0x0
    fc08:	b.eq	fc50 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x84>  // b.none
    fc0c:	ldr	x0, [sp, #72]
    fc10:	ldr	x6, [x0, #24]
    fc14:	ldr	x0, [sp, #48]
    fc18:	ldr	x0, [x0]
    fc1c:	ldr	x5, [sp, #40]
    fc20:	mov	w4, #0x1                   	// #1
    fc24:	mov	x3, #0x1                   	// #1
    fc28:	mov	x2, x0
    fc2c:	mov	x1, #0x0                   	// #0
    fc30:	mov	x0, x6
    fc34:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    fc38:	mov	x3, #0x0                   	// #0
    fc3c:	ldr	x2, [sp, #40]
    fc40:	ldr	x1, [sp, #48]
    fc44:	ldr	w0, [sp, #60]
    fc48:	bl	125b4 <GOMP_ordered_end@@GOMP_1.0+0x8>
    fc4c:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    fc50:	ldr	x1, [sp, #24]
    fc54:	ldr	x0, [sp, #32]
    fc58:	bl	d764 <omp_is_initial_device@@OMP_4.0+0x1c>
    fc5c:	cmp	w0, #0x0
    fc60:	cset	w0, eq  // eq = none
    fc64:	and	w0, w0, #0xff
    fc68:	ldp	x29, x30, [sp], #80
    fc6c:	ret

000000000000fc70 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5>:
    fc70:	stp	x29, x30, [sp, #-80]!
    fc74:	mov	x29, sp
    fc78:	str	w0, [sp, #60]
    fc7c:	str	x1, [sp, #48]
    fc80:	str	x2, [sp, #40]
    fc84:	str	x3, [sp, #32]
    fc88:	str	x4, [sp, #24]
    fc8c:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    fc90:	str	x0, [sp, #72]
    fc94:	mov	x0, #0x0                   	// #0
    fc98:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    fc9c:	and	w0, w0, #0xff
    fca0:	cmp	w0, #0x0
    fca4:	b.eq	fcec <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x7c>  // b.none
    fca8:	ldr	x0, [sp, #72]
    fcac:	ldr	x6, [x0, #24]
    fcb0:	ldr	x0, [sp, #48]
    fcb4:	ldr	x0, [x0]
    fcb8:	ldr	x5, [sp, #40]
    fcbc:	mov	w4, #0x2                   	// #2
    fcc0:	mov	x3, #0x1                   	// #1
    fcc4:	mov	x2, x0
    fcc8:	mov	x1, #0x0                   	// #0
    fccc:	mov	x0, x6
    fcd0:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    fcd4:	mov	x3, #0x0                   	// #0
    fcd8:	ldr	x2, [sp, #40]
    fcdc:	ldr	x1, [sp, #48]
    fce0:	ldr	w0, [sp, #60]
    fce4:	bl	125b4 <GOMP_ordered_end@@GOMP_1.0+0x8>
    fce8:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    fcec:	ldr	x1, [sp, #24]
    fcf0:	ldr	x0, [sp, #32]
    fcf4:	bl	dc34 <omp_is_initial_device@@OMP_4.0+0x4ec>
    fcf8:	strb	w0, [sp, #71]
    fcfc:	ldrb	w0, [sp, #71]
    fd00:	ldp	x29, x30, [sp], #80
    fd04:	ret

000000000000fd08 <GOMP_loop_doacross_guided_start@@GOMP_4.5>:
    fd08:	stp	x29, x30, [sp, #-80]!
    fd0c:	mov	x29, sp
    fd10:	str	w0, [sp, #60]
    fd14:	str	x1, [sp, #48]
    fd18:	str	x2, [sp, #40]
    fd1c:	str	x3, [sp, #32]
    fd20:	str	x4, [sp, #24]
    fd24:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    fd28:	str	x0, [sp, #72]
    fd2c:	mov	x0, #0x0                   	// #0
    fd30:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    fd34:	and	w0, w0, #0xff
    fd38:	cmp	w0, #0x0
    fd3c:	b.eq	fd84 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x7c>  // b.none
    fd40:	ldr	x0, [sp, #72]
    fd44:	ldr	x6, [x0, #24]
    fd48:	ldr	x0, [sp, #48]
    fd4c:	ldr	x0, [x0]
    fd50:	ldr	x5, [sp, #40]
    fd54:	mov	w4, #0x3                   	// #3
    fd58:	mov	x3, #0x1                   	// #1
    fd5c:	mov	x2, x0
    fd60:	mov	x1, #0x0                   	// #0
    fd64:	mov	x0, x6
    fd68:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    fd6c:	mov	x3, #0x0                   	// #0
    fd70:	ldr	x2, [sp, #40]
    fd74:	ldr	x1, [sp, #48]
    fd78:	ldr	w0, [sp, #60]
    fd7c:	bl	125b4 <GOMP_ordered_end@@GOMP_1.0+0x8>
    fd80:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    fd84:	ldr	x1, [sp, #24]
    fd88:	ldr	x0, [sp, #32]
    fd8c:	bl	dfd8 <omp_is_initial_device@@OMP_4.0+0x890>
    fd90:	strb	w0, [sp, #71]
    fd94:	ldrb	w0, [sp, #71]
    fd98:	ldp	x29, x30, [sp], #80
    fd9c:	ret

000000000000fda0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5>:
    fda0:	stp	x29, x30, [sp, #-64]!
    fda4:	mov	x29, sp
    fda8:	str	w0, [sp, #44]
    fdac:	str	x1, [sp, #32]
    fdb0:	str	x2, [sp, #24]
    fdb4:	str	x3, [sp, #16]
    fdb8:	mov	w0, #0x0                   	// #0
    fdbc:	bl	edb4 <omp_is_initial_device@@OMP_4.0+0x166c>
    fdc0:	str	x0, [sp, #56]
    fdc4:	ldr	x0, [sp, #56]
    fdc8:	ldr	w0, [x0, #8]
    fdcc:	and	w0, w0, #0x7fffffff
    fdd0:	cmp	w0, #0x4
    fdd4:	b.eq	fe88 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0xe8>  // b.none
    fdd8:	cmp	w0, #0x4
    fddc:	b.hi	fea8 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x108>  // b.pmore
    fde0:	cmp	w0, #0x3
    fde4:	b.eq	fe5c <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0xbc>  // b.none
    fde8:	cmp	w0, #0x3
    fdec:	b.hi	fea8 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x108>  // b.pmore
    fdf0:	cmp	w0, #0x1
    fdf4:	b.eq	fe04 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x64>  // b.none
    fdf8:	cmp	w0, #0x2
    fdfc:	b.eq	fe30 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x90>  // b.none
    fe00:	b	fea8 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x108>
    fe04:	ldr	x0, [sp, #56]
    fe08:	ldr	w0, [x0, #12]
    fe0c:	sxtw	x0, w0
    fe10:	ldr	x4, [sp, #16]
    fe14:	ldr	x3, [sp, #24]
    fe18:	mov	x2, x0
    fe1c:	ldr	x1, [sp, #32]
    fe20:	ldr	w0, [sp, #44]
    fe24:	bl	fbcc <GOMP_loop_doacross_static_start@@GOMP_4.5>
    fe28:	and	w0, w0, #0xff
    fe2c:	b	feac <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x10c>
    fe30:	ldr	x0, [sp, #56]
    fe34:	ldr	w0, [x0, #12]
    fe38:	sxtw	x0, w0
    fe3c:	ldr	x4, [sp, #16]
    fe40:	ldr	x3, [sp, #24]
    fe44:	mov	x2, x0
    fe48:	ldr	x1, [sp, #32]
    fe4c:	ldr	w0, [sp, #44]
    fe50:	bl	fc70 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5>
    fe54:	and	w0, w0, #0xff
    fe58:	b	feac <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x10c>
    fe5c:	ldr	x0, [sp, #56]
    fe60:	ldr	w0, [x0, #12]
    fe64:	sxtw	x0, w0
    fe68:	ldr	x4, [sp, #16]
    fe6c:	ldr	x3, [sp, #24]
    fe70:	mov	x2, x0
    fe74:	ldr	x1, [sp, #32]
    fe78:	ldr	w0, [sp, #44]
    fe7c:	bl	fd08 <GOMP_loop_doacross_guided_start@@GOMP_4.5>
    fe80:	and	w0, w0, #0xff
    fe84:	b	feac <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x10c>
    fe88:	ldr	x4, [sp, #16]
    fe8c:	ldr	x3, [sp, #24]
    fe90:	mov	x2, #0x0                   	// #0
    fe94:	ldr	x1, [sp, #32]
    fe98:	ldr	w0, [sp, #44]
    fe9c:	bl	fbcc <GOMP_loop_doacross_static_start@@GOMP_4.5>
    fea0:	and	w0, w0, #0xff
    fea4:	b	feac <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x10c>
    fea8:	bl	8980 <abort@plt>
    feac:	ldp	x29, x30, [sp], #64
    feb0:	ret

000000000000feb4 <GOMP_loop_doacross_start@@GOMP_5.0>:
    feb4:	stp	x29, x30, [sp, #-112]!
    feb8:	mov	x29, sp
    febc:	str	w0, [sp, #76]
    fec0:	str	x1, [sp, #64]
    fec4:	str	x2, [sp, #56]
    fec8:	str	x3, [sp, #48]
    fecc:	str	x4, [sp, #40]
    fed0:	str	x5, [sp, #32]
    fed4:	str	x6, [sp, #24]
    fed8:	str	x7, [sp, #16]
    fedc:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
    fee0:	str	x0, [sp, #96]
    fee4:	ldr	x0, [sp, #96]
    fee8:	str	xzr, [x0, #72]
    feec:	ldr	x0, [sp, #24]
    fef0:	cmp	x0, #0x0
    fef4:	b.eq	fefc <GOMP_loop_doacross_start@@GOMP_5.0+0x48>  // b.none
    fef8:	bl	1d2bc <GOMP_task_reduction_remap@@GOMP_5.0+0xadc>
    fefc:	mov	x0, #0x0                   	// #0
    ff00:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
    ff04:	and	w0, w0, #0xff
    ff08:	cmp	w0, #0x0
    ff0c:	b.eq	ffd0 <GOMP_loop_doacross_start@@GOMP_5.0+0x11c>  // b.none
    ff10:	str	xzr, [sp, #104]
    ff14:	ldr	x0, [sp, #16]
    ff18:	cmp	x0, #0x0
    ff1c:	b.eq	ff2c <GOMP_loop_doacross_start@@GOMP_5.0+0x78>  // b.none
    ff20:	ldr	x0, [sp, #16]
    ff24:	ldr	x0, [x0]
    ff28:	str	x0, [sp, #104]
    ff2c:	add	x0, sp, #0x30
    ff30:	mov	x1, x0
    ff34:	ldr	x0, [sp, #56]
    ff38:	bl	f32c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x128>
    ff3c:	str	x0, [sp, #56]
    ff40:	ldr	x0, [sp, #96]
    ff44:	ldr	x6, [x0, #24]
    ff48:	ldr	x0, [sp, #64]
    ff4c:	ldr	x0, [x0]
    ff50:	ldr	x1, [sp, #56]
    ff54:	mov	w2, w1
    ff58:	ldr	x1, [sp, #48]
    ff5c:	mov	x5, x1
    ff60:	mov	w4, w2
    ff64:	mov	x3, #0x1                   	// #1
    ff68:	mov	x2, x0
    ff6c:	mov	x1, #0x0                   	// #0
    ff70:	mov	x0, x6
    ff74:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
    ff78:	ldr	x0, [sp, #48]
    ff7c:	ldr	x3, [sp, #104]
    ff80:	mov	x2, x0
    ff84:	ldr	x1, [sp, #64]
    ff88:	ldr	w0, [sp, #76]
    ff8c:	bl	125b4 <GOMP_ordered_end@@GOMP_1.0+0x8>
    ff90:	ldr	x0, [sp, #24]
    ff94:	cmp	x0, #0x0
    ff98:	b.eq	ffc8 <GOMP_loop_doacross_start@@GOMP_5.0+0x114>  // b.none
    ff9c:	ldr	x0, [sp, #24]
    ffa0:	bl	1c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    ffa4:	ldr	x0, [sp, #96]
    ffa8:	ldr	x0, [x0, #80]
    ffac:	ldr	x0, [x0, #40]
    ffb0:	mov	w1, #0x1                   	// #1
    ffb4:	strb	w1, [x0, #50]
    ffb8:	ldr	x0, [sp, #96]
    ffbc:	ldr	x0, [x0, #24]
    ffc0:	ldr	x1, [sp, #24]
    ffc4:	str	x1, [x0, #88]
    ffc8:	bl	ee08 <omp_is_initial_device@@OMP_4.0+0x16c0>
    ffcc:	b	1000c <GOMP_loop_doacross_start@@GOMP_5.0+0x158>
    ffd0:	ldr	x0, [sp, #24]
    ffd4:	cmp	x0, #0x0
    ffd8:	b.eq	fff8 <GOMP_loop_doacross_start@@GOMP_5.0+0x144>  // b.none
    ffdc:	ldr	x0, [sp, #96]
    ffe0:	ldr	x0, [x0, #24]
    ffe4:	ldr	x0, [x0, #88]
    ffe8:	str	x0, [sp, #88]
    ffec:	ldr	x1, [sp, #88]
    fff0:	ldr	x0, [sp, #24]
    fff4:	bl	1cf34 <GOMP_task_reduction_remap@@GOMP_5.0+0x754>
    fff8:	ldr	x0, [sp, #96]
    fffc:	ldr	x0, [x0, #24]
   10000:	ldr	w0, [x0]
   10004:	mov	w0, w0
   10008:	str	x0, [sp, #56]
   1000c:	ldr	x0, [sp, #16]
   10010:	cmp	x0, #0x0
   10014:	b.eq	10030 <GOMP_loop_doacross_start@@GOMP_5.0+0x17c>  // b.none
   10018:	ldr	x0, [sp, #96]
   1001c:	ldr	x0, [x0, #24]
   10020:	ldr	x0, [x0, #32]
   10024:	ldr	x1, [x0, #48]
   10028:	ldr	x0, [sp, #16]
   1002c:	str	x1, [x0]
   10030:	ldr	x1, [sp, #32]
   10034:	ldr	x0, [sp, #40]
   10038:	bl	100d0 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
   1003c:	and	w0, w0, #0xff
   10040:	ldp	x29, x30, [sp], #112
   10044:	ret

0000000000010048 <GOMP_loop_static_next@@GOMP_1.0>:
   10048:	stp	x29, x30, [sp, #-32]!
   1004c:	mov	x29, sp
   10050:	str	x0, [sp, #24]
   10054:	str	x1, [sp, #16]
   10058:	ldr	x1, [sp, #16]
   1005c:	ldr	x0, [sp, #24]
   10060:	bl	d764 <omp_is_initial_device@@OMP_4.0+0x1c>
   10064:	cmp	w0, #0x0
   10068:	cset	w0, eq  // eq = none
   1006c:	and	w0, w0, #0xff
   10070:	ldp	x29, x30, [sp], #32
   10074:	ret

0000000000010078 <GOMP_loop_dynamic_next@@GOMP_1.0>:
   10078:	stp	x29, x30, [sp, #-48]!
   1007c:	mov	x29, sp
   10080:	str	x0, [sp, #24]
   10084:	str	x1, [sp, #16]
   10088:	ldr	x1, [sp, #16]
   1008c:	ldr	x0, [sp, #24]
   10090:	bl	dc34 <omp_is_initial_device@@OMP_4.0+0x4ec>
   10094:	strb	w0, [sp, #47]
   10098:	ldrb	w0, [sp, #47]
   1009c:	ldp	x29, x30, [sp], #48
   100a0:	ret

00000000000100a4 <GOMP_loop_guided_next@@GOMP_1.0>:
   100a4:	stp	x29, x30, [sp, #-48]!
   100a8:	mov	x29, sp
   100ac:	str	x0, [sp, #24]
   100b0:	str	x1, [sp, #16]
   100b4:	ldr	x1, [sp, #16]
   100b8:	ldr	x0, [sp, #24]
   100bc:	bl	dfd8 <omp_is_initial_device@@OMP_4.0+0x890>
   100c0:	strb	w0, [sp, #47]
   100c4:	ldrb	w0, [sp, #47]
   100c8:	ldp	x29, x30, [sp], #48
   100cc:	ret

00000000000100d0 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
   100d0:	stp	x29, x30, [sp, #-48]!
   100d4:	mov	x29, sp
   100d8:	str	x0, [sp, #24]
   100dc:	str	x1, [sp, #16]
   100e0:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
   100e4:	str	x0, [sp, #40]
   100e8:	ldr	x0, [sp, #40]
   100ec:	ldr	x0, [x0, #24]
   100f0:	ldr	w0, [x0]
   100f4:	cmp	w0, #0x4
   100f8:	b.eq	10128 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x58>  // b.none
   100fc:	cmp	w0, #0x4
   10100:	b.hi	10164 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x94>  // b.pmore
   10104:	cmp	w0, #0x3
   10108:	b.eq	10150 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x80>  // b.none
   1010c:	cmp	w0, #0x3
   10110:	b.hi	10164 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x94>  // b.pmore
   10114:	cmp	w0, #0x1
   10118:	b.eq	10128 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x58>  // b.none
   1011c:	cmp	w0, #0x2
   10120:	b.eq	1013c <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x6c>  // b.none
   10124:	b	10164 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x94>
   10128:	ldr	x1, [sp, #16]
   1012c:	ldr	x0, [sp, #24]
   10130:	bl	10048 <GOMP_loop_static_next@@GOMP_1.0>
   10134:	and	w0, w0, #0xff
   10138:	b	10168 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x98>
   1013c:	ldr	x1, [sp, #16]
   10140:	ldr	x0, [sp, #24]
   10144:	bl	10078 <GOMP_loop_dynamic_next@@GOMP_1.0>
   10148:	and	w0, w0, #0xff
   1014c:	b	10168 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x98>
   10150:	ldr	x1, [sp, #16]
   10154:	ldr	x0, [sp, #24]
   10158:	bl	100a4 <GOMP_loop_guided_next@@GOMP_1.0>
   1015c:	and	w0, w0, #0xff
   10160:	b	10168 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x98>
   10164:	bl	8980 <abort@plt>
   10168:	ldp	x29, x30, [sp], #48
   1016c:	ret

0000000000010170 <GOMP_loop_ordered_static_next@@GOMP_1.0>:
   10170:	stp	x29, x30, [sp, #-48]!
   10174:	mov	x29, sp
   10178:	str	x0, [sp, #24]
   1017c:	str	x1, [sp, #16]
   10180:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
   10184:	str	x0, [sp, #40]
   10188:	bl	12508 <GOMP_ordered_start@@GOMP_1.0>
   1018c:	ldr	x0, [sp, #40]
   10190:	ldr	x0, [x0, #24]
   10194:	add	x0, x0, #0x40
   10198:	bl	ec98 <omp_is_initial_device@@OMP_4.0+0x1550>
   1019c:	ldr	x1, [sp, #16]
   101a0:	ldr	x0, [sp, #24]
   101a4:	bl	d764 <omp_is_initial_device@@OMP_4.0+0x1c>
   101a8:	str	w0, [sp, #36]
   101ac:	ldr	w0, [sp, #36]
   101b0:	cmp	w0, #0x0
   101b4:	b.lt	101bc <GOMP_loop_ordered_static_next@@GOMP_1.0+0x4c>  // b.tstop
   101b8:	bl	1244c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x5e4>
   101bc:	ldr	x0, [sp, #40]
   101c0:	ldr	x0, [x0, #24]
   101c4:	add	x0, x0, #0x40
   101c8:	bl	ed0c <omp_is_initial_device@@OMP_4.0+0x15c4>
   101cc:	ldr	w0, [sp, #36]
   101d0:	cmp	w0, #0x0
   101d4:	cset	w0, eq  // eq = none
   101d8:	and	w0, w0, #0xff
   101dc:	ldp	x29, x30, [sp], #48
   101e0:	ret

00000000000101e4 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0>:
   101e4:	stp	x29, x30, [sp, #-48]!
   101e8:	mov	x29, sp
   101ec:	str	x0, [sp, #24]
   101f0:	str	x1, [sp, #16]
   101f4:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
   101f8:	str	x0, [sp, #40]
   101fc:	bl	12508 <GOMP_ordered_start@@GOMP_1.0>
   10200:	ldr	x0, [sp, #40]
   10204:	ldr	x0, [x0, #24]
   10208:	add	x0, x0, #0x40
   1020c:	bl	ec98 <omp_is_initial_device@@OMP_4.0+0x1550>
   10210:	ldr	x1, [sp, #16]
   10214:	ldr	x0, [sp, #24]
   10218:	bl	db44 <omp_is_initial_device@@OMP_4.0+0x3fc>
   1021c:	strb	w0, [sp, #39]
   10220:	ldrb	w0, [sp, #39]
   10224:	cmp	w0, #0x0
   10228:	b.eq	10234 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x50>  // b.none
   1022c:	bl	12278 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x410>
   10230:	b	10238 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x54>
   10234:	bl	12188 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x320>
   10238:	ldr	x0, [sp, #40]
   1023c:	ldr	x0, [x0, #24]
   10240:	add	x0, x0, #0x40
   10244:	bl	ed0c <omp_is_initial_device@@OMP_4.0+0x15c4>
   10248:	ldrb	w0, [sp, #39]
   1024c:	ldp	x29, x30, [sp], #48
   10250:	ret

0000000000010254 <GOMP_loop_ordered_guided_next@@GOMP_1.0>:
   10254:	stp	x29, x30, [sp, #-48]!
   10258:	mov	x29, sp
   1025c:	str	x0, [sp, #24]
   10260:	str	x1, [sp, #16]
   10264:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
   10268:	str	x0, [sp, #40]
   1026c:	bl	12508 <GOMP_ordered_start@@GOMP_1.0>
   10270:	ldr	x0, [sp, #40]
   10274:	ldr	x0, [x0, #24]
   10278:	add	x0, x0, #0x40
   1027c:	bl	ec98 <omp_is_initial_device@@OMP_4.0+0x1550>
   10280:	ldr	x1, [sp, #16]
   10284:	ldr	x0, [sp, #24]
   10288:	bl	de88 <omp_is_initial_device@@OMP_4.0+0x740>
   1028c:	strb	w0, [sp, #39]
   10290:	ldrb	w0, [sp, #39]
   10294:	cmp	w0, #0x0
   10298:	b.eq	102a4 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x50>  // b.none
   1029c:	bl	12278 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x410>
   102a0:	b	102a8 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x54>
   102a4:	bl	12188 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x320>
   102a8:	ldr	x0, [sp, #40]
   102ac:	ldr	x0, [x0, #24]
   102b0:	add	x0, x0, #0x40
   102b4:	bl	ed0c <omp_is_initial_device@@OMP_4.0+0x15c4>
   102b8:	ldrb	w0, [sp, #39]
   102bc:	ldp	x29, x30, [sp], #48
   102c0:	ret

00000000000102c4 <GOMP_loop_ordered_runtime_next@@GOMP_1.0>:
   102c4:	stp	x29, x30, [sp, #-48]!
   102c8:	mov	x29, sp
   102cc:	str	x0, [sp, #24]
   102d0:	str	x1, [sp, #16]
   102d4:	bl	eda0 <omp_is_initial_device@@OMP_4.0+0x1658>
   102d8:	str	x0, [sp, #40]
   102dc:	ldr	x0, [sp, #40]
   102e0:	ldr	x0, [x0, #24]
   102e4:	ldr	w0, [x0]
   102e8:	cmp	w0, #0x4
   102ec:	b.eq	1031c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x58>  // b.none
   102f0:	cmp	w0, #0x4
   102f4:	b.hi	10358 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x94>  // b.pmore
   102f8:	cmp	w0, #0x3
   102fc:	b.eq	10344 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x80>  // b.none
   10300:	cmp	w0, #0x3
   10304:	b.hi	10358 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x94>  // b.pmore
   10308:	cmp	w0, #0x1
   1030c:	b.eq	1031c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x58>  // b.none
   10310:	cmp	w0, #0x2
   10314:	b.eq	10330 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x6c>  // b.none
   10318:	b	10358 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x94>
   1031c:	ldr	x1, [sp, #16]
   10320:	ldr	x0, [sp, #24]
   10324:	bl	10170 <GOMP_loop_ordered_static_next@@GOMP_1.0>
   10328:	and	w0, w0, #0xff
   1032c:	b	1035c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x98>
   10330:	ldr	x1, [sp, #16]
   10334:	ldr	x0, [sp, #24]
   10338:	bl	101e4 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0>
   1033c:	and	w0, w0, #0xff
   10340:	b	1035c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x98>
   10344:	ldr	x1, [sp, #16]
   10348:	ldr	x0, [sp, #24]
   1034c:	bl	10254 <GOMP_loop_ordered_guided_next@@GOMP_1.0>
   10350:	and	w0, w0, #0xff
   10354:	b	1035c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x98>
   10358:	bl	8980 <abort@plt>
   1035c:	ldp	x29, x30, [sp], #48
   10360:	ret
   10364:	stp	x29, x30, [sp, #-96]!
   10368:	mov	x29, sp
   1036c:	str	x0, [sp, #72]
   10370:	str	x1, [sp, #64]
   10374:	str	w2, [sp, #60]
   10378:	str	x3, [sp, #48]
   1037c:	str	x4, [sp, #40]
   10380:	str	x5, [sp, #32]
   10384:	str	w6, [sp, #56]
   10388:	str	x7, [sp, #24]
   1038c:	mov	w1, #0x0                   	// #0
   10390:	ldr	w0, [sp, #60]
   10394:	bl	13de4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x5c8>
   10398:	str	w0, [sp, #60]
   1039c:	ldr	w0, [sp, #60]
   103a0:	bl	1dafc <omp_in_final@@OMP_3.1+0x730>
   103a4:	str	x0, [sp, #88]
   103a8:	ldr	x0, [sp, #88]
   103ac:	add	x0, x0, #0x100
   103b0:	ldr	x5, [sp, #24]
   103b4:	ldr	w4, [sp, #56]
   103b8:	ldr	x3, [sp, #32]
   103bc:	ldr	x2, [sp, #40]
   103c0:	ldr	x1, [sp, #48]
   103c4:	bl	ee64 <omp_is_initial_device@@OMP_4.0+0x171c>
   103c8:	mov	x5, #0x0                   	// #0
   103cc:	ldr	x4, [sp, #88]
   103d0:	ldr	w3, [sp, #96]
   103d4:	ldr	w2, [sp, #60]
   103d8:	ldr	x1, [sp, #64]
   103dc:	ldr	x0, [sp, #72]
   103e0:	bl	1deec <omp_in_final@@OMP_3.1+0xb20>
   103e4:	nop
   103e8:	ldp	x29, x30, [sp], #96
   103ec:	ret

00000000000103f0 <GOMP_parallel_loop_static_start@@GOMP_1.0>:
   103f0:	sub	sp, sp, #0x60
   103f4:	stp	x29, x30, [sp, #16]
   103f8:	add	x29, sp, #0x10
   103fc:	str	x0, [sp, #88]
   10400:	str	x1, [sp, #80]
   10404:	str	w2, [sp, #76]
   10408:	str	x3, [sp, #64]
   1040c:	str	x4, [sp, #56]
   10410:	str	x5, [sp, #48]
   10414:	str	x6, [sp, #40]
   10418:	str	wzr, [sp]
   1041c:	ldr	x7, [sp, #40]
   10420:	mov	w6, #0x1                   	// #1
   10424:	ldr	x5, [sp, #48]
   10428:	ldr	x4, [sp, #56]
   1042c:	ldr	x3, [sp, #64]
   10430:	ldr	w2, [sp, #76]
   10434:	ldr	x1, [sp, #80]
   10438:	ldr	x0, [sp, #88]
   1043c:	bl	10364 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xa0>
   10440:	nop
   10444:	ldp	x29, x30, [sp, #16]
   10448:	add	sp, sp, #0x60
   1044c:	ret

0000000000010450 <GOMP_parallel_loop_dynamic_start@@GOMP_1.0>:
   10450:	sub	sp, sp, #0x60
   10454:	stp	x29, x30, [sp, #16]
   10458:	add	x29, sp, #0x10
   1045c:	str	x0, [sp, #88]
   10460:	str	x1, [sp, #80]
   10464:	str	w2, [sp, #76]
   10468:	str	x3, [sp, #64]
   1046c:	str	x4, [sp, #56]
   10470:	str	x5, [sp, #48]
   10474:	str	x6, [sp, #40]
   10478:	str	wzr, [sp]
   1047c:	ldr	x7, [sp, #40]
   10480:	mov	w6, #0x2                   	// #2
   10484:	ldr	x5, [sp, #48]
   10488:	ldr	x4, [sp, #56]
   1048c:	ldr	x3, [sp, #64]
   10490:	ldr	w2, [sp, #76]
   10494:	ldr	x1, [sp, #80]
   10498:	ldr	x0, [sp, #88]
   1049c:	bl	10364 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xa0>
   104a0:	nop
   104a4:	ldp	x29, x30, [sp, #16]
   104a8:	add	sp, sp, #0x60
   104ac:	ret

00000000000104b0 <GOMP_parallel_loop_guided_start@@GOMP_1.0>:
   104b0:	sub	sp, sp, #0x60
   104b4:	stp	x29, x30, [sp, #16]
   104b8:	add	x29, sp, #0x10
   104bc:	str	x0, [sp, #88]
   104c0:	str	x1, [sp, #80]
   104c4:	str	w2, [sp, #76]
   104c8:	str	x3, [sp, #64]
   104cc:	str	x4, [sp, #56]
   104d0:	str	x5, [sp, #48]
   104d4:	str	x6, [sp, #40]
   104d8:	str	wzr, [sp]
   104dc:	ldr	x7, [sp, #40]
   104e0:	mov	w6, #0x3                   	// #3
   104e4:	ldr	x5, [sp, #48]
   104e8:	ldr	x4, [sp, #56]
   104ec:	ldr	x3, [sp, #64]
   104f0:	ldr	w2, [sp, #76]
   104f4:	ldr	x1, [sp, #80]
   104f8:	ldr	x0, [sp, #88]
   104fc:	bl	10364 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xa0>
   10500:	nop
   10504:	ldp	x29, x30, [sp, #16]
   10508:	add	sp, sp, #0x60
   1050c:	ret

0000000000010510 <GOMP_parallel_loop_runtime_start@@GOMP_1.0>:
   10510:	sub	sp, sp, #0x60
   10514:	stp	x29, x30, [sp, #16]
   10518:	add	x29, sp, #0x10
   1051c:	str	x0, [sp, #72]
   10520:	str	x1, [sp, #64]
   10524:	str	w2, [sp, #60]
   10528:	str	x3, [sp, #48]
   1052c:	str	x4, [sp, #40]
   10530:	str	x5, [sp, #32]
   10534:	mov	w0, #0x0                   	// #0
   10538:	bl	edb4 <omp_is_initial_device@@OMP_4.0+0x166c>
   1053c:	str	x0, [sp, #88]
   10540:	ldr	x0, [sp, #88]
   10544:	ldr	w0, [x0, #8]
   10548:	and	w1, w0, #0x7fffffff
   1054c:	ldr	x0, [sp, #88]
   10550:	ldr	w0, [x0, #12]
   10554:	sxtw	x0, w0
   10558:	str	wzr, [sp]
   1055c:	mov	x7, x0
   10560:	mov	w6, w1
   10564:	ldr	x5, [sp, #32]
   10568:	ldr	x4, [sp, #40]
   1056c:	ldr	x3, [sp, #48]
   10570:	ldr	w2, [sp, #60]
   10574:	ldr	x1, [sp, #64]
   10578:	ldr	x0, [sp, #72]
   1057c:	bl	10364 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xa0>
   10580:	nop
   10584:	ldp	x29, x30, [sp, #16]
   10588:	add	sp, sp, #0x60
   1058c:	ret

0000000000010590 <GOMP_parallel_loop_static@@GOMP_4.0>:
   10590:	sub	sp, sp, #0x60
   10594:	stp	x29, x30, [sp, #16]
   10598:	add	x29, sp, #0x10
   1059c:	str	x0, [sp, #88]
   105a0:	str	x1, [sp, #80]
   105a4:	str	w2, [sp, #76]
   105a8:	str	x3, [sp, #64]
   105ac:	str	x4, [sp, #56]
   105b0:	str	x5, [sp, #48]
   105b4:	str	x6, [sp, #40]
   105b8:	str	w7, [sp, #72]
   105bc:	ldr	w0, [sp, #72]
   105c0:	str	w0, [sp]
   105c4:	ldr	x7, [sp, #40]
   105c8:	mov	w6, #0x1                   	// #1
   105cc:	ldr	x5, [sp, #48]
   105d0:	ldr	x4, [sp, #56]
   105d4:	ldr	x3, [sp, #64]
   105d8:	ldr	w2, [sp, #76]
   105dc:	ldr	x1, [sp, #80]
   105e0:	ldr	x0, [sp, #88]
   105e4:	bl	10364 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xa0>
   105e8:	ldr	x1, [sp, #88]
   105ec:	ldr	x0, [sp, #80]
   105f0:	blr	x1
   105f4:	bl	14088 <GOMP_parallel_end@@GOMP_1.0>
   105f8:	nop
   105fc:	ldp	x29, x30, [sp, #16]
   10600:	add	sp, sp, #0x60
   10604:	ret

0000000000010608 <GOMP_parallel_loop_dynamic@@GOMP_4.0>:
   10608:	sub	sp, sp, #0x60
   1060c:	stp	x29, x30, [sp, #16]
   10610:	add	x29, sp, #0x10
   10614:	str	x0, [sp, #88]
   10618:	str	x1, [sp, #80]
   1061c:	str	w2, [sp, #76]
   10620:	str	x3, [sp, #64]
   10624:	str	x4, [sp, #56]
   10628:	str	x5, [sp, #48]
   1062c:	str	x6, [sp, #40]
   10630:	str	w7, [sp, #72]
   10634:	ldr	w0, [sp, #72]
   10638:	str	w0, [sp]
   1063c:	ldr	x7, [sp, #40]
   10640:	mov	w6, #0x2                   	// #2
   10644:	ldr	x5, [sp, #48]
   10648:	ldr	x4, [sp, #56]
   1064c:	ldr	x3, [sp, #64]
   10650:	ldr	w2, [sp, #76]
   10654:	ldr	x1, [sp, #80]
   10658:	ldr	x0, [sp, #88]
   1065c:	bl	10364 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xa0>
   10660:	ldr	x1, [sp, #88]
   10664:	ldr	x0, [sp, #80]
   10668:	blr	x1
   1066c:	bl	14088 <GOMP_parallel_end@@GOMP_1.0>
   10670:	nop
   10674:	ldp	x29, x30, [sp, #16]
   10678:	add	sp, sp, #0x60
   1067c:	ret

0000000000010680 <GOMP_parallel_loop_guided@@GOMP_4.0>:
   10680:	sub	sp, sp, #0x60
   10684:	stp	x29, x30, [sp, #16]
   10688:	add	x29, sp, #0x10
   1068c:	str	x0, [sp, #88]
   10690:	str	x1, [sp, #80]
   10694:	str	w2, [sp, #76]
   10698:	str	x3, [sp, #64]
   1069c:	str	x4, [sp, #56]
   106a0:	str	x5, [sp, #48]
   106a4:	str	x6, [sp, #40]
   106a8:	str	w7, [sp, #72]
   106ac:	ldr	w0, [sp, #72]
   106b0:	str	w0, [sp]
   106b4:	ldr	x7, [sp, #40]
   106b8:	mov	w6, #0x3                   	// #3
   106bc:	ldr	x5, [sp, #48]
   106c0:	ldr	x4, [sp, #56]
   106c4:	ldr	x3, [sp, #64]
   106c8:	ldr	w2, [sp, #76]
   106cc:	ldr	x1, [sp, #80]
   106d0:	ldr	x0, [sp, #88]
   106d4:	bl	10364 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xa0>
   106d8:	ldr	x1, [sp, #88]
   106dc:	ldr	x0, [sp, #80]
   106e0:	blr	x1
   106e4:	bl	14088 <GOMP_parallel_end@@GOMP_1.0>
   106e8:	nop
   106ec:	ldp	x29, x30, [sp, #16]
   106f0:	add	sp, sp, #0x60
   106f4:	ret

00000000000106f8 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0>:
   106f8:	sub	sp, sp, #0x60
   106fc:	stp	x29, x30, [sp, #16]
   10700:	add	x29, sp, #0x10
   10704:	str	x0, [sp, #72]
   10708:	str	x1, [sp, #64]
   1070c:	str	w2, [sp, #60]
   10710:	str	x3, [sp, #48]
   10714:	str	x4, [sp, #40]
   10718:	str	x5, [sp, #32]
   1071c:	str	w6, [sp, #56]
   10720:	mov	w0, #0x0                   	// #0
   10724:	bl	edb4 <omp_is_initial_device@@OMP_4.0+0x166c>
   10728:	str	x0, [sp, #88]
   1072c:	ldr	x0, [sp, #88]
   10730:	ldr	w0, [x0, #8]
   10734:	and	w1, w0, #0x7fffffff
   10738:	ldr	x0, [sp, #88]
   1073c:	ldr	w0, [x0, #12]
   10740:	sxtw	x2, w0
   10744:	ldr	w0, [sp, #56]
   10748:	str	w0, [sp]
   1074c:	mov	x7, x2
   10750:	mov	w6, w1
   10754:	ldr	x5, [sp, #32]
   10758:	ldr	x4, [sp, #40]
   1075c:	ldr	x3, [sp, #48]
   10760:	ldr	w2, [sp, #60]
   10764:	ldr	x1, [sp, #64]
   10768:	ldr	x0, [sp, #72]
   1076c:	bl	10364 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0xa0>
   10770:	ldr	x1, [sp, #72]
   10774:	ldr	x0, [sp, #64]
   10778:	blr	x1
   1077c:	bl	14088 <GOMP_parallel_end@@GOMP_1.0>
   10780:	nop
   10784:	ldp	x29, x30, [sp, #16]
   10788:	add	sp, sp, #0x60
   1078c:	ret

0000000000010790 <GOMP_loop_end@@GOMP_1.0>:
   10790:	stp	x29, x30, [sp, #-16]!
   10794:	mov	x29, sp
   10798:	bl	20268 <omp_in_final@@OMP_3.1+0x2e9c>
   1079c:	nop
   107a0:	ldp	x29, x30, [sp], #16
   107a4:	ret

00000000000107a8 <GOMP_loop_end_cancel@@GOMP_4.0>:
   107a8:	stp	x29, x30, [sp, #-16]!
   107ac:	mov	x29, sp
   107b0:	bl	20338 <omp_in_final@@OMP_3.1+0x2f6c>
   107b4:	and	w0, w0, #0xff
   107b8:	ldp	x29, x30, [sp], #16
   107bc:	ret

00000000000107c0 <GOMP_loop_end_nowait@@GOMP_1.0>:
   107c0:	stp	x29, x30, [sp, #-16]!
   107c4:	mov	x29, sp
   107c8:	bl	203e0 <omp_in_final@@OMP_3.1+0x3014>
   107cc:	nop
   107d0:	ldp	x29, x30, [sp], #16
   107d4:	ret
   107d8:	stp	x29, x30, [sp, #-48]!
   107dc:	mov	x29, sp
   107e0:	str	x0, [sp, #24]
   107e4:	str	wzr, [sp, #44]
   107e8:	ldr	x1, [sp, #24]
   107ec:	add	x0, sp, #0x2c
   107f0:	ldr	w3, [x0]
   107f4:	mov	w4, #0x1                   	// #1
   107f8:	ldaxr	w2, [x1]
   107fc:	cmp	w2, w3
   10800:	b.ne	1080c <GOMP_loop_end_nowait@@GOMP_1.0+0x4c>  // b.any
   10804:	stxr	w5, w4, [x1]
   10808:	cbnz	w5, 107f8 <GOMP_loop_end_nowait@@GOMP_1.0+0x38>
   1080c:	cset	w1, eq  // eq = none
   10810:	cmp	w1, #0x0
   10814:	b.ne	1081c <GOMP_loop_end_nowait@@GOMP_1.0+0x5c>  // b.any
   10818:	str	w2, [x0]
   1081c:	mov	w0, w1
   10820:	eor	w0, w0, #0x1
   10824:	and	w0, w0, #0xff
   10828:	cmp	w0, #0x0
   1082c:	b.eq	10840 <GOMP_loop_end_nowait@@GOMP_1.0+0x80>  // b.none
   10830:	ldr	w0, [sp, #44]
   10834:	mov	w1, w0
   10838:	ldr	x0, [sp, #24]
   1083c:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
   10840:	nop
   10844:	ldp	x29, x30, [sp], #48
   10848:	ret
   1084c:	stp	x29, x30, [sp, #-48]!
   10850:	mov	x29, sp
   10854:	str	x0, [sp, #24]
   10858:	ldr	x1, [sp, #24]
   1085c:	ldxr	w0, [x1]
   10860:	stlxr	w2, wzr, [x1]
   10864:	cbnz	w2, 1085c <GOMP_loop_end_nowait@@GOMP_1.0+0x9c>
   10868:	str	w0, [sp, #44]
   1086c:	ldr	w0, [sp, #44]
   10870:	lsr	w0, w0, #31
   10874:	and	w0, w0, #0xff
   10878:	and	x0, x0, #0xff
   1087c:	cmp	x0, #0x0
   10880:	b.eq	1088c <GOMP_loop_end_nowait@@GOMP_1.0+0xcc>  // b.none
   10884:	ldr	x0, [sp, #24]
   10888:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
   1088c:	nop
   10890:	ldp	x29, x30, [sp], #48
   10894:	ret
   10898:	stp	x29, x30, [sp, #-48]!
   1089c:	mov	x29, sp
   108a0:	str	x0, [sp, #24]
   108a4:	str	x1, [sp, #16]
   108a8:	ldr	x2, [sp, #16]
   108ac:	ldr	x1, [sp, #24]
   108b0:	ldxr	x0, [x1]
   108b4:	stlxr	w3, x2, [x1]
   108b8:	cbnz	w3, 108b0 <GOMP_loop_end_nowait@@GOMP_1.0+0xf0>
   108bc:	str	x0, [sp, #40]
   108c0:	ldr	x0, [sp, #40]
   108c4:	cmp	x0, #0x1
   108c8:	b.eq	108d4 <GOMP_loop_end_nowait@@GOMP_1.0+0x114>  // b.none
   108cc:	ldr	x0, [sp, #24]
   108d0:	bl	22790 <omp_get_num_procs@@OMP_1.0+0x1134>
   108d4:	nop
   108d8:	ldp	x29, x30, [sp], #48
   108dc:	ret
   108e0:	mrs	x1, tpidr_el0
   108e4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   108e8:	ldr	x0, [x0, #4016]
   108ec:	add	x0, x1, x0
   108f0:	ret
   108f4:	stp	x29, x30, [sp, #-48]!
   108f8:	mov	x29, sp
   108fc:	strb	w0, [sp, #31]
   10900:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   10904:	ldr	x0, [x0, #80]
   10908:	str	x0, [sp, #40]
   1090c:	ldr	x0, [sp, #40]
   10910:	cmp	x0, #0x0
   10914:	b.eq	10924 <GOMP_loop_end_nowait@@GOMP_1.0+0x164>  // b.none
   10918:	ldr	x0, [sp, #40]
   1091c:	add	x0, x0, #0x90
   10920:	b	10940 <GOMP_loop_end_nowait@@GOMP_1.0+0x180>
   10924:	ldrb	w0, [sp, #31]
   10928:	cmp	w0, #0x0
   1092c:	b.eq	10938 <GOMP_loop_end_nowait@@GOMP_1.0+0x178>  // b.none
   10930:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
   10934:	b	10940 <GOMP_loop_end_nowait@@GOMP_1.0+0x180>
   10938:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1093c:	add	x0, x0, #0x2d8
   10940:	ldp	x29, x30, [sp], #48
   10944:	ret
   10948:	stp	x29, x30, [sp, #-32]!
   1094c:	mov	x29, sp
   10950:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   10954:	str	x0, [sp, #24]
   10958:	ldr	x0, [sp, #24]
   1095c:	ldr	x0, [x0, #32]
   10960:	cmp	x0, #0x0
   10964:	cset	w0, ne  // ne = any
   10968:	and	w0, w0, #0xff
   1096c:	and	x0, x0, #0xff
   10970:	cmp	x0, #0x0
   10974:	b.eq	10998 <GOMP_loop_end_nowait@@GOMP_1.0+0x1d8>  // b.none
   10978:	ldr	x0, [sp, #24]
   1097c:	ldr	x0, [x0, #32]
   10980:	add	x2, x0, #0x50
   10984:	ldr	x0, [sp, #24]
   10988:	ldr	x0, [x0, #24]
   1098c:	mov	x1, x0
   10990:	mov	x0, x2
   10994:	bl	10898 <GOMP_loop_end_nowait@@GOMP_1.0+0xd8>
   10998:	nop
   1099c:	ldp	x29, x30, [sp], #32
   109a0:	ret
   109a4:	stp	x29, x30, [sp, #-96]!
   109a8:	mov	x29, sp
   109ac:	str	x0, [sp, #56]
   109b0:	strb	w1, [sp, #55]
   109b4:	str	x2, [sp, #40]
   109b8:	str	x3, [sp, #32]
   109bc:	str	x4, [sp, #24]
   109c0:	str	w5, [sp, #48]
   109c4:	str	x6, [sp, #16]
   109c8:	ldr	x0, [sp, #56]
   109cc:	ldr	w1, [sp, #48]
   109d0:	str	w1, [x0]
   109d4:	ldr	x0, [sp, #56]
   109d8:	ldr	x1, [sp, #16]
   109dc:	str	x1, [x0, #8]
   109e0:	ldrb	w0, [sp, #55]
   109e4:	cmp	w0, #0x0
   109e8:	b.eq	109fc <GOMP_loop_end_nowait@@GOMP_1.0+0x23c>  // b.none
   109ec:	ldr	x1, [sp, #40]
   109f0:	ldr	x0, [sp, #32]
   109f4:	cmp	x1, x0
   109f8:	b.hi	10a20 <GOMP_loop_end_nowait@@GOMP_1.0+0x260>  // b.pmore
   109fc:	ldrb	w0, [sp, #55]
   10a00:	eor	w0, w0, #0x1
   10a04:	and	w0, w0, #0xff
   10a08:	cmp	w0, #0x0
   10a0c:	b.eq	10a28 <GOMP_loop_end_nowait@@GOMP_1.0+0x268>  // b.none
   10a10:	ldr	x1, [sp, #40]
   10a14:	ldr	x0, [sp, #32]
   10a18:	cmp	x1, x0
   10a1c:	b.cs	10a28 <GOMP_loop_end_nowait@@GOMP_1.0+0x268>  // b.hs, b.nlast
   10a20:	ldr	x0, [sp, #40]
   10a24:	b	10a2c <GOMP_loop_end_nowait@@GOMP_1.0+0x26c>
   10a28:	ldr	x0, [sp, #32]
   10a2c:	ldr	x1, [sp, #56]
   10a30:	str	x0, [x1, #16]
   10a34:	ldr	x0, [sp, #56]
   10a38:	ldr	x1, [sp, #24]
   10a3c:	str	x1, [x0, #24]
   10a40:	ldr	x0, [sp, #56]
   10a44:	ldr	x1, [sp, #40]
   10a48:	str	x1, [x0, #72]
   10a4c:	ldr	x0, [sp, #56]
   10a50:	str	wzr, [x0, #4]
   10a54:	ldr	w0, [sp, #48]
   10a58:	cmp	w0, #0x2
   10a5c:	b.ne	10b98 <GOMP_loop_end_nowait@@GOMP_1.0+0x3d8>  // b.any
   10a60:	ldr	x0, [sp, #56]
   10a64:	ldr	x1, [x0, #8]
   10a68:	ldr	x0, [sp, #24]
   10a6c:	mul	x1, x1, x0
   10a70:	ldr	x0, [sp, #56]
   10a74:	str	x1, [x0, #8]
   10a78:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   10a7c:	str	x0, [sp, #88]
   10a80:	ldr	x0, [sp, #88]
   10a84:	ldr	x0, [x0, #16]
   10a88:	str	x0, [sp, #80]
   10a8c:	ldr	x0, [sp, #80]
   10a90:	cmp	x0, #0x0
   10a94:	b.eq	10aa8 <GOMP_loop_end_nowait@@GOMP_1.0+0x2e8>  // b.none
   10a98:	ldr	x0, [sp, #80]
   10a9c:	ldr	w0, [x0]
   10aa0:	mov	w0, w0
   10aa4:	b	10aac <GOMP_loop_end_nowait@@GOMP_1.0+0x2ec>
   10aa8:	mov	x0, #0x1                   	// #1
   10aac:	str	x0, [sp, #72]
   10ab0:	ldrb	w0, [sp, #55]
   10ab4:	cmp	x0, #0x0
   10ab8:	b.eq	10b28 <GOMP_loop_end_nowait@@GOMP_1.0+0x368>  // b.none
   10abc:	ldr	x0, [sp, #56]
   10ac0:	ldr	x1, [x0, #8]
   10ac4:	ldr	x0, [sp, #72]
   10ac8:	orr	x1, x1, x0
   10acc:	mov	x0, #0x7fffffff            	// #2147483647
   10ad0:	cmp	x1, x0
   10ad4:	cset	w0, ls  // ls = plast
   10ad8:	and	w0, w0, #0xff
   10adc:	and	x0, x0, #0xff
   10ae0:	cmp	x0, #0x0
   10ae4:	b.eq	10b98 <GOMP_loop_end_nowait@@GOMP_1.0+0x3d8>  // b.none
   10ae8:	ldr	x0, [sp, #56]
   10aec:	ldr	x1, [x0, #16]
   10af0:	ldr	x0, [sp, #72]
   10af4:	add	x0, x0, #0x1
   10af8:	mov	x2, x0
   10afc:	ldr	x0, [sp, #56]
   10b00:	ldr	x0, [x0, #8]
   10b04:	mul	x0, x2, x0
   10b08:	mvn	x0, x0
   10b0c:	cmp	x1, x0
   10b10:	cset	w0, cc  // cc = lo, ul, last
   10b14:	and	w0, w0, #0xff
   10b18:	mov	w1, w0
   10b1c:	ldr	x0, [sp, #56]
   10b20:	str	w1, [x0, #4]
   10b24:	b	10b98 <GOMP_loop_end_nowait@@GOMP_1.0+0x3d8>
   10b28:	ldr	x0, [sp, #56]
   10b2c:	ldr	x0, [x0, #8]
   10b30:	neg	x1, x0
   10b34:	ldr	x0, [sp, #72]
   10b38:	orr	x1, x1, x0
   10b3c:	mov	x0, #0x7fffffff            	// #2147483647
   10b40:	cmp	x1, x0
   10b44:	cset	w0, ls  // ls = plast
   10b48:	and	w0, w0, #0xff
   10b4c:	and	x0, x0, #0xff
   10b50:	cmp	x0, #0x0
   10b54:	b.eq	10b98 <GOMP_loop_end_nowait@@GOMP_1.0+0x3d8>  // b.none
   10b58:	ldr	x0, [sp, #56]
   10b5c:	ldr	x1, [x0, #16]
   10b60:	ldr	x0, [sp, #72]
   10b64:	add	x0, x0, #0x1
   10b68:	mov	x2, x0
   10b6c:	ldr	x0, [sp, #56]
   10b70:	ldr	x0, [x0, #8]
   10b74:	neg	x0, x0
   10b78:	mul	x0, x2, x0
   10b7c:	add	x0, x0, #0x1
   10b80:	cmp	x1, x0
   10b84:	cset	w0, hi  // hi = pmore
   10b88:	and	w0, w0, #0xff
   10b8c:	mov	w1, w0
   10b90:	ldr	x0, [sp, #56]
   10b94:	str	w1, [x0, #4]
   10b98:	ldrb	w0, [sp, #55]
   10b9c:	eor	w0, w0, #0x1
   10ba0:	and	w0, w0, #0xff
   10ba4:	cmp	w0, #0x0
   10ba8:	b.eq	10bc0 <GOMP_loop_end_nowait@@GOMP_1.0+0x400>  // b.none
   10bac:	ldr	x0, [sp, #56]
   10bb0:	ldr	w0, [x0, #4]
   10bb4:	orr	w1, w0, #0x2
   10bb8:	ldr	x0, [sp, #56]
   10bbc:	str	w1, [x0, #4]
   10bc0:	nop
   10bc4:	ldp	x29, x30, [sp], #96
   10bc8:	ret

0000000000010bcc <GOMP_loop_ull_static_start@@GOMP_2.0>:
   10bcc:	stp	x29, x30, [sp, #-96]!
   10bd0:	mov	x29, sp
   10bd4:	strb	w0, [sp, #79]
   10bd8:	str	x1, [sp, #64]
   10bdc:	str	x2, [sp, #56]
   10be0:	str	x3, [sp, #48]
   10be4:	str	x4, [sp, #40]
   10be8:	str	x5, [sp, #32]
   10bec:	str	x6, [sp, #24]
   10bf0:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   10bf4:	str	x0, [sp, #88]
   10bf8:	ldr	x0, [sp, #88]
   10bfc:	str	xzr, [x0, #72]
   10c00:	mov	x0, #0x0                   	// #0
   10c04:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   10c08:	and	w0, w0, #0xff
   10c0c:	cmp	w0, #0x0
   10c10:	b.eq	10c3c <GOMP_loop_ull_static_start@@GOMP_2.0+0x70>  // b.none
   10c14:	ldr	x0, [sp, #88]
   10c18:	ldr	x0, [x0, #24]
   10c1c:	ldr	x6, [sp, #40]
   10c20:	mov	w5, #0x1                   	// #1
   10c24:	ldr	x4, [sp, #48]
   10c28:	ldr	x3, [sp, #56]
   10c2c:	ldr	x2, [sp, #64]
   10c30:	ldrb	w1, [sp, #79]
   10c34:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   10c38:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   10c3c:	ldr	x1, [sp, #24]
   10c40:	ldr	x0, [sp, #32]
   10c44:	bl	e19c <omp_is_initial_device@@OMP_4.0+0xa54>
   10c48:	cmp	w0, #0x0
   10c4c:	cset	w0, eq  // eq = none
   10c50:	and	w0, w0, #0xff
   10c54:	ldp	x29, x30, [sp], #96
   10c58:	ret

0000000000010c5c <GOMP_loop_ull_dynamic_start@@GOMP_2.0>:
   10c5c:	stp	x29, x30, [sp, #-96]!
   10c60:	mov	x29, sp
   10c64:	strb	w0, [sp, #79]
   10c68:	str	x1, [sp, #64]
   10c6c:	str	x2, [sp, #56]
   10c70:	str	x3, [sp, #48]
   10c74:	str	x4, [sp, #40]
   10c78:	str	x5, [sp, #32]
   10c7c:	str	x6, [sp, #24]
   10c80:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   10c84:	str	x0, [sp, #88]
   10c88:	mov	x0, #0x0                   	// #0
   10c8c:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   10c90:	and	w0, w0, #0xff
   10c94:	cmp	w0, #0x0
   10c98:	b.eq	10cc4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x68>  // b.none
   10c9c:	ldr	x0, [sp, #88]
   10ca0:	ldr	x0, [x0, #24]
   10ca4:	ldr	x6, [sp, #40]
   10ca8:	mov	w5, #0x2                   	// #2
   10cac:	ldr	x4, [sp, #48]
   10cb0:	ldr	x3, [sp, #56]
   10cb4:	ldr	x2, [sp, #64]
   10cb8:	ldrb	w1, [sp, #79]
   10cbc:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   10cc0:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   10cc4:	ldr	x1, [sp, #24]
   10cc8:	ldr	x0, [sp, #32]
   10ccc:	bl	e6cc <omp_is_initial_device@@OMP_4.0+0xf84>
   10cd0:	strb	w0, [sp, #87]
   10cd4:	ldrb	w0, [sp, #87]
   10cd8:	ldp	x29, x30, [sp], #96
   10cdc:	ret

0000000000010ce0 <GOMP_loop_ull_guided_start@@GOMP_2.0>:
   10ce0:	stp	x29, x30, [sp, #-96]!
   10ce4:	mov	x29, sp
   10ce8:	strb	w0, [sp, #79]
   10cec:	str	x1, [sp, #64]
   10cf0:	str	x2, [sp, #56]
   10cf4:	str	x3, [sp, #48]
   10cf8:	str	x4, [sp, #40]
   10cfc:	str	x5, [sp, #32]
   10d00:	str	x6, [sp, #24]
   10d04:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   10d08:	str	x0, [sp, #88]
   10d0c:	mov	x0, #0x0                   	// #0
   10d10:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   10d14:	and	w0, w0, #0xff
   10d18:	cmp	w0, #0x0
   10d1c:	b.eq	10d48 <GOMP_loop_ull_guided_start@@GOMP_2.0+0x68>  // b.none
   10d20:	ldr	x0, [sp, #88]
   10d24:	ldr	x0, [x0, #24]
   10d28:	ldr	x6, [sp, #40]
   10d2c:	mov	w5, #0x3                   	// #3
   10d30:	ldr	x4, [sp, #48]
   10d34:	ldr	x3, [sp, #56]
   10d38:	ldr	x2, [sp, #64]
   10d3c:	ldrb	w1, [sp, #79]
   10d40:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   10d44:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   10d48:	ldr	x1, [sp, #24]
   10d4c:	ldr	x0, [sp, #32]
   10d50:	bl	eab4 <omp_is_initial_device@@OMP_4.0+0x136c>
   10d54:	strb	w0, [sp, #87]
   10d58:	ldrb	w0, [sp, #87]
   10d5c:	ldp	x29, x30, [sp], #96
   10d60:	ret

0000000000010d64 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
   10d64:	stp	x29, x30, [sp, #-80]!
   10d68:	mov	x29, sp
   10d6c:	strb	w0, [sp, #63]
   10d70:	str	x1, [sp, #48]
   10d74:	str	x2, [sp, #40]
   10d78:	str	x3, [sp, #32]
   10d7c:	str	x4, [sp, #24]
   10d80:	str	x5, [sp, #16]
   10d84:	mov	w0, #0x0                   	// #0
   10d88:	bl	108f4 <GOMP_loop_end_nowait@@GOMP_1.0+0x134>
   10d8c:	str	x0, [sp, #72]
   10d90:	ldr	x0, [sp, #72]
   10d94:	ldr	w0, [x0, #8]
   10d98:	and	w0, w0, #0x7fffffff
   10d9c:	cmp	w0, #0x4
   10da0:	b.eq	10e6c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x108>  // b.none
   10da4:	cmp	w0, #0x4
   10da8:	b.hi	10e94 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x130>  // b.pmore
   10dac:	cmp	w0, #0x3
   10db0:	b.eq	10e38 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xd4>  // b.none
   10db4:	cmp	w0, #0x3
   10db8:	b.hi	10e94 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x130>  // b.pmore
   10dbc:	cmp	w0, #0x1
   10dc0:	b.eq	10dd0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x6c>  // b.none
   10dc4:	cmp	w0, #0x2
   10dc8:	b.eq	10e04 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xa0>  // b.none
   10dcc:	b	10e94 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x130>
   10dd0:	ldr	x0, [sp, #72]
   10dd4:	ldr	w0, [x0, #12]
   10dd8:	sxtw	x0, w0
   10ddc:	ldr	x6, [sp, #16]
   10de0:	ldr	x5, [sp, #24]
   10de4:	mov	x4, x0
   10de8:	ldr	x3, [sp, #32]
   10dec:	ldr	x2, [sp, #40]
   10df0:	ldr	x1, [sp, #48]
   10df4:	ldrb	w0, [sp, #63]
   10df8:	bl	10bcc <GOMP_loop_ull_static_start@@GOMP_2.0>
   10dfc:	and	w0, w0, #0xff
   10e00:	b	10e98 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x134>
   10e04:	ldr	x0, [sp, #72]
   10e08:	ldr	w0, [x0, #12]
   10e0c:	sxtw	x0, w0
   10e10:	ldr	x6, [sp, #16]
   10e14:	ldr	x5, [sp, #24]
   10e18:	mov	x4, x0
   10e1c:	ldr	x3, [sp, #32]
   10e20:	ldr	x2, [sp, #40]
   10e24:	ldr	x1, [sp, #48]
   10e28:	ldrb	w0, [sp, #63]
   10e2c:	bl	10c5c <GOMP_loop_ull_dynamic_start@@GOMP_2.0>
   10e30:	and	w0, w0, #0xff
   10e34:	b	10e98 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x134>
   10e38:	ldr	x0, [sp, #72]
   10e3c:	ldr	w0, [x0, #12]
   10e40:	sxtw	x0, w0
   10e44:	ldr	x6, [sp, #16]
   10e48:	ldr	x5, [sp, #24]
   10e4c:	mov	x4, x0
   10e50:	ldr	x3, [sp, #32]
   10e54:	ldr	x2, [sp, #40]
   10e58:	ldr	x1, [sp, #48]
   10e5c:	ldrb	w0, [sp, #63]
   10e60:	bl	10ce0 <GOMP_loop_ull_guided_start@@GOMP_2.0>
   10e64:	and	w0, w0, #0xff
   10e68:	b	10e98 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x134>
   10e6c:	ldr	x6, [sp, #16]
   10e70:	ldr	x5, [sp, #24]
   10e74:	mov	x4, #0x0                   	// #0
   10e78:	ldr	x3, [sp, #32]
   10e7c:	ldr	x2, [sp, #40]
   10e80:	ldr	x1, [sp, #48]
   10e84:	ldrb	w0, [sp, #63]
   10e88:	bl	10bcc <GOMP_loop_ull_static_start@@GOMP_2.0>
   10e8c:	and	w0, w0, #0xff
   10e90:	b	10e98 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x134>
   10e94:	bl	8980 <abort@plt>
   10e98:	ldp	x29, x30, [sp], #80
   10e9c:	ret
   10ea0:	stp	x29, x30, [sp, #-48]!
   10ea4:	mov	x29, sp
   10ea8:	str	x0, [sp, #24]
   10eac:	str	x1, [sp, #16]
   10eb0:	ldr	x0, [sp, #24]
   10eb4:	and	x0, x0, #0x7fffffff
   10eb8:	str	x0, [sp, #24]
   10ebc:	ldr	x0, [sp, #24]
   10ec0:	cmp	x0, #0x4
   10ec4:	b.eq	10f04 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1a0>  // b.none
   10ec8:	ldr	x0, [sp, #24]
   10ecc:	cmp	x0, #0x4
   10ed0:	b.gt	10f88 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x224>
   10ed4:	ldr	x0, [sp, #24]
   10ed8:	cmp	x0, #0x0
   10edc:	b.eq	10f04 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1a0>  // b.none
   10ee0:	ldr	x0, [sp, #24]
   10ee4:	cmp	x0, #0x0
   10ee8:	b.lt	10f88 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x224>  // b.tstop
   10eec:	ldr	x0, [sp, #24]
   10ef0:	sub	x0, x0, #0x1
   10ef4:	cmp	x0, #0x2
   10ef8:	b.hi	10f88 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x224>  // b.pmore
   10efc:	ldr	x0, [sp, #24]
   10f00:	b	10f8c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x228>
   10f04:	mov	w0, #0x0                   	// #0
   10f08:	bl	108f4 <GOMP_loop_end_nowait@@GOMP_1.0+0x134>
   10f0c:	str	x0, [sp, #40]
   10f10:	ldr	x0, [sp, #40]
   10f14:	ldr	w0, [x0, #8]
   10f18:	mov	w0, w0
   10f1c:	and	x0, x0, #0x7fffffff
   10f20:	str	x0, [sp, #24]
   10f24:	ldr	x0, [sp, #24]
   10f28:	cmp	x0, #0x3
   10f2c:	b.gt	10f40 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1dc>
   10f30:	ldr	x0, [sp, #24]
   10f34:	cmp	x0, #0x0
   10f38:	b.gt	10f50 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x1ec>
   10f3c:	b	10f7c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x218>
   10f40:	ldr	x0, [sp, #24]
   10f44:	cmp	x0, #0x4
   10f48:	b.eq	10f68 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x204>  // b.none
   10f4c:	b	10f7c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x218>
   10f50:	ldr	x0, [sp, #40]
   10f54:	ldr	w0, [x0, #12]
   10f58:	sxtw	x1, w0
   10f5c:	ldr	x0, [sp, #16]
   10f60:	str	x1, [x0]
   10f64:	b	10f80 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x21c>
   10f68:	mov	x0, #0x1                   	// #1
   10f6c:	str	x0, [sp, #24]
   10f70:	ldr	x0, [sp, #16]
   10f74:	str	xzr, [x0]
   10f78:	b	10f80 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x21c>
   10f7c:	bl	8980 <abort@plt>
   10f80:	ldr	x0, [sp, #24]
   10f84:	b	10f8c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x228>
   10f88:	bl	8980 <abort@plt>
   10f8c:	ldp	x29, x30, [sp], #48
   10f90:	ret

0000000000010f94 <GOMP_loop_ull_start@@GOMP_5.0>:
   10f94:	stp	x29, x30, [sp, #-128]!
   10f98:	mov	x29, sp
   10f9c:	str	x19, [sp, #16]
   10fa0:	strb	w0, [sp, #95]
   10fa4:	str	x1, [sp, #80]
   10fa8:	str	x2, [sp, #72]
   10fac:	str	x3, [sp, #64]
   10fb0:	str	x4, [sp, #56]
   10fb4:	str	x5, [sp, #48]
   10fb8:	str	x6, [sp, #40]
   10fbc:	str	x7, [sp, #32]
   10fc0:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   10fc4:	str	x0, [sp, #120]
   10fc8:	ldr	x0, [sp, #120]
   10fcc:	str	xzr, [x0, #72]
   10fd0:	ldr	x0, [sp, #128]
   10fd4:	cmp	x0, #0x0
   10fd8:	b.eq	10fe0 <GOMP_loop_ull_start@@GOMP_5.0+0x4c>  // b.none
   10fdc:	bl	1d2bc <GOMP_task_reduction_remap@@GOMP_5.0+0xadc>
   10fe0:	mov	x0, #0x0                   	// #0
   10fe4:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   10fe8:	and	w0, w0, #0xff
   10fec:	cmp	w0, #0x0
   10ff0:	b.eq	110e4 <GOMP_loop_ull_start@@GOMP_5.0+0x150>  // b.none
   10ff4:	add	x0, sp, #0x30
   10ff8:	mov	x1, x0
   10ffc:	ldr	x0, [sp, #56]
   11000:	bl	10ea0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x13c>
   11004:	str	x0, [sp, #56]
   11008:	ldr	x0, [sp, #120]
   1100c:	ldr	x0, [x0, #24]
   11010:	ldr	x1, [sp, #56]
   11014:	mov	w2, w1
   11018:	ldr	x1, [sp, #48]
   1101c:	mov	x6, x1
   11020:	mov	w5, w2
   11024:	ldr	x4, [sp, #64]
   11028:	ldr	x3, [sp, #72]
   1102c:	ldr	x2, [sp, #80]
   11030:	ldrb	w1, [sp, #95]
   11034:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   11038:	ldr	x0, [sp, #128]
   1103c:	cmp	x0, #0x0
   11040:	b.eq	11070 <GOMP_loop_ull_start@@GOMP_5.0+0xdc>  // b.none
   11044:	ldr	x0, [sp, #128]
   11048:	bl	1c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   1104c:	ldr	x0, [sp, #120]
   11050:	ldr	x0, [x0, #80]
   11054:	ldr	x0, [x0, #40]
   11058:	mov	w1, #0x1                   	// #1
   1105c:	strb	w1, [x0, #50]
   11060:	ldr	x0, [sp, #120]
   11064:	ldr	x0, [x0, #24]
   11068:	ldr	x1, [sp, #128]
   1106c:	str	x1, [x0, #88]
   11070:	ldr	x0, [sp, #136]
   11074:	cmp	x0, #0x0
   11078:	b.eq	110dc <GOMP_loop_ull_start@@GOMP_5.0+0x148>  // b.none
   1107c:	ldr	x0, [sp, #136]
   11080:	ldr	x0, [x0]
   11084:	str	x0, [sp, #104]
   11088:	ldr	x0, [sp, #104]
   1108c:	cmp	x0, #0x20
   11090:	b.ls	110b8 <GOMP_loop_ull_start@@GOMP_5.0+0x124>  // b.plast
   11094:	ldr	x0, [sp, #120]
   11098:	ldr	x19, [x0, #24]
   1109c:	ldr	x0, [sp, #104]
   110a0:	bl	8e10 <fprintf@plt+0x1e0>
   110a4:	str	x0, [x19, #32]
   110a8:	ldr	x1, [x19, #32]
   110ac:	ldr	x0, [sp, #136]
   110b0:	str	x1, [x0]
   110b4:	b	110dc <GOMP_loop_ull_start@@GOMP_5.0+0x148>
   110b8:	ldr	x0, [sp, #120]
   110bc:	ldr	x0, [x0, #24]
   110c0:	add	x0, x0, #0x60
   110c4:	ldr	x2, [sp, #104]
   110c8:	mov	w1, #0x0                   	// #0
   110cc:	bl	88d0 <memset@plt>
   110d0:	mov	x1, x0
   110d4:	ldr	x0, [sp, #136]
   110d8:	str	x1, [x0]
   110dc:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   110e0:	b	1112c <GOMP_loop_ull_start@@GOMP_5.0+0x198>
   110e4:	ldr	x0, [sp, #128]
   110e8:	cmp	x0, #0x0
   110ec:	b.eq	1110c <GOMP_loop_ull_start@@GOMP_5.0+0x178>  // b.none
   110f0:	ldr	x0, [sp, #120]
   110f4:	ldr	x0, [x0, #24]
   110f8:	ldr	x0, [x0, #88]
   110fc:	str	x0, [sp, #112]
   11100:	ldr	x1, [sp, #112]
   11104:	ldr	x0, [sp, #128]
   11108:	bl	1cf34 <GOMP_task_reduction_remap@@GOMP_5.0+0x754>
   1110c:	ldr	x0, [sp, #136]
   11110:	cmp	x0, #0x0
   11114:	b.eq	1112c <GOMP_loop_ull_start@@GOMP_5.0+0x198>  // b.none
   11118:	ldr	x0, [sp, #120]
   1111c:	ldr	x0, [x0, #24]
   11120:	ldr	x1, [x0, #32]
   11124:	ldr	x0, [sp, #136]
   11128:	str	x1, [x0]
   1112c:	ldr	x1, [sp, #32]
   11130:	ldr	x0, [sp, #40]
   11134:	bl	11c74 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
   11138:	and	w0, w0, #0xff
   1113c:	ldr	x19, [sp, #16]
   11140:	ldp	x29, x30, [sp], #128
   11144:	ret

0000000000011148 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>:
   11148:	stp	x29, x30, [sp, #-96]!
   1114c:	mov	x29, sp
   11150:	strb	w0, [sp, #79]
   11154:	str	x1, [sp, #64]
   11158:	str	x2, [sp, #56]
   1115c:	str	x3, [sp, #48]
   11160:	str	x4, [sp, #40]
   11164:	str	x5, [sp, #32]
   11168:	str	x6, [sp, #24]
   1116c:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11170:	str	x0, [sp, #88]
   11174:	ldr	x0, [sp, #88]
   11178:	str	xzr, [x0, #72]
   1117c:	mov	x0, #0x1                   	// #1
   11180:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   11184:	and	w0, w0, #0xff
   11188:	cmp	w0, #0x0
   1118c:	b.eq	111bc <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x74>  // b.none
   11190:	ldr	x0, [sp, #88]
   11194:	ldr	x0, [x0, #24]
   11198:	ldr	x6, [sp, #40]
   1119c:	mov	w5, #0x1                   	// #1
   111a0:	ldr	x4, [sp, #48]
   111a4:	ldr	x3, [sp, #56]
   111a8:	ldr	x2, [sp, #64]
   111ac:	ldrb	w1, [sp, #79]
   111b0:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   111b4:	bl	123f4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x58c>
   111b8:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   111bc:	ldr	x1, [sp, #24]
   111c0:	ldr	x0, [sp, #32]
   111c4:	bl	e19c <omp_is_initial_device@@OMP_4.0+0xa54>
   111c8:	cmp	w0, #0x0
   111cc:	cset	w0, eq  // eq = none
   111d0:	and	w0, w0, #0xff
   111d4:	ldp	x29, x30, [sp], #96
   111d8:	ret

00000000000111dc <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>:
   111dc:	stp	x29, x30, [sp, #-96]!
   111e0:	mov	x29, sp
   111e4:	strb	w0, [sp, #79]
   111e8:	str	x1, [sp, #64]
   111ec:	str	x2, [sp, #56]
   111f0:	str	x3, [sp, #48]
   111f4:	str	x4, [sp, #40]
   111f8:	str	x5, [sp, #32]
   111fc:	str	x6, [sp, #24]
   11200:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11204:	str	x0, [sp, #88]
   11208:	mov	x0, #0x1                   	// #1
   1120c:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   11210:	and	w0, w0, #0xff
   11214:	cmp	w0, #0x0
   11218:	b.eq	11258 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x7c>  // b.none
   1121c:	ldr	x0, [sp, #88]
   11220:	ldr	x0, [x0, #24]
   11224:	ldr	x6, [sp, #40]
   11228:	mov	w5, #0x2                   	// #2
   1122c:	ldr	x4, [sp, #48]
   11230:	ldr	x3, [sp, #56]
   11234:	ldr	x2, [sp, #64]
   11238:	ldrb	w1, [sp, #79]
   1123c:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   11240:	ldr	x0, [sp, #88]
   11244:	ldr	x0, [x0, #24]
   11248:	add	x0, x0, #0x40
   1124c:	bl	107d8 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>
   11250:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   11254:	b	11268 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x8c>
   11258:	ldr	x0, [sp, #88]
   1125c:	ldr	x0, [x0, #24]
   11260:	add	x0, x0, #0x40
   11264:	bl	107d8 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>
   11268:	ldr	x1, [sp, #24]
   1126c:	ldr	x0, [sp, #32]
   11270:	bl	e5d4 <omp_is_initial_device@@OMP_4.0+0xe8c>
   11274:	strb	w0, [sp, #87]
   11278:	ldrb	w0, [sp, #87]
   1127c:	cmp	w0, #0x0
   11280:	b.eq	11288 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xac>  // b.none
   11284:	bl	12094 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x22c>
   11288:	ldr	x0, [sp, #88]
   1128c:	ldr	x0, [x0, #24]
   11290:	add	x0, x0, #0x40
   11294:	bl	1084c <GOMP_loop_end_nowait@@GOMP_1.0+0x8c>
   11298:	ldrb	w0, [sp, #87]
   1129c:	ldp	x29, x30, [sp], #96
   112a0:	ret

00000000000112a4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>:
   112a4:	stp	x29, x30, [sp, #-96]!
   112a8:	mov	x29, sp
   112ac:	strb	w0, [sp, #79]
   112b0:	str	x1, [sp, #64]
   112b4:	str	x2, [sp, #56]
   112b8:	str	x3, [sp, #48]
   112bc:	str	x4, [sp, #40]
   112c0:	str	x5, [sp, #32]
   112c4:	str	x6, [sp, #24]
   112c8:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   112cc:	str	x0, [sp, #88]
   112d0:	mov	x0, #0x1                   	// #1
   112d4:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   112d8:	and	w0, w0, #0xff
   112dc:	cmp	w0, #0x0
   112e0:	b.eq	11320 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x7c>  // b.none
   112e4:	ldr	x0, [sp, #88]
   112e8:	ldr	x0, [x0, #24]
   112ec:	ldr	x6, [sp, #40]
   112f0:	mov	w5, #0x3                   	// #3
   112f4:	ldr	x4, [sp, #48]
   112f8:	ldr	x3, [sp, #56]
   112fc:	ldr	x2, [sp, #64]
   11300:	ldrb	w1, [sp, #79]
   11304:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   11308:	ldr	x0, [sp, #88]
   1130c:	ldr	x0, [x0, #24]
   11310:	add	x0, x0, #0x40
   11314:	bl	107d8 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>
   11318:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   1131c:	b	11330 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x8c>
   11320:	ldr	x0, [sp, #88]
   11324:	ldr	x0, [x0, #24]
   11328:	add	x0, x0, #0x40
   1132c:	bl	107d8 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>
   11330:	ldr	x1, [sp, #24]
   11334:	ldr	x0, [sp, #32]
   11338:	bl	e930 <omp_is_initial_device@@OMP_4.0+0x11e8>
   1133c:	strb	w0, [sp, #87]
   11340:	ldrb	w0, [sp, #87]
   11344:	cmp	w0, #0x0
   11348:	b.eq	11350 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xac>  // b.none
   1134c:	bl	12094 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x22c>
   11350:	ldr	x0, [sp, #88]
   11354:	ldr	x0, [x0, #24]
   11358:	add	x0, x0, #0x40
   1135c:	bl	1084c <GOMP_loop_end_nowait@@GOMP_1.0+0x8c>
   11360:	ldrb	w0, [sp, #87]
   11364:	ldp	x29, x30, [sp], #96
   11368:	ret

000000000001136c <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0>:
   1136c:	stp	x29, x30, [sp, #-80]!
   11370:	mov	x29, sp
   11374:	strb	w0, [sp, #63]
   11378:	str	x1, [sp, #48]
   1137c:	str	x2, [sp, #40]
   11380:	str	x3, [sp, #32]
   11384:	str	x4, [sp, #24]
   11388:	str	x5, [sp, #16]
   1138c:	mov	w0, #0x0                   	// #0
   11390:	bl	108f4 <GOMP_loop_end_nowait@@GOMP_1.0+0x134>
   11394:	str	x0, [sp, #72]
   11398:	ldr	x0, [sp, #72]
   1139c:	ldr	w0, [x0, #8]
   113a0:	and	w0, w0, #0x7fffffff
   113a4:	cmp	w0, #0x4
   113a8:	b.eq	11474 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x108>  // b.none
   113ac:	cmp	w0, #0x4
   113b0:	b.hi	1149c <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x130>  // b.pmore
   113b4:	cmp	w0, #0x3
   113b8:	b.eq	11440 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0xd4>  // b.none
   113bc:	cmp	w0, #0x3
   113c0:	b.hi	1149c <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x130>  // b.pmore
   113c4:	cmp	w0, #0x1
   113c8:	b.eq	113d8 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x6c>  // b.none
   113cc:	cmp	w0, #0x2
   113d0:	b.eq	1140c <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0xa0>  // b.none
   113d4:	b	1149c <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x130>
   113d8:	ldr	x0, [sp, #72]
   113dc:	ldr	w0, [x0, #12]
   113e0:	sxtw	x0, w0
   113e4:	ldr	x6, [sp, #16]
   113e8:	ldr	x5, [sp, #24]
   113ec:	mov	x4, x0
   113f0:	ldr	x3, [sp, #32]
   113f4:	ldr	x2, [sp, #40]
   113f8:	ldr	x1, [sp, #48]
   113fc:	ldrb	w0, [sp, #63]
   11400:	bl	11148 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>
   11404:	and	w0, w0, #0xff
   11408:	b	114a0 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x134>
   1140c:	ldr	x0, [sp, #72]
   11410:	ldr	w0, [x0, #12]
   11414:	sxtw	x0, w0
   11418:	ldr	x6, [sp, #16]
   1141c:	ldr	x5, [sp, #24]
   11420:	mov	x4, x0
   11424:	ldr	x3, [sp, #32]
   11428:	ldr	x2, [sp, #40]
   1142c:	ldr	x1, [sp, #48]
   11430:	ldrb	w0, [sp, #63]
   11434:	bl	111dc <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>
   11438:	and	w0, w0, #0xff
   1143c:	b	114a0 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x134>
   11440:	ldr	x0, [sp, #72]
   11444:	ldr	w0, [x0, #12]
   11448:	sxtw	x0, w0
   1144c:	ldr	x6, [sp, #16]
   11450:	ldr	x5, [sp, #24]
   11454:	mov	x4, x0
   11458:	ldr	x3, [sp, #32]
   1145c:	ldr	x2, [sp, #40]
   11460:	ldr	x1, [sp, #48]
   11464:	ldrb	w0, [sp, #63]
   11468:	bl	112a4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>
   1146c:	and	w0, w0, #0xff
   11470:	b	114a0 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x134>
   11474:	ldr	x6, [sp, #16]
   11478:	ldr	x5, [sp, #24]
   1147c:	mov	x4, #0x0                   	// #0
   11480:	ldr	x3, [sp, #32]
   11484:	ldr	x2, [sp, #40]
   11488:	ldr	x1, [sp, #48]
   1148c:	ldrb	w0, [sp, #63]
   11490:	bl	11148 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>
   11494:	and	w0, w0, #0xff
   11498:	b	114a0 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x134>
   1149c:	bl	8980 <abort@plt>
   114a0:	ldp	x29, x30, [sp], #80
   114a4:	ret

00000000000114a8 <GOMP_loop_ull_ordered_start@@GOMP_5.0>:
   114a8:	stp	x29, x30, [sp, #-128]!
   114ac:	mov	x29, sp
   114b0:	strb	w0, [sp, #79]
   114b4:	str	x1, [sp, #64]
   114b8:	str	x2, [sp, #56]
   114bc:	str	x3, [sp, #48]
   114c0:	str	x4, [sp, #40]
   114c4:	str	x5, [sp, #32]
   114c8:	str	x6, [sp, #24]
   114cc:	str	x7, [sp, #16]
   114d0:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   114d4:	str	x0, [sp, #104]
   114d8:	mov	x0, #0x1                   	// #1
   114dc:	str	x0, [sp, #120]
   114e0:	ldr	x0, [sp, #104]
   114e4:	str	xzr, [x0, #72]
   114e8:	ldr	x0, [sp, #128]
   114ec:	cmp	x0, #0x0
   114f0:	b.eq	114f8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x50>  // b.none
   114f4:	bl	1d2bc <GOMP_task_reduction_remap@@GOMP_5.0+0xadc>
   114f8:	ldr	x0, [sp, #136]
   114fc:	cmp	x0, #0x0
   11500:	b.eq	1151c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x74>  // b.none
   11504:	ldr	x0, [sp, #136]
   11508:	ldr	x0, [x0]
   1150c:	mov	x1, x0
   11510:	ldr	x0, [sp, #120]
   11514:	add	x0, x0, x1
   11518:	str	x0, [sp, #120]
   1151c:	ldr	x0, [sp, #120]
   11520:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   11524:	and	w0, w0, #0xff
   11528:	cmp	w0, #0x0
   1152c:	b.eq	115d8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x130>  // b.none
   11530:	add	x0, sp, #0x20
   11534:	mov	x1, x0
   11538:	ldr	x0, [sp, #40]
   1153c:	bl	10ea0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x13c>
   11540:	str	x0, [sp, #40]
   11544:	ldr	x0, [sp, #104]
   11548:	ldr	x0, [x0, #24]
   1154c:	ldr	x1, [sp, #40]
   11550:	mov	w2, w1
   11554:	ldr	x1, [sp, #32]
   11558:	mov	x6, x1
   1155c:	mov	w5, w2
   11560:	ldr	x4, [sp, #48]
   11564:	ldr	x3, [sp, #56]
   11568:	ldr	x2, [sp, #64]
   1156c:	ldrb	w1, [sp, #79]
   11570:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   11574:	ldr	x0, [sp, #128]
   11578:	cmp	x0, #0x0
   1157c:	b.eq	115ac <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x104>  // b.none
   11580:	ldr	x0, [sp, #128]
   11584:	bl	1c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   11588:	ldr	x0, [sp, #104]
   1158c:	ldr	x0, [x0, #80]
   11590:	ldr	x0, [x0, #40]
   11594:	mov	w1, #0x1                   	// #1
   11598:	strb	w1, [x0, #50]
   1159c:	ldr	x0, [sp, #104]
   115a0:	ldr	x0, [x0, #24]
   115a4:	ldr	x1, [sp, #128]
   115a8:	str	x1, [x0, #88]
   115ac:	ldr	x0, [sp, #40]
   115b0:	cmp	x0, #0x1
   115b4:	b.ne	115c0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x118>  // b.any
   115b8:	bl	123f4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x58c>
   115bc:	b	115d0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x128>
   115c0:	ldr	x0, [sp, #104]
   115c4:	ldr	x0, [x0, #24]
   115c8:	add	x0, x0, #0x40
   115cc:	bl	107d8 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>
   115d0:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   115d4:	b	11630 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x188>
   115d8:	ldr	x0, [sp, #128]
   115dc:	cmp	x0, #0x0
   115e0:	b.eq	11600 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x158>  // b.none
   115e4:	ldr	x0, [sp, #104]
   115e8:	ldr	x0, [x0, #24]
   115ec:	ldr	x0, [x0, #88]
   115f0:	str	x0, [sp, #96]
   115f4:	ldr	x1, [sp, #96]
   115f8:	ldr	x0, [sp, #128]
   115fc:	bl	1cf34 <GOMP_task_reduction_remap@@GOMP_5.0+0x754>
   11600:	ldr	x0, [sp, #104]
   11604:	ldr	x0, [x0, #24]
   11608:	ldr	w0, [x0]
   1160c:	mov	w0, w0
   11610:	str	x0, [sp, #40]
   11614:	ldr	x0, [sp, #40]
   11618:	cmp	x0, #0x1
   1161c:	b.eq	11630 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x188>  // b.none
   11620:	ldr	x0, [sp, #104]
   11624:	ldr	x0, [x0, #24]
   11628:	add	x0, x0, #0x40
   1162c:	bl	107d8 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>
   11630:	ldr	x0, [sp, #136]
   11634:	cmp	x0, #0x0
   11638:	b.eq	116a0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1f8>  // b.none
   1163c:	ldr	x0, [sp, #104]
   11640:	ldr	x0, [x0, #24]
   11644:	ldr	x1, [x0, #32]
   11648:	ldr	x0, [sp, #104]
   1164c:	ldr	x0, [x0, #16]
   11650:	cmp	x0, #0x0
   11654:	b.eq	11670 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1c8>  // b.none
   11658:	ldr	x0, [sp, #104]
   1165c:	ldr	x0, [x0, #16]
   11660:	ldr	w0, [x0]
   11664:	mov	w0, w0
   11668:	lsl	x0, x0, #2
   1166c:	b	11674 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1cc>
   11670:	mov	x0, #0x4                   	// #4
   11674:	add	x0, x1, x0
   11678:	str	x0, [sp, #88]
   1167c:	ldr	x0, [sp, #88]
   11680:	add	x0, x0, #0x7
   11684:	str	x0, [sp, #88]
   11688:	ldr	x0, [sp, #88]
   1168c:	and	x0, x0, #0xfffffffffffffff8
   11690:	str	x0, [sp, #88]
   11694:	ldr	x1, [sp, #88]
   11698:	ldr	x0, [sp, #136]
   1169c:	str	x1, [x0]
   116a0:	ldr	x0, [sp, #40]
   116a4:	cmp	x0, #0x4
   116a8:	b.eq	116ec <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x244>  // b.none
   116ac:	ldr	x0, [sp, #40]
   116b0:	cmp	x0, #0x4
   116b4:	b.gt	11730 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x288>
   116b8:	ldr	x0, [sp, #40]
   116bc:	cmp	x0, #0x3
   116c0:	b.eq	1171c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x274>  // b.none
   116c4:	ldr	x0, [sp, #40]
   116c8:	cmp	x0, #0x3
   116cc:	b.gt	11730 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x288>
   116d0:	ldr	x0, [sp, #40]
   116d4:	cmp	x0, #0x1
   116d8:	b.eq	116ec <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x244>  // b.none
   116dc:	ldr	x0, [sp, #40]
   116e0:	cmp	x0, #0x2
   116e4:	b.eq	11708 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x260>  // b.none
   116e8:	b	11730 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x288>
   116ec:	ldr	x1, [sp, #16]
   116f0:	ldr	x0, [sp, #24]
   116f4:	bl	e19c <omp_is_initial_device@@OMP_4.0+0xa54>
   116f8:	cmp	w0, #0x0
   116fc:	cset	w0, eq  // eq = none
   11700:	and	w0, w0, #0xff
   11704:	b	11758 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2b0>
   11708:	ldr	x1, [sp, #16]
   1170c:	ldr	x0, [sp, #24]
   11710:	bl	e5d4 <omp_is_initial_device@@OMP_4.0+0xe8c>
   11714:	strb	w0, [sp, #119]
   11718:	b	11734 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x28c>
   1171c:	ldr	x1, [sp, #16]
   11720:	ldr	x0, [sp, #24]
   11724:	bl	e930 <omp_is_initial_device@@OMP_4.0+0x11e8>
   11728:	strb	w0, [sp, #119]
   1172c:	b	11734 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x28c>
   11730:	bl	8980 <abort@plt>
   11734:	ldrb	w0, [sp, #119]
   11738:	cmp	w0, #0x0
   1173c:	b.eq	11744 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x29c>  // b.none
   11740:	bl	12094 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x22c>
   11744:	ldr	x0, [sp, #104]
   11748:	ldr	x0, [x0, #24]
   1174c:	add	x0, x0, #0x40
   11750:	bl	1084c <GOMP_loop_end_nowait@@GOMP_1.0+0x8c>
   11754:	ldrb	w0, [sp, #119]
   11758:	ldp	x29, x30, [sp], #128
   1175c:	ret

0000000000011760 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>:
   11760:	stp	x29, x30, [sp, #-80]!
   11764:	mov	x29, sp
   11768:	str	w0, [sp, #60]
   1176c:	str	x1, [sp, #48]
   11770:	str	x2, [sp, #40]
   11774:	str	x3, [sp, #32]
   11778:	str	x4, [sp, #24]
   1177c:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11780:	str	x0, [sp, #72]
   11784:	ldr	x0, [sp, #72]
   11788:	str	xzr, [x0, #72]
   1178c:	mov	x0, #0x0                   	// #0
   11790:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   11794:	and	w0, w0, #0xff
   11798:	cmp	w0, #0x0
   1179c:	b.eq	117e8 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x88>  // b.none
   117a0:	ldr	x0, [sp, #72]
   117a4:	ldr	x7, [x0, #24]
   117a8:	ldr	x0, [sp, #48]
   117ac:	ldr	x0, [x0]
   117b0:	ldr	x6, [sp, #40]
   117b4:	mov	w5, #0x1                   	// #1
   117b8:	mov	x4, #0x1                   	// #1
   117bc:	mov	x3, x0
   117c0:	mov	x2, #0x0                   	// #0
   117c4:	mov	w1, #0x1                   	// #1
   117c8:	mov	x0, x7
   117cc:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   117d0:	mov	x3, #0x0                   	// #0
   117d4:	ldr	x2, [sp, #40]
   117d8:	ldr	x1, [sp, #48]
   117dc:	ldr	w0, [sp, #60]
   117e0:	bl	130fc <GOMP_doacross_wait@@GOMP_4.5+0x438>
   117e4:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   117e8:	ldr	x1, [sp, #24]
   117ec:	ldr	x0, [sp, #32]
   117f0:	bl	e19c <omp_is_initial_device@@OMP_4.0+0xa54>
   117f4:	cmp	w0, #0x0
   117f8:	cset	w0, eq  // eq = none
   117fc:	and	w0, w0, #0xff
   11800:	ldp	x29, x30, [sp], #80
   11804:	ret

0000000000011808 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>:
   11808:	stp	x29, x30, [sp, #-80]!
   1180c:	mov	x29, sp
   11810:	str	w0, [sp, #60]
   11814:	str	x1, [sp, #48]
   11818:	str	x2, [sp, #40]
   1181c:	str	x3, [sp, #32]
   11820:	str	x4, [sp, #24]
   11824:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11828:	str	x0, [sp, #72]
   1182c:	mov	x0, #0x0                   	// #0
   11830:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   11834:	and	w0, w0, #0xff
   11838:	cmp	w0, #0x0
   1183c:	b.eq	11888 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x80>  // b.none
   11840:	ldr	x0, [sp, #72]
   11844:	ldr	x7, [x0, #24]
   11848:	ldr	x0, [sp, #48]
   1184c:	ldr	x0, [x0]
   11850:	ldr	x6, [sp, #40]
   11854:	mov	w5, #0x2                   	// #2
   11858:	mov	x4, #0x1                   	// #1
   1185c:	mov	x3, x0
   11860:	mov	x2, #0x0                   	// #0
   11864:	mov	w1, #0x1                   	// #1
   11868:	mov	x0, x7
   1186c:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   11870:	mov	x3, #0x0                   	// #0
   11874:	ldr	x2, [sp, #40]
   11878:	ldr	x1, [sp, #48]
   1187c:	ldr	w0, [sp, #60]
   11880:	bl	130fc <GOMP_doacross_wait@@GOMP_4.5+0x438>
   11884:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   11888:	ldr	x1, [sp, #24]
   1188c:	ldr	x0, [sp, #32]
   11890:	bl	e6cc <omp_is_initial_device@@OMP_4.0+0xf84>
   11894:	strb	w0, [sp, #71]
   11898:	ldrb	w0, [sp, #71]
   1189c:	ldp	x29, x30, [sp], #80
   118a0:	ret

00000000000118a4 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5>:
   118a4:	stp	x29, x30, [sp, #-80]!
   118a8:	mov	x29, sp
   118ac:	str	w0, [sp, #60]
   118b0:	str	x1, [sp, #48]
   118b4:	str	x2, [sp, #40]
   118b8:	str	x3, [sp, #32]
   118bc:	str	x4, [sp, #24]
   118c0:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   118c4:	str	x0, [sp, #72]
   118c8:	mov	x0, #0x0                   	// #0
   118cc:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   118d0:	and	w0, w0, #0xff
   118d4:	cmp	w0, #0x0
   118d8:	b.eq	11924 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x80>  // b.none
   118dc:	ldr	x0, [sp, #72]
   118e0:	ldr	x7, [x0, #24]
   118e4:	ldr	x0, [sp, #48]
   118e8:	ldr	x0, [x0]
   118ec:	ldr	x6, [sp, #40]
   118f0:	mov	w5, #0x3                   	// #3
   118f4:	mov	x4, #0x1                   	// #1
   118f8:	mov	x3, x0
   118fc:	mov	x2, #0x0                   	// #0
   11900:	mov	w1, #0x1                   	// #1
   11904:	mov	x0, x7
   11908:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   1190c:	mov	x3, #0x0                   	// #0
   11910:	ldr	x2, [sp, #40]
   11914:	ldr	x1, [sp, #48]
   11918:	ldr	w0, [sp, #60]
   1191c:	bl	130fc <GOMP_doacross_wait@@GOMP_4.5+0x438>
   11920:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   11924:	ldr	x1, [sp, #24]
   11928:	ldr	x0, [sp, #32]
   1192c:	bl	eab4 <omp_is_initial_device@@OMP_4.0+0x136c>
   11930:	strb	w0, [sp, #71]
   11934:	ldrb	w0, [sp, #71]
   11938:	ldp	x29, x30, [sp], #80
   1193c:	ret

0000000000011940 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5>:
   11940:	stp	x29, x30, [sp, #-64]!
   11944:	mov	x29, sp
   11948:	str	w0, [sp, #44]
   1194c:	str	x1, [sp, #32]
   11950:	str	x2, [sp, #24]
   11954:	str	x3, [sp, #16]
   11958:	mov	w0, #0x0                   	// #0
   1195c:	bl	108f4 <GOMP_loop_end_nowait@@GOMP_1.0+0x134>
   11960:	str	x0, [sp, #56]
   11964:	ldr	x0, [sp, #56]
   11968:	ldr	w0, [x0, #8]
   1196c:	and	w0, w0, #0x7fffffff
   11970:	cmp	w0, #0x4
   11974:	b.eq	11a28 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xe8>  // b.none
   11978:	cmp	w0, #0x4
   1197c:	b.hi	11a48 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x108>  // b.pmore
   11980:	cmp	w0, #0x3
   11984:	b.eq	119fc <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xbc>  // b.none
   11988:	cmp	w0, #0x3
   1198c:	b.hi	11a48 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x108>  // b.pmore
   11990:	cmp	w0, #0x1
   11994:	b.eq	119a4 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x64>  // b.none
   11998:	cmp	w0, #0x2
   1199c:	b.eq	119d0 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x90>  // b.none
   119a0:	b	11a48 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x108>
   119a4:	ldr	x0, [sp, #56]
   119a8:	ldr	w0, [x0, #12]
   119ac:	sxtw	x0, w0
   119b0:	ldr	x4, [sp, #16]
   119b4:	ldr	x3, [sp, #24]
   119b8:	mov	x2, x0
   119bc:	ldr	x1, [sp, #32]
   119c0:	ldr	w0, [sp, #44]
   119c4:	bl	11760 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>
   119c8:	and	w0, w0, #0xff
   119cc:	b	11a4c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x10c>
   119d0:	ldr	x0, [sp, #56]
   119d4:	ldr	w0, [x0, #12]
   119d8:	sxtw	x0, w0
   119dc:	ldr	x4, [sp, #16]
   119e0:	ldr	x3, [sp, #24]
   119e4:	mov	x2, x0
   119e8:	ldr	x1, [sp, #32]
   119ec:	ldr	w0, [sp, #44]
   119f0:	bl	11808 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>
   119f4:	and	w0, w0, #0xff
   119f8:	b	11a4c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x10c>
   119fc:	ldr	x0, [sp, #56]
   11a00:	ldr	w0, [x0, #12]
   11a04:	sxtw	x0, w0
   11a08:	ldr	x4, [sp, #16]
   11a0c:	ldr	x3, [sp, #24]
   11a10:	mov	x2, x0
   11a14:	ldr	x1, [sp, #32]
   11a18:	ldr	w0, [sp, #44]
   11a1c:	bl	118a4 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5>
   11a20:	and	w0, w0, #0xff
   11a24:	b	11a4c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x10c>
   11a28:	ldr	x4, [sp, #16]
   11a2c:	ldr	x3, [sp, #24]
   11a30:	mov	x2, #0x0                   	// #0
   11a34:	ldr	x1, [sp, #32]
   11a38:	ldr	w0, [sp, #44]
   11a3c:	bl	11760 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>
   11a40:	and	w0, w0, #0xff
   11a44:	b	11a4c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x10c>
   11a48:	bl	8980 <abort@plt>
   11a4c:	ldp	x29, x30, [sp], #64
   11a50:	ret

0000000000011a54 <GOMP_loop_ull_doacross_start@@GOMP_5.0>:
   11a54:	stp	x29, x30, [sp, #-112]!
   11a58:	mov	x29, sp
   11a5c:	str	w0, [sp, #76]
   11a60:	str	x1, [sp, #64]
   11a64:	str	x2, [sp, #56]
   11a68:	str	x3, [sp, #48]
   11a6c:	str	x4, [sp, #40]
   11a70:	str	x5, [sp, #32]
   11a74:	str	x6, [sp, #24]
   11a78:	str	x7, [sp, #16]
   11a7c:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11a80:	str	x0, [sp, #96]
   11a84:	ldr	x0, [sp, #96]
   11a88:	str	xzr, [x0, #72]
   11a8c:	ldr	x0, [sp, #24]
   11a90:	cmp	x0, #0x0
   11a94:	b.eq	11a9c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x48>  // b.none
   11a98:	bl	1d2bc <GOMP_task_reduction_remap@@GOMP_5.0+0xadc>
   11a9c:	mov	x0, #0x0                   	// #0
   11aa0:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   11aa4:	and	w0, w0, #0xff
   11aa8:	cmp	w0, #0x0
   11aac:	b.eq	11b74 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x120>  // b.none
   11ab0:	str	xzr, [sp, #104]
   11ab4:	ldr	x0, [sp, #16]
   11ab8:	cmp	x0, #0x0
   11abc:	b.eq	11acc <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x78>  // b.none
   11ac0:	ldr	x0, [sp, #16]
   11ac4:	ldr	x0, [x0]
   11ac8:	str	x0, [sp, #104]
   11acc:	add	x0, sp, #0x30
   11ad0:	mov	x1, x0
   11ad4:	ldr	x0, [sp, #56]
   11ad8:	bl	10ea0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x13c>
   11adc:	str	x0, [sp, #56]
   11ae0:	ldr	x0, [sp, #96]
   11ae4:	ldr	x7, [x0, #24]
   11ae8:	ldr	x0, [sp, #64]
   11aec:	ldr	x0, [x0]
   11af0:	ldr	x1, [sp, #56]
   11af4:	mov	w2, w1
   11af8:	ldr	x1, [sp, #48]
   11afc:	mov	x6, x1
   11b00:	mov	w5, w2
   11b04:	mov	x4, #0x1                   	// #1
   11b08:	mov	x3, x0
   11b0c:	mov	x2, #0x0                   	// #0
   11b10:	mov	w1, #0x1                   	// #1
   11b14:	mov	x0, x7
   11b18:	bl	109a4 <GOMP_loop_end_nowait@@GOMP_1.0+0x1e4>
   11b1c:	ldr	x0, [sp, #48]
   11b20:	ldr	x3, [sp, #104]
   11b24:	mov	x2, x0
   11b28:	ldr	x1, [sp, #64]
   11b2c:	ldr	w0, [sp, #76]
   11b30:	bl	130fc <GOMP_doacross_wait@@GOMP_4.5+0x438>
   11b34:	ldr	x0, [sp, #24]
   11b38:	cmp	x0, #0x0
   11b3c:	b.eq	11b6c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x118>  // b.none
   11b40:	ldr	x0, [sp, #24]
   11b44:	bl	1c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   11b48:	ldr	x0, [sp, #96]
   11b4c:	ldr	x0, [x0, #80]
   11b50:	ldr	x0, [x0, #40]
   11b54:	mov	w1, #0x1                   	// #1
   11b58:	strb	w1, [x0, #50]
   11b5c:	ldr	x0, [sp, #96]
   11b60:	ldr	x0, [x0, #24]
   11b64:	ldr	x1, [sp, #24]
   11b68:	str	x1, [x0, #88]
   11b6c:	bl	10948 <GOMP_loop_end_nowait@@GOMP_1.0+0x188>
   11b70:	b	11bb0 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x15c>
   11b74:	ldr	x0, [sp, #24]
   11b78:	cmp	x0, #0x0
   11b7c:	b.eq	11b9c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x148>  // b.none
   11b80:	ldr	x0, [sp, #96]
   11b84:	ldr	x0, [x0, #24]
   11b88:	ldr	x0, [x0, #88]
   11b8c:	str	x0, [sp, #88]
   11b90:	ldr	x1, [sp, #88]
   11b94:	ldr	x0, [sp, #24]
   11b98:	bl	1cf34 <GOMP_task_reduction_remap@@GOMP_5.0+0x754>
   11b9c:	ldr	x0, [sp, #96]
   11ba0:	ldr	x0, [x0, #24]
   11ba4:	ldr	w0, [x0]
   11ba8:	mov	w0, w0
   11bac:	str	x0, [sp, #56]
   11bb0:	ldr	x0, [sp, #16]
   11bb4:	cmp	x0, #0x0
   11bb8:	b.eq	11bd4 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x180>  // b.none
   11bbc:	ldr	x0, [sp, #96]
   11bc0:	ldr	x0, [x0, #24]
   11bc4:	ldr	x0, [x0, #32]
   11bc8:	ldr	x1, [x0, #48]
   11bcc:	ldr	x0, [sp, #16]
   11bd0:	str	x1, [x0]
   11bd4:	ldr	x1, [sp, #32]
   11bd8:	ldr	x0, [sp, #40]
   11bdc:	bl	11c74 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
   11be0:	and	w0, w0, #0xff
   11be4:	ldp	x29, x30, [sp], #112
   11be8:	ret

0000000000011bec <GOMP_loop_ull_static_next@@GOMP_2.0>:
   11bec:	stp	x29, x30, [sp, #-32]!
   11bf0:	mov	x29, sp
   11bf4:	str	x0, [sp, #24]
   11bf8:	str	x1, [sp, #16]
   11bfc:	ldr	x1, [sp, #16]
   11c00:	ldr	x0, [sp, #24]
   11c04:	bl	e19c <omp_is_initial_device@@OMP_4.0+0xa54>
   11c08:	cmp	w0, #0x0
   11c0c:	cset	w0, eq  // eq = none
   11c10:	and	w0, w0, #0xff
   11c14:	ldp	x29, x30, [sp], #32
   11c18:	ret

0000000000011c1c <GOMP_loop_ull_dynamic_next@@GOMP_2.0>:
   11c1c:	stp	x29, x30, [sp, #-48]!
   11c20:	mov	x29, sp
   11c24:	str	x0, [sp, #24]
   11c28:	str	x1, [sp, #16]
   11c2c:	ldr	x1, [sp, #16]
   11c30:	ldr	x0, [sp, #24]
   11c34:	bl	e6cc <omp_is_initial_device@@OMP_4.0+0xf84>
   11c38:	strb	w0, [sp, #47]
   11c3c:	ldrb	w0, [sp, #47]
   11c40:	ldp	x29, x30, [sp], #48
   11c44:	ret

0000000000011c48 <GOMP_loop_ull_guided_next@@GOMP_2.0>:
   11c48:	stp	x29, x30, [sp, #-48]!
   11c4c:	mov	x29, sp
   11c50:	str	x0, [sp, #24]
   11c54:	str	x1, [sp, #16]
   11c58:	ldr	x1, [sp, #16]
   11c5c:	ldr	x0, [sp, #24]
   11c60:	bl	eab4 <omp_is_initial_device@@OMP_4.0+0x136c>
   11c64:	strb	w0, [sp, #47]
   11c68:	ldrb	w0, [sp, #47]
   11c6c:	ldp	x29, x30, [sp], #48
   11c70:	ret

0000000000011c74 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
   11c74:	stp	x29, x30, [sp, #-48]!
   11c78:	mov	x29, sp
   11c7c:	str	x0, [sp, #24]
   11c80:	str	x1, [sp, #16]
   11c84:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11c88:	str	x0, [sp, #40]
   11c8c:	ldr	x0, [sp, #40]
   11c90:	ldr	x0, [x0, #24]
   11c94:	ldr	w0, [x0]
   11c98:	cmp	w0, #0x4
   11c9c:	b.eq	11ccc <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x58>  // b.none
   11ca0:	cmp	w0, #0x4
   11ca4:	b.hi	11d08 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x94>  // b.pmore
   11ca8:	cmp	w0, #0x3
   11cac:	b.eq	11cf4 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x80>  // b.none
   11cb0:	cmp	w0, #0x3
   11cb4:	b.hi	11d08 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x94>  // b.pmore
   11cb8:	cmp	w0, #0x1
   11cbc:	b.eq	11ccc <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x58>  // b.none
   11cc0:	cmp	w0, #0x2
   11cc4:	b.eq	11ce0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x6c>  // b.none
   11cc8:	b	11d08 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x94>
   11ccc:	ldr	x1, [sp, #16]
   11cd0:	ldr	x0, [sp, #24]
   11cd4:	bl	11bec <GOMP_loop_ull_static_next@@GOMP_2.0>
   11cd8:	and	w0, w0, #0xff
   11cdc:	b	11d0c <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x98>
   11ce0:	ldr	x1, [sp, #16]
   11ce4:	ldr	x0, [sp, #24]
   11ce8:	bl	11c1c <GOMP_loop_ull_dynamic_next@@GOMP_2.0>
   11cec:	and	w0, w0, #0xff
   11cf0:	b	11d0c <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x98>
   11cf4:	ldr	x1, [sp, #16]
   11cf8:	ldr	x0, [sp, #24]
   11cfc:	bl	11c48 <GOMP_loop_ull_guided_next@@GOMP_2.0>
   11d00:	and	w0, w0, #0xff
   11d04:	b	11d0c <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x98>
   11d08:	bl	8980 <abort@plt>
   11d0c:	ldp	x29, x30, [sp], #48
   11d10:	ret

0000000000011d14 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0>:
   11d14:	stp	x29, x30, [sp, #-48]!
   11d18:	mov	x29, sp
   11d1c:	str	x0, [sp, #24]
   11d20:	str	x1, [sp, #16]
   11d24:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11d28:	str	x0, [sp, #40]
   11d2c:	bl	12508 <GOMP_ordered_start@@GOMP_1.0>
   11d30:	ldr	x0, [sp, #40]
   11d34:	ldr	x0, [x0, #24]
   11d38:	add	x0, x0, #0x40
   11d3c:	bl	107d8 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>
   11d40:	ldr	x1, [sp, #16]
   11d44:	ldr	x0, [sp, #24]
   11d48:	bl	e19c <omp_is_initial_device@@OMP_4.0+0xa54>
   11d4c:	str	w0, [sp, #36]
   11d50:	ldr	w0, [sp, #36]
   11d54:	cmp	w0, #0x0
   11d58:	b.lt	11d60 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x4c>  // b.tstop
   11d5c:	bl	1244c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x5e4>
   11d60:	ldr	x0, [sp, #40]
   11d64:	ldr	x0, [x0, #24]
   11d68:	add	x0, x0, #0x40
   11d6c:	bl	1084c <GOMP_loop_end_nowait@@GOMP_1.0+0x8c>
   11d70:	ldr	w0, [sp, #36]
   11d74:	cmp	w0, #0x0
   11d78:	cset	w0, eq  // eq = none
   11d7c:	and	w0, w0, #0xff
   11d80:	ldp	x29, x30, [sp], #48
   11d84:	ret

0000000000011d88 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0>:
   11d88:	stp	x29, x30, [sp, #-48]!
   11d8c:	mov	x29, sp
   11d90:	str	x0, [sp, #24]
   11d94:	str	x1, [sp, #16]
   11d98:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11d9c:	str	x0, [sp, #40]
   11da0:	bl	12508 <GOMP_ordered_start@@GOMP_1.0>
   11da4:	ldr	x0, [sp, #40]
   11da8:	ldr	x0, [x0, #24]
   11dac:	add	x0, x0, #0x40
   11db0:	bl	107d8 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>
   11db4:	ldr	x1, [sp, #16]
   11db8:	ldr	x0, [sp, #24]
   11dbc:	bl	e5d4 <omp_is_initial_device@@OMP_4.0+0xe8c>
   11dc0:	strb	w0, [sp, #39]
   11dc4:	ldrb	w0, [sp, #39]
   11dc8:	cmp	w0, #0x0
   11dcc:	b.eq	11dd8 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x50>  // b.none
   11dd0:	bl	12278 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x410>
   11dd4:	b	11ddc <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x54>
   11dd8:	bl	12188 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x320>
   11ddc:	ldr	x0, [sp, #40]
   11de0:	ldr	x0, [x0, #24]
   11de4:	add	x0, x0, #0x40
   11de8:	bl	1084c <GOMP_loop_end_nowait@@GOMP_1.0+0x8c>
   11dec:	ldrb	w0, [sp, #39]
   11df0:	ldp	x29, x30, [sp], #48
   11df4:	ret

0000000000011df8 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0>:
   11df8:	stp	x29, x30, [sp, #-48]!
   11dfc:	mov	x29, sp
   11e00:	str	x0, [sp, #24]
   11e04:	str	x1, [sp, #16]
   11e08:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11e0c:	str	x0, [sp, #40]
   11e10:	bl	12508 <GOMP_ordered_start@@GOMP_1.0>
   11e14:	ldr	x0, [sp, #40]
   11e18:	ldr	x0, [x0, #24]
   11e1c:	add	x0, x0, #0x40
   11e20:	bl	107d8 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>
   11e24:	ldr	x1, [sp, #16]
   11e28:	ldr	x0, [sp, #24]
   11e2c:	bl	e930 <omp_is_initial_device@@OMP_4.0+0x11e8>
   11e30:	strb	w0, [sp, #39]
   11e34:	ldrb	w0, [sp, #39]
   11e38:	cmp	w0, #0x0
   11e3c:	b.eq	11e48 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x50>  // b.none
   11e40:	bl	12278 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x410>
   11e44:	b	11e4c <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x54>
   11e48:	bl	12188 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x320>
   11e4c:	ldr	x0, [sp, #40]
   11e50:	ldr	x0, [x0, #24]
   11e54:	add	x0, x0, #0x40
   11e58:	bl	1084c <GOMP_loop_end_nowait@@GOMP_1.0+0x8c>
   11e5c:	ldrb	w0, [sp, #39]
   11e60:	ldp	x29, x30, [sp], #48
   11e64:	ret

0000000000011e68 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0>:
   11e68:	stp	x29, x30, [sp, #-48]!
   11e6c:	mov	x29, sp
   11e70:	str	x0, [sp, #24]
   11e74:	str	x1, [sp, #16]
   11e78:	bl	108e0 <GOMP_loop_end_nowait@@GOMP_1.0+0x120>
   11e7c:	str	x0, [sp, #40]
   11e80:	ldr	x0, [sp, #40]
   11e84:	ldr	x0, [x0, #24]
   11e88:	ldr	w0, [x0]
   11e8c:	cmp	w0, #0x4
   11e90:	b.eq	11ec0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x58>  // b.none
   11e94:	cmp	w0, #0x4
   11e98:	b.hi	11efc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x94>  // b.pmore
   11e9c:	cmp	w0, #0x3
   11ea0:	b.eq	11ee8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x80>  // b.none
   11ea4:	cmp	w0, #0x3
   11ea8:	b.hi	11efc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x94>  // b.pmore
   11eac:	cmp	w0, #0x1
   11eb0:	b.eq	11ec0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x58>  // b.none
   11eb4:	cmp	w0, #0x2
   11eb8:	b.eq	11ed4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x6c>  // b.none
   11ebc:	b	11efc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x94>
   11ec0:	ldr	x1, [sp, #16]
   11ec4:	ldr	x0, [sp, #24]
   11ec8:	bl	11d14 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0>
   11ecc:	and	w0, w0, #0xff
   11ed0:	b	11f00 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x98>
   11ed4:	ldr	x1, [sp, #16]
   11ed8:	ldr	x0, [sp, #24]
   11edc:	bl	11d88 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0>
   11ee0:	and	w0, w0, #0xff
   11ee4:	b	11f00 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x98>
   11ee8:	ldr	x1, [sp, #16]
   11eec:	ldr	x0, [sp, #24]
   11ef0:	bl	11df8 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0>
   11ef4:	and	w0, w0, #0xff
   11ef8:	b	11f00 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x98>
   11efc:	bl	8980 <abort@plt>
   11f00:	ldp	x29, x30, [sp], #48
   11f04:	ret
   11f08:	stp	x29, x30, [sp, #-48]!
   11f0c:	mov	x29, sp
   11f10:	str	x0, [sp, #24]
   11f14:	ldr	x0, [sp, #24]
   11f18:	ldr	w0, [x0]
   11f1c:	str	w0, [sp, #44]
   11f20:	b	11f6c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x104>
   11f24:	ldr	w0, [sp, #44]
   11f28:	sub	w0, w0, #0x1
   11f2c:	mov	w4, w0
   11f30:	ldr	x1, [sp, #24]
   11f34:	add	x0, sp, #0x2c
   11f38:	ldr	w3, [x0]
   11f3c:	ldaxr	w2, [x1]
   11f40:	cmp	w2, w3
   11f44:	b.ne	11f50 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xe8>  // b.any
   11f48:	stxr	w5, w4, [x1]
   11f4c:	cmp	w5, #0x0
   11f50:	cset	w1, eq  // eq = none
   11f54:	cmp	w1, #0x0
   11f58:	b.ne	11f60 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf8>  // b.any
   11f5c:	str	w2, [x0]
   11f60:	mov	w0, w1
   11f64:	cmp	w0, #0x0
   11f68:	b.ne	11f90 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x128>  // b.any
   11f6c:	ldr	w0, [sp, #44]
   11f70:	and	w0, w0, #0x7fffffff
   11f74:	cmp	w0, #0x0
   11f78:	b.ne	11f24 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xbc>  // b.any
   11f7c:	ldr	w0, [sp, #44]
   11f80:	mov	w1, w0
   11f84:	ldr	x0, [sp, #24]
   11f88:	bl	21920 <omp_get_num_procs@@OMP_1.0+0x2c4>
   11f8c:	b	11f94 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x12c>
   11f90:	nop
   11f94:	ldp	x29, x30, [sp], #48
   11f98:	ret
   11f9c:	stp	x29, x30, [sp, #-48]!
   11fa0:	mov	x29, sp
   11fa4:	str	x0, [sp, #24]
   11fa8:	ldr	x0, [sp, #24]
   11fac:	ldr	w0, [x0]
   11fb0:	str	w0, [sp, #44]
   11fb4:	b	11fbc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x154>
   11fb8:	nop
   11fbc:	ldr	w0, [sp, #44]
   11fc0:	add	w0, w0, #0x1
   11fc4:	and	w4, w0, #0x7fffffff
   11fc8:	ldr	x1, [sp, #24]
   11fcc:	add	x0, sp, #0x2c
   11fd0:	ldr	w3, [x0]
   11fd4:	ldxr	w2, [x1]
   11fd8:	cmp	w2, w3
   11fdc:	b.ne	11fe8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x180>  // b.any
   11fe0:	stlxr	w5, w4, [x1]
   11fe4:	cmp	w5, #0x0
   11fe8:	cset	w1, eq  // eq = none
   11fec:	cmp	w1, #0x0
   11ff0:	b.ne	11ff8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x190>  // b.any
   11ff4:	str	w2, [x0]
   11ff8:	mov	w0, w1
   11ffc:	eor	w0, w0, #0x1
   12000:	and	w0, w0, #0xff
   12004:	cmp	w0, #0x0
   12008:	b.ne	11fb8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x150>  // b.any
   1200c:	ldr	w0, [sp, #44]
   12010:	and	w0, w0, #0x80000000
   12014:	sxtw	x0, w0
   12018:	cmp	x0, #0x0
   1201c:	b.eq	12028 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1c0>  // b.none
   12020:	ldr	x0, [sp, #24]
   12024:	bl	21b04 <omp_get_num_procs@@OMP_1.0+0x4a8>
   12028:	nop
   1202c:	ldp	x29, x30, [sp], #48
   12030:	ret
   12034:	mrs	x1, tpidr_el0
   12038:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   1203c:	ldr	x0, [x0, #4016]
   12040:	add	x0, x1, x0
   12044:	ret
   12048:	nop
   1204c:	ret
   12050:	stp	x29, x30, [sp, #-48]!
   12054:	mov	x29, sp
   12058:	str	x0, [sp, #40]
   1205c:	str	x1, [sp, #32]
   12060:	str	x2, [sp, #24]
   12064:	bl	12048 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1e0>
   12068:	ldr	x0, [sp, #40]
   1206c:	ldr	x0, [x0]
   12070:	str	x0, [sp, #24]
   12074:	ldr	x1, [sp, #32]
   12078:	ldr	x0, [sp, #24]
   1207c:	cmp	x1, x0
   12080:	b.cc	12088 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x220>  // b.lo, b.ul, b.last
   12084:	b	12064 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1fc>
   12088:	nop
   1208c:	ldp	x29, x30, [sp], #48
   12090:	ret
   12094:	stp	x29, x30, [sp, #-48]!
   12098:	mov	x29, sp
   1209c:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   120a0:	str	x0, [sp, #32]
   120a4:	ldr	x0, [sp, #32]
   120a8:	ldr	x0, [x0, #16]
   120ac:	str	x0, [sp, #24]
   120b0:	ldr	x0, [sp, #32]
   120b4:	ldr	x0, [x0, #24]
   120b8:	str	x0, [sp, #16]
   120bc:	ldr	x0, [sp, #24]
   120c0:	cmp	x0, #0x0
   120c4:	b.eq	1217c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x314>  // b.none
   120c8:	ldr	x0, [sp, #24]
   120cc:	ldr	w0, [x0]
   120d0:	cmp	w0, #0x1
   120d4:	b.eq	1217c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x314>  // b.none
   120d8:	ldr	x0, [sp, #16]
   120dc:	ldr	w1, [x0, #48]
   120e0:	ldr	x0, [sp, #16]
   120e4:	ldr	w0, [x0, #40]
   120e8:	add	w0, w1, w0
   120ec:	str	w0, [sp, #44]
   120f0:	ldr	x0, [sp, #24]
   120f4:	ldr	w0, [x0]
   120f8:	ldr	w1, [sp, #44]
   120fc:	cmp	w1, w0
   12100:	b.cc	12118 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2b0>  // b.lo, b.ul, b.last
   12104:	ldr	x0, [sp, #24]
   12108:	ldr	w0, [x0]
   1210c:	ldr	w1, [sp, #44]
   12110:	sub	w0, w1, w0
   12114:	str	w0, [sp, #44]
   12118:	ldr	x0, [sp, #16]
   1211c:	ldr	x1, [x0, #32]
   12120:	ldr	w0, [sp, #44]
   12124:	lsl	x0, x0, #2
   12128:	add	x0, x1, x0
   1212c:	ldr	x1, [sp, #32]
   12130:	ldr	w1, [x1, #40]
   12134:	str	w1, [x0]
   12138:	ldr	x0, [sp, #16]
   1213c:	ldr	w0, [x0, #40]
   12140:	add	w2, w0, #0x1
   12144:	ldr	x1, [sp, #16]
   12148:	str	w2, [x1, #40]
   1214c:	cmp	w0, #0x0
   12150:	b.ne	12180 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>  // b.any
   12154:	ldr	x0, [sp, #24]
   12158:	ldr	x1, [x0, #80]
   1215c:	ldr	x0, [sp, #32]
   12160:	ldr	w0, [x0, #40]
   12164:	mov	w0, w0
   12168:	lsl	x0, x0, #3
   1216c:	add	x0, x1, x0
   12170:	ldr	x0, [x0]
   12174:	bl	11f9c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x134>
   12178:	b	12180 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x318>
   1217c:	nop
   12180:	ldp	x29, x30, [sp], #48
   12184:	ret
   12188:	stp	x29, x30, [sp, #-64]!
   1218c:	mov	x29, sp
   12190:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   12194:	str	x0, [sp, #48]
   12198:	ldr	x0, [sp, #48]
   1219c:	ldr	x0, [x0, #16]
   121a0:	str	x0, [sp, #40]
   121a4:	ldr	x0, [sp, #48]
   121a8:	ldr	x0, [x0, #24]
   121ac:	str	x0, [sp, #32]
   121b0:	ldr	x0, [sp, #40]
   121b4:	cmp	x0, #0x0
   121b8:	b.eq	1226c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x404>  // b.none
   121bc:	ldr	x0, [sp, #40]
   121c0:	ldr	w0, [x0]
   121c4:	cmp	w0, #0x1
   121c8:	b.eq	1226c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x404>  // b.none
   121cc:	ldr	x0, [sp, #32]
   121d0:	mov	w1, #0xffffffff            	// #-1
   121d4:	str	w1, [x0, #44]
   121d8:	ldr	x0, [sp, #32]
   121dc:	ldr	w0, [x0, #40]
   121e0:	sub	w1, w0, #0x1
   121e4:	ldr	x0, [sp, #32]
   121e8:	str	w1, [x0, #40]
   121ec:	ldr	x0, [sp, #32]
   121f0:	ldr	w0, [x0, #40]
   121f4:	cmp	w0, #0x0
   121f8:	b.eq	12270 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x408>  // b.none
   121fc:	ldr	x0, [sp, #32]
   12200:	ldr	w0, [x0, #48]
   12204:	add	w0, w0, #0x1
   12208:	str	w0, [sp, #60]
   1220c:	ldr	x0, [sp, #40]
   12210:	ldr	w0, [x0]
   12214:	ldr	w1, [sp, #60]
   12218:	cmp	w1, w0
   1221c:	b.ne	12224 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3bc>  // b.any
   12220:	str	wzr, [sp, #60]
   12224:	ldr	x0, [sp, #32]
   12228:	ldr	w1, [sp, #60]
   1222c:	str	w1, [x0, #48]
   12230:	ldr	x0, [sp, #32]
   12234:	ldr	x1, [x0, #32]
   12238:	ldr	w0, [sp, #60]
   1223c:	lsl	x0, x0, #2
   12240:	add	x0, x1, x0
   12244:	ldr	w0, [x0]
   12248:	str	w0, [sp, #28]
   1224c:	ldr	x0, [sp, #40]
   12250:	ldr	x1, [x0, #80]
   12254:	ldr	w0, [sp, #28]
   12258:	lsl	x0, x0, #3
   1225c:	add	x0, x1, x0
   12260:	ldr	x0, [x0]
   12264:	bl	11f9c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x134>
   12268:	b	12270 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x408>
   1226c:	nop
   12270:	ldp	x29, x30, [sp], #64
   12274:	ret
   12278:	stp	x29, x30, [sp, #-64]!
   1227c:	mov	x29, sp
   12280:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   12284:	str	x0, [sp, #48]
   12288:	ldr	x0, [sp, #48]
   1228c:	ldr	x0, [x0, #16]
   12290:	str	x0, [sp, #40]
   12294:	ldr	x0, [sp, #48]
   12298:	ldr	x0, [x0, #24]
   1229c:	str	x0, [sp, #32]
   122a0:	ldr	x0, [sp, #40]
   122a4:	cmp	x0, #0x0
   122a8:	b.eq	123e8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x580>  // b.none
   122ac:	ldr	x0, [sp, #40]
   122b0:	ldr	w0, [x0]
   122b4:	cmp	w0, #0x1
   122b8:	b.eq	123e8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x580>  // b.none
   122bc:	ldr	x0, [sp, #32]
   122c0:	mov	w1, #0xffffffff            	// #-1
   122c4:	str	w1, [x0, #44]
   122c8:	ldr	x0, [sp, #32]
   122cc:	ldr	w0, [x0, #40]
   122d0:	cmp	w0, #0x1
   122d4:	b.ne	12300 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x498>  // b.any
   122d8:	ldr	x0, [sp, #40]
   122dc:	ldr	x1, [x0, #80]
   122e0:	ldr	x0, [sp, #48]
   122e4:	ldr	w0, [x0, #40]
   122e8:	mov	w0, w0
   122ec:	lsl	x0, x0, #3
   122f0:	add	x0, x1, x0
   122f4:	ldr	x0, [x0]
   122f8:	bl	11f9c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x134>
   122fc:	b	123ec <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x584>
   12300:	ldr	x0, [sp, #32]
   12304:	ldr	w1, [x0, #40]
   12308:	ldr	x0, [sp, #40]
   1230c:	ldr	w0, [x0]
   12310:	cmp	w1, w0
   12314:	b.cs	12378 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x510>  // b.hs, b.nlast
   12318:	ldr	x0, [sp, #32]
   1231c:	ldr	w1, [x0, #48]
   12320:	ldr	x0, [sp, #32]
   12324:	ldr	w0, [x0, #40]
   12328:	add	w0, w1, w0
   1232c:	str	w0, [sp, #60]
   12330:	ldr	x0, [sp, #40]
   12334:	ldr	w0, [x0]
   12338:	ldr	w1, [sp, #60]
   1233c:	cmp	w1, w0
   12340:	b.cc	12358 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x4f0>  // b.lo, b.ul, b.last
   12344:	ldr	x0, [sp, #40]
   12348:	ldr	w0, [x0]
   1234c:	ldr	w1, [sp, #60]
   12350:	sub	w0, w1, w0
   12354:	str	w0, [sp, #60]
   12358:	ldr	x0, [sp, #32]
   1235c:	ldr	x1, [x0, #32]
   12360:	ldr	w0, [sp, #60]
   12364:	lsl	x0, x0, #2
   12368:	add	x0, x1, x0
   1236c:	ldr	x1, [sp, #48]
   12370:	ldr	w1, [x1, #40]
   12374:	str	w1, [x0]
   12378:	ldr	x0, [sp, #32]
   1237c:	ldr	w0, [x0, #48]
   12380:	add	w0, w0, #0x1
   12384:	str	w0, [sp, #60]
   12388:	ldr	x0, [sp, #40]
   1238c:	ldr	w0, [x0]
   12390:	ldr	w1, [sp, #60]
   12394:	cmp	w1, w0
   12398:	b.ne	123a0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x538>  // b.any
   1239c:	str	wzr, [sp, #60]
   123a0:	ldr	x0, [sp, #32]
   123a4:	ldr	w1, [sp, #60]
   123a8:	str	w1, [x0, #48]
   123ac:	ldr	x0, [sp, #32]
   123b0:	ldr	x1, [x0, #32]
   123b4:	ldr	w0, [sp, #60]
   123b8:	lsl	x0, x0, #2
   123bc:	add	x0, x1, x0
   123c0:	ldr	w0, [x0]
   123c4:	str	w0, [sp, #28]
   123c8:	ldr	x0, [sp, #40]
   123cc:	ldr	x1, [x0, #80]
   123d0:	ldr	w0, [sp, #28]
   123d4:	lsl	x0, x0, #3
   123d8:	add	x0, x1, x0
   123dc:	ldr	x0, [x0]
   123e0:	bl	11f9c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x134>
   123e4:	b	123ec <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x584>
   123e8:	nop
   123ec:	ldp	x29, x30, [sp], #64
   123f0:	ret
   123f4:	stp	x29, x30, [sp, #-32]!
   123f8:	mov	x29, sp
   123fc:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   12400:	str	x0, [sp, #24]
   12404:	ldr	x0, [sp, #24]
   12408:	ldr	x0, [x0, #16]
   1240c:	str	x0, [sp, #16]
   12410:	ldr	x0, [sp, #16]
   12414:	cmp	x0, #0x0
   12418:	b.eq	12440 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x5d8>  // b.none
   1241c:	ldr	x0, [sp, #16]
   12420:	ldr	w0, [x0]
   12424:	cmp	w0, #0x1
   12428:	b.eq	12440 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x5d8>  // b.none
   1242c:	ldr	x0, [sp, #16]
   12430:	ldr	x0, [x0, #80]
   12434:	ldr	x0, [x0]
   12438:	bl	11f9c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x134>
   1243c:	b	12444 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x5dc>
   12440:	nop
   12444:	ldp	x29, x30, [sp], #32
   12448:	ret
   1244c:	stp	x29, x30, [sp, #-48]!
   12450:	mov	x29, sp
   12454:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   12458:	str	x0, [sp, #32]
   1245c:	ldr	x0, [sp, #32]
   12460:	ldr	x0, [x0, #16]
   12464:	str	x0, [sp, #24]
   12468:	ldr	x0, [sp, #32]
   1246c:	ldr	x0, [x0, #24]
   12470:	str	x0, [sp, #16]
   12474:	ldr	x0, [sp, #32]
   12478:	ldr	w0, [x0, #40]
   1247c:	str	w0, [sp, #44]
   12480:	ldr	x0, [sp, #24]
   12484:	cmp	x0, #0x0
   12488:	b.eq	124fc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x694>  // b.none
   1248c:	ldr	x0, [sp, #24]
   12490:	ldr	w0, [x0]
   12494:	cmp	w0, #0x1
   12498:	b.eq	124fc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x694>  // b.none
   1249c:	ldr	x0, [sp, #16]
   124a0:	mov	w1, #0xffffffff            	// #-1
   124a4:	str	w1, [x0, #44]
   124a8:	ldr	w0, [sp, #44]
   124ac:	add	w0, w0, #0x1
   124b0:	str	w0, [sp, #44]
   124b4:	ldr	x0, [sp, #24]
   124b8:	ldr	w0, [x0]
   124bc:	ldr	w1, [sp, #44]
   124c0:	cmp	w1, w0
   124c4:	b.ne	124cc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x664>  // b.any
   124c8:	str	wzr, [sp, #44]
   124cc:	ldr	x0, [sp, #16]
   124d0:	ldr	x0, [x0, #32]
   124d4:	ldr	w1, [sp, #44]
   124d8:	str	w1, [x0]
   124dc:	ldr	x0, [sp, #24]
   124e0:	ldr	x1, [x0, #80]
   124e4:	ldr	w0, [sp, #44]
   124e8:	lsl	x0, x0, #3
   124ec:	add	x0, x1, x0
   124f0:	ldr	x0, [x0]
   124f4:	bl	11f9c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x134>
   124f8:	b	12500 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x698>
   124fc:	nop
   12500:	ldp	x29, x30, [sp], #48
   12504:	ret

0000000000012508 <GOMP_ordered_start@@GOMP_1.0>:
   12508:	stp	x29, x30, [sp, #-48]!
   1250c:	mov	x29, sp
   12510:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   12514:	str	x0, [sp, #40]
   12518:	ldr	x0, [sp, #40]
   1251c:	ldr	x0, [x0, #16]
   12520:	str	x0, [sp, #32]
   12524:	ldr	x0, [sp, #40]
   12528:	ldr	x0, [x0, #24]
   1252c:	str	x0, [sp, #24]
   12530:	ldr	x0, [sp, #32]
   12534:	cmp	x0, #0x0
   12538:	b.eq	125a0 <GOMP_ordered_start@@GOMP_1.0+0x98>  // b.none
   1253c:	ldr	x0, [sp, #32]
   12540:	ldr	w0, [x0]
   12544:	cmp	w0, #0x1
   12548:	b.eq	125a0 <GOMP_ordered_start@@GOMP_1.0+0x98>  // b.none
   1254c:	dmb	ish
   12550:	ldr	x0, [sp, #24]
   12554:	ldr	w1, [x0, #44]
   12558:	ldr	x0, [sp, #40]
   1255c:	ldr	w0, [x0, #40]
   12560:	cmp	w1, w0
   12564:	b.eq	125a4 <GOMP_ordered_start@@GOMP_1.0+0x9c>  // b.none
   12568:	ldr	x0, [sp, #32]
   1256c:	ldr	x1, [x0, #80]
   12570:	ldr	x0, [sp, #40]
   12574:	ldr	w0, [x0, #40]
   12578:	mov	w0, w0
   1257c:	lsl	x0, x0, #3
   12580:	add	x0, x1, x0
   12584:	ldr	x0, [x0]
   12588:	bl	11f08 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xa0>
   1258c:	ldr	x0, [sp, #40]
   12590:	ldr	w1, [x0, #40]
   12594:	ldr	x0, [sp, #24]
   12598:	str	w1, [x0, #44]
   1259c:	b	125a4 <GOMP_ordered_start@@GOMP_1.0+0x9c>
   125a0:	nop
   125a4:	ldp	x29, x30, [sp], #48
   125a8:	ret

00000000000125ac <GOMP_ordered_end@@GOMP_1.0>:
   125ac:	nop
   125b0:	ret
   125b4:	stp	x29, x30, [sp, #-400]!
   125b8:	mov	x29, sp
   125bc:	str	w0, [sp, #44]
   125c0:	str	x1, [sp, #32]
   125c4:	str	x2, [sp, #24]
   125c8:	str	x3, [sp, #16]
   125cc:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   125d0:	str	x0, [sp, #344]
   125d4:	ldr	x0, [sp, #344]
   125d8:	ldr	x0, [x0, #16]
   125dc:	str	x0, [sp, #336]
   125e0:	ldr	x0, [sp, #344]
   125e4:	ldr	x0, [x0, #24]
   125e8:	str	x0, [sp, #328]
   125ec:	str	wzr, [sp, #392]
   125f0:	ldr	x0, [sp, #336]
   125f4:	cmp	x0, #0x0
   125f8:	b.eq	1260c <GOMP_ordered_end@@GOMP_1.0+0x60>  // b.none
   125fc:	ldr	x0, [sp, #336]
   12600:	ldr	w0, [x0]
   12604:	cmp	w0, #0x1
   12608:	b.ne	12660 <GOMP_ordered_end@@GOMP_1.0+0xb4>  // b.any
   1260c:	nop
   12610:	b	12618 <GOMP_ordered_end@@GOMP_1.0+0x6c>
   12614:	nop
   12618:	ldr	x0, [sp, #16]
   1261c:	cmp	x0, #0x0
   12620:	b.ne	12630 <GOMP_ordered_end@@GOMP_1.0+0x84>  // b.any
   12624:	ldr	x0, [sp, #328]
   12628:	str	xzr, [x0, #32]
   1262c:	b	12a5c <GOMP_ordered_end@@GOMP_1.0+0x4b0>
   12630:	ldr	x0, [sp, #16]
   12634:	add	x0, x0, #0x38
   12638:	bl	8e10 <fprintf@plt+0x1e0>
   1263c:	str	x0, [sp, #320]
   12640:	ldr	x0, [sp, #320]
   12644:	add	x1, x0, #0x38
   12648:	ldr	x0, [sp, #320]
   1264c:	str	x1, [x0, #48]
   12650:	ldr	x0, [sp, #328]
   12654:	ldr	x1, [sp, #320]
   12658:	str	x1, [x0, #32]
   1265c:	b	12a5c <GOMP_ordered_end@@GOMP_1.0+0x4b0>
   12660:	str	wzr, [sp, #396]
   12664:	b	12734 <GOMP_ordered_end@@GOMP_1.0+0x188>
   12668:	ldr	w0, [sp, #396]
   1266c:	lsl	x0, x0, #3
   12670:	ldr	x1, [sp, #32]
   12674:	add	x0, x1, x0
   12678:	ldr	x0, [x0]
   1267c:	cmp	x0, #0x0
   12680:	b.eq	12614 <GOMP_ordered_end@@GOMP_1.0+0x68>  // b.none
   12684:	ldr	w0, [sp, #392]
   12688:	cmp	w0, #0x40
   1268c:	b.hi	12728 <GOMP_ordered_end@@GOMP_1.0+0x17c>  // b.pmore
   12690:	ldr	w0, [sp, #396]
   12694:	lsl	x0, x0, #3
   12698:	ldr	x1, [sp, #32]
   1269c:	add	x0, x1, x0
   126a0:	ldr	x0, [x0]
   126a4:	cmp	x0, #0x1
   126a8:	b.ne	126b8 <GOMP_ordered_end@@GOMP_1.0+0x10c>  // b.any
   126ac:	mov	w0, #0x1                   	// #1
   126b0:	str	w0, [sp, #356]
   126b4:	b	126e4 <GOMP_ordered_end@@GOMP_1.0+0x138>
   126b8:	ldr	w0, [sp, #396]
   126bc:	lsl	x0, x0, #3
   126c0:	ldr	x1, [sp, #32]
   126c4:	add	x0, x1, x0
   126c8:	ldr	x0, [x0]
   126cc:	sub	x0, x0, #0x1
   126d0:	clz	x0, x0
   126d4:	mov	w1, w0
   126d8:	mov	w0, #0x40                  	// #64
   126dc:	sub	w0, w0, w1
   126e0:	str	w0, [sp, #356]
   126e4:	ldr	w1, [sp, #392]
   126e8:	ldr	w0, [sp, #356]
   126ec:	add	w0, w1, w0
   126f0:	cmp	w0, #0x40
   126f4:	b.hi	12720 <GOMP_ordered_end@@GOMP_1.0+0x174>  // b.pmore
   126f8:	ldr	w0, [sp, #396]
   126fc:	lsl	x0, x0, #2
   12700:	add	x1, sp, #0x30
   12704:	ldr	w2, [sp, #356]
   12708:	str	w2, [x1, x0]
   1270c:	ldr	w1, [sp, #392]
   12710:	ldr	w0, [sp, #356]
   12714:	add	w0, w1, w0
   12718:	str	w0, [sp, #392]
   1271c:	b	12728 <GOMP_ordered_end@@GOMP_1.0+0x17c>
   12720:	mov	w0, #0x41                  	// #65
   12724:	str	w0, [sp, #392]
   12728:	ldr	w0, [sp, #396]
   1272c:	add	w0, w0, #0x1
   12730:	str	w0, [sp, #396]
   12734:	ldr	w1, [sp, #396]
   12738:	ldr	w0, [sp, #44]
   1273c:	cmp	w1, w0
   12740:	b.cc	12668 <GOMP_ordered_end@@GOMP_1.0+0xbc>  // b.lo, b.ul, b.last
   12744:	ldr	x0, [sp, #328]
   12748:	ldr	w0, [x0]
   1274c:	cmp	w0, #0x1
   12750:	b.ne	12768 <GOMP_ordered_end@@GOMP_1.0+0x1bc>  // b.any
   12754:	ldr	x0, [sp, #336]
   12758:	ldr	w0, [x0]
   1275c:	mov	w0, w0
   12760:	str	x0, [sp, #376]
   12764:	b	127a4 <GOMP_ordered_end@@GOMP_1.0+0x1f8>
   12768:	ldr	x0, [sp, #328]
   1276c:	ldr	w0, [x0]
   12770:	cmp	w0, #0x3
   12774:	b.ne	12788 <GOMP_ordered_end@@GOMP_1.0+0x1dc>  // b.any
   12778:	ldr	x0, [sp, #32]
   1277c:	ldr	x0, [x0]
   12780:	str	x0, [sp, #376]
   12784:	b	127a4 <GOMP_ordered_end@@GOMP_1.0+0x1f8>
   12788:	ldr	x0, [sp, #32]
   1278c:	ldr	x0, [x0]
   12790:	sub	x1, x0, #0x1
   12794:	ldr	x0, [sp, #24]
   12798:	sdiv	x0, x1, x0
   1279c:	add	x0, x0, #0x1
   127a0:	str	x0, [sp, #376]
   127a4:	ldr	w0, [sp, #392]
   127a8:	cmp	w0, #0x40
   127ac:	b.hi	127c8 <GOMP_ordered_end@@GOMP_1.0+0x21c>  // b.pmore
   127b0:	mov	x0, #0x8                   	// #8
   127b4:	str	x0, [sp, #368]
   127b8:	ldr	w0, [sp, #44]
   127bc:	lsl	x0, x0, #2
   127c0:	str	x0, [sp, #360]
   127c4:	b	127d8 <GOMP_ordered_end@@GOMP_1.0+0x22c>
   127c8:	ldr	w0, [sp, #44]
   127cc:	lsl	x0, x0, #3
   127d0:	str	x0, [sp, #368]
   127d4:	str	xzr, [sp, #360]
   127d8:	ldr	x0, [sp, #368]
   127dc:	add	x0, x0, #0x3f
   127e0:	and	x0, x0, #0xffffffffffffffc0
   127e4:	str	x0, [sp, #368]
   127e8:	ldr	x1, [sp, #376]
   127ec:	ldr	x0, [sp, #368]
   127f0:	mul	x1, x1, x0
   127f4:	ldr	x0, [sp, #360]
   127f8:	add	x1, x1, x0
   127fc:	ldr	x0, [sp, #16]
   12800:	add	x0, x1, x0
   12804:	add	x0, x0, #0x77
   12808:	bl	8dd0 <fprintf@plt+0x1a0>
   1280c:	str	x0, [sp, #320]
   12810:	ldr	x0, [sp, #320]
   12814:	ldr	x1, [sp, #24]
   12818:	str	x1, [x0]
   1281c:	ldr	x0, [sp, #320]
   12820:	ldr	x1, [sp, #368]
   12824:	str	x1, [x0, #8]
   12828:	ldr	x0, [sp, #320]
   1282c:	ldr	w1, [sp, #44]
   12830:	str	w1, [x0, #16]
   12834:	ldr	x0, [sp, #320]
   12838:	strb	wzr, [x0, #20]
   1283c:	ldr	x1, [sp, #320]
   12840:	ldr	x0, [sp, #360]
   12844:	add	x0, x1, x0
   12848:	add	x0, x0, #0x77
   1284c:	and	x0, x0, #0xffffffffffffffc0
   12850:	mov	x1, x0
   12854:	ldr	x0, [sp, #320]
   12858:	str	x1, [x0, #24]
   1285c:	ldr	x0, [sp, #16]
   12860:	cmp	x0, #0x0
   12864:	b.eq	128a0 <GOMP_ordered_end@@GOMP_1.0+0x2f4>  // b.none
   12868:	ldr	x0, [sp, #320]
   1286c:	ldr	x1, [x0, #24]
   12870:	ldr	x2, [sp, #376]
   12874:	ldr	x0, [sp, #368]
   12878:	mul	x0, x2, x0
   1287c:	add	x1, x1, x0
   12880:	ldr	x0, [sp, #320]
   12884:	str	x1, [x0, #48]
   12888:	ldr	x0, [sp, #320]
   1288c:	ldr	x0, [x0, #48]
   12890:	ldr	x2, [sp, #16]
   12894:	mov	w1, #0x0                   	// #0
   12898:	bl	88d0 <memset@plt>
   1289c:	b	128a8 <GOMP_ordered_end@@GOMP_1.0+0x2fc>
   128a0:	ldr	x0, [sp, #320]
   128a4:	str	xzr, [x0, #48]
   128a8:	ldr	w0, [sp, #392]
   128ac:	cmp	w0, #0x40
   128b0:	b.hi	12974 <GOMP_ordered_end@@GOMP_1.0+0x3c8>  // b.pmore
   128b4:	str	wzr, [sp, #352]
   128b8:	ldr	x0, [sp, #320]
   128bc:	mov	w1, #0x1                   	// #1
   128c0:	strb	w1, [x0, #20]
   128c4:	ldr	w0, [sp, #44]
   128c8:	str	w0, [sp, #396]
   128cc:	b	12924 <GOMP_ordered_end@@GOMP_1.0+0x378>
   128d0:	ldr	w0, [sp, #396]
   128d4:	sub	w0, w0, #0x1
   128d8:	ldr	x1, [sp, #320]
   128dc:	mov	w0, w0
   128e0:	add	x0, x0, #0xc
   128e4:	lsl	x0, x0, #2
   128e8:	add	x0, x1, x0
   128ec:	ldr	w1, [sp, #352]
   128f0:	str	w1, [x0, #8]
   128f4:	ldr	w0, [sp, #396]
   128f8:	sub	w0, w0, #0x1
   128fc:	mov	w0, w0
   12900:	lsl	x0, x0, #2
   12904:	add	x1, sp, #0x30
   12908:	ldr	w0, [x1, x0]
   1290c:	ldr	w1, [sp, #352]
   12910:	add	w0, w1, w0
   12914:	str	w0, [sp, #352]
   12918:	ldr	w0, [sp, #396]
   1291c:	sub	w0, w0, #0x1
   12920:	str	w0, [sp, #396]
   12924:	ldr	w0, [sp, #396]
   12928:	cmp	w0, #0x0
   1292c:	b.ne	128d0 <GOMP_ordered_end@@GOMP_1.0+0x324>  // b.any
   12930:	str	xzr, [sp, #384]
   12934:	b	12960 <GOMP_ordered_end@@GOMP_1.0+0x3b4>
   12938:	ldr	x0, [sp, #320]
   1293c:	ldr	x1, [x0, #24]
   12940:	ldr	x2, [sp, #384]
   12944:	ldr	x0, [sp, #368]
   12948:	mul	x0, x2, x0
   1294c:	add	x0, x1, x0
   12950:	str	xzr, [x0]
   12954:	ldr	x0, [sp, #384]
   12958:	add	x0, x0, #0x1
   1295c:	str	x0, [sp, #384]
   12960:	ldr	x1, [sp, #384]
   12964:	ldr	x0, [sp, #376]
   12968:	cmp	x1, x0
   1296c:	b.cc	12938 <GOMP_ordered_end@@GOMP_1.0+0x38c>  // b.lo, b.ul, b.last
   12970:	b	129c8 <GOMP_ordered_end@@GOMP_1.0+0x41c>
   12974:	str	xzr, [sp, #384]
   12978:	b	129b8 <GOMP_ordered_end@@GOMP_1.0+0x40c>
   1297c:	ldr	x0, [sp, #320]
   12980:	ldr	x1, [x0, #24]
   12984:	ldr	x2, [sp, #384]
   12988:	ldr	x0, [sp, #368]
   1298c:	mul	x0, x2, x0
   12990:	add	x3, x1, x0
   12994:	ldr	w0, [sp, #44]
   12998:	lsl	x0, x0, #3
   1299c:	mov	x2, x0
   129a0:	mov	w1, #0x0                   	// #0
   129a4:	mov	x0, x3
   129a8:	bl	88d0 <memset@plt>
   129ac:	ldr	x0, [sp, #384]
   129b0:	add	x0, x0, #0x1
   129b4:	str	x0, [sp, #384]
   129b8:	ldr	x1, [sp, #384]
   129bc:	ldr	x0, [sp, #376]
   129c0:	cmp	x1, x0
   129c4:	b.cc	1297c <GOMP_ordered_end@@GOMP_1.0+0x3d0>  // b.lo, b.ul, b.last
   129c8:	ldr	x0, [sp, #328]
   129cc:	ldr	w0, [x0]
   129d0:	cmp	w0, #0x1
   129d4:	b.ne	12a50 <GOMP_ordered_end@@GOMP_1.0+0x4a4>  // b.any
   129d8:	ldr	x0, [sp, #24]
   129dc:	cmp	x0, #0x0
   129e0:	b.ne	12a50 <GOMP_ordered_end@@GOMP_1.0+0x4a4>  // b.any
   129e4:	ldr	x0, [sp, #32]
   129e8:	ldr	x0, [x0]
   129ec:	mov	x1, x0
   129f0:	ldr	x0, [sp, #376]
   129f4:	udiv	x0, x1, x0
   129f8:	str	x0, [sp, #312]
   129fc:	ldr	x0, [sp, #32]
   12a00:	ldr	x0, [x0]
   12a04:	ldr	x1, [sp, #376]
   12a08:	udiv	x2, x0, x1
   12a0c:	ldr	x1, [sp, #376]
   12a10:	mul	x1, x2, x1
   12a14:	sub	x0, x0, x1
   12a18:	str	x0, [sp, #304]
   12a1c:	ldr	x0, [sp, #312]
   12a20:	add	x1, x0, #0x1
   12a24:	ldr	x0, [sp, #304]
   12a28:	mul	x0, x1, x0
   12a2c:	mov	x1, x0
   12a30:	ldr	x0, [sp, #320]
   12a34:	str	x1, [x0, #40]
   12a38:	ldr	x1, [sp, #312]
   12a3c:	ldr	x0, [sp, #320]
   12a40:	str	x1, [x0]
   12a44:	ldr	x1, [sp, #304]
   12a48:	ldr	x0, [sp, #320]
   12a4c:	str	x1, [x0, #32]
   12a50:	ldr	x0, [sp, #328]
   12a54:	ldr	x1, [sp, #320]
   12a58:	str	x1, [x0, #32]
   12a5c:	ldp	x29, x30, [sp], #400
   12a60:	ret

0000000000012a64 <GOMP_doacross_post@@GOMP_4.5>:
   12a64:	stp	x29, x30, [sp, #-96]!
   12a68:	mov	x29, sp
   12a6c:	str	x0, [sp, #24]
   12a70:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   12a74:	str	x0, [sp, #64]
   12a78:	ldr	x0, [sp, #64]
   12a7c:	ldr	x0, [x0, #24]
   12a80:	str	x0, [sp, #56]
   12a84:	ldr	x0, [sp, #56]
   12a88:	ldr	x0, [x0, #32]
   12a8c:	str	x0, [sp, #48]
   12a90:	ldr	x0, [sp, #48]
   12a94:	cmp	x0, #0x0
   12a98:	cset	w0, eq  // eq = none
   12a9c:	and	w0, w0, #0xff
   12aa0:	and	x0, x0, #0xff
   12aa4:	cmp	x0, #0x0
   12aa8:	b.ne	12acc <GOMP_doacross_post@@GOMP_4.5+0x68>  // b.any
   12aac:	ldr	x0, [sp, #48]
   12ab0:	ldr	x0, [x0, #24]
   12ab4:	cmp	x0, #0x0
   12ab8:	cset	w0, eq  // eq = none
   12abc:	and	w0, w0, #0xff
   12ac0:	and	x0, x0, #0xff
   12ac4:	cmp	x0, #0x0
   12ac8:	b.eq	12ad4 <GOMP_doacross_post@@GOMP_4.5+0x70>  // b.none
   12acc:	dmb	ish
   12ad0:	b	12cbc <GOMP_doacross_post@@GOMP_4.5+0x258>
   12ad4:	ldr	x0, [sp, #56]
   12ad8:	ldr	w0, [x0]
   12adc:	cmp	w0, #0x1
   12ae0:	cset	w0, eq  // eq = none
   12ae4:	and	w0, w0, #0xff
   12ae8:	and	x0, x0, #0xff
   12aec:	cmp	x0, #0x0
   12af0:	b.eq	12b08 <GOMP_doacross_post@@GOMP_4.5+0xa4>  // b.none
   12af4:	ldr	x0, [sp, #64]
   12af8:	ldr	w0, [x0, #40]
   12afc:	mov	w0, w0
   12b00:	str	x0, [sp, #88]
   12b04:	b	12b40 <GOMP_doacross_post@@GOMP_4.5+0xdc>
   12b08:	ldr	x0, [sp, #56]
   12b0c:	ldr	w0, [x0]
   12b10:	cmp	w0, #0x3
   12b14:	b.ne	12b28 <GOMP_doacross_post@@GOMP_4.5+0xc4>  // b.any
   12b18:	ldr	x0, [sp, #24]
   12b1c:	ldr	x0, [x0]
   12b20:	str	x0, [sp, #88]
   12b24:	b	12b40 <GOMP_doacross_post@@GOMP_4.5+0xdc>
   12b28:	ldr	x0, [sp, #24]
   12b2c:	ldr	x1, [x0]
   12b30:	ldr	x0, [sp, #48]
   12b34:	ldr	x0, [x0]
   12b38:	sdiv	x0, x1, x0
   12b3c:	str	x0, [sp, #88]
   12b40:	ldr	x0, [sp, #48]
   12b44:	ldr	x1, [x0, #24]
   12b48:	ldr	x0, [sp, #48]
   12b4c:	ldr	x2, [x0, #8]
   12b50:	ldr	x0, [sp, #88]
   12b54:	mul	x0, x2, x0
   12b58:	add	x0, x1, x0
   12b5c:	str	x0, [sp, #40]
   12b60:	ldr	x0, [sp, #48]
   12b64:	ldrb	w0, [x0, #20]
   12b68:	and	x0, x0, #0xff
   12b6c:	cmp	x0, #0x0
   12b70:	b.eq	12c34 <GOMP_doacross_post@@GOMP_4.5+0x1d0>  // b.none
   12b74:	ldr	x0, [sp, #24]
   12b78:	ldr	x0, [x0]
   12b7c:	mov	x1, x0
   12b80:	ldr	x0, [sp, #48]
   12b84:	ldr	w0, [x0, #56]
   12b88:	lsl	x0, x1, x0
   12b8c:	str	x0, [sp, #72]
   12b90:	mov	w0, #0x1                   	// #1
   12b94:	str	w0, [sp, #84]
   12b98:	b	12be8 <GOMP_doacross_post@@GOMP_4.5+0x184>
   12b9c:	ldr	w0, [sp, #84]
   12ba0:	lsl	x0, x0, #3
   12ba4:	ldr	x1, [sp, #24]
   12ba8:	add	x0, x1, x0
   12bac:	ldr	x0, [x0]
   12bb0:	mov	x2, x0
   12bb4:	ldr	x1, [sp, #48]
   12bb8:	ldr	w0, [sp, #84]
   12bbc:	add	x0, x0, #0xc
   12bc0:	lsl	x0, x0, #2
   12bc4:	add	x0, x1, x0
   12bc8:	ldr	w0, [x0, #8]
   12bcc:	lsl	x0, x2, x0
   12bd0:	ldr	x1, [sp, #72]
   12bd4:	orr	x0, x1, x0
   12bd8:	str	x0, [sp, #72]
   12bdc:	ldr	w0, [sp, #84]
   12be0:	add	w0, w0, #0x1
   12be4:	str	w0, [sp, #84]
   12be8:	ldr	x0, [sp, #48]
   12bec:	ldr	w0, [x0, #16]
   12bf0:	ldr	w1, [sp, #84]
   12bf4:	cmp	w1, w0
   12bf8:	b.cc	12b9c <GOMP_doacross_post@@GOMP_4.5+0x138>  // b.lo, b.ul, b.last
   12bfc:	ldr	x0, [sp, #72]
   12c00:	add	x0, x0, #0x1
   12c04:	str	x0, [sp, #72]
   12c08:	ldr	x0, [sp, #40]
   12c0c:	ldar	x0, [x0]
   12c10:	ldr	x1, [sp, #72]
   12c14:	cmp	x1, x0
   12c18:	b.ne	12c24 <GOMP_doacross_post@@GOMP_4.5+0x1c0>  // b.any
   12c1c:	dmb	ish
   12c20:	b	12cbc <GOMP_doacross_post@@GOMP_4.5+0x258>
   12c24:	ldr	x0, [sp, #40]
   12c28:	ldr	x1, [sp, #72]
   12c2c:	stlr	x1, [x0]
   12c30:	b	12cbc <GOMP_doacross_post@@GOMP_4.5+0x258>
   12c34:	dmb	ishld
   12c38:	ldr	x0, [sp, #48]
   12c3c:	ldr	w0, [x0, #16]
   12c40:	str	w0, [sp, #84]
   12c44:	b	12ca8 <GOMP_doacross_post@@GOMP_4.5+0x244>
   12c48:	ldr	w0, [sp, #84]
   12c4c:	lsl	x0, x0, #3
   12c50:	ldr	x1, [sp, #24]
   12c54:	add	x0, x1, x0
   12c58:	ldr	x0, [x0]
   12c5c:	add	x1, x0, #0x1
   12c60:	ldr	w0, [sp, #84]
   12c64:	lsl	x0, x0, #3
   12c68:	ldr	x2, [sp, #40]
   12c6c:	add	x0, x2, x0
   12c70:	ldr	x0, [x0]
   12c74:	cmp	x1, x0
   12c78:	b.eq	12ca8 <GOMP_doacross_post@@GOMP_4.5+0x244>  // b.none
   12c7c:	ldr	w0, [sp, #84]
   12c80:	lsl	x0, x0, #3
   12c84:	ldr	x1, [sp, #40]
   12c88:	add	x0, x1, x0
   12c8c:	ldr	w1, [sp, #84]
   12c90:	lsl	x1, x1, #3
   12c94:	ldr	x2, [sp, #24]
   12c98:	add	x1, x2, x1
   12c9c:	ldr	x1, [x1]
   12ca0:	add	x1, x1, #0x1
   12ca4:	stlr	x1, [x0]
   12ca8:	ldr	w0, [sp, #84]
   12cac:	sub	w1, w0, #0x1
   12cb0:	str	w1, [sp, #84]
   12cb4:	cmp	w0, #0x0
   12cb8:	b.ne	12c48 <GOMP_doacross_post@@GOMP_4.5+0x1e4>  // b.any
   12cbc:	ldp	x29, x30, [sp], #96
   12cc0:	ret

0000000000012cc4 <GOMP_doacross_wait@@GOMP_4.5>:
   12cc4:	stp	x29, x30, [sp, #-336]!
   12cc8:	mov	x29, sp
   12ccc:	str	x0, [sp, #24]
   12cd0:	str	x1, [sp, #280]
   12cd4:	str	x2, [sp, #288]
   12cd8:	str	x3, [sp, #296]
   12cdc:	str	x4, [sp, #304]
   12ce0:	str	x5, [sp, #312]
   12ce4:	str	x6, [sp, #320]
   12ce8:	str	x7, [sp, #328]
   12cec:	str	q0, [sp, #144]
   12cf0:	str	q1, [sp, #160]
   12cf4:	str	q2, [sp, #176]
   12cf8:	str	q3, [sp, #192]
   12cfc:	str	q4, [sp, #208]
   12d00:	str	q5, [sp, #224]
   12d04:	str	q6, [sp, #240]
   12d08:	str	q7, [sp, #256]
   12d0c:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   12d10:	str	x0, [sp, #112]
   12d14:	ldr	x0, [sp, #112]
   12d18:	ldr	x0, [x0, #24]
   12d1c:	str	x0, [sp, #104]
   12d20:	ldr	x0, [sp, #104]
   12d24:	ldr	x0, [x0, #32]
   12d28:	str	x0, [sp, #96]
   12d2c:	ldr	x0, [sp, #96]
   12d30:	cmp	x0, #0x0
   12d34:	cset	w0, eq  // eq = none
   12d38:	and	w0, w0, #0xff
   12d3c:	and	x0, x0, #0xff
   12d40:	cmp	x0, #0x0
   12d44:	b.ne	12d68 <GOMP_doacross_wait@@GOMP_4.5+0xa4>  // b.any
   12d48:	ldr	x0, [sp, #96]
   12d4c:	ldr	x0, [x0, #24]
   12d50:	cmp	x0, #0x0
   12d54:	cset	w0, eq  // eq = none
   12d58:	and	w0, w0, #0xff
   12d5c:	and	x0, x0, #0xff
   12d60:	cmp	x0, #0x0
   12d64:	b.eq	12d70 <GOMP_doacross_wait@@GOMP_4.5+0xac>  // b.none
   12d68:	dmb	ish
   12d6c:	b	130f4 <GOMP_doacross_wait@@GOMP_4.5+0x430>
   12d70:	ldr	x0, [sp, #104]
   12d74:	ldr	w0, [x0]
   12d78:	cmp	w0, #0x1
   12d7c:	cset	w0, eq  // eq = none
   12d80:	and	w0, w0, #0xff
   12d84:	and	x0, x0, #0xff
   12d88:	cmp	x0, #0x0
   12d8c:	b.eq	12e34 <GOMP_doacross_wait@@GOMP_4.5+0x170>  // b.none
   12d90:	ldr	x0, [sp, #104]
   12d94:	ldr	x0, [x0, #8]
   12d98:	cmp	x0, #0x0
   12d9c:	b.ne	12e00 <GOMP_doacross_wait@@GOMP_4.5+0x13c>  // b.any
   12da0:	ldr	x0, [sp, #96]
   12da4:	ldr	x0, [x0, #40]
   12da8:	ldr	x1, [sp, #24]
   12dac:	cmp	x1, x0
   12db0:	b.ge	12dd0 <GOMP_doacross_wait@@GOMP_4.5+0x10c>  // b.tcont
   12db4:	ldr	x0, [sp, #96]
   12db8:	ldr	x0, [x0]
   12dbc:	add	x0, x0, #0x1
   12dc0:	ldr	x1, [sp, #24]
   12dc4:	sdiv	x0, x1, x0
   12dc8:	str	x0, [sp, #136]
   12dcc:	b	12e64 <GOMP_doacross_wait@@GOMP_4.5+0x1a0>
   12dd0:	ldr	x0, [sp, #96]
   12dd4:	ldr	x0, [x0, #40]
   12dd8:	ldr	x1, [sp, #24]
   12ddc:	sub	x1, x1, x0
   12de0:	ldr	x0, [sp, #96]
   12de4:	ldr	x0, [x0]
   12de8:	sdiv	x1, x1, x0
   12dec:	ldr	x0, [sp, #96]
   12df0:	ldr	x0, [x0, #32]
   12df4:	add	x0, x1, x0
   12df8:	str	x0, [sp, #136]
   12dfc:	b	12e64 <GOMP_doacross_wait@@GOMP_4.5+0x1a0>
   12e00:	ldr	x0, [sp, #104]
   12e04:	ldr	x0, [x0, #8]
   12e08:	ldr	x1, [sp, #24]
   12e0c:	sdiv	x0, x1, x0
   12e10:	ldr	x1, [sp, #112]
   12e14:	ldr	x1, [x1, #16]
   12e18:	ldr	w1, [x1]
   12e1c:	mov	w1, w1
   12e20:	sdiv	x2, x0, x1
   12e24:	mul	x1, x2, x1
   12e28:	sub	x0, x0, x1
   12e2c:	str	x0, [sp, #136]
   12e30:	b	12e64 <GOMP_doacross_wait@@GOMP_4.5+0x1a0>
   12e34:	ldr	x0, [sp, #104]
   12e38:	ldr	w0, [x0]
   12e3c:	cmp	w0, #0x3
   12e40:	b.ne	12e50 <GOMP_doacross_wait@@GOMP_4.5+0x18c>  // b.any
   12e44:	ldr	x0, [sp, #24]
   12e48:	str	x0, [sp, #136]
   12e4c:	b	12e64 <GOMP_doacross_wait@@GOMP_4.5+0x1a0>
   12e50:	ldr	x0, [sp, #96]
   12e54:	ldr	x0, [x0]
   12e58:	ldr	x1, [sp, #24]
   12e5c:	sdiv	x0, x1, x0
   12e60:	str	x0, [sp, #136]
   12e64:	ldr	x0, [sp, #96]
   12e68:	ldr	x1, [x0, #24]
   12e6c:	ldr	x0, [sp, #96]
   12e70:	ldr	x2, [x0, #8]
   12e74:	ldr	x0, [sp, #136]
   12e78:	mul	x0, x2, x0
   12e7c:	add	x0, x1, x0
   12e80:	str	x0, [sp, #88]
   12e84:	ldr	x0, [sp, #96]
   12e88:	ldrb	w0, [x0, #20]
   12e8c:	and	x0, x0, #0xff
   12e90:	cmp	x0, #0x0
   12e94:	b.eq	12fbc <GOMP_doacross_wait@@GOMP_4.5+0x2f8>  // b.none
   12e98:	ldr	x1, [sp, #24]
   12e9c:	ldr	x0, [sp, #96]
   12ea0:	ldr	w0, [x0, #56]
   12ea4:	lsl	x0, x1, x0
   12ea8:	str	x0, [sp, #120]
   12eac:	add	x0, sp, #0x150
   12eb0:	str	x0, [sp, #32]
   12eb4:	add	x0, sp, #0x150
   12eb8:	str	x0, [sp, #40]
   12ebc:	add	x0, sp, #0x110
   12ec0:	str	x0, [sp, #48]
   12ec4:	mov	w0, #0xffffffc8            	// #-56
   12ec8:	str	w0, [sp, #56]
   12ecc:	mov	w0, #0xffffff80            	// #-128
   12ed0:	str	w0, [sp, #60]
   12ed4:	mov	w0, #0x1                   	// #1
   12ed8:	str	w0, [sp, #132]
   12edc:	b	12f6c <GOMP_doacross_wait@@GOMP_4.5+0x2a8>
   12ee0:	ldr	w1, [sp, #56]
   12ee4:	ldr	x0, [sp, #32]
   12ee8:	cmp	w1, #0x0
   12eec:	b.lt	12f00 <GOMP_doacross_wait@@GOMP_4.5+0x23c>  // b.tstop
   12ef0:	add	x1, x0, #0xf
   12ef4:	and	x1, x1, #0xfffffffffffffff8
   12ef8:	str	x1, [sp, #32]
   12efc:	b	12f30 <GOMP_doacross_wait@@GOMP_4.5+0x26c>
   12f00:	add	w2, w1, #0x8
   12f04:	str	w2, [sp, #56]
   12f08:	ldr	w2, [sp, #56]
   12f0c:	cmp	w2, #0x0
   12f10:	b.le	12f24 <GOMP_doacross_wait@@GOMP_4.5+0x260>
   12f14:	add	x1, x0, #0xf
   12f18:	and	x1, x1, #0xfffffffffffffff8
   12f1c:	str	x1, [sp, #32]
   12f20:	b	12f30 <GOMP_doacross_wait@@GOMP_4.5+0x26c>
   12f24:	ldr	x2, [sp, #40]
   12f28:	sxtw	x0, w1
   12f2c:	add	x0, x2, x0
   12f30:	ldr	x0, [x0]
   12f34:	mov	x2, x0
   12f38:	ldr	x1, [sp, #96]
   12f3c:	ldr	w0, [sp, #132]
   12f40:	add	x0, x0, #0xc
   12f44:	lsl	x0, x0, #2
   12f48:	add	x0, x1, x0
   12f4c:	ldr	w0, [x0, #8]
   12f50:	lsl	x0, x2, x0
   12f54:	ldr	x1, [sp, #120]
   12f58:	orr	x0, x1, x0
   12f5c:	str	x0, [sp, #120]
   12f60:	ldr	w0, [sp, #132]
   12f64:	add	w0, w0, #0x1
   12f68:	str	w0, [sp, #132]
   12f6c:	ldr	x0, [sp, #96]
   12f70:	ldr	w0, [x0, #16]
   12f74:	ldr	w1, [sp, #132]
   12f78:	cmp	w1, w0
   12f7c:	b.cc	12ee0 <GOMP_doacross_wait@@GOMP_4.5+0x21c>  // b.lo, b.ul, b.last
   12f80:	ldr	x0, [sp, #88]
   12f84:	ldar	x0, [x0]
   12f88:	str	x0, [sp, #64]
   12f8c:	ldr	x1, [sp, #120]
   12f90:	ldr	x0, [sp, #64]
   12f94:	cmp	x1, x0
   12f98:	b.cs	12fa4 <GOMP_doacross_wait@@GOMP_4.5+0x2e0>  // b.hs, b.nlast
   12f9c:	dmb	ish
   12fa0:	b	130f4 <GOMP_doacross_wait@@GOMP_4.5+0x430>
   12fa4:	ldr	x2, [sp, #64]
   12fa8:	ldr	x1, [sp, #120]
   12fac:	ldr	x0, [sp, #88]
   12fb0:	bl	12050 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1e8>
   12fb4:	dmb	ish
   12fb8:	b	130f4 <GOMP_doacross_wait@@GOMP_4.5+0x430>
   12fbc:	add	x0, sp, #0x150
   12fc0:	str	x0, [sp, #32]
   12fc4:	add	x0, sp, #0x150
   12fc8:	str	x0, [sp, #40]
   12fcc:	add	x0, sp, #0x110
   12fd0:	str	x0, [sp, #48]
   12fd4:	mov	w0, #0xffffffc8            	// #-56
   12fd8:	str	w0, [sp, #56]
   12fdc:	mov	w0, #0xffffff80            	// #-128
   12fe0:	str	w0, [sp, #60]
   12fe4:	str	wzr, [sp, #132]
   12fe8:	b	130b4 <GOMP_doacross_wait@@GOMP_4.5+0x3f0>
   12fec:	ldr	w0, [sp, #132]
   12ff0:	cmp	w0, #0x0
   12ff4:	b.eq	13054 <GOMP_doacross_wait@@GOMP_4.5+0x390>  // b.none
   12ff8:	ldr	w1, [sp, #56]
   12ffc:	ldr	x0, [sp, #32]
   13000:	cmp	w1, #0x0
   13004:	b.lt	13018 <GOMP_doacross_wait@@GOMP_4.5+0x354>  // b.tstop
   13008:	add	x1, x0, #0xf
   1300c:	and	x1, x1, #0xfffffffffffffff8
   13010:	str	x1, [sp, #32]
   13014:	b	13048 <GOMP_doacross_wait@@GOMP_4.5+0x384>
   13018:	add	w2, w1, #0x8
   1301c:	str	w2, [sp, #56]
   13020:	ldr	w2, [sp, #56]
   13024:	cmp	w2, #0x0
   13028:	b.le	1303c <GOMP_doacross_wait@@GOMP_4.5+0x378>
   1302c:	add	x1, x0, #0xf
   13030:	and	x1, x1, #0xfffffffffffffff8
   13034:	str	x1, [sp, #32]
   13038:	b	13048 <GOMP_doacross_wait@@GOMP_4.5+0x384>
   1303c:	ldr	x2, [sp, #40]
   13040:	sxtw	x0, w1
   13044:	add	x0, x2, x0
   13048:	ldr	x0, [x0]
   1304c:	add	x0, x0, #0x1
   13050:	b	1305c <GOMP_doacross_wait@@GOMP_4.5+0x398>
   13054:	ldr	x0, [sp, #24]
   13058:	add	x0, x0, #0x1
   1305c:	str	x0, [sp, #80]
   13060:	ldr	w0, [sp, #132]
   13064:	lsl	x0, x0, #3
   13068:	ldr	x1, [sp, #88]
   1306c:	add	x0, x1, x0
   13070:	ldr	x0, [x0]
   13074:	str	x0, [sp, #72]
   13078:	ldr	x1, [sp, #80]
   1307c:	ldr	x0, [sp, #72]
   13080:	cmp	x1, x0
   13084:	b.cs	13098 <GOMP_doacross_wait@@GOMP_4.5+0x3d4>  // b.hs, b.nlast
   13088:	ldr	x0, [sp, #96]
   1308c:	ldr	w0, [x0, #16]
   13090:	str	w0, [sp, #132]
   13094:	b	130d0 <GOMP_doacross_wait@@GOMP_4.5+0x40c>
   13098:	ldr	x1, [sp, #80]
   1309c:	ldr	x0, [sp, #72]
   130a0:	cmp	x1, x0
   130a4:	b.hi	130cc <GOMP_doacross_wait@@GOMP_4.5+0x408>  // b.pmore
   130a8:	ldr	w0, [sp, #132]
   130ac:	add	w0, w0, #0x1
   130b0:	str	w0, [sp, #132]
   130b4:	ldr	x0, [sp, #96]
   130b8:	ldr	w0, [x0, #16]
   130bc:	ldr	w1, [sp, #132]
   130c0:	cmp	w1, w0
   130c4:	b.cc	12fec <GOMP_doacross_wait@@GOMP_4.5+0x328>  // b.lo, b.ul, b.last
   130c8:	b	130d0 <GOMP_doacross_wait@@GOMP_4.5+0x40c>
   130cc:	nop
   130d0:	ldr	x0, [sp, #96]
   130d4:	ldr	w0, [x0, #16]
   130d8:	ldr	w1, [sp, #132]
   130dc:	cmp	w1, w0
   130e0:	b.eq	130ec <GOMP_doacross_wait@@GOMP_4.5+0x428>  // b.none
   130e4:	bl	12048 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1e0>
   130e8:	b	12fbc <GOMP_doacross_wait@@GOMP_4.5+0x2f8>
   130ec:	nop
   130f0:	dmb	ish
   130f4:	ldp	x29, x30, [sp], #336
   130f8:	ret
   130fc:	stp	x29, x30, [sp, #-400]!
   13100:	mov	x29, sp
   13104:	str	w0, [sp, #44]
   13108:	str	x1, [sp, #32]
   1310c:	str	x2, [sp, #24]
   13110:	str	x3, [sp, #16]
   13114:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   13118:	str	x0, [sp, #344]
   1311c:	ldr	x0, [sp, #344]
   13120:	ldr	x0, [x0, #16]
   13124:	str	x0, [sp, #336]
   13128:	ldr	x0, [sp, #344]
   1312c:	ldr	x0, [x0, #24]
   13130:	str	x0, [sp, #328]
   13134:	str	wzr, [sp, #392]
   13138:	ldr	x0, [sp, #336]
   1313c:	cmp	x0, #0x0
   13140:	b.eq	13154 <GOMP_doacross_wait@@GOMP_4.5+0x490>  // b.none
   13144:	ldr	x0, [sp, #336]
   13148:	ldr	w0, [x0]
   1314c:	cmp	w0, #0x1
   13150:	b.ne	131a8 <GOMP_doacross_wait@@GOMP_4.5+0x4e4>  // b.any
   13154:	nop
   13158:	b	13160 <GOMP_doacross_wait@@GOMP_4.5+0x49c>
   1315c:	nop
   13160:	ldr	x0, [sp, #16]
   13164:	cmp	x0, #0x0
   13168:	b.ne	13178 <GOMP_doacross_wait@@GOMP_4.5+0x4b4>  // b.any
   1316c:	ldr	x0, [sp, #328]
   13170:	str	xzr, [x0, #32]
   13174:	b	1359c <GOMP_doacross_wait@@GOMP_4.5+0x8d8>
   13178:	ldr	x0, [sp, #16]
   1317c:	add	x0, x0, #0x38
   13180:	bl	8e10 <fprintf@plt+0x1e0>
   13184:	str	x0, [sp, #320]
   13188:	ldr	x0, [sp, #320]
   1318c:	add	x1, x0, #0x38
   13190:	ldr	x0, [sp, #320]
   13194:	str	x1, [x0, #48]
   13198:	ldr	x0, [sp, #328]
   1319c:	ldr	x1, [sp, #320]
   131a0:	str	x1, [x0, #32]
   131a4:	b	1359c <GOMP_doacross_wait@@GOMP_4.5+0x8d8>
   131a8:	str	wzr, [sp, #396]
   131ac:	b	1327c <GOMP_doacross_wait@@GOMP_4.5+0x5b8>
   131b0:	ldr	w0, [sp, #396]
   131b4:	lsl	x0, x0, #3
   131b8:	ldr	x1, [sp, #32]
   131bc:	add	x0, x1, x0
   131c0:	ldr	x0, [x0]
   131c4:	cmp	x0, #0x0
   131c8:	b.eq	1315c <GOMP_doacross_wait@@GOMP_4.5+0x498>  // b.none
   131cc:	ldr	w0, [sp, #392]
   131d0:	cmp	w0, #0x40
   131d4:	b.hi	13270 <GOMP_doacross_wait@@GOMP_4.5+0x5ac>  // b.pmore
   131d8:	ldr	w0, [sp, #396]
   131dc:	lsl	x0, x0, #3
   131e0:	ldr	x1, [sp, #32]
   131e4:	add	x0, x1, x0
   131e8:	ldr	x0, [x0]
   131ec:	cmp	x0, #0x1
   131f0:	b.ne	13200 <GOMP_doacross_wait@@GOMP_4.5+0x53c>  // b.any
   131f4:	mov	w0, #0x1                   	// #1
   131f8:	str	w0, [sp, #356]
   131fc:	b	1322c <GOMP_doacross_wait@@GOMP_4.5+0x568>
   13200:	ldr	w0, [sp, #396]
   13204:	lsl	x0, x0, #3
   13208:	ldr	x1, [sp, #32]
   1320c:	add	x0, x1, x0
   13210:	ldr	x0, [x0]
   13214:	sub	x0, x0, #0x1
   13218:	clz	x0, x0
   1321c:	mov	w1, w0
   13220:	mov	w0, #0x40                  	// #64
   13224:	sub	w0, w0, w1
   13228:	str	w0, [sp, #356]
   1322c:	ldr	w1, [sp, #392]
   13230:	ldr	w0, [sp, #356]
   13234:	add	w0, w1, w0
   13238:	cmp	w0, #0x40
   1323c:	b.hi	13268 <GOMP_doacross_wait@@GOMP_4.5+0x5a4>  // b.pmore
   13240:	ldr	w0, [sp, #396]
   13244:	lsl	x0, x0, #2
   13248:	add	x1, sp, #0x30
   1324c:	ldr	w2, [sp, #356]
   13250:	str	w2, [x1, x0]
   13254:	ldr	w1, [sp, #392]
   13258:	ldr	w0, [sp, #356]
   1325c:	add	w0, w1, w0
   13260:	str	w0, [sp, #392]
   13264:	b	13270 <GOMP_doacross_wait@@GOMP_4.5+0x5ac>
   13268:	mov	w0, #0x41                  	// #65
   1326c:	str	w0, [sp, #392]
   13270:	ldr	w0, [sp, #396]
   13274:	add	w0, w0, #0x1
   13278:	str	w0, [sp, #396]
   1327c:	ldr	w1, [sp, #396]
   13280:	ldr	w0, [sp, #44]
   13284:	cmp	w1, w0
   13288:	b.cc	131b0 <GOMP_doacross_wait@@GOMP_4.5+0x4ec>  // b.lo, b.ul, b.last
   1328c:	ldr	x0, [sp, #328]
   13290:	ldr	w0, [x0]
   13294:	cmp	w0, #0x1
   13298:	b.ne	132b0 <GOMP_doacross_wait@@GOMP_4.5+0x5ec>  // b.any
   1329c:	ldr	x0, [sp, #336]
   132a0:	ldr	w0, [x0]
   132a4:	mov	w0, w0
   132a8:	str	x0, [sp, #376]
   132ac:	b	132ec <GOMP_doacross_wait@@GOMP_4.5+0x628>
   132b0:	ldr	x0, [sp, #328]
   132b4:	ldr	w0, [x0]
   132b8:	cmp	w0, #0x3
   132bc:	b.ne	132d0 <GOMP_doacross_wait@@GOMP_4.5+0x60c>  // b.any
   132c0:	ldr	x0, [sp, #32]
   132c4:	ldr	x0, [x0]
   132c8:	str	x0, [sp, #376]
   132cc:	b	132ec <GOMP_doacross_wait@@GOMP_4.5+0x628>
   132d0:	ldr	x0, [sp, #32]
   132d4:	ldr	x0, [x0]
   132d8:	sub	x1, x0, #0x1
   132dc:	ldr	x0, [sp, #24]
   132e0:	udiv	x0, x1, x0
   132e4:	add	x0, x0, #0x1
   132e8:	str	x0, [sp, #376]
   132ec:	ldr	w0, [sp, #392]
   132f0:	cmp	w0, #0x40
   132f4:	b.hi	13310 <GOMP_doacross_wait@@GOMP_4.5+0x64c>  // b.pmore
   132f8:	mov	x0, #0x8                   	// #8
   132fc:	str	x0, [sp, #368]
   13300:	ldr	w0, [sp, #44]
   13304:	lsl	x0, x0, #2
   13308:	str	x0, [sp, #360]
   1330c:	b	13320 <GOMP_doacross_wait@@GOMP_4.5+0x65c>
   13310:	ldr	w0, [sp, #44]
   13314:	lsl	x0, x0, #3
   13318:	str	x0, [sp, #368]
   1331c:	str	xzr, [sp, #360]
   13320:	ldr	x0, [sp, #368]
   13324:	add	x0, x0, #0x3f
   13328:	and	x0, x0, #0xffffffffffffffc0
   1332c:	str	x0, [sp, #368]
   13330:	ldr	x1, [sp, #376]
   13334:	ldr	x0, [sp, #368]
   13338:	mul	x1, x1, x0
   1333c:	ldr	x0, [sp, #360]
   13340:	add	x0, x1, x0
   13344:	add	x0, x0, #0x77
   13348:	bl	8dd0 <fprintf@plt+0x1a0>
   1334c:	str	x0, [sp, #320]
   13350:	ldr	x0, [sp, #320]
   13354:	ldr	x1, [sp, #24]
   13358:	str	x1, [x0]
   1335c:	ldr	x0, [sp, #320]
   13360:	ldr	x1, [sp, #368]
   13364:	str	x1, [x0, #8]
   13368:	ldr	x0, [sp, #320]
   1336c:	ldr	w1, [sp, #44]
   13370:	str	w1, [x0, #16]
   13374:	ldr	x0, [sp, #320]
   13378:	strb	wzr, [x0, #20]
   1337c:	ldr	x0, [sp, #320]
   13380:	str	xzr, [x0, #40]
   13384:	ldr	x1, [sp, #320]
   13388:	ldr	x0, [sp, #360]
   1338c:	add	x0, x1, x0
   13390:	add	x0, x0, #0x77
   13394:	and	x0, x0, #0xffffffffffffffc0
   13398:	mov	x1, x0
   1339c:	ldr	x0, [sp, #320]
   133a0:	str	x1, [x0, #24]
   133a4:	ldr	x0, [sp, #16]
   133a8:	cmp	x0, #0x0
   133ac:	b.eq	133e8 <GOMP_doacross_wait@@GOMP_4.5+0x724>  // b.none
   133b0:	ldr	x0, [sp, #320]
   133b4:	ldr	x1, [x0, #24]
   133b8:	ldr	x2, [sp, #376]
   133bc:	ldr	x0, [sp, #368]
   133c0:	mul	x0, x2, x0
   133c4:	add	x1, x1, x0
   133c8:	ldr	x0, [sp, #320]
   133cc:	str	x1, [x0, #48]
   133d0:	ldr	x0, [sp, #320]
   133d4:	ldr	x0, [x0, #48]
   133d8:	ldr	x2, [sp, #16]
   133dc:	mov	w1, #0x0                   	// #0
   133e0:	bl	88d0 <memset@plt>
   133e4:	b	133f0 <GOMP_doacross_wait@@GOMP_4.5+0x72c>
   133e8:	ldr	x0, [sp, #320]
   133ec:	str	xzr, [x0, #48]
   133f0:	ldr	w0, [sp, #392]
   133f4:	cmp	w0, #0x40
   133f8:	b.hi	134bc <GOMP_doacross_wait@@GOMP_4.5+0x7f8>  // b.pmore
   133fc:	str	wzr, [sp, #352]
   13400:	ldr	x0, [sp, #320]
   13404:	mov	w1, #0x1                   	// #1
   13408:	strb	w1, [x0, #20]
   1340c:	ldr	w0, [sp, #44]
   13410:	str	w0, [sp, #396]
   13414:	b	1346c <GOMP_doacross_wait@@GOMP_4.5+0x7a8>
   13418:	ldr	w0, [sp, #396]
   1341c:	sub	w0, w0, #0x1
   13420:	ldr	x1, [sp, #320]
   13424:	mov	w0, w0
   13428:	add	x0, x0, #0xc
   1342c:	lsl	x0, x0, #2
   13430:	add	x0, x1, x0
   13434:	ldr	w1, [sp, #352]
   13438:	str	w1, [x0, #8]
   1343c:	ldr	w0, [sp, #396]
   13440:	sub	w0, w0, #0x1
   13444:	mov	w0, w0
   13448:	lsl	x0, x0, #2
   1344c:	add	x1, sp, #0x30
   13450:	ldr	w0, [x1, x0]
   13454:	ldr	w1, [sp, #352]
   13458:	add	w0, w1, w0
   1345c:	str	w0, [sp, #352]
   13460:	ldr	w0, [sp, #396]
   13464:	sub	w0, w0, #0x1
   13468:	str	w0, [sp, #396]
   1346c:	ldr	w0, [sp, #396]
   13470:	cmp	w0, #0x0
   13474:	b.ne	13418 <GOMP_doacross_wait@@GOMP_4.5+0x754>  // b.any
   13478:	str	xzr, [sp, #384]
   1347c:	b	134a8 <GOMP_doacross_wait@@GOMP_4.5+0x7e4>
   13480:	ldr	x0, [sp, #320]
   13484:	ldr	x1, [x0, #24]
   13488:	ldr	x2, [sp, #384]
   1348c:	ldr	x0, [sp, #368]
   13490:	mul	x0, x2, x0
   13494:	add	x0, x1, x0
   13498:	str	xzr, [x0]
   1349c:	ldr	x0, [sp, #384]
   134a0:	add	x0, x0, #0x1
   134a4:	str	x0, [sp, #384]
   134a8:	ldr	x1, [sp, #384]
   134ac:	ldr	x0, [sp, #376]
   134b0:	cmp	x1, x0
   134b4:	b.cc	13480 <GOMP_doacross_wait@@GOMP_4.5+0x7bc>  // b.lo, b.ul, b.last
   134b8:	b	13510 <GOMP_doacross_wait@@GOMP_4.5+0x84c>
   134bc:	str	xzr, [sp, #384]
   134c0:	b	13500 <GOMP_doacross_wait@@GOMP_4.5+0x83c>
   134c4:	ldr	x0, [sp, #320]
   134c8:	ldr	x1, [x0, #24]
   134cc:	ldr	x2, [sp, #384]
   134d0:	ldr	x0, [sp, #368]
   134d4:	mul	x0, x2, x0
   134d8:	add	x3, x1, x0
   134dc:	ldr	w0, [sp, #44]
   134e0:	lsl	x0, x0, #3
   134e4:	mov	x2, x0
   134e8:	mov	w1, #0x0                   	// #0
   134ec:	mov	x0, x3
   134f0:	bl	88d0 <memset@plt>
   134f4:	ldr	x0, [sp, #384]
   134f8:	add	x0, x0, #0x1
   134fc:	str	x0, [sp, #384]
   13500:	ldr	x1, [sp, #384]
   13504:	ldr	x0, [sp, #376]
   13508:	cmp	x1, x0
   1350c:	b.cc	134c4 <GOMP_doacross_wait@@GOMP_4.5+0x800>  // b.lo, b.ul, b.last
   13510:	ldr	x0, [sp, #328]
   13514:	ldr	w0, [x0]
   13518:	cmp	w0, #0x1
   1351c:	b.ne	13590 <GOMP_doacross_wait@@GOMP_4.5+0x8cc>  // b.any
   13520:	ldr	x0, [sp, #24]
   13524:	cmp	x0, #0x0
   13528:	b.ne	13590 <GOMP_doacross_wait@@GOMP_4.5+0x8cc>  // b.any
   1352c:	ldr	x0, [sp, #32]
   13530:	ldr	x1, [x0]
   13534:	ldr	x0, [sp, #376]
   13538:	udiv	x0, x1, x0
   1353c:	str	x0, [sp, #312]
   13540:	ldr	x0, [sp, #32]
   13544:	ldr	x0, [x0]
   13548:	ldr	x1, [sp, #376]
   1354c:	udiv	x2, x0, x1
   13550:	ldr	x1, [sp, #376]
   13554:	mul	x1, x2, x1
   13558:	sub	x0, x0, x1
   1355c:	str	x0, [sp, #304]
   13560:	ldr	x0, [sp, #312]
   13564:	add	x1, x0, #0x1
   13568:	ldr	x0, [sp, #304]
   1356c:	mul	x1, x1, x0
   13570:	ldr	x0, [sp, #320]
   13574:	str	x1, [x0, #40]
   13578:	ldr	x0, [sp, #320]
   1357c:	ldr	x1, [sp, #312]
   13580:	str	x1, [x0]
   13584:	ldr	x1, [sp, #304]
   13588:	ldr	x0, [sp, #320]
   1358c:	str	x1, [x0, #32]
   13590:	ldr	x0, [sp, #328]
   13594:	ldr	x1, [sp, #320]
   13598:	str	x1, [x0, #32]
   1359c:	ldp	x29, x30, [sp], #400
   135a0:	ret

00000000000135a4 <GOMP_doacross_ull_post@@GOMP_4.5>:
   135a4:	stp	x29, x30, [sp, #-96]!
   135a8:	mov	x29, sp
   135ac:	str	x0, [sp, #24]
   135b0:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   135b4:	str	x0, [sp, #32]
   135b8:	ldr	x0, [sp, #32]
   135bc:	ldr	x0, [x0, #24]
   135c0:	str	x0, [sp, #48]
   135c4:	ldr	x0, [sp, #48]
   135c8:	ldr	x0, [x0, #32]
   135cc:	str	x0, [sp, #40]
   135d0:	ldr	x0, [sp, #40]
   135d4:	cmp	x0, #0x0
   135d8:	cset	w0, eq  // eq = none
   135dc:	and	w0, w0, #0xff
   135e0:	and	x0, x0, #0xff
   135e4:	cmp	x0, #0x0
   135e8:	b.ne	1360c <GOMP_doacross_ull_post@@GOMP_4.5+0x68>  // b.any
   135ec:	ldr	x0, [sp, #40]
   135f0:	ldr	x0, [x0, #24]
   135f4:	cmp	x0, #0x0
   135f8:	cset	w0, eq  // eq = none
   135fc:	and	w0, w0, #0xff
   13600:	and	x0, x0, #0xff
   13604:	cmp	x0, #0x0
   13608:	b.eq	13614 <GOMP_doacross_ull_post@@GOMP_4.5+0x70>  // b.none
   1360c:	dmb	ish
   13610:	b	13814 <GOMP_doacross_ull_post@@GOMP_4.5+0x270>
   13614:	ldr	x0, [sp, #48]
   13618:	ldr	w0, [x0]
   1361c:	cmp	w0, #0x1
   13620:	cset	w0, eq  // eq = none
   13624:	and	w0, w0, #0xff
   13628:	and	x0, x0, #0xff
   1362c:	cmp	x0, #0x0
   13630:	b.eq	13648 <GOMP_doacross_ull_post@@GOMP_4.5+0xa4>  // b.none
   13634:	ldr	x0, [sp, #32]
   13638:	ldr	w0, [x0, #40]
   1363c:	mov	w0, w0
   13640:	str	x0, [sp, #80]
   13644:	b	13680 <GOMP_doacross_ull_post@@GOMP_4.5+0xdc>
   13648:	ldr	x0, [sp, #48]
   1364c:	ldr	w0, [x0]
   13650:	cmp	w0, #0x3
   13654:	b.ne	13668 <GOMP_doacross_ull_post@@GOMP_4.5+0xc4>  // b.any
   13658:	ldr	x0, [sp, #24]
   1365c:	ldr	x0, [x0]
   13660:	str	x0, [sp, #80]
   13664:	b	13680 <GOMP_doacross_ull_post@@GOMP_4.5+0xdc>
   13668:	ldr	x0, [sp, #24]
   1366c:	ldr	x1, [x0]
   13670:	ldr	x0, [sp, #40]
   13674:	ldr	x0, [x0]
   13678:	udiv	x0, x1, x0
   1367c:	str	x0, [sp, #80]
   13680:	ldr	x0, [sp, #40]
   13684:	ldrb	w0, [x0, #20]
   13688:	and	x0, x0, #0xff
   1368c:	cmp	x0, #0x0
   13690:	b.eq	1376c <GOMP_doacross_ull_post@@GOMP_4.5+0x1c8>  // b.none
   13694:	ldr	x0, [sp, #40]
   13698:	ldr	x1, [x0, #24]
   1369c:	ldr	x0, [sp, #40]
   136a0:	ldr	x2, [x0, #8]
   136a4:	ldr	x0, [sp, #80]
   136a8:	mul	x0, x2, x0
   136ac:	add	x0, x1, x0
   136b0:	str	x0, [sp, #56]
   136b4:	ldr	x0, [sp, #24]
   136b8:	ldr	x1, [x0]
   136bc:	ldr	x0, [sp, #40]
   136c0:	ldr	w0, [x0, #56]
   136c4:	lsl	x0, x1, x0
   136c8:	str	x0, [sp, #88]
   136cc:	mov	w0, #0x1                   	// #1
   136d0:	str	w0, [sp, #68]
   136d4:	b	13720 <GOMP_doacross_ull_post@@GOMP_4.5+0x17c>
   136d8:	ldr	w0, [sp, #68]
   136dc:	lsl	x0, x0, #3
   136e0:	ldr	x1, [sp, #24]
   136e4:	add	x0, x1, x0
   136e8:	ldr	x1, [x0]
   136ec:	ldr	x2, [sp, #40]
   136f0:	ldr	w0, [sp, #68]
   136f4:	add	x0, x0, #0xc
   136f8:	lsl	x0, x0, #2
   136fc:	add	x0, x2, x0
   13700:	ldr	w0, [x0, #8]
   13704:	lsl	x0, x1, x0
   13708:	ldr	x1, [sp, #88]
   1370c:	orr	x0, x1, x0
   13710:	str	x0, [sp, #88]
   13714:	ldr	w0, [sp, #68]
   13718:	add	w0, w0, #0x1
   1371c:	str	w0, [sp, #68]
   13720:	ldr	x0, [sp, #40]
   13724:	ldr	w0, [x0, #16]
   13728:	ldr	w1, [sp, #68]
   1372c:	cmp	w1, w0
   13730:	b.cc	136d8 <GOMP_doacross_ull_post@@GOMP_4.5+0x134>  // b.lo, b.ul, b.last
   13734:	ldr	x0, [sp, #88]
   13738:	add	x0, x0, #0x1
   1373c:	str	x0, [sp, #88]
   13740:	ldr	x0, [sp, #56]
   13744:	ldar	x0, [x0]
   13748:	ldr	x1, [sp, #88]
   1374c:	cmp	x1, x0
   13750:	b.ne	1375c <GOMP_doacross_ull_post@@GOMP_4.5+0x1b8>  // b.any
   13754:	dmb	ish
   13758:	b	13814 <GOMP_doacross_ull_post@@GOMP_4.5+0x270>
   1375c:	ldr	x0, [sp, #56]
   13760:	ldr	x1, [sp, #88]
   13764:	stlr	x1, [x0]
   13768:	b	13814 <GOMP_doacross_ull_post@@GOMP_4.5+0x270>
   1376c:	dmb	ishld
   13770:	ldr	x0, [sp, #40]
   13774:	ldr	x1, [x0, #24]
   13778:	ldr	x0, [sp, #40]
   1377c:	ldr	x2, [x0, #8]
   13780:	ldr	x0, [sp, #80]
   13784:	mul	x0, x2, x0
   13788:	add	x0, x1, x0
   1378c:	str	x0, [sp, #72]
   13790:	ldr	x0, [sp, #40]
   13794:	ldr	w0, [x0, #16]
   13798:	str	w0, [sp, #68]
   1379c:	b	13800 <GOMP_doacross_ull_post@@GOMP_4.5+0x25c>
   137a0:	ldr	w0, [sp, #68]
   137a4:	lsl	x0, x0, #3
   137a8:	ldr	x1, [sp, #24]
   137ac:	add	x0, x1, x0
   137b0:	ldr	x0, [x0]
   137b4:	add	x1, x0, #0x1
   137b8:	ldr	w0, [sp, #68]
   137bc:	lsl	x0, x0, #3
   137c0:	ldr	x2, [sp, #72]
   137c4:	add	x0, x2, x0
   137c8:	ldr	x0, [x0]
   137cc:	cmp	x1, x0
   137d0:	b.eq	13800 <GOMP_doacross_ull_post@@GOMP_4.5+0x25c>  // b.none
   137d4:	ldr	w0, [sp, #68]
   137d8:	lsl	x0, x0, #3
   137dc:	ldr	x1, [sp, #72]
   137e0:	add	x0, x1, x0
   137e4:	ldr	w1, [sp, #68]
   137e8:	lsl	x1, x1, #3
   137ec:	ldr	x2, [sp, #24]
   137f0:	add	x1, x2, x1
   137f4:	ldr	x1, [x1]
   137f8:	add	x1, x1, #0x1
   137fc:	stlr	x1, [x0]
   13800:	ldr	w0, [sp, #68]
   13804:	sub	w1, w0, #0x1
   13808:	str	w1, [sp, #68]
   1380c:	cmp	w0, #0x0
   13810:	b.ne	137a0 <GOMP_doacross_ull_post@@GOMP_4.5+0x1fc>  // b.any
   13814:	ldp	x29, x30, [sp], #96
   13818:	ret

000000000001381c <GOMP_doacross_ull_wait@@GOMP_4.5>:
   1381c:	stp	x29, x30, [sp, #-352]!
   13820:	mov	x29, sp
   13824:	str	x0, [sp, #24]
   13828:	str	x1, [sp, #296]
   1382c:	str	x2, [sp, #304]
   13830:	str	x3, [sp, #312]
   13834:	str	x4, [sp, #320]
   13838:	str	x5, [sp, #328]
   1383c:	str	x6, [sp, #336]
   13840:	str	x7, [sp, #344]
   13844:	str	q0, [sp, #160]
   13848:	str	q1, [sp, #176]
   1384c:	str	q2, [sp, #192]
   13850:	str	q3, [sp, #208]
   13854:	str	q4, [sp, #224]
   13858:	str	q5, [sp, #240]
   1385c:	str	q6, [sp, #256]
   13860:	str	q7, [sp, #272]
   13864:	bl	12034 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1cc>
   13868:	str	x0, [sp, #128]
   1386c:	ldr	x0, [sp, #128]
   13870:	ldr	x0, [x0, #24]
   13874:	str	x0, [sp, #120]
   13878:	ldr	x0, [sp, #120]
   1387c:	ldr	x0, [x0, #32]
   13880:	str	x0, [sp, #112]
   13884:	ldr	x0, [sp, #112]
   13888:	cmp	x0, #0x0
   1388c:	cset	w0, eq  // eq = none
   13890:	and	w0, w0, #0xff
   13894:	and	x0, x0, #0xff
   13898:	cmp	x0, #0x0
   1389c:	b.ne	138c0 <GOMP_doacross_ull_wait@@GOMP_4.5+0xa4>  // b.any
   138a0:	ldr	x0, [sp, #112]
   138a4:	ldr	x0, [x0, #24]
   138a8:	cmp	x0, #0x0
   138ac:	cset	w0, eq  // eq = none
   138b0:	and	w0, w0, #0xff
   138b4:	and	x0, x0, #0xff
   138b8:	cmp	x0, #0x0
   138bc:	b.eq	138c8 <GOMP_doacross_ull_wait@@GOMP_4.5+0xac>  // b.none
   138c0:	dmb	ish
   138c4:	b	13c68 <GOMP_doacross_ull_wait@@GOMP_4.5+0x44c>
   138c8:	ldr	x0, [sp, #120]
   138cc:	ldr	w0, [x0]
   138d0:	cmp	w0, #0x1
   138d4:	cset	w0, eq  // eq = none
   138d8:	and	w0, w0, #0xff
   138dc:	and	x0, x0, #0xff
   138e0:	cmp	x0, #0x0
   138e4:	b.eq	1398c <GOMP_doacross_ull_wait@@GOMP_4.5+0x170>  // b.none
   138e8:	ldr	x0, [sp, #120]
   138ec:	ldr	x0, [x0, #8]
   138f0:	cmp	x0, #0x0
   138f4:	b.ne	13958 <GOMP_doacross_ull_wait@@GOMP_4.5+0x13c>  // b.any
   138f8:	ldr	x0, [sp, #112]
   138fc:	ldr	x0, [x0, #40]
   13900:	ldr	x1, [sp, #24]
   13904:	cmp	x1, x0
   13908:	b.cs	13928 <GOMP_doacross_ull_wait@@GOMP_4.5+0x10c>  // b.hs, b.nlast
   1390c:	ldr	x0, [sp, #112]
   13910:	ldr	x0, [x0]
   13914:	add	x0, x0, #0x1
   13918:	ldr	x1, [sp, #24]
   1391c:	udiv	x0, x1, x0
   13920:	str	x0, [sp, #136]
   13924:	b	139bc <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
   13928:	ldr	x0, [sp, #112]
   1392c:	ldr	x0, [x0, #40]
   13930:	ldr	x1, [sp, #24]
   13934:	sub	x1, x1, x0
   13938:	ldr	x0, [sp, #112]
   1393c:	ldr	x0, [x0]
   13940:	udiv	x0, x1, x0
   13944:	ldr	x1, [sp, #112]
   13948:	ldr	x1, [x1, #32]
   1394c:	add	x0, x0, x1
   13950:	str	x0, [sp, #136]
   13954:	b	139bc <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
   13958:	ldr	x0, [sp, #120]
   1395c:	ldr	x0, [x0, #8]
   13960:	ldr	x1, [sp, #24]
   13964:	udiv	x0, x1, x0
   13968:	ldr	x1, [sp, #128]
   1396c:	ldr	x1, [x1, #16]
   13970:	ldr	w1, [x1]
   13974:	mov	w1, w1
   13978:	udiv	x2, x0, x1
   1397c:	mul	x1, x2, x1
   13980:	sub	x0, x0, x1
   13984:	str	x0, [sp, #136]
   13988:	b	139bc <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
   1398c:	ldr	x0, [sp, #120]
   13990:	ldr	w0, [x0]
   13994:	cmp	w0, #0x3
   13998:	b.ne	139a8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x18c>  // b.any
   1399c:	ldr	x0, [sp, #24]
   139a0:	str	x0, [sp, #136]
   139a4:	b	139bc <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
   139a8:	ldr	x0, [sp, #112]
   139ac:	ldr	x0, [x0]
   139b0:	ldr	x1, [sp, #24]
   139b4:	udiv	x0, x1, x0
   139b8:	str	x0, [sp, #136]
   139bc:	ldr	x0, [sp, #112]
   139c0:	ldrb	w0, [x0, #20]
   139c4:	and	x0, x0, #0xff
   139c8:	cmp	x0, #0x0
   139cc:	b.eq	13b10 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2f4>  // b.none
   139d0:	ldr	x0, [sp, #112]
   139d4:	ldr	x1, [x0, #24]
   139d8:	ldr	x0, [sp, #112]
   139dc:	ldr	x2, [x0, #8]
   139e0:	ldr	x0, [sp, #136]
   139e4:	mul	x0, x2, x0
   139e8:	add	x0, x1, x0
   139ec:	str	x0, [sp, #80]
   139f0:	ldr	x0, [sp, #112]
   139f4:	ldr	w0, [x0, #56]
   139f8:	ldr	x1, [sp, #24]
   139fc:	lsl	x0, x1, x0
   13a00:	str	x0, [sp, #144]
   13a04:	add	x0, sp, #0x160
   13a08:	str	x0, [sp, #40]
   13a0c:	add	x0, sp, #0x160
   13a10:	str	x0, [sp, #48]
   13a14:	add	x0, sp, #0x120
   13a18:	str	x0, [sp, #56]
   13a1c:	mov	w0, #0xffffffc8            	// #-56
   13a20:	str	w0, [sp, #64]
   13a24:	mov	w0, #0xffffff80            	// #-128
   13a28:	str	w0, [sp, #68]
   13a2c:	mov	w0, #0x1                   	// #1
   13a30:	str	w0, [sp, #156]
   13a34:	b	13ac0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2a4>
   13a38:	ldr	w1, [sp, #64]
   13a3c:	ldr	x0, [sp, #40]
   13a40:	cmp	w1, #0x0
   13a44:	b.lt	13a58 <GOMP_doacross_ull_wait@@GOMP_4.5+0x23c>  // b.tstop
   13a48:	add	x1, x0, #0xf
   13a4c:	and	x1, x1, #0xfffffffffffffff8
   13a50:	str	x1, [sp, #40]
   13a54:	b	13a88 <GOMP_doacross_ull_wait@@GOMP_4.5+0x26c>
   13a58:	add	w2, w1, #0x8
   13a5c:	str	w2, [sp, #64]
   13a60:	ldr	w2, [sp, #64]
   13a64:	cmp	w2, #0x0
   13a68:	b.le	13a7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
   13a6c:	add	x1, x0, #0xf
   13a70:	and	x1, x1, #0xfffffffffffffff8
   13a74:	str	x1, [sp, #40]
   13a78:	b	13a88 <GOMP_doacross_ull_wait@@GOMP_4.5+0x26c>
   13a7c:	ldr	x2, [sp, #48]
   13a80:	sxtw	x0, w1
   13a84:	add	x0, x2, x0
   13a88:	ldr	x1, [x0]
   13a8c:	ldr	x2, [sp, #112]
   13a90:	ldr	w0, [sp, #156]
   13a94:	add	x0, x0, #0xc
   13a98:	lsl	x0, x0, #2
   13a9c:	add	x0, x2, x0
   13aa0:	ldr	w0, [x0, #8]
   13aa4:	lsl	x0, x1, x0
   13aa8:	ldr	x1, [sp, #144]
   13aac:	orr	x0, x1, x0
   13ab0:	str	x0, [sp, #144]
   13ab4:	ldr	w0, [sp, #156]
   13ab8:	add	w0, w0, #0x1
   13abc:	str	w0, [sp, #156]
   13ac0:	ldr	x0, [sp, #112]
   13ac4:	ldr	w0, [x0, #16]
   13ac8:	ldr	w1, [sp, #156]
   13acc:	cmp	w1, w0
   13ad0:	b.cc	13a38 <GOMP_doacross_ull_wait@@GOMP_4.5+0x21c>  // b.lo, b.ul, b.last
   13ad4:	ldr	x0, [sp, #80]
   13ad8:	ldar	x0, [x0]
   13adc:	str	x0, [sp, #72]
   13ae0:	ldr	x1, [sp, #144]
   13ae4:	ldr	x0, [sp, #72]
   13ae8:	cmp	x1, x0
   13aec:	b.cs	13af8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2dc>  // b.hs, b.nlast
   13af0:	dmb	ish
   13af4:	b	13c68 <GOMP_doacross_ull_wait@@GOMP_4.5+0x44c>
   13af8:	ldr	x2, [sp, #72]
   13afc:	ldr	x1, [sp, #144]
   13b00:	ldr	x0, [sp, #80]
   13b04:	bl	12050 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1e8>
   13b08:	dmb	ish
   13b0c:	b	13c68 <GOMP_doacross_ull_wait@@GOMP_4.5+0x44c>
   13b10:	ldr	x0, [sp, #112]
   13b14:	ldr	x1, [x0, #24]
   13b18:	ldr	x0, [sp, #112]
   13b1c:	ldr	x2, [x0, #8]
   13b20:	ldr	x0, [sp, #136]
   13b24:	mul	x0, x2, x0
   13b28:	add	x0, x1, x0
   13b2c:	str	x0, [sp, #104]
   13b30:	add	x0, sp, #0x160
   13b34:	str	x0, [sp, #40]
   13b38:	add	x0, sp, #0x160
   13b3c:	str	x0, [sp, #48]
   13b40:	add	x0, sp, #0x120
   13b44:	str	x0, [sp, #56]
   13b48:	mov	w0, #0xffffffc8            	// #-56
   13b4c:	str	w0, [sp, #64]
   13b50:	mov	w0, #0xffffff80            	// #-128
   13b54:	str	w0, [sp, #68]
   13b58:	str	wzr, [sp, #156]
   13b5c:	b	13c28 <GOMP_doacross_ull_wait@@GOMP_4.5+0x40c>
   13b60:	ldr	w0, [sp, #156]
   13b64:	cmp	w0, #0x0
   13b68:	b.eq	13bc8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3ac>  // b.none
   13b6c:	ldr	w1, [sp, #64]
   13b70:	ldr	x0, [sp, #40]
   13b74:	cmp	w1, #0x0
   13b78:	b.lt	13b8c <GOMP_doacross_ull_wait@@GOMP_4.5+0x370>  // b.tstop
   13b7c:	add	x1, x0, #0xf
   13b80:	and	x1, x1, #0xfffffffffffffff8
   13b84:	str	x1, [sp, #40]
   13b88:	b	13bbc <GOMP_doacross_ull_wait@@GOMP_4.5+0x3a0>
   13b8c:	add	w2, w1, #0x8
   13b90:	str	w2, [sp, #64]
   13b94:	ldr	w2, [sp, #64]
   13b98:	cmp	w2, #0x0
   13b9c:	b.le	13bb0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x394>
   13ba0:	add	x1, x0, #0xf
   13ba4:	and	x1, x1, #0xfffffffffffffff8
   13ba8:	str	x1, [sp, #40]
   13bac:	b	13bbc <GOMP_doacross_ull_wait@@GOMP_4.5+0x3a0>
   13bb0:	ldr	x2, [sp, #48]
   13bb4:	sxtw	x0, w1
   13bb8:	add	x0, x2, x0
   13bbc:	ldr	x0, [x0]
   13bc0:	add	x0, x0, #0x1
   13bc4:	b	13bd0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3b4>
   13bc8:	ldr	x0, [sp, #24]
   13bcc:	add	x0, x0, #0x1
   13bd0:	str	x0, [sp, #96]
   13bd4:	ldr	w0, [sp, #156]
   13bd8:	lsl	x0, x0, #3
   13bdc:	ldr	x1, [sp, #104]
   13be0:	add	x0, x1, x0
   13be4:	ldr	x0, [x0]
   13be8:	str	x0, [sp, #88]
   13bec:	ldr	x1, [sp, #96]
   13bf0:	ldr	x0, [sp, #88]
   13bf4:	cmp	x1, x0
   13bf8:	b.cs	13c0c <GOMP_doacross_ull_wait@@GOMP_4.5+0x3f0>  // b.hs, b.nlast
   13bfc:	ldr	x0, [sp, #112]
   13c00:	ldr	w0, [x0, #16]
   13c04:	str	w0, [sp, #156]
   13c08:	b	13c44 <GOMP_doacross_ull_wait@@GOMP_4.5+0x428>
   13c0c:	ldr	x1, [sp, #96]
   13c10:	ldr	x0, [sp, #88]
   13c14:	cmp	x1, x0
   13c18:	b.hi	13c40 <GOMP_doacross_ull_wait@@GOMP_4.5+0x424>  // b.pmore
   13c1c:	ldr	w0, [sp, #156]
   13c20:	add	w0, w0, #0x1
   13c24:	str	w0, [sp, #156]
   13c28:	ldr	x0, [sp, #112]
   13c2c:	ldr	w0, [x0, #16]
   13c30:	ldr	w1, [sp, #156]
   13c34:	cmp	w1, w0
   13c38:	b.cc	13b60 <GOMP_doacross_ull_wait@@GOMP_4.5+0x344>  // b.lo, b.ul, b.last
   13c3c:	b	13c44 <GOMP_doacross_ull_wait@@GOMP_4.5+0x428>
   13c40:	nop
   13c44:	ldr	x0, [sp, #112]
   13c48:	ldr	w0, [x0, #16]
   13c4c:	ldr	w1, [sp, #156]
   13c50:	cmp	w1, w0
   13c54:	b.eq	13c60 <GOMP_doacross_ull_wait@@GOMP_4.5+0x444>  // b.none
   13c58:	bl	12048 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1e0>
   13c5c:	b	13b30 <GOMP_doacross_ull_wait@@GOMP_4.5+0x314>
   13c60:	nop
   13c64:	dmb	ish
   13c68:	ldp	x29, x30, [sp], #352
   13c6c:	ret
   13c70:	sub	sp, sp, #0x10
   13c74:	str	x0, [sp, #8]
   13c78:	nop
   13c7c:	add	sp, sp, #0x10
   13c80:	ret
   13c84:	stp	x29, x30, [sp, #-48]!
   13c88:	mov	x29, sp
   13c8c:	str	x0, [sp, #24]
   13c90:	str	wzr, [sp, #44]
   13c94:	ldr	x1, [sp, #24]
   13c98:	add	x0, sp, #0x2c
   13c9c:	ldr	w3, [x0]
   13ca0:	mov	w4, #0x1                   	// #1
   13ca4:	ldaxr	w2, [x1]
   13ca8:	cmp	w2, w3
   13cac:	b.ne	13cb8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x49c>  // b.any
   13cb0:	stxr	w5, w4, [x1]
   13cb4:	cbnz	w5, 13ca4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x488>
   13cb8:	cset	w1, eq  // eq = none
   13cbc:	cmp	w1, #0x0
   13cc0:	b.ne	13cc8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x4ac>  // b.any
   13cc4:	str	w2, [x0]
   13cc8:	mov	w0, w1
   13ccc:	eor	w0, w0, #0x1
   13cd0:	and	w0, w0, #0xff
   13cd4:	cmp	w0, #0x0
   13cd8:	b.eq	13cec <GOMP_doacross_ull_wait@@GOMP_4.5+0x4d0>  // b.none
   13cdc:	ldr	w0, [sp, #44]
   13ce0:	mov	w1, w0
   13ce4:	ldr	x0, [sp, #24]
   13ce8:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
   13cec:	nop
   13cf0:	ldp	x29, x30, [sp], #48
   13cf4:	ret
   13cf8:	stp	x29, x30, [sp, #-48]!
   13cfc:	mov	x29, sp
   13d00:	str	x0, [sp, #24]
   13d04:	ldr	x1, [sp, #24]
   13d08:	ldxr	w0, [x1]
   13d0c:	stlxr	w2, wzr, [x1]
   13d10:	cbnz	w2, 13d08 <GOMP_doacross_ull_wait@@GOMP_4.5+0x4ec>
   13d14:	str	w0, [sp, #44]
   13d18:	ldr	w0, [sp, #44]
   13d1c:	lsr	w0, w0, #31
   13d20:	and	w0, w0, #0xff
   13d24:	and	x0, x0, #0xff
   13d28:	cmp	x0, #0x0
   13d2c:	b.eq	13d38 <GOMP_doacross_ull_wait@@GOMP_4.5+0x51c>  // b.none
   13d30:	ldr	x0, [sp, #24]
   13d34:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
   13d38:	nop
   13d3c:	ldp	x29, x30, [sp], #48
   13d40:	ret
   13d44:	sub	sp, sp, #0x10
   13d48:	str	x0, [sp, #8]
   13d4c:	ldr	x0, [sp, #8]
   13d50:	ldr	w0, [x0, #4]
   13d54:	and	w0, w0, #0x4
   13d58:	cmp	w0, #0x0
   13d5c:	cset	w0, ne  // ne = any
   13d60:	and	w0, w0, #0xff
   13d64:	and	x0, x0, #0xff
   13d68:	cmp	x0, #0x0
   13d6c:	cset	w0, ne  // ne = any
   13d70:	and	w0, w0, #0xff
   13d74:	add	sp, sp, #0x10
   13d78:	ret
   13d7c:	mrs	x1, tpidr_el0
   13d80:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   13d84:	ldr	x0, [x0, #4016]
   13d88:	add	x0, x1, x0
   13d8c:	ret
   13d90:	stp	x29, x30, [sp, #-48]!
   13d94:	mov	x29, sp
   13d98:	strb	w0, [sp, #31]
   13d9c:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   13da0:	ldr	x0, [x0, #80]
   13da4:	str	x0, [sp, #40]
   13da8:	ldr	x0, [sp, #40]
   13dac:	cmp	x0, #0x0
   13db0:	b.eq	13dc0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x5a4>  // b.none
   13db4:	ldr	x0, [sp, #40]
   13db8:	add	x0, x0, #0x90
   13dbc:	b	13ddc <GOMP_doacross_ull_wait@@GOMP_4.5+0x5c0>
   13dc0:	ldrb	w0, [sp, #31]
   13dc4:	cmp	w0, #0x0
   13dc8:	b.eq	13dd4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x5b8>  // b.none
   13dcc:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
   13dd0:	b	13ddc <GOMP_doacross_ull_wait@@GOMP_4.5+0x5c0>
   13dd4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   13dd8:	add	x0, x0, #0x2d8
   13ddc:	ldp	x29, x30, [sp], #48
   13de0:	ret
   13de4:	stp	x29, x30, [sp, #-96]!
   13de8:	mov	x29, sp
   13dec:	str	w0, [sp, #28]
   13df0:	str	w1, [sp, #24]
   13df4:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   13df8:	str	x0, [sp, #72]
   13dfc:	mov	w0, #0x0                   	// #0
   13e00:	bl	13d90 <GOMP_doacross_ull_wait@@GOMP_4.5+0x574>
   13e04:	str	x0, [sp, #64]
   13e08:	ldr	w0, [sp, #28]
   13e0c:	cmp	w0, #0x1
   13e10:	b.ne	13e1c <GOMP_doacross_ull_wait@@GOMP_4.5+0x600>  // b.any
   13e14:	mov	w0, #0x1                   	// #1
   13e18:	b	1402c <GOMP_doacross_ull_wait@@GOMP_4.5+0x810>
   13e1c:	ldr	x0, [sp, #72]
   13e20:	ldr	w0, [x0, #48]
   13e24:	cmp	w0, #0x0
   13e28:	b.eq	13e4c <GOMP_doacross_ull_wait@@GOMP_4.5+0x630>  // b.none
   13e2c:	ldr	x0, [sp, #64]
   13e30:	ldrb	w0, [x0, #25]
   13e34:	eor	w0, w0, #0x1
   13e38:	and	w0, w0, #0xff
   13e3c:	cmp	w0, #0x0
   13e40:	b.eq	13e4c <GOMP_doacross_ull_wait@@GOMP_4.5+0x630>  // b.none
   13e44:	mov	w0, #0x1                   	// #1
   13e48:	b	1402c <GOMP_doacross_ull_wait@@GOMP_4.5+0x810>
   13e4c:	ldr	x0, [sp, #72]
   13e50:	ldr	w0, [x0, #48]
   13e54:	mov	w1, w0
   13e58:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   13e5c:	add	x0, x0, #0x300
   13e60:	ldr	x0, [x0]
   13e64:	cmp	x1, x0
   13e68:	b.cc	13e74 <GOMP_doacross_ull_wait@@GOMP_4.5+0x658>  // b.lo, b.ul, b.last
   13e6c:	mov	w0, #0x1                   	// #1
   13e70:	b	1402c <GOMP_doacross_ull_wait@@GOMP_4.5+0x810>
   13e74:	ldr	w0, [sp, #28]
   13e78:	cmp	w0, #0x0
   13e7c:	b.ne	13e90 <GOMP_doacross_ull_wait@@GOMP_4.5+0x674>  // b.any
   13e80:	ldr	x0, [sp, #64]
   13e84:	ldr	x0, [x0]
   13e88:	str	w0, [sp, #92]
   13e8c:	b	13e98 <GOMP_doacross_ull_wait@@GOMP_4.5+0x67c>
   13e90:	ldr	w0, [sp, #28]
   13e94:	str	w0, [sp, #92]
   13e98:	ldr	w0, [sp, #92]
   13e9c:	str	w0, [sp, #88]
   13ea0:	ldr	x0, [sp, #64]
   13ea4:	ldrb	w0, [x0, #24]
   13ea8:	cmp	w0, #0x0
   13eac:	b.eq	13ef4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x6d8>  // b.none
   13eb0:	bl	215c8 <omp_test_nest_lock@OMP_1.0+0x8f4>
   13eb4:	str	w0, [sp, #60]
   13eb8:	ldr	w1, [sp, #60]
   13ebc:	ldr	w0, [sp, #88]
   13ec0:	cmp	w1, w0
   13ec4:	b.cs	13ed0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x6b4>  // b.hs, b.nlast
   13ec8:	ldr	w0, [sp, #60]
   13ecc:	str	w0, [sp, #88]
   13ed0:	ldr	w0, [sp, #24]
   13ed4:	cmp	w0, #0x0
   13ed8:	b.eq	13ef4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x6d8>  // b.none
   13edc:	ldr	w1, [sp, #24]
   13ee0:	ldr	w0, [sp, #88]
   13ee4:	cmp	w1, w0
   13ee8:	b.cs	13ef4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x6d8>  // b.hs, b.nlast
   13eec:	ldr	w0, [sp, #24]
   13ef0:	str	w0, [sp, #88]
   13ef4:	ldr	x0, [sp, #64]
   13ef8:	ldr	w0, [x0, #20]
   13efc:	cmn	w0, #0x1
   13f00:	cset	w0, eq  // eq = none
   13f04:	and	w0, w0, #0xff
   13f08:	and	x0, x0, #0xff
   13f0c:	cmp	x0, #0x0
   13f10:	b.ne	13f20 <GOMP_doacross_ull_wait@@GOMP_4.5+0x704>  // b.any
   13f14:	ldr	w0, [sp, #88]
   13f18:	cmp	w0, #0x1
   13f1c:	b.ne	13f28 <GOMP_doacross_ull_wait@@GOMP_4.5+0x70c>  // b.any
   13f20:	ldr	w0, [sp, #88]
   13f24:	b	1402c <GOMP_doacross_ull_wait@@GOMP_4.5+0x810>
   13f28:	ldr	x0, [sp, #72]
   13f2c:	ldr	x0, [x0, #96]
   13f30:	str	x0, [sp, #48]
   13f34:	ldr	x0, [sp, #72]
   13f38:	ldr	x0, [x0, #16]
   13f3c:	cmp	x0, #0x0
   13f40:	b.eq	13f50 <GOMP_doacross_ull_wait@@GOMP_4.5+0x734>  // b.none
   13f44:	ldr	x0, [sp, #48]
   13f48:	cmp	x0, #0x0
   13f4c:	b.ne	13f98 <GOMP_doacross_ull_wait@@GOMP_4.5+0x77c>  // b.any
   13f50:	ldr	w0, [sp, #88]
   13f54:	str	w0, [sp, #84]
   13f58:	ldr	x0, [sp, #64]
   13f5c:	ldr	w0, [x0, #20]
   13f60:	ldr	w1, [sp, #84]
   13f64:	cmp	w1, w0
   13f68:	b.ls	13f78 <GOMP_doacross_ull_wait@@GOMP_4.5+0x75c>  // b.plast
   13f6c:	ldr	x0, [sp, #64]
   13f70:	ldr	w0, [x0, #20]
   13f74:	str	w0, [sp, #84]
   13f78:	ldr	x0, [sp, #48]
   13f7c:	cmp	x0, #0x0
   13f80:	b.eq	13f90 <GOMP_doacross_ull_wait@@GOMP_4.5+0x774>  // b.none
   13f84:	ldr	w1, [sp, #84]
   13f88:	ldr	x0, [sp, #48]
   13f8c:	str	x1, [x0, #24]
   13f90:	ldr	w0, [sp, #84]
   13f94:	b	1402c <GOMP_doacross_ull_wait@@GOMP_4.5+0x810>
   13f98:	ldr	x0, [sp, #48]
   13f9c:	ldr	x0, [x0, #24]
   13fa0:	str	x0, [sp, #40]
   13fa4:	ldr	w0, [sp, #88]
   13fa8:	str	w0, [sp, #84]
   13fac:	ldr	x0, [sp, #64]
   13fb0:	ldr	w0, [x0, #20]
   13fb4:	mov	w1, w0
   13fb8:	ldr	x0, [sp, #40]
   13fbc:	sub	x0, x1, x0
   13fc0:	add	x1, x0, #0x1
   13fc4:	ldr	w0, [sp, #84]
   13fc8:	cmp	x1, x0
   13fcc:	b.cs	13fe8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x7cc>  // b.hs, b.nlast
   13fd0:	ldr	x0, [sp, #64]
   13fd4:	ldr	w0, [x0, #20]
   13fd8:	ldr	x1, [sp, #40]
   13fdc:	sub	w0, w0, w1
   13fe0:	add	w0, w0, #0x1
   13fe4:	str	w0, [sp, #84]
   13fe8:	ldr	x0, [sp, #48]
   13fec:	add	x1, x0, #0x18
   13ff0:	ldr	w2, [sp, #84]
   13ff4:	ldr	x0, [sp, #40]
   13ff8:	add	x0, x2, x0
   13ffc:	sub	x3, x0, #0x1
   14000:	ldr	x2, [sp, #40]
   14004:	ldxr	x0, [x1]
   14008:	cmp	x0, x2
   1400c:	b.ne	14018 <GOMP_doacross_ull_wait@@GOMP_4.5+0x7fc>  // b.any
   14010:	stlxr	w4, x3, [x1]
   14014:	cbnz	w4, 14004 <GOMP_doacross_ull_wait@@GOMP_4.5+0x7e8>
   14018:	dmb	ish
   1401c:	ldr	x1, [sp, #40]
   14020:	cmp	x1, x0
   14024:	b.ne	13f98 <GOMP_doacross_ull_wait@@GOMP_4.5+0x77c>  // b.any
   14028:	ldr	w0, [sp, #84]
   1402c:	ldp	x29, x30, [sp], #96
   14030:	ret

0000000000014034 <GOMP_parallel_start@@GOMP_1.0>:
   14034:	stp	x29, x30, [sp, #-48]!
   14038:	mov	x29, sp
   1403c:	str	x0, [sp, #40]
   14040:	str	x1, [sp, #32]
   14044:	str	w2, [sp, #28]
   14048:	mov	w1, #0x0                   	// #0
   1404c:	ldr	w0, [sp, #28]
   14050:	bl	13de4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x5c8>
   14054:	str	w0, [sp, #28]
   14058:	ldr	w0, [sp, #28]
   1405c:	bl	1dafc <omp_in_final@@OMP_3.1+0x730>
   14060:	mov	x5, #0x0                   	// #0
   14064:	mov	x4, x0
   14068:	mov	w3, #0x0                   	// #0
   1406c:	ldr	w2, [sp, #28]
   14070:	ldr	x1, [sp, #32]
   14074:	ldr	x0, [sp, #40]
   14078:	bl	1deec <omp_in_final@@OMP_3.1+0xb20>
   1407c:	nop
   14080:	ldp	x29, x30, [sp], #48
   14084:	ret

0000000000014088 <GOMP_parallel_end@@GOMP_1.0>:
   14088:	stp	x29, x30, [sp, #-48]!
   1408c:	mov	x29, sp
   14090:	mov	w0, #0x0                   	// #0
   14094:	bl	13d90 <GOMP_doacross_ull_wait@@GOMP_4.5+0x574>
   14098:	str	x0, [sp, #40]
   1409c:	ldr	x0, [sp, #40]
   140a0:	ldr	w0, [x0, #20]
   140a4:	cmn	w0, #0x1
   140a8:	cset	w0, ne  // ne = any
   140ac:	and	w0, w0, #0xff
   140b0:	and	x0, x0, #0xff
   140b4:	cmp	x0, #0x0
   140b8:	b.eq	14154 <GOMP_parallel_end@@GOMP_1.0+0xcc>  // b.none
   140bc:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   140c0:	str	x0, [sp, #32]
   140c4:	ldr	x0, [sp, #32]
   140c8:	ldr	x0, [x0, #16]
   140cc:	str	x0, [sp, #24]
   140d0:	ldr	x0, [sp, #24]
   140d4:	cmp	x0, #0x0
   140d8:	b.eq	140e8 <GOMP_parallel_end@@GOMP_1.0+0x60>  // b.none
   140dc:	ldr	x0, [sp, #24]
   140e0:	ldr	w0, [x0]
   140e4:	b	140ec <GOMP_parallel_end@@GOMP_1.0+0x64>
   140e8:	mov	w0, #0x1                   	// #1
   140ec:	str	w0, [sp, #20]
   140f0:	bl	1f720 <omp_in_final@@OMP_3.1+0x2354>
   140f4:	ldr	w0, [sp, #20]
   140f8:	cmp	w0, #0x1
   140fc:	b.ls	14158 <GOMP_parallel_end@@GOMP_1.0+0xd0>  // b.plast
   14100:	ldr	x0, [sp, #32]
   14104:	ldr	x0, [x0, #16]
   14108:	cmp	x0, #0x0
   1410c:	b.ne	14124 <GOMP_parallel_end@@GOMP_1.0+0x9c>  // b.any
   14110:	ldr	x0, [sp, #32]
   14114:	ldr	x0, [x0, #96]
   14118:	mov	x1, #0x1                   	// #1
   1411c:	str	x1, [x0, #24]
   14120:	b	14158 <GOMP_parallel_end@@GOMP_1.0+0xd0>
   14124:	ldr	x0, [sp, #32]
   14128:	ldr	x0, [x0, #96]
   1412c:	add	x0, x0, #0x18
   14130:	ldr	w1, [sp, #20]
   14134:	mov	x2, #0x1                   	// #1
   14138:	sub	x1, x2, x1
   1413c:	ldxr	x2, [x0]
   14140:	add	x2, x2, x1
   14144:	stlxr	w3, x2, [x0]
   14148:	cbnz	w3, 1413c <GOMP_parallel_end@@GOMP_1.0+0xb4>
   1414c:	dmb	ish
   14150:	b	14158 <GOMP_parallel_end@@GOMP_1.0+0xd0>
   14154:	bl	1f720 <omp_in_final@@OMP_3.1+0x2354>
   14158:	nop
   1415c:	ldp	x29, x30, [sp], #48
   14160:	ret

0000000000014164 <GOMP_parallel@@GOMP_4.0>:
   14164:	stp	x29, x30, [sp, #-48]!
   14168:	mov	x29, sp
   1416c:	str	x0, [sp, #40]
   14170:	str	x1, [sp, #32]
   14174:	str	w2, [sp, #28]
   14178:	str	w3, [sp, #24]
   1417c:	mov	w1, #0x0                   	// #0
   14180:	ldr	w0, [sp, #28]
   14184:	bl	13de4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x5c8>
   14188:	str	w0, [sp, #28]
   1418c:	ldr	w0, [sp, #28]
   14190:	bl	1dafc <omp_in_final@@OMP_3.1+0x730>
   14194:	mov	x5, #0x0                   	// #0
   14198:	mov	x4, x0
   1419c:	ldr	w3, [sp, #24]
   141a0:	ldr	w2, [sp, #28]
   141a4:	ldr	x1, [sp, #32]
   141a8:	ldr	x0, [sp, #40]
   141ac:	bl	1deec <omp_in_final@@OMP_3.1+0xb20>
   141b0:	ldr	x1, [sp, #40]
   141b4:	ldr	x0, [sp, #32]
   141b8:	blr	x1
   141bc:	bl	14088 <GOMP_parallel_end@@GOMP_1.0>
   141c0:	nop
   141c4:	ldp	x29, x30, [sp], #48
   141c8:	ret

00000000000141cc <GOMP_parallel_reductions@@GOMP_5.0>:
   141cc:	stp	x29, x30, [sp, #-64]!
   141d0:	mov	x29, sp
   141d4:	str	x0, [sp, #40]
   141d8:	str	x1, [sp, #32]
   141dc:	str	w2, [sp, #28]
   141e0:	str	w3, [sp, #24]
   141e4:	mov	w1, #0x0                   	// #0
   141e8:	ldr	w0, [sp, #28]
   141ec:	bl	13de4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x5c8>
   141f0:	str	w0, [sp, #28]
   141f4:	ldr	x0, [sp, #32]
   141f8:	ldr	x0, [x0]
   141fc:	str	x0, [sp, #56]
   14200:	ldr	w1, [sp, #28]
   14204:	ldr	x0, [sp, #56]
   14208:	bl	1cbe0 <GOMP_task_reduction_remap@@GOMP_5.0+0x400>
   1420c:	str	x0, [sp, #48]
   14210:	ldr	w0, [sp, #28]
   14214:	bl	1dafc <omp_in_final@@OMP_3.1+0x730>
   14218:	ldr	x5, [sp, #48]
   1421c:	mov	x4, x0
   14220:	ldr	w3, [sp, #24]
   14224:	ldr	w2, [sp, #28]
   14228:	ldr	x1, [sp, #32]
   1422c:	ldr	x0, [sp, #40]
   14230:	bl	1deec <omp_in_final@@OMP_3.1+0xb20>
   14234:	ldr	x1, [sp, #40]
   14238:	ldr	x0, [sp, #32]
   1423c:	blr	x1
   14240:	bl	14088 <GOMP_parallel_end@@GOMP_1.0>
   14244:	ldr	x0, [sp, #48]
   14248:	add	x0, x0, #0x34
   1424c:	bl	13c70 <GOMP_doacross_ull_wait@@GOMP_4.5+0x454>
   14250:	ldr	x0, [sp, #48]
   14254:	bl	8a20 <free@plt>
   14258:	ldr	w0, [sp, #28]
   1425c:	ldp	x29, x30, [sp], #64
   14260:	ret

0000000000014264 <GOMP_cancellation_point@@GOMP_4.0>:
   14264:	stp	x29, x30, [sp, #-48]!
   14268:	mov	x29, sp
   1426c:	str	w0, [sp, #28]
   14270:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   14274:	add	x0, x0, #0x574
   14278:	ldrb	w0, [x0]
   1427c:	eor	w0, w0, #0x1
   14280:	and	w0, w0, #0xff
   14284:	cmp	w0, #0x0
   14288:	b.eq	14294 <GOMP_cancellation_point@@GOMP_4.0+0x30>  // b.none
   1428c:	mov	w0, #0x0                   	// #0
   14290:	b	143a0 <GOMP_cancellation_point@@GOMP_4.0+0x13c>
   14294:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   14298:	str	x0, [sp, #40]
   1429c:	ldr	x0, [sp, #40]
   142a0:	ldr	x0, [x0, #16]
   142a4:	str	x0, [sp, #32]
   142a8:	ldr	w0, [sp, #28]
   142ac:	and	w0, w0, #0x6
   142b0:	cmp	w0, #0x0
   142b4:	b.eq	142e4 <GOMP_cancellation_point@@GOMP_4.0+0x80>  // b.none
   142b8:	ldr	x0, [sp, #32]
   142bc:	cmp	x0, #0x0
   142c0:	b.ne	142cc <GOMP_cancellation_point@@GOMP_4.0+0x68>  // b.any
   142c4:	mov	w0, #0x0                   	// #0
   142c8:	b	143a0 <GOMP_cancellation_point@@GOMP_4.0+0x13c>
   142cc:	ldr	x0, [sp, #32]
   142d0:	ldr	w0, [x0, #1332]
   142d4:	cmp	w0, #0x0
   142d8:	cset	w0, ne  // ne = any
   142dc:	and	w0, w0, #0xff
   142e0:	b	143a0 <GOMP_cancellation_point@@GOMP_4.0+0x13c>
   142e4:	ldr	w0, [sp, #28]
   142e8:	and	w0, w0, #0x8
   142ec:	cmp	w0, #0x0
   142f0:	b.eq	1437c <GOMP_cancellation_point@@GOMP_4.0+0x118>  // b.none
   142f4:	ldr	x0, [sp, #40]
   142f8:	ldr	x0, [x0, #80]
   142fc:	ldr	x0, [x0, #40]
   14300:	cmp	x0, #0x0
   14304:	b.eq	1437c <GOMP_cancellation_point@@GOMP_4.0+0x118>  // b.none
   14308:	ldr	x0, [sp, #40]
   1430c:	ldr	x0, [x0, #80]
   14310:	ldr	x0, [x0, #40]
   14314:	ldrb	w0, [x0, #49]
   14318:	cmp	w0, #0x0
   1431c:	b.eq	14328 <GOMP_cancellation_point@@GOMP_4.0+0xc4>  // b.none
   14320:	mov	w0, #0x1                   	// #1
   14324:	b	143a0 <GOMP_cancellation_point@@GOMP_4.0+0x13c>
   14328:	ldr	x0, [sp, #40]
   1432c:	ldr	x0, [x0, #80]
   14330:	ldr	x0, [x0, #40]
   14334:	ldrb	w0, [x0, #50]
   14338:	cmp	w0, #0x0
   1433c:	b.eq	1437c <GOMP_cancellation_point@@GOMP_4.0+0x118>  // b.none
   14340:	ldr	x0, [sp, #40]
   14344:	ldr	x0, [x0, #80]
   14348:	ldr	x0, [x0, #40]
   1434c:	ldr	x0, [x0]
   14350:	cmp	x0, #0x0
   14354:	b.eq	1437c <GOMP_cancellation_point@@GOMP_4.0+0x118>  // b.none
   14358:	ldr	x0, [sp, #40]
   1435c:	ldr	x0, [x0, #80]
   14360:	ldr	x0, [x0, #40]
   14364:	ldr	x0, [x0]
   14368:	ldrb	w0, [x0, #49]
   1436c:	cmp	w0, #0x0
   14370:	b.eq	1437c <GOMP_cancellation_point@@GOMP_4.0+0x118>  // b.none
   14374:	mov	w0, #0x1                   	// #1
   14378:	b	143a0 <GOMP_cancellation_point@@GOMP_4.0+0x13c>
   1437c:	ldr	x0, [sp, #32]
   14380:	cmp	x0, #0x0
   14384:	b.eq	1439c <GOMP_cancellation_point@@GOMP_4.0+0x138>  // b.none
   14388:	ldr	x0, [sp, #32]
   1438c:	add	x0, x0, #0x80
   14390:	bl	13d44 <GOMP_doacross_ull_wait@@GOMP_4.5+0x528>
   14394:	and	w0, w0, #0xff
   14398:	b	143a0 <GOMP_cancellation_point@@GOMP_4.0+0x13c>
   1439c:	mov	w0, #0x0                   	// #0
   143a0:	ldp	x29, x30, [sp], #48
   143a4:	ret

00000000000143a8 <GOMP_cancel@@GOMP_4.0>:
   143a8:	stp	x29, x30, [sp, #-64]!
   143ac:	mov	x29, sp
   143b0:	str	w0, [sp, #28]
   143b4:	strb	w1, [sp, #27]
   143b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   143bc:	add	x0, x0, #0x574
   143c0:	ldrb	w0, [x0]
   143c4:	eor	w0, w0, #0x1
   143c8:	and	w0, w0, #0xff
   143cc:	cmp	w0, #0x0
   143d0:	b.eq	143dc <GOMP_cancel@@GOMP_4.0+0x34>  // b.none
   143d4:	mov	w0, #0x0                   	// #0
   143d8:	b	14500 <GOMP_cancel@@GOMP_4.0+0x158>
   143dc:	ldrb	w0, [sp, #27]
   143e0:	eor	w0, w0, #0x1
   143e4:	and	w0, w0, #0xff
   143e8:	cmp	w0, #0x0
   143ec:	b.eq	14400 <GOMP_cancel@@GOMP_4.0+0x58>  // b.none
   143f0:	ldr	w0, [sp, #28]
   143f4:	bl	14264 <GOMP_cancellation_point@@GOMP_4.0>
   143f8:	and	w0, w0, #0xff
   143fc:	b	14500 <GOMP_cancel@@GOMP_4.0+0x158>
   14400:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   14404:	str	x0, [sp, #48]
   14408:	ldr	x0, [sp, #48]
   1440c:	ldr	x0, [x0, #16]
   14410:	str	x0, [sp, #40]
   14414:	ldr	w0, [sp, #28]
   14418:	and	w0, w0, #0x6
   1441c:	cmp	w0, #0x0
   14420:	b.eq	14444 <GOMP_cancel@@GOMP_4.0+0x9c>  // b.none
   14424:	ldr	x0, [sp, #40]
   14428:	cmp	x0, #0x0
   1442c:	b.eq	1443c <GOMP_cancel@@GOMP_4.0+0x94>  // b.none
   14430:	ldr	x0, [sp, #40]
   14434:	mov	w1, #0x1                   	// #1
   14438:	str	w1, [x0, #1332]
   1443c:	mov	w0, #0x1                   	// #1
   14440:	b	14500 <GOMP_cancel@@GOMP_4.0+0x158>
   14444:	ldr	w0, [sp, #28]
   14448:	and	w0, w0, #0x8
   1444c:	cmp	w0, #0x0
   14450:	b.eq	144e8 <GOMP_cancel@@GOMP_4.0+0x140>  // b.none
   14454:	ldr	x0, [sp, #48]
   14458:	ldr	x0, [x0, #80]
   1445c:	ldr	x0, [x0, #40]
   14460:	cmp	x0, #0x0
   14464:	b.eq	144e0 <GOMP_cancel@@GOMP_4.0+0x138>  // b.none
   14468:	ldr	x0, [sp, #48]
   1446c:	ldr	x0, [x0, #80]
   14470:	ldr	x0, [x0, #40]
   14474:	str	x0, [sp, #56]
   14478:	ldr	x0, [sp, #56]
   1447c:	ldrb	w0, [x0, #50]
   14480:	cmp	w0, #0x0
   14484:	b.eq	144a4 <GOMP_cancel@@GOMP_4.0+0xfc>  // b.none
   14488:	ldr	x0, [sp, #56]
   1448c:	ldr	x0, [x0]
   14490:	cmp	x0, #0x0
   14494:	b.eq	144a4 <GOMP_cancel@@GOMP_4.0+0xfc>  // b.none
   14498:	ldr	x0, [sp, #56]
   1449c:	ldr	x0, [x0]
   144a0:	str	x0, [sp, #56]
   144a4:	ldr	x0, [sp, #56]
   144a8:	ldrb	w0, [x0, #49]
   144ac:	eor	w0, w0, #0x1
   144b0:	and	w0, w0, #0xff
   144b4:	cmp	w0, #0x0
   144b8:	b.eq	144e0 <GOMP_cancel@@GOMP_4.0+0x138>  // b.none
   144bc:	ldr	x0, [sp, #40]
   144c0:	add	x0, x0, #0x500
   144c4:	bl	13c84 <GOMP_doacross_ull_wait@@GOMP_4.5+0x468>
   144c8:	ldr	x0, [sp, #56]
   144cc:	mov	w1, #0x1                   	// #1
   144d0:	strb	w1, [x0, #49]
   144d4:	ldr	x0, [sp, #40]
   144d8:	add	x0, x0, #0x500
   144dc:	bl	13cf8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x4dc>
   144e0:	mov	w0, #0x1                   	// #1
   144e4:	b	14500 <GOMP_cancel@@GOMP_4.0+0x158>
   144e8:	ldr	x0, [sp, #40]
   144ec:	mov	w1, #0x1                   	// #1
   144f0:	str	w1, [x0, #1336]
   144f4:	ldr	x0, [sp, #40]
   144f8:	bl	223f0 <omp_get_num_procs@@OMP_1.0+0xd94>
   144fc:	mov	w0, #0x1                   	// #1
   14500:	ldp	x29, x30, [sp], #64
   14504:	ret

0000000000014508 <omp_get_num_threads@@OMP_1.0>:
   14508:	stp	x29, x30, [sp, #-32]!
   1450c:	mov	x29, sp
   14510:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   14514:	ldr	x0, [x0, #16]
   14518:	str	x0, [sp, #24]
   1451c:	ldr	x0, [sp, #24]
   14520:	cmp	x0, #0x0
   14524:	b.eq	14534 <omp_get_num_threads@@OMP_1.0+0x2c>  // b.none
   14528:	ldr	x0, [sp, #24]
   1452c:	ldr	w0, [x0]
   14530:	b	14538 <omp_get_num_threads@@OMP_1.0+0x30>
   14534:	mov	w0, #0x1                   	// #1
   14538:	ldp	x29, x30, [sp], #32
   1453c:	ret

0000000000014540 <omp_get_thread_num@@OMP_1.0>:
   14540:	stp	x29, x30, [sp, #-16]!
   14544:	mov	x29, sp
   14548:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   1454c:	ldr	w0, [x0, #40]
   14550:	ldp	x29, x30, [sp], #16
   14554:	ret

0000000000014558 <omp_in_parallel@@OMP_1.0>:
   14558:	stp	x29, x30, [sp, #-16]!
   1455c:	mov	x29, sp
   14560:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   14564:	ldr	w0, [x0, #48]
   14568:	cmp	w0, #0x0
   1456c:	cset	w0, ne  // ne = any
   14570:	and	w0, w0, #0xff
   14574:	ldp	x29, x30, [sp], #16
   14578:	ret

000000000001457c <omp_get_level@@OMP_3.0>:
   1457c:	stp	x29, x30, [sp, #-16]!
   14580:	mov	x29, sp
   14584:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   14588:	ldr	w0, [x0, #44]
   1458c:	ldp	x29, x30, [sp], #16
   14590:	ret

0000000000014594 <omp_get_ancestor_thread_num@@OMP_3.0>:
   14594:	stp	x29, x30, [sp, #-48]!
   14598:	mov	x29, sp
   1459c:	str	w0, [sp, #28]
   145a0:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   145a4:	add	x0, x0, #0x10
   145a8:	str	x0, [sp, #40]
   145ac:	ldr	w0, [sp, #28]
   145b0:	cmp	w0, #0x0
   145b4:	b.lt	145cc <omp_get_ancestor_thread_num@@OMP_3.0+0x38>  // b.tstop
   145b8:	ldr	x0, [sp, #40]
   145bc:	ldr	w1, [x0, #28]
   145c0:	ldr	w0, [sp, #28]
   145c4:	cmp	w1, w0
   145c8:	b.cs	145d4 <omp_get_ancestor_thread_num@@OMP_3.0+0x40>  // b.hs, b.nlast
   145cc:	mov	w0, #0xffffffff            	// #-1
   145d0:	b	1461c <omp_get_ancestor_thread_num@@OMP_3.0+0x88>
   145d4:	ldr	x0, [sp, #40]
   145d8:	ldr	w1, [x0, #28]
   145dc:	ldr	w0, [sp, #28]
   145e0:	sub	w0, w1, w0
   145e4:	str	w0, [sp, #28]
   145e8:	b	14608 <omp_get_ancestor_thread_num@@OMP_3.0+0x74>
   145ec:	ldr	x0, [sp, #40]
   145f0:	ldr	x0, [x0]
   145f4:	add	x0, x0, #0x8
   145f8:	str	x0, [sp, #40]
   145fc:	ldr	w0, [sp, #28]
   14600:	sub	w0, w0, #0x1
   14604:	str	w0, [sp, #28]
   14608:	ldr	w0, [sp, #28]
   1460c:	cmp	w0, #0x0
   14610:	b.gt	145ec <omp_get_ancestor_thread_num@@OMP_3.0+0x58>
   14614:	ldr	x0, [sp, #40]
   14618:	ldr	w0, [x0, #24]
   1461c:	ldp	x29, x30, [sp], #48
   14620:	ret

0000000000014624 <omp_get_team_size@@OMP_3.0>:
   14624:	stp	x29, x30, [sp, #-48]!
   14628:	mov	x29, sp
   1462c:	str	w0, [sp, #28]
   14630:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   14634:	add	x0, x0, #0x10
   14638:	str	x0, [sp, #40]
   1463c:	ldr	w0, [sp, #28]
   14640:	cmp	w0, #0x0
   14644:	b.lt	1465c <omp_get_team_size@@OMP_3.0+0x38>  // b.tstop
   14648:	ldr	x0, [sp, #40]
   1464c:	ldr	w1, [x0, #28]
   14650:	ldr	w0, [sp, #28]
   14654:	cmp	w1, w0
   14658:	b.cs	14664 <omp_get_team_size@@OMP_3.0+0x40>  // b.hs, b.nlast
   1465c:	mov	w0, #0xffffffff            	// #-1
   14660:	b	146c8 <omp_get_team_size@@OMP_3.0+0xa4>
   14664:	ldr	x0, [sp, #40]
   14668:	ldr	w1, [x0, #28]
   1466c:	ldr	w0, [sp, #28]
   14670:	sub	w0, w1, w0
   14674:	str	w0, [sp, #28]
   14678:	b	14698 <omp_get_team_size@@OMP_3.0+0x74>
   1467c:	ldr	x0, [sp, #40]
   14680:	ldr	x0, [x0]
   14684:	add	x0, x0, #0x8
   14688:	str	x0, [sp, #40]
   1468c:	ldr	w0, [sp, #28]
   14690:	sub	w0, w0, #0x1
   14694:	str	w0, [sp, #28]
   14698:	ldr	w0, [sp, #28]
   1469c:	cmp	w0, #0x0
   146a0:	b.gt	1467c <omp_get_team_size@@OMP_3.0+0x58>
   146a4:	ldr	x0, [sp, #40]
   146a8:	ldr	x0, [x0]
   146ac:	cmp	x0, #0x0
   146b0:	b.ne	146bc <omp_get_team_size@@OMP_3.0+0x98>  // b.any
   146b4:	mov	w0, #0x1                   	// #1
   146b8:	b	146c8 <omp_get_team_size@@OMP_3.0+0xa4>
   146bc:	ldr	x0, [sp, #40]
   146c0:	ldr	x0, [x0]
   146c4:	ldr	w0, [x0]
   146c8:	ldp	x29, x30, [sp], #48
   146cc:	ret

00000000000146d0 <omp_get_active_level@@OMP_3.0>:
   146d0:	stp	x29, x30, [sp, #-16]!
   146d4:	mov	x29, sp
   146d8:	bl	13d7c <GOMP_doacross_ull_wait@@GOMP_4.5+0x560>
   146dc:	ldr	w0, [x0, #48]
   146e0:	ldp	x29, x30, [sp], #16
   146e4:	ret
   146e8:	stp	x29, x30, [sp, #-48]!
   146ec:	mov	x29, sp
   146f0:	str	x0, [sp, #24]
   146f4:	str	x1, [sp, #16]
   146f8:	ldr	x2, [sp, #16]
   146fc:	ldr	x1, [sp, #24]
   14700:	ldxr	x0, [x1]
   14704:	stlxr	w3, x2, [x1]
   14708:	cbnz	w3, 14700 <omp_get_active_level@@OMP_3.0+0x30>
   1470c:	str	x0, [sp, #40]
   14710:	ldr	x0, [sp, #40]
   14714:	cmp	x0, #0x1
   14718:	b.eq	14724 <omp_get_active_level@@OMP_3.0+0x54>  // b.none
   1471c:	ldr	x0, [sp, #24]
   14720:	bl	22790 <omp_get_num_procs@@OMP_1.0+0x1134>
   14724:	nop
   14728:	ldp	x29, x30, [sp], #48
   1472c:	ret
   14730:	mrs	x1, tpidr_el0
   14734:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   14738:	ldr	x0, [x0, #4016]
   1473c:	add	x0, x1, x0
   14740:	ret
   14744:	stp	x29, x30, [sp, #-32]!
   14748:	mov	x29, sp
   1474c:	bl	14730 <omp_get_active_level@@OMP_3.0+0x60>
   14750:	str	x0, [sp, #24]
   14754:	ldr	x0, [sp, #24]
   14758:	ldr	x0, [x0, #32]
   1475c:	cmp	x0, #0x0
   14760:	cset	w0, ne  // ne = any
   14764:	and	w0, w0, #0xff
   14768:	and	x0, x0, #0xff
   1476c:	cmp	x0, #0x0
   14770:	b.eq	14794 <omp_get_active_level@@OMP_3.0+0xc4>  // b.none
   14774:	ldr	x0, [sp, #24]
   14778:	ldr	x0, [x0, #32]
   1477c:	add	x2, x0, #0x50
   14780:	ldr	x0, [sp, #24]
   14784:	ldr	x0, [x0, #24]
   14788:	mov	x1, x0
   1478c:	mov	x0, x2
   14790:	bl	146e8 <omp_get_active_level@@OMP_3.0+0x18>
   14794:	nop
   14798:	ldp	x29, x30, [sp], #32
   1479c:	ret
   147a0:	sub	sp, sp, #0x10
   147a4:	str	x0, [sp, #8]
   147a8:	str	w1, [sp, #4]
   147ac:	ldr	x0, [sp, #8]
   147b0:	mov	w1, #0x2                   	// #2
   147b4:	str	w1, [x0]
   147b8:	ldr	x0, [sp, #8]
   147bc:	mov	x1, #0x1                   	// #1
   147c0:	str	x1, [x0, #8]
   147c4:	ldr	w0, [sp, #4]
   147c8:	add	x1, x0, #0x1
   147cc:	ldr	x0, [sp, #8]
   147d0:	str	x1, [x0, #16]
   147d4:	ldr	x0, [sp, #8]
   147d8:	mov	x1, #0x1                   	// #1
   147dc:	str	x1, [x0, #24]
   147e0:	ldr	x0, [sp, #8]
   147e4:	mov	x1, #0x1                   	// #1
   147e8:	str	x1, [x0, #72]
   147ec:	ldr	x0, [sp, #8]
   147f0:	mov	w1, #0x1                   	// #1
   147f4:	str	w1, [x0, #4]
   147f8:	nop
   147fc:	add	sp, sp, #0x10
   14800:	ret

0000000000014804 <GOMP_sections_start@@GOMP_1.0>:
   14804:	stp	x29, x30, [sp, #-64]!
   14808:	mov	x29, sp
   1480c:	str	w0, [sp, #28]
   14810:	bl	14730 <omp_get_active_level@@OMP_3.0+0x60>
   14814:	str	x0, [sp, #48]
   14818:	mov	x0, #0x0                   	// #0
   1481c:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   14820:	and	w0, w0, #0xff
   14824:	cmp	w0, #0x0
   14828:	b.eq	14840 <GOMP_sections_start@@GOMP_1.0+0x3c>  // b.none
   1482c:	ldr	x0, [sp, #48]
   14830:	ldr	x0, [x0, #24]
   14834:	ldr	w1, [sp, #28]
   14838:	bl	147a0 <omp_get_active_level@@OMP_3.0+0xd0>
   1483c:	bl	14744 <omp_get_active_level@@OMP_3.0+0x74>
   14840:	add	x1, sp, #0x20
   14844:	add	x0, sp, #0x28
   14848:	bl	dc34 <omp_is_initial_device@@OMP_4.0+0x4ec>
   1484c:	and	w0, w0, #0xff
   14850:	cmp	w0, #0x0
   14854:	b.eq	14864 <GOMP_sections_start@@GOMP_1.0+0x60>  // b.none
   14858:	ldr	x0, [sp, #40]
   1485c:	str	x0, [sp, #56]
   14860:	b	14868 <GOMP_sections_start@@GOMP_1.0+0x64>
   14864:	str	xzr, [sp, #56]
   14868:	ldr	x0, [sp, #56]
   1486c:	ldp	x29, x30, [sp], #64
   14870:	ret

0000000000014874 <GOMP_sections2_start@@GOMP_5.0>:
   14874:	stp	x29, x30, [sp, #-112]!
   14878:	mov	x29, sp
   1487c:	str	x19, [sp, #16]
   14880:	str	w0, [sp, #60]
   14884:	str	x1, [sp, #48]
   14888:	str	x2, [sp, #40]
   1488c:	bl	14730 <omp_get_active_level@@OMP_3.0+0x60>
   14890:	str	x0, [sp, #96]
   14894:	ldr	x0, [sp, #48]
   14898:	cmp	x0, #0x0
   1489c:	b.eq	148a4 <GOMP_sections2_start@@GOMP_5.0+0x30>  // b.none
   148a0:	bl	1d2bc <GOMP_task_reduction_remap@@GOMP_5.0+0xadc>
   148a4:	mov	x0, #0x0                   	// #0
   148a8:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   148ac:	and	w0, w0, #0xff
   148b0:	cmp	w0, #0x0
   148b4:	b.eq	14974 <GOMP_sections2_start@@GOMP_5.0+0x100>  // b.none
   148b8:	ldr	x0, [sp, #96]
   148bc:	ldr	x0, [x0, #24]
   148c0:	ldr	w1, [sp, #60]
   148c4:	bl	147a0 <omp_get_active_level@@OMP_3.0+0xd0>
   148c8:	ldr	x0, [sp, #48]
   148cc:	cmp	x0, #0x0
   148d0:	b.eq	14900 <GOMP_sections2_start@@GOMP_5.0+0x8c>  // b.none
   148d4:	ldr	x0, [sp, #48]
   148d8:	bl	1c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   148dc:	ldr	x0, [sp, #96]
   148e0:	ldr	x0, [x0, #80]
   148e4:	ldr	x0, [x0, #40]
   148e8:	mov	w1, #0x1                   	// #1
   148ec:	strb	w1, [x0, #50]
   148f0:	ldr	x0, [sp, #96]
   148f4:	ldr	x0, [x0, #24]
   148f8:	ldr	x1, [sp, #48]
   148fc:	str	x1, [x0, #88]
   14900:	ldr	x0, [sp, #40]
   14904:	cmp	x0, #0x0
   14908:	b.eq	1496c <GOMP_sections2_start@@GOMP_5.0+0xf8>  // b.none
   1490c:	ldr	x0, [sp, #40]
   14910:	ldr	x0, [x0]
   14914:	str	x0, [sp, #80]
   14918:	ldr	x0, [sp, #80]
   1491c:	cmp	x0, #0x20
   14920:	b.ls	14948 <GOMP_sections2_start@@GOMP_5.0+0xd4>  // b.plast
   14924:	ldr	x0, [sp, #96]
   14928:	ldr	x19, [x0, #24]
   1492c:	ldr	x0, [sp, #80]
   14930:	bl	8e10 <fprintf@plt+0x1e0>
   14934:	str	x0, [x19, #32]
   14938:	ldr	x1, [x19, #32]
   1493c:	ldr	x0, [sp, #40]
   14940:	str	x1, [x0]
   14944:	b	1496c <GOMP_sections2_start@@GOMP_5.0+0xf8>
   14948:	ldr	x0, [sp, #96]
   1494c:	ldr	x0, [x0, #24]
   14950:	add	x0, x0, #0x60
   14954:	ldr	x2, [sp, #80]
   14958:	mov	w1, #0x0                   	// #0
   1495c:	bl	88d0 <memset@plt>
   14960:	mov	x1, x0
   14964:	ldr	x0, [sp, #40]
   14968:	str	x1, [x0]
   1496c:	bl	14744 <omp_get_active_level@@OMP_3.0+0x74>
   14970:	b	149bc <GOMP_sections2_start@@GOMP_5.0+0x148>
   14974:	ldr	x0, [sp, #48]
   14978:	cmp	x0, #0x0
   1497c:	b.eq	1499c <GOMP_sections2_start@@GOMP_5.0+0x128>  // b.none
   14980:	ldr	x0, [sp, #96]
   14984:	ldr	x0, [x0, #24]
   14988:	ldr	x0, [x0, #88]
   1498c:	str	x0, [sp, #88]
   14990:	ldr	x1, [sp, #88]
   14994:	ldr	x0, [sp, #48]
   14998:	bl	1cf34 <GOMP_task_reduction_remap@@GOMP_5.0+0x754>
   1499c:	ldr	x0, [sp, #40]
   149a0:	cmp	x0, #0x0
   149a4:	b.eq	149bc <GOMP_sections2_start@@GOMP_5.0+0x148>  // b.none
   149a8:	ldr	x0, [sp, #96]
   149ac:	ldr	x0, [x0, #24]
   149b0:	ldr	x1, [x0, #32]
   149b4:	ldr	x0, [sp, #40]
   149b8:	str	x1, [x0]
   149bc:	add	x1, sp, #0x40
   149c0:	add	x0, sp, #0x48
   149c4:	bl	dc34 <omp_is_initial_device@@OMP_4.0+0x4ec>
   149c8:	and	w0, w0, #0xff
   149cc:	cmp	w0, #0x0
   149d0:	b.eq	149e0 <GOMP_sections2_start@@GOMP_5.0+0x16c>  // b.none
   149d4:	ldr	x0, [sp, #72]
   149d8:	str	x0, [sp, #104]
   149dc:	b	149e4 <GOMP_sections2_start@@GOMP_5.0+0x170>
   149e0:	str	xzr, [sp, #104]
   149e4:	ldr	x0, [sp, #104]
   149e8:	ldr	x19, [sp, #16]
   149ec:	ldp	x29, x30, [sp], #112
   149f0:	ret

00000000000149f4 <GOMP_sections_next@@GOMP_1.0>:
   149f4:	stp	x29, x30, [sp, #-48]!
   149f8:	mov	x29, sp
   149fc:	add	x1, sp, #0x18
   14a00:	add	x0, sp, #0x20
   14a04:	bl	dc34 <omp_is_initial_device@@OMP_4.0+0x4ec>
   14a08:	and	w0, w0, #0xff
   14a0c:	cmp	w0, #0x0
   14a10:	b.eq	14a20 <GOMP_sections_next@@GOMP_1.0+0x2c>  // b.none
   14a14:	ldr	x0, [sp, #32]
   14a18:	str	x0, [sp, #40]
   14a1c:	b	14a24 <GOMP_sections_next@@GOMP_1.0+0x30>
   14a20:	str	xzr, [sp, #40]
   14a24:	ldr	x0, [sp, #40]
   14a28:	ldp	x29, x30, [sp], #48
   14a2c:	ret

0000000000014a30 <GOMP_parallel_sections_start@@GOMP_1.0>:
   14a30:	stp	x29, x30, [sp, #-64]!
   14a34:	mov	x29, sp
   14a38:	str	x0, [sp, #40]
   14a3c:	str	x1, [sp, #32]
   14a40:	str	w2, [sp, #28]
   14a44:	str	w3, [sp, #24]
   14a48:	ldr	w1, [sp, #24]
   14a4c:	ldr	w0, [sp, #28]
   14a50:	bl	13de4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x5c8>
   14a54:	str	w0, [sp, #28]
   14a58:	ldr	w0, [sp, #28]
   14a5c:	bl	1dafc <omp_in_final@@OMP_3.1+0x730>
   14a60:	str	x0, [sp, #56]
   14a64:	ldr	x0, [sp, #56]
   14a68:	add	x0, x0, #0x100
   14a6c:	ldr	w1, [sp, #24]
   14a70:	bl	147a0 <omp_get_active_level@@OMP_3.0+0xd0>
   14a74:	mov	x5, #0x0                   	// #0
   14a78:	ldr	x4, [sp, #56]
   14a7c:	mov	w3, #0x0                   	// #0
   14a80:	ldr	w2, [sp, #28]
   14a84:	ldr	x1, [sp, #32]
   14a88:	ldr	x0, [sp, #40]
   14a8c:	bl	1deec <omp_in_final@@OMP_3.1+0xb20>
   14a90:	nop
   14a94:	ldp	x29, x30, [sp], #64
   14a98:	ret

0000000000014a9c <GOMP_parallel_sections@@GOMP_4.0>:
   14a9c:	stp	x29, x30, [sp, #-64]!
   14aa0:	mov	x29, sp
   14aa4:	str	x0, [sp, #40]
   14aa8:	str	x1, [sp, #32]
   14aac:	str	w2, [sp, #28]
   14ab0:	str	w3, [sp, #24]
   14ab4:	str	w4, [sp, #20]
   14ab8:	ldr	w1, [sp, #24]
   14abc:	ldr	w0, [sp, #28]
   14ac0:	bl	13de4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x5c8>
   14ac4:	str	w0, [sp, #28]
   14ac8:	ldr	w0, [sp, #28]
   14acc:	bl	1dafc <omp_in_final@@OMP_3.1+0x730>
   14ad0:	str	x0, [sp, #56]
   14ad4:	ldr	x0, [sp, #56]
   14ad8:	add	x0, x0, #0x100
   14adc:	ldr	w1, [sp, #24]
   14ae0:	bl	147a0 <omp_get_active_level@@OMP_3.0+0xd0>
   14ae4:	mov	x5, #0x0                   	// #0
   14ae8:	ldr	x4, [sp, #56]
   14aec:	ldr	w3, [sp, #20]
   14af0:	ldr	w2, [sp, #28]
   14af4:	ldr	x1, [sp, #32]
   14af8:	ldr	x0, [sp, #40]
   14afc:	bl	1deec <omp_in_final@@OMP_3.1+0xb20>
   14b00:	ldr	x1, [sp, #40]
   14b04:	ldr	x0, [sp, #32]
   14b08:	blr	x1
   14b0c:	bl	14088 <GOMP_parallel_end@@GOMP_1.0>
   14b10:	nop
   14b14:	ldp	x29, x30, [sp], #64
   14b18:	ret

0000000000014b1c <GOMP_sections_end@@GOMP_1.0>:
   14b1c:	stp	x29, x30, [sp, #-16]!
   14b20:	mov	x29, sp
   14b24:	bl	20268 <omp_in_final@@OMP_3.1+0x2e9c>
   14b28:	nop
   14b2c:	ldp	x29, x30, [sp], #16
   14b30:	ret

0000000000014b34 <GOMP_sections_end_cancel@@GOMP_4.0>:
   14b34:	stp	x29, x30, [sp, #-16]!
   14b38:	mov	x29, sp
   14b3c:	bl	20338 <omp_in_final@@OMP_3.1+0x2f6c>
   14b40:	and	w0, w0, #0xff
   14b44:	ldp	x29, x30, [sp], #16
   14b48:	ret

0000000000014b4c <GOMP_sections_end_nowait@@GOMP_1.0>:
   14b4c:	stp	x29, x30, [sp, #-16]!
   14b50:	mov	x29, sp
   14b54:	bl	203e0 <omp_in_final@@OMP_3.1+0x3014>
   14b58:	nop
   14b5c:	ldp	x29, x30, [sp], #16
   14b60:	ret
   14b64:	stp	x29, x30, [sp, #-48]!
   14b68:	mov	x29, sp
   14b6c:	str	x0, [sp, #24]
   14b70:	str	x1, [sp, #16]
   14b74:	ldr	x2, [sp, #16]
   14b78:	ldr	x1, [sp, #24]
   14b7c:	ldxr	x0, [x1]
   14b80:	stlxr	w3, x2, [x1]
   14b84:	cbnz	w3, 14b7c <GOMP_sections_end_nowait@@GOMP_1.0+0x30>
   14b88:	str	x0, [sp, #40]
   14b8c:	ldr	x0, [sp, #40]
   14b90:	cmp	x0, #0x1
   14b94:	b.eq	14ba0 <GOMP_sections_end_nowait@@GOMP_1.0+0x54>  // b.none
   14b98:	ldr	x0, [sp, #24]
   14b9c:	bl	22790 <omp_get_num_procs@@OMP_1.0+0x1134>
   14ba0:	nop
   14ba4:	ldp	x29, x30, [sp], #48
   14ba8:	ret
   14bac:	mrs	x1, tpidr_el0
   14bb0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   14bb4:	ldr	x0, [x0, #4016]
   14bb8:	add	x0, x1, x0
   14bbc:	ret
   14bc0:	stp	x29, x30, [sp, #-32]!
   14bc4:	mov	x29, sp
   14bc8:	bl	14bac <GOMP_sections_end_nowait@@GOMP_1.0+0x60>
   14bcc:	str	x0, [sp, #24]
   14bd0:	ldr	x0, [sp, #24]
   14bd4:	ldr	x0, [x0, #32]
   14bd8:	cmp	x0, #0x0
   14bdc:	cset	w0, ne  // ne = any
   14be0:	and	w0, w0, #0xff
   14be4:	and	x0, x0, #0xff
   14be8:	cmp	x0, #0x0
   14bec:	b.eq	14c10 <GOMP_sections_end_nowait@@GOMP_1.0+0xc4>  // b.none
   14bf0:	ldr	x0, [sp, #24]
   14bf4:	ldr	x0, [x0, #32]
   14bf8:	add	x2, x0, #0x50
   14bfc:	ldr	x0, [sp, #24]
   14c00:	ldr	x0, [x0, #24]
   14c04:	mov	x1, x0
   14c08:	mov	x0, x2
   14c0c:	bl	14b64 <GOMP_sections_end_nowait@@GOMP_1.0+0x18>
   14c10:	nop
   14c14:	ldp	x29, x30, [sp], #32
   14c18:	ret

0000000000014c1c <GOMP_single_start@@GOMP_1.0>:
   14c1c:	stp	x29, x30, [sp, #-48]!
   14c20:	mov	x29, sp
   14c24:	bl	14bac <GOMP_sections_end_nowait@@GOMP_1.0+0x60>
   14c28:	str	x0, [sp, #40]
   14c2c:	ldr	x0, [sp, #40]
   14c30:	ldr	x0, [x0, #16]
   14c34:	str	x0, [sp, #32]
   14c38:	ldr	x0, [sp, #32]
   14c3c:	cmp	x0, #0x0
   14c40:	cset	w0, eq  // eq = none
   14c44:	and	w0, w0, #0xff
   14c48:	and	x0, x0, #0xff
   14c4c:	cmp	x0, #0x0
   14c50:	b.eq	14c5c <GOMP_single_start@@GOMP_1.0+0x40>  // b.none
   14c54:	mov	w0, #0x1                   	// #1
   14c58:	b	14ca4 <GOMP_single_start@@GOMP_1.0+0x88>
   14c5c:	ldr	x0, [sp, #40]
   14c60:	ldr	x0, [x0, #64]
   14c64:	add	x2, x0, #0x1
   14c68:	ldr	x1, [sp, #40]
   14c6c:	str	x2, [x1, #64]
   14c70:	str	x0, [sp, #24]
   14c74:	ldr	x0, [sp, #32]
   14c78:	add	x0, x0, #0x70
   14c7c:	ldr	x1, [sp, #24]
   14c80:	add	x2, x1, #0x1
   14c84:	ldr	x1, [sp, #24]
   14c88:	ldxr	x3, [x0]
   14c8c:	cmp	x3, x1
   14c90:	b.ne	14c9c <GOMP_single_start@@GOMP_1.0+0x80>  // b.any
   14c94:	stlxr	w4, x2, [x0]
   14c98:	cbnz	w4, 14c88 <GOMP_single_start@@GOMP_1.0+0x6c>
   14c9c:	dmb	ish
   14ca0:	cset	w0, eq  // eq = none
   14ca4:	ldp	x29, x30, [sp], #48
   14ca8:	ret

0000000000014cac <GOMP_single_copy_start@@GOMP_1.0>:
   14cac:	stp	x29, x30, [sp, #-48]!
   14cb0:	mov	x29, sp
   14cb4:	bl	14bac <GOMP_sections_end_nowait@@GOMP_1.0+0x60>
   14cb8:	str	x0, [sp, #32]
   14cbc:	mov	x0, #0x0                   	// #0
   14cc0:	bl	20188 <omp_in_final@@OMP_3.1+0x2dbc>
   14cc4:	strb	w0, [sp, #31]
   14cc8:	ldrb	w0, [sp, #31]
   14ccc:	cmp	w0, #0x0
   14cd0:	b.eq	14ce0 <GOMP_single_copy_start@@GOMP_1.0+0x34>  // b.none
   14cd4:	bl	14bc0 <GOMP_sections_end_nowait@@GOMP_1.0+0x74>
   14cd8:	str	xzr, [sp, #40]
   14cdc:	b	14d04 <GOMP_single_copy_start@@GOMP_1.0+0x58>
   14ce0:	ldr	x0, [sp, #32]
   14ce4:	ldr	x0, [x0, #16]
   14ce8:	add	x0, x0, #0x80
   14cec:	bl	221e8 <omp_get_num_procs@@OMP_1.0+0xb8c>
   14cf0:	ldr	x0, [sp, #32]
   14cf4:	ldr	x0, [x0, #24]
   14cf8:	ldr	x0, [x0, #72]
   14cfc:	str	x0, [sp, #40]
   14d00:	bl	203e0 <omp_in_final@@OMP_3.1+0x3014>
   14d04:	ldr	x0, [sp, #40]
   14d08:	ldp	x29, x30, [sp], #48
   14d0c:	ret

0000000000014d10 <GOMP_single_copy_end@@GOMP_1.0>:
   14d10:	stp	x29, x30, [sp, #-48]!
   14d14:	mov	x29, sp
   14d18:	str	x0, [sp, #24]
   14d1c:	bl	14bac <GOMP_sections_end_nowait@@GOMP_1.0+0x60>
   14d20:	str	x0, [sp, #40]
   14d24:	ldr	x0, [sp, #40]
   14d28:	ldr	x0, [x0, #16]
   14d2c:	str	x0, [sp, #32]
   14d30:	ldr	x0, [sp, #32]
   14d34:	cmp	x0, #0x0
   14d38:	b.eq	14d58 <GOMP_single_copy_end@@GOMP_1.0+0x48>  // b.none
   14d3c:	ldr	x0, [sp, #40]
   14d40:	ldr	x0, [x0, #24]
   14d44:	ldr	x1, [sp, #24]
   14d48:	str	x1, [x0, #72]
   14d4c:	ldr	x0, [sp, #32]
   14d50:	add	x0, x0, #0x80
   14d54:	bl	221e8 <omp_get_num_procs@@OMP_1.0+0xb8c>
   14d58:	bl	203e0 <omp_in_final@@OMP_3.1+0x3014>
   14d5c:	nop
   14d60:	ldp	x29, x30, [sp], #48
   14d64:	ret
   14d68:	sub	sp, sp, #0x10
   14d6c:	str	x0, [sp, #8]
   14d70:	ldr	x0, [sp, #8]
   14d74:	ldr	x0, [x0]
   14d78:	cmp	x0, #0x0
   14d7c:	cset	w0, ne  // ne = any
   14d80:	and	w0, w0, #0xff
   14d84:	and	x0, x0, #0xff
   14d88:	cmp	x0, #0x0
   14d8c:	cset	w0, ne  // ne = any
   14d90:	and	w0, w0, #0xff
   14d94:	add	sp, sp, #0x10
   14d98:	ret
   14d9c:	sub	sp, sp, #0x10
   14da0:	str	x0, [sp, #8]
   14da4:	ldr	x0, [sp, #8]
   14da8:	str	xzr, [x0]
   14dac:	ldr	x0, [sp, #8]
   14db0:	str	xzr, [x0, #16]
   14db4:	ldr	x0, [sp, #8]
   14db8:	str	xzr, [x0, #24]
   14dbc:	nop
   14dc0:	add	sp, sp, #0x10
   14dc4:	ret
   14dc8:	stp	x29, x30, [sp, #-32]!
   14dcc:	mov	x29, sp
   14dd0:	str	x0, [sp, #24]
   14dd4:	str	w1, [sp, #20]
   14dd8:	ldr	x0, [sp, #24]
   14ddc:	bl	14d68 <GOMP_single_copy_end@@GOMP_1.0+0x58>
   14de0:	and	w0, w0, #0xff
   14de4:	cmp	w0, #0x0
   14de8:	b.eq	14e28 <GOMP_single_copy_end@@GOMP_1.0+0x118>  // b.none
   14dec:	ldr	w0, [sp, #20]
   14df0:	cmp	w0, #0x2
   14df4:	b.ne	14e10 <GOMP_single_copy_end@@GOMP_1.0+0x100>  // b.any
   14df8:	ldr	x0, [sp, #24]
   14dfc:	ldar	x0, [x0]
   14e00:	cmp	x0, #0x0
   14e04:	cset	w0, eq  // eq = none
   14e08:	and	w0, w0, #0xff
   14e0c:	b	14e64 <GOMP_single_copy_end@@GOMP_1.0+0x154>
   14e10:	ldr	x0, [sp, #24]
   14e14:	ldr	x0, [x0]
   14e18:	cmp	x0, #0x0
   14e1c:	cset	w0, eq  // eq = none
   14e20:	and	w0, w0, #0xff
   14e24:	b	14e64 <GOMP_single_copy_end@@GOMP_1.0+0x154>
   14e28:	ldr	w0, [sp, #20]
   14e2c:	cmp	w0, #0x2
   14e30:	b.ne	14e50 <GOMP_single_copy_end@@GOMP_1.0+0x140>  // b.any
   14e34:	ldr	x0, [sp, #24]
   14e38:	add	x0, x0, #0x10
   14e3c:	ldar	x0, [x0]
   14e40:	cmp	x0, #0x0
   14e44:	cset	w0, eq  // eq = none
   14e48:	and	w0, w0, #0xff
   14e4c:	b	14e64 <GOMP_single_copy_end@@GOMP_1.0+0x154>
   14e50:	ldr	x0, [sp, #24]
   14e54:	ldr	x0, [x0, #16]
   14e58:	cmp	x0, #0x0
   14e5c:	cset	w0, eq  // eq = none
   14e60:	and	w0, w0, #0xff
   14e64:	ldp	x29, x30, [sp], #32
   14e68:	ret
   14e6c:	stp	x29, x30, [sp, #-64]!
   14e70:	mov	x29, sp
   14e74:	str	x0, [sp, #24]
   14e78:	str	w1, [sp, #20]
   14e7c:	ldr	x0, [sp, #24]
   14e80:	ldr	x0, [x0]
   14e84:	cmp	x0, #0x0
   14e88:	b.ne	14e94 <GOMP_single_copy_end@@GOMP_1.0+0x184>  // b.any
   14e8c:	mov	x0, #0x0                   	// #0
   14e90:	b	14eac <GOMP_single_copy_end@@GOMP_1.0+0x19c>
   14e94:	ldr	w0, [sp, #20]
   14e98:	str	w0, [sp, #40]
   14e9c:	ldr	x0, [sp, #24]
   14ea0:	add	x1, sp, #0x28
   14ea4:	bl	335ac <acc_set_cuda_stream@@OACC_2.0+0x9a4>
   14ea8:	nop
   14eac:	ldp	x29, x30, [sp], #64
   14eb0:	ret
   14eb4:	stp	x29, x30, [sp, #-64]!
   14eb8:	mov	x29, sp
   14ebc:	str	w0, [sp, #44]
   14ec0:	str	x1, [sp, #32]
   14ec4:	str	x2, [sp, #24]
   14ec8:	str	w3, [sp, #40]
   14ecc:	str	w4, [sp, #20]
   14ed0:	strb	w5, [sp, #19]
   14ed4:	strb	w6, [sp, #18]
   14ed8:	ldr	x1, [sp, #24]
   14edc:	ldr	w0, [sp, #44]
   14ee0:	bl	15868 <GOMP_single_copy_end@@GOMP_1.0+0xb58>
   14ee4:	str	x0, [sp, #56]
   14ee8:	ldr	x0, [sp, #32]
   14eec:	ldr	x0, [x0, #8]
   14ef0:	cmp	x0, #0x0
   14ef4:	b.eq	14fc0 <GOMP_single_copy_end@@GOMP_1.0+0x2b0>  // b.none
   14ef8:	ldrb	w0, [sp, #19]
   14efc:	cmp	w0, #0x0
   14f00:	b.eq	14f60 <GOMP_single_copy_end@@GOMP_1.0+0x250>  // b.none
   14f04:	ldr	w0, [sp, #20]
   14f08:	cmp	w0, #0x0
   14f0c:	b.ne	14f60 <GOMP_single_copy_end@@GOMP_1.0+0x250>  // b.any
   14f10:	ldr	x0, [sp, #32]
   14f14:	ldr	x0, [x0, #16]
   14f18:	cmp	x0, #0x0
   14f1c:	b.eq	14f60 <GOMP_single_copy_end@@GOMP_1.0+0x250>  // b.none
   14f20:	ldrb	w0, [sp, #18]
   14f24:	eor	w0, w0, #0x1
   14f28:	and	w0, w0, #0xff
   14f2c:	cmp	w0, #0x0
   14f30:	b.eq	14f60 <GOMP_single_copy_end@@GOMP_1.0+0x250>  // b.none
   14f34:	ldr	x0, [sp, #32]
   14f38:	ldr	x0, [x0, #16]
   14f3c:	str	x0, [sp, #48]
   14f40:	ldr	x0, [sp, #48]
   14f44:	ldr	x1, [x0]
   14f48:	ldr	x0, [sp, #56]
   14f4c:	str	x1, [x0]
   14f50:	ldr	x0, [sp, #56]
   14f54:	ldr	x1, [sp, #48]
   14f58:	str	x1, [x0, #8]
   14f5c:	b	14f9c <GOMP_single_copy_end@@GOMP_1.0+0x28c>
   14f60:	ldr	x0, [sp, #32]
   14f64:	ldr	x1, [x0, #8]
   14f68:	ldr	x0, [sp, #56]
   14f6c:	str	x1, [x0]
   14f70:	ldr	x0, [sp, #32]
   14f74:	ldr	x0, [x0, #8]
   14f78:	ldr	x1, [x0, #8]
   14f7c:	ldr	x0, [sp, #56]
   14f80:	str	x1, [x0, #8]
   14f84:	ldr	w0, [sp, #20]
   14f88:	cmp	w0, #0x0
   14f8c:	b.ne	14f9c <GOMP_single_copy_end@@GOMP_1.0+0x28c>  // b.any
   14f90:	ldr	x0, [sp, #32]
   14f94:	ldr	x1, [sp, #56]
   14f98:	str	x1, [x0, #8]
   14f9c:	ldr	x0, [sp, #56]
   14fa0:	ldr	x0, [x0]
   14fa4:	ldr	x1, [sp, #56]
   14fa8:	str	x1, [x0, #8]
   14fac:	ldr	x0, [sp, #56]
   14fb0:	ldr	x0, [x0, #8]
   14fb4:	ldr	x1, [sp, #56]
   14fb8:	str	x1, [x0]
   14fbc:	b	14fe4 <GOMP_single_copy_end@@GOMP_1.0+0x2d4>
   14fc0:	ldr	x0, [sp, #56]
   14fc4:	ldr	x1, [sp, #56]
   14fc8:	str	x1, [x0]
   14fcc:	ldr	x0, [sp, #56]
   14fd0:	ldr	x1, [sp, #56]
   14fd4:	str	x1, [x0, #8]
   14fd8:	ldr	x0, [sp, #32]
   14fdc:	ldr	x1, [sp, #56]
   14fe0:	str	x1, [x0, #8]
   14fe4:	ldrb	w0, [sp, #19]
   14fe8:	cmp	w0, #0x0
   14fec:	b.eq	15018 <GOMP_single_copy_end@@GOMP_1.0+0x308>  // b.none
   14ff0:	ldr	x0, [sp, #32]
   14ff4:	ldr	x0, [x0, #16]
   14ff8:	cmp	x0, #0x0
   14ffc:	b.ne	15018 <GOMP_single_copy_end@@GOMP_1.0+0x308>  // b.any
   15000:	ldrb	w0, [sp, #18]
   15004:	cmp	w0, #0x0
   15008:	b.eq	15018 <GOMP_single_copy_end@@GOMP_1.0+0x308>  // b.none
   1500c:	ldr	x0, [sp, #32]
   15010:	ldr	x1, [sp, #56]
   15014:	str	x1, [x0, #16]
   15018:	nop
   1501c:	ldp	x29, x30, [sp], #64
   15020:	ret
   15024:	stp	x29, x30, [sp, #-80]!
   15028:	mov	x29, sp
   1502c:	str	w0, [sp, #44]
   15030:	str	x1, [sp, #32]
   15034:	str	x2, [sp, #24]
   15038:	str	w3, [sp, #40]
   1503c:	str	w4, [sp, #20]
   15040:	strb	w5, [sp, #19]
   15044:	strb	w6, [sp, #18]
   15048:	ldr	x0, [sp, #32]
   1504c:	ldr	x0, [x0]
   15050:	cmp	x0, #0x0
   15054:	cset	w0, eq  // eq = none
   15058:	and	w0, w0, #0xff
   1505c:	and	x0, x0, #0xff
   15060:	cmp	x0, #0x0
   15064:	b.eq	150d0 <GOMP_single_copy_end@@GOMP_1.0+0x3c0>  // b.none
   15068:	ldr	x0, [sp, #32]
   1506c:	ldr	x0, [x0, #16]
   15070:	cmp	x0, #0x0
   15074:	b.eq	150d0 <GOMP_single_copy_end@@GOMP_1.0+0x3c0>  // b.none
   15078:	mov	x0, #0x28                  	// #40
   1507c:	bl	8dd0 <fprintf@plt+0x1a0>
   15080:	str	x0, [sp, #64]
   15084:	ldr	x0, [sp, #64]
   15088:	str	xzr, [x0, #24]
   1508c:	ldr	x0, [sp, #64]
   15090:	str	xzr, [x0, #32]
   15094:	ldr	x0, [sp, #64]
   15098:	str	wzr, [x0]
   1509c:	ldr	x0, [sp, #32]
   150a0:	ldr	x1, [x0, #16]
   150a4:	ldr	x0, [sp, #64]
   150a8:	str	x1, [x0, #8]
   150ac:	ldr	x0, [sp, #32]
   150b0:	ldr	x1, [x0, #24]
   150b4:	ldr	x0, [sp, #64]
   150b8:	str	x1, [x0, #16]
   150bc:	ldr	x0, [sp, #32]
   150c0:	ldr	x1, [sp, #64]
   150c4:	bl	333ac <acc_set_cuda_stream@@OACC_2.0+0x7a4>
   150c8:	ldr	x0, [sp, #32]
   150cc:	str	xzr, [x0, #16]
   150d0:	ldr	w1, [sp, #40]
   150d4:	ldr	x0, [sp, #32]
   150d8:	bl	14e6c <GOMP_single_copy_end@@GOMP_1.0+0x15c>
   150dc:	str	x0, [sp, #72]
   150e0:	ldr	x0, [sp, #72]
   150e4:	cmp	x0, #0x0
   150e8:	b.ne	15138 <GOMP_single_copy_end@@GOMP_1.0+0x428>  // b.any
   150ec:	mov	x0, #0x28                  	// #40
   150f0:	bl	8dd0 <fprintf@plt+0x1a0>
   150f4:	str	x0, [sp, #56]
   150f8:	ldr	x0, [sp, #56]
   150fc:	str	xzr, [x0, #24]
   15100:	ldr	x0, [sp, #56]
   15104:	str	xzr, [x0, #32]
   15108:	ldr	x0, [sp, #56]
   1510c:	ldr	w1, [sp, #40]
   15110:	str	w1, [x0]
   15114:	ldr	x0, [sp, #56]
   15118:	str	xzr, [x0, #8]
   1511c:	ldr	x0, [sp, #56]
   15120:	str	xzr, [x0, #16]
   15124:	ldr	x0, [sp, #32]
   15128:	ldr	x1, [sp, #56]
   1512c:	bl	333ac <acc_set_cuda_stream@@OACC_2.0+0x7a4>
   15130:	ldr	x0, [sp, #56]
   15134:	str	x0, [sp, #72]
   15138:	ldrb	w6, [sp, #18]
   1513c:	ldrb	w5, [sp, #19]
   15140:	ldr	w4, [sp, #20]
   15144:	ldr	w3, [sp, #40]
   15148:	ldr	x2, [sp, #24]
   1514c:	ldr	x1, [sp, #72]
   15150:	ldr	w0, [sp, #44]
   15154:	bl	14eb4 <GOMP_single_copy_end@@GOMP_1.0+0x1a4>
   15158:	nop
   1515c:	ldp	x29, x30, [sp], #80
   15160:	ret
   15164:	stp	x29, x30, [sp, #-48]!
   15168:	mov	x29, sp
   1516c:	str	w0, [sp, #44]
   15170:	str	x1, [sp, #32]
   15174:	str	x2, [sp, #24]
   15178:	str	w3, [sp, #40]
   1517c:	str	w4, [sp, #20]
   15180:	strb	w5, [sp, #19]
   15184:	strb	w6, [sp, #18]
   15188:	ldr	x0, [sp, #32]
   1518c:	bl	14d68 <GOMP_single_copy_end@@GOMP_1.0+0x58>
   15190:	and	w0, w0, #0xff
   15194:	cmp	w0, #0x0
   15198:	b.ne	151b8 <GOMP_single_copy_end@@GOMP_1.0+0x4a8>  // b.any
   1519c:	ldr	w0, [sp, #40]
   151a0:	cmp	w0, #0x0
   151a4:	cset	w0, gt
   151a8:	and	w0, w0, #0xff
   151ac:	and	x0, x0, #0xff
   151b0:	cmp	x0, #0x0
   151b4:	b.eq	151dc <GOMP_single_copy_end@@GOMP_1.0+0x4cc>  // b.none
   151b8:	ldrb	w6, [sp, #18]
   151bc:	ldrb	w5, [sp, #19]
   151c0:	ldr	w4, [sp, #20]
   151c4:	ldr	w3, [sp, #40]
   151c8:	ldr	x2, [sp, #24]
   151cc:	ldr	x1, [sp, #32]
   151d0:	ldr	w0, [sp, #44]
   151d4:	bl	15024 <GOMP_single_copy_end@@GOMP_1.0+0x314>
   151d8:	b	15208 <GOMP_single_copy_end@@GOMP_1.0+0x4f8>
   151dc:	ldr	x0, [sp, #32]
   151e0:	add	x0, x0, #0x8
   151e4:	ldrb	w6, [sp, #18]
   151e8:	ldrb	w5, [sp, #19]
   151ec:	ldr	w4, [sp, #20]
   151f0:	ldr	w3, [sp, #40]
   151f4:	ldr	x2, [sp, #24]
   151f8:	mov	x1, x0
   151fc:	ldr	w0, [sp, #44]
   15200:	bl	14eb4 <GOMP_single_copy_end@@GOMP_1.0+0x1a4>
   15204:	nop
   15208:	nop
   1520c:	ldp	x29, x30, [sp], #48
   15210:	ret
   15214:	stp	x29, x30, [sp, #-64]!
   15218:	mov	x29, sp
   1521c:	str	w0, [sp, #44]
   15220:	str	x1, [sp, #32]
   15224:	str	w2, [sp, #40]
   15228:	str	x3, [sp, #24]
   1522c:	str	x4, [sp, #16]
   15230:	ldr	x0, [sp, #32]
   15234:	bl	14d68 <GOMP_single_copy_end@@GOMP_1.0+0x58>
   15238:	and	w0, w0, #0xff
   1523c:	cmp	w0, #0x0
   15240:	b.eq	15290 <GOMP_single_copy_end@@GOMP_1.0+0x580>  // b.none
   15244:	ldr	x4, [sp, #16]
   15248:	ldr	x3, [sp, #24]
   1524c:	ldr	w2, [sp, #40]
   15250:	ldr	x1, [sp, #32]
   15254:	ldr	w0, [sp, #44]
   15258:	bl	32f0c <acc_set_cuda_stream@@OACC_2.0+0x304>
   1525c:	str	x0, [sp, #56]
   15260:	ldr	x0, [sp, #56]
   15264:	cmp	x0, #0x0
   15268:	b.ne	15288 <GOMP_single_copy_end@@GOMP_1.0+0x578>  // b.any
   1526c:	ldr	x0, [sp, #32]
   15270:	ldr	x0, [x0]
   15274:	ldr	x0, [x0, #8]
   15278:	mov	x1, x0
   1527c:	ldr	w0, [sp, #44]
   15280:	bl	1583c <GOMP_single_copy_end@@GOMP_1.0+0xb2c>
   15284:	b	152b0 <GOMP_single_copy_end@@GOMP_1.0+0x5a0>
   15288:	ldr	x0, [sp, #56]
   1528c:	b	152b0 <GOMP_single_copy_end@@GOMP_1.0+0x5a0>
   15290:	ldr	x0, [sp, #16]
   15294:	mov	w1, #0x1                   	// #1
   15298:	strb	w1, [x0]
   1529c:	ldr	x0, [sp, #32]
   152a0:	ldr	x0, [x0, #16]
   152a4:	mov	x1, x0
   152a8:	ldr	w0, [sp, #44]
   152ac:	bl	1583c <GOMP_single_copy_end@@GOMP_1.0+0xb2c>
   152b0:	ldp	x29, x30, [sp], #64
   152b4:	ret
   152b8:	sub	sp, sp, #0x30
   152bc:	str	x0, [sp, #24]
   152c0:	str	x1, [sp, #16]
   152c4:	str	w2, [sp, #12]
   152c8:	strb	wzr, [sp, #47]
   152cc:	ldr	x0, [sp, #16]
   152d0:	ldr	x0, [x0, #8]
   152d4:	ldr	x1, [sp, #16]
   152d8:	ldr	x1, [x1]
   152dc:	str	x1, [x0]
   152e0:	ldr	x0, [sp, #16]
   152e4:	ldr	x0, [x0]
   152e8:	ldr	x1, [sp, #16]
   152ec:	ldr	x1, [x1, #8]
   152f0:	str	x1, [x0, #8]
   152f4:	ldr	x0, [sp, #24]
   152f8:	ldr	x0, [x0, #8]
   152fc:	ldr	x1, [sp, #16]
   15300:	cmp	x1, x0
   15304:	b.ne	15360 <GOMP_single_copy_end@@GOMP_1.0+0x650>  // b.any
   15308:	ldr	x0, [sp, #16]
   1530c:	ldr	x0, [x0]
   15310:	ldr	x1, [sp, #16]
   15314:	cmp	x1, x0
   15318:	b.eq	15330 <GOMP_single_copy_end@@GOMP_1.0+0x620>  // b.none
   1531c:	ldr	x0, [sp, #16]
   15320:	ldr	x1, [x0]
   15324:	ldr	x0, [sp, #24]
   15328:	str	x1, [x0, #8]
   1532c:	b	15364 <GOMP_single_copy_end@@GOMP_1.0+0x654>
   15330:	ldr	w0, [sp, #12]
   15334:	cmp	w0, #0x3
   15338:	b.ne	1534c <GOMP_single_copy_end@@GOMP_1.0+0x63c>  // b.any
   1533c:	ldr	x0, [sp, #24]
   15340:	add	x0, x0, #0x8
   15344:	stlr	xzr, [x0]
   15348:	b	15354 <GOMP_single_copy_end@@GOMP_1.0+0x644>
   1534c:	ldr	x0, [sp, #24]
   15350:	str	xzr, [x0, #8]
   15354:	mov	w0, #0x1                   	// #1
   15358:	strb	w0, [sp, #47]
   1535c:	b	15364 <GOMP_single_copy_end@@GOMP_1.0+0x654>
   15360:	nop
   15364:	ldrb	w0, [sp, #47]
   15368:	add	sp, sp, #0x30
   1536c:	ret
   15370:	stp	x29, x30, [sp, #-64]!
   15374:	mov	x29, sp
   15378:	str	x19, [sp, #16]
   1537c:	str	w0, [sp, #60]
   15380:	str	x1, [sp, #48]
   15384:	str	x2, [sp, #40]
   15388:	str	w3, [sp, #56]
   1538c:	ldr	x0, [sp, #48]
   15390:	bl	14d68 <GOMP_single_copy_end@@GOMP_1.0+0x58>
   15394:	and	w0, w0, #0xff
   15398:	cmp	w0, #0x0
   1539c:	b.eq	153f0 <GOMP_single_copy_end@@GOMP_1.0+0x6e0>  // b.none
   153a0:	ldr	x1, [sp, #40]
   153a4:	ldr	w0, [sp, #60]
   153a8:	bl	15868 <GOMP_single_copy_end@@GOMP_1.0+0xb58>
   153ac:	mov	x2, x0
   153b0:	ldr	x1, [sp, #48]
   153b4:	ldr	w0, [sp, #60]
   153b8:	bl	32df8 <acc_set_cuda_stream@@OACC_2.0+0x1f0>
   153bc:	ldr	x0, [sp, #48]
   153c0:	ldr	x0, [x0]
   153c4:	cmp	x0, #0x0
   153c8:	b.ne	153e8 <GOMP_single_copy_end@@GOMP_1.0+0x6d8>  // b.any
   153cc:	ldr	w0, [sp, #56]
   153d0:	cmp	w0, #0x3
   153d4:	b.ne	153e0 <GOMP_single_copy_end@@GOMP_1.0+0x6d0>  // b.any
   153d8:	ldr	x0, [sp, #48]
   153dc:	stlr	xzr, [x0]
   153e0:	mov	w0, #0x1                   	// #1
   153e4:	b	15418 <GOMP_single_copy_end@@GOMP_1.0+0x708>
   153e8:	mov	w0, #0x0                   	// #0
   153ec:	b	15418 <GOMP_single_copy_end@@GOMP_1.0+0x708>
   153f0:	ldr	x0, [sp, #48]
   153f4:	add	x19, x0, #0x8
   153f8:	ldr	x1, [sp, #40]
   153fc:	ldr	w0, [sp, #60]
   15400:	bl	15868 <GOMP_single_copy_end@@GOMP_1.0+0xb58>
   15404:	ldr	w2, [sp, #56]
   15408:	mov	x1, x0
   1540c:	mov	x0, x19
   15410:	bl	152b8 <GOMP_single_copy_end@@GOMP_1.0+0x5a8>
   15414:	and	w0, w0, #0xff
   15418:	ldr	x19, [sp, #16]
   1541c:	ldp	x29, x30, [sp], #64
   15420:	ret
   15424:	sub	sp, sp, #0x10
   15428:	str	x0, [sp, #8]
   1542c:	str	w1, [sp, #4]
   15430:	ldr	x0, [sp, #8]
   15434:	ldr	w1, [sp, #4]
   15438:	str	w1, [x0]
   1543c:	nop
   15440:	add	sp, sp, #0x10
   15444:	ret
   15448:	sub	sp, sp, #0x10
   1544c:	str	x0, [sp, #8]
   15450:	nop
   15454:	add	sp, sp, #0x10
   15458:	ret
   1545c:	stp	x29, x30, [sp, #-48]!
   15460:	mov	x29, sp
   15464:	str	x0, [sp, #24]
   15468:	ldr	x0, [sp, #24]
   1546c:	ldr	w0, [x0]
   15470:	str	w0, [sp, #44]
   15474:	b	154c0 <GOMP_single_copy_end@@GOMP_1.0+0x7b0>
   15478:	ldr	w0, [sp, #44]
   1547c:	sub	w0, w0, #0x1
   15480:	mov	w4, w0
   15484:	ldr	x1, [sp, #24]
   15488:	add	x0, sp, #0x2c
   1548c:	ldr	w3, [x0]
   15490:	ldaxr	w2, [x1]
   15494:	cmp	w2, w3
   15498:	b.ne	154a4 <GOMP_single_copy_end@@GOMP_1.0+0x794>  // b.any
   1549c:	stxr	w5, w4, [x1]
   154a0:	cmp	w5, #0x0
   154a4:	cset	w1, eq  // eq = none
   154a8:	cmp	w1, #0x0
   154ac:	b.ne	154b4 <GOMP_single_copy_end@@GOMP_1.0+0x7a4>  // b.any
   154b0:	str	w2, [x0]
   154b4:	mov	w0, w1
   154b8:	cmp	w0, #0x0
   154bc:	b.ne	154e4 <GOMP_single_copy_end@@GOMP_1.0+0x7d4>  // b.any
   154c0:	ldr	w0, [sp, #44]
   154c4:	and	w0, w0, #0x7fffffff
   154c8:	cmp	w0, #0x0
   154cc:	b.ne	15478 <GOMP_single_copy_end@@GOMP_1.0+0x768>  // b.any
   154d0:	ldr	w0, [sp, #44]
   154d4:	mov	w1, w0
   154d8:	ldr	x0, [sp, #24]
   154dc:	bl	21920 <omp_get_num_procs@@OMP_1.0+0x2c4>
   154e0:	b	154e8 <GOMP_single_copy_end@@GOMP_1.0+0x7d8>
   154e4:	nop
   154e8:	ldp	x29, x30, [sp], #48
   154ec:	ret
   154f0:	stp	x29, x30, [sp, #-48]!
   154f4:	mov	x29, sp
   154f8:	str	x0, [sp, #24]
   154fc:	ldr	x0, [sp, #24]
   15500:	ldr	w0, [x0]
   15504:	str	w0, [sp, #44]
   15508:	b	15510 <GOMP_single_copy_end@@GOMP_1.0+0x800>
   1550c:	nop
   15510:	ldr	w0, [sp, #44]
   15514:	add	w0, w0, #0x1
   15518:	and	w4, w0, #0x7fffffff
   1551c:	ldr	x1, [sp, #24]
   15520:	add	x0, sp, #0x2c
   15524:	ldr	w3, [x0]
   15528:	ldxr	w2, [x1]
   1552c:	cmp	w2, w3
   15530:	b.ne	1553c <GOMP_single_copy_end@@GOMP_1.0+0x82c>  // b.any
   15534:	stlxr	w5, w4, [x1]
   15538:	cmp	w5, #0x0
   1553c:	cset	w1, eq  // eq = none
   15540:	cmp	w1, #0x0
   15544:	b.ne	1554c <GOMP_single_copy_end@@GOMP_1.0+0x83c>  // b.any
   15548:	str	w2, [x0]
   1554c:	mov	w0, w1
   15550:	eor	w0, w0, #0x1
   15554:	and	w0, w0, #0xff
   15558:	cmp	w0, #0x0
   1555c:	b.ne	1550c <GOMP_single_copy_end@@GOMP_1.0+0x7fc>  // b.any
   15560:	ldr	w0, [sp, #44]
   15564:	and	w0, w0, #0x80000000
   15568:	sxtw	x0, w0
   1556c:	cmp	x0, #0x0
   15570:	b.eq	1557c <GOMP_single_copy_end@@GOMP_1.0+0x86c>  // b.none
   15574:	ldr	x0, [sp, #24]
   15578:	bl	21b04 <omp_get_num_procs@@OMP_1.0+0x4a8>
   1557c:	nop
   15580:	ldp	x29, x30, [sp], #48
   15584:	ret
   15588:	stp	x29, x30, [sp, #-48]!
   1558c:	mov	x29, sp
   15590:	str	x0, [sp, #24]
   15594:	str	wzr, [sp, #44]
   15598:	ldr	x1, [sp, #24]
   1559c:	add	x0, sp, #0x2c
   155a0:	ldr	w3, [x0]
   155a4:	mov	w4, #0x1                   	// #1
   155a8:	ldaxr	w2, [x1]
   155ac:	cmp	w2, w3
   155b0:	b.ne	155bc <GOMP_single_copy_end@@GOMP_1.0+0x8ac>  // b.any
   155b4:	stxr	w5, w4, [x1]
   155b8:	cbnz	w5, 155a8 <GOMP_single_copy_end@@GOMP_1.0+0x898>
   155bc:	cset	w1, eq  // eq = none
   155c0:	cmp	w1, #0x0
   155c4:	b.ne	155cc <GOMP_single_copy_end@@GOMP_1.0+0x8bc>  // b.any
   155c8:	str	w2, [x0]
   155cc:	mov	w0, w1
   155d0:	eor	w0, w0, #0x1
   155d4:	and	w0, w0, #0xff
   155d8:	cmp	w0, #0x0
   155dc:	b.eq	155f0 <GOMP_single_copy_end@@GOMP_1.0+0x8e0>  // b.none
   155e0:	ldr	w0, [sp, #44]
   155e4:	mov	w1, w0
   155e8:	ldr	x0, [sp, #24]
   155ec:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
   155f0:	nop
   155f4:	ldp	x29, x30, [sp], #48
   155f8:	ret
   155fc:	stp	x29, x30, [sp, #-48]!
   15600:	mov	x29, sp
   15604:	str	x0, [sp, #24]
   15608:	ldr	x1, [sp, #24]
   1560c:	ldxr	w0, [x1]
   15610:	stlxr	w2, wzr, [x1]
   15614:	cbnz	w2, 1560c <GOMP_single_copy_end@@GOMP_1.0+0x8fc>
   15618:	str	w0, [sp, #44]
   1561c:	ldr	w0, [sp, #44]
   15620:	lsr	w0, w0, #31
   15624:	and	w0, w0, #0xff
   15628:	and	x0, x0, #0xff
   1562c:	cmp	x0, #0x0
   15630:	b.eq	1563c <GOMP_single_copy_end@@GOMP_1.0+0x92c>  // b.none
   15634:	ldr	x0, [sp, #24]
   15638:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
   1563c:	nop
   15640:	ldp	x29, x30, [sp], #48
   15644:	ret
   15648:	sub	sp, sp, #0x10
   1564c:	str	w0, [sp, #12]
   15650:	ldr	w0, [sp, #12]
   15654:	and	w0, w0, #0x1
   15658:	cmp	w0, #0x0
   1565c:	cset	w0, ne  // ne = any
   15660:	and	w0, w0, #0xff
   15664:	add	sp, sp, #0x10
   15668:	ret
   1566c:	sub	sp, sp, #0x10
   15670:	str	x0, [sp, #8]
   15674:	ldr	x0, [sp, #8]
   15678:	ldr	w0, [x0, #4]
   1567c:	orr	w1, w0, #0x1
   15680:	ldr	x0, [sp, #8]
   15684:	str	w1, [x0, #4]
   15688:	nop
   1568c:	add	sp, sp, #0x10
   15690:	ret
   15694:	sub	sp, sp, #0x10
   15698:	str	x0, [sp, #8]
   1569c:	ldr	x0, [sp, #8]
   156a0:	ldr	w0, [x0, #4]
   156a4:	and	w1, w0, #0xfffffffe
   156a8:	ldr	x0, [sp, #8]
   156ac:	str	w1, [x0, #4]
   156b0:	nop
   156b4:	add	sp, sp, #0x10
   156b8:	ret
   156bc:	sub	sp, sp, #0x10
   156c0:	str	x0, [sp, #8]
   156c4:	ldr	x0, [sp, #8]
   156c8:	ldr	w0, [x0, #4]
   156cc:	orr	w1, w0, #0x2
   156d0:	ldr	x0, [sp, #8]
   156d4:	str	w1, [x0, #4]
   156d8:	nop
   156dc:	add	sp, sp, #0x10
   156e0:	ret
   156e4:	sub	sp, sp, #0x10
   156e8:	str	x0, [sp, #8]
   156ec:	ldr	x0, [sp, #8]
   156f0:	ldr	w0, [x0, #4]
   156f4:	and	w0, w0, #0x2
   156f8:	cmp	w0, #0x0
   156fc:	cset	w0, ne  // ne = any
   15700:	and	w0, w0, #0xff
   15704:	add	sp, sp, #0x10
   15708:	ret
   1570c:	sub	sp, sp, #0x10
   15710:	str	x0, [sp, #8]
   15714:	ldr	x0, [sp, #8]
   15718:	ldr	w0, [x0, #4]
   1571c:	and	w0, w0, #0x4
   15720:	cmp	w0, #0x0
   15724:	cset	w0, ne  // ne = any
   15728:	and	w0, w0, #0xff
   1572c:	and	x0, x0, #0xff
   15730:	cmp	x0, #0x0
   15734:	cset	w0, ne  // ne = any
   15738:	and	w0, w0, #0xff
   1573c:	add	sp, sp, #0x10
   15740:	ret
   15744:	sub	sp, sp, #0x10
   15748:	str	x0, [sp, #8]
   1574c:	str	w1, [sp, #4]
   15750:	ldr	w0, [sp, #4]
   15754:	and	w0, w0, #0xfffffff8
   15758:	add	w1, w0, #0x8
   1575c:	ldr	x0, [sp, #8]
   15760:	str	w1, [x0, #4]
   15764:	nop
   15768:	add	sp, sp, #0x10
   1576c:	ret
   15770:	mrs	x1, tpidr_el0
   15774:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   15778:	ldr	x0, [x0, #4016]
   1577c:	add	x0, x1, x0
   15780:	ret
   15784:	stp	x29, x30, [sp, #-48]!
   15788:	mov	x29, sp
   1578c:	strb	w0, [sp, #31]
   15790:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   15794:	ldr	x0, [x0, #80]
   15798:	str	x0, [sp, #40]
   1579c:	ldr	x0, [sp, #40]
   157a0:	cmp	x0, #0x0
   157a4:	b.eq	157b4 <GOMP_single_copy_end@@GOMP_1.0+0xaa4>  // b.none
   157a8:	ldr	x0, [sp, #40]
   157ac:	add	x0, x0, #0x90
   157b0:	b	157d0 <GOMP_single_copy_end@@GOMP_1.0+0xac0>
   157b4:	ldrb	w0, [sp, #31]
   157b8:	cmp	w0, #0x0
   157bc:	b.eq	157c8 <GOMP_single_copy_end@@GOMP_1.0+0xab8>  // b.none
   157c0:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
   157c4:	b	157d0 <GOMP_single_copy_end@@GOMP_1.0+0xac0>
   157c8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   157cc:	add	x0, x0, #0x2d8
   157d0:	ldp	x29, x30, [sp], #48
   157d4:	ret
   157d8:	stp	x29, x30, [sp, #-32]!
   157dc:	mov	x29, sp
   157e0:	str	x0, [sp, #24]
   157e4:	ldr	x0, [sp, #24]
   157e8:	ldr	x0, [x0, #56]
   157ec:	cmp	x0, #0x0
   157f0:	cset	w0, ne  // ne = any
   157f4:	and	w0, w0, #0xff
   157f8:	and	x0, x0, #0xff
   157fc:	cmp	x0, #0x0
   15800:	b.eq	15810 <GOMP_single_copy_end@@GOMP_1.0+0xb00>  // b.none
   15804:	ldr	x0, [sp, #24]
   15808:	ldr	x0, [x0, #56]
   1580c:	bl	8a20 <free@plt>
   15810:	nop
   15814:	ldp	x29, x30, [sp], #32
   15818:	ret
   1581c:	sub	sp, sp, #0x10
   15820:	str	w0, [sp, #12]
   15824:	ldr	w0, [sp, #12]
   15828:	sxtw	x0, w0
   1582c:	add	x0, x0, #0x6
   15830:	lsl	x0, x0, #4
   15834:	add	sp, sp, #0x10
   15838:	ret
   1583c:	stp	x29, x30, [sp, #-32]!
   15840:	mov	x29, sp
   15844:	str	w0, [sp, #28]
   15848:	str	x1, [sp, #16]
   1584c:	ldr	w0, [sp, #28]
   15850:	bl	1581c <GOMP_single_copy_end@@GOMP_1.0+0xb0c>
   15854:	neg	x0, x0
   15858:	ldr	x1, [sp, #16]
   1585c:	add	x0, x1, x0
   15860:	ldp	x29, x30, [sp], #32
   15864:	ret
   15868:	stp	x29, x30, [sp, #-32]!
   1586c:	mov	x29, sp
   15870:	str	w0, [sp, #28]
   15874:	str	x1, [sp, #16]
   15878:	ldr	w0, [sp, #28]
   1587c:	bl	1581c <GOMP_single_copy_end@@GOMP_1.0+0xb0c>
   15880:	mov	x1, x0
   15884:	ldr	x0, [sp, #16]
   15888:	add	x0, x0, x1
   1588c:	ldp	x29, x30, [sp], #32
   15890:	ret
   15894:	stp	x29, x30, [sp, #-32]!
   15898:	mov	x29, sp
   1589c:	str	x0, [sp, #24]
   158a0:	ldr	x0, [sp, #24]
   158a4:	bl	8dd0 <fprintf@plt+0x1a0>
   158a8:	ldp	x29, x30, [sp], #32
   158ac:	ret
   158b0:	stp	x29, x30, [sp, #-32]!
   158b4:	mov	x29, sp
   158b8:	str	x0, [sp, #24]
   158bc:	ldr	x0, [sp, #24]
   158c0:	bl	8a20 <free@plt>
   158c4:	nop
   158c8:	ldp	x29, x30, [sp], #32
   158cc:	ret
   158d0:	stp	x29, x30, [sp, #-48]!
   158d4:	mov	x29, sp
   158d8:	str	x0, [sp, #24]
   158dc:	str	wzr, [sp, #44]
   158e0:	mov	w0, #0x1e                  	// #30
   158e4:	str	w0, [sp, #40]
   158e8:	b	15948 <GOMP_single_copy_end@@GOMP_1.0+0xc38>
   158ec:	ldr	w1, [sp, #40]
   158f0:	ldr	w0, [sp, #44]
   158f4:	sub	w0, w1, w0
   158f8:	lsr	w0, w0, #1
   158fc:	ldr	w1, [sp, #44]
   15900:	add	w0, w1, w0
   15904:	str	w0, [sp, #36]
   15908:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   1590c:	add	x1, x0, #0x2c8
   15910:	ldr	w0, [sp, #36]
   15914:	lsl	x0, x0, #4
   15918:	add	x0, x1, x0
   1591c:	ldr	w0, [x0]
   15920:	mov	w0, w0
   15924:	ldr	x1, [sp, #24]
   15928:	cmp	x1, x0
   1592c:	b.ls	15940 <GOMP_single_copy_end@@GOMP_1.0+0xc30>  // b.plast
   15930:	ldr	w0, [sp, #36]
   15934:	add	w0, w0, #0x1
   15938:	str	w0, [sp, #44]
   1593c:	b	15948 <GOMP_single_copy_end@@GOMP_1.0+0xc38>
   15940:	ldr	w0, [sp, #36]
   15944:	str	w0, [sp, #40]
   15948:	ldr	w1, [sp, #44]
   1594c:	ldr	w0, [sp, #40]
   15950:	cmp	w1, w0
   15954:	b.ne	158ec <GOMP_single_copy_end@@GOMP_1.0+0xbdc>  // b.any
   15958:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   1595c:	add	x1, x0, #0x2c8
   15960:	ldr	w0, [sp, #44]
   15964:	lsl	x0, x0, #4
   15968:	add	x0, x1, x0
   1596c:	ldr	w0, [x0]
   15970:	mov	w0, w0
   15974:	ldr	x1, [sp, #24]
   15978:	cmp	x1, x0
   1597c:	b.ls	15984 <GOMP_single_copy_end@@GOMP_1.0+0xc74>  // b.plast
   15980:	bl	8980 <abort@plt>
   15984:	ldr	w0, [sp, #44]
   15988:	ldp	x29, x30, [sp], #48
   1598c:	ret
   15990:	sub	sp, sp, #0x10
   15994:	str	x0, [sp, #8]
   15998:	ldr	x0, [sp, #8]
   1599c:	ldr	x0, [x0]
   159a0:	add	sp, sp, #0x10
   159a4:	ret
   159a8:	sub	sp, sp, #0x10
   159ac:	str	x0, [sp, #8]
   159b0:	ldr	x0, [sp, #8]
   159b4:	ldr	x1, [x0, #8]
   159b8:	ldr	x0, [sp, #8]
   159bc:	ldr	x0, [x0, #16]
   159c0:	sub	x0, x1, x0
   159c4:	add	sp, sp, #0x10
   159c8:	ret
   159cc:	sub	sp, sp, #0x30
   159d0:	str	w0, [sp, #12]
   159d4:	str	w1, [sp, #8]
   159d8:	str	w2, [sp, #4]
   159dc:	str	w3, [sp]
   159e0:	ldr	w1, [sp, #12]
   159e4:	ldr	w0, [sp, #4]
   159e8:	mul	x0, x1, x0
   159ec:	lsr	x0, x0, #32
   159f0:	str	w0, [sp, #44]
   159f4:	ldr	w1, [sp, #12]
   159f8:	ldr	w0, [sp, #44]
   159fc:	sub	w0, w1, w0
   15a00:	str	w0, [sp, #40]
   15a04:	ldr	w0, [sp, #40]
   15a08:	lsr	w0, w0, #1
   15a0c:	str	w0, [sp, #36]
   15a10:	ldr	w1, [sp, #44]
   15a14:	ldr	w0, [sp, #36]
   15a18:	add	w0, w1, w0
   15a1c:	str	w0, [sp, #32]
   15a20:	ldr	w0, [sp]
   15a24:	ldr	w1, [sp, #32]
   15a28:	lsr	w0, w1, w0
   15a2c:	str	w0, [sp, #28]
   15a30:	ldr	w1, [sp, #28]
   15a34:	ldr	w0, [sp, #8]
   15a38:	mul	w0, w1, w0
   15a3c:	ldr	w1, [sp, #12]
   15a40:	sub	w0, w1, w0
   15a44:	str	w0, [sp, #24]
   15a48:	ldr	w0, [sp, #24]
   15a4c:	add	sp, sp, #0x30
   15a50:	ret
   15a54:	stp	x29, x30, [sp, #-48]!
   15a58:	mov	x29, sp
   15a5c:	str	w0, [sp, #28]
   15a60:	str	x1, [sp, #16]
   15a64:	ldr	x0, [sp, #16]
   15a68:	ldr	w0, [x0, #24]
   15a6c:	mov	w0, w0
   15a70:	lsl	x1, x0, #4
   15a74:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   15a78:	add	x0, x0, #0x2c8
   15a7c:	add	x0, x1, x0
   15a80:	str	x0, [sp, #40]
   15a84:	ldr	x0, [sp, #40]
   15a88:	ldr	w1, [x0]
   15a8c:	ldr	x0, [sp, #40]
   15a90:	ldr	w2, [x0, #4]
   15a94:	ldr	x0, [sp, #40]
   15a98:	ldr	w0, [x0, #12]
   15a9c:	mov	w3, w0
   15aa0:	ldr	w0, [sp, #28]
   15aa4:	bl	159cc <GOMP_single_copy_end@@GOMP_1.0+0xcbc>
   15aa8:	ldp	x29, x30, [sp], #48
   15aac:	ret
   15ab0:	stp	x29, x30, [sp, #-48]!
   15ab4:	mov	x29, sp
   15ab8:	str	w0, [sp, #28]
   15abc:	str	x1, [sp, #16]
   15ac0:	ldr	x0, [sp, #16]
   15ac4:	ldr	w0, [x0, #24]
   15ac8:	mov	w0, w0
   15acc:	lsl	x1, x0, #4
   15ad0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   15ad4:	add	x0, x0, #0x2c8
   15ad8:	add	x0, x1, x0
   15adc:	str	x0, [sp, #40]
   15ae0:	ldr	x0, [sp, #40]
   15ae4:	ldr	w0, [x0]
   15ae8:	sub	w1, w0, #0x2
   15aec:	ldr	x0, [sp, #40]
   15af0:	ldr	w2, [x0, #8]
   15af4:	ldr	x0, [sp, #40]
   15af8:	ldr	w0, [x0, #12]
   15afc:	mov	w3, w0
   15b00:	ldr	w0, [sp, #28]
   15b04:	bl	159cc <GOMP_single_copy_end@@GOMP_1.0+0xcbc>
   15b08:	add	w0, w0, #0x1
   15b0c:	ldp	x29, x30, [sp], #48
   15b10:	ret
   15b14:	stp	x29, x30, [sp, #-48]!
   15b18:	mov	x29, sp
   15b1c:	str	x0, [sp, #24]
   15b20:	ldr	x0, [sp, #24]
   15b24:	bl	158d0 <GOMP_single_copy_end@@GOMP_1.0+0xbc0>
   15b28:	str	w0, [sp, #44]
   15b2c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   15b30:	add	x1, x0, #0x2c8
   15b34:	ldr	w0, [sp, #44]
   15b38:	lsl	x0, x0, #4
   15b3c:	add	x0, x1, x0
   15b40:	ldr	w0, [x0]
   15b44:	mov	w0, w0
   15b48:	str	x0, [sp, #24]
   15b4c:	ldr	x0, [sp, #24]
   15b50:	add	x0, x0, #0x4
   15b54:	lsl	x0, x0, #3
   15b58:	bl	15894 <GOMP_single_copy_end@@GOMP_1.0+0xb84>
   15b5c:	str	x0, [sp, #32]
   15b60:	ldr	x0, [sp, #32]
   15b64:	ldr	x1, [sp, #24]
   15b68:	str	x1, [x0]
   15b6c:	ldr	x0, [sp, #32]
   15b70:	str	xzr, [x0, #8]
   15b74:	ldr	x0, [sp, #32]
   15b78:	str	xzr, [x0, #16]
   15b7c:	ldr	x0, [sp, #32]
   15b80:	ldr	w1, [sp, #44]
   15b84:	str	w1, [x0, #24]
   15b88:	ldr	x0, [sp, #32]
   15b8c:	add	x3, x0, #0x20
   15b90:	ldr	x0, [sp, #24]
   15b94:	lsl	x0, x0, #3
   15b98:	mov	x2, x0
   15b9c:	mov	w1, #0x0                   	// #0
   15ba0:	mov	x0, x3
   15ba4:	bl	88d0 <memset@plt>
   15ba8:	ldr	x0, [sp, #32]
   15bac:	ldp	x29, x30, [sp], #48
   15bb0:	ret
   15bb4:	stp	x29, x30, [sp, #-64]!
   15bb8:	mov	x29, sp
   15bbc:	str	x0, [sp, #24]
   15bc0:	str	w1, [sp, #20]
   15bc4:	ldr	x1, [sp, #24]
   15bc8:	ldr	w0, [sp, #20]
   15bcc:	bl	15a54 <GOMP_single_copy_end@@GOMP_1.0+0xd44>
   15bd0:	str	w0, [sp, #60]
   15bd4:	ldr	x0, [sp, #24]
   15bd8:	bl	15990 <GOMP_single_copy_end@@GOMP_1.0+0xc80>
   15bdc:	str	x0, [sp, #48]
   15be0:	ldr	x0, [sp, #24]
   15be4:	add	x1, x0, #0x20
   15be8:	ldr	w0, [sp, #60]
   15bec:	lsl	x0, x0, #3
   15bf0:	add	x0, x1, x0
   15bf4:	str	x0, [sp, #40]
   15bf8:	ldr	x0, [sp, #40]
   15bfc:	ldr	x0, [x0]
   15c00:	cmp	x0, #0x0
   15c04:	b.ne	15c10 <GOMP_single_copy_end@@GOMP_1.0+0xf00>  // b.any
   15c08:	ldr	x0, [sp, #40]
   15c0c:	b	15cac <GOMP_single_copy_end@@GOMP_1.0+0xf9c>
   15c10:	ldr	x0, [sp, #40]
   15c14:	ldr	x0, [x0]
   15c18:	cmp	x0, #0x1
   15c1c:	b.ne	15c24 <GOMP_single_copy_end@@GOMP_1.0+0xf14>  // b.any
   15c20:	bl	8980 <abort@plt>
   15c24:	ldr	x1, [sp, #24]
   15c28:	ldr	w0, [sp, #20]
   15c2c:	bl	15ab0 <GOMP_single_copy_end@@GOMP_1.0+0xda0>
   15c30:	str	w0, [sp, #36]
   15c34:	ldr	w1, [sp, #60]
   15c38:	ldr	w0, [sp, #36]
   15c3c:	add	w0, w1, w0
   15c40:	str	w0, [sp, #60]
   15c44:	ldr	w0, [sp, #60]
   15c48:	ldr	x1, [sp, #48]
   15c4c:	cmp	x1, x0
   15c50:	b.hi	15c68 <GOMP_single_copy_end@@GOMP_1.0+0xf58>  // b.pmore
   15c54:	ldr	x0, [sp, #48]
   15c58:	mov	w1, w0
   15c5c:	ldr	w0, [sp, #60]
   15c60:	sub	w0, w0, w1
   15c64:	str	w0, [sp, #60]
   15c68:	ldr	x0, [sp, #24]
   15c6c:	add	x1, x0, #0x20
   15c70:	ldr	w0, [sp, #60]
   15c74:	lsl	x0, x0, #3
   15c78:	add	x0, x1, x0
   15c7c:	str	x0, [sp, #40]
   15c80:	ldr	x0, [sp, #40]
   15c84:	ldr	x0, [x0]
   15c88:	cmp	x0, #0x0
   15c8c:	b.ne	15c98 <GOMP_single_copy_end@@GOMP_1.0+0xf88>  // b.any
   15c90:	ldr	x0, [sp, #40]
   15c94:	b	15cac <GOMP_single_copy_end@@GOMP_1.0+0xf9c>
   15c98:	ldr	x0, [sp, #40]
   15c9c:	ldr	x0, [x0]
   15ca0:	cmp	x0, #0x1
   15ca4:	b.ne	15c34 <GOMP_single_copy_end@@GOMP_1.0+0xf24>  // b.any
   15ca8:	bl	8980 <abort@plt>
   15cac:	ldp	x29, x30, [sp], #64
   15cb0:	ret
   15cb4:	stp	x29, x30, [sp, #-80]!
   15cb8:	mov	x29, sp
   15cbc:	str	x0, [sp, #24]
   15cc0:	ldr	x0, [sp, #24]
   15cc4:	ldr	x0, [x0]
   15cc8:	str	x0, [sp, #56]
   15ccc:	ldr	x0, [sp, #24]
   15cd0:	add	x1, x0, #0x20
   15cd4:	ldr	x0, [sp, #56]
   15cd8:	lsl	x0, x0, #3
   15cdc:	add	x0, x1, x0
   15ce0:	str	x0, [sp, #48]
   15ce4:	ldr	x0, [sp, #24]
   15ce8:	bl	159a8 <GOMP_single_copy_end@@GOMP_1.0+0xc98>
   15cec:	str	x0, [sp, #40]
   15cf0:	ldr	x0, [sp, #40]
   15cf4:	lsl	x0, x0, #1
   15cf8:	ldr	x1, [sp, #56]
   15cfc:	cmp	x1, x0
   15d00:	b.cc	15d24 <GOMP_single_copy_end@@GOMP_1.0+0x1014>  // b.lo, b.ul, b.last
   15d04:	ldr	x0, [sp, #40]
   15d08:	lsl	x0, x0, #3
   15d0c:	ldr	x1, [sp, #56]
   15d10:	cmp	x1, x0
   15d14:	b.ls	15d38 <GOMP_single_copy_end@@GOMP_1.0+0x1028>  // b.plast
   15d18:	ldr	x0, [sp, #56]
   15d1c:	cmp	x0, #0x20
   15d20:	b.ls	15d38 <GOMP_single_copy_end@@GOMP_1.0+0x1028>  // b.plast
   15d24:	ldr	x0, [sp, #40]
   15d28:	lsl	x0, x0, #1
   15d2c:	bl	15b14 <GOMP_single_copy_end@@GOMP_1.0+0xe04>
   15d30:	str	x0, [sp, #72]
   15d34:	b	15d48 <GOMP_single_copy_end@@GOMP_1.0+0x1038>
   15d38:	ldr	x0, [sp, #56]
   15d3c:	sub	x0, x0, #0x1
   15d40:	bl	15b14 <GOMP_single_copy_end@@GOMP_1.0+0xe04>
   15d44:	str	x0, [sp, #72]
   15d48:	ldr	x0, [sp, #24]
   15d4c:	ldr	x1, [x0, #8]
   15d50:	ldr	x0, [sp, #24]
   15d54:	ldr	x0, [x0, #16]
   15d58:	sub	x1, x1, x0
   15d5c:	ldr	x0, [sp, #72]
   15d60:	str	x1, [x0, #8]
   15d64:	ldr	x0, [sp, #24]
   15d68:	add	x0, x0, #0x20
   15d6c:	str	x0, [sp, #64]
   15d70:	ldr	x0, [sp, #64]
   15d74:	ldr	x0, [x0]
   15d78:	str	x0, [sp, #32]
   15d7c:	ldr	x0, [sp, #32]
   15d80:	cmp	x0, #0x0
   15d84:	b.eq	15db4 <GOMP_single_copy_end@@GOMP_1.0+0x10a4>  // b.none
   15d88:	ldr	x0, [sp, #32]
   15d8c:	cmp	x0, #0x1
   15d90:	b.eq	15db4 <GOMP_single_copy_end@@GOMP_1.0+0x10a4>  // b.none
   15d94:	ldr	x0, [sp, #32]
   15d98:	bl	16234 <GOMP_single_copy_end@@GOMP_1.0+0x1524>
   15d9c:	mov	w1, w0
   15da0:	ldr	x0, [sp, #72]
   15da4:	bl	15bb4 <GOMP_single_copy_end@@GOMP_1.0+0xea4>
   15da8:	mov	x1, x0
   15dac:	ldr	x0, [sp, #32]
   15db0:	str	x0, [x1]
   15db4:	ldr	x0, [sp, #64]
   15db8:	add	x0, x0, #0x8
   15dbc:	str	x0, [sp, #64]
   15dc0:	ldr	x1, [sp, #64]
   15dc4:	ldr	x0, [sp, #48]
   15dc8:	cmp	x1, x0
   15dcc:	b.cc	15d70 <GOMP_single_copy_end@@GOMP_1.0+0x1060>  // b.lo, b.ul, b.last
   15dd0:	ldr	x0, [sp, #24]
   15dd4:	bl	158b0 <GOMP_single_copy_end@@GOMP_1.0+0xba0>
   15dd8:	ldr	x0, [sp, #72]
   15ddc:	ldp	x29, x30, [sp], #80
   15de0:	ret
   15de4:	stp	x29, x30, [sp, #-64]!
   15de8:	mov	x29, sp
   15dec:	str	x0, [sp, #24]
   15df0:	str	x1, [sp, #16]
   15df4:	ldr	x0, [sp, #16]
   15df8:	bl	16234 <GOMP_single_copy_end@@GOMP_1.0+0x1524>
   15dfc:	str	w0, [sp, #56]
   15e00:	ldr	x0, [sp, #24]
   15e04:	bl	15990 <GOMP_single_copy_end@@GOMP_1.0+0xc80>
   15e08:	str	x0, [sp, #48]
   15e0c:	ldr	x1, [sp, #24]
   15e10:	ldr	w0, [sp, #56]
   15e14:	bl	15a54 <GOMP_single_copy_end@@GOMP_1.0+0xd44>
   15e18:	str	w0, [sp, #60]
   15e1c:	ldr	x0, [sp, #24]
   15e20:	ldr	w1, [sp, #60]
   15e24:	add	x1, x1, #0x4
   15e28:	ldr	x0, [x0, x1, lsl #3]
   15e2c:	str	x0, [sp, #40]
   15e30:	ldr	x0, [sp, #40]
   15e34:	cmp	x0, #0x0
   15e38:	b.eq	15e60 <GOMP_single_copy_end@@GOMP_1.0+0x1150>  // b.none
   15e3c:	ldr	x0, [sp, #40]
   15e40:	cmp	x0, #0x1
   15e44:	b.eq	15e68 <GOMP_single_copy_end@@GOMP_1.0+0x1158>  // b.none
   15e48:	ldr	x1, [sp, #16]
   15e4c:	ldr	x0, [sp, #40]
   15e50:	bl	16254 <GOMP_single_copy_end@@GOMP_1.0+0x1544>
   15e54:	and	w0, w0, #0xff
   15e58:	cmp	w0, #0x0
   15e5c:	b.eq	15e68 <GOMP_single_copy_end@@GOMP_1.0+0x1158>  // b.none
   15e60:	ldr	x0, [sp, #40]
   15e64:	b	15ef4 <GOMP_single_copy_end@@GOMP_1.0+0x11e4>
   15e68:	ldr	x1, [sp, #24]
   15e6c:	ldr	w0, [sp, #56]
   15e70:	bl	15ab0 <GOMP_single_copy_end@@GOMP_1.0+0xda0>
   15e74:	str	w0, [sp, #36]
   15e78:	ldr	w1, [sp, #60]
   15e7c:	ldr	w0, [sp, #36]
   15e80:	add	w0, w1, w0
   15e84:	str	w0, [sp, #60]
   15e88:	ldr	w0, [sp, #60]
   15e8c:	ldr	x1, [sp, #48]
   15e90:	cmp	x1, x0
   15e94:	b.hi	15eac <GOMP_single_copy_end@@GOMP_1.0+0x119c>  // b.pmore
   15e98:	ldr	x0, [sp, #48]
   15e9c:	mov	w1, w0
   15ea0:	ldr	w0, [sp, #60]
   15ea4:	sub	w0, w0, w1
   15ea8:	str	w0, [sp, #60]
   15eac:	ldr	x0, [sp, #24]
   15eb0:	ldr	w1, [sp, #60]
   15eb4:	add	x1, x1, #0x4
   15eb8:	ldr	x0, [x0, x1, lsl #3]
   15ebc:	str	x0, [sp, #40]
   15ec0:	ldr	x0, [sp, #40]
   15ec4:	cmp	x0, #0x0
   15ec8:	b.eq	15ef0 <GOMP_single_copy_end@@GOMP_1.0+0x11e0>  // b.none
   15ecc:	ldr	x0, [sp, #40]
   15ed0:	cmp	x0, #0x1
   15ed4:	b.eq	15e78 <GOMP_single_copy_end@@GOMP_1.0+0x1168>  // b.none
   15ed8:	ldr	x1, [sp, #16]
   15edc:	ldr	x0, [sp, #40]
   15ee0:	bl	16254 <GOMP_single_copy_end@@GOMP_1.0+0x1544>
   15ee4:	and	w0, w0, #0xff
   15ee8:	cmp	w0, #0x0
   15eec:	b.eq	15e78 <GOMP_single_copy_end@@GOMP_1.0+0x1168>  // b.none
   15ef0:	ldr	x0, [sp, #40]
   15ef4:	ldp	x29, x30, [sp], #64
   15ef8:	ret
   15efc:	stp	x29, x30, [sp, #-112]!
   15f00:	mov	x29, sp
   15f04:	str	x0, [sp, #40]
   15f08:	str	x1, [sp, #32]
   15f0c:	str	w2, [sp, #28]
   15f10:	ldr	x0, [sp, #32]
   15f14:	bl	16234 <GOMP_single_copy_end@@GOMP_1.0+0x1524>
   15f18:	str	w0, [sp, #76]
   15f1c:	ldr	x0, [sp, #40]
   15f20:	ldr	x0, [x0]
   15f24:	str	x0, [sp, #80]
   15f28:	ldr	x0, [sp, #80]
   15f2c:	bl	15990 <GOMP_single_copy_end@@GOMP_1.0+0xc80>
   15f30:	str	x0, [sp, #88]
   15f34:	ldr	w0, [sp, #28]
   15f38:	cmp	w0, #0x1
   15f3c:	b.ne	15f90 <GOMP_single_copy_end@@GOMP_1.0+0x1280>  // b.any
   15f40:	ldr	x1, [sp, #88]
   15f44:	mov	x0, x1
   15f48:	lsl	x0, x0, #1
   15f4c:	add	x1, x0, x1
   15f50:	ldr	x0, [sp, #80]
   15f54:	ldr	x0, [x0, #8]
   15f58:	lsl	x0, x0, #2
   15f5c:	cmp	x1, x0
   15f60:	b.hi	15f90 <GOMP_single_copy_end@@GOMP_1.0+0x1280>  // b.pmore
   15f64:	ldr	x0, [sp, #80]
   15f68:	bl	15cb4 <GOMP_single_copy_end@@GOMP_1.0+0xfa4>
   15f6c:	mov	x1, x0
   15f70:	ldr	x0, [sp, #40]
   15f74:	str	x1, [x0]
   15f78:	ldr	x0, [sp, #40]
   15f7c:	ldr	x0, [x0]
   15f80:	str	x0, [sp, #80]
   15f84:	ldr	x0, [sp, #80]
   15f88:	bl	15990 <GOMP_single_copy_end@@GOMP_1.0+0xc80>
   15f8c:	str	x0, [sp, #88]
   15f90:	ldr	x1, [sp, #80]
   15f94:	ldr	w0, [sp, #76]
   15f98:	bl	15a54 <GOMP_single_copy_end@@GOMP_1.0+0xd44>
   15f9c:	str	w0, [sp, #100]
   15fa0:	str	xzr, [sp, #104]
   15fa4:	ldr	x0, [sp, #80]
   15fa8:	ldr	w1, [sp, #100]
   15fac:	add	x1, x1, #0x4
   15fb0:	ldr	x0, [x0, x1, lsl #3]
   15fb4:	str	x0, [sp, #64]
   15fb8:	ldr	x0, [sp, #64]
   15fbc:	cmp	x0, #0x0
   15fc0:	b.eq	160e4 <GOMP_single_copy_end@@GOMP_1.0+0x13d4>  // b.none
   15fc4:	ldr	x0, [sp, #64]
   15fc8:	cmp	x0, #0x1
   15fcc:	b.ne	15fec <GOMP_single_copy_end@@GOMP_1.0+0x12dc>  // b.any
   15fd0:	ldr	w0, [sp, #100]
   15fd4:	add	x0, x0, #0x4
   15fd8:	lsl	x0, x0, #3
   15fdc:	ldr	x1, [sp, #80]
   15fe0:	add	x0, x1, x0
   15fe4:	str	x0, [sp, #104]
   15fe8:	b	1601c <GOMP_single_copy_end@@GOMP_1.0+0x130c>
   15fec:	ldr	x1, [sp, #32]
   15ff0:	ldr	x0, [sp, #64]
   15ff4:	bl	16254 <GOMP_single_copy_end@@GOMP_1.0+0x1544>
   15ff8:	and	w0, w0, #0xff
   15ffc:	cmp	w0, #0x0
   16000:	b.eq	1601c <GOMP_single_copy_end@@GOMP_1.0+0x130c>  // b.none
   16004:	ldr	w0, [sp, #100]
   16008:	add	x0, x0, #0x4
   1600c:	lsl	x0, x0, #3
   16010:	ldr	x1, [sp, #80]
   16014:	add	x0, x1, x0
   16018:	b	1615c <GOMP_single_copy_end@@GOMP_1.0+0x144c>
   1601c:	ldr	x1, [sp, #80]
   16020:	ldr	w0, [sp, #76]
   16024:	bl	15ab0 <GOMP_single_copy_end@@GOMP_1.0+0xda0>
   16028:	str	w0, [sp, #60]
   1602c:	ldr	w1, [sp, #100]
   16030:	ldr	w0, [sp, #60]
   16034:	add	w0, w1, w0
   16038:	str	w0, [sp, #100]
   1603c:	ldr	w0, [sp, #100]
   16040:	ldr	x1, [sp, #88]
   16044:	cmp	x1, x0
   16048:	b.hi	16060 <GOMP_single_copy_end@@GOMP_1.0+0x1350>  // b.pmore
   1604c:	ldr	x0, [sp, #88]
   16050:	mov	w1, w0
   16054:	ldr	w0, [sp, #100]
   16058:	sub	w0, w0, w1
   1605c:	str	w0, [sp, #100]
   16060:	ldr	x0, [sp, #80]
   16064:	ldr	w1, [sp, #100]
   16068:	add	x1, x1, #0x4
   1606c:	ldr	x0, [x0, x1, lsl #3]
   16070:	str	x0, [sp, #64]
   16074:	ldr	x0, [sp, #64]
   16078:	cmp	x0, #0x0
   1607c:	b.eq	160ec <GOMP_single_copy_end@@GOMP_1.0+0x13dc>  // b.none
   16080:	ldr	x0, [sp, #64]
   16084:	cmp	x0, #0x1
   16088:	b.ne	160b4 <GOMP_single_copy_end@@GOMP_1.0+0x13a4>  // b.any
   1608c:	ldr	x0, [sp, #104]
   16090:	cmp	x0, #0x0
   16094:	b.ne	1602c <GOMP_single_copy_end@@GOMP_1.0+0x131c>  // b.any
   16098:	ldr	w0, [sp, #100]
   1609c:	add	x0, x0, #0x4
   160a0:	lsl	x0, x0, #3
   160a4:	ldr	x1, [sp, #80]
   160a8:	add	x0, x1, x0
   160ac:	str	x0, [sp, #104]
   160b0:	b	1602c <GOMP_single_copy_end@@GOMP_1.0+0x131c>
   160b4:	ldr	x1, [sp, #32]
   160b8:	ldr	x0, [sp, #64]
   160bc:	bl	16254 <GOMP_single_copy_end@@GOMP_1.0+0x1544>
   160c0:	and	w0, w0, #0xff
   160c4:	cmp	w0, #0x0
   160c8:	b.eq	1602c <GOMP_single_copy_end@@GOMP_1.0+0x131c>  // b.none
   160cc:	ldr	w0, [sp, #100]
   160d0:	add	x0, x0, #0x4
   160d4:	lsl	x0, x0, #3
   160d8:	ldr	x1, [sp, #80]
   160dc:	add	x0, x1, x0
   160e0:	b	1615c <GOMP_single_copy_end@@GOMP_1.0+0x144c>
   160e4:	nop
   160e8:	b	160f0 <GOMP_single_copy_end@@GOMP_1.0+0x13e0>
   160ec:	nop
   160f0:	ldr	w0, [sp, #28]
   160f4:	cmp	w0, #0x0
   160f8:	b.ne	16104 <GOMP_single_copy_end@@GOMP_1.0+0x13f4>  // b.any
   160fc:	mov	x0, #0x0                   	// #0
   16100:	b	1615c <GOMP_single_copy_end@@GOMP_1.0+0x144c>
   16104:	ldr	x0, [sp, #104]
   16108:	cmp	x0, #0x0
   1610c:	b.eq	16134 <GOMP_single_copy_end@@GOMP_1.0+0x1424>  // b.none
   16110:	ldr	x0, [sp, #80]
   16114:	ldr	x0, [x0, #16]
   16118:	sub	x1, x0, #0x1
   1611c:	ldr	x0, [sp, #80]
   16120:	str	x1, [x0, #16]
   16124:	ldr	x0, [sp, #104]
   16128:	str	xzr, [x0]
   1612c:	ldr	x0, [sp, #104]
   16130:	b	1615c <GOMP_single_copy_end@@GOMP_1.0+0x144c>
   16134:	ldr	x0, [sp, #80]
   16138:	ldr	x0, [x0, #8]
   1613c:	add	x1, x0, #0x1
   16140:	ldr	x0, [sp, #80]
   16144:	str	x1, [x0, #8]
   16148:	ldr	w0, [sp, #100]
   1614c:	add	x0, x0, #0x4
   16150:	lsl	x0, x0, #3
   16154:	ldr	x1, [sp, #80]
   16158:	add	x0, x1, x0
   1615c:	ldp	x29, x30, [sp], #112
   16160:	ret
   16164:	stp	x29, x30, [sp, #-48]!
   16168:	mov	x29, sp
   1616c:	str	x19, [sp, #16]
   16170:	str	x0, [sp, #40]
   16174:	str	x1, [sp, #32]
   16178:	ldr	x0, [sp, #40]
   1617c:	add	x0, x0, #0x20
   16180:	ldr	x1, [sp, #32]
   16184:	cmp	x1, x0
   16188:	b.cc	161d0 <GOMP_single_copy_end@@GOMP_1.0+0x14c0>  // b.lo, b.ul, b.last
   1618c:	ldr	x0, [sp, #40]
   16190:	add	x19, x0, #0x20
   16194:	ldr	x0, [sp, #40]
   16198:	bl	15990 <GOMP_single_copy_end@@GOMP_1.0+0xc80>
   1619c:	lsl	x0, x0, #3
   161a0:	add	x0, x19, x0
   161a4:	ldr	x1, [sp, #32]
   161a8:	cmp	x1, x0
   161ac:	b.cs	161d0 <GOMP_single_copy_end@@GOMP_1.0+0x14c0>  // b.hs, b.nlast
   161b0:	ldr	x0, [sp, #32]
   161b4:	ldr	x0, [x0]
   161b8:	cmp	x0, #0x0
   161bc:	b.eq	161d0 <GOMP_single_copy_end@@GOMP_1.0+0x14c0>  // b.none
   161c0:	ldr	x0, [sp, #32]
   161c4:	ldr	x0, [x0]
   161c8:	cmp	x0, #0x1
   161cc:	b.ne	161d4 <GOMP_single_copy_end@@GOMP_1.0+0x14c4>  // b.any
   161d0:	bl	8980 <abort@plt>
   161d4:	ldr	x0, [sp, #32]
   161d8:	mov	x1, #0x1                   	// #1
   161dc:	str	x1, [x0]
   161e0:	ldr	x0, [sp, #40]
   161e4:	ldr	x0, [x0, #16]
   161e8:	add	x1, x0, #0x1
   161ec:	ldr	x0, [sp, #40]
   161f0:	str	x1, [x0, #16]
   161f4:	nop
   161f8:	ldr	x19, [sp, #16]
   161fc:	ldp	x29, x30, [sp], #48
   16200:	ret
   16204:	sub	sp, sp, #0x20
   16208:	str	x0, [sp, #8]
   1620c:	ldr	x0, [sp, #8]
   16210:	str	x0, [sp, #24]
   16214:	ldr	x0, [sp, #24]
   16218:	lsr	x0, x0, #32
   1621c:	ldr	x1, [sp, #24]
   16220:	eor	x0, x1, x0
   16224:	str	x0, [sp, #24]
   16228:	ldr	x0, [sp, #24]
   1622c:	add	sp, sp, #0x20
   16230:	ret
   16234:	stp	x29, x30, [sp, #-32]!
   16238:	mov	x29, sp
   1623c:	str	x0, [sp, #24]
   16240:	ldr	x0, [sp, #24]
   16244:	ldr	x0, [x0]
   16248:	bl	16204 <GOMP_single_copy_end@@GOMP_1.0+0x14f4>
   1624c:	ldp	x29, x30, [sp], #32
   16250:	ret
   16254:	sub	sp, sp, #0x10
   16258:	str	x0, [sp, #8]
   1625c:	str	x1, [sp]
   16260:	ldr	x0, [sp, #8]
   16264:	ldr	x1, [x0]
   16268:	ldr	x0, [sp]
   1626c:	ldr	x0, [x0]
   16270:	cmp	x1, x0
   16274:	cset	w0, eq  // eq = none
   16278:	and	w0, w0, #0xff
   1627c:	add	sp, sp, #0x10
   16280:	ret
   16284:	stp	x29, x30, [sp, #-48]!
   16288:	mov	x29, sp
   1628c:	str	x0, [sp, #40]
   16290:	str	x1, [sp, #32]
   16294:	str	x2, [sp, #24]
   16298:	ldr	x0, [sp, #40]
   1629c:	ldr	x1, [sp, #32]
   162a0:	str	x1, [x0]
   162a4:	ldr	x0, [sp, #40]
   162a8:	add	x0, x0, #0x90
   162ac:	ldr	x1, [sp, #24]
   162b0:	ldp	x2, x3, [x1]
   162b4:	stp	x2, x3, [x0]
   162b8:	ldp	x2, x3, [x1, #16]
   162bc:	stp	x2, x3, [x0, #16]
   162c0:	ldr	x1, [x1, #32]
   162c4:	str	x1, [x0, #32]
   162c8:	ldr	x0, [sp, #40]
   162cc:	str	wzr, [x0, #200]
   162d0:	ldr	x0, [sp, #40]
   162d4:	str	xzr, [x0, #64]
   162d8:	ldr	x0, [sp, #40]
   162dc:	strb	wzr, [x0, #204]
   162e0:	ldr	x0, [sp, #40]
   162e4:	strb	wzr, [x0, #205]
   162e8:	ldr	x0, [sp, #40]
   162ec:	strb	wzr, [x0, #206]
   162f0:	ldr	x0, [sp, #40]
   162f4:	strb	wzr, [x0, #207]
   162f8:	ldr	x0, [sp, #40]
   162fc:	add	x0, x0, #0x8
   16300:	bl	14d9c <GOMP_single_copy_end@@GOMP_1.0+0x8c>
   16304:	ldr	x0, [sp, #40]
   16308:	str	xzr, [x0, #40]
   1630c:	ldr	x0, [sp, #40]
   16310:	str	xzr, [x0, #48]
   16314:	ldr	x0, [sp, #40]
   16318:	str	xzr, [x0, #56]
   1631c:	ldr	x0, [sp, #40]
   16320:	str	xzr, [x0, #72]
   16324:	nop
   16328:	ldp	x29, x30, [sp], #48
   1632c:	ret
   16330:	stp	x29, x30, [sp, #-32]!
   16334:	mov	x29, sp
   16338:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1633c:	str	x0, [sp, #24]
   16340:	ldr	x0, [sp, #24]
   16344:	ldr	x0, [x0, #80]
   16348:	str	x0, [sp, #16]
   1634c:	ldr	x0, [sp, #16]
   16350:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   16354:	ldr	x0, [sp, #16]
   16358:	ldr	x1, [x0]
   1635c:	ldr	x0, [sp, #24]
   16360:	str	x1, [x0, #80]
   16364:	nop
   16368:	ldp	x29, x30, [sp], #32
   1636c:	ret
   16370:	stp	x29, x30, [sp, #-48]!
   16374:	mov	x29, sp
   16378:	str	x0, [sp, #24]
   1637c:	ldr	x0, [sp, #24]
   16380:	ldr	x0, [x0, #8]
   16384:	str	x0, [sp, #40]
   16388:	ldr	x0, [sp, #40]
   1638c:	cmp	x0, #0x0
   16390:	b.eq	163c4 <GOMP_single_copy_end@@GOMP_1.0+0x16b4>  // b.none
   16394:	ldr	x1, [sp, #40]
   16398:	mov	w0, #0x1                   	// #1
   1639c:	bl	1583c <GOMP_single_copy_end@@GOMP_1.0+0xb2c>
   163a0:	str	xzr, [x0]
   163a4:	ldr	x0, [sp, #40]
   163a8:	ldr	x0, [x0]
   163ac:	str	x0, [sp, #40]
   163b0:	ldr	x0, [sp, #24]
   163b4:	ldr	x0, [x0, #8]
   163b8:	ldr	x1, [sp, #40]
   163bc:	cmp	x1, x0
   163c0:	b.ne	16394 <GOMP_single_copy_end@@GOMP_1.0+0x1684>  // b.any
   163c4:	nop
   163c8:	ldp	x29, x30, [sp], #48
   163cc:	ret
   163d0:	stp	x29, x30, [sp, #-48]!
   163d4:	mov	x29, sp
   163d8:	str	x0, [sp, #24]
   163dc:	str	x1, [sp, #16]
   163e0:	ldr	x0, [sp, #16]
   163e4:	cmp	x0, #0x0
   163e8:	b.eq	16430 <GOMP_single_copy_end@@GOMP_1.0+0x1720>  // b.none
   163ec:	ldr	x0, [sp, #16]
   163f0:	ldr	x0, [x0, #24]
   163f4:	str	x0, [sp, #40]
   163f8:	ldr	x0, [sp, #16]
   163fc:	ldr	x0, [x0, #32]
   16400:	str	x0, [sp, #32]
   16404:	ldr	x0, [sp, #16]
   16408:	bl	16370 <GOMP_single_copy_end@@GOMP_1.0+0x1660>
   1640c:	ldr	x0, [sp, #16]
   16410:	bl	8a20 <free@plt>
   16414:	ldr	x1, [sp, #40]
   16418:	ldr	x0, [sp, #24]
   1641c:	bl	163d0 <GOMP_single_copy_end@@GOMP_1.0+0x16c0>
   16420:	ldr	x1, [sp, #32]
   16424:	ldr	x0, [sp, #24]
   16428:	bl	163d0 <GOMP_single_copy_end@@GOMP_1.0+0x16c0>
   1642c:	b	16434 <GOMP_single_copy_end@@GOMP_1.0+0x1724>
   16430:	nop
   16434:	ldp	x29, x30, [sp], #48
   16438:	ret
   1643c:	stp	x29, x30, [sp, #-32]!
   16440:	mov	x29, sp
   16444:	str	x0, [sp, #24]
   16448:	ldr	x0, [sp, #24]
   1644c:	bl	14d68 <GOMP_single_copy_end@@GOMP_1.0+0x58>
   16450:	and	w0, w0, #0xff
   16454:	cmp	w0, #0x0
   16458:	b.eq	16480 <GOMP_single_copy_end@@GOMP_1.0+0x1770>  // b.none
   1645c:	ldr	x2, [sp, #24]
   16460:	ldr	x0, [sp, #24]
   16464:	ldr	x0, [x0]
   16468:	mov	x1, x0
   1646c:	mov	x0, x2
   16470:	bl	163d0 <GOMP_single_copy_end@@GOMP_1.0+0x16c0>
   16474:	ldr	x0, [sp, #24]
   16478:	str	xzr, [x0]
   1647c:	b	1648c <GOMP_single_copy_end@@GOMP_1.0+0x177c>
   16480:	ldr	x0, [sp, #24]
   16484:	add	x0, x0, #0x8
   16488:	bl	16370 <GOMP_single_copy_end@@GOMP_1.0+0x1660>
   1648c:	nop
   16490:	ldp	x29, x30, [sp], #32
   16494:	ret
   16498:	stp	x29, x30, [sp, #-176]!
   1649c:	mov	x29, sp
   164a0:	str	x0, [sp, #40]
   164a4:	str	x1, [sp, #32]
   164a8:	str	x2, [sp, #24]
   164ac:	ldr	x0, [sp, #24]
   164b0:	ldr	x0, [x0]
   164b4:	str	x0, [sp, #168]
   164b8:	ldr	x0, [sp, #168]
   164bc:	cmp	x0, #0x0
   164c0:	b.eq	1656c <GOMP_single_copy_end@@GOMP_1.0+0x185c>  // b.none
   164c4:	ldr	x0, [sp, #24]
   164c8:	add	x0, x0, #0x8
   164cc:	ldr	x0, [x0]
   164d0:	str	x0, [sp, #72]
   164d4:	str	xzr, [sp, #160]
   164d8:	b	16558 <GOMP_single_copy_end@@GOMP_1.0+0x1848>
   164dc:	ldr	x0, [sp, #160]
   164e0:	add	x0, x0, #0x2
   164e4:	lsl	x0, x0, #3
   164e8:	ldr	x1, [sp, #24]
   164ec:	add	x0, x1, x0
   164f0:	ldr	x2, [x0]
   164f4:	ldr	x3, [sp, #40]
   164f8:	ldr	x1, [sp, #160]
   164fc:	mov	x0, x1
   16500:	lsl	x0, x0, #2
   16504:	add	x0, x0, x1
   16508:	lsl	x0, x0, #3
   1650c:	add	x0, x3, x0
   16510:	str	x2, [x0, #208]
   16514:	ldr	x1, [sp, #160]
   16518:	ldr	x0, [sp, #72]
   1651c:	cmp	x1, x0
   16520:	cset	w0, cs  // cs = hs, nlast
   16524:	and	w3, w0, #0xff
   16528:	ldr	x2, [sp, #40]
   1652c:	ldr	x1, [sp, #160]
   16530:	mov	x0, x1
   16534:	lsl	x0, x0, #2
   16538:	add	x0, x0, x1
   1653c:	lsl	x0, x0, #3
   16540:	add	x0, x2, x0
   16544:	mov	w1, w3
   16548:	strb	w1, [x0, #240]
   1654c:	ldr	x0, [sp, #160]
   16550:	add	x0, x0, #0x1
   16554:	str	x0, [sp, #160]
   16558:	ldr	x1, [sp, #160]
   1655c:	ldr	x0, [sp, #168]
   16560:	cmp	x1, x0
   16564:	b.cc	164dc <GOMP_single_copy_end@@GOMP_1.0+0x17cc>  // b.lo, b.ul, b.last
   16568:	b	16804 <GOMP_single_copy_end@@GOMP_1.0+0x1af4>
   1656c:	ldr	x0, [sp, #24]
   16570:	add	x0, x0, #0x8
   16574:	ldr	x0, [x0]
   16578:	str	x0, [sp, #168]
   1657c:	ldr	x0, [sp, #24]
   16580:	add	x0, x0, #0x10
   16584:	ldr	x0, [x0]
   16588:	str	x0, [sp, #120]
   1658c:	ldr	x0, [sp, #24]
   16590:	add	x0, x0, #0x18
   16594:	ldr	x0, [x0]
   16598:	str	x0, [sp, #112]
   1659c:	ldr	x0, [sp, #24]
   165a0:	add	x0, x0, #0x20
   165a4:	ldr	x0, [x0]
   165a8:	str	x0, [sp, #104]
   165ac:	ldr	x1, [sp, #120]
   165b0:	ldr	x0, [sp, #112]
   165b4:	add	x0, x1, x0
   165b8:	ldr	x1, [sp, #104]
   165bc:	add	x0, x1, x0
   165c0:	str	x0, [sp, #96]
   165c4:	str	xzr, [sp, #144]
   165c8:	ldr	x0, [sp, #96]
   165cc:	str	x0, [sp, #160]
   165d0:	b	1669c <GOMP_single_copy_end@@GOMP_1.0+0x198c>
   165d4:	ldr	x0, [sp, #160]
   165d8:	add	x0, x0, #0x5
   165dc:	lsl	x0, x0, #3
   165e0:	ldr	x1, [sp, #24]
   165e4:	add	x0, x1, x0
   165e8:	ldr	x0, [x0]
   165ec:	str	x0, [sp, #80]
   165f0:	ldr	x0, [sp, #80]
   165f4:	add	x0, x0, #0x8
   165f8:	ldr	x0, [x0]
   165fc:	cmp	x0, #0x1
   16600:	b.eq	1668c <GOMP_single_copy_end@@GOMP_1.0+0x197c>  // b.none
   16604:	cmp	x0, #0x0
   16608:	b.eq	16618 <GOMP_single_copy_end@@GOMP_1.0+0x1908>  // b.none
   1660c:	sub	x0, x0, #0x2
   16610:	cmp	x0, #0x2
   16614:	b.ls	16634 <GOMP_single_copy_end@@GOMP_1.0+0x1924>  // b.plast
   16618:	ldr	x0, [sp, #80]
   1661c:	add	x0, x0, #0x8
   16620:	ldr	x0, [x0]
   16624:	mov	w1, w0
   16628:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   1662c:	add	x0, x0, #0x4a8
   16630:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   16634:	nop
   16638:	ldr	x0, [sp, #80]
   1663c:	ldr	x2, [x0]
   16640:	ldr	x3, [sp, #40]
   16644:	ldr	x1, [sp, #144]
   16648:	mov	x0, x1
   1664c:	lsl	x0, x0, #2
   16650:	add	x0, x0, x1
   16654:	lsl	x0, x0, #3
   16658:	add	x0, x3, x0
   1665c:	str	x2, [x0, #208]
   16660:	ldr	x1, [sp, #144]
   16664:	add	x0, x1, #0x1
   16668:	str	x0, [sp, #144]
   1666c:	ldr	x2, [sp, #40]
   16670:	mov	x0, x1
   16674:	lsl	x0, x0, #2
   16678:	add	x0, x0, x1
   1667c:	lsl	x0, x0, #3
   16680:	add	x0, x2, x0
   16684:	strb	wzr, [x0, #240]
   16688:	b	16690 <GOMP_single_copy_end@@GOMP_1.0+0x1980>
   1668c:	nop
   16690:	ldr	x0, [sp, #160]
   16694:	add	x0, x0, #0x1
   16698:	str	x0, [sp, #160]
   1669c:	ldr	x1, [sp, #160]
   166a0:	ldr	x0, [sp, #168]
   166a4:	cmp	x1, x0
   166a8:	b.cc	165d4 <GOMP_single_copy_end@@GOMP_1.0+0x18c4>  // b.lo, b.ul, b.last
   166ac:	str	xzr, [sp, #160]
   166b0:	b	16740 <GOMP_single_copy_end@@GOMP_1.0+0x1a30>
   166b4:	ldr	x0, [sp, #160]
   166b8:	add	x0, x0, #0x5
   166bc:	lsl	x0, x0, #3
   166c0:	ldr	x1, [sp, #24]
   166c4:	add	x0, x1, x0
   166c8:	ldr	x2, [x0]
   166cc:	ldr	x3, [sp, #40]
   166d0:	ldr	x1, [sp, #144]
   166d4:	mov	x0, x1
   166d8:	lsl	x0, x0, #2
   166dc:	add	x0, x0, x1
   166e0:	lsl	x0, x0, #3
   166e4:	add	x0, x3, x0
   166e8:	str	x2, [x0, #208]
   166ec:	ldr	x1, [sp, #120]
   166f0:	ldr	x0, [sp, #112]
   166f4:	add	x0, x1, x0
   166f8:	ldr	x1, [sp, #144]
   166fc:	add	x2, x1, #0x1
   16700:	str	x2, [sp, #144]
   16704:	ldr	x2, [sp, #160]
   16708:	cmp	x2, x0
   1670c:	cset	w0, cs  // cs = hs, nlast
   16710:	and	w3, w0, #0xff
   16714:	ldr	x2, [sp, #40]
   16718:	mov	x0, x1
   1671c:	lsl	x0, x0, #2
   16720:	add	x0, x0, x1
   16724:	lsl	x0, x0, #3
   16728:	add	x0, x2, x0
   1672c:	mov	w1, w3
   16730:	strb	w1, [x0, #240]
   16734:	ldr	x0, [sp, #160]
   16738:	add	x0, x0, #0x1
   1673c:	str	x0, [sp, #160]
   16740:	ldr	x1, [sp, #160]
   16744:	ldr	x0, [sp, #96]
   16748:	cmp	x1, x0
   1674c:	b.cc	166b4 <GOMP_single_copy_end@@GOMP_1.0+0x19a4>  // b.lo, b.ul, b.last
   16750:	ldr	x0, [sp, #96]
   16754:	str	x0, [sp, #160]
   16758:	b	167f4 <GOMP_single_copy_end@@GOMP_1.0+0x1ae4>
   1675c:	ldr	x0, [sp, #160]
   16760:	add	x0, x0, #0x5
   16764:	lsl	x0, x0, #3
   16768:	ldr	x1, [sp, #24]
   1676c:	add	x0, x1, x0
   16770:	ldr	x0, [x0]
   16774:	str	x0, [sp, #88]
   16778:	ldr	x0, [sp, #88]
   1677c:	add	x0, x0, #0x8
   16780:	ldr	x0, [x0]
   16784:	cmp	x0, #0x1
   16788:	b.ne	167e4 <GOMP_single_copy_end@@GOMP_1.0+0x1ad4>  // b.any
   1678c:	ldr	x0, [sp, #88]
   16790:	ldr	x2, [x0]
   16794:	ldr	x3, [sp, #40]
   16798:	ldr	x1, [sp, #144]
   1679c:	mov	x0, x1
   167a0:	lsl	x0, x0, #2
   167a4:	add	x0, x0, x1
   167a8:	lsl	x0, x0, #3
   167ac:	add	x0, x3, x0
   167b0:	str	x2, [x0, #208]
   167b4:	ldr	x1, [sp, #144]
   167b8:	add	x0, x1, #0x1
   167bc:	str	x0, [sp, #144]
   167c0:	ldr	x2, [sp, #40]
   167c4:	mov	x0, x1
   167c8:	lsl	x0, x0, #2
   167cc:	add	x0, x0, x1
   167d0:	lsl	x0, x0, #3
   167d4:	add	x0, x2, x0
   167d8:	mov	w1, #0x1                   	// #1
   167dc:	strb	w1, [x0, #240]
   167e0:	b	167e8 <GOMP_single_copy_end@@GOMP_1.0+0x1ad8>
   167e4:	nop
   167e8:	ldr	x0, [sp, #160]
   167ec:	add	x0, x0, #0x1
   167f0:	str	x0, [sp, #160]
   167f4:	ldr	x1, [sp, #160]
   167f8:	ldr	x0, [sp, #168]
   167fc:	cmp	x1, x0
   16800:	b.cc	1675c <GOMP_single_copy_end@@GOMP_1.0+0x1a4c>  // b.lo, b.ul, b.last
   16804:	ldr	x0, [sp, #40]
   16808:	ldr	x1, [sp, #168]
   1680c:	str	x1, [x0, #72]
   16810:	ldr	x0, [sp, #40]
   16814:	str	xzr, [x0, #80]
   16818:	ldr	x0, [sp, #32]
   1681c:	ldr	x0, [x0, #56]
   16820:	cmp	x0, #0x0
   16824:	b.ne	1684c <GOMP_single_copy_end@@GOMP_1.0+0x1b3c>  // b.any
   16828:	ldr	x0, [sp, #168]
   1682c:	lsl	x0, x0, #1
   16830:	mov	x1, #0xc                   	// #12
   16834:	cmp	x0, #0xc
   16838:	csel	x0, x0, x1, cs  // cs = hs, nlast
   1683c:	bl	15b14 <GOMP_single_copy_end@@GOMP_1.0+0xe04>
   16840:	mov	x1, x0
   16844:	ldr	x0, [sp, #32]
   16848:	str	x1, [x0, #56]
   1684c:	str	xzr, [sp, #160]
   16850:	b	16cf4 <GOMP_single_copy_end@@GOMP_1.0+0x1fe4>
   16854:	ldr	x2, [sp, #40]
   16858:	ldr	x1, [sp, #160]
   1685c:	mov	x0, x1
   16860:	lsl	x0, x0, #2
   16864:	add	x0, x0, x1
   16868:	lsl	x0, x0, #3
   1686c:	add	x0, x2, x0
   16870:	str	xzr, [x0, #216]
   16874:	ldr	x2, [sp, #40]
   16878:	ldr	x1, [sp, #160]
   1687c:	mov	x0, x1
   16880:	lsl	x0, x0, #2
   16884:	add	x0, x0, x1
   16888:	lsl	x0, x0, #3
   1688c:	add	x0, x2, x0
   16890:	str	xzr, [x0, #224]
   16894:	ldr	x2, [sp, #40]
   16898:	ldr	x1, [sp, #160]
   1689c:	mov	x0, x1
   168a0:	lsl	x0, x0, #2
   168a4:	add	x0, x0, x1
   168a8:	lsl	x0, x0, #3
   168ac:	add	x0, x2, x0
   168b0:	ldr	x1, [sp, #40]
   168b4:	str	x1, [x0, #232]
   168b8:	ldr	x2, [sp, #40]
   168bc:	ldr	x1, [sp, #160]
   168c0:	mov	x0, x1
   168c4:	lsl	x0, x0, #2
   168c8:	add	x0, x0, x1
   168cc:	lsl	x0, x0, #3
   168d0:	add	x0, x2, x0
   168d4:	strb	wzr, [x0, #241]
   168d8:	ldr	x2, [sp, #40]
   168dc:	ldr	x1, [sp, #160]
   168e0:	mov	x0, x1
   168e4:	lsl	x0, x0, #2
   168e8:	add	x0, x0, x1
   168ec:	lsl	x0, x0, #3
   168f0:	add	x0, x2, x0
   168f4:	strb	wzr, [x0, #242]
   168f8:	ldr	x0, [sp, #32]
   168fc:	add	x3, x0, #0x38
   16900:	ldr	x1, [sp, #160]
   16904:	mov	x0, x1
   16908:	lsl	x0, x0, #2
   1690c:	add	x0, x0, x1
   16910:	lsl	x0, x0, #3
   16914:	add	x0, x0, #0xd0
   16918:	ldr	x1, [sp, #40]
   1691c:	add	x0, x1, x0
   16920:	mov	w2, #0x1                   	// #1
   16924:	mov	x1, x0
   16928:	mov	x0, x3
   1692c:	bl	15efc <GOMP_single_copy_end@@GOMP_1.0+0x11ec>
   16930:	str	x0, [sp, #64]
   16934:	str	xzr, [sp, #136]
   16938:	str	xzr, [sp, #128]
   1693c:	ldr	x0, [sp, #64]
   16940:	ldr	x0, [x0]
   16944:	cmp	x0, #0x0
   16948:	b.eq	16bf8 <GOMP_single_copy_end@@GOMP_1.0+0x1ee8>  // b.none
   1694c:	ldr	x0, [sp, #64]
   16950:	ldr	x0, [x0]
   16954:	ldr	x0, [x0, #24]
   16958:	ldr	x1, [sp, #40]
   1695c:	cmp	x1, x0
   16960:	b.ne	1698c <GOMP_single_copy_end@@GOMP_1.0+0x1c7c>  // b.any
   16964:	ldr	x2, [sp, #40]
   16968:	ldr	x1, [sp, #160]
   1696c:	mov	x0, x1
   16970:	lsl	x0, x0, #2
   16974:	add	x0, x0, x1
   16978:	lsl	x0, x0, #3
   1697c:	add	x0, x2, x0
   16980:	mov	w1, #0x1                   	// #1
   16984:	strb	w1, [x0, #241]
   16988:	b	16ce8 <GOMP_single_copy_end@@GOMP_1.0+0x1fd8>
   1698c:	ldr	x0, [sp, #64]
   16990:	ldr	x0, [x0]
   16994:	str	x0, [sp, #152]
   16998:	b	16b90 <GOMP_single_copy_end@@GOMP_1.0+0x1e80>
   1699c:	ldr	x0, [sp, #152]
   169a0:	ldrb	w0, [x0, #34]
   169a4:	cmp	w0, #0x0
   169a8:	b.ne	16ba0 <GOMP_single_copy_end@@GOMP_1.0+0x1e90>  // b.any
   169ac:	ldr	x0, [sp, #152]
   169b0:	str	x0, [sp, #128]
   169b4:	ldr	x2, [sp, #40]
   169b8:	ldr	x1, [sp, #160]
   169bc:	mov	x0, x1
   169c0:	lsl	x0, x0, #2
   169c4:	add	x0, x0, x1
   169c8:	lsl	x0, x0, #3
   169cc:	add	x0, x2, x0
   169d0:	ldrb	w0, [x0, #240]
   169d4:	cmp	w0, #0x0
   169d8:	b.eq	169ec <GOMP_single_copy_end@@GOMP_1.0+0x1cdc>  // b.none
   169dc:	ldr	x0, [sp, #152]
   169e0:	ldrb	w0, [x0, #32]
   169e4:	cmp	w0, #0x0
   169e8:	b.ne	16b78 <GOMP_single_copy_end@@GOMP_1.0+0x1e68>  // b.any
   169ec:	ldr	x0, [sp, #152]
   169f0:	ldrb	w0, [x0, #32]
   169f4:	eor	w0, w0, #0x1
   169f8:	and	w0, w0, #0xff
   169fc:	cmp	w0, #0x0
   16a00:	b.eq	16a0c <GOMP_single_copy_end@@GOMP_1.0+0x1cfc>  // b.none
   16a04:	ldr	x0, [sp, #152]
   16a08:	str	x0, [sp, #136]
   16a0c:	ldr	x0, [sp, #152]
   16a10:	ldr	x0, [x0, #24]
   16a14:	str	x0, [sp, #56]
   16a18:	ldr	x0, [sp, #56]
   16a1c:	ldr	x0, [x0, #48]
   16a20:	cmp	x0, #0x0
   16a24:	b.ne	16a84 <GOMP_single_copy_end@@GOMP_1.0+0x1d74>  // b.any
   16a28:	mov	x0, #0x40                  	// #64
   16a2c:	bl	8dd0 <fprintf@plt+0x1a0>
   16a30:	mov	x1, x0
   16a34:	ldr	x0, [sp, #56]
   16a38:	str	x1, [x0, #48]
   16a3c:	ldr	x0, [sp, #56]
   16a40:	ldr	x0, [x0, #48]
   16a44:	mov	x1, #0x1                   	// #1
   16a48:	str	x1, [x0]
   16a4c:	ldr	x0, [sp, #56]
   16a50:	ldr	x0, [x0, #48]
   16a54:	mov	x1, #0x6                   	// #6
   16a58:	str	x1, [x0, #8]
   16a5c:	ldr	x0, [sp, #56]
   16a60:	ldr	x0, [x0, #48]
   16a64:	ldr	x1, [sp, #40]
   16a68:	str	x1, [x0, #16]
   16a6c:	ldr	x0, [sp, #40]
   16a70:	ldr	x0, [x0, #80]
   16a74:	add	x1, x0, #0x1
   16a78:	ldr	x0, [sp, #40]
   16a7c:	str	x1, [x0, #80]
   16a80:	b	16b84 <GOMP_single_copy_end@@GOMP_1.0+0x1e74>
   16a84:	ldr	x0, [sp, #56]
   16a88:	ldr	x0, [x0, #48]
   16a8c:	ldr	x0, [x0]
   16a90:	cmp	x0, #0x0
   16a94:	b.eq	16ac4 <GOMP_single_copy_end@@GOMP_1.0+0x1db4>  // b.none
   16a98:	ldr	x0, [sp, #56]
   16a9c:	ldr	x0, [x0, #48]
   16aa0:	ldr	x1, [sp, #56]
   16aa4:	ldr	x1, [x1, #48]
   16aa8:	ldr	x1, [x1]
   16aac:	sub	x1, x1, #0x1
   16ab0:	add	x1, x1, #0x2
   16ab4:	ldr	x0, [x0, x1, lsl #3]
   16ab8:	ldr	x1, [sp, #40]
   16abc:	cmp	x1, x0
   16ac0:	b.eq	16b80 <GOMP_single_copy_end@@GOMP_1.0+0x1e70>  // b.none
   16ac4:	ldr	x0, [sp, #56]
   16ac8:	ldr	x0, [x0, #48]
   16acc:	ldr	x1, [x0]
   16ad0:	ldr	x0, [sp, #56]
   16ad4:	ldr	x0, [x0, #48]
   16ad8:	ldr	x0, [x0, #8]
   16adc:	cmp	x1, x0
   16ae0:	b.ne	16b38 <GOMP_single_copy_end@@GOMP_1.0+0x1e28>  // b.any
   16ae4:	ldr	x0, [sp, #56]
   16ae8:	ldr	x0, [x0, #48]
   16aec:	ldr	x0, [x0, #8]
   16af0:	add	x1, x0, #0x1
   16af4:	ldr	x0, [sp, #56]
   16af8:	ldr	x0, [x0, #48]
   16afc:	lsl	x1, x1, #1
   16b00:	str	x1, [x0, #8]
   16b04:	ldr	x0, [sp, #56]
   16b08:	ldr	x2, [x0, #48]
   16b0c:	ldr	x0, [sp, #56]
   16b10:	ldr	x0, [x0, #48]
   16b14:	ldr	x0, [x0, #8]
   16b18:	add	x0, x0, #0x2
   16b1c:	lsl	x0, x0, #3
   16b20:	mov	x1, x0
   16b24:	mov	x0, x2
   16b28:	bl	8e54 <fprintf@plt+0x224>
   16b2c:	mov	x1, x0
   16b30:	ldr	x0, [sp, #56]
   16b34:	str	x1, [x0, #48]
   16b38:	ldr	x0, [sp, #56]
   16b3c:	ldr	x2, [x0, #48]
   16b40:	ldr	x0, [sp, #56]
   16b44:	ldr	x1, [x0, #48]
   16b48:	ldr	x0, [x1]
   16b4c:	add	x3, x0, #0x1
   16b50:	str	x3, [x1]
   16b54:	add	x0, x0, #0x2
   16b58:	ldr	x1, [sp, #40]
   16b5c:	str	x1, [x2, x0, lsl #3]
   16b60:	ldr	x0, [sp, #40]
   16b64:	ldr	x0, [x0, #80]
   16b68:	add	x1, x0, #0x1
   16b6c:	ldr	x0, [sp, #40]
   16b70:	str	x1, [x0, #80]
   16b74:	b	16b84 <GOMP_single_copy_end@@GOMP_1.0+0x1e74>
   16b78:	nop
   16b7c:	b	16b84 <GOMP_single_copy_end@@GOMP_1.0+0x1e74>
   16b80:	nop
   16b84:	ldr	x0, [sp, #152]
   16b88:	ldr	x0, [x0, #8]
   16b8c:	str	x0, [sp, #152]
   16b90:	ldr	x0, [sp, #152]
   16b94:	cmp	x0, #0x0
   16b98:	b.ne	1699c <GOMP_single_copy_end@@GOMP_1.0+0x1c8c>  // b.any
   16b9c:	b	16ba4 <GOMP_single_copy_end@@GOMP_1.0+0x1e94>
   16ba0:	nop
   16ba4:	ldr	x0, [sp, #64]
   16ba8:	ldr	x2, [x0]
   16bac:	ldr	x3, [sp, #40]
   16bb0:	ldr	x1, [sp, #160]
   16bb4:	mov	x0, x1
   16bb8:	lsl	x0, x0, #2
   16bbc:	add	x0, x0, x1
   16bc0:	lsl	x0, x0, #3
   16bc4:	add	x0, x3, x0
   16bc8:	str	x2, [x0, #216]
   16bcc:	ldr	x0, [sp, #64]
   16bd0:	ldr	x2, [x0]
   16bd4:	ldr	x1, [sp, #160]
   16bd8:	mov	x0, x1
   16bdc:	lsl	x0, x0, #2
   16be0:	add	x0, x0, x1
   16be4:	lsl	x0, x0, #3
   16be8:	add	x0, x0, #0xd0
   16bec:	ldr	x1, [sp, #40]
   16bf0:	add	x0, x1, x0
   16bf4:	str	x0, [x2, #16]
   16bf8:	ldr	x1, [sp, #160]
   16bfc:	mov	x0, x1
   16c00:	lsl	x0, x0, #2
   16c04:	add	x0, x0, x1
   16c08:	lsl	x0, x0, #3
   16c0c:	add	x0, x0, #0xd0
   16c10:	ldr	x1, [sp, #40]
   16c14:	add	x1, x1, x0
   16c18:	ldr	x0, [sp, #64]
   16c1c:	str	x1, [x0]
   16c20:	ldr	x2, [sp, #40]
   16c24:	ldr	x1, [sp, #160]
   16c28:	mov	x0, x1
   16c2c:	lsl	x0, x0, #2
   16c30:	add	x0, x0, x1
   16c34:	lsl	x0, x0, #3
   16c38:	add	x0, x2, x0
   16c3c:	ldrb	w0, [x0, #240]
   16c40:	eor	w0, w0, #0x1
   16c44:	and	w0, w0, #0xff
   16c48:	cmp	w0, #0x0
   16c4c:	b.eq	16ce8 <GOMP_single_copy_end@@GOMP_1.0+0x1fd8>  // b.none
   16c50:	ldr	x0, [sp, #136]
   16c54:	cmp	x0, #0x0
   16c58:	b.eq	16ce8 <GOMP_single_copy_end@@GOMP_1.0+0x1fd8>  // b.none
   16c5c:	ldr	x1, [sp, #136]
   16c60:	ldr	x0, [sp, #128]
   16c64:	cmp	x1, x0
   16c68:	b.eq	16cdc <GOMP_single_copy_end@@GOMP_1.0+0x1fcc>  // b.none
   16c6c:	ldr	x0, [sp, #136]
   16c70:	ldr	x0, [x0, #8]
   16c74:	ldr	x1, [sp, #136]
   16c78:	ldr	x1, [x1, #16]
   16c7c:	str	x1, [x0, #16]
   16c80:	ldr	x0, [sp, #136]
   16c84:	ldr	x0, [x0, #16]
   16c88:	ldr	x1, [sp, #136]
   16c8c:	ldr	x1, [x1, #8]
   16c90:	str	x1, [x0, #8]
   16c94:	ldr	x0, [sp, #128]
   16c98:	ldr	x1, [x0, #8]
   16c9c:	ldr	x0, [sp, #136]
   16ca0:	str	x1, [x0, #8]
   16ca4:	ldr	x0, [sp, #136]
   16ca8:	ldr	x1, [sp, #128]
   16cac:	str	x1, [x0, #16]
   16cb0:	ldr	x0, [sp, #128]
   16cb4:	ldr	x1, [sp, #136]
   16cb8:	str	x1, [x0, #8]
   16cbc:	ldr	x0, [sp, #136]
   16cc0:	ldr	x0, [x0, #8]
   16cc4:	cmp	x0, #0x0
   16cc8:	b.eq	16cdc <GOMP_single_copy_end@@GOMP_1.0+0x1fcc>  // b.none
   16ccc:	ldr	x0, [sp, #136]
   16cd0:	ldr	x0, [x0, #8]
   16cd4:	ldr	x1, [sp, #136]
   16cd8:	str	x1, [x0, #16]
   16cdc:	ldr	x0, [sp, #136]
   16ce0:	mov	w1, #0x1                   	// #1
   16ce4:	strb	w1, [x0, #34]
   16ce8:	ldr	x0, [sp, #160]
   16cec:	add	x0, x0, #0x1
   16cf0:	str	x0, [sp, #160]
   16cf4:	ldr	x1, [sp, #160]
   16cf8:	ldr	x0, [sp, #168]
   16cfc:	cmp	x1, x0
   16d00:	b.cc	16854 <GOMP_single_copy_end@@GOMP_1.0+0x1b44>  // b.lo, b.ul, b.last
   16d04:	nop
   16d08:	nop
   16d0c:	ldp	x29, x30, [sp], #176
   16d10:	ret

0000000000016d14 <GOMP_task@@GOMP_2.0>:
   16d14:	stp	x29, x30, [sp, #-464]!
   16d18:	mov	x29, sp
   16d1c:	stp	x19, x20, [sp, #16]
   16d20:	stp	x21, x22, [sp, #32]
   16d24:	stp	x23, x24, [sp, #48]
   16d28:	stp	x25, x26, [sp, #64]
   16d2c:	str	x27, [sp, #80]
   16d30:	str	x0, [x29, #152]
   16d34:	str	x1, [x29, #144]
   16d38:	str	x2, [x29, #136]
   16d3c:	str	x3, [x29, #128]
   16d40:	str	x4, [x29, #120]
   16d44:	strb	w5, [x29, #119]
   16d48:	str	w6, [x29, #112]
   16d4c:	str	x7, [x29, #104]
   16d50:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   16d54:	str	x0, [x29, #448]
   16d58:	ldr	x0, [x29, #448]
   16d5c:	ldr	x0, [x0, #16]
   16d60:	str	x0, [x29, #440]
   16d64:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   16d68:	add	x0, x0, #0x574
   16d6c:	ldrb	w0, [x0]
   16d70:	and	x0, x0, #0xff
   16d74:	cmp	x0, #0x0
   16d78:	b.eq	16e18 <GOMP_task@@GOMP_2.0+0x104>  // b.none
   16d7c:	ldr	x0, [x29, #440]
   16d80:	cmp	x0, #0x0
   16d84:	b.eq	16e18 <GOMP_task@@GOMP_2.0+0x104>  // b.none
   16d88:	ldr	x0, [x29, #440]
   16d8c:	add	x0, x0, #0x80
   16d90:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   16d94:	and	w0, w0, #0xff
   16d98:	cmp	w0, #0x0
   16d9c:	b.ne	174e8 <GOMP_task@@GOMP_2.0+0x7d4>  // b.any
   16da0:	ldr	x0, [x29, #448]
   16da4:	ldr	x0, [x0, #80]
   16da8:	ldr	x0, [x0, #40]
   16dac:	cmp	x0, #0x0
   16db0:	b.eq	16e18 <GOMP_task@@GOMP_2.0+0x104>  // b.none
   16db4:	ldr	x0, [x29, #448]
   16db8:	ldr	x0, [x0, #80]
   16dbc:	ldr	x0, [x0, #40]
   16dc0:	ldrb	w0, [x0, #49]
   16dc4:	cmp	w0, #0x0
   16dc8:	b.ne	174f0 <GOMP_task@@GOMP_2.0+0x7dc>  // b.any
   16dcc:	ldr	x0, [x29, #448]
   16dd0:	ldr	x0, [x0, #80]
   16dd4:	ldr	x0, [x0, #40]
   16dd8:	ldrb	w0, [x0, #50]
   16ddc:	cmp	w0, #0x0
   16de0:	b.eq	16e18 <GOMP_task@@GOMP_2.0+0x104>  // b.none
   16de4:	ldr	x0, [x29, #448]
   16de8:	ldr	x0, [x0, #80]
   16dec:	ldr	x0, [x0, #40]
   16df0:	ldr	x0, [x0]
   16df4:	cmp	x0, #0x0
   16df8:	b.eq	16e18 <GOMP_task@@GOMP_2.0+0x104>  // b.none
   16dfc:	ldr	x0, [x29, #448]
   16e00:	ldr	x0, [x0, #80]
   16e04:	ldr	x0, [x0, #40]
   16e08:	ldr	x0, [x0]
   16e0c:	ldrb	w0, [x0, #49]
   16e10:	cmp	w0, #0x0
   16e14:	b.ne	174f8 <GOMP_task@@GOMP_2.0+0x7e4>  // b.any
   16e18:	ldr	w0, [x29, #112]
   16e1c:	and	w0, w0, #0x10
   16e20:	cmp	w0, #0x0
   16e24:	b.ne	16e30 <GOMP_task@@GOMP_2.0+0x11c>  // b.any
   16e28:	str	wzr, [x29, #464]
   16e2c:	b	16e58 <GOMP_task@@GOMP_2.0+0x144>
   16e30:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   16e34:	add	x0, x0, #0x578
   16e38:	ldr	w0, [x0]
   16e3c:	ldr	w1, [x29, #464]
   16e40:	cmp	w1, w0
   16e44:	b.le	16e58 <GOMP_task@@GOMP_2.0+0x144>
   16e48:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   16e4c:	add	x0, x0, #0x578
   16e50:	ldr	w0, [x0]
   16e54:	str	w0, [x29, #464]
   16e58:	ldrb	w0, [x29, #119]
   16e5c:	eor	w0, w0, #0x1
   16e60:	and	w0, w0, #0xff
   16e64:	cmp	w0, #0x0
   16e68:	b.ne	16eb8 <GOMP_task@@GOMP_2.0+0x1a4>  // b.any
   16e6c:	ldr	x0, [x29, #440]
   16e70:	cmp	x0, #0x0
   16e74:	b.eq	16eb8 <GOMP_task@@GOMP_2.0+0x1a4>  // b.none
   16e78:	ldr	x0, [x29, #448]
   16e7c:	ldr	x0, [x0, #80]
   16e80:	cmp	x0, #0x0
   16e84:	b.eq	16e9c <GOMP_task@@GOMP_2.0+0x188>  // b.none
   16e88:	ldr	x0, [x29, #448]
   16e8c:	ldr	x0, [x0, #80]
   16e90:	ldrb	w0, [x0, #205]
   16e94:	cmp	w0, #0x0
   16e98:	b.ne	16eb8 <GOMP_task@@GOMP_2.0+0x1a4>  // b.any
   16e9c:	ldr	x0, [x29, #440]
   16ea0:	ldr	w1, [x0, #1320]
   16ea4:	ldr	x0, [x29, #440]
   16ea8:	ldr	w0, [x0]
   16eac:	lsl	w0, w0, #6
   16eb0:	cmp	w1, w0
   16eb4:	b.ls	170e4 <GOMP_task@@GOMP_2.0+0x3d0>  // b.plast
   16eb8:	ldr	w0, [x29, #112]
   16ebc:	and	w0, w0, #0x8
   16ec0:	cmp	w0, #0x0
   16ec4:	b.eq	16ef4 <GOMP_task@@GOMP_2.0+0x1e0>  // b.none
   16ec8:	ldr	x0, [x29, #448]
   16ecc:	ldr	x0, [x0, #80]
   16ed0:	cmp	x0, #0x0
   16ed4:	b.eq	16ef4 <GOMP_task@@GOMP_2.0+0x1e0>  // b.none
   16ed8:	ldr	x0, [x29, #448]
   16edc:	ldr	x0, [x0, #80]
   16ee0:	ldr	x0, [x0, #56]
   16ee4:	cmp	x0, #0x0
   16ee8:	b.eq	16ef4 <GOMP_task@@GOMP_2.0+0x1e0>  // b.none
   16eec:	ldr	x0, [x29, #104]
   16ef0:	bl	1b798 <GOMP_taskwait_depend@@GOMP_5.0+0x120>
   16ef4:	ldr	x0, [x29, #448]
   16ef8:	ldr	x19, [x0, #80]
   16efc:	mov	w0, #0x0                   	// #0
   16f00:	bl	15784 <GOMP_single_copy_end@@GOMP_1.0+0xa74>
   16f04:	mov	x1, x0
   16f08:	add	x0, x29, #0xa8
   16f0c:	mov	x2, x1
   16f10:	mov	x1, x19
   16f14:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   16f18:	mov	w0, #0x1                   	// #1
   16f1c:	str	w0, [x29, #368]
   16f20:	ldr	x0, [x29, #448]
   16f24:	ldr	x0, [x0, #80]
   16f28:	cmp	x0, #0x0
   16f2c:	b.eq	16f44 <GOMP_task@@GOMP_2.0+0x230>  // b.none
   16f30:	ldr	x0, [x29, #448]
   16f34:	ldr	x0, [x0, #80]
   16f38:	ldrb	w0, [x0, #205]
   16f3c:	cmp	w0, #0x0
   16f40:	b.ne	16f54 <GOMP_task@@GOMP_2.0+0x240>  // b.any
   16f44:	ldr	w0, [x29, #112]
   16f48:	and	w0, w0, #0x2
   16f4c:	cmp	w0, #0x0
   16f50:	b.eq	16f5c <GOMP_task@@GOMP_2.0+0x248>  // b.none
   16f54:	mov	w0, #0x1                   	// #1
   16f58:	b	16f60 <GOMP_task@@GOMP_2.0+0x24c>
   16f5c:	mov	w0, #0x0                   	// #0
   16f60:	and	w0, w0, #0x1
   16f64:	and	w0, w0, #0xff
   16f68:	strb	w0, [x29, #373]
   16f6c:	ldr	w0, [x29, #464]
   16f70:	str	w0, [x29, #256]
   16f74:	ldr	x0, [x29, #448]
   16f78:	ldr	x0, [x0, #80]
   16f7c:	cmp	x0, #0x0
   16f80:	b.eq	16fa4 <GOMP_task@@GOMP_2.0+0x290>  // b.none
   16f84:	ldr	x0, [x29, #448]
   16f88:	ldr	x0, [x0, #80]
   16f8c:	ldrb	w0, [x0, #204]
   16f90:	strb	w0, [x29, #372]
   16f94:	ldr	x0, [x29, #448]
   16f98:	ldr	x0, [x0, #80]
   16f9c:	ldr	x0, [x0, #40]
   16fa0:	str	x0, [x29, #208]
   16fa4:	ldr	x0, [x29, #448]
   16fa8:	add	x1, x29, #0xa8
   16fac:	str	x1, [x0, #80]
   16fb0:	ldr	x0, [x29, #136]
   16fb4:	cmp	x0, #0x0
   16fb8:	cset	w0, ne  // ne = any
   16fbc:	and	w0, w0, #0xff
   16fc0:	and	x0, x0, #0xff
   16fc4:	cmp	x0, #0x0
   16fc8:	b.eq	17088 <GOMP_task@@GOMP_2.0+0x374>  // b.none
   16fcc:	mov	x0, sp
   16fd0:	mov	x19, x0
   16fd4:	ldr	x1, [x29, #128]
   16fd8:	ldr	x0, [x29, #120]
   16fdc:	add	x0, x1, x0
   16fe0:	sub	x0, x0, #0x1
   16fe4:	sub	x1, x0, #0x1
   16fe8:	str	x1, [x29, #392]
   16fec:	mov	x1, x0
   16ff0:	mov	x26, x1
   16ff4:	mov	x27, #0x0                   	// #0
   16ff8:	lsr	x1, x26, #61
   16ffc:	lsl	x23, x27, #3
   17000:	orr	x23, x1, x23
   17004:	lsl	x22, x26, #3
   17008:	mov	x1, x0
   1700c:	mov	x24, x1
   17010:	mov	x25, #0x0                   	// #0
   17014:	lsr	x1, x24, #61
   17018:	lsl	x21, x25, #3
   1701c:	orr	x21, x1, x21
   17020:	lsl	x20, x24, #3
   17024:	add	x0, x0, #0xf
   17028:	lsr	x0, x0, #4
   1702c:	lsl	x0, x0, #4
   17030:	sub	sp, sp, x0
   17034:	mov	x0, sp
   17038:	add	x0, x0, #0x0
   1703c:	str	x0, [x29, #384]
   17040:	ldr	x0, [x29, #384]
   17044:	mov	x1, x0
   17048:	ldr	x0, [x29, #120]
   1704c:	add	x0, x1, x0
   17050:	sub	x0, x0, #0x1
   17054:	ldr	x1, [x29, #120]
   17058:	neg	x1, x1
   1705c:	and	x0, x0, x1
   17060:	str	x0, [x29, #376]
   17064:	ldr	x2, [x29, #136]
   17068:	ldr	x1, [x29, #144]
   1706c:	ldr	x0, [x29, #376]
   17070:	blr	x2
   17074:	ldr	x1, [x29, #152]
   17078:	ldr	x0, [x29, #376]
   1707c:	blr	x1
   17080:	mov	sp, x19
   17084:	b	17094 <GOMP_task@@GOMP_2.0+0x380>
   17088:	ldr	x1, [x29, #152]
   1708c:	ldr	x0, [x29, #144]
   17090:	blr	x1
   17094:	add	x0, x29, #0xa8
   17098:	add	x0, x0, #0x8
   1709c:	mov	w1, #0x0                   	// #0
   170a0:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   170a4:	and	w0, w0, #0xff
   170a8:	eor	w0, w0, #0x1
   170ac:	and	w0, w0, #0xff
   170b0:	cmp	w0, #0x0
   170b4:	b.eq	170dc <GOMP_task@@GOMP_2.0+0x3c8>  // b.none
   170b8:	ldr	x0, [x29, #440]
   170bc:	add	x0, x0, #0x500
   170c0:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   170c4:	add	x0, x29, #0xa8
   170c8:	add	x0, x0, #0x8
   170cc:	bl	1643c <GOMP_single_copy_end@@GOMP_1.0+0x172c>
   170d0:	ldr	x0, [x29, #440]
   170d4:	add	x0, x0, #0x500
   170d8:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   170dc:	bl	16330 <GOMP_single_copy_end@@GOMP_1.0+0x1620>
   170e0:	b	174fc <GOMP_task@@GOMP_2.0+0x7e8>
   170e4:	ldr	x0, [x29, #448]
   170e8:	ldr	x0, [x0, #80]
   170ec:	str	x0, [x29, #432]
   170f0:	ldr	x0, [x29, #432]
   170f4:	ldr	x0, [x0, #40]
   170f8:	str	x0, [x29, #424]
   170fc:	str	xzr, [x29, #456]
   17100:	ldr	w0, [x29, #112]
   17104:	and	w0, w0, #0x8
   17108:	cmp	w0, #0x0
   1710c:	b.eq	17164 <GOMP_task@@GOMP_2.0+0x450>  // b.none
   17110:	ldr	x0, [x29, #104]
   17114:	ldr	x0, [x0]
   17118:	cmp	x0, #0x0
   1711c:	b.eq	17140 <GOMP_task@@GOMP_2.0+0x42c>  // b.none
   17120:	ldr	x0, [x29, #104]
   17124:	ldr	x0, [x0]
   17128:	mov	x1, x0
   1712c:	mov	x0, x1
   17130:	lsl	x0, x0, #2
   17134:	add	x0, x0, x1
   17138:	lsl	x0, x0, #3
   1713c:	b	17160 <GOMP_task@@GOMP_2.0+0x44c>
   17140:	ldr	x0, [x29, #104]
   17144:	add	x0, x0, #0x8
   17148:	ldr	x0, [x0]
   1714c:	mov	x1, x0
   17150:	mov	x0, x1
   17154:	lsl	x0, x0, #2
   17158:	add	x0, x0, x1
   1715c:	lsl	x0, x0, #3
   17160:	str	x0, [x29, #456]
   17164:	ldr	x1, [x29, #128]
   17168:	ldr	x0, [x29, #456]
   1716c:	add	x1, x1, x0
   17170:	ldr	x0, [x29, #120]
   17174:	add	x0, x1, x0
   17178:	add	x0, x0, #0xcf
   1717c:	bl	8dd0 <fprintf@plt+0x1a0>
   17180:	str	x0, [x29, #416]
   17184:	ldr	x1, [x29, #416]
   17188:	ldr	x0, [x29, #456]
   1718c:	add	x1, x1, x0
   17190:	ldr	x0, [x29, #120]
   17194:	add	x0, x1, x0
   17198:	add	x0, x0, #0xcf
   1719c:	ldr	x1, [x29, #120]
   171a0:	neg	x1, x1
   171a4:	and	x0, x0, x1
   171a8:	str	x0, [x29, #408]
   171ac:	mov	w0, #0x0                   	// #0
   171b0:	bl	15784 <GOMP_single_copy_end@@GOMP_1.0+0xa74>
   171b4:	mov	x2, x0
   171b8:	ldr	x1, [x29, #432]
   171bc:	ldr	x0, [x29, #416]
   171c0:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   171c4:	ldr	x0, [x29, #416]
   171c8:	ldr	w1, [x29, #464]
   171cc:	str	w1, [x0, #88]
   171d0:	ldr	x0, [x29, #416]
   171d4:	mov	w1, #0x1                   	// #1
   171d8:	str	w1, [x0, #200]
   171dc:	ldr	x0, [x29, #432]
   171e0:	ldrb	w1, [x0, #204]
   171e4:	ldr	x0, [x29, #416]
   171e8:	strb	w1, [x0, #204]
   171ec:	ldr	x0, [x29, #416]
   171f0:	ldr	x1, [x29, #424]
   171f4:	str	x1, [x0, #40]
   171f8:	ldr	x0, [x29, #448]
   171fc:	ldr	x1, [x29, #416]
   17200:	str	x1, [x0, #80]
   17204:	ldr	x0, [x29, #136]
   17208:	cmp	x0, #0x0
   1720c:	b.eq	17230 <GOMP_task@@GOMP_2.0+0x51c>  // b.none
   17210:	ldr	x2, [x29, #136]
   17214:	ldr	x1, [x29, #144]
   17218:	ldr	x0, [x29, #408]
   1721c:	blr	x2
   17220:	ldr	x0, [x29, #416]
   17224:	mov	w1, #0x1                   	// #1
   17228:	strb	w1, [x0, #206]
   1722c:	b	17244 <GOMP_task@@GOMP_2.0+0x530>
   17230:	ldr	x0, [x29, #128]
   17234:	mov	x2, x0
   17238:	ldr	x1, [x29, #144]
   1723c:	ldr	x0, [x29, #408]
   17240:	bl	86a0 <memcpy@plt>
   17244:	ldr	x0, [x29, #448]
   17248:	ldr	x1, [x29, #432]
   1724c:	str	x1, [x0, #80]
   17250:	ldr	x0, [x29, #416]
   17254:	mov	w1, #0x2                   	// #2
   17258:	str	w1, [x0, #200]
   1725c:	ldr	x0, [x29, #416]
   17260:	ldr	x1, [x29, #152]
   17264:	str	x1, [x0, #184]
   17268:	ldr	x0, [x29, #416]
   1726c:	ldr	x1, [x29, #408]
   17270:	str	x1, [x0, #192]
   17274:	ldr	w0, [x29, #112]
   17278:	lsr	w0, w0, #1
   1727c:	and	w0, w0, #0x1
   17280:	cmp	w0, #0x0
   17284:	cset	w0, ne  // ne = any
   17288:	and	w1, w0, #0xff
   1728c:	ldr	x0, [x29, #416]
   17290:	strb	w1, [x0, #205]
   17294:	ldr	x0, [x29, #440]
   17298:	add	x0, x0, #0x500
   1729c:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   172a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   172a4:	add	x0, x0, #0x574
   172a8:	ldrb	w0, [x0]
   172ac:	and	x0, x0, #0xff
   172b0:	cmp	x0, #0x0
   172b4:	b.eq	1736c <GOMP_task@@GOMP_2.0+0x658>  // b.none
   172b8:	ldr	x0, [x29, #416]
   172bc:	ldrb	w0, [x0, #206]
   172c0:	eor	w0, w0, #0x1
   172c4:	and	w0, w0, #0xff
   172c8:	cmp	w0, #0x0
   172cc:	b.eq	1736c <GOMP_task@@GOMP_2.0+0x658>  // b.none
   172d0:	ldr	x0, [x29, #440]
   172d4:	add	x0, x0, #0x80
   172d8:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   172dc:	and	w0, w0, #0xff
   172e0:	cmp	w0, #0x0
   172e4:	b.eq	1731c <GOMP_task@@GOMP_2.0+0x608>  // b.none
   172e8:	nop
   172ec:	b	172fc <GOMP_task@@GOMP_2.0+0x5e8>
   172f0:	nop
   172f4:	b	172fc <GOMP_task@@GOMP_2.0+0x5e8>
   172f8:	nop
   172fc:	ldr	x0, [x29, #440]
   17300:	add	x0, x0, #0x500
   17304:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   17308:	ldr	x0, [x29, #416]
   1730c:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   17310:	ldr	x0, [x29, #416]
   17314:	bl	8a20 <free@plt>
   17318:	b	174fc <GOMP_task@@GOMP_2.0+0x7e8>
   1731c:	ldr	x0, [x29, #424]
   17320:	cmp	x0, #0x0
   17324:	b.eq	1736c <GOMP_task@@GOMP_2.0+0x658>  // b.none
   17328:	ldr	x0, [x29, #424]
   1732c:	ldrb	w0, [x0, #49]
   17330:	cmp	w0, #0x0
   17334:	b.ne	172f0 <GOMP_task@@GOMP_2.0+0x5dc>  // b.any
   17338:	ldr	x0, [x29, #424]
   1733c:	ldrb	w0, [x0, #50]
   17340:	cmp	w0, #0x0
   17344:	b.eq	1736c <GOMP_task@@GOMP_2.0+0x658>  // b.none
   17348:	ldr	x0, [x29, #424]
   1734c:	ldr	x0, [x0]
   17350:	cmp	x0, #0x0
   17354:	b.eq	1736c <GOMP_task@@GOMP_2.0+0x658>  // b.none
   17358:	ldr	x0, [x29, #424]
   1735c:	ldr	x0, [x0]
   17360:	ldrb	w0, [x0, #49]
   17364:	cmp	w0, #0x0
   17368:	b.ne	172f8 <GOMP_task@@GOMP_2.0+0x5e4>  // b.any
   1736c:	ldr	x0, [x29, #424]
   17370:	cmp	x0, #0x0
   17374:	b.eq	1738c <GOMP_task@@GOMP_2.0+0x678>  // b.none
   17378:	ldr	x0, [x29, #424]
   1737c:	ldr	x0, [x0, #56]
   17380:	add	x1, x0, #0x1
   17384:	ldr	x0, [x29, #424]
   17388:	str	x1, [x0, #56]
   1738c:	ldr	x0, [x29, #456]
   17390:	cmp	x0, #0x0
   17394:	b.eq	173c8 <GOMP_task@@GOMP_2.0+0x6b4>  // b.none
   17398:	ldr	x2, [x29, #104]
   1739c:	ldr	x1, [x29, #432]
   173a0:	ldr	x0, [x29, #416]
   173a4:	bl	16498 <GOMP_single_copy_end@@GOMP_1.0+0x1788>
   173a8:	ldr	x0, [x29, #416]
   173ac:	ldr	x0, [x0, #80]
   173b0:	cmp	x0, #0x0
   173b4:	b.eq	173c8 <GOMP_task@@GOMP_2.0+0x6b4>  // b.none
   173b8:	ldr	x0, [x29, #440]
   173bc:	add	x0, x0, #0x500
   173c0:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   173c4:	b	174fc <GOMP_task@@GOMP_2.0+0x7e8>
   173c8:	ldr	x0, [x29, #432]
   173cc:	add	x1, x0, #0x8
   173d0:	ldr	x0, [x29, #416]
   173d4:	ldrb	w0, [x0, #207]
   173d8:	mov	w6, w0
   173dc:	mov	w5, #0x0                   	// #0
   173e0:	mov	w4, #0x0                   	// #0
   173e4:	ldr	w3, [x29, #464]
   173e8:	ldr	x2, [x29, #416]
   173ec:	mov	w0, #0x1                   	// #1
   173f0:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   173f4:	ldr	x0, [x29, #424]
   173f8:	cmp	x0, #0x0
   173fc:	b.eq	1742c <GOMP_task@@GOMP_2.0+0x718>  // b.none
   17400:	ldr	x0, [x29, #424]
   17404:	add	x1, x0, #0x8
   17408:	ldr	x0, [x29, #416]
   1740c:	ldrb	w0, [x0, #207]
   17410:	mov	w6, w0
   17414:	mov	w5, #0x0                   	// #0
   17418:	mov	w4, #0x0                   	// #0
   1741c:	ldr	w3, [x29, #464]
   17420:	ldr	x2, [x29, #416]
   17424:	mov	w0, #0x2                   	// #2
   17428:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1742c:	ldr	x0, [x29, #440]
   17430:	add	x1, x0, #0x508
   17434:	ldr	x0, [x29, #416]
   17438:	ldrb	w0, [x0, #207]
   1743c:	mov	w6, w0
   17440:	mov	w5, #0x0                   	// #0
   17444:	mov	w4, #0x1                   	// #1
   17448:	ldr	w3, [x29, #464]
   1744c:	ldr	x2, [x29, #416]
   17450:	mov	w0, #0x0                   	// #0
   17454:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   17458:	ldr	x0, [x29, #440]
   1745c:	ldr	w0, [x0, #1320]
   17460:	add	w1, w0, #0x1
   17464:	ldr	x0, [x29, #440]
   17468:	str	w1, [x0, #1320]
   1746c:	ldr	x0, [x29, #440]
   17470:	ldr	w0, [x0, #1324]
   17474:	add	w1, w0, #0x1
   17478:	ldr	x0, [x29, #440]
   1747c:	str	w1, [x0, #1324]
   17480:	ldr	x0, [x29, #440]
   17484:	add	x0, x0, #0x80
   17488:	bl	1566c <GOMP_single_copy_end@@GOMP_1.0+0x95c>
   1748c:	ldr	x0, [x29, #440]
   17490:	ldr	w0, [x0, #1328]
   17494:	ldr	x1, [x29, #432]
   17498:	ldrb	w1, [x1, #204]
   1749c:	eor	w1, w1, #0x1
   174a0:	and	w1, w1, #0xff
   174a4:	add	w1, w0, w1
   174a8:	ldr	x0, [x29, #440]
   174ac:	ldr	w0, [x0]
   174b0:	cmp	w1, w0
   174b4:	cset	w0, cc  // cc = lo, ul, last
   174b8:	strb	w0, [x29, #407]
   174bc:	ldr	x0, [x29, #440]
   174c0:	add	x0, x0, #0x500
   174c4:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   174c8:	ldrb	w0, [x29, #407]
   174cc:	cmp	w0, #0x0
   174d0:	b.eq	174fc <GOMP_task@@GOMP_2.0+0x7e8>  // b.none
   174d4:	ldr	x0, [x29, #440]
   174d8:	add	x0, x0, #0x80
   174dc:	mov	w1, #0x1                   	// #1
   174e0:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   174e4:	b	174fc <GOMP_task@@GOMP_2.0+0x7e8>
   174e8:	nop
   174ec:	b	174fc <GOMP_task@@GOMP_2.0+0x7e8>
   174f0:	nop
   174f4:	b	174fc <GOMP_task@@GOMP_2.0+0x7e8>
   174f8:	nop
   174fc:	mov	sp, x29
   17500:	ldp	x19, x20, [sp, #16]
   17504:	ldp	x21, x22, [sp, #32]
   17508:	ldp	x23, x24, [sp, #48]
   1750c:	ldp	x25, x26, [sp, #64]
   17510:	ldr	x27, [sp, #80]
   17514:	ldp	x29, x30, [sp], #464
   17518:	ret

000000000001751c <GOMP_taskloop@@GOMP_4.5>:
   1751c:	sub	sp, sp, #0x2e0
   17520:	stp	x29, x30, [sp]
   17524:	mov	x29, sp
   17528:	stp	x19, x20, [sp, #16]
   1752c:	stp	x21, x22, [sp, #32]
   17530:	stp	x23, x24, [sp, #48]
   17534:	stp	x25, x26, [sp, #64]
   17538:	str	x27, [sp, #80]
   1753c:	str	x0, [x29, #280]
   17540:	str	x1, [x29, #272]
   17544:	str	x2, [x29, #264]
   17548:	str	x3, [x29, #256]
   1754c:	str	x4, [x29, #248]
   17550:	str	w5, [x29, #244]
   17554:	str	x6, [x29, #232]
   17558:	str	w7, [x29, #240]
   1755c:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   17560:	str	x0, [x29, #672]
   17564:	ldr	x0, [x29, #672]
   17568:	ldr	x0, [x0, #16]
   1756c:	str	x0, [x29, #664]
   17570:	ldr	x0, [x29, #664]
   17574:	cmp	x0, #0x0
   17578:	b.eq	17594 <GOMP_taskloop@@GOMP_4.5+0x78>  // b.none
   1757c:	ldr	x0, [x29, #664]
   17580:	add	x0, x0, #0x80
   17584:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   17588:	and	w0, w0, #0xff
   1758c:	cmp	w0, #0x0
   17590:	b.ne	1853c <GOMP_taskloop@@GOMP_4.5+0x1020>  // b.any
   17594:	ldr	x0, [x29, #752]
   17598:	str	x0, [x29, #720]
   1759c:	ldr	x0, [x29, #752]
   175a0:	cmp	x0, #0x0
   175a4:	b.le	175c8 <GOMP_taskloop@@GOMP_4.5+0xac>
   175a8:	ldr	x1, [x29, #736]
   175ac:	ldr	x0, [x29, #744]
   175b0:	cmp	x1, x0
   175b4:	b.ge	18544 <GOMP_taskloop@@GOMP_4.5+0x1028>  // b.tcont
   175b8:	ldr	x0, [x29, #720]
   175bc:	sub	x0, x0, #0x1
   175c0:	str	x0, [x29, #720]
   175c4:	b	175e4 <GOMP_taskloop@@GOMP_4.5+0xc8>
   175c8:	ldr	x1, [x29, #736]
   175cc:	ldr	x0, [x29, #744]
   175d0:	cmp	x1, x0
   175d4:	b.le	1854c <GOMP_taskloop@@GOMP_4.5+0x1030>
   175d8:	ldr	x0, [x29, #720]
   175dc:	add	x0, x0, #0x1
   175e0:	str	x0, [x29, #720]
   175e4:	ldr	x1, [x29, #744]
   175e8:	ldr	x0, [x29, #736]
   175ec:	sub	x1, x1, x0
   175f0:	ldr	x0, [x29, #720]
   175f4:	add	x1, x1, x0
   175f8:	ldr	x0, [x29, #752]
   175fc:	sdiv	x0, x1, x0
   17600:	str	x0, [x29, #656]
   17604:	ldr	x0, [x29, #752]
   17608:	str	x0, [x29, #728]
   1760c:	ldr	x0, [x29, #656]
   17610:	str	x0, [x29, #712]
   17614:	ldr	w0, [x29, #244]
   17618:	and	w0, w0, #0x200
   1761c:	cmp	w0, #0x0
   17620:	b.eq	17734 <GOMP_taskloop@@GOMP_4.5+0x218>  // b.none
   17624:	ldr	x0, [x29, #232]
   17628:	str	x0, [x29, #632]
   1762c:	ldr	x1, [x29, #656]
   17630:	ldr	x0, [x29, #632]
   17634:	udiv	x0, x1, x0
   17638:	str	x0, [x29, #232]
   1763c:	ldr	x0, [x29, #232]
   17640:	cmp	x0, #0x1
   17644:	b.hi	17664 <GOMP_taskloop@@GOMP_4.5+0x148>  // b.pmore
   17648:	mov	x0, #0x1                   	// #1
   1764c:	str	x0, [x29, #232]
   17650:	ldr	x1, [x29, #744]
   17654:	ldr	x0, [x29, #736]
   17658:	sub	x0, x1, x0
   1765c:	str	x0, [x29, #728]
   17660:	b	177e4 <GOMP_taskloop@@GOMP_4.5+0x2c8>
   17664:	ldr	x1, [x29, #232]
   17668:	ldr	x0, [x29, #632]
   1766c:	cmp	x1, x0
   17670:	b.cc	176cc <GOMP_taskloop@@GOMP_4.5+0x1b0>  // b.lo, b.ul, b.last
   17674:	ldr	x1, [x29, #232]
   17678:	ldr	x0, [x29, #632]
   1767c:	mul	x0, x1, x0
   17680:	str	x0, [x29, #608]
   17684:	ldr	x0, [x29, #632]
   17688:	ldr	x1, [x29, #752]
   1768c:	mul	x0, x1, x0
   17690:	str	x0, [x29, #728]
   17694:	ldr	x1, [x29, #608]
   17698:	ldr	x0, [x29, #656]
   1769c:	cmp	x1, x0
   176a0:	b.eq	177e4 <GOMP_taskloop@@GOMP_4.5+0x2c8>  // b.none
   176a4:	ldr	x1, [x29, #728]
   176a8:	ldr	x0, [x29, #752]
   176ac:	add	x0, x1, x0
   176b0:	str	x0, [x29, #728]
   176b4:	ldr	x1, [x29, #656]
   176b8:	ldr	x0, [x29, #608]
   176bc:	sub	x0, x1, x0
   176c0:	sub	x0, x0, #0x1
   176c4:	str	x0, [x29, #712]
   176c8:	b	177e4 <GOMP_taskloop@@GOMP_4.5+0x2c8>
   176cc:	ldr	x1, [x29, #656]
   176d0:	ldr	x0, [x29, #232]
   176d4:	udiv	x0, x1, x0
   176d8:	str	x0, [x29, #624]
   176dc:	ldr	x0, [x29, #656]
   176e0:	ldr	x1, [x29, #232]
   176e4:	udiv	x2, x0, x1
   176e8:	ldr	x1, [x29, #232]
   176ec:	mul	x1, x2, x1
   176f0:	sub	x0, x0, x1
   176f4:	str	x0, [x29, #616]
   176f8:	ldr	x0, [x29, #624]
   176fc:	ldr	x1, [x29, #752]
   17700:	mul	x0, x1, x0
   17704:	str	x0, [x29, #728]
   17708:	ldr	x0, [x29, #616]
   1770c:	cmp	x0, #0x0
   17710:	b.eq	177e4 <GOMP_taskloop@@GOMP_4.5+0x2c8>  // b.none
   17714:	ldr	x1, [x29, #728]
   17718:	ldr	x0, [x29, #752]
   1771c:	add	x0, x1, x0
   17720:	str	x0, [x29, #728]
   17724:	ldr	x0, [x29, #616]
   17728:	sub	x0, x0, #0x1
   1772c:	str	x0, [x29, #712]
   17730:	b	177e4 <GOMP_taskloop@@GOMP_4.5+0x2c8>
   17734:	ldr	x0, [x29, #232]
   17738:	cmp	x0, #0x0
   1773c:	b.ne	17764 <GOMP_taskloop@@GOMP_4.5+0x248>  // b.any
   17740:	ldr	x0, [x29, #664]
   17744:	cmp	x0, #0x0
   17748:	b.eq	1775c <GOMP_taskloop@@GOMP_4.5+0x240>  // b.none
   1774c:	ldr	x0, [x29, #664]
   17750:	ldr	w0, [x0]
   17754:	mov	w0, w0
   17758:	b	17760 <GOMP_taskloop@@GOMP_4.5+0x244>
   1775c:	mov	x0, #0x1                   	// #1
   17760:	str	x0, [x29, #232]
   17764:	ldr	x1, [x29, #232]
   17768:	ldr	x0, [x29, #656]
   1776c:	cmp	x1, x0
   17770:	b.cc	17780 <GOMP_taskloop@@GOMP_4.5+0x264>  // b.lo, b.ul, b.last
   17774:	ldr	x0, [x29, #656]
   17778:	str	x0, [x29, #232]
   1777c:	b	177e4 <GOMP_taskloop@@GOMP_4.5+0x2c8>
   17780:	ldr	x1, [x29, #656]
   17784:	ldr	x0, [x29, #232]
   17788:	udiv	x0, x1, x0
   1778c:	str	x0, [x29, #648]
   17790:	ldr	x0, [x29, #656]
   17794:	ldr	x1, [x29, #232]
   17798:	udiv	x2, x0, x1
   1779c:	ldr	x1, [x29, #232]
   177a0:	mul	x1, x2, x1
   177a4:	sub	x0, x0, x1
   177a8:	str	x0, [x29, #640]
   177ac:	ldr	x0, [x29, #648]
   177b0:	ldr	x1, [x29, #752]
   177b4:	mul	x0, x1, x0
   177b8:	str	x0, [x29, #728]
   177bc:	ldr	x0, [x29, #640]
   177c0:	cmp	x0, #0x0
   177c4:	b.eq	177e4 <GOMP_taskloop@@GOMP_4.5+0x2c8>  // b.none
   177c8:	ldr	x1, [x29, #728]
   177cc:	ldr	x0, [x29, #752]
   177d0:	add	x0, x1, x0
   177d4:	str	x0, [x29, #728]
   177d8:	ldr	x0, [x29, #640]
   177dc:	sub	x0, x0, #0x1
   177e0:	str	x0, [x29, #712]
   177e4:	ldr	w0, [x29, #244]
   177e8:	and	w0, w0, #0x800
   177ec:	cmp	w0, #0x0
   177f0:	b.eq	17898 <GOMP_taskloop@@GOMP_4.5+0x37c>  // b.none
   177f4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   177f8:	add	x0, x0, #0x574
   177fc:	ldrb	w0, [x0]
   17800:	and	x0, x0, #0xff
   17804:	cmp	x0, #0x0
   17808:	b.eq	178c0 <GOMP_taskloop@@GOMP_4.5+0x3a4>  // b.none
   1780c:	ldr	x0, [x29, #672]
   17810:	ldr	x0, [x0, #80]
   17814:	cmp	x0, #0x0
   17818:	b.eq	178c0 <GOMP_taskloop@@GOMP_4.5+0x3a4>  // b.none
   1781c:	ldr	x0, [x29, #672]
   17820:	ldr	x0, [x0, #80]
   17824:	ldr	x0, [x0, #40]
   17828:	cmp	x0, #0x0
   1782c:	b.eq	178c0 <GOMP_taskloop@@GOMP_4.5+0x3a4>  // b.none
   17830:	ldr	x0, [x29, #672]
   17834:	ldr	x0, [x0, #80]
   17838:	ldr	x0, [x0, #40]
   1783c:	ldrb	w0, [x0, #49]
   17840:	cmp	w0, #0x0
   17844:	b.ne	18554 <GOMP_taskloop@@GOMP_4.5+0x1038>  // b.any
   17848:	ldr	x0, [x29, #672]
   1784c:	ldr	x0, [x0, #80]
   17850:	ldr	x0, [x0, #40]
   17854:	ldrb	w0, [x0, #50]
   17858:	cmp	w0, #0x0
   1785c:	b.eq	178c0 <GOMP_taskloop@@GOMP_4.5+0x3a4>  // b.none
   17860:	ldr	x0, [x29, #672]
   17864:	ldr	x0, [x0, #80]
   17868:	ldr	x0, [x0, #40]
   1786c:	ldr	x0, [x0]
   17870:	cmp	x0, #0x0
   17874:	b.eq	178c0 <GOMP_taskloop@@GOMP_4.5+0x3a4>  // b.none
   17878:	ldr	x0, [x29, #672]
   1787c:	ldr	x0, [x0, #80]
   17880:	ldr	x0, [x0, #40]
   17884:	ldr	x0, [x0]
   17888:	ldrb	w0, [x0, #49]
   1788c:	cmp	w0, #0x0
   17890:	b.eq	178c0 <GOMP_taskloop@@GOMP_4.5+0x3a4>  // b.none
   17894:	b	18558 <GOMP_taskloop@@GOMP_4.5+0x103c>
   17898:	bl	1be0c <GOMP_taskgroup_start@@GOMP_4.0>
   1789c:	ldr	w0, [x29, #244]
   178a0:	and	w0, w0, #0x1000
   178a4:	cmp	w0, #0x0
   178a8:	b.eq	178c0 <GOMP_taskloop@@GOMP_4.5+0x3a4>  // b.none
   178ac:	ldr	x0, [x29, #272]
   178b0:	ldr	x0, [x0, #16]
   178b4:	str	x0, [x29, #600]
   178b8:	ldr	x0, [x29, #600]
   178bc:	bl	1c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   178c0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   178c4:	add	x0, x0, #0x578
   178c8:	ldr	w0, [x0]
   178cc:	ldr	w1, [x29, #240]
   178d0:	cmp	w1, w0
   178d4:	b.le	178e8 <GOMP_taskloop@@GOMP_4.5+0x3cc>
   178d8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   178dc:	add	x0, x0, #0x578
   178e0:	ldr	w0, [x0]
   178e4:	str	w0, [x29, #240]
   178e8:	ldr	w0, [x29, #244]
   178ec:	and	w0, w0, #0x400
   178f0:	cmp	w0, #0x0
   178f4:	b.eq	17954 <GOMP_taskloop@@GOMP_4.5+0x438>  // b.none
   178f8:	ldr	x0, [x29, #664]
   178fc:	cmp	x0, #0x0
   17900:	b.eq	17954 <GOMP_taskloop@@GOMP_4.5+0x438>  // b.none
   17904:	ldr	x0, [x29, #672]
   17908:	ldr	x0, [x0, #80]
   1790c:	cmp	x0, #0x0
   17910:	b.eq	17928 <GOMP_taskloop@@GOMP_4.5+0x40c>  // b.none
   17914:	ldr	x0, [x29, #672]
   17918:	ldr	x0, [x0, #80]
   1791c:	ldrb	w0, [x0, #205]
   17920:	cmp	w0, #0x0
   17924:	b.ne	17954 <GOMP_taskloop@@GOMP_4.5+0x438>  // b.any
   17928:	ldr	x0, [x29, #664]
   1792c:	ldr	w0, [x0, #1320]
   17930:	mov	w1, w0
   17934:	ldr	x0, [x29, #232]
   17938:	add	x1, x1, x0
   1793c:	ldr	x0, [x29, #664]
   17940:	ldr	w0, [x0]
   17944:	lsl	w0, w0, #6
   17948:	mov	w0, w0
   1794c:	cmp	x1, x0
   17950:	b.ls	18004 <GOMP_taskloop@@GOMP_4.5+0xae8>  // b.plast
   17954:	ldr	x0, [x29, #264]
   17958:	cmp	x0, #0x0
   1795c:	cset	w0, ne  // ne = any
   17960:	and	w0, w0, #0xff
   17964:	and	x0, x0, #0xff
   17968:	cmp	x0, #0x0
   1796c:	b.eq	17e7c <GOMP_taskloop@@GOMP_4.5+0x960>  // b.none
   17970:	mov	x0, sp
   17974:	mov	x24, x0
   17978:	ldr	x2, [x29, #232]
   1797c:	mov	x0, x2
   17980:	sub	x0, x0, #0x1
   17984:	str	x0, [x29, #536]
   17988:	mov	x22, x2
   1798c:	mov	x23, #0x0                   	// #0
   17990:	mov	x0, #0x680                 	// #1664
   17994:	mov	x1, #0x0                   	// #0
   17998:	mul	x4, x22, x0
   1799c:	umulh	x3, x22, x0
   179a0:	madd	x3, x23, x0, x3
   179a4:	madd	x3, x22, x1, x3
   179a8:	str	x4, [x29, #112]
   179ac:	str	x3, [x29, #120]
   179b0:	mov	x0, x2
   179b4:	lsl	x0, x0, #1
   179b8:	add	x0, x0, x2
   179bc:	lsl	x0, x0, #2
   179c0:	add	x0, x0, x2
   179c4:	lsl	x0, x0, #4
   179c8:	mov	x20, x2
   179cc:	mov	x21, #0x0                   	// #0
   179d0:	mov	x0, #0x680                 	// #1664
   179d4:	mov	x1, #0x0                   	// #0
   179d8:	mul	x4, x20, x0
   179dc:	umulh	x3, x20, x0
   179e0:	madd	x3, x21, x0, x3
   179e4:	madd	x3, x20, x1, x3
   179e8:	str	x4, [x29, #96]
   179ec:	str	x3, [x29, #104]
   179f0:	mov	x0, x2
   179f4:	lsl	x0, x0, #1
   179f8:	add	x0, x0, x2
   179fc:	lsl	x0, x0, #2
   17a00:	add	x0, x0, x2
   17a04:	lsl	x0, x0, #4
   17a08:	add	x0, x0, #0xf
   17a0c:	lsr	x0, x0, #4
   17a10:	lsl	x0, x0, #4
   17a14:	sub	sp, sp, x0
   17a18:	mov	x0, sp
   17a1c:	add	x0, x0, #0x7
   17a20:	lsr	x0, x0, #3
   17a24:	lsl	x0, x0, #3
   17a28:	str	x0, [x29, #528]
   17a2c:	ldr	x0, [x29, #672]
   17a30:	ldr	x0, [x0, #80]
   17a34:	str	x0, [x29, #520]
   17a38:	ldr	x1, [x29, #256]
   17a3c:	ldr	x0, [x29, #248]
   17a40:	add	x0, x1, x0
   17a44:	sub	x1, x0, #0x1
   17a48:	ldr	x0, [x29, #248]
   17a4c:	neg	x0, x0
   17a50:	and	x0, x1, x0
   17a54:	str	x0, [x29, #256]
   17a58:	ldr	x1, [x29, #256]
   17a5c:	ldr	x0, [x29, #232]
   17a60:	mul	x1, x1, x0
   17a64:	ldr	x0, [x29, #248]
   17a68:	add	x0, x1, x0
   17a6c:	sub	x0, x0, #0x1
   17a70:	mov	x1, x0
   17a74:	sub	x1, x1, #0x1
   17a78:	str	x1, [x29, #512]
   17a7c:	str	x0, [x29, #176]
   17a80:	str	xzr, [x29, #184]
   17a84:	ldp	x2, x3, [x29, #176]
   17a88:	mov	x1, x2
   17a8c:	lsr	x1, x1, #61
   17a90:	mov	x4, x3
   17a94:	lsl	x4, x4, #3
   17a98:	str	x4, [x29, #216]
   17a9c:	ldr	x4, [x29, #216]
   17aa0:	orr	x1, x1, x4
   17aa4:	str	x1, [x29, #216]
   17aa8:	mov	x1, x2
   17aac:	lsl	x1, x1, #3
   17ab0:	str	x1, [x29, #208]
   17ab4:	str	x0, [x29, #160]
   17ab8:	str	xzr, [x29, #168]
   17abc:	ldp	x2, x3, [x29, #160]
   17ac0:	mov	x1, x2
   17ac4:	lsr	x1, x1, #61
   17ac8:	mov	x4, x3
   17acc:	lsl	x4, x4, #3
   17ad0:	str	x4, [x29, #200]
   17ad4:	ldr	x4, [x29, #200]
   17ad8:	orr	x1, x1, x4
   17adc:	str	x1, [x29, #200]
   17ae0:	mov	x1, x2
   17ae4:	lsl	x1, x1, #3
   17ae8:	str	x1, [x29, #192]
   17aec:	add	x0, x0, #0xf
   17af0:	lsr	x0, x0, #4
   17af4:	lsl	x0, x0, #4
   17af8:	sub	sp, sp, x0
   17afc:	mov	x0, sp
   17b00:	add	x0, x0, #0x0
   17b04:	str	x0, [x29, #504]
   17b08:	ldr	x0, [x29, #504]
   17b0c:	mov	x1, x0
   17b10:	ldr	x0, [x29, #248]
   17b14:	add	x0, x1, x0
   17b18:	sub	x0, x0, #0x1
   17b1c:	ldr	x1, [x29, #248]
   17b20:	neg	x1, x1
   17b24:	and	x0, x0, x1
   17b28:	str	x0, [x29, #696]
   17b2c:	ldr	x0, [x29, #696]
   17b30:	str	x0, [x29, #496]
   17b34:	str	xzr, [x29, #704]
   17b38:	b	17d18 <GOMP_taskloop@@GOMP_4.5+0x7fc>
   17b3c:	ldr	x1, [x29, #704]
   17b40:	mov	x0, x1
   17b44:	lsl	x0, x0, #1
   17b48:	add	x0, x0, x1
   17b4c:	lsl	x0, x0, #2
   17b50:	add	x0, x0, x1
   17b54:	lsl	x0, x0, #4
   17b58:	ldr	x1, [x29, #528]
   17b5c:	add	x19, x1, x0
   17b60:	mov	w0, #0x0                   	// #0
   17b64:	bl	15784 <GOMP_single_copy_end@@GOMP_1.0+0xa74>
   17b68:	mov	x2, x0
   17b6c:	ldr	x1, [x29, #520]
   17b70:	mov	x0, x19
   17b74:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   17b78:	ldr	x2, [x29, #528]
   17b7c:	ldr	x1, [x29, #704]
   17b80:	mov	x0, x1
   17b84:	lsl	x0, x0, #1
   17b88:	add	x0, x0, x1
   17b8c:	lsl	x0, x0, #2
   17b90:	add	x0, x0, x1
   17b94:	lsl	x0, x0, #4
   17b98:	add	x0, x2, x0
   17b9c:	ldr	w1, [x29, #240]
   17ba0:	str	w1, [x0, #88]
   17ba4:	ldr	x2, [x29, #528]
   17ba8:	ldr	x1, [x29, #704]
   17bac:	mov	x0, x1
   17bb0:	lsl	x0, x0, #1
   17bb4:	add	x0, x0, x1
   17bb8:	lsl	x0, x0, #2
   17bbc:	add	x0, x0, x1
   17bc0:	lsl	x0, x0, #4
   17bc4:	add	x0, x2, x0
   17bc8:	mov	w1, #0x1                   	// #1
   17bcc:	str	w1, [x0, #200]
   17bd0:	ldr	x0, [x29, #672]
   17bd4:	ldr	x0, [x0, #80]
   17bd8:	cmp	x0, #0x0
   17bdc:	b.eq	17bf4 <GOMP_taskloop@@GOMP_4.5+0x6d8>  // b.none
   17be0:	ldr	x0, [x29, #672]
   17be4:	ldr	x0, [x0, #80]
   17be8:	ldrb	w0, [x0, #205]
   17bec:	cmp	w0, #0x0
   17bf0:	b.ne	17c04 <GOMP_taskloop@@GOMP_4.5+0x6e8>  // b.any
   17bf4:	ldr	w0, [x29, #244]
   17bf8:	and	w0, w0, #0x2
   17bfc:	cmp	w0, #0x0
   17c00:	b.eq	17c0c <GOMP_taskloop@@GOMP_4.5+0x6f0>  // b.none
   17c04:	mov	w0, #0x1                   	// #1
   17c08:	b	17c10 <GOMP_taskloop@@GOMP_4.5+0x6f4>
   17c0c:	mov	w0, #0x0                   	// #0
   17c10:	and	w0, w0, #0x1
   17c14:	and	w3, w0, #0xff
   17c18:	ldr	x2, [x29, #528]
   17c1c:	ldr	x1, [x29, #704]
   17c20:	mov	x0, x1
   17c24:	lsl	x0, x0, #1
   17c28:	add	x0, x0, x1
   17c2c:	lsl	x0, x0, #2
   17c30:	add	x0, x0, x1
   17c34:	lsl	x0, x0, #4
   17c38:	add	x0, x2, x0
   17c3c:	mov	w1, w3
   17c40:	strb	w1, [x0, #205]
   17c44:	ldr	x0, [x29, #672]
   17c48:	ldr	x0, [x0, #80]
   17c4c:	cmp	x0, #0x0
   17c50:	b.eq	17cc0 <GOMP_taskloop@@GOMP_4.5+0x7a4>  // b.none
   17c54:	ldr	x0, [x29, #672]
   17c58:	ldr	x0, [x0, #80]
   17c5c:	ldrb	w3, [x0, #204]
   17c60:	ldr	x2, [x29, #528]
   17c64:	ldr	x1, [x29, #704]
   17c68:	mov	x0, x1
   17c6c:	lsl	x0, x0, #1
   17c70:	add	x0, x0, x1
   17c74:	lsl	x0, x0, #2
   17c78:	add	x0, x0, x1
   17c7c:	lsl	x0, x0, #4
   17c80:	add	x0, x2, x0
   17c84:	mov	w1, w3
   17c88:	strb	w1, [x0, #204]
   17c8c:	ldr	x0, [x29, #672]
   17c90:	ldr	x0, [x0, #80]
   17c94:	ldr	x2, [x0, #40]
   17c98:	ldr	x3, [x29, #528]
   17c9c:	ldr	x1, [x29, #704]
   17ca0:	mov	x0, x1
   17ca4:	lsl	x0, x0, #1
   17ca8:	add	x0, x0, x1
   17cac:	lsl	x0, x0, #2
   17cb0:	add	x0, x0, x1
   17cb4:	lsl	x0, x0, #4
   17cb8:	add	x0, x3, x0
   17cbc:	str	x2, [x0, #40]
   17cc0:	ldr	x1, [x29, #704]
   17cc4:	mov	x0, x1
   17cc8:	lsl	x0, x0, #1
   17ccc:	add	x0, x0, x1
   17cd0:	lsl	x0, x0, #2
   17cd4:	add	x0, x0, x1
   17cd8:	lsl	x0, x0, #4
   17cdc:	ldr	x1, [x29, #528]
   17ce0:	add	x1, x1, x0
   17ce4:	ldr	x0, [x29, #672]
   17ce8:	str	x1, [x0, #80]
   17cec:	ldr	x2, [x29, #264]
   17cf0:	ldr	x1, [x29, #272]
   17cf4:	ldr	x0, [x29, #696]
   17cf8:	blr	x2
   17cfc:	ldr	x0, [x29, #256]
   17d00:	ldr	x1, [x29, #696]
   17d04:	add	x0, x1, x0
   17d08:	str	x0, [x29, #696]
   17d0c:	ldr	x0, [x29, #704]
   17d10:	add	x0, x0, #0x1
   17d14:	str	x0, [x29, #704]
   17d18:	ldr	x1, [x29, #704]
   17d1c:	ldr	x0, [x29, #232]
   17d20:	cmp	x1, x0
   17d24:	b.cc	17b3c <GOMP_taskloop@@GOMP_4.5+0x620>  // b.lo, b.ul, b.last
   17d28:	ldr	x0, [x29, #496]
   17d2c:	str	x0, [x29, #696]
   17d30:	str	xzr, [x29, #704]
   17d34:	b	17e64 <GOMP_taskloop@@GOMP_4.5+0x948>
   17d38:	ldr	x1, [x29, #704]
   17d3c:	mov	x0, x1
   17d40:	lsl	x0, x0, #1
   17d44:	add	x0, x0, x1
   17d48:	lsl	x0, x0, #2
   17d4c:	add	x0, x0, x1
   17d50:	lsl	x0, x0, #4
   17d54:	ldr	x1, [x29, #528]
   17d58:	add	x1, x1, x0
   17d5c:	ldr	x0, [x29, #672]
   17d60:	str	x1, [x0, #80]
   17d64:	ldr	x0, [x29, #696]
   17d68:	ldr	x1, [x29, #736]
   17d6c:	str	x1, [x0]
   17d70:	ldr	x1, [x29, #736]
   17d74:	ldr	x0, [x29, #728]
   17d78:	add	x0, x1, x0
   17d7c:	str	x0, [x29, #736]
   17d80:	ldr	x0, [x29, #696]
   17d84:	add	x0, x0, #0x8
   17d88:	ldr	x1, [x29, #736]
   17d8c:	str	x1, [x0]
   17d90:	ldr	x1, [x29, #704]
   17d94:	ldr	x0, [x29, #712]
   17d98:	cmp	x1, x0
   17d9c:	b.ne	17db0 <GOMP_taskloop@@GOMP_4.5+0x894>  // b.any
   17da0:	ldr	x1, [x29, #728]
   17da4:	ldr	x0, [x29, #752]
   17da8:	sub	x0, x1, x0
   17dac:	str	x0, [x29, #728]
   17db0:	ldr	x1, [x29, #280]
   17db4:	ldr	x0, [x29, #696]
   17db8:	blr	x1
   17dbc:	ldr	x0, [x29, #256]
   17dc0:	ldr	x1, [x29, #696]
   17dc4:	add	x0, x1, x0
   17dc8:	str	x0, [x29, #696]
   17dcc:	ldr	x1, [x29, #704]
   17dd0:	mov	x0, x1
   17dd4:	lsl	x0, x0, #1
   17dd8:	add	x0, x0, x1
   17ddc:	lsl	x0, x0, #2
   17de0:	add	x0, x0, x1
   17de4:	lsl	x0, x0, #4
   17de8:	ldr	x1, [x29, #528]
   17dec:	add	x0, x1, x0
   17df0:	add	x0, x0, #0x8
   17df4:	mov	w1, #0x0                   	// #0
   17df8:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   17dfc:	and	w0, w0, #0xff
   17e00:	eor	w0, w0, #0x1
   17e04:	and	w0, w0, #0xff
   17e08:	cmp	w0, #0x0
   17e0c:	b.eq	17e54 <GOMP_taskloop@@GOMP_4.5+0x938>  // b.none
   17e10:	ldr	x0, [x29, #664]
   17e14:	add	x0, x0, #0x500
   17e18:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   17e1c:	ldr	x1, [x29, #704]
   17e20:	mov	x0, x1
   17e24:	lsl	x0, x0, #1
   17e28:	add	x0, x0, x1
   17e2c:	lsl	x0, x0, #2
   17e30:	add	x0, x0, x1
   17e34:	lsl	x0, x0, #4
   17e38:	ldr	x1, [x29, #528]
   17e3c:	add	x0, x1, x0
   17e40:	add	x0, x0, #0x8
   17e44:	bl	1643c <GOMP_single_copy_end@@GOMP_1.0+0x172c>
   17e48:	ldr	x0, [x29, #664]
   17e4c:	add	x0, x0, #0x500
   17e50:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   17e54:	bl	16330 <GOMP_single_copy_end@@GOMP_1.0+0x1620>
   17e58:	ldr	x0, [x29, #704]
   17e5c:	add	x0, x0, #0x1
   17e60:	str	x0, [x29, #704]
   17e64:	ldr	x1, [x29, #704]
   17e68:	ldr	x0, [x29, #232]
   17e6c:	cmp	x1, x0
   17e70:	b.cc	17d38 <GOMP_taskloop@@GOMP_4.5+0x81c>  // b.lo, b.ul, b.last
   17e74:	mov	sp, x24
   17e78:	b	18524 <GOMP_taskloop@@GOMP_4.5+0x1008>
   17e7c:	str	xzr, [x29, #704]
   17e80:	b	17ff0 <GOMP_taskloop@@GOMP_4.5+0xad4>
   17e84:	ldr	x0, [x29, #672]
   17e88:	ldr	x19, [x0, #80]
   17e8c:	mov	w0, #0x0                   	// #0
   17e90:	bl	15784 <GOMP_single_copy_end@@GOMP_1.0+0xa74>
   17e94:	mov	x1, x0
   17e98:	add	x0, x29, #0x120
   17e9c:	mov	x2, x1
   17ea0:	mov	x1, x19
   17ea4:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   17ea8:	ldr	w0, [x29, #240]
   17eac:	str	w0, [x29, #376]
   17eb0:	mov	w0, #0x1                   	// #1
   17eb4:	str	w0, [x29, #488]
   17eb8:	ldr	x0, [x29, #672]
   17ebc:	ldr	x0, [x0, #80]
   17ec0:	cmp	x0, #0x0
   17ec4:	b.eq	17edc <GOMP_taskloop@@GOMP_4.5+0x9c0>  // b.none
   17ec8:	ldr	x0, [x29, #672]
   17ecc:	ldr	x0, [x0, #80]
   17ed0:	ldrb	w0, [x0, #205]
   17ed4:	cmp	w0, #0x0
   17ed8:	b.ne	17eec <GOMP_taskloop@@GOMP_4.5+0x9d0>  // b.any
   17edc:	ldr	w0, [x29, #244]
   17ee0:	and	w0, w0, #0x2
   17ee4:	cmp	w0, #0x0
   17ee8:	b.eq	17ef4 <GOMP_taskloop@@GOMP_4.5+0x9d8>  // b.none
   17eec:	mov	w0, #0x1                   	// #1
   17ef0:	b	17ef8 <GOMP_taskloop@@GOMP_4.5+0x9dc>
   17ef4:	mov	w0, #0x0                   	// #0
   17ef8:	and	w0, w0, #0x1
   17efc:	and	w0, w0, #0xff
   17f00:	strb	w0, [x29, #493]
   17f04:	ldr	x0, [x29, #672]
   17f08:	ldr	x0, [x0, #80]
   17f0c:	cmp	x0, #0x0
   17f10:	b.eq	17f34 <GOMP_taskloop@@GOMP_4.5+0xa18>  // b.none
   17f14:	ldr	x0, [x29, #672]
   17f18:	ldr	x0, [x0, #80]
   17f1c:	ldrb	w0, [x0, #204]
   17f20:	strb	w0, [x29, #492]
   17f24:	ldr	x0, [x29, #672]
   17f28:	ldr	x0, [x0, #80]
   17f2c:	ldr	x0, [x0, #40]
   17f30:	str	x0, [x29, #328]
   17f34:	ldr	x0, [x29, #672]
   17f38:	add	x1, x29, #0x120
   17f3c:	str	x1, [x0, #80]
   17f40:	ldr	x0, [x29, #272]
   17f44:	ldr	x1, [x29, #736]
   17f48:	str	x1, [x0]
   17f4c:	ldr	x1, [x29, #736]
   17f50:	ldr	x0, [x29, #728]
   17f54:	add	x0, x1, x0
   17f58:	str	x0, [x29, #736]
   17f5c:	ldr	x0, [x29, #272]
   17f60:	add	x0, x0, #0x8
   17f64:	ldr	x1, [x29, #736]
   17f68:	str	x1, [x0]
   17f6c:	ldr	x1, [x29, #704]
   17f70:	ldr	x0, [x29, #712]
   17f74:	cmp	x1, x0
   17f78:	b.ne	17f8c <GOMP_taskloop@@GOMP_4.5+0xa70>  // b.any
   17f7c:	ldr	x1, [x29, #728]
   17f80:	ldr	x0, [x29, #752]
   17f84:	sub	x0, x1, x0
   17f88:	str	x0, [x29, #728]
   17f8c:	ldr	x1, [x29, #280]
   17f90:	ldr	x0, [x29, #272]
   17f94:	blr	x1
   17f98:	add	x0, x29, #0x120
   17f9c:	add	x0, x0, #0x8
   17fa0:	mov	w1, #0x0                   	// #0
   17fa4:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   17fa8:	and	w0, w0, #0xff
   17fac:	eor	w0, w0, #0x1
   17fb0:	and	w0, w0, #0xff
   17fb4:	cmp	w0, #0x0
   17fb8:	b.eq	17fe0 <GOMP_taskloop@@GOMP_4.5+0xac4>  // b.none
   17fbc:	ldr	x0, [x29, #664]
   17fc0:	add	x0, x0, #0x500
   17fc4:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   17fc8:	add	x0, x29, #0x120
   17fcc:	add	x0, x0, #0x8
   17fd0:	bl	1643c <GOMP_single_copy_end@@GOMP_1.0+0x172c>
   17fd4:	ldr	x0, [x29, #664]
   17fd8:	add	x0, x0, #0x500
   17fdc:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   17fe0:	bl	16330 <GOMP_single_copy_end@@GOMP_1.0+0x1620>
   17fe4:	ldr	x0, [x29, #704]
   17fe8:	add	x0, x0, #0x1
   17fec:	str	x0, [x29, #704]
   17ff0:	ldr	x1, [x29, #704]
   17ff4:	ldr	x0, [x29, #232]
   17ff8:	cmp	x1, x0
   17ffc:	b.cc	17e84 <GOMP_taskloop@@GOMP_4.5+0x968>  // b.lo, b.ul, b.last
   18000:	b	18524 <GOMP_taskloop@@GOMP_4.5+0x1008>
   18004:	mov	x0, sp
   18008:	mov	x19, x0
   1800c:	ldr	x0, [x29, #232]
   18010:	mov	x1, x0
   18014:	sub	x1, x1, #0x1
   18018:	str	x1, [x29, #592]
   1801c:	str	x0, [x29, #144]
   18020:	str	xzr, [x29, #152]
   18024:	ldp	x2, x3, [x29, #144]
   18028:	mov	x1, x2
   1802c:	lsr	x1, x1, #58
   18030:	mov	x4, x3
   18034:	lsl	x27, x4, #6
   18038:	orr	x27, x1, x27
   1803c:	mov	x1, x2
   18040:	lsl	x26, x1, #6
   18044:	str	x0, [x29, #128]
   18048:	str	xzr, [x29, #136]
   1804c:	ldp	x2, x3, [x29, #128]
   18050:	mov	x1, x2
   18054:	lsr	x1, x1, #58
   18058:	mov	x4, x3
   1805c:	lsl	x25, x4, #6
   18060:	orr	x25, x1, x25
   18064:	mov	x1, x2
   18068:	lsl	x24, x1, #6
   1806c:	lsl	x0, x0, #3
   18070:	add	x0, x0, #0xf
   18074:	lsr	x0, x0, #4
   18078:	lsl	x0, x0, #4
   1807c:	sub	sp, sp, x0
   18080:	mov	x0, sp
   18084:	add	x0, x0, #0x7
   18088:	lsr	x0, x0, #3
   1808c:	lsl	x0, x0, #3
   18090:	str	x0, [x29, #584]
   18094:	ldr	x0, [x29, #672]
   18098:	ldr	x0, [x0, #80]
   1809c:	str	x0, [x29, #576]
   180a0:	ldr	x0, [x29, #576]
   180a4:	ldr	x0, [x0, #40]
   180a8:	str	x0, [x29, #568]
   180ac:	str	xzr, [x29, #680]
   180b0:	b	1823c <GOMP_taskloop@@GOMP_4.5+0xd20>
   180b4:	ldr	x1, [x29, #256]
   180b8:	ldr	x0, [x29, #248]
   180bc:	add	x0, x1, x0
   180c0:	add	x0, x0, #0xcf
   180c4:	bl	8dd0 <fprintf@plt+0x1a0>
   180c8:	str	x0, [x29, #552]
   180cc:	ldr	x0, [x29, #584]
   180d0:	ldr	x1, [x29, #680]
   180d4:	ldr	x2, [x29, #552]
   180d8:	str	x2, [x0, x1, lsl #3]
   180dc:	ldr	x1, [x29, #552]
   180e0:	ldr	x0, [x29, #248]
   180e4:	add	x0, x1, x0
   180e8:	add	x0, x0, #0xcf
   180ec:	ldr	x1, [x29, #248]
   180f0:	neg	x1, x1
   180f4:	and	x0, x0, x1
   180f8:	str	x0, [x29, #544]
   180fc:	mov	w0, #0x0                   	// #0
   18100:	bl	15784 <GOMP_single_copy_end@@GOMP_1.0+0xa74>
   18104:	mov	x2, x0
   18108:	ldr	x1, [x29, #576]
   1810c:	ldr	x0, [x29, #552]
   18110:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   18114:	ldr	x0, [x29, #552]
   18118:	ldr	w1, [x29, #240]
   1811c:	str	w1, [x0, #88]
   18120:	ldr	x0, [x29, #552]
   18124:	mov	w1, #0x1                   	// #1
   18128:	str	w1, [x0, #200]
   1812c:	ldr	x0, [x29, #576]
   18130:	ldrb	w1, [x0, #204]
   18134:	ldr	x0, [x29, #552]
   18138:	strb	w1, [x0, #204]
   1813c:	ldr	x0, [x29, #552]
   18140:	ldr	x1, [x29, #568]
   18144:	str	x1, [x0, #40]
   18148:	ldr	x0, [x29, #672]
   1814c:	ldr	x1, [x29, #552]
   18150:	str	x1, [x0, #80]
   18154:	ldr	x0, [x29, #264]
   18158:	cmp	x0, #0x0
   1815c:	b.eq	18180 <GOMP_taskloop@@GOMP_4.5+0xc64>  // b.none
   18160:	ldr	x2, [x29, #264]
   18164:	ldr	x1, [x29, #272]
   18168:	ldr	x0, [x29, #544]
   1816c:	blr	x2
   18170:	ldr	x0, [x29, #552]
   18174:	mov	w1, #0x1                   	// #1
   18178:	strb	w1, [x0, #206]
   1817c:	b	18194 <GOMP_taskloop@@GOMP_4.5+0xc78>
   18180:	ldr	x0, [x29, #256]
   18184:	mov	x2, x0
   18188:	ldr	x1, [x29, #272]
   1818c:	ldr	x0, [x29, #544]
   18190:	bl	86a0 <memcpy@plt>
   18194:	ldr	x0, [x29, #544]
   18198:	ldr	x1, [x29, #736]
   1819c:	str	x1, [x0]
   181a0:	ldr	x1, [x29, #736]
   181a4:	ldr	x0, [x29, #728]
   181a8:	add	x0, x1, x0
   181ac:	str	x0, [x29, #736]
   181b0:	ldr	x0, [x29, #544]
   181b4:	add	x0, x0, #0x8
   181b8:	ldr	x1, [x29, #736]
   181bc:	str	x1, [x0]
   181c0:	ldr	x1, [x29, #680]
   181c4:	ldr	x0, [x29, #712]
   181c8:	cmp	x1, x0
   181cc:	b.ne	181e0 <GOMP_taskloop@@GOMP_4.5+0xcc4>  // b.any
   181d0:	ldr	x1, [x29, #728]
   181d4:	ldr	x0, [x29, #752]
   181d8:	sub	x0, x1, x0
   181dc:	str	x0, [x29, #728]
   181e0:	ldr	x0, [x29, #672]
   181e4:	ldr	x1, [x29, #576]
   181e8:	str	x1, [x0, #80]
   181ec:	ldr	x0, [x29, #552]
   181f0:	mov	w1, #0x2                   	// #2
   181f4:	str	w1, [x0, #200]
   181f8:	ldr	x0, [x29, #552]
   181fc:	ldr	x1, [x29, #280]
   18200:	str	x1, [x0, #184]
   18204:	ldr	x0, [x29, #552]
   18208:	ldr	x1, [x29, #544]
   1820c:	str	x1, [x0, #192]
   18210:	ldr	w0, [x29, #244]
   18214:	lsr	w0, w0, #1
   18218:	and	w0, w0, #0x1
   1821c:	cmp	w0, #0x0
   18220:	cset	w0, ne  // ne = any
   18224:	and	w1, w0, #0xff
   18228:	ldr	x0, [x29, #552]
   1822c:	strb	w1, [x0, #205]
   18230:	ldr	x0, [x29, #680]
   18234:	add	x0, x0, #0x1
   18238:	str	x0, [x29, #680]
   1823c:	ldr	x1, [x29, #680]
   18240:	ldr	x0, [x29, #232]
   18244:	cmp	x1, x0
   18248:	b.cc	180b4 <GOMP_taskloop@@GOMP_4.5+0xb98>  // b.lo, b.ul, b.last
   1824c:	ldr	x0, [x29, #664]
   18250:	add	x0, x0, #0x500
   18254:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   18258:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1825c:	add	x0, x0, #0x574
   18260:	ldrb	w0, [x0]
   18264:	and	x0, x0, #0xff
   18268:	cmp	x0, #0x0
   1826c:	b.eq	18364 <GOMP_taskloop@@GOMP_4.5+0xe48>  // b.none
   18270:	ldr	x0, [x29, #264]
   18274:	cmp	x0, #0x0
   18278:	b.ne	18364 <GOMP_taskloop@@GOMP_4.5+0xe48>  // b.any
   1827c:	ldr	x0, [x29, #664]
   18280:	add	x0, x0, #0x80
   18284:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   18288:	and	w0, w0, #0xff
   1828c:	cmp	w0, #0x0
   18290:	b.eq	18314 <GOMP_taskloop@@GOMP_4.5+0xdf8>  // b.none
   18294:	nop
   18298:	b	182a8 <GOMP_taskloop@@GOMP_4.5+0xd8c>
   1829c:	nop
   182a0:	b	182a8 <GOMP_taskloop@@GOMP_4.5+0xd8c>
   182a4:	nop
   182a8:	ldr	x0, [x29, #664]
   182ac:	add	x0, x0, #0x500
   182b0:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   182b4:	str	xzr, [x29, #680]
   182b8:	b	182e8 <GOMP_taskloop@@GOMP_4.5+0xdcc>
   182bc:	ldr	x0, [x29, #584]
   182c0:	ldr	x1, [x29, #680]
   182c4:	ldr	x0, [x0, x1, lsl #3]
   182c8:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   182cc:	ldr	x0, [x29, #584]
   182d0:	ldr	x1, [x29, #680]
   182d4:	ldr	x0, [x0, x1, lsl #3]
   182d8:	bl	8a20 <free@plt>
   182dc:	ldr	x0, [x29, #680]
   182e0:	add	x0, x0, #0x1
   182e4:	str	x0, [x29, #680]
   182e8:	ldr	x1, [x29, #680]
   182ec:	ldr	x0, [x29, #232]
   182f0:	cmp	x1, x0
   182f4:	b.cc	182bc <GOMP_taskloop@@GOMP_4.5+0xda0>  // b.lo, b.ul, b.last
   182f8:	ldr	w0, [x29, #244]
   182fc:	and	w0, w0, #0x800
   18300:	cmp	w0, #0x0
   18304:	b.ne	1830c <GOMP_taskloop@@GOMP_4.5+0xdf0>  // b.any
   18308:	bl	1be68 <GOMP_taskgroup_end@@GOMP_4.0>
   1830c:	mov	sp, x19
   18310:	b	18558 <GOMP_taskloop@@GOMP_4.5+0x103c>
   18314:	ldr	x0, [x29, #568]
   18318:	cmp	x0, #0x0
   1831c:	b.eq	18364 <GOMP_taskloop@@GOMP_4.5+0xe48>  // b.none
   18320:	ldr	x0, [x29, #568]
   18324:	ldrb	w0, [x0, #49]
   18328:	cmp	w0, #0x0
   1832c:	b.ne	1829c <GOMP_taskloop@@GOMP_4.5+0xd80>  // b.any
   18330:	ldr	x0, [x29, #568]
   18334:	ldrb	w0, [x0, #50]
   18338:	cmp	w0, #0x0
   1833c:	b.eq	18364 <GOMP_taskloop@@GOMP_4.5+0xe48>  // b.none
   18340:	ldr	x0, [x29, #568]
   18344:	ldr	x0, [x0]
   18348:	cmp	x0, #0x0
   1834c:	b.eq	18364 <GOMP_taskloop@@GOMP_4.5+0xe48>  // b.none
   18350:	ldr	x0, [x29, #568]
   18354:	ldr	x0, [x0]
   18358:	ldrb	w0, [x0, #49]
   1835c:	cmp	w0, #0x0
   18360:	b.ne	182a4 <GOMP_taskloop@@GOMP_4.5+0xd88>  // b.any
   18364:	ldr	x0, [x29, #568]
   18368:	cmp	x0, #0x0
   1836c:	b.eq	18388 <GOMP_taskloop@@GOMP_4.5+0xe6c>  // b.none
   18370:	ldr	x0, [x29, #568]
   18374:	ldr	x1, [x0, #56]
   18378:	ldr	x0, [x29, #232]
   1837c:	add	x1, x1, x0
   18380:	ldr	x0, [x29, #568]
   18384:	str	x1, [x0, #56]
   18388:	str	xzr, [x29, #680]
   1838c:	b	18464 <GOMP_taskloop@@GOMP_4.5+0xf48>
   18390:	ldr	x0, [x29, #584]
   18394:	ldr	x1, [x29, #680]
   18398:	ldr	x0, [x0, x1, lsl #3]
   1839c:	str	x0, [x29, #560]
   183a0:	ldr	x0, [x29, #576]
   183a4:	add	x1, x0, #0x8
   183a8:	ldr	x0, [x29, #560]
   183ac:	ldrb	w0, [x0, #207]
   183b0:	mov	w6, w0
   183b4:	mov	w5, #0x0                   	// #0
   183b8:	mov	w4, #0x0                   	// #0
   183bc:	ldr	w3, [x29, #240]
   183c0:	ldr	x2, [x29, #560]
   183c4:	mov	w0, #0x1                   	// #1
   183c8:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   183cc:	ldr	x0, [x29, #568]
   183d0:	cmp	x0, #0x0
   183d4:	b.eq	18404 <GOMP_taskloop@@GOMP_4.5+0xee8>  // b.none
   183d8:	ldr	x0, [x29, #568]
   183dc:	add	x1, x0, #0x8
   183e0:	ldr	x0, [x29, #560]
   183e4:	ldrb	w0, [x0, #207]
   183e8:	mov	w6, w0
   183ec:	mov	w5, #0x0                   	// #0
   183f0:	mov	w4, #0x0                   	// #0
   183f4:	ldr	w3, [x29, #240]
   183f8:	ldr	x2, [x29, #560]
   183fc:	mov	w0, #0x2                   	// #2
   18400:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   18404:	ldr	x0, [x29, #664]
   18408:	add	x1, x0, #0x508
   1840c:	ldr	x0, [x29, #560]
   18410:	ldrb	w0, [x0, #207]
   18414:	mov	w6, w0
   18418:	mov	w5, #0x0                   	// #0
   1841c:	mov	w4, #0x1                   	// #1
   18420:	ldr	w3, [x29, #240]
   18424:	ldr	x2, [x29, #560]
   18428:	mov	w0, #0x0                   	// #0
   1842c:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   18430:	ldr	x0, [x29, #664]
   18434:	ldr	w0, [x0, #1320]
   18438:	add	w1, w0, #0x1
   1843c:	ldr	x0, [x29, #664]
   18440:	str	w1, [x0, #1320]
   18444:	ldr	x0, [x29, #664]
   18448:	ldr	w0, [x0, #1324]
   1844c:	add	w1, w0, #0x1
   18450:	ldr	x0, [x29, #664]
   18454:	str	w1, [x0, #1324]
   18458:	ldr	x0, [x29, #680]
   1845c:	add	x0, x0, #0x1
   18460:	str	x0, [x29, #680]
   18464:	ldr	x1, [x29, #680]
   18468:	ldr	x0, [x29, #232]
   1846c:	cmp	x1, x0
   18470:	b.cc	18390 <GOMP_taskloop@@GOMP_4.5+0xe74>  // b.lo, b.ul, b.last
   18474:	ldr	x0, [x29, #664]
   18478:	add	x0, x0, #0x80
   1847c:	bl	1566c <GOMP_single_copy_end@@GOMP_1.0+0x95c>
   18480:	ldr	x0, [x29, #664]
   18484:	ldr	w0, [x0, #1328]
   18488:	ldr	x1, [x29, #576]
   1848c:	ldrb	w1, [x1, #204]
   18490:	eor	w1, w1, #0x1
   18494:	and	w1, w1, #0xff
   18498:	add	w1, w0, w1
   1849c:	ldr	x0, [x29, #664]
   184a0:	ldr	w0, [x0]
   184a4:	cmp	w1, w0
   184a8:	b.cs	184f4 <GOMP_taskloop@@GOMP_4.5+0xfd8>  // b.hs, b.nlast
   184ac:	ldr	x0, [x29, #664]
   184b0:	ldr	w1, [x0]
   184b4:	ldr	x0, [x29, #664]
   184b8:	ldr	w0, [x0, #1328]
   184bc:	sub	w0, w1, w0
   184c0:	ldr	x1, [x29, #576]
   184c4:	ldrb	w1, [x1, #204]
   184c8:	eor	w1, w1, #0x1
   184cc:	and	w1, w1, #0xff
   184d0:	sub	w0, w0, w1
   184d4:	str	w0, [x29, #692]
   184d8:	ldrsw	x0, [x29, #692]
   184dc:	ldr	x1, [x29, #232]
   184e0:	cmp	x1, x0
   184e4:	b.cs	184f8 <GOMP_taskloop@@GOMP_4.5+0xfdc>  // b.hs, b.nlast
   184e8:	ldr	x0, [x29, #232]
   184ec:	str	w0, [x29, #692]
   184f0:	b	184f8 <GOMP_taskloop@@GOMP_4.5+0xfdc>
   184f4:	str	wzr, [x29, #692]
   184f8:	ldr	x0, [x29, #664]
   184fc:	add	x0, x0, #0x500
   18500:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   18504:	ldr	w0, [x29, #692]
   18508:	cmp	w0, #0x0
   1850c:	b.eq	18520 <GOMP_taskloop@@GOMP_4.5+0x1004>  // b.none
   18510:	ldr	x0, [x29, #664]
   18514:	add	x0, x0, #0x80
   18518:	ldr	w1, [x29, #692]
   1851c:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   18520:	mov	sp, x19
   18524:	ldr	w0, [x29, #244]
   18528:	and	w0, w0, #0x800
   1852c:	cmp	w0, #0x0
   18530:	b.ne	18558 <GOMP_taskloop@@GOMP_4.5+0x103c>  // b.any
   18534:	bl	1be68 <GOMP_taskgroup_end@@GOMP_4.0>
   18538:	b	18558 <GOMP_taskloop@@GOMP_4.5+0x103c>
   1853c:	nop
   18540:	b	18558 <GOMP_taskloop@@GOMP_4.5+0x103c>
   18544:	nop
   18548:	b	18558 <GOMP_taskloop@@GOMP_4.5+0x103c>
   1854c:	nop
   18550:	b	18558 <GOMP_taskloop@@GOMP_4.5+0x103c>
   18554:	nop
   18558:	mov	sp, x29
   1855c:	ldp	x19, x20, [sp, #16]
   18560:	ldp	x21, x22, [sp, #32]
   18564:	ldp	x23, x24, [sp, #48]
   18568:	ldp	x25, x26, [sp, #64]
   1856c:	ldr	x27, [sp, #80]
   18570:	ldp	x29, x30, [sp]
   18574:	add	sp, sp, #0x2e0
   18578:	ret

000000000001857c <GOMP_taskloop_ull@@GOMP_4.5>:
   1857c:	sub	sp, sp, #0x2e0
   18580:	stp	x29, x30, [sp]
   18584:	mov	x29, sp
   18588:	stp	x19, x20, [sp, #16]
   1858c:	stp	x21, x22, [sp, #32]
   18590:	stp	x23, x24, [sp, #48]
   18594:	stp	x25, x26, [sp, #64]
   18598:	str	x27, [sp, #80]
   1859c:	str	x0, [x29, #280]
   185a0:	str	x1, [x29, #272]
   185a4:	str	x2, [x29, #264]
   185a8:	str	x3, [x29, #256]
   185ac:	str	x4, [x29, #248]
   185b0:	str	w5, [x29, #244]
   185b4:	str	x6, [x29, #232]
   185b8:	str	w7, [x29, #240]
   185bc:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   185c0:	str	x0, [x29, #672]
   185c4:	ldr	x0, [x29, #672]
   185c8:	ldr	x0, [x0, #16]
   185cc:	str	x0, [x29, #664]
   185d0:	ldr	x0, [x29, #664]
   185d4:	cmp	x0, #0x0
   185d8:	b.eq	185f4 <GOMP_taskloop_ull@@GOMP_4.5+0x78>  // b.none
   185dc:	ldr	x0, [x29, #664]
   185e0:	add	x0, x0, #0x80
   185e4:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   185e8:	and	w0, w0, #0xff
   185ec:	cmp	w0, #0x0
   185f0:	b.ne	195e0 <GOMP_taskloop_ull@@GOMP_4.5+0x1064>  // b.any
   185f4:	ldr	w0, [x29, #244]
   185f8:	and	w0, w0, #0x100
   185fc:	cmp	w0, #0x0
   18600:	b.eq	1863c <GOMP_taskloop_ull@@GOMP_4.5+0xc0>  // b.none
   18604:	ldr	x1, [x29, #736]
   18608:	ldr	x0, [x29, #744]
   1860c:	cmp	x1, x0
   18610:	b.cs	195e8 <GOMP_taskloop_ull@@GOMP_4.5+0x106c>  // b.hs, b.nlast
   18614:	ldr	x1, [x29, #744]
   18618:	ldr	x0, [x29, #736]
   1861c:	sub	x1, x1, x0
   18620:	ldr	x0, [x29, #752]
   18624:	add	x0, x1, x0
   18628:	sub	x1, x0, #0x1
   1862c:	ldr	x0, [x29, #752]
   18630:	udiv	x0, x1, x0
   18634:	str	x0, [x29, #720]
   18638:	b	18674 <GOMP_taskloop_ull@@GOMP_4.5+0xf8>
   1863c:	ldr	x1, [x29, #736]
   18640:	ldr	x0, [x29, #744]
   18644:	cmp	x1, x0
   18648:	b.ls	195f0 <GOMP_taskloop_ull@@GOMP_4.5+0x1074>  // b.plast
   1864c:	ldr	x1, [x29, #736]
   18650:	ldr	x0, [x29, #744]
   18654:	sub	x1, x1, x0
   18658:	ldr	x0, [x29, #752]
   1865c:	sub	x0, x1, x0
   18660:	sub	x1, x0, #0x1
   18664:	ldr	x0, [x29, #752]
   18668:	neg	x0, x0
   1866c:	udiv	x0, x1, x0
   18670:	str	x0, [x29, #720]
   18674:	ldr	x0, [x29, #752]
   18678:	str	x0, [x29, #728]
   1867c:	ldr	x0, [x29, #720]
   18680:	str	x0, [x29, #712]
   18684:	ldr	w0, [x29, #244]
   18688:	and	w0, w0, #0x200
   1868c:	cmp	w0, #0x0
   18690:	b.eq	187d0 <GOMP_taskloop_ull@@GOMP_4.5+0x254>  // b.none
   18694:	ldr	x0, [x29, #232]
   18698:	str	x0, [x29, #640]
   1869c:	ldr	x1, [x29, #720]
   186a0:	ldr	x0, [x29, #640]
   186a4:	udiv	x0, x1, x0
   186a8:	str	x0, [x29, #632]
   186ac:	ldr	x0, [x29, #632]
   186b0:	str	x0, [x29, #232]
   186b4:	ldr	x1, [x29, #232]
   186b8:	ldr	x0, [x29, #632]
   186bc:	cmp	x1, x0
   186c0:	b.eq	186cc <GOMP_taskloop_ull@@GOMP_4.5+0x150>  // b.none
   186c4:	mov	x0, #0xffffffffffffffff    	// #-1
   186c8:	str	x0, [x29, #232]
   186cc:	ldr	x0, [x29, #232]
   186d0:	cmp	x0, #0x1
   186d4:	b.hi	186f4 <GOMP_taskloop_ull@@GOMP_4.5+0x178>  // b.pmore
   186d8:	mov	x0, #0x1                   	// #1
   186dc:	str	x0, [x29, #232]
   186e0:	ldr	x1, [x29, #744]
   186e4:	ldr	x0, [x29, #736]
   186e8:	sub	x0, x1, x0
   186ec:	str	x0, [x29, #728]
   186f0:	b	18888 <GOMP_taskloop_ull@@GOMP_4.5+0x30c>
   186f4:	ldr	x1, [x29, #232]
   186f8:	ldr	x0, [x29, #640]
   186fc:	cmp	x1, x0
   18700:	b.cc	18768 <GOMP_taskloop_ull@@GOMP_4.5+0x1ec>  // b.lo, b.ul, b.last
   18704:	ldr	x0, [x29, #232]
   18708:	cmn	x0, #0x1
   1870c:	b.eq	18768 <GOMP_taskloop_ull@@GOMP_4.5+0x1ec>  // b.none
   18710:	ldr	x1, [x29, #232]
   18714:	ldr	x0, [x29, #640]
   18718:	mul	x0, x1, x0
   1871c:	str	x0, [x29, #624]
   18720:	ldr	x1, [x29, #640]
   18724:	ldr	x0, [x29, #752]
   18728:	mul	x0, x1, x0
   1872c:	str	x0, [x29, #728]
   18730:	ldr	x1, [x29, #624]
   18734:	ldr	x0, [x29, #720]
   18738:	cmp	x1, x0
   1873c:	b.eq	18884 <GOMP_taskloop_ull@@GOMP_4.5+0x308>  // b.none
   18740:	ldr	x1, [x29, #728]
   18744:	ldr	x0, [x29, #752]
   18748:	add	x0, x1, x0
   1874c:	str	x0, [x29, #728]
   18750:	ldr	x1, [x29, #720]
   18754:	ldr	x0, [x29, #624]
   18758:	sub	x0, x1, x0
   1875c:	sub	x0, x0, #0x1
   18760:	str	x0, [x29, #712]
   18764:	b	18884 <GOMP_taskloop_ull@@GOMP_4.5+0x308>
   18768:	ldr	x1, [x29, #720]
   1876c:	ldr	x0, [x29, #232]
   18770:	udiv	x0, x1, x0
   18774:	str	x0, [x29, #616]
   18778:	ldr	x0, [x29, #720]
   1877c:	ldr	x1, [x29, #232]
   18780:	udiv	x2, x0, x1
   18784:	ldr	x1, [x29, #232]
   18788:	mul	x1, x2, x1
   1878c:	sub	x0, x0, x1
   18790:	str	x0, [x29, #608]
   18794:	ldr	x1, [x29, #616]
   18798:	ldr	x0, [x29, #752]
   1879c:	mul	x0, x1, x0
   187a0:	str	x0, [x29, #728]
   187a4:	ldr	x0, [x29, #608]
   187a8:	cmp	x0, #0x0
   187ac:	b.eq	18888 <GOMP_taskloop_ull@@GOMP_4.5+0x30c>  // b.none
   187b0:	ldr	x1, [x29, #728]
   187b4:	ldr	x0, [x29, #752]
   187b8:	add	x0, x1, x0
   187bc:	str	x0, [x29, #728]
   187c0:	ldr	x0, [x29, #608]
   187c4:	sub	x0, x0, #0x1
   187c8:	str	x0, [x29, #712]
   187cc:	b	18888 <GOMP_taskloop_ull@@GOMP_4.5+0x30c>
   187d0:	ldr	x0, [x29, #232]
   187d4:	cmp	x0, #0x0
   187d8:	b.ne	18800 <GOMP_taskloop_ull@@GOMP_4.5+0x284>  // b.any
   187dc:	ldr	x0, [x29, #664]
   187e0:	cmp	x0, #0x0
   187e4:	b.eq	187f8 <GOMP_taskloop_ull@@GOMP_4.5+0x27c>  // b.none
   187e8:	ldr	x0, [x29, #664]
   187ec:	ldr	w0, [x0]
   187f0:	mov	w0, w0
   187f4:	b	187fc <GOMP_taskloop_ull@@GOMP_4.5+0x280>
   187f8:	mov	x0, #0x1                   	// #1
   187fc:	str	x0, [x29, #232]
   18800:	ldr	x1, [x29, #232]
   18804:	ldr	x0, [x29, #720]
   18808:	cmp	x1, x0
   1880c:	b.cc	1881c <GOMP_taskloop_ull@@GOMP_4.5+0x2a0>  // b.lo, b.ul, b.last
   18810:	ldr	x0, [x29, #720]
   18814:	str	x0, [x29, #232]
   18818:	b	18888 <GOMP_taskloop_ull@@GOMP_4.5+0x30c>
   1881c:	ldr	x1, [x29, #720]
   18820:	ldr	x0, [x29, #232]
   18824:	udiv	x0, x1, x0
   18828:	str	x0, [x29, #656]
   1882c:	ldr	x0, [x29, #720]
   18830:	ldr	x1, [x29, #232]
   18834:	udiv	x2, x0, x1
   18838:	ldr	x1, [x29, #232]
   1883c:	mul	x1, x2, x1
   18840:	sub	x0, x0, x1
   18844:	str	x0, [x29, #648]
   18848:	ldr	x1, [x29, #656]
   1884c:	ldr	x0, [x29, #752]
   18850:	mul	x0, x1, x0
   18854:	str	x0, [x29, #728]
   18858:	ldr	x0, [x29, #648]
   1885c:	cmp	x0, #0x0
   18860:	b.eq	18888 <GOMP_taskloop_ull@@GOMP_4.5+0x30c>  // b.none
   18864:	ldr	x1, [x29, #728]
   18868:	ldr	x0, [x29, #752]
   1886c:	add	x0, x1, x0
   18870:	str	x0, [x29, #728]
   18874:	ldr	x0, [x29, #648]
   18878:	sub	x0, x0, #0x1
   1887c:	str	x0, [x29, #712]
   18880:	b	18888 <GOMP_taskloop_ull@@GOMP_4.5+0x30c>
   18884:	nop
   18888:	ldr	w0, [x29, #244]
   1888c:	and	w0, w0, #0x800
   18890:	cmp	w0, #0x0
   18894:	b.eq	1893c <GOMP_taskloop_ull@@GOMP_4.5+0x3c0>  // b.none
   18898:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1889c:	add	x0, x0, #0x574
   188a0:	ldrb	w0, [x0]
   188a4:	and	x0, x0, #0xff
   188a8:	cmp	x0, #0x0
   188ac:	b.eq	18964 <GOMP_taskloop_ull@@GOMP_4.5+0x3e8>  // b.none
   188b0:	ldr	x0, [x29, #672]
   188b4:	ldr	x0, [x0, #80]
   188b8:	cmp	x0, #0x0
   188bc:	b.eq	18964 <GOMP_taskloop_ull@@GOMP_4.5+0x3e8>  // b.none
   188c0:	ldr	x0, [x29, #672]
   188c4:	ldr	x0, [x0, #80]
   188c8:	ldr	x0, [x0, #40]
   188cc:	cmp	x0, #0x0
   188d0:	b.eq	18964 <GOMP_taskloop_ull@@GOMP_4.5+0x3e8>  // b.none
   188d4:	ldr	x0, [x29, #672]
   188d8:	ldr	x0, [x0, #80]
   188dc:	ldr	x0, [x0, #40]
   188e0:	ldrb	w0, [x0, #49]
   188e4:	cmp	w0, #0x0
   188e8:	b.ne	195f8 <GOMP_taskloop_ull@@GOMP_4.5+0x107c>  // b.any
   188ec:	ldr	x0, [x29, #672]
   188f0:	ldr	x0, [x0, #80]
   188f4:	ldr	x0, [x0, #40]
   188f8:	ldrb	w0, [x0, #50]
   188fc:	cmp	w0, #0x0
   18900:	b.eq	18964 <GOMP_taskloop_ull@@GOMP_4.5+0x3e8>  // b.none
   18904:	ldr	x0, [x29, #672]
   18908:	ldr	x0, [x0, #80]
   1890c:	ldr	x0, [x0, #40]
   18910:	ldr	x0, [x0]
   18914:	cmp	x0, #0x0
   18918:	b.eq	18964 <GOMP_taskloop_ull@@GOMP_4.5+0x3e8>  // b.none
   1891c:	ldr	x0, [x29, #672]
   18920:	ldr	x0, [x0, #80]
   18924:	ldr	x0, [x0, #40]
   18928:	ldr	x0, [x0]
   1892c:	ldrb	w0, [x0, #49]
   18930:	cmp	w0, #0x0
   18934:	b.eq	18964 <GOMP_taskloop_ull@@GOMP_4.5+0x3e8>  // b.none
   18938:	b	195fc <GOMP_taskloop_ull@@GOMP_4.5+0x1080>
   1893c:	bl	1be0c <GOMP_taskgroup_start@@GOMP_4.0>
   18940:	ldr	w0, [x29, #244]
   18944:	and	w0, w0, #0x1000
   18948:	cmp	w0, #0x0
   1894c:	b.eq	18964 <GOMP_taskloop_ull@@GOMP_4.5+0x3e8>  // b.none
   18950:	ldr	x0, [x29, #272]
   18954:	ldr	x0, [x0, #16]
   18958:	str	x0, [x29, #600]
   1895c:	ldr	x0, [x29, #600]
   18960:	bl	1c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   18964:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   18968:	add	x0, x0, #0x578
   1896c:	ldr	w0, [x0]
   18970:	ldr	w1, [x29, #240]
   18974:	cmp	w1, w0
   18978:	b.le	1898c <GOMP_taskloop_ull@@GOMP_4.5+0x410>
   1897c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   18980:	add	x0, x0, #0x578
   18984:	ldr	w0, [x0]
   18988:	str	w0, [x29, #240]
   1898c:	ldr	w0, [x29, #244]
   18990:	and	w0, w0, #0x400
   18994:	cmp	w0, #0x0
   18998:	b.eq	189f8 <GOMP_taskloop_ull@@GOMP_4.5+0x47c>  // b.none
   1899c:	ldr	x0, [x29, #664]
   189a0:	cmp	x0, #0x0
   189a4:	b.eq	189f8 <GOMP_taskloop_ull@@GOMP_4.5+0x47c>  // b.none
   189a8:	ldr	x0, [x29, #672]
   189ac:	ldr	x0, [x0, #80]
   189b0:	cmp	x0, #0x0
   189b4:	b.eq	189cc <GOMP_taskloop_ull@@GOMP_4.5+0x450>  // b.none
   189b8:	ldr	x0, [x29, #672]
   189bc:	ldr	x0, [x0, #80]
   189c0:	ldrb	w0, [x0, #205]
   189c4:	cmp	w0, #0x0
   189c8:	b.ne	189f8 <GOMP_taskloop_ull@@GOMP_4.5+0x47c>  // b.any
   189cc:	ldr	x0, [x29, #664]
   189d0:	ldr	w0, [x0, #1320]
   189d4:	mov	w1, w0
   189d8:	ldr	x0, [x29, #232]
   189dc:	add	x1, x1, x0
   189e0:	ldr	x0, [x29, #664]
   189e4:	ldr	w0, [x0]
   189e8:	lsl	w0, w0, #6
   189ec:	mov	w0, w0
   189f0:	cmp	x1, x0
   189f4:	b.ls	190a8 <GOMP_taskloop_ull@@GOMP_4.5+0xb2c>  // b.plast
   189f8:	ldr	x0, [x29, #264]
   189fc:	cmp	x0, #0x0
   18a00:	cset	w0, ne  // ne = any
   18a04:	and	w0, w0, #0xff
   18a08:	and	x0, x0, #0xff
   18a0c:	cmp	x0, #0x0
   18a10:	b.eq	18f20 <GOMP_taskloop_ull@@GOMP_4.5+0x9a4>  // b.none
   18a14:	mov	x0, sp
   18a18:	mov	x24, x0
   18a1c:	ldr	x2, [x29, #232]
   18a20:	mov	x0, x2
   18a24:	sub	x0, x0, #0x1
   18a28:	str	x0, [x29, #536]
   18a2c:	mov	x22, x2
   18a30:	mov	x23, #0x0                   	// #0
   18a34:	mov	x0, #0x680                 	// #1664
   18a38:	mov	x1, #0x0                   	// #0
   18a3c:	mul	x4, x22, x0
   18a40:	umulh	x3, x22, x0
   18a44:	madd	x3, x23, x0, x3
   18a48:	madd	x3, x22, x1, x3
   18a4c:	str	x4, [x29, #112]
   18a50:	str	x3, [x29, #120]
   18a54:	mov	x0, x2
   18a58:	lsl	x0, x0, #1
   18a5c:	add	x0, x0, x2
   18a60:	lsl	x0, x0, #2
   18a64:	add	x0, x0, x2
   18a68:	lsl	x0, x0, #4
   18a6c:	mov	x20, x2
   18a70:	mov	x21, #0x0                   	// #0
   18a74:	mov	x0, #0x680                 	// #1664
   18a78:	mov	x1, #0x0                   	// #0
   18a7c:	mul	x4, x20, x0
   18a80:	umulh	x3, x20, x0
   18a84:	madd	x3, x21, x0, x3
   18a88:	madd	x3, x20, x1, x3
   18a8c:	str	x4, [x29, #96]
   18a90:	str	x3, [x29, #104]
   18a94:	mov	x0, x2
   18a98:	lsl	x0, x0, #1
   18a9c:	add	x0, x0, x2
   18aa0:	lsl	x0, x0, #2
   18aa4:	add	x0, x0, x2
   18aa8:	lsl	x0, x0, #4
   18aac:	add	x0, x0, #0xf
   18ab0:	lsr	x0, x0, #4
   18ab4:	lsl	x0, x0, #4
   18ab8:	sub	sp, sp, x0
   18abc:	mov	x0, sp
   18ac0:	add	x0, x0, #0x7
   18ac4:	lsr	x0, x0, #3
   18ac8:	lsl	x0, x0, #3
   18acc:	str	x0, [x29, #528]
   18ad0:	ldr	x0, [x29, #672]
   18ad4:	ldr	x0, [x0, #80]
   18ad8:	str	x0, [x29, #520]
   18adc:	ldr	x1, [x29, #256]
   18ae0:	ldr	x0, [x29, #248]
   18ae4:	add	x0, x1, x0
   18ae8:	sub	x1, x0, #0x1
   18aec:	ldr	x0, [x29, #248]
   18af0:	neg	x0, x0
   18af4:	and	x0, x1, x0
   18af8:	str	x0, [x29, #256]
   18afc:	ldr	x1, [x29, #256]
   18b00:	ldr	x0, [x29, #232]
   18b04:	mul	x1, x1, x0
   18b08:	ldr	x0, [x29, #248]
   18b0c:	add	x0, x1, x0
   18b10:	sub	x0, x0, #0x1
   18b14:	mov	x1, x0
   18b18:	sub	x1, x1, #0x1
   18b1c:	str	x1, [x29, #512]
   18b20:	str	x0, [x29, #176]
   18b24:	str	xzr, [x29, #184]
   18b28:	ldp	x2, x3, [x29, #176]
   18b2c:	mov	x1, x2
   18b30:	lsr	x1, x1, #61
   18b34:	mov	x4, x3
   18b38:	lsl	x4, x4, #3
   18b3c:	str	x4, [x29, #216]
   18b40:	ldr	x4, [x29, #216]
   18b44:	orr	x1, x1, x4
   18b48:	str	x1, [x29, #216]
   18b4c:	mov	x1, x2
   18b50:	lsl	x1, x1, #3
   18b54:	str	x1, [x29, #208]
   18b58:	str	x0, [x29, #160]
   18b5c:	str	xzr, [x29, #168]
   18b60:	ldp	x2, x3, [x29, #160]
   18b64:	mov	x1, x2
   18b68:	lsr	x1, x1, #61
   18b6c:	mov	x4, x3
   18b70:	lsl	x4, x4, #3
   18b74:	str	x4, [x29, #200]
   18b78:	ldr	x4, [x29, #200]
   18b7c:	orr	x1, x1, x4
   18b80:	str	x1, [x29, #200]
   18b84:	mov	x1, x2
   18b88:	lsl	x1, x1, #3
   18b8c:	str	x1, [x29, #192]
   18b90:	add	x0, x0, #0xf
   18b94:	lsr	x0, x0, #4
   18b98:	lsl	x0, x0, #4
   18b9c:	sub	sp, sp, x0
   18ba0:	mov	x0, sp
   18ba4:	add	x0, x0, #0x0
   18ba8:	str	x0, [x29, #504]
   18bac:	ldr	x0, [x29, #504]
   18bb0:	mov	x1, x0
   18bb4:	ldr	x0, [x29, #248]
   18bb8:	add	x0, x1, x0
   18bbc:	sub	x0, x0, #0x1
   18bc0:	ldr	x1, [x29, #248]
   18bc4:	neg	x1, x1
   18bc8:	and	x0, x0, x1
   18bcc:	str	x0, [x29, #696]
   18bd0:	ldr	x0, [x29, #696]
   18bd4:	str	x0, [x29, #496]
   18bd8:	str	xzr, [x29, #704]
   18bdc:	b	18dbc <GOMP_taskloop_ull@@GOMP_4.5+0x840>
   18be0:	ldr	x1, [x29, #704]
   18be4:	mov	x0, x1
   18be8:	lsl	x0, x0, #1
   18bec:	add	x0, x0, x1
   18bf0:	lsl	x0, x0, #2
   18bf4:	add	x0, x0, x1
   18bf8:	lsl	x0, x0, #4
   18bfc:	ldr	x1, [x29, #528]
   18c00:	add	x19, x1, x0
   18c04:	mov	w0, #0x0                   	// #0
   18c08:	bl	15784 <GOMP_single_copy_end@@GOMP_1.0+0xa74>
   18c0c:	mov	x2, x0
   18c10:	ldr	x1, [x29, #520]
   18c14:	mov	x0, x19
   18c18:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   18c1c:	ldr	x2, [x29, #528]
   18c20:	ldr	x1, [x29, #704]
   18c24:	mov	x0, x1
   18c28:	lsl	x0, x0, #1
   18c2c:	add	x0, x0, x1
   18c30:	lsl	x0, x0, #2
   18c34:	add	x0, x0, x1
   18c38:	lsl	x0, x0, #4
   18c3c:	add	x0, x2, x0
   18c40:	ldr	w1, [x29, #240]
   18c44:	str	w1, [x0, #88]
   18c48:	ldr	x2, [x29, #528]
   18c4c:	ldr	x1, [x29, #704]
   18c50:	mov	x0, x1
   18c54:	lsl	x0, x0, #1
   18c58:	add	x0, x0, x1
   18c5c:	lsl	x0, x0, #2
   18c60:	add	x0, x0, x1
   18c64:	lsl	x0, x0, #4
   18c68:	add	x0, x2, x0
   18c6c:	mov	w1, #0x1                   	// #1
   18c70:	str	w1, [x0, #200]
   18c74:	ldr	x0, [x29, #672]
   18c78:	ldr	x0, [x0, #80]
   18c7c:	cmp	x0, #0x0
   18c80:	b.eq	18c98 <GOMP_taskloop_ull@@GOMP_4.5+0x71c>  // b.none
   18c84:	ldr	x0, [x29, #672]
   18c88:	ldr	x0, [x0, #80]
   18c8c:	ldrb	w0, [x0, #205]
   18c90:	cmp	w0, #0x0
   18c94:	b.ne	18ca8 <GOMP_taskloop_ull@@GOMP_4.5+0x72c>  // b.any
   18c98:	ldr	w0, [x29, #244]
   18c9c:	and	w0, w0, #0x2
   18ca0:	cmp	w0, #0x0
   18ca4:	b.eq	18cb0 <GOMP_taskloop_ull@@GOMP_4.5+0x734>  // b.none
   18ca8:	mov	w0, #0x1                   	// #1
   18cac:	b	18cb4 <GOMP_taskloop_ull@@GOMP_4.5+0x738>
   18cb0:	mov	w0, #0x0                   	// #0
   18cb4:	and	w0, w0, #0x1
   18cb8:	and	w3, w0, #0xff
   18cbc:	ldr	x2, [x29, #528]
   18cc0:	ldr	x1, [x29, #704]
   18cc4:	mov	x0, x1
   18cc8:	lsl	x0, x0, #1
   18ccc:	add	x0, x0, x1
   18cd0:	lsl	x0, x0, #2
   18cd4:	add	x0, x0, x1
   18cd8:	lsl	x0, x0, #4
   18cdc:	add	x0, x2, x0
   18ce0:	mov	w1, w3
   18ce4:	strb	w1, [x0, #205]
   18ce8:	ldr	x0, [x29, #672]
   18cec:	ldr	x0, [x0, #80]
   18cf0:	cmp	x0, #0x0
   18cf4:	b.eq	18d64 <GOMP_taskloop_ull@@GOMP_4.5+0x7e8>  // b.none
   18cf8:	ldr	x0, [x29, #672]
   18cfc:	ldr	x0, [x0, #80]
   18d00:	ldrb	w3, [x0, #204]
   18d04:	ldr	x2, [x29, #528]
   18d08:	ldr	x1, [x29, #704]
   18d0c:	mov	x0, x1
   18d10:	lsl	x0, x0, #1
   18d14:	add	x0, x0, x1
   18d18:	lsl	x0, x0, #2
   18d1c:	add	x0, x0, x1
   18d20:	lsl	x0, x0, #4
   18d24:	add	x0, x2, x0
   18d28:	mov	w1, w3
   18d2c:	strb	w1, [x0, #204]
   18d30:	ldr	x0, [x29, #672]
   18d34:	ldr	x0, [x0, #80]
   18d38:	ldr	x2, [x0, #40]
   18d3c:	ldr	x3, [x29, #528]
   18d40:	ldr	x1, [x29, #704]
   18d44:	mov	x0, x1
   18d48:	lsl	x0, x0, #1
   18d4c:	add	x0, x0, x1
   18d50:	lsl	x0, x0, #2
   18d54:	add	x0, x0, x1
   18d58:	lsl	x0, x0, #4
   18d5c:	add	x0, x3, x0
   18d60:	str	x2, [x0, #40]
   18d64:	ldr	x1, [x29, #704]
   18d68:	mov	x0, x1
   18d6c:	lsl	x0, x0, #1
   18d70:	add	x0, x0, x1
   18d74:	lsl	x0, x0, #2
   18d78:	add	x0, x0, x1
   18d7c:	lsl	x0, x0, #4
   18d80:	ldr	x1, [x29, #528]
   18d84:	add	x1, x1, x0
   18d88:	ldr	x0, [x29, #672]
   18d8c:	str	x1, [x0, #80]
   18d90:	ldr	x2, [x29, #264]
   18d94:	ldr	x1, [x29, #272]
   18d98:	ldr	x0, [x29, #696]
   18d9c:	blr	x2
   18da0:	ldr	x0, [x29, #256]
   18da4:	ldr	x1, [x29, #696]
   18da8:	add	x0, x1, x0
   18dac:	str	x0, [x29, #696]
   18db0:	ldr	x0, [x29, #704]
   18db4:	add	x0, x0, #0x1
   18db8:	str	x0, [x29, #704]
   18dbc:	ldr	x1, [x29, #704]
   18dc0:	ldr	x0, [x29, #232]
   18dc4:	cmp	x1, x0
   18dc8:	b.cc	18be0 <GOMP_taskloop_ull@@GOMP_4.5+0x664>  // b.lo, b.ul, b.last
   18dcc:	ldr	x0, [x29, #496]
   18dd0:	str	x0, [x29, #696]
   18dd4:	str	xzr, [x29, #704]
   18dd8:	b	18f08 <GOMP_taskloop_ull@@GOMP_4.5+0x98c>
   18ddc:	ldr	x1, [x29, #704]
   18de0:	mov	x0, x1
   18de4:	lsl	x0, x0, #1
   18de8:	add	x0, x0, x1
   18dec:	lsl	x0, x0, #2
   18df0:	add	x0, x0, x1
   18df4:	lsl	x0, x0, #4
   18df8:	ldr	x1, [x29, #528]
   18dfc:	add	x1, x1, x0
   18e00:	ldr	x0, [x29, #672]
   18e04:	str	x1, [x0, #80]
   18e08:	ldr	x0, [x29, #696]
   18e0c:	ldr	x1, [x29, #736]
   18e10:	str	x1, [x0]
   18e14:	ldr	x1, [x29, #736]
   18e18:	ldr	x0, [x29, #728]
   18e1c:	add	x0, x1, x0
   18e20:	str	x0, [x29, #736]
   18e24:	ldr	x0, [x29, #696]
   18e28:	add	x0, x0, #0x8
   18e2c:	ldr	x1, [x29, #736]
   18e30:	str	x1, [x0]
   18e34:	ldr	x1, [x29, #704]
   18e38:	ldr	x0, [x29, #712]
   18e3c:	cmp	x1, x0
   18e40:	b.ne	18e54 <GOMP_taskloop_ull@@GOMP_4.5+0x8d8>  // b.any
   18e44:	ldr	x1, [x29, #728]
   18e48:	ldr	x0, [x29, #752]
   18e4c:	sub	x0, x1, x0
   18e50:	str	x0, [x29, #728]
   18e54:	ldr	x1, [x29, #280]
   18e58:	ldr	x0, [x29, #696]
   18e5c:	blr	x1
   18e60:	ldr	x0, [x29, #256]
   18e64:	ldr	x1, [x29, #696]
   18e68:	add	x0, x1, x0
   18e6c:	str	x0, [x29, #696]
   18e70:	ldr	x1, [x29, #704]
   18e74:	mov	x0, x1
   18e78:	lsl	x0, x0, #1
   18e7c:	add	x0, x0, x1
   18e80:	lsl	x0, x0, #2
   18e84:	add	x0, x0, x1
   18e88:	lsl	x0, x0, #4
   18e8c:	ldr	x1, [x29, #528]
   18e90:	add	x0, x1, x0
   18e94:	add	x0, x0, #0x8
   18e98:	mov	w1, #0x0                   	// #0
   18e9c:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   18ea0:	and	w0, w0, #0xff
   18ea4:	eor	w0, w0, #0x1
   18ea8:	and	w0, w0, #0xff
   18eac:	cmp	w0, #0x0
   18eb0:	b.eq	18ef8 <GOMP_taskloop_ull@@GOMP_4.5+0x97c>  // b.none
   18eb4:	ldr	x0, [x29, #664]
   18eb8:	add	x0, x0, #0x500
   18ebc:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   18ec0:	ldr	x1, [x29, #704]
   18ec4:	mov	x0, x1
   18ec8:	lsl	x0, x0, #1
   18ecc:	add	x0, x0, x1
   18ed0:	lsl	x0, x0, #2
   18ed4:	add	x0, x0, x1
   18ed8:	lsl	x0, x0, #4
   18edc:	ldr	x1, [x29, #528]
   18ee0:	add	x0, x1, x0
   18ee4:	add	x0, x0, #0x8
   18ee8:	bl	1643c <GOMP_single_copy_end@@GOMP_1.0+0x172c>
   18eec:	ldr	x0, [x29, #664]
   18ef0:	add	x0, x0, #0x500
   18ef4:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   18ef8:	bl	16330 <GOMP_single_copy_end@@GOMP_1.0+0x1620>
   18efc:	ldr	x0, [x29, #704]
   18f00:	add	x0, x0, #0x1
   18f04:	str	x0, [x29, #704]
   18f08:	ldr	x1, [x29, #704]
   18f0c:	ldr	x0, [x29, #232]
   18f10:	cmp	x1, x0
   18f14:	b.cc	18ddc <GOMP_taskloop_ull@@GOMP_4.5+0x860>  // b.lo, b.ul, b.last
   18f18:	mov	sp, x24
   18f1c:	b	195c8 <GOMP_taskloop_ull@@GOMP_4.5+0x104c>
   18f20:	str	xzr, [x29, #704]
   18f24:	b	19094 <GOMP_taskloop_ull@@GOMP_4.5+0xb18>
   18f28:	ldr	x0, [x29, #672]
   18f2c:	ldr	x19, [x0, #80]
   18f30:	mov	w0, #0x0                   	// #0
   18f34:	bl	15784 <GOMP_single_copy_end@@GOMP_1.0+0xa74>
   18f38:	mov	x1, x0
   18f3c:	add	x0, x29, #0x120
   18f40:	mov	x2, x1
   18f44:	mov	x1, x19
   18f48:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   18f4c:	ldr	w0, [x29, #240]
   18f50:	str	w0, [x29, #376]
   18f54:	mov	w0, #0x1                   	// #1
   18f58:	str	w0, [x29, #488]
   18f5c:	ldr	x0, [x29, #672]
   18f60:	ldr	x0, [x0, #80]
   18f64:	cmp	x0, #0x0
   18f68:	b.eq	18f80 <GOMP_taskloop_ull@@GOMP_4.5+0xa04>  // b.none
   18f6c:	ldr	x0, [x29, #672]
   18f70:	ldr	x0, [x0, #80]
   18f74:	ldrb	w0, [x0, #205]
   18f78:	cmp	w0, #0x0
   18f7c:	b.ne	18f90 <GOMP_taskloop_ull@@GOMP_4.5+0xa14>  // b.any
   18f80:	ldr	w0, [x29, #244]
   18f84:	and	w0, w0, #0x2
   18f88:	cmp	w0, #0x0
   18f8c:	b.eq	18f98 <GOMP_taskloop_ull@@GOMP_4.5+0xa1c>  // b.none
   18f90:	mov	w0, #0x1                   	// #1
   18f94:	b	18f9c <GOMP_taskloop_ull@@GOMP_4.5+0xa20>
   18f98:	mov	w0, #0x0                   	// #0
   18f9c:	and	w0, w0, #0x1
   18fa0:	and	w0, w0, #0xff
   18fa4:	strb	w0, [x29, #493]
   18fa8:	ldr	x0, [x29, #672]
   18fac:	ldr	x0, [x0, #80]
   18fb0:	cmp	x0, #0x0
   18fb4:	b.eq	18fd8 <GOMP_taskloop_ull@@GOMP_4.5+0xa5c>  // b.none
   18fb8:	ldr	x0, [x29, #672]
   18fbc:	ldr	x0, [x0, #80]
   18fc0:	ldrb	w0, [x0, #204]
   18fc4:	strb	w0, [x29, #492]
   18fc8:	ldr	x0, [x29, #672]
   18fcc:	ldr	x0, [x0, #80]
   18fd0:	ldr	x0, [x0, #40]
   18fd4:	str	x0, [x29, #328]
   18fd8:	ldr	x0, [x29, #672]
   18fdc:	add	x1, x29, #0x120
   18fe0:	str	x1, [x0, #80]
   18fe4:	ldr	x0, [x29, #272]
   18fe8:	ldr	x1, [x29, #736]
   18fec:	str	x1, [x0]
   18ff0:	ldr	x1, [x29, #736]
   18ff4:	ldr	x0, [x29, #728]
   18ff8:	add	x0, x1, x0
   18ffc:	str	x0, [x29, #736]
   19000:	ldr	x0, [x29, #272]
   19004:	add	x0, x0, #0x8
   19008:	ldr	x1, [x29, #736]
   1900c:	str	x1, [x0]
   19010:	ldr	x1, [x29, #704]
   19014:	ldr	x0, [x29, #712]
   19018:	cmp	x1, x0
   1901c:	b.ne	19030 <GOMP_taskloop_ull@@GOMP_4.5+0xab4>  // b.any
   19020:	ldr	x1, [x29, #728]
   19024:	ldr	x0, [x29, #752]
   19028:	sub	x0, x1, x0
   1902c:	str	x0, [x29, #728]
   19030:	ldr	x1, [x29, #280]
   19034:	ldr	x0, [x29, #272]
   19038:	blr	x1
   1903c:	add	x0, x29, #0x120
   19040:	add	x0, x0, #0x8
   19044:	mov	w1, #0x0                   	// #0
   19048:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   1904c:	and	w0, w0, #0xff
   19050:	eor	w0, w0, #0x1
   19054:	and	w0, w0, #0xff
   19058:	cmp	w0, #0x0
   1905c:	b.eq	19084 <GOMP_taskloop_ull@@GOMP_4.5+0xb08>  // b.none
   19060:	ldr	x0, [x29, #664]
   19064:	add	x0, x0, #0x500
   19068:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1906c:	add	x0, x29, #0x120
   19070:	add	x0, x0, #0x8
   19074:	bl	1643c <GOMP_single_copy_end@@GOMP_1.0+0x172c>
   19078:	ldr	x0, [x29, #664]
   1907c:	add	x0, x0, #0x500
   19080:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   19084:	bl	16330 <GOMP_single_copy_end@@GOMP_1.0+0x1620>
   19088:	ldr	x0, [x29, #704]
   1908c:	add	x0, x0, #0x1
   19090:	str	x0, [x29, #704]
   19094:	ldr	x1, [x29, #704]
   19098:	ldr	x0, [x29, #232]
   1909c:	cmp	x1, x0
   190a0:	b.cc	18f28 <GOMP_taskloop_ull@@GOMP_4.5+0x9ac>  // b.lo, b.ul, b.last
   190a4:	b	195c8 <GOMP_taskloop_ull@@GOMP_4.5+0x104c>
   190a8:	mov	x0, sp
   190ac:	mov	x19, x0
   190b0:	ldr	x0, [x29, #232]
   190b4:	mov	x1, x0
   190b8:	sub	x1, x1, #0x1
   190bc:	str	x1, [x29, #592]
   190c0:	str	x0, [x29, #144]
   190c4:	str	xzr, [x29, #152]
   190c8:	ldp	x2, x3, [x29, #144]
   190cc:	mov	x1, x2
   190d0:	lsr	x1, x1, #58
   190d4:	mov	x4, x3
   190d8:	lsl	x27, x4, #6
   190dc:	orr	x27, x1, x27
   190e0:	mov	x1, x2
   190e4:	lsl	x26, x1, #6
   190e8:	str	x0, [x29, #128]
   190ec:	str	xzr, [x29, #136]
   190f0:	ldp	x2, x3, [x29, #128]
   190f4:	mov	x1, x2
   190f8:	lsr	x1, x1, #58
   190fc:	mov	x4, x3
   19100:	lsl	x25, x4, #6
   19104:	orr	x25, x1, x25
   19108:	mov	x1, x2
   1910c:	lsl	x24, x1, #6
   19110:	lsl	x0, x0, #3
   19114:	add	x0, x0, #0xf
   19118:	lsr	x0, x0, #4
   1911c:	lsl	x0, x0, #4
   19120:	sub	sp, sp, x0
   19124:	mov	x0, sp
   19128:	add	x0, x0, #0x7
   1912c:	lsr	x0, x0, #3
   19130:	lsl	x0, x0, #3
   19134:	str	x0, [x29, #584]
   19138:	ldr	x0, [x29, #672]
   1913c:	ldr	x0, [x0, #80]
   19140:	str	x0, [x29, #576]
   19144:	ldr	x0, [x29, #576]
   19148:	ldr	x0, [x0, #40]
   1914c:	str	x0, [x29, #568]
   19150:	str	xzr, [x29, #680]
   19154:	b	192e0 <GOMP_taskloop_ull@@GOMP_4.5+0xd64>
   19158:	ldr	x1, [x29, #256]
   1915c:	ldr	x0, [x29, #248]
   19160:	add	x0, x1, x0
   19164:	add	x0, x0, #0xcf
   19168:	bl	8dd0 <fprintf@plt+0x1a0>
   1916c:	str	x0, [x29, #552]
   19170:	ldr	x0, [x29, #584]
   19174:	ldr	x1, [x29, #680]
   19178:	ldr	x2, [x29, #552]
   1917c:	str	x2, [x0, x1, lsl #3]
   19180:	ldr	x1, [x29, #552]
   19184:	ldr	x0, [x29, #248]
   19188:	add	x0, x1, x0
   1918c:	add	x0, x0, #0xcf
   19190:	ldr	x1, [x29, #248]
   19194:	neg	x1, x1
   19198:	and	x0, x0, x1
   1919c:	str	x0, [x29, #544]
   191a0:	mov	w0, #0x0                   	// #0
   191a4:	bl	15784 <GOMP_single_copy_end@@GOMP_1.0+0xa74>
   191a8:	mov	x2, x0
   191ac:	ldr	x1, [x29, #576]
   191b0:	ldr	x0, [x29, #552]
   191b4:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   191b8:	ldr	x0, [x29, #552]
   191bc:	ldr	w1, [x29, #240]
   191c0:	str	w1, [x0, #88]
   191c4:	ldr	x0, [x29, #552]
   191c8:	mov	w1, #0x1                   	// #1
   191cc:	str	w1, [x0, #200]
   191d0:	ldr	x0, [x29, #576]
   191d4:	ldrb	w1, [x0, #204]
   191d8:	ldr	x0, [x29, #552]
   191dc:	strb	w1, [x0, #204]
   191e0:	ldr	x0, [x29, #552]
   191e4:	ldr	x1, [x29, #568]
   191e8:	str	x1, [x0, #40]
   191ec:	ldr	x0, [x29, #672]
   191f0:	ldr	x1, [x29, #552]
   191f4:	str	x1, [x0, #80]
   191f8:	ldr	x0, [x29, #264]
   191fc:	cmp	x0, #0x0
   19200:	b.eq	19224 <GOMP_taskloop_ull@@GOMP_4.5+0xca8>  // b.none
   19204:	ldr	x2, [x29, #264]
   19208:	ldr	x1, [x29, #272]
   1920c:	ldr	x0, [x29, #544]
   19210:	blr	x2
   19214:	ldr	x0, [x29, #552]
   19218:	mov	w1, #0x1                   	// #1
   1921c:	strb	w1, [x0, #206]
   19220:	b	19238 <GOMP_taskloop_ull@@GOMP_4.5+0xcbc>
   19224:	ldr	x0, [x29, #256]
   19228:	mov	x2, x0
   1922c:	ldr	x1, [x29, #272]
   19230:	ldr	x0, [x29, #544]
   19234:	bl	86a0 <memcpy@plt>
   19238:	ldr	x0, [x29, #544]
   1923c:	ldr	x1, [x29, #736]
   19240:	str	x1, [x0]
   19244:	ldr	x1, [x29, #736]
   19248:	ldr	x0, [x29, #728]
   1924c:	add	x0, x1, x0
   19250:	str	x0, [x29, #736]
   19254:	ldr	x0, [x29, #544]
   19258:	add	x0, x0, #0x8
   1925c:	ldr	x1, [x29, #736]
   19260:	str	x1, [x0]
   19264:	ldr	x1, [x29, #680]
   19268:	ldr	x0, [x29, #712]
   1926c:	cmp	x1, x0
   19270:	b.ne	19284 <GOMP_taskloop_ull@@GOMP_4.5+0xd08>  // b.any
   19274:	ldr	x1, [x29, #728]
   19278:	ldr	x0, [x29, #752]
   1927c:	sub	x0, x1, x0
   19280:	str	x0, [x29, #728]
   19284:	ldr	x0, [x29, #672]
   19288:	ldr	x1, [x29, #576]
   1928c:	str	x1, [x0, #80]
   19290:	ldr	x0, [x29, #552]
   19294:	mov	w1, #0x2                   	// #2
   19298:	str	w1, [x0, #200]
   1929c:	ldr	x0, [x29, #552]
   192a0:	ldr	x1, [x29, #280]
   192a4:	str	x1, [x0, #184]
   192a8:	ldr	x0, [x29, #552]
   192ac:	ldr	x1, [x29, #544]
   192b0:	str	x1, [x0, #192]
   192b4:	ldr	w0, [x29, #244]
   192b8:	lsr	w0, w0, #1
   192bc:	and	w0, w0, #0x1
   192c0:	cmp	w0, #0x0
   192c4:	cset	w0, ne  // ne = any
   192c8:	and	w1, w0, #0xff
   192cc:	ldr	x0, [x29, #552]
   192d0:	strb	w1, [x0, #205]
   192d4:	ldr	x0, [x29, #680]
   192d8:	add	x0, x0, #0x1
   192dc:	str	x0, [x29, #680]
   192e0:	ldr	x1, [x29, #680]
   192e4:	ldr	x0, [x29, #232]
   192e8:	cmp	x1, x0
   192ec:	b.cc	19158 <GOMP_taskloop_ull@@GOMP_4.5+0xbdc>  // b.lo, b.ul, b.last
   192f0:	ldr	x0, [x29, #664]
   192f4:	add	x0, x0, #0x500
   192f8:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   192fc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   19300:	add	x0, x0, #0x574
   19304:	ldrb	w0, [x0]
   19308:	and	x0, x0, #0xff
   1930c:	cmp	x0, #0x0
   19310:	b.eq	19408 <GOMP_taskloop_ull@@GOMP_4.5+0xe8c>  // b.none
   19314:	ldr	x0, [x29, #264]
   19318:	cmp	x0, #0x0
   1931c:	b.ne	19408 <GOMP_taskloop_ull@@GOMP_4.5+0xe8c>  // b.any
   19320:	ldr	x0, [x29, #664]
   19324:	add	x0, x0, #0x80
   19328:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   1932c:	and	w0, w0, #0xff
   19330:	cmp	w0, #0x0
   19334:	b.eq	193b8 <GOMP_taskloop_ull@@GOMP_4.5+0xe3c>  // b.none
   19338:	nop
   1933c:	b	1934c <GOMP_taskloop_ull@@GOMP_4.5+0xdd0>
   19340:	nop
   19344:	b	1934c <GOMP_taskloop_ull@@GOMP_4.5+0xdd0>
   19348:	nop
   1934c:	ldr	x0, [x29, #664]
   19350:	add	x0, x0, #0x500
   19354:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   19358:	str	xzr, [x29, #680]
   1935c:	b	1938c <GOMP_taskloop_ull@@GOMP_4.5+0xe10>
   19360:	ldr	x0, [x29, #584]
   19364:	ldr	x1, [x29, #680]
   19368:	ldr	x0, [x0, x1, lsl #3]
   1936c:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   19370:	ldr	x0, [x29, #584]
   19374:	ldr	x1, [x29, #680]
   19378:	ldr	x0, [x0, x1, lsl #3]
   1937c:	bl	8a20 <free@plt>
   19380:	ldr	x0, [x29, #680]
   19384:	add	x0, x0, #0x1
   19388:	str	x0, [x29, #680]
   1938c:	ldr	x1, [x29, #680]
   19390:	ldr	x0, [x29, #232]
   19394:	cmp	x1, x0
   19398:	b.cc	19360 <GOMP_taskloop_ull@@GOMP_4.5+0xde4>  // b.lo, b.ul, b.last
   1939c:	ldr	w0, [x29, #244]
   193a0:	and	w0, w0, #0x800
   193a4:	cmp	w0, #0x0
   193a8:	b.ne	193b0 <GOMP_taskloop_ull@@GOMP_4.5+0xe34>  // b.any
   193ac:	bl	1be68 <GOMP_taskgroup_end@@GOMP_4.0>
   193b0:	mov	sp, x19
   193b4:	b	195fc <GOMP_taskloop_ull@@GOMP_4.5+0x1080>
   193b8:	ldr	x0, [x29, #568]
   193bc:	cmp	x0, #0x0
   193c0:	b.eq	19408 <GOMP_taskloop_ull@@GOMP_4.5+0xe8c>  // b.none
   193c4:	ldr	x0, [x29, #568]
   193c8:	ldrb	w0, [x0, #49]
   193cc:	cmp	w0, #0x0
   193d0:	b.ne	19340 <GOMP_taskloop_ull@@GOMP_4.5+0xdc4>  // b.any
   193d4:	ldr	x0, [x29, #568]
   193d8:	ldrb	w0, [x0, #50]
   193dc:	cmp	w0, #0x0
   193e0:	b.eq	19408 <GOMP_taskloop_ull@@GOMP_4.5+0xe8c>  // b.none
   193e4:	ldr	x0, [x29, #568]
   193e8:	ldr	x0, [x0]
   193ec:	cmp	x0, #0x0
   193f0:	b.eq	19408 <GOMP_taskloop_ull@@GOMP_4.5+0xe8c>  // b.none
   193f4:	ldr	x0, [x29, #568]
   193f8:	ldr	x0, [x0]
   193fc:	ldrb	w0, [x0, #49]
   19400:	cmp	w0, #0x0
   19404:	b.ne	19348 <GOMP_taskloop_ull@@GOMP_4.5+0xdcc>  // b.any
   19408:	ldr	x0, [x29, #568]
   1940c:	cmp	x0, #0x0
   19410:	b.eq	1942c <GOMP_taskloop_ull@@GOMP_4.5+0xeb0>  // b.none
   19414:	ldr	x0, [x29, #568]
   19418:	ldr	x1, [x0, #56]
   1941c:	ldr	x0, [x29, #232]
   19420:	add	x1, x1, x0
   19424:	ldr	x0, [x29, #568]
   19428:	str	x1, [x0, #56]
   1942c:	str	xzr, [x29, #680]
   19430:	b	19508 <GOMP_taskloop_ull@@GOMP_4.5+0xf8c>
   19434:	ldr	x0, [x29, #584]
   19438:	ldr	x1, [x29, #680]
   1943c:	ldr	x0, [x0, x1, lsl #3]
   19440:	str	x0, [x29, #560]
   19444:	ldr	x0, [x29, #576]
   19448:	add	x1, x0, #0x8
   1944c:	ldr	x0, [x29, #560]
   19450:	ldrb	w0, [x0, #207]
   19454:	mov	w6, w0
   19458:	mov	w5, #0x0                   	// #0
   1945c:	mov	w4, #0x0                   	// #0
   19460:	ldr	w3, [x29, #240]
   19464:	ldr	x2, [x29, #560]
   19468:	mov	w0, #0x1                   	// #1
   1946c:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   19470:	ldr	x0, [x29, #568]
   19474:	cmp	x0, #0x0
   19478:	b.eq	194a8 <GOMP_taskloop_ull@@GOMP_4.5+0xf2c>  // b.none
   1947c:	ldr	x0, [x29, #568]
   19480:	add	x1, x0, #0x8
   19484:	ldr	x0, [x29, #560]
   19488:	ldrb	w0, [x0, #207]
   1948c:	mov	w6, w0
   19490:	mov	w5, #0x0                   	// #0
   19494:	mov	w4, #0x0                   	// #0
   19498:	ldr	w3, [x29, #240]
   1949c:	ldr	x2, [x29, #560]
   194a0:	mov	w0, #0x2                   	// #2
   194a4:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   194a8:	ldr	x0, [x29, #664]
   194ac:	add	x1, x0, #0x508
   194b0:	ldr	x0, [x29, #560]
   194b4:	ldrb	w0, [x0, #207]
   194b8:	mov	w6, w0
   194bc:	mov	w5, #0x0                   	// #0
   194c0:	mov	w4, #0x1                   	// #1
   194c4:	ldr	w3, [x29, #240]
   194c8:	ldr	x2, [x29, #560]
   194cc:	mov	w0, #0x0                   	// #0
   194d0:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   194d4:	ldr	x0, [x29, #664]
   194d8:	ldr	w0, [x0, #1320]
   194dc:	add	w1, w0, #0x1
   194e0:	ldr	x0, [x29, #664]
   194e4:	str	w1, [x0, #1320]
   194e8:	ldr	x0, [x29, #664]
   194ec:	ldr	w0, [x0, #1324]
   194f0:	add	w1, w0, #0x1
   194f4:	ldr	x0, [x29, #664]
   194f8:	str	w1, [x0, #1324]
   194fc:	ldr	x0, [x29, #680]
   19500:	add	x0, x0, #0x1
   19504:	str	x0, [x29, #680]
   19508:	ldr	x1, [x29, #680]
   1950c:	ldr	x0, [x29, #232]
   19510:	cmp	x1, x0
   19514:	b.cc	19434 <GOMP_taskloop_ull@@GOMP_4.5+0xeb8>  // b.lo, b.ul, b.last
   19518:	ldr	x0, [x29, #664]
   1951c:	add	x0, x0, #0x80
   19520:	bl	1566c <GOMP_single_copy_end@@GOMP_1.0+0x95c>
   19524:	ldr	x0, [x29, #664]
   19528:	ldr	w0, [x0, #1328]
   1952c:	ldr	x1, [x29, #576]
   19530:	ldrb	w1, [x1, #204]
   19534:	eor	w1, w1, #0x1
   19538:	and	w1, w1, #0xff
   1953c:	add	w1, w0, w1
   19540:	ldr	x0, [x29, #664]
   19544:	ldr	w0, [x0]
   19548:	cmp	w1, w0
   1954c:	b.cs	19598 <GOMP_taskloop_ull@@GOMP_4.5+0x101c>  // b.hs, b.nlast
   19550:	ldr	x0, [x29, #664]
   19554:	ldr	w1, [x0]
   19558:	ldr	x0, [x29, #664]
   1955c:	ldr	w0, [x0, #1328]
   19560:	sub	w0, w1, w0
   19564:	ldr	x1, [x29, #576]
   19568:	ldrb	w1, [x1, #204]
   1956c:	eor	w1, w1, #0x1
   19570:	and	w1, w1, #0xff
   19574:	sub	w0, w0, w1
   19578:	str	w0, [x29, #692]
   1957c:	ldrsw	x0, [x29, #692]
   19580:	ldr	x1, [x29, #232]
   19584:	cmp	x1, x0
   19588:	b.cs	1959c <GOMP_taskloop_ull@@GOMP_4.5+0x1020>  // b.hs, b.nlast
   1958c:	ldr	x0, [x29, #232]
   19590:	str	w0, [x29, #692]
   19594:	b	1959c <GOMP_taskloop_ull@@GOMP_4.5+0x1020>
   19598:	str	wzr, [x29, #692]
   1959c:	ldr	x0, [x29, #664]
   195a0:	add	x0, x0, #0x500
   195a4:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   195a8:	ldr	w0, [x29, #692]
   195ac:	cmp	w0, #0x0
   195b0:	b.eq	195c4 <GOMP_taskloop_ull@@GOMP_4.5+0x1048>  // b.none
   195b4:	ldr	x0, [x29, #664]
   195b8:	add	x0, x0, #0x80
   195bc:	ldr	w1, [x29, #692]
   195c0:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   195c4:	mov	sp, x19
   195c8:	ldr	w0, [x29, #244]
   195cc:	and	w0, w0, #0x800
   195d0:	cmp	w0, #0x0
   195d4:	b.ne	195fc <GOMP_taskloop_ull@@GOMP_4.5+0x1080>  // b.any
   195d8:	bl	1be68 <GOMP_taskgroup_end@@GOMP_4.0>
   195dc:	b	195fc <GOMP_taskloop_ull@@GOMP_4.5+0x1080>
   195e0:	nop
   195e4:	b	195fc <GOMP_taskloop_ull@@GOMP_4.5+0x1080>
   195e8:	nop
   195ec:	b	195fc <GOMP_taskloop_ull@@GOMP_4.5+0x1080>
   195f0:	nop
   195f4:	b	195fc <GOMP_taskloop_ull@@GOMP_4.5+0x1080>
   195f8:	nop
   195fc:	mov	sp, x29
   19600:	ldp	x19, x20, [sp, #16]
   19604:	ldp	x21, x22, [sp, #32]
   19608:	ldp	x23, x24, [sp, #48]
   1960c:	ldp	x25, x26, [sp, #64]
   19610:	ldr	x27, [sp, #80]
   19614:	ldp	x29, x30, [sp]
   19618:	add	sp, sp, #0x2e0
   1961c:	ret
   19620:	stp	x29, x30, [sp, #-64]!
   19624:	mov	x29, sp
   19628:	str	w0, [sp, #44]
   1962c:	str	x1, [sp, #32]
   19630:	str	x2, [sp, #24]
   19634:	ldr	x0, [sp, #32]
   19638:	bl	14d68 <GOMP_single_copy_end@@GOMP_1.0+0x58>
   1963c:	and	w0, w0, #0xff
   19640:	cmp	w0, #0x0
   19644:	b.eq	19664 <GOMP_taskloop_ull@@GOMP_4.5+0x10e8>  // b.none
   19648:	ldr	x0, [sp, #24]
   1964c:	ldr	w0, [x0, #88]
   19650:	mov	w1, w0
   19654:	ldr	x0, [sp, #32]
   19658:	bl	14e6c <GOMP_single_copy_end@@GOMP_1.0+0x15c>
   1965c:	str	x0, [sp, #56]
   19660:	b	19670 <GOMP_taskloop_ull@@GOMP_4.5+0x10f4>
   19664:	ldr	x0, [sp, #32]
   19668:	add	x0, x0, #0x8
   1966c:	str	x0, [sp, #56]
   19670:	ldr	x1, [sp, #24]
   19674:	ldr	w0, [sp, #44]
   19678:	bl	15868 <GOMP_single_copy_end@@GOMP_1.0+0xb58>
   1967c:	mov	w2, #0x0                   	// #0
   19680:	mov	x1, x0
   19684:	ldr	x0, [sp, #56]
   19688:	bl	152b8 <GOMP_single_copy_end@@GOMP_1.0+0x5a8>
   1968c:	ldr	x0, [sp, #24]
   19690:	ldr	w1, [x0, #88]
   19694:	ldr	w0, [sp, #44]
   19698:	cmp	w0, #0x1
   1969c:	cset	w0, eq  // eq = none
   196a0:	and	w2, w0, #0xff
   196a4:	ldr	x0, [sp, #24]
   196a8:	ldrb	w0, [x0, #207]
   196ac:	mov	w6, w0
   196b0:	mov	w5, w2
   196b4:	mov	w4, #0x0                   	// #0
   196b8:	mov	w3, w1
   196bc:	ldr	x2, [sp, #24]
   196c0:	ldr	x1, [sp, #56]
   196c4:	ldr	w0, [sp, #44]
   196c8:	bl	14eb4 <GOMP_single_copy_end@@GOMP_1.0+0x1a4>
   196cc:	nop
   196d0:	ldp	x29, x30, [sp], #64
   196d4:	ret
   196d8:	stp	x29, x30, [sp, #-48]!
   196dc:	mov	x29, sp
   196e0:	str	x0, [sp, #24]
   196e4:	str	x1, [sp, #16]
   196e8:	ldr	x0, [sp, #16]
   196ec:	ldr	x0, [x0]
   196f0:	str	x0, [sp, #40]
   196f4:	ldr	x0, [sp, #40]
   196f8:	cmp	x0, #0x0
   196fc:	b.eq	19718 <GOMP_taskloop_ull@@GOMP_4.5+0x119c>  // b.none
   19700:	ldr	x0, [sp, #40]
   19704:	add	x0, x0, #0x8
   19708:	ldr	x2, [sp, #16]
   1970c:	mov	x1, x0
   19710:	mov	w0, #0x1                   	// #1
   19714:	bl	19620 <GOMP_taskloop_ull@@GOMP_4.5+0x10a4>
   19718:	ldr	x0, [sp, #16]
   1971c:	ldr	x0, [x0, #40]
   19720:	str	x0, [sp, #32]
   19724:	ldr	x0, [sp, #32]
   19728:	cmp	x0, #0x0
   1972c:	b.eq	19748 <GOMP_taskloop_ull@@GOMP_4.5+0x11cc>  // b.none
   19730:	ldr	x0, [sp, #32]
   19734:	add	x0, x0, #0x8
   19738:	ldr	x2, [sp, #16]
   1973c:	mov	x1, x0
   19740:	mov	w0, #0x2                   	// #2
   19744:	bl	19620 <GOMP_taskloop_ull@@GOMP_4.5+0x10a4>
   19748:	ldr	x0, [sp, #24]
   1974c:	add	x1, x0, #0x508
   19750:	ldr	x0, [sp, #16]
   19754:	ldr	w2, [x0, #88]
   19758:	ldr	x0, [sp, #16]
   1975c:	ldrb	w0, [x0, #207]
   19760:	mov	w6, w0
   19764:	mov	w5, #0x0                   	// #0
   19768:	mov	w4, #0x0                   	// #0
   1976c:	mov	w3, w2
   19770:	ldr	x2, [sp, #16]
   19774:	mov	w0, #0x0                   	// #0
   19778:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1977c:	ldr	x0, [sp, #16]
   19780:	mov	w1, #0x2                   	// #2
   19784:	str	w1, [x0, #200]
   19788:	ldr	x0, [sp, #40]
   1978c:	cmp	x0, #0x0
   19790:	b.eq	19808 <GOMP_taskloop_ull@@GOMP_4.5+0x128c>  // b.none
   19794:	ldr	x0, [sp, #40]
   19798:	ldr	x0, [x0, #64]
   1979c:	cmp	x0, #0x0
   197a0:	b.eq	19808 <GOMP_taskloop_ull@@GOMP_4.5+0x128c>  // b.none
   197a4:	ldr	x0, [sp, #40]
   197a8:	ldr	x0, [x0, #64]
   197ac:	ldrb	w0, [x0]
   197b0:	cmp	w0, #0x0
   197b4:	b.eq	197d8 <GOMP_taskloop_ull@@GOMP_4.5+0x125c>  // b.none
   197b8:	ldr	x0, [sp, #40]
   197bc:	ldr	x0, [x0, #64]
   197c0:	strb	wzr, [x0]
   197c4:	ldr	x0, [sp, #40]
   197c8:	ldr	x0, [x0, #64]
   197cc:	add	x0, x0, #0x10
   197d0:	bl	154f0 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>
   197d4:	b	19808 <GOMP_taskloop_ull@@GOMP_4.5+0x128c>
   197d8:	ldr	x0, [sp, #40]
   197dc:	ldr	x0, [x0, #64]
   197e0:	ldrb	w0, [x0, #1]
   197e4:	cmp	w0, #0x0
   197e8:	b.eq	19808 <GOMP_taskloop_ull@@GOMP_4.5+0x128c>  // b.none
   197ec:	ldr	x0, [sp, #40]
   197f0:	ldr	x0, [x0, #64]
   197f4:	strb	wzr, [x0, #1]
   197f8:	ldr	x0, [sp, #40]
   197fc:	ldr	x0, [x0, #64]
   19800:	add	x0, x0, #0x10
   19804:	bl	154f0 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>
   19808:	ldr	x0, [sp, #32]
   1980c:	cmp	x0, #0x0
   19810:	b.eq	19838 <GOMP_taskloop_ull@@GOMP_4.5+0x12bc>  // b.none
   19814:	ldr	x0, [sp, #32]
   19818:	ldrb	w0, [x0, #48]
   1981c:	cmp	w0, #0x0
   19820:	b.eq	19838 <GOMP_taskloop_ull@@GOMP_4.5+0x12bc>  // b.none
   19824:	ldr	x0, [sp, #32]
   19828:	strb	wzr, [x0, #48]
   1982c:	ldr	x0, [sp, #32]
   19830:	add	x0, x0, #0x34
   19834:	bl	154f0 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>
   19838:	ldr	x0, [sp, #24]
   1983c:	ldr	w0, [x0, #1324]
   19840:	add	w1, w0, #0x1
   19844:	ldr	x0, [sp, #24]
   19848:	str	w1, [x0, #1324]
   1984c:	ldr	x0, [sp, #24]
   19850:	add	x0, x0, #0x80
   19854:	bl	1566c <GOMP_single_copy_end@@GOMP_1.0+0x95c>
   19858:	ldr	x0, [sp, #24]
   1985c:	ldr	w1, [x0]
   19860:	ldr	x0, [sp, #24]
   19864:	ldr	w0, [x0, #1328]
   19868:	cmp	w1, w0
   1986c:	b.ls	19880 <GOMP_taskloop_ull@@GOMP_4.5+0x1304>  // b.plast
   19870:	ldr	x0, [sp, #24]
   19874:	add	x0, x0, #0x80
   19878:	mov	w1, #0x1                   	// #1
   1987c:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   19880:	nop
   19884:	ldp	x29, x30, [sp], #48
   19888:	ret

000000000001988c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1>:
   1988c:	stp	x29, x30, [sp, #-64]!
   19890:	mov	x29, sp
   19894:	str	x0, [sp, #24]
   19898:	ldr	x0, [sp, #24]
   1989c:	str	x0, [sp, #56]
   198a0:	ldr	x0, [sp, #56]
   198a4:	ldr	x0, [x0, #56]
   198a8:	str	x0, [sp, #48]
   198ac:	ldr	x0, [sp, #56]
   198b0:	ldr	x0, [x0, #64]
   198b4:	str	x0, [sp, #40]
   198b8:	ldr	x0, [sp, #40]
   198bc:	add	x0, x0, #0x500
   198c0:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   198c4:	ldr	x0, [sp, #56]
   198c8:	ldr	w0, [x0, #44]
   198cc:	cmp	w0, #0x3
   198d0:	b.ne	198f0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x64>  // b.any
   198d4:	ldr	x0, [sp, #56]
   198d8:	mov	w1, #0x5                   	// #5
   198dc:	str	w1, [x0, #44]
   198e0:	ldr	x0, [sp, #40]
   198e4:	add	x0, x0, #0x500
   198e8:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   198ec:	b	19914 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x88>
   198f0:	ldr	x0, [sp, #56]
   198f4:	mov	w1, #0x5                   	// #5
   198f8:	str	w1, [x0, #44]
   198fc:	ldr	x1, [sp, #48]
   19900:	ldr	x0, [sp, #40]
   19904:	bl	196d8 <GOMP_taskloop_ull@@GOMP_4.5+0x115c>
   19908:	ldr	x0, [sp, #40]
   1990c:	add	x0, x0, #0x500
   19910:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   19914:	ldp	x29, x30, [sp], #64
   19918:	ret
   1991c:	stp	x29, x30, [sp, #-224]!
   19920:	mov	x29, sp
   19924:	str	x0, [sp, #72]
   19928:	str	x1, [sp, #64]
   1992c:	str	x2, [sp, #56]
   19930:	str	x3, [sp, #48]
   19934:	str	x4, [sp, #40]
   19938:	str	x5, [sp, #32]
   1993c:	str	w6, [sp, #28]
   19940:	str	x7, [sp, #16]
   19944:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   19948:	str	x0, [sp, #160]
   1994c:	ldr	x0, [sp, #160]
   19950:	ldr	x0, [x0, #16]
   19954:	str	x0, [sp, #152]
   19958:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1995c:	add	x0, x0, #0x574
   19960:	ldrb	w0, [x0]
   19964:	and	x0, x0, #0xff
   19968:	cmp	x0, #0x0
   1996c:	b.eq	19a24 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x198>  // b.none
   19970:	ldr	x0, [sp, #152]
   19974:	cmp	x0, #0x0
   19978:	b.eq	19a24 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x198>  // b.none
   1997c:	ldr	x0, [sp, #152]
   19980:	add	x0, x0, #0x80
   19984:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   19988:	and	w0, w0, #0xff
   1998c:	cmp	w0, #0x0
   19990:	b.eq	1999c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x110>  // b.none
   19994:	mov	w0, #0x1                   	// #1
   19998:	b	1a290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa04>
   1999c:	ldr	x0, [sp, #160]
   199a0:	ldr	x0, [x0, #80]
   199a4:	ldr	x0, [x0, #40]
   199a8:	cmp	x0, #0x0
   199ac:	b.eq	19a24 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x198>  // b.none
   199b0:	ldr	x0, [sp, #160]
   199b4:	ldr	x0, [x0, #80]
   199b8:	ldr	x0, [x0, #40]
   199bc:	ldrb	w0, [x0, #49]
   199c0:	cmp	w0, #0x0
   199c4:	b.eq	199d0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x144>  // b.none
   199c8:	mov	w0, #0x1                   	// #1
   199cc:	b	1a290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa04>
   199d0:	ldr	x0, [sp, #160]
   199d4:	ldr	x0, [x0, #80]
   199d8:	ldr	x0, [x0, #40]
   199dc:	ldrb	w0, [x0, #50]
   199e0:	cmp	w0, #0x0
   199e4:	b.eq	19a24 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x198>  // b.none
   199e8:	ldr	x0, [sp, #160]
   199ec:	ldr	x0, [x0, #80]
   199f0:	ldr	x0, [x0, #40]
   199f4:	ldr	x0, [x0]
   199f8:	cmp	x0, #0x0
   199fc:	b.eq	19a24 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x198>  // b.none
   19a00:	ldr	x0, [sp, #160]
   19a04:	ldr	x0, [x0, #80]
   19a08:	ldr	x0, [x0, #40]
   19a0c:	ldr	x0, [x0]
   19a10:	ldrb	w0, [x0, #49]
   19a14:	cmp	w0, #0x0
   19a18:	b.eq	19a24 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x198>  // b.none
   19a1c:	mov	w0, #0x1                   	// #1
   19a20:	b	1a290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa04>
   19a24:	ldr	x0, [sp, #160]
   19a28:	ldr	x0, [x0, #80]
   19a2c:	str	x0, [sp, #144]
   19a30:	ldr	x0, [sp, #144]
   19a34:	ldr	x0, [x0, #40]
   19a38:	str	x0, [sp, #136]
   19a3c:	str	xzr, [sp, #216]
   19a40:	str	xzr, [sp, #208]
   19a44:	str	xzr, [sp, #200]
   19a48:	str	xzr, [sp, #192]
   19a4c:	ldr	x0, [sp, #16]
   19a50:	cmp	x0, #0x0
   19a54:	b.eq	19a98 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x20c>  // b.none
   19a58:	ldr	x0, [sp, #16]
   19a5c:	ldr	x0, [x0]
   19a60:	cmp	x0, #0x0
   19a64:	b.eq	19a74 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1e8>  // b.none
   19a68:	ldr	x0, [sp, #16]
   19a6c:	ldr	x0, [x0]
   19a70:	b	19a7c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1f0>
   19a74:	ldr	x0, [sp, #16]
   19a78:	ldr	x0, [x0, #8]
   19a7c:	str	x0, [sp, #208]
   19a80:	ldr	x1, [sp, #208]
   19a84:	mov	x0, x1
   19a88:	lsl	x0, x0, #2
   19a8c:	add	x0, x0, x1
   19a90:	lsl	x0, x0, #3
   19a94:	str	x0, [sp, #216]
   19a98:	ldr	x0, [sp, #64]
   19a9c:	cmp	x0, #0x0
   19aa0:	b.eq	19b94 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x308>  // b.none
   19aa4:	str	xzr, [sp, #184]
   19aa8:	b	19b5c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2d0>
   19aac:	ldr	x0, [sp, #184]
   19ab0:	lsl	x0, x0, #1
   19ab4:	ldr	x1, [sp, #32]
   19ab8:	add	x0, x1, x0
   19abc:	ldrh	w0, [x0]
   19ac0:	and	w0, w0, #0xff
   19ac4:	cmp	w0, #0xc
   19ac8:	b.ne	19b50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2c4>  // b.any
   19acc:	ldr	x0, [sp, #184]
   19ad0:	lsl	x0, x0, #1
   19ad4:	ldr	x1, [sp, #32]
   19ad8:	add	x0, x1, x0
   19adc:	ldrh	w0, [x0]
   19ae0:	lsr	w0, w0, #8
   19ae4:	and	w0, w0, #0xffff
   19ae8:	mov	w1, w0
   19aec:	mov	x0, #0x1                   	// #1
   19af0:	lsl	x0, x0, x1
   19af4:	str	x0, [sp, #128]
   19af8:	ldr	x1, [sp, #200]
   19afc:	ldr	x0, [sp, #128]
   19b00:	cmp	x1, x0
   19b04:	b.cs	19b10 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x284>  // b.hs, b.nlast
   19b08:	ldr	x0, [sp, #128]
   19b0c:	str	x0, [sp, #200]
   19b10:	ldr	x1, [sp, #192]
   19b14:	ldr	x0, [sp, #128]
   19b18:	add	x0, x1, x0
   19b1c:	sub	x1, x0, #0x1
   19b20:	ldr	x0, [sp, #128]
   19b24:	neg	x0, x0
   19b28:	and	x0, x1, x0
   19b2c:	str	x0, [sp, #192]
   19b30:	ldr	x0, [sp, #184]
   19b34:	lsl	x0, x0, #3
   19b38:	ldr	x1, [sp, #40]
   19b3c:	add	x0, x1, x0
   19b40:	ldr	x0, [x0]
   19b44:	ldr	x1, [sp, #192]
   19b48:	add	x0, x1, x0
   19b4c:	str	x0, [sp, #192]
   19b50:	ldr	x0, [sp, #184]
   19b54:	add	x0, x0, #0x1
   19b58:	str	x0, [sp, #184]
   19b5c:	ldr	x1, [sp, #184]
   19b60:	ldr	x0, [sp, #56]
   19b64:	cmp	x1, x0
   19b68:	b.cc	19aac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x220>  // b.lo, b.ul, b.last
   19b6c:	ldr	x0, [sp, #200]
   19b70:	cmp	x0, #0x0
   19b74:	b.eq	19b90 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x304>  // b.none
   19b78:	ldr	x1, [sp, #200]
   19b7c:	ldr	x0, [sp, #192]
   19b80:	add	x0, x1, x0
   19b84:	sub	x0, x0, #0x1
   19b88:	str	x0, [sp, #192]
   19b8c:	b	19b94 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x308>
   19b90:	str	xzr, [sp, #192]
   19b94:	ldr	x1, [sp, #56]
   19b98:	mov	x0, x1
   19b9c:	lsl	x0, x0, #3
   19ba0:	add	x0, x0, x1
   19ba4:	lsl	x0, x0, #1
   19ba8:	mov	x1, x0
   19bac:	ldr	x0, [sp, #216]
   19bb0:	add	x1, x1, x0
   19bb4:	ldr	x0, [sp, #192]
   19bb8:	add	x0, x1, x0
   19bbc:	add	x0, x0, #0x120
   19bc0:	bl	8dd0 <fprintf@plt+0x1a0>
   19bc4:	str	x0, [sp, #120]
   19bc8:	mov	w0, #0x0                   	// #0
   19bcc:	bl	15784 <GOMP_single_copy_end@@GOMP_1.0+0xa74>
   19bd0:	mov	x2, x0
   19bd4:	ldr	x1, [sp, #144]
   19bd8:	ldr	x0, [sp, #120]
   19bdc:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   19be0:	ldr	x0, [sp, #120]
   19be4:	str	wzr, [x0, #88]
   19be8:	ldr	x0, [sp, #120]
   19bec:	mov	w1, #0x2                   	// #2
   19bf0:	str	w1, [x0, #200]
   19bf4:	ldr	x0, [sp, #144]
   19bf8:	ldrb	w1, [x0, #204]
   19bfc:	ldr	x0, [sp, #120]
   19c00:	strb	w1, [x0, #204]
   19c04:	ldr	x0, [sp, #120]
   19c08:	ldr	x1, [sp, #136]
   19c0c:	str	x1, [x0, #40]
   19c10:	ldr	x1, [sp, #208]
   19c14:	mov	x0, x1
   19c18:	lsl	x0, x0, #2
   19c1c:	add	x0, x0, x1
   19c20:	lsl	x0, x0, #3
   19c24:	add	x0, x0, #0xd0
   19c28:	ldr	x1, [sp, #120]
   19c2c:	add	x0, x1, x0
   19c30:	str	x0, [sp, #112]
   19c34:	ldr	x0, [sp, #112]
   19c38:	ldr	x1, [sp, #72]
   19c3c:	str	x1, [x0]
   19c40:	ldr	x0, [sp, #112]
   19c44:	ldr	x1, [sp, #64]
   19c48:	str	x1, [x0, #8]
   19c4c:	ldr	x0, [sp, #112]
   19c50:	ldr	x1, [sp, #56]
   19c54:	str	x1, [x0, #16]
   19c58:	ldr	x0, [sp, #112]
   19c5c:	ldr	x1, [sp, #224]
   19c60:	str	x1, [x0, #72]
   19c64:	ldr	x0, [sp, #112]
   19c68:	add	x3, x0, #0x50
   19c6c:	ldr	x0, [sp, #56]
   19c70:	lsl	x0, x0, #3
   19c74:	mov	x2, x0
   19c78:	ldr	x1, [sp, #48]
   19c7c:	mov	x0, x3
   19c80:	bl	86a0 <memcpy@plt>
   19c84:	ldr	x0, [sp, #56]
   19c88:	add	x0, x0, #0xa
   19c8c:	lsl	x0, x0, #3
   19c90:	ldr	x1, [sp, #112]
   19c94:	add	x1, x1, x0
   19c98:	ldr	x0, [sp, #112]
   19c9c:	str	x1, [x0, #24]
   19ca0:	ldr	x0, [sp, #112]
   19ca4:	ldr	x3, [x0, #24]
   19ca8:	ldr	x0, [sp, #56]
   19cac:	lsl	x0, x0, #3
   19cb0:	mov	x2, x0
   19cb4:	ldr	x1, [sp, #40]
   19cb8:	mov	x0, x3
   19cbc:	bl	86a0 <memcpy@plt>
   19cc0:	ldr	x0, [sp, #112]
   19cc4:	ldr	x1, [x0, #24]
   19cc8:	ldr	x0, [sp, #56]
   19ccc:	lsl	x0, x0, #3
   19cd0:	add	x1, x1, x0
   19cd4:	ldr	x0, [sp, #112]
   19cd8:	str	x1, [x0, #32]
   19cdc:	ldr	x0, [sp, #112]
   19ce0:	ldr	x3, [x0, #32]
   19ce4:	ldr	x0, [sp, #56]
   19ce8:	lsl	x0, x0, #1
   19cec:	mov	x2, x0
   19cf0:	ldr	x1, [sp, #32]
   19cf4:	mov	x0, x3
   19cf8:	bl	86a0 <memcpy@plt>
   19cfc:	ldr	x0, [sp, #200]
   19d00:	cmp	x0, #0x0
   19d04:	b.eq	19e6c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5e0>  // b.none
   19d08:	ldr	x0, [sp, #112]
   19d0c:	ldr	x1, [x0, #32]
   19d10:	ldr	x0, [sp, #56]
   19d14:	lsl	x0, x0, #1
   19d18:	add	x0, x1, x0
   19d1c:	str	x0, [sp, #176]
   19d20:	ldr	x0, [sp, #200]
   19d24:	sub	x1, x0, #0x1
   19d28:	ldr	x0, [sp, #176]
   19d2c:	and	x0, x1, x0
   19d30:	str	x0, [sp, #104]
   19d34:	ldr	x0, [sp, #104]
   19d38:	cmp	x0, #0x0
   19d3c:	b.eq	19d58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4cc>  // b.none
   19d40:	ldr	x1, [sp, #200]
   19d44:	ldr	x0, [sp, #104]
   19d48:	sub	x0, x1, x0
   19d4c:	ldr	x1, [sp, #176]
   19d50:	add	x0, x1, x0
   19d54:	str	x0, [sp, #176]
   19d58:	str	xzr, [sp, #192]
   19d5c:	str	xzr, [sp, #168]
   19d60:	b	19e5c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5d0>
   19d64:	ldr	x0, [sp, #168]
   19d68:	lsl	x0, x0, #1
   19d6c:	ldr	x1, [sp, #32]
   19d70:	add	x0, x1, x0
   19d74:	ldrh	w0, [x0]
   19d78:	and	w0, w0, #0xff
   19d7c:	cmp	w0, #0xc
   19d80:	b.ne	19e50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5c4>  // b.any
   19d84:	ldr	x0, [sp, #168]
   19d88:	lsl	x0, x0, #1
   19d8c:	ldr	x1, [sp, #32]
   19d90:	add	x0, x1, x0
   19d94:	ldrh	w0, [x0]
   19d98:	lsr	w0, w0, #8
   19d9c:	and	w0, w0, #0xffff
   19da0:	mov	w1, w0
   19da4:	mov	x0, #0x1                   	// #1
   19da8:	lsl	x0, x0, x1
   19dac:	str	x0, [sp, #96]
   19db0:	ldr	x1, [sp, #192]
   19db4:	ldr	x0, [sp, #96]
   19db8:	add	x0, x1, x0
   19dbc:	sub	x1, x0, #0x1
   19dc0:	ldr	x0, [sp, #96]
   19dc4:	neg	x0, x0
   19dc8:	and	x0, x1, x0
   19dcc:	str	x0, [sp, #192]
   19dd0:	ldr	x1, [sp, #176]
   19dd4:	ldr	x0, [sp, #192]
   19dd8:	add	x3, x1, x0
   19ddc:	ldr	x0, [sp, #168]
   19de0:	lsl	x0, x0, #3
   19de4:	ldr	x1, [sp, #48]
   19de8:	add	x0, x1, x0
   19dec:	ldr	x4, [x0]
   19df0:	ldr	x0, [sp, #168]
   19df4:	lsl	x0, x0, #3
   19df8:	ldr	x1, [sp, #40]
   19dfc:	add	x0, x1, x0
   19e00:	ldr	x0, [x0]
   19e04:	mov	x2, x0
   19e08:	mov	x1, x4
   19e0c:	mov	x0, x3
   19e10:	bl	86a0 <memcpy@plt>
   19e14:	ldr	x1, [sp, #176]
   19e18:	ldr	x0, [sp, #192]
   19e1c:	add	x2, x1, x0
   19e20:	ldr	x0, [sp, #112]
   19e24:	ldr	x1, [sp, #168]
   19e28:	add	x1, x1, #0xa
   19e2c:	str	x2, [x0, x1, lsl #3]
   19e30:	ldr	x0, [sp, #168]
   19e34:	lsl	x0, x0, #3
   19e38:	ldr	x1, [sp, #40]
   19e3c:	add	x0, x1, x0
   19e40:	ldr	x0, [x0]
   19e44:	ldr	x1, [sp, #192]
   19e48:	add	x0, x1, x0
   19e4c:	str	x0, [sp, #192]
   19e50:	ldr	x0, [sp, #168]
   19e54:	add	x0, x0, #0x1
   19e58:	str	x0, [sp, #168]
   19e5c:	ldr	x1, [sp, #168]
   19e60:	ldr	x0, [sp, #56]
   19e64:	cmp	x1, x0
   19e68:	b.cc	19d64 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4d8>  // b.lo, b.ul, b.last
   19e6c:	ldr	x0, [sp, #112]
   19e70:	ldr	w1, [sp, #28]
   19e74:	str	w1, [x0, #40]
   19e78:	ldr	x0, [sp, #112]
   19e7c:	ldr	w1, [sp, #232]
   19e80:	str	w1, [x0, #44]
   19e84:	ldr	x0, [sp, #112]
   19e88:	ldr	x1, [sp, #120]
   19e8c:	str	x1, [x0, #56]
   19e90:	ldr	x0, [sp, #112]
   19e94:	ldr	x1, [sp, #152]
   19e98:	str	x1, [x0, #64]
   19e9c:	ldr	x0, [sp, #120]
   19ea0:	str	xzr, [x0, #184]
   19ea4:	ldr	x0, [sp, #120]
   19ea8:	ldr	x1, [sp, #112]
   19eac:	str	x1, [x0, #192]
   19eb0:	ldr	x0, [sp, #120]
   19eb4:	strb	wzr, [x0, #205]
   19eb8:	ldr	x0, [sp, #152]
   19ebc:	add	x0, x0, #0x500
   19ec0:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   19ec4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   19ec8:	add	x0, x0, #0x574
   19ecc:	ldrb	w0, [x0]
   19ed0:	and	x0, x0, #0xff
   19ed4:	cmp	x0, #0x0
   19ed8:	b.eq	19f7c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6f0>  // b.none
   19edc:	ldr	x0, [sp, #152]
   19ee0:	add	x0, x0, #0x80
   19ee4:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   19ee8:	and	w0, w0, #0xff
   19eec:	cmp	w0, #0x0
   19ef0:	b.eq	19f2c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6a0>  // b.none
   19ef4:	nop
   19ef8:	b	19f08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x67c>
   19efc:	nop
   19f00:	b	19f08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x67c>
   19f04:	nop
   19f08:	ldr	x0, [sp, #152]
   19f0c:	add	x0, x0, #0x500
   19f10:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   19f14:	ldr	x0, [sp, #120]
   19f18:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   19f1c:	ldr	x0, [sp, #120]
   19f20:	bl	8a20 <free@plt>
   19f24:	mov	w0, #0x1                   	// #1
   19f28:	b	1a290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa04>
   19f2c:	ldr	x0, [sp, #136]
   19f30:	cmp	x0, #0x0
   19f34:	b.eq	19f7c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6f0>  // b.none
   19f38:	ldr	x0, [sp, #136]
   19f3c:	ldrb	w0, [x0, #49]
   19f40:	cmp	w0, #0x0
   19f44:	b.ne	19efc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x670>  // b.any
   19f48:	ldr	x0, [sp, #136]
   19f4c:	ldrb	w0, [x0, #50]
   19f50:	cmp	w0, #0x0
   19f54:	b.eq	19f7c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6f0>  // b.none
   19f58:	ldr	x0, [sp, #136]
   19f5c:	ldr	x0, [x0]
   19f60:	cmp	x0, #0x0
   19f64:	b.eq	19f7c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6f0>  // b.none
   19f68:	ldr	x0, [sp, #136]
   19f6c:	ldr	x0, [x0]
   19f70:	ldrb	w0, [x0, #49]
   19f74:	cmp	w0, #0x0
   19f78:	b.ne	19f04 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x678>  // b.any
   19f7c:	ldr	x0, [sp, #216]
   19f80:	cmp	x0, #0x0
   19f84:	b.eq	19fdc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x750>  // b.none
   19f88:	ldr	x2, [sp, #16]
   19f8c:	ldr	x1, [sp, #144]
   19f90:	ldr	x0, [sp, #120]
   19f94:	bl	16498 <GOMP_single_copy_end@@GOMP_1.0+0x1788>
   19f98:	ldr	x0, [sp, #120]
   19f9c:	ldr	x0, [x0, #80]
   19fa0:	cmp	x0, #0x0
   19fa4:	b.eq	19fdc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x750>  // b.none
   19fa8:	ldr	x0, [sp, #136]
   19fac:	cmp	x0, #0x0
   19fb0:	b.eq	19fc8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x73c>  // b.none
   19fb4:	ldr	x0, [sp, #136]
   19fb8:	ldr	x0, [x0, #56]
   19fbc:	add	x1, x0, #0x1
   19fc0:	ldr	x0, [sp, #136]
   19fc4:	str	x1, [x0, #56]
   19fc8:	ldr	x0, [sp, #152]
   19fcc:	add	x0, x0, #0x500
   19fd0:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   19fd4:	mov	w0, #0x1                   	// #1
   19fd8:	b	1a290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa04>
   19fdc:	ldr	w0, [sp, #232]
   19fe0:	cmp	w0, #0x0
   19fe4:	b.ne	1a014 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x788>  // b.any
   19fe8:	ldr	x0, [sp, #120]
   19fec:	bl	1a7e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf58>
   19ff0:	ldr	x0, [sp, #152]
   19ff4:	add	x0, x0, #0x500
   19ff8:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   19ffc:	ldr	x0, [sp, #120]
   1a000:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1a004:	ldr	x0, [sp, #120]
   1a008:	bl	8a20 <free@plt>
   1a00c:	mov	w0, #0x0                   	// #0
   1a010:	b	1a290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa04>
   1a014:	ldr	x0, [sp, #136]
   1a018:	cmp	x0, #0x0
   1a01c:	b.eq	1a034 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7a8>  // b.none
   1a020:	ldr	x0, [sp, #136]
   1a024:	ldr	x0, [x0, #56]
   1a028:	add	x1, x0, #0x1
   1a02c:	ldr	x0, [sp, #136]
   1a030:	str	x1, [x0, #56]
   1a034:	ldr	x0, [sp, #72]
   1a038:	cmp	x0, #0x0
   1a03c:	b.eq	1a170 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8e4>  // b.none
   1a040:	ldr	x0, [sp, #72]
   1a044:	ldr	w0, [x0, #8]
   1a048:	and	w0, w0, #0x4
   1a04c:	cmp	w0, #0x0
   1a050:	b.eq	1a170 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8e4>  // b.none
   1a054:	ldr	x0, [sp, #144]
   1a058:	add	x1, x0, #0x8
   1a05c:	ldr	x0, [sp, #120]
   1a060:	ldrb	w0, [x0, #207]
   1a064:	mov	w6, w0
   1a068:	mov	w5, #0x0                   	// #0
   1a06c:	mov	w4, #0x1                   	// #1
   1a070:	mov	w3, #0x0                   	// #0
   1a074:	ldr	x2, [sp, #120]
   1a078:	mov	w0, #0x1                   	// #1
   1a07c:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1a080:	ldr	x0, [sp, #136]
   1a084:	cmp	x0, #0x0
   1a088:	b.eq	1a0b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x82c>  // b.none
   1a08c:	ldr	x0, [sp, #136]
   1a090:	add	x1, x0, #0x8
   1a094:	ldr	x0, [sp, #120]
   1a098:	ldrb	w0, [x0, #207]
   1a09c:	mov	w6, w0
   1a0a0:	mov	w5, #0x0                   	// #0
   1a0a4:	mov	w4, #0x1                   	// #1
   1a0a8:	mov	w3, #0x0                   	// #0
   1a0ac:	ldr	x2, [sp, #120]
   1a0b0:	mov	w0, #0x2                   	// #2
   1a0b4:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1a0b8:	ldr	x0, [sp, #120]
   1a0bc:	str	xzr, [x0, #96]
   1a0c0:	ldr	x0, [sp, #120]
   1a0c4:	str	xzr, [x0, #104]
   1a0c8:	ldr	x0, [sp, #120]
   1a0cc:	mov	w1, #0x3                   	// #3
   1a0d0:	str	w1, [x0, #200]
   1a0d4:	ldr	x0, [sp, #152]
   1a0d8:	ldr	w0, [x0, #1320]
   1a0dc:	add	w1, w0, #0x1
   1a0e0:	ldr	x0, [sp, #152]
   1a0e4:	str	w1, [x0, #1320]
   1a0e8:	ldr	x0, [sp, #152]
   1a0ec:	add	x0, x0, #0x500
   1a0f0:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1a0f4:	ldr	x0, [sp, #160]
   1a0f8:	ldr	x1, [sp, #120]
   1a0fc:	str	x1, [x0, #80]
   1a100:	ldr	x0, [sp, #120]
   1a104:	ldr	x0, [x0, #192]
   1a108:	bl	2a814 <GOMP_target_enter_exit_data@@GOMP_4.5+0x438>
   1a10c:	ldr	x0, [sp, #160]
   1a110:	ldr	x1, [sp, #144]
   1a114:	str	x1, [x0, #80]
   1a118:	ldr	x0, [sp, #152]
   1a11c:	add	x0, x0, #0x500
   1a120:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1a124:	ldr	x0, [sp, #120]
   1a128:	mov	w1, #0x4                   	// #4
   1a12c:	str	w1, [x0, #200]
   1a130:	ldr	x0, [sp, #112]
   1a134:	ldr	w0, [x0, #44]
   1a138:	cmp	w0, #0x5
   1a13c:	b.ne	1a150 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8c4>  // b.any
   1a140:	ldr	x1, [sp, #120]
   1a144:	ldr	x0, [sp, #152]
   1a148:	bl	196d8 <GOMP_taskloop_ull@@GOMP_4.5+0x115c>
   1a14c:	b	1a15c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8d0>
   1a150:	ldr	x0, [sp, #112]
   1a154:	mov	w1, #0x4                   	// #4
   1a158:	str	w1, [x0, #44]
   1a15c:	ldr	x0, [sp, #152]
   1a160:	add	x0, x0, #0x500
   1a164:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1a168:	mov	w0, #0x1                   	// #1
   1a16c:	b	1a290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa04>
   1a170:	ldr	x0, [sp, #144]
   1a174:	add	x1, x0, #0x8
   1a178:	ldr	x0, [sp, #120]
   1a17c:	ldrb	w0, [x0, #207]
   1a180:	mov	w6, w0
   1a184:	mov	w5, #0x0                   	// #0
   1a188:	mov	w4, #0x0                   	// #0
   1a18c:	mov	w3, #0x0                   	// #0
   1a190:	ldr	x2, [sp, #120]
   1a194:	mov	w0, #0x1                   	// #1
   1a198:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1a19c:	ldr	x0, [sp, #136]
   1a1a0:	cmp	x0, #0x0
   1a1a4:	b.eq	1a1d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x948>  // b.none
   1a1a8:	ldr	x0, [sp, #136]
   1a1ac:	add	x1, x0, #0x8
   1a1b0:	ldr	x0, [sp, #120]
   1a1b4:	ldrb	w0, [x0, #207]
   1a1b8:	mov	w6, w0
   1a1bc:	mov	w5, #0x0                   	// #0
   1a1c0:	mov	w4, #0x0                   	// #0
   1a1c4:	mov	w3, #0x0                   	// #0
   1a1c8:	ldr	x2, [sp, #120]
   1a1cc:	mov	w0, #0x2                   	// #2
   1a1d0:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1a1d4:	ldr	x0, [sp, #152]
   1a1d8:	add	x1, x0, #0x508
   1a1dc:	ldr	x0, [sp, #120]
   1a1e0:	ldrb	w0, [x0, #207]
   1a1e4:	mov	w6, w0
   1a1e8:	mov	w5, #0x0                   	// #0
   1a1ec:	mov	w4, #0x1                   	// #1
   1a1f0:	mov	w3, #0x0                   	// #0
   1a1f4:	ldr	x2, [sp, #120]
   1a1f8:	mov	w0, #0x0                   	// #0
   1a1fc:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1a200:	ldr	x0, [sp, #152]
   1a204:	ldr	w0, [x0, #1320]
   1a208:	add	w1, w0, #0x1
   1a20c:	ldr	x0, [sp, #152]
   1a210:	str	w1, [x0, #1320]
   1a214:	ldr	x0, [sp, #152]
   1a218:	ldr	w0, [x0, #1324]
   1a21c:	add	w1, w0, #0x1
   1a220:	ldr	x0, [sp, #152]
   1a224:	str	w1, [x0, #1324]
   1a228:	ldr	x0, [sp, #152]
   1a22c:	add	x0, x0, #0x80
   1a230:	bl	1566c <GOMP_single_copy_end@@GOMP_1.0+0x95c>
   1a234:	ldr	x0, [sp, #152]
   1a238:	ldr	w0, [x0, #1328]
   1a23c:	ldr	x1, [sp, #144]
   1a240:	ldrb	w1, [x1, #204]
   1a244:	eor	w1, w1, #0x1
   1a248:	and	w1, w1, #0xff
   1a24c:	add	w1, w0, w1
   1a250:	ldr	x0, [sp, #152]
   1a254:	ldr	w0, [x0]
   1a258:	cmp	w1, w0
   1a25c:	cset	w0, cc  // cc = lo, ul, last
   1a260:	strb	w0, [sp, #95]
   1a264:	ldr	x0, [sp, #152]
   1a268:	add	x0, x0, #0x500
   1a26c:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1a270:	ldrb	w0, [sp, #95]
   1a274:	cmp	w0, #0x0
   1a278:	b.eq	1a28c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa00>  // b.none
   1a27c:	ldr	x0, [sp, #152]
   1a280:	add	x0, x0, #0x80
   1a284:	mov	w1, #0x1                   	// #1
   1a288:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   1a28c:	mov	w0, #0x1                   	// #1
   1a290:	ldp	x29, x30, [sp], #224
   1a294:	ret
   1a298:	sub	sp, sp, #0x20
   1a29c:	str	x0, [sp, #8]
   1a2a0:	str	x1, [sp]
   1a2a4:	ldr	x0, [sp, #8]
   1a2a8:	ldr	x0, [x0, #16]
   1a2ac:	str	x0, [sp, #24]
   1a2b0:	ldr	x0, [sp, #24]
   1a2b4:	cmp	x0, #0x0
   1a2b8:	b.eq	1a324 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa98>  // b.none
   1a2bc:	ldr	x0, [sp]
   1a2c0:	ldr	x0, [x0, #8]
   1a2c4:	ldr	x1, [sp]
   1a2c8:	ldr	x1, [x1]
   1a2cc:	str	x1, [x0]
   1a2d0:	ldr	x0, [sp]
   1a2d4:	ldr	x0, [x0]
   1a2d8:	ldr	x1, [sp]
   1a2dc:	ldr	x1, [x1, #8]
   1a2e0:	str	x1, [x0, #8]
   1a2e4:	ldr	x0, [sp]
   1a2e8:	ldr	x1, [sp, #24]
   1a2ec:	str	x1, [x0, #8]
   1a2f0:	ldr	x0, [sp, #24]
   1a2f4:	ldr	x1, [x0]
   1a2f8:	ldr	x0, [sp]
   1a2fc:	str	x1, [x0]
   1a300:	ldr	x0, [sp]
   1a304:	ldr	x0, [x0, #8]
   1a308:	ldr	x1, [sp]
   1a30c:	str	x1, [x0]
   1a310:	ldr	x0, [sp]
   1a314:	ldr	x0, [x0]
   1a318:	ldr	x1, [sp]
   1a31c:	str	x1, [x0, #8]
   1a320:	b	1a3b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb24>
   1a324:	ldr	x0, [sp, #8]
   1a328:	ldr	x0, [x0, #8]
   1a32c:	ldr	x1, [sp]
   1a330:	cmp	x1, x0
   1a334:	b.eq	1a3b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb24>  // b.none
   1a338:	ldr	x0, [sp]
   1a33c:	ldr	x0, [x0, #8]
   1a340:	ldr	x1, [sp]
   1a344:	ldr	x1, [x1]
   1a348:	str	x1, [x0]
   1a34c:	ldr	x0, [sp]
   1a350:	ldr	x0, [x0]
   1a354:	ldr	x1, [sp]
   1a358:	ldr	x1, [x1, #8]
   1a35c:	str	x1, [x0, #8]
   1a360:	ldr	x0, [sp, #8]
   1a364:	ldr	x0, [x0, #8]
   1a368:	ldr	x1, [x0, #8]
   1a36c:	ldr	x0, [sp]
   1a370:	str	x1, [x0, #8]
   1a374:	ldr	x0, [sp, #8]
   1a378:	ldr	x1, [x0, #8]
   1a37c:	ldr	x0, [sp]
   1a380:	str	x1, [x0]
   1a384:	ldr	x0, [sp, #8]
   1a388:	ldr	x1, [sp]
   1a38c:	str	x1, [x0, #8]
   1a390:	ldr	x0, [sp]
   1a394:	ldr	x0, [x0, #8]
   1a398:	ldr	x1, [sp]
   1a39c:	str	x1, [x0]
   1a3a0:	ldr	x0, [sp]
   1a3a4:	ldr	x0, [x0]
   1a3a8:	ldr	x1, [sp]
   1a3ac:	str	x1, [x0, #8]
   1a3b0:	ldr	x0, [sp, #8]
   1a3b4:	ldr	x1, [sp]
   1a3b8:	str	x1, [x0, #16]
   1a3bc:	nop
   1a3c0:	add	sp, sp, #0x20
   1a3c4:	ret
   1a3c8:	stp	x29, x30, [sp, #-64]!
   1a3cc:	mov	x29, sp
   1a3d0:	str	x0, [sp, #24]
   1a3d4:	str	x1, [sp, #16]
   1a3d8:	ldr	x0, [sp, #16]
   1a3dc:	add	x0, x0, #0x8
   1a3e0:	str	x0, [sp, #56]
   1a3e4:	ldr	x0, [sp, #24]
   1a3e8:	add	x0, x0, #0x70
   1a3ec:	str	x0, [sp, #48]
   1a3f0:	ldr	x0, [sp, #56]
   1a3f4:	bl	14d68 <GOMP_single_copy_end@@GOMP_1.0+0x58>
   1a3f8:	and	w0, w0, #0xff
   1a3fc:	cmp	w0, #0x0
   1a400:	b.eq	1a42c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xba0>  // b.none
   1a404:	ldr	x0, [sp, #24]
   1a408:	ldr	w0, [x0, #88]
   1a40c:	mov	w1, w0
   1a410:	ldr	x0, [sp, #56]
   1a414:	bl	14e6c <GOMP_single_copy_end@@GOMP_1.0+0x15c>
   1a418:	str	x0, [sp, #40]
   1a41c:	ldr	x1, [sp, #48]
   1a420:	ldr	x0, [sp, #40]
   1a424:	bl	1a298 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa0c>
   1a428:	b	1a43c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbb0>
   1a42c:	ldr	x0, [sp, #56]
   1a430:	add	x0, x0, #0x8
   1a434:	ldr	x1, [sp, #48]
   1a438:	bl	1a298 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa0c>
   1a43c:	nop
   1a440:	ldp	x29, x30, [sp], #64
   1a444:	ret
   1a448:	stp	x29, x30, [sp, #-80]!
   1a44c:	mov	x29, sp
   1a450:	str	w0, [sp, #44]
   1a454:	str	x1, [sp, #32]
   1a458:	str	x2, [sp, #24]
   1a45c:	ldr	x1, [sp, #24]
   1a460:	ldr	w0, [sp, #44]
   1a464:	bl	15868 <GOMP_single_copy_end@@GOMP_1.0+0xb58>
   1a468:	str	x0, [sp, #72]
   1a46c:	ldr	x0, [sp, #32]
   1a470:	ldr	x0, [x0, #8]
   1a474:	ldr	x1, [sp, #72]
   1a478:	cmp	x1, x0
   1a47c:	b.ne	1a494 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc08>  // b.any
   1a480:	ldr	x0, [sp, #72]
   1a484:	ldr	x1, [x0]
   1a488:	ldr	x0, [sp, #32]
   1a48c:	str	x1, [x0, #8]
   1a490:	b	1a544 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcb8>
   1a494:	ldr	x0, [sp, #72]
   1a498:	ldr	x1, [x0]
   1a49c:	ldr	x0, [sp, #32]
   1a4a0:	ldr	x0, [x0, #8]
   1a4a4:	cmp	x1, x0
   1a4a8:	b.eq	1a544 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcb8>  // b.none
   1a4ac:	ldr	x0, [sp, #72]
   1a4b0:	ldr	x0, [x0]
   1a4b4:	mov	x1, x0
   1a4b8:	ldr	w0, [sp, #44]
   1a4bc:	bl	1583c <GOMP_single_copy_end@@GOMP_1.0+0xb2c>
   1a4c0:	str	x0, [sp, #64]
   1a4c4:	ldr	x0, [sp, #64]
   1a4c8:	ldr	w0, [x0, #200]
   1a4cc:	cmp	w0, #0x2
   1a4d0:	b.ne	1a544 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcb8>  // b.any
   1a4d4:	ldr	x0, [sp, #72]
   1a4d8:	ldr	x0, [x0, #8]
   1a4dc:	ldr	x1, [sp, #72]
   1a4e0:	ldr	x1, [x1]
   1a4e4:	str	x1, [x0]
   1a4e8:	ldr	x0, [sp, #72]
   1a4ec:	ldr	x0, [x0]
   1a4f0:	ldr	x1, [sp, #72]
   1a4f4:	ldr	x1, [x1, #8]
   1a4f8:	str	x1, [x0, #8]
   1a4fc:	ldr	x0, [sp, #32]
   1a500:	ldr	x1, [x0, #8]
   1a504:	ldr	x0, [sp, #72]
   1a508:	str	x1, [x0]
   1a50c:	ldr	x0, [sp, #32]
   1a510:	ldr	x0, [x0, #8]
   1a514:	ldr	x1, [x0, #8]
   1a518:	ldr	x0, [sp, #72]
   1a51c:	str	x1, [x0, #8]
   1a520:	ldr	x0, [sp, #32]
   1a524:	ldr	x0, [x0, #8]
   1a528:	ldr	x0, [x0, #8]
   1a52c:	ldr	x1, [sp, #72]
   1a530:	str	x1, [x0]
   1a534:	ldr	x0, [sp, #32]
   1a538:	ldr	x0, [x0, #8]
   1a53c:	ldr	x1, [sp, #72]
   1a540:	str	x1, [x0, #8]
   1a544:	ldr	x0, [sp, #24]
   1a548:	ldrb	w0, [x0, #207]
   1a54c:	and	x0, x0, #0xff
   1a550:	cmp	x0, #0x0
   1a554:	b.eq	1a5d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd48>  // b.none
   1a558:	ldr	x0, [sp, #32]
   1a55c:	ldr	x0, [x0, #16]
   1a560:	ldr	x1, [sp, #72]
   1a564:	cmp	x1, x0
   1a568:	b.ne	1a5d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd48>  // b.any
   1a56c:	ldr	x0, [sp, #72]
   1a570:	ldr	x0, [x0, #8]
   1a574:	mov	x1, x0
   1a578:	ldr	w0, [sp, #44]
   1a57c:	bl	1583c <GOMP_single_copy_end@@GOMP_1.0+0xb2c>
   1a580:	str	x0, [sp, #56]
   1a584:	ldr	x0, [sp, #72]
   1a588:	ldr	x0, [x0, #8]
   1a58c:	ldr	x1, [sp, #72]
   1a590:	cmp	x1, x0
   1a594:	b.eq	1a5cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd40>  // b.none
   1a598:	ldr	x0, [sp, #56]
   1a59c:	ldr	w0, [x0, #200]
   1a5a0:	cmp	w0, #0x2
   1a5a4:	b.ne	1a5cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd40>  // b.any
   1a5a8:	ldr	x0, [sp, #56]
   1a5ac:	ldrb	w0, [x0, #207]
   1a5b0:	cmp	w0, #0x0
   1a5b4:	b.eq	1a5cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd40>  // b.none
   1a5b8:	ldr	x0, [sp, #72]
   1a5bc:	ldr	x1, [x0, #8]
   1a5c0:	ldr	x0, [sp, #32]
   1a5c4:	str	x1, [x0, #16]
   1a5c8:	b	1a5d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd48>
   1a5cc:	ldr	x0, [sp, #32]
   1a5d0:	str	xzr, [x0, #16]
   1a5d4:	nop
   1a5d8:	ldp	x29, x30, [sp], #80
   1a5dc:	ret
   1a5e0:	stp	x29, x30, [sp, #-64]!
   1a5e4:	mov	x29, sp
   1a5e8:	str	w0, [sp, #44]
   1a5ec:	str	x1, [sp, #32]
   1a5f0:	str	x2, [sp, #24]
   1a5f4:	ldr	x0, [sp, #32]
   1a5f8:	bl	14d68 <GOMP_single_copy_end@@GOMP_1.0+0x58>
   1a5fc:	and	w0, w0, #0xff
   1a600:	cmp	w0, #0x0
   1a604:	b.eq	1a634 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xda8>  // b.none
   1a608:	ldr	x0, [sp, #24]
   1a60c:	ldr	w0, [x0, #88]
   1a610:	mov	w1, w0
   1a614:	ldr	x0, [sp, #32]
   1a618:	bl	14e6c <GOMP_single_copy_end@@GOMP_1.0+0x15c>
   1a61c:	str	x0, [sp, #56]
   1a620:	ldr	x2, [sp, #24]
   1a624:	ldr	x1, [sp, #56]
   1a628:	ldr	w0, [sp, #44]
   1a62c:	bl	1a448 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbbc>
   1a630:	b	1a64c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdc0>
   1a634:	ldr	x0, [sp, #32]
   1a638:	add	x0, x0, #0x8
   1a63c:	ldr	x2, [sp, #24]
   1a640:	mov	x1, x0
   1a644:	ldr	w0, [sp, #44]
   1a648:	bl	1a448 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbbc>
   1a64c:	nop
   1a650:	ldp	x29, x30, [sp], #64
   1a654:	ret
   1a658:	stp	x29, x30, [sp, #-64]!
   1a65c:	mov	x29, sp
   1a660:	str	x0, [sp, #40]
   1a664:	str	x1, [sp, #32]
   1a668:	str	x2, [sp, #24]
   1a66c:	ldr	x0, [sp, #32]
   1a670:	cmp	x0, #0x0
   1a674:	b.eq	1a690 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe04>  // b.none
   1a678:	ldr	x0, [sp, #32]
   1a67c:	add	x0, x0, #0x8
   1a680:	ldr	x2, [sp, #40]
   1a684:	mov	x1, x0
   1a688:	mov	w0, #0x1                   	// #1
   1a68c:	bl	1a5e0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd54>
   1a690:	ldr	x0, [sp, #40]
   1a694:	ldr	x0, [x0, #40]
   1a698:	str	x0, [sp, #56]
   1a69c:	ldr	x0, [sp, #56]
   1a6a0:	cmp	x0, #0x0
   1a6a4:	b.eq	1a6c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe34>  // b.none
   1a6a8:	ldr	x0, [sp, #56]
   1a6ac:	add	x0, x0, #0x8
   1a6b0:	ldr	x2, [sp, #40]
   1a6b4:	mov	x1, x0
   1a6b8:	mov	w0, #0x2                   	// #2
   1a6bc:	bl	1a5e0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd54>
   1a6c0:	ldr	x0, [sp, #24]
   1a6c4:	add	x0, x0, #0x508
   1a6c8:	mov	w3, #0x0                   	// #0
   1a6cc:	ldr	x2, [sp, #40]
   1a6d0:	mov	x1, x0
   1a6d4:	mov	w0, #0x0                   	// #0
   1a6d8:	bl	15370 <GOMP_single_copy_end@@GOMP_1.0+0x660>
   1a6dc:	ldr	x0, [sp, #40]
   1a6e0:	str	xzr, [x0, #96]
   1a6e4:	ldr	x0, [sp, #40]
   1a6e8:	str	xzr, [x0, #104]
   1a6ec:	ldr	x0, [sp, #40]
   1a6f0:	mov	w1, #0x3                   	// #3
   1a6f4:	str	w1, [x0, #200]
   1a6f8:	ldr	x0, [sp, #24]
   1a6fc:	ldr	w0, [x0, #1324]
   1a700:	sub	w1, w0, #0x1
   1a704:	ldr	x0, [sp, #24]
   1a708:	str	w1, [x0, #1324]
   1a70c:	ldr	x0, [sp, #24]
   1a710:	ldr	w0, [x0, #1324]
   1a714:	cmp	w0, #0x0
   1a718:	b.ne	1a728 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe9c>  // b.any
   1a71c:	ldr	x0, [sp, #24]
   1a720:	add	x0, x0, #0x80
   1a724:	bl	15694 <GOMP_single_copy_end@@GOMP_1.0+0x984>
   1a728:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1a72c:	add	x0, x0, #0x574
   1a730:	ldrb	w0, [x0]
   1a734:	and	x0, x0, #0xff
   1a738:	cmp	x0, #0x0
   1a73c:	b.eq	1a7d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf4c>  // b.none
   1a740:	ldr	x0, [sp, #40]
   1a744:	ldrb	w0, [x0, #206]
   1a748:	eor	w0, w0, #0x1
   1a74c:	and	w0, w0, #0xff
   1a750:	cmp	w0, #0x0
   1a754:	b.eq	1a7d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf4c>  // b.none
   1a758:	ldr	x0, [sp, #24]
   1a75c:	add	x0, x0, #0x80
   1a760:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   1a764:	and	w0, w0, #0xff
   1a768:	cmp	w0, #0x0
   1a76c:	b.eq	1a778 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xeec>  // b.none
   1a770:	mov	w0, #0x1                   	// #1
   1a774:	b	1a7dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf50>
   1a778:	ldr	x0, [sp, #56]
   1a77c:	cmp	x0, #0x0
   1a780:	b.eq	1a7d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf4c>  // b.none
   1a784:	ldr	x0, [sp, #56]
   1a788:	ldrb	w0, [x0, #49]
   1a78c:	cmp	w0, #0x0
   1a790:	b.eq	1a79c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf10>  // b.none
   1a794:	mov	w0, #0x1                   	// #1
   1a798:	b	1a7dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf50>
   1a79c:	ldr	x0, [sp, #56]
   1a7a0:	ldrb	w0, [x0, #50]
   1a7a4:	cmp	w0, #0x0
   1a7a8:	b.eq	1a7d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf4c>  // b.none
   1a7ac:	ldr	x0, [sp, #56]
   1a7b0:	ldr	x0, [x0]
   1a7b4:	cmp	x0, #0x0
   1a7b8:	b.eq	1a7d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf4c>  // b.none
   1a7bc:	ldr	x0, [sp, #56]
   1a7c0:	ldr	x0, [x0]
   1a7c4:	ldrb	w0, [x0, #49]
   1a7c8:	cmp	w0, #0x0
   1a7cc:	b.eq	1a7d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf4c>  // b.none
   1a7d0:	mov	w0, #0x1                   	// #1
   1a7d4:	b	1a7dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf50>
   1a7d8:	mov	w0, #0x0                   	// #0
   1a7dc:	ldp	x29, x30, [sp], #64
   1a7e0:	ret
   1a7e4:	stp	x29, x30, [sp, #-64]!
   1a7e8:	mov	x29, sp
   1a7ec:	str	x0, [sp, #24]
   1a7f0:	ldr	x0, [sp, #24]
   1a7f4:	ldr	x0, [x0]
   1a7f8:	str	x0, [sp, #48]
   1a7fc:	str	xzr, [sp, #56]
   1a800:	b	1a9f0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1164>
   1a804:	ldr	x2, [sp, #24]
   1a808:	ldr	x1, [sp, #56]
   1a80c:	mov	x0, x1
   1a810:	lsl	x0, x0, #2
   1a814:	add	x0, x0, x1
   1a818:	lsl	x0, x0, #3
   1a81c:	add	x0, x2, x0
   1a820:	ldrb	w0, [x0, #241]
   1a824:	eor	w0, w0, #0x1
   1a828:	and	w0, w0, #0xff
   1a82c:	cmp	w0, #0x0
   1a830:	b.eq	1a9e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1158>  // b.none
   1a834:	ldr	x2, [sp, #24]
   1a838:	ldr	x1, [sp, #56]
   1a83c:	mov	x0, x1
   1a840:	lsl	x0, x0, #2
   1a844:	add	x0, x0, x1
   1a848:	lsl	x0, x0, #3
   1a84c:	add	x0, x2, x0
   1a850:	ldr	x0, [x0, #216]
   1a854:	cmp	x0, #0x0
   1a858:	b.eq	1a8a0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1014>  // b.none
   1a85c:	ldr	x2, [sp, #24]
   1a860:	ldr	x1, [sp, #56]
   1a864:	mov	x0, x1
   1a868:	lsl	x0, x0, #2
   1a86c:	add	x0, x0, x1
   1a870:	lsl	x0, x0, #3
   1a874:	add	x0, x2, x0
   1a878:	ldr	x2, [x0, #216]
   1a87c:	ldr	x3, [sp, #24]
   1a880:	ldr	x1, [sp, #56]
   1a884:	mov	x0, x1
   1a888:	lsl	x0, x0, #2
   1a88c:	add	x0, x0, x1
   1a890:	lsl	x0, x0, #3
   1a894:	add	x0, x3, x0
   1a898:	ldr	x0, [x0, #224]
   1a89c:	str	x0, [x2, #16]
   1a8a0:	ldr	x2, [sp, #24]
   1a8a4:	ldr	x1, [sp, #56]
   1a8a8:	mov	x0, x1
   1a8ac:	lsl	x0, x0, #2
   1a8b0:	add	x0, x0, x1
   1a8b4:	lsl	x0, x0, #3
   1a8b8:	add	x0, x2, x0
   1a8bc:	ldr	x0, [x0, #224]
   1a8c0:	cmp	x0, #0x0
   1a8c4:	b.eq	1a910 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1084>  // b.none
   1a8c8:	ldr	x2, [sp, #24]
   1a8cc:	ldr	x1, [sp, #56]
   1a8d0:	mov	x0, x1
   1a8d4:	lsl	x0, x0, #2
   1a8d8:	add	x0, x0, x1
   1a8dc:	lsl	x0, x0, #3
   1a8e0:	add	x0, x2, x0
   1a8e4:	ldr	x2, [x0, #224]
   1a8e8:	ldr	x3, [sp, #24]
   1a8ec:	ldr	x1, [sp, #56]
   1a8f0:	mov	x0, x1
   1a8f4:	lsl	x0, x0, #2
   1a8f8:	add	x0, x0, x1
   1a8fc:	lsl	x0, x0, #3
   1a900:	add	x0, x3, x0
   1a904:	ldr	x0, [x0, #216]
   1a908:	str	x0, [x2, #8]
   1a90c:	b	1a9e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1158>
   1a910:	ldr	x0, [sp, #48]
   1a914:	add	x3, x0, #0x38
   1a918:	ldr	x1, [sp, #56]
   1a91c:	mov	x0, x1
   1a920:	lsl	x0, x0, #2
   1a924:	add	x0, x0, x1
   1a928:	lsl	x0, x0, #3
   1a92c:	add	x0, x0, #0xd0
   1a930:	ldr	x1, [sp, #24]
   1a934:	add	x0, x1, x0
   1a938:	mov	w2, #0x0                   	// #0
   1a93c:	mov	x1, x0
   1a940:	mov	x0, x3
   1a944:	bl	15efc <GOMP_single_copy_end@@GOMP_1.0+0x11ec>
   1a948:	str	x0, [sp, #40]
   1a94c:	ldr	x0, [sp, #40]
   1a950:	ldr	x2, [x0]
   1a954:	ldr	x1, [sp, #56]
   1a958:	mov	x0, x1
   1a95c:	lsl	x0, x0, #2
   1a960:	add	x0, x0, x1
   1a964:	lsl	x0, x0, #3
   1a968:	add	x0, x0, #0xd0
   1a96c:	ldr	x1, [sp, #24]
   1a970:	add	x0, x1, x0
   1a974:	cmp	x2, x0
   1a978:	b.eq	1a980 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x10f4>  // b.none
   1a97c:	bl	8980 <abort@plt>
   1a980:	ldr	x2, [sp, #24]
   1a984:	ldr	x1, [sp, #56]
   1a988:	mov	x0, x1
   1a98c:	lsl	x0, x0, #2
   1a990:	add	x0, x0, x1
   1a994:	lsl	x0, x0, #3
   1a998:	add	x0, x2, x0
   1a99c:	ldr	x0, [x0, #216]
   1a9a0:	cmp	x0, #0x0
   1a9a4:	b.eq	1a9d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1148>  // b.none
   1a9a8:	ldr	x2, [sp, #24]
   1a9ac:	ldr	x1, [sp, #56]
   1a9b0:	mov	x0, x1
   1a9b4:	lsl	x0, x0, #2
   1a9b8:	add	x0, x0, x1
   1a9bc:	lsl	x0, x0, #3
   1a9c0:	add	x0, x2, x0
   1a9c4:	ldr	x1, [x0, #216]
   1a9c8:	ldr	x0, [sp, #40]
   1a9cc:	str	x1, [x0]
   1a9d0:	b	1a9e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1158>
   1a9d4:	ldr	x0, [sp, #48]
   1a9d8:	ldr	x0, [x0, #56]
   1a9dc:	ldr	x1, [sp, #40]
   1a9e0:	bl	16164 <GOMP_single_copy_end@@GOMP_1.0+0x1454>
   1a9e4:	ldr	x0, [sp, #56]
   1a9e8:	add	x0, x0, #0x1
   1a9ec:	str	x0, [sp, #56]
   1a9f0:	ldr	x0, [sp, #24]
   1a9f4:	ldr	x0, [x0, #72]
   1a9f8:	ldr	x1, [sp, #56]
   1a9fc:	cmp	x1, x0
   1aa00:	b.cc	1a804 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf78>  // b.lo, b.ul, b.last
   1aa04:	nop
   1aa08:	nop
   1aa0c:	ldp	x29, x30, [sp], #64
   1aa10:	ret
   1aa14:	stp	x29, x30, [sp, #-80]!
   1aa18:	mov	x29, sp
   1aa1c:	str	x0, [sp, #24]
   1aa20:	str	x1, [sp, #16]
   1aa24:	ldr	x0, [sp, #24]
   1aa28:	ldr	x0, [x0]
   1aa2c:	str	x0, [sp, #56]
   1aa30:	ldr	x0, [sp, #24]
   1aa34:	ldr	x0, [x0, #48]
   1aa38:	ldr	x0, [x0]
   1aa3c:	str	x0, [sp, #48]
   1aa40:	str	xzr, [sp, #64]
   1aa44:	str	xzr, [sp, #72]
   1aa48:	b	1ac28 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x139c>
   1aa4c:	ldr	x0, [sp, #24]
   1aa50:	ldr	x0, [x0, #48]
   1aa54:	ldr	x1, [sp, #72]
   1aa58:	add	x1, x1, #0x2
   1aa5c:	ldr	x0, [x0, x1, lsl #3]
   1aa60:	str	x0, [sp, #40]
   1aa64:	ldr	x0, [sp, #40]
   1aa68:	ldr	x0, [x0, #80]
   1aa6c:	sub	x1, x0, #0x1
   1aa70:	ldr	x0, [sp, #40]
   1aa74:	str	x1, [x0, #80]
   1aa78:	ldr	x0, [sp, #40]
   1aa7c:	ldr	x0, [x0, #80]
   1aa80:	cmp	x0, #0x0
   1aa84:	b.ne	1ac18 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x138c>  // b.any
   1aa88:	ldr	x0, [sp, #40]
   1aa8c:	ldr	x0, [x0, #40]
   1aa90:	str	x0, [sp, #32]
   1aa94:	ldr	x0, [sp, #56]
   1aa98:	cmp	x0, #0x0
   1aa9c:	b.eq	1ab48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x12bc>  // b.none
   1aaa0:	ldr	x0, [sp, #56]
   1aaa4:	add	x1, x0, #0x8
   1aaa8:	ldr	x0, [sp, #40]
   1aaac:	ldr	w2, [x0, #88]
   1aab0:	ldr	x0, [sp, #40]
   1aab4:	ldrb	w0, [x0, #207]
   1aab8:	mov	w6, w0
   1aabc:	mov	w5, #0x1                   	// #1
   1aac0:	mov	w4, #0x0                   	// #0
   1aac4:	mov	w3, w2
   1aac8:	ldr	x2, [sp, #40]
   1aacc:	mov	w0, #0x1                   	// #1
   1aad0:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1aad4:	ldr	x0, [sp, #56]
   1aad8:	ldr	x0, [x0, #64]
   1aadc:	cmp	x0, #0x0
   1aae0:	b.eq	1ab48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x12bc>  // b.none
   1aae4:	ldr	x0, [sp, #56]
   1aae8:	ldr	x0, [x0, #64]
   1aaec:	ldrb	w0, [x0]
   1aaf0:	cmp	w0, #0x0
   1aaf4:	b.eq	1ab18 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x128c>  // b.none
   1aaf8:	ldr	x0, [sp, #56]
   1aafc:	ldr	x0, [x0, #64]
   1ab00:	strb	wzr, [x0]
   1ab04:	ldr	x0, [sp, #56]
   1ab08:	ldr	x0, [x0, #64]
   1ab0c:	add	x0, x0, #0x10
   1ab10:	bl	154f0 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>
   1ab14:	b	1ab48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x12bc>
   1ab18:	ldr	x0, [sp, #56]
   1ab1c:	ldr	x0, [x0, #64]
   1ab20:	ldrb	w0, [x0, #1]
   1ab24:	cmp	w0, #0x0
   1ab28:	b.eq	1ab48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x12bc>  // b.none
   1ab2c:	ldr	x0, [sp, #56]
   1ab30:	ldr	x0, [x0, #64]
   1ab34:	strb	wzr, [x0, #1]
   1ab38:	ldr	x0, [sp, #56]
   1ab3c:	ldr	x0, [x0, #64]
   1ab40:	add	x0, x0, #0x10
   1ab44:	bl	154f0 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>
   1ab48:	ldr	x0, [sp, #32]
   1ab4c:	cmp	x0, #0x0
   1ab50:	b.eq	1abac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1320>  // b.none
   1ab54:	ldr	x0, [sp, #32]
   1ab58:	add	x1, x0, #0x8
   1ab5c:	ldr	x0, [sp, #40]
   1ab60:	ldr	w2, [x0, #88]
   1ab64:	ldr	x0, [sp, #40]
   1ab68:	ldrb	w0, [x0, #207]
   1ab6c:	mov	w6, w0
   1ab70:	mov	w5, #0x0                   	// #0
   1ab74:	mov	w4, #0x0                   	// #0
   1ab78:	mov	w3, w2
   1ab7c:	ldr	x2, [sp, #40]
   1ab80:	mov	w0, #0x2                   	// #2
   1ab84:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1ab88:	ldr	x0, [sp, #32]
   1ab8c:	ldrb	w0, [x0, #48]
   1ab90:	cmp	w0, #0x0
   1ab94:	b.eq	1abac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1320>  // b.none
   1ab98:	ldr	x0, [sp, #32]
   1ab9c:	strb	wzr, [x0, #48]
   1aba0:	ldr	x0, [sp, #32]
   1aba4:	add	x0, x0, #0x34
   1aba8:	bl	154f0 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>
   1abac:	ldr	x0, [sp, #16]
   1abb0:	add	x1, x0, #0x508
   1abb4:	ldr	x0, [sp, #40]
   1abb8:	ldr	w2, [x0, #88]
   1abbc:	ldr	x0, [sp, #40]
   1abc0:	ldrb	w0, [x0, #207]
   1abc4:	mov	w6, w0
   1abc8:	mov	w5, #0x0                   	// #0
   1abcc:	mov	w4, #0x1                   	// #1
   1abd0:	mov	w3, w2
   1abd4:	ldr	x2, [sp, #40]
   1abd8:	mov	w0, #0x0                   	// #0
   1abdc:	bl	15164 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   1abe0:	ldr	x0, [sp, #16]
   1abe4:	ldr	w0, [x0, #1320]
   1abe8:	add	w1, w0, #0x1
   1abec:	ldr	x0, [sp, #16]
   1abf0:	str	w1, [x0, #1320]
   1abf4:	ldr	x0, [sp, #16]
   1abf8:	ldr	w0, [x0, #1324]
   1abfc:	add	w1, w0, #0x1
   1ac00:	ldr	x0, [sp, #16]
   1ac04:	str	w1, [x0, #1324]
   1ac08:	ldr	x0, [sp, #64]
   1ac0c:	add	x0, x0, #0x1
   1ac10:	str	x0, [sp, #64]
   1ac14:	b	1ac1c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1390>
   1ac18:	nop
   1ac1c:	ldr	x0, [sp, #72]
   1ac20:	add	x0, x0, #0x1
   1ac24:	str	x0, [sp, #72]
   1ac28:	ldr	x1, [sp, #72]
   1ac2c:	ldr	x0, [sp, #48]
   1ac30:	cmp	x1, x0
   1ac34:	b.cc	1aa4c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x11c0>  // b.lo, b.ul, b.last
   1ac38:	ldr	x0, [sp, #24]
   1ac3c:	ldr	x0, [x0, #48]
   1ac40:	bl	8a20 <free@plt>
   1ac44:	ldr	x0, [sp, #24]
   1ac48:	str	xzr, [x0, #48]
   1ac4c:	ldr	x0, [sp, #64]
   1ac50:	cmp	x0, #0x1
   1ac54:	b.ls	1ac64 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x13d8>  // b.plast
   1ac58:	ldr	x0, [sp, #16]
   1ac5c:	add	x0, x0, #0x80
   1ac60:	bl	1566c <GOMP_single_copy_end@@GOMP_1.0+0x95c>
   1ac64:	ldr	x0, [sp, #64]
   1ac68:	ldp	x29, x30, [sp], #80
   1ac6c:	ret
   1ac70:	stp	x29, x30, [sp, #-32]!
   1ac74:	mov	x29, sp
   1ac78:	str	x0, [sp, #24]
   1ac7c:	str	x1, [sp, #16]
   1ac80:	ldr	x0, [sp, #24]
   1ac84:	ldr	x0, [x0, #72]
   1ac88:	cmp	x0, #0x0
   1ac8c:	b.ne	1ac98 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x140c>  // b.any
   1ac90:	mov	x0, #0x0                   	// #0
   1ac94:	b	1acd4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1448>
   1ac98:	ldr	x0, [sp, #24]
   1ac9c:	ldr	x0, [x0]
   1aca0:	cmp	x0, #0x0
   1aca4:	b.eq	1acb0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1424>  // b.none
   1aca8:	ldr	x0, [sp, #24]
   1acac:	bl	1a7e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf58>
   1acb0:	ldr	x0, [sp, #24]
   1acb4:	ldr	x0, [x0, #48]
   1acb8:	cmp	x0, #0x0
   1acbc:	b.ne	1acc8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x143c>  // b.any
   1acc0:	mov	x0, #0x0                   	// #0
   1acc4:	b	1acd4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1448>
   1acc8:	ldr	x1, [sp, #16]
   1accc:	ldr	x0, [sp, #24]
   1acd0:	bl	1aa14 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1188>
   1acd4:	ldp	x29, x30, [sp], #32
   1acd8:	ret
   1acdc:	stp	x29, x30, [sp, #-48]!
   1ace0:	mov	x29, sp
   1ace4:	str	x0, [sp, #24]
   1ace8:	ldr	x0, [sp, #24]
   1acec:	ldr	x0, [x0]
   1acf0:	str	x0, [sp, #40]
   1acf4:	ldr	x0, [sp, #40]
   1acf8:	cmp	x0, #0x0
   1acfc:	b.eq	1ade0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1554>  // b.none
   1ad00:	ldr	x0, [sp, #24]
   1ad04:	ldrb	w0, [x0, #207]
   1ad08:	and	x0, x0, #0xff
   1ad0c:	cmp	x0, #0x0
   1ad10:	b.eq	1ad64 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x14d8>  // b.none
   1ad14:	ldr	x0, [sp, #40]
   1ad18:	ldr	x0, [x0, #64]
   1ad1c:	ldr	x1, [x0, #8]
   1ad20:	sub	x1, x1, #0x1
   1ad24:	str	x1, [x0, #8]
   1ad28:	ldr	x0, [x0, #8]
   1ad2c:	cmp	x0, #0x0
   1ad30:	b.ne	1ad64 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x14d8>  // b.any
   1ad34:	ldr	x0, [sp, #40]
   1ad38:	ldr	x0, [x0, #64]
   1ad3c:	ldrb	w0, [x0, #1]
   1ad40:	cmp	w0, #0x0
   1ad44:	b.eq	1ad64 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x14d8>  // b.none
   1ad48:	ldr	x0, [sp, #40]
   1ad4c:	ldr	x0, [x0, #64]
   1ad50:	strb	wzr, [x0, #1]
   1ad54:	ldr	x0, [sp, #40]
   1ad58:	ldr	x0, [x0, #64]
   1ad5c:	add	x0, x0, #0x10
   1ad60:	bl	154f0 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>
   1ad64:	ldr	x0, [sp, #40]
   1ad68:	add	x0, x0, #0x8
   1ad6c:	mov	w3, #0x3                   	// #3
   1ad70:	ldr	x2, [sp, #24]
   1ad74:	mov	x1, x0
   1ad78:	mov	w0, #0x1                   	// #1
   1ad7c:	bl	15370 <GOMP_single_copy_end@@GOMP_1.0+0x660>
   1ad80:	and	w0, w0, #0xff
   1ad84:	cmp	w0, #0x0
   1ad88:	b.eq	1adcc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1540>  // b.none
   1ad8c:	ldr	x0, [sp, #40]
   1ad90:	ldr	x0, [x0, #64]
   1ad94:	cmp	x0, #0x0
   1ad98:	b.eq	1adcc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1540>  // b.none
   1ad9c:	ldr	x0, [sp, #40]
   1ada0:	ldr	x0, [x0, #64]
   1ada4:	ldrb	w0, [x0]
   1ada8:	cmp	w0, #0x0
   1adac:	b.eq	1adcc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1540>  // b.none
   1adb0:	ldr	x0, [sp, #40]
   1adb4:	ldr	x0, [x0, #64]
   1adb8:	strb	wzr, [x0]
   1adbc:	ldr	x0, [sp, #40]
   1adc0:	ldr	x0, [x0, #64]
   1adc4:	add	x0, x0, #0x10
   1adc8:	bl	154f0 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>
   1adcc:	ldr	x0, [sp, #24]
   1add0:	str	xzr, [x0, #112]
   1add4:	ldr	x0, [sp, #24]
   1add8:	str	xzr, [x0, #120]
   1addc:	b	1ade4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1558>
   1ade0:	nop
   1ade4:	ldp	x29, x30, [sp], #48
   1ade8:	ret
   1adec:	stp	x29, x30, [sp, #-48]!
   1adf0:	mov	x29, sp
   1adf4:	str	x0, [sp, #24]
   1adf8:	ldr	x0, [sp, #24]
   1adfc:	ldr	x0, [x0, #40]
   1ae00:	str	x0, [sp, #40]
   1ae04:	ldr	x0, [sp, #40]
   1ae08:	cmp	x0, #0x0
   1ae0c:	b.eq	1aea8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x161c>  // b.none
   1ae10:	ldr	x0, [sp, #40]
   1ae14:	add	x0, x0, #0x8
   1ae18:	mov	w3, #0x0                   	// #0
   1ae1c:	ldr	x2, [sp, #24]
   1ae20:	mov	x1, x0
   1ae24:	mov	w0, #0x2                   	// #2
   1ae28:	bl	15370 <GOMP_single_copy_end@@GOMP_1.0+0x660>
   1ae2c:	strb	w0, [sp, #39]
   1ae30:	ldr	x0, [sp, #24]
   1ae34:	str	xzr, [x0, #128]
   1ae38:	ldr	x0, [sp, #24]
   1ae3c:	str	xzr, [x0, #136]
   1ae40:	ldr	x0, [sp, #40]
   1ae44:	ldr	x0, [x0, #56]
   1ae48:	cmp	x0, #0x1
   1ae4c:	b.ls	1ae68 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x15dc>  // b.plast
   1ae50:	ldr	x0, [sp, #40]
   1ae54:	ldr	x0, [x0, #56]
   1ae58:	sub	x1, x0, #0x1
   1ae5c:	ldr	x0, [sp, #40]
   1ae60:	str	x1, [x0, #56]
   1ae64:	b	1ae74 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x15e8>
   1ae68:	ldr	x0, [sp, #40]
   1ae6c:	add	x0, x0, #0x38
   1ae70:	stlr	xzr, [x0]
   1ae74:	ldrb	w0, [sp, #39]
   1ae78:	cmp	w0, #0x0
   1ae7c:	b.eq	1aeac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1620>  // b.none
   1ae80:	ldr	x0, [sp, #40]
   1ae84:	ldrb	w0, [x0, #48]
   1ae88:	cmp	w0, #0x0
   1ae8c:	b.eq	1aeac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1620>  // b.none
   1ae90:	ldr	x0, [sp, #40]
   1ae94:	strb	wzr, [x0, #48]
   1ae98:	ldr	x0, [sp, #40]
   1ae9c:	add	x0, x0, #0x34
   1aea0:	bl	154f0 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>
   1aea4:	b	1aeac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1620>
   1aea8:	nop
   1aeac:	ldp	x29, x30, [sp], #48
   1aeb0:	ret
   1aeb4:	stp	x29, x30, [sp, #-112]!
   1aeb8:	mov	x29, sp
   1aebc:	str	w0, [sp, #28]
   1aec0:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1aec4:	str	x0, [sp, #80]
   1aec8:	ldr	x0, [sp, #80]
   1aecc:	ldr	x0, [x0, #16]
   1aed0:	str	x0, [sp, #72]
   1aed4:	ldr	x0, [sp, #80]
   1aed8:	ldr	x0, [x0, #80]
   1aedc:	str	x0, [sp, #64]
   1aee0:	str	xzr, [sp, #104]
   1aee4:	str	xzr, [sp, #96]
   1aee8:	str	wzr, [sp, #92]
   1aeec:	ldr	x0, [sp, #72]
   1aef0:	add	x0, x0, #0x500
   1aef4:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1aef8:	ldr	w0, [sp, #28]
   1aefc:	bl	15648 <GOMP_single_copy_end@@GOMP_1.0+0x938>
   1af00:	and	w0, w0, #0xff
   1af04:	cmp	w0, #0x0
   1af08:	b.eq	1af58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x16cc>  // b.none
   1af0c:	ldr	x0, [sp, #72]
   1af10:	ldr	w0, [x0, #1320]
   1af14:	cmp	w0, #0x0
   1af18:	b.ne	1af4c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x16c0>  // b.any
   1af1c:	ldr	x0, [sp, #72]
   1af20:	add	x0, x0, #0x80
   1af24:	ldr	w1, [sp, #28]
   1af28:	bl	15744 <GOMP_single_copy_end@@GOMP_1.0+0xa34>
   1af2c:	ldr	x0, [sp, #72]
   1af30:	add	x0, x0, #0x500
   1af34:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1af38:	ldr	x0, [sp, #72]
   1af3c:	add	x0, x0, #0x80
   1af40:	mov	w1, #0x0                   	// #0
   1af44:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   1af48:	b	1b280 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x19f4>
   1af4c:	ldr	x0, [sp, #72]
   1af50:	add	x0, x0, #0x80
   1af54:	bl	156bc <GOMP_single_copy_end@@GOMP_1.0+0x9ac>
   1af58:	strb	wzr, [sp, #91]
   1af5c:	ldr	x0, [sp, #72]
   1af60:	add	x0, x0, #0x508
   1af64:	mov	w1, #0x0                   	// #0
   1af68:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   1af6c:	and	w0, w0, #0xff
   1af70:	eor	w0, w0, #0x1
   1af74:	and	w0, w0, #0xff
   1af78:	cmp	w0, #0x0
   1af7c:	b.eq	1b014 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1788>  // b.none
   1af80:	ldr	x0, [sp, #72]
   1af84:	add	x0, x0, #0x508
   1af88:	add	x1, sp, #0x2f
   1af8c:	mov	x4, x1
   1af90:	mov	x3, #0x0                   	// #0
   1af94:	mov	w2, #0x3e7                 	// #999
   1af98:	mov	x1, x0
   1af9c:	mov	w0, #0x0                   	// #0
   1afa0:	bl	15214 <GOMP_single_copy_end@@GOMP_1.0+0x504>
   1afa4:	str	x0, [sp, #104]
   1afa8:	ldr	x0, [sp, #104]
   1afac:	ldr	x0, [x0]
   1afb0:	ldr	x2, [sp, #72]
   1afb4:	mov	x1, x0
   1afb8:	ldr	x0, [sp, #104]
   1afbc:	bl	1a658 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdcc>
   1afc0:	strb	w0, [sp, #91]
   1afc4:	ldrb	w0, [sp, #91]
   1afc8:	cmp	x0, #0x0
   1afcc:	b.eq	1aff4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1768>  // b.none
   1afd0:	ldr	x0, [sp, #96]
   1afd4:	cmp	x0, #0x0
   1afd8:	b.eq	1b164 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x18d8>  // b.none
   1afdc:	ldr	x0, [sp, #96]
   1afe0:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1afe4:	ldr	x0, [sp, #96]
   1afe8:	bl	8a20 <free@plt>
   1afec:	str	xzr, [sp, #96]
   1aff0:	b	1b168 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x18dc>
   1aff4:	ldr	x0, [sp, #72]
   1aff8:	ldr	w0, [x0, #1328]
   1affc:	add	w1, w0, #0x1
   1b000:	ldr	x0, [sp, #72]
   1b004:	str	w1, [x0, #1328]
   1b008:	ldr	x0, [sp, #104]
   1b00c:	mov	w1, #0x1                   	// #1
   1b010:	strb	w1, [x0, #204]
   1b014:	ldr	x0, [sp, #72]
   1b018:	add	x0, x0, #0x500
   1b01c:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1b020:	ldr	w0, [sp, #92]
   1b024:	cmp	w0, #0x0
   1b028:	b.eq	1b040 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x17b4>  // b.none
   1b02c:	ldr	x0, [sp, #72]
   1b030:	add	x0, x0, #0x80
   1b034:	ldr	w1, [sp, #92]
   1b038:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   1b03c:	str	wzr, [sp, #92]
   1b040:	ldr	x0, [sp, #96]
   1b044:	cmp	x0, #0x0
   1b048:	b.eq	1b060 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x17d4>  // b.none
   1b04c:	ldr	x0, [sp, #96]
   1b050:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1b054:	ldr	x0, [sp, #96]
   1b058:	bl	8a20 <free@plt>
   1b05c:	str	xzr, [sp, #96]
   1b060:	ldr	x0, [sp, #104]
   1b064:	cmp	x0, #0x0
   1b068:	b.eq	1b27c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x19f0>  // b.none
   1b06c:	ldr	x0, [sp, #80]
   1b070:	ldr	x1, [sp, #104]
   1b074:	str	x1, [x0, #80]
   1b078:	ldr	x0, [sp, #104]
   1b07c:	ldr	x0, [x0, #184]
   1b080:	cmp	x0, #0x0
   1b084:	cset	w0, eq  // eq = none
   1b088:	and	w0, w0, #0xff
   1b08c:	and	x0, x0, #0xff
   1b090:	cmp	x0, #0x0
   1b094:	b.eq	1b128 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x189c>  // b.none
   1b098:	ldr	x0, [sp, #104]
   1b09c:	ldr	x0, [x0, #192]
   1b0a0:	bl	2a814 <GOMP_target_enter_exit_data@@GOMP_4.5+0x438>
   1b0a4:	and	w0, w0, #0xff
   1b0a8:	cmp	w0, #0x0
   1b0ac:	b.eq	1b13c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x18b0>  // b.none
   1b0b0:	ldr	x0, [sp, #80]
   1b0b4:	ldr	x1, [sp, #64]
   1b0b8:	str	x1, [x0, #80]
   1b0bc:	ldr	x0, [sp, #72]
   1b0c0:	add	x0, x0, #0x500
   1b0c4:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1b0c8:	ldr	x0, [sp, #104]
   1b0cc:	mov	w1, #0x4                   	// #4
   1b0d0:	str	w1, [x0, #200]
   1b0d4:	ldr	x0, [sp, #72]
   1b0d8:	ldr	w0, [x0, #1328]
   1b0dc:	sub	w1, w0, #0x1
   1b0e0:	ldr	x0, [sp, #72]
   1b0e4:	str	w1, [x0, #1328]
   1b0e8:	ldr	x0, [sp, #104]
   1b0ec:	ldr	x0, [x0, #192]
   1b0f0:	str	x0, [sp, #56]
   1b0f4:	ldr	x0, [sp, #56]
   1b0f8:	ldr	w0, [x0, #44]
   1b0fc:	cmp	w0, #0x5
   1b100:	b.ne	1b114 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1888>  // b.any
   1b104:	ldr	x1, [sp, #104]
   1b108:	ldr	x0, [sp, #72]
   1b10c:	bl	196d8 <GOMP_taskloop_ull@@GOMP_4.5+0x115c>
   1b110:	b	1b120 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1894>
   1b114:	ldr	x0, [sp, #56]
   1b118:	mov	w1, #0x4                   	// #4
   1b11c:	str	w1, [x0, #44]
   1b120:	str	xzr, [sp, #104]
   1b124:	b	1b278 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x19ec>
   1b128:	ldr	x0, [sp, #104]
   1b12c:	ldr	x1, [x0, #184]
   1b130:	ldr	x0, [sp, #104]
   1b134:	ldr	x0, [x0, #192]
   1b138:	blr	x1
   1b13c:	ldr	x0, [sp, #80]
   1b140:	ldr	x1, [sp, #64]
   1b144:	str	x1, [x0, #80]
   1b148:	ldr	x0, [sp, #72]
   1b14c:	add	x0, x0, #0x500
   1b150:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1b154:	ldr	x0, [sp, #104]
   1b158:	cmp	x0, #0x0
   1b15c:	b.eq	1af58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x16cc>  // b.none
   1b160:	b	1b168 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x18dc>
   1b164:	nop
   1b168:	ldr	x1, [sp, #72]
   1b16c:	ldr	x0, [sp, #104]
   1b170:	bl	1ac70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x13e4>
   1b174:	str	x0, [sp, #48]
   1b178:	ldr	x0, [sp, #104]
   1b17c:	bl	1acdc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1450>
   1b180:	ldr	x0, [sp, #104]
   1b184:	add	x0, x0, #0x8
   1b188:	bl	1643c <GOMP_single_copy_end@@GOMP_1.0+0x172c>
   1b18c:	ldr	x0, [sp, #104]
   1b190:	bl	1adec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1560>
   1b194:	ldr	x0, [sp, #104]
   1b198:	str	x0, [sp, #96]
   1b19c:	str	xzr, [sp, #104]
   1b1a0:	ldrb	w0, [sp, #91]
   1b1a4:	eor	w0, w0, #0x1
   1b1a8:	and	w0, w0, #0xff
   1b1ac:	cmp	w0, #0x0
   1b1b0:	b.eq	1b1c8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x193c>  // b.none
   1b1b4:	ldr	x0, [sp, #72]
   1b1b8:	ldr	w0, [x0, #1328]
   1b1bc:	sub	w1, w0, #0x1
   1b1c0:	ldr	x0, [sp, #72]
   1b1c4:	str	w1, [x0, #1328]
   1b1c8:	ldr	x0, [sp, #48]
   1b1cc:	cmp	x0, #0x1
   1b1d0:	b.ls	1b204 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1978>  // b.plast
   1b1d4:	ldr	x0, [sp, #72]
   1b1d8:	ldr	w1, [x0]
   1b1dc:	ldr	x0, [sp, #72]
   1b1e0:	ldr	w0, [x0, #1328]
   1b1e4:	sub	w0, w1, w0
   1b1e8:	str	w0, [sp, #92]
   1b1ec:	ldrsw	x0, [sp, #92]
   1b1f0:	ldr	x1, [sp, #48]
   1b1f4:	cmp	x1, x0
   1b1f8:	b.cs	1b204 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1978>  // b.hs, b.nlast
   1b1fc:	ldr	x0, [sp, #48]
   1b200:	str	w0, [sp, #92]
   1b204:	ldr	x0, [sp, #72]
   1b208:	ldr	w0, [x0, #1320]
   1b20c:	sub	w1, w0, #0x1
   1b210:	ldr	x0, [sp, #72]
   1b214:	str	w1, [x0, #1320]
   1b218:	ldr	x0, [sp, #72]
   1b21c:	ldr	w0, [x0, #1320]
   1b220:	cmp	w0, #0x0
   1b224:	b.ne	1af58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x16cc>  // b.any
   1b228:	ldr	x0, [sp, #72]
   1b22c:	add	x0, x0, #0x80
   1b230:	bl	156e4 <GOMP_single_copy_end@@GOMP_1.0+0x9d4>
   1b234:	and	w0, w0, #0xff
   1b238:	cmp	w0, #0x0
   1b23c:	b.eq	1af58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x16cc>  // b.none
   1b240:	ldr	x0, [sp, #72]
   1b244:	add	x0, x0, #0x80
   1b248:	ldr	w1, [sp, #28]
   1b24c:	bl	15744 <GOMP_single_copy_end@@GOMP_1.0+0xa34>
   1b250:	ldr	x0, [sp, #72]
   1b254:	add	x0, x0, #0x500
   1b258:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1b25c:	ldr	x0, [sp, #72]
   1b260:	add	x0, x0, #0x80
   1b264:	mov	w1, #0x0                   	// #0
   1b268:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   1b26c:	ldr	x0, [sp, #72]
   1b270:	add	x0, x0, #0x500
   1b274:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1b278:	b	1af58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x16cc>
   1b27c:	nop
   1b280:	ldp	x29, x30, [sp], #112
   1b284:	ret

000000000001b288 <GOMP_taskwait@@GOMP_2.0>:
   1b288:	stp	x29, x30, [sp, #-144]!
   1b28c:	mov	x29, sp
   1b290:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1b294:	str	x0, [sp, #112]
   1b298:	ldr	x0, [sp, #112]
   1b29c:	ldr	x0, [x0, #16]
   1b2a0:	str	x0, [sp, #104]
   1b2a4:	ldr	x0, [sp, #112]
   1b2a8:	ldr	x0, [x0, #80]
   1b2ac:	str	x0, [sp, #96]
   1b2b0:	str	xzr, [sp, #136]
   1b2b4:	str	xzr, [sp, #128]
   1b2b8:	str	wzr, [sp, #124]
   1b2bc:	ldr	x0, [sp, #96]
   1b2c0:	cmp	x0, #0x0
   1b2c4:	b.eq	1b664 <GOMP_taskwait@@GOMP_2.0+0x3dc>  // b.none
   1b2c8:	ldr	x0, [sp, #96]
   1b2cc:	add	x0, x0, #0x8
   1b2d0:	mov	w1, #0x2                   	// #2
   1b2d4:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   1b2d8:	and	w0, w0, #0xff
   1b2dc:	cmp	w0, #0x0
   1b2e0:	b.ne	1b664 <GOMP_taskwait@@GOMP_2.0+0x3dc>  // b.any
   1b2e4:	add	x0, sp, #0x20
   1b2e8:	mov	x2, #0x18                  	// #24
   1b2ec:	mov	w1, #0x0                   	// #0
   1b2f0:	bl	88d0 <memset@plt>
   1b2f4:	strb	wzr, [sp, #31]
   1b2f8:	ldr	x0, [sp, #104]
   1b2fc:	add	x0, x0, #0x500
   1b300:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1b304:	strb	wzr, [sp, #95]
   1b308:	ldr	x0, [sp, #96]
   1b30c:	add	x0, x0, #0x8
   1b310:	mov	w1, #0x0                   	// #0
   1b314:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   1b318:	and	w0, w0, #0xff
   1b31c:	cmp	w0, #0x0
   1b320:	b.eq	1b384 <GOMP_taskwait@@GOMP_2.0+0xfc>  // b.none
   1b324:	ldr	x0, [sp, #96]
   1b328:	ldr	x0, [x0, #64]
   1b32c:	cmp	x0, #0x0
   1b330:	cset	w0, ne  // ne = any
   1b334:	strb	w0, [sp, #63]
   1b338:	ldr	x0, [sp, #96]
   1b33c:	str	xzr, [x0, #64]
   1b340:	ldr	x0, [sp, #104]
   1b344:	add	x0, x0, #0x500
   1b348:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1b34c:	ldr	x0, [sp, #128]
   1b350:	cmp	x0, #0x0
   1b354:	b.eq	1b368 <GOMP_taskwait@@GOMP_2.0+0xe0>  // b.none
   1b358:	ldr	x0, [sp, #128]
   1b35c:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1b360:	ldr	x0, [sp, #128]
   1b364:	bl	8a20 <free@plt>
   1b368:	ldrb	w0, [sp, #63]
   1b36c:	cmp	w0, #0x0
   1b370:	b.eq	1b66c <GOMP_taskwait@@GOMP_2.0+0x3e4>  // b.none
   1b374:	add	x0, sp, #0x20
   1b378:	add	x0, x0, #0x10
   1b37c:	bl	15448 <GOMP_single_copy_end@@GOMP_1.0+0x738>
   1b380:	b	1b66c <GOMP_taskwait@@GOMP_2.0+0x3e4>
   1b384:	ldr	x0, [sp, #96]
   1b388:	add	x1, x0, #0x8
   1b38c:	ldr	x0, [sp, #104]
   1b390:	add	x0, x0, #0x508
   1b394:	add	x2, sp, #0x1f
   1b398:	mov	x4, x2
   1b39c:	mov	x3, x0
   1b3a0:	mov	w2, #0x0                   	// #0
   1b3a4:	mov	w0, #0x1                   	// #1
   1b3a8:	bl	15214 <GOMP_single_copy_end@@GOMP_1.0+0x504>
   1b3ac:	str	x0, [sp, #80]
   1b3b0:	ldr	x0, [sp, #80]
   1b3b4:	ldr	w0, [x0, #200]
   1b3b8:	cmp	w0, #0x2
   1b3bc:	b.ne	1b40c <GOMP_taskwait@@GOMP_2.0+0x184>  // b.any
   1b3c0:	ldr	x0, [sp, #80]
   1b3c4:	str	x0, [sp, #136]
   1b3c8:	ldr	x2, [sp, #104]
   1b3cc:	ldr	x1, [sp, #96]
   1b3d0:	ldr	x0, [sp, #136]
   1b3d4:	bl	1a658 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdcc>
   1b3d8:	strb	w0, [sp, #95]
   1b3dc:	ldrb	w0, [sp, #95]
   1b3e0:	cmp	x0, #0x0
   1b3e4:	b.eq	1b444 <GOMP_taskwait@@GOMP_2.0+0x1bc>  // b.none
   1b3e8:	ldr	x0, [sp, #128]
   1b3ec:	cmp	x0, #0x0
   1b3f0:	b.eq	1b590 <GOMP_taskwait@@GOMP_2.0+0x308>  // b.none
   1b3f4:	ldr	x0, [sp, #128]
   1b3f8:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1b3fc:	ldr	x0, [sp, #128]
   1b400:	bl	8a20 <free@plt>
   1b404:	str	xzr, [sp, #128]
   1b408:	b	1b590 <GOMP_taskwait@@GOMP_2.0+0x308>
   1b40c:	ldr	x0, [sp, #96]
   1b410:	ldr	x0, [x0, #64]
   1b414:	cmp	x0, #0x0
   1b418:	b.ne	1b43c <GOMP_taskwait@@GOMP_2.0+0x1b4>  // b.any
   1b41c:	strb	wzr, [sp, #33]
   1b420:	add	x0, sp, #0x20
   1b424:	add	x0, x0, #0x10
   1b428:	mov	w1, #0x0                   	// #0
   1b42c:	bl	15424 <GOMP_single_copy_end@@GOMP_1.0+0x714>
   1b430:	ldr	x0, [sp, #96]
   1b434:	add	x1, sp, #0x20
   1b438:	str	x1, [x0, #64]
   1b43c:	mov	w0, #0x1                   	// #1
   1b440:	strb	w0, [sp, #32]
   1b444:	ldr	x0, [sp, #104]
   1b448:	add	x0, x0, #0x500
   1b44c:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1b450:	ldr	w0, [sp, #124]
   1b454:	cmp	w0, #0x0
   1b458:	b.eq	1b470 <GOMP_taskwait@@GOMP_2.0+0x1e8>  // b.none
   1b45c:	ldr	x0, [sp, #104]
   1b460:	add	x0, x0, #0x80
   1b464:	ldr	w1, [sp, #124]
   1b468:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   1b46c:	str	wzr, [sp, #124]
   1b470:	ldr	x0, [sp, #128]
   1b474:	cmp	x0, #0x0
   1b478:	b.eq	1b490 <GOMP_taskwait@@GOMP_2.0+0x208>  // b.none
   1b47c:	ldr	x0, [sp, #128]
   1b480:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1b484:	ldr	x0, [sp, #128]
   1b488:	bl	8a20 <free@plt>
   1b48c:	str	xzr, [sp, #128]
   1b490:	ldr	x0, [sp, #136]
   1b494:	cmp	x0, #0x0
   1b498:	b.eq	1b568 <GOMP_taskwait@@GOMP_2.0+0x2e0>  // b.none
   1b49c:	ldr	x0, [sp, #112]
   1b4a0:	ldr	x1, [sp, #136]
   1b4a4:	str	x1, [x0, #80]
   1b4a8:	ldr	x0, [sp, #136]
   1b4ac:	ldr	x0, [x0, #184]
   1b4b0:	cmp	x0, #0x0
   1b4b4:	cset	w0, eq  // eq = none
   1b4b8:	and	w0, w0, #0xff
   1b4bc:	and	x0, x0, #0xff
   1b4c0:	cmp	x0, #0x0
   1b4c4:	b.eq	1b544 <GOMP_taskwait@@GOMP_2.0+0x2bc>  // b.none
   1b4c8:	ldr	x0, [sp, #136]
   1b4cc:	ldr	x0, [x0, #192]
   1b4d0:	bl	2a814 <GOMP_target_enter_exit_data@@GOMP_4.5+0x438>
   1b4d4:	and	w0, w0, #0xff
   1b4d8:	cmp	w0, #0x0
   1b4dc:	b.eq	1b558 <GOMP_taskwait@@GOMP_2.0+0x2d0>  // b.none
   1b4e0:	ldr	x0, [sp, #112]
   1b4e4:	ldr	x1, [sp, #96]
   1b4e8:	str	x1, [x0, #80]
   1b4ec:	ldr	x0, [sp, #104]
   1b4f0:	add	x0, x0, #0x500
   1b4f4:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1b4f8:	ldr	x0, [sp, #136]
   1b4fc:	mov	w1, #0x4                   	// #4
   1b500:	str	w1, [x0, #200]
   1b504:	ldr	x0, [sp, #136]
   1b508:	ldr	x0, [x0, #192]
   1b50c:	str	x0, [sp, #72]
   1b510:	ldr	x0, [sp, #72]
   1b514:	ldr	w0, [x0, #44]
   1b518:	cmp	w0, #0x5
   1b51c:	b.ne	1b530 <GOMP_taskwait@@GOMP_2.0+0x2a8>  // b.any
   1b520:	ldr	x1, [sp, #136]
   1b524:	ldr	x0, [sp, #104]
   1b528:	bl	196d8 <GOMP_taskloop_ull@@GOMP_4.5+0x115c>
   1b52c:	b	1b53c <GOMP_taskwait@@GOMP_2.0+0x2b4>
   1b530:	ldr	x0, [sp, #72]
   1b534:	mov	w1, #0x4                   	// #4
   1b538:	str	w1, [x0, #44]
   1b53c:	str	xzr, [sp, #136]
   1b540:	b	1b660 <GOMP_taskwait@@GOMP_2.0+0x3d8>
   1b544:	ldr	x0, [sp, #136]
   1b548:	ldr	x1, [x0, #184]
   1b54c:	ldr	x0, [sp, #136]
   1b550:	ldr	x0, [x0, #192]
   1b554:	blr	x1
   1b558:	ldr	x0, [sp, #112]
   1b55c:	ldr	x1, [sp, #96]
   1b560:	str	x1, [x0, #80]
   1b564:	b	1b574 <GOMP_taskwait@@GOMP_2.0+0x2ec>
   1b568:	add	x0, sp, #0x20
   1b56c:	add	x0, x0, #0x10
   1b570:	bl	1545c <GOMP_single_copy_end@@GOMP_1.0+0x74c>
   1b574:	ldr	x0, [sp, #104]
   1b578:	add	x0, x0, #0x500
   1b57c:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1b580:	ldr	x0, [sp, #136]
   1b584:	cmp	x0, #0x0
   1b588:	b.eq	1b304 <GOMP_taskwait@@GOMP_2.0+0x7c>  // b.none
   1b58c:	b	1b594 <GOMP_taskwait@@GOMP_2.0+0x30c>
   1b590:	nop
   1b594:	ldr	x1, [sp, #104]
   1b598:	ldr	x0, [sp, #136]
   1b59c:	bl	1ac70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x13e4>
   1b5a0:	str	x0, [sp, #64]
   1b5a4:	ldrb	w0, [sp, #31]
   1b5a8:	cmp	w0, #0x0
   1b5ac:	b.eq	1b5dc <GOMP_taskwait@@GOMP_2.0+0x354>  // b.none
   1b5b0:	ldr	x0, [sp, #96]
   1b5b4:	add	x0, x0, #0x8
   1b5b8:	mov	w3, #0x0                   	// #0
   1b5bc:	ldr	x2, [sp, #136]
   1b5c0:	mov	x1, x0
   1b5c4:	mov	w0, #0x1                   	// #1
   1b5c8:	bl	15370 <GOMP_single_copy_end@@GOMP_1.0+0x660>
   1b5cc:	ldr	x0, [sp, #136]
   1b5d0:	str	xzr, [x0, #112]
   1b5d4:	ldr	x0, [sp, #136]
   1b5d8:	str	xzr, [x0, #120]
   1b5dc:	ldr	x0, [sp, #136]
   1b5e0:	add	x0, x0, #0x8
   1b5e4:	bl	1643c <GOMP_single_copy_end@@GOMP_1.0+0x172c>
   1b5e8:	ldr	x0, [sp, #136]
   1b5ec:	bl	1adec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1560>
   1b5f0:	ldr	x0, [sp, #136]
   1b5f4:	str	x0, [sp, #128]
   1b5f8:	str	xzr, [sp, #136]
   1b5fc:	ldr	x0, [sp, #104]
   1b600:	ldr	w0, [x0, #1320]
   1b604:	sub	w1, w0, #0x1
   1b608:	ldr	x0, [sp, #104]
   1b60c:	str	w1, [x0, #1320]
   1b610:	ldr	x0, [sp, #64]
   1b614:	cmp	x0, #0x1
   1b618:	b.ls	1b304 <GOMP_taskwait@@GOMP_2.0+0x7c>  // b.plast
   1b61c:	ldr	x0, [sp, #104]
   1b620:	ldr	w1, [x0]
   1b624:	ldr	x0, [sp, #104]
   1b628:	ldr	w0, [x0, #1328]
   1b62c:	sub	w0, w1, w0
   1b630:	ldr	x1, [sp, #96]
   1b634:	ldrb	w1, [x1, #204]
   1b638:	eor	w1, w1, #0x1
   1b63c:	and	w1, w1, #0xff
   1b640:	sub	w0, w0, w1
   1b644:	str	w0, [sp, #124]
   1b648:	ldrsw	x0, [sp, #124]
   1b64c:	ldr	x1, [sp, #64]
   1b650:	cmp	x1, x0
   1b654:	b.cs	1b304 <GOMP_taskwait@@GOMP_2.0+0x7c>  // b.hs, b.nlast
   1b658:	ldr	x0, [sp, #64]
   1b65c:	str	w0, [sp, #124]
   1b660:	b	1b304 <GOMP_taskwait@@GOMP_2.0+0x7c>
   1b664:	nop
   1b668:	b	1b670 <GOMP_taskwait@@GOMP_2.0+0x3e8>
   1b66c:	nop
   1b670:	ldp	x29, x30, [sp], #144
   1b674:	ret

000000000001b678 <GOMP_taskwait_depend@@GOMP_5.0>:
   1b678:	stp	x29, x30, [sp, #-48]!
   1b67c:	mov	x29, sp
   1b680:	str	x0, [sp, #24]
   1b684:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1b688:	str	x0, [sp, #40]
   1b68c:	ldr	x0, [sp, #40]
   1b690:	ldr	x0, [x0, #16]
   1b694:	str	x0, [sp, #32]
   1b698:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1b69c:	add	x0, x0, #0x574
   1b6a0:	ldrb	w0, [x0]
   1b6a4:	and	x0, x0, #0xff
   1b6a8:	cmp	x0, #0x0
   1b6ac:	b.eq	1b74c <GOMP_taskwait_depend@@GOMP_5.0+0xd4>  // b.none
   1b6b0:	ldr	x0, [sp, #32]
   1b6b4:	cmp	x0, #0x0
   1b6b8:	b.eq	1b74c <GOMP_taskwait_depend@@GOMP_5.0+0xd4>  // b.none
   1b6bc:	ldr	x0, [sp, #32]
   1b6c0:	add	x0, x0, #0x80
   1b6c4:	bl	1570c <GOMP_single_copy_end@@GOMP_1.0+0x9fc>
   1b6c8:	and	w0, w0, #0xff
   1b6cc:	cmp	w0, #0x0
   1b6d0:	b.ne	1b77c <GOMP_taskwait_depend@@GOMP_5.0+0x104>  // b.any
   1b6d4:	ldr	x0, [sp, #40]
   1b6d8:	ldr	x0, [x0, #80]
   1b6dc:	ldr	x0, [x0, #40]
   1b6e0:	cmp	x0, #0x0
   1b6e4:	b.eq	1b74c <GOMP_taskwait_depend@@GOMP_5.0+0xd4>  // b.none
   1b6e8:	ldr	x0, [sp, #40]
   1b6ec:	ldr	x0, [x0, #80]
   1b6f0:	ldr	x0, [x0, #40]
   1b6f4:	ldrb	w0, [x0, #49]
   1b6f8:	cmp	w0, #0x0
   1b6fc:	b.ne	1b784 <GOMP_taskwait_depend@@GOMP_5.0+0x10c>  // b.any
   1b700:	ldr	x0, [sp, #40]
   1b704:	ldr	x0, [x0, #80]
   1b708:	ldr	x0, [x0, #40]
   1b70c:	ldrb	w0, [x0, #50]
   1b710:	cmp	w0, #0x0
   1b714:	b.eq	1b74c <GOMP_taskwait_depend@@GOMP_5.0+0xd4>  // b.none
   1b718:	ldr	x0, [sp, #40]
   1b71c:	ldr	x0, [x0, #80]
   1b720:	ldr	x0, [x0, #40]
   1b724:	ldr	x0, [x0]
   1b728:	cmp	x0, #0x0
   1b72c:	b.eq	1b74c <GOMP_taskwait_depend@@GOMP_5.0+0xd4>  // b.none
   1b730:	ldr	x0, [sp, #40]
   1b734:	ldr	x0, [x0, #80]
   1b738:	ldr	x0, [x0, #40]
   1b73c:	ldr	x0, [x0]
   1b740:	ldrb	w0, [x0, #49]
   1b744:	cmp	w0, #0x0
   1b748:	b.ne	1b78c <GOMP_taskwait_depend@@GOMP_5.0+0x114>  // b.any
   1b74c:	ldr	x0, [sp, #40]
   1b750:	ldr	x0, [x0, #80]
   1b754:	cmp	x0, #0x0
   1b758:	b.eq	1b790 <GOMP_taskwait_depend@@GOMP_5.0+0x118>  // b.none
   1b75c:	ldr	x0, [sp, #40]
   1b760:	ldr	x0, [x0, #80]
   1b764:	ldr	x0, [x0, #56]
   1b768:	cmp	x0, #0x0
   1b76c:	b.eq	1b790 <GOMP_taskwait_depend@@GOMP_5.0+0x118>  // b.none
   1b770:	ldr	x0, [sp, #24]
   1b774:	bl	1b798 <GOMP_taskwait_depend@@GOMP_5.0+0x120>
   1b778:	b	1b790 <GOMP_taskwait_depend@@GOMP_5.0+0x118>
   1b77c:	nop
   1b780:	b	1b790 <GOMP_taskwait_depend@@GOMP_5.0+0x118>
   1b784:	nop
   1b788:	b	1b790 <GOMP_taskwait_depend@@GOMP_5.0+0x118>
   1b78c:	nop
   1b790:	ldp	x29, x30, [sp], #48
   1b794:	ret
   1b798:	stp	x29, x30, [sp, #-272]!
   1b79c:	mov	x29, sp
   1b7a0:	str	x0, [sp, #24]
   1b7a4:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1b7a8:	str	x0, [sp, #184]
   1b7ac:	ldr	x0, [sp, #184]
   1b7b0:	ldr	x0, [x0, #80]
   1b7b4:	str	x0, [sp, #176]
   1b7b8:	ldr	x0, [sp, #184]
   1b7bc:	ldr	x0, [x0, #16]
   1b7c0:	str	x0, [sp, #168]
   1b7c4:	str	xzr, [sp, #264]
   1b7c8:	ldr	x0, [sp, #24]
   1b7cc:	ldr	x0, [x0]
   1b7d0:	str	x0, [sp, #160]
   1b7d4:	ldr	x0, [sp, #24]
   1b7d8:	add	x0, x0, #0x8
   1b7dc:	ldr	x0, [x0]
   1b7e0:	str	x0, [sp, #256]
   1b7e4:	ldr	x0, [sp, #160]
   1b7e8:	str	x0, [sp, #248]
   1b7ec:	ldr	x0, [sp, #248]
   1b7f0:	str	x0, [sp, #240]
   1b7f4:	mov	x0, #0x2                   	// #2
   1b7f8:	str	x0, [sp, #232]
   1b7fc:	str	xzr, [sp, #216]
   1b800:	str	xzr, [sp, #208]
   1b804:	str	xzr, [sp, #200]
   1b808:	str	wzr, [sp, #196]
   1b80c:	ldr	x0, [sp, #248]
   1b810:	cmp	x0, #0x0
   1b814:	b.ne	1b868 <GOMP_taskwait_depend@@GOMP_5.0+0x1f0>  // b.any
   1b818:	ldr	x0, [sp, #256]
   1b81c:	str	x0, [sp, #248]
   1b820:	ldr	x0, [sp, #24]
   1b824:	add	x0, x0, #0x10
   1b828:	ldr	x0, [x0]
   1b82c:	mov	x1, x0
   1b830:	ldr	x0, [sp, #24]
   1b834:	add	x0, x0, #0x18
   1b838:	ldr	x0, [x0]
   1b83c:	add	x0, x1, x0
   1b840:	str	x0, [sp, #256]
   1b844:	ldr	x0, [sp, #24]
   1b848:	add	x0, x0, #0x20
   1b84c:	ldr	x0, [x0]
   1b850:	mov	x1, x0
   1b854:	ldr	x0, [sp, #256]
   1b858:	add	x0, x0, x1
   1b85c:	str	x0, [sp, #240]
   1b860:	mov	x0, #0x5                   	// #5
   1b864:	str	x0, [sp, #232]
   1b868:	ldr	x0, [sp, #168]
   1b86c:	add	x0, x0, #0x500
   1b870:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1b874:	str	xzr, [sp, #224]
   1b878:	b	1ba00 <GOMP_taskwait_depend@@GOMP_5.0+0x388>
   1b87c:	ldr	x1, [sp, #224]
   1b880:	ldr	x0, [sp, #232]
   1b884:	add	x0, x1, x0
   1b888:	lsl	x0, x0, #3
   1b88c:	ldr	x1, [sp, #24]
   1b890:	add	x0, x1, x0
   1b894:	ldr	x0, [x0]
   1b898:	str	x0, [sp, #72]
   1b89c:	ldr	x1, [sp, #224]
   1b8a0:	ldr	x0, [sp, #256]
   1b8a4:	cmp	x1, x0
   1b8a8:	cset	w0, cs  // cs = hs, nlast
   1b8ac:	and	w0, w0, #0xff
   1b8b0:	strb	w0, [sp, #104]
   1b8b4:	ldr	x1, [sp, #224]
   1b8b8:	ldr	x0, [sp, #240]
   1b8bc:	cmp	x1, x0
   1b8c0:	cset	w0, cs  // cs = hs, nlast
   1b8c4:	and	w0, w0, #0xff
   1b8c8:	and	x0, x0, #0xff
   1b8cc:	cmp	x0, #0x0
   1b8d0:	b.eq	1b938 <GOMP_taskwait_depend@@GOMP_5.0+0x2c0>  // b.none
   1b8d4:	ldr	x0, [sp, #72]
   1b8d8:	str	x0, [sp, #120]
   1b8dc:	ldr	x0, [sp, #120]
   1b8e0:	add	x0, x0, #0x8
   1b8e4:	ldr	x0, [x0]
   1b8e8:	cmp	x0, #0x1
   1b8ec:	b.eq	1b928 <GOMP_taskwait_depend@@GOMP_5.0+0x2b0>  // b.none
   1b8f0:	cmp	x0, #0x0
   1b8f4:	b.eq	1b90c <GOMP_taskwait_depend@@GOMP_5.0+0x294>  // b.none
   1b8f8:	sub	x0, x0, #0x2
   1b8fc:	cmp	x0, #0x2
   1b900:	b.hi	1b90c <GOMP_taskwait_depend@@GOMP_5.0+0x294>  // b.pmore
   1b904:	strb	wzr, [sp, #104]
   1b908:	b	1b92c <GOMP_taskwait_depend@@GOMP_5.0+0x2b4>
   1b90c:	ldr	x0, [sp, #120]
   1b910:	add	x0, x0, #0x8
   1b914:	ldr	x0, [x0]
   1b918:	mov	w1, w0
   1b91c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   1b920:	add	x0, x0, #0x4a8
   1b924:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   1b928:	nop
   1b92c:	ldr	x0, [sp, #120]
   1b930:	ldr	x0, [x0]
   1b934:	str	x0, [sp, #72]
   1b938:	ldr	x0, [sp, #176]
   1b93c:	ldr	x0, [x0, #56]
   1b940:	add	x1, sp, #0x48
   1b944:	bl	15de4 <GOMP_single_copy_end@@GOMP_1.0+0x10d4>
   1b948:	str	x0, [sp, #264]
   1b94c:	b	1b9e8 <GOMP_taskwait_depend@@GOMP_5.0+0x370>
   1b950:	ldrb	w0, [sp, #104]
   1b954:	cmp	w0, #0x0
   1b958:	b.eq	1b96c <GOMP_taskwait_depend@@GOMP_5.0+0x2f4>  // b.none
   1b95c:	ldr	x0, [sp, #264]
   1b960:	ldrb	w0, [x0, #32]
   1b964:	cmp	w0, #0x0
   1b968:	b.ne	1b9d8 <GOMP_taskwait_depend@@GOMP_5.0+0x360>  // b.any
   1b96c:	ldr	x0, [sp, #264]
   1b970:	ldr	x0, [x0, #24]
   1b974:	str	x0, [sp, #112]
   1b978:	ldr	x0, [sp, #112]
   1b97c:	ldrb	w0, [x0, #207]
   1b980:	eor	w0, w0, #0x1
   1b984:	and	w0, w0, #0xff
   1b988:	cmp	w0, #0x0
   1b98c:	b.eq	1b9dc <GOMP_taskwait_depend@@GOMP_5.0+0x364>  // b.none
   1b990:	ldr	x0, [sp, #112]
   1b994:	mov	w1, #0x1                   	// #1
   1b998:	strb	w1, [x0, #207]
   1b99c:	ldr	x0, [sp, #216]
   1b9a0:	add	x0, x0, #0x1
   1b9a4:	str	x0, [sp, #216]
   1b9a8:	ldr	x0, [sp, #112]
   1b9ac:	ldr	x0, [x0, #80]
   1b9b0:	cmp	x0, #0x0
   1b9b4:	b.ne	1b9dc <GOMP_taskwait_depend@@GOMP_5.0+0x364>  // b.any
   1b9b8:	ldr	x0, [sp, #112]
   1b9bc:	ldr	w0, [x0, #200]
   1b9c0:	cmp	w0, #0x2
   1b9c4:	b.ne	1b9dc <GOMP_taskwait_depend@@GOMP_5.0+0x364>  // b.any
   1b9c8:	ldr	x1, [sp, #176]
   1b9cc:	ldr	x0, [sp, #112]
   1b9d0:	bl	1a3c8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb3c>
   1b9d4:	b	1b9dc <GOMP_taskwait_depend@@GOMP_5.0+0x364>
   1b9d8:	nop
   1b9dc:	ldr	x0, [sp, #264]
   1b9e0:	ldr	x0, [x0, #8]
   1b9e4:	str	x0, [sp, #264]
   1b9e8:	ldr	x0, [sp, #264]
   1b9ec:	cmp	x0, #0x0
   1b9f0:	b.ne	1b950 <GOMP_taskwait_depend@@GOMP_5.0+0x2d8>  // b.any
   1b9f4:	ldr	x0, [sp, #224]
   1b9f8:	add	x0, x0, #0x1
   1b9fc:	str	x0, [sp, #224]
   1ba00:	ldr	x1, [sp, #224]
   1ba04:	ldr	x0, [sp, #248]
   1ba08:	cmp	x1, x0
   1ba0c:	b.cc	1b87c <GOMP_taskwait_depend@@GOMP_5.0+0x204>  // b.lo, b.ul, b.last
   1ba10:	ldr	x0, [sp, #216]
   1ba14:	cmp	x0, #0x0
   1ba18:	b.ne	1ba2c <GOMP_taskwait_depend@@GOMP_5.0+0x3b4>  // b.any
   1ba1c:	ldr	x0, [sp, #168]
   1ba20:	add	x0, x0, #0x500
   1ba24:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1ba28:	b	1bd6c <GOMP_taskwait_depend@@GOMP_5.0+0x6f4>
   1ba2c:	add	x0, sp, #0x30
   1ba30:	mov	x2, #0x18                  	// #24
   1ba34:	mov	w1, #0x0                   	// #0
   1ba38:	bl	88d0 <memset@plt>
   1ba3c:	ldr	x0, [sp, #216]
   1ba40:	str	x0, [sp, #56]
   1ba44:	add	x0, sp, #0x30
   1ba48:	add	x0, x0, #0x10
   1ba4c:	mov	w1, #0x0                   	// #0
   1ba50:	bl	15424 <GOMP_single_copy_end@@GOMP_1.0+0x714>
   1ba54:	ldr	x0, [sp, #176]
   1ba58:	add	x1, sp, #0x30
   1ba5c:	str	x1, [x0, #64]
   1ba60:	strb	wzr, [sp, #159]
   1ba64:	ldr	x0, [sp, #56]
   1ba68:	cmp	x0, #0x0
   1ba6c:	b.ne	1bab0 <GOMP_taskwait_depend@@GOMP_5.0+0x438>  // b.any
   1ba70:	ldr	x0, [sp, #176]
   1ba74:	str	xzr, [x0, #64]
   1ba78:	ldr	x0, [sp, #168]
   1ba7c:	add	x0, x0, #0x500
   1ba80:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1ba84:	ldr	x0, [sp, #200]
   1ba88:	cmp	x0, #0x0
   1ba8c:	b.eq	1baa0 <GOMP_taskwait_depend@@GOMP_5.0+0x428>  // b.none
   1ba90:	ldr	x0, [sp, #200]
   1ba94:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1ba98:	ldr	x0, [sp, #200]
   1ba9c:	bl	8a20 <free@plt>
   1baa0:	add	x0, sp, #0x30
   1baa4:	add	x0, x0, #0x10
   1baa8:	bl	15448 <GOMP_single_copy_end@@GOMP_1.0+0x738>
   1baac:	b	1bd6c <GOMP_taskwait_depend@@GOMP_5.0+0x6f4>
   1bab0:	ldr	x0, [sp, #176]
   1bab4:	add	x0, x0, #0x8
   1bab8:	add	x1, sp, #0x2f
   1babc:	mov	x4, x1
   1bac0:	mov	x3, #0x0                   	// #0
   1bac4:	mov	w2, #0x3e7                 	// #999
   1bac8:	mov	x1, x0
   1bacc:	mov	w0, #0x1                   	// #1
   1bad0:	bl	15214 <GOMP_single_copy_end@@GOMP_1.0+0x504>
   1bad4:	str	x0, [sp, #144]
   1bad8:	ldr	x0, [sp, #144]
   1badc:	ldr	w0, [x0, #200]
   1bae0:	cmp	w0, #0x2
   1bae4:	b.ne	1bb34 <GOMP_taskwait_depend@@GOMP_5.0+0x4bc>  // b.any
   1bae8:	ldr	x0, [sp, #144]
   1baec:	str	x0, [sp, #208]
   1baf0:	ldr	x2, [sp, #168]
   1baf4:	ldr	x1, [sp, #176]
   1baf8:	ldr	x0, [sp, #208]
   1bafc:	bl	1a658 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdcc>
   1bb00:	strb	w0, [sp, #159]
   1bb04:	ldrb	w0, [sp, #159]
   1bb08:	cmp	x0, #0x0
   1bb0c:	b.eq	1bb3c <GOMP_taskwait_depend@@GOMP_5.0+0x4c4>  // b.none
   1bb10:	ldr	x0, [sp, #200]
   1bb14:	cmp	x0, #0x0
   1bb18:	b.eq	1bc88 <GOMP_taskwait_depend@@GOMP_5.0+0x610>  // b.none
   1bb1c:	ldr	x0, [sp, #200]
   1bb20:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1bb24:	ldr	x0, [sp, #200]
   1bb28:	bl	8a20 <free@plt>
   1bb2c:	str	xzr, [sp, #200]
   1bb30:	b	1bc88 <GOMP_taskwait_depend@@GOMP_5.0+0x610>
   1bb34:	mov	w0, #0x1                   	// #1
   1bb38:	strb	w0, [sp, #49]
   1bb3c:	ldr	x0, [sp, #168]
   1bb40:	add	x0, x0, #0x500
   1bb44:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1bb48:	ldr	w0, [sp, #196]
   1bb4c:	cmp	w0, #0x0
   1bb50:	b.eq	1bb68 <GOMP_taskwait_depend@@GOMP_5.0+0x4f0>  // b.none
   1bb54:	ldr	x0, [sp, #168]
   1bb58:	add	x0, x0, #0x80
   1bb5c:	ldr	w1, [sp, #196]
   1bb60:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   1bb64:	str	wzr, [sp, #196]
   1bb68:	ldr	x0, [sp, #200]
   1bb6c:	cmp	x0, #0x0
   1bb70:	b.eq	1bb88 <GOMP_taskwait_depend@@GOMP_5.0+0x510>  // b.none
   1bb74:	ldr	x0, [sp, #200]
   1bb78:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1bb7c:	ldr	x0, [sp, #200]
   1bb80:	bl	8a20 <free@plt>
   1bb84:	str	xzr, [sp, #200]
   1bb88:	ldr	x0, [sp, #208]
   1bb8c:	cmp	x0, #0x0
   1bb90:	b.eq	1bc60 <GOMP_taskwait_depend@@GOMP_5.0+0x5e8>  // b.none
   1bb94:	ldr	x0, [sp, #184]
   1bb98:	ldr	x1, [sp, #208]
   1bb9c:	str	x1, [x0, #80]
   1bba0:	ldr	x0, [sp, #208]
   1bba4:	ldr	x0, [x0, #184]
   1bba8:	cmp	x0, #0x0
   1bbac:	cset	w0, eq  // eq = none
   1bbb0:	and	w0, w0, #0xff
   1bbb4:	and	x0, x0, #0xff
   1bbb8:	cmp	x0, #0x0
   1bbbc:	b.eq	1bc3c <GOMP_taskwait_depend@@GOMP_5.0+0x5c4>  // b.none
   1bbc0:	ldr	x0, [sp, #208]
   1bbc4:	ldr	x0, [x0, #192]
   1bbc8:	bl	2a814 <GOMP_target_enter_exit_data@@GOMP_4.5+0x438>
   1bbcc:	and	w0, w0, #0xff
   1bbd0:	cmp	w0, #0x0
   1bbd4:	b.eq	1bc50 <GOMP_taskwait_depend@@GOMP_5.0+0x5d8>  // b.none
   1bbd8:	ldr	x0, [sp, #184]
   1bbdc:	ldr	x1, [sp, #176]
   1bbe0:	str	x1, [x0, #80]
   1bbe4:	ldr	x0, [sp, #168]
   1bbe8:	add	x0, x0, #0x500
   1bbec:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1bbf0:	ldr	x0, [sp, #208]
   1bbf4:	mov	w1, #0x4                   	// #4
   1bbf8:	str	w1, [x0, #200]
   1bbfc:	ldr	x0, [sp, #208]
   1bc00:	ldr	x0, [x0, #192]
   1bc04:	str	x0, [sp, #136]
   1bc08:	ldr	x0, [sp, #136]
   1bc0c:	ldr	w0, [x0, #44]
   1bc10:	cmp	w0, #0x5
   1bc14:	b.ne	1bc28 <GOMP_taskwait_depend@@GOMP_5.0+0x5b0>  // b.any
   1bc18:	ldr	x1, [sp, #208]
   1bc1c:	ldr	x0, [sp, #168]
   1bc20:	bl	196d8 <GOMP_taskloop_ull@@GOMP_4.5+0x115c>
   1bc24:	b	1bc34 <GOMP_taskwait_depend@@GOMP_5.0+0x5bc>
   1bc28:	ldr	x0, [sp, #136]
   1bc2c:	mov	w1, #0x4                   	// #4
   1bc30:	str	w1, [x0, #44]
   1bc34:	str	xzr, [sp, #208]
   1bc38:	b	1ba60 <GOMP_taskwait_depend@@GOMP_5.0+0x3e8>
   1bc3c:	ldr	x0, [sp, #208]
   1bc40:	ldr	x1, [x0, #184]
   1bc44:	ldr	x0, [sp, #208]
   1bc48:	ldr	x0, [x0, #192]
   1bc4c:	blr	x1
   1bc50:	ldr	x0, [sp, #184]
   1bc54:	ldr	x1, [sp, #176]
   1bc58:	str	x1, [x0, #80]
   1bc5c:	b	1bc6c <GOMP_taskwait_depend@@GOMP_5.0+0x5f4>
   1bc60:	add	x0, sp, #0x30
   1bc64:	add	x0, x0, #0x10
   1bc68:	bl	1545c <GOMP_single_copy_end@@GOMP_1.0+0x74c>
   1bc6c:	ldr	x0, [sp, #168]
   1bc70:	add	x0, x0, #0x500
   1bc74:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1bc78:	ldr	x0, [sp, #208]
   1bc7c:	cmp	x0, #0x0
   1bc80:	b.eq	1ba60 <GOMP_taskwait_depend@@GOMP_5.0+0x3e8>  // b.none
   1bc84:	b	1bc8c <GOMP_taskwait_depend@@GOMP_5.0+0x614>
   1bc88:	nop
   1bc8c:	ldr	x1, [sp, #168]
   1bc90:	ldr	x0, [sp, #208]
   1bc94:	bl	1ac70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x13e4>
   1bc98:	str	x0, [sp, #128]
   1bc9c:	ldr	x0, [sp, #208]
   1bca0:	ldrb	w0, [x0, #207]
   1bca4:	cmp	w0, #0x0
   1bca8:	b.eq	1bcb8 <GOMP_taskwait_depend@@GOMP_5.0+0x640>  // b.none
   1bcac:	ldr	x0, [sp, #56]
   1bcb0:	sub	x0, x0, #0x1
   1bcb4:	str	x0, [sp, #56]
   1bcb8:	ldr	x0, [sp, #176]
   1bcbc:	add	x0, x0, #0x8
   1bcc0:	mov	w3, #0x0                   	// #0
   1bcc4:	ldr	x2, [sp, #208]
   1bcc8:	mov	x1, x0
   1bccc:	mov	w0, #0x1                   	// #1
   1bcd0:	bl	15370 <GOMP_single_copy_end@@GOMP_1.0+0x660>
   1bcd4:	ldr	x0, [sp, #208]
   1bcd8:	str	xzr, [x0, #112]
   1bcdc:	ldr	x0, [sp, #208]
   1bce0:	str	xzr, [x0, #120]
   1bce4:	ldr	x0, [sp, #208]
   1bce8:	add	x0, x0, #0x8
   1bcec:	bl	1643c <GOMP_single_copy_end@@GOMP_1.0+0x172c>
   1bcf0:	ldr	x0, [sp, #208]
   1bcf4:	bl	1adec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1560>
   1bcf8:	ldr	x0, [sp, #208]
   1bcfc:	str	x0, [sp, #200]
   1bd00:	str	xzr, [sp, #208]
   1bd04:	ldr	x0, [sp, #168]
   1bd08:	ldr	w0, [x0, #1320]
   1bd0c:	sub	w1, w0, #0x1
   1bd10:	ldr	x0, [sp, #168]
   1bd14:	str	w1, [x0, #1320]
   1bd18:	ldr	x0, [sp, #128]
   1bd1c:	cmp	x0, #0x1
   1bd20:	b.ls	1ba60 <GOMP_taskwait_depend@@GOMP_5.0+0x3e8>  // b.plast
   1bd24:	ldr	x0, [sp, #168]
   1bd28:	ldr	w1, [x0]
   1bd2c:	ldr	x0, [sp, #168]
   1bd30:	ldr	w0, [x0, #1328]
   1bd34:	sub	w0, w1, w0
   1bd38:	ldr	x1, [sp, #176]
   1bd3c:	ldrb	w1, [x1, #204]
   1bd40:	eor	w1, w1, #0x1
   1bd44:	and	w1, w1, #0xff
   1bd48:	sub	w0, w0, w1
   1bd4c:	str	w0, [sp, #196]
   1bd50:	ldrsw	x0, [sp, #196]
   1bd54:	ldr	x1, [sp, #128]
   1bd58:	cmp	x1, x0
   1bd5c:	b.cs	1ba60 <GOMP_taskwait_depend@@GOMP_5.0+0x3e8>  // b.hs, b.nlast
   1bd60:	ldr	x0, [sp, #128]
   1bd64:	str	w0, [sp, #196]
   1bd68:	b	1ba60 <GOMP_taskwait_depend@@GOMP_5.0+0x3e8>
   1bd6c:	ldp	x29, x30, [sp], #272
   1bd70:	ret

000000000001bd74 <GOMP_taskyield@@GOMP_3.0>:
   1bd74:	nop
   1bd78:	ret
   1bd7c:	stp	x29, x30, [sp, #-48]!
   1bd80:	mov	x29, sp
   1bd84:	str	x0, [sp, #24]
   1bd88:	mov	x0, #0x40                  	// #64
   1bd8c:	bl	8dd0 <fprintf@plt+0x1a0>
   1bd90:	str	x0, [sp, #40]
   1bd94:	ldr	x0, [sp, #40]
   1bd98:	ldr	x1, [sp, #24]
   1bd9c:	str	x1, [x0]
   1bda0:	ldr	x0, [sp, #40]
   1bda4:	add	x0, x0, #0x8
   1bda8:	bl	14d9c <GOMP_single_copy_end@@GOMP_1.0+0x8c>
   1bdac:	ldr	x0, [sp, #24]
   1bdb0:	cmp	x0, #0x0
   1bdb4:	b.eq	1bdc4 <GOMP_taskyield@@GOMP_3.0+0x50>  // b.none
   1bdb8:	ldr	x0, [sp, #24]
   1bdbc:	ldr	x0, [x0, #40]
   1bdc0:	b	1bdc8 <GOMP_taskyield@@GOMP_3.0+0x54>
   1bdc4:	mov	x0, #0x0                   	// #0
   1bdc8:	ldr	x1, [sp, #40]
   1bdcc:	str	x0, [x1, #40]
   1bdd0:	ldr	x0, [sp, #40]
   1bdd4:	strb	wzr, [x0, #48]
   1bdd8:	ldr	x0, [sp, #40]
   1bddc:	strb	wzr, [x0, #49]
   1bde0:	ldr	x0, [sp, #40]
   1bde4:	strb	wzr, [x0, #50]
   1bde8:	ldr	x0, [sp, #40]
   1bdec:	str	xzr, [x0, #56]
   1bdf0:	ldr	x0, [sp, #40]
   1bdf4:	add	x0, x0, #0x34
   1bdf8:	mov	w1, #0x0                   	// #0
   1bdfc:	bl	15424 <GOMP_single_copy_end@@GOMP_1.0+0x714>
   1be00:	ldr	x0, [sp, #40]
   1be04:	ldp	x29, x30, [sp], #48
   1be08:	ret

000000000001be0c <GOMP_taskgroup_start@@GOMP_4.0>:
   1be0c:	stp	x29, x30, [sp, #-48]!
   1be10:	mov	x29, sp
   1be14:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1be18:	str	x0, [sp, #40]
   1be1c:	ldr	x0, [sp, #40]
   1be20:	ldr	x0, [x0, #16]
   1be24:	str	x0, [sp, #32]
   1be28:	ldr	x0, [sp, #40]
   1be2c:	ldr	x0, [x0, #80]
   1be30:	str	x0, [sp, #24]
   1be34:	ldr	x0, [sp, #32]
   1be38:	cmp	x0, #0x0
   1be3c:	b.eq	1be5c <GOMP_taskgroup_start@@GOMP_4.0+0x50>  // b.none
   1be40:	ldr	x0, [sp, #24]
   1be44:	ldr	x0, [x0, #40]
   1be48:	bl	1bd7c <GOMP_taskyield@@GOMP_3.0+0x8>
   1be4c:	mov	x1, x0
   1be50:	ldr	x0, [sp, #24]
   1be54:	str	x1, [x0, #40]
   1be58:	b	1be60 <GOMP_taskgroup_start@@GOMP_4.0+0x54>
   1be5c:	nop
   1be60:	ldp	x29, x30, [sp], #48
   1be64:	ret

000000000001be68 <GOMP_taskgroup_end@@GOMP_4.0>:
   1be68:	stp	x29, x30, [sp, #-112]!
   1be6c:	mov	x29, sp
   1be70:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1be74:	str	x0, [sp, #80]
   1be78:	ldr	x0, [sp, #80]
   1be7c:	ldr	x0, [x0, #16]
   1be80:	str	x0, [sp, #72]
   1be84:	ldr	x0, [sp, #80]
   1be88:	ldr	x0, [x0, #80]
   1be8c:	str	x0, [sp, #64]
   1be90:	str	xzr, [sp, #104]
   1be94:	str	xzr, [sp, #96]
   1be98:	str	wzr, [sp, #92]
   1be9c:	ldr	x0, [sp, #72]
   1bea0:	cmp	x0, #0x0
   1bea4:	b.eq	1c27c <GOMP_taskgroup_end@@GOMP_4.0+0x414>  // b.none
   1bea8:	ldr	x0, [sp, #64]
   1beac:	ldr	x0, [x0, #40]
   1beb0:	str	x0, [sp, #56]
   1beb4:	ldr	x0, [sp, #56]
   1beb8:	cmp	x0, #0x0
   1bebc:	cset	w0, eq  // eq = none
   1bec0:	and	w0, w0, #0xff
   1bec4:	and	x0, x0, #0xff
   1bec8:	cmp	x0, #0x0
   1becc:	b.eq	1bef0 <GOMP_taskgroup_end@@GOMP_4.0+0x88>  // b.none
   1bed0:	ldr	x0, [sp, #80]
   1bed4:	ldr	w0, [x0, #44]
   1bed8:	cmp	w0, #0x0
   1bedc:	b.ne	1bef0 <GOMP_taskgroup_end@@GOMP_4.0+0x88>  // b.any
   1bee0:	ldr	x0, [sp, #72]
   1bee4:	add	x0, x0, #0x80
   1bee8:	bl	221e8 <omp_get_num_procs@@OMP_1.0+0xb8c>
   1beec:	b	1c280 <GOMP_taskgroup_end@@GOMP_4.0+0x418>
   1bef0:	ldr	x0, [sp, #56]
   1bef4:	add	x0, x0, #0x38
   1bef8:	ldar	x0, [x0]
   1befc:	cmp	x0, #0x0
   1bf00:	b.eq	1c248 <GOMP_taskgroup_end@@GOMP_4.0+0x3e0>  // b.none
   1bf04:	ldr	x0, [sp, #72]
   1bf08:	add	x0, x0, #0x500
   1bf0c:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1bf10:	strb	wzr, [sp, #55]
   1bf14:	ldr	x0, [sp, #56]
   1bf18:	add	x0, x0, #0x8
   1bf1c:	mov	w1, #0x0                   	// #0
   1bf20:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   1bf24:	and	w0, w0, #0xff
   1bf28:	cmp	w0, #0x0
   1bf2c:	b.eq	1bfb8 <GOMP_taskgroup_end@@GOMP_4.0+0x150>  // b.none
   1bf30:	ldr	x0, [sp, #56]
   1bf34:	ldr	x0, [x0, #56]
   1bf38:	cmp	x0, #0x0
   1bf3c:	b.eq	1bf8c <GOMP_taskgroup_end@@GOMP_4.0+0x124>  // b.none
   1bf40:	ldr	x0, [sp, #64]
   1bf44:	add	x0, x0, #0x8
   1bf48:	mov	w1, #0x0                   	// #0
   1bf4c:	bl	14dc8 <GOMP_single_copy_end@@GOMP_1.0+0xb8>
   1bf50:	and	w0, w0, #0xff
   1bf54:	cmp	w0, #0x0
   1bf58:	b.ne	1c048 <GOMP_taskgroup_end@@GOMP_4.0+0x1e0>  // b.any
   1bf5c:	ldr	x0, [sp, #64]
   1bf60:	add	x1, x0, #0x8
   1bf64:	ldr	x0, [sp, #72]
   1bf68:	add	x0, x0, #0x508
   1bf6c:	add	x2, sp, #0x1f
   1bf70:	mov	x4, x2
   1bf74:	mov	x3, x0
   1bf78:	mov	w2, #0x0                   	// #0
   1bf7c:	mov	w0, #0x1                   	// #1
   1bf80:	bl	15214 <GOMP_single_copy_end@@GOMP_1.0+0x504>
   1bf84:	str	x0, [sp, #104]
   1bf88:	b	1bfe4 <GOMP_taskgroup_end@@GOMP_4.0+0x17c>
   1bf8c:	ldr	x0, [sp, #72]
   1bf90:	add	x0, x0, #0x500
   1bf94:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1bf98:	ldr	x0, [sp, #96]
   1bf9c:	cmp	x0, #0x0
   1bfa0:	b.eq	1c250 <GOMP_taskgroup_end@@GOMP_4.0+0x3e8>  // b.none
   1bfa4:	ldr	x0, [sp, #96]
   1bfa8:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1bfac:	ldr	x0, [sp, #96]
   1bfb0:	bl	8a20 <free@plt>
   1bfb4:	b	1c250 <GOMP_taskgroup_end@@GOMP_4.0+0x3e8>
   1bfb8:	ldr	x0, [sp, #56]
   1bfbc:	add	x1, x0, #0x8
   1bfc0:	ldr	x0, [sp, #72]
   1bfc4:	add	x0, x0, #0x508
   1bfc8:	add	x2, sp, #0x1f
   1bfcc:	mov	x4, x2
   1bfd0:	mov	x3, x0
   1bfd4:	mov	w2, #0x0                   	// #0
   1bfd8:	mov	w0, #0x2                   	// #2
   1bfdc:	bl	15214 <GOMP_single_copy_end@@GOMP_1.0+0x504>
   1bfe0:	str	x0, [sp, #104]
   1bfe4:	ldr	x0, [sp, #104]
   1bfe8:	ldr	w0, [x0, #200]
   1bfec:	cmp	w0, #0x2
   1bff0:	b.ne	1c040 <GOMP_taskgroup_end@@GOMP_4.0+0x1d8>  // b.any
   1bff4:	ldr	x0, [sp, #104]
   1bff8:	ldr	x0, [x0]
   1bffc:	ldr	x2, [sp, #72]
   1c000:	mov	x1, x0
   1c004:	ldr	x0, [sp, #104]
   1c008:	bl	1a658 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdcc>
   1c00c:	strb	w0, [sp, #55]
   1c010:	ldrb	w0, [sp, #55]
   1c014:	cmp	x0, #0x0
   1c018:	b.eq	1c058 <GOMP_taskgroup_end@@GOMP_4.0+0x1f0>  // b.none
   1c01c:	ldr	x0, [sp, #96]
   1c020:	cmp	x0, #0x0
   1c024:	b.eq	1c1a4 <GOMP_taskgroup_end@@GOMP_4.0+0x33c>  // b.none
   1c028:	ldr	x0, [sp, #96]
   1c02c:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1c030:	ldr	x0, [sp, #96]
   1c034:	bl	8a20 <free@plt>
   1c038:	str	xzr, [sp, #96]
   1c03c:	b	1c1a4 <GOMP_taskgroup_end@@GOMP_4.0+0x33c>
   1c040:	str	xzr, [sp, #104]
   1c044:	b	1c04c <GOMP_taskgroup_end@@GOMP_4.0+0x1e4>
   1c048:	nop
   1c04c:	ldr	x0, [sp, #56]
   1c050:	mov	w1, #0x1                   	// #1
   1c054:	strb	w1, [x0, #48]
   1c058:	ldr	x0, [sp, #72]
   1c05c:	add	x0, x0, #0x500
   1c060:	bl	155fc <GOMP_single_copy_end@@GOMP_1.0+0x8ec>
   1c064:	ldr	w0, [sp, #92]
   1c068:	cmp	w0, #0x0
   1c06c:	b.eq	1c084 <GOMP_taskgroup_end@@GOMP_4.0+0x21c>  // b.none
   1c070:	ldr	x0, [sp, #72]
   1c074:	add	x0, x0, #0x80
   1c078:	ldr	w1, [sp, #92]
   1c07c:	bl	22060 <omp_get_num_procs@@OMP_1.0+0xa04>
   1c080:	str	wzr, [sp, #92]
   1c084:	ldr	x0, [sp, #96]
   1c088:	cmp	x0, #0x0
   1c08c:	b.eq	1c0a4 <GOMP_taskgroup_end@@GOMP_4.0+0x23c>  // b.none
   1c090:	ldr	x0, [sp, #96]
   1c094:	bl	157d8 <GOMP_single_copy_end@@GOMP_1.0+0xac8>
   1c098:	ldr	x0, [sp, #96]
   1c09c:	bl	8a20 <free@plt>
   1c0a0:	str	xzr, [sp, #96]
   1c0a4:	ldr	x0, [sp, #104]
   1c0a8:	cmp	x0, #0x0
   1c0ac:	b.eq	1c17c <GOMP_taskgroup_end@@GOMP_4.0+0x314>  // b.none
   1c0b0:	ldr	x0, [sp, #80]
   1c0b4:	ldr	x1, [sp, #104]
   1c0b8:	str	x1, [x0, #80]
   1c0bc:	ldr	x0, [sp, #104]
   1c0c0:	ldr	x0, [x0, #184]
   1c0c4:	cmp	x0, #0x0
   1c0c8:	cset	w0, eq  // eq = none
   1c0cc:	and	w0, w0, #0xff
   1c0d0:	and	x0, x0, #0xff
   1c0d4:	cmp	x0, #0x0
   1c0d8:	b.eq	1c158 <GOMP_taskgroup_end@@GOMP_4.0+0x2f0>  // b.none
   1c0dc:	ldr	x0, [sp, #104]
   1c0e0:	ldr	x0, [x0, #192]
   1c0e4:	bl	2a814 <GOMP_target_enter_exit_data@@GOMP_4.5+0x438>
   1c0e8:	and	w0, w0, #0xff
   1c0ec:	cmp	w0, #0x0
   1c0f0:	b.eq	1c16c <GOMP_taskgroup_end@@GOMP_4.0+0x304>  // b.none
   1c0f4:	ldr	x0, [sp, #80]
   1c0f8:	ldr	x1, [sp, #64]
   1c0fc:	str	x1, [x0, #80]
   1c100:	ldr	x0, [sp, #72]
   1c104:	add	x0, x0, #0x500
   1c108:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1c10c:	ldr	x0, [sp, #104]
   1c110:	mov	w1, #0x4                   	// #4
   1c114:	str	w1, [x0, #200]
   1c118:	ldr	x0, [sp, #104]
   1c11c:	ldr	x0, [x0, #192]
   1c120:	str	x0, [sp, #40]
   1c124:	ldr	x0, [sp, #40]
   1c128:	ldr	w0, [x0, #44]
   1c12c:	cmp	w0, #0x5
   1c130:	b.ne	1c144 <GOMP_taskgroup_end@@GOMP_4.0+0x2dc>  // b.any
   1c134:	ldr	x1, [sp, #104]
   1c138:	ldr	x0, [sp, #72]
   1c13c:	bl	196d8 <GOMP_taskloop_ull@@GOMP_4.5+0x115c>
   1c140:	b	1c150 <GOMP_taskgroup_end@@GOMP_4.0+0x2e8>
   1c144:	ldr	x0, [sp, #40]
   1c148:	mov	w1, #0x4                   	// #4
   1c14c:	str	w1, [x0, #44]
   1c150:	str	xzr, [sp, #104]
   1c154:	b	1c244 <GOMP_taskgroup_end@@GOMP_4.0+0x3dc>
   1c158:	ldr	x0, [sp, #104]
   1c15c:	ldr	x1, [x0, #184]
   1c160:	ldr	x0, [sp, #104]
   1c164:	ldr	x0, [x0, #192]
   1c168:	blr	x1
   1c16c:	ldr	x0, [sp, #80]
   1c170:	ldr	x1, [sp, #64]
   1c174:	str	x1, [x0, #80]
   1c178:	b	1c188 <GOMP_taskgroup_end@@GOMP_4.0+0x320>
   1c17c:	ldr	x0, [sp, #56]
   1c180:	add	x0, x0, #0x34
   1c184:	bl	1545c <GOMP_single_copy_end@@GOMP_1.0+0x74c>
   1c188:	ldr	x0, [sp, #72]
   1c18c:	add	x0, x0, #0x500
   1c190:	bl	15588 <GOMP_single_copy_end@@GOMP_1.0+0x878>
   1c194:	ldr	x0, [sp, #104]
   1c198:	cmp	x0, #0x0
   1c19c:	b.eq	1bf10 <GOMP_taskgroup_end@@GOMP_4.0+0xa8>  // b.none
   1c1a0:	b	1c1a8 <GOMP_taskgroup_end@@GOMP_4.0+0x340>
   1c1a4:	nop
   1c1a8:	ldr	x1, [sp, #72]
   1c1ac:	ldr	x0, [sp, #104]
   1c1b0:	bl	1ac70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x13e4>
   1c1b4:	str	x0, [sp, #32]
   1c1b8:	ldr	x0, [sp, #104]
   1c1bc:	bl	1acdc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1450>
   1c1c0:	ldr	x0, [sp, #104]
   1c1c4:	add	x0, x0, #0x8
   1c1c8:	bl	1643c <GOMP_single_copy_end@@GOMP_1.0+0x172c>
   1c1cc:	ldr	x0, [sp, #104]
   1c1d0:	bl	1adec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1560>
   1c1d4:	ldr	x0, [sp, #104]
   1c1d8:	str	x0, [sp, #96]
   1c1dc:	str	xzr, [sp, #104]
   1c1e0:	ldr	x0, [sp, #72]
   1c1e4:	ldr	w0, [x0, #1320]
   1c1e8:	sub	w1, w0, #0x1
   1c1ec:	ldr	x0, [sp, #72]
   1c1f0:	str	w1, [x0, #1320]
   1c1f4:	ldr	x0, [sp, #32]
   1c1f8:	cmp	x0, #0x1
   1c1fc:	b.ls	1bf10 <GOMP_taskgroup_end@@GOMP_4.0+0xa8>  // b.plast
   1c200:	ldr	x0, [sp, #72]
   1c204:	ldr	w1, [x0]
   1c208:	ldr	x0, [sp, #72]
   1c20c:	ldr	w0, [x0, #1328]
   1c210:	sub	w0, w1, w0
   1c214:	ldr	x1, [sp, #64]
   1c218:	ldrb	w1, [x1, #204]
   1c21c:	eor	w1, w1, #0x1
   1c220:	and	w1, w1, #0xff
   1c224:	sub	w0, w0, w1
   1c228:	str	w0, [sp, #92]
   1c22c:	ldrsw	x0, [sp, #92]
   1c230:	ldr	x1, [sp, #32]
   1c234:	cmp	x1, x0
   1c238:	b.cs	1bf10 <GOMP_taskgroup_end@@GOMP_4.0+0xa8>  // b.hs, b.nlast
   1c23c:	ldr	x0, [sp, #32]
   1c240:	str	w0, [sp, #92]
   1c244:	b	1bf10 <GOMP_taskgroup_end@@GOMP_4.0+0xa8>
   1c248:	nop
   1c24c:	b	1c254 <GOMP_taskgroup_end@@GOMP_4.0+0x3ec>
   1c250:	nop
   1c254:	ldr	x0, [sp, #56]
   1c258:	ldr	x1, [x0]
   1c25c:	ldr	x0, [sp, #64]
   1c260:	str	x1, [x0, #40]
   1c264:	ldr	x0, [sp, #56]
   1c268:	add	x0, x0, #0x34
   1c26c:	bl	15448 <GOMP_single_copy_end@@GOMP_1.0+0x738>
   1c270:	ldr	x0, [sp, #56]
   1c274:	bl	8a20 <free@plt>
   1c278:	b	1c280 <GOMP_taskgroup_end@@GOMP_4.0+0x418>
   1c27c:	nop
   1c280:	ldp	x29, x30, [sp], #112
   1c284:	ret
   1c288:	stp	x29, x30, [sp, #-48]!
   1c28c:	mov	x29, sp
   1c290:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1c294:	str	x0, [sp, #40]
   1c298:	mov	w0, #0x1                   	// #1
   1c29c:	bl	1dafc <omp_in_final@@OMP_3.1+0x730>
   1c2a0:	str	x0, [sp, #32]
   1c2a4:	ldr	x0, [sp, #40]
   1c2a8:	ldr	x0, [x0, #80]
   1c2ac:	str	x0, [sp, #24]
   1c2b0:	ldr	x0, [sp, #24]
   1c2b4:	cmp	x0, #0x0
   1c2b8:	b.eq	1c2c8 <GOMP_taskgroup_end@@GOMP_4.0+0x460>  // b.none
   1c2bc:	ldr	x0, [sp, #24]
   1c2c0:	add	x0, x0, #0x90
   1c2c4:	b	1c2d0 <GOMP_taskgroup_end@@GOMP_4.0+0x468>
   1c2c8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1c2cc:	add	x0, x0, #0x2d8
   1c2d0:	str	x0, [sp, #16]
   1c2d4:	ldr	x0, [sp, #32]
   1c2d8:	add	x2, x0, #0x8
   1c2dc:	ldr	x0, [sp, #40]
   1c2e0:	add	x1, x0, #0x10
   1c2e4:	mov	x0, x2
   1c2e8:	ldp	x2, x3, [x1]
   1c2ec:	stp	x2, x3, [x0]
   1c2f0:	ldp	x2, x3, [x1, #16]
   1c2f4:	stp	x2, x3, [x0, #16]
   1c2f8:	ldp	x2, x3, [x1, #32]
   1c2fc:	stp	x2, x3, [x0, #32]
   1c300:	ldp	x2, x3, [x1, #48]
   1c304:	stp	x2, x3, [x0, #48]
   1c308:	ldr	x0, [sp, #40]
   1c30c:	ldr	x1, [sp, #32]
   1c310:	str	x1, [x0, #16]
   1c314:	ldr	x0, [sp, #40]
   1c318:	str	wzr, [x0, #40]
   1c31c:	ldr	x0, [sp, #32]
   1c320:	add	x1, x0, #0x100
   1c324:	ldr	x0, [sp, #40]
   1c328:	str	x1, [x0, #24]
   1c32c:	ldr	x0, [sp, #40]
   1c330:	str	xzr, [x0, #32]
   1c334:	ldr	x0, [sp, #40]
   1c338:	str	xzr, [x0, #64]
   1c33c:	ldr	x0, [sp, #40]
   1c340:	str	xzr, [x0, #72]
   1c344:	ldr	x0, [sp, #32]
   1c348:	add	x1, x0, #0x540
   1c34c:	ldr	x0, [sp, #40]
   1c350:	str	x1, [x0, #80]
   1c354:	ldr	x0, [sp, #40]
   1c358:	ldr	x0, [x0, #80]
   1c35c:	ldr	x2, [sp, #16]
   1c360:	mov	x1, #0x0                   	// #0
   1c364:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   1c368:	ldr	x0, [sp, #24]
   1c36c:	cmp	x0, #0x0
   1c370:	b.eq	1c3a0 <GOMP_taskgroup_end@@GOMP_4.0+0x538>  // b.none
   1c374:	ldr	x0, [sp, #40]
   1c378:	ldr	x1, [sp, #24]
   1c37c:	str	x1, [x0, #80]
   1c380:	bl	16330 <GOMP_single_copy_end@@GOMP_1.0+0x1620>
   1c384:	ldr	x0, [sp, #24]
   1c388:	bl	8a20 <free@plt>
   1c38c:	ldr	x0, [sp, #32]
   1c390:	add	x1, x0, #0x540
   1c394:	ldr	x0, [sp, #40]
   1c398:	str	x1, [x0, #80]
   1c39c:	b	1c3b4 <GOMP_taskgroup_end@@GOMP_4.0+0x54c>
   1c3a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1c3a4:	add	x0, x0, #0x6d0
   1c3a8:	ldr	w0, [x0]
   1c3ac:	ldr	x1, [sp, #40]
   1c3b0:	bl	8ad0 <pthread_setspecific@plt>
   1c3b4:	nop
   1c3b8:	ldp	x29, x30, [sp], #48
   1c3bc:	ret

000000000001c3c0 <GOMP_taskgroup_reduction_register@@GOMP_5.0>:
   1c3c0:	stp	x29, x30, [sp, #-208]!
   1c3c4:	mov	x29, sp
   1c3c8:	str	x19, [sp, #16]
   1c3cc:	str	x0, [sp, #40]
   1c3d0:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1c3d4:	str	x0, [sp, #192]
   1c3d8:	ldr	x0, [sp, #192]
   1c3dc:	ldr	x0, [x0, #16]
   1c3e0:	str	x0, [sp, #200]
   1c3e4:	ldr	x0, [sp, #200]
   1c3e8:	cmp	x0, #0x0
   1c3ec:	cset	w0, eq  // eq = none
   1c3f0:	and	w0, w0, #0xff
   1c3f4:	and	x0, x0, #0xff
   1c3f8:	cmp	x0, #0x0
   1c3fc:	b.eq	1c414 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x54>  // b.none
   1c400:	bl	1c288 <GOMP_taskgroup_end@@GOMP_4.0+0x420>
   1c404:	bl	1be0c <GOMP_taskgroup_start@@GOMP_4.0>
   1c408:	ldr	x0, [sp, #192]
   1c40c:	ldr	x0, [x0, #16]
   1c410:	str	x0, [sp, #200]
   1c414:	ldr	x0, [sp, #200]
   1c418:	ldr	w0, [x0]
   1c41c:	str	w0, [sp, #188]
   1c420:	ldr	x0, [sp, #192]
   1c424:	ldr	x0, [x0, #80]
   1c428:	str	x0, [sp, #176]
   1c42c:	ldr	x0, [sp, #176]
   1c430:	ldr	x0, [x0, #40]
   1c434:	ldr	x0, [x0, #40]
   1c438:	ldr	x1, [sp, #40]
   1c43c:	str	x1, [sp, #168]
   1c440:	str	x0, [sp, #160]
   1c444:	str	xzr, [sp, #152]
   1c448:	ldr	w0, [sp, #188]
   1c44c:	str	w0, [sp, #148]
   1c450:	str	xzr, [sp, #136]
   1c454:	ldr	x0, [sp, #168]
   1c458:	str	x0, [sp, #128]
   1c45c:	str	xzr, [sp, #120]
   1c460:	ldr	x0, [sp, #152]
   1c464:	cmp	x0, #0x0
   1c468:	cset	w0, ne  // ne = any
   1c46c:	and	w0, w0, #0xff
   1c470:	and	x0, x0, #0xff
   1c474:	cmp	x0, #0x0
   1c478:	b.eq	1c4b8 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xf8>  // b.none
   1c47c:	ldr	x0, [sp, #128]
   1c480:	add	x0, x0, #0x10
   1c484:	ldr	x1, [sp, #152]
   1c488:	ldr	x1, [x1, #16]
   1c48c:	str	x1, [x0]
   1c490:	ldr	x0, [sp, #128]
   1c494:	add	x0, x0, #0x30
   1c498:	ldr	x1, [sp, #152]
   1c49c:	ldr	x1, [x1, #48]
   1c4a0:	str	x1, [x0]
   1c4a4:	ldr	x0, [sp, #152]
   1c4a8:	add	x0, x0, #0x20
   1c4ac:	ldr	x0, [x0]
   1c4b0:	str	x0, [sp, #152]
   1c4b4:	b	1c528 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x168>
   1c4b8:	ldr	x0, [sp, #128]
   1c4bc:	add	x0, x0, #0x8
   1c4c0:	ldr	x1, [x0]
   1c4c4:	ldr	w0, [sp, #148]
   1c4c8:	mul	x0, x1, x0
   1c4cc:	str	x0, [sp, #112]
   1c4d0:	ldr	x0, [sp, #128]
   1c4d4:	add	x0, x0, #0x10
   1c4d8:	ldr	x0, [x0]
   1c4dc:	ldr	x1, [sp, #112]
   1c4e0:	bl	8e9c <fprintf@plt+0x26c>
   1c4e4:	str	x0, [sp, #104]
   1c4e8:	ldr	x2, [sp, #112]
   1c4ec:	mov	w1, #0x0                   	// #0
   1c4f0:	ldr	x0, [sp, #104]
   1c4f4:	bl	88d0 <memset@plt>
   1c4f8:	ldr	x0, [sp, #128]
   1c4fc:	add	x0, x0, #0x10
   1c500:	ldr	x1, [sp, #104]
   1c504:	str	x1, [x0]
   1c508:	ldr	x0, [sp, #128]
   1c50c:	add	x0, x0, #0x10
   1c510:	ldr	x2, [x0]
   1c514:	ldr	x0, [sp, #128]
   1c518:	add	x0, x0, #0x30
   1c51c:	ldr	x1, [sp, #112]
   1c520:	add	x1, x2, x1
   1c524:	str	x1, [x0]
   1c528:	ldr	x0, [sp, #128]
   1c52c:	add	x0, x0, #0x28
   1c530:	str	xzr, [x0]
   1c534:	ldr	x0, [sp, #128]
   1c538:	ldr	x0, [x0]
   1c53c:	ldr	x1, [sp, #136]
   1c540:	add	x0, x1, x0
   1c544:	str	x0, [sp, #136]
   1c548:	ldr	x0, [sp, #128]
   1c54c:	add	x0, x0, #0x20
   1c550:	ldr	x0, [x0]
   1c554:	cmp	x0, #0x0
   1c558:	b.ne	1c580 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x1c0>  // b.any
   1c55c:	ldr	x0, [sp, #128]
   1c560:	add	x0, x0, #0x20
   1c564:	ldr	x1, [sp, #160]
   1c568:	str	x1, [x0]
   1c56c:	nop
   1c570:	ldr	x0, [sp, #160]
   1c574:	cmp	x0, #0x0
   1c578:	b.eq	1c5d0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x210>  // b.none
   1c57c:	b	1c594 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x1d4>
   1c580:	ldr	x0, [sp, #128]
   1c584:	add	x0, x0, #0x20
   1c588:	ldr	x0, [x0]
   1c58c:	str	x0, [sp, #128]
   1c590:	b	1c460 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xa0>
   1c594:	ldr	x0, [sp, #160]
   1c598:	add	x0, x0, #0x28
   1c59c:	ldr	x0, [x0]
   1c5a0:	cmp	x0, #0x0
   1c5a4:	b.eq	1c5d0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x210>  // b.none
   1c5a8:	ldr	x0, [sp, #160]
   1c5ac:	add	x0, x0, #0x28
   1c5b0:	ldr	x0, [x0]
   1c5b4:	str	x0, [sp, #120]
   1c5b8:	ldr	x0, [sp, #120]
   1c5bc:	bl	159a8 <GOMP_single_copy_end@@GOMP_1.0+0xc98>
   1c5c0:	mov	x1, x0
   1c5c4:	ldr	x0, [sp, #136]
   1c5c8:	add	x0, x0, x1
   1c5cc:	str	x0, [sp, #136]
   1c5d0:	ldr	x0, [sp, #136]
   1c5d4:	bl	15b14 <GOMP_single_copy_end@@GOMP_1.0+0xe04>
   1c5d8:	str	x0, [sp, #48]
   1c5dc:	ldr	x0, [sp, #120]
   1c5e0:	cmp	x0, #0x0
   1c5e4:	b.eq	1c684 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x2c4>  // b.none
   1c5e8:	ldr	x19, [sp, #48]
   1c5ec:	ldr	x0, [sp, #120]
   1c5f0:	bl	159a8 <GOMP_single_copy_end@@GOMP_1.0+0xc98>
   1c5f4:	str	x0, [x19, #8]
   1c5f8:	ldr	x0, [sp, #120]
   1c5fc:	add	x1, x0, #0x20
   1c600:	ldr	x0, [sp, #120]
   1c604:	ldr	x0, [x0]
   1c608:	lsl	x0, x0, #3
   1c60c:	add	x0, x1, x0
   1c610:	str	x0, [sp, #96]
   1c614:	ldr	x0, [sp, #120]
   1c618:	add	x0, x0, #0x20
   1c61c:	str	x0, [sp, #88]
   1c620:	ldr	x0, [sp, #88]
   1c624:	ldr	x0, [x0]
   1c628:	str	x0, [sp, #80]
   1c62c:	ldr	x0, [sp, #80]
   1c630:	cmp	x0, #0x0
   1c634:	b.eq	1c668 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x2a8>  // b.none
   1c638:	ldr	x0, [sp, #80]
   1c63c:	cmp	x0, #0x1
   1c640:	b.eq	1c668 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x2a8>  // b.none
   1c644:	ldr	x19, [sp, #48]
   1c648:	ldr	x0, [sp, #80]
   1c64c:	bl	16234 <GOMP_single_copy_end@@GOMP_1.0+0x1524>
   1c650:	mov	w1, w0
   1c654:	mov	x0, x19
   1c658:	bl	15bb4 <GOMP_single_copy_end@@GOMP_1.0+0xea4>
   1c65c:	mov	x1, x0
   1c660:	ldr	x0, [sp, #80]
   1c664:	str	x0, [x1]
   1c668:	ldr	x0, [sp, #88]
   1c66c:	add	x0, x0, #0x8
   1c670:	str	x0, [sp, #88]
   1c674:	ldr	x1, [sp, #96]
   1c678:	ldr	x0, [sp, #88]
   1c67c:	cmp	x1, x0
   1c680:	b.hi	1c620 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x260>  // b.pmore
   1c684:	ldr	x0, [sp, #168]
   1c688:	str	x0, [sp, #128]
   1c68c:	str	xzr, [sp, #72]
   1c690:	b	1c6f8 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x338>
   1c694:	ldr	x1, [sp, #72]
   1c698:	mov	x0, x1
   1c69c:	lsl	x0, x0, #1
   1c6a0:	add	x0, x0, x1
   1c6a4:	lsl	x0, x0, #3
   1c6a8:	add	x0, x0, #0x38
   1c6ac:	ldr	x1, [sp, #128]
   1c6b0:	add	x0, x1, x0
   1c6b4:	str	x0, [sp, #64]
   1c6b8:	ldr	x0, [sp, #64]
   1c6bc:	add	x0, x0, #0x10
   1c6c0:	ldr	x1, [sp, #128]
   1c6c4:	str	x1, [x0]
   1c6c8:	ldr	x0, [sp, #64]
   1c6cc:	str	x0, [sp, #56]
   1c6d0:	add	x0, sp, #0x30
   1c6d4:	mov	w2, #0x1                   	// #1
   1c6d8:	ldr	x1, [sp, #56]
   1c6dc:	bl	15efc <GOMP_single_copy_end@@GOMP_1.0+0x11ec>
   1c6e0:	mov	x1, x0
   1c6e4:	ldr	x0, [sp, #56]
   1c6e8:	str	x0, [x1]
   1c6ec:	ldr	x0, [sp, #72]
   1c6f0:	add	x0, x0, #0x1
   1c6f4:	str	x0, [sp, #72]
   1c6f8:	ldr	x0, [sp, #128]
   1c6fc:	ldr	x0, [x0]
   1c700:	ldr	x1, [sp, #72]
   1c704:	cmp	x1, x0
   1c708:	b.cc	1c694 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x2d4>  // b.lo, b.ul, b.last
   1c70c:	ldr	x0, [sp, #128]
   1c710:	add	x0, x0, #0x20
   1c714:	ldr	x1, [x0]
   1c718:	ldr	x0, [sp, #160]
   1c71c:	cmp	x1, x0
   1c720:	b.eq	1c738 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x378>  // b.none
   1c724:	ldr	x0, [sp, #128]
   1c728:	add	x0, x0, #0x20
   1c72c:	ldr	x0, [x0]
   1c730:	str	x0, [sp, #128]
   1c734:	b	1c68c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x2cc>
   1c738:	nop
   1c73c:	ldr	x1, [sp, #48]
   1c740:	ldr	x0, [sp, #128]
   1c744:	add	x0, x0, #0x28
   1c748:	str	x1, [x0]
   1c74c:	nop
   1c750:	ldr	x0, [sp, #176]
   1c754:	ldr	x0, [x0, #40]
   1c758:	ldr	x1, [sp, #40]
   1c75c:	str	x1, [x0, #40]
   1c760:	nop
   1c764:	ldr	x19, [sp, #16]
   1c768:	ldp	x29, x30, [sp], #208
   1c76c:	ret

000000000001c770 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0>:
   1c770:	stp	x29, x30, [sp, #-48]!
   1c774:	mov	x29, sp
   1c778:	str	x0, [sp, #24]
   1c77c:	ldr	x0, [sp, #24]
   1c780:	str	x0, [sp, #40]
   1c784:	ldr	x0, [sp, #24]
   1c788:	add	x0, x0, #0x28
   1c78c:	ldr	x0, [x0]
   1c790:	bl	158b0 <GOMP_single_copy_end@@GOMP_1.0+0xba0>
   1c794:	ldr	x0, [sp, #40]
   1c798:	add	x0, x0, #0x10
   1c79c:	ldr	x0, [x0]
   1c7a0:	bl	8ef8 <fprintf@plt+0x2c8>
   1c7a4:	ldr	x0, [sp, #40]
   1c7a8:	add	x0, x0, #0x20
   1c7ac:	ldr	x0, [x0]
   1c7b0:	str	x0, [sp, #40]
   1c7b4:	ldr	x0, [sp, #40]
   1c7b8:	cmp	x0, #0x0
   1c7bc:	b.eq	1c7d4 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x64>  // b.none
   1c7c0:	ldr	x0, [sp, #40]
   1c7c4:	add	x0, x0, #0x28
   1c7c8:	ldr	x0, [x0]
   1c7cc:	cmp	x0, #0x0
   1c7d0:	b.eq	1c794 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x24>  // b.none
   1c7d4:	nop
   1c7d8:	ldp	x29, x30, [sp], #48
   1c7dc:	ret

000000000001c7e0 <GOMP_task_reduction_remap@@GOMP_5.0>:
   1c7e0:	stp	x29, x30, [sp, #-160]!
   1c7e4:	mov	x29, sp
   1c7e8:	str	x0, [sp, #40]
   1c7ec:	str	x1, [sp, #32]
   1c7f0:	str	x2, [sp, #24]
   1c7f4:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1c7f8:	str	x0, [sp, #120]
   1c7fc:	ldr	x0, [sp, #120]
   1c800:	ldr	x0, [x0, #80]
   1c804:	str	x0, [sp, #112]
   1c808:	ldr	x0, [sp, #120]
   1c80c:	ldr	w0, [x0, #40]
   1c810:	str	w0, [sp, #108]
   1c814:	ldr	x0, [sp, #112]
   1c818:	ldr	x0, [x0, #40]
   1c81c:	ldr	x0, [x0, #40]
   1c820:	str	x0, [sp, #96]
   1c824:	ldr	x0, [sp, #96]
   1c828:	add	x0, x0, #0x28
   1c82c:	ldr	x0, [x0]
   1c830:	str	x0, [sp, #88]
   1c834:	str	xzr, [sp, #144]
   1c838:	b	1cbc0 <GOMP_task_reduction_remap@@GOMP_5.0+0x3e0>
   1c83c:	ldr	x0, [sp, #144]
   1c840:	lsl	x0, x0, #3
   1c844:	ldr	x1, [sp, #24]
   1c848:	add	x0, x1, x0
   1c84c:	str	x0, [sp, #80]
   1c850:	ldr	x1, [sp, #80]
   1c854:	ldr	x0, [sp, #88]
   1c858:	bl	15de4 <GOMP_single_copy_end@@GOMP_1.0+0x10d4>
   1c85c:	str	x0, [sp, #72]
   1c860:	ldr	x0, [sp, #72]
   1c864:	cmp	x0, #0x0
   1c868:	b.eq	1c91c <GOMP_task_reduction_remap@@GOMP_5.0+0x13c>  // b.none
   1c86c:	ldr	x0, [sp, #72]
   1c870:	str	x0, [sp, #48]
   1c874:	ldr	x0, [sp, #48]
   1c878:	add	x0, x0, #0x10
   1c87c:	ldr	x0, [x0]
   1c880:	str	x0, [sp, #152]
   1c884:	ldr	x0, [sp, #152]
   1c888:	add	x0, x0, #0x10
   1c88c:	ldr	x1, [x0]
   1c890:	ldr	w2, [sp, #108]
   1c894:	ldr	x0, [sp, #152]
   1c898:	add	x0, x0, #0x8
   1c89c:	ldr	x0, [x0]
   1c8a0:	mul	x0, x2, x0
   1c8a4:	add	x1, x1, x0
   1c8a8:	ldr	x0, [sp, #48]
   1c8ac:	add	x0, x0, #0x8
   1c8b0:	ldr	x0, [x0]
   1c8b4:	add	x2, x1, x0
   1c8b8:	ldr	x0, [sp, #144]
   1c8bc:	lsl	x0, x0, #3
   1c8c0:	ldr	x1, [sp, #24]
   1c8c4:	add	x0, x1, x0
   1c8c8:	mov	x1, x2
   1c8cc:	str	x1, [x0]
   1c8d0:	ldr	x1, [sp, #144]
   1c8d4:	ldr	x0, [sp, #32]
   1c8d8:	cmp	x1, x0
   1c8dc:	cset	w0, cc  // cc = lo, ul, last
   1c8e0:	and	w0, w0, #0xff
   1c8e4:	and	x0, x0, #0xff
   1c8e8:	cmp	x0, #0x0
   1c8ec:	b.eq	1cbb0 <GOMP_task_reduction_remap@@GOMP_5.0+0x3d0>  // b.none
   1c8f0:	ldr	x0, [sp, #48]
   1c8f4:	ldr	x2, [x0]
   1c8f8:	ldr	x1, [sp, #40]
   1c8fc:	ldr	x0, [sp, #144]
   1c900:	add	x0, x1, x0
   1c904:	lsl	x0, x0, #3
   1c908:	ldr	x1, [sp, #24]
   1c90c:	add	x0, x1, x0
   1c910:	mov	x1, x2
   1c914:	str	x1, [x0]
   1c918:	b	1cbb0 <GOMP_task_reduction_remap@@GOMP_5.0+0x3d0>
   1c91c:	ldr	x0, [sp, #96]
   1c920:	str	x0, [sp, #152]
   1c924:	b	1c990 <GOMP_task_reduction_remap@@GOMP_5.0+0x1b0>
   1c928:	ldr	x0, [sp, #144]
   1c92c:	lsl	x0, x0, #3
   1c930:	ldr	x1, [sp, #24]
   1c934:	add	x0, x1, x0
   1c938:	ldr	x0, [x0]
   1c93c:	mov	x1, x0
   1c940:	ldr	x0, [sp, #152]
   1c944:	add	x0, x0, #0x10
   1c948:	ldr	x0, [x0]
   1c94c:	cmp	x1, x0
   1c950:	b.cc	1c980 <GOMP_task_reduction_remap@@GOMP_5.0+0x1a0>  // b.lo, b.ul, b.last
   1c954:	ldr	x0, [sp, #144]
   1c958:	lsl	x0, x0, #3
   1c95c:	ldr	x1, [sp, #24]
   1c960:	add	x0, x1, x0
   1c964:	ldr	x0, [x0]
   1c968:	mov	x1, x0
   1c96c:	ldr	x0, [sp, #152]
   1c970:	add	x0, x0, #0x30
   1c974:	ldr	x0, [x0]
   1c978:	cmp	x1, x0
   1c97c:	b.cc	1c9a0 <GOMP_task_reduction_remap@@GOMP_5.0+0x1c0>  // b.lo, b.ul, b.last
   1c980:	ldr	x0, [sp, #152]
   1c984:	add	x0, x0, #0x20
   1c988:	ldr	x0, [x0]
   1c98c:	str	x0, [sp, #152]
   1c990:	ldr	x0, [sp, #152]
   1c994:	cmp	x0, #0x0
   1c998:	b.ne	1c928 <GOMP_task_reduction_remap@@GOMP_5.0+0x148>  // b.any
   1c99c:	b	1c9a4 <GOMP_task_reduction_remap@@GOMP_5.0+0x1c4>
   1c9a0:	nop
   1c9a4:	ldr	x0, [sp, #152]
   1c9a8:	cmp	x0, #0x0
   1c9ac:	b.ne	1c9d4 <GOMP_task_reduction_remap@@GOMP_5.0+0x1f4>  // b.any
   1c9b0:	ldr	x0, [sp, #144]
   1c9b4:	lsl	x0, x0, #3
   1c9b8:	ldr	x1, [sp, #24]
   1c9bc:	add	x0, x1, x0
   1c9c0:	ldr	x0, [x0]
   1c9c4:	mov	x1, x0
   1c9c8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   1c9cc:	add	x0, x0, #0x4d0
   1c9d0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   1c9d4:	ldr	x0, [sp, #144]
   1c9d8:	lsl	x0, x0, #3
   1c9dc:	ldr	x1, [sp, #24]
   1c9e0:	add	x0, x1, x0
   1c9e4:	ldr	x0, [x0]
   1c9e8:	mov	x1, x0
   1c9ec:	ldr	x0, [sp, #152]
   1c9f0:	add	x0, x0, #0x10
   1c9f4:	ldr	x0, [x0]
   1c9f8:	sub	x0, x1, x0
   1c9fc:	ldr	x1, [sp, #152]
   1ca00:	add	x1, x1, #0x8
   1ca04:	ldr	x1, [x1]
   1ca08:	udiv	x2, x0, x1
   1ca0c:	mul	x1, x2, x1
   1ca10:	sub	x0, x0, x1
   1ca14:	str	x0, [sp, #64]
   1ca18:	ldr	x0, [sp, #152]
   1ca1c:	add	x0, x0, #0x10
   1ca20:	ldr	x1, [x0]
   1ca24:	ldr	w2, [sp, #108]
   1ca28:	ldr	x0, [sp, #152]
   1ca2c:	add	x0, x0, #0x8
   1ca30:	ldr	x0, [x0]
   1ca34:	mul	x0, x2, x0
   1ca38:	add	x1, x1, x0
   1ca3c:	ldr	x0, [sp, #64]
   1ca40:	add	x2, x1, x0
   1ca44:	ldr	x0, [sp, #144]
   1ca48:	lsl	x0, x0, #3
   1ca4c:	ldr	x1, [sp, #24]
   1ca50:	add	x0, x1, x0
   1ca54:	mov	x1, x2
   1ca58:	str	x1, [x0]
   1ca5c:	ldr	x1, [sp, #144]
   1ca60:	ldr	x0, [sp, #32]
   1ca64:	cmp	x1, x0
   1ca68:	cset	w0, cc  // cc = lo, ul, last
   1ca6c:	and	w0, w0, #0xff
   1ca70:	and	x0, x0, #0xff
   1ca74:	cmp	x0, #0x0
   1ca78:	b.eq	1cbb4 <GOMP_task_reduction_remap@@GOMP_5.0+0x3d4>  // b.none
   1ca7c:	str	xzr, [sp, #136]
   1ca80:	ldr	x0, [sp, #152]
   1ca84:	ldr	x0, [x0]
   1ca88:	sub	x0, x0, #0x1
   1ca8c:	str	x0, [sp, #128]
   1ca90:	b	1cb6c <GOMP_task_reduction_remap@@GOMP_5.0+0x38c>
   1ca94:	ldr	x1, [sp, #136]
   1ca98:	ldr	x0, [sp, #128]
   1ca9c:	add	x0, x1, x0
   1caa0:	lsr	x0, x0, #1
   1caa4:	str	x0, [sp, #56]
   1caa8:	ldr	x1, [sp, #56]
   1caac:	mov	x0, x1
   1cab0:	lsl	x0, x0, #1
   1cab4:	add	x0, x0, x1
   1cab8:	lsl	x0, x0, #3
   1cabc:	add	x0, x0, #0x40
   1cac0:	ldr	x1, [sp, #152]
   1cac4:	add	x0, x1, x0
   1cac8:	ldr	x0, [x0]
   1cacc:	ldr	x1, [sp, #64]
   1cad0:	cmp	x1, x0
   1cad4:	b.ls	1cae8 <GOMP_task_reduction_remap@@GOMP_5.0+0x308>  // b.plast
   1cad8:	ldr	x0, [sp, #56]
   1cadc:	add	x0, x0, #0x1
   1cae0:	str	x0, [sp, #136]
   1cae4:	b	1cb6c <GOMP_task_reduction_remap@@GOMP_5.0+0x38c>
   1cae8:	ldr	x1, [sp, #56]
   1caec:	mov	x0, x1
   1caf0:	lsl	x0, x0, #1
   1caf4:	add	x0, x0, x1
   1caf8:	lsl	x0, x0, #3
   1cafc:	add	x0, x0, #0x40
   1cb00:	ldr	x1, [sp, #152]
   1cb04:	add	x0, x1, x0
   1cb08:	ldr	x0, [x0]
   1cb0c:	ldr	x1, [sp, #64]
   1cb10:	cmp	x1, x0
   1cb14:	b.ne	1cb60 <GOMP_task_reduction_remap@@GOMP_5.0+0x380>  // b.any
   1cb18:	ldr	x1, [sp, #56]
   1cb1c:	mov	x0, x1
   1cb20:	lsl	x0, x0, #1
   1cb24:	add	x0, x0, x1
   1cb28:	lsl	x0, x0, #3
   1cb2c:	add	x0, x0, #0x38
   1cb30:	ldr	x1, [sp, #152]
   1cb34:	add	x0, x1, x0
   1cb38:	ldr	x2, [x0]
   1cb3c:	ldr	x1, [sp, #40]
   1cb40:	ldr	x0, [sp, #144]
   1cb44:	add	x0, x1, x0
   1cb48:	lsl	x0, x0, #3
   1cb4c:	ldr	x1, [sp, #24]
   1cb50:	add	x0, x1, x0
   1cb54:	mov	x1, x2
   1cb58:	str	x1, [x0]
   1cb5c:	b	1cb7c <GOMP_task_reduction_remap@@GOMP_5.0+0x39c>
   1cb60:	ldr	x0, [sp, #56]
   1cb64:	sub	x0, x0, #0x1
   1cb68:	str	x0, [sp, #128]
   1cb6c:	ldr	x1, [sp, #136]
   1cb70:	ldr	x0, [sp, #128]
   1cb74:	cmp	x1, x0
   1cb78:	b.ls	1ca94 <GOMP_task_reduction_remap@@GOMP_5.0+0x2b4>  // b.plast
   1cb7c:	ldr	x1, [sp, #136]
   1cb80:	ldr	x0, [sp, #128]
   1cb84:	cmp	x1, x0
   1cb88:	b.ls	1cbb4 <GOMP_task_reduction_remap@@GOMP_5.0+0x3d4>  // b.plast
   1cb8c:	ldr	x0, [sp, #144]
   1cb90:	lsl	x0, x0, #3
   1cb94:	ldr	x1, [sp, #24]
   1cb98:	add	x0, x1, x0
   1cb9c:	ldr	x0, [x0]
   1cba0:	mov	x1, x0
   1cba4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   1cba8:	add	x0, x0, #0x4d0
   1cbac:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   1cbb0:	nop
   1cbb4:	ldr	x0, [sp, #144]
   1cbb8:	add	x0, x0, #0x1
   1cbbc:	str	x0, [sp, #144]
   1cbc0:	ldr	x1, [sp, #144]
   1cbc4:	ldr	x0, [sp, #40]
   1cbc8:	cmp	x1, x0
   1cbcc:	b.cc	1c83c <GOMP_task_reduction_remap@@GOMP_5.0+0x5c>  // b.lo, b.ul, b.last
   1cbd0:	nop
   1cbd4:	nop
   1cbd8:	ldp	x29, x30, [sp], #160
   1cbdc:	ret
   1cbe0:	stp	x29, x30, [sp, #-192]!
   1cbe4:	mov	x29, sp
   1cbe8:	str	x19, [sp, #16]
   1cbec:	str	x0, [sp, #40]
   1cbf0:	str	w1, [sp, #36]
   1cbf4:	mov	x0, #0x0                   	// #0
   1cbf8:	bl	1bd7c <GOMP_taskyield@@GOMP_3.0+0x8>
   1cbfc:	str	x0, [sp, #184]
   1cc00:	ldr	x0, [sp, #40]
   1cc04:	str	x0, [sp, #176]
   1cc08:	str	xzr, [sp, #168]
   1cc0c:	str	xzr, [sp, #160]
   1cc10:	ldr	w0, [sp, #36]
   1cc14:	str	w0, [sp, #156]
   1cc18:	str	xzr, [sp, #144]
   1cc1c:	ldr	x0, [sp, #176]
   1cc20:	str	x0, [sp, #136]
   1cc24:	str	xzr, [sp, #128]
   1cc28:	ldr	x0, [sp, #160]
   1cc2c:	cmp	x0, #0x0
   1cc30:	cset	w0, ne  // ne = any
   1cc34:	and	w0, w0, #0xff
   1cc38:	and	x0, x0, #0xff
   1cc3c:	cmp	x0, #0x0
   1cc40:	b.eq	1cc80 <GOMP_task_reduction_remap@@GOMP_5.0+0x4a0>  // b.none
   1cc44:	ldr	x0, [sp, #136]
   1cc48:	add	x0, x0, #0x10
   1cc4c:	ldr	x1, [sp, #160]
   1cc50:	ldr	x1, [x1, #16]
   1cc54:	str	x1, [x0]
   1cc58:	ldr	x0, [sp, #136]
   1cc5c:	add	x0, x0, #0x30
   1cc60:	ldr	x1, [sp, #160]
   1cc64:	ldr	x1, [x1, #48]
   1cc68:	str	x1, [x0]
   1cc6c:	ldr	x0, [sp, #160]
   1cc70:	add	x0, x0, #0x20
   1cc74:	ldr	x0, [x0]
   1cc78:	str	x0, [sp, #160]
   1cc7c:	b	1ccf0 <GOMP_task_reduction_remap@@GOMP_5.0+0x510>
   1cc80:	ldr	x0, [sp, #136]
   1cc84:	add	x0, x0, #0x8
   1cc88:	ldr	x1, [x0]
   1cc8c:	ldr	w0, [sp, #156]
   1cc90:	mul	x0, x1, x0
   1cc94:	str	x0, [sp, #120]
   1cc98:	ldr	x0, [sp, #136]
   1cc9c:	add	x0, x0, #0x10
   1cca0:	ldr	x0, [x0]
   1cca4:	ldr	x1, [sp, #120]
   1cca8:	bl	8e9c <fprintf@plt+0x26c>
   1ccac:	str	x0, [sp, #112]
   1ccb0:	ldr	x2, [sp, #120]
   1ccb4:	mov	w1, #0x0                   	// #0
   1ccb8:	ldr	x0, [sp, #112]
   1ccbc:	bl	88d0 <memset@plt>
   1ccc0:	ldr	x0, [sp, #136]
   1ccc4:	add	x0, x0, #0x10
   1ccc8:	ldr	x1, [sp, #112]
   1cccc:	str	x1, [x0]
   1ccd0:	ldr	x0, [sp, #136]
   1ccd4:	add	x0, x0, #0x10
   1ccd8:	ldr	x2, [x0]
   1ccdc:	ldr	x0, [sp, #136]
   1cce0:	add	x0, x0, #0x30
   1cce4:	ldr	x1, [sp, #120]
   1cce8:	add	x1, x2, x1
   1ccec:	str	x1, [x0]
   1ccf0:	ldr	x0, [sp, #136]
   1ccf4:	add	x0, x0, #0x28
   1ccf8:	str	xzr, [x0]
   1ccfc:	ldr	x0, [sp, #136]
   1cd00:	ldr	x0, [x0]
   1cd04:	ldr	x1, [sp, #144]
   1cd08:	add	x0, x1, x0
   1cd0c:	str	x0, [sp, #144]
   1cd10:	ldr	x0, [sp, #136]
   1cd14:	add	x0, x0, #0x20
   1cd18:	ldr	x0, [x0]
   1cd1c:	cmp	x0, #0x0
   1cd20:	b.ne	1cd48 <GOMP_task_reduction_remap@@GOMP_5.0+0x568>  // b.any
   1cd24:	ldr	x0, [sp, #136]
   1cd28:	add	x0, x0, #0x20
   1cd2c:	ldr	x1, [sp, #168]
   1cd30:	str	x1, [x0]
   1cd34:	nop
   1cd38:	ldr	x0, [sp, #168]
   1cd3c:	cmp	x0, #0x0
   1cd40:	b.eq	1cd98 <GOMP_task_reduction_remap@@GOMP_5.0+0x5b8>  // b.none
   1cd44:	b	1cd5c <GOMP_task_reduction_remap@@GOMP_5.0+0x57c>
   1cd48:	ldr	x0, [sp, #136]
   1cd4c:	add	x0, x0, #0x20
   1cd50:	ldr	x0, [x0]
   1cd54:	str	x0, [sp, #136]
   1cd58:	b	1cc28 <GOMP_task_reduction_remap@@GOMP_5.0+0x448>
   1cd5c:	ldr	x0, [sp, #168]
   1cd60:	add	x0, x0, #0x28
   1cd64:	ldr	x0, [x0]
   1cd68:	cmp	x0, #0x0
   1cd6c:	b.eq	1cd98 <GOMP_task_reduction_remap@@GOMP_5.0+0x5b8>  // b.none
   1cd70:	ldr	x0, [sp, #168]
   1cd74:	add	x0, x0, #0x28
   1cd78:	ldr	x0, [x0]
   1cd7c:	str	x0, [sp, #128]
   1cd80:	ldr	x0, [sp, #128]
   1cd84:	bl	159a8 <GOMP_single_copy_end@@GOMP_1.0+0xc98>
   1cd88:	mov	x1, x0
   1cd8c:	ldr	x0, [sp, #144]
   1cd90:	add	x0, x0, x1
   1cd94:	str	x0, [sp, #144]
   1cd98:	ldr	x0, [sp, #144]
   1cd9c:	bl	15b14 <GOMP_single_copy_end@@GOMP_1.0+0xe04>
   1cda0:	str	x0, [sp, #56]
   1cda4:	ldr	x0, [sp, #128]
   1cda8:	cmp	x0, #0x0
   1cdac:	b.eq	1ce4c <GOMP_task_reduction_remap@@GOMP_5.0+0x66c>  // b.none
   1cdb0:	ldr	x19, [sp, #56]
   1cdb4:	ldr	x0, [sp, #128]
   1cdb8:	bl	159a8 <GOMP_single_copy_end@@GOMP_1.0+0xc98>
   1cdbc:	str	x0, [x19, #8]
   1cdc0:	ldr	x0, [sp, #128]
   1cdc4:	add	x1, x0, #0x20
   1cdc8:	ldr	x0, [sp, #128]
   1cdcc:	ldr	x0, [x0]
   1cdd0:	lsl	x0, x0, #3
   1cdd4:	add	x0, x1, x0
   1cdd8:	str	x0, [sp, #104]
   1cddc:	ldr	x0, [sp, #128]
   1cde0:	add	x0, x0, #0x20
   1cde4:	str	x0, [sp, #96]
   1cde8:	ldr	x0, [sp, #96]
   1cdec:	ldr	x0, [x0]
   1cdf0:	str	x0, [sp, #88]
   1cdf4:	ldr	x0, [sp, #88]
   1cdf8:	cmp	x0, #0x0
   1cdfc:	b.eq	1ce30 <GOMP_task_reduction_remap@@GOMP_5.0+0x650>  // b.none
   1ce00:	ldr	x0, [sp, #88]
   1ce04:	cmp	x0, #0x1
   1ce08:	b.eq	1ce30 <GOMP_task_reduction_remap@@GOMP_5.0+0x650>  // b.none
   1ce0c:	ldr	x19, [sp, #56]
   1ce10:	ldr	x0, [sp, #88]
   1ce14:	bl	16234 <GOMP_single_copy_end@@GOMP_1.0+0x1524>
   1ce18:	mov	w1, w0
   1ce1c:	mov	x0, x19
   1ce20:	bl	15bb4 <GOMP_single_copy_end@@GOMP_1.0+0xea4>
   1ce24:	mov	x1, x0
   1ce28:	ldr	x0, [sp, #88]
   1ce2c:	str	x0, [x1]
   1ce30:	ldr	x0, [sp, #96]
   1ce34:	add	x0, x0, #0x8
   1ce38:	str	x0, [sp, #96]
   1ce3c:	ldr	x1, [sp, #104]
   1ce40:	ldr	x0, [sp, #96]
   1ce44:	cmp	x1, x0
   1ce48:	b.hi	1cde8 <GOMP_task_reduction_remap@@GOMP_5.0+0x608>  // b.pmore
   1ce4c:	ldr	x0, [sp, #176]
   1ce50:	str	x0, [sp, #136]
   1ce54:	str	xzr, [sp, #80]
   1ce58:	b	1cec0 <GOMP_task_reduction_remap@@GOMP_5.0+0x6e0>
   1ce5c:	ldr	x1, [sp, #80]
   1ce60:	mov	x0, x1
   1ce64:	lsl	x0, x0, #1
   1ce68:	add	x0, x0, x1
   1ce6c:	lsl	x0, x0, #3
   1ce70:	add	x0, x0, #0x38
   1ce74:	ldr	x1, [sp, #136]
   1ce78:	add	x0, x1, x0
   1ce7c:	str	x0, [sp, #72]
   1ce80:	ldr	x0, [sp, #72]
   1ce84:	add	x0, x0, #0x10
   1ce88:	ldr	x1, [sp, #136]
   1ce8c:	str	x1, [x0]
   1ce90:	ldr	x0, [sp, #72]
   1ce94:	str	x0, [sp, #64]
   1ce98:	add	x0, sp, #0x38
   1ce9c:	mov	w2, #0x1                   	// #1
   1cea0:	ldr	x1, [sp, #64]
   1cea4:	bl	15efc <GOMP_single_copy_end@@GOMP_1.0+0x11ec>
   1cea8:	mov	x1, x0
   1ceac:	ldr	x0, [sp, #64]
   1ceb0:	str	x0, [x1]
   1ceb4:	ldr	x0, [sp, #80]
   1ceb8:	add	x0, x0, #0x1
   1cebc:	str	x0, [sp, #80]
   1cec0:	ldr	x0, [sp, #136]
   1cec4:	ldr	x0, [x0]
   1cec8:	ldr	x1, [sp, #80]
   1cecc:	cmp	x1, x0
   1ced0:	b.cc	1ce5c <GOMP_task_reduction_remap@@GOMP_5.0+0x67c>  // b.lo, b.ul, b.last
   1ced4:	ldr	x0, [sp, #136]
   1ced8:	add	x0, x0, #0x20
   1cedc:	ldr	x1, [x0]
   1cee0:	ldr	x0, [sp, #168]
   1cee4:	cmp	x1, x0
   1cee8:	b.eq	1cf00 <GOMP_task_reduction_remap@@GOMP_5.0+0x720>  // b.none
   1ceec:	ldr	x0, [sp, #136]
   1cef0:	add	x0, x0, #0x20
   1cef4:	ldr	x0, [x0]
   1cef8:	str	x0, [sp, #136]
   1cefc:	b	1ce54 <GOMP_task_reduction_remap@@GOMP_5.0+0x674>
   1cf00:	nop
   1cf04:	ldr	x1, [sp, #56]
   1cf08:	ldr	x0, [sp, #136]
   1cf0c:	add	x0, x0, #0x28
   1cf10:	str	x1, [x0]
   1cf14:	nop
   1cf18:	ldr	x0, [sp, #184]
   1cf1c:	ldr	x1, [sp, #40]
   1cf20:	str	x1, [x0, #40]
   1cf24:	ldr	x0, [sp, #184]
   1cf28:	ldr	x19, [sp, #16]
   1cf2c:	ldp	x29, x30, [sp], #192
   1cf30:	ret
   1cf34:	stp	x29, x30, [sp, #-208]!
   1cf38:	mov	x29, sp
   1cf3c:	str	x19, [sp, #16]
   1cf40:	str	x0, [sp, #40]
   1cf44:	str	x1, [sp, #32]
   1cf48:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1cf4c:	str	x0, [sp, #200]
   1cf50:	ldr	x0, [sp, #200]
   1cf54:	ldr	x0, [x0, #16]
   1cf58:	str	x0, [sp, #192]
   1cf5c:	ldr	x0, [sp, #200]
   1cf60:	ldr	x0, [x0, #80]
   1cf64:	str	x0, [sp, #184]
   1cf68:	ldr	x0, [sp, #192]
   1cf6c:	ldr	w0, [x0]
   1cf70:	str	w0, [sp, #180]
   1cf74:	ldr	x0, [sp, #184]
   1cf78:	ldr	x0, [x0, #40]
   1cf7c:	ldr	x0, [x0, #40]
   1cf80:	ldr	x1, [sp, #40]
   1cf84:	str	x1, [sp, #168]
   1cf88:	str	x0, [sp, #160]
   1cf8c:	ldr	x0, [sp, #32]
   1cf90:	str	x0, [sp, #152]
   1cf94:	ldr	w0, [sp, #180]
   1cf98:	str	w0, [sp, #148]
   1cf9c:	str	xzr, [sp, #136]
   1cfa0:	ldr	x0, [sp, #168]
   1cfa4:	str	x0, [sp, #128]
   1cfa8:	str	xzr, [sp, #120]
   1cfac:	ldr	x0, [sp, #152]
   1cfb0:	cmp	x0, #0x0
   1cfb4:	cset	w0, ne  // ne = any
   1cfb8:	and	w0, w0, #0xff
   1cfbc:	and	x0, x0, #0xff
   1cfc0:	cmp	x0, #0x0
   1cfc4:	b.eq	1d004 <GOMP_task_reduction_remap@@GOMP_5.0+0x824>  // b.none
   1cfc8:	ldr	x0, [sp, #128]
   1cfcc:	add	x0, x0, #0x10
   1cfd0:	ldr	x1, [sp, #152]
   1cfd4:	ldr	x1, [x1, #16]
   1cfd8:	str	x1, [x0]
   1cfdc:	ldr	x0, [sp, #128]
   1cfe0:	add	x0, x0, #0x30
   1cfe4:	ldr	x1, [sp, #152]
   1cfe8:	ldr	x1, [x1, #48]
   1cfec:	str	x1, [x0]
   1cff0:	ldr	x0, [sp, #152]
   1cff4:	add	x0, x0, #0x20
   1cff8:	ldr	x0, [x0]
   1cffc:	str	x0, [sp, #152]
   1d000:	b	1d074 <GOMP_task_reduction_remap@@GOMP_5.0+0x894>
   1d004:	ldr	x0, [sp, #128]
   1d008:	add	x0, x0, #0x8
   1d00c:	ldr	x1, [x0]
   1d010:	ldr	w0, [sp, #148]
   1d014:	mul	x0, x1, x0
   1d018:	str	x0, [sp, #112]
   1d01c:	ldr	x0, [sp, #128]
   1d020:	add	x0, x0, #0x10
   1d024:	ldr	x0, [x0]
   1d028:	ldr	x1, [sp, #112]
   1d02c:	bl	8e9c <fprintf@plt+0x26c>
   1d030:	str	x0, [sp, #104]
   1d034:	ldr	x2, [sp, #112]
   1d038:	mov	w1, #0x0                   	// #0
   1d03c:	ldr	x0, [sp, #104]
   1d040:	bl	88d0 <memset@plt>
   1d044:	ldr	x0, [sp, #128]
   1d048:	add	x0, x0, #0x10
   1d04c:	ldr	x1, [sp, #104]
   1d050:	str	x1, [x0]
   1d054:	ldr	x0, [sp, #128]
   1d058:	add	x0, x0, #0x10
   1d05c:	ldr	x2, [x0]
   1d060:	ldr	x0, [sp, #128]
   1d064:	add	x0, x0, #0x30
   1d068:	ldr	x1, [sp, #112]
   1d06c:	add	x1, x2, x1
   1d070:	str	x1, [x0]
   1d074:	ldr	x0, [sp, #128]
   1d078:	add	x0, x0, #0x28
   1d07c:	str	xzr, [x0]
   1d080:	ldr	x0, [sp, #128]
   1d084:	ldr	x0, [x0]
   1d088:	ldr	x1, [sp, #136]
   1d08c:	add	x0, x1, x0
   1d090:	str	x0, [sp, #136]
   1d094:	ldr	x0, [sp, #128]
   1d098:	add	x0, x0, #0x20
   1d09c:	ldr	x0, [x0]
   1d0a0:	cmp	x0, #0x0
   1d0a4:	b.ne	1d0cc <GOMP_task_reduction_remap@@GOMP_5.0+0x8ec>  // b.any
   1d0a8:	ldr	x0, [sp, #128]
   1d0ac:	add	x0, x0, #0x20
   1d0b0:	ldr	x1, [sp, #160]
   1d0b4:	str	x1, [x0]
   1d0b8:	nop
   1d0bc:	ldr	x0, [sp, #160]
   1d0c0:	cmp	x0, #0x0
   1d0c4:	b.eq	1d11c <GOMP_task_reduction_remap@@GOMP_5.0+0x93c>  // b.none
   1d0c8:	b	1d0e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x900>
   1d0cc:	ldr	x0, [sp, #128]
   1d0d0:	add	x0, x0, #0x20
   1d0d4:	ldr	x0, [x0]
   1d0d8:	str	x0, [sp, #128]
   1d0dc:	b	1cfac <GOMP_task_reduction_remap@@GOMP_5.0+0x7cc>
   1d0e0:	ldr	x0, [sp, #160]
   1d0e4:	add	x0, x0, #0x28
   1d0e8:	ldr	x0, [x0]
   1d0ec:	cmp	x0, #0x0
   1d0f0:	b.eq	1d11c <GOMP_task_reduction_remap@@GOMP_5.0+0x93c>  // b.none
   1d0f4:	ldr	x0, [sp, #160]
   1d0f8:	add	x0, x0, #0x28
   1d0fc:	ldr	x0, [x0]
   1d100:	str	x0, [sp, #120]
   1d104:	ldr	x0, [sp, #120]
   1d108:	bl	159a8 <GOMP_single_copy_end@@GOMP_1.0+0xc98>
   1d10c:	mov	x1, x0
   1d110:	ldr	x0, [sp, #136]
   1d114:	add	x0, x0, x1
   1d118:	str	x0, [sp, #136]
   1d11c:	ldr	x0, [sp, #136]
   1d120:	bl	15b14 <GOMP_single_copy_end@@GOMP_1.0+0xe04>
   1d124:	str	x0, [sp, #48]
   1d128:	ldr	x0, [sp, #120]
   1d12c:	cmp	x0, #0x0
   1d130:	b.eq	1d1d0 <GOMP_task_reduction_remap@@GOMP_5.0+0x9f0>  // b.none
   1d134:	ldr	x19, [sp, #48]
   1d138:	ldr	x0, [sp, #120]
   1d13c:	bl	159a8 <GOMP_single_copy_end@@GOMP_1.0+0xc98>
   1d140:	str	x0, [x19, #8]
   1d144:	ldr	x0, [sp, #120]
   1d148:	add	x1, x0, #0x20
   1d14c:	ldr	x0, [sp, #120]
   1d150:	ldr	x0, [x0]
   1d154:	lsl	x0, x0, #3
   1d158:	add	x0, x1, x0
   1d15c:	str	x0, [sp, #96]
   1d160:	ldr	x0, [sp, #120]
   1d164:	add	x0, x0, #0x20
   1d168:	str	x0, [sp, #88]
   1d16c:	ldr	x0, [sp, #88]
   1d170:	ldr	x0, [x0]
   1d174:	str	x0, [sp, #80]
   1d178:	ldr	x0, [sp, #80]
   1d17c:	cmp	x0, #0x0
   1d180:	b.eq	1d1b4 <GOMP_task_reduction_remap@@GOMP_5.0+0x9d4>  // b.none
   1d184:	ldr	x0, [sp, #80]
   1d188:	cmp	x0, #0x1
   1d18c:	b.eq	1d1b4 <GOMP_task_reduction_remap@@GOMP_5.0+0x9d4>  // b.none
   1d190:	ldr	x19, [sp, #48]
   1d194:	ldr	x0, [sp, #80]
   1d198:	bl	16234 <GOMP_single_copy_end@@GOMP_1.0+0x1524>
   1d19c:	mov	w1, w0
   1d1a0:	mov	x0, x19
   1d1a4:	bl	15bb4 <GOMP_single_copy_end@@GOMP_1.0+0xea4>
   1d1a8:	mov	x1, x0
   1d1ac:	ldr	x0, [sp, #80]
   1d1b0:	str	x0, [x1]
   1d1b4:	ldr	x0, [sp, #88]
   1d1b8:	add	x0, x0, #0x8
   1d1bc:	str	x0, [sp, #88]
   1d1c0:	ldr	x1, [sp, #96]
   1d1c4:	ldr	x0, [sp, #88]
   1d1c8:	cmp	x1, x0
   1d1cc:	b.hi	1d16c <GOMP_task_reduction_remap@@GOMP_5.0+0x98c>  // b.pmore
   1d1d0:	ldr	x0, [sp, #168]
   1d1d4:	str	x0, [sp, #128]
   1d1d8:	str	xzr, [sp, #72]
   1d1dc:	b	1d244 <GOMP_task_reduction_remap@@GOMP_5.0+0xa64>
   1d1e0:	ldr	x1, [sp, #72]
   1d1e4:	mov	x0, x1
   1d1e8:	lsl	x0, x0, #1
   1d1ec:	add	x0, x0, x1
   1d1f0:	lsl	x0, x0, #3
   1d1f4:	add	x0, x0, #0x38
   1d1f8:	ldr	x1, [sp, #128]
   1d1fc:	add	x0, x1, x0
   1d200:	str	x0, [sp, #64]
   1d204:	ldr	x0, [sp, #64]
   1d208:	add	x0, x0, #0x10
   1d20c:	ldr	x1, [sp, #128]
   1d210:	str	x1, [x0]
   1d214:	ldr	x0, [sp, #64]
   1d218:	str	x0, [sp, #56]
   1d21c:	add	x0, sp, #0x30
   1d220:	mov	w2, #0x1                   	// #1
   1d224:	ldr	x1, [sp, #56]
   1d228:	bl	15efc <GOMP_single_copy_end@@GOMP_1.0+0x11ec>
   1d22c:	mov	x1, x0
   1d230:	ldr	x0, [sp, #56]
   1d234:	str	x0, [x1]
   1d238:	ldr	x0, [sp, #72]
   1d23c:	add	x0, x0, #0x1
   1d240:	str	x0, [sp, #72]
   1d244:	ldr	x0, [sp, #128]
   1d248:	ldr	x0, [x0]
   1d24c:	ldr	x1, [sp, #72]
   1d250:	cmp	x1, x0
   1d254:	b.cc	1d1e0 <GOMP_task_reduction_remap@@GOMP_5.0+0xa00>  // b.lo, b.ul, b.last
   1d258:	ldr	x0, [sp, #128]
   1d25c:	add	x0, x0, #0x20
   1d260:	ldr	x1, [x0]
   1d264:	ldr	x0, [sp, #160]
   1d268:	cmp	x1, x0
   1d26c:	b.eq	1d284 <GOMP_task_reduction_remap@@GOMP_5.0+0xaa4>  // b.none
   1d270:	ldr	x0, [sp, #128]
   1d274:	add	x0, x0, #0x20
   1d278:	ldr	x0, [x0]
   1d27c:	str	x0, [sp, #128]
   1d280:	b	1d1d8 <GOMP_task_reduction_remap@@GOMP_5.0+0x9f8>
   1d284:	nop
   1d288:	ldr	x1, [sp, #48]
   1d28c:	ldr	x0, [sp, #128]
   1d290:	add	x0, x0, #0x28
   1d294:	str	x1, [x0]
   1d298:	nop
   1d29c:	ldr	x0, [sp, #184]
   1d2a0:	ldr	x0, [x0, #40]
   1d2a4:	ldr	x1, [sp, #40]
   1d2a8:	str	x1, [x0, #40]
   1d2ac:	nop
   1d2b0:	ldr	x19, [sp, #16]
   1d2b4:	ldp	x29, x30, [sp], #208
   1d2b8:	ret
   1d2bc:	stp	x29, x30, [sp, #-48]!
   1d2c0:	mov	x29, sp
   1d2c4:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1d2c8:	str	x0, [sp, #40]
   1d2cc:	ldr	x0, [sp, #40]
   1d2d0:	ldr	x0, [x0, #16]
   1d2d4:	str	x0, [sp, #32]
   1d2d8:	ldr	x0, [sp, #32]
   1d2dc:	cmp	x0, #0x0
   1d2e0:	b.ne	1d2f4 <GOMP_task_reduction_remap@@GOMP_5.0+0xb14>  // b.any
   1d2e4:	bl	1c288 <GOMP_taskgroup_end@@GOMP_4.0+0x420>
   1d2e8:	ldr	x0, [sp, #40]
   1d2ec:	ldr	x0, [x0, #16]
   1d2f0:	str	x0, [sp, #32]
   1d2f4:	ldr	x0, [sp, #40]
   1d2f8:	ldr	x0, [x0, #80]
   1d2fc:	str	x0, [sp, #24]
   1d300:	ldr	x0, [sp, #24]
   1d304:	ldr	x0, [x0, #40]
   1d308:	bl	1bd7c <GOMP_taskyield@@GOMP_3.0+0x8>
   1d30c:	mov	x1, x0
   1d310:	ldr	x0, [sp, #24]
   1d314:	str	x1, [x0, #40]
   1d318:	ldr	x0, [sp, #24]
   1d31c:	ldr	x0, [x0, #40]
   1d320:	mov	w1, #0x1                   	// #1
   1d324:	strb	w1, [x0, #50]
   1d328:	nop
   1d32c:	ldp	x29, x30, [sp], #48
   1d330:	ret

000000000001d334 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0>:
   1d334:	stp	x29, x30, [sp, #-64]!
   1d338:	mov	x29, sp
   1d33c:	strb	w0, [sp, #31]
   1d340:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1d344:	str	x0, [sp, #56]
   1d348:	ldr	x0, [sp, #56]
   1d34c:	ldr	x0, [x0, #80]
   1d350:	str	x0, [sp, #48]
   1d354:	ldr	x0, [sp, #56]
   1d358:	ldr	x0, [x0, #16]
   1d35c:	str	x0, [sp, #40]
   1d360:	ldr	x0, [sp, #48]
   1d364:	ldr	x0, [x0, #40]
   1d368:	ldr	x0, [x0, #40]
   1d36c:	str	x0, [sp, #32]
   1d370:	bl	1be68 <GOMP_taskgroup_end@@GOMP_4.0>
   1d374:	ldr	x0, [sp, #56]
   1d378:	ldr	w0, [x0, #40]
   1d37c:	cmp	w0, #0x0
   1d380:	b.ne	1d390 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x5c>  // b.any
   1d384:	ldr	x0, [sp, #32]
   1d388:	bl	1c770 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0>
   1d38c:	b	1d3a0 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x6c>
   1d390:	ldr	x0, [sp, #32]
   1d394:	add	x0, x0, #0x28
   1d398:	ldr	x0, [x0]
   1d39c:	bl	158b0 <GOMP_single_copy_end@@GOMP_1.0+0xba0>
   1d3a0:	ldrb	w0, [sp, #31]
   1d3a4:	eor	w0, w0, #0x1
   1d3a8:	and	w0, w0, #0xff
   1d3ac:	cmp	w0, #0x0
   1d3b0:	b.eq	1d3c0 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x8c>  // b.none
   1d3b4:	ldr	x0, [sp, #40]
   1d3b8:	add	x0, x0, #0x80
   1d3bc:	bl	221e8 <omp_get_num_procs@@OMP_1.0+0xb8c>
   1d3c0:	nop
   1d3c4:	ldp	x29, x30, [sp], #64
   1d3c8:	ret

000000000001d3cc <omp_in_final@@OMP_3.1>:
   1d3cc:	stp	x29, x30, [sp, #-32]!
   1d3d0:	mov	x29, sp
   1d3d4:	bl	15770 <GOMP_single_copy_end@@GOMP_1.0+0xa60>
   1d3d8:	str	x0, [sp, #24]
   1d3dc:	ldr	x0, [sp, #24]
   1d3e0:	ldr	x0, [x0, #80]
   1d3e4:	cmp	x0, #0x0
   1d3e8:	b.eq	1d408 <omp_in_final@@OMP_3.1+0x3c>  // b.none
   1d3ec:	ldr	x0, [sp, #24]
   1d3f0:	ldr	x0, [x0, #80]
   1d3f4:	ldrb	w0, [x0, #205]
   1d3f8:	cmp	w0, #0x0
   1d3fc:	b.eq	1d408 <omp_in_final@@OMP_3.1+0x3c>  // b.none
   1d400:	mov	w0, #0x1                   	// #1
   1d404:	b	1d40c <omp_in_final@@OMP_3.1+0x40>
   1d408:	mov	w0, #0x0                   	// #0
   1d40c:	ldp	x29, x30, [sp], #32
   1d410:	ret
   1d414:	sub	sp, sp, #0x10
   1d418:	str	x0, [sp, #8]
   1d41c:	ldr	x0, [sp, #8]
   1d420:	str	xzr, [x0]
   1d424:	ldr	x0, [sp, #8]
   1d428:	str	xzr, [x0, #16]
   1d42c:	ldr	x0, [sp, #8]
   1d430:	str	xzr, [x0, #24]
   1d434:	nop
   1d438:	add	sp, sp, #0x10
   1d43c:	ret
   1d440:	sub	sp, sp, #0x10
   1d444:	str	x0, [sp, #8]
   1d448:	nop
   1d44c:	add	sp, sp, #0x10
   1d450:	ret
   1d454:	sub	sp, sp, #0x10
   1d458:	str	x0, [sp, #8]
   1d45c:	str	w1, [sp, #4]
   1d460:	ldr	x0, [sp, #8]
   1d464:	ldr	w1, [sp, #4]
   1d468:	str	w1, [x0]
   1d46c:	nop
   1d470:	add	sp, sp, #0x10
   1d474:	ret
   1d478:	sub	sp, sp, #0x10
   1d47c:	str	x0, [sp, #8]
   1d480:	nop
   1d484:	add	sp, sp, #0x10
   1d488:	ret
   1d48c:	sub	sp, sp, #0x10
   1d490:	str	x0, [sp, #8]
   1d494:	ldr	x0, [sp, #8]
   1d498:	str	wzr, [x0]
   1d49c:	nop
   1d4a0:	add	sp, sp, #0x10
   1d4a4:	ret
   1d4a8:	sub	sp, sp, #0x10
   1d4ac:	str	x0, [sp, #8]
   1d4b0:	nop
   1d4b4:	add	sp, sp, #0x10
   1d4b8:	ret
   1d4bc:	sub	sp, sp, #0x10
   1d4c0:	str	x0, [sp, #8]
   1d4c4:	str	w1, [sp, #4]
   1d4c8:	ldr	x0, [sp, #8]
   1d4cc:	ldr	w1, [sp, #4]
   1d4d0:	str	w1, [x0]
   1d4d4:	ldr	x0, [sp, #8]
   1d4d8:	ldr	w1, [sp, #4]
   1d4dc:	str	w1, [x0, #64]
   1d4e0:	ldr	x0, [sp, #8]
   1d4e4:	ldr	w1, [sp, #4]
   1d4e8:	str	w1, [x0, #68]
   1d4ec:	ldr	x0, [sp, #8]
   1d4f0:	str	wzr, [x0, #4]
   1d4f4:	nop
   1d4f8:	add	sp, sp, #0x10
   1d4fc:	ret
   1d500:	sub	sp, sp, #0x10
   1d504:	str	x0, [sp, #8]
   1d508:	str	w1, [sp, #4]
   1d50c:	ldr	x0, [sp, #8]
   1d510:	add	x0, x0, #0x40
   1d514:	ldr	x1, [sp, #8]
   1d518:	ldr	w1, [x1]
   1d51c:	ldr	w2, [sp, #4]
   1d520:	sub	w1, w2, w1
   1d524:	ldaxr	w2, [x0]
   1d528:	add	w2, w2, w1
   1d52c:	stlxr	w3, w2, [x0]
   1d530:	cbnz	w3, 1d524 <omp_in_final@@OMP_3.1+0x158>
   1d534:	ldr	x0, [sp, #8]
   1d538:	ldr	w1, [sp, #4]
   1d53c:	str	w1, [x0]
   1d540:	nop
   1d544:	add	sp, sp, #0x10
   1d548:	ret
   1d54c:	sub	sp, sp, #0x10
   1d550:	str	x0, [sp, #8]
   1d554:	nop
   1d558:	add	sp, sp, #0x10
   1d55c:	ret
   1d560:	stp	x29, x30, [sp, #-32]!
   1d564:	mov	x29, sp
   1d568:	str	x0, [sp, #24]
   1d56c:	str	w1, [sp, #20]
   1d570:	ldr	x0, [sp, #24]
   1d574:	ldr	w1, [sp, #20]
   1d578:	bl	1d4bc <omp_in_final@@OMP_3.1+0xf0>
   1d57c:	nop
   1d580:	ldp	x29, x30, [sp], #32
   1d584:	ret
   1d588:	stp	x29, x30, [sp, #-32]!
   1d58c:	mov	x29, sp
   1d590:	str	x0, [sp, #24]
   1d594:	str	w1, [sp, #20]
   1d598:	ldr	x0, [sp, #24]
   1d59c:	ldr	w1, [sp, #20]
   1d5a0:	bl	1d500 <omp_in_final@@OMP_3.1+0x134>
   1d5a4:	nop
   1d5a8:	ldp	x29, x30, [sp], #32
   1d5ac:	ret
   1d5b0:	stp	x29, x30, [sp, #-32]!
   1d5b4:	mov	x29, sp
   1d5b8:	str	x0, [sp, #24]
   1d5bc:	ldr	x0, [sp, #24]
   1d5c0:	bl	1d54c <omp_in_final@@OMP_3.1+0x180>
   1d5c4:	nop
   1d5c8:	ldp	x29, x30, [sp], #32
   1d5cc:	ret
   1d5d0:	stp	x29, x30, [sp, #-32]!
   1d5d4:	mov	x29, sp
   1d5d8:	str	x0, [sp, #24]
   1d5dc:	ldr	x0, [sp, #24]
   1d5e0:	bl	21ff4 <omp_get_num_procs@@OMP_1.0+0x998>
   1d5e4:	nop
   1d5e8:	ldp	x29, x30, [sp], #32
   1d5ec:	ret
   1d5f0:	stp	x29, x30, [sp, #-32]!
   1d5f4:	mov	x29, sp
   1d5f8:	str	x0, [sp, #24]
   1d5fc:	ldr	x0, [sp, #24]
   1d600:	bl	22020 <omp_get_num_procs@@OMP_1.0+0x9c4>
   1d604:	nop
   1d608:	ldp	x29, x30, [sp], #32
   1d60c:	ret
   1d610:	stp	x29, x30, [sp, #-48]!
   1d614:	mov	x29, sp
   1d618:	str	x0, [sp, #24]
   1d61c:	ldr	x0, [sp, #24]
   1d620:	ldar	x0, [x0]
   1d624:	str	x0, [sp, #40]
   1d628:	ldr	x0, [sp, #40]
   1d62c:	cmp	x0, #0x2
   1d630:	b.ls	1d63c <omp_in_final@@OMP_3.1+0x270>  // b.plast
   1d634:	ldr	x0, [sp, #40]
   1d638:	b	1d690 <omp_in_final@@OMP_3.1+0x2c4>
   1d63c:	str	xzr, [sp, #32]
   1d640:	ldr	x1, [sp, #24]
   1d644:	add	x0, sp, #0x20
   1d648:	ldr	x3, [x0]
   1d64c:	mov	x4, #0x1                   	// #1
   1d650:	ldaxr	x2, [x1]
   1d654:	cmp	x2, x3
   1d658:	b.ne	1d664 <omp_in_final@@OMP_3.1+0x298>  // b.any
   1d65c:	stxr	w5, x4, [x1]
   1d660:	cbnz	w5, 1d650 <omp_in_final@@OMP_3.1+0x284>
   1d664:	cset	w1, eq  // eq = none
   1d668:	cmp	w1, #0x0
   1d66c:	b.ne	1d674 <omp_in_final@@OMP_3.1+0x2a8>  // b.any
   1d670:	str	x2, [x0]
   1d674:	mov	w0, w1
   1d678:	cmp	w0, #0x0
   1d67c:	b.eq	1d688 <omp_in_final@@OMP_3.1+0x2bc>  // b.none
   1d680:	mov	x0, #0x0                   	// #0
   1d684:	b	1d690 <omp_in_final@@OMP_3.1+0x2c4>
   1d688:	ldr	x0, [sp, #24]
   1d68c:	bl	22714 <omp_get_num_procs@@OMP_1.0+0x10b8>
   1d690:	ldp	x29, x30, [sp], #48
   1d694:	ret
   1d698:	stp	x29, x30, [sp, #-48]!
   1d69c:	mov	x29, sp
   1d6a0:	str	x0, [sp, #24]
   1d6a4:	str	x1, [sp, #16]
   1d6a8:	ldr	x2, [sp, #16]
   1d6ac:	ldr	x1, [sp, #24]
   1d6b0:	ldxr	x0, [x1]
   1d6b4:	stlxr	w3, x2, [x1]
   1d6b8:	cbnz	w3, 1d6b0 <omp_in_final@@OMP_3.1+0x2e4>
   1d6bc:	str	x0, [sp, #40]
   1d6c0:	ldr	x0, [sp, #40]
   1d6c4:	cmp	x0, #0x1
   1d6c8:	b.eq	1d6d4 <omp_in_final@@OMP_3.1+0x308>  // b.none
   1d6cc:	ldr	x0, [sp, #24]
   1d6d0:	bl	22790 <omp_get_num_procs@@OMP_1.0+0x1134>
   1d6d4:	nop
   1d6d8:	ldp	x29, x30, [sp], #48
   1d6dc:	ret
   1d6e0:	mrs	x1, tpidr_el0
   1d6e4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   1d6e8:	ldr	x0, [x0, #4016]
   1d6ec:	add	x0, x1, x0
   1d6f0:	ret
   1d6f4:	stp	x29, x30, [sp, #-32]!
   1d6f8:	mov	x29, sp
   1d6fc:	str	x0, [sp, #24]
   1d700:	ldr	x0, [sp, #24]
   1d704:	ldr	x0, [x0, #56]
   1d708:	cmp	x0, #0x0
   1d70c:	cset	w0, ne  // ne = any
   1d710:	and	w0, w0, #0xff
   1d714:	and	x0, x0, #0xff
   1d718:	cmp	x0, #0x0
   1d71c:	b.eq	1d72c <omp_in_final@@OMP_3.1+0x360>  // b.none
   1d720:	ldr	x0, [sp, #24]
   1d724:	ldr	x0, [x0, #56]
   1d728:	bl	8a20 <free@plt>
   1d72c:	nop
   1d730:	ldp	x29, x30, [sp], #32
   1d734:	ret
   1d738:	stp	x29, x30, [sp, #-16]!
   1d73c:	mov	x29, sp
   1d740:	bl	8bb0 <pthread_self@plt>
   1d744:	ldp	x29, x30, [sp], #16
   1d748:	ret
   1d74c:	stp	x29, x30, [sp, #-48]!
   1d750:	mov	x29, sp
   1d754:	str	x0, [sp, #24]
   1d758:	bl	1d6e0 <omp_in_final@@OMP_3.1+0x314>
   1d75c:	str	x0, [sp, #40]
   1d760:	ldr	x1, [sp, #24]
   1d764:	ldr	x0, [sp, #40]
   1d768:	cmp	x1, x0
   1d76c:	b.ne	1d778 <omp_in_final@@OMP_3.1+0x3ac>  // b.any
   1d770:	bl	8bb0 <pthread_self@plt>
   1d774:	b	1d790 <omp_in_final@@OMP_3.1+0x3c4>
   1d778:	bl	8bb0 <pthread_self@plt>
   1d77c:	mov	x2, x0
   1d780:	ldr	x1, [sp, #24]
   1d784:	ldr	x0, [sp, #40]
   1d788:	sub	x0, x1, x0
   1d78c:	add	x0, x2, x0
   1d790:	ldp	x29, x30, [sp], #48
   1d794:	ret
   1d798:	stp	x29, x30, [sp, #-48]!
   1d79c:	mov	x29, sp
   1d7a0:	str	x0, [sp, #24]
   1d7a4:	str	w1, [sp, #20]
   1d7a8:	ldr	x0, [sp, #24]
   1d7ac:	ldr	x0, [x0, #96]
   1d7b0:	str	x0, [sp, #40]
   1d7b4:	ldr	x0, [sp, #40]
   1d7b8:	cmp	x0, #0x0
   1d7bc:	cset	w0, eq  // eq = none
   1d7c0:	and	w0, w0, #0xff
   1d7c4:	and	x0, x0, #0xff
   1d7c8:	cmp	x0, #0x0
   1d7cc:	b.eq	1d828 <omp_in_final@@OMP_3.1+0x45c>  // b.none
   1d7d0:	mov	x0, #0xc0                  	// #192
   1d7d4:	bl	8dd0 <fprintf@plt+0x1a0>
   1d7d8:	str	x0, [sp, #40]
   1d7dc:	ldr	x0, [sp, #40]
   1d7e0:	str	xzr, [x0]
   1d7e4:	ldr	x0, [sp, #40]
   1d7e8:	str	wzr, [x0, #8]
   1d7ec:	ldr	x0, [sp, #40]
   1d7f0:	str	wzr, [x0, #12]
   1d7f4:	ldr	x0, [sp, #40]
   1d7f8:	str	xzr, [x0, #16]
   1d7fc:	ldr	w1, [sp, #20]
   1d800:	ldr	x0, [sp, #40]
   1d804:	str	x1, [x0, #24]
   1d808:	ldr	x0, [sp, #24]
   1d80c:	ldr	x1, [sp, #40]
   1d810:	str	x1, [x0, #96]
   1d814:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1d818:	add	x0, x0, #0x6d0
   1d81c:	ldr	w0, [x0]
   1d820:	ldr	x1, [sp, #24]
   1d824:	bl	8ad0 <pthread_setspecific@plt>
   1d828:	ldr	x0, [sp, #40]
   1d82c:	ldp	x29, x30, [sp], #48
   1d830:	ret
   1d834:	sub	sp, sp, #0x10
   1d838:	str	x0, [sp, #8]
   1d83c:	nop
   1d840:	add	sp, sp, #0x10
   1d844:	ret
   1d848:	sub	sp, sp, #0x10
   1d84c:	str	x0, [sp, #8]
   1d850:	str	x1, [sp]
   1d854:	ldr	x0, [sp, #8]
   1d858:	add	sp, sp, #0x10
   1d85c:	ret
   1d860:	stp	x29, x30, [sp, #-112]!
   1d864:	mov	x29, sp
   1d868:	str	x0, [sp, #24]
   1d86c:	ldr	x0, [sp, #24]
   1d870:	str	x0, [sp, #88]
   1d874:	mrs	x1, tpidr_el0
   1d878:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   1d87c:	ldr	x0, [x0, #4016]
   1d880:	add	x0, x1, x0
   1d884:	str	x0, [sp, #80]
   1d888:	ldr	x0, [sp, #80]
   1d88c:	add	x0, x0, #0x58
   1d890:	mov	w1, #0x0                   	// #0
   1d894:	bl	1d454 <omp_in_final@@OMP_3.1+0x88>
   1d898:	ldr	x0, [sp, #88]
   1d89c:	ldr	x0, [x0]
   1d8a0:	str	x0, [sp, #104]
   1d8a4:	ldr	x0, [sp, #88]
   1d8a8:	ldr	x0, [x0, #8]
   1d8ac:	str	x0, [sp, #96]
   1d8b0:	ldr	x0, [sp, #88]
   1d8b4:	ldr	x1, [x0, #88]
   1d8b8:	ldr	x0, [sp, #80]
   1d8bc:	str	x1, [x0, #96]
   1d8c0:	ldr	x0, [sp, #80]
   1d8c4:	add	x2, x0, #0x10
   1d8c8:	ldr	x0, [sp, #88]
   1d8cc:	add	x1, x0, #0x10
   1d8d0:	mov	x0, x2
   1d8d4:	ldp	x2, x3, [x1]
   1d8d8:	stp	x2, x3, [x0]
   1d8dc:	ldp	x2, x3, [x1, #16]
   1d8e0:	stp	x2, x3, [x0, #16]
   1d8e4:	ldp	x2, x3, [x1, #32]
   1d8e8:	stp	x2, x3, [x0, #32]
   1d8ec:	ldp	x2, x3, [x1, #48]
   1d8f0:	stp	x2, x3, [x0, #48]
   1d8f4:	ldr	x0, [sp, #88]
   1d8f8:	ldr	x1, [x0, #80]
   1d8fc:	ldr	x0, [sp, #80]
   1d900:	str	x1, [x0, #80]
   1d904:	ldr	x0, [sp, #88]
   1d908:	ldr	w1, [x0, #96]
   1d90c:	ldr	x0, [sp, #80]
   1d910:	str	w1, [x0, #92]
   1d914:	ldr	x0, [sp, #80]
   1d918:	ldr	x0, [x0, #16]
   1d91c:	ldr	x1, [x0, #80]
   1d920:	ldr	x0, [sp, #80]
   1d924:	ldr	w0, [x0, #40]
   1d928:	mov	w0, w0
   1d92c:	lsl	x0, x0, #3
   1d930:	add	x0, x1, x0
   1d934:	ldr	x1, [sp, #80]
   1d938:	add	x1, x1, #0x58
   1d93c:	str	x1, [x0]
   1d940:	ldr	x0, [sp, #80]
   1d944:	ldr	x0, [x0, #96]
   1d948:	str	x0, [sp, #72]
   1d94c:	ldr	x0, [sp, #88]
   1d950:	ldrb	w0, [x0, #100]
   1d954:	cmp	w0, #0x0
   1d958:	b.eq	1d9b0 <omp_in_final@@OMP_3.1+0x5e4>  // b.none
   1d95c:	ldr	x0, [sp, #80]
   1d960:	ldr	x0, [x0, #16]
   1d964:	str	x0, [sp, #48]
   1d968:	ldr	x0, [sp, #80]
   1d96c:	ldr	x0, [x0, #80]
   1d970:	str	x0, [sp, #40]
   1d974:	ldr	x0, [sp, #48]
   1d978:	add	x0, x0, #0x80
   1d97c:	bl	21ff4 <omp_get_num_procs@@OMP_1.0+0x998>
   1d980:	ldr	x1, [sp, #104]
   1d984:	ldr	x0, [sp, #96]
   1d988:	blr	x1
   1d98c:	ldr	x0, [sp, #48]
   1d990:	add	x0, x0, #0x80
   1d994:	bl	22214 <omp_get_num_procs@@OMP_1.0+0xbb8>
   1d998:	ldr	x0, [sp, #40]
   1d99c:	bl	1d6f4 <omp_in_final@@OMP_3.1+0x328>
   1d9a0:	ldr	x0, [sp, #48]
   1d9a4:	add	x0, x0, #0x80
   1d9a8:	bl	22020 <omp_get_num_procs@@OMP_1.0+0x9c4>
   1d9ac:	b	1da50 <omp_in_final@@OMP_3.1+0x684>
   1d9b0:	ldr	x0, [sp, #72]
   1d9b4:	ldr	x1, [x0]
   1d9b8:	ldr	x0, [sp, #80]
   1d9bc:	ldr	w0, [x0, #40]
   1d9c0:	mov	w0, w0
   1d9c4:	lsl	x0, x0, #3
   1d9c8:	add	x0, x1, x0
   1d9cc:	ldr	x1, [sp, #80]
   1d9d0:	str	x1, [x0]
   1d9d4:	ldr	x0, [sp, #72]
   1d9d8:	add	x0, x0, #0x40
   1d9dc:	bl	1d5d0 <omp_in_final@@OMP_3.1+0x204>
   1d9e0:	ldr	x0, [sp, #80]
   1d9e4:	ldr	x0, [x0, #16]
   1d9e8:	str	x0, [sp, #64]
   1d9ec:	ldr	x0, [sp, #80]
   1d9f0:	ldr	x0, [x0, #80]
   1d9f4:	str	x0, [sp, #56]
   1d9f8:	ldr	x1, [sp, #104]
   1d9fc:	ldr	x0, [sp, #96]
   1da00:	blr	x1
   1da04:	ldr	x0, [sp, #64]
   1da08:	add	x0, x0, #0x80
   1da0c:	bl	22214 <omp_get_num_procs@@OMP_1.0+0xbb8>
   1da10:	ldr	x0, [sp, #56]
   1da14:	bl	1d6f4 <omp_in_final@@OMP_3.1+0x328>
   1da18:	ldr	x0, [sp, #72]
   1da1c:	add	x0, x0, #0x40
   1da20:	bl	1d5d0 <omp_in_final@@OMP_3.1+0x204>
   1da24:	ldr	x0, [sp, #80]
   1da28:	ldr	x0, [x0]
   1da2c:	str	x0, [sp, #104]
   1da30:	ldr	x0, [sp, #80]
   1da34:	ldr	x0, [x0, #8]
   1da38:	str	x0, [sp, #96]
   1da3c:	ldr	x0, [sp, #80]
   1da40:	str	xzr, [x0]
   1da44:	ldr	x0, [sp, #104]
   1da48:	cmp	x0, #0x0
   1da4c:	b.ne	1d9e0 <omp_in_final@@OMP_3.1+0x614>  // b.any
   1da50:	ldr	x0, [sp, #80]
   1da54:	add	x0, x0, #0x58
   1da58:	bl	1d478 <omp_in_final@@OMP_3.1+0xac>
   1da5c:	bl	8bb0 <pthread_self@plt>
   1da60:	bl	88c0 <pthread_detach@plt>
   1da64:	ldr	x0, [sp, #80]
   1da68:	str	xzr, [x0, #96]
   1da6c:	ldr	x0, [sp, #80]
   1da70:	str	xzr, [x0, #80]
   1da74:	mov	x0, #0x0                   	// #0
   1da78:	ldp	x29, x30, [sp], #112
   1da7c:	ret
   1da80:	stp	x29, x30, [sp, #-64]!
   1da84:	mov	x29, sp
   1da88:	str	w0, [sp, #28]
   1da8c:	bl	1d6e0 <omp_in_final@@OMP_3.1+0x314>
   1da90:	str	x0, [sp, #56]
   1da94:	ldr	x0, [sp, #56]
   1da98:	ldr	x0, [x0, #16]
   1da9c:	cmp	x0, #0x0
   1daa0:	b.ne	1daf0 <omp_in_final@@OMP_3.1+0x724>  // b.any
   1daa4:	ldr	w1, [sp, #28]
   1daa8:	ldr	x0, [sp, #56]
   1daac:	bl	1d798 <omp_in_final@@OMP_3.1+0x3cc>
   1dab0:	str	x0, [sp, #48]
   1dab4:	ldr	x0, [sp, #48]
   1dab8:	ldr	x0, [x0, #16]
   1dabc:	str	x0, [sp, #40]
   1dac0:	ldr	x0, [sp, #40]
   1dac4:	cmp	x0, #0x0
   1dac8:	b.eq	1daf0 <omp_in_final@@OMP_3.1+0x724>  // b.none
   1dacc:	ldr	x0, [sp, #40]
   1dad0:	ldr	w0, [x0]
   1dad4:	ldr	w1, [sp, #28]
   1dad8:	cmp	w1, w0
   1dadc:	b.ne	1daf0 <omp_in_final@@OMP_3.1+0x724>  // b.any
   1dae0:	ldr	x0, [sp, #48]
   1dae4:	str	xzr, [x0, #16]
   1dae8:	ldr	x0, [sp, #40]
   1daec:	b	1daf4 <omp_in_final@@OMP_3.1+0x728>
   1daf0:	mov	x0, #0x0                   	// #0
   1daf4:	ldp	x29, x30, [sp], #64
   1daf8:	ret
   1dafc:	stp	x29, x30, [sp, #-64]!
   1db00:	mov	x29, sp
   1db04:	str	w0, [sp, #28]
   1db08:	ldr	w0, [sp, #28]
   1db0c:	bl	1da80 <omp_in_final@@OMP_3.1+0x6b4>
   1db10:	str	x0, [sp, #56]
   1db14:	ldr	x0, [sp, #56]
   1db18:	cmp	x0, #0x0
   1db1c:	b.ne	1db68 <omp_in_final@@OMP_3.1+0x79c>  // b.any
   1db20:	mov	x0, #0xd8                  	// #216
   1db24:	str	x0, [sp, #40]
   1db28:	ldr	w1, [sp, #28]
   1db2c:	ldr	x0, [sp, #40]
   1db30:	mul	x0, x1, x0
   1db34:	add	x0, x0, #0x540
   1db38:	bl	8dd0 <fprintf@plt+0x1a0>
   1db3c:	str	x0, [sp, #56]
   1db40:	ldr	x0, [sp, #56]
   1db44:	add	x0, x0, #0x80
   1db48:	ldr	w1, [sp, #28]
   1db4c:	bl	1d4bc <omp_in_final@@OMP_3.1+0xf0>
   1db50:	ldr	x0, [sp, #56]
   1db54:	add	x0, x0, #0x500
   1db58:	bl	1d48c <omp_in_final@@OMP_3.1+0xc0>
   1db5c:	ldr	x0, [sp, #56]
   1db60:	ldr	w1, [sp, #28]
   1db64:	str	w1, [x0]
   1db68:	ldr	x0, [sp, #56]
   1db6c:	mov	w1, #0x8                   	// #8
   1db70:	str	w1, [x0, #4]
   1db74:	ldr	x0, [sp, #56]
   1db78:	str	xzr, [x0, #112]
   1db7c:	ldr	x0, [sp, #56]
   1db80:	add	x1, x0, #0x100
   1db84:	ldr	x0, [sp, #56]
   1db88:	str	x1, [x0, #88]
   1db8c:	ldr	x0, [sp, #56]
   1db90:	add	x0, x0, #0x100
   1db94:	ldr	w2, [sp, #28]
   1db98:	mov	x1, #0x0                   	// #0
   1db9c:	bl	1ff68 <omp_in_final@@OMP_3.1+0x2b9c>
   1dba0:	ldr	x0, [sp, #56]
   1dba4:	str	xzr, [x0, #312]
   1dba8:	ldr	x0, [sp, #56]
   1dbac:	str	xzr, [x0, #104]
   1dbb0:	ldr	x0, [sp, #56]
   1dbb4:	add	x1, x0, #0x180
   1dbb8:	ldr	x0, [sp, #56]
   1dbbc:	str	x1, [x0, #96]
   1dbc0:	mov	w0, #0x1                   	// #1
   1dbc4:	str	w0, [sp, #52]
   1dbc8:	b	1dc08 <omp_in_final@@OMP_3.1+0x83c>
   1dbcc:	ldr	w0, [sp, #52]
   1dbd0:	add	w0, w0, #0x1
   1dbd4:	sxtw	x0, w0
   1dbd8:	add	x0, x0, #0x2
   1dbdc:	lsl	x0, x0, #7
   1dbe0:	ldr	x1, [sp, #56]
   1dbe4:	add	x1, x1, x0
   1dbe8:	ldr	x2, [sp, #56]
   1dbec:	ldrsw	x0, [sp, #52]
   1dbf0:	lsl	x0, x0, #7
   1dbf4:	add	x0, x2, x0
   1dbf8:	str	x1, [x0, #336]
   1dbfc:	ldr	w0, [sp, #52]
   1dc00:	add	w0, w0, #0x1
   1dc04:	str	w0, [sp, #52]
   1dc08:	ldr	w0, [sp, #52]
   1dc0c:	cmp	w0, #0x6
   1dc10:	b.le	1dbcc <omp_in_final@@OMP_3.1+0x800>
   1dc14:	ldr	x1, [sp, #56]
   1dc18:	ldrsw	x0, [sp, #52]
   1dc1c:	lsl	x0, x0, #7
   1dc20:	add	x0, x1, x0
   1dc24:	str	xzr, [x0, #336]
   1dc28:	ldr	x0, [sp, #56]
   1dc2c:	add	x0, x0, #0x48
   1dc30:	mov	w1, #0x0                   	// #0
   1dc34:	bl	1d454 <omp_in_final@@OMP_3.1+0x88>
   1dc38:	ldr	w1, [sp, #28]
   1dc3c:	mov	x0, x1
   1dc40:	lsl	x0, x0, #1
   1dc44:	add	x0, x0, x1
   1dc48:	lsl	x0, x0, #2
   1dc4c:	add	x0, x0, x1
   1dc50:	lsl	x0, x0, #4
   1dc54:	add	x0, x0, #0x540
   1dc58:	ldr	x1, [sp, #56]
   1dc5c:	add	x1, x1, x0
   1dc60:	ldr	x0, [sp, #56]
   1dc64:	str	x1, [x0, #80]
   1dc68:	ldr	x0, [sp, #56]
   1dc6c:	ldr	x0, [x0, #80]
   1dc70:	ldr	x1, [sp, #56]
   1dc74:	add	x1, x1, #0x48
   1dc78:	str	x1, [x0]
   1dc7c:	ldr	x0, [sp, #56]
   1dc80:	add	x0, x0, #0x508
   1dc84:	bl	1d414 <omp_in_final@@OMP_3.1+0x48>
   1dc88:	ldr	x0, [sp, #56]
   1dc8c:	str	wzr, [x0, #1320]
   1dc90:	ldr	x0, [sp, #56]
   1dc94:	str	wzr, [x0, #1324]
   1dc98:	ldr	x0, [sp, #56]
   1dc9c:	str	wzr, [x0, #1328]
   1dca0:	ldr	x0, [sp, #56]
   1dca4:	str	wzr, [x0, #1332]
   1dca8:	ldr	x0, [sp, #56]
   1dcac:	str	wzr, [x0, #1336]
   1dcb0:	ldr	x0, [sp, #56]
   1dcb4:	ldp	x29, x30, [sp], #64
   1dcb8:	ret
   1dcbc:	stp	x29, x30, [sp, #-32]!
   1dcc0:	mov	x29, sp
   1dcc4:	str	x0, [sp, #24]
   1dcc8:	ldr	x0, [sp, #24]
   1dccc:	add	x0, x0, #0x80
   1dcd0:	bl	1d54c <omp_in_final@@OMP_3.1+0x180>
   1dcd4:	ldr	x0, [sp, #24]
   1dcd8:	add	x0, x0, #0x500
   1dcdc:	bl	1d4a8 <omp_in_final@@OMP_3.1+0xdc>
   1dce0:	ldr	x0, [sp, #24]
   1dce4:	add	x0, x0, #0x508
   1dce8:	bl	1d440 <omp_in_final@@OMP_3.1+0x74>
   1dcec:	ldr	x0, [sp, #24]
   1dcf0:	bl	8a20 <free@plt>
   1dcf4:	nop
   1dcf8:	ldp	x29, x30, [sp], #32
   1dcfc:	ret
   1dd00:	stp	x29, x30, [sp, #-48]!
   1dd04:	mov	x29, sp
   1dd08:	str	x0, [sp, #24]
   1dd0c:	bl	1d6e0 <omp_in_final@@OMP_3.1+0x314>
   1dd10:	str	x0, [sp, #40]
   1dd14:	ldr	x0, [sp, #24]
   1dd18:	str	x0, [sp, #32]
   1dd1c:	ldr	x0, [sp, #32]
   1dd20:	add	x0, x0, #0x40
   1dd24:	bl	1d5f0 <omp_in_final@@OMP_3.1+0x224>
   1dd28:	ldr	x0, [sp, #40]
   1dd2c:	add	x0, x0, #0x58
   1dd30:	bl	1d478 <omp_in_final@@OMP_3.1+0xac>
   1dd34:	ldr	x0, [sp, #40]
   1dd38:	str	xzr, [x0, #96]
   1dd3c:	ldr	x0, [sp, #40]
   1dd40:	str	xzr, [x0, #80]
   1dd44:	bl	8bb0 <pthread_self@plt>
   1dd48:	bl	88c0 <pthread_detach@plt>
   1dd4c:	mov	x0, #0x0                   	// #0
   1dd50:	bl	8990 <pthread_exit@plt>
   1dd54:	stp	x29, x30, [sp, #-80]!
   1dd58:	mov	x29, sp
   1dd5c:	str	x0, [sp, #24]
   1dd60:	bl	1d6e0 <omp_in_final@@OMP_3.1+0x314>
   1dd64:	str	x0, [sp, #64]
   1dd68:	ldr	x0, [sp, #64]
   1dd6c:	ldr	x0, [x0, #96]
   1dd70:	str	x0, [sp, #56]
   1dd74:	ldr	x0, [sp, #56]
   1dd78:	cmp	x0, #0x0
   1dd7c:	b.eq	1de84 <omp_in_final@@OMP_3.1+0xab8>  // b.none
   1dd80:	ldr	x0, [sp, #56]
   1dd84:	ldr	w0, [x0, #12]
   1dd88:	cmp	w0, #0x0
   1dd8c:	b.eq	1de4c <omp_in_final@@OMP_3.1+0xa80>  // b.none
   1dd90:	mov	w0, #0x1                   	// #1
   1dd94:	str	w0, [sp, #76]
   1dd98:	b	1dde0 <omp_in_final@@OMP_3.1+0xa14>
   1dd9c:	ldr	x0, [sp, #56]
   1dda0:	ldr	x1, [x0]
   1dda4:	ldrsw	x0, [sp, #76]
   1dda8:	lsl	x0, x0, #3
   1ddac:	add	x0, x1, x0
   1ddb0:	ldr	x0, [x0]
   1ddb4:	str	x0, [sp, #48]
   1ddb8:	ldr	x0, [sp, #48]
   1ddbc:	adrp	x1, 1d000 <GOMP_task_reduction_remap@@GOMP_5.0+0x820>
   1ddc0:	add	x1, x1, #0xd00
   1ddc4:	str	x1, [x0]
   1ddc8:	ldr	x0, [sp, #48]
   1ddcc:	ldr	x1, [sp, #56]
   1ddd0:	str	x1, [x0, #8]
   1ddd4:	ldr	w0, [sp, #76]
   1ddd8:	add	w0, w0, #0x1
   1dddc:	str	w0, [sp, #76]
   1dde0:	ldr	x0, [sp, #56]
   1dde4:	ldr	w1, [x0, #12]
   1dde8:	ldr	w0, [sp, #76]
   1ddec:	cmp	w1, w0
   1ddf0:	b.hi	1dd9c <omp_in_final@@OMP_3.1+0x9d0>  // b.pmore
   1ddf4:	ldr	x0, [sp, #56]
   1ddf8:	add	x0, x0, #0x40
   1ddfc:	bl	1d5d0 <omp_in_final@@OMP_3.1+0x204>
   1de00:	ldr	x0, [sp, #56]
   1de04:	add	x0, x0, #0x40
   1de08:	bl	1d5d0 <omp_in_final@@OMP_3.1+0x204>
   1de0c:	ldr	x0, [sp, #56]
   1de10:	add	x0, x0, #0x40
   1de14:	bl	1d5b0 <omp_in_final@@OMP_3.1+0x1e4>
   1de18:	ldr	x0, [sp, #56]
   1de1c:	ldr	w0, [x0, #12]
   1de20:	mov	w0, w0
   1de24:	mov	x1, #0x1                   	// #1
   1de28:	sub	x0, x1, x0
   1de2c:	mov	x1, x0
   1de30:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1de34:	add	x0, x0, #0x310
   1de38:	ldxr	x2, [x0]
   1de3c:	add	x2, x2, x1
   1de40:	stlxr	w3, x2, [x0]
   1de44:	cbnz	w3, 1de38 <omp_in_final@@OMP_3.1+0xa6c>
   1de48:	dmb	ish
   1de4c:	ldr	x0, [sp, #56]
   1de50:	ldr	x0, [x0, #16]
   1de54:	cmp	x0, #0x0
   1de58:	b.eq	1de68 <omp_in_final@@OMP_3.1+0xa9c>  // b.none
   1de5c:	ldr	x0, [sp, #56]
   1de60:	ldr	x0, [x0, #16]
   1de64:	bl	1dcbc <omp_in_final@@OMP_3.1+0x8f0>
   1de68:	ldr	x0, [sp, #56]
   1de6c:	ldr	x0, [x0]
   1de70:	bl	8a20 <free@plt>
   1de74:	ldr	x0, [sp, #56]
   1de78:	bl	8a20 <free@plt>
   1de7c:	ldr	x0, [sp, #64]
   1de80:	str	xzr, [x0, #96]
   1de84:	ldr	x0, [sp, #64]
   1de88:	ldr	w0, [x0, #44]
   1de8c:	cmp	w0, #0x0
   1de90:	b.ne	1deb8 <omp_in_final@@OMP_3.1+0xaec>  // b.any
   1de94:	ldr	x0, [sp, #64]
   1de98:	ldr	x0, [x0, #16]
   1de9c:	cmp	x0, #0x0
   1dea0:	cset	w0, ne  // ne = any
   1dea4:	and	w0, w0, #0xff
   1dea8:	and	x0, x0, #0xff
   1deac:	cmp	x0, #0x0
   1deb0:	b.eq	1deb8 <omp_in_final@@OMP_3.1+0xaec>  // b.none
   1deb4:	bl	1f720 <omp_in_final@@OMP_3.1+0x2354>
   1deb8:	ldr	x0, [sp, #64]
   1debc:	ldr	x0, [x0, #80]
   1dec0:	cmp	x0, #0x0
   1dec4:	b.eq	1dee0 <omp_in_final@@OMP_3.1+0xb14>  // b.none
   1dec8:	ldr	x0, [sp, #64]
   1decc:	ldr	x0, [x0, #80]
   1ded0:	str	x0, [sp, #40]
   1ded4:	bl	16330 <GOMP_single_copy_end@@GOMP_1.0+0x1620>
   1ded8:	ldr	x0, [sp, #40]
   1dedc:	bl	8a20 <free@plt>
   1dee0:	nop
   1dee4:	ldp	x29, x30, [sp], #80
   1dee8:	ret
   1deec:	stp	x29, x30, [sp, #-320]!
   1def0:	mov	x29, sp
   1def4:	str	x0, [x29, #56]
   1def8:	str	x1, [x29, #48]
   1defc:	str	w2, [x29, #44]
   1df00:	str	w3, [x29, #40]
   1df04:	str	x4, [x29, #32]
   1df08:	str	x5, [x29, #24]
   1df0c:	str	wzr, [x29, #292]
   1df10:	str	wzr, [x29, #264]
   1df14:	str	wzr, [x29, #260]
   1df18:	str	wzr, [x29, #256]
   1df1c:	str	wzr, [x29, #252]
   1df20:	str	wzr, [x29, #248]
   1df24:	str	xzr, [x29, #240]
   1df28:	strb	wzr, [x29, #239]
   1df2c:	bl	1d6e0 <omp_in_final@@OMP_3.1+0x314>
   1df30:	str	x0, [x29, #192]
   1df34:	ldr	x0, [x29, #192]
   1df38:	ldr	w0, [x0, #44]
   1df3c:	cmp	w0, #0x0
   1df40:	cset	w0, ne  // ne = any
   1df44:	strb	w0, [x29, #191]
   1df48:	ldr	x0, [x29, #192]
   1df4c:	ldr	x0, [x0, #96]
   1df50:	str	x0, [x29, #176]
   1df54:	ldr	x0, [x29, #192]
   1df58:	ldr	x0, [x0, #80]
   1df5c:	str	x0, [x29, #168]
   1df60:	ldr	x0, [x29, #168]
   1df64:	cmp	x0, #0x0
   1df68:	b.eq	1df78 <omp_in_final@@OMP_3.1+0xbac>  // b.none
   1df6c:	ldr	x0, [x29, #168]
   1df70:	add	x0, x0, #0x90
   1df74:	b	1df80 <omp_in_final@@OMP_3.1+0xbb4>
   1df78:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1df7c:	add	x0, x0, #0x2d8
   1df80:	str	x0, [x29, #160]
   1df84:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1df88:	add	x0, x0, #0x650
   1df8c:	ldr	x0, [x0]
   1df90:	cmp	x0, #0x0
   1df94:	cset	w0, ne  // ne = any
   1df98:	and	w0, w0, #0xff
   1df9c:	and	x0, x0, #0xff
   1dfa0:	cmp	x0, #0x0
   1dfa4:	b.eq	1e004 <omp_in_final@@OMP_3.1+0xc38>  // b.none
   1dfa8:	ldr	x0, [x29, #192]
   1dfac:	ldr	w0, [x0, #92]
   1dfb0:	cmp	w0, #0x0
   1dfb4:	b.ne	1e004 <omp_in_final@@OMP_3.1+0xc38>  // b.any
   1dfb8:	bl	2373c <omp_pause_resource_all_@@OMP_5.0+0x34>
   1dfbc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1dfc0:	add	x0, x0, #0x620
   1dfc4:	ldrb	w0, [x0]
   1dfc8:	and	x0, x0, #0xff
   1dfcc:	cmp	x0, #0x0
   1dfd0:	b.eq	1e004 <omp_in_final@@OMP_3.1+0xc38>  // b.none
   1dfd4:	ldr	w0, [x29, #44]
   1dfd8:	cmp	w0, #0x1
   1dfdc:	b.ne	1e004 <omp_in_final@@OMP_3.1+0xc38>  // b.any
   1dfe0:	bl	1d738 <omp_in_final@@OMP_3.1+0x36c>
   1dfe4:	mov	x3, x0
   1dfe8:	ldr	x0, [x29, #192]
   1dfec:	add	x1, x0, #0x10
   1dff0:	ldr	x0, [x29, #192]
   1dff4:	ldr	w0, [x0, #92]
   1dff8:	mov	w2, w0
   1dffc:	mov	x0, x3
   1e000:	bl	347ac <omp_display_affinity@@OMP_5.0+0xb8>
   1e004:	ldr	x0, [x29, #32]
   1e008:	add	x2, x0, #0x8
   1e00c:	ldr	x0, [x29, #192]
   1e010:	add	x1, x0, #0x10
   1e014:	mov	x0, x2
   1e018:	ldp	x2, x3, [x1]
   1e01c:	stp	x2, x3, [x0]
   1e020:	ldp	x2, x3, [x1, #16]
   1e024:	stp	x2, x3, [x0, #16]
   1e028:	ldp	x2, x3, [x1, #32]
   1e02c:	stp	x2, x3, [x0, #32]
   1e030:	ldp	x2, x3, [x1, #48]
   1e034:	stp	x2, x3, [x0, #48]
   1e038:	ldr	x0, [x29, #192]
   1e03c:	ldr	x1, [x29, #32]
   1e040:	str	x1, [x0, #16]
   1e044:	ldr	x0, [x29, #192]
   1e048:	str	wzr, [x0, #40]
   1e04c:	ldr	x0, [x29, #192]
   1e050:	ldr	w0, [x0, #44]
   1e054:	add	w1, w0, #0x1
   1e058:	ldr	x0, [x29, #192]
   1e05c:	str	w1, [x0, #44]
   1e060:	ldr	w0, [x29, #44]
   1e064:	cmp	w0, #0x1
   1e068:	b.ls	1e080 <omp_in_final@@OMP_3.1+0xcb4>  // b.plast
   1e06c:	ldr	x0, [x29, #192]
   1e070:	ldr	w0, [x0, #48]
   1e074:	add	w1, w0, #0x1
   1e078:	ldr	x0, [x29, #192]
   1e07c:	str	w1, [x0, #48]
   1e080:	ldr	x0, [x29, #32]
   1e084:	add	x1, x0, #0x100
   1e088:	ldr	x0, [x29, #192]
   1e08c:	str	x1, [x0, #24]
   1e090:	ldr	x0, [x29, #192]
   1e094:	str	xzr, [x0, #32]
   1e098:	ldr	x0, [x29, #192]
   1e09c:	str	xzr, [x0, #64]
   1e0a0:	ldr	x0, [x29, #192]
   1e0a4:	str	xzr, [x0, #72]
   1e0a8:	ldr	x0, [x29, #32]
   1e0ac:	add	x1, x0, #0x540
   1e0b0:	ldr	x0, [x29, #192]
   1e0b4:	str	x1, [x0, #80]
   1e0b8:	ldr	x0, [x29, #160]
   1e0bc:	ldr	x0, [x0]
   1e0c0:	str	x0, [x29, #272]
   1e0c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1e0c8:	add	x0, x0, #0x610
   1e0cc:	ldr	x0, [x0]
   1e0d0:	cmp	x0, #0x0
   1e0d4:	cset	w0, ne  // ne = any
   1e0d8:	and	w0, w0, #0xff
   1e0dc:	and	x0, x0, #0xff
   1e0e0:	cmp	x0, #0x0
   1e0e4:	b.eq	1e130 <omp_in_final@@OMP_3.1+0xd64>  // b.none
   1e0e8:	ldr	x0, [x29, #192]
   1e0ec:	ldr	w0, [x0, #44]
   1e0f0:	mov	w1, w0
   1e0f4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1e0f8:	add	x0, x0, #0x688
   1e0fc:	ldr	x0, [x0]
   1e100:	cmp	x1, x0
   1e104:	b.cs	1e130 <omp_in_final@@OMP_3.1+0xd64>  // b.hs, b.nlast
   1e108:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1e10c:	add	x0, x0, #0x610
   1e110:	ldr	x1, [x0]
   1e114:	ldr	x0, [x29, #192]
   1e118:	ldr	w0, [x0, #44]
   1e11c:	mov	w0, w0
   1e120:	lsl	x0, x0, #3
   1e124:	add	x0, x1, x0
   1e128:	ldr	x0, [x0]
   1e12c:	str	x0, [x29, #272]
   1e130:	ldr	x0, [x29, #160]
   1e134:	ldrb	w0, [x0, #26]
   1e138:	strb	w0, [x29, #270]
   1e13c:	ldrb	w0, [x29, #270]
   1e140:	cmp	w0, #0x0
   1e144:	b.eq	1e168 <omp_in_final@@OMP_3.1+0xd9c>  // b.none
   1e148:	ldr	w0, [x29, #40]
   1e14c:	and	w0, w0, #0x7
   1e150:	cmp	w0, #0x0
   1e154:	b.eq	1e168 <omp_in_final@@OMP_3.1+0xd9c>  // b.none
   1e158:	ldr	w0, [x29, #40]
   1e15c:	and	w0, w0, #0xff
   1e160:	and	w0, w0, #0x7
   1e164:	strb	w0, [x29, #270]
   1e168:	ldrb	w0, [x29, #270]
   1e16c:	strb	w0, [x29, #271]
   1e170:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1e174:	add	x0, x0, #0x638
   1e178:	ldr	x0, [x0]
   1e17c:	cmp	x0, #0x0
   1e180:	cset	w0, ne  // ne = any
   1e184:	and	w0, w0, #0xff
   1e188:	and	x0, x0, #0xff
   1e18c:	cmp	x0, #0x0
   1e190:	b.eq	1e1d8 <omp_in_final@@OMP_3.1+0xe0c>  // b.none
   1e194:	ldr	x0, [x29, #192]
   1e198:	ldr	w0, [x0, #44]
   1e19c:	mov	w1, w0
   1e1a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1e1a4:	add	x0, x0, #0x628
   1e1a8:	ldr	x0, [x0]
   1e1ac:	cmp	x1, x0
   1e1b0:	b.cs	1e1d8 <omp_in_final@@OMP_3.1+0xe0c>  // b.hs, b.nlast
   1e1b4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1e1b8:	add	x0, x0, #0x638
   1e1bc:	ldr	x1, [x0]
   1e1c0:	ldr	x0, [x29, #192]
   1e1c4:	ldr	w0, [x0, #44]
   1e1c8:	mov	w0, w0
   1e1cc:	add	x0, x1, x0
   1e1d0:	ldrb	w0, [x0]
   1e1d4:	strb	w0, [x29, #270]
   1e1d8:	ldr	x0, [x29, #192]
   1e1dc:	ldr	x0, [x0, #80]
   1e1e0:	ldr	x2, [x29, #160]
   1e1e4:	ldr	x1, [x29, #168]
   1e1e8:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   1e1ec:	ldr	x0, [x29, #192]
   1e1f0:	ldr	x0, [x0, #80]
   1e1f4:	ldr	x1, [x29, #24]
   1e1f8:	str	x1, [x0, #40]
   1e1fc:	ldr	x0, [x29, #32]
   1e200:	ldr	x1, [x29, #272]
   1e204:	str	x1, [x0, #1488]
   1e208:	ldr	x0, [x29, #32]
   1e20c:	ldrb	w1, [x29, #270]
   1e210:	strb	w1, [x0, #1514]
   1e214:	ldr	w0, [x29, #44]
   1e218:	cmp	w0, #0x1
   1e21c:	b.eq	1f710 <omp_in_final@@OMP_3.1+0x2344>  // b.none
   1e220:	mov	w0, #0x1                   	// #1
   1e224:	str	w0, [x29, #300]
   1e228:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1e22c:	add	x0, x0, #0x650
   1e230:	ldr	x0, [x0]
   1e234:	cmp	x0, #0x0
   1e238:	cset	w0, ne  // ne = any
   1e23c:	and	w0, w0, #0xff
   1e240:	and	x0, x0, #0xff
   1e244:	cmp	x0, #0x0
   1e248:	b.eq	1e444 <omp_in_final@@OMP_3.1+0x1078>  // b.none
   1e24c:	ldr	x0, [x29, #192]
   1e250:	ldr	w0, [x0, #92]
   1e254:	sub	w0, w0, #0x1
   1e258:	str	w0, [x29, #256]
   1e25c:	ldrb	w0, [x29, #271]
   1e260:	cmp	w0, #0x4
   1e264:	b.eq	1e2ec <omp_in_final@@OMP_3.1+0xf20>  // b.none
   1e268:	cmp	w0, #0x4
   1e26c:	b.gt	1e448 <omp_in_final@@OMP_3.1+0x107c>
   1e270:	cmp	w0, #0x3
   1e274:	b.eq	1e290 <omp_in_final@@OMP_3.1+0xec4>  // b.none
   1e278:	cmp	w0, #0x3
   1e27c:	b.gt	1e448 <omp_in_final@@OMP_3.1+0x107c>
   1e280:	cmp	w0, #0x1
   1e284:	b.eq	1e290 <omp_in_final@@OMP_3.1+0xec4>  // b.none
   1e288:	cmp	w0, #0x2
   1e28c:	b	1e448 <omp_in_final@@OMP_3.1+0x107c>
   1e290:	ldr	x0, [x29, #192]
   1e294:	ldr	w0, [x0, #56]
   1e298:	ldr	w1, [x29, #44]
   1e29c:	cmp	w1, w0
   1e2a0:	b.ls	1e2d8 <omp_in_final@@OMP_3.1+0xf0c>  // b.plast
   1e2a4:	ldr	x0, [x29, #192]
   1e2a8:	ldr	w0, [x0, #56]
   1e2ac:	ldr	w1, [x29, #44]
   1e2b0:	udiv	w0, w1, w0
   1e2b4:	str	w0, [x29, #264]
   1e2b8:	ldr	x0, [x29, #192]
   1e2bc:	ldr	w1, [x0, #56]
   1e2c0:	ldr	w0, [x29, #44]
   1e2c4:	udiv	w2, w0, w1
   1e2c8:	mul	w1, w2, w1
   1e2cc:	sub	w0, w0, w1
   1e2d0:	str	w0, [x29, #260]
   1e2d4:	b	1e2e0 <omp_in_final@@OMP_3.1+0xf14>
   1e2d8:	mov	w0, #0x1                   	// #1
   1e2dc:	str	w0, [x29, #264]
   1e2e0:	mov	w0, #0x1                   	// #1
   1e2e4:	str	w0, [x29, #252]
   1e2e8:	b	1e448 <omp_in_final@@OMP_3.1+0x107c>
   1e2ec:	ldr	x0, [x29, #192]
   1e2f0:	ldr	w0, [x0, #56]
   1e2f4:	ldr	w1, [x29, #44]
   1e2f8:	cmp	w1, w0
   1e2fc:	b.hi	1e3f0 <omp_in_final@@OMP_3.1+0x1024>  // b.pmore
   1e300:	ldr	x0, [x29, #192]
   1e304:	ldr	w1, [x0, #56]
   1e308:	ldr	w0, [x29, #44]
   1e30c:	udiv	w0, w1, w0
   1e310:	str	w0, [x29, #264]
   1e314:	ldr	x0, [x29, #192]
   1e318:	ldr	w0, [x0, #56]
   1e31c:	ldr	w1, [x29, #44]
   1e320:	udiv	w2, w0, w1
   1e324:	ldr	w1, [x29, #44]
   1e328:	mul	w1, w2, w1
   1e32c:	sub	w0, w0, w1
   1e330:	str	w0, [x29, #260]
   1e334:	ldr	w0, [x29, #264]
   1e338:	add	w1, w0, #0x1
   1e33c:	ldr	w0, [x29, #260]
   1e340:	mul	w1, w1, w0
   1e344:	ldr	x0, [x29, #192]
   1e348:	ldr	w0, [x0, #52]
   1e34c:	add	w0, w1, w0
   1e350:	str	w0, [x29, #260]
   1e354:	ldr	w1, [x29, #256]
   1e358:	ldr	w0, [x29, #260]
   1e35c:	cmp	w1, w0
   1e360:	b.cs	1e3a8 <omp_in_final@@OMP_3.1+0xfdc>  // b.hs, b.nlast
   1e364:	ldr	x0, [x29, #192]
   1e368:	ldr	w0, [x0, #52]
   1e36c:	ldr	w1, [x29, #256]
   1e370:	sub	w0, w1, w0
   1e374:	ldr	w1, [x29, #264]
   1e378:	add	w1, w1, #0x1
   1e37c:	udiv	w2, w0, w1
   1e380:	mul	w1, w2, w1
   1e384:	sub	w0, w0, w1
   1e388:	ldr	w1, [x29, #256]
   1e38c:	sub	w0, w1, w0
   1e390:	str	w0, [x29, #256]
   1e394:	ldr	w0, [x29, #264]
   1e398:	add	w1, w0, #0x1
   1e39c:	ldr	x0, [x29, #192]
   1e3a0:	str	w1, [x0, #56]
   1e3a4:	b	1e3e0 <omp_in_final@@OMP_3.1+0x1014>
   1e3a8:	ldr	w1, [x29, #256]
   1e3ac:	ldr	w0, [x29, #260]
   1e3b0:	sub	w0, w1, w0
   1e3b4:	ldr	w1, [x29, #264]
   1e3b8:	udiv	w2, w0, w1
   1e3bc:	ldr	w1, [x29, #264]
   1e3c0:	mul	w1, w2, w1
   1e3c4:	sub	w0, w0, w1
   1e3c8:	ldr	w1, [x29, #256]
   1e3cc:	sub	w0, w1, w0
   1e3d0:	str	w0, [x29, #256]
   1e3d4:	ldr	x0, [x29, #192]
   1e3d8:	ldr	w1, [x29, #264]
   1e3dc:	str	w1, [x0, #56]
   1e3e0:	ldr	x0, [x29, #192]
   1e3e4:	ldr	w1, [x29, #256]
   1e3e8:	str	w1, [x0, #52]
   1e3ec:	b	1e448 <omp_in_final@@OMP_3.1+0x107c>
   1e3f0:	ldr	x0, [x29, #192]
   1e3f4:	ldr	w0, [x0, #56]
   1e3f8:	ldr	w1, [x29, #44]
   1e3fc:	udiv	w0, w1, w0
   1e400:	str	w0, [x29, #264]
   1e404:	ldr	x0, [x29, #192]
   1e408:	ldr	w1, [x0, #56]
   1e40c:	ldr	w0, [x29, #44]
   1e410:	udiv	w2, w0, w1
   1e414:	mul	w1, w2, w1
   1e418:	sub	w0, w0, w1
   1e41c:	str	w0, [x29, #260]
   1e420:	ldr	x0, [x29, #192]
   1e424:	ldr	w1, [x29, #256]
   1e428:	str	w1, [x0, #52]
   1e42c:	ldr	x0, [x29, #192]
   1e430:	mov	w1, #0x1                   	// #1
   1e434:	str	w1, [x0, #56]
   1e438:	mov	w0, #0x1                   	// #1
   1e43c:	str	w0, [x29, #252]
   1e440:	b	1e448 <omp_in_final@@OMP_3.1+0x107c>
   1e444:	strb	wzr, [x29, #271]
   1e448:	ldrb	w0, [x29, #191]
   1e44c:	eor	w0, w0, #0x1
   1e450:	and	w0, w0, #0xff
   1e454:	cmp	w0, #0x0
   1e458:	b.eq	1eed8 <omp_in_final@@OMP_3.1+0x1b0c>  // b.none
   1e45c:	ldr	x0, [x29, #176]
   1e460:	ldr	w0, [x0, #12]
   1e464:	str	w0, [x29, #292]
   1e468:	ldr	w1, [x29, #44]
   1e46c:	ldr	w0, [x29, #292]
   1e470:	cmp	w1, w0
   1e474:	b.hi	1e484 <omp_in_final@@OMP_3.1+0x10b8>  // b.pmore
   1e478:	ldr	w0, [x29, #44]
   1e47c:	str	w0, [x29, #296]
   1e480:	b	1e4c0 <omp_in_final@@OMP_3.1+0x10f4>
   1e484:	ldr	w0, [x29, #292]
   1e488:	cmp	w0, #0x0
   1e48c:	b.ne	1e4a8 <omp_in_final@@OMP_3.1+0x10dc>  // b.any
   1e490:	str	wzr, [x29, #296]
   1e494:	ldr	x0, [x29, #176]
   1e498:	add	x0, x0, #0x40
   1e49c:	ldr	w1, [x29, #44]
   1e4a0:	bl	1d560 <omp_in_final@@OMP_3.1+0x194>
   1e4a4:	b	1e4c0 <omp_in_final@@OMP_3.1+0x10f4>
   1e4a8:	ldr	w0, [x29, #292]
   1e4ac:	str	w0, [x29, #296]
   1e4b0:	ldr	x0, [x29, #176]
   1e4b4:	add	x0, x0, #0x40
   1e4b8:	ldr	w1, [x29, #44]
   1e4bc:	bl	1d588 <omp_in_final@@OMP_3.1+0x1bc>
   1e4c0:	ldr	x0, [x29, #176]
   1e4c4:	ldr	w1, [x29, #44]
   1e4c8:	str	w1, [x0, #12]
   1e4cc:	ldr	x0, [x29, #176]
   1e4d0:	ldr	w0, [x0, #8]
   1e4d4:	ldr	w1, [x29, #44]
   1e4d8:	cmp	w1, w0
   1e4dc:	b.cc	1ed40 <omp_in_final@@OMP_3.1+0x1974>  // b.lo, b.ul, b.last
   1e4e0:	ldr	w0, [x29, #44]
   1e4e4:	add	w1, w0, #0x1
   1e4e8:	ldr	x0, [x29, #176]
   1e4ec:	str	w1, [x0, #8]
   1e4f0:	ldr	x0, [x29, #176]
   1e4f4:	ldr	x2, [x0]
   1e4f8:	ldr	x0, [x29, #176]
   1e4fc:	ldr	w0, [x0, #8]
   1e500:	mov	w0, w0
   1e504:	lsl	x0, x0, #3
   1e508:	mov	x1, x0
   1e50c:	mov	x0, x2
   1e510:	bl	8e54 <fprintf@plt+0x224>
   1e514:	mov	x1, x0
   1e518:	ldr	x0, [x29, #176]
   1e51c:	str	x1, [x0]
   1e520:	ldr	x0, [x29, #176]
   1e524:	ldr	x0, [x0]
   1e528:	ldr	x1, [x29, #192]
   1e52c:	str	x1, [x0]
   1e530:	b	1ed40 <omp_in_final@@OMP_3.1+0x1974>
   1e534:	ldr	x0, [x29, #192]
   1e538:	ldr	w0, [x0, #52]
   1e53c:	str	w0, [x29, #232]
   1e540:	ldr	x0, [x29, #192]
   1e544:	ldr	w0, [x0, #56]
   1e548:	str	w0, [x29, #228]
   1e54c:	str	wzr, [x29, #224]
   1e550:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1e554:	add	x0, x0, #0x650
   1e558:	ldr	x0, [x0]
   1e55c:	cmp	x0, #0x0
   1e560:	cset	w0, ne  // ne = any
   1e564:	and	w0, w0, #0xff
   1e568:	and	x0, x0, #0xff
   1e56c:	cmp	x0, #0x0
   1e570:	b.eq	1eb9c <omp_in_final@@OMP_3.1+0x17d0>  // b.none
   1e574:	ldrb	w0, [x29, #271]
   1e578:	cmp	w0, #0x4
   1e57c:	b.eq	1e62c <omp_in_final@@OMP_3.1+0x1260>  // b.none
   1e580:	cmp	w0, #0x4
   1e584:	b.gt	1e768 <omp_in_final@@OMP_3.1+0x139c>
   1e588:	cmp	w0, #0x3
   1e58c:	b.eq	1e5a8 <omp_in_final@@OMP_3.1+0x11dc>  // b.none
   1e590:	cmp	w0, #0x3
   1e594:	b.gt	1e768 <omp_in_final@@OMP_3.1+0x139c>
   1e598:	cmp	w0, #0x1
   1e59c:	b.eq	1e5a8 <omp_in_final@@OMP_3.1+0x11dc>  // b.none
   1e5a0:	cmp	w0, #0x2
   1e5a4:	b	1e768 <omp_in_final@@OMP_3.1+0x139c>
   1e5a8:	ldr	w1, [x29, #252]
   1e5ac:	ldr	w0, [x29, #264]
   1e5b0:	cmp	w1, w0
   1e5b4:	b.ne	1e61c <omp_in_final@@OMP_3.1+0x1250>  // b.any
   1e5b8:	ldr	w0, [x29, #256]
   1e5bc:	add	w0, w0, #0x1
   1e5c0:	str	w0, [x29, #256]
   1e5c4:	ldr	x0, [x29, #32]
   1e5c8:	ldr	w1, [x0, #44]
   1e5cc:	ldr	x0, [x29, #32]
   1e5d0:	ldr	w0, [x0, #48]
   1e5d4:	add	w0, w1, w0
   1e5d8:	ldr	w1, [x29, #256]
   1e5dc:	cmp	w1, w0
   1e5e0:	b.ne	1e5f0 <omp_in_final@@OMP_3.1+0x1224>  // b.any
   1e5e4:	ldr	x0, [x29, #32]
   1e5e8:	ldr	w0, [x0, #44]
   1e5ec:	str	w0, [x29, #256]
   1e5f0:	mov	w0, #0x1                   	// #1
   1e5f4:	str	w0, [x29, #252]
   1e5f8:	ldr	w1, [x29, #44]
   1e5fc:	ldr	w0, [x29, #260]
   1e600:	sub	w0, w1, w0
   1e604:	ldr	w1, [x29, #300]
   1e608:	cmp	w1, w0
   1e60c:	b.ne	1e764 <omp_in_final@@OMP_3.1+0x1398>  // b.any
   1e610:	mov	w0, #0x1                   	// #1
   1e614:	str	w0, [x29, #264]
   1e618:	b	1e764 <omp_in_final@@OMP_3.1+0x1398>
   1e61c:	ldr	w0, [x29, #252]
   1e620:	add	w0, w0, #0x1
   1e624:	str	w0, [x29, #252]
   1e628:	b	1e764 <omp_in_final@@OMP_3.1+0x1398>
   1e62c:	ldr	w0, [x29, #252]
   1e630:	cmp	w0, #0x0
   1e634:	b.ne	1e6d0 <omp_in_final@@OMP_3.1+0x1304>  // b.any
   1e638:	ldr	w1, [x29, #256]
   1e63c:	ldr	w0, [x29, #260]
   1e640:	cmp	w1, w0
   1e644:	b.cs	1e660 <omp_in_final@@OMP_3.1+0x1294>  // b.hs, b.nlast
   1e648:	ldr	w1, [x29, #264]
   1e64c:	ldr	w0, [x29, #256]
   1e650:	add	w0, w1, w0
   1e654:	add	w0, w0, #0x1
   1e658:	str	w0, [x29, #256]
   1e65c:	b	1e670 <omp_in_final@@OMP_3.1+0x12a4>
   1e660:	ldr	w1, [x29, #256]
   1e664:	ldr	w0, [x29, #264]
   1e668:	add	w0, w1, w0
   1e66c:	str	w0, [x29, #256]
   1e670:	ldr	x0, [x29, #32]
   1e674:	ldr	w1, [x0, #44]
   1e678:	ldr	x0, [x29, #32]
   1e67c:	ldr	w0, [x0, #48]
   1e680:	add	w0, w1, w0
   1e684:	ldr	w1, [x29, #256]
   1e688:	cmp	w1, w0
   1e68c:	b.ne	1e69c <omp_in_final@@OMP_3.1+0x12d0>  // b.any
   1e690:	ldr	x0, [x29, #32]
   1e694:	ldr	w0, [x0, #44]
   1e698:	str	w0, [x29, #256]
   1e69c:	ldr	w0, [x29, #256]
   1e6a0:	str	w0, [x29, #232]
   1e6a4:	ldr	w1, [x29, #256]
   1e6a8:	ldr	w0, [x29, #260]
   1e6ac:	cmp	w1, w0
   1e6b0:	b.cs	1e6c4 <omp_in_final@@OMP_3.1+0x12f8>  // b.hs, b.nlast
   1e6b4:	ldr	w0, [x29, #264]
   1e6b8:	add	w0, w0, #0x1
   1e6bc:	str	w0, [x29, #228]
   1e6c0:	b	1e768 <omp_in_final@@OMP_3.1+0x139c>
   1e6c4:	ldr	w0, [x29, #264]
   1e6c8:	str	w0, [x29, #228]
   1e6cc:	b	1e768 <omp_in_final@@OMP_3.1+0x139c>
   1e6d0:	ldr	w1, [x29, #252]
   1e6d4:	ldr	w0, [x29, #264]
   1e6d8:	cmp	w1, w0
   1e6dc:	b.ne	1e744 <omp_in_final@@OMP_3.1+0x1378>  // b.any
   1e6e0:	ldr	w0, [x29, #256]
   1e6e4:	add	w0, w0, #0x1
   1e6e8:	str	w0, [x29, #256]
   1e6ec:	ldr	x0, [x29, #32]
   1e6f0:	ldr	w1, [x0, #44]
   1e6f4:	ldr	x0, [x29, #32]
   1e6f8:	ldr	w0, [x0, #48]
   1e6fc:	add	w0, w1, w0
   1e700:	ldr	w1, [x29, #256]
   1e704:	cmp	w1, w0
   1e708:	b.ne	1e718 <omp_in_final@@OMP_3.1+0x134c>  // b.any
   1e70c:	ldr	x0, [x29, #32]
   1e710:	ldr	w0, [x0, #44]
   1e714:	str	w0, [x29, #256]
   1e718:	mov	w0, #0x1                   	// #1
   1e71c:	str	w0, [x29, #252]
   1e720:	ldr	w1, [x29, #44]
   1e724:	ldr	w0, [x29, #260]
   1e728:	sub	w0, w1, w0
   1e72c:	ldr	w1, [x29, #300]
   1e730:	cmp	w1, w0
   1e734:	b.ne	1e750 <omp_in_final@@OMP_3.1+0x1384>  // b.any
   1e738:	mov	w0, #0x1                   	// #1
   1e73c:	str	w0, [x29, #264]
   1e740:	b	1e750 <omp_in_final@@OMP_3.1+0x1384>
   1e744:	ldr	w0, [x29, #252]
   1e748:	add	w0, w0, #0x1
   1e74c:	str	w0, [x29, #252]
   1e750:	ldr	w0, [x29, #256]
   1e754:	str	w0, [x29, #232]
   1e758:	mov	w0, #0x1                   	// #1
   1e75c:	str	w0, [x29, #228]
   1e760:	b	1e768 <omp_in_final@@OMP_3.1+0x139c>
   1e764:	nop
   1e768:	ldr	x0, [x29, #240]
   1e76c:	cmp	x0, #0x0
   1e770:	b.ne	1e804 <omp_in_final@@OMP_3.1+0x1438>  // b.any
   1e774:	ldrb	w0, [x29, #271]
   1e778:	cmp	w0, #0x1
   1e77c:	b.eq	1e7ac <omp_in_final@@OMP_3.1+0x13e0>  // b.none
   1e780:	ldr	x0, [x29, #176]
   1e784:	ldr	x1, [x0]
   1e788:	ldr	w0, [x29, #300]
   1e78c:	lsl	x0, x0, #3
   1e790:	add	x0, x1, x0
   1e794:	ldr	x0, [x0]
   1e798:	ldr	w1, [x0, #92]
   1e79c:	ldr	w0, [x29, #256]
   1e7a0:	add	w0, w0, #0x1
   1e7a4:	cmp	w1, w0
   1e7a8:	b.ne	1e804 <omp_in_final@@OMP_3.1+0x1438>  // b.any
   1e7ac:	ldr	x0, [x29, #176]
   1e7b0:	ldr	x1, [x0]
   1e7b4:	ldr	w0, [x29, #300]
   1e7b8:	lsl	x0, x0, #3
   1e7bc:	add	x0, x1, x0
   1e7c0:	ldr	x0, [x0]
   1e7c4:	ldr	w0, [x0, #92]
   1e7c8:	ldr	w1, [x29, #232]
   1e7cc:	cmp	w1, w0
   1e7d0:	b.cs	1e804 <omp_in_final@@OMP_3.1+0x1438>  // b.hs, b.nlast
   1e7d4:	ldr	x0, [x29, #176]
   1e7d8:	ldr	x1, [x0]
   1e7dc:	ldr	w0, [x29, #300]
   1e7e0:	lsl	x0, x0, #3
   1e7e4:	add	x0, x1, x0
   1e7e8:	ldr	x0, [x0]
   1e7ec:	ldr	w1, [x0, #92]
   1e7f0:	ldr	w2, [x29, #232]
   1e7f4:	ldr	w0, [x29, #228]
   1e7f8:	add	w0, w2, w0
   1e7fc:	cmp	w1, w0
   1e800:	b.ls	1eb70 <omp_in_final@@OMP_3.1+0x17a4>  // b.plast
   1e804:	mov	w0, #0x1                   	// #1
   1e808:	strb	w0, [x29, #239]
   1e80c:	ldr	x0, [x29, #240]
   1e810:	cmp	x0, #0x0
   1e814:	b.ne	1ea28 <omp_in_final@@OMP_3.1+0x165c>  // b.any
   1e818:	ldr	x0, [x29, #32]
   1e81c:	ldr	w0, [x0, #48]
   1e820:	cmp	w0, #0x40
   1e824:	b.ls	1e844 <omp_in_final@@OMP_3.1+0x1478>  // b.plast
   1e828:	ldr	x0, [x29, #32]
   1e82c:	ldr	w0, [x0, #48]
   1e830:	mov	w0, w0
   1e834:	lsl	x0, x0, #3
   1e838:	bl	8dd0 <fprintf@plt+0x1a0>
   1e83c:	str	x0, [x29, #240]
   1e840:	b	1e878 <omp_in_final@@OMP_3.1+0x14ac>
   1e844:	ldr	x0, [x29, #32]
   1e848:	ldr	w0, [x0, #48]
   1e84c:	mov	w0, w0
   1e850:	lsl	x0, x0, #3
   1e854:	add	x0, x0, #0xf
   1e858:	lsr	x0, x0, #4
   1e85c:	lsl	x0, x0, #4
   1e860:	sub	sp, sp, x0
   1e864:	mov	x0, sp
   1e868:	add	x0, x0, #0xf
   1e86c:	lsr	x0, x0, #4
   1e870:	lsl	x0, x0, #4
   1e874:	str	x0, [x29, #240]
   1e878:	ldr	x0, [x29, #32]
   1e87c:	ldr	w0, [x0, #48]
   1e880:	mov	w0, w0
   1e884:	lsl	x0, x0, #3
   1e888:	mov	x2, x0
   1e88c:	mov	w1, #0x0                   	// #0
   1e890:	ldr	x0, [x29, #240]
   1e894:	bl	88d0 <memset@plt>
   1e898:	ldr	w0, [x29, #300]
   1e89c:	str	w0, [x29, #216]
   1e8a0:	b	1e9b8 <omp_in_final@@OMP_3.1+0x15ec>
   1e8a4:	ldr	x0, [x29, #176]
   1e8a8:	ldr	x1, [x0]
   1e8ac:	ldr	w0, [x29, #216]
   1e8b0:	lsl	x0, x0, #3
   1e8b4:	add	x0, x1, x0
   1e8b8:	ldr	x0, [x0]
   1e8bc:	ldr	w1, [x0, #92]
   1e8c0:	ldr	x0, [x29, #32]
   1e8c4:	ldr	w0, [x0, #44]
   1e8c8:	cmp	w1, w0
   1e8cc:	b.ls	1e994 <omp_in_final@@OMP_3.1+0x15c8>  // b.plast
   1e8d0:	ldr	x0, [x29, #176]
   1e8d4:	ldr	x1, [x0]
   1e8d8:	ldr	w0, [x29, #216]
   1e8dc:	lsl	x0, x0, #3
   1e8e0:	add	x0, x1, x0
   1e8e4:	ldr	x0, [x0]
   1e8e8:	ldr	w1, [x0, #92]
   1e8ec:	ldr	x0, [x29, #32]
   1e8f0:	ldr	w2, [x0, #44]
   1e8f4:	ldr	x0, [x29, #32]
   1e8f8:	ldr	w0, [x0, #48]
   1e8fc:	add	w0, w2, w0
   1e900:	cmp	w1, w0
   1e904:	b.hi	1e994 <omp_in_final@@OMP_3.1+0x15c8>  // b.pmore
   1e908:	ldr	x0, [x29, #176]
   1e90c:	ldr	x1, [x0]
   1e910:	ldr	w0, [x29, #216]
   1e914:	lsl	x0, x0, #3
   1e918:	add	x0, x1, x0
   1e91c:	ldr	x0, [x0]
   1e920:	ldr	w1, [x0, #92]
   1e924:	ldr	x0, [x29, #32]
   1e928:	ldr	w0, [x0, #44]
   1e92c:	sub	w0, w1, w0
   1e930:	sub	w0, w0, #0x1
   1e934:	str	w0, [x29, #220]
   1e938:	ldr	w0, [x29, #220]
   1e93c:	lsl	x0, x0, #3
   1e940:	ldr	x1, [x29, #240]
   1e944:	add	x1, x1, x0
   1e948:	ldr	x0, [x29, #176]
   1e94c:	ldr	x2, [x0]
   1e950:	ldr	w0, [x29, #216]
   1e954:	lsl	x0, x0, #3
   1e958:	add	x0, x2, x0
   1e95c:	ldr	x0, [x0]
   1e960:	ldr	x1, [x1]
   1e964:	str	x1, [x0, #8]
   1e968:	ldr	x0, [x29, #176]
   1e96c:	ldr	x1, [x0]
   1e970:	ldr	w0, [x29, #216]
   1e974:	lsl	x0, x0, #3
   1e978:	add	x1, x1, x0
   1e97c:	ldr	w0, [x29, #220]
   1e980:	lsl	x0, x0, #3
   1e984:	ldr	x2, [x29, #240]
   1e988:	add	x0, x2, x0
   1e98c:	ldr	x1, [x1]
   1e990:	str	x1, [x0]
   1e994:	ldr	x0, [x29, #176]
   1e998:	ldr	x1, [x0]
   1e99c:	ldr	w0, [x29, #216]
   1e9a0:	lsl	x0, x0, #3
   1e9a4:	add	x0, x1, x0
   1e9a8:	str	xzr, [x0]
   1e9ac:	ldr	w0, [x29, #216]
   1e9b0:	add	w0, w0, #0x1
   1e9b4:	str	w0, [x29, #216]
   1e9b8:	ldr	w1, [x29, #216]
   1e9bc:	ldr	w0, [x29, #292]
   1e9c0:	cmp	w1, w0
   1e9c4:	b.cc	1e8a4 <omp_in_final@@OMP_3.1+0x14d8>  // b.lo, b.ul, b.last
   1e9c8:	ldr	w1, [x29, #44]
   1e9cc:	ldr	w0, [x29, #292]
   1e9d0:	cmp	w1, w0
   1e9d4:	b.ls	1ea10 <omp_in_final@@OMP_3.1+0x1644>  // b.plast
   1e9d8:	ldr	x0, [x29, #176]
   1e9dc:	ldr	x1, [x0]
   1e9e0:	ldr	w0, [x29, #292]
   1e9e4:	lsl	x0, x0, #3
   1e9e8:	add	x3, x1, x0
   1e9ec:	ldr	w1, [x29, #44]
   1e9f0:	ldr	w0, [x29, #292]
   1e9f4:	sub	w0, w1, w0
   1e9f8:	mov	w0, w0
   1e9fc:	lsl	x0, x0, #3
   1ea00:	mov	x2, x0
   1ea04:	mov	w1, #0x0                   	// #0
   1ea08:	mov	x0, x3
   1ea0c:	bl	88d0 <memset@plt>
   1ea10:	ldr	w0, [x29, #44]
   1ea14:	str	w0, [x29, #296]
   1ea18:	ldr	w1, [x29, #292]
   1ea1c:	ldr	w0, [x29, #300]
   1ea20:	sub	w0, w1, w0
   1ea24:	str	w0, [x29, #248]
   1ea28:	ldr	w0, [x29, #248]
   1ea2c:	cmp	w0, #0x0
   1ea30:	b.eq	1ed54 <omp_in_final@@OMP_3.1+0x1988>  // b.none
   1ea34:	ldr	w0, [x29, #256]
   1ea38:	str	w0, [x29, #220]
   1ea3c:	ldr	x0, [x29, #32]
   1ea40:	ldr	w0, [x0, #44]
   1ea44:	ldr	w1, [x29, #220]
   1ea48:	sub	w0, w1, w0
   1ea4c:	mov	w0, w0
   1ea50:	lsl	x0, x0, #3
   1ea54:	ldr	x1, [x29, #240]
   1ea58:	add	x0, x1, x0
   1ea5c:	ldr	x0, [x0]
   1ea60:	cmp	x0, #0x0
   1ea64:	b.ne	1eaf0 <omp_in_final@@OMP_3.1+0x1724>  // b.any
   1ea68:	ldrb	w0, [x29, #271]
   1ea6c:	cmp	w0, #0x1
   1ea70:	b.ne	1ed28 <omp_in_final@@OMP_3.1+0x195c>  // b.any
   1ea74:	ldr	w0, [x29, #232]
   1ea78:	str	w0, [x29, #220]
   1ea7c:	b	1eab8 <omp_in_final@@OMP_3.1+0x16ec>
   1ea80:	ldr	x0, [x29, #32]
   1ea84:	ldr	w0, [x0, #44]
   1ea88:	ldr	w1, [x29, #220]
   1ea8c:	sub	w0, w1, w0
   1ea90:	mov	w0, w0
   1ea94:	lsl	x0, x0, #3
   1ea98:	ldr	x1, [x29, #240]
   1ea9c:	add	x0, x1, x0
   1eaa0:	ldr	x0, [x0]
   1eaa4:	cmp	x0, #0x0
   1eaa8:	b.ne	1ead4 <omp_in_final@@OMP_3.1+0x1708>  // b.any
   1eaac:	ldr	w0, [x29, #220]
   1eab0:	add	w0, w0, #0x1
   1eab4:	str	w0, [x29, #220]
   1eab8:	ldr	w1, [x29, #232]
   1eabc:	ldr	w0, [x29, #228]
   1eac0:	add	w0, w1, w0
   1eac4:	ldr	w1, [x29, #220]
   1eac8:	cmp	w1, w0
   1eacc:	b.cc	1ea80 <omp_in_final@@OMP_3.1+0x16b4>  // b.lo, b.ul, b.last
   1ead0:	b	1ead8 <omp_in_final@@OMP_3.1+0x170c>
   1ead4:	nop
   1ead8:	ldr	w1, [x29, #232]
   1eadc:	ldr	w0, [x29, #228]
   1eae0:	add	w0, w1, w0
   1eae4:	ldr	w1, [x29, #220]
   1eae8:	cmp	w1, w0
   1eaec:	b.eq	1ed30 <omp_in_final@@OMP_3.1+0x1964>  // b.none
   1eaf0:	ldr	x0, [x29, #32]
   1eaf4:	ldr	w0, [x0, #44]
   1eaf8:	ldr	w1, [x29, #220]
   1eafc:	sub	w0, w1, w0
   1eb00:	mov	w0, w0
   1eb04:	lsl	x0, x0, #3
   1eb08:	ldr	x1, [x29, #240]
   1eb0c:	add	x0, x1, x0
   1eb10:	ldr	x0, [x0]
   1eb14:	str	x0, [x29, #304]
   1eb18:	ldr	x0, [x29, #32]
   1eb1c:	ldr	w0, [x0, #44]
   1eb20:	ldr	w1, [x29, #220]
   1eb24:	sub	w0, w1, w0
   1eb28:	mov	w0, w0
   1eb2c:	lsl	x0, x0, #3
   1eb30:	ldr	x1, [x29, #240]
   1eb34:	add	x0, x1, x0
   1eb38:	ldr	x1, [x29, #304]
   1eb3c:	ldr	x1, [x1, #8]
   1eb40:	str	x1, [x0]
   1eb44:	ldr	w0, [x29, #248]
   1eb48:	sub	w0, w0, #0x1
   1eb4c:	str	w0, [x29, #248]
   1eb50:	ldr	x0, [x29, #176]
   1eb54:	ldr	x1, [x0]
   1eb58:	ldr	w0, [x29, #300]
   1eb5c:	lsl	x0, x0, #3
   1eb60:	add	x0, x1, x0
   1eb64:	ldr	x1, [x29, #304]
   1eb68:	str	x1, [x0]
   1eb6c:	b	1eb8c <omp_in_final@@OMP_3.1+0x17c0>
   1eb70:	ldr	x0, [x29, #176]
   1eb74:	ldr	x1, [x0]
   1eb78:	ldr	w0, [x29, #300]
   1eb7c:	lsl	x0, x0, #3
   1eb80:	add	x0, x1, x0
   1eb84:	ldr	x0, [x0]
   1eb88:	str	x0, [x29, #304]
   1eb8c:	ldr	w0, [x29, #256]
   1eb90:	add	w0, w0, #0x1
   1eb94:	str	w0, [x29, #224]
   1eb98:	b	1ebb8 <omp_in_final@@OMP_3.1+0x17ec>
   1eb9c:	ldr	x0, [x29, #176]
   1eba0:	ldr	x1, [x0]
   1eba4:	ldr	w0, [x29, #300]
   1eba8:	lsl	x0, x0, #3
   1ebac:	add	x0, x1, x0
   1ebb0:	ldr	x0, [x0]
   1ebb4:	str	x0, [x29, #304]
   1ebb8:	ldr	x0, [x29, #304]
   1ebbc:	ldr	x1, [x29, #32]
   1ebc0:	str	x1, [x0, #16]
   1ebc4:	ldr	x0, [x29, #32]
   1ebc8:	add	x1, x0, #0x100
   1ebcc:	ldr	x0, [x29, #304]
   1ebd0:	str	x1, [x0, #24]
   1ebd4:	ldr	x0, [x29, #304]
   1ebd8:	str	xzr, [x0, #32]
   1ebdc:	ldr	x0, [x29, #304]
   1ebe0:	ldr	w1, [x29, #300]
   1ebe4:	str	w1, [x0, #40]
   1ebe8:	ldr	x0, [x29, #32]
   1ebec:	ldr	w0, [x0, #36]
   1ebf0:	add	w1, w0, #0x1
   1ebf4:	ldr	x0, [x29, #304]
   1ebf8:	str	w1, [x0, #44]
   1ebfc:	ldr	x0, [x29, #192]
   1ec00:	ldr	w1, [x0, #48]
   1ec04:	ldr	x0, [x29, #304]
   1ec08:	str	w1, [x0, #48]
   1ec0c:	ldr	x0, [x29, #304]
   1ec10:	ldr	w1, [x29, #232]
   1ec14:	str	w1, [x0, #52]
   1ec18:	ldr	x0, [x29, #304]
   1ec1c:	ldr	w1, [x29, #228]
   1ec20:	str	w1, [x0, #56]
   1ec24:	ldr	x0, [x29, #304]
   1ec28:	str	xzr, [x0, #64]
   1ec2c:	ldr	x0, [x29, #304]
   1ec30:	str	xzr, [x0, #72]
   1ec34:	ldr	w1, [x29, #300]
   1ec38:	mov	x0, x1
   1ec3c:	lsl	x0, x0, #1
   1ec40:	add	x0, x0, x1
   1ec44:	lsl	x0, x0, #2
   1ec48:	add	x0, x0, x1
   1ec4c:	lsl	x0, x0, #4
   1ec50:	add	x0, x0, #0x540
   1ec54:	ldr	x1, [x29, #32]
   1ec58:	add	x1, x1, x0
   1ec5c:	ldr	x0, [x29, #304]
   1ec60:	str	x1, [x0, #80]
   1ec64:	ldr	x0, [x29, #304]
   1ec68:	ldr	w1, [x29, #224]
   1ec6c:	str	w1, [x0, #92]
   1ec70:	ldr	x0, [x29, #304]
   1ec74:	ldr	x0, [x0, #80]
   1ec78:	ldr	x2, [x29, #160]
   1ec7c:	ldr	x1, [x29, #168]
   1ec80:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   1ec84:	ldr	x2, [x29, #32]
   1ec88:	ldr	w1, [x29, #300]
   1ec8c:	mov	x0, x1
   1ec90:	lsl	x0, x0, #1
   1ec94:	add	x0, x0, x1
   1ec98:	lsl	x0, x0, #2
   1ec9c:	add	x0, x0, x1
   1eca0:	lsl	x0, x0, #4
   1eca4:	add	x0, x2, x0
   1eca8:	ldr	x1, [x29, #272]
   1ecac:	str	x1, [x0, #1488]
   1ecb0:	ldr	x2, [x29, #32]
   1ecb4:	ldr	w1, [x29, #300]
   1ecb8:	mov	x0, x1
   1ecbc:	lsl	x0, x0, #1
   1ecc0:	add	x0, x0, x1
   1ecc4:	lsl	x0, x0, #2
   1ecc8:	add	x0, x0, x1
   1eccc:	lsl	x0, x0, #4
   1ecd0:	add	x0, x2, x0
   1ecd4:	ldrb	w1, [x29, #270]
   1ecd8:	strb	w1, [x0, #1514]
   1ecdc:	ldr	x0, [x29, #304]
   1ece0:	ldr	x0, [x0, #80]
   1ece4:	ldr	x1, [x29, #24]
   1ece8:	str	x1, [x0, #40]
   1ecec:	ldr	x0, [x29, #304]
   1ecf0:	ldr	x1, [x29, #56]
   1ecf4:	str	x1, [x0]
   1ecf8:	ldr	x0, [x29, #304]
   1ecfc:	ldr	x1, [x29, #48]
   1ed00:	str	x1, [x0, #8]
   1ed04:	ldr	x0, [x29, #32]
   1ed08:	ldr	x1, [x0, #80]
   1ed0c:	ldr	w0, [x29, #300]
   1ed10:	lsl	x0, x0, #3
   1ed14:	add	x0, x1, x0
   1ed18:	ldr	x1, [x29, #304]
   1ed1c:	add	x1, x1, #0x58
   1ed20:	str	x1, [x0]
   1ed24:	b	1ed34 <omp_in_final@@OMP_3.1+0x1968>
   1ed28:	nop
   1ed2c:	b	1ed34 <omp_in_final@@OMP_3.1+0x1968>
   1ed30:	nop
   1ed34:	ldr	w0, [x29, #300]
   1ed38:	add	w0, w0, #0x1
   1ed3c:	str	w0, [x29, #300]
   1ed40:	ldr	w1, [x29, #300]
   1ed44:	ldr	w0, [x29, #296]
   1ed48:	cmp	w1, w0
   1ed4c:	b.cc	1e534 <omp_in_final@@OMP_3.1+0x1168>  // b.lo, b.ul, b.last
   1ed50:	b	1ed58 <omp_in_final@@OMP_3.1+0x198c>
   1ed54:	nop
   1ed58:	ldr	x0, [x29, #240]
   1ed5c:	cmp	x0, #0x0
   1ed60:	cset	w0, ne  // ne = any
   1ed64:	and	w0, w0, #0xff
   1ed68:	and	x0, x0, #0xff
   1ed6c:	cmp	x0, #0x0
   1ed70:	b.eq	1eec8 <omp_in_final@@OMP_3.1+0x1afc>  // b.none
   1ed74:	ldr	w1, [x29, #44]
   1ed78:	ldr	w0, [x29, #292]
   1ed7c:	cmp	w1, w0
   1ed80:	b.hi	1eda4 <omp_in_final@@OMP_3.1+0x19d8>  // b.pmore
   1ed84:	ldr	w1, [x29, #292]
   1ed88:	ldr	w0, [x29, #44]
   1ed8c:	sub	w0, w1, w0
   1ed90:	ldr	w1, [x29, #248]
   1ed94:	cmp	w1, w0
   1ed98:	cset	w0, eq  // eq = none
   1ed9c:	and	w0, w0, #0xff
   1eda0:	b	1edb8 <omp_in_final@@OMP_3.1+0x19ec>
   1eda4:	ldr	w1, [x29, #300]
   1eda8:	ldr	w0, [x29, #292]
   1edac:	cmp	w1, w0
   1edb0:	cset	w0, eq  // eq = none
   1edb4:	and	w0, w0, #0xff
   1edb8:	cmp	w0, #0x0
   1edbc:	b.eq	1ede4 <omp_in_final@@OMP_3.1+0x1a18>  // b.none
   1edc0:	ldr	x0, [x29, #32]
   1edc4:	ldr	w0, [x0, #48]
   1edc8:	cmp	w0, #0x40
   1edcc:	b.ls	1edd8 <omp_in_final@@OMP_3.1+0x1a0c>  // b.plast
   1edd0:	ldr	x0, [x29, #240]
   1edd4:	bl	8a20 <free@plt>
   1edd8:	str	xzr, [x29, #240]
   1eddc:	str	wzr, [x29, #248]
   1ede0:	b	1eec8 <omp_in_final@@OMP_3.1+0x1afc>
   1ede4:	mov	w0, #0x1                   	// #1
   1ede8:	str	w0, [x29, #300]
   1edec:	ldrb	w0, [x29, #271]
   1edf0:	cmp	w0, #0x4
   1edf4:	b.eq	1ee64 <omp_in_final@@OMP_3.1+0x1a98>  // b.none
   1edf8:	cmp	w0, #0x4
   1edfc:	b.gt	1ee9c <omp_in_final@@OMP_3.1+0x1ad0>
   1ee00:	cmp	w0, #0x3
   1ee04:	b.eq	1ee20 <omp_in_final@@OMP_3.1+0x1a54>  // b.none
   1ee08:	cmp	w0, #0x3
   1ee0c:	b.gt	1ee9c <omp_in_final@@OMP_3.1+0x1ad0>
   1ee10:	cmp	w0, #0x1
   1ee14:	b.eq	1ee20 <omp_in_final@@OMP_3.1+0x1a54>  // b.none
   1ee18:	cmp	w0, #0x2
   1ee1c:	b	1ee9c <omp_in_final@@OMP_3.1+0x1ad0>
   1ee20:	ldr	x0, [x29, #192]
   1ee24:	ldr	w0, [x0, #56]
   1ee28:	ldr	w1, [x29, #44]
   1ee2c:	cmp	w1, w0
   1ee30:	b.ls	1ee48 <omp_in_final@@OMP_3.1+0x1a7c>  // b.plast
   1ee34:	ldr	x0, [x29, #192]
   1ee38:	ldr	w0, [x0, #56]
   1ee3c:	ldr	w1, [x29, #44]
   1ee40:	udiv	w0, w1, w0
   1ee44:	str	w0, [x29, #264]
   1ee48:	mov	w0, #0x1                   	// #1
   1ee4c:	str	w0, [x29, #252]
   1ee50:	ldr	x0, [x29, #192]
   1ee54:	ldr	w0, [x0, #92]
   1ee58:	sub	w0, w0, #0x1
   1ee5c:	str	w0, [x29, #256]
   1ee60:	b	1ee9c <omp_in_final@@OMP_3.1+0x1ad0>
   1ee64:	ldr	x0, [x29, #192]
   1ee68:	ldr	w0, [x0, #52]
   1ee6c:	str	w0, [x29, #256]
   1ee70:	ldr	w0, [x29, #252]
   1ee74:	cmp	w0, #0x0
   1ee78:	b.eq	1ee98 <omp_in_final@@OMP_3.1+0x1acc>  // b.none
   1ee7c:	ldr	x0, [x29, #32]
   1ee80:	ldr	w0, [x0, #48]
   1ee84:	ldr	w1, [x29, #44]
   1ee88:	udiv	w0, w1, w0
   1ee8c:	str	w0, [x29, #264]
   1ee90:	mov	w0, #0x1                   	// #1
   1ee94:	str	w0, [x29, #252]
   1ee98:	nop
   1ee9c:	ldr	w0, [x29, #248]
   1eea0:	cmp	w0, #0x0
   1eea4:	b.eq	1eec8 <omp_in_final@@OMP_3.1+0x1afc>  // b.none
   1eea8:	ldr	x0, [x29, #176]
   1eeac:	add	x2, x0, #0x40
   1eeb0:	ldr	w1, [x29, #44]
   1eeb4:	ldr	w0, [x29, #248]
   1eeb8:	add	w0, w1, w0
   1eebc:	mov	w1, w0
   1eec0:	mov	x0, x2
   1eec4:	bl	1d588 <omp_in_final@@OMP_3.1+0x1bc>
   1eec8:	ldr	w1, [x29, #300]
   1eecc:	ldr	w0, [x29, #44]
   1eed0:	cmp	w1, w0
   1eed4:	b.eq	1f494 <omp_in_final@@OMP_3.1+0x20c8>  // b.none
   1eed8:	ldr	w1, [x29, #44]
   1eedc:	ldr	w0, [x29, #248]
   1eee0:	add	w0, w1, w0
   1eee4:	ldr	w1, [x29, #292]
   1eee8:	cmp	w1, w0
   1eeec:	cset	w0, cc  // cc = lo, ul, last
   1eef0:	and	w0, w0, #0xff
   1eef4:	and	x0, x0, #0xff
   1eef8:	cmp	x0, #0x0
   1eefc:	b.eq	1ef54 <omp_in_final@@OMP_3.1+0x1b88>  // b.none
   1ef00:	ldr	w1, [x29, #44]
   1ef04:	ldr	w0, [x29, #248]
   1ef08:	add	w0, w1, w0
   1ef0c:	mov	w1, w0
   1ef10:	ldr	w0, [x29, #292]
   1ef14:	sub	x0, x1, x0
   1ef18:	str	x0, [x29, #208]
   1ef1c:	ldr	w0, [x29, #292]
   1ef20:	cmp	w0, #0x0
   1ef24:	b.ne	1ef34 <omp_in_final@@OMP_3.1+0x1b68>  // b.any
   1ef28:	ldr	x0, [x29, #208]
   1ef2c:	sub	x0, x0, #0x1
   1ef30:	str	x0, [x29, #208]
   1ef34:	ldr	x1, [x29, #208]
   1ef38:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1ef3c:	add	x0, x0, #0x310
   1ef40:	ldxr	x2, [x0]
   1ef44:	add	x2, x2, x1
   1ef48:	stlxr	w3, x2, [x0]
   1ef4c:	cbnz	w3, 1ef40 <omp_in_final@@OMP_3.1+0x1b74>
   1ef50:	dmb	ish
   1ef54:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1ef58:	add	x0, x0, #0x690
   1ef5c:	str	x0, [x29, #280]
   1ef60:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1ef64:	add	x0, x0, #0x650
   1ef68:	ldr	x0, [x0]
   1ef6c:	cmp	x0, #0x0
   1ef70:	cset	w0, ne  // ne = any
   1ef74:	and	w0, w0, #0xff
   1ef78:	and	x0, x0, #0xff
   1ef7c:	cmp	x0, #0x0
   1ef80:	b.eq	1efbc <omp_in_final@@OMP_3.1+0x1bf0>  // b.none
   1ef84:	add	x0, x29, #0x50
   1ef88:	bl	8780 <pthread_attr_init@plt>
   1ef8c:	add	x0, x29, #0x48
   1ef90:	mov	x1, x0
   1ef94:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1ef98:	add	x0, x0, #0x690
   1ef9c:	bl	8b20 <pthread_attr_getstacksize@plt>
   1efa0:	cmp	w0, #0x0
   1efa4:	b.ne	1efb4 <omp_in_final@@OMP_3.1+0x1be8>  // b.any
   1efa8:	ldr	x1, [x29, #72]
   1efac:	add	x0, x29, #0x50
   1efb0:	bl	88e0 <pthread_attr_setstacksize@plt>
   1efb4:	add	x0, x29, #0x50
   1efb8:	str	x0, [x29, #280]
   1efbc:	ldr	w1, [x29, #44]
   1efc0:	ldr	w0, [x29, #300]
   1efc4:	sub	w0, w1, w0
   1efc8:	mov	w1, w0
   1efcc:	mov	x0, x1
   1efd0:	lsl	x0, x0, #3
   1efd4:	sub	x0, x0, x1
   1efd8:	lsl	x0, x0, #4
   1efdc:	add	x0, x0, #0xf
   1efe0:	lsr	x0, x0, #4
   1efe4:	lsl	x0, x0, #4
   1efe8:	sub	sp, sp, x0
   1efec:	mov	x0, sp
   1eff0:	add	x0, x0, #0xf
   1eff4:	lsr	x0, x0, #4
   1eff8:	lsl	x0, x0, #4
   1effc:	str	x0, [x29, #312]
   1f000:	b	1f458 <omp_in_final@@OMP_3.1+0x208c>
   1f004:	ldr	x0, [x29, #192]
   1f008:	ldr	w1, [x0, #52]
   1f00c:	ldr	x0, [x29, #312]
   1f010:	str	w1, [x0, #52]
   1f014:	ldr	x0, [x29, #192]
   1f018:	ldr	w1, [x0, #56]
   1f01c:	ldr	x0, [x29, #312]
   1f020:	str	w1, [x0, #56]
   1f024:	ldr	x0, [x29, #312]
   1f028:	str	wzr, [x0, #96]
   1f02c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1f030:	add	x0, x0, #0x650
   1f034:	ldr	x0, [x0]
   1f038:	cmp	x0, #0x0
   1f03c:	cset	w0, ne  // ne = any
   1f040:	and	w0, w0, #0xff
   1f044:	and	x0, x0, #0xff
   1f048:	cmp	x0, #0x0
   1f04c:	b.eq	1f2a0 <omp_in_final@@OMP_3.1+0x1ed4>  // b.none
   1f050:	ldrb	w0, [x29, #271]
   1f054:	cmp	w0, #0x4
   1f058:	b.eq	1f108 <omp_in_final@@OMP_3.1+0x1d3c>  // b.none
   1f05c:	cmp	w0, #0x4
   1f060:	b.gt	1f258 <omp_in_final@@OMP_3.1+0x1e8c>
   1f064:	cmp	w0, #0x3
   1f068:	b.eq	1f084 <omp_in_final@@OMP_3.1+0x1cb8>  // b.none
   1f06c:	cmp	w0, #0x3
   1f070:	b.gt	1f258 <omp_in_final@@OMP_3.1+0x1e8c>
   1f074:	cmp	w0, #0x1
   1f078:	b.eq	1f084 <omp_in_final@@OMP_3.1+0x1cb8>  // b.none
   1f07c:	cmp	w0, #0x2
   1f080:	b	1f258 <omp_in_final@@OMP_3.1+0x1e8c>
   1f084:	ldr	w1, [x29, #252]
   1f088:	ldr	w0, [x29, #264]
   1f08c:	cmp	w1, w0
   1f090:	b.ne	1f0f8 <omp_in_final@@OMP_3.1+0x1d2c>  // b.any
   1f094:	ldr	w0, [x29, #256]
   1f098:	add	w0, w0, #0x1
   1f09c:	str	w0, [x29, #256]
   1f0a0:	ldr	x0, [x29, #32]
   1f0a4:	ldr	w1, [x0, #44]
   1f0a8:	ldr	x0, [x29, #32]
   1f0ac:	ldr	w0, [x0, #48]
   1f0b0:	add	w0, w1, w0
   1f0b4:	ldr	w1, [x29, #256]
   1f0b8:	cmp	w1, w0
   1f0bc:	b.ne	1f0cc <omp_in_final@@OMP_3.1+0x1d00>  // b.any
   1f0c0:	ldr	x0, [x29, #32]
   1f0c4:	ldr	w0, [x0, #44]
   1f0c8:	str	w0, [x29, #256]
   1f0cc:	mov	w0, #0x1                   	// #1
   1f0d0:	str	w0, [x29, #252]
   1f0d4:	ldr	w1, [x29, #44]
   1f0d8:	ldr	w0, [x29, #260]
   1f0dc:	sub	w0, w1, w0
   1f0e0:	ldr	w1, [x29, #300]
   1f0e4:	cmp	w1, w0
   1f0e8:	b.ne	1f254 <omp_in_final@@OMP_3.1+0x1e88>  // b.any
   1f0ec:	mov	w0, #0x1                   	// #1
   1f0f0:	str	w0, [x29, #264]
   1f0f4:	b	1f254 <omp_in_final@@OMP_3.1+0x1e88>
   1f0f8:	ldr	w0, [x29, #252]
   1f0fc:	add	w0, w0, #0x1
   1f100:	str	w0, [x29, #252]
   1f104:	b	1f254 <omp_in_final@@OMP_3.1+0x1e88>
   1f108:	ldr	w0, [x29, #252]
   1f10c:	cmp	w0, #0x0
   1f110:	b.ne	1f1b8 <omp_in_final@@OMP_3.1+0x1dec>  // b.any
   1f114:	ldr	w1, [x29, #256]
   1f118:	ldr	w0, [x29, #260]
   1f11c:	cmp	w1, w0
   1f120:	b.cs	1f13c <omp_in_final@@OMP_3.1+0x1d70>  // b.hs, b.nlast
   1f124:	ldr	w1, [x29, #264]
   1f128:	ldr	w0, [x29, #256]
   1f12c:	add	w0, w1, w0
   1f130:	add	w0, w0, #0x1
   1f134:	str	w0, [x29, #256]
   1f138:	b	1f14c <omp_in_final@@OMP_3.1+0x1d80>
   1f13c:	ldr	w1, [x29, #256]
   1f140:	ldr	w0, [x29, #264]
   1f144:	add	w0, w1, w0
   1f148:	str	w0, [x29, #256]
   1f14c:	ldr	x0, [x29, #32]
   1f150:	ldr	w1, [x0, #44]
   1f154:	ldr	x0, [x29, #32]
   1f158:	ldr	w0, [x0, #48]
   1f15c:	add	w0, w1, w0
   1f160:	ldr	w1, [x29, #256]
   1f164:	cmp	w1, w0
   1f168:	b.ne	1f178 <omp_in_final@@OMP_3.1+0x1dac>  // b.any
   1f16c:	ldr	x0, [x29, #32]
   1f170:	ldr	w0, [x0, #44]
   1f174:	str	w0, [x29, #256]
   1f178:	ldr	x0, [x29, #312]
   1f17c:	ldr	w1, [x29, #256]
   1f180:	str	w1, [x0, #52]
   1f184:	ldr	w1, [x29, #256]
   1f188:	ldr	w0, [x29, #260]
   1f18c:	cmp	w1, w0
   1f190:	b.cs	1f1a8 <omp_in_final@@OMP_3.1+0x1ddc>  // b.hs, b.nlast
   1f194:	ldr	w0, [x29, #264]
   1f198:	add	w1, w0, #0x1
   1f19c:	ldr	x0, [x29, #312]
   1f1a0:	str	w1, [x0, #56]
   1f1a4:	b	1f258 <omp_in_final@@OMP_3.1+0x1e8c>
   1f1a8:	ldr	x0, [x29, #312]
   1f1ac:	ldr	w1, [x29, #264]
   1f1b0:	str	w1, [x0, #56]
   1f1b4:	b	1f258 <omp_in_final@@OMP_3.1+0x1e8c>
   1f1b8:	ldr	w1, [x29, #252]
   1f1bc:	ldr	w0, [x29, #264]
   1f1c0:	cmp	w1, w0
   1f1c4:	b.ne	1f22c <omp_in_final@@OMP_3.1+0x1e60>  // b.any
   1f1c8:	ldr	w0, [x29, #256]
   1f1cc:	add	w0, w0, #0x1
   1f1d0:	str	w0, [x29, #256]
   1f1d4:	ldr	x0, [x29, #32]
   1f1d8:	ldr	w1, [x0, #44]
   1f1dc:	ldr	x0, [x29, #32]
   1f1e0:	ldr	w0, [x0, #48]
   1f1e4:	add	w0, w1, w0
   1f1e8:	ldr	w1, [x29, #256]
   1f1ec:	cmp	w1, w0
   1f1f0:	b.ne	1f200 <omp_in_final@@OMP_3.1+0x1e34>  // b.any
   1f1f4:	ldr	x0, [x29, #32]
   1f1f8:	ldr	w0, [x0, #44]
   1f1fc:	str	w0, [x29, #256]
   1f200:	mov	w0, #0x1                   	// #1
   1f204:	str	w0, [x29, #252]
   1f208:	ldr	w1, [x29, #44]
   1f20c:	ldr	w0, [x29, #260]
   1f210:	sub	w0, w1, w0
   1f214:	ldr	w1, [x29, #300]
   1f218:	cmp	w1, w0
   1f21c:	b.ne	1f238 <omp_in_final@@OMP_3.1+0x1e6c>  // b.any
   1f220:	mov	w0, #0x1                   	// #1
   1f224:	str	w0, [x29, #264]
   1f228:	b	1f238 <omp_in_final@@OMP_3.1+0x1e6c>
   1f22c:	ldr	w0, [x29, #252]
   1f230:	add	w0, w0, #0x1
   1f234:	str	w0, [x29, #252]
   1f238:	ldr	x0, [x29, #312]
   1f23c:	ldr	w1, [x29, #256]
   1f240:	str	w1, [x0, #52]
   1f244:	ldr	x0, [x29, #312]
   1f248:	mov	w1, #0x1                   	// #1
   1f24c:	str	w1, [x0, #56]
   1f250:	b	1f258 <omp_in_final@@OMP_3.1+0x1e8c>
   1f254:	nop
   1f258:	ldr	w0, [x29, #256]
   1f25c:	add	w1, w0, #0x1
   1f260:	ldr	x0, [x29, #312]
   1f264:	str	w1, [x0, #96]
   1f268:	ldr	x0, [x29, #240]
   1f26c:	cmp	x0, #0x0
   1f270:	b.eq	1f294 <omp_in_final@@OMP_3.1+0x1ec8>  // b.none
   1f274:	ldr	x0, [x29, #176]
   1f278:	ldr	x1, [x0]
   1f27c:	ldr	w0, [x29, #300]
   1f280:	lsl	x0, x0, #3
   1f284:	add	x0, x1, x0
   1f288:	ldr	x0, [x0]
   1f28c:	cmp	x0, #0x0
   1f290:	b.ne	1f448 <omp_in_final@@OMP_3.1+0x207c>  // b.any
   1f294:	ldr	w1, [x29, #256]
   1f298:	ldr	x0, [x29, #280]
   1f29c:	bl	237f0 <omp_pause_resource_all_@@OMP_5.0+0xe8>
   1f2a0:	ldr	x0, [x29, #312]
   1f2a4:	ldr	x1, [x29, #56]
   1f2a8:	str	x1, [x0]
   1f2ac:	ldr	x0, [x29, #312]
   1f2b0:	ldr	x1, [x29, #48]
   1f2b4:	str	x1, [x0, #8]
   1f2b8:	ldr	x0, [x29, #312]
   1f2bc:	ldr	x1, [x29, #32]
   1f2c0:	str	x1, [x0, #16]
   1f2c4:	ldr	x0, [x29, #32]
   1f2c8:	add	x1, x0, #0x100
   1f2cc:	ldr	x0, [x29, #312]
   1f2d0:	str	x1, [x0, #24]
   1f2d4:	ldr	x0, [x29, #312]
   1f2d8:	str	xzr, [x0, #32]
   1f2dc:	ldr	x0, [x29, #312]
   1f2e0:	ldr	w1, [x29, #300]
   1f2e4:	str	w1, [x0, #40]
   1f2e8:	ldr	x0, [x29, #32]
   1f2ec:	ldr	w0, [x0, #36]
   1f2f0:	add	w1, w0, #0x1
   1f2f4:	ldr	x0, [x29, #312]
   1f2f8:	str	w1, [x0, #44]
   1f2fc:	ldr	x0, [x29, #192]
   1f300:	ldr	w1, [x0, #48]
   1f304:	ldr	x0, [x29, #312]
   1f308:	str	w1, [x0, #48]
   1f30c:	ldr	x0, [x29, #312]
   1f310:	str	xzr, [x0, #64]
   1f314:	ldr	x0, [x29, #312]
   1f318:	str	xzr, [x0, #72]
   1f31c:	ldr	w1, [x29, #300]
   1f320:	mov	x0, x1
   1f324:	lsl	x0, x0, #1
   1f328:	add	x0, x0, x1
   1f32c:	lsl	x0, x0, #2
   1f330:	add	x0, x0, x1
   1f334:	lsl	x0, x0, #4
   1f338:	add	x0, x0, #0x540
   1f33c:	ldr	x1, [x29, #32]
   1f340:	add	x1, x1, x0
   1f344:	ldr	x0, [x29, #312]
   1f348:	str	x1, [x0, #80]
   1f34c:	ldr	x0, [x29, #312]
   1f350:	ldr	x0, [x0, #80]
   1f354:	ldr	x2, [x29, #160]
   1f358:	ldr	x1, [x29, #168]
   1f35c:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   1f360:	ldr	x2, [x29, #32]
   1f364:	ldr	w1, [x29, #300]
   1f368:	mov	x0, x1
   1f36c:	lsl	x0, x0, #1
   1f370:	add	x0, x0, x1
   1f374:	lsl	x0, x0, #2
   1f378:	add	x0, x0, x1
   1f37c:	lsl	x0, x0, #4
   1f380:	add	x0, x2, x0
   1f384:	ldr	x1, [x29, #272]
   1f388:	str	x1, [x0, #1488]
   1f38c:	ldr	x2, [x29, #32]
   1f390:	ldr	w1, [x29, #300]
   1f394:	mov	x0, x1
   1f398:	lsl	x0, x0, #1
   1f39c:	add	x0, x0, x1
   1f3a0:	lsl	x0, x0, #2
   1f3a4:	add	x0, x0, x1
   1f3a8:	lsl	x0, x0, #4
   1f3ac:	add	x0, x2, x0
   1f3b0:	ldrb	w1, [x29, #270]
   1f3b4:	strb	w1, [x0, #1514]
   1f3b8:	ldr	x0, [x29, #312]
   1f3bc:	ldr	x0, [x0, #80]
   1f3c0:	ldr	x1, [x29, #24]
   1f3c4:	str	x1, [x0, #40]
   1f3c8:	ldr	x0, [x29, #312]
   1f3cc:	ldr	x1, [x29, #176]
   1f3d0:	str	x1, [x0, #88]
   1f3d4:	ldr	x0, [x29, #312]
   1f3d8:	ldrb	w1, [x29, #191]
   1f3dc:	strb	w1, [x0, #100]
   1f3e0:	add	x0, x29, #0x50
   1f3e4:	mov	x1, x0
   1f3e8:	ldr	x0, [x29, #280]
   1f3ec:	bl	1d848 <omp_in_final@@OMP_3.1+0x47c>
   1f3f0:	str	x0, [x29, #280]
   1f3f4:	ldr	x0, [x29, #312]
   1f3f8:	add	x4, x0, #0x68
   1f3fc:	ldr	x3, [x29, #312]
   1f400:	adrp	x0, 1d000 <GOMP_task_reduction_remap@@GOMP_5.0+0x820>
   1f404:	add	x2, x0, #0x860
   1f408:	ldr	x1, [x29, #280]
   1f40c:	mov	x0, x4
   1f410:	bl	8950 <pthread_create@plt>
   1f414:	str	w0, [x29, #156]
   1f418:	ldr	x0, [x29, #312]
   1f41c:	add	x0, x0, #0x70
   1f420:	str	x0, [x29, #312]
   1f424:	ldr	w0, [x29, #156]
   1f428:	cmp	w0, #0x0
   1f42c:	b.eq	1f44c <omp_in_final@@OMP_3.1+0x2080>  // b.none
   1f430:	ldr	w0, [x29, #156]
   1f434:	bl	8940 <strerror@plt>
   1f438:	mov	x1, x0
   1f43c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   1f440:	add	x0, x0, #0x520
   1f444:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   1f448:	nop
   1f44c:	ldr	w0, [x29, #300]
   1f450:	add	w0, w0, #0x1
   1f454:	str	w0, [x29, #300]
   1f458:	ldr	w1, [x29, #300]
   1f45c:	ldr	w0, [x29, #44]
   1f460:	cmp	w1, w0
   1f464:	b.cc	1f004 <omp_in_final@@OMP_3.1+0x1c38>  // b.lo, b.ul, b.last
   1f468:	add	x0, x29, #0x50
   1f46c:	ldr	x1, [x29, #280]
   1f470:	cmp	x1, x0
   1f474:	cset	w0, eq  // eq = none
   1f478:	and	w0, w0, #0xff
   1f47c:	and	x0, x0, #0xff
   1f480:	cmp	x0, #0x0
   1f484:	b.eq	1f49c <omp_in_final@@OMP_3.1+0x20d0>  // b.none
   1f488:	add	x0, x29, #0x50
   1f48c:	bl	8890 <pthread_attr_destroy@plt>
   1f490:	b	1f4a0 <omp_in_final@@OMP_3.1+0x20d4>
   1f494:	nop
   1f498:	b	1f4a0 <omp_in_final@@OMP_3.1+0x20d4>
   1f49c:	nop
   1f4a0:	ldrb	w0, [x29, #191]
   1f4a4:	cmp	w0, #0x0
   1f4a8:	b.eq	1f4bc <omp_in_final@@OMP_3.1+0x20f0>  // b.none
   1f4ac:	ldr	x0, [x29, #32]
   1f4b0:	add	x0, x0, #0x80
   1f4b4:	bl	21ff4 <omp_get_num_procs@@OMP_1.0+0x998>
   1f4b8:	b	1f4c8 <omp_in_final@@OMP_3.1+0x20fc>
   1f4bc:	ldr	x0, [x29, #176]
   1f4c0:	add	x0, x0, #0x40
   1f4c4:	bl	1d5d0 <omp_in_final@@OMP_3.1+0x204>
   1f4c8:	ldr	w1, [x29, #44]
   1f4cc:	ldr	w0, [x29, #292]
   1f4d0:	cmp	w1, w0
   1f4d4:	cset	w0, cc  // cc = lo, ul, last
   1f4d8:	and	w0, w0, #0xff
   1f4dc:	and	x0, x0, #0xff
   1f4e0:	cmp	x0, #0x0
   1f4e4:	b.ne	1f4f4 <omp_in_final@@OMP_3.1+0x2128>  // b.any
   1f4e8:	ldr	w0, [x29, #248]
   1f4ec:	cmp	x0, #0x0
   1f4f0:	b.eq	1f550 <omp_in_final@@OMP_3.1+0x2184>  // b.none
   1f4f4:	ldr	w1, [x29, #44]
   1f4f8:	ldr	w0, [x29, #292]
   1f4fc:	sub	x0, x1, x0
   1f500:	str	x0, [x29, #200]
   1f504:	ldr	w0, [x29, #248]
   1f508:	cmp	w0, #0x0
   1f50c:	b.eq	1f520 <omp_in_final@@OMP_3.1+0x2154>  // b.none
   1f510:	ldr	w0, [x29, #248]
   1f514:	neg	w0, w0
   1f518:	mov	w0, w0
   1f51c:	str	x0, [x29, #200]
   1f520:	ldr	x0, [x29, #176]
   1f524:	add	x0, x0, #0x40
   1f528:	ldr	w1, [x29, #44]
   1f52c:	bl	1d588 <omp_in_final@@OMP_3.1+0x1bc>
   1f530:	ldr	x1, [x29, #200]
   1f534:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1f538:	add	x0, x0, #0x310
   1f53c:	ldxr	x2, [x0]
   1f540:	add	x2, x2, x1
   1f544:	stlxr	w3, x2, [x0]
   1f548:	cbnz	w3, 1f53c <omp_in_final@@OMP_3.1+0x2170>
   1f54c:	dmb	ish
   1f550:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1f554:	add	x0, x0, #0x620
   1f558:	ldrb	w0, [x0]
   1f55c:	and	x0, x0, #0xff
   1f560:	cmp	x0, #0x0
   1f564:	b.eq	1f6d8 <omp_in_final@@OMP_3.1+0x230c>  // b.none
   1f568:	ldrb	w0, [x29, #191]
   1f56c:	cmp	w0, #0x0
   1f570:	b.ne	1f590 <omp_in_final@@OMP_3.1+0x21c4>  // b.any
   1f574:	ldr	w1, [x29, #44]
   1f578:	ldr	w0, [x29, #292]
   1f57c:	cmp	w1, w0
   1f580:	b.ne	1f590 <omp_in_final@@OMP_3.1+0x21c4>  // b.any
   1f584:	ldrb	w0, [x29, #239]
   1f588:	cmp	w0, #0x0
   1f58c:	b.eq	1f6d8 <omp_in_final@@OMP_3.1+0x230c>  // b.none
   1f590:	bl	1d738 <omp_in_final@@OMP_3.1+0x36c>
   1f594:	mov	x3, x0
   1f598:	ldr	x0, [x29, #192]
   1f59c:	add	x1, x0, #0x10
   1f5a0:	ldr	x0, [x29, #192]
   1f5a4:	ldr	w0, [x0, #92]
   1f5a8:	mov	w2, w0
   1f5ac:	mov	x0, x3
   1f5b0:	bl	347ac <omp_display_affinity@@OMP_5.0+0xb8>
   1f5b4:	ldrb	w0, [x29, #191]
   1f5b8:	cmp	w0, #0x0
   1f5bc:	b.eq	1f648 <omp_in_final@@OMP_3.1+0x227c>  // b.none
   1f5c0:	ldr	w0, [x29, #44]
   1f5c4:	sub	w0, w0, #0x1
   1f5c8:	mov	w1, w0
   1f5cc:	mov	x0, x1
   1f5d0:	lsl	x0, x0, #3
   1f5d4:	sub	x0, x0, x1
   1f5d8:	lsl	x0, x0, #4
   1f5dc:	neg	x0, x0
   1f5e0:	ldr	x1, [x29, #312]
   1f5e4:	add	x0, x1, x0
   1f5e8:	str	x0, [x29, #312]
   1f5ec:	mov	w0, #0x1                   	// #1
   1f5f0:	str	w0, [x29, #300]
   1f5f4:	b	1f634 <omp_in_final@@OMP_3.1+0x2268>
   1f5f8:	ldr	x0, [x29, #312]
   1f5fc:	ldr	x3, [x0, #104]
   1f600:	ldr	x0, [x29, #312]
   1f604:	add	x1, x0, #0x10
   1f608:	ldr	x0, [x29, #312]
   1f60c:	ldr	w0, [x0, #96]
   1f610:	mov	w2, w0
   1f614:	mov	x0, x3
   1f618:	bl	347ac <omp_display_affinity@@OMP_5.0+0xb8>
   1f61c:	ldr	x0, [x29, #312]
   1f620:	add	x0, x0, #0x70
   1f624:	str	x0, [x29, #312]
   1f628:	ldr	w0, [x29, #300]
   1f62c:	add	w0, w0, #0x1
   1f630:	str	w0, [x29, #300]
   1f634:	ldr	w1, [x29, #300]
   1f638:	ldr	w0, [x29, #44]
   1f63c:	cmp	w1, w0
   1f640:	b.cc	1f5f8 <omp_in_final@@OMP_3.1+0x222c>  // b.lo, b.ul, b.last
   1f644:	b	1f6d8 <omp_in_final@@OMP_3.1+0x230c>
   1f648:	mov	w0, #0x1                   	// #1
   1f64c:	str	w0, [x29, #300]
   1f650:	b	1f6c8 <omp_in_final@@OMP_3.1+0x22fc>
   1f654:	ldr	x0, [x29, #176]
   1f658:	ldr	x1, [x0]
   1f65c:	ldr	w0, [x29, #300]
   1f660:	lsl	x0, x0, #3
   1f664:	add	x0, x1, x0
   1f668:	ldr	x0, [x0]
   1f66c:	bl	1d74c <omp_in_final@@OMP_3.1+0x380>
   1f670:	str	x0, [x29, #144]
   1f674:	ldr	x0, [x29, #176]
   1f678:	ldr	x1, [x0]
   1f67c:	ldr	w0, [x29, #300]
   1f680:	lsl	x0, x0, #3
   1f684:	add	x0, x1, x0
   1f688:	ldr	x0, [x0]
   1f68c:	add	x3, x0, #0x10
   1f690:	ldr	x0, [x29, #176]
   1f694:	ldr	x1, [x0]
   1f698:	ldr	w0, [x29, #300]
   1f69c:	lsl	x0, x0, #3
   1f6a0:	add	x0, x1, x0
   1f6a4:	ldr	x0, [x0]
   1f6a8:	ldr	w0, [x0, #92]
   1f6ac:	mov	w2, w0
   1f6b0:	mov	x1, x3
   1f6b4:	ldr	x0, [x29, #144]
   1f6b8:	bl	347ac <omp_display_affinity@@OMP_5.0+0xb8>
   1f6bc:	ldr	w0, [x29, #300]
   1f6c0:	add	w0, w0, #0x1
   1f6c4:	str	w0, [x29, #300]
   1f6c8:	ldr	w1, [x29, #300]
   1f6cc:	ldr	w0, [x29, #44]
   1f6d0:	cmp	w1, w0
   1f6d4:	b.cc	1f654 <omp_in_final@@OMP_3.1+0x2288>  // b.lo, b.ul, b.last
   1f6d8:	ldr	x0, [x29, #240]
   1f6dc:	cmp	x0, #0x0
   1f6e0:	cset	w0, ne  // ne = any
   1f6e4:	and	w0, w0, #0xff
   1f6e8:	and	x0, x0, #0xff
   1f6ec:	cmp	x0, #0x0
   1f6f0:	b.eq	1f714 <omp_in_final@@OMP_3.1+0x2348>  // b.none
   1f6f4:	ldr	x0, [x29, #32]
   1f6f8:	ldr	w0, [x0, #48]
   1f6fc:	cmp	w0, #0x40
   1f700:	b.ls	1f714 <omp_in_final@@OMP_3.1+0x2348>  // b.plast
   1f704:	ldr	x0, [x29, #240]
   1f708:	bl	8a20 <free@plt>
   1f70c:	b	1f714 <omp_in_final@@OMP_3.1+0x2348>
   1f710:	nop
   1f714:	mov	sp, x29
   1f718:	ldp	x29, x30, [sp], #320
   1f71c:	ret
   1f720:	stp	x29, x30, [sp, #-80]!
   1f724:	mov	x29, sp
   1f728:	bl	1d6e0 <omp_in_final@@OMP_3.1+0x314>
   1f72c:	str	x0, [sp, #56]
   1f730:	ldr	x0, [sp, #56]
   1f734:	ldr	x0, [x0, #16]
   1f738:	str	x0, [sp, #48]
   1f73c:	ldr	x0, [sp, #48]
   1f740:	add	x0, x0, #0x80
   1f744:	bl	22214 <omp_get_num_procs@@OMP_1.0+0xbb8>
   1f748:	ldr	x0, [sp, #48]
   1f74c:	ldr	w0, [x0, #1336]
   1f750:	sxtw	x0, w0
   1f754:	cmp	x0, #0x0
   1f758:	b.eq	1f7b4 <omp_in_final@@OMP_3.1+0x23e8>  // b.none
   1f75c:	ldr	x0, [sp, #48]
   1f760:	ldr	x0, [x0, #88]
   1f764:	str	x0, [sp, #72]
   1f768:	ldr	x0, [sp, #72]
   1f76c:	add	x0, x0, #0x50
   1f770:	bl	1d610 <omp_in_final@@OMP_3.1+0x244>
   1f774:	str	x0, [sp, #40]
   1f778:	ldr	x0, [sp, #40]
   1f77c:	cmp	x0, #0x0
   1f780:	b.ne	1f794 <omp_in_final@@OMP_3.1+0x23c8>  // b.any
   1f784:	ldr	x0, [sp, #72]
   1f788:	add	x0, x0, #0x50
   1f78c:	ldr	x1, [sp, #72]
   1f790:	bl	1d698 <omp_in_final@@OMP_3.1+0x2cc>
   1f794:	ldr	x0, [sp, #72]
   1f798:	bl	20094 <omp_in_final@@OMP_3.1+0x2cc8>
   1f79c:	ldr	x0, [sp, #40]
   1f7a0:	str	x0, [sp, #72]
   1f7a4:	ldr	x0, [sp, #72]
   1f7a8:	cmp	x0, #0x0
   1f7ac:	b.ne	1f768 <omp_in_final@@OMP_3.1+0x239c>  // b.any
   1f7b0:	b	1f7c0 <omp_in_final@@OMP_3.1+0x23f4>
   1f7b4:	ldr	x0, [sp, #56]
   1f7b8:	ldr	x0, [x0, #24]
   1f7bc:	bl	20094 <omp_in_final@@OMP_3.1+0x2cc8>
   1f7c0:	bl	16330 <GOMP_single_copy_end@@GOMP_1.0+0x1620>
   1f7c4:	ldr	x0, [sp, #56]
   1f7c8:	add	x2, x0, #0x10
   1f7cc:	ldr	x0, [sp, #48]
   1f7d0:	add	x1, x0, #0x8
   1f7d4:	mov	x0, x2
   1f7d8:	ldp	x2, x3, [x1]
   1f7dc:	stp	x2, x3, [x0]
   1f7e0:	ldp	x2, x3, [x1, #16]
   1f7e4:	stp	x2, x3, [x0, #16]
   1f7e8:	ldp	x2, x3, [x1, #32]
   1f7ec:	stp	x2, x3, [x0, #32]
   1f7f0:	ldp	x2, x3, [x1, #48]
   1f7f4:	stp	x2, x3, [x0, #48]
   1f7f8:	ldr	x0, [sp, #56]
   1f7fc:	ldr	w0, [x0, #44]
   1f800:	cmp	w0, #0x0
   1f804:	cset	w0, ne  // ne = any
   1f808:	and	w0, w0, #0xff
   1f80c:	and	x0, x0, #0xff
   1f810:	cmp	x0, #0x0
   1f814:	b.eq	1f858 <omp_in_final@@OMP_3.1+0x248c>  // b.none
   1f818:	ldr	x0, [sp, #48]
   1f81c:	ldr	w0, [x0]
   1f820:	mov	w0, w0
   1f824:	mov	x1, #0x1                   	// #1
   1f828:	sub	x0, x1, x0
   1f82c:	mov	x1, x0
   1f830:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1f834:	add	x0, x0, #0x310
   1f838:	ldxr	x2, [x0]
   1f83c:	add	x2, x2, x1
   1f840:	stlxr	w3, x2, [x0]
   1f844:	cbnz	w3, 1f838 <omp_in_final@@OMP_3.1+0x246c>
   1f848:	dmb	ish
   1f84c:	ldr	x0, [sp, #48]
   1f850:	add	x0, x0, #0x80
   1f854:	bl	21ff4 <omp_get_num_procs@@OMP_1.0+0x998>
   1f858:	ldr	x0, [sp, #48]
   1f85c:	ldr	x0, [x0, #312]
   1f860:	cmp	x0, #0x0
   1f864:	cset	w0, ne  // ne = any
   1f868:	and	w0, w0, #0xff
   1f86c:	and	x0, x0, #0xff
   1f870:	cmp	x0, #0x0
   1f874:	b.eq	1f8ac <omp_in_final@@OMP_3.1+0x24e0>  // b.none
   1f878:	ldr	x0, [sp, #48]
   1f87c:	ldr	x0, [x0, #312]
   1f880:	str	x0, [sp, #64]
   1f884:	ldr	x0, [sp, #64]
   1f888:	ldr	x0, [x0, #56]
   1f88c:	str	x0, [sp, #32]
   1f890:	ldr	x0, [sp, #64]
   1f894:	bl	8a20 <free@plt>
   1f898:	ldr	x0, [sp, #32]
   1f89c:	str	x0, [sp, #64]
   1f8a0:	ldr	x0, [sp, #64]
   1f8a4:	cmp	x0, #0x0
   1f8a8:	b.ne	1f884 <omp_in_final@@OMP_3.1+0x24b8>  // b.any
   1f8ac:	ldr	x0, [sp, #48]
   1f8b0:	add	x0, x0, #0x48
   1f8b4:	bl	1d478 <omp_in_final@@OMP_3.1+0xac>
   1f8b8:	ldr	x0, [sp, #56]
   1f8bc:	ldr	x0, [x0, #16]
   1f8c0:	cmp	x0, #0x0
   1f8c4:	cset	w0, ne  // ne = any
   1f8c8:	and	w0, w0, #0xff
   1f8cc:	and	x0, x0, #0xff
   1f8d0:	cmp	x0, #0x0
   1f8d4:	b.ne	1f8f8 <omp_in_final@@OMP_3.1+0x252c>  // b.any
   1f8d8:	ldr	x0, [sp, #48]
   1f8dc:	ldr	w0, [x0]
   1f8e0:	cmp	w0, #0x1
   1f8e4:	cset	w0, eq  // eq = none
   1f8e8:	and	w0, w0, #0xff
   1f8ec:	and	x0, x0, #0xff
   1f8f0:	cmp	x0, #0x0
   1f8f4:	b.eq	1f904 <omp_in_final@@OMP_3.1+0x2538>  // b.none
   1f8f8:	ldr	x0, [sp, #48]
   1f8fc:	bl	1dcbc <omp_in_final@@OMP_3.1+0x8f0>
   1f900:	b	1f944 <omp_in_final@@OMP_3.1+0x2578>
   1f904:	ldr	x0, [sp, #56]
   1f908:	ldr	x0, [x0, #96]
   1f90c:	str	x0, [sp, #24]
   1f910:	ldr	x0, [sp, #24]
   1f914:	ldr	x0, [x0, #16]
   1f918:	cmp	x0, #0x0
   1f91c:	b.eq	1f92c <omp_in_final@@OMP_3.1+0x2560>  // b.none
   1f920:	ldr	x0, [sp, #24]
   1f924:	ldr	x0, [x0, #16]
   1f928:	bl	1dcbc <omp_in_final@@OMP_3.1+0x8f0>
   1f92c:	ldr	x0, [sp, #24]
   1f930:	ldr	x1, [sp, #48]
   1f934:	str	x1, [x0, #16]
   1f938:	ldr	x0, [sp, #24]
   1f93c:	bl	1d834 <omp_in_final@@OMP_3.1+0x468>
   1f940:	nop
   1f944:	nop
   1f948:	ldp	x29, x30, [sp], #80
   1f94c:	ret
   1f950:	stp	x29, x30, [sp, #-16]!
   1f954:	mov	x29, sp
   1f958:	adrp	x0, 1d000 <GOMP_task_reduction_remap@@GOMP_5.0+0x820>
   1f95c:	add	x1, x0, #0xd54
   1f960:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1f964:	add	x0, x0, #0x6d0
   1f968:	bl	8720 <pthread_key_create@plt>
   1f96c:	cmp	w0, #0x0
   1f970:	b.eq	1f980 <omp_in_final@@OMP_3.1+0x25b4>  // b.none
   1f974:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   1f978:	add	x0, x0, #0x540
   1f97c:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   1f980:	nop
   1f984:	ldp	x29, x30, [sp], #16
   1f988:	ret
   1f98c:	stp	x29, x30, [sp, #-16]!
   1f990:	mov	x29, sp
   1f994:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1f998:	add	x0, x0, #0x6d0
   1f99c:	ldr	w0, [x0]
   1f9a0:	bl	8a50 <pthread_key_delete@plt>
   1f9a4:	nop
   1f9a8:	ldp	x29, x30, [sp], #16
   1f9ac:	ret
   1f9b0:	stp	x29, x30, [sp, #-48]!
   1f9b4:	mov	x29, sp
   1f9b8:	str	x0, [sp, #24]
   1f9bc:	bl	1d6e0 <omp_in_final@@OMP_3.1+0x314>
   1f9c0:	str	x0, [sp, #40]
   1f9c4:	ldr	x0, [sp, #24]
   1f9c8:	str	x0, [sp, #32]
   1f9cc:	ldr	x0, [sp, #32]
   1f9d0:	add	x0, x0, #0x40
   1f9d4:	bl	1d5f0 <omp_in_final@@OMP_3.1+0x224>
   1f9d8:	ldr	x0, [sp, #40]
   1f9dc:	add	x0, x0, #0x58
   1f9e0:	bl	1d478 <omp_in_final@@OMP_3.1+0xac>
   1f9e4:	ldr	x0, [sp, #40]
   1f9e8:	str	xzr, [x0, #96]
   1f9ec:	ldr	x0, [sp, #40]
   1f9f0:	str	xzr, [x0, #80]
   1f9f4:	mov	x0, #0x0                   	// #0
   1f9f8:	bl	8990 <pthread_exit@plt>
   1f9fc:	stp	x29, x30, [sp, #-80]!
   1fa00:	mov	x29, sp
   1fa04:	str	x19, [sp, #16]
   1fa08:	bl	1d6e0 <omp_in_final@@OMP_3.1+0x314>
   1fa0c:	str	x0, [x29, #64]
   1fa10:	ldr	x0, [x29, #64]
   1fa14:	ldr	x0, [x0, #96]
   1fa18:	str	x0, [x29, #56]
   1fa1c:	ldr	x0, [x29, #64]
   1fa20:	ldr	w0, [x0, #44]
   1fa24:	cmp	w0, #0x0
   1fa28:	b.eq	1fa34 <omp_in_final@@OMP_3.1+0x2668>  // b.none
   1fa2c:	mov	w0, #0xffffffff            	// #-1
   1fa30:	b	1fbe0 <omp_in_final@@OMP_3.1+0x2814>
   1fa34:	ldr	x0, [x29, #56]
   1fa38:	cmp	x0, #0x0
   1fa3c:	b.eq	1fbdc <omp_in_final@@OMP_3.1+0x2810>  // b.none
   1fa40:	ldr	x0, [x29, #56]
   1fa44:	ldr	w0, [x0, #12]
   1fa48:	cmp	w0, #0x0
   1fa4c:	b.eq	1fba4 <omp_in_final@@OMP_3.1+0x27d8>  // b.none
   1fa50:	ldr	x0, [x29, #56]
   1fa54:	ldr	w0, [x0, #12]
   1fa58:	mov	w0, w0
   1fa5c:	lsl	x0, x0, #3
   1fa60:	add	x0, x0, #0xf
   1fa64:	lsr	x0, x0, #4
   1fa68:	lsl	x0, x0, #4
   1fa6c:	sub	sp, sp, x0
   1fa70:	mov	x0, sp
   1fa74:	add	x0, x0, #0xf
   1fa78:	lsr	x0, x0, #4
   1fa7c:	lsl	x0, x0, #4
   1fa80:	str	x0, [x29, #48]
   1fa84:	mov	w0, #0x1                   	// #1
   1fa88:	str	w0, [x29, #76]
   1fa8c:	b	1faf0 <omp_in_final@@OMP_3.1+0x2724>
   1fa90:	ldr	x0, [x29, #56]
   1fa94:	ldr	x1, [x0]
   1fa98:	ldrsw	x0, [x29, #76]
   1fa9c:	lsl	x0, x0, #3
   1faa0:	add	x0, x1, x0
   1faa4:	ldr	x0, [x0]
   1faa8:	str	x0, [x29, #40]
   1faac:	ldr	x0, [x29, #40]
   1fab0:	adrp	x1, 1f000 <omp_in_final@@OMP_3.1+0x1c34>
   1fab4:	add	x1, x1, #0x9b0
   1fab8:	str	x1, [x0]
   1fabc:	ldr	x0, [x29, #40]
   1fac0:	ldr	x1, [x29, #56]
   1fac4:	str	x1, [x0, #8]
   1fac8:	ldrsw	x0, [x29, #76]
   1facc:	lsl	x0, x0, #3
   1fad0:	ldr	x1, [x29, #48]
   1fad4:	add	x19, x1, x0
   1fad8:	ldr	x0, [x29, #40]
   1fadc:	bl	1d74c <omp_in_final@@OMP_3.1+0x380>
   1fae0:	str	x0, [x19]
   1fae4:	ldr	w0, [x29, #76]
   1fae8:	add	w0, w0, #0x1
   1faec:	str	w0, [x29, #76]
   1faf0:	ldr	x0, [x29, #56]
   1faf4:	ldr	w1, [x0, #12]
   1faf8:	ldr	w0, [x29, #76]
   1fafc:	cmp	w1, w0
   1fb00:	b.hi	1fa90 <omp_in_final@@OMP_3.1+0x26c4>  // b.pmore
   1fb04:	ldr	x0, [x29, #56]
   1fb08:	add	x0, x0, #0x40
   1fb0c:	bl	1d5d0 <omp_in_final@@OMP_3.1+0x204>
   1fb10:	ldr	x0, [x29, #56]
   1fb14:	add	x0, x0, #0x40
   1fb18:	bl	1d5d0 <omp_in_final@@OMP_3.1+0x204>
   1fb1c:	ldr	x0, [x29, #56]
   1fb20:	add	x0, x0, #0x40
   1fb24:	bl	1d5b0 <omp_in_final@@OMP_3.1+0x1e4>
   1fb28:	ldr	x0, [x29, #56]
   1fb2c:	ldr	w0, [x0, #12]
   1fb30:	mov	w0, w0
   1fb34:	mov	x1, #0x1                   	// #1
   1fb38:	sub	x0, x1, x0
   1fb3c:	mov	x1, x0
   1fb40:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1fb44:	add	x0, x0, #0x310
   1fb48:	ldxr	x2, [x0]
   1fb4c:	add	x2, x2, x1
   1fb50:	stlxr	w3, x2, [x0]
   1fb54:	cbnz	w3, 1fb48 <omp_in_final@@OMP_3.1+0x277c>
   1fb58:	dmb	ish
   1fb5c:	mov	w0, #0x1                   	// #1
   1fb60:	str	w0, [x29, #76]
   1fb64:	b	1fb90 <omp_in_final@@OMP_3.1+0x27c4>
   1fb68:	ldrsw	x0, [x29, #76]
   1fb6c:	lsl	x0, x0, #3
   1fb70:	ldr	x1, [x29, #48]
   1fb74:	add	x0, x1, x0
   1fb78:	ldr	x0, [x0]
   1fb7c:	mov	x1, #0x0                   	// #0
   1fb80:	bl	8970 <pthread_join@plt>
   1fb84:	ldr	w0, [x29, #76]
   1fb88:	add	w0, w0, #0x1
   1fb8c:	str	w0, [x29, #76]
   1fb90:	ldr	x0, [x29, #56]
   1fb94:	ldr	w1, [x0, #12]
   1fb98:	ldr	w0, [x29, #76]
   1fb9c:	cmp	w1, w0
   1fba0:	b.hi	1fb68 <omp_in_final@@OMP_3.1+0x279c>  // b.pmore
   1fba4:	ldr	x0, [x29, #56]
   1fba8:	ldr	x0, [x0, #16]
   1fbac:	cmp	x0, #0x0
   1fbb0:	b.eq	1fbc0 <omp_in_final@@OMP_3.1+0x27f4>  // b.none
   1fbb4:	ldr	x0, [x29, #56]
   1fbb8:	ldr	x0, [x0, #16]
   1fbbc:	bl	1dcbc <omp_in_final@@OMP_3.1+0x8f0>
   1fbc0:	ldr	x0, [x29, #56]
   1fbc4:	ldr	x0, [x0]
   1fbc8:	bl	8a20 <free@plt>
   1fbcc:	ldr	x0, [x29, #56]
   1fbd0:	bl	8a20 <free@plt>
   1fbd4:	ldr	x0, [x29, #64]
   1fbd8:	str	xzr, [x0, #96]
   1fbdc:	mov	w0, #0x0                   	// #0
   1fbe0:	mov	sp, x29
   1fbe4:	ldr	x19, [sp, #16]
   1fbe8:	ldp	x29, x30, [sp], #80
   1fbec:	ret
   1fbf0:	stp	x29, x30, [sp, #-32]!
   1fbf4:	mov	x29, sp
   1fbf8:	bl	1d6e0 <omp_in_final@@OMP_3.1+0x314>
   1fbfc:	str	x0, [sp, #24]
   1fc00:	mov	x0, #0xd0                  	// #208
   1fc04:	bl	8dd0 <fprintf@plt+0x1a0>
   1fc08:	str	x0, [sp, #16]
   1fc0c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1fc10:	add	x2, x0, #0x2d8
   1fc14:	mov	x1, #0x0                   	// #0
   1fc18:	ldr	x0, [sp, #16]
   1fc1c:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   1fc20:	ldr	x0, [sp, #24]
   1fc24:	ldr	x1, [sp, #16]
   1fc28:	str	x1, [x0, #80]
   1fc2c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   1fc30:	add	x0, x0, #0x6d0
   1fc34:	ldr	w0, [x0]
   1fc38:	ldr	x1, [sp, #24]
   1fc3c:	bl	8ad0 <pthread_setspecific@plt>
   1fc40:	ldr	x0, [sp, #16]
   1fc44:	add	x0, x0, #0x90
   1fc48:	ldp	x29, x30, [sp], #32
   1fc4c:	ret
   1fc50:	sub	sp, sp, #0x10
   1fc54:	str	x0, [sp, #8]
   1fc58:	ldr	x0, [sp, #8]
   1fc5c:	str	wzr, [x0]
   1fc60:	nop
   1fc64:	add	sp, sp, #0x10
   1fc68:	ret
   1fc6c:	sub	sp, sp, #0x10
   1fc70:	str	x0, [sp, #8]
   1fc74:	nop
   1fc78:	add	sp, sp, #0x10
   1fc7c:	ret
   1fc80:	sub	sp, sp, #0x20
   1fc84:	str	x0, [sp, #8]
   1fc88:	ldr	x0, [sp, #8]
   1fc8c:	add	x0, x0, #0x4
   1fc90:	ldar	w0, [x0]
   1fc94:	str	w0, [sp, #28]
   1fc98:	ldr	w0, [sp, #28]
   1fc9c:	and	w0, w0, #0xfffffffc
   1fca0:	str	w0, [sp, #28]
   1fca4:	ldr	x0, [sp, #8]
   1fca8:	add	x0, x0, #0x40
   1fcac:	ldaxr	w1, [x0]
   1fcb0:	sub	w1, w1, #0x1
   1fcb4:	stlxr	w2, w1, [x0]
   1fcb8:	cbnz	w2, 1fcac <omp_in_final@@OMP_3.1+0x28e0>
   1fcbc:	cmp	w1, #0x0
   1fcc0:	b.ne	1fcd0 <omp_in_final@@OMP_3.1+0x2904>  // b.any
   1fcc4:	ldr	w0, [sp, #28]
   1fcc8:	orr	w0, w0, #0x1
   1fccc:	str	w0, [sp, #28]
   1fcd0:	ldr	w0, [sp, #28]
   1fcd4:	add	sp, sp, #0x20
   1fcd8:	ret
   1fcdc:	stp	x29, x30, [sp, #-32]!
   1fce0:	mov	x29, sp
   1fce4:	str	x0, [sp, #24]
   1fce8:	ldr	x0, [sp, #24]
   1fcec:	bl	1fc80 <omp_in_final@@OMP_3.1+0x28b4>
   1fcf0:	ldp	x29, x30, [sp], #32
   1fcf4:	ret
   1fcf8:	sub	sp, sp, #0x10
   1fcfc:	str	w0, [sp, #12]
   1fd00:	ldr	w0, [sp, #12]
   1fd04:	and	w0, w0, #0x1
   1fd08:	cmp	w0, #0x0
   1fd0c:	cset	w0, ne  // ne = any
   1fd10:	and	w0, w0, #0xff
   1fd14:	add	sp, sp, #0x10
   1fd18:	ret
   1fd1c:	sub	sp, sp, #0x10
   1fd20:	str	x0, [sp, #8]
   1fd24:	str	x1, [sp]
   1fd28:	ldr	x0, [sp, #8]
   1fd2c:	ldr	x1, [sp]
   1fd30:	str	x1, [x0]
   1fd34:	nop
   1fd38:	add	sp, sp, #0x10
   1fd3c:	ret
   1fd40:	stp	x29, x30, [sp, #-48]!
   1fd44:	mov	x29, sp
   1fd48:	str	x0, [sp, #24]
   1fd4c:	ldr	x0, [sp, #24]
   1fd50:	ldar	x0, [x0]
   1fd54:	str	x0, [sp, #40]
   1fd58:	ldr	x0, [sp, #40]
   1fd5c:	cmp	x0, #0x2
   1fd60:	b.ls	1fd6c <omp_in_final@@OMP_3.1+0x29a0>  // b.plast
   1fd64:	ldr	x0, [sp, #40]
   1fd68:	b	1fdc0 <omp_in_final@@OMP_3.1+0x29f4>
   1fd6c:	str	xzr, [sp, #32]
   1fd70:	ldr	x1, [sp, #24]
   1fd74:	add	x0, sp, #0x20
   1fd78:	ldr	x3, [x0]
   1fd7c:	mov	x4, #0x1                   	// #1
   1fd80:	ldaxr	x2, [x1]
   1fd84:	cmp	x2, x3
   1fd88:	b.ne	1fd94 <omp_in_final@@OMP_3.1+0x29c8>  // b.any
   1fd8c:	stxr	w5, x4, [x1]
   1fd90:	cbnz	w5, 1fd80 <omp_in_final@@OMP_3.1+0x29b4>
   1fd94:	cset	w1, eq  // eq = none
   1fd98:	cmp	w1, #0x0
   1fd9c:	b.ne	1fda4 <omp_in_final@@OMP_3.1+0x29d8>  // b.any
   1fda0:	str	x2, [x0]
   1fda4:	mov	w0, w1
   1fda8:	cmp	w0, #0x0
   1fdac:	b.eq	1fdb8 <omp_in_final@@OMP_3.1+0x29ec>  // b.none
   1fdb0:	mov	x0, #0x0                   	// #0
   1fdb4:	b	1fdc0 <omp_in_final@@OMP_3.1+0x29f4>
   1fdb8:	ldr	x0, [sp, #24]
   1fdbc:	bl	22714 <omp_get_num_procs@@OMP_1.0+0x10b8>
   1fdc0:	ldp	x29, x30, [sp], #48
   1fdc4:	ret
   1fdc8:	sub	sp, sp, #0x10
   1fdcc:	str	x0, [sp, #8]
   1fdd0:	nop
   1fdd4:	add	sp, sp, #0x10
   1fdd8:	ret
   1fddc:	mrs	x1, tpidr_el0
   1fde0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   1fde4:	ldr	x0, [x0, #4016]
   1fde8:	add	x0, x1, x0
   1fdec:	ret
   1fdf0:	stp	x29, x30, [sp, #-64]!
   1fdf4:	mov	x29, sp
   1fdf8:	str	x0, [sp, #24]
   1fdfc:	ldr	x0, [sp, #24]
   1fe00:	ldr	x0, [x0, #96]
   1fe04:	cmp	x0, #0x0
   1fe08:	b.eq	1fe30 <omp_in_final@@OMP_3.1+0x2a64>  // b.none
   1fe0c:	ldr	x0, [sp, #24]
   1fe10:	ldr	x0, [x0, #96]
   1fe14:	str	x0, [sp, #48]
   1fe18:	ldr	x0, [sp, #48]
   1fe1c:	ldr	x1, [x0, #80]
   1fe20:	ldr	x0, [sp, #24]
   1fe24:	str	x1, [x0, #96]
   1fe28:	ldr	x0, [sp, #48]
   1fe2c:	b	1ff60 <omp_in_final@@OMP_3.1+0x2b94>
   1fe30:	ldr	x0, [sp, #24]
   1fe34:	ldr	x0, [x0, #104]
   1fe38:	str	x0, [sp, #48]
   1fe3c:	ldr	x0, [sp, #48]
   1fe40:	str	x0, [sp, #48]
   1fe44:	ldr	x0, [sp, #48]
   1fe48:	cmp	x0, #0x0
   1fe4c:	b.eq	1fe8c <omp_in_final@@OMP_3.1+0x2ac0>  // b.none
   1fe50:	ldr	x0, [sp, #48]
   1fe54:	ldr	x0, [x0, #80]
   1fe58:	cmp	x0, #0x0
   1fe5c:	b.eq	1fe8c <omp_in_final@@OMP_3.1+0x2ac0>  // b.none
   1fe60:	ldr	x0, [sp, #48]
   1fe64:	ldr	x0, [x0, #80]
   1fe68:	str	x0, [sp, #40]
   1fe6c:	ldr	x0, [sp, #48]
   1fe70:	str	xzr, [x0, #80]
   1fe74:	ldr	x0, [sp, #40]
   1fe78:	ldr	x1, [x0, #80]
   1fe7c:	ldr	x0, [sp, #24]
   1fe80:	str	x1, [x0, #96]
   1fe84:	ldr	x0, [sp, #40]
   1fe88:	b	1ff60 <omp_in_final@@OMP_3.1+0x2b94>
   1fe8c:	ldr	x0, [sp, #24]
   1fe90:	ldr	w0, [x0, #4]
   1fe94:	lsl	w1, w0, #1
   1fe98:	ldr	x0, [sp, #24]
   1fe9c:	str	w1, [x0, #4]
   1fea0:	ldr	x0, [sp, #24]
   1fea4:	ldr	w0, [x0, #4]
   1fea8:	mov	w0, w0
   1feac:	lsl	x0, x0, #7
   1feb0:	mov	x1, x0
   1feb4:	mov	x0, #0x40                  	// #64
   1feb8:	bl	8e9c <fprintf@plt+0x26c>
   1febc:	str	x0, [sp, #48]
   1fec0:	ldr	x0, [sp, #24]
   1fec4:	ldr	x1, [x0, #312]
   1fec8:	ldr	x0, [sp, #48]
   1fecc:	str	x1, [x0, #56]
   1fed0:	ldr	x0, [sp, #24]
   1fed4:	ldr	x1, [sp, #48]
   1fed8:	str	x1, [x0, #312]
   1fedc:	ldr	x0, [sp, #48]
   1fee0:	add	x1, x0, #0x80
   1fee4:	ldr	x0, [sp, #24]
   1fee8:	str	x1, [x0, #96]
   1feec:	mov	w0, #0x1                   	// #1
   1fef0:	str	w0, [sp, #60]
   1fef4:	b	1ff30 <omp_in_final@@OMP_3.1+0x2b64>
   1fef8:	ldr	w0, [sp, #60]
   1fefc:	add	w0, w0, #0x1
   1ff00:	mov	w0, w0
   1ff04:	lsl	x1, x0, #7
   1ff08:	ldr	w0, [sp, #60]
   1ff0c:	lsl	x0, x0, #7
   1ff10:	ldr	x2, [sp, #48]
   1ff14:	add	x0, x2, x0
   1ff18:	ldr	x2, [sp, #48]
   1ff1c:	add	x1, x2, x1
   1ff20:	str	x1, [x0, #80]
   1ff24:	ldr	w0, [sp, #60]
   1ff28:	add	w0, w0, #0x1
   1ff2c:	str	w0, [sp, #60]
   1ff30:	ldr	x0, [sp, #24]
   1ff34:	ldr	w0, [x0, #4]
   1ff38:	sub	w0, w0, #0x1
   1ff3c:	ldr	w1, [sp, #60]
   1ff40:	cmp	w1, w0
   1ff44:	b.cc	1fef8 <omp_in_final@@OMP_3.1+0x2b2c>  // b.lo, b.ul, b.last
   1ff48:	ldr	w0, [sp, #60]
   1ff4c:	lsl	x0, x0, #7
   1ff50:	ldr	x1, [sp, #48]
   1ff54:	add	x0, x1, x0
   1ff58:	str	xzr, [x0, #80]
   1ff5c:	ldr	x0, [sp, #48]
   1ff60:	ldp	x29, x30, [sp], #64
   1ff64:	ret
   1ff68:	stp	x29, x30, [sp, #-64]!
   1ff6c:	mov	x29, sp
   1ff70:	str	x0, [sp, #40]
   1ff74:	str	x1, [sp, #32]
   1ff78:	str	w2, [sp, #28]
   1ff7c:	ldr	x0, [sp, #40]
   1ff80:	add	x0, x0, #0x40
   1ff84:	bl	1fc50 <omp_in_final@@OMP_3.1+0x2884>
   1ff88:	ldr	x0, [sp, #32]
   1ff8c:	cmp	x0, #0x0
   1ff90:	b.eq	20060 <omp_in_final@@OMP_3.1+0x2c94>  // b.none
   1ff94:	ldr	x0, [sp, #32]
   1ff98:	cmp	x0, #0x1
   1ff9c:	cset	w0, ne  // ne = any
   1ffa0:	and	w0, w0, #0xff
   1ffa4:	and	x0, x0, #0xff
   1ffa8:	cmp	x0, #0x0
   1ffac:	b.eq	1ffec <omp_in_final@@OMP_3.1+0x2c20>  // b.none
   1ffb0:	ldr	w0, [sp, #28]
   1ffb4:	lsl	x0, x0, #2
   1ffb8:	str	x0, [sp, #56]
   1ffbc:	ldr	x0, [sp, #56]
   1ffc0:	add	x0, x0, #0x7
   1ffc4:	str	x0, [sp, #56]
   1ffc8:	ldr	x0, [sp, #56]
   1ffcc:	and	x0, x0, #0xfffffffffffffff8
   1ffd0:	str	x0, [sp, #56]
   1ffd4:	ldr	x1, [sp, #56]
   1ffd8:	ldr	x0, [sp, #32]
   1ffdc:	add	x0, x1, x0
   1ffe0:	sub	x0, x0, #0x1
   1ffe4:	str	x0, [sp, #32]
   1ffe8:	b	1fff8 <omp_in_final@@OMP_3.1+0x2c2c>
   1ffec:	ldr	w0, [sp, #28]
   1fff0:	lsl	x0, x0, #2
   1fff4:	str	x0, [sp, #32]
   1fff8:	ldr	x0, [sp, #32]
   1fffc:	cmp	x0, #0x20
   20000:	b.ls	2001c <omp_in_final@@OMP_3.1+0x2c50>  // b.plast
   20004:	ldr	x0, [sp, #32]
   20008:	bl	8dd0 <fprintf@plt+0x1a0>
   2000c:	mov	x1, x0
   20010:	ldr	x0, [sp, #40]
   20014:	str	x1, [x0, #32]
   20018:	b	2002c <omp_in_final@@OMP_3.1+0x2c60>
   2001c:	ldr	x0, [sp, #40]
   20020:	add	x1, x0, #0x60
   20024:	ldr	x0, [sp, #40]
   20028:	str	x1, [x0, #32]
   2002c:	ldr	x0, [sp, #40]
   20030:	ldr	x0, [x0, #32]
   20034:	ldr	x2, [sp, #32]
   20038:	mov	w1, #0x0                   	// #0
   2003c:	bl	88d0 <memset@plt>
   20040:	ldr	x0, [sp, #40]
   20044:	str	wzr, [x0, #40]
   20048:	ldr	x0, [sp, #40]
   2004c:	mov	w1, #0xffffffff            	// #-1
   20050:	str	w1, [x0, #44]
   20054:	ldr	x0, [sp, #40]
   20058:	str	wzr, [x0, #48]
   2005c:	b	20070 <omp_in_final@@OMP_3.1+0x2ca4>
   20060:	ldr	x0, [sp, #40]
   20064:	add	x1, x0, #0x60
   20068:	ldr	x0, [sp, #40]
   2006c:	str	x1, [x0, #32]
   20070:	ldr	x0, [sp, #40]
   20074:	add	x0, x0, #0x50
   20078:	mov	x1, #0x0                   	// #0
   2007c:	bl	1fd1c <omp_in_final@@OMP_3.1+0x2950>
   20080:	ldr	x0, [sp, #40]
   20084:	str	wzr, [x0, #68]
   20088:	nop
   2008c:	ldp	x29, x30, [sp], #64
   20090:	ret
   20094:	stp	x29, x30, [sp, #-32]!
   20098:	mov	x29, sp
   2009c:	str	x0, [sp, #24]
   200a0:	ldr	x0, [sp, #24]
   200a4:	add	x0, x0, #0x40
   200a8:	bl	1fc6c <omp_in_final@@OMP_3.1+0x28a0>
   200ac:	ldr	x0, [sp, #24]
   200b0:	ldr	x1, [x0, #32]
   200b4:	ldr	x0, [sp, #24]
   200b8:	add	x0, x0, #0x60
   200bc:	cmp	x1, x0
   200c0:	b.eq	200d0 <omp_in_final@@OMP_3.1+0x2d04>  // b.none
   200c4:	ldr	x0, [sp, #24]
   200c8:	ldr	x0, [x0, #32]
   200cc:	bl	8a20 <free@plt>
   200d0:	ldr	x0, [sp, #24]
   200d4:	add	x0, x0, #0x50
   200d8:	bl	1fdc8 <omp_in_final@@OMP_3.1+0x29fc>
   200dc:	nop
   200e0:	ldp	x29, x30, [sp], #32
   200e4:	ret
   200e8:	stp	x29, x30, [sp, #-48]!
   200ec:	mov	x29, sp
   200f0:	str	x0, [sp, #24]
   200f4:	str	x1, [sp, #16]
   200f8:	ldr	x0, [sp, #16]
   200fc:	bl	20094 <omp_in_final@@OMP_3.1+0x2cc8>
   20100:	ldr	x0, [sp, #24]
   20104:	cmp	x0, #0x0
   20108:	cset	w0, eq  // eq = none
   2010c:	and	w0, w0, #0xff
   20110:	and	x0, x0, #0xff
   20114:	cmp	x0, #0x0
   20118:	b.eq	20128 <omp_in_final@@OMP_3.1+0x2d5c>  // b.none
   2011c:	ldr	x0, [sp, #16]
   20120:	bl	8a20 <free@plt>
   20124:	b	2017c <omp_in_final@@OMP_3.1+0x2db0>
   20128:	ldr	x0, [sp, #24]
   2012c:	ldr	x0, [x0, #104]
   20130:	str	x0, [sp, #40]
   20134:	ldr	x0, [sp, #16]
   20138:	ldr	x1, [sp, #40]
   2013c:	str	x1, [x0, #80]
   20140:	ldr	x0, [sp, #24]
   20144:	add	x0, x0, #0x68
   20148:	ldr	x1, [sp, #40]
   2014c:	ldr	x2, [sp, #16]
   20150:	ldxr	x3, [x0]
   20154:	cmp	x3, x1
   20158:	b.ne	20164 <omp_in_final@@OMP_3.1+0x2d98>  // b.any
   2015c:	stlxr	w4, x2, [x0]
   20160:	cbnz	w4, 20150 <omp_in_final@@OMP_3.1+0x2d84>
   20164:	dmb	ish
   20168:	cset	w0, eq  // eq = none
   2016c:	eor	w0, w0, #0x1
   20170:	and	w0, w0, #0xff
   20174:	cmp	w0, #0x0
   20178:	b.ne	20128 <omp_in_final@@OMP_3.1+0x2d5c>  // b.any
   2017c:	nop
   20180:	ldp	x29, x30, [sp], #48
   20184:	ret
   20188:	stp	x29, x30, [sp, #-64]!
   2018c:	mov	x29, sp
   20190:	str	x0, [sp, #24]
   20194:	bl	1fddc <omp_in_final@@OMP_3.1+0x2a10>
   20198:	str	x0, [sp, #56]
   2019c:	ldr	x0, [sp, #56]
   201a0:	ldr	x0, [x0, #16]
   201a4:	str	x0, [sp, #48]
   201a8:	ldr	x0, [sp, #48]
   201ac:	cmp	x0, #0x0
   201b0:	b.ne	201e4 <omp_in_final@@OMP_3.1+0x2e18>  // b.any
   201b4:	mov	x0, #0x80                  	// #128
   201b8:	bl	8dd0 <fprintf@plt+0x1a0>
   201bc:	str	x0, [sp, #40]
   201c0:	mov	w2, #0x1                   	// #1
   201c4:	ldr	x1, [sp, #24]
   201c8:	ldr	x0, [sp, #40]
   201cc:	bl	1ff68 <omp_in_final@@OMP_3.1+0x2b9c>
   201d0:	ldr	x0, [sp, #56]
   201d4:	ldr	x1, [sp, #40]
   201d8:	str	x1, [x0, #24]
   201dc:	mov	w0, #0x1                   	// #1
   201e0:	b	20260 <omp_in_final@@OMP_3.1+0x2e94>
   201e4:	ldr	x0, [sp, #56]
   201e8:	ldr	x0, [x0, #24]
   201ec:	str	x0, [sp, #40]
   201f0:	ldr	x0, [sp, #56]
   201f4:	ldr	x1, [sp, #40]
   201f8:	str	x1, [x0, #32]
   201fc:	ldr	x0, [sp, #40]
   20200:	add	x0, x0, #0x50
   20204:	bl	1fd40 <omp_in_final@@OMP_3.1+0x2974>
   20208:	str	x0, [sp, #40]
   2020c:	ldr	x0, [sp, #40]
   20210:	cmp	x0, #0x0
   20214:	b.ne	20250 <omp_in_final@@OMP_3.1+0x2e84>  // b.any
   20218:	ldr	x0, [sp, #48]
   2021c:	bl	1fdf0 <omp_in_final@@OMP_3.1+0x2a24>
   20220:	str	x0, [sp, #32]
   20224:	ldr	x0, [sp, #48]
   20228:	ldr	w0, [x0]
   2022c:	mov	w2, w0
   20230:	ldr	x1, [sp, #24]
   20234:	ldr	x0, [sp, #32]
   20238:	bl	1ff68 <omp_in_final@@OMP_3.1+0x2b9c>
   2023c:	ldr	x0, [sp, #56]
   20240:	ldr	x1, [sp, #32]
   20244:	str	x1, [x0, #24]
   20248:	mov	w0, #0x1                   	// #1
   2024c:	b	20260 <omp_in_final@@OMP_3.1+0x2e94>
   20250:	ldr	x0, [sp, #56]
   20254:	ldr	x1, [sp, #40]
   20258:	str	x1, [x0, #24]
   2025c:	mov	w0, #0x0                   	// #0
   20260:	ldp	x29, x30, [sp], #64
   20264:	ret
   20268:	stp	x29, x30, [sp, #-48]!
   2026c:	mov	x29, sp
   20270:	bl	1fddc <omp_in_final@@OMP_3.1+0x2a10>
   20274:	str	x0, [sp, #40]
   20278:	ldr	x0, [sp, #40]
   2027c:	ldr	x0, [x0, #16]
   20280:	str	x0, [sp, #32]
   20284:	ldr	x0, [sp, #32]
   20288:	cmp	x0, #0x0
   2028c:	b.ne	202b0 <omp_in_final@@OMP_3.1+0x2ee4>  // b.any
   20290:	ldr	x0, [sp, #40]
   20294:	ldr	x0, [x0, #24]
   20298:	mov	x1, x0
   2029c:	mov	x0, #0x0                   	// #0
   202a0:	bl	200e8 <omp_in_final@@OMP_3.1+0x2d1c>
   202a4:	ldr	x0, [sp, #40]
   202a8:	str	xzr, [x0, #24]
   202ac:	b	20330 <omp_in_final@@OMP_3.1+0x2f64>
   202b0:	ldr	x0, [sp, #32]
   202b4:	add	x0, x0, #0x80
   202b8:	bl	1fc80 <omp_in_final@@OMP_3.1+0x28b4>
   202bc:	str	w0, [sp, #28]
   202c0:	ldr	w0, [sp, #28]
   202c4:	bl	1fcf8 <omp_in_final@@OMP_3.1+0x292c>
   202c8:	and	w0, w0, #0xff
   202cc:	cmp	w0, #0x0
   202d0:	b.eq	20318 <omp_in_final@@OMP_3.1+0x2f4c>  // b.none
   202d4:	ldr	x0, [sp, #40]
   202d8:	ldr	x0, [x0, #32]
   202dc:	cmp	x0, #0x0
   202e0:	cset	w0, ne  // ne = any
   202e4:	and	w0, w0, #0xff
   202e8:	and	x0, x0, #0xff
   202ec:	cmp	x0, #0x0
   202f0:	b.eq	20318 <omp_in_final@@OMP_3.1+0x2f4c>  // b.none
   202f4:	ldr	x0, [sp, #40]
   202f8:	ldr	x1, [x0, #24]
   202fc:	ldr	x0, [sp, #32]
   20300:	str	x1, [x0, #88]
   20304:	ldr	x0, [sp, #40]
   20308:	ldr	x0, [x0, #32]
   2030c:	mov	x1, x0
   20310:	ldr	x0, [sp, #32]
   20314:	bl	200e8 <omp_in_final@@OMP_3.1+0x2d1c>
   20318:	ldr	x0, [sp, #32]
   2031c:	add	x0, x0, #0x80
   20320:	ldr	w1, [sp, #28]
   20324:	bl	220a8 <omp_get_num_procs@@OMP_1.0+0xa4c>
   20328:	ldr	x0, [sp, #40]
   2032c:	str	xzr, [x0, #32]
   20330:	ldp	x29, x30, [sp], #48
   20334:	ret
   20338:	stp	x29, x30, [sp, #-48]!
   2033c:	mov	x29, sp
   20340:	bl	1fddc <omp_in_final@@OMP_3.1+0x2a10>
   20344:	str	x0, [sp, #40]
   20348:	ldr	x0, [sp, #40]
   2034c:	ldr	x0, [x0, #16]
   20350:	str	x0, [sp, #32]
   20354:	ldr	x0, [sp, #32]
   20358:	add	x0, x0, #0x80
   2035c:	bl	1fcdc <omp_in_final@@OMP_3.1+0x2910>
   20360:	str	w0, [sp, #28]
   20364:	ldr	w0, [sp, #28]
   20368:	bl	1fcf8 <omp_in_final@@OMP_3.1+0x292c>
   2036c:	and	w0, w0, #0xff
   20370:	cmp	w0, #0x0
   20374:	b.eq	203bc <omp_in_final@@OMP_3.1+0x2ff0>  // b.none
   20378:	ldr	x0, [sp, #40]
   2037c:	ldr	x0, [x0, #32]
   20380:	cmp	x0, #0x0
   20384:	cset	w0, ne  // ne = any
   20388:	and	w0, w0, #0xff
   2038c:	and	x0, x0, #0xff
   20390:	cmp	x0, #0x0
   20394:	b.eq	203bc <omp_in_final@@OMP_3.1+0x2ff0>  // b.none
   20398:	ldr	x0, [sp, #40]
   2039c:	ldr	x1, [x0, #24]
   203a0:	ldr	x0, [sp, #32]
   203a4:	str	x1, [x0, #88]
   203a8:	ldr	x0, [sp, #40]
   203ac:	ldr	x0, [x0, #32]
   203b0:	mov	x1, x0
   203b4:	ldr	x0, [sp, #32]
   203b8:	bl	200e8 <omp_in_final@@OMP_3.1+0x2d1c>
   203bc:	ldr	x0, [sp, #40]
   203c0:	str	xzr, [x0, #32]
   203c4:	ldr	x0, [sp, #32]
   203c8:	add	x0, x0, #0x80
   203cc:	ldr	w1, [sp, #28]
   203d0:	bl	22264 <omp_get_num_procs@@OMP_1.0+0xc08>
   203d4:	and	w0, w0, #0xff
   203d8:	ldp	x29, x30, [sp], #48
   203dc:	ret
   203e0:	stp	x29, x30, [sp, #-48]!
   203e4:	mov	x29, sp
   203e8:	bl	1fddc <omp_in_final@@OMP_3.1+0x2a10>
   203ec:	str	x0, [sp, #40]
   203f0:	ldr	x0, [sp, #40]
   203f4:	ldr	x0, [x0, #16]
   203f8:	str	x0, [sp, #32]
   203fc:	ldr	x0, [sp, #40]
   20400:	ldr	x0, [x0, #24]
   20404:	str	x0, [sp, #24]
   20408:	ldr	x0, [sp, #32]
   2040c:	cmp	x0, #0x0
   20410:	b.ne	2042c <omp_in_final@@OMP_3.1+0x3060>  // b.any
   20414:	ldr	x1, [sp, #24]
   20418:	mov	x0, #0x0                   	// #0
   2041c:	bl	200e8 <omp_in_final@@OMP_3.1+0x2d1c>
   20420:	ldr	x0, [sp, #40]
   20424:	str	xzr, [x0, #24]
   20428:	b	204b4 <omp_in_final@@OMP_3.1+0x30e8>
   2042c:	ldr	x0, [sp, #40]
   20430:	ldr	x0, [x0, #32]
   20434:	cmp	x0, #0x0
   20438:	cset	w0, eq  // eq = none
   2043c:	and	w0, w0, #0xff
   20440:	and	x0, x0, #0xff
   20444:	cmp	x0, #0x0
   20448:	b.ne	204b0 <omp_in_final@@OMP_3.1+0x30e4>  // b.any
   2044c:	ldr	x0, [sp, #24]
   20450:	add	x0, x0, #0x44
   20454:	ldxr	w1, [x0]
   20458:	add	w1, w1, #0x1
   2045c:	stlxr	w2, w1, [x0]
   20460:	cbnz	w2, 20454 <omp_in_final@@OMP_3.1+0x3088>
   20464:	dmb	ish
   20468:	str	w1, [sp, #20]
   2046c:	ldr	x0, [sp, #32]
   20470:	ldr	w0, [x0]
   20474:	ldr	w1, [sp, #20]
   20478:	cmp	w1, w0
   2047c:	b.ne	204a4 <omp_in_final@@OMP_3.1+0x30d8>  // b.any
   20480:	ldr	x0, [sp, #40]
   20484:	ldr	x1, [x0, #24]
   20488:	ldr	x0, [sp, #32]
   2048c:	str	x1, [x0, #88]
   20490:	ldr	x0, [sp, #40]
   20494:	ldr	x0, [x0, #32]
   20498:	mov	x1, x0
   2049c:	ldr	x0, [sp, #32]
   204a0:	bl	200e8 <omp_in_final@@OMP_3.1+0x2d1c>
   204a4:	ldr	x0, [sp, #40]
   204a8:	str	xzr, [x0, #32]
   204ac:	b	204b4 <omp_in_final@@OMP_3.1+0x30e8>
   204b0:	nop
   204b4:	ldp	x29, x30, [sp], #48
   204b8:	ret
   204bc:	sub	sp, sp, #0x10
   204c0:	str	x0, [sp, #8]
   204c4:	ldr	x0, [sp, #8]
   204c8:	str	wzr, [x0]
   204cc:	nop
   204d0:	add	sp, sp, #0x10
   204d4:	ret
   204d8:	sub	sp, sp, #0x10
   204dc:	str	x0, [sp, #8]
   204e0:	nop
   204e4:	add	sp, sp, #0x10
   204e8:	ret
   204ec:	stp	x29, x30, [sp, #-48]!
   204f0:	mov	x29, sp
   204f4:	str	x0, [sp, #24]
   204f8:	str	wzr, [sp, #44]
   204fc:	ldr	x1, [sp, #24]
   20500:	add	x0, sp, #0x2c
   20504:	ldr	w3, [x0]
   20508:	mov	w4, #0x1                   	// #1
   2050c:	ldaxr	w2, [x1]
   20510:	cmp	w2, w3
   20514:	b.ne	20520 <omp_in_final@@OMP_3.1+0x3154>  // b.any
   20518:	stxr	w5, w4, [x1]
   2051c:	cbnz	w5, 2050c <omp_in_final@@OMP_3.1+0x3140>
   20520:	cset	w1, eq  // eq = none
   20524:	cmp	w1, #0x0
   20528:	b.ne	20530 <omp_in_final@@OMP_3.1+0x3164>  // b.any
   2052c:	str	w2, [x0]
   20530:	mov	w0, w1
   20534:	eor	w0, w0, #0x1
   20538:	and	w0, w0, #0xff
   2053c:	cmp	w0, #0x0
   20540:	b.eq	20554 <omp_in_final@@OMP_3.1+0x3188>  // b.none
   20544:	ldr	w0, [sp, #44]
   20548:	mov	w1, w0
   2054c:	ldr	x0, [sp, #24]
   20550:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
   20554:	nop
   20558:	ldp	x29, x30, [sp], #48
   2055c:	ret
   20560:	stp	x29, x30, [sp, #-48]!
   20564:	mov	x29, sp
   20568:	str	x0, [sp, #24]
   2056c:	ldr	x1, [sp, #24]
   20570:	ldxr	w0, [x1]
   20574:	stlxr	w2, wzr, [x1]
   20578:	cbnz	w2, 20570 <omp_in_final@@OMP_3.1+0x31a4>
   2057c:	str	w0, [sp, #44]
   20580:	ldr	w0, [sp, #44]
   20584:	lsr	w0, w0, #31
   20588:	and	w0, w0, #0xff
   2058c:	and	x0, x0, #0xff
   20590:	cmp	x0, #0x0
   20594:	b.eq	205a0 <omp_in_final@@OMP_3.1+0x31d4>  // b.none
   20598:	ldr	x0, [sp, #24]
   2059c:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
   205a0:	nop
   205a4:	ldp	x29, x30, [sp], #48
   205a8:	ret
   205ac:	mrs	x1, tpidr_el0
   205b0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   205b4:	ldr	x0, [x0, #4016]
   205b8:	add	x0, x1, x0
   205bc:	ret
   205c0:	stp	x29, x30, [sp, #-48]!
   205c4:	mov	x29, sp
   205c8:	strb	w0, [sp, #31]
   205cc:	bl	205ac <omp_in_final@@OMP_3.1+0x31e0>
   205d0:	ldr	x0, [x0, #80]
   205d4:	str	x0, [sp, #40]
   205d8:	ldr	x0, [sp, #40]
   205dc:	cmp	x0, #0x0
   205e0:	b.eq	205f0 <omp_in_final@@OMP_3.1+0x3224>  // b.none
   205e4:	ldr	x0, [sp, #40]
   205e8:	add	x0, x0, #0x90
   205ec:	b	2060c <omp_in_final@@OMP_3.1+0x3240>
   205f0:	ldrb	w0, [sp, #31]
   205f4:	cmp	w0, #0x0
   205f8:	b.eq	20604 <omp_in_final@@OMP_3.1+0x3238>  // b.none
   205fc:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
   20600:	b	2060c <omp_in_final@@OMP_3.1+0x3240>
   20604:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20608:	add	x0, x0, #0x2d8
   2060c:	ldp	x29, x30, [sp], #48
   20610:	ret
   20614:	stp	x29, x30, [sp, #-48]!
   20618:	mov	x29, sp
   2061c:	str	x0, [sp, #24]
   20620:	str	w1, [sp, #20]
   20624:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20628:	add	x0, x0, #0x364
   2062c:	ldr	w0, [x0]
   20630:	mov	x4, #0x0                   	// #0
   20634:	ldr	w3, [sp, #20]
   20638:	mov	w2, w0
   2063c:	ldr	x1, [sp, #24]
   20640:	mov	x0, #0x62                  	// #98
   20644:	bl	8c10 <syscall@plt>
   20648:	str	w0, [sp, #44]
   2064c:	ldr	w0, [sp, #44]
   20650:	lsr	w0, w0, #31
   20654:	and	w0, w0, #0xff
   20658:	and	x0, x0, #0xff
   2065c:	cmp	x0, #0x0
   20660:	b.eq	206e0 <omp_in_final@@OMP_3.1+0x3314>  // b.none
   20664:	bl	8be0 <__errno_location@plt>
   20668:	ldr	w0, [x0]
   2066c:	cmp	w0, #0x26
   20670:	cset	w0, eq  // eq = none
   20674:	and	w0, w0, #0xff
   20678:	and	x0, x0, #0xff
   2067c:	cmp	x0, #0x0
   20680:	b.eq	206e0 <omp_in_final@@OMP_3.1+0x3314>  // b.none
   20684:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20688:	add	x0, x0, #0x364
   2068c:	ldr	w0, [x0]
   20690:	and	w1, w0, #0xffffff7f
   20694:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20698:	add	x0, x0, #0x364
   2069c:	str	w1, [x0]
   206a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   206a4:	add	x0, x0, #0x360
   206a8:	ldr	w0, [x0]
   206ac:	and	w1, w0, #0xffffff7f
   206b0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   206b4:	add	x0, x0, #0x360
   206b8:	str	w1, [x0]
   206bc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   206c0:	add	x0, x0, #0x364
   206c4:	ldr	w0, [x0]
   206c8:	mov	x4, #0x0                   	// #0
   206cc:	ldr	w3, [sp, #20]
   206d0:	mov	w2, w0
   206d4:	ldr	x1, [sp, #24]
   206d8:	mov	x0, #0x62                  	// #98
   206dc:	bl	8c10 <syscall@plt>
   206e0:	nop
   206e4:	ldp	x29, x30, [sp], #48
   206e8:	ret
   206ec:	stp	x29, x30, [sp, #-48]!
   206f0:	mov	x29, sp
   206f4:	str	x0, [sp, #24]
   206f8:	str	w1, [sp, #20]
   206fc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20700:	add	x0, x0, #0x360
   20704:	ldr	w0, [x0]
   20708:	ldr	w3, [sp, #20]
   2070c:	mov	w2, w0
   20710:	ldr	x1, [sp, #24]
   20714:	mov	x0, #0x62                  	// #98
   20718:	bl	8c10 <syscall@plt>
   2071c:	str	w0, [sp, #44]
   20720:	ldr	w0, [sp, #44]
   20724:	lsr	w0, w0, #31
   20728:	and	w0, w0, #0xff
   2072c:	and	x0, x0, #0xff
   20730:	cmp	x0, #0x0
   20734:	b.eq	207b0 <omp_in_final@@OMP_3.1+0x33e4>  // b.none
   20738:	bl	8be0 <__errno_location@plt>
   2073c:	ldr	w0, [x0]
   20740:	cmp	w0, #0x26
   20744:	cset	w0, eq  // eq = none
   20748:	and	w0, w0, #0xff
   2074c:	and	x0, x0, #0xff
   20750:	cmp	x0, #0x0
   20754:	b.eq	207b0 <omp_in_final@@OMP_3.1+0x33e4>  // b.none
   20758:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2075c:	add	x0, x0, #0x364
   20760:	ldr	w0, [x0]
   20764:	and	w1, w0, #0xffffff7f
   20768:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2076c:	add	x0, x0, #0x364
   20770:	str	w1, [x0]
   20774:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20778:	add	x0, x0, #0x360
   2077c:	ldr	w0, [x0]
   20780:	and	w1, w0, #0xffffff7f
   20784:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20788:	add	x0, x0, #0x360
   2078c:	str	w1, [x0]
   20790:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20794:	add	x0, x0, #0x360
   20798:	ldr	w0, [x0]
   2079c:	ldr	w3, [sp, #20]
   207a0:	mov	w2, w0
   207a4:	ldr	x1, [sp, #24]
   207a8:	mov	x0, #0x62                  	// #98
   207ac:	bl	8c10 <syscall@plt>
   207b0:	nop
   207b4:	ldp	x29, x30, [sp], #48
   207b8:	ret
   207bc:	nop
   207c0:	ret
   207c4:	stp	x29, x30, [sp, #-48]!
   207c8:	mov	x29, sp
   207cc:	str	x0, [sp, #24]
   207d0:	str	w1, [sp, #20]
   207d4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   207d8:	add	x0, x0, #0x660
   207dc:	ldr	x0, [x0]
   207e0:	str	x0, [sp, #32]
   207e4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   207e8:	add	x0, x0, #0x310
   207ec:	ldr	x1, [x0]
   207f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   207f4:	add	x0, x0, #0x308
   207f8:	ldr	x0, [x0]
   207fc:	cmp	x1, x0
   20800:	cset	w0, hi  // hi = pmore
   20804:	and	w0, w0, #0xff
   20808:	and	x0, x0, #0xff
   2080c:	cmp	x0, #0x0
   20810:	b.eq	20824 <omp_in_final@@OMP_3.1+0x3458>  // b.none
   20814:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20818:	add	x0, x0, #0x670
   2081c:	ldr	x0, [x0]
   20820:	str	x0, [sp, #32]
   20824:	str	xzr, [sp, #40]
   20828:	b	2086c <omp_in_final@@OMP_3.1+0x34a0>
   2082c:	ldr	x0, [sp, #24]
   20830:	ldr	w0, [x0]
   20834:	mov	w1, w0
   20838:	ldr	w0, [sp, #20]
   2083c:	cmp	w0, w1
   20840:	cset	w0, ne  // ne = any
   20844:	and	w0, w0, #0xff
   20848:	and	x0, x0, #0xff
   2084c:	cmp	x0, #0x0
   20850:	b.eq	2085c <omp_in_final@@OMP_3.1+0x3490>  // b.none
   20854:	mov	w0, #0x0                   	// #0
   20858:	b	20880 <omp_in_final@@OMP_3.1+0x34b4>
   2085c:	bl	207bc <omp_in_final@@OMP_3.1+0x33f0>
   20860:	ldr	x0, [sp, #40]
   20864:	add	x0, x0, #0x1
   20868:	str	x0, [sp, #40]
   2086c:	ldr	x1, [sp, #40]
   20870:	ldr	x0, [sp, #32]
   20874:	cmp	x1, x0
   20878:	b.cc	2082c <omp_in_final@@OMP_3.1+0x3460>  // b.lo, b.ul, b.last
   2087c:	mov	w0, #0x1                   	// #1
   20880:	ldp	x29, x30, [sp], #48
   20884:	ret
   20888:	stp	x29, x30, [sp, #-32]!
   2088c:	mov	x29, sp
   20890:	str	x0, [sp, #24]
   20894:	str	w1, [sp, #20]
   20898:	ldr	w1, [sp, #20]
   2089c:	ldr	x0, [sp, #24]
   208a0:	bl	207c4 <omp_in_final@@OMP_3.1+0x33f8>
   208a4:	cmp	w0, #0x0
   208a8:	b.eq	208b8 <omp_in_final@@OMP_3.1+0x34ec>  // b.none
   208ac:	ldr	w1, [sp, #20]
   208b0:	ldr	x0, [sp, #24]
   208b4:	bl	20614 <omp_in_final@@OMP_3.1+0x3248>
   208b8:	nop
   208bc:	ldp	x29, x30, [sp], #32
   208c0:	ret

00000000000208c4 <omp_init_lock@@OMP_3.0>:
   208c4:	stp	x29, x30, [sp, #-32]!
   208c8:	mov	x29, sp
   208cc:	str	x0, [sp, #24]
   208d0:	ldr	x0, [sp, #24]
   208d4:	bl	204bc <omp_in_final@@OMP_3.1+0x30f0>
   208d8:	nop
   208dc:	ldp	x29, x30, [sp], #32
   208e0:	ret

00000000000208e4 <omp_destroy_lock@OMP_1.0>:
   208e4:	stp	x29, x30, [sp, #-32]!
   208e8:	mov	x29, sp
   208ec:	str	x0, [sp, #24]
   208f0:	ldr	x0, [sp, #24]
   208f4:	bl	204d8 <omp_in_final@@OMP_3.1+0x310c>
   208f8:	nop
   208fc:	ldp	x29, x30, [sp], #32
   20900:	ret

0000000000020904 <omp_set_lock@@OMP_3.0>:
   20904:	stp	x29, x30, [sp, #-32]!
   20908:	mov	x29, sp
   2090c:	str	x0, [sp, #24]
   20910:	ldr	x0, [sp, #24]
   20914:	bl	204ec <omp_in_final@@OMP_3.1+0x3120>
   20918:	nop
   2091c:	ldp	x29, x30, [sp], #32
   20920:	ret

0000000000020924 <omp_unset_lock@@OMP_3.0>:
   20924:	stp	x29, x30, [sp, #-32]!
   20928:	mov	x29, sp
   2092c:	str	x0, [sp, #24]
   20930:	ldr	x0, [sp, #24]
   20934:	bl	20560 <omp_in_final@@OMP_3.1+0x3194>
   20938:	nop
   2093c:	ldp	x29, x30, [sp], #32
   20940:	ret

0000000000020944 <omp_test_lock@OMP_1.0>:
   20944:	sub	sp, sp, #0x20
   20948:	str	x0, [sp, #8]
   2094c:	str	wzr, [sp, #28]
   20950:	ldr	x1, [sp, #8]
   20954:	add	x0, sp, #0x1c
   20958:	ldr	w3, [x0]
   2095c:	mov	w4, #0x1                   	// #1
   20960:	ldaxr	w2, [x1]
   20964:	cmp	w2, w3
   20968:	b.ne	20974 <omp_test_lock@OMP_1.0+0x30>  // b.any
   2096c:	stxr	w5, w4, [x1]
   20970:	cbnz	w5, 20960 <omp_test_lock@OMP_1.0+0x1c>
   20974:	cset	w1, eq  // eq = none
   20978:	cmp	w1, #0x0
   2097c:	b.ne	20984 <omp_test_lock@OMP_1.0+0x40>  // b.any
   20980:	str	w2, [x0]
   20984:	mov	w0, w1
   20988:	add	sp, sp, #0x20
   2098c:	ret

0000000000020990 <omp_init_nest_lock@@OMP_3.0>:
   20990:	stp	x29, x30, [sp, #-32]!
   20994:	mov	x29, sp
   20998:	str	x0, [sp, #24]
   2099c:	mov	x2, #0x10                  	// #16
   209a0:	mov	w1, #0x0                   	// #0
   209a4:	ldr	x0, [sp, #24]
   209a8:	bl	88d0 <memset@plt>
   209ac:	nop
   209b0:	ldp	x29, x30, [sp], #32
   209b4:	ret

00000000000209b8 <omp_destroy_nest_lock@@OMP_3.0>:
   209b8:	sub	sp, sp, #0x10
   209bc:	str	x0, [sp, #8]
   209c0:	nop
   209c4:	add	sp, sp, #0x10
   209c8:	ret

00000000000209cc <omp_set_nest_lock@@OMP_3.0>:
   209cc:	stp	x29, x30, [sp, #-48]!
   209d0:	mov	x29, sp
   209d4:	str	x0, [sp, #24]
   209d8:	mov	w0, #0x1                   	// #1
   209dc:	bl	205c0 <omp_in_final@@OMP_3.1+0x31f4>
   209e0:	str	x0, [sp, #40]
   209e4:	ldr	x0, [sp, #24]
   209e8:	ldr	x0, [x0, #8]
   209ec:	ldr	x1, [sp, #40]
   209f0:	cmp	x1, x0
   209f4:	b.eq	20a0c <omp_set_nest_lock@@OMP_3.0+0x40>  // b.none
   209f8:	ldr	x0, [sp, #24]
   209fc:	bl	204ec <omp_in_final@@OMP_3.1+0x3120>
   20a00:	ldr	x0, [sp, #24]
   20a04:	ldr	x1, [sp, #40]
   20a08:	str	x1, [x0, #8]
   20a0c:	ldr	x0, [sp, #24]
   20a10:	ldr	w0, [x0, #4]
   20a14:	add	w1, w0, #0x1
   20a18:	ldr	x0, [sp, #24]
   20a1c:	str	w1, [x0, #4]
   20a20:	nop
   20a24:	ldp	x29, x30, [sp], #48
   20a28:	ret

0000000000020a2c <omp_unset_nest_lock@@OMP_3.0>:
   20a2c:	stp	x29, x30, [sp, #-32]!
   20a30:	mov	x29, sp
   20a34:	str	x0, [sp, #24]
   20a38:	ldr	x0, [sp, #24]
   20a3c:	ldr	w0, [x0, #4]
   20a40:	sub	w1, w0, #0x1
   20a44:	ldr	x0, [sp, #24]
   20a48:	str	w1, [x0, #4]
   20a4c:	ldr	x0, [sp, #24]
   20a50:	ldr	w0, [x0, #4]
   20a54:	cmp	w0, #0x0
   20a58:	b.ne	20a6c <omp_unset_nest_lock@@OMP_3.0+0x40>  // b.any
   20a5c:	ldr	x0, [sp, #24]
   20a60:	str	xzr, [x0, #8]
   20a64:	ldr	x0, [sp, #24]
   20a68:	bl	20560 <omp_in_final@@OMP_3.1+0x3194>
   20a6c:	nop
   20a70:	ldp	x29, x30, [sp], #32
   20a74:	ret

0000000000020a78 <omp_test_nest_lock@@OMP_3.0>:
   20a78:	stp	x29, x30, [sp, #-48]!
   20a7c:	mov	x29, sp
   20a80:	str	x0, [sp, #24]
   20a84:	mov	w0, #0x1                   	// #1
   20a88:	bl	205c0 <omp_in_final@@OMP_3.1+0x31f4>
   20a8c:	str	x0, [sp, #40]
   20a90:	ldr	x0, [sp, #24]
   20a94:	ldr	x0, [x0, #8]
   20a98:	ldr	x1, [sp, #40]
   20a9c:	cmp	x1, x0
   20aa0:	b.ne	20ac4 <omp_test_nest_lock@@OMP_3.0+0x4c>  // b.any
   20aa4:	ldr	x0, [sp, #24]
   20aa8:	ldr	w0, [x0, #4]
   20aac:	add	w1, w0, #0x1
   20ab0:	ldr	x0, [sp, #24]
   20ab4:	str	w1, [x0, #4]
   20ab8:	ldr	x0, [sp, #24]
   20abc:	ldr	w0, [x0, #4]
   20ac0:	b	20b2c <omp_test_nest_lock@@OMP_3.0+0xb4>
   20ac4:	str	wzr, [sp, #36]
   20ac8:	ldr	x1, [sp, #24]
   20acc:	add	x0, sp, #0x24
   20ad0:	ldr	w3, [x0]
   20ad4:	mov	w4, #0x1                   	// #1
   20ad8:	ldaxr	w2, [x1]
   20adc:	cmp	w2, w3
   20ae0:	b.ne	20aec <omp_test_nest_lock@@OMP_3.0+0x74>  // b.any
   20ae4:	stxr	w5, w4, [x1]
   20ae8:	cbnz	w5, 20ad8 <omp_test_nest_lock@@OMP_3.0+0x60>
   20aec:	cset	w1, eq  // eq = none
   20af0:	cmp	w1, #0x0
   20af4:	b.ne	20afc <omp_test_nest_lock@@OMP_3.0+0x84>  // b.any
   20af8:	str	w2, [x0]
   20afc:	mov	w0, w1
   20b00:	cmp	w0, #0x0
   20b04:	b.eq	20b28 <omp_test_nest_lock@@OMP_3.0+0xb0>  // b.none
   20b08:	ldr	x0, [sp, #24]
   20b0c:	ldr	x1, [sp, #40]
   20b10:	str	x1, [x0, #8]
   20b14:	ldr	x0, [sp, #24]
   20b18:	mov	w1, #0x1                   	// #1
   20b1c:	str	w1, [x0, #4]
   20b20:	mov	w0, #0x1                   	// #1
   20b24:	b	20b2c <omp_test_nest_lock@@OMP_3.0+0xb4>
   20b28:	mov	w0, #0x0                   	// #0
   20b2c:	ldp	x29, x30, [sp], #48
   20b30:	ret
   20b34:	stp	x29, x30, [sp, #-32]!
   20b38:	mov	x29, sp
   20b3c:	mrs	x1, tpidr_el0
   20b40:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   20b44:	ldr	x0, [x0, #4008]
   20b48:	add	x0, x1, x0
   20b4c:	ldr	w0, [x0]
   20b50:	str	w0, [sp, #28]
   20b54:	ldr	w0, [sp, #28]
   20b58:	cmp	w0, #0x0
   20b5c:	cset	w0, eq  // eq = none
   20b60:	and	w0, w0, #0xff
   20b64:	and	x0, x0, #0xff
   20b68:	cmp	x0, #0x0
   20b6c:	b.eq	20b94 <omp_test_nest_lock@@OMP_3.0+0x11c>  // b.none
   20b70:	mov	x0, #0xb2                  	// #178
   20b74:	bl	8c10 <syscall@plt>
   20b78:	str	w0, [sp, #28]
   20b7c:	mrs	x1, tpidr_el0
   20b80:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   20b84:	ldr	x0, [x0, #4008]
   20b88:	add	x0, x1, x0
   20b8c:	ldr	w1, [sp, #28]
   20b90:	str	w1, [x0]
   20b94:	ldr	w0, [sp, #28]
   20b98:	ldp	x29, x30, [sp], #32
   20b9c:	ret

0000000000020ba0 <omp_init_nest_lock@OMP_1.0>:
   20ba0:	stp	x29, x30, [sp, #-32]!
   20ba4:	mov	x29, sp
   20ba8:	str	x0, [sp, #24]
   20bac:	mov	x2, #0x8                   	// #8
   20bb0:	mov	w1, #0x0                   	// #0
   20bb4:	ldr	x0, [sp, #24]
   20bb8:	bl	88d0 <memset@plt>
   20bbc:	nop
   20bc0:	ldp	x29, x30, [sp], #32
   20bc4:	ret

0000000000020bc8 <omp_destroy_nest_lock@OMP_1.0>:
   20bc8:	sub	sp, sp, #0x10
   20bcc:	str	x0, [sp, #8]
   20bd0:	nop
   20bd4:	add	sp, sp, #0x10
   20bd8:	ret

0000000000020bdc <omp_set_nest_lock@OMP_1.0>:
   20bdc:	stp	x29, x30, [sp, #-48]!
   20be0:	mov	x29, sp
   20be4:	str	x0, [sp, #24]
   20be8:	bl	20b34 <omp_test_nest_lock@@OMP_3.0+0xbc>
   20bec:	str	w0, [sp, #44]
   20bf0:	str	wzr, [sp, #40]
   20bf4:	ldr	x1, [sp, #24]
   20bf8:	ldr	w4, [sp, #44]
   20bfc:	add	x0, sp, #0x28
   20c00:	ldr	w3, [x0]
   20c04:	ldaxr	w2, [x1]
   20c08:	cmp	w2, w3
   20c0c:	b.ne	20c18 <omp_set_nest_lock@OMP_1.0+0x3c>  // b.any
   20c10:	stxr	w5, w4, [x1]
   20c14:	cbnz	w5, 20c04 <omp_set_nest_lock@OMP_1.0+0x28>
   20c18:	cset	w1, eq  // eq = none
   20c1c:	cmp	w1, #0x0
   20c20:	b.ne	20c28 <omp_set_nest_lock@OMP_1.0+0x4c>  // b.any
   20c24:	str	w2, [x0]
   20c28:	mov	w0, w1
   20c2c:	cmp	w0, #0x0
   20c30:	b.eq	20c44 <omp_set_nest_lock@OMP_1.0+0x68>  // b.none
   20c34:	ldr	x0, [sp, #24]
   20c38:	mov	w1, #0x1                   	// #1
   20c3c:	str	w1, [x0, #4]
   20c40:	b	20c7c <omp_set_nest_lock@OMP_1.0+0xa0>
   20c44:	ldr	w0, [sp, #40]
   20c48:	ldr	w1, [sp, #44]
   20c4c:	cmp	w1, w0
   20c50:	b.ne	20c6c <omp_set_nest_lock@OMP_1.0+0x90>  // b.any
   20c54:	ldr	x0, [sp, #24]
   20c58:	ldr	w0, [x0, #4]
   20c5c:	add	w1, w0, #0x1
   20c60:	ldr	x0, [sp, #24]
   20c64:	str	w1, [x0, #4]
   20c68:	b	20c7c <omp_set_nest_lock@OMP_1.0+0xa0>
   20c6c:	ldr	x0, [sp, #24]
   20c70:	ldr	w1, [sp, #40]
   20c74:	bl	20888 <omp_in_final@@OMP_3.1+0x34bc>
   20c78:	b	20bf0 <omp_set_nest_lock@OMP_1.0+0x14>
   20c7c:	ldp	x29, x30, [sp], #48
   20c80:	ret

0000000000020c84 <omp_unset_nest_lock@OMP_1.0>:
   20c84:	stp	x29, x30, [sp, #-32]!
   20c88:	mov	x29, sp
   20c8c:	str	x0, [sp, #24]
   20c90:	ldr	x0, [sp, #24]
   20c94:	ldr	w0, [x0, #4]
   20c98:	sub	w1, w0, #0x1
   20c9c:	ldr	x0, [sp, #24]
   20ca0:	str	w1, [x0, #4]
   20ca4:	ldr	x0, [sp, #24]
   20ca8:	ldr	w0, [x0, #4]
   20cac:	cmp	w0, #0x0
   20cb0:	b.ne	20cc8 <omp_unset_nest_lock@OMP_1.0+0x44>  // b.any
   20cb4:	ldr	x0, [sp, #24]
   20cb8:	stlr	wzr, [x0]
   20cbc:	ldr	x0, [sp, #24]
   20cc0:	mov	w1, #0x1                   	// #1
   20cc4:	bl	206ec <omp_in_final@@OMP_3.1+0x3320>
   20cc8:	nop
   20ccc:	ldp	x29, x30, [sp], #32
   20cd0:	ret

0000000000020cd4 <omp_test_nest_lock@OMP_1.0>:
   20cd4:	stp	x29, x30, [sp, #-48]!
   20cd8:	mov	x29, sp
   20cdc:	str	x0, [sp, #24]
   20ce0:	bl	20b34 <omp_test_nest_lock@@OMP_3.0+0xbc>
   20ce4:	str	w0, [sp, #44]
   20ce8:	str	wzr, [sp, #40]
   20cec:	ldr	x1, [sp, #24]
   20cf0:	ldr	w4, [sp, #44]
   20cf4:	add	x0, sp, #0x28
   20cf8:	ldr	w3, [x0]
   20cfc:	ldaxr	w2, [x1]
   20d00:	cmp	w2, w3
   20d04:	b.ne	20d10 <omp_test_nest_lock@OMP_1.0+0x3c>  // b.any
   20d08:	stxr	w5, w4, [x1]
   20d0c:	cbnz	w5, 20cfc <omp_test_nest_lock@OMP_1.0+0x28>
   20d10:	cset	w1, eq  // eq = none
   20d14:	cmp	w1, #0x0
   20d18:	b.ne	20d20 <omp_test_nest_lock@OMP_1.0+0x4c>  // b.any
   20d1c:	str	w2, [x0]
   20d20:	mov	w0, w1
   20d24:	cmp	w0, #0x0
   20d28:	b.eq	20d40 <omp_test_nest_lock@OMP_1.0+0x6c>  // b.none
   20d2c:	ldr	x0, [sp, #24]
   20d30:	mov	w1, #0x1                   	// #1
   20d34:	str	w1, [x0, #4]
   20d38:	mov	w0, #0x1                   	// #1
   20d3c:	b	20d74 <omp_test_nest_lock@OMP_1.0+0xa0>
   20d40:	ldr	w0, [sp, #40]
   20d44:	ldr	w1, [sp, #44]
   20d48:	cmp	w1, w0
   20d4c:	b.ne	20d70 <omp_test_nest_lock@OMP_1.0+0x9c>  // b.any
   20d50:	ldr	x0, [sp, #24]
   20d54:	ldr	w0, [x0, #4]
   20d58:	add	w1, w0, #0x1
   20d5c:	ldr	x0, [sp, #24]
   20d60:	str	w1, [x0, #4]
   20d64:	ldr	x0, [sp, #24]
   20d68:	ldr	w0, [x0, #4]
   20d6c:	b	20d74 <omp_test_nest_lock@OMP_1.0+0xa0>
   20d70:	mov	w0, #0x0                   	// #0
   20d74:	ldp	x29, x30, [sp], #48
   20d78:	ret
   20d7c:	stp	x29, x30, [sp, #-48]!
   20d80:	mov	x29, sp
   20d84:	str	x0, [sp, #24]
   20d88:	str	w1, [sp, #20]
   20d8c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20d90:	add	x0, x0, #0x364
   20d94:	ldr	w0, [x0]
   20d98:	mov	x4, #0x0                   	// #0
   20d9c:	ldr	w3, [sp, #20]
   20da0:	mov	w2, w0
   20da4:	ldr	x1, [sp, #24]
   20da8:	mov	x0, #0x62                  	// #98
   20dac:	bl	8c10 <syscall@plt>
   20db0:	str	w0, [sp, #44]
   20db4:	ldr	w0, [sp, #44]
   20db8:	lsr	w0, w0, #31
   20dbc:	and	w0, w0, #0xff
   20dc0:	and	x0, x0, #0xff
   20dc4:	cmp	x0, #0x0
   20dc8:	b.eq	20e48 <omp_test_nest_lock@OMP_1.0+0x174>  // b.none
   20dcc:	bl	8be0 <__errno_location@plt>
   20dd0:	ldr	w0, [x0]
   20dd4:	cmp	w0, #0x26
   20dd8:	cset	w0, eq  // eq = none
   20ddc:	and	w0, w0, #0xff
   20de0:	and	x0, x0, #0xff
   20de4:	cmp	x0, #0x0
   20de8:	b.eq	20e48 <omp_test_nest_lock@OMP_1.0+0x174>  // b.none
   20dec:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20df0:	add	x0, x0, #0x364
   20df4:	ldr	w0, [x0]
   20df8:	and	w1, w0, #0xffffff7f
   20dfc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20e00:	add	x0, x0, #0x364
   20e04:	str	w1, [x0]
   20e08:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20e0c:	add	x0, x0, #0x360
   20e10:	ldr	w0, [x0]
   20e14:	and	w1, w0, #0xffffff7f
   20e18:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20e1c:	add	x0, x0, #0x360
   20e20:	str	w1, [x0]
   20e24:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20e28:	add	x0, x0, #0x364
   20e2c:	ldr	w0, [x0]
   20e30:	mov	x4, #0x0                   	// #0
   20e34:	ldr	w3, [sp, #20]
   20e38:	mov	w2, w0
   20e3c:	ldr	x1, [sp, #24]
   20e40:	mov	x0, #0x62                  	// #98
   20e44:	bl	8c10 <syscall@plt>
   20e48:	nop
   20e4c:	ldp	x29, x30, [sp], #48
   20e50:	ret
   20e54:	stp	x29, x30, [sp, #-48]!
   20e58:	mov	x29, sp
   20e5c:	str	x0, [sp, #24]
   20e60:	str	w1, [sp, #20]
   20e64:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20e68:	add	x0, x0, #0x360
   20e6c:	ldr	w0, [x0]
   20e70:	ldr	w3, [sp, #20]
   20e74:	mov	w2, w0
   20e78:	ldr	x1, [sp, #24]
   20e7c:	mov	x0, #0x62                  	// #98
   20e80:	bl	8c10 <syscall@plt>
   20e84:	str	w0, [sp, #44]
   20e88:	ldr	w0, [sp, #44]
   20e8c:	lsr	w0, w0, #31
   20e90:	and	w0, w0, #0xff
   20e94:	and	x0, x0, #0xff
   20e98:	cmp	x0, #0x0
   20e9c:	b.eq	20f18 <omp_test_nest_lock@OMP_1.0+0x244>  // b.none
   20ea0:	bl	8be0 <__errno_location@plt>
   20ea4:	ldr	w0, [x0]
   20ea8:	cmp	w0, #0x26
   20eac:	cset	w0, eq  // eq = none
   20eb0:	and	w0, w0, #0xff
   20eb4:	and	x0, x0, #0xff
   20eb8:	cmp	x0, #0x0
   20ebc:	b.eq	20f18 <omp_test_nest_lock@OMP_1.0+0x244>  // b.none
   20ec0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20ec4:	add	x0, x0, #0x364
   20ec8:	ldr	w0, [x0]
   20ecc:	and	w1, w0, #0xffffff7f
   20ed0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20ed4:	add	x0, x0, #0x364
   20ed8:	str	w1, [x0]
   20edc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20ee0:	add	x0, x0, #0x360
   20ee4:	ldr	w0, [x0]
   20ee8:	and	w1, w0, #0xffffff7f
   20eec:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20ef0:	add	x0, x0, #0x360
   20ef4:	str	w1, [x0]
   20ef8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20efc:	add	x0, x0, #0x360
   20f00:	ldr	w0, [x0]
   20f04:	ldr	w3, [sp, #20]
   20f08:	mov	w2, w0
   20f0c:	ldr	x1, [sp, #24]
   20f10:	mov	x0, #0x62                  	// #98
   20f14:	bl	8c10 <syscall@plt>
   20f18:	nop
   20f1c:	ldp	x29, x30, [sp], #48
   20f20:	ret
   20f24:	nop
   20f28:	ret
   20f2c:	stp	x29, x30, [sp, #-48]!
   20f30:	mov	x29, sp
   20f34:	str	x0, [sp, #24]
   20f38:	str	w1, [sp, #20]
   20f3c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20f40:	add	x0, x0, #0x660
   20f44:	ldr	x0, [x0]
   20f48:	str	x0, [sp, #32]
   20f4c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20f50:	add	x0, x0, #0x310
   20f54:	ldr	x1, [x0]
   20f58:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20f5c:	add	x0, x0, #0x308
   20f60:	ldr	x0, [x0]
   20f64:	cmp	x1, x0
   20f68:	cset	w0, hi  // hi = pmore
   20f6c:	and	w0, w0, #0xff
   20f70:	and	x0, x0, #0xff
   20f74:	cmp	x0, #0x0
   20f78:	b.eq	20f8c <omp_test_nest_lock@OMP_1.0+0x2b8>  // b.none
   20f7c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   20f80:	add	x0, x0, #0x670
   20f84:	ldr	x0, [x0]
   20f88:	str	x0, [sp, #32]
   20f8c:	str	xzr, [sp, #40]
   20f90:	b	20fd4 <omp_test_nest_lock@OMP_1.0+0x300>
   20f94:	ldr	x0, [sp, #24]
   20f98:	ldr	w0, [x0]
   20f9c:	mov	w1, w0
   20fa0:	ldr	w0, [sp, #20]
   20fa4:	cmp	w0, w1
   20fa8:	cset	w0, ne  // ne = any
   20fac:	and	w0, w0, #0xff
   20fb0:	and	x0, x0, #0xff
   20fb4:	cmp	x0, #0x0
   20fb8:	b.eq	20fc4 <omp_test_nest_lock@OMP_1.0+0x2f0>  // b.none
   20fbc:	mov	w0, #0x0                   	// #0
   20fc0:	b	20fe8 <omp_test_nest_lock@OMP_1.0+0x314>
   20fc4:	bl	20f24 <omp_test_nest_lock@OMP_1.0+0x250>
   20fc8:	ldr	x0, [sp, #40]
   20fcc:	add	x0, x0, #0x1
   20fd0:	str	x0, [sp, #40]
   20fd4:	ldr	x1, [sp, #40]
   20fd8:	ldr	x0, [sp, #32]
   20fdc:	cmp	x1, x0
   20fe0:	b.cc	20f94 <omp_test_nest_lock@OMP_1.0+0x2c0>  // b.lo, b.ul, b.last
   20fe4:	mov	w0, #0x1                   	// #1
   20fe8:	ldp	x29, x30, [sp], #48
   20fec:	ret
   20ff0:	stp	x29, x30, [sp, #-32]!
   20ff4:	mov	x29, sp
   20ff8:	str	x0, [sp, #24]
   20ffc:	str	w1, [sp, #20]
   21000:	ldr	w1, [sp, #20]
   21004:	ldr	x0, [sp, #24]
   21008:	bl	20f2c <omp_test_nest_lock@OMP_1.0+0x258>
   2100c:	cmp	w0, #0x0
   21010:	b.eq	21020 <omp_test_nest_lock@OMP_1.0+0x34c>  // b.none
   21014:	ldr	w1, [sp, #20]
   21018:	ldr	x0, [sp, #24]
   2101c:	bl	20d7c <omp_test_nest_lock@OMP_1.0+0xa8>
   21020:	nop
   21024:	ldp	x29, x30, [sp], #32
   21028:	ret
   2102c:	stp	x29, x30, [sp, #-32]!
   21030:	mov	x29, sp
   21034:	str	x0, [sp, #24]
   21038:	str	w1, [sp, #20]
   2103c:	b	210d0 <omp_test_nest_lock@OMP_1.0+0x3fc>
   21040:	mov	w1, #0x1                   	// #1
   21044:	ldr	x0, [sp, #24]
   21048:	bl	20f2c <omp_test_nest_lock@OMP_1.0+0x258>
   2104c:	cmp	w0, #0x0
   21050:	b.eq	2108c <omp_test_nest_lock@OMP_1.0+0x3b8>  // b.none
   21054:	ldr	x0, [sp, #24]
   21058:	mov	w1, #0xffffffff            	// #-1
   2105c:	ldaxr	w2, [x0]
   21060:	stxr	w3, w1, [x0]
   21064:	cbnz	w3, 2105c <omp_test_nest_lock@OMP_1.0+0x388>
   21068:	mov	w0, w2
   2106c:	str	w0, [sp, #20]
   21070:	ldr	w0, [sp, #20]
   21074:	cmp	w0, #0x0
   21078:	b.eq	21118 <omp_test_nest_lock@OMP_1.0+0x444>  // b.none
   2107c:	mov	w1, #0xffffffff            	// #-1
   21080:	ldr	x0, [sp, #24]
   21084:	bl	20d7c <omp_test_nest_lock@OMP_1.0+0xa8>
   21088:	b	210dc <omp_test_nest_lock@OMP_1.0+0x408>
   2108c:	str	wzr, [sp, #20]
   21090:	ldr	x1, [sp, #24]
   21094:	add	x0, sp, #0x14
   21098:	ldr	w3, [x0]
   2109c:	mov	w4, #0x1                   	// #1
   210a0:	ldaxr	w2, [x1]
   210a4:	cmp	w2, w3
   210a8:	b.ne	210b4 <omp_test_nest_lock@OMP_1.0+0x3e0>  // b.any
   210ac:	stxr	w5, w4, [x1]
   210b0:	cbnz	w5, 210a0 <omp_test_nest_lock@OMP_1.0+0x3cc>
   210b4:	cset	w1, eq  // eq = none
   210b8:	cmp	w1, #0x0
   210bc:	b.ne	210c4 <omp_test_nest_lock@OMP_1.0+0x3f0>  // b.any
   210c0:	str	w2, [x0]
   210c4:	mov	w0, w1
   210c8:	cmp	w0, #0x0
   210cc:	b.ne	21120 <omp_test_nest_lock@OMP_1.0+0x44c>  // b.any
   210d0:	ldr	w0, [sp, #20]
   210d4:	cmp	w0, #0x1
   210d8:	b.eq	21040 <omp_test_nest_lock@OMP_1.0+0x36c>  // b.none
   210dc:	b	210ec <omp_test_nest_lock@OMP_1.0+0x418>
   210e0:	mov	w1, #0xffffffff            	// #-1
   210e4:	ldr	x0, [sp, #24]
   210e8:	bl	20ff0 <omp_test_nest_lock@OMP_1.0+0x31c>
   210ec:	ldr	x0, [sp, #24]
   210f0:	mov	w1, #0xffffffff            	// #-1
   210f4:	ldaxr	w2, [x0]
   210f8:	stxr	w3, w1, [x0]
   210fc:	cbnz	w3, 210f4 <omp_test_nest_lock@OMP_1.0+0x420>
   21100:	mov	w0, w2
   21104:	str	w0, [sp, #20]
   21108:	ldr	w0, [sp, #20]
   2110c:	cmp	w0, #0x0
   21110:	b.ne	210e0 <omp_test_nest_lock@OMP_1.0+0x40c>  // b.any
   21114:	b	21124 <omp_test_nest_lock@OMP_1.0+0x450>
   21118:	nop
   2111c:	b	21124 <omp_test_nest_lock@OMP_1.0+0x450>
   21120:	nop
   21124:	ldp	x29, x30, [sp], #32
   21128:	ret
   2112c:	stp	x29, x30, [sp, #-32]!
   21130:	mov	x29, sp
   21134:	str	x0, [sp, #24]
   21138:	mov	w1, #0x1                   	// #1
   2113c:	ldr	x0, [sp, #24]
   21140:	bl	20e54 <omp_test_nest_lock@OMP_1.0+0x180>
   21144:	nop
   21148:	ldp	x29, x30, [sp], #32
   2114c:	ret
   21150:	mrs	x1, tpidr_el0
   21154:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   21158:	ldr	x0, [x0, #4016]
   2115c:	add	x0, x1, x0
   21160:	ret
   21164:	stp	x29, x30, [sp, #-48]!
   21168:	mov	x29, sp
   2116c:	strb	w0, [sp, #31]
   21170:	bl	21150 <omp_test_nest_lock@OMP_1.0+0x47c>
   21174:	ldr	x0, [x0, #80]
   21178:	str	x0, [sp, #40]
   2117c:	ldr	x0, [sp, #40]
   21180:	cmp	x0, #0x0
   21184:	b.eq	21194 <omp_test_nest_lock@OMP_1.0+0x4c0>  // b.none
   21188:	ldr	x0, [sp, #40]
   2118c:	add	x0, x0, #0x90
   21190:	b	211b0 <omp_test_nest_lock@OMP_1.0+0x4dc>
   21194:	ldrb	w0, [sp, #31]
   21198:	cmp	w0, #0x0
   2119c:	b.eq	211a8 <omp_test_nest_lock@OMP_1.0+0x4d4>  // b.none
   211a0:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
   211a4:	b	211b0 <omp_test_nest_lock@OMP_1.0+0x4dc>
   211a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   211ac:	add	x0, x0, #0x2d8
   211b0:	ldp	x29, x30, [sp], #48
   211b4:	ret
   211b8:	stp	x29, x30, [sp, #-32]!
   211bc:	mov	x29, sp
   211c0:	str	x0, [sp, #24]
   211c4:	str	x1, [sp, #16]
   211c8:	ldr	x1, [sp, #16]
   211cc:	ldr	x0, [sp, #24]
   211d0:	bl	8b00 <__sched_cpucount@plt>
   211d4:	sxtw	x0, w0
   211d8:	ldp	x29, x30, [sp], #32
   211dc:	ret
   211e0:	stp	x29, x30, [sp, #-48]!
   211e4:	mov	x29, sp
   211e8:	mov	w0, #0x53                  	// #83
   211ec:	bl	8b50 <sysconf@plt>
   211f0:	mov	x1, x0
   211f4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   211f8:	add	x0, x0, #0x6d8
   211fc:	str	x1, [x0]
   21200:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21204:	add	x0, x0, #0x6d8
   21208:	ldr	x0, [x0]
   2120c:	add	x0, x0, #0x3f
   21210:	lsr	x0, x0, #6
   21214:	lsl	x1, x0, #3
   21218:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2121c:	add	x0, x0, #0x6d8
   21220:	str	x1, [x0]
   21224:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21228:	add	x0, x0, #0x6d8
   2122c:	ldr	x0, [x0]
   21230:	bl	8dd0 <fprintf@plt+0x1a0>
   21234:	mov	x1, x0
   21238:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2123c:	add	x0, x0, #0x6e0
   21240:	str	x1, [x0]
   21244:	bl	8bb0 <pthread_self@plt>
   21248:	mov	x3, x0
   2124c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21250:	add	x0, x0, #0x6d8
   21254:	ldr	x1, [x0]
   21258:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2125c:	add	x0, x0, #0x6e0
   21260:	ldr	x0, [x0]
   21264:	mov	x2, x0
   21268:	mov	x0, x3
   2126c:	bl	8a80 <pthread_getaffinity_np@plt>
   21270:	str	w0, [sp, #36]
   21274:	ldr	w0, [sp, #36]
   21278:	cmp	w0, #0x0
   2127c:	b.ne	213b0 <omp_test_nest_lock@OMP_1.0+0x6dc>  // b.any
   21280:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21284:	add	x0, x0, #0x6d8
   21288:	ldr	x2, [x0]
   2128c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21290:	add	x0, x0, #0x6e0
   21294:	ldr	x0, [x0]
   21298:	mov	x1, x0
   2129c:	mov	x0, x2
   212a0:	bl	211b8 <omp_test_nest_lock@OMP_1.0+0x4e4>
   212a4:	mov	x1, x0
   212a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   212ac:	add	x0, x0, #0x2d8
   212b0:	str	x1, [x0]
   212b4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   212b8:	add	x0, x0, #0x2d8
   212bc:	ldr	x0, [x0]
   212c0:	cmp	x0, #0x0
   212c4:	b.eq	21494 <omp_test_nest_lock@OMP_1.0+0x7c0>  // b.none
   212c8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   212cc:	add	x0, x0, #0x6d8
   212d0:	ldr	x1, [x0]
   212d4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   212d8:	add	x0, x0, #0x580
   212dc:	str	x1, [x0]
   212e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   212e4:	add	x0, x0, #0x6d8
   212e8:	ldr	x0, [x0]
   212ec:	lsl	x0, x0, #3
   212f0:	str	x0, [sp, #40]
   212f4:	b	2137c <omp_test_nest_lock@OMP_1.0+0x6a8>
   212f8:	ldr	x0, [sp, #40]
   212fc:	sub	x0, x0, #0x1
   21300:	str	x0, [sp, #16]
   21304:	ldr	x0, [sp, #16]
   21308:	lsr	x1, x0, #3
   2130c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21310:	add	x0, x0, #0x6d8
   21314:	ldr	x0, [x0]
   21318:	cmp	x1, x0
   2131c:	b.cs	21364 <omp_test_nest_lock@OMP_1.0+0x690>  // b.hs, b.nlast
   21320:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21324:	add	x0, x0, #0x6e0
   21328:	ldr	x0, [x0]
   2132c:	mov	x1, x0
   21330:	ldr	x0, [sp, #16]
   21334:	lsr	x0, x0, #6
   21338:	lsl	x0, x0, #3
   2133c:	add	x0, x1, x0
   21340:	ldr	x1, [x0]
   21344:	ldr	x0, [sp, #16]
   21348:	and	w0, w0, #0x3f
   2134c:	lsr	x0, x1, x0
   21350:	and	x0, x0, #0x1
   21354:	cmp	x0, #0x0
   21358:	b.eq	21364 <omp_test_nest_lock@OMP_1.0+0x690>  // b.none
   2135c:	mov	w0, #0x1                   	// #1
   21360:	b	21368 <omp_test_nest_lock@OMP_1.0+0x694>
   21364:	mov	w0, #0x0                   	// #0
   21368:	cmp	w0, #0x0
   2136c:	b.ne	2138c <omp_test_nest_lock@OMP_1.0+0x6b8>  // b.any
   21370:	ldr	x0, [sp, #40]
   21374:	sub	x0, x0, #0x1
   21378:	str	x0, [sp, #40]
   2137c:	ldr	x0, [sp, #40]
   21380:	cmp	x0, #0x0
   21384:	b.ne	212f8 <omp_test_nest_lock@OMP_1.0+0x624>  // b.any
   21388:	b	21390 <omp_test_nest_lock@OMP_1.0+0x6bc>
   2138c:	nop
   21390:	ldr	x0, [sp, #40]
   21394:	add	x0, x0, #0x3f
   21398:	lsr	x0, x0, #6
   2139c:	lsl	x1, x0, #3
   213a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   213a4:	add	x0, x0, #0x6d8
   213a8:	str	x1, [x0]
   213ac:	b	214f8 <omp_test_nest_lock@OMP_1.0+0x824>
   213b0:	ldr	w0, [sp, #36]
   213b4:	cmp	w0, #0x16
   213b8:	b.ne	2149c <omp_test_nest_lock@OMP_1.0+0x7c8>  // b.any
   213bc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   213c0:	add	x0, x0, #0x6d8
   213c4:	ldr	x0, [x0]
   213c8:	cmp	x0, #0x7f
   213cc:	b.hi	213e4 <omp_test_nest_lock@OMP_1.0+0x710>  // b.pmore
   213d0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   213d4:	add	x0, x0, #0x6d8
   213d8:	mov	x1, #0x80                  	// #128
   213dc:	str	x1, [x0]
   213e0:	b	21400 <omp_test_nest_lock@OMP_1.0+0x72c>
   213e4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   213e8:	add	x0, x0, #0x6d8
   213ec:	ldr	x0, [x0]
   213f0:	lsl	x1, x0, #1
   213f4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   213f8:	add	x0, x0, #0x6d8
   213fc:	str	x1, [x0]
   21400:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21404:	add	x0, x0, #0x6d8
   21408:	ldr	x0, [x0]
   2140c:	cmp	x0, #0x3ff
   21410:	b.hi	2144c <omp_test_nest_lock@OMP_1.0+0x778>  // b.pmore
   21414:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21418:	add	x0, x0, #0x6e0
   2141c:	ldr	x2, [x0]
   21420:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21424:	add	x0, x0, #0x6d8
   21428:	ldr	x0, [x0]
   2142c:	mov	x1, x0
   21430:	mov	x0, x2
   21434:	bl	8e54 <fprintf@plt+0x224>
   21438:	mov	x1, x0
   2143c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21440:	add	x0, x0, #0x6e0
   21444:	str	x1, [x0]
   21448:	b	21244 <omp_test_nest_lock@OMP_1.0+0x570>
   2144c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21450:	add	x0, x0, #0x6e0
   21454:	ldr	x2, [x0]
   21458:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2145c:	add	x0, x0, #0x6d8
   21460:	ldr	x0, [x0]
   21464:	mov	x1, x0
   21468:	mov	x0, x2
   2146c:	bl	8920 <realloc@plt>
   21470:	str	x0, [sp, #24]
   21474:	ldr	x0, [sp, #24]
   21478:	cmp	x0, #0x0
   2147c:	b.eq	214a4 <omp_test_nest_lock@OMP_1.0+0x7d0>  // b.none
   21480:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21484:	add	x0, x0, #0x6e0
   21488:	ldr	x1, [sp, #24]
   2148c:	str	x1, [x0]
   21490:	b	21244 <omp_test_nest_lock@OMP_1.0+0x570>
   21494:	nop
   21498:	b	214a8 <omp_test_nest_lock@OMP_1.0+0x7d4>
   2149c:	nop
   214a0:	b	214a8 <omp_test_nest_lock@OMP_1.0+0x7d4>
   214a4:	nop
   214a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   214ac:	add	x0, x0, #0x6d8
   214b0:	str	xzr, [x0]
   214b4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   214b8:	add	x0, x0, #0x2d8
   214bc:	mov	x1, #0x1                   	// #1
   214c0:	str	x1, [x0]
   214c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   214c8:	add	x0, x0, #0x6e0
   214cc:	ldr	x0, [x0]
   214d0:	bl	8a20 <free@plt>
   214d4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   214d8:	add	x0, x0, #0x6e0
   214dc:	str	xzr, [x0]
   214e0:	mov	w0, #0x54                  	// #84
   214e4:	bl	8b50 <sysconf@plt>
   214e8:	mov	x1, x0
   214ec:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   214f0:	add	x0, x0, #0x2d8
   214f4:	str	x1, [x0]
   214f8:	ldp	x29, x30, [sp], #48
   214fc:	ret
   21500:	stp	x29, x30, [sp, #-32]!
   21504:	mov	x29, sp
   21508:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2150c:	add	x0, x0, #0x650
   21510:	ldr	x0, [x0]
   21514:	cmp	x0, #0x0
   21518:	b.ne	215a8 <omp_test_nest_lock@OMP_1.0+0x8d4>  // b.any
   2151c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21520:	add	x0, x0, #0x6e0
   21524:	ldr	x0, [x0]
   21528:	cmp	x0, #0x0
   2152c:	b.eq	215b8 <omp_test_nest_lock@OMP_1.0+0x8e4>  // b.none
   21530:	bl	8bb0 <pthread_self@plt>
   21534:	mov	x3, x0
   21538:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2153c:	add	x0, x0, #0x580
   21540:	ldr	x1, [x0]
   21544:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21548:	add	x0, x0, #0x6e0
   2154c:	ldr	x0, [x0]
   21550:	mov	x2, x0
   21554:	mov	x0, x3
   21558:	bl	8a80 <pthread_getaffinity_np@plt>
   2155c:	cmp	w0, #0x0
   21560:	b.ne	215b8 <omp_test_nest_lock@OMP_1.0+0x8e4>  // b.any
   21564:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21568:	add	x0, x0, #0x580
   2156c:	ldr	x2, [x0]
   21570:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21574:	add	x0, x0, #0x6e0
   21578:	ldr	x0, [x0]
   2157c:	mov	x1, x0
   21580:	mov	x0, x2
   21584:	bl	211b8 <omp_test_nest_lock@OMP_1.0+0x4e4>
   21588:	str	w0, [sp, #28]
   2158c:	ldr	w0, [sp, #28]
   21590:	cmp	w0, #0x0
   21594:	b.eq	215a0 <omp_test_nest_lock@OMP_1.0+0x8cc>  // b.none
   21598:	ldr	w0, [sp, #28]
   2159c:	b	215c0 <omp_test_nest_lock@OMP_1.0+0x8ec>
   215a0:	mov	w0, #0x1                   	// #1
   215a4:	b	215c0 <omp_test_nest_lock@OMP_1.0+0x8ec>
   215a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   215ac:	add	x0, x0, #0x308
   215b0:	ldr	x0, [x0]
   215b4:	b	215c0 <omp_test_nest_lock@OMP_1.0+0x8ec>
   215b8:	mov	w0, #0x54                  	// #84
   215bc:	bl	8b50 <sysconf@plt>
   215c0:	ldp	x29, x30, [sp], #32
   215c4:	ret
   215c8:	stp	x29, x30, [sp, #-64]!
   215cc:	mov	x29, sp
   215d0:	mov	w0, #0x0                   	// #0
   215d4:	bl	21164 <omp_test_nest_lock@OMP_1.0+0x490>
   215d8:	ldr	x0, [x0]
   215dc:	str	w0, [sp, #52]
   215e0:	bl	21500 <omp_test_nest_lock@OMP_1.0+0x82c>
   215e4:	str	w0, [sp, #60]
   215e8:	ldr	w1, [sp, #60]
   215ec:	ldr	w0, [sp, #52]
   215f0:	cmp	w1, w0
   215f4:	b.ls	21600 <omp_test_nest_lock@OMP_1.0+0x92c>  // b.plast
   215f8:	ldr	w0, [sp, #52]
   215fc:	str	w0, [sp, #60]
   21600:	str	wzr, [sp, #56]
   21604:	add	x0, sp, #0x18
   21608:	mov	w1, #0x3                   	// #3
   2160c:	bl	8760 <getloadavg@plt>
   21610:	cmp	w0, #0x3
   21614:	b.ne	21630 <omp_test_nest_lock@OMP_1.0+0x95c>  // b.any
   21618:	ldr	d0, [sp, #40]
   2161c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   21620:	ldr	d1, [x0, #1392]
   21624:	fadd	d0, d0, d1
   21628:	fcvtzu	w0, d0
   2162c:	str	w0, [sp, #56]
   21630:	ldr	w1, [sp, #56]
   21634:	ldr	w0, [sp, #60]
   21638:	cmp	w1, w0
   2163c:	b.cc	21648 <omp_test_nest_lock@OMP_1.0+0x974>  // b.lo, b.ul, b.last
   21640:	mov	w0, #0x1                   	// #1
   21644:	b	21654 <omp_test_nest_lock@OMP_1.0+0x980>
   21648:	ldr	w1, [sp, #60]
   2164c:	ldr	w0, [sp, #56]
   21650:	sub	w0, w1, w0
   21654:	ldp	x29, x30, [sp], #64
   21658:	ret

000000000002165c <omp_get_num_procs@@OMP_1.0>:
   2165c:	stp	x29, x30, [sp, #-16]!
   21660:	mov	x29, sp
   21664:	bl	21500 <omp_test_nest_lock@OMP_1.0+0x82c>
   21668:	ldp	x29, x30, [sp], #16
   2166c:	ret
   21670:	stp	x29, x30, [sp, #-48]!
   21674:	mov	x29, sp
   21678:	str	x0, [sp, #24]
   2167c:	str	w1, [sp, #20]
   21680:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21684:	add	x0, x0, #0x364
   21688:	ldr	w0, [x0]
   2168c:	mov	x4, #0x0                   	// #0
   21690:	ldr	w3, [sp, #20]
   21694:	mov	w2, w0
   21698:	ldr	x1, [sp, #24]
   2169c:	mov	x0, #0x62                  	// #98
   216a0:	bl	8c10 <syscall@plt>
   216a4:	str	w0, [sp, #44]
   216a8:	ldr	w0, [sp, #44]
   216ac:	lsr	w0, w0, #31
   216b0:	and	w0, w0, #0xff
   216b4:	and	x0, x0, #0xff
   216b8:	cmp	x0, #0x0
   216bc:	b.eq	2173c <omp_get_num_procs@@OMP_1.0+0xe0>  // b.none
   216c0:	bl	8be0 <__errno_location@plt>
   216c4:	ldr	w0, [x0]
   216c8:	cmp	w0, #0x26
   216cc:	cset	w0, eq  // eq = none
   216d0:	and	w0, w0, #0xff
   216d4:	and	x0, x0, #0xff
   216d8:	cmp	x0, #0x0
   216dc:	b.eq	2173c <omp_get_num_procs@@OMP_1.0+0xe0>  // b.none
   216e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   216e4:	add	x0, x0, #0x364
   216e8:	ldr	w0, [x0]
   216ec:	and	w1, w0, #0xffffff7f
   216f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   216f4:	add	x0, x0, #0x364
   216f8:	str	w1, [x0]
   216fc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21700:	add	x0, x0, #0x360
   21704:	ldr	w0, [x0]
   21708:	and	w1, w0, #0xffffff7f
   2170c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21710:	add	x0, x0, #0x360
   21714:	str	w1, [x0]
   21718:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2171c:	add	x0, x0, #0x364
   21720:	ldr	w0, [x0]
   21724:	mov	x4, #0x0                   	// #0
   21728:	ldr	w3, [sp, #20]
   2172c:	mov	w2, w0
   21730:	ldr	x1, [sp, #24]
   21734:	mov	x0, #0x62                  	// #98
   21738:	bl	8c10 <syscall@plt>
   2173c:	nop
   21740:	ldp	x29, x30, [sp], #48
   21744:	ret
   21748:	stp	x29, x30, [sp, #-48]!
   2174c:	mov	x29, sp
   21750:	str	x0, [sp, #24]
   21754:	str	w1, [sp, #20]
   21758:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2175c:	add	x0, x0, #0x360
   21760:	ldr	w0, [x0]
   21764:	ldr	w3, [sp, #20]
   21768:	mov	w2, w0
   2176c:	ldr	x1, [sp, #24]
   21770:	mov	x0, #0x62                  	// #98
   21774:	bl	8c10 <syscall@plt>
   21778:	str	w0, [sp, #44]
   2177c:	ldr	w0, [sp, #44]
   21780:	lsr	w0, w0, #31
   21784:	and	w0, w0, #0xff
   21788:	and	x0, x0, #0xff
   2178c:	cmp	x0, #0x0
   21790:	b.eq	2180c <omp_get_num_procs@@OMP_1.0+0x1b0>  // b.none
   21794:	bl	8be0 <__errno_location@plt>
   21798:	ldr	w0, [x0]
   2179c:	cmp	w0, #0x26
   217a0:	cset	w0, eq  // eq = none
   217a4:	and	w0, w0, #0xff
   217a8:	and	x0, x0, #0xff
   217ac:	cmp	x0, #0x0
   217b0:	b.eq	2180c <omp_get_num_procs@@OMP_1.0+0x1b0>  // b.none
   217b4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   217b8:	add	x0, x0, #0x364
   217bc:	ldr	w0, [x0]
   217c0:	and	w1, w0, #0xffffff7f
   217c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   217c8:	add	x0, x0, #0x364
   217cc:	str	w1, [x0]
   217d0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   217d4:	add	x0, x0, #0x360
   217d8:	ldr	w0, [x0]
   217dc:	and	w1, w0, #0xffffff7f
   217e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   217e4:	add	x0, x0, #0x360
   217e8:	str	w1, [x0]
   217ec:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   217f0:	add	x0, x0, #0x360
   217f4:	ldr	w0, [x0]
   217f8:	ldr	w3, [sp, #20]
   217fc:	mov	w2, w0
   21800:	ldr	x1, [sp, #24]
   21804:	mov	x0, #0x62                  	// #98
   21808:	bl	8c10 <syscall@plt>
   2180c:	nop
   21810:	ldp	x29, x30, [sp], #48
   21814:	ret
   21818:	nop
   2181c:	ret
   21820:	stp	x29, x30, [sp, #-48]!
   21824:	mov	x29, sp
   21828:	str	x0, [sp, #24]
   2182c:	str	w1, [sp, #20]
   21830:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21834:	add	x0, x0, #0x660
   21838:	ldr	x0, [x0]
   2183c:	str	x0, [sp, #32]
   21840:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21844:	add	x0, x0, #0x310
   21848:	ldr	x1, [x0]
   2184c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21850:	add	x0, x0, #0x308
   21854:	ldr	x0, [x0]
   21858:	cmp	x1, x0
   2185c:	cset	w0, hi  // hi = pmore
   21860:	and	w0, w0, #0xff
   21864:	and	x0, x0, #0xff
   21868:	cmp	x0, #0x0
   2186c:	b.eq	21880 <omp_get_num_procs@@OMP_1.0+0x224>  // b.none
   21870:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21874:	add	x0, x0, #0x670
   21878:	ldr	x0, [x0]
   2187c:	str	x0, [sp, #32]
   21880:	str	xzr, [sp, #40]
   21884:	b	218c8 <omp_get_num_procs@@OMP_1.0+0x26c>
   21888:	ldr	x0, [sp, #24]
   2188c:	ldr	w0, [x0]
   21890:	mov	w1, w0
   21894:	ldr	w0, [sp, #20]
   21898:	cmp	w0, w1
   2189c:	cset	w0, ne  // ne = any
   218a0:	and	w0, w0, #0xff
   218a4:	and	x0, x0, #0xff
   218a8:	cmp	x0, #0x0
   218ac:	b.eq	218b8 <omp_get_num_procs@@OMP_1.0+0x25c>  // b.none
   218b0:	mov	w0, #0x0                   	// #0
   218b4:	b	218dc <omp_get_num_procs@@OMP_1.0+0x280>
   218b8:	bl	21818 <omp_get_num_procs@@OMP_1.0+0x1bc>
   218bc:	ldr	x0, [sp, #40]
   218c0:	add	x0, x0, #0x1
   218c4:	str	x0, [sp, #40]
   218c8:	ldr	x1, [sp, #40]
   218cc:	ldr	x0, [sp, #32]
   218d0:	cmp	x1, x0
   218d4:	b.cc	21888 <omp_get_num_procs@@OMP_1.0+0x22c>  // b.lo, b.ul, b.last
   218d8:	mov	w0, #0x1                   	// #1
   218dc:	ldp	x29, x30, [sp], #48
   218e0:	ret
   218e4:	stp	x29, x30, [sp, #-32]!
   218e8:	mov	x29, sp
   218ec:	str	x0, [sp, #24]
   218f0:	str	w1, [sp, #20]
   218f4:	ldr	w1, [sp, #20]
   218f8:	ldr	x0, [sp, #24]
   218fc:	bl	21820 <omp_get_num_procs@@OMP_1.0+0x1c4>
   21900:	cmp	w0, #0x0
   21904:	b.eq	21914 <omp_get_num_procs@@OMP_1.0+0x2b8>  // b.none
   21908:	ldr	w1, [sp, #20]
   2190c:	ldr	x0, [sp, #24]
   21910:	bl	21670 <omp_get_num_procs@@OMP_1.0+0x14>
   21914:	nop
   21918:	ldp	x29, x30, [sp], #32
   2191c:	ret
   21920:	stp	x29, x30, [sp, #-48]!
   21924:	mov	x29, sp
   21928:	str	x0, [sp, #24]
   2192c:	str	w1, [sp, #20]
   21930:	b	21a30 <omp_get_num_procs@@OMP_1.0+0x3d4>
   21934:	mov	w1, #0x0                   	// #0
   21938:	ldr	x0, [sp, #24]
   2193c:	bl	21820 <omp_get_num_procs@@OMP_1.0+0x1c4>
   21940:	cmp	w0, #0x0
   21944:	b.eq	219a4 <omp_get_num_procs@@OMP_1.0+0x348>  // b.none
   21948:	ldr	x1, [sp, #24]
   2194c:	add	x0, sp, #0x14
   21950:	ldr	w3, [x0]
   21954:	mov	w4, #0x80000000            	// #-2147483648
   21958:	ldaxr	w2, [x1]
   2195c:	cmp	w2, w3
   21960:	b.ne	2196c <omp_get_num_procs@@OMP_1.0+0x310>  // b.any
   21964:	stxr	w5, w4, [x1]
   21968:	cbnz	w5, 21958 <omp_get_num_procs@@OMP_1.0+0x2fc>
   2196c:	cset	w1, eq  // eq = none
   21970:	cmp	w1, #0x0
   21974:	b.ne	2197c <omp_get_num_procs@@OMP_1.0+0x320>  // b.any
   21978:	str	w2, [x0]
   2197c:	mov	w0, w1
   21980:	cmp	w0, #0x0
   21984:	b.eq	219a4 <omp_get_num_procs@@OMP_1.0+0x348>  // b.none
   21988:	mov	w1, #0x80000000            	// #-2147483648
   2198c:	ldr	x0, [sp, #24]
   21990:	bl	21670 <omp_get_num_procs@@OMP_1.0+0x14>
   21994:	ldr	x0, [sp, #24]
   21998:	ldr	w0, [x0]
   2199c:	str	w0, [sp, #20]
   219a0:	b	21a3c <omp_get_num_procs@@OMP_1.0+0x3e0>
   219a4:	ldr	x0, [sp, #24]
   219a8:	ldr	w0, [x0]
   219ac:	str	w0, [sp, #20]
   219b0:	ldr	w0, [sp, #20]
   219b4:	mvn	w0, w0
   219b8:	lsr	w0, w0, #31
   219bc:	and	w0, w0, #0xff
   219c0:	and	x0, x0, #0xff
   219c4:	cmp	x0, #0x0
   219c8:	b.eq	21a30 <omp_get_num_procs@@OMP_1.0+0x3d4>  // b.none
   219cc:	ldr	w0, [sp, #20]
   219d0:	cmp	w0, #0x0
   219d4:	cset	w0, ne  // ne = any
   219d8:	and	w0, w0, #0xff
   219dc:	and	x0, x0, #0xff
   219e0:	cmp	x0, #0x0
   219e4:	b.eq	21a30 <omp_get_num_procs@@OMP_1.0+0x3d4>  // b.none
   219e8:	ldr	w0, [sp, #20]
   219ec:	sub	w0, w0, #0x1
   219f0:	mov	w4, w0
   219f4:	ldr	x1, [sp, #24]
   219f8:	add	x0, sp, #0x14
   219fc:	ldr	w3, [x0]
   21a00:	ldaxr	w2, [x1]
   21a04:	cmp	w2, w3
   21a08:	b.ne	21a14 <omp_get_num_procs@@OMP_1.0+0x3b8>  // b.any
   21a0c:	stxr	w5, w4, [x1]
   21a10:	cbnz	w5, 21a00 <omp_get_num_procs@@OMP_1.0+0x3a4>
   21a14:	cset	w1, eq  // eq = none
   21a18:	cmp	w1, #0x0
   21a1c:	b.ne	21a24 <omp_get_num_procs@@OMP_1.0+0x3c8>  // b.any
   21a20:	str	w2, [x0]
   21a24:	mov	w0, w1
   21a28:	cmp	w0, #0x0
   21a2c:	b.ne	21af0 <omp_get_num_procs@@OMP_1.0+0x494>  // b.any
   21a30:	ldr	w0, [sp, #20]
   21a34:	cmp	w0, #0x0
   21a38:	b.eq	21934 <omp_get_num_procs@@OMP_1.0+0x2d8>  // b.none
   21a3c:	ldr	w0, [sp, #20]
   21a40:	and	w0, w0, #0x7fffffff
   21a44:	str	w0, [sp, #40]
   21a48:	mov	w0, #0x80000000            	// #-2147483648
   21a4c:	str	w0, [sp, #44]
   21a50:	ldr	w0, [sp, #40]
   21a54:	cmp	w0, #0x0
   21a58:	b.eq	21a70 <omp_get_num_procs@@OMP_1.0+0x414>  // b.none
   21a5c:	ldr	w0, [sp, #40]
   21a60:	sub	w1, w0, #0x1
   21a64:	ldr	w0, [sp, #44]
   21a68:	orr	w0, w1, w0
   21a6c:	str	w0, [sp, #44]
   21a70:	ldr	w4, [sp, #44]
   21a74:	ldr	x1, [sp, #24]
   21a78:	add	x0, sp, #0x14
   21a7c:	ldr	w3, [x0]
   21a80:	ldaxr	w2, [x1]
   21a84:	cmp	w2, w3
   21a88:	b.ne	21a94 <omp_get_num_procs@@OMP_1.0+0x438>  // b.any
   21a8c:	stxr	w5, w4, [x1]
   21a90:	cbnz	w5, 21a80 <omp_get_num_procs@@OMP_1.0+0x424>
   21a94:	cset	w1, eq  // eq = none
   21a98:	cmp	w1, #0x0
   21a9c:	b.ne	21aa4 <omp_get_num_procs@@OMP_1.0+0x448>  // b.any
   21aa0:	str	w2, [x0]
   21aa4:	mov	w0, w1
   21aa8:	cmp	w0, #0x0
   21aac:	b.eq	21a3c <omp_get_num_procs@@OMP_1.0+0x3e0>  // b.none
   21ab0:	ldr	w0, [sp, #40]
   21ab4:	cmp	w0, #0x0
   21ab8:	b.eq	21ad4 <omp_get_num_procs@@OMP_1.0+0x478>  // b.none
   21abc:	ldr	w0, [sp, #40]
   21ac0:	cmp	w0, #0x1
   21ac4:	b.ls	21af8 <omp_get_num_procs@@OMP_1.0+0x49c>  // b.plast
   21ac8:	ldr	x0, [sp, #24]
   21acc:	bl	21b04 <omp_get_num_procs@@OMP_1.0+0x4a8>
   21ad0:	b	21af8 <omp_get_num_procs@@OMP_1.0+0x49c>
   21ad4:	mov	w1, #0x80000000            	// #-2147483648
   21ad8:	ldr	x0, [sp, #24]
   21adc:	bl	218e4 <omp_get_num_procs@@OMP_1.0+0x288>
   21ae0:	ldr	x0, [sp, #24]
   21ae4:	ldr	w0, [x0]
   21ae8:	str	w0, [sp, #20]
   21aec:	b	21a3c <omp_get_num_procs@@OMP_1.0+0x3e0>
   21af0:	nop
   21af4:	b	21afc <omp_get_num_procs@@OMP_1.0+0x4a0>
   21af8:	nop
   21afc:	ldp	x29, x30, [sp], #48
   21b00:	ret
   21b04:	stp	x29, x30, [sp, #-32]!
   21b08:	mov	x29, sp
   21b0c:	str	x0, [sp, #24]
   21b10:	mov	w1, #0x1                   	// #1
   21b14:	ldr	x0, [sp, #24]
   21b18:	bl	21748 <omp_get_num_procs@@OMP_1.0+0xec>
   21b1c:	nop
   21b20:	ldp	x29, x30, [sp], #32
   21b24:	ret
   21b28:	stp	x29, x30, [sp, #-48]!
   21b2c:	mov	x29, sp
   21b30:	str	x0, [sp, #24]
   21b34:	str	wzr, [sp, #44]
   21b38:	ldr	x1, [sp, #24]
   21b3c:	add	x0, sp, #0x2c
   21b40:	ldr	w3, [x0]
   21b44:	mov	w4, #0x1                   	// #1
   21b48:	ldaxr	w2, [x1]
   21b4c:	cmp	w2, w3
   21b50:	b.ne	21b5c <omp_get_num_procs@@OMP_1.0+0x500>  // b.any
   21b54:	stxr	w5, w4, [x1]
   21b58:	cbnz	w5, 21b48 <omp_get_num_procs@@OMP_1.0+0x4ec>
   21b5c:	cset	w1, eq  // eq = none
   21b60:	cmp	w1, #0x0
   21b64:	b.ne	21b6c <omp_get_num_procs@@OMP_1.0+0x510>  // b.any
   21b68:	str	w2, [x0]
   21b6c:	mov	w0, w1
   21b70:	eor	w0, w0, #0x1
   21b74:	and	w0, w0, #0xff
   21b78:	cmp	w0, #0x0
   21b7c:	b.eq	21b90 <omp_get_num_procs@@OMP_1.0+0x534>  // b.none
   21b80:	ldr	w0, [sp, #44]
   21b84:	mov	w1, w0
   21b88:	ldr	x0, [sp, #24]
   21b8c:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
   21b90:	nop
   21b94:	ldp	x29, x30, [sp], #48
   21b98:	ret
   21b9c:	stp	x29, x30, [sp, #-48]!
   21ba0:	mov	x29, sp
   21ba4:	str	x0, [sp, #24]
   21ba8:	ldr	x1, [sp, #24]
   21bac:	ldxr	w0, [x1]
   21bb0:	stlxr	w2, wzr, [x1]
   21bb4:	cbnz	w2, 21bac <omp_get_num_procs@@OMP_1.0+0x550>
   21bb8:	str	w0, [sp, #44]
   21bbc:	ldr	w0, [sp, #44]
   21bc0:	lsr	w0, w0, #31
   21bc4:	and	w0, w0, #0xff
   21bc8:	and	x0, x0, #0xff
   21bcc:	cmp	x0, #0x0
   21bd0:	b.eq	21bdc <omp_get_num_procs@@OMP_1.0+0x580>  // b.none
   21bd4:	ldr	x0, [sp, #24]
   21bd8:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
   21bdc:	nop
   21be0:	ldp	x29, x30, [sp], #48
   21be4:	ret
   21be8:	sub	sp, sp, #0x20
   21bec:	str	x0, [sp, #8]
   21bf0:	ldr	x0, [sp, #8]
   21bf4:	add	x0, x0, #0x4
   21bf8:	ldar	w0, [x0]
   21bfc:	str	w0, [sp, #28]
   21c00:	ldr	w0, [sp, #28]
   21c04:	and	w0, w0, #0xfffffffc
   21c08:	str	w0, [sp, #28]
   21c0c:	ldr	x0, [sp, #8]
   21c10:	add	x0, x0, #0x40
   21c14:	ldaxr	w1, [x0]
   21c18:	sub	w1, w1, #0x1
   21c1c:	stlxr	w2, w1, [x0]
   21c20:	cbnz	w2, 21c14 <omp_get_num_procs@@OMP_1.0+0x5b8>
   21c24:	cmp	w1, #0x0
   21c28:	b.ne	21c38 <omp_get_num_procs@@OMP_1.0+0x5dc>  // b.any
   21c2c:	ldr	w0, [sp, #28]
   21c30:	orr	w0, w0, #0x1
   21c34:	str	w0, [sp, #28]
   21c38:	ldr	w0, [sp, #28]
   21c3c:	add	sp, sp, #0x20
   21c40:	ret
   21c44:	sub	sp, sp, #0x20
   21c48:	str	x0, [sp, #8]
   21c4c:	ldr	x0, [sp, #8]
   21c50:	add	x0, x0, #0x4
   21c54:	ldar	w0, [x0]
   21c58:	str	w0, [sp, #28]
   21c5c:	ldr	w0, [sp, #28]
   21c60:	and	w0, w0, #0xfffffffc
   21c64:	str	w0, [sp, #28]
   21c68:	ldr	x0, [sp, #8]
   21c6c:	add	x0, x0, #0x44
   21c70:	ldaxr	w1, [x0]
   21c74:	sub	w1, w1, #0x1
   21c78:	stlxr	w2, w1, [x0]
   21c7c:	cbnz	w2, 21c70 <omp_get_num_procs@@OMP_1.0+0x614>
   21c80:	cmp	w1, #0x0
   21c84:	b.ne	21c94 <omp_get_num_procs@@OMP_1.0+0x638>  // b.any
   21c88:	ldr	w0, [sp, #28]
   21c8c:	orr	w0, w0, #0x1
   21c90:	str	w0, [sp, #28]
   21c94:	ldr	w0, [sp, #28]
   21c98:	add	sp, sp, #0x20
   21c9c:	ret
   21ca0:	mrs	x1, tpidr_el0
   21ca4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   21ca8:	ldr	x0, [x0, #4016]
   21cac:	add	x0, x1, x0
   21cb0:	ret
   21cb4:	stp	x29, x30, [sp, #-48]!
   21cb8:	mov	x29, sp
   21cbc:	str	x0, [sp, #24]
   21cc0:	str	w1, [sp, #20]
   21cc4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21cc8:	add	x0, x0, #0x364
   21ccc:	ldr	w0, [x0]
   21cd0:	mov	x4, #0x0                   	// #0
   21cd4:	ldr	w3, [sp, #20]
   21cd8:	mov	w2, w0
   21cdc:	ldr	x1, [sp, #24]
   21ce0:	mov	x0, #0x62                  	// #98
   21ce4:	bl	8c10 <syscall@plt>
   21ce8:	str	w0, [sp, #44]
   21cec:	ldr	w0, [sp, #44]
   21cf0:	lsr	w0, w0, #31
   21cf4:	and	w0, w0, #0xff
   21cf8:	and	x0, x0, #0xff
   21cfc:	cmp	x0, #0x0
   21d00:	b.eq	21d80 <omp_get_num_procs@@OMP_1.0+0x724>  // b.none
   21d04:	bl	8be0 <__errno_location@plt>
   21d08:	ldr	w0, [x0]
   21d0c:	cmp	w0, #0x26
   21d10:	cset	w0, eq  // eq = none
   21d14:	and	w0, w0, #0xff
   21d18:	and	x0, x0, #0xff
   21d1c:	cmp	x0, #0x0
   21d20:	b.eq	21d80 <omp_get_num_procs@@OMP_1.0+0x724>  // b.none
   21d24:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21d28:	add	x0, x0, #0x364
   21d2c:	ldr	w0, [x0]
   21d30:	and	w1, w0, #0xffffff7f
   21d34:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21d38:	add	x0, x0, #0x364
   21d3c:	str	w1, [x0]
   21d40:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21d44:	add	x0, x0, #0x360
   21d48:	ldr	w0, [x0]
   21d4c:	and	w1, w0, #0xffffff7f
   21d50:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21d54:	add	x0, x0, #0x360
   21d58:	str	w1, [x0]
   21d5c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21d60:	add	x0, x0, #0x364
   21d64:	ldr	w0, [x0]
   21d68:	mov	x4, #0x0                   	// #0
   21d6c:	ldr	w3, [sp, #20]
   21d70:	mov	w2, w0
   21d74:	ldr	x1, [sp, #24]
   21d78:	mov	x0, #0x62                  	// #98
   21d7c:	bl	8c10 <syscall@plt>
   21d80:	nop
   21d84:	ldp	x29, x30, [sp], #48
   21d88:	ret
   21d8c:	stp	x29, x30, [sp, #-48]!
   21d90:	mov	x29, sp
   21d94:	str	x0, [sp, #24]
   21d98:	str	w1, [sp, #20]
   21d9c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21da0:	add	x0, x0, #0x360
   21da4:	ldr	w0, [x0]
   21da8:	ldr	w3, [sp, #20]
   21dac:	mov	w2, w0
   21db0:	ldr	x1, [sp, #24]
   21db4:	mov	x0, #0x62                  	// #98
   21db8:	bl	8c10 <syscall@plt>
   21dbc:	str	w0, [sp, #44]
   21dc0:	ldr	w0, [sp, #44]
   21dc4:	lsr	w0, w0, #31
   21dc8:	and	w0, w0, #0xff
   21dcc:	and	x0, x0, #0xff
   21dd0:	cmp	x0, #0x0
   21dd4:	b.eq	21e50 <omp_get_num_procs@@OMP_1.0+0x7f4>  // b.none
   21dd8:	bl	8be0 <__errno_location@plt>
   21ddc:	ldr	w0, [x0]
   21de0:	cmp	w0, #0x26
   21de4:	cset	w0, eq  // eq = none
   21de8:	and	w0, w0, #0xff
   21dec:	and	x0, x0, #0xff
   21df0:	cmp	x0, #0x0
   21df4:	b.eq	21e50 <omp_get_num_procs@@OMP_1.0+0x7f4>  // b.none
   21df8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21dfc:	add	x0, x0, #0x364
   21e00:	ldr	w0, [x0]
   21e04:	and	w1, w0, #0xffffff7f
   21e08:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21e0c:	add	x0, x0, #0x364
   21e10:	str	w1, [x0]
   21e14:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21e18:	add	x0, x0, #0x360
   21e1c:	ldr	w0, [x0]
   21e20:	and	w1, w0, #0xffffff7f
   21e24:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21e28:	add	x0, x0, #0x360
   21e2c:	str	w1, [x0]
   21e30:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21e34:	add	x0, x0, #0x360
   21e38:	ldr	w0, [x0]
   21e3c:	ldr	w3, [sp, #20]
   21e40:	mov	w2, w0
   21e44:	ldr	x1, [sp, #24]
   21e48:	mov	x0, #0x62                  	// #98
   21e4c:	bl	8c10 <syscall@plt>
   21e50:	nop
   21e54:	ldp	x29, x30, [sp], #48
   21e58:	ret
   21e5c:	nop
   21e60:	ret
   21e64:	stp	x29, x30, [sp, #-48]!
   21e68:	mov	x29, sp
   21e6c:	str	x0, [sp, #24]
   21e70:	str	w1, [sp, #20]
   21e74:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21e78:	add	x0, x0, #0x660
   21e7c:	ldr	x0, [x0]
   21e80:	str	x0, [sp, #32]
   21e84:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21e88:	add	x0, x0, #0x310
   21e8c:	ldr	x1, [x0]
   21e90:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21e94:	add	x0, x0, #0x308
   21e98:	ldr	x0, [x0]
   21e9c:	cmp	x1, x0
   21ea0:	cset	w0, hi  // hi = pmore
   21ea4:	and	w0, w0, #0xff
   21ea8:	and	x0, x0, #0xff
   21eac:	cmp	x0, #0x0
   21eb0:	b.eq	21ec4 <omp_get_num_procs@@OMP_1.0+0x868>  // b.none
   21eb4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   21eb8:	add	x0, x0, #0x670
   21ebc:	ldr	x0, [x0]
   21ec0:	str	x0, [sp, #32]
   21ec4:	str	xzr, [sp, #40]
   21ec8:	b	21f0c <omp_get_num_procs@@OMP_1.0+0x8b0>
   21ecc:	ldr	x0, [sp, #24]
   21ed0:	ldr	w0, [x0]
   21ed4:	mov	w1, w0
   21ed8:	ldr	w0, [sp, #20]
   21edc:	cmp	w0, w1
   21ee0:	cset	w0, ne  // ne = any
   21ee4:	and	w0, w0, #0xff
   21ee8:	and	x0, x0, #0xff
   21eec:	cmp	x0, #0x0
   21ef0:	b.eq	21efc <omp_get_num_procs@@OMP_1.0+0x8a0>  // b.none
   21ef4:	mov	w0, #0x0                   	// #0
   21ef8:	b	21f20 <omp_get_num_procs@@OMP_1.0+0x8c4>
   21efc:	bl	21e5c <omp_get_num_procs@@OMP_1.0+0x800>
   21f00:	ldr	x0, [sp, #40]
   21f04:	add	x0, x0, #0x1
   21f08:	str	x0, [sp, #40]
   21f0c:	ldr	x1, [sp, #40]
   21f10:	ldr	x0, [sp, #32]
   21f14:	cmp	x1, x0
   21f18:	b.cc	21ecc <omp_get_num_procs@@OMP_1.0+0x870>  // b.lo, b.ul, b.last
   21f1c:	mov	w0, #0x1                   	// #1
   21f20:	ldp	x29, x30, [sp], #48
   21f24:	ret
   21f28:	stp	x29, x30, [sp, #-32]!
   21f2c:	mov	x29, sp
   21f30:	str	x0, [sp, #24]
   21f34:	str	w1, [sp, #20]
   21f38:	ldr	w1, [sp, #20]
   21f3c:	ldr	x0, [sp, #24]
   21f40:	bl	21e64 <omp_get_num_procs@@OMP_1.0+0x808>
   21f44:	cmp	w0, #0x0
   21f48:	b.eq	21f58 <omp_get_num_procs@@OMP_1.0+0x8fc>  // b.none
   21f4c:	ldr	w1, [sp, #20]
   21f50:	ldr	x0, [sp, #24]
   21f54:	bl	21cb4 <omp_get_num_procs@@OMP_1.0+0x658>
   21f58:	nop
   21f5c:	ldp	x29, x30, [sp], #32
   21f60:	ret
   21f64:	stp	x29, x30, [sp, #-32]!
   21f68:	mov	x29, sp
   21f6c:	str	x0, [sp, #24]
   21f70:	str	w1, [sp, #20]
   21f74:	ldr	w0, [sp, #20]
   21f78:	and	x0, x0, #0x1
   21f7c:	cmp	x0, #0x0
   21f80:	b.eq	21fc0 <omp_get_num_procs@@OMP_1.0+0x964>  // b.none
   21f84:	ldr	x0, [sp, #24]
   21f88:	ldr	w1, [x0]
   21f8c:	ldr	x0, [sp, #24]
   21f90:	str	w1, [x0, #64]
   21f94:	ldr	x0, [sp, #24]
   21f98:	add	x0, x0, #0x4
   21f9c:	ldr	x1, [sp, #24]
   21fa0:	ldr	w1, [x1, #4]
   21fa4:	add	w1, w1, #0x8
   21fa8:	stlr	w1, [x0]
   21fac:	ldr	x0, [sp, #24]
   21fb0:	add	x0, x0, #0x4
   21fb4:	mov	w1, #0x7fffffff            	// #2147483647
   21fb8:	bl	21d8c <omp_get_num_procs@@OMP_1.0+0x730>
   21fbc:	b	21fe8 <omp_get_num_procs@@OMP_1.0+0x98c>
   21fc0:	ldr	x0, [sp, #24]
   21fc4:	add	x0, x0, #0x4
   21fc8:	ldr	w1, [sp, #20]
   21fcc:	bl	21f28 <omp_get_num_procs@@OMP_1.0+0x8cc>
   21fd0:	ldr	x0, [sp, #24]
   21fd4:	add	x0, x0, #0x4
   21fd8:	ldar	w0, [x0]
   21fdc:	ldr	w1, [sp, #20]
   21fe0:	cmp	w1, w0
   21fe4:	b.eq	21fc0 <omp_get_num_procs@@OMP_1.0+0x964>  // b.none
   21fe8:	nop
   21fec:	ldp	x29, x30, [sp], #32
   21ff0:	ret
   21ff4:	stp	x29, x30, [sp, #-32]!
   21ff8:	mov	x29, sp
   21ffc:	str	x0, [sp, #24]
   22000:	ldr	x0, [sp, #24]
   22004:	bl	21be8 <omp_get_num_procs@@OMP_1.0+0x58c>
   22008:	mov	w1, w0
   2200c:	ldr	x0, [sp, #24]
   22010:	bl	21f64 <omp_get_num_procs@@OMP_1.0+0x908>
   22014:	nop
   22018:	ldp	x29, x30, [sp], #32
   2201c:	ret
   22020:	stp	x29, x30, [sp, #-48]!
   22024:	mov	x29, sp
   22028:	str	x0, [sp, #24]
   2202c:	ldr	x0, [sp, #24]
   22030:	bl	21be8 <omp_get_num_procs@@OMP_1.0+0x58c>
   22034:	str	w0, [sp, #44]
   22038:	ldr	w0, [sp, #44]
   2203c:	and	w0, w0, #0x1
   22040:	cmp	w0, #0x0
   22044:	b.eq	22054 <omp_get_num_procs@@OMP_1.0+0x9f8>  // b.none
   22048:	ldr	w1, [sp, #44]
   2204c:	ldr	x0, [sp, #24]
   22050:	bl	21f64 <omp_get_num_procs@@OMP_1.0+0x908>
   22054:	nop
   22058:	ldp	x29, x30, [sp], #48
   2205c:	ret
   22060:	stp	x29, x30, [sp, #-32]!
   22064:	mov	x29, sp
   22068:	str	x0, [sp, #24]
   2206c:	str	w1, [sp, #20]
   22070:	ldr	x0, [sp, #24]
   22074:	add	x2, x0, #0x4
   22078:	ldr	w0, [sp, #20]
   2207c:	cmp	w0, #0x0
   22080:	b.eq	2208c <omp_get_num_procs@@OMP_1.0+0xa30>  // b.none
   22084:	ldr	w0, [sp, #20]
   22088:	b	22090 <omp_get_num_procs@@OMP_1.0+0xa34>
   2208c:	mov	w0, #0x7fffffff            	// #2147483647
   22090:	mov	w1, w0
   22094:	mov	x0, x2
   22098:	bl	21d8c <omp_get_num_procs@@OMP_1.0+0x730>
   2209c:	nop
   220a0:	ldp	x29, x30, [sp], #32
   220a4:	ret
   220a8:	stp	x29, x30, [sp, #-64]!
   220ac:	mov	x29, sp
   220b0:	str	x0, [sp, #24]
   220b4:	str	w1, [sp, #20]
   220b8:	ldr	w0, [sp, #20]
   220bc:	and	x0, x0, #0x1
   220c0:	cmp	x0, #0x0
   220c4:	b.eq	2215c <omp_get_num_procs@@OMP_1.0+0xb00>  // b.none
   220c8:	bl	21ca0 <omp_get_num_procs@@OMP_1.0+0x644>
   220cc:	str	x0, [sp, #48]
   220d0:	ldr	x0, [sp, #48]
   220d4:	ldr	x0, [x0, #16]
   220d8:	str	x0, [sp, #40]
   220dc:	ldr	x0, [sp, #24]
   220e0:	ldr	w1, [x0]
   220e4:	ldr	x0, [sp, #24]
   220e8:	str	w1, [x0, #64]
   220ec:	ldr	x0, [sp, #40]
   220f0:	str	wzr, [x0, #1332]
   220f4:	ldr	x0, [sp, #40]
   220f8:	ldr	w0, [x0, #1320]
   220fc:	mov	w0, w0
   22100:	cmp	x0, #0x0
   22104:	b.eq	22120 <omp_get_num_procs@@OMP_1.0+0xac4>  // b.none
   22108:	ldr	w0, [sp, #20]
   2210c:	bl	1aeb4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1628>
   22110:	ldr	w0, [sp, #20]
   22114:	and	w0, w0, #0xfffffffe
   22118:	str	w0, [sp, #20]
   2211c:	b	2215c <omp_get_num_procs@@OMP_1.0+0xb00>
   22120:	ldr	w0, [sp, #20]
   22124:	and	w0, w0, #0xfffffffb
   22128:	str	w0, [sp, #20]
   2212c:	ldr	w0, [sp, #20]
   22130:	add	w0, w0, #0x7
   22134:	str	w0, [sp, #20]
   22138:	ldr	x0, [sp, #24]
   2213c:	add	x0, x0, #0x4
   22140:	ldr	w1, [sp, #20]
   22144:	stlr	w1, [x0]
   22148:	ldr	x0, [sp, #24]
   2214c:	add	x0, x0, #0x4
   22150:	mov	w1, #0x7fffffff            	// #2147483647
   22154:	bl	21d8c <omp_get_num_procs@@OMP_1.0+0x730>
   22158:	b	221e0 <omp_get_num_procs@@OMP_1.0+0xb84>
   2215c:	ldr	w0, [sp, #20]
   22160:	str	w0, [sp, #60]
   22164:	ldr	w0, [sp, #20]
   22168:	and	w0, w0, #0xfffffffb
   2216c:	str	w0, [sp, #20]
   22170:	ldr	x0, [sp, #24]
   22174:	add	x0, x0, #0x4
   22178:	ldr	w1, [sp, #60]
   2217c:	bl	21f28 <omp_get_num_procs@@OMP_1.0+0x8cc>
   22180:	ldr	x0, [sp, #24]
   22184:	add	x0, x0, #0x4
   22188:	ldar	w0, [x0]
   2218c:	str	w0, [sp, #56]
   22190:	ldr	w0, [sp, #56]
   22194:	and	x0, x0, #0x1
   22198:	cmp	x0, #0x0
   2219c:	b.eq	221b8 <omp_get_num_procs@@OMP_1.0+0xb5c>  // b.none
   221a0:	ldr	w0, [sp, #20]
   221a4:	bl	1aeb4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1628>
   221a8:	ldr	x0, [sp, #24]
   221ac:	add	x0, x0, #0x4
   221b0:	ldar	w0, [x0]
   221b4:	str	w0, [sp, #56]
   221b8:	ldr	w0, [sp, #56]
   221bc:	and	w0, w0, #0x2
   221c0:	ldr	w1, [sp, #60]
   221c4:	orr	w0, w1, w0
   221c8:	str	w0, [sp, #60]
   221cc:	ldr	w0, [sp, #20]
   221d0:	add	w0, w0, #0x8
   221d4:	ldr	w1, [sp, #56]
   221d8:	cmp	w1, w0
   221dc:	b.ne	22170 <omp_get_num_procs@@OMP_1.0+0xb14>  // b.any
   221e0:	ldp	x29, x30, [sp], #64
   221e4:	ret
   221e8:	stp	x29, x30, [sp, #-32]!
   221ec:	mov	x29, sp
   221f0:	str	x0, [sp, #24]
   221f4:	ldr	x0, [sp, #24]
   221f8:	bl	21be8 <omp_get_num_procs@@OMP_1.0+0x58c>
   221fc:	mov	w1, w0
   22200:	ldr	x0, [sp, #24]
   22204:	bl	220a8 <omp_get_num_procs@@OMP_1.0+0xa4c>
   22208:	nop
   2220c:	ldp	x29, x30, [sp], #32
   22210:	ret
   22214:	stp	x29, x30, [sp, #-48]!
   22218:	mov	x29, sp
   2221c:	str	x0, [sp, #24]
   22220:	ldr	x0, [sp, #24]
   22224:	bl	21c44 <omp_get_num_procs@@OMP_1.0+0x5e8>
   22228:	str	w0, [sp, #44]
   2222c:	ldr	w0, [sp, #44]
   22230:	and	x0, x0, #0x1
   22234:	cmp	x0, #0x0
   22238:	b.eq	2224c <omp_get_num_procs@@OMP_1.0+0xbf0>  // b.none
   2223c:	ldr	x0, [sp, #24]
   22240:	ldr	w1, [x0]
   22244:	ldr	x0, [sp, #24]
   22248:	str	w1, [x0, #68]
   2224c:	ldr	w1, [sp, #44]
   22250:	ldr	x0, [sp, #24]
   22254:	bl	220a8 <omp_get_num_procs@@OMP_1.0+0xa4c>
   22258:	nop
   2225c:	ldp	x29, x30, [sp], #48
   22260:	ret
   22264:	stp	x29, x30, [sp, #-64]!
   22268:	mov	x29, sp
   2226c:	str	x0, [sp, #24]
   22270:	str	w1, [sp, #20]
   22274:	ldr	w0, [sp, #20]
   22278:	and	x0, x0, #0x1
   2227c:	cmp	x0, #0x0
   22280:	b.eq	22310 <omp_get_num_procs@@OMP_1.0+0xcb4>  // b.none
   22284:	bl	21ca0 <omp_get_num_procs@@OMP_1.0+0x644>
   22288:	str	x0, [sp, #48]
   2228c:	ldr	x0, [sp, #48]
   22290:	ldr	x0, [x0, #16]
   22294:	str	x0, [sp, #40]
   22298:	ldr	x0, [sp, #24]
   2229c:	ldr	w1, [x0]
   222a0:	ldr	x0, [sp, #24]
   222a4:	str	w1, [x0, #64]
   222a8:	ldr	x0, [sp, #40]
   222ac:	str	wzr, [x0, #1332]
   222b0:	ldr	x0, [sp, #40]
   222b4:	ldr	w0, [x0, #1320]
   222b8:	mov	w0, w0
   222bc:	cmp	x0, #0x0
   222c0:	b.eq	222dc <omp_get_num_procs@@OMP_1.0+0xc80>  // b.none
   222c4:	ldr	w0, [sp, #20]
   222c8:	bl	1aeb4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1628>
   222cc:	ldr	w0, [sp, #20]
   222d0:	and	w0, w0, #0xfffffffe
   222d4:	str	w0, [sp, #20]
   222d8:	b	22310 <omp_get_num_procs@@OMP_1.0+0xcb4>
   222dc:	ldr	w0, [sp, #20]
   222e0:	add	w0, w0, #0x7
   222e4:	str	w0, [sp, #20]
   222e8:	ldr	x0, [sp, #24]
   222ec:	add	x0, x0, #0x4
   222f0:	ldr	w1, [sp, #20]
   222f4:	stlr	w1, [x0]
   222f8:	ldr	x0, [sp, #24]
   222fc:	add	x0, x0, #0x4
   22300:	mov	w1, #0x7fffffff            	// #2147483647
   22304:	bl	21d8c <omp_get_num_procs@@OMP_1.0+0x730>
   22308:	mov	w0, #0x0                   	// #0
   2230c:	b	223bc <omp_get_num_procs@@OMP_1.0+0xd60>
   22310:	ldr	w0, [sp, #20]
   22314:	and	x0, x0, #0x4
   22318:	cmp	x0, #0x0
   2231c:	b.eq	22328 <omp_get_num_procs@@OMP_1.0+0xccc>  // b.none
   22320:	mov	w0, #0x1                   	// #1
   22324:	b	223bc <omp_get_num_procs@@OMP_1.0+0xd60>
   22328:	ldr	w0, [sp, #20]
   2232c:	str	w0, [sp, #60]
   22330:	ldr	x0, [sp, #24]
   22334:	add	x0, x0, #0x4
   22338:	ldr	w1, [sp, #60]
   2233c:	bl	21f28 <omp_get_num_procs@@OMP_1.0+0x8cc>
   22340:	ldr	x0, [sp, #24]
   22344:	add	x0, x0, #0x4
   22348:	ldar	w0, [x0]
   2234c:	str	w0, [sp, #56]
   22350:	ldr	w0, [sp, #56]
   22354:	and	x0, x0, #0x4
   22358:	cmp	x0, #0x0
   2235c:	b.eq	22368 <omp_get_num_procs@@OMP_1.0+0xd0c>  // b.none
   22360:	mov	w0, #0x1                   	// #1
   22364:	b	223bc <omp_get_num_procs@@OMP_1.0+0xd60>
   22368:	ldr	w0, [sp, #56]
   2236c:	and	x0, x0, #0x1
   22370:	cmp	x0, #0x0
   22374:	b.eq	22390 <omp_get_num_procs@@OMP_1.0+0xd34>  // b.none
   22378:	ldr	w0, [sp, #20]
   2237c:	bl	1aeb4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1628>
   22380:	ldr	x0, [sp, #24]
   22384:	add	x0, x0, #0x4
   22388:	ldar	w0, [x0]
   2238c:	str	w0, [sp, #56]
   22390:	ldr	w0, [sp, #56]
   22394:	and	w0, w0, #0x2
   22398:	ldr	w1, [sp, #60]
   2239c:	orr	w0, w1, w0
   223a0:	str	w0, [sp, #60]
   223a4:	ldr	w0, [sp, #20]
   223a8:	add	w0, w0, #0x8
   223ac:	ldr	w1, [sp, #56]
   223b0:	cmp	w1, w0
   223b4:	b.ne	22330 <omp_get_num_procs@@OMP_1.0+0xcd4>  // b.any
   223b8:	mov	w0, #0x0                   	// #0
   223bc:	ldp	x29, x30, [sp], #64
   223c0:	ret
   223c4:	stp	x29, x30, [sp, #-32]!
   223c8:	mov	x29, sp
   223cc:	str	x0, [sp, #24]
   223d0:	ldr	x0, [sp, #24]
   223d4:	bl	21be8 <omp_get_num_procs@@OMP_1.0+0x58c>
   223d8:	mov	w1, w0
   223dc:	ldr	x0, [sp, #24]
   223e0:	bl	22264 <omp_get_num_procs@@OMP_1.0+0xc08>
   223e4:	and	w0, w0, #0xff
   223e8:	ldp	x29, x30, [sp], #32
   223ec:	ret
   223f0:	stp	x29, x30, [sp, #-32]!
   223f4:	mov	x29, sp
   223f8:	str	x0, [sp, #24]
   223fc:	ldr	x0, [sp, #24]
   22400:	add	x0, x0, #0x500
   22404:	bl	21b28 <omp_get_num_procs@@OMP_1.0+0x4cc>
   22408:	ldr	x0, [sp, #24]
   2240c:	ldr	w0, [x0, #132]
   22410:	and	w0, w0, #0x4
   22414:	cmp	w0, #0x0
   22418:	b.eq	2242c <omp_get_num_procs@@OMP_1.0+0xdd0>  // b.none
   2241c:	ldr	x0, [sp, #24]
   22420:	add	x0, x0, #0x500
   22424:	bl	21b9c <omp_get_num_procs@@OMP_1.0+0x540>
   22428:	b	2245c <omp_get_num_procs@@OMP_1.0+0xe00>
   2242c:	ldr	x0, [sp, #24]
   22430:	ldr	w0, [x0, #132]
   22434:	orr	w1, w0, #0x4
   22438:	ldr	x0, [sp, #24]
   2243c:	str	w1, [x0, #132]
   22440:	ldr	x0, [sp, #24]
   22444:	add	x0, x0, #0x500
   22448:	bl	21b9c <omp_get_num_procs@@OMP_1.0+0x540>
   2244c:	ldr	x0, [sp, #24]
   22450:	add	x0, x0, #0x84
   22454:	mov	w1, #0x7fffffff            	// #2147483647
   22458:	bl	21d8c <omp_get_num_procs@@OMP_1.0+0x730>
   2245c:	ldp	x29, x30, [sp], #32
   22460:	ret
   22464:	stp	x29, x30, [sp, #-48]!
   22468:	mov	x29, sp
   2246c:	str	x0, [sp, #24]
   22470:	str	w1, [sp, #20]
   22474:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   22478:	add	x0, x0, #0x364
   2247c:	ldr	w0, [x0]
   22480:	mov	x4, #0x0                   	// #0
   22484:	ldr	w3, [sp, #20]
   22488:	mov	w2, w0
   2248c:	ldr	x1, [sp, #24]
   22490:	mov	x0, #0x62                  	// #98
   22494:	bl	8c10 <syscall@plt>
   22498:	str	w0, [sp, #44]
   2249c:	ldr	w0, [sp, #44]
   224a0:	lsr	w0, w0, #31
   224a4:	and	w0, w0, #0xff
   224a8:	and	x0, x0, #0xff
   224ac:	cmp	x0, #0x0
   224b0:	b.eq	22530 <omp_get_num_procs@@OMP_1.0+0xed4>  // b.none
   224b4:	bl	8be0 <__errno_location@plt>
   224b8:	ldr	w0, [x0]
   224bc:	cmp	w0, #0x26
   224c0:	cset	w0, eq  // eq = none
   224c4:	and	w0, w0, #0xff
   224c8:	and	x0, x0, #0xff
   224cc:	cmp	x0, #0x0
   224d0:	b.eq	22530 <omp_get_num_procs@@OMP_1.0+0xed4>  // b.none
   224d4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   224d8:	add	x0, x0, #0x364
   224dc:	ldr	w0, [x0]
   224e0:	and	w1, w0, #0xffffff7f
   224e4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   224e8:	add	x0, x0, #0x364
   224ec:	str	w1, [x0]
   224f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   224f4:	add	x0, x0, #0x360
   224f8:	ldr	w0, [x0]
   224fc:	and	w1, w0, #0xffffff7f
   22500:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   22504:	add	x0, x0, #0x360
   22508:	str	w1, [x0]
   2250c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   22510:	add	x0, x0, #0x364
   22514:	ldr	w0, [x0]
   22518:	mov	x4, #0x0                   	// #0
   2251c:	ldr	w3, [sp, #20]
   22520:	mov	w2, w0
   22524:	ldr	x1, [sp, #24]
   22528:	mov	x0, #0x62                  	// #98
   2252c:	bl	8c10 <syscall@plt>
   22530:	nop
   22534:	ldp	x29, x30, [sp], #48
   22538:	ret
   2253c:	stp	x29, x30, [sp, #-48]!
   22540:	mov	x29, sp
   22544:	str	x0, [sp, #24]
   22548:	str	w1, [sp, #20]
   2254c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   22550:	add	x0, x0, #0x360
   22554:	ldr	w0, [x0]
   22558:	ldr	w3, [sp, #20]
   2255c:	mov	w2, w0
   22560:	ldr	x1, [sp, #24]
   22564:	mov	x0, #0x62                  	// #98
   22568:	bl	8c10 <syscall@plt>
   2256c:	str	w0, [sp, #44]
   22570:	ldr	w0, [sp, #44]
   22574:	lsr	w0, w0, #31
   22578:	and	w0, w0, #0xff
   2257c:	and	x0, x0, #0xff
   22580:	cmp	x0, #0x0
   22584:	b.eq	22600 <omp_get_num_procs@@OMP_1.0+0xfa4>  // b.none
   22588:	bl	8be0 <__errno_location@plt>
   2258c:	ldr	w0, [x0]
   22590:	cmp	w0, #0x26
   22594:	cset	w0, eq  // eq = none
   22598:	and	w0, w0, #0xff
   2259c:	and	x0, x0, #0xff
   225a0:	cmp	x0, #0x0
   225a4:	b.eq	22600 <omp_get_num_procs@@OMP_1.0+0xfa4>  // b.none
   225a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   225ac:	add	x0, x0, #0x364
   225b0:	ldr	w0, [x0]
   225b4:	and	w1, w0, #0xffffff7f
   225b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   225bc:	add	x0, x0, #0x364
   225c0:	str	w1, [x0]
   225c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   225c8:	add	x0, x0, #0x360
   225cc:	ldr	w0, [x0]
   225d0:	and	w1, w0, #0xffffff7f
   225d4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   225d8:	add	x0, x0, #0x360
   225dc:	str	w1, [x0]
   225e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   225e4:	add	x0, x0, #0x360
   225e8:	ldr	w0, [x0]
   225ec:	ldr	w3, [sp, #20]
   225f0:	mov	w2, w0
   225f4:	ldr	x1, [sp, #24]
   225f8:	mov	x0, #0x62                  	// #98
   225fc:	bl	8c10 <syscall@plt>
   22600:	nop
   22604:	ldp	x29, x30, [sp], #48
   22608:	ret
   2260c:	nop
   22610:	ret
   22614:	stp	x29, x30, [sp, #-48]!
   22618:	mov	x29, sp
   2261c:	str	x0, [sp, #24]
   22620:	str	w1, [sp, #20]
   22624:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   22628:	add	x0, x0, #0x660
   2262c:	ldr	x0, [x0]
   22630:	str	x0, [sp, #32]
   22634:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   22638:	add	x0, x0, #0x310
   2263c:	ldr	x1, [x0]
   22640:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   22644:	add	x0, x0, #0x308
   22648:	ldr	x0, [x0]
   2264c:	cmp	x1, x0
   22650:	cset	w0, hi  // hi = pmore
   22654:	and	w0, w0, #0xff
   22658:	and	x0, x0, #0xff
   2265c:	cmp	x0, #0x0
   22660:	b.eq	22674 <omp_get_num_procs@@OMP_1.0+0x1018>  // b.none
   22664:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   22668:	add	x0, x0, #0x670
   2266c:	ldr	x0, [x0]
   22670:	str	x0, [sp, #32]
   22674:	str	xzr, [sp, #40]
   22678:	b	226bc <omp_get_num_procs@@OMP_1.0+0x1060>
   2267c:	ldr	x0, [sp, #24]
   22680:	ldr	w0, [x0]
   22684:	mov	w1, w0
   22688:	ldr	w0, [sp, #20]
   2268c:	cmp	w0, w1
   22690:	cset	w0, ne  // ne = any
   22694:	and	w0, w0, #0xff
   22698:	and	x0, x0, #0xff
   2269c:	cmp	x0, #0x0
   226a0:	b.eq	226ac <omp_get_num_procs@@OMP_1.0+0x1050>  // b.none
   226a4:	mov	w0, #0x0                   	// #0
   226a8:	b	226d0 <omp_get_num_procs@@OMP_1.0+0x1074>
   226ac:	bl	2260c <omp_get_num_procs@@OMP_1.0+0xfb0>
   226b0:	ldr	x0, [sp, #40]
   226b4:	add	x0, x0, #0x1
   226b8:	str	x0, [sp, #40]
   226bc:	ldr	x1, [sp, #40]
   226c0:	ldr	x0, [sp, #32]
   226c4:	cmp	x1, x0
   226c8:	b.cc	2267c <omp_get_num_procs@@OMP_1.0+0x1020>  // b.lo, b.ul, b.last
   226cc:	mov	w0, #0x1                   	// #1
   226d0:	ldp	x29, x30, [sp], #48
   226d4:	ret
   226d8:	stp	x29, x30, [sp, #-32]!
   226dc:	mov	x29, sp
   226e0:	str	x0, [sp, #24]
   226e4:	str	w1, [sp, #20]
   226e8:	ldr	w1, [sp, #20]
   226ec:	ldr	x0, [sp, #24]
   226f0:	bl	22614 <omp_get_num_procs@@OMP_1.0+0xfb8>
   226f4:	cmp	w0, #0x0
   226f8:	b.eq	22708 <omp_get_num_procs@@OMP_1.0+0x10ac>  // b.none
   226fc:	ldr	w1, [sp, #20]
   22700:	ldr	x0, [sp, #24]
   22704:	bl	22464 <omp_get_num_procs@@OMP_1.0+0xe08>
   22708:	nop
   2270c:	ldp	x29, x30, [sp], #32
   22710:	ret
   22714:	stp	x29, x30, [sp, #-48]!
   22718:	mov	x29, sp
   2271c:	str	x0, [sp, #24]
   22720:	mov	x0, #0x1                   	// #1
   22724:	str	x0, [sp, #32]
   22728:	ldr	x2, [sp, #24]
   2272c:	add	x0, sp, #0x20
   22730:	ldr	x3, [x0]
   22734:	mov	x4, #0x2                   	// #2
   22738:	ldxr	x1, [x2]
   2273c:	cmp	x1, x3
   22740:	b.ne	2274c <omp_get_num_procs@@OMP_1.0+0x10f0>  // b.any
   22744:	stxr	w5, x4, [x2]
   22748:	cbnz	w5, 22738 <omp_get_num_procs@@OMP_1.0+0x10dc>
   2274c:	cset	w2, eq  // eq = none
   22750:	cmp	w2, #0x0
   22754:	b.ne	2275c <omp_get_num_procs@@OMP_1.0+0x1100>  // b.any
   22758:	str	x1, [x0]
   2275c:	ldr	x0, [sp, #24]
   22760:	str	x0, [sp, #40]
   22764:	mov	w1, #0x2                   	// #2
   22768:	ldr	x0, [sp, #40]
   2276c:	bl	226d8 <omp_get_num_procs@@OMP_1.0+0x107c>
   22770:	ldr	x0, [sp, #40]
   22774:	ldr	w0, [x0]
   22778:	cmp	w0, #0x2
   2277c:	b.eq	22764 <omp_get_num_procs@@OMP_1.0+0x1108>  // b.none
   22780:	ldr	x0, [sp, #24]
   22784:	ldar	x0, [x0]
   22788:	ldp	x29, x30, [sp], #48
   2278c:	ret
   22790:	stp	x29, x30, [sp, #-48]!
   22794:	mov	x29, sp
   22798:	str	x0, [sp, #24]
   2279c:	ldr	x0, [sp, #24]
   227a0:	str	x0, [sp, #40]
   227a4:	mov	w1, #0x7fffffff            	// #2147483647
   227a8:	ldr	x0, [sp, #40]
   227ac:	bl	2253c <omp_get_num_procs@@OMP_1.0+0xee0>
   227b0:	nop
   227b4:	ldp	x29, x30, [sp], #48
   227b8:	ret

00000000000227bc <omp_get_wtime@@OMP_2.0>:
   227bc:	stp	x29, x30, [sp, #-32]!
   227c0:	mov	x29, sp
   227c4:	add	x0, sp, #0x10
   227c8:	mov	x1, x0
   227cc:	mov	w0, #0x1                   	// #1
   227d0:	bl	87a0 <clock_gettime@plt>
   227d4:	cmp	w0, #0x0
   227d8:	b.ge	227ec <omp_get_wtime@@OMP_2.0+0x30>  // b.tcont
   227dc:	add	x0, sp, #0x10
   227e0:	mov	x1, x0
   227e4:	mov	w0, #0x0                   	// #0
   227e8:	bl	87a0 <clock_gettime@plt>
   227ec:	ldr	d0, [sp, #16]
   227f0:	scvtf	d1, d0
   227f4:	ldr	d0, [sp, #24]
   227f8:	scvtf	d0, d0
   227fc:	mov	x0, #0xcd6500000000        	// #225833675390976
   22800:	movk	x0, #0x41cd, lsl #48
   22804:	fmov	d2, x0
   22808:	fdiv	d0, d0, d2
   2280c:	fadd	d0, d1, d0
   22810:	ldp	x29, x30, [sp], #32
   22814:	ret

0000000000022818 <omp_get_wtick@@OMP_2.0>:
   22818:	stp	x29, x30, [sp, #-32]!
   2281c:	mov	x29, sp
   22820:	add	x0, sp, #0x10
   22824:	mov	x1, x0
   22828:	mov	w0, #0x1                   	// #1
   2282c:	bl	8a10 <clock_getres@plt>
   22830:	cmp	w0, #0x0
   22834:	b.ge	22848 <omp_get_wtick@@OMP_2.0+0x30>  // b.tcont
   22838:	add	x0, sp, #0x10
   2283c:	mov	x1, x0
   22840:	mov	w0, #0x0                   	// #0
   22844:	bl	8a10 <clock_getres@plt>
   22848:	ldr	d0, [sp, #16]
   2284c:	scvtf	d1, d0
   22850:	ldr	d0, [sp, #24]
   22854:	scvtf	d0, d0
   22858:	mov	x0, #0xcd6500000000        	// #225833675390976
   2285c:	movk	x0, #0x41cd, lsl #48
   22860:	fmov	d2, x0
   22864:	fdiv	d0, d0, d2
   22868:	fadd	d0, d1, d0
   2286c:	ldp	x29, x30, [sp], #32
   22870:	ret
   22874:	mrs	x1, tpidr_el0
   22878:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   2287c:	ldr	x0, [x0, #4016]
   22880:	add	x0, x1, x0
   22884:	ret
   22888:	stp	x29, x30, [sp, #-16]!
   2288c:	mov	x29, sp
   22890:	bl	8bb0 <pthread_self@plt>
   22894:	ldp	x29, x30, [sp], #16
   22898:	ret

000000000002289c <omp_init_lock_@@OMP_3.0>:
   2289c:	stp	x29, x30, [sp, #-32]!
   228a0:	mov	x29, sp
   228a4:	str	x0, [sp, #24]
   228a8:	ldr	x0, [sp, #24]
   228ac:	bl	208c4 <omp_init_lock@@OMP_3.0>
   228b0:	nop
   228b4:	ldp	x29, x30, [sp], #32
   228b8:	ret

00000000000228bc <omp_init_nest_lock_@@OMP_3.0>:
   228bc:	stp	x29, x30, [sp, #-32]!
   228c0:	mov	x29, sp
   228c4:	str	x0, [sp, #24]
   228c8:	mov	x0, #0x10                  	// #16
   228cc:	bl	8850 <malloc@plt>
   228d0:	mov	x1, x0
   228d4:	ldr	x0, [sp, #24]
   228d8:	str	x1, [x0]
   228dc:	ldr	x0, [sp, #24]
   228e0:	ldr	x0, [x0]
   228e4:	bl	20990 <omp_init_nest_lock@@OMP_3.0>
   228e8:	nop
   228ec:	ldp	x29, x30, [sp], #32
   228f0:	ret

00000000000228f4 <omp_destroy_lock_@@OMP_3.0>:
   228f4:	stp	x29, x30, [sp, #-32]!
   228f8:	mov	x29, sp
   228fc:	str	x0, [sp, #24]
   22900:	ldr	x0, [sp, #24]
   22904:	bl	208e4 <omp_destroy_lock@OMP_1.0>
   22908:	nop
   2290c:	ldp	x29, x30, [sp], #32
   22910:	ret

0000000000022914 <omp_destroy_nest_lock_@@OMP_3.0>:
   22914:	stp	x29, x30, [sp, #-32]!
   22918:	mov	x29, sp
   2291c:	str	x0, [sp, #24]
   22920:	ldr	x0, [sp, #24]
   22924:	ldr	x0, [x0]
   22928:	bl	209b8 <omp_destroy_nest_lock@@OMP_3.0>
   2292c:	ldr	x0, [sp, #24]
   22930:	ldr	x0, [x0]
   22934:	bl	8a20 <free@plt>
   22938:	ldr	x0, [sp, #24]
   2293c:	str	xzr, [x0]
   22940:	nop
   22944:	ldp	x29, x30, [sp], #32
   22948:	ret

000000000002294c <omp_set_lock_@@OMP_3.0>:
   2294c:	stp	x29, x30, [sp, #-32]!
   22950:	mov	x29, sp
   22954:	str	x0, [sp, #24]
   22958:	ldr	x0, [sp, #24]
   2295c:	bl	20904 <omp_set_lock@@OMP_3.0>
   22960:	nop
   22964:	ldp	x29, x30, [sp], #32
   22968:	ret

000000000002296c <omp_set_nest_lock_@@OMP_3.0>:
   2296c:	stp	x29, x30, [sp, #-32]!
   22970:	mov	x29, sp
   22974:	str	x0, [sp, #24]
   22978:	ldr	x0, [sp, #24]
   2297c:	ldr	x0, [x0]
   22980:	bl	209cc <omp_set_nest_lock@@OMP_3.0>
   22984:	nop
   22988:	ldp	x29, x30, [sp], #32
   2298c:	ret

0000000000022990 <omp_unset_lock_@@OMP_3.0>:
   22990:	stp	x29, x30, [sp, #-32]!
   22994:	mov	x29, sp
   22998:	str	x0, [sp, #24]
   2299c:	ldr	x0, [sp, #24]
   229a0:	bl	20924 <omp_unset_lock@@OMP_3.0>
   229a4:	nop
   229a8:	ldp	x29, x30, [sp], #32
   229ac:	ret

00000000000229b0 <omp_unset_nest_lock_@@OMP_3.0>:
   229b0:	stp	x29, x30, [sp, #-32]!
   229b4:	mov	x29, sp
   229b8:	str	x0, [sp, #24]
   229bc:	ldr	x0, [sp, #24]
   229c0:	ldr	x0, [x0]
   229c4:	bl	20a2c <omp_unset_nest_lock@@OMP_3.0>
   229c8:	nop
   229cc:	ldp	x29, x30, [sp], #32
   229d0:	ret

00000000000229d4 <omp_test_lock_@@OMP_3.0>:
   229d4:	stp	x29, x30, [sp, #-32]!
   229d8:	mov	x29, sp
   229dc:	str	x0, [sp, #24]
   229e0:	ldr	x0, [sp, #24]
   229e4:	bl	20944 <omp_test_lock@OMP_1.0>
   229e8:	ldp	x29, x30, [sp], #32
   229ec:	ret

00000000000229f0 <omp_test_nest_lock_@@OMP_3.0>:
   229f0:	stp	x29, x30, [sp, #-32]!
   229f4:	mov	x29, sp
   229f8:	str	x0, [sp, #24]
   229fc:	ldr	x0, [sp, #24]
   22a00:	ldr	x0, [x0]
   22a04:	bl	20a78 <omp_test_nest_lock@@OMP_3.0>
   22a08:	ldp	x29, x30, [sp], #32
   22a0c:	ret

0000000000022a10 <omp_init_lock_@OMP_1.0>:
   22a10:	stp	x29, x30, [sp, #-32]!
   22a14:	mov	x29, sp
   22a18:	str	x0, [sp, #24]
   22a1c:	ldr	x0, [sp, #24]
   22a20:	bl	208c4 <omp_init_lock@@OMP_3.0>
   22a24:	nop
   22a28:	ldp	x29, x30, [sp], #32
   22a2c:	ret

0000000000022a30 <omp_init_nest_lock_@OMP_1.0>:
   22a30:	stp	x29, x30, [sp, #-32]!
   22a34:	mov	x29, sp
   22a38:	str	x0, [sp, #24]
   22a3c:	ldr	x0, [sp, #24]
   22a40:	bl	20ba0 <omp_init_nest_lock@OMP_1.0>
   22a44:	nop
   22a48:	ldp	x29, x30, [sp], #32
   22a4c:	ret

0000000000022a50 <omp_destroy_lock_@OMP_1.0>:
   22a50:	stp	x29, x30, [sp, #-32]!
   22a54:	mov	x29, sp
   22a58:	str	x0, [sp, #24]
   22a5c:	ldr	x0, [sp, #24]
   22a60:	bl	208e4 <omp_destroy_lock@OMP_1.0>
   22a64:	nop
   22a68:	ldp	x29, x30, [sp], #32
   22a6c:	ret

0000000000022a70 <omp_destroy_nest_lock_@OMP_1.0>:
   22a70:	stp	x29, x30, [sp, #-32]!
   22a74:	mov	x29, sp
   22a78:	str	x0, [sp, #24]
   22a7c:	ldr	x0, [sp, #24]
   22a80:	bl	20bc8 <omp_destroy_nest_lock@OMP_1.0>
   22a84:	nop
   22a88:	ldp	x29, x30, [sp], #32
   22a8c:	ret

0000000000022a90 <omp_set_lock_@OMP_1.0>:
   22a90:	stp	x29, x30, [sp, #-32]!
   22a94:	mov	x29, sp
   22a98:	str	x0, [sp, #24]
   22a9c:	ldr	x0, [sp, #24]
   22aa0:	bl	20904 <omp_set_lock@@OMP_3.0>
   22aa4:	nop
   22aa8:	ldp	x29, x30, [sp], #32
   22aac:	ret

0000000000022ab0 <omp_set_nest_lock_@OMP_1.0>:
   22ab0:	stp	x29, x30, [sp, #-32]!
   22ab4:	mov	x29, sp
   22ab8:	str	x0, [sp, #24]
   22abc:	ldr	x0, [sp, #24]
   22ac0:	bl	20bdc <omp_set_nest_lock@OMP_1.0>
   22ac4:	nop
   22ac8:	ldp	x29, x30, [sp], #32
   22acc:	ret

0000000000022ad0 <omp_unset_lock_@OMP_1.0>:
   22ad0:	stp	x29, x30, [sp, #-32]!
   22ad4:	mov	x29, sp
   22ad8:	str	x0, [sp, #24]
   22adc:	ldr	x0, [sp, #24]
   22ae0:	bl	20924 <omp_unset_lock@@OMP_3.0>
   22ae4:	nop
   22ae8:	ldp	x29, x30, [sp], #32
   22aec:	ret

0000000000022af0 <omp_unset_nest_lock_@OMP_1.0>:
   22af0:	stp	x29, x30, [sp, #-32]!
   22af4:	mov	x29, sp
   22af8:	str	x0, [sp, #24]
   22afc:	ldr	x0, [sp, #24]
   22b00:	bl	20c84 <omp_unset_nest_lock@OMP_1.0>
   22b04:	nop
   22b08:	ldp	x29, x30, [sp], #32
   22b0c:	ret

0000000000022b10 <omp_test_lock_@OMP_1.0>:
   22b10:	stp	x29, x30, [sp, #-32]!
   22b14:	mov	x29, sp
   22b18:	str	x0, [sp, #24]
   22b1c:	ldr	x0, [sp, #24]
   22b20:	bl	20944 <omp_test_lock@OMP_1.0>
   22b24:	ldp	x29, x30, [sp], #32
   22b28:	ret

0000000000022b2c <omp_test_nest_lock_@OMP_1.0>:
   22b2c:	stp	x29, x30, [sp, #-32]!
   22b30:	mov	x29, sp
   22b34:	str	x0, [sp, #24]
   22b38:	ldr	x0, [sp, #24]
   22b3c:	bl	20cd4 <omp_test_nest_lock@OMP_1.0>
   22b40:	ldp	x29, x30, [sp], #32
   22b44:	ret

0000000000022b48 <omp_set_dynamic_@@OMP_1.0>:
   22b48:	stp	x29, x30, [sp, #-32]!
   22b4c:	mov	x29, sp
   22b50:	str	x0, [sp, #24]
   22b54:	ldr	x0, [sp, #24]
   22b58:	ldr	w0, [x0]
   22b5c:	bl	d270 <omp_set_dynamic@@OMP_1.0>
   22b60:	nop
   22b64:	ldp	x29, x30, [sp], #32
   22b68:	ret

0000000000022b6c <omp_set_dynamic_8_@@OMP_1.0>:
   22b6c:	stp	x29, x30, [sp, #-32]!
   22b70:	mov	x29, sp
   22b74:	str	x0, [sp, #24]
   22b78:	ldr	x0, [sp, #24]
   22b7c:	ldr	x0, [x0]
   22b80:	cmp	x0, #0x0
   22b84:	cset	w0, ne  // ne = any
   22b88:	and	w0, w0, #0xff
   22b8c:	bl	d270 <omp_set_dynamic@@OMP_1.0>
   22b90:	nop
   22b94:	ldp	x29, x30, [sp], #32
   22b98:	ret

0000000000022b9c <omp_set_nested_@@OMP_1.0>:
   22b9c:	stp	x29, x30, [sp, #-32]!
   22ba0:	mov	x29, sp
   22ba4:	str	x0, [sp, #24]
   22ba8:	ldr	x0, [sp, #24]
   22bac:	ldr	w0, [x0]
   22bb0:	bl	d2d0 <omp_set_nested@@OMP_1.0>
   22bb4:	nop
   22bb8:	ldp	x29, x30, [sp], #32
   22bbc:	ret

0000000000022bc0 <omp_set_nested_8_@@OMP_1.0>:
   22bc0:	stp	x29, x30, [sp, #-32]!
   22bc4:	mov	x29, sp
   22bc8:	str	x0, [sp, #24]
   22bcc:	ldr	x0, [sp, #24]
   22bd0:	ldr	x0, [x0]
   22bd4:	cmp	x0, #0x0
   22bd8:	cset	w0, ne  // ne = any
   22bdc:	and	w0, w0, #0xff
   22be0:	bl	d2d0 <omp_set_nested@@OMP_1.0>
   22be4:	nop
   22be8:	ldp	x29, x30, [sp], #32
   22bec:	ret

0000000000022bf0 <omp_set_num_threads_@@OMP_1.0>:
   22bf0:	stp	x29, x30, [sp, #-32]!
   22bf4:	mov	x29, sp
   22bf8:	str	x0, [sp, #24]
   22bfc:	ldr	x0, [sp, #24]
   22c00:	ldr	w0, [x0]
   22c04:	bl	d22c <omp_set_num_threads@@OMP_1.0>
   22c08:	nop
   22c0c:	ldp	x29, x30, [sp], #32
   22c10:	ret

0000000000022c14 <omp_set_num_threads_8_@@OMP_1.0>:
   22c14:	stp	x29, x30, [sp, #-32]!
   22c18:	mov	x29, sp
   22c1c:	str	x0, [sp, #24]
   22c20:	ldr	x0, [sp, #24]
   22c24:	ldr	x1, [x0]
   22c28:	mov	x0, #0xffffffff80000001    	// #-2147483647
   22c2c:	cmp	x1, x0
   22c30:	b.lt	22c50 <omp_set_num_threads_8_@@OMP_1.0+0x3c>  // b.tstop
   22c34:	ldr	x0, [sp, #24]
   22c38:	ldr	x0, [x0]
   22c3c:	mov	x2, #0x7fffffff            	// #2147483647
   22c40:	mov	x1, #0x7fffffff            	// #2147483647
   22c44:	cmp	x0, x2
   22c48:	csel	x0, x0, x1, le
   22c4c:	b	22c54 <omp_set_num_threads_8_@@OMP_1.0+0x40>
   22c50:	mov	w0, #0x80000000            	// #-2147483648
   22c54:	bl	d22c <omp_set_num_threads@@OMP_1.0>
   22c58:	nop
   22c5c:	ldp	x29, x30, [sp], #32
   22c60:	ret

0000000000022c64 <omp_get_dynamic_@@OMP_1.0>:
   22c64:	stp	x29, x30, [sp, #-16]!
   22c68:	mov	x29, sp
   22c6c:	bl	d2ac <omp_get_dynamic@@OMP_1.0>
   22c70:	ldp	x29, x30, [sp], #16
   22c74:	ret

0000000000022c78 <omp_get_nested_@@OMP_1.0>:
   22c78:	stp	x29, x30, [sp, #-16]!
   22c7c:	mov	x29, sp
   22c80:	bl	d30c <omp_get_nested@@OMP_1.0>
   22c84:	ldp	x29, x30, [sp], #16
   22c88:	ret

0000000000022c8c <omp_in_parallel_@@OMP_1.0>:
   22c8c:	stp	x29, x30, [sp, #-16]!
   22c90:	mov	x29, sp
   22c94:	bl	14558 <omp_in_parallel@@OMP_1.0>
   22c98:	ldp	x29, x30, [sp], #16
   22c9c:	ret

0000000000022ca0 <omp_get_max_threads_@@OMP_1.0>:
   22ca0:	stp	x29, x30, [sp, #-16]!
   22ca4:	mov	x29, sp
   22ca8:	bl	d430 <omp_get_max_threads@@OMP_1.0>
   22cac:	ldp	x29, x30, [sp], #16
   22cb0:	ret

0000000000022cb4 <omp_get_num_procs_@@OMP_1.0>:
   22cb4:	stp	x29, x30, [sp, #-16]!
   22cb8:	mov	x29, sp
   22cbc:	bl	2165c <omp_get_num_procs@@OMP_1.0>
   22cc0:	ldp	x29, x30, [sp], #16
   22cc4:	ret

0000000000022cc8 <omp_get_num_threads_@@OMP_1.0>:
   22cc8:	stp	x29, x30, [sp, #-16]!
   22ccc:	mov	x29, sp
   22cd0:	bl	14508 <omp_get_num_threads@@OMP_1.0>
   22cd4:	ldp	x29, x30, [sp], #16
   22cd8:	ret

0000000000022cdc <omp_get_thread_num_@@OMP_1.0>:
   22cdc:	stp	x29, x30, [sp, #-16]!
   22ce0:	mov	x29, sp
   22ce4:	bl	14540 <omp_get_thread_num@@OMP_1.0>
   22ce8:	ldp	x29, x30, [sp], #16
   22cec:	ret

0000000000022cf0 <omp_get_wtick_@@OMP_2.0>:
   22cf0:	stp	x29, x30, [sp, #-16]!
   22cf4:	mov	x29, sp
   22cf8:	bl	22818 <omp_get_wtick@@OMP_2.0>
   22cfc:	ldp	x29, x30, [sp], #16
   22d00:	ret

0000000000022d04 <omp_get_wtime_@@OMP_2.0>:
   22d04:	stp	x29, x30, [sp, #-16]!
   22d08:	mov	x29, sp
   22d0c:	bl	227bc <omp_get_wtime@@OMP_2.0>
   22d10:	ldp	x29, x30, [sp], #16
   22d14:	ret

0000000000022d18 <omp_set_schedule_@@OMP_3.0>:
   22d18:	stp	x29, x30, [sp, #-32]!
   22d1c:	mov	x29, sp
   22d20:	str	x0, [sp, #24]
   22d24:	str	x1, [sp, #16]
   22d28:	ldr	x0, [sp, #24]
   22d2c:	ldr	w0, [x0]
   22d30:	mov	w2, w0
   22d34:	ldr	x0, [sp, #16]
   22d38:	ldr	w0, [x0]
   22d3c:	mov	w1, w0
   22d40:	mov	w0, w2
   22d44:	bl	d330 <omp_set_schedule@@OMP_3.0>
   22d48:	nop
   22d4c:	ldp	x29, x30, [sp], #32
   22d50:	ret

0000000000022d54 <omp_set_schedule_8_@@OMP_3.0>:
   22d54:	stp	x29, x30, [sp, #-32]!
   22d58:	mov	x29, sp
   22d5c:	str	x0, [sp, #24]
   22d60:	str	x1, [sp, #16]
   22d64:	ldr	x0, [sp, #24]
   22d68:	ldr	w0, [x0]
   22d6c:	mov	w3, w0
   22d70:	ldr	x0, [sp, #16]
   22d74:	ldr	x1, [x0]
   22d78:	mov	x0, #0xffffffff80000001    	// #-2147483647
   22d7c:	cmp	x1, x0
   22d80:	b.lt	22da0 <omp_set_schedule_8_@@OMP_3.0+0x4c>  // b.tstop
   22d84:	ldr	x0, [sp, #16]
   22d88:	ldr	x0, [x0]
   22d8c:	mov	x2, #0x7fffffff            	// #2147483647
   22d90:	mov	x1, #0x7fffffff            	// #2147483647
   22d94:	cmp	x0, x2
   22d98:	csel	x0, x0, x1, le
   22d9c:	b	22da4 <omp_set_schedule_8_@@OMP_3.0+0x50>
   22da0:	mov	w0, #0x80000000            	// #-2147483648
   22da4:	mov	w1, w0
   22da8:	mov	w0, w3
   22dac:	bl	d330 <omp_set_schedule@@OMP_3.0>
   22db0:	nop
   22db4:	ldp	x29, x30, [sp], #32
   22db8:	ret

0000000000022dbc <omp_get_schedule_@@OMP_3.0>:
   22dbc:	stp	x29, x30, [sp, #-48]!
   22dc0:	mov	x29, sp
   22dc4:	str	x0, [sp, #24]
   22dc8:	str	x1, [sp, #16]
   22dcc:	add	x1, sp, #0x28
   22dd0:	add	x0, sp, #0x2c
   22dd4:	bl	d3e8 <omp_get_schedule@@OMP_3.0>
   22dd8:	ldr	w0, [sp, #44]
   22ddc:	and	w1, w0, #0x7fffffff
   22de0:	ldr	x0, [sp, #24]
   22de4:	str	w1, [x0]
   22de8:	ldr	w1, [sp, #40]
   22dec:	ldr	x0, [sp, #16]
   22df0:	str	w1, [x0]
   22df4:	nop
   22df8:	ldp	x29, x30, [sp], #48
   22dfc:	ret

0000000000022e00 <omp_get_schedule_8_@@OMP_3.0>:
   22e00:	stp	x29, x30, [sp, #-48]!
   22e04:	mov	x29, sp
   22e08:	str	x0, [sp, #24]
   22e0c:	str	x1, [sp, #16]
   22e10:	add	x1, sp, #0x28
   22e14:	add	x0, sp, #0x2c
   22e18:	bl	d3e8 <omp_get_schedule@@OMP_3.0>
   22e1c:	ldr	w0, [sp, #44]
   22e20:	and	w1, w0, #0x7fffffff
   22e24:	ldr	x0, [sp, #24]
   22e28:	str	w1, [x0]
   22e2c:	ldr	w0, [sp, #40]
   22e30:	sxtw	x1, w0
   22e34:	ldr	x0, [sp, #16]
   22e38:	str	x1, [x0]
   22e3c:	nop
   22e40:	ldp	x29, x30, [sp], #48
   22e44:	ret

0000000000022e48 <omp_get_thread_limit_@@OMP_3.0>:
   22e48:	stp	x29, x30, [sp, #-16]!
   22e4c:	mov	x29, sp
   22e50:	bl	d454 <omp_get_thread_limit@@OMP_3.0>
   22e54:	ldp	x29, x30, [sp], #16
   22e58:	ret

0000000000022e5c <omp_set_max_active_levels_@@OMP_3.0>:
   22e5c:	stp	x29, x30, [sp, #-32]!
   22e60:	mov	x29, sp
   22e64:	str	x0, [sp, #24]
   22e68:	ldr	x0, [sp, #24]
   22e6c:	ldr	w0, [x0]
   22e70:	bl	d490 <omp_set_max_active_levels@@OMP_3.0>
   22e74:	nop
   22e78:	ldp	x29, x30, [sp], #32
   22e7c:	ret

0000000000022e80 <omp_set_max_active_levels_8_@@OMP_3.0>:
   22e80:	stp	x29, x30, [sp, #-32]!
   22e84:	mov	x29, sp
   22e88:	str	x0, [sp, #24]
   22e8c:	ldr	x0, [sp, #24]
   22e90:	ldr	x1, [x0]
   22e94:	mov	x0, #0xffffffff80000001    	// #-2147483647
   22e98:	cmp	x1, x0
   22e9c:	b.lt	22ebc <omp_set_max_active_levels_8_@@OMP_3.0+0x3c>  // b.tstop
   22ea0:	ldr	x0, [sp, #24]
   22ea4:	ldr	x0, [x0]
   22ea8:	mov	x2, #0x7fffffff            	// #2147483647
   22eac:	mov	x1, #0x7fffffff            	// #2147483647
   22eb0:	cmp	x0, x2
   22eb4:	csel	x0, x0, x1, le
   22eb8:	b	22ec0 <omp_set_max_active_levels_8_@@OMP_3.0+0x40>
   22ebc:	mov	w0, #0x80000000            	// #-2147483648
   22ec0:	bl	d490 <omp_set_max_active_levels@@OMP_3.0>
   22ec4:	nop
   22ec8:	ldp	x29, x30, [sp], #32
   22ecc:	ret

0000000000022ed0 <omp_get_max_active_levels_@@OMP_3.0>:
   22ed0:	stp	x29, x30, [sp, #-16]!
   22ed4:	mov	x29, sp
   22ed8:	bl	d4c0 <omp_get_max_active_levels@@OMP_3.0>
   22edc:	ldp	x29, x30, [sp], #16
   22ee0:	ret

0000000000022ee4 <omp_get_level_@@OMP_3.0>:
   22ee4:	stp	x29, x30, [sp, #-16]!
   22ee8:	mov	x29, sp
   22eec:	bl	1457c <omp_get_level@@OMP_3.0>
   22ef0:	ldp	x29, x30, [sp], #16
   22ef4:	ret

0000000000022ef8 <omp_get_ancestor_thread_num_@@OMP_3.0>:
   22ef8:	stp	x29, x30, [sp, #-32]!
   22efc:	mov	x29, sp
   22f00:	str	x0, [sp, #24]
   22f04:	ldr	x0, [sp, #24]
   22f08:	ldr	w0, [x0]
   22f0c:	bl	14594 <omp_get_ancestor_thread_num@@OMP_3.0>
   22f10:	ldp	x29, x30, [sp], #32
   22f14:	ret

0000000000022f18 <omp_get_ancestor_thread_num_8_@@OMP_3.0>:
   22f18:	stp	x29, x30, [sp, #-32]!
   22f1c:	mov	x29, sp
   22f20:	str	x0, [sp, #24]
   22f24:	ldr	x0, [sp, #24]
   22f28:	ldr	x1, [x0]
   22f2c:	mov	x0, #0xffffffff80000001    	// #-2147483647
   22f30:	cmp	x1, x0
   22f34:	b.lt	22f54 <omp_get_ancestor_thread_num_8_@@OMP_3.0+0x3c>  // b.tstop
   22f38:	ldr	x0, [sp, #24]
   22f3c:	ldr	x0, [x0]
   22f40:	mov	x2, #0x7fffffff            	// #2147483647
   22f44:	mov	x1, #0x7fffffff            	// #2147483647
   22f48:	cmp	x0, x2
   22f4c:	csel	x0, x0, x1, le
   22f50:	b	22f58 <omp_get_ancestor_thread_num_8_@@OMP_3.0+0x40>
   22f54:	mov	w0, #0x80000000            	// #-2147483648
   22f58:	bl	14594 <omp_get_ancestor_thread_num@@OMP_3.0>
   22f5c:	ldp	x29, x30, [sp], #32
   22f60:	ret

0000000000022f64 <omp_get_team_size_@@OMP_3.0>:
   22f64:	stp	x29, x30, [sp, #-32]!
   22f68:	mov	x29, sp
   22f6c:	str	x0, [sp, #24]
   22f70:	ldr	x0, [sp, #24]
   22f74:	ldr	w0, [x0]
   22f78:	bl	14624 <omp_get_team_size@@OMP_3.0>
   22f7c:	ldp	x29, x30, [sp], #32
   22f80:	ret

0000000000022f84 <omp_get_team_size_8_@@OMP_3.0>:
   22f84:	stp	x29, x30, [sp, #-32]!
   22f88:	mov	x29, sp
   22f8c:	str	x0, [sp, #24]
   22f90:	ldr	x0, [sp, #24]
   22f94:	ldr	x1, [x0]
   22f98:	mov	x0, #0xffffffff80000001    	// #-2147483647
   22f9c:	cmp	x1, x0
   22fa0:	b.lt	22fc0 <omp_get_team_size_8_@@OMP_3.0+0x3c>  // b.tstop
   22fa4:	ldr	x0, [sp, #24]
   22fa8:	ldr	x0, [x0]
   22fac:	mov	x2, #0x7fffffff            	// #2147483647
   22fb0:	mov	x1, #0x7fffffff            	// #2147483647
   22fb4:	cmp	x0, x2
   22fb8:	csel	x0, x0, x1, le
   22fbc:	b	22fc4 <omp_get_team_size_8_@@OMP_3.0+0x40>
   22fc0:	mov	w0, #0x80000000            	// #-2147483648
   22fc4:	bl	14624 <omp_get_team_size@@OMP_3.0>
   22fc8:	ldp	x29, x30, [sp], #32
   22fcc:	ret

0000000000022fd0 <omp_get_active_level_@@OMP_3.0>:
   22fd0:	stp	x29, x30, [sp, #-16]!
   22fd4:	mov	x29, sp
   22fd8:	bl	146d0 <omp_get_active_level@@OMP_3.0>
   22fdc:	ldp	x29, x30, [sp], #16
   22fe0:	ret

0000000000022fe4 <omp_in_final_@@OMP_3.1>:
   22fe4:	stp	x29, x30, [sp, #-16]!
   22fe8:	mov	x29, sp
   22fec:	bl	1d3cc <omp_in_final@@OMP_3.1>
   22ff0:	ldp	x29, x30, [sp], #16
   22ff4:	ret

0000000000022ff8 <omp_get_cancellation_@@OMP_4.0>:
   22ff8:	stp	x29, x30, [sp, #-16]!
   22ffc:	mov	x29, sp
   23000:	bl	d4d0 <omp_get_cancellation@@OMP_4.0>
   23004:	ldp	x29, x30, [sp], #16
   23008:	ret

000000000002300c <omp_get_proc_bind_@@OMP_4.0>:
   2300c:	stp	x29, x30, [sp, #-16]!
   23010:	mov	x29, sp
   23014:	bl	d4f0 <omp_get_proc_bind@@OMP_4.0>
   23018:	ldp	x29, x30, [sp], #16
   2301c:	ret

0000000000023020 <omp_get_num_places_@@OMP_4.5>:
   23020:	stp	x29, x30, [sp, #-16]!
   23024:	mov	x29, sp
   23028:	bl	d51c <omp_get_num_places@@OMP_4.5>
   2302c:	ldp	x29, x30, [sp], #16
   23030:	ret

0000000000023034 <omp_get_place_num_procs_@@OMP_4.5>:
   23034:	stp	x29, x30, [sp, #-32]!
   23038:	mov	x29, sp
   2303c:	str	x0, [sp, #24]
   23040:	ldr	x0, [sp, #24]
   23044:	ldr	w0, [x0]
   23048:	bl	24968 <omp_get_place_num_procs@@OMP_4.5>
   2304c:	ldp	x29, x30, [sp], #32
   23050:	ret

0000000000023054 <omp_get_place_num_procs_8_@@OMP_4.5>:
   23054:	stp	x29, x30, [sp, #-32]!
   23058:	mov	x29, sp
   2305c:	str	x0, [sp, #24]
   23060:	ldr	x0, [sp, #24]
   23064:	ldr	x1, [x0]
   23068:	mov	x0, #0xffffffff80000001    	// #-2147483647
   2306c:	cmp	x1, x0
   23070:	b.lt	23090 <omp_get_place_num_procs_8_@@OMP_4.5+0x3c>  // b.tstop
   23074:	ldr	x0, [sp, #24]
   23078:	ldr	x0, [x0]
   2307c:	mov	x2, #0x7fffffff            	// #2147483647
   23080:	mov	x1, #0x7fffffff            	// #2147483647
   23084:	cmp	x0, x2
   23088:	csel	x0, x0, x1, le
   2308c:	b	23094 <omp_get_place_num_procs_8_@@OMP_4.5+0x40>
   23090:	mov	w0, #0x80000000            	// #-2147483648
   23094:	bl	24968 <omp_get_place_num_procs@@OMP_4.5>
   23098:	ldp	x29, x30, [sp], #32
   2309c:	ret

00000000000230a0 <omp_get_place_proc_ids_@@OMP_4.5>:
   230a0:	stp	x29, x30, [sp, #-32]!
   230a4:	mov	x29, sp
   230a8:	str	x0, [sp, #24]
   230ac:	str	x1, [sp, #16]
   230b0:	ldr	x0, [sp, #24]
   230b4:	ldr	w0, [x0]
   230b8:	ldr	x1, [sp, #16]
   230bc:	bl	249dc <omp_get_place_proc_ids@@OMP_4.5>
   230c0:	nop
   230c4:	ldp	x29, x30, [sp], #32
   230c8:	ret

00000000000230cc <omp_get_place_proc_ids_8_@@OMP_4.5>:
   230cc:	stp	x29, x30, [sp, #-32]!
   230d0:	mov	x29, sp
   230d4:	str	x0, [sp, #24]
   230d8:	str	x1, [sp, #16]
   230dc:	ldr	x0, [sp, #24]
   230e0:	ldr	x1, [x0]
   230e4:	mov	x0, #0xffffffff80000001    	// #-2147483647
   230e8:	cmp	x1, x0
   230ec:	b.lt	2310c <omp_get_place_proc_ids_8_@@OMP_4.5+0x40>  // b.tstop
   230f0:	ldr	x0, [sp, #24]
   230f4:	ldr	x0, [x0]
   230f8:	mov	x2, #0x7fffffff            	// #2147483647
   230fc:	mov	x1, #0x7fffffff            	// #2147483647
   23100:	cmp	x0, x2
   23104:	csel	x0, x0, x1, le
   23108:	b	23110 <omp_get_place_proc_ids_8_@@OMP_4.5+0x44>
   2310c:	mov	w0, #0x80000000            	// #-2147483648
   23110:	ldr	x1, [sp, #16]
   23114:	bl	24af0 <omp_get_place_proc_ids@@OMP_4.5+0x114>
   23118:	nop
   2311c:	ldp	x29, x30, [sp], #32
   23120:	ret

0000000000023124 <omp_get_place_num_@@OMP_4.5>:
   23124:	stp	x29, x30, [sp, #-16]!
   23128:	mov	x29, sp
   2312c:	bl	d52c <omp_get_place_num@@OMP_4.5>
   23130:	ldp	x29, x30, [sp], #16
   23134:	ret

0000000000023138 <omp_get_partition_num_places_@@OMP_4.5>:
   23138:	stp	x29, x30, [sp, #-16]!
   2313c:	mov	x29, sp
   23140:	bl	d580 <omp_get_partition_num_places@@OMP_4.5>
   23144:	ldp	x29, x30, [sp], #16
   23148:	ret

000000000002314c <omp_get_partition_place_nums_@@OMP_4.5>:
   2314c:	stp	x29, x30, [sp, #-32]!
   23150:	mov	x29, sp
   23154:	str	x0, [sp, #24]
   23158:	ldr	x0, [sp, #24]
   2315c:	bl	d5d0 <omp_get_partition_place_nums@@OMP_4.5>
   23160:	nop
   23164:	ldp	x29, x30, [sp], #32
   23168:	ret

000000000002316c <omp_get_partition_place_nums_8_@@OMP_4.5>:
   2316c:	stp	x29, x30, [sp, #-48]!
   23170:	mov	x29, sp
   23174:	str	x0, [sp, #24]
   23178:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2317c:	add	x0, x0, #0x650
   23180:	ldr	x0, [x0]
   23184:	cmp	x0, #0x0
   23188:	b.eq	231f8 <omp_get_partition_place_nums_8_@@OMP_4.5+0x8c>  // b.none
   2318c:	bl	22874 <omp_get_wtick@@OMP_2.0+0x5c>
   23190:	str	x0, [sp, #32]
   23194:	ldr	x0, [sp, #32]
   23198:	ldr	w0, [x0, #92]
   2319c:	cmp	w0, #0x0
   231a0:	b.ne	231a8 <omp_get_partition_place_nums_8_@@OMP_4.5+0x3c>  // b.any
   231a4:	bl	2373c <omp_pause_resource_all_@@OMP_5.0+0x34>
   231a8:	str	wzr, [sp, #44]
   231ac:	b	231e0 <omp_get_partition_place_nums_8_@@OMP_4.5+0x74>
   231b0:	ldr	x0, [sp, #32]
   231b4:	ldr	w0, [x0, #52]
   231b8:	mov	w2, w0
   231bc:	ldr	w1, [sp, #44]
   231c0:	ldr	x0, [sp, #24]
   231c4:	add	x3, x0, #0x8
   231c8:	str	x3, [sp, #24]
   231cc:	add	x1, x2, x1
   231d0:	str	x1, [x0]
   231d4:	ldr	w0, [sp, #44]
   231d8:	add	w0, w0, #0x1
   231dc:	str	w0, [sp, #44]
   231e0:	ldr	x0, [sp, #32]
   231e4:	ldr	w0, [x0, #56]
   231e8:	ldr	w1, [sp, #44]
   231ec:	cmp	w1, w0
   231f0:	b.cc	231b0 <omp_get_partition_place_nums_8_@@OMP_4.5+0x44>  // b.lo, b.ul, b.last
   231f4:	b	231fc <omp_get_partition_place_nums_8_@@OMP_4.5+0x90>
   231f8:	nop
   231fc:	ldp	x29, x30, [sp], #48
   23200:	ret

0000000000023204 <omp_set_default_device_@@OMP_4.0>:
   23204:	stp	x29, x30, [sp, #-32]!
   23208:	mov	x29, sp
   2320c:	str	x0, [sp, #24]
   23210:	ldr	x0, [sp, #24]
   23214:	ldr	w0, [x0]
   23218:	bl	d6d0 <omp_set_default_device@@OMP_4.0>
   2321c:	ldp	x29, x30, [sp], #32
   23220:	ret

0000000000023224 <omp_set_default_device_8_@@OMP_4.0>:
   23224:	stp	x29, x30, [sp, #-32]!
   23228:	mov	x29, sp
   2322c:	str	x0, [sp, #24]
   23230:	ldr	x0, [sp, #24]
   23234:	ldr	x1, [x0]
   23238:	mov	x0, #0xffffffff80000001    	// #-2147483647
   2323c:	cmp	x1, x0
   23240:	b.lt	23260 <omp_set_default_device_8_@@OMP_4.0+0x3c>  // b.tstop
   23244:	ldr	x0, [sp, #24]
   23248:	ldr	x0, [x0]
   2324c:	mov	x2, #0x7fffffff            	// #2147483647
   23250:	mov	x1, #0x7fffffff            	// #2147483647
   23254:	cmp	x0, x2
   23258:	csel	x0, x0, x1, le
   2325c:	b	23264 <omp_set_default_device_8_@@OMP_4.0+0x40>
   23260:	mov	w0, #0x80000000            	// #-2147483648
   23264:	bl	d6d0 <omp_set_default_device@@OMP_4.0>
   23268:	ldp	x29, x30, [sp], #32
   2326c:	ret

0000000000023270 <omp_get_default_device_@@OMP_4.0>:
   23270:	stp	x29, x30, [sp, #-16]!
   23274:	mov	x29, sp
   23278:	bl	d710 <omp_get_default_device@@OMP_4.0>
   2327c:	ldp	x29, x30, [sp], #16
   23280:	ret

0000000000023284 <omp_get_num_devices_@@OMP_4.0>:
   23284:	stp	x29, x30, [sp, #-16]!
   23288:	mov	x29, sp
   2328c:	bl	d734 <omp_get_num_devices@@OMP_4.0>
   23290:	ldp	x29, x30, [sp], #16
   23294:	ret

0000000000023298 <omp_get_num_teams_@@OMP_4.0>:
   23298:	stp	x29, x30, [sp, #-16]!
   2329c:	mov	x29, sp
   232a0:	bl	34a24 <omp_get_num_teams@@OMP_4.0>
   232a4:	ldp	x29, x30, [sp], #16
   232a8:	ret

00000000000232ac <omp_get_team_num_@@OMP_4.0>:
   232ac:	stp	x29, x30, [sp, #-16]!
   232b0:	mov	x29, sp
   232b4:	bl	34a34 <omp_get_team_num@@OMP_4.0>
   232b8:	ldp	x29, x30, [sp], #16
   232bc:	ret

00000000000232c0 <omp_is_initial_device_@@OMP_4.0>:
   232c0:	stp	x29, x30, [sp, #-16]!
   232c4:	mov	x29, sp
   232c8:	bl	d748 <omp_is_initial_device@@OMP_4.0>
   232cc:	ldp	x29, x30, [sp], #16
   232d0:	ret

00000000000232d4 <omp_get_initial_device_@@OMP_4.5>:
   232d4:	stp	x29, x30, [sp, #-16]!
   232d8:	mov	x29, sp
   232dc:	bl	d514 <omp_get_initial_device@@OMP_4.5>
   232e0:	ldp	x29, x30, [sp], #16
   232e4:	ret

00000000000232e8 <omp_get_max_task_priority_@@OMP_4.5>:
   232e8:	stp	x29, x30, [sp, #-16]!
   232ec:	mov	x29, sp
   232f0:	bl	d4e0 <omp_get_max_task_priority@@OMP_4.5>
   232f4:	ldp	x29, x30, [sp], #16
   232f8:	ret

00000000000232fc <omp_set_affinity_format_@@OMP_5.0>:
   232fc:	stp	x29, x30, [sp, #-32]!
   23300:	mov	x29, sp
   23304:	str	x0, [sp, #24]
   23308:	str	x1, [sp, #16]
   2330c:	ldr	x1, [sp, #16]
   23310:	ldr	x0, [sp, #24]
   23314:	bl	33708 <acc_set_cuda_stream@@OACC_2.0+0xb00>
   23318:	nop
   2331c:	ldp	x29, x30, [sp], #32
   23320:	ret

0000000000023324 <omp_get_affinity_format_@@OMP_5.0>:
   23324:	stp	x29, x30, [sp, #-48]!
   23328:	mov	x29, sp
   2332c:	str	x0, [sp, #24]
   23330:	str	x1, [sp, #16]
   23334:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23338:	add	x0, x0, #0x358
   2333c:	ldr	x0, [x0]
   23340:	bl	86d0 <strlen@plt>
   23344:	str	x0, [sp, #40]
   23348:	ldr	x0, [sp, #16]
   2334c:	cmp	x0, #0x0
   23350:	b.eq	233c8 <omp_get_affinity_format_@@OMP_5.0+0xa4>  // b.none
   23354:	ldr	x1, [sp, #40]
   23358:	ldr	x0, [sp, #16]
   2335c:	cmp	x1, x0
   23360:	b.cs	233ac <omp_get_affinity_format_@@OMP_5.0+0x88>  // b.hs, b.nlast
   23364:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23368:	add	x0, x0, #0x358
   2336c:	ldr	x0, [x0]
   23370:	ldr	x2, [sp, #40]
   23374:	mov	x1, x0
   23378:	ldr	x0, [sp, #24]
   2337c:	bl	86a0 <memcpy@plt>
   23380:	ldr	x1, [sp, #24]
   23384:	ldr	x0, [sp, #40]
   23388:	add	x3, x1, x0
   2338c:	ldr	x1, [sp, #16]
   23390:	ldr	x0, [sp, #40]
   23394:	sub	x0, x1, x0
   23398:	mov	x2, x0
   2339c:	mov	w1, #0x20                  	// #32
   233a0:	mov	x0, x3
   233a4:	bl	88d0 <memset@plt>
   233a8:	b	233c8 <omp_get_affinity_format_@@OMP_5.0+0xa4>
   233ac:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   233b0:	add	x0, x0, #0x358
   233b4:	ldr	x0, [x0]
   233b8:	ldr	x2, [sp, #16]
   233bc:	mov	x1, x0
   233c0:	ldr	x0, [sp, #24]
   233c4:	bl	86a0 <memcpy@plt>
   233c8:	ldr	x0, [sp, #40]
   233cc:	ldp	x29, x30, [sp], #48
   233d0:	ret

00000000000233d4 <omp_display_affinity_@@OMP_5.0>:
   233d4:	sub	sp, sp, #0x350
   233d8:	stp	x29, x30, [sp]
   233dc:	mov	x29, sp
   233e0:	str	x19, [sp, #16]
   233e4:	str	x0, [sp, #40]
   233e8:	str	x1, [sp, #32]
   233ec:	str	xzr, [sp, #840]
   233f0:	ldr	x0, [sp, #32]
   233f4:	cmp	x0, #0x0
   233f8:	b.eq	23440 <omp_display_affinity_@@OMP_5.0+0x6c>  // b.none
   233fc:	ldr	x0, [sp, #32]
   23400:	cmp	x0, #0xff
   23404:	b.hi	23410 <omp_display_affinity_@@OMP_5.0+0x3c>  // b.pmore
   23408:	add	x0, sp, #0x230
   2340c:	b	2341c <omp_display_affinity_@@OMP_5.0+0x48>
   23410:	ldr	x0, [sp, #32]
   23414:	add	x0, x0, #0x1
   23418:	bl	8dd0 <fprintf@plt+0x1a0>
   2341c:	str	x0, [sp, #840]
   23420:	ldr	x2, [sp, #32]
   23424:	ldr	x1, [sp, #40]
   23428:	ldr	x0, [sp, #840]
   2342c:	bl	86a0 <memcpy@plt>
   23430:	ldr	x1, [sp, #840]
   23434:	ldr	x0, [sp, #32]
   23438:	add	x0, x1, x0
   2343c:	strb	wzr, [x0]
   23440:	bl	22874 <omp_get_wtick@@OMP_2.0+0x5c>
   23444:	str	x0, [sp, #832]
   23448:	ldr	x0, [sp, #32]
   2344c:	cmp	x0, #0x0
   23450:	b.eq	2345c <omp_display_affinity_@@OMP_5.0+0x88>  // b.none
   23454:	ldr	x19, [sp, #840]
   23458:	b	23468 <omp_display_affinity_@@OMP_5.0+0x94>
   2345c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23460:	add	x0, x0, #0x358
   23464:	ldr	x19, [x0]
   23468:	bl	22888 <omp_get_wtick@@OMP_2.0+0x70>
   2346c:	mov	x3, x0
   23470:	ldr	x0, [sp, #832]
   23474:	add	x1, x0, #0x10
   23478:	ldr	x0, [sp, #832]
   2347c:	ldr	w2, [x0, #92]
   23480:	add	x0, sp, #0x30
   23484:	mov	w5, w2
   23488:	mov	x4, x1
   2348c:	mov	x2, x19
   23490:	mov	x1, #0x200                 	// #512
   23494:	bl	33f60 <omp_get_affinity_format@@OMP_5.0+0x744>
   23498:	str	x0, [sp, #824]
   2349c:	ldr	x0, [sp, #824]
   234a0:	cmp	x0, #0x1ff
   234a4:	b.hi	234cc <omp_display_affinity_@@OMP_5.0+0xf8>  // b.pmore
   234a8:	ldr	x0, [sp, #824]
   234ac:	add	x1, sp, #0x30
   234b0:	mov	w2, #0xa                   	// #10
   234b4:	strb	w2, [x1, x0]
   234b8:	ldr	x0, [sp, #824]
   234bc:	add	x1, x0, #0x1
   234c0:	add	x0, sp, #0x30
   234c4:	bl	336cc <acc_set_cuda_stream@@OACC_2.0+0xac4>
   234c8:	b	2355c <omp_display_affinity_@@OMP_5.0+0x188>
   234cc:	ldr	x0, [sp, #824]
   234d0:	add	x0, x0, #0x1
   234d4:	bl	8dd0 <fprintf@plt+0x1a0>
   234d8:	str	x0, [sp, #816]
   234dc:	ldr	x0, [sp, #32]
   234e0:	cmp	x0, #0x0
   234e4:	b.eq	234f0 <omp_display_affinity_@@OMP_5.0+0x11c>  // b.none
   234e8:	ldr	x19, [sp, #840]
   234ec:	b	234fc <omp_display_affinity_@@OMP_5.0+0x128>
   234f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   234f4:	add	x0, x0, #0x358
   234f8:	ldr	x19, [x0]
   234fc:	bl	22888 <omp_get_wtick@@OMP_2.0+0x70>
   23500:	mov	x3, x0
   23504:	ldr	x0, [sp, #832]
   23508:	add	x1, x0, #0x10
   2350c:	ldr	x0, [sp, #832]
   23510:	ldr	w2, [x0, #92]
   23514:	add	x0, sp, #0x30
   23518:	mov	w5, w2
   2351c:	mov	x4, x1
   23520:	mov	x2, x19
   23524:	mov	x1, #0x200                 	// #512
   23528:	bl	33f60 <omp_get_affinity_format@@OMP_5.0+0x744>
   2352c:	ldr	x1, [sp, #816]
   23530:	ldr	x0, [sp, #824]
   23534:	add	x0, x1, x0
   23538:	mov	w1, #0xa                   	// #10
   2353c:	strb	w1, [x0]
   23540:	ldr	x0, [sp, #824]
   23544:	add	x0, x0, #0x1
   23548:	mov	x1, x0
   2354c:	ldr	x0, [sp, #816]
   23550:	bl	336cc <acc_set_cuda_stream@@OACC_2.0+0xac4>
   23554:	ldr	x0, [sp, #816]
   23558:	bl	8a20 <free@plt>
   2355c:	ldr	x0, [sp, #840]
   23560:	cmp	x0, #0x0
   23564:	b.eq	23580 <omp_display_affinity_@@OMP_5.0+0x1ac>  // b.none
   23568:	add	x0, sp, #0x230
   2356c:	ldr	x1, [sp, #840]
   23570:	cmp	x1, x0
   23574:	b.eq	23580 <omp_display_affinity_@@OMP_5.0+0x1ac>  // b.none
   23578:	ldr	x0, [sp, #840]
   2357c:	bl	8a20 <free@plt>
   23580:	nop
   23584:	ldr	x19, [sp, #16]
   23588:	ldp	x29, x30, [sp]
   2358c:	add	sp, sp, #0x350
   23590:	ret

0000000000023594 <omp_capture_affinity_@@OMP_5.0>:
   23594:	stp	x29, x30, [sp, #-352]!
   23598:	mov	x29, sp
   2359c:	str	x19, [sp, #16]
   235a0:	str	x0, [sp, #56]
   235a4:	str	x1, [sp, #48]
   235a8:	str	x2, [sp, #40]
   235ac:	str	x3, [sp, #32]
   235b0:	str	xzr, [sp, #344]
   235b4:	ldr	x0, [sp, #32]
   235b8:	cmp	x0, #0x0
   235bc:	b.eq	23604 <omp_capture_affinity_@@OMP_5.0+0x70>  // b.none
   235c0:	ldr	x0, [sp, #32]
   235c4:	cmp	x0, #0xff
   235c8:	b.hi	235d4 <omp_capture_affinity_@@OMP_5.0+0x40>  // b.pmore
   235cc:	add	x0, sp, #0x48
   235d0:	b	235e0 <omp_capture_affinity_@@OMP_5.0+0x4c>
   235d4:	ldr	x0, [sp, #32]
   235d8:	add	x0, x0, #0x1
   235dc:	bl	8dd0 <fprintf@plt+0x1a0>
   235e0:	str	x0, [sp, #344]
   235e4:	ldr	x2, [sp, #32]
   235e8:	ldr	x1, [sp, #48]
   235ec:	ldr	x0, [sp, #344]
   235f0:	bl	86a0 <memcpy@plt>
   235f4:	ldr	x1, [sp, #344]
   235f8:	ldr	x0, [sp, #32]
   235fc:	add	x0, x1, x0
   23600:	strb	wzr, [x0]
   23604:	bl	22874 <omp_get_wtick@@OMP_2.0+0x5c>
   23608:	str	x0, [sp, #336]
   2360c:	ldr	x0, [sp, #32]
   23610:	cmp	x0, #0x0
   23614:	b.eq	23620 <omp_capture_affinity_@@OMP_5.0+0x8c>  // b.none
   23618:	ldr	x19, [sp, #344]
   2361c:	b	2362c <omp_capture_affinity_@@OMP_5.0+0x98>
   23620:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23624:	add	x0, x0, #0x358
   23628:	ldr	x19, [x0]
   2362c:	bl	22888 <omp_get_wtick@@OMP_2.0+0x70>
   23630:	mov	x2, x0
   23634:	ldr	x0, [sp, #336]
   23638:	add	x1, x0, #0x10
   2363c:	ldr	x0, [sp, #336]
   23640:	ldr	w0, [x0, #92]
   23644:	mov	w5, w0
   23648:	mov	x4, x1
   2364c:	mov	x3, x2
   23650:	mov	x2, x19
   23654:	ldr	x1, [sp, #40]
   23658:	ldr	x0, [sp, #56]
   2365c:	bl	33f60 <omp_get_affinity_format@@OMP_5.0+0x744>
   23660:	str	x0, [sp, #328]
   23664:	ldr	x0, [sp, #344]
   23668:	cmp	x0, #0x0
   2366c:	b.eq	23688 <omp_capture_affinity_@@OMP_5.0+0xf4>  // b.none
   23670:	add	x0, sp, #0x48
   23674:	ldr	x1, [sp, #344]
   23678:	cmp	x1, x0
   2367c:	b.eq	23688 <omp_capture_affinity_@@OMP_5.0+0xf4>  // b.none
   23680:	ldr	x0, [sp, #344]
   23684:	bl	8a20 <free@plt>
   23688:	ldr	x1, [sp, #328]
   2368c:	ldr	x0, [sp, #40]
   23690:	cmp	x1, x0
   23694:	b.cs	236c0 <omp_capture_affinity_@@OMP_5.0+0x12c>  // b.hs, b.nlast
   23698:	ldr	x1, [sp, #56]
   2369c:	ldr	x0, [sp, #328]
   236a0:	add	x3, x1, x0
   236a4:	ldr	x1, [sp, #40]
   236a8:	ldr	x0, [sp, #328]
   236ac:	sub	x0, x1, x0
   236b0:	mov	x2, x0
   236b4:	mov	w1, #0x20                  	// #32
   236b8:	mov	x0, x3
   236bc:	bl	88d0 <memset@plt>
   236c0:	ldr	x0, [sp, #328]
   236c4:	ldr	x19, [sp, #16]
   236c8:	ldp	x29, x30, [sp], #352
   236cc:	ret

00000000000236d0 <omp_pause_resource_@@OMP_5.0>:
   236d0:	stp	x29, x30, [sp, #-32]!
   236d4:	mov	x29, sp
   236d8:	str	x0, [sp, #24]
   236dc:	str	x1, [sp, #16]
   236e0:	ldr	x0, [sp, #24]
   236e4:	ldr	w0, [x0]
   236e8:	mov	w2, w0
   236ec:	ldr	x0, [sp, #16]
   236f0:	ldr	w0, [x0]
   236f4:	mov	w1, w0
   236f8:	mov	w0, w2
   236fc:	bl	2bd0c <omp_pause_resource@@OMP_5.0>
   23700:	ldp	x29, x30, [sp], #32
   23704:	ret

0000000000023708 <omp_pause_resource_all_@@OMP_5.0>:
   23708:	stp	x29, x30, [sp, #-32]!
   2370c:	mov	x29, sp
   23710:	str	x0, [sp, #24]
   23714:	ldr	x0, [sp, #24]
   23718:	ldr	w0, [x0]
   2371c:	bl	2bd64 <omp_pause_resource_all@@OMP_5.0>
   23720:	ldp	x29, x30, [sp], #32
   23724:	ret
   23728:	mrs	x1, tpidr_el0
   2372c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   23730:	ldr	x0, [x0, #4016]
   23734:	add	x0, x1, x0
   23738:	ret
   2373c:	stp	x29, x30, [sp, #-32]!
   23740:	mov	x29, sp
   23744:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23748:	add	x0, x0, #0x650
   2374c:	ldr	x0, [x0]
   23750:	cmp	x0, #0x0
   23754:	b.ne	2377c <omp_pause_resource_all_@@OMP_5.0+0x74>  // b.any
   23758:	mov	w2, #0x1                   	// #1
   2375c:	mov	x1, #0xffffffffffffffff    	// #-1
   23760:	mov	w0, #0x1                   	// #1
   23764:	bl	2462c <omp_pause_resource_all_@@OMP_5.0+0xf24>
   23768:	and	w0, w0, #0xff
   2376c:	eor	w0, w0, #0x1
   23770:	and	w0, w0, #0xff
   23774:	cmp	w0, #0x0
   23778:	b.ne	237e4 <omp_pause_resource_all_@@OMP_5.0+0xdc>  // b.any
   2377c:	bl	23728 <omp_pause_resource_all_@@OMP_5.0+0x20>
   23780:	str	x0, [sp, #24]
   23784:	bl	8bb0 <pthread_self@plt>
   23788:	mov	x3, x0
   2378c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23790:	add	x0, x0, #0x6d8
   23794:	ldr	x1, [x0]
   23798:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2379c:	add	x0, x0, #0x650
   237a0:	ldr	x0, [x0]
   237a4:	ldr	x0, [x0]
   237a8:	mov	x2, x0
   237ac:	mov	x0, x3
   237b0:	bl	8b90 <pthread_setaffinity_np@plt>
   237b4:	ldr	x0, [sp, #24]
   237b8:	mov	w1, #0x1                   	// #1
   237bc:	str	w1, [x0, #92]
   237c0:	ldr	x0, [sp, #24]
   237c4:	str	wzr, [x0, #52]
   237c8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   237cc:	add	x0, x0, #0x678
   237d0:	ldr	x0, [x0]
   237d4:	mov	w1, w0
   237d8:	ldr	x0, [sp, #24]
   237dc:	str	w1, [x0, #56]
   237e0:	b	237e8 <omp_pause_resource_all_@@OMP_5.0+0xe0>
   237e4:	nop
   237e8:	ldp	x29, x30, [sp], #32
   237ec:	ret
   237f0:	stp	x29, x30, [sp, #-32]!
   237f4:	mov	x29, sp
   237f8:	str	x0, [sp, #24]
   237fc:	str	w1, [sp, #20]
   23800:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23804:	add	x0, x0, #0x6d8
   23808:	ldr	x3, [x0]
   2380c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23810:	add	x0, x0, #0x650
   23814:	ldr	x1, [x0]
   23818:	ldr	w0, [sp, #20]
   2381c:	lsl	x0, x0, #3
   23820:	add	x0, x1, x0
   23824:	ldr	x0, [x0]
   23828:	mov	x2, x0
   2382c:	mov	x1, x3
   23830:	ldr	x0, [sp, #24]
   23834:	bl	8b80 <pthread_attr_setaffinity_np@plt>
   23838:	nop
   2383c:	ldp	x29, x30, [sp], #32
   23840:	ret
   23844:	stp	x29, x30, [sp, #-64]!
   23848:	mov	x29, sp
   2384c:	str	x0, [sp, #24]
   23850:	strb	w1, [sp, #23]
   23854:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23858:	add	x0, x0, #0x6e0
   2385c:	ldr	x0, [x0]
   23860:	cmp	x0, #0x0
   23864:	b.ne	23890 <omp_pause_resource_all_@@OMP_5.0+0x188>  // b.any
   23868:	ldrb	w0, [sp, #23]
   2386c:	eor	w0, w0, #0x1
   23870:	and	w0, w0, #0xff
   23874:	cmp	w0, #0x0
   23878:	b.eq	23888 <omp_pause_resource_all_@@OMP_5.0+0x180>  // b.none
   2387c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   23880:	add	x0, x0, #0x578
   23884:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   23888:	mov	x0, #0x0                   	// #0
   2388c:	b	23950 <omp_pause_resource_all_@@OMP_5.0+0x248>
   23890:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23894:	add	x0, x0, #0x6d8
   23898:	ldr	x0, [x0]
   2389c:	add	x1, x0, #0x8
   238a0:	ldr	x0, [sp, #24]
   238a4:	mul	x0, x1, x0
   238a8:	bl	8850 <malloc@plt>
   238ac:	str	x0, [sp, #40]
   238b0:	ldr	x0, [sp, #40]
   238b4:	cmp	x0, #0x0
   238b8:	b.ne	238e4 <omp_pause_resource_all_@@OMP_5.0+0x1dc>  // b.any
   238bc:	ldrb	w0, [sp, #23]
   238c0:	eor	w0, w0, #0x1
   238c4:	and	w0, w0, #0xff
   238c8:	cmp	w0, #0x0
   238cc:	b.eq	238dc <omp_pause_resource_all_@@OMP_5.0+0x1d4>  // b.none
   238d0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   238d4:	add	x0, x0, #0x598
   238d8:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   238dc:	mov	x0, #0x0                   	// #0
   238e0:	b	23950 <omp_pause_resource_all_@@OMP_5.0+0x248>
   238e4:	ldr	x0, [sp, #24]
   238e8:	lsl	x0, x0, #3
   238ec:	ldr	x1, [sp, #40]
   238f0:	add	x0, x1, x0
   238f4:	str	x0, [sp, #48]
   238f8:	str	xzr, [sp, #56]
   238fc:	b	2393c <omp_pause_resource_all_@@OMP_5.0+0x234>
   23900:	ldr	x0, [sp, #56]
   23904:	lsl	x0, x0, #3
   23908:	ldr	x1, [sp, #40]
   2390c:	add	x0, x1, x0
   23910:	ldr	x1, [sp, #48]
   23914:	str	x1, [x0]
   23918:	ldr	x0, [sp, #56]
   2391c:	add	x0, x0, #0x1
   23920:	str	x0, [sp, #56]
   23924:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23928:	add	x0, x0, #0x6d8
   2392c:	ldr	x0, [x0]
   23930:	ldr	x1, [sp, #48]
   23934:	add	x0, x1, x0
   23938:	str	x0, [sp, #48]
   2393c:	ldr	x1, [sp, #56]
   23940:	ldr	x0, [sp, #24]
   23944:	cmp	x1, x0
   23948:	b.cc	23900 <omp_pause_resource_all_@@OMP_5.0+0x1f8>  // b.lo, b.ul, b.last
   2394c:	ldr	x0, [sp, #40]
   23950:	ldp	x29, x30, [sp], #64
   23954:	ret
   23958:	stp	x29, x30, [sp, #-48]!
   2395c:	mov	x29, sp
   23960:	str	x0, [sp, #24]
   23964:	ldr	x0, [sp, #24]
   23968:	str	x0, [sp, #40]
   2396c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23970:	add	x0, x0, #0x6d8
   23974:	ldr	x0, [x0]
   23978:	ldr	x1, [sp, #40]
   2397c:	mov	x3, x1
   23980:	mov	x2, x0
   23984:	mov	w1, #0x0                   	// #0
   23988:	mov	x0, x3
   2398c:	bl	88d0 <memset@plt>
   23990:	nop
   23994:	ldp	x29, x30, [sp], #48
   23998:	ret
   2399c:	stp	x29, x30, [sp, #-96]!
   239a0:	mov	x29, sp
   239a4:	str	x0, [sp, #56]
   239a8:	str	x1, [sp, #48]
   239ac:	str	x2, [sp, #40]
   239b0:	str	x3, [sp, #32]
   239b4:	strb	w4, [sp, #31]
   239b8:	ldr	x0, [sp, #56]
   239bc:	str	x0, [sp, #88]
   239c0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   239c4:	add	x0, x0, #0x6d8
   239c8:	ldr	x0, [x0]
   239cc:	lsl	x0, x0, #3
   239d0:	str	x0, [sp, #80]
   239d4:	ldr	x1, [sp, #48]
   239d8:	ldr	x0, [sp, #80]
   239dc:	cmp	x1, x0
   239e0:	b.cc	23a10 <omp_pause_resource_all_@@OMP_5.0+0x308>  // b.lo, b.ul, b.last
   239e4:	ldrb	w0, [sp, #31]
   239e8:	eor	w0, w0, #0x1
   239ec:	and	w0, w0, #0xff
   239f0:	cmp	w0, #0x0
   239f4:	b.eq	23a08 <omp_pause_resource_all_@@OMP_5.0+0x300>  // b.none
   239f8:	ldr	x1, [sp, #48]
   239fc:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   23a00:	add	x0, x0, #0x5c8
   23a04:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   23a08:	mov	w0, #0x0                   	// #0
   23a0c:	b	23b1c <omp_pause_resource_all_@@OMP_5.0+0x414>
   23a10:	ldr	x0, [sp, #48]
   23a14:	str	x0, [sp, #72]
   23a18:	ldr	x0, [sp, #72]
   23a1c:	lsr	x1, x0, #3
   23a20:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23a24:	add	x0, x0, #0x6d8
   23a28:	ldr	x0, [x0]
   23a2c:	cmp	x1, x0
   23a30:	b.cs	23a70 <omp_pause_resource_all_@@OMP_5.0+0x368>  // b.hs, b.nlast
   23a34:	ldr	x2, [sp, #88]
   23a38:	ldr	x0, [sp, #72]
   23a3c:	lsr	x0, x0, #6
   23a40:	lsl	x1, x0, #3
   23a44:	add	x1, x2, x1
   23a48:	ldr	x2, [x1]
   23a4c:	ldr	x1, [sp, #72]
   23a50:	and	w1, w1, #0x3f
   23a54:	mov	x3, #0x1                   	// #1
   23a58:	lsl	x1, x3, x1
   23a5c:	ldr	x3, [sp, #88]
   23a60:	lsl	x0, x0, #3
   23a64:	add	x0, x3, x0
   23a68:	orr	x1, x2, x1
   23a6c:	str	x1, [x0]
   23a70:	ldr	x0, [sp, #40]
   23a74:	sub	x0, x0, #0x1
   23a78:	str	x0, [sp, #40]
   23a7c:	ldr	x0, [sp, #40]
   23a80:	cmp	x0, #0x0
   23a84:	b.ne	23a90 <omp_pause_resource_all_@@OMP_5.0+0x388>  // b.any
   23a88:	mov	w0, #0x1                   	// #1
   23a8c:	b	23b1c <omp_pause_resource_all_@@OMP_5.0+0x414>
   23a90:	ldr	x0, [sp, #32]
   23a94:	cmp	x0, #0x0
   23a98:	b.ge	23ab4 <omp_pause_resource_all_@@OMP_5.0+0x3ac>  // b.tcont
   23a9c:	ldr	x1, [sp, #32]
   23aa0:	ldr	x0, [sp, #48]
   23aa4:	add	x0, x1, x0
   23aa8:	ldr	x1, [sp, #48]
   23aac:	cmp	x1, x0
   23ab0:	b.cc	23ad8 <omp_pause_resource_all_@@OMP_5.0+0x3d0>  // b.lo, b.ul, b.last
   23ab4:	ldr	x0, [sp, #32]
   23ab8:	cmp	x0, #0x0
   23abc:	b.le	23b08 <omp_pause_resource_all_@@OMP_5.0+0x400>
   23ac0:	ldr	x1, [sp, #32]
   23ac4:	ldr	x0, [sp, #48]
   23ac8:	add	x0, x1, x0
   23acc:	ldr	x1, [sp, #48]
   23ad0:	cmp	x1, x0
   23ad4:	b.ls	23b08 <omp_pause_resource_all_@@OMP_5.0+0x400>  // b.plast
   23ad8:	ldrb	w0, [sp, #31]
   23adc:	eor	w0, w0, #0x1
   23ae0:	and	w0, w0, #0xff
   23ae4:	cmp	w0, #0x0
   23ae8:	b.eq	23b00 <omp_pause_resource_all_@@OMP_5.0+0x3f8>  // b.none
   23aec:	ldr	x2, [sp, #32]
   23af0:	ldr	x1, [sp, #48]
   23af4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   23af8:	add	x0, x0, #0x5f0
   23afc:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   23b00:	mov	w0, #0x0                   	// #0
   23b04:	b	23b1c <omp_pause_resource_all_@@OMP_5.0+0x414>
   23b08:	ldr	x0, [sp, #32]
   23b0c:	ldr	x1, [sp, #48]
   23b10:	add	x0, x1, x0
   23b14:	str	x0, [sp, #48]
   23b18:	b	239d4 <omp_pause_resource_all_@@OMP_5.0+0x2cc>
   23b1c:	ldp	x29, x30, [sp], #96
   23b20:	ret
   23b24:	stp	x29, x30, [sp, #-64]!
   23b28:	mov	x29, sp
   23b2c:	str	x0, [sp, #24]
   23b30:	str	x1, [sp, #16]
   23b34:	ldr	x0, [sp, #24]
   23b38:	str	x0, [sp, #56]
   23b3c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23b40:	add	x0, x0, #0x6d8
   23b44:	ldr	x0, [x0]
   23b48:	lsl	x0, x0, #3
   23b4c:	ldr	x1, [sp, #16]
   23b50:	cmp	x1, x0
   23b54:	b.cc	23b70 <omp_pause_resource_all_@@OMP_5.0+0x468>  // b.lo, b.ul, b.last
   23b58:	ldr	x1, [sp, #16]
   23b5c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   23b60:	add	x0, x0, #0x5c8
   23b64:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   23b68:	mov	w0, #0x0                   	// #0
   23b6c:	b	23c58 <omp_pause_resource_all_@@OMP_5.0+0x550>
   23b70:	ldr	x0, [sp, #16]
   23b74:	str	x0, [sp, #48]
   23b78:	ldr	x0, [sp, #48]
   23b7c:	lsr	x1, x0, #3
   23b80:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23b84:	add	x0, x0, #0x6d8
   23b88:	ldr	x0, [x0]
   23b8c:	cmp	x1, x0
   23b90:	b.cs	23bcc <omp_pause_resource_all_@@OMP_5.0+0x4c4>  // b.hs, b.nlast
   23b94:	ldr	x1, [sp, #56]
   23b98:	ldr	x0, [sp, #48]
   23b9c:	lsr	x0, x0, #6
   23ba0:	lsl	x0, x0, #3
   23ba4:	add	x0, x1, x0
   23ba8:	ldr	x1, [x0]
   23bac:	ldr	x0, [sp, #48]
   23bb0:	and	w0, w0, #0x3f
   23bb4:	lsr	x0, x1, x0
   23bb8:	and	x0, x0, #0x1
   23bbc:	cmp	x0, #0x0
   23bc0:	b.eq	23bcc <omp_pause_resource_all_@@OMP_5.0+0x4c4>  // b.none
   23bc4:	mov	w0, #0x1                   	// #1
   23bc8:	b	23bd0 <omp_pause_resource_all_@@OMP_5.0+0x4c8>
   23bcc:	mov	w0, #0x0                   	// #0
   23bd0:	cmp	w0, #0x0
   23bd4:	b.ne	23bf0 <omp_pause_resource_all_@@OMP_5.0+0x4e8>  // b.any
   23bd8:	ldr	x1, [sp, #16]
   23bdc:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   23be0:	add	x0, x0, #0x618
   23be4:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   23be8:	mov	w0, #0x0                   	// #0
   23bec:	b	23c58 <omp_pause_resource_all_@@OMP_5.0+0x550>
   23bf0:	ldr	x0, [sp, #16]
   23bf4:	str	x0, [sp, #40]
   23bf8:	ldr	x0, [sp, #40]
   23bfc:	lsr	x1, x0, #3
   23c00:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23c04:	add	x0, x0, #0x6d8
   23c08:	ldr	x0, [x0]
   23c0c:	cmp	x1, x0
   23c10:	b.cs	23c54 <omp_pause_resource_all_@@OMP_5.0+0x54c>  // b.hs, b.nlast
   23c14:	ldr	x2, [sp, #56]
   23c18:	ldr	x0, [sp, #40]
   23c1c:	lsr	x0, x0, #6
   23c20:	lsl	x1, x0, #3
   23c24:	add	x1, x2, x1
   23c28:	ldr	x2, [x1]
   23c2c:	ldr	x1, [sp, #40]
   23c30:	and	w1, w1, #0x3f
   23c34:	mov	x3, #0x1                   	// #1
   23c38:	lsl	x1, x3, x1
   23c3c:	mvn	x1, x1
   23c40:	ldr	x3, [sp, #56]
   23c44:	lsl	x0, x0, #3
   23c48:	add	x0, x3, x0
   23c4c:	and	x1, x2, x1
   23c50:	str	x1, [x0]
   23c54:	mov	w0, #0x1                   	// #1
   23c58:	ldp	x29, x30, [sp], #64
   23c5c:	ret
   23c60:	stp	x29, x30, [sp, #-96]!
   23c64:	mov	x29, sp
   23c68:	str	x0, [sp, #40]
   23c6c:	str	x1, [sp, #32]
   23c70:	str	x2, [sp, #24]
   23c74:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23c78:	add	x0, x0, #0x6d8
   23c7c:	ldr	x0, [x0]
   23c80:	lsl	x0, x0, #3
   23c84:	str	x0, [sp, #80]
   23c88:	ldr	x0, [sp, #40]
   23c8c:	str	x0, [sp, #72]
   23c90:	ldr	x0, [sp, #32]
   23c94:	str	x0, [sp, #64]
   23c98:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23c9c:	add	x0, x0, #0x6d8
   23ca0:	ldr	x0, [x0]
   23ca4:	ldr	x1, [sp, #72]
   23ca8:	mov	x3, x1
   23cac:	mov	x2, x0
   23cb0:	mov	w1, #0x0                   	// #0
   23cb4:	mov	x0, x3
   23cb8:	bl	88d0 <memset@plt>
   23cbc:	str	xzr, [sp, #88]
   23cc0:	b	23e1c <omp_pause_resource_all_@@OMP_5.0+0x714>
   23cc4:	ldr	x0, [sp, #88]
   23cc8:	str	x0, [sp, #56]
   23ccc:	ldr	x0, [sp, #56]
   23cd0:	lsr	x1, x0, #3
   23cd4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23cd8:	add	x0, x0, #0x6d8
   23cdc:	ldr	x0, [x0]
   23ce0:	cmp	x1, x0
   23ce4:	b.cs	23d20 <omp_pause_resource_all_@@OMP_5.0+0x618>  // b.hs, b.nlast
   23ce8:	ldr	x1, [sp, #64]
   23cec:	ldr	x0, [sp, #56]
   23cf0:	lsr	x0, x0, #6
   23cf4:	lsl	x0, x0, #3
   23cf8:	add	x0, x1, x0
   23cfc:	ldr	x1, [x0]
   23d00:	ldr	x0, [sp, #56]
   23d04:	and	w0, w0, #0x3f
   23d08:	lsr	x0, x1, x0
   23d0c:	and	x0, x0, #0x1
   23d10:	cmp	x0, #0x0
   23d14:	b.eq	23d20 <omp_pause_resource_all_@@OMP_5.0+0x618>  // b.none
   23d18:	mov	w0, #0x1                   	// #1
   23d1c:	b	23d24 <omp_pause_resource_all_@@OMP_5.0+0x61c>
   23d20:	mov	w0, #0x0                   	// #0
   23d24:	cmp	w0, #0x0
   23d28:	b.eq	23e10 <omp_pause_resource_all_@@OMP_5.0+0x708>  // b.none
   23d2c:	ldr	x0, [sp, #24]
   23d30:	cmp	x0, #0x0
   23d34:	b.ge	23d50 <omp_pause_resource_all_@@OMP_5.0+0x648>  // b.tcont
   23d38:	ldr	x1, [sp, #24]
   23d3c:	ldr	x0, [sp, #88]
   23d40:	add	x0, x1, x0
   23d44:	ldr	x1, [sp, #88]
   23d48:	cmp	x1, x0
   23d4c:	b.cc	23d8c <omp_pause_resource_all_@@OMP_5.0+0x684>  // b.lo, b.ul, b.last
   23d50:	ldr	x0, [sp, #24]
   23d54:	cmp	x0, #0x0
   23d58:	b.le	23da8 <omp_pause_resource_all_@@OMP_5.0+0x6a0>
   23d5c:	ldr	x1, [sp, #24]
   23d60:	ldr	x0, [sp, #88]
   23d64:	add	x0, x1, x0
   23d68:	ldr	x1, [sp, #88]
   23d6c:	cmp	x1, x0
   23d70:	b.hi	23d8c <omp_pause_resource_all_@@OMP_5.0+0x684>  // b.pmore
   23d74:	ldr	x1, [sp, #24]
   23d78:	ldr	x0, [sp, #88]
   23d7c:	add	x0, x1, x0
   23d80:	ldr	x1, [sp, #80]
   23d84:	cmp	x1, x0
   23d88:	b.hi	23da8 <omp_pause_resource_all_@@OMP_5.0+0x6a0>  // b.pmore
   23d8c:	ldr	x2, [sp, #24]
   23d90:	ldr	x1, [sp, #88]
   23d94:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   23d98:	add	x0, x0, #0x5f0
   23d9c:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   23da0:	mov	w0, #0x0                   	// #0
   23da4:	b	23e30 <omp_pause_resource_all_@@OMP_5.0+0x728>
   23da8:	ldr	x0, [sp, #24]
   23dac:	ldr	x1, [sp, #88]
   23db0:	add	x0, x1, x0
   23db4:	str	x0, [sp, #48]
   23db8:	ldr	x0, [sp, #48]
   23dbc:	lsr	x1, x0, #3
   23dc0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23dc4:	add	x0, x0, #0x6d8
   23dc8:	ldr	x0, [x0]
   23dcc:	cmp	x1, x0
   23dd0:	b.cs	23e10 <omp_pause_resource_all_@@OMP_5.0+0x708>  // b.hs, b.nlast
   23dd4:	ldr	x2, [sp, #72]
   23dd8:	ldr	x0, [sp, #48]
   23ddc:	lsr	x0, x0, #6
   23de0:	lsl	x1, x0, #3
   23de4:	add	x1, x2, x1
   23de8:	ldr	x2, [x1]
   23dec:	ldr	x1, [sp, #48]
   23df0:	and	w1, w1, #0x3f
   23df4:	mov	x3, #0x1                   	// #1
   23df8:	lsl	x1, x3, x1
   23dfc:	ldr	x3, [sp, #72]
   23e00:	lsl	x0, x0, #3
   23e04:	add	x0, x3, x0
   23e08:	orr	x1, x2, x1
   23e0c:	str	x1, [x0]
   23e10:	ldr	x0, [sp, #88]
   23e14:	add	x0, x0, #0x1
   23e18:	str	x0, [sp, #88]
   23e1c:	ldr	x1, [sp, #88]
   23e20:	ldr	x0, [sp, #80]
   23e24:	cmp	x1, x0
   23e28:	b.cc	23cc4 <omp_pause_resource_all_@@OMP_5.0+0x5bc>  // b.lo, b.ul, b.last
   23e2c:	mov	w0, #0x1                   	// #1
   23e30:	ldp	x29, x30, [sp], #96
   23e34:	ret
   23e38:	stp	x29, x30, [sp, #-32]!
   23e3c:	mov	x29, sp
   23e40:	str	x0, [sp, #24]
   23e44:	str	x1, [sp, #16]
   23e48:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23e4c:	add	x0, x0, #0x6d8
   23e50:	ldr	x0, [x0]
   23e54:	mov	x2, x0
   23e58:	ldr	x1, [sp, #16]
   23e5c:	ldr	x0, [sp, #24]
   23e60:	bl	89a0 <memcmp@plt>
   23e64:	cmp	w0, #0x0
   23e68:	cset	w0, eq  // eq = none
   23e6c:	and	w0, w0, #0xff
   23e70:	ldp	x29, x30, [sp], #32
   23e74:	ret
   23e78:	stp	x29, x30, [sp, #-112]!
   23e7c:	mov	x29, sp
   23e80:	strb	w0, [sp, #31]
   23e84:	str	xzr, [sp, #104]
   23e88:	str	xzr, [sp, #96]
   23e8c:	b	23fc4 <omp_pause_resource_all_@@OMP_5.0+0x8bc>
   23e90:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23e94:	add	x0, x0, #0x650
   23e98:	ldr	x1, [x0]
   23e9c:	ldr	x0, [sp, #104]
   23ea0:	lsl	x0, x0, #3
   23ea4:	add	x0, x1, x0
   23ea8:	ldr	x0, [x0]
   23eac:	str	x0, [sp, #80]
   23eb0:	strb	wzr, [sp, #79]
   23eb4:	ldr	x0, [sp, #80]
   23eb8:	str	x0, [sp, #64]
   23ebc:	ldr	x0, [sp, #80]
   23ec0:	str	x0, [sp, #56]
   23ec4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23ec8:	add	x0, x0, #0x6e0
   23ecc:	ldr	x0, [x0]
   23ed0:	str	x0, [sp, #48]
   23ed4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23ed8:	add	x0, x0, #0x6d8
   23edc:	ldr	x0, [x0]
   23ee0:	lsr	x0, x0, #3
   23ee4:	str	x0, [sp, #40]
   23ee8:	str	xzr, [sp, #88]
   23eec:	b	23f3c <omp_pause_resource_all_@@OMP_5.0+0x834>
   23ef0:	ldr	x0, [sp, #88]
   23ef4:	lsl	x0, x0, #3
   23ef8:	ldr	x1, [sp, #56]
   23efc:	add	x0, x1, x0
   23f00:	ldr	x2, [x0]
   23f04:	ldr	x0, [sp, #88]
   23f08:	lsl	x0, x0, #3
   23f0c:	ldr	x1, [sp, #48]
   23f10:	add	x0, x1, x0
   23f14:	ldr	x1, [x0]
   23f18:	ldr	x3, [sp, #64]
   23f1c:	ldr	x0, [sp, #88]
   23f20:	lsl	x0, x0, #3
   23f24:	add	x0, x3, x0
   23f28:	and	x1, x2, x1
   23f2c:	str	x1, [x0]
   23f30:	ldr	x0, [sp, #88]
   23f34:	add	x0, x0, #0x1
   23f38:	str	x0, [sp, #88]
   23f3c:	ldr	x1, [sp, #88]
   23f40:	ldr	x0, [sp, #40]
   23f44:	cmp	x1, x0
   23f48:	b.cc	23ef0 <omp_pause_resource_all_@@OMP_5.0+0x7e8>  // b.lo, b.ul, b.last
   23f4c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23f50:	add	x0, x0, #0x6d8
   23f54:	ldr	x0, [x0]
   23f58:	ldr	x1, [sp, #80]
   23f5c:	bl	211b8 <omp_test_nest_lock@OMP_1.0+0x4e4>
   23f60:	cmp	x0, #0x0
   23f64:	cset	w0, ne  // ne = any
   23f68:	strb	w0, [sp, #79]
   23f6c:	ldrb	w0, [sp, #79]
   23f70:	cmp	w0, #0x0
   23f74:	b.eq	23fb8 <omp_pause_resource_all_@@OMP_5.0+0x8b0>  // b.none
   23f78:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23f7c:	add	x0, x0, #0x650
   23f80:	ldr	x1, [x0]
   23f84:	ldr	x0, [sp, #104]
   23f88:	lsl	x0, x0, #3
   23f8c:	add	x1, x1, x0
   23f90:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23f94:	add	x0, x0, #0x650
   23f98:	ldr	x2, [x0]
   23f9c:	ldr	x0, [sp, #96]
   23fa0:	add	x3, x0, #0x1
   23fa4:	str	x3, [sp, #96]
   23fa8:	lsl	x0, x0, #3
   23fac:	add	x0, x2, x0
   23fb0:	ldr	x1, [x1]
   23fb4:	str	x1, [x0]
   23fb8:	ldr	x0, [sp, #104]
   23fbc:	add	x0, x0, #0x1
   23fc0:	str	x0, [sp, #104]
   23fc4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   23fc8:	add	x0, x0, #0x678
   23fcc:	ldr	x0, [x0]
   23fd0:	ldr	x1, [sp, #104]
   23fd4:	cmp	x1, x0
   23fd8:	b.cc	23e90 <omp_pause_resource_all_@@OMP_5.0+0x788>  // b.lo, b.ul, b.last
   23fdc:	ldr	x0, [sp, #96]
   23fe0:	cmp	x0, #0x0
   23fe4:	b.ne	24010 <omp_pause_resource_all_@@OMP_5.0+0x908>  // b.any
   23fe8:	ldrb	w0, [sp, #31]
   23fec:	eor	w0, w0, #0x1
   23ff0:	and	w0, w0, #0xff
   23ff4:	cmp	w0, #0x0
   23ff8:	b.eq	24008 <omp_pause_resource_all_@@OMP_5.0+0x900>  // b.none
   23ffc:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24000:	add	x0, x0, #0x648
   24004:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   24008:	mov	w0, #0x0                   	// #0
   2400c:	b	24070 <omp_pause_resource_all_@@OMP_5.0+0x968>
   24010:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24014:	add	x0, x0, #0x678
   24018:	ldr	x0, [x0]
   2401c:	ldr	x1, [sp, #96]
   24020:	cmp	x1, x0
   24024:	b.cs	2406c <omp_pause_resource_all_@@OMP_5.0+0x964>  // b.hs, b.nlast
   24028:	ldrb	w0, [sp, #31]
   2402c:	eor	w0, w0, #0x1
   24030:	and	w0, w0, #0xff
   24034:	cmp	w0, #0x0
   24038:	b.eq	2405c <omp_pause_resource_all_@@OMP_5.0+0x954>  // b.none
   2403c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24040:	add	x0, x0, #0x678
   24044:	ldr	x0, [x0]
   24048:	ldr	x2, [sp, #96]
   2404c:	mov	x1, x0
   24050:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24054:	add	x0, x0, #0x678
   24058:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   2405c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24060:	add	x0, x0, #0x678
   24064:	ldr	x1, [sp, #96]
   24068:	str	x1, [x0]
   2406c:	mov	w0, #0x1                   	// #1
   24070:	ldp	x29, x30, [sp], #112
   24074:	ret
   24078:	stp	x29, x30, [sp, #-192]!
   2407c:	mov	x29, sp
   24080:	str	w0, [sp, #60]
   24084:	str	w1, [sp, #56]
   24088:	str	x2, [sp, #48]
   2408c:	str	x3, [sp, #40]
   24090:	str	x4, [sp, #32]
   24094:	strb	w5, [sp, #31]
   24098:	mov	x0, #0x1b                  	// #27
   2409c:	str	x0, [sp, #152]
   240a0:	str	xzr, [sp, #80]
   240a4:	str	xzr, [sp, #72]
   240a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   240ac:	add	x0, x0, #0x6d8
   240b0:	ldr	x0, [x0]
   240b4:	lsl	x0, x0, #3
   240b8:	str	x0, [sp, #144]
   240bc:	str	xzr, [sp, #184]
   240c0:	b	245f0 <omp_pause_resource_all_@@OMP_5.0+0xee8>
   240c4:	ldr	x0, [sp, #184]
   240c8:	str	x0, [sp, #136]
   240cc:	ldr	x0, [sp, #136]
   240d0:	lsr	x1, x0, #3
   240d4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   240d8:	add	x0, x0, #0x6d8
   240dc:	ldr	x0, [x0]
   240e0:	cmp	x1, x0
   240e4:	b.cs	24120 <omp_pause_resource_all_@@OMP_5.0+0xa18>  // b.hs, b.nlast
   240e8:	ldr	x1, [sp, #40]
   240ec:	ldr	x0, [sp, #136]
   240f0:	lsr	x0, x0, #6
   240f4:	lsl	x0, x0, #3
   240f8:	add	x0, x1, x0
   240fc:	ldr	x1, [x0]
   24100:	ldr	x0, [sp, #136]
   24104:	and	w0, w0, #0x3f
   24108:	lsr	x0, x1, x0
   2410c:	and	x0, x0, #0x1
   24110:	cmp	x0, #0x0
   24114:	b.eq	24120 <omp_pause_resource_all_@@OMP_5.0+0xa18>  // b.none
   24118:	mov	w0, #0x1                   	// #1
   2411c:	b	24124 <omp_pause_resource_all_@@OMP_5.0+0xa1c>
   24120:	mov	w0, #0x0                   	// #0
   24124:	cmp	w0, #0x0
   24128:	b.eq	245e4 <omp_pause_resource_all_@@OMP_5.0+0xedc>  // b.none
   2412c:	ldr	x1, [sp, #32]
   24130:	ldr	x0, [sp, #152]
   24134:	add	x4, x1, x0
   24138:	ldr	w0, [sp, #56]
   2413c:	cmp	w0, #0x3
   24140:	b.ne	24150 <omp_pause_resource_all_@@OMP_5.0+0xa48>  // b.any
   24144:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24148:	add	x0, x0, #0x6e0
   2414c:	b	24158 <omp_pause_resource_all_@@OMP_5.0+0xa50>
   24150:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24154:	add	x0, x0, #0x6e8
   24158:	mov	x3, x0
   2415c:	ldr	x2, [sp, #184]
   24160:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24164:	add	x1, x0, #0x6f0
   24168:	mov	x0, x4
   2416c:	bl	8750 <sprintf@plt>
   24170:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24174:	add	x1, x0, #0x710
   24178:	ldr	x0, [sp, #32]
   2417c:	bl	8840 <fopen@plt>
   24180:	str	x0, [sp, #128]
   24184:	ldr	x0, [sp, #128]
   24188:	cmp	x0, #0x0
   2418c:	b.ne	241f8 <omp_pause_resource_all_@@OMP_5.0+0xaf0>  // b.any
   24190:	ldr	x0, [sp, #184]
   24194:	str	x0, [sp, #88]
   24198:	ldr	x0, [sp, #88]
   2419c:	lsr	x1, x0, #3
   241a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   241a4:	add	x0, x0, #0x6d8
   241a8:	ldr	x0, [x0]
   241ac:	cmp	x1, x0
   241b0:	b.cs	245e0 <omp_pause_resource_all_@@OMP_5.0+0xed8>  // b.hs, b.nlast
   241b4:	ldr	x2, [sp, #40]
   241b8:	ldr	x0, [sp, #88]
   241bc:	lsr	x0, x0, #6
   241c0:	lsl	x1, x0, #3
   241c4:	add	x1, x2, x1
   241c8:	ldr	x2, [x1]
   241cc:	ldr	x1, [sp, #88]
   241d0:	and	w1, w1, #0x3f
   241d4:	mov	x3, #0x1                   	// #1
   241d8:	lsl	x1, x3, x1
   241dc:	mvn	x1, x1
   241e0:	ldr	x3, [sp, #40]
   241e4:	lsl	x0, x0, #3
   241e8:	add	x0, x3, x0
   241ec:	and	x1, x2, x1
   241f0:	str	x1, [x0]
   241f4:	b	245e0 <omp_pause_resource_all_@@OMP_5.0+0xed8>
   241f8:	add	x1, sp, #0x48
   241fc:	add	x0, sp, #0x50
   24200:	ldr	x2, [sp, #128]
   24204:	bl	89f0 <getline@plt>
   24208:	cmp	x0, #0x0
   2420c:	b.le	245d4 <omp_pause_resource_all_@@OMP_5.0+0xecc>
   24210:	ldr	x0, [sp, #80]
   24214:	str	x0, [sp, #64]
   24218:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2421c:	add	x0, x0, #0x650
   24220:	ldr	x1, [x0]
   24224:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24228:	add	x0, x0, #0x678
   2422c:	ldr	x0, [x0]
   24230:	lsl	x0, x0, #3
   24234:	add	x0, x1, x0
   24238:	ldr	x0, [x0]
   2423c:	str	x0, [sp, #176]
   24240:	ldr	w1, [sp, #60]
   24244:	ldr	w0, [sp, #56]
   24248:	cmp	w1, w0
   2424c:	b.ne	244b4 <omp_pause_resource_all_@@OMP_5.0+0xdac>  // b.any
   24250:	ldr	x0, [sp, #176]
   24254:	bl	23958 <omp_pause_resource_all_@@OMP_5.0+0x250>
   24258:	b	244b4 <omp_pause_resource_all_@@OMP_5.0+0xdac>
   2425c:	bl	8be0 <__errno_location@plt>
   24260:	str	wzr, [x0]
   24264:	ldr	x0, [sp, #64]
   24268:	add	x1, sp, #0x40
   2426c:	mov	w2, #0xa                   	// #10
   24270:	bl	86c0 <strtoul@plt>
   24274:	str	x0, [sp, #168]
   24278:	bl	8be0 <__errno_location@plt>
   2427c:	ldr	w0, [x0]
   24280:	cmp	w0, #0x0
   24284:	b.ne	244d8 <omp_pause_resource_all_@@OMP_5.0+0xdd0>  // b.any
   24288:	ldr	x0, [sp, #168]
   2428c:	str	x0, [sp, #160]
   24290:	ldr	x0, [sp, #64]
   24294:	ldrb	w0, [x0]
   24298:	cmp	w0, #0x2d
   2429c:	b.ne	24488 <omp_pause_resource_all_@@OMP_5.0+0xd80>  // b.any
   242a0:	bl	8be0 <__errno_location@plt>
   242a4:	str	wzr, [x0]
   242a8:	ldr	x0, [sp, #64]
   242ac:	add	x0, x0, #0x1
   242b0:	add	x1, sp, #0x40
   242b4:	mov	w2, #0xa                   	// #10
   242b8:	bl	86c0 <strtoul@plt>
   242bc:	str	x0, [sp, #160]
   242c0:	bl	8be0 <__errno_location@plt>
   242c4:	ldr	w0, [x0]
   242c8:	cmp	w0, #0x0
   242cc:	b.ne	244dc <omp_pause_resource_all_@@OMP_5.0+0xdd4>  // b.any
   242d0:	ldr	x1, [sp, #160]
   242d4:	ldr	x0, [sp, #168]
   242d8:	cmp	x1, x0
   242dc:	b.cc	244dc <omp_pause_resource_all_@@OMP_5.0+0xdd4>  // b.lo, b.ul, b.last
   242e0:	b	24488 <omp_pause_resource_all_@@OMP_5.0+0xd80>
   242e4:	ldr	x0, [sp, #168]
   242e8:	str	x0, [sp, #120]
   242ec:	ldr	x0, [sp, #120]
   242f0:	lsr	x1, x0, #3
   242f4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   242f8:	add	x0, x0, #0x6d8
   242fc:	ldr	x0, [x0]
   24300:	cmp	x1, x0
   24304:	b.cs	24340 <omp_pause_resource_all_@@OMP_5.0+0xc38>  // b.hs, b.nlast
   24308:	ldr	x1, [sp, #40]
   2430c:	ldr	x0, [sp, #120]
   24310:	lsr	x0, x0, #6
   24314:	lsl	x0, x0, #3
   24318:	add	x0, x1, x0
   2431c:	ldr	x1, [x0]
   24320:	ldr	x0, [sp, #120]
   24324:	and	w0, w0, #0x3f
   24328:	lsr	x0, x1, x0
   2432c:	and	x0, x0, #0x1
   24330:	cmp	x0, #0x0
   24334:	b.eq	24340 <omp_pause_resource_all_@@OMP_5.0+0xc38>  // b.none
   24338:	mov	w0, #0x1                   	// #1
   2433c:	b	24344 <omp_pause_resource_all_@@OMP_5.0+0xc3c>
   24340:	mov	w0, #0x0                   	// #0
   24344:	cmp	w0, #0x0
   24348:	b.eq	24478 <omp_pause_resource_all_@@OMP_5.0+0xd70>  // b.none
   2434c:	ldr	w0, [sp, #56]
   24350:	cmp	w0, #0x3
   24354:	b.ne	24388 <omp_pause_resource_all_@@OMP_5.0+0xc80>  // b.any
   24358:	ldr	w1, [sp, #60]
   2435c:	ldr	w0, [sp, #56]
   24360:	cmp	w1, w0
   24364:	b.ge	24388 <omp_pause_resource_all_@@OMP_5.0+0xc80>  // b.tcont
   24368:	ldrb	w5, [sp, #31]
   2436c:	ldr	x4, [sp, #32]
   24370:	ldr	x3, [sp, #40]
   24374:	ldr	x2, [sp, #48]
   24378:	mov	w1, #0x2                   	// #2
   2437c:	ldr	w0, [sp, #60]
   24380:	bl	24078 <omp_pause_resource_all_@@OMP_5.0+0x970>
   24384:	b	2447c <omp_pause_resource_all_@@OMP_5.0+0xd74>
   24388:	ldr	w0, [sp, #60]
   2438c:	cmp	w0, #0x1
   24390:	b.ne	243c4 <omp_pause_resource_all_@@OMP_5.0+0xcbc>  // b.any
   24394:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24398:	add	x0, x0, #0x650
   2439c:	ldr	x1, [x0]
   243a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   243a4:	add	x0, x0, #0x678
   243a8:	ldr	x0, [x0]
   243ac:	lsl	x0, x0, #3
   243b0:	add	x0, x1, x0
   243b4:	ldr	x0, [x0]
   243b8:	str	x0, [sp, #176]
   243bc:	ldr	x0, [sp, #176]
   243c0:	bl	23958 <omp_pause_resource_all_@@OMP_5.0+0x250>
   243c4:	mov	w4, #0x1                   	// #1
   243c8:	mov	x3, #0x0                   	// #0
   243cc:	mov	x2, #0x1                   	// #1
   243d0:	ldr	x1, [sp, #168]
   243d4:	ldr	x0, [sp, #176]
   243d8:	bl	2399c <omp_pause_resource_all_@@OMP_5.0+0x294>
   243dc:	and	w0, w0, #0xff
   243e0:	cmp	w0, #0x0
   243e4:	b.eq	2447c <omp_pause_resource_all_@@OMP_5.0+0xd74>  // b.none
   243e8:	ldr	x0, [sp, #168]
   243ec:	str	x0, [sp, #112]
   243f0:	ldr	x0, [sp, #112]
   243f4:	lsr	x1, x0, #3
   243f8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   243fc:	add	x0, x0, #0x6d8
   24400:	ldr	x0, [x0]
   24404:	cmp	x1, x0
   24408:	b.cs	2444c <omp_pause_resource_all_@@OMP_5.0+0xd44>  // b.hs, b.nlast
   2440c:	ldr	x2, [sp, #40]
   24410:	ldr	x0, [sp, #112]
   24414:	lsr	x0, x0, #6
   24418:	lsl	x1, x0, #3
   2441c:	add	x1, x2, x1
   24420:	ldr	x2, [x1]
   24424:	ldr	x1, [sp, #112]
   24428:	and	w1, w1, #0x3f
   2442c:	mov	x3, #0x1                   	// #1
   24430:	lsl	x1, x3, x1
   24434:	mvn	x1, x1
   24438:	ldr	x3, [sp, #40]
   2443c:	lsl	x0, x0, #3
   24440:	add	x0, x3, x0
   24444:	and	x1, x2, x1
   24448:	str	x1, [x0]
   2444c:	ldr	w0, [sp, #60]
   24450:	cmp	w0, #0x1
   24454:	b.ne	2447c <omp_pause_resource_all_@@OMP_5.0+0xd74>  // b.any
   24458:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2445c:	add	x0, x0, #0x678
   24460:	ldr	x0, [x0]
   24464:	add	x1, x0, #0x1
   24468:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2446c:	add	x0, x0, #0x678
   24470:	str	x1, [x0]
   24474:	b	2447c <omp_pause_resource_all_@@OMP_5.0+0xd74>
   24478:	nop
   2447c:	ldr	x0, [sp, #168]
   24480:	add	x0, x0, #0x1
   24484:	str	x0, [sp, #168]
   24488:	ldr	x1, [sp, #168]
   2448c:	ldr	x0, [sp, #160]
   24490:	cmp	x1, x0
   24494:	b.ls	242e4 <omp_pause_resource_all_@@OMP_5.0+0xbdc>  // b.plast
   24498:	ldr	x0, [sp, #64]
   2449c:	ldrb	w0, [x0]
   244a0:	cmp	w0, #0x2c
   244a4:	b.ne	244b4 <omp_pause_resource_all_@@OMP_5.0+0xdac>  // b.any
   244a8:	ldr	x0, [sp, #64]
   244ac:	add	x0, x0, #0x1
   244b0:	str	x0, [sp, #64]
   244b4:	ldr	x0, [sp, #64]
   244b8:	ldrb	w0, [x0]
   244bc:	cmp	w0, #0x0
   244c0:	b.eq	244dc <omp_pause_resource_all_@@OMP_5.0+0xdd4>  // b.none
   244c4:	ldr	x0, [sp, #64]
   244c8:	ldrb	w0, [x0]
   244cc:	cmp	w0, #0xa
   244d0:	b.ne	2425c <omp_pause_resource_all_@@OMP_5.0+0xb54>  // b.any
   244d4:	b	244dc <omp_pause_resource_all_@@OMP_5.0+0xdd4>
   244d8:	nop
   244dc:	ldr	w1, [sp, #60]
   244e0:	ldr	w0, [sp, #56]
   244e4:	cmp	w1, w0
   244e8:	b.ne	24570 <omp_pause_resource_all_@@OMP_5.0+0xe68>  // b.any
   244ec:	ldr	x0, [sp, #184]
   244f0:	str	x0, [sp, #104]
   244f4:	ldr	x0, [sp, #104]
   244f8:	lsr	x1, x0, #3
   244fc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24500:	add	x0, x0, #0x6d8
   24504:	ldr	x0, [x0]
   24508:	cmp	x1, x0
   2450c:	b.cs	24548 <omp_pause_resource_all_@@OMP_5.0+0xe40>  // b.hs, b.nlast
   24510:	ldr	x1, [sp, #40]
   24514:	ldr	x0, [sp, #104]
   24518:	lsr	x0, x0, #6
   2451c:	lsl	x0, x0, #3
   24520:	add	x0, x1, x0
   24524:	ldr	x1, [x0]
   24528:	ldr	x0, [sp, #104]
   2452c:	and	w0, w0, #0x3f
   24530:	lsr	x0, x1, x0
   24534:	and	x0, x0, #0x1
   24538:	cmp	x0, #0x0
   2453c:	b.eq	24548 <omp_pause_resource_all_@@OMP_5.0+0xe40>  // b.none
   24540:	mov	w0, #0x1                   	// #1
   24544:	b	2454c <omp_pause_resource_all_@@OMP_5.0+0xe44>
   24548:	mov	w0, #0x0                   	// #0
   2454c:	cmp	w0, #0x0
   24550:	b.ne	24570 <omp_pause_resource_all_@@OMP_5.0+0xe68>  // b.any
   24554:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24558:	add	x0, x0, #0x678
   2455c:	ldr	x0, [x0]
   24560:	add	x1, x0, #0x1
   24564:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24568:	add	x0, x0, #0x678
   2456c:	str	x1, [x0]
   24570:	ldr	x0, [sp, #184]
   24574:	str	x0, [sp, #96]
   24578:	ldr	x0, [sp, #96]
   2457c:	lsr	x1, x0, #3
   24580:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24584:	add	x0, x0, #0x6d8
   24588:	ldr	x0, [x0]
   2458c:	cmp	x1, x0
   24590:	b.cs	245d4 <omp_pause_resource_all_@@OMP_5.0+0xecc>  // b.hs, b.nlast
   24594:	ldr	x2, [sp, #40]
   24598:	ldr	x0, [sp, #96]
   2459c:	lsr	x0, x0, #6
   245a0:	lsl	x1, x0, #3
   245a4:	add	x1, x2, x1
   245a8:	ldr	x2, [x1]
   245ac:	ldr	x1, [sp, #96]
   245b0:	and	w1, w1, #0x3f
   245b4:	mov	x3, #0x1                   	// #1
   245b8:	lsl	x1, x3, x1
   245bc:	mvn	x1, x1
   245c0:	ldr	x3, [sp, #40]
   245c4:	lsl	x0, x0, #3
   245c8:	add	x0, x3, x0
   245cc:	and	x1, x2, x1
   245d0:	str	x1, [x0]
   245d4:	ldr	x0, [sp, #128]
   245d8:	bl	8820 <fclose@plt>
   245dc:	b	245e4 <omp_pause_resource_all_@@OMP_5.0+0xedc>
   245e0:	nop
   245e4:	ldr	x0, [sp, #184]
   245e8:	add	x0, x0, #0x1
   245ec:	str	x0, [sp, #184]
   245f0:	ldr	x1, [sp, #184]
   245f4:	ldr	x0, [sp, #144]
   245f8:	cmp	x1, x0
   245fc:	b.cs	24618 <omp_pause_resource_all_@@OMP_5.0+0xf10>  // b.hs, b.nlast
   24600:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24604:	add	x0, x0, #0x678
   24608:	ldr	x0, [x0]
   2460c:	ldr	x1, [sp, #48]
   24610:	cmp	x1, x0
   24614:	b.hi	240c4 <omp_pause_resource_all_@@OMP_5.0+0x9bc>  // b.pmore
   24618:	ldr	x0, [sp, #80]
   2461c:	bl	8a20 <free@plt>
   24620:	nop
   24624:	ldp	x29, x30, [sp], #192
   24628:	ret
   2462c:	stp	x29, x30, [sp, #-144]!
   24630:	mov	x29, sp
   24634:	str	w0, [x29, #28]
   24638:	str	x1, [x29, #16]
   2463c:	strb	w2, [x29, #27]
   24640:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24644:	add	x0, x0, #0x6e0
   24648:	ldr	x0, [x0]
   2464c:	cmp	x0, #0x0
   24650:	b.eq	24694 <omp_pause_resource_all_@@OMP_5.0+0xf8c>  // b.none
   24654:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24658:	add	x0, x0, #0x6d8
   2465c:	ldr	x2, [x0]
   24660:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24664:	add	x0, x0, #0x6e0
   24668:	ldr	x0, [x0]
   2466c:	mov	x1, x0
   24670:	mov	x0, x2
   24674:	bl	211b8 <omp_test_nest_lock@OMP_1.0+0x4e4>
   24678:	str	x0, [x29, #136]
   2467c:	ldr	x1, [x29, #16]
   24680:	ldr	x0, [x29, #136]
   24684:	cmp	x1, x0
   24688:	b.ls	24694 <omp_pause_resource_all_@@OMP_5.0+0xf8c>  // b.plast
   2468c:	ldr	x0, [x29, #136]
   24690:	str	x0, [x29, #16]
   24694:	ldrb	w1, [x29, #27]
   24698:	ldr	x0, [x29, #16]
   2469c:	bl	23844 <omp_pause_resource_all_@@OMP_5.0+0x13c>
   246a0:	mov	x1, x0
   246a4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   246a8:	add	x0, x0, #0x650
   246ac:	str	x1, [x0]
   246b0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   246b4:	add	x0, x0, #0x678
   246b8:	str	xzr, [x0]
   246bc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   246c0:	add	x0, x0, #0x650
   246c4:	ldr	x0, [x0]
   246c8:	cmp	x0, #0x0
   246cc:	b.ne	246d8 <omp_pause_resource_all_@@OMP_5.0+0xfd0>  // b.any
   246d0:	mov	w0, #0x0                   	// #0
   246d4:	b	247d0 <omp_pause_resource_all_@@OMP_5.0+0x10c8>
   246d8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   246dc:	add	x0, x0, #0x6d8
   246e0:	ldr	x0, [x0]
   246e4:	add	x0, x0, #0xf
   246e8:	lsr	x0, x0, #4
   246ec:	lsl	x0, x0, #4
   246f0:	sub	sp, sp, x0
   246f4:	mov	x0, sp
   246f8:	add	x0, x0, #0xf
   246fc:	lsr	x0, x0, #4
   24700:	lsl	x0, x0, #4
   24704:	str	x0, [x29, #128]
   24708:	add	x2, x29, #0x28
   2470c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24710:	add	x1, x0, #0x718
   24714:	mov	x0, x2
   24718:	ldp	x2, x3, [x1]
   2471c:	stp	x2, x3, [x0]
   24720:	ldr	x2, [x1, #16]
   24724:	str	x2, [x0, #16]
   24728:	ldr	w1, [x1, #24]
   2472c:	str	w1, [x0, #24]
   24730:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24734:	add	x0, x0, #0x6e0
   24738:	ldr	x1, [x0]
   2473c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24740:	add	x0, x0, #0x6d8
   24744:	ldr	x0, [x0]
   24748:	mov	x2, x0
   2474c:	ldr	x0, [x29, #128]
   24750:	bl	86a0 <memcpy@plt>
   24754:	add	x0, x29, #0x28
   24758:	ldrb	w5, [x29, #27]
   2475c:	mov	x4, x0
   24760:	ldr	x3, [x29, #128]
   24764:	ldr	x2, [x29, #16]
   24768:	mov	w1, #0x3                   	// #3
   2476c:	ldr	w0, [x29, #28]
   24770:	bl	24078 <omp_pause_resource_all_@@OMP_5.0+0x970>
   24774:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24778:	add	x0, x0, #0x678
   2477c:	ldr	x0, [x0]
   24780:	cmp	x0, #0x0
   24784:	b.ne	247cc <omp_pause_resource_all_@@OMP_5.0+0x10c4>  // b.any
   24788:	ldrb	w0, [x29, #27]
   2478c:	eor	w0, w0, #0x1
   24790:	and	w0, w0, #0xff
   24794:	cmp	w0, #0x0
   24798:	b.eq	247a8 <omp_pause_resource_all_@@OMP_5.0+0x10a0>  // b.none
   2479c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   247a0:	add	x0, x0, #0x738
   247a4:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   247a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   247ac:	add	x0, x0, #0x650
   247b0:	ldr	x0, [x0]
   247b4:	bl	8a20 <free@plt>
   247b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   247bc:	add	x0, x0, #0x650
   247c0:	str	xzr, [x0]
   247c4:	mov	w0, #0x0                   	// #0
   247c8:	b	247d0 <omp_pause_resource_all_@@OMP_5.0+0x10c8>
   247cc:	mov	w0, #0x1                   	// #1
   247d0:	mov	sp, x29
   247d4:	ldp	x29, x30, [sp], #144
   247d8:	ret
   247dc:	stp	x29, x30, [sp, #-80]!
   247e0:	mov	x29, sp
   247e4:	str	x0, [sp, #24]
   247e8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   247ec:	add	x0, x0, #0x6d8
   247f0:	ldr	x0, [x0]
   247f4:	lsl	x0, x0, #3
   247f8:	str	x0, [sp, #48]
   247fc:	ldr	x0, [sp, #24]
   24800:	str	x0, [sp, #40]
   24804:	strb	wzr, [sp, #63]
   24808:	str	xzr, [sp, #72]
   2480c:	str	xzr, [sp, #64]
   24810:	b	24920 <omp_pause_resource_all_@@OMP_5.0+0x1218>
   24814:	ldr	x0, [sp, #72]
   24818:	str	x0, [sp, #32]
   2481c:	ldr	x0, [sp, #32]
   24820:	lsr	x1, x0, #3
   24824:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24828:	add	x0, x0, #0x6d8
   2482c:	ldr	x0, [x0]
   24830:	cmp	x1, x0
   24834:	b.cs	24870 <omp_pause_resource_all_@@OMP_5.0+0x1168>  // b.hs, b.nlast
   24838:	ldr	x1, [sp, #40]
   2483c:	ldr	x0, [sp, #32]
   24840:	lsr	x0, x0, #6
   24844:	lsl	x0, x0, #3
   24848:	add	x0, x1, x0
   2484c:	ldr	x1, [x0]
   24850:	ldr	x0, [sp, #32]
   24854:	and	w0, w0, #0x3f
   24858:	lsr	x0, x1, x0
   2485c:	and	x0, x0, #0x1
   24860:	cmp	x0, #0x0
   24864:	b.eq	24870 <omp_pause_resource_all_@@OMP_5.0+0x1168>  // b.none
   24868:	mov	w0, #0x1                   	// #1
   2486c:	b	24874 <omp_pause_resource_all_@@OMP_5.0+0x116c>
   24870:	mov	w0, #0x0                   	// #0
   24874:	cmp	w0, #0x0
   24878:	b.eq	248e4 <omp_pause_resource_all_@@OMP_5.0+0x11dc>  // b.none
   2487c:	ldr	x0, [sp, #64]
   24880:	cmp	x0, #0x0
   24884:	b.ne	248d4 <omp_pause_resource_all_@@OMP_5.0+0x11cc>  // b.any
   24888:	ldrb	w0, [sp, #63]
   2488c:	cmp	w0, #0x0
   24890:	b.eq	248ac <omp_pause_resource_all_@@OMP_5.0+0x11a4>  // b.none
   24894:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   24898:	ldr	x0, [x0, #4040]
   2489c:	ldr	x0, [x0]
   248a0:	mov	x1, x0
   248a4:	mov	w0, #0x2c                  	// #44
   248a8:	bl	8790 <fputc@plt>
   248ac:	mov	w0, #0x1                   	// #1
   248b0:	strb	w0, [sp, #63]
   248b4:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   248b8:	ldr	x0, [x0, #4040]
   248bc:	ldr	x3, [x0]
   248c0:	ldr	x2, [sp, #72]
   248c4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   248c8:	add	x1, x0, #0x760
   248cc:	mov	x0, x3
   248d0:	bl	8c30 <fprintf@plt>
   248d4:	ldr	x0, [sp, #64]
   248d8:	add	x0, x0, #0x1
   248dc:	str	x0, [sp, #64]
   248e0:	b	24914 <omp_pause_resource_all_@@OMP_5.0+0x120c>
   248e4:	ldr	x0, [sp, #64]
   248e8:	cmp	x0, #0x1
   248ec:	b.ls	24910 <omp_pause_resource_all_@@OMP_5.0+0x1208>  // b.plast
   248f0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   248f4:	ldr	x0, [x0, #4040]
   248f8:	ldr	x3, [x0]
   248fc:	ldr	x2, [sp, #64]
   24900:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24904:	add	x1, x0, #0x768
   24908:	mov	x0, x3
   2490c:	bl	8c30 <fprintf@plt>
   24910:	str	xzr, [sp, #64]
   24914:	ldr	x0, [sp, #72]
   24918:	add	x0, x0, #0x1
   2491c:	str	x0, [sp, #72]
   24920:	ldr	x1, [sp, #72]
   24924:	ldr	x0, [sp, #48]
   24928:	cmp	x1, x0
   2492c:	b.cc	24814 <omp_pause_resource_all_@@OMP_5.0+0x110c>  // b.lo, b.ul, b.last
   24930:	ldr	x0, [sp, #64]
   24934:	cmp	x0, #0x1
   24938:	b.ls	2495c <omp_pause_resource_all_@@OMP_5.0+0x1254>  // b.plast
   2493c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   24940:	ldr	x0, [x0, #4040]
   24944:	ldr	x3, [x0]
   24948:	ldr	x2, [sp, #64]
   2494c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24950:	add	x1, x0, #0x768
   24954:	mov	x0, x3
   24958:	bl	8c30 <fprintf@plt>
   2495c:	nop
   24960:	ldp	x29, x30, [sp], #80
   24964:	ret

0000000000024968 <omp_get_place_num_procs@@OMP_4.5>:
   24968:	stp	x29, x30, [sp, #-48]!
   2496c:	mov	x29, sp
   24970:	str	w0, [sp, #28]
   24974:	ldr	w0, [sp, #28]
   24978:	cmp	w0, #0x0
   2497c:	b.lt	24998 <omp_get_place_num_procs@@OMP_4.5+0x30>  // b.tstop
   24980:	ldrsw	x1, [sp, #28]
   24984:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24988:	add	x0, x0, #0x678
   2498c:	ldr	x0, [x0]
   24990:	cmp	x1, x0
   24994:	b.cc	249a0 <omp_get_place_num_procs@@OMP_4.5+0x38>  // b.lo, b.ul, b.last
   24998:	mov	w0, #0x0                   	// #0
   2499c:	b	249d4 <omp_get_place_num_procs@@OMP_4.5+0x6c>
   249a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   249a4:	add	x0, x0, #0x650
   249a8:	ldr	x1, [x0]
   249ac:	ldrsw	x0, [sp, #28]
   249b0:	lsl	x0, x0, #3
   249b4:	add	x0, x1, x0
   249b8:	ldr	x0, [x0]
   249bc:	str	x0, [sp, #40]
   249c0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   249c4:	add	x0, x0, #0x6d8
   249c8:	ldr	x0, [x0]
   249cc:	ldr	x1, [sp, #40]
   249d0:	bl	211b8 <omp_test_nest_lock@OMP_1.0+0x4e4>
   249d4:	ldp	x29, x30, [sp], #48
   249d8:	ret

00000000000249dc <omp_get_place_proc_ids@@OMP_4.5>:
   249dc:	sub	sp, sp, #0x30
   249e0:	str	w0, [sp, #12]
   249e4:	str	x1, [sp]
   249e8:	ldr	w0, [sp, #12]
   249ec:	cmp	w0, #0x0
   249f0:	b.lt	24ae4 <omp_get_place_proc_ids@@OMP_4.5+0x108>  // b.tstop
   249f4:	ldrsw	x1, [sp, #12]
   249f8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   249fc:	add	x0, x0, #0x678
   24a00:	ldr	x0, [x0]
   24a04:	cmp	x1, x0
   24a08:	b.cs	24ae4 <omp_get_place_proc_ids@@OMP_4.5+0x108>  // b.hs, b.nlast
   24a0c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24a10:	add	x0, x0, #0x650
   24a14:	ldr	x1, [x0]
   24a18:	ldrsw	x0, [sp, #12]
   24a1c:	lsl	x0, x0, #3
   24a20:	add	x0, x1, x0
   24a24:	ldr	x0, [x0]
   24a28:	str	x0, [sp, #32]
   24a2c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24a30:	add	x0, x0, #0x6d8
   24a34:	ldr	x0, [x0]
   24a38:	lsl	x0, x0, #3
   24a3c:	str	x0, [sp, #24]
   24a40:	str	xzr, [sp, #40]
   24a44:	b	24ad0 <omp_get_place_proc_ids@@OMP_4.5+0xf4>
   24a48:	ldr	x0, [sp, #40]
   24a4c:	str	x0, [sp, #16]
   24a50:	ldr	x0, [sp, #16]
   24a54:	lsr	x1, x0, #3
   24a58:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24a5c:	add	x0, x0, #0x6d8
   24a60:	ldr	x0, [x0]
   24a64:	cmp	x1, x0
   24a68:	b.cs	24aa4 <omp_get_place_proc_ids@@OMP_4.5+0xc8>  // b.hs, b.nlast
   24a6c:	ldr	x1, [sp, #32]
   24a70:	ldr	x0, [sp, #16]
   24a74:	lsr	x0, x0, #6
   24a78:	lsl	x0, x0, #3
   24a7c:	add	x0, x1, x0
   24a80:	ldr	x1, [x0]
   24a84:	ldr	x0, [sp, #16]
   24a88:	and	w0, w0, #0x3f
   24a8c:	lsr	x0, x1, x0
   24a90:	and	x0, x0, #0x1
   24a94:	cmp	x0, #0x0
   24a98:	b.eq	24aa4 <omp_get_place_proc_ids@@OMP_4.5+0xc8>  // b.none
   24a9c:	mov	w0, #0x1                   	// #1
   24aa0:	b	24aa8 <omp_get_place_proc_ids@@OMP_4.5+0xcc>
   24aa4:	mov	w0, #0x0                   	// #0
   24aa8:	cmp	w0, #0x0
   24aac:	b.eq	24ac4 <omp_get_place_proc_ids@@OMP_4.5+0xe8>  // b.none
   24ab0:	ldr	x0, [sp]
   24ab4:	add	x1, x0, #0x4
   24ab8:	str	x1, [sp]
   24abc:	ldr	x1, [sp, #40]
   24ac0:	str	w1, [x0]
   24ac4:	ldr	x0, [sp, #40]
   24ac8:	add	x0, x0, #0x1
   24acc:	str	x0, [sp, #40]
   24ad0:	ldr	x1, [sp, #40]
   24ad4:	ldr	x0, [sp, #24]
   24ad8:	cmp	x1, x0
   24adc:	b.cc	24a48 <omp_get_place_proc_ids@@OMP_4.5+0x6c>  // b.lo, b.ul, b.last
   24ae0:	b	24ae8 <omp_get_place_proc_ids@@OMP_4.5+0x10c>
   24ae4:	nop
   24ae8:	add	sp, sp, #0x30
   24aec:	ret
   24af0:	sub	sp, sp, #0x30
   24af4:	str	w0, [sp, #12]
   24af8:	str	x1, [sp]
   24afc:	ldr	w0, [sp, #12]
   24b00:	cmp	w0, #0x0
   24b04:	b.lt	24bf8 <omp_get_place_proc_ids@@OMP_4.5+0x21c>  // b.tstop
   24b08:	ldrsw	x1, [sp, #12]
   24b0c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24b10:	add	x0, x0, #0x678
   24b14:	ldr	x0, [x0]
   24b18:	cmp	x1, x0
   24b1c:	b.cs	24bf8 <omp_get_place_proc_ids@@OMP_4.5+0x21c>  // b.hs, b.nlast
   24b20:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24b24:	add	x0, x0, #0x650
   24b28:	ldr	x1, [x0]
   24b2c:	ldrsw	x0, [sp, #12]
   24b30:	lsl	x0, x0, #3
   24b34:	add	x0, x1, x0
   24b38:	ldr	x0, [x0]
   24b3c:	str	x0, [sp, #32]
   24b40:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24b44:	add	x0, x0, #0x6d8
   24b48:	ldr	x0, [x0]
   24b4c:	lsl	x0, x0, #3
   24b50:	str	x0, [sp, #24]
   24b54:	str	xzr, [sp, #40]
   24b58:	b	24be4 <omp_get_place_proc_ids@@OMP_4.5+0x208>
   24b5c:	ldr	x0, [sp, #40]
   24b60:	str	x0, [sp, #16]
   24b64:	ldr	x0, [sp, #16]
   24b68:	lsr	x1, x0, #3
   24b6c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24b70:	add	x0, x0, #0x6d8
   24b74:	ldr	x0, [x0]
   24b78:	cmp	x1, x0
   24b7c:	b.cs	24bb8 <omp_get_place_proc_ids@@OMP_4.5+0x1dc>  // b.hs, b.nlast
   24b80:	ldr	x1, [sp, #32]
   24b84:	ldr	x0, [sp, #16]
   24b88:	lsr	x0, x0, #6
   24b8c:	lsl	x0, x0, #3
   24b90:	add	x0, x1, x0
   24b94:	ldr	x1, [x0]
   24b98:	ldr	x0, [sp, #16]
   24b9c:	and	w0, w0, #0x3f
   24ba0:	lsr	x0, x1, x0
   24ba4:	and	x0, x0, #0x1
   24ba8:	cmp	x0, #0x0
   24bac:	b.eq	24bb8 <omp_get_place_proc_ids@@OMP_4.5+0x1dc>  // b.none
   24bb0:	mov	w0, #0x1                   	// #1
   24bb4:	b	24bbc <omp_get_place_proc_ids@@OMP_4.5+0x1e0>
   24bb8:	mov	w0, #0x0                   	// #0
   24bbc:	cmp	w0, #0x0
   24bc0:	b.eq	24bd8 <omp_get_place_proc_ids@@OMP_4.5+0x1fc>  // b.none
   24bc4:	ldr	x0, [sp]
   24bc8:	add	x1, x0, #0x8
   24bcc:	str	x1, [sp]
   24bd0:	ldr	x1, [sp, #40]
   24bd4:	str	x1, [x0]
   24bd8:	ldr	x0, [sp, #40]
   24bdc:	add	x0, x0, #0x1
   24be0:	str	x0, [sp, #40]
   24be4:	ldr	x1, [sp, #40]
   24be8:	ldr	x0, [sp, #24]
   24bec:	cmp	x1, x0
   24bf0:	b.cc	24b5c <omp_get_place_proc_ids@@OMP_4.5+0x180>  // b.lo, b.ul, b.last
   24bf4:	b	24bfc <omp_get_place_proc_ids@@OMP_4.5+0x220>
   24bf8:	nop
   24bfc:	add	sp, sp, #0x30
   24c00:	ret
   24c04:	stp	x29, x30, [sp, #-144]!
   24c08:	mov	x29, sp
   24c0c:	str	x0, [sp, #40]
   24c10:	str	x1, [sp, #32]
   24c14:	str	x2, [sp, #24]
   24c18:	str	w3, [sp, #20]
   24c1c:	ldr	w0, [sp, #20]
   24c20:	cmp	w0, #0x0
   24c24:	b.lt	24c64 <omp_get_place_proc_ids@@OMP_4.5+0x288>  // b.tstop
   24c28:	ldrsw	x1, [sp, #20]
   24c2c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24c30:	add	x0, x0, #0x678
   24c34:	ldr	x0, [x0]
   24c38:	cmp	x1, x0
   24c3c:	b.cs	24c64 <omp_get_place_proc_ids@@OMP_4.5+0x288>  // b.hs, b.nlast
   24c40:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24c44:	add	x0, x0, #0x650
   24c48:	ldr	x1, [x0]
   24c4c:	ldrsw	x0, [sp, #20]
   24c50:	lsl	x0, x0, #3
   24c54:	add	x0, x1, x0
   24c58:	ldr	x0, [x0]
   24c5c:	str	x0, [sp, #136]
   24c60:	b	24d04 <omp_get_place_proc_ids@@OMP_4.5+0x328>
   24c64:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24c68:	add	x0, x0, #0x6e0
   24c6c:	ldr	x0, [x0]
   24c70:	cmp	x0, #0x0
   24c74:	b.eq	24c8c <omp_get_place_proc_ids@@OMP_4.5+0x2b0>  // b.none
   24c78:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24c7c:	add	x0, x0, #0x6e0
   24c80:	ldr	x0, [x0]
   24c84:	str	x0, [sp, #136]
   24c88:	b	24d04 <omp_get_place_proc_ids@@OMP_4.5+0x328>
   24c8c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24c90:	add	x0, x0, #0x308
   24c94:	ldr	x0, [x0]
   24c98:	cmp	x0, #0x1
   24c9c:	b.ls	24ccc <omp_get_place_proc_ids@@OMP_4.5+0x2f0>  // b.plast
   24ca0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24ca4:	add	x0, x0, #0x308
   24ca8:	ldr	x0, [x0]
   24cac:	sub	x0, x0, #0x1
   24cb0:	add	x3, sp, #0x38
   24cb4:	mov	x2, x0
   24cb8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24cbc:	add	x1, x0, #0x770
   24cc0:	mov	x0, x3
   24cc4:	bl	8750 <sprintf@plt>
   24cc8:	b	24cd8 <omp_get_place_proc_ids@@OMP_4.5+0x2fc>
   24ccc:	add	x0, sp, #0x38
   24cd0:	mov	w1, #0x30                  	// #48
   24cd4:	strh	w1, [x0]
   24cd8:	add	x0, sp, #0x38
   24cdc:	bl	86d0 <strlen@plt>
   24ce0:	mov	x1, x0
   24ce4:	add	x0, sp, #0x38
   24ce8:	mov	x4, x1
   24cec:	mov	x3, x0
   24cf0:	ldr	x2, [sp, #24]
   24cf4:	ldr	x1, [sp, #32]
   24cf8:	ldr	x0, [sp, #40]
   24cfc:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   24d00:	b	24ea0 <omp_get_place_proc_ids@@OMP_4.5+0x4c4>
   24d04:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24d08:	add	x0, x0, #0x6d8
   24d0c:	ldr	x0, [x0]
   24d10:	lsl	x0, x0, #3
   24d14:	str	x0, [sp, #96]
   24d18:	strb	wzr, [sp, #119]
   24d1c:	ldr	x0, [sp, #96]
   24d20:	str	x0, [sp, #120]
   24d24:	str	xzr, [sp, #128]
   24d28:	b	24e90 <omp_get_place_proc_ids@@OMP_4.5+0x4b4>
   24d2c:	ldr	x1, [sp, #128]
   24d30:	ldr	x0, [sp, #96]
   24d34:	cmp	x1, x0
   24d38:	b.ne	24d44 <omp_get_place_proc_ids@@OMP_4.5+0x368>  // b.any
   24d3c:	strb	wzr, [sp, #118]
   24d40:	b	24db0 <omp_get_place_proc_ids@@OMP_4.5+0x3d4>
   24d44:	ldr	x0, [sp, #128]
   24d48:	str	x0, [sp, #88]
   24d4c:	ldr	x0, [sp, #88]
   24d50:	lsr	x1, x0, #3
   24d54:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   24d58:	add	x0, x0, #0x6d8
   24d5c:	ldr	x0, [x0]
   24d60:	cmp	x1, x0
   24d64:	b.cs	24da0 <omp_get_place_proc_ids@@OMP_4.5+0x3c4>  // b.hs, b.nlast
   24d68:	ldr	x1, [sp, #136]
   24d6c:	ldr	x0, [sp, #88]
   24d70:	lsr	x0, x0, #6
   24d74:	lsl	x0, x0, #3
   24d78:	add	x0, x1, x0
   24d7c:	ldr	x1, [x0]
   24d80:	ldr	x0, [sp, #88]
   24d84:	and	w0, w0, #0x3f
   24d88:	lsr	x0, x1, x0
   24d8c:	and	x0, x0, #0x1
   24d90:	cmp	x0, #0x0
   24d94:	b.eq	24da0 <omp_get_place_proc_ids@@OMP_4.5+0x3c4>  // b.none
   24d98:	mov	w0, #0x1                   	// #1
   24d9c:	b	24da4 <omp_get_place_proc_ids@@OMP_4.5+0x3c8>
   24da0:	mov	w0, #0x0                   	// #0
   24da4:	cmp	w0, #0x0
   24da8:	cset	w0, ne  // ne = any
   24dac:	strb	w0, [sp, #118]
   24db0:	ldrb	w1, [sp, #118]
   24db4:	ldrb	w0, [sp, #119]
   24db8:	cmp	w1, w0
   24dbc:	b.eq	24e84 <omp_get_place_proc_ids@@OMP_4.5+0x4a8>  // b.none
   24dc0:	ldrb	w0, [sp, #118]
   24dc4:	strb	w0, [sp, #119]
   24dc8:	ldrb	w0, [sp, #118]
   24dcc:	cmp	w0, #0x0
   24dd0:	b.eq	24e20 <omp_get_place_proc_ids@@OMP_4.5+0x444>  // b.none
   24dd4:	add	x0, sp, #0x38
   24dd8:	str	x0, [sp, #104]
   24ddc:	ldr	x1, [sp, #120]
   24de0:	ldr	x0, [sp, #96]
   24de4:	cmp	x1, x0
   24de8:	b.eq	24e00 <omp_get_place_proc_ids@@OMP_4.5+0x424>  // b.none
   24dec:	ldr	x0, [sp, #104]
   24df0:	add	x1, x0, #0x1
   24df4:	str	x1, [sp, #104]
   24df8:	mov	w1, #0x2c                  	// #44
   24dfc:	strb	w1, [x0]
   24e00:	ldr	x2, [sp, #128]
   24e04:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24e08:	add	x1, x0, #0x760
   24e0c:	ldr	x0, [sp, #104]
   24e10:	bl	8750 <sprintf@plt>
   24e14:	ldr	x0, [sp, #128]
   24e18:	str	x0, [sp, #120]
   24e1c:	b	24e54 <omp_get_place_proc_ids@@OMP_4.5+0x478>
   24e20:	ldr	x0, [sp, #120]
   24e24:	add	x0, x0, #0x1
   24e28:	ldr	x1, [sp, #128]
   24e2c:	cmp	x1, x0
   24e30:	b.eq	24e80 <omp_get_place_proc_ids@@OMP_4.5+0x4a4>  // b.none
   24e34:	ldr	x0, [sp, #128]
   24e38:	sub	x0, x0, #0x1
   24e3c:	add	x3, sp, #0x38
   24e40:	mov	x2, x0
   24e44:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   24e48:	add	x1, x0, #0x778
   24e4c:	mov	x0, x3
   24e50:	bl	8750 <sprintf@plt>
   24e54:	add	x0, sp, #0x38
   24e58:	bl	86d0 <strlen@plt>
   24e5c:	mov	x1, x0
   24e60:	add	x0, sp, #0x38
   24e64:	mov	x4, x1
   24e68:	mov	x3, x0
   24e6c:	ldr	x2, [sp, #24]
   24e70:	ldr	x1, [sp, #32]
   24e74:	ldr	x0, [sp, #40]
   24e78:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   24e7c:	b	24e84 <omp_get_place_proc_ids@@OMP_4.5+0x4a8>
   24e80:	nop
   24e84:	ldr	x0, [sp, #128]
   24e88:	add	x0, x0, #0x1
   24e8c:	str	x0, [sp, #128]
   24e90:	ldr	x1, [sp, #128]
   24e94:	ldr	x0, [sp, #96]
   24e98:	cmp	x1, x0
   24e9c:	b.ls	24d2c <omp_get_place_proc_ids@@OMP_4.5+0x350>  // b.plast
   24ea0:	ldp	x29, x30, [sp], #144
   24ea4:	ret
   24ea8:	sub	sp, sp, #0x10
   24eac:	str	x0, [sp, #8]
   24eb0:	ldr	x0, [sp, #8]
   24eb4:	str	wzr, [x0]
   24eb8:	nop
   24ebc:	add	sp, sp, #0x10
   24ec0:	ret
   24ec4:	stp	x29, x30, [sp, #-48]!
   24ec8:	mov	x29, sp
   24ecc:	str	x0, [sp, #24]
   24ed0:	str	wzr, [sp, #44]
   24ed4:	ldr	x1, [sp, #24]
   24ed8:	add	x0, sp, #0x2c
   24edc:	ldr	w3, [x0]
   24ee0:	mov	w4, #0x1                   	// #1
   24ee4:	ldaxr	w2, [x1]
   24ee8:	cmp	w2, w3
   24eec:	b.ne	24ef8 <omp_get_place_proc_ids@@OMP_4.5+0x51c>  // b.any
   24ef0:	stxr	w5, w4, [x1]
   24ef4:	cbnz	w5, 24ee4 <omp_get_place_proc_ids@@OMP_4.5+0x508>
   24ef8:	cset	w1, eq  // eq = none
   24efc:	cmp	w1, #0x0
   24f00:	b.ne	24f08 <omp_get_place_proc_ids@@OMP_4.5+0x52c>  // b.any
   24f04:	str	w2, [x0]
   24f08:	mov	w0, w1
   24f0c:	eor	w0, w0, #0x1
   24f10:	and	w0, w0, #0xff
   24f14:	cmp	w0, #0x0
   24f18:	b.eq	24f2c <omp_get_place_proc_ids@@OMP_4.5+0x550>  // b.none
   24f1c:	ldr	w0, [sp, #44]
   24f20:	mov	w1, w0
   24f24:	ldr	x0, [sp, #24]
   24f28:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
   24f2c:	nop
   24f30:	ldp	x29, x30, [sp], #48
   24f34:	ret
   24f38:	stp	x29, x30, [sp, #-48]!
   24f3c:	mov	x29, sp
   24f40:	str	x0, [sp, #24]
   24f44:	ldr	x1, [sp, #24]
   24f48:	ldxr	w0, [x1]
   24f4c:	stlxr	w2, wzr, [x1]
   24f50:	cbnz	w2, 24f48 <omp_get_place_proc_ids@@OMP_4.5+0x56c>
   24f54:	str	w0, [sp, #44]
   24f58:	ldr	w0, [sp, #44]
   24f5c:	lsr	w0, w0, #31
   24f60:	and	w0, w0, #0xff
   24f64:	and	x0, x0, #0xff
   24f68:	cmp	x0, #0x0
   24f6c:	b.eq	24f78 <omp_get_place_proc_ids@@OMP_4.5+0x59c>  // b.none
   24f70:	ldr	x0, [sp, #24]
   24f74:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
   24f78:	nop
   24f7c:	ldp	x29, x30, [sp], #48
   24f80:	ret
   24f84:	sub	sp, sp, #0x10
   24f88:	str	x0, [sp, #8]
   24f8c:	ldr	x0, [sp, #8]
   24f90:	ldr	w0, [x0, #4]
   24f94:	and	w0, w0, #0x4
   24f98:	cmp	w0, #0x0
   24f9c:	cset	w0, ne  // ne = any
   24fa0:	and	w0, w0, #0xff
   24fa4:	and	x0, x0, #0xff
   24fa8:	cmp	x0, #0x0
   24fac:	cset	w0, ne  // ne = any
   24fb0:	and	w0, w0, #0xff
   24fb4:	add	sp, sp, #0x10
   24fb8:	ret
   24fbc:	mrs	x1, tpidr_el0
   24fc0:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   24fc4:	ldr	x0, [x0, #4016]
   24fc8:	add	x0, x1, x0
   24fcc:	ret
   24fd0:	stp	x29, x30, [sp, #-48]!
   24fd4:	mov	x29, sp
   24fd8:	strb	w0, [sp, #31]
   24fdc:	bl	24fbc <omp_get_place_proc_ids@@OMP_4.5+0x5e0>
   24fe0:	ldr	x0, [x0, #80]
   24fe4:	str	x0, [sp, #40]
   24fe8:	ldr	x0, [sp, #40]
   24fec:	cmp	x0, #0x0
   24ff0:	b.eq	25000 <omp_get_place_proc_ids@@OMP_4.5+0x624>  // b.none
   24ff4:	ldr	x0, [sp, #40]
   24ff8:	add	x0, x0, #0x90
   24ffc:	b	2501c <omp_get_place_proc_ids@@OMP_4.5+0x640>
   25000:	ldrb	w0, [sp, #31]
   25004:	cmp	w0, #0x0
   25008:	b.eq	25014 <omp_get_place_proc_ids@@OMP_4.5+0x638>  // b.none
   2500c:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
   25010:	b	2501c <omp_get_place_proc_ids@@OMP_4.5+0x640>
   25014:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   25018:	add	x0, x0, #0x2d8
   2501c:	ldp	x29, x30, [sp], #48
   25020:	ret
   25024:	stp	x29, x30, [sp, #-48]!
   25028:	mov	x29, sp
   2502c:	str	x0, [sp, #24]
   25030:	str	x1, [sp, #16]
   25034:	ldr	x1, [sp, #16]
   25038:	ldr	x0, [sp, #24]
   2503c:	bl	8920 <realloc@plt>
   25040:	str	x0, [sp, #40]
   25044:	ldr	x0, [sp, #40]
   25048:	cmp	x0, #0x0
   2504c:	b.ne	2506c <omp_get_place_proc_ids@@OMP_4.5+0x690>  // b.any
   25050:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   25054:	add	x0, x0, #0x58c
   25058:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2505c:	ldr	x1, [sp, #16]
   25060:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   25064:	add	x0, x0, #0x780
   25068:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2506c:	ldr	x0, [sp, #40]
   25070:	ldp	x29, x30, [sp], #48
   25074:	ret
   25078:	stp	x29, x30, [sp, #-16]!
   2507c:	mov	x29, sp
   25080:	adrp	x0, 2c000 <omp_pause_resource_all@@OMP_5.0+0x29c>
   25084:	add	x1, x0, #0x708
   25088:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2508c:	add	x0, x0, #0x588
   25090:	bl	8a70 <pthread_once@plt>
   25094:	nop
   25098:	ldp	x29, x30, [sp], #16
   2509c:	ret
   250a0:	stp	x29, x30, [sp, #-16]!
   250a4:	mov	x29, sp
   250a8:	bl	25078 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   250ac:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   250b0:	add	x0, x0, #0x5ac
   250b4:	ldr	w0, [x0]
   250b8:	ldp	x29, x30, [sp], #16
   250bc:	ret
   250c0:	stp	x29, x30, [sp, #-48]!
   250c4:	mov	x29, sp
   250c8:	str	w0, [sp, #28]
   250cc:	ldr	w0, [sp, #28]
   250d0:	cmn	w0, #0x1
   250d4:	b.ne	250f0 <omp_get_place_proc_ids@@OMP_4.5+0x714>  // b.any
   250d8:	mov	w0, #0x0                   	// #0
   250dc:	bl	24fd0 <omp_get_place_proc_ids@@OMP_4.5+0x5f4>
   250e0:	str	x0, [sp, #40]
   250e4:	ldr	x0, [sp, #40]
   250e8:	ldr	w0, [x0, #16]
   250ec:	str	w0, [sp, #28]
   250f0:	ldr	w0, [sp, #28]
   250f4:	cmp	w0, #0x0
   250f8:	b.lt	25110 <omp_get_place_proc_ids@@OMP_4.5+0x734>  // b.tstop
   250fc:	bl	250a0 <omp_get_place_proc_ids@@OMP_4.5+0x6c4>
   25100:	mov	w1, w0
   25104:	ldr	w0, [sp, #28]
   25108:	cmp	w0, w1
   2510c:	b.lt	25118 <omp_get_place_proc_ids@@OMP_4.5+0x73c>  // b.tstop
   25110:	mov	x0, #0x0                   	// #0
   25114:	b	2528c <omp_get_place_proc_ids@@OMP_4.5+0x8b0>
   25118:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2511c:	add	x0, x0, #0x5a0
   25120:	ldr	x2, [x0]
   25124:	ldrsw	x1, [sp, #28]
   25128:	mov	x0, x1
   2512c:	lsl	x0, x0, #2
   25130:	add	x0, x0, x1
   25134:	lsl	x0, x0, #2
   25138:	sub	x0, x0, x1
   2513c:	lsl	x0, x0, #4
   25140:	add	x0, x2, x0
   25144:	add	x0, x0, #0xa8
   25148:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2514c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   25150:	add	x0, x0, #0x5a0
   25154:	ldr	x2, [x0]
   25158:	ldrsw	x1, [sp, #28]
   2515c:	mov	x0, x1
   25160:	lsl	x0, x0, #2
   25164:	add	x0, x0, x1
   25168:	lsl	x0, x0, #2
   2516c:	sub	x0, x0, x1
   25170:	lsl	x0, x0, #4
   25174:	add	x0, x2, x0
   25178:	ldr	w0, [x0, #172]
   2517c:	cmp	w0, #0x0
   25180:	b.ne	251b8 <omp_get_place_proc_ids@@OMP_4.5+0x7dc>  // b.any
   25184:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   25188:	add	x0, x0, #0x5a0
   2518c:	ldr	x2, [x0]
   25190:	ldrsw	x1, [sp, #28]
   25194:	mov	x0, x1
   25198:	lsl	x0, x0, #2
   2519c:	add	x0, x0, x1
   251a0:	lsl	x0, x0, #2
   251a4:	sub	x0, x0, x1
   251a8:	lsl	x0, x0, #4
   251ac:	add	x0, x2, x0
   251b0:	bl	28e68 <GOMP_offload_unregister@@GOMP_4.0.1+0x34>
   251b4:	b	2522c <omp_get_place_proc_ids@@OMP_4.5+0x850>
   251b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   251bc:	add	x0, x0, #0x5a0
   251c0:	ldr	x2, [x0]
   251c4:	ldrsw	x1, [sp, #28]
   251c8:	mov	x0, x1
   251cc:	lsl	x0, x0, #2
   251d0:	add	x0, x0, x1
   251d4:	lsl	x0, x0, #2
   251d8:	sub	x0, x0, x1
   251dc:	lsl	x0, x0, #4
   251e0:	add	x0, x2, x0
   251e4:	ldr	w0, [x0, #172]
   251e8:	cmp	w0, #0x2
   251ec:	b.ne	2522c <omp_get_place_proc_ids@@OMP_4.5+0x850>  // b.any
   251f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   251f4:	add	x0, x0, #0x5a0
   251f8:	ldr	x2, [x0]
   251fc:	ldrsw	x1, [sp, #28]
   25200:	mov	x0, x1
   25204:	lsl	x0, x0, #2
   25208:	add	x0, x0, x1
   2520c:	lsl	x0, x0, #2
   25210:	sub	x0, x0, x1
   25214:	lsl	x0, x0, #4
   25218:	add	x0, x2, x0
   2521c:	add	x0, x0, #0xa8
   25220:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   25224:	mov	x0, #0x0                   	// #0
   25228:	b	2528c <omp_get_place_proc_ids@@OMP_4.5+0x8b0>
   2522c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   25230:	add	x0, x0, #0x5a0
   25234:	ldr	x2, [x0]
   25238:	ldrsw	x1, [sp, #28]
   2523c:	mov	x0, x1
   25240:	lsl	x0, x0, #2
   25244:	add	x0, x0, x1
   25248:	lsl	x0, x0, #2
   2524c:	sub	x0, x0, x1
   25250:	lsl	x0, x0, #4
   25254:	add	x0, x2, x0
   25258:	add	x0, x0, #0xa8
   2525c:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   25260:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   25264:	add	x0, x0, #0x5a0
   25268:	ldr	x2, [x0]
   2526c:	ldrsw	x1, [sp, #28]
   25270:	mov	x0, x1
   25274:	lsl	x0, x0, #2
   25278:	add	x0, x0, x1
   2527c:	lsl	x0, x0, #2
   25280:	sub	x0, x0, x1
   25284:	lsl	x0, x0, #4
   25288:	add	x0, x2, x0
   2528c:	ldp	x29, x30, [sp], #48
   25290:	ret
   25294:	stp	x29, x30, [sp, #-48]!
   25298:	mov	x29, sp
   2529c:	str	x0, [sp, #24]
   252a0:	str	x1, [sp, #16]
   252a4:	ldr	x0, [sp, #16]
   252a8:	ldr	x1, [x0]
   252ac:	ldr	x0, [sp, #16]
   252b0:	ldr	x0, [x0, #8]
   252b4:	cmp	x1, x0
   252b8:	b.eq	252cc <omp_get_place_proc_ids@@OMP_4.5+0x8f0>  // b.none
   252bc:	ldr	x1, [sp, #16]
   252c0:	ldr	x0, [sp, #24]
   252c4:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   252c8:	b	25370 <omp_get_place_proc_ids@@OMP_4.5+0x994>
   252cc:	ldr	x0, [sp, #16]
   252d0:	ldr	x0, [x0, #8]
   252d4:	add	x1, x0, #0x1
   252d8:	ldr	x0, [sp, #16]
   252dc:	str	x1, [x0, #8]
   252e0:	ldr	x1, [sp, #16]
   252e4:	ldr	x0, [sp, #24]
   252e8:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   252ec:	str	x0, [sp, #40]
   252f0:	ldr	x0, [sp, #16]
   252f4:	ldr	x0, [x0, #8]
   252f8:	sub	x1, x0, #0x1
   252fc:	ldr	x0, [sp, #16]
   25300:	str	x1, [x0, #8]
   25304:	ldr	x0, [sp, #40]
   25308:	cmp	x0, #0x0
   2530c:	b.eq	25318 <omp_get_place_proc_ids@@OMP_4.5+0x93c>  // b.none
   25310:	ldr	x0, [sp, #40]
   25314:	b	25370 <omp_get_place_proc_ids@@OMP_4.5+0x994>
   25318:	ldr	x0, [sp, #16]
   2531c:	ldr	x0, [x0]
   25320:	sub	x1, x0, #0x1
   25324:	ldr	x0, [sp, #16]
   25328:	str	x1, [x0]
   2532c:	ldr	x1, [sp, #16]
   25330:	ldr	x0, [sp, #24]
   25334:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   25338:	str	x0, [sp, #40]
   2533c:	ldr	x0, [sp, #16]
   25340:	ldr	x0, [x0]
   25344:	add	x1, x0, #0x1
   25348:	ldr	x0, [sp, #16]
   2534c:	str	x1, [x0]
   25350:	ldr	x0, [sp, #40]
   25354:	cmp	x0, #0x0
   25358:	b.eq	25364 <omp_get_place_proc_ids@@OMP_4.5+0x988>  // b.none
   2535c:	ldr	x0, [sp, #40]
   25360:	b	25370 <omp_get_place_proc_ids@@OMP_4.5+0x994>
   25364:	ldr	x1, [sp, #16]
   25368:	ldr	x0, [sp, #24]
   2536c:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   25370:	ldp	x29, x30, [sp], #48
   25374:	ret
   25378:	stp	x29, x30, [sp, #-48]!
   2537c:	mov	x29, sp
   25380:	str	x0, [sp, #24]
   25384:	str	x1, [sp, #16]
   25388:	ldr	x0, [sp, #16]
   2538c:	ldr	x1, [x0]
   25390:	ldr	x0, [sp, #16]
   25394:	ldr	x0, [x0, #8]
   25398:	cmp	x1, x0
   2539c:	b.eq	253b0 <omp_get_place_proc_ids@@OMP_4.5+0x9d4>  // b.none
   253a0:	ldr	x1, [sp, #16]
   253a4:	ldr	x0, [sp, #24]
   253a8:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   253ac:	b	253ec <omp_get_place_proc_ids@@OMP_4.5+0xa10>
   253b0:	ldr	x0, [sp, #16]
   253b4:	ldr	x0, [x0, #8]
   253b8:	add	x1, x0, #0x1
   253bc:	ldr	x0, [sp, #16]
   253c0:	str	x1, [x0, #8]
   253c4:	ldr	x1, [sp, #16]
   253c8:	ldr	x0, [sp, #24]
   253cc:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   253d0:	str	x0, [sp, #40]
   253d4:	ldr	x0, [sp, #16]
   253d8:	ldr	x0, [x0, #8]
   253dc:	sub	x1, x0, #0x1
   253e0:	ldr	x0, [sp, #16]
   253e4:	str	x1, [x0, #8]
   253e8:	ldr	x0, [sp, #40]
   253ec:	ldp	x29, x30, [sp], #48
   253f0:	ret
   253f4:	stp	x29, x30, [sp, #-80]!
   253f8:	mov	x29, sp
   253fc:	str	x0, [sp, #72]
   25400:	str	x1, [sp, #64]
   25404:	str	x2, [sp, #56]
   25408:	str	x3, [sp, #48]
   2540c:	str	x4, [sp, #40]
   25410:	str	x5, [sp, #32]
   25414:	str	x6, [sp, #24]
   25418:	ldr	x0, [sp, #72]
   2541c:	ldr	w0, [x0, #12]
   25420:	ldr	x4, [sp, #64]
   25424:	ldr	x3, [sp, #24]
   25428:	ldr	x2, [sp, #32]
   2542c:	ldr	x1, [sp, #48]
   25430:	blr	x4
   25434:	and	w0, w0, #0xff
   25438:	eor	w0, w0, #0x1
   2543c:	and	w0, w0, #0xff
   25440:	cmp	w0, #0x0
   25444:	b.eq	25490 <omp_get_place_proc_ids@@OMP_4.5+0xab4>  // b.none
   25448:	ldr	x0, [sp, #72]
   2544c:	add	x0, x0, #0xa8
   25450:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   25454:	ldr	x1, [sp, #32]
   25458:	ldr	x0, [sp, #24]
   2545c:	add	x2, x1, x0
   25460:	ldr	x1, [sp, #48]
   25464:	ldr	x0, [sp, #24]
   25468:	add	x0, x1, x0
   2546c:	mov	x6, x0
   25470:	ldr	x5, [sp, #48]
   25474:	ldr	x4, [sp, #56]
   25478:	mov	x3, x2
   2547c:	ldr	x2, [sp, #32]
   25480:	ldr	x1, [sp, #40]
   25484:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   25488:	add	x0, x0, #0x7a8
   2548c:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   25490:	nop
   25494:	ldp	x29, x30, [sp], #80
   25498:	ret
   2549c:	sub	sp, sp, #0x20
   254a0:	str	x0, [sp, #24]
   254a4:	str	x1, [sp, #16]
   254a8:	str	x2, [sp, #8]
   254ac:	ldr	x0, [sp, #8]
   254b0:	cmp	x0, #0x8, lsl #12
   254b4:	b.hi	25624 <omp_get_place_proc_ids@@OMP_4.5+0xc48>  // b.pmore
   254b8:	ldr	x0, [sp, #8]
   254bc:	cmp	x0, #0x0
   254c0:	b.eq	25624 <omp_get_place_proc_ids@@OMP_4.5+0xc48>  // b.none
   254c4:	ldr	x0, [sp, #24]
   254c8:	ldr	x0, [x0, #24]
   254cc:	cmp	x0, #0x0
   254d0:	b.eq	255b8 <omp_get_place_proc_ids@@OMP_4.5+0xbdc>  // b.none
   254d4:	ldr	x0, [sp, #24]
   254d8:	ldr	x0, [x0, #24]
   254dc:	cmp	x0, #0x0
   254e0:	b.lt	2562c <omp_get_place_proc_ids@@OMP_4.5+0xc50>  // b.tstop
   254e4:	ldr	x0, [sp, #24]
   254e8:	ldr	x1, [x0, #16]
   254ec:	ldr	x0, [sp, #24]
   254f0:	ldr	x0, [x0, #24]
   254f4:	lsl	x0, x0, #4
   254f8:	sub	x0, x0, #0x10
   254fc:	add	x0, x1, x0
   25500:	ldr	x0, [x0, #8]
   25504:	ldr	x1, [sp, #16]
   25508:	cmp	x1, x0
   2550c:	b.cs	25520 <omp_get_place_proc_ids@@OMP_4.5+0xb44>  // b.hs, b.nlast
   25510:	ldr	x0, [sp, #24]
   25514:	mov	x1, #0xffffffffffffffff    	// #-1
   25518:	str	x1, [x0, #24]
   2551c:	b	25630 <omp_get_place_proc_ids@@OMP_4.5+0xc54>
   25520:	ldr	x0, [sp, #24]
   25524:	ldr	x1, [x0, #16]
   25528:	ldr	x0, [sp, #24]
   2552c:	ldr	x0, [x0, #24]
   25530:	lsl	x0, x0, #4
   25534:	sub	x0, x0, #0x10
   25538:	add	x0, x1, x0
   2553c:	ldr	x0, [x0, #8]
   25540:	add	x0, x0, #0x1, lsl #12
   25544:	ldr	x1, [sp, #16]
   25548:	cmp	x1, x0
   2554c:	b.cs	25594 <omp_get_place_proc_ids@@OMP_4.5+0xbb8>  // b.hs, b.nlast
   25550:	ldr	x0, [sp, #24]
   25554:	ldr	x1, [x0, #16]
   25558:	ldr	x0, [sp, #24]
   2555c:	ldr	x0, [x0, #24]
   25560:	lsl	x0, x0, #4
   25564:	sub	x0, x0, #0x10
   25568:	add	x0, x1, x0
   2556c:	ldr	x2, [sp, #16]
   25570:	ldr	x1, [sp, #8]
   25574:	add	x1, x2, x1
   25578:	str	x1, [x0, #8]
   2557c:	ldr	x0, [sp, #24]
   25580:	ldr	x0, [x0, #32]
   25584:	add	x1, x0, #0x1
   25588:	ldr	x0, [sp, #24]
   2558c:	str	x1, [x0, #32]
   25590:	b	25630 <omp_get_place_proc_ids@@OMP_4.5+0xc54>
   25594:	ldr	x0, [sp, #24]
   25598:	ldr	x0, [x0, #32]
   2559c:	cmp	x0, #0x1
   255a0:	b.ne	255b8 <omp_get_place_proc_ids@@OMP_4.5+0xbdc>  // b.any
   255a4:	ldr	x0, [sp, #24]
   255a8:	ldr	x0, [x0, #24]
   255ac:	sub	x1, x0, #0x1
   255b0:	ldr	x0, [sp, #24]
   255b4:	str	x1, [x0, #24]
   255b8:	ldr	x0, [sp, #24]
   255bc:	ldr	x1, [x0, #16]
   255c0:	ldr	x0, [sp, #24]
   255c4:	ldr	x0, [x0, #24]
   255c8:	lsl	x0, x0, #4
   255cc:	add	x0, x1, x0
   255d0:	ldr	x1, [sp, #16]
   255d4:	str	x1, [x0]
   255d8:	ldr	x0, [sp, #24]
   255dc:	ldr	x1, [x0, #16]
   255e0:	ldr	x0, [sp, #24]
   255e4:	ldr	x0, [x0, #24]
   255e8:	lsl	x0, x0, #4
   255ec:	add	x0, x1, x0
   255f0:	ldr	x2, [sp, #16]
   255f4:	ldr	x1, [sp, #8]
   255f8:	add	x1, x2, x1
   255fc:	str	x1, [x0, #8]
   25600:	ldr	x0, [sp, #24]
   25604:	ldr	x0, [x0, #24]
   25608:	add	x1, x0, #0x1
   2560c:	ldr	x0, [sp, #24]
   25610:	str	x1, [x0, #24]
   25614:	ldr	x0, [sp, #24]
   25618:	mov	x1, #0x1                   	// #1
   2561c:	str	x1, [x0, #32]
   25620:	b	25630 <omp_get_place_proc_ids@@OMP_4.5+0xc54>
   25624:	nop
   25628:	b	25630 <omp_get_place_proc_ids@@OMP_4.5+0xc54>
   2562c:	nop
   25630:	add	sp, sp, #0x20
   25634:	ret
   25638:	sub	sp, sp, #0x10
   2563c:	str	w0, [sp, #12]
   25640:	ldr	w0, [sp, #12]
   25644:	cmp	w0, #0x12
   25648:	b.gt	25688 <omp_get_place_proc_ids@@OMP_4.5+0xcac>
   2564c:	ldr	w0, [sp, #12]
   25650:	cmp	w0, #0x0
   25654:	b.lt	2569c <omp_get_place_proc_ids@@OMP_4.5+0xcc0>  // b.tstop
   25658:	ldr	w0, [sp, #12]
   2565c:	mov	x1, #0x1                   	// #1
   25660:	lsl	x1, x1, x0
   25664:	mov	x0, #0x5                   	// #5
   25668:	movk	x0, #0x4, lsl #16
   2566c:	and	x0, x1, x0
   25670:	cmp	x0, #0x0
   25674:	cset	w0, ne  // ne = any
   25678:	and	w0, w0, #0xff
   2567c:	cmp	w0, #0x0
   25680:	b.ne	25694 <omp_get_place_proc_ids@@OMP_4.5+0xcb8>  // b.any
   25684:	b	2569c <omp_get_place_proc_ids@@OMP_4.5+0xcc0>
   25688:	ldr	w0, [sp, #12]
   2568c:	cmp	w0, #0x80
   25690:	b.ne	2569c <omp_get_place_proc_ids@@OMP_4.5+0xcc0>  // b.any
   25694:	mov	w0, #0x0                   	// #0
   25698:	b	256a0 <omp_get_place_proc_ids@@OMP_4.5+0xcc4>
   2569c:	mov	w0, #0x1                   	// #1
   256a0:	add	sp, sp, #0x10
   256a4:	ret
   256a8:	stp	x29, x30, [sp, #-96]!
   256ac:	mov	x29, sp
   256b0:	str	x0, [sp, #56]
   256b4:	str	x1, [sp, #48]
   256b8:	str	x2, [sp, #40]
   256bc:	str	x3, [sp, #32]
   256c0:	str	x4, [sp, #24]
   256c4:	ldr	x0, [sp, #24]
   256c8:	cmp	x0, #0x0
   256cc:	b.eq	2581c <omp_get_place_proc_ids@@OMP_4.5+0xe40>  // b.none
   256d0:	ldr	x1, [sp, #48]
   256d4:	ldr	x0, [sp, #24]
   256d8:	ldr	x0, [x0, #8]
   256dc:	ldr	x0, [x0, #16]
   256e0:	sub	x0, x1, x0
   256e4:	str	x0, [sp, #72]
   256e8:	ldr	x0, [sp, #24]
   256ec:	ldr	x1, [x0, #16]
   256f0:	ldr	x0, [sp, #24]
   256f4:	ldr	x0, [x0, #24]
   256f8:	lsl	x0, x0, #4
   256fc:	sub	x0, x0, #0x10
   25700:	add	x0, x1, x0
   25704:	ldr	x0, [x0, #8]
   25708:	ldr	x1, [sp, #72]
   2570c:	cmp	x1, x0
   25710:	b.cs	2581c <omp_get_place_proc_ids@@OMP_4.5+0xe40>  // b.hs, b.nlast
   25714:	str	xzr, [sp, #88]
   25718:	ldr	x0, [sp, #24]
   2571c:	ldr	x0, [x0, #24]
   25720:	sub	x0, x0, #0x1
   25724:	str	x0, [sp, #80]
   25728:	b	2580c <omp_get_place_proc_ids@@OMP_4.5+0xe30>
   2572c:	ldr	x1, [sp, #88]
   25730:	ldr	x0, [sp, #80]
   25734:	add	x0, x1, x0
   25738:	asr	x0, x0, #1
   2573c:	str	x0, [sp, #64]
   25740:	ldr	x0, [sp, #24]
   25744:	ldr	x1, [x0, #16]
   25748:	ldr	x0, [sp, #64]
   2574c:	lsl	x0, x0, #4
   25750:	add	x0, x1, x0
   25754:	ldr	x0, [x0, #8]
   25758:	ldr	x1, [sp, #72]
   2575c:	cmp	x1, x0
   25760:	b.cc	25774 <omp_get_place_proc_ids@@OMP_4.5+0xd98>  // b.lo, b.ul, b.last
   25764:	ldr	x0, [sp, #64]
   25768:	add	x0, x0, #0x1
   2576c:	str	x0, [sp, #88]
   25770:	b	2580c <omp_get_place_proc_ids@@OMP_4.5+0xe30>
   25774:	ldr	x0, [sp, #24]
   25778:	ldr	x1, [x0, #16]
   2577c:	ldr	x0, [sp, #64]
   25780:	lsl	x0, x0, #4
   25784:	add	x0, x1, x0
   25788:	ldr	x0, [x0]
   2578c:	ldr	x1, [sp, #72]
   25790:	cmp	x1, x0
   25794:	b.cc	25800 <omp_get_place_proc_ids@@OMP_4.5+0xe24>  // b.lo, b.ul, b.last
   25798:	ldr	x1, [sp, #72]
   2579c:	ldr	x0, [sp, #32]
   257a0:	add	x1, x1, x0
   257a4:	ldr	x0, [sp, #24]
   257a8:	ldr	x2, [x0, #16]
   257ac:	ldr	x0, [sp, #64]
   257b0:	lsl	x0, x0, #4
   257b4:	add	x0, x2, x0
   257b8:	ldr	x0, [x0, #8]
   257bc:	cmp	x1, x0
   257c0:	b.ls	257d0 <omp_get_place_proc_ids@@OMP_4.5+0xdf4>  // b.plast
   257c4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   257c8:	add	x0, x0, #0x7e8
   257cc:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   257d0:	ldr	x0, [sp, #24]
   257d4:	ldr	x1, [x0]
   257d8:	ldr	x0, [sp, #24]
   257dc:	ldr	x0, [x0, #16]
   257e0:	ldr	x0, [x0]
   257e4:	ldr	x2, [sp, #72]
   257e8:	sub	x0, x2, x0
   257ec:	add	x0, x1, x0
   257f0:	ldr	x2, [sp, #32]
   257f4:	ldr	x1, [sp, #40]
   257f8:	bl	86a0 <memcpy@plt>
   257fc:	b	25848 <omp_get_place_proc_ids@@OMP_4.5+0xe6c>
   25800:	ldr	x0, [sp, #64]
   25804:	sub	x0, x0, #0x1
   25808:	str	x0, [sp, #80]
   2580c:	ldr	x1, [sp, #88]
   25810:	ldr	x0, [sp, #80]
   25814:	cmp	x1, x0
   25818:	b.le	2572c <omp_get_place_proc_ids@@OMP_4.5+0xd50>
   2581c:	ldr	x0, [sp, #56]
   25820:	ldr	x1, [x0, #120]
   25824:	ldr	x6, [sp, #32]
   25828:	ldr	x5, [sp, #40]
   2582c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   25830:	add	x4, x0, #0x808
   25834:	ldr	x3, [sp, #48]
   25838:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2583c:	add	x2, x0, #0x810
   25840:	ldr	x0, [sp, #56]
   25844:	bl	253f4 <omp_get_place_proc_ids@@OMP_4.5+0xa18>
   25848:	ldp	x29, x30, [sp], #96
   2584c:	ret
   25850:	stp	x29, x30, [sp, #-48]!
   25854:	mov	x29, sp
   25858:	str	x0, [sp, #40]
   2585c:	str	x1, [sp, #32]
   25860:	str	x2, [sp, #24]
   25864:	str	x3, [sp, #16]
   25868:	ldr	x0, [sp, #40]
   2586c:	ldr	x1, [x0, #112]
   25870:	ldr	x6, [sp, #16]
   25874:	ldr	x5, [sp, #24]
   25878:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2587c:	add	x4, x0, #0x810
   25880:	ldr	x3, [sp, #32]
   25884:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   25888:	add	x2, x0, #0x808
   2588c:	ldr	x0, [sp, #40]
   25890:	bl	253f4 <omp_get_place_proc_ids@@OMP_4.5+0xa18>
   25894:	nop
   25898:	ldp	x29, x30, [sp], #48
   2589c:	ret
   258a0:	stp	x29, x30, [sp, #-32]!
   258a4:	mov	x29, sp
   258a8:	str	x0, [sp, #24]
   258ac:	str	x1, [sp, #16]
   258b0:	ldr	x0, [sp, #24]
   258b4:	ldr	x2, [x0, #104]
   258b8:	ldr	x0, [sp, #24]
   258bc:	ldr	w0, [x0, #12]
   258c0:	ldr	x1, [sp, #16]
   258c4:	blr	x2
   258c8:	and	w0, w0, #0xff
   258cc:	eor	w0, w0, #0x1
   258d0:	and	w0, w0, #0xff
   258d4:	cmp	w0, #0x0
   258d8:	b.eq	258f8 <omp_get_place_proc_ids@@OMP_4.5+0xf1c>  // b.none
   258dc:	ldr	x0, [sp, #24]
   258e0:	add	x0, x0, #0xa8
   258e4:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   258e8:	ldr	x1, [sp, #16]
   258ec:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   258f0:	add	x0, x0, #0x818
   258f4:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   258f8:	nop
   258fc:	ldp	x29, x30, [sp], #32
   25900:	ret
   25904:	stp	x29, x30, [sp, #-64]!
   25908:	mov	x29, sp
   2590c:	str	x0, [sp, #56]
   25910:	str	x1, [sp, #48]
   25914:	str	x2, [sp, #40]
   25918:	str	x3, [sp, #32]
   2591c:	strb	w4, [sp, #31]
   25920:	str	x5, [sp, #16]
   25924:	ldr	x0, [sp, #32]
   25928:	ldr	x1, [sp, #48]
   2592c:	str	x1, [x0]
   25930:	ldrb	w0, [sp, #31]
   25934:	and	w0, w0, #0xc
   25938:	cmp	w0, #0x0
   2593c:	b.ne	25958 <omp_get_place_proc_ids@@OMP_4.5+0xf7c>  // b.any
   25940:	ldrb	w0, [sp, #31]
   25944:	and	w0, w0, #0x2
   25948:	cmp	w0, #0x0
   2594c:	b.eq	25958 <omp_get_place_proc_ids@@OMP_4.5+0xf7c>  // b.none
   25950:	mov	w0, #0x1                   	// #1
   25954:	b	2595c <omp_get_place_proc_ids@@OMP_4.5+0xf80>
   25958:	mov	w0, #0x0                   	// #0
   2595c:	and	w0, w0, #0x1
   25960:	and	w1, w0, #0xff
   25964:	ldr	x0, [sp, #32]
   25968:	strb	w1, [x0, #8]
   2596c:	ldrb	w0, [sp, #31]
   25970:	cmp	w0, #0x12
   25974:	b.eq	25984 <omp_get_place_proc_ids@@OMP_4.5+0xfa8>  // b.none
   25978:	ldrb	w0, [sp, #31]
   2597c:	cmp	w0, #0x13
   25980:	b.ne	2598c <omp_get_place_proc_ids@@OMP_4.5+0xfb0>  // b.any
   25984:	mov	w0, #0x1                   	// #1
   25988:	b	25990 <omp_get_place_proc_ids@@OMP_4.5+0xfb4>
   2598c:	mov	w0, #0x0                   	// #0
   25990:	and	w0, w0, #0x1
   25994:	and	w1, w0, #0xff
   25998:	ldr	x0, [sp, #32]
   2599c:	strb	w1, [x0, #9]
   259a0:	ldr	x0, [sp, #40]
   259a4:	ldr	x1, [x0]
   259a8:	ldr	x0, [sp, #48]
   259ac:	ldr	x0, [x0]
   259b0:	sub	x1, x1, x0
   259b4:	ldr	x0, [sp, #32]
   259b8:	str	x1, [x0, #16]
   259bc:	ldr	x0, [sp, #40]
   259c0:	ldr	x1, [x0, #8]
   259c4:	ldr	x0, [sp, #40]
   259c8:	ldr	x0, [x0]
   259cc:	sub	x1, x1, x0
   259d0:	ldr	x0, [sp, #32]
   259d4:	str	x1, [x0, #24]
   259d8:	ldrsb	w0, [sp, #31]
   259dc:	cmp	w0, #0x0
   259e0:	b.lt	25a14 <omp_get_place_proc_ids@@OMP_4.5+0x1038>  // b.tstop
   259e4:	ldr	x0, [sp, #48]
   259e8:	ldr	x1, [x0]
   259ec:	ldr	x0, [sp, #40]
   259f0:	ldr	x0, [x0]
   259f4:	cmp	x1, x0
   259f8:	b.hi	25a14 <omp_get_place_proc_ids@@OMP_4.5+0x1038>  // b.pmore
   259fc:	ldr	x0, [sp, #48]
   25a00:	ldr	x1, [x0, #8]
   25a04:	ldr	x0, [sp, #40]
   25a08:	ldr	x0, [x0, #8]
   25a0c:	cmp	x1, x0
   25a10:	b.cs	25a5c <omp_get_place_proc_ids@@OMP_4.5+0x1080>  // b.hs, b.nlast
   25a14:	ldr	x0, [sp, #56]
   25a18:	add	x0, x0, #0xa8
   25a1c:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   25a20:	ldr	x0, [sp, #40]
   25a24:	ldr	x0, [x0]
   25a28:	mov	x1, x0
   25a2c:	ldr	x0, [sp, #40]
   25a30:	ldr	x0, [x0, #8]
   25a34:	mov	x2, x0
   25a38:	ldr	x0, [sp, #48]
   25a3c:	ldr	x0, [x0]
   25a40:	mov	x3, x0
   25a44:	ldr	x0, [sp, #48]
   25a48:	ldr	x0, [x0, #8]
   25a4c:	mov	x4, x0
   25a50:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   25a54:	add	x0, x0, #0x848
   25a58:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   25a5c:	ldrb	w0, [sp, #31]
   25a60:	cmp	w0, #0x11
   25a64:	b.eq	25a74 <omp_get_place_proc_ids@@OMP_4.5+0x1098>  // b.none
   25a68:	ldrb	w0, [sp, #31]
   25a6c:	cmp	w0, #0x13
   25a70:	b.ne	25adc <omp_get_place_proc_ids@@OMP_4.5+0x1100>  // b.any
   25a74:	ldr	x0, [sp, #48]
   25a78:	ldr	x0, [x0, #16]
   25a7c:	ldr	x1, [x0, #16]
   25a80:	ldr	x0, [sp, #48]
   25a84:	ldr	x0, [x0, #24]
   25a88:	add	x1, x1, x0
   25a8c:	ldr	x0, [sp, #40]
   25a90:	ldr	x0, [x0]
   25a94:	add	x1, x1, x0
   25a98:	ldr	x0, [sp, #48]
   25a9c:	ldr	x0, [x0]
   25aa0:	sub	x0, x1, x0
   25aa4:	mov	x5, x0
   25aa8:	ldr	x0, [sp, #40]
   25aac:	ldr	x0, [x0]
   25ab0:	mov	x2, x0
   25ab4:	ldr	x0, [sp, #40]
   25ab8:	ldr	x1, [x0, #8]
   25abc:	ldr	x0, [sp, #40]
   25ac0:	ldr	x0, [x0]
   25ac4:	sub	x0, x1, x0
   25ac8:	ldr	x4, [sp, #16]
   25acc:	mov	x3, x0
   25ad0:	mov	x1, x5
   25ad4:	ldr	x0, [sp, #56]
   25ad8:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   25adc:	ldr	x0, [sp, #48]
   25ae0:	ldr	x0, [x0, #32]
   25ae4:	cmn	x0, #0x1
   25ae8:	b.eq	25b00 <omp_get_place_proc_ids@@OMP_4.5+0x1124>  // b.none
   25aec:	ldr	x0, [sp, #48]
   25af0:	ldr	x0, [x0, #32]
   25af4:	add	x1, x0, #0x1
   25af8:	ldr	x0, [sp, #48]
   25afc:	str	x1, [x0, #32]
   25b00:	nop
   25b04:	ldp	x29, x30, [sp], #64
   25b08:	ret
   25b0c:	sub	sp, sp, #0x10
   25b10:	strb	w0, [sp, #15]
   25b14:	str	x1, [sp]
   25b18:	str	w2, [sp, #8]
   25b1c:	ldrb	w0, [sp, #15]
   25b20:	cmp	w0, #0x0
   25b24:	b.eq	25b40 <omp_get_place_proc_ids@@OMP_4.5+0x1164>  // b.none
   25b28:	ldrsw	x0, [sp, #8]
   25b2c:	lsl	x0, x0, #1
   25b30:	ldr	x1, [sp]
   25b34:	add	x0, x1, x0
   25b38:	ldrh	w0, [x0]
   25b3c:	b	25b50 <omp_get_place_proc_ids@@OMP_4.5+0x1174>
   25b40:	ldrsw	x0, [sp, #8]
   25b44:	ldr	x1, [sp]
   25b48:	add	x0, x1, x0
   25b4c:	ldrb	w0, [x0]
   25b50:	add	sp, sp, #0x10
   25b54:	ret
   25b58:	stp	x29, x30, [sp, #-144]!
   25b5c:	mov	x29, sp
   25b60:	str	x0, [sp, #56]
   25b64:	str	x1, [sp, #48]
   25b68:	str	x2, [sp, #40]
   25b6c:	str	x3, [sp, #32]
   25b70:	str	x4, [sp, #24]
   25b74:	ldr	x0, [sp, #56]
   25b78:	ldr	x0, [x0, #56]
   25b7c:	str	x0, [sp, #136]
   25b80:	ldr	x0, [sp, #136]
   25b84:	add	x0, x0, #0xa0
   25b88:	str	x0, [sp, #128]
   25b8c:	ldr	x0, [sp, #48]
   25b90:	str	x0, [sp, #64]
   25b94:	ldr	x0, [sp, #64]
   25b98:	cmp	x0, #0x0
   25b9c:	b.ne	25bd8 <omp_get_place_proc_ids@@OMP_4.5+0x11fc>  // b.any
   25ba0:	str	xzr, [sp, #88]
   25ba4:	ldr	x0, [sp, #56]
   25ba8:	ldr	x1, [x0, #16]
   25bac:	ldr	x0, [sp, #40]
   25bb0:	add	x0, x1, x0
   25bb4:	mov	x1, x0
   25bb8:	add	x0, sp, #0x40
   25bbc:	add	x0, x0, #0x18
   25bc0:	ldr	x4, [sp, #24]
   25bc4:	mov	x3, #0x8                   	// #8
   25bc8:	mov	x2, x0
   25bcc:	ldr	x0, [sp, #136]
   25bd0:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   25bd4:	b	25ca0 <omp_get_place_proc_ids@@OMP_4.5+0x12c4>
   25bd8:	ldr	x1, [sp, #64]
   25bdc:	ldr	x0, [sp, #32]
   25be0:	add	x0, x1, x0
   25be4:	str	x0, [sp, #64]
   25be8:	ldr	x0, [sp, #64]
   25bec:	str	x0, [sp, #72]
   25bf0:	add	x0, sp, #0x40
   25bf4:	mov	x1, x0
   25bf8:	ldr	x0, [sp, #128]
   25bfc:	bl	25294 <omp_get_place_proc_ids@@OMP_4.5+0x8b8>
   25c00:	str	x0, [sp, #120]
   25c04:	ldr	x0, [sp, #120]
   25c08:	cmp	x0, #0x0
   25c0c:	b.ne	25c28 <omp_get_place_proc_ids@@OMP_4.5+0x124c>  // b.any
   25c10:	ldr	x0, [sp, #136]
   25c14:	add	x0, x0, #0xa8
   25c18:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   25c1c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   25c20:	add	x0, x0, #0x898
   25c24:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   25c28:	ldr	x1, [sp, #64]
   25c2c:	ldr	x0, [sp, #120]
   25c30:	ldr	x0, [x0]
   25c34:	sub	x0, x1, x0
   25c38:	str	x0, [sp, #64]
   25c3c:	ldr	x0, [sp, #120]
   25c40:	ldr	x0, [x0, #16]
   25c44:	ldr	x1, [x0, #16]
   25c48:	ldr	x0, [sp, #120]
   25c4c:	ldr	x0, [x0, #24]
   25c50:	add	x1, x1, x0
   25c54:	ldr	x0, [sp, #64]
   25c58:	add	x0, x1, x0
   25c5c:	str	x0, [sp, #88]
   25c60:	ldr	x1, [sp, #88]
   25c64:	ldr	x0, [sp, #32]
   25c68:	sub	x0, x1, x0
   25c6c:	str	x0, [sp, #88]
   25c70:	ldr	x0, [sp, #56]
   25c74:	ldr	x1, [x0, #16]
   25c78:	ldr	x0, [sp, #40]
   25c7c:	add	x0, x1, x0
   25c80:	mov	x1, x0
   25c84:	add	x0, sp, #0x40
   25c88:	add	x0, x0, #0x18
   25c8c:	ldr	x4, [sp, #24]
   25c90:	mov	x3, #0x8                   	// #8
   25c94:	mov	x2, x0
   25c98:	ldr	x0, [sp, #136]
   25c9c:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   25ca0:	ldp	x29, x30, [sp], #144
   25ca4:	ret
   25ca8:	stp	x29, x30, [sp, #-176]!
   25cac:	mov	x29, sp
   25cb0:	str	x0, [sp, #72]
   25cb4:	str	x1, [sp, #64]
   25cb8:	str	x2, [sp, #56]
   25cbc:	str	x3, [sp, #48]
   25cc0:	str	x4, [sp, #40]
   25cc4:	str	x5, [sp, #32]
   25cc8:	str	x6, [sp, #24]
   25ccc:	str	x7, [sp, #16]
   25cd0:	ldr	x0, [sp, #72]
   25cd4:	ldr	x0, [x0, #56]
   25cd8:	str	x0, [sp, #168]
   25cdc:	ldr	x0, [sp, #168]
   25ce0:	add	x0, x0, #0xa0
   25ce4:	str	x0, [sp, #160]
   25ce8:	mov	w0, #0x1                   	// #1
   25cec:	strb	w0, [sp, #159]
   25cf0:	ldrb	w0, [sp, #159]
   25cf4:	cmp	w0, #0x0
   25cf8:	b.eq	25d04 <omp_get_place_proc_ids@@OMP_4.5+0x1328>  // b.none
   25cfc:	mov	w0, #0xff                  	// #255
   25d00:	b	25d08 <omp_get_place_proc_ids@@OMP_4.5+0x132c>
   25d04:	mov	w0, #0x7                   	// #7
   25d08:	str	w0, [sp, #152]
   25d0c:	ldr	x0, [sp, #48]
   25d10:	lsl	x0, x0, #3
   25d14:	ldr	x1, [sp, #40]
   25d18:	add	x0, x1, x0
   25d1c:	ldr	x0, [x0]
   25d20:	str	x0, [sp, #80]
   25d24:	ldr	x1, [sp, #80]
   25d28:	ldr	x0, [sp, #48]
   25d2c:	lsl	x0, x0, #3
   25d30:	ldr	x2, [sp, #32]
   25d34:	add	x0, x2, x0
   25d38:	ldr	x0, [x0]
   25d3c:	add	x0, x1, x0
   25d40:	str	x0, [sp, #88]
   25d44:	add	x0, sp, #0x50
   25d48:	mov	x1, x0
   25d4c:	ldr	x0, [sp, #160]
   25d50:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   25d54:	str	x0, [sp, #144]
   25d58:	ldr	x0, [sp, #48]
   25d5c:	mov	w2, w0
   25d60:	ldr	x1, [sp, #24]
   25d64:	ldrb	w0, [sp, #159]
   25d68:	bl	25b0c <omp_get_place_proc_ids@@OMP_4.5+0x1130>
   25d6c:	str	w0, [sp, #140]
   25d70:	ldr	x0, [sp, #144]
   25d74:	cmp	x0, #0x0
   25d78:	b.eq	25e18 <omp_get_place_proc_ids@@OMP_4.5+0x143c>  // b.none
   25d7c:	ldr	x0, [sp, #144]
   25d80:	ldr	x1, [x0, #16]
   25d84:	ldr	x0, [sp, #64]
   25d88:	ldr	x0, [x0, #16]
   25d8c:	cmp	x1, x0
   25d90:	b.ne	25e18 <omp_get_place_proc_ids@@OMP_4.5+0x143c>  // b.any
   25d94:	ldr	x0, [sp, #144]
   25d98:	ldr	x1, [x0]
   25d9c:	ldr	x0, [sp, #64]
   25da0:	ldr	x0, [x0]
   25da4:	sub	x1, x1, x0
   25da8:	ldr	x0, [sp, #144]
   25dac:	ldr	x2, [x0, #24]
   25db0:	ldr	x0, [sp, #64]
   25db4:	ldr	x0, [x0, #24]
   25db8:	sub	x0, x2, x0
   25dbc:	cmp	x1, x0
   25dc0:	b.ne	25e18 <omp_get_place_proc_ids@@OMP_4.5+0x143c>  // b.any
   25dc4:	ldr	x0, [sp, #48]
   25dc8:	add	x0, x0, #0x2
   25dcc:	lsl	x0, x0, #5
   25dd0:	ldr	x1, [sp, #72]
   25dd4:	add	x2, x1, x0
   25dd8:	ldr	w0, [sp, #140]
   25ddc:	sxtb	w1, w0
   25de0:	ldr	w0, [sp, #152]
   25de4:	sxtb	w0, w0
   25de8:	and	w0, w1, w0
   25dec:	sxtb	w0, w0
   25df0:	and	w1, w0, #0xff
   25df4:	add	x0, sp, #0x50
   25df8:	ldr	x5, [sp, #16]
   25dfc:	mov	w4, w1
   25e00:	mov	x3, x2
   25e04:	mov	x2, x0
   25e08:	ldr	x1, [sp, #144]
   25e0c:	ldr	x0, [sp, #168]
   25e10:	bl	25904 <omp_get_place_proc_ids@@OMP_4.5+0xf28>
   25e14:	b	26028 <omp_get_place_proc_ids@@OMP_4.5+0x164c>
   25e18:	ldr	x0, [sp, #48]
   25e1c:	lsl	x0, x0, #3
   25e20:	ldr	x1, [sp, #32]
   25e24:	add	x0, x1, x0
   25e28:	ldr	x0, [x0]
   25e2c:	cmp	x0, #0x0
   25e30:	b.ne	26000 <omp_get_place_proc_ids@@OMP_4.5+0x1624>  // b.any
   25e34:	ldr	x0, [sp, #80]
   25e38:	ldr	x1, [sp, #56]
   25e3c:	lsl	x1, x1, #3
   25e40:	sub	x1, x1, #0x8
   25e44:	ldr	x2, [sp, #40]
   25e48:	add	x1, x2, x1
   25e4c:	ldr	x1, [x1]
   25e50:	cmp	x0, x1
   25e54:	b.ls	25f2c <omp_get_place_proc_ids@@OMP_4.5+0x1550>  // b.plast
   25e58:	ldr	x0, [sp, #80]
   25e5c:	sub	x0, x0, #0x1
   25e60:	str	x0, [sp, #80]
   25e64:	add	x0, sp, #0x50
   25e68:	mov	x1, x0
   25e6c:	ldr	x0, [sp, #160]
   25e70:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   25e74:	str	x0, [sp, #144]
   25e78:	ldr	x0, [sp, #80]
   25e7c:	add	x0, x0, #0x1
   25e80:	str	x0, [sp, #80]
   25e84:	ldr	x0, [sp, #144]
   25e88:	cmp	x0, #0x0
   25e8c:	b.eq	25f2c <omp_get_place_proc_ids@@OMP_4.5+0x1550>  // b.none
   25e90:	ldr	x0, [sp, #144]
   25e94:	ldr	x1, [x0, #16]
   25e98:	ldr	x0, [sp, #64]
   25e9c:	ldr	x0, [x0, #16]
   25ea0:	cmp	x1, x0
   25ea4:	b.ne	25f2c <omp_get_place_proc_ids@@OMP_4.5+0x1550>  // b.any
   25ea8:	ldr	x0, [sp, #144]
   25eac:	ldr	x1, [x0]
   25eb0:	ldr	x0, [sp, #64]
   25eb4:	ldr	x0, [x0]
   25eb8:	sub	x1, x1, x0
   25ebc:	ldr	x0, [sp, #144]
   25ec0:	ldr	x2, [x0, #24]
   25ec4:	ldr	x0, [sp, #64]
   25ec8:	ldr	x0, [x0, #24]
   25ecc:	sub	x0, x2, x0
   25ed0:	cmp	x1, x0
   25ed4:	b.ne	25f2c <omp_get_place_proc_ids@@OMP_4.5+0x1550>  // b.any
   25ed8:	ldr	x0, [sp, #48]
   25edc:	add	x0, x0, #0x2
   25ee0:	lsl	x0, x0, #5
   25ee4:	ldr	x1, [sp, #72]
   25ee8:	add	x2, x1, x0
   25eec:	ldr	w0, [sp, #140]
   25ef0:	sxtb	w1, w0
   25ef4:	ldr	w0, [sp, #152]
   25ef8:	sxtb	w0, w0
   25efc:	and	w0, w1, w0
   25f00:	sxtb	w0, w0
   25f04:	and	w1, w0, #0xff
   25f08:	add	x0, sp, #0x50
   25f0c:	ldr	x5, [sp, #16]
   25f10:	mov	w4, w1
   25f14:	mov	x3, x2
   25f18:	mov	x2, x0
   25f1c:	ldr	x1, [sp, #144]
   25f20:	ldr	x0, [sp, #168]
   25f24:	bl	25904 <omp_get_place_proc_ids@@OMP_4.5+0xf28>
   25f28:	b	26028 <omp_get_place_proc_ids@@OMP_4.5+0x164c>
   25f2c:	ldr	x0, [sp, #88]
   25f30:	add	x0, x0, #0x1
   25f34:	str	x0, [sp, #88]
   25f38:	add	x0, sp, #0x50
   25f3c:	mov	x1, x0
   25f40:	ldr	x0, [sp, #160]
   25f44:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   25f48:	str	x0, [sp, #144]
   25f4c:	ldr	x0, [sp, #88]
   25f50:	sub	x0, x0, #0x1
   25f54:	str	x0, [sp, #88]
   25f58:	ldr	x0, [sp, #144]
   25f5c:	cmp	x0, #0x0
   25f60:	b.eq	26000 <omp_get_place_proc_ids@@OMP_4.5+0x1624>  // b.none
   25f64:	ldr	x0, [sp, #144]
   25f68:	ldr	x1, [x0, #16]
   25f6c:	ldr	x0, [sp, #64]
   25f70:	ldr	x0, [x0, #16]
   25f74:	cmp	x1, x0
   25f78:	b.ne	26000 <omp_get_place_proc_ids@@OMP_4.5+0x1624>  // b.any
   25f7c:	ldr	x0, [sp, #144]
   25f80:	ldr	x1, [x0]
   25f84:	ldr	x0, [sp, #64]
   25f88:	ldr	x0, [x0]
   25f8c:	sub	x1, x1, x0
   25f90:	ldr	x0, [sp, #144]
   25f94:	ldr	x2, [x0, #24]
   25f98:	ldr	x0, [sp, #64]
   25f9c:	ldr	x0, [x0, #24]
   25fa0:	sub	x0, x2, x0
   25fa4:	cmp	x1, x0
   25fa8:	b.ne	26000 <omp_get_place_proc_ids@@OMP_4.5+0x1624>  // b.any
   25fac:	ldr	x0, [sp, #48]
   25fb0:	add	x0, x0, #0x2
   25fb4:	lsl	x0, x0, #5
   25fb8:	ldr	x1, [sp, #72]
   25fbc:	add	x2, x1, x0
   25fc0:	ldr	w0, [sp, #140]
   25fc4:	sxtb	w1, w0
   25fc8:	ldr	w0, [sp, #152]
   25fcc:	sxtb	w0, w0
   25fd0:	and	w0, w1, w0
   25fd4:	sxtb	w0, w0
   25fd8:	and	w1, w0, #0xff
   25fdc:	add	x0, sp, #0x50
   25fe0:	ldr	x5, [sp, #16]
   25fe4:	mov	w4, w1
   25fe8:	mov	x3, x2
   25fec:	mov	x2, x0
   25ff0:	ldr	x1, [sp, #144]
   25ff4:	ldr	x0, [sp, #168]
   25ff8:	bl	25904 <omp_get_place_proc_ids@@OMP_4.5+0xf28>
   25ffc:	b	26028 <omp_get_place_proc_ids@@OMP_4.5+0x164c>
   26000:	ldr	x0, [sp, #168]
   26004:	add	x0, x0, #0xa8
   26008:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2600c:	ldr	x0, [sp, #80]
   26010:	mov	x1, x0
   26014:	ldr	x0, [sp, #88]
   26018:	mov	x2, x0
   2601c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   26020:	add	x0, x0, #0x8c8
   26024:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   26028:	ldp	x29, x30, [sp], #176
   2602c:	ret
   26030:	sub	sp, sp, #0x20
   26034:	str	x0, [sp, #24]
   26038:	str	x1, [sp, #16]
   2603c:	str	x2, [sp, #8]
   26040:	ldr	x1, [sp, #24]
   26044:	ldr	x0, [sp, #8]
   26048:	add	x0, x0, #0x2
   2604c:	lsl	x0, x0, #5
   26050:	add	x0, x1, x0
   26054:	ldr	x0, [x0]
   26058:	cmp	x0, #0x0
   2605c:	b.eq	260bc <omp_get_place_proc_ids@@OMP_4.5+0x16e0>  // b.none
   26060:	ldr	x1, [sp, #24]
   26064:	ldr	x0, [sp, #8]
   26068:	add	x0, x0, #0x2
   2606c:	lsl	x0, x0, #5
   26070:	add	x0, x1, x0
   26074:	ldr	x0, [x0]
   26078:	ldr	x0, [x0, #16]
   2607c:	ldr	x1, [x0, #16]
   26080:	ldr	x2, [sp, #24]
   26084:	ldr	x0, [sp, #8]
   26088:	add	x0, x0, #0x2
   2608c:	lsl	x0, x0, #5
   26090:	add	x0, x2, x0
   26094:	ldr	x0, [x0]
   26098:	ldr	x0, [x0, #24]
   2609c:	add	x1, x1, x0
   260a0:	ldr	x2, [sp, #24]
   260a4:	ldr	x0, [sp, #8]
   260a8:	lsl	x0, x0, #5
   260ac:	add	x0, x2, x0
   260b0:	ldr	x0, [x0, #80]
   260b4:	add	x0, x1, x0
   260b8:	b	261ec <omp_get_place_proc_ids@@OMP_4.5+0x1810>
   260bc:	ldr	x1, [sp, #24]
   260c0:	ldr	x0, [sp, #8]
   260c4:	lsl	x0, x0, #5
   260c8:	add	x0, x1, x0
   260cc:	ldr	x0, [x0, #80]
   260d0:	cmn	x0, #0x1
   260d4:	b.ne	260f0 <omp_get_place_proc_ids@@OMP_4.5+0x1714>  // b.any
   260d8:	ldr	x0, [sp, #8]
   260dc:	lsl	x0, x0, #3
   260e0:	ldr	x1, [sp, #16]
   260e4:	add	x0, x1, x0
   260e8:	ldr	x0, [x0]
   260ec:	b	261ec <omp_get_place_proc_ids@@OMP_4.5+0x1810>
   260f0:	ldr	x1, [sp, #24]
   260f4:	ldr	x0, [sp, #8]
   260f8:	lsl	x0, x0, #5
   260fc:	add	x0, x1, x0
   26100:	ldr	x0, [x0, #80]
   26104:	cmn	x0, #0x2
   26108:	b.ne	26114 <omp_get_place_proc_ids@@OMP_4.5+0x1738>  // b.any
   2610c:	mov	x0, #0x0                   	// #0
   26110:	b	261ec <omp_get_place_proc_ids@@OMP_4.5+0x1810>
   26114:	ldr	x1, [sp, #24]
   26118:	ldr	x0, [sp, #8]
   2611c:	lsl	x0, x0, #5
   26120:	add	x0, x1, x0
   26124:	ldr	x0, [x0, #80]
   26128:	cmn	x0, #0x3
   2612c:	b.ne	261cc <omp_get_place_proc_ids@@OMP_4.5+0x17f0>  // b.any
   26130:	ldr	x0, [sp, #8]
   26134:	add	x0, x0, #0x1
   26138:	ldr	x1, [sp, #24]
   2613c:	add	x0, x0, #0x2
   26140:	lsl	x0, x0, #5
   26144:	add	x0, x1, x0
   26148:	ldr	x0, [x0]
   2614c:	ldr	x0, [x0, #16]
   26150:	ldr	x1, [x0, #16]
   26154:	ldr	x0, [sp, #8]
   26158:	add	x0, x0, #0x1
   2615c:	ldr	x2, [sp, #24]
   26160:	add	x0, x0, #0x2
   26164:	lsl	x0, x0, #5
   26168:	add	x0, x2, x0
   2616c:	ldr	x0, [x0]
   26170:	ldr	x0, [x0, #24]
   26174:	add	x1, x1, x0
   26178:	ldr	x0, [sp, #8]
   2617c:	add	x0, x0, #0x1
   26180:	ldr	x2, [sp, #24]
   26184:	lsl	x0, x0, #5
   26188:	add	x0, x2, x0
   2618c:	ldr	x0, [x0, #80]
   26190:	add	x0, x1, x0
   26194:	ldr	x1, [sp, #8]
   26198:	lsl	x1, x1, #3
   2619c:	ldr	x2, [sp, #16]
   261a0:	add	x1, x2, x1
   261a4:	ldr	x1, [x1]
   261a8:	add	x0, x0, x1
   261ac:	ldr	x1, [sp, #8]
   261b0:	add	x1, x1, #0x1
   261b4:	lsl	x1, x1, #3
   261b8:	ldr	x2, [sp, #16]
   261bc:	add	x1, x2, x1
   261c0:	ldr	x1, [x1]
   261c4:	sub	x0, x0, x1
   261c8:	b	261ec <omp_get_place_proc_ids@@OMP_4.5+0x1810>
   261cc:	ldr	x0, [sp, #24]
   261d0:	ldr	x1, [x0, #16]
   261d4:	ldr	x2, [sp, #24]
   261d8:	ldr	x0, [sp, #8]
   261dc:	lsl	x0, x0, #5
   261e0:	add	x0, x2, x0
   261e4:	ldr	x0, [x0, #80]
   261e8:	add	x0, x1, x0
   261ec:	add	sp, sp, #0x20
   261f0:	ret
   261f4:	stp	x29, x30, [sp, #-496]!
   261f8:	mov	x29, sp
   261fc:	str	x0, [x29, #72]
   26200:	str	x1, [x29, #64]
   26204:	str	x2, [x29, #56]
   26208:	str	x3, [x29, #48]
   2620c:	str	x4, [x29, #40]
   26210:	str	x5, [x29, #32]
   26214:	strb	w6, [x29, #31]
   26218:	str	w7, [x29, #24]
   2621c:	str	xzr, [x29, #464]
   26220:	strb	wzr, [x29, #463]
   26224:	ldrb	w0, [x29, #31]
   26228:	cmp	w0, #0x0
   2622c:	b.eq	26238 <omp_get_place_proc_ids@@OMP_4.5+0x185c>  // b.none
   26230:	mov	w0, #0x8                   	// #8
   26234:	b	2623c <omp_get_place_proc_ids@@OMP_4.5+0x1860>
   26238:	mov	w0, #0x3                   	// #3
   2623c:	str	w0, [x29, #372]
   26240:	ldrb	w0, [x29, #31]
   26244:	cmp	w0, #0x0
   26248:	b.eq	26254 <omp_get_place_proc_ids@@OMP_4.5+0x1878>  // b.none
   2624c:	mov	w0, #0xff                  	// #255
   26250:	b	26258 <omp_get_place_proc_ids@@OMP_4.5+0x187c>
   26254:	mov	w0, #0x7                   	// #7
   26258:	str	w0, [x29, #368]
   2625c:	ldr	x0, [x29, #72]
   26260:	add	x0, x0, #0xa0
   26264:	str	x0, [x29, #360]
   26268:	ldr	x0, [x29, #64]
   2626c:	add	x0, x0, #0x2
   26270:	lsl	x0, x0, #5
   26274:	bl	8dd0 <fprintf@plt+0x1a0>
   26278:	str	x0, [x29, #448]
   2627c:	ldr	x0, [x29, #448]
   26280:	ldr	x1, [x29, #64]
   26284:	str	x1, [x0, #48]
   26288:	ldr	w0, [x29, #24]
   2628c:	cmp	w0, #0x3
   26290:	cset	w0, ne  // ne = any
   26294:	and	w0, w0, #0xff
   26298:	and	x1, x0, #0xff
   2629c:	ldr	x0, [x29, #448]
   262a0:	str	x1, [x0]
   262a4:	ldr	x0, [x29, #448]
   262a8:	ldr	x1, [x29, #72]
   262ac:	str	x1, [x0, #56]
   262b0:	str	xzr, [x29, #440]
   262b4:	ldr	x0, [x29, #64]
   262b8:	cmp	x0, #0x0
   262bc:	b.ne	262d8 <omp_get_place_proc_ids@@OMP_4.5+0x18fc>  // b.any
   262c0:	ldr	x0, [x29, #448]
   262c4:	str	xzr, [x0, #16]
   262c8:	ldr	x0, [x29, #448]
   262cc:	str	xzr, [x0, #24]
   262d0:	ldr	x0, [x29, #448]
   262d4:	b	27cf8 <omp_get_place_proc_ids@@OMP_4.5+0x331c>
   262d8:	mov	x0, #0x8                   	// #8
   262dc:	str	x0, [x29, #480]
   262e0:	str	xzr, [x29, #472]
   262e4:	str	xzr, [x29, #112]
   262e8:	mov	x0, #0xffffffffffffffff    	// #-1
   262ec:	str	x0, [x29, #120]
   262f0:	str	xzr, [x29, #128]
   262f4:	str	xzr, [x29, #96]
   262f8:	ldr	x0, [x29, #64]
   262fc:	cmp	x0, #0x1
   26300:	b.hi	26310 <omp_get_place_proc_ids@@OMP_4.5+0x1934>  // b.pmore
   26304:	ldr	w0, [x29, #24]
   26308:	cmp	w0, #0x1
   2630c:	b.ne	2634c <omp_get_place_proc_ids@@OMP_4.5+0x1970>  // b.any
   26310:	ldr	x0, [x29, #64]
   26314:	add	x0, x0, #0x1
   26318:	lsl	x0, x0, #4
   2631c:	str	x0, [x29, #352]
   26320:	ldr	x0, [x29, #352]
   26324:	add	x0, x0, #0xf
   26328:	lsr	x0, x0, #4
   2632c:	lsl	x0, x0, #4
   26330:	sub	sp, sp, x0
   26334:	mov	x0, sp
   26338:	add	x0, x0, #0xf
   2633c:	lsr	x0, x0, #4
   26340:	lsl	x0, x0, #4
   26344:	str	x0, [x29, #112]
   26348:	str	xzr, [x29, #120]
   2634c:	ldr	w0, [x29, #24]
   26350:	cmp	w0, #0x1
   26354:	b.ne	263ac <omp_get_place_proc_ids@@OMP_4.5+0x19d0>  // b.any
   26358:	mov	x0, #0x20                  	// #32
   2635c:	str	x0, [x29, #344]
   26360:	ldr	x0, [x29, #344]
   26364:	str	x0, [x29, #480]
   26368:	ldr	x0, [x29, #64]
   2636c:	lsl	x0, x0, #3
   26370:	str	x0, [x29, #472]
   26374:	mov	x0, #0x1                   	// #1
   26378:	str	x0, [x29, #120]
   2637c:	ldr	x0, [x29, #64]
   26380:	cmp	x0, #0x1
   26384:	b.ls	26390 <omp_get_place_proc_ids@@OMP_4.5+0x19b4>  // b.plast
   26388:	mov	x0, #0x2                   	// #2
   2638c:	b	26394 <omp_get_place_proc_ids@@OMP_4.5+0x19b8>
   26390:	mov	x0, #0x1                   	// #1
   26394:	str	x0, [x29, #128]
   26398:	ldr	x0, [x29, #112]
   2639c:	str	xzr, [x0]
   263a0:	ldr	x0, [x29, #112]
   263a4:	ldr	x1, [x29, #472]
   263a8:	str	x1, [x0, #8]
   263ac:	ldr	x0, [x29, #72]
   263b0:	add	x0, x0, #0xa8
   263b4:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   263b8:	ldr	x0, [x29, #72]
   263bc:	ldr	w0, [x0, #172]
   263c0:	cmp	w0, #0x2
   263c4:	b.ne	263e4 <omp_get_place_proc_ids@@OMP_4.5+0x1a08>  // b.any
   263c8:	ldr	x0, [x29, #72]
   263cc:	add	x0, x0, #0xa8
   263d0:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   263d4:	ldr	x0, [x29, #448]
   263d8:	bl	8a20 <free@plt>
   263dc:	mov	x0, #0x0                   	// #0
   263e0:	b	27cf8 <omp_get_place_proc_ids@@OMP_4.5+0x331c>
   263e4:	str	xzr, [x29, #488]
   263e8:	b	26bfc <omp_get_place_proc_ids@@OMP_4.5+0x2220>
   263ec:	ldr	x0, [x29, #488]
   263f0:	mov	w2, w0
   263f4:	ldr	x1, [x29, #32]
   263f8:	ldrb	w0, [x29, #31]
   263fc:	bl	25b0c <omp_get_place_proc_ids@@OMP_4.5+0x1130>
   26400:	str	w0, [x29, #252]
   26404:	ldr	x0, [x29, #488]
   26408:	lsl	x0, x0, #3
   2640c:	ldr	x1, [x29, #56]
   26410:	add	x0, x1, x0
   26414:	ldr	x0, [x0]
   26418:	cmp	x0, #0x0
   2641c:	b.eq	26434 <omp_get_place_proc_ids@@OMP_4.5+0x1a58>  // b.none
   26420:	ldr	w1, [x29, #252]
   26424:	ldr	w0, [x29, #368]
   26428:	and	w0, w1, w0
   2642c:	cmp	w0, #0xd
   26430:	b.ne	26468 <omp_get_place_proc_ids@@OMP_4.5+0x1a8c>  // b.any
   26434:	ldr	x1, [x29, #448]
   26438:	ldr	x0, [x29, #488]
   2643c:	add	x0, x0, #0x2
   26440:	lsl	x0, x0, #5
   26444:	add	x0, x1, x0
   26448:	str	xzr, [x0]
   2644c:	ldr	x1, [x29, #448]
   26450:	ldr	x0, [x29, #488]
   26454:	lsl	x0, x0, #5
   26458:	add	x0, x1, x0
   2645c:	mov	x1, #0xffffffffffffffff    	// #-1
   26460:	str	x1, [x0, #80]
   26464:	b	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>
   26468:	ldr	w1, [x29, #252]
   2646c:	ldr	w0, [x29, #368]
   26470:	and	w0, w1, w0
   26474:	cmp	w0, #0xe
   26478:	b.ne	26554 <omp_get_place_proc_ids@@OMP_4.5+0x1b78>  // b.any
   2647c:	ldr	x0, [x29, #488]
   26480:	lsl	x0, x0, #3
   26484:	ldr	x1, [x29, #56]
   26488:	add	x0, x1, x0
   2648c:	ldr	x0, [x0]
   26490:	str	x0, [x29, #136]
   26494:	ldr	x0, [x29, #136]
   26498:	str	x0, [x29, #144]
   2649c:	add	x0, x29, #0x88
   264a0:	mov	x1, x0
   264a4:	ldr	x0, [x29, #360]
   264a8:	bl	25294 <omp_get_place_proc_ids@@OMP_4.5+0x8b8>
   264ac:	str	x0, [x29, #192]
   264b0:	ldr	x0, [x29, #192]
   264b4:	cmp	x0, #0x0
   264b8:	b.ne	264d4 <omp_get_place_proc_ids@@OMP_4.5+0x1af8>  // b.any
   264bc:	ldr	x0, [x29, #72]
   264c0:	add	x0, x0, #0xa8
   264c4:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   264c8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   264cc:	add	x0, x0, #0x950
   264d0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   264d4:	ldr	x1, [x29, #136]
   264d8:	ldr	x0, [x29, #192]
   264dc:	ldr	x0, [x0]
   264e0:	sub	x0, x1, x0
   264e4:	str	x0, [x29, #136]
   264e8:	ldr	x0, [x29, #192]
   264ec:	ldr	x0, [x0, #16]
   264f0:	ldr	x1, [x0, #16]
   264f4:	ldr	x0, [x29, #192]
   264f8:	ldr	x0, [x0, #24]
   264fc:	add	x1, x1, x0
   26500:	ldr	x0, [x29, #136]
   26504:	add	x2, x1, x0
   26508:	ldr	x0, [x29, #488]
   2650c:	lsl	x0, x0, #3
   26510:	ldr	x1, [x29, #56]
   26514:	add	x0, x1, x0
   26518:	mov	x1, x2
   2651c:	str	x1, [x0]
   26520:	ldr	x1, [x29, #448]
   26524:	ldr	x0, [x29, #488]
   26528:	add	x0, x0, #0x2
   2652c:	lsl	x0, x0, #5
   26530:	add	x0, x1, x0
   26534:	str	xzr, [x0]
   26538:	ldr	x1, [x29, #448]
   2653c:	ldr	x0, [x29, #488]
   26540:	lsl	x0, x0, #5
   26544:	add	x0, x1, x0
   26548:	mov	x1, #0xffffffffffffffff    	// #-1
   2654c:	str	x1, [x0, #80]
   26550:	b	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>
   26554:	ldr	w1, [x29, #252]
   26558:	ldr	w0, [x29, #368]
   2655c:	and	w0, w1, w0
   26560:	cmp	w0, #0x1c
   26564:	b.ne	267fc <omp_get_place_proc_ids@@OMP_4.5+0x1e20>  // b.any
   26568:	ldr	x0, [x29, #488]
   2656c:	add	x0, x0, #0x1
   26570:	str	x0, [x29, #224]
   26574:	ldr	x0, [x29, #488]
   26578:	lsl	x0, x0, #3
   2657c:	ldr	x1, [x29, #40]
   26580:	add	x0, x1, x0
   26584:	ldr	x0, [x0]
   26588:	ldr	x1, [x29, #488]
   2658c:	add	x0, x1, x0
   26590:	str	x0, [x29, #216]
   26594:	ldr	x0, [x29, #488]
   26598:	lsl	x0, x0, #3
   2659c:	ldr	x1, [x29, #56]
   265a0:	add	x0, x1, x0
   265a4:	ldr	x0, [x0]
   265a8:	str	x0, [x29, #136]
   265ac:	ldr	x0, [x29, #216]
   265b0:	lsl	x0, x0, #3
   265b4:	ldr	x1, [x29, #56]
   265b8:	add	x0, x1, x0
   265bc:	ldr	x0, [x0]
   265c0:	mov	x2, x0
   265c4:	ldr	x0, [x29, #216]
   265c8:	lsl	x0, x0, #3
   265cc:	ldr	x1, [x29, #40]
   265d0:	add	x0, x1, x0
   265d4:	ldr	x0, [x0]
   265d8:	add	x0, x2, x0
   265dc:	str	x0, [x29, #144]
   265e0:	ldr	x1, [x29, #448]
   265e4:	ldr	x0, [x29, #488]
   265e8:	add	x0, x0, #0x2
   265ec:	lsl	x0, x0, #5
   265f0:	add	x0, x1, x0
   265f4:	str	xzr, [x0]
   265f8:	ldr	x1, [x29, #448]
   265fc:	ldr	x0, [x29, #488]
   26600:	lsl	x0, x0, #5
   26604:	add	x0, x1, x0
   26608:	mov	x1, #0xfffffffffffffffd    	// #-3
   2660c:	str	x1, [x0, #80]
   26610:	add	x0, x29, #0x88
   26614:	mov	x1, x0
   26618:	ldr	x0, [x29, #360]
   2661c:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   26620:	str	x0, [x29, #208]
   26624:	ldr	x0, [x29, #208]
   26628:	cmp	x0, #0x0
   2662c:	b.ne	267a0 <omp_get_place_proc_ids@@OMP_4.5+0x1dc4>  // b.any
   26630:	ldr	w0, [x29, #372]
   26634:	ldr	w1, [x29, #252]
   26638:	asr	w0, w1, w0
   2663c:	mov	x1, #0x1                   	// #1
   26640:	lsl	x0, x1, x0
   26644:	str	x0, [x29, #200]
   26648:	ldr	x1, [x29, #480]
   2664c:	ldr	x0, [x29, #200]
   26650:	cmp	x1, x0
   26654:	b.cs	26660 <omp_get_place_proc_ids@@OMP_4.5+0x1c84>  // b.hs, b.nlast
   26658:	ldr	x0, [x29, #200]
   2665c:	str	x0, [x29, #480]
   26660:	ldr	x0, [x29, #136]
   26664:	ldr	x1, [x29, #224]
   26668:	lsl	x1, x1, #3
   2666c:	ldr	x2, [x29, #56]
   26670:	add	x1, x2, x1
   26674:	ldr	x1, [x1]
   26678:	sub	x0, x0, x1
   2667c:	ldr	x1, [x29, #472]
   26680:	add	x0, x1, x0
   26684:	str	x0, [x29, #472]
   26688:	ldr	x1, [x29, #472]
   2668c:	ldr	x0, [x29, #200]
   26690:	add	x0, x1, x0
   26694:	sub	x1, x0, #0x1
   26698:	ldr	x0, [x29, #200]
   2669c:	neg	x0, x0
   266a0:	and	x0, x1, x0
   266a4:	str	x0, [x29, #472]
   266a8:	ldr	x1, [x29, #144]
   266ac:	ldr	x0, [x29, #136]
   266b0:	sub	x0, x1, x0
   266b4:	ldr	x1, [x29, #472]
   266b8:	add	x0, x1, x0
   266bc:	str	x0, [x29, #472]
   266c0:	ldr	x1, [x29, #216]
   266c4:	ldr	x0, [x29, #488]
   266c8:	sub	x0, x1, x0
   266cc:	ldr	x1, [x29, #464]
   266d0:	add	x0, x1, x0
   266d4:	str	x0, [x29, #464]
   266d8:	ldr	x0, [x29, #224]
   266dc:	str	x0, [x29, #488]
   266e0:	b	26780 <omp_get_place_proc_ids@@OMP_4.5+0x1da4>
   266e4:	ldr	x1, [x29, #448]
   266e8:	ldr	x0, [x29, #488]
   266ec:	add	x0, x0, #0x2
   266f0:	lsl	x0, x0, #5
   266f4:	add	x0, x1, x0
   266f8:	str	xzr, [x0]
   266fc:	ldr	x0, [x29, #488]
   26700:	mov	w2, w0
   26704:	ldr	x1, [x29, #32]
   26708:	ldrb	w0, [x29, #31]
   2670c:	bl	25b0c <omp_get_place_proc_ids@@OMP_4.5+0x1130>
   26710:	mov	w1, w0
   26714:	ldr	w0, [x29, #368]
   26718:	and	w0, w1, w0
   2671c:	bl	25638 <omp_get_place_proc_ids@@OMP_4.5+0xc5c>
   26720:	and	w0, w0, #0xff
   26724:	cmp	w0, #0x0
   26728:	b.eq	26774 <omp_get_place_proc_ids@@OMP_4.5+0x1d98>  // b.none
   2672c:	ldr	x0, [x29, #144]
   26730:	ldr	x1, [x29, #472]
   26734:	sub	x0, x1, x0
   26738:	ldr	x1, [x29, #488]
   2673c:	lsl	x1, x1, #3
   26740:	ldr	x2, [x29, #56]
   26744:	add	x1, x2, x1
   26748:	ldr	x1, [x1]
   2674c:	add	x3, x0, x1
   26750:	ldr	x0, [x29, #488]
   26754:	lsl	x0, x0, #3
   26758:	ldr	x1, [x29, #40]
   2675c:	add	x0, x1, x0
   26760:	ldr	x1, [x0]
   26764:	add	x0, x29, #0x60
   26768:	mov	x2, x1
   2676c:	mov	x1, x3
   26770:	bl	2549c <omp_get_place_proc_ids@@OMP_4.5+0xac0>
   26774:	ldr	x0, [x29, #488]
   26778:	add	x0, x0, #0x1
   2677c:	str	x0, [x29, #488]
   26780:	ldr	x1, [x29, #488]
   26784:	ldr	x0, [x29, #216]
   26788:	cmp	x1, x0
   2678c:	b.ls	266e4 <omp_get_place_proc_ids@@OMP_4.5+0x1d08>  // b.plast
   26790:	ldr	x0, [x29, #488]
   26794:	sub	x0, x0, #0x1
   26798:	str	x0, [x29, #488]
   2679c:	b	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>
   267a0:	ldr	x0, [x29, #224]
   267a4:	str	x0, [x29, #488]
   267a8:	b	267dc <omp_get_place_proc_ids@@OMP_4.5+0x1e00>
   267ac:	mov	x7, #0x0                   	// #0
   267b0:	ldr	x6, [x29, #32]
   267b4:	ldr	x5, [x29, #40]
   267b8:	ldr	x4, [x29, #56]
   267bc:	ldr	x3, [x29, #488]
   267c0:	ldr	x2, [x29, #224]
   267c4:	ldr	x1, [x29, #208]
   267c8:	ldr	x0, [x29, #448]
   267cc:	bl	25ca8 <omp_get_place_proc_ids@@OMP_4.5+0x12cc>
   267d0:	ldr	x0, [x29, #488]
   267d4:	add	x0, x0, #0x1
   267d8:	str	x0, [x29, #488]
   267dc:	ldr	x1, [x29, #488]
   267e0:	ldr	x0, [x29, #216]
   267e4:	cmp	x1, x0
   267e8:	b.ls	267ac <omp_get_place_proc_ids@@OMP_4.5+0x1dd0>  // b.plast
   267ec:	ldr	x0, [x29, #488]
   267f0:	sub	x0, x0, #0x1
   267f4:	str	x0, [x29, #488]
   267f8:	b	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>
   267fc:	ldr	w1, [x29, #252]
   26800:	ldr	w0, [x29, #368]
   26804:	and	w0, w1, w0
   26808:	cmp	w0, #0x1d
   2680c:	b.ne	2684c <omp_get_place_proc_ids@@OMP_4.5+0x1e70>  // b.any
   26810:	ldr	x1, [x29, #448]
   26814:	ldr	x0, [x29, #488]
   26818:	add	x0, x0, #0x2
   2681c:	lsl	x0, x0, #5
   26820:	add	x0, x1, x0
   26824:	str	xzr, [x0]
   26828:	ldr	x1, [x29, #448]
   2682c:	ldr	x0, [x29, #488]
   26830:	lsl	x0, x0, #5
   26834:	add	x0, x1, x0
   26838:	mov	x1, #0xfffffffffffffffe    	// #-2
   2683c:	str	x1, [x0, #80]
   26840:	mov	w0, #0x1                   	// #1
   26844:	strb	w0, [x29, #463]
   26848:	b	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>
   2684c:	ldr	x0, [x29, #488]
   26850:	lsl	x0, x0, #3
   26854:	ldr	x1, [x29, #56]
   26858:	add	x0, x1, x0
   2685c:	ldr	x0, [x0]
   26860:	str	x0, [x29, #136]
   26864:	ldr	w1, [x29, #252]
   26868:	ldr	w0, [x29, #368]
   2686c:	and	w0, w1, w0
   26870:	cmp	w0, #0x4
   26874:	b.eq	2689c <omp_get_place_proc_ids@@OMP_4.5+0x1ec0>  // b.none
   26878:	ldr	x1, [x29, #136]
   2687c:	ldr	x0, [x29, #488]
   26880:	lsl	x0, x0, #3
   26884:	ldr	x2, [x29, #40]
   26888:	add	x0, x2, x0
   2688c:	ldr	x0, [x0]
   26890:	add	x0, x1, x0
   26894:	str	x0, [x29, #144]
   26898:	b	268a8 <omp_get_place_proc_ids@@OMP_4.5+0x1ecc>
   2689c:	ldr	x0, [x29, #136]
   268a0:	add	x0, x0, #0x8
   268a4:	str	x0, [x29, #144]
   268a8:	ldr	w1, [x29, #252]
   268ac:	ldr	w0, [x29, #368]
   268b0:	and	w0, w1, w0
   268b4:	cmp	w0, #0xc
   268b8:	b.ne	26964 <omp_get_place_proc_ids@@OMP_4.5+0x1f88>  // b.any
   268bc:	ldr	x1, [x29, #448]
   268c0:	ldr	x0, [x29, #488]
   268c4:	add	x0, x0, #0x2
   268c8:	lsl	x0, x0, #5
   268cc:	add	x0, x1, x0
   268d0:	str	xzr, [x0]
   268d4:	ldr	w0, [x29, #372]
   268d8:	ldr	w1, [x29, #252]
   268dc:	asr	w0, w1, w0
   268e0:	mov	x1, #0x1                   	// #1
   268e4:	lsl	x0, x1, x0
   268e8:	str	x0, [x29, #232]
   268ec:	ldr	x1, [x29, #480]
   268f0:	ldr	x0, [x29, #232]
   268f4:	cmp	x1, x0
   268f8:	b.cs	26904 <omp_get_place_proc_ids@@OMP_4.5+0x1f28>  // b.hs, b.nlast
   268fc:	ldr	x0, [x29, #232]
   26900:	str	x0, [x29, #480]
   26904:	ldr	x1, [x29, #472]
   26908:	ldr	x0, [x29, #232]
   2690c:	add	x0, x1, x0
   26910:	sub	x1, x0, #0x1
   26914:	ldr	x0, [x29, #232]
   26918:	neg	x0, x0
   2691c:	and	x0, x1, x0
   26920:	str	x0, [x29, #472]
   26924:	ldr	x1, [x29, #144]
   26928:	ldr	x0, [x29, #136]
   2692c:	sub	x1, x1, x0
   26930:	add	x0, x29, #0x60
   26934:	mov	x2, x1
   26938:	ldr	x1, [x29, #472]
   2693c:	bl	2549c <omp_get_place_proc_ids@@OMP_4.5+0xac0>
   26940:	ldr	x1, [x29, #144]
   26944:	ldr	x0, [x29, #136]
   26948:	sub	x0, x1, x0
   2694c:	ldr	x1, [x29, #472]
   26950:	add	x0, x1, x0
   26954:	str	x0, [x29, #472]
   26958:	mov	w0, #0x1                   	// #1
   2695c:	strb	w0, [x29, #463]
   26960:	b	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>
   26964:	ldr	w1, [x29, #252]
   26968:	ldr	w0, [x29, #368]
   2696c:	and	w0, w1, w0
   26970:	cmp	w0, #0xf
   26974:	b.ne	269cc <omp_get_place_proc_ids@@OMP_4.5+0x1ff0>  // b.any
   26978:	add	x0, x29, #0x88
   2697c:	mov	x1, x0
   26980:	ldr	x0, [x29, #360]
   26984:	bl	25378 <omp_get_place_proc_ids@@OMP_4.5+0x99c>
   26988:	str	x0, [x29, #432]
   2698c:	ldr	x0, [x29, #432]
   26990:	cmp	x0, #0x0
   26994:	b.ne	269e0 <omp_get_place_proc_ids@@OMP_4.5+0x2004>  // b.any
   26998:	ldr	x1, [x29, #448]
   2699c:	ldr	x0, [x29, #488]
   269a0:	add	x0, x0, #0x2
   269a4:	lsl	x0, x0, #5
   269a8:	add	x0, x1, x0
   269ac:	str	xzr, [x0]
   269b0:	ldr	x1, [x29, #448]
   269b4:	ldr	x0, [x29, #488]
   269b8:	lsl	x0, x0, #5
   269bc:	add	x0, x1, x0
   269c0:	mov	x1, #0xfffffffffffffffe    	// #-2
   269c4:	str	x1, [x0, #80]
   269c8:	b	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>
   269cc:	add	x0, x29, #0x88
   269d0:	mov	x1, x0
   269d4:	ldr	x0, [x29, #360]
   269d8:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   269dc:	str	x0, [x29, #432]
   269e0:	ldr	x0, [x29, #432]
   269e4:	cmp	x0, #0x0
   269e8:	b.eq	26a50 <omp_get_place_proc_ids@@OMP_4.5+0x2074>  // b.none
   269ec:	ldr	x0, [x29, #432]
   269f0:	ldr	x0, [x0, #32]
   269f4:	cmn	x0, #0x2
   269f8:	b.eq	26a50 <omp_get_place_proc_ids@@OMP_4.5+0x2074>  // b.none
   269fc:	ldr	x0, [x29, #488]
   26a00:	add	x0, x0, #0x2
   26a04:	lsl	x0, x0, #5
   26a08:	ldr	x1, [x29, #448]
   26a0c:	add	x2, x1, x0
   26a10:	ldr	w0, [x29, #252]
   26a14:	sxtb	w1, w0
   26a18:	ldr	w0, [x29, #368]
   26a1c:	sxtb	w0, w0
   26a20:	and	w0, w1, w0
   26a24:	sxtb	w0, w0
   26a28:	and	w1, w0, #0xff
   26a2c:	add	x0, x29, #0x88
   26a30:	mov	x5, #0x0                   	// #0
   26a34:	mov	w4, w1
   26a38:	mov	x3, x2
   26a3c:	mov	x2, x0
   26a40:	ldr	x1, [x29, #432]
   26a44:	ldr	x0, [x29, #72]
   26a48:	bl	25904 <omp_get_place_proc_ids@@OMP_4.5+0xf28>
   26a4c:	b	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>
   26a50:	ldr	x1, [x29, #448]
   26a54:	ldr	x0, [x29, #488]
   26a58:	add	x0, x0, #0x2
   26a5c:	lsl	x0, x0, #5
   26a60:	add	x0, x1, x0
   26a64:	str	xzr, [x0]
   26a68:	ldr	w0, [x29, #372]
   26a6c:	ldr	w1, [x29, #252]
   26a70:	asr	w0, w1, w0
   26a74:	mov	x1, #0x1                   	// #1
   26a78:	lsl	x0, x1, x0
   26a7c:	str	x0, [x29, #240]
   26a80:	ldr	x0, [x29, #464]
   26a84:	add	x0, x0, #0x1
   26a88:	str	x0, [x29, #464]
   26a8c:	ldr	x1, [x29, #480]
   26a90:	ldr	x0, [x29, #240]
   26a94:	cmp	x1, x0
   26a98:	b.cs	26aa4 <omp_get_place_proc_ids@@OMP_4.5+0x20c8>  // b.hs, b.nlast
   26a9c:	ldr	x0, [x29, #240]
   26aa0:	str	x0, [x29, #480]
   26aa4:	ldr	x1, [x29, #472]
   26aa8:	ldr	x0, [x29, #240]
   26aac:	add	x0, x1, x0
   26ab0:	sub	x1, x0, #0x1
   26ab4:	ldr	x0, [x29, #240]
   26ab8:	neg	x0, x0
   26abc:	and	x0, x1, x0
   26ac0:	str	x0, [x29, #472]
   26ac4:	ldr	w1, [x29, #252]
   26ac8:	ldr	w0, [x29, #368]
   26acc:	and	w0, w1, w0
   26ad0:	bl	25638 <omp_get_place_proc_ids@@OMP_4.5+0xc5c>
   26ad4:	and	w0, w0, #0xff
   26ad8:	cmp	w0, #0x0
   26adc:	b.eq	26afc <omp_get_place_proc_ids@@OMP_4.5+0x2120>  // b.none
   26ae0:	ldr	x1, [x29, #144]
   26ae4:	ldr	x0, [x29, #136]
   26ae8:	sub	x1, x1, x0
   26aec:	add	x0, x29, #0x60
   26af0:	mov	x2, x1
   26af4:	ldr	x1, [x29, #472]
   26af8:	bl	2549c <omp_get_place_proc_ids@@OMP_4.5+0xac0>
   26afc:	ldr	x1, [x29, #144]
   26b00:	ldr	x0, [x29, #136]
   26b04:	sub	x0, x1, x0
   26b08:	ldr	x1, [x29, #472]
   26b0c:	add	x0, x1, x0
   26b10:	str	x0, [x29, #472]
   26b14:	ldr	w1, [x29, #252]
   26b18:	ldr	w0, [x29, #368]
   26b1c:	and	w0, w1, w0
   26b20:	cmp	w0, #0x5
   26b24:	b.ne	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>  // b.any
   26b28:	ldr	x0, [x29, #488]
   26b2c:	add	x0, x0, #0x1
   26b30:	str	x0, [x29, #424]
   26b34:	b	26bd8 <omp_get_place_proc_ids@@OMP_4.5+0x21fc>
   26b38:	ldr	x0, [x29, #424]
   26b3c:	mov	w2, w0
   26b40:	ldr	x1, [x29, #32]
   26b44:	ldrb	w0, [x29, #31]
   26b48:	bl	25b0c <omp_get_place_proc_ids@@OMP_4.5+0x1130>
   26b4c:	mov	w1, w0
   26b50:	ldr	w0, [x29, #368]
   26b54:	and	w0, w1, w0
   26b58:	cmp	w0, #0x4
   26b5c:	b.ne	26bec <omp_get_place_proc_ids@@OMP_4.5+0x2210>  // b.any
   26b60:	ldr	x0, [x29, #424]
   26b64:	lsl	x0, x0, #3
   26b68:	ldr	x1, [x29, #56]
   26b6c:	add	x0, x1, x0
   26b70:	ldr	x0, [x0]
   26b74:	mov	x1, x0
   26b78:	ldr	x0, [x29, #136]
   26b7c:	cmp	x1, x0
   26b80:	b.cc	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>  // b.lo, b.ul, b.last
   26b84:	ldr	x0, [x29, #424]
   26b88:	lsl	x0, x0, #3
   26b8c:	ldr	x1, [x29, #56]
   26b90:	add	x0, x1, x0
   26b94:	ldr	x0, [x0]
   26b98:	add	x1, x0, #0x8
   26b9c:	ldr	x0, [x29, #144]
   26ba0:	cmp	x1, x0
   26ba4:	b.hi	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>  // b.pmore
   26ba8:	ldr	x1, [x29, #448]
   26bac:	ldr	x0, [x29, #424]
   26bb0:	add	x0, x0, #0x2
   26bb4:	lsl	x0, x0, #5
   26bb8:	add	x0, x1, x0
   26bbc:	str	xzr, [x0]
   26bc0:	ldr	x0, [x29, #488]
   26bc4:	add	x0, x0, #0x1
   26bc8:	str	x0, [x29, #488]
   26bcc:	ldr	x0, [x29, #424]
   26bd0:	add	x0, x0, #0x1
   26bd4:	str	x0, [x29, #424]
   26bd8:	ldr	x1, [x29, #424]
   26bdc:	ldr	x0, [x29, #64]
   26be0:	cmp	x1, x0
   26be4:	b.cc	26b38 <omp_get_place_proc_ids@@OMP_4.5+0x215c>  // b.lo, b.ul, b.last
   26be8:	b	26bf0 <omp_get_place_proc_ids@@OMP_4.5+0x2214>
   26bec:	nop
   26bf0:	ldr	x0, [x29, #488]
   26bf4:	add	x0, x0, #0x1
   26bf8:	str	x0, [x29, #488]
   26bfc:	ldr	x1, [x29, #488]
   26c00:	ldr	x0, [x29, #64]
   26c04:	cmp	x1, x0
   26c08:	b.cc	263ec <omp_get_place_proc_ids@@OMP_4.5+0x1a10>  // b.lo, b.ul, b.last
   26c0c:	ldr	x0, [x29, #48]
   26c10:	cmp	x0, #0x0
   26c14:	b.eq	26c80 <omp_get_place_proc_ids@@OMP_4.5+0x22a4>  // b.none
   26c18:	ldr	x0, [x29, #64]
   26c1c:	cmp	x0, #0x1
   26c20:	b.eq	26c3c <omp_get_place_proc_ids@@OMP_4.5+0x2260>  // b.none
   26c24:	ldr	x0, [x29, #72]
   26c28:	add	x0, x0, #0xa8
   26c2c:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   26c30:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   26c34:	add	x0, x0, #0x978
   26c38:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   26c3c:	ldr	x0, [x29, #48]
   26c40:	ldr	x1, [x0]
   26c44:	ldr	x0, [x29, #448]
   26c48:	str	x1, [x0, #32]
   26c4c:	ldr	x0, [x29, #448]
   26c50:	ldr	x0, [x0, #32]
   26c54:	mov	x1, x0
   26c58:	ldr	x0, [x29, #448]
   26c5c:	str	x1, [x0, #16]
   26c60:	ldr	x0, [x29, #448]
   26c64:	ldr	x1, [x0, #16]
   26c68:	ldr	x0, [x29, #40]
   26c6c:	ldr	x0, [x0]
   26c70:	add	x1, x1, x0
   26c74:	ldr	x0, [x29, #448]
   26c78:	str	x1, [x0, #24]
   26c7c:	b	26ddc <omp_get_place_proc_ids@@OMP_4.5+0x2400>
   26c80:	ldr	x0, [x29, #464]
   26c84:	cmp	x0, #0x0
   26c88:	b.ne	26c98 <omp_get_place_proc_ids@@OMP_4.5+0x22bc>  // b.any
   26c8c:	ldr	w0, [x29, #24]
   26c90:	cmp	w0, #0x1
   26c94:	b.ne	26dbc <omp_get_place_proc_ids@@OMP_4.5+0x23e0>  // b.any
   26c98:	ldr	x0, [x29, #72]
   26c9c:	ldr	x2, [x0, #96]
   26ca0:	ldr	x0, [x29, #72]
   26ca4:	ldr	w3, [x0, #12]
   26ca8:	ldr	x1, [x29, #472]
   26cac:	ldr	x0, [x29, #480]
   26cb0:	add	x0, x1, x0
   26cb4:	sub	x0, x0, #0x1
   26cb8:	mov	x1, x0
   26cbc:	mov	w0, w3
   26cc0:	blr	x2
   26cc4:	mov	x1, x0
   26cc8:	ldr	x0, [x29, #448]
   26ccc:	str	x1, [x0, #32]
   26cd0:	ldr	x0, [x29, #448]
   26cd4:	ldr	x0, [x0, #32]
   26cd8:	cmp	x0, #0x0
   26cdc:	b.ne	26cf8 <omp_get_place_proc_ids@@OMP_4.5+0x231c>  // b.any
   26ce0:	ldr	x0, [x29, #72]
   26ce4:	add	x0, x0, #0xa8
   26ce8:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   26cec:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   26cf0:	add	x0, x0, #0x990
   26cf4:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   26cf8:	ldr	x0, [x29, #448]
   26cfc:	ldr	x0, [x0, #32]
   26d00:	mov	x1, x0
   26d04:	ldr	x0, [x29, #448]
   26d08:	str	x1, [x0, #16]
   26d0c:	ldr	x0, [x29, #448]
   26d10:	ldr	x1, [x0, #16]
   26d14:	ldr	x0, [x29, #480]
   26d18:	add	x0, x1, x0
   26d1c:	sub	x1, x0, #0x1
   26d20:	ldr	x0, [x29, #480]
   26d24:	neg	x0, x0
   26d28:	and	x1, x1, x0
   26d2c:	ldr	x0, [x29, #448]
   26d30:	str	x1, [x0, #16]
   26d34:	ldr	x0, [x29, #448]
   26d38:	ldr	x1, [x0, #16]
   26d3c:	ldr	x0, [x29, #472]
   26d40:	add	x1, x1, x0
   26d44:	ldr	x0, [x29, #448]
   26d48:	str	x1, [x0, #24]
   26d4c:	ldr	x0, [x29, #128]
   26d50:	cmp	x0, #0x1
   26d54:	b.ne	26d64 <omp_get_place_proc_ids@@OMP_4.5+0x2388>  // b.any
   26d58:	ldr	x0, [x29, #120]
   26d5c:	sub	x0, x0, #0x1
   26d60:	str	x0, [x29, #120]
   26d64:	ldr	x0, [x29, #120]
   26d68:	cmp	x0, #0x0
   26d6c:	b.le	26dd8 <omp_get_place_proc_ids@@OMP_4.5+0x23fc>
   26d70:	ldr	x1, [x29, #112]
   26d74:	ldr	x0, [x29, #120]
   26d78:	lsl	x0, x0, #4
   26d7c:	sub	x0, x0, #0x10
   26d80:	add	x0, x1, x0
   26d84:	ldr	x1, [x0, #8]
   26d88:	ldr	x0, [x29, #112]
   26d8c:	ldr	x0, [x0]
   26d90:	sub	x0, x1, x0
   26d94:	bl	8850 <malloc@plt>
   26d98:	str	x0, [x29, #96]
   26d9c:	ldr	x0, [x29, #96]
   26da0:	cmp	x0, #0x0
   26da4:	b.eq	26dd8 <omp_get_place_proc_ids@@OMP_4.5+0x23fc>  // b.none
   26da8:	ldr	x0, [x29, #448]
   26dac:	str	x0, [x29, #104]
   26db0:	add	x0, x29, #0x60
   26db4:	str	x0, [x29, #440]
   26db8:	b	26dd8 <omp_get_place_proc_ids@@OMP_4.5+0x23fc>
   26dbc:	ldr	x0, [x29, #448]
   26dc0:	str	xzr, [x0, #32]
   26dc4:	ldr	x0, [x29, #448]
   26dc8:	str	xzr, [x0, #16]
   26dcc:	ldr	x0, [x29, #448]
   26dd0:	str	xzr, [x0, #24]
   26dd4:	b	26ddc <omp_get_place_proc_ids@@OMP_4.5+0x2400>
   26dd8:	nop
   26ddc:	str	xzr, [x29, #472]
   26de0:	ldr	w0, [x29, #24]
   26de4:	cmp	w0, #0x1
   26de8:	b.ne	26df8 <omp_get_place_proc_ids@@OMP_4.5+0x241c>  // b.any
   26dec:	ldr	x0, [x29, #64]
   26df0:	lsl	x0, x0, #3
   26df4:	str	x0, [x29, #472]
   26df8:	ldr	x0, [x29, #448]
   26dfc:	str	xzr, [x0, #8]
   26e00:	ldr	x0, [x29, #464]
   26e04:	cmp	x0, #0x0
   26e08:	b.ne	26e18 <omp_get_place_proc_ids@@OMP_4.5+0x243c>  // b.any
   26e0c:	ldrb	w0, [x29, #463]
   26e10:	cmp	w0, #0x0
   26e14:	b.eq	27b74 <omp_get_place_proc_ids@@OMP_4.5+0x3198>  // b.none
   26e18:	ldr	x0, [x29, #464]
   26e1c:	cmp	x0, #0x0
   26e20:	b.eq	26e48 <omp_get_place_proc_ids@@OMP_4.5+0x246c>  // b.none
   26e24:	ldr	x1, [x29, #464]
   26e28:	mov	x0, x1
   26e2c:	lsl	x0, x0, #3
   26e30:	add	x0, x0, x1
   26e34:	lsl	x0, x0, #3
   26e38:	bl	8dd0 <fprintf@plt+0x1a0>
   26e3c:	mov	x1, x0
   26e40:	ldr	x0, [x29, #448]
   26e44:	str	x1, [x0, #8]
   26e48:	ldr	x0, [x29, #448]
   26e4c:	ldr	x0, [x0, #8]
   26e50:	str	x0, [x29, #416]
   26e54:	str	xzr, [x29, #400]
   26e58:	mov	x0, #0xffffffffffffffff    	// #-1
   26e5c:	str	x0, [x29, #392]
   26e60:	str	xzr, [x29, #384]
   26e64:	str	xzr, [x29, #488]
   26e68:	b	27b64 <omp_get_place_proc_ids@@OMP_4.5+0x3188>
   26e6c:	ldr	x1, [x29, #448]
   26e70:	ldr	x0, [x29, #488]
   26e74:	add	x0, x0, #0x2
   26e78:	lsl	x0, x0, #5
   26e7c:	add	x0, x1, x0
   26e80:	ldr	x0, [x0]
   26e84:	cmp	x0, #0x0
   26e88:	b.ne	27b58 <omp_get_place_proc_ids@@OMP_4.5+0x317c>  // b.any
   26e8c:	ldr	x0, [x29, #488]
   26e90:	mov	w2, w0
   26e94:	ldr	x1, [x29, #32]
   26e98:	ldrb	w0, [x29, #31]
   26e9c:	bl	25b0c <omp_get_place_proc_ids@@OMP_4.5+0x1130>
   26ea0:	str	w0, [x29, #340]
   26ea4:	ldr	x0, [x29, #488]
   26ea8:	lsl	x0, x0, #3
   26eac:	ldr	x1, [x29, #56]
   26eb0:	add	x0, x1, x0
   26eb4:	ldr	x0, [x0]
   26eb8:	cmp	x0, #0x0
   26ebc:	b.eq	27b4c <omp_get_place_proc_ids@@OMP_4.5+0x3170>  // b.none
   26ec0:	ldr	w1, [x29, #340]
   26ec4:	ldr	w0, [x29, #368]
   26ec8:	and	w0, w1, w0
   26ecc:	cmp	w0, #0x1d
   26ed0:	b.eq	271e0 <omp_get_place_proc_ids@@OMP_4.5+0x2804>  // b.none
   26ed4:	cmp	w0, #0x1d
   26ed8:	b.gt	27358 <omp_get_place_proc_ids@@OMP_4.5+0x297c>
   26edc:	cmp	w0, #0x1c
   26ee0:	b.eq	26fc8 <omp_get_place_proc_ids@@OMP_4.5+0x25ec>  // b.none
   26ee4:	cmp	w0, #0x1c
   26ee8:	b.gt	27358 <omp_get_place_proc_ids@@OMP_4.5+0x297c>
   26eec:	cmp	w0, #0xc
   26ef0:	b.eq	26f0c <omp_get_place_proc_ids@@OMP_4.5+0x2530>  // b.none
   26ef4:	cmp	w0, #0xc
   26ef8:	b.lt	27358 <omp_get_place_proc_ids@@OMP_4.5+0x297c>  // b.tstop
   26efc:	sub	w0, w0, #0xd
   26f00:	cmp	w0, #0x2
   26f04:	b.hi	27358 <omp_get_place_proc_ids@@OMP_4.5+0x297c>  // b.pmore
   26f08:	b	27b58 <omp_get_place_proc_ids@@OMP_4.5+0x317c>
   26f0c:	ldr	w0, [x29, #372]
   26f10:	ldr	w1, [x29, #340]
   26f14:	asr	w0, w1, w0
   26f18:	mov	x1, #0x1                   	// #1
   26f1c:	lsl	x0, x1, x0
   26f20:	str	x0, [x29, #296]
   26f24:	ldr	x1, [x29, #472]
   26f28:	ldr	x0, [x29, #296]
   26f2c:	add	x0, x1, x0
   26f30:	sub	x1, x0, #0x1
   26f34:	ldr	x0, [x29, #296]
   26f38:	neg	x0, x0
   26f3c:	and	x0, x1, x0
   26f40:	str	x0, [x29, #472]
   26f44:	ldr	x1, [x29, #448]
   26f48:	ldr	x0, [x29, #488]
   26f4c:	lsl	x0, x0, #5
   26f50:	add	x0, x1, x0
   26f54:	ldr	x1, [x29, #472]
   26f58:	str	x1, [x0, #80]
   26f5c:	ldr	x0, [x29, #488]
   26f60:	lsl	x0, x0, #3
   26f64:	ldr	x1, [x29, #40]
   26f68:	add	x0, x1, x0
   26f6c:	ldr	x0, [x0]
   26f70:	str	x0, [x29, #288]
   26f74:	ldr	x0, [x29, #448]
   26f78:	ldr	x1, [x0, #16]
   26f7c:	ldr	x0, [x29, #472]
   26f80:	add	x0, x1, x0
   26f84:	mov	x5, x0
   26f88:	ldr	x0, [x29, #488]
   26f8c:	lsl	x0, x0, #3
   26f90:	ldr	x1, [x29, #56]
   26f94:	add	x0, x1, x0
   26f98:	ldr	x0, [x0]
   26f9c:	ldr	x4, [x29, #440]
   26fa0:	ldr	x3, [x29, #288]
   26fa4:	mov	x2, x0
   26fa8:	mov	x1, x5
   26fac:	ldr	x0, [x29, #72]
   26fb0:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   26fb4:	ldr	x1, [x29, #472]
   26fb8:	ldr	x0, [x29, #288]
   26fbc:	add	x0, x1, x0
   26fc0:	str	x0, [x29, #472]
   26fc4:	b	27b58 <omp_get_place_proc_ids@@OMP_4.5+0x317c>
   26fc8:	ldr	x0, [x29, #488]
   26fcc:	add	x0, x0, #0x1
   26fd0:	str	x0, [x29, #320]
   26fd4:	ldr	x0, [x29, #488]
   26fd8:	lsl	x0, x0, #3
   26fdc:	ldr	x1, [x29, #40]
   26fe0:	add	x0, x1, x0
   26fe4:	ldr	x0, [x0]
   26fe8:	ldr	x1, [x29, #488]
   26fec:	add	x0, x1, x0
   26ff0:	str	x0, [x29, #312]
   26ff4:	ldr	x0, [x29, #488]
   26ff8:	lsl	x0, x0, #3
   26ffc:	ldr	x1, [x29, #56]
   27000:	add	x0, x1, x0
   27004:	ldr	x0, [x0]
   27008:	str	x0, [x29, #136]
   2700c:	ldr	x0, [x29, #312]
   27010:	lsl	x0, x0, #3
   27014:	ldr	x1, [x29, #56]
   27018:	add	x0, x1, x0
   2701c:	ldr	x0, [x0]
   27020:	mov	x2, x0
   27024:	ldr	x0, [x29, #312]
   27028:	lsl	x0, x0, #3
   2702c:	ldr	x1, [x29, #40]
   27030:	add	x0, x1, x0
   27034:	ldr	x0, [x0]
   27038:	add	x0, x2, x0
   2703c:	str	x0, [x29, #144]
   27040:	ldr	x1, [x29, #448]
   27044:	ldr	x0, [x29, #320]
   27048:	add	x0, x0, #0x2
   2704c:	lsl	x0, x0, #5
   27050:	add	x0, x1, x0
   27054:	ldr	x0, [x0]
   27058:	cmp	x0, #0x0
   2705c:	b.ne	27b54 <omp_get_place_proc_ids@@OMP_4.5+0x3178>  // b.any
   27060:	add	x0, x29, #0x88
   27064:	mov	x1, x0
   27068:	ldr	x0, [x29, #360]
   2706c:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   27070:	str	x0, [x29, #328]
   27074:	ldr	x0, [x29, #328]
   27078:	cmp	x0, #0x0
   2707c:	b.ne	27184 <omp_get_place_proc_ids@@OMP_4.5+0x27a8>  // b.any
   27080:	ldr	w0, [x29, #372]
   27084:	ldr	w1, [x29, #340]
   27088:	asr	w0, w1, w0
   2708c:	mov	x1, #0x1                   	// #1
   27090:	lsl	x0, x1, x0
   27094:	str	x0, [x29, #304]
   27098:	ldr	x0, [x29, #488]
   2709c:	lsl	x0, x0, #3
   270a0:	ldr	x1, [x29, #56]
   270a4:	add	x0, x1, x0
   270a8:	ldr	x0, [x0]
   270ac:	mov	x2, x0
   270b0:	ldr	x0, [x29, #320]
   270b4:	lsl	x0, x0, #3
   270b8:	ldr	x1, [x29, #56]
   270bc:	add	x0, x1, x0
   270c0:	ldr	x0, [x0]
   270c4:	sub	x0, x2, x0
   270c8:	ldr	x1, [x29, #472]
   270cc:	add	x0, x1, x0
   270d0:	str	x0, [x29, #472]
   270d4:	ldr	x1, [x29, #472]
   270d8:	ldr	x0, [x29, #304]
   270dc:	add	x0, x1, x0
   270e0:	sub	x1, x0, #0x1
   270e4:	ldr	x0, [x29, #304]
   270e8:	neg	x0, x0
   270ec:	and	x0, x1, x0
   270f0:	str	x0, [x29, #472]
   270f4:	ldr	x0, [x29, #320]
   270f8:	lsl	x0, x0, #3
   270fc:	ldr	x1, [x29, #56]
   27100:	add	x0, x1, x0
   27104:	ldr	x0, [x0]
   27108:	mov	x2, x0
   2710c:	ldr	x0, [x29, #488]
   27110:	lsl	x0, x0, #3
   27114:	ldr	x1, [x29, #56]
   27118:	add	x0, x1, x0
   2711c:	ldr	x0, [x0]
   27120:	sub	x0, x2, x0
   27124:	ldr	x1, [x29, #472]
   27128:	add	x0, x1, x0
   2712c:	str	x0, [x29, #472]
   27130:	ldr	x0, [x29, #320]
   27134:	lsl	x0, x0, #3
   27138:	ldr	x1, [x29, #56]
   2713c:	add	x0, x1, x0
   27140:	ldr	x0, [x0]
   27144:	str	x0, [x29, #384]
   27148:	ldr	x0, [x29, #472]
   2714c:	str	x0, [x29, #400]
   27150:	ldr	x0, [x29, #312]
   27154:	str	x0, [x29, #392]
   27158:	ldr	x0, [x29, #144]
   2715c:	ldr	x1, [x29, #320]
   27160:	lsl	x1, x1, #3
   27164:	ldr	x2, [x29, #56]
   27168:	add	x1, x2, x1
   2716c:	ldr	x1, [x1]
   27170:	sub	x0, x0, x1
   27174:	ldr	x1, [x29, #472]
   27178:	add	x0, x1, x0
   2717c:	str	x0, [x29, #472]
   27180:	b	27b58 <omp_get_place_proc_ids@@OMP_4.5+0x317c>
   27184:	ldr	x0, [x29, #320]
   27188:	str	x0, [x29, #488]
   2718c:	b	271c0 <omp_get_place_proc_ids@@OMP_4.5+0x27e4>
   27190:	ldr	x7, [x29, #440]
   27194:	ldr	x6, [x29, #32]
   27198:	ldr	x5, [x29, #40]
   2719c:	ldr	x4, [x29, #56]
   271a0:	ldr	x3, [x29, #488]
   271a4:	ldr	x2, [x29, #320]
   271a8:	ldr	x1, [x29, #328]
   271ac:	ldr	x0, [x29, #448]
   271b0:	bl	25ca8 <omp_get_place_proc_ids@@OMP_4.5+0x12cc>
   271b4:	ldr	x0, [x29, #488]
   271b8:	add	x0, x0, #0x1
   271bc:	str	x0, [x29, #488]
   271c0:	ldr	x1, [x29, #488]
   271c4:	ldr	x0, [x29, #312]
   271c8:	cmp	x1, x0
   271cc:	b.ls	27190 <omp_get_place_proc_ids@@OMP_4.5+0x27b4>  // b.plast
   271d0:	ldr	x0, [x29, #488]
   271d4:	sub	x0, x0, #0x1
   271d8:	str	x0, [x29, #488]
   271dc:	b	27b58 <omp_get_place_proc_ids@@OMP_4.5+0x317c>
   271e0:	ldr	x0, [x29, #488]
   271e4:	lsl	x0, x0, #3
   271e8:	ldr	x1, [x29, #56]
   271ec:	add	x0, x1, x0
   271f0:	ldr	x0, [x0]
   271f4:	str	x0, [x29, #136]
   271f8:	ldr	x0, [x29, #136]
   271fc:	add	x0, x0, #0x8
   27200:	str	x0, [x29, #144]
   27204:	add	x0, x29, #0x88
   27208:	mov	x1, x0
   2720c:	ldr	x0, [x29, #360]
   27210:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   27214:	str	x0, [x29, #328]
   27218:	ldr	x0, [x29, #328]
   2721c:	cmp	x0, #0x0
   27220:	b.eq	2724c <omp_get_place_proc_ids@@OMP_4.5+0x2870>  // b.none
   27224:	ldr	x0, [x29, #328]
   27228:	ldr	x1, [x0]
   2722c:	ldr	x0, [x29, #136]
   27230:	cmp	x1, x0
   27234:	b.hi	2724c <omp_get_place_proc_ids@@OMP_4.5+0x2870>  // b.pmore
   27238:	ldr	x0, [x29, #328]
   2723c:	ldr	x1, [x0, #8]
   27240:	ldr	x0, [x29, #144]
   27244:	cmp	x1, x0
   27248:	b.cs	27264 <omp_get_place_proc_ids@@OMP_4.5+0x2888>  // b.hs, b.nlast
   2724c:	ldr	x0, [x29, #72]
   27250:	add	x0, x0, #0xa8
   27254:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   27258:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2725c:	add	x0, x0, #0x9b0
   27260:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   27264:	ldr	x0, [x29, #488]
   27268:	sub	w0, w0, #0x1
   2726c:	mov	w2, w0
   27270:	ldr	x1, [x29, #32]
   27274:	ldrb	w0, [x29, #31]
   27278:	bl	25b0c <omp_get_place_proc_ids@@OMP_4.5+0x1130>
   2727c:	mov	w1, w0
   27280:	ldr	w0, [x29, #368]
   27284:	and	w0, w1, w0
   27288:	cmp	w0, #0x1d
   2728c:	b.eq	272ac <omp_get_place_proc_ids@@OMP_4.5+0x28d0>  // b.none
   27290:	ldr	x0, [x29, #488]
   27294:	sub	x0, x0, #0x1
   27298:	mov	x2, x0
   2729c:	ldr	x1, [x29, #56]
   272a0:	ldr	x0, [x29, #448]
   272a4:	bl	26030 <omp_get_place_proc_ids@@OMP_4.5+0x1654>
   272a8:	str	x0, [x29, #160]
   272ac:	ldr	x0, [x29, #160]
   272b0:	cmp	x0, #0x0
   272b4:	b.eq	272d8 <omp_get_place_proc_ids@@OMP_4.5+0x28fc>  // b.none
   272b8:	ldr	x1, [x29, #160]
   272bc:	ldr	x0, [x29, #488]
   272c0:	lsl	x0, x0, #3
   272c4:	ldr	x2, [x29, #40]
   272c8:	add	x0, x2, x0
   272cc:	ldr	x0, [x0]
   272d0:	sub	x0, x1, x0
   272d4:	str	x0, [x29, #160]
   272d8:	ldr	x0, [x29, #328]
   272dc:	ldr	x0, [x0, #16]
   272e0:	ldr	x1, [x0, #16]
   272e4:	ldr	x0, [x29, #328]
   272e8:	ldr	x0, [x0, #24]
   272ec:	add	x1, x1, x0
   272f0:	ldr	x0, [x29, #136]
   272f4:	add	x1, x1, x0
   272f8:	ldr	x0, [x29, #328]
   272fc:	ldr	x0, [x0]
   27300:	sub	x0, x1, x0
   27304:	mov	x1, x0
   27308:	add	x0, x29, #0x88
   2730c:	add	x0, x0, #0x18
   27310:	ldr	x4, [x29, #440]
   27314:	mov	x3, #0x8                   	// #8
   27318:	mov	x2, x0
   2731c:	ldr	x0, [x29, #72]
   27320:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   27324:	ldr	x0, [x29, #328]
   27328:	ldr	x0, [x0, #16]
   2732c:	ldr	x1, [x0, #16]
   27330:	ldr	x0, [x29, #328]
   27334:	ldr	x0, [x0, #24]
   27338:	add	x1, x1, x0
   2733c:	ldr	x0, [x29, #136]
   27340:	add	x1, x1, x0
   27344:	ldr	x0, [x29, #328]
   27348:	ldr	x0, [x0]
   2734c:	sub	x0, x1, x0
   27350:	str	x0, [x29, #160]
   27354:	b	27b58 <omp_get_place_proc_ids@@OMP_4.5+0x317c>
   27358:	nop
   2735c:	ldr	x0, [x29, #416]
   27360:	str	x0, [x29, #280]
   27364:	ldr	x0, [x29, #488]
   27368:	lsl	x0, x0, #3
   2736c:	ldr	x1, [x29, #56]
   27370:	add	x0, x1, x0
   27374:	ldr	x0, [x0]
   27378:	mov	x1, x0
   2737c:	ldr	x0, [x29, #280]
   27380:	str	x1, [x0]
   27384:	ldr	w1, [x29, #340]
   27388:	ldr	w0, [x29, #368]
   2738c:	and	w0, w1, w0
   27390:	cmp	w0, #0x4
   27394:	b.eq	273c4 <omp_get_place_proc_ids@@OMP_4.5+0x29e8>  // b.none
   27398:	ldr	x0, [x29, #280]
   2739c:	ldr	x1, [x0]
   273a0:	ldr	x0, [x29, #488]
   273a4:	lsl	x0, x0, #3
   273a8:	ldr	x2, [x29, #40]
   273ac:	add	x0, x2, x0
   273b0:	ldr	x0, [x0]
   273b4:	add	x1, x1, x0
   273b8:	ldr	x0, [x29, #280]
   273bc:	str	x1, [x0, #8]
   273c0:	b	273d8 <omp_get_place_proc_ids@@OMP_4.5+0x29fc>
   273c4:	ldr	x0, [x29, #280]
   273c8:	ldr	x0, [x0]
   273cc:	add	x1, x0, #0x8
   273d0:	ldr	x0, [x29, #280]
   273d4:	str	x1, [x0, #8]
   273d8:	ldr	x1, [x29, #280]
   273dc:	ldr	x0, [x29, #360]
   273e0:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   273e4:	str	x0, [x29, #272]
   273e8:	ldr	x0, [x29, #272]
   273ec:	cmp	x0, #0x0
   273f0:	b.eq	27454 <omp_get_place_proc_ids@@OMP_4.5+0x2a78>  // b.none
   273f4:	ldr	x0, [x29, #272]
   273f8:	ldr	x0, [x0, #32]
   273fc:	cmn	x0, #0x2
   27400:	b.eq	27454 <omp_get_place_proc_ids@@OMP_4.5+0x2a78>  // b.none
   27404:	ldr	x0, [x29, #488]
   27408:	add	x0, x0, #0x2
   2740c:	lsl	x0, x0, #5
   27410:	ldr	x1, [x29, #448]
   27414:	add	x2, x1, x0
   27418:	ldr	w0, [x29, #340]
   2741c:	sxtb	w1, w0
   27420:	ldr	w0, [x29, #368]
   27424:	sxtb	w0, w0
   27428:	and	w0, w1, w0
   2742c:	sxtb	w0, w0
   27430:	and	w0, w0, #0xff
   27434:	ldr	x5, [x29, #440]
   27438:	mov	w4, w0
   2743c:	mov	x3, x2
   27440:	ldr	x2, [x29, #280]
   27444:	ldr	x1, [x29, #272]
   27448:	ldr	x0, [x29, #72]
   2744c:	bl	25904 <omp_get_place_proc_ids@@OMP_4.5+0xf28>
   27450:	b	27b58 <omp_get_place_proc_ids@@OMP_4.5+0x317c>
   27454:	ldr	x0, [x29, #280]
   27458:	str	xzr, [x0, #48]
   2745c:	ldr	x0, [x29, #272]
   27460:	cmp	x0, #0x0
   27464:	b.eq	27490 <omp_get_place_proc_ids@@OMP_4.5+0x2ab4>  // b.none
   27468:	ldr	x0, [x29, #272]
   2746c:	ldr	x0, [x0, #32]
   27470:	cmn	x0, #0x2
   27474:	b.ne	27490 <omp_get_place_proc_ids@@OMP_4.5+0x2ab4>  // b.any
   27478:	ldr	x1, [x29, #272]
   2747c:	ldr	x0, [x29, #360]
   27480:	bl	2d224 <omp_pause_resource_all@@OMP_5.0+0x14c0>
   27484:	ldr	x0, [x29, #280]
   27488:	ldr	x1, [x29, #272]
   2748c:	str	x1, [x0, #48]
   27490:	ldr	w0, [x29, #372]
   27494:	ldr	w1, [x29, #340]
   27498:	asr	w0, w1, w0
   2749c:	mov	x1, #0x1                   	// #1
   274a0:	lsl	x0, x1, x0
   274a4:	str	x0, [x29, #264]
   274a8:	ldr	x1, [x29, #448]
   274ac:	ldr	x0, [x29, #488]
   274b0:	add	x0, x0, #0x2
   274b4:	lsl	x0, x0, #5
   274b8:	add	x0, x1, x0
   274bc:	ldr	x1, [x29, #280]
   274c0:	str	x1, [x0]
   274c4:	ldr	x0, [x29, #280]
   274c8:	ldr	x1, [x29, #448]
   274cc:	str	x1, [x0, #16]
   274d0:	ldr	x0, [x29, #392]
   274d4:	cmn	x0, #0x1
   274d8:	b.eq	27518 <omp_get_place_proc_ids@@OMP_4.5+0x2b3c>  // b.none
   274dc:	ldr	x0, [x29, #280]
   274e0:	ldr	x1, [x0]
   274e4:	ldr	x0, [x29, #384]
   274e8:	sub	x1, x1, x0
   274ec:	ldr	x0, [x29, #400]
   274f0:	add	x1, x1, x0
   274f4:	ldr	x0, [x29, #280]
   274f8:	str	x1, [x0, #24]
   274fc:	ldr	x1, [x29, #488]
   27500:	ldr	x0, [x29, #392]
   27504:	cmp	x1, x0
   27508:	b.ne	27564 <omp_get_place_proc_ids@@OMP_4.5+0x2b88>  // b.any
   2750c:	mov	x0, #0xffffffffffffffff    	// #-1
   27510:	str	x0, [x29, #392]
   27514:	b	27564 <omp_get_place_proc_ids@@OMP_4.5+0x2b88>
   27518:	ldr	x1, [x29, #472]
   2751c:	ldr	x0, [x29, #264]
   27520:	add	x0, x1, x0
   27524:	sub	x1, x0, #0x1
   27528:	ldr	x0, [x29, #264]
   2752c:	neg	x0, x0
   27530:	and	x0, x1, x0
   27534:	str	x0, [x29, #472]
   27538:	ldr	x0, [x29, #280]
   2753c:	ldr	x1, [x29, #472]
   27540:	str	x1, [x0, #24]
   27544:	ldr	x0, [x29, #280]
   27548:	ldr	x1, [x0, #8]
   2754c:	ldr	x0, [x29, #280]
   27550:	ldr	x0, [x0]
   27554:	sub	x0, x1, x0
   27558:	ldr	x1, [x29, #472]
   2755c:	add	x0, x1, x0
   27560:	str	x0, [x29, #472]
   27564:	ldr	w1, [x29, #340]
   27568:	ldr	w0, [x29, #368]
   2756c:	and	w0, w1, w0
   27570:	and	w0, w0, #0xc
   27574:	cmp	w0, #0x0
   27578:	b.ne	2759c <omp_get_place_proc_ids@@OMP_4.5+0x2bc0>  // b.any
   2757c:	ldr	w1, [x29, #340]
   27580:	ldr	w0, [x29, #368]
   27584:	and	w0, w1, w0
   27588:	and	w0, w0, #0x2
   2758c:	cmp	w0, #0x0
   27590:	b.eq	2759c <omp_get_place_proc_ids@@OMP_4.5+0x2bc0>  // b.none
   27594:	mov	w0, #0x1                   	// #1
   27598:	b	275a0 <omp_get_place_proc_ids@@OMP_4.5+0x2bc4>
   2759c:	mov	w0, #0x0                   	// #0
   275a0:	and	w0, w0, #0x1
   275a4:	and	w2, w0, #0xff
   275a8:	ldr	x1, [x29, #448]
   275ac:	ldr	x0, [x29, #488]
   275b0:	add	x0, x0, #0x2
   275b4:	lsl	x0, x0, #5
   275b8:	add	x0, x1, x0
   275bc:	mov	w1, w2
   275c0:	strb	w1, [x0, #8]
   275c4:	ldr	w1, [x29, #340]
   275c8:	ldr	w0, [x29, #368]
   275cc:	and	w0, w1, w0
   275d0:	cmp	w0, #0x12
   275d4:	b.eq	275ec <omp_get_place_proc_ids@@OMP_4.5+0x2c10>  // b.none
   275d8:	ldr	w1, [x29, #340]
   275dc:	ldr	w0, [x29, #368]
   275e0:	and	w0, w1, w0
   275e4:	cmp	w0, #0x13
   275e8:	b.ne	275f4 <omp_get_place_proc_ids@@OMP_4.5+0x2c18>  // b.any
   275ec:	mov	w0, #0x1                   	// #1
   275f0:	b	275f8 <omp_get_place_proc_ids@@OMP_4.5+0x2c1c>
   275f4:	mov	w0, #0x0                   	// #0
   275f8:	and	w0, w0, #0x1
   275fc:	and	w2, w0, #0xff
   27600:	ldr	x1, [x29, #448]
   27604:	ldr	x0, [x29, #488]
   27608:	add	x0, x0, #0x2
   2760c:	lsl	x0, x0, #5
   27610:	add	x0, x1, x0
   27614:	mov	w1, w2
   27618:	strb	w1, [x0, #9]
   2761c:	ldr	x1, [x29, #448]
   27620:	ldr	x0, [x29, #488]
   27624:	lsl	x0, x0, #5
   27628:	add	x0, x1, x0
   2762c:	str	xzr, [x0, #80]
   27630:	ldr	x0, [x29, #280]
   27634:	ldr	x1, [x0, #8]
   27638:	ldr	x0, [x29, #280]
   2763c:	ldr	x0, [x0]
   27640:	sub	x1, x1, x0
   27644:	ldr	x2, [x29, #448]
   27648:	ldr	x0, [x29, #488]
   2764c:	lsl	x0, x0, #5
   27650:	add	x0, x2, x0
   27654:	str	x1, [x0, #88]
   27658:	ldr	x0, [x29, #280]
   2765c:	mov	x1, #0x1                   	// #1
   27660:	str	x1, [x0, #32]
   27664:	ldr	x0, [x29, #280]
   27668:	str	xzr, [x0, #40]
   2766c:	ldr	x0, [x29, #448]
   27670:	ldr	x0, [x0]
   27674:	add	x1, x0, #0x1
   27678:	ldr	x0, [x29, #448]
   2767c:	str	x1, [x0]
   27680:	ldr	x0, [x29, #416]
   27684:	str	xzr, [x0, #56]
   27688:	ldr	x0, [x29, #416]
   2768c:	str	xzr, [x0, #64]
   27690:	ldr	x1, [x29, #416]
   27694:	ldr	x0, [x29, #360]
   27698:	bl	2d0f4 <omp_pause_resource_all@@OMP_5.0+0x1390>
   2769c:	ldr	w1, [x29, #340]
   276a0:	ldr	w0, [x29, #368]
   276a4:	and	w0, w1, w0
   276a8:	cmp	w0, #0x83
   276ac:	b.eq	27788 <omp_get_place_proc_ids@@OMP_4.5+0x2dac>  // b.none
   276b0:	cmp	w0, #0x83
   276b4:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   276b8:	cmp	w0, #0x82
   276bc:	b.eq	27ae4 <omp_get_place_proc_ids@@OMP_4.5+0x3108>  // b.none
   276c0:	cmp	w0, #0x82
   276c4:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   276c8:	cmp	w0, #0x81
   276cc:	b.eq	27788 <omp_get_place_proc_ids@@OMP_4.5+0x2dac>  // b.none
   276d0:	cmp	w0, #0x81
   276d4:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   276d8:	cmp	w0, #0x80
   276dc:	b.eq	27ae4 <omp_get_place_proc_ids@@OMP_4.5+0x3108>  // b.none
   276e0:	cmp	w0, #0x80
   276e4:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   276e8:	cmp	w0, #0x13
   276ec:	b.eq	27788 <omp_get_place_proc_ids@@OMP_4.5+0x2dac>  // b.none
   276f0:	cmp	w0, #0x13
   276f4:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   276f8:	cmp	w0, #0x12
   276fc:	b.eq	27ae4 <omp_get_place_proc_ids@@OMP_4.5+0x3108>  // b.none
   27700:	cmp	w0, #0x12
   27704:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   27708:	cmp	w0, #0x11
   2770c:	b.eq	27788 <omp_get_place_proc_ids@@OMP_4.5+0x2dac>  // b.none
   27710:	cmp	w0, #0x11
   27714:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   27718:	cmp	w0, #0x8
   2771c:	b.eq	27a4c <omp_get_place_proc_ids@@OMP_4.5+0x3070>  // b.none
   27720:	cmp	w0, #0x8
   27724:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   27728:	cmp	w0, #0x6
   2772c:	b.eq	27a08 <omp_get_place_proc_ids@@OMP_4.5+0x302c>  // b.none
   27730:	cmp	w0, #0x6
   27734:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   27738:	cmp	w0, #0x5
   2773c:	b.eq	2781c <omp_get_place_proc_ids@@OMP_4.5+0x2e40>  // b.none
   27740:	cmp	w0, #0x5
   27744:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   27748:	cmp	w0, #0x4
   2774c:	b.eq	277d8 <omp_get_place_proc_ids@@OMP_4.5+0x2dfc>  // b.none
   27750:	cmp	w0, #0x4
   27754:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   27758:	cmp	w0, #0x3
   2775c:	b.eq	27788 <omp_get_place_proc_ids@@OMP_4.5+0x2dac>  // b.none
   27760:	cmp	w0, #0x3
   27764:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   27768:	cmp	w0, #0x2
   2776c:	b.eq	27ae4 <omp_get_place_proc_ids@@OMP_4.5+0x3108>  // b.none
   27770:	cmp	w0, #0x2
   27774:	b.gt	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>
   27778:	cmp	w0, #0x0
   2777c:	b.eq	27ae4 <omp_get_place_proc_ids@@OMP_4.5+0x3108>  // b.none
   27780:	cmp	w0, #0x1
   27784:	b.ne	27ac0 <omp_get_place_proc_ids@@OMP_4.5+0x30e4>  // b.any
   27788:	ldr	x0, [x29, #448]
   2778c:	ldr	x1, [x0, #16]
   27790:	ldr	x0, [x29, #280]
   27794:	ldr	x0, [x0, #24]
   27798:	add	x0, x1, x0
   2779c:	mov	x5, x0
   277a0:	ldr	x0, [x29, #280]
   277a4:	ldr	x0, [x0]
   277a8:	mov	x2, x0
   277ac:	ldr	x0, [x29, #280]
   277b0:	ldr	x1, [x0, #8]
   277b4:	ldr	x0, [x29, #280]
   277b8:	ldr	x0, [x0]
   277bc:	sub	x0, x1, x0
   277c0:	ldr	x4, [x29, #440]
   277c4:	mov	x3, x0
   277c8:	mov	x1, x5
   277cc:	ldr	x0, [x29, #72]
   277d0:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   277d4:	b	27af0 <omp_get_place_proc_ids@@OMP_4.5+0x3114>
   277d8:	ldr	x0, [x29, #280]
   277dc:	ldr	x0, [x0]
   277e0:	ldr	x0, [x0]
   277e4:	mov	x5, x0
   277e8:	ldr	x0, [x29, #280]
   277ec:	ldr	x2, [x0, #24]
   277f0:	ldr	x0, [x29, #488]
   277f4:	lsl	x0, x0, #3
   277f8:	ldr	x1, [x29, #40]
   277fc:	add	x0, x1, x0
   27800:	ldr	x0, [x0]
   27804:	ldr	x4, [x29, #440]
   27808:	mov	x3, x0
   2780c:	mov	x1, x5
   27810:	ldr	x0, [x29, #448]
   27814:	bl	25b58 <omp_get_place_proc_ids@@OMP_4.5+0x117c>
   27818:	b	27af0 <omp_get_place_proc_ids@@OMP_4.5+0x3114>
   2781c:	ldr	x0, [x29, #448]
   27820:	ldr	x1, [x0, #16]
   27824:	ldr	x0, [x29, #280]
   27828:	ldr	x0, [x0, #24]
   2782c:	add	x0, x1, x0
   27830:	mov	x5, x0
   27834:	ldr	x0, [x29, #280]
   27838:	ldr	x0, [x0]
   2783c:	mov	x2, x0
   27840:	ldr	x0, [x29, #280]
   27844:	ldr	x1, [x0, #8]
   27848:	ldr	x0, [x29, #280]
   2784c:	ldr	x0, [x0]
   27850:	sub	x0, x1, x0
   27854:	ldr	x4, [x29, #440]
   27858:	mov	x3, x0
   2785c:	mov	x1, x5
   27860:	ldr	x0, [x29, #72]
   27864:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   27868:	ldr	x0, [x29, #488]
   2786c:	add	x0, x0, #0x1
   27870:	str	x0, [x29, #408]
   27874:	b	279ec <omp_get_place_proc_ids@@OMP_4.5+0x3010>
   27878:	ldr	x0, [x29, #408]
   2787c:	mov	w2, w0
   27880:	ldr	x1, [x29, #32]
   27884:	ldrb	w0, [x29, #31]
   27888:	bl	25b0c <omp_get_place_proc_ids@@OMP_4.5+0x1130>
   2788c:	mov	w1, w0
   27890:	ldr	w0, [x29, #368]
   27894:	and	w0, w1, w0
   27898:	cmp	w0, #0x4
   2789c:	b.ne	27a00 <omp_get_place_proc_ids@@OMP_4.5+0x3024>  // b.any
   278a0:	ldr	x0, [x29, #408]
   278a4:	lsl	x0, x0, #3
   278a8:	ldr	x1, [x29, #56]
   278ac:	add	x0, x1, x0
   278b0:	ldr	x0, [x0]
   278b4:	mov	x1, x0
   278b8:	ldr	x0, [x29, #280]
   278bc:	ldr	x0, [x0]
   278c0:	cmp	x1, x0
   278c4:	b.cc	27aec <omp_get_place_proc_ids@@OMP_4.5+0x3110>  // b.lo, b.ul, b.last
   278c8:	ldr	x0, [x29, #408]
   278cc:	lsl	x0, x0, #3
   278d0:	ldr	x1, [x29, #56]
   278d4:	add	x0, x1, x0
   278d8:	ldr	x0, [x0]
   278dc:	add	x1, x0, #0x8
   278e0:	ldr	x0, [x29, #280]
   278e4:	ldr	x0, [x0, #8]
   278e8:	cmp	x1, x0
   278ec:	b.hi	27aec <omp_get_place_proc_ids@@OMP_4.5+0x3110>  // b.pmore
   278f0:	ldr	x1, [x29, #448]
   278f4:	ldr	x0, [x29, #408]
   278f8:	add	x0, x0, #0x2
   278fc:	lsl	x0, x0, #5
   27900:	add	x0, x1, x0
   27904:	ldr	x1, [x29, #280]
   27908:	str	x1, [x0]
   2790c:	ldr	x1, [x29, #448]
   27910:	ldr	x0, [x29, #408]
   27914:	add	x0, x0, #0x2
   27918:	lsl	x0, x0, #5
   2791c:	add	x0, x1, x0
   27920:	strb	wzr, [x0, #8]
   27924:	ldr	x1, [x29, #448]
   27928:	ldr	x0, [x29, #408]
   2792c:	add	x0, x0, #0x2
   27930:	lsl	x0, x0, #5
   27934:	add	x0, x1, x0
   27938:	strb	wzr, [x0, #9]
   2793c:	ldr	x0, [x29, #280]
   27940:	ldr	x0, [x0, #32]
   27944:	cmn	x0, #0x1
   27948:	b.eq	27960 <omp_get_place_proc_ids@@OMP_4.5+0x2f84>  // b.none
   2794c:	ldr	x0, [x29, #280]
   27950:	ldr	x0, [x0, #32]
   27954:	add	x1, x0, #0x1
   27958:	ldr	x0, [x29, #280]
   2795c:	str	x1, [x0, #32]
   27960:	ldr	x0, [x29, #408]
   27964:	lsl	x0, x0, #3
   27968:	ldr	x1, [x29, #56]
   2796c:	add	x0, x1, x0
   27970:	ldr	x0, [x0]
   27974:	ldr	x0, [x0]
   27978:	mov	x5, x0
   2797c:	ldr	x0, [x29, #280]
   27980:	ldr	x1, [x0, #24]
   27984:	ldr	x0, [x29, #408]
   27988:	lsl	x0, x0, #3
   2798c:	ldr	x2, [x29, #56]
   27990:	add	x0, x2, x0
   27994:	ldr	x0, [x0]
   27998:	mov	x2, x0
   2799c:	ldr	x0, [x29, #280]
   279a0:	ldr	x0, [x0]
   279a4:	sub	x0, x2, x0
   279a8:	add	x2, x1, x0
   279ac:	ldr	x0, [x29, #408]
   279b0:	lsl	x0, x0, #3
   279b4:	ldr	x1, [x29, #40]
   279b8:	add	x0, x1, x0
   279bc:	ldr	x0, [x0]
   279c0:	ldr	x4, [x29, #440]
   279c4:	mov	x3, x0
   279c8:	mov	x1, x5
   279cc:	ldr	x0, [x29, #448]
   279d0:	bl	25b58 <omp_get_place_proc_ids@@OMP_4.5+0x117c>
   279d4:	ldr	x0, [x29, #488]
   279d8:	add	x0, x0, #0x1
   279dc:	str	x0, [x29, #488]
   279e0:	ldr	x0, [x29, #408]
   279e4:	add	x0, x0, #0x1
   279e8:	str	x0, [x29, #408]
   279ec:	ldr	x1, [x29, #408]
   279f0:	ldr	x0, [x29, #64]
   279f4:	cmp	x1, x0
   279f8:	b.cc	27878 <omp_get_place_proc_ids@@OMP_4.5+0x2e9c>  // b.lo, b.ul, b.last
   279fc:	b	27aec <omp_get_place_proc_ids@@OMP_4.5+0x3110>
   27a00:	nop
   27a04:	b	27aec <omp_get_place_proc_ids@@OMP_4.5+0x3110>
   27a08:	ldr	x0, [x29, #280]
   27a0c:	ldr	x1, [x0, #8]
   27a10:	ldr	x0, [x29, #280]
   27a14:	ldr	x0, [x0]
   27a18:	sub	x0, x1, x0
   27a1c:	str	x0, [x29, #256]
   27a20:	ldr	x0, [x29, #72]
   27a24:	add	x0, x0, #0xa8
   27a28:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   27a2c:	ldr	x0, [x29, #280]
   27a30:	ldr	x0, [x0]
   27a34:	ldr	x3, [x29, #256]
   27a38:	ldr	x2, [x29, #256]
   27a3c:	mov	x1, x0
   27a40:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   27a44:	add	x0, x0, #0x9d0
   27a48:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   27a4c:	ldr	x0, [x29, #280]
   27a50:	ldr	x1, [x0, #8]
   27a54:	ldr	x0, [x29, #280]
   27a58:	ldr	x0, [x0]
   27a5c:	sub	x0, x1, x0
   27a60:	cmp	x0, #0x8
   27a64:	b.eq	27a88 <omp_get_place_proc_ids@@OMP_4.5+0x30ac>  // b.none
   27a68:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   27a6c:	add	x3, x0, #0x280
   27a70:	mov	w2, #0x3b4                 	// #948
   27a74:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   27a78:	add	x1, x0, #0xa08
   27a7c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   27a80:	add	x0, x0, #0xa28
   27a84:	bl	8bd0 <__assert_fail@plt>
   27a88:	ldr	x0, [x29, #448]
   27a8c:	ldr	x1, [x0, #16]
   27a90:	ldr	x0, [x29, #280]
   27a94:	ldr	x0, [x0, #24]
   27a98:	add	x0, x1, x0
   27a9c:	mov	x1, x0
   27aa0:	ldr	x0, [x29, #280]
   27aa4:	ldr	x0, [x0]
   27aa8:	ldr	x4, [x29, #440]
   27aac:	mov	x3, #0x8                   	// #8
   27ab0:	mov	x2, x0
   27ab4:	ldr	x0, [x29, #72]
   27ab8:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   27abc:	b	27af0 <omp_get_place_proc_ids@@OMP_4.5+0x3114>
   27ac0:	ldr	x0, [x29, #72]
   27ac4:	add	x0, x0, #0xa8
   27ac8:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   27acc:	ldr	w2, [x29, #340]
   27ad0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   27ad4:	add	x1, x0, #0x290
   27ad8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   27adc:	add	x0, x0, #0xa58
   27ae0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   27ae4:	nop
   27ae8:	b	27af0 <omp_get_place_proc_ids@@OMP_4.5+0x3114>
   27aec:	nop
   27af0:	ldr	x0, [x29, #280]
   27af4:	ldr	x0, [x0, #48]
   27af8:	cmp	x0, #0x0
   27afc:	b.eq	27b3c <omp_get_place_proc_ids@@OMP_4.5+0x3160>  // b.none
   27b00:	ldr	x0, [x29, #448]
   27b04:	ldr	x1, [x0, #16]
   27b08:	ldr	x0, [x29, #280]
   27b0c:	ldr	x0, [x0, #24]
   27b10:	add	x0, x1, x0
   27b14:	str	x0, [x29, #88]
   27b18:	ldr	x0, [x29, #272]
   27b1c:	ldr	x0, [x0, #24]
   27b20:	mov	x1, x0
   27b24:	add	x0, x29, #0x58
   27b28:	mov	x4, #0x0                   	// #0
   27b2c:	mov	x3, #0x8                   	// #8
   27b30:	mov	x2, x0
   27b34:	ldr	x0, [x29, #72]
   27b38:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   27b3c:	ldr	x0, [x29, #416]
   27b40:	add	x0, x0, #0x48
   27b44:	str	x0, [x29, #416]
   27b48:	b	27b58 <omp_get_place_proc_ids@@OMP_4.5+0x317c>
   27b4c:	nop
   27b50:	b	27b58 <omp_get_place_proc_ids@@OMP_4.5+0x317c>
   27b54:	nop
   27b58:	ldr	x0, [x29, #488]
   27b5c:	add	x0, x0, #0x1
   27b60:	str	x0, [x29, #488]
   27b64:	ldr	x1, [x29, #488]
   27b68:	ldr	x0, [x29, #64]
   27b6c:	cmp	x1, x0
   27b70:	b.cc	26e6c <omp_get_place_proc_ids@@OMP_4.5+0x2490>  // b.lo, b.ul, b.last
   27b74:	ldr	w0, [x29, #24]
   27b78:	cmp	w0, #0x1
   27b7c:	b.ne	27bec <omp_get_place_proc_ids@@OMP_4.5+0x3210>  // b.any
   27b80:	str	xzr, [x29, #488]
   27b84:	b	27bdc <omp_get_place_proc_ids@@OMP_4.5+0x3200>
   27b88:	ldr	x2, [x29, #488]
   27b8c:	ldr	x1, [x29, #56]
   27b90:	ldr	x0, [x29, #448]
   27b94:	bl	26030 <omp_get_place_proc_ids@@OMP_4.5+0x1654>
   27b98:	str	x0, [x29, #160]
   27b9c:	ldr	x0, [x29, #448]
   27ba0:	ldr	x1, [x0, #16]
   27ba4:	ldr	x0, [x29, #488]
   27ba8:	lsl	x0, x0, #3
   27bac:	add	x0, x1, x0
   27bb0:	mov	x1, x0
   27bb4:	add	x0, x29, #0x88
   27bb8:	add	x0, x0, #0x18
   27bbc:	ldr	x4, [x29, #440]
   27bc0:	mov	x3, #0x8                   	// #8
   27bc4:	mov	x2, x0
   27bc8:	ldr	x0, [x29, #72]
   27bcc:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   27bd0:	ldr	x0, [x29, #488]
   27bd4:	add	x0, x0, #0x1
   27bd8:	str	x0, [x29, #488]
   27bdc:	ldr	x1, [x29, #488]
   27be0:	ldr	x0, [x29, #64]
   27be4:	cmp	x1, x0
   27be8:	b.cc	27b88 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>  // b.lo, b.ul, b.last
   27bec:	ldr	x0, [x29, #440]
   27bf0:	cmp	x0, #0x0
   27bf4:	b.eq	27cc0 <omp_get_place_proc_ids@@OMP_4.5+0x32e4>  // b.none
   27bf8:	str	xzr, [x29, #376]
   27bfc:	str	xzr, [x29, #376]
   27c00:	b	27ca0 <omp_get_place_proc_ids@@OMP_4.5+0x32c4>
   27c04:	ldr	x0, [x29, #448]
   27c08:	ldr	x1, [x0, #16]
   27c0c:	ldr	x2, [x29, #112]
   27c10:	ldr	x0, [x29, #376]
   27c14:	lsl	x0, x0, #4
   27c18:	add	x0, x2, x0
   27c1c:	ldr	x0, [x0]
   27c20:	add	x0, x1, x0
   27c24:	mov	x6, x0
   27c28:	ldr	x1, [x29, #96]
   27c2c:	ldr	x2, [x29, #112]
   27c30:	ldr	x0, [x29, #376]
   27c34:	lsl	x0, x0, #4
   27c38:	add	x0, x2, x0
   27c3c:	ldr	x2, [x0]
   27c40:	ldr	x0, [x29, #112]
   27c44:	ldr	x0, [x0]
   27c48:	sub	x0, x2, x0
   27c4c:	add	x5, x1, x0
   27c50:	ldr	x1, [x29, #112]
   27c54:	ldr	x0, [x29, #376]
   27c58:	lsl	x0, x0, #4
   27c5c:	add	x0, x1, x0
   27c60:	ldr	x1, [x0, #8]
   27c64:	ldr	x2, [x29, #112]
   27c68:	ldr	x0, [x29, #376]
   27c6c:	lsl	x0, x0, #4
   27c70:	add	x0, x2, x0
   27c74:	ldr	x0, [x0]
   27c78:	sub	x0, x1, x0
   27c7c:	mov	x4, #0x0                   	// #0
   27c80:	mov	x3, x0
   27c84:	mov	x2, x5
   27c88:	mov	x1, x6
   27c8c:	ldr	x0, [x29, #72]
   27c90:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   27c94:	ldr	x0, [x29, #376]
   27c98:	add	x0, x0, #0x1
   27c9c:	str	x0, [x29, #376]
   27ca0:	ldr	x0, [x29, #120]
   27ca4:	ldr	x1, [x29, #376]
   27ca8:	cmp	x1, x0
   27cac:	b.lt	27c04 <omp_get_place_proc_ids@@OMP_4.5+0x3228>  // b.tstop
   27cb0:	ldr	x0, [x29, #96]
   27cb4:	bl	8a20 <free@plt>
   27cb8:	str	xzr, [x29, #96]
   27cbc:	str	xzr, [x29, #440]
   27cc0:	ldr	w0, [x29, #24]
   27cc4:	cmp	w0, #0x3
   27cc8:	b.ne	27ce8 <omp_get_place_proc_ids@@OMP_4.5+0x330c>  // b.any
   27ccc:	ldr	x0, [x29, #448]
   27cd0:	ldr	x0, [x0]
   27cd4:	cmp	x0, #0x0
   27cd8:	b.ne	27ce8 <omp_get_place_proc_ids@@OMP_4.5+0x330c>  // b.any
   27cdc:	ldr	x0, [x29, #448]
   27ce0:	bl	8a20 <free@plt>
   27ce4:	str	xzr, [x29, #448]
   27ce8:	ldr	x0, [x29, #72]
   27cec:	add	x0, x0, #0xa8
   27cf0:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   27cf4:	ldr	x0, [x29, #448]
   27cf8:	mov	sp, x29
   27cfc:	ldp	x29, x30, [sp], #496
   27d00:	ret
   27d04:	stp	x29, x30, [sp, #-32]!
   27d08:	mov	x29, sp
   27d0c:	str	x0, [sp, #24]
   27d10:	ldr	x0, [sp, #24]
   27d14:	ldr	x0, [x0, #24]
   27d18:	cmp	x0, #0x0
   27d1c:	b.eq	27d3c <omp_get_place_proc_ids@@OMP_4.5+0x3360>  // b.none
   27d20:	ldr	x0, [sp, #24]
   27d24:	ldr	x2, [x0, #56]
   27d28:	ldr	x0, [sp, #24]
   27d2c:	ldr	x0, [x0, #32]
   27d30:	mov	x1, x0
   27d34:	mov	x0, x2
   27d38:	bl	258a0 <omp_get_place_proc_ids@@OMP_4.5+0xec4>
   27d3c:	ldr	x0, [sp, #24]
   27d40:	ldr	x0, [x0, #8]
   27d44:	bl	8a20 <free@plt>
   27d48:	ldr	x0, [sp, #24]
   27d4c:	bl	8a20 <free@plt>
   27d50:	nop
   27d54:	ldp	x29, x30, [sp], #32
   27d58:	ret
   27d5c:	stp	x29, x30, [sp, #-48]!
   27d60:	mov	x29, sp
   27d64:	str	x0, [sp, #24]
   27d68:	str	x1, [sp, #16]
   27d6c:	strb	wzr, [sp, #47]
   27d70:	ldr	x0, [sp, #24]
   27d74:	add	x0, x0, #0xa0
   27d78:	ldr	x1, [sp, #16]
   27d7c:	bl	2d224 <omp_pause_resource_all@@OMP_5.0+0x14c0>
   27d80:	ldr	x0, [sp, #16]
   27d84:	ldr	x0, [x0, #48]
   27d88:	cmp	x0, #0x0
   27d8c:	b.eq	27dac <omp_get_place_proc_ids@@OMP_4.5+0x33d0>  // b.none
   27d90:	ldr	x0, [sp, #24]
   27d94:	add	x2, x0, #0xa0
   27d98:	ldr	x0, [sp, #16]
   27d9c:	ldr	x0, [x0, #48]
   27da0:	mov	x1, x0
   27da4:	mov	x0, x2
   27da8:	bl	2d0f4 <omp_pause_resource_all@@OMP_5.0+0x1390>
   27dac:	ldr	x0, [sp, #16]
   27db0:	ldr	x0, [x0, #16]
   27db4:	ldr	x0, [x0]
   27db8:	cmp	x0, #0x1
   27dbc:	b.ls	27dd8 <omp_get_place_proc_ids@@OMP_4.5+0x33fc>  // b.plast
   27dc0:	ldr	x0, [sp, #16]
   27dc4:	ldr	x0, [x0, #16]
   27dc8:	ldr	x1, [x0]
   27dcc:	sub	x1, x1, #0x1
   27dd0:	str	x1, [x0]
   27dd4:	b	27dec <omp_get_place_proc_ids@@OMP_4.5+0x3410>
   27dd8:	mov	w0, #0x1                   	// #1
   27ddc:	strb	w0, [sp, #47]
   27de0:	ldr	x0, [sp, #16]
   27de4:	ldr	x0, [x0, #16]
   27de8:	bl	27d04 <omp_get_place_proc_ids@@OMP_4.5+0x3328>
   27dec:	ldrb	w0, [sp, #47]
   27df0:	ldp	x29, x30, [sp], #48
   27df4:	ret
   27df8:	stp	x29, x30, [sp, #-64]!
   27dfc:	mov	x29, sp
   27e00:	str	x0, [sp, #24]
   27e04:	strb	w1, [sp, #23]
   27e08:	ldr	x0, [sp, #24]
   27e0c:	ldr	x0, [x0, #56]
   27e10:	str	x0, [sp, #40]
   27e14:	ldr	x0, [sp, #24]
   27e18:	ldr	x0, [x0, #48]
   27e1c:	cmp	x0, #0x0
   27e20:	b.ne	27e30 <omp_get_place_proc_ids@@OMP_4.5+0x3454>  // b.any
   27e24:	ldr	x0, [sp, #24]
   27e28:	bl	8a20 <free@plt>
   27e2c:	b	28058 <omp_get_place_proc_ids@@OMP_4.5+0x367c>
   27e30:	ldr	x0, [sp, #40]
   27e34:	add	x0, x0, #0xa8
   27e38:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   27e3c:	ldr	x0, [sp, #40]
   27e40:	ldr	w0, [x0, #172]
   27e44:	cmp	w0, #0x2
   27e48:	b.ne	27e70 <omp_get_place_proc_ids@@OMP_4.5+0x3494>  // b.any
   27e4c:	ldr	x0, [sp, #40]
   27e50:	add	x0, x0, #0xa8
   27e54:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   27e58:	ldr	x0, [sp, #24]
   27e5c:	ldr	x0, [x0, #8]
   27e60:	bl	8a20 <free@plt>
   27e64:	ldr	x0, [sp, #24]
   27e68:	bl	8a20 <free@plt>
   27e6c:	b	28058 <omp_get_place_proc_ids@@OMP_4.5+0x367c>
   27e70:	str	xzr, [sp, #56]
   27e74:	b	28008 <omp_get_place_proc_ids@@OMP_4.5+0x362c>
   27e78:	ldr	x1, [sp, #24]
   27e7c:	ldr	x0, [sp, #56]
   27e80:	add	x0, x0, #0x2
   27e84:	lsl	x0, x0, #5
   27e88:	add	x0, x1, x0
   27e8c:	ldr	x0, [x0]
   27e90:	str	x0, [sp, #32]
   27e94:	ldr	x0, [sp, #32]
   27e98:	cmp	x0, #0x0
   27e9c:	b.eq	27ff8 <omp_get_place_proc_ids@@OMP_4.5+0x361c>  // b.none
   27ea0:	strb	wzr, [sp, #55]
   27ea4:	ldr	x0, [sp, #32]
   27ea8:	ldr	x0, [x0, #32]
   27eac:	cmp	x0, #0x1
   27eb0:	b.ls	27edc <omp_get_place_proc_ids@@OMP_4.5+0x3500>  // b.plast
   27eb4:	ldr	x0, [sp, #32]
   27eb8:	ldr	x0, [x0, #32]
   27ebc:	cmn	x0, #0x1
   27ec0:	b.eq	27edc <omp_get_place_proc_ids@@OMP_4.5+0x3500>  // b.none
   27ec4:	ldr	x0, [sp, #32]
   27ec8:	ldr	x0, [x0, #32]
   27ecc:	sub	x1, x0, #0x1
   27ed0:	ldr	x0, [sp, #32]
   27ed4:	str	x1, [x0, #32]
   27ed8:	b	27f08 <omp_get_place_proc_ids@@OMP_4.5+0x352c>
   27edc:	ldr	x0, [sp, #32]
   27ee0:	ldr	x0, [x0, #32]
   27ee4:	cmp	x0, #0x1
   27ee8:	b.ne	27f08 <omp_get_place_proc_ids@@OMP_4.5+0x352c>  // b.any
   27eec:	ldr	x0, [sp, #32]
   27ef0:	ldr	x0, [x0, #32]
   27ef4:	sub	x1, x0, #0x1
   27ef8:	ldr	x0, [sp, #32]
   27efc:	str	x1, [x0, #32]
   27f00:	mov	w0, #0x1                   	// #1
   27f04:	strb	w0, [sp, #55]
   27f08:	ldrb	w0, [sp, #55]
   27f0c:	cmp	w0, #0x0
   27f10:	b.eq	27f40 <omp_get_place_proc_ids@@OMP_4.5+0x3564>  // b.none
   27f14:	ldrb	w0, [sp, #23]
   27f18:	cmp	w0, #0x0
   27f1c:	b.eq	27f40 <omp_get_place_proc_ids@@OMP_4.5+0x3564>  // b.none
   27f20:	ldr	x1, [sp, #24]
   27f24:	ldr	x0, [sp, #56]
   27f28:	add	x0, x0, #0x2
   27f2c:	lsl	x0, x0, #5
   27f30:	add	x0, x1, x0
   27f34:	ldrb	w0, [x0, #8]
   27f38:	cmp	w0, #0x0
   27f3c:	b.ne	27f60 <omp_get_place_proc_ids@@OMP_4.5+0x3584>  // b.any
   27f40:	ldr	x1, [sp, #24]
   27f44:	ldr	x0, [sp, #56]
   27f48:	add	x0, x0, #0x2
   27f4c:	lsl	x0, x0, #5
   27f50:	add	x0, x1, x0
   27f54:	ldrb	w0, [x0, #9]
   27f58:	cmp	w0, #0x0
   27f5c:	b.eq	27fdc <omp_get_place_proc_ids@@OMP_4.5+0x3600>  // b.none
   27f60:	ldr	x0, [sp, #32]
   27f64:	ldr	x1, [x0]
   27f68:	ldr	x2, [sp, #24]
   27f6c:	ldr	x0, [sp, #56]
   27f70:	lsl	x0, x0, #5
   27f74:	add	x0, x2, x0
   27f78:	ldr	x0, [x0, #80]
   27f7c:	add	x0, x1, x0
   27f80:	mov	x4, x0
   27f84:	ldr	x0, [sp, #32]
   27f88:	ldr	x0, [x0, #16]
   27f8c:	ldr	x1, [x0, #16]
   27f90:	ldr	x0, [sp, #32]
   27f94:	ldr	x0, [x0, #24]
   27f98:	add	x1, x1, x0
   27f9c:	ldr	x2, [sp, #24]
   27fa0:	ldr	x0, [sp, #56]
   27fa4:	lsl	x0, x0, #5
   27fa8:	add	x0, x2, x0
   27fac:	ldr	x0, [x0, #80]
   27fb0:	add	x0, x1, x0
   27fb4:	mov	x2, x0
   27fb8:	ldr	x1, [sp, #24]
   27fbc:	ldr	x0, [sp, #56]
   27fc0:	lsl	x0, x0, #5
   27fc4:	add	x0, x1, x0
   27fc8:	ldr	x0, [x0, #88]
   27fcc:	mov	x3, x0
   27fd0:	mov	x1, x4
   27fd4:	ldr	x0, [sp, #40]
   27fd8:	bl	25850 <omp_get_place_proc_ids@@OMP_4.5+0xe74>
   27fdc:	ldrb	w0, [sp, #55]
   27fe0:	cmp	w0, #0x0
   27fe4:	b.eq	27ffc <omp_get_place_proc_ids@@OMP_4.5+0x3620>  // b.none
   27fe8:	ldr	x1, [sp, #32]
   27fec:	ldr	x0, [sp, #40]
   27ff0:	bl	27d5c <omp_get_place_proc_ids@@OMP_4.5+0x3380>
   27ff4:	b	27ffc <omp_get_place_proc_ids@@OMP_4.5+0x3620>
   27ff8:	nop
   27ffc:	ldr	x0, [sp, #56]
   28000:	add	x0, x0, #0x1
   28004:	str	x0, [sp, #56]
   28008:	ldr	x0, [sp, #24]
   2800c:	ldr	x0, [x0, #48]
   28010:	ldr	x1, [sp, #56]
   28014:	cmp	x1, x0
   28018:	b.cc	27e78 <omp_get_place_proc_ids@@OMP_4.5+0x349c>  // b.lo, b.ul, b.last
   2801c:	ldr	x0, [sp, #24]
   28020:	ldr	x0, [x0]
   28024:	cmp	x0, #0x1
   28028:	b.ls	28044 <omp_get_place_proc_ids@@OMP_4.5+0x3668>  // b.plast
   2802c:	ldr	x0, [sp, #24]
   28030:	ldr	x0, [x0]
   28034:	sub	x1, x0, #0x1
   28038:	ldr	x0, [sp, #24]
   2803c:	str	x1, [x0]
   28040:	b	2804c <omp_get_place_proc_ids@@OMP_4.5+0x3670>
   28044:	ldr	x0, [sp, #24]
   28048:	bl	27d04 <omp_get_place_proc_ids@@OMP_4.5+0x3328>
   2804c:	ldr	x0, [sp, #40]
   28050:	add	x0, x0, #0xa8
   28054:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   28058:	ldp	x29, x30, [sp], #64
   2805c:	ret
   28060:	stp	x29, x30, [sp, #-176]!
   28064:	mov	x29, sp
   28068:	str	x0, [sp, #56]
   2806c:	str	x1, [sp, #48]
   28070:	str	x2, [sp, #40]
   28074:	str	x3, [sp, #32]
   28078:	str	x4, [sp, #24]
   2807c:	strb	w5, [sp, #23]
   28080:	ldrb	w0, [sp, #23]
   28084:	cmp	w0, #0x0
   28088:	b.eq	28094 <omp_get_place_proc_ids@@OMP_4.5+0x36b8>  // b.none
   2808c:	mov	w0, #0xff                  	// #255
   28090:	b	28098 <omp_get_place_proc_ids@@OMP_4.5+0x36bc>
   28094:	mov	w0, #0x7                   	// #7
   28098:	str	w0, [sp, #164]
   2809c:	ldr	x0, [sp, #56]
   280a0:	cmp	x0, #0x0
   280a4:	b.eq	282dc <omp_get_place_proc_ids@@OMP_4.5+0x3900>  // b.none
   280a8:	ldr	x0, [sp, #48]
   280ac:	cmp	x0, #0x0
   280b0:	b.eq	282e4 <omp_get_place_proc_ids@@OMP_4.5+0x3908>  // b.none
   280b4:	ldr	x0, [sp, #56]
   280b8:	add	x0, x0, #0xa8
   280bc:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   280c0:	ldr	x0, [sp, #56]
   280c4:	ldr	w0, [x0, #172]
   280c8:	cmp	w0, #0x2
   280cc:	b.ne	280e0 <omp_get_place_proc_ids@@OMP_4.5+0x3704>  // b.any
   280d0:	ldr	x0, [sp, #56]
   280d4:	add	x0, x0, #0xa8
   280d8:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   280dc:	b	282e8 <omp_get_place_proc_ids@@OMP_4.5+0x390c>
   280e0:	str	xzr, [sp, #168]
   280e4:	b	282bc <omp_get_place_proc_ids@@OMP_4.5+0x38e0>
   280e8:	ldr	x0, [sp, #168]
   280ec:	lsl	x0, x0, #3
   280f0:	ldr	x1, [sp, #32]
   280f4:	add	x0, x1, x0
   280f8:	ldr	x0, [x0]
   280fc:	cmp	x0, #0x0
   28100:	b.eq	282b0 <omp_get_place_proc_ids@@OMP_4.5+0x38d4>  // b.none
   28104:	ldr	x0, [sp, #168]
   28108:	lsl	x0, x0, #3
   2810c:	ldr	x1, [sp, #40]
   28110:	add	x0, x1, x0
   28114:	ldr	x0, [x0]
   28118:	str	x0, [sp, #64]
   2811c:	ldr	x1, [sp, #64]
   28120:	ldr	x0, [sp, #168]
   28124:	lsl	x0, x0, #3
   28128:	ldr	x2, [sp, #32]
   2812c:	add	x0, x2, x0
   28130:	ldr	x0, [x0]
   28134:	add	x0, x1, x0
   28138:	str	x0, [sp, #72]
   2813c:	ldr	x0, [sp, #56]
   28140:	add	x0, x0, #0xa0
   28144:	add	x1, sp, #0x40
   28148:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   2814c:	str	x0, [sp, #152]
   28150:	ldr	x0, [sp, #152]
   28154:	cmp	x0, #0x0
   28158:	b.eq	282b0 <omp_get_place_proc_ids@@OMP_4.5+0x38d4>  // b.none
   2815c:	ldr	x0, [sp, #168]
   28160:	mov	w2, w0
   28164:	ldr	x1, [sp, #24]
   28168:	ldrb	w0, [sp, #23]
   2816c:	bl	25b0c <omp_get_place_proc_ids@@OMP_4.5+0x1130>
   28170:	str	w0, [sp, #148]
   28174:	ldr	x0, [sp, #152]
   28178:	ldr	x1, [x0]
   2817c:	ldr	x0, [sp, #64]
   28180:	cmp	x1, x0
   28184:	b.hi	2819c <omp_get_place_proc_ids@@OMP_4.5+0x37c0>  // b.pmore
   28188:	ldr	x0, [sp, #152]
   2818c:	ldr	x1, [x0, #8]
   28190:	ldr	x0, [sp, #72]
   28194:	cmp	x1, x0
   28198:	b.cs	281dc <omp_get_place_proc_ids@@OMP_4.5+0x3800>  // b.hs, b.nlast
   2819c:	ldr	x0, [sp, #56]
   281a0:	add	x0, x0, #0xa8
   281a4:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   281a8:	ldr	x0, [sp, #64]
   281ac:	mov	x1, x0
   281b0:	ldr	x0, [sp, #72]
   281b4:	mov	x2, x0
   281b8:	ldr	x0, [sp, #152]
   281bc:	ldr	x0, [x0]
   281c0:	mov	x3, x0
   281c4:	ldr	x0, [sp, #152]
   281c8:	ldr	x0, [x0, #8]
   281cc:	mov	x4, x0
   281d0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   281d4:	add	x0, x0, #0xa78
   281d8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   281dc:	ldr	x0, [sp, #64]
   281e0:	str	x0, [sp, #136]
   281e4:	ldr	x0, [sp, #152]
   281e8:	ldr	x0, [x0, #16]
   281ec:	ldr	x1, [x0, #16]
   281f0:	ldr	x0, [sp, #152]
   281f4:	ldr	x0, [x0, #24]
   281f8:	add	x1, x1, x0
   281fc:	ldr	x0, [sp, #64]
   28200:	add	x1, x1, x0
   28204:	ldr	x0, [sp, #152]
   28208:	ldr	x0, [x0]
   2820c:	sub	x0, x1, x0
   28210:	str	x0, [sp, #128]
   28214:	ldr	x1, [sp, #72]
   28218:	ldr	x0, [sp, #64]
   2821c:	sub	x0, x1, x0
   28220:	str	x0, [sp, #120]
   28224:	ldr	w1, [sp, #148]
   28228:	ldr	w0, [sp, #164]
   2822c:	and	w0, w1, w0
   28230:	and	w0, w0, #0xc
   28234:	cmp	w0, #0x0
   28238:	b.ne	2826c <omp_get_place_proc_ids@@OMP_4.5+0x3890>  // b.any
   2823c:	ldr	w1, [sp, #148]
   28240:	ldr	w0, [sp, #164]
   28244:	and	w0, w1, w0
   28248:	and	w0, w0, #0x1
   2824c:	cmp	w0, #0x0
   28250:	b.eq	2826c <omp_get_place_proc_ids@@OMP_4.5+0x3890>  // b.none
   28254:	mov	x4, #0x0                   	// #0
   28258:	ldr	x3, [sp, #120]
   2825c:	ldr	x2, [sp, #136]
   28260:	ldr	x1, [sp, #128]
   28264:	ldr	x0, [sp, #56]
   28268:	bl	256a8 <omp_get_place_proc_ids@@OMP_4.5+0xccc>
   2826c:	ldr	w1, [sp, #148]
   28270:	ldr	w0, [sp, #164]
   28274:	and	w0, w1, w0
   28278:	and	w0, w0, #0xc
   2827c:	cmp	w0, #0x0
   28280:	b.ne	282b0 <omp_get_place_proc_ids@@OMP_4.5+0x38d4>  // b.any
   28284:	ldr	w1, [sp, #148]
   28288:	ldr	w0, [sp, #164]
   2828c:	and	w0, w1, w0
   28290:	and	w0, w0, #0x2
   28294:	cmp	w0, #0x0
   28298:	b.eq	282b0 <omp_get_place_proc_ids@@OMP_4.5+0x38d4>  // b.none
   2829c:	ldr	x3, [sp, #120]
   282a0:	ldr	x2, [sp, #128]
   282a4:	ldr	x1, [sp, #136]
   282a8:	ldr	x0, [sp, #56]
   282ac:	bl	25850 <omp_get_place_proc_ids@@OMP_4.5+0xe74>
   282b0:	ldr	x0, [sp, #168]
   282b4:	add	x0, x0, #0x1
   282b8:	str	x0, [sp, #168]
   282bc:	ldr	x1, [sp, #168]
   282c0:	ldr	x0, [sp, #48]
   282c4:	cmp	x1, x0
   282c8:	b.cc	280e8 <omp_get_place_proc_ids@@OMP_4.5+0x370c>  // b.lo, b.ul, b.last
   282cc:	ldr	x0, [sp, #56]
   282d0:	add	x0, x0, #0xa8
   282d4:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   282d8:	b	282e8 <omp_get_place_proc_ids@@OMP_4.5+0x390c>
   282dc:	nop
   282e0:	b	282e8 <omp_get_place_proc_ids@@OMP_4.5+0x390c>
   282e4:	nop
   282e8:	ldp	x29, x30, [sp], #176
   282ec:	ret
   282f0:	stp	x29, x30, [sp, #-176]!
   282f4:	mov	x29, sp
   282f8:	str	x0, [sp, #40]
   282fc:	str	w1, [sp, #36]
   28300:	str	x2, [sp, #24]
   28304:	str	x3, [sp, #16]
   28308:	strb	w4, [sp, #35]
   2830c:	ldr	x0, [sp, #24]
   28310:	ldr	x0, [x0]
   28314:	str	x0, [sp, #152]
   28318:	ldr	x0, [sp, #24]
   2831c:	ldr	x0, [x0, #8]
   28320:	str	x0, [sp, #144]
   28324:	ldr	x0, [sp, #24]
   28328:	ldr	x0, [x0, #16]
   2832c:	str	x0, [sp, #136]
   28330:	ldr	x0, [sp, #24]
   28334:	ldr	x0, [x0, #24]
   28338:	str	x0, [sp, #128]
   2833c:	ldr	x1, [sp, #144]
   28340:	ldr	x0, [sp, #152]
   28344:	sub	x0, x1, x0
   28348:	asr	x0, x0, #3
   2834c:	str	w0, [sp, #124]
   28350:	ldr	x1, [sp, #128]
   28354:	ldr	x0, [sp, #136]
   28358:	sub	x0, x1, x0
   2835c:	asr	x0, x0, #3
   28360:	lsr	x1, x0, #63
   28364:	add	x0, x1, x0
   28368:	asr	x0, x0, #1
   2836c:	str	w0, [sp, #120]
   28370:	str	xzr, [sp, #48]
   28374:	ldr	x0, [sp, #40]
   28378:	ldr	x4, [x0, #80]
   2837c:	ldr	x0, [sp, #40]
   28380:	ldr	w0, [x0, #12]
   28384:	add	x1, sp, #0x30
   28388:	mov	x3, x1
   2838c:	ldr	x2, [sp, #16]
   28390:	ldr	w1, [sp, #36]
   28394:	blr	x4
   28398:	str	w0, [sp, #116]
   2839c:	ldr	w1, [sp, #124]
   283a0:	ldr	w0, [sp, #120]
   283a4:	add	w0, w1, w0
   283a8:	ldr	w1, [sp, #116]
   283ac:	cmp	w1, w0
   283b0:	b.eq	283f8 <omp_get_place_proc_ids@@OMP_4.5+0x3a1c>  // b.none
   283b4:	ldr	x0, [sp, #40]
   283b8:	add	x0, x0, #0xa8
   283bc:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   283c0:	ldrb	w0, [sp, #35]
   283c4:	cmp	w0, #0x0
   283c8:	b.eq	283d8 <omp_get_place_proc_ids@@OMP_4.5+0x39fc>  // b.none
   283cc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   283d0:	add	x0, x0, #0x58c
   283d4:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   283d8:	ldr	w1, [sp, #124]
   283dc:	ldr	w0, [sp, #120]
   283e0:	add	w0, w1, w0
   283e4:	ldr	w2, [sp, #116]
   283e8:	mov	w1, w0
   283ec:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   283f0:	add	x0, x0, #0xab8
   283f4:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   283f8:	mov	x0, #0x40                  	// #64
   283fc:	bl	8dd0 <fprintf@plt+0x1a0>
   28400:	str	x0, [sp, #104]
   28404:	ldr	w1, [sp, #124]
   28408:	ldr	w0, [sp, #120]
   2840c:	add	w0, w1, w0
   28410:	sxtw	x1, w0
   28414:	mov	x0, x1
   28418:	lsl	x0, x0, #3
   2841c:	add	x0, x0, x1
   28420:	lsl	x0, x0, #3
   28424:	bl	8dd0 <fprintf@plt+0x1a0>
   28428:	mov	x1, x0
   2842c:	ldr	x0, [sp, #104]
   28430:	str	x1, [x0, #8]
   28434:	ldr	x0, [sp, #104]
   28438:	mov	x1, #0xffffffffffffffff    	// #-1
   2843c:	str	x1, [x0]
   28440:	ldr	x0, [sp, #104]
   28444:	str	xzr, [x0, #16]
   28448:	ldr	x0, [sp, #104]
   2844c:	str	xzr, [x0, #24]
   28450:	ldr	x0, [sp, #104]
   28454:	str	xzr, [x0, #32]
   28458:	ldr	x0, [sp, #104]
   2845c:	str	xzr, [x0, #40]
   28460:	ldr	x0, [sp, #104]
   28464:	str	xzr, [x0, #48]
   28468:	ldr	x0, [sp, #104]
   2846c:	ldr	x1, [sp, #40]
   28470:	str	x1, [x0, #56]
   28474:	ldr	x0, [sp, #104]
   28478:	ldr	x0, [x0, #8]
   2847c:	str	x0, [sp, #160]
   28480:	str	wzr, [sp, #172]
   28484:	b	28538 <omp_get_place_proc_ids@@OMP_4.5+0x3b5c>
   28488:	ldr	x0, [sp, #160]
   2848c:	str	x0, [sp, #56]
   28490:	ldrsw	x0, [sp, #172]
   28494:	lsl	x0, x0, #3
   28498:	ldr	x1, [sp, #152]
   2849c:	add	x0, x1, x0
   284a0:	ldr	x0, [x0]
   284a4:	mov	x1, x0
   284a8:	ldr	x0, [sp, #56]
   284ac:	str	x1, [x0]
   284b0:	ldr	x0, [sp, #56]
   284b4:	ldr	x0, [x0]
   284b8:	add	x1, x0, #0x1
   284bc:	ldr	x0, [sp, #56]
   284c0:	str	x1, [x0, #8]
   284c4:	ldr	x0, [sp, #56]
   284c8:	ldr	x1, [sp, #104]
   284cc:	str	x1, [x0, #16]
   284d0:	ldr	x1, [sp, #48]
   284d4:	ldrsw	x0, [sp, #172]
   284d8:	lsl	x0, x0, #4
   284dc:	add	x0, x1, x0
   284e0:	ldr	x1, [x0]
   284e4:	ldr	x0, [sp, #56]
   284e8:	str	x1, [x0, #24]
   284ec:	ldr	x0, [sp, #56]
   284f0:	mov	x1, #0xffffffffffffffff    	// #-1
   284f4:	str	x1, [x0, #32]
   284f8:	ldr	x0, [sp, #56]
   284fc:	str	xzr, [x0, #48]
   28500:	ldr	x0, [sp, #160]
   28504:	str	xzr, [x0, #56]
   28508:	ldr	x0, [sp, #160]
   2850c:	str	xzr, [x0, #64]
   28510:	ldr	x0, [sp, #40]
   28514:	add	x0, x0, #0xa0
   28518:	ldr	x1, [sp, #160]
   2851c:	bl	2d0f4 <omp_pause_resource_all@@OMP_5.0+0x1390>
   28520:	ldr	x0, [sp, #160]
   28524:	add	x0, x0, #0x48
   28528:	str	x0, [sp, #160]
   2852c:	ldr	w0, [sp, #172]
   28530:	add	w0, w0, #0x1
   28534:	str	w0, [sp, #172]
   28538:	ldr	w1, [sp, #172]
   2853c:	ldr	w0, [sp, #124]
   28540:	cmp	w1, w0
   28544:	b.lt	28488 <omp_get_place_proc_ids@@OMP_4.5+0x3aac>  // b.tstop
   28548:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2854c:	str	x0, [sp, #96]
   28550:	ldr	x0, [sp, #96]
   28554:	mvn	x0, x0
   28558:	str	x0, [sp, #88]
   2855c:	str	wzr, [sp, #172]
   28560:	b	286f0 <omp_get_place_proc_ids@@OMP_4.5+0x3d14>
   28564:	ldr	x1, [sp, #48]
   28568:	ldr	w2, [sp, #124]
   2856c:	ldr	w0, [sp, #172]
   28570:	add	w0, w2, w0
   28574:	sxtw	x0, w0
   28578:	lsl	x0, x0, #4
   2857c:	add	x0, x1, x0
   28580:	str	x0, [sp, #80]
   28584:	ldr	x0, [sp, #80]
   28588:	ldr	x1, [x0, #8]
   2858c:	ldr	x0, [sp, #80]
   28590:	ldr	x0, [x0]
   28594:	sub	x0, x1, x0
   28598:	str	x0, [sp, #72]
   2859c:	ldr	w0, [sp, #172]
   285a0:	lsl	w0, w0, #1
   285a4:	sxtw	x0, w0
   285a8:	add	x0, x0, #0x1
   285ac:	lsl	x0, x0, #3
   285b0:	ldr	x1, [sp, #136]
   285b4:	add	x0, x1, x0
   285b8:	ldr	x0, [x0]
   285bc:	mov	x1, x0
   285c0:	ldr	x0, [sp, #72]
   285c4:	cmp	x0, x1
   285c8:	b.eq	285fc <omp_get_place_proc_ids@@OMP_4.5+0x3c20>  // b.none
   285cc:	ldr	x0, [sp, #40]
   285d0:	add	x0, x0, #0xa8
   285d4:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   285d8:	ldrb	w0, [sp, #35]
   285dc:	cmp	w0, #0x0
   285e0:	b.eq	285f0 <omp_get_place_proc_ids@@OMP_4.5+0x3c14>  // b.none
   285e4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   285e8:	add	x0, x0, #0x58c
   285ec:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   285f0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   285f4:	add	x0, x0, #0xaf8
   285f8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   285fc:	ldr	x0, [sp, #160]
   28600:	str	x0, [sp, #64]
   28604:	ldr	w0, [sp, #172]
   28608:	lsl	w0, w0, #1
   2860c:	sxtw	x0, w0
   28610:	lsl	x0, x0, #3
   28614:	ldr	x1, [sp, #136]
   28618:	add	x0, x1, x0
   2861c:	ldr	x0, [x0]
   28620:	mov	x1, x0
   28624:	ldr	x0, [sp, #64]
   28628:	str	x1, [x0]
   2862c:	ldr	x0, [sp, #64]
   28630:	ldr	x1, [x0]
   28634:	ldr	w0, [sp, #172]
   28638:	lsl	w0, w0, #1
   2863c:	sxtw	x0, w0
   28640:	add	x0, x0, #0x1
   28644:	lsl	x0, x0, #3
   28648:	ldr	x2, [sp, #136]
   2864c:	add	x0, x2, x0
   28650:	ldr	x0, [x0]
   28654:	mov	x2, x0
   28658:	ldr	x0, [sp, #88]
   2865c:	and	x0, x2, x0
   28660:	add	x1, x1, x0
   28664:	ldr	x0, [sp, #64]
   28668:	str	x1, [x0, #8]
   2866c:	ldr	x0, [sp, #64]
   28670:	ldr	x1, [sp, #104]
   28674:	str	x1, [x0, #16]
   28678:	ldr	x0, [sp, #80]
   2867c:	ldr	x1, [x0]
   28680:	ldr	x0, [sp, #64]
   28684:	str	x1, [x0, #24]
   28688:	ldr	x1, [sp, #72]
   2868c:	ldr	x0, [sp, #96]
   28690:	and	x0, x1, x0
   28694:	cmp	x0, #0x0
   28698:	b.eq	286a4 <omp_get_place_proc_ids@@OMP_4.5+0x3cc8>  // b.none
   2869c:	mov	x0, #0xfffffffffffffffe    	// #-2
   286a0:	b	286a8 <omp_get_place_proc_ids@@OMP_4.5+0x3ccc>
   286a4:	mov	x0, #0xffffffffffffffff    	// #-1
   286a8:	ldr	x1, [sp, #64]
   286ac:	str	x0, [x1, #32]
   286b0:	ldr	x0, [sp, #64]
   286b4:	str	xzr, [x0, #48]
   286b8:	ldr	x0, [sp, #160]
   286bc:	str	xzr, [x0, #56]
   286c0:	ldr	x0, [sp, #160]
   286c4:	str	xzr, [x0, #64]
   286c8:	ldr	x0, [sp, #40]
   286cc:	add	x0, x0, #0xa0
   286d0:	ldr	x1, [sp, #160]
   286d4:	bl	2d0f4 <omp_pause_resource_all@@OMP_5.0+0x1390>
   286d8:	ldr	x0, [sp, #160]
   286dc:	add	x0, x0, #0x48
   286e0:	str	x0, [sp, #160]
   286e4:	ldr	w0, [sp, #172]
   286e8:	add	w0, w0, #0x1
   286ec:	str	w0, [sp, #172]
   286f0:	ldr	w1, [sp, #172]
   286f4:	ldr	w0, [sp, #120]
   286f8:	cmp	w1, w0
   286fc:	b.lt	28564 <omp_get_place_proc_ids@@OMP_4.5+0x3b88>  // b.tstop
   28700:	ldr	x0, [sp, #48]
   28704:	bl	8a20 <free@plt>
   28708:	nop
   2870c:	ldp	x29, x30, [sp], #176
   28710:	ret
   28714:	stp	x29, x30, [sp, #-192]!
   28718:	mov	x29, sp
   2871c:	str	x0, [sp, #40]
   28720:	str	w1, [sp, #36]
   28724:	str	x2, [sp, #24]
   28728:	str	x3, [sp, #16]
   2872c:	ldr	x0, [sp, #24]
   28730:	ldr	x0, [x0]
   28734:	str	x0, [sp, #168]
   28738:	ldr	x0, [sp, #24]
   2873c:	ldr	x0, [x0, #8]
   28740:	str	x0, [sp, #160]
   28744:	ldr	x0, [sp, #24]
   28748:	ldr	x0, [x0, #16]
   2874c:	str	x0, [sp, #152]
   28750:	ldr	x0, [sp, #24]
   28754:	ldr	x0, [x0, #24]
   28758:	str	x0, [sp, #144]
   2875c:	ldr	x1, [sp, #160]
   28760:	ldr	x0, [sp, #168]
   28764:	sub	x0, x1, x0
   28768:	asr	x0, x0, #3
   2876c:	str	w0, [sp, #140]
   28770:	ldr	x1, [sp, #144]
   28774:	ldr	x0, [sp, #152]
   28778:	sub	x0, x1, x0
   2877c:	asr	x0, x0, #3
   28780:	lsr	x1, x0, #63
   28784:	add	x0, x1, x0
   28788:	asr	x0, x0, #1
   2878c:	str	w0, [sp, #136]
   28790:	str	xzr, [sp, #184]
   28794:	ldr	w0, [sp, #140]
   28798:	cmp	w0, #0x0
   2879c:	b.ne	287ac <omp_get_place_proc_ids@@OMP_4.5+0x3dd0>  // b.any
   287a0:	ldr	w0, [sp, #136]
   287a4:	cmp	w0, #0x0
   287a8:	b.eq	287f0 <omp_get_place_proc_ids@@OMP_4.5+0x3e14>  // b.none
   287ac:	ldr	w0, [sp, #140]
   287b0:	cmp	w0, #0x0
   287b4:	b.eq	287c4 <omp_get_place_proc_ids@@OMP_4.5+0x3de8>  // b.none
   287b8:	ldr	x0, [sp, #168]
   287bc:	ldr	x0, [x0]
   287c0:	b	287cc <omp_get_place_proc_ids@@OMP_4.5+0x3df0>
   287c4:	ldr	x0, [sp, #152]
   287c8:	ldr	x0, [x0]
   287cc:	str	x0, [sp, #56]
   287d0:	ldr	x0, [sp, #56]
   287d4:	add	x0, x0, #0x1
   287d8:	str	x0, [sp, #64]
   287dc:	ldr	x0, [sp, #40]
   287e0:	add	x0, x0, #0xa0
   287e4:	add	x1, sp, #0x38
   287e8:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   287ec:	str	x0, [sp, #184]
   287f0:	ldr	x0, [sp, #40]
   287f4:	ldr	x3, [x0, #88]
   287f8:	ldr	x0, [sp, #40]
   287fc:	ldr	w0, [x0, #12]
   28800:	ldr	x2, [sp, #16]
   28804:	ldr	w1, [sp, #36]
   28808:	blr	x3
   2880c:	and	w0, w0, #0xff
   28810:	eor	w0, w0, #0x1
   28814:	and	w0, w0, #0xff
   28818:	cmp	w0, #0x0
   2881c:	b.eq	28838 <omp_get_place_proc_ids@@OMP_4.5+0x3e5c>  // b.none
   28820:	ldr	x0, [sp, #40]
   28824:	add	x0, x0, #0xa8
   28828:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2882c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   28830:	add	x0, x0, #0xb28
   28834:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   28838:	str	wzr, [sp, #180]
   2883c:	b	28880 <omp_get_place_proc_ids@@OMP_4.5+0x3ea4>
   28840:	ldrsw	x0, [sp, #180]
   28844:	lsl	x0, x0, #3
   28848:	ldr	x1, [sp, #168]
   2884c:	add	x0, x1, x0
   28850:	ldr	x0, [x0]
   28854:	str	x0, [sp, #56]
   28858:	ldr	x0, [sp, #56]
   2885c:	add	x0, x0, #0x1
   28860:	str	x0, [sp, #64]
   28864:	ldr	x0, [sp, #40]
   28868:	add	x0, x0, #0xa0
   2886c:	add	x1, sp, #0x38
   28870:	bl	2d224 <omp_pause_resource_all@@OMP_5.0+0x14c0>
   28874:	ldr	w0, [sp, #180]
   28878:	add	w0, w0, #0x1
   2887c:	str	w0, [sp, #180]
   28880:	ldr	w1, [sp, #180]
   28884:	ldr	w0, [sp, #140]
   28888:	cmp	w1, w0
   2888c:	b.lt	28840 <omp_get_place_proc_ids@@OMP_4.5+0x3e64>  // b.tstop
   28890:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   28894:	str	x0, [sp, #128]
   28898:	ldr	x0, [sp, #128]
   2889c:	mvn	x0, x0
   288a0:	str	x0, [sp, #120]
   288a4:	strb	wzr, [sp, #179]
   288a8:	str	wzr, [sp, #180]
   288ac:	b	28980 <omp_get_place_proc_ids@@OMP_4.5+0x3fa4>
   288b0:	ldr	w0, [sp, #180]
   288b4:	lsl	w0, w0, #1
   288b8:	sxtw	x0, w0
   288bc:	lsl	x0, x0, #3
   288c0:	ldr	x1, [sp, #152]
   288c4:	add	x0, x1, x0
   288c8:	ldr	x0, [x0]
   288cc:	str	x0, [sp, #56]
   288d0:	ldr	x1, [sp, #56]
   288d4:	ldr	w0, [sp, #180]
   288d8:	lsl	w0, w0, #1
   288dc:	sxtw	x0, w0
   288e0:	add	x0, x0, #0x1
   288e4:	lsl	x0, x0, #3
   288e8:	ldr	x2, [sp, #152]
   288ec:	add	x0, x2, x0
   288f0:	ldr	x0, [x0]
   288f4:	mov	x2, x0
   288f8:	ldr	x0, [sp, #120]
   288fc:	and	x0, x2, x0
   28900:	add	x0, x1, x0
   28904:	str	x0, [sp, #64]
   28908:	ldr	w0, [sp, #180]
   2890c:	lsl	w0, w0, #1
   28910:	sxtw	x0, w0
   28914:	add	x0, x0, #0x1
   28918:	lsl	x0, x0, #3
   2891c:	ldr	x1, [sp, #152]
   28920:	add	x0, x1, x0
   28924:	ldr	x0, [x0]
   28928:	mov	x1, x0
   2892c:	ldr	x0, [sp, #128]
   28930:	and	x0, x1, x0
   28934:	cmp	x0, #0x0
   28938:	b.ne	28950 <omp_get_place_proc_ids@@OMP_4.5+0x3f74>  // b.any
   2893c:	ldr	x0, [sp, #40]
   28940:	add	x0, x0, #0xa0
   28944:	add	x1, sp, #0x38
   28948:	bl	2d224 <omp_pause_resource_all@@OMP_5.0+0x14c0>
   2894c:	b	28974 <omp_get_place_proc_ids@@OMP_4.5+0x3f98>
   28950:	ldr	x0, [sp, #40]
   28954:	add	x0, x0, #0xa0
   28958:	add	x1, sp, #0x38
   2895c:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   28960:	str	x0, [sp, #112]
   28964:	ldr	x1, [sp, #112]
   28968:	ldr	x0, [sp, #40]
   2896c:	bl	27d5c <omp_get_place_proc_ids@@OMP_4.5+0x3380>
   28970:	strb	w0, [sp, #179]
   28974:	ldr	w0, [sp, #180]
   28978:	add	w0, w0, #0x1
   2897c:	str	w0, [sp, #180]
   28980:	ldr	w1, [sp, #180]
   28984:	ldr	w0, [sp, #136]
   28988:	cmp	w1, w0
   2898c:	b.lt	288b0 <omp_get_place_proc_ids@@OMP_4.5+0x3ed4>  // b.tstop
   28990:	ldr	x0, [sp, #184]
   28994:	cmp	x0, #0x0
   28998:	b.eq	289c4 <omp_get_place_proc_ids@@OMP_4.5+0x3fe8>  // b.none
   2899c:	ldrb	w0, [sp, #179]
   289a0:	eor	w0, w0, #0x1
   289a4:	and	w0, w0, #0xff
   289a8:	cmp	w0, #0x0
   289ac:	b.eq	289c4 <omp_get_place_proc_ids@@OMP_4.5+0x3fe8>  // b.none
   289b0:	ldr	x0, [sp, #184]
   289b4:	ldr	x0, [x0, #16]
   289b8:	bl	8a20 <free@plt>
   289bc:	ldr	x0, [sp, #184]
   289c0:	bl	8a20 <free@plt>
   289c4:	nop
   289c8:	ldp	x29, x30, [sp], #192
   289cc:	ret

00000000000289d0 <GOMP_offload_register_ver@@GOMP_4.5>:
   289d0:	stp	x29, x30, [sp, #-64]!
   289d4:	mov	x29, sp
   289d8:	str	w0, [sp, #44]
   289dc:	str	x1, [sp, #32]
   289e0:	str	w2, [sp, #40]
   289e4:	str	x3, [sp, #24]
   289e8:	ldr	w0, [sp, #44]
   289ec:	lsr	w0, w0, #16
   289f0:	cmp	w0, #0x1
   289f4:	b.ls	28a14 <GOMP_offload_register_ver@@GOMP_4.5+0x44>  // b.plast
   289f8:	ldr	w0, [sp, #44]
   289fc:	lsr	w0, w0, #16
   28a00:	mov	w2, w0
   28a04:	mov	w1, #0x1                   	// #1
   28a08:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   28a0c:	add	x0, x0, #0xb40
   28a10:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   28a14:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28a18:	add	x0, x0, #0x58c
   28a1c:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   28a20:	str	wzr, [sp, #60]
   28a24:	b	28ab8 <GOMP_offload_register_ver@@GOMP_4.5+0xe8>
   28a28:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28a2c:	add	x0, x0, #0x5a0
   28a30:	ldr	x2, [x0]
   28a34:	ldrsw	x1, [sp, #60]
   28a38:	mov	x0, x1
   28a3c:	lsl	x0, x0, #2
   28a40:	add	x0, x0, x1
   28a44:	lsl	x0, x0, #2
   28a48:	sub	x0, x0, x1
   28a4c:	lsl	x0, x0, #4
   28a50:	add	x0, x2, x0
   28a54:	str	x0, [sp, #48]
   28a58:	ldr	x0, [sp, #48]
   28a5c:	add	x0, x0, #0xa8
   28a60:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   28a64:	ldr	x0, [sp, #48]
   28a68:	ldr	w1, [x0, #16]
   28a6c:	ldr	w0, [sp, #40]
   28a70:	cmp	w1, w0
   28a74:	b.ne	28aa0 <GOMP_offload_register_ver@@GOMP_4.5+0xd0>  // b.any
   28a78:	ldr	x0, [sp, #48]
   28a7c:	ldr	w0, [x0, #172]
   28a80:	cmp	w0, #0x1
   28a84:	b.ne	28aa0 <GOMP_offload_register_ver@@GOMP_4.5+0xd0>  // b.any
   28a88:	mov	w4, #0x1                   	// #1
   28a8c:	ldr	x3, [sp, #24]
   28a90:	ldr	x2, [sp, #32]
   28a94:	ldr	w1, [sp, #44]
   28a98:	ldr	x0, [sp, #48]
   28a9c:	bl	282f0 <omp_get_place_proc_ids@@OMP_4.5+0x3914>
   28aa0:	ldr	x0, [sp, #48]
   28aa4:	add	x0, x0, #0xa8
   28aa8:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   28aac:	ldr	w0, [sp, #60]
   28ab0:	add	w0, w0, #0x1
   28ab4:	str	w0, [sp, #60]
   28ab8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28abc:	add	x0, x0, #0x5a8
   28ac0:	ldr	w0, [x0]
   28ac4:	ldr	w1, [sp, #60]
   28ac8:	cmp	w1, w0
   28acc:	b.lt	28a28 <GOMP_offload_register_ver@@GOMP_4.5+0x58>  // b.tstop
   28ad0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28ad4:	add	x0, x0, #0x590
   28ad8:	ldr	x2, [x0]
   28adc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28ae0:	add	x0, x0, #0x598
   28ae4:	ldr	w0, [x0]
   28ae8:	add	w0, w0, #0x1
   28aec:	sxtw	x1, w0
   28af0:	mov	x0, x1
   28af4:	lsl	x0, x0, #1
   28af8:	add	x0, x0, x1
   28afc:	lsl	x0, x0, #3
   28b00:	mov	x1, x0
   28b04:	mov	x0, x2
   28b08:	bl	25024 <omp_get_place_proc_ids@@OMP_4.5+0x648>
   28b0c:	mov	x1, x0
   28b10:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28b14:	add	x0, x0, #0x590
   28b18:	str	x1, [x0]
   28b1c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28b20:	add	x0, x0, #0x590
   28b24:	ldr	x2, [x0]
   28b28:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28b2c:	add	x0, x0, #0x598
   28b30:	ldr	w0, [x0]
   28b34:	sxtw	x1, w0
   28b38:	mov	x0, x1
   28b3c:	lsl	x0, x0, #1
   28b40:	add	x0, x0, x1
   28b44:	lsl	x0, x0, #3
   28b48:	add	x0, x2, x0
   28b4c:	ldr	w1, [sp, #44]
   28b50:	str	w1, [x0]
   28b54:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28b58:	add	x0, x0, #0x590
   28b5c:	ldr	x2, [x0]
   28b60:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28b64:	add	x0, x0, #0x598
   28b68:	ldr	w0, [x0]
   28b6c:	sxtw	x1, w0
   28b70:	mov	x0, x1
   28b74:	lsl	x0, x0, #1
   28b78:	add	x0, x0, x1
   28b7c:	lsl	x0, x0, #3
   28b80:	add	x0, x2, x0
   28b84:	ldr	w1, [sp, #40]
   28b88:	str	w1, [x0, #4]
   28b8c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28b90:	add	x0, x0, #0x590
   28b94:	ldr	x2, [x0]
   28b98:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28b9c:	add	x0, x0, #0x598
   28ba0:	ldr	w0, [x0]
   28ba4:	sxtw	x1, w0
   28ba8:	mov	x0, x1
   28bac:	lsl	x0, x0, #1
   28bb0:	add	x0, x0, x1
   28bb4:	lsl	x0, x0, #3
   28bb8:	add	x0, x2, x0
   28bbc:	ldr	x1, [sp, #32]
   28bc0:	str	x1, [x0, #8]
   28bc4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28bc8:	add	x0, x0, #0x590
   28bcc:	ldr	x2, [x0]
   28bd0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28bd4:	add	x0, x0, #0x598
   28bd8:	ldr	w0, [x0]
   28bdc:	sxtw	x1, w0
   28be0:	mov	x0, x1
   28be4:	lsl	x0, x0, #1
   28be8:	add	x0, x0, x1
   28bec:	lsl	x0, x0, #3
   28bf0:	add	x0, x2, x0
   28bf4:	ldr	x1, [sp, #24]
   28bf8:	str	x1, [x0, #16]
   28bfc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28c00:	add	x0, x0, #0x598
   28c04:	ldr	w0, [x0]
   28c08:	add	w1, w0, #0x1
   28c0c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28c10:	add	x0, x0, #0x598
   28c14:	str	w1, [x0]
   28c18:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28c1c:	add	x0, x0, #0x58c
   28c20:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   28c24:	nop
   28c28:	ldp	x29, x30, [sp], #64
   28c2c:	ret

0000000000028c30 <GOMP_offload_register@@GOMP_4.0.1>:
   28c30:	stp	x29, x30, [sp, #-48]!
   28c34:	mov	x29, sp
   28c38:	str	x0, [sp, #40]
   28c3c:	str	w1, [sp, #36]
   28c40:	str	x2, [sp, #24]
   28c44:	ldr	x3, [sp, #24]
   28c48:	ldr	w2, [sp, #36]
   28c4c:	ldr	x1, [sp, #40]
   28c50:	mov	w0, #0x0                   	// #0
   28c54:	bl	8b30 <GOMP_offload_register_ver@plt>
   28c58:	nop
   28c5c:	ldp	x29, x30, [sp], #48
   28c60:	ret

0000000000028c64 <GOMP_offload_unregister_ver@@GOMP_4.5>:
   28c64:	stp	x29, x30, [sp, #-64]!
   28c68:	mov	x29, sp
   28c6c:	str	w0, [sp, #44]
   28c70:	str	x1, [sp, #32]
   28c74:	str	w2, [sp, #40]
   28c78:	str	x3, [sp, #24]
   28c7c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28c80:	add	x0, x0, #0x58c
   28c84:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   28c88:	str	wzr, [sp, #60]
   28c8c:	b	28d1c <GOMP_offload_unregister_ver@@GOMP_4.5+0xb8>
   28c90:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28c94:	add	x0, x0, #0x5a0
   28c98:	ldr	x2, [x0]
   28c9c:	ldrsw	x1, [sp, #60]
   28ca0:	mov	x0, x1
   28ca4:	lsl	x0, x0, #2
   28ca8:	add	x0, x0, x1
   28cac:	lsl	x0, x0, #2
   28cb0:	sub	x0, x0, x1
   28cb4:	lsl	x0, x0, #4
   28cb8:	add	x0, x2, x0
   28cbc:	str	x0, [sp, #48]
   28cc0:	ldr	x0, [sp, #48]
   28cc4:	add	x0, x0, #0xa8
   28cc8:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   28ccc:	ldr	x0, [sp, #48]
   28cd0:	ldr	w1, [x0, #16]
   28cd4:	ldr	w0, [sp, #40]
   28cd8:	cmp	w1, w0
   28cdc:	b.ne	28d04 <GOMP_offload_unregister_ver@@GOMP_4.5+0xa0>  // b.any
   28ce0:	ldr	x0, [sp, #48]
   28ce4:	ldr	w0, [x0, #172]
   28ce8:	cmp	w0, #0x1
   28cec:	b.ne	28d04 <GOMP_offload_unregister_ver@@GOMP_4.5+0xa0>  // b.any
   28cf0:	ldr	x3, [sp, #24]
   28cf4:	ldr	x2, [sp, #32]
   28cf8:	ldr	w1, [sp, #44]
   28cfc:	ldr	x0, [sp, #48]
   28d00:	bl	28714 <omp_get_place_proc_ids@@OMP_4.5+0x3d38>
   28d04:	ldr	x0, [sp, #48]
   28d08:	add	x0, x0, #0xa8
   28d0c:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   28d10:	ldr	w0, [sp, #60]
   28d14:	add	w0, w0, #0x1
   28d18:	str	w0, [sp, #60]
   28d1c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28d20:	add	x0, x0, #0x5a8
   28d24:	ldr	w0, [x0]
   28d28:	ldr	w1, [sp, #60]
   28d2c:	cmp	w1, w0
   28d30:	b.lt	28c90 <GOMP_offload_unregister_ver@@GOMP_4.5+0x2c>  // b.tstop
   28d34:	str	wzr, [sp, #60]
   28d38:	b	28e04 <GOMP_offload_unregister_ver@@GOMP_4.5+0x1a0>
   28d3c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28d40:	add	x0, x0, #0x590
   28d44:	ldr	x2, [x0]
   28d48:	ldrsw	x1, [sp, #60]
   28d4c:	mov	x0, x1
   28d50:	lsl	x0, x0, #1
   28d54:	add	x0, x0, x1
   28d58:	lsl	x0, x0, #3
   28d5c:	add	x0, x2, x0
   28d60:	ldr	x0, [x0, #16]
   28d64:	ldr	x1, [sp, #24]
   28d68:	cmp	x1, x0
   28d6c:	b.ne	28df8 <GOMP_offload_unregister_ver@@GOMP_4.5+0x194>  // b.any
   28d70:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28d74:	add	x0, x0, #0x590
   28d78:	ldr	x2, [x0]
   28d7c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28d80:	add	x0, x0, #0x598
   28d84:	ldr	w0, [x0]
   28d88:	sub	w1, w0, #0x1
   28d8c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28d90:	add	x0, x0, #0x598
   28d94:	str	w1, [x0]
   28d98:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28d9c:	add	x0, x0, #0x598
   28da0:	ldr	w0, [x0]
   28da4:	sxtw	x1, w0
   28da8:	mov	x0, x1
   28dac:	lsl	x0, x0, #1
   28db0:	add	x0, x0, x1
   28db4:	lsl	x0, x0, #3
   28db8:	add	x3, x2, x0
   28dbc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28dc0:	add	x0, x0, #0x590
   28dc4:	ldr	x2, [x0]
   28dc8:	ldrsw	x1, [sp, #60]
   28dcc:	mov	x0, x1
   28dd0:	lsl	x0, x0, #1
   28dd4:	add	x0, x0, x1
   28dd8:	lsl	x0, x0, #3
   28ddc:	add	x0, x2, x0
   28de0:	mov	x2, x0
   28de4:	ldp	x0, x1, [x3]
   28de8:	stp	x0, x1, [x2]
   28dec:	ldr	x0, [x3, #16]
   28df0:	str	x0, [x2, #16]
   28df4:	b	28e1c <GOMP_offload_unregister_ver@@GOMP_4.5+0x1b8>
   28df8:	ldr	w0, [sp, #60]
   28dfc:	add	w0, w0, #0x1
   28e00:	str	w0, [sp, #60]
   28e04:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28e08:	add	x0, x0, #0x598
   28e0c:	ldr	w0, [x0]
   28e10:	ldr	w1, [sp, #60]
   28e14:	cmp	w1, w0
   28e18:	b.lt	28d3c <GOMP_offload_unregister_ver@@GOMP_4.5+0xd8>  // b.tstop
   28e1c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28e20:	add	x0, x0, #0x58c
   28e24:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   28e28:	nop
   28e2c:	ldp	x29, x30, [sp], #64
   28e30:	ret

0000000000028e34 <GOMP_offload_unregister@@GOMP_4.0.1>:
   28e34:	stp	x29, x30, [sp, #-48]!
   28e38:	mov	x29, sp
   28e3c:	str	x0, [sp, #40]
   28e40:	str	w1, [sp, #36]
   28e44:	str	x2, [sp, #24]
   28e48:	ldr	x3, [sp, #24]
   28e4c:	ldr	w2, [sp, #36]
   28e50:	ldr	x1, [sp, #40]
   28e54:	mov	w0, #0x0                   	// #0
   28e58:	bl	8a40 <GOMP_offload_unregister_ver@plt>
   28e5c:	nop
   28e60:	ldp	x29, x30, [sp], #48
   28e64:	ret
   28e68:	stp	x29, x30, [sp, #-48]!
   28e6c:	mov	x29, sp
   28e70:	str	x0, [sp, #24]
   28e74:	ldr	x0, [sp, #24]
   28e78:	ldr	x1, [x0, #56]
   28e7c:	ldr	x0, [sp, #24]
   28e80:	ldr	w0, [x0, #12]
   28e84:	blr	x1
   28e88:	and	w0, w0, #0xff
   28e8c:	eor	w0, w0, #0x1
   28e90:	and	w0, w0, #0xff
   28e94:	cmp	w0, #0x0
   28e98:	b.eq	28eb4 <GOMP_offload_unregister@@GOMP_4.0.1+0x80>  // b.none
   28e9c:	ldr	x0, [sp, #24]
   28ea0:	add	x0, x0, #0xa8
   28ea4:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   28ea8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   28eac:	add	x0, x0, #0xb70
   28eb0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   28eb4:	str	wzr, [sp, #44]
   28eb8:	b	28f30 <GOMP_offload_unregister@@GOMP_4.0.1+0xfc>
   28ebc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28ec0:	add	x0, x0, #0x590
   28ec4:	ldr	x2, [x0]
   28ec8:	ldrsw	x1, [sp, #44]
   28ecc:	mov	x0, x1
   28ed0:	lsl	x0, x0, #1
   28ed4:	add	x0, x0, x1
   28ed8:	lsl	x0, x0, #3
   28edc:	add	x0, x2, x0
   28ee0:	str	x0, [sp, #32]
   28ee4:	ldr	x0, [sp, #32]
   28ee8:	ldr	w1, [x0, #4]
   28eec:	ldr	x0, [sp, #24]
   28ef0:	ldr	w0, [x0, #16]
   28ef4:	cmp	w1, w0
   28ef8:	b.ne	28f24 <GOMP_offload_unregister@@GOMP_4.0.1+0xf0>  // b.any
   28efc:	ldr	x0, [sp, #32]
   28f00:	ldr	w1, [x0]
   28f04:	ldr	x0, [sp, #32]
   28f08:	ldr	x2, [x0, #8]
   28f0c:	ldr	x0, [sp, #32]
   28f10:	ldr	x0, [x0, #16]
   28f14:	mov	w4, #0x0                   	// #0
   28f18:	mov	x3, x0
   28f1c:	ldr	x0, [sp, #24]
   28f20:	bl	282f0 <omp_get_place_proc_ids@@OMP_4.5+0x3914>
   28f24:	ldr	w0, [sp, #44]
   28f28:	add	w0, w0, #0x1
   28f2c:	str	w0, [sp, #44]
   28f30:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28f34:	add	x0, x0, #0x598
   28f38:	ldr	w0, [x0]
   28f3c:	ldr	w1, [sp, #44]
   28f40:	cmp	w1, w0
   28f44:	b.lt	28ebc <GOMP_offload_unregister@@GOMP_4.0.1+0x88>  // b.tstop
   28f48:	ldr	x0, [sp, #24]
   28f4c:	mov	w1, #0x1                   	// #1
   28f50:	str	w1, [x0, #172]
   28f54:	nop
   28f58:	ldp	x29, x30, [sp], #48
   28f5c:	ret
   28f60:	stp	x29, x30, [sp, #-48]!
   28f64:	mov	x29, sp
   28f68:	str	x0, [sp, #24]
   28f6c:	ldr	x0, [sp, #24]
   28f70:	ldr	w0, [x0, #172]
   28f74:	cmp	w0, #0x1
   28f78:	b.ne	29010 <GOMP_offload_unregister@@GOMP_4.0.1+0x1dc>  // b.any
   28f7c:	str	wzr, [sp, #44]
   28f80:	b	28ff4 <GOMP_offload_unregister@@GOMP_4.0.1+0x1c0>
   28f84:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28f88:	add	x0, x0, #0x590
   28f8c:	ldr	x2, [x0]
   28f90:	ldr	w1, [sp, #44]
   28f94:	mov	x0, x1
   28f98:	lsl	x0, x0, #1
   28f9c:	add	x0, x0, x1
   28fa0:	lsl	x0, x0, #3
   28fa4:	add	x0, x2, x0
   28fa8:	str	x0, [sp, #32]
   28fac:	ldr	x0, [sp, #32]
   28fb0:	ldr	w1, [x0, #4]
   28fb4:	ldr	x0, [sp, #24]
   28fb8:	ldr	w0, [x0, #16]
   28fbc:	cmp	w1, w0
   28fc0:	b.ne	28fe8 <GOMP_offload_unregister@@GOMP_4.0.1+0x1b4>  // b.any
   28fc4:	ldr	x0, [sp, #32]
   28fc8:	ldr	w1, [x0]
   28fcc:	ldr	x0, [sp, #32]
   28fd0:	ldr	x2, [x0, #8]
   28fd4:	ldr	x0, [sp, #32]
   28fd8:	ldr	x0, [x0, #16]
   28fdc:	mov	x3, x0
   28fe0:	ldr	x0, [sp, #24]
   28fe4:	bl	28714 <omp_get_place_proc_ids@@OMP_4.5+0x3d38>
   28fe8:	ldr	w0, [sp, #44]
   28fec:	add	w0, w0, #0x1
   28ff0:	str	w0, [sp, #44]
   28ff4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   28ff8:	add	x0, x0, #0x598
   28ffc:	ldr	w0, [x0]
   29000:	mov	w1, w0
   29004:	ldr	w0, [sp, #44]
   29008:	cmp	w0, w1
   2900c:	b.cc	28f84 <GOMP_offload_unregister@@GOMP_4.0.1+0x150>  // b.lo, b.ul, b.last
   29010:	nop
   29014:	ldp	x29, x30, [sp], #48
   29018:	ret
   2901c:	stp	x29, x30, [sp, #-48]!
   29020:	mov	x29, sp
   29024:	str	x0, [sp, #24]
   29028:	b	29064 <GOMP_offload_unregister@@GOMP_4.0.1+0x230>
   2902c:	ldr	x0, [sp, #24]
   29030:	ldr	x0, [x0]
   29034:	ldr	x0, [x0, #16]
   29038:	str	x0, [sp, #40]
   2903c:	ldr	x0, [sp, #24]
   29040:	ldr	x0, [x0]
   29044:	mov	x1, x0
   29048:	ldr	x0, [sp, #24]
   2904c:	bl	2d224 <omp_pause_resource_all@@OMP_5.0+0x14c0>
   29050:	ldr	x0, [sp, #40]
   29054:	ldr	x0, [x0, #8]
   29058:	bl	8a20 <free@plt>
   2905c:	ldr	x0, [sp, #40]
   29060:	bl	8a20 <free@plt>
   29064:	ldr	x0, [sp, #24]
   29068:	ldr	x0, [x0]
   2906c:	cmp	x0, #0x0
   29070:	b.ne	2902c <GOMP_offload_unregister@@GOMP_4.0.1+0x1f8>  // b.any
   29074:	nop
   29078:	nop
   2907c:	ldp	x29, x30, [sp], #48
   29080:	ret
   29084:	stp	x29, x30, [sp, #-144]!
   29088:	mov	x29, sp
   2908c:	str	x0, [sp, #24]
   29090:	str	x1, [sp, #16]
   29094:	bl	24fbc <omp_get_place_proc_ids@@OMP_4.5+0x5e0>
   29098:	str	x0, [sp, #136]
   2909c:	ldr	x1, [sp, #136]
   290a0:	add	x0, sp, #0x20
   290a4:	ldp	x2, x3, [x1]
   290a8:	stp	x2, x3, [x0]
   290ac:	ldp	x2, x3, [x1, #16]
   290b0:	stp	x2, x3, [x0, #16]
   290b4:	ldp	x2, x3, [x1, #32]
   290b8:	stp	x2, x3, [x0, #32]
   290bc:	ldp	x2, x3, [x1, #48]
   290c0:	stp	x2, x3, [x0, #48]
   290c4:	ldp	x2, x3, [x1, #64]
   290c8:	stp	x2, x3, [x0, #64]
   290cc:	ldp	x2, x3, [x1, #80]
   290d0:	stp	x2, x3, [x0, #80]
   290d4:	ldr	x1, [x1, #96]
   290d8:	str	x1, [x0, #96]
   290dc:	mov	x2, #0x68                  	// #104
   290e0:	mov	w1, #0x0                   	// #0
   290e4:	ldr	x0, [sp, #136]
   290e8:	bl	88d0 <memset@plt>
   290ec:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   290f0:	add	x0, x0, #0x650
   290f4:	ldr	x0, [x0]
   290f8:	cmp	x0, #0x0
   290fc:	b.eq	29124 <GOMP_offload_unregister@@GOMP_4.0.1+0x2f0>  // b.none
   29100:	ldr	w1, [sp, #124]
   29104:	ldr	x0, [sp, #136]
   29108:	str	w1, [x0, #92]
   2910c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   29110:	add	x0, x0, #0x678
   29114:	ldr	x0, [x0]
   29118:	mov	w1, w0
   2911c:	ldr	x0, [sp, #136]
   29120:	str	w1, [x0, #56]
   29124:	ldr	x1, [sp, #24]
   29128:	ldr	x0, [sp, #16]
   2912c:	blr	x1
   29130:	ldr	x0, [sp, #136]
   29134:	bl	1dd54 <omp_in_final@@OMP_3.1+0x988>
   29138:	ldr	x0, [sp, #136]
   2913c:	mov	x1, x0
   29140:	add	x0, sp, #0x20
   29144:	ldp	x2, x3, [x0]
   29148:	stp	x2, x3, [x1]
   2914c:	ldp	x2, x3, [x0, #16]
   29150:	stp	x2, x3, [x1, #16]
   29154:	ldp	x2, x3, [x0, #32]
   29158:	stp	x2, x3, [x1, #32]
   2915c:	ldp	x2, x3, [x0, #48]
   29160:	stp	x2, x3, [x1, #48]
   29164:	ldp	x2, x3, [x0, #64]
   29168:	stp	x2, x3, [x1, #64]
   2916c:	ldp	x2, x3, [x0, #80]
   29170:	stp	x2, x3, [x1, #80]
   29174:	ldr	x0, [x0, #96]
   29178:	str	x0, [x1, #96]
   2917c:	nop
   29180:	ldp	x29, x30, [sp], #144
   29184:	ret
   29188:	sub	sp, sp, #0x40
   2918c:	str	x0, [sp, #40]
   29190:	str	x1, [sp, #32]
   29194:	str	x2, [sp, #24]
   29198:	str	x3, [sp, #16]
   2919c:	str	x4, [sp, #8]
   291a0:	str	xzr, [sp, #56]
   291a4:	b	29270 <GOMP_offload_unregister@@GOMP_4.0.1+0x43c>
   291a8:	ldr	x0, [sp, #56]
   291ac:	lsl	x0, x0, #1
   291b0:	ldr	x1, [sp, #24]
   291b4:	add	x0, x1, x0
   291b8:	ldrh	w0, [x0]
   291bc:	and	w0, w0, #0xff
   291c0:	cmp	w0, #0xc
   291c4:	b.ne	29264 <GOMP_offload_unregister@@GOMP_4.0.1+0x430>  // b.any
   291c8:	ldr	x0, [sp, #56]
   291cc:	lsl	x0, x0, #1
   291d0:	ldr	x1, [sp, #24]
   291d4:	add	x0, x1, x0
   291d8:	ldrh	w0, [x0]
   291dc:	lsr	w0, w0, #8
   291e0:	and	w0, w0, #0xffff
   291e4:	mov	w1, w0
   291e8:	mov	x0, #0x1                   	// #1
   291ec:	lsl	x0, x0, x1
   291f0:	str	x0, [sp, #48]
   291f4:	ldr	x0, [sp, #16]
   291f8:	ldr	x0, [x0]
   291fc:	ldr	x1, [sp, #48]
   29200:	cmp	x1, x0
   29204:	b.ls	29214 <GOMP_offload_unregister@@GOMP_4.0.1+0x3e0>  // b.plast
   29208:	ldr	x0, [sp, #16]
   2920c:	ldr	x1, [sp, #48]
   29210:	str	x1, [x0]
   29214:	ldr	x0, [sp, #8]
   29218:	ldr	x1, [x0]
   2921c:	ldr	x0, [sp, #48]
   29220:	add	x0, x1, x0
   29224:	sub	x1, x0, #0x1
   29228:	ldr	x0, [sp, #48]
   2922c:	neg	x0, x0
   29230:	and	x1, x1, x0
   29234:	ldr	x0, [sp, #8]
   29238:	str	x1, [x0]
   2923c:	ldr	x0, [sp, #8]
   29240:	ldr	x1, [x0]
   29244:	ldr	x0, [sp, #56]
   29248:	lsl	x0, x0, #3
   2924c:	ldr	x2, [sp, #32]
   29250:	add	x0, x2, x0
   29254:	ldr	x0, [x0]
   29258:	add	x1, x1, x0
   2925c:	ldr	x0, [sp, #8]
   29260:	str	x1, [x0]
   29264:	ldr	x0, [sp, #56]
   29268:	add	x0, x0, #0x1
   2926c:	str	x0, [sp, #56]
   29270:	ldr	x1, [sp, #56]
   29274:	ldr	x0, [sp, #40]
   29278:	cmp	x1, x0
   2927c:	b.cc	291a8 <GOMP_offload_unregister@@GOMP_4.0.1+0x374>  // b.lo, b.ul, b.last
   29280:	nop
   29284:	nop
   29288:	add	sp, sp, #0x40
   2928c:	ret
   29290:	stp	x29, x30, [sp, #-112]!
   29294:	mov	x29, sp
   29298:	str	x0, [sp, #72]
   2929c:	str	x1, [sp, #64]
   292a0:	str	x2, [sp, #56]
   292a4:	str	x3, [sp, #48]
   292a8:	str	x4, [sp, #40]
   292ac:	str	x5, [sp, #32]
   292b0:	str	x6, [sp, #24]
   292b4:	ldr	x0, [sp, #32]
   292b8:	sub	x1, x0, #0x1
   292bc:	ldr	x0, [sp, #72]
   292c0:	and	x0, x1, x0
   292c4:	str	x0, [sp, #96]
   292c8:	ldr	x0, [sp, #96]
   292cc:	cmp	x0, #0x0
   292d0:	b.eq	292ec <GOMP_offload_unregister@@GOMP_4.0.1+0x4b8>  // b.none
   292d4:	ldr	x1, [sp, #32]
   292d8:	ldr	x0, [sp, #96]
   292dc:	sub	x0, x1, x0
   292e0:	ldr	x1, [sp, #72]
   292e4:	add	x0, x1, x0
   292e8:	str	x0, [sp, #72]
   292ec:	str	xzr, [sp, #24]
   292f0:	str	xzr, [sp, #104]
   292f4:	b	293f4 <GOMP_offload_unregister@@GOMP_4.0.1+0x5c0>
   292f8:	ldr	x0, [sp, #104]
   292fc:	lsl	x0, x0, #1
   29300:	ldr	x1, [sp, #40]
   29304:	add	x0, x1, x0
   29308:	ldrh	w0, [x0]
   2930c:	and	w0, w0, #0xff
   29310:	cmp	w0, #0xc
   29314:	b.ne	293e8 <GOMP_offload_unregister@@GOMP_4.0.1+0x5b4>  // b.any
   29318:	ldr	x0, [sp, #104]
   2931c:	lsl	x0, x0, #1
   29320:	ldr	x1, [sp, #40]
   29324:	add	x0, x1, x0
   29328:	ldrh	w0, [x0]
   2932c:	lsr	w0, w0, #8
   29330:	and	w0, w0, #0xffff
   29334:	mov	w1, w0
   29338:	mov	x0, #0x1                   	// #1
   2933c:	lsl	x0, x0, x1
   29340:	str	x0, [sp, #88]
   29344:	ldr	x1, [sp, #24]
   29348:	ldr	x0, [sp, #88]
   2934c:	add	x0, x1, x0
   29350:	sub	x1, x0, #0x1
   29354:	ldr	x0, [sp, #88]
   29358:	neg	x0, x0
   2935c:	and	x0, x1, x0
   29360:	str	x0, [sp, #24]
   29364:	ldr	x1, [sp, #72]
   29368:	ldr	x0, [sp, #24]
   2936c:	add	x3, x1, x0
   29370:	ldr	x0, [sp, #104]
   29374:	lsl	x0, x0, #3
   29378:	ldr	x1, [sp, #56]
   2937c:	add	x0, x1, x0
   29380:	ldr	x4, [x0]
   29384:	ldr	x0, [sp, #104]
   29388:	lsl	x0, x0, #3
   2938c:	ldr	x1, [sp, #48]
   29390:	add	x0, x1, x0
   29394:	ldr	x0, [x0]
   29398:	mov	x2, x0
   2939c:	mov	x1, x4
   293a0:	mov	x0, x3
   293a4:	bl	86a0 <memcpy@plt>
   293a8:	ldr	x0, [sp, #104]
   293ac:	lsl	x0, x0, #3
   293b0:	ldr	x1, [sp, #56]
   293b4:	add	x0, x1, x0
   293b8:	ldr	x2, [sp, #72]
   293bc:	ldr	x1, [sp, #24]
   293c0:	add	x1, x2, x1
   293c4:	str	x1, [x0]
   293c8:	ldr	x0, [sp, #104]
   293cc:	lsl	x0, x0, #3
   293d0:	ldr	x1, [sp, #48]
   293d4:	add	x0, x1, x0
   293d8:	ldr	x0, [x0]
   293dc:	ldr	x1, [sp, #24]
   293e0:	add	x0, x1, x0
   293e4:	str	x0, [sp, #24]
   293e8:	ldr	x0, [sp, #104]
   293ec:	add	x0, x0, #0x1
   293f0:	str	x0, [sp, #104]
   293f4:	ldr	x1, [sp, #104]
   293f8:	ldr	x0, [sp, #64]
   293fc:	cmp	x1, x0
   29400:	b.cc	292f8 <GOMP_offload_unregister@@GOMP_4.0.1+0x4c4>  // b.lo, b.ul, b.last
   29404:	nop
   29408:	nop
   2940c:	ldp	x29, x30, [sp], #112
   29410:	ret
   29414:	stp	x29, x30, [sp, #-96]!
   29418:	mov	x29, sp
   2941c:	str	x0, [sp, #24]
   29420:	str	x1, [sp, #16]
   29424:	ldr	x0, [sp, #24]
   29428:	ldr	w0, [x0, #8]
   2942c:	and	w0, w0, #0x2
   29430:	cmp	w0, #0x0
   29434:	b.eq	29440 <GOMP_offload_unregister@@GOMP_4.0.1+0x60c>  // b.none
   29438:	ldr	x0, [sp, #16]
   2943c:	b	294c0 <GOMP_offload_unregister@@GOMP_4.0.1+0x68c>
   29440:	ldr	x0, [sp, #24]
   29444:	add	x0, x0, #0xa8
   29448:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2944c:	ldr	x0, [sp, #24]
   29450:	ldr	w0, [x0, #172]
   29454:	cmp	w0, #0x2
   29458:	b.ne	29470 <GOMP_offload_unregister@@GOMP_4.0.1+0x63c>  // b.any
   2945c:	ldr	x0, [sp, #24]
   29460:	add	x0, x0, #0xa8
   29464:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   29468:	mov	x0, #0x0                   	// #0
   2946c:	b	294c0 <GOMP_offload_unregister@@GOMP_4.0.1+0x68c>
   29470:	ldr	x0, [sp, #16]
   29474:	str	x0, [sp, #32]
   29478:	ldr	x0, [sp, #32]
   2947c:	add	x0, x0, #0x1
   29480:	str	x0, [sp, #40]
   29484:	ldr	x0, [sp, #24]
   29488:	add	x0, x0, #0xa0
   2948c:	add	x1, sp, #0x20
   29490:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   29494:	str	x0, [sp, #88]
   29498:	ldr	x0, [sp, #24]
   2949c:	add	x0, x0, #0xa8
   294a0:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   294a4:	ldr	x0, [sp, #88]
   294a8:	cmp	x0, #0x0
   294ac:	b.ne	294b8 <GOMP_offload_unregister@@GOMP_4.0.1+0x684>  // b.any
   294b0:	mov	x0, #0x0                   	// #0
   294b4:	b	294c0 <GOMP_offload_unregister@@GOMP_4.0.1+0x68c>
   294b8:	ldr	x0, [sp, #88]
   294bc:	ldr	x0, [x0, #24]
   294c0:	ldp	x29, x30, [sp], #96
   294c4:	ret

00000000000294c8 <GOMP_target@@GOMP_4.0>:
   294c8:	stp	x29, x30, [sp, #-112]!
   294cc:	mov	x29, sp
   294d0:	str	w0, [sp, #76]
   294d4:	str	x1, [sp, #64]
   294d8:	str	x2, [sp, #56]
   294dc:	str	x3, [sp, #48]
   294e0:	str	x4, [sp, #40]
   294e4:	str	x5, [sp, #32]
   294e8:	str	x6, [sp, #24]
   294ec:	ldr	w0, [sp, #76]
   294f0:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   294f4:	str	x0, [sp, #104]
   294f8:	ldr	x0, [sp, #104]
   294fc:	cmp	x0, #0x0
   29500:	b.eq	29548 <GOMP_target@@GOMP_4.0+0x80>  // b.none
   29504:	ldr	x0, [sp, #104]
   29508:	ldr	w0, [x0, #8]
   2950c:	and	w0, w0, #0x4
   29510:	cmp	w0, #0x0
   29514:	b.eq	29548 <GOMP_target@@GOMP_4.0+0x80>  // b.none
   29518:	ldr	x0, [sp, #104]
   2951c:	ldr	w0, [x0, #8]
   29520:	and	w0, w0, #0x1
   29524:	cmp	w0, #0x0
   29528:	b.ne	29548 <GOMP_target@@GOMP_4.0+0x80>  // b.any
   2952c:	ldr	x1, [sp, #64]
   29530:	ldr	x0, [sp, #104]
   29534:	bl	29414 <GOMP_offload_unregister@@GOMP_4.0.1+0x5e0>
   29538:	str	x0, [sp, #96]
   2953c:	ldr	x0, [sp, #96]
   29540:	cmp	x0, #0x0
   29544:	b.ne	29558 <GOMP_target@@GOMP_4.0+0x90>  // b.any
   29548:	ldr	x1, [sp, #40]
   2954c:	ldr	x0, [sp, #64]
   29550:	bl	29084 <GOMP_offload_unregister@@GOMP_4.0.1+0x250>
   29554:	b	295b8 <GOMP_target@@GOMP_4.0+0xf0>
   29558:	mov	w7, #0x1                   	// #1
   2955c:	mov	w6, #0x0                   	// #0
   29560:	ldr	x5, [sp, #24]
   29564:	ldr	x4, [sp, #32]
   29568:	mov	x3, #0x0                   	// #0
   2956c:	ldr	x2, [sp, #40]
   29570:	ldr	x1, [sp, #48]
   29574:	ldr	x0, [sp, #104]
   29578:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   2957c:	str	x0, [sp, #88]
   29580:	ldr	x0, [sp, #104]
   29584:	ldr	x4, [x0, #144]
   29588:	ldr	x0, [sp, #104]
   2958c:	ldr	w5, [x0, #12]
   29590:	ldr	x0, [sp, #88]
   29594:	ldr	x0, [x0, #16]
   29598:	mov	x3, #0x0                   	// #0
   2959c:	mov	x2, x0
   295a0:	ldr	x1, [sp, #96]
   295a4:	mov	w0, w5
   295a8:	blr	x4
   295ac:	mov	w1, #0x1                   	// #1
   295b0:	ldr	x0, [sp, #88]
   295b4:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   295b8:	ldp	x29, x30, [sp], #112
   295bc:	ret

00000000000295c0 <GOMP_target_ext@@GOMP_4.5>:
   295c0:	stp	x29, x30, [sp, #-192]!
   295c4:	mov	x29, sp
   295c8:	sub	sp, sp, #0x10
   295cc:	str	w0, [x29, #76]
   295d0:	str	x1, [x29, #64]
   295d4:	str	x2, [x29, #56]
   295d8:	str	x3, [x29, #48]
   295dc:	str	x4, [x29, #40]
   295e0:	str	x5, [x29, #32]
   295e4:	str	w6, [x29, #72]
   295e8:	str	x7, [x29, #24]
   295ec:	ldr	w0, [x29, #76]
   295f0:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   295f4:	str	x0, [x29, #168]
   295f8:	str	xzr, [x29, #88]
   295fc:	str	xzr, [x29, #80]
   29600:	strb	wzr, [x29, #191]
   29604:	ldr	w0, [x29, #72]
   29608:	and	w0, w0, #0x1
   2960c:	cmp	w0, #0x0
   29610:	b.eq	297bc <GOMP_target_ext@@GOMP_4.5+0x1fc>  // b.none
   29614:	bl	24fbc <omp_get_place_proc_ids@@OMP_4.5+0x5e0>
   29618:	str	x0, [x29, #160]
   2961c:	ldr	x0, [x29, #160]
   29620:	ldr	x0, [x0, #16]
   29624:	cmp	x0, #0x0
   29628:	cset	w0, eq  // eq = none
   2962c:	and	w0, w0, #0xff
   29630:	and	x0, x0, #0xff
   29634:	cmp	x0, #0x0
   29638:	b.eq	29758 <GOMP_target_ext@@GOMP_4.5+0x198>  // b.none
   2963c:	mov	w0, #0x1                   	// #1
   29640:	bl	1dafc <omp_in_final@@OMP_3.1+0x730>
   29644:	str	x0, [x29, #152]
   29648:	ldr	x0, [x29, #160]
   2964c:	ldr	x0, [x0, #80]
   29650:	str	x0, [x29, #144]
   29654:	ldr	x0, [x29, #144]
   29658:	cmp	x0, #0x0
   2965c:	b.eq	2966c <GOMP_target_ext@@GOMP_4.5+0xac>  // b.none
   29660:	ldr	x0, [x29, #144]
   29664:	add	x0, x0, #0x90
   29668:	b	29674 <GOMP_target_ext@@GOMP_4.5+0xb4>
   2966c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   29670:	add	x0, x0, #0x2d8
   29674:	str	x0, [x29, #136]
   29678:	ldr	x0, [x29, #152]
   2967c:	add	x2, x0, #0x8
   29680:	ldr	x0, [x29, #160]
   29684:	add	x1, x0, #0x10
   29688:	mov	x0, x2
   2968c:	ldp	x2, x3, [x1]
   29690:	stp	x2, x3, [x0]
   29694:	ldp	x2, x3, [x1, #16]
   29698:	stp	x2, x3, [x0, #16]
   2969c:	ldp	x2, x3, [x1, #32]
   296a0:	stp	x2, x3, [x0, #32]
   296a4:	ldp	x2, x3, [x1, #48]
   296a8:	stp	x2, x3, [x0, #48]
   296ac:	ldr	x0, [x29, #160]
   296b0:	ldr	x1, [x29, #152]
   296b4:	str	x1, [x0, #16]
   296b8:	ldr	x0, [x29, #160]
   296bc:	str	wzr, [x0, #40]
   296c0:	ldr	x0, [x29, #152]
   296c4:	add	x1, x0, #0x100
   296c8:	ldr	x0, [x29, #160]
   296cc:	str	x1, [x0, #24]
   296d0:	ldr	x0, [x29, #160]
   296d4:	str	xzr, [x0, #32]
   296d8:	ldr	x0, [x29, #160]
   296dc:	str	xzr, [x0, #64]
   296e0:	ldr	x0, [x29, #160]
   296e4:	str	xzr, [x0, #72]
   296e8:	ldr	x0, [x29, #152]
   296ec:	add	x1, x0, #0x540
   296f0:	ldr	x0, [x29, #160]
   296f4:	str	x1, [x0, #80]
   296f8:	ldr	x0, [x29, #160]
   296fc:	ldr	x0, [x0, #80]
   29700:	ldr	x2, [x29, #136]
   29704:	mov	x1, #0x0                   	// #0
   29708:	bl	16284 <GOMP_single_copy_end@@GOMP_1.0+0x1574>
   2970c:	ldr	x0, [x29, #144]
   29710:	cmp	x0, #0x0
   29714:	b.eq	29744 <GOMP_target_ext@@GOMP_4.5+0x184>  // b.none
   29718:	ldr	x0, [x29, #160]
   2971c:	ldr	x1, [x29, #144]
   29720:	str	x1, [x0, #80]
   29724:	bl	16330 <GOMP_single_copy_end@@GOMP_1.0+0x1620>
   29728:	ldr	x0, [x29, #144]
   2972c:	bl	8a20 <free@plt>
   29730:	ldr	x0, [x29, #152]
   29734:	add	x1, x0, #0x540
   29738:	ldr	x0, [x29, #160]
   2973c:	str	x1, [x0, #80]
   29740:	b	29758 <GOMP_target_ext@@GOMP_4.5+0x198>
   29744:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   29748:	add	x0, x0, #0x6d0
   2974c:	ldr	w0, [x0]
   29750:	ldr	x1, [x29, #160]
   29754:	bl	8ad0 <pthread_setspecific@plt>
   29758:	ldr	x0, [x29, #160]
   2975c:	ldr	x0, [x0, #16]
   29760:	cmp	x0, #0x0
   29764:	b.eq	297bc <GOMP_target_ext@@GOMP_4.5+0x1fc>  // b.none
   29768:	ldr	x0, [x29, #160]
   2976c:	ldr	x0, [x0, #80]
   29770:	ldrb	w0, [x0, #205]
   29774:	eor	w0, w0, #0x1
   29778:	and	w0, w0, #0xff
   2977c:	cmp	w0, #0x0
   29780:	b.eq	297bc <GOMP_target_ext@@GOMP_4.5+0x1fc>  // b.none
   29784:	mov	w0, #0x1                   	// #1
   29788:	str	w0, [sp, #8]
   2978c:	ldr	x0, [x29, #192]
   29790:	str	x0, [sp]
   29794:	ldr	x7, [x29, #24]
   29798:	ldr	w6, [x29, #72]
   2979c:	ldr	x5, [x29, #32]
   297a0:	ldr	x4, [x29, #40]
   297a4:	ldr	x3, [x29, #48]
   297a8:	ldr	x2, [x29, #56]
   297ac:	ldr	x1, [x29, #64]
   297b0:	ldr	x0, [x29, #168]
   297b4:	bl	1991c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x90>
   297b8:	b	29ae0 <GOMP_target_ext@@GOMP_4.5+0x520>
   297bc:	ldr	x0, [x29, #24]
   297c0:	cmp	x0, #0x0
   297c4:	b.eq	2988c <GOMP_target_ext@@GOMP_4.5+0x2cc>  // b.none
   297c8:	bl	24fbc <omp_get_place_proc_ids@@OMP_4.5+0x5e0>
   297cc:	str	x0, [x29, #128]
   297d0:	ldr	x0, [x29, #128]
   297d4:	ldr	x0, [x0, #80]
   297d8:	cmp	x0, #0x0
   297dc:	b.eq	2988c <GOMP_target_ext@@GOMP_4.5+0x2cc>  // b.none
   297e0:	ldr	x0, [x29, #128]
   297e4:	ldr	x0, [x0, #80]
   297e8:	ldr	x0, [x0, #56]
   297ec:	cmp	x0, #0x0
   297f0:	b.eq	2988c <GOMP_target_ext@@GOMP_4.5+0x2cc>  // b.none
   297f4:	add	x1, x29, #0x50
   297f8:	add	x0, x29, #0x58
   297fc:	mov	x4, x1
   29800:	mov	x3, x0
   29804:	ldr	x2, [x29, #32]
   29808:	ldr	x1, [x29, #40]
   2980c:	ldr	x0, [x29, #56]
   29810:	bl	29188 <GOMP_offload_unregister@@GOMP_4.0.1+0x354>
   29814:	ldr	x0, [x29, #88]
   29818:	cmp	x0, #0x0
   2981c:	b.eq	2987c <GOMP_target_ext@@GOMP_4.5+0x2bc>  // b.none
   29820:	ldr	x1, [x29, #80]
   29824:	ldr	x0, [x29, #88]
   29828:	add	x0, x1, x0
   2982c:	sub	x0, x0, #0x1
   29830:	add	x0, x0, #0xf
   29834:	lsr	x0, x0, #4
   29838:	lsl	x0, x0, #4
   2983c:	sub	sp, sp, x0
   29840:	add	x0, sp, #0x10
   29844:	add	x0, x0, #0xf
   29848:	lsr	x0, x0, #4
   2984c:	lsl	x0, x0, #4
   29850:	str	x0, [x29, #120]
   29854:	ldr	x0, [x29, #88]
   29858:	ldr	x1, [x29, #80]
   2985c:	mov	x6, x1
   29860:	mov	x5, x0
   29864:	ldr	x4, [x29, #32]
   29868:	ldr	x3, [x29, #40]
   2986c:	ldr	x2, [x29, #48]
   29870:	ldr	x1, [x29, #56]
   29874:	ldr	x0, [x29, #120]
   29878:	bl	29290 <GOMP_offload_unregister@@GOMP_4.0.1+0x45c>
   2987c:	mov	w0, #0x1                   	// #1
   29880:	strb	w0, [x29, #191]
   29884:	ldr	x0, [x29, #24]
   29888:	bl	1b798 <GOMP_taskwait_depend@@GOMP_5.0+0x120>
   2988c:	ldr	x0, [x29, #168]
   29890:	cmp	x0, #0x0
   29894:	b.eq	298fc <GOMP_target_ext@@GOMP_4.5+0x33c>  // b.none
   29898:	ldr	x0, [x29, #168]
   2989c:	ldr	w0, [x0, #8]
   298a0:	and	w0, w0, #0x4
   298a4:	cmp	w0, #0x0
   298a8:	b.eq	298fc <GOMP_target_ext@@GOMP_4.5+0x33c>  // b.none
   298ac:	ldr	x1, [x29, #64]
   298b0:	ldr	x0, [x29, #168]
   298b4:	bl	29414 <GOMP_offload_unregister@@GOMP_4.0.1+0x5e0>
   298b8:	str	x0, [x29, #112]
   298bc:	ldr	x0, [x29, #112]
   298c0:	cmp	x0, #0x0
   298c4:	b.eq	298fc <GOMP_target_ext@@GOMP_4.5+0x33c>  // b.none
   298c8:	ldr	x0, [x29, #168]
   298cc:	ldr	x0, [x0, #136]
   298d0:	cmp	x0, #0x0
   298d4:	b.eq	299a8 <GOMP_target_ext@@GOMP_4.5+0x3e8>  // b.none
   298d8:	ldr	x0, [x29, #168]
   298dc:	ldr	x1, [x0, #136]
   298e0:	ldr	x0, [x29, #112]
   298e4:	blr	x1
   298e8:	and	w0, w0, #0xff
   298ec:	eor	w0, w0, #0x1
   298f0:	and	w0, w0, #0xff
   298f4:	cmp	w0, #0x0
   298f8:	b.eq	299a8 <GOMP_target_ext@@GOMP_4.5+0x3e8>  // b.none
   298fc:	ldrb	w0, [x29, #191]
   29900:	eor	w0, w0, #0x1
   29904:	and	w0, w0, #0xff
   29908:	cmp	w0, #0x0
   2990c:	b.eq	29998 <GOMP_target_ext@@GOMP_4.5+0x3d8>  // b.none
   29910:	add	x1, x29, #0x50
   29914:	add	x0, x29, #0x58
   29918:	mov	x4, x1
   2991c:	mov	x3, x0
   29920:	ldr	x2, [x29, #32]
   29924:	ldr	x1, [x29, #40]
   29928:	ldr	x0, [x29, #56]
   2992c:	bl	29188 <GOMP_offload_unregister@@GOMP_4.0.1+0x354>
   29930:	ldr	x0, [x29, #88]
   29934:	cmp	x0, #0x0
   29938:	b.eq	29998 <GOMP_target_ext@@GOMP_4.5+0x3d8>  // b.none
   2993c:	ldr	x1, [x29, #80]
   29940:	ldr	x0, [x29, #88]
   29944:	add	x0, x1, x0
   29948:	sub	x0, x0, #0x1
   2994c:	add	x0, x0, #0xf
   29950:	lsr	x0, x0, #4
   29954:	lsl	x0, x0, #4
   29958:	sub	sp, sp, x0
   2995c:	add	x0, sp, #0x10
   29960:	add	x0, x0, #0xf
   29964:	lsr	x0, x0, #4
   29968:	lsl	x0, x0, #4
   2996c:	str	x0, [x29, #96]
   29970:	ldr	x0, [x29, #88]
   29974:	ldr	x1, [x29, #80]
   29978:	mov	x6, x1
   2997c:	mov	x5, x0
   29980:	ldr	x4, [x29, #32]
   29984:	ldr	x3, [x29, #40]
   29988:	ldr	x2, [x29, #48]
   2998c:	ldr	x1, [x29, #56]
   29990:	ldr	x0, [x29, #96]
   29994:	bl	29290 <GOMP_offload_unregister@@GOMP_4.0.1+0x45c>
   29998:	ldr	x1, [x29, #48]
   2999c:	ldr	x0, [x29, #64]
   299a0:	bl	29084 <GOMP_offload_unregister@@GOMP_4.0.1+0x250>
   299a4:	b	29ae0 <GOMP_target_ext@@GOMP_4.5+0x520>
   299a8:	ldr	x0, [x29, #168]
   299ac:	ldr	w0, [x0, #8]
   299b0:	and	w0, w0, #0x1
   299b4:	cmp	w0, #0x0
   299b8:	b.eq	29a60 <GOMP_target_ext@@GOMP_4.5+0x4a0>  // b.none
   299bc:	ldrb	w0, [x29, #191]
   299c0:	eor	w0, w0, #0x1
   299c4:	and	w0, w0, #0xff
   299c8:	cmp	w0, #0x0
   299cc:	b.eq	29a58 <GOMP_target_ext@@GOMP_4.5+0x498>  // b.none
   299d0:	add	x1, x29, #0x50
   299d4:	add	x0, x29, #0x58
   299d8:	mov	x4, x1
   299dc:	mov	x3, x0
   299e0:	ldr	x2, [x29, #32]
   299e4:	ldr	x1, [x29, #40]
   299e8:	ldr	x0, [x29, #56]
   299ec:	bl	29188 <GOMP_offload_unregister@@GOMP_4.0.1+0x354>
   299f0:	ldr	x0, [x29, #88]
   299f4:	cmp	x0, #0x0
   299f8:	b.eq	29a58 <GOMP_target_ext@@GOMP_4.5+0x498>  // b.none
   299fc:	ldr	x1, [x29, #80]
   29a00:	ldr	x0, [x29, #88]
   29a04:	add	x0, x1, x0
   29a08:	sub	x0, x0, #0x1
   29a0c:	add	x0, x0, #0xf
   29a10:	lsr	x0, x0, #4
   29a14:	lsl	x0, x0, #4
   29a18:	sub	sp, sp, x0
   29a1c:	add	x0, sp, #0x10
   29a20:	add	x0, x0, #0xf
   29a24:	lsr	x0, x0, #4
   29a28:	lsl	x0, x0, #4
   29a2c:	str	x0, [x29, #104]
   29a30:	ldr	x0, [x29, #88]
   29a34:	ldr	x1, [x29, #80]
   29a38:	mov	x6, x1
   29a3c:	mov	x5, x0
   29a40:	ldr	x4, [x29, #32]
   29a44:	ldr	x3, [x29, #40]
   29a48:	ldr	x2, [x29, #48]
   29a4c:	ldr	x1, [x29, #56]
   29a50:	ldr	x0, [x29, #104]
   29a54:	bl	29290 <GOMP_offload_unregister@@GOMP_4.0.1+0x45c>
   29a58:	str	xzr, [x29, #176]
   29a5c:	b	29a88 <GOMP_target_ext@@GOMP_4.5+0x4c8>
   29a60:	mov	w7, #0x1                   	// #1
   29a64:	mov	w6, #0x1                   	// #1
   29a68:	ldr	x5, [x29, #32]
   29a6c:	ldr	x4, [x29, #40]
   29a70:	mov	x3, #0x0                   	// #0
   29a74:	ldr	x2, [x29, #48]
   29a78:	ldr	x1, [x29, #56]
   29a7c:	ldr	x0, [x29, #168]
   29a80:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   29a84:	str	x0, [x29, #176]
   29a88:	ldr	x0, [x29, #168]
   29a8c:	ldr	x4, [x0, #144]
   29a90:	ldr	x0, [x29, #168]
   29a94:	ldr	w5, [x0, #12]
   29a98:	ldr	x0, [x29, #176]
   29a9c:	cmp	x0, #0x0
   29aa0:	b.eq	29ab0 <GOMP_target_ext@@GOMP_4.5+0x4f0>  // b.none
   29aa4:	ldr	x0, [x29, #176]
   29aa8:	ldr	x0, [x0, #16]
   29aac:	b	29ab4 <GOMP_target_ext@@GOMP_4.5+0x4f4>
   29ab0:	ldr	x0, [x29, #48]
   29ab4:	ldr	x3, [x29, #192]
   29ab8:	mov	x2, x0
   29abc:	ldr	x1, [x29, #112]
   29ac0:	mov	w0, w5
   29ac4:	blr	x4
   29ac8:	ldr	x0, [x29, #176]
   29acc:	cmp	x0, #0x0
   29ad0:	b.eq	29ae0 <GOMP_target_ext@@GOMP_4.5+0x520>  // b.none
   29ad4:	mov	w1, #0x1                   	// #1
   29ad8:	ldr	x0, [x29, #176]
   29adc:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   29ae0:	mov	sp, x29
   29ae4:	ldp	x29, x30, [sp], #192
   29ae8:	ret
   29aec:	stp	x29, x30, [sp, #-32]!
   29af0:	mov	x29, sp
   29af4:	mov	w0, #0x0                   	// #0
   29af8:	bl	24fd0 <omp_get_place_proc_ids@@OMP_4.5+0x5f4>
   29afc:	str	x0, [sp, #24]
   29b00:	ldr	x0, [sp, #24]
   29b04:	ldr	x0, [x0, #32]
   29b08:	cmp	x0, #0x0
   29b0c:	b.eq	29b54 <GOMP_target_ext@@GOMP_4.5+0x594>  // b.none
   29b10:	mov	w7, #0x2                   	// #2
   29b14:	mov	w6, #0x0                   	// #0
   29b18:	mov	x5, #0x0                   	// #0
   29b1c:	mov	x4, #0x0                   	// #0
   29b20:	mov	x3, #0x0                   	// #0
   29b24:	mov	x2, #0x0                   	// #0
   29b28:	mov	x1, #0x0                   	// #0
   29b2c:	mov	x0, #0x0                   	// #0
   29b30:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   29b34:	str	x0, [sp, #16]
   29b38:	ldr	x0, [sp, #24]
   29b3c:	ldr	x1, [x0, #32]
   29b40:	ldr	x0, [sp, #16]
   29b44:	str	x1, [x0, #40]
   29b48:	ldr	x0, [sp, #24]
   29b4c:	ldr	x1, [sp, #16]
   29b50:	str	x1, [x0, #32]
   29b54:	nop
   29b58:	ldp	x29, x30, [sp], #32
   29b5c:	ret

0000000000029b60 <GOMP_target_data@@GOMP_4.0>:
   29b60:	stp	x29, x30, [sp, #-96]!
   29b64:	mov	x29, sp
   29b68:	str	w0, [sp, #60]
   29b6c:	str	x1, [sp, #48]
   29b70:	str	x2, [sp, #40]
   29b74:	str	x3, [sp, #32]
   29b78:	str	x4, [sp, #24]
   29b7c:	str	x5, [sp, #16]
   29b80:	ldr	w0, [sp, #60]
   29b84:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   29b88:	str	x0, [sp, #88]
   29b8c:	ldr	x0, [sp, #88]
   29b90:	cmp	x0, #0x0
   29b94:	b.eq	29bc0 <GOMP_target_data@@GOMP_4.0+0x60>  // b.none
   29b98:	ldr	x0, [sp, #88]
   29b9c:	ldr	w0, [x0, #8]
   29ba0:	and	w0, w0, #0x4
   29ba4:	cmp	w0, #0x0
   29ba8:	b.eq	29bc0 <GOMP_target_data@@GOMP_4.0+0x60>  // b.none
   29bac:	ldr	x0, [sp, #88]
   29bb0:	ldr	w0, [x0, #8]
   29bb4:	and	w0, w0, #0x1
   29bb8:	cmp	w0, #0x0
   29bbc:	b.eq	29bc8 <GOMP_target_data@@GOMP_4.0+0x68>  // b.none
   29bc0:	bl	29aec <GOMP_target_ext@@GOMP_4.5+0x52c>
   29bc4:	b	29c18 <GOMP_target_data@@GOMP_4.0+0xb8>
   29bc8:	mov	w7, #0x2                   	// #2
   29bcc:	mov	w6, #0x0                   	// #0
   29bd0:	ldr	x5, [sp, #16]
   29bd4:	ldr	x4, [sp, #24]
   29bd8:	mov	x3, #0x0                   	// #0
   29bdc:	ldr	x2, [sp, #32]
   29be0:	ldr	x1, [sp, #40]
   29be4:	ldr	x0, [sp, #88]
   29be8:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   29bec:	str	x0, [sp, #80]
   29bf0:	mov	w0, #0x1                   	// #1
   29bf4:	bl	24fd0 <omp_get_place_proc_ids@@OMP_4.5+0x5f4>
   29bf8:	str	x0, [sp, #72]
   29bfc:	ldr	x0, [sp, #72]
   29c00:	ldr	x1, [x0, #32]
   29c04:	ldr	x0, [sp, #80]
   29c08:	str	x1, [x0, #40]
   29c0c:	ldr	x0, [sp, #72]
   29c10:	ldr	x1, [sp, #80]
   29c14:	str	x1, [x0, #32]
   29c18:	ldp	x29, x30, [sp], #96
   29c1c:	ret

0000000000029c20 <GOMP_target_data_ext@@GOMP_4.5>:
   29c20:	stp	x29, x30, [sp, #-96]!
   29c24:	mov	x29, sp
   29c28:	str	w0, [sp, #60]
   29c2c:	str	x1, [sp, #48]
   29c30:	str	x2, [sp, #40]
   29c34:	str	x3, [sp, #32]
   29c38:	str	x4, [sp, #24]
   29c3c:	ldr	w0, [sp, #60]
   29c40:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   29c44:	str	x0, [sp, #88]
   29c48:	ldr	x0, [sp, #88]
   29c4c:	cmp	x0, #0x0
   29c50:	b.eq	29c7c <GOMP_target_data_ext@@GOMP_4.5+0x5c>  // b.none
   29c54:	ldr	x0, [sp, #88]
   29c58:	ldr	w0, [x0, #8]
   29c5c:	and	w0, w0, #0x4
   29c60:	cmp	w0, #0x0
   29c64:	b.eq	29c7c <GOMP_target_data_ext@@GOMP_4.5+0x5c>  // b.none
   29c68:	ldr	x0, [sp, #88]
   29c6c:	ldr	w0, [x0, #8]
   29c70:	and	w0, w0, #0x1
   29c74:	cmp	w0, #0x0
   29c78:	b.eq	29c84 <GOMP_target_data_ext@@GOMP_4.5+0x64>  // b.none
   29c7c:	bl	29aec <GOMP_target_ext@@GOMP_4.5+0x52c>
   29c80:	b	29cd4 <GOMP_target_data_ext@@GOMP_4.5+0xb4>
   29c84:	mov	w7, #0x2                   	// #2
   29c88:	mov	w6, #0x1                   	// #1
   29c8c:	ldr	x5, [sp, #24]
   29c90:	ldr	x4, [sp, #32]
   29c94:	mov	x3, #0x0                   	// #0
   29c98:	ldr	x2, [sp, #40]
   29c9c:	ldr	x1, [sp, #48]
   29ca0:	ldr	x0, [sp, #88]
   29ca4:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   29ca8:	str	x0, [sp, #80]
   29cac:	mov	w0, #0x1                   	// #1
   29cb0:	bl	24fd0 <omp_get_place_proc_ids@@OMP_4.5+0x5f4>
   29cb4:	str	x0, [sp, #72]
   29cb8:	ldr	x0, [sp, #72]
   29cbc:	ldr	x1, [x0, #32]
   29cc0:	ldr	x0, [sp, #80]
   29cc4:	str	x1, [x0, #40]
   29cc8:	ldr	x0, [sp, #72]
   29ccc:	ldr	x1, [sp, #80]
   29cd0:	str	x1, [x0, #32]
   29cd4:	ldp	x29, x30, [sp], #96
   29cd8:	ret

0000000000029cdc <GOMP_target_end_data@@GOMP_4.0>:
   29cdc:	stp	x29, x30, [sp, #-32]!
   29ce0:	mov	x29, sp
   29ce4:	mov	w0, #0x0                   	// #0
   29ce8:	bl	24fd0 <omp_get_place_proc_ids@@OMP_4.5+0x5f4>
   29cec:	str	x0, [sp, #24]
   29cf0:	ldr	x0, [sp, #24]
   29cf4:	ldr	x0, [x0, #32]
   29cf8:	cmp	x0, #0x0
   29cfc:	b.eq	29d28 <GOMP_target_end_data@@GOMP_4.0+0x4c>  // b.none
   29d00:	ldr	x0, [sp, #24]
   29d04:	ldr	x0, [x0, #32]
   29d08:	str	x0, [sp, #16]
   29d0c:	ldr	x0, [sp, #16]
   29d10:	ldr	x1, [x0, #40]
   29d14:	ldr	x0, [sp, #24]
   29d18:	str	x1, [x0, #32]
   29d1c:	mov	w1, #0x1                   	// #1
   29d20:	ldr	x0, [sp, #16]
   29d24:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   29d28:	nop
   29d2c:	ldp	x29, x30, [sp], #32
   29d30:	ret

0000000000029d34 <GOMP_target_update@@GOMP_4.0>:
   29d34:	stp	x29, x30, [sp, #-80]!
   29d38:	mov	x29, sp
   29d3c:	str	w0, [sp, #60]
   29d40:	str	x1, [sp, #48]
   29d44:	str	x2, [sp, #40]
   29d48:	str	x3, [sp, #32]
   29d4c:	str	x4, [sp, #24]
   29d50:	str	x5, [sp, #16]
   29d54:	ldr	w0, [sp, #60]
   29d58:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   29d5c:	str	x0, [sp, #72]
   29d60:	ldr	x0, [sp, #72]
   29d64:	cmp	x0, #0x0
   29d68:	b.eq	29db4 <GOMP_target_update@@GOMP_4.0+0x80>  // b.none
   29d6c:	ldr	x0, [sp, #72]
   29d70:	ldr	w0, [x0, #8]
   29d74:	and	w0, w0, #0x4
   29d78:	cmp	w0, #0x0
   29d7c:	b.eq	29db4 <GOMP_target_update@@GOMP_4.0+0x80>  // b.none
   29d80:	ldr	x0, [sp, #72]
   29d84:	ldr	w0, [x0, #8]
   29d88:	and	w0, w0, #0x1
   29d8c:	cmp	w0, #0x0
   29d90:	b.ne	29db4 <GOMP_target_update@@GOMP_4.0+0x80>  // b.any
   29d94:	mov	w5, #0x0                   	// #0
   29d98:	ldr	x4, [sp, #16]
   29d9c:	ldr	x3, [sp, #24]
   29da0:	ldr	x2, [sp, #32]
   29da4:	ldr	x1, [sp, #40]
   29da8:	ldr	x0, [sp, #72]
   29dac:	bl	28060 <omp_get_place_proc_ids@@OMP_4.5+0x3684>
   29db0:	b	29db8 <GOMP_target_update@@GOMP_4.0+0x84>
   29db4:	nop
   29db8:	ldp	x29, x30, [sp], #80
   29dbc:	ret

0000000000029dc0 <GOMP_target_update_ext@@GOMP_4.5>:
   29dc0:	sub	sp, sp, #0x80
   29dc4:	stp	x29, x30, [sp, #16]
   29dc8:	add	x29, sp, #0x10
   29dcc:	str	w0, [sp, #76]
   29dd0:	str	x1, [sp, #64]
   29dd4:	str	x2, [sp, #56]
   29dd8:	str	x3, [sp, #48]
   29ddc:	str	x4, [sp, #40]
   29de0:	str	w5, [sp, #72]
   29de4:	str	x6, [sp, #32]
   29de8:	ldr	w0, [sp, #76]
   29dec:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   29df0:	str	x0, [sp, #120]
   29df4:	ldr	x0, [sp, #32]
   29df8:	cmp	x0, #0x0
   29dfc:	b.eq	29f74 <GOMP_target_update_ext@@GOMP_4.5+0x1b4>  // b.none
   29e00:	bl	24fbc <omp_get_place_proc_ids@@OMP_4.5+0x5e0>
   29e04:	str	x0, [sp, #112]
   29e08:	ldr	x0, [sp, #112]
   29e0c:	ldr	x0, [x0, #80]
   29e10:	cmp	x0, #0x0
   29e14:	b.eq	29f74 <GOMP_target_update_ext@@GOMP_4.5+0x1b4>  // b.none
   29e18:	ldr	x0, [sp, #112]
   29e1c:	ldr	x0, [x0, #80]
   29e20:	ldr	x0, [x0, #56]
   29e24:	cmp	x0, #0x0
   29e28:	b.eq	29f74 <GOMP_target_update_ext@@GOMP_4.5+0x1b4>  // b.none
   29e2c:	ldr	w0, [sp, #72]
   29e30:	and	w0, w0, #0x1
   29e34:	cmp	w0, #0x0
   29e38:	b.eq	29eac <GOMP_target_update_ext@@GOMP_4.5+0xec>  // b.none
   29e3c:	ldr	x0, [sp, #112]
   29e40:	ldr	x0, [x0, #16]
   29e44:	cmp	x0, #0x0
   29e48:	b.eq	29eac <GOMP_target_update_ext@@GOMP_4.5+0xec>  // b.none
   29e4c:	ldr	x0, [sp, #112]
   29e50:	ldr	x0, [x0, #80]
   29e54:	ldrb	w0, [x0, #205]
   29e58:	eor	w0, w0, #0x1
   29e5c:	and	w0, w0, #0xff
   29e60:	cmp	w0, #0x0
   29e64:	b.eq	29eac <GOMP_target_update_ext@@GOMP_4.5+0xec>  // b.none
   29e68:	ldr	w0, [sp, #72]
   29e6c:	orr	w0, w0, #0x80000000
   29e70:	str	wzr, [sp, #8]
   29e74:	str	xzr, [sp]
   29e78:	ldr	x7, [sp, #32]
   29e7c:	mov	w6, w0
   29e80:	ldr	x5, [sp, #40]
   29e84:	ldr	x4, [sp, #48]
   29e88:	ldr	x3, [sp, #56]
   29e8c:	ldr	x2, [sp, #64]
   29e90:	mov	x1, #0x0                   	// #0
   29e94:	ldr	x0, [sp, #120]
   29e98:	bl	1991c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x90>
   29e9c:	and	w0, w0, #0xff
   29ea0:	cmp	w0, #0x0
   29ea4:	b.eq	29f74 <GOMP_target_update_ext@@GOMP_4.5+0x1b4>  // b.none
   29ea8:	b	2a0c4 <GOMP_target_update_ext@@GOMP_4.5+0x304>
   29eac:	ldr	x0, [sp, #112]
   29eb0:	ldr	x0, [x0, #16]
   29eb4:	str	x0, [sp, #104]
   29eb8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   29ebc:	add	x0, x0, #0x574
   29ec0:	ldrb	w0, [x0]
   29ec4:	and	x0, x0, #0xff
   29ec8:	cmp	x0, #0x0
   29ecc:	b.eq	29f6c <GOMP_target_update_ext@@GOMP_4.5+0x1ac>  // b.none
   29ed0:	ldr	x0, [sp, #104]
   29ed4:	cmp	x0, #0x0
   29ed8:	b.eq	29f6c <GOMP_target_update_ext@@GOMP_4.5+0x1ac>  // b.none
   29edc:	ldr	x0, [sp, #104]
   29ee0:	add	x0, x0, #0x80
   29ee4:	bl	24f84 <omp_get_place_proc_ids@@OMP_4.5+0x5a8>
   29ee8:	and	w0, w0, #0xff
   29eec:	cmp	w0, #0x0
   29ef0:	b.ne	2a090 <GOMP_target_update_ext@@GOMP_4.5+0x2d0>  // b.any
   29ef4:	ldr	x0, [sp, #112]
   29ef8:	ldr	x0, [x0, #80]
   29efc:	ldr	x0, [x0, #40]
   29f00:	cmp	x0, #0x0
   29f04:	b.eq	29f6c <GOMP_target_update_ext@@GOMP_4.5+0x1ac>  // b.none
   29f08:	ldr	x0, [sp, #112]
   29f0c:	ldr	x0, [x0, #80]
   29f10:	ldr	x0, [x0, #40]
   29f14:	ldrb	w0, [x0, #49]
   29f18:	cmp	w0, #0x0
   29f1c:	b.ne	2a098 <GOMP_target_update_ext@@GOMP_4.5+0x2d8>  // b.any
   29f20:	ldr	x0, [sp, #112]
   29f24:	ldr	x0, [x0, #80]
   29f28:	ldr	x0, [x0, #40]
   29f2c:	ldrb	w0, [x0, #50]
   29f30:	cmp	w0, #0x0
   29f34:	b.eq	29f6c <GOMP_target_update_ext@@GOMP_4.5+0x1ac>  // b.none
   29f38:	ldr	x0, [sp, #112]
   29f3c:	ldr	x0, [x0, #80]
   29f40:	ldr	x0, [x0, #40]
   29f44:	ldr	x0, [x0]
   29f48:	cmp	x0, #0x0
   29f4c:	b.eq	29f6c <GOMP_target_update_ext@@GOMP_4.5+0x1ac>  // b.none
   29f50:	ldr	x0, [sp, #112]
   29f54:	ldr	x0, [x0, #80]
   29f58:	ldr	x0, [x0, #40]
   29f5c:	ldr	x0, [x0]
   29f60:	ldrb	w0, [x0, #49]
   29f64:	cmp	w0, #0x0
   29f68:	b.ne	2a0a0 <GOMP_target_update_ext@@GOMP_4.5+0x2e0>  // b.any
   29f6c:	ldr	x0, [sp, #32]
   29f70:	bl	1b798 <GOMP_taskwait_depend@@GOMP_5.0+0x120>
   29f74:	ldr	x0, [sp, #120]
   29f78:	cmp	x0, #0x0
   29f7c:	b.eq	2a0a8 <GOMP_target_update_ext@@GOMP_4.5+0x2e8>  // b.none
   29f80:	ldr	x0, [sp, #120]
   29f84:	ldr	w0, [x0, #8]
   29f88:	and	w0, w0, #0x4
   29f8c:	cmp	w0, #0x0
   29f90:	b.eq	2a0a8 <GOMP_target_update_ext@@GOMP_4.5+0x2e8>  // b.none
   29f94:	ldr	x0, [sp, #120]
   29f98:	ldr	w0, [x0, #8]
   29f9c:	and	w0, w0, #0x1
   29fa0:	cmp	w0, #0x0
   29fa4:	b.ne	2a0a8 <GOMP_target_update_ext@@GOMP_4.5+0x2e8>  // b.any
   29fa8:	bl	24fbc <omp_get_place_proc_ids@@OMP_4.5+0x5e0>
   29fac:	str	x0, [sp, #96]
   29fb0:	ldr	x0, [sp, #96]
   29fb4:	ldr	x0, [x0, #16]
   29fb8:	str	x0, [sp, #88]
   29fbc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   29fc0:	add	x0, x0, #0x574
   29fc4:	ldrb	w0, [x0]
   29fc8:	and	x0, x0, #0xff
   29fcc:	cmp	x0, #0x0
   29fd0:	b.eq	2a070 <GOMP_target_update_ext@@GOMP_4.5+0x2b0>  // b.none
   29fd4:	ldr	x0, [sp, #88]
   29fd8:	cmp	x0, #0x0
   29fdc:	b.eq	2a070 <GOMP_target_update_ext@@GOMP_4.5+0x2b0>  // b.none
   29fe0:	ldr	x0, [sp, #88]
   29fe4:	add	x0, x0, #0x80
   29fe8:	bl	24f84 <omp_get_place_proc_ids@@OMP_4.5+0x5a8>
   29fec:	and	w0, w0, #0xff
   29ff0:	cmp	w0, #0x0
   29ff4:	b.ne	2a0b0 <GOMP_target_update_ext@@GOMP_4.5+0x2f0>  // b.any
   29ff8:	ldr	x0, [sp, #96]
   29ffc:	ldr	x0, [x0, #80]
   2a000:	ldr	x0, [x0, #40]
   2a004:	cmp	x0, #0x0
   2a008:	b.eq	2a070 <GOMP_target_update_ext@@GOMP_4.5+0x2b0>  // b.none
   2a00c:	ldr	x0, [sp, #96]
   2a010:	ldr	x0, [x0, #80]
   2a014:	ldr	x0, [x0, #40]
   2a018:	ldrb	w0, [x0, #49]
   2a01c:	cmp	w0, #0x0
   2a020:	b.ne	2a0b8 <GOMP_target_update_ext@@GOMP_4.5+0x2f8>  // b.any
   2a024:	ldr	x0, [sp, #96]
   2a028:	ldr	x0, [x0, #80]
   2a02c:	ldr	x0, [x0, #40]
   2a030:	ldrb	w0, [x0, #50]
   2a034:	cmp	w0, #0x0
   2a038:	b.eq	2a070 <GOMP_target_update_ext@@GOMP_4.5+0x2b0>  // b.none
   2a03c:	ldr	x0, [sp, #96]
   2a040:	ldr	x0, [x0, #80]
   2a044:	ldr	x0, [x0, #40]
   2a048:	ldr	x0, [x0]
   2a04c:	cmp	x0, #0x0
   2a050:	b.eq	2a070 <GOMP_target_update_ext@@GOMP_4.5+0x2b0>  // b.none
   2a054:	ldr	x0, [sp, #96]
   2a058:	ldr	x0, [x0, #80]
   2a05c:	ldr	x0, [x0, #40]
   2a060:	ldr	x0, [x0]
   2a064:	ldrb	w0, [x0, #49]
   2a068:	cmp	w0, #0x0
   2a06c:	b.ne	2a0c0 <GOMP_target_update_ext@@GOMP_4.5+0x300>  // b.any
   2a070:	mov	w5, #0x1                   	// #1
   2a074:	ldr	x4, [sp, #40]
   2a078:	ldr	x3, [sp, #48]
   2a07c:	ldr	x2, [sp, #56]
   2a080:	ldr	x1, [sp, #64]
   2a084:	ldr	x0, [sp, #120]
   2a088:	bl	28060 <omp_get_place_proc_ids@@OMP_4.5+0x3684>
   2a08c:	b	2a0c4 <GOMP_target_update_ext@@GOMP_4.5+0x304>
   2a090:	nop
   2a094:	b	2a0c4 <GOMP_target_update_ext@@GOMP_4.5+0x304>
   2a098:	nop
   2a09c:	b	2a0c4 <GOMP_target_update_ext@@GOMP_4.5+0x304>
   2a0a0:	nop
   2a0a4:	b	2a0c4 <GOMP_target_update_ext@@GOMP_4.5+0x304>
   2a0a8:	nop
   2a0ac:	b	2a0c4 <GOMP_target_update_ext@@GOMP_4.5+0x304>
   2a0b0:	nop
   2a0b4:	b	2a0c4 <GOMP_target_update_ext@@GOMP_4.5+0x304>
   2a0b8:	nop
   2a0bc:	b	2a0c4 <GOMP_target_update_ext@@GOMP_4.5+0x304>
   2a0c0:	nop
   2a0c4:	ldp	x29, x30, [sp, #16]
   2a0c8:	add	sp, sp, #0x80
   2a0cc:	ret
   2a0d0:	stp	x29, x30, [sp, #-144]!
   2a0d4:	mov	x29, sp
   2a0d8:	str	x0, [sp, #56]
   2a0dc:	str	x1, [sp, #48]
   2a0e0:	str	x2, [sp, #40]
   2a0e4:	str	x3, [sp, #32]
   2a0e8:	str	x4, [sp, #24]
   2a0ec:	mov	w0, #0xff                  	// #255
   2a0f0:	str	w0, [sp, #132]
   2a0f4:	ldr	x0, [sp, #56]
   2a0f8:	add	x0, x0, #0xa8
   2a0fc:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2a100:	ldr	x0, [sp, #56]
   2a104:	ldr	w0, [x0, #172]
   2a108:	cmp	w0, #0x2
   2a10c:	b.ne	2a120 <GOMP_target_update_ext@@GOMP_4.5+0x360>  // b.any
   2a110:	ldr	x0, [sp, #56]
   2a114:	add	x0, x0, #0xa8
   2a118:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2a11c:	b	2a3d4 <GOMP_target_update_ext@@GOMP_4.5+0x614>
   2a120:	str	xzr, [sp, #136]
   2a124:	b	2a3b8 <GOMP_target_update_ext@@GOMP_4.5+0x5f8>
   2a128:	ldr	x0, [sp, #136]
   2a12c:	lsl	x0, x0, #1
   2a130:	ldr	x1, [sp, #24]
   2a134:	add	x0, x1, x0
   2a138:	ldrh	w0, [x0]
   2a13c:	sxtb	w1, w0
   2a140:	ldr	w0, [sp, #132]
   2a144:	sxtb	w0, w0
   2a148:	and	w0, w1, w0
   2a14c:	sxtb	w0, w0
   2a150:	strb	w0, [sp, #131]
   2a154:	ldrb	w0, [sp, #131]
   2a158:	cmp	w0, #0x1f
   2a15c:	cset	w1, hi  // hi = pmore
   2a160:	and	w1, w1, #0xff
   2a164:	cmp	w1, #0x0
   2a168:	b.ne	2a380 <GOMP_target_update_ext@@GOMP_4.5+0x5c0>  // b.any
   2a16c:	mov	x1, #0x1                   	// #1
   2a170:	lsl	x1, x1, x0
   2a174:	mov	x0, #0x8084                	// #32900
   2a178:	movk	x0, #0x8084, lsl #16
   2a17c:	and	x0, x1, x0
   2a180:	cmp	x0, #0x0
   2a184:	cset	w0, ne  // ne = any
   2a188:	and	w0, w0, #0xff
   2a18c:	cmp	w0, #0x0
   2a190:	b.eq	2a380 <GOMP_target_update_ext@@GOMP_4.5+0x5c0>  // b.none
   2a194:	ldr	x0, [sp, #136]
   2a198:	lsl	x0, x0, #3
   2a19c:	ldr	x1, [sp, #40]
   2a1a0:	add	x0, x1, x0
   2a1a4:	ldr	x0, [x0]
   2a1a8:	str	x0, [sp, #64]
   2a1ac:	ldr	x1, [sp, #64]
   2a1b0:	ldr	x0, [sp, #136]
   2a1b4:	lsl	x0, x0, #3
   2a1b8:	ldr	x2, [sp, #32]
   2a1bc:	add	x0, x2, x0
   2a1c0:	ldr	x0, [x0]
   2a1c4:	add	x0, x1, x0
   2a1c8:	str	x0, [sp, #72]
   2a1cc:	ldrb	w0, [sp, #131]
   2a1d0:	cmp	w0, #0x1f
   2a1d4:	b.eq	2a1e4 <GOMP_target_update_ext@@GOMP_4.5+0x424>  // b.none
   2a1d8:	ldrb	w0, [sp, #131]
   2a1dc:	cmp	w0, #0xf
   2a1e0:	b.ne	2a1f8 <GOMP_target_update_ext@@GOMP_4.5+0x438>  // b.any
   2a1e4:	ldr	x0, [sp, #56]
   2a1e8:	add	x0, x0, #0xa0
   2a1ec:	add	x1, sp, #0x40
   2a1f0:	bl	25378 <omp_get_place_proc_ids@@OMP_4.5+0x99c>
   2a1f4:	b	2a208 <GOMP_target_update_ext@@GOMP_4.5+0x448>
   2a1f8:	ldr	x0, [sp, #56]
   2a1fc:	add	x0, x0, #0xa0
   2a200:	add	x1, sp, #0x40
   2a204:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   2a208:	str	x0, [sp, #120]
   2a20c:	ldr	x0, [sp, #120]
   2a210:	cmp	x0, #0x0
   2a214:	b.eq	2a3a0 <GOMP_target_update_ext@@GOMP_4.5+0x5e0>  // b.none
   2a218:	ldr	x0, [sp, #120]
   2a21c:	ldr	x0, [x0, #32]
   2a220:	cmp	x0, #0x0
   2a224:	b.eq	2a24c <GOMP_target_update_ext@@GOMP_4.5+0x48c>  // b.none
   2a228:	ldr	x0, [sp, #120]
   2a22c:	ldr	x0, [x0, #32]
   2a230:	cmn	x0, #0x1
   2a234:	b.eq	2a24c <GOMP_target_update_ext@@GOMP_4.5+0x48c>  // b.none
   2a238:	ldr	x0, [sp, #120]
   2a23c:	ldr	x0, [x0, #32]
   2a240:	sub	x1, x0, #0x1
   2a244:	ldr	x0, [sp, #120]
   2a248:	str	x1, [x0, #32]
   2a24c:	ldrb	w0, [sp, #131]
   2a250:	cmp	w0, #0x7
   2a254:	b.eq	2a264 <GOMP_target_update_ext@@GOMP_4.5+0x4a4>  // b.none
   2a258:	ldrb	w0, [sp, #131]
   2a25c:	cmp	w0, #0x1f
   2a260:	b.ne	2a27c <GOMP_target_update_ext@@GOMP_4.5+0x4bc>  // b.any
   2a264:	ldr	x0, [sp, #120]
   2a268:	ldr	x0, [x0, #32]
   2a26c:	cmn	x0, #0x1
   2a270:	b.eq	2a27c <GOMP_target_update_ext@@GOMP_4.5+0x4bc>  // b.none
   2a274:	ldr	x0, [sp, #120]
   2a278:	str	xzr, [x0, #32]
   2a27c:	ldrb	w0, [sp, #131]
   2a280:	cmp	w0, #0x2
   2a284:	b.ne	2a298 <GOMP_target_update_ext@@GOMP_4.5+0x4d8>  // b.any
   2a288:	ldr	x0, [sp, #120]
   2a28c:	ldr	x0, [x0, #32]
   2a290:	cmp	x0, #0x0
   2a294:	b.eq	2a2a4 <GOMP_target_update_ext@@GOMP_4.5+0x4e4>  // b.none
   2a298:	ldrb	w0, [sp, #131]
   2a29c:	cmp	w0, #0x12
   2a2a0:	b.ne	2a2f8 <GOMP_target_update_ext@@GOMP_4.5+0x538>  // b.any
   2a2a4:	ldr	x0, [sp, #64]
   2a2a8:	mov	x4, x0
   2a2ac:	ldr	x0, [sp, #120]
   2a2b0:	ldr	x0, [x0, #16]
   2a2b4:	ldr	x1, [x0, #16]
   2a2b8:	ldr	x0, [sp, #120]
   2a2bc:	ldr	x0, [x0, #24]
   2a2c0:	add	x1, x1, x0
   2a2c4:	ldr	x0, [sp, #64]
   2a2c8:	add	x1, x1, x0
   2a2cc:	ldr	x0, [sp, #120]
   2a2d0:	ldr	x0, [x0]
   2a2d4:	sub	x0, x1, x0
   2a2d8:	mov	x2, x0
   2a2dc:	ldr	x1, [sp, #72]
   2a2e0:	ldr	x0, [sp, #64]
   2a2e4:	sub	x0, x1, x0
   2a2e8:	mov	x3, x0
   2a2ec:	mov	x1, x4
   2a2f0:	ldr	x0, [sp, #56]
   2a2f4:	bl	25850 <omp_get_place_proc_ids@@OMP_4.5+0xe74>
   2a2f8:	ldr	x0, [sp, #120]
   2a2fc:	ldr	x0, [x0, #32]
   2a300:	cmp	x0, #0x0
   2a304:	b.ne	2a3a8 <GOMP_target_update_ext@@GOMP_4.5+0x5e8>  // b.any
   2a308:	ldr	x0, [sp, #56]
   2a30c:	add	x0, x0, #0xa0
   2a310:	ldr	x1, [sp, #120]
   2a314:	bl	2d224 <omp_pause_resource_all@@OMP_5.0+0x14c0>
   2a318:	ldr	x0, [sp, #120]
   2a31c:	ldr	x0, [x0, #48]
   2a320:	cmp	x0, #0x0
   2a324:	b.eq	2a344 <GOMP_target_update_ext@@GOMP_4.5+0x584>  // b.none
   2a328:	ldr	x0, [sp, #56]
   2a32c:	add	x2, x0, #0xa0
   2a330:	ldr	x0, [sp, #120]
   2a334:	ldr	x0, [x0, #48]
   2a338:	mov	x1, x0
   2a33c:	mov	x0, x2
   2a340:	bl	2d0f4 <omp_pause_resource_all@@OMP_5.0+0x1390>
   2a344:	ldr	x0, [sp, #120]
   2a348:	ldr	x0, [x0, #16]
   2a34c:	ldr	x0, [x0]
   2a350:	cmp	x0, #0x1
   2a354:	b.ls	2a370 <GOMP_target_update_ext@@GOMP_4.5+0x5b0>  // b.plast
   2a358:	ldr	x0, [sp, #120]
   2a35c:	ldr	x0, [x0, #16]
   2a360:	ldr	x1, [x0]
   2a364:	sub	x1, x1, #0x1
   2a368:	str	x1, [x0]
   2a36c:	b	2a3a8 <GOMP_target_update_ext@@GOMP_4.5+0x5e8>
   2a370:	ldr	x0, [sp, #120]
   2a374:	ldr	x0, [x0, #16]
   2a378:	bl	27d04 <omp_get_place_proc_ids@@OMP_4.5+0x3328>
   2a37c:	b	2a3a8 <GOMP_target_update_ext@@GOMP_4.5+0x5e8>
   2a380:	ldr	x0, [sp, #56]
   2a384:	add	x0, x0, #0xa8
   2a388:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2a38c:	ldrb	w0, [sp, #131]
   2a390:	mov	w1, w0
   2a394:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2a398:	add	x0, x0, #0xb90
   2a39c:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2a3a0:	nop
   2a3a4:	b	2a3ac <GOMP_target_update_ext@@GOMP_4.5+0x5ec>
   2a3a8:	nop
   2a3ac:	ldr	x0, [sp, #136]
   2a3b0:	add	x0, x0, #0x1
   2a3b4:	str	x0, [sp, #136]
   2a3b8:	ldr	x1, [sp, #136]
   2a3bc:	ldr	x0, [sp, #48]
   2a3c0:	cmp	x1, x0
   2a3c4:	b.cc	2a128 <GOMP_target_update_ext@@GOMP_4.5+0x368>  // b.lo, b.ul, b.last
   2a3c8:	ldr	x0, [sp, #56]
   2a3cc:	add	x0, x0, #0xa8
   2a3d0:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2a3d4:	ldp	x29, x30, [sp], #144
   2a3d8:	ret

000000000002a3dc <GOMP_target_enter_exit_data@@GOMP_4.5>:
   2a3dc:	sub	sp, sp, #0x80
   2a3e0:	stp	x29, x30, [sp, #16]
   2a3e4:	add	x29, sp, #0x10
   2a3e8:	str	w0, [sp, #76]
   2a3ec:	str	x1, [sp, #64]
   2a3f0:	str	x2, [sp, #56]
   2a3f4:	str	x3, [sp, #48]
   2a3f8:	str	x4, [sp, #40]
   2a3fc:	str	w5, [sp, #72]
   2a400:	str	x6, [sp, #32]
   2a404:	ldr	w0, [sp, #76]
   2a408:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2a40c:	str	x0, [sp, #112]
   2a410:	ldr	x0, [sp, #32]
   2a414:	cmp	x0, #0x0
   2a418:	b.eq	2a588 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1ac>  // b.none
   2a41c:	bl	24fbc <omp_get_place_proc_ids@@OMP_4.5+0x5e0>
   2a420:	str	x0, [sp, #104]
   2a424:	ldr	x0, [sp, #104]
   2a428:	ldr	x0, [x0, #80]
   2a42c:	cmp	x0, #0x0
   2a430:	b.eq	2a588 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1ac>  // b.none
   2a434:	ldr	x0, [sp, #104]
   2a438:	ldr	x0, [x0, #80]
   2a43c:	ldr	x0, [x0, #56]
   2a440:	cmp	x0, #0x0
   2a444:	b.eq	2a588 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1ac>  // b.none
   2a448:	ldr	w0, [sp, #72]
   2a44c:	and	w0, w0, #0x1
   2a450:	cmp	w0, #0x0
   2a454:	b.eq	2a4c0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xe4>  // b.none
   2a458:	ldr	x0, [sp, #104]
   2a45c:	ldr	x0, [x0, #16]
   2a460:	cmp	x0, #0x0
   2a464:	b.eq	2a4c0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xe4>  // b.none
   2a468:	ldr	x0, [sp, #104]
   2a46c:	ldr	x0, [x0, #80]
   2a470:	ldrb	w0, [x0, #205]
   2a474:	eor	w0, w0, #0x1
   2a478:	and	w0, w0, #0xff
   2a47c:	cmp	w0, #0x0
   2a480:	b.eq	2a4c0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xe4>  // b.none
   2a484:	str	wzr, [sp, #8]
   2a488:	str	xzr, [sp]
   2a48c:	ldr	x7, [sp, #32]
   2a490:	ldr	w6, [sp, #72]
   2a494:	ldr	x5, [sp, #40]
   2a498:	ldr	x4, [sp, #48]
   2a49c:	ldr	x3, [sp, #56]
   2a4a0:	ldr	x2, [sp, #64]
   2a4a4:	mov	x1, #0x0                   	// #0
   2a4a8:	ldr	x0, [sp, #112]
   2a4ac:	bl	1991c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x90>
   2a4b0:	and	w0, w0, #0xff
   2a4b4:	cmp	w0, #0x0
   2a4b8:	b.eq	2a588 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1ac>  // b.none
   2a4bc:	b	2a808 <GOMP_target_enter_exit_data@@GOMP_4.5+0x42c>
   2a4c0:	ldr	x0, [sp, #104]
   2a4c4:	ldr	x0, [x0, #16]
   2a4c8:	str	x0, [sp, #96]
   2a4cc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2a4d0:	add	x0, x0, #0x574
   2a4d4:	ldrb	w0, [x0]
   2a4d8:	and	x0, x0, #0xff
   2a4dc:	cmp	x0, #0x0
   2a4e0:	b.eq	2a580 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1a4>  // b.none
   2a4e4:	ldr	x0, [sp, #96]
   2a4e8:	cmp	x0, #0x0
   2a4ec:	b.eq	2a580 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1a4>  // b.none
   2a4f0:	ldr	x0, [sp, #96]
   2a4f4:	add	x0, x0, #0x80
   2a4f8:	bl	24f84 <omp_get_place_proc_ids@@OMP_4.5+0x5a8>
   2a4fc:	and	w0, w0, #0xff
   2a500:	cmp	w0, #0x0
   2a504:	b.ne	2a7d4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3f8>  // b.any
   2a508:	ldr	x0, [sp, #104]
   2a50c:	ldr	x0, [x0, #80]
   2a510:	ldr	x0, [x0, #40]
   2a514:	cmp	x0, #0x0
   2a518:	b.eq	2a580 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1a4>  // b.none
   2a51c:	ldr	x0, [sp, #104]
   2a520:	ldr	x0, [x0, #80]
   2a524:	ldr	x0, [x0, #40]
   2a528:	ldrb	w0, [x0, #49]
   2a52c:	cmp	w0, #0x0
   2a530:	b.ne	2a7dc <GOMP_target_enter_exit_data@@GOMP_4.5+0x400>  // b.any
   2a534:	ldr	x0, [sp, #104]
   2a538:	ldr	x0, [x0, #80]
   2a53c:	ldr	x0, [x0, #40]
   2a540:	ldrb	w0, [x0, #50]
   2a544:	cmp	w0, #0x0
   2a548:	b.eq	2a580 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1a4>  // b.none
   2a54c:	ldr	x0, [sp, #104]
   2a550:	ldr	x0, [x0, #80]
   2a554:	ldr	x0, [x0, #40]
   2a558:	ldr	x0, [x0]
   2a55c:	cmp	x0, #0x0
   2a560:	b.eq	2a580 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1a4>  // b.none
   2a564:	ldr	x0, [sp, #104]
   2a568:	ldr	x0, [x0, #80]
   2a56c:	ldr	x0, [x0, #40]
   2a570:	ldr	x0, [x0]
   2a574:	ldrb	w0, [x0, #49]
   2a578:	cmp	w0, #0x0
   2a57c:	b.ne	2a7e4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x408>  // b.any
   2a580:	ldr	x0, [sp, #32]
   2a584:	bl	1b798 <GOMP_taskwait_depend@@GOMP_5.0+0x120>
   2a588:	ldr	x0, [sp, #112]
   2a58c:	cmp	x0, #0x0
   2a590:	b.eq	2a7ec <GOMP_target_enter_exit_data@@GOMP_4.5+0x410>  // b.none
   2a594:	ldr	x0, [sp, #112]
   2a598:	ldr	w0, [x0, #8]
   2a59c:	and	w0, w0, #0x4
   2a5a0:	cmp	w0, #0x0
   2a5a4:	b.eq	2a7ec <GOMP_target_enter_exit_data@@GOMP_4.5+0x410>  // b.none
   2a5a8:	ldr	x0, [sp, #112]
   2a5ac:	ldr	w0, [x0, #8]
   2a5b0:	and	w0, w0, #0x1
   2a5b4:	cmp	w0, #0x0
   2a5b8:	b.ne	2a7ec <GOMP_target_enter_exit_data@@GOMP_4.5+0x410>  // b.any
   2a5bc:	bl	24fbc <omp_get_place_proc_ids@@OMP_4.5+0x5e0>
   2a5c0:	str	x0, [sp, #88]
   2a5c4:	ldr	x0, [sp, #88]
   2a5c8:	ldr	x0, [x0, #16]
   2a5cc:	str	x0, [sp, #80]
   2a5d0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2a5d4:	add	x0, x0, #0x574
   2a5d8:	ldrb	w0, [x0]
   2a5dc:	and	x0, x0, #0xff
   2a5e0:	cmp	x0, #0x0
   2a5e4:	b.eq	2a684 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2a8>  // b.none
   2a5e8:	ldr	x0, [sp, #80]
   2a5ec:	cmp	x0, #0x0
   2a5f0:	b.eq	2a684 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2a8>  // b.none
   2a5f4:	ldr	x0, [sp, #80]
   2a5f8:	add	x0, x0, #0x80
   2a5fc:	bl	24f84 <omp_get_place_proc_ids@@OMP_4.5+0x5a8>
   2a600:	and	w0, w0, #0xff
   2a604:	cmp	w0, #0x0
   2a608:	b.ne	2a7f4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x418>  // b.any
   2a60c:	ldr	x0, [sp, #88]
   2a610:	ldr	x0, [x0, #80]
   2a614:	ldr	x0, [x0, #40]
   2a618:	cmp	x0, #0x0
   2a61c:	b.eq	2a684 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2a8>  // b.none
   2a620:	ldr	x0, [sp, #88]
   2a624:	ldr	x0, [x0, #80]
   2a628:	ldr	x0, [x0, #40]
   2a62c:	ldrb	w0, [x0, #49]
   2a630:	cmp	w0, #0x0
   2a634:	b.ne	2a7fc <GOMP_target_enter_exit_data@@GOMP_4.5+0x420>  // b.any
   2a638:	ldr	x0, [sp, #88]
   2a63c:	ldr	x0, [x0, #80]
   2a640:	ldr	x0, [x0, #40]
   2a644:	ldrb	w0, [x0, #50]
   2a648:	cmp	w0, #0x0
   2a64c:	b.eq	2a684 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2a8>  // b.none
   2a650:	ldr	x0, [sp, #88]
   2a654:	ldr	x0, [x0, #80]
   2a658:	ldr	x0, [x0, #40]
   2a65c:	ldr	x0, [x0]
   2a660:	cmp	x0, #0x0
   2a664:	b.eq	2a684 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2a8>  // b.none
   2a668:	ldr	x0, [sp, #88]
   2a66c:	ldr	x0, [x0, #80]
   2a670:	ldr	x0, [x0, #40]
   2a674:	ldr	x0, [x0]
   2a678:	ldrb	w0, [x0, #49]
   2a67c:	cmp	w0, #0x0
   2a680:	b.ne	2a804 <GOMP_target_enter_exit_data@@GOMP_4.5+0x428>  // b.any
   2a684:	ldr	w0, [sp, #72]
   2a688:	and	w0, w0, #0x2
   2a68c:	cmp	w0, #0x0
   2a690:	b.ne	2a7b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3dc>  // b.any
   2a694:	str	xzr, [sp, #120]
   2a698:	b	2a7a4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3c8>
   2a69c:	ldr	x0, [sp, #120]
   2a6a0:	lsl	x0, x0, #1
   2a6a4:	ldr	x1, [sp, #40]
   2a6a8:	add	x0, x1, x0
   2a6ac:	ldrh	w0, [x0]
   2a6b0:	and	w0, w0, #0xff
   2a6b4:	cmp	w0, #0x1c
   2a6b8:	b.ne	2a748 <GOMP_target_enter_exit_data@@GOMP_4.5+0x36c>  // b.any
   2a6bc:	ldr	x0, [sp, #120]
   2a6c0:	lsl	x0, x0, #3
   2a6c4:	ldr	x1, [sp, #48]
   2a6c8:	add	x0, x1, x0
   2a6cc:	ldr	x0, [x0]
   2a6d0:	add	x8, x0, #0x1
   2a6d4:	ldr	x0, [sp, #120]
   2a6d8:	lsl	x0, x0, #3
   2a6dc:	ldr	x1, [sp, #56]
   2a6e0:	add	x2, x1, x0
   2a6e4:	ldr	x0, [sp, #120]
   2a6e8:	lsl	x0, x0, #3
   2a6ec:	ldr	x1, [sp, #48]
   2a6f0:	add	x3, x1, x0
   2a6f4:	ldr	x0, [sp, #120]
   2a6f8:	lsl	x0, x0, #1
   2a6fc:	ldr	x1, [sp, #40]
   2a700:	add	x0, x1, x0
   2a704:	mov	w7, #0x3                   	// #3
   2a708:	mov	w6, #0x1                   	// #1
   2a70c:	mov	x5, x0
   2a710:	mov	x4, x3
   2a714:	mov	x3, #0x0                   	// #0
   2a718:	mov	x1, x8
   2a71c:	ldr	x0, [sp, #112]
   2a720:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   2a724:	ldr	x0, [sp, #120]
   2a728:	lsl	x0, x0, #3
   2a72c:	ldr	x1, [sp, #48]
   2a730:	add	x0, x1, x0
   2a734:	ldr	x0, [x0]
   2a738:	ldr	x1, [sp, #120]
   2a73c:	add	x0, x1, x0
   2a740:	str	x0, [sp, #120]
   2a744:	b	2a798 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3bc>
   2a748:	ldr	x0, [sp, #120]
   2a74c:	lsl	x0, x0, #3
   2a750:	ldr	x1, [sp, #56]
   2a754:	add	x2, x1, x0
   2a758:	ldr	x0, [sp, #120]
   2a75c:	lsl	x0, x0, #3
   2a760:	ldr	x1, [sp, #48]
   2a764:	add	x3, x1, x0
   2a768:	ldr	x0, [sp, #120]
   2a76c:	lsl	x0, x0, #1
   2a770:	ldr	x1, [sp, #40]
   2a774:	add	x0, x1, x0
   2a778:	mov	w7, #0x3                   	// #3
   2a77c:	mov	w6, #0x1                   	// #1
   2a780:	mov	x5, x0
   2a784:	mov	x4, x3
   2a788:	mov	x3, #0x0                   	// #0
   2a78c:	mov	x1, #0x1                   	// #1
   2a790:	ldr	x0, [sp, #112]
   2a794:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   2a798:	ldr	x0, [sp, #120]
   2a79c:	add	x0, x0, #0x1
   2a7a0:	str	x0, [sp, #120]
   2a7a4:	ldr	x1, [sp, #120]
   2a7a8:	ldr	x0, [sp, #64]
   2a7ac:	cmp	x1, x0
   2a7b0:	b.cc	2a69c <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c0>  // b.lo, b.ul, b.last
   2a7b4:	b	2a808 <GOMP_target_enter_exit_data@@GOMP_4.5+0x42c>
   2a7b8:	ldr	x4, [sp, #40]
   2a7bc:	ldr	x3, [sp, #48]
   2a7c0:	ldr	x2, [sp, #56]
   2a7c4:	ldr	x1, [sp, #64]
   2a7c8:	ldr	x0, [sp, #112]
   2a7cc:	bl	2a0d0 <GOMP_target_update_ext@@GOMP_4.5+0x310>
   2a7d0:	b	2a808 <GOMP_target_enter_exit_data@@GOMP_4.5+0x42c>
   2a7d4:	nop
   2a7d8:	b	2a808 <GOMP_target_enter_exit_data@@GOMP_4.5+0x42c>
   2a7dc:	nop
   2a7e0:	b	2a808 <GOMP_target_enter_exit_data@@GOMP_4.5+0x42c>
   2a7e4:	nop
   2a7e8:	b	2a808 <GOMP_target_enter_exit_data@@GOMP_4.5+0x42c>
   2a7ec:	nop
   2a7f0:	b	2a808 <GOMP_target_enter_exit_data@@GOMP_4.5+0x42c>
   2a7f4:	nop
   2a7f8:	b	2a808 <GOMP_target_enter_exit_data@@GOMP_4.5+0x42c>
   2a7fc:	nop
   2a800:	b	2a808 <GOMP_target_enter_exit_data@@GOMP_4.5+0x42c>
   2a804:	nop
   2a808:	ldp	x29, x30, [sp, #16]
   2a80c:	add	sp, sp, #0x80
   2a810:	ret
   2a814:	stp	x29, x30, [sp, #-80]!
   2a818:	mov	x29, sp
   2a81c:	str	x0, [sp, #24]
   2a820:	ldr	x0, [sp, #24]
   2a824:	str	x0, [sp, #56]
   2a828:	ldr	x0, [sp, #56]
   2a82c:	ldr	x0, [x0]
   2a830:	str	x0, [sp, #48]
   2a834:	ldr	x0, [sp, #56]
   2a838:	ldr	x0, [x0, #8]
   2a83c:	cmp	x0, #0x0
   2a840:	b.eq	2a9ec <GOMP_target_enter_exit_data@@GOMP_4.5+0x610>  // b.none
   2a844:	ldr	x0, [sp, #48]
   2a848:	cmp	x0, #0x0
   2a84c:	b.eq	2a8bc <GOMP_target_enter_exit_data@@GOMP_4.5+0x4e0>  // b.none
   2a850:	ldr	x0, [sp, #48]
   2a854:	ldr	w0, [x0, #8]
   2a858:	and	w0, w0, #0x4
   2a85c:	cmp	w0, #0x0
   2a860:	b.eq	2a8bc <GOMP_target_enter_exit_data@@GOMP_4.5+0x4e0>  // b.none
   2a864:	ldr	x0, [sp, #56]
   2a868:	ldr	x0, [x0, #8]
   2a86c:	mov	x1, x0
   2a870:	ldr	x0, [sp, #48]
   2a874:	bl	29414 <GOMP_offload_unregister@@GOMP_4.0.1+0x5e0>
   2a878:	str	x0, [sp, #40]
   2a87c:	ldr	x0, [sp, #40]
   2a880:	cmp	x0, #0x0
   2a884:	b.eq	2a8bc <GOMP_target_enter_exit_data@@GOMP_4.5+0x4e0>  // b.none
   2a888:	ldr	x0, [sp, #48]
   2a88c:	ldr	x0, [x0, #136]
   2a890:	cmp	x0, #0x0
   2a894:	b.eq	2a8ec <GOMP_target_enter_exit_data@@GOMP_4.5+0x510>  // b.none
   2a898:	ldr	x0, [sp, #48]
   2a89c:	ldr	x1, [x0, #136]
   2a8a0:	ldr	x0, [sp, #40]
   2a8a4:	blr	x1
   2a8a8:	and	w0, w0, #0xff
   2a8ac:	eor	w0, w0, #0x1
   2a8b0:	and	w0, w0, #0xff
   2a8b4:	cmp	w0, #0x0
   2a8b8:	b.eq	2a8ec <GOMP_target_enter_exit_data@@GOMP_4.5+0x510>  // b.none
   2a8bc:	ldr	x0, [sp, #56]
   2a8c0:	mov	w1, #0x2                   	// #2
   2a8c4:	str	w1, [x0, #44]
   2a8c8:	ldr	x0, [sp, #56]
   2a8cc:	ldr	x2, [x0, #8]
   2a8d0:	ldr	x0, [sp, #56]
   2a8d4:	add	x0, x0, #0x50
   2a8d8:	mov	x1, x0
   2a8dc:	mov	x0, x2
   2a8e0:	bl	29084 <GOMP_offload_unregister@@GOMP_4.0.1+0x250>
   2a8e4:	mov	w0, #0x0                   	// #0
   2a8e8:	b	2abfc <GOMP_target_enter_exit_data@@GOMP_4.5+0x820>
   2a8ec:	ldr	x0, [sp, #56]
   2a8f0:	ldr	w0, [x0, #44]
   2a8f4:	cmp	w0, #0x5
   2a8f8:	b.ne	2a924 <GOMP_target_enter_exit_data@@GOMP_4.5+0x548>  // b.any
   2a8fc:	ldr	x0, [sp, #56]
   2a900:	ldr	x0, [x0, #48]
   2a904:	cmp	x0, #0x0
   2a908:	b.eq	2a91c <GOMP_target_enter_exit_data@@GOMP_4.5+0x540>  // b.none
   2a90c:	ldr	x0, [sp, #56]
   2a910:	ldr	x0, [x0, #48]
   2a914:	mov	w1, #0x1                   	// #1
   2a918:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   2a91c:	mov	w0, #0x0                   	// #0
   2a920:	b	2abfc <GOMP_target_enter_exit_data@@GOMP_4.5+0x820>
   2a924:	ldr	x0, [sp, #48]
   2a928:	ldr	w0, [x0, #8]
   2a92c:	and	w0, w0, #0x1
   2a930:	cmp	w0, #0x0
   2a934:	b.eq	2a950 <GOMP_target_enter_exit_data@@GOMP_4.5+0x574>  // b.none
   2a938:	ldr	x0, [sp, #56]
   2a93c:	str	xzr, [x0, #48]
   2a940:	ldr	x0, [sp, #56]
   2a944:	add	x0, x0, #0x50
   2a948:	str	x0, [sp, #72]
   2a94c:	b	2a9a8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x5cc>
   2a950:	ldr	x0, [sp, #56]
   2a954:	ldr	x1, [x0, #16]
   2a958:	ldr	x0, [sp, #56]
   2a95c:	add	x2, x0, #0x50
   2a960:	ldr	x0, [sp, #56]
   2a964:	ldr	x3, [x0, #24]
   2a968:	ldr	x0, [sp, #56]
   2a96c:	ldr	x0, [x0, #32]
   2a970:	mov	w7, #0x1                   	// #1
   2a974:	mov	w6, #0x1                   	// #1
   2a978:	mov	x5, x0
   2a97c:	mov	x4, x3
   2a980:	mov	x3, #0x0                   	// #0
   2a984:	ldr	x0, [sp, #48]
   2a988:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   2a98c:	mov	x1, x0
   2a990:	ldr	x0, [sp, #56]
   2a994:	str	x1, [x0, #48]
   2a998:	ldr	x0, [sp, #56]
   2a99c:	ldr	x0, [x0, #48]
   2a9a0:	ldr	x0, [x0, #16]
   2a9a4:	str	x0, [sp, #72]
   2a9a8:	ldr	x0, [sp, #56]
   2a9ac:	mov	w1, #0x3                   	// #3
   2a9b0:	str	w1, [x0, #44]
   2a9b4:	ldr	x0, [sp, #48]
   2a9b8:	ldr	x5, [x0, #152]
   2a9bc:	ldr	x0, [sp, #48]
   2a9c0:	ldr	w6, [x0, #12]
   2a9c4:	ldr	x0, [sp, #56]
   2a9c8:	ldr	x0, [x0, #72]
   2a9cc:	ldr	x4, [sp, #56]
   2a9d0:	mov	x3, x0
   2a9d4:	ldr	x2, [sp, #72]
   2a9d8:	ldr	x1, [sp, #40]
   2a9dc:	mov	w0, w6
   2a9e0:	blr	x5
   2a9e4:	mov	w0, #0x1                   	// #1
   2a9e8:	b	2abfc <GOMP_target_enter_exit_data@@GOMP_4.5+0x820>
   2a9ec:	ldr	x0, [sp, #48]
   2a9f0:	cmp	x0, #0x0
   2a9f4:	b.eq	2aa20 <GOMP_target_enter_exit_data@@GOMP_4.5+0x644>  // b.none
   2a9f8:	ldr	x0, [sp, #48]
   2a9fc:	ldr	w0, [x0, #8]
   2aa00:	and	w0, w0, #0x4
   2aa04:	cmp	w0, #0x0
   2aa08:	b.eq	2aa20 <GOMP_target_enter_exit_data@@GOMP_4.5+0x644>  // b.none
   2aa0c:	ldr	x0, [sp, #48]
   2aa10:	ldr	w0, [x0, #8]
   2aa14:	and	w0, w0, #0x1
   2aa18:	cmp	w0, #0x0
   2aa1c:	b.eq	2aa28 <GOMP_target_enter_exit_data@@GOMP_4.5+0x64c>  // b.none
   2aa20:	mov	w0, #0x0                   	// #0
   2aa24:	b	2abfc <GOMP_target_enter_exit_data@@GOMP_4.5+0x820>
   2aa28:	ldr	x0, [sp, #56]
   2aa2c:	ldr	w0, [x0, #40]
   2aa30:	cmp	w0, #0x0
   2aa34:	b.ge	2aa6c <GOMP_target_enter_exit_data@@GOMP_4.5+0x690>  // b.tcont
   2aa38:	ldr	x0, [sp, #56]
   2aa3c:	ldr	x1, [x0, #16]
   2aa40:	ldr	x0, [sp, #56]
   2aa44:	add	x2, x0, #0x50
   2aa48:	ldr	x0, [sp, #56]
   2aa4c:	ldr	x3, [x0, #24]
   2aa50:	ldr	x0, [sp, #56]
   2aa54:	ldr	x0, [x0, #32]
   2aa58:	mov	w5, #0x1                   	// #1
   2aa5c:	mov	x4, x0
   2aa60:	ldr	x0, [sp, #48]
   2aa64:	bl	28060 <omp_get_place_proc_ids@@OMP_4.5+0x3684>
   2aa68:	b	2abf8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x81c>
   2aa6c:	ldr	x0, [sp, #56]
   2aa70:	ldr	w0, [x0, #40]
   2aa74:	and	w0, w0, #0x2
   2aa78:	cmp	w0, #0x0
   2aa7c:	b.ne	2abcc <GOMP_target_enter_exit_data@@GOMP_4.5+0x7f0>  // b.any
   2aa80:	str	xzr, [sp, #64]
   2aa84:	b	2abb4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x7d8>
   2aa88:	ldr	x0, [sp, #56]
   2aa8c:	ldr	x1, [x0, #32]
   2aa90:	ldr	x0, [sp, #64]
   2aa94:	lsl	x0, x0, #1
   2aa98:	add	x0, x1, x0
   2aa9c:	ldrh	w0, [x0]
   2aaa0:	and	w0, w0, #0xff
   2aaa4:	cmp	w0, #0x1c
   2aaa8:	b.ne	2ab4c <GOMP_target_enter_exit_data@@GOMP_4.5+0x770>  // b.any
   2aaac:	ldr	x0, [sp, #56]
   2aab0:	ldr	x1, [x0, #24]
   2aab4:	ldr	x0, [sp, #64]
   2aab8:	lsl	x0, x0, #3
   2aabc:	add	x0, x1, x0
   2aac0:	ldr	x0, [x0]
   2aac4:	add	x8, x0, #0x1
   2aac8:	ldr	x0, [sp, #64]
   2aacc:	add	x0, x0, #0xa
   2aad0:	lsl	x0, x0, #3
   2aad4:	ldr	x1, [sp, #56]
   2aad8:	add	x2, x1, x0
   2aadc:	ldr	x0, [sp, #56]
   2aae0:	ldr	x1, [x0, #24]
   2aae4:	ldr	x0, [sp, #64]
   2aae8:	lsl	x0, x0, #3
   2aaec:	add	x3, x1, x0
   2aaf0:	ldr	x0, [sp, #56]
   2aaf4:	ldr	x1, [x0, #32]
   2aaf8:	ldr	x0, [sp, #64]
   2aafc:	lsl	x0, x0, #1
   2ab00:	add	x0, x1, x0
   2ab04:	mov	w7, #0x3                   	// #3
   2ab08:	mov	w6, #0x1                   	// #1
   2ab0c:	mov	x5, x0
   2ab10:	mov	x4, x3
   2ab14:	mov	x3, #0x0                   	// #0
   2ab18:	mov	x1, x8
   2ab1c:	ldr	x0, [sp, #48]
   2ab20:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   2ab24:	ldr	x0, [sp, #56]
   2ab28:	ldr	x1, [x0, #24]
   2ab2c:	ldr	x0, [sp, #64]
   2ab30:	lsl	x0, x0, #3
   2ab34:	add	x0, x1, x0
   2ab38:	ldr	x0, [x0]
   2ab3c:	ldr	x1, [sp, #64]
   2ab40:	add	x0, x1, x0
   2ab44:	str	x0, [sp, #64]
   2ab48:	b	2aba8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x7cc>
   2ab4c:	ldr	x0, [sp, #64]
   2ab50:	add	x0, x0, #0xa
   2ab54:	lsl	x0, x0, #3
   2ab58:	ldr	x1, [sp, #56]
   2ab5c:	add	x2, x1, x0
   2ab60:	ldr	x0, [sp, #56]
   2ab64:	ldr	x1, [x0, #24]
   2ab68:	ldr	x0, [sp, #64]
   2ab6c:	lsl	x0, x0, #3
   2ab70:	add	x3, x1, x0
   2ab74:	ldr	x0, [sp, #56]
   2ab78:	ldr	x1, [x0, #32]
   2ab7c:	ldr	x0, [sp, #64]
   2ab80:	lsl	x0, x0, #1
   2ab84:	add	x0, x1, x0
   2ab88:	mov	w7, #0x3                   	// #3
   2ab8c:	mov	w6, #0x1                   	// #1
   2ab90:	mov	x5, x0
   2ab94:	mov	x4, x3
   2ab98:	mov	x3, #0x0                   	// #0
   2ab9c:	mov	x1, #0x1                   	// #1
   2aba0:	ldr	x0, [sp, #48]
   2aba4:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   2aba8:	ldr	x0, [sp, #64]
   2abac:	add	x0, x0, #0x1
   2abb0:	str	x0, [sp, #64]
   2abb4:	ldr	x0, [sp, #56]
   2abb8:	ldr	x0, [x0, #16]
   2abbc:	ldr	x1, [sp, #64]
   2abc0:	cmp	x1, x0
   2abc4:	b.cc	2aa88 <GOMP_target_enter_exit_data@@GOMP_4.5+0x6ac>  // b.lo, b.ul, b.last
   2abc8:	b	2abf8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x81c>
   2abcc:	ldr	x0, [sp, #56]
   2abd0:	ldr	x1, [x0, #16]
   2abd4:	ldr	x0, [sp, #56]
   2abd8:	add	x2, x0, #0x50
   2abdc:	ldr	x0, [sp, #56]
   2abe0:	ldr	x3, [x0, #24]
   2abe4:	ldr	x0, [sp, #56]
   2abe8:	ldr	x0, [x0, #32]
   2abec:	mov	x4, x0
   2abf0:	ldr	x0, [sp, #48]
   2abf4:	bl	2a0d0 <GOMP_target_update_ext@@GOMP_4.5+0x310>
   2abf8:	mov	w0, #0x0                   	// #0
   2abfc:	ldp	x29, x30, [sp], #80
   2ac00:	ret

000000000002ac04 <GOMP_teams@@GOMP_4.0>:
   2ac04:	stp	x29, x30, [sp, #-48]!
   2ac08:	mov	x29, sp
   2ac0c:	str	w0, [sp, #28]
   2ac10:	str	w1, [sp, #24]
   2ac14:	ldr	w0, [sp, #24]
   2ac18:	cmp	w0, #0x0
   2ac1c:	b.eq	2ac4c <GOMP_teams@@GOMP_4.0+0x48>  // b.none
   2ac20:	mov	w0, #0x1                   	// #1
   2ac24:	bl	24fd0 <omp_get_place_proc_ids@@OMP_4.5+0x5f4>
   2ac28:	str	x0, [sp, #40]
   2ac2c:	ldr	w0, [sp, #24]
   2ac30:	cmp	w0, #0x0
   2ac34:	b.lt	2ac40 <GOMP_teams@@GOMP_4.0+0x3c>  // b.tstop
   2ac38:	ldr	w0, [sp, #24]
   2ac3c:	b	2ac44 <GOMP_teams@@GOMP_4.0+0x40>
   2ac40:	mov	w0, #0xffffffff            	// #-1
   2ac44:	ldr	x1, [sp, #40]
   2ac48:	str	w0, [x1, #20]
   2ac4c:	nop
   2ac50:	ldp	x29, x30, [sp], #48
   2ac54:	ret

000000000002ac58 <omp_target_alloc@@OMP_4.5>:
   2ac58:	stp	x29, x30, [sp, #-48]!
   2ac5c:	mov	x29, sp
   2ac60:	str	x0, [sp, #24]
   2ac64:	str	w1, [sp, #20]
   2ac68:	ldr	w0, [sp, #20]
   2ac6c:	cmn	w0, #0x2
   2ac70:	b.ne	2ac80 <omp_target_alloc@@OMP_4.5+0x28>  // b.any
   2ac74:	ldr	x0, [sp, #24]
   2ac78:	bl	8850 <malloc@plt>
   2ac7c:	b	2ad20 <omp_target_alloc@@OMP_4.5+0xc8>
   2ac80:	ldr	w0, [sp, #20]
   2ac84:	cmp	w0, #0x0
   2ac88:	b.ge	2ac94 <omp_target_alloc@@OMP_4.5+0x3c>  // b.tcont
   2ac8c:	mov	x0, #0x0                   	// #0
   2ac90:	b	2ad20 <omp_target_alloc@@OMP_4.5+0xc8>
   2ac94:	ldr	w0, [sp, #20]
   2ac98:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2ac9c:	str	x0, [sp, #40]
   2aca0:	ldr	x0, [sp, #40]
   2aca4:	cmp	x0, #0x0
   2aca8:	b.ne	2acb4 <omp_target_alloc@@OMP_4.5+0x5c>  // b.any
   2acac:	mov	x0, #0x0                   	// #0
   2acb0:	b	2ad20 <omp_target_alloc@@OMP_4.5+0xc8>
   2acb4:	ldr	x0, [sp, #40]
   2acb8:	ldr	w0, [x0, #8]
   2acbc:	and	w0, w0, #0x4
   2acc0:	cmp	w0, #0x0
   2acc4:	b.eq	2acdc <omp_target_alloc@@OMP_4.5+0x84>  // b.none
   2acc8:	ldr	x0, [sp, #40]
   2accc:	ldr	w0, [x0, #8]
   2acd0:	and	w0, w0, #0x1
   2acd4:	cmp	w0, #0x0
   2acd8:	b.eq	2ace8 <omp_target_alloc@@OMP_4.5+0x90>  // b.none
   2acdc:	ldr	x0, [sp, #24]
   2ace0:	bl	8850 <malloc@plt>
   2ace4:	b	2ad20 <omp_target_alloc@@OMP_4.5+0xc8>
   2ace8:	ldr	x0, [sp, #40]
   2acec:	add	x0, x0, #0xa8
   2acf0:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2acf4:	ldr	x0, [sp, #40]
   2acf8:	ldr	x2, [x0, #96]
   2acfc:	ldr	x0, [sp, #40]
   2ad00:	ldr	w0, [x0, #12]
   2ad04:	ldr	x1, [sp, #24]
   2ad08:	blr	x2
   2ad0c:	str	x0, [sp, #32]
   2ad10:	ldr	x0, [sp, #40]
   2ad14:	add	x0, x0, #0xa8
   2ad18:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2ad1c:	ldr	x0, [sp, #32]
   2ad20:	ldp	x29, x30, [sp], #48
   2ad24:	ret

000000000002ad28 <omp_target_free@@OMP_4.5>:
   2ad28:	stp	x29, x30, [sp, #-48]!
   2ad2c:	mov	x29, sp
   2ad30:	str	x0, [sp, #24]
   2ad34:	str	w1, [sp, #20]
   2ad38:	ldr	x0, [sp, #24]
   2ad3c:	cmp	x0, #0x0
   2ad40:	b.eq	2addc <omp_target_free@@OMP_4.5+0xb4>  // b.none
   2ad44:	ldr	w0, [sp, #20]
   2ad48:	cmn	w0, #0x2
   2ad4c:	b.ne	2ad5c <omp_target_free@@OMP_4.5+0x34>  // b.any
   2ad50:	ldr	x0, [sp, #24]
   2ad54:	bl	8a20 <free@plt>
   2ad58:	b	2adf0 <omp_target_free@@OMP_4.5+0xc8>
   2ad5c:	ldr	w0, [sp, #20]
   2ad60:	cmp	w0, #0x0
   2ad64:	b.lt	2ade4 <omp_target_free@@OMP_4.5+0xbc>  // b.tstop
   2ad68:	ldr	w0, [sp, #20]
   2ad6c:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2ad70:	str	x0, [sp, #40]
   2ad74:	ldr	x0, [sp, #40]
   2ad78:	cmp	x0, #0x0
   2ad7c:	b.eq	2adec <omp_target_free@@OMP_4.5+0xc4>  // b.none
   2ad80:	ldr	x0, [sp, #40]
   2ad84:	ldr	w0, [x0, #8]
   2ad88:	and	w0, w0, #0x4
   2ad8c:	cmp	w0, #0x0
   2ad90:	b.eq	2ada8 <omp_target_free@@OMP_4.5+0x80>  // b.none
   2ad94:	ldr	x0, [sp, #40]
   2ad98:	ldr	w0, [x0, #8]
   2ad9c:	and	w0, w0, #0x1
   2ada0:	cmp	w0, #0x0
   2ada4:	b.eq	2adb4 <omp_target_free@@OMP_4.5+0x8c>  // b.none
   2ada8:	ldr	x0, [sp, #24]
   2adac:	bl	8a20 <free@plt>
   2adb0:	b	2adf0 <omp_target_free@@OMP_4.5+0xc8>
   2adb4:	ldr	x0, [sp, #40]
   2adb8:	add	x0, x0, #0xa8
   2adbc:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2adc0:	ldr	x1, [sp, #24]
   2adc4:	ldr	x0, [sp, #40]
   2adc8:	bl	258a0 <omp_get_place_proc_ids@@OMP_4.5+0xec4>
   2adcc:	ldr	x0, [sp, #40]
   2add0:	add	x0, x0, #0xa8
   2add4:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2add8:	b	2adf0 <omp_target_free@@OMP_4.5+0xc8>
   2addc:	nop
   2ade0:	b	2adf0 <omp_target_free@@OMP_4.5+0xc8>
   2ade4:	nop
   2ade8:	b	2adf0 <omp_target_free@@OMP_4.5+0xc8>
   2adec:	nop
   2adf0:	ldp	x29, x30, [sp], #48
   2adf4:	ret

000000000002adf8 <omp_target_is_present@@OMP_4.5>:
   2adf8:	stp	x29, x30, [sp, #-128]!
   2adfc:	mov	x29, sp
   2ae00:	str	x0, [sp, #24]
   2ae04:	str	w1, [sp, #20]
   2ae08:	ldr	x0, [sp, #24]
   2ae0c:	cmp	x0, #0x0
   2ae10:	b.ne	2ae1c <omp_target_is_present@@OMP_4.5+0x24>  // b.any
   2ae14:	mov	w0, #0x1                   	// #1
   2ae18:	b	2aef4 <omp_target_is_present@@OMP_4.5+0xfc>
   2ae1c:	ldr	w0, [sp, #20]
   2ae20:	cmn	w0, #0x2
   2ae24:	b.ne	2ae30 <omp_target_is_present@@OMP_4.5+0x38>  // b.any
   2ae28:	mov	w0, #0x1                   	// #1
   2ae2c:	b	2aef4 <omp_target_is_present@@OMP_4.5+0xfc>
   2ae30:	ldr	w0, [sp, #20]
   2ae34:	cmp	w0, #0x0
   2ae38:	b.ge	2ae44 <omp_target_is_present@@OMP_4.5+0x4c>  // b.tcont
   2ae3c:	mov	w0, #0x0                   	// #0
   2ae40:	b	2aef4 <omp_target_is_present@@OMP_4.5+0xfc>
   2ae44:	ldr	w0, [sp, #20]
   2ae48:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2ae4c:	str	x0, [sp, #120]
   2ae50:	ldr	x0, [sp, #120]
   2ae54:	cmp	x0, #0x0
   2ae58:	b.ne	2ae64 <omp_target_is_present@@OMP_4.5+0x6c>  // b.any
   2ae5c:	mov	w0, #0x0                   	// #0
   2ae60:	b	2aef4 <omp_target_is_present@@OMP_4.5+0xfc>
   2ae64:	ldr	x0, [sp, #120]
   2ae68:	ldr	w0, [x0, #8]
   2ae6c:	and	w0, w0, #0x4
   2ae70:	cmp	w0, #0x0
   2ae74:	b.eq	2ae8c <omp_target_is_present@@OMP_4.5+0x94>  // b.none
   2ae78:	ldr	x0, [sp, #120]
   2ae7c:	ldr	w0, [x0, #8]
   2ae80:	and	w0, w0, #0x1
   2ae84:	cmp	w0, #0x0
   2ae88:	b.eq	2ae94 <omp_target_is_present@@OMP_4.5+0x9c>  // b.none
   2ae8c:	mov	w0, #0x1                   	// #1
   2ae90:	b	2aef4 <omp_target_is_present@@OMP_4.5+0xfc>
   2ae94:	ldr	x0, [sp, #120]
   2ae98:	add	x0, x0, #0xa8
   2ae9c:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2aea0:	ldr	x0, [sp, #120]
   2aea4:	add	x0, x0, #0xa0
   2aea8:	str	x0, [sp, #112]
   2aeac:	ldr	x0, [sp, #24]
   2aeb0:	str	x0, [sp, #40]
   2aeb4:	ldr	x0, [sp, #40]
   2aeb8:	str	x0, [sp, #48]
   2aebc:	add	x0, sp, #0x28
   2aec0:	mov	x1, x0
   2aec4:	ldr	x0, [sp, #112]
   2aec8:	bl	25378 <omp_get_place_proc_ids@@OMP_4.5+0x99c>
   2aecc:	str	x0, [sp, #104]
   2aed0:	ldr	x0, [sp, #104]
   2aed4:	cmp	x0, #0x0
   2aed8:	cset	w0, ne  // ne = any
   2aedc:	and	w0, w0, #0xff
   2aee0:	str	w0, [sp, #100]
   2aee4:	ldr	x0, [sp, #120]
   2aee8:	add	x0, x0, #0xa8
   2aeec:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2aef0:	ldr	w0, [sp, #100]
   2aef4:	ldp	x29, x30, [sp], #128
   2aef8:	ret

000000000002aefc <omp_target_memcpy@@OMP_4.5>:
   2aefc:	stp	x29, x30, [sp, #-96]!
   2af00:	mov	x29, sp
   2af04:	str	x0, [sp, #56]
   2af08:	str	x1, [sp, #48]
   2af0c:	str	x2, [sp, #40]
   2af10:	str	x3, [sp, #32]
   2af14:	str	x4, [sp, #24]
   2af18:	str	w5, [sp, #20]
   2af1c:	str	w6, [sp, #16]
   2af20:	str	xzr, [sp, #88]
   2af24:	str	xzr, [sp, #80]
   2af28:	ldr	w0, [sp, #20]
   2af2c:	cmn	w0, #0x2
   2af30:	b.eq	2af94 <omp_target_memcpy@@OMP_4.5+0x98>  // b.none
   2af34:	ldr	w0, [sp, #20]
   2af38:	cmp	w0, #0x0
   2af3c:	b.ge	2af48 <omp_target_memcpy@@OMP_4.5+0x4c>  // b.tcont
   2af40:	mov	w0, #0x16                  	// #22
   2af44:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2af48:	ldr	w0, [sp, #20]
   2af4c:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2af50:	str	x0, [sp, #88]
   2af54:	ldr	x0, [sp, #88]
   2af58:	cmp	x0, #0x0
   2af5c:	b.ne	2af68 <omp_target_memcpy@@OMP_4.5+0x6c>  // b.any
   2af60:	mov	w0, #0x16                  	// #22
   2af64:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2af68:	ldr	x0, [sp, #88]
   2af6c:	ldr	w0, [x0, #8]
   2af70:	and	w0, w0, #0x4
   2af74:	cmp	w0, #0x0
   2af78:	b.eq	2af90 <omp_target_memcpy@@OMP_4.5+0x94>  // b.none
   2af7c:	ldr	x0, [sp, #88]
   2af80:	ldr	w0, [x0, #8]
   2af84:	and	w0, w0, #0x1
   2af88:	cmp	w0, #0x0
   2af8c:	b.eq	2af94 <omp_target_memcpy@@OMP_4.5+0x98>  // b.none
   2af90:	str	xzr, [sp, #88]
   2af94:	ldr	w0, [sp, #16]
   2af98:	cmn	w0, #0x2
   2af9c:	b.eq	2b000 <omp_target_memcpy@@OMP_4.5+0x104>  // b.none
   2afa0:	ldr	w0, [sp, #16]
   2afa4:	cmp	w0, #0x0
   2afa8:	b.ge	2afb4 <omp_target_memcpy@@OMP_4.5+0xb8>  // b.tcont
   2afac:	mov	w0, #0x16                  	// #22
   2afb0:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2afb4:	ldr	w0, [sp, #16]
   2afb8:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2afbc:	str	x0, [sp, #80]
   2afc0:	ldr	x0, [sp, #80]
   2afc4:	cmp	x0, #0x0
   2afc8:	b.ne	2afd4 <omp_target_memcpy@@OMP_4.5+0xd8>  // b.any
   2afcc:	mov	w0, #0x16                  	// #22
   2afd0:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2afd4:	ldr	x0, [sp, #80]
   2afd8:	ldr	w0, [x0, #8]
   2afdc:	and	w0, w0, #0x4
   2afe0:	cmp	w0, #0x0
   2afe4:	b.eq	2affc <omp_target_memcpy@@OMP_4.5+0x100>  // b.none
   2afe8:	ldr	x0, [sp, #80]
   2afec:	ldr	w0, [x0, #8]
   2aff0:	and	w0, w0, #0x1
   2aff4:	cmp	w0, #0x0
   2aff8:	b.eq	2b000 <omp_target_memcpy@@OMP_4.5+0x104>  // b.none
   2affc:	str	xzr, [sp, #80]
   2b000:	ldr	x0, [sp, #80]
   2b004:	cmp	x0, #0x0
   2b008:	b.ne	2b048 <omp_target_memcpy@@OMP_4.5+0x14c>  // b.any
   2b00c:	ldr	x0, [sp, #88]
   2b010:	cmp	x0, #0x0
   2b014:	b.ne	2b048 <omp_target_memcpy@@OMP_4.5+0x14c>  // b.any
   2b018:	ldr	x1, [sp, #56]
   2b01c:	ldr	x0, [sp, #32]
   2b020:	add	x3, x1, x0
   2b024:	ldr	x1, [sp, #48]
   2b028:	ldr	x0, [sp, #24]
   2b02c:	add	x0, x1, x0
   2b030:	ldr	x2, [sp, #40]
   2b034:	mov	x1, x0
   2b038:	mov	x0, x3
   2b03c:	bl	86a0 <memcpy@plt>
   2b040:	mov	w0, #0x0                   	// #0
   2b044:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2b048:	ldr	x0, [sp, #80]
   2b04c:	cmp	x0, #0x0
   2b050:	b.ne	2b0c8 <omp_target_memcpy@@OMP_4.5+0x1cc>  // b.any
   2b054:	ldr	x0, [sp, #88]
   2b058:	add	x0, x0, #0xa8
   2b05c:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2b060:	ldr	x0, [sp, #88]
   2b064:	ldr	x4, [x0, #120]
   2b068:	ldr	x0, [sp, #88]
   2b06c:	ldr	w5, [x0, #12]
   2b070:	ldr	x1, [sp, #56]
   2b074:	ldr	x0, [sp, #32]
   2b078:	add	x6, x1, x0
   2b07c:	ldr	x1, [sp, #48]
   2b080:	ldr	x0, [sp, #24]
   2b084:	add	x0, x1, x0
   2b088:	ldr	x3, [sp, #40]
   2b08c:	mov	x2, x0
   2b090:	mov	x1, x6
   2b094:	mov	w0, w5
   2b098:	blr	x4
   2b09c:	strb	w0, [sp, #79]
   2b0a0:	ldr	x0, [sp, #88]
   2b0a4:	add	x0, x0, #0xa8
   2b0a8:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2b0ac:	ldrb	w0, [sp, #79]
   2b0b0:	cmp	w0, #0x0
   2b0b4:	b.eq	2b0c0 <omp_target_memcpy@@OMP_4.5+0x1c4>  // b.none
   2b0b8:	mov	w0, #0x0                   	// #0
   2b0bc:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2b0c0:	mov	w0, #0x16                  	// #22
   2b0c4:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2b0c8:	ldr	x0, [sp, #88]
   2b0cc:	cmp	x0, #0x0
   2b0d0:	b.ne	2b148 <omp_target_memcpy@@OMP_4.5+0x24c>  // b.any
   2b0d4:	ldr	x0, [sp, #80]
   2b0d8:	add	x0, x0, #0xa8
   2b0dc:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2b0e0:	ldr	x0, [sp, #80]
   2b0e4:	ldr	x4, [x0, #112]
   2b0e8:	ldr	x0, [sp, #80]
   2b0ec:	ldr	w5, [x0, #12]
   2b0f0:	ldr	x1, [sp, #56]
   2b0f4:	ldr	x0, [sp, #32]
   2b0f8:	add	x6, x1, x0
   2b0fc:	ldr	x1, [sp, #48]
   2b100:	ldr	x0, [sp, #24]
   2b104:	add	x0, x1, x0
   2b108:	ldr	x3, [sp, #40]
   2b10c:	mov	x2, x0
   2b110:	mov	x1, x6
   2b114:	mov	w0, w5
   2b118:	blr	x4
   2b11c:	strb	w0, [sp, #79]
   2b120:	ldr	x0, [sp, #80]
   2b124:	add	x0, x0, #0xa8
   2b128:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2b12c:	ldrb	w0, [sp, #79]
   2b130:	cmp	w0, #0x0
   2b134:	b.eq	2b140 <omp_target_memcpy@@OMP_4.5+0x244>  // b.none
   2b138:	mov	w0, #0x0                   	// #0
   2b13c:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2b140:	mov	w0, #0x16                  	// #22
   2b144:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2b148:	ldr	x1, [sp, #80]
   2b14c:	ldr	x0, [sp, #88]
   2b150:	cmp	x1, x0
   2b154:	b.ne	2b1cc <omp_target_memcpy@@OMP_4.5+0x2d0>  // b.any
   2b158:	ldr	x0, [sp, #80]
   2b15c:	add	x0, x0, #0xa8
   2b160:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2b164:	ldr	x0, [sp, #80]
   2b168:	ldr	x4, [x0, #128]
   2b16c:	ldr	x0, [sp, #80]
   2b170:	ldr	w5, [x0, #12]
   2b174:	ldr	x1, [sp, #56]
   2b178:	ldr	x0, [sp, #32]
   2b17c:	add	x6, x1, x0
   2b180:	ldr	x1, [sp, #48]
   2b184:	ldr	x0, [sp, #24]
   2b188:	add	x0, x1, x0
   2b18c:	ldr	x3, [sp, #40]
   2b190:	mov	x2, x0
   2b194:	mov	x1, x6
   2b198:	mov	w0, w5
   2b19c:	blr	x4
   2b1a0:	strb	w0, [sp, #79]
   2b1a4:	ldr	x0, [sp, #80]
   2b1a8:	add	x0, x0, #0xa8
   2b1ac:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2b1b0:	ldrb	w0, [sp, #79]
   2b1b4:	cmp	w0, #0x0
   2b1b8:	b.eq	2b1c4 <omp_target_memcpy@@OMP_4.5+0x2c8>  // b.none
   2b1bc:	mov	w0, #0x0                   	// #0
   2b1c0:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2b1c4:	mov	w0, #0x16                  	// #22
   2b1c8:	b	2b1d0 <omp_target_memcpy@@OMP_4.5+0x2d4>
   2b1cc:	mov	w0, #0x16                  	// #22
   2b1d0:	ldp	x29, x30, [sp], #96
   2b1d4:	ret
   2b1d8:	sub	sp, sp, #0x140
   2b1dc:	stp	x29, x30, [sp, #32]
   2b1e0:	add	x29, sp, #0x20
   2b1e4:	stp	x19, x20, [sp, #48]
   2b1e8:	stp	x21, x22, [sp, #64]
   2b1ec:	stp	x23, x24, [sp, #80]
   2b1f0:	stp	x25, x26, [sp, #96]
   2b1f4:	str	x27, [sp, #112]
   2b1f8:	str	x0, [sp, #248]
   2b1fc:	str	x1, [sp, #240]
   2b200:	str	x2, [sp, #232]
   2b204:	str	w3, [sp, #228]
   2b208:	str	x4, [sp, #216]
   2b20c:	str	x5, [sp, #208]
   2b210:	str	x6, [sp, #200]
   2b214:	str	x7, [sp, #192]
   2b218:	ldr	x0, [sp, #232]
   2b21c:	str	x0, [sp, #296]
   2b220:	ldr	x0, [sp, #232]
   2b224:	str	x0, [sp, #288]
   2b228:	ldr	w0, [sp, #228]
   2b22c:	cmp	w0, #0x1
   2b230:	b.ne	2b4b8 <omp_target_memcpy@@OMP_4.5+0x5bc>  // b.any
   2b234:	ldr	x0, [sp, #216]
   2b238:	ldr	x1, [x0]
   2b23c:	mov	x2, #0x0                   	// #0
   2b240:	ldr	x0, [sp, #232]
   2b244:	mul	x3, x1, x0
   2b248:	umulh	x0, x1, x0
   2b24c:	str	x3, [sp, #128]
   2b250:	str	x0, [sp, #136]
   2b254:	ldr	x0, [sp, #136]
   2b258:	str	x0, [sp, #160]
   2b25c:	str	xzr, [sp, #168]
   2b260:	ldr	x0, [sp, #160]
   2b264:	cmp	x0, #0x0
   2b268:	b.eq	2b270 <omp_target_memcpy@@OMP_4.5+0x374>  // b.none
   2b26c:	mov	x2, #0x1                   	// #1
   2b270:	ldr	x0, [sp, #128]
   2b274:	str	x0, [sp, #264]
   2b278:	mov	x0, x2
   2b27c:	and	w0, w0, #0x1
   2b280:	and	w0, w0, #0xff
   2b284:	cmp	w0, #0x0
   2b288:	b.ne	2b334 <omp_target_memcpy@@OMP_4.5+0x438>  // b.any
   2b28c:	ldr	x0, [sp, #208]
   2b290:	ldr	x1, [x0]
   2b294:	mov	x2, #0x0                   	// #0
   2b298:	ldr	x0, [sp, #232]
   2b29c:	mul	x3, x1, x0
   2b2a0:	umulh	x0, x1, x0
   2b2a4:	str	x3, [sp, #144]
   2b2a8:	str	x0, [sp, #152]
   2b2ac:	ldr	x0, [sp, #152]
   2b2b0:	str	x0, [sp, #176]
   2b2b4:	str	xzr, [sp, #184]
   2b2b8:	ldr	x0, [sp, #176]
   2b2bc:	cmp	x0, #0x0
   2b2c0:	b.eq	2b2c8 <omp_target_memcpy@@OMP_4.5+0x3cc>  // b.none
   2b2c4:	mov	x2, #0x1                   	// #1
   2b2c8:	ldr	x0, [sp, #144]
   2b2cc:	str	x0, [sp, #280]
   2b2d0:	mov	x0, x2
   2b2d4:	and	w0, w0, #0x1
   2b2d8:	and	w0, w0, #0xff
   2b2dc:	cmp	w0, #0x0
   2b2e0:	b.ne	2b334 <omp_target_memcpy@@OMP_4.5+0x438>  // b.any
   2b2e4:	ldr	x0, [sp, #200]
   2b2e8:	ldr	x1, [x0]
   2b2ec:	mov	x2, #0x0                   	// #0
   2b2f0:	ldr	x0, [sp, #232]
   2b2f4:	mul	x3, x1, x0
   2b2f8:	umulh	x0, x1, x0
   2b2fc:	mov	x24, x3
   2b300:	mov	x25, x0
   2b304:	mov	x26, x25
   2b308:	mov	x27, #0x0                   	// #0
   2b30c:	cmp	x26, #0x0
   2b310:	b.eq	2b318 <omp_target_memcpy@@OMP_4.5+0x41c>  // b.none
   2b314:	mov	x2, #0x1                   	// #1
   2b318:	mov	x0, x24
   2b31c:	str	x0, [sp, #272]
   2b320:	mov	x0, x2
   2b324:	and	w0, w0, #0x1
   2b328:	and	w0, w0, #0xff
   2b32c:	cmp	w0, #0x0
   2b330:	b.eq	2b33c <omp_target_memcpy@@OMP_4.5+0x440>  // b.none
   2b334:	mov	w0, #0x16                  	// #22
   2b338:	b	2b72c <omp_target_memcpy@@OMP_4.5+0x830>
   2b33c:	ldr	x0, [sp, #328]
   2b340:	cmp	x0, #0x0
   2b344:	b.ne	2b38c <omp_target_memcpy@@OMP_4.5+0x490>  // b.any
   2b348:	ldr	x0, [sp, #336]
   2b34c:	cmp	x0, #0x0
   2b350:	b.ne	2b38c <omp_target_memcpy@@OMP_4.5+0x490>  // b.any
   2b354:	ldr	x0, [sp, #280]
   2b358:	ldr	x1, [sp, #248]
   2b35c:	add	x3, x1, x0
   2b360:	ldr	x0, [sp, #272]
   2b364:	ldr	x1, [sp, #240]
   2b368:	add	x0, x1, x0
   2b36c:	ldr	x1, [sp, #264]
   2b370:	mov	x2, x1
   2b374:	mov	x1, x0
   2b378:	mov	x0, x3
   2b37c:	bl	86a0 <memcpy@plt>
   2b380:	mov	w0, #0x1                   	// #1
   2b384:	str	w0, [sp, #304]
   2b388:	b	2b49c <omp_target_memcpy@@OMP_4.5+0x5a0>
   2b38c:	ldr	x0, [sp, #336]
   2b390:	cmp	x0, #0x0
   2b394:	b.ne	2b3e4 <omp_target_memcpy@@OMP_4.5+0x4e8>  // b.any
   2b398:	ldr	x0, [sp, #328]
   2b39c:	ldr	x4, [x0, #120]
   2b3a0:	ldr	x0, [sp, #328]
   2b3a4:	ldr	w5, [x0, #12]
   2b3a8:	ldr	x0, [sp, #280]
   2b3ac:	ldr	x1, [sp, #248]
   2b3b0:	add	x6, x1, x0
   2b3b4:	ldr	x0, [sp, #272]
   2b3b8:	ldr	x1, [sp, #240]
   2b3bc:	add	x0, x1, x0
   2b3c0:	ldr	x1, [sp, #264]
   2b3c4:	mov	x3, x1
   2b3c8:	mov	x2, x0
   2b3cc:	mov	x1, x6
   2b3d0:	mov	w0, w5
   2b3d4:	blr	x4
   2b3d8:	and	w0, w0, #0xff
   2b3dc:	str	w0, [sp, #304]
   2b3e0:	b	2b49c <omp_target_memcpy@@OMP_4.5+0x5a0>
   2b3e4:	ldr	x0, [sp, #328]
   2b3e8:	cmp	x0, #0x0
   2b3ec:	b.ne	2b43c <omp_target_memcpy@@OMP_4.5+0x540>  // b.any
   2b3f0:	ldr	x0, [sp, #336]
   2b3f4:	ldr	x4, [x0, #112]
   2b3f8:	ldr	x0, [sp, #336]
   2b3fc:	ldr	w5, [x0, #12]
   2b400:	ldr	x0, [sp, #280]
   2b404:	ldr	x1, [sp, #248]
   2b408:	add	x6, x1, x0
   2b40c:	ldr	x0, [sp, #272]
   2b410:	ldr	x1, [sp, #240]
   2b414:	add	x0, x1, x0
   2b418:	ldr	x1, [sp, #264]
   2b41c:	mov	x3, x1
   2b420:	mov	x2, x0
   2b424:	mov	x1, x6
   2b428:	mov	w0, w5
   2b42c:	blr	x4
   2b430:	and	w0, w0, #0xff
   2b434:	str	w0, [sp, #304]
   2b438:	b	2b49c <omp_target_memcpy@@OMP_4.5+0x5a0>
   2b43c:	ldr	x1, [sp, #336]
   2b440:	ldr	x0, [sp, #328]
   2b444:	cmp	x1, x0
   2b448:	b.ne	2b498 <omp_target_memcpy@@OMP_4.5+0x59c>  // b.any
   2b44c:	ldr	x0, [sp, #336]
   2b450:	ldr	x4, [x0, #128]
   2b454:	ldr	x0, [sp, #336]
   2b458:	ldr	w5, [x0, #12]
   2b45c:	ldr	x0, [sp, #280]
   2b460:	ldr	x1, [sp, #248]
   2b464:	add	x6, x1, x0
   2b468:	ldr	x0, [sp, #272]
   2b46c:	ldr	x1, [sp, #240]
   2b470:	add	x0, x1, x0
   2b474:	ldr	x1, [sp, #264]
   2b478:	mov	x3, x1
   2b47c:	mov	x2, x0
   2b480:	mov	x1, x6
   2b484:	mov	w0, w5
   2b488:	blr	x4
   2b48c:	and	w0, w0, #0xff
   2b490:	str	w0, [sp, #304]
   2b494:	b	2b49c <omp_target_memcpy@@OMP_4.5+0x5a0>
   2b498:	str	wzr, [sp, #304]
   2b49c:	ldr	w0, [sp, #304]
   2b4a0:	cmp	w0, #0x0
   2b4a4:	b.eq	2b4b0 <omp_target_memcpy@@OMP_4.5+0x5b4>  // b.none
   2b4a8:	mov	w0, #0x0                   	// #0
   2b4ac:	b	2b72c <omp_target_memcpy@@OMP_4.5+0x830>
   2b4b0:	mov	w0, #0x16                  	// #22
   2b4b4:	b	2b72c <omp_target_memcpy@@OMP_4.5+0x830>
   2b4b8:	mov	w0, #0x1                   	// #1
   2b4bc:	str	w0, [sp, #308]
   2b4c0:	b	2b590 <omp_target_memcpy@@OMP_4.5+0x694>
   2b4c4:	ldr	x1, [sp, #296]
   2b4c8:	ldrsw	x0, [sp, #308]
   2b4cc:	lsl	x0, x0, #3
   2b4d0:	ldr	x2, [sp, #192]
   2b4d4:	add	x0, x2, x0
   2b4d8:	ldr	x0, [x0]
   2b4dc:	mov	x2, #0x0                   	// #0
   2b4e0:	mul	x3, x1, x0
   2b4e4:	umulh	x0, x1, x0
   2b4e8:	mov	x16, x3
   2b4ec:	mov	x17, x0
   2b4f0:	mov	x18, x17
   2b4f4:	mov	x19, #0x0                   	// #0
   2b4f8:	cmp	x18, #0x0
   2b4fc:	b.eq	2b504 <omp_target_memcpy@@OMP_4.5+0x608>  // b.none
   2b500:	mov	x2, #0x1                   	// #1
   2b504:	mov	x0, x16
   2b508:	str	x0, [sp, #296]
   2b50c:	mov	x0, x2
   2b510:	and	w0, w0, #0x1
   2b514:	and	w0, w0, #0xff
   2b518:	cmp	w0, #0x0
   2b51c:	b.ne	2b57c <omp_target_memcpy@@OMP_4.5+0x680>  // b.any
   2b520:	ldr	x1, [sp, #288]
   2b524:	ldrsw	x0, [sp, #308]
   2b528:	lsl	x0, x0, #3
   2b52c:	ldr	x2, [sp, #320]
   2b530:	add	x0, x2, x0
   2b534:	ldr	x0, [x0]
   2b538:	mov	x2, #0x0                   	// #0
   2b53c:	mul	x3, x1, x0
   2b540:	umulh	x0, x1, x0
   2b544:	mov	x20, x3
   2b548:	mov	x21, x0
   2b54c:	mov	x22, x21
   2b550:	mov	x23, #0x0                   	// #0
   2b554:	cmp	x22, #0x0
   2b558:	b.eq	2b560 <omp_target_memcpy@@OMP_4.5+0x664>  // b.none
   2b55c:	mov	x2, #0x1                   	// #1
   2b560:	mov	x0, x20
   2b564:	str	x0, [sp, #288]
   2b568:	mov	x0, x2
   2b56c:	and	w0, w0, #0x1
   2b570:	and	w0, w0, #0xff
   2b574:	cmp	w0, #0x0
   2b578:	b.eq	2b584 <omp_target_memcpy@@OMP_4.5+0x688>  // b.none
   2b57c:	mov	w0, #0x16                  	// #22
   2b580:	b	2b72c <omp_target_memcpy@@OMP_4.5+0x830>
   2b584:	ldr	w0, [sp, #308]
   2b588:	add	w0, w0, #0x1
   2b58c:	str	w0, [sp, #308]
   2b590:	ldr	w1, [sp, #308]
   2b594:	ldr	w0, [sp, #228]
   2b598:	cmp	w1, w0
   2b59c:	b.lt	2b4c4 <omp_target_memcpy@@OMP_4.5+0x5c8>  // b.tstop
   2b5a0:	ldr	x1, [sp, #296]
   2b5a4:	ldr	x0, [sp, #208]
   2b5a8:	ldr	x0, [x0]
   2b5ac:	mov	x2, #0x0                   	// #0
   2b5b0:	mul	x3, x1, x0
   2b5b4:	umulh	x0, x1, x0
   2b5b8:	mov	x12, x3
   2b5bc:	mov	x13, x0
   2b5c0:	mov	x14, x13
   2b5c4:	mov	x15, #0x0                   	// #0
   2b5c8:	cmp	x14, #0x0
   2b5cc:	b.eq	2b5d4 <omp_target_memcpy@@OMP_4.5+0x6d8>  // b.none
   2b5d0:	mov	x2, #0x1                   	// #1
   2b5d4:	mov	x0, x12
   2b5d8:	str	x0, [sp, #280]
   2b5dc:	mov	x0, x2
   2b5e0:	and	w0, w0, #0x1
   2b5e4:	and	w0, w0, #0xff
   2b5e8:	cmp	w0, #0x0
   2b5ec:	b.ne	2b640 <omp_target_memcpy@@OMP_4.5+0x744>  // b.any
   2b5f0:	ldr	x1, [sp, #288]
   2b5f4:	ldr	x0, [sp, #200]
   2b5f8:	ldr	x0, [x0]
   2b5fc:	mov	x2, #0x0                   	// #0
   2b600:	mul	x3, x1, x0
   2b604:	umulh	x0, x1, x0
   2b608:	mov	x8, x3
   2b60c:	mov	x9, x0
   2b610:	mov	x10, x9
   2b614:	mov	x11, #0x0                   	// #0
   2b618:	cmp	x10, #0x0
   2b61c:	b.eq	2b624 <omp_target_memcpy@@OMP_4.5+0x728>  // b.none
   2b620:	mov	x2, #0x1                   	// #1
   2b624:	mov	x0, x8
   2b628:	str	x0, [sp, #272]
   2b62c:	mov	x0, x2
   2b630:	and	w0, w0, #0x1
   2b634:	and	w0, w0, #0xff
   2b638:	cmp	w0, #0x0
   2b63c:	b.eq	2b648 <omp_target_memcpy@@OMP_4.5+0x74c>  // b.none
   2b640:	mov	w0, #0x16                  	// #22
   2b644:	b	2b72c <omp_target_memcpy@@OMP_4.5+0x830>
   2b648:	str	xzr, [sp, #312]
   2b64c:	b	2b714 <omp_target_memcpy@@OMP_4.5+0x818>
   2b650:	ldr	x0, [sp, #280]
   2b654:	ldr	x1, [sp, #248]
   2b658:	add	x8, x1, x0
   2b65c:	ldr	x0, [sp, #272]
   2b660:	ldr	x1, [sp, #240]
   2b664:	add	x9, x1, x0
   2b668:	ldr	w0, [sp, #228]
   2b66c:	sub	w2, w0, #0x1
   2b670:	ldr	x0, [sp, #216]
   2b674:	add	x3, x0, #0x8
   2b678:	ldr	x0, [sp, #208]
   2b67c:	add	x4, x0, #0x8
   2b680:	ldr	x0, [sp, #200]
   2b684:	add	x5, x0, #0x8
   2b688:	ldr	x0, [sp, #192]
   2b68c:	add	x6, x0, #0x8
   2b690:	ldr	x0, [sp, #320]
   2b694:	add	x0, x0, #0x8
   2b698:	ldr	x1, [sp, #336]
   2b69c:	str	x1, [sp, #16]
   2b6a0:	ldr	x1, [sp, #328]
   2b6a4:	str	x1, [sp, #8]
   2b6a8:	str	x0, [sp]
   2b6ac:	mov	x7, x6
   2b6b0:	mov	x6, x5
   2b6b4:	mov	x5, x4
   2b6b8:	mov	x4, x3
   2b6bc:	mov	w3, w2
   2b6c0:	ldr	x2, [sp, #232]
   2b6c4:	mov	x1, x9
   2b6c8:	mov	x0, x8
   2b6cc:	bl	2b1d8 <omp_target_memcpy@@OMP_4.5+0x2dc>
   2b6d0:	str	w0, [sp, #304]
   2b6d4:	ldr	w0, [sp, #304]
   2b6d8:	cmp	w0, #0x0
   2b6dc:	b.eq	2b6e8 <omp_target_memcpy@@OMP_4.5+0x7ec>  // b.none
   2b6e0:	ldr	w0, [sp, #304]
   2b6e4:	b	2b72c <omp_target_memcpy@@OMP_4.5+0x830>
   2b6e8:	ldr	x1, [sp, #280]
   2b6ec:	ldr	x0, [sp, #296]
   2b6f0:	add	x0, x1, x0
   2b6f4:	str	x0, [sp, #280]
   2b6f8:	ldr	x1, [sp, #272]
   2b6fc:	ldr	x0, [sp, #288]
   2b700:	add	x0, x1, x0
   2b704:	str	x0, [sp, #272]
   2b708:	ldr	x0, [sp, #312]
   2b70c:	add	x0, x0, #0x1
   2b710:	str	x0, [sp, #312]
   2b714:	ldr	x0, [sp, #216]
   2b718:	ldr	x0, [x0]
   2b71c:	ldr	x1, [sp, #312]
   2b720:	cmp	x1, x0
   2b724:	b.cc	2b650 <omp_target_memcpy@@OMP_4.5+0x754>  // b.lo, b.ul, b.last
   2b728:	mov	w0, #0x0                   	// #0
   2b72c:	ldp	x19, x20, [sp, #48]
   2b730:	ldp	x21, x22, [sp, #64]
   2b734:	ldp	x23, x24, [sp, #80]
   2b738:	ldp	x25, x26, [sp, #96]
   2b73c:	ldr	x27, [sp, #112]
   2b740:	ldp	x29, x30, [sp, #32]
   2b744:	add	sp, sp, #0x140
   2b748:	ret

000000000002b74c <omp_target_memcpy_rect@@OMP_4.5>:
   2b74c:	sub	sp, sp, #0x90
   2b750:	stp	x29, x30, [sp, #32]
   2b754:	add	x29, sp, #0x20
   2b758:	str	x0, [sp, #104]
   2b75c:	str	x1, [sp, #96]
   2b760:	str	x2, [sp, #88]
   2b764:	str	w3, [sp, #84]
   2b768:	str	x4, [sp, #72]
   2b76c:	str	x5, [sp, #64]
   2b770:	str	x6, [sp, #56]
   2b774:	str	x7, [sp, #48]
   2b778:	str	xzr, [sp, #136]
   2b77c:	str	xzr, [sp, #128]
   2b780:	ldr	x0, [sp, #104]
   2b784:	cmp	x0, #0x0
   2b788:	b.ne	2b7a0 <omp_target_memcpy_rect@@OMP_4.5+0x54>  // b.any
   2b78c:	ldr	x0, [sp, #96]
   2b790:	cmp	x0, #0x0
   2b794:	b.ne	2b7a0 <omp_target_memcpy_rect@@OMP_4.5+0x54>  // b.any
   2b798:	mov	w0, #0x7fffffff            	// #2147483647
   2b79c:	b	2b954 <omp_target_memcpy_rect@@OMP_4.5+0x208>
   2b7a0:	ldr	w0, [sp, #152]
   2b7a4:	cmn	w0, #0x2
   2b7a8:	b.eq	2b80c <omp_target_memcpy_rect@@OMP_4.5+0xc0>  // b.none
   2b7ac:	ldr	w0, [sp, #152]
   2b7b0:	cmp	w0, #0x0
   2b7b4:	b.ge	2b7c0 <omp_target_memcpy_rect@@OMP_4.5+0x74>  // b.tcont
   2b7b8:	mov	w0, #0x16                  	// #22
   2b7bc:	b	2b954 <omp_target_memcpy_rect@@OMP_4.5+0x208>
   2b7c0:	ldr	w0, [sp, #152]
   2b7c4:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2b7c8:	str	x0, [sp, #136]
   2b7cc:	ldr	x0, [sp, #136]
   2b7d0:	cmp	x0, #0x0
   2b7d4:	b.ne	2b7e0 <omp_target_memcpy_rect@@OMP_4.5+0x94>  // b.any
   2b7d8:	mov	w0, #0x16                  	// #22
   2b7dc:	b	2b954 <omp_target_memcpy_rect@@OMP_4.5+0x208>
   2b7e0:	ldr	x0, [sp, #136]
   2b7e4:	ldr	w0, [x0, #8]
   2b7e8:	and	w0, w0, #0x4
   2b7ec:	cmp	w0, #0x0
   2b7f0:	b.eq	2b808 <omp_target_memcpy_rect@@OMP_4.5+0xbc>  // b.none
   2b7f4:	ldr	x0, [sp, #136]
   2b7f8:	ldr	w0, [x0, #8]
   2b7fc:	and	w0, w0, #0x1
   2b800:	cmp	w0, #0x0
   2b804:	b.eq	2b80c <omp_target_memcpy_rect@@OMP_4.5+0xc0>  // b.none
   2b808:	str	xzr, [sp, #136]
   2b80c:	ldr	w0, [sp, #160]
   2b810:	cmn	w0, #0x2
   2b814:	b.eq	2b878 <omp_target_memcpy_rect@@OMP_4.5+0x12c>  // b.none
   2b818:	ldr	w0, [sp, #160]
   2b81c:	cmp	w0, #0x0
   2b820:	b.ge	2b82c <omp_target_memcpy_rect@@OMP_4.5+0xe0>  // b.tcont
   2b824:	mov	w0, #0x16                  	// #22
   2b828:	b	2b954 <omp_target_memcpy_rect@@OMP_4.5+0x208>
   2b82c:	ldr	w0, [sp, #160]
   2b830:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2b834:	str	x0, [sp, #128]
   2b838:	ldr	x0, [sp, #128]
   2b83c:	cmp	x0, #0x0
   2b840:	b.ne	2b84c <omp_target_memcpy_rect@@OMP_4.5+0x100>  // b.any
   2b844:	mov	w0, #0x16                  	// #22
   2b848:	b	2b954 <omp_target_memcpy_rect@@OMP_4.5+0x208>
   2b84c:	ldr	x0, [sp, #128]
   2b850:	ldr	w0, [x0, #8]
   2b854:	and	w0, w0, #0x4
   2b858:	cmp	w0, #0x0
   2b85c:	b.eq	2b874 <omp_target_memcpy_rect@@OMP_4.5+0x128>  // b.none
   2b860:	ldr	x0, [sp, #128]
   2b864:	ldr	w0, [x0, #8]
   2b868:	and	w0, w0, #0x1
   2b86c:	cmp	w0, #0x0
   2b870:	b.eq	2b878 <omp_target_memcpy_rect@@OMP_4.5+0x12c>  // b.none
   2b874:	str	xzr, [sp, #128]
   2b878:	ldr	x0, [sp, #128]
   2b87c:	cmp	x0, #0x0
   2b880:	b.eq	2b8a8 <omp_target_memcpy_rect@@OMP_4.5+0x15c>  // b.none
   2b884:	ldr	x0, [sp, #136]
   2b888:	cmp	x0, #0x0
   2b88c:	b.eq	2b8a8 <omp_target_memcpy_rect@@OMP_4.5+0x15c>  // b.none
   2b890:	ldr	x1, [sp, #128]
   2b894:	ldr	x0, [sp, #136]
   2b898:	cmp	x1, x0
   2b89c:	b.eq	2b8a8 <omp_target_memcpy_rect@@OMP_4.5+0x15c>  // b.none
   2b8a0:	mov	w0, #0x16                  	// #22
   2b8a4:	b	2b954 <omp_target_memcpy_rect@@OMP_4.5+0x208>
   2b8a8:	ldr	x0, [sp, #128]
   2b8ac:	cmp	x0, #0x0
   2b8b0:	b.eq	2b8c4 <omp_target_memcpy_rect@@OMP_4.5+0x178>  // b.none
   2b8b4:	ldr	x0, [sp, #128]
   2b8b8:	add	x0, x0, #0xa8
   2b8bc:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2b8c0:	b	2b8dc <omp_target_memcpy_rect@@OMP_4.5+0x190>
   2b8c4:	ldr	x0, [sp, #136]
   2b8c8:	cmp	x0, #0x0
   2b8cc:	b.eq	2b8dc <omp_target_memcpy_rect@@OMP_4.5+0x190>  // b.none
   2b8d0:	ldr	x0, [sp, #136]
   2b8d4:	add	x0, x0, #0xa8
   2b8d8:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2b8dc:	ldr	x0, [sp, #128]
   2b8e0:	str	x0, [sp, #16]
   2b8e4:	ldr	x0, [sp, #136]
   2b8e8:	str	x0, [sp, #8]
   2b8ec:	ldr	x0, [sp, #144]
   2b8f0:	str	x0, [sp]
   2b8f4:	ldr	x7, [sp, #48]
   2b8f8:	ldr	x6, [sp, #56]
   2b8fc:	ldr	x5, [sp, #64]
   2b900:	ldr	x4, [sp, #72]
   2b904:	ldr	w3, [sp, #84]
   2b908:	ldr	x2, [sp, #88]
   2b90c:	ldr	x1, [sp, #96]
   2b910:	ldr	x0, [sp, #104]
   2b914:	bl	2b1d8 <omp_target_memcpy@@OMP_4.5+0x2dc>
   2b918:	str	w0, [sp, #124]
   2b91c:	ldr	x0, [sp, #128]
   2b920:	cmp	x0, #0x0
   2b924:	b.eq	2b938 <omp_target_memcpy_rect@@OMP_4.5+0x1ec>  // b.none
   2b928:	ldr	x0, [sp, #128]
   2b92c:	add	x0, x0, #0xa8
   2b930:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2b934:	b	2b950 <omp_target_memcpy_rect@@OMP_4.5+0x204>
   2b938:	ldr	x0, [sp, #136]
   2b93c:	cmp	x0, #0x0
   2b940:	b.eq	2b950 <omp_target_memcpy_rect@@OMP_4.5+0x204>  // b.none
   2b944:	ldr	x0, [sp, #136]
   2b948:	add	x0, x0, #0xa8
   2b94c:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2b950:	ldr	w0, [sp, #124]
   2b954:	ldp	x29, x30, [sp, #32]
   2b958:	add	sp, sp, #0x90
   2b95c:	ret

000000000002b960 <omp_target_associate_ptr@@OMP_4.5>:
   2b960:	stp	x29, x30, [sp, #-176]!
   2b964:	mov	x29, sp
   2b968:	str	x0, [sp, #56]
   2b96c:	str	x1, [sp, #48]
   2b970:	str	x2, [sp, #40]
   2b974:	str	x3, [sp, #32]
   2b978:	str	w4, [sp, #28]
   2b97c:	ldr	w0, [sp, #28]
   2b980:	cmn	w0, #0x2
   2b984:	b.ne	2b990 <omp_target_associate_ptr@@OMP_4.5+0x30>  // b.any
   2b988:	mov	w0, #0x16                  	// #22
   2b98c:	b	2bb94 <omp_target_associate_ptr@@OMP_4.5+0x234>
   2b990:	ldr	w0, [sp, #28]
   2b994:	cmp	w0, #0x0
   2b998:	b.ge	2b9a4 <omp_target_associate_ptr@@OMP_4.5+0x44>  // b.tcont
   2b99c:	mov	w0, #0x16                  	// #22
   2b9a0:	b	2bb94 <omp_target_associate_ptr@@OMP_4.5+0x234>
   2b9a4:	ldr	w0, [sp, #28]
   2b9a8:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2b9ac:	str	x0, [sp, #160]
   2b9b0:	ldr	x0, [sp, #160]
   2b9b4:	cmp	x0, #0x0
   2b9b8:	b.ne	2b9c4 <omp_target_associate_ptr@@OMP_4.5+0x64>  // b.any
   2b9bc:	mov	w0, #0x16                  	// #22
   2b9c0:	b	2bb94 <omp_target_associate_ptr@@OMP_4.5+0x234>
   2b9c4:	ldr	x0, [sp, #160]
   2b9c8:	ldr	w0, [x0, #8]
   2b9cc:	and	w0, w0, #0x4
   2b9d0:	cmp	w0, #0x0
   2b9d4:	b.eq	2b9ec <omp_target_associate_ptr@@OMP_4.5+0x8c>  // b.none
   2b9d8:	ldr	x0, [sp, #160]
   2b9dc:	ldr	w0, [x0, #8]
   2b9e0:	and	w0, w0, #0x1
   2b9e4:	cmp	w0, #0x0
   2b9e8:	b.eq	2b9f4 <omp_target_associate_ptr@@OMP_4.5+0x94>  // b.none
   2b9ec:	mov	w0, #0x16                  	// #22
   2b9f0:	b	2bb94 <omp_target_associate_ptr@@OMP_4.5+0x234>
   2b9f4:	ldr	x0, [sp, #160]
   2b9f8:	add	x0, x0, #0xa8
   2b9fc:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2ba00:	ldr	x0, [sp, #160]
   2ba04:	add	x0, x0, #0xa0
   2ba08:	str	x0, [sp, #152]
   2ba0c:	mov	w0, #0x16                  	// #22
   2ba10:	str	w0, [sp, #172]
   2ba14:	ldr	x0, [sp, #56]
   2ba18:	str	x0, [sp, #64]
   2ba1c:	ldr	x1, [sp, #64]
   2ba20:	ldr	x0, [sp, #40]
   2ba24:	add	x0, x1, x0
   2ba28:	str	x0, [sp, #72]
   2ba2c:	add	x0, sp, #0x40
   2ba30:	mov	x1, x0
   2ba34:	ldr	x0, [sp, #152]
   2ba38:	bl	25294 <omp_get_place_proc_ids@@OMP_4.5+0x8b8>
   2ba3c:	str	x0, [sp, #144]
   2ba40:	ldr	x0, [sp, #144]
   2ba44:	cmp	x0, #0x0
   2ba48:	b.eq	2baa8 <omp_target_associate_ptr@@OMP_4.5+0x148>  // b.none
   2ba4c:	ldr	x0, [sp, #144]
   2ba50:	ldr	x0, [x0, #16]
   2ba54:	ldr	x1, [x0, #16]
   2ba58:	ldr	x0, [sp, #144]
   2ba5c:	ldr	x0, [x0, #24]
   2ba60:	add	x1, x1, x0
   2ba64:	ldr	x2, [sp, #48]
   2ba68:	ldr	x0, [sp, #32]
   2ba6c:	add	x0, x2, x0
   2ba70:	cmp	x1, x0
   2ba74:	b.ne	2bb84 <omp_target_associate_ptr@@OMP_4.5+0x224>  // b.any
   2ba78:	ldr	x0, [sp, #144]
   2ba7c:	ldr	x1, [x0]
   2ba80:	ldr	x0, [sp, #64]
   2ba84:	cmp	x1, x0
   2ba88:	b.hi	2bb84 <omp_target_associate_ptr@@OMP_4.5+0x224>  // b.pmore
   2ba8c:	ldr	x0, [sp, #144]
   2ba90:	ldr	x1, [x0, #8]
   2ba94:	ldr	x0, [sp, #72]
   2ba98:	cmp	x1, x0
   2ba9c:	b.cc	2bb84 <omp_target_associate_ptr@@OMP_4.5+0x224>  // b.lo, b.ul, b.last
   2baa0:	str	wzr, [sp, #172]
   2baa4:	b	2bb84 <omp_target_associate_ptr@@OMP_4.5+0x224>
   2baa8:	mov	x0, #0x40                  	// #64
   2baac:	bl	8dd0 <fprintf@plt+0x1a0>
   2bab0:	str	x0, [sp, #136]
   2bab4:	mov	x0, #0x48                  	// #72
   2bab8:	bl	8dd0 <fprintf@plt+0x1a0>
   2babc:	mov	x1, x0
   2bac0:	ldr	x0, [sp, #136]
   2bac4:	str	x1, [x0, #8]
   2bac8:	ldr	x0, [sp, #136]
   2bacc:	mov	x1, #0x1                   	// #1
   2bad0:	str	x1, [x0]
   2bad4:	ldr	x0, [sp, #136]
   2bad8:	str	xzr, [x0, #16]
   2badc:	ldr	x0, [sp, #136]
   2bae0:	str	xzr, [x0, #24]
   2bae4:	ldr	x0, [sp, #136]
   2bae8:	str	xzr, [x0, #32]
   2baec:	ldr	x0, [sp, #136]
   2baf0:	str	xzr, [x0, #40]
   2baf4:	ldr	x0, [sp, #136]
   2baf8:	str	xzr, [x0, #48]
   2bafc:	ldr	x0, [sp, #136]
   2bb00:	ldr	x1, [sp, #160]
   2bb04:	str	x1, [x0, #56]
   2bb08:	ldr	x0, [sp, #136]
   2bb0c:	ldr	x0, [x0, #8]
   2bb10:	str	x0, [sp, #128]
   2bb14:	ldr	x0, [sp, #128]
   2bb18:	str	x0, [sp, #120]
   2bb1c:	ldr	x1, [sp, #64]
   2bb20:	ldr	x0, [sp, #120]
   2bb24:	str	x1, [x0]
   2bb28:	ldr	x1, [sp, #72]
   2bb2c:	ldr	x0, [sp, #120]
   2bb30:	str	x1, [x0, #8]
   2bb34:	ldr	x0, [sp, #120]
   2bb38:	ldr	x1, [sp, #136]
   2bb3c:	str	x1, [x0, #16]
   2bb40:	ldr	x1, [sp, #48]
   2bb44:	ldr	x0, [sp, #32]
   2bb48:	add	x1, x1, x0
   2bb4c:	ldr	x0, [sp, #120]
   2bb50:	str	x1, [x0, #24]
   2bb54:	ldr	x0, [sp, #120]
   2bb58:	mov	x1, #0xffffffffffffffff    	// #-1
   2bb5c:	str	x1, [x0, #32]
   2bb60:	ldr	x0, [sp, #128]
   2bb64:	str	xzr, [x0, #56]
   2bb68:	ldr	x0, [sp, #128]
   2bb6c:	str	xzr, [x0, #64]
   2bb70:	ldr	x0, [sp, #160]
   2bb74:	add	x0, x0, #0xa0
   2bb78:	ldr	x1, [sp, #128]
   2bb7c:	bl	2d0f4 <omp_pause_resource_all@@OMP_5.0+0x1390>
   2bb80:	str	wzr, [sp, #172]
   2bb84:	ldr	x0, [sp, #160]
   2bb88:	add	x0, x0, #0xa8
   2bb8c:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2bb90:	ldr	w0, [sp, #172]
   2bb94:	ldp	x29, x30, [sp], #176
   2bb98:	ret

000000000002bb9c <omp_target_disassociate_ptr@@OMP_4.5>:
   2bb9c:	stp	x29, x30, [sp, #-128]!
   2bba0:	mov	x29, sp
   2bba4:	str	x0, [sp, #24]
   2bba8:	str	w1, [sp, #20]
   2bbac:	ldr	w0, [sp, #20]
   2bbb0:	cmn	w0, #0x2
   2bbb4:	b.ne	2bbc0 <omp_target_disassociate_ptr@@OMP_4.5+0x24>  // b.any
   2bbb8:	mov	w0, #0x16                  	// #22
   2bbbc:	b	2bd04 <omp_target_disassociate_ptr@@OMP_4.5+0x168>
   2bbc0:	ldr	w0, [sp, #20]
   2bbc4:	cmp	w0, #0x0
   2bbc8:	b.ge	2bbd4 <omp_target_disassociate_ptr@@OMP_4.5+0x38>  // b.tcont
   2bbcc:	mov	w0, #0x16                  	// #22
   2bbd0:	b	2bd04 <omp_target_disassociate_ptr@@OMP_4.5+0x168>
   2bbd4:	ldr	w0, [sp, #20]
   2bbd8:	bl	250c0 <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   2bbdc:	str	x0, [sp, #112]
   2bbe0:	ldr	x0, [sp, #112]
   2bbe4:	cmp	x0, #0x0
   2bbe8:	b.ne	2bbf4 <omp_target_disassociate_ptr@@OMP_4.5+0x58>  // b.any
   2bbec:	mov	w0, #0x16                  	// #22
   2bbf0:	b	2bd04 <omp_target_disassociate_ptr@@OMP_4.5+0x168>
   2bbf4:	ldr	x0, [sp, #112]
   2bbf8:	ldr	w0, [x0, #8]
   2bbfc:	and	w0, w0, #0x4
   2bc00:	cmp	w0, #0x0
   2bc04:	b.ne	2bc10 <omp_target_disassociate_ptr@@OMP_4.5+0x74>  // b.any
   2bc08:	mov	w0, #0x16                  	// #22
   2bc0c:	b	2bd04 <omp_target_disassociate_ptr@@OMP_4.5+0x168>
   2bc10:	ldr	x0, [sp, #112]
   2bc14:	add	x0, x0, #0xa8
   2bc18:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2bc1c:	ldr	x0, [sp, #112]
   2bc20:	add	x0, x0, #0xa0
   2bc24:	str	x0, [sp, #104]
   2bc28:	mov	w0, #0x16                  	// #22
   2bc2c:	str	w0, [sp, #124]
   2bc30:	ldr	x0, [sp, #24]
   2bc34:	str	x0, [sp, #40]
   2bc38:	ldr	x0, [sp, #40]
   2bc3c:	str	x0, [sp, #48]
   2bc40:	add	x0, sp, #0x28
   2bc44:	mov	x1, x0
   2bc48:	ldr	x0, [sp, #104]
   2bc4c:	bl	25294 <omp_get_place_proc_ids@@OMP_4.5+0x8b8>
   2bc50:	str	x0, [sp, #96]
   2bc54:	ldr	x0, [sp, #96]
   2bc58:	cmp	x0, #0x0
   2bc5c:	b.eq	2bcf4 <omp_target_disassociate_ptr@@OMP_4.5+0x158>  // b.none
   2bc60:	ldr	x0, [sp, #96]
   2bc64:	ldr	x1, [x0]
   2bc68:	ldr	x0, [sp, #40]
   2bc6c:	cmp	x1, x0
   2bc70:	b.ne	2bcf4 <omp_target_disassociate_ptr@@OMP_4.5+0x158>  // b.any
   2bc74:	ldr	x0, [sp, #96]
   2bc78:	ldr	x0, [x0, #32]
   2bc7c:	cmn	x0, #0x1
   2bc80:	b.ne	2bcf4 <omp_target_disassociate_ptr@@OMP_4.5+0x158>  // b.any
   2bc84:	ldr	x0, [sp, #96]
   2bc88:	ldr	x0, [x0, #16]
   2bc8c:	ldr	x0, [x0, #16]
   2bc90:	cmp	x0, #0x0
   2bc94:	b.ne	2bcf4 <omp_target_disassociate_ptr@@OMP_4.5+0x158>  // b.any
   2bc98:	ldr	x0, [sp, #96]
   2bc9c:	ldr	x0, [x0, #16]
   2bca0:	ldr	x0, [x0, #32]
   2bca4:	cmp	x0, #0x0
   2bca8:	b.ne	2bcf4 <omp_target_disassociate_ptr@@OMP_4.5+0x158>  // b.any
   2bcac:	ldr	x0, [sp, #96]
   2bcb0:	ldr	x0, [x0, #16]
   2bcb4:	ldr	x0, [x0]
   2bcb8:	cmp	x0, #0x1
   2bcbc:	b.ne	2bcf4 <omp_target_disassociate_ptr@@OMP_4.5+0x158>  // b.any
   2bcc0:	ldr	x0, [sp, #96]
   2bcc4:	ldr	x0, [x0, #16]
   2bcc8:	ldr	x0, [x0, #48]
   2bccc:	cmp	x0, #0x0
   2bcd0:	b.ne	2bcf4 <omp_target_disassociate_ptr@@OMP_4.5+0x158>  // b.any
   2bcd4:	ldr	x0, [sp, #112]
   2bcd8:	add	x0, x0, #0xa0
   2bcdc:	ldr	x1, [sp, #96]
   2bce0:	bl	2d224 <omp_pause_resource_all@@OMP_5.0+0x14c0>
   2bce4:	ldr	x0, [sp, #96]
   2bce8:	ldr	x0, [x0, #16]
   2bcec:	bl	27d04 <omp_get_place_proc_ids@@OMP_4.5+0x3328>
   2bcf0:	str	wzr, [sp, #124]
   2bcf4:	ldr	x0, [sp, #112]
   2bcf8:	add	x0, x0, #0xa8
   2bcfc:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2bd00:	ldr	w0, [sp, #124]
   2bd04:	ldp	x29, x30, [sp], #128
   2bd08:	ret

000000000002bd0c <omp_pause_resource@@OMP_5.0>:
   2bd0c:	stp	x29, x30, [sp, #-32]!
   2bd10:	mov	x29, sp
   2bd14:	str	w0, [sp, #28]
   2bd18:	str	w1, [sp, #24]
   2bd1c:	ldr	w0, [sp, #24]
   2bd20:	cmn	w0, #0x2
   2bd24:	b.ne	2bd30 <omp_pause_resource@@OMP_5.0+0x24>  // b.any
   2bd28:	bl	1f9fc <omp_in_final@@OMP_3.1+0x2630>
   2bd2c:	b	2bd5c <omp_pause_resource@@OMP_5.0+0x50>
   2bd30:	ldr	w0, [sp, #24]
   2bd34:	cmp	w0, #0x0
   2bd38:	b.lt	2bd50 <omp_pause_resource@@OMP_5.0+0x44>  // b.tstop
   2bd3c:	bl	250a0 <omp_get_place_proc_ids@@OMP_4.5+0x6c4>
   2bd40:	mov	w1, w0
   2bd44:	ldr	w0, [sp, #24]
   2bd48:	cmp	w0, w1
   2bd4c:	b.lt	2bd58 <omp_pause_resource@@OMP_5.0+0x4c>  // b.tstop
   2bd50:	mov	w0, #0xffffffff            	// #-1
   2bd54:	b	2bd5c <omp_pause_resource@@OMP_5.0+0x50>
   2bd58:	mov	w0, #0x0                   	// #0
   2bd5c:	ldp	x29, x30, [sp], #32
   2bd60:	ret

000000000002bd64 <omp_pause_resource_all@@OMP_5.0>:
   2bd64:	stp	x29, x30, [sp, #-32]!
   2bd68:	mov	x29, sp
   2bd6c:	str	w0, [sp, #28]
   2bd70:	bl	1f9fc <omp_in_final@@OMP_3.1+0x2630>
   2bd74:	cmp	w0, #0x0
   2bd78:	b.eq	2bd84 <omp_pause_resource_all@@OMP_5.0+0x20>  // b.none
   2bd7c:	mov	w0, #0xffffffff            	// #-1
   2bd80:	b	2bd88 <omp_pause_resource_all@@OMP_5.0+0x24>
   2bd84:	mov	w0, #0x0                   	// #0
   2bd88:	ldp	x29, x30, [sp], #32
   2bd8c:	ret
   2bd90:	stp	x29, x30, [sp, #-64]!
   2bd94:	mov	x29, sp
   2bd98:	str	x0, [sp, #24]
   2bd9c:	str	x1, [sp, #16]
   2bda0:	str	xzr, [sp, #56]
   2bda4:	str	xzr, [sp, #48]
   2bda8:	mov	w1, #0x1                   	// #1
   2bdac:	ldr	x0, [sp, #16]
   2bdb0:	bl	87e0 <dlopen@plt>
   2bdb4:	str	x0, [sp, #40]
   2bdb8:	ldr	x0, [sp, #40]
   2bdbc:	cmp	x0, #0x0
   2bdc0:	b.eq	2c544 <omp_pause_resource_all@@OMP_5.0+0x7e0>  // b.none
   2bdc4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2bdc8:	add	x1, x0, #0xbc8
   2bdcc:	ldr	x0, [sp, #40]
   2bdd0:	bl	8880 <dlsym@plt>
   2bdd4:	mov	x1, x0
   2bdd8:	ldr	x0, [sp, #24]
   2bddc:	str	x1, [x0, #72]
   2bde0:	ldr	x0, [sp, #24]
   2bde4:	ldr	x0, [x0, #72]
   2bde8:	cmp	x0, #0x0
   2bdec:	b.eq	2c54c <omp_pause_resource_all@@OMP_5.0+0x7e8>  // b.none
   2bdf0:	ldr	x0, [sp, #24]
   2bdf4:	ldr	x0, [x0, #72]
   2bdf8:	blr	x0
   2bdfc:	cmp	w0, #0x1
   2be00:	b.eq	2be14 <omp_pause_resource_all@@OMP_5.0+0xb0>  // b.none
   2be04:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2be08:	add	x0, x0, #0xbe0
   2be0c:	str	x0, [sp, #56]
   2be10:	b	2c5d0 <omp_pause_resource_all@@OMP_5.0+0x86c>
   2be14:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2be18:	add	x1, x0, #0xbf8
   2be1c:	ldr	x0, [sp, #40]
   2be20:	bl	8880 <dlsym@plt>
   2be24:	mov	x1, x0
   2be28:	ldr	x0, [sp, #24]
   2be2c:	str	x1, [x0, #24]
   2be30:	ldr	x0, [sp, #24]
   2be34:	ldr	x0, [x0, #24]
   2be38:	cmp	x0, #0x0
   2be3c:	b.eq	2c554 <omp_pause_resource_all@@OMP_5.0+0x7f0>  // b.none
   2be40:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2be44:	add	x1, x0, #0xc10
   2be48:	ldr	x0, [sp, #40]
   2be4c:	bl	8880 <dlsym@plt>
   2be50:	mov	x1, x0
   2be54:	ldr	x0, [sp, #24]
   2be58:	str	x1, [x0, #32]
   2be5c:	ldr	x0, [sp, #24]
   2be60:	ldr	x0, [x0, #32]
   2be64:	cmp	x0, #0x0
   2be68:	b.eq	2c55c <omp_pause_resource_all@@OMP_5.0+0x7f8>  // b.none
   2be6c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2be70:	add	x1, x0, #0xc28
   2be74:	ldr	x0, [sp, #40]
   2be78:	bl	8880 <dlsym@plt>
   2be7c:	mov	x1, x0
   2be80:	ldr	x0, [sp, #24]
   2be84:	str	x1, [x0, #40]
   2be88:	ldr	x0, [sp, #24]
   2be8c:	ldr	x0, [x0, #40]
   2be90:	cmp	x0, #0x0
   2be94:	b.eq	2c564 <omp_pause_resource_all@@OMP_5.0+0x800>  // b.none
   2be98:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2be9c:	add	x1, x0, #0xc40
   2bea0:	ldr	x0, [sp, #40]
   2bea4:	bl	8880 <dlsym@plt>
   2bea8:	mov	x1, x0
   2beac:	ldr	x0, [sp, #24]
   2beb0:	str	x1, [x0, #48]
   2beb4:	ldr	x0, [sp, #24]
   2beb8:	ldr	x0, [x0, #48]
   2bebc:	cmp	x0, #0x0
   2bec0:	b.eq	2c56c <omp_pause_resource_all@@OMP_5.0+0x808>  // b.none
   2bec4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2bec8:	add	x1, x0, #0xc60
   2becc:	ldr	x0, [sp, #40]
   2bed0:	bl	8880 <dlsym@plt>
   2bed4:	mov	x1, x0
   2bed8:	ldr	x0, [sp, #24]
   2bedc:	str	x1, [x0, #56]
   2bee0:	ldr	x0, [sp, #24]
   2bee4:	ldr	x0, [x0, #56]
   2bee8:	cmp	x0, #0x0
   2beec:	b.eq	2c574 <omp_pause_resource_all@@OMP_5.0+0x810>  // b.none
   2bef0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2bef4:	add	x1, x0, #0xc80
   2bef8:	ldr	x0, [sp, #40]
   2befc:	bl	8880 <dlsym@plt>
   2bf00:	mov	x1, x0
   2bf04:	ldr	x0, [sp, #24]
   2bf08:	str	x1, [x0, #64]
   2bf0c:	ldr	x0, [sp, #24]
   2bf10:	ldr	x0, [x0, #64]
   2bf14:	cmp	x0, #0x0
   2bf18:	b.eq	2c57c <omp_pause_resource_all@@OMP_5.0+0x818>  // b.none
   2bf1c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2bf20:	add	x1, x0, #0xca0
   2bf24:	ldr	x0, [sp, #40]
   2bf28:	bl	8880 <dlsym@plt>
   2bf2c:	mov	x1, x0
   2bf30:	ldr	x0, [sp, #24]
   2bf34:	str	x1, [x0, #80]
   2bf38:	ldr	x0, [sp, #24]
   2bf3c:	ldr	x0, [x0, #80]
   2bf40:	cmp	x0, #0x0
   2bf44:	b.eq	2c584 <omp_pause_resource_all@@OMP_5.0+0x820>  // b.none
   2bf48:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2bf4c:	add	x1, x0, #0xcb8
   2bf50:	ldr	x0, [sp, #40]
   2bf54:	bl	8880 <dlsym@plt>
   2bf58:	mov	x1, x0
   2bf5c:	ldr	x0, [sp, #24]
   2bf60:	str	x1, [x0, #88]
   2bf64:	ldr	x0, [sp, #24]
   2bf68:	ldr	x0, [x0, #88]
   2bf6c:	cmp	x0, #0x0
   2bf70:	b.eq	2c58c <omp_pause_resource_all@@OMP_5.0+0x828>  // b.none
   2bf74:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2bf78:	add	x1, x0, #0xcd8
   2bf7c:	ldr	x0, [sp, #40]
   2bf80:	bl	8880 <dlsym@plt>
   2bf84:	mov	x1, x0
   2bf88:	ldr	x0, [sp, #24]
   2bf8c:	str	x1, [x0, #96]
   2bf90:	ldr	x0, [sp, #24]
   2bf94:	ldr	x0, [x0, #96]
   2bf98:	cmp	x0, #0x0
   2bf9c:	b.eq	2c594 <omp_pause_resource_all@@OMP_5.0+0x830>  // b.none
   2bfa0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2bfa4:	add	x1, x0, #0xcf0
   2bfa8:	ldr	x0, [sp, #40]
   2bfac:	bl	8880 <dlsym@plt>
   2bfb0:	mov	x1, x0
   2bfb4:	ldr	x0, [sp, #24]
   2bfb8:	str	x1, [x0, #104]
   2bfbc:	ldr	x0, [sp, #24]
   2bfc0:	ldr	x0, [x0, #104]
   2bfc4:	cmp	x0, #0x0
   2bfc8:	b.eq	2c59c <omp_pause_resource_all@@OMP_5.0+0x838>  // b.none
   2bfcc:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2bfd0:	add	x1, x0, #0xd08
   2bfd4:	ldr	x0, [sp, #40]
   2bfd8:	bl	8880 <dlsym@plt>
   2bfdc:	mov	x1, x0
   2bfe0:	ldr	x0, [sp, #24]
   2bfe4:	str	x1, [x0, #112]
   2bfe8:	ldr	x0, [sp, #24]
   2bfec:	ldr	x0, [x0, #112]
   2bff0:	cmp	x0, #0x0
   2bff4:	b.eq	2c5a4 <omp_pause_resource_all@@OMP_5.0+0x840>  // b.none
   2bff8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2bffc:	add	x1, x0, #0xd20
   2c000:	ldr	x0, [sp, #40]
   2c004:	bl	8880 <dlsym@plt>
   2c008:	mov	x1, x0
   2c00c:	ldr	x0, [sp, #24]
   2c010:	str	x1, [x0, #120]
   2c014:	ldr	x0, [sp, #24]
   2c018:	ldr	x0, [x0, #120]
   2c01c:	cmp	x0, #0x0
   2c020:	b.eq	2c5ac <omp_pause_resource_all@@OMP_5.0+0x848>  // b.none
   2c024:	ldr	x0, [sp, #24]
   2c028:	ldr	x0, [x0, #32]
   2c02c:	blr	x0
   2c030:	mov	w1, w0
   2c034:	ldr	x0, [sp, #24]
   2c038:	str	w1, [x0, #8]
   2c03c:	ldr	x0, [sp, #24]
   2c040:	ldr	w0, [x0, #8]
   2c044:	and	w0, w0, #0x4
   2c048:	cmp	w0, #0x0
   2c04c:	b.eq	2c10c <omp_pause_resource_all@@OMP_5.0+0x3a8>  // b.none
   2c050:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c054:	add	x1, x0, #0xd38
   2c058:	ldr	x0, [sp, #40]
   2c05c:	bl	8880 <dlsym@plt>
   2c060:	mov	x1, x0
   2c064:	ldr	x0, [sp, #24]
   2c068:	str	x1, [x0, #144]
   2c06c:	ldr	x0, [sp, #24]
   2c070:	ldr	x0, [x0, #144]
   2c074:	cmp	x0, #0x0
   2c078:	b.eq	2c5b4 <omp_pause_resource_all@@OMP_5.0+0x850>  // b.none
   2c07c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c080:	add	x1, x0, #0xd50
   2c084:	ldr	x0, [sp, #40]
   2c088:	bl	8880 <dlsym@plt>
   2c08c:	mov	x1, x0
   2c090:	ldr	x0, [sp, #24]
   2c094:	str	x1, [x0, #152]
   2c098:	ldr	x0, [sp, #24]
   2c09c:	ldr	x0, [x0, #152]
   2c0a0:	cmp	x0, #0x0
   2c0a4:	b.eq	2c5bc <omp_pause_resource_all@@OMP_5.0+0x858>  // b.none
   2c0a8:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c0ac:	add	x1, x0, #0xd68
   2c0b0:	ldr	x0, [sp, #40]
   2c0b4:	bl	8880 <dlsym@plt>
   2c0b8:	mov	x1, x0
   2c0bc:	ldr	x0, [sp, #24]
   2c0c0:	str	x1, [x0, #136]
   2c0c4:	ldr	x0, [sp, #24]
   2c0c8:	ldr	x0, [x0, #136]
   2c0cc:	cmp	x0, #0x0
   2c0d0:	b.ne	2c0e0 <omp_pause_resource_all@@OMP_5.0+0x37c>  // b.any
   2c0d4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c0d8:	add	x0, x0, #0xd80
   2c0dc:	str	x0, [sp, #48]
   2c0e0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c0e4:	add	x1, x0, #0xd88
   2c0e8:	ldr	x0, [sp, #40]
   2c0ec:	bl	8880 <dlsym@plt>
   2c0f0:	mov	x1, x0
   2c0f4:	ldr	x0, [sp, #24]
   2c0f8:	str	x1, [x0, #128]
   2c0fc:	ldr	x0, [sp, #24]
   2c100:	ldr	x0, [x0, #128]
   2c104:	cmp	x0, #0x0
   2c108:	b.eq	2c5c4 <omp_pause_resource_all@@OMP_5.0+0x860>  // b.none
   2c10c:	ldr	x0, [sp, #24]
   2c110:	ldr	w0, [x0, #8]
   2c114:	and	w0, w0, #0x8
   2c118:	cmp	w0, #0x0
   2c11c:	b.eq	2c53c <omp_pause_resource_all@@OMP_5.0+0x7d8>  // b.none
   2c120:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c124:	add	x1, x0, #0xda0
   2c128:	ldr	x0, [sp, #40]
   2c12c:	bl	8880 <dlsym@plt>
   2c130:	mov	x1, x0
   2c134:	ldr	x0, [sp, #24]
   2c138:	str	x1, [x0, #184]
   2c13c:	ldr	x0, [sp, #24]
   2c140:	ldr	x0, [x0, #184]
   2c144:	cmp	x0, #0x0
   2c148:	b.ne	2c15c <omp_pause_resource_all@@OMP_5.0+0x3f8>  // b.any
   2c14c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c150:	add	x0, x0, #0xdc0
   2c154:	str	x0, [sp, #48]
   2c158:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c15c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c160:	add	x1, x0, #0xdd0
   2c164:	ldr	x0, [sp, #40]
   2c168:	bl	8880 <dlsym@plt>
   2c16c:	mov	x1, x0
   2c170:	ldr	x0, [sp, #24]
   2c174:	str	x1, [x0, #192]
   2c178:	ldr	x0, [sp, #24]
   2c17c:	ldr	x0, [x0, #192]
   2c180:	cmp	x0, #0x0
   2c184:	b.ne	2c198 <omp_pause_resource_all@@OMP_5.0+0x434>  // b.any
   2c188:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c18c:	add	x0, x0, #0xe00
   2c190:	str	x0, [sp, #48]
   2c194:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c198:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c19c:	add	x1, x0, #0xe20
   2c1a0:	ldr	x0, [sp, #40]
   2c1a4:	bl	8880 <dlsym@plt>
   2c1a8:	mov	x1, x0
   2c1ac:	ldr	x0, [sp, #24]
   2c1b0:	str	x1, [x0, #200]
   2c1b4:	ldr	x0, [sp, #24]
   2c1b8:	ldr	x0, [x0, #200]
   2c1bc:	cmp	x0, #0x0
   2c1c0:	b.ne	2c1d4 <omp_pause_resource_all@@OMP_5.0+0x470>  // b.any
   2c1c4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c1c8:	add	x0, x0, #0xe40
   2c1cc:	str	x0, [sp, #48]
   2c1d0:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c1d4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c1d8:	add	x1, x0, #0xe58
   2c1dc:	ldr	x0, [sp, #40]
   2c1e0:	bl	8880 <dlsym@plt>
   2c1e4:	mov	x1, x0
   2c1e8:	ldr	x0, [sp, #24]
   2c1ec:	str	x1, [x0, #208]
   2c1f0:	ldr	x0, [sp, #24]
   2c1f4:	ldr	x0, [x0, #208]
   2c1f8:	cmp	x0, #0x0
   2c1fc:	b.ne	2c210 <omp_pause_resource_all@@OMP_5.0+0x4ac>  // b.any
   2c200:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c204:	add	x0, x0, #0xe80
   2c208:	str	x0, [sp, #48]
   2c20c:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c210:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c214:	add	x1, x0, #0xe98
   2c218:	ldr	x0, [sp, #40]
   2c21c:	bl	8880 <dlsym@plt>
   2c220:	mov	x1, x0
   2c224:	ldr	x0, [sp, #24]
   2c228:	str	x1, [x0, #216]
   2c22c:	ldr	x0, [sp, #24]
   2c230:	ldr	x0, [x0, #216]
   2c234:	cmp	x0, #0x0
   2c238:	b.ne	2c24c <omp_pause_resource_all@@OMP_5.0+0x4e8>  // b.any
   2c23c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c240:	add	x0, x0, #0xeb8
   2c244:	str	x0, [sp, #48]
   2c248:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c24c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c250:	add	x1, x0, #0xed0
   2c254:	ldr	x0, [sp, #40]
   2c258:	bl	8880 <dlsym@plt>
   2c25c:	mov	x1, x0
   2c260:	ldr	x0, [sp, #24]
   2c264:	str	x1, [x0, #224]
   2c268:	ldr	x0, [sp, #24]
   2c26c:	ldr	x0, [x0, #224]
   2c270:	cmp	x0, #0x0
   2c274:	b.ne	2c288 <omp_pause_resource_all@@OMP_5.0+0x524>  // b.any
   2c278:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c27c:	add	x0, x0, #0xef8
   2c280:	str	x0, [sp, #48]
   2c284:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c288:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c28c:	add	x1, x0, #0xf18
   2c290:	ldr	x0, [sp, #40]
   2c294:	bl	8880 <dlsym@plt>
   2c298:	mov	x1, x0
   2c29c:	ldr	x0, [sp, #24]
   2c2a0:	str	x1, [x0, #232]
   2c2a4:	ldr	x0, [sp, #24]
   2c2a8:	ldr	x0, [x0, #232]
   2c2ac:	cmp	x0, #0x0
   2c2b0:	b.ne	2c2c4 <omp_pause_resource_all@@OMP_5.0+0x560>  // b.any
   2c2b4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c2b8:	add	x0, x0, #0xf40
   2c2bc:	str	x0, [sp, #48]
   2c2c0:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c2c4:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c2c8:	add	x1, x0, #0xf58
   2c2cc:	ldr	x0, [sp, #40]
   2c2d0:	bl	8880 <dlsym@plt>
   2c2d4:	mov	x1, x0
   2c2d8:	ldr	x0, [sp, #24]
   2c2dc:	str	x1, [x0, #240]
   2c2e0:	ldr	x0, [sp, #24]
   2c2e4:	ldr	x0, [x0, #240]
   2c2e8:	cmp	x0, #0x0
   2c2ec:	b.ne	2c300 <omp_pause_resource_all@@OMP_5.0+0x59c>  // b.any
   2c2f0:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c2f4:	add	x0, x0, #0xf88
   2c2f8:	str	x0, [sp, #48]
   2c2fc:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c300:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c304:	add	x1, x0, #0xfa8
   2c308:	ldr	x0, [sp, #40]
   2c30c:	bl	8880 <dlsym@plt>
   2c310:	mov	x1, x0
   2c314:	ldr	x0, [sp, #24]
   2c318:	str	x1, [x0, #248]
   2c31c:	ldr	x0, [sp, #24]
   2c320:	ldr	x0, [x0, #248]
   2c324:	cmp	x0, #0x0
   2c328:	b.ne	2c33c <omp_pause_resource_all@@OMP_5.0+0x5d8>  // b.any
   2c32c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c330:	add	x0, x0, #0xfd0
   2c334:	str	x0, [sp, #48]
   2c338:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c33c:	adrp	x0, 35000 <omp_get_team_num@@OMP_4.0+0x5cc>
   2c340:	add	x1, x0, #0xfe8
   2c344:	ldr	x0, [sp, #40]
   2c348:	bl	8880 <dlsym@plt>
   2c34c:	mov	x1, x0
   2c350:	ldr	x0, [sp, #24]
   2c354:	str	x1, [x0, #256]
   2c358:	ldr	x0, [sp, #24]
   2c35c:	ldr	x0, [x0, #256]
   2c360:	cmp	x0, #0x0
   2c364:	b.ne	2c378 <omp_pause_resource_all@@OMP_5.0+0x614>  // b.any
   2c368:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c36c:	add	x0, x0, #0x10
   2c370:	str	x0, [sp, #48]
   2c374:	b	2c3b0 <omp_pause_resource_all@@OMP_5.0+0x64c>
   2c378:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c37c:	add	x1, x0, #0x30
   2c380:	ldr	x0, [sp, #40]
   2c384:	bl	8880 <dlsym@plt>
   2c388:	mov	x1, x0
   2c38c:	ldr	x0, [sp, #24]
   2c390:	str	x1, [x0, #264]
   2c394:	ldr	x0, [sp, #24]
   2c398:	ldr	x0, [x0, #264]
   2c39c:	cmp	x0, #0x0
   2c3a0:	b.ne	2c3c0 <omp_pause_resource_all@@OMP_5.0+0x65c>  // b.any
   2c3a4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c3a8:	add	x0, x0, #0x60
   2c3ac:	str	x0, [sp, #48]
   2c3b0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c3b4:	add	x0, x0, #0x80
   2c3b8:	str	x0, [sp, #56]
   2c3bc:	b	2c5d0 <omp_pause_resource_all@@OMP_5.0+0x86c>
   2c3c0:	str	wzr, [sp, #36]
   2c3c4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c3c8:	add	x1, x0, #0xa8
   2c3cc:	ldr	x0, [sp, #40]
   2c3d0:	bl	8880 <dlsym@plt>
   2c3d4:	mov	x1, x0
   2c3d8:	ldr	x0, [sp, #24]
   2c3dc:	str	x1, [x0, #272]
   2c3e0:	ldr	x0, [sp, #24]
   2c3e4:	ldr	x0, [x0, #272]
   2c3e8:	cmp	x0, #0x0
   2c3ec:	b.ne	2c404 <omp_pause_resource_all@@OMP_5.0+0x6a0>  // b.any
   2c3f0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c3f4:	add	x0, x0, #0xd8
   2c3f8:	str	x0, [sp, #48]
   2c3fc:	mov	w0, #0x0                   	// #0
   2c400:	b	2c408 <omp_pause_resource_all@@OMP_5.0+0x6a4>
   2c404:	mov	w0, #0x1                   	// #1
   2c408:	mov	w1, w0
   2c40c:	ldr	w0, [sp, #36]
   2c410:	add	w0, w0, w1
   2c414:	str	w0, [sp, #36]
   2c418:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c41c:	add	x1, x0, #0xf8
   2c420:	ldr	x0, [sp, #40]
   2c424:	bl	8880 <dlsym@plt>
   2c428:	mov	x1, x0
   2c42c:	ldr	x0, [sp, #24]
   2c430:	str	x1, [x0, #280]
   2c434:	ldr	x0, [sp, #24]
   2c438:	ldr	x0, [x0, #280]
   2c43c:	cmp	x0, #0x0
   2c440:	b.ne	2c458 <omp_pause_resource_all@@OMP_5.0+0x6f4>  // b.any
   2c444:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c448:	add	x0, x0, #0x128
   2c44c:	str	x0, [sp, #48]
   2c450:	mov	w0, #0x0                   	// #0
   2c454:	b	2c45c <omp_pause_resource_all@@OMP_5.0+0x6f8>
   2c458:	mov	w0, #0x1                   	// #1
   2c45c:	mov	w1, w0
   2c460:	ldr	w0, [sp, #36]
   2c464:	add	w0, w0, w1
   2c468:	str	w0, [sp, #36]
   2c46c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c470:	add	x1, x0, #0x150
   2c474:	ldr	x0, [sp, #40]
   2c478:	bl	8880 <dlsym@plt>
   2c47c:	mov	x1, x0
   2c480:	ldr	x0, [sp, #24]
   2c484:	str	x1, [x0, #288]
   2c488:	ldr	x0, [sp, #24]
   2c48c:	ldr	x0, [x0, #288]
   2c490:	cmp	x0, #0x0
   2c494:	b.ne	2c4ac <omp_pause_resource_all@@OMP_5.0+0x748>  // b.any
   2c498:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c49c:	add	x0, x0, #0x178
   2c4a0:	str	x0, [sp, #48]
   2c4a4:	mov	w0, #0x0                   	// #0
   2c4a8:	b	2c4b0 <omp_pause_resource_all@@OMP_5.0+0x74c>
   2c4ac:	mov	w0, #0x1                   	// #1
   2c4b0:	mov	w1, w0
   2c4b4:	ldr	w0, [sp, #36]
   2c4b8:	add	w0, w0, w1
   2c4bc:	str	w0, [sp, #36]
   2c4c0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c4c4:	add	x1, x0, #0x190
   2c4c8:	ldr	x0, [sp, #40]
   2c4cc:	bl	8880 <dlsym@plt>
   2c4d0:	mov	x1, x0
   2c4d4:	ldr	x0, [sp, #24]
   2c4d8:	str	x1, [x0, #296]
   2c4dc:	ldr	x0, [sp, #24]
   2c4e0:	ldr	x0, [x0, #296]
   2c4e4:	cmp	x0, #0x0
   2c4e8:	b.ne	2c500 <omp_pause_resource_all@@OMP_5.0+0x79c>  // b.any
   2c4ec:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c4f0:	add	x0, x0, #0x1b8
   2c4f4:	str	x0, [sp, #48]
   2c4f8:	mov	w0, #0x0                   	// #0
   2c4fc:	b	2c504 <omp_pause_resource_all@@OMP_5.0+0x7a0>
   2c500:	mov	w0, #0x1                   	// #1
   2c504:	mov	w1, w0
   2c508:	ldr	w0, [sp, #36]
   2c50c:	add	w0, w0, w1
   2c510:	str	w0, [sp, #36]
   2c514:	ldr	w0, [sp, #36]
   2c518:	cmp	w0, #0x0
   2c51c:	b.eq	2c53c <omp_pause_resource_all@@OMP_5.0+0x7d8>  // b.none
   2c520:	ldr	w0, [sp, #36]
   2c524:	cmp	w0, #0x4
   2c528:	b.eq	2c53c <omp_pause_resource_all@@OMP_5.0+0x7d8>  // b.none
   2c52c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c530:	add	x0, x0, #0x1d0
   2c534:	str	x0, [sp, #56]
   2c538:	b	2c5d0 <omp_pause_resource_all@@OMP_5.0+0x86c>
   2c53c:	mov	w0, #0x1                   	// #1
   2c540:	b	2c618 <omp_pause_resource_all@@OMP_5.0+0x8b4>
   2c544:	nop
   2c548:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c54c:	nop
   2c550:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c554:	nop
   2c558:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c55c:	nop
   2c560:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c564:	nop
   2c568:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c56c:	nop
   2c570:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c574:	nop
   2c578:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c57c:	nop
   2c580:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c584:	nop
   2c588:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c58c:	nop
   2c590:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c594:	nop
   2c598:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c59c:	nop
   2c5a0:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c5a4:	nop
   2c5a8:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c5ac:	nop
   2c5b0:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c5b4:	nop
   2c5b8:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c5bc:	nop
   2c5c0:	b	2c5c8 <omp_pause_resource_all@@OMP_5.0+0x864>
   2c5c4:	nop
   2c5c8:	bl	8870 <dlerror@plt>
   2c5cc:	str	x0, [sp, #56]
   2c5d0:	ldr	x2, [sp, #56]
   2c5d4:	ldr	x1, [sp, #16]
   2c5d8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c5dc:	add	x0, x0, #0x200
   2c5e0:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   2c5e4:	ldr	x0, [sp, #48]
   2c5e8:	cmp	x0, #0x0
   2c5ec:	b.eq	2c600 <omp_pause_resource_all@@OMP_5.0+0x89c>  // b.none
   2c5f0:	ldr	x1, [sp, #48]
   2c5f4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c5f8:	add	x0, x0, #0x218
   2c5fc:	bl	d044 <GOMP_critical_name_end@@GOMP_1.0+0x3e74>
   2c600:	ldr	x0, [sp, #40]
   2c604:	cmp	x0, #0x0
   2c608:	b.eq	2c614 <omp_pause_resource_all@@OMP_5.0+0x8b0>  // b.none
   2c60c:	ldr	x0, [sp, #40]
   2c610:	bl	87c0 <dlclose@plt>
   2c614:	mov	w0, #0x0                   	// #0
   2c618:	ldp	x29, x30, [sp], #64
   2c61c:	ret
   2c620:	stp	x29, x30, [sp, #-32]!
   2c624:	mov	x29, sp
   2c628:	str	wzr, [sp, #28]
   2c62c:	b	2c6e0 <omp_pause_resource_all@@OMP_5.0+0x97c>
   2c630:	mov	w0, #0x1                   	// #1
   2c634:	strb	w0, [sp, #27]
   2c638:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c63c:	add	x0, x0, #0x5a0
   2c640:	ldr	x2, [x0]
   2c644:	ldrsw	x1, [sp, #28]
   2c648:	mov	x0, x1
   2c64c:	lsl	x0, x0, #2
   2c650:	add	x0, x0, x1
   2c654:	lsl	x0, x0, #2
   2c658:	sub	x0, x0, x1
   2c65c:	lsl	x0, x0, #4
   2c660:	add	x0, x2, x0
   2c664:	str	x0, [sp, #16]
   2c668:	ldr	x0, [sp, #16]
   2c66c:	add	x0, x0, #0xa8
   2c670:	bl	24ec4 <omp_get_place_proc_ids@@OMP_4.5+0x4e8>
   2c674:	ldr	x0, [sp, #16]
   2c678:	ldr	w0, [x0, #172]
   2c67c:	cmp	w0, #0x1
   2c680:	b.ne	2c6a8 <omp_pause_resource_all@@OMP_5.0+0x944>  // b.any
   2c684:	ldr	x0, [sp, #16]
   2c688:	ldr	x1, [x0, #64]
   2c68c:	ldr	x0, [sp, #16]
   2c690:	ldr	w0, [x0, #12]
   2c694:	blr	x1
   2c698:	strb	w0, [sp, #27]
   2c69c:	ldr	x0, [sp, #16]
   2c6a0:	mov	w1, #0x2                   	// #2
   2c6a4:	str	w1, [x0, #172]
   2c6a8:	ldr	x0, [sp, #16]
   2c6ac:	add	x0, x0, #0xa8
   2c6b0:	bl	24f38 <omp_get_place_proc_ids@@OMP_4.5+0x55c>
   2c6b4:	ldrb	w0, [sp, #27]
   2c6b8:	eor	w0, w0, #0x1
   2c6bc:	and	w0, w0, #0xff
   2c6c0:	cmp	w0, #0x0
   2c6c4:	b.eq	2c6d4 <omp_pause_resource_all@@OMP_5.0+0x970>  // b.none
   2c6c8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c6cc:	add	x0, x0, #0x230
   2c6d0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2c6d4:	ldr	w0, [sp, #28]
   2c6d8:	add	w0, w0, #0x1
   2c6dc:	str	w0, [sp, #28]
   2c6e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c6e4:	add	x0, x0, #0x5a8
   2c6e8:	ldr	w0, [x0]
   2c6ec:	ldr	w1, [sp, #28]
   2c6f0:	cmp	w1, w0
   2c6f4:	b.lt	2c630 <omp_pause_resource_all@@OMP_5.0+0x8cc>  // b.tstop
   2c6f8:	nop
   2c6fc:	nop
   2c700:	ldp	x29, x30, [sp], #32
   2c704:	ret
   2c708:	stp	x29, x30, [sp, #-416]!
   2c70c:	mov	x29, sp
   2c710:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c714:	add	x0, x0, #0x250
   2c718:	str	x0, [sp, #392]
   2c71c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c720:	add	x0, x0, #0x260
   2c724:	str	x0, [sp, #384]
   2c728:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c72c:	add	x0, x0, #0x5a8
   2c730:	str	wzr, [x0]
   2c734:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c738:	add	x0, x0, #0x5a0
   2c73c:	str	xzr, [x0]
   2c740:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2c744:	add	x0, x0, #0x268
   2c748:	str	x0, [sp, #408]
   2c74c:	ldr	x0, [sp, #408]
   2c750:	ldrb	w0, [x0]
   2c754:	cmp	w0, #0x0
   2c758:	b.eq	2ca10 <omp_pause_resource_all@@OMP_5.0+0xcac>  // b.none
   2c75c:	mov	w1, #0x2c                  	// #44
   2c760:	ldr	x0, [sp, #408]
   2c764:	bl	8ac0 <strchr@plt>
   2c768:	str	x0, [sp, #376]
   2c76c:	ldr	x0, [sp, #392]
   2c770:	bl	86d0 <strlen@plt>
   2c774:	str	x0, [sp, #368]
   2c778:	ldr	x0, [sp, #376]
   2c77c:	cmp	x0, #0x0
   2c780:	b.eq	2c794 <omp_pause_resource_all@@OMP_5.0+0xa30>  // b.none
   2c784:	ldr	x1, [sp, #376]
   2c788:	ldr	x0, [sp, #408]
   2c78c:	sub	x0, x1, x0
   2c790:	b	2c79c <omp_pause_resource_all@@OMP_5.0+0xa38>
   2c794:	ldr	x0, [sp, #408]
   2c798:	bl	86d0 <strlen@plt>
   2c79c:	str	x0, [sp, #360]
   2c7a0:	ldr	x0, [sp, #384]
   2c7a4:	bl	86d0 <strlen@plt>
   2c7a8:	str	x0, [sp, #352]
   2c7ac:	ldr	x1, [sp, #368]
   2c7b0:	ldr	x0, [sp, #360]
   2c7b4:	add	x1, x1, x0
   2c7b8:	ldr	x0, [sp, #352]
   2c7bc:	add	x0, x1, x0
   2c7c0:	add	x0, x0, #0x1
   2c7c4:	bl	8850 <malloc@plt>
   2c7c8:	str	x0, [sp, #344]
   2c7cc:	ldr	x0, [sp, #344]
   2c7d0:	cmp	x0, #0x0
   2c7d4:	b.ne	2c7e8 <omp_pause_resource_all@@OMP_5.0+0xa84>  // b.any
   2c7d8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c7dc:	add	x0, x0, #0x5a8
   2c7e0:	str	wzr, [x0]
   2c7e4:	b	2ca10 <omp_pause_resource_all@@OMP_5.0+0xcac>
   2c7e8:	ldr	x2, [sp, #368]
   2c7ec:	ldr	x1, [sp, #392]
   2c7f0:	ldr	x0, [sp, #344]
   2c7f4:	bl	86a0 <memcpy@plt>
   2c7f8:	ldr	x1, [sp, #344]
   2c7fc:	ldr	x0, [sp, #368]
   2c800:	add	x0, x1, x0
   2c804:	ldr	x2, [sp, #360]
   2c808:	ldr	x1, [sp, #408]
   2c80c:	bl	86a0 <memcpy@plt>
   2c810:	ldr	x1, [sp, #368]
   2c814:	ldr	x0, [sp, #360]
   2c818:	add	x0, x1, x0
   2c81c:	ldr	x1, [sp, #344]
   2c820:	add	x3, x1, x0
   2c824:	ldr	x0, [sp, #352]
   2c828:	add	x0, x0, #0x1
   2c82c:	mov	x2, x0
   2c830:	ldr	x1, [sp, #384]
   2c834:	mov	x0, x3
   2c838:	bl	86a0 <memcpy@plt>
   2c83c:	add	x0, sp, #0x18
   2c840:	ldr	x1, [sp, #344]
   2c844:	bl	2bd90 <omp_pause_resource_all@@OMP_5.0+0x2c>
   2c848:	and	w0, w0, #0xff
   2c84c:	cmp	w0, #0x0
   2c850:	b.eq	2c9f0 <omp_pause_resource_all@@OMP_5.0+0xc8c>  // b.none
   2c854:	ldr	x0, [sp, #72]
   2c858:	blr	x0
   2c85c:	str	w0, [sp, #340]
   2c860:	ldr	w0, [sp, #340]
   2c864:	cmp	w0, #0x0
   2c868:	b.le	2c9f0 <omp_pause_resource_all@@OMP_5.0+0xc8c>
   2c86c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c870:	add	x0, x0, #0x5a0
   2c874:	ldr	x2, [x0]
   2c878:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c87c:	add	x0, x0, #0x5a8
   2c880:	ldr	w1, [x0]
   2c884:	ldr	w0, [sp, #340]
   2c888:	add	w0, w1, w0
   2c88c:	sxtw	x1, w0
   2c890:	mov	x0, x1
   2c894:	lsl	x0, x0, #2
   2c898:	add	x0, x0, x1
   2c89c:	lsl	x0, x0, #2
   2c8a0:	sub	x0, x0, x1
   2c8a4:	lsl	x0, x0, #4
   2c8a8:	mov	x1, x0
   2c8ac:	mov	x0, x2
   2c8b0:	bl	8920 <realloc@plt>
   2c8b4:	mov	x1, x0
   2c8b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c8bc:	add	x0, x0, #0x5a0
   2c8c0:	str	x1, [x0]
   2c8c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c8c8:	add	x0, x0, #0x5a0
   2c8cc:	ldr	x0, [x0]
   2c8d0:	cmp	x0, #0x0
   2c8d4:	b.ne	2c8f0 <omp_pause_resource_all@@OMP_5.0+0xb8c>  // b.any
   2c8d8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c8dc:	add	x0, x0, #0x5a8
   2c8e0:	str	wzr, [x0]
   2c8e4:	ldr	x0, [sp, #344]
   2c8e8:	bl	8a20 <free@plt>
   2c8ec:	b	2ca10 <omp_pause_resource_all@@OMP_5.0+0xcac>
   2c8f0:	ldr	x0, [sp, #48]
   2c8f4:	blr	x0
   2c8f8:	str	x0, [sp, #24]
   2c8fc:	ldr	x0, [sp, #64]
   2c900:	blr	x0
   2c904:	str	w0, [sp, #40]
   2c908:	str	xzr, [sp, #184]
   2c90c:	str	wzr, [sp, #196]
   2c910:	str	xzr, [sp, #200]
   2c914:	str	wzr, [sp, #404]
   2c918:	b	2c9e0 <omp_pause_resource_all@@OMP_5.0+0xc7c>
   2c91c:	ldr	w0, [sp, #404]
   2c920:	str	w0, [sp, #36]
   2c924:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c928:	add	x0, x0, #0x5a0
   2c92c:	ldr	x2, [x0]
   2c930:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c934:	add	x0, x0, #0x5a8
   2c938:	ldr	w0, [x0]
   2c93c:	sxtw	x1, w0
   2c940:	mov	x0, x1
   2c944:	lsl	x0, x0, #2
   2c948:	add	x0, x0, x1
   2c94c:	lsl	x0, x0, #2
   2c950:	sub	x0, x0, x1
   2c954:	lsl	x0, x0, #4
   2c958:	add	x0, x2, x0
   2c95c:	mov	x3, x0
   2c960:	add	x0, sp, #0x18
   2c964:	mov	x1, #0x130                 	// #304
   2c968:	mov	x2, x1
   2c96c:	mov	x1, x0
   2c970:	mov	x0, x3
   2c974:	bl	86a0 <memcpy@plt>
   2c978:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c97c:	add	x0, x0, #0x5a0
   2c980:	ldr	x2, [x0]
   2c984:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c988:	add	x0, x0, #0x5a8
   2c98c:	ldr	w0, [x0]
   2c990:	sxtw	x1, w0
   2c994:	mov	x0, x1
   2c998:	lsl	x0, x0, #2
   2c99c:	add	x0, x0, x1
   2c9a0:	lsl	x0, x0, #2
   2c9a4:	sub	x0, x0, x1
   2c9a8:	lsl	x0, x0, #4
   2c9ac:	add	x0, x2, x0
   2c9b0:	add	x0, x0, #0xa8
   2c9b4:	bl	24ea8 <omp_get_place_proc_ids@@OMP_4.5+0x4cc>
   2c9b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c9bc:	add	x0, x0, #0x5a8
   2c9c0:	ldr	w0, [x0]
   2c9c4:	add	w1, w0, #0x1
   2c9c8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2c9cc:	add	x0, x0, #0x5a8
   2c9d0:	str	w1, [x0]
   2c9d4:	ldr	w0, [sp, #404]
   2c9d8:	add	w0, w0, #0x1
   2c9dc:	str	w0, [sp, #404]
   2c9e0:	ldr	w1, [sp, #404]
   2c9e4:	ldr	w0, [sp, #340]
   2c9e8:	cmp	w1, w0
   2c9ec:	b.lt	2c91c <omp_pause_resource_all@@OMP_5.0+0xbb8>  // b.tstop
   2c9f0:	ldr	x0, [sp, #344]
   2c9f4:	bl	8a20 <free@plt>
   2c9f8:	ldr	x0, [sp, #376]
   2c9fc:	add	x0, x0, #0x1
   2ca00:	str	x0, [sp, #408]
   2ca04:	ldr	x0, [sp, #376]
   2ca08:	cmp	x0, #0x0
   2ca0c:	b.ne	2c75c <omp_pause_resource_all@@OMP_5.0+0x9f8>  // b.any
   2ca10:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ca14:	add	x0, x0, #0x5a8
   2ca18:	ldr	w0, [x0]
   2ca1c:	sxtw	x1, w0
   2ca20:	mov	x0, x1
   2ca24:	lsl	x0, x0, #2
   2ca28:	add	x0, x0, x1
   2ca2c:	lsl	x0, x0, #2
   2ca30:	sub	x0, x0, x1
   2ca34:	lsl	x0, x0, #4
   2ca38:	bl	8850 <malloc@plt>
   2ca3c:	str	x0, [sp, #328]
   2ca40:	ldr	x0, [sp, #328]
   2ca44:	cmp	x0, #0x0
   2ca48:	b.ne	2ca74 <omp_pause_resource_all@@OMP_5.0+0xd10>  // b.any
   2ca4c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ca50:	add	x0, x0, #0x5a8
   2ca54:	str	wzr, [x0]
   2ca58:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ca5c:	add	x0, x0, #0x5a0
   2ca60:	ldr	x0, [x0]
   2ca64:	bl	8a20 <free@plt>
   2ca68:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ca6c:	add	x0, x0, #0x5a0
   2ca70:	str	xzr, [x0]
   2ca74:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ca78:	add	x0, x0, #0x5ac
   2ca7c:	str	wzr, [x0]
   2ca80:	str	wzr, [sp, #404]
   2ca84:	b	2cb58 <omp_pause_resource_all@@OMP_5.0+0xdf4>
   2ca88:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ca8c:	add	x0, x0, #0x5a0
   2ca90:	ldr	x2, [x0]
   2ca94:	ldrsw	x1, [sp, #404]
   2ca98:	mov	x0, x1
   2ca9c:	lsl	x0, x0, #2
   2caa0:	add	x0, x0, x1
   2caa4:	lsl	x0, x0, #2
   2caa8:	sub	x0, x0, x1
   2caac:	lsl	x0, x0, #4
   2cab0:	add	x0, x2, x0
   2cab4:	ldr	w0, [x0, #8]
   2cab8:	and	w0, w0, #0x4
   2cabc:	cmp	w0, #0x0
   2cac0:	b.eq	2cb4c <omp_pause_resource_all@@OMP_5.0+0xde8>  // b.none
   2cac4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cac8:	add	x0, x0, #0x5a0
   2cacc:	ldr	x2, [x0]
   2cad0:	ldrsw	x1, [sp, #404]
   2cad4:	mov	x0, x1
   2cad8:	lsl	x0, x0, #2
   2cadc:	add	x0, x0, x1
   2cae0:	lsl	x0, x0, #2
   2cae4:	sub	x0, x0, x1
   2cae8:	lsl	x0, x0, #4
   2caec:	add	x3, x2, x0
   2caf0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2caf4:	add	x0, x0, #0x5ac
   2caf8:	ldr	w0, [x0]
   2cafc:	add	w2, w0, #0x1
   2cb00:	adrp	x1, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cb04:	add	x1, x1, #0x5ac
   2cb08:	str	w2, [x1]
   2cb0c:	sxtw	x1, w0
   2cb10:	mov	x0, x1
   2cb14:	lsl	x0, x0, #2
   2cb18:	add	x0, x0, x1
   2cb1c:	lsl	x0, x0, #2
   2cb20:	sub	x0, x0, x1
   2cb24:	lsl	x0, x0, #4
   2cb28:	mov	x1, x0
   2cb2c:	ldr	x0, [sp, #328]
   2cb30:	add	x0, x0, x1
   2cb34:	mov	x4, x0
   2cb38:	mov	x1, x3
   2cb3c:	mov	x0, #0x130                 	// #304
   2cb40:	mov	x2, x0
   2cb44:	mov	x0, x4
   2cb48:	bl	86a0 <memcpy@plt>
   2cb4c:	ldr	w0, [sp, #404]
   2cb50:	add	w0, w0, #0x1
   2cb54:	str	w0, [sp, #404]
   2cb58:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cb5c:	add	x0, x0, #0x5a8
   2cb60:	ldr	w0, [x0]
   2cb64:	ldr	w1, [sp, #404]
   2cb68:	cmp	w1, w0
   2cb6c:	b.lt	2ca88 <omp_pause_resource_all@@OMP_5.0+0xd24>  // b.tstop
   2cb70:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cb74:	add	x0, x0, #0x5ac
   2cb78:	ldr	w0, [x0]
   2cb7c:	str	w0, [sp, #400]
   2cb80:	str	wzr, [sp, #404]
   2cb84:	b	2cc48 <omp_pause_resource_all@@OMP_5.0+0xee4>
   2cb88:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cb8c:	add	x0, x0, #0x5a0
   2cb90:	ldr	x2, [x0]
   2cb94:	ldrsw	x1, [sp, #404]
   2cb98:	mov	x0, x1
   2cb9c:	lsl	x0, x0, #2
   2cba0:	add	x0, x0, x1
   2cba4:	lsl	x0, x0, #2
   2cba8:	sub	x0, x0, x1
   2cbac:	lsl	x0, x0, #4
   2cbb0:	add	x0, x2, x0
   2cbb4:	ldr	w0, [x0, #8]
   2cbb8:	and	w0, w0, #0x4
   2cbbc:	cmp	w0, #0x0
   2cbc0:	b.ne	2cc3c <omp_pause_resource_all@@OMP_5.0+0xed8>  // b.any
   2cbc4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cbc8:	add	x0, x0, #0x5a0
   2cbcc:	ldr	x2, [x0]
   2cbd0:	ldrsw	x1, [sp, #404]
   2cbd4:	mov	x0, x1
   2cbd8:	lsl	x0, x0, #2
   2cbdc:	add	x0, x0, x1
   2cbe0:	lsl	x0, x0, #2
   2cbe4:	sub	x0, x0, x1
   2cbe8:	lsl	x0, x0, #4
   2cbec:	add	x2, x2, x0
   2cbf0:	ldr	w0, [sp, #400]
   2cbf4:	add	w1, w0, #0x1
   2cbf8:	str	w1, [sp, #400]
   2cbfc:	sxtw	x1, w0
   2cc00:	mov	x0, x1
   2cc04:	lsl	x0, x0, #2
   2cc08:	add	x0, x0, x1
   2cc0c:	lsl	x0, x0, #2
   2cc10:	sub	x0, x0, x1
   2cc14:	lsl	x0, x0, #4
   2cc18:	mov	x1, x0
   2cc1c:	ldr	x0, [sp, #328]
   2cc20:	add	x0, x0, x1
   2cc24:	mov	x3, x0
   2cc28:	mov	x1, x2
   2cc2c:	mov	x0, #0x130                 	// #304
   2cc30:	mov	x2, x0
   2cc34:	mov	x0, x3
   2cc38:	bl	86a0 <memcpy@plt>
   2cc3c:	ldr	w0, [sp, #404]
   2cc40:	add	w0, w0, #0x1
   2cc44:	str	w0, [sp, #404]
   2cc48:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cc4c:	add	x0, x0, #0x5a8
   2cc50:	ldr	w0, [x0]
   2cc54:	ldr	w1, [sp, #404]
   2cc58:	cmp	w1, w0
   2cc5c:	b.lt	2cb88 <omp_pause_resource_all@@OMP_5.0+0xe24>  // b.tstop
   2cc60:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cc64:	add	x0, x0, #0x5a0
   2cc68:	ldr	x0, [x0]
   2cc6c:	bl	8a20 <free@plt>
   2cc70:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cc74:	add	x0, x0, #0x5a0
   2cc78:	ldr	x1, [sp, #328]
   2cc7c:	str	x1, [x0]
   2cc80:	str	wzr, [sp, #404]
   2cc84:	b	2cd00 <omp_pause_resource_all@@OMP_5.0+0xf9c>
   2cc88:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cc8c:	add	x0, x0, #0x5a0
   2cc90:	ldr	x2, [x0]
   2cc94:	ldrsw	x1, [sp, #404]
   2cc98:	mov	x0, x1
   2cc9c:	lsl	x0, x0, #2
   2cca0:	add	x0, x0, x1
   2cca4:	lsl	x0, x0, #2
   2cca8:	sub	x0, x0, x1
   2ccac:	lsl	x0, x0, #4
   2ccb0:	add	x0, x2, x0
   2ccb4:	ldr	w0, [x0, #8]
   2ccb8:	and	w0, w0, #0x8
   2ccbc:	cmp	w0, #0x0
   2ccc0:	b.eq	2ccf4 <omp_pause_resource_all@@OMP_5.0+0xf90>  // b.none
   2ccc4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ccc8:	add	x0, x0, #0x5a0
   2cccc:	ldr	x2, [x0]
   2ccd0:	ldrsw	x1, [sp, #404]
   2ccd4:	mov	x0, x1
   2ccd8:	lsl	x0, x0, #2
   2ccdc:	add	x0, x0, x1
   2cce0:	lsl	x0, x0, #2
   2cce4:	sub	x0, x0, x1
   2cce8:	lsl	x0, x0, #4
   2ccec:	add	x0, x2, x0
   2ccf0:	bl	2f530 <GOACC_declare@@GOACC_2.0.1+0x6dc>
   2ccf4:	ldr	w0, [sp, #404]
   2ccf8:	add	w0, w0, #0x1
   2ccfc:	str	w0, [sp, #404]
   2cd00:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2cd04:	add	x0, x0, #0x5a8
   2cd08:	ldr	w0, [x0]
   2cd0c:	ldr	w1, [sp, #404]
   2cd10:	cmp	w1, w0
   2cd14:	b.lt	2cc88 <omp_pause_resource_all@@OMP_5.0+0xf24>  // b.tstop
   2cd18:	adrp	x0, 2c000 <omp_pause_resource_all@@OMP_5.0+0x29c>
   2cd1c:	add	x0, x0, #0x620
   2cd20:	bl	34a48 <omp_get_team_num@@OMP_4.0+0x14>
   2cd24:	cmp	w0, #0x0
   2cd28:	b.eq	2cd38 <omp_pause_resource_all@@OMP_5.0+0xfd4>  // b.none
   2cd2c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2cd30:	add	x0, x0, #0x270
   2cd34:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2cd38:	nop
   2cd3c:	ldp	x29, x30, [sp], #416
   2cd40:	ret
   2cd44:	sub	sp, sp, #0x10
   2cd48:	str	x0, [sp, #8]
   2cd4c:	str	x1, [sp]
   2cd50:	ldr	x0, [sp, #8]
   2cd54:	ldr	x1, [x0]
   2cd58:	ldr	x0, [sp, #8]
   2cd5c:	ldr	x0, [x0, #8]
   2cd60:	cmp	x1, x0
   2cd64:	b.ne	2cd88 <omp_pause_resource_all@@OMP_5.0+0x1024>  // b.any
   2cd68:	ldr	x0, [sp]
   2cd6c:	ldr	x1, [x0]
   2cd70:	ldr	x0, [sp]
   2cd74:	ldr	x0, [x0, #8]
   2cd78:	cmp	x1, x0
   2cd7c:	b.ne	2cd88 <omp_pause_resource_all@@OMP_5.0+0x1024>  // b.any
   2cd80:	mov	w0, #0x0                   	// #0
   2cd84:	b	2cdcc <omp_pause_resource_all@@OMP_5.0+0x1068>
   2cd88:	ldr	x0, [sp, #8]
   2cd8c:	ldr	x1, [x0, #8]
   2cd90:	ldr	x0, [sp]
   2cd94:	ldr	x0, [x0]
   2cd98:	cmp	x1, x0
   2cd9c:	b.hi	2cda8 <omp_pause_resource_all@@OMP_5.0+0x1044>  // b.pmore
   2cda0:	mov	w0, #0xffffffff            	// #-1
   2cda4:	b	2cdcc <omp_pause_resource_all@@OMP_5.0+0x1068>
   2cda8:	ldr	x0, [sp, #8]
   2cdac:	ldr	x1, [x0]
   2cdb0:	ldr	x0, [sp]
   2cdb4:	ldr	x0, [x0, #8]
   2cdb8:	cmp	x1, x0
   2cdbc:	b.cc	2cdc8 <omp_pause_resource_all@@OMP_5.0+0x1064>  // b.lo, b.ul, b.last
   2cdc0:	mov	w0, #0x1                   	// #1
   2cdc4:	b	2cdcc <omp_pause_resource_all@@OMP_5.0+0x1068>
   2cdc8:	mov	w0, #0x0                   	// #0
   2cdcc:	add	sp, sp, #0x10
   2cdd0:	ret
   2cdd4:	sub	sp, sp, #0x30
   2cdd8:	str	x0, [sp, #24]
   2cddc:	str	x1, [sp, #16]
   2cde0:	str	x2, [sp, #8]
   2cde4:	ldr	x0, [sp, #8]
   2cde8:	ldr	x0, [x0, #64]
   2cdec:	str	x0, [sp, #40]
   2cdf0:	ldr	x0, [sp, #8]
   2cdf4:	ldr	x1, [sp, #16]
   2cdf8:	str	x1, [x0, #64]
   2cdfc:	ldr	x0, [sp, #16]
   2ce00:	ldr	x1, [sp, #40]
   2ce04:	str	x1, [x0, #56]
   2ce08:	ldr	x0, [sp, #24]
   2ce0c:	ldr	x1, [sp, #8]
   2ce10:	str	x1, [x0]
   2ce14:	nop
   2ce18:	add	sp, sp, #0x30
   2ce1c:	ret
   2ce20:	sub	sp, sp, #0x30
   2ce24:	str	x0, [sp, #24]
   2ce28:	str	x1, [sp, #16]
   2ce2c:	str	x2, [sp, #8]
   2ce30:	ldr	x0, [sp, #8]
   2ce34:	ldr	x0, [x0, #56]
   2ce38:	str	x0, [sp, #40]
   2ce3c:	ldr	x0, [sp, #8]
   2ce40:	ldr	x1, [sp, #16]
   2ce44:	str	x1, [x0, #56]
   2ce48:	ldr	x0, [sp, #16]
   2ce4c:	ldr	x1, [sp, #40]
   2ce50:	str	x1, [x0, #64]
   2ce54:	ldr	x0, [sp, #24]
   2ce58:	ldr	x1, [sp, #8]
   2ce5c:	str	x1, [x0]
   2ce60:	nop
   2ce64:	add	sp, sp, #0x30
   2ce68:	ret
   2ce6c:	stp	x29, x30, [sp, #-64]!
   2ce70:	mov	x29, sp
   2ce74:	str	x0, [sp, #24]
   2ce78:	str	x1, [sp, #16]
   2ce7c:	ldr	x0, [sp, #24]
   2ce80:	ldr	x0, [x0]
   2ce84:	cmp	x0, #0x0
   2ce88:	b.eq	2d0d8 <omp_pause_resource_all@@OMP_5.0+0x1374>  // b.none
   2ce8c:	ldr	x0, [sp, #24]
   2ce90:	ldr	x0, [x0]
   2ce94:	str	x0, [sp, #48]
   2ce98:	ldr	x0, [sp, #48]
   2ce9c:	mov	x1, x0
   2cea0:	ldr	x0, [sp, #16]
   2cea4:	bl	2cd44 <omp_pause_resource_all@@OMP_5.0+0xfe0>
   2cea8:	str	w0, [sp, #44]
   2ceac:	ldr	w0, [sp, #44]
   2ceb0:	cmp	w0, #0x0
   2ceb4:	b.eq	2d0e0 <omp_pause_resource_all@@OMP_5.0+0x137c>  // b.none
   2ceb8:	ldr	w0, [sp, #44]
   2cebc:	cmp	w0, #0x0
   2cec0:	b.ge	2ced4 <omp_pause_resource_all@@OMP_5.0+0x1170>  // b.tcont
   2cec4:	ldr	x0, [sp, #48]
   2cec8:	ldr	x0, [x0, #56]
   2cecc:	str	x0, [sp, #56]
   2ced0:	b	2cee0 <omp_pause_resource_all@@OMP_5.0+0x117c>
   2ced4:	ldr	x0, [sp, #48]
   2ced8:	ldr	x0, [x0, #64]
   2cedc:	str	x0, [sp, #56]
   2cee0:	ldr	x0, [sp, #56]
   2cee4:	cmp	x0, #0x0
   2cee8:	b.eq	2d0e8 <omp_pause_resource_all@@OMP_5.0+0x1384>  // b.none
   2ceec:	ldr	x0, [sp, #56]
   2cef0:	mov	x1, x0
   2cef4:	ldr	x0, [sp, #16]
   2cef8:	bl	2cd44 <omp_pause_resource_all@@OMP_5.0+0xfe0>
   2cefc:	str	w0, [sp, #40]
   2cf00:	ldr	w0, [sp, #40]
   2cf04:	cmp	w0, #0x0
   2cf08:	b.eq	2cf44 <omp_pause_resource_all@@OMP_5.0+0x11e0>  // b.none
   2cf0c:	ldr	w0, [sp, #40]
   2cf10:	cmp	w0, #0x0
   2cf14:	b.ge	2cf28 <omp_pause_resource_all@@OMP_5.0+0x11c4>  // b.tcont
   2cf18:	ldr	x0, [sp, #56]
   2cf1c:	ldr	x0, [x0, #56]
   2cf20:	cmp	x0, #0x0
   2cf24:	b.eq	2cf44 <omp_pause_resource_all@@OMP_5.0+0x11e0>  // b.none
   2cf28:	ldr	w0, [sp, #40]
   2cf2c:	cmp	w0, #0x0
   2cf30:	b.le	2cf78 <omp_pause_resource_all@@OMP_5.0+0x1214>
   2cf34:	ldr	x0, [sp, #56]
   2cf38:	ldr	x0, [x0, #64]
   2cf3c:	cmp	x0, #0x0
   2cf40:	b.ne	2cf78 <omp_pause_resource_all@@OMP_5.0+0x1214>  // b.any
   2cf44:	ldr	w0, [sp, #44]
   2cf48:	cmp	w0, #0x0
   2cf4c:	b.ge	2cf64 <omp_pause_resource_all@@OMP_5.0+0x1200>  // b.tcont
   2cf50:	ldr	x0, [sp, #24]
   2cf54:	ldr	x2, [sp, #56]
   2cf58:	ldr	x1, [sp, #48]
   2cf5c:	bl	2cdd4 <omp_pause_resource_all@@OMP_5.0+0x1070>
   2cf60:	b	2d0ec <omp_pause_resource_all@@OMP_5.0+0x1388>
   2cf64:	ldr	x0, [sp, #24]
   2cf68:	ldr	x2, [sp, #56]
   2cf6c:	ldr	x1, [sp, #48]
   2cf70:	bl	2ce20 <omp_pause_resource_all@@OMP_5.0+0x10bc>
   2cf74:	b	2d0ec <omp_pause_resource_all@@OMP_5.0+0x1388>
   2cf78:	ldr	w0, [sp, #44]
   2cf7c:	cmp	w0, #0x0
   2cf80:	b.ge	2cfd0 <omp_pause_resource_all@@OMP_5.0+0x126c>  // b.tcont
   2cf84:	ldr	w0, [sp, #40]
   2cf88:	cmp	w0, #0x0
   2cf8c:	b.ge	2cfd0 <omp_pause_resource_all@@OMP_5.0+0x126c>  // b.tcont
   2cf90:	ldr	x0, [sp, #48]
   2cf94:	add	x3, x0, #0x38
   2cf98:	ldr	x0, [sp, #56]
   2cf9c:	ldr	x0, [x0, #56]
   2cfa0:	mov	x2, x0
   2cfa4:	ldr	x1, [sp, #56]
   2cfa8:	mov	x0, x3
   2cfac:	bl	2cdd4 <omp_pause_resource_all@@OMP_5.0+0x1070>
   2cfb0:	ldr	x3, [sp, #24]
   2cfb4:	ldr	x0, [sp, #48]
   2cfb8:	ldr	x0, [x0, #56]
   2cfbc:	mov	x2, x0
   2cfc0:	ldr	x1, [sp, #48]
   2cfc4:	mov	x0, x3
   2cfc8:	bl	2cdd4 <omp_pause_resource_all@@OMP_5.0+0x1070>
   2cfcc:	b	2d0d4 <omp_pause_resource_all@@OMP_5.0+0x1370>
   2cfd0:	ldr	w0, [sp, #44]
   2cfd4:	cmp	w0, #0x0
   2cfd8:	b.le	2d028 <omp_pause_resource_all@@OMP_5.0+0x12c4>
   2cfdc:	ldr	w0, [sp, #40]
   2cfe0:	cmp	w0, #0x0
   2cfe4:	b.le	2d028 <omp_pause_resource_all@@OMP_5.0+0x12c4>
   2cfe8:	ldr	x0, [sp, #48]
   2cfec:	add	x3, x0, #0x40
   2cff0:	ldr	x0, [sp, #56]
   2cff4:	ldr	x0, [x0, #64]
   2cff8:	mov	x2, x0
   2cffc:	ldr	x1, [sp, #56]
   2d000:	mov	x0, x3
   2d004:	bl	2ce20 <omp_pause_resource_all@@OMP_5.0+0x10bc>
   2d008:	ldr	x3, [sp, #24]
   2d00c:	ldr	x0, [sp, #48]
   2d010:	ldr	x0, [x0, #64]
   2d014:	mov	x2, x0
   2d018:	ldr	x1, [sp, #48]
   2d01c:	mov	x0, x3
   2d020:	bl	2ce20 <omp_pause_resource_all@@OMP_5.0+0x10bc>
   2d024:	b	2d0d4 <omp_pause_resource_all@@OMP_5.0+0x1370>
   2d028:	ldr	w0, [sp, #44]
   2d02c:	cmp	w0, #0x0
   2d030:	b.ge	2d080 <omp_pause_resource_all@@OMP_5.0+0x131c>  // b.tcont
   2d034:	ldr	w0, [sp, #40]
   2d038:	cmp	w0, #0x0
   2d03c:	b.le	2d080 <omp_pause_resource_all@@OMP_5.0+0x131c>
   2d040:	ldr	x0, [sp, #48]
   2d044:	add	x3, x0, #0x38
   2d048:	ldr	x0, [sp, #56]
   2d04c:	ldr	x0, [x0, #64]
   2d050:	mov	x2, x0
   2d054:	ldr	x1, [sp, #56]
   2d058:	mov	x0, x3
   2d05c:	bl	2ce20 <omp_pause_resource_all@@OMP_5.0+0x10bc>
   2d060:	ldr	x3, [sp, #24]
   2d064:	ldr	x0, [sp, #48]
   2d068:	ldr	x0, [x0, #56]
   2d06c:	mov	x2, x0
   2d070:	ldr	x1, [sp, #48]
   2d074:	mov	x0, x3
   2d078:	bl	2cdd4 <omp_pause_resource_all@@OMP_5.0+0x1070>
   2d07c:	b	2d0d4 <omp_pause_resource_all@@OMP_5.0+0x1370>
   2d080:	ldr	w0, [sp, #44]
   2d084:	cmp	w0, #0x0
   2d088:	b.le	2ce8c <omp_pause_resource_all@@OMP_5.0+0x1128>
   2d08c:	ldr	w0, [sp, #40]
   2d090:	cmp	w0, #0x0
   2d094:	b.ge	2ce8c <omp_pause_resource_all@@OMP_5.0+0x1128>  // b.tcont
   2d098:	ldr	x0, [sp, #48]
   2d09c:	add	x3, x0, #0x40
   2d0a0:	ldr	x0, [sp, #56]
   2d0a4:	ldr	x0, [x0, #56]
   2d0a8:	mov	x2, x0
   2d0ac:	ldr	x1, [sp, #56]
   2d0b0:	mov	x0, x3
   2d0b4:	bl	2cdd4 <omp_pause_resource_all@@OMP_5.0+0x1070>
   2d0b8:	ldr	x3, [sp, #24]
   2d0bc:	ldr	x0, [sp, #48]
   2d0c0:	ldr	x0, [x0, #64]
   2d0c4:	mov	x2, x0
   2d0c8:	ldr	x1, [sp, #48]
   2d0cc:	mov	x0, x3
   2d0d0:	bl	2ce20 <omp_pause_resource_all@@OMP_5.0+0x10bc>
   2d0d4:	b	2ce8c <omp_pause_resource_all@@OMP_5.0+0x1128>
   2d0d8:	nop
   2d0dc:	b	2d0ec <omp_pause_resource_all@@OMP_5.0+0x1388>
   2d0e0:	nop
   2d0e4:	b	2d0ec <omp_pause_resource_all@@OMP_5.0+0x1388>
   2d0e8:	nop
   2d0ec:	ldp	x29, x30, [sp], #64
   2d0f0:	ret
   2d0f4:	stp	x29, x30, [sp, #-48]!
   2d0f8:	mov	x29, sp
   2d0fc:	str	x0, [sp, #24]
   2d100:	str	x1, [sp, #16]
   2d104:	str	wzr, [sp, #44]
   2d108:	ldr	x0, [sp, #16]
   2d10c:	mov	x1, x0
   2d110:	ldr	x0, [sp, #24]
   2d114:	bl	2ce6c <omp_pause_resource_all@@OMP_5.0+0x1108>
   2d118:	ldr	x0, [sp, #24]
   2d11c:	ldr	x0, [x0]
   2d120:	cmp	x0, #0x0
   2d124:	b.eq	2d148 <omp_pause_resource_all@@OMP_5.0+0x13e4>  // b.none
   2d128:	ldr	x0, [sp, #24]
   2d12c:	ldr	x0, [x0]
   2d130:	mov	x2, x0
   2d134:	ldr	x0, [sp, #16]
   2d138:	mov	x1, x0
   2d13c:	mov	x0, x2
   2d140:	bl	2cd44 <omp_pause_resource_all@@OMP_5.0+0xfe0>
   2d144:	str	w0, [sp, #44]
   2d148:	ldr	x0, [sp, #24]
   2d14c:	ldr	x0, [x0]
   2d150:	cmp	x0, #0x0
   2d154:	b.eq	2d170 <omp_pause_resource_all@@OMP_5.0+0x140c>  // b.none
   2d158:	ldr	w0, [sp, #44]
   2d15c:	cmp	w0, #0x0
   2d160:	b.ne	2d170 <omp_pause_resource_all@@OMP_5.0+0x140c>  // b.any
   2d164:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2d168:	add	x0, x0, #0x2a0
   2d16c:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2d170:	ldr	x0, [sp, #24]
   2d174:	ldr	x0, [x0]
   2d178:	cmp	x0, #0x0
   2d17c:	b.ne	2d19c <omp_pause_resource_all@@OMP_5.0+0x1438>  // b.any
   2d180:	ldr	x0, [sp, #16]
   2d184:	str	xzr, [x0, #64]
   2d188:	ldr	x0, [sp, #16]
   2d18c:	ldr	x1, [x0, #64]
   2d190:	ldr	x0, [sp, #16]
   2d194:	str	x1, [x0, #56]
   2d198:	b	2d20c <omp_pause_resource_all@@OMP_5.0+0x14a8>
   2d19c:	ldr	w0, [sp, #44]
   2d1a0:	cmp	w0, #0x0
   2d1a4:	b.ge	2d1dc <omp_pause_resource_all@@OMP_5.0+0x1478>  // b.tcont
   2d1a8:	ldr	x0, [sp, #24]
   2d1ac:	ldr	x1, [x0]
   2d1b0:	ldr	x0, [sp, #16]
   2d1b4:	str	x1, [x0, #56]
   2d1b8:	ldr	x0, [sp, #16]
   2d1bc:	ldr	x0, [x0, #56]
   2d1c0:	ldr	x1, [x0, #64]
   2d1c4:	ldr	x0, [sp, #16]
   2d1c8:	str	x1, [x0, #64]
   2d1cc:	ldr	x0, [sp, #16]
   2d1d0:	ldr	x0, [x0, #56]
   2d1d4:	str	xzr, [x0, #64]
   2d1d8:	b	2d20c <omp_pause_resource_all@@OMP_5.0+0x14a8>
   2d1dc:	ldr	x0, [sp, #24]
   2d1e0:	ldr	x1, [x0]
   2d1e4:	ldr	x0, [sp, #16]
   2d1e8:	str	x1, [x0, #64]
   2d1ec:	ldr	x0, [sp, #16]
   2d1f0:	ldr	x0, [x0, #64]
   2d1f4:	ldr	x1, [x0, #56]
   2d1f8:	ldr	x0, [sp, #16]
   2d1fc:	str	x1, [x0, #56]
   2d200:	ldr	x0, [sp, #16]
   2d204:	ldr	x0, [x0, #64]
   2d208:	str	xzr, [x0, #56]
   2d20c:	ldr	x0, [sp, #24]
   2d210:	ldr	x1, [sp, #16]
   2d214:	str	x1, [x0]
   2d218:	nop
   2d21c:	ldp	x29, x30, [sp], #48
   2d220:	ret
   2d224:	stp	x29, x30, [sp, #-48]!
   2d228:	mov	x29, sp
   2d22c:	str	x0, [sp, #24]
   2d230:	str	x1, [sp, #16]
   2d234:	ldr	x1, [sp, #16]
   2d238:	ldr	x0, [sp, #24]
   2d23c:	bl	2ce6c <omp_pause_resource_all@@OMP_5.0+0x1108>
   2d240:	ldr	x0, [sp, #24]
   2d244:	ldr	x0, [x0]
   2d248:	cmp	x0, #0x0
   2d24c:	b.eq	2d2e8 <omp_pause_resource_all@@OMP_5.0+0x1584>  // b.none
   2d250:	ldr	x0, [sp, #24]
   2d254:	ldr	x0, [x0]
   2d258:	ldr	x1, [sp, #16]
   2d25c:	bl	2cd44 <omp_pause_resource_all@@OMP_5.0+0xfe0>
   2d260:	cmp	w0, #0x0
   2d264:	b.ne	2d2e8 <omp_pause_resource_all@@OMP_5.0+0x1584>  // b.any
   2d268:	ldr	x0, [sp, #24]
   2d26c:	ldr	x0, [x0]
   2d270:	ldr	x0, [x0, #56]
   2d274:	str	x0, [sp, #40]
   2d278:	ldr	x0, [sp, #24]
   2d27c:	ldr	x0, [x0]
   2d280:	ldr	x0, [x0, #64]
   2d284:	str	x0, [sp, #32]
   2d288:	ldr	x0, [sp, #40]
   2d28c:	cmp	x0, #0x0
   2d290:	b.eq	2d2dc <omp_pause_resource_all@@OMP_5.0+0x1578>  // b.none
   2d294:	ldr	x0, [sp, #24]
   2d298:	ldr	x1, [sp, #40]
   2d29c:	str	x1, [x0]
   2d2a0:	ldr	x0, [sp, #32]
   2d2a4:	cmp	x0, #0x0
   2d2a8:	b.eq	2d2e8 <omp_pause_resource_all@@OMP_5.0+0x1584>  // b.none
   2d2ac:	b	2d2bc <omp_pause_resource_all@@OMP_5.0+0x1558>
   2d2b0:	ldr	x0, [sp, #40]
   2d2b4:	ldr	x0, [x0, #64]
   2d2b8:	str	x0, [sp, #40]
   2d2bc:	ldr	x0, [sp, #40]
   2d2c0:	ldr	x0, [x0, #64]
   2d2c4:	cmp	x0, #0x0
   2d2c8:	b.ne	2d2b0 <omp_pause_resource_all@@OMP_5.0+0x154c>  // b.any
   2d2cc:	ldr	x0, [sp, #40]
   2d2d0:	ldr	x1, [sp, #32]
   2d2d4:	str	x1, [x0, #64]
   2d2d8:	b	2d2e8 <omp_pause_resource_all@@OMP_5.0+0x1584>
   2d2dc:	ldr	x0, [sp, #24]
   2d2e0:	ldr	x1, [sp, #32]
   2d2e4:	str	x1, [x0]
   2d2e8:	nop
   2d2ec:	ldp	x29, x30, [sp], #48
   2d2f0:	ret
   2d2f4:	stp	x29, x30, [sp, #-32]!
   2d2f8:	mov	x29, sp
   2d2fc:	str	x0, [sp, #24]
   2d300:	str	x1, [sp, #16]
   2d304:	ldr	x1, [sp, #16]
   2d308:	ldr	x0, [sp, #24]
   2d30c:	bl	2ce6c <omp_pause_resource_all@@OMP_5.0+0x1108>
   2d310:	ldr	x0, [sp, #24]
   2d314:	ldr	x0, [x0]
   2d318:	cmp	x0, #0x0
   2d31c:	b.eq	2d344 <omp_pause_resource_all@@OMP_5.0+0x15e0>  // b.none
   2d320:	ldr	x0, [sp, #24]
   2d324:	ldr	x0, [x0]
   2d328:	ldr	x1, [sp, #16]
   2d32c:	bl	2cd44 <omp_pause_resource_all@@OMP_5.0+0xfe0>
   2d330:	cmp	w0, #0x0
   2d334:	b.ne	2d344 <omp_pause_resource_all@@OMP_5.0+0x15e0>  // b.any
   2d338:	ldr	x0, [sp, #24]
   2d33c:	ldr	x0, [x0]
   2d340:	b	2d348 <omp_pause_resource_all@@OMP_5.0+0x15e4>
   2d344:	mov	x0, #0x0                   	// #0
   2d348:	ldp	x29, x30, [sp], #32
   2d34c:	ret
   2d350:	stp	x29, x30, [sp, #-48]!
   2d354:	mov	x29, sp
   2d358:	str	x0, [sp, #40]
   2d35c:	str	x1, [sp, #32]
   2d360:	str	x2, [sp, #24]
   2d364:	ldr	x0, [sp, #40]
   2d368:	cmp	x0, #0x0
   2d36c:	b.eq	2d3ac <omp_pause_resource_all@@OMP_5.0+0x1648>  // b.none
   2d370:	ldr	x0, [sp, #40]
   2d374:	ldr	x2, [sp, #32]
   2d378:	ldr	x1, [sp, #24]
   2d37c:	blr	x2
   2d380:	ldr	x0, [sp, #40]
   2d384:	ldr	x0, [x0, #56]
   2d388:	ldr	x2, [sp, #24]
   2d38c:	ldr	x1, [sp, #32]
   2d390:	bl	2d350 <omp_pause_resource_all@@OMP_5.0+0x15ec>
   2d394:	ldr	x0, [sp, #40]
   2d398:	ldr	x0, [x0, #64]
   2d39c:	ldr	x2, [sp, #24]
   2d3a0:	ldr	x1, [sp, #32]
   2d3a4:	bl	2d350 <omp_pause_resource_all@@OMP_5.0+0x15ec>
   2d3a8:	b	2d3b0 <omp_pause_resource_all@@OMP_5.0+0x164c>
   2d3ac:	nop
   2d3b0:	ldp	x29, x30, [sp], #48
   2d3b4:	ret
   2d3b8:	stp	x29, x30, [sp, #-48]!
   2d3bc:	mov	x29, sp
   2d3c0:	str	x0, [sp, #40]
   2d3c4:	str	x1, [sp, #32]
   2d3c8:	str	x2, [sp, #24]
   2d3cc:	ldr	x0, [sp, #40]
   2d3d0:	ldr	x0, [x0]
   2d3d4:	ldr	x2, [sp, #24]
   2d3d8:	ldr	x1, [sp, #32]
   2d3dc:	bl	2d350 <omp_pause_resource_all@@OMP_5.0+0x15ec>
   2d3e0:	nop
   2d3e4:	ldp	x29, x30, [sp], #48
   2d3e8:	ret

000000000002d3ec <GOMP_PLUGIN_malloc@@GOMP_PLUGIN_1.0>:
   2d3ec:	stp	x29, x30, [sp, #-32]!
   2d3f0:	mov	x29, sp
   2d3f4:	str	x0, [sp, #24]
   2d3f8:	ldr	x0, [sp, #24]
   2d3fc:	bl	8dd0 <fprintf@plt+0x1a0>
   2d400:	ldp	x29, x30, [sp], #32
   2d404:	ret

000000000002d408 <GOMP_PLUGIN_malloc_cleared@@GOMP_PLUGIN_1.0>:
   2d408:	stp	x29, x30, [sp, #-32]!
   2d40c:	mov	x29, sp
   2d410:	str	x0, [sp, #24]
   2d414:	ldr	x0, [sp, #24]
   2d418:	bl	8e10 <fprintf@plt+0x1e0>
   2d41c:	ldp	x29, x30, [sp], #32
   2d420:	ret

000000000002d424 <GOMP_PLUGIN_realloc@@GOMP_PLUGIN_1.0>:
   2d424:	stp	x29, x30, [sp, #-32]!
   2d428:	mov	x29, sp
   2d42c:	str	x0, [sp, #24]
   2d430:	str	x1, [sp, #16]
   2d434:	ldr	x1, [sp, #16]
   2d438:	ldr	x0, [sp, #24]
   2d43c:	bl	8e54 <fprintf@plt+0x224>
   2d440:	ldp	x29, x30, [sp], #32
   2d444:	ret

000000000002d448 <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0>:
   2d448:	stp	x29, x30, [sp, #-272]!
   2d44c:	mov	x29, sp
   2d450:	str	w0, [sp, #60]
   2d454:	str	x1, [sp, #48]
   2d458:	str	x2, [sp, #224]
   2d45c:	str	x3, [sp, #232]
   2d460:	str	x4, [sp, #240]
   2d464:	str	x5, [sp, #248]
   2d468:	str	x6, [sp, #256]
   2d46c:	str	x7, [sp, #264]
   2d470:	str	q0, [sp, #96]
   2d474:	str	q1, [sp, #112]
   2d478:	str	q2, [sp, #128]
   2d47c:	str	q3, [sp, #144]
   2d480:	str	q4, [sp, #160]
   2d484:	str	q5, [sp, #176]
   2d488:	str	q6, [sp, #192]
   2d48c:	str	q7, [sp, #208]
   2d490:	add	x0, sp, #0x110
   2d494:	str	x0, [sp, #64]
   2d498:	add	x0, sp, #0x110
   2d49c:	str	x0, [sp, #72]
   2d4a0:	add	x0, sp, #0xe0
   2d4a4:	str	x0, [sp, #80]
   2d4a8:	mov	w0, #0xffffffd0            	// #-48
   2d4ac:	str	w0, [sp, #88]
   2d4b0:	mov	w0, #0xffffff80            	// #-128
   2d4b4:	str	w0, [sp, #92]
   2d4b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2d4bc:	add	x0, x0, #0x630
   2d4c0:	ldr	w0, [x0]
   2d4c4:	sxtw	x0, w0
   2d4c8:	cmp	x0, #0x0
   2d4cc:	b.eq	2d4fc <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0+0xb4>  // b.none
   2d4d0:	add	x2, sp, #0x10
   2d4d4:	add	x3, sp, #0x40
   2d4d8:	ldp	x0, x1, [x3]
   2d4dc:	stp	x0, x1, [x2]
   2d4e0:	ldp	x0, x1, [x3, #16]
   2d4e4:	stp	x0, x1, [x2, #16]
   2d4e8:	add	x0, sp, #0x10
   2d4ec:	mov	x2, x0
   2d4f0:	ldr	x1, [sp, #48]
   2d4f4:	ldr	w0, [sp, #60]
   2d4f8:	bl	ce90 <GOMP_critical_name_end@@GOMP_1.0+0x3cc0>
   2d4fc:	nop
   2d500:	ldp	x29, x30, [sp], #272
   2d504:	ret

000000000002d508 <GOMP_PLUGIN_error@@GOMP_PLUGIN_1.0>:
   2d508:	stp	x29, x30, [sp, #-288]!
   2d50c:	mov	x29, sp
   2d510:	str	x0, [sp, #56]
   2d514:	str	x1, [sp, #232]
   2d518:	str	x2, [sp, #240]
   2d51c:	str	x3, [sp, #248]
   2d520:	str	x4, [sp, #256]
   2d524:	str	x5, [sp, #264]
   2d528:	str	x6, [sp, #272]
   2d52c:	str	x7, [sp, #280]
   2d530:	str	q0, [sp, #96]
   2d534:	str	q1, [sp, #112]
   2d538:	str	q2, [sp, #128]
   2d53c:	str	q3, [sp, #144]
   2d540:	str	q4, [sp, #160]
   2d544:	str	q5, [sp, #176]
   2d548:	str	q6, [sp, #192]
   2d54c:	str	q7, [sp, #208]
   2d550:	add	x0, sp, #0x120
   2d554:	str	x0, [sp, #64]
   2d558:	add	x0, sp, #0x120
   2d55c:	str	x0, [sp, #72]
   2d560:	add	x0, sp, #0xe0
   2d564:	str	x0, [sp, #80]
   2d568:	mov	w0, #0xffffffc8            	// #-56
   2d56c:	str	w0, [sp, #88]
   2d570:	mov	w0, #0xffffff80            	// #-128
   2d574:	str	w0, [sp, #92]
   2d578:	add	x2, sp, #0x10
   2d57c:	add	x3, sp, #0x40
   2d580:	ldp	x0, x1, [x3]
   2d584:	stp	x0, x1, [x2]
   2d588:	ldp	x0, x1, [x3, #16]
   2d58c:	stp	x0, x1, [x2, #16]
   2d590:	add	x0, sp, #0x10
   2d594:	mov	x1, x0
   2d598:	ldr	x0, [sp, #56]
   2d59c:	bl	cfac <GOMP_critical_name_end@@GOMP_1.0+0x3ddc>
   2d5a0:	nop
   2d5a4:	ldp	x29, x30, [sp], #288
   2d5a8:	ret

000000000002d5ac <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0>:
   2d5ac:	stp	x29, x30, [sp, #-288]!
   2d5b0:	mov	x29, sp
   2d5b4:	str	x0, [sp, #56]
   2d5b8:	str	x1, [sp, #232]
   2d5bc:	str	x2, [sp, #240]
   2d5c0:	str	x3, [sp, #248]
   2d5c4:	str	x4, [sp, #256]
   2d5c8:	str	x5, [sp, #264]
   2d5cc:	str	x6, [sp, #272]
   2d5d0:	str	x7, [sp, #280]
   2d5d4:	str	q0, [sp, #96]
   2d5d8:	str	q1, [sp, #112]
   2d5dc:	str	q2, [sp, #128]
   2d5e0:	str	q3, [sp, #144]
   2d5e4:	str	q4, [sp, #160]
   2d5e8:	str	q5, [sp, #176]
   2d5ec:	str	q6, [sp, #192]
   2d5f0:	str	q7, [sp, #208]
   2d5f4:	add	x0, sp, #0x120
   2d5f8:	str	x0, [sp, #64]
   2d5fc:	add	x0, sp, #0x120
   2d600:	str	x0, [sp, #72]
   2d604:	add	x0, sp, #0xe0
   2d608:	str	x0, [sp, #80]
   2d60c:	mov	w0, #0xffffffc8            	// #-56
   2d610:	str	w0, [sp, #88]
   2d614:	mov	w0, #0xffffff80            	// #-128
   2d618:	str	w0, [sp, #92]
   2d61c:	add	x2, sp, #0x10
   2d620:	add	x3, sp, #0x40
   2d624:	ldp	x0, x1, [x3]
   2d628:	stp	x0, x1, [x2]
   2d62c:	ldp	x0, x1, [x3, #16]
   2d630:	stp	x0, x1, [x2, #16]
   2d634:	add	x0, sp, #0x10
   2d638:	mov	x1, x0
   2d63c:	ldr	x0, [sp, #56]
   2d640:	bl	d0e8 <GOMP_critical_name_end@@GOMP_1.0+0x3f18>
   2d644:	stp	x29, x30, [sp, #-48]!
   2d648:	mov	x29, sp
   2d64c:	str	x0, [sp, #24]
   2d650:	str	wzr, [sp, #44]
   2d654:	ldr	x1, [sp, #24]
   2d658:	add	x0, sp, #0x2c
   2d65c:	ldr	w3, [x0]
   2d660:	mov	w4, #0x1                   	// #1
   2d664:	ldaxr	w2, [x1]
   2d668:	cmp	w2, w3
   2d66c:	b.ne	2d678 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xcc>  // b.any
   2d670:	stxr	w5, w4, [x1]
   2d674:	cbnz	w5, 2d664 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xb8>
   2d678:	cset	w1, eq  // eq = none
   2d67c:	cmp	w1, #0x0
   2d680:	b.ne	2d688 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xdc>  // b.any
   2d684:	str	w2, [x0]
   2d688:	mov	w0, w1
   2d68c:	eor	w0, w0, #0x1
   2d690:	and	w0, w0, #0xff
   2d694:	cmp	w0, #0x0
   2d698:	b.eq	2d6ac <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x100>  // b.none
   2d69c:	ldr	w0, [sp, #44]
   2d6a0:	mov	w1, w0
   2d6a4:	ldr	x0, [sp, #24]
   2d6a8:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
   2d6ac:	nop
   2d6b0:	ldp	x29, x30, [sp], #48
   2d6b4:	ret
   2d6b8:	stp	x29, x30, [sp, #-48]!
   2d6bc:	mov	x29, sp
   2d6c0:	str	x0, [sp, #24]
   2d6c4:	ldr	x1, [sp, #24]
   2d6c8:	ldxr	w0, [x1]
   2d6cc:	stlxr	w2, wzr, [x1]
   2d6d0:	cbnz	w2, 2d6c8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x11c>
   2d6d4:	str	w0, [sp, #44]
   2d6d8:	ldr	w0, [sp, #44]
   2d6dc:	lsr	w0, w0, #31
   2d6e0:	and	w0, w0, #0xff
   2d6e4:	and	x0, x0, #0xff
   2d6e8:	cmp	x0, #0x0
   2d6ec:	b.eq	2d6f8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x14c>  // b.none
   2d6f0:	ldr	x0, [sp, #24]
   2d6f4:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
   2d6f8:	nop
   2d6fc:	ldp	x29, x30, [sp], #48
   2d700:	ret
   2d704:	sub	sp, sp, #0x10
   2d708:	str	w0, [sp, #12]
   2d70c:	ldr	w0, [sp, #12]
   2d710:	add	sp, sp, #0x10
   2d714:	ret
   2d718:	mrs	x1, tpidr_el0
   2d71c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   2d720:	ldr	x0, [x0, #4048]
   2d724:	add	x0, x1, x0
   2d728:	ldr	x0, [x0]
   2d72c:	ret
   2d730:	sub	sp, sp, #0x10
   2d734:	str	w0, [sp, #12]
   2d738:	ldr	w0, [sp, #12]
   2d73c:	mvn	w0, w0
   2d740:	lsr	w0, w0, #31
   2d744:	and	w0, w0, #0xff
   2d748:	add	sp, sp, #0x10
   2d74c:	ret
   2d750:	stp	x29, x30, [sp, #-32]!
   2d754:	mov	x29, sp
   2d758:	str	w0, [sp, #28]
   2d75c:	ldr	w0, [sp, #28]
   2d760:	cmn	w0, #0x1
   2d764:	b.eq	2d788 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x1dc>  // b.none
   2d768:	ldr	w0, [sp, #28]
   2d76c:	cmn	w0, #0x2
   2d770:	b.eq	2d788 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x1dc>  // b.none
   2d774:	ldr	w0, [sp, #28]
   2d778:	bl	2d730 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x184>
   2d77c:	and	w0, w0, #0xff
   2d780:	cmp	w0, #0x0
   2d784:	b.eq	2d790 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x1e4>  // b.none
   2d788:	mov	w0, #0x1                   	// #1
   2d78c:	b	2d794 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x1e8>
   2d790:	mov	w0, #0x0                   	// #0
   2d794:	and	w0, w0, #0x1
   2d798:	and	w0, w0, #0xff
   2d79c:	ldp	x29, x30, [sp], #32
   2d7a0:	ret
   2d7a4:	stp	x29, x30, [sp, #-32]!
   2d7a8:	mov	x29, sp
   2d7ac:	str	w0, [sp, #28]
   2d7b0:	ldr	w0, [sp, #28]
   2d7b4:	bl	2d750 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x1a4>
   2d7b8:	and	w0, w0, #0xff
   2d7bc:	eor	w0, w0, #0x1
   2d7c0:	and	w0, w0, #0xff
   2d7c4:	cmp	w0, #0x0
   2d7c8:	b.eq	2d7d4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x228>  // b.none
   2d7cc:	mov	w0, #0x1                   	// #1
   2d7d0:	b	2d7e4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x238>
   2d7d4:	ldr	w0, [sp, #28]
   2d7d8:	cmn	w0, #0x2
   2d7dc:	cset	w0, eq  // eq = none
   2d7e0:	and	w0, w0, #0xff
   2d7e4:	ldp	x29, x30, [sp], #32
   2d7e8:	ret
   2d7ec:	sub	sp, sp, #0x30
   2d7f0:	str	w0, [sp, #28]
   2d7f4:	str	x1, [sp, #16]
   2d7f8:	str	x2, [sp, #8]
   2d7fc:	ldr	w0, [sp, #28]
   2d800:	add	w0, w0, #0x1
   2d804:	sxtw	x0, w0
   2d808:	ldr	x1, [sp, #16]
   2d80c:	cmp	x1, x0
   2d810:	b.hi	2d81c <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x270>  // b.pmore
   2d814:	mov	w0, #0x0                   	// #0
   2d818:	b	2d864 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x2b8>
   2d81c:	ldrsw	x0, [sp, #28]
   2d820:	add	x0, x0, #0x1
   2d824:	lsl	x0, x0, #1
   2d828:	ldr	x1, [sp, #8]
   2d82c:	add	x0, x1, x0
   2d830:	ldrh	w0, [x0]
   2d834:	strb	w0, [sp, #47]
   2d838:	ldrb	w0, [sp, #47]
   2d83c:	cmp	w0, #0x5
   2d840:	b.ne	2d84c <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x2a0>  // b.any
   2d844:	mov	w0, #0x3                   	// #3
   2d848:	b	2d864 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x2b8>
   2d84c:	ldrb	w0, [sp, #47]
   2d850:	cmp	w0, #0x4
   2d854:	b.ne	2d860 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x2b4>  // b.any
   2d858:	mov	w0, #0x2                   	// #2
   2d85c:	b	2d864 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x2b8>
   2d860:	mov	w0, #0x0                   	// #0
   2d864:	add	sp, sp, #0x30
   2d868:	ret
   2d86c:	sub	sp, sp, #0x30
   2d870:	str	x0, [sp, #24]
   2d874:	str	x1, [sp, #16]
   2d878:	str	x2, [sp, #8]
   2d87c:	str	x3, [sp]
   2d880:	str	wzr, [sp, #44]
   2d884:	b	2d9e0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x434>
   2d888:	ldrsw	x0, [sp, #44]
   2d88c:	lsl	x0, x0, #1
   2d890:	ldr	x1, [sp]
   2d894:	add	x0, x1, x0
   2d898:	ldrh	w0, [x0]
   2d89c:	and	w0, w0, #0xff
   2d8a0:	strh	w0, [sp, #40]
   2d8a4:	ldrh	w0, [sp, #40]
   2d8a8:	cmp	w0, #0x8
   2d8ac:	b.ne	2d9d4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x428>  // b.any
   2d8b0:	ldr	x0, [sp, #24]
   2d8b4:	sub	w0, w0, #0x1
   2d8b8:	ldr	w1, [sp, #44]
   2d8bc:	cmp	w1, w0
   2d8c0:	b.ge	2d8e8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x33c>  // b.tcont
   2d8c4:	ldrsw	x0, [sp, #44]
   2d8c8:	add	x0, x0, #0x1
   2d8cc:	lsl	x0, x0, #1
   2d8d0:	ldr	x1, [sp]
   2d8d4:	add	x0, x1, x0
   2d8d8:	ldrh	w0, [x0]
   2d8dc:	and	w0, w0, #0xff
   2d8e0:	strh	w0, [sp, #42]
   2d8e4:	b	2d8f0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x344>
   2d8e8:	mov	w0, #0xffffffff            	// #-1
   2d8ec:	strh	w0, [sp, #42]
   2d8f0:	ldrsw	x0, [sp, #44]
   2d8f4:	lsl	x0, x0, #3
   2d8f8:	ldr	x1, [sp, #8]
   2d8fc:	add	x0, x1, x0
   2d900:	ldr	x0, [x0]
   2d904:	cmp	x0, #0x8
   2d908:	b.eq	2d9d0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x424>  // b.none
   2d90c:	ldrh	w0, [sp, #42]
   2d910:	cmp	w0, #0x4
   2d914:	b.ne	2d9b8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x40c>  // b.any
   2d918:	ldrsw	x0, [sp, #44]
   2d91c:	add	x0, x0, #0x1
   2d920:	lsl	x0, x0, #3
   2d924:	ldr	x1, [sp, #8]
   2d928:	add	x0, x1, x0
   2d92c:	ldr	x0, [x0]
   2d930:	cmp	x0, #0x0
   2d934:	b.ne	2d9b8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x40c>  // b.any
   2d938:	ldrsw	x0, [sp, #44]
   2d93c:	lsl	x0, x0, #3
   2d940:	ldr	x1, [sp, #16]
   2d944:	add	x0, x1, x0
   2d948:	ldr	x1, [x0]
   2d94c:	ldrsw	x0, [sp, #44]
   2d950:	add	x0, x0, #0x1
   2d954:	lsl	x0, x0, #3
   2d958:	ldr	x2, [sp, #16]
   2d95c:	add	x0, x2, x0
   2d960:	ldr	x0, [x0]
   2d964:	ldr	x0, [x0]
   2d968:	cmp	x1, x0
   2d96c:	b.ne	2d9b8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x40c>  // b.any
   2d970:	ldrsw	x0, [sp, #44]
   2d974:	lsl	x0, x0, #1
   2d978:	ldr	x1, [sp]
   2d97c:	add	x1, x1, x0
   2d980:	ldrsw	x0, [sp, #44]
   2d984:	add	x0, x0, #0x1
   2d988:	lsl	x0, x0, #1
   2d98c:	ldr	x2, [sp]
   2d990:	add	x0, x2, x0
   2d994:	ldrh	w1, [x1]
   2d998:	strh	w1, [x0]
   2d99c:	ldrsw	x0, [sp, #44]
   2d9a0:	add	x0, x0, #0x1
   2d9a4:	lsl	x0, x0, #3
   2d9a8:	ldr	x1, [sp, #8]
   2d9ac:	add	x0, x1, x0
   2d9b0:	mov	x1, #0x8                   	// #8
   2d9b4:	str	x1, [x0]
   2d9b8:	ldrsw	x0, [sp, #44]
   2d9bc:	lsl	x0, x0, #3
   2d9c0:	ldr	x1, [sp, #16]
   2d9c4:	add	x0, x1, x0
   2d9c8:	str	xzr, [x0]
   2d9cc:	b	2d9d4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x428>
   2d9d0:	nop
   2d9d4:	ldr	w0, [sp, #44]
   2d9d8:	add	w0, w0, #0x1
   2d9dc:	str	w0, [sp, #44]
   2d9e0:	ldrsw	x0, [sp, #44]
   2d9e4:	ldr	x1, [sp, #24]
   2d9e8:	cmp	x1, x0
   2d9ec:	b.hi	2d888 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x2dc>  // b.pmore
   2d9f0:	nop
   2d9f4:	nop
   2d9f8:	add	sp, sp, #0x30
   2d9fc:	ret

000000000002da00 <GOACC_parallel_keyed@@GOACC_2.0.1>:
   2da00:	stp	x29, x30, [sp, #-432]!
   2da04:	mov	x29, sp
   2da08:	str	w0, [x29, #60]
   2da0c:	str	x1, [x29, #48]
   2da10:	str	x2, [x29, #40]
   2da14:	str	x3, [x29, #32]
   2da18:	str	x4, [x29, #24]
   2da1c:	str	x5, [x29, #16]
   2da20:	str	x6, [x29, #416]
   2da24:	str	x7, [x29, #424]
   2da28:	str	q0, [x29, #288]
   2da2c:	str	q1, [x29, #304]
   2da30:	str	q2, [x29, #320]
   2da34:	str	q3, [x29, #336]
   2da38:	str	q4, [x29, #352]
   2da3c:	str	q5, [x29, #368]
   2da40:	str	q6, [x29, #384]
   2da44:	str	q7, [x29, #400]
   2da48:	ldr	w0, [x29, #60]
   2da4c:	mvn	w0, w0
   2da50:	str	w0, [x29, #252]
   2da54:	mov	w0, #0xfffffffe            	// #-2
   2da58:	str	w0, [x29, #268]
   2da5c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2da60:	add	x0, x0, #0x630
   2da64:	ldr	w0, [x0]
   2da68:	sxtw	x0, w0
   2da6c:	cmp	x0, #0x0
   2da70:	b.eq	2da9c <GOACC_parallel_keyed@@GOACC_2.0.1+0x9c>  // b.none
   2da74:	ldr	x6, [x29, #16]
   2da78:	ldr	x5, [x29, #24]
   2da7c:	ldr	x4, [x29, #32]
   2da80:	ldr	x3, [x29, #40]
   2da84:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2da88:	add	x2, x0, #0x490
   2da8c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2da90:	add	x1, x0, #0x2b0
   2da94:	mov	w0, #0x0                   	// #0
   2da98:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   2da9c:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   2daa0:	bl	2d718 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x16c>
   2daa4:	str	x0, [x29, #240]
   2daa8:	ldr	x0, [x29, #240]
   2daac:	ldr	x0, [x0, #8]
   2dab0:	str	x0, [x29, #232]
   2dab4:	ldr	x3, [x29, #16]
   2dab8:	ldr	x2, [x29, #24]
   2dabc:	ldr	x1, [x29, #32]
   2dac0:	ldr	x0, [x29, #40]
   2dac4:	bl	2d86c <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x2c0>
   2dac8:	ldr	w0, [x29, #252]
   2dacc:	and	w0, w0, #0x1
   2dad0:	cmp	w0, #0x0
   2dad4:	b.eq	2daf4 <GOACC_parallel_keyed@@GOACC_2.0.1+0xf4>  // b.none
   2dad8:	mov	w0, #0x2                   	// #2
   2dadc:	bl	30728 <acc_on_device@@OACC_2.0+0x70>
   2dae0:	ldr	x1, [x29, #48]
   2dae4:	ldr	x0, [x29, #32]
   2dae8:	blr	x1
   2daec:	bl	307a0 <acc_on_device@@OACC_2.0+0xe8>
   2daf0:	b	2e024 <GOACC_parallel_keyed@@GOACC_2.0.1+0x624>
   2daf4:	ldr	x0, [x29, #232]
   2daf8:	ldr	w0, [x0, #16]
   2dafc:	bl	2d704 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x158>
   2db00:	cmp	w0, #0x2
   2db04:	b.ne	2db18 <GOACC_parallel_keyed@@GOACC_2.0.1+0x118>  // b.any
   2db08:	ldr	x1, [x29, #48]
   2db0c:	ldr	x0, [x29, #32]
   2db10:	blr	x1
   2db14:	b	2e024 <GOACC_parallel_keyed@@GOACC_2.0.1+0x624>
   2db18:	str	wzr, [x29, #284]
   2db1c:	b	2db3c <GOACC_parallel_keyed@@GOACC_2.0.1+0x13c>
   2db20:	ldr	w0, [x29, #284]
   2db24:	lsl	x0, x0, #2
   2db28:	add	x1, x29, #0x48
   2db2c:	str	wzr, [x1, x0]
   2db30:	ldr	w0, [x29, #284]
   2db34:	add	w0, w0, #0x1
   2db38:	str	w0, [x29, #284]
   2db3c:	ldr	w0, [x29, #284]
   2db40:	cmp	w0, #0x3
   2db44:	b.ne	2db20 <GOACC_parallel_keyed@@GOACC_2.0.1+0x120>  // b.any
   2db48:	add	x0, x29, #0x1b0
   2db4c:	str	x0, [x29, #144]
   2db50:	add	x0, x29, #0x1b0
   2db54:	str	x0, [x29, #152]
   2db58:	add	x0, x29, #0x1a0
   2db5c:	str	x0, [x29, #160]
   2db60:	mov	w0, #0xfffffff0            	// #-16
   2db64:	str	w0, [x29, #168]
   2db68:	mov	w0, #0xffffff80            	// #-128
   2db6c:	str	w0, [x29, #172]
   2db70:	b	2dd34 <GOACC_parallel_keyed@@GOACC_2.0.1+0x334>
   2db74:	ldr	w0, [x29, #228]
   2db78:	lsr	w0, w0, #16
   2db7c:	and	w0, w0, #0xfff
   2db80:	cmp	w0, #0x0
   2db84:	b.eq	2dba4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1a4>  // b.none
   2db88:	ldr	w0, [x29, #228]
   2db8c:	lsr	w0, w0, #16
   2db90:	and	w0, w0, #0xfff
   2db94:	mov	w1, w0
   2db98:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2db9c:	add	x0, x0, #0x2e8
   2dba0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2dba4:	ldr	w0, [x29, #228]
   2dba8:	lsr	w0, w0, #28
   2dbac:	cmp	w0, #0x3
   2dbb0:	b.eq	2dcf4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2f4>  // b.none
   2dbb4:	cmp	w0, #0x3
   2dbb8:	b.hi	2dd1c <GOACC_parallel_keyed@@GOACC_2.0.1+0x31c>  // b.pmore
   2dbbc:	cmp	w0, #0x1
   2dbc0:	b.eq	2dbd0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1d0>  // b.none
   2dbc4:	cmp	w0, #0x2
   2dbc8:	b.eq	2dc7c <GOACC_parallel_keyed@@GOACC_2.0.1+0x27c>  // b.none
   2dbcc:	b	2dd1c <GOACC_parallel_keyed@@GOACC_2.0.1+0x31c>
   2dbd0:	ldr	w0, [x29, #228]
   2dbd4:	and	w0, w0, #0xffff
   2dbd8:	str	w0, [x29, #176]
   2dbdc:	str	wzr, [x29, #284]
   2dbe0:	b	2dc6c <GOACC_parallel_keyed@@GOACC_2.0.1+0x26c>
   2dbe4:	ldr	w0, [x29, #284]
   2dbe8:	ldr	w1, [x29, #176]
   2dbec:	lsr	w0, w1, w0
   2dbf0:	and	w0, w0, #0x1
   2dbf4:	cmp	w0, #0x0
   2dbf8:	b.eq	2dc60 <GOACC_parallel_keyed@@GOACC_2.0.1+0x260>  // b.none
   2dbfc:	ldr	w1, [x29, #168]
   2dc00:	ldr	x0, [x29, #144]
   2dc04:	cmp	w1, #0x0
   2dc08:	b.lt	2dc1c <GOACC_parallel_keyed@@GOACC_2.0.1+0x21c>  // b.tstop
   2dc0c:	add	x1, x0, #0xb
   2dc10:	and	x1, x1, #0xfffffffffffffff8
   2dc14:	str	x1, [x29, #144]
   2dc18:	b	2dc4c <GOACC_parallel_keyed@@GOACC_2.0.1+0x24c>
   2dc1c:	add	w2, w1, #0x8
   2dc20:	str	w2, [x29, #168]
   2dc24:	ldr	w2, [x29, #168]
   2dc28:	cmp	w2, #0x0
   2dc2c:	b.le	2dc40 <GOACC_parallel_keyed@@GOACC_2.0.1+0x240>
   2dc30:	add	x1, x0, #0xb
   2dc34:	and	x1, x1, #0xfffffffffffffff8
   2dc38:	str	x1, [x29, #144]
   2dc3c:	b	2dc4c <GOACC_parallel_keyed@@GOACC_2.0.1+0x24c>
   2dc40:	ldr	x2, [x29, #152]
   2dc44:	sxtw	x0, w1
   2dc48:	add	x0, x2, x0
   2dc4c:	ldr	w2, [x0]
   2dc50:	ldr	w0, [x29, #284]
   2dc54:	lsl	x0, x0, #2
   2dc58:	add	x1, x29, #0x48
   2dc5c:	str	w2, [x1, x0]
   2dc60:	ldr	w0, [x29, #284]
   2dc64:	add	w0, w0, #0x1
   2dc68:	str	w0, [x29, #284]
   2dc6c:	ldr	w0, [x29, #284]
   2dc70:	cmp	w0, #0x3
   2dc74:	b.ne	2dbe4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1e4>  // b.any
   2dc78:	b	2dd34 <GOACC_parallel_keyed@@GOACC_2.0.1+0x334>
   2dc7c:	ldr	w0, [x29, #228]
   2dc80:	and	w0, w0, #0xffff
   2dc84:	str	w0, [x29, #268]
   2dc88:	ldr	w1, [x29, #268]
   2dc8c:	mov	w0, #0xffff                	// #65535
   2dc90:	cmp	w1, w0
   2dc94:	b.ne	2dd34 <GOACC_parallel_keyed@@GOACC_2.0.1+0x334>  // b.any
   2dc98:	ldr	w1, [x29, #168]
   2dc9c:	ldr	x0, [x29, #144]
   2dca0:	cmp	w1, #0x0
   2dca4:	b.lt	2dcb8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2b8>  // b.tstop
   2dca8:	add	x1, x0, #0xb
   2dcac:	and	x1, x1, #0xfffffffffffffff8
   2dcb0:	str	x1, [x29, #144]
   2dcb4:	b	2dce8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2e8>
   2dcb8:	add	w2, w1, #0x8
   2dcbc:	str	w2, [x29, #168]
   2dcc0:	ldr	w2, [x29, #168]
   2dcc4:	cmp	w2, #0x0
   2dcc8:	b.le	2dcdc <GOACC_parallel_keyed@@GOACC_2.0.1+0x2dc>
   2dccc:	add	x1, x0, #0xb
   2dcd0:	and	x1, x1, #0xfffffffffffffff8
   2dcd4:	str	x1, [x29, #144]
   2dcd8:	b	2dce8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2e8>
   2dcdc:	ldr	x2, [x29, #152]
   2dce0:	sxtw	x0, w1
   2dce4:	add	x0, x2, x0
   2dce8:	ldr	w0, [x0]
   2dcec:	str	w0, [x29, #268]
   2dcf0:	b	2dd34 <GOACC_parallel_keyed@@GOACC_2.0.1+0x334>
   2dcf4:	ldr	w0, [x29, #228]
   2dcf8:	and	w0, w0, #0xffff
   2dcfc:	str	w0, [x29, #180]
   2dd00:	ldr	w0, [x29, #180]
   2dd04:	add	x1, x29, #0x90
   2dd08:	mov	x2, x1
   2dd0c:	mov	w1, w0
   2dd10:	ldr	w0, [x29, #268]
   2dd14:	bl	2e8fc <GOACC_enter_exit_data@@GOACC_2.0+0x624>
   2dd18:	b	2dd34 <GOACC_parallel_keyed@@GOACC_2.0.1+0x334>
   2dd1c:	ldr	w0, [x29, #228]
   2dd20:	lsr	w0, w0, #28
   2dd24:	mov	w1, w0
   2dd28:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2dd2c:	add	x0, x0, #0x320
   2dd30:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2dd34:	ldr	w1, [x29, #168]
   2dd38:	ldr	x0, [x29, #144]
   2dd3c:	cmp	w1, #0x0
   2dd40:	b.lt	2dd54 <GOACC_parallel_keyed@@GOACC_2.0.1+0x354>  // b.tstop
   2dd44:	add	x1, x0, #0xb
   2dd48:	and	x1, x1, #0xfffffffffffffff8
   2dd4c:	str	x1, [x29, #144]
   2dd50:	b	2dd84 <GOACC_parallel_keyed@@GOACC_2.0.1+0x384>
   2dd54:	add	w2, w1, #0x8
   2dd58:	str	w2, [x29, #168]
   2dd5c:	ldr	w2, [x29, #168]
   2dd60:	cmp	w2, #0x0
   2dd64:	b.le	2dd78 <GOACC_parallel_keyed@@GOACC_2.0.1+0x378>
   2dd68:	add	x1, x0, #0xb
   2dd6c:	and	x1, x1, #0xfffffffffffffff8
   2dd70:	str	x1, [x29, #144]
   2dd74:	b	2dd84 <GOACC_parallel_keyed@@GOACC_2.0.1+0x384>
   2dd78:	ldr	x2, [x29, #152]
   2dd7c:	sxtw	x0, w1
   2dd80:	add	x0, x2, x0
   2dd84:	ldr	w0, [x0]
   2dd88:	str	w0, [x29, #228]
   2dd8c:	ldr	w0, [x29, #228]
   2dd90:	cmp	w0, #0x0
   2dd94:	b.ne	2db74 <GOACC_parallel_keyed@@GOACC_2.0.1+0x174>  // b.any
   2dd98:	ldr	x0, [x29, #232]
   2dd9c:	ldr	x1, [x0, #248]
   2dda0:	ldr	w0, [x29, #268]
   2dda4:	blr	x1
   2dda8:	ldr	x0, [x29, #232]
   2ddac:	ldr	w0, [x0, #8]
   2ddb0:	and	w0, w0, #0x2
   2ddb4:	cmp	w0, #0x0
   2ddb8:	b.ne	2de24 <GOACC_parallel_keyed@@GOACC_2.0.1+0x424>  // b.any
   2ddbc:	ldr	x0, [x29, #48]
   2ddc0:	str	x0, [x29, #88]
   2ddc4:	ldr	x0, [x29, #88]
   2ddc8:	add	x0, x0, #0x1
   2ddcc:	str	x0, [x29, #96]
   2ddd0:	ldr	x0, [x29, #232]
   2ddd4:	add	x0, x0, #0xa8
   2ddd8:	bl	2d644 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x98>
   2dddc:	ldr	x0, [x29, #232]
   2dde0:	add	x0, x0, #0xa0
   2dde4:	add	x1, x29, #0x58
   2dde8:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   2ddec:	str	x0, [x29, #216]
   2ddf0:	ldr	x0, [x29, #232]
   2ddf4:	add	x0, x0, #0xa8
   2ddf8:	bl	2d6b8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x10c>
   2ddfc:	ldr	x0, [x29, #216]
   2de00:	cmp	x0, #0x0
   2de04:	b.ne	2de14 <GOACC_parallel_keyed@@GOACC_2.0.1+0x414>  // b.any
   2de08:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2de0c:	add	x0, x0, #0x358
   2de10:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2de14:	ldr	x0, [x29, #216]
   2de18:	ldr	x0, [x0, #24]
   2de1c:	str	x0, [x29, #272]
   2de20:	b	2de2c <GOACC_parallel_keyed@@GOACC_2.0.1+0x42c>
   2de24:	ldr	x0, [x29, #48]
   2de28:	str	x0, [x29, #272]
   2de2c:	mov	w7, #0x0                   	// #0
   2de30:	mov	w6, #0x1                   	// #1
   2de34:	ldr	x5, [x29, #16]
   2de38:	ldr	x4, [x29, #24]
   2de3c:	mov	x3, #0x0                   	// #0
   2de40:	ldr	x2, [x29, #32]
   2de44:	ldr	x1, [x29, #40]
   2de48:	ldr	x0, [x29, #232]
   2de4c:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   2de50:	str	x0, [x29, #208]
   2de54:	ldr	x0, [x29, #40]
   2de58:	lsl	x0, x0, #3
   2de5c:	add	x0, x0, #0xf
   2de60:	lsr	x0, x0, #4
   2de64:	lsl	x0, x0, #4
   2de68:	sub	sp, sp, x0
   2de6c:	mov	x0, sp
   2de70:	add	x0, x0, #0xf
   2de74:	lsr	x0, x0, #4
   2de78:	lsl	x0, x0, #4
   2de7c:	str	x0, [x29, #200]
   2de80:	str	wzr, [x29, #284]
   2de84:	b	2df04 <GOACC_parallel_keyed@@GOACC_2.0.1+0x504>
   2de88:	ldr	x1, [x29, #208]
   2de8c:	ldr	w0, [x29, #284]
   2de90:	add	x0, x0, #0x2
   2de94:	lsl	x0, x0, #5
   2de98:	add	x0, x1, x0
   2de9c:	ldr	x0, [x0]
   2dea0:	ldr	x0, [x0, #16]
   2dea4:	ldr	x1, [x0, #16]
   2dea8:	ldr	x2, [x29, #208]
   2deac:	ldr	w0, [x29, #284]
   2deb0:	add	x0, x0, #0x2
   2deb4:	lsl	x0, x0, #5
   2deb8:	add	x0, x2, x0
   2debc:	ldr	x0, [x0]
   2dec0:	ldr	x0, [x0, #24]
   2dec4:	add	x1, x1, x0
   2dec8:	ldr	x2, [x29, #208]
   2decc:	ldr	w0, [x29, #284]
   2ded0:	lsl	x0, x0, #5
   2ded4:	add	x0, x2, x0
   2ded8:	ldr	x0, [x0, #80]
   2dedc:	add	x2, x1, x0
   2dee0:	ldr	w0, [x29, #284]
   2dee4:	lsl	x0, x0, #3
   2dee8:	ldr	x1, [x29, #200]
   2deec:	add	x0, x1, x0
   2def0:	mov	x1, x2
   2def4:	str	x1, [x0]
   2def8:	ldr	w0, [x29, #284]
   2defc:	add	w0, w0, #0x1
   2df00:	str	w0, [x29, #284]
   2df04:	ldr	w0, [x29, #284]
   2df08:	ldr	x1, [x29, #40]
   2df0c:	cmp	x1, x0
   2df10:	b.hi	2de88 <GOACC_parallel_keyed@@GOACC_2.0.1+0x488>  // b.pmore
   2df14:	ldr	x0, [x29, #232]
   2df18:	ldr	x7, [x0, #184]
   2df1c:	ldr	x0, [x29, #272]
   2df20:	add	x1, x29, #0x48
   2df24:	ldr	x6, [x29, #208]
   2df28:	mov	x5, x1
   2df2c:	ldr	w4, [x29, #268]
   2df30:	ldr	x3, [x29, #200]
   2df34:	ldr	x2, [x29, #32]
   2df38:	ldr	x1, [x29, #40]
   2df3c:	blr	x7
   2df40:	mov	w0, #0x1                   	// #1
   2df44:	strb	w0, [x29, #199]
   2df48:	ldr	w0, [x29, #268]
   2df4c:	bl	2d7a4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x1f8>
   2df50:	and	w0, w0, #0xff
   2df54:	cmp	w0, #0x0
   2df58:	b.eq	2df6c <GOACC_parallel_keyed@@GOACC_2.0.1+0x56c>  // b.none
   2df5c:	mov	w1, #0x1                   	// #1
   2df60:	ldr	x0, [x29, #208]
   2df64:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   2df68:	b	2e014 <GOACC_parallel_keyed@@GOACC_2.0.1+0x614>
   2df6c:	strb	wzr, [x29, #267]
   2df70:	str	xzr, [x29, #256]
   2df74:	b	2dfc8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x5c8>
   2df78:	ldr	x1, [x29, #208]
   2df7c:	ldr	x0, [x29, #256]
   2df80:	add	x0, x0, #0x2
   2df84:	lsl	x0, x0, #5
   2df88:	add	x0, x1, x0
   2df8c:	ldr	x0, [x0]
   2df90:	str	x0, [x29, #184]
   2df94:	ldr	x0, [x29, #184]
   2df98:	cmp	x0, #0x0
   2df9c:	b.eq	2dfbc <GOACC_parallel_keyed@@GOACC_2.0.1+0x5bc>  // b.none
   2dfa0:	ldr	x0, [x29, #184]
   2dfa4:	ldr	x0, [x0, #32]
   2dfa8:	cmp	x0, #0x1
   2dfac:	b.ne	2dfbc <GOACC_parallel_keyed@@GOACC_2.0.1+0x5bc>  // b.any
   2dfb0:	mov	w0, #0x1                   	// #1
   2dfb4:	strb	w0, [x29, #267]
   2dfb8:	b	2dfdc <GOACC_parallel_keyed@@GOACC_2.0.1+0x5dc>
   2dfbc:	ldr	x0, [x29, #256]
   2dfc0:	add	x0, x0, #0x1
   2dfc4:	str	x0, [x29, #256]
   2dfc8:	ldr	x0, [x29, #208]
   2dfcc:	ldr	x0, [x0, #48]
   2dfd0:	ldr	x1, [x29, #256]
   2dfd4:	cmp	x1, x0
   2dfd8:	b.cc	2df78 <GOACC_parallel_keyed@@GOACC_2.0.1+0x578>  // b.lo, b.ul, b.last
   2dfdc:	ldrb	w0, [x29, #267]
   2dfe0:	cmp	w0, #0x0
   2dfe4:	b.eq	2e004 <GOACC_parallel_keyed@@GOACC_2.0.1+0x604>  // b.none
   2dfe8:	ldr	x0, [x29, #208]
   2dfec:	ldr	x0, [x0, #56]
   2dff0:	ldr	x2, [x0, #192]
   2dff4:	ldr	w1, [x29, #268]
   2dff8:	ldr	x0, [x29, #208]
   2dffc:	blr	x2
   2e000:	b	2e014 <GOACC_parallel_keyed@@GOACC_2.0.1+0x614>
   2e004:	strb	wzr, [x29, #199]
   2e008:	ldrb	w1, [x29, #199]
   2e00c:	ldr	x0, [x29, #208]
   2e010:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   2e014:	ldr	x0, [x29, #232]
   2e018:	ldr	x1, [x0, #248]
   2e01c:	mov	w0, #0xfffffffe            	// #-2
   2e020:	blr	x1
   2e024:	mov	sp, x29
   2e028:	ldp	x29, x30, [sp], #432
   2e02c:	ret

000000000002e030 <GOACC_parallel@@GOACC_2.0>:
   2e030:	stp	x29, x30, [sp, #-208]!
   2e034:	mov	x29, sp
   2e038:	str	w0, [sp, #76]
   2e03c:	str	x1, [sp, #64]
   2e040:	str	x2, [sp, #56]
   2e044:	str	x3, [sp, #48]
   2e048:	str	x4, [sp, #40]
   2e04c:	str	x5, [sp, #32]
   2e050:	str	w6, [sp, #72]
   2e054:	str	w7, [sp, #28]
   2e058:	str	q0, [sp, #80]
   2e05c:	str	q1, [sp, #96]
   2e060:	str	q2, [sp, #112]
   2e064:	str	q3, [sp, #128]
   2e068:	str	q4, [sp, #144]
   2e06c:	str	q5, [sp, #160]
   2e070:	str	q6, [sp, #176]
   2e074:	str	q7, [sp, #192]
   2e078:	mov	w0, #0x2                   	// #2
   2e07c:	bl	30728 <acc_on_device@@OACC_2.0+0x70>
   2e080:	ldr	x1, [sp, #64]
   2e084:	ldr	x0, [sp, #48]
   2e088:	blr	x1
   2e08c:	bl	307a0 <acc_on_device@@OACC_2.0+0xe8>
   2e090:	nop
   2e094:	ldp	x29, x30, [sp], #208
   2e098:	ret

000000000002e09c <GOACC_data_start@@GOACC_2.0>:
   2e09c:	stp	x29, x30, [sp, #-96]!
   2e0a0:	mov	x29, sp
   2e0a4:	str	w0, [sp, #60]
   2e0a8:	str	x1, [sp, #48]
   2e0ac:	str	x2, [sp, #40]
   2e0b0:	str	x3, [sp, #32]
   2e0b4:	str	x4, [sp, #24]
   2e0b8:	ldr	w0, [sp, #60]
   2e0bc:	mvn	w0, w0
   2e0c0:	str	w0, [sp, #92]
   2e0c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2e0c8:	add	x0, x0, #0x630
   2e0cc:	ldr	w0, [x0]
   2e0d0:	sxtw	x0, w0
   2e0d4:	cmp	x0, #0x0
   2e0d8:	b.eq	2e104 <GOACC_data_start@@GOACC_2.0+0x68>  // b.none
   2e0dc:	ldr	x6, [sp, #24]
   2e0e0:	ldr	x5, [sp, #32]
   2e0e4:	ldr	x4, [sp, #40]
   2e0e8:	ldr	x3, [sp, #48]
   2e0ec:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e0f0:	add	x2, x0, #0x4a8
   2e0f4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e0f8:	add	x1, x0, #0x2b0
   2e0fc:	mov	w0, #0x0                   	// #0
   2e100:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   2e104:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   2e108:	bl	2d718 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x16c>
   2e10c:	str	x0, [sp, #80]
   2e110:	ldr	x0, [sp, #80]
   2e114:	ldr	x0, [x0, #8]
   2e118:	str	x0, [sp, #72]
   2e11c:	ldr	x0, [sp, #72]
   2e120:	ldr	w0, [x0, #8]
   2e124:	and	w0, w0, #0x1
   2e128:	cmp	w0, #0x0
   2e12c:	b.ne	2e140 <GOACC_data_start@@GOACC_2.0+0xa4>  // b.any
   2e130:	ldr	w0, [sp, #92]
   2e134:	and	w0, w0, #0x1
   2e138:	cmp	w0, #0x0
   2e13c:	b.eq	2e188 <GOACC_data_start@@GOACC_2.0+0xec>  // b.none
   2e140:	mov	w7, #0x0                   	// #0
   2e144:	mov	w6, #0x1                   	// #1
   2e148:	mov	x5, #0x0                   	// #0
   2e14c:	mov	x4, #0x0                   	// #0
   2e150:	mov	x3, #0x0                   	// #0
   2e154:	mov	x2, #0x0                   	// #0
   2e158:	mov	x1, #0x0                   	// #0
   2e15c:	mov	x0, #0x0                   	// #0
   2e160:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   2e164:	str	x0, [sp, #64]
   2e168:	ldr	x0, [sp, #80]
   2e16c:	ldr	x1, [x0, #24]
   2e170:	ldr	x0, [sp, #64]
   2e174:	str	x1, [x0, #40]
   2e178:	ldr	x0, [sp, #80]
   2e17c:	ldr	x1, [sp, #64]
   2e180:	str	x1, [x0, #24]
   2e184:	b	2e22c <GOACC_data_start@@GOACC_2.0+0x190>
   2e188:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2e18c:	add	x0, x0, #0x630
   2e190:	ldr	w0, [x0]
   2e194:	sxtw	x0, w0
   2e198:	cmp	x0, #0x0
   2e19c:	b.eq	2e1b8 <GOACC_data_start@@GOACC_2.0+0x11c>  // b.none
   2e1a0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e1a4:	add	x2, x0, #0x4a8
   2e1a8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e1ac:	add	x1, x0, #0x378
   2e1b0:	mov	w0, #0x0                   	// #0
   2e1b4:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   2e1b8:	mov	w7, #0x0                   	// #0
   2e1bc:	mov	w6, #0x1                   	// #1
   2e1c0:	ldr	x5, [sp, #24]
   2e1c4:	ldr	x4, [sp, #32]
   2e1c8:	mov	x3, #0x0                   	// #0
   2e1cc:	ldr	x2, [sp, #40]
   2e1d0:	ldr	x1, [sp, #48]
   2e1d4:	ldr	x0, [sp, #72]
   2e1d8:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   2e1dc:	str	x0, [sp, #64]
   2e1e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2e1e4:	add	x0, x0, #0x630
   2e1e8:	ldr	w0, [x0]
   2e1ec:	sxtw	x0, w0
   2e1f0:	cmp	x0, #0x0
   2e1f4:	b.eq	2e210 <GOACC_data_start@@GOACC_2.0+0x174>  // b.none
   2e1f8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e1fc:	add	x2, x0, #0x4a8
   2e200:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e204:	add	x1, x0, #0x390
   2e208:	mov	w0, #0x0                   	// #0
   2e20c:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   2e210:	ldr	x0, [sp, #80]
   2e214:	ldr	x1, [x0, #24]
   2e218:	ldr	x0, [sp, #64]
   2e21c:	str	x1, [x0, #40]
   2e220:	ldr	x0, [sp, #80]
   2e224:	ldr	x1, [sp, #64]
   2e228:	str	x1, [x0, #24]
   2e22c:	ldp	x29, x30, [sp], #96
   2e230:	ret

000000000002e234 <GOACC_data_end@@GOACC_2.0>:
   2e234:	stp	x29, x30, [sp, #-32]!
   2e238:	mov	x29, sp
   2e23c:	bl	2d718 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x16c>
   2e240:	str	x0, [sp, #24]
   2e244:	ldr	x0, [sp, #24]
   2e248:	ldr	x0, [x0, #24]
   2e24c:	str	x0, [sp, #16]
   2e250:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2e254:	add	x0, x0, #0x630
   2e258:	ldr	w0, [x0]
   2e25c:	sxtw	x0, w0
   2e260:	cmp	x0, #0x0
   2e264:	b.eq	2e280 <GOACC_data_end@@GOACC_2.0+0x4c>  // b.none
   2e268:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e26c:	add	x2, x0, #0x4c0
   2e270:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e274:	add	x1, x0, #0x3b0
   2e278:	mov	w0, #0x0                   	// #0
   2e27c:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   2e280:	ldr	x0, [sp, #16]
   2e284:	ldr	x1, [x0, #40]
   2e288:	ldr	x0, [sp, #24]
   2e28c:	str	x1, [x0, #24]
   2e290:	mov	w1, #0x1                   	// #1
   2e294:	ldr	x0, [sp, #16]
   2e298:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   2e29c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2e2a0:	add	x0, x0, #0x630
   2e2a4:	ldr	w0, [x0]
   2e2a8:	sxtw	x0, w0
   2e2ac:	cmp	x0, #0x0
   2e2b0:	b.eq	2e2cc <GOACC_data_end@@GOACC_2.0+0x98>  // b.none
   2e2b4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e2b8:	add	x2, x0, #0x4c0
   2e2bc:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e2c0:	add	x1, x0, #0x3c8
   2e2c4:	mov	w0, #0x0                   	// #0
   2e2c8:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   2e2cc:	nop
   2e2d0:	ldp	x29, x30, [sp], #32
   2e2d4:	ret

000000000002e2d8 <GOACC_enter_exit_data@@GOACC_2.0>:
   2e2d8:	stp	x29, x30, [sp, #-304]!
   2e2dc:	mov	x29, sp
   2e2e0:	str	w0, [sp, #60]
   2e2e4:	str	x1, [sp, #48]
   2e2e8:	str	x2, [sp, #40]
   2e2ec:	str	x3, [sp, #32]
   2e2f0:	str	x4, [sp, #24]
   2e2f4:	str	w5, [sp, #56]
   2e2f8:	str	w6, [sp, #20]
   2e2fc:	str	x7, [sp, #296]
   2e300:	str	q0, [sp, #160]
   2e304:	str	q1, [sp, #176]
   2e308:	str	q2, [sp, #192]
   2e30c:	str	q3, [sp, #208]
   2e310:	str	q4, [sp, #224]
   2e314:	str	q5, [sp, #240]
   2e318:	str	q6, [sp, #256]
   2e31c:	str	q7, [sp, #272]
   2e320:	ldr	w0, [sp, #60]
   2e324:	mvn	w0, w0
   2e328:	str	w0, [sp, #136]
   2e32c:	strb	wzr, [sp, #159]
   2e330:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   2e334:	bl	2d718 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x16c>
   2e338:	str	x0, [sp, #128]
   2e33c:	ldr	x0, [sp, #128]
   2e340:	ldr	x0, [x0, #8]
   2e344:	str	x0, [sp, #120]
   2e348:	ldr	x0, [sp, #120]
   2e34c:	ldr	w0, [x0, #8]
   2e350:	and	w0, w0, #0x1
   2e354:	cmp	w0, #0x0
   2e358:	b.ne	2e8f0 <GOACC_enter_exit_data@@GOACC_2.0+0x618>  // b.any
   2e35c:	ldr	w0, [sp, #136]
   2e360:	and	w0, w0, #0x1
   2e364:	cmp	w0, #0x0
   2e368:	b.ne	2e8f0 <GOACC_enter_exit_data@@GOACC_2.0+0x618>  // b.any
   2e36c:	ldr	w0, [sp, #20]
   2e370:	cmp	w0, #0x0
   2e374:	b.eq	2e3b4 <GOACC_enter_exit_data@@GOACC_2.0+0xdc>  // b.none
   2e378:	add	x0, sp, #0x130
   2e37c:	str	x0, [sp, #72]
   2e380:	add	x0, sp, #0x130
   2e384:	str	x0, [sp, #80]
   2e388:	add	x0, sp, #0x120
   2e38c:	str	x0, [sp, #88]
   2e390:	mov	w0, #0xfffffff8            	// #-8
   2e394:	str	w0, [sp, #96]
   2e398:	mov	w0, #0xffffff80            	// #-128
   2e39c:	str	w0, [sp, #100]
   2e3a0:	add	x0, sp, #0x48
   2e3a4:	mov	x2, x0
   2e3a8:	ldr	w1, [sp, #20]
   2e3ac:	ldr	w0, [sp, #56]
   2e3b0:	bl	2e8fc <GOACC_enter_exit_data@@GOACC_2.0+0x624>
   2e3b4:	strb	wzr, [sp, #143]
   2e3b8:	ldr	x0, [sp, #48]
   2e3bc:	cmp	x0, #0x0
   2e3c0:	b.eq	2e3f0 <GOACC_enter_exit_data@@GOACC_2.0+0x118>  // b.none
   2e3c4:	ldr	x0, [sp, #24]
   2e3c8:	ldrh	w0, [x0]
   2e3cc:	strb	w0, [sp, #119]
   2e3d0:	ldrb	w0, [sp, #119]
   2e3d4:	cmp	w0, #0x7
   2e3d8:	b.eq	2e3e8 <GOACC_enter_exit_data@@GOACC_2.0+0x110>  // b.none
   2e3dc:	ldrb	w0, [sp, #119]
   2e3e0:	cmp	w0, #0x82
   2e3e4:	b.ne	2e3f0 <GOACC_enter_exit_data@@GOACC_2.0+0x118>  // b.any
   2e3e8:	mov	w0, #0x1                   	// #1
   2e3ec:	strb	w0, [sp, #143]
   2e3f0:	ldr	x0, [sp, #120]
   2e3f4:	ldr	x1, [x0, #248]
   2e3f8:	ldr	w0, [sp, #56]
   2e3fc:	blr	x1
   2e400:	str	xzr, [sp, #144]
   2e404:	b	2e4d4 <GOACC_enter_exit_data@@GOACC_2.0+0x1fc>
   2e408:	ldr	x0, [sp, #144]
   2e40c:	lsl	x0, x0, #1
   2e410:	ldr	x1, [sp, #24]
   2e414:	add	x0, x1, x0
   2e418:	ldrh	w0, [x0]
   2e41c:	strb	w0, [sp, #118]
   2e420:	ldrb	w0, [sp, #118]
   2e424:	cmp	w0, #0x4
   2e428:	b.eq	2e438 <GOACC_enter_exit_data@@GOACC_2.0+0x160>  // b.none
   2e42c:	ldrb	w0, [sp, #118]
   2e430:	cmp	w0, #0x5
   2e434:	b.ne	2e448 <GOACC_enter_exit_data@@GOACC_2.0+0x170>  // b.any
   2e438:	ldr	x0, [sp, #144]
   2e43c:	add	x0, x0, #0x1
   2e440:	str	x0, [sp, #144]
   2e444:	b	2e4d4 <GOACC_enter_exit_data@@GOACC_2.0+0x1fc>
   2e448:	ldrb	w0, [sp, #118]
   2e44c:	cmp	w0, #0x80
   2e450:	b.eq	2e484 <GOACC_enter_exit_data@@GOACC_2.0+0x1ac>  // b.none
   2e454:	ldrb	w0, [sp, #118]
   2e458:	cmp	w0, #0x6
   2e45c:	b.eq	2e484 <GOACC_enter_exit_data@@GOACC_2.0+0x1ac>  // b.none
   2e460:	ldrb	w0, [sp, #118]
   2e464:	cmp	w0, #0x81
   2e468:	b.eq	2e484 <GOACC_enter_exit_data@@GOACC_2.0+0x1ac>  // b.none
   2e46c:	ldrb	w0, [sp, #118]
   2e470:	cmp	w0, #0x1
   2e474:	b.eq	2e484 <GOACC_enter_exit_data@@GOACC_2.0+0x1ac>  // b.none
   2e478:	ldrb	w0, [sp, #118]
   2e47c:	cmp	w0, #0x0
   2e480:	b.ne	2e490 <GOACC_enter_exit_data@@GOACC_2.0+0x1b8>  // b.any
   2e484:	mov	w0, #0x1                   	// #1
   2e488:	strb	w0, [sp, #159]
   2e48c:	b	2e4e4 <GOACC_enter_exit_data@@GOACC_2.0+0x20c>
   2e490:	ldrb	w0, [sp, #118]
   2e494:	cmp	w0, #0x17
   2e498:	b.eq	2e4e4 <GOACC_enter_exit_data@@GOACC_2.0+0x20c>  // b.none
   2e49c:	ldrb	w0, [sp, #118]
   2e4a0:	cmp	w0, #0x7
   2e4a4:	b.eq	2e4e4 <GOACC_enter_exit_data@@GOACC_2.0+0x20c>  // b.none
   2e4a8:	ldrb	w0, [sp, #118]
   2e4ac:	cmp	w0, #0x2
   2e4b0:	b.eq	2e4e4 <GOACC_enter_exit_data@@GOACC_2.0+0x20c>  // b.none
   2e4b4:	ldrb	w0, [sp, #118]
   2e4b8:	cmp	w0, #0x82
   2e4bc:	b.eq	2e4e4 <GOACC_enter_exit_data@@GOACC_2.0+0x20c>  // b.none
   2e4c0:	ldrb	w0, [sp, #118]
   2e4c4:	mov	w1, w0
   2e4c8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e4cc:	add	x0, x0, #0x3e8
   2e4d0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2e4d4:	ldr	x1, [sp, #144]
   2e4d8:	ldr	x0, [sp, #48]
   2e4dc:	cmp	x1, x0
   2e4e0:	b.cc	2e408 <GOACC_enter_exit_data@@GOACC_2.0+0x130>  // b.lo, b.ul, b.last
   2e4e4:	ldrb	w0, [sp, #159]
   2e4e8:	cmp	w0, #0x0
   2e4ec:	b.eq	2e668 <GOACC_enter_exit_data@@GOACC_2.0+0x390>  // b.none
   2e4f0:	str	xzr, [sp, #144]
   2e4f4:	b	2e654 <GOACC_enter_exit_data@@GOACC_2.0+0x37c>
   2e4f8:	ldr	x0, [sp, #144]
   2e4fc:	lsl	x0, x0, #1
   2e500:	ldr	x1, [sp, #24]
   2e504:	add	x0, x1, x0
   2e508:	ldrh	w0, [x0]
   2e50c:	strb	w0, [sp, #110]
   2e510:	ldr	x0, [sp, #144]
   2e514:	ldr	x2, [sp, #24]
   2e518:	ldr	x1, [sp, #48]
   2e51c:	bl	2d7ec <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x240>
   2e520:	str	w0, [sp, #104]
   2e524:	ldr	w0, [sp, #104]
   2e528:	cmp	w0, #0x0
   2e52c:	b.ne	2e5ec <GOACC_enter_exit_data@@GOACC_2.0+0x314>  // b.any
   2e530:	ldrb	w0, [sp, #110]
   2e534:	cmp	w0, #0x81
   2e538:	b.eq	2e5a0 <GOACC_enter_exit_data@@GOACC_2.0+0x2c8>  // b.none
   2e53c:	cmp	w0, #0x81
   2e540:	b.gt	2e5d8 <GOACC_enter_exit_data@@GOACC_2.0+0x300>
   2e544:	cmp	w0, #0x80
   2e548:	b.eq	2e568 <GOACC_enter_exit_data@@GOACC_2.0+0x290>  // b.none
   2e54c:	cmp	w0, #0x80
   2e550:	b.gt	2e5d8 <GOACC_enter_exit_data@@GOACC_2.0+0x300>
   2e554:	cmp	w0, #0x0
   2e558:	b.eq	2e568 <GOACC_enter_exit_data@@GOACC_2.0+0x290>  // b.none
   2e55c:	cmp	w0, #0x1
   2e560:	b.eq	2e5a0 <GOACC_enter_exit_data@@GOACC_2.0+0x2c8>  // b.none
   2e564:	b	2e5d8 <GOACC_enter_exit_data@@GOACC_2.0+0x300>
   2e568:	ldr	x0, [sp, #144]
   2e56c:	lsl	x0, x0, #3
   2e570:	ldr	x1, [sp, #40]
   2e574:	add	x0, x1, x0
   2e578:	ldr	x2, [x0]
   2e57c:	ldr	x0, [sp, #144]
   2e580:	lsl	x0, x0, #3
   2e584:	ldr	x1, [sp, #32]
   2e588:	add	x0, x1, x0
   2e58c:	ldr	x0, [x0]
   2e590:	mov	x1, x0
   2e594:	mov	x0, x2
   2e598:	bl	87f0 <acc_create@plt>
   2e59c:	b	2e648 <GOACC_enter_exit_data@@GOACC_2.0+0x370>
   2e5a0:	ldr	x0, [sp, #144]
   2e5a4:	lsl	x0, x0, #3
   2e5a8:	ldr	x1, [sp, #40]
   2e5ac:	add	x0, x1, x0
   2e5b0:	ldr	x2, [x0]
   2e5b4:	ldr	x0, [sp, #144]
   2e5b8:	lsl	x0, x0, #3
   2e5bc:	ldr	x1, [sp, #32]
   2e5c0:	add	x0, x1, x0
   2e5c4:	ldr	x0, [x0]
   2e5c8:	mov	x1, x0
   2e5cc:	mov	x0, x2
   2e5d0:	bl	87b0 <acc_copyin@plt>
   2e5d4:	b	2e648 <GOACC_enter_exit_data@@GOACC_2.0+0x370>
   2e5d8:	ldrb	w0, [sp, #110]
   2e5dc:	mov	w1, w0
   2e5e0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e5e4:	add	x0, x0, #0x3e8
   2e5e8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2e5ec:	ldrsw	x4, [sp, #104]
   2e5f0:	ldr	x0, [sp, #144]
   2e5f4:	lsl	x0, x0, #3
   2e5f8:	ldr	x1, [sp, #40]
   2e5fc:	add	x5, x1, x0
   2e600:	ldr	x0, [sp, #144]
   2e604:	lsl	x0, x0, #3
   2e608:	ldr	x1, [sp, #32]
   2e60c:	add	x2, x1, x0
   2e610:	ldr	x0, [sp, #144]
   2e614:	lsl	x0, x0, #1
   2e618:	ldr	x1, [sp, #24]
   2e61c:	add	x0, x1, x0
   2e620:	mov	x3, x0
   2e624:	mov	x1, x5
   2e628:	mov	x0, x4
   2e62c:	bl	32064 <acc_update_self_async@@OACC_2.5+0x34>
   2e630:	ldr	w0, [sp, #104]
   2e634:	sub	w0, w0, #0x1
   2e638:	sxtw	x0, w0
   2e63c:	ldr	x1, [sp, #144]
   2e640:	add	x0, x1, x0
   2e644:	str	x0, [sp, #144]
   2e648:	ldr	x0, [sp, #144]
   2e64c:	add	x0, x0, #0x1
   2e650:	str	x0, [sp, #144]
   2e654:	ldr	x1, [sp, #144]
   2e658:	ldr	x0, [sp, #48]
   2e65c:	cmp	x1, x0
   2e660:	b.cc	2e4f8 <GOACC_enter_exit_data@@GOACC_2.0+0x220>  // b.lo, b.ul, b.last
   2e664:	b	2e8dc <GOACC_enter_exit_data@@GOACC_2.0+0x604>
   2e668:	str	xzr, [sp, #144]
   2e66c:	b	2e8cc <GOACC_enter_exit_data@@GOACC_2.0+0x5f4>
   2e670:	ldr	x0, [sp, #144]
   2e674:	lsl	x0, x0, #1
   2e678:	ldr	x1, [sp, #24]
   2e67c:	add	x0, x1, x0
   2e680:	ldrh	w0, [x0]
   2e684:	strb	w0, [sp, #117]
   2e688:	ldr	x0, [sp, #144]
   2e68c:	ldr	x2, [sp, #24]
   2e690:	ldr	x1, [sp, #48]
   2e694:	bl	2d7ec <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x240>
   2e698:	str	w0, [sp, #112]
   2e69c:	ldr	w0, [sp, #112]
   2e6a0:	cmp	w0, #0x0
   2e6a4:	b.ne	2e824 <GOACC_enter_exit_data@@GOACC_2.0+0x54c>  // b.any
   2e6a8:	ldrb	w0, [sp, #117]
   2e6ac:	cmp	w0, #0x82
   2e6b0:	b.eq	2e794 <GOACC_enter_exit_data@@GOACC_2.0+0x4bc>  // b.none
   2e6b4:	cmp	w0, #0x82
   2e6b8:	b.gt	2e810 <GOACC_enter_exit_data@@GOACC_2.0+0x538>
   2e6bc:	cmp	w0, #0x17
   2e6c0:	b.eq	2e6dc <GOACC_enter_exit_data@@GOACC_2.0+0x404>  // b.none
   2e6c4:	cmp	w0, #0x17
   2e6c8:	b.gt	2e810 <GOACC_enter_exit_data@@GOACC_2.0+0x538>
   2e6cc:	cmp	w0, #0x2
   2e6d0:	b.eq	2e794 <GOACC_enter_exit_data@@GOACC_2.0+0x4bc>  // b.none
   2e6d4:	cmp	w0, #0x7
   2e6d8:	b.ne	2e810 <GOACC_enter_exit_data@@GOACC_2.0+0x538>  // b.any
   2e6dc:	ldr	x0, [sp, #144]
   2e6e0:	lsl	x0, x0, #3
   2e6e4:	ldr	x1, [sp, #40]
   2e6e8:	add	x0, x1, x0
   2e6ec:	ldr	x2, [x0]
   2e6f0:	ldr	x0, [sp, #144]
   2e6f4:	lsl	x0, x0, #3
   2e6f8:	ldr	x1, [sp, #32]
   2e6fc:	add	x0, x1, x0
   2e700:	ldr	x0, [x0]
   2e704:	mov	x1, x0
   2e708:	mov	x0, x2
   2e70c:	bl	8900 <acc_is_present@plt>
   2e710:	cmp	w0, #0x0
   2e714:	b.eq	2e8bc <GOACC_enter_exit_data@@GOACC_2.0+0x5e4>  // b.none
   2e718:	ldrb	w0, [sp, #143]
   2e71c:	cmp	w0, #0x0
   2e720:	b.eq	2e75c <GOACC_enter_exit_data@@GOACC_2.0+0x484>  // b.none
   2e724:	ldr	x0, [sp, #144]
   2e728:	lsl	x0, x0, #3
   2e72c:	ldr	x1, [sp, #40]
   2e730:	add	x0, x1, x0
   2e734:	ldr	x2, [x0]
   2e738:	ldr	x0, [sp, #144]
   2e73c:	lsl	x0, x0, #3
   2e740:	ldr	x1, [sp, #32]
   2e744:	add	x0, x1, x0
   2e748:	ldr	x0, [x0]
   2e74c:	mov	x1, x0
   2e750:	mov	x0, x2
   2e754:	bl	87d0 <acc_delete_finalize@plt>
   2e758:	b	2e8bc <GOACC_enter_exit_data@@GOACC_2.0+0x5e4>
   2e75c:	ldr	x0, [sp, #144]
   2e760:	lsl	x0, x0, #3
   2e764:	ldr	x1, [sp, #40]
   2e768:	add	x0, x1, x0
   2e76c:	ldr	x2, [x0]
   2e770:	ldr	x0, [sp, #144]
   2e774:	lsl	x0, x0, #3
   2e778:	ldr	x1, [sp, #32]
   2e77c:	add	x0, x1, x0
   2e780:	ldr	x0, [x0]
   2e784:	mov	x1, x0
   2e788:	mov	x0, x2
   2e78c:	bl	8a30 <acc_delete@plt>
   2e790:	b	2e8bc <GOACC_enter_exit_data@@GOACC_2.0+0x5e4>
   2e794:	ldrb	w0, [sp, #143]
   2e798:	cmp	w0, #0x0
   2e79c:	b.eq	2e7d8 <GOACC_enter_exit_data@@GOACC_2.0+0x500>  // b.none
   2e7a0:	ldr	x0, [sp, #144]
   2e7a4:	lsl	x0, x0, #3
   2e7a8:	ldr	x1, [sp, #40]
   2e7ac:	add	x0, x1, x0
   2e7b0:	ldr	x2, [x0]
   2e7b4:	ldr	x0, [sp, #144]
   2e7b8:	lsl	x0, x0, #3
   2e7bc:	ldr	x1, [sp, #32]
   2e7c0:	add	x0, x1, x0
   2e7c4:	ldr	x0, [x0]
   2e7c8:	mov	x1, x0
   2e7cc:	mov	x0, x2
   2e7d0:	bl	8730 <acc_copyout_finalize@plt>
   2e7d4:	b	2e8c0 <GOACC_enter_exit_data@@GOACC_2.0+0x5e8>
   2e7d8:	ldr	x0, [sp, #144]
   2e7dc:	lsl	x0, x0, #3
   2e7e0:	ldr	x1, [sp, #40]
   2e7e4:	add	x0, x1, x0
   2e7e8:	ldr	x2, [x0]
   2e7ec:	ldr	x0, [sp, #144]
   2e7f0:	lsl	x0, x0, #3
   2e7f4:	ldr	x1, [sp, #32]
   2e7f8:	add	x0, x1, x0
   2e7fc:	ldr	x0, [x0]
   2e800:	mov	x1, x0
   2e804:	mov	x0, x2
   2e808:	bl	8aa0 <acc_copyout@plt>
   2e80c:	b	2e8c0 <GOACC_enter_exit_data@@GOACC_2.0+0x5e8>
   2e810:	ldrb	w0, [sp, #117]
   2e814:	mov	w1, w0
   2e818:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2e81c:	add	x0, x0, #0x3e8
   2e820:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2e824:	ldrb	w0, [sp, #117]
   2e828:	cmp	w0, #0x82
   2e82c:	b.eq	2e83c <GOACC_enter_exit_data@@GOACC_2.0+0x564>  // b.none
   2e830:	ldrb	w0, [sp, #117]
   2e834:	cmp	w0, #0x2
   2e838:	b.ne	2e844 <GOACC_enter_exit_data@@GOACC_2.0+0x56c>  // b.any
   2e83c:	mov	w0, #0x1                   	// #1
   2e840:	b	2e848 <GOACC_enter_exit_data@@GOACC_2.0+0x570>
   2e844:	mov	w0, #0x0                   	// #0
   2e848:	strb	w0, [sp, #111]
   2e84c:	ldrb	w0, [sp, #111]
   2e850:	and	w0, w0, #0x1
   2e854:	strb	w0, [sp, #111]
   2e858:	ldr	x0, [sp, #144]
   2e85c:	lsl	x0, x0, #3
   2e860:	ldr	x1, [sp, #40]
   2e864:	add	x0, x1, x0
   2e868:	ldr	x6, [x0]
   2e86c:	ldr	x0, [sp, #144]
   2e870:	lsl	x0, x0, #3
   2e874:	ldr	x1, [sp, #32]
   2e878:	add	x0, x1, x0
   2e87c:	ldr	x0, [x0]
   2e880:	ldrb	w1, [sp, #143]
   2e884:	ldr	w5, [sp, #112]
   2e888:	mov	w4, w1
   2e88c:	ldr	w3, [sp, #56]
   2e890:	ldrb	w2, [sp, #111]
   2e894:	mov	x1, x0
   2e898:	mov	x0, x6
   2e89c:	bl	322e8 <acc_update_self_async@@OACC_2.5+0x2b8>
   2e8a0:	ldr	w0, [sp, #112]
   2e8a4:	sub	w0, w0, #0x1
   2e8a8:	sxtw	x0, w0
   2e8ac:	ldr	x1, [sp, #144]
   2e8b0:	add	x0, x1, x0
   2e8b4:	str	x0, [sp, #144]
   2e8b8:	b	2e8c0 <GOACC_enter_exit_data@@GOACC_2.0+0x5e8>
   2e8bc:	nop
   2e8c0:	ldr	x0, [sp, #144]
   2e8c4:	add	x0, x0, #0x1
   2e8c8:	str	x0, [sp, #144]
   2e8cc:	ldr	x1, [sp, #144]
   2e8d0:	ldr	x0, [sp, #48]
   2e8d4:	cmp	x1, x0
   2e8d8:	b.cc	2e670 <GOACC_enter_exit_data@@GOACC_2.0+0x398>  // b.lo, b.ul, b.last
   2e8dc:	ldr	x0, [sp, #120]
   2e8e0:	ldr	x1, [x0, #248]
   2e8e4:	mov	w0, #0xfffffffe            	// #-2
   2e8e8:	blr	x1
   2e8ec:	b	2e8f4 <GOACC_enter_exit_data@@GOACC_2.0+0x61c>
   2e8f0:	nop
   2e8f4:	ldp	x29, x30, [sp], #304
   2e8f8:	ret
   2e8fc:	stp	x29, x30, [sp, #-48]!
   2e900:	mov	x29, sp
   2e904:	str	w0, [sp, #28]
   2e908:	str	w1, [sp, #24]
   2e90c:	str	x2, [sp, #16]
   2e910:	b	2e9fc <GOACC_enter_exit_data@@GOACC_2.0+0x724>
   2e914:	ldr	x0, [sp, #16]
   2e918:	ldr	w1, [x0, #24]
   2e91c:	ldr	x0, [sp, #16]
   2e920:	ldr	x0, [x0]
   2e924:	cmp	w1, #0x0
   2e928:	b.lt	2e940 <GOACC_enter_exit_data@@GOACC_2.0+0x668>  // b.tstop
   2e92c:	add	x1, x0, #0xb
   2e930:	and	x2, x1, #0xfffffffffffffff8
   2e934:	ldr	x1, [sp, #16]
   2e938:	str	x2, [x1]
   2e93c:	b	2e980 <GOACC_enter_exit_data@@GOACC_2.0+0x6a8>
   2e940:	add	w3, w1, #0x8
   2e944:	ldr	x2, [sp, #16]
   2e948:	str	w3, [x2, #24]
   2e94c:	ldr	x2, [sp, #16]
   2e950:	ldr	w2, [x2, #24]
   2e954:	cmp	w2, #0x0
   2e958:	b.le	2e970 <GOACC_enter_exit_data@@GOACC_2.0+0x698>
   2e95c:	add	x1, x0, #0xb
   2e960:	and	x2, x1, #0xfffffffffffffff8
   2e964:	ldr	x1, [sp, #16]
   2e968:	str	x2, [x1]
   2e96c:	b	2e980 <GOACC_enter_exit_data@@GOACC_2.0+0x6a8>
   2e970:	ldr	x0, [sp, #16]
   2e974:	ldr	x2, [x0, #8]
   2e978:	sxtw	x0, w1
   2e97c:	add	x0, x2, x0
   2e980:	ldr	w0, [x0]
   2e984:	str	w0, [sp, #44]
   2e988:	ldr	w0, [sp, #44]
   2e98c:	cmn	w0, #0x1
   2e990:	b.ne	2e9b4 <GOACC_enter_exit_data@@GOACC_2.0+0x6dc>  // b.any
   2e994:	ldr	w0, [sp, #28]
   2e998:	cmn	w0, #0x2
   2e99c:	b.ne	2e9a8 <GOACC_enter_exit_data@@GOACC_2.0+0x6d0>  // b.any
   2e9a0:	bl	8700 <acc_wait_all@plt>
   2e9a4:	b	2ea14 <GOACC_enter_exit_data@@GOACC_2.0+0x73c>
   2e9a8:	ldr	w0, [sp, #28]
   2e9ac:	bl	89e0 <acc_wait_all_async@plt>
   2e9b0:	b	2ea14 <GOACC_enter_exit_data@@GOACC_2.0+0x73c>
   2e9b4:	ldr	w0, [sp, #44]
   2e9b8:	bl	8860 <acc_async_test@plt>
   2e9bc:	cmp	w0, #0x0
   2e9c0:	b.eq	2e9c8 <GOACC_enter_exit_data@@GOACC_2.0+0x6f0>  // b.none
   2e9c4:	b	2e9fc <GOACC_enter_exit_data@@GOACC_2.0+0x724>
   2e9c8:	ldr	w0, [sp, #28]
   2e9cc:	cmn	w0, #0x2
   2e9d0:	b.ne	2e9e0 <GOACC_enter_exit_data@@GOACC_2.0+0x708>  // b.any
   2e9d4:	ldr	w0, [sp, #44]
   2e9d8:	bl	8ab0 <acc_wait@plt>
   2e9dc:	b	2e9fc <GOACC_enter_exit_data@@GOACC_2.0+0x724>
   2e9e0:	ldr	w1, [sp, #44]
   2e9e4:	ldr	w0, [sp, #28]
   2e9e8:	cmp	w1, w0
   2e9ec:	b.eq	2e9fc <GOACC_enter_exit_data@@GOACC_2.0+0x724>  // b.none
   2e9f0:	ldr	w1, [sp, #28]
   2e9f4:	ldr	w0, [sp, #44]
   2e9f8:	bl	8810 <acc_wait_async@plt>
   2e9fc:	ldr	w0, [sp, #24]
   2ea00:	sub	w1, w0, #0x1
   2ea04:	str	w1, [sp, #24]
   2ea08:	cmp	w0, #0x0
   2ea0c:	b.ne	2e914 <GOACC_enter_exit_data@@GOACC_2.0+0x63c>  // b.any
   2ea10:	nop
   2ea14:	nop
   2ea18:	ldp	x29, x30, [sp], #48
   2ea1c:	ret

000000000002ea20 <GOACC_update@@GOACC_2.0>:
   2ea20:	stp	x29, x30, [sp, #-304]!
   2ea24:	mov	x29, sp
   2ea28:	str	w0, [sp, #60]
   2ea2c:	str	x1, [sp, #48]
   2ea30:	str	x2, [sp, #40]
   2ea34:	str	x3, [sp, #32]
   2ea38:	str	x4, [sp, #24]
   2ea3c:	str	w5, [sp, #56]
   2ea40:	str	w6, [sp, #20]
   2ea44:	str	x7, [sp, #296]
   2ea48:	str	q0, [sp, #160]
   2ea4c:	str	q1, [sp, #176]
   2ea50:	str	q2, [sp, #192]
   2ea54:	str	q3, [sp, #208]
   2ea58:	str	q4, [sp, #224]
   2ea5c:	str	q5, [sp, #240]
   2ea60:	str	q6, [sp, #256]
   2ea64:	str	q7, [sp, #272]
   2ea68:	ldr	w0, [sp, #60]
   2ea6c:	mvn	w0, w0
   2ea70:	str	w0, [sp, #144]
   2ea74:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   2ea78:	bl	2d718 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x16c>
   2ea7c:	str	x0, [sp, #136]
   2ea80:	ldr	x0, [sp, #136]
   2ea84:	ldr	x0, [x0, #8]
   2ea88:	str	x0, [sp, #128]
   2ea8c:	ldr	x0, [sp, #128]
   2ea90:	ldr	w0, [x0, #8]
   2ea94:	and	w0, w0, #0x1
   2ea98:	cmp	w0, #0x0
   2ea9c:	b.ne	2ed7c <GOACC_update@@GOACC_2.0+0x35c>  // b.any
   2eaa0:	ldr	w0, [sp, #144]
   2eaa4:	and	w0, w0, #0x1
   2eaa8:	cmp	w0, #0x0
   2eaac:	b.ne	2ed7c <GOACC_update@@GOACC_2.0+0x35c>  // b.any
   2eab0:	ldr	w0, [sp, #20]
   2eab4:	cmp	w0, #0x0
   2eab8:	b.eq	2eaf8 <GOACC_update@@GOACC_2.0+0xd8>  // b.none
   2eabc:	add	x0, sp, #0x130
   2eac0:	str	x0, [sp, #72]
   2eac4:	add	x0, sp, #0x130
   2eac8:	str	x0, [sp, #80]
   2eacc:	add	x0, sp, #0x120
   2ead0:	str	x0, [sp, #88]
   2ead4:	mov	w0, #0xfffffff8            	// #-8
   2ead8:	str	w0, [sp, #96]
   2eadc:	mov	w0, #0xffffff80            	// #-128
   2eae0:	str	w0, [sp, #100]
   2eae4:	add	x0, sp, #0x48
   2eae8:	mov	x2, x0
   2eaec:	ldr	w1, [sp, #20]
   2eaf0:	ldr	w0, [sp, #56]
   2eaf4:	bl	2e8fc <GOACC_enter_exit_data@@GOACC_2.0+0x624>
   2eaf8:	ldr	x0, [sp, #128]
   2eafc:	ldr	x1, [x0, #248]
   2eb00:	ldr	w0, [sp, #56]
   2eb04:	blr	x1
   2eb08:	strb	wzr, [sp, #151]
   2eb0c:	str	xzr, [sp, #152]
   2eb10:	b	2ed58 <GOACC_update@@GOACC_2.0+0x338>
   2eb14:	ldr	x0, [sp, #152]
   2eb18:	lsl	x0, x0, #1
   2eb1c:	ldr	x1, [sp, #24]
   2eb20:	add	x0, x1, x0
   2eb24:	ldrh	w0, [x0]
   2eb28:	strb	w0, [sp, #127]
   2eb2c:	ldrb	w0, [sp, #127]
   2eb30:	cmp	w0, #0x82
   2eb34:	b.eq	2ecf0 <GOACC_update@@GOACC_2.0+0x2d0>  // b.none
   2eb38:	cmp	w0, #0x82
   2eb3c:	b.gt	2ed2c <GOACC_update@@GOACC_2.0+0x30c>
   2eb40:	cmp	w0, #0x81
   2eb44:	b.eq	2ec6c <GOACC_update@@GOACC_2.0+0x24c>  // b.none
   2eb48:	cmp	w0, #0x81
   2eb4c:	b.gt	2ed2c <GOACC_update@@GOACC_2.0+0x30c>
   2eb50:	cmp	w0, #0x1d
   2eb54:	b.eq	2eb84 <GOACC_update@@GOACC_2.0+0x164>  // b.none
   2eb58:	cmp	w0, #0x1d
   2eb5c:	b.gt	2ed2c <GOACC_update@@GOACC_2.0+0x30c>
   2eb60:	cmp	w0, #0x5
   2eb64:	b.gt	2ed2c <GOACC_update@@GOACC_2.0+0x30c>
   2eb68:	cmp	w0, #0x4
   2eb6c:	b.ge	2ed40 <GOACC_update@@GOACC_2.0+0x320>  // b.tcont
   2eb70:	cmp	w0, #0x1
   2eb74:	b.eq	2ec28 <GOACC_update@@GOACC_2.0+0x208>  // b.none
   2eb78:	cmp	w0, #0x2
   2eb7c:	b.eq	2ecac <GOACC_update@@GOACC_2.0+0x28c>  // b.none
   2eb80:	b	2ed2c <GOACC_update@@GOACC_2.0+0x30c>
   2eb84:	ldrb	w0, [sp, #151]
   2eb88:	cmp	w0, #0x0
   2eb8c:	b.eq	2ed48 <GOACC_update@@GOACC_2.0+0x328>  // b.none
   2eb90:	ldr	x0, [sp, #152]
   2eb94:	lsl	x0, x0, #3
   2eb98:	sub	x0, x0, #0x8
   2eb9c:	ldr	x1, [sp, #40]
   2eba0:	add	x0, x1, x0
   2eba4:	ldr	x0, [x0]
   2eba8:	bl	8a00 <acc_deviceptr@plt>
   2ebac:	str	x0, [sp, #112]
   2ebb0:	ldr	x0, [sp, #152]
   2ebb4:	lsl	x0, x0, #3
   2ebb8:	ldr	x1, [sp, #40]
   2ebbc:	add	x0, x1, x0
   2ebc0:	ldr	x0, [x0]
   2ebc4:	ldr	x0, [x0]
   2ebc8:	str	x0, [sp, #104]
   2ebcc:	ldr	x0, [sp, #152]
   2ebd0:	lsl	x0, x0, #3
   2ebd4:	ldr	x1, [sp, #40]
   2ebd8:	add	x0, x1, x0
   2ebdc:	ldr	x0, [x0]
   2ebe0:	ldr	x1, [sp, #112]
   2ebe4:	str	x1, [x0]
   2ebe8:	ldr	x0, [sp, #152]
   2ebec:	lsl	x0, x0, #3
   2ebf0:	ldr	x1, [sp, #40]
   2ebf4:	add	x0, x1, x0
   2ebf8:	ldr	x0, [x0]
   2ebfc:	mov	x1, #0x8                   	// #8
   2ec00:	bl	8c20 <acc_update_device@plt>
   2ec04:	ldr	x0, [sp, #152]
   2ec08:	lsl	x0, x0, #3
   2ec0c:	ldr	x1, [sp, #40]
   2ec10:	add	x0, x1, x0
   2ec14:	ldr	x0, [x0]
   2ec18:	ldr	x1, [sp, #104]
   2ec1c:	str	x1, [x0]
   2ec20:	strb	wzr, [sp, #151]
   2ec24:	b	2ed48 <GOACC_update@@GOACC_2.0+0x328>
   2ec28:	ldr	x0, [sp, #152]
   2ec2c:	lsl	x0, x0, #3
   2ec30:	ldr	x1, [sp, #40]
   2ec34:	add	x0, x1, x0
   2ec38:	ldr	x2, [x0]
   2ec3c:	ldr	x0, [sp, #152]
   2ec40:	lsl	x0, x0, #3
   2ec44:	ldr	x1, [sp, #32]
   2ec48:	add	x0, x1, x0
   2ec4c:	ldr	x0, [x0]
   2ec50:	mov	x1, x0
   2ec54:	mov	x0, x2
   2ec58:	bl	8900 <acc_is_present@plt>
   2ec5c:	cmp	w0, #0x0
   2ec60:	b.ne	2ec6c <GOACC_update@@GOACC_2.0+0x24c>  // b.any
   2ec64:	strb	wzr, [sp, #151]
   2ec68:	b	2ed4c <GOACC_update@@GOACC_2.0+0x32c>
   2ec6c:	mov	w0, #0x1                   	// #1
   2ec70:	strb	w0, [sp, #151]
   2ec74:	ldr	x0, [sp, #152]
   2ec78:	lsl	x0, x0, #3
   2ec7c:	ldr	x1, [sp, #40]
   2ec80:	add	x0, x1, x0
   2ec84:	ldr	x2, [x0]
   2ec88:	ldr	x0, [sp, #152]
   2ec8c:	lsl	x0, x0, #3
   2ec90:	ldr	x1, [sp, #32]
   2ec94:	add	x0, x1, x0
   2ec98:	ldr	x0, [x0]
   2ec9c:	mov	x1, x0
   2eca0:	mov	x0, x2
   2eca4:	bl	8c20 <acc_update_device@plt>
   2eca8:	b	2ed4c <GOACC_update@@GOACC_2.0+0x32c>
   2ecac:	ldr	x0, [sp, #152]
   2ecb0:	lsl	x0, x0, #3
   2ecb4:	ldr	x1, [sp, #40]
   2ecb8:	add	x0, x1, x0
   2ecbc:	ldr	x2, [x0]
   2ecc0:	ldr	x0, [sp, #152]
   2ecc4:	lsl	x0, x0, #3
   2ecc8:	ldr	x1, [sp, #32]
   2eccc:	add	x0, x1, x0
   2ecd0:	ldr	x0, [x0]
   2ecd4:	mov	x1, x0
   2ecd8:	mov	x0, x2
   2ecdc:	bl	8900 <acc_is_present@plt>
   2ece0:	cmp	w0, #0x0
   2ece4:	b.ne	2ecf0 <GOACC_update@@GOACC_2.0+0x2d0>  // b.any
   2ece8:	strb	wzr, [sp, #151]
   2ecec:	b	2ed4c <GOACC_update@@GOACC_2.0+0x32c>
   2ecf0:	strb	wzr, [sp, #151]
   2ecf4:	ldr	x0, [sp, #152]
   2ecf8:	lsl	x0, x0, #3
   2ecfc:	ldr	x1, [sp, #40]
   2ed00:	add	x0, x1, x0
   2ed04:	ldr	x2, [x0]
   2ed08:	ldr	x0, [sp, #152]
   2ed0c:	lsl	x0, x0, #3
   2ed10:	ldr	x1, [sp, #32]
   2ed14:	add	x0, x1, x0
   2ed18:	ldr	x0, [x0]
   2ed1c:	mov	x1, x0
   2ed20:	mov	x0, x2
   2ed24:	bl	8b10 <acc_update_self@plt>
   2ed28:	b	2ed4c <GOACC_update@@GOACC_2.0+0x32c>
   2ed2c:	ldrb	w0, [sp, #127]
   2ed30:	mov	w1, w0
   2ed34:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2ed38:	add	x0, x0, #0x420
   2ed3c:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2ed40:	nop
   2ed44:	b	2ed4c <GOACC_update@@GOACC_2.0+0x32c>
   2ed48:	nop
   2ed4c:	ldr	x0, [sp, #152]
   2ed50:	add	x0, x0, #0x1
   2ed54:	str	x0, [sp, #152]
   2ed58:	ldr	x1, [sp, #152]
   2ed5c:	ldr	x0, [sp, #48]
   2ed60:	cmp	x1, x0
   2ed64:	b.cc	2eb14 <GOACC_update@@GOACC_2.0+0xf4>  // b.lo, b.ul, b.last
   2ed68:	ldr	x0, [sp, #128]
   2ed6c:	ldr	x1, [x0, #248]
   2ed70:	mov	w0, #0xfffffffe            	// #-2
   2ed74:	blr	x1
   2ed78:	b	2ed80 <GOACC_update@@GOACC_2.0+0x360>
   2ed7c:	nop
   2ed80:	ldp	x29, x30, [sp], #304
   2ed84:	ret

000000000002ed88 <GOACC_wait@@GOACC_2.0>:
   2ed88:	stp	x29, x30, [sp, #-240]!
   2ed8c:	mov	x29, sp
   2ed90:	str	w0, [sp, #28]
   2ed94:	str	w1, [sp, #24]
   2ed98:	str	x2, [sp, #192]
   2ed9c:	str	x3, [sp, #200]
   2eda0:	str	x4, [sp, #208]
   2eda4:	str	x5, [sp, #216]
   2eda8:	str	x6, [sp, #224]
   2edac:	str	x7, [sp, #232]
   2edb0:	str	q0, [sp, #64]
   2edb4:	str	q1, [sp, #80]
   2edb8:	str	q2, [sp, #96]
   2edbc:	str	q3, [sp, #112]
   2edc0:	str	q4, [sp, #128]
   2edc4:	str	q5, [sp, #144]
   2edc8:	str	q6, [sp, #160]
   2edcc:	str	q7, [sp, #176]
   2edd0:	ldr	w0, [sp, #24]
   2edd4:	cmp	w0, #0x0
   2edd8:	b.eq	2ee1c <GOACC_wait@@GOACC_2.0+0x94>  // b.none
   2eddc:	add	x0, sp, #0xf0
   2ede0:	str	x0, [sp, #32]
   2ede4:	add	x0, sp, #0xf0
   2ede8:	str	x0, [sp, #40]
   2edec:	add	x0, sp, #0xc0
   2edf0:	str	x0, [sp, #48]
   2edf4:	mov	w0, #0xffffffd0            	// #-48
   2edf8:	str	w0, [sp, #56]
   2edfc:	mov	w0, #0xffffff80            	// #-128
   2ee00:	str	w0, [sp, #60]
   2ee04:	add	x0, sp, #0x20
   2ee08:	mov	x2, x0
   2ee0c:	ldr	w1, [sp, #24]
   2ee10:	ldr	w0, [sp, #28]
   2ee14:	bl	2e8fc <GOACC_enter_exit_data@@GOACC_2.0+0x624>
   2ee18:	b	2ee38 <GOACC_wait@@GOACC_2.0+0xb0>
   2ee1c:	ldr	w0, [sp, #28]
   2ee20:	cmn	w0, #0x2
   2ee24:	b.ne	2ee30 <GOACC_wait@@GOACC_2.0+0xa8>  // b.any
   2ee28:	bl	8700 <acc_wait_all@plt>
   2ee2c:	b	2ee38 <GOACC_wait@@GOACC_2.0+0xb0>
   2ee30:	ldr	w0, [sp, #28]
   2ee34:	bl	89e0 <acc_wait_all_async@plt>
   2ee38:	nop
   2ee3c:	ldp	x29, x30, [sp], #240
   2ee40:	ret

000000000002ee44 <GOACC_get_num_threads@@GOACC_2.0>:
   2ee44:	mov	w0, #0x1                   	// #1
   2ee48:	ret

000000000002ee4c <GOACC_get_thread_num@@GOACC_2.0>:
   2ee4c:	mov	w0, #0x0                   	// #0
   2ee50:	ret

000000000002ee54 <GOACC_declare@@GOACC_2.0.1>:
   2ee54:	stp	x29, x30, [sp, #-80]!
   2ee58:	mov	x29, sp
   2ee5c:	str	w0, [sp, #60]
   2ee60:	str	x1, [sp, #48]
   2ee64:	str	x2, [sp, #40]
   2ee68:	str	x3, [sp, #32]
   2ee6c:	str	x4, [sp, #24]
   2ee70:	str	wzr, [sp, #76]
   2ee74:	b	2f15c <GOACC_declare@@GOACC_2.0.1+0x308>
   2ee78:	ldrsw	x0, [sp, #76]
   2ee7c:	lsl	x0, x0, #1
   2ee80:	ldr	x1, [sp, #24]
   2ee84:	add	x0, x1, x0
   2ee88:	ldrh	w0, [x0]
   2ee8c:	strb	w0, [sp, #75]
   2ee90:	ldrb	w0, [sp, #75]
   2ee94:	cmp	w0, #0x4
   2ee98:	b.eq	2f134 <GOACC_declare@@GOACC_2.0.1+0x2e0>  // b.none
   2ee9c:	ldrb	w0, [sp, #75]
   2eea0:	cmp	w0, #0x5
   2eea4:	b.eq	2f134 <GOACC_declare@@GOACC_2.0.1+0x2e0>  // b.none
   2eea8:	ldrb	w0, [sp, #75]
   2eeac:	cmp	w0, #0x82
   2eeb0:	b.gt	2f114 <GOACC_declare@@GOACC_2.0.1+0x2c0>
   2eeb4:	cmp	w0, #0x80
   2eeb8:	b.ge	2ef30 <GOACC_declare@@GOACC_2.0.1+0xdc>  // b.tcont
   2eebc:	cmp	w0, #0x17
   2eec0:	b.eq	2ef30 <GOACC_declare@@GOACC_2.0.1+0xdc>  // b.none
   2eec4:	cmp	w0, #0x17
   2eec8:	b.gt	2f114 <GOACC_declare@@GOACC_2.0.1+0x2c0>
   2eecc:	cmp	w0, #0x8
   2eed0:	b.eq	2f13c <GOACC_declare@@GOACC_2.0.1+0x2e8>  // b.none
   2eed4:	cmp	w0, #0x8
   2eed8:	b.gt	2f114 <GOACC_declare@@GOACC_2.0.1+0x2c0>
   2eedc:	cmp	w0, #0x7
   2eee0:	b.eq	2ef30 <GOACC_declare@@GOACC_2.0.1+0xdc>  // b.none
   2eee4:	cmp	w0, #0x7
   2eee8:	b.gt	2f114 <GOACC_declare@@GOACC_2.0.1+0x2c0>
   2eeec:	cmp	w0, #0x6
   2eef0:	b.eq	2f09c <GOACC_declare@@GOACC_2.0.1+0x248>  // b.none
   2eef4:	cmp	w0, #0x6
   2eef8:	b.gt	2f114 <GOACC_declare@@GOACC_2.0.1+0x2c0>
   2eefc:	cmp	w0, #0x4
   2ef00:	b.eq	2ef30 <GOACC_declare@@GOACC_2.0.1+0xdc>  // b.none
   2ef04:	cmp	w0, #0x4
   2ef08:	b.gt	2f114 <GOACC_declare@@GOACC_2.0.1+0x2c0>
   2ef0c:	cmp	w0, #0x2
   2ef10:	b.eq	2f050 <GOACC_declare@@GOACC_2.0.1+0x1fc>  // b.none
   2ef14:	cmp	w0, #0x2
   2ef18:	b.gt	2f114 <GOACC_declare@@GOACC_2.0.1+0x2c0>
   2ef1c:	cmp	w0, #0x0
   2ef20:	b.eq	2ef7c <GOACC_declare@@GOACC_2.0.1+0x128>  // b.none
   2ef24:	cmp	w0, #0x1
   2ef28:	b.eq	2f004 <GOACC_declare@@GOACC_2.0.1+0x1b0>  // b.none
   2ef2c:	b	2f114 <GOACC_declare@@GOACC_2.0.1+0x2c0>
   2ef30:	ldrsw	x0, [sp, #76]
   2ef34:	lsl	x0, x0, #3
   2ef38:	ldr	x1, [sp, #40]
   2ef3c:	add	x2, x1, x0
   2ef40:	ldrsw	x0, [sp, #76]
   2ef44:	lsl	x0, x0, #3
   2ef48:	ldr	x1, [sp, #32]
   2ef4c:	add	x3, x1, x0
   2ef50:	ldrsw	x0, [sp, #76]
   2ef54:	lsl	x0, x0, #1
   2ef58:	ldr	x1, [sp, #24]
   2ef5c:	add	x0, x1, x0
   2ef60:	mov	w6, #0x0                   	// #0
   2ef64:	mov	w5, #0xfffffffe            	// #-2
   2ef68:	mov	x4, x0
   2ef6c:	mov	x1, #0x1                   	// #1
   2ef70:	ldr	w0, [sp, #60]
   2ef74:	bl	8b40 <GOACC_enter_exit_data@plt>
   2ef78:	b	2f150 <GOACC_declare@@GOACC_2.0.1+0x2fc>
   2ef7c:	ldrsw	x0, [sp, #76]
   2ef80:	lsl	x0, x0, #3
   2ef84:	ldr	x1, [sp, #40]
   2ef88:	add	x0, x1, x0
   2ef8c:	ldr	x2, [x0]
   2ef90:	ldrsw	x0, [sp, #76]
   2ef94:	lsl	x0, x0, #3
   2ef98:	ldr	x1, [sp, #32]
   2ef9c:	add	x0, x1, x0
   2efa0:	ldr	x0, [x0]
   2efa4:	mov	x1, x0
   2efa8:	mov	x0, x2
   2efac:	bl	8900 <acc_is_present@plt>
   2efb0:	cmp	w0, #0x0
   2efb4:	b.ne	2f144 <GOACC_declare@@GOACC_2.0.1+0x2f0>  // b.any
   2efb8:	ldrsw	x0, [sp, #76]
   2efbc:	lsl	x0, x0, #3
   2efc0:	ldr	x1, [sp, #40]
   2efc4:	add	x2, x1, x0
   2efc8:	ldrsw	x0, [sp, #76]
   2efcc:	lsl	x0, x0, #3
   2efd0:	ldr	x1, [sp, #32]
   2efd4:	add	x3, x1, x0
   2efd8:	ldrsw	x0, [sp, #76]
   2efdc:	lsl	x0, x0, #1
   2efe0:	ldr	x1, [sp, #24]
   2efe4:	add	x0, x1, x0
   2efe8:	mov	w6, #0x0                   	// #0
   2efec:	mov	w5, #0xfffffffe            	// #-2
   2eff0:	mov	x4, x0
   2eff4:	mov	x1, #0x1                   	// #1
   2eff8:	ldr	w0, [sp, #60]
   2effc:	bl	8b40 <GOACC_enter_exit_data@plt>
   2f000:	b	2f144 <GOACC_declare@@GOACC_2.0.1+0x2f0>
   2f004:	ldrsw	x0, [sp, #76]
   2f008:	lsl	x0, x0, #3
   2f00c:	ldr	x1, [sp, #40]
   2f010:	add	x2, x1, x0
   2f014:	ldrsw	x0, [sp, #76]
   2f018:	lsl	x0, x0, #3
   2f01c:	ldr	x1, [sp, #32]
   2f020:	add	x3, x1, x0
   2f024:	ldrsw	x0, [sp, #76]
   2f028:	lsl	x0, x0, #1
   2f02c:	ldr	x1, [sp, #24]
   2f030:	add	x0, x1, x0
   2f034:	mov	w6, #0x0                   	// #0
   2f038:	mov	w5, #0xfffffffe            	// #-2
   2f03c:	mov	x4, x0
   2f040:	mov	x1, #0x1                   	// #1
   2f044:	ldr	w0, [sp, #60]
   2f048:	bl	8b40 <GOACC_enter_exit_data@plt>
   2f04c:	b	2f150 <GOACC_declare@@GOACC_2.0.1+0x2fc>
   2f050:	ldrsw	x0, [sp, #76]
   2f054:	lsl	x0, x0, #3
   2f058:	ldr	x1, [sp, #40]
   2f05c:	add	x2, x1, x0
   2f060:	ldrsw	x0, [sp, #76]
   2f064:	lsl	x0, x0, #3
   2f068:	ldr	x1, [sp, #32]
   2f06c:	add	x3, x1, x0
   2f070:	ldrsw	x0, [sp, #76]
   2f074:	lsl	x0, x0, #1
   2f078:	ldr	x1, [sp, #24]
   2f07c:	add	x0, x1, x0
   2f080:	mov	w6, #0x0                   	// #0
   2f084:	mov	w5, #0xfffffffe            	// #-2
   2f088:	mov	x4, x0
   2f08c:	mov	x1, #0x1                   	// #1
   2f090:	ldr	w0, [sp, #60]
   2f094:	bl	8b40 <GOACC_enter_exit_data@plt>
   2f098:	b	2f150 <GOACC_declare@@GOACC_2.0.1+0x2fc>
   2f09c:	ldrsw	x0, [sp, #76]
   2f0a0:	lsl	x0, x0, #3
   2f0a4:	ldr	x1, [sp, #40]
   2f0a8:	add	x0, x1, x0
   2f0ac:	ldr	x2, [x0]
   2f0b0:	ldrsw	x0, [sp, #76]
   2f0b4:	lsl	x0, x0, #3
   2f0b8:	ldr	x1, [sp, #32]
   2f0bc:	add	x0, x1, x0
   2f0c0:	ldr	x0, [x0]
   2f0c4:	mov	x1, x0
   2f0c8:	mov	x0, x2
   2f0cc:	bl	8900 <acc_is_present@plt>
   2f0d0:	cmp	w0, #0x0
   2f0d4:	b.ne	2f14c <GOACC_declare@@GOACC_2.0.1+0x2f8>  // b.any
   2f0d8:	ldrsw	x0, [sp, #76]
   2f0dc:	lsl	x0, x0, #3
   2f0e0:	ldr	x1, [sp, #40]
   2f0e4:	add	x0, x1, x0
   2f0e8:	ldr	x3, [x0]
   2f0ec:	ldrsw	x0, [sp, #76]
   2f0f0:	lsl	x0, x0, #3
   2f0f4:	ldr	x1, [sp, #32]
   2f0f8:	add	x0, x1, x0
   2f0fc:	ldr	x0, [x0]
   2f100:	mov	x2, x0
   2f104:	mov	x1, x3
   2f108:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f10c:	add	x0, x0, #0x448
   2f110:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2f114:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f118:	add	x3, x0, #0x4d0
   2f11c:	mov	w2, #0x2cc                 	// #716
   2f120:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f124:	add	x1, x0, #0x460
   2f128:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f12c:	add	x0, x0, #0x488
   2f130:	bl	8bd0 <__assert_fail@plt>
   2f134:	nop
   2f138:	b	2f150 <GOACC_declare@@GOACC_2.0.1+0x2fc>
   2f13c:	nop
   2f140:	b	2f150 <GOACC_declare@@GOACC_2.0.1+0x2fc>
   2f144:	nop
   2f148:	b	2f150 <GOACC_declare@@GOACC_2.0.1+0x2fc>
   2f14c:	nop
   2f150:	ldr	w0, [sp, #76]
   2f154:	add	w0, w0, #0x1
   2f158:	str	w0, [sp, #76]
   2f15c:	ldrsw	x0, [sp, #76]
   2f160:	ldr	x1, [sp, #48]
   2f164:	cmp	x1, x0
   2f168:	b.hi	2ee78 <GOACC_declare@@GOACC_2.0.1+0x24>  // b.pmore
   2f16c:	nop
   2f170:	nop
   2f174:	ldp	x29, x30, [sp], #80
   2f178:	ret
   2f17c:	sub	sp, sp, #0x10
   2f180:	str	x0, [sp, #8]
   2f184:	ldr	x0, [sp, #8]
   2f188:	str	wzr, [x0]
   2f18c:	nop
   2f190:	add	sp, sp, #0x10
   2f194:	ret
   2f198:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f19c:	add	x0, x0, #0x368
   2f1a0:	ldr	x0, [x0]
   2f1a4:	ret
   2f1a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f1ac:	add	x0, x0, #0x368
   2f1b0:	ldr	w0, [x0, #8]
   2f1b4:	ret
   2f1b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f1bc:	add	x0, x0, #0x368
   2f1c0:	ldr	w0, [x0, #16]
   2f1c4:	ret
   2f1c8:	mov	w0, #0x1                   	// #1
   2f1cc:	ret
   2f1d0:	sub	sp, sp, #0x10
   2f1d4:	str	w0, [sp, #12]
   2f1d8:	mov	w0, #0x1                   	// #1
   2f1dc:	add	sp, sp, #0x10
   2f1e0:	ret
   2f1e4:	sub	sp, sp, #0x10
   2f1e8:	str	w0, [sp, #12]
   2f1ec:	mov	w0, #0x1                   	// #1
   2f1f0:	add	sp, sp, #0x10
   2f1f4:	ret
   2f1f8:	mov	w0, #0x1                   	// #1
   2f1fc:	ret
   2f200:	sub	sp, sp, #0x20
   2f204:	str	w0, [sp, #28]
   2f208:	str	w1, [sp, #24]
   2f20c:	str	x2, [sp, #16]
   2f210:	str	x3, [sp, #8]
   2f214:	mov	w0, #0x0                   	// #0
   2f218:	add	sp, sp, #0x20
   2f21c:	ret
   2f220:	sub	sp, sp, #0x10
   2f224:	str	w0, [sp, #12]
   2f228:	str	w1, [sp, #8]
   2f22c:	str	x2, [sp]
   2f230:	mov	w0, #0x1                   	// #1
   2f234:	add	sp, sp, #0x10
   2f238:	ret
   2f23c:	stp	x29, x30, [sp, #-32]!
   2f240:	mov	x29, sp
   2f244:	str	w0, [sp, #28]
   2f248:	str	x1, [sp, #16]
   2f24c:	ldr	x0, [sp, #16]
   2f250:	bl	8dd0 <fprintf@plt+0x1a0>
   2f254:	ldp	x29, x30, [sp], #32
   2f258:	ret
   2f25c:	stp	x29, x30, [sp, #-32]!
   2f260:	mov	x29, sp
   2f264:	str	w0, [sp, #28]
   2f268:	str	x1, [sp, #16]
   2f26c:	ldr	x0, [sp, #16]
   2f270:	bl	8a20 <free@plt>
   2f274:	mov	w0, #0x1                   	// #1
   2f278:	ldp	x29, x30, [sp], #32
   2f27c:	ret
   2f280:	sub	sp, sp, #0x20
   2f284:	str	w0, [sp, #28]
   2f288:	str	x1, [sp, #16]
   2f28c:	str	x2, [sp, #8]
   2f290:	str	x3, [sp]
   2f294:	mov	w0, #0x1                   	// #1
   2f298:	add	sp, sp, #0x20
   2f29c:	ret
   2f2a0:	sub	sp, sp, #0x20
   2f2a4:	str	w0, [sp, #28]
   2f2a8:	str	x1, [sp, #16]
   2f2ac:	str	x2, [sp, #8]
   2f2b0:	str	x3, [sp]
   2f2b4:	mov	w0, #0x1                   	// #1
   2f2b8:	add	sp, sp, #0x20
   2f2bc:	ret
   2f2c0:	stp	x29, x30, [sp, #-64]!
   2f2c4:	mov	x29, sp
   2f2c8:	str	w0, [sp, #44]
   2f2cc:	str	x1, [sp, #32]
   2f2d0:	str	x2, [sp, #24]
   2f2d4:	str	x3, [sp, #16]
   2f2d8:	ldr	x0, [sp, #32]
   2f2dc:	str	x0, [sp, #56]
   2f2e0:	ldr	x1, [sp, #56]
   2f2e4:	ldr	x0, [sp, #24]
   2f2e8:	blr	x1
   2f2ec:	nop
   2f2f0:	ldp	x29, x30, [sp], #64
   2f2f4:	ret
   2f2f8:	stp	x29, x30, [sp, #-80]!
   2f2fc:	mov	x29, sp
   2f300:	str	x0, [sp, #72]
   2f304:	str	x1, [sp, #64]
   2f308:	str	x2, [sp, #56]
   2f30c:	str	x3, [sp, #48]
   2f310:	str	w4, [sp, #44]
   2f314:	str	x5, [sp, #32]
   2f318:	str	x6, [sp, #24]
   2f31c:	ldr	x1, [sp, #72]
   2f320:	ldr	x0, [sp, #56]
   2f324:	blr	x1
   2f328:	nop
   2f32c:	ldp	x29, x30, [sp], #80
   2f330:	ret
   2f334:	sub	sp, sp, #0x10
   2f338:	str	x0, [sp, #8]
   2f33c:	str	w1, [sp, #4]
   2f340:	nop
   2f344:	add	sp, sp, #0x10
   2f348:	ret
   2f34c:	sub	sp, sp, #0x10
   2f350:	str	w0, [sp, #12]
   2f354:	mov	w0, #0x1                   	// #1
   2f358:	add	sp, sp, #0x10
   2f35c:	ret
   2f360:	mov	w0, #0x1                   	// #1
   2f364:	ret
   2f368:	sub	sp, sp, #0x10
   2f36c:	str	w0, [sp, #12]
   2f370:	nop
   2f374:	add	sp, sp, #0x10
   2f378:	ret
   2f37c:	sub	sp, sp, #0x10
   2f380:	str	w0, [sp, #12]
   2f384:	str	w1, [sp, #8]
   2f388:	nop
   2f38c:	add	sp, sp, #0x10
   2f390:	ret
   2f394:	nop
   2f398:	ret
   2f39c:	sub	sp, sp, #0x10
   2f3a0:	str	w0, [sp, #12]
   2f3a4:	nop
   2f3a8:	add	sp, sp, #0x10
   2f3ac:	ret
   2f3b0:	sub	sp, sp, #0x10
   2f3b4:	str	w0, [sp, #12]
   2f3b8:	nop
   2f3bc:	add	sp, sp, #0x10
   2f3c0:	ret
   2f3c4:	sub	sp, sp, #0x10
   2f3c8:	str	w0, [sp, #12]
   2f3cc:	mov	x0, #0x0                   	// #0
   2f3d0:	add	sp, sp, #0x10
   2f3d4:	ret
   2f3d8:	sub	sp, sp, #0x10
   2f3dc:	str	x0, [sp, #8]
   2f3e0:	nop
   2f3e4:	add	sp, sp, #0x10
   2f3e8:	ret
   2f3ec:	stp	x29, x30, [sp, #-16]!
   2f3f0:	mov	x29, sp
   2f3f4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f3f8:	add	x0, x0, #0x410
   2f3fc:	bl	2f17c <GOACC_declare@@GOACC_2.0.1+0x328>
   2f400:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f404:	add	x0, x0, #0x368
   2f408:	bl	2f530 <GOACC_declare@@GOACC_2.0.1+0x6dc>
   2f40c:	nop
   2f410:	ldp	x29, x30, [sp], #16
   2f414:	ret
   2f418:	sub	sp, sp, #0x10
   2f41c:	str	x0, [sp, #8]
   2f420:	ldr	x0, [sp, #8]
   2f424:	str	wzr, [x0]
   2f428:	nop
   2f42c:	add	sp, sp, #0x10
   2f430:	ret
   2f434:	nop
   2f438:	stp	x29, x30, [sp, #-48]!
   2f43c:	mov	x29, sp
   2f440:	str	x0, [sp, #24]
   2f444:	str	wzr, [sp, #44]
   2f448:	ldr	x1, [sp, #24]
   2f44c:	add	x0, sp, #0x2c
   2f450:	ldr	w3, [x0]
   2f454:	mov	w4, #0x1                   	// #1
   2f458:	ldaxr	w2, [x1]
   2f45c:	cmp	w2, w3
   2f460:	b.ne	2f46c <GOACC_declare@@GOACC_2.0.1+0x618>  // b.any
   2f464:	stxr	w5, w4, [x1]
   2f468:	cbnz	w5, 2f458 <GOACC_declare@@GOACC_2.0.1+0x604>
   2f46c:	cset	w1, eq  // eq = none
   2f470:	cmp	w1, #0x0
   2f474:	b.ne	2f47c <GOACC_declare@@GOACC_2.0.1+0x628>  // b.any
   2f478:	str	w2, [x0]
   2f47c:	mov	w0, w1
   2f480:	eor	w0, w0, #0x1
   2f484:	and	w0, w0, #0xff
   2f488:	cmp	w0, #0x0
   2f48c:	b.eq	2f4a0 <GOACC_declare@@GOACC_2.0.1+0x64c>  // b.none
   2f490:	ldr	w0, [sp, #44]
   2f494:	mov	w1, w0
   2f498:	ldr	x0, [sp, #24]
   2f49c:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
   2f4a0:	nop
   2f4a4:	ldp	x29, x30, [sp], #48
   2f4a8:	ret
   2f4ac:	nop
   2f4b0:	stp	x29, x30, [sp, #-48]!
   2f4b4:	mov	x29, sp
   2f4b8:	str	x0, [sp, #24]
   2f4bc:	ldr	x1, [sp, #24]
   2f4c0:	ldxr	w0, [x1]
   2f4c4:	stlxr	w2, wzr, [x1]
   2f4c8:	cbnz	w2, 2f4c0 <GOACC_declare@@GOACC_2.0.1+0x66c>
   2f4cc:	str	w0, [sp, #44]
   2f4d0:	ldr	w0, [sp, #44]
   2f4d4:	lsr	w0, w0, #31
   2f4d8:	and	w0, w0, #0xff
   2f4dc:	and	x0, x0, #0xff
   2f4e0:	cmp	x0, #0x0
   2f4e4:	b.eq	2f4f0 <GOACC_declare@@GOACC_2.0.1+0x69c>  // b.none
   2f4e8:	ldr	x0, [sp, #24]
   2f4ec:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
   2f4f0:	nop
   2f4f4:	ldp	x29, x30, [sp], #48
   2f4f8:	ret
   2f4fc:	nop
   2f500:	sub	sp, sp, #0x10
   2f504:	str	w0, [sp, #12]
   2f508:	ldr	w0, [sp, #12]
   2f50c:	add	sp, sp, #0x10
   2f510:	ret
   2f514:	nop
   2f518:	mrs	x1, tpidr_el0
   2f51c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   2f520:	ldr	x0, [x0, #4048]
   2f524:	add	x0, x1, x0
   2f528:	ldr	x0, [x0]
   2f52c:	ret
   2f530:	stp	x29, x30, [sp, #-32]!
   2f534:	mov	x29, sp
   2f538:	str	x0, [sp, #24]
   2f53c:	ldr	x0, [sp, #24]
   2f540:	ldr	w0, [x0, #12]
   2f544:	cmp	w0, #0x0
   2f548:	b.ne	2f620 <GOACC_declare@@GOACC_2.0.1+0x7cc>  // b.any
   2f54c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f550:	add	x0, x0, #0x5b0
   2f554:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   2f558:	ldr	x0, [sp, #24]
   2f55c:	ldr	w0, [x0, #16]
   2f560:	bl	2f500 <GOACC_declare@@GOACC_2.0.1+0x6ac>
   2f564:	cmp	w0, #0x0
   2f568:	b.eq	2f594 <GOACC_declare@@GOACC_2.0.1+0x740>  // b.none
   2f56c:	ldr	x0, [sp, #24]
   2f570:	ldr	w0, [x0, #16]
   2f574:	bl	2f500 <GOACC_declare@@GOACC_2.0.1+0x6ac>
   2f578:	cmp	w0, #0x1
   2f57c:	b.eq	2f594 <GOACC_declare@@GOACC_2.0.1+0x740>  // b.none
   2f580:	ldr	x0, [sp, #24]
   2f584:	ldr	w0, [x0, #16]
   2f588:	bl	2f500 <GOACC_declare@@GOACC_2.0.1+0x6ac>
   2f58c:	cmp	w0, #0x4
   2f590:	b.ne	2f5b4 <GOACC_declare@@GOACC_2.0.1+0x760>  // b.any
   2f594:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f598:	add	x3, x0, #0x808
   2f59c:	mov	w2, #0x4c                  	// #76
   2f5a0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f5a4:	add	x1, x0, #0x4e8
   2f5a8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f5ac:	add	x0, x0, #0x508
   2f5b0:	bl	8bd0 <__assert_fail@plt>
   2f5b4:	ldr	x0, [sp, #24]
   2f5b8:	ldr	w1, [x0, #16]
   2f5bc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f5c0:	add	x0, x0, #0x5d8
   2f5c4:	mov	w1, w1
   2f5c8:	ldr	x0, [x0, x1, lsl #3]
   2f5cc:	cmp	x0, #0x0
   2f5d0:	b.eq	2f5f4 <GOACC_declare@@GOACC_2.0.1+0x7a0>  // b.none
   2f5d4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f5d8:	add	x3, x0, #0x808
   2f5dc:	mov	w2, #0x4f                  	// #79
   2f5e0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f5e4:	add	x1, x0, #0x4e8
   2f5e8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f5ec:	add	x0, x0, #0x5a8
   2f5f0:	bl	8bd0 <__assert_fail@plt>
   2f5f4:	ldr	x0, [sp, #24]
   2f5f8:	ldr	w1, [x0, #16]
   2f5fc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f600:	add	x0, x0, #0x5d8
   2f604:	mov	w1, w1
   2f608:	ldr	x2, [sp, #24]
   2f60c:	str	x2, [x0, x1, lsl #3]
   2f610:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f614:	add	x0, x0, #0x5b0
   2f618:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2f61c:	b	2f624 <GOACC_declare@@GOACC_2.0.1+0x7d0>
   2f620:	nop
   2f624:	ldp	x29, x30, [sp], #32
   2f628:	ret
   2f62c:	nop
   2f630:	stp	x29, x30, [sp, #-32]!
   2f634:	mov	x29, sp
   2f638:	str	x0, [sp, #24]
   2f63c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f640:	add	x1, x0, #0x5c8
   2f644:	ldr	x0, [sp, #24]
   2f648:	bl	89b0 <strcmp@plt>
   2f64c:	cmp	w0, #0x0
   2f650:	b.ne	2f660 <GOACC_declare@@GOACC_2.0.1+0x80c>  // b.any
   2f654:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f658:	add	x0, x0, #0x5d0
   2f65c:	b	2f664 <GOACC_declare@@GOACC_2.0.1+0x810>
   2f660:	ldr	x0, [sp, #24]
   2f664:	ldp	x29, x30, [sp], #32
   2f668:	ret
   2f66c:	nop
   2f670:	stp	x29, x30, [sp, #-32]!
   2f674:	mov	x29, sp
   2f678:	str	w0, [sp, #28]
   2f67c:	ldr	w0, [sp, #28]
   2f680:	cmp	w0, #0x5
   2f684:	b.eq	2f710 <GOACC_declare@@GOACC_2.0.1+0x8bc>  // b.none
   2f688:	ldr	w0, [sp, #28]
   2f68c:	cmp	w0, #0x5
   2f690:	b.gt	2f71c <GOACC_declare@@GOACC_2.0.1+0x8c8>
   2f694:	ldr	w0, [sp, #28]
   2f698:	cmp	w0, #0x4
   2f69c:	b.eq	2f704 <GOACC_declare@@GOACC_2.0.1+0x8b0>  // b.none
   2f6a0:	ldr	w0, [sp, #28]
   2f6a4:	cmp	w0, #0x4
   2f6a8:	b.gt	2f71c <GOACC_declare@@GOACC_2.0.1+0x8c8>
   2f6ac:	ldr	w0, [sp, #28]
   2f6b0:	cmp	w0, #0x2
   2f6b4:	b.eq	2f6f8 <GOACC_declare@@GOACC_2.0.1+0x8a4>  // b.none
   2f6b8:	ldr	w0, [sp, #28]
   2f6bc:	cmp	w0, #0x2
   2f6c0:	b.gt	2f71c <GOACC_declare@@GOACC_2.0.1+0x8c8>
   2f6c4:	ldr	w0, [sp, #28]
   2f6c8:	cmp	w0, #0x0
   2f6cc:	b.eq	2f6e0 <GOACC_declare@@GOACC_2.0.1+0x88c>  // b.none
   2f6d0:	ldr	w0, [sp, #28]
   2f6d4:	cmp	w0, #0x1
   2f6d8:	b.eq	2f6ec <GOACC_declare@@GOACC_2.0.1+0x898>  // b.none
   2f6dc:	b	2f71c <GOACC_declare@@GOACC_2.0.1+0x8c8>
   2f6e0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f6e4:	add	x0, x0, #0x5d8
   2f6e8:	b	2f730 <GOACC_declare@@GOACC_2.0.1+0x8dc>
   2f6ec:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f6f0:	add	x0, x0, #0x5e0
   2f6f4:	b	2f730 <GOACC_declare@@GOACC_2.0.1+0x8dc>
   2f6f8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f6fc:	add	x0, x0, #0x5a0
   2f700:	b	2f730 <GOACC_declare@@GOACC_2.0.1+0x8dc>
   2f704:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f708:	add	x0, x0, #0x5e8
   2f70c:	b	2f730 <GOACC_declare@@GOACC_2.0.1+0x8dc>
   2f710:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f714:	add	x0, x0, #0x5d0
   2f718:	b	2f730 <GOACC_declare@@GOACC_2.0.1+0x8dc>
   2f71c:	ldr	w0, [sp, #28]
   2f720:	mov	w1, w0
   2f724:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f728:	add	x0, x0, #0x5f8
   2f72c:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2f730:	ldp	x29, x30, [sp], #32
   2f734:	ret
   2f738:	stp	x29, x30, [sp, #-64]!
   2f73c:	mov	x29, sp
   2f740:	str	x19, [sp, #16]
   2f744:	str	w0, [sp, #44]
   2f748:	strb	w1, [sp, #43]
   2f74c:	ldr	w0, [sp, #44]
   2f750:	str	w0, [sp, #60]
   2f754:	ldr	w0, [sp, #44]
   2f758:	cmp	w0, #0x4
   2f75c:	b.eq	2f8a8 <GOACC_declare@@GOACC_2.0.1+0xa54>  // b.none
   2f760:	ldr	w0, [sp, #44]
   2f764:	cmp	w0, #0x4
   2f768:	b.gt	2f904 <GOACC_declare@@GOACC_2.0.1+0xab0>
   2f76c:	ldr	w0, [sp, #44]
   2f770:	cmp	w0, #0x1
   2f774:	b.eq	2f788 <GOACC_declare@@GOACC_2.0.1+0x934>  // b.none
   2f778:	ldr	w0, [sp, #44]
   2f77c:	cmp	w0, #0x2
   2f780:	b.eq	2f924 <GOACC_declare@@GOACC_2.0.1+0xad0>  // b.none
   2f784:	b	2f904 <GOACC_declare@@GOACC_2.0.1+0xab0>
   2f788:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f78c:	add	x0, x0, #0x618
   2f790:	ldr	x0, [x0]
   2f794:	cmp	x0, #0x0
   2f798:	b.eq	2f864 <GOACC_declare@@GOACC_2.0.1+0xa10>  // b.none
   2f79c:	b	2f810 <GOACC_declare@@GOACC_2.0.1+0x9bc>
   2f7a0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f7a4:	add	x0, x0, #0x5d8
   2f7a8:	ldrsw	x1, [sp, #44]
   2f7ac:	ldr	x0, [x0, x1, lsl #3]
   2f7b0:	cmp	x0, #0x0
   2f7b4:	b.eq	2f810 <GOACC_declare@@GOACC_2.0.1+0x9bc>  // b.none
   2f7b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f7bc:	add	x0, x0, #0x618
   2f7c0:	ldr	x19, [x0]
   2f7c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f7c8:	add	x0, x0, #0x5d8
   2f7cc:	ldrsw	x1, [sp, #44]
   2f7d0:	ldr	x0, [x0, x1, lsl #3]
   2f7d4:	ldr	x0, [x0]
   2f7d8:	bl	2f630 <GOACC_declare@@GOACC_2.0.1+0x7dc>
   2f7dc:	mov	x1, x0
   2f7e0:	mov	x0, x19
   2f7e4:	bl	8910 <strcasecmp@plt>
   2f7e8:	cmp	w0, #0x0
   2f7ec:	b.ne	2f810 <GOACC_declare@@GOACC_2.0.1+0x9bc>  // b.any
   2f7f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f7f4:	add	x0, x0, #0x5d8
   2f7f8:	ldrsw	x1, [sp, #44]
   2f7fc:	ldr	x0, [x0, x1, lsl #3]
   2f800:	ldr	x0, [x0, #48]
   2f804:	blr	x0
   2f808:	cmp	w0, #0x0
   2f80c:	b.gt	2f92c <GOACC_declare@@GOACC_2.0.1+0xad8>
   2f810:	ldr	w0, [sp, #44]
   2f814:	add	w0, w0, #0x1
   2f818:	str	w0, [sp, #44]
   2f81c:	ldr	w0, [sp, #44]
   2f820:	cmp	w0, #0x6
   2f824:	b.ne	2f7a0 <GOACC_declare@@GOACC_2.0.1+0x94c>  // b.any
   2f828:	ldrb	w0, [sp, #43]
   2f82c:	cmp	w0, #0x0
   2f830:	b.eq	2f85c <GOACC_declare@@GOACC_2.0.1+0xa08>  // b.none
   2f834:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f838:	add	x0, x0, #0x5b0
   2f83c:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2f840:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f844:	add	x0, x0, #0x618
   2f848:	ldr	x0, [x0]
   2f84c:	mov	x1, x0
   2f850:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f854:	add	x0, x0, #0x610
   2f858:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2f85c:	mov	x0, #0x0                   	// #0
   2f860:	b	2f9e4 <GOACC_declare@@GOACC_2.0.1+0xb90>
   2f864:	mov	w0, #0x4                   	// #4
   2f868:	str	w0, [sp, #44]
   2f86c:	b	2f8a8 <GOACC_declare@@GOACC_2.0.1+0xa54>
   2f870:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f874:	add	x0, x0, #0x5d8
   2f878:	ldrsw	x1, [sp, #44]
   2f87c:	ldr	x0, [x0, x1, lsl #3]
   2f880:	cmp	x0, #0x0
   2f884:	b.eq	2f8a8 <GOACC_declare@@GOACC_2.0.1+0xa54>  // b.none
   2f888:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f88c:	add	x0, x0, #0x5d8
   2f890:	ldrsw	x1, [sp, #44]
   2f894:	ldr	x0, [x0, x1, lsl #3]
   2f898:	ldr	x0, [x0, #48]
   2f89c:	blr	x0
   2f8a0:	cmp	w0, #0x0
   2f8a4:	b.gt	2f934 <GOACC_declare@@GOACC_2.0.1+0xae0>
   2f8a8:	ldr	w0, [sp, #44]
   2f8ac:	add	w0, w0, #0x1
   2f8b0:	str	w0, [sp, #44]
   2f8b4:	ldr	w0, [sp, #44]
   2f8b8:	cmp	w0, #0x6
   2f8bc:	b.ne	2f870 <GOACC_declare@@GOACC_2.0.1+0xa1c>  // b.any
   2f8c0:	ldr	w0, [sp, #60]
   2f8c4:	cmp	w0, #0x1
   2f8c8:	b.ne	2f8d8 <GOACC_declare@@GOACC_2.0.1+0xa84>  // b.any
   2f8cc:	mov	w0, #0x2                   	// #2
   2f8d0:	str	w0, [sp, #44]
   2f8d4:	b	2f940 <GOACC_declare@@GOACC_2.0.1+0xaec>
   2f8d8:	ldrb	w0, [sp, #43]
   2f8dc:	cmp	w0, #0x0
   2f8e0:	b.eq	2f8fc <GOACC_declare@@GOACC_2.0.1+0xaa8>  // b.none
   2f8e4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f8e8:	add	x0, x0, #0x5b0
   2f8ec:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2f8f0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f8f4:	add	x0, x0, #0x630
   2f8f8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2f8fc:	mov	x0, #0x0                   	// #0
   2f900:	b	2f9e4 <GOACC_declare@@GOACC_2.0.1+0xb90>
   2f904:	ldr	w0, [sp, #44]
   2f908:	cmp	w0, #0x6
   2f90c:	b.le	2f93c <GOACC_declare@@GOACC_2.0.1+0xae8>
   2f910:	ldrb	w0, [sp, #43]
   2f914:	cmp	w0, #0x0
   2f918:	b.ne	2f9ac <GOACC_declare@@GOACC_2.0.1+0xb58>  // b.any
   2f91c:	mov	x0, #0x0                   	// #0
   2f920:	b	2f9e4 <GOACC_declare@@GOACC_2.0.1+0xb90>
   2f924:	nop
   2f928:	b	2f940 <GOACC_declare@@GOACC_2.0.1+0xaec>
   2f92c:	nop
   2f930:	b	2f940 <GOACC_declare@@GOACC_2.0.1+0xaec>
   2f934:	nop
   2f938:	b	2f940 <GOACC_declare@@GOACC_2.0.1+0xaec>
   2f93c:	nop
   2f940:	ldr	w0, [sp, #44]
   2f944:	cmp	w0, #0x0
   2f948:	b.eq	2f964 <GOACC_declare@@GOACC_2.0.1+0xb10>  // b.none
   2f94c:	ldr	w0, [sp, #44]
   2f950:	cmp	w0, #0x1
   2f954:	b.eq	2f964 <GOACC_declare@@GOACC_2.0.1+0xb10>  // b.none
   2f958:	ldr	w0, [sp, #44]
   2f95c:	cmp	w0, #0x4
   2f960:	b.ne	2f984 <GOACC_declare@@GOACC_2.0.1+0xb30>  // b.any
   2f964:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f968:	add	x3, x0, #0x818
   2f96c:	mov	w2, #0xb6                  	// #182
   2f970:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f974:	add	x1, x0, #0x4e8
   2f978:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f97c:	add	x0, x0, #0x640
   2f980:	bl	8bd0 <__assert_fail@plt>
   2f984:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f988:	add	x0, x0, #0x5d8
   2f98c:	ldrsw	x1, [sp, #44]
   2f990:	ldr	x0, [x0, x1, lsl #3]
   2f994:	cmp	x0, #0x0
   2f998:	b.ne	2f9d4 <GOACC_declare@@GOACC_2.0.1+0xb80>  // b.any
   2f99c:	ldrb	w0, [sp, #43]
   2f9a0:	cmp	w0, #0x0
   2f9a4:	b.eq	2f9d4 <GOACC_declare@@GOACC_2.0.1+0xb80>  // b.none
   2f9a8:	b	2f9b0 <GOACC_declare@@GOACC_2.0.1+0xb5c>
   2f9ac:	nop
   2f9b0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f9b4:	add	x0, x0, #0x5b0
   2f9b8:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2f9bc:	ldr	w0, [sp, #44]
   2f9c0:	bl	2f670 <GOACC_declare@@GOACC_2.0.1+0x81c>
   2f9c4:	mov	x1, x0
   2f9c8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2f9cc:	add	x0, x0, #0x610
   2f9d0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2f9d4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2f9d8:	add	x0, x0, #0x5d8
   2f9dc:	ldrsw	x1, [sp, #44]
   2f9e0:	ldr	x0, [x0, x1, lsl #3]
   2f9e4:	ldr	x19, [sp, #16]
   2f9e8:	ldp	x29, x30, [sp], #64
   2f9ec:	ret
   2f9f0:	stp	x29, x30, [sp, #-32]!
   2f9f4:	mov	x29, sp
   2f9f8:	str	w0, [sp, #28]
   2f9fc:	str	w1, [sp, #24]
   2fa00:	str	w2, [sp, #20]
   2fa04:	ldr	w0, [sp, #20]
   2fa08:	cmp	w0, #0x0
   2fa0c:	b.ne	2fa28 <GOACC_declare@@GOACC_2.0.1+0xbd4>  // b.any
   2fa10:	ldr	w0, [sp, #28]
   2fa14:	bl	2f670 <GOACC_declare@@GOACC_2.0.1+0x81c>
   2fa18:	mov	x1, x0
   2fa1c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2fa20:	add	x0, x0, #0x690
   2fa24:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2fa28:	ldr	w1, [sp, #24]
   2fa2c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2fa30:	add	x0, x0, #0x6b0
   2fa34:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2fa38:	stp	x29, x30, [sp, #-64]!
   2fa3c:	mov	x29, sp
   2fa40:	str	w0, [sp, #28]
   2fa44:	mov	w1, #0x1                   	// #1
   2fa48:	ldr	w0, [sp, #28]
   2fa4c:	bl	2f738 <GOACC_declare@@GOACC_2.0.1+0x8e4>
   2fa50:	str	x0, [sp, #56]
   2fa54:	ldr	x0, [sp, #56]
   2fa58:	ldr	x0, [x0, #48]
   2fa5c:	blr	x0
   2fa60:	str	w0, [sp, #52]
   2fa64:	ldr	w0, [sp, #52]
   2fa68:	cmp	w0, #0x0
   2fa6c:	b.le	2fa88 <GOACC_declare@@GOACC_2.0.1+0xc34>
   2fa70:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fa74:	add	x0, x0, #0x680
   2fa78:	ldr	w0, [x0]
   2fa7c:	ldr	w1, [sp, #52]
   2fa80:	cmp	w1, w0
   2fa84:	b.gt	2faa4 <GOACC_declare@@GOACC_2.0.1+0xc50>
   2fa88:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fa8c:	add	x0, x0, #0x680
   2fa90:	ldr	w0, [x0]
   2fa94:	ldr	w2, [sp, #52]
   2fa98:	mov	w1, w0
   2fa9c:	ldr	w0, [sp, #28]
   2faa0:	bl	2f9f0 <GOACC_declare@@GOACC_2.0.1+0xb9c>
   2faa4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2faa8:	add	x0, x0, #0x680
   2faac:	ldr	w0, [x0]
   2fab0:	sxtw	x1, w0
   2fab4:	mov	x0, x1
   2fab8:	lsl	x0, x0, #2
   2fabc:	add	x0, x0, x1
   2fac0:	lsl	x0, x0, #2
   2fac4:	sub	x0, x0, x1
   2fac8:	lsl	x0, x0, #4
   2facc:	mov	x1, x0
   2fad0:	ldr	x0, [sp, #56]
   2fad4:	add	x0, x0, x1
   2fad8:	str	x0, [sp, #40]
   2fadc:	ldr	x0, [sp, #40]
   2fae0:	add	x0, x0, #0xa8
   2fae4:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   2fae8:	ldr	x0, [sp, #40]
   2faec:	ldr	w0, [x0, #172]
   2faf0:	cmp	w0, #0x1
   2faf4:	b.ne	2fb10 <GOACC_declare@@GOACC_2.0.1+0xcbc>  // b.any
   2faf8:	ldr	x0, [sp, #40]
   2fafc:	add	x0, x0, #0xa8
   2fb00:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2fb04:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2fb08:	add	x0, x0, #0x6c8
   2fb0c:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2fb10:	ldr	x0, [sp, #40]
   2fb14:	bl	28e68 <GOMP_offload_unregister@@GOMP_4.0.1+0x34>
   2fb18:	ldr	x0, [sp, #40]
   2fb1c:	add	x0, x0, #0xa8
   2fb20:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2fb24:	ldr	x0, [sp, #56]
   2fb28:	ldp	x29, x30, [sp], #64
   2fb2c:	ret
   2fb30:	stp	x29, x30, [sp, #-80]!
   2fb34:	mov	x29, sp
   2fb38:	str	w0, [sp, #28]
   2fb3c:	strb	wzr, [sp, #67]
   2fb40:	mov	w1, #0x1                   	// #1
   2fb44:	ldr	w0, [sp, #28]
   2fb48:	bl	2f738 <GOACC_declare@@GOACC_2.0.1+0x8e4>
   2fb4c:	str	x0, [sp, #56]
   2fb50:	ldr	x0, [sp, #56]
   2fb54:	ldr	x0, [x0, #48]
   2fb58:	blr	x0
   2fb5c:	str	w0, [sp, #52]
   2fb60:	str	wzr, [sp, #68]
   2fb64:	b	2fbc0 <GOACC_declare@@GOACC_2.0.1+0xd6c>
   2fb68:	ldrsw	x1, [sp, #68]
   2fb6c:	mov	x0, x1
   2fb70:	lsl	x0, x0, #2
   2fb74:	add	x0, x0, x1
   2fb78:	lsl	x0, x0, #2
   2fb7c:	sub	x0, x0, x1
   2fb80:	lsl	x0, x0, #4
   2fb84:	mov	x1, x0
   2fb88:	ldr	x0, [sp, #56]
   2fb8c:	add	x0, x0, x1
   2fb90:	str	x0, [sp, #32]
   2fb94:	ldr	x0, [sp, #32]
   2fb98:	add	x0, x0, #0xa8
   2fb9c:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   2fba0:	ldr	x0, [sp, #32]
   2fba4:	bl	28f60 <GOMP_offload_unregister@@GOMP_4.0.1+0x12c>
   2fba8:	ldr	x0, [sp, #32]
   2fbac:	add	x0, x0, #0xa8
   2fbb0:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2fbb4:	ldr	w0, [sp, #68]
   2fbb8:	add	w0, w0, #0x1
   2fbbc:	str	w0, [sp, #68]
   2fbc0:	ldr	w1, [sp, #68]
   2fbc4:	ldr	w0, [sp, #52]
   2fbc8:	cmp	w1, w0
   2fbcc:	b.lt	2fb68 <GOACC_declare@@GOACC_2.0.1+0xd14>  // b.tstop
   2fbd0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fbd4:	add	x0, x0, #0x5d0
   2fbd8:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   2fbdc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fbe0:	add	x0, x0, #0x5c8
   2fbe4:	ldr	x0, [x0]
   2fbe8:	str	x0, [sp, #72]
   2fbec:	b	2fcc8 <GOACC_declare@@GOACC_2.0.1+0xe74>
   2fbf0:	ldr	x0, [sp, #72]
   2fbf4:	ldr	x0, [x0, #40]
   2fbf8:	cmp	x0, #0x0
   2fbfc:	b.eq	2fc14 <GOACC_declare@@GOACC_2.0.1+0xdc0>  // b.none
   2fc00:	ldr	x0, [sp, #56]
   2fc04:	ldr	x1, [x0, #264]
   2fc08:	ldr	x0, [sp, #72]
   2fc0c:	ldr	x0, [x0, #40]
   2fc10:	blr	x1
   2fc14:	ldr	x0, [sp, #72]
   2fc18:	str	xzr, [x0, #40]
   2fc1c:	ldr	x0, [sp, #72]
   2fc20:	ldr	x0, [x0, #24]
   2fc24:	cmp	x0, #0x0
   2fc28:	b.eq	2fc44 <GOACC_declare@@GOACC_2.0.1+0xdf0>  // b.none
   2fc2c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fc30:	add	x0, x0, #0x5d0
   2fc34:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2fc38:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2fc3c:	add	x0, x0, #0x6e0
   2fc40:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2fc44:	ldr	x0, [sp, #72]
   2fc48:	ldr	x0, [x0, #16]
   2fc4c:	cmp	x0, #0x0
   2fc50:	b.eq	2fc6c <GOACC_declare@@GOACC_2.0.1+0xe18>  // b.none
   2fc54:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fc58:	add	x0, x0, #0x5d0
   2fc5c:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2fc60:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2fc64:	add	x0, x0, #0x700
   2fc68:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2fc6c:	ldr	x0, [sp, #72]
   2fc70:	ldr	x0, [x0, #8]
   2fc74:	cmp	x0, #0x0
   2fc78:	b.eq	2fcbc <GOACC_declare@@GOACC_2.0.1+0xe68>  // b.none
   2fc7c:	ldr	x0, [sp, #72]
   2fc80:	ldr	x0, [x0, #8]
   2fc84:	add	x0, x0, #0xa8
   2fc88:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   2fc8c:	ldr	x0, [sp, #72]
   2fc90:	ldr	x0, [x0, #8]
   2fc94:	add	x0, x0, #0xa0
   2fc98:	bl	2901c <GOMP_offload_unregister@@GOMP_4.0.1+0x1e8>
   2fc9c:	ldr	x0, [sp, #72]
   2fca0:	ldr	x0, [x0, #8]
   2fca4:	add	x0, x0, #0xa8
   2fca8:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2fcac:	ldr	x0, [sp, #72]
   2fcb0:	str	xzr, [x0, #8]
   2fcb4:	ldr	x0, [sp, #72]
   2fcb8:	str	xzr, [x0]
   2fcbc:	ldr	x0, [sp, #72]
   2fcc0:	ldr	x0, [x0, #32]
   2fcc4:	str	x0, [sp, #72]
   2fcc8:	ldr	x0, [sp, #72]
   2fccc:	cmp	x0, #0x0
   2fcd0:	b.ne	2fbf0 <GOACC_declare@@GOACC_2.0.1+0xd9c>  // b.any
   2fcd4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fcd8:	add	x0, x0, #0x5d0
   2fcdc:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2fce0:	mov	w0, #0x1                   	// #1
   2fce4:	strb	w0, [sp, #66]
   2fce8:	str	wzr, [sp, #68]
   2fcec:	b	2fd8c <GOACC_declare@@GOACC_2.0.1+0xf38>
   2fcf0:	ldrsw	x1, [sp, #68]
   2fcf4:	mov	x0, x1
   2fcf8:	lsl	x0, x0, #2
   2fcfc:	add	x0, x0, x1
   2fd00:	lsl	x0, x0, #2
   2fd04:	sub	x0, x0, x1
   2fd08:	lsl	x0, x0, #4
   2fd0c:	mov	x1, x0
   2fd10:	ldr	x0, [sp, #56]
   2fd14:	add	x0, x0, x1
   2fd18:	str	x0, [sp, #40]
   2fd1c:	ldr	x0, [sp, #40]
   2fd20:	add	x0, x0, #0xa8
   2fd24:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   2fd28:	ldr	x0, [sp, #40]
   2fd2c:	ldr	w0, [x0, #172]
   2fd30:	cmp	w0, #0x1
   2fd34:	b.ne	2fd74 <GOACC_declare@@GOACC_2.0.1+0xf20>  // b.any
   2fd38:	mov	w0, #0x1                   	// #1
   2fd3c:	strb	w0, [sp, #67]
   2fd40:	ldr	x0, [sp, #40]
   2fd44:	ldr	x1, [x0, #64]
   2fd48:	ldr	x0, [sp, #40]
   2fd4c:	ldr	w0, [x0, #12]
   2fd50:	blr	x1
   2fd54:	and	w1, w0, #0xff
   2fd58:	ldrb	w0, [sp, #66]
   2fd5c:	and	w0, w0, w1
   2fd60:	cmp	w0, #0x0
   2fd64:	cset	w0, ne  // ne = any
   2fd68:	strb	w0, [sp, #66]
   2fd6c:	ldr	x0, [sp, #40]
   2fd70:	str	wzr, [x0, #172]
   2fd74:	ldr	x0, [sp, #40]
   2fd78:	add	x0, x0, #0xa8
   2fd7c:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2fd80:	ldr	w0, [sp, #68]
   2fd84:	add	w0, w0, #0x1
   2fd88:	str	w0, [sp, #68]
   2fd8c:	ldr	w1, [sp, #68]
   2fd90:	ldr	w0, [sp, #52]
   2fd94:	cmp	w1, w0
   2fd98:	b.lt	2fcf0 <GOACC_declare@@GOACC_2.0.1+0xe9c>  // b.tstop
   2fd9c:	ldrb	w0, [sp, #66]
   2fda0:	eor	w0, w0, #0x1
   2fda4:	and	w0, w0, #0xff
   2fda8:	cmp	w0, #0x0
   2fdac:	b.eq	2fdbc <GOACC_declare@@GOACC_2.0.1+0xf68>  // b.none
   2fdb0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2fdb4:	add	x0, x0, #0x720
   2fdb8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2fdbc:	ldrb	w0, [sp, #67]
   2fdc0:	eor	w0, w0, #0x1
   2fdc4:	and	w0, w0, #0xff
   2fdc8:	cmp	w0, #0x0
   2fdcc:	b.eq	2fddc <GOACC_declare@@GOACC_2.0.1+0xf88>  // b.none
   2fdd0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2fdd4:	add	x0, x0, #0x740
   2fdd8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   2fddc:	nop
   2fde0:	ldp	x29, x30, [sp], #80
   2fde4:	ret
   2fde8:	stp	x29, x30, [sp, #-32]!
   2fdec:	mov	x29, sp
   2fdf0:	mov	x0, #0x30                  	// #48
   2fdf4:	bl	8dd0 <fprintf@plt+0x1a0>
   2fdf8:	str	x0, [sp, #24]
   2fdfc:	mrs	x1, tpidr_el0
   2fe00:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   2fe04:	ldr	x0, [x0, #4048]
   2fe08:	add	x0, x1, x0
   2fe0c:	ldr	x1, [sp, #24]
   2fe10:	str	x1, [x0]
   2fe14:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fe18:	add	x0, x0, #0x5c0
   2fe1c:	ldr	w0, [x0]
   2fe20:	ldr	x1, [sp, #24]
   2fe24:	bl	8ad0 <pthread_setspecific@plt>
   2fe28:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fe2c:	add	x0, x0, #0x5d0
   2fe30:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   2fe34:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fe38:	add	x0, x0, #0x5c8
   2fe3c:	ldr	x1, [x0]
   2fe40:	ldr	x0, [sp, #24]
   2fe44:	str	x1, [x0, #32]
   2fe48:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fe4c:	add	x0, x0, #0x5c8
   2fe50:	ldr	x1, [sp, #24]
   2fe54:	str	x1, [x0]
   2fe58:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fe5c:	add	x0, x0, #0x5d0
   2fe60:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2fe64:	ldr	x0, [sp, #24]
   2fe68:	ldp	x29, x30, [sp], #32
   2fe6c:	ret
   2fe70:	stp	x29, x30, [sp, #-64]!
   2fe74:	mov	x29, sp
   2fe78:	str	x0, [sp, #24]
   2fe7c:	ldr	x0, [sp, #24]
   2fe80:	str	x0, [sp, #40]
   2fe84:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2fe88:	add	x0, x0, #0x5d0
   2fe8c:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   2fe90:	ldr	x0, [sp, #40]
   2fe94:	cmp	x0, #0x0
   2fe98:	b.eq	2ffc4 <GOACC_declare@@GOACC_2.0.1+0x1170>  // b.none
   2fe9c:	ldr	x0, [sp, #40]
   2fea0:	ldr	x0, [x0, #8]
   2fea4:	str	x0, [sp, #32]
   2fea8:	ldr	x0, [sp, #32]
   2feac:	cmp	x0, #0x0
   2feb0:	b.eq	2fee0 <GOACC_declare@@GOACC_2.0.1+0x108c>  // b.none
   2feb4:	ldr	x0, [sp, #40]
   2feb8:	ldr	x0, [x0, #40]
   2febc:	cmp	x0, #0x0
   2fec0:	b.eq	2fee0 <GOACC_declare@@GOACC_2.0.1+0x108c>  // b.none
   2fec4:	ldr	x0, [sp, #32]
   2fec8:	ldr	x1, [x0, #264]
   2fecc:	ldr	x0, [sp, #40]
   2fed0:	ldr	x0, [x0, #40]
   2fed4:	blr	x1
   2fed8:	ldr	x0, [sp, #40]
   2fedc:	str	xzr, [x0, #40]
   2fee0:	ldr	x0, [sp, #40]
   2fee4:	ldr	x0, [x0, #24]
   2fee8:	cmp	x0, #0x0
   2feec:	b.eq	2ff10 <GOACC_declare@@GOACC_2.0.1+0x10bc>  // b.none
   2fef0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2fef4:	add	x3, x0, #0x828
   2fef8:	mov	w2, #0x16b                 	// #363
   2fefc:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2ff00:	add	x1, x0, #0x4e8
   2ff04:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2ff08:	add	x0, x0, #0x758
   2ff0c:	bl	8bd0 <__assert_fail@plt>
   2ff10:	str	xzr, [sp, #48]
   2ff14:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ff18:	add	x0, x0, #0x5c8
   2ff1c:	ldr	x0, [x0]
   2ff20:	str	x0, [sp, #56]
   2ff24:	b	2ff8c <GOACC_declare@@GOACC_2.0.1+0x1138>
   2ff28:	ldr	x1, [sp, #56]
   2ff2c:	ldr	x0, [sp, #40]
   2ff30:	cmp	x1, x0
   2ff34:	b.ne	2ff78 <GOACC_declare@@GOACC_2.0.1+0x1124>  // b.any
   2ff38:	ldr	x0, [sp, #48]
   2ff3c:	cmp	x0, #0x0
   2ff40:	b.ne	2ff5c <GOACC_declare@@GOACC_2.0.1+0x1108>  // b.any
   2ff44:	ldr	x0, [sp, #56]
   2ff48:	ldr	x1, [x0, #32]
   2ff4c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ff50:	add	x0, x0, #0x5c8
   2ff54:	str	x1, [x0]
   2ff58:	b	2ff6c <GOACC_declare@@GOACC_2.0.1+0x1118>
   2ff5c:	ldr	x0, [sp, #56]
   2ff60:	ldr	x1, [x0, #32]
   2ff64:	ldr	x0, [sp, #48]
   2ff68:	str	x1, [x0, #32]
   2ff6c:	ldr	x0, [sp, #40]
   2ff70:	bl	8a20 <free@plt>
   2ff74:	b	2ff98 <GOACC_declare@@GOACC_2.0.1+0x1144>
   2ff78:	ldr	x0, [sp, #56]
   2ff7c:	str	x0, [sp, #48]
   2ff80:	ldr	x0, [sp, #56]
   2ff84:	ldr	x0, [x0, #32]
   2ff88:	str	x0, [sp, #56]
   2ff8c:	ldr	x0, [sp, #56]
   2ff90:	cmp	x0, #0x0
   2ff94:	b.ne	2ff28 <GOACC_declare@@GOACC_2.0.1+0x10d4>  // b.any
   2ff98:	ldr	x0, [sp, #56]
   2ff9c:	cmp	x0, #0x0
   2ffa0:	b.ne	2ffc4 <GOACC_declare@@GOACC_2.0.1+0x1170>  // b.any
   2ffa4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2ffa8:	add	x3, x0, #0x828
   2ffac:	mov	w2, #0x17c                 	// #380
   2ffb0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2ffb4:	add	x1, x0, #0x4e8
   2ffb8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   2ffbc:	add	x0, x0, #0x770
   2ffc0:	bl	8bd0 <__assert_fail@plt>
   2ffc4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   2ffc8:	add	x0, x0, #0x5d0
   2ffcc:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   2ffd0:	nop
   2ffd4:	ldp	x29, x30, [sp], #64
   2ffd8:	ret
   2ffdc:	nop
   2ffe0:	stp	x29, x30, [sp, #-64]!
   2ffe4:	mov	x29, sp
   2ffe8:	str	w0, [sp, #28]
   2ffec:	bl	2f518 <GOACC_declare@@GOACC_2.0.1+0x6c4>
   2fff0:	str	x0, [sp, #56]
   2fff4:	str	xzr, [sp, #40]
   2fff8:	str	xzr, [sp, #48]
   2fffc:	ldr	x0, [sp, #56]
   30000:	cmp	x0, #0x0
   30004:	b.eq	3003c <GOACC_declare@@GOACC_2.0.1+0x11e8>  // b.none
   30008:	ldr	x0, [sp, #56]
   3000c:	ldr	x0, [x0, #8]
   30010:	cmp	x0, #0x0
   30014:	b.eq	3003c <GOACC_declare@@GOACC_2.0.1+0x11e8>  // b.none
   30018:	ldr	x0, [sp, #56]
   3001c:	ldr	x0, [x0, #8]
   30020:	ldr	w0, [x0, #12]
   30024:	ldr	w1, [sp, #28]
   30028:	cmp	w1, w0
   3002c:	b.eq	301a4 <GOACC_declare@@GOACC_2.0.1+0x1350>  // b.none
   30030:	ldr	w0, [sp, #28]
   30034:	cmp	w0, #0x0
   30038:	b.lt	301a4 <GOACC_declare@@GOACC_2.0.1+0x1350>  // b.tstop
   3003c:	ldr	w0, [sp, #28]
   30040:	cmp	w0, #0x0
   30044:	b.ge	30058 <GOACC_declare@@GOACC_2.0.1+0x1204>  // b.tcont
   30048:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3004c:	add	x0, x0, #0x680
   30050:	ldr	w0, [x0]
   30054:	str	w0, [sp, #28]
   30058:	ldr	x0, [sp, #56]
   3005c:	cmp	x0, #0x0
   30060:	b.eq	30084 <GOACC_declare@@GOACC_2.0.1+0x1230>  // b.none
   30064:	ldr	x0, [sp, #56]
   30068:	ldr	x0, [x0]
   3006c:	cmp	x0, #0x0
   30070:	b.eq	30084 <GOACC_declare@@GOACC_2.0.1+0x1230>  // b.none
   30074:	ldr	x0, [sp, #56]
   30078:	ldr	x0, [x0]
   3007c:	str	x0, [sp, #48]
   30080:	b	300c8 <GOACC_declare@@GOACC_2.0.1+0x1274>
   30084:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30088:	add	x0, x0, #0x5b8
   3008c:	ldr	x0, [x0]
   30090:	cmp	x0, #0x0
   30094:	b.ne	300b8 <GOACC_declare@@GOACC_2.0.1+0x1264>  // b.any
   30098:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   3009c:	add	x3, x0, #0x840
   300a0:	mov	w2, #0x19a                 	// #410
   300a4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   300a8:	add	x1, x0, #0x4e8
   300ac:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   300b0:	add	x0, x0, #0x778
   300b4:	bl	8bd0 <__assert_fail@plt>
   300b8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   300bc:	add	x0, x0, #0x5b8
   300c0:	ldr	x0, [x0]
   300c4:	str	x0, [sp, #48]
   300c8:	ldr	x0, [sp, #48]
   300cc:	ldr	x0, [x0, #48]
   300d0:	blr	x0
   300d4:	str	w0, [sp, #36]
   300d8:	ldr	w0, [sp, #36]
   300dc:	cmp	w0, #0x0
   300e0:	b.le	300f4 <GOACC_declare@@GOACC_2.0.1+0x12a0>
   300e4:	ldr	w1, [sp, #28]
   300e8:	ldr	w0, [sp, #36]
   300ec:	cmp	w1, w0
   300f0:	b.lt	3010c <GOACC_declare@@GOACC_2.0.1+0x12b8>  // b.tstop
   300f4:	ldr	x0, [sp, #48]
   300f8:	ldr	w0, [x0, #16]
   300fc:	bl	2f500 <GOACC_declare@@GOACC_2.0.1+0x6ac>
   30100:	ldr	w2, [sp, #36]
   30104:	ldr	w1, [sp, #28]
   30108:	bl	2f9f0 <GOACC_declare@@GOACC_2.0.1+0xb9c>
   3010c:	ldr	x0, [sp, #56]
   30110:	cmp	x0, #0x0
   30114:	b.ne	30120 <GOACC_declare@@GOACC_2.0.1+0x12cc>  // b.any
   30118:	bl	2fde8 <GOACC_declare@@GOACC_2.0.1+0xf94>
   3011c:	str	x0, [sp, #56]
   30120:	ldr	x0, [sp, #56]
   30124:	ldr	x1, [sp, #48]
   30128:	str	x1, [x0]
   3012c:	ldrsw	x1, [sp, #28]
   30130:	mov	x0, x1
   30134:	lsl	x0, x0, #2
   30138:	add	x0, x0, x1
   3013c:	lsl	x0, x0, #2
   30140:	sub	x0, x0, x1
   30144:	lsl	x0, x0, #4
   30148:	mov	x1, x0
   3014c:	ldr	x0, [sp, #48]
   30150:	add	x0, x0, x1
   30154:	str	x0, [sp, #40]
   30158:	ldr	x0, [sp, #56]
   3015c:	ldr	x1, [sp, #40]
   30160:	str	x1, [x0, #8]
   30164:	ldr	x0, [sp, #56]
   30168:	str	xzr, [x0, #16]
   3016c:	ldr	x0, [sp, #56]
   30170:	str	xzr, [x0, #24]
   30174:	ldr	x0, [sp, #40]
   30178:	ldr	x1, [x0, #256]
   3017c:	ldr	w0, [sp, #28]
   30180:	blr	x1
   30184:	mov	x1, x0
   30188:	ldr	x0, [sp, #56]
   3018c:	str	x1, [x0, #40]
   30190:	ldr	x0, [sp, #40]
   30194:	ldr	x1, [x0, #248]
   30198:	mov	w0, #0xfffffffe            	// #-2
   3019c:	blr	x1
   301a0:	b	301a8 <GOACC_declare@@GOACC_2.0.1+0x1354>
   301a4:	nop
   301a8:	ldp	x29, x30, [sp], #64
   301ac:	ret

00000000000301b0 <acc_init@@OACC_2.0>:
   301b0:	stp	x29, x30, [sp, #-32]!
   301b4:	mov	x29, sp
   301b8:	str	w0, [sp, #28]
   301bc:	bl	25078 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   301c0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   301c4:	add	x0, x0, #0x5b0
   301c8:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   301cc:	ldr	w0, [sp, #28]
   301d0:	bl	2fa38 <GOACC_declare@@GOACC_2.0.1+0xbe4>
   301d4:	mov	x1, x0
   301d8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   301dc:	add	x0, x0, #0x5b8
   301e0:	str	x1, [x0]
   301e4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   301e8:	add	x0, x0, #0x5b0
   301ec:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   301f0:	mov	w0, #0xffffffff            	// #-1
   301f4:	bl	2ffe0 <GOACC_declare@@GOACC_2.0.1+0x118c>
   301f8:	nop
   301fc:	ldp	x29, x30, [sp], #32
   30200:	ret
   30204:	nop

0000000000030208 <acc_shutdown@@OACC_2.0>:
   30208:	stp	x29, x30, [sp, #-32]!
   3020c:	mov	x29, sp
   30210:	str	w0, [sp, #28]
   30214:	bl	25078 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   30218:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3021c:	add	x0, x0, #0x5b0
   30220:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   30224:	ldr	w0, [sp, #28]
   30228:	bl	2fb30 <GOACC_declare@@GOACC_2.0.1+0xcdc>
   3022c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30230:	add	x0, x0, #0x5b0
   30234:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   30238:	nop
   3023c:	ldp	x29, x30, [sp], #32
   30240:	ret
   30244:	nop

0000000000030248 <acc_get_num_devices@@OACC_2.0>:
   30248:	stp	x29, x30, [sp, #-48]!
   3024c:	mov	x29, sp
   30250:	str	w0, [sp, #28]
   30254:	str	wzr, [sp, #44]
   30258:	ldr	w0, [sp, #28]
   3025c:	cmp	w0, #0x0
   30260:	b.ne	3026c <acc_get_num_devices@@OACC_2.0+0x24>  // b.any
   30264:	mov	w0, #0x0                   	// #0
   30268:	b	302d0 <acc_get_num_devices@@OACC_2.0+0x88>
   3026c:	bl	25078 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   30270:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30274:	add	x0, x0, #0x5b0
   30278:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   3027c:	mov	w1, #0x0                   	// #0
   30280:	ldr	w0, [sp, #28]
   30284:	bl	2f738 <GOACC_declare@@GOACC_2.0.1+0x8e4>
   30288:	str	x0, [sp, #32]
   3028c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30290:	add	x0, x0, #0x5b0
   30294:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   30298:	ldr	x0, [sp, #32]
   3029c:	cmp	x0, #0x0
   302a0:	b.ne	302ac <acc_get_num_devices@@OACC_2.0+0x64>  // b.any
   302a4:	mov	w0, #0x0                   	// #0
   302a8:	b	302d0 <acc_get_num_devices@@OACC_2.0+0x88>
   302ac:	ldr	x0, [sp, #32]
   302b0:	ldr	x0, [x0, #48]
   302b4:	blr	x0
   302b8:	str	w0, [sp, #44]
   302bc:	ldr	w0, [sp, #44]
   302c0:	cmp	w0, #0x0
   302c4:	b.ge	302cc <acc_get_num_devices@@OACC_2.0+0x84>  // b.tcont
   302c8:	str	wzr, [sp, #44]
   302cc:	ldr	w0, [sp, #44]
   302d0:	ldp	x29, x30, [sp], #48
   302d4:	ret

00000000000302d8 <acc_set_device_type@@OACC_2.0>:
   302d8:	stp	x29, x30, [sp, #-64]!
   302dc:	mov	x29, sp
   302e0:	str	w0, [sp, #28]
   302e4:	bl	2f518 <GOACC_declare@@GOACC_2.0.1+0x6c4>
   302e8:	str	x0, [sp, #56]
   302ec:	bl	25078 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   302f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   302f4:	add	x0, x0, #0x5b0
   302f8:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   302fc:	mov	w1, #0x1                   	// #1
   30300:	ldr	w0, [sp, #28]
   30304:	bl	2f738 <GOACC_declare@@GOACC_2.0.1+0x8e4>
   30308:	str	x0, [sp, #48]
   3030c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30310:	add	x0, x0, #0x5b8
   30314:	ldr	x1, [sp, #48]
   30318:	str	x1, [x0]
   3031c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30320:	add	x0, x0, #0x680
   30324:	ldr	w0, [x0]
   30328:	sxtw	x1, w0
   3032c:	mov	x0, x1
   30330:	lsl	x0, x0, #2
   30334:	add	x0, x0, x1
   30338:	lsl	x0, x0, #2
   3033c:	sub	x0, x0, x1
   30340:	lsl	x0, x0, #4
   30344:	mov	x1, x0
   30348:	ldr	x0, [sp, #48]
   3034c:	add	x0, x0, x1
   30350:	str	x0, [sp, #40]
   30354:	ldr	x0, [sp, #40]
   30358:	add	x0, x0, #0xa8
   3035c:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   30360:	ldr	x0, [sp, #40]
   30364:	ldr	w0, [x0, #172]
   30368:	cmp	w0, #0x0
   3036c:	b.ne	30378 <acc_set_device_type@@OACC_2.0+0xa0>  // b.any
   30370:	ldr	x0, [sp, #40]
   30374:	bl	28e68 <GOMP_offload_unregister@@GOMP_4.0.1+0x34>
   30378:	ldr	x0, [sp, #40]
   3037c:	add	x0, x0, #0xa8
   30380:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   30384:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30388:	add	x0, x0, #0x5b0
   3038c:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   30390:	ldr	x0, [sp, #56]
   30394:	cmp	x0, #0x0
   30398:	b.eq	303e4 <acc_set_device_type@@OACC_2.0+0x10c>  // b.none
   3039c:	ldr	x0, [sp, #56]
   303a0:	ldr	x0, [x0]
   303a4:	ldr	x1, [sp, #48]
   303a8:	cmp	x1, x0
   303ac:	b.eq	303e4 <acc_set_device_type@@OACC_2.0+0x10c>  // b.none
   303b0:	ldr	x0, [sp, #56]
   303b4:	str	xzr, [x0, #8]
   303b8:	ldr	x0, [sp, #56]
   303bc:	ldr	x1, [x0, #8]
   303c0:	ldr	x0, [sp, #56]
   303c4:	str	x1, [x0]
   303c8:	ldr	x0, [sp, #56]
   303cc:	ldr	x0, [x0, #24]
   303d0:	cmp	x0, #0x0
   303d4:	b.eq	303e4 <acc_set_device_type@@OACC_2.0+0x10c>  // b.none
   303d8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   303dc:	add	x0, x0, #0x788
   303e0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   303e4:	mov	w0, #0xffffffff            	// #-1
   303e8:	bl	2ffe0 <GOACC_declare@@GOACC_2.0.1+0x118c>
   303ec:	nop
   303f0:	ldp	x29, x30, [sp], #64
   303f4:	ret

00000000000303f8 <acc_get_device_type@@OACC_2.0>:
   303f8:	stp	x29, x30, [sp, #-48]!
   303fc:	mov	x29, sp
   30400:	str	wzr, [sp, #44]
   30404:	bl	2f518 <GOACC_declare@@GOACC_2.0.1+0x6c4>
   30408:	str	x0, [sp, #32]
   3040c:	ldr	x0, [sp, #32]
   30410:	cmp	x0, #0x0
   30414:	b.eq	30440 <acc_get_device_type@@OACC_2.0+0x48>  // b.none
   30418:	ldr	x0, [sp, #32]
   3041c:	ldr	x0, [x0]
   30420:	cmp	x0, #0x0
   30424:	b.eq	30440 <acc_get_device_type@@OACC_2.0+0x48>  // b.none
   30428:	ldr	x0, [sp, #32]
   3042c:	ldr	x0, [x0]
   30430:	ldr	w0, [x0, #16]
   30434:	bl	2f500 <GOACC_declare@@GOACC_2.0.1+0x6ac>
   30438:	str	w0, [sp, #44]
   3043c:	b	3047c <acc_get_device_type@@OACC_2.0+0x84>
   30440:	bl	25078 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   30444:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30448:	add	x0, x0, #0x5b0
   3044c:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   30450:	mov	w1, #0x1                   	// #1
   30454:	mov	w0, #0x1                   	// #1
   30458:	bl	2f738 <GOACC_declare@@GOACC_2.0.1+0x8e4>
   3045c:	str	x0, [sp, #24]
   30460:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30464:	add	x0, x0, #0x5b0
   30468:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   3046c:	ldr	x0, [sp, #24]
   30470:	ldr	w0, [x0, #16]
   30474:	bl	2f500 <GOACC_declare@@GOACC_2.0.1+0x6ac>
   30478:	str	w0, [sp, #44]
   3047c:	ldr	w0, [sp, #44]
   30480:	cmp	w0, #0x1
   30484:	b.eq	30494 <acc_get_device_type@@OACC_2.0+0x9c>  // b.none
   30488:	ldr	w0, [sp, #44]
   3048c:	cmp	w0, #0x4
   30490:	b.ne	304b4 <acc_get_device_type@@OACC_2.0+0xbc>  // b.any
   30494:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30498:	add	x3, x0, #0x868
   3049c:	mov	w2, #0x226                 	// #550
   304a0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   304a4:	add	x1, x0, #0x4e8
   304a8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   304ac:	add	x0, x0, #0x7b8
   304b0:	bl	8bd0 <__assert_fail@plt>
   304b4:	ldr	w0, [sp, #44]
   304b8:	ldp	x29, x30, [sp], #48
   304bc:	ret

00000000000304c0 <acc_get_device_num@@OACC_2.0>:
   304c0:	stp	x29, x30, [sp, #-48]!
   304c4:	mov	x29, sp
   304c8:	str	w0, [sp, #28]
   304cc:	bl	2f518 <GOACC_declare@@GOACC_2.0.1+0x6c4>
   304d0:	str	x0, [sp, #40]
   304d4:	ldr	w0, [sp, #28]
   304d8:	cmp	w0, #0x5
   304dc:	b.le	304f4 <acc_get_device_num@@OACC_2.0+0x34>
   304e0:	ldr	w0, [sp, #28]
   304e4:	mov	w1, w0
   304e8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   304ec:	add	x0, x0, #0x5f8
   304f0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   304f4:	bl	25078 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   304f8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   304fc:	add	x0, x0, #0x5b0
   30500:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   30504:	mov	w1, #0x1                   	// #1
   30508:	ldr	w0, [sp, #28]
   3050c:	bl	2f738 <GOACC_declare@@GOACC_2.0.1+0x8e4>
   30510:	str	x0, [sp, #32]
   30514:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30518:	add	x0, x0, #0x5b0
   3051c:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   30520:	ldr	x0, [sp, #40]
   30524:	cmp	x0, #0x0
   30528:	b.eq	30560 <acc_get_device_num@@OACC_2.0+0xa0>  // b.none
   3052c:	ldr	x0, [sp, #40]
   30530:	ldr	x0, [x0]
   30534:	ldr	x1, [sp, #32]
   30538:	cmp	x1, x0
   3053c:	b.ne	30560 <acc_get_device_num@@OACC_2.0+0xa0>  // b.any
   30540:	ldr	x0, [sp, #40]
   30544:	ldr	x0, [x0, #8]
   30548:	cmp	x0, #0x0
   3054c:	b.eq	30560 <acc_get_device_num@@OACC_2.0+0xa0>  // b.none
   30550:	ldr	x0, [sp, #40]
   30554:	ldr	x0, [x0, #8]
   30558:	ldr	w0, [x0, #12]
   3055c:	b	3056c <acc_get_device_num@@OACC_2.0+0xac>
   30560:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30564:	add	x0, x0, #0x680
   30568:	ldr	w0, [x0]
   3056c:	ldp	x29, x30, [sp], #48
   30570:	ret
   30574:	nop

0000000000030578 <acc_set_device_num@@OACC_2.0>:
   30578:	stp	x29, x30, [sp, #-64]!
   3057c:	mov	x29, sp
   30580:	str	w0, [sp, #28]
   30584:	str	w1, [sp, #24]
   30588:	bl	25078 <omp_get_place_proc_ids@@OMP_4.5+0x69c>
   3058c:	ldr	w0, [sp, #28]
   30590:	cmp	w0, #0x0
   30594:	b.ge	305a8 <acc_set_device_num@@OACC_2.0+0x30>  // b.tcont
   30598:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3059c:	add	x0, x0, #0x680
   305a0:	ldr	w0, [x0]
   305a4:	str	w0, [sp, #28]
   305a8:	ldr	w0, [sp, #24]
   305ac:	cmp	w0, #0x0
   305b0:	b.ne	305c0 <acc_set_device_num@@OACC_2.0+0x48>  // b.any
   305b4:	ldr	w0, [sp, #28]
   305b8:	bl	2ffe0 <GOACC_declare@@GOACC_2.0.1+0x118c>
   305bc:	b	30698 <acc_set_device_num@@OACC_2.0+0x120>
   305c0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   305c4:	add	x0, x0, #0x5b0
   305c8:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   305cc:	mov	w1, #0x1                   	// #1
   305d0:	ldr	w0, [sp, #24]
   305d4:	bl	2f738 <GOACC_declare@@GOACC_2.0.1+0x8e4>
   305d8:	str	x0, [sp, #56]
   305dc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   305e0:	add	x0, x0, #0x5b8
   305e4:	ldr	x1, [sp, #56]
   305e8:	str	x1, [x0]
   305ec:	ldr	x0, [sp, #56]
   305f0:	ldr	x0, [x0, #48]
   305f4:	blr	x0
   305f8:	str	w0, [sp, #52]
   305fc:	ldr	w0, [sp, #52]
   30600:	cmp	w0, #0x0
   30604:	b.le	30618 <acc_set_device_num@@OACC_2.0+0xa0>
   30608:	ldr	w1, [sp, #28]
   3060c:	ldr	w0, [sp, #52]
   30610:	cmp	w1, w0
   30614:	b.lt	30628 <acc_set_device_num@@OACC_2.0+0xb0>  // b.tstop
   30618:	ldr	w2, [sp, #52]
   3061c:	ldr	w1, [sp, #28]
   30620:	ldr	w0, [sp, #24]
   30624:	bl	2f9f0 <GOACC_declare@@GOACC_2.0.1+0xb9c>
   30628:	ldrsw	x1, [sp, #28]
   3062c:	mov	x0, x1
   30630:	lsl	x0, x0, #2
   30634:	add	x0, x0, x1
   30638:	lsl	x0, x0, #2
   3063c:	sub	x0, x0, x1
   30640:	lsl	x0, x0, #4
   30644:	mov	x1, x0
   30648:	ldr	x0, [sp, #56]
   3064c:	add	x0, x0, x1
   30650:	str	x0, [sp, #40]
   30654:	ldr	x0, [sp, #40]
   30658:	add	x0, x0, #0xa8
   3065c:	bl	2f438 <GOACC_declare@@GOACC_2.0.1+0x5e4>
   30660:	ldr	x0, [sp, #40]
   30664:	ldr	w0, [x0, #172]
   30668:	cmp	w0, #0x0
   3066c:	b.ne	30678 <acc_set_device_num@@OACC_2.0+0x100>  // b.any
   30670:	ldr	x0, [sp, #40]
   30674:	bl	28e68 <GOMP_offload_unregister@@GOMP_4.0.1+0x34>
   30678:	ldr	x0, [sp, #40]
   3067c:	add	x0, x0, #0xa8
   30680:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   30684:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30688:	add	x0, x0, #0x5b0
   3068c:	bl	2f4b0 <GOACC_declare@@GOACC_2.0.1+0x65c>
   30690:	ldr	w0, [sp, #28]
   30694:	bl	2ffe0 <GOACC_declare@@GOACC_2.0.1+0x118c>
   30698:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3069c:	add	x0, x0, #0x680
   306a0:	ldr	w1, [sp, #28]
   306a4:	str	w1, [x0]
   306a8:	nop
   306ac:	ldp	x29, x30, [sp], #64
   306b0:	ret
   306b4:	nop

00000000000306b8 <acc_on_device@@OACC_2.0>:
   306b8:	tst	w0, #0xfffffffd
   306bc:	cset	w0, eq  // eq = none
   306c0:	ret
   306c4:	nop
   306c8:	stp	x29, x30, [sp, #-16]!
   306cc:	mov	x29, sp
   306d0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   306d4:	add	x0, x0, #0x5b0
   306d8:	bl	2f418 <GOACC_declare@@GOACC_2.0.1+0x5c4>
   306dc:	adrp	x0, 2f000 <GOACC_declare@@GOACC_2.0.1+0x1ac>
   306e0:	add	x1, x0, #0xe70
   306e4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   306e8:	add	x0, x0, #0x5c0
   306ec:	bl	8720 <pthread_key_create@plt>
   306f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   306f4:	add	x0, x0, #0x5b8
   306f8:	str	xzr, [x0]
   306fc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30700:	add	x0, x0, #0x5c8
   30704:	str	xzr, [x0]
   30708:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3070c:	add	x0, x0, #0x5d0
   30710:	bl	2f418 <GOACC_declare@@GOACC_2.0.1+0x5c4>
   30714:	bl	2f3ec <GOACC_declare@@GOACC_2.0.1+0x598>
   30718:	nop
   3071c:	ldp	x29, x30, [sp], #16
   30720:	ret
   30724:	nop
   30728:	stp	x29, x30, [sp, #-48]!
   3072c:	mov	x29, sp
   30730:	str	w0, [sp, #28]
   30734:	bl	2f518 <GOACC_declare@@GOACC_2.0.1+0x6c4>
   30738:	str	x0, [sp, #40]
   3073c:	ldr	x0, [sp, #40]
   30740:	ldr	x0, [x0, #16]
   30744:	cmp	x0, #0x0
   30748:	b.eq	3076c <acc_on_device@@OACC_2.0+0xb4>  // b.none
   3074c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30750:	add	x3, x0, #0x880
   30754:	mov	w2, #0x29b                 	// #667
   30758:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   3075c:	add	x1, x0, #0x4e8
   30760:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30764:	add	x0, x0, #0x7f0
   30768:	bl	8bd0 <__assert_fail@plt>
   3076c:	ldr	x0, [sp, #40]
   30770:	ldr	x1, [x0, #8]
   30774:	ldr	x0, [sp, #40]
   30778:	str	x1, [x0, #16]
   3077c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30780:	add	x0, x0, #0x5d8
   30784:	ldrsw	x1, [sp, #28]
   30788:	ldr	x1, [x0, x1, lsl #3]
   3078c:	ldr	x0, [sp, #40]
   30790:	str	x1, [x0, #8]
   30794:	nop
   30798:	ldp	x29, x30, [sp], #48
   3079c:	ret
   307a0:	stp	x29, x30, [sp, #-32]!
   307a4:	mov	x29, sp
   307a8:	bl	2f518 <GOACC_declare@@GOACC_2.0.1+0x6c4>
   307ac:	str	x0, [sp, #24]
   307b0:	ldr	x0, [sp, #24]
   307b4:	ldr	x1, [x0, #16]
   307b8:	ldr	x0, [sp, #24]
   307bc:	str	x1, [x0, #8]
   307c0:	ldr	x0, [sp, #24]
   307c4:	str	xzr, [x0, #16]
   307c8:	nop
   307cc:	ldp	x29, x30, [sp], #32
   307d0:	ret
   307d4:	nop
   307d8:	stp	x29, x30, [sp, #-32]!
   307dc:	mov	x29, sp
   307e0:	bl	2f518 <GOACC_declare@@GOACC_2.0.1+0x6c4>
   307e4:	str	x0, [sp, #24]
   307e8:	ldr	x0, [sp, #24]
   307ec:	cmp	x0, #0x0
   307f0:	b.eq	30804 <acc_on_device@@OACC_2.0+0x14c>  // b.none
   307f4:	ldr	x0, [sp, #24]
   307f8:	ldr	x0, [x0, #8]
   307fc:	cmp	x0, #0x0
   30800:	b.ne	30830 <acc_on_device@@OACC_2.0+0x178>  // b.any
   30804:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   30808:	add	x0, x0, #0x5b8
   3080c:	ldr	x0, [x0]
   30810:	cmp	x0, #0x0
   30814:	b.ne	30824 <acc_on_device@@OACC_2.0+0x16c>  // b.any
   30818:	mov	w0, #0x1                   	// #1
   3081c:	bl	8a90 <acc_init@plt>
   30820:	b	30834 <acc_on_device@@OACC_2.0+0x17c>
   30824:	mov	w0, #0xffffffff            	// #-1
   30828:	bl	2ffe0 <GOACC_declare@@GOACC_2.0.1+0x118c>
   3082c:	b	30834 <acc_on_device@@OACC_2.0+0x17c>
   30830:	nop
   30834:	ldp	x29, x30, [sp], #32
   30838:	ret
   3083c:	stp	x29, x30, [sp, #-48]!
   30840:	mov	x29, sp
   30844:	str	x0, [sp, #24]
   30848:	str	wzr, [sp, #44]
   3084c:	ldr	x1, [sp, #24]
   30850:	add	x0, sp, #0x2c
   30854:	ldr	w3, [x0]
   30858:	mov	w4, #0x1                   	// #1
   3085c:	ldaxr	w2, [x1]
   30860:	cmp	w2, w3
   30864:	b.ne	30870 <acc_on_device@@OACC_2.0+0x1b8>  // b.any
   30868:	stxr	w5, w4, [x1]
   3086c:	cbnz	w5, 3085c <acc_on_device@@OACC_2.0+0x1a4>
   30870:	cset	w1, eq  // eq = none
   30874:	cmp	w1, #0x0
   30878:	b.ne	30880 <acc_on_device@@OACC_2.0+0x1c8>  // b.any
   3087c:	str	w2, [x0]
   30880:	mov	w0, w1
   30884:	eor	w0, w0, #0x1
   30888:	and	w0, w0, #0xff
   3088c:	cmp	w0, #0x0
   30890:	b.eq	308a4 <acc_on_device@@OACC_2.0+0x1ec>  // b.none
   30894:	ldr	w0, [sp, #44]
   30898:	mov	w1, w0
   3089c:	ldr	x0, [sp, #24]
   308a0:	bl	2102c <omp_test_nest_lock@OMP_1.0+0x358>
   308a4:	nop
   308a8:	ldp	x29, x30, [sp], #48
   308ac:	ret
   308b0:	stp	x29, x30, [sp, #-48]!
   308b4:	mov	x29, sp
   308b8:	str	x0, [sp, #24]
   308bc:	ldr	x1, [sp, #24]
   308c0:	ldxr	w0, [x1]
   308c4:	stlxr	w2, wzr, [x1]
   308c8:	cbnz	w2, 308c0 <acc_on_device@@OACC_2.0+0x208>
   308cc:	str	w0, [sp, #44]
   308d0:	ldr	w0, [sp, #44]
   308d4:	lsr	w0, w0, #31
   308d8:	and	w0, w0, #0xff
   308dc:	and	x0, x0, #0xff
   308e0:	cmp	x0, #0x0
   308e4:	b.eq	308f0 <acc_on_device@@OACC_2.0+0x238>  // b.none
   308e8:	ldr	x0, [sp, #24]
   308ec:	bl	2112c <omp_test_nest_lock@OMP_1.0+0x458>
   308f0:	nop
   308f4:	ldp	x29, x30, [sp], #48
   308f8:	ret
   308fc:	mrs	x1, tpidr_el0
   30900:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   30904:	ldr	x0, [x0, #4048]
   30908:	add	x0, x1, x0
   3090c:	ldr	x0, [x0]
   30910:	ret
   30914:	stp	x29, x30, [sp, #-112]!
   30918:	mov	x29, sp
   3091c:	str	x0, [sp, #40]
   30920:	str	x1, [sp, #32]
   30924:	str	x2, [sp, #24]
   30928:	ldr	x0, [sp, #32]
   3092c:	str	x0, [sp, #48]
   30930:	ldr	x1, [sp, #32]
   30934:	ldr	x0, [sp, #24]
   30938:	add	x0, x1, x0
   3093c:	str	x0, [sp, #56]
   30940:	ldr	x0, [sp, #40]
   30944:	add	x0, x0, #0xa0
   30948:	add	x1, sp, #0x30
   3094c:	bl	2d2f4 <omp_pause_resource_all@@OMP_5.0+0x1590>
   30950:	str	x0, [sp, #104]
   30954:	ldr	x0, [sp, #104]
   30958:	ldp	x29, x30, [sp], #112
   3095c:	ret
   30960:	sub	sp, sp, #0x40
   30964:	str	x0, [sp, #24]
   30968:	str	x1, [sp, #16]
   3096c:	str	x2, [sp, #8]
   30970:	ldr	x0, [sp, #24]
   30974:	cmp	x0, #0x0
   30978:	b.ne	30984 <acc_on_device@@OACC_2.0+0x2cc>  // b.any
   3097c:	mov	x0, #0x0                   	// #0
   30980:	b	30a8c <acc_on_device@@OACC_2.0+0x3d4>
   30984:	ldr	x0, [sp, #24]
   30988:	str	x0, [sp, #48]
   3098c:	b	309cc <acc_on_device@@OACC_2.0+0x314>
   30990:	ldr	x0, [sp, #48]
   30994:	ldr	x1, [x0, #16]
   30998:	ldr	x0, [sp, #16]
   3099c:	cmp	x1, x0
   309a0:	b.hi	309c0 <acc_on_device@@OACC_2.0+0x308>  // b.pmore
   309a4:	ldr	x0, [sp, #48]
   309a8:	ldr	x1, [x0, #24]
   309ac:	ldr	x2, [sp, #16]
   309b0:	ldr	x0, [sp, #8]
   309b4:	add	x0, x2, x0
   309b8:	cmp	x1, x0
   309bc:	b.cs	309dc <acc_on_device@@OACC_2.0+0x324>  // b.hs, b.nlast
   309c0:	ldr	x0, [sp, #48]
   309c4:	ldr	x0, [x0, #40]
   309c8:	str	x0, [sp, #48]
   309cc:	ldr	x0, [sp, #48]
   309d0:	cmp	x0, #0x0
   309d4:	b.ne	30990 <acc_on_device@@OACC_2.0+0x2d8>  // b.any
   309d8:	b	309e0 <acc_on_device@@OACC_2.0+0x328>
   309dc:	nop
   309e0:	ldr	x0, [sp, #48]
   309e4:	cmp	x0, #0x0
   309e8:	b.ne	309f4 <acc_on_device@@OACC_2.0+0x33c>  // b.any
   309ec:	mov	x0, #0x0                   	// #0
   309f0:	b	30a8c <acc_on_device@@OACC_2.0+0x3d4>
   309f4:	str	wzr, [sp, #60]
   309f8:	b	30a74 <acc_on_device@@OACC_2.0+0x3bc>
   309fc:	ldr	x0, [sp, #48]
   30a00:	ldr	x2, [x0, #8]
   30a04:	ldrsw	x1, [sp, #60]
   30a08:	mov	x0, x1
   30a0c:	lsl	x0, x0, #3
   30a10:	add	x0, x0, x1
   30a14:	lsl	x0, x0, #3
   30a18:	add	x0, x2, x0
   30a1c:	str	x0, [sp, #40]
   30a20:	ldr	x0, [sp, #40]
   30a24:	ldr	x1, [x0, #24]
   30a28:	ldr	x0, [sp, #48]
   30a2c:	ldr	x0, [x0, #16]
   30a30:	sub	x0, x1, x0
   30a34:	ldr	x1, [sp, #16]
   30a38:	add	x0, x1, x0
   30a3c:	str	x0, [sp, #32]
   30a40:	ldr	x0, [sp, #40]
   30a44:	ldr	x0, [x0]
   30a48:	ldr	x1, [sp, #32]
   30a4c:	add	x0, x1, x0
   30a50:	ldr	x1, [sp, #40]
   30a54:	ldr	x1, [x1, #8]
   30a58:	cmp	x0, x1
   30a5c:	b.hi	30a68 <acc_on_device@@OACC_2.0+0x3b0>  // b.pmore
   30a60:	ldr	x0, [sp, #40]
   30a64:	b	30a8c <acc_on_device@@OACC_2.0+0x3d4>
   30a68:	ldr	w0, [sp, #60]
   30a6c:	add	w0, w0, #0x1
   30a70:	str	w0, [sp, #60]
   30a74:	ldrsw	x1, [sp, #60]
   30a78:	ldr	x0, [sp, #48]
   30a7c:	ldr	x0, [x0, #48]
   30a80:	cmp	x1, x0
   30a84:	b.cc	309fc <acc_on_device@@OACC_2.0+0x344>  // b.lo, b.ul, b.last
   30a88:	mov	x0, #0x0                   	// #0
   30a8c:	add	sp, sp, #0x40
   30a90:	ret

0000000000030a94 <acc_malloc@@OACC_2.0>:
   30a94:	stp	x29, x30, [sp, #-48]!
   30a98:	mov	x29, sp
   30a9c:	str	x0, [sp, #24]
   30aa0:	ldr	x0, [sp, #24]
   30aa4:	cmp	x0, #0x0
   30aa8:	b.ne	30ab4 <acc_malloc@@OACC_2.0+0x20>  // b.any
   30aac:	mov	x0, #0x0                   	// #0
   30ab0:	b	30b34 <acc_malloc@@OACC_2.0+0xa0>
   30ab4:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   30ab8:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   30abc:	str	x0, [sp, #40]
   30ac0:	ldr	x0, [sp, #40]
   30ac4:	ldr	x0, [x0, #8]
   30ac8:	cmp	x0, #0x0
   30acc:	b.ne	30af0 <acc_malloc@@OACC_2.0+0x5c>  // b.any
   30ad0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30ad4:	add	x3, x0, #0xb50
   30ad8:	mov	w2, #0x6a                  	// #106
   30adc:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30ae0:	add	x1, x0, #0x898
   30ae4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30ae8:	add	x0, x0, #0x8b8
   30aec:	bl	8bd0 <__assert_fail@plt>
   30af0:	ldr	x0, [sp, #40]
   30af4:	ldr	x0, [x0, #8]
   30af8:	ldr	w0, [x0, #8]
   30afc:	and	w0, w0, #0x1
   30b00:	cmp	w0, #0x0
   30b04:	b.eq	30b14 <acc_malloc@@OACC_2.0+0x80>  // b.none
   30b08:	ldr	x0, [sp, #24]
   30b0c:	bl	8850 <malloc@plt>
   30b10:	b	30b34 <acc_malloc@@OACC_2.0+0xa0>
   30b14:	ldr	x0, [sp, #40]
   30b18:	ldr	x0, [x0, #8]
   30b1c:	ldr	x2, [x0, #96]
   30b20:	ldr	x0, [sp, #40]
   30b24:	ldr	x0, [x0, #8]
   30b28:	ldr	w0, [x0, #12]
   30b2c:	ldr	x1, [sp, #24]
   30b30:	blr	x2
   30b34:	ldp	x29, x30, [sp], #48
   30b38:	ret

0000000000030b3c <acc_free@@OACC_2.0>:
   30b3c:	stp	x29, x30, [sp, #-64]!
   30b40:	mov	x29, sp
   30b44:	str	x0, [sp, #24]
   30b48:	ldr	x0, [sp, #24]
   30b4c:	cmp	x0, #0x0
   30b50:	b.eq	30c88 <acc_free@@OACC_2.0+0x14c>  // b.none
   30b54:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   30b58:	str	x0, [sp, #56]
   30b5c:	ldr	x0, [sp, #56]
   30b60:	cmp	x0, #0x0
   30b64:	b.eq	30b78 <acc_free@@OACC_2.0+0x3c>  // b.none
   30b68:	ldr	x0, [sp, #56]
   30b6c:	ldr	x0, [x0, #8]
   30b70:	cmp	x0, #0x0
   30b74:	b.ne	30b98 <acc_free@@OACC_2.0+0x5c>  // b.any
   30b78:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30b7c:	add	x3, x0, #0xb60
   30b80:	mov	w2, #0x7f                  	// #127
   30b84:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30b88:	add	x1, x0, #0x898
   30b8c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30b90:	add	x0, x0, #0x8c8
   30b94:	bl	8bd0 <__assert_fail@plt>
   30b98:	ldr	x0, [sp, #56]
   30b9c:	ldr	x0, [x0, #8]
   30ba0:	str	x0, [sp, #48]
   30ba4:	ldr	x0, [sp, #48]
   30ba8:	ldr	w0, [x0, #8]
   30bac:	and	w0, w0, #0x1
   30bb0:	cmp	w0, #0x0
   30bb4:	b.eq	30bc4 <acc_free@@OACC_2.0+0x88>  // b.none
   30bb8:	ldr	x0, [sp, #24]
   30bbc:	bl	8a20 <free@plt>
   30bc0:	b	30c8c <acc_free@@OACC_2.0+0x150>
   30bc4:	ldr	x0, [sp, #48]
   30bc8:	add	x0, x0, #0xa8
   30bcc:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   30bd0:	ldr	x0, [sp, #48]
   30bd4:	ldr	x0, [x0, #176]
   30bd8:	mov	x2, #0x1                   	// #1
   30bdc:	ldr	x1, [sp, #24]
   30be0:	bl	30960 <acc_on_device@@OACC_2.0+0x2a8>
   30be4:	str	x0, [sp, #40]
   30be8:	ldr	x0, [sp, #40]
   30bec:	cmp	x0, #0x0
   30bf0:	b.eq	30c3c <acc_free@@OACC_2.0+0x100>  // b.none
   30bf4:	ldr	x0, [sp, #40]
   30bf8:	ldr	x1, [x0, #24]
   30bfc:	ldr	x0, [sp, #40]
   30c00:	ldr	x0, [x0, #16]
   30c04:	ldr	x0, [x0, #16]
   30c08:	sub	x0, x1, x0
   30c0c:	ldr	x1, [sp, #24]
   30c10:	add	x0, x1, x0
   30c14:	str	x0, [sp, #32]
   30c18:	ldr	x0, [sp, #48]
   30c1c:	add	x0, x0, #0xa8
   30c20:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   30c24:	ldr	x0, [sp, #40]
   30c28:	ldr	x0, [x0]
   30c2c:	ldr	x1, [sp, #32]
   30c30:	add	x0, x1, x0
   30c34:	bl	8800 <acc_unmap_data@plt>
   30c38:	b	30c48 <acc_free@@OACC_2.0+0x10c>
   30c3c:	ldr	x0, [sp, #48]
   30c40:	add	x0, x0, #0xa8
   30c44:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   30c48:	ldr	x0, [sp, #48]
   30c4c:	ldr	x2, [x0, #104]
   30c50:	ldr	x0, [sp, #48]
   30c54:	ldr	w0, [x0, #12]
   30c58:	ldr	x1, [sp, #24]
   30c5c:	blr	x2
   30c60:	and	w0, w0, #0xff
   30c64:	eor	w0, w0, #0x1
   30c68:	and	w0, w0, #0xff
   30c6c:	cmp	w0, #0x0
   30c70:	b.eq	30c8c <acc_free@@OACC_2.0+0x150>  // b.none
   30c74:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30c78:	add	x1, x0, #0xb70
   30c7c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30c80:	add	x0, x0, #0x8d8
   30c84:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   30c88:	nop
   30c8c:	ldp	x29, x30, [sp], #64
   30c90:	ret
   30c94:	stp	x29, x30, [sp, #-80]!
   30c98:	mov	x29, sp
   30c9c:	strb	w0, [sp, #63]
   30ca0:	str	x1, [sp, #48]
   30ca4:	str	x2, [sp, #40]
   30ca8:	str	x3, [sp, #32]
   30cac:	str	w4, [sp, #56]
   30cb0:	str	x5, [sp, #24]
   30cb4:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   30cb8:	str	x0, [sp, #72]
   30cbc:	ldr	x0, [sp, #72]
   30cc0:	cmp	x0, #0x0
   30cc4:	b.eq	30cd8 <acc_free@@OACC_2.0+0x19c>  // b.none
   30cc8:	ldr	x0, [sp, #72]
   30ccc:	ldr	x0, [x0, #8]
   30cd0:	cmp	x0, #0x0
   30cd4:	b.ne	30cf8 <acc_free@@OACC_2.0+0x1bc>  // b.any
   30cd8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30cdc:	add	x3, x0, #0xb80
   30ce0:	mov	w2, #0xa4                  	// #164
   30ce4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30ce8:	add	x1, x0, #0x898
   30cec:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30cf0:	add	x0, x0, #0x8c8
   30cf4:	bl	8bd0 <__assert_fail@plt>
   30cf8:	ldr	x0, [sp, #72]
   30cfc:	ldr	x0, [x0, #8]
   30d00:	ldr	w0, [x0, #8]
   30d04:	and	w0, w0, #0x1
   30d08:	cmp	w0, #0x0
   30d0c:	b.eq	30d44 <acc_free@@OACC_2.0+0x208>  // b.none
   30d10:	ldrb	w0, [sp, #63]
   30d14:	cmp	w0, #0x0
   30d18:	b.eq	30d30 <acc_free@@OACC_2.0+0x1f4>  // b.none
   30d1c:	ldr	x2, [sp, #32]
   30d20:	ldr	x1, [sp, #48]
   30d24:	ldr	x0, [sp, #40]
   30d28:	bl	86b0 <memmove@plt>
   30d2c:	b	30e2c <acc_free@@OACC_2.0+0x2f0>
   30d30:	ldr	x2, [sp, #32]
   30d34:	ldr	x1, [sp, #40]
   30d38:	ldr	x0, [sp, #48]
   30d3c:	bl	86b0 <memmove@plt>
   30d40:	b	30e2c <acc_free@@OACC_2.0+0x2f0>
   30d44:	ldr	w0, [sp, #56]
   30d48:	cmn	w0, #0x1
   30d4c:	b.lt	30d64 <acc_free@@OACC_2.0+0x228>  // b.tstop
   30d50:	ldr	x0, [sp, #72]
   30d54:	ldr	x0, [x0, #8]
   30d58:	ldr	x1, [x0, #248]
   30d5c:	ldr	w0, [sp, #56]
   30d60:	blr	x1
   30d64:	ldrb	w0, [sp, #63]
   30d68:	cmp	w0, #0x0
   30d6c:	b.eq	30dac <acc_free@@OACC_2.0+0x270>  // b.none
   30d70:	ldr	x0, [sp, #72]
   30d74:	ldr	x0, [x0, #8]
   30d78:	ldr	x4, [x0, #112]
   30d7c:	ldr	x0, [sp, #72]
   30d80:	ldr	x0, [x0, #8]
   30d84:	ldr	w0, [x0, #12]
   30d88:	ldr	x3, [sp, #32]
   30d8c:	ldr	x2, [sp, #48]
   30d90:	ldr	x1, [sp, #40]
   30d94:	blr	x4
   30d98:	and	w0, w0, #0xff
   30d9c:	cmp	w0, #0x0
   30da0:	cset	w0, ne  // ne = any
   30da4:	and	w0, w0, #0xff
   30da8:	b	30de4 <acc_free@@OACC_2.0+0x2a8>
   30dac:	ldr	x0, [sp, #72]
   30db0:	ldr	x0, [x0, #8]
   30db4:	ldr	x4, [x0, #120]
   30db8:	ldr	x0, [sp, #72]
   30dbc:	ldr	x0, [x0, #8]
   30dc0:	ldr	w0, [x0, #12]
   30dc4:	ldr	x3, [sp, #32]
   30dc8:	ldr	x2, [sp, #40]
   30dcc:	ldr	x1, [sp, #48]
   30dd0:	blr	x4
   30dd4:	and	w0, w0, #0xff
   30dd8:	cmp	w0, #0x0
   30ddc:	cset	w0, ne  // ne = any
   30de0:	and	w0, w0, #0xff
   30de4:	strb	w0, [sp, #71]
   30de8:	ldr	w0, [sp, #56]
   30dec:	cmn	w0, #0x1
   30df0:	b.lt	30e08 <acc_free@@OACC_2.0+0x2cc>  // b.tstop
   30df4:	ldr	x0, [sp, #72]
   30df8:	ldr	x0, [x0, #8]
   30dfc:	ldr	x1, [x0, #248]
   30e00:	mov	w0, #0xfffffffe            	// #-2
   30e04:	blr	x1
   30e08:	ldrb	w0, [sp, #71]
   30e0c:	eor	w0, w0, #0x1
   30e10:	and	w0, w0, #0xff
   30e14:	cmp	w0, #0x0
   30e18:	b.eq	30e2c <acc_free@@OACC_2.0+0x2f0>  // b.none
   30e1c:	ldr	x1, [sp, #24]
   30e20:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30e24:	add	x0, x0, #0x900
   30e28:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   30e2c:	ldp	x29, x30, [sp], #80
   30e30:	ret

0000000000030e34 <acc_memcpy_to_device@@OACC_2.0>:
   30e34:	stp	x29, x30, [sp, #-48]!
   30e38:	mov	x29, sp
   30e3c:	str	x0, [sp, #40]
   30e40:	str	x1, [sp, #32]
   30e44:	str	x2, [sp, #24]
   30e48:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30e4c:	add	x5, x0, #0xb98
   30e50:	mov	w4, #0xfffffffe            	// #-2
   30e54:	ldr	x3, [sp, #24]
   30e58:	ldr	x2, [sp, #32]
   30e5c:	ldr	x1, [sp, #40]
   30e60:	mov	w0, #0x0                   	// #0
   30e64:	bl	30c94 <acc_free@@OACC_2.0+0x158>
   30e68:	nop
   30e6c:	ldp	x29, x30, [sp], #48
   30e70:	ret

0000000000030e74 <acc_memcpy_to_device_async@@OACC_2.5>:
   30e74:	stp	x29, x30, [sp, #-48]!
   30e78:	mov	x29, sp
   30e7c:	str	x0, [sp, #40]
   30e80:	str	x1, [sp, #32]
   30e84:	str	x2, [sp, #24]
   30e88:	str	w3, [sp, #20]
   30e8c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30e90:	add	x5, x0, #0xbb0
   30e94:	ldr	w4, [sp, #20]
   30e98:	ldr	x3, [sp, #24]
   30e9c:	ldr	x2, [sp, #32]
   30ea0:	ldr	x1, [sp, #40]
   30ea4:	mov	w0, #0x0                   	// #0
   30ea8:	bl	30c94 <acc_free@@OACC_2.0+0x158>
   30eac:	nop
   30eb0:	ldp	x29, x30, [sp], #48
   30eb4:	ret

0000000000030eb8 <acc_memcpy_from_device@@OACC_2.0>:
   30eb8:	stp	x29, x30, [sp, #-48]!
   30ebc:	mov	x29, sp
   30ec0:	str	x0, [sp, #40]
   30ec4:	str	x1, [sp, #32]
   30ec8:	str	x2, [sp, #24]
   30ecc:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30ed0:	add	x5, x0, #0xbd0
   30ed4:	mov	w4, #0xfffffffe            	// #-2
   30ed8:	ldr	x3, [sp, #24]
   30edc:	ldr	x2, [sp, #40]
   30ee0:	ldr	x1, [sp, #32]
   30ee4:	mov	w0, #0x1                   	// #1
   30ee8:	bl	30c94 <acc_free@@OACC_2.0+0x158>
   30eec:	nop
   30ef0:	ldp	x29, x30, [sp], #48
   30ef4:	ret

0000000000030ef8 <acc_memcpy_from_device_async@@OACC_2.5>:
   30ef8:	stp	x29, x30, [sp, #-48]!
   30efc:	mov	x29, sp
   30f00:	str	x0, [sp, #40]
   30f04:	str	x1, [sp, #32]
   30f08:	str	x2, [sp, #24]
   30f0c:	str	w3, [sp, #20]
   30f10:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   30f14:	add	x5, x0, #0xbe8
   30f18:	ldr	w4, [sp, #20]
   30f1c:	ldr	x3, [sp, #24]
   30f20:	ldr	x2, [sp, #40]
   30f24:	ldr	x1, [sp, #32]
   30f28:	mov	w0, #0x1                   	// #1
   30f2c:	bl	30c94 <acc_free@@OACC_2.0+0x158>
   30f30:	nop
   30f34:	ldp	x29, x30, [sp], #48
   30f38:	ret

0000000000030f3c <acc_deviceptr@@OACC_2.0>:
   30f3c:	stp	x29, x30, [sp, #-80]!
   30f40:	mov	x29, sp
   30f44:	str	x0, [sp, #24]
   30f48:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   30f4c:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   30f50:	str	x0, [sp, #72]
   30f54:	ldr	x0, [sp, #72]
   30f58:	ldr	x0, [x0, #8]
   30f5c:	str	x0, [sp, #64]
   30f60:	ldr	x0, [sp, #72]
   30f64:	ldr	x0, [x0, #8]
   30f68:	ldr	w0, [x0, #8]
   30f6c:	and	w0, w0, #0x1
   30f70:	cmp	w0, #0x0
   30f74:	b.eq	30f80 <acc_deviceptr@@OACC_2.0+0x44>  // b.none
   30f78:	ldr	x0, [sp, #24]
   30f7c:	b	3100c <acc_deviceptr@@OACC_2.0+0xd0>
   30f80:	ldr	x0, [sp, #64]
   30f84:	add	x0, x0, #0xa8
   30f88:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   30f8c:	mov	x2, #0x1                   	// #1
   30f90:	ldr	x1, [sp, #24]
   30f94:	ldr	x0, [sp, #64]
   30f98:	bl	30914 <acc_on_device@@OACC_2.0+0x25c>
   30f9c:	str	x0, [sp, #56]
   30fa0:	ldr	x0, [sp, #56]
   30fa4:	cmp	x0, #0x0
   30fa8:	b.ne	30fc0 <acc_deviceptr@@OACC_2.0+0x84>  // b.any
   30fac:	ldr	x0, [sp, #64]
   30fb0:	add	x0, x0, #0xa8
   30fb4:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   30fb8:	mov	x0, #0x0                   	// #0
   30fbc:	b	3100c <acc_deviceptr@@OACC_2.0+0xd0>
   30fc0:	ldr	x0, [sp, #56]
   30fc4:	ldr	x0, [x0]
   30fc8:	neg	x0, x0
   30fcc:	ldr	x1, [sp, #24]
   30fd0:	add	x0, x1, x0
   30fd4:	str	x0, [sp, #48]
   30fd8:	ldr	x0, [sp, #56]
   30fdc:	ldr	x0, [x0, #16]
   30fe0:	ldr	x1, [x0, #16]
   30fe4:	ldr	x0, [sp, #56]
   30fe8:	ldr	x0, [x0, #24]
   30fec:	add	x0, x1, x0
   30ff0:	ldr	x1, [sp, #48]
   30ff4:	add	x0, x1, x0
   30ff8:	str	x0, [sp, #40]
   30ffc:	ldr	x0, [sp, #64]
   31000:	add	x0, x0, #0xa8
   31004:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31008:	ldr	x0, [sp, #40]
   3100c:	ldp	x29, x30, [sp], #80
   31010:	ret

0000000000031014 <acc_hostptr@@OACC_2.0>:
   31014:	stp	x29, x30, [sp, #-80]!
   31018:	mov	x29, sp
   3101c:	str	x0, [sp, #24]
   31020:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   31024:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   31028:	str	x0, [sp, #72]
   3102c:	ldr	x0, [sp, #72]
   31030:	ldr	x0, [x0, #8]
   31034:	str	x0, [sp, #64]
   31038:	ldr	x0, [sp, #72]
   3103c:	ldr	x0, [x0, #8]
   31040:	ldr	w0, [x0, #8]
   31044:	and	w0, w0, #0x1
   31048:	cmp	w0, #0x0
   3104c:	b.eq	31058 <acc_hostptr@@OACC_2.0+0x44>  // b.none
   31050:	ldr	x0, [sp, #24]
   31054:	b	310e4 <acc_hostptr@@OACC_2.0+0xd0>
   31058:	ldr	x0, [sp, #64]
   3105c:	add	x0, x0, #0xa8
   31060:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   31064:	ldr	x0, [sp, #64]
   31068:	ldr	x0, [x0, #176]
   3106c:	mov	x2, #0x1                   	// #1
   31070:	ldr	x1, [sp, #24]
   31074:	bl	30960 <acc_on_device@@OACC_2.0+0x2a8>
   31078:	str	x0, [sp, #56]
   3107c:	ldr	x0, [sp, #56]
   31080:	cmp	x0, #0x0
   31084:	b.ne	3109c <acc_hostptr@@OACC_2.0+0x88>  // b.any
   31088:	ldr	x0, [sp, #64]
   3108c:	add	x0, x0, #0xa8
   31090:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31094:	mov	x0, #0x0                   	// #0
   31098:	b	310e4 <acc_hostptr@@OACC_2.0+0xd0>
   3109c:	ldr	x0, [sp, #56]
   310a0:	ldr	x1, [x0, #24]
   310a4:	ldr	x0, [sp, #56]
   310a8:	ldr	x0, [x0, #16]
   310ac:	ldr	x0, [x0, #16]
   310b0:	sub	x0, x1, x0
   310b4:	ldr	x1, [sp, #24]
   310b8:	add	x0, x1, x0
   310bc:	str	x0, [sp, #48]
   310c0:	ldr	x0, [sp, #56]
   310c4:	ldr	x0, [x0]
   310c8:	ldr	x1, [sp, #48]
   310cc:	add	x0, x1, x0
   310d0:	str	x0, [sp, #40]
   310d4:	ldr	x0, [sp, #64]
   310d8:	add	x0, x0, #0xa8
   310dc:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   310e0:	ldr	x0, [sp, #40]
   310e4:	ldp	x29, x30, [sp], #80
   310e8:	ret

00000000000310ec <acc_is_present@@OACC_2.0>:
   310ec:	stp	x29, x30, [sp, #-64]!
   310f0:	mov	x29, sp
   310f4:	str	x0, [sp, #24]
   310f8:	str	x1, [sp, #16]
   310fc:	ldr	x0, [sp, #16]
   31100:	cmp	x0, #0x0
   31104:	b.eq	31114 <acc_is_present@@OACC_2.0+0x28>  // b.none
   31108:	ldr	x0, [sp, #24]
   3110c:	cmp	x0, #0x0
   31110:	b.ne	3111c <acc_is_present@@OACC_2.0+0x30>  // b.any
   31114:	mov	w0, #0x0                   	// #0
   31118:	b	311fc <acc_is_present@@OACC_2.0+0x110>
   3111c:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   31120:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   31124:	str	x0, [sp, #48]
   31128:	ldr	x0, [sp, #48]
   3112c:	ldr	x0, [x0, #8]
   31130:	str	x0, [sp, #40]
   31134:	ldr	x0, [sp, #48]
   31138:	ldr	x0, [x0, #8]
   3113c:	ldr	w0, [x0, #8]
   31140:	and	w0, w0, #0x1
   31144:	cmp	w0, #0x0
   31148:	b.eq	31160 <acc_is_present@@OACC_2.0+0x74>  // b.none
   3114c:	ldr	x0, [sp, #24]
   31150:	cmp	x0, #0x0
   31154:	cset	w0, ne  // ne = any
   31158:	and	w0, w0, #0xff
   3115c:	b	311fc <acc_is_present@@OACC_2.0+0x110>
   31160:	ldr	x0, [sp, #40]
   31164:	add	x0, x0, #0xa8
   31168:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   3116c:	ldr	x2, [sp, #16]
   31170:	ldr	x1, [sp, #24]
   31174:	ldr	x0, [sp, #40]
   31178:	bl	30914 <acc_on_device@@OACC_2.0+0x25c>
   3117c:	str	x0, [sp, #56]
   31180:	ldr	x0, [sp, #56]
   31184:	cmp	x0, #0x0
   31188:	b.eq	311e0 <acc_is_present@@OACC_2.0+0xf4>  // b.none
   3118c:	ldr	x0, [sp, #56]
   31190:	ldr	x1, [x0]
   31194:	ldr	x0, [sp, #24]
   31198:	cmp	x1, x0
   3119c:	b.hi	311dc <acc_is_present@@OACC_2.0+0xf0>  // b.pmore
   311a0:	ldr	x1, [sp, #24]
   311a4:	ldr	x0, [sp, #16]
   311a8:	add	x1, x1, x0
   311ac:	ldr	x0, [sp, #56]
   311b0:	ldr	x0, [x0, #8]
   311b4:	cmp	x1, x0
   311b8:	b.hi	311dc <acc_is_present@@OACC_2.0+0xf0>  // b.pmore
   311bc:	ldr	x0, [sp, #56]
   311c0:	ldr	x1, [x0, #8]
   311c4:	ldr	x0, [sp, #56]
   311c8:	ldr	x0, [x0]
   311cc:	sub	x0, x1, x0
   311d0:	ldr	x1, [sp, #16]
   311d4:	cmp	x1, x0
   311d8:	b.ls	311e0 <acc_is_present@@OACC_2.0+0xf4>  // b.plast
   311dc:	str	xzr, [sp, #56]
   311e0:	ldr	x0, [sp, #40]
   311e4:	add	x0, x0, #0xa8
   311e8:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   311ec:	ldr	x0, [sp, #56]
   311f0:	cmp	x0, #0x0
   311f4:	cset	w0, ne  // ne = any
   311f8:	and	w0, w0, #0xff
   311fc:	ldp	x29, x30, [sp], #64
   31200:	ret

0000000000031204 <acc_map_data@@OACC_2.0>:
   31204:	stp	x29, x30, [sp, #-128]!
   31208:	mov	x29, sp
   3120c:	str	x0, [sp, #40]
   31210:	str	x1, [sp, #32]
   31214:	str	x2, [sp, #24]
   31218:	str	xzr, [sp, #120]
   3121c:	mov	x0, #0x1                   	// #1
   31220:	str	x0, [sp, #112]
   31224:	ldr	x0, [sp, #40]
   31228:	str	x0, [sp, #80]
   3122c:	ldr	x0, [sp, #32]
   31230:	str	x0, [sp, #72]
   31234:	ldr	x0, [sp, #24]
   31238:	str	x0, [sp, #64]
   3123c:	strh	wzr, [sp, #62]
   31240:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   31244:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   31248:	str	x0, [sp, #104]
   3124c:	ldr	x0, [sp, #104]
   31250:	ldr	x0, [x0, #8]
   31254:	str	x0, [sp, #96]
   31258:	ldr	x0, [sp, #96]
   3125c:	ldr	w0, [x0, #8]
   31260:	and	w0, w0, #0x1
   31264:	cmp	w0, #0x0
   31268:	b.eq	31288 <acc_map_data@@OACC_2.0+0x84>  // b.none
   3126c:	ldr	x1, [sp, #32]
   31270:	ldr	x0, [sp, #40]
   31274:	cmp	x1, x0
   31278:	b.eq	313bc <acc_map_data@@OACC_2.0+0x1b8>  // b.none
   3127c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31280:	add	x0, x0, #0x910
   31284:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   31288:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   3128c:	str	x0, [sp, #88]
   31290:	ldr	x0, [sp, #32]
   31294:	cmp	x0, #0x0
   31298:	b.eq	312b4 <acc_map_data@@OACC_2.0+0xb0>  // b.none
   3129c:	ldr	x0, [sp, #40]
   312a0:	cmp	x0, #0x0
   312a4:	b.eq	312b4 <acc_map_data@@OACC_2.0+0xb0>  // b.none
   312a8:	ldr	x0, [sp, #24]
   312ac:	cmp	x0, #0x0
   312b0:	b.ne	312dc <acc_map_data@@OACC_2.0+0xd8>  // b.any
   312b4:	ldr	x0, [sp, #24]
   312b8:	mov	w1, w0
   312bc:	ldr	x0, [sp, #24]
   312c0:	mov	w4, w0
   312c4:	ldr	x3, [sp, #32]
   312c8:	mov	w2, w1
   312cc:	ldr	x1, [sp, #40]
   312d0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   312d4:	add	x0, x0, #0x938
   312d8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   312dc:	ldr	x0, [sp, #96]
   312e0:	add	x0, x0, #0xa8
   312e4:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   312e8:	ldr	x2, [sp, #24]
   312ec:	ldr	x1, [sp, #40]
   312f0:	ldr	x0, [sp, #96]
   312f4:	bl	30914 <acc_on_device@@OACC_2.0+0x25c>
   312f8:	cmp	x0, #0x0
   312fc:	b.eq	31324 <acc_map_data@@OACC_2.0+0x120>  // b.none
   31300:	ldr	x0, [sp, #96]
   31304:	add	x0, x0, #0xa8
   31308:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   3130c:	ldr	x0, [sp, #24]
   31310:	mov	w2, w0
   31314:	ldr	x1, [sp, #40]
   31318:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   3131c:	add	x0, x0, #0x958
   31320:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   31324:	ldr	x0, [sp, #88]
   31328:	ldr	x0, [x0, #8]
   3132c:	ldr	x0, [x0, #176]
   31330:	ldr	x2, [sp, #24]
   31334:	ldr	x1, [sp, #32]
   31338:	bl	30960 <acc_on_device@@OACC_2.0+0x2a8>
   3133c:	cmp	x0, #0x0
   31340:	b.eq	31368 <acc_map_data@@OACC_2.0+0x164>  // b.none
   31344:	ldr	x0, [sp, #96]
   31348:	add	x0, x0, #0xa8
   3134c:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31350:	ldr	x0, [sp, #24]
   31354:	mov	w2, w0
   31358:	ldr	x1, [sp, #32]
   3135c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31360:	add	x0, x0, #0x988
   31364:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   31368:	ldr	x0, [sp, #96]
   3136c:	add	x0, x0, #0xa8
   31370:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31374:	add	x3, sp, #0x3e
   31378:	add	x2, sp, #0x40
   3137c:	add	x1, sp, #0x48
   31380:	add	x0, sp, #0x50
   31384:	mov	w7, #0x0                   	// #0
   31388:	mov	w6, #0x1                   	// #1
   3138c:	mov	x5, x3
   31390:	mov	x4, x2
   31394:	mov	x3, x1
   31398:	mov	x2, x0
   3139c:	ldr	x1, [sp, #112]
   313a0:	ldr	x0, [sp, #96]
   313a4:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   313a8:	str	x0, [sp, #120]
   313ac:	ldr	x0, [sp, #120]
   313b0:	ldr	x0, [x0, #64]
   313b4:	mov	x1, #0xffffffffffffffff    	// #-1
   313b8:	str	x1, [x0, #32]
   313bc:	ldr	x0, [sp, #96]
   313c0:	add	x0, x0, #0xa8
   313c4:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   313c8:	ldr	x0, [sp, #96]
   313cc:	ldr	x1, [x0, #176]
   313d0:	ldr	x0, [sp, #120]
   313d4:	str	x1, [x0, #40]
   313d8:	ldr	x0, [sp, #96]
   313dc:	ldr	x1, [sp, #120]
   313e0:	str	x1, [x0, #176]
   313e4:	ldr	x0, [sp, #96]
   313e8:	add	x0, x0, #0xa8
   313ec:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   313f0:	nop
   313f4:	ldp	x29, x30, [sp], #128
   313f8:	ret

00000000000313fc <acc_unmap_data@@OACC_2.0>:
   313fc:	stp	x29, x30, [sp, #-80]!
   31400:	mov	x29, sp
   31404:	str	x0, [sp, #24]
   31408:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   3140c:	str	x0, [sp, #56]
   31410:	ldr	x0, [sp, #56]
   31414:	ldr	x0, [x0, #8]
   31418:	str	x0, [sp, #48]
   3141c:	ldr	x0, [sp, #48]
   31420:	ldr	w0, [x0, #8]
   31424:	and	w0, w0, #0x1
   31428:	cmp	w0, #0x0
   3142c:	b.ne	315a4 <acc_unmap_data@@OACC_2.0+0x1a8>  // b.any
   31430:	ldr	x0, [sp, #48]
   31434:	add	x0, x0, #0xa8
   31438:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   3143c:	mov	x2, #0x1                   	// #1
   31440:	ldr	x1, [sp, #24]
   31444:	ldr	x0, [sp, #48]
   31448:	bl	30914 <acc_on_device@@OACC_2.0+0x25c>
   3144c:	str	x0, [sp, #40]
   31450:	ldr	x0, [sp, #40]
   31454:	cmp	x0, #0x0
   31458:	b.ne	31478 <acc_unmap_data@@OACC_2.0+0x7c>  // b.any
   3145c:	ldr	x0, [sp, #48]
   31460:	add	x0, x0, #0xa8
   31464:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31468:	ldr	x1, [sp, #24]
   3146c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31470:	add	x0, x0, #0x9b8
   31474:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   31478:	ldr	x0, [sp, #40]
   3147c:	ldr	x1, [x0, #8]
   31480:	ldr	x0, [sp, #40]
   31484:	ldr	x0, [x0]
   31488:	sub	x0, x1, x0
   3148c:	str	x0, [sp, #32]
   31490:	ldr	x0, [sp, #40]
   31494:	ldr	x1, [x0]
   31498:	ldr	x0, [sp, #24]
   3149c:	cmp	x1, x0
   314a0:	b.eq	314d4 <acc_unmap_data@@OACC_2.0+0xd8>  // b.none
   314a4:	ldr	x0, [sp, #48]
   314a8:	add	x0, x0, #0xa8
   314ac:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   314b0:	ldr	x0, [sp, #40]
   314b4:	ldr	x0, [x0]
   314b8:	mov	x1, x0
   314bc:	ldr	x0, [sp, #32]
   314c0:	ldr	x3, [sp, #24]
   314c4:	mov	w2, w0
   314c8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   314cc:	add	x0, x0, #0x9d8
   314d0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   314d4:	ldr	x0, [sp, #40]
   314d8:	mov	x1, #0x1                   	// #1
   314dc:	str	x1, [x0, #32]
   314e0:	ldr	x0, [sp, #40]
   314e4:	ldr	x0, [x0, #16]
   314e8:	str	x0, [sp, #72]
   314ec:	ldr	x0, [sp, #72]
   314f0:	ldr	x0, [x0]
   314f4:	cmp	x0, #0x2
   314f8:	b.ne	31588 <acc_unmap_data@@OACC_2.0+0x18c>  // b.any
   314fc:	ldr	x0, [sp, #72]
   31500:	str	xzr, [x0, #24]
   31504:	ldr	x0, [sp, #72]
   31508:	str	xzr, [x0, #32]
   3150c:	str	xzr, [sp, #64]
   31510:	ldr	x0, [sp, #48]
   31514:	ldr	x0, [x0, #176]
   31518:	str	x0, [sp, #72]
   3151c:	b	3157c <acc_unmap_data@@OACC_2.0+0x180>
   31520:	ldr	x0, [sp, #40]
   31524:	ldr	x0, [x0, #16]
   31528:	ldr	x1, [sp, #72]
   3152c:	cmp	x1, x0
   31530:	b.ne	31568 <acc_unmap_data@@OACC_2.0+0x16c>  // b.any
   31534:	ldr	x0, [sp, #64]
   31538:	cmp	x0, #0x0
   3153c:	b.eq	31554 <acc_unmap_data@@OACC_2.0+0x158>  // b.none
   31540:	ldr	x0, [sp, #72]
   31544:	ldr	x1, [x0, #40]
   31548:	ldr	x0, [sp, #64]
   3154c:	str	x1, [x0, #40]
   31550:	b	31588 <acc_unmap_data@@OACC_2.0+0x18c>
   31554:	ldr	x0, [sp, #72]
   31558:	ldr	x1, [x0, #40]
   3155c:	ldr	x0, [sp, #48]
   31560:	str	x1, [x0, #176]
   31564:	b	31588 <acc_unmap_data@@OACC_2.0+0x18c>
   31568:	ldr	x0, [sp, #72]
   3156c:	str	x0, [sp, #64]
   31570:	ldr	x0, [sp, #72]
   31574:	ldr	x0, [x0, #40]
   31578:	str	x0, [sp, #72]
   3157c:	ldr	x0, [sp, #72]
   31580:	cmp	x0, #0x0
   31584:	b.ne	31520 <acc_unmap_data@@OACC_2.0+0x124>  // b.any
   31588:	ldr	x0, [sp, #48]
   3158c:	add	x0, x0, #0xa8
   31590:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31594:	mov	w1, #0x1                   	// #1
   31598:	ldr	x0, [sp, #72]
   3159c:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   315a0:	b	315a8 <acc_unmap_data@@OACC_2.0+0x1ac>
   315a4:	nop
   315a8:	ldp	x29, x30, [sp], #80
   315ac:	ret
   315b0:	stp	x29, x30, [sp, #-112]!
   315b4:	mov	x29, sp
   315b8:	str	w0, [sp, #44]
   315bc:	str	x1, [sp, #32]
   315c0:	str	x2, [sp, #24]
   315c4:	str	w3, [sp, #40]
   315c8:	ldr	x0, [sp, #32]
   315cc:	cmp	x0, #0x0
   315d0:	b.eq	315e0 <acc_unmap_data@@OACC_2.0+0x1e4>  // b.none
   315d4:	ldr	x0, [sp, #24]
   315d8:	cmp	x0, #0x0
   315dc:	b.ne	315f8 <acc_unmap_data@@OACC_2.0+0x1fc>  // b.any
   315e0:	ldr	x0, [sp, #24]
   315e4:	mov	w2, w0
   315e8:	ldr	x1, [sp, #32]
   315ec:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   315f0:	add	x0, x0, #0x9f0
   315f4:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   315f8:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   315fc:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   31600:	str	x0, [sp, #96]
   31604:	ldr	x0, [sp, #96]
   31608:	ldr	x0, [x0, #8]
   3160c:	str	x0, [sp, #88]
   31610:	ldr	x0, [sp, #88]
   31614:	ldr	w0, [x0, #8]
   31618:	and	w0, w0, #0x1
   3161c:	cmp	w0, #0x0
   31620:	b.eq	3162c <acc_unmap_data@@OACC_2.0+0x230>  // b.none
   31624:	ldr	x0, [sp, #32]
   31628:	b	31874 <acc_unmap_data@@OACC_2.0+0x478>
   3162c:	ldr	x0, [sp, #88]
   31630:	add	x0, x0, #0xa8
   31634:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   31638:	ldr	x0, [sp, #24]
   3163c:	mov	x2, x0
   31640:	ldr	x1, [sp, #32]
   31644:	ldr	x0, [sp, #88]
   31648:	bl	30914 <acc_on_device@@OACC_2.0+0x25c>
   3164c:	str	x0, [sp, #80]
   31650:	ldr	x0, [sp, #80]
   31654:	cmp	x0, #0x0
   31658:	b.eq	31744 <acc_unmap_data@@OACC_2.0+0x348>  // b.none
   3165c:	ldr	x0, [sp, #80]
   31660:	ldr	x0, [x0, #16]
   31664:	ldr	x1, [x0, #16]
   31668:	ldr	x0, [sp, #80]
   3166c:	ldr	x0, [x0, #24]
   31670:	add	x0, x1, x0
   31674:	str	x0, [sp, #104]
   31678:	ldr	w0, [sp, #44]
   3167c:	and	w0, w0, #0x1
   31680:	cmp	w0, #0x0
   31684:	b.ne	316bc <acc_unmap_data@@OACC_2.0+0x2c0>  // b.any
   31688:	ldr	x0, [sp, #88]
   3168c:	add	x0, x0, #0xa8
   31690:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31694:	ldr	x0, [sp, #24]
   31698:	mov	w1, w0
   3169c:	ldr	x0, [sp, #24]
   316a0:	mov	w4, w0
   316a4:	ldr	x3, [sp, #104]
   316a8:	mov	w2, w1
   316ac:	ldr	x1, [sp, #32]
   316b0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   316b4:	add	x0, x0, #0xa08
   316b8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   316bc:	ldr	x0, [sp, #24]
   316c0:	ldr	x1, [sp, #32]
   316c4:	add	x0, x1, x0
   316c8:	ldr	x1, [sp, #80]
   316cc:	ldr	x1, [x1, #8]
   316d0:	cmp	x0, x1
   316d4:	b.ls	316fc <acc_unmap_data@@OACC_2.0+0x300>  // b.plast
   316d8:	ldr	x0, [sp, #88]
   316dc:	add	x0, x0, #0xa8
   316e0:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   316e4:	ldr	x0, [sp, #24]
   316e8:	mov	w2, w0
   316ec:	ldr	x1, [sp, #32]
   316f0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   316f4:	add	x0, x0, #0xa30
   316f8:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   316fc:	ldr	x0, [sp, #80]
   31700:	ldr	x0, [x0, #32]
   31704:	cmn	x0, #0x1
   31708:	b.eq	31734 <acc_unmap_data@@OACC_2.0+0x338>  // b.none
   3170c:	ldr	x0, [sp, #80]
   31710:	ldr	x0, [x0, #32]
   31714:	add	x1, x0, #0x1
   31718:	ldr	x0, [sp, #80]
   3171c:	str	x1, [x0, #32]
   31720:	ldr	x0, [sp, #80]
   31724:	ldr	x0, [x0, #40]
   31728:	add	x1, x0, #0x1
   3172c:	ldr	x0, [sp, #80]
   31730:	str	x1, [x0, #40]
   31734:	ldr	x0, [sp, #88]
   31738:	add	x0, x0, #0xa8
   3173c:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31740:	b	31870 <acc_unmap_data@@OACC_2.0+0x474>
   31744:	ldr	w0, [sp, #44]
   31748:	and	w0, w0, #0x2
   3174c:	cmp	w0, #0x0
   31750:	b.ne	31778 <acc_unmap_data@@OACC_2.0+0x37c>  // b.any
   31754:	ldr	x0, [sp, #88]
   31758:	add	x0, x0, #0xa8
   3175c:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31760:	ldr	x0, [sp, #24]
   31764:	mov	w2, w0
   31768:	ldr	x1, [sp, #32]
   3176c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31770:	add	x0, x0, #0xa30
   31774:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   31778:	mov	x0, #0x1                   	// #1
   3177c:	str	x0, [sp, #72]
   31780:	ldr	x0, [sp, #32]
   31784:	str	x0, [sp, #48]
   31788:	ldr	w0, [sp, #44]
   3178c:	and	w0, w0, #0x4
   31790:	cmp	w0, #0x0
   31794:	b.eq	317a4 <acc_unmap_data@@OACC_2.0+0x3a8>  // b.none
   31798:	mov	w0, #0x1                   	// #1
   3179c:	strh	w0, [sp, #62]
   317a0:	b	317a8 <acc_unmap_data@@OACC_2.0+0x3ac>
   317a4:	strh	wzr, [sp, #62]
   317a8:	ldr	x0, [sp, #88]
   317ac:	add	x0, x0, #0xa8
   317b0:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   317b4:	ldr	w0, [sp, #40]
   317b8:	cmn	w0, #0x1
   317bc:	b.lt	317d0 <acc_unmap_data@@OACC_2.0+0x3d4>  // b.tstop
   317c0:	ldr	x0, [sp, #88]
   317c4:	ldr	x1, [x0, #248]
   317c8:	ldr	w0, [sp, #40]
   317cc:	blr	x1
   317d0:	add	x2, sp, #0x3e
   317d4:	add	x1, sp, #0x18
   317d8:	add	x0, sp, #0x30
   317dc:	mov	w7, #0x0                   	// #0
   317e0:	mov	w6, #0x1                   	// #1
   317e4:	mov	x5, x2
   317e8:	mov	x4, x1
   317ec:	mov	x3, #0x0                   	// #0
   317f0:	mov	x2, x0
   317f4:	ldr	x1, [sp, #72]
   317f8:	ldr	x0, [sp, #88]
   317fc:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   31800:	str	x0, [sp, #64]
   31804:	ldr	x0, [sp, #64]
   31808:	ldr	x0, [x0, #64]
   3180c:	mov	x1, #0x1                   	// #1
   31810:	str	x1, [x0, #40]
   31814:	ldr	w0, [sp, #40]
   31818:	cmn	w0, #0x1
   3181c:	b.lt	31830 <acc_unmap_data@@OACC_2.0+0x434>  // b.tstop
   31820:	ldr	x0, [sp, #88]
   31824:	ldr	x1, [x0, #248]
   31828:	mov	w0, #0xfffffffe            	// #-2
   3182c:	blr	x1
   31830:	ldr	x0, [sp, #88]
   31834:	add	x0, x0, #0xa8
   31838:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   3183c:	ldr	x0, [sp, #64]
   31840:	ldr	x0, [x0, #32]
   31844:	str	x0, [sp, #104]
   31848:	ldr	x0, [sp, #88]
   3184c:	ldr	x1, [x0, #176]
   31850:	ldr	x0, [sp, #64]
   31854:	str	x1, [x0, #40]
   31858:	ldr	x0, [sp, #88]
   3185c:	ldr	x1, [sp, #64]
   31860:	str	x1, [x0, #176]
   31864:	ldr	x0, [sp, #88]
   31868:	add	x0, x0, #0xa8
   3186c:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31870:	ldr	x0, [sp, #104]
   31874:	ldp	x29, x30, [sp], #112
   31878:	ret

000000000003187c <acc_create@@OACC_2.0>:
   3187c:	stp	x29, x30, [sp, #-32]!
   31880:	mov	x29, sp
   31884:	str	x0, [sp, #24]
   31888:	str	x1, [sp, #16]
   3188c:	mov	w3, #0xfffffffe            	// #-2
   31890:	ldr	x2, [sp, #16]
   31894:	ldr	x1, [sp, #24]
   31898:	mov	w0, #0x3                   	// #3
   3189c:	bl	315b0 <acc_unmap_data@@OACC_2.0+0x1b4>
   318a0:	ldp	x29, x30, [sp], #32
   318a4:	ret

00000000000318a8 <acc_create_async@@OACC_2.5>:
   318a8:	stp	x29, x30, [sp, #-48]!
   318ac:	mov	x29, sp
   318b0:	str	x0, [sp, #40]
   318b4:	str	x1, [sp, #32]
   318b8:	str	w2, [sp, #28]
   318bc:	ldr	w3, [sp, #28]
   318c0:	ldr	x2, [sp, #32]
   318c4:	ldr	x1, [sp, #40]
   318c8:	mov	w0, #0x3                   	// #3
   318cc:	bl	315b0 <acc_unmap_data@@OACC_2.0+0x1b4>
   318d0:	nop
   318d4:	ldp	x29, x30, [sp], #48
   318d8:	ret

00000000000318dc <acc_copyin@@OACC_2.0>:
   318dc:	stp	x29, x30, [sp, #-32]!
   318e0:	mov	x29, sp
   318e4:	str	x0, [sp, #24]
   318e8:	str	x1, [sp, #16]
   318ec:	mov	w3, #0xfffffffe            	// #-2
   318f0:	ldr	x2, [sp, #16]
   318f4:	ldr	x1, [sp, #24]
   318f8:	mov	w0, #0x7                   	// #7
   318fc:	bl	315b0 <acc_unmap_data@@OACC_2.0+0x1b4>
   31900:	ldp	x29, x30, [sp], #32
   31904:	ret

0000000000031908 <acc_copyin_async@@OACC_2.5>:
   31908:	stp	x29, x30, [sp, #-48]!
   3190c:	mov	x29, sp
   31910:	str	x0, [sp, #40]
   31914:	str	x1, [sp, #32]
   31918:	str	w2, [sp, #28]
   3191c:	ldr	w3, [sp, #28]
   31920:	ldr	x2, [sp, #32]
   31924:	ldr	x1, [sp, #40]
   31928:	mov	w0, #0x7                   	// #7
   3192c:	bl	315b0 <acc_unmap_data@@OACC_2.0+0x1b4>
   31930:	nop
   31934:	ldp	x29, x30, [sp], #48
   31938:	ret
   3193c:	stp	x29, x30, [sp, #-112]!
   31940:	mov	x29, sp
   31944:	str	w0, [sp, #44]
   31948:	str	x1, [sp, #32]
   3194c:	str	x2, [sp, #24]
   31950:	str	w3, [sp, #40]
   31954:	str	x4, [sp, #16]
   31958:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   3195c:	str	x0, [sp, #88]
   31960:	ldr	x0, [sp, #88]
   31964:	ldr	x0, [x0, #8]
   31968:	str	x0, [sp, #80]
   3196c:	ldr	x0, [sp, #80]
   31970:	ldr	w0, [x0, #8]
   31974:	and	w0, w0, #0x1
   31978:	cmp	w0, #0x0
   3197c:	b.ne	31c58 <acc_copyin_async@@OACC_2.5+0x350>  // b.any
   31980:	ldr	x0, [sp, #80]
   31984:	add	x0, x0, #0xa8
   31988:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   3198c:	ldr	x2, [sp, #24]
   31990:	ldr	x1, [sp, #32]
   31994:	ldr	x0, [sp, #80]
   31998:	bl	30914 <acc_on_device@@OACC_2.0+0x25c>
   3199c:	str	x0, [sp, #72]
   319a0:	ldr	x0, [sp, #72]
   319a4:	cmp	x0, #0x0
   319a8:	b.ne	319d0 <acc_copyin_async@@OACC_2.5+0xc8>  // b.any
   319ac:	ldr	x0, [sp, #80]
   319b0:	add	x0, x0, #0xa8
   319b4:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   319b8:	ldr	x0, [sp, #24]
   319bc:	mov	w2, w0
   319c0:	ldr	x1, [sp, #32]
   319c4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   319c8:	add	x0, x0, #0xa48
   319cc:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   319d0:	ldr	x0, [sp, #72]
   319d4:	ldr	x0, [x0, #16]
   319d8:	ldr	x1, [x0, #16]
   319dc:	ldr	x0, [sp, #72]
   319e0:	ldr	x0, [x0, #24]
   319e4:	add	x1, x1, x0
   319e8:	ldr	x0, [sp, #32]
   319ec:	add	x1, x1, x0
   319f0:	ldr	x0, [sp, #72]
   319f4:	ldr	x0, [x0]
   319f8:	sub	x0, x1, x0
   319fc:	str	x0, [sp, #64]
   31a00:	ldr	x0, [sp, #72]
   31a04:	ldr	x1, [x0, #8]
   31a08:	ldr	x0, [sp, #72]
   31a0c:	ldr	x0, [x0]
   31a10:	sub	x0, x1, x0
   31a14:	str	x0, [sp, #56]
   31a18:	ldr	x0, [sp, #72]
   31a1c:	ldr	x1, [x0]
   31a20:	ldr	x0, [sp, #32]
   31a24:	cmp	x1, x0
   31a28:	b.ne	31a3c <acc_copyin_async@@OACC_2.5+0x134>  // b.any
   31a2c:	ldr	x1, [sp, #56]
   31a30:	ldr	x0, [sp, #24]
   31a34:	cmp	x1, x0
   31a38:	b.eq	31a74 <acc_copyin_async@@OACC_2.5+0x16c>  // b.none
   31a3c:	ldr	x0, [sp, #80]
   31a40:	add	x0, x0, #0xa8
   31a44:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31a48:	ldr	x0, [sp, #72]
   31a4c:	ldr	x0, [x0]
   31a50:	mov	x1, x0
   31a54:	ldr	x0, [sp, #56]
   31a58:	mov	w2, w0
   31a5c:	ldr	x0, [sp, #24]
   31a60:	mov	w4, w0
   31a64:	ldr	x3, [sp, #32]
   31a68:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31a6c:	add	x0, x0, #0xa60
   31a70:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   31a74:	ldr	x0, [sp, #72]
   31a78:	ldr	x0, [x0, #32]
   31a7c:	cmn	x0, #0x1
   31a80:	b.ne	31a94 <acc_copyin_async@@OACC_2.5+0x18c>  // b.any
   31a84:	ldr	x0, [sp, #72]
   31a88:	str	xzr, [x0, #32]
   31a8c:	ldr	x0, [sp, #72]
   31a90:	str	xzr, [x0, #40]
   31a94:	ldr	x0, [sp, #72]
   31a98:	ldr	x1, [x0, #32]
   31a9c:	ldr	x0, [sp, #72]
   31aa0:	ldr	x0, [x0, #40]
   31aa4:	cmp	x1, x0
   31aa8:	b.cs	31ac4 <acc_copyin_async@@OACC_2.5+0x1bc>  // b.hs, b.nlast
   31aac:	ldr	x0, [sp, #80]
   31ab0:	add	x0, x0, #0xa8
   31ab4:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31ab8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31abc:	add	x0, x0, #0xa80
   31ac0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   31ac4:	ldr	w0, [sp, #44]
   31ac8:	and	w0, w0, #0x2
   31acc:	cmp	w0, #0x0
   31ad0:	b.eq	31afc <acc_copyin_async@@OACC_2.5+0x1f4>  // b.none
   31ad4:	ldr	x0, [sp, #72]
   31ad8:	ldr	x1, [x0, #32]
   31adc:	ldr	x0, [sp, #72]
   31ae0:	ldr	x0, [x0, #40]
   31ae4:	sub	x1, x1, x0
   31ae8:	ldr	x0, [sp, #72]
   31aec:	str	x1, [x0, #32]
   31af0:	ldr	x0, [sp, #72]
   31af4:	str	xzr, [x0, #40]
   31af8:	b	31b34 <acc_copyin_async@@OACC_2.5+0x22c>
   31afc:	ldr	x0, [sp, #72]
   31b00:	ldr	x0, [x0, #40]
   31b04:	cmp	x0, #0x0
   31b08:	b.eq	31b34 <acc_copyin_async@@OACC_2.5+0x22c>  // b.none
   31b0c:	ldr	x0, [sp, #72]
   31b10:	ldr	x0, [x0, #40]
   31b14:	sub	x1, x0, #0x1
   31b18:	ldr	x0, [sp, #72]
   31b1c:	str	x1, [x0, #40]
   31b20:	ldr	x0, [sp, #72]
   31b24:	ldr	x0, [x0, #32]
   31b28:	sub	x1, x0, #0x1
   31b2c:	ldr	x0, [sp, #72]
   31b30:	str	x1, [x0, #32]
   31b34:	ldr	x0, [sp, #72]
   31b38:	ldr	x0, [x0, #32]
   31b3c:	cmp	x0, #0x0
   31b40:	b.ne	31c48 <acc_copyin_async@@OACC_2.5+0x340>  // b.any
   31b44:	ldr	x0, [sp, #72]
   31b48:	ldr	x0, [x0, #16]
   31b4c:	ldr	x0, [x0]
   31b50:	cmp	x0, #0x2
   31b54:	b.ne	31bd4 <acc_copyin_async@@OACC_2.5+0x2cc>  // b.any
   31b58:	str	xzr, [sp, #104]
   31b5c:	ldr	x0, [sp, #80]
   31b60:	ldr	x0, [x0, #176]
   31b64:	str	x0, [sp, #96]
   31b68:	b	31bc8 <acc_copyin_async@@OACC_2.5+0x2c0>
   31b6c:	ldr	x0, [sp, #72]
   31b70:	ldr	x0, [x0, #16]
   31b74:	ldr	x1, [sp, #96]
   31b78:	cmp	x1, x0
   31b7c:	b.ne	31bb4 <acc_copyin_async@@OACC_2.5+0x2ac>  // b.any
   31b80:	ldr	x0, [sp, #104]
   31b84:	cmp	x0, #0x0
   31b88:	b.eq	31ba0 <acc_copyin_async@@OACC_2.5+0x298>  // b.none
   31b8c:	ldr	x0, [sp, #96]
   31b90:	ldr	x1, [x0, #40]
   31b94:	ldr	x0, [sp, #104]
   31b98:	str	x1, [x0, #40]
   31b9c:	b	31bd4 <acc_copyin_async@@OACC_2.5+0x2cc>
   31ba0:	ldr	x0, [sp, #96]
   31ba4:	ldr	x1, [x0, #40]
   31ba8:	ldr	x0, [sp, #80]
   31bac:	str	x1, [x0, #176]
   31bb0:	b	31bd4 <acc_copyin_async@@OACC_2.5+0x2cc>
   31bb4:	ldr	x0, [sp, #96]
   31bb8:	str	x0, [sp, #104]
   31bbc:	ldr	x0, [sp, #96]
   31bc0:	ldr	x0, [x0, #40]
   31bc4:	str	x0, [sp, #96]
   31bc8:	ldr	x0, [sp, #96]
   31bcc:	cmp	x0, #0x0
   31bd0:	b.ne	31b6c <acc_copyin_async@@OACC_2.5+0x264>  // b.any
   31bd4:	ldr	w0, [sp, #44]
   31bd8:	and	w0, w0, #0x1
   31bdc:	cmp	w0, #0x0
   31be0:	b.eq	31c3c <acc_copyin_async@@OACC_2.5+0x334>  // b.none
   31be4:	ldr	w0, [sp, #40]
   31be8:	cmn	w0, #0x1
   31bec:	b.lt	31c00 <acc_copyin_async@@OACC_2.5+0x2f8>  // b.tstop
   31bf0:	ldr	x0, [sp, #80]
   31bf4:	ldr	x1, [x0, #248]
   31bf8:	ldr	w0, [sp, #40]
   31bfc:	blr	x1
   31c00:	ldr	x0, [sp, #80]
   31c04:	ldr	x4, [x0, #112]
   31c08:	ldr	x0, [sp, #80]
   31c0c:	ldr	w0, [x0, #12]
   31c10:	ldr	x3, [sp, #24]
   31c14:	ldr	x2, [sp, #64]
   31c18:	ldr	x1, [sp, #32]
   31c1c:	blr	x4
   31c20:	ldr	w0, [sp, #40]
   31c24:	cmn	w0, #0x1
   31c28:	b.lt	31c3c <acc_copyin_async@@OACC_2.5+0x334>  // b.tstop
   31c2c:	ldr	x0, [sp, #80]
   31c30:	ldr	x1, [x0, #248]
   31c34:	mov	w0, #0xfffffffe            	// #-2
   31c38:	blr	x1
   31c3c:	ldr	x1, [sp, #72]
   31c40:	ldr	x0, [sp, #80]
   31c44:	bl	27d5c <omp_get_place_proc_ids@@OMP_4.5+0x3380>
   31c48:	ldr	x0, [sp, #80]
   31c4c:	add	x0, x0, #0xa8
   31c50:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31c54:	b	31c5c <acc_copyin_async@@OACC_2.5+0x354>
   31c58:	nop
   31c5c:	ldp	x29, x30, [sp], #112
   31c60:	ret

0000000000031c64 <acc_delete@@OACC_2.0>:
   31c64:	stp	x29, x30, [sp, #-32]!
   31c68:	mov	x29, sp
   31c6c:	str	x0, [sp, #24]
   31c70:	str	x1, [sp, #16]
   31c74:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31c78:	add	x4, x0, #0xc08
   31c7c:	mov	w3, #0xfffffffe            	// #-2
   31c80:	ldr	x2, [sp, #16]
   31c84:	ldr	x1, [sp, #24]
   31c88:	mov	w0, #0x0                   	// #0
   31c8c:	bl	3193c <acc_copyin_async@@OACC_2.5+0x34>
   31c90:	nop
   31c94:	ldp	x29, x30, [sp], #32
   31c98:	ret

0000000000031c9c <acc_delete_async@@OACC_2.5>:
   31c9c:	stp	x29, x30, [sp, #-48]!
   31ca0:	mov	x29, sp
   31ca4:	str	x0, [sp, #40]
   31ca8:	str	x1, [sp, #32]
   31cac:	str	w2, [sp, #28]
   31cb0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31cb4:	add	x4, x0, #0xc18
   31cb8:	ldr	w3, [sp, #28]
   31cbc:	ldr	x2, [sp, #32]
   31cc0:	ldr	x1, [sp, #40]
   31cc4:	mov	w0, #0x0                   	// #0
   31cc8:	bl	3193c <acc_copyin_async@@OACC_2.5+0x34>
   31ccc:	nop
   31cd0:	ldp	x29, x30, [sp], #48
   31cd4:	ret

0000000000031cd8 <acc_delete_finalize@@OACC_2.5>:
   31cd8:	stp	x29, x30, [sp, #-32]!
   31cdc:	mov	x29, sp
   31ce0:	str	x0, [sp, #24]
   31ce4:	str	x1, [sp, #16]
   31ce8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31cec:	add	x4, x0, #0xc30
   31cf0:	mov	w3, #0xfffffffe            	// #-2
   31cf4:	ldr	x2, [sp, #16]
   31cf8:	ldr	x1, [sp, #24]
   31cfc:	mov	w0, #0x2                   	// #2
   31d00:	bl	3193c <acc_copyin_async@@OACC_2.5+0x34>
   31d04:	nop
   31d08:	ldp	x29, x30, [sp], #32
   31d0c:	ret

0000000000031d10 <acc_delete_finalize_async@@OACC_2.5>:
   31d10:	stp	x29, x30, [sp, #-48]!
   31d14:	mov	x29, sp
   31d18:	str	x0, [sp, #40]
   31d1c:	str	x1, [sp, #32]
   31d20:	str	w2, [sp, #28]
   31d24:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31d28:	add	x4, x0, #0xc48
   31d2c:	ldr	w3, [sp, #28]
   31d30:	ldr	x2, [sp, #32]
   31d34:	ldr	x1, [sp, #40]
   31d38:	mov	w0, #0x2                   	// #2
   31d3c:	bl	3193c <acc_copyin_async@@OACC_2.5+0x34>
   31d40:	nop
   31d44:	ldp	x29, x30, [sp], #48
   31d48:	ret

0000000000031d4c <acc_copyout@@OACC_2.0>:
   31d4c:	stp	x29, x30, [sp, #-32]!
   31d50:	mov	x29, sp
   31d54:	str	x0, [sp, #24]
   31d58:	str	x1, [sp, #16]
   31d5c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31d60:	add	x4, x0, #0xc68
   31d64:	mov	w3, #0xfffffffe            	// #-2
   31d68:	ldr	x2, [sp, #16]
   31d6c:	ldr	x1, [sp, #24]
   31d70:	mov	w0, #0x1                   	// #1
   31d74:	bl	3193c <acc_copyin_async@@OACC_2.5+0x34>
   31d78:	nop
   31d7c:	ldp	x29, x30, [sp], #32
   31d80:	ret

0000000000031d84 <acc_copyout_async@@OACC_2.5>:
   31d84:	stp	x29, x30, [sp, #-48]!
   31d88:	mov	x29, sp
   31d8c:	str	x0, [sp, #40]
   31d90:	str	x1, [sp, #32]
   31d94:	str	w2, [sp, #28]
   31d98:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31d9c:	add	x4, x0, #0xc78
   31da0:	ldr	w3, [sp, #28]
   31da4:	ldr	x2, [sp, #32]
   31da8:	ldr	x1, [sp, #40]
   31dac:	mov	w0, #0x1                   	// #1
   31db0:	bl	3193c <acc_copyin_async@@OACC_2.5+0x34>
   31db4:	nop
   31db8:	ldp	x29, x30, [sp], #48
   31dbc:	ret

0000000000031dc0 <acc_copyout_finalize@@OACC_2.5>:
   31dc0:	stp	x29, x30, [sp, #-32]!
   31dc4:	mov	x29, sp
   31dc8:	str	x0, [sp, #24]
   31dcc:	str	x1, [sp, #16]
   31dd0:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31dd4:	add	x4, x0, #0xc90
   31dd8:	mov	w3, #0xfffffffe            	// #-2
   31ddc:	ldr	x2, [sp, #16]
   31de0:	ldr	x1, [sp, #24]
   31de4:	mov	w0, #0x3                   	// #3
   31de8:	bl	3193c <acc_copyin_async@@OACC_2.5+0x34>
   31dec:	nop
   31df0:	ldp	x29, x30, [sp], #32
   31df4:	ret

0000000000031df8 <acc_copyout_finalize_async@@OACC_2.5>:
   31df8:	stp	x29, x30, [sp, #-48]!
   31dfc:	mov	x29, sp
   31e00:	str	x0, [sp, #40]
   31e04:	str	x1, [sp, #32]
   31e08:	str	w2, [sp, #28]
   31e0c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31e10:	add	x4, x0, #0xca8
   31e14:	ldr	w3, [sp, #28]
   31e18:	ldr	x2, [sp, #32]
   31e1c:	ldr	x1, [sp, #40]
   31e20:	mov	w0, #0x3                   	// #3
   31e24:	bl	3193c <acc_copyin_async@@OACC_2.5+0x34>
   31e28:	nop
   31e2c:	ldp	x29, x30, [sp], #48
   31e30:	ret
   31e34:	stp	x29, x30, [sp, #-80]!
   31e38:	mov	x29, sp
   31e3c:	str	w0, [sp, #44]
   31e40:	str	x1, [sp, #32]
   31e44:	str	x2, [sp, #24]
   31e48:	str	w3, [sp, #40]
   31e4c:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   31e50:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   31e54:	str	x0, [sp, #72]
   31e58:	ldr	x0, [sp, #72]
   31e5c:	ldr	x0, [x0, #8]
   31e60:	str	x0, [sp, #64]
   31e64:	ldr	x0, [sp, #64]
   31e68:	ldr	w0, [x0, #8]
   31e6c:	and	w0, w0, #0x1
   31e70:	cmp	w0, #0x0
   31e74:	b.ne	31f90 <acc_copyout_finalize_async@@OACC_2.5+0x198>  // b.any
   31e78:	ldr	x0, [sp, #64]
   31e7c:	add	x0, x0, #0xa8
   31e80:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   31e84:	ldr	x2, [sp, #24]
   31e88:	ldr	x1, [sp, #32]
   31e8c:	ldr	x0, [sp, #64]
   31e90:	bl	30914 <acc_on_device@@OACC_2.0+0x25c>
   31e94:	str	x0, [sp, #56]
   31e98:	ldr	x0, [sp, #56]
   31e9c:	cmp	x0, #0x0
   31ea0:	b.ne	31ec8 <acc_copyout_finalize_async@@OACC_2.5+0xd0>  // b.any
   31ea4:	ldr	x0, [sp, #64]
   31ea8:	add	x0, x0, #0xa8
   31eac:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31eb0:	ldr	x0, [sp, #24]
   31eb4:	mov	w2, w0
   31eb8:	ldr	x1, [sp, #32]
   31ebc:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   31ec0:	add	x0, x0, #0xa48
   31ec4:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   31ec8:	ldr	x0, [sp, #56]
   31ecc:	ldr	x0, [x0, #16]
   31ed0:	ldr	x1, [x0, #16]
   31ed4:	ldr	x0, [sp, #56]
   31ed8:	ldr	x0, [x0, #24]
   31edc:	add	x1, x1, x0
   31ee0:	ldr	x0, [sp, #32]
   31ee4:	add	x1, x1, x0
   31ee8:	ldr	x0, [sp, #56]
   31eec:	ldr	x0, [x0]
   31ef0:	sub	x0, x1, x0
   31ef4:	str	x0, [sp, #48]
   31ef8:	ldr	w0, [sp, #40]
   31efc:	cmn	w0, #0x1
   31f00:	b.lt	31f14 <acc_copyout_finalize_async@@OACC_2.5+0x11c>  // b.tstop
   31f04:	ldr	x0, [sp, #64]
   31f08:	ldr	x1, [x0, #248]
   31f0c:	ldr	w0, [sp, #40]
   31f10:	blr	x1
   31f14:	ldr	w0, [sp, #44]
   31f18:	cmp	w0, #0x0
   31f1c:	b.eq	31f44 <acc_copyout_finalize_async@@OACC_2.5+0x14c>  // b.none
   31f20:	ldr	x0, [sp, #64]
   31f24:	ldr	x4, [x0, #120]
   31f28:	ldr	x0, [sp, #64]
   31f2c:	ldr	w0, [x0, #12]
   31f30:	ldr	x3, [sp, #24]
   31f34:	ldr	x2, [sp, #32]
   31f38:	ldr	x1, [sp, #48]
   31f3c:	blr	x4
   31f40:	b	31f64 <acc_copyout_finalize_async@@OACC_2.5+0x16c>
   31f44:	ldr	x0, [sp, #64]
   31f48:	ldr	x4, [x0, #112]
   31f4c:	ldr	x0, [sp, #64]
   31f50:	ldr	w0, [x0, #12]
   31f54:	ldr	x3, [sp, #24]
   31f58:	ldr	x2, [sp, #48]
   31f5c:	ldr	x1, [sp, #32]
   31f60:	blr	x4
   31f64:	ldr	w0, [sp, #40]
   31f68:	cmn	w0, #0x1
   31f6c:	b.lt	31f80 <acc_copyout_finalize_async@@OACC_2.5+0x188>  // b.tstop
   31f70:	ldr	x0, [sp, #64]
   31f74:	ldr	x1, [x0, #248]
   31f78:	mov	w0, #0xfffffffe            	// #-2
   31f7c:	blr	x1
   31f80:	ldr	x0, [sp, #64]
   31f84:	add	x0, x0, #0xa8
   31f88:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   31f8c:	b	31f94 <acc_copyout_finalize_async@@OACC_2.5+0x19c>
   31f90:	nop
   31f94:	ldp	x29, x30, [sp], #80
   31f98:	ret

0000000000031f9c <acc_update_device@@OACC_2.0>:
   31f9c:	stp	x29, x30, [sp, #-32]!
   31fa0:	mov	x29, sp
   31fa4:	str	x0, [sp, #24]
   31fa8:	str	x1, [sp, #16]
   31fac:	mov	w3, #0xfffffffe            	// #-2
   31fb0:	ldr	x2, [sp, #16]
   31fb4:	ldr	x1, [sp, #24]
   31fb8:	mov	w0, #0x1                   	// #1
   31fbc:	bl	31e34 <acc_copyout_finalize_async@@OACC_2.5+0x3c>
   31fc0:	nop
   31fc4:	ldp	x29, x30, [sp], #32
   31fc8:	ret

0000000000031fcc <acc_update_device_async@@OACC_2.5>:
   31fcc:	stp	x29, x30, [sp, #-48]!
   31fd0:	mov	x29, sp
   31fd4:	str	x0, [sp, #40]
   31fd8:	str	x1, [sp, #32]
   31fdc:	str	w2, [sp, #28]
   31fe0:	ldr	w3, [sp, #28]
   31fe4:	ldr	x2, [sp, #32]
   31fe8:	ldr	x1, [sp, #40]
   31fec:	mov	w0, #0x1                   	// #1
   31ff0:	bl	31e34 <acc_copyout_finalize_async@@OACC_2.5+0x3c>
   31ff4:	nop
   31ff8:	ldp	x29, x30, [sp], #48
   31ffc:	ret

0000000000032000 <acc_update_self@@OACC_2.0>:
   32000:	stp	x29, x30, [sp, #-32]!
   32004:	mov	x29, sp
   32008:	str	x0, [sp, #24]
   3200c:	str	x1, [sp, #16]
   32010:	mov	w3, #0xfffffffe            	// #-2
   32014:	ldr	x2, [sp, #16]
   32018:	ldr	x1, [sp, #24]
   3201c:	mov	w0, #0x0                   	// #0
   32020:	bl	31e34 <acc_copyout_finalize_async@@OACC_2.5+0x3c>
   32024:	nop
   32028:	ldp	x29, x30, [sp], #32
   3202c:	ret

0000000000032030 <acc_update_self_async@@OACC_2.5>:
   32030:	stp	x29, x30, [sp, #-48]!
   32034:	mov	x29, sp
   32038:	str	x0, [sp, #40]
   3203c:	str	x1, [sp, #32]
   32040:	str	w2, [sp, #28]
   32044:	ldr	w3, [sp, #28]
   32048:	ldr	x2, [sp, #32]
   3204c:	ldr	x1, [sp, #40]
   32050:	mov	w0, #0x0                   	// #0
   32054:	bl	31e34 <acc_copyout_finalize_async@@OACC_2.5+0x3c>
   32058:	nop
   3205c:	ldp	x29, x30, [sp], #48
   32060:	ret
   32064:	stp	x29, x30, [sp, #-96]!
   32068:	mov	x29, sp
   3206c:	str	x0, [sp, #40]
   32070:	str	x1, [sp, #32]
   32074:	str	x2, [sp, #24]
   32078:	str	x3, [sp, #16]
   3207c:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   32080:	str	x0, [sp, #72]
   32084:	ldr	x0, [sp, #72]
   32088:	ldr	x0, [x0, #8]
   3208c:	str	x0, [sp, #64]
   32090:	ldr	x0, [sp, #32]
   32094:	ldr	x2, [x0]
   32098:	ldr	x0, [sp, #24]
   3209c:	ldr	x0, [x0]
   320a0:	mov	x1, x0
   320a4:	mov	x0, x2
   320a8:	bl	8900 <acc_is_present@plt>
   320ac:	cmp	w0, #0x0
   320b0:	b.eq	32214 <acc_update_self_async@@OACC_2.5+0x1e4>  // b.none
   320b4:	ldr	x0, [sp, #64]
   320b8:	add	x0, x0, #0xa8
   320bc:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   320c0:	ldr	x0, [sp, #32]
   320c4:	ldr	x1, [x0]
   320c8:	ldr	x0, [sp, #24]
   320cc:	ldr	x0, [x0]
   320d0:	mov	x2, x0
   320d4:	ldr	x0, [sp, #64]
   320d8:	bl	30914 <acc_on_device@@OACC_2.0+0x25c>
   320dc:	str	x0, [sp, #48]
   320e0:	ldr	x0, [sp, #64]
   320e4:	add	x0, x0, #0xa8
   320e8:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   320ec:	ldr	x0, [sp, #48]
   320f0:	ldr	x0, [x0, #16]
   320f4:	str	x0, [sp, #56]
   320f8:	str	xzr, [sp, #88]
   320fc:	b	321f4 <acc_update_self_async@@OACC_2.5+0x1c4>
   32100:	ldr	x1, [sp, #56]
   32104:	ldr	x0, [sp, #88]
   32108:	add	x0, x0, #0x2
   3210c:	lsl	x0, x0, #5
   32110:	add	x0, x1, x0
   32114:	ldr	x0, [x0]
   32118:	ldr	x1, [sp, #48]
   3211c:	cmp	x1, x0
   32120:	b.ne	321e8 <acc_update_self_async@@OACC_2.5+0x1b8>  // b.any
   32124:	str	xzr, [sp, #80]
   32128:	b	321d4 <acc_update_self_async@@OACC_2.5+0x1a4>
   3212c:	ldr	x1, [sp, #88]
   32130:	ldr	x0, [sp, #80]
   32134:	add	x1, x1, x0
   32138:	ldr	x0, [sp, #56]
   3213c:	ldr	x0, [x0, #48]
   32140:	cmp	x1, x0
   32144:	b.cs	321c8 <acc_update_self_async@@OACC_2.5+0x198>  // b.hs, b.nlast
   32148:	ldr	x1, [sp, #88]
   3214c:	ldr	x0, [sp, #80]
   32150:	add	x0, x1, x0
   32154:	ldr	x1, [sp, #56]
   32158:	add	x0, x0, #0x2
   3215c:	lsl	x0, x0, #5
   32160:	add	x0, x1, x0
   32164:	ldr	x0, [x0]
   32168:	cmp	x0, #0x0
   3216c:	b.eq	321c8 <acc_update_self_async@@OACC_2.5+0x198>  // b.none
   32170:	ldr	x1, [sp, #88]
   32174:	ldr	x0, [sp, #80]
   32178:	add	x0, x1, x0
   3217c:	ldr	x1, [sp, #56]
   32180:	add	x0, x0, #0x2
   32184:	lsl	x0, x0, #5
   32188:	add	x0, x1, x0
   3218c:	ldr	x0, [x0]
   32190:	ldr	x1, [x0, #32]
   32194:	add	x1, x1, #0x1
   32198:	str	x1, [x0, #32]
   3219c:	ldr	x1, [sp, #88]
   321a0:	ldr	x0, [sp, #80]
   321a4:	add	x0, x1, x0
   321a8:	ldr	x1, [sp, #56]
   321ac:	add	x0, x0, #0x2
   321b0:	lsl	x0, x0, #5
   321b4:	add	x0, x1, x0
   321b8:	ldr	x0, [x0]
   321bc:	ldr	x1, [x0, #40]
   321c0:	add	x1, x1, #0x1
   321c4:	str	x1, [x0, #40]
   321c8:	ldr	x0, [sp, #80]
   321cc:	add	x0, x0, #0x1
   321d0:	str	x0, [sp, #80]
   321d4:	ldr	x1, [sp, #80]
   321d8:	ldr	x0, [sp, #40]
   321dc:	cmp	x1, x0
   321e0:	b.cc	3212c <acc_update_self_async@@OACC_2.5+0xfc>  // b.lo, b.ul, b.last
   321e4:	b	322e0 <acc_update_self_async@@OACC_2.5+0x2b0>
   321e8:	ldr	x0, [sp, #88]
   321ec:	add	x0, x0, #0x1
   321f0:	str	x0, [sp, #88]
   321f4:	ldr	x0, [sp, #56]
   321f8:	ldr	x0, [x0, #48]
   321fc:	ldr	x1, [sp, #88]
   32200:	cmp	x1, x0
   32204:	b.cc	32100 <acc_update_self_async@@OACC_2.5+0xd0>  // b.lo, b.ul, b.last
   32208:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   3220c:	add	x0, x0, #0xaa8
   32210:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   32214:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   32218:	add	x0, x0, #0x630
   3221c:	ldr	w0, [x0]
   32220:	sxtw	x0, w0
   32224:	cmp	x0, #0x0
   32228:	b.eq	32244 <acc_update_self_async@@OACC_2.5+0x214>  // b.none
   3222c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   32230:	add	x2, x0, #0xcc8
   32234:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   32238:	add	x1, x0, #0xae0
   3223c:	mov	w0, #0x0                   	// #0
   32240:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   32244:	mov	w7, #0x0                   	// #0
   32248:	mov	w6, #0x1                   	// #1
   3224c:	ldr	x5, [sp, #16]
   32250:	ldr	x4, [sp, #24]
   32254:	mov	x3, #0x0                   	// #0
   32258:	ldr	x2, [sp, #32]
   3225c:	ldr	x1, [sp, #40]
   32260:	ldr	x0, [sp, #64]
   32264:	bl	261f4 <omp_get_place_proc_ids@@OMP_4.5+0x1818>
   32268:	str	x0, [sp, #56]
   3226c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   32270:	add	x0, x0, #0x630
   32274:	ldr	w0, [x0]
   32278:	sxtw	x0, w0
   3227c:	cmp	x0, #0x0
   32280:	b.eq	3229c <acc_update_self_async@@OACC_2.5+0x26c>  // b.none
   32284:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   32288:	add	x2, x0, #0xcc8
   3228c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   32290:	add	x1, x0, #0xaf8
   32294:	mov	w0, #0x0                   	// #0
   32298:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   3229c:	ldr	x0, [sp, #56]
   322a0:	ldr	x0, [x0, #64]
   322a4:	mov	x1, #0x1                   	// #1
   322a8:	str	x1, [x0, #40]
   322ac:	ldr	x0, [sp, #64]
   322b0:	add	x0, x0, #0xa8
   322b4:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   322b8:	ldr	x0, [sp, #64]
   322bc:	ldr	x1, [x0, #176]
   322c0:	ldr	x0, [sp, #56]
   322c4:	str	x1, [x0, #40]
   322c8:	ldr	x0, [sp, #64]
   322cc:	ldr	x1, [sp, #56]
   322d0:	str	x1, [x0, #176]
   322d4:	ldr	x0, [sp, #64]
   322d8:	add	x0, x0, #0xa8
   322dc:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   322e0:	ldp	x29, x30, [sp], #96
   322e4:	ret
   322e8:	stp	x29, x30, [sp, #-112]!
   322ec:	mov	x29, sp
   322f0:	str	x0, [sp, #40]
   322f4:	str	x1, [sp, #32]
   322f8:	strb	w2, [sp, #31]
   322fc:	str	w3, [sp, #24]
   32300:	str	w4, [sp, #20]
   32304:	str	w5, [sp, #16]
   32308:	bl	308fc <acc_on_device@@OACC_2.0+0x244>
   3230c:	str	x0, [sp, #80]
   32310:	ldr	x0, [sp, #80]
   32314:	ldr	x0, [x0, #8]
   32318:	str	x0, [sp, #72]
   3231c:	ldr	w0, [sp, #16]
   32320:	cmp	w0, #0x1
   32324:	b.ne	32330 <acc_update_self_async@@OACC_2.5+0x300>  // b.any
   32328:	mov	w0, #0x2                   	// #2
   3232c:	b	32334 <acc_update_self_async@@OACC_2.5+0x304>
   32330:	mov	w0, #0x3                   	// #3
   32334:	str	w0, [sp, #68]
   32338:	ldr	x1, [sp, #32]
   3233c:	ldr	x0, [sp, #40]
   32340:	bl	8900 <acc_is_present@plt>
   32344:	cmp	w0, #0x0
   32348:	b.eq	32614 <acc_update_self_async@@OACC_2.5+0x5e4>  // b.none
   3234c:	ldr	x0, [sp, #72]
   32350:	add	x0, x0, #0xa8
   32354:	bl	3083c <acc_on_device@@OACC_2.0+0x184>
   32358:	mov	x2, #0x1                   	// #1
   3235c:	ldr	x1, [sp, #40]
   32360:	ldr	x0, [sp, #72]
   32364:	bl	30914 <acc_on_device@@OACC_2.0+0x25c>
   32368:	str	x0, [sp, #56]
   3236c:	ldr	x0, [sp, #56]
   32370:	cmp	x0, #0x0
   32374:	b.ne	32394 <acc_update_self_async@@OACC_2.5+0x364>  // b.any
   32378:	ldr	x0, [sp, #72]
   3237c:	add	x0, x0, #0xa8
   32380:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   32384:	ldr	x1, [sp, #40]
   32388:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   3238c:	add	x0, x0, #0x9b8
   32390:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   32394:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   32398:	add	x0, x0, #0x630
   3239c:	ldr	w0, [x0]
   323a0:	sxtw	x0, w0
   323a4:	cmp	x0, #0x0
   323a8:	b.eq	323c4 <acc_update_self_async@@OACC_2.5+0x394>  // b.none
   323ac:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   323b0:	add	x2, x0, #0xce0
   323b4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   323b8:	add	x1, x0, #0xb18
   323bc:	mov	w0, #0x0                   	// #0
   323c0:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   323c4:	ldr	x0, [sp, #56]
   323c8:	ldr	x0, [x0, #16]
   323cc:	str	x0, [sp, #104]
   323d0:	ldr	x0, [sp, #56]
   323d4:	ldr	x1, [x0, #32]
   323d8:	ldr	x0, [sp, #56]
   323dc:	ldr	x0, [x0, #40]
   323e0:	cmp	x1, x0
   323e4:	b.cs	32400 <acc_update_self_async@@OACC_2.5+0x3d0>  // b.hs, b.nlast
   323e8:	ldr	x0, [sp, #72]
   323ec:	add	x0, x0, #0xa8
   323f0:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   323f4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   323f8:	add	x0, x0, #0xa80
   323fc:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   32400:	ldr	w0, [sp, #20]
   32404:	cmp	w0, #0x0
   32408:	b.eq	32434 <acc_update_self_async@@OACC_2.5+0x404>  // b.none
   3240c:	ldr	x0, [sp, #56]
   32410:	ldr	x1, [x0, #32]
   32414:	ldr	x0, [sp, #56]
   32418:	ldr	x0, [x0, #40]
   3241c:	sub	x1, x1, x0
   32420:	ldr	x0, [sp, #56]
   32424:	str	x1, [x0, #32]
   32428:	ldr	x0, [sp, #56]
   3242c:	str	xzr, [x0, #40]
   32430:	b	3246c <acc_update_self_async@@OACC_2.5+0x43c>
   32434:	ldr	x0, [sp, #56]
   32438:	ldr	x0, [x0, #40]
   3243c:	cmp	x0, #0x0
   32440:	b.eq	3246c <acc_update_self_async@@OACC_2.5+0x43c>  // b.none
   32444:	ldr	x0, [sp, #56]
   32448:	ldr	x0, [x0, #40]
   3244c:	sub	x1, x0, #0x1
   32450:	ldr	x0, [sp, #56]
   32454:	str	x1, [x0, #40]
   32458:	ldr	x0, [sp, #56]
   3245c:	ldr	x0, [x0, #32]
   32460:	sub	x1, x0, #0x1
   32464:	ldr	x0, [sp, #56]
   32468:	str	x1, [x0, #32]
   3246c:	ldr	x0, [sp, #72]
   32470:	add	x0, x0, #0xa8
   32474:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   32478:	ldr	x0, [sp, #56]
   3247c:	ldr	x0, [x0, #32]
   32480:	cmp	x0, #0x0
   32484:	b.ne	325d4 <acc_update_self_async@@OACC_2.5+0x5a4>  // b.any
   32488:	ldr	x0, [sp, #104]
   3248c:	ldr	x1, [x0]
   32490:	ldrsw	x0, [sp, #68]
   32494:	cmp	x1, x0
   32498:	b.ne	32518 <acc_update_self_async@@OACC_2.5+0x4e8>  // b.any
   3249c:	str	xzr, [sp, #96]
   324a0:	ldr	x0, [sp, #72]
   324a4:	ldr	x0, [x0, #176]
   324a8:	str	x0, [sp, #104]
   324ac:	b	3250c <acc_update_self_async@@OACC_2.5+0x4dc>
   324b0:	ldr	x0, [sp, #56]
   324b4:	ldr	x0, [x0, #16]
   324b8:	ldr	x1, [sp, #104]
   324bc:	cmp	x1, x0
   324c0:	b.ne	324f8 <acc_update_self_async@@OACC_2.5+0x4c8>  // b.any
   324c4:	ldr	x0, [sp, #96]
   324c8:	cmp	x0, #0x0
   324cc:	b.eq	324e4 <acc_update_self_async@@OACC_2.5+0x4b4>  // b.none
   324d0:	ldr	x0, [sp, #104]
   324d4:	ldr	x1, [x0, #40]
   324d8:	ldr	x0, [sp, #96]
   324dc:	str	x1, [x0, #40]
   324e0:	b	32518 <acc_update_self_async@@OACC_2.5+0x4e8>
   324e4:	ldr	x0, [sp, #104]
   324e8:	ldr	x1, [x0, #40]
   324ec:	ldr	x0, [sp, #72]
   324f0:	str	x1, [x0, #176]
   324f4:	b	32518 <acc_update_self_async@@OACC_2.5+0x4e8>
   324f8:	ldr	x0, [sp, #104]
   324fc:	str	x0, [sp, #96]
   32500:	ldr	x0, [sp, #104]
   32504:	ldr	x0, [x0, #40]
   32508:	str	x0, [sp, #104]
   3250c:	ldr	x0, [sp, #104]
   32510:	cmp	x0, #0x0
   32514:	b.ne	324b0 <acc_update_self_async@@OACC_2.5+0x480>  // b.any
   32518:	ldr	x0, [sp, #56]
   3251c:	mov	x1, #0x1                   	// #1
   32520:	str	x1, [x0, #32]
   32524:	ldrsw	x1, [sp, #68]
   32528:	ldr	x0, [sp, #104]
   3252c:	str	x1, [x0]
   32530:	str	xzr, [sp, #88]
   32534:	b	3258c <acc_update_self_async@@OACC_2.5+0x55c>
   32538:	ldr	x1, [sp, #104]
   3253c:	ldr	x0, [sp, #88]
   32540:	add	x0, x0, #0x2
   32544:	lsl	x0, x0, #5
   32548:	add	x0, x1, x0
   3254c:	ldr	x0, [x0]
   32550:	ldr	x1, [sp, #56]
   32554:	cmp	x1, x0
   32558:	b.ne	32580 <acc_update_self_async@@OACC_2.5+0x550>  // b.any
   3255c:	ldrb	w2, [sp, #31]
   32560:	ldr	x1, [sp, #104]
   32564:	ldr	x0, [sp, #88]
   32568:	add	x0, x0, #0x2
   3256c:	lsl	x0, x0, #5
   32570:	add	x0, x1, x0
   32574:	mov	w1, w2
   32578:	strb	w1, [x0, #8]
   3257c:	b	325a0 <acc_update_self_async@@OACC_2.5+0x570>
   32580:	ldr	x0, [sp, #88]
   32584:	add	x0, x0, #0x1
   32588:	str	x0, [sp, #88]
   3258c:	ldr	x0, [sp, #104]
   32590:	ldr	x0, [x0, #48]
   32594:	ldr	x1, [sp, #88]
   32598:	cmp	x1, x0
   3259c:	b.cc	32538 <acc_update_self_async@@OACC_2.5+0x508>  // b.lo, b.ul, b.last
   325a0:	ldr	w0, [sp, #24]
   325a4:	cmn	w0, #0x1
   325a8:	b.ge	325bc <acc_update_self_async@@OACC_2.5+0x58c>  // b.tcont
   325ac:	mov	w1, #0x1                   	// #1
   325b0:	ldr	x0, [sp, #104]
   325b4:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   325b8:	b	325d4 <acc_update_self_async@@OACC_2.5+0x5a4>
   325bc:	ldr	x0, [sp, #104]
   325c0:	ldr	x0, [x0, #56]
   325c4:	ldr	x2, [x0, #192]
   325c8:	ldr	w1, [sp, #24]
   325cc:	ldr	x0, [sp, #104]
   325d0:	blr	x2
   325d4:	ldr	x0, [sp, #72]
   325d8:	add	x0, x0, #0xa8
   325dc:	bl	308b0 <acc_on_device@@OACC_2.0+0x1f8>
   325e0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   325e4:	add	x0, x0, #0x630
   325e8:	ldr	w0, [x0]
   325ec:	sxtw	x0, w0
   325f0:	cmp	x0, #0x0
   325f4:	b.eq	32618 <acc_update_self_async@@OACC_2.5+0x5e8>  // b.none
   325f8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   325fc:	add	x2, x0, #0xce0
   32600:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   32604:	add	x1, x0, #0xb30
   32608:	mov	w0, #0x0                   	// #0
   3260c:	bl	cf04 <GOMP_critical_name_end@@GOMP_1.0+0x3d34>
   32610:	b	32618 <acc_update_self_async@@OACC_2.5+0x5e8>
   32614:	nop
   32618:	ldp	x29, x30, [sp], #112
   3261c:	ret
   32620:	mrs	x1, tpidr_el0
   32624:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   32628:	ldr	x0, [x0, #4048]
   3262c:	add	x0, x1, x0
   32630:	ldr	x0, [x0]
   32634:	ret
   32638:	sub	sp, sp, #0x10
   3263c:	str	w0, [sp, #12]
   32640:	ldr	w0, [sp, #12]
   32644:	mvn	w0, w0
   32648:	lsr	w0, w0, #31
   3264c:	and	w0, w0, #0xff
   32650:	add	sp, sp, #0x10
   32654:	ret
   32658:	stp	x29, x30, [sp, #-32]!
   3265c:	mov	x29, sp
   32660:	str	w0, [sp, #28]
   32664:	ldr	w0, [sp, #28]
   32668:	cmn	w0, #0x1
   3266c:	b.eq	32690 <acc_update_self_async@@OACC_2.5+0x660>  // b.none
   32670:	ldr	w0, [sp, #28]
   32674:	cmn	w0, #0x2
   32678:	b.eq	32690 <acc_update_self_async@@OACC_2.5+0x660>  // b.none
   3267c:	ldr	w0, [sp, #28]
   32680:	bl	32638 <acc_update_self_async@@OACC_2.5+0x608>
   32684:	and	w0, w0, #0xff
   32688:	cmp	w0, #0x0
   3268c:	b.eq	32698 <acc_update_self_async@@OACC_2.5+0x668>  // b.none
   32690:	mov	w0, #0x1                   	// #1
   32694:	b	3269c <acc_update_self_async@@OACC_2.5+0x66c>
   32698:	mov	w0, #0x0                   	// #0
   3269c:	and	w0, w0, #0x1
   326a0:	and	w0, w0, #0xff
   326a4:	ldp	x29, x30, [sp], #32
   326a8:	ret

00000000000326ac <acc_async_test@@OACC_2.0>:
   326ac:	stp	x29, x30, [sp, #-48]!
   326b0:	mov	x29, sp
   326b4:	str	w0, [sp, #28]
   326b8:	ldr	w0, [sp, #28]
   326bc:	bl	32658 <acc_update_self_async@@OACC_2.5+0x628>
   326c0:	and	w0, w0, #0xff
   326c4:	eor	w0, w0, #0x1
   326c8:	and	w0, w0, #0xff
   326cc:	cmp	w0, #0x0
   326d0:	b.eq	326e4 <acc_async_test@@OACC_2.0+0x38>  // b.none
   326d4:	ldr	w1, [sp, #28]
   326d8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   326dc:	add	x0, x0, #0xcf8
   326e0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   326e4:	bl	32620 <acc_update_self_async@@OACC_2.5+0x5f0>
   326e8:	str	x0, [sp, #40]
   326ec:	ldr	x0, [sp, #40]
   326f0:	cmp	x0, #0x0
   326f4:	b.eq	32708 <acc_async_test@@OACC_2.0+0x5c>  // b.none
   326f8:	ldr	x0, [sp, #40]
   326fc:	ldr	x0, [x0, #8]
   32700:	cmp	x0, #0x0
   32704:	b.ne	32714 <acc_async_test@@OACC_2.0+0x68>  // b.any
   32708:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   3270c:	add	x0, x0, #0xd18
   32710:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   32714:	ldr	x0, [sp, #40]
   32718:	ldr	x0, [x0, #8]
   3271c:	ldr	x1, [x0, #200]
   32720:	ldr	w0, [sp, #28]
   32724:	blr	x1
   32728:	ldp	x29, x30, [sp], #48
   3272c:	ret

0000000000032730 <acc_async_test_all@@OACC_2.0>:
   32730:	stp	x29, x30, [sp, #-32]!
   32734:	mov	x29, sp
   32738:	bl	32620 <acc_update_self_async@@OACC_2.5+0x5f0>
   3273c:	str	x0, [sp, #24]
   32740:	ldr	x0, [sp, #24]
   32744:	cmp	x0, #0x0
   32748:	b.eq	3275c <acc_async_test_all@@OACC_2.0+0x2c>  // b.none
   3274c:	ldr	x0, [sp, #24]
   32750:	ldr	x0, [x0, #8]
   32754:	cmp	x0, #0x0
   32758:	b.ne	32768 <acc_async_test_all@@OACC_2.0+0x38>  // b.any
   3275c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   32760:	add	x0, x0, #0xd18
   32764:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   32768:	ldr	x0, [sp, #24]
   3276c:	ldr	x0, [x0, #8]
   32770:	ldr	x0, [x0, #208]
   32774:	blr	x0
   32778:	ldp	x29, x30, [sp], #32
   3277c:	ret

0000000000032780 <acc_async_wait@@OACC_2.0.1>:
   32780:	stp	x29, x30, [sp, #-48]!
   32784:	mov	x29, sp
   32788:	str	w0, [sp, #28]
   3278c:	ldr	w0, [sp, #28]
   32790:	bl	32658 <acc_update_self_async@@OACC_2.5+0x628>
   32794:	and	w0, w0, #0xff
   32798:	eor	w0, w0, #0x1
   3279c:	and	w0, w0, #0xff
   327a0:	cmp	w0, #0x0
   327a4:	b.eq	327b8 <acc_async_wait@@OACC_2.0.1+0x38>  // b.none
   327a8:	ldr	w1, [sp, #28]
   327ac:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   327b0:	add	x0, x0, #0xcf8
   327b4:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   327b8:	bl	32620 <acc_update_self_async@@OACC_2.5+0x5f0>
   327bc:	str	x0, [sp, #40]
   327c0:	ldr	x0, [sp, #40]
   327c4:	cmp	x0, #0x0
   327c8:	b.eq	327dc <acc_async_wait@@OACC_2.0.1+0x5c>  // b.none
   327cc:	ldr	x0, [sp, #40]
   327d0:	ldr	x0, [x0, #8]
   327d4:	cmp	x0, #0x0
   327d8:	b.ne	327e8 <acc_async_wait@@OACC_2.0.1+0x68>  // b.any
   327dc:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   327e0:	add	x0, x0, #0xd18
   327e4:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   327e8:	ldr	x0, [sp, #40]
   327ec:	ldr	x0, [x0, #8]
   327f0:	ldr	x1, [x0, #216]
   327f4:	ldr	w0, [sp, #28]
   327f8:	blr	x1
   327fc:	nop
   32800:	ldp	x29, x30, [sp], #48
   32804:	ret

0000000000032808 <acc_wait_async@@OACC_2.0>:
   32808:	stp	x29, x30, [sp, #-48]!
   3280c:	mov	x29, sp
   32810:	str	w0, [sp, #28]
   32814:	str	w1, [sp, #24]
   32818:	bl	32620 <acc_update_self_async@@OACC_2.5+0x5f0>
   3281c:	str	x0, [sp, #40]
   32820:	ldr	x0, [sp, #40]
   32824:	cmp	x0, #0x0
   32828:	b.eq	3283c <acc_wait_async@@OACC_2.0+0x34>  // b.none
   3282c:	ldr	x0, [sp, #40]
   32830:	ldr	x0, [x0, #8]
   32834:	cmp	x0, #0x0
   32838:	b.ne	32848 <acc_wait_async@@OACC_2.0+0x40>  // b.any
   3283c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   32840:	add	x0, x0, #0xd18
   32844:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   32848:	ldr	x0, [sp, #40]
   3284c:	ldr	x0, [x0, #8]
   32850:	ldr	x2, [x0, #224]
   32854:	ldr	w1, [sp, #24]
   32858:	ldr	w0, [sp, #28]
   3285c:	blr	x2
   32860:	nop
   32864:	ldp	x29, x30, [sp], #48
   32868:	ret

000000000003286c <acc_async_wait_all@@OACC_2.0.1>:
   3286c:	stp	x29, x30, [sp, #-32]!
   32870:	mov	x29, sp
   32874:	bl	32620 <acc_update_self_async@@OACC_2.5+0x5f0>
   32878:	str	x0, [sp, #24]
   3287c:	ldr	x0, [sp, #24]
   32880:	cmp	x0, #0x0
   32884:	b.eq	32898 <acc_async_wait_all@@OACC_2.0.1+0x2c>  // b.none
   32888:	ldr	x0, [sp, #24]
   3288c:	ldr	x0, [x0, #8]
   32890:	cmp	x0, #0x0
   32894:	b.ne	328a4 <acc_async_wait_all@@OACC_2.0.1+0x38>  // b.any
   32898:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   3289c:	add	x0, x0, #0xd18
   328a0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   328a4:	ldr	x0, [sp, #24]
   328a8:	ldr	x0, [x0, #8]
   328ac:	ldr	x0, [x0, #232]
   328b0:	blr	x0
   328b4:	nop
   328b8:	ldp	x29, x30, [sp], #32
   328bc:	ret

00000000000328c0 <acc_wait_all_async@@OACC_2.0>:
   328c0:	stp	x29, x30, [sp, #-48]!
   328c4:	mov	x29, sp
   328c8:	str	w0, [sp, #28]
   328cc:	ldr	w0, [sp, #28]
   328d0:	bl	32658 <acc_update_self_async@@OACC_2.5+0x628>
   328d4:	and	w0, w0, #0xff
   328d8:	eor	w0, w0, #0x1
   328dc:	and	w0, w0, #0xff
   328e0:	cmp	w0, #0x0
   328e4:	b.eq	328f8 <acc_wait_all_async@@OACC_2.0+0x38>  // b.none
   328e8:	ldr	w1, [sp, #28]
   328ec:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   328f0:	add	x0, x0, #0xcf8
   328f4:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   328f8:	bl	32620 <acc_update_self_async@@OACC_2.5+0x5f0>
   328fc:	str	x0, [sp, #40]
   32900:	ldr	x0, [sp, #40]
   32904:	cmp	x0, #0x0
   32908:	b.eq	3291c <acc_wait_all_async@@OACC_2.0+0x5c>  // b.none
   3290c:	ldr	x0, [sp, #40]
   32910:	ldr	x0, [x0, #8]
   32914:	cmp	x0, #0x0
   32918:	b.ne	32928 <acc_wait_all_async@@OACC_2.0+0x68>  // b.any
   3291c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   32920:	add	x0, x0, #0xd18
   32924:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   32928:	ldr	x0, [sp, #40]
   3292c:	ldr	x0, [x0, #8]
   32930:	ldr	x1, [x0, #240]
   32934:	ldr	w0, [sp, #28]
   32938:	blr	x1
   3293c:	nop
   32940:	ldp	x29, x30, [sp], #48
   32944:	ret
   32948:	mrs	x1, tpidr_el0
   3294c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   32950:	ldr	x0, [x0, #4048]
   32954:	add	x0, x1, x0
   32958:	ldr	x0, [x0]
   3295c:	ret

0000000000032960 <GOMP_PLUGIN_async_unmap_vars@@GOMP_PLUGIN_1.0>:
   32960:	stp	x29, x30, [sp, #-48]!
   32964:	mov	x29, sp
   32968:	str	x0, [sp, #24]
   3296c:	str	w1, [sp, #20]
   32970:	ldr	x0, [sp, #24]
   32974:	str	x0, [sp, #40]
   32978:	ldr	x0, [sp, #40]
   3297c:	ldr	x0, [x0, #56]
   32980:	str	x0, [sp, #32]
   32984:	ldr	x0, [sp, #32]
   32988:	ldr	x1, [x0, #248]
   3298c:	ldr	w0, [sp, #20]
   32990:	blr	x1
   32994:	mov	w1, #0x1                   	// #1
   32998:	ldr	x0, [sp, #40]
   3299c:	bl	27df8 <omp_get_place_proc_ids@@OMP_4.5+0x341c>
   329a0:	ldr	x0, [sp, #32]
   329a4:	ldr	x1, [x0, #248]
   329a8:	mov	w0, #0xfffffffe            	// #-2
   329ac:	blr	x1
   329b0:	nop
   329b4:	ldp	x29, x30, [sp], #48
   329b8:	ret

00000000000329bc <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0>:
   329bc:	stp	x29, x30, [sp, #-32]!
   329c0:	mov	x29, sp
   329c4:	bl	32948 <acc_wait_all_async@@OACC_2.0+0x88>
   329c8:	str	x0, [sp, #24]
   329cc:	ldr	x0, [sp, #24]
   329d0:	cmp	x0, #0x0
   329d4:	b.eq	329e4 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0+0x28>  // b.none
   329d8:	ldr	x0, [sp, #24]
   329dc:	ldr	x0, [x0, #40]
   329e0:	b	329e8 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0+0x2c>
   329e4:	mov	x0, #0x0                   	// #0
   329e8:	ldp	x29, x30, [sp], #32
   329ec:	ret

00000000000329f0 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2>:
   329f0:	stp	x29, x30, [sp, #-32]!
   329f4:	mov	x29, sp
   329f8:	str	w0, [sp, #28]
   329fc:	ldr	w0, [sp, #28]
   32a00:	cmp	w0, #0x2
   32a04:	b.ls	32a18 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x28>  // b.plast
   32a08:	ldr	w1, [sp, #28]
   32a0c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   32a10:	add	x0, x0, #0xd30
   32a14:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   32a18:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   32a1c:	add	x0, x0, #0x640
   32a20:	ldr	w1, [sp, #28]
   32a24:	ldr	w0, [x0, x1, lsl #2]
   32a28:	ldp	x29, x30, [sp], #32
   32a2c:	ret
   32a30:	mrs	x1, tpidr_el0
   32a34:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   32a38:	ldr	x0, [x0, #4048]
   32a3c:	add	x0, x1, x0
   32a40:	ldr	x0, [x0]
   32a44:	ret
   32a48:	sub	sp, sp, #0x10
   32a4c:	str	w0, [sp, #12]
   32a50:	ldr	w0, [sp, #12]
   32a54:	mvn	w0, w0
   32a58:	lsr	w0, w0, #31
   32a5c:	and	w0, w0, #0xff
   32a60:	add	sp, sp, #0x10
   32a64:	ret
   32a68:	stp	x29, x30, [sp, #-32]!
   32a6c:	mov	x29, sp
   32a70:	str	w0, [sp, #28]
   32a74:	ldr	w0, [sp, #28]
   32a78:	cmn	w0, #0x1
   32a7c:	b.eq	32aa0 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0xb0>  // b.none
   32a80:	ldr	w0, [sp, #28]
   32a84:	cmn	w0, #0x2
   32a88:	b.eq	32aa0 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0xb0>  // b.none
   32a8c:	ldr	w0, [sp, #28]
   32a90:	bl	32a48 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x58>
   32a94:	and	w0, w0, #0xff
   32a98:	cmp	w0, #0x0
   32a9c:	b.eq	32aa8 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0xb8>  // b.none
   32aa0:	mov	w0, #0x1                   	// #1
   32aa4:	b	32aac <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0xbc>
   32aa8:	mov	w0, #0x0                   	// #0
   32aac:	and	w0, w0, #0x1
   32ab0:	and	w0, w0, #0xff
   32ab4:	ldp	x29, x30, [sp], #32
   32ab8:	ret

0000000000032abc <acc_get_current_cuda_device@@OACC_2.0>:
   32abc:	stp	x29, x30, [sp, #-32]!
   32ac0:	mov	x29, sp
   32ac4:	bl	32a30 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x40>
   32ac8:	str	x0, [sp, #24]
   32acc:	ldr	x0, [sp, #24]
   32ad0:	cmp	x0, #0x0
   32ad4:	b.eq	32b10 <acc_get_current_cuda_device@@OACC_2.0+0x54>  // b.none
   32ad8:	ldr	x0, [sp, #24]
   32adc:	ldr	x0, [x0, #8]
   32ae0:	cmp	x0, #0x0
   32ae4:	b.eq	32b10 <acc_get_current_cuda_device@@OACC_2.0+0x54>  // b.none
   32ae8:	ldr	x0, [sp, #24]
   32aec:	ldr	x0, [x0, #8]
   32af0:	ldr	x0, [x0, #272]
   32af4:	cmp	x0, #0x0
   32af8:	b.eq	32b10 <acc_get_current_cuda_device@@OACC_2.0+0x54>  // b.none
   32afc:	ldr	x0, [sp, #24]
   32b00:	ldr	x0, [x0, #8]
   32b04:	ldr	x0, [x0, #272]
   32b08:	blr	x0
   32b0c:	b	32b14 <acc_get_current_cuda_device@@OACC_2.0+0x58>
   32b10:	mov	x0, #0x0                   	// #0
   32b14:	ldp	x29, x30, [sp], #32
   32b18:	ret

0000000000032b1c <acc_get_current_cuda_context@@OACC_2.0>:
   32b1c:	stp	x29, x30, [sp, #-32]!
   32b20:	mov	x29, sp
   32b24:	bl	32a30 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x40>
   32b28:	str	x0, [sp, #24]
   32b2c:	ldr	x0, [sp, #24]
   32b30:	cmp	x0, #0x0
   32b34:	b.eq	32b70 <acc_get_current_cuda_context@@OACC_2.0+0x54>  // b.none
   32b38:	ldr	x0, [sp, #24]
   32b3c:	ldr	x0, [x0, #8]
   32b40:	cmp	x0, #0x0
   32b44:	b.eq	32b70 <acc_get_current_cuda_context@@OACC_2.0+0x54>  // b.none
   32b48:	ldr	x0, [sp, #24]
   32b4c:	ldr	x0, [x0, #8]
   32b50:	ldr	x0, [x0, #280]
   32b54:	cmp	x0, #0x0
   32b58:	b.eq	32b70 <acc_get_current_cuda_context@@OACC_2.0+0x54>  // b.none
   32b5c:	ldr	x0, [sp, #24]
   32b60:	ldr	x0, [x0, #8]
   32b64:	ldr	x0, [x0, #280]
   32b68:	blr	x0
   32b6c:	b	32b74 <acc_get_current_cuda_context@@OACC_2.0+0x58>
   32b70:	mov	x0, #0x0                   	// #0
   32b74:	ldp	x29, x30, [sp], #32
   32b78:	ret

0000000000032b7c <acc_get_cuda_stream@@OACC_2.0>:
   32b7c:	stp	x29, x30, [sp, #-48]!
   32b80:	mov	x29, sp
   32b84:	str	w0, [sp, #28]
   32b88:	bl	32a30 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x40>
   32b8c:	str	x0, [sp, #40]
   32b90:	ldr	w0, [sp, #28]
   32b94:	bl	32a68 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x78>
   32b98:	and	w0, w0, #0xff
   32b9c:	eor	w0, w0, #0x1
   32ba0:	and	w0, w0, #0xff
   32ba4:	cmp	w0, #0x0
   32ba8:	b.eq	32bb4 <acc_get_cuda_stream@@OACC_2.0+0x38>  // b.none
   32bac:	mov	x0, #0x0                   	// #0
   32bb0:	b	32c00 <acc_get_cuda_stream@@OACC_2.0+0x84>
   32bb4:	ldr	x0, [sp, #40]
   32bb8:	cmp	x0, #0x0
   32bbc:	b.eq	32bfc <acc_get_cuda_stream@@OACC_2.0+0x80>  // b.none
   32bc0:	ldr	x0, [sp, #40]
   32bc4:	ldr	x0, [x0, #8]
   32bc8:	cmp	x0, #0x0
   32bcc:	b.eq	32bfc <acc_get_cuda_stream@@OACC_2.0+0x80>  // b.none
   32bd0:	ldr	x0, [sp, #40]
   32bd4:	ldr	x0, [x0, #8]
   32bd8:	ldr	x0, [x0, #288]
   32bdc:	cmp	x0, #0x0
   32be0:	b.eq	32bfc <acc_get_cuda_stream@@OACC_2.0+0x80>  // b.none
   32be4:	ldr	x0, [sp, #40]
   32be8:	ldr	x0, [x0, #8]
   32bec:	ldr	x1, [x0, #288]
   32bf0:	ldr	w0, [sp, #28]
   32bf4:	blr	x1
   32bf8:	b	32c00 <acc_get_cuda_stream@@OACC_2.0+0x84>
   32bfc:	mov	x0, #0x0                   	// #0
   32c00:	ldp	x29, x30, [sp], #48
   32c04:	ret

0000000000032c08 <acc_set_cuda_stream@@OACC_2.0>:
   32c08:	stp	x29, x30, [sp, #-48]!
   32c0c:	mov	x29, sp
   32c10:	str	w0, [sp, #28]
   32c14:	str	x1, [sp, #16]
   32c18:	ldr	w0, [sp, #28]
   32c1c:	bl	32a68 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x78>
   32c20:	and	w0, w0, #0xff
   32c24:	eor	w0, w0, #0x1
   32c28:	and	w0, w0, #0xff
   32c2c:	cmp	w0, #0x0
   32c30:	b.ne	32c40 <acc_set_cuda_stream@@OACC_2.0+0x38>  // b.any
   32c34:	ldr	x0, [sp, #16]
   32c38:	cmp	x0, #0x0
   32c3c:	b.ne	32c48 <acc_set_cuda_stream@@OACC_2.0+0x40>  // b.any
   32c40:	mov	w0, #0x0                   	// #0
   32c44:	b	32ca4 <acc_set_cuda_stream@@OACC_2.0+0x9c>
   32c48:	bl	307d8 <acc_on_device@@OACC_2.0+0x120>
   32c4c:	bl	32a30 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x40>
   32c50:	str	x0, [sp, #40]
   32c54:	ldr	x0, [sp, #40]
   32c58:	cmp	x0, #0x0
   32c5c:	b.eq	32ca0 <acc_set_cuda_stream@@OACC_2.0+0x98>  // b.none
   32c60:	ldr	x0, [sp, #40]
   32c64:	ldr	x0, [x0, #8]
   32c68:	cmp	x0, #0x0
   32c6c:	b.eq	32ca0 <acc_set_cuda_stream@@OACC_2.0+0x98>  // b.none
   32c70:	ldr	x0, [sp, #40]
   32c74:	ldr	x0, [x0, #8]
   32c78:	ldr	x0, [x0, #296]
   32c7c:	cmp	x0, #0x0
   32c80:	b.eq	32ca0 <acc_set_cuda_stream@@OACC_2.0+0x98>  // b.none
   32c84:	ldr	x0, [sp, #40]
   32c88:	ldr	x0, [x0, #8]
   32c8c:	ldr	x2, [x0, #296]
   32c90:	ldr	x1, [sp, #16]
   32c94:	ldr	w0, [sp, #28]
   32c98:	blr	x2
   32c9c:	b	32ca4 <acc_set_cuda_stream@@OACC_2.0+0x9c>
   32ca0:	mov	w0, #0xffffffff            	// #-1
   32ca4:	ldp	x29, x30, [sp], #48
   32ca8:	ret
   32cac:	stp	x29, x30, [sp, #-64]!
   32cb0:	mov	x29, sp
   32cb4:	str	x0, [sp, #24]
   32cb8:	str	w1, [sp, #20]
   32cbc:	ldr	x0, [sp, #24]
   32cc0:	ldr	x0, [x0]
   32cc4:	cmp	x0, #0x0
   32cc8:	b.ne	32cd4 <acc_set_cuda_stream@@OACC_2.0+0xcc>  // b.any
   32ccc:	mov	x0, #0x0                   	// #0
   32cd0:	b	32cec <acc_set_cuda_stream@@OACC_2.0+0xe4>
   32cd4:	ldr	w0, [sp, #20]
   32cd8:	str	w0, [sp, #40]
   32cdc:	ldr	x0, [sp, #24]
   32ce0:	add	x1, sp, #0x28
   32ce4:	bl	335ac <acc_set_cuda_stream@@OACC_2.0+0x9a4>
   32ce8:	nop
   32cec:	ldp	x29, x30, [sp], #64
   32cf0:	ret
   32cf4:	sub	sp, sp, #0x30
   32cf8:	str	x0, [sp, #24]
   32cfc:	str	x1, [sp, #16]
   32d00:	str	w2, [sp, #12]
   32d04:	strb	wzr, [sp, #47]
   32d08:	ldr	x0, [sp, #16]
   32d0c:	ldr	x0, [x0, #8]
   32d10:	ldr	x1, [sp, #16]
   32d14:	ldr	x1, [x1]
   32d18:	str	x1, [x0]
   32d1c:	ldr	x0, [sp, #16]
   32d20:	ldr	x0, [x0]
   32d24:	ldr	x1, [sp, #16]
   32d28:	ldr	x1, [x1, #8]
   32d2c:	str	x1, [x0, #8]
   32d30:	ldr	x0, [sp, #24]
   32d34:	ldr	x0, [x0, #8]
   32d38:	ldr	x1, [sp, #16]
   32d3c:	cmp	x1, x0
   32d40:	b.ne	32d9c <acc_set_cuda_stream@@OACC_2.0+0x194>  // b.any
   32d44:	ldr	x0, [sp, #16]
   32d48:	ldr	x0, [x0]
   32d4c:	ldr	x1, [sp, #16]
   32d50:	cmp	x1, x0
   32d54:	b.eq	32d6c <acc_set_cuda_stream@@OACC_2.0+0x164>  // b.none
   32d58:	ldr	x0, [sp, #16]
   32d5c:	ldr	x1, [x0]
   32d60:	ldr	x0, [sp, #24]
   32d64:	str	x1, [x0, #8]
   32d68:	b	32da0 <acc_set_cuda_stream@@OACC_2.0+0x198>
   32d6c:	ldr	w0, [sp, #12]
   32d70:	cmp	w0, #0x3
   32d74:	b.ne	32d88 <acc_set_cuda_stream@@OACC_2.0+0x180>  // b.any
   32d78:	ldr	x0, [sp, #24]
   32d7c:	add	x0, x0, #0x8
   32d80:	stlr	xzr, [x0]
   32d84:	b	32d90 <acc_set_cuda_stream@@OACC_2.0+0x188>
   32d88:	ldr	x0, [sp, #24]
   32d8c:	str	xzr, [x0, #8]
   32d90:	mov	w0, #0x1                   	// #1
   32d94:	strb	w0, [sp, #47]
   32d98:	b	32da0 <acc_set_cuda_stream@@OACC_2.0+0x198>
   32d9c:	nop
   32da0:	ldrb	w0, [sp, #47]
   32da4:	add	sp, sp, #0x30
   32da8:	ret
   32dac:	sub	sp, sp, #0x10
   32db0:	str	w0, [sp, #12]
   32db4:	ldr	w0, [sp, #12]
   32db8:	sxtw	x0, w0
   32dbc:	add	x0, x0, #0x6
   32dc0:	lsl	x0, x0, #4
   32dc4:	add	sp, sp, #0x10
   32dc8:	ret
   32dcc:	stp	x29, x30, [sp, #-32]!
   32dd0:	mov	x29, sp
   32dd4:	str	w0, [sp, #28]
   32dd8:	str	x1, [sp, #16]
   32ddc:	ldr	w0, [sp, #28]
   32de0:	bl	32dac <acc_set_cuda_stream@@OACC_2.0+0x1a4>
   32de4:	neg	x0, x0
   32de8:	ldr	x1, [sp, #16]
   32dec:	add	x0, x1, x0
   32df0:	ldp	x29, x30, [sp], #32
   32df4:	ret
   32df8:	stp	x29, x30, [sp, #-64]!
   32dfc:	mov	x29, sp
   32e00:	str	w0, [sp, #44]
   32e04:	str	x1, [sp, #32]
   32e08:	str	x2, [sp, #24]
   32e0c:	ldr	x1, [sp, #24]
   32e10:	ldr	w0, [sp, #44]
   32e14:	bl	32dcc <acc_set_cuda_stream@@OACC_2.0+0x1c4>
   32e18:	ldr	w0, [x0, #88]
   32e1c:	str	w0, [sp, #60]
   32e20:	ldr	w1, [sp, #60]
   32e24:	ldr	x0, [sp, #32]
   32e28:	bl	32cac <acc_set_cuda_stream@@OACC_2.0+0xa4>
   32e2c:	str	x0, [sp, #48]
   32e30:	mov	w2, #0x0                   	// #0
   32e34:	ldr	x1, [sp, #24]
   32e38:	ldr	x0, [sp, #48]
   32e3c:	bl	32cf4 <acc_set_cuda_stream@@OACC_2.0+0xec>
   32e40:	and	w0, w0, #0xff
   32e44:	cmp	w0, #0x0
   32e48:	b.eq	32e68 <acc_set_cuda_stream@@OACC_2.0+0x260>  // b.none
   32e4c:	ldr	x0, [sp, #32]
   32e50:	ldr	x1, [sp, #48]
   32e54:	bl	334dc <acc_set_cuda_stream@@OACC_2.0+0x8d4>
   32e58:	ldr	x0, [sp, #48]
   32e5c:	str	xzr, [x0, #8]
   32e60:	ldr	x0, [sp, #48]
   32e64:	bl	8a20 <free@plt>
   32e68:	nop
   32e6c:	ldp	x29, x30, [sp], #64
   32e70:	ret
   32e74:	stp	x29, x30, [sp, #-48]!
   32e78:	mov	x29, sp
   32e7c:	str	w0, [sp, #28]
   32e80:	str	x1, [sp, #16]
   32e84:	ldr	x0, [sp, #16]
   32e88:	cmp	x0, #0x0
   32e8c:	b.ne	32e98 <acc_set_cuda_stream@@OACC_2.0+0x290>  // b.any
   32e90:	mov	x0, #0x0                   	// #0
   32e94:	b	32f04 <acc_set_cuda_stream@@OACC_2.0+0x2fc>
   32e98:	ldr	x0, [sp, #16]
   32e9c:	ldr	x0, [x0, #32]
   32ea0:	mov	x1, x0
   32ea4:	ldr	w0, [sp, #28]
   32ea8:	bl	32e74 <acc_set_cuda_stream@@OACC_2.0+0x26c>
   32eac:	str	x0, [sp, #40]
   32eb0:	ldr	x0, [sp, #40]
   32eb4:	cmp	x0, #0x0
   32eb8:	b.eq	32ec4 <acc_set_cuda_stream@@OACC_2.0+0x2bc>  // b.none
   32ebc:	ldr	x0, [sp, #40]
   32ec0:	b	32f04 <acc_set_cuda_stream@@OACC_2.0+0x2fc>
   32ec4:	ldr	x0, [sp, #16]
   32ec8:	ldr	x0, [x0, #8]
   32ecc:	mov	x1, x0
   32ed0:	ldr	w0, [sp, #28]
   32ed4:	bl	32dcc <acc_set_cuda_stream@@OACC_2.0+0x1c4>
   32ed8:	str	x0, [sp, #40]
   32edc:	ldr	x0, [sp, #40]
   32ee0:	ldr	w0, [x0, #200]
   32ee4:	cmp	w0, #0x2
   32ee8:	b.ne	32ef4 <acc_set_cuda_stream@@OACC_2.0+0x2ec>  // b.any
   32eec:	ldr	x0, [sp, #40]
   32ef0:	b	32f04 <acc_set_cuda_stream@@OACC_2.0+0x2fc>
   32ef4:	ldr	x0, [sp, #16]
   32ef8:	ldr	x0, [x0, #24]
   32efc:	str	x0, [sp, #16]
   32f00:	b	32e84 <acc_set_cuda_stream@@OACC_2.0+0x27c>
   32f04:	ldp	x29, x30, [sp], #48
   32f08:	ret
   32f0c:	stp	x29, x30, [sp, #-64]!
   32f10:	mov	x29, sp
   32f14:	str	w0, [sp, #44]
   32f18:	str	x1, [sp, #32]
   32f1c:	str	w2, [sp, #40]
   32f20:	str	x3, [sp, #24]
   32f24:	str	x4, [sp, #16]
   32f28:	ldr	x0, [sp, #32]
   32f2c:	ldr	x0, [x0]
   32f30:	mov	x1, x0
   32f34:	ldr	w0, [sp, #44]
   32f38:	bl	32e74 <acc_set_cuda_stream@@OACC_2.0+0x26c>
   32f3c:	str	x0, [sp, #56]
   32f40:	ldr	x0, [sp, #56]
   32f44:	cmp	x0, #0x0
   32f48:	b.eq	32f58 <acc_set_cuda_stream@@OACC_2.0+0x350>  // b.none
   32f4c:	ldr	x0, [sp, #24]
   32f50:	cmp	x0, #0x0
   32f54:	b.ne	32f6c <acc_set_cuda_stream@@OACC_2.0+0x364>  // b.any
   32f58:	ldr	x0, [sp, #16]
   32f5c:	mov	w1, #0x1                   	// #1
   32f60:	strb	w1, [x0]
   32f64:	ldr	x0, [sp, #56]
   32f68:	b	3302c <acc_set_cuda_stream@@OACC_2.0+0x424>
   32f6c:	ldr	x0, [sp, #24]
   32f70:	ldr	x0, [x0]
   32f74:	mov	x1, x0
   32f78:	ldr	w0, [sp, #40]
   32f7c:	bl	32e74 <acc_set_cuda_stream@@OACC_2.0+0x26c>
   32f80:	str	x0, [sp, #48]
   32f84:	ldr	x0, [sp, #48]
   32f88:	cmp	x0, #0x0
   32f8c:	b.eq	32fa8 <acc_set_cuda_stream@@OACC_2.0+0x3a0>  // b.none
   32f90:	ldr	x0, [sp, #56]
   32f94:	ldr	w1, [x0, #88]
   32f98:	ldr	x0, [sp, #48]
   32f9c:	ldr	w0, [x0, #88]
   32fa0:	cmp	w1, w0
   32fa4:	b.le	32fbc <acc_set_cuda_stream@@OACC_2.0+0x3b4>
   32fa8:	ldr	x0, [sp, #16]
   32fac:	mov	w1, #0x1                   	// #1
   32fb0:	strb	w1, [x0]
   32fb4:	ldr	x0, [sp, #56]
   32fb8:	b	3302c <acc_set_cuda_stream@@OACC_2.0+0x424>
   32fbc:	ldr	x0, [sp, #48]
   32fc0:	ldr	w1, [x0, #88]
   32fc4:	ldr	x0, [sp, #56]
   32fc8:	ldr	w0, [x0, #88]
   32fcc:	cmp	w1, w0
   32fd0:	b.le	32fe4 <acc_set_cuda_stream@@OACC_2.0+0x3dc>
   32fd4:	ldr	x0, [sp, #16]
   32fd8:	strb	wzr, [x0]
   32fdc:	ldr	x0, [sp, #48]
   32fe0:	b	3302c <acc_set_cuda_stream@@OACC_2.0+0x424>
   32fe4:	ldr	x0, [sp, #48]
   32fe8:	ldrb	w0, [x0, #207]
   32fec:	cmp	w0, #0x0
   32ff0:	b.eq	3301c <acc_set_cuda_stream@@OACC_2.0+0x414>  // b.none
   32ff4:	ldr	x0, [sp, #56]
   32ff8:	ldrb	w0, [x0, #207]
   32ffc:	eor	w0, w0, #0x1
   33000:	and	w0, w0, #0xff
   33004:	cmp	w0, #0x0
   33008:	b.eq	3301c <acc_set_cuda_stream@@OACC_2.0+0x414>  // b.none
   3300c:	ldr	x0, [sp, #16]
   33010:	strb	wzr, [x0]
   33014:	ldr	x0, [sp, #48]
   33018:	b	3302c <acc_set_cuda_stream@@OACC_2.0+0x424>
   3301c:	ldr	x0, [sp, #16]
   33020:	mov	w1, #0x1                   	// #1
   33024:	strb	w1, [x0]
   33028:	ldr	x0, [sp, #56]
   3302c:	ldp	x29, x30, [sp], #64
   33030:	ret
   33034:	sub	sp, sp, #0x10
   33038:	str	x0, [sp, #8]
   3303c:	str	x1, [sp]
   33040:	ldr	x0, [sp, #8]
   33044:	ldr	w1, [x0]
   33048:	ldr	x0, [sp]
   3304c:	ldr	w0, [x0]
   33050:	cmp	w1, w0
   33054:	b.ne	33060 <acc_set_cuda_stream@@OACC_2.0+0x458>  // b.any
   33058:	mov	w0, #0x0                   	// #0
   3305c:	b	33084 <acc_set_cuda_stream@@OACC_2.0+0x47c>
   33060:	ldr	x0, [sp, #8]
   33064:	ldr	w1, [x0]
   33068:	ldr	x0, [sp]
   3306c:	ldr	w0, [x0]
   33070:	cmp	w1, w0
   33074:	b.ge	33080 <acc_set_cuda_stream@@OACC_2.0+0x478>  // b.tcont
   33078:	mov	w0, #0xffffffff            	// #-1
   3307c:	b	33084 <acc_set_cuda_stream@@OACC_2.0+0x47c>
   33080:	mov	w0, #0x1                   	// #1
   33084:	add	sp, sp, #0x10
   33088:	ret
   3308c:	sub	sp, sp, #0x30
   33090:	str	x0, [sp, #24]
   33094:	str	x1, [sp, #16]
   33098:	str	x2, [sp, #8]
   3309c:	ldr	x0, [sp, #8]
   330a0:	ldr	x0, [x0, #32]
   330a4:	str	x0, [sp, #40]
   330a8:	ldr	x0, [sp, #8]
   330ac:	ldr	x1, [sp, #16]
   330b0:	str	x1, [x0, #32]
   330b4:	ldr	x0, [sp, #16]
   330b8:	ldr	x1, [sp, #40]
   330bc:	str	x1, [x0, #24]
   330c0:	ldr	x0, [sp, #24]
   330c4:	ldr	x1, [sp, #8]
   330c8:	str	x1, [x0]
   330cc:	nop
   330d0:	add	sp, sp, #0x30
   330d4:	ret
   330d8:	sub	sp, sp, #0x30
   330dc:	str	x0, [sp, #24]
   330e0:	str	x1, [sp, #16]
   330e4:	str	x2, [sp, #8]
   330e8:	ldr	x0, [sp, #8]
   330ec:	ldr	x0, [x0, #24]
   330f0:	str	x0, [sp, #40]
   330f4:	ldr	x0, [sp, #8]
   330f8:	ldr	x1, [sp, #16]
   330fc:	str	x1, [x0, #24]
   33100:	ldr	x0, [sp, #16]
   33104:	ldr	x1, [sp, #40]
   33108:	str	x1, [x0, #32]
   3310c:	ldr	x0, [sp, #24]
   33110:	ldr	x1, [sp, #8]
   33114:	str	x1, [x0]
   33118:	nop
   3311c:	add	sp, sp, #0x30
   33120:	ret
   33124:	stp	x29, x30, [sp, #-64]!
   33128:	mov	x29, sp
   3312c:	str	x0, [sp, #24]
   33130:	str	x1, [sp, #16]
   33134:	ldr	x0, [sp, #24]
   33138:	ldr	x0, [x0]
   3313c:	cmp	x0, #0x0
   33140:	b.eq	33390 <acc_set_cuda_stream@@OACC_2.0+0x788>  // b.none
   33144:	ldr	x0, [sp, #24]
   33148:	ldr	x0, [x0]
   3314c:	str	x0, [sp, #48]
   33150:	ldr	x0, [sp, #48]
   33154:	mov	x1, x0
   33158:	ldr	x0, [sp, #16]
   3315c:	bl	33034 <acc_set_cuda_stream@@OACC_2.0+0x42c>
   33160:	str	w0, [sp, #44]
   33164:	ldr	w0, [sp, #44]
   33168:	cmp	w0, #0x0
   3316c:	b.eq	33398 <acc_set_cuda_stream@@OACC_2.0+0x790>  // b.none
   33170:	ldr	w0, [sp, #44]
   33174:	cmp	w0, #0x0
   33178:	b.ge	3318c <acc_set_cuda_stream@@OACC_2.0+0x584>  // b.tcont
   3317c:	ldr	x0, [sp, #48]
   33180:	ldr	x0, [x0, #24]
   33184:	str	x0, [sp, #56]
   33188:	b	33198 <acc_set_cuda_stream@@OACC_2.0+0x590>
   3318c:	ldr	x0, [sp, #48]
   33190:	ldr	x0, [x0, #32]
   33194:	str	x0, [sp, #56]
   33198:	ldr	x0, [sp, #56]
   3319c:	cmp	x0, #0x0
   331a0:	b.eq	333a0 <acc_set_cuda_stream@@OACC_2.0+0x798>  // b.none
   331a4:	ldr	x0, [sp, #56]
   331a8:	mov	x1, x0
   331ac:	ldr	x0, [sp, #16]
   331b0:	bl	33034 <acc_set_cuda_stream@@OACC_2.0+0x42c>
   331b4:	str	w0, [sp, #40]
   331b8:	ldr	w0, [sp, #40]
   331bc:	cmp	w0, #0x0
   331c0:	b.eq	331fc <acc_set_cuda_stream@@OACC_2.0+0x5f4>  // b.none
   331c4:	ldr	w0, [sp, #40]
   331c8:	cmp	w0, #0x0
   331cc:	b.ge	331e0 <acc_set_cuda_stream@@OACC_2.0+0x5d8>  // b.tcont
   331d0:	ldr	x0, [sp, #56]
   331d4:	ldr	x0, [x0, #24]
   331d8:	cmp	x0, #0x0
   331dc:	b.eq	331fc <acc_set_cuda_stream@@OACC_2.0+0x5f4>  // b.none
   331e0:	ldr	w0, [sp, #40]
   331e4:	cmp	w0, #0x0
   331e8:	b.le	33230 <acc_set_cuda_stream@@OACC_2.0+0x628>
   331ec:	ldr	x0, [sp, #56]
   331f0:	ldr	x0, [x0, #32]
   331f4:	cmp	x0, #0x0
   331f8:	b.ne	33230 <acc_set_cuda_stream@@OACC_2.0+0x628>  // b.any
   331fc:	ldr	w0, [sp, #44]
   33200:	cmp	w0, #0x0
   33204:	b.ge	3321c <acc_set_cuda_stream@@OACC_2.0+0x614>  // b.tcont
   33208:	ldr	x0, [sp, #24]
   3320c:	ldr	x2, [sp, #56]
   33210:	ldr	x1, [sp, #48]
   33214:	bl	3308c <acc_set_cuda_stream@@OACC_2.0+0x484>
   33218:	b	333a4 <acc_set_cuda_stream@@OACC_2.0+0x79c>
   3321c:	ldr	x0, [sp, #24]
   33220:	ldr	x2, [sp, #56]
   33224:	ldr	x1, [sp, #48]
   33228:	bl	330d8 <acc_set_cuda_stream@@OACC_2.0+0x4d0>
   3322c:	b	333a4 <acc_set_cuda_stream@@OACC_2.0+0x79c>
   33230:	ldr	w0, [sp, #44]
   33234:	cmp	w0, #0x0
   33238:	b.ge	33288 <acc_set_cuda_stream@@OACC_2.0+0x680>  // b.tcont
   3323c:	ldr	w0, [sp, #40]
   33240:	cmp	w0, #0x0
   33244:	b.ge	33288 <acc_set_cuda_stream@@OACC_2.0+0x680>  // b.tcont
   33248:	ldr	x0, [sp, #48]
   3324c:	add	x3, x0, #0x18
   33250:	ldr	x0, [sp, #56]
   33254:	ldr	x0, [x0, #24]
   33258:	mov	x2, x0
   3325c:	ldr	x1, [sp, #56]
   33260:	mov	x0, x3
   33264:	bl	3308c <acc_set_cuda_stream@@OACC_2.0+0x484>
   33268:	ldr	x3, [sp, #24]
   3326c:	ldr	x0, [sp, #48]
   33270:	ldr	x0, [x0, #24]
   33274:	mov	x2, x0
   33278:	ldr	x1, [sp, #48]
   3327c:	mov	x0, x3
   33280:	bl	3308c <acc_set_cuda_stream@@OACC_2.0+0x484>
   33284:	b	3338c <acc_set_cuda_stream@@OACC_2.0+0x784>
   33288:	ldr	w0, [sp, #44]
   3328c:	cmp	w0, #0x0
   33290:	b.le	332e0 <acc_set_cuda_stream@@OACC_2.0+0x6d8>
   33294:	ldr	w0, [sp, #40]
   33298:	cmp	w0, #0x0
   3329c:	b.le	332e0 <acc_set_cuda_stream@@OACC_2.0+0x6d8>
   332a0:	ldr	x0, [sp, #48]
   332a4:	add	x3, x0, #0x20
   332a8:	ldr	x0, [sp, #56]
   332ac:	ldr	x0, [x0, #32]
   332b0:	mov	x2, x0
   332b4:	ldr	x1, [sp, #56]
   332b8:	mov	x0, x3
   332bc:	bl	330d8 <acc_set_cuda_stream@@OACC_2.0+0x4d0>
   332c0:	ldr	x3, [sp, #24]
   332c4:	ldr	x0, [sp, #48]
   332c8:	ldr	x0, [x0, #32]
   332cc:	mov	x2, x0
   332d0:	ldr	x1, [sp, #48]
   332d4:	mov	x0, x3
   332d8:	bl	330d8 <acc_set_cuda_stream@@OACC_2.0+0x4d0>
   332dc:	b	3338c <acc_set_cuda_stream@@OACC_2.0+0x784>
   332e0:	ldr	w0, [sp, #44]
   332e4:	cmp	w0, #0x0
   332e8:	b.ge	33338 <acc_set_cuda_stream@@OACC_2.0+0x730>  // b.tcont
   332ec:	ldr	w0, [sp, #40]
   332f0:	cmp	w0, #0x0
   332f4:	b.le	33338 <acc_set_cuda_stream@@OACC_2.0+0x730>
   332f8:	ldr	x0, [sp, #48]
   332fc:	add	x3, x0, #0x18
   33300:	ldr	x0, [sp, #56]
   33304:	ldr	x0, [x0, #32]
   33308:	mov	x2, x0
   3330c:	ldr	x1, [sp, #56]
   33310:	mov	x0, x3
   33314:	bl	330d8 <acc_set_cuda_stream@@OACC_2.0+0x4d0>
   33318:	ldr	x3, [sp, #24]
   3331c:	ldr	x0, [sp, #48]
   33320:	ldr	x0, [x0, #24]
   33324:	mov	x2, x0
   33328:	ldr	x1, [sp, #48]
   3332c:	mov	x0, x3
   33330:	bl	3308c <acc_set_cuda_stream@@OACC_2.0+0x484>
   33334:	b	3338c <acc_set_cuda_stream@@OACC_2.0+0x784>
   33338:	ldr	w0, [sp, #44]
   3333c:	cmp	w0, #0x0
   33340:	b.le	33144 <acc_set_cuda_stream@@OACC_2.0+0x53c>
   33344:	ldr	w0, [sp, #40]
   33348:	cmp	w0, #0x0
   3334c:	b.ge	33144 <acc_set_cuda_stream@@OACC_2.0+0x53c>  // b.tcont
   33350:	ldr	x0, [sp, #48]
   33354:	add	x3, x0, #0x20
   33358:	ldr	x0, [sp, #56]
   3335c:	ldr	x0, [x0, #24]
   33360:	mov	x2, x0
   33364:	ldr	x1, [sp, #56]
   33368:	mov	x0, x3
   3336c:	bl	3308c <acc_set_cuda_stream@@OACC_2.0+0x484>
   33370:	ldr	x3, [sp, #24]
   33374:	ldr	x0, [sp, #48]
   33378:	ldr	x0, [x0, #32]
   3337c:	mov	x2, x0
   33380:	ldr	x1, [sp, #48]
   33384:	mov	x0, x3
   33388:	bl	330d8 <acc_set_cuda_stream@@OACC_2.0+0x4d0>
   3338c:	b	33144 <acc_set_cuda_stream@@OACC_2.0+0x53c>
   33390:	nop
   33394:	b	333a4 <acc_set_cuda_stream@@OACC_2.0+0x79c>
   33398:	nop
   3339c:	b	333a4 <acc_set_cuda_stream@@OACC_2.0+0x79c>
   333a0:	nop
   333a4:	ldp	x29, x30, [sp], #64
   333a8:	ret
   333ac:	stp	x29, x30, [sp, #-48]!
   333b0:	mov	x29, sp
   333b4:	str	x0, [sp, #24]
   333b8:	str	x1, [sp, #16]
   333bc:	str	wzr, [sp, #44]
   333c0:	ldr	x0, [sp, #16]
   333c4:	mov	x1, x0
   333c8:	ldr	x0, [sp, #24]
   333cc:	bl	33124 <acc_set_cuda_stream@@OACC_2.0+0x51c>
   333d0:	ldr	x0, [sp, #24]
   333d4:	ldr	x0, [x0]
   333d8:	cmp	x0, #0x0
   333dc:	b.eq	33400 <acc_set_cuda_stream@@OACC_2.0+0x7f8>  // b.none
   333e0:	ldr	x0, [sp, #24]
   333e4:	ldr	x0, [x0]
   333e8:	mov	x2, x0
   333ec:	ldr	x0, [sp, #16]
   333f0:	mov	x1, x0
   333f4:	mov	x0, x2
   333f8:	bl	33034 <acc_set_cuda_stream@@OACC_2.0+0x42c>
   333fc:	str	w0, [sp, #44]
   33400:	ldr	x0, [sp, #24]
   33404:	ldr	x0, [x0]
   33408:	cmp	x0, #0x0
   3340c:	b.eq	33428 <acc_set_cuda_stream@@OACC_2.0+0x820>  // b.none
   33410:	ldr	w0, [sp, #44]
   33414:	cmp	w0, #0x0
   33418:	b.ne	33428 <acc_set_cuda_stream@@OACC_2.0+0x820>  // b.any
   3341c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   33420:	add	x0, x0, #0xd50
   33424:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   33428:	ldr	x0, [sp, #24]
   3342c:	ldr	x0, [x0]
   33430:	cmp	x0, #0x0
   33434:	b.ne	33454 <acc_set_cuda_stream@@OACC_2.0+0x84c>  // b.any
   33438:	ldr	x0, [sp, #16]
   3343c:	str	xzr, [x0, #32]
   33440:	ldr	x0, [sp, #16]
   33444:	ldr	x1, [x0, #32]
   33448:	ldr	x0, [sp, #16]
   3344c:	str	x1, [x0, #24]
   33450:	b	334c4 <acc_set_cuda_stream@@OACC_2.0+0x8bc>
   33454:	ldr	w0, [sp, #44]
   33458:	cmp	w0, #0x0
   3345c:	b.ge	33494 <acc_set_cuda_stream@@OACC_2.0+0x88c>  // b.tcont
   33460:	ldr	x0, [sp, #24]
   33464:	ldr	x1, [x0]
   33468:	ldr	x0, [sp, #16]
   3346c:	str	x1, [x0, #24]
   33470:	ldr	x0, [sp, #16]
   33474:	ldr	x0, [x0, #24]
   33478:	ldr	x1, [x0, #32]
   3347c:	ldr	x0, [sp, #16]
   33480:	str	x1, [x0, #32]
   33484:	ldr	x0, [sp, #16]
   33488:	ldr	x0, [x0, #24]
   3348c:	str	xzr, [x0, #32]
   33490:	b	334c4 <acc_set_cuda_stream@@OACC_2.0+0x8bc>
   33494:	ldr	x0, [sp, #24]
   33498:	ldr	x1, [x0]
   3349c:	ldr	x0, [sp, #16]
   334a0:	str	x1, [x0, #32]
   334a4:	ldr	x0, [sp, #16]
   334a8:	ldr	x0, [x0, #32]
   334ac:	ldr	x1, [x0, #24]
   334b0:	ldr	x0, [sp, #16]
   334b4:	str	x1, [x0, #24]
   334b8:	ldr	x0, [sp, #16]
   334bc:	ldr	x0, [x0, #32]
   334c0:	str	xzr, [x0, #24]
   334c4:	ldr	x0, [sp, #24]
   334c8:	ldr	x1, [sp, #16]
   334cc:	str	x1, [x0]
   334d0:	nop
   334d4:	ldp	x29, x30, [sp], #48
   334d8:	ret
   334dc:	stp	x29, x30, [sp, #-48]!
   334e0:	mov	x29, sp
   334e4:	str	x0, [sp, #24]
   334e8:	str	x1, [sp, #16]
   334ec:	ldr	x1, [sp, #16]
   334f0:	ldr	x0, [sp, #24]
   334f4:	bl	33124 <acc_set_cuda_stream@@OACC_2.0+0x51c>
   334f8:	ldr	x0, [sp, #24]
   334fc:	ldr	x0, [x0]
   33500:	cmp	x0, #0x0
   33504:	b.eq	335a0 <acc_set_cuda_stream@@OACC_2.0+0x998>  // b.none
   33508:	ldr	x0, [sp, #24]
   3350c:	ldr	x0, [x0]
   33510:	ldr	x1, [sp, #16]
   33514:	bl	33034 <acc_set_cuda_stream@@OACC_2.0+0x42c>
   33518:	cmp	w0, #0x0
   3351c:	b.ne	335a0 <acc_set_cuda_stream@@OACC_2.0+0x998>  // b.any
   33520:	ldr	x0, [sp, #24]
   33524:	ldr	x0, [x0]
   33528:	ldr	x0, [x0, #24]
   3352c:	str	x0, [sp, #40]
   33530:	ldr	x0, [sp, #24]
   33534:	ldr	x0, [x0]
   33538:	ldr	x0, [x0, #32]
   3353c:	str	x0, [sp, #32]
   33540:	ldr	x0, [sp, #40]
   33544:	cmp	x0, #0x0
   33548:	b.eq	33594 <acc_set_cuda_stream@@OACC_2.0+0x98c>  // b.none
   3354c:	ldr	x0, [sp, #24]
   33550:	ldr	x1, [sp, #40]
   33554:	str	x1, [x0]
   33558:	ldr	x0, [sp, #32]
   3355c:	cmp	x0, #0x0
   33560:	b.eq	335a0 <acc_set_cuda_stream@@OACC_2.0+0x998>  // b.none
   33564:	b	33574 <acc_set_cuda_stream@@OACC_2.0+0x96c>
   33568:	ldr	x0, [sp, #40]
   3356c:	ldr	x0, [x0, #32]
   33570:	str	x0, [sp, #40]
   33574:	ldr	x0, [sp, #40]
   33578:	ldr	x0, [x0, #32]
   3357c:	cmp	x0, #0x0
   33580:	b.ne	33568 <acc_set_cuda_stream@@OACC_2.0+0x960>  // b.any
   33584:	ldr	x0, [sp, #40]
   33588:	ldr	x1, [sp, #32]
   3358c:	str	x1, [x0, #32]
   33590:	b	335a0 <acc_set_cuda_stream@@OACC_2.0+0x998>
   33594:	ldr	x0, [sp, #24]
   33598:	ldr	x1, [sp, #32]
   3359c:	str	x1, [x0]
   335a0:	nop
   335a4:	ldp	x29, x30, [sp], #48
   335a8:	ret
   335ac:	stp	x29, x30, [sp, #-32]!
   335b0:	mov	x29, sp
   335b4:	str	x0, [sp, #24]
   335b8:	str	x1, [sp, #16]
   335bc:	ldr	x1, [sp, #16]
   335c0:	ldr	x0, [sp, #24]
   335c4:	bl	33124 <acc_set_cuda_stream@@OACC_2.0+0x51c>
   335c8:	ldr	x0, [sp, #24]
   335cc:	ldr	x0, [x0]
   335d0:	cmp	x0, #0x0
   335d4:	b.eq	335fc <acc_set_cuda_stream@@OACC_2.0+0x9f4>  // b.none
   335d8:	ldr	x0, [sp, #24]
   335dc:	ldr	x0, [x0]
   335e0:	ldr	x1, [sp, #16]
   335e4:	bl	33034 <acc_set_cuda_stream@@OACC_2.0+0x42c>
   335e8:	cmp	w0, #0x0
   335ec:	b.ne	335fc <acc_set_cuda_stream@@OACC_2.0+0x9f4>  // b.any
   335f0:	ldr	x0, [sp, #24]
   335f4:	ldr	x0, [x0]
   335f8:	b	33600 <acc_set_cuda_stream@@OACC_2.0+0x9f8>
   335fc:	mov	x0, #0x0                   	// #0
   33600:	ldp	x29, x30, [sp], #32
   33604:	ret
   33608:	stp	x29, x30, [sp, #-48]!
   3360c:	mov	x29, sp
   33610:	str	x0, [sp, #40]
   33614:	str	x1, [sp, #32]
   33618:	str	x2, [sp, #24]
   3361c:	ldr	x0, [sp, #40]
   33620:	cmp	x0, #0x0
   33624:	b.eq	33664 <acc_set_cuda_stream@@OACC_2.0+0xa5c>  // b.none
   33628:	ldr	x0, [sp, #40]
   3362c:	ldr	x2, [sp, #32]
   33630:	ldr	x1, [sp, #24]
   33634:	blr	x2
   33638:	ldr	x0, [sp, #40]
   3363c:	ldr	x0, [x0, #24]
   33640:	ldr	x2, [sp, #24]
   33644:	ldr	x1, [sp, #32]
   33648:	bl	33608 <acc_set_cuda_stream@@OACC_2.0+0xa00>
   3364c:	ldr	x0, [sp, #40]
   33650:	ldr	x0, [x0, #32]
   33654:	ldr	x2, [sp, #24]
   33658:	ldr	x1, [sp, #32]
   3365c:	bl	33608 <acc_set_cuda_stream@@OACC_2.0+0xa00>
   33660:	b	33668 <acc_set_cuda_stream@@OACC_2.0+0xa60>
   33664:	nop
   33668:	ldp	x29, x30, [sp], #48
   3366c:	ret
   33670:	stp	x29, x30, [sp, #-48]!
   33674:	mov	x29, sp
   33678:	str	x0, [sp, #40]
   3367c:	str	x1, [sp, #32]
   33680:	str	x2, [sp, #24]
   33684:	ldr	x0, [sp, #40]
   33688:	ldr	x0, [x0]
   3368c:	ldr	x2, [sp, #24]
   33690:	ldr	x1, [sp, #32]
   33694:	bl	33608 <acc_set_cuda_stream@@OACC_2.0+0xa00>
   33698:	nop
   3369c:	ldp	x29, x30, [sp], #48
   336a0:	ret
   336a4:	mrs	x1, tpidr_el0
   336a8:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   336ac:	ldr	x0, [x0, #4016]
   336b0:	add	x0, x1, x0
   336b4:	ret
   336b8:	stp	x29, x30, [sp, #-16]!
   336bc:	mov	x29, sp
   336c0:	bl	8bb0 <pthread_self@plt>
   336c4:	ldp	x29, x30, [sp], #16
   336c8:	ret
   336cc:	stp	x29, x30, [sp, #-32]!
   336d0:	mov	x29, sp
   336d4:	str	x0, [sp, #24]
   336d8:	str	x1, [sp, #16]
   336dc:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   336e0:	ldr	x0, [x0, #4040]
   336e4:	ldr	x0, [x0]
   336e8:	mov	x3, x0
   336ec:	ldr	x2, [sp, #16]
   336f0:	mov	x1, #0x1                   	// #1
   336f4:	ldr	x0, [sp, #24]
   336f8:	bl	8af0 <fwrite@plt>
   336fc:	nop
   33700:	ldp	x29, x30, [sp], #32
   33704:	ret
   33708:	stp	x29, x30, [sp, #-48]!
   3370c:	mov	x29, sp
   33710:	str	x0, [sp, #24]
   33714:	str	x1, [sp, #16]
   33718:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3371c:	add	x0, x0, #0x668
   33720:	ldr	x0, [x0]
   33724:	ldr	x1, [sp, #16]
   33728:	cmp	x1, x0
   3372c:	b.cs	3374c <acc_set_cuda_stream@@OACC_2.0+0xb44>  // b.hs, b.nlast
   33730:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   33734:	add	x0, x0, #0x358
   33738:	ldr	x0, [x0]
   3373c:	ldr	x2, [sp, #16]
   33740:	ldr	x1, [sp, #24]
   33744:	bl	86a0 <memcpy@plt>
   33748:	b	337cc <acc_set_cuda_stream@@OACC_2.0+0xbc4>
   3374c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   33750:	add	x0, x0, #0x668
   33754:	ldr	x0, [x0]
   33758:	cmp	x0, #0x0
   3375c:	b.eq	33788 <acc_set_cuda_stream@@OACC_2.0+0xb80>  // b.none
   33760:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   33764:	add	x0, x0, #0x358
   33768:	ldr	x2, [x0]
   3376c:	ldr	x0, [sp, #16]
   33770:	add	x0, x0, #0x1
   33774:	mov	x1, x0
   33778:	mov	x0, x2
   3377c:	bl	8e54 <fprintf@plt+0x224>
   33780:	str	x0, [sp, #40]
   33784:	b	33798 <acc_set_cuda_stream@@OACC_2.0+0xb90>
   33788:	ldr	x0, [sp, #16]
   3378c:	add	x0, x0, #0x1
   33790:	bl	8dd0 <fprintf@plt+0x1a0>
   33794:	str	x0, [sp, #40]
   33798:	ldr	x2, [sp, #16]
   3379c:	ldr	x1, [sp, #24]
   337a0:	ldr	x0, [sp, #40]
   337a4:	bl	86a0 <memcpy@plt>
   337a8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   337ac:	add	x0, x0, #0x358
   337b0:	ldr	x1, [sp, #40]
   337b4:	str	x1, [x0]
   337b8:	ldr	x0, [sp, #16]
   337bc:	add	x1, x0, #0x1
   337c0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   337c4:	add	x0, x0, #0x668
   337c8:	str	x1, [x0]
   337cc:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   337d0:	add	x0, x0, #0x358
   337d4:	ldr	x1, [x0]
   337d8:	ldr	x0, [sp, #16]
   337dc:	add	x0, x1, x0
   337e0:	strb	wzr, [x0]
   337e4:	nop
   337e8:	ldp	x29, x30, [sp], #48
   337ec:	ret

00000000000337f0 <omp_set_affinity_format@@OMP_5.0>:
   337f0:	stp	x29, x30, [sp, #-32]!
   337f4:	mov	x29, sp
   337f8:	str	x0, [sp, #24]
   337fc:	ldr	x0, [sp, #24]
   33800:	bl	86d0 <strlen@plt>
   33804:	mov	x1, x0
   33808:	ldr	x0, [sp, #24]
   3380c:	bl	33708 <acc_set_cuda_stream@@OACC_2.0+0xb00>
   33810:	nop
   33814:	ldp	x29, x30, [sp], #32
   33818:	ret

000000000003381c <omp_get_affinity_format@@OMP_5.0>:
   3381c:	stp	x29, x30, [sp, #-48]!
   33820:	mov	x29, sp
   33824:	str	x0, [sp, #24]
   33828:	str	x1, [sp, #16]
   3382c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   33830:	add	x0, x0, #0x358
   33834:	ldr	x0, [x0]
   33838:	bl	86d0 <strlen@plt>
   3383c:	str	x0, [sp, #40]
   33840:	ldr	x0, [sp, #16]
   33844:	cmp	x0, #0x0
   33848:	b.eq	338b4 <omp_get_affinity_format@@OMP_5.0+0x98>  // b.none
   3384c:	ldr	x1, [sp, #40]
   33850:	ldr	x0, [sp, #16]
   33854:	cmp	x1, x0
   33858:	b.cs	33880 <omp_get_affinity_format@@OMP_5.0+0x64>  // b.hs, b.nlast
   3385c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   33860:	add	x0, x0, #0x358
   33864:	ldr	x1, [x0]
   33868:	ldr	x0, [sp, #40]
   3386c:	add	x0, x0, #0x1
   33870:	mov	x2, x0
   33874:	ldr	x0, [sp, #24]
   33878:	bl	86a0 <memcpy@plt>
   3387c:	b	338b4 <omp_get_affinity_format@@OMP_5.0+0x98>
   33880:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   33884:	add	x0, x0, #0x358
   33888:	ldr	x1, [x0]
   3388c:	ldr	x0, [sp, #16]
   33890:	sub	x0, x0, #0x1
   33894:	mov	x2, x0
   33898:	ldr	x0, [sp, #24]
   3389c:	bl	86a0 <memcpy@plt>
   338a0:	ldr	x0, [sp, #16]
   338a4:	sub	x0, x0, #0x1
   338a8:	ldr	x1, [sp, #24]
   338ac:	add	x0, x1, x0
   338b0:	strb	wzr, [x0]
   338b4:	ldr	x0, [sp, #40]
   338b8:	ldp	x29, x30, [sp], #48
   338bc:	ret
   338c0:	stp	x29, x30, [sp, #-80]!
   338c4:	mov	x29, sp
   338c8:	str	x0, [sp, #56]
   338cc:	str	x1, [sp, #48]
   338d0:	str	x2, [sp, #40]
   338d4:	str	x3, [sp, #32]
   338d8:	str	x4, [sp, #24]
   338dc:	ldr	x0, [sp, #40]
   338e0:	ldr	x0, [x0]
   338e4:	str	x0, [sp, #64]
   338e8:	ldr	x0, [sp, #48]
   338ec:	cmp	x0, #0x0
   338f0:	b.eq	3394c <omp_get_affinity_format@@OMP_5.0+0x130>  // b.none
   338f4:	ldr	x1, [sp, #64]
   338f8:	ldr	x0, [sp, #48]
   338fc:	cmp	x1, x0
   33900:	b.cs	3394c <omp_get_affinity_format@@OMP_5.0+0x130>  // b.hs, b.nlast
   33904:	ldr	x0, [sp, #24]
   33908:	str	x0, [sp, #72]
   3390c:	ldr	x1, [sp, #48]
   33910:	ldr	x0, [sp, #64]
   33914:	sub	x0, x1, x0
   33918:	ldr	x1, [sp, #24]
   3391c:	cmp	x1, x0
   33920:	b.ls	33934 <omp_get_affinity_format@@OMP_5.0+0x118>  // b.plast
   33924:	ldr	x1, [sp, #48]
   33928:	ldr	x0, [sp, #64]
   3392c:	sub	x0, x1, x0
   33930:	str	x0, [sp, #72]
   33934:	ldr	x1, [sp, #56]
   33938:	ldr	x0, [sp, #64]
   3393c:	add	x0, x1, x0
   33940:	ldr	x2, [sp, #72]
   33944:	ldr	x1, [sp, #32]
   33948:	bl	86a0 <memcpy@plt>
   3394c:	ldr	x0, [sp, #40]
   33950:	ldr	x1, [x0]
   33954:	ldr	x0, [sp, #24]
   33958:	add	x1, x1, x0
   3395c:	ldr	x0, [sp, #40]
   33960:	str	x1, [x0]
   33964:	ldr	x0, [sp, #40]
   33968:	ldr	x0, [x0]
   3396c:	ldr	x1, [sp, #64]
   33970:	cmp	x1, x0
   33974:	cset	w0, hi  // hi = pmore
   33978:	and	w0, w0, #0xff
   3397c:	and	x0, x0, #0xff
   33980:	cmp	x0, #0x0
   33984:	b.eq	33994 <omp_get_affinity_format@@OMP_5.0+0x178>  // b.none
   33988:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   3398c:	add	x0, x0, #0xd60
   33990:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   33994:	nop
   33998:	ldp	x29, x30, [sp], #80
   3399c:	ret
   339a0:	stp	x29, x30, [sp, #-80]!
   339a4:	mov	x29, sp
   339a8:	str	x0, [sp, #56]
   339ac:	str	x1, [sp, #48]
   339b0:	str	x2, [sp, #40]
   339b4:	strb	w3, [sp, #39]
   339b8:	str	x4, [sp, #24]
   339bc:	ldr	x0, [sp, #40]
   339c0:	ldr	x0, [x0]
   339c4:	str	x0, [sp, #64]
   339c8:	ldr	x0, [sp, #48]
   339cc:	cmp	x0, #0x0
   339d0:	b.eq	33a2c <omp_get_affinity_format@@OMP_5.0+0x210>  // b.none
   339d4:	ldr	x1, [sp, #64]
   339d8:	ldr	x0, [sp, #48]
   339dc:	cmp	x1, x0
   339e0:	b.cs	33a2c <omp_get_affinity_format@@OMP_5.0+0x210>  // b.hs, b.nlast
   339e4:	ldr	x0, [sp, #24]
   339e8:	str	x0, [sp, #72]
   339ec:	ldr	x1, [sp, #48]
   339f0:	ldr	x0, [sp, #64]
   339f4:	sub	x0, x1, x0
   339f8:	ldr	x1, [sp, #24]
   339fc:	cmp	x1, x0
   33a00:	b.ls	33a14 <omp_get_affinity_format@@OMP_5.0+0x1f8>  // b.plast
   33a04:	ldr	x1, [sp, #48]
   33a08:	ldr	x0, [sp, #64]
   33a0c:	sub	x0, x1, x0
   33a10:	str	x0, [sp, #72]
   33a14:	ldr	x1, [sp, #56]
   33a18:	ldr	x0, [sp, #64]
   33a1c:	add	x0, x1, x0
   33a20:	ldrb	w1, [sp, #39]
   33a24:	ldr	x2, [sp, #72]
   33a28:	bl	88d0 <memset@plt>
   33a2c:	ldr	x0, [sp, #40]
   33a30:	ldr	x1, [x0]
   33a34:	ldr	x0, [sp, #24]
   33a38:	add	x1, x1, x0
   33a3c:	ldr	x0, [sp, #40]
   33a40:	str	x1, [x0]
   33a44:	ldr	x0, [sp, #40]
   33a48:	ldr	x0, [x0]
   33a4c:	ldr	x1, [sp, #64]
   33a50:	cmp	x1, x0
   33a54:	cset	w0, hi  // hi = pmore
   33a58:	and	w0, w0, #0xff
   33a5c:	and	x0, x0, #0xff
   33a60:	cmp	x0, #0x0
   33a64:	b.eq	33a74 <omp_get_affinity_format@@OMP_5.0+0x258>  // b.none
   33a68:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   33a6c:	add	x0, x0, #0xd60
   33a70:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   33a74:	nop
   33a78:	ldp	x29, x30, [sp], #80
   33a7c:	ret
   33a80:	stp	x29, x30, [sp, #-80]!
   33a84:	mov	x29, sp
   33a88:	str	x0, [sp, #56]
   33a8c:	str	x1, [sp, #48]
   33a90:	str	x2, [sp, #40]
   33a94:	strb	w3, [sp, #39]
   33a98:	strb	w4, [sp, #38]
   33a9c:	str	x5, [sp, #24]
   33aa0:	str	x6, [sp, #16]
   33aa4:	ldr	x0, [sp, #16]
   33aa8:	bl	86d0 <strlen@plt>
   33aac:	str	x0, [sp, #72]
   33ab0:	ldr	x0, [sp, #24]
   33ab4:	cmn	x0, #0x1
   33ab8:	b.eq	33acc <omp_get_affinity_format@@OMP_5.0+0x2b0>  // b.none
   33abc:	ldr	x1, [sp, #72]
   33ac0:	ldr	x0, [sp, #24]
   33ac4:	cmp	x1, x0
   33ac8:	b.cc	33ae8 <omp_get_affinity_format@@OMP_5.0+0x2cc>  // b.lo, b.ul, b.last
   33acc:	ldr	x4, [sp, #72]
   33ad0:	ldr	x3, [sp, #16]
   33ad4:	ldr	x2, [sp, #40]
   33ad8:	ldr	x1, [sp, #48]
   33adc:	ldr	x0, [sp, #56]
   33ae0:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33ae4:	b	33cb0 <omp_get_affinity_format@@OMP_5.0+0x494>
   33ae8:	ldrb	w0, [sp, #39]
   33aec:	cmp	w0, #0x0
   33af0:	b.eq	33c28 <omp_get_affinity_format@@OMP_5.0+0x40c>  // b.none
   33af4:	ldr	x0, [sp, #16]
   33af8:	ldrb	w0, [x0]
   33afc:	cmp	w0, #0x2d
   33b00:	b.ne	33b20 <omp_get_affinity_format@@OMP_5.0+0x304>  // b.any
   33b04:	mov	x4, #0x1                   	// #1
   33b08:	ldr	x3, [sp, #16]
   33b0c:	ldr	x2, [sp, #40]
   33b10:	ldr	x1, [sp, #48]
   33b14:	ldr	x0, [sp, #56]
   33b18:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33b1c:	b	33b5c <omp_get_affinity_format@@OMP_5.0+0x340>
   33b20:	ldr	x0, [sp, #16]
   33b24:	ldrb	w0, [x0]
   33b28:	cmp	w0, #0x30
   33b2c:	b.ne	33b5c <omp_get_affinity_format@@OMP_5.0+0x340>  // b.any
   33b30:	ldr	x0, [sp, #16]
   33b34:	add	x0, x0, #0x1
   33b38:	ldrb	w0, [x0]
   33b3c:	cmp	w0, #0x78
   33b40:	b.ne	33b5c <omp_get_affinity_format@@OMP_5.0+0x340>  // b.any
   33b44:	mov	x4, #0x2                   	// #2
   33b48:	ldr	x3, [sp, #16]
   33b4c:	ldr	x2, [sp, #40]
   33b50:	ldr	x1, [sp, #48]
   33b54:	ldr	x0, [sp, #56]
   33b58:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33b5c:	ldr	x1, [sp, #24]
   33b60:	ldr	x0, [sp, #72]
   33b64:	sub	x0, x1, x0
   33b68:	mov	x4, x0
   33b6c:	mov	w3, #0x30                  	// #48
   33b70:	ldr	x2, [sp, #40]
   33b74:	ldr	x1, [sp, #48]
   33b78:	ldr	x0, [sp, #56]
   33b7c:	bl	339a0 <omp_get_affinity_format@@OMP_5.0+0x184>
   33b80:	ldr	x0, [sp, #16]
   33b84:	ldrb	w0, [x0]
   33b88:	cmp	w0, #0x2d
   33b8c:	b.ne	33bbc <omp_get_affinity_format@@OMP_5.0+0x3a0>  // b.any
   33b90:	ldr	x0, [sp, #16]
   33b94:	add	x1, x0, #0x1
   33b98:	ldr	x0, [sp, #72]
   33b9c:	sub	x0, x0, #0x1
   33ba0:	mov	x4, x0
   33ba4:	mov	x3, x1
   33ba8:	ldr	x2, [sp, #40]
   33bac:	ldr	x1, [sp, #48]
   33bb0:	ldr	x0, [sp, #56]
   33bb4:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33bb8:	b	33cb0 <omp_get_affinity_format@@OMP_5.0+0x494>
   33bbc:	ldr	x0, [sp, #16]
   33bc0:	ldrb	w0, [x0]
   33bc4:	cmp	w0, #0x30
   33bc8:	b.ne	33c0c <omp_get_affinity_format@@OMP_5.0+0x3f0>  // b.any
   33bcc:	ldr	x0, [sp, #16]
   33bd0:	add	x0, x0, #0x1
   33bd4:	ldrb	w0, [x0]
   33bd8:	cmp	w0, #0x78
   33bdc:	b.ne	33c0c <omp_get_affinity_format@@OMP_5.0+0x3f0>  // b.any
   33be0:	ldr	x0, [sp, #16]
   33be4:	add	x1, x0, #0x2
   33be8:	ldr	x0, [sp, #72]
   33bec:	sub	x0, x0, #0x2
   33bf0:	mov	x4, x0
   33bf4:	mov	x3, x1
   33bf8:	ldr	x2, [sp, #40]
   33bfc:	ldr	x1, [sp, #48]
   33c00:	ldr	x0, [sp, #56]
   33c04:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33c08:	b	33cb0 <omp_get_affinity_format@@OMP_5.0+0x494>
   33c0c:	ldr	x4, [sp, #72]
   33c10:	ldr	x3, [sp, #16]
   33c14:	ldr	x2, [sp, #40]
   33c18:	ldr	x1, [sp, #48]
   33c1c:	ldr	x0, [sp, #56]
   33c20:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33c24:	b	33cb0 <omp_get_affinity_format@@OMP_5.0+0x494>
   33c28:	ldrb	w0, [sp, #38]
   33c2c:	cmp	w0, #0x0
   33c30:	b.eq	33c74 <omp_get_affinity_format@@OMP_5.0+0x458>  // b.none
   33c34:	ldr	x1, [sp, #24]
   33c38:	ldr	x0, [sp, #72]
   33c3c:	sub	x0, x1, x0
   33c40:	mov	x4, x0
   33c44:	mov	w3, #0x20                  	// #32
   33c48:	ldr	x2, [sp, #40]
   33c4c:	ldr	x1, [sp, #48]
   33c50:	ldr	x0, [sp, #56]
   33c54:	bl	339a0 <omp_get_affinity_format@@OMP_5.0+0x184>
   33c58:	ldr	x4, [sp, #72]
   33c5c:	ldr	x3, [sp, #16]
   33c60:	ldr	x2, [sp, #40]
   33c64:	ldr	x1, [sp, #48]
   33c68:	ldr	x0, [sp, #56]
   33c6c:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33c70:	b	33cb0 <omp_get_affinity_format@@OMP_5.0+0x494>
   33c74:	ldr	x4, [sp, #72]
   33c78:	ldr	x3, [sp, #16]
   33c7c:	ldr	x2, [sp, #40]
   33c80:	ldr	x1, [sp, #48]
   33c84:	ldr	x0, [sp, #56]
   33c88:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33c8c:	ldr	x1, [sp, #24]
   33c90:	ldr	x0, [sp, #72]
   33c94:	sub	x0, x1, x0
   33c98:	mov	x4, x0
   33c9c:	mov	w3, #0x20                  	// #32
   33ca0:	ldr	x2, [sp, #40]
   33ca4:	ldr	x1, [sp, #48]
   33ca8:	ldr	x0, [sp, #56]
   33cac:	bl	339a0 <omp_get_affinity_format@@OMP_5.0+0x184>
   33cb0:	ldp	x29, x30, [sp], #80
   33cb4:	ret
   33cb8:	stp	x29, x30, [sp, #-80]!
   33cbc:	mov	x29, sp
   33cc0:	str	x0, [sp, #56]
   33cc4:	str	x1, [sp, #48]
   33cc8:	str	x2, [sp, #40]
   33ccc:	strb	w3, [sp, #39]
   33cd0:	strb	w4, [sp, #38]
   33cd4:	str	x5, [sp, #24]
   33cd8:	str	w6, [sp, #32]
   33cdc:	add	x3, sp, #0x40
   33ce0:	ldr	w2, [sp, #32]
   33ce4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   33ce8:	add	x1, x0, #0xd88
   33cec:	mov	x0, x3
   33cf0:	bl	8750 <sprintf@plt>
   33cf4:	add	x0, sp, #0x40
   33cf8:	mov	x6, x0
   33cfc:	ldr	x5, [sp, #24]
   33d00:	ldrb	w4, [sp, #38]
   33d04:	ldrb	w3, [sp, #39]
   33d08:	ldr	x2, [sp, #40]
   33d0c:	ldr	x1, [sp, #48]
   33d10:	ldr	x0, [sp, #56]
   33d14:	bl	33a80 <omp_get_affinity_format@@OMP_5.0+0x264>
   33d18:	nop
   33d1c:	ldp	x29, x30, [sp], #80
   33d20:	ret
   33d24:	stp	x29, x30, [sp, #-80]!
   33d28:	mov	x29, sp
   33d2c:	str	x0, [sp, #72]
   33d30:	str	x1, [sp, #64]
   33d34:	str	x2, [sp, #56]
   33d38:	strb	w3, [sp, #55]
   33d3c:	str	x4, [sp, #40]
   33d40:	str	x5, [sp, #32]
   33d44:	str	x6, [sp, #24]
   33d48:	ldr	x0, [sp, #40]
   33d4c:	cmn	x0, #0x1
   33d50:	b.eq	33d64 <omp_get_affinity_format@@OMP_5.0+0x548>  // b.none
   33d54:	ldr	x1, [sp, #24]
   33d58:	ldr	x0, [sp, #40]
   33d5c:	cmp	x1, x0
   33d60:	b.cc	33d80 <omp_get_affinity_format@@OMP_5.0+0x564>  // b.lo, b.ul, b.last
   33d64:	ldr	x4, [sp, #24]
   33d68:	ldr	x3, [sp, #32]
   33d6c:	ldr	x2, [sp, #56]
   33d70:	ldr	x1, [sp, #64]
   33d74:	ldr	x0, [sp, #72]
   33d78:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33d7c:	b	33e08 <omp_get_affinity_format@@OMP_5.0+0x5ec>
   33d80:	ldrb	w0, [sp, #55]
   33d84:	cmp	w0, #0x0
   33d88:	b.eq	33dcc <omp_get_affinity_format@@OMP_5.0+0x5b0>  // b.none
   33d8c:	ldr	x1, [sp, #40]
   33d90:	ldr	x0, [sp, #24]
   33d94:	sub	x0, x1, x0
   33d98:	mov	x4, x0
   33d9c:	mov	w3, #0x20                  	// #32
   33da0:	ldr	x2, [sp, #56]
   33da4:	ldr	x1, [sp, #64]
   33da8:	ldr	x0, [sp, #72]
   33dac:	bl	339a0 <omp_get_affinity_format@@OMP_5.0+0x184>
   33db0:	ldr	x4, [sp, #24]
   33db4:	ldr	x3, [sp, #32]
   33db8:	ldr	x2, [sp, #56]
   33dbc:	ldr	x1, [sp, #64]
   33dc0:	ldr	x0, [sp, #72]
   33dc4:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33dc8:	b	33e08 <omp_get_affinity_format@@OMP_5.0+0x5ec>
   33dcc:	ldr	x4, [sp, #24]
   33dd0:	ldr	x3, [sp, #32]
   33dd4:	ldr	x2, [sp, #56]
   33dd8:	ldr	x1, [sp, #64]
   33ddc:	ldr	x0, [sp, #72]
   33de0:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   33de4:	ldr	x1, [sp, #40]
   33de8:	ldr	x0, [sp, #24]
   33dec:	sub	x0, x1, x0
   33df0:	mov	x4, x0
   33df4:	mov	w3, #0x20                  	// #32
   33df8:	ldr	x2, [sp, #56]
   33dfc:	ldr	x1, [sp, #64]
   33e00:	ldr	x0, [sp, #72]
   33e04:	bl	339a0 <omp_get_affinity_format@@OMP_5.0+0x184>
   33e08:	ldp	x29, x30, [sp], #80
   33e0c:	ret
   33e10:	stp	x29, x30, [sp, #-352]!
   33e14:	mov	x29, sp
   33e18:	str	x0, [sp, #56]
   33e1c:	str	x1, [sp, #48]
   33e20:	str	x2, [sp, #40]
   33e24:	strb	w3, [sp, #39]
   33e28:	str	x4, [sp, #24]
   33e2c:	add	x0, sp, #0x48
   33e30:	str	x0, [sp, #344]
   33e34:	mov	x0, #0x100                 	// #256
   33e38:	str	x0, [sp, #336]
   33e3c:	ldr	x0, [sp, #336]
   33e40:	sub	x0, x0, #0x1
   33e44:	ldr	x1, [sp, #344]
   33e48:	add	x0, x1, x0
   33e4c:	strb	wzr, [x0]
   33e50:	ldr	x0, [sp, #336]
   33e54:	sub	x0, x0, #0x1
   33e58:	mov	x1, x0
   33e5c:	ldr	x0, [sp, #344]
   33e60:	bl	8b60 <gethostname@plt>
   33e64:	cmp	w0, #0x0
   33e68:	b.ne	33ec8 <omp_get_affinity_format@@OMP_5.0+0x6ac>  // b.any
   33e6c:	ldr	x0, [sp, #344]
   33e70:	bl	86d0 <strlen@plt>
   33e74:	str	x0, [sp, #328]
   33e78:	ldr	x0, [sp, #336]
   33e7c:	sub	x0, x0, #0x1
   33e80:	ldr	x1, [sp, #328]
   33e84:	cmp	x1, x0
   33e88:	b.cs	33ec8 <omp_get_affinity_format@@OMP_5.0+0x6ac>  // b.hs, b.nlast
   33e8c:	ldr	x6, [sp, #328]
   33e90:	ldr	x5, [sp, #344]
   33e94:	ldr	x4, [sp, #24]
   33e98:	ldrb	w3, [sp, #39]
   33e9c:	ldr	x2, [sp, #40]
   33ea0:	ldr	x1, [sp, #48]
   33ea4:	ldr	x0, [sp, #56]
   33ea8:	bl	33d24 <omp_get_affinity_format@@OMP_5.0+0x508>
   33eac:	add	x0, sp, #0x48
   33eb0:	ldr	x1, [sp, #344]
   33eb4:	cmp	x1, x0
   33eb8:	b.eq	33f54 <omp_get_affinity_format@@OMP_5.0+0x738>  // b.none
   33ebc:	ldr	x0, [sp, #344]
   33ec0:	bl	8a20 <free@plt>
   33ec4:	b	33f58 <omp_get_affinity_format@@OMP_5.0+0x73c>
   33ec8:	ldr	x0, [sp, #336]
   33ecc:	cmp	x0, #0x100, lsl #12
   33ed0:	b.eq	33f10 <omp_get_affinity_format@@OMP_5.0+0x6f4>  // b.none
   33ed4:	ldr	x0, [sp, #336]
   33ed8:	lsl	x0, x0, #1
   33edc:	str	x0, [sp, #336]
   33ee0:	ldr	x0, [sp, #336]
   33ee4:	cmp	x0, #0x200
   33ee8:	b.ne	33efc <omp_get_affinity_format@@OMP_5.0+0x6e0>  // b.any
   33eec:	ldr	x0, [sp, #336]
   33ef0:	bl	8dd0 <fprintf@plt+0x1a0>
   33ef4:	str	x0, [sp, #344]
   33ef8:	b	33e3c <omp_get_affinity_format@@OMP_5.0+0x620>
   33efc:	ldr	x1, [sp, #336]
   33f00:	ldr	x0, [sp, #344]
   33f04:	bl	8e54 <fprintf@plt+0x224>
   33f08:	str	x0, [sp, #344]
   33f0c:	b	33e3c <omp_get_affinity_format@@OMP_5.0+0x620>
   33f10:	nop
   33f14:	add	x0, sp, #0x48
   33f18:	ldr	x1, [sp, #344]
   33f1c:	cmp	x1, x0
   33f20:	b.eq	33f2c <omp_get_affinity_format@@OMP_5.0+0x710>  // b.none
   33f24:	ldr	x0, [sp, #344]
   33f28:	bl	8a20 <free@plt>
   33f2c:	mov	x6, #0x4                   	// #4
   33f30:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   33f34:	add	x5, x0, #0xd90
   33f38:	ldr	x4, [sp, #24]
   33f3c:	ldrb	w3, [sp, #39]
   33f40:	ldr	x2, [sp, #40]
   33f44:	ldr	x1, [sp, #48]
   33f48:	ldr	x0, [sp, #56]
   33f4c:	bl	33d24 <omp_get_affinity_format@@OMP_5.0+0x508>
   33f50:	b	33f58 <omp_get_affinity_format@@OMP_5.0+0x73c>
   33f54:	nop
   33f58:	ldp	x29, x30, [sp], #352
   33f5c:	ret
   33f60:	stp	x29, x30, [sp, #-208]!
   33f64:	mov	x29, sp
   33f68:	str	x0, [sp, #56]
   33f6c:	str	x1, [sp, #48]
   33f70:	str	x2, [sp, #40]
   33f74:	str	x3, [sp, #32]
   33f78:	str	x4, [sp, #24]
   33f7c:	str	w5, [sp, #20]
   33f80:	str	xzr, [sp, #144]
   33f84:	mov	w1, #0x25                  	// #37
   33f88:	ldr	x0, [sp, #40]
   33f8c:	bl	8ac0 <strchr@plt>
   33f90:	str	x0, [sp, #200]
   33f94:	strb	wzr, [sp, #199]
   33f98:	strb	wzr, [sp, #198]
   33f9c:	mov	x0, #0xffffffffffffffff    	// #-1
   33fa0:	str	x0, [sp, #184]
   33fa4:	ldr	x0, [sp, #200]
   33fa8:	cmp	x0, #0x0
   33fac:	b.ne	33fc8 <omp_get_affinity_format@@OMP_5.0+0x7ac>  // b.any
   33fb0:	ldr	x0, [sp, #40]
   33fb4:	bl	86d0 <strlen@plt>
   33fb8:	mov	x1, x0
   33fbc:	ldr	x0, [sp, #40]
   33fc0:	add	x0, x0, x1
   33fc4:	str	x0, [sp, #200]
   33fc8:	ldr	x1, [sp, #200]
   33fcc:	ldr	x0, [sp, #40]
   33fd0:	cmp	x1, x0
   33fd4:	b.eq	34004 <omp_get_affinity_format@@OMP_5.0+0x7e8>  // b.none
   33fd8:	ldr	x1, [sp, #200]
   33fdc:	ldr	x0, [sp, #40]
   33fe0:	sub	x0, x1, x0
   33fe4:	mov	x1, x0
   33fe8:	add	x0, sp, #0x90
   33fec:	mov	x4, x1
   33ff0:	ldr	x3, [sp, #40]
   33ff4:	mov	x2, x0
   33ff8:	ldr	x1, [sp, #48]
   33ffc:	ldr	x0, [sp, #56]
   34000:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   34004:	ldr	x0, [sp, #200]
   34008:	ldrb	w0, [x0]
   3400c:	cmp	w0, #0x0
   34010:	b.eq	34608 <omp_get_affinity_format@@OMP_5.0+0xdec>  // b.none
   34014:	ldr	x0, [sp, #200]
   34018:	add	x0, x0, #0x1
   3401c:	str	x0, [sp, #200]
   34020:	ldr	x0, [sp, #200]
   34024:	ldrb	w0, [x0]
   34028:	cmp	w0, #0x25
   3402c:	b.ne	34060 <omp_get_affinity_format@@OMP_5.0+0x844>  // b.any
   34030:	add	x1, sp, #0x90
   34034:	mov	x4, #0x1                   	// #1
   34038:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   3403c:	add	x3, x0, #0xd98
   34040:	mov	x2, x1
   34044:	ldr	x1, [sp, #48]
   34048:	ldr	x0, [sp, #56]
   3404c:	bl	338c0 <omp_get_affinity_format@@OMP_5.0+0xa4>
   34050:	ldr	x0, [sp, #200]
   34054:	add	x0, x0, #0x1
   34058:	str	x0, [sp, #40]
   3405c:	b	34604 <omp_get_affinity_format@@OMP_5.0+0xde8>
   34060:	ldr	x0, [sp, #200]
   34064:	ldrb	w0, [x0]
   34068:	cmp	w0, #0x30
   3406c:	b.ne	340a0 <omp_get_affinity_format@@OMP_5.0+0x884>  // b.any
   34070:	mov	w0, #0x1                   	// #1
   34074:	strb	w0, [sp, #199]
   34078:	ldr	x0, [sp, #200]
   3407c:	add	x0, x0, #0x1
   34080:	str	x0, [sp, #200]
   34084:	ldr	x0, [sp, #200]
   34088:	ldrb	w0, [x0]
   3408c:	cmp	w0, #0x2e
   34090:	b.eq	340a0 <omp_get_affinity_format@@OMP_5.0+0x884>  // b.none
   34094:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   34098:	add	x0, x0, #0xda0
   3409c:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   340a0:	ldr	x0, [sp, #200]
   340a4:	ldrb	w0, [x0]
   340a8:	cmp	w0, #0x2e
   340ac:	b.ne	340c4 <omp_get_affinity_format@@OMP_5.0+0x8a8>  // b.any
   340b0:	mov	w0, #0x1                   	// #1
   340b4:	strb	w0, [sp, #198]
   340b8:	ldr	x0, [sp, #200]
   340bc:	add	x0, x0, #0x1
   340c0:	str	x0, [sp, #200]
   340c4:	ldr	x0, [sp, #200]
   340c8:	ldrb	w0, [x0]
   340cc:	cmp	w0, #0x30
   340d0:	b.ls	34108 <omp_get_affinity_format@@OMP_5.0+0x8ec>  // b.plast
   340d4:	ldr	x0, [sp, #200]
   340d8:	ldrb	w0, [x0]
   340dc:	cmp	w0, #0x39
   340e0:	b.hi	34108 <omp_get_affinity_format@@OMP_5.0+0x8ec>  // b.pmore
   340e4:	add	x0, sp, #0x88
   340e8:	mov	w2, #0xa                   	// #10
   340ec:	mov	x1, x0
   340f0:	ldr	x0, [sp, #200]
   340f4:	bl	86c0 <strtoul@plt>
   340f8:	str	x0, [sp, #184]
   340fc:	ldr	x0, [sp, #136]
   34100:	str	x0, [sp, #200]
   34104:	b	3412c <omp_get_affinity_format@@OMP_5.0+0x910>
   34108:	ldrb	w0, [sp, #199]
   3410c:	cmp	w0, #0x0
   34110:	b.ne	34120 <omp_get_affinity_format@@OMP_5.0+0x904>  // b.any
   34114:	ldrb	w0, [sp, #198]
   34118:	cmp	w0, #0x0
   3411c:	b.eq	3412c <omp_get_affinity_format@@OMP_5.0+0x910>  // b.none
   34120:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   34124:	add	x0, x0, #0xdd8
   34128:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   3412c:	ldr	x0, [sp, #200]
   34130:	ldrb	w0, [x0]
   34134:	strb	w0, [sp, #183]
   34138:	ldrb	w0, [sp, #183]
   3413c:	cmp	w0, #0x7b
   34140:	b.ne	342e0 <omp_get_affinity_format@@OMP_5.0+0xac4>  // b.any
   34144:	str	wzr, [sp, #172]
   34148:	b	34264 <omp_get_affinity_format@@OMP_5.0+0xa48>
   3414c:	ldr	x0, [sp, #200]
   34150:	add	x3, x0, #0x1
   34154:	ldrsw	x1, [sp, #172]
   34158:	mov	x0, x1
   3415c:	lsl	x0, x0, #2
   34160:	add	x0, x0, x1
   34164:	lsl	x0, x0, #2
   34168:	adrp	x1, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3416c:	add	x1, x1, #0x498
   34170:	add	x4, x0, x1
   34174:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   34178:	add	x2, x0, #0x498
   3417c:	ldrsw	x1, [sp, #172]
   34180:	mov	x0, x1
   34184:	lsl	x0, x0, #2
   34188:	add	x0, x0, x1
   3418c:	lsl	x0, x0, #2
   34190:	add	x0, x2, x0
   34194:	ldrb	w0, [x0, #18]
   34198:	and	x0, x0, #0xff
   3419c:	mov	x2, x0
   341a0:	mov	x1, x4
   341a4:	mov	x0, x3
   341a8:	bl	88a0 <strncmp@plt>
   341ac:	cmp	w0, #0x0
   341b0:	b.ne	34258 <omp_get_affinity_format@@OMP_5.0+0xa3c>  // b.any
   341b4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   341b8:	add	x2, x0, #0x498
   341bc:	ldrsw	x1, [sp, #172]
   341c0:	mov	x0, x1
   341c4:	lsl	x0, x0, #2
   341c8:	add	x0, x0, x1
   341cc:	lsl	x0, x0, #2
   341d0:	add	x0, x2, x0
   341d4:	ldrb	w0, [x0, #18]
   341d8:	and	x0, x0, #0xff
   341dc:	add	x0, x0, #0x1
   341e0:	ldr	x1, [sp, #200]
   341e4:	add	x0, x1, x0
   341e8:	ldrb	w0, [x0]
   341ec:	cmp	w0, #0x7d
   341f0:	b.ne	34258 <omp_get_affinity_format@@OMP_5.0+0xa3c>  // b.any
   341f4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   341f8:	add	x2, x0, #0x498
   341fc:	ldrsw	x1, [sp, #172]
   34200:	mov	x0, x1
   34204:	lsl	x0, x0, #2
   34208:	add	x0, x0, x1
   3420c:	lsl	x0, x0, #2
   34210:	add	x0, x2, x0
   34214:	ldrb	w0, [x0, #19]
   34218:	strb	w0, [sp, #183]
   3421c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   34220:	add	x2, x0, #0x498
   34224:	ldrsw	x1, [sp, #172]
   34228:	mov	x0, x1
   3422c:	lsl	x0, x0, #2
   34230:	add	x0, x0, x1
   34234:	lsl	x0, x0, #2
   34238:	add	x0, x2, x0
   3423c:	ldrb	w0, [x0, #18]
   34240:	and	x0, x0, #0xff
   34244:	add	x0, x0, #0x1
   34248:	ldr	x1, [sp, #200]
   3424c:	add	x0, x1, x0
   34250:	str	x0, [sp, #200]
   34254:	b	34270 <omp_get_affinity_format@@OMP_5.0+0xa54>
   34258:	ldr	w0, [sp, #172]
   3425c:	add	w0, w0, #0x1
   34260:	str	w0, [sp, #172]
   34264:	ldr	w0, [sp, #172]
   34268:	cmp	w0, #0x9
   3426c:	b.ls	3414c <omp_get_affinity_format@@OMP_5.0+0x930>  // b.plast
   34270:	ldrb	w0, [sp, #183]
   34274:	cmp	w0, #0x7b
   34278:	b.ne	342e0 <omp_get_affinity_format@@OMP_5.0+0xac4>  // b.any
   3427c:	ldr	x0, [sp, #200]
   34280:	add	x0, x0, #0x1
   34284:	mov	w1, #0x7d                  	// #125
   34288:	bl	8ac0 <strchr@plt>
   3428c:	str	x0, [sp, #160]
   34290:	ldr	x0, [sp, #160]
   34294:	cmp	x0, #0x0
   34298:	b.eq	342c8 <omp_get_affinity_format@@OMP_5.0+0xaac>  // b.none
   3429c:	ldr	x0, [sp, #200]
   342a0:	add	x0, x0, #0x1
   342a4:	ldr	x1, [sp, #160]
   342a8:	sub	x0, x1, x0
   342ac:	mov	w1, w0
   342b0:	ldr	x0, [sp, #200]
   342b4:	add	x0, x0, #0x1
   342b8:	mov	x2, x0
   342bc:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   342c0:	add	x0, x0, #0xe20
   342c4:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   342c8:	ldr	x0, [sp, #200]
   342cc:	add	x0, x0, #0x1
   342d0:	mov	x1, x0
   342d4:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   342d8:	add	x0, x0, #0xe58
   342dc:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   342e0:	ldrb	w0, [sp, #183]
   342e4:	cmp	w0, #0x74
   342e8:	b.eq	34378 <omp_get_affinity_format@@OMP_5.0+0xb5c>  // b.none
   342ec:	cmp	w0, #0x74
   342f0:	b.gt	345e0 <omp_get_affinity_format@@OMP_5.0+0xdc4>
   342f4:	cmp	w0, #0x6e
   342f8:	b.eq	343a0 <omp_get_affinity_format@@OMP_5.0+0xb84>  // b.none
   342fc:	cmp	w0, #0x6e
   34300:	b.gt	345e0 <omp_get_affinity_format@@OMP_5.0+0xdc4>
   34304:	cmp	w0, #0x69
   34308:	b.eq	34434 <omp_get_affinity_format@@OMP_5.0+0xc18>  // b.none
   3430c:	cmp	w0, #0x69
   34310:	b.gt	345e0 <omp_get_affinity_format@@OMP_5.0+0xdc4>
   34314:	cmp	w0, #0x61
   34318:	b.eq	343dc <omp_get_affinity_format@@OMP_5.0+0xbc0>  // b.none
   3431c:	cmp	w0, #0x61
   34320:	b.gt	345e0 <omp_get_affinity_format@@OMP_5.0+0xdc4>
   34324:	cmp	w0, #0x54
   34328:	b.eq	34384 <omp_get_affinity_format@@OMP_5.0+0xb68>  // b.none
   3432c:	cmp	w0, #0x54
   34330:	b.gt	345e0 <omp_get_affinity_format@@OMP_5.0+0xdc4>
   34334:	cmp	w0, #0x50
   34338:	b.eq	34428 <omp_get_affinity_format@@OMP_5.0+0xc0c>  // b.none
   3433c:	cmp	w0, #0x50
   34340:	b.gt	345e0 <omp_get_affinity_format@@OMP_5.0+0xdc4>
   34344:	cmp	w0, #0x4e
   34348:	b.eq	343b0 <omp_get_affinity_format@@OMP_5.0+0xb94>  // b.none
   3434c:	cmp	w0, #0x4e
   34350:	b.gt	345e0 <omp_get_affinity_format@@OMP_5.0+0xdc4>
   34354:	cmp	w0, #0x4c
   34358:	b.eq	34390 <omp_get_affinity_format@@OMP_5.0+0xb74>  // b.none
   3435c:	cmp	w0, #0x4c
   34360:	b.gt	345e0 <omp_get_affinity_format@@OMP_5.0+0xdc4>
   34364:	cmp	w0, #0x41
   34368:	b.eq	34478 <omp_get_affinity_format@@OMP_5.0+0xc5c>  // b.none
   3436c:	cmp	w0, #0x48
   34370:	b.eq	34408 <omp_get_affinity_format@@OMP_5.0+0xbec>  // b.none
   34374:	b	345e0 <omp_get_affinity_format@@OMP_5.0+0xdc4>
   34378:	bl	8b70 <omp_get_team_num@plt>
   3437c:	str	w0, [sp, #176]
   34380:	b	345b8 <omp_get_affinity_format@@OMP_5.0+0xd9c>
   34384:	bl	8ba0 <omp_get_num_teams@plt>
   34388:	str	w0, [sp, #176]
   3438c:	b	345b8 <omp_get_affinity_format@@OMP_5.0+0xd9c>
   34390:	ldr	x0, [sp, #24]
   34394:	ldr	w0, [x0, #28]
   34398:	str	w0, [sp, #176]
   3439c:	b	345b8 <omp_get_affinity_format@@OMP_5.0+0xd9c>
   343a0:	ldr	x0, [sp, #24]
   343a4:	ldr	w0, [x0, #24]
   343a8:	str	w0, [sp, #176]
   343ac:	b	345b8 <omp_get_affinity_format@@OMP_5.0+0xd9c>
   343b0:	ldr	x0, [sp, #24]
   343b4:	ldr	x0, [x0]
   343b8:	cmp	x0, #0x0
   343bc:	b.eq	343d0 <omp_get_affinity_format@@OMP_5.0+0xbb4>  // b.none
   343c0:	ldr	x0, [sp, #24]
   343c4:	ldr	x0, [x0]
   343c8:	ldr	w0, [x0]
   343cc:	b	343d4 <omp_get_affinity_format@@OMP_5.0+0xbb8>
   343d0:	mov	w0, #0x1                   	// #1
   343d4:	str	w0, [sp, #176]
   343d8:	b	345b8 <omp_get_affinity_format@@OMP_5.0+0xd9c>
   343dc:	ldr	x0, [sp, #24]
   343e0:	ldr	x0, [x0]
   343e4:	cmp	x0, #0x0
   343e8:	b.eq	343fc <omp_get_affinity_format@@OMP_5.0+0xbe0>  // b.none
   343ec:	ldr	x0, [sp, #24]
   343f0:	ldr	x0, [x0]
   343f4:	ldr	w0, [x0, #32]
   343f8:	b	34400 <omp_get_affinity_format@@OMP_5.0+0xbe4>
   343fc:	mov	w0, #0xffffffff            	// #-1
   34400:	str	w0, [sp, #176]
   34404:	b	345b8 <omp_get_affinity_format@@OMP_5.0+0xd9c>
   34408:	add	x0, sp, #0x90
   3440c:	ldr	x4, [sp, #184]
   34410:	ldrb	w3, [sp, #198]
   34414:	mov	x2, x0
   34418:	ldr	x1, [sp, #48]
   3441c:	ldr	x0, [sp, #56]
   34420:	bl	33e10 <omp_get_affinity_format@@OMP_5.0+0x5f4>
   34424:	b	345f8 <omp_get_affinity_format@@OMP_5.0+0xddc>
   34428:	bl	8830 <getpid@plt>
   3442c:	str	w0, [sp, #176]
   34430:	b	345b8 <omp_get_affinity_format@@OMP_5.0+0xd9c>
   34434:	add	x3, sp, #0x40
   34438:	ldr	x2, [sp, #32]
   3443c:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   34440:	add	x1, x0, #0xe90
   34444:	mov	x0, x3
   34448:	bl	8750 <sprintf@plt>
   3444c:	add	x1, sp, #0x40
   34450:	add	x0, sp, #0x90
   34454:	mov	x6, x1
   34458:	ldr	x5, [sp, #184]
   3445c:	ldrb	w4, [sp, #198]
   34460:	ldrb	w3, [sp, #199]
   34464:	mov	x2, x0
   34468:	ldr	x1, [sp, #48]
   3446c:	ldr	x0, [sp, #56]
   34470:	bl	33a80 <omp_get_affinity_format@@OMP_5.0+0x264>
   34474:	b	345f8 <omp_get_affinity_format@@OMP_5.0+0xddc>
   34478:	ldr	x0, [sp, #184]
   3447c:	cmn	x0, #0x1
   34480:	b.ne	344ac <omp_get_affinity_format@@OMP_5.0+0xc90>  // b.any
   34484:	ldr	w0, [sp, #20]
   34488:	sub	w0, w0, #0x1
   3448c:	mov	w1, w0
   34490:	add	x0, sp, #0x90
   34494:	mov	w3, w1
   34498:	mov	x2, x0
   3449c:	ldr	x1, [sp, #48]
   344a0:	ldr	x0, [sp, #56]
   344a4:	bl	24c04 <omp_get_place_proc_ids@@OMP_4.5+0x228>
   344a8:	b	345f4 <omp_get_affinity_format@@OMP_5.0+0xdd8>
   344ac:	ldrb	w0, [sp, #198]
   344b0:	cmp	w0, #0x0
   344b4:	b.eq	34540 <omp_get_affinity_format@@OMP_5.0+0xd24>  // b.none
   344b8:	str	xzr, [sp, #128]
   344bc:	ldr	w0, [sp, #20]
   344c0:	sub	w0, w0, #0x1
   344c4:	mov	w1, w0
   344c8:	add	x0, sp, #0x80
   344cc:	mov	w3, w1
   344d0:	mov	x2, x0
   344d4:	mov	x1, #0x0                   	// #0
   344d8:	mov	x0, #0x0                   	// #0
   344dc:	bl	24c04 <omp_get_place_proc_ids@@OMP_4.5+0x228>
   344e0:	ldr	x0, [sp, #128]
   344e4:	ldr	x1, [sp, #184]
   344e8:	cmp	x1, x0
   344ec:	b.ls	34518 <omp_get_affinity_format@@OMP_5.0+0xcfc>  // b.plast
   344f0:	ldr	x0, [sp, #128]
   344f4:	ldr	x1, [sp, #184]
   344f8:	sub	x1, x1, x0
   344fc:	add	x0, sp, #0x90
   34500:	mov	x4, x1
   34504:	mov	w3, #0x20                  	// #32
   34508:	mov	x2, x0
   3450c:	ldr	x1, [sp, #48]
   34510:	ldr	x0, [sp, #56]
   34514:	bl	339a0 <omp_get_affinity_format@@OMP_5.0+0x184>
   34518:	ldr	w0, [sp, #20]
   3451c:	sub	w0, w0, #0x1
   34520:	mov	w1, w0
   34524:	add	x0, sp, #0x90
   34528:	mov	w3, w1
   3452c:	mov	x2, x0
   34530:	ldr	x1, [sp, #48]
   34534:	ldr	x0, [sp, #56]
   34538:	bl	24c04 <omp_get_place_proc_ids@@OMP_4.5+0x228>
   3453c:	b	345f4 <omp_get_affinity_format@@OMP_5.0+0xdd8>
   34540:	ldr	x0, [sp, #144]
   34544:	str	x0, [sp, #152]
   34548:	ldr	w0, [sp, #20]
   3454c:	sub	w0, w0, #0x1
   34550:	mov	w1, w0
   34554:	add	x0, sp, #0x90
   34558:	mov	w3, w1
   3455c:	mov	x2, x0
   34560:	ldr	x1, [sp, #48]
   34564:	ldr	x0, [sp, #56]
   34568:	bl	24c04 <omp_get_place_proc_ids@@OMP_4.5+0x228>
   3456c:	ldr	x1, [sp, #144]
   34570:	ldr	x0, [sp, #152]
   34574:	sub	x0, x1, x0
   34578:	ldr	x1, [sp, #184]
   3457c:	cmp	x1, x0
   34580:	b.ls	345f4 <omp_get_affinity_format@@OMP_5.0+0xdd8>  // b.plast
   34584:	ldr	x0, [sp, #144]
   34588:	ldr	x1, [sp, #152]
   3458c:	sub	x1, x1, x0
   34590:	ldr	x0, [sp, #184]
   34594:	add	x1, x1, x0
   34598:	add	x0, sp, #0x90
   3459c:	mov	x4, x1
   345a0:	mov	w3, #0x20                  	// #32
   345a4:	mov	x2, x0
   345a8:	ldr	x1, [sp, #48]
   345ac:	ldr	x0, [sp, #56]
   345b0:	bl	339a0 <omp_get_affinity_format@@OMP_5.0+0x184>
   345b4:	b	345f4 <omp_get_affinity_format@@OMP_5.0+0xdd8>
   345b8:	add	x0, sp, #0x90
   345bc:	ldr	w6, [sp, #176]
   345c0:	ldr	x5, [sp, #184]
   345c4:	ldrb	w4, [sp, #198]
   345c8:	ldrb	w3, [sp, #199]
   345cc:	mov	x2, x0
   345d0:	ldr	x1, [sp, #48]
   345d4:	ldr	x0, [sp, #56]
   345d8:	bl	33cb8 <omp_get_affinity_format@@OMP_5.0+0x49c>
   345dc:	b	345f8 <omp_get_affinity_format@@OMP_5.0+0xddc>
   345e0:	ldrb	w0, [sp, #183]
   345e4:	mov	w1, w0
   345e8:	adrp	x0, 36000 <omp_get_team_num@@OMP_4.0+0x15cc>
   345ec:	add	x0, x0, #0xe98
   345f0:	bl	d12c <GOMP_critical_name_end@@GOMP_1.0+0x3f5c>
   345f4:	nop
   345f8:	ldr	x0, [sp, #200]
   345fc:	add	x0, x0, #0x1
   34600:	str	x0, [sp, #40]
   34604:	b	33f84 <omp_get_affinity_format@@OMP_5.0+0x768>
   34608:	nop
   3460c:	ldr	x0, [sp, #144]
   34610:	ldp	x29, x30, [sp], #208
   34614:	ret

0000000000034618 <omp_capture_affinity@@OMP_5.0>:
   34618:	stp	x29, x30, [sp, #-80]!
   3461c:	mov	x29, sp
   34620:	str	x19, [sp, #16]
   34624:	str	x0, [sp, #56]
   34628:	str	x1, [sp, #48]
   3462c:	str	x2, [sp, #40]
   34630:	bl	336a4 <acc_set_cuda_stream@@OACC_2.0+0xa9c>
   34634:	str	x0, [sp, #72]
   34638:	ldr	x0, [sp, #40]
   3463c:	cmp	x0, #0x0
   34640:	b.eq	3465c <omp_capture_affinity@@OMP_5.0+0x44>  // b.none
   34644:	ldr	x0, [sp, #40]
   34648:	ldrb	w0, [x0]
   3464c:	cmp	w0, #0x0
   34650:	b.eq	3465c <omp_capture_affinity@@OMP_5.0+0x44>  // b.none
   34654:	ldr	x19, [sp, #40]
   34658:	b	34668 <omp_capture_affinity@@OMP_5.0+0x50>
   3465c:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   34660:	add	x0, x0, #0x358
   34664:	ldr	x19, [x0]
   34668:	bl	336b8 <acc_set_cuda_stream@@OACC_2.0+0xab0>
   3466c:	mov	x2, x0
   34670:	ldr	x0, [sp, #72]
   34674:	add	x1, x0, #0x10
   34678:	ldr	x0, [sp, #72]
   3467c:	ldr	w0, [x0, #92]
   34680:	mov	w5, w0
   34684:	mov	x4, x1
   34688:	mov	x3, x2
   3468c:	mov	x2, x19
   34690:	ldr	x1, [sp, #48]
   34694:	ldr	x0, [sp, #56]
   34698:	bl	33f60 <omp_get_affinity_format@@OMP_5.0+0x744>
   3469c:	str	x0, [sp, #64]
   346a0:	ldr	x0, [sp, #48]
   346a4:	cmp	x0, #0x0
   346a8:	b.eq	346e4 <omp_capture_affinity@@OMP_5.0+0xcc>  // b.none
   346ac:	ldr	x1, [sp, #64]
   346b0:	ldr	x0, [sp, #48]
   346b4:	cmp	x1, x0
   346b8:	b.cc	346d4 <omp_capture_affinity@@OMP_5.0+0xbc>  // b.lo, b.ul, b.last
   346bc:	ldr	x0, [sp, #48]
   346c0:	sub	x0, x0, #0x1
   346c4:	ldr	x1, [sp, #56]
   346c8:	add	x0, x1, x0
   346cc:	strb	wzr, [x0]
   346d0:	b	346e4 <omp_capture_affinity@@OMP_5.0+0xcc>
   346d4:	ldr	x1, [sp, #56]
   346d8:	ldr	x0, [sp, #64]
   346dc:	add	x0, x1, x0
   346e0:	strb	wzr, [x0]
   346e4:	ldr	x0, [sp, #64]
   346e8:	ldr	x19, [sp, #16]
   346ec:	ldp	x29, x30, [sp], #80
   346f0:	ret

00000000000346f4 <omp_display_affinity@@OMP_5.0>:
   346f4:	sub	sp, sp, #0x230
   346f8:	stp	x29, x30, [sp]
   346fc:	mov	x29, sp
   34700:	str	x0, [sp, #24]
   34704:	add	x0, sp, #0x20
   34708:	ldr	x2, [sp, #24]
   3470c:	mov	x1, #0x200                 	// #512
   34710:	bl	34618 <omp_capture_affinity@@OMP_5.0>
   34714:	str	x0, [sp, #552]
   34718:	ldr	x0, [sp, #552]
   3471c:	cmp	x0, #0x1ff
   34720:	b.hi	34748 <omp_display_affinity@@OMP_5.0+0x54>  // b.pmore
   34724:	ldr	x0, [sp, #552]
   34728:	add	x1, sp, #0x20
   3472c:	mov	w2, #0xa                   	// #10
   34730:	strb	w2, [x1, x0]
   34734:	ldr	x0, [sp, #552]
   34738:	add	x1, x0, #0x1
   3473c:	add	x0, sp, #0x20
   34740:	bl	336cc <acc_set_cuda_stream@@OACC_2.0+0xac4>
   34744:	b	347a0 <omp_display_affinity@@OMP_5.0+0xac>
   34748:	ldr	x0, [sp, #552]
   3474c:	add	x0, x0, #0x1
   34750:	bl	8dd0 <fprintf@plt+0x1a0>
   34754:	str	x0, [sp, #544]
   34758:	ldr	x0, [sp, #552]
   3475c:	add	x0, x0, #0x1
   34760:	ldr	x2, [sp, #24]
   34764:	mov	x1, x0
   34768:	ldr	x0, [sp, #544]
   3476c:	bl	34618 <omp_capture_affinity@@OMP_5.0>
   34770:	ldr	x1, [sp, #544]
   34774:	ldr	x0, [sp, #552]
   34778:	add	x0, x1, x0
   3477c:	mov	w1, #0xa                   	// #10
   34780:	strb	w1, [x0]
   34784:	ldr	x0, [sp, #552]
   34788:	add	x0, x0, #0x1
   3478c:	mov	x1, x0
   34790:	ldr	x0, [sp, #544]
   34794:	bl	336cc <acc_set_cuda_stream@@OACC_2.0+0xac4>
   34798:	ldr	x0, [sp, #544]
   3479c:	bl	8a20 <free@plt>
   347a0:	ldp	x29, x30, [sp]
   347a4:	add	sp, sp, #0x230
   347a8:	ret
   347ac:	sub	sp, sp, #0x240
   347b0:	stp	x29, x30, [sp]
   347b4:	mov	x29, sp
   347b8:	str	x0, [sp, #40]
   347bc:	str	x1, [sp, #32]
   347c0:	str	w2, [sp, #28]
   347c4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   347c8:	add	x0, x0, #0x358
   347cc:	ldr	x1, [x0]
   347d0:	add	x0, sp, #0x30
   347d4:	ldr	w5, [sp, #28]
   347d8:	ldr	x4, [sp, #32]
   347dc:	ldr	x3, [sp, #40]
   347e0:	mov	x2, x1
   347e4:	mov	x1, #0x200                 	// #512
   347e8:	bl	33f60 <omp_get_affinity_format@@OMP_5.0+0x744>
   347ec:	str	x0, [sp, #568]
   347f0:	ldr	x0, [sp, #568]
   347f4:	cmp	x0, #0x1ff
   347f8:	b.hi	34820 <omp_display_affinity@@OMP_5.0+0x12c>  // b.pmore
   347fc:	ldr	x0, [sp, #568]
   34800:	add	x1, sp, #0x30
   34804:	mov	w2, #0xa                   	// #10
   34808:	strb	w2, [x1, x0]
   3480c:	ldr	x0, [sp, #568]
   34810:	add	x1, x0, #0x1
   34814:	add	x0, sp, #0x30
   34818:	bl	336cc <acc_set_cuda_stream@@OACC_2.0+0xac4>
   3481c:	b	3488c <omp_display_affinity@@OMP_5.0+0x198>
   34820:	ldr	x0, [sp, #568]
   34824:	add	x0, x0, #0x1
   34828:	bl	8dd0 <fprintf@plt+0x1a0>
   3482c:	str	x0, [sp, #560]
   34830:	ldr	x0, [sp, #568]
   34834:	add	x1, x0, #0x1
   34838:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3483c:	add	x0, x0, #0x358
   34840:	ldr	x0, [x0]
   34844:	ldr	w5, [sp, #28]
   34848:	ldr	x4, [sp, #32]
   3484c:	ldr	x3, [sp, #40]
   34850:	mov	x2, x0
   34854:	ldr	x0, [sp, #560]
   34858:	bl	33f60 <omp_get_affinity_format@@OMP_5.0+0x744>
   3485c:	ldr	x1, [sp, #560]
   34860:	ldr	x0, [sp, #568]
   34864:	add	x0, x1, x0
   34868:	mov	w1, #0xa                   	// #10
   3486c:	strb	w1, [x0]
   34870:	ldr	x0, [sp, #568]
   34874:	add	x0, x0, #0x1
   34878:	mov	x1, x0
   3487c:	ldr	x0, [sp, #560]
   34880:	bl	336cc <acc_set_cuda_stream@@OACC_2.0+0xac4>
   34884:	ldr	x0, [sp, #560]
   34888:	bl	8a20 <free@plt>
   3488c:	ldp	x29, x30, [sp]
   34890:	add	sp, sp, #0x240
   34894:	ret
   34898:	mrs	x1, tpidr_el0
   3489c:	adrp	x0, 4e000 <omp_get_team_num@@OMP_4.0+0x195cc>
   348a0:	ldr	x0, [x0, #4016]
   348a4:	add	x0, x1, x0
   348a8:	ret
   348ac:	stp	x29, x30, [sp, #-48]!
   348b0:	mov	x29, sp
   348b4:	strb	w0, [sp, #31]
   348b8:	bl	34898 <omp_display_affinity@@OMP_5.0+0x1a4>
   348bc:	ldr	x0, [x0, #80]
   348c0:	str	x0, [sp, #40]
   348c4:	ldr	x0, [sp, #40]
   348c8:	cmp	x0, #0x0
   348cc:	b.eq	348dc <omp_display_affinity@@OMP_5.0+0x1e8>  // b.none
   348d0:	ldr	x0, [sp, #40]
   348d4:	add	x0, x0, #0x90
   348d8:	b	348f8 <omp_display_affinity@@OMP_5.0+0x204>
   348dc:	ldrb	w0, [sp, #31]
   348e0:	cmp	w0, #0x0
   348e4:	b.eq	348f0 <omp_display_affinity@@OMP_5.0+0x1fc>  // b.none
   348e8:	bl	1fbf0 <omp_in_final@@OMP_3.1+0x2824>
   348ec:	b	348f8 <omp_display_affinity@@OMP_5.0+0x204>
   348f0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   348f4:	add	x0, x0, #0x2d8
   348f8:	ldp	x29, x30, [sp], #48
   348fc:	ret

0000000000034900 <GOMP_teams_reg@@GOMP_5.0>:
   34900:	stp	x29, x30, [sp, #-80]!
   34904:	mov	x29, sp
   34908:	str	x0, [sp, #40]
   3490c:	str	x1, [sp, #32]
   34910:	str	w2, [sp, #28]
   34914:	str	w3, [sp, #24]
   34918:	str	w4, [sp, #20]
   3491c:	str	wzr, [sp, #76]
   34920:	ldr	w0, [sp, #24]
   34924:	cmp	w0, #0x0
   34928:	b.eq	34964 <GOMP_teams_reg@@GOMP_5.0+0x64>  // b.none
   3492c:	mov	w0, #0x1                   	// #1
   34930:	bl	348ac <omp_display_affinity@@OMP_5.0+0x1b8>
   34934:	str	x0, [sp, #64]
   34938:	ldr	x0, [sp, #64]
   3493c:	ldr	w0, [x0, #20]
   34940:	str	w0, [sp, #76]
   34944:	ldr	w0, [sp, #24]
   34948:	cmp	w0, #0x0
   3494c:	b.lt	34958 <GOMP_teams_reg@@GOMP_5.0+0x58>  // b.tstop
   34950:	ldr	w0, [sp, #24]
   34954:	b	3495c <GOMP_teams_reg@@GOMP_5.0+0x5c>
   34958:	mov	w0, #0xffffffff            	// #-1
   3495c:	ldr	x1, [sp, #64]
   34960:	str	w0, [x1, #20]
   34964:	ldr	w0, [sp, #28]
   34968:	cmp	w0, #0x0
   3496c:	b.ne	34978 <GOMP_teams_reg@@GOMP_5.0+0x78>  // b.any
   34970:	mov	w0, #0x3                   	// #3
   34974:	str	w0, [sp, #28]
   34978:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3497c:	add	x0, x0, #0x560
   34980:	ldr	w1, [sp, #28]
   34984:	str	w1, [x0]
   34988:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   3498c:	add	x0, x0, #0x608
   34990:	str	wzr, [x0]
   34994:	b	349c0 <GOMP_teams_reg@@GOMP_5.0+0xc0>
   34998:	ldr	x1, [sp, #40]
   3499c:	ldr	x0, [sp, #32]
   349a0:	blr	x1
   349a4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   349a8:	add	x0, x0, #0x608
   349ac:	ldr	w0, [x0]
   349b0:	add	w1, w0, #0x1
   349b4:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   349b8:	add	x0, x0, #0x608
   349bc:	str	w1, [x0]
   349c0:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   349c4:	add	x0, x0, #0x608
   349c8:	ldr	w0, [x0]
   349cc:	ldr	w1, [sp, #28]
   349d0:	cmp	w1, w0
   349d4:	b.hi	34998 <GOMP_teams_reg@@GOMP_5.0+0x98>  // b.pmore
   349d8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   349dc:	add	x0, x0, #0x560
   349e0:	mov	w1, #0x1                   	// #1
   349e4:	str	w1, [x0]
   349e8:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   349ec:	add	x0, x0, #0x608
   349f0:	str	wzr, [x0]
   349f4:	ldr	w0, [sp, #24]
   349f8:	cmp	w0, #0x0
   349fc:	b.eq	34a18 <GOMP_teams_reg@@GOMP_5.0+0x118>  // b.none
   34a00:	mov	w0, #0x1                   	// #1
   34a04:	bl	348ac <omp_display_affinity@@OMP_5.0+0x1b8>
   34a08:	str	x0, [sp, #56]
   34a0c:	ldr	x0, [sp, #56]
   34a10:	ldr	w1, [sp, #76]
   34a14:	str	w1, [x0, #20]
   34a18:	nop
   34a1c:	ldp	x29, x30, [sp], #80
   34a20:	ret

0000000000034a24 <omp_get_num_teams@@OMP_4.0>:
   34a24:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   34a28:	add	x0, x0, #0x560
   34a2c:	ldr	w0, [x0]
   34a30:	ret

0000000000034a34 <omp_get_team_num@@OMP_4.0>:
   34a34:	adrp	x0, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   34a38:	add	x0, x0, #0x608
   34a3c:	ldr	w0, [x0]
   34a40:	ret
   34a44:	nop
   34a48:	adrp	x2, 4f000 <omp_get_team_num@@OMP_4.0+0x1a5cc>
   34a4c:	mov	x1, #0x0                   	// #0
   34a50:	ldr	x2, [x2, #720]
   34a54:	b	8770 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000034a58 <.fini>:
   34a58:	stp	x29, x30, [sp, #-16]!
   34a5c:	mov	x29, sp
   34a60:	ldp	x29, x30, [sp], #16
   34a64:	ret
