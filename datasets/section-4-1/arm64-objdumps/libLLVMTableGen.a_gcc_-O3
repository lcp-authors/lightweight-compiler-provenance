In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTableGen.a_gcc_-O3:

Error.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	stp	x21, x22, [sp, #48]
  10:	mov	x22, x0
  14:	mov	x21, x1
  18:	cbnz	w2, 30 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x30>
  1c:	adrp	x0, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
  20:	ldr	x0, [x0]
  24:	ldr	w1, [x0]
  28:	add	w1, w1, #0x1
  2c:	str	w1, [x0]
  30:	cbnz	x21, 6c <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x6c>
  34:	adrp	x0, 8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x8>
  38:	mov	w1, #0x1                   	// #1
  3c:	strb	w1, [sp]
  40:	mov	x6, #0x0                   	// #0
  44:	ldr	x0, [x0]
  48:	mov	x7, #0x0                   	// #0
  4c:	mov	x4, #0x0                   	// #0
  50:	mov	x5, #0x0                   	// #0
  54:	mov	x1, #0x0                   	// #0
  58:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
  5c:	ldp	x29, x30, [sp, #16]
  60:	ldp	x21, x22, [sp, #48]
  64:	add	sp, sp, #0x80
  68:	ret
  6c:	stp	x19, x20, [sp, #32]
  70:	adrp	x20, 8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x8>
  74:	mov	w0, #0x1                   	// #1
  78:	ldr	x1, [x22]
  7c:	strb	w0, [sp]
  80:	ldr	x20, [x20]
  84:	mov	x6, #0x0                   	// #0
  88:	mov	x7, #0x0                   	// #0
  8c:	mov	x4, #0x0                   	// #0
  90:	mov	x0, x20
  94:	mov	x5, #0x0                   	// #0
  98:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
  9c:	cmp	x21, #0x1
  a0:	b.ls	124 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x124>  // b.plast
  a4:	mov	w19, #0x1                   	// #1
  a8:	stp	x23, x24, [sp, #64]
  ac:	adrp	x23, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
  b0:	add	x23, x23, #0x0
  b4:	stp	x25, x26, [sp, #80]
  b8:	mov	w25, w19
  bc:	add	x26, sp, #0x68
  c0:	mov	x2, #0x1                   	// #1
  c4:	mov	w24, #0x103                 	// #259
  c8:	ldr	x1, [x22, x2, lsl #3]
  cc:	strb	w25, [sp]
  d0:	add	w19, w19, #0x1
  d4:	mov	w2, #0x3                   	// #3
  d8:	mov	x3, x26
  dc:	mov	x0, x20
  e0:	mov	x6, #0x0                   	// #0
  e4:	mov	x7, #0x0                   	// #0
  e8:	mov	x4, #0x0                   	// #0
  ec:	mov	x5, #0x0                   	// #0
  f0:	stp	x23, xzr, [sp, #104]
  f4:	strh	w24, [sp, #120]
  f8:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
  fc:	cmp	x21, w19, uxtw
 100:	mov	w2, w19
 104:	b.hi	c8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0xc8>  // b.pmore
 108:	ldp	x29, x30, [sp, #16]
 10c:	ldp	x19, x20, [sp, #32]
 110:	ldp	x21, x22, [sp, #48]
 114:	ldp	x23, x24, [sp, #64]
 118:	ldp	x25, x26, [sp, #80]
 11c:	add	sp, sp, #0x80
 120:	ret
 124:	ldp	x19, x20, [sp, #32]
 128:	b	5c <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x5c>
 12c:	nop

0000000000000130 <_ZN4llvm9PrintNoteERKNS_5TwineE>:
 130:	stp	x29, x30, [sp, #-32]!
 134:	mov	x29, sp
 138:	stp	x19, x20, [sp, #16]
 13c:	mov	x20, x0
 140:	bl	0 <_ZN4llvm9WithColor4noteEv>
 144:	mov	x19, x0
 148:	mov	x0, x20
 14c:	mov	x1, x19
 150:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 154:	ldp	x1, x0, [x19, #16]
 158:	cmp	x1, x0
 15c:	b.eq	180 <_ZN4llvm9PrintNoteERKNS_5TwineE+0x50>  // b.none
 160:	mov	w1, #0xa                   	// #10
 164:	strb	w1, [x0]
 168:	ldr	x0, [x19, #24]
 16c:	add	x0, x0, #0x1
 170:	str	x0, [x19, #24]
 174:	ldp	x19, x20, [sp, #16]
 178:	ldp	x29, x30, [sp], #32
 17c:	ret
 180:	mov	x0, x19
 184:	adrp	x1, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 188:	ldp	x19, x20, [sp, #16]
 18c:	add	x1, x1, #0x0
 190:	ldp	x29, x30, [sp], #32
 194:	mov	x2, #0x1                   	// #1
 198:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 19c:	nop

00000000000001a0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 1a0:	mov	x3, x2
 1a4:	mov	w2, #0x3                   	// #3
 1a8:	b	0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 1ac:	nop

00000000000001b0 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 1b0:	mov	x3, x2
 1b4:	mov	w2, #0x1                   	// #1
 1b8:	b	0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 1bc:	nop

00000000000001c0 <_ZN4llvm12PrintWarningEPKcRKNS_5TwineE>:
 1c0:	sub	sp, sp, #0x20
 1c4:	adrp	x3, 8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x8>
 1c8:	mov	x2, x0
 1cc:	mov	w0, #0x1                   	// #1
 1d0:	mov	x6, #0x0                   	// #0
 1d4:	mov	x7, #0x0                   	// #0
 1d8:	stp	x29, x30, [sp, #16]
 1dc:	add	x29, sp, #0x10
 1e0:	mov	x4, #0x0                   	// #0
 1e4:	mov	x5, #0x0                   	// #0
 1e8:	strb	w0, [sp]
 1ec:	ldr	x0, [x3]
 1f0:	mov	x3, x1
 1f4:	mov	x1, x2
 1f8:	mov	w2, #0x1                   	// #1
 1fc:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 200:	ldp	x29, x30, [sp, #16]
 204:	add	sp, sp, #0x20
 208:	ret
 20c:	nop

0000000000000210 <_ZN4llvm12PrintWarningERKNS_5TwineE>:
 210:	stp	x29, x30, [sp, #-32]!
 214:	mov	x29, sp
 218:	stp	x19, x20, [sp, #16]
 21c:	mov	x20, x0
 220:	bl	0 <_ZN4llvm9WithColor7warningEv>
 224:	mov	x19, x0
 228:	mov	x0, x20
 22c:	mov	x1, x19
 230:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 234:	ldp	x1, x0, [x19, #16]
 238:	cmp	x1, x0
 23c:	b.eq	260 <_ZN4llvm12PrintWarningERKNS_5TwineE+0x50>  // b.none
 240:	mov	w1, #0xa                   	// #10
 244:	strb	w1, [x0]
 248:	ldr	x0, [x19, #24]
 24c:	add	x0, x0, #0x1
 250:	str	x0, [x19, #24]
 254:	ldp	x19, x20, [sp, #16]
 258:	ldp	x29, x30, [sp], #32
 25c:	ret
 260:	mov	x0, x19
 264:	adrp	x1, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 268:	ldp	x19, x20, [sp, #16]
 26c:	add	x1, x1, #0x0
 270:	ldp	x29, x30, [sp], #32
 274:	mov	x2, #0x1                   	// #1
 278:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 27c:	nop

0000000000000280 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 280:	mov	x3, x2
 284:	mov	w2, #0x0                   	// #0
 288:	b	0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 28c:	nop

0000000000000290 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>:
 290:	sub	sp, sp, #0x20
 294:	adrp	x3, 8 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE+0x8>
 298:	mov	x2, x0
 29c:	mov	w0, #0x1                   	// #1
 2a0:	mov	x6, #0x0                   	// #0
 2a4:	mov	x7, #0x0                   	// #0
 2a8:	stp	x29, x30, [sp, #16]
 2ac:	add	x29, sp, #0x10
 2b0:	mov	x4, #0x0                   	// #0
 2b4:	mov	x5, #0x0                   	// #0
 2b8:	strb	w0, [sp]
 2bc:	ldr	x0, [x3]
 2c0:	mov	x3, x1
 2c4:	mov	x1, x2
 2c8:	mov	w2, #0x0                   	// #0
 2cc:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 2d0:	ldp	x29, x30, [sp, #16]
 2d4:	add	sp, sp, #0x20
 2d8:	ret
 2dc:	nop

00000000000002e0 <_ZN4llvm10PrintErrorERKNS_5TwineE>:
 2e0:	stp	x29, x30, [sp, #-32]!
 2e4:	mov	x29, sp
 2e8:	stp	x19, x20, [sp, #16]
 2ec:	mov	x20, x0
 2f0:	bl	0 <_ZN4llvm9WithColor5errorEv>
 2f4:	mov	x19, x0
 2f8:	mov	x0, x20
 2fc:	mov	x1, x19
 300:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 304:	ldp	x1, x0, [x19, #16]
 308:	cmp	x1, x0
 30c:	b.eq	330 <_ZN4llvm10PrintErrorERKNS_5TwineE+0x50>  // b.none
 310:	mov	w1, #0xa                   	// #10
 314:	strb	w1, [x0]
 318:	ldr	x0, [x19, #24]
 31c:	add	x0, x0, #0x1
 320:	str	x0, [x19, #24]
 324:	ldp	x19, x20, [sp, #16]
 328:	ldp	x29, x30, [sp], #32
 32c:	ret
 330:	mov	x0, x19
 334:	adrp	x1, 0 <_ZN4llvmL12PrintMessageENS_8ArrayRefINS_5SMLocEEENS_9SourceMgr8DiagKindERKNS_5TwineE>
 338:	ldp	x19, x20, [sp, #16]
 33c:	add	x1, x1, #0x0
 340:	ldp	x29, x30, [sp], #32
 344:	mov	x2, #0x1                   	// #1
 348:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 34c:	nop

0000000000000350 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>:
 350:	stp	x29, x30, [sp, #-16]!
 354:	mov	x29, sp
 358:	bl	2e0 <_ZN4llvm10PrintErrorERKNS_5TwineE>
 35c:	bl	0 <_ZN4llvm3sys20RunInterruptHandlersEv>
 360:	mov	w0, #0x1                   	// #1
 364:	bl	0 <exit>

0000000000000368 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 368:	stp	x29, x30, [sp, #-16]!
 36c:	mov	x29, sp
 370:	bl	280 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
 374:	bl	0 <_ZN4llvm3sys20RunInterruptHandlersEv>
 378:	mov	w0, #0x1                   	// #1
 37c:	bl	0 <exit>

Disassembly of section .text._ZN4llvm9SourceMgrD2Ev:

0000000000000000 <_ZN4llvm9SourceMgrD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x19, [x0, #24]
  14:	str	x21, [sp, #32]
  18:	ldr	x21, [x0, #32]
  1c:	cmp	x19, x21
  20:	b.eq	4c <_ZN4llvm9SourceMgrD1Ev+0x4c>  // b.none
  24:	nop
  28:	mov	x1, x19
  2c:	add	x19, x19, #0x20
  30:	ldr	x0, [x1], #16
  34:	cmp	x0, x1
  38:	b.eq	98 <_ZN4llvm9SourceMgrD1Ev+0x98>  // b.none
  3c:	bl	0 <_ZdlPv>
  40:	cmp	x21, x19
  44:	b.ne	28 <_ZN4llvm9SourceMgrD1Ev+0x28>  // b.any
  48:	ldr	x21, [x20, #24]
  4c:	cbz	x21, 58 <_ZN4llvm9SourceMgrD1Ev+0x58>
  50:	mov	x0, x21
  54:	bl	0 <_ZdlPv>
  58:	ldp	x19, x21, [x20]
  5c:	cmp	x19, x21
  60:	b.eq	80 <_ZN4llvm9SourceMgrD1Ev+0x80>  // b.none
  64:	nop
  68:	mov	x0, x19
  6c:	add	x19, x19, #0x18
  70:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
  74:	cmp	x21, x19
  78:	b.ne	68 <_ZN4llvm9SourceMgrD1Ev+0x68>  // b.any
  7c:	ldr	x21, [x20]
  80:	cbz	x21, a8 <_ZN4llvm9SourceMgrD1Ev+0xa8>
  84:	mov	x0, x21
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZdlPv>
  98:	cmp	x21, x19
  9c:	b.ne	28 <_ZN4llvm9SourceMgrD1Ev+0x28>  // b.any
  a0:	ldr	x21, [x20, #24]
  a4:	b	4c <_ZN4llvm9SourceMgrD1Ev+0x4c>
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldr	x21, [sp, #32]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Error.cpp>:
   0:	adrp	x1, 8 <_GLOBAL__sub_I_Error.cpp+0x8>
   4:	adrp	x2, 0 <__dso_handle>
   8:	movi	v0.4s, #0x0
   c:	add	x2, x2, #0x0
  10:	ldr	x1, [x1]
  14:	adrp	x0, 0 <_GLOBAL__sub_I_Error.cpp>
  18:	add	x0, x0, #0x0
  1c:	stp	xzr, xzr, [x1, #48]
  20:	stp	q0, q0, [x1]
  24:	str	q0, [x1, #32]
  28:	b	0 <__cxa_atexit>

JSONBackend.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>:
       0:	cbz	x0, 3c <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0+0x3c>
       4:	stp	x29, x30, [sp, #-32]!
       8:	mov	x1, x0
       c:	mov	x29, sp
      10:	str	x19, [sp, #16]
      14:	mov	x19, x0
      18:	ldr	x0, [x1], #16
      1c:	cmp	x0, x1
      20:	b.eq	28 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0+0x28>  // b.none
      24:	bl	0 <_ZdlPv>
      28:	mov	x0, x19
      2c:	mov	x1, #0x20                  	// #32
      30:	ldr	x19, [sp, #16]
      34:	ldp	x29, x30, [sp], #32
      38:	b	0 <_ZdlPvm>
      3c:	ret

0000000000000040 <_ZN4llvm13isa_impl_wrapINS_10StringInitEPKNS_4InitES4_E4doitERKS4_.isra.0.part.0>:
      40:	stp	x29, x30, [sp, #-16]!
      44:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      48:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      4c:	mov	x29, sp
      50:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      54:	add	x3, x3, #0x0
      58:	add	x1, x1, #0x0
      5c:	add	x0, x0, #0x0
      60:	mov	w2, #0x69                  	// #105
      64:	bl	0 <__assert_fail>

0000000000000068 <_ZN4llvm3isaINS_7BitInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
      68:	stp	x29, x30, [sp, #-16]!
      6c:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      70:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      74:	mov	x29, sp
      78:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      7c:	add	x3, x3, #0x0
      80:	add	x1, x1, #0x0
      84:	add	x0, x0, #0x0
      88:	mov	w2, #0x69                  	// #105
      8c:	bl	0 <__assert_fail>

0000000000000090 <_ZN4llvm3isaINS_8BitsInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
      90:	stp	x29, x30, [sp, #-16]!
      94:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      98:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      9c:	mov	x29, sp
      a0:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      a4:	add	x3, x3, #0x0
      a8:	add	x1, x1, #0x0
      ac:	add	x0, x0, #0x0
      b0:	mov	w2, #0x69                  	// #105
      b4:	bl	0 <__assert_fail>

00000000000000b8 <_ZN4llvm3isaINS_7IntInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
      b8:	stp	x29, x30, [sp, #-16]!
      bc:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      c0:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      c4:	mov	x29, sp
      c8:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      cc:	add	x3, x3, #0x0
      d0:	add	x1, x1, #0x0
      d4:	add	x0, x0, #0x0
      d8:	mov	w2, #0x69                  	// #105
      dc:	bl	0 <__assert_fail>

00000000000000e0 <_ZN4llvm3isaINS_8CodeInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
      e0:	stp	x29, x30, [sp, #-16]!
      e4:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      e8:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      ec:	mov	x29, sp
      f0:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
      f4:	add	x3, x3, #0x0
      f8:	add	x1, x1, #0x0
      fc:	add	x0, x0, #0x0
     100:	mov	w2, #0x69                  	// #105
     104:	bl	0 <__assert_fail>

0000000000000108 <_ZN4llvm3isaINS_8ListInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
     108:	stp	x29, x30, [sp, #-16]!
     10c:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     110:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     114:	mov	x29, sp
     118:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     11c:	add	x3, x3, #0x0
     120:	add	x1, x1, #0x0
     124:	add	x0, x0, #0x0
     128:	mov	w2, #0x69                  	// #105
     12c:	bl	0 <__assert_fail>

0000000000000130 <_ZN4llvm3isaINS_7DefInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
     130:	stp	x29, x30, [sp, #-16]!
     134:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     138:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     13c:	mov	x29, sp
     140:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     144:	add	x3, x3, #0x0
     148:	add	x1, x1, #0x0
     14c:	add	x0, x0, #0x0
     150:	mov	w2, #0x69                  	// #105
     154:	bl	0 <__assert_fail>

0000000000000158 <_ZN4llvm13isa_impl_wrapINS_7VarInitEPKNS_4InitES4_E4doitERKS4_.isra.0.part.0>:
     158:	stp	x29, x30, [sp, #-16]!
     15c:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     160:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     164:	mov	x29, sp
     168:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     16c:	add	x3, x3, #0x0
     170:	add	x1, x1, #0x0
     174:	add	x0, x0, #0x0
     178:	mov	w2, #0x69                  	// #105
     17c:	bl	0 <__assert_fail>

0000000000000180 <_ZN4llvm3isaINS_10VarBitInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
     180:	stp	x29, x30, [sp, #-16]!
     184:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     188:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     18c:	mov	x29, sp
     190:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     194:	add	x3, x3, #0x0
     198:	add	x1, x1, #0x0
     19c:	add	x0, x0, #0x0
     1a0:	mov	w2, #0x69                  	// #105
     1a4:	bl	0 <__assert_fail>

00000000000001a8 <_ZN4llvm3isaINS_7DagInitEPKNS_4InitEEEbRKT0_.isra.0.part.0>:
     1a8:	stp	x29, x30, [sp, #-16]!
     1ac:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     1b0:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     1b4:	mov	x29, sp
     1b8:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     1bc:	add	x3, x3, #0x0
     1c0:	add	x1, x1, #0x0
     1c4:	add	x0, x0, #0x0
     1c8:	mov	w2, #0x69                  	// #105
     1cc:	bl	0 <__assert_fail>

00000000000001d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>:
     1d0:	stp	x29, x30, [sp, #-304]!
     1d4:	mov	x29, sp
     1d8:	stp	x25, x26, [sp, #64]
     1dc:	mov	x26, x8
     1e0:	stp	x27, x28, [sp, #80]
     1e4:	mov	x28, x1
     1e8:	ldrb	w1, [x1, #8]
     1ec:	cmp	w1, #0x18
     1f0:	b.ne	20c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x3c>  // b.any
     1f4:	strb	wzr, [x8]
     1f8:	mov	x0, x26
     1fc:	ldp	x25, x26, [sp, #64]
     200:	ldp	x27, x28, [sp, #80]
     204:	ldp	x29, x30, [sp], #304
     208:	ret
     20c:	cmp	w1, #0x2
     210:	b.eq	3c4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1f4>  // b.none
     214:	mov	x27, x0
     218:	cmp	w1, #0x3
     21c:	b.eq	3ec <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x21c>  // b.none
     220:	cmp	w1, #0x8
     224:	b.eq	4d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x300>  // b.none
     228:	cmp	w1, #0x12
     22c:	b.eq	4e4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x314>  // b.none
     230:	cmp	w1, #0x4
     234:	b.eq	530 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x360>  // b.none
     238:	stp	x19, x20, [sp, #16]
     23c:	cmp	w1, #0x9
     240:	stp	x21, x22, [sp, #32]
     244:	b.eq	540 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x370>  // b.none
     248:	add	x22, sp, #0xa0
     24c:	add	x21, sp, #0xc0
     250:	mov	x0, x22
     254:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     258:	add	x1, x1, #0x0
     25c:	stp	x23, x24, [sp, #48]
     260:	add	x20, sp, #0xe0
     264:	stp	xzr, xzr, [sp, #192]
     268:	add	x19, sp, #0x100
     26c:	str	xzr, [sp, #208]
     270:	str	wzr, [sp, #216]
     274:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     278:	mov	x1, x22
     27c:	mov	x0, x21
     280:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     284:	mov	x23, x0
     288:	ldr	x1, [x28]
     28c:	mov	x8, x20
     290:	mov	x0, x28
     294:	ldr	x1, [x1, #40]
     298:	blr	x1
     29c:	mov	x1, x20
     2a0:	mov	x0, x19
     2a4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     2a8:	mov	x0, x23
     2ac:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     2b0:	mov	x1, x19
     2b4:	mov	x0, x23
     2b8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     2bc:	mov	x0, x19
     2c0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     2c4:	ldr	x0, [sp, #224]
     2c8:	add	x1, x20, #0x10
     2cc:	cmp	x0, x1
     2d0:	b.eq	2d8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x108>  // b.none
     2d4:	bl	0 <_ZdlPv>
     2d8:	ldr	x0, [sp, #160]
     2dc:	cbz	x0, 2e4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x114>
     2e0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     2e4:	ldrb	w0, [x28, #8]
     2e8:	cmp	w0, #0x6
     2ec:	b.eq	b10 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x940>  // b.none
     2f0:	cmp	w0, #0x13
     2f4:	b.eq	a80 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x8b0>  // b.none
     2f8:	cmp	w0, #0x15
     2fc:	b.eq	97c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x7ac>  // b.none
     300:	cmp	w0, #0x5
     304:	b.eq	60c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x43c>  // b.none
     308:	ldr	x1, [x28]
     30c:	mov	x0, x28
     310:	ldr	x1, [x1, #32]
     314:	blr	x1
     318:	tst	w0, #0xff
     31c:	b.ne	5ec <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x41c>  // b.any
     320:	mov	x0, x20
     324:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     328:	add	x1, x1, #0x0
     32c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     330:	mov	x1, x20
     334:	mov	x0, x21
     338:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     33c:	mov	x20, x0
     340:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     344:	mov	x0, x19
     348:	add	x1, x1, #0x0
     34c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     350:	mov	x0, x20
     354:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     358:	mov	x1, x19
     35c:	mov	x0, x20
     360:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     364:	mov	x0, x19
     368:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     36c:	ldr	x0, [sp, #224]
     370:	cbz	x0, 378 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1a8>
     374:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     378:	ldp	x0, x4, [sp, #192]
     37c:	mov	w6, #0x6                   	// #6
     380:	ldr	w1, [sp, #216]
     384:	mov	x5, #0x1                   	// #1
     388:	str	wzr, [sp, #216]
     38c:	ldr	x2, [sp, #208]
     390:	str	xzr, [sp, #208]
     394:	add	x0, x0, #0x1
     398:	stp	x0, xzr, [sp, #192]
     39c:	strb	w6, [x26]
     3a0:	stp	x5, x4, [x26, #8]
     3a4:	str	x2, [x26, #24]
     3a8:	str	w1, [x26, #32]
     3ac:	mov	x0, x21
     3b0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     3b4:	ldp	x19, x20, [sp, #16]
     3b8:	ldp	x21, x22, [sp, #32]
     3bc:	ldp	x23, x24, [sp, #48]
     3c0:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     3c4:	ldrb	w0, [x28, #24]
     3c8:	mov	w1, #0x3                   	// #3
     3cc:	strb	w1, [x8]
     3d0:	and	x0, x0, #0xff
     3d4:	str	x0, [x8, #8]
     3d8:	mov	x0, x26
     3dc:	ldp	x25, x26, [sp, #64]
     3e0:	ldp	x27, x28, [sp, #80]
     3e4:	ldp	x29, x30, [sp], #304
     3e8:	ret
     3ec:	stp	x21, x22, [sp, #32]
     3f0:	ldr	w21, [x28, #32]
     3f4:	stp	xzr, xzr, [sp, #224]
     3f8:	str	xzr, [sp, #240]
     3fc:	cbz	w21, 4c0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2f0>
     400:	mov	w0, w21
     404:	add	x22, x28, #0x28
     408:	stp	x19, x20, [sp, #16]
     40c:	add	x20, sp, #0x100
     410:	mov	x19, #0x0                   	// #0
     414:	stp	x23, x24, [sp, #48]
     418:	add	x23, sp, #0xe0
     41c:	cmp	w0, w19
     420:	b.ls	5cc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x3fc>  // b.plast
     424:	ldr	x1, [x22, x19, lsl #3]
     428:	mov	x0, x27
     42c:	mov	x8, x20
     430:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     434:	ldp	x0, x1, [sp, #232]
     438:	cmp	x0, x1
     43c:	b.eq	470 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2a0>  // b.none
     440:	mov	x1, x20
     444:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     448:	ldr	x1, [sp, #232]
     44c:	add	x19, x19, #0x1
     450:	mov	x0, x20
     454:	add	x1, x1, #0x28
     458:	str	x1, [sp, #232]
     45c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     460:	cmp	w21, w19
     464:	b.ls	494 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2c4>  // b.plast
     468:	ldr	w0, [x28, #32]
     46c:	b	41c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x24c>
     470:	mov	x1, x0
     474:	mov	x2, x20
     478:	mov	x0, x23
     47c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     480:	add	x19, x19, #0x1
     484:	mov	x0, x20
     488:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     48c:	cmp	w21, w19
     490:	b.hi	468 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x298>  // b.pmore
     494:	ldp	x19, x20, [sp, #16]
     498:	ldp	x23, x24, [sp, #48]
     49c:	ldp	x5, x4, [sp, #224]
     4a0:	ldr	x2, [sp, #240]
     4a4:	mov	x0, x26
     4a8:	mov	w1, #0x7                   	// #7
     4ac:	ldp	x21, x22, [sp, #32]
     4b0:	strb	w1, [x0], #8
     4b4:	str	x5, [x26, #8]
     4b8:	stp	x4, x2, [x0, #8]
     4bc:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     4c0:	mov	x2, #0x0                   	// #0
     4c4:	mov	x5, #0x0                   	// #0
     4c8:	mov	x4, #0x0                   	// #0
     4cc:	b	4a4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2d4>
     4d0:	ldr	x0, [x28, #24]
     4d4:	mov	w1, #0x3                   	// #3
     4d8:	strb	w1, [x8]
     4dc:	str	x0, [x8, #8]
     4e0:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     4e4:	ldp	x0, x1, [x28, #24]
     4e8:	mov	w2, #0x4                   	// #4
     4ec:	strb	w2, [x8]
     4f0:	mov	x2, #0x0                   	// #0
     4f4:	stp	x0, x1, [x8, #8]
     4f8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     4fc:	tst	w0, #0xff
     500:	b.ne	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>  // b.any
     504:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     508:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     50c:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     510:	add	x3, x3, #0x0
     514:	add	x1, x1, #0x0
     518:	add	x0, x0, #0x0
     51c:	mov	w2, #0x144                 	// #324
     520:	stp	x19, x20, [sp, #16]
     524:	stp	x21, x22, [sp, #32]
     528:	stp	x23, x24, [sp, #48]
     52c:	bl	0 <__assert_fail>
     530:	ldp	x1, x2, [x28, #24]
     534:	mov	x0, x8
     538:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     53c:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     540:	ldr	w19, [x28, #32]
     544:	mov	x0, #0x28                  	// #40
     548:	add	x20, sp, #0xe0
     54c:	add	x22, x28, x0
     550:	add	x21, sp, #0x100
     554:	stp	xzr, xzr, [sp, #224]
     558:	add	x19, x0, w19, uxtw #3
     55c:	add	x19, x28, x19
     560:	str	xzr, [sp, #240]
     564:	cmp	x19, x22
     568:	b.eq	594 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x3c4>  // b.none
     56c:	ldr	x1, [x22], #8
     570:	mov	x8, x21
     574:	mov	x0, x27
     578:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     57c:	mov	x1, x21
     580:	mov	x0, x20
     584:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     588:	mov	x0, x21
     58c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     590:	b	564 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x394>
     594:	ldr	q0, [sp, #224]
     598:	mov	x1, x26
     59c:	mov	w0, #0x7                   	// #7
     5a0:	strb	w0, [x26]
     5a4:	ldr	x2, [sp, #240]
     5a8:	str	q0, [x1, #8]!
     5ac:	mov	x0, x20
     5b0:	str	x2, [x1, #16]
     5b4:	stp	xzr, xzr, [sp, #224]
     5b8:	str	xzr, [sp, #240]
     5bc:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5c0:	ldp	x19, x20, [sp, #16]
     5c4:	ldp	x21, x22, [sp, #32]
     5c8:	b	1f8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x28>
     5cc:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5d0:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5d4:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5d8:	add	x3, x3, #0x0
     5dc:	add	x1, x1, #0x0
     5e0:	add	x0, x0, #0x0
     5e4:	mov	w2, #0x22e                 	// #558
     5e8:	bl	0 <__assert_fail>
     5ec:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5f0:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5f4:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     5f8:	add	x3, x3, #0x0
     5fc:	add	x1, x1, #0x0
     600:	add	x0, x0, #0x0
     604:	mov	w2, #0x75                  	// #117
     608:	bl	0 <__assert_fail>
     60c:	mov	x0, x20
     610:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     614:	add	x1, x1, #0x0
     618:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     61c:	mov	x1, x20
     620:	mov	x0, x21
     624:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     628:	mov	x23, x0
     62c:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     630:	add	x1, x1, #0x0
     634:	mov	x0, x19
     638:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     63c:	mov	x0, x23
     640:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     644:	mov	x1, x19
     648:	mov	x0, x23
     64c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     650:	mov	x0, x19
     654:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     658:	ldr	x0, [sp, #224]
     65c:	cbz	x0, 664 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x494>
     660:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     664:	mov	x0, x20
     668:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     66c:	add	x1, x1, #0x0
     670:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     674:	mov	x1, x20
     678:	mov	x0, x21
     67c:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     680:	mov	x23, x0
     684:	ldr	x1, [x28, #32]
     688:	mov	x8, x19
     68c:	mov	x0, x27
     690:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     694:	mov	x0, x23
     698:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     69c:	mov	x1, x19
     6a0:	mov	x0, x23
     6a4:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     6a8:	mov	x0, x19
     6ac:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     6b0:	ldr	x0, [sp, #224]
     6b4:	cbz	x0, 6bc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x4ec>
     6b8:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     6bc:	ldr	x24, [x28, #40]
     6c0:	cbz	x24, 740 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x570>
     6c4:	mov	x0, x22
     6c8:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     6cc:	add	x1, x1, #0x0
     6d0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     6d4:	mov	x1, x22
     6d8:	mov	x0, x21
     6dc:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     6e0:	mov	x23, x0
     6e4:	ldr	x1, [x24]
     6e8:	mov	x8, x20
     6ec:	mov	x0, x24
     6f0:	ldr	x1, [x1, #48]
     6f4:	blr	x1
     6f8:	mov	x1, x20
     6fc:	mov	x0, x19
     700:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     704:	mov	x0, x23
     708:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     70c:	mov	x1, x19
     710:	mov	x0, x23
     714:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     718:	mov	x0, x19
     71c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     720:	ldr	x0, [sp, #224]
     724:	add	x1, x20, #0x10
     728:	cmp	x0, x1
     72c:	b.eq	734 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x564>  // b.none
     730:	bl	0 <_ZdlPv>
     734:	ldr	x0, [sp, #160]
     738:	cbz	x0, 740 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x570>
     73c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     740:	ldr	w0, [x28, #48]
     744:	add	x25, sp, #0x80
     748:	movi	v0.4s, #0x0
     74c:	str	w0, [sp, #120]
     750:	add	x0, x28, #0x38
     754:	mov	x23, #0x0                   	// #0
     758:	mov	x24, #0x38                  	// #56
     75c:	str	x0, [sp, #96]
     760:	add	x0, x20, #0x10
     764:	str	x0, [sp, #104]
     768:	str	xzr, [sp, #144]
     76c:	str	q0, [sp, #128]
     770:	ldr	w0, [sp, #120]
     774:	cmp	w0, w23
     778:	b.ls	8d4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x704>  // b.plast
     77c:	ldr	w0, [x28, #48]
     780:	stp	xzr, xzr, [sp, #160]
     784:	cmp	w23, w0
     788:	str	xzr, [sp, #176]
     78c:	b.cs	8b4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x6e4>  // b.hs, b.nlast
     790:	ldr	x0, [sp, #96]
     794:	lsl	x2, x23, #3
     798:	mov	x8, x19
     79c:	str	x2, [sp, #112]
     7a0:	str	w23, [sp, #124]
     7a4:	ldr	x1, [x0, x23, lsl #3]
     7a8:	mov	x0, x27
     7ac:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     7b0:	mov	x1, x19
     7b4:	mov	x0, x22
     7b8:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     7bc:	mov	x0, x19
     7c0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     7c4:	ldr	w0, [x28, #52]
     7c8:	ldr	w6, [sp, #124]
     7cc:	ldr	x2, [sp, #112]
     7d0:	cmp	w6, w0
     7d4:	b.cs	894 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x6c4>  // b.hs, b.nlast
     7d8:	ldr	w0, [x28, #48]
     7dc:	add	x2, x28, x2
     7e0:	add	x0, x24, w0, uxtw #3
     7e4:	ldr	x0, [x2, x0]
     7e8:	cbz	x0, 878 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x6a8>
     7ec:	ldr	x1, [x0]
     7f0:	mov	x8, x20
     7f4:	ldr	x1, [x1, #48]
     7f8:	blr	x1
     7fc:	mov	x1, x20
     800:	mov	x0, x19
     804:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     808:	mov	x1, x19
     80c:	mov	x0, x22
     810:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     814:	mov	x0, x19
     818:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     81c:	ldr	x1, [sp, #104]
     820:	ldr	x0, [sp, #224]
     824:	cmp	x0, x1
     828:	b.eq	830 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x660>  // b.none
     82c:	bl	0 <_ZdlPv>
     830:	ldr	q0, [sp, #160]
     834:	add	x3, sp, #0x200
     838:	ldr	x2, [sp, #176]
     83c:	mov	w6, #0x7                   	// #7
     840:	strb	w6, [sp, #256]
     844:	mov	x1, x19
     848:	mov	x0, x25
     84c:	stp	xzr, xzr, [sp, #160]
     850:	add	x23, x23, #0x1
     854:	stur	q0, [x3, #-248]
     858:	str	xzr, [sp, #176]
     85c:	str	x2, [sp, #280]
     860:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     864:	mov	x0, x19
     868:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     86c:	mov	x0, x22
     870:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     874:	b	770 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x5a0>
     878:	mov	x1, x19
     87c:	mov	x0, x22
     880:	strb	wzr, [sp, #256]
     884:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     888:	mov	x0, x19
     88c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     890:	b	830 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x660>
     894:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     898:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     89c:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     8a0:	add	x3, x3, #0x0
     8a4:	add	x1, x1, #0x0
     8a8:	add	x0, x0, #0x0
     8ac:	mov	w2, #0x545                 	// #1349
     8b0:	bl	0 <__assert_fail>
     8b4:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     8b8:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     8bc:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     8c0:	add	x3, x3, #0x0
     8c4:	add	x1, x1, #0x0
     8c8:	add	x0, x0, #0x0
     8cc:	mov	w2, #0x540                 	// #1344
     8d0:	bl	0 <__assert_fail>
     8d4:	mov	x0, x20
     8d8:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     8dc:	add	x1, x1, #0x0
     8e0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     8e4:	mov	x1, x20
     8e8:	mov	x0, x21
     8ec:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     8f0:	mov	x20, x0
     8f4:	mov	w2, #0x7                   	// #7
     8f8:	strb	w2, [sp, #256]
     8fc:	ldr	q0, [sp, #128]
     900:	add	x2, sp, #0x200
     904:	ldr	x1, [sp, #144]
     908:	stp	xzr, xzr, [sp, #128]
     90c:	stur	q0, [x2, #-248]
     910:	str	xzr, [sp, #144]
     914:	str	x1, [sp, #280]
     918:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     91c:	mov	x1, x19
     920:	mov	x0, x20
     924:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     928:	mov	x0, x19
     92c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     930:	ldr	x0, [sp, #224]
     934:	cbz	x0, 93c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x76c>
     938:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     93c:	ldp	x1, x5, [sp, #192]
     940:	mov	w2, #0x6                   	// #6
     944:	strb	w2, [x26]
     948:	mov	x0, #0x1                   	// #1
     94c:	ldr	w2, [sp, #216]
     950:	ldr	x4, [sp, #208]
     954:	stp	x0, x5, [x26, #8]
     958:	add	x1, x1, x0
     95c:	str	x4, [x26, #24]
     960:	add	x0, sp, #0x80
     964:	str	w2, [x26, #32]
     968:	stp	x1, xzr, [sp, #192]
     96c:	str	xzr, [sp, #208]
     970:	str	wzr, [sp, #216]
     974:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     978:	b	3ac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1dc>
     97c:	ldr	x23, [x28, #24]
     980:	cbz	x23, a7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x8ac>
     984:	ldrb	w0, [x23, #8]
     988:	cmp	w0, #0x13
     98c:	b.ne	308 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x138>  // b.any
     990:	mov	x0, x20
     994:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     998:	add	x1, x1, #0x0
     99c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9a0:	mov	x1, x20
     9a4:	mov	x0, x21
     9a8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     9ac:	mov	x22, x0
     9b0:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9b4:	add	x1, x1, #0x0
     9b8:	mov	x0, x19
     9bc:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9c0:	mov	x0, x22
     9c4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     9c8:	mov	x1, x19
     9cc:	mov	x0, x22
     9d0:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     9d4:	mov	x0, x19
     9d8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     9dc:	ldr	x0, [sp, #224]
     9e0:	cbz	x0, 9e8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x818>
     9e4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9e8:	mov	x0, x20
     9ec:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9f0:	add	x1, x1, #0x0
     9f4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     9f8:	mov	x1, x20
     9fc:	mov	x0, x21
     a00:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     a04:	mov	x22, x0
     a08:	mov	x0, x23
     a0c:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
     a10:	mov	x2, x1
     a14:	mov	x1, x0
     a18:	mov	x0, x19
     a1c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a20:	mov	x0, x22
     a24:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     a28:	mov	x1, x19
     a2c:	mov	x0, x22
     a30:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     a34:	mov	x0, x19
     a38:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     a3c:	ldr	x0, [sp, #224]
     a40:	cbz	x0, a48 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x878>
     a44:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a48:	mov	x0, x20
     a4c:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a50:	add	x1, x1, #0x0
     a54:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a58:	mov	x1, x20
     a5c:	mov	x0, x21
     a60:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     a64:	mov	x20, x0
     a68:	ldr	w1, [x28, #32]
     a6c:	mov	w2, #0x3                   	// #3
     a70:	strb	w2, [sp, #256]
     a74:	str	x1, [sp, #264]
     a78:	b	354 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x184>
     a7c:	bl	158 <_ZN4llvm13isa_impl_wrapINS_7VarInitEPKNS_4InitES4_E4doitERKS4_.isra.0.part.0>
     a80:	mov	x0, x20
     a84:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a88:	add	x1, x1, #0x0
     a8c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     a90:	mov	x1, x20
     a94:	mov	x0, x21
     a98:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     a9c:	adrp	x23, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     aa0:	add	x1, x23, #0x0
     aa4:	mov	x22, x0
     aa8:	mov	x0, x19
     aac:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ab0:	mov	x0, x22
     ab4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     ab8:	mov	x1, x19
     abc:	mov	x0, x22
     ac0:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     ac4:	mov	x0, x19
     ac8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     acc:	ldr	x0, [sp, #224]
     ad0:	cbz	x0, ad8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x908>
     ad4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ad8:	add	x1, x23, #0x0
     adc:	mov	x0, x20
     ae0:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ae4:	mov	x1, x20
     ae8:	mov	x0, x21
     aec:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     af0:	mov	x20, x0
     af4:	mov	x0, x28
     af8:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
     afc:	mov	x2, x1
     b00:	mov	x1, x0
     b04:	mov	x0, x19
     b08:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b0c:	b	350 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x180>
     b10:	mov	x0, x20
     b14:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b18:	add	x1, x1, #0x0
     b1c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b20:	mov	x1, x20
     b24:	mov	x0, x21
     b28:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     b2c:	adrp	x23, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b30:	add	x1, x23, #0x0
     b34:	mov	x22, x0
     b38:	mov	x0, x19
     b3c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b40:	mov	x0, x22
     b44:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     b48:	mov	x1, x19
     b4c:	mov	x0, x22
     b50:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     b54:	mov	x0, x19
     b58:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     b5c:	ldr	x0, [sp, #224]
     b60:	cbz	x0, b68 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x998>
     b64:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b68:	mov	x0, x20
     b6c:	add	x1, x23, #0x0
     b70:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     b74:	mov	x1, x20
     b78:	mov	x0, x21
     b7c:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     b80:	mov	x20, x0
     b84:	ldr	x1, [x28, #24]
     b88:	ldr	x2, [x1]
     b8c:	cbz	x2, bac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x9dc>
     b90:	ldrb	w0, [x2, #8]
     b94:	cmp	w0, #0x12
     b98:	b.ne	bb0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x9e0>  // b.any
     b9c:	ldp	x1, x2, [x2, #24]
     ba0:	mov	x0, x19
     ba4:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ba8:	b	350 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x180>
     bac:	bl	40 <_ZN4llvm13isa_impl_wrapINS_10StringInitEPKNS_4InitES4_E4doitERKS4_.isra.0.part.0>
     bb0:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     bb4:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     bb8:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     bbc:	add	x3, x3, #0x0
     bc0:	add	x1, x1, #0x0
     bc4:	add	x0, x0, #0x0
     bc8:	mov	w2, #0x108                 	// #264
     bcc:	bl	0 <__assert_fail>

0000000000000bd0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE>:
     bd0:	sub	sp, sp, #0x3d0
     bd4:	mov	x3, #0x16                  	// #22
     bd8:	adrp	x2, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     bdc:	add	x2, x2, #0x0
     be0:	stp	x29, x30, [sp]
     be4:	mov	x29, sp
     be8:	stp	xzr, x2, [sp, #280]
     bec:	mov	x2, x1
     bf0:	str	x3, [sp, #296]
     bf4:	str	x0, [sp, #152]
     bf8:	ldp	x0, x1, [sp, #288]
     bfc:	stp	x19, x20, [sp, #16]
     c00:	stp	x21, x22, [sp, #32]
     c04:	stp	x23, x24, [sp, #48]
     c08:	stp	x25, x26, [sp, #64]
     c0c:	stp	x27, x28, [sp, #80]
     c10:	str	x2, [sp, #144]
     c14:	mov	x2, #0x0                   	// #0
     c18:	stp	xzr, xzr, [sp, #352]
     c1c:	str	xzr, [sp, #368]
     c20:	str	wzr, [sp, #376]
     c24:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     c28:	tst	w0, #0xff
     c2c:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
     c30:	add	x1, sp, #0x118
     c34:	add	x0, sp, #0x160
     c38:	str	x0, [sp, #176]
     c3c:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     c40:	mov	w2, #0x3                   	// #3
     c44:	mov	x1, #0x1                   	// #1
     c48:	mov	x19, x0
     c4c:	add	x22, sp, #0x330
     c50:	strb	w2, [sp, #816]
     c54:	str	x1, [sp, #824]
     c58:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     c5c:	mov	x1, x22
     c60:	mov	x0, x19
     c64:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     c68:	mov	x0, x22
     c6c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     c70:	ldr	x19, [sp, #280]
     c74:	cbz	x19, c98 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc8>
     c78:	mov	x1, x19
     c7c:	ldr	x0, [x1], #16
     c80:	cmp	x0, x1
     c84:	b.eq	c8c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xbc>  // b.none
     c88:	bl	0 <_ZdlPv>
     c8c:	mov	x0, x19
     c90:	mov	x1, #0x20                  	// #32
     c94:	bl	0 <_ZdlPvm>
     c98:	ldr	x0, [sp, #152]
     c9c:	add	x24, sp, #0x308
     ca0:	str	x24, [sp, #792]
     ca4:	add	x1, sp, #0x300
     ca8:	str	x24, [sp, #800]
     cac:	ldr	x0, [x0]
     cb0:	str	x1, [sp, #104]
     cb4:	str	wzr, [sp, #776]
     cb8:	add	x1, x0, #0x8
     cbc:	str	x1, [sp, #112]
     cc0:	ldr	x21, [x0, #24]
     cc4:	str	xzr, [sp, #784]
     cc8:	str	xzr, [sp, #808]
     ccc:	cmp	x21, x1
     cd0:	b.eq	e04 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x234>  // b.none
     cd4:	add	x0, sp, #0x2a8
     cd8:	adrp	x26, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     cdc:	str	x0, [sp, #120]
     ce0:	add	x0, x26, #0x0
     ce4:	str	x0, [sp, #136]
     ce8:	add	x0, sp, #0x2d0
     cec:	str	x0, [sp, #128]
     cf0:	ldr	x0, [x21, #64]
     cf4:	mov	x8, x22
     cf8:	mov	x20, x24
     cfc:	ldr	x0, [x0]
     d00:	ldr	x1, [x0]
     d04:	ldr	x1, [x1, #48]
     d08:	blr	x1
     d0c:	ldr	x19, [sp, #784]
     d10:	cbz	x19, db4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1e4>
     d14:	ldr	x28, [sp, #816]
     d18:	mov	x23, #0x7fffffff            	// #2147483647
     d1c:	ldr	x27, [sp, #824]
     d20:	mov	x25, #0xffffffff80000000    	// #-2147483648
     d24:	nop
     d28:	ldr	x26, [x19, #40]
     d2c:	cmp	x26, x27
     d30:	csel	x2, x26, x27, ls  // ls = plast
     d34:	cbz	x2, d48 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x178>
     d38:	ldr	x0, [x19, #32]
     d3c:	mov	x1, x28
     d40:	bl	0 <memcmp>
     d44:	cbnz	w0, d5c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x18c>
     d48:	sub	x0, x26, x27
     d4c:	cmp	x0, x23
     d50:	b.gt	d60 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x190>
     d54:	cmp	x0, x25
     d58:	b.lt	1bc8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xff8>  // b.tstop
     d5c:	tbnz	w0, #31, 1bc8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xff8>
     d60:	mov	x20, x19
     d64:	ldr	x19, [x19, #16]
     d68:	cbnz	x19, d28 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x158>
     d6c:	cmp	x20, x24
     d70:	b.eq	db4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1e4>  // b.none
     d74:	ldr	x19, [x20, #40]
     d78:	cmp	x27, x19
     d7c:	csel	x2, x27, x19, ls  // ls = plast
     d80:	cbz	x2, d94 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1c4>
     d84:	ldr	x1, [x20, #32]
     d88:	mov	x0, x28
     d8c:	bl	0 <memcmp>
     d90:	cbnz	w0, db0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1e0>
     d94:	sub	x0, x27, x19
     d98:	mov	x1, #0x7fffffff            	// #2147483647
     d9c:	cmp	x0, x1
     da0:	b.gt	dd0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x200>
     da4:	mov	x1, #0xffffffff80000000    	// #-2147483648
     da8:	cmp	x0, x1
     dac:	b.lt	db4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1e4>  // b.tstop
     db0:	tbz	w0, #31, dd0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x200>
     db4:	ldp	x4, x3, [sp, #120]
     db8:	mov	x1, x20
     dbc:	ldr	x0, [sp, #104]
     dc0:	str	x22, [sp, #720]
     dc4:	ldr	x2, [sp, #136]
     dc8:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     dcc:	ldr	x28, [sp, #816]
     dd0:	add	x0, x22, #0x10
     dd4:	cmp	x28, x0
     dd8:	b.eq	de4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x214>  // b.none
     ddc:	mov	x0, x28
     de0:	bl	0 <_ZdlPv>
     de4:	mov	x0, x21
     de8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     dec:	mov	x21, x0
     df0:	ldr	x0, [sp, #112]
     df4:	cmp	x0, x21
     df8:	b.ne	cf0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x120>  // b.any
     dfc:	ldr	x0, [sp, #152]
     e00:	ldr	x0, [x0]
     e04:	add	x1, x0, #0x38
     e08:	ldr	x21, [x0, #72]
     e0c:	add	x0, sp, #0x180
     e10:	str	x1, [sp, #160]
     e14:	str	x0, [sp, #184]
     e18:	cmp	x21, x1
     e1c:	b.eq	16e8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb18>  // b.none
     e20:	add	x0, sp, #0x1c0
     e24:	add	x19, sp, #0x210
     e28:	add	x1, sp, #0x200
     e2c:	str	x1, [sp, #112]
     e30:	str	x0, [sp, #192]
     e34:	add	x0, sp, #0x1d0
     e38:	str	x0, [sp, #136]
     e3c:	ldr	x0, [x21, #64]
     e40:	add	x26, sp, #0x220
     e44:	ldr	x8, [sp, #184]
     e48:	ldr	x0, [x0]
     e4c:	ldr	x1, [x0]
     e50:	ldr	x1, [x1, #48]
     e54:	blr	x1
     e58:	stp	xzr, xzr, [sp, #224]
     e5c:	mov	w1, #0x18                  	// #24
     e60:	ldr	x20, [x21, #64]
     e64:	str	xzr, [sp, #240]
     e68:	stp	xzr, xzr, [sp, #416]
     e6c:	ldr	w24, [x20, #80]
     e70:	ldr	x0, [x20, #72]
     e74:	str	xzr, [sp, #432]
     e78:	str	wzr, [sp, #440]
     e7c:	mov	x23, x0
     e80:	umaddl	x24, w24, w1, x0
     e84:	cmp	x24, x0
     e88:	b.eq	edc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x30c>  // b.none
     e8c:	ldr	x27, [sp, #152]
     e90:	str	x21, [sp, #120]
     e94:	ldr	x28, [sp, #192]
     e98:	ldr	x1, [x20, #56]
     e9c:	ldr	w3, [x20, #64]
     ea0:	ldr	x0, [x23]
     ea4:	add	x3, x1, x3, lsl #3
     ea8:	cmp	x1, x3
     eac:	b.ne	ec0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2f0>  // b.any
     eb0:	b	1bd4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1004>
     eb4:	add	x1, x1, #0x8
     eb8:	cmp	x3, x1
     ebc:	b.eq	1bd4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1004>  // b.none
     ec0:	ldr	x2, [x1]
     ec4:	cmp	x0, x2
     ec8:	b.ne	eb4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2e4>  // b.any
     ecc:	add	x23, x23, #0x18
     ed0:	cmp	x24, x23
     ed4:	b.ne	e98 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2c8>  // b.any
     ed8:	ldr	x21, [sp, #120]
     edc:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
     ee0:	add	x0, x0, #0x0
     ee4:	stp	xzr, x0, [sp, #304]
     ee8:	add	x0, sp, #0x200
     eec:	mov	x23, #0x7                   	// #7
     ef0:	str	x23, [sp, #320]
     ef4:	mov	x2, #0x0                   	// #0
     ef8:	ldp	x0, x1, [x0, #-200]
     efc:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     f00:	tst	w0, #0xff
     f04:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
     f08:	add	x26, sp, #0x1a0
     f0c:	add	x1, sp, #0x130
     f10:	mov	x0, x26
     f14:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     f18:	ldr	q0, [sp, #224]
     f1c:	add	x2, sp, #0x280
     f20:	ldr	x1, [sp, #240]
     f24:	strb	w23, [sp, #816]
     f28:	mov	x23, x0
     f2c:	stp	xzr, xzr, [sp, #224]
     f30:	stur	q0, [x2, #184]
     f34:	str	xzr, [sp, #240]
     f38:	str	x1, [sp, #840]
     f3c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     f40:	mov	x1, x22
     f44:	mov	x0, x23
     f48:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     f4c:	mov	x0, x22
     f50:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     f54:	ldr	x23, [sp, #304]
     f58:	cbz	x23, f7c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x3ac>
     f5c:	mov	x1, x23
     f60:	ldr	x0, [x1], #16
     f64:	cmp	x0, x1
     f68:	b.eq	f70 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x3a0>  // b.none
     f6c:	bl	0 <_ZdlPv>
     f70:	mov	x0, x23
     f74:	mov	x1, #0x20                  	// #32
     f78:	bl	0 <_ZdlPvm>
     f7c:	ldr	w25, [x20, #96]
     f80:	mov	w1, #0x18                  	// #24
     f84:	ldr	x0, [x20, #88]
     f88:	stp	xzr, xzr, [sp, #256]
     f8c:	str	xzr, [sp, #272]
     f90:	mov	x23, x0
     f94:	umaddl	x25, w25, w1, x0
     f98:	cmp	x25, x0
     f9c:	b.eq	105c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x48c>  // b.none
     fa0:	add	x24, sp, #0x2a8
     fa4:	add	x0, sp, #0x100
     fa8:	add	x27, x24, #0x18
     fac:	mov	w28, #0x5                   	// #5
     fb0:	str	x0, [sp, #120]
     fb4:	ldr	x0, [x23]
     fb8:	ldr	x8, [sp, #112]
     fbc:	ldr	x0, [x0]
     fc0:	ldr	x1, [x0]
     fc4:	ldr	x1, [x1, #48]
     fc8:	blr	x1
     fcc:	strb	w28, [sp, #680]
     fd0:	ldr	x0, [sp, #512]
     fd4:	mov	x2, #0x0                   	// #0
     fd8:	ldr	x1, [sp, #520]
     fdc:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     fe0:	tst	w0, #0xff
     fe4:	b.eq	1ea8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12d8>  // b.none
     fe8:	ldr	x0, [sp, #512]
     fec:	str	x27, [sp, #688]
     ff0:	cmp	x0, x19
     ff4:	b.eq	1e94 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12c4>  // b.none
     ff8:	ldr	x1, [sp, #528]
     ffc:	str	x0, [sp, #688]
    1000:	str	x1, [sp, #704]
    1004:	ldp	x0, x1, [sp, #264]
    1008:	str	x19, [sp, #512]
    100c:	ldr	x2, [sp, #520]
    1010:	str	xzr, [sp, #520]
    1014:	strb	wzr, [sp, #528]
    1018:	str	x2, [sp, #696]
    101c:	cmp	x0, x1
    1020:	b.eq	1e80 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12b0>  // b.none
    1024:	mov	x1, x24
    1028:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    102c:	ldr	x0, [sp, #264]
    1030:	add	x0, x0, #0x28
    1034:	str	x0, [sp, #264]
    1038:	mov	x0, x24
    103c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1040:	ldr	x0, [sp, #512]
    1044:	add	x23, x23, #0x18
    1048:	cmp	x0, x19
    104c:	b.eq	1e74 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12a4>  // b.none
    1050:	bl	0 <_ZdlPv>
    1054:	cmp	x25, x23
    1058:	b.ne	fb4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x3e4>  // b.any
    105c:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1060:	add	x0, x0, #0x0
    1064:	stp	xzr, x0, [sp, #448]
    1068:	add	x0, sp, #0x280
    106c:	mov	x1, #0xd                   	// #13
    1070:	str	x1, [sp, #464]
    1074:	mov	x2, #0x0                   	// #0
    1078:	ldp	x0, x1, [x0, #-184]
    107c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1080:	tst	w0, #0xff
    1084:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    1088:	ldr	x1, [sp, #192]
    108c:	mov	x0, x26
    1090:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1094:	mov	x23, x0
    1098:	mov	w2, #0x7                   	// #7
    109c:	strb	w2, [sp, #816]
    10a0:	ldr	q0, [sp, #256]
    10a4:	add	x2, sp, #0x280
    10a8:	ldr	x1, [sp, #272]
    10ac:	stp	xzr, xzr, [sp, #256]
    10b0:	stur	q0, [x2, #184]
    10b4:	str	xzr, [sp, #272]
    10b8:	str	x1, [sp, #840]
    10bc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    10c0:	mov	x1, x22
    10c4:	mov	x0, x23
    10c8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    10cc:	mov	x0, x22
    10d0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    10d4:	ldr	x23, [sp, #448]
    10d8:	cbz	x23, 10fc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x52c>
    10dc:	mov	x1, x23
    10e0:	ldr	x0, [x1], #16
    10e4:	cmp	x0, x1
    10e8:	b.eq	10f0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x520>  // b.none
    10ec:	bl	0 <_ZdlPv>
    10f0:	mov	x0, x23
    10f4:	mov	x1, #0x20                  	// #32
    10f8:	bl	0 <_ZdlPvm>
    10fc:	mov	x1, #0x5                   	// #5
    1100:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1104:	add	x0, x0, #0x0
    1108:	stp	xzr, x0, [sp, #328]
    110c:	mov	x2, #0x0                   	// #0
    1110:	str	x1, [sp, #344]
    1114:	ldp	x0, x1, [sp, #336]
    1118:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    111c:	tst	w0, #0xff
    1120:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    1124:	add	x1, sp, #0x148
    1128:	mov	x0, x26
    112c:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1130:	add	x24, sp, #0x220
    1134:	ldp	x27, x23, [sp, #384]
    1138:	add	x1, x24, #0x10
    113c:	str	x1, [sp, #544]
    1140:	mov	x25, x0
    1144:	cmn	x27, x23
    1148:	ccmp	x27, #0x0, #0x0, ne  // ne = any
    114c:	b.eq	2370 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x17a0>  // b.none
    1150:	str	x23, [sp, #816]
    1154:	cmp	x23, #0xf
    1158:	b.hi	1f64 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1394>  // b.pmore
    115c:	cmp	x23, #0x1
    1160:	b.ne	20c0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x14f0>  // b.any
    1164:	ldrb	w2, [x27]
    1168:	mov	x0, x1
    116c:	strb	w2, [sp, #560]
    1170:	str	x23, [sp, #552]
    1174:	mov	x2, #0x0                   	// #0
    1178:	strb	wzr, [x0, x23]
    117c:	mov	w0, #0x5                   	// #5
    1180:	strb	w0, [sp, #720]
    1184:	ldr	x0, [sp, #544]
    1188:	ldr	x1, [sp, #552]
    118c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1190:	tst	w0, #0xff
    1194:	b.eq	1ea8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12d8>  // b.none
    1198:	add	x23, sp, #0x2d0
    119c:	add	x0, x24, #0x10
    11a0:	ldr	x1, [sp, #544]
    11a4:	add	x2, x23, #0x18
    11a8:	str	x2, [sp, #728]
    11ac:	cmp	x1, x0
    11b0:	b.eq	20ac <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x14dc>  // b.none
    11b4:	ldr	x0, [sp, #560]
    11b8:	str	x1, [sp, #728]
    11bc:	str	x0, [sp, #744]
    11c0:	ldr	x1, [sp, #552]
    11c4:	add	x24, x24, #0x10
    11c8:	mov	x0, x25
    11cc:	str	x24, [sp, #544]
    11d0:	str	xzr, [sp, #552]
    11d4:	strb	wzr, [sp, #560]
    11d8:	str	x1, [sp, #736]
    11dc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    11e0:	mov	x1, x23
    11e4:	mov	x0, x25
    11e8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    11ec:	mov	x0, x23
    11f0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    11f4:	ldr	x0, [sp, #544]
    11f8:	cmp	x0, x24
    11fc:	b.eq	1204 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x634>  // b.none
    1200:	bl	0 <_ZdlPv>
    1204:	ldr	x24, [sp, #328]
    1208:	cbz	x24, 122c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x65c>
    120c:	mov	x1, x24
    1210:	ldr	x0, [x1], #16
    1214:	cmp	x0, x1
    1218:	b.eq	1220 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x650>  // b.none
    121c:	bl	0 <_ZdlPv>
    1220:	mov	x0, x24
    1224:	mov	x1, #0x20                  	// #32
    1228:	bl	0 <_ZdlPvm>
    122c:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1230:	add	x0, x0, #0x0
    1234:	stp	xzr, x0, [sp, #480]
    1238:	add	x0, sp, #0x280
    123c:	mov	x1, #0xa                   	// #10
    1240:	str	x1, [sp, #496]
    1244:	mov	x2, #0x0                   	// #0
    1248:	ldp	x0, x1, [x0, #-152]
    124c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1250:	tst	w0, #0xff
    1254:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    1258:	add	x1, sp, #0x1e0
    125c:	mov	x0, x26
    1260:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1264:	mov	x24, x0
    1268:	ldrb	w1, [x20, #124]
    126c:	mov	w2, #0x1                   	// #1
    1270:	strb	w2, [sp, #816]
    1274:	strb	w1, [sp, #824]
    1278:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    127c:	mov	x1, x22
    1280:	mov	x0, x24
    1284:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1288:	mov	x0, x22
    128c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1290:	ldr	x24, [sp, #480]
    1294:	cbz	x24, 12b8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x6e8>
    1298:	mov	x1, x24
    129c:	ldr	x0, [x1], #16
    12a0:	cmp	x0, x1
    12a4:	b.eq	12ac <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x6dc>  // b.none
    12a8:	bl	0 <_ZdlPv>
    12ac:	mov	x0, x24
    12b0:	mov	x1, #0x20                  	// #32
    12b4:	bl	0 <_ZdlPvm>
    12b8:	ldp	x25, x24, [sp, #384]
    12bc:	add	x0, x23, #0x10
    12c0:	str	x0, [sp, #720]
    12c4:	cmn	x25, x24
    12c8:	ccmp	x25, #0x0, #0x0, ne  // ne = any
    12cc:	b.eq	2370 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x17a0>  // b.none
    12d0:	str	x24, [sp, #816]
    12d4:	cmp	x24, #0xf
    12d8:	b.hi	20ec <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x151c>  // b.pmore
    12dc:	cmp	x24, #0x1
    12e0:	b.ne	20e0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1510>  // b.any
    12e4:	ldrb	w2, [x25]
    12e8:	mov	x1, x0
    12ec:	strb	w2, [sp, #736]
    12f0:	str	x24, [sp, #728]
    12f4:	mov	x0, #0x20                  	// #32
    12f8:	strb	wzr, [x1, x24]
    12fc:	bl	0 <_Znwm>
    1300:	mov	x3, x0
    1304:	add	x2, x0, #0x10
    1308:	add	x1, x23, #0x10
    130c:	ldr	x0, [sp, #720]
    1310:	str	x2, [x3]
    1314:	cmp	x0, x1
    1318:	b.eq	20cc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x14fc>  // b.none
    131c:	ldr	x1, [sp, #736]
    1320:	str	x0, [x3]
    1324:	str	x1, [x3, #16]
    1328:	add	x5, sp, #0x248
    132c:	add	x4, x23, #0x10
    1330:	ldr	x1, [sp, #728]
    1334:	str	x3, [sp, #576]
    1338:	strb	wzr, [sp, #736]
    133c:	mov	x2, #0x0                   	// #0
    1340:	stp	xzr, xzr, [x5]
    1344:	str	x1, [x3, #8]
    1348:	stp	x4, xzr, [x5, #136]
    134c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1350:	tst	w0, #0xff
    1354:	b.eq	1ec8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12f8>  // b.none
    1358:	ldr	x2, [sp, #576]
    135c:	add	x0, sp, #0x240
    1360:	mov	x1, x0
    1364:	str	x0, [sp, #120]
    1368:	ldr	x0, [sp, #176]
    136c:	ldp	x3, x2, [x2]
    1370:	str	x3, [sp, #584]
    1374:	str	x2, [sp, #592]
    1378:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    137c:	mov	x24, x0
    1380:	ldp	x1, x4, [sp, #416]
    1384:	str	x4, [sp, #832]
    1388:	ldr	w2, [sp, #440]
    138c:	ldr	x3, [sp, #432]
    1390:	str	xzr, [sp, #432]
    1394:	str	wzr, [sp, #440]
    1398:	add	x1, x1, #0x1
    139c:	stp	x1, xzr, [sp, #416]
    13a0:	mov	w1, #0x6                   	// #6
    13a4:	strb	w1, [sp, #816]
    13a8:	mov	x1, #0x1                   	// #1
    13ac:	str	x1, [sp, #824]
    13b0:	str	x3, [sp, #840]
    13b4:	str	w2, [sp, #848]
    13b8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    13bc:	mov	x1, x22
    13c0:	mov	x0, x24
    13c4:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    13c8:	mov	x0, x22
    13cc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    13d0:	ldr	x24, [sp, #576]
    13d4:	cbz	x24, 13f8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x828>
    13d8:	mov	x1, x24
    13dc:	ldr	x0, [x1], #16
    13e0:	cmp	x0, x1
    13e4:	b.eq	13ec <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x81c>  // b.none
    13e8:	bl	0 <_ZdlPv>
    13ec:	mov	x0, x24
    13f0:	mov	x1, #0x20                  	// #32
    13f4:	bl	0 <_ZdlPvm>
    13f8:	ldr	x0, [sp, #720]
    13fc:	add	x1, x23, #0x10
    1400:	cmp	x0, x1
    1404:	b.eq	140c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x83c>  // b.none
    1408:	bl	0 <_ZdlPv>
    140c:	ldr	w2, [x20, #96]
    1410:	mov	w1, #0x18                  	// #24
    1414:	ldr	x0, [x20, #88]
    1418:	add	x26, sp, #0x260
    141c:	mov	x24, x0
    1420:	umaddl	x0, w2, w1, x0
    1424:	str	x0, [sp, #168]
    1428:	cmp	x0, x24
    142c:	b.eq	1640 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa70>  // b.none
    1430:	ldr	x1, [sp, #104]
    1434:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1438:	add	x0, x0, #0x0
    143c:	stp	x21, x19, [sp, #200]
    1440:	add	x1, x1, #0x8
    1444:	str	x1, [sp, #128]
    1448:	str	x0, [sp, #216]
    144c:	ldr	x0, [x24]
    1450:	ldr	x8, [sp, #120]
    1454:	ldr	x0, [x0]
    1458:	ldr	x1, [x0]
    145c:	ldr	x1, [x1, #48]
    1460:	blr	x1
    1464:	ldr	x19, [sp, #784]
    1468:	ldr	x20, [sp, #128]
    146c:	cbz	x19, 1510 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x940>
    1470:	ldr	x27, [sp, #576]
    1474:	mov	x25, #0xffffffff80000000    	// #-2147483648
    1478:	ldr	x28, [sp, #584]
    147c:	ldr	x21, [x19, #40]
    1480:	cmp	x21, x28
    1484:	csel	x2, x21, x28, ls  // ls = plast
    1488:	cbz	x2, 149c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x8cc>
    148c:	ldr	x0, [x19, #32]
    1490:	mov	x1, x27
    1494:	bl	0 <memcmp>
    1498:	cbnz	w0, 14b4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x8e4>
    149c:	sub	x0, x21, x28
    14a0:	mov	x1, #0x7fffffff            	// #2147483647
    14a4:	cmp	x0, x1
    14a8:	b.gt	14b8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x8e8>
    14ac:	cmp	x0, x25
    14b0:	b.lt	1f98 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x13c8>  // b.tstop
    14b4:	tbnz	w0, #31, 1f98 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x13c8>
    14b8:	mov	x20, x19
    14bc:	ldr	x19, [x19, #16]
    14c0:	cbnz	x19, 147c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x8ac>
    14c4:	ldr	x0, [sp, #128]
    14c8:	cmp	x20, x0
    14cc:	b.eq	1510 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x940>  // b.none
    14d0:	ldr	x25, [x20, #40]
    14d4:	cmp	x28, x25
    14d8:	csel	x2, x28, x25, ls  // ls = plast
    14dc:	cbz	x2, 14f0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x920>
    14e0:	ldr	x1, [x20, #32]
    14e4:	mov	x0, x27
    14e8:	bl	0 <memcmp>
    14ec:	cbnz	w0, 150c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x93c>
    14f0:	sub	x0, x28, x25
    14f4:	mov	x1, #0x7fffffff            	// #2147483647
    14f8:	cmp	x0, x1
    14fc:	b.gt	1534 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x964>
    1500:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1504:	cmp	x0, x1
    1508:	b.lt	1510 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x940>  // b.tstop
    150c:	tbz	w0, #31, 1534 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x964>
    1510:	ldr	x0, [sp, #104]
    1514:	mov	x1, x20
    1518:	ldr	x5, [sp, #120]
    151c:	mov	x4, x23
    1520:	ldr	x2, [sp, #216]
    1524:	mov	x3, x22
    1528:	str	x5, [sp, #816]
    152c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1530:	mov	x20, x0
    1534:	ldp	x28, x25, [sp, #384]
    1538:	add	x0, x26, #0x10
    153c:	str	x0, [sp, #608]
    1540:	cmn	x28, x25
    1544:	ccmp	x28, #0x0, #0x0, ne  // ne = any
    1548:	b.eq	2370 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x17a0>  // b.none
    154c:	str	x25, [sp, #816]
    1550:	cmp	x25, #0xf
    1554:	b.hi	1fbc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x13ec>  // b.pmore
    1558:	cmp	x25, #0x1
    155c:	b.ne	1fb0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x13e0>  // b.any
    1560:	ldrb	w2, [x28]
    1564:	mov	x1, x0
    1568:	strb	w2, [sp, #624]
    156c:	str	x25, [sp, #616]
    1570:	mov	w0, #0x5                   	// #5
    1574:	strb	wzr, [x1, x25]
    1578:	mov	x2, #0x0                   	// #0
    157c:	strb	w0, [sp, #816]
    1580:	ldr	x0, [sp, #608]
    1584:	ldr	x1, [sp, #616]
    1588:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    158c:	tst	w0, #0xff
    1590:	b.eq	1ea8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12d8>  // b.none
    1594:	ldr	x0, [sp, #608]
    1598:	add	x1, x22, #0x18
    159c:	str	x1, [sp, #824]
    15a0:	add	x1, x26, #0x10
    15a4:	cmp	x0, x1
    15a8:	b.eq	2004 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1434>  // b.none
    15ac:	ldr	x1, [sp, #624]
    15b0:	str	x0, [sp, #824]
    15b4:	str	x1, [sp, #840]
    15b8:	add	x20, x20, #0x40
    15bc:	strb	wzr, [sp, #624]
    15c0:	ldr	x1, [sp, #616]
    15c4:	add	x2, x26, #0x10
    15c8:	ldr	x0, [x20, #8]
    15cc:	str	x1, [sp, #832]
    15d0:	ldr	x1, [x20, #16]
    15d4:	str	x2, [sp, #608]
    15d8:	str	xzr, [sp, #616]
    15dc:	cmp	x0, x1
    15e0:	b.eq	1ff0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1420>  // b.none
    15e4:	mov	x1, x22
    15e8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    15ec:	ldr	x0, [x20, #8]
    15f0:	add	x0, x0, #0x28
    15f4:	str	x0, [x20, #8]
    15f8:	mov	x0, x22
    15fc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1600:	ldr	x0, [sp, #608]
    1604:	add	x1, x26, #0x10
    1608:	cmp	x0, x1
    160c:	b.eq	1614 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa44>  // b.none
    1610:	bl	0 <_ZdlPv>
    1614:	ldr	x1, [sp, #120]
    1618:	add	x24, x24, #0x18
    161c:	ldr	x0, [sp, #576]
    1620:	add	x1, x1, #0x10
    1624:	cmp	x0, x1
    1628:	b.eq	1fa0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x13d0>  // b.none
    162c:	bl	0 <_ZdlPv>
    1630:	ldr	x0, [sp, #168]
    1634:	cmp	x0, x24
    1638:	b.ne	144c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x87c>  // b.any
    163c:	ldp	x21, x19, [sp, #200]
    1640:	ldp	x23, x20, [sp, #256]
    1644:	cmp	x23, x20
    1648:	b.eq	1664 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa94>  // b.none
    164c:	mov	x0, x23
    1650:	add	x23, x23, #0x28
    1654:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1658:	cmp	x20, x23
    165c:	b.ne	164c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa7c>  // b.any
    1660:	ldr	x20, [sp, #256]
    1664:	cbz	x20, 1670 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xaa0>
    1668:	mov	x0, x20
    166c:	bl	0 <_ZdlPv>
    1670:	ldp	x23, x20, [sp, #224]
    1674:	cmp	x23, x20
    1678:	b.eq	1694 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xac4>  // b.none
    167c:	mov	x0, x23
    1680:	add	x23, x23, #0x28
    1684:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1688:	cmp	x20, x23
    168c:	b.ne	167c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xaac>  // b.any
    1690:	ldr	x20, [sp, #224]
    1694:	cbz	x20, 16a0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xad0>
    1698:	mov	x0, x20
    169c:	bl	0 <_ZdlPv>
    16a0:	ldr	w0, [sp, #440]
    16a4:	cbnz	w0, 2120 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1550>
    16a8:	ldr	x23, [sp, #424]
    16ac:	mov	x1, #0x0                   	// #0
    16b0:	mov	x0, x23
    16b4:	bl	0 <_ZdlPvm>
    16b8:	ldr	x0, [sp, #184]
    16bc:	add	x1, x0, #0x10
    16c0:	ldr	x0, [sp, #384]
    16c4:	cmp	x0, x1
    16c8:	b.eq	16d0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb00>  // b.none
    16cc:	bl	0 <_ZdlPv>
    16d0:	mov	x0, x21
    16d4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    16d8:	mov	x21, x0
    16dc:	ldr	x0, [sp, #160]
    16e0:	cmp	x0, x21
    16e4:	b.ne	e3c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x26c>  // b.any
    16e8:	ldr	x0, [sp, #104]
    16ec:	str	xzr, [sp, #640]
    16f0:	ldr	x20, [sp, #792]
    16f4:	str	xzr, [sp, #648]
    16f8:	str	xzr, [sp, #656]
    16fc:	add	x0, x0, #0x8
    1700:	str	wzr, [sp, #664]
    1704:	cmp	x20, x0
    1708:	b.eq	19ac <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xddc>  // b.none
    170c:	add	x26, sp, #0x2a8
    1710:	add	x25, sp, #0x2d0
    1714:	add	x23, x26, #0x10
    1718:	add	x0, x22, #0x10
    171c:	ldr	x19, [x20, #40]
    1720:	str	x0, [sp, #816]
    1724:	ldr	x21, [x20, #32]
    1728:	cmn	x21, x19
    172c:	ccmp	x21, #0x0, #0x0, ne  // ne = any
    1730:	b.eq	2370 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x17a0>  // b.none
    1734:	str	x19, [sp, #720]
    1738:	cmp	x19, #0xf
    173c:	b.hi	2064 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1494>  // b.pmore
    1740:	cmp	x19, #0x1
    1744:	b.ne	2024 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1454>  // b.any
    1748:	ldrb	w2, [x21]
    174c:	mov	x1, x0
    1750:	strb	w2, [sp, #832]
    1754:	str	x19, [sp, #824]
    1758:	add	x0, sp, #0x350
    175c:	strb	wzr, [x1, x19]
    1760:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
    1764:	movk	x1, #0xcccd
    1768:	mov	x21, #0x0                   	// #0
    176c:	ldp	x27, x19, [x20, #64]
    1770:	stp	xzr, xzr, [x0]
    1774:	str	xzr, [sp, #864]
    1778:	sub	x28, x19, x27
    177c:	asr	x0, x28, #3
    1780:	mul	x0, x0, x1
    1784:	cbz	x0, 17a8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xbd8>
    1788:	mov	x1, #0x3333333333333333    	// #3689348814741910323
    178c:	movk	x1, #0x333, lsl #48
    1790:	cmp	x0, x1
    1794:	b.hi	234c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x177c>  // b.pmore
    1798:	mov	x0, x28
    179c:	bl	0 <_Znwm>
    17a0:	ldp	x27, x19, [x20, #64]
    17a4:	mov	x21, x0
    17a8:	dup	v0.2d, x21
    17ac:	add	x28, x21, x28
    17b0:	str	x28, [sp, #864]
    17b4:	cmp	x19, x27
    17b8:	str	q0, [sp, #848]
    17bc:	b.eq	1814 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc44>  // b.none
    17c0:	mov	x28, x27
    17c4:	mov	x24, x21
    17c8:	mov	x1, x28
    17cc:	mov	x0, x24
    17d0:	add	x28, x28, #0x28
    17d4:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
    17d8:	cmp	x19, x28
    17dc:	add	x24, x24, #0x28
    17e0:	b.ne	17c8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xbf8>  // b.any
    17e4:	sub	x0, x19, #0x28
    17e8:	mov	x1, #0xcccd                	// #52429
    17ec:	sub	x0, x0, x27
    17f0:	movk	x1, #0xcccc, lsl #16
    17f4:	movk	x1, #0xcccc, lsl #32
    17f8:	lsr	x0, x0, #3
    17fc:	movk	x1, #0xccc, lsl #48
    1800:	mul	x0, x0, x1
    1804:	and	x0, x0, #0x1fffffffffffffff
    1808:	add	x0, x0, #0x1
    180c:	add	x0, x0, x0, lsl #2
    1810:	add	x21, x21, x0, lsl #3
    1814:	ldr	x27, [sp, #816]
    1818:	str	x23, [sp, #680]
    181c:	ldr	x19, [sp, #824]
    1820:	str	x21, [sp, #856]
    1824:	cmn	x27, x19
    1828:	ccmp	x27, #0x0, #0x0, ne  // ne = any
    182c:	b.eq	2370 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x17a0>  // b.none
    1830:	str	x19, [sp, #720]
    1834:	cmp	x19, #0xf
    1838:	b.hi	2030 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1460>  // b.pmore
    183c:	cmp	x19, #0x1
    1840:	b.ne	2018 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1448>  // b.any
    1844:	ldrb	w1, [x27]
    1848:	mov	x0, x23
    184c:	strb	w1, [sp, #696]
    1850:	str	x19, [sp, #688]
    1854:	strb	wzr, [x0, x19]
    1858:	mov	x0, #0x20                  	// #32
    185c:	bl	0 <_Znwm>
    1860:	mov	x3, x0
    1864:	add	x1, x0, #0x10
    1868:	ldr	x0, [sp, #680]
    186c:	str	x1, [x3]
    1870:	cmp	x0, x23
    1874:	b.eq	2098 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x14c8>  // b.none
    1878:	ldr	x1, [sp, #696]
    187c:	str	x0, [x3]
    1880:	str	x1, [x3, #16]
    1884:	ldr	x1, [sp, #688]
    1888:	str	x1, [x3, #8]
    188c:	str	x3, [sp, #608]
    1890:	add	x3, sp, #0x268
    1894:	strb	wzr, [sp, #696]
    1898:	mov	x2, #0x0                   	// #0
    189c:	stp	xzr, xzr, [x3]
    18a0:	stp	x23, xzr, [x3, #64]
    18a4:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    18a8:	tst	w0, #0xff
    18ac:	b.eq	1ec8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12f8>  // b.none
    18b0:	ldr	x2, [sp, #608]
    18b4:	add	x1, sp, #0x260
    18b8:	add	x0, sp, #0x280
    18bc:	ldp	x3, x2, [x2]
    18c0:	str	x3, [sp, #616]
    18c4:	str	x2, [sp, #624]
    18c8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    18cc:	mov	x19, x0
    18d0:	mov	w2, #0x7                   	// #7
    18d4:	strb	w2, [sp, #720]
    18d8:	ldr	q0, [sp, #848]
    18dc:	add	x2, sp, #0x280
    18e0:	ldr	x1, [sp, #864]
    18e4:	stur	q0, [x2, #88]
    18e8:	str	x1, [sp, #744]
    18ec:	add	x1, sp, #0x350
    18f0:	stp	xzr, xzr, [x1]
    18f4:	str	xzr, [sp, #864]
    18f8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    18fc:	mov	x1, x25
    1900:	mov	x0, x19
    1904:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1908:	mov	x0, x25
    190c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1910:	ldr	x19, [sp, #608]
    1914:	cbz	x19, 1938 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xd68>
    1918:	mov	x1, x19
    191c:	ldr	x0, [x1], #16
    1920:	cmp	x0, x1
    1924:	b.eq	192c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xd5c>  // b.none
    1928:	bl	0 <_ZdlPv>
    192c:	mov	x0, x19
    1930:	mov	x1, #0x20                  	// #32
    1934:	bl	0 <_ZdlPvm>
    1938:	ldr	x0, [sp, #680]
    193c:	cmp	x0, x23
    1940:	b.eq	1948 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xd78>  // b.none
    1944:	bl	0 <_ZdlPv>
    1948:	ldr	x19, [sp, #848]
    194c:	ldr	x21, [sp, #856]
    1950:	cmp	x19, x21
    1954:	b.eq	1970 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xda0>  // b.none
    1958:	mov	x0, x19
    195c:	add	x19, x19, #0x28
    1960:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1964:	cmp	x21, x19
    1968:	b.ne	1958 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xd88>  // b.any
    196c:	ldr	x21, [sp, #848]
    1970:	cbz	x21, 197c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xdac>
    1974:	mov	x0, x21
    1978:	bl	0 <_ZdlPv>
    197c:	ldr	x0, [sp, #816]
    1980:	add	x1, x22, #0x10
    1984:	cmp	x0, x1
    1988:	b.eq	1990 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xdc0>  // b.none
    198c:	bl	0 <_ZdlPv>
    1990:	mov	x0, x20
    1994:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    1998:	ldr	x1, [sp, #104]
    199c:	mov	x20, x0
    19a0:	add	x1, x1, #0x8
    19a4:	cmp	x0, x1
    19a8:	b.ne	1718 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb48>  // b.any
    19ac:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    19b0:	add	x0, x0, #0x0
    19b4:	str	x0, [sp, #520]
    19b8:	add	x0, sp, #0x280
    19bc:	mov	x1, #0xb                   	// #11
    19c0:	str	x1, [sp, #528]
    19c4:	mov	x2, #0x0                   	// #0
    19c8:	str	xzr, [sp, #512]
    19cc:	ldp	x0, x1, [x0, #-120]
    19d0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    19d4:	tst	w0, #0xff
    19d8:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    19dc:	ldr	x0, [sp, #176]
    19e0:	add	x1, sp, #0x200
    19e4:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    19e8:	mov	x19, x0
    19ec:	ldr	x1, [sp, #640]
    19f0:	mov	w6, #0x6                   	// #6
    19f4:	ldr	w2, [sp, #664]
    19f8:	mov	x5, #0x1                   	// #1
    19fc:	ldr	x4, [sp, #648]
    1a00:	add	x1, x1, #0x1
    1a04:	ldr	x3, [sp, #656]
    1a08:	str	x1, [sp, #640]
    1a0c:	str	xzr, [sp, #648]
    1a10:	str	xzr, [sp, #656]
    1a14:	str	wzr, [sp, #664]
    1a18:	strb	w6, [sp, #816]
    1a1c:	str	x5, [sp, #824]
    1a20:	str	x4, [sp, #832]
    1a24:	str	x3, [sp, #840]
    1a28:	str	w2, [sp, #848]
    1a2c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1a30:	mov	x1, x22
    1a34:	mov	x0, x19
    1a38:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1a3c:	mov	x0, x22
    1a40:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1a44:	ldr	x19, [sp, #512]
    1a48:	cbz	x19, 1a6c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xe9c>
    1a4c:	mov	x1, x19
    1a50:	ldr	x0, [x1], #16
    1a54:	cmp	x0, x1
    1a58:	b.eq	1a60 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xe90>  // b.none
    1a5c:	bl	0 <_ZdlPv>
    1a60:	mov	x0, x19
    1a64:	mov	x1, #0x20                  	// #32
    1a68:	bl	0 <_ZdlPvm>
    1a6c:	ldp	x2, x5, [sp, #352]
    1a70:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1a74:	ldr	w3, [sp, #376]
    1a78:	mov	w7, #0x6                   	// #6
    1a7c:	ldr	x4, [sp, #368]
    1a80:	mov	x6, #0x1                   	// #1
    1a84:	ldr	d0, [x0]
    1a88:	add	x19, sp, #0x2d0
    1a8c:	add	x2, x2, #0x1
    1a90:	stp	x2, xzr, [sp, #352]
    1a94:	mov	x0, x22
    1a98:	ldr	x2, [sp, #144]
    1a9c:	mov	x1, x19
    1aa0:	add	x20, x22, #0x10
    1aa4:	str	xzr, [sp, #368]
    1aa8:	str	wzr, [sp, #376]
    1aac:	strb	w7, [sp, #720]
    1ab0:	str	x6, [sp, #728]
    1ab4:	str	x5, [sp, #736]
    1ab8:	str	x4, [sp, #744]
    1abc:	str	w3, [sp, #752]
    1ac0:	str	x20, [sp, #816]
    1ac4:	str	d0, [sp, #824]
    1ac8:	str	wzr, [sp, #832]
    1acc:	strb	wzr, [sp, #836]
    1ad0:	str	x2, [sp, #960]
    1ad4:	str	xzr, [sp, #968]
    1ad8:	bl	0 <_ZN4llvm4json7OStream5valueERKNS0_5ValueE>
    1adc:	ldr	w0, [sp, #824]
    1ae0:	cmp	w0, #0x1
    1ae4:	b.ne	232c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x175c>  // b.any
    1ae8:	ldr	x0, [sp, #816]
    1aec:	ldr	w1, [x0]
    1af0:	cbnz	w1, 230c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x173c>
    1af4:	ldrb	w1, [x0, #4]
    1af8:	cbz	w1, 2350 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1780>
    1afc:	cmp	x0, x20
    1b00:	b.eq	1b08 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xf38>  // b.none
    1b04:	bl	0 <free>
    1b08:	ldr	x0, [sp, #144]
    1b0c:	ldp	x1, x0, [x0, #16]
    1b10:	cmp	x1, x0
    1b14:	b.eq	22e4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1714>  // b.none
    1b18:	mov	w1, #0xa                   	// #10
    1b1c:	strb	w1, [x0]
    1b20:	ldr	x1, [sp, #144]
    1b24:	ldr	x0, [x1, #24]
    1b28:	add	x0, x0, #0x1
    1b2c:	str	x0, [x1, #24]
    1b30:	mov	x0, x19
    1b34:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1b38:	ldr	w0, [sp, #664]
    1b3c:	cbnz	w0, 222c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x165c>
    1b40:	ldr	x20, [sp, #648]
    1b44:	mov	x1, #0x0                   	// #0
    1b48:	mov	x0, x20
    1b4c:	bl	0 <_ZdlPvm>
    1b50:	ldr	x19, [sp, #784]
    1b54:	cbz	x19, 21e4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1614>
    1b58:	ldr	x1, [x19, #24]
    1b5c:	add	x23, x19, #0x40
    1b60:	ldr	x0, [sp, #104]
    1b64:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1b68:	ldr	x21, [x23, #8]
    1b6c:	ldr	x20, [x19, #64]
    1b70:	ldr	x22, [x19, #16]
    1b74:	cmp	x20, x21
    1b78:	b.eq	1b94 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xfc4>  // b.none
    1b7c:	mov	x0, x20
    1b80:	add	x20, x20, #0x28
    1b84:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1b88:	cmp	x21, x20
    1b8c:	b.ne	1b7c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xfac>  // b.any
    1b90:	ldr	x21, [x23]
    1b94:	cbz	x21, 1ba0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xfd0>
    1b98:	mov	x0, x21
    1b9c:	bl	0 <_ZdlPv>
    1ba0:	ldr	x0, [x19, #32]
    1ba4:	add	x1, x19, #0x30
    1ba8:	cmp	x0, x1
    1bac:	b.eq	21d8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1608>  // b.none
    1bb0:	bl	0 <_ZdlPv>
    1bb4:	mov	x0, x19
    1bb8:	bl	0 <_ZdlPv>
    1bbc:	cbz	x22, 21e4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1614>
    1bc0:	mov	x19, x22
    1bc4:	b	1b58 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xf88>
    1bc8:	ldr	x19, [x19, #24]
    1bcc:	cbnz	x19, d28 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x158>
    1bd0:	b	d6c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x19c>
    1bd4:	ldr	x1, [x0]
    1bd8:	mov	x8, x28
    1bdc:	ldr	x1, [x1, #48]
    1be0:	blr	x1
    1be4:	ldr	x0, [x23, #8]
    1be8:	tst	w0, #0x4
    1bec:	b.ne	1d2c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x115c>  // b.any
    1bf0:	ldp	x3, x25, [sp, #448]
    1bf4:	str	x19, [sp, #512]
    1bf8:	cmn	x3, x25
    1bfc:	ccmp	x3, #0x0, #0x0, ne  // ne = any
    1c00:	b.eq	2370 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x17a0>  // b.none
    1c04:	str	x25, [sp, #816]
    1c08:	cmp	x25, #0xf
    1c0c:	b.hi	1d78 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x11a8>  // b.pmore
    1c10:	cmp	x25, #0x1
    1c14:	b.ne	1d6c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x119c>  // b.any
    1c18:	ldrb	w1, [x3]
    1c1c:	mov	x0, x19
    1c20:	strb	w1, [sp, #528]
    1c24:	str	x25, [sp, #520]
    1c28:	strb	wzr, [x0, x25]
    1c2c:	mov	x0, #0x20                  	// #32
    1c30:	bl	0 <_Znwm>
    1c34:	mov	x3, x0
    1c38:	add	x1, x0, #0x10
    1c3c:	ldr	x0, [sp, #512]
    1c40:	str	x1, [x3]
    1c44:	cmp	x0, x19
    1c48:	b.eq	1db4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x11e4>  // b.none
    1c4c:	ldr	x1, [sp, #528]
    1c50:	str	x0, [x3]
    1c54:	str	x1, [x3, #16]
    1c58:	add	x6, sp, #0x200
    1c5c:	strb	wzr, [sp, #528]
    1c60:	ldr	x1, [sp, #520]
    1c64:	str	x1, [x3, #8]
    1c68:	stp	x19, xzr, [x6]
    1c6c:	mov	x2, #0x0                   	// #0
    1c70:	stp	x3, xzr, [x6, #32]
    1c74:	str	xzr, [sp, #560]
    1c78:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1c7c:	tst	w0, #0xff
    1c80:	b.eq	1ec8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12f8>  // b.none
    1c84:	ldr	x2, [sp, #544]
    1c88:	mov	x1, x26
    1c8c:	add	x0, sp, #0x1a0
    1c90:	ldp	x3, x2, [x2]
    1c94:	str	x3, [sp, #552]
    1c98:	str	x2, [sp, #560]
    1c9c:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1ca0:	mov	x25, x0
    1ca4:	ldr	x1, [x23, #16]
    1ca8:	mov	x8, x22
    1cac:	mov	x0, x27
    1cb0:	bl	1d0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    1cb4:	mov	x0, x25
    1cb8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1cbc:	mov	x1, x22
    1cc0:	mov	x0, x25
    1cc4:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1cc8:	mov	x0, x22
    1ccc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1cd0:	ldr	x25, [sp, #544]
    1cd4:	cbz	x25, 1cf8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1128>
    1cd8:	mov	x1, x25
    1cdc:	ldr	x0, [x1], #16
    1ce0:	cmp	x0, x1
    1ce4:	b.eq	1cec <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x111c>  // b.none
    1ce8:	bl	0 <_ZdlPv>
    1cec:	mov	x0, x25
    1cf0:	mov	x1, #0x20                  	// #32
    1cf4:	bl	0 <_ZdlPvm>
    1cf8:	ldr	x0, [sp, #512]
    1cfc:	cmp	x0, x19
    1d00:	b.eq	1d08 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1138>  // b.none
    1d04:	bl	0 <_ZdlPv>
    1d08:	ldr	x1, [sp, #136]
    1d0c:	ldr	x0, [sp, #448]
    1d10:	cmp	x0, x1
    1d14:	b.eq	ecc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2fc>  // b.none
    1d18:	add	x23, x23, #0x18
    1d1c:	bl	0 <_ZdlPv>
    1d20:	cmp	x24, x23
    1d24:	b.ne	e98 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x2c8>  // b.any
    1d28:	b	ed8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x308>
    1d2c:	ldp	x4, x21, [sp, #448]
    1d30:	add	x25, sp, #0x1e0
    1d34:	add	x0, x25, #0x10
    1d38:	str	x0, [sp, #480]
    1d3c:	cmn	x4, x21
    1d40:	ccmp	x4, #0x0, #0x0, ne  // ne = any
    1d44:	b.eq	2370 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x17a0>  // b.none
    1d48:	str	x21, [sp, #816]
    1d4c:	cmp	x21, #0xf
    1d50:	b.hi	1f08 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1338>  // b.pmore
    1d54:	cmp	x21, #0x1
    1d58:	b.ne	1dc8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x11f8>  // b.any
    1d5c:	ldrb	w2, [x4]
    1d60:	mov	x1, x0
    1d64:	strb	w2, [sp, #496]
    1d68:	b	1dd0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1200>
    1d6c:	mov	x0, x19
    1d70:	cbz	x25, 1c24 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1054>
    1d74:	b	1d9c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x11cc>
    1d78:	ldr	x0, [sp, #112]
    1d7c:	mov	x1, x22
    1d80:	mov	x2, #0x0                   	// #0
    1d84:	str	x3, [sp, #128]
    1d88:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1d8c:	str	x0, [sp, #512]
    1d90:	ldr	x3, [sp, #128]
    1d94:	ldr	x1, [sp, #816]
    1d98:	str	x1, [sp, #528]
    1d9c:	mov	x2, x25
    1da0:	mov	x1, x3
    1da4:	bl	0 <memcpy>
    1da8:	ldr	x0, [sp, #512]
    1dac:	ldr	x25, [sp, #816]
    1db0:	b	1c24 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1054>
    1db4:	add	x0, sp, #0x200
    1db8:	ldp	x4, x5, [x0, #16]
    1dbc:	mov	x0, x1
    1dc0:	stp	x4, x5, [x3, #16]
    1dc4:	b	1c58 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1088>
    1dc8:	mov	x1, x0
    1dcc:	cbnz	x21, 1f2c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x135c>
    1dd0:	str	x21, [sp, #488]
    1dd4:	mov	w0, #0x5                   	// #5
    1dd8:	strb	wzr, [x1, x21]
    1ddc:	mov	x2, #0x0                   	// #0
    1de0:	strb	w0, [sp, #640]
    1de4:	ldp	x0, x1, [sp, #480]
    1de8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1dec:	tst	w0, #0xff
    1df0:	b.eq	1ea8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x12d8>  // b.none
    1df4:	add	x21, sp, #0x280
    1df8:	add	x0, x25, #0x10
    1dfc:	ldr	x1, [sp, #480]
    1e00:	add	x3, x21, #0x18
    1e04:	str	x3, [sp, #648]
    1e08:	cmp	x1, x0
    1e0c:	b.eq	1f58 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1388>  // b.none
    1e10:	ldr	x0, [sp, #496]
    1e14:	str	x1, [sp, #648]
    1e18:	str	x0, [sp, #664]
    1e1c:	ldp	x0, x1, [sp, #232]
    1e20:	strb	wzr, [sp, #496]
    1e24:	ldr	x3, [sp, #488]
    1e28:	str	xzr, [sp, #488]
    1e2c:	str	x3, [sp, #656]
    1e30:	add	x3, x25, #0x10
    1e34:	str	x3, [sp, #480]
    1e38:	cmp	x0, x1
    1e3c:	b.eq	1f44 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1374>  // b.none
    1e40:	mov	x1, x21
    1e44:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1e48:	ldr	x0, [sp, #232]
    1e4c:	add	x0, x0, #0x28
    1e50:	str	x0, [sp, #232]
    1e54:	mov	x0, x21
    1e58:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1e5c:	ldr	x0, [sp, #480]
    1e60:	add	x25, x25, #0x10
    1e64:	cmp	x0, x25
    1e68:	b.eq	1bf0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1020>  // b.none
    1e6c:	bl	0 <_ZdlPv>
    1e70:	b	1bf0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1020>
    1e74:	cmp	x25, x23
    1e78:	b.ne	fb4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x3e4>  // b.any
    1e7c:	b	105c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x48c>
    1e80:	mov	x1, x0
    1e84:	mov	x2, x24
    1e88:	ldr	x0, [sp, #120]
    1e8c:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1e90:	b	1038 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x468>
    1e94:	add	x0, sp, #0x200
    1e98:	add	x2, sp, #0x280
    1e9c:	ldp	x0, x1, [x0, #16]
    1ea0:	stp	x0, x1, [x2, #64]
    1ea4:	b	1004 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x434>
    1ea8:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1eac:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1eb0:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1eb4:	add	x3, x3, #0x0
    1eb8:	add	x1, x1, #0x0
    1ebc:	add	x0, x0, #0x0
    1ec0:	mov	w2, #0x138                 	// #312
    1ec4:	bl	0 <__assert_fail>
    1ec8:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1ecc:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1ed0:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1ed4:	add	x3, x3, #0x0
    1ed8:	add	x1, x1, #0x0
    1edc:	add	x0, x0, #0x0
    1ee0:	mov	w2, #0x1f1                 	// #497
    1ee4:	bl	0 <__assert_fail>
    1ee8:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1eec:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1ef0:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1ef4:	add	x3, x3, #0x0
    1ef8:	add	x1, x1, #0x0
    1efc:	add	x0, x0, #0x0
    1f00:	mov	w2, #0x1f8                 	// #504
    1f04:	bl	0 <__assert_fail>
    1f08:	mov	x1, x22
    1f0c:	mov	x0, x25
    1f10:	mov	x2, #0x0                   	// #0
    1f14:	str	x4, [sp, #128]
    1f18:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1f1c:	str	x0, [sp, #480]
    1f20:	ldr	x4, [sp, #128]
    1f24:	ldr	x1, [sp, #816]
    1f28:	str	x1, [sp, #496]
    1f2c:	mov	x2, x21
    1f30:	mov	x1, x4
    1f34:	bl	0 <memcpy>
    1f38:	ldr	x1, [sp, #480]
    1f3c:	ldr	x21, [sp, #816]
    1f40:	b	1dd0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1200>
    1f44:	mov	x1, x0
    1f48:	mov	x2, x21
    1f4c:	add	x0, sp, #0xe0
    1f50:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    1f54:	b	1e54 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1284>
    1f58:	ldp	x0, x1, [sp, #496]
    1f5c:	stp	x0, x1, [x21, #24]
    1f60:	b	1e1c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x124c>
    1f64:	mov	x1, x22
    1f68:	mov	x0, x24
    1f6c:	mov	x2, #0x0                   	// #0
    1f70:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1f74:	ldr	x1, [sp, #816]
    1f78:	str	x0, [sp, #544]
    1f7c:	str	x1, [sp, #560]
    1f80:	mov	x2, x23
    1f84:	mov	x1, x27
    1f88:	bl	0 <memcpy>
    1f8c:	ldr	x0, [sp, #544]
    1f90:	ldr	x23, [sp, #816]
    1f94:	b	1170 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x5a0>
    1f98:	ldr	x19, [x19, #24]
    1f9c:	b	14c0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x8f0>
    1fa0:	ldr	x0, [sp, #168]
    1fa4:	cmp	x0, x24
    1fa8:	b.ne	144c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x87c>  // b.any
    1fac:	b	163c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa6c>
    1fb0:	mov	x1, x0
    1fb4:	cbz	x25, 156c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x99c>
    1fb8:	b	1fd8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1408>
    1fbc:	mov	x1, x22
    1fc0:	mov	x0, x26
    1fc4:	mov	x2, #0x0                   	// #0
    1fc8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1fcc:	ldr	x1, [sp, #816]
    1fd0:	str	x0, [sp, #608]
    1fd4:	str	x1, [sp, #624]
    1fd8:	mov	x2, x25
    1fdc:	mov	x1, x28
    1fe0:	bl	0 <memcpy>
    1fe4:	ldr	x1, [sp, #608]
    1fe8:	ldr	x25, [sp, #816]
    1fec:	b	156c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x99c>
    1ff0:	mov	x1, x0
    1ff4:	mov	x2, x22
    1ff8:	mov	x0, x20
    1ffc:	bl	0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2000:	b	15f8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xa28>
    2004:	add	x0, sp, #0x200
    2008:	add	x2, sp, #0x280
    200c:	ldp	x0, x1, [x0, #112]
    2010:	stp	x0, x1, [x2, #200]
    2014:	b	15b8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x9e8>
    2018:	mov	x0, x23
    201c:	cbz	x19, 1850 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc80>
    2020:	b	204c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x147c>
    2024:	mov	x1, x0
    2028:	cbz	x19, 1754 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb84>
    202c:	b	2080 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x14b0>
    2030:	mov	x1, x25
    2034:	mov	x0, x26
    2038:	mov	x2, #0x0                   	// #0
    203c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    2040:	ldr	x1, [sp, #720]
    2044:	str	x0, [sp, #680]
    2048:	str	x1, [sp, #696]
    204c:	mov	x2, x19
    2050:	mov	x1, x27
    2054:	bl	0 <memcpy>
    2058:	ldr	x0, [sp, #680]
    205c:	ldr	x19, [sp, #720]
    2060:	b	1850 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xc80>
    2064:	mov	x1, x25
    2068:	mov	x0, x22
    206c:	mov	x2, #0x0                   	// #0
    2070:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    2074:	ldr	x1, [sp, #720]
    2078:	str	x0, [sp, #816]
    207c:	str	x1, [sp, #832]
    2080:	mov	x2, x19
    2084:	mov	x1, x21
    2088:	bl	0 <memcpy>
    208c:	ldr	x19, [sp, #720]
    2090:	ldr	x1, [sp, #816]
    2094:	b	1754 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xb84>
    2098:	add	x0, sp, #0x280
    209c:	ldp	x4, x5, [x0, #56]
    20a0:	mov	x0, x1
    20a4:	stp	x4, x5, [x3, #16]
    20a8:	b	1884 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xcb4>
    20ac:	add	x0, sp, #0x200
    20b0:	add	x2, sp, #0x280
    20b4:	ldp	x0, x1, [x0, #48]
    20b8:	stp	x0, x1, [x2, #104]
    20bc:	b	11c0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x5f0>
    20c0:	mov	x0, x1
    20c4:	cbz	x23, 1170 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x5a0>
    20c8:	b	1f80 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x13b0>
    20cc:	add	x0, sp, #0x280
    20d0:	ldp	x4, x5, [x0, #96]
    20d4:	mov	x0, x2
    20d8:	stp	x4, x5, [x3, #16]
    20dc:	b	1328 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x758>
    20e0:	mov	x1, x0
    20e4:	cbz	x24, 12f0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x720>
    20e8:	b	2108 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1538>
    20ec:	mov	x1, x22
    20f0:	mov	x0, x23
    20f4:	mov	x2, #0x0                   	// #0
    20f8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    20fc:	ldr	x1, [sp, #816]
    2100:	str	x0, [sp, #720]
    2104:	str	x1, [sp, #736]
    2108:	mov	x2, x24
    210c:	mov	x1, x25
    2110:	bl	0 <memcpy>
    2114:	ldr	x1, [sp, #720]
    2118:	ldr	x24, [sp, #816]
    211c:	b	12f0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x720>
    2120:	mov	x0, #0xffffffffffffffff    	// #-1
    2124:	str	x0, [sp, #552]
    2128:	add	x0, sp, #0x280
    212c:	str	xzr, [sp, #560]
    2130:	mov	x2, #0x0                   	// #0
    2134:	ldp	x0, x1, [x0, #-88]
    2138:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    213c:	tst	w0, #0xff
    2140:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    2144:	mov	x0, #0xfffffffffffffffe    	// #-2
    2148:	str	x0, [sp, #584]
    214c:	add	x0, sp, #0x280
    2150:	str	xzr, [sp, #592]
    2154:	mov	x2, #0x0                   	// #0
    2158:	ldp	x0, x1, [x0, #-56]
    215c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    2160:	tst	w0, #0xff
    2164:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    2168:	ldr	w1, [sp, #440]
    216c:	ldr	x20, [sp, #424]
    2170:	lsl	x1, x1, #6
    2174:	add	x23, x20, x1
    2178:	cmp	x20, x23
    217c:	b.ne	21b8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x15e8>  // b.any
    2180:	b	16b0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xae0>
    2184:	ldr	x24, [x20]
    2188:	cbz	x24, 21ac <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x15dc>
    218c:	mov	x1, x24
    2190:	ldr	x0, [x1], #16
    2194:	cmp	x0, x1
    2198:	b.eq	21a0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x15d0>  // b.none
    219c:	bl	0 <_ZdlPv>
    21a0:	mov	x0, x24
    21a4:	mov	x1, #0x20                  	// #32
    21a8:	bl	0 <_ZdlPvm>
    21ac:	add	x20, x20, #0x40
    21b0:	cmp	x23, x20
    21b4:	b.eq	221c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x164c>  // b.none
    21b8:	ldr	x0, [x20, #8]
    21bc:	cmn	x0, #0x1
    21c0:	b.eq	2184 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x15b4>  // b.none
    21c4:	cmn	x0, #0x2
    21c8:	b.eq	2184 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x15b4>  // b.none
    21cc:	add	x0, x20, #0x18
    21d0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    21d4:	b	2184 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x15b4>
    21d8:	mov	x0, x19
    21dc:	bl	0 <_ZdlPv>
    21e0:	cbnz	x22, 1bc0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xff0>
    21e4:	ldr	w0, [sp, #376]
    21e8:	cbnz	w0, 237c <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x17ac>
    21ec:	ldr	x20, [sp, #360]
    21f0:	mov	x1, #0x0                   	// #0
    21f4:	mov	x0, x20
    21f8:	bl	0 <_ZdlPvm>
    21fc:	ldp	x29, x30, [sp]
    2200:	ldp	x19, x20, [sp, #16]
    2204:	ldp	x21, x22, [sp, #32]
    2208:	ldp	x23, x24, [sp, #48]
    220c:	ldp	x25, x26, [sp, #64]
    2210:	ldp	x27, x28, [sp, #80]
    2214:	add	sp, sp, #0x3d0
    2218:	ret
    221c:	ldr	w1, [sp, #440]
    2220:	ldr	x23, [sp, #424]
    2224:	lsl	x1, x1, #6
    2228:	b	16b0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xae0>
    222c:	mov	x0, #0xffffffffffffffff    	// #-1
    2230:	str	x0, [sp, #616]
    2234:	add	x0, sp, #0x280
    2238:	str	xzr, [sp, #624]
    223c:	mov	x2, #0x0                   	// #0
    2240:	ldp	x0, x1, [x0, #-24]
    2244:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    2248:	tst	w0, #0xff
    224c:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    2250:	mov	x0, #0xfffffffffffffffe    	// #-2
    2254:	str	x0, [sp, #688]
    2258:	add	x0, sp, #0x280
    225c:	str	xzr, [sp, #696]
    2260:	mov	x2, #0x0                   	// #0
    2264:	ldp	x0, x1, [x0, #48]
    2268:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    226c:	tst	w0, #0xff
    2270:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    2274:	ldr	w1, [sp, #664]
    2278:	ldr	x19, [sp, #648]
    227c:	lsl	x1, x1, #6
    2280:	add	x20, x19, x1
    2284:	cmp	x19, x20
    2288:	b.ne	22c4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x16f4>  // b.any
    228c:	b	1b48 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xf78>
    2290:	ldr	x21, [x19]
    2294:	cbz	x21, 22b8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x16e8>
    2298:	mov	x1, x21
    229c:	ldr	x0, [x1], #16
    22a0:	cmp	x0, x1
    22a4:	b.eq	22ac <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x16dc>  // b.none
    22a8:	bl	0 <_ZdlPv>
    22ac:	mov	x0, x21
    22b0:	mov	x1, #0x20                  	// #32
    22b4:	bl	0 <_ZdlPvm>
    22b8:	add	x19, x19, #0x40
    22bc:	cmp	x20, x19
    22c0:	b.eq	22fc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x172c>  // b.none
    22c4:	ldr	x0, [x19, #8]
    22c8:	cmn	x0, #0x1
    22cc:	b.eq	2290 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x16c0>  // b.none
    22d0:	cmn	x0, #0x2
    22d4:	b.eq	2290 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x16c0>  // b.none
    22d8:	add	x0, x19, #0x18
    22dc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    22e0:	b	2290 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x16c0>
    22e4:	ldr	x0, [sp, #144]
    22e8:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    22ec:	mov	x2, #0x1                   	// #1
    22f0:	add	x1, x1, #0x0
    22f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    22f8:	b	1b30 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xf60>
    22fc:	ldr	w1, [sp, #664]
    2300:	ldr	x20, [sp, #648]
    2304:	lsl	x1, x1, #6
    2308:	b	1b48 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0xf78>
    230c:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2310:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2314:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2318:	add	x3, x3, #0x0
    231c:	add	x1, x1, #0x0
    2320:	add	x0, x0, #0x0
    2324:	mov	w2, #0x2fe                 	// #766
    2328:	bl	0 <__assert_fail>
    232c:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2330:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2334:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2338:	add	x3, x3, #0x0
    233c:	add	x1, x1, #0x0
    2340:	add	x0, x0, #0x0
    2344:	mov	w2, #0x2fd                 	// #765
    2348:	bl	0 <__assert_fail>
    234c:	bl	0 <_ZSt17__throw_bad_allocv>
    2350:	adrp	x3, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2354:	adrp	x1, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2358:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    235c:	add	x3, x3, #0x0
    2360:	add	x1, x1, #0x0
    2364:	add	x0, x0, #0x0
    2368:	mov	w2, #0x2ff                 	// #767
    236c:	bl	0 <__assert_fail>
    2370:	adrp	x0, 0 <_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.isra.0>
    2374:	add	x0, x0, #0x0
    2378:	bl	0 <_ZSt19__throw_logic_errorPKc>
    237c:	mov	x0, #0xffffffffffffffff    	// #-1
    2380:	str	x0, [sp, #728]
    2384:	add	x0, sp, #0x280
    2388:	str	xzr, [sp, #736]
    238c:	mov	x2, #0x0                   	// #0
    2390:	ldp	x0, x1, [x0, #88]
    2394:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    2398:	tst	w0, #0xff
    239c:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    23a0:	mov	x0, #0xfffffffffffffffe    	// #-2
    23a4:	str	x0, [sp, #824]
    23a8:	add	x0, sp, #0x280
    23ac:	str	xzr, [sp, #832]
    23b0:	mov	x2, #0x0                   	// #0
    23b4:	ldp	x0, x1, [x0, #184]
    23b8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    23bc:	tst	w0, #0xff
    23c0:	b.eq	1ee8 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1318>  // b.none
    23c4:	ldr	w1, [sp, #376]
    23c8:	ldr	x19, [sp, #360]
    23cc:	lsl	x1, x1, #6
    23d0:	add	x20, x19, x1
    23d4:	cmp	x19, x20
    23d8:	b.ne	2414 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1844>  // b.any
    23dc:	b	21f4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1624>
    23e0:	ldr	x21, [x19]
    23e4:	cbz	x21, 2408 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1838>
    23e8:	mov	x1, x21
    23ec:	ldr	x0, [x1], #16
    23f0:	cmp	x0, x1
    23f4:	b.eq	23fc <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x182c>  // b.none
    23f8:	bl	0 <_ZdlPv>
    23fc:	mov	x0, x21
    2400:	mov	x1, #0x20                  	// #32
    2404:	bl	0 <_ZdlPvm>
    2408:	add	x19, x19, #0x40
    240c:	cmp	x20, x19
    2410:	b.eq	2434 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1864>  // b.none
    2414:	ldr	x0, [x19, #8]
    2418:	cmn	x0, #0x1
    241c:	b.eq	23e0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1810>  // b.none
    2420:	cmn	x0, #0x2
    2424:	b.eq	23e0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1810>  // b.none
    2428:	add	x0, x19, #0x18
    242c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    2430:	b	23e0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1810>
    2434:	ldr	w1, [sp, #376]
    2438:	ldr	x20, [sp, #360]
    243c:	lsl	x1, x1, #6
    2440:	b	21f4 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE+0x1624>
    2444:	nop

0000000000002448 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>:
    2448:	stp	x29, x30, [sp, #-32]!
    244c:	mov	x2, x0
    2450:	mov	x29, sp
    2454:	add	x0, sp, #0x18
    2458:	str	x2, [sp, #24]
    245c:	bl	bd0 <_ZN12_GLOBAL__N_111JSONEmitter3runERN4llvm11raw_ostreamE>
    2460:	ldp	x29, x30, [sp], #32
    2464:	ret

Disassembly of section .text._ZN4llvm4json5ValueC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x2, #0x0                   	// #0
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	mov	w1, #0x5                   	// #5
  18:	mov	x20, x0
  1c:	strb	w1, [x0]
  20:	ldp	x0, x1, [x19]
  24:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  28:	tst	w0, #0xff
  2c:	b.eq	94 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>  // b.none
  30:	mov	x0, x19
  34:	add	x1, x20, #0x18
  38:	str	x1, [x20, #8]
  3c:	ldr	x1, [x0], #16
  40:	cmp	x1, x0
  44:	b.eq	70 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x70>  // b.none
  48:	str	x1, [x20, #8]
  4c:	ldr	x1, [x19, #8]
  50:	stp	x0, xzr, [x19]
  54:	ldr	x2, [x19, #16]
  58:	str	x1, [x20, #16]
  5c:	strb	wzr, [x19, #16]
  60:	str	x2, [x20, #24]
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	ldr	x1, [x19, #8]
  74:	stp	x0, xzr, [x19]
  78:	ldp	x2, x3, [x19, #16]
  7c:	str	x1, [x20, #16]
  80:	strb	wzr, [x19, #16]
  84:	stp	x2, x3, [x20, #24]
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret
  94:	adrp	x3, 0 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  98:	adrp	x1, 0 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  9c:	adrp	x0, 0 <_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  a0:	add	x3, x3, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x0, x0, #0x0
  ac:	mov	w2, #0x138                 	// #312
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4json5ValueC2ENS_9StringRefE:

0000000000000000 <_ZN4llvm4json5ValueC1ENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x3, x0
   8:	mov	x0, x1
   c:	mov	x29, sp
  10:	mov	x1, x2
  14:	mov	w2, #0x4                   	// #4
  18:	strb	w2, [x3]
  1c:	mov	x2, #0x0                   	// #0
  20:	stp	x0, x1, [x3, #8]
  24:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  28:	tst	w0, #0xff
  2c:	b.eq	38 <_ZN4llvm4json5ValueC1ENS_9StringRefE+0x38>  // b.none
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	adrp	x3, 0 <_ZN4llvm4json5ValueC1ENS_9StringRefE>
  3c:	adrp	x1, 0 <_ZN4llvm4json5ValueC1ENS_9StringRefE>
  40:	adrp	x0, 0 <_ZN4llvm4json5ValueC1ENS_9StringRefE>
  44:	add	x3, x3, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x0, x0, #0x0
  50:	mov	w2, #0x144                 	// #324
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4json5ValueC2EPKc:

0000000000000000 <_ZN4llvm4json5ValueC1EPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	mov	x1, #0x0                   	// #0
  18:	cbz	x19, 28 <_ZN4llvm4json5ValueC1EPKc+0x28>
  1c:	mov	x0, x19
  20:	bl	0 <strlen>
  24:	mov	x1, x0
  28:	mov	w0, #0x4                   	// #4
  2c:	strb	w0, [x20]
  30:	stp	x19, x1, [x20, #8]
  34:	mov	x0, x19
  38:	mov	x2, #0x0                   	// #0
  3c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  40:	tst	w0, #0xff
  44:	b.eq	54 <_ZN4llvm4json5ValueC1EPKc+0x54>  // b.none
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	adrp	x3, 0 <_ZN4llvm4json5ValueC1EPKc>
  58:	adrp	x1, 0 <_ZN4llvm4json5ValueC1EPKc>
  5c:	adrp	x0, 0 <_ZN4llvm4json5ValueC1EPKc>
  60:	add	x3, x3, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x0, x0, #0x0
  6c:	mov	w2, #0x144                 	// #324
  70:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4json9ObjectKeyC2EPKc:

0000000000000000 <_ZN4llvm4json9ObjectKeyC1EPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	mov	x0, #0x0                   	// #0
  18:	cbz	x1, 24 <_ZN4llvm4json9ObjectKeyC1EPKc+0x24>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	stp	xzr, x20, [x19]
  28:	mov	x2, #0x0                   	// #0
  2c:	str	x0, [x19, #16]
  30:	ldp	x0, x1, [x19, #8]
  34:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  38:	tst	w0, #0xff
  3c:	b.eq	4c <_ZN4llvm4json9ObjectKeyC1EPKc+0x4c>  // b.none
  40:	ldp	x19, x20, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	adrp	x3, 0 <_ZN4llvm4json9ObjectKeyC1EPKc>
  50:	adrp	x1, 0 <_ZN4llvm4json9ObjectKeyC1EPKc>
  54:	adrp	x0, 0 <_ZN4llvm4json9ObjectKeyC1EPKc>
  58:	add	x3, x3, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x0, x0, #0x0
  64:	mov	w2, #0x1f8                 	// #504
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	w0, [x0, #24]
  14:	stp	x21, x22, [sp, #32]
  18:	cbnz	w0, 38 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x38>
  1c:	ldr	x22, [x20, #8]
  20:	mov	x1, #0x0                   	// #0
  24:	mov	x0, x22
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x21, x22, [sp, #32]
  30:	ldp	x29, x30, [sp], #96
  34:	b	0 <_ZdlPvm>
  38:	mov	x0, #0xffffffffffffffff    	// #-1
  3c:	stp	x0, xzr, [sp, #56]
  40:	mov	x2, #0x0                   	// #0
  44:	ldp	x0, x1, [sp, #56]
  48:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  4c:	tst	w0, #0xff
  50:	b.eq	fc <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xfc>  // b.none
  54:	mov	x0, #0xfffffffffffffffe    	// #-2
  58:	stp	x0, xzr, [sp, #80]
  5c:	mov	x2, #0x0                   	// #0
  60:	ldp	x0, x1, [sp, #80]
  64:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  68:	tst	w0, #0xff
  6c:	b.eq	fc <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xfc>  // b.none
  70:	ldr	w1, [x20, #24]
  74:	ldr	x19, [x20, #8]
  78:	lsl	x1, x1, #6
  7c:	add	x22, x19, x1
  80:	cmp	x19, x22
  84:	b.eq	24 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x24>  // b.none
  88:	ldr	x0, [x19, #8]
  8c:	cmn	x0, #0x1
  90:	b.ne	e8 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xe8>  // b.any
  94:	ldr	x21, [x19]
  98:	cbz	x21, bc <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xbc>
  9c:	mov	x1, x21
  a0:	ldr	x0, [x1], #16
  a4:	cmp	x0, x1
  a8:	b.eq	b0 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0xb0>  // b.none
  ac:	bl	0 <_ZdlPv>
  b0:	mov	x0, x21
  b4:	mov	x1, #0x20                  	// #32
  b8:	bl	0 <_ZdlPvm>
  bc:	add	x19, x19, #0x40
  c0:	cmp	x22, x19
  c4:	b.ne	88 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x88>  // b.any
  c8:	ldr	x22, [x20, #8]
  cc:	ldr	w1, [x20, #24]
  d0:	mov	x0, x22
  d4:	ldp	x19, x20, [sp, #16]
  d8:	lsl	x1, x1, #6
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldp	x29, x30, [sp], #96
  e4:	b	0 <_ZdlPvm>
  e8:	cmn	x0, #0x2
  ec:	b.eq	94 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x94>  // b.none
  f0:	add	x0, x19, #0x18
  f4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  f8:	b	94 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev+0x94>
  fc:	adrp	x3, 0 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev>
 100:	adrp	x1, 0 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev>
 104:	adrp	x0, 0 <_ZN4llvm8DenseMapINS_4json9ObjectKeyENS1_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS2_S3_EEED1Ev>
 108:	add	x3, x3, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x0, x0, #0x0
 114:	mov	w2, #0x1f8                 	// #504
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm4json5ValueESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldp	x19, x20, [x0]
  10:	cmp	x19, x20
  14:	b.eq	3c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EED1Ev+0x3c>  // b.none
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x0
  20:	mov	x0, x19
  24:	add	x19, x19, #0x28
  28:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  2c:	cmp	x20, x19
  30:	b.ne	20 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EED1Ev+0x20>  // b.any
  34:	ldr	x20, [x21]
  38:	ldr	x21, [sp, #32]
  3c:	cbz	x20, 50 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EED1Ev+0x50>
  40:	mov	x0, x20
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZdlPv>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	cbz	x1, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0xb4>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x24, x0
  1c:	stp	x21, x22, [sp, #32]
  20:	add	x22, x19, #0x40
  24:	ldr	x1, [x19, #24]
  28:	mov	x0, x24
  2c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  30:	ldr	x21, [x22, #8]
  34:	ldr	x20, [x19, #64]
  38:	ldr	x23, [x19, #16]
  3c:	cmp	x20, x21
  40:	b.eq	60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x60>  // b.none
  44:	nop
  48:	mov	x0, x20
  4c:	add	x20, x20, #0x28
  50:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  54:	cmp	x21, x20
  58:	b.ne	48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x48>  // b.any
  5c:	ldr	x21, [x22]
  60:	cbz	x21, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x6c>
  64:	mov	x0, x21
  68:	bl	0 <_ZdlPv>
  6c:	ldr	x0, [x19, #32]
  70:	add	x1, x19, #0x30
  74:	cmp	x0, x1
  78:	b.eq	94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x94>  // b.none
  7c:	bl	0 <_ZdlPv>
  80:	mov	x0, x19
  84:	bl	0 <_ZdlPv>
  88:	cbz	x23, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0xa0>
  8c:	mov	x19, x23
  90:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>
  94:	mov	x0, x19
  98:	bl	0 <_ZdlPv>
  9c:	cbnz	x23, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x8c>
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldp	x23, x24, [sp, #48]
  ac:	ldp	x29, x30, [sp], #64
  b0:	ret
  b4:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   8:	movk	x3, #0xcccd
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x24, x0
  1c:	ldp	x23, x22, [x0]
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x20, x1
  28:	stp	x25, x26, [sp, #64]
  2c:	mov	x1, #0x3333333333333333    	// #3689348814741910323
  30:	movk	x1, #0x333, lsl #48
  34:	str	x27, [sp, #80]
  38:	sub	x0, x22, x23
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	1c4 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c4>  // b.none
  4c:	mov	x19, x2
  50:	sub	x21, x20, x23
  54:	cbz	x0, 1a8 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a8>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x26, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	194 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x194>  // b.plast
  68:	mov	x0, x26
  6c:	bl	0 <_Znwm>
  70:	mov	x25, x0
  74:	add	x26, x0, x26
  78:	add	x27, x0, #0x28
  7c:	mov	x1, x19
  80:	add	x0, x25, x21
  84:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
  88:	cmp	x20, x23
  8c:	b.eq	e4 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe4>  // b.none
  90:	mov	x21, x25
  94:	mov	x19, x23
  98:	mov	x1, x19
  9c:	mov	x0, x21
  a0:	add	x19, x19, #0x28
  a4:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
  a8:	cmp	x20, x19
  ac:	add	x21, x21, #0x28
  b0:	b.ne	98 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>  // b.any
  b4:	sub	x27, x20, #0x28
  b8:	mov	x0, #0xcccd                	// #52429
  bc:	sub	x27, x27, x23
  c0:	movk	x0, #0xcccc, lsl #16
  c4:	movk	x0, #0xcccc, lsl #32
  c8:	lsr	x27, x27, #3
  cc:	movk	x0, #0xccc, lsl #48
  d0:	mul	x27, x27, x0
  d4:	and	x27, x27, #0x1fffffffffffffff
  d8:	add	x27, x27, #0x2
  dc:	add	x27, x27, x27, lsl #2
  e0:	add	x27, x25, x27, lsl #3
  e4:	cmp	x20, x22
  e8:	mov	x19, x20
  ec:	mov	x21, x27
  f0:	b.eq	144 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x144>  // b.none
  f4:	nop
  f8:	mov	x1, x19
  fc:	mov	x0, x21
 100:	add	x19, x19, #0x28
 104:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
 108:	cmp	x19, x22
 10c:	add	x21, x21, #0x28
 110:	b.ne	f8 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf8>  // b.any
 114:	sub	x0, x22, x20
 118:	mov	x1, #0xcccd                	// #52429
 11c:	sub	x0, x0, #0x28
 120:	movk	x1, #0xcccc, lsl #16
 124:	movk	x1, #0xcccc, lsl #32
 128:	lsr	x0, x0, #3
 12c:	movk	x1, #0xccc, lsl #48
 130:	mul	x0, x0, x1
 134:	and	x0, x0, #0x1fffffffffffffff
 138:	add	x0, x0, #0x1
 13c:	add	x0, x0, x0, lsl #2
 140:	add	x27, x27, x0, lsl #3
 144:	cmp	x23, x22
 148:	mov	x19, x23
 14c:	b.eq	164 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x164>  // b.none
 150:	mov	x0, x19
 154:	add	x19, x19, #0x28
 158:	bl	0 <_ZN4llvm4json5Value7destroyEv>
 15c:	cmp	x19, x22
 160:	b.ne	150 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.any
 164:	cbz	x23, 170 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x170>
 168:	mov	x0, x23
 16c:	bl	0 <_ZdlPv>
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x21, x22, [sp, #32]
 178:	stp	x25, x27, [x24]
 17c:	str	x26, [x24, #16]
 180:	ldp	x23, x24, [sp, #48]
 184:	ldp	x25, x26, [sp, #64]
 188:	ldr	x27, [sp, #80]
 18c:	ldp	x29, x30, [sp], #96
 190:	ret
 194:	cbnz	x0, 1b0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1b0>
 198:	mov	x27, #0x28                  	// #40
 19c:	mov	x26, #0x0                   	// #0
 1a0:	mov	x25, #0x0                   	// #0
 1a4:	b	7c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x7c>
 1a8:	mov	x26, #0x28                  	// #40
 1ac:	b	68 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
 1b0:	cmp	x0, x1
 1b4:	mov	x26, #0x28                  	// #40
 1b8:	csel	x0, x0, x1, ls  // ls = plast
 1bc:	mul	x26, x0, x26
 1c0:	b	68 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
 1c4:	adrp	x0, 0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 1c8:	add	x0, x0, #0x0
 1cc:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm4json5ValueESaIS2_EE12emplace_backIJS2_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE12emplace_backIJS2_EEEvDpOT_>:
   0:	ldp	x3, x4, [x0, #8]
   4:	cmp	x3, x4
   8:	b.eq	3c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE12emplace_backIJS2_EEEvDpOT_+0x3c>  // b.none
   c:	stp	x29, x30, [sp, #-32]!
  10:	mov	x29, sp
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	mov	x0, x3
  20:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
  24:	ldr	x0, [x19, #8]
  28:	add	x0, x0, #0x28
  2c:	str	x0, [x19, #8]
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	x2, x1
  40:	mov	x1, x3
  44:	b	0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE12emplace_backIJS2_EEEvDpOT_>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x23, x1
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x25, x0
  24:	stp	x27, x28, [sp, #80]
  28:	cbz	x19, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xfc>
  2c:	ldp	x28, x21, [x1]
  30:	mov	x22, #0x7fffffff            	// #2147483647
  34:	mov	x24, #0xffffffff80000000    	// #-2147483648
  38:	ldp	x27, x20, [x19, #32]
  3c:	mov	x0, x28
  40:	cmp	x21, x20
  44:	csel	x26, x21, x20, ls  // ls = plast
  48:	cbz	x26, 5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x5c>
  4c:	mov	x2, x26
  50:	mov	x1, x27
  54:	bl	0 <memcmp>
  58:	cbnz	w0, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x74>
  5c:	sub	x1, x21, x20
  60:	mov	w0, w1
  64:	cmp	x1, x22
  68:	b.gt	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x8c>
  6c:	cmp	x1, x24
  70:	b.lt	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x78>  // b.tstop
  74:	tbz	w0, #31, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x8c>
  78:	ldr	x3, [x19, #16]
  7c:	mov	w0, #0x1                   	// #1
  80:	cbz	x3, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x98>
  84:	mov	x19, x3
  88:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  8c:	ldr	x3, [x19, #24]
  90:	mov	w0, #0x0                   	// #0
  94:	cbnz	x3, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x84>
  98:	mov	x22, x19
  9c:	cbnz	w0, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x100>
  a0:	cbz	x26, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xb8>
  a4:	mov	x2, x26
  a8:	mov	x1, x28
  ac:	mov	x0, x27
  b0:	bl	0 <memcmp>
  b4:	cbnz	w0, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xd4>
  b8:	sub	x0, x20, x21
  bc:	mov	x1, #0x7fffffff            	// #2147483647
  c0:	cmp	x0, x1
  c4:	b.gt	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xd8>
  c8:	mov	x1, #0xffffffff80000000    	// #-2147483648
  cc:	cmp	x0, x1
  d0:	b.lt	130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x130>  // b.tstop
  d4:	tbnz	w0, #31, 130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x130>
  d8:	mov	x0, x19
  dc:	mov	x1, #0x0                   	// #0
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x25, x26, [sp, #64]
  f0:	ldp	x27, x28, [sp, #80]
  f4:	ldp	x29, x30, [sp], #96
  f8:	ret
  fc:	add	x19, x0, #0x8
 100:	ldr	x0, [x25, #24]
 104:	cmp	x19, x0
 108:	b.eq	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x154>  // b.none
 10c:	mov	x0, x19
 110:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 114:	ldp	x28, x21, [x23]
 118:	mov	x22, x19
 11c:	ldp	x27, x20, [x0, #32]
 120:	mov	x19, x0
 124:	cmp	x20, x21
 128:	csel	x26, x20, x21, ls  // ls = plast
 12c:	b	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xa0>
 130:	mov	x1, x22
 134:	mov	x0, #0x0                   	// #0
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x23, x24, [sp, #48]
 144:	ldp	x25, x26, [sp, #64]
 148:	ldp	x27, x28, [sp, #80]
 14c:	ldp	x29, x30, [sp], #96
 150:	ret
 154:	mov	x1, x19
 158:	mov	x0, #0x0                   	// #0
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x27, x28, [sp, #80]
 170:	ldp	x29, x30, [sp], #96
 174:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	add	x3, x0, #0x8
   8:	cmp	x1, x3
   c:	mov	x29, sp
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x0
  18:	mov	x24, x2
  1c:	b.eq	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x170>  // b.none
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x19, x1
  28:	stp	x21, x22, [sp, #32]
  2c:	stp	x25, x26, [sp, #64]
  30:	ldp	x25, x20, [x2]
  34:	ldp	x26, x21, [x1, #32]
  38:	cmp	x20, x21
  3c:	csel	x22, x20, x21, ls  // ls = plast
  40:	cbz	x22, d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xd8>
  44:	mov	x2, x22
  48:	mov	x1, x26
  4c:	mov	x0, x25
  50:	bl	0 <memcmp>
  54:	cmp	w0, #0x0
  58:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xec>
  5c:	sub	x0, x20, x21
  60:	mov	x1, #0x7fffffff            	// #2147483647
  64:	cmp	x0, x1
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>
  6c:	mov	x1, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x0, x1
  74:	b.lt	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf0>  // b.tstop
  78:	tbnz	w0, #31, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf0>
  7c:	cbz	x22, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x98>
  80:	mov	x1, x25
  84:	mov	x2, x22
  88:	mov	x0, x26
  8c:	bl	0 <memcmp>
  90:	mov	w1, w0
  94:	cbnz	w0, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xb4>
  98:	sub	x1, x21, x20
  9c:	mov	x0, #0x7fffffff            	// #2147483647
  a0:	cmp	x1, x0
  a4:	b.gt	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xb8>
  a8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  ac:	cmp	x1, x0
  b0:	b.lt	1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1f0>  // b.tstop
  b4:	tbnz	w1, #31, 1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1f0>
  b8:	ldp	x25, x26, [sp, #64]
  bc:	mov	x0, x19
  c0:	mov	x1, #0x0                   	// #0
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	sub	x0, x20, x21
  dc:	mov	x1, #0x7fffffff            	// #2147483647
  e0:	cmp	x0, x1
  e4:	b.le	6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x6c>
  e8:	b	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x98>
  ec:	b.ge	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>  // b.tcont
  f0:	ldr	x0, [x23, #24]
  f4:	cmp	x0, x19
  f8:	mov	x0, x19
  fc:	b.eq	280 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x280>  // b.none
 100:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 104:	mov	x21, x0
 108:	ldr	x22, [x0, #40]
 10c:	cmp	x20, x22
 110:	csel	x2, x20, x22, ls  // ls = plast
 114:	cbz	x2, 128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x128>
 118:	ldr	x0, [x0, #32]
 11c:	mov	x1, x25
 120:	bl	0 <memcmp>
 124:	cbnz	w0, 144 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x144>
 128:	sub	x0, x22, x20
 12c:	mov	x1, #0x7fffffff            	// #2147483647
 130:	cmp	x0, x1
 134:	b.gt	260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x260>
 138:	mov	x1, #0xffffffff80000000    	// #-2147483648
 13c:	cmp	x0, x1
 140:	b.lt	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x148>  // b.tstop
 144:	tbz	w0, #31, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x260>
 148:	ldr	x1, [x21, #24]
 14c:	ldp	x23, x24, [sp, #48]
 150:	cmp	x1, #0x0
 154:	csel	x1, x21, x19, eq  // eq = none
 158:	csel	x0, x19, xzr, ne  // ne = any
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x25, x26, [sp, #64]
 168:	ldp	x29, x30, [sp], #80
 16c:	ret
 170:	ldr	x0, [x0, #40]
 174:	cbz	x0, 1dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1dc>
 178:	stp	x19, x20, [sp, #16]
 17c:	ldr	x19, [x23, #32]
 180:	stp	x21, x22, [sp, #32]
 184:	ldr	x20, [x2, #8]
 188:	ldr	x21, [x19, #40]
 18c:	cmp	x21, x20
 190:	csel	x2, x21, x20, ls  // ls = plast
 194:	cbz	x2, 1a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1a8>
 198:	ldr	x1, [x24]
 19c:	ldr	x0, [x19, #32]
 1a0:	bl	0 <memcmp>
 1a4:	cbnz	w0, 1c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1c4>
 1a8:	sub	x0, x21, x20
 1ac:	mov	x1, #0x7fffffff            	// #2147483647
 1b0:	cmp	x0, x1
 1b4:	b.gt	1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1d4>
 1b8:	mov	x1, #0xffffffff80000000    	// #-2147483648
 1bc:	cmp	x0, x1
 1c0:	b.lt	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1c8>  // b.tstop
 1c4:	tbz	w0, #31, 1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1d4>
 1c8:	mov	x1, x19
 1cc:	mov	x0, #0x0                   	// #0
 1d0:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xc4>
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldp	x21, x22, [sp, #32]
 1dc:	mov	x1, x24
 1e0:	mov	x0, x23
 1e4:	ldp	x23, x24, [sp, #48]
 1e8:	ldp	x29, x30, [sp], #80
 1ec:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>
 1f0:	ldr	x0, [x23, #32]
 1f4:	cmp	x0, x19
 1f8:	b.eq	28c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x28c>  // b.none
 1fc:	mov	x0, x19
 200:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 204:	ldr	x22, [x0, #40]
 208:	mov	x21, x0
 20c:	cmp	x20, x22
 210:	csel	x2, x20, x22, ls  // ls = plast
 214:	cbz	x2, 228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x228>
 218:	ldr	x1, [x21, #32]
 21c:	mov	x0, x25
 220:	bl	0 <memcmp>
 224:	cbnz	w0, 244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x244>
 228:	sub	x0, x20, x22
 22c:	mov	x1, #0x7fffffff            	// #2147483647
 230:	cmp	x0, x1
 234:	b.gt	260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x260>
 238:	mov	x1, #0xffffffff80000000    	// #-2147483648
 23c:	cmp	x0, x1
 240:	b.lt	248 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x248>  // b.tstop
 244:	tbz	w0, #31, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x260>
 248:	ldr	x1, [x19, #24]
 24c:	ldp	x25, x26, [sp, #64]
 250:	cmp	x1, #0x0
 254:	csel	x0, x21, xzr, ne  // ne = any
 258:	csel	x1, x21, x19, ne  // ne = any
 25c:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xc4>
 260:	mov	x1, x24
 264:	mov	x0, x23
 268:	ldp	x19, x20, [sp, #16]
 26c:	ldp	x21, x22, [sp, #32]
 270:	ldp	x23, x24, [sp, #48]
 274:	ldp	x25, x26, [sp, #64]
 278:	ldp	x29, x30, [sp], #80
 27c:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>
 280:	mov	x1, x19
 284:	ldp	x25, x26, [sp, #64]
 288:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xc4>
 28c:	mov	x1, x19
 290:	mov	x0, #0x0                   	// #0
 294:	ldp	x25, x26, [sp, #64]
 298:	b	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xc4>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x3
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x0, #0x58                  	// #88
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x24, x1
  24:	stp	x25, x26, [sp, #64]
  28:	bl	0 <_Znwm>
  2c:	mov	x19, x0
  30:	add	x25, x0, #0x30
  34:	ldr	x0, [x20]
  38:	ldr	x20, [x0, #8]
  3c:	str	x25, [x19, #32]
  40:	ldr	x23, [x0]
  44:	cmn	x23, x20
  48:	cset	w22, ne  // ne = any
  4c:	cmp	x23, #0x0
  50:	csel	w22, w22, wzr, eq  // eq = none
  54:	cbnz	w22, 1f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x1f0>
  58:	str	x20, [sp, #104]
  5c:	add	x26, x19, #0x20
  60:	cmp	x20, #0xf
  64:	b.hi	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x154>  // b.pmore
  68:	cmp	x20, #0x1
  6c:	b.ne	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xf0>  // b.any
  70:	ldrb	w1, [x23]
  74:	mov	x0, x25
  78:	strb	w1, [x19, #48]
  7c:	mov	x23, x19
  80:	str	x20, [x19, #40]
  84:	strb	wzr, [x0, x20]
  88:	mov	x1, x24
  8c:	mov	x2, x26
  90:	mov	x0, x21
  94:	stp	xzr, xzr, [x23, #64]!
  98:	str	xzr, [x23, #16]
  9c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  a0:	mov	x20, x1
  a4:	mov	x24, x0
  a8:	cbz	x1, 188 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x188>
  ac:	add	x3, x21, #0x8
  b0:	cbz	x0, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xfc>
  b4:	mov	w22, #0x1                   	// #1
  b8:	mov	x2, x20
  bc:	mov	w0, w22
  c0:	mov	x1, x19
  c4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  c8:	ldr	x1, [x21, #40]
  cc:	mov	x0, x19
  d0:	ldp	x19, x20, [sp, #16]
  d4:	add	x1, x1, #0x1
  d8:	str	x1, [x21, #40]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldp	x23, x24, [sp, #48]
  e4:	ldp	x25, x26, [sp, #64]
  e8:	ldp	x29, x30, [sp], #112
  ec:	ret
  f0:	mov	x0, x25
  f4:	cbz	x20, 7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x7c>
  f8:	b	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x170>
  fc:	cmp	x1, x3
 100:	b.eq	b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xb4>  // b.none
 104:	ldr	x24, [x19, #40]
 108:	ldr	x23, [x1, #40]
 10c:	cmp	x24, x23
 110:	csel	x2, x24, x23, ls  // ls = plast
 114:	cbz	x2, 130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x130>
 118:	ldr	x0, [x19, #32]
 11c:	str	x3, [sp, #88]
 120:	ldr	x1, [x1, #32]
 124:	bl	0 <memcmp>
 128:	ldr	x3, [sp, #88]
 12c:	cbnz	w0, 14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x14c>
 130:	sub	x0, x24, x23
 134:	mov	x1, #0x7fffffff            	// #2147483647
 138:	cmp	x0, x1
 13c:	b.gt	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xb8>
 140:	mov	x1, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x0, x1
 148:	b.lt	b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xb4>  // b.tstop
 14c:	lsr	w22, w0, #31
 150:	b	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xb8>
 154:	add	x1, sp, #0x68
 158:	mov	x0, x26
 15c:	mov	x2, #0x0                   	// #0
 160:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 164:	ldr	x1, [sp, #104]
 168:	str	x0, [x19, #32]
 16c:	str	x1, [x19, #48]
 170:	mov	x2, x20
 174:	mov	x1, x23
 178:	bl	0 <memcpy>
 17c:	ldr	x0, [x19, #32]
 180:	ldr	x20, [sp, #104]
 184:	b	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x7c>
 188:	ldr	x21, [x23, #8]
 18c:	ldr	x20, [x19, #64]
 190:	cmp	x20, x21
 194:	b.eq	1b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x1b0>  // b.none
 198:	mov	x0, x20
 19c:	add	x20, x20, #0x28
 1a0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
 1a4:	cmp	x21, x20
 1a8:	b.ne	198 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x198>  // b.any
 1ac:	ldr	x21, [x19, #64]
 1b0:	cbz	x21, 1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x1bc>
 1b4:	mov	x0, x21
 1b8:	bl	0 <_ZdlPv>
 1bc:	ldr	x0, [x19, #32]
 1c0:	cmp	x25, x0
 1c4:	b.eq	1cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x1cc>  // b.none
 1c8:	bl	0 <_ZdlPv>
 1cc:	mov	x0, x19
 1d0:	bl	0 <_ZdlPv>
 1d4:	mov	x0, x24
 1d8:	ldp	x19, x20, [sp, #16]
 1dc:	ldp	x21, x22, [sp, #32]
 1e0:	ldp	x23, x24, [sp, #48]
 1e4:	ldp	x25, x26, [sp, #64]
 1e8:	ldp	x29, x30, [sp], #112
 1ec:	ret
 1f0:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
 1f4:	add	x0, x0, #0x0
 1f8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Main.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL11reportErrorPKcN4llvm5TwineE>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x20, x1
      10:	stp	x21, x22, [sp, #32]
      14:	mov	x21, x0
      18:	bl	0 <_ZN4llvm4errsEv>
      1c:	mov	x19, x0
      20:	cbz	x21, cc <_ZL11reportErrorPKcN4llvm5TwineE+0xcc>
      24:	mov	x0, x21
      28:	bl	0 <strlen>
      2c:	mov	x22, x0
      30:	ldp	x3, x0, [x19, #16]
      34:	sub	x3, x3, x0
      38:	cmp	x22, x3
      3c:	b.hi	b8 <_ZL11reportErrorPKcN4llvm5TwineE+0xb8>  // b.pmore
      40:	cbz	x22, d4 <_ZL11reportErrorPKcN4llvm5TwineE+0xd4>
      44:	mov	x1, x21
      48:	mov	x2, x22
      4c:	bl	0 <memcpy>
      50:	ldp	x3, x1, [x19, #16]
      54:	add	x0, x1, x22
      58:	str	x0, [x19, #24]
      5c:	sub	x3, x3, x0
      60:	cmp	x3, #0x1
      64:	b.hi	dc <_ZL11reportErrorPKcN4llvm5TwineE+0xdc>  // b.pmore
      68:	mov	x0, x19
      6c:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
      70:	mov	x2, #0x2                   	// #2
      74:	add	x1, x1, #0x0
      78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      7c:	mov	x19, x0
      80:	mov	x1, x19
      84:	mov	x0, x20
      88:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
      8c:	bl	0 <_ZN4llvm4errsEv>
      90:	ldr	x2, [x0, #8]
      94:	ldr	x1, [x0, #24]
      98:	cmp	x1, x2
      9c:	b.eq	a4 <_ZL11reportErrorPKcN4llvm5TwineE+0xa4>  // b.none
      a0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
      a4:	mov	w0, #0x1                   	// #1
      a8:	ldp	x19, x20, [sp, #16]
      ac:	ldp	x21, x22, [sp, #32]
      b0:	ldp	x29, x30, [sp], #48
      b4:	ret
      b8:	mov	x0, x19
      bc:	mov	x2, x22
      c0:	mov	x1, x21
      c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      c8:	mov	x19, x0
      cc:	ldp	x3, x0, [x19, #16]
      d0:	sub	x3, x3, x0
      d4:	cmp	x3, #0x1
      d8:	b.ls	68 <_ZL11reportErrorPKcN4llvm5TwineE+0x68>  // b.plast
      dc:	mov	w1, #0x203a                	// #8250
      e0:	strh	w1, [x0]
      e4:	ldr	x0, [x19, #24]
      e8:	add	x0, x0, #0x2
      ec:	str	x0, [x19, #24]
      f0:	b	80 <_ZL11reportErrorPKcN4llvm5TwineE+0x80>
      f4:	nop

00000000000000f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0>:
      f8:	stp	x29, x30, [sp, #-64]!
      fc:	mov	x29, sp
     100:	str	x0, [sp, #56]
     104:	cbz	x0, 188 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0+0x90>
     108:	stp	x19, x20, [sp, #16]
     10c:	mov	x20, x0
     110:	ldr	x0, [x0, #48]
     114:	cbz	x0, 11c <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0+0x24>
     118:	bl	f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0>
     11c:	ldr	x19, [x20, #16]
     120:	cbz	x19, 174 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0+0x7c>
     124:	str	x21, [sp, #32]
     128:	ldr	x1, [x19, #24]
     12c:	mov	x0, x20
     130:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     134:	ldr	x2, [x19, #32]
     138:	add	x1, x19, #0x30
     13c:	mov	x0, x19
     140:	cmp	x2, x1
     144:	ldr	x21, [x19, #16]
     148:	b.eq	168 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0+0x70>  // b.none
     14c:	mov	x0, x2
     150:	bl	0 <_ZdlPv>
     154:	mov	x0, x19
     158:	bl	0 <_ZdlPv>
     15c:	cbz	x21, 170 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0+0x78>
     160:	mov	x19, x21
     164:	b	128 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0+0x30>
     168:	bl	0 <_ZdlPv>
     16c:	cbnz	x21, 160 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0+0x68>
     170:	ldr	x21, [sp, #32]
     174:	mov	x0, x20
     178:	ldp	x19, x20, [sp, #16]
     17c:	mov	x1, #0x38                  	// #56
     180:	ldp	x29, x30, [sp], #64
     184:	b	0 <_ZdlPvm>
     188:	ldp	x29, x30, [sp], #64
     18c:	ret

0000000000000190 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>:
     190:	sub	sp, sp, #0x5a0
     194:	add	x8, sp, #0x3a0
     198:	add	x9, sp, #0x3d0
     19c:	stp	x29, x30, [sp]
     1a0:	mov	x29, sp
     1a4:	stp	x19, x20, [sp, #16]
     1a8:	add	x20, sp, #0x390
     1ac:	add	x3, x20, #0x8
     1b0:	add	x2, x20, #0x38
     1b4:	stp	x21, x22, [sp, #32]
     1b8:	mov	x22, x0
     1bc:	stp	x23, x24, [sp, #48]
     1c0:	add	x0, x20, #0x60
     1c4:	add	x19, sp, #0x440
     1c8:	stp	x25, x26, [sp, #64]
     1cc:	mov	x25, x1
     1d0:	mov	w1, #0x6                   	// #6
     1d4:	stp	x27, x28, [sp, #80]
     1d8:	adrp	x28, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     1dc:	add	x21, x28, #0x0
     1e0:	stp	xzr, x3, [x8]
     1e4:	add	x23, sp, #0xc8
     1e8:	stp	x3, xzr, [x8, #16]
     1ec:	stp	xzr, x2, [x9]
     1f0:	stp	x2, xzr, [x9, #16]
     1f4:	str	wzr, [sp, #920]
     1f8:	str	wzr, [sp, #968]
     1fc:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
     200:	adrp	x3, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     204:	add	x4, x20, #0x80
     208:	add	x10, sp, #0x418
     20c:	add	x6, x21, #0x288
     210:	ldr	x3, [x3]
     214:	mov	w5, #0x104                 	// #260
     218:	mov	x0, x19
     21c:	mov	x8, x23
     220:	add	x3, x3, #0x10
     224:	mov	w2, #0x1                   	// #1
     228:	mov	x1, #0xffffffffffffffff    	// #-1
     22c:	stp	xzr, x4, [x10]
     230:	stp	x4, xzr, [x10, #16]
     234:	str	x3, [sp, #1008]
     238:	str	wzr, [sp, #1040]
     23c:	str	wzr, [sp, #1080]
     240:	str	x6, [sp, #1088]
     244:	str	xzr, [sp, #1096]
     248:	strh	w5, [sp, #1104]
     24c:	bl	0 <_ZN4llvm12MemoryBuffer14getFileOrSTDINERKNS_5TwineElb>
     250:	ldrb	w0, [sp, #216]
     254:	tbz	w0, #0, 570 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x3e0>
     258:	ldr	w26, [sp, #200]
     25c:	cbz	w26, 1260 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x10d0>
     260:	add	x24, sp, #0xe0
     264:	strb	wzr, [sp, #240]
     268:	add	x2, x24, #0x10
     26c:	mov	x0, x24
     270:	ldr	x1, [x21, #656]
     274:	stp	x2, xzr, [sp, #224]
     278:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
     27c:	add	x1, x1, #0x1b
     280:	add	x21, x21, #0x200
     284:	ldr	x28, [sp, #208]
     288:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
     28c:	ldr	x0, [sp, #232]
     290:	sub	x0, x25, x0
     294:	cmp	x0, #0x1a
     298:	b.ls	14a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1310>  // b.plast
     29c:	mov	x2, #0x1b                  	// #27
     2a0:	mov	x0, x24
     2a4:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     2a8:	add	x1, x1, #0x0
     2ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     2b0:	ldp	x1, x2, [x21, #136]
     2b4:	mov	x0, x24
     2b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     2bc:	ldr	x0, [sp, #232]
     2c0:	sub	x25, x25, x0
     2c4:	cmp	x25, #0x2
     2c8:	b.ls	14a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1310>  // b.plast
     2cc:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     2d0:	add	x1, x1, #0x0
     2d4:	mov	x2, #0x3                   	// #3
     2d8:	mov	x0, x24
     2dc:	add	x25, sp, #0x100
     2e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     2e4:	mov	x1, x0
     2e8:	add	x2, x25, #0x10
     2ec:	str	x2, [sp, #256]
     2f0:	ldr	x2, [x1], #16
     2f4:	cmp	x2, x1
     2f8:	b.eq	11f8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1068>  // b.none
     2fc:	ldr	x3, [x0, #16]
     300:	str	x2, [sp, #256]
     304:	str	x3, [sp, #272]
     308:	strb	wzr, [x0, #16]
     30c:	add	x27, sp, #0x120
     310:	ldr	x2, [x0, #8]
     314:	str	x2, [sp, #264]
     318:	ldr	x2, [x28]
     31c:	mov	x8, x27
     320:	ldr	x2, [x2, #32]
     324:	stp	x1, xzr, [x0]
     328:	mov	w1, w26
     32c:	mov	x0, x28
     330:	blr	x2
     334:	ldp	x3, x4, [sp, #256]
     338:	add	x0, x25, #0x10
     33c:	ldp	x1, x2, [sp, #288]
     340:	mov	x6, #0xf                   	// #15
     344:	cmp	x3, x0
     348:	ldr	x0, [sp, #272]
     34c:	add	x5, x4, x2
     350:	csel	x0, x0, x6, ne  // ne = any
     354:	cmp	x5, x0
     358:	b.ls	374 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1e4>  // b.plast
     35c:	ldr	x0, [sp, #304]
     360:	add	x7, x27, #0x10
     364:	cmp	x1, x7
     368:	csel	x0, x0, x6, ne  // ne = any
     36c:	cmp	x5, x0
     370:	b.ls	1120 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf90>  // b.plast
     374:	mov	x0, x25
     378:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     37c:	mov	x1, x0
     380:	add	x26, sp, #0x140
     384:	add	x2, x26, #0x10
     388:	str	x2, [sp, #320]
     38c:	ldr	x2, [x1], #16
     390:	cmp	x2, x1
     394:	b.eq	11ec <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x105c>  // b.none
     398:	ldr	x3, [x0, #16]
     39c:	str	x2, [sp, #320]
     3a0:	str	x3, [sp, #336]
     3a4:	ldr	x2, [x0, #8]
     3a8:	str	x2, [sp, #328]
     3ac:	stp	x1, xzr, [x0]
     3b0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
     3b4:	ldr	x1, [sp, #328]
     3b8:	strb	wzr, [x0, #16]
     3bc:	cmp	x1, x2
     3c0:	b.eq	14a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1310>  // b.none
     3c4:	mov	x2, #0x1                   	// #1
     3c8:	mov	x0, x26
     3cc:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     3d0:	add	x1, x1, #0x0
     3d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     3d8:	mov	x1, x0
     3dc:	add	x2, x19, #0x10
     3e0:	str	x2, [sp, #1088]
     3e4:	ldr	x2, [x0], #16
     3e8:	cmp	x2, x0
     3ec:	b.eq	1204 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1074>  // b.none
     3f0:	str	x2, [sp, #1088]
     3f4:	ldr	x2, [x1, #16]
     3f8:	str	x2, [sp, #1104]
     3fc:	ldr	x2, [x1, #8]
     400:	str	x2, [sp, #1096]
     404:	mov	w2, #0x104                 	// #260
     408:	stp	x0, xzr, [x1]
     40c:	mov	x0, x22
     410:	strb	wzr, [x1, #16]
     414:	add	x1, sp, #0x80
     418:	strh	w2, [sp, #816]
     41c:	add	x2, sp, #0x420
     420:	str	x19, [sp, #800]
     424:	add	x19, x19, #0x10
     428:	str	xzr, [sp, #808]
     42c:	ldp	x2, x3, [x2, #-256]
     430:	stp	x2, x3, [sp, #128]
     434:	ldr	x2, [sp, #816]
     438:	str	x2, [sp, #144]
     43c:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     440:	mov	w21, w0
     444:	ldr	x1, [sp, #1088]
     448:	cmp	x1, x19
     44c:	b.eq	458 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x2c8>  // b.none
     450:	mov	x0, x1
     454:	bl	0 <_ZdlPv>
     458:	ldr	x0, [sp, #320]
     45c:	add	x26, x26, #0x10
     460:	cmp	x0, x26
     464:	b.eq	46c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x2dc>  // b.none
     468:	bl	0 <_ZdlPv>
     46c:	ldr	x0, [sp, #288]
     470:	add	x27, x27, #0x10
     474:	cmp	x0, x27
     478:	b.eq	480 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x2f0>  // b.none
     47c:	bl	0 <_ZdlPv>
     480:	ldr	x0, [sp, #256]
     484:	add	x25, x25, #0x10
     488:	cmp	x0, x25
     48c:	b.eq	494 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x304>  // b.none
     490:	bl	0 <_ZdlPv>
     494:	ldr	x0, [sp, #224]
     498:	add	x24, x24, #0x10
     49c:	cmp	x0, x24
     4a0:	b.eq	4a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x318>  // b.none
     4a4:	bl	0 <_ZdlPv>
     4a8:	mov	x0, x23
     4ac:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     4b0:	ldr	x19, [sp, #1048]
     4b4:	add	x23, x20, #0x78
     4b8:	cbz	x19, 51c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x38c>
     4bc:	ldr	x1, [x19, #24]
     4c0:	mov	x0, x23
     4c4:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     4c8:	ldr	x0, [x19, #32]
     4cc:	add	x1, x19, #0x30
     4d0:	ldr	x22, [x19, #16]
     4d4:	cmp	x0, x1
     4d8:	b.eq	510 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x380>  // b.none
     4dc:	bl	0 <_ZdlPv>
     4e0:	mov	x0, x19
     4e4:	bl	0 <_ZdlPv>
     4e8:	cbz	x22, 51c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x38c>
     4ec:	mov	x19, x22
     4f0:	mov	x0, x23
     4f4:	ldr	x1, [x19, #24]
     4f8:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     4fc:	ldr	x0, [x19, #32]
     500:	add	x1, x19, #0x30
     504:	ldr	x22, [x19, #16]
     508:	cmp	x0, x1
     50c:	b.ne	4dc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x34c>  // b.any
     510:	mov	x0, x19
     514:	bl	0 <_ZdlPv>
     518:	cbnz	x22, 4ec <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x35c>
     51c:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     520:	add	x0, x20, #0x60
     524:	ldr	x1, [x1]
     528:	add	x1, x1, #0x10
     52c:	str	x1, [sp, #1008]
     530:	bl	0 <_ZN4llvm14FoldingSetBaseD2Ev>
     534:	ldr	x1, [sp, #976]
     538:	add	x0, x20, #0x30
     53c:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     540:	ldr	x1, [sp, #928]
     544:	mov	x0, x20
     548:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     54c:	mov	w0, w21
     550:	ldp	x29, x30, [sp]
     554:	ldp	x19, x20, [sp, #16]
     558:	ldp	x21, x22, [sp, #32]
     55c:	ldp	x23, x24, [sp, #48]
     560:	ldp	x25, x26, [sp, #64]
     564:	ldp	x27, x28, [sp, #80]
     568:	add	sp, sp, #0x5a0
     56c:	ret
     570:	adrp	x21, 0 <_ZN4llvm6SrcMgrE>
     574:	str	xzr, [sp, #1096]
     578:	ldr	x0, [sp, #200]
     57c:	str	x0, [sp, #1088]
     580:	ldr	x24, [x21]
     584:	str	xzr, [sp, #200]
     588:	str	xzr, [sp, #1104]
     58c:	ldr	x0, [x24, #8]
     590:	ldr	x1, [x24, #16]
     594:	cmp	x0, x1
     598:	b.eq	a7c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8ec>  // b.none
     59c:	mov	x1, x19
     5a0:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
     5a4:	ldr	x0, [x24, #8]
     5a8:	add	x0, x0, #0x18
     5ac:	str	x0, [x24, #8]
     5b0:	mov	x0, x19
     5b4:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
     5b8:	ldr	x24, [x21]
     5bc:	add	x21, x28, #0x0
     5c0:	add	x1, x21, #0x388
     5c4:	add	x0, x24, #0x18
     5c8:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     5cc:	ldr	x2, [x21, #1128]
     5d0:	mov	x1, x24
     5d4:	ldr	x3, [x21, #1136]
     5d8:	mov	x0, x19
     5dc:	sub	x3, x3, x2
     5e0:	asr	x3, x3, #5
     5e4:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     5e8:	movi	v0.4s, #0x0
     5ec:	add	x4, sp, #0x420
     5f0:	add	x7, sp, #0x530
     5f4:	str	xzr, [sp, #1304]
     5f8:	str	wzr, [sp, #1320]
     5fc:	add	x1, x19, #0xe8
     600:	add	x3, x19, #0x138
     604:	mov	x2, #0x200000000           	// #8589934592
     608:	stur	q0, [x4, #232]
     60c:	mov	x0, x19
     610:	stp	xzr, x1, [x7]
     614:	stp	x1, xzr, [x7, #16]
     618:	add	x1, sp, #0x620
     61c:	str	xzr, [sp, #1376]
     620:	str	x3, [sp, #1384]
     624:	str	x2, [sp, #1392]
     628:	str	q0, [sp, #1360]
     62c:	stur	q0, [x1, #-152]
     630:	str	x20, [sp, #1432]
     634:	bl	0 <_ZN4llvm8TGParser9ParseFileEv>
     638:	tst	w0, #0xff
     63c:	b.ne	a90 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x900>  // b.any
     640:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
     644:	add	x24, sp, #0x160
     648:	add	x6, sp, #0x280
     64c:	add	x3, x24, #0x10
     650:	ldr	x2, [x2]
     654:	add	x26, sp, #0x280
     658:	mov	x0, x26
     65c:	mov	x1, x20
     660:	add	x2, x2, #0x10
     664:	mov	w27, #0x1                   	// #1
     668:	stp	x2, xzr, [x6]
     66c:	stp	xzr, xzr, [x6, #16]
     670:	stp	x3, xzr, [sp, #352]
     674:	strb	wzr, [sp, #368]
     678:	str	w27, [sp, #672]
     67c:	str	x24, [sp, #680]
     680:	blr	x25
     684:	tst	w0, #0xff
     688:	b.ne	11e4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1054>  // b.any
     68c:	ldr	x0, [x21, #400]
     690:	add	x25, x21, #0x100
     694:	cbnz	x0, b30 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x9a0>
     698:	add	x0, x28, #0x0
     69c:	add	x25, sp, #0x2b0
     6a0:	ldrb	w1, [x0, #1352]
     6a4:	cbz	w1, 718 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x588>
     6a8:	add	x4, x0, #0x88
     6ac:	mov	w5, #0x104                 	// #260
     6b0:	add	x0, sp, #0x320
     6b4:	mov	x8, x25
     6b8:	mov	w3, #0x0                   	// #0
     6bc:	mov	w2, #0x1                   	// #1
     6c0:	mov	x1, #0xffffffffffffffff    	// #-1
     6c4:	str	x4, [sp, #800]
     6c8:	str	xzr, [sp, #808]
     6cc:	strh	w5, [sp, #816]
     6d0:	bl	0 <_ZN4llvm12MemoryBuffer7getFileERKNS_5TwineElbb>
     6d4:	ldrb	w0, [sp, #704]
     6d8:	tbnz	w0, #0, 710 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x580>
     6dc:	ldr	x0, [sp, #688]
     6e0:	ldr	x1, [sp, #648]
     6e4:	ldp	x27, x21, [x0, #8]
     6e8:	ldr	x2, [sp, #664]
     6ec:	cmp	x2, x1
     6f0:	sub	x21, x21, x27
     6f4:	b.eq	700 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x570>  // b.none
     6f8:	mov	x0, x26
     6fc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     700:	ldr	x0, [sp, #680]
     704:	ldr	x1, [x0, #8]
     708:	cmp	x1, x21
     70c:	b.eq	1300 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1170>  // b.none
     710:	mov	x0, x25
     714:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     718:	add	x27, x28, #0x0
     71c:	str	wzr, [sp, #168]
     720:	bl	0 <_ZNSt3_V215system_categoryEv>
     724:	mov	x5, x0
     728:	add	x3, sp, #0xa8
     72c:	mov	x0, x25
     730:	ldp	x1, x2, [x27, #136]
     734:	mov	w4, #0x0                   	// #0
     738:	str	x5, [sp, #176]
     73c:	bl	0 <_ZN4llvm14ToolOutputFileC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
     740:	ldr	w21, [sp, #168]
     744:	cbnz	w21, eb8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd28>
     748:	ldr	x0, [sp, #648]
     74c:	ldr	x1, [sp, #664]
     750:	cmp	x1, x0
     754:	b.eq	760 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5d0>  // b.none
     758:	mov	x0, x26
     75c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     760:	ldr	x2, [sp, #680]
     764:	add	x0, x25, #0x28
     768:	ldp	x1, x2, [x2]
     76c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     770:	adrp	x0, 0 <_ZN4llvm13ErrorsPrintedE>
     774:	ldr	x0, [x0]
     778:	ldr	w0, [x0]
     77c:	cbnz	w0, 1214 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1084>
     780:	mov	w0, #0x1                   	// #1
     784:	strb	w0, [sp, #720]
     788:	add	x0, x25, #0x28
     78c:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
     790:	mov	x0, x25
     794:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
     798:	mov	x0, x26
     79c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     7a0:	ldr	x0, [sp, #352]
     7a4:	add	x24, x24, #0x10
     7a8:	cmp	x0, x24
     7ac:	b.eq	a94 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x904>  // b.none
     7b0:	bl	0 <_ZdlPv>
     7b4:	ldr	x24, [sp, #1424]
     7b8:	cbnz	x24, a9c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x90c>
     7bc:	nop
     7c0:	ldr	x0, [sp, #1384]
     7c4:	add	x1, x19, #0x138
     7c8:	cmp	x0, x1
     7cc:	b.eq	7d4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x644>  // b.none
     7d0:	bl	0 <free>
     7d4:	ldr	x27, [sp, #1360]
     7d8:	ldr	x28, [sp, #1368]
     7dc:	cmp	x27, x28
     7e0:	b.eq	8c8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x738>  // b.none
     7e4:	nop
     7e8:	ldr	x25, [x27]
     7ec:	cbz	x25, 8b8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x728>
     7f0:	ldp	x24, x26, [x25, #24]
     7f4:	cmp	x24, x26
     7f8:	b.eq	8a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x710>  // b.none
     7fc:	nop
     800:	ldr	x22, [x24, #8]
     804:	cbz	x22, 81c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x68c>
     808:	add	x0, x22, #0x18
     80c:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     810:	mov	x0, x22
     814:	mov	x1, #0x30                  	// #48
     818:	bl	0 <_ZdlPvm>
     81c:	ldr	x22, [x24]
     820:	cbz	x22, 890 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x700>
     824:	ldr	x0, [x22, #88]
     828:	add	x1, x22, #0x68
     82c:	add	x2, x22, #0x58
     830:	cmp	x0, x1
     834:	b.eq	844 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6b4>  // b.none
     838:	str	x2, [sp, #96]
     83c:	bl	0 <free>
     840:	ldr	x2, [sp, #96]
     844:	add	x1, x22, #0x48
     848:	ldr	x0, [x22, #72]
     84c:	cmp	x2, x0
     850:	b.eq	860 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6d0>  // b.none
     854:	str	x1, [sp, #96]
     858:	bl	0 <free>
     85c:	ldr	x1, [sp, #96]
     860:	ldr	x0, [x22, #56]
     864:	cmp	x1, x0
     868:	b.eq	870 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6e0>  // b.none
     86c:	bl	0 <free>
     870:	ldr	x0, [x22, #8]
     874:	add	x1, x22, #0x18
     878:	cmp	x0, x1
     87c:	b.eq	884 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6f4>  // b.none
     880:	bl	0 <free>
     884:	mov	x0, x22
     888:	mov	x1, #0x80                  	// #128
     88c:	bl	0 <_ZdlPvm>
     890:	add	x24, x24, #0x10
     894:	cmp	x26, x24
     898:	b.ne	800 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x670>  // b.any
     89c:	ldr	x26, [x25, #24]
     8a0:	cbz	x26, 8ac <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x71c>
     8a4:	mov	x0, x26
     8a8:	bl	0 <_ZdlPv>
     8ac:	mov	x0, x25
     8b0:	mov	x1, #0x30                  	// #48
     8b4:	bl	0 <_ZdlPvm>
     8b8:	add	x27, x27, #0x8
     8bc:	cmp	x28, x27
     8c0:	b.ne	7e8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x658>  // b.any
     8c4:	ldr	x28, [sp, #1360]
     8c8:	cbz	x28, 8d4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x744>
     8cc:	mov	x0, x28
     8d0:	bl	0 <_ZdlPv>
     8d4:	ldr	x1, [sp, #1328]
     8d8:	add	x0, x19, #0xe0
     8dc:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     8e0:	ldr	x24, [sp, #1288]
     8e4:	ldr	x26, [sp, #1296]
     8e8:	cmp	x24, x26
     8ec:	b.eq	950 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7c0>  // b.none
     8f0:	mov	w27, #0x30                  	// #48
     8f4:	nop
     8f8:	ldr	w22, [x24, #8]
     8fc:	ldr	x25, [x24]
     900:	umaddl	x22, w22, w27, x25
     904:	cmp	x25, x22
     908:	b.eq	92c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x79c>  // b.none
     90c:	nop
     910:	ldur	x0, [x22, #-40]
     914:	sub	x22, x22, #0x30
     918:	cbz	x0, b10 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x980>
     91c:	bl	0 <_ZdlPv>
     920:	cmp	x25, x22
     924:	b.ne	910 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x780>  // b.any
     928:	ldr	x22, [x24]
     92c:	add	x0, x24, #0x10
     930:	cmp	x22, x0
     934:	b.eq	b1c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x98c>  // b.none
     938:	mov	x0, x22
     93c:	add	x24, x24, #0xd0
     940:	bl	0 <free>
     944:	cmp	x26, x24
     948:	b.ne	8f8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x768>  // b.any
     94c:	ldr	x26, [sp, #1288]
     950:	cbz	x26, 95c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7cc>
     954:	mov	x0, x26
     958:	bl	0 <_ZdlPv>
     95c:	ldr	x22, [sp, #1264]
     960:	ldr	x25, [sp, #1272]
     964:	cmp	x22, x25
     968:	b.eq	9a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x810>  // b.none
     96c:	nop
     970:	ldr	x24, [x22]
     974:	cbz	x24, 990 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x800>
     978:	ldr	x0, [x24]
     97c:	cbz	x0, 984 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7f4>
     980:	bl	0 <_ZdlPv>
     984:	mov	x0, x24
     988:	mov	x1, #0x18                  	// #24
     98c:	bl	0 <_ZdlPvm>
     990:	add	x22, x22, #0x8
     994:	cmp	x25, x22
     998:	b.ne	970 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7e0>  // b.any
     99c:	ldr	x25, [sp, #1264]
     9a0:	cbz	x25, 9ac <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x81c>
     9a4:	mov	x0, x25
     9a8:	bl	0 <_ZdlPv>
     9ac:	ldr	w0, [sp, #1244]
     9b0:	ldr	x1, [sp, #1232]
     9b4:	cbz	w0, 9f4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x864>
     9b8:	ldr	w24, [sp, #1240]
     9bc:	cbz	w24, 9f4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x864>
     9c0:	sub	w24, w24, #0x1
     9c4:	mov	x22, #0x0                   	// #0
     9c8:	add	x24, x24, #0x1
     9cc:	lsl	x24, x24, #3
     9d0:	ldr	x0, [x1, x22]
     9d4:	cmp	x0, #0x0
     9d8:	ccmn	x0, #0x8, #0x4, ne  // ne = any
     9dc:	b.eq	9e8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x858>  // b.none
     9e0:	bl	0 <free>
     9e4:	ldr	x1, [sp, #1232]
     9e8:	add	x22, x22, #0x8
     9ec:	cmp	x24, x22
     9f0:	b.ne	9d0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x840>  // b.any
     9f4:	mov	x0, x1
     9f8:	bl	0 <free>
     9fc:	ldr	x22, [sp, #1200]
     a00:	add	x25, x19, #0x60
     a04:	cbz	x22, a68 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8d8>
     a08:	ldr	x1, [x22, #24]
     a0c:	mov	x0, x25
     a10:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     a14:	ldr	x0, [x22, #32]
     a18:	add	x1, x22, #0x30
     a1c:	ldr	x24, [x22, #16]
     a20:	cmp	x0, x1
     a24:	b.eq	a5c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8cc>  // b.none
     a28:	bl	0 <_ZdlPv>
     a2c:	mov	x0, x22
     a30:	bl	0 <_ZdlPv>
     a34:	cbz	x24, a68 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8d8>
     a38:	mov	x22, x24
     a3c:	mov	x0, x25
     a40:	ldr	x1, [x22, #24]
     a44:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     a48:	ldr	x0, [x22, #32]
     a4c:	add	x1, x22, #0x30
     a50:	ldr	x24, [x22, #16]
     a54:	cmp	x0, x1
     a58:	b.ne	a28 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x898>  // b.any
     a5c:	mov	x0, x22
     a60:	bl	0 <_ZdlPv>
     a64:	cbnz	x24, a38 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8a8>
     a68:	ldr	x0, [sp, #1136]
     a6c:	add	x19, x19, #0x40
     a70:	cmp	x0, x19
     a74:	b.ne	4a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x314>  // b.any
     a78:	b	4a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x318>
     a7c:	mov	x1, x0
     a80:	mov	x2, x19
     a84:	mov	x0, x24
     a88:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     a8c:	b	5b0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x420>
     a90:	mov	w21, #0x1                   	// #1
     a94:	ldr	x24, [sp, #1424]
     a98:	cbz	x24, 7c0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x630>
     a9c:	ldr	x25, [x24, #48]
     aa0:	cbz	x25, e40 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcb0>
     aa4:	ldr	x26, [x25, #48]
     aa8:	cbz	x26, 11d8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1048>
     aac:	ldr	x27, [x26, #48]
     ab0:	cbz	x27, 1194 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1004>
     ab4:	ldr	x28, [x27, #48]
     ab8:	cbz	x28, 1150 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfc0>
     abc:	ldr	x0, [x28, #48]
     ac0:	cbz	x0, ac8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x938>
     ac4:	bl	f8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0>
     ac8:	ldr	x22, [x28, #16]
     acc:	cbz	x22, 1144 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfb4>
     ad0:	ldr	x1, [x22, #24]
     ad4:	mov	x0, x28
     ad8:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     adc:	ldr	x2, [x22, #16]
     ae0:	str	x2, [sp, #96]
     ae4:	ldr	x0, [x22, #32]
     ae8:	add	x1, x22, #0x30
     aec:	cmp	x0, x1
     af0:	b.eq	1134 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfa4>  // b.none
     af4:	bl	0 <_ZdlPv>
     af8:	mov	x0, x22
     afc:	bl	0 <_ZdlPv>
     b00:	ldr	x2, [sp, #96]
     b04:	cbz	x2, 1144 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfb4>
     b08:	mov	x22, x2
     b0c:	b	ad0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x940>
     b10:	cmp	x25, x22
     b14:	b.ne	910 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x780>  // b.any
     b18:	b	928 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x798>
     b1c:	add	x24, x24, #0xd0
     b20:	cmp	x26, x24
     b24:	b.ne	8f8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x768>  // b.any
     b28:	ldr	x26, [sp, #1288]
     b2c:	b	950 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7c0>
     b30:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     b34:	add	x0, x21, #0x88
     b38:	add	x1, x1, #0x0
     b3c:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
     b40:	cbz	w0, 1280 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x10f0>
     b44:	str	wzr, [sp, #184]
     b48:	bl	0 <_ZNSt3_V215system_categoryEv>
     b4c:	ldp	x1, x2, [x25, #136]
     b50:	mov	x5, x0
     b54:	add	x27, sp, #0x320
     b58:	add	x3, sp, #0xb8
     b5c:	mov	x0, x27
     b60:	mov	w4, #0x0                   	// #0
     b64:	str	x5, [sp, #192]
     b68:	bl	0 <_ZN4llvm14ToolOutputFileC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
     b6c:	ldr	w0, [sp, #184]
     b70:	cbz	w0, 1328 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1198>
     b74:	add	x0, sp, #0x220
     b78:	str	x0, [sp, #96]
     b7c:	add	x2, x0, #0x10
     b80:	str	x2, [sp, #544]
     b84:	ldr	x1, [x25, #144]
     b88:	str	xzr, [sp, #552]
     b8c:	strb	wzr, [sp, #560]
     b90:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
     b94:	add	x1, x1, #0xe
     b98:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
     b9c:	ldr	x0, [sp, #552]
     ba0:	sub	x0, x21, x0
     ba4:	cmp	x0, #0xd
     ba8:	b.ls	14a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1310>  // b.plast
     bac:	ldr	x0, [sp, #96]
     bb0:	mov	x2, #0xe                   	// #14
     bb4:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     bb8:	add	x1, x1, #0x0
     bbc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     bc0:	ldp	x1, x2, [x25, #136]
     bc4:	ldr	x0, [sp, #96]
     bc8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     bcc:	ldr	x0, [sp, #552]
     bd0:	cmp	x0, x21
     bd4:	b.eq	14a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1310>  // b.none
     bd8:	ldr	x0, [sp, #96]
     bdc:	mov	x2, #0x1                   	// #1
     be0:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     be4:	add	x1, x1, #0x0
     be8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     bec:	mov	x2, x0
     bf0:	mov	x3, x2
     bf4:	add	x0, sp, #0x240
     bf8:	str	x0, [sp, #104]
     bfc:	add	x0, sp, #0x250
     c00:	str	x0, [sp, #576]
     c04:	ldr	x0, [x3], #16
     c08:	cmp	x0, x3
     c0c:	b.eq	146c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x12dc>  // b.none
     c10:	ldr	x1, [x2, #16]
     c14:	str	x0, [sp, #576]
     c18:	str	x1, [sp, #592]
     c1c:	ldr	x0, [sp, #192]
     c20:	strb	wzr, [x2, #16]
     c24:	ldr	x4, [x2, #8]
     c28:	str	x4, [sp, #584]
     c2c:	ldr	x4, [x0]
     c30:	add	x21, sp, #0x200
     c34:	ldr	w1, [sp, #184]
     c38:	mov	x8, x21
     c3c:	stp	x3, xzr, [x2]
     c40:	ldr	x2, [x4, #32]
     c44:	str	x21, [sp, #120]
     c48:	blr	x2
     c4c:	add	x5, sp, #0x200
     c50:	mov	x6, #0xf                   	// #15
     c54:	ldr	x0, [sp, #104]
     c58:	ldp	x3, x4, [x5, #64]
     c5c:	add	x0, x0, #0x10
     c60:	ldp	x1, x2, [x5]
     c64:	cmp	x3, x0
     c68:	ldr	x0, [sp, #592]
     c6c:	add	x5, x4, x2
     c70:	csel	x0, x0, x6, ne  // ne = any
     c74:	cmp	x5, x0
     c78:	b.ls	c94 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb04>  // b.plast
     c7c:	ldr	x0, [sp, #528]
     c80:	add	x7, x21, #0x10
     c84:	cmp	x1, x7
     c88:	csel	x0, x0, x6, ne  // ne = any
     c8c:	cmp	x5, x0
     c90:	b.ls	148c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x12fc>  // b.plast
     c94:	ldr	x0, [sp, #104]
     c98:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     c9c:	add	x1, sp, #0x260
     ca0:	mov	x2, x1
     ca4:	mov	x1, x0
     ca8:	str	x2, [sp, #112]
     cac:	add	x2, x2, #0x10
     cb0:	str	x2, [sp, #608]
     cb4:	ldr	x2, [x1], #16
     cb8:	cmp	x2, x1
     cbc:	b.eq	145c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x12cc>  // b.none
     cc0:	str	x2, [sp, #608]
     cc4:	ldr	x2, [x0, #16]
     cc8:	str	x2, [sp, #624]
     ccc:	ldr	x2, [x0, #8]
     cd0:	str	x2, [sp, #616]
     cd4:	stp	x1, xzr, [x0]
     cd8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
     cdc:	strb	wzr, [x0, #16]
     ce0:	ldr	x0, [sp, #616]
     ce4:	cmp	x0, x2
     ce8:	b.eq	14a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1310>  // b.none
     cec:	ldr	x0, [sp, #112]
     cf0:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     cf4:	add	x1, x1, #0x0
     cf8:	mov	x2, #0x1                   	// #1
     cfc:	add	x25, sp, #0x2b0
     d00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     d04:	mov	x1, x0
     d08:	add	x2, x25, #0x10
     d0c:	str	x2, [sp, #688]
     d10:	ldr	x2, [x1], #16
     d14:	cmp	x2, x1
     d18:	b.eq	147c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x12ec>  // b.none
     d1c:	str	x2, [sp, #688]
     d20:	ldr	x2, [x0, #16]
     d24:	str	x2, [sp, #704]
     d28:	ldr	x2, [x0, #8]
     d2c:	str	x2, [sp, #696]
     d30:	stp	x1, xzr, [x0]
     d34:	mov	w2, #0x104                 	// #260
     d38:	add	x1, sp, #0x80
     d3c:	strb	wzr, [x0, #16]
     d40:	mov	x0, x22
     d44:	stp	x25, xzr, [sp, #480]
     d48:	add	x25, x25, #0x10
     d4c:	strh	w2, [sp, #496]
     d50:	ldp	x2, x3, [sp, #480]
     d54:	stp	x2, x3, [sp, #128]
     d58:	ldr	x2, [sp, #496]
     d5c:	str	x2, [sp, #144]
     d60:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     d64:	mov	w21, w0
     d68:	ldr	x1, [sp, #688]
     d6c:	cmp	x1, x25
     d70:	b.eq	d7c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbec>  // b.none
     d74:	mov	x0, x1
     d78:	bl	0 <_ZdlPv>
     d7c:	ldr	x1, [sp, #112]
     d80:	ldr	x0, [sp, #608]
     d84:	add	x1, x1, #0x10
     d88:	cmp	x0, x1
     d8c:	b.eq	d94 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc04>  // b.none
     d90:	bl	0 <_ZdlPv>
     d94:	ldr	x1, [sp, #120]
     d98:	ldr	x0, [sp, #512]
     d9c:	add	x1, x1, #0x10
     da0:	cmp	x0, x1
     da4:	b.eq	dac <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc1c>  // b.none
     da8:	bl	0 <_ZdlPv>
     dac:	ldr	x1, [sp, #104]
     db0:	ldr	x0, [sp, #576]
     db4:	add	x1, x1, #0x10
     db8:	cmp	x0, x1
     dbc:	b.eq	dc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc34>  // b.none
     dc0:	bl	0 <_ZdlPv>
     dc4:	ldr	x1, [sp, #96]
     dc8:	ldr	x0, [sp, #544]
     dcc:	add	x1, x1, #0x10
     dd0:	cmp	x0, x1
     dd4:	b.eq	ddc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc4c>  // b.none
     dd8:	bl	0 <_ZdlPv>
     ddc:	add	x0, x27, #0x28
     de0:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
     de4:	mov	x0, x27
     de8:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
     dec:	cbnz	w21, 798 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x608>
     df0:	b	698 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x508>
     df4:	mov	x0, x22
     df8:	bl	0 <_ZdlPv>
     dfc:	cbz	x26, e34 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xca4>
     e00:	mov	x22, x26
     e04:	ldr	x1, [x22, #24]
     e08:	mov	x0, x25
     e0c:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     e10:	ldr	x0, [x22, #32]
     e14:	add	x1, x22, #0x30
     e18:	ldr	x26, [x22, #16]
     e1c:	cmp	x0, x1
     e20:	b.eq	df4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc64>  // b.none
     e24:	bl	0 <_ZdlPv>
     e28:	mov	x0, x22
     e2c:	bl	0 <_ZdlPv>
     e30:	cbnz	x26, e00 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc70>
     e34:	mov	x0, x25
     e38:	mov	x1, #0x38                  	// #56
     e3c:	bl	0 <_ZdlPvm>
     e40:	ldr	x22, [x24, #16]
     e44:	cbz	x22, ea8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd18>
     e48:	ldr	x1, [x22, #24]
     e4c:	mov	x0, x24
     e50:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     e54:	ldr	x0, [x22, #32]
     e58:	add	x1, x22, #0x30
     e5c:	ldr	x25, [x22, #16]
     e60:	cmp	x0, x1
     e64:	b.eq	e9c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd0c>  // b.none
     e68:	bl	0 <_ZdlPv>
     e6c:	mov	x0, x22
     e70:	bl	0 <_ZdlPv>
     e74:	cbz	x25, ea8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xd18>
     e78:	mov	x22, x25
     e7c:	mov	x0, x24
     e80:	ldr	x1, [x22, #24]
     e84:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
     e88:	ldr	x0, [x22, #32]
     e8c:	add	x1, x22, #0x30
     e90:	ldr	x25, [x22, #16]
     e94:	cmp	x0, x1
     e98:	b.ne	e68 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcd8>  // b.any
     e9c:	mov	x0, x22
     ea0:	bl	0 <_ZdlPv>
     ea4:	cbnz	x25, e78 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xce8>
     ea8:	mov	x0, x24
     eac:	mov	x1, #0x38                  	// #56
     eb0:	bl	0 <_ZdlPvm>
     eb4:	b	7c0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x630>
     eb8:	add	x28, sp, #0x180
     ebc:	strb	wzr, [sp, #400]
     ec0:	add	x2, x28, #0x10
     ec4:	mov	x0, x28
     ec8:	ldr	x1, [x27, #144]
     ecc:	stp	x2, xzr, [sp, #384]
     ed0:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
     ed4:	add	x1, x1, #0xe
     ed8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
     edc:	ldr	x0, [sp, #392]
     ee0:	sub	x0, x21, x0
     ee4:	cmp	x0, #0xd
     ee8:	b.ls	14a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1310>  // b.plast
     eec:	mov	x2, #0xe                   	// #14
     ef0:	mov	x0, x28
     ef4:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     ef8:	add	x1, x1, #0x0
     efc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     f00:	ldp	x1, x2, [x27, #136]
     f04:	mov	x0, x28
     f08:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     f0c:	ldr	x0, [sp, #392]
     f10:	cmp	x0, x21
     f14:	b.eq	14a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1310>  // b.none
     f18:	mov	x2, #0x1                   	// #1
     f1c:	mov	x0, x28
     f20:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
     f24:	add	x1, x1, #0x0
     f28:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     f2c:	mov	x2, x0
     f30:	mov	x3, x2
     f34:	add	x0, sp, #0x1a0
     f38:	str	x0, [sp, #96]
     f3c:	add	x0, sp, #0x1b0
     f40:	str	x0, [sp, #416]
     f44:	ldr	x0, [x3], #16
     f48:	cmp	x0, x3
     f4c:	b.eq	1418 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1288>  // b.none
     f50:	ldr	x1, [x2, #16]
     f54:	str	x0, [sp, #416]
     f58:	str	x1, [sp, #432]
     f5c:	ldr	x0, [sp, #176]
     f60:	strb	wzr, [x2, #16]
     f64:	ldr	x4, [x2, #8]
     f68:	str	x4, [sp, #424]
     f6c:	ldr	x4, [x0]
     f70:	add	x21, sp, #0x1c0
     f74:	ldr	w1, [sp, #168]
     f78:	mov	x8, x21
     f7c:	stp	x3, xzr, [x2]
     f80:	ldr	x2, [x4, #32]
     f84:	str	x21, [sp, #112]
     f88:	blr	x2
     f8c:	ldp	x3, x4, [sp, #416]
     f90:	mov	x6, #0xf                   	// #15
     f94:	ldr	x0, [sp, #96]
     f98:	ldp	x1, x2, [sp, #448]
     f9c:	add	x0, x0, #0x10
     fa0:	cmp	x3, x0
     fa4:	ldr	x0, [sp, #432]
     fa8:	add	x5, x4, x2
     fac:	csel	x0, x0, x6, ne  // ne = any
     fb0:	cmp	x5, x0
     fb4:	b.ls	fd0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xe40>  // b.plast
     fb8:	ldr	x0, [sp, #464]
     fbc:	add	x7, x21, #0x10
     fc0:	cmp	x1, x7
     fc4:	csel	x0, x0, x6, ne  // ne = any
     fc8:	cmp	x5, x0
     fcc:	b.ls	12c4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1134>  // b.plast
     fd0:	ldr	x0, [sp, #96]
     fd4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     fd8:	add	x1, sp, #0x1e0
     fdc:	mov	x2, x1
     fe0:	mov	x1, x0
     fe4:	str	x2, [sp, #104]
     fe8:	add	x2, x2, #0x10
     fec:	str	x2, [sp, #480]
     ff0:	ldr	x2, [x1], #16
     ff4:	cmp	x2, x1
     ff8:	b.eq	1424 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1294>  // b.none
     ffc:	str	x2, [sp, #480]
    1000:	ldr	x2, [x0, #16]
    1004:	str	x2, [sp, #496]
    1008:	ldr	x2, [x0, #8]
    100c:	str	x2, [sp, #488]
    1010:	stp	x1, xzr, [x0]
    1014:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    1018:	strb	wzr, [x0, #16]
    101c:	ldr	x0, [sp, #488]
    1020:	cmp	x0, x2
    1024:	b.eq	14a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1310>  // b.none
    1028:	ldr	x0, [sp, #104]
    102c:	mov	x2, #0x1                   	// #1
    1030:	add	x27, sp, #0x320
    1034:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    1038:	add	x1, x1, #0x0
    103c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1040:	mov	x1, x0
    1044:	add	x2, x27, #0x10
    1048:	str	x2, [sp, #800]
    104c:	ldr	x2, [x0], #16
    1050:	cmp	x2, x0
    1054:	b.eq	1408 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1278>  // b.none
    1058:	str	x2, [sp, #800]
    105c:	ldr	x2, [x1, #16]
    1060:	str	x2, [sp, #816]
    1064:	ldr	x2, [x1, #8]
    1068:	str	x2, [sp, #808]
    106c:	mov	w2, #0x104                 	// #260
    1070:	stp	x0, xzr, [x1]
    1074:	mov	x0, x22
    1078:	strb	wzr, [x1, #16]
    107c:	add	x1, sp, #0x80
    1080:	strh	w2, [sp, #624]
    1084:	add	x2, sp, #0x220
    1088:	str	x27, [sp, #608]
    108c:	add	x27, x27, #0x10
    1090:	str	xzr, [sp, #616]
    1094:	ldp	x2, x3, [x2, #64]
    1098:	stp	x2, x3, [sp, #128]
    109c:	ldr	x2, [sp, #624]
    10a0:	str	x2, [sp, #144]
    10a4:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
    10a8:	mov	w21, w0
    10ac:	ldr	x1, [sp, #800]
    10b0:	cmp	x1, x27
    10b4:	b.eq	10c0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf30>  // b.none
    10b8:	mov	x0, x1
    10bc:	bl	0 <_ZdlPv>
    10c0:	ldr	x1, [sp, #104]
    10c4:	ldr	x0, [sp, #480]
    10c8:	add	x1, x1, #0x10
    10cc:	cmp	x0, x1
    10d0:	b.eq	10d8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf48>  // b.none
    10d4:	bl	0 <_ZdlPv>
    10d8:	ldr	x1, [sp, #112]
    10dc:	ldr	x0, [sp, #448]
    10e0:	add	x1, x1, #0x10
    10e4:	cmp	x0, x1
    10e8:	b.eq	10f0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf60>  // b.none
    10ec:	bl	0 <_ZdlPv>
    10f0:	ldr	x1, [sp, #96]
    10f4:	ldr	x0, [sp, #416]
    10f8:	add	x1, x1, #0x10
    10fc:	cmp	x0, x1
    1100:	b.eq	1108 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xf78>  // b.none
    1104:	bl	0 <_ZdlPv>
    1108:	ldr	x0, [sp, #384]
    110c:	add	x28, x28, #0x10
    1110:	cmp	x0, x28
    1114:	b.eq	788 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5f8>  // b.none
    1118:	bl	0 <_ZdlPv>
    111c:	b	788 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5f8>
    1120:	mov	x0, x27
    1124:	mov	x2, #0x0                   	// #0
    1128:	mov	x1, #0x0                   	// #0
    112c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1130:	b	37c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1ec>
    1134:	mov	x0, x22
    1138:	bl	0 <_ZdlPv>
    113c:	ldr	x2, [sp, #96]
    1140:	cbnz	x2, b08 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x978>
    1144:	mov	x0, x28
    1148:	mov	x1, #0x38                  	// #56
    114c:	bl	0 <_ZdlPvm>
    1150:	ldr	x22, [x27, #16]
    1154:	cbz	x22, 1188 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xff8>
    1158:	ldr	x1, [x22, #24]
    115c:	mov	x0, x27
    1160:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
    1164:	ldr	x0, [x22, #32]
    1168:	add	x1, x22, #0x30
    116c:	ldr	x28, [x22, #16]
    1170:	cmp	x0, x1
    1174:	b.eq	12d8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1148>  // b.none
    1178:	bl	0 <_ZdlPv>
    117c:	mov	x0, x22
    1180:	bl	0 <_ZdlPv>
    1184:	cbnz	x28, 12e4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1154>
    1188:	mov	x0, x27
    118c:	mov	x1, #0x38                  	// #56
    1190:	bl	0 <_ZdlPvm>
    1194:	ldr	x22, [x26, #16]
    1198:	cbz	x22, 11cc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x103c>
    119c:	ldr	x1, [x22, #24]
    11a0:	mov	x0, x26
    11a4:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
    11a8:	ldr	x0, [x22, #32]
    11ac:	add	x1, x22, #0x30
    11b0:	ldr	x27, [x22, #16]
    11b4:	cmp	x0, x1
    11b8:	b.eq	12ec <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x115c>  // b.none
    11bc:	bl	0 <_ZdlPv>
    11c0:	mov	x0, x22
    11c4:	bl	0 <_ZdlPv>
    11c8:	cbnz	x27, 12f8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1168>
    11cc:	mov	x0, x26
    11d0:	mov	x1, #0x38                  	// #56
    11d4:	bl	0 <_ZdlPvm>
    11d8:	ldr	x22, [x25, #16]
    11dc:	cbnz	x22, e04 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc74>
    11e0:	b	e34 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xca4>
    11e4:	mov	w21, w27
    11e8:	b	798 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x608>
    11ec:	ldp	x2, x3, [x0, #16]
    11f0:	stp	x2, x3, [sp, #336]
    11f4:	b	3a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x214>
    11f8:	ldp	x2, x3, [x0, #16]
    11fc:	stp	x2, x3, [sp, #272]
    1200:	b	308 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x178>
    1204:	add	x4, sp, #0x420
    1208:	ldp	x2, x3, [x1, #16]
    120c:	stp	x2, x3, [x4, #48]
    1210:	b	3fc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x26c>
    1214:	str	xzr, [sp, #608]
    1218:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    121c:	str	w0, [sp, #608]
    1220:	add	x0, x1, #0x0
    1224:	mov	w1, #0x309                 	// #777
    1228:	str	x0, [sp, #808]
    122c:	strh	w1, [sp, #816]
    1230:	add	x1, sp, #0x420
    1234:	ldr	x0, [sp, #608]
    1238:	str	x0, [sp, #800]
    123c:	ldr	x2, [sp, #816]
    1240:	mov	x0, x22
    1244:	ldp	x4, x5, [x1, #-256]
    1248:	add	x1, sp, #0x80
    124c:	stp	x4, x5, [sp, #128]
    1250:	str	x2, [sp, #144]
    1254:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
    1258:	mov	w21, w0
    125c:	b	788 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5f8>
    1260:	adrp	x3, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    1264:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    1268:	adrp	x0, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    126c:	add	x3, x3, #0x0
    1270:	add	x1, x1, #0x0
    1274:	add	x0, x0, #0x0
    1278:	mov	w2, #0xf3                  	// #243
    127c:	bl	0 <__assert_fail>
    1280:	mov	w2, #0x103                 	// #259
    1284:	strh	w2, [sp, #816]
    1288:	add	x2, sp, #0x420
    128c:	adrp	x0, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    1290:	add	x0, x0, #0x0
    1294:	str	x0, [sp, #800]
    1298:	str	xzr, [sp, #808]
    129c:	add	x1, sp, #0x80
    12a0:	mov	x0, x22
    12a4:	ldp	x2, x3, [x2, #-256]
    12a8:	stp	x2, x3, [sp, #128]
    12ac:	ldr	x2, [sp, #816]
    12b0:	str	x2, [sp, #144]
    12b4:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
    12b8:	mov	w21, w0
    12bc:	cbnz	w21, 798 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x608>
    12c0:	b	698 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x508>
    12c4:	ldr	x0, [sp, #112]
    12c8:	mov	x2, #0x0                   	// #0
    12cc:	mov	x1, #0x0                   	// #0
    12d0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    12d4:	b	fd8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xe48>
    12d8:	mov	x0, x22
    12dc:	bl	0 <_ZdlPv>
    12e0:	cbz	x28, 1188 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xff8>
    12e4:	mov	x22, x28
    12e8:	b	1158 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xfc8>
    12ec:	mov	x0, x22
    12f0:	bl	0 <_ZdlPv>
    12f4:	cbz	x27, 11cc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x103c>
    12f8:	mov	x22, x27
    12fc:	b	119c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x100c>
    1300:	cbz	x21, 1318 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1188>
    1304:	ldr	x1, [x0]
    1308:	mov	x2, x21
    130c:	mov	x0, x27
    1310:	bl	0 <memcmp>
    1314:	cbnz	w0, 710 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x580>
    1318:	mov	x0, x25
    131c:	mov	w21, #0x0                   	// #0
    1320:	bl	0 <_ZL11reportErrorPKcN4llvm5TwineE>
    1324:	b	798 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x608>
    1328:	ldp	x1, x2, [x21, #136]
    132c:	add	x0, x27, #0x28
    1330:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1334:	mov	x1, x0
    1338:	ldp	x3, x2, [x0, #16]
    133c:	cmp	x3, x2
    1340:	b.eq	1430 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x12a0>  // b.none
    1344:	mov	w0, #0x3a                  	// #58
    1348:	strb	w0, [x2]
    134c:	ldr	x0, [x1, #24]
    1350:	add	x0, x0, #0x1
    1354:	str	x0, [x1, #24]
    1358:	ldr	x21, [sp, #1208]
    135c:	add	x0, x19, #0x68
    1360:	str	x0, [sp, #96]
    1364:	add	x25, x27, #0x28
    1368:	cmp	x21, x0
    136c:	b.ne	13a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1218>  // b.any
    1370:	b	13c8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1238>
    1374:	add	x1, x0, #0x1
    1378:	str	x1, [sp, #864]
    137c:	mov	w1, #0x20                  	// #32
    1380:	strb	w1, [x0]
    1384:	mov	x0, x25
    1388:	ldp	x1, x2, [x21, #32]
    138c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1390:	mov	x0, x21
    1394:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    1398:	mov	x21, x0
    139c:	ldr	x0, [sp, #96]
    13a0:	cmp	x21, x0
    13a4:	b.eq	13c8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1238>  // b.none
    13a8:	ldr	x1, [sp, #856]
    13ac:	ldr	x0, [sp, #864]
    13b0:	cmp	x0, x1
    13b4:	b.cc	1374 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x11e4>  // b.lo, b.ul, b.last
    13b8:	mov	x0, x25
    13bc:	mov	w1, #0x20                  	// #32
    13c0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    13c4:	b	1388 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x11f8>
    13c8:	ldr	x1, [sp, #856]
    13cc:	ldr	x0, [sp, #864]
    13d0:	cmp	x1, x0
    13d4:	b.eq	1444 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x12b4>  // b.none
    13d8:	mov	w1, #0xa                   	// #10
    13dc:	strb	w1, [x0]
    13e0:	ldr	x0, [sp, #864]
    13e4:	add	x0, x0, #0x1
    13e8:	str	x0, [sp, #864]
    13ec:	mov	w1, #0x1                   	// #1
    13f0:	add	x0, x27, #0x28
    13f4:	strb	w1, [sp, #832]
    13f8:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
    13fc:	mov	x0, x27
    1400:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
    1404:	b	698 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x508>
    1408:	add	x4, sp, #0x420
    140c:	ldp	x2, x3, [x1, #16]
    1410:	stp	x2, x3, [x4, #-240]
    1414:	b	1064 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xed4>
    1418:	ldp	x0, x1, [x2, #16]
    141c:	stp	x0, x1, [sp, #432]
    1420:	b	f5c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xdcc>
    1424:	ldp	x2, x3, [x0, #16]
    1428:	stp	x2, x3, [sp, #496]
    142c:	b	1008 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xe78>
    1430:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    1434:	mov	x2, #0x1                   	// #1
    1438:	add	x1, x1, #0x0
    143c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1440:	b	1358 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x11c8>
    1444:	add	x0, x27, #0x28
    1448:	adrp	x1, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    144c:	mov	x2, #0x1                   	// #1
    1450:	add	x1, x1, #0x0
    1454:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1458:	b	13ec <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x125c>
    145c:	add	x4, sp, #0x220
    1460:	ldp	x2, x3, [x0, #16]
    1464:	stp	x2, x3, [x4, #80]
    1468:	b	ccc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb3c>
    146c:	add	x4, sp, #0x220
    1470:	ldp	x0, x1, [x2, #16]
    1474:	stp	x0, x1, [x4, #48]
    1478:	b	c1c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa8c>
    147c:	add	x4, sp, #0x220
    1480:	ldp	x2, x3, [x0, #16]
    1484:	stp	x2, x3, [x4, #160]
    1488:	b	d28 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb98>
    148c:	ldr	x0, [sp, #120]
    1490:	mov	x2, #0x0                   	// #0
    1494:	mov	x1, #0x0                   	// #0
    1498:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    149c:	b	c9c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb0c>
    14a0:	adrp	x0, 0 <_ZL11reportErrorPKcN4llvm5TwineE>
    14a4:	add	x0, x0, #0x0
    14a8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl3optIS5_Lb0ENSA_6parserIS5_EEE8CallbackMUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl3optIS5_Lb0ENSA_6parserIS5_EEE8CallbackMUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.eq	10 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation+0x10>  // b.none
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	str	x1, [x0]
  14:	mov	w0, #0x0                   	// #0
  18:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl4listIS5_bNSA_6parserIS5_EEE8CallbackMUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl4listIS5_bNSA_6parserIS5_EEE8CallbackMUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.eq	10 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEE8CallbackMUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation+0x10>  // b.none
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	str	x1, [x0]
  14:	mov	w0, #0x0                   	// #0
  18:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEE8CallbackMUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.eq	10 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEE8CallbackMUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x10>  // b.none
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	str	x1, [x0]
  14:	mov	w0, #0x0                   	// #0
  18:	ret

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE27getValueExpectedFlagDefaultEv:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE27getValueExpectedFlagDefaultEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16printOptionValueEmb:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16printOptionValueEmb>:
   0:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE>:
   0:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	mov	x2, x0
   4:	ldrb	w0, [x1, #9]
   8:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   c:	ldrb	w0, [x2, #9]
  10:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  14:	ldrb	w0, [x1, #8]
  18:	ldrb	w2, [x2, #8]
  1c:	cmp	w2, w0
  20:	cset	w0, ne  // ne = any
  24:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE15printOptionInfoEm:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE15printOptionInfoEm>:
   0:	mov	x2, x1
   4:	mov	x1, x0
   8:	add	x0, x0, #0xb8
   c:	b	0 <_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE14getOptionWidthEv:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE14getOptionWidthEv>:
   0:	mov	x1, x0
   4:	add	x0, x0, #0xb8
   8:	b	0 <_ZNK4llvm2cl17basic_parser_impl14getOptionWidthERKNS0_6OptionE>

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #160]
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	x1, [x19, #168]
  1c:	cmp	x0, x1
  20:	b.eq	28 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x28>  // b.none
  24:	str	x0, [x19, #168]
  28:	ldp	x22, x21, [x19, #136]
  2c:	cmp	x22, x21
  30:	b.eq	5c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x5c>  // b.none
  34:	mov	x20, x22
  38:	mov	x1, x20
  3c:	add	x20, x20, #0x20
  40:	ldr	x0, [x1], #16
  44:	cmp	x0, x1
  48:	b.eq	6c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x6c>  // b.none
  4c:	bl	0 <_ZdlPv>
  50:	cmp	x21, x20
  54:	b.ne	38 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x38>  // b.any
  58:	str	x22, [x19, #144]
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldp	x29, x30, [sp], #48
  68:	ret
  6c:	cmp	x21, x20
  70:	b.ne	38 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x38>  // b.any
  74:	b	58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x58>

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE>:
   0:	mov	x3, x0
   4:	ldrb	w0, [x1, #40]
   8:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x24>
   c:	ldrb	w0, [x3, #40]
  10:	cbz	w0, 24 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x24>
  14:	ldr	x4, [x1, #16]
  18:	ldr	x2, [x3, #16]
  1c:	cmp	x2, x4
  20:	b.eq	28 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x28>  // b.none
  24:	ret
  28:	mov	w0, #0x0                   	// #0
  2c:	cbz	x2, 24 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x24>
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	ldr	x1, [x1, #8]
  3c:	ldr	x0, [x3, #8]
  40:	bl	0 <memcmp>
  44:	cmp	w0, #0x0
  48:	cset	w0, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldp	x1, x0, [x19, #96]
  3c:	cmp	x1, x0
  40:	b.eq	48 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #64]
  4c:	add	x19, x19, #0x50
  50:	cmp	x0, x19
  54:	b.eq	64 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED1Ev+0x64>  // b.none
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <free>
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev:

0000000000000000 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #224
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	adrp	x1, 0 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev>
  3c:	add	x2, x19, #0xc0
  40:	ldr	x0, [x19, #176]
  44:	ldr	x1, [x1]
  48:	cmp	x0, x2
  4c:	add	x1, x1, #0x10
  50:	str	x1, [x19, #168]
  54:	b.eq	5c <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x5c>  // b.none
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x0, [x19, #136]
  60:	add	x1, x19, #0x98
  64:	cmp	x0, x1
  68:	b.eq	70 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	ldp	x1, x0, [x19, #96]
  74:	cmp	x1, x0
  78:	b.eq	80 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x0, [x19, #64]
  84:	add	x19, x19, #0x50
  88:	cmp	x0, x19
  8c:	b.eq	9c <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED1Ev+0x9c>  // b.none
  90:	ldr	x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	b	0 <free>
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x2, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	str	x21, [sp, #32]
  20:	add	x2, x2, #0x10
  24:	str	x2, [x1], #192
  28:	ldr	x3, [x1, #16]
  2c:	cbz	x3, 3c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x3c>
  30:	mov	x0, x1
  34:	mov	w2, #0x3                   	// #3
  38:	blr	x3
  3c:	ldr	x0, [x19, #160]
  40:	cbz	x0, 48 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x48>
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x21, [x19, #136]
  4c:	cmp	x20, x21
  50:	b.eq	7c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x7c>  // b.none
  54:	nop
  58:	mov	x1, x20
  5c:	add	x20, x20, #0x20
  60:	ldr	x0, [x1], #16
  64:	cmp	x0, x1
  68:	b.eq	b8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0xb8>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	cmp	x20, x21
  74:	b.ne	58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x58>  // b.any
  78:	ldr	x21, [x19, #136]
  7c:	cbz	x21, 88 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x88>
  80:	mov	x0, x21
  84:	bl	0 <_ZdlPv>
  88:	ldp	x1, x0, [x19, #96]
  8c:	cmp	x1, x0
  90:	b.eq	98 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x98>  // b.none
  94:	bl	0 <free>
  98:	ldr	x0, [x19, #64]
  9c:	add	x19, x19, #0x50
  a0:	cmp	x0, x19
  a4:	b.eq	c8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0xc8>  // b.none
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldr	x21, [sp, #32]
  b0:	ldp	x29, x30, [sp], #48
  b4:	b	0 <free>
  b8:	cmp	x21, x20
  bc:	b.ne	58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x58>  // b.any
  c0:	ldr	x21, [x19, #136]
  c4:	b	7c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED1Ev+0x7c>
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldr	x21, [sp, #32]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x2, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	str	x21, [sp, #32]
  20:	add	x2, x2, #0x10
  24:	str	x2, [x1], #192
  28:	ldr	x3, [x1, #16]
  2c:	cbz	x3, 3c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x3c>
  30:	mov	x0, x1
  34:	mov	w2, #0x3                   	// #3
  38:	blr	x3
  3c:	ldr	x0, [x19, #160]
  40:	cbz	x0, 48 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x48>
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x21, [x19, #136]
  4c:	cmp	x20, x21
  50:	b.eq	7c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x7c>  // b.none
  54:	nop
  58:	mov	x1, x20
  5c:	add	x20, x20, #0x20
  60:	ldr	x0, [x1], #16
  64:	cmp	x0, x1
  68:	b.eq	c4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xc4>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	cmp	x20, x21
  74:	b.ne	58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x58>  // b.any
  78:	ldr	x21, [x19, #136]
  7c:	cbz	x21, 88 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x88>
  80:	mov	x0, x21
  84:	bl	0 <_ZdlPv>
  88:	ldp	x1, x0, [x19, #96]
  8c:	cmp	x1, x0
  90:	b.eq	98 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x98>  // b.none
  94:	bl	0 <free>
  98:	ldr	x0, [x19, #64]
  9c:	add	x1, x19, #0x50
  a0:	cmp	x0, x1
  a4:	b.eq	ac <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xac>  // b.none
  a8:	bl	0 <free>
  ac:	mov	x0, x19
  b0:	mov	x1, #0xe0                  	// #224
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldr	x21, [sp, #32]
  bc:	ldp	x29, x30, [sp], #48
  c0:	b	0 <_ZdlPvm>
  c4:	cmp	x21, x20
  c8:	b.ne	58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x58>  // b.any
  cc:	ldr	x21, [x19, #136]
  d0:	b	7c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x7c>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	mov	x23, x0
  14:	b.eq	ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xec>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	ldr	x20, [x0]
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	x0, [x0, #16]
  28:	stp	x25, x26, [sp, #64]
  2c:	mov	x26, x1
  30:	ldr	x19, [x1]
  34:	str	x27, [sp, #80]
  38:	ldr	x27, [x1, #8]
  3c:	sub	x0, x0, x20
  40:	sub	x24, x27, x19
  44:	asr	x0, x0, #5
  48:	cmp	x0, x24, asr #5
  4c:	asr	x22, x24, #5
  50:	b.cc	fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xfc>  // b.lo, b.ul, b.last
  54:	ldr	x21, [x23, #8]
  58:	sub	x1, x21, x20
  5c:	cmp	x22, x1, asr #5
  60:	asr	x25, x1, #5
  64:	b.hi	220 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x220>  // b.pmore
  68:	cmp	x24, #0x0
  6c:	b.le	a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xa8>
  70:	mov	x21, x20
  74:	nop
  78:	mov	x1, x19
  7c:	mov	x0, x21
  80:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  84:	add	x19, x19, #0x20
  88:	add	x21, x21, #0x20
  8c:	subs	x22, x22, #0x1
  90:	b.ne	78 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x78>  // b.any
  94:	cmp	x24, #0x0
  98:	mov	x0, #0x20                  	// #32
  9c:	csel	x0, x24, x0, gt
  a0:	ldr	x21, [x23, #8]
  a4:	add	x20, x20, x0
  a8:	cmp	x20, x21
  ac:	b.eq	d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xd0>  // b.none
  b0:	mov	x1, x20
  b4:	add	x20, x20, #0x20
  b8:	ldr	x0, [x1], #16
  bc:	cmp	x0, x1
  c0:	b.eq	210 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x210>  // b.none
  c4:	bl	0 <_ZdlPv>
  c8:	cmp	x21, x20
  cc:	b.ne	b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xb0>  // b.any
  d0:	ldr	x20, [x23]
  d4:	add	x24, x20, x24
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldp	x25, x26, [sp, #64]
  e4:	ldr	x27, [sp, #80]
  e8:	str	x24, [x23, #8]
  ec:	mov	x0, x23
  f0:	ldp	x23, x24, [sp, #48]
  f4:	ldp	x29, x30, [sp], #112
  f8:	ret
  fc:	cbz	x22, 2f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2f0>
 100:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
 104:	cmp	x22, x0
 108:	b.hi	31c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x31c>  // b.pmore
 10c:	mov	x0, x24
 110:	bl	0 <_Znwm>
 114:	mov	x22, x0
 118:	mov	x20, x22
 11c:	cmp	x19, x27
 120:	add	x26, sp, #0x68
 124:	b.ne	154 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x154>  // b.any
 128:	b	1c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1c4>
 12c:	cmp	x21, #0x1
 130:	b.ne	2f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2f8>  // b.any
 134:	ldrb	w1, [x25]
 138:	strb	w1, [x20, #16]
 13c:	str	x21, [x20, #8]
 140:	add	x19, x19, #0x20
 144:	strb	wzr, [x0, x21]
 148:	cmp	x27, x19
 14c:	add	x20, x20, #0x20
 150:	b.eq	1c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1c4>  // b.none
 154:	add	x0, x20, #0x10
 158:	ldr	x21, [x19, #8]
 15c:	str	x0, [x20]
 160:	ldr	x25, [x19]
 164:	cmn	x25, x21
 168:	ccmp	x25, #0x0, #0x0, ne  // ne = any
 16c:	b.eq	310 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x310>  // b.none
 170:	str	x21, [sp, #104]
 174:	cmp	x21, #0xf
 178:	b.ls	12c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x12c>  // b.plast
 17c:	mov	x1, x26
 180:	mov	x0, x20
 184:	mov	x2, #0x0                   	// #0
 188:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 18c:	ldr	x1, [sp, #104]
 190:	str	x0, [x20]
 194:	str	x1, [x20, #16]
 198:	mov	x2, x21
 19c:	mov	x1, x25
 1a0:	bl	0 <memcpy>
 1a4:	add	x19, x19, #0x20
 1a8:	ldr	x0, [x20]
 1ac:	cmp	x27, x19
 1b0:	ldr	x21, [sp, #104]
 1b4:	str	x21, [x20, #8]
 1b8:	add	x20, x20, #0x20
 1bc:	strb	wzr, [x0, x21]
 1c0:	b.ne	154 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x154>  // b.any
 1c4:	ldp	x19, x20, [x23]
 1c8:	cmp	x19, x20
 1cc:	b.eq	1f4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1f4>  // b.none
 1d0:	mov	x1, x19
 1d4:	add	x19, x19, #0x20
 1d8:	ldr	x0, [x1], #16
 1dc:	cmp	x0, x1
 1e0:	b.eq	300 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x300>  // b.none
 1e4:	bl	0 <_ZdlPv>
 1e8:	cmp	x20, x19
 1ec:	b.ne	1d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1d0>  // b.any
 1f0:	ldr	x20, [x23]
 1f4:	cbz	x20, 200 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x200>
 1f8:	mov	x0, x20
 1fc:	bl	0 <_ZdlPv>
 200:	add	x24, x22, x24
 204:	str	x22, [x23]
 208:	str	x24, [x23, #16]
 20c:	b	d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xd8>
 210:	cmp	x21, x20
 214:	b.ne	b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xb0>  // b.any
 218:	ldr	x20, [x23]
 21c:	b	d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xd4>
 220:	cmp	x1, #0x0
 224:	b.le	250 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x250>
 228:	mov	x1, x19
 22c:	mov	x0, x20
 230:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 234:	add	x19, x19, #0x20
 238:	add	x20, x20, #0x20
 23c:	subs	x25, x25, #0x1
 240:	b.ne	228 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x228>  // b.any
 244:	ldp	x20, x21, [x23]
 248:	ldp	x19, x27, [x26]
 24c:	sub	x1, x21, x20
 250:	add	x19, x19, x1
 254:	add	x25, sp, #0x68
 258:	cmp	x19, x27
 25c:	b.ne	284 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x284>  // b.any
 260:	b	d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xd4>
 264:	ldrb	w1, [x20]
 268:	strb	w1, [x21, #16]
 26c:	str	x22, [x21, #8]
 270:	add	x19, x19, #0x20
 274:	strb	wzr, [x0, x22]
 278:	cmp	x27, x19
 27c:	add	x21, x21, #0x20
 280:	b.eq	d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xd0>  // b.none
 284:	add	x0, x21, #0x10
 288:	ldr	x22, [x19, #8]
 28c:	str	x0, [x21]
 290:	ldr	x20, [x19]
 294:	cmn	x20, x22
 298:	ccmp	x20, #0x0, #0x0, ne  // ne = any
 29c:	b.eq	310 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x310>  // b.none
 2a0:	str	x22, [sp, #104]
 2a4:	cmp	x22, #0xf
 2a8:	b.hi	2bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2bc>  // b.pmore
 2ac:	cmp	x22, #0x1
 2b0:	b.eq	264 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x264>  // b.none
 2b4:	cbz	x22, 26c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x26c>
 2b8:	b	2d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2d8>
 2bc:	mov	x1, x25
 2c0:	mov	x0, x21
 2c4:	mov	x2, #0x0                   	// #0
 2c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 2cc:	ldr	x1, [sp, #104]
 2d0:	str	x0, [x21]
 2d4:	str	x1, [x21, #16]
 2d8:	mov	x2, x22
 2dc:	mov	x1, x20
 2e0:	bl	0 <memcpy>
 2e4:	ldr	x0, [x21]
 2e8:	ldr	x22, [sp, #104]
 2ec:	b	26c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x26c>
 2f0:	mov	x22, #0x0                   	// #0
 2f4:	b	118 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x118>
 2f8:	cbz	x21, 13c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x13c>
 2fc:	b	198 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x198>
 300:	cmp	x20, x19
 304:	b.ne	1d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1d0>  // b.any
 308:	ldr	x20, [x23]
 30c:	b	1f4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1f4>
 310:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>
 314:	add	x0, x0, #0x0
 318:	bl	0 <_ZSt19__throw_logic_errorPKc>
 31c:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	bc <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xbc>  // b.none
  1c:	mov	x22, x0
  20:	stp	x23, x24, [sp, #48]
  24:	nop
  28:	ldr	x20, [x19, #8]
  2c:	cbz	x20, 44 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x44>
  30:	add	x0, x20, #0x18
  34:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev>
  38:	mov	x0, x20
  3c:	mov	x1, #0x30                  	// #48
  40:	bl	0 <_ZdlPvm>
  44:	ldr	x20, [x19]
  48:	cbz	x20, a8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xa8>
  4c:	ldr	x0, [x20, #88]
  50:	add	x1, x20, #0x68
  54:	add	x24, x20, #0x58
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20, #72]
  68:	add	x23, x20, #0x48
  6c:	cmp	x24, x0
  70:	b.eq	78 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x78>  // b.none
  74:	bl	0 <free>
  78:	ldr	x0, [x20, #56]
  7c:	cmp	x23, x0
  80:	b.eq	88 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x1, x20, #0x18
  90:	cmp	x0, x1
  94:	b.eq	9c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	mov	x1, #0x80                  	// #128
  a4:	bl	0 <_ZdlPvm>
  a8:	add	x19, x19, #0x10
  ac:	cmp	x21, x19
  b0:	b.ne	28 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x28>  // b.any
  b4:	ldp	x23, x24, [sp, #48]
  b8:	ldr	x21, [x22]
  bc:	cbz	x21, d4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xd4>
  c0:	mov	x0, x21
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	b	0 <_ZdlPv>
  d4:	ldp	x19, x20, [sp, #16]
  d8:	ldp	x21, x22, [sp, #32]
  dc:	ldp	x29, x30, [sp], #64
  e0:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC2IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC1IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x9, 0 <_ZN4llvm2cl15GeneralCategoryE>
   8:	mov	x15, #0x1                   	// #1
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	adrp	x0, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC1IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_>
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x6, x19
  24:	add	x13, x19, #0x80
  28:	str	x23, [sp, #48]
  2c:	mov	x14, #0x100000001           	// #4294967297
  30:	ldr	x0, [x0]
  34:	add	x7, x19, #0x50
  38:	ldr	x5, [x19, #8]
  3c:	stp	xzr, xzr, [x19, #24]
  40:	add	x0, x0, #0x10
  44:	and	x5, x5, #0x80000000
  48:	stp	xzr, xzr, [x19, #40]
  4c:	orr	x5, x5, #0x10000
  50:	ldr	x9, [x9]
  54:	stp	x5, xzr, [x19, #8]
  58:	adrp	x5, 0 <_ZTVN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  5c:	stp	xzr, x7, [x19, #56]
  60:	adrp	x8, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC1IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_>
  64:	adrp	x7, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEEC1IJA2_cNS0_4descENS0_10value_descENS0_15FormattingFlagsEEEEDpRKT_>
  68:	stp	x14, x9, [x19, #72]
  6c:	mov	x23, x4
  70:	mov	x20, x3
  74:	stp	xzr, x13, [x19, #88]
  78:	mov	x21, x2
  7c:	mov	x22, x1
  80:	stp	x13, x15, [x19, #104]
  84:	str	wzr, [x19, #120]
  88:	stp	xzr, xzr, [x19, #136]
  8c:	str	xzr, [x19, #152]
  90:	ldr	x5, [x5]
  94:	str	x0, [x6], #160
  98:	str	xzr, [x19, #160]
  9c:	mov	x0, x1
  a0:	stp	xzr, xzr, [x6, #8]
  a4:	add	x5, x5, #0x10
  a8:	ldr	x7, [x7]
  ac:	str	x5, [x19, #184]
  b0:	ldr	x8, [x8]
  b4:	stp	x8, x7, [x19, #208]
  b8:	bl	0 <strlen>
  bc:	mov	x2, x0
  c0:	mov	x1, x22
  c4:	mov	x0, x19
  c8:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  cc:	ldr	w2, [x23]
  d0:	mov	x0, x19
  d4:	ldrh	w1, [x19, #10]
  d8:	bfi	w1, w2, #7, #2
  dc:	ldp	x3, x2, [x21]
  e0:	stp	x3, x2, [x19, #32]
  e4:	ldp	x3, x2, [x20]
  e8:	strh	w1, [x19, #10]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	ldr	x23, [sp, #48]
  f4:	stp	x3, x2, [x19, #48]
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x29, x30, [sp], #64
 100:	b	0 <_ZN4llvm2cl6Option11addArgumentEv>

Disassembly of section .text._ZN4llvm7ErrorOrISt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EEED2Ev:

0000000000000000 <_ZN4llvm7ErrorOrISt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EEED1Ev>:
   0:	ldrb	w1, [x0, #16]
   4:	tbnz	w1, #0, 20 <_ZN4llvm7ErrorOrISt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EEED1Ev+0x20>
   8:	ldr	x0, [x0]
   c:	cbz	x0, 20 <_ZN4llvm7ErrorOrISt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EEED1Ev+0x20>
  10:	ldr	x1, [x0]
  14:	ldr	x1, [x1, #8]
  18:	mov	x16, x1
  1c:	br	x16
  20:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	cbz	x1, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x74>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x21
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  28:	ldr	x2, [x19, #32]
  2c:	add	x1, x19, #0x30
  30:	mov	x0, x19
  34:	cmp	x2, x1
  38:	ldr	x20, [x19, #16]
  3c:	b.eq	5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x5c>  // b.none
  40:	mov	x0, x2
  44:	bl	0 <_ZdlPv>
  48:	mov	x0, x19
  4c:	bl	0 <_ZdlPv>
  50:	cbz	x20, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x64>
  54:	mov	x19, x20
  58:	b	1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x1c>
  5c:	bl	0 <_ZdlPv>
  60:	cbnz	x20, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x54>
  64:	ldp	x19, x20, [sp, #16]
  68:	ldr	x21, [sp, #32]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	cbz	x1, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x74>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x21
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  28:	ldr	x2, [x19, #32]
  2c:	add	x1, x19, #0x30
  30:	mov	x0, x19
  34:	cmp	x2, x1
  38:	ldr	x20, [x19, #16]
  3c:	b.eq	5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x5c>  // b.none
  40:	mov	x0, x2
  44:	bl	0 <_ZdlPv>
  48:	mov	x0, x19
  4c:	bl	0 <_ZdlPv>
  50:	cbz	x20, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x64>
  54:	mov	x19, x20
  58:	b	1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x1c>
  5c:	bl	0 <_ZdlPv>
  60:	cbnz	x20, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x54>
  64:	ldp	x19, x20, [sp, #16]
  68:	ldr	x21, [sp, #32]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	cbz	x1, 198 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x198>
   4:	stp	x29, x30, [sp, #-96]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x1
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x25, x0
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x23, x24, [sp, #48]
  24:	mov	x0, x25
  28:	ldr	x1, [x20, #24]
  2c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  30:	ldr	x22, [x20, #64]
  34:	ldr	x23, [x20, #16]
  38:	cbz	x22, 14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x14c>
  3c:	ldp	x21, x24, [x22, #128]
  40:	cmp	x21, x24
  44:	b.eq	e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xe4>  // b.none
  48:	str	x27, [sp, #80]
  4c:	nop
  50:	ldr	x19, [x21, #8]
  54:	cbz	x19, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x6c>
  58:	add	x0, x19, #0x18
  5c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  60:	mov	x0, x19
  64:	mov	x1, #0x30                  	// #48
  68:	bl	0 <_ZdlPvm>
  6c:	ldr	x19, [x21]
  70:	cbz	x19, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xd0>
  74:	ldr	x0, [x19, #88]
  78:	add	x1, x19, #0x68
  7c:	add	x27, x19, #0x58
  80:	cmp	x0, x1
  84:	b.eq	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	ldr	x0, [x19, #72]
  90:	add	x26, x19, #0x48
  94:	cmp	x27, x0
  98:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	ldr	x0, [x19, #56]
  a4:	cmp	x26, x0
  a8:	b.eq	b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xb0>  // b.none
  ac:	bl	0 <free>
  b0:	ldr	x0, [x19, #8]
  b4:	add	x1, x19, #0x18
  b8:	cmp	x0, x1
  bc:	b.eq	c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xc4>  // b.none
  c0:	bl	0 <free>
  c4:	mov	x0, x19
  c8:	mov	x1, #0x80                  	// #128
  cc:	bl	0 <_ZdlPvm>
  d0:	add	x21, x21, #0x10
  d4:	cmp	x24, x21
  d8:	b.ne	50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>  // b.any
  dc:	ldr	x27, [sp, #80]
  e0:	ldr	x24, [x22, #128]
  e4:	cbz	x24, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xf0>
  e8:	mov	x0, x24
  ec:	bl	0 <_ZdlPv>
  f0:	ldr	x0, [x22, #88]
  f4:	add	x1, x22, #0x68
  f8:	add	x21, x22, #0x58
  fc:	cmp	x0, x1
 100:	b.eq	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x108>  // b.none
 104:	bl	0 <free>
 108:	ldr	x0, [x22, #72]
 10c:	add	x19, x22, #0x48
 110:	cmp	x21, x0
 114:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x11c>  // b.none
 118:	bl	0 <free>
 11c:	ldr	x0, [x22, #56]
 120:	cmp	x19, x0
 124:	b.eq	12c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	ldr	x0, [x22, #8]
 130:	add	x1, x22, #0x18
 134:	cmp	x0, x1
 138:	b.eq	140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x140>  // b.none
 13c:	bl	0 <free>
 140:	mov	x0, x22
 144:	mov	x1, #0x98                  	// #152
 148:	bl	0 <_ZdlPvm>
 14c:	ldr	x0, [x20, #32]
 150:	add	x1, x20, #0x30
 154:	cmp	x0, x1
 158:	b.eq	174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x174>  // b.none
 15c:	bl	0 <_ZdlPv>
 160:	mov	x0, x20
 164:	bl	0 <_ZdlPv>
 168:	cbz	x23, 180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x180>
 16c:	mov	x20, x23
 170:	b	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x24>
 174:	mov	x0, x20
 178:	bl	0 <_ZdlPv>
 17c:	cbnz	x23, 16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x16c>
 180:	ldp	x19, x20, [sp, #16]
 184:	ldp	x21, x22, [sp, #32]
 188:	ldp	x23, x24, [sp, #48]
 18c:	ldp	x25, x26, [sp, #64]
 190:	ldp	x29, x30, [sp], #96
 194:	ret
 198:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	cbz	x1, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xdc>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x0
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x0, x22
  24:	ldr	x1, [x19, #24]
  28:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  2c:	ldr	x20, [x19, #64]
  30:	ldr	x21, [x19, #16]
  34:	cbz	x20, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x94>
  38:	ldr	x0, [x20, #88]
  3c:	add	x1, x20, #0x68
  40:	add	x24, x20, #0x58
  44:	cmp	x0, x1
  48:	b.eq	50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>  // b.none
  4c:	bl	0 <free>
  50:	ldr	x0, [x20, #72]
  54:	add	x23, x20, #0x48
  58:	cmp	x24, x0
  5c:	b.eq	64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20, #56]
  68:	cmp	x23, x0
  6c:	b.eq	74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #8]
  78:	add	x1, x20, #0x18
  7c:	cmp	x0, x1
  80:	b.eq	88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x88>  // b.none
  84:	bl	0 <free>
  88:	mov	x0, x20
  8c:	mov	x1, #0x80                  	// #128
  90:	bl	0 <_ZdlPvm>
  94:	ldr	x0, [x19, #32]
  98:	add	x1, x19, #0x30
  9c:	cmp	x0, x1
  a0:	b.eq	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xbc>  // b.none
  a4:	bl	0 <_ZdlPv>
  a8:	mov	x0, x19
  ac:	bl	0 <_ZdlPv>
  b0:	cbz	x21, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xc8>
  b4:	mov	x19, x21
  b8:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  bc:	mov	x0, x19
  c0:	bl	0 <_ZdlPv>
  c4:	cbnz	x21, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xb4>
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldp	x29, x30, [sp], #64
  d8:	ret
  dc:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x3, #0xaaab
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x24, x0
  1c:	ldp	x23, x22, [x0]
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x20, x1
  28:	stp	x25, x26, [sp, #64]
  2c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  30:	movk	x1, #0x555, lsl #48
  34:	str	x27, [sp, #80]
  38:	sub	x0, x22, x23
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	1c4 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c4>  // b.none
  4c:	mov	x19, x2
  50:	sub	x21, x20, x23
  54:	cbz	x0, 1a8 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a8>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x26, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	194 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x194>  // b.plast
  68:	mov	x0, x26
  6c:	bl	0 <_Znwm>
  70:	mov	x25, x0
  74:	add	x26, x0, x26
  78:	add	x27, x0, #0x18
  7c:	mov	x1, x19
  80:	add	x0, x25, x21
  84:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  88:	cmp	x20, x23
  8c:	b.eq	e4 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe4>  // b.none
  90:	mov	x19, x23
  94:	mov	x21, x25
  98:	mov	x1, x19
  9c:	mov	x0, x21
  a0:	add	x19, x19, #0x18
  a4:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  a8:	cmp	x20, x19
  ac:	add	x21, x21, #0x18
  b0:	b.ne	98 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>  // b.any
  b4:	sub	x27, x20, #0x18
  b8:	mov	x0, #0xaaab                	// #43691
  bc:	sub	x27, x27, x23
  c0:	movk	x0, #0xaaaa, lsl #16
  c4:	movk	x0, #0xaaaa, lsl #32
  c8:	lsr	x27, x27, #3
  cc:	movk	x0, #0xaaa, lsl #48
  d0:	mul	x27, x27, x0
  d4:	and	x27, x27, #0x1fffffffffffffff
  d8:	add	x27, x27, #0x2
  dc:	add	x27, x27, x27, lsl #1
  e0:	add	x27, x25, x27, lsl #3
  e4:	cmp	x20, x22
  e8:	mov	x19, x20
  ec:	mov	x21, x27
  f0:	b.eq	144 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x144>  // b.none
  f4:	nop
  f8:	mov	x1, x19
  fc:	mov	x0, x21
 100:	add	x19, x19, #0x18
 104:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
 108:	cmp	x22, x19
 10c:	add	x21, x21, #0x18
 110:	b.ne	f8 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf8>  // b.any
 114:	sub	x0, x22, x20
 118:	mov	x1, #0xaaab                	// #43691
 11c:	sub	x0, x0, #0x18
 120:	movk	x1, #0xaaaa, lsl #16
 124:	movk	x1, #0xaaaa, lsl #32
 128:	lsr	x0, x0, #3
 12c:	movk	x1, #0xaaa, lsl #48
 130:	mul	x0, x0, x1
 134:	and	x0, x0, #0x1fffffffffffffff
 138:	add	x0, x0, #0x1
 13c:	add	x0, x0, x0, lsl #1
 140:	add	x27, x27, x0, lsl #3
 144:	cmp	x23, x22
 148:	mov	x19, x23
 14c:	b.eq	164 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x164>  // b.none
 150:	mov	x0, x19
 154:	add	x19, x19, #0x18
 158:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
 15c:	cmp	x19, x22
 160:	b.ne	150 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.any
 164:	cbz	x23, 170 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x170>
 168:	mov	x0, x23
 16c:	bl	0 <_ZdlPv>
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x21, x22, [sp, #32]
 178:	stp	x25, x27, [x24]
 17c:	str	x26, [x24, #16]
 180:	ldp	x23, x24, [sp, #48]
 184:	ldp	x25, x26, [sp, #64]
 188:	ldr	x27, [sp, #80]
 18c:	ldp	x29, x30, [sp], #96
 190:	ret
 194:	cbnz	x0, 1b0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1b0>
 198:	mov	x27, #0x18                  	// #24
 19c:	mov	x26, #0x0                   	// #0
 1a0:	mov	x25, #0x0                   	// #0
 1a4:	b	7c <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x7c>
 1a8:	mov	x26, #0x18                  	// #24
 1ac:	b	68 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
 1b0:	cmp	x0, x1
 1b4:	mov	x26, #0x18                  	// #24
 1b8:	csel	x0, x0, x1, ls  // ls = plast
 1bc:	mul	x26, x0, x26
 1c0:	b	68 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
 1c4:	adrp	x0, 0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 1c8:	add	x0, x0, #0x0
 1cc:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev:

0000000000000000 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #224
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	adrp	x1, 0 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev>
  3c:	add	x2, x19, #0xc0
  40:	ldr	x0, [x19, #176]
  44:	ldr	x1, [x1]
  48:	cmp	x0, x2
  4c:	add	x1, x1, #0x10
  50:	str	x1, [x19, #168]
  54:	b.eq	5c <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x5c>  // b.none
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x0, [x19, #136]
  60:	add	x1, x19, #0x98
  64:	cmp	x0, x1
  68:	b.eq	70 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	ldp	x1, x0, [x19, #96]
  74:	cmp	x1, x0
  78:	b.eq	80 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x0, [x19, #64]
  84:	add	x1, x19, #0x50
  88:	cmp	x0, x1
  8c:	b.eq	94 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED0Ev+0x94>  // b.none
  90:	bl	0 <free>
  94:	mov	x0, x19
  98:	mov	x1, #0x100                 	// #256
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
   8:	mov	x1, x0
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x1], #168
  24:	ldr	x3, [x1, #16]
  28:	cbz	x3, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x38>
  2c:	mov	x0, x1
  30:	mov	w2, #0x3                   	// #3
  34:	blr	x3
  38:	ldp	x1, x0, [x19, #96]
  3c:	cmp	x1, x0
  40:	b.eq	48 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #64]
  4c:	add	x1, x19, #0x50
  50:	cmp	x0, x1
  54:	b.eq	5c <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED0Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	mov	x0, x19
  60:	mov	x1, #0xc8                  	// #200
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_:

0000000000000000 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x1fffffffffffffff    	// #2305843009213693951
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #2
  30:	b.eq	10c <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #2
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffffc    	// #9223372036854775804
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	w0, [x22]
  6c:	add	x22, x26, #0x4
  70:	str	w0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0xd0>
 104:	mov	x25, #0x4                   	// #4
 108:	b	58 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #2
 124:	b	58 <_ZNSt6vectorIjSaIjEE17_M_realloc_insertIJRKjEEEvN9__gnu_cxx17__normal_iteratorIPjS1_EEDpOT_+0x58>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x3, #0x3ffffffffffffff     	// #288230376151711743
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x0
  18:	ldp	x24, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	sub	x0, x20, x24
  2c:	cmp	x3, x0, asr #5
  30:	b.eq	250 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x250>  // b.none
  34:	mov	x19, x1
  38:	mov	x25, x2
  3c:	asr	x21, x0, #5
  40:	sub	x28, x1, x24
  44:	cbz	x21, 1dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1dc>
  48:	cmp	x21, x21, lsl #1
  4c:	lsl	x21, x21, #1
  50:	b.ls	180 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x180>  // b.plast
  54:	mov	x21, #0x7fffffffffffffe0    	// #9223372036854775776
  58:	mov	x0, x21
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	ldp	x27, x25, [x25]
  68:	add	x26, x22, x28
  6c:	add	x0, x26, #0x10
  70:	str	x0, [x22, x28]
  74:	cmn	x27, x25
  78:	ccmp	x27, #0x0, #0x0, ne  // ne = any
  7c:	b.eq	234 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x234>  // b.none
  80:	str	x25, [sp, #104]
  84:	cmp	x25, #0xf
  88:	b.hi	200 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x200>  // b.pmore
  8c:	cmp	x25, #0x1
  90:	b.ne	1e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e4>  // b.any
  94:	ldrb	w1, [x27]
  98:	strb	w1, [x26, #16]
  9c:	str	x25, [x26, #8]
  a0:	cmp	x19, x24
  a4:	strb	wzr, [x0, x25]
  a8:	b.eq	1f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1f8>  // b.none
  ac:	mov	x2, x22
  b0:	mov	x3, x24
  b4:	nop
  b8:	mov	x4, x3
  bc:	add	x1, x2, #0x10
  c0:	str	x1, [x2]
  c4:	ldr	x5, [x4], #16
  c8:	cmp	x5, x4
  cc:	b.eq	1b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1b8>  // b.none
  d0:	str	x5, [x2]
  d4:	add	x3, x3, #0x20
  d8:	add	x2, x2, #0x20
  dc:	ldur	x1, [x3, #-16]
  e0:	stur	x1, [x2, #-16]
  e4:	ldur	x1, [x3, #-24]
  e8:	stur	x1, [x2, #-24]
  ec:	cmp	x19, x3
  f0:	b.ne	b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>  // b.any
  f4:	sub	x25, x19, x24
  f8:	add	x25, x22, x25
  fc:	add	x25, x25, #0x20
 100:	cmp	x19, x20
 104:	b.eq	14c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x14c>  // b.none
 108:	mov	x3, x19
 10c:	mov	x2, x25
 110:	mov	x4, x3
 114:	add	x1, x2, #0x10
 118:	str	x1, [x2]
 11c:	ldr	x5, [x4], #16
 120:	cmp	x5, x4
 124:	b.eq	18c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x18c>  // b.none
 128:	ldp	x4, x1, [x3, #8]
 12c:	stp	x5, x4, [x2]
 130:	add	x3, x3, #0x20
 134:	str	x1, [x2, #16]
 138:	cmp	x3, x20
 13c:	add	x2, x2, #0x20
 140:	b.ne	110 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x110>  // b.any
 144:	sub	x19, x20, x19
 148:	add	x25, x25, x19
 14c:	cbz	x24, 158 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>
 150:	mov	x0, x24
 154:	bl	0 <_ZdlPv>
 158:	add	x21, x22, x21
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x27, x28, [sp, #80]
 164:	stp	x22, x25, [x23]
 168:	str	x21, [x23, #16]
 16c:	ldp	x21, x22, [sp, #32]
 170:	ldp	x23, x24, [sp, #48]
 174:	ldp	x25, x26, [sp, #64]
 178:	ldp	x29, x30, [sp], #112
 17c:	ret
 180:	cbnz	x21, 240 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x240>
 184:	mov	x22, #0x0                   	// #0
 188:	b	64 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x64>
 18c:	ldr	x0, [x3, #8]
 190:	str	x0, [x2, #8]
 194:	ldp	x4, x5, [x3, #16]
 198:	stp	x4, x5, [x2, #16]
 19c:	add	x3, x3, #0x20
 1a0:	cmp	x20, x3
 1a4:	add	x2, x2, #0x20
 1a8:	b.ne	110 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x110>  // b.any
 1ac:	sub	x19, x20, x19
 1b0:	add	x25, x25, x19
 1b4:	b	14c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x14c>
 1b8:	ldp	x4, x5, [x3, #16]
 1bc:	stp	x4, x5, [x2, #16]
 1c0:	add	x3, x3, #0x20
 1c4:	ldur	x0, [x3, #-24]
 1c8:	str	x0, [x2, #8]
 1cc:	cmp	x19, x3
 1d0:	add	x2, x2, #0x20
 1d4:	b.ne	b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>  // b.any
 1d8:	b	f4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf4>
 1dc:	mov	x21, #0x20                  	// #32
 1e0:	b	58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>
 1e4:	cbnz	x25, 21c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x21c>
 1e8:	str	x25, [x26, #8]
 1ec:	cmp	x19, x24
 1f0:	strb	wzr, [x0, x25]
 1f4:	b.ne	ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>  // b.any
 1f8:	mov	x25, x22
 1fc:	b	fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xfc>
 200:	add	x1, sp, #0x68
 204:	mov	x0, x26
 208:	mov	x2, #0x0                   	// #0
 20c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 210:	ldr	x1, [sp, #104]
 214:	str	x0, [x26]
 218:	str	x1, [x26, #16]
 21c:	mov	x2, x25
 220:	mov	x1, x27
 224:	bl	0 <memcpy>
 228:	ldr	x0, [x26]
 22c:	ldr	x25, [sp, #104]
 230:	b	9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x9c>
 234:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 238:	add	x0, x0, #0x0
 23c:	bl	0 <_ZSt19__throw_logic_errorPKc>
 240:	cmp	x21, x3
 244:	csel	x21, x21, x3, ls  // ls = plast
 248:	lsl	x21, x21, #5
 24c:	b	58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x58>
 250:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 254:	add	x0, x0, #0x0
 258:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	add	x20, sp, #0x70
  10:	add	x3, x20, #0x10
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x19, x0
  1c:	stp	x23, x24, [sp, #48]
  20:	str	w1, [sp, #92]
  24:	stp	x3, xzr, [sp, #112]
  28:	strb	wzr, [sp, #128]
  2c:	cbz	x4, b0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xb0>
  30:	add	x23, sp, #0x90
  34:	str	x5, [sp, #104]
  38:	add	x1, x23, #0x10
  3c:	str	x1, [sp, #144]
  40:	mov	x22, x4
  44:	mov	x21, x5
  48:	cmp	x5, #0xf
  4c:	mov	x0, x5
  50:	b.hi	1b8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1b8>  // b.pmore
  54:	cmp	x5, #0x1
  58:	b.ne	1ec <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1ec>  // b.any
  5c:	ldrb	w3, [x4]
  60:	mov	x2, x1
  64:	strb	w3, [sp, #160]
  68:	str	x0, [sp, #152]
  6c:	strb	wzr, [x2, x0]
  70:	add	x2, x23, #0x10
  74:	ldr	x1, [sp, #144]
  78:	ldr	x0, [sp, #112]
  7c:	cmp	x1, x2
  80:	b.eq	270 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x270>  // b.none
  84:	add	x2, x20, #0x10
  88:	cmp	x0, x2
  8c:	ldp	x3, x2, [sp, #152]
  90:	stp	x1, x3, [sp, #112]
  94:	b.eq	204 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x204>  // b.none
  98:	ldr	x1, [sp, #128]
  9c:	str	x2, [sp, #128]
  a0:	cbz	x0, 208 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x208>
  a4:	str	x0, [sp, #144]
  a8:	str	x1, [sp, #160]
  ac:	b	d4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xd4>
  b0:	add	x23, sp, #0x90
  b4:	mov	x0, x3
  b8:	add	x1, x23, #0x10
  bc:	mov	x2, #0x0                   	// #0
  c0:	str	x1, [sp, #144]
  c4:	strb	wzr, [sp, #160]
  c8:	str	x2, [sp, #120]
  cc:	strb	wzr, [x0, x2]
  d0:	ldr	x0, [sp, #144]
  d4:	str	xzr, [sp, #152]
  d8:	strb	wzr, [x0]
  dc:	add	x1, x23, #0x10
  e0:	ldr	x0, [sp, #144]
  e4:	cmp	x0, x1
  e8:	b.eq	f0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xf0>  // b.none
  ec:	bl	0 <_ZdlPv>
  f0:	add	x21, x19, #0x88
  f4:	ldp	x22, x0, [x21, #8]
  f8:	cmp	x22, x0
  fc:	b.eq	214 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x214>  // b.none
 100:	str	x25, [sp, #64]
 104:	add	x0, x22, #0x10
 108:	ldr	x24, [sp, #120]
 10c:	str	x0, [x22]
 110:	ldr	x25, [sp, #112]
 114:	cmn	x25, x24
 118:	ccmp	x25, #0x0, #0x0, ne  // ne = any
 11c:	b.eq	2a4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x2a4>  // b.none
 120:	str	x24, [sp, #144]
 124:	cmp	x24, #0xf
 128:	b.hi	228 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x228>  // b.pmore
 12c:	cmp	x24, #0x1
 130:	b.ne	1fc <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1fc>  // b.any
 134:	ldrb	w1, [x25]
 138:	strb	w1, [x22, #16]
 13c:	str	x24, [x22, #8]
 140:	strb	wzr, [x0, x24]
 144:	ldr	x0, [x21, #8]
 148:	ldr	x25, [sp, #64]
 14c:	add	x0, x0, #0x20
 150:	str	x0, [x21, #8]
 154:	add	x0, x19, #0xa0
 158:	ldr	w2, [sp, #92]
 15c:	strh	w2, [x19, #12]
 160:	ldp	x1, x3, [x0, #8]
 164:	cmp	x1, x3
 168:	b.eq	25c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x25c>  // b.none
 16c:	str	w2, [x1], #4
 170:	str	x1, [x0, #8]
 174:	ldr	x0, [x19, #208]
 178:	cbz	x0, 268 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x268>
 17c:	ldr	x2, [x19, #216]
 180:	add	x0, x19, #0xc0
 184:	mov	x1, x20
 188:	add	x20, x20, #0x10
 18c:	blr	x2
 190:	ldr	x0, [sp, #112]
 194:	cmp	x0, x20
 198:	b.eq	1a0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1a0>  // b.none
 19c:	bl	0 <_ZdlPv>
 1a0:	mov	w0, #0x0                   	// #0
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	ldp	x23, x24, [sp, #48]
 1b0:	ldp	x29, x30, [sp], #176
 1b4:	ret
 1b8:	add	x1, sp, #0x68
 1bc:	mov	x0, x23
 1c0:	mov	x2, #0x0                   	// #0
 1c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 1c8:	ldr	x1, [sp, #104]
 1cc:	str	x0, [sp, #144]
 1d0:	str	x1, [sp, #160]
 1d4:	mov	x2, x21
 1d8:	mov	x1, x22
 1dc:	bl	0 <memcpy>
 1e0:	ldr	x0, [sp, #104]
 1e4:	ldr	x2, [sp, #144]
 1e8:	b	68 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x68>
 1ec:	mov	x2, x1
 1f0:	cbz	x5, 68 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x68>
 1f4:	mov	x0, x1
 1f8:	b	1d4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1d4>
 1fc:	cbz	x24, 13c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x13c>
 200:	b	244 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x244>
 204:	str	x2, [sp, #128]
 208:	add	x0, x23, #0x10
 20c:	str	x0, [sp, #144]
 210:	b	d4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xd4>
 214:	mov	x1, x22
 218:	mov	x0, x21
 21c:	mov	x2, x20
 220:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
 224:	b	154 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x154>
 228:	mov	x1, x23
 22c:	mov	x0, x22
 230:	mov	x2, #0x0                   	// #0
 234:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 238:	ldr	x1, [sp, #144]
 23c:	str	x0, [x22]
 240:	str	x1, [x22, #16]
 244:	mov	x2, x24
 248:	mov	x1, x25
 24c:	bl	0 <memcpy>
 250:	ldr	x0, [x22]
 254:	ldr	x24, [sp, #144]
 258:	b	13c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x13c>
 25c:	add	x2, sp, #0x5c
 260:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
 264:	b	174 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x174>
 268:	str	x25, [sp, #64]
 26c:	bl	0 <_ZSt25__throw_bad_function_callv>
 270:	ldr	x2, [sp, #152]
 274:	cbz	x2, c8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xc8>
 278:	cmp	x2, #0x1
 27c:	b.eq	290 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x290>  // b.none
 280:	bl	0 <memcpy>
 284:	ldr	x0, [sp, #112]
 288:	ldr	x2, [sp, #152]
 28c:	b	c8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xc8>
 290:	ldrb	w1, [sp, #160]
 294:	strb	w1, [x0]
 298:	ldr	x0, [sp, #112]
 29c:	ldr	x2, [sp, #152]
 2a0:	b	c8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xc8>
 2a4:	adrp	x0, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
 2a8:	add	x0, x0, #0x0
 2ac:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Main.cpp>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	w5, #0x1                   	// #1
   8:	mov	x2, #0x1                   	// #1
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	adrp	x19, 0 <_GLOBAL__sub_I_Main.cpp>
  18:	add	x20, sp, #0xa0
  1c:	stp	x27, x28, [sp, #80]
  20:	add	x28, x19, #0x0
  24:	adrp	x27, 0 <_GLOBAL__sub_I_Main.cpp>
  28:	stp	x21, x22, [sp, #32]
  2c:	adrp	x22, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
  30:	add	x10, x28, #0x50
  34:	stp	x23, x24, [sp, #48]
  38:	adrp	x23, 0 <_ZTVN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  3c:	adrp	x24, 0 <_ZTVN4llvm2cl11OptionValueINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  40:	stp	x25, x26, [sp, #64]
  44:	adrp	x25, 0 <_ZN4llvm2cl15GeneralCategoryE>
  48:	adrp	x26, 0 <_GLOBAL__sub_I_Main.cpp>
  4c:	ldr	x1, [x22]
  50:	stp	xzr, xzr, [x28, #24]
  54:	add	x6, x28, #0x80
  58:	ldr	x3, [x23]
  5c:	add	x1, x1, #0x10
  60:	ldr	x0, [x28, #8]
  64:	add	x3, x3, #0x10
  68:	ldr	x4, [x24]
  6c:	and	x0, x0, #0x80000000
  70:	ldr	x25, [x25]
  74:	str	x1, [x19]
  78:	stp	x0, xzr, [x28, #8]
  7c:	add	x9, x28, #0x98
  80:	add	x8, x28, #0xc0
  84:	stp	xzr, xzr, [x28, #40]
  88:	add	x4, x4, #0x10
  8c:	mov	x0, x28
  90:	stp	xzr, x10, [x28, #56]
  94:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
  98:	add	x1, x1, #0x0
  9c:	stp	w2, w5, [x28, #72]
  a0:	add	x21, x20, #0x10
  a4:	stp	x25, xzr, [x28, #80]
  a8:	ldr	x7, [x26]
  ac:	stp	x6, x6, [x28, #96]
  b0:	str	x3, [x28, #216]
  b4:	ldr	x3, [x27]
  b8:	str	x2, [x28, #112]
  bc:	str	wzr, [x28, #120]
  c0:	stp	x9, xzr, [x28, #136]
  c4:	strb	wzr, [x28, #152]
  c8:	stp	x4, x8, [x28, #168]
  cc:	str	xzr, [x28, #184]
  d0:	strb	wzr, [x28, #192]
  d4:	strb	wzr, [x28, #208]
  d8:	str	x3, [x28, #240]
  dc:	str	x7, [x28, #248]
  e0:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  e4:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
  e8:	adrp	x3, 0 <_GLOBAL__sub_I_Main.cpp>
  ec:	add	x6, x0, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	x7, #0xf                   	// #15
  f8:	mov	x4, #0x8                   	// #8
  fc:	mov	w8, #0x2d                  	// #45
 100:	mov	x2, #0x1                   	// #1
 104:	stp	x3, x7, [x28, #32]
 108:	add	x0, x28, #0x88
 10c:	mov	x1, x20
 110:	stp	x6, x4, [x28, #48]
 114:	stp	x21, x2, [sp, #160]
 118:	strh	w8, [sp, #176]
 11c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 120:	mov	w5, #0x1                   	// #1
 124:	strb	w5, [x28, #208]
 128:	add	x0, x28, #0xb0
 12c:	mov	x1, x20
 130:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 134:	ldr	x0, [sp, #160]
 138:	cmp	x0, x21
 13c:	b.eq	144 <_GLOBAL__sub_I_Main.cpp+0x144>  // b.none
 140:	bl	0 <_ZdlPv>
 144:	add	x4, x19, #0x0
 148:	add	x28, x4, #0x100
 14c:	mov	x21, x4
 150:	mov	x0, x4
 154:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 158:	adrp	x0, 0 <__dso_handle>
 15c:	mov	x1, x21
 160:	add	x2, x0, #0x0
 164:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 168:	add	x0, x0, #0x0
 16c:	bl	0 <__cxa_atexit>
 170:	ldr	x0, [x28, #8]
 174:	add	x7, x21, #0x150
 178:	ldr	x1, [x24]
 17c:	and	x0, x0, #0x80000000
 180:	ldr	x5, [x23]
 184:	stp	x0, xzr, [x28, #8]
 188:	add	x0, x21, #0x198
 18c:	ldr	x6, [x22]
 190:	stp	xzr, x7, [x28, #56]
 194:	add	x7, x21, #0x1c0
 198:	ldr	x8, [x26]
 19c:	mov	x2, #0x1                   	// #1
 1a0:	mov	w9, #0x1                   	// #1
 1a4:	add	x1, x1, #0x10
 1a8:	add	x5, x5, #0x10
 1ac:	stp	xzr, xzr, [x28, #24]
 1b0:	add	x6, x6, #0x10
 1b4:	stp	xzr, xzr, [x28, #40]
 1b8:	stp	w2, w9, [x28, #72]
 1bc:	stp	x25, xzr, [x28, #80]
 1c0:	str	x2, [x28, #112]
 1c4:	str	wzr, [x28, #120]
 1c8:	str	x0, [x28, #136]
 1cc:	add	x0, x21, #0x180
 1d0:	stp	x0, x0, [x28, #96]
 1d4:	mov	x0, x28
 1d8:	str	xzr, [x28, #144]
 1dc:	strb	wzr, [x28, #152]
 1e0:	str	x1, [x28, #168]
 1e4:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 1e8:	str	x7, [x28, #176]
 1ec:	add	x7, x20, #0x10
 1f0:	str	x7, [sp, #104]
 1f4:	add	x1, x1, #0x0
 1f8:	str	xzr, [x28, #184]
 1fc:	strb	wzr, [x28, #192]
 200:	strb	wzr, [x28, #208]
 204:	str	x5, [x28, #216]
 208:	str	x8, [x28, #248]
 20c:	str	x6, [x21, #256]
 210:	ldr	x5, [x27]
 214:	str	x5, [x28, #240]
 218:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 21c:	strb	wzr, [sp, #176]
 220:	ldr	x7, [sp, #104]
 224:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 228:	adrp	x6, 0 <_GLOBAL__sub_I_Main.cpp>
 22c:	add	x2, x0, #0x0
 230:	add	x6, x6, #0x0
 234:	mov	x10, #0x13                  	// #19
 238:	mov	x8, #0x8                   	// #8
 23c:	stp	x6, x10, [x28, #32]
 240:	add	x0, x21, #0x188
 244:	stp	x2, x8, [x28, #48]
 248:	mov	x1, x20
 24c:	stp	x7, xzr, [sp, #160]
 250:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 254:	mov	w9, #0x1                   	// #1
 258:	strb	w9, [x28, #208]
 25c:	add	x0, x21, #0x1b0
 260:	mov	x1, x20
 264:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 268:	ldr	x7, [sp, #104]
 26c:	ldr	x0, [sp, #160]
 270:	cmp	x0, x7
 274:	b.eq	27c <_GLOBAL__sub_I_Main.cpp+0x27c>  // b.none
 278:	bl	0 <_ZdlPv>
 27c:	add	x4, x19, #0x0
 280:	add	x1, x4, #0x100
 284:	add	x3, x4, #0x200
 288:	mov	x0, x1
 28c:	stp	x1, x4, [sp, #104]
 290:	str	x3, [sp, #120]
 294:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 298:	ldr	x1, [sp, #104]
 29c:	adrp	x0, 0 <__dso_handle>
 2a0:	add	x2, x0, #0x0
 2a4:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 2a8:	add	x0, x0, #0x0
 2ac:	bl	0 <__cxa_atexit>
 2b0:	ldp	x4, x3, [sp, #112]
 2b4:	mov	x1, #0x81800000            	// #2172649472
 2b8:	ldr	x24, [x24]
 2bc:	mov	x7, #0x1                   	// #1
 2c0:	ldr	x23, [x23]
 2c4:	mov	w5, #0x1                   	// #1
 2c8:	ldr	x0, [x3, #8]
 2cc:	add	x2, x4, #0x250
 2d0:	ldr	x22, [x22]
 2d4:	and	x0, x0, x1
 2d8:	add	x10, x4, #0x298
 2dc:	add	x11, x4, #0x2c0
 2e0:	lsr	w8, w0, #16
 2e4:	add	x1, x4, #0x280
 2e8:	ldr	x26, [x26]
 2ec:	add	x24, x24, #0x10
 2f0:	ldr	x27, [x27]
 2f4:	add	x23, x23, #0x10
 2f8:	stp	x0, xzr, [x3, #8]
 2fc:	bfi	w8, w5, #7, #2
 300:	add	x22, x22, #0x10
 304:	str	xzr, [x3, #24]
 308:	adrp	x6, 0 <_GLOBAL__sub_I_Main.cpp>
 30c:	stp	xzr, xzr, [x3, #48]
 310:	add	x6, x6, #0x0
 314:	mov	x9, #0xc                   	// #12
 318:	str	x2, [x3, #64]
 31c:	add	x2, x20, #0x10
 320:	stp	w7, w5, [x3, #72]
 324:	add	x0, x4, #0x288
 328:	stp	x25, xzr, [x3, #80]
 32c:	stp	x1, x1, [x3, #96]
 330:	mov	x1, x20
 334:	str	x7, [x3, #112]
 338:	str	wzr, [x3, #120]
 33c:	stp	x10, xzr, [x3, #136]
 340:	mov	w10, #0x2d                  	// #45
 344:	strb	wzr, [x3, #152]
 348:	stp	x24, x11, [x3, #168]
 34c:	str	xzr, [x3, #184]
 350:	strb	wzr, [x3, #192]
 354:	strb	wzr, [x3, #208]
 358:	str	x23, [x3, #216]
 35c:	stp	x27, x26, [x3, #240]
 360:	str	x22, [x4, #512]
 364:	mov	x22, x2
 368:	strh	w8, [x3, #10]
 36c:	stp	x6, x9, [x3, #32]
 370:	str	x3, [sp, #104]
 374:	stp	x2, x7, [sp, #160]
 378:	strh	w10, [sp, #176]
 37c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 380:	ldp	x3, x4, [sp, #104]
 384:	mov	w5, #0x1                   	// #1
 388:	strb	w5, [x3, #208]
 38c:	mov	x1, x20
 390:	add	x0, x4, #0x2b0
 394:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 398:	ldr	x0, [sp, #160]
 39c:	cmp	x0, x22
 3a0:	b.eq	3a8 <_GLOBAL__sub_I_Main.cpp+0x3a8>  // b.none
 3a4:	bl	0 <_ZdlPv>
 3a8:	add	x19, x19, #0x0
 3ac:	adrp	x0, 0 <__dso_handle>
 3b0:	add	x22, x19, #0x200
 3b4:	add	x21, x0, #0x0
 3b8:	mov	x0, x22
 3bc:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 3c0:	mov	x1, x22
 3c4:	mov	x2, x21
 3c8:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 3cc:	add	x0, x0, #0x0
 3d0:	bl	0 <__cxa_atexit>
 3d4:	add	x27, sp, #0x8c
 3d8:	adrp	x6, 0 <_GLOBAL__sub_I_Main.cpp>
 3dc:	adrp	x5, 0 <_GLOBAL__sub_I_Main.cpp>
 3e0:	add	x6, x6, #0x0
 3e4:	add	x5, x5, #0x0
 3e8:	mov	x9, #0x1a                  	// #26
 3ec:	mov	x8, #0x9                   	// #9
 3f0:	mov	w7, #0x2                   	// #2
 3f4:	add	x26, sp, #0x90
 3f8:	mov	x4, x27
 3fc:	mov	x3, x20
 400:	add	x0, x19, #0x300
 404:	mov	x2, x26
 408:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 40c:	add	x1, x1, #0x0
 410:	str	x0, [sp, #104]
 414:	adrp	x24, 0 <_GLOBAL__sub_I_Main.cpp>
 418:	str	w7, [sp, #140]
 41c:	add	x24, x24, #0x0
 420:	stp	x6, x9, [sp, #144]
 424:	add	x28, x19, #0x3e0
 428:	mov	x23, #0x1f                  	// #31
 42c:	stp	x5, x8, [sp, #160]
 430:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 434:	mov	x2, x21
 438:	ldr	x0, [sp, #104]
 43c:	add	x22, x19, #0x4c0
 440:	mov	x1, x0
 444:	mov	x0, x24
 448:	bl	0 <__cxa_atexit>
 44c:	adrp	x6, 0 <_GLOBAL__sub_I_Main.cpp>
 450:	adrp	x5, 0 <_GLOBAL__sub_I_Main.cpp>
 454:	add	x6, x6, #0x0
 458:	add	x5, x5, #0x0
 45c:	mov	x4, x27
 460:	mov	x3, x20
 464:	mov	x8, #0xa                   	// #10
 468:	mov	w7, #0x2                   	// #2
 46c:	mov	x2, x26
 470:	mov	x0, x28
 474:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 478:	add	x1, x1, #0x0
 47c:	str	w7, [sp, #140]
 480:	stp	x6, x23, [sp, #144]
 484:	stp	x5, x8, [sp, #160]
 488:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 48c:	mov	x2, x21
 490:	mov	x1, x28
 494:	mov	x0, x24
 498:	bl	0 <__cxa_atexit>
 49c:	stp	xzr, xzr, [x22, #24]
 4a0:	adrp	x3, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
 4a4:	adrp	x5, 0 <_GLOBAL__sub_I_Main.cpp>
 4a8:	adrp	x4, 0 <_ZTVN4llvm2cl6parserIbEE>
 4ac:	ldr	x3, [x3]
 4b0:	adrp	x6, 0 <_GLOBAL__sub_I_Main.cpp>
 4b4:	ldr	x5, [x5]
 4b8:	adrp	x7, 0 <_GLOBAL__sub_I_Main.cpp>
 4bc:	ldr	x4, [x4]
 4c0:	add	x13, x19, #0x510
 4c4:	ldr	x8, [x22, #8]
 4c8:	add	x10, x19, #0x540
 4cc:	ldr	x6, [x6]
 4d0:	mov	x2, #0x10                  	// #16
 4d4:	ldr	x7, [x7]
 4d8:	add	x3, x3, x2
 4dc:	add	x5, x5, x2
 4e0:	add	x4, x4, x2
 4e4:	and	x8, x8, #0x80000000
 4e8:	mov	x9, #0x1                   	// #1
 4ec:	mov	w12, #0x1                   	// #1
 4f0:	mov	w11, #0x100                 	// #256
 4f4:	stp	x8, xzr, [x22, #8]
 4f8:	mov	x0, x22
 4fc:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 500:	stp	xzr, xzr, [x22, #40]
 504:	add	x1, x1, #0x0
 508:	stp	xzr, x13, [x22, #56]
 50c:	stp	w9, w12, [x22, #72]
 510:	stp	x25, xzr, [x22, #80]
 514:	stp	x10, x10, [x22, #96]
 518:	str	x9, [x22, #112]
 51c:	str	wzr, [x22, #120]
 520:	strb	wzr, [x22, #136]
 524:	str	x5, [x22, #144]
 528:	strh	w11, [x22, #152]
 52c:	str	x4, [x22, #160]
 530:	stp	x7, x6, [x22, #184]
 534:	str	x3, [x19, #1216]
 538:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 53c:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 540:	add	x1, x1, #0x0
 544:	stp	x1, x23, [x22, #32]
 548:	mov	x0, x22
 54c:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 550:	mov	x1, x22
 554:	mov	x2, x21
 558:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 55c:	add	x0, x0, #0x0
 560:	bl	0 <__cxa_atexit>
 564:	ldp	x19, x20, [sp, #16]
 568:	ldp	x21, x22, [sp, #32]
 56c:	ldp	x23, x24, [sp, #48]
 570:	ldp	x25, x26, [sp, #64]
 574:	ldp	x27, x28, [sp, #80]
 578:	ldp	x29, x30, [sp], #192
 57c:	ret

Record.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm5RecTy7typeIsAEPKS0_>:
       0:	cmp	x1, x0
       4:	cset	w0, eq  // eq = none
       8:	ret
       c:	nop

0000000000000010 <_ZNK4llvm8IntRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
      10:	ldr	w0, [x1, #8]
      14:	cmp	w0, #0x1
      18:	ccmp	w0, #0x3, #0x4, hi  // hi = pmore
      1c:	cset	w0, eq  // eq = none
      20:	ret
      24:	nop

0000000000000028 <_ZNK4llvm9CodeRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
      28:	ldr	w0, [x1, #8]
      2c:	sub	w0, w0, #0x2
      30:	tst	w0, #0xfffffffd
      34:	cset	w0, eq  // eq = none
      38:	ret
      3c:	nop

0000000000000040 <_ZNK4llvm11StringRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
      40:	ldr	w0, [x1, #8]
      44:	sub	w0, w0, #0x2
      48:	tst	w0, #0xfffffffd
      4c:	cset	w0, eq  // eq = none
      50:	ret
      54:	nop

0000000000000058 <_ZN4llvm4Init6anchorEv>:
      58:	ret
      5c:	nop

0000000000000060 <_ZNK4llvm9UnsetInit20convertInitializerToEPNS_5RecTyE>:
      60:	ret
      64:	nop

0000000000000068 <_ZNK4llvm8ListInit10isConcreteEv>:
      68:	stp	x29, x30, [sp, #-32]!
      6c:	mov	x1, #0x28                  	// #40
      70:	mov	x29, sp
      74:	stp	x19, x20, [sp, #16]
      78:	add	x19, x0, x1
      7c:	ldr	w20, [x0, #32]
      80:	add	x20, x1, w20, uxtw #3
      84:	add	x20, x0, x20
      88:	b	a8 <_ZNK4llvm8ListInit10isConcreteEv+0x40>
      8c:	ldr	x0, [x19]
      90:	add	x19, x19, #0x8
      94:	ldr	x1, [x0]
      98:	ldr	x1, [x1, #32]
      9c:	blr	x1
      a0:	ands	w0, w0, #0xff
      a4:	b.eq	b4 <_ZNK4llvm8ListInit10isConcreteEv+0x4c>  // b.none
      a8:	cmp	x20, x19
      ac:	b.ne	8c <_ZNK4llvm8ListInit10isConcreteEv+0x24>  // b.any
      b0:	mov	w0, #0x1                   	// #1
      b4:	ldp	x19, x20, [sp, #16]
      b8:	ldp	x29, x30, [sp], #32
      bc:	ret

00000000000000c0 <_ZNK4llvm7VarInit17resolveReferencesERNS_8ResolverE>:
      c0:	stp	x29, x30, [sp, #-32]!
      c4:	mov	x29, sp
      c8:	ldr	x2, [x1]
      cc:	ldr	x2, [x2, #16]
      d0:	str	x19, [sp, #16]
      d4:	mov	x19, x0
      d8:	mov	x0, x1
      dc:	ldr	x1, [x19, #24]
      e0:	blr	x2
      e4:	cmp	x0, #0x0
      e8:	csel	x0, x0, x19, ne  // ne = any
      ec:	ldr	x19, [sp, #16]
      f0:	ldp	x29, x30, [sp], #32
      f4:	ret

00000000000000f8 <_ZNK4llvm10VarBitInit17resolveReferencesERNS_8ResolverE>:
      f8:	stp	x29, x30, [sp, #-32]!
      fc:	mov	x29, sp
     100:	str	x19, [sp, #16]
     104:	mov	x19, x0
     108:	ldr	x0, [x0, #24]
     10c:	ldr	x2, [x0]
     110:	ldr	x2, [x2, #96]
     114:	blr	x2
     118:	ldr	x2, [x19, #24]
     11c:	cmp	x2, x0
     120:	b.eq	140 <_ZNK4llvm10VarBitInit17resolveReferencesERNS_8ResolverE+0x48>  // b.none
     124:	ldr	x2, [x0]
     128:	ldr	w1, [x19, #32]
     12c:	ldr	x19, [sp, #16]
     130:	ldp	x29, x30, [sp], #32
     134:	ldr	x2, [x2, #104]
     138:	mov	x16, x2
     13c:	br	x16
     140:	mov	x0, x19
     144:	ldr	x19, [sp, #16]
     148:	ldp	x29, x30, [sp], #32
     14c:	ret

0000000000000150 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE>:
     150:	ldr	x2, [x0, #24]
     154:	mov	w4, #0x18                  	// #24
     158:	ldr	w3, [x2, #80]
     15c:	ldr	x0, [x2, #72]
     160:	umaddl	x3, w3, w4, x0
     164:	cmp	x0, x3
     168:	b.ne	17c <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x2c>  // b.any
     16c:	b	194 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x44>
     170:	add	x0, x0, #0x18
     174:	cmp	x3, x0
     178:	b.eq	194 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x44>  // b.none
     17c:	ldr	x2, [x0]
     180:	cmp	x1, x2
     184:	b.ne	170 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x20>  // b.any
     188:	ldr	x0, [x0, #8]
     18c:	and	x0, x0, #0xfffffffffffffff8
     190:	ret
     194:	mov	x0, #0x0                   	// #0
     198:	ret
     19c:	nop

00000000000001a0 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE>:
     1a0:	stp	x29, x30, [sp, #-80]!
     1a4:	mov	x29, sp
     1a8:	stp	x19, x20, [sp, #16]
     1ac:	mov	x19, x0
     1b0:	ldr	x0, [x0, #24]
     1b4:	cbz	x0, 220 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x80>
     1b8:	ldr	x2, [x0]
     1bc:	ldr	x2, [x2, #16]
     1c0:	blr	x2
     1c4:	mov	x20, x0
     1c8:	cbz	x0, 220 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x80>
     1cc:	ldrb	w1, [x19, #32]
     1d0:	cbnz	w1, 22c <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x8c>
     1d4:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     1d8:	add	x1, sp, #0x28
     1dc:	ldr	x3, [x0]
     1e0:	strb	wzr, [sp, #56]
     1e4:	ldr	x2, [x2]
     1e8:	str	xzr, [sp, #64]
     1ec:	ldr	x3, [x3, #96]
     1f0:	add	x2, x2, #0x10
     1f4:	stp	x2, xzr, [sp, #40]
     1f8:	strb	wzr, [sp, #72]
     1fc:	blr	x3
     200:	ldrb	w0, [x19, #32]
     204:	ldrb	w1, [sp, #72]
     208:	orr	w0, w0, w1
     20c:	strb	w0, [x19, #32]
     210:	mov	x0, x20
     214:	ldp	x19, x20, [sp, #16]
     218:	ldp	x29, x30, [sp], #80
     21c:	ret
     220:	mov	w0, #0x1                   	// #1
     224:	mov	x20, #0x0                   	// #0
     228:	strb	w0, [x19, #32]
     22c:	mov	x0, x20
     230:	ldp	x19, x20, [sp, #16]
     234:	ldp	x29, x30, [sp], #80
     238:	ret
     23c:	nop

0000000000000240 <_ZN4llvm20HasReferenceResolver7resolveEPNS_4InitE>:
     240:	ldr	x2, [x0, #24]
     244:	cmp	x2, x1
     248:	b.eq	254 <_ZN4llvm20HasReferenceResolver7resolveEPNS_4InitE+0x14>  // b.none
     24c:	mov	x0, #0x0                   	// #0
     250:	ret
     254:	mov	w1, #0x1                   	// #1
     258:	strb	w1, [x0, #32]
     25c:	mov	x0, #0x0                   	// #0
     260:	ret
     264:	nop

0000000000000268 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>:
     268:	stp	x29, x30, [sp, #-64]!
     26c:	mov	x29, sp
     270:	stp	x19, x20, [sp, #16]
     274:	mov	x20, x3
     278:	mov	x19, x5
     27c:	stp	x21, x22, [sp, #32]
     280:	mov	x22, x6
     284:	mov	x21, x0
     288:	stp	x23, x24, [sp, #48]
     28c:	mov	x24, x2
     290:	add	x23, x3, x4, lsl #3
     294:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     298:	add	x22, x19, x22, lsl #3
     29c:	mov	x1, x24
     2a0:	mov	x0, x21
     2a4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     2a8:	cmp	x20, x23
     2ac:	b.eq	2d8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x70>  // b.none
     2b0:	cmp	x19, x22
     2b4:	b.eq	2f4 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x8c>  // b.none
     2b8:	ldr	x1, [x20], #8
     2bc:	mov	x0, x21
     2c0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     2c4:	ldr	x1, [x19], #8
     2c8:	mov	x0, x21
     2cc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     2d0:	cmp	x20, x23
     2d4:	b.ne	2b0 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x48>  // b.any
     2d8:	cmp	x22, x19
     2dc:	b.ne	314 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0xac>  // b.any
     2e0:	ldp	x19, x20, [sp, #16]
     2e4:	ldp	x21, x22, [sp, #32]
     2e8:	ldp	x23, x24, [sp, #48]
     2ec:	ldp	x29, x30, [sp], #64
     2f0:	ret
     2f4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     2f8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     2fc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     300:	add	x3, x3, #0x0
     304:	add	x1, x1, #0x0
     308:	add	x0, x0, #0x0
     30c:	mov	w2, #0x782                 	// #1922
     310:	bl	0 <__assert_fail>
     314:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     318:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     31c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     320:	add	x3, x3, #0x0
     324:	add	x1, x1, #0x0
     328:	add	x0, x0, #0x0
     32c:	mov	w2, #0x786                 	// #1926
     330:	bl	0 <__assert_fail>
     334:	nop

0000000000000338 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_>:
     338:	cbz	x1, 350 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_+0x18>
     33c:	ldr	w2, [x0, #8]
     340:	ldr	w0, [x1, #8]
     344:	cmp	w2, w0
     348:	cset	w0, eq  // eq = none
     34c:	ret
     350:	stp	x29, x30, [sp, #-16]!
     354:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     358:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     35c:	mov	x29, sp
     360:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     364:	add	x3, x3, #0x0
     368:	add	x1, x1, #0x0
     36c:	add	x0, x0, #0x0
     370:	mov	w2, #0x46                  	// #70
     374:	bl	0 <__assert_fail>

0000000000000378 <_ZL17ProfileCondOpInitRN4llvm16FoldingSetNodeIDENS_8ArrayRefIPNS_4InitEEES5_PKNS_5RecTyE.part.0>:
     378:	stp	x29, x30, [sp, #-16]!
     37c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     380:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     384:	mov	x29, sp
     388:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     38c:	add	x3, x3, #0x0
     390:	add	x1, x1, #0x0
     394:	add	x0, x0, #0x0
     398:	mov	w2, #0x6fa                 	// #1786
     39c:	bl	0 <__assert_fail>

00000000000003a0 <_ZNK4llvm10CondOpInit10isCompleteEv>:
     3a0:	stp	x29, x30, [sp, #-48]!
     3a4:	mov	x29, sp
     3a8:	stp	x19, x20, [sp, #16]
     3ac:	add	x19, x0, #0x30
     3b0:	mov	x20, x0
     3b4:	ldr	w0, [x0, #32]
     3b8:	str	x21, [sp, #32]
     3bc:	lsl	x0, x0, #3
     3c0:	add	x21, x19, x0
     3c4:	cmp	x21, x19
     3c8:	b.ne	3d8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x38>  // b.any
     3cc:	b	410 <_ZNK4llvm10CondOpInit10isCompleteEv+0x70>
     3d0:	cmp	x21, x19
     3d4:	b.eq	408 <_ZNK4llvm10CondOpInit10isCompleteEv+0x68>  // b.none
     3d8:	ldr	x0, [x19]
     3dc:	add	x19, x19, #0x8
     3e0:	ldr	x1, [x0]
     3e4:	ldr	x1, [x1, #24]
     3e8:	blr	x1
     3ec:	tst	w0, #0xff
     3f0:	b.ne	3d0 <_ZNK4llvm10CondOpInit10isCompleteEv+0x30>  // b.any
     3f4:	mov	w0, #0x0                   	// #0
     3f8:	ldp	x19, x20, [sp, #16]
     3fc:	ldr	x21, [sp, #32]
     400:	ldp	x29, x30, [sp], #48
     404:	ret
     408:	ldr	w0, [x20, #32]
     40c:	lsl	x0, x0, #3
     410:	add	x19, x0, #0x30
     414:	add	x19, x20, x19
     418:	add	x20, x19, x0
     41c:	cmp	x19, x20
     420:	b.ne	440 <_ZNK4llvm10CondOpInit10isCompleteEv+0xa0>  // b.any
     424:	mov	w0, #0x1                   	// #1
     428:	ldp	x19, x20, [sp, #16]
     42c:	ldr	x21, [sp, #32]
     430:	ldp	x29, x30, [sp], #48
     434:	ret
     438:	cmp	x20, x19
     43c:	b.eq	424 <_ZNK4llvm10CondOpInit10isCompleteEv+0x84>  // b.none
     440:	ldr	x0, [x19]
     444:	add	x19, x19, #0x8
     448:	ldr	x1, [x0]
     44c:	ldr	x1, [x1, #32]
     450:	blr	x1
     454:	tst	w0, #0xff
     458:	b.ne	438 <_ZNK4llvm10CondOpInit10isCompleteEv+0x98>  // b.any
     45c:	b	3f4 <_ZNK4llvm10CondOpInit10isCompleteEv+0x54>

0000000000000460 <_ZNK4llvm7DagInit10isConcreteEv>:
     460:	stp	x29, x30, [sp, #-48]!
     464:	mov	x29, sp
     468:	stp	x19, x20, [sp, #16]
     46c:	mov	x19, x0
     470:	ldr	x0, [x0, #32]
     474:	ldr	x1, [x0]
     478:	ldr	x1, [x1, #32]
     47c:	str	x21, [sp, #32]
     480:	blr	x1
     484:	ands	w21, w0, #0xff
     488:	b.eq	4cc <_ZNK4llvm7DagInit10isConcreteEv+0x6c>  // b.none
     48c:	ldr	w20, [x19, #48]
     490:	add	x0, x19, #0x38
     494:	mov	x19, x0
     498:	add	x20, x0, x20, lsl #3
     49c:	cmp	x0, x20
     4a0:	b.ne	4b0 <_ZNK4llvm7DagInit10isConcreteEv+0x50>  // b.any
     4a4:	b	4d0 <_ZNK4llvm7DagInit10isConcreteEv+0x70>
     4a8:	cmp	x20, x19
     4ac:	b.eq	4d0 <_ZNK4llvm7DagInit10isConcreteEv+0x70>  // b.none
     4b0:	ldr	x0, [x19]
     4b4:	add	x19, x19, #0x8
     4b8:	ldr	x1, [x0]
     4bc:	ldr	x1, [x1, #32]
     4c0:	blr	x1
     4c4:	tst	w0, #0xff
     4c8:	b.ne	4a8 <_ZNK4llvm7DagInit10isConcreteEv+0x48>  // b.any
     4cc:	mov	w21, #0x0                   	// #0
     4d0:	mov	w0, w21
     4d4:	ldp	x19, x20, [sp, #16]
     4d8:	ldr	x21, [sp, #32]
     4dc:	ldp	x29, x30, [sp], #48
     4e0:	ret
     4e4:	nop

00000000000004e8 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>:
     4e8:	stp	x29, x30, [sp, #-16]!
     4ec:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     4f0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     4f4:	mov	x29, sp
     4f8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     4fc:	add	x3, x3, #0x0
     500:	add	x1, x1, #0x0
     504:	add	x0, x0, #0x0
     508:	mov	w2, #0x69                  	// #105
     50c:	bl	0 <__assert_fail>

0000000000000510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>:
     510:	stp	x29, x30, [sp, #-16]!
     514:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     518:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     51c:	mov	x29, sp
     520:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     524:	add	x3, x3, #0x0
     528:	add	x1, x1, #0x0
     52c:	add	x0, x0, #0x0
     530:	mov	w2, #0x69                  	// #105
     534:	bl	0 <__assert_fail>

0000000000000538 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE>:
     538:	cbz	x1, 568 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE+0x30>
     53c:	ldr	w2, [x1, #8]
     540:	cmp	w2, #0x5
     544:	b.eq	550 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE+0x18>  // b.none
     548:	mov	w0, #0x0                   	// #0
     54c:	ret
     550:	ldr	x0, [x0, #24]
     554:	ldr	x1, [x1, #24]
     558:	ldr	x2, [x0]
     55c:	ldr	x2, [x2, #32]
     560:	mov	x16, x2
     564:	br	x16
     568:	stp	x29, x30, [sp, #-16]!
     56c:	mov	x29, sp
     570:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
     574:	nop

0000000000000578 <_ZN4llvm3isaINS_9UnsetInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     578:	stp	x29, x30, [sp, #-16]!
     57c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     580:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     584:	mov	x29, sp
     588:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     58c:	add	x3, x3, #0x0
     590:	add	x1, x1, #0x0
     594:	add	x0, x0, #0x0
     598:	mov	w2, #0x69                  	// #105
     59c:	bl	0 <__assert_fail>

00000000000005a0 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     5a0:	stp	x29, x30, [sp, #-32]!
     5a4:	mov	x29, sp
     5a8:	str	x19, [sp, #16]
     5ac:	mov	x19, x1
     5b0:	bl	338 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_>
     5b4:	ands	w0, w0, #0xff
     5b8:	b.ne	5d0 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x30>  // b.any
     5bc:	ldr	w1, [x19, #8]
     5c0:	cmp	w1, #0x3
     5c4:	b.eq	5dc <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>  // b.none
     5c8:	cmp	w1, #0x1
     5cc:	b.eq	5ec <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x4c>  // b.none
     5d0:	ldr	x19, [sp, #16]
     5d4:	ldp	x29, x30, [sp], #32
     5d8:	ret
     5dc:	mov	w0, #0x1                   	// #1
     5e0:	ldr	x19, [sp, #16]
     5e4:	ldp	x29, x30, [sp], #32
     5e8:	ret
     5ec:	ldr	w0, [x19, #24]
     5f0:	ldr	x19, [sp, #16]
     5f4:	cmp	w0, #0x1
     5f8:	cset	w0, eq  // eq = none
     5fc:	ldp	x29, x30, [sp], #32
     600:	ret
     604:	nop

0000000000000608 <_ZN4llvm3isaINS_8BitRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
     608:	stp	x29, x30, [sp, #-16]!
     60c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     610:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     614:	mov	x29, sp
     618:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     61c:	add	x3, x3, #0x0
     620:	add	x1, x1, #0x0
     624:	add	x0, x0, #0x0
     628:	mov	w2, #0x69                  	// #105
     62c:	bl	0 <__assert_fail>

0000000000000630 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
     630:	stp	x29, x30, [sp, #-16]!
     634:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     638:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     63c:	mov	x29, sp
     640:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     644:	add	x3, x3, #0x0
     648:	add	x1, x1, #0x0
     64c:	add	x0, x0, #0x0
     650:	mov	w2, #0x69                  	// #105
     654:	bl	0 <__assert_fail>

0000000000000658 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>:
     658:	stp	x29, x30, [sp, #-16]!
     65c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     660:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     664:	mov	x29, sp
     668:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     66c:	add	x3, x3, #0x0
     670:	add	x1, x1, #0x0
     674:	add	x0, x0, #0x0
     678:	mov	w2, #0x69                  	// #105
     67c:	bl	0 <__assert_fail>

0000000000000680 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     680:	stp	x29, x30, [sp, #-16]!
     684:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     688:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     68c:	mov	x29, sp
     690:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     694:	add	x3, x3, #0x0
     698:	add	x1, x1, #0x0
     69c:	add	x0, x0, #0x0
     6a0:	mov	w2, #0x69                  	// #105
     6a4:	bl	0 <__assert_fail>

00000000000006a8 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     6a8:	stp	x29, x30, [sp, #-16]!
     6ac:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     6b0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     6b4:	mov	x29, sp
     6b8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     6bc:	add	x3, x3, #0x0
     6c0:	add	x1, x1, #0x0
     6c4:	add	x0, x0, #0x0
     6c8:	mov	w2, #0x69                  	// #105
     6cc:	bl	0 <__assert_fail>

00000000000006d0 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     6d0:	stp	x29, x30, [sp, #-16]!
     6d4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     6d8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     6dc:	mov	x29, sp
     6e0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     6e4:	add	x3, x3, #0x0
     6e8:	add	x1, x1, #0x0
     6ec:	add	x0, x0, #0x0
     6f0:	mov	w2, #0x69                  	// #105
     6f4:	bl	0 <__assert_fail>

00000000000006f8 <_ZN4llvm3isaINS_7BitInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     6f8:	stp	x29, x30, [sp, #-16]!
     6fc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     700:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     704:	mov	x29, sp
     708:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     70c:	add	x3, x3, #0x0
     710:	add	x1, x1, #0x0
     714:	add	x0, x0, #0x0
     718:	mov	w2, #0x69                  	// #105
     71c:	bl	0 <__assert_fail>

0000000000000720 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     720:	stp	x29, x30, [sp, #-16]!
     724:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     728:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     72c:	mov	x29, sp
     730:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     734:	add	x3, x3, #0x0
     738:	add	x1, x1, #0x0
     73c:	add	x0, x0, #0x0
     740:	mov	w2, #0x69                  	// #105
     744:	bl	0 <__assert_fail>

0000000000000748 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     748:	stp	x29, x30, [sp, #-16]!
     74c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     750:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     754:	mov	x29, sp
     758:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     75c:	add	x3, x3, #0x0
     760:	add	x1, x1, #0x0
     764:	add	x0, x0, #0x0
     768:	mov	w2, #0x69                  	// #105
     76c:	bl	0 <__assert_fail>

0000000000000770 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     770:	stp	x29, x30, [sp, #-16]!
     774:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     778:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     77c:	mov	x29, sp
     780:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     784:	add	x3, x3, #0x0
     788:	add	x1, x1, #0x0
     78c:	add	x0, x0, #0x0
     790:	mov	w2, #0x69                  	// #105
     794:	bl	0 <__assert_fail>

0000000000000798 <_ZN4llvm3isaINS_8ListInitEPNS_9TypedInitEEEbRKT0_.isra.0.part.0>:
     798:	stp	x29, x30, [sp, #-16]!
     79c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7a4:	mov	x29, sp
     7a8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7ac:	add	x3, x3, #0x0
     7b0:	add	x1, x1, #0x0
     7b4:	add	x0, x0, #0x0
     7b8:	mov	w2, #0x69                  	// #105
     7bc:	bl	0 <__assert_fail>

00000000000007c0 <_ZN4llvm3isaINS_7VarInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     7c0:	stp	x29, x30, [sp, #-16]!
     7c4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7cc:	mov	x29, sp
     7d0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7d4:	add	x3, x3, #0x0
     7d8:	add	x1, x1, #0x0
     7dc:	add	x0, x0, #0x0
     7e0:	mov	w2, #0x69                  	// #105
     7e4:	bl	0 <__assert_fail>

00000000000007e8 <_ZN4llvm3isaINS_8CodeInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     7e8:	stp	x29, x30, [sp, #-16]!
     7ec:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7f0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7f4:	mov	x29, sp
     7f8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     7fc:	add	x3, x3, #0x0
     800:	add	x1, x1, #0x0
     804:	add	x0, x0, #0x0
     808:	mov	w2, #0x69                  	// #105
     80c:	bl	0 <__assert_fail>

0000000000000810 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     810:	cbz	x1, 840 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x30>
     814:	ldr	w2, [x1, #8]
     818:	cmp	w2, #0x5
     81c:	b.eq	828 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x18>  // b.none
     820:	mov	w0, #0x0                   	// #0
     824:	ret
     828:	ldr	x0, [x0, #24]
     82c:	ldr	x1, [x1, #24]
     830:	ldr	x2, [x0]
     834:	ldr	x2, [x2, #24]
     838:	mov	x16, x2
     83c:	br	x16
     840:	stp	x29, x30, [sp, #-16]!
     844:	mov	x29, sp
     848:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
     84c:	nop

0000000000000850 <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE>:
     850:	cbz	x1, 87c <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE+0x2c>
     854:	ldr	w3, [x1, #8]
     858:	mov	w2, #0x0                   	// #0
     85c:	cmp	w3, #0x1
     860:	b.ne	874 <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE+0x24>  // b.any
     864:	ldr	w0, [x0, #24]
     868:	ldr	w1, [x1, #24]
     86c:	cmp	w1, w0
     870:	cset	w2, eq  // eq = none
     874:	mov	w0, w2
     878:	ret
     87c:	stp	x29, x30, [sp, #-16]!
     880:	mov	x29, sp
     884:	bl	4e8 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

0000000000000888 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     888:	stp	x29, x30, [sp, #-32]!
     88c:	mov	x29, sp
     890:	stp	x19, x20, [sp, #16]
     894:	mov	x20, x0
     898:	mov	x19, x1
     89c:	bl	338 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_>
     8a0:	tst	w0, #0xff
     8a4:	b.ne	8dc <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x54>  // b.any
     8a8:	ldr	w0, [x19, #8]
     8ac:	cbz	w0, 8c4 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>
     8b0:	cmp	w0, #0x3
     8b4:	cset	w0, eq  // eq = none
     8b8:	ldp	x19, x20, [sp, #16]
     8bc:	ldp	x29, x30, [sp], #32
     8c0:	ret
     8c4:	ldr	w0, [x20, #24]
     8c8:	ldp	x19, x20, [sp, #16]
     8cc:	cmp	w0, #0x1
     8d0:	cset	w0, eq  // eq = none
     8d4:	ldp	x29, x30, [sp], #32
     8d8:	ret
     8dc:	cbz	x19, 908 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x80>
     8e0:	ldr	w0, [x19, #8]
     8e4:	cmp	w0, #0x1
     8e8:	b.ne	90c <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x84>  // b.any
     8ec:	ldr	w0, [x20, #24]
     8f0:	ldr	w1, [x19, #24]
     8f4:	ldp	x19, x20, [sp, #16]
     8f8:	cmp	w1, w0
     8fc:	cset	w0, eq  // eq = none
     900:	ldp	x29, x30, [sp], #32
     904:	ret
     908:	bl	4e8 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
     90c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     910:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     914:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     918:	add	x3, x3, #0x0
     91c:	add	x1, x1, #0x0
     920:	add	x0, x0, #0x0
     924:	mov	w2, #0x108                 	// #264
     928:	bl	0 <__assert_fail>
     92c:	nop

0000000000000930 <_ZNK4llvm8BitsInit10isConcreteEv>:
     930:	stp	x29, x30, [sp, #-48]!
     934:	mov	x29, sp
     938:	stp	x21, x22, [sp, #32]
     93c:	ldr	w21, [x0, #32]
     940:	cbz	w21, 9a0 <_ZNK4llvm8BitsInit10isConcreteEv+0x70>
     944:	mov	w1, w21
     948:	add	x22, x0, #0x28
     94c:	stp	x19, x20, [sp, #16]
     950:	mov	x20, x0
     954:	mov	x19, #0x0                   	// #0
     958:	b	96c <_ZNK4llvm8BitsInit10isConcreteEv+0x3c>
     95c:	add	x19, x19, #0x1
     960:	cmp	w21, w19
     964:	b.eq	99c <_ZNK4llvm8BitsInit10isConcreteEv+0x6c>  // b.none
     968:	ldr	w1, [x20, #32]
     96c:	cmp	w1, w19
     970:	b.ls	9b0 <_ZNK4llvm8BitsInit10isConcreteEv+0x80>  // b.plast
     974:	ldr	x0, [x22, x19, lsl #3]
     978:	ldr	x1, [x0]
     97c:	ldr	x1, [x1, #32]
     980:	blr	x1
     984:	ands	w0, w0, #0xff
     988:	b.ne	95c <_ZNK4llvm8BitsInit10isConcreteEv+0x2c>  // b.any
     98c:	ldp	x19, x20, [sp, #16]
     990:	ldp	x21, x22, [sp, #32]
     994:	ldp	x29, x30, [sp], #48
     998:	ret
     99c:	ldp	x19, x20, [sp, #16]
     9a0:	mov	w0, #0x1                   	// #1
     9a4:	ldp	x21, x22, [sp, #32]
     9a8:	ldp	x29, x30, [sp], #48
     9ac:	ret
     9b0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     9b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     9b8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     9bc:	add	x3, x3, #0x0
     9c0:	add	x1, x1, #0x0
     9c4:	add	x0, x0, #0x0
     9c8:	mov	w2, #0x22e                 	// #558
     9cc:	bl	0 <__assert_fail>

00000000000009d0 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE>:
     9d0:	stp	x29, x30, [sp, #-32]!
     9d4:	mov	x29, sp
     9d8:	str	x19, [sp, #16]
     9dc:	cbz	x1, a28 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x58>
     9e0:	mov	x19, x0
     9e4:	ldr	w0, [x1, #8]
     9e8:	cmp	w0, #0x7
     9ec:	b.eq	a00 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x30>  // b.none
     9f0:	mov	x0, #0x0                   	// #0
     9f4:	ldr	x19, [sp, #16]
     9f8:	ldp	x29, x30, [sp], #32
     9fc:	ret
     a00:	ldr	x0, [x19, #16]
     a04:	ldr	x2, [x0]
     a08:	ldr	x2, [x2, #24]
     a0c:	blr	x2
     a10:	tst	w0, #0xff
     a14:	b.eq	9f0 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x20>  // b.none
     a18:	mov	x0, x19
     a1c:	ldr	x19, [sp, #16]
     a20:	ldp	x29, x30, [sp], #32
     a24:	ret
     a28:	bl	658 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
     a2c:	nop

0000000000000a30 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE>:
     a30:	ldr	x2, [x0, #16]
     a34:	cbz	x2, abc <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x8c>
     a38:	ldr	w3, [x2, #8]
     a3c:	mov	x0, #0x0                   	// #0
     a40:	cmp	w3, #0x7
     a44:	b.eq	a4c <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x1c>  // b.none
     a48:	ret
     a4c:	ldr	w5, [x2, #32]
     a50:	add	x4, x2, #0x28
     a54:	add	x5, x4, x5, lsl #3
     a58:	cmp	x5, x4
     a5c:	b.eq	a48 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x18>  // b.none
     a60:	mov	w6, #0x18                  	// #24
     a64:	nop
     a68:	ldr	x2, [x4]
     a6c:	ldr	w3, [x2, #80]
     a70:	ldr	x0, [x2, #72]
     a74:	umaddl	x3, w3, w6, x0
     a78:	cmp	x0, x3
     a7c:	b.ne	a90 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x60>  // b.any
     a80:	b	aa8 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>
     a84:	add	x0, x0, #0x18
     a88:	cmp	x3, x0
     a8c:	b.eq	aa8 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>  // b.none
     a90:	ldr	x2, [x0]
     a94:	cmp	x1, x2
     a98:	b.ne	a84 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x54>  // b.any
     a9c:	ldr	x0, [x0, #8]
     aa0:	and	x0, x0, #0xfffffffffffffff8
     aa4:	ret
     aa8:	add	x4, x4, #0x8
     aac:	cmp	x5, x4
     ab0:	b.ne	a68 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x38>  // b.any
     ab4:	mov	x0, #0x0                   	// #0
     ab8:	ret
     abc:	stp	x29, x30, [sp, #-16]!
     ac0:	mov	x29, sp
     ac4:	bl	658 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

0000000000000ac8 <_ZNK4llvm10CondOpInit10isConcreteEv>:
     ac8:	stp	x29, x30, [sp, #-48]!
     acc:	mov	x29, sp
     ad0:	stp	x19, x20, [sp, #16]
     ad4:	add	x19, x0, #0x30
     ad8:	mov	x20, x0
     adc:	ldr	w0, [x0, #32]
     ae0:	str	x21, [sp, #32]
     ae4:	lsl	x0, x0, #3
     ae8:	add	x21, x19, x0
     aec:	cmp	x21, x19
     af0:	b.ne	b00 <_ZNK4llvm10CondOpInit10isConcreteEv+0x38>  // b.any
     af4:	b	b38 <_ZNK4llvm10CondOpInit10isConcreteEv+0x70>
     af8:	cmp	x21, x19
     afc:	b.eq	b30 <_ZNK4llvm10CondOpInit10isConcreteEv+0x68>  // b.none
     b00:	ldr	x0, [x19]
     b04:	add	x19, x19, #0x8
     b08:	ldr	x1, [x0]
     b0c:	ldr	x1, [x1, #32]
     b10:	blr	x1
     b14:	tst	w0, #0xff
     b18:	b.ne	af8 <_ZNK4llvm10CondOpInit10isConcreteEv+0x30>  // b.any
     b1c:	mov	w0, #0x0                   	// #0
     b20:	ldp	x19, x20, [sp, #16]
     b24:	ldr	x21, [sp, #32]
     b28:	ldp	x29, x30, [sp], #48
     b2c:	ret
     b30:	ldr	w0, [x20, #32]
     b34:	lsl	x0, x0, #3
     b38:	add	x19, x0, #0x30
     b3c:	add	x19, x20, x19
     b40:	add	x20, x19, x0
     b44:	cmp	x19, x20
     b48:	b.ne	b68 <_ZNK4llvm10CondOpInit10isConcreteEv+0xa0>  // b.any
     b4c:	mov	w0, #0x1                   	// #1
     b50:	ldp	x19, x20, [sp, #16]
     b54:	ldr	x21, [sp, #32]
     b58:	ldp	x29, x30, [sp], #48
     b5c:	ret
     b60:	cmp	x20, x19
     b64:	b.eq	b4c <_ZNK4llvm10CondOpInit10isConcreteEv+0x84>  // b.none
     b68:	ldr	x0, [x19]
     b6c:	add	x19, x19, #0x8
     b70:	ldr	x1, [x0]
     b74:	ldr	x1, [x1, #32]
     b78:	blr	x1
     b7c:	tst	w0, #0xff
     b80:	b.ne	b60 <_ZNK4llvm10CondOpInit10isConcreteEv+0x98>  // b.any
     b84:	b	b1c <_ZNK4llvm10CondOpInit10isConcreteEv+0x54>

0000000000000b88 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0>:
     b88:	stp	x29, x30, [sp, #-128]!
     b8c:	mov	x29, sp
     b90:	ldr	x0, [x0]
     b94:	stp	x19, x20, [sp, #16]
     b98:	mov	x19, x1
     b9c:	stp	x21, x22, [sp, #32]
     ba0:	add	x21, sp, #0x60
     ba4:	mov	x8, x21
     ba8:	ldr	x1, [x0]
     bac:	stp	x23, x24, [sp, #48]
     bb0:	add	x22, sp, #0x40
     bb4:	ldr	x1, [x1, #48]
     bb8:	blr	x1
     bbc:	ldr	x0, [x19]
     bc0:	mov	x8, x22
     bc4:	ldr	x1, [x0]
     bc8:	ldr	x1, [x1, #48]
     bcc:	blr	x1
     bd0:	ldp	x24, x20, [sp, #64]
     bd4:	ldp	x23, x19, [sp, #96]
     bd8:	cmp	x19, x20
     bdc:	csel	x2, x19, x20, ls  // ls = plast
     be0:	cbz	x2, bf4 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x6c>
     be4:	mov	x1, x24
     be8:	mov	x0, x23
     bec:	bl	0 <memcmp>
     bf0:	cbnz	w0, c5c <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0xd4>
     bf4:	sub	x19, x19, x20
     bf8:	mov	x0, #0x7fffffff            	// #2147483647
     bfc:	mov	w20, #0x0                   	// #0
     c00:	cmp	x19, x0
     c04:	b.gt	c18 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x90>
     c08:	mov	x0, #0xffffffff80000000    	// #-2147483648
     c0c:	cmp	x19, x0
     c10:	b.lt	c64 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0xdc>  // b.tstop
     c14:	lsr	w20, w19, #31
     c18:	add	x22, x22, #0x10
     c1c:	cmp	x24, x22
     c20:	b.eq	c30 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0xa8>  // b.none
     c24:	mov	x0, x24
     c28:	bl	0 <_ZdlPv>
     c2c:	ldr	x23, [sp, #96]
     c30:	add	x21, x21, #0x10
     c34:	cmp	x23, x21
     c38:	b.eq	c44 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0xbc>  // b.none
     c3c:	mov	x0, x23
     c40:	bl	0 <_ZdlPv>
     c44:	mov	w0, w20
     c48:	ldp	x19, x20, [sp, #16]
     c4c:	ldp	x21, x22, [sp, #32]
     c50:	ldp	x23, x24, [sp, #48]
     c54:	ldp	x29, x30, [sp], #128
     c58:	ret
     c5c:	lsr	w20, w0, #31
     c60:	b	c18 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x90>
     c64:	mov	w20, #0x1                   	// #1
     c68:	b	c18 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x90>
     c6c:	nop

0000000000000c70 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev>:
     c70:	stp	x29, x30, [sp, #-80]!
     c74:	add	x5, x8, #0x10
     c78:	mov	x29, sp
     c7c:	ldr	x2, [x0, #24]
     c80:	stp	x19, x20, [sp, #16]
     c84:	mov	x20, x8
     c88:	cmp	x2, #0x0
     c8c:	b.lt	d60 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0xf0>  // b.tstop
     c90:	b.ne	cc8 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x58>  // b.any
     c94:	mov	x0, #0x1                   	// #1
     c98:	mov	x19, x0
     c9c:	mov	w1, #0x30                  	// #48
     ca0:	str	x5, [x8]
     ca4:	str	x0, [sp, #48]
     ca8:	ldr	x5, [x20]
     cac:	strb	w1, [x20, #16]
     cb0:	str	x19, [x20, #8]
     cb4:	mov	x0, x20
     cb8:	strb	wzr, [x5, x19]
     cbc:	ldp	x19, x20, [sp, #16]
     cc0:	ldp	x29, x30, [sp], #80
     cc4:	ret
     cc8:	add	x19, sp, #0x38
     ccc:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
     cd0:	str	x21, [sp, #32]
     cd4:	add	x21, x19, #0x15
     cd8:	movk	x4, #0xcccd
     cdc:	nop
     ce0:	umulh	x3, x2, x4
     ce4:	cmp	x2, #0x9
     ce8:	lsr	x3, x3, #3
     cec:	add	x1, x3, x3, lsl #2
     cf0:	sub	x1, x2, x1, lsl #1
     cf4:	mov	x2, x3
     cf8:	add	w1, w1, #0x30
     cfc:	and	w1, w1, #0xff
     d00:	strb	w1, [x21, #-1]!
     d04:	b.hi	ce0 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x70>  // b.pmore
     d08:	add	x19, x19, #0x15
     d0c:	str	x5, [x20]
     d10:	sub	x19, x19, x21
     d14:	str	x19, [sp, #48]
     d18:	cmp	x19, #0xf
     d1c:	b.ls	e30 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x1c0>  // b.plast
     d20:	add	x1, sp, #0x30
     d24:	mov	x0, x20
     d28:	mov	x2, #0x0                   	// #0
     d2c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     d30:	mov	x5, x0
     d34:	str	x0, [x20]
     d38:	ldr	x1, [sp, #48]
     d3c:	str	x1, [x20, #16]
     d40:	mov	x2, x19
     d44:	mov	x1, x21
     d48:	mov	x0, x5
     d4c:	bl	0 <memcpy>
     d50:	ldr	x5, [x20]
     d54:	ldr	x21, [sp, #32]
     d58:	ldr	x19, [sp, #48]
     d5c:	b	cb0 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x40>
     d60:	add	x19, sp, #0x38
     d64:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
     d68:	neg	x2, x2
     d6c:	add	x0, x19, #0x15
     d70:	movk	x6, #0xcccd
     d74:	str	x21, [sp, #32]
     d78:	umulh	x4, x2, x6
     d7c:	mov	x1, x0
     d80:	cmp	x2, #0x9
     d84:	lsr	x4, x4, #3
     d88:	add	x3, x4, x4, lsl #2
     d8c:	sub	x3, x2, x3, lsl #1
     d90:	mov	x2, x4
     d94:	add	w3, w3, #0x30
     d98:	strb	w3, [x0, #-1]!
     d9c:	b.hi	d78 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x108>  // b.pmore
     da0:	sub	x21, x1, #0x2
     da4:	add	x19, x19, #0x15
     da8:	sub	x19, x19, x21
     dac:	mov	w1, #0x2d                  	// #45
     db0:	sturb	w1, [x0, #-1]
     db4:	cmp	x19, #0xf
     db8:	str	x5, [x20]
     dbc:	str	x19, [sp, #48]
     dc0:	b.hi	df4 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x184>  // b.pmore
     dc4:	cmp	x19, #0x1
     dc8:	b.ne	dec <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x17c>  // b.any
     dcc:	strb	w1, [x20, #16]
     dd0:	str	x19, [x20, #8]
     dd4:	mov	x0, x20
     dd8:	strb	wzr, [x5, x19]
     ddc:	ldp	x19, x20, [sp, #16]
     de0:	ldr	x21, [sp, #32]
     de4:	ldp	x29, x30, [sp], #80
     de8:	ret
     dec:	cbz	x19, dd0 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x160>
     df0:	b	e14 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x1a4>
     df4:	add	x1, sp, #0x30
     df8:	mov	x0, x20
     dfc:	mov	x2, #0x0                   	// #0
     e00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     e04:	mov	x5, x0
     e08:	str	x0, [x20]
     e0c:	ldr	x1, [sp, #48]
     e10:	str	x1, [x20, #16]
     e14:	mov	x2, x19
     e18:	mov	x0, x5
     e1c:	mov	x1, x21
     e20:	bl	0 <memcpy>
     e24:	ldr	x5, [x20]
     e28:	ldr	x19, [sp, #48]
     e2c:	b	dd0 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x160>
     e30:	cmp	x19, #0x1
     e34:	b.ne	e40 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x1d0>  // b.any
     e38:	ldr	x21, [sp, #32]
     e3c:	b	ca8 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x38>
     e40:	cbnz	x19, d40 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0xd0>
     e44:	ldr	x21, [sp, #32]
     e48:	b	cb0 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev+0x40>
     e4c:	nop

0000000000000e50 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev>:
     e50:	stp	x29, x30, [sp, #-144]!
     e54:	mov	x29, sp
     e58:	ldr	w1, [x0, #24]
     e5c:	stp	x19, x20, [sp, #16]
     e60:	mov	x20, x8
     e64:	stp	x21, x22, [sp, #32]
     e68:	cbnz	x1, f78 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x128>
     e6c:	add	x21, sp, #0x50
     e70:	add	x22, sp, #0x70
     e74:	add	x1, x21, #0x10
     e78:	mov	w0, #0x30                  	// #48
     e7c:	str	x1, [sp, #80]
     e80:	add	x2, x21, #0x10
     e84:	mov	x19, #0x1                   	// #1
     e88:	strb	w0, [sp, #96]
     e8c:	str	x19, [sp, #88]
     e90:	mov	x1, #0x0                   	// #0
     e94:	strb	wzr, [x2, x19]
     e98:	mov	x0, x21
     e9c:	mov	x2, #0x0                   	// #0
     ea0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     ea4:	mov	x4, #0x5                   	// #5
     ea8:	add	x3, x3, #0x0
     eac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     eb0:	add	x1, x22, #0x10
     eb4:	str	x1, [sp, #112]
     eb8:	mov	x1, x0
     ebc:	ldr	x2, [x1], #16
     ec0:	cmp	x2, x1
     ec4:	b.eq	1008 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1b8>  // b.none
     ec8:	str	x2, [sp, #112]
     ecc:	ldr	x2, [x0, #16]
     ed0:	str	x2, [sp, #128]
     ed4:	ldr	x2, [x0, #8]
     ed8:	str	x2, [sp, #120]
     edc:	stp	x1, xzr, [x0]
     ee0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
     ee4:	strb	wzr, [x0, #16]
     ee8:	ldr	x0, [sp, #120]
     eec:	cmp	x0, x2
     ef0:	b.eq	1038 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1e8>  // b.none
     ef4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
     ef8:	add	x1, x1, #0x0
     efc:	mov	x2, #0x1                   	// #1
     f00:	mov	x0, x22
     f04:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     f08:	mov	x1, x0
     f0c:	add	x2, x20, #0x10
     f10:	str	x2, [x20]
     f14:	ldr	x2, [x1], #16
     f18:	cmp	x2, x1
     f1c:	b.eq	102c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1dc>  // b.none
     f20:	ldr	x3, [x0, #16]
     f24:	str	x2, [x20]
     f28:	str	x3, [x20, #16]
     f2c:	ldr	x2, [x0, #8]
     f30:	str	x2, [x20, #8]
     f34:	stp	x1, xzr, [x0]
     f38:	add	x22, x22, #0x10
     f3c:	strb	wzr, [x0, #16]
     f40:	ldr	x0, [sp, #112]
     f44:	cmp	x0, x22
     f48:	b.eq	f50 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x100>  // b.none
     f4c:	bl	0 <_ZdlPv>
     f50:	ldr	x0, [sp, #80]
     f54:	add	x21, x21, #0x10
     f58:	cmp	x0, x21
     f5c:	b.eq	f64 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x114>  // b.none
     f60:	bl	0 <_ZdlPv>
     f64:	mov	x0, x20
     f68:	ldp	x19, x20, [sp, #16]
     f6c:	ldp	x21, x22, [sp, #32]
     f70:	ldp	x29, x30, [sp], #144
     f74:	ret
     f78:	add	x22, sp, #0x70
     f7c:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
     f80:	str	x23, [sp, #48]
     f84:	add	x23, x22, #0x15
     f88:	movk	x3, #0xcccd
     f8c:	nop
     f90:	umulh	x2, x1, x3
     f94:	cmp	x1, #0x9
     f98:	lsr	x2, x2, #3
     f9c:	add	x0, x2, x2, lsl #2
     fa0:	sub	x0, x1, x0, lsl #1
     fa4:	mov	x1, x2
     fa8:	add	w0, w0, #0x30
     fac:	and	w0, w0, #0xff
     fb0:	strb	w0, [x23, #-1]!
     fb4:	b.hi	f90 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x140>  // b.pmore
     fb8:	add	x19, x22, #0x15
     fbc:	add	x21, sp, #0x50
     fc0:	sub	x19, x19, x23
     fc4:	add	x1, x21, #0x10
     fc8:	stp	x19, x1, [sp, #72]
     fcc:	cmp	x19, #0xf
     fd0:	b.ls	1014 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1c4>  // b.plast
     fd4:	add	x1, sp, #0x48
     fd8:	mov	x0, x21
     fdc:	mov	x2, #0x0                   	// #0
     fe0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     fe4:	ldr	x1, [sp, #72]
     fe8:	str	x0, [sp, #80]
     fec:	str	x1, [sp, #96]
     ff0:	mov	x2, x19
     ff4:	mov	x1, x23
     ff8:	bl	0 <memcpy>
     ffc:	ldr	x23, [sp, #48]
    1000:	ldp	x19, x2, [sp, #72]
    1004:	b	e8c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x3c>
    1008:	ldp	x2, x3, [x0, #16]
    100c:	stp	x2, x3, [sp, #128]
    1010:	b	ed4 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x84>
    1014:	cmp	x19, #0x1
    1018:	b.eq	1048 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1f8>  // b.none
    101c:	mov	x2, x1
    1020:	cbnz	x19, 1050 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x200>
    1024:	ldr	x23, [sp, #48]
    1028:	b	e8c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x3c>
    102c:	ldp	x2, x3, [x0, #16]
    1030:	stp	x2, x3, [x20, #16]
    1034:	b	f2c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xdc>
    1038:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    103c:	add	x0, x0, #0x0
    1040:	str	x23, [sp, #48]
    1044:	bl	0 <_ZSt20__throw_length_errorPKc>
    1048:	ldr	x23, [sp, #48]
    104c:	b	e80 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x30>
    1050:	mov	x0, x1
    1054:	b	ff0 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1a0>

0000000000001058 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev>:
    1058:	stp	x29, x30, [sp, #-176]!
    105c:	mov	x29, sp
    1060:	stp	x19, x20, [sp, #16]
    1064:	mov	x19, x0
    1068:	ldr	x0, [x0, #32]
    106c:	stp	x21, x22, [sp, #32]
    1070:	add	x22, sp, #0x90
    1074:	stp	x23, x24, [sp, #48]
    1078:	mov	x24, x8
    107c:	mov	x8, x22
    1080:	ldr	x0, [x0]
    1084:	add	x21, sp, #0x70
    1088:	ldr	x1, [x0]
    108c:	ldr	x1, [x1, #48]
    1090:	blr	x1
    1094:	ldp	x23, x20, [sp, #144]
    1098:	add	x0, x21, #0x10
    109c:	str	x0, [sp, #112]
    10a0:	cmn	x23, x20
    10a4:	ccmp	x23, #0x0, #0x0, ne  // ne = any
    10a8:	b.eq	12d4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x27c>  // b.none
    10ac:	str	x20, [sp, #104]
    10b0:	cmp	x20, #0xf
    10b4:	b.hi	1254 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1fc>  // b.pmore
    10b8:	cmp	x20, #0x1
    10bc:	b.ne	1240 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1e8>  // b.any
    10c0:	ldrb	w2, [x23]
    10c4:	mov	x1, x0
    10c8:	strb	w2, [sp, #128]
    10cc:	str	x20, [sp, #120]
    10d0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    10d4:	strb	wzr, [x1, x20]
    10d8:	ldr	x1, [sp, #120]
    10dc:	cmp	x1, x0
    10e0:	b.eq	12c0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x268>  // b.none
    10e4:	mov	x0, x21
    10e8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    10ec:	mov	x2, #0x1                   	// #1
    10f0:	add	x1, x1, #0x0
    10f4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    10f8:	ldr	x0, [sp, #144]
    10fc:	add	x1, x22, #0x10
    1100:	cmp	x0, x1
    1104:	b.eq	110c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xb4>  // b.none
    1108:	bl	0 <_ZdlPv>
    110c:	ldr	w23, [x19, #48]
    1110:	add	x0, x19, #0x38
    1114:	add	x23, x0, x23, lsl #3
    1118:	cmp	x23, x0
    111c:	b.eq	12b8 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x260>  // b.none
    1120:	add	x20, x19, #0x40
    1124:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1128:	mov	x2, #0x0                   	// #0
    112c:	add	x1, x1, #0x0
    1130:	stp	x25, x26, [sp, #64]
    1134:	adrp	x25, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1138:	add	x26, x22, #0x10
    113c:	add	x25, x25, #0x0
    1140:	ldr	x19, [x19, #56]
    1144:	str	x27, [sp, #80]
    1148:	mov	x27, #0x3fffffffffffffff    	// #4611686018427387903
    114c:	b	1168 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x110>
    1150:	sub	x19, x27, x19
    1154:	mov	x1, x25
    1158:	cmp	x19, #0x1
    115c:	mov	x2, #0x2                   	// #2
    1160:	ldr	x19, [x20], #8
    1164:	b.ls	12c8 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x270>  // b.plast
    1168:	mov	x0, x21
    116c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1170:	ldr	x1, [x19]
    1174:	mov	x0, x19
    1178:	mov	x8, x22
    117c:	ldr	x1, [x1, #40]
    1180:	blr	x1
    1184:	ldp	x1, x2, [sp, #144]
    1188:	mov	x0, x21
    118c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1190:	ldr	x0, [sp, #144]
    1194:	cmp	x0, x26
    1198:	b.eq	11a0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x148>  // b.none
    119c:	bl	0 <_ZdlPv>
    11a0:	cmp	x23, x20
    11a4:	ldr	x19, [sp, #120]
    11a8:	b.ne	1150 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xf8>  // b.any
    11ac:	ldp	x25, x26, [sp, #64]
    11b0:	ldr	x27, [sp, #80]
    11b4:	add	x0, x24, #0x10
    11b8:	ldr	x20, [sp, #112]
    11bc:	str	x0, [x24]
    11c0:	cmn	x20, x19
    11c4:	ccmp	x20, #0x0, #0x0, ne  // ne = any
    11c8:	b.eq	12d4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x27c>  // b.none
    11cc:	str	x19, [sp, #144]
    11d0:	cmp	x19, #0xf
    11d4:	b.hi	1284 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x22c>  // b.pmore
    11d8:	cmp	x19, #0x1
    11dc:	b.ne	124c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1f4>  // b.any
    11e0:	ldrb	w1, [x20]
    11e4:	strb	w1, [x24, #16]
    11e8:	str	x19, [x24, #8]
    11ec:	strb	wzr, [x0, x19]
    11f0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    11f4:	ldr	x1, [x24, #8]
    11f8:	cmp	x1, x0
    11fc:	b.eq	12c0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x268>  // b.none
    1200:	mov	x0, x24
    1204:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1208:	mov	x2, #0x1                   	// #1
    120c:	add	x1, x1, #0x0
    1210:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1214:	add	x21, x21, #0x10
    1218:	ldr	x0, [sp, #112]
    121c:	cmp	x0, x21
    1220:	b.eq	1228 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1d0>  // b.none
    1224:	bl	0 <_ZdlPv>
    1228:	mov	x0, x24
    122c:	ldp	x19, x20, [sp, #16]
    1230:	ldp	x21, x22, [sp, #32]
    1234:	ldp	x23, x24, [sp, #48]
    1238:	ldp	x29, x30, [sp], #176
    123c:	ret
    1240:	mov	x1, x0
    1244:	cbz	x20, 10cc <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x74>
    1248:	b	1270 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x218>
    124c:	cbz	x19, 11e8 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x190>
    1250:	b	12a0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x248>
    1254:	add	x1, sp, #0x68
    1258:	mov	x0, x21
    125c:	mov	x2, #0x0                   	// #0
    1260:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1264:	ldr	x1, [sp, #104]
    1268:	str	x0, [sp, #112]
    126c:	str	x1, [sp, #128]
    1270:	mov	x2, x20
    1274:	mov	x1, x23
    1278:	bl	0 <memcpy>
    127c:	ldp	x20, x1, [sp, #104]
    1280:	b	10cc <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x74>
    1284:	mov	x1, x22
    1288:	mov	x0, x24
    128c:	mov	x2, #0x0                   	// #0
    1290:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1294:	ldr	x1, [sp, #144]
    1298:	str	x0, [x24]
    129c:	str	x1, [x24, #16]
    12a0:	mov	x2, x19
    12a4:	mov	x1, x20
    12a8:	bl	0 <memcpy>
    12ac:	ldr	x0, [x24]
    12b0:	ldr	x19, [sp, #144]
    12b4:	b	11e8 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x190>
    12b8:	ldr	x19, [sp, #120]
    12bc:	b	11b4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x15c>
    12c0:	stp	x25, x26, [sp, #64]
    12c4:	str	x27, [sp, #80]
    12c8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    12cc:	add	x0, x0, #0x0
    12d0:	bl	0 <_ZSt20__throw_length_errorPKc>
    12d4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    12d8:	add	x0, x0, #0x0
    12dc:	stp	x25, x26, [sp, #64]
    12e0:	str	x27, [sp, #80]
    12e4:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000012e8 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev>:
    12e8:	stp	x29, x30, [sp, #-112]!
    12ec:	mov	x29, sp
    12f0:	ldr	x0, [x0, #24]
    12f4:	stp	x19, x20, [sp, #16]
    12f8:	add	x20, sp, #0x30
    12fc:	mov	x19, x8
    1300:	mov	x8, x20
    1304:	ldr	x1, [x0]
    1308:	ldr	x1, [x1, #16]
    130c:	str	x21, [sp, #32]
    1310:	add	x21, sp, #0x50
    1314:	blr	x1
    1318:	mov	x2, #0x0                   	// #0
    131c:	mov	x1, #0x0                   	// #0
    1320:	mov	x0, x20
    1324:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1328:	mov	x4, #0x5                   	// #5
    132c:	add	x3, x3, #0x0
    1330:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1334:	add	x1, x21, #0x10
    1338:	str	x1, [sp, #80]
    133c:	mov	x1, x0
    1340:	ldr	x2, [x1], #16
    1344:	cmp	x2, x1
    1348:	b.eq	1400 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x118>  // b.none
    134c:	ldr	x3, [x0, #16]
    1350:	str	x2, [sp, #80]
    1354:	str	x3, [sp, #96]
    1358:	ldr	x2, [x0, #8]
    135c:	str	x2, [sp, #88]
    1360:	stp	x1, xzr, [x0]
    1364:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    1368:	ldr	x1, [sp, #88]
    136c:	strb	wzr, [x0, #16]
    1370:	cmp	x1, x2
    1374:	b.eq	1418 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x130>  // b.none
    1378:	mov	x2, #0x1                   	// #1
    137c:	mov	x0, x21
    1380:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1384:	add	x1, x1, #0x0
    1388:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    138c:	mov	x1, x0
    1390:	add	x2, x19, #0x10
    1394:	str	x2, [x19]
    1398:	ldr	x2, [x0], #16
    139c:	cmp	x2, x0
    13a0:	b.eq	140c <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x124>  // b.none
    13a4:	ldr	x3, [x1, #16]
    13a8:	str	x2, [x19]
    13ac:	str	x3, [x19, #16]
    13b0:	str	x0, [x1]
    13b4:	add	x21, x21, #0x10
    13b8:	ldr	x0, [x1, #8]
    13bc:	str	x0, [x19, #8]
    13c0:	ldr	x0, [sp, #80]
    13c4:	str	xzr, [x1, #8]
    13c8:	strb	wzr, [x1, #16]
    13cc:	cmp	x0, x21
    13d0:	b.eq	13d8 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xf0>  // b.none
    13d4:	bl	0 <_ZdlPv>
    13d8:	ldr	x0, [sp, #48]
    13dc:	add	x20, x20, #0x10
    13e0:	cmp	x0, x20
    13e4:	b.eq	13ec <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x104>  // b.none
    13e8:	bl	0 <_ZdlPv>
    13ec:	mov	x0, x19
    13f0:	ldp	x19, x20, [sp, #16]
    13f4:	ldr	x21, [sp, #32]
    13f8:	ldp	x29, x30, [sp], #112
    13fc:	ret
    1400:	ldp	x2, x3, [x0, #16]
    1404:	stp	x2, x3, [sp, #96]
    1408:	b	1358 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x70>
    140c:	ldp	x2, x3, [x1, #16]
    1410:	stp	x2, x3, [x19, #16]
    1414:	b	13b0 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xc8>
    1418:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    141c:	add	x0, x0, #0x0
    1420:	bl	0 <_ZSt20__throw_length_errorPKc>
    1424:	nop

0000000000001428 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0>:
    1428:	cmp	x0, x1
    142c:	b.eq	1640 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x218>  // b.none
    1430:	stp	x29, x30, [sp, #-192]!
    1434:	mov	x29, sp
    1438:	stp	x19, x20, [sp, #16]
    143c:	add	x19, x0, #0x8
    1440:	cmp	x1, x19
    1444:	stp	x21, x22, [sp, #32]
    1448:	mov	x21, x0
    144c:	b.eq	1554 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x12c>  // b.none
    1450:	add	x20, sp, #0xa0
    1454:	add	x22, sp, #0x80
    1458:	stp	x23, x24, [sp, #48]
    145c:	stp	x25, x26, [sp, #64]
    1460:	stp	x27, x28, [sp, #80]
    1464:	str	x1, [sp, #120]
    1468:	ldr	x0, [x19]
    146c:	mov	x8, x20
    1470:	ldr	x23, [x21]
    1474:	ldr	x0, [x0]
    1478:	ldr	x1, [x0]
    147c:	ldr	x1, [x1, #48]
    1480:	blr	x1
    1484:	ldr	x0, [x23]
    1488:	mov	x8, x22
    148c:	ldr	x1, [x0]
    1490:	ldr	x1, [x1, #48]
    1494:	blr	x1
    1498:	ldp	x1, x28, [sp, #128]
    149c:	ldp	x27, x23, [sp, #160]
    14a0:	cmp	x23, x28
    14a4:	csel	x2, x23, x28, ls  // ls = plast
    14a8:	cbz	x2, 14c4 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x9c>
    14ac:	mov	x0, x27
    14b0:	str	x1, [sp, #96]
    14b4:	bl	0 <memcmp>
    14b8:	mov	w26, w0
    14bc:	ldr	x1, [sp, #96]
    14c0:	cbnz	w0, 14e8 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0xc0>
    14c4:	sub	x23, x23, x28
    14c8:	mov	x0, #0x7fffffff            	// #2147483647
    14cc:	mov	w26, #0x7fffffff            	// #2147483647
    14d0:	cmp	x23, x0
    14d4:	b.gt	14e8 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0xc0>
    14d8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    14dc:	cmp	x23, x0
    14e0:	mov	w26, #0x80000000            	// #-2147483648
    14e4:	csel	w26, w23, w26, ge  // ge = tcont
    14e8:	add	x0, x22, #0x10
    14ec:	cmp	x1, x0
    14f0:	b.eq	1500 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0xd8>  // b.none
    14f4:	mov	x0, x1
    14f8:	bl	0 <_ZdlPv>
    14fc:	ldr	x27, [sp, #160]
    1500:	add	x0, x20, #0x10
    1504:	cmp	x27, x0
    1508:	b.eq	1514 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0xec>  // b.none
    150c:	mov	x0, x27
    1510:	bl	0 <_ZdlPv>
    1514:	ldr	x23, [x19]
    1518:	tbz	w26, #31, 1564 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x13c>
    151c:	cmp	x21, x19
    1520:	b.eq	1534 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x10c>  // b.none
    1524:	sub	x2, x19, x21
    1528:	mov	x1, x21
    152c:	add	x0, x21, #0x8
    1530:	bl	0 <memmove>
    1534:	str	x23, [x21]
    1538:	ldr	x0, [sp, #120]
    153c:	add	x19, x19, #0x8
    1540:	cmp	x19, x0
    1544:	b.ne	1468 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x40>  // b.any
    1548:	ldp	x23, x24, [sp, #48]
    154c:	ldp	x25, x26, [sp, #64]
    1550:	ldp	x27, x28, [sp, #80]
    1554:	ldp	x19, x20, [sp, #16]
    1558:	ldp	x21, x22, [sp, #32]
    155c:	ldp	x29, x30, [sp], #192
    1560:	ret
    1564:	add	x0, x22, #0x10
    1568:	mov	x26, x19
    156c:	str	x0, [sp, #112]
    1570:	b	1588 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x160>
    1574:	mov	x0, x28
    1578:	bl	0 <_ZdlPv>
    157c:	tbz	w27, #31, 1634 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x20c>
    1580:	ldr	x0, [x26]
    1584:	str	x0, [x26, #8]
    1588:	ldr	x0, [x23]
    158c:	str	x26, [sp, #104]
    1590:	ldur	x24, [x26, #-8]
    1594:	mov	x8, x20
    1598:	ldr	x2, [x0]
    159c:	ldr	x2, [x2, #48]
    15a0:	blr	x2
    15a4:	ldr	x0, [x24]
    15a8:	mov	x8, x22
    15ac:	ldr	x1, [x0]
    15b0:	ldr	x1, [x1, #48]
    15b4:	blr	x1
    15b8:	ldp	x25, x24, [sp, #128]
    15bc:	ldp	x28, x4, [sp, #160]
    15c0:	mov	x1, x25
    15c4:	cmp	x4, x24
    15c8:	csel	x2, x4, x24, ls  // ls = plast
    15cc:	cbz	x2, 15e8 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x1c0>
    15d0:	mov	x0, x28
    15d4:	str	x4, [sp, #96]
    15d8:	bl	0 <memcmp>
    15dc:	mov	w27, w0
    15e0:	ldr	x4, [sp, #96]
    15e4:	cbnz	w0, 1608 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x1e0>
    15e8:	sub	x4, x4, x24
    15ec:	mov	x0, #0x7fffffff            	// #2147483647
    15f0:	mov	w27, #0x7fffffff            	// #2147483647
    15f4:	cmp	x4, x0
    15f8:	b.gt	1608 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x1e0>
    15fc:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1600:	cmp	x4, x0
    1604:	csel	w27, w4, w0, ge  // ge = tcont
    1608:	ldr	x1, [sp, #112]
    160c:	mov	x0, x25
    1610:	cmp	x25, x1
    1614:	b.eq	1620 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x1f8>  // b.none
    1618:	bl	0 <_ZdlPv>
    161c:	ldr	x28, [sp, #160]
    1620:	add	x0, x20, #0x10
    1624:	sub	x26, x26, #0x8
    1628:	cmp	x28, x0
    162c:	b.ne	1574 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x14c>  // b.any
    1630:	tbnz	w27, #31, 1580 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x158>
    1634:	ldr	x0, [sp, #104]
    1638:	str	x23, [x0]
    163c:	b	1538 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0+0x110>
    1640:	ret
    1644:	nop

0000000000001648 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0>:
    1648:	stp	x29, x30, [sp, #-224]!
    164c:	mov	x29, sp
    1650:	stp	x27, x28, [sp, #80]
    1654:	sub	x27, x2, #0x1
    1658:	add	x27, x27, x27, lsr #63
    165c:	stp	x23, x24, [sp, #48]
    1660:	mov	x24, x0
    1664:	and	x0, x2, #0x1
    1668:	stp	x19, x20, [sp, #16]
    166c:	cmp	x1, x27, asr #1
    1670:	stp	x21, x22, [sp, #32]
    1674:	stp	x25, x26, [sp, #64]
    1678:	mov	x25, x3
    167c:	str	x1, [sp, #120]
    1680:	stp	x0, x2, [sp, #144]
    1684:	asr	x0, x27, #1
    1688:	str	x0, [sp, #128]
    168c:	b.ge	18d8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x290>  // b.tcont
    1690:	add	x23, sp, #0xa0
    1694:	mov	x26, x1
    1698:	add	x20, sp, #0xc0
    169c:	add	x0, x23, #0x10
    16a0:	str	x0, [sp, #136]
    16a4:	nop
    16a8:	add	x19, x26, #0x1
    16ac:	mov	x8, x20
    16b0:	lsl	x22, x19, #4
    16b4:	lsl	x19, x19, #1
    16b8:	add	x21, x24, x22
    16bc:	ldr	x0, [x24, x22]
    16c0:	ldur	x27, [x21, #-8]
    16c4:	ldr	x0, [x0]
    16c8:	ldr	x2, [x0]
    16cc:	ldr	x2, [x2, #48]
    16d0:	blr	x2
    16d4:	ldr	x0, [x27]
    16d8:	mov	x8, x23
    16dc:	ldr	x1, [x0]
    16e0:	ldr	x1, [x1, #48]
    16e4:	blr	x1
    16e8:	ldp	x1, x6, [sp, #160]
    16ec:	ldp	x27, x3, [sp, #192]
    16f0:	cmp	x3, x6
    16f4:	csel	x2, x3, x6, ls  // ls = plast
    16f8:	cbz	x2, 171c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0xd4>
    16fc:	mov	x0, x27
    1700:	stp	x1, x3, [sp, #96]
    1704:	str	x6, [sp, #112]
    1708:	bl	0 <memcmp>
    170c:	mov	w28, w0
    1710:	ldp	x1, x3, [sp, #96]
    1714:	ldr	x6, [sp, #112]
    1718:	cbnz	w0, 173c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0xf4>
    171c:	sub	x3, x3, x6
    1720:	mov	x0, #0x7fffffff            	// #2147483647
    1724:	mov	w28, #0x7fffffff            	// #2147483647
    1728:	cmp	x3, x0
    172c:	b.gt	173c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0xf4>
    1730:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1734:	cmp	x3, x0
    1738:	csel	w28, w3, w0, ge  // ge = tcont
    173c:	ldr	x0, [sp, #136]
    1740:	cmp	x1, x0
    1744:	b.eq	1754 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x10c>  // b.none
    1748:	mov	x0, x1
    174c:	bl	0 <_ZdlPv>
    1750:	ldr	x27, [sp, #192]
    1754:	add	x0, x20, #0x10
    1758:	cmp	x27, x0
    175c:	b.eq	1768 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x120>  // b.none
    1760:	mov	x0, x27
    1764:	bl	0 <_ZdlPv>
    1768:	tbz	w28, #31, 1790 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x148>
    176c:	sub	x19, x19, #0x1
    1770:	ldr	x0, [sp, #128]
    1774:	add	x21, x24, x19, lsl #3
    1778:	cmp	x19, x0
    177c:	ldr	x0, [x24, x19, lsl #3]
    1780:	str	x0, [x24, x26, lsl #3]
    1784:	b.ge	17a4 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x15c>  // b.tcont
    1788:	mov	x26, x19
    178c:	b	16a8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x60>
    1790:	ldr	x0, [x24, x22]
    1794:	str	x0, [x24, x26, lsl #3]
    1798:	ldr	x0, [sp, #128]
    179c:	cmp	x19, x0
    17a0:	b.lt	1788 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x140>  // b.tstop
    17a4:	ldr	x0, [sp, #144]
    17a8:	cbz	x0, 18e8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x2a0>
    17ac:	sub	x3, x19, #0x1
    17b0:	ldr	x0, [sp, #120]
    17b4:	add	x3, x3, x3, lsr #63
    17b8:	cmp	x19, x0
    17bc:	asr	x28, x3, #1
    17c0:	b.le	18b8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x270>
    17c4:	add	x23, sp, #0xa0
    17c8:	add	x20, sp, #0xc0
    17cc:	add	x0, x23, #0x10
    17d0:	str	x0, [sp, #112]
    17d4:	b	1800 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x1b8>
    17d8:	ldr	x1, [sp, #120]
    17dc:	sub	x0, x28, #0x1
    17e0:	cmp	x1, x28
    17e4:	add	x0, x0, x0, lsr #63
    17e8:	ldr	x1, [x24, x22]
    17ec:	str	x1, [x24, x19, lsl #3]
    17f0:	asr	x3, x0, #1
    17f4:	mov	x19, x28
    17f8:	b.ge	191c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x2d4>  // b.tcont
    17fc:	mov	x28, x3
    1800:	ldr	x0, [x24, x28, lsl #3]
    1804:	lsl	x22, x28, #3
    1808:	add	x1, x24, x22
    180c:	str	x1, [sp, #128]
    1810:	mov	x8, x20
    1814:	ldr	x0, [x0]
    1818:	ldr	x1, [x0]
    181c:	ldr	x1, [x1, #48]
    1820:	blr	x1
    1824:	ldr	x0, [x25]
    1828:	mov	x8, x23
    182c:	ldr	x1, [x0]
    1830:	ldr	x1, [x1, #48]
    1834:	blr	x1
    1838:	ldp	x1, x6, [sp, #160]
    183c:	ldp	x26, x21, [sp, #192]
    1840:	cmp	x21, x6
    1844:	csel	x2, x21, x6, ls  // ls = plast
    1848:	cbz	x2, 1864 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x21c>
    184c:	mov	x0, x26
    1850:	stp	x1, x6, [sp, #96]
    1854:	bl	0 <memcmp>
    1858:	mov	w27, w0
    185c:	ldp	x1, x6, [sp, #96]
    1860:	cbnz	w0, 1884 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x23c>
    1864:	sub	x21, x21, x6
    1868:	mov	x0, #0x7fffffff            	// #2147483647
    186c:	mov	w27, #0x7fffffff            	// #2147483647
    1870:	cmp	x21, x0
    1874:	b.gt	1884 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x23c>
    1878:	mov	x0, #0xffffffff80000000    	// #-2147483648
    187c:	cmp	x21, x0
    1880:	csel	w27, w21, w0, ge  // ge = tcont
    1884:	ldr	x0, [sp, #112]
    1888:	cmp	x1, x0
    188c:	b.eq	189c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x254>  // b.none
    1890:	mov	x0, x1
    1894:	bl	0 <_ZdlPv>
    1898:	ldr	x26, [sp, #192]
    189c:	add	x0, x20, #0x10
    18a0:	cmp	x26, x0
    18a4:	b.eq	18b0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x268>  // b.none
    18a8:	mov	x0, x26
    18ac:	bl	0 <_ZdlPv>
    18b0:	add	x21, x24, x19, lsl #3
    18b4:	tbnz	w27, #31, 17d8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x190>
    18b8:	ldp	x19, x20, [sp, #16]
    18bc:	ldp	x23, x24, [sp, #48]
    18c0:	ldp	x27, x28, [sp, #80]
    18c4:	str	x25, [x21]
    18c8:	ldp	x21, x22, [sp, #32]
    18cc:	ldp	x25, x26, [sp, #64]
    18d0:	ldp	x29, x30, [sp], #224
    18d4:	ret
    18d8:	ldr	x0, [sp, #144]
    18dc:	add	x21, x24, x1, lsl #3
    18e0:	cbnz	x0, 18b8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x270>
    18e4:	ldr	x19, [sp, #120]
    18e8:	ldr	x0, [sp, #152]
    18ec:	sub	x2, x0, #0x2
    18f0:	add	x2, x2, x2, lsr #63
    18f4:	cmp	x19, x2, asr #1
    18f8:	b.ne	17ac <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x164>  // b.any
    18fc:	add	x19, x19, #0x1
    1900:	add	x0, x24, x19, lsl #4
    1904:	lsl	x19, x19, #1
    1908:	sub	x19, x19, #0x1
    190c:	ldur	x0, [x0, #-8]
    1910:	str	x0, [x21]
    1914:	add	x21, x24, x19, lsl #3
    1918:	b	17ac <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0+0x164>
    191c:	ldr	x21, [sp, #128]
    1920:	ldp	x19, x20, [sp, #16]
    1924:	ldp	x23, x24, [sp, #48]
    1928:	ldp	x27, x28, [sp, #80]
    192c:	str	x25, [x21]
    1930:	ldp	x21, x22, [sp, #32]
    1934:	ldp	x25, x26, [sp, #64]
    1938:	ldp	x29, x30, [sp], #224
    193c:	ret

0000000000001940 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_>:
    1940:	stp	x29, x30, [sp, #-208]!
    1944:	mov	x29, sp
    1948:	stp	x19, x20, [sp, #16]
    194c:	mov	x19, x0
    1950:	sub	x0, x1, x0
    1954:	strb	w3, [sp, #135]
    1958:	cmp	x0, #0x80
    195c:	b.le	1e14 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x4d4>
    1960:	stp	x21, x22, [sp, #32]
    1964:	stp	x23, x24, [sp, #48]
    1968:	mov	x24, x1
    196c:	stp	x25, x26, [sp, #64]
    1970:	mov	x26, x2
    1974:	cbz	x2, 1e94 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x554>
    1978:	add	x25, sp, #0x90
    197c:	add	x22, sp, #0xb0
    1980:	stp	x27, x28, [sp, #80]
    1984:	add	x27, x25, #0x10
    1988:	add	x1, x19, #0x8
    198c:	str	x1, [sp, #136]
    1990:	ldr	x1, [x19, #8]
    1994:	asr	x20, x0, #4
    1998:	mov	x8, x22
    199c:	sub	x26, x26, #0x1
    19a0:	ldr	x0, [x1]
    19a4:	ldr	x21, [x19, x20, lsl #3]
    19a8:	ldr	x1, [x0]
    19ac:	ldr	x1, [x1, #48]
    19b0:	blr	x1
    19b4:	ldr	x0, [x21]
    19b8:	mov	x8, x25
    19bc:	ldr	x1, [x0]
    19c0:	ldr	x1, [x1, #48]
    19c4:	blr	x1
    19c8:	ldp	x1, x4, [sp, #144]
    19cc:	ldp	x3, x21, [sp, #176]
    19d0:	cmp	x21, x4
    19d4:	csel	x2, x21, x4, ls  // ls = plast
    19d8:	cbz	x2, 19fc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0xbc>
    19dc:	mov	x0, x3
    19e0:	stp	x3, x1, [sp, #96]
    19e4:	str	x4, [sp, #112]
    19e8:	bl	0 <memcmp>
    19ec:	mov	w23, w0
    19f0:	ldp	x3, x1, [sp, #96]
    19f4:	ldr	x4, [sp, #112]
    19f8:	cbnz	w0, 1a1c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0xdc>
    19fc:	sub	x21, x21, x4
    1a00:	mov	x0, #0x7fffffff            	// #2147483647
    1a04:	mov	w23, #0x7fffffff            	// #2147483647
    1a08:	cmp	x21, x0
    1a0c:	b.gt	1a1c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0xdc>
    1a10:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1a14:	cmp	x21, x0
    1a18:	csel	w23, w21, w0, ge  // ge = tcont
    1a1c:	cmp	x1, x27
    1a20:	b.eq	1a30 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0xf0>  // b.none
    1a24:	mov	x0, x1
    1a28:	bl	0 <_ZdlPv>
    1a2c:	ldr	x3, [sp, #176]
    1a30:	add	x0, x22, #0x10
    1a34:	cmp	x3, x0
    1a38:	b.eq	1a44 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x104>  // b.none
    1a3c:	mov	x0, x3
    1a40:	bl	0 <_ZdlPv>
    1a44:	tbz	w23, #31, 1ce0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x3a0>
    1a48:	ldr	x0, [x19, x20, lsl #3]
    1a4c:	mov	x8, x22
    1a50:	ldur	x21, [x24, #-8]
    1a54:	ldr	x0, [x0]
    1a58:	ldr	x1, [x0]
    1a5c:	ldr	x1, [x1, #48]
    1a60:	blr	x1
    1a64:	ldr	x0, [x21]
    1a68:	mov	x8, x25
    1a6c:	ldr	x1, [x0]
    1a70:	ldr	x1, [x1, #48]
    1a74:	blr	x1
    1a78:	ldp	x1, x4, [sp, #144]
    1a7c:	ldp	x3, x21, [sp, #176]
    1a80:	cmp	x21, x4
    1a84:	csel	x2, x21, x4, ls  // ls = plast
    1a88:	cbz	x2, 1aac <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x16c>
    1a8c:	mov	x0, x3
    1a90:	stp	x3, x1, [sp, #96]
    1a94:	str	x4, [sp, #112]
    1a98:	bl	0 <memcmp>
    1a9c:	mov	w23, w0
    1aa0:	ldp	x3, x1, [sp, #96]
    1aa4:	ldr	x4, [sp, #112]
    1aa8:	cbnz	w0, 1acc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x18c>
    1aac:	sub	x21, x21, x4
    1ab0:	mov	x0, #0x7fffffff            	// #2147483647
    1ab4:	mov	w23, #0x7fffffff            	// #2147483647
    1ab8:	cmp	x21, x0
    1abc:	b.gt	1acc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x18c>
    1ac0:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1ac4:	cmp	x21, x0
    1ac8:	csel	w23, w21, w0, ge  // ge = tcont
    1acc:	cmp	x1, x27
    1ad0:	b.eq	1ae0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1a0>  // b.none
    1ad4:	mov	x0, x1
    1ad8:	bl	0 <_ZdlPv>
    1adc:	ldr	x3, [sp, #176]
    1ae0:	add	x0, x22, #0x10
    1ae4:	cmp	x3, x0
    1ae8:	b.eq	1af4 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1b4>  // b.none
    1aec:	mov	x0, x3
    1af0:	bl	0 <_ZdlPv>
    1af4:	tbz	w23, #31, 1e20 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x4e0>
    1af8:	ldr	x1, [x19, x20, lsl #3]
    1afc:	ldr	x0, [x19]
    1b00:	str	x1, [x19]
    1b04:	str	x0, [x19, x20, lsl #3]
    1b08:	ldr	x1, [x19]
    1b0c:	mov	x21, x24
    1b10:	ldr	x20, [sp, #136]
    1b14:	nop
    1b18:	str	x1, [sp, #96]
    1b1c:	ldr	x0, [x20]
    1b20:	mov	x8, x22
    1b24:	mov	x23, x20
    1b28:	ldr	x0, [x0]
    1b2c:	ldr	x2, [x0]
    1b30:	ldr	x2, [x2, #48]
    1b34:	blr	x2
    1b38:	ldr	x1, [sp, #96]
    1b3c:	mov	x8, x25
    1b40:	ldr	x0, [x1]
    1b44:	ldr	x1, [x0]
    1b48:	ldr	x1, [x1, #48]
    1b4c:	blr	x1
    1b50:	ldp	x1, x5, [sp, #144]
    1b54:	ldp	x4, x3, [sp, #176]
    1b58:	cmp	x3, x5
    1b5c:	csel	x2, x3, x5, ls  // ls = plast
    1b60:	cbz	x2, 1b84 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x244>
    1b64:	mov	x0, x4
    1b68:	stp	x4, x1, [sp, #96]
    1b6c:	stp	x3, x5, [sp, #112]
    1b70:	bl	0 <memcmp>
    1b74:	mov	w28, w0
    1b78:	ldp	x4, x1, [sp, #96]
    1b7c:	ldp	x3, x5, [sp, #112]
    1b80:	cbnz	w0, 1ba4 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x264>
    1b84:	sub	x3, x3, x5
    1b88:	mov	x0, #0x7fffffff            	// #2147483647
    1b8c:	mov	w28, #0x7fffffff            	// #2147483647
    1b90:	cmp	x3, x0
    1b94:	b.gt	1ba4 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x264>
    1b98:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1b9c:	cmp	x3, x0
    1ba0:	csel	w28, w3, w0, ge  // ge = tcont
    1ba4:	cmp	x1, x27
    1ba8:	b.eq	1bb8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x278>  // b.none
    1bac:	mov	x0, x1
    1bb0:	bl	0 <_ZdlPv>
    1bb4:	ldr	x4, [sp, #176]
    1bb8:	add	x0, x22, #0x10
    1bbc:	cmp	x4, x0
    1bc0:	b.eq	1bcc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x28c>  // b.none
    1bc4:	mov	x0, x4
    1bc8:	bl	0 <_ZdlPv>
    1bcc:	tbz	w28, #31, 1be0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x2a0>
    1bd0:	add	x20, x20, #0x8
    1bd4:	ldr	x1, [x19]
    1bd8:	b	1b18 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1d8>
    1bdc:	tbz	w28, #31, 1c98 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x358>
    1be0:	ldr	x0, [x19]
    1be4:	mov	x8, x22
    1be8:	ldur	x28, [x21, #-8]
    1bec:	sub	x21, x21, #0x8
    1bf0:	ldr	x0, [x0]
    1bf4:	ldr	x2, [x0]
    1bf8:	ldr	x2, [x2, #48]
    1bfc:	blr	x2
    1c00:	ldr	x0, [x28]
    1c04:	mov	x8, x25
    1c08:	ldr	x1, [x0]
    1c0c:	ldr	x1, [x1, #48]
    1c10:	blr	x1
    1c14:	ldp	x5, x6, [sp, #144]
    1c18:	ldp	x4, x3, [sp, #176]
    1c1c:	mov	x1, x5
    1c20:	cmp	x3, x6
    1c24:	csel	x2, x3, x6, ls  // ls = plast
    1c28:	cbz	x2, 1c4c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x30c>
    1c2c:	mov	x0, x4
    1c30:	stp	x4, x3, [sp, #96]
    1c34:	stp	x6, x5, [sp, #112]
    1c38:	bl	0 <memcmp>
    1c3c:	mov	w28, w0
    1c40:	ldp	x4, x3, [sp, #96]
    1c44:	ldp	x6, x5, [sp, #112]
    1c48:	cbnz	w0, 1c6c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x32c>
    1c4c:	sub	x3, x3, x6
    1c50:	mov	x0, #0x7fffffff            	// #2147483647
    1c54:	mov	w28, #0x7fffffff            	// #2147483647
    1c58:	cmp	x3, x0
    1c5c:	b.gt	1c6c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x32c>
    1c60:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1c64:	cmp	x3, x0
    1c68:	csel	w28, w3, w0, ge  // ge = tcont
    1c6c:	mov	x0, x5
    1c70:	cmp	x5, x27
    1c74:	b.eq	1c80 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x340>  // b.none
    1c78:	bl	0 <_ZdlPv>
    1c7c:	ldr	x4, [sp, #176]
    1c80:	add	x0, x22, #0x10
    1c84:	cmp	x4, x0
    1c88:	b.eq	1bdc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x29c>  // b.none
    1c8c:	mov	x0, x4
    1c90:	bl	0 <_ZdlPv>
    1c94:	tbnz	w28, #31, 1be0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x2a0>
    1c98:	cmp	x20, x21
    1c9c:	b.cs	1cb4 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x374>  // b.hs, b.nlast
    1ca0:	ldr	x1, [x21]
    1ca4:	ldr	x0, [x20]
    1ca8:	str	x1, [x20]
    1cac:	str	x0, [x21]
    1cb0:	b	1bd0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x290>
    1cb4:	ldrb	w3, [sp, #135]
    1cb8:	mov	x0, x20
    1cbc:	mov	x1, x24
    1cc0:	mov	x2, x26
    1cc4:	bl	1940 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_>
    1cc8:	sub	x0, x20, x19
    1ccc:	cmp	x0, #0x80
    1cd0:	b.le	1e78 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x538>
    1cd4:	cbz	x26, 1d9c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x45c>
    1cd8:	mov	x24, x20
    1cdc:	b	1990 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x50>
    1ce0:	ldr	x0, [x19, #8]
    1ce4:	mov	x8, x22
    1ce8:	ldur	x21, [x24, #-8]
    1cec:	ldr	x0, [x0]
    1cf0:	ldr	x1, [x0]
    1cf4:	ldr	x1, [x1, #48]
    1cf8:	blr	x1
    1cfc:	ldr	x0, [x21]
    1d00:	mov	x8, x25
    1d04:	ldr	x1, [x0]
    1d08:	ldr	x1, [x1, #48]
    1d0c:	blr	x1
    1d10:	ldp	x1, x4, [sp, #144]
    1d14:	ldp	x3, x21, [sp, #176]
    1d18:	cmp	x21, x4
    1d1c:	csel	x2, x21, x4, ls  // ls = plast
    1d20:	cbz	x2, 1d44 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x404>
    1d24:	mov	x0, x3
    1d28:	stp	x3, x1, [sp, #96]
    1d2c:	str	x4, [sp, #112]
    1d30:	bl	0 <memcmp>
    1d34:	mov	w23, w0
    1d38:	ldp	x3, x1, [sp, #96]
    1d3c:	ldr	x4, [sp, #112]
    1d40:	cbnz	w0, 1d64 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x424>
    1d44:	sub	x21, x21, x4
    1d48:	mov	x0, #0x7fffffff            	// #2147483647
    1d4c:	mov	w23, #0x7fffffff            	// #2147483647
    1d50:	cmp	x21, x0
    1d54:	b.gt	1d64 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x424>
    1d58:	mov	x0, #0xffffffff80000000    	// #-2147483648
    1d5c:	cmp	x21, x0
    1d60:	csel	w23, w21, w0, ge  // ge = tcont
    1d64:	cmp	x1, x27
    1d68:	b.eq	1d78 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x438>  // b.none
    1d6c:	mov	x0, x1
    1d70:	bl	0 <_ZdlPv>
    1d74:	ldr	x3, [sp, #176]
    1d78:	add	x0, x22, #0x10
    1d7c:	cmp	x3, x0
    1d80:	b.eq	1d8c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x44c>  // b.none
    1d84:	mov	x0, x3
    1d88:	bl	0 <_ZdlPv>
    1d8c:	tbz	w23, #31, 1e4c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x50c>
    1d90:	ldp	x0, x1, [x19]
    1d94:	stp	x1, x0, [x19]
    1d98:	b	1b0c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1cc>
    1d9c:	ldp	x27, x28, [sp, #80]
    1da0:	asr	x20, x0, #3
    1da4:	sub	x21, x20, #0x2
    1da8:	mov	x0, x19
    1dac:	mov	x2, x20
    1db0:	asr	x21, x21, #1
    1db4:	mov	x1, x21
    1db8:	ldr	x3, [x19, x21, lsl #3]
    1dbc:	bl	1648 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0>
    1dc0:	sub	x21, x21, #0x1
    1dc4:	mov	x2, x20
    1dc8:	mov	x1, x21
    1dcc:	mov	x0, x19
    1dd0:	ldr	x3, [x19, x21, lsl #3]
    1dd4:	bl	1648 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0>
    1dd8:	cbnz	x21, 1dc0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x480>
    1ddc:	nop
    1de0:	ldr	x3, [x23, #-8]!
    1de4:	mov	x1, #0x0                   	// #0
    1de8:	ldr	x0, [x19]
    1dec:	sub	x20, x23, x19
    1df0:	str	x0, [x23]
    1df4:	mov	x0, x19
    1df8:	asr	x2, x20, #3
    1dfc:	bl	1648 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_T0_SD_T1_T2_.isra.0>
    1e00:	cmp	x20, #0x8
    1e04:	b.gt	1de0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x4a0>
    1e08:	ldp	x21, x22, [sp, #32]
    1e0c:	ldp	x23, x24, [sp, #48]
    1e10:	ldp	x25, x26, [sp, #64]
    1e14:	ldp	x19, x20, [sp, #16]
    1e18:	ldp	x29, x30, [sp], #208
    1e1c:	ret
    1e20:	ldur	x1, [x24, #-8]
    1e24:	ldr	x0, [x19, #8]
    1e28:	bl	b88 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0>
    1e2c:	tst	w0, #0xff
    1e30:	b.eq	1d90 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x450>  // b.none
    1e34:	ldur	x1, [x24, #-8]
    1e38:	ldr	x0, [x19]
    1e3c:	str	x1, [x19]
    1e40:	stur	x0, [x24, #-8]
    1e44:	ldr	x1, [x19]
    1e48:	b	1b0c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1cc>
    1e4c:	ldur	x1, [x24, #-8]
    1e50:	ldr	x0, [x19, x20, lsl #3]
    1e54:	bl	b88 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0>
    1e58:	tst	w0, #0xff
    1e5c:	b.eq	1af8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1b8>  // b.none
    1e60:	ldur	x1, [x24, #-8]
    1e64:	ldr	x0, [x19]
    1e68:	str	x1, [x19]
    1e6c:	stur	x0, [x24, #-8]
    1e70:	ldr	x1, [x19]
    1e74:	b	1b0c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x1cc>
    1e78:	ldp	x19, x20, [sp, #16]
    1e7c:	ldp	x21, x22, [sp, #32]
    1e80:	ldp	x23, x24, [sp, #48]
    1e84:	ldp	x25, x26, [sp, #64]
    1e88:	ldp	x27, x28, [sp, #80]
    1e8c:	ldp	x29, x30, [sp], #208
    1e90:	ret
    1e94:	mov	x23, x1
    1e98:	b	1da0 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_+0x460>
    1e9c:	nop

0000000000001ea0 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev>:
    1ea0:	stp	x29, x30, [sp, #-224]!
    1ea4:	mov	x29, sp
    1ea8:	stp	x19, x20, [sp, #16]
    1eac:	mov	x19, x0
    1eb0:	mov	x20, x8
    1eb4:	ldr	x0, [x0, #24]
    1eb8:	stp	x21, x22, [sp, #32]
    1ebc:	add	x21, sp, #0x60
    1ec0:	stp	x23, x24, [sp, #48]
    1ec4:	mov	x8, x21
    1ec8:	ldr	x1, [x0]
    1ecc:	ldr	x1, [x1, #40]
    1ed0:	blr	x1
    1ed4:	ldr	x1, [sp, #104]
    1ed8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    1edc:	cmp	x1, x0
    1ee0:	b.eq	2180 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2e0>  // b.none
    1ee4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    1ee8:	add	x1, x1, #0x0
    1eec:	mov	x2, #0x1                   	// #1
    1ef0:	mov	x0, x21
    1ef4:	add	x22, sp, #0x80
    1ef8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1efc:	mov	x1, x0
    1f00:	add	x2, x22, #0x10
    1f04:	str	x2, [sp, #128]
    1f08:	ldr	x2, [x1], #16
    1f0c:	cmp	x2, x1
    1f10:	b.eq	2130 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x290>  // b.none
    1f14:	ldr	x3, [x0, #16]
    1f18:	str	x2, [sp, #128]
    1f1c:	str	x3, [sp, #144]
    1f20:	strb	wzr, [x0, #16]
    1f24:	ldr	x2, [x0, #8]
    1f28:	str	x2, [sp, #136]
    1f2c:	ldr	w2, [x19, #32]
    1f30:	stp	x1, xzr, [x0]
    1f34:	cbnz	x2, 1f5c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xbc>
    1f38:	add	x23, sp, #0xa0
    1f3c:	add	x24, sp, #0xc0
    1f40:	add	x1, x23, #0x10
    1f44:	mov	w0, #0x30                  	// #48
    1f48:	str	x1, [sp, #160]
    1f4c:	add	x2, x23, #0x10
    1f50:	mov	x19, #0x1                   	// #1
    1f54:	strb	w0, [sp, #176]
    1f58:	b	1fec <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x14c>
    1f5c:	add	x24, sp, #0xc0
    1f60:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    1f64:	str	x25, [sp, #64]
    1f68:	add	x25, x24, #0x15
    1f6c:	movk	x3, #0xcccd
    1f70:	umulh	x1, x2, x3
    1f74:	cmp	x2, #0x9
    1f78:	lsr	x1, x1, #3
    1f7c:	add	x0, x1, x1, lsl #2
    1f80:	sub	x0, x2, x0, lsl #1
    1f84:	mov	x2, x1
    1f88:	add	w0, w0, #0x30
    1f8c:	and	w0, w0, #0xff
    1f90:	strb	w0, [x25, #-1]!
    1f94:	b.hi	1f70 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xd0>  // b.pmore
    1f98:	add	x19, x24, #0x15
    1f9c:	add	x23, sp, #0xa0
    1fa0:	sub	x19, x19, x25
    1fa4:	add	x1, x23, #0x10
    1fa8:	str	x19, [sp, #88]
    1fac:	cmp	x19, #0xf
    1fb0:	str	x1, [sp, #160]
    1fb4:	b.ls	213c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x29c>  // b.plast
    1fb8:	add	x1, sp, #0x58
    1fbc:	mov	x0, x23
    1fc0:	mov	x2, #0x0                   	// #0
    1fc4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1fc8:	ldr	x1, [sp, #88]
    1fcc:	str	x0, [sp, #160]
    1fd0:	str	x1, [sp, #176]
    1fd4:	mov	x2, x19
    1fd8:	mov	x1, x25
    1fdc:	bl	0 <memcpy>
    1fe0:	ldr	x25, [sp, #64]
    1fe4:	ldr	x19, [sp, #88]
    1fe8:	ldr	x2, [sp, #160]
    1fec:	str	x19, [sp, #168]
    1ff0:	strb	wzr, [x2, x19]
    1ff4:	add	x0, x22, #0x10
    1ff8:	mov	x6, #0xf                   	// #15
    1ffc:	ldp	x3, x4, [sp, #128]
    2000:	ldp	x1, x2, [sp, #160]
    2004:	cmp	x3, x0
    2008:	ldr	x0, [sp, #144]
    200c:	add	x5, x4, x2
    2010:	csel	x0, x0, x6, ne  // ne = any
    2014:	cmp	x5, x0
    2018:	b.ls	2034 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x194>  // b.plast
    201c:	ldr	x0, [sp, #176]
    2020:	add	x7, x23, #0x10
    2024:	cmp	x1, x7
    2028:	csel	x0, x0, x6, ne  // ne = any
    202c:	cmp	x5, x0
    2030:	b.ls	216c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2cc>  // b.plast
    2034:	mov	x0, x22
    2038:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    203c:	mov	x1, x0
    2040:	add	x2, x24, #0x10
    2044:	str	x2, [sp, #192]
    2048:	ldr	x2, [x1], #16
    204c:	cmp	x2, x1
    2050:	b.eq	2154 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2b4>  // b.none
    2054:	str	x2, [sp, #192]
    2058:	ldr	x2, [x0, #16]
    205c:	str	x2, [sp, #208]
    2060:	ldr	x2, [x0, #8]
    2064:	str	x2, [sp, #200]
    2068:	stp	x1, xzr, [x0]
    206c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    2070:	strb	wzr, [x0, #16]
    2074:	ldr	x0, [sp, #200]
    2078:	cmp	x0, x2
    207c:	b.eq	2180 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2e0>  // b.none
    2080:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2084:	add	x1, x1, #0x0
    2088:	mov	x2, #0x1                   	// #1
    208c:	mov	x0, x24
    2090:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2094:	mov	x1, x0
    2098:	add	x2, x20, #0x10
    209c:	str	x2, [x20]
    20a0:	ldr	x2, [x1], #16
    20a4:	cmp	x2, x1
    20a8:	b.eq	2160 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2c0>  // b.none
    20ac:	ldr	x3, [x0, #16]
    20b0:	str	x2, [x20]
    20b4:	str	x3, [x20, #16]
    20b8:	ldr	x2, [x0, #8]
    20bc:	str	x2, [x20, #8]
    20c0:	stp	x1, xzr, [x0]
    20c4:	add	x24, x24, #0x10
    20c8:	strb	wzr, [x0, #16]
    20cc:	ldr	x0, [sp, #192]
    20d0:	cmp	x0, x24
    20d4:	b.eq	20dc <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x23c>  // b.none
    20d8:	bl	0 <_ZdlPv>
    20dc:	ldr	x0, [sp, #160]
    20e0:	add	x23, x23, #0x10
    20e4:	cmp	x0, x23
    20e8:	b.eq	20f0 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x250>  // b.none
    20ec:	bl	0 <_ZdlPv>
    20f0:	ldr	x0, [sp, #128]
    20f4:	add	x22, x22, #0x10
    20f8:	cmp	x0, x22
    20fc:	b.eq	2104 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x264>  // b.none
    2100:	bl	0 <_ZdlPv>
    2104:	ldr	x0, [sp, #96]
    2108:	add	x21, x21, #0x10
    210c:	cmp	x0, x21
    2110:	b.eq	2118 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x278>  // b.none
    2114:	bl	0 <_ZdlPv>
    2118:	mov	x0, x20
    211c:	ldp	x19, x20, [sp, #16]
    2120:	ldp	x21, x22, [sp, #32]
    2124:	ldp	x23, x24, [sp, #48]
    2128:	ldp	x29, x30, [sp], #224
    212c:	ret
    2130:	ldp	x2, x3, [x0, #16]
    2134:	stp	x2, x3, [sp, #144]
    2138:	b	1f20 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x80>
    213c:	cmp	x19, #0x1
    2140:	b.eq	2190 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2f0>  // b.none
    2144:	mov	x2, x1
    2148:	cbnz	x19, 2198 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2f8>
    214c:	ldr	x25, [sp, #64]
    2150:	b	1fec <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x14c>
    2154:	ldp	x2, x3, [x0, #16]
    2158:	stp	x2, x3, [sp, #208]
    215c:	b	2060 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1c0>
    2160:	ldp	x2, x3, [x0, #16]
    2164:	stp	x2, x3, [x20, #16]
    2168:	b	20b8 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x218>
    216c:	mov	x0, x23
    2170:	mov	x2, #0x0                   	// #0
    2174:	mov	x1, #0x0                   	// #0
    2178:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    217c:	b	203c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x19c>
    2180:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2184:	add	x0, x0, #0x0
    2188:	str	x25, [sp, #64]
    218c:	bl	0 <_ZSt20__throw_length_errorPKc>
    2190:	ldr	x25, [sp, #64]
    2194:	b	1f4c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xac>
    2198:	mov	x0, x1
    219c:	b	1fd4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x134>

00000000000021a0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev>:
    21a0:	stp	x29, x30, [sp, #-224]!
    21a4:	mov	x29, sp
    21a8:	stp	x19, x20, [sp, #16]
    21ac:	mov	x19, x0
    21b0:	mov	x20, x8
    21b4:	ldr	x0, [x0, #24]
    21b8:	stp	x21, x22, [sp, #32]
    21bc:	add	x21, sp, #0x60
    21c0:	stp	x23, x24, [sp, #48]
    21c4:	mov	x8, x21
    21c8:	ldr	x1, [x0]
    21cc:	ldr	x1, [x1, #40]
    21d0:	blr	x1
    21d4:	ldr	x1, [sp, #104]
    21d8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    21dc:	cmp	x1, x0
    21e0:	b.eq	2480 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2e0>  // b.none
    21e4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    21e8:	add	x1, x1, #0x0
    21ec:	mov	x2, #0x1                   	// #1
    21f0:	mov	x0, x21
    21f4:	add	x22, sp, #0x80
    21f8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    21fc:	mov	x1, x0
    2200:	add	x2, x22, #0x10
    2204:	str	x2, [sp, #128]
    2208:	ldr	x2, [x1], #16
    220c:	cmp	x2, x1
    2210:	b.eq	2430 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x290>  // b.none
    2214:	ldr	x3, [x0, #16]
    2218:	str	x2, [sp, #128]
    221c:	str	x3, [sp, #144]
    2220:	strb	wzr, [x0, #16]
    2224:	ldr	x2, [x0, #8]
    2228:	str	x2, [sp, #136]
    222c:	ldr	w2, [x19, #32]
    2230:	stp	x1, xzr, [x0]
    2234:	cbnz	x2, 225c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xbc>
    2238:	add	x23, sp, #0xa0
    223c:	add	x24, sp, #0xc0
    2240:	add	x1, x23, #0x10
    2244:	mov	w0, #0x30                  	// #48
    2248:	str	x1, [sp, #160]
    224c:	add	x2, x23, #0x10
    2250:	mov	x19, #0x1                   	// #1
    2254:	strb	w0, [sp, #176]
    2258:	b	22ec <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x14c>
    225c:	add	x24, sp, #0xc0
    2260:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    2264:	str	x25, [sp, #64]
    2268:	add	x25, x24, #0x15
    226c:	movk	x3, #0xcccd
    2270:	umulh	x1, x2, x3
    2274:	cmp	x2, #0x9
    2278:	lsr	x1, x1, #3
    227c:	add	x0, x1, x1, lsl #2
    2280:	sub	x0, x2, x0, lsl #1
    2284:	mov	x2, x1
    2288:	add	w0, w0, #0x30
    228c:	and	w0, w0, #0xff
    2290:	strb	w0, [x25, #-1]!
    2294:	b.hi	2270 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xd0>  // b.pmore
    2298:	add	x19, x24, #0x15
    229c:	add	x23, sp, #0xa0
    22a0:	sub	x19, x19, x25
    22a4:	add	x1, x23, #0x10
    22a8:	str	x19, [sp, #88]
    22ac:	cmp	x19, #0xf
    22b0:	str	x1, [sp, #160]
    22b4:	b.ls	243c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x29c>  // b.plast
    22b8:	add	x1, sp, #0x58
    22bc:	mov	x0, x23
    22c0:	mov	x2, #0x0                   	// #0
    22c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    22c8:	ldr	x1, [sp, #88]
    22cc:	str	x0, [sp, #160]
    22d0:	str	x1, [sp, #176]
    22d4:	mov	x2, x19
    22d8:	mov	x1, x25
    22dc:	bl	0 <memcpy>
    22e0:	ldr	x25, [sp, #64]
    22e4:	ldr	x19, [sp, #88]
    22e8:	ldr	x2, [sp, #160]
    22ec:	str	x19, [sp, #168]
    22f0:	strb	wzr, [x2, x19]
    22f4:	add	x0, x22, #0x10
    22f8:	mov	x6, #0xf                   	// #15
    22fc:	ldp	x3, x4, [sp, #128]
    2300:	ldp	x1, x2, [sp, #160]
    2304:	cmp	x3, x0
    2308:	ldr	x0, [sp, #144]
    230c:	add	x5, x4, x2
    2310:	csel	x0, x0, x6, ne  // ne = any
    2314:	cmp	x5, x0
    2318:	b.ls	2334 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x194>  // b.plast
    231c:	ldr	x0, [sp, #176]
    2320:	add	x7, x23, #0x10
    2324:	cmp	x1, x7
    2328:	csel	x0, x0, x6, ne  // ne = any
    232c:	cmp	x5, x0
    2330:	b.ls	246c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2cc>  // b.plast
    2334:	mov	x0, x22
    2338:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    233c:	mov	x1, x0
    2340:	add	x2, x24, #0x10
    2344:	str	x2, [sp, #192]
    2348:	ldr	x2, [x1], #16
    234c:	cmp	x2, x1
    2350:	b.eq	2454 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2b4>  // b.none
    2354:	str	x2, [sp, #192]
    2358:	ldr	x2, [x0, #16]
    235c:	str	x2, [sp, #208]
    2360:	ldr	x2, [x0, #8]
    2364:	str	x2, [sp, #200]
    2368:	stp	x1, xzr, [x0]
    236c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    2370:	strb	wzr, [x0, #16]
    2374:	ldr	x0, [sp, #200]
    2378:	cmp	x0, x2
    237c:	b.eq	2480 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2e0>  // b.none
    2380:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2384:	add	x1, x1, #0x0
    2388:	mov	x2, #0x1                   	// #1
    238c:	mov	x0, x24
    2390:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2394:	mov	x1, x0
    2398:	add	x2, x20, #0x10
    239c:	str	x2, [x20]
    23a0:	ldr	x2, [x1], #16
    23a4:	cmp	x2, x1
    23a8:	b.eq	2460 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2c0>  // b.none
    23ac:	ldr	x3, [x0, #16]
    23b0:	str	x2, [x20]
    23b4:	str	x3, [x20, #16]
    23b8:	ldr	x2, [x0, #8]
    23bc:	str	x2, [x20, #8]
    23c0:	stp	x1, xzr, [x0]
    23c4:	add	x24, x24, #0x10
    23c8:	strb	wzr, [x0, #16]
    23cc:	ldr	x0, [sp, #192]
    23d0:	cmp	x0, x24
    23d4:	b.eq	23dc <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x23c>  // b.none
    23d8:	bl	0 <_ZdlPv>
    23dc:	ldr	x0, [sp, #160]
    23e0:	add	x23, x23, #0x10
    23e4:	cmp	x0, x23
    23e8:	b.eq	23f0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x250>  // b.none
    23ec:	bl	0 <_ZdlPv>
    23f0:	ldr	x0, [sp, #128]
    23f4:	add	x22, x22, #0x10
    23f8:	cmp	x0, x22
    23fc:	b.eq	2404 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x264>  // b.none
    2400:	bl	0 <_ZdlPv>
    2404:	ldr	x0, [sp, #96]
    2408:	add	x21, x21, #0x10
    240c:	cmp	x0, x21
    2410:	b.eq	2418 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x278>  // b.none
    2414:	bl	0 <_ZdlPv>
    2418:	mov	x0, x20
    241c:	ldp	x19, x20, [sp, #16]
    2420:	ldp	x21, x22, [sp, #32]
    2424:	ldp	x23, x24, [sp, #48]
    2428:	ldp	x29, x30, [sp], #224
    242c:	ret
    2430:	ldp	x2, x3, [x0, #16]
    2434:	stp	x2, x3, [sp, #144]
    2438:	b	2220 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x80>
    243c:	cmp	x19, #0x1
    2440:	b.eq	2490 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2f0>  // b.none
    2444:	mov	x2, x1
    2448:	cbnz	x19, 2498 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2f8>
    244c:	ldr	x25, [sp, #64]
    2450:	b	22ec <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x14c>
    2454:	ldp	x2, x3, [x0, #16]
    2458:	stp	x2, x3, [sp, #208]
    245c:	b	2360 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1c0>
    2460:	ldp	x2, x3, [x0, #16]
    2464:	stp	x2, x3, [x20, #16]
    2468:	b	23b8 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x218>
    246c:	mov	x0, x23
    2470:	mov	x2, #0x0                   	// #0
    2474:	mov	x1, #0x0                   	// #0
    2478:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    247c:	b	233c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x19c>
    2480:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2484:	add	x0, x0, #0x0
    2488:	str	x25, [sp, #64]
    248c:	bl	0 <_ZSt20__throw_length_errorPKc>
    2490:	ldr	x25, [sp, #64]
    2494:	b	224c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xac>
    2498:	mov	x0, x1
    249c:	b	22d4 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x134>

00000000000024a0 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev>:
    24a0:	sub	sp, sp, #0x360
    24a4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    24a8:	add	x5, sp, #0xc8
    24ac:	add	x1, x1, #0x0
    24b0:	stp	x29, x30, [sp]
    24b4:	mov	x29, sp
    24b8:	stp	x19, x20, [sp, #16]
    24bc:	mov	x20, x0
    24c0:	mov	x0, x5
    24c4:	stp	x21, x22, [sp, #32]
    24c8:	add	x22, sp, #0x2c0
    24cc:	add	x21, sp, #0xf8
    24d0:	stp	x23, x24, [sp, #48]
    24d4:	mov	x24, x8
    24d8:	add	x23, sp, #0x2e0
    24dc:	stp	x25, x26, [sp, #64]
    24e0:	add	x26, sp, #0xe0
    24e4:	add	x19, sp, #0x158
    24e8:	stp	x27, x28, [sp, #80]
    24ec:	add	x28, sp, #0x188
    24f0:	add	x25, sp, #0x300
    24f4:	str	x5, [sp, #144]
    24f8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    24fc:	ldr	x0, [x20, #32]
    2500:	add	x10, sp, #0x1d0
    2504:	add	x11, sp, #0x1a0
    2508:	add	x2, sp, #0x170
    250c:	add	x12, sp, #0x140
    2510:	add	x4, sp, #0x128
    2514:	ldr	x1, [x0]
    2518:	add	x3, sp, #0x110
    251c:	stp	x4, x2, [sp, #112]
    2520:	mov	x8, x22
    2524:	add	x27, sp, #0x1b8
    2528:	ldr	x1, [x1, #40]
    252c:	stp	x12, x3, [sp, #128]
    2530:	stp	x10, x11, [sp, #176]
    2534:	blr	x1
    2538:	str	x26, [sp, #96]
    253c:	add	x7, sp, #0x1e8
    2540:	mov	x0, x26
    2544:	mov	x1, x22
    2548:	str	x7, [sp, #168]
    254c:	add	x26, sp, #0x320
    2550:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2554:	str	x21, [sp, #104]
    2558:	ldr	x5, [sp, #144]
    255c:	mov	x8, x21
    2560:	ldr	x0, [sp, #96]
    2564:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2568:	add	x21, x21, #0x0
    256c:	mov	x1, x0
    2570:	mov	x0, x5
    2574:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2578:	ldr	x3, [sp, #136]
    257c:	mov	x1, x21
    2580:	str	x3, [sp, #96]
    2584:	mov	x0, x3
    2588:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    258c:	ldp	x0, x8, [sp, #96]
    2590:	add	x9, sp, #0x200
    2594:	ldr	x4, [sp, #112]
    2598:	str	x9, [sp, #160]
    259c:	mov	x1, x0
    25a0:	mov	x0, x8
    25a4:	mov	x8, x4
    25a8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    25ac:	ldr	x0, [x20, #40]
    25b0:	add	x3, sp, #0x248
    25b4:	add	x6, sp, #0x230
    25b8:	add	x5, sp, #0x218
    25bc:	stp	x3, x6, [sp, #136]
    25c0:	mov	x8, x23
    25c4:	ldr	x1, [x0]
    25c8:	str	x5, [sp, #152]
    25cc:	ldr	x1, [x1, #40]
    25d0:	blr	x1
    25d4:	ldr	x12, [sp, #128]
    25d8:	mov	x1, x23
    25dc:	str	x12, [sp, #96]
    25e0:	mov	x0, x12
    25e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    25e8:	str	x19, [sp, #104]
    25ec:	ldr	x4, [sp, #112]
    25f0:	mov	x8, x19
    25f4:	ldr	x0, [sp, #96]
    25f8:	add	x19, sp, #0x340
    25fc:	mov	x1, x0
    2600:	mov	x0, x4
    2604:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2608:	ldr	x2, [sp, #120]
    260c:	mov	x1, x21
    2610:	str	x2, [sp, #96]
    2614:	mov	x0, x2
    2618:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    261c:	str	x28, [sp, #112]
    2620:	ldp	x0, x8, [sp, #96]
    2624:	mov	x1, x0
    2628:	mov	x0, x8
    262c:	mov	x8, x28
    2630:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2634:	ldr	x0, [x20, #48]
    2638:	add	x2, sp, #0x290
    263c:	add	x4, sp, #0x260
    2640:	stp	x2, x4, [sp, #120]
    2644:	mov	x8, x25
    2648:	ldr	x1, [x0]
    264c:	add	x28, sp, #0x278
    2650:	ldr	x1, [x1, #48]
    2654:	blr	x1
    2658:	ldr	x11, [sp, #184]
    265c:	mov	x1, x25
    2660:	str	x11, [sp, #96]
    2664:	mov	x0, x11
    2668:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    266c:	str	x27, [sp, #104]
    2670:	ldr	x12, [sp, #112]
    2674:	mov	x8, x27
    2678:	ldr	x0, [sp, #96]
    267c:	add	x27, sp, #0x2a8
    2680:	mov	x1, x0
    2684:	mov	x0, x12
    2688:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    268c:	ldr	x10, [sp, #176]
    2690:	mov	x1, x21
    2694:	str	x10, [sp, #96]
    2698:	mov	x0, x10
    269c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    26a0:	ldp	x0, x8, [sp, #96]
    26a4:	ldr	x7, [sp, #168]
    26a8:	str	x7, [sp, #112]
    26ac:	mov	x1, x0
    26b0:	mov	x0, x8
    26b4:	mov	x8, x7
    26b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    26bc:	ldr	x0, [x20, #56]
    26c0:	mov	x8, x26
    26c4:	ldr	x1, [x0]
    26c8:	ldr	x1, [x1, #48]
    26cc:	blr	x1
    26d0:	ldr	x9, [sp, #160]
    26d4:	mov	x1, x26
    26d8:	str	x9, [sp, #104]
    26dc:	mov	x0, x9
    26e0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    26e4:	ldp	x0, x7, [sp, #104]
    26e8:	ldr	x5, [sp, #152]
    26ec:	str	x5, [sp, #96]
    26f0:	mov	x8, x5
    26f4:	mov	x1, x0
    26f8:	mov	x0, x7
    26fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2700:	ldr	x6, [sp, #144]
    2704:	mov	x1, x21
    2708:	mov	x0, x6
    270c:	mov	x21, x6
    2710:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2714:	ldr	x3, [sp, #136]
    2718:	mov	x1, x21
    271c:	ldr	x8, [sp, #96]
    2720:	mov	x21, x3
    2724:	mov	x0, x8
    2728:	mov	x8, x3
    272c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2730:	ldr	x0, [x20, #64]
    2734:	mov	x8, x19
    2738:	ldr	x1, [x0]
    273c:	ldr	x1, [x1, #40]
    2740:	blr	x1
    2744:	ldr	x4, [sp, #128]
    2748:	mov	x1, x19
    274c:	add	x19, x19, #0x10
    2750:	mov	x20, x4
    2754:	mov	x0, x4
    2758:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    275c:	mov	x8, x28
    2760:	mov	x0, x21
    2764:	mov	x1, x20
    2768:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    276c:	ldr	x2, [sp, #120]
    2770:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2774:	add	x1, x1, #0x0
    2778:	mov	x21, x2
    277c:	mov	x0, x2
    2780:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2784:	mov	x1, x21
    2788:	mov	x0, x28
    278c:	mov	x8, x27
    2790:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2794:	mov	x0, x27
    2798:	mov	x8, x24
    279c:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    27a0:	ldr	x0, [sp, #832]
    27a4:	cmp	x0, x19
    27a8:	b.eq	27b0 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x310>  // b.none
    27ac:	bl	0 <_ZdlPv>
    27b0:	ldr	x0, [sp, #800]
    27b4:	add	x26, x26, #0x10
    27b8:	cmp	x0, x26
    27bc:	b.eq	27c4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x324>  // b.none
    27c0:	bl	0 <_ZdlPv>
    27c4:	ldr	x0, [sp, #768]
    27c8:	add	x25, x25, #0x10
    27cc:	cmp	x0, x25
    27d0:	b.eq	27d8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x338>  // b.none
    27d4:	bl	0 <_ZdlPv>
    27d8:	ldr	x0, [sp, #736]
    27dc:	add	x23, x23, #0x10
    27e0:	cmp	x0, x23
    27e4:	b.eq	27ec <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x34c>  // b.none
    27e8:	bl	0 <_ZdlPv>
    27ec:	ldr	x0, [sp, #704]
    27f0:	add	x22, x22, #0x10
    27f4:	cmp	x0, x22
    27f8:	b.eq	2800 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x360>  // b.none
    27fc:	bl	0 <_ZdlPv>
    2800:	mov	x0, x24
    2804:	ldp	x29, x30, [sp]
    2808:	ldp	x19, x20, [sp, #16]
    280c:	ldp	x21, x22, [sp, #32]
    2810:	ldp	x23, x24, [sp, #48]
    2814:	ldp	x25, x26, [sp, #64]
    2818:	ldp	x27, x28, [sp, #80]
    281c:	add	sp, sp, #0x360
    2820:	ret
    2824:	nop

0000000000002828 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev>:
    2828:	stp	x29, x30, [sp, #-400]!
    282c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2830:	add	x1, x1, #0x0
    2834:	mov	x29, sp
    2838:	add	x2, sp, #0x90
    283c:	stp	x23, x24, [sp, #48]
    2840:	mov	x24, x0
    2844:	mov	x0, x2
    2848:	stp	x19, x20, [sp, #16]
    284c:	add	x19, sp, #0x150
    2850:	add	x20, sp, #0x170
    2854:	stp	x21, x22, [sp, #32]
    2858:	mov	x21, x8
    285c:	add	x22, sp, #0xf0
    2860:	stp	x25, x26, [sp, #64]
    2864:	add	x23, sp, #0x108
    2868:	add	x26, sp, #0x120
    286c:	stp	x27, x28, [sp, #80]
    2870:	add	x27, sp, #0xc0
    2874:	add	x28, sp, #0xd8
    2878:	str	x2, [sp, #104]
    287c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2880:	ldr	x0, [x24, #32]
    2884:	add	x3, sp, #0xa8
    2888:	str	x3, [sp, #96]
    288c:	mov	x8, x19
    2890:	add	x25, sp, #0x138
    2894:	ldr	x1, [x0]
    2898:	ldr	x1, [x1, #16]
    289c:	blr	x1
    28a0:	ldr	x3, [sp, #96]
    28a4:	mov	x1, x19
    28a8:	mov	x0, x3
    28ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    28b0:	ldp	x0, x2, [sp, #96]
    28b4:	mov	x8, x27
    28b8:	mov	x1, x0
    28bc:	mov	x0, x2
    28c0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    28c4:	mov	x0, x28
    28c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    28cc:	add	x1, x1, #0x0
    28d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    28d4:	mov	x1, x28
    28d8:	mov	x0, x27
    28dc:	mov	x8, x22
    28e0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    28e4:	ldr	x0, [x24, #40]
    28e8:	mov	x8, x20
    28ec:	ldr	x1, [x0]
    28f0:	ldr	x1, [x1, #40]
    28f4:	blr	x1
    28f8:	mov	x1, x20
    28fc:	mov	x0, x23
    2900:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2904:	mov	x8, x26
    2908:	mov	x1, x23
    290c:	mov	x0, x22
    2910:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2914:	mov	x0, x25
    2918:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    291c:	add	x1, x1, #0x0
    2920:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2924:	ldrb	w1, [sp, #304]
    2928:	cbz	w1, 2934 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x10c>
    292c:	ldrb	w2, [sp, #328]
    2930:	cbnz	w2, 2998 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x170>
    2934:	add	x22, sp, #0x70
    2938:	mov	w0, #0x100                 	// #256
    293c:	stp	xzr, xzr, [sp, #112]
    2940:	strh	w0, [sp, #128]
    2944:	mov	x0, x22
    2948:	mov	x8, x21
    294c:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    2950:	add	x20, x20, #0x10
    2954:	ldr	x0, [sp, #368]
    2958:	cmp	x0, x20
    295c:	b.eq	2964 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x13c>  // b.none
    2960:	bl	0 <_ZdlPv>
    2964:	ldr	x0, [sp, #336]
    2968:	add	x19, x19, #0x10
    296c:	cmp	x0, x19
    2970:	b.eq	2978 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x150>  // b.none
    2974:	bl	0 <_ZdlPv>
    2978:	mov	x0, x21
    297c:	ldp	x19, x20, [sp, #16]
    2980:	ldp	x21, x22, [sp, #32]
    2984:	ldp	x23, x24, [sp, #48]
    2988:	ldp	x25, x26, [sp, #64]
    298c:	ldp	x27, x28, [sp, #80]
    2990:	ldp	x29, x30, [sp], #400
    2994:	ret
    2998:	cmp	w1, #0x1
    299c:	b.eq	2a08 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x1e0>  // b.none
    29a0:	cmp	w2, #0x1
    29a4:	b.eq	2a20 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x1f8>  // b.none
    29a8:	ldrb	w0, [sp, #305]
    29ac:	cmp	w0, #0x1
    29b0:	b.eq	2a38 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x210>  // b.none
    29b4:	mov	w1, #0x2                   	// #2
    29b8:	ldrb	w0, [sp, #329]
    29bc:	cmp	w0, #0x1
    29c0:	b.eq	2a40 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x218>  // b.none
    29c4:	mov	w2, #0x2                   	// #2
    29c8:	add	x22, sp, #0x70
    29cc:	stp	x26, x25, [sp, #112]
    29d0:	mov	x0, x22
    29d4:	strb	w1, [sp, #128]
    29d8:	strb	w2, [sp, #129]
    29dc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    29e0:	tst	w0, #0xff
    29e4:	b.ne	2944 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x11c>  // b.any
    29e8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    29ec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    29f0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    29f4:	add	x3, x3, #0x0
    29f8:	add	x1, x1, #0x0
    29fc:	add	x0, x0, #0x0
    2a00:	mov	w2, #0xb8                  	// #184
    2a04:	bl	0 <__assert_fail>
    2a08:	ldp	x2, x3, [x25]
    2a0c:	add	x22, sp, #0x70
    2a10:	ldr	x0, [x25, #16]
    2a14:	stp	x2, x3, [sp, #112]
    2a18:	str	x0, [sp, #128]
    2a1c:	b	2944 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x11c>
    2a20:	ldp	x2, x3, [x26]
    2a24:	add	x22, sp, #0x70
    2a28:	ldr	x0, [x26, #16]
    2a2c:	stp	x2, x3, [sp, #112]
    2a30:	str	x0, [sp, #128]
    2a34:	b	2944 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x11c>
    2a38:	ldr	x26, [sp, #288]
    2a3c:	b	29b8 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x190>
    2a40:	ldr	x25, [sp, #312]
    2a44:	b	29c8 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x1a0>

0000000000002a48 <_ZNK4llvm5RecTy4dumpEv>:
    2a48:	stp	x29, x30, [sp, #-80]!
    2a4c:	mov	x29, sp
    2a50:	stp	x19, x20, [sp, #16]
    2a54:	mov	x20, x0
    2a58:	add	x19, sp, #0x30
    2a5c:	str	x21, [sp, #32]
    2a60:	bl	0 <_ZN4llvm4errsEv>
    2a64:	ldr	x1, [x20]
    2a68:	mov	x8, x19
    2a6c:	mov	x21, x0
    2a70:	mov	x0, x20
    2a74:	add	x19, x19, #0x10
    2a78:	ldr	x1, [x1, #16]
    2a7c:	blr	x1
    2a80:	ldp	x1, x2, [sp, #48]
    2a84:	mov	x0, x21
    2a88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2a8c:	ldr	x0, [sp, #48]
    2a90:	cmp	x0, x19
    2a94:	b.eq	2a9c <_ZNK4llvm5RecTy4dumpEv+0x54>  // b.none
    2a98:	bl	0 <_ZdlPv>
    2a9c:	ldp	x19, x20, [sp, #16]
    2aa0:	ldr	x21, [sp, #32]
    2aa4:	ldp	x29, x30, [sp], #80
    2aa8:	ret
    2aac:	nop

0000000000002ab0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>:
    2ab0:	stp	x29, x30, [sp, #-64]!
    2ab4:	mov	x29, sp
    2ab8:	str	x1, [sp, #56]
    2abc:	stp	x19, x20, [sp, #16]
    2ac0:	add	x19, x0, #0x28
    2ac4:	ldr	w20, [x0, #32]
    2ac8:	str	x21, [sp, #32]
    2acc:	ldr	x21, [sp, #56]
    2ad0:	mov	x1, x20
    2ad4:	add	x20, x19, x20, lsl #3
    2ad8:	mov	x0, x21
    2adc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    2ae0:	cmp	x19, x20
    2ae4:	b.eq	2afc <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE+0x4c>  // b.none
    2ae8:	ldr	x1, [x19], #8
    2aec:	mov	x0, x21
    2af0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2af4:	cmp	x20, x19
    2af8:	b.ne	2ae8 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE+0x38>  // b.any
    2afc:	ldp	x19, x20, [sp, #16]
    2b00:	ldr	x21, [sp, #32]
    2b04:	ldp	x29, x30, [sp], #64
    2b08:	ret
    2b0c:	nop

0000000000002b10 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>:
    2b10:	ldr	w2, [x0, #32]
    2b14:	add	x3, x0, #0x28
    2b18:	lsl	x2, x2, #3
    2b1c:	add	x7, x3, x2
    2b20:	cmp	xzr, x2, asr #5
    2b24:	asr	x4, x2, #3
    2b28:	asr	x2, x2, #5
    2b2c:	b.eq	2c70 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x160>  // b.none
    2b30:	add	x2, x0, x2, lsl #5
    2b34:	mov	w5, #0x18                  	// #24
    2b38:	add	x2, x2, #0x28
    2b3c:	ldr	x4, [x3]
    2b40:	cmp	x1, x4
    2b44:	b.eq	2b78 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>  // b.none
    2b48:	ldr	x0, [x4, #88]
    2b4c:	ldr	w4, [x4, #96]
    2b50:	umaddl	x4, w4, w5, x0
    2b54:	cmp	x0, x4
    2b58:	b.ne	2b68 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x58>  // b.any
    2b5c:	b	2b84 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x74>
    2b60:	cmp	x4, x0
    2b64:	b.eq	2b84 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x74>  // b.none
    2b68:	ldr	x6, [x0]
    2b6c:	add	x0, x0, #0x18
    2b70:	cmp	x1, x6
    2b74:	b.ne	2b60 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x50>  // b.any
    2b78:	cmp	x7, x3
    2b7c:	cset	w0, ne  // ne = any
    2b80:	ret
    2b84:	ldr	x4, [x3, #8]
    2b88:	add	x8, x3, #0x8
    2b8c:	cmp	x1, x4
    2b90:	b.eq	2bc4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>  // b.none
    2b94:	ldr	w6, [x4, #96]
    2b98:	ldr	x0, [x4, #88]
    2b9c:	umaddl	x6, w6, w5, x0
    2ba0:	cmp	x0, x6
    2ba4:	b.ne	2bb4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xa4>  // b.any
    2ba8:	b	2bd0 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xc0>
    2bac:	cmp	x6, x0
    2bb0:	b.eq	2bd0 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xc0>  // b.none
    2bb4:	ldr	x4, [x0]
    2bb8:	add	x0, x0, #0x18
    2bbc:	cmp	x1, x4
    2bc0:	b.ne	2bac <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x9c>  // b.any
    2bc4:	cmp	x7, x8
    2bc8:	cset	w0, ne  // ne = any
    2bcc:	ret
    2bd0:	ldr	x4, [x3, #16]
    2bd4:	add	x8, x3, #0x10
    2bd8:	cmp	x1, x4
    2bdc:	b.eq	2bc4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>  // b.none
    2be0:	ldr	w6, [x4, #96]
    2be4:	ldr	x0, [x4, #88]
    2be8:	umaddl	x6, w6, w5, x0
    2bec:	cmp	x0, x6
    2bf0:	b.ne	2c00 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xf0>  // b.any
    2bf4:	b	2c14 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x104>
    2bf8:	cmp	x6, x0
    2bfc:	b.eq	2c14 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x104>  // b.none
    2c00:	ldr	x4, [x0]
    2c04:	add	x0, x0, #0x18
    2c08:	cmp	x1, x4
    2c0c:	b.ne	2bf8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xe8>  // b.any
    2c10:	b	2bc4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>
    2c14:	ldr	x4, [x3, #24]
    2c18:	add	x8, x3, #0x18
    2c1c:	cmp	x1, x4
    2c20:	b.eq	2bc4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>  // b.none
    2c24:	ldr	w6, [x4, #96]
    2c28:	ldr	x0, [x4, #88]
    2c2c:	umaddl	x6, w6, w5, x0
    2c30:	cmp	x0, x6
    2c34:	b.ne	2c44 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x134>  // b.any
    2c38:	b	2c58 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x148>
    2c3c:	cmp	x6, x0
    2c40:	b.eq	2c58 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x148>  // b.none
    2c44:	ldr	x4, [x0]
    2c48:	add	x0, x0, #0x18
    2c4c:	cmp	x1, x4
    2c50:	b.ne	2c3c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x12c>  // b.any
    2c54:	b	2bc4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb4>
    2c58:	add	x3, x3, #0x20
    2c5c:	cmp	x3, x2
    2c60:	b.ne	2b3c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x2c>  // b.any
    2c64:	sub	x4, x7, x3
    2c68:	asr	x4, x4, #3
    2c6c:	nop
    2c70:	cmp	x4, #0x2
    2c74:	b.eq	2cdc <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1cc>  // b.none
    2c78:	cmp	x4, #0x3
    2c7c:	b.eq	2d20 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x210>  // b.none
    2c80:	cmp	x4, #0x1
    2c84:	b.eq	2c94 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x184>  // b.none
    2c88:	mov	w0, #0x0                   	// #0
    2c8c:	ret
    2c90:	add	x3, x3, #0x8
    2c94:	ldr	x2, [x3]
    2c98:	cmp	x1, x2
    2c9c:	b.eq	2b78 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>  // b.none
    2ca0:	ldr	w4, [x2, #96]
    2ca4:	mov	w5, #0x18                  	// #24
    2ca8:	ldr	x0, [x2, #88]
    2cac:	umaddl	x4, w4, w5, x0
    2cb0:	cmp	x0, x4
    2cb4:	b.ne	2cc4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1b4>  // b.any
    2cb8:	b	2c88 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x178>
    2cbc:	cmp	x4, x0
    2cc0:	b.eq	2c88 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x178>  // b.none
    2cc4:	ldr	x2, [x0]
    2cc8:	add	x0, x0, #0x18
    2ccc:	cmp	x1, x2
    2cd0:	b.ne	2cbc <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1ac>  // b.any
    2cd4:	b	2b78 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>
    2cd8:	add	x3, x3, #0x8
    2cdc:	ldr	x2, [x3]
    2ce0:	cmp	x1, x2
    2ce4:	b.eq	2b78 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>  // b.none
    2ce8:	ldr	w4, [x2, #96]
    2cec:	mov	w5, #0x18                  	// #24
    2cf0:	ldr	x0, [x2, #88]
    2cf4:	umaddl	x4, w4, w5, x0
    2cf8:	cmp	x0, x4
    2cfc:	b.ne	2d0c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1fc>  // b.any
    2d00:	b	2c90 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x180>
    2d04:	cmp	x4, x0
    2d08:	b.eq	2c90 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x180>  // b.none
    2d0c:	ldr	x2, [x0]
    2d10:	add	x0, x0, #0x18
    2d14:	cmp	x1, x2
    2d18:	b.ne	2d04 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1f4>  // b.any
    2d1c:	b	2b78 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>
    2d20:	ldr	x2, [x3]
    2d24:	cmp	x1, x2
    2d28:	b.eq	2b78 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>  // b.none
    2d2c:	ldr	w4, [x2, #96]
    2d30:	mov	w5, #0x18                  	// #24
    2d34:	ldr	x0, [x2, #88]
    2d38:	umaddl	x4, w4, w5, x0
    2d3c:	cmp	x0, x4
    2d40:	b.ne	2d50 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x240>  // b.any
    2d44:	b	2cd8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c8>
    2d48:	cmp	x4, x0
    2d4c:	b.eq	2cd8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c8>  // b.none
    2d50:	ldr	x2, [x0]
    2d54:	add	x0, x0, #0x18
    2d58:	cmp	x1, x2
    2d5c:	b.ne	2d48 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x238>  // b.any
    2d60:	b	2b78 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x68>
    2d64:	nop

0000000000002d68 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
    2d68:	cmp	x0, x1
    2d6c:	b.eq	2e44 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xdc>  // b.none
    2d70:	stp	x29, x30, [sp, #-48]!
    2d74:	mov	x29, sp
    2d78:	stp	x19, x20, [sp, #16]
    2d7c:	cbz	x1, 2f00 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x198>
    2d80:	ldr	w2, [x1, #8]
    2d84:	mov	x20, x0
    2d88:	mov	w0, #0x0                   	// #0
    2d8c:	cmp	w2, #0x7
    2d90:	b.eq	2da0 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x38>  // b.none
    2d94:	ldp	x19, x20, [sp, #16]
    2d98:	ldp	x29, x30, [sp], #48
    2d9c:	ret
    2da0:	ldr	w0, [x1, #32]
    2da4:	add	x19, x1, #0x28
    2da8:	stp	x21, x22, [sp, #32]
    2dac:	lsl	x0, x0, #3
    2db0:	add	x22, x19, x0
    2db4:	cmp	xzr, x0, asr #5
    2db8:	asr	x2, x0, #3
    2dbc:	asr	x0, x0, #5
    2dc0:	b.eq	2e54 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xec>  // b.none
    2dc4:	add	x0, x1, x0, lsl #5
    2dc8:	add	x21, x0, #0x28
    2dcc:	b	2e18 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xb0>
    2dd0:	ldr	x1, [x19, #8]
    2dd4:	mov	x0, x20
    2dd8:	bl	2b10 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2ddc:	tst	w0, #0xff
    2de0:	b.eq	2e78 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x110>  // b.none
    2de4:	ldr	x1, [x19, #16]
    2de8:	mov	x0, x20
    2dec:	bl	2b10 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2df0:	tst	w0, #0xff
    2df4:	b.eq	2e8c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x124>  // b.none
    2df8:	ldr	x1, [x19, #24]
    2dfc:	mov	x0, x20
    2e00:	bl	2b10 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2e04:	tst	w0, #0xff
    2e08:	b.eq	2ea0 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x138>  // b.none
    2e0c:	add	x19, x19, #0x20
    2e10:	cmp	x21, x19
    2e14:	b.eq	2e4c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xe4>  // b.none
    2e18:	ldr	x1, [x19]
    2e1c:	mov	x0, x20
    2e20:	bl	2b10 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2e24:	tst	w0, #0xff
    2e28:	b.ne	2dd0 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x68>  // b.any
    2e2c:	cmp	x22, x19
    2e30:	cset	w0, eq  // eq = none
    2e34:	ldp	x19, x20, [sp, #16]
    2e38:	ldp	x21, x22, [sp, #32]
    2e3c:	ldp	x29, x30, [sp], #48
    2e40:	ret
    2e44:	mov	w0, #0x1                   	// #1
    2e48:	ret
    2e4c:	sub	x2, x22, x19
    2e50:	asr	x2, x2, #3
    2e54:	cmp	x2, #0x2
    2e58:	b.eq	2ecc <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x164>  // b.none
    2e5c:	cmp	x2, #0x3
    2e60:	b.eq	2eb4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x14c>  // b.none
    2e64:	cmp	x2, #0x1
    2e68:	b.eq	2ee4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x17c>  // b.none
    2e6c:	mov	w0, #0x1                   	// #1
    2e70:	ldp	x21, x22, [sp, #32]
    2e74:	b	2d94 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    2e78:	add	x19, x19, #0x8
    2e7c:	cmp	x22, x19
    2e80:	cset	w0, eq  // eq = none
    2e84:	ldp	x21, x22, [sp, #32]
    2e88:	b	2d94 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    2e8c:	add	x19, x19, #0x10
    2e90:	cmp	x22, x19
    2e94:	cset	w0, eq  // eq = none
    2e98:	ldp	x21, x22, [sp, #32]
    2e9c:	b	2d94 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    2ea0:	add	x19, x19, #0x18
    2ea4:	cmp	x22, x19
    2ea8:	cset	w0, eq  // eq = none
    2eac:	ldp	x21, x22, [sp, #32]
    2eb0:	b	2d94 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    2eb4:	ldr	x1, [x19]
    2eb8:	mov	x0, x20
    2ebc:	bl	2b10 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2ec0:	tst	w0, #0xff
    2ec4:	b.eq	2e2c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xc4>  // b.none
    2ec8:	add	x19, x19, #0x8
    2ecc:	ldr	x1, [x19]
    2ed0:	mov	x0, x20
    2ed4:	bl	2b10 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2ed8:	tst	w0, #0xff
    2edc:	b.eq	2e2c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xc4>  // b.none
    2ee0:	add	x19, x19, #0x8
    2ee4:	ldr	x1, [x19]
    2ee8:	mov	x0, x20
    2eec:	bl	2b10 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    2ef0:	ands	w0, w0, #0xff
    2ef4:	b.eq	2e2c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xc4>  // b.none
    2ef8:	ldp	x21, x22, [sp, #32]
    2efc:	b	2d94 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x2c>
    2f00:	stp	x21, x22, [sp, #32]
    2f04:	bl	658 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

0000000000002f08 <_ZNK4llvm11RecordRecTy7typeIsAEPKNS_5RecTyE>:
    2f08:	b	2d68 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE>
    2f0c:	nop

0000000000002f10 <_ZNK4llvm4Init4dumpEv>:
    2f10:	stp	x29, x30, [sp, #-80]!
    2f14:	mov	x29, sp
    2f18:	stp	x19, x20, [sp, #16]
    2f1c:	mov	x20, x0
    2f20:	add	x19, sp, #0x30
    2f24:	str	x21, [sp, #32]
    2f28:	bl	0 <_ZN4llvm4errsEv>
    2f2c:	ldr	x1, [x20]
    2f30:	mov	x8, x19
    2f34:	mov	x21, x0
    2f38:	mov	x0, x20
    2f3c:	add	x19, x19, #0x10
    2f40:	ldr	x1, [x1, #40]
    2f44:	blr	x1
    2f48:	ldp	x1, x2, [sp, #48]
    2f4c:	mov	x0, x21
    2f50:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2f54:	ldr	x0, [sp, #48]
    2f58:	cmp	x0, x19
    2f5c:	b.eq	2f64 <_ZNK4llvm4Init4dumpEv+0x54>  // b.none
    2f60:	bl	0 <_ZdlPv>
    2f64:	ldp	x19, x20, [sp, #16]
    2f68:	ldr	x21, [sp, #32]
    2f6c:	ldp	x29, x30, [sp], #80
    2f70:	ret
    2f74:	nop

0000000000002f78 <_ZN4llvm9UnsetInit3getEv>:
    2f78:	stp	x29, x30, [sp, #-48]!
    2f7c:	mov	x29, sp
    2f80:	stp	x19, x20, [sp, #16]
    2f84:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2f88:	add	x20, x19, #0x0
    2f8c:	ldarb	w0, [x20]
    2f90:	tbz	w0, #0, 2fa8 <_ZN4llvm9UnsetInit3getEv+0x30>
    2f94:	add	x0, x19, #0x0
    2f98:	add	x0, x0, #0x8
    2f9c:	ldp	x19, x20, [sp, #16]
    2fa0:	ldp	x29, x30, [sp], #48
    2fa4:	ret
    2fa8:	mov	x0, x20
    2fac:	bl	0 <__cxa_guard_acquire>
    2fb0:	cbz	w0, 2f94 <_ZN4llvm9UnsetInit3getEv+0x1c>
    2fb4:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2fb8:	mov	w1, #0x18                  	// #24
    2fbc:	mov	x0, x20
    2fc0:	strh	w1, [x20, #16]
    2fc4:	ldr	x2, [x2]
    2fc8:	str	x21, [sp, #32]
    2fcc:	add	x21, x20, #0x8
    2fd0:	add	x2, x2, #0x10
    2fd4:	str	x2, [x20, #8]
    2fd8:	bl	0 <__cxa_guard_release>
    2fdc:	mov	x1, x21
    2fe0:	adrp	x2, 0 <__dso_handle>
    2fe4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    2fe8:	add	x2, x2, #0x0
    2fec:	add	x0, x0, #0x0
    2ff0:	bl	0 <__cxa_atexit>
    2ff4:	add	x0, x19, #0x0
    2ff8:	add	x0, x0, #0x8
    2ffc:	ldp	x19, x20, [sp, #16]
    3000:	ldr	x21, [sp, #32]
    3004:	ldp	x29, x30, [sp], #48
    3008:	ret
    300c:	nop

0000000000003010 <_ZN4llvm7BitInit3getEb>:
    3010:	stp	x29, x30, [sp, #-64]!
    3014:	mov	x29, sp
    3018:	stp	x19, x20, [sp, #16]
    301c:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3020:	stp	x21, x22, [sp, #32]
    3024:	add	x21, x19, #0x0
    3028:	and	w22, w0, #0xff
    302c:	add	x20, x21, #0x58
    3030:	ldarb	w0, [x20]
    3034:	tbz	w0, #0, 306c <_ZN4llvm7BitInit3getEb+0x5c>
    3038:	add	x21, x19, #0x0
    303c:	add	x20, x21, #0x60
    3040:	ldarb	w0, [x20]
    3044:	tbz	w0, #0, 30e0 <_ZN4llvm7BitInit3getEb+0xd0>
    3048:	add	x19, x19, #0x0
    304c:	cmp	w22, #0x0
    3050:	add	x0, x19, #0x38
    3054:	add	x19, x19, #0x18
    3058:	csel	x0, x19, x0, ne  // ne = any
    305c:	ldp	x19, x20, [sp, #16]
    3060:	ldp	x21, x22, [sp, #32]
    3064:	ldp	x29, x30, [sp], #64
    3068:	ret
    306c:	mov	x0, x20
    3070:	bl	0 <__cxa_guard_acquire>
    3074:	cbz	w0, 3038 <_ZN4llvm7BitInit3getEb+0x28>
    3078:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    307c:	adrp	x1, 428 <_ZNK4llvm10CondOpInit10isCompleteEv+0x88>
    3080:	mov	w4, #0x2                   	// #2
    3084:	mov	w3, #0x1                   	// #1
    3088:	ldr	x2, [x2]
    308c:	mov	x0, x20
    3090:	ldr	x1, [x1]
    3094:	add	x2, x2, #0x10
    3098:	str	x2, [x21, #24]
    309c:	strh	w4, [x21, #32]
    30a0:	str	x1, [x21, #40]
    30a4:	strb	w3, [x21, #48]
    30a8:	str	x23, [sp, #48]
    30ac:	bl	0 <__cxa_guard_release>
    30b0:	add	x23, x21, #0x18
    30b4:	add	x21, x19, #0x0
    30b8:	mov	x1, x23
    30bc:	add	x20, x21, #0x60
    30c0:	adrp	x2, 0 <__dso_handle>
    30c4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    30c8:	add	x2, x2, #0x0
    30cc:	add	x0, x0, #0x0
    30d0:	bl	0 <__cxa_atexit>
    30d4:	ldr	x23, [sp, #48]
    30d8:	ldarb	w0, [x20]
    30dc:	tbnz	w0, #0, 3048 <_ZN4llvm7BitInit3getEb+0x38>
    30e0:	mov	x0, x20
    30e4:	bl	0 <__cxa_guard_acquire>
    30e8:	cbz	w0, 3048 <_ZN4llvm7BitInit3getEb+0x38>
    30ec:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    30f0:	adrp	x1, 428 <_ZNK4llvm10CondOpInit10isCompleteEv+0x88>
    30f4:	mov	w3, #0x2                   	// #2
    30f8:	mov	x0, x20
    30fc:	ldr	x2, [x2]
    3100:	str	x23, [sp, #48]
    3104:	ldr	x1, [x1]
    3108:	add	x2, x2, #0x10
    310c:	add	x23, x21, #0x38
    3110:	str	x2, [x21, #56]
    3114:	strh	w3, [x21, #64]
    3118:	str	x1, [x21, #72]
    311c:	strb	wzr, [x21, #80]
    3120:	bl	0 <__cxa_guard_release>
    3124:	mov	x1, x23
    3128:	adrp	x2, 0 <__dso_handle>
    312c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3130:	add	x2, x2, #0x0
    3134:	add	x0, x0, #0x0
    3138:	bl	0 <__cxa_atexit>
    313c:	ldr	x23, [sp, #48]
    3140:	b	3048 <_ZN4llvm7BitInit3getEb+0x38>
    3144:	nop

0000000000003148 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>:
    3148:	stp	x29, x30, [sp, #-48]!
    314c:	mov	x2, x0
    3150:	mov	x29, sp
    3154:	stp	x19, x20, [sp, #16]
    3158:	add	x19, x0, #0x28
    315c:	ldr	w20, [x2, #32]
    3160:	mov	x0, x1
    3164:	str	x21, [sp, #32]
    3168:	mov	x21, x1
    316c:	mov	x1, x20
    3170:	add	x20, x19, x20, lsl #3
    3174:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    3178:	cmp	x19, x20
    317c:	b.eq	3194 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE+0x4c>  // b.none
    3180:	ldr	x1, [x19], #8
    3184:	mov	x0, x21
    3188:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    318c:	cmp	x20, x19
    3190:	b.ne	3180 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE+0x38>  // b.any
    3194:	ldp	x19, x20, [sp, #16]
    3198:	ldr	x21, [sp, #32]
    319c:	ldp	x29, x30, [sp], #48
    31a0:	ret
    31a4:	nop

00000000000031a8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>:
    31a8:	stp	x29, x30, [sp, #-48]!
    31ac:	mov	x29, sp
    31b0:	stp	x19, x20, [sp, #16]
    31b4:	mov	x20, x1
    31b8:	ldr	x1, [x0, #16]
    31bc:	stp	x21, x22, [sp, #32]
    31c0:	cbz	x1, 3224 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x7c>
    31c4:	ldr	w2, [x1, #8]
    31c8:	cmp	w2, #0x5
    31cc:	b.ne	3228 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x80>  // b.any
    31d0:	ldr	w21, [x0, #32]
    31d4:	add	x19, x0, #0x28
    31d8:	ldr	x22, [x1, #24]
    31dc:	mov	x0, x20
    31e0:	mov	x1, x21
    31e4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    31e8:	mov	x1, x22
    31ec:	mov	x0, x20
    31f0:	add	x21, x19, x21, lsl #3
    31f4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    31f8:	cmp	x19, x21
    31fc:	b.eq	3214 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x6c>  // b.none
    3200:	ldr	x1, [x19], #8
    3204:	mov	x0, x20
    3208:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    320c:	cmp	x21, x19
    3210:	b.ne	3200 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x58>  // b.any
    3214:	ldp	x19, x20, [sp, #16]
    3218:	ldp	x21, x22, [sp, #32]
    321c:	ldp	x29, x30, [sp], #48
    3220:	ret
    3224:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    3228:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    322c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3230:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3234:	add	x3, x3, #0x0
    3238:	add	x1, x1, #0x0
    323c:	add	x0, x0, #0x0
    3240:	mov	w2, #0x108                 	// #264
    3244:	bl	0 <__assert_fail>

0000000000003248 <_ZNK4llvm8ListInit18getElementAsRecordEj>:
    3248:	stp	x29, x30, [sp, #-64]!
    324c:	mov	x29, sp
    3250:	ldr	w2, [x0, #32]
    3254:	cmp	w2, w1
    3258:	b.ls	32a0 <_ZNK4llvm8ListInit18getElementAsRecordEj+0x58>  // b.plast
    325c:	add	x1, x0, w1, uxtw #3
    3260:	ldr	x0, [x1, #40]
    3264:	cbz	x0, 32c4 <_ZNK4llvm8ListInit18getElementAsRecordEj+0x7c>
    3268:	ldrb	w1, [x0, #8]
    326c:	cmp	w1, #0x6
    3270:	b.eq	3294 <_ZNK4llvm8ListInit18getElementAsRecordEj+0x4c>  // b.none
    3274:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3278:	add	x1, x1, #0x0
    327c:	str	x19, [sp, #16]
    3280:	add	x19, sp, #0x28
    3284:	mov	x0, x19
    3288:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    328c:	mov	x0, x19
    3290:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    3294:	ldr	x0, [x0, #24]
    3298:	ldp	x29, x30, [sp], #64
    329c:	ret
    32a0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    32a4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    32a8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    32ac:	add	x3, x3, #0x0
    32b0:	add	x1, x1, #0x0
    32b4:	add	x0, x0, #0x0
    32b8:	mov	w2, #0x27e                 	// #638
    32bc:	str	x19, [sp, #16]
    32c0:	bl	0 <__assert_fail>
    32c4:	str	x19, [sp, #16]
    32c8:	bl	6a8 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    32cc:	nop

00000000000032d0 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    32d0:	stp	x29, x30, [sp, #-48]!
    32d4:	mov	x2, x0
    32d8:	mov	x0, x1
    32dc:	mov	x29, sp
    32e0:	stp	x19, x20, [sp, #16]
    32e4:	mov	x19, x1
    32e8:	ldr	x20, [x2, #16]
    32ec:	str	x21, [sp, #32]
    32f0:	ldr	x21, [x2, #32]
    32f4:	ldrb	w1, [x2, #9]
    32f8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    32fc:	mov	x1, x21
    3300:	mov	x0, x19
    3304:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3308:	mov	x1, x20
    330c:	mov	x0, x19
    3310:	ldp	x19, x20, [sp, #16]
    3314:	ldr	x21, [sp, #32]
    3318:	ldp	x29, x30, [sp], #48
    331c:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000003320 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    3320:	stp	x29, x30, [sp, #-48]!
    3324:	mov	x2, x0
    3328:	mov	x0, x1
    332c:	mov	x29, sp
    3330:	stp	x19, x20, [sp, #16]
    3334:	mov	x19, x1
    3338:	stp	x21, x22, [sp, #32]
    333c:	ldp	x22, x21, [x2, #32]
    3340:	ldrb	w1, [x2, #9]
    3344:	ldr	x20, [x2, #16]
    3348:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    334c:	mov	x1, x22
    3350:	mov	x0, x19
    3354:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3358:	mov	x1, x21
    335c:	mov	x0, x19
    3360:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3364:	mov	x1, x20
    3368:	mov	x0, x19
    336c:	ldp	x19, x20, [sp, #16]
    3370:	ldp	x21, x22, [sp, #32]
    3374:	ldp	x29, x30, [sp], #48
    3378:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    337c:	nop

0000000000003380 <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    3380:	stp	x29, x30, [sp, #-64]!
    3384:	mov	x2, x0
    3388:	mov	x0, x1
    338c:	mov	x29, sp
    3390:	stp	x19, x20, [sp, #16]
    3394:	mov	x19, x1
    3398:	stp	x21, x22, [sp, #32]
    339c:	ldr	x20, [x2, #16]
    33a0:	ldp	x22, x21, [x2, #40]
    33a4:	str	x23, [sp, #48]
    33a8:	ldr	x23, [x2, #32]
    33ac:	ldrb	w1, [x2, #9]
    33b0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    33b4:	mov	x1, x23
    33b8:	mov	x0, x19
    33bc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    33c0:	mov	x1, x22
    33c4:	mov	x0, x19
    33c8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    33cc:	mov	x1, x21
    33d0:	mov	x0, x19
    33d4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    33d8:	mov	x1, x20
    33dc:	mov	x0, x19
    33e0:	ldp	x19, x20, [sp, #16]
    33e4:	ldp	x21, x22, [sp, #32]
    33e8:	ldr	x23, [sp, #48]
    33ec:	ldp	x29, x30, [sp], #64
    33f0:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    33f4:	nop

00000000000033f8 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    33f8:	stp	x29, x30, [sp, #-64]!
    33fc:	mov	x2, x0
    3400:	mov	x0, x1
    3404:	mov	x29, sp
    3408:	stp	x19, x20, [sp, #16]
    340c:	mov	x19, x1
    3410:	stp	x23, x24, [sp, #48]
    3414:	ldp	x1, x24, [x2, #48]
    3418:	stp	x21, x22, [sp, #32]
    341c:	ldp	x23, x22, [x2, #32]
    3420:	ldr	x20, [x2, #16]
    3424:	ldr	x21, [x2, #64]
    3428:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    342c:	mov	x1, x24
    3430:	mov	x0, x19
    3434:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3438:	mov	x1, x23
    343c:	mov	x0, x19
    3440:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3444:	mov	x1, x22
    3448:	mov	x0, x19
    344c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3450:	mov	x1, x21
    3454:	mov	x0, x19
    3458:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    345c:	mov	x1, x20
    3460:	mov	x0, x19
    3464:	ldp	x19, x20, [sp, #16]
    3468:	ldp	x21, x22, [sp, #32]
    346c:	ldp	x23, x24, [sp, #48]
    3470:	ldp	x29, x30, [sp], #64
    3474:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000003478 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>:
    3478:	stp	x29, x30, [sp, #-208]!
    347c:	mov	x29, sp
    3480:	stp	x23, x24, [sp, #48]
    3484:	ldr	x23, [x0, #40]
    3488:	stp	x19, x20, [sp, #16]
    348c:	stp	x21, x22, [sp, #32]
    3490:	cbz	x23, 3b80 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x708>
    3494:	mov	x21, x0
    3498:	ldrb	w0, [x23, #8]
    349c:	mov	x19, x21
    34a0:	cmp	w0, #0x9
    34a4:	b.eq	34c0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x48>  // b.none
    34a8:	mov	x0, x19
    34ac:	ldp	x19, x20, [sp, #16]
    34b0:	ldp	x21, x22, [sp, #32]
    34b4:	ldp	x23, x24, [sp, #48]
    34b8:	ldp	x29, x30, [sp], #208
    34bc:	ret
    34c0:	ldr	w0, [x23, #32]
    34c4:	mov	x24, x1
    34c8:	mov	x1, #0x28                  	// #40
    34cc:	add	x20, x23, x1
    34d0:	ldr	x19, [x21, #32]
    34d4:	add	x0, x1, w0, uxtw #3
    34d8:	add	x23, x23, x0
    34dc:	cmp	x23, x20
    34e0:	b.eq	34a8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x30>  // b.none
    34e4:	stp	x25, x26, [sp, #64]
    34e8:	adrp	x26, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    34ec:	mov	w22, #0x18                  	// #24
    34f0:	ldr	x25, [x26]
    34f4:	stp	x27, x28, [sp, #80]
    34f8:	add	x27, sp, #0x98
    34fc:	add	x0, x25, #0x10
    3500:	str	x0, [sp, #104]
    3504:	nop
    3508:	ldr	x3, [sp, #104]
    350c:	mov	x2, #0x1                   	// #1
    3510:	mov	w1, #0x40                  	// #64
    3514:	mov	x0, #0x600                 	// #1536
    3518:	ldr	x28, [x20]
    351c:	stp	x3, x24, [sp, #152]
    3520:	strb	wzr, [sp, #168]
    3524:	stp	x2, xzr, [sp, #176]
    3528:	str	xzr, [sp, #192]
    352c:	str	w1, [sp, #200]
    3530:	ldr	x25, [x21, #48]
    3534:	bl	0 <_Znwm>
    3538:	ldr	w4, [sp, #200]
    353c:	mov	x2, x0
    3540:	str	x2, [sp, #184]
    3544:	str	xzr, [sp, #192]
    3548:	sub	w0, w4, #0x1
    354c:	ands	w7, w4, w0
    3550:	b.ne	3b8c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x714>  // b.any
    3554:	umull	x1, w4, w22
    3558:	mov	x3, x2
    355c:	mov	x5, #0xfffffffffffffff8    	// #-8
    3560:	add	x8, x2, x1
    3564:	cmp	x2, x8
    3568:	b.eq	357c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x104>  // b.none
    356c:	nop
    3570:	str	x5, [x3], #24
    3574:	cmp	x8, x3
    3578:	b.ne	3570 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0xf8>  // b.any
    357c:	cbz	w4, 3664 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x1ec>
    3580:	cmn	x25, #0x10
    3584:	ccmn	x25, #0x8, #0x4, ne  // ne = any
    3588:	b.eq	3b24 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x6ac>  // b.none
    358c:	lsr	w3, w25, #9
    3590:	eor	w3, w3, w25, lsr #4
    3594:	and	w3, w3, w0
    3598:	umull	x9, w3, w22
    359c:	add	x5, x2, x9
    35a0:	ldr	x9, [x2, x9]
    35a4:	cmp	x25, x9
    35a8:	b.ne	3a6c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x5f4>  // b.any
    35ac:	mov	w3, #0x1                   	// #1
    35b0:	str	w3, [sp, #192]
    35b4:	nop
    35b8:	mov	w3, #0xffffffff            	// #-1
    35bc:	mov	w7, w3
    35c0:	str	w3, [sp, #196]
    35c4:	ldr	x3, [x21, #56]
    35c8:	stp	x25, x19, [x5]
    35cc:	strb	wzr, [x5, #16]
    35d0:	cmn	x3, #0x10
    35d4:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    35d8:	b.eq	3b24 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x6ac>  // b.none
    35dc:	lsr	w19, w3, #9
    35e0:	eor	w19, w19, w3, lsr #4
    35e4:	and	w9, w0, w19
    35e8:	umull	x6, w9, w22
    35ec:	add	x5, x2, x6
    35f0:	ldr	x25, [x2, x6]
    35f4:	cmp	x3, x25
    35f8:	b.ne	3684 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x20c>  // b.any
    35fc:	ldr	x0, [x21, #64]
    3600:	strb	wzr, [x5, #16]
    3604:	mov	x1, x27
    3608:	add	x20, x20, #0x8
    360c:	ldr	x2, [x0]
    3610:	ldr	x2, [x2, #96]
    3614:	str	x28, [x5, #8]
    3618:	blr	x2
    361c:	mov	x19, x0
    3620:	ldr	w1, [sp, #200]
    3624:	ldr	x2, [x26]
    3628:	ldr	x0, [sp, #184]
    362c:	umull	x1, w1, w22
    3630:	add	x2, x2, #0x10
    3634:	str	x2, [sp, #152]
    3638:	bl	0 <_ZdlPvm>
    363c:	cmp	x23, x20
    3640:	b.ne	3508 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x90>  // b.any
    3644:	mov	x0, x19
    3648:	ldp	x19, x20, [sp, #16]
    364c:	ldp	x21, x22, [sp, #32]
    3650:	ldp	x23, x24, [sp, #48]
    3654:	ldp	x25, x26, [sp, #64]
    3658:	ldp	x27, x28, [sp, #80]
    365c:	ldp	x29, x30, [sp], #208
    3660:	ret
    3664:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3668:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    366c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3670:	add	x3, x3, #0x0
    3674:	add	x1, x1, #0x0
    3678:	add	x0, x0, #0x0
    367c:	mov	w2, #0x22f                 	// #559
    3680:	bl	0 <__assert_fail>
    3684:	mov	w10, #0x1                   	// #1
    3688:	mov	x11, #0x0                   	// #0
    368c:	cmn	x25, #0x8
    3690:	b.ne	3a3c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x5c4>  // b.any
    3694:	ldr	x10, [sp, #176]
    3698:	lsl	w9, w4, #1
    369c:	cmp	x11, #0x0
    36a0:	add	x10, x10, #0x1
    36a4:	str	x10, [sp, #176]
    36a8:	add	w10, w9, w4
    36ac:	csel	x5, x5, x11, eq  // eq = none
    36b0:	cmp	w10, #0x8
    36b4:	b.ls	36f4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x27c>  // b.plast
    36b8:	sub	w9, w4, #0x2
    36bc:	sub	w7, w9, w7
    36c0:	cmp	w7, w4, lsr #3
    36c4:	b.ls	382c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x3b4>  // b.plast
    36c8:	ldr	x1, [x5]
    36cc:	mov	w0, #0x2                   	// #2
    36d0:	str	w0, [sp, #192]
    36d4:	cmn	x1, #0x8
    36d8:	b.eq	36e8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x270>  // b.none
    36dc:	ldr	w0, [sp, #196]
    36e0:	sub	w0, w0, #0x1
    36e4:	str	w0, [sp, #196]
    36e8:	stp	x3, xzr, [x5]
    36ec:	strb	wzr, [x5, #16]
    36f0:	b	35fc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x184>
    36f4:	sub	w0, w9, #0x1
    36f8:	mov	w4, #0x40                  	// #64
    36fc:	stp	x3, x2, [sp, #112]
    3700:	orr	x0, x0, x0, lsr #1
    3704:	stp	x1, x8, [sp, #128]
    3708:	orr	x0, x0, x0, lsr #2
    370c:	orr	x0, x0, x0, lsr #4
    3710:	orr	x0, x0, x0, lsr #8
    3714:	orr	x0, x0, x0, lsr #16
    3718:	add	x0, x0, #0x1
    371c:	cmp	w0, w4
    3720:	csel	w0, w0, w4, cs  // cs = hs, nlast
    3724:	str	w0, [sp, #200]
    3728:	umull	x0, w0, w22
    372c:	bl	0 <_Znwm>
    3730:	str	x0, [sp, #184]
    3734:	ldr	w9, [sp, #200]
    3738:	str	xzr, [sp, #192]
    373c:	sub	w10, w9, #0x1
    3740:	tst	w9, w10
    3744:	b.ne	3b8c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x714>  // b.any
    3748:	umaddl	x5, w9, w22, x0
    374c:	mov	x6, x25
    3750:	mov	x4, x0
    3754:	cmp	x0, x5
    3758:	ldp	x3, x2, [sp, #112]
    375c:	ldp	x1, x8, [sp, #128]
    3760:	b.eq	3774 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x2fc>  // b.none
    3764:	nop
    3768:	str	x6, [x4], #24
    376c:	cmp	x5, x4
    3770:	b.ne	3768 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x2f0>  // b.any
    3774:	cmp	x2, x8
    3778:	mov	x6, x2
    377c:	b.ne	3790 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x318>  // b.any
    3780:	b	37e4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x36c>
    3784:	add	x6, x6, #0x18
    3788:	cmp	x8, x6
    378c:	b.eq	37e4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x36c>  // b.none
    3790:	ldr	x7, [x6]
    3794:	cmn	x7, #0x8
    3798:	ccmn	x7, #0x10, #0x4, ne  // ne = any
    379c:	b.eq	3784 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x30c>  // b.none
    37a0:	cbz	w9, 3bac <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x734>
    37a4:	lsr	w4, w7, #9
    37a8:	eor	w4, w4, w7, lsr #4
    37ac:	and	w4, w4, w10
    37b0:	umull	x5, w4, w22
    37b4:	add	x11, x0, x5
    37b8:	ldr	x5, [x0, x5]
    37bc:	cmp	x5, x7
    37c0:	b.ne	39b4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x53c>  // b.any
    37c4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    37c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    37cc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    37d0:	add	x3, x3, #0x0
    37d4:	add	x1, x1, #0x0
    37d8:	add	x0, x0, #0x0
    37dc:	mov	w2, #0x17a                 	// #378
    37e0:	bl	0 <__assert_fail>
    37e4:	mov	x0, x2
    37e8:	str	x3, [sp, #112]
    37ec:	bl	0 <_ZdlPvm>
    37f0:	ldr	w0, [sp, #200]
    37f4:	ldr	x3, [sp, #112]
    37f8:	cbz	w0, 3664 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x1ec>
    37fc:	sub	w1, w0, #0x1
    3800:	ldr	w0, [sp, #192]
    3804:	and	w19, w19, w1
    3808:	ldr	x2, [sp, #184]
    380c:	add	w0, w0, #0x1
    3810:	umull	x4, w19, w22
    3814:	add	x5, x2, x4
    3818:	ldr	x4, [x2, x4]
    381c:	cmp	x3, x4
    3820:	b.ne	39e8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x570>  // b.any
    3824:	str	w0, [sp, #192]
    3828:	b	36dc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x264>
    382c:	mov	w4, w0
    3830:	lsr	w0, w0, #1
    3834:	orr	x0, x0, x4
    3838:	mov	w4, #0x40                  	// #64
    383c:	stp	x3, x2, [sp, #112]
    3840:	orr	x0, x0, x0, lsr #2
    3844:	stp	x1, x8, [sp, #128]
    3848:	orr	x0, x0, x0, lsr #4
    384c:	orr	x0, x0, x0, lsr #8
    3850:	orr	x0, x0, x0, lsr #16
    3854:	add	x0, x0, #0x1
    3858:	cmp	w0, w4
    385c:	csel	w0, w0, w4, cs  // cs = hs, nlast
    3860:	str	w0, [sp, #200]
    3864:	umull	x0, w0, w22
    3868:	bl	0 <_Znwm>
    386c:	str	x0, [sp, #184]
    3870:	ldr	w9, [sp, #200]
    3874:	str	xzr, [sp, #192]
    3878:	sub	w10, w9, #0x1
    387c:	tst	w9, w10
    3880:	b.ne	3b8c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x714>  // b.any
    3884:	umaddl	x5, w9, w22, x0
    3888:	mov	x6, x25
    388c:	mov	x4, x0
    3890:	cmp	x0, x5
    3894:	ldp	x3, x2, [sp, #112]
    3898:	ldp	x1, x8, [sp, #128]
    389c:	b.eq	38ac <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x434>  // b.none
    38a0:	str	x6, [x4], #24
    38a4:	cmp	x5, x4
    38a8:	b.ne	38a0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x428>  // b.any
    38ac:	cmp	x2, x8
    38b0:	mov	x6, x2
    38b4:	b.ne	38c8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x450>  // b.any
    38b8:	b	3930 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x4b8>
    38bc:	add	x6, x6, #0x18
    38c0:	cmp	x8, x6
    38c4:	b.eq	3930 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x4b8>  // b.none
    38c8:	ldr	x7, [x6]
    38cc:	cmn	x7, #0x8
    38d0:	ccmn	x7, #0x10, #0x4, ne  // ne = any
    38d4:	b.eq	38bc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x444>  // b.none
    38d8:	cbz	w9, 3bac <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x734>
    38dc:	lsr	w4, w7, #9
    38e0:	eor	w4, w4, w7, lsr #4
    38e4:	and	w4, w4, w10
    38e8:	umull	x5, w4, w22
    38ec:	add	x11, x0, x5
    38f0:	ldr	x5, [x0, x5]
    38f4:	cmp	x7, x5
    38f8:	b.eq	37c4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x34c>  // b.none
    38fc:	mov	w13, #0x1                   	// #1
    3900:	mov	x12, #0x0                   	// #0
    3904:	cmn	x5, #0x8
    3908:	b.ne	3adc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x664>  // b.any
    390c:	ldr	w4, [sp, #192]
    3910:	cmp	x12, #0x0
    3914:	csel	x12, x12, x11, ne  // ne = any
    3918:	add	w4, w4, #0x1
    391c:	str	w4, [sp, #192]
    3920:	ldp	x4, x5, [x6, #8]
    3924:	str	x7, [x12]
    3928:	stp	x4, x5, [x12, #8]
    392c:	b	38bc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x444>
    3930:	mov	x0, x2
    3934:	str	x3, [sp, #112]
    3938:	bl	0 <_ZdlPvm>
    393c:	ldr	w0, [sp, #200]
    3940:	ldr	x3, [sp, #112]
    3944:	cbz	w0, 3664 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x1ec>
    3948:	sub	w1, w0, #0x1
    394c:	ldr	w0, [sp, #192]
    3950:	and	w19, w19, w1
    3954:	ldr	x2, [sp, #184]
    3958:	add	w0, w0, #0x1
    395c:	umull	x4, w19, w22
    3960:	add	x5, x2, x4
    3964:	ldr	x4, [x2, x4]
    3968:	cmp	x3, x4
    396c:	b.eq	3824 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x3ac>  // b.none
    3970:	mov	w7, #0x1                   	// #1
    3974:	mov	x6, #0x0                   	// #0
    3978:	cmn	x4, #0x8
    397c:	b.eq	39f8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x580>  // b.none
    3980:	add	w19, w7, w19
    3984:	cmp	x6, #0x0
    3988:	and	w19, w1, w19
    398c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    3990:	csel	x6, x6, x5, ne  // ne = any
    3994:	add	w7, w7, #0x1
    3998:	umull	x4, w19, w22
    399c:	add	x5, x2, x4
    39a0:	ldr	x4, [x2, x4]
    39a4:	cmp	x3, x4
    39a8:	b.ne	3978 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x500>  // b.any
    39ac:	str	w0, [sp, #192]
    39b0:	b	36dc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x264>
    39b4:	mov	w13, #0x1                   	// #1
    39b8:	mov	x12, #0x0                   	// #0
    39bc:	cmn	x5, #0x8
    39c0:	b.ne	3a9c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x624>  // b.any
    39c4:	ldr	w4, [sp, #192]
    39c8:	cmp	x12, #0x0
    39cc:	csel	x12, x12, x11, ne  // ne = any
    39d0:	add	w4, w4, #0x1
    39d4:	str	w4, [sp, #192]
    39d8:	ldp	x4, x5, [x6, #8]
    39dc:	str	x7, [x12]
    39e0:	stp	x4, x5, [x12, #8]
    39e4:	b	3784 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x30c>
    39e8:	mov	w7, #0x1                   	// #1
    39ec:	mov	x6, #0x0                   	// #0
    39f0:	cmn	x4, #0x8
    39f4:	b.ne	3a08 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x590>  // b.any
    39f8:	cbz	x6, 3ad4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x65c>
    39fc:	mov	x5, x6
    3a00:	ldr	x1, [x6]
    3a04:	b	36d0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x258>
    3a08:	add	w19, w7, w19
    3a0c:	cmp	x6, #0x0
    3a10:	and	w19, w1, w19
    3a14:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    3a18:	csel	x6, x6, x5, ne  // ne = any
    3a1c:	add	w7, w7, #0x1
    3a20:	umull	x4, w19, w22
    3a24:	add	x5, x2, x4
    3a28:	ldr	x4, [x2, x4]
    3a2c:	cmp	x3, x4
    3a30:	b.ne	39f0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x578>  // b.any
    3a34:	str	w0, [sp, #192]
    3a38:	b	36dc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x264>
    3a3c:	add	w9, w10, w9
    3a40:	cmp	x11, #0x0
    3a44:	and	w9, w0, w9
    3a48:	ccmn	x25, #0x10, #0x0, eq  // eq = none
    3a4c:	csel	x11, x11, x5, ne  // ne = any
    3a50:	add	w10, w10, #0x1
    3a54:	umull	x6, w9, w22
    3a58:	add	x5, x2, x6
    3a5c:	ldr	x25, [x2, x6]
    3a60:	cmp	x3, x25
    3a64:	b.eq	35fc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x184>  // b.none
    3a68:	b	368c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x214>
    3a6c:	mov	x10, x5
    3a70:	mov	w11, #0x1                   	// #1
    3a74:	mov	x5, #0x0                   	// #0
    3a78:	cmn	x9, #0x8
    3a7c:	b.ne	3b44 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x6cc>  // b.any
    3a80:	cbz	x5, 3b14 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x69c>
    3a84:	ldr	x3, [x5]
    3a88:	mov	w9, #0x1                   	// #1
    3a8c:	str	w9, [sp, #192]
    3a90:	cmn	x3, #0x8
    3a94:	b.ne	35b8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x140>  // b.any
    3a98:	b	35c4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x14c>
    3a9c:	add	w4, w4, w13
    3aa0:	cmp	x12, #0x0
    3aa4:	and	w4, w10, w4
    3aa8:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    3aac:	csel	x11, x11, x12, eq  // eq = none
    3ab0:	add	w13, w13, #0x1
    3ab4:	umull	x5, w4, w22
    3ab8:	add	x14, x0, x5
    3abc:	ldr	x5, [x0, x5]
    3ac0:	cmp	x7, x5
    3ac4:	b.eq	37c4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x34c>  // b.none
    3ac8:	mov	x12, x11
    3acc:	mov	x11, x14
    3ad0:	b	39bc <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x544>
    3ad4:	str	w0, [sp, #192]
    3ad8:	b	36e8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x270>
    3adc:	add	w4, w4, w13
    3ae0:	cmp	x12, #0x0
    3ae4:	and	w4, w10, w4
    3ae8:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    3aec:	csel	x11, x11, x12, eq  // eq = none
    3af0:	add	w13, w13, #0x1
    3af4:	umull	x5, w4, w22
    3af8:	add	x14, x0, x5
    3afc:	ldr	x5, [x0, x5]
    3b00:	cmp	x7, x5
    3b04:	b.eq	37c4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x34c>  // b.none
    3b08:	mov	x12, x11
    3b0c:	mov	x11, x14
    3b10:	b	3904 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x48c>
    3b14:	mov	w3, #0x1                   	// #1
    3b18:	mov	x5, x10
    3b1c:	str	w3, [sp, #192]
    3b20:	b	35c4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x14c>
    3b24:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3b28:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3b2c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3b30:	add	x3, x3, #0x0
    3b34:	add	x1, x1, #0x0
    3b38:	add	x0, x0, #0x0
    3b3c:	mov	w2, #0x250                 	// #592
    3b40:	bl	0 <__assert_fail>
    3b44:	add	w3, w3, w11
    3b48:	cmp	x5, #0x0
    3b4c:	and	w3, w3, w0
    3b50:	ccmn	x9, #0x10, #0x0, eq  // eq = none
    3b54:	csel	x10, x10, x5, eq  // eq = none
    3b58:	add	w11, w11, #0x1
    3b5c:	umull	x9, w3, w22
    3b60:	add	x5, x2, x9
    3b64:	ldr	x9, [x2, x9]
    3b68:	cmp	x25, x9
    3b6c:	b.eq	35ac <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x134>  // b.none
    3b70:	mov	x12, x10
    3b74:	mov	x10, x5
    3b78:	mov	x5, x12
    3b7c:	b	3a78 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x600>
    3b80:	stp	x25, x26, [sp, #64]
    3b84:	stp	x27, x28, [sp, #80]
    3b88:	bl	748 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    3b8c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3b90:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3b94:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3b98:	add	x3, x3, #0x0
    3b9c:	add	x1, x1, #0x0
    3ba0:	add	x0, x0, #0x0
    3ba4:	mov	w2, #0x15b                 	// #347
    3ba8:	bl	0 <__assert_fail>
    3bac:	mov	x0, #0x0                   	// #0
    3bb0:	str	x7, [x0]
    3bb4:	brk	#0x3e8

0000000000003bb8 <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    3bb8:	stp	x29, x30, [sp, #-32]!
    3bbc:	mov	x2, x0
    3bc0:	mov	x0, x1
    3bc4:	mov	x29, sp
    3bc8:	stp	x19, x20, [sp, #16]
    3bcc:	mov	x19, x1
    3bd0:	ldp	x1, x20, [x2, #32]
    3bd4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3bd8:	mov	x1, x20
    3bdc:	mov	x0, x19
    3be0:	ldp	x19, x20, [sp, #16]
    3be4:	ldp	x29, x30, [sp], #32
    3be8:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3bec:	nop

0000000000003bf0 <_ZNK4llvm7VarInit7getNameEv>:
    3bf0:	stp	x29, x30, [sp, #-16]!
    3bf4:	mov	x29, sp
    3bf8:	ldr	x1, [x0, #24]
    3bfc:	cbz	x1, 3c18 <_ZNK4llvm7VarInit7getNameEv+0x28>
    3c00:	ldrb	w0, [x1, #8]
    3c04:	cmp	w0, #0x12
    3c08:	b.ne	3c1c <_ZNK4llvm7VarInit7getNameEv+0x2c>  // b.any
    3c0c:	ldp	x29, x30, [sp], #16
    3c10:	ldp	x0, x1, [x1, #24]
    3c14:	ret
    3c18:	bl	680 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    3c1c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3c20:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3c24:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3c28:	add	x3, x3, #0x0
    3c2c:	add	x1, x1, #0x0
    3c30:	add	x0, x0, #0x0
    3c34:	mov	w2, #0x108                 	// #264
    3c38:	bl	0 <__assert_fail>
    3c3c:	nop

0000000000003c40 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>:
    3c40:	stp	x29, x30, [sp, #-48]!
    3c44:	mov	x2, x0
    3c48:	mov	x29, sp
    3c4c:	stp	x19, x20, [sp, #16]
    3c50:	add	x19, x0, #0x38
    3c54:	ldr	w20, [x2, #48]
    3c58:	stp	x21, x22, [sp, #32]
    3c5c:	mov	x0, x1
    3c60:	mov	x21, x1
    3c64:	ldr	x22, [x2, #32]
    3c68:	mov	x1, x20
    3c6c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    3c70:	add	x20, x19, x20, lsl #3
    3c74:	mov	x1, x22
    3c78:	mov	x0, x21
    3c7c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3c80:	cmp	x19, x20
    3c84:	b.eq	3c9c <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE+0x5c>  // b.none
    3c88:	ldr	x1, [x19], #8
    3c8c:	mov	x0, x21
    3c90:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3c94:	cmp	x20, x19
    3c98:	b.ne	3c88 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE+0x48>  // b.any
    3c9c:	ldp	x19, x20, [sp, #16]
    3ca0:	ldp	x21, x22, [sp, #32]
    3ca4:	ldp	x29, x30, [sp], #48
    3ca8:	ret
    3cac:	nop

0000000000003cb0 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    3cb0:	stp	x29, x30, [sp, #-48]!
    3cb4:	mov	x2, x0
    3cb8:	mov	x3, #0x30                  	// #48
    3cbc:	mov	x29, sp
    3cc0:	stp	x19, x20, [sp, #16]
    3cc4:	mov	x20, x1
    3cc8:	ldr	w19, [x2, #32]
    3ccc:	stp	x21, x22, [sp, #32]
    3cd0:	add	x21, x0, x3
    3cd4:	mov	x0, x1
    3cd8:	ldr	x1, [x2, #40]
    3cdc:	add	x19, x3, w19, uxtw #3
    3ce0:	add	x19, x2, x19
    3ce4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3ce8:	cmp	x19, x21
    3cec:	b.eq	3d18 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE+0x68>  // b.none
    3cf0:	mov	x22, x19
    3cf4:	nop
    3cf8:	ldr	x1, [x21], #8
    3cfc:	mov	x0, x20
    3d00:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3d04:	ldr	x1, [x22], #8
    3d08:	mov	x0, x20
    3d0c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3d10:	cmp	x19, x21
    3d14:	b.ne	3cf8 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE+0x48>  // b.any
    3d18:	ldp	x19, x20, [sp, #16]
    3d1c:	ldp	x21, x22, [sp, #32]
    3d20:	ldp	x29, x30, [sp], #48
    3d24:	ret

0000000000003d28 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>:
    3d28:	mov	x7, x0
    3d2c:	mov	x0, x1
    3d30:	mov	x8, #0x38                  	// #56
    3d34:	add	x3, x7, x8
    3d38:	ldp	x1, x2, [x7, #32]
    3d3c:	ldp	w5, w6, [x7, #48]
    3d40:	mov	w4, w5
    3d44:	add	x5, x8, w5, uxtw #3
    3d48:	add	x5, x7, x5
    3d4c:	b	268 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>

0000000000003d50 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE>:
    3d50:	stp	x29, x30, [sp, #-80]!
    3d54:	mov	x29, sp
    3d58:	ldr	x0, [x0, #32]
    3d5c:	stp	x19, x20, [sp, #16]
    3d60:	cbz	x0, 3db4 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE+0x64>
    3d64:	mov	x20, x1
    3d68:	ldrb	w1, [x0, #8]
    3d6c:	cmp	w1, #0x6
    3d70:	b.eq	3da4 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE+0x54>  // b.none
    3d74:	mov	x19, x2
    3d78:	add	x2, sp, #0x38
    3d7c:	mov	x0, x2
    3d80:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3d84:	add	x1, x1, #0x0
    3d88:	str	x21, [sp, #32]
    3d8c:	mov	x21, x2
    3d90:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3d94:	mov	x2, x21
    3d98:	mov	x0, x20
    3d9c:	mov	x1, x19
    3da0:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3da4:	ldp	x19, x20, [sp, #16]
    3da8:	ldr	x0, [x0, #24]
    3dac:	ldp	x29, x30, [sp], #80
    3db0:	ret
    3db4:	str	x21, [sp, #32]
    3db8:	bl	6a8 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    3dbc:	nop

0000000000003dc0 <_ZNK4llvm9RecordVal7getNameEv>:
    3dc0:	stp	x29, x30, [sp, #-16]!
    3dc4:	mov	x29, sp
    3dc8:	ldr	x1, [x0]
    3dcc:	cbz	x1, 3de8 <_ZNK4llvm9RecordVal7getNameEv+0x28>
    3dd0:	ldrb	w0, [x1, #8]
    3dd4:	cmp	w0, #0x12
    3dd8:	b.ne	3dec <_ZNK4llvm9RecordVal7getNameEv+0x2c>  // b.any
    3ddc:	ldp	x29, x30, [sp], #16
    3de0:	ldp	x0, x1, [x1, #24]
    3de4:	ret
    3de8:	bl	680 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    3dec:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3df0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3df4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3df8:	add	x3, x3, #0x0
    3dfc:	add	x1, x1, #0x0
    3e00:	add	x0, x0, #0x0
    3e04:	mov	w2, #0x108                 	// #264
    3e08:	bl	0 <__assert_fail>
    3e0c:	nop

0000000000003e10 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>:
    3e10:	stp	x29, x30, [sp, #-96]!
    3e14:	mov	x29, sp
    3e18:	stp	x21, x22, [sp, #32]
    3e1c:	mov	x21, x0
    3e20:	and	w22, w2, #0xff
    3e24:	ldr	x0, [x0, #8]
    3e28:	stp	x19, x20, [sp, #16]
    3e2c:	mov	x19, x1
    3e30:	str	x23, [sp, #48]
    3e34:	tst	w0, #0x4
    3e38:	b.ne	3f74 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x164>  // b.any
    3e3c:	and	x0, x0, #0xfffffffffffffff8
    3e40:	add	x20, sp, #0x40
    3e44:	mov	x8, x20
    3e48:	ldr	x1, [x0]
    3e4c:	ldr	x1, [x1, #16]
    3e50:	blr	x1
    3e54:	ldp	x1, x2, [sp, #64]
    3e58:	mov	x0, x19
    3e5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3e60:	ldr	x0, [sp, #64]
    3e64:	add	x1, x20, #0x10
    3e68:	cmp	x0, x1
    3e6c:	b.eq	3e74 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x64>  // b.none
    3e70:	bl	0 <_ZdlPv>
    3e74:	ldp	x1, x0, [x19, #16]
    3e78:	cmp	x1, x0
    3e7c:	b.eq	3f58 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x148>  // b.none
    3e80:	mov	w1, #0x20                  	// #32
    3e84:	strb	w1, [x0]
    3e88:	mov	x23, x19
    3e8c:	ldr	x0, [x19, #24]
    3e90:	add	x0, x0, #0x1
    3e94:	str	x0, [x19, #24]
    3e98:	ldr	x0, [x21]
    3e9c:	mov	x8, x20
    3ea0:	ldr	x1, [x0]
    3ea4:	ldr	x1, [x1, #48]
    3ea8:	blr	x1
    3eac:	ldp	x1, x2, [sp, #64]
    3eb0:	mov	x0, x23
    3eb4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3eb8:	ldr	x0, [sp, #64]
    3ebc:	add	x1, x20, #0x10
    3ec0:	cmp	x0, x1
    3ec4:	b.eq	3ecc <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xbc>  // b.none
    3ec8:	bl	0 <_ZdlPv>
    3ecc:	ldr	x0, [x21, #16]
    3ed0:	cbz	x0, 3f40 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x130>
    3ed4:	ldp	x0, x1, [x19, #16]
    3ed8:	sub	x0, x0, x1
    3edc:	cmp	x0, #0x2
    3ee0:	b.ls	3fd8 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1c8>  // b.plast
    3ee4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3ee8:	add	x0, x0, #0x0
    3eec:	mov	x23, x19
    3ef0:	ldrh	w2, [x0]
    3ef4:	ldrb	w0, [x0, #2]
    3ef8:	strh	w2, [x1]
    3efc:	strb	w0, [x1, #2]
    3f00:	ldr	x0, [x19, #24]
    3f04:	add	x0, x0, #0x3
    3f08:	str	x0, [x19, #24]
    3f0c:	ldr	x0, [x21, #16]
    3f10:	mov	x8, x20
    3f14:	add	x20, x20, #0x10
    3f18:	ldr	x1, [x0]
    3f1c:	ldr	x1, [x1, #40]
    3f20:	blr	x1
    3f24:	ldp	x1, x2, [sp, #64]
    3f28:	mov	x0, x23
    3f2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3f30:	ldr	x0, [sp, #64]
    3f34:	cmp	x0, x20
    3f38:	b.eq	3f40 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x130>  // b.none
    3f3c:	bl	0 <_ZdlPv>
    3f40:	cbnz	w22, 3fb0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1a0>
    3f44:	ldp	x19, x20, [sp, #16]
    3f48:	ldp	x21, x22, [sp, #32]
    3f4c:	ldr	x23, [sp, #48]
    3f50:	ldp	x29, x30, [sp], #96
    3f54:	ret
    3f58:	mov	x0, x19
    3f5c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3f60:	mov	x2, #0x1                   	// #1
    3f64:	add	x1, x1, #0x0
    3f68:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3f6c:	mov	x23, x0
    3f70:	b	3e98 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x88>
    3f74:	ldp	x0, x1, [x1, #16]
    3f78:	sub	x0, x0, x1
    3f7c:	cmp	x0, #0x5
    3f80:	b.ls	401c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x20c>  // b.plast
    3f84:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3f88:	add	x0, x0, #0x0
    3f8c:	ldr	w2, [x0]
    3f90:	ldrh	w0, [x0, #4]
    3f94:	str	w2, [x1]
    3f98:	strh	w0, [x1, #4]
    3f9c:	ldr	x0, [x19, #24]
    3fa0:	add	x0, x0, #0x6
    3fa4:	str	x0, [x19, #24]
    3fa8:	ldr	x0, [x21, #8]
    3fac:	b	3e3c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x2c>
    3fb0:	ldp	x0, x1, [x19, #16]
    3fb4:	sub	x0, x0, x1
    3fb8:	cmp	x0, #0x1
    3fbc:	b.ls	3ff4 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1e4>  // b.plast
    3fc0:	mov	w0, #0xa3b                 	// #2619
    3fc4:	strh	w0, [x1]
    3fc8:	ldr	x0, [x19, #24]
    3fcc:	add	x0, x0, #0x2
    3fd0:	str	x0, [x19, #24]
    3fd4:	b	3f44 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x134>
    3fd8:	mov	x0, x19
    3fdc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    3fe0:	mov	x2, #0x3                   	// #3
    3fe4:	add	x1, x1, #0x0
    3fe8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3fec:	mov	x23, x0
    3ff0:	b	3f0c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xfc>
    3ff4:	mov	x0, x19
    3ff8:	mov	x2, #0x2                   	// #2
    3ffc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4000:	add	x1, x1, #0x0
    4004:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4008:	ldp	x19, x20, [sp, #16]
    400c:	ldp	x21, x22, [sp, #32]
    4010:	ldr	x23, [sp, #48]
    4014:	ldp	x29, x30, [sp], #96
    4018:	ret
    401c:	mov	x0, x19
    4020:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4024:	mov	x2, #0x6                   	// #6
    4028:	add	x1, x1, #0x0
    402c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4030:	ldr	x0, [x21, #8]
    4034:	b	3e3c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x2c>

0000000000004038 <_ZNK4llvm9RecordVal4dumpEv>:
    4038:	stp	x29, x30, [sp, #-32]!
    403c:	mov	x29, sp
    4040:	str	x19, [sp, #16]
    4044:	mov	x19, x0
    4048:	bl	0 <_ZN4llvm4errsEv>
    404c:	ldp	x2, x3, [x0, #16]
    4050:	sub	x2, x2, x3
    4054:	cmp	x2, #0x1
    4058:	b.ls	4088 <_ZNK4llvm9RecordVal4dumpEv+0x50>  // b.plast
    405c:	mov	x1, x0
    4060:	mov	w0, #0x2020                	// #8224
    4064:	strh	w0, [x3]
    4068:	mov	w2, #0x1                   	// #1
    406c:	ldr	x0, [x1, #24]
    4070:	add	x0, x0, #0x2
    4074:	str	x0, [x1, #24]
    4078:	mov	x0, x19
    407c:	ldr	x19, [sp, #16]
    4080:	ldp	x29, x30, [sp], #32
    4084:	b	3e10 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    4088:	mov	x2, #0x2                   	// #2
    408c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4090:	add	x1, x1, #0x0
    4094:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4098:	mov	x1, x0
    409c:	mov	x0, x19
    40a0:	ldr	x19, [sp, #16]
    40a4:	mov	w2, #0x1                   	// #1
    40a8:	ldp	x29, x30, [sp], #32
    40ac:	b	3e10 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>

00000000000040b0 <_ZN4llvm6Record9checkNameEv>:
    40b0:	stp	x29, x30, [sp, #-240]!
    40b4:	mov	x29, sp
    40b8:	stp	x19, x20, [sp, #16]
    40bc:	mov	x19, x0
    40c0:	ldr	x0, [x0]
    40c4:	cbz	x0, 4128 <_ZN4llvm6Record9checkNameEv+0x78>
    40c8:	ldrb	w1, [x0, #8]
    40cc:	sub	w1, w1, #0x1
    40d0:	and	w1, w1, #0xff
    40d4:	cmp	w1, #0x16
    40d8:	b.ls	4108 <_ZN4llvm6Record9checkNameEv+0x58>  // b.plast
    40dc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    40e0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    40e4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    40e8:	add	x3, x3, #0x0
    40ec:	add	x1, x1, #0x0
    40f0:	add	x0, x0, #0x0
    40f4:	mov	w2, #0x108                 	// #264
    40f8:	stp	x21, x22, [sp, #32]
    40fc:	stp	x23, x24, [sp, #48]
    4100:	stp	x25, x26, [sp, #64]
    4104:	bl	0 <__assert_fail>
    4108:	ldr	x0, [x0, #16]
    410c:	cbz	x0, 41f0 <_ZN4llvm6Record9checkNameEv+0x140>
    4110:	ldr	w0, [x0, #8]
    4114:	cmp	w0, #0x4
    4118:	b.ne	4154 <_ZN4llvm6Record9checkNameEv+0xa4>  // b.any
    411c:	ldp	x19, x20, [sp, #16]
    4120:	ldp	x29, x30, [sp], #240
    4124:	ret
    4128:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    412c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4130:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4134:	add	x3, x3, #0x0
    4138:	add	x1, x1, #0x0
    413c:	add	x0, x0, #0x0
    4140:	mov	w2, #0x69                  	// #105
    4144:	stp	x21, x22, [sp, #32]
    4148:	stp	x23, x24, [sp, #48]
    414c:	stp	x25, x26, [sp, #64]
    4150:	bl	0 <__assert_fail>
    4154:	stp	x21, x22, [sp, #32]
    4158:	add	x22, sp, #0x88
    415c:	mov	x0, x22
    4160:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4164:	add	x1, x1, #0x0
    4168:	stp	x23, x24, [sp, #48]
    416c:	add	x23, sp, #0xa0
    4170:	ldr	w24, [x19, #16]
    4174:	stp	x25, x26, [sp, #64]
    4178:	add	x26, sp, #0xd0
    417c:	add	x20, sp, #0x70
    4180:	ldr	x25, [x19, #8]
    4184:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4188:	ldr	x0, [x19]
    418c:	mov	x8, x26
    4190:	add	x21, sp, #0xb8
    4194:	add	x19, sp, #0x58
    4198:	ldr	x2, [x0]
    419c:	ldr	x2, [x2, #40]
    41a0:	blr	x2
    41a4:	mov	x1, x26
    41a8:	mov	x0, x23
    41ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    41b0:	mov	x8, x20
    41b4:	mov	x1, x23
    41b8:	mov	x0, x22
    41bc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    41c0:	mov	x0, x21
    41c4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    41c8:	add	x1, x1, #0x0
    41cc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    41d0:	mov	x8, x19
    41d4:	mov	x1, x21
    41d8:	mov	x0, x20
    41dc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    41e0:	mov	x2, x19
    41e4:	mov	x0, x25
    41e8:	mov	x1, x24
    41ec:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    41f0:	stp	x21, x22, [sp, #32]
    41f4:	stp	x23, x24, [sp, #48]
    41f8:	stp	x25, x26, [sp, #64]
    41fc:	bl	630 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

0000000000004200 <_ZN4llvm6Record7setNameEPNS_4InitE>:
    4200:	str	x1, [x0]
    4204:	b	40b0 <_ZN4llvm6Record9checkNameEv>

0000000000004208 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>:
    4208:	stp	x29, x30, [sp, #-64]!
    420c:	mov	x29, sp
    4210:	stp	x19, x20, [sp, #16]
    4214:	ldr	w19, [x0, #96]
    4218:	stp	x23, x24, [sp, #48]
    421c:	ldr	x23, [x0, #88]
    4220:	cbz	x19, 4294 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x8c>
    4224:	mov	x20, x1
    4228:	add	x24, x1, #0x10
    422c:	stp	x21, x22, [sp, #32]
    4230:	add	x0, x19, x19, lsl #1
    4234:	add	x0, x23, x0, lsl #3
    4238:	ldur	x21, [x0, #-24]
    423c:	ldr	w2, [x21, #96]
    4240:	add	x2, x2, #0x1
    4244:	cmp	x2, x19
    4248:	b.hi	42c0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xb8>  // b.pmore
    424c:	subs	x22, x19, x2
    4250:	cmp	x19, x2
    4254:	mov	x19, x22
    4258:	b.cc	4300 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xf8>  // b.lo, b.ul, b.last
    425c:	ldp	w0, w2, [x20, #8]
    4260:	cmp	w0, w2
    4264:	b.cs	42a4 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x9c>  // b.hs, b.nlast
    4268:	ldr	x2, [x20]
    426c:	str	x21, [x2, w0, uxtw #3]
    4270:	ldp	w0, w3, [x20, #8]
    4274:	mov	w2, w0
    4278:	add	x2, x2, #0x1
    427c:	cmp	x2, x3
    4280:	b.hi	42e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xd8>  // b.pmore
    4284:	add	w0, w0, #0x1
    4288:	str	w0, [x20, #8]
    428c:	cbnz	x22, 4230 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x28>
    4290:	ldp	x21, x22, [sp, #32]
    4294:	ldp	x19, x20, [sp, #16]
    4298:	ldp	x23, x24, [sp, #48]
    429c:	ldp	x29, x30, [sp], #64
    42a0:	ret
    42a4:	mov	x0, x20
    42a8:	mov	x1, x24
    42ac:	mov	x3, #0x8                   	// #8
    42b0:	mov	x2, #0x0                   	// #0
    42b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    42b8:	ldr	w0, [x20, #8]
    42bc:	b	4268 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x60>
    42c0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    42c4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    42c8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    42cc:	add	x3, x3, #0x0
    42d0:	add	x1, x1, #0x0
    42d4:	add	x0, x0, #0x0
    42d8:	mov	w2, #0xcc                  	// #204
    42dc:	bl	0 <__assert_fail>
    42e0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    42e4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    42e8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    42ec:	add	x3, x3, #0x0
    42f0:	add	x1, x1, #0x0
    42f4:	add	x0, x0, #0x0
    42f8:	mov	w2, #0x43                  	// #67
    42fc:	bl	0 <__assert_fail>
    4300:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4304:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4308:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    430c:	add	x3, x3, #0x0
    4310:	add	x1, x1, #0x0
    4314:	add	x0, x0, #0x0
    4318:	mov	w2, #0xbd                  	// #189
    431c:	bl	0 <__assert_fail>

0000000000004320 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>:
    4320:	stp	x29, x30, [sp, #-128]!
    4324:	mov	x29, sp
    4328:	stp	x25, x26, [sp, #64]
    432c:	mov	x25, x0
    4330:	mov	x26, x1
    4334:	ldr	x0, [x1]
    4338:	stp	x19, x20, [sp, #16]
    433c:	stp	x21, x22, [sp, #32]
    4340:	add	x21, sp, #0x60
    4344:	mov	x8, x21
    4348:	ldr	x1, [x0]
    434c:	ldr	x1, [x1, #48]
    4350:	blr	x1
    4354:	ldp	x1, x2, [sp, #96]
    4358:	mov	x0, x25
    435c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4360:	ldr	x0, [sp, #96]
    4364:	add	x1, x21, #0x10
    4368:	cmp	x0, x1
    436c:	b.eq	4374 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x54>  // b.none
    4370:	bl	0 <_ZdlPv>
    4374:	ldr	w19, [x26, #64]
    4378:	ldp	x0, x1, [x25, #16]
    437c:	cbnz	x19, 4538 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x218>
    4380:	sub	x0, x0, x1
    4384:	cmp	x0, #0x1
    4388:	b.ls	47a8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x488>  // b.plast
    438c:	mov	w0, #0x7b20                	// #31520
    4390:	strh	w0, [x1]
    4394:	ldr	x0, [x25, #24]
    4398:	add	x0, x0, #0x2
    439c:	str	x0, [x25, #24]
    43a0:	ldr	w20, [x26, #96]
    43a4:	ldr	x1, [x25, #16]
    43a8:	cbnz	w20, 46b4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x394>
    43ac:	cmp	x1, x0
    43b0:	b.eq	4670 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x350>  // b.none
    43b4:	mov	w1, #0xa                   	// #10
    43b8:	strb	w1, [x0]
    43bc:	ldr	x4, [x25, #24]
    43c0:	add	x4, x4, #0x1
    43c4:	str	x4, [x25, #24]
    43c8:	ldr	w22, [x26, #80]
    43cc:	mov	w0, #0x18                  	// #24
    43d0:	ldr	x19, [x26, #72]
    43d4:	umaddl	x22, w22, w0, x19
    43d8:	cmp	x22, x19
    43dc:	b.eq	4460 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x140>  // b.none
    43e0:	adrp	x20, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    43e4:	mov	w21, #0x2020                	// #8224
    43e8:	add	x20, x20, #0x0
    43ec:	b	43fc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xdc>
    43f0:	add	x19, x19, #0x18
    43f4:	cmp	x22, x19
    43f8:	b.eq	449c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x17c>  // b.none
    43fc:	ldr	x0, [x19, #8]
    4400:	tst	w0, #0x4
    4404:	b.eq	43f0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xd0>  // b.none
    4408:	ldr	x2, [x26, #56]
    440c:	ldr	w1, [x26, #64]
    4410:	ldr	x3, [x19]
    4414:	add	x1, x2, x1, lsl #3
    4418:	cmp	x2, x1
    441c:	b.eq	4438 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x118>  // b.none
    4420:	ldr	x0, [x2]
    4424:	cmp	x3, x0
    4428:	b.eq	43f0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xd0>  // b.none
    442c:	add	x2, x2, #0x8
    4430:	cmp	x1, x2
    4434:	b.ne	4420 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x100>  // b.any
    4438:	ldr	x0, [x25, #16]
    443c:	sub	x0, x0, x4
    4440:	cmp	x0, #0x1
    4444:	b.ls	4648 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x328>  // b.plast
    4448:	strh	w21, [x4]
    444c:	mov	x1, x25
    4450:	ldr	x0, [x25, #24]
    4454:	add	x0, x0, #0x2
    4458:	str	x0, [x25, #24]
    445c:	b	465c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x33c>
    4460:	ldr	x0, [x25, #16]
    4464:	sub	x0, x0, x4
    4468:	cmp	x0, #0x1
    446c:	b.ls	468c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x36c>  // b.plast
    4470:	mov	w0, #0xa7d                 	// #2685
    4474:	strh	w0, [x4]
    4478:	mov	x0, x25
    447c:	ldr	x1, [x25, #24]
    4480:	ldp	x19, x20, [sp, #16]
    4484:	add	x1, x1, #0x2
    4488:	str	x1, [x25, #24]
    448c:	ldp	x21, x22, [sp, #32]
    4490:	ldp	x25, x26, [sp, #64]
    4494:	ldp	x29, x30, [sp], #128
    4498:	ret
    449c:	ldr	w22, [x26, #80]
    44a0:	mov	w0, #0x18                  	// #24
    44a4:	ldr	x19, [x26, #72]
    44a8:	umaddl	x22, w22, w0, x19
    44ac:	cmp	x19, x22
    44b0:	b.eq	4460 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x140>  // b.none
    44b4:	adrp	x20, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    44b8:	mov	w21, #0x2020                	// #8224
    44bc:	add	x20, x20, #0x0
    44c0:	b	44d0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1b0>
    44c4:	add	x19, x19, #0x18
    44c8:	cmp	x22, x19
    44cc:	b.eq	4460 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x140>  // b.none
    44d0:	ldr	x0, [x19, #8]
    44d4:	tst	w0, #0x4
    44d8:	b.ne	44c4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1a4>  // b.any
    44dc:	ldr	x2, [x26, #56]
    44e0:	ldr	w1, [x26, #64]
    44e4:	ldr	x3, [x19]
    44e8:	add	x1, x2, x1, lsl #3
    44ec:	cmp	x2, x1
    44f0:	b.eq	4510 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1f0>  // b.none
    44f4:	nop
    44f8:	ldr	x0, [x2]
    44fc:	cmp	x3, x0
    4500:	b.eq	44c4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1a4>  // b.none
    4504:	add	x2, x2, #0x8
    4508:	cmp	x1, x2
    450c:	b.ne	44f8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1d8>  // b.any
    4510:	ldr	x0, [x25, #16]
    4514:	sub	x0, x0, x4
    4518:	cmp	x0, #0x1
    451c:	b.ls	4620 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x300>  // b.plast
    4520:	strh	w21, [x4]
    4524:	mov	x1, x25
    4528:	ldr	x0, [x25, #24]
    452c:	add	x0, x0, #0x2
    4530:	str	x0, [x25, #24]
    4534:	b	4634 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x314>
    4538:	stp	x23, x24, [sp, #48]
    453c:	cmp	x0, x1
    4540:	ldr	x20, [x26, #56]
    4544:	str	x27, [sp, #80]
    4548:	b.eq	47c4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4a4>  // b.none
    454c:	mov	w0, #0x3c                  	// #60
    4550:	strb	w0, [x1]
    4554:	ldr	x0, [x25, #24]
    4558:	add	x0, x0, #0x1
    455c:	str	x0, [x25, #24]
    4560:	ldr	w3, [x26, #80]
    4564:	mov	x27, x20
    4568:	ldr	x0, [x26, #72]
    456c:	add	x19, x20, x19, lsl #3
    4570:	mov	w20, #0x18                  	// #24
    4574:	adrp	x22, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4578:	mov	w23, #0x202c                	// #8236
    457c:	add	x22, x22, #0x0
    4580:	umaddl	x3, w3, w20, x0
    4584:	ldr	x24, [x27], #8
    4588:	cmp	x0, x3
    458c:	b.ne	45a0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x280>  // b.any
    4590:	b	4600 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2e0>
    4594:	add	x0, x0, #0x18
    4598:	cmp	x3, x0
    459c:	b.eq	4600 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2e0>  // b.none
    45a0:	ldr	x2, [x0]
    45a4:	cmp	x2, x24
    45a8:	b.ne	4594 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x274>  // b.any
    45ac:	mov	x1, x25
    45b0:	mov	w2, #0x0                   	// #0
    45b4:	bl	3e10 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    45b8:	cmp	x19, x27
    45bc:	b.eq	47f4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4d4>  // b.none
    45c0:	ldp	x0, x1, [x25, #16]
    45c4:	ldr	x24, [x27]
    45c8:	sub	x0, x0, x1
    45cc:	cmp	x0, #0x1
    45d0:	b.ls	47dc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4bc>  // b.plast
    45d4:	strh	w23, [x1]
    45d8:	add	x27, x27, #0x8
    45dc:	ldr	x0, [x25, #24]
    45e0:	add	x0, x0, #0x2
    45e4:	str	x0, [x25, #24]
    45e8:	ldr	w3, [x26, #80]
    45ec:	ldr	x0, [x26, #72]
    45f0:	umaddl	x3, w3, w20, x0
    45f4:	cmp	x0, x3
    45f8:	b.ne	45a0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x280>  // b.any
    45fc:	nop
    4600:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4604:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4608:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    460c:	add	x3, x3, #0x0
    4610:	add	x1, x1, #0x0
    4614:	add	x0, x0, #0x0
    4618:	mov	w2, #0x87c                 	// #2172
    461c:	bl	0 <__assert_fail>
    4620:	mov	x1, x20
    4624:	mov	x0, x25
    4628:	mov	x2, #0x2                   	// #2
    462c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4630:	mov	x1, x0
    4634:	mov	x0, x19
    4638:	mov	w2, #0x1                   	// #1
    463c:	bl	3e10 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    4640:	ldr	x4, [x25, #24]
    4644:	b	44c4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1a4>
    4648:	mov	x1, x20
    464c:	mov	x0, x25
    4650:	mov	x2, #0x2                   	// #2
    4654:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4658:	mov	x1, x0
    465c:	mov	x0, x19
    4660:	mov	w2, #0x1                   	// #1
    4664:	bl	3e10 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    4668:	ldr	x4, [x25, #24]
    466c:	b	43f0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xd0>
    4670:	mov	x0, x25
    4674:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4678:	mov	x2, #0x1                   	// #1
    467c:	add	x1, x1, #0x0
    4680:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4684:	ldr	x4, [x25, #24]
    4688:	b	43c8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xa8>
    468c:	mov	x0, x25
    4690:	mov	x2, #0x2                   	// #2
    4694:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4698:	add	x1, x1, #0x0
    469c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    46a0:	ldp	x19, x20, [sp, #16]
    46a4:	ldp	x21, x22, [sp, #32]
    46a8:	ldp	x25, x26, [sp, #64]
    46ac:	ldp	x29, x30, [sp], #128
    46b0:	ret
    46b4:	stp	x23, x24, [sp, #48]
    46b8:	sub	x1, x1, x0
    46bc:	cmp	x1, #0x2
    46c0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    46c4:	ldr	x23, [x26, #88]
    46c8:	b.ls	4844 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x524>  // b.plast
    46cc:	add	x1, x1, #0x0
    46d0:	ldrh	w2, [x1]
    46d4:	ldrb	w1, [x1, #2]
    46d8:	strh	w2, [x0]
    46dc:	strb	w1, [x0, #2]
    46e0:	ldr	x0, [x25, #24]
    46e4:	add	x0, x0, #0x3
    46e8:	str	x0, [x25, #24]
    46ec:	mov	w1, #0x18                  	// #24
    46f0:	adrp	x22, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    46f4:	add	x22, x22, #0x0
    46f8:	mov	x19, x23
    46fc:	umaddl	x20, w20, w1, x23
    4700:	mov	w23, #0x20                  	// #32
    4704:	ldr	x1, [x25, #16]
    4708:	cmp	x1, x0
    470c:	b.eq	4790 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x470>  // b.none
    4710:	strb	w23, [x0]
    4714:	mov	x24, x25
    4718:	ldr	x0, [x25, #24]
    471c:	add	x0, x0, #0x1
    4720:	str	x0, [x25, #24]
    4724:	ldr	x0, [x19]
    4728:	mov	x8, x21
    472c:	add	x19, x19, #0x18
    4730:	ldr	x0, [x0]
    4734:	ldr	x1, [x0]
    4738:	ldr	x1, [x1, #48]
    473c:	blr	x1
    4740:	ldp	x1, x2, [sp, #96]
    4744:	mov	x0, x24
    4748:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    474c:	ldr	x0, [sp, #96]
    4750:	add	x1, x21, #0x10
    4754:	cmp	x0, x1
    4758:	b.eq	4778 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x458>  // b.none
    475c:	bl	0 <_ZdlPv>
    4760:	cmp	x20, x19
    4764:	ldr	x0, [x25, #24]
    4768:	b.ne	4704 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3e4>  // b.any
    476c:	ldr	x1, [x25, #16]
    4770:	ldp	x23, x24, [sp, #48]
    4774:	b	43ac <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x8c>
    4778:	cmp	x20, x19
    477c:	ldr	x0, [x25, #24]
    4780:	b.eq	476c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x44c>  // b.none
    4784:	ldr	x1, [x25, #16]
    4788:	cmp	x1, x0
    478c:	b.ne	4710 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3f0>  // b.any
    4790:	mov	x1, x22
    4794:	mov	x0, x25
    4798:	mov	x2, #0x1                   	// #1
    479c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    47a0:	mov	x24, x0
    47a4:	b	4724 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x404>
    47a8:	mov	x0, x25
    47ac:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    47b0:	mov	x2, #0x2                   	// #2
    47b4:	add	x1, x1, #0x0
    47b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    47bc:	ldr	x0, [x25, #24]
    47c0:	b	43a0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x80>
    47c4:	mov	x0, x25
    47c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    47cc:	mov	x2, #0x1                   	// #1
    47d0:	add	x1, x1, #0x0
    47d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    47d8:	b	4560 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x240>
    47dc:	mov	x1, x22
    47e0:	mov	x0, x25
    47e4:	mov	x2, #0x2                   	// #2
    47e8:	add	x27, x27, #0x8
    47ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    47f0:	b	45e8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2c8>
    47f4:	ldp	x1, x0, [x25, #16]
    47f8:	cmp	x1, x0
    47fc:	b.eq	4828 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x508>  // b.none
    4800:	mov	w1, #0x3e                  	// #62
    4804:	strb	w1, [x0]
    4808:	ldr	x1, [x25, #24]
    480c:	add	x1, x1, #0x1
    4810:	str	x1, [x25, #24]
    4814:	ldr	x0, [x25, #16]
    4818:	ldp	x23, x24, [sp, #48]
    481c:	sub	x0, x0, x1
    4820:	ldr	x27, [sp, #80]
    4824:	b	4384 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x64>
    4828:	mov	x0, x25
    482c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4830:	mov	x2, #0x1                   	// #1
    4834:	add	x1, x1, #0x0
    4838:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    483c:	ldr	x1, [x25, #24]
    4840:	b	4814 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4f4>
    4844:	add	x1, x1, #0x0
    4848:	mov	x0, x25
    484c:	mov	x2, #0x3                   	// #3
    4850:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4854:	ldr	x0, [x25, #24]
    4858:	b	46ec <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3cc>
    485c:	nop

0000000000004860 <_ZNK4llvm6Record4dumpEv>:
    4860:	stp	x29, x30, [sp, #-32]!
    4864:	mov	x29, sp
    4868:	str	x19, [sp, #16]
    486c:	mov	x19, x0
    4870:	bl	0 <_ZN4llvm4errsEv>
    4874:	mov	x1, x19
    4878:	ldr	x19, [sp, #16]
    487c:	ldp	x29, x30, [sp], #32
    4880:	b	4320 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    4884:	nop

0000000000004888 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE>:
    4888:	stp	x29, x30, [sp, #-64]!
    488c:	mov	x29, sp
    4890:	stp	x21, x22, [sp, #32]
    4894:	mov	x21, x1
    4898:	ldp	x1, x2, [x0, #16]
    489c:	stp	x19, x20, [sp, #16]
    48a0:	mov	x19, x0
    48a4:	str	x23, [sp, #48]
    48a8:	sub	x1, x1, x2
    48ac:	cmp	x1, #0x27
    48b0:	b.ls	4a6c <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1e4>  // b.plast
    48b4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    48b8:	add	x0, x0, #0x0
    48bc:	ldp	x4, x5, [x0]
    48c0:	stp	x4, x5, [x2]
    48c4:	ldp	x4, x5, [x0, #16]
    48c8:	stp	x4, x5, [x2, #16]
    48cc:	ldr	x0, [x0, #32]
    48d0:	str	x0, [x2, #32]
    48d4:	ldr	x3, [x19, #24]
    48d8:	add	x3, x3, #0x28
    48dc:	str	x3, [x19, #24]
    48e0:	ldr	x20, [x21, #24]
    48e4:	add	x22, x21, #0x8
    48e8:	cmp	x20, x22
    48ec:	b.eq	498c <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x104>  // b.none
    48f0:	ldr	x2, [x19, #16]
    48f4:	adrp	x23, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    48f8:	mov	x0, x19
    48fc:	add	x23, x23, #0x0
    4900:	sub	x2, x2, x3
    4904:	cmp	x2, #0x5
    4908:	b.ls	4960 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xd8>  // b.plast
    490c:	nop
    4910:	ldrh	w1, [x23, #4]
    4914:	ldr	w2, [x23]
    4918:	str	w2, [x3]
    491c:	strh	w1, [x3, #4]
    4920:	ldr	x2, [x19, #24]
    4924:	ldr	x1, [x20, #64]
    4928:	add	x2, x2, #0x6
    492c:	str	x2, [x19, #24]
    4930:	bl	4320 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    4934:	mov	x0, x20
    4938:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    493c:	mov	x20, x0
    4940:	cmp	x0, x22
    4944:	b.eq	4988 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x100>  // b.none
    4948:	ldr	x2, [x19, #16]
    494c:	mov	x0, x19
    4950:	ldr	x3, [x19, #24]
    4954:	sub	x2, x2, x3
    4958:	cmp	x2, #0x5
    495c:	b.hi	4910 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x88>  // b.pmore
    4960:	mov	x2, #0x6                   	// #6
    4964:	mov	x1, x23
    4968:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    496c:	ldr	x1, [x20, #64]
    4970:	bl	4320 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    4974:	mov	x0, x20
    4978:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    497c:	mov	x20, x0
    4980:	cmp	x22, x0
    4984:	b.ne	4948 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xc0>  // b.any
    4988:	ldr	x3, [x19, #24]
    498c:	ldr	x0, [x19, #16]
    4990:	sub	x0, x0, x3
    4994:	cmp	x0, #0x24
    4998:	b.ls	4a84 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1fc>  // b.plast
    499c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    49a0:	add	x0, x0, #0x0
    49a4:	ldp	x4, x5, [x0, #16]
    49a8:	stp	x4, x5, [x3, #16]
    49ac:	ldp	x4, x5, [x0]
    49b0:	stp	x4, x5, [x3]
    49b4:	ldur	x0, [x0, #29]
    49b8:	stur	x0, [x3, #29]
    49bc:	ldr	x0, [x19, #24]
    49c0:	add	x0, x0, #0x25
    49c4:	str	x0, [x19, #24]
    49c8:	ldr	x20, [x21, #72]
    49cc:	add	x21, x21, #0x38
    49d0:	cmp	x21, x20
    49d4:	b.eq	4a54 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1cc>  // b.none
    49d8:	mov	w22, #0x6564                	// #25956
    49dc:	adrp	x23, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    49e0:	movk	w22, #0x2066, lsl #16
    49e4:	add	x23, x23, #0x0
    49e8:	b	4a18 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x190>
    49ec:	str	w22, [x2]
    49f0:	ldr	x2, [x19, #24]
    49f4:	ldr	x1, [x20, #64]
    49f8:	add	x2, x2, #0x4
    49fc:	str	x2, [x19, #24]
    4a00:	bl	4320 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    4a04:	mov	x0, x20
    4a08:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    4a0c:	mov	x20, x0
    4a10:	cmp	x21, x0
    4a14:	b.eq	4a54 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1cc>  // b.none
    4a18:	ldp	x1, x2, [x19, #16]
    4a1c:	mov	x0, x19
    4a20:	sub	x1, x1, x2
    4a24:	cmp	x1, #0x3
    4a28:	b.hi	49ec <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x164>  // b.pmore
    4a2c:	mov	x2, #0x4                   	// #4
    4a30:	mov	x1, x23
    4a34:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4a38:	ldr	x1, [x20, #64]
    4a3c:	bl	4320 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    4a40:	mov	x0, x20
    4a44:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    4a48:	mov	x20, x0
    4a4c:	cmp	x21, x0
    4a50:	b.ne	4a18 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x190>  // b.any
    4a54:	mov	x0, x19
    4a58:	ldp	x19, x20, [sp, #16]
    4a5c:	ldp	x21, x22, [sp, #32]
    4a60:	ldr	x23, [sp, #48]
    4a64:	ldp	x29, x30, [sp], #64
    4a68:	ret
    4a6c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4a70:	mov	x2, #0x28                  	// #40
    4a74:	add	x1, x1, #0x0
    4a78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4a7c:	ldr	x3, [x19, #24]
    4a80:	b	48e0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x58>
    4a84:	mov	x0, x19
    4a88:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4a8c:	mov	x2, #0x25                  	// #37
    4a90:	add	x1, x1, #0x0
    4a94:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4a98:	b	49c8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x140>
    4a9c:	nop

0000000000004aa0 <_ZNK4llvm12RecordKeeper4dumpEv>:
    4aa0:	stp	x29, x30, [sp, #-32]!
    4aa4:	mov	x29, sp
    4aa8:	str	x19, [sp, #16]
    4aac:	mov	x19, x0
    4ab0:	bl	0 <_ZN4llvm4errsEv>
    4ab4:	mov	x1, x19
    4ab8:	ldr	x19, [sp, #16]
    4abc:	ldp	x29, x30, [sp], #32
    4ac0:	b	4888 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE>
    4ac4:	nop

0000000000004ac8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev>:
    4ac8:	stp	x29, x30, [sp, #-304]!
    4acc:	mov	x29, sp
    4ad0:	stp	x25, x26, [sp, #64]
    4ad4:	mov	x26, x0
    4ad8:	stp	x19, x20, [sp, #16]
    4adc:	mov	x19, x8
    4ae0:	stp	x21, x22, [sp, #32]
    4ae4:	stp	x23, x24, [sp, #48]
    4ae8:	add	x24, sp, #0x50
    4aec:	add	x0, x24, #0x10
    4af0:	stp	x0, xzr, [sp, #80]
    4af4:	ldrb	w0, [x26, #9]
    4af8:	strb	wzr, [sp, #96]
    4afc:	cmp	w0, #0x11
    4b00:	b.ls	4cfc <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x234>  // b.plast
    4b04:	add	x20, sp, #0x70
    4b08:	mov	x21, #0x0                   	// #0
    4b0c:	add	x1, x20, #0x10
    4b10:	str	x1, [sp, #112]
    4b14:	nop
    4b18:	str	x21, [sp, #120]
    4b1c:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
    4b20:	strb	wzr, [x1, x21]
    4b24:	ldr	x0, [sp, #120]
    4b28:	cmp	x0, x23
    4b2c:	b.eq	4ed4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x40c>  // b.none
    4b30:	mov	x2, #0x1                   	// #1
    4b34:	mov	x0, x20
    4b38:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4b3c:	add	x1, x1, #0x0
    4b40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4b44:	add	x21, sp, #0x90
    4b48:	ldr	x0, [x26, #32]
    4b4c:	mov	x8, x21
    4b50:	add	x22, sp, #0xb0
    4b54:	ldr	x1, [x0]
    4b58:	ldr	x1, [x1, #40]
    4b5c:	blr	x1
    4b60:	mov	x0, x20
    4b64:	mov	x1, x21
    4b68:	mov	x8, x22
    4b6c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4b70:	ldr	x0, [sp, #184]
    4b74:	sub	x23, x23, x0
    4b78:	cmp	x23, #0x1
    4b7c:	b.ls	4ed4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x40c>  // b.plast
    4b80:	mov	x2, #0x2                   	// #2
    4b84:	mov	x0, x22
    4b88:	add	x23, sp, #0xd0
    4b8c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4b90:	add	x1, x1, #0x0
    4b94:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4b98:	mov	x2, x0
    4b9c:	mov	x1, x0
    4ba0:	add	x0, x23, #0x10
    4ba4:	str	x0, [sp, #208]
    4ba8:	ldr	x0, [x2], #16
    4bac:	cmp	x0, x2
    4bb0:	b.eq	4d14 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x24c>  // b.none
    4bb4:	ldr	x3, [x1, #16]
    4bb8:	str	x0, [sp, #208]
    4bbc:	str	x3, [sp, #224]
    4bc0:	strb	wzr, [x1, #16]
    4bc4:	add	x25, sp, #0xf0
    4bc8:	ldr	x0, [x1, #8]
    4bcc:	str	x0, [sp, #216]
    4bd0:	ldr	x0, [x26, #40]
    4bd4:	stp	x2, xzr, [x1]
    4bd8:	mov	x8, x25
    4bdc:	add	x26, sp, #0x110
    4be0:	ldr	x1, [x0]
    4be4:	ldr	x1, [x1, #40]
    4be8:	blr	x1
    4bec:	mov	x1, x25
    4bf0:	mov	x0, x23
    4bf4:	mov	x8, x26
    4bf8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4bfc:	ldr	x1, [sp, #280]
    4c00:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    4c04:	cmp	x1, x0
    4c08:	b.eq	4ed4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x40c>  // b.none
    4c0c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4c10:	add	x1, x1, #0x0
    4c14:	mov	x2, #0x1                   	// #1
    4c18:	mov	x0, x26
    4c1c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4c20:	mov	x1, x0
    4c24:	add	x2, x19, #0x10
    4c28:	str	x2, [x19]
    4c2c:	ldr	x2, [x1], #16
    4c30:	cmp	x2, x1
    4c34:	b.eq	4d20 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x258>  // b.none
    4c38:	ldr	x3, [x0, #16]
    4c3c:	str	x2, [x19]
    4c40:	str	x3, [x19, #16]
    4c44:	ldr	x2, [x0, #8]
    4c48:	str	x2, [x19, #8]
    4c4c:	stp	x1, xzr, [x0]
    4c50:	add	x26, x26, #0x10
    4c54:	strb	wzr, [x0, #16]
    4c58:	ldr	x0, [sp, #272]
    4c5c:	cmp	x0, x26
    4c60:	b.eq	4c68 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1a0>  // b.none
    4c64:	bl	0 <_ZdlPv>
    4c68:	ldr	x0, [sp, #240]
    4c6c:	add	x25, x25, #0x10
    4c70:	cmp	x0, x25
    4c74:	b.eq	4c7c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1b4>  // b.none
    4c78:	bl	0 <_ZdlPv>
    4c7c:	ldr	x0, [sp, #208]
    4c80:	add	x23, x23, #0x10
    4c84:	cmp	x0, x23
    4c88:	b.eq	4c90 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1c8>  // b.none
    4c8c:	bl	0 <_ZdlPv>
    4c90:	ldr	x0, [sp, #176]
    4c94:	add	x22, x22, #0x10
    4c98:	cmp	x0, x22
    4c9c:	b.eq	4ca4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1dc>  // b.none
    4ca0:	bl	0 <_ZdlPv>
    4ca4:	ldr	x0, [sp, #144]
    4ca8:	add	x21, x21, #0x10
    4cac:	cmp	x0, x21
    4cb0:	b.eq	4cb8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1f0>  // b.none
    4cb4:	bl	0 <_ZdlPv>
    4cb8:	ldr	x0, [sp, #112]
    4cbc:	add	x20, x20, #0x10
    4cc0:	cmp	x0, x20
    4cc4:	b.eq	4ccc <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x204>  // b.none
    4cc8:	bl	0 <_ZdlPv>
    4ccc:	ldr	x0, [sp, #80]
    4cd0:	add	x24, x24, #0x10
    4cd4:	cmp	x0, x24
    4cd8:	b.eq	4ce0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x218>  // b.none
    4cdc:	bl	0 <_ZdlPv>
    4ce0:	mov	x0, x19
    4ce4:	ldp	x19, x20, [sp, #16]
    4ce8:	ldp	x21, x22, [sp, #32]
    4cec:	ldp	x23, x24, [sp, #48]
    4cf0:	ldp	x25, x26, [sp, #64]
    4cf4:	ldp	x29, x30, [sp], #304
    4cf8:	ret
    4cfc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4d00:	add	x1, x1, #0x0
    4d04:	ldrb	w0, [x1, w0, uxtw]
    4d08:	adr	x1, 4d14 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x24c>
    4d0c:	add	x0, x1, w0, sxtb #2
    4d10:	br	x0
    4d14:	ldp	x4, x5, [x1, #16]
    4d18:	stp	x4, x5, [sp, #224]
    4d1c:	b	4bc0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0xf8>
    4d20:	ldp	x2, x3, [x0, #16]
    4d24:	stp	x2, x3, [x19, #16]
    4d28:	b	4c44 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x17c>
    4d2c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4d30:	mov	x0, x24
    4d34:	add	x1, x1, #0x0
    4d38:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    4d3c:	add	x20, sp, #0x70
    4d40:	ldp	x22, x21, [sp, #80]
    4d44:	add	x0, x20, #0x10
    4d48:	str	x0, [sp, #112]
    4d4c:	cmn	x22, x21
    4d50:	cset	w1, ne  // ne = any
    4d54:	cmp	x22, #0x0
    4d58:	csel	w1, w1, wzr, eq  // eq = none
    4d5c:	cbnz	w1, 4ee0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x418>
    4d60:	str	x21, [sp, #272]
    4d64:	cmp	x21, #0xf
    4d68:	b.hi	4ea0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x3d8>  // b.pmore
    4d6c:	cmp	x21, #0x1
    4d70:	b.ne	4e94 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x3cc>  // b.any
    4d74:	ldrb	w2, [x22]
    4d78:	mov	x1, x0
    4d7c:	strb	w2, [sp, #128]
    4d80:	b	4b18 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x50>
    4d84:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4d88:	mov	x0, x24
    4d8c:	add	x1, x1, #0x0
    4d90:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4d94:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4d98:	mov	x0, x24
    4d9c:	add	x1, x1, #0x0
    4da0:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4da4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4da8:	mov	x0, x24
    4dac:	add	x1, x1, #0x0
    4db0:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4db4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4db8:	mov	x0, x24
    4dbc:	add	x1, x1, #0x0
    4dc0:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4dc4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4dc8:	mov	x0, x24
    4dcc:	add	x1, x1, #0x0
    4dd0:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4dd4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4dd8:	mov	x0, x24
    4ddc:	add	x1, x1, #0x0
    4de0:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4de4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4de8:	mov	x0, x24
    4dec:	add	x1, x1, #0x0
    4df0:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4df4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4df8:	mov	x0, x24
    4dfc:	add	x1, x1, #0x0
    4e00:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e04:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4e08:	mov	x0, x24
    4e0c:	add	x1, x1, #0x0
    4e10:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e14:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4e18:	mov	x0, x24
    4e1c:	add	x1, x1, #0x0
    4e20:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e24:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4e28:	mov	x0, x24
    4e2c:	add	x1, x1, #0x0
    4e30:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e34:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4e38:	mov	x0, x24
    4e3c:	add	x1, x1, #0x0
    4e40:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e44:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4e48:	mov	x0, x24
    4e4c:	add	x1, x1, #0x0
    4e50:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e54:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4e58:	mov	x0, x24
    4e5c:	add	x1, x1, #0x0
    4e60:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e64:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4e68:	mov	x0, x24
    4e6c:	add	x1, x1, #0x0
    4e70:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e74:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4e78:	mov	x0, x24
    4e7c:	add	x1, x1, #0x0
    4e80:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e84:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4e88:	mov	x0, x24
    4e8c:	add	x1, x1, #0x0
    4e90:	b	4d38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x270>
    4e94:	mov	x1, x0
    4e98:	cbz	x21, 4b18 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x50>
    4e9c:	b	4ebc <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x3f4>
    4ea0:	add	x1, sp, #0x110
    4ea4:	mov	x0, x20
    4ea8:	mov	x2, #0x0                   	// #0
    4eac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    4eb0:	ldr	x1, [sp, #272]
    4eb4:	str	x0, [sp, #112]
    4eb8:	str	x1, [sp, #128]
    4ebc:	mov	x2, x21
    4ec0:	mov	x1, x22
    4ec4:	bl	0 <memcpy>
    4ec8:	ldr	x1, [sp, #112]
    4ecc:	ldr	x21, [sp, #272]
    4ed0:	b	4b18 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x50>
    4ed4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4ed8:	add	x0, x0, #0x0
    4edc:	bl	0 <_ZSt20__throw_length_errorPKc>
    4ee0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4ee4:	add	x0, x0, #0x0
    4ee8:	bl	0 <_ZSt19__throw_logic_errorPKc>
    4eec:	nop

0000000000004ef0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev>:
    4ef0:	stp	x29, x30, [sp, #-432]!
    4ef4:	mov	x29, sp
    4ef8:	stp	x21, x22, [sp, #32]
    4efc:	mov	x21, x0
    4f00:	add	x0, sp, #0x80
    4f04:	stp	x19, x20, [sp, #16]
    4f08:	add	x1, sp, #0x70
    4f0c:	mov	x19, x8
    4f10:	stp	x23, x24, [sp, #48]
    4f14:	stp	x25, x26, [sp, #64]
    4f18:	stp	x27, x28, [sp, #80]
    4f1c:	stp	x1, x0, [sp, #104]
    4f20:	ldrb	w0, [x21, #9]
    4f24:	str	xzr, [sp, #120]
    4f28:	strb	wzr, [sp, #128]
    4f2c:	cmp	w0, #0x2
    4f30:	b.eq	52f0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x400>  // b.none
    4f34:	b.hi	524c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x35c>  // b.pmore
    4f38:	cbz	w0, 530c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x41c>
    4f3c:	mov	x0, x1
    4f40:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4f44:	add	x1, x1, #0x0
    4f48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    4f4c:	ldr	x24, [sp, #112]
    4f50:	mov	w23, #0x1                   	// #1
    4f54:	ldr	x22, [sp, #120]
    4f58:	add	x20, sp, #0x90
    4f5c:	add	x0, x20, #0x10
    4f60:	str	x0, [sp, #144]
    4f64:	cmn	x24, x22
    4f68:	cset	w1, ne  // ne = any
    4f6c:	cmp	x24, #0x0
    4f70:	csel	w1, w1, wzr, eq  // eq = none
    4f74:	cbnz	w1, 533c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x44c>
    4f78:	str	x22, [sp, #400]
    4f7c:	cmp	x22, #0xf
    4f80:	b.hi	5270 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x380>  // b.pmore
    4f84:	cmp	x22, #0x1
    4f88:	b.ne	5328 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x438>  // b.any
    4f8c:	ldrb	w1, [x24]
    4f90:	strb	w1, [sp, #160]
    4f94:	str	x22, [sp, #152]
    4f98:	strb	wzr, [x0, x22]
    4f9c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    4fa0:	ldr	x1, [sp, #152]
    4fa4:	cmp	x1, x0
    4fa8:	b.eq	5330 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x440>  // b.none
    4fac:	mov	x0, x20
    4fb0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4fb4:	mov	x2, #0x1                   	// #1
    4fb8:	add	x1, x1, #0x0
    4fbc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4fc0:	add	x26, sp, #0xb0
    4fc4:	ldr	x0, [x21, #32]
    4fc8:	mov	x8, x26
    4fcc:	ldr	x1, [x0]
    4fd0:	cbz	w23, 52a4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3b4>
    4fd4:	ldr	x1, [x1, #48]
    4fd8:	blr	x1
    4fdc:	add	x22, sp, #0xd0
    4fe0:	mov	x1, x26
    4fe4:	mov	x0, x20
    4fe8:	mov	x8, x22
    4fec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    4ff0:	ldr	x1, [sp, #216]
    4ff4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    4ff8:	sub	x0, x0, x1
    4ffc:	cmp	x0, #0x1
    5000:	b.ls	5330 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x440>  // b.plast
    5004:	mov	x2, #0x2                   	// #2
    5008:	mov	x0, x22
    500c:	add	x23, sp, #0xf0
    5010:	adrp	x27, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5014:	add	x1, x27, #0x0
    5018:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    501c:	mov	x2, x0
    5020:	mov	x1, x0
    5024:	add	x0, x23, #0x10
    5028:	str	x0, [sp, #240]
    502c:	ldr	x0, [x2], #16
    5030:	cmp	x0, x2
    5034:	b.eq	52cc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3dc>  // b.none
    5038:	ldr	x3, [x1, #16]
    503c:	str	x0, [sp, #240]
    5040:	str	x3, [sp, #256]
    5044:	strb	wzr, [x1, #16]
    5048:	add	x24, sp, #0x110
    504c:	ldr	x0, [x1, #8]
    5050:	str	x0, [sp, #248]
    5054:	ldr	x0, [x21, #40]
    5058:	stp	x2, xzr, [x1]
    505c:	mov	x8, x24
    5060:	add	x25, sp, #0x130
    5064:	ldr	x1, [x0]
    5068:	ldr	x1, [x1, #40]
    506c:	blr	x1
    5070:	mov	x1, x24
    5074:	mov	x0, x23
    5078:	mov	x8, x25
    507c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5080:	ldr	x1, [sp, #312]
    5084:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    5088:	sub	x0, x0, x1
    508c:	cmp	x0, #0x1
    5090:	b.ls	5330 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x440>  // b.plast
    5094:	add	x1, x27, #0x0
    5098:	mov	x2, #0x2                   	// #2
    509c:	mov	x0, x25
    50a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    50a4:	mov	x1, x0
    50a8:	add	x27, sp, #0x150
    50ac:	mov	x2, x1
    50b0:	add	x0, x27, #0x10
    50b4:	str	x0, [sp, #336]
    50b8:	ldr	x0, [x2], #16
    50bc:	cmp	x0, x2
    50c0:	b.eq	52d8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3e8>  // b.none
    50c4:	ldr	x3, [x1, #16]
    50c8:	str	x0, [sp, #336]
    50cc:	str	x3, [sp, #352]
    50d0:	strb	wzr, [x1, #16]
    50d4:	add	x28, sp, #0x170
    50d8:	ldr	x0, [x1, #8]
    50dc:	str	x0, [sp, #344]
    50e0:	ldr	x0, [x21, #48]
    50e4:	stp	x2, xzr, [x1]
    50e8:	mov	x8, x28
    50ec:	add	x21, sp, #0x190
    50f0:	ldr	x1, [x0]
    50f4:	ldr	x1, [x1, #40]
    50f8:	blr	x1
    50fc:	mov	x1, x28
    5100:	mov	x0, x27
    5104:	mov	x8, x21
    5108:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    510c:	ldr	x1, [sp, #408]
    5110:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    5114:	cmp	x1, x0
    5118:	b.eq	5330 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x440>  // b.none
    511c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5120:	add	x1, x1, #0x0
    5124:	mov	x2, #0x1                   	// #1
    5128:	mov	x0, x21
    512c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5130:	mov	x1, x0
    5134:	add	x2, x19, #0x10
    5138:	str	x2, [x19]
    513c:	ldr	x2, [x1], #16
    5140:	cmp	x2, x1
    5144:	b.eq	52e4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3f4>  // b.none
    5148:	ldr	x3, [x0, #16]
    514c:	str	x2, [x19]
    5150:	str	x3, [x19, #16]
    5154:	ldr	x2, [x0, #8]
    5158:	str	x2, [x19, #8]
    515c:	stp	x1, xzr, [x0]
    5160:	add	x21, x21, #0x10
    5164:	strb	wzr, [x0, #16]
    5168:	ldr	x0, [sp, #400]
    516c:	cmp	x0, x21
    5170:	b.eq	5178 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x288>  // b.none
    5174:	bl	0 <_ZdlPv>
    5178:	ldr	x0, [sp, #368]
    517c:	add	x28, x28, #0x10
    5180:	cmp	x0, x28
    5184:	b.eq	518c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x29c>  // b.none
    5188:	bl	0 <_ZdlPv>
    518c:	ldr	x0, [sp, #336]
    5190:	add	x27, x27, #0x10
    5194:	cmp	x0, x27
    5198:	b.eq	51a0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2b0>  // b.none
    519c:	bl	0 <_ZdlPv>
    51a0:	ldr	x0, [sp, #304]
    51a4:	add	x25, x25, #0x10
    51a8:	cmp	x0, x25
    51ac:	b.eq	51b4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2c4>  // b.none
    51b0:	bl	0 <_ZdlPv>
    51b4:	ldr	x0, [sp, #272]
    51b8:	add	x24, x24, #0x10
    51bc:	cmp	x0, x24
    51c0:	b.eq	51c8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2d8>  // b.none
    51c4:	bl	0 <_ZdlPv>
    51c8:	ldr	x0, [sp, #240]
    51cc:	add	x23, x23, #0x10
    51d0:	cmp	x0, x23
    51d4:	b.eq	51dc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2ec>  // b.none
    51d8:	bl	0 <_ZdlPv>
    51dc:	ldr	x0, [sp, #208]
    51e0:	add	x22, x22, #0x10
    51e4:	cmp	x0, x22
    51e8:	b.eq	51f0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x300>  // b.none
    51ec:	bl	0 <_ZdlPv>
    51f0:	ldr	x0, [sp, #176]
    51f4:	add	x26, x26, #0x10
    51f8:	cmp	x0, x26
    51fc:	b.eq	5204 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x314>  // b.none
    5200:	bl	0 <_ZdlPv>
    5204:	ldr	x0, [sp, #144]
    5208:	add	x20, x20, #0x10
    520c:	cmp	x0, x20
    5210:	b.eq	5218 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x328>  // b.none
    5214:	bl	0 <_ZdlPv>
    5218:	ldp	x1, x0, [sp, #104]
    521c:	add	x1, x1, #0x10
    5220:	cmp	x0, x1
    5224:	b.eq	522c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x33c>  // b.none
    5228:	bl	0 <_ZdlPv>
    522c:	mov	x0, x19
    5230:	ldp	x19, x20, [sp, #16]
    5234:	ldp	x21, x22, [sp, #32]
    5238:	ldp	x23, x24, [sp, #48]
    523c:	ldp	x25, x26, [sp, #64]
    5240:	ldp	x27, x28, [sp, #80]
    5244:	ldp	x29, x30, [sp], #432
    5248:	ret
    524c:	cmp	w0, #0x3
    5250:	b.ne	52b0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3c0>  // b.any
    5254:	mov	x0, x1
    5258:	mov	w23, #0x0                   	// #0
    525c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5260:	add	x1, x1, #0x0
    5264:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    5268:	ldr	x24, [sp, #112]
    526c:	b	4f54 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x64>
    5270:	add	x1, sp, #0x190
    5274:	mov	x0, x20
    5278:	mov	x2, #0x0                   	// #0
    527c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    5280:	ldr	x1, [sp, #400]
    5284:	str	x0, [sp, #144]
    5288:	str	x1, [sp, #160]
    528c:	mov	x2, x22
    5290:	mov	x1, x24
    5294:	bl	0 <memcpy>
    5298:	ldr	x0, [sp, #144]
    529c:	ldr	x22, [sp, #400]
    52a0:	b	4f94 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xa4>
    52a4:	ldr	x1, [x1, #40]
    52a8:	blr	x1
    52ac:	b	4fdc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xec>
    52b0:	add	x20, sp, #0x90
    52b4:	mov	w23, #0x0                   	// #0
    52b8:	add	x0, x20, #0x10
    52bc:	str	x0, [sp, #144]
    52c0:	add	x0, x20, #0x10
    52c4:	mov	x22, #0x0                   	// #0
    52c8:	b	4f94 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xa4>
    52cc:	ldp	x4, x5, [x1, #16]
    52d0:	stp	x4, x5, [sp, #256]
    52d4:	b	5044 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x154>
    52d8:	ldp	x4, x5, [x1, #16]
    52dc:	stp	x4, x5, [sp, #352]
    52e0:	b	50d0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x1e0>
    52e4:	ldp	x2, x3, [x0, #16]
    52e8:	stp	x2, x3, [x19, #16]
    52ec:	b	5154 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x264>
    52f0:	mov	x0, x1
    52f4:	mov	w23, #0x0                   	// #0
    52f8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    52fc:	add	x1, x1, #0x0
    5300:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    5304:	ldr	x24, [sp, #112]
    5308:	b	4f54 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x64>
    530c:	mov	x0, x1
    5310:	mov	w23, #0x0                   	// #0
    5314:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5318:	add	x1, x1, #0x0
    531c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    5320:	ldr	x24, [sp, #112]
    5324:	b	4f54 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x64>
    5328:	cbz	x22, 52c0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3d0>
    532c:	b	528c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x39c>
    5330:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5334:	add	x0, x0, #0x0
    5338:	bl	0 <_ZSt20__throw_length_errorPKc>
    533c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5340:	add	x0, x0, #0x0
    5344:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000005348 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev>:
    5348:	stp	x29, x30, [sp, #-272]!
    534c:	mov	x29, sp
    5350:	stp	x23, x24, [sp, #48]
    5354:	mov	x24, x0
    5358:	stp	x19, x20, [sp, #16]
    535c:	mov	x19, x8
    5360:	stp	x21, x22, [sp, #32]
    5364:	add	x22, sp, #0x50
    5368:	add	x0, x22, #0x10
    536c:	str	x25, [sp, #64]
    5370:	stp	x0, xzr, [sp, #80]
    5374:	ldrb	w1, [x24, #9]
    5378:	strb	wzr, [sp, #96]
    537c:	cmp	w1, #0x3
    5380:	b.eq	56ac <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x364>  // b.none
    5384:	b.hi	5634 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2ec>  // b.pmore
    5388:	cmp	w1, #0x1
    538c:	b.eq	568c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x344>  // b.none
    5390:	cmp	w1, #0x2
    5394:	b.ne	5520 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x1d8>  // b.any
    5398:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    539c:	mov	x0, x22
    53a0:	add	x1, x1, #0x0
    53a4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
    53a8:	ldp	x23, x21, [sp, #80]
    53ac:	add	x20, sp, #0xb0
    53b0:	add	x0, x20, #0x10
    53b4:	str	x0, [sp, #176]
    53b8:	cmn	x23, x21
    53bc:	cset	w1, ne  // ne = any
    53c0:	cmp	x23, #0x0
    53c4:	csel	w1, w1, wzr, eq  // eq = none
    53c8:	cbnz	w1, 5730 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3e8>
    53cc:	str	x21, [sp, #240]
    53d0:	cmp	x21, #0xf
    53d4:	b.ls	5654 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x30c>  // b.plast
    53d8:	add	x1, sp, #0xf0
    53dc:	mov	x0, x20
    53e0:	mov	x2, #0x0                   	// #0
    53e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    53e8:	ldr	x1, [sp, #240]
    53ec:	str	x0, [sp, #176]
    53f0:	str	x1, [sp, #192]
    53f4:	mov	x2, x21
    53f8:	mov	x1, x23
    53fc:	bl	0 <memcpy>
    5400:	ldr	x1, [sp, #176]
    5404:	ldr	x21, [sp, #240]
    5408:	str	x21, [sp, #184]
    540c:	strb	wzr, [x1, x21]
    5410:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    5414:	ldr	x0, [sp, #184]
    5418:	cmp	x0, x25
    541c:	b.eq	56bc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x374>  // b.none
    5420:	mov	x2, #0x1                   	// #1
    5424:	mov	x0, x20
    5428:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    542c:	add	x1, x1, #0x0
    5430:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5434:	add	x23, sp, #0xd0
    5438:	ldr	x0, [x24, #32]
    543c:	mov	x8, x23
    5440:	add	x21, sp, #0xf0
    5444:	ldr	x1, [x0]
    5448:	ldr	x1, [x1, #40]
    544c:	blr	x1
    5450:	mov	x0, x20
    5454:	mov	x1, x23
    5458:	mov	x8, x21
    545c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5460:	ldr	x0, [sp, #248]
    5464:	cmp	x0, x25
    5468:	b.eq	56bc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x374>  // b.none
    546c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5470:	add	x1, x1, #0x0
    5474:	mov	x2, #0x1                   	// #1
    5478:	mov	x0, x21
    547c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5480:	mov	x1, x0
    5484:	add	x2, x19, #0x10
    5488:	str	x2, [x19]
    548c:	ldr	x2, [x1], #16
    5490:	cmp	x2, x1
    5494:	b.eq	5680 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x338>  // b.none
    5498:	ldr	x3, [x0, #16]
    549c:	str	x2, [x19]
    54a0:	str	x3, [x19, #16]
    54a4:	ldr	x2, [x0, #8]
    54a8:	str	x2, [x19, #8]
    54ac:	stp	x1, xzr, [x0]
    54b0:	add	x21, x21, #0x10
    54b4:	strb	wzr, [x0, #16]
    54b8:	ldr	x0, [sp, #240]
    54bc:	cmp	x0, x21
    54c0:	b.eq	54c8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x180>  // b.none
    54c4:	bl	0 <_ZdlPv>
    54c8:	ldr	x0, [sp, #208]
    54cc:	add	x23, x23, #0x10
    54d0:	cmp	x0, x23
    54d4:	b.eq	54dc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x194>  // b.none
    54d8:	bl	0 <_ZdlPv>
    54dc:	ldr	x0, [sp, #176]
    54e0:	add	x20, x20, #0x10
    54e4:	cmp	x0, x20
    54e8:	b.eq	54f0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x1a8>  // b.none
    54ec:	bl	0 <_ZdlPv>
    54f0:	ldr	x0, [sp, #80]
    54f4:	add	x22, x22, #0x10
    54f8:	cmp	x0, x22
    54fc:	b.eq	5504 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x1bc>  // b.none
    5500:	bl	0 <_ZdlPv>
    5504:	mov	x0, x19
    5508:	ldp	x19, x20, [sp, #16]
    550c:	ldp	x21, x22, [sp, #32]
    5510:	ldp	x23, x24, [sp, #48]
    5514:	ldr	x25, [sp, #64]
    5518:	ldp	x29, x30, [sp], #272
    551c:	ret
    5520:	cbnz	w1, 566c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x324>
    5524:	ldr	x0, [x24, #16]
    5528:	add	x20, sp, #0x70
    552c:	mov	x8, x20
    5530:	add	x23, sp, #0x90
    5534:	ldr	x1, [x0]
    5538:	ldr	x1, [x1, #16]
    553c:	blr	x1
    5540:	mov	x1, x20
    5544:	mov	x8, x23
    5548:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    554c:	add	x0, x0, #0x0
    5550:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5554:	ldr	x1, [sp, #152]
    5558:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    555c:	cmp	x1, x0
    5560:	b.eq	56bc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x374>  // b.none
    5564:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5568:	add	x1, x1, #0x0
    556c:	mov	x2, #0x1                   	// #1
    5570:	mov	x0, x23
    5574:	add	x21, sp, #0xf0
    5578:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    557c:	mov	x1, x0
    5580:	add	x2, x21, #0x10
    5584:	str	x2, [sp, #240]
    5588:	ldr	x2, [x1], #16
    558c:	cmp	x2, x1
    5590:	b.eq	56f4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3ac>  // b.none
    5594:	str	x2, [sp, #240]
    5598:	ldr	x2, [x0, #16]
    559c:	str	x2, [sp, #256]
    55a0:	ldr	x2, [x0, #8]
    55a4:	str	x2, [sp, #248]
    55a8:	stp	x1, xzr, [x0]
    55ac:	add	x2, x21, #0x10
    55b0:	strb	wzr, [x0, #16]
    55b4:	ldr	x0, [sp, #80]
    55b8:	ldr	x1, [sp, #240]
    55bc:	cmp	x1, x2
    55c0:	b.eq	56c8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x380>  // b.none
    55c4:	add	x2, x22, #0x10
    55c8:	cmp	x0, x2
    55cc:	ldp	x3, x2, [sp, #248]
    55d0:	stp	x1, x3, [sp, #80]
    55d4:	b.eq	5700 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3b8>  // b.none
    55d8:	ldr	x1, [sp, #96]
    55dc:	str	x2, [sp, #96]
    55e0:	cbz	x0, 5704 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3bc>
    55e4:	str	x0, [sp, #240]
    55e8:	str	x1, [sp, #256]
    55ec:	str	xzr, [sp, #248]
    55f0:	add	x21, x21, #0x10
    55f4:	strb	wzr, [x0]
    55f8:	ldr	x0, [sp, #240]
    55fc:	cmp	x0, x21
    5600:	b.eq	5608 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2c0>  // b.none
    5604:	bl	0 <_ZdlPv>
    5608:	ldr	x0, [sp, #144]
    560c:	add	x23, x23, #0x10
    5610:	cmp	x0, x23
    5614:	b.eq	561c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2d4>  // b.none
    5618:	bl	0 <_ZdlPv>
    561c:	ldr	x0, [sp, #112]
    5620:	add	x20, x20, #0x10
    5624:	cmp	x0, x20
    5628:	b.eq	53a8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x60>  // b.none
    562c:	bl	0 <_ZdlPv>
    5630:	b	53a8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x60>
    5634:	cmp	w1, #0x4
    5638:	b.eq	569c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x354>  // b.none
    563c:	cmp	w1, #0x5
    5640:	b.ne	566c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x324>  // b.any
    5644:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5648:	mov	x0, x22
    564c:	add	x1, x1, #0x0
    5650:	b	53a4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x5c>
    5654:	cmp	x21, #0x1
    5658:	b.ne	5710 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3c8>  // b.any
    565c:	ldrb	w2, [x23]
    5660:	mov	x1, x0
    5664:	strb	w2, [sp, #192]
    5668:	b	5408 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xc0>
    566c:	add	x20, sp, #0xb0
    5670:	mov	x21, #0x0                   	// #0
    5674:	add	x1, x20, #0x10
    5678:	str	x1, [sp, #176]
    567c:	b	5408 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xc0>
    5680:	ldp	x2, x3, [x0, #16]
    5684:	stp	x2, x3, [x19, #16]
    5688:	b	54a4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x15c>
    568c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5690:	mov	x0, x22
    5694:	add	x1, x1, #0x0
    5698:	b	53a4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x5c>
    569c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    56a0:	mov	x0, x22
    56a4:	add	x1, x1, #0x0
    56a8:	b	53a4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x5c>
    56ac:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    56b0:	mov	x0, x22
    56b4:	add	x1, x1, #0x0
    56b8:	b	53a4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x5c>
    56bc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    56c0:	add	x0, x0, #0x0
    56c4:	bl	0 <_ZSt20__throw_length_errorPKc>
    56c8:	ldr	x2, [sp, #248]
    56cc:	cbz	x2, 56e4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x39c>
    56d0:	cmp	x2, #0x1
    56d4:	b.eq	571c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3d4>  // b.none
    56d8:	bl	0 <memcpy>
    56dc:	ldr	x0, [sp, #80]
    56e0:	ldr	x2, [sp, #248]
    56e4:	str	x2, [sp, #88]
    56e8:	strb	wzr, [x0, x2]
    56ec:	ldr	x0, [sp, #240]
    56f0:	b	55ec <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2a4>
    56f4:	ldp	x2, x3, [x0, #16]
    56f8:	stp	x2, x3, [sp, #256]
    56fc:	b	55a0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x258>
    5700:	str	x2, [sp, #96]
    5704:	add	x0, x21, #0x10
    5708:	str	x0, [sp, #240]
    570c:	b	55ec <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2a4>
    5710:	mov	x1, x0
    5714:	cbz	x21, 5408 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xc0>
    5718:	b	53f4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xac>
    571c:	ldrb	w1, [sp, #256]
    5720:	strb	w1, [x0]
    5724:	ldr	x0, [sp, #80]
    5728:	ldr	x2, [sp, #248]
    572c:	b	56e4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x39c>
    5730:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5734:	add	x0, x0, #0x0
    5738:	bl	0 <_ZSt19__throw_logic_errorPKc>
    573c:	nop

0000000000005740 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>:
    5740:	stp	x29, x30, [sp, #-368]!
    5744:	mov	x29, sp
    5748:	stp	x19, x20, [sp, #16]
    574c:	stp	x21, x22, [sp, #32]
    5750:	cbz	x1, 5954 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x214>
    5754:	mov	x20, x0
    5758:	mov	x0, x1
    575c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5760:	sbfx	x21, x0, #0, #61
    5764:	lsl	x19, x0, #3
    5768:	ldr	x2, [x20]
    576c:	cmp	x21, #0x4
    5770:	ldr	d0, [x1]
    5774:	add	x1, sp, #0xb0
    5778:	ldr	x0, [x2, #104]
    577c:	stp	x1, x0, [sp, #128]
    5780:	add	x1, sp, #0xc0
    5784:	str	x1, [sp, #176]
    5788:	str	d0, [sp, #184]
    578c:	b.hi	5930 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1f0>  // b.pmore
    5790:	mov	x0, x1
    5794:	cbz	x19, 5a48 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x308>
    5798:	mov	x2, x19
    579c:	mov	x1, x20
    57a0:	bl	0 <memcpy>
    57a4:	ldr	w0, [sp, #184]
    57a8:	ldr	w1, [sp, #188]
    57ac:	add	x0, x21, x0
    57b0:	cmp	x0, x1
    57b4:	b.hi	5c38 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x4f8>  // b.pmore
    57b8:	ldr	x22, [sp, #176]
    57bc:	lsl	x19, x0, #3
    57c0:	str	w0, [sp, #184]
    57c4:	add	x1, x22, x19
    57c8:	str	x1, [sp, #120]
    57cc:	cmp	x1, x22
    57d0:	b.eq	5998 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x258>  // b.none
    57d4:	asr	x0, x19, #3
    57d8:	mov	w2, #0x3f                  	// #63
    57dc:	clz	x0, x0
    57e0:	mov	x20, x1
    57e4:	sub	w2, w2, w0
    57e8:	mov	w3, #0x0                   	// #0
    57ec:	mov	x0, x22
    57f0:	sbfiz	x2, x2, #1, #32
    57f4:	bl	1940 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_T1_>
    57f8:	cmp	x19, #0x80
    57fc:	b.ls	5984 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x244>  // b.plast
    5800:	add	x19, x22, #0x80
    5804:	mov	x0, x22
    5808:	mov	x1, x19
    580c:	str	x19, [sp, #112]
    5810:	bl	1428 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0>
    5814:	cmp	x20, x19
    5818:	b.eq	5c24 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x4e4>  // b.none
    581c:	add	x19, sp, #0xe0
    5820:	add	x20, sp, #0x90
    5824:	stp	x23, x24, [sp, #48]
    5828:	stp	x25, x26, [sp, #64]
    582c:	stp	x27, x28, [sp, #80]
    5830:	add	x23, x20, #0x10
    5834:	ldr	x28, [sp, #112]
    5838:	ldr	x21, [x28]
    583c:	b	5858 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x118>
    5840:	mov	x0, x27
    5844:	sub	x28, x28, #0x8
    5848:	bl	0 <_ZdlPv>
    584c:	tbz	w26, #31, 58f8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1b8>
    5850:	ldr	x0, [x28]
    5854:	str	x0, [x28, #8]
    5858:	ldr	x0, [x21]
    585c:	str	x28, [sp, #104]
    5860:	ldur	x22, [x28, #-8]
    5864:	mov	x8, x19
    5868:	ldr	x2, [x0]
    586c:	ldr	x2, [x2, #48]
    5870:	blr	x2
    5874:	ldr	x0, [x22]
    5878:	mov	x8, x20
    587c:	ldr	x1, [x0]
    5880:	ldr	x1, [x1, #48]
    5884:	blr	x1
    5888:	ldp	x25, x24, [sp, #144]
    588c:	ldp	x27, x22, [sp, #224]
    5890:	cmp	x22, x24
    5894:	csel	x2, x22, x24, ls  // ls = plast
    5898:	cbz	x2, 58b0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x170>
    589c:	mov	x1, x25
    58a0:	mov	x0, x27
    58a4:	bl	0 <memcmp>
    58a8:	mov	w26, w0
    58ac:	cbnz	w0, 58d0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x190>
    58b0:	sub	x3, x22, x24
    58b4:	mov	x0, #0x7fffffff            	// #2147483647
    58b8:	mov	w26, #0x7fffffff            	// #2147483647
    58bc:	cmp	x3, x0
    58c0:	b.gt	58d0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x190>
    58c4:	mov	x0, #0xffffffff80000000    	// #-2147483648
    58c8:	cmp	x3, x0
    58cc:	csel	w26, w3, w0, ge  // ge = tcont
    58d0:	cmp	x25, x23
    58d4:	b.eq	58e4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1a4>  // b.none
    58d8:	mov	x0, x25
    58dc:	bl	0 <_ZdlPv>
    58e0:	ldr	x27, [sp, #224]
    58e4:	add	x0, x19, #0x10
    58e8:	cmp	x27, x0
    58ec:	b.ne	5840 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x100>  // b.any
    58f0:	sub	x28, x28, #0x8
    58f4:	tbnz	w26, #31, 5850 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x110>
    58f8:	ldr	x0, [sp, #104]
    58fc:	ldr	x1, [sp, #120]
    5900:	str	x21, [x0]
    5904:	ldr	x0, [sp, #112]
    5908:	add	x0, x0, #0x8
    590c:	str	x0, [sp, #112]
    5910:	cmp	x1, x0
    5914:	b.ne	5830 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xf0>  // b.any
    5918:	ldr	w0, [sp, #184]
    591c:	ldp	x23, x24, [sp, #48]
    5920:	ldp	x25, x26, [sp, #64]
    5924:	ldp	x27, x28, [sp, #80]
    5928:	ldr	x22, [sp, #176]
    592c:	b	59a0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x260>
    5930:	ldr	x0, [sp, #128]
    5934:	mov	x2, x21
    5938:	mov	x3, #0x8                   	// #8
    593c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5940:	ldr	w0, [sp, #184]
    5944:	cbz	x19, 57a8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x68>
    5948:	ldr	x1, [sp, #176]
    594c:	add	x0, x1, x0, lsl #3
    5950:	b	5798 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x58>
    5954:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5958:	add	x21, x19, #0x0
    595c:	add	x20, x21, #0x98
    5960:	ldarb	w0, [x20]
    5964:	tbz	w0, #0, 5a60 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x320>
    5968:	add	x19, x19, #0x0
    596c:	add	x20, x19, #0x70
    5970:	mov	x0, x20
    5974:	ldp	x19, x20, [sp, #16]
    5978:	ldp	x21, x22, [sp, #32]
    597c:	ldp	x29, x30, [sp], #368
    5980:	ret
    5984:	ldr	x1, [sp, #120]
    5988:	mov	x0, x22
    598c:	bl	1428 <_ZSt16__insertion_sortIPPN4llvm6RecordEN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEEUlS2_S2_E_EEEvT_SC_T0_.isra.0>
    5990:	ldr	w0, [sp, #184]
    5994:	ldr	x22, [sp, #176]
    5998:	add	x19, sp, #0xe0
    599c:	add	x20, sp, #0x90
    59a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    59a4:	add	x2, x19, #0x10
    59a8:	mov	x21, x22
    59ac:	str	x2, [sp, #224]
    59b0:	ldr	d0, [x1]
    59b4:	mov	w1, w0
    59b8:	mov	x0, x19
    59bc:	add	x22, x22, x1, lsl #3
    59c0:	str	d0, [sp, #232]
    59c4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    59c8:	cmp	x22, x21
    59cc:	b.eq	59e4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2a4>  // b.none
    59d0:	ldr	x1, [x21], #8
    59d4:	mov	x0, x19
    59d8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    59dc:	cmp	x22, x21
    59e0:	b.ne	59d0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x290>  // b.any
    59e4:	ldr	x0, [sp, #136]
    59e8:	mov	x2, x20
    59ec:	mov	x1, x19
    59f0:	str	xzr, [sp, #144]
    59f4:	add	x21, x0, #0x60
    59f8:	mov	x0, x21
    59fc:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    5a00:	sub	x20, x0, #0x18
    5a04:	cbz	x0, 5ab8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x378>
    5a08:	ldr	x0, [sp, #224]
    5a0c:	add	x19, x19, #0x10
    5a10:	cmp	x0, x19
    5a14:	b.eq	5a1c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2dc>  // b.none
    5a18:	bl	0 <free>
    5a1c:	ldr	x1, [sp, #128]
    5a20:	ldr	x0, [sp, #176]
    5a24:	add	x1, x1, #0x10
    5a28:	cmp	x0, x1
    5a2c:	b.eq	5970 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x230>  // b.none
    5a30:	bl	0 <free>
    5a34:	mov	x0, x20
    5a38:	ldp	x19, x20, [sp, #16]
    5a3c:	ldp	x21, x22, [sp, #32]
    5a40:	ldp	x29, x30, [sp], #368
    5a44:	ret
    5a48:	mov	w0, w21
    5a4c:	mov	x22, x1
    5a50:	add	x19, sp, #0xe0
    5a54:	add	x20, sp, #0x90
    5a58:	str	w21, [sp, #184]
    5a5c:	b	59a0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x260>
    5a60:	mov	x0, x20
    5a64:	bl	0 <__cxa_guard_acquire>
    5a68:	cbz	w0, 5968 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x228>
    5a6c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5a70:	mov	w2, #0x7                   	// #7
    5a74:	str	w2, [x21, #120]
    5a78:	add	x19, x21, #0x70
    5a7c:	ldr	x1, [x1]
    5a80:	stp	xzr, xzr, [x21, #128]
    5a84:	mov	x0, x20
    5a88:	add	x1, x1, #0x10
    5a8c:	str	x1, [x21, #112]
    5a90:	str	wzr, [x21, #144]
    5a94:	mov	x20, x19
    5a98:	bl	0 <__cxa_guard_release>
    5a9c:	mov	x1, x19
    5aa0:	adrp	x2, 0 <__dso_handle>
    5aa4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5aa8:	add	x2, x2, #0x0
    5aac:	add	x0, x0, #0x0
    5ab0:	bl	0 <__cxa_atexit>
    5ab4:	b	5970 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x230>
    5ab8:	ldr	w1, [sp, #184]
    5abc:	mov	w8, w1
    5ac0:	cbz	w1, 5b8c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x44c>
    5ac4:	ldr	x7, [sp, #176]
    5ac8:	mov	x6, #0x0                   	// #0
    5acc:	mov	w10, #0x18                  	// #24
    5ad0:	mov	w9, w6
    5ad4:	mov	x5, #0x0                   	// #0
    5ad8:	cmp	w9, w5
    5adc:	b.eq	5b54 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x414>  // b.none
    5ae0:	cmp	x6, x8
    5ae4:	b.cs	5bf8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x4b8>  // b.hs, b.nlast
    5ae8:	cmp	x8, x5
    5aec:	ldr	x2, [x7, x6, lsl #3]
    5af0:	b.ls	5bf8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x4b8>  // b.plast
    5af4:	ldr	w3, [x2, #96]
    5af8:	ldr	x0, [x2, #88]
    5afc:	ldr	x4, [x7, x5, lsl #3]
    5b00:	umaddl	x3, w3, w10, x0
    5b04:	cmp	x0, x3
    5b08:	b.ne	5b1c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3dc>  // b.any
    5b0c:	b	5b54 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x414>
    5b10:	add	x0, x0, #0x18
    5b14:	cmp	x3, x0
    5b18:	b.eq	5b54 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x414>  // b.none
    5b1c:	ldr	x2, [x0]
    5b20:	cmp	x4, x2
    5b24:	b.ne	5b10 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3d0>  // b.any
    5b28:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b2c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b30:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b34:	add	x3, x3, #0x0
    5b38:	add	x1, x1, #0x0
    5b3c:	add	x0, x0, #0x0
    5b40:	mov	w2, #0xb7                  	// #183
    5b44:	stp	x23, x24, [sp, #48]
    5b48:	stp	x25, x26, [sp, #64]
    5b4c:	stp	x27, x28, [sp, #80]
    5b50:	bl	0 <__assert_fail>
    5b54:	add	x5, x5, #0x1
    5b58:	cmp	w1, w5
    5b5c:	b.hi	5ad8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x398>  // b.pmore
    5b60:	ldr	x0, [x7]
    5b64:	cmp	x6, x8
    5b68:	ldr	x2, [x0, #104]
    5b6c:	b.cs	5bf8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x4b8>  // b.hs, b.nlast
    5b70:	ldr	x0, [x7, x6, lsl #3]
    5b74:	ldr	x0, [x0, #104]
    5b78:	cmp	x2, x0
    5b7c:	b.ne	5c64 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x524>  // b.any
    5b80:	add	x6, x6, #0x1
    5b84:	cmp	w1, w6
    5b88:	b.hi	5ad0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x390>  // b.pmore
    5b8c:	mov	x2, #0x28                  	// #40
    5b90:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5b94:	add	x0, x0, #0x0
    5b98:	add	x1, x2, w1, uxtw #3
    5b9c:	add	x0, x0, #0xa0
    5ba0:	mov	w2, #0x3                   	// #3
    5ba4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5ba8:	mov	x20, x0
    5bac:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5bb0:	ldr	w1, [sp, #184]
    5bb4:	mov	w2, #0x7                   	// #7
    5bb8:	ldr	x0, [x0]
    5bbc:	str	w2, [x20, #8]
    5bc0:	stp	xzr, xzr, [x20, #16]
    5bc4:	ubfiz	x2, x1, #3, #32
    5bc8:	add	x0, x0, #0x10
    5bcc:	str	x0, [x20]
    5bd0:	str	w1, [x20, #32]
    5bd4:	cbz	x2, 5be4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x4a4>
    5bd8:	ldr	x1, [sp, #176]
    5bdc:	add	x0, x20, #0x28
    5be0:	bl	0 <memmove>
    5be4:	ldr	x2, [sp, #144]
    5be8:	mov	x0, x21
    5bec:	add	x1, x20, #0x18
    5bf0:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    5bf4:	b	5a08 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2c8>
    5bf8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5bfc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5c00:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5c04:	add	x3, x3, #0x0
    5c08:	add	x1, x1, #0x0
    5c0c:	add	x0, x0, #0x0
    5c10:	mov	w2, #0x95                  	// #149
    5c14:	stp	x23, x24, [sp, #48]
    5c18:	stp	x25, x26, [sp, #64]
    5c1c:	stp	x27, x28, [sp, #80]
    5c20:	bl	0 <__assert_fail>
    5c24:	ldr	w0, [sp, #184]
    5c28:	add	x19, sp, #0xe0
    5c2c:	add	x20, sp, #0x90
    5c30:	ldr	x22, [sp, #176]
    5c34:	b	59a0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x260>
    5c38:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5c3c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5c40:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5c44:	add	x3, x3, #0x0
    5c48:	add	x1, x1, #0x0
    5c4c:	add	x0, x0, #0x0
    5c50:	mov	w2, #0x43                  	// #67
    5c54:	stp	x23, x24, [sp, #48]
    5c58:	stp	x25, x26, [sp, #64]
    5c5c:	stp	x27, x28, [sp, #80]
    5c60:	bl	0 <__assert_fail>
    5c64:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5c68:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5c6c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5c70:	add	x3, x3, #0x0
    5c74:	add	x1, x1, #0x0
    5c78:	add	x0, x0, #0x0
    5c7c:	mov	w2, #0xb9                  	// #185
    5c80:	stp	x23, x24, [sp, #48]
    5c84:	stp	x25, x26, [sp, #64]
    5c88:	stp	x27, x28, [sp, #80]
    5c8c:	bl	0 <__assert_fail>

0000000000005c90 <_ZN4llvm6Record7getTypeEv>:
    5c90:	stp	x29, x30, [sp, #-80]!
    5c94:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5c98:	mov	x29, sp
    5c9c:	ldr	d0, [x1]
    5ca0:	add	x1, sp, #0x20
    5ca4:	stp	x19, x20, [sp, #16]
    5ca8:	add	x20, x1, #0x10
    5cac:	str	x20, [sp, #32]
    5cb0:	str	d0, [sp, #40]
    5cb4:	bl	4208 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    5cb8:	ldr	w1, [sp, #40]
    5cbc:	ldr	x0, [sp, #32]
    5cc0:	bl	5740 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    5cc4:	mov	x19, x0
    5cc8:	ldr	x1, [sp, #32]
    5ccc:	cmp	x1, x20
    5cd0:	b.eq	5cdc <_ZN4llvm6Record7getTypeEv+0x4c>  // b.none
    5cd4:	mov	x0, x1
    5cd8:	bl	0 <free>
    5cdc:	mov	x0, x19
    5ce0:	ldp	x19, x20, [sp, #16]
    5ce4:	ldp	x29, x30, [sp], #80
    5ce8:	ret
    5cec:	nop

0000000000005cf0 <_ZN4llvm7DefInitC1EPNS_6RecordE>:
    5cf0:	stp	x29, x30, [sp, #-32]!
    5cf4:	mov	x29, sp
    5cf8:	stp	x19, x20, [sp, #16]
    5cfc:	mov	x19, x0
    5d00:	mov	x20, x1
    5d04:	mov	x0, x1
    5d08:	bl	5c90 <_ZN4llvm6Record7getTypeEv>
    5d0c:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5d10:	mov	w1, #0x6                   	// #6
    5d14:	strh	w1, [x19, #8]
    5d18:	ldr	x2, [x2]
    5d1c:	stp	x0, x20, [x19, #16]
    5d20:	add	x2, x2, #0x10
    5d24:	str	x2, [x19]
    5d28:	ldp	x19, x20, [sp, #16]
    5d2c:	ldp	x29, x30, [sp], #32
    5d30:	ret
    5d34:	nop

0000000000005d38 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>:
    5d38:	stp	x29, x30, [sp, #-240]!
    5d3c:	mov	x29, sp
    5d40:	stp	x19, x20, [sp, #16]
    5d44:	stp	x23, x24, [sp, #48]
    5d48:	adrp	x24, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5d4c:	add	x20, x24, #0x0
    5d50:	mov	x23, x0
    5d54:	add	x19, x20, #0x108
    5d58:	stp	x21, x22, [sp, #32]
    5d5c:	mov	x21, x1
    5d60:	mov	x22, x2
    5d64:	stp	x25, x26, [sp, #64]
    5d68:	ldarb	w0, [x19]
    5d6c:	tbz	w0, #0, 5e1c <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xe4>
    5d70:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5d74:	add	x19, sp, #0x60
    5d78:	add	x2, x19, #0x10
    5d7c:	mov	x1, x22
    5d80:	ldr	d0, [x0]
    5d84:	lsl	x25, x22, #3
    5d88:	mov	x0, x19
    5d8c:	str	x2, [sp, #96]
    5d90:	add	x26, x21, x25
    5d94:	str	d0, [sp, #104]
    5d98:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    5d9c:	mov	x1, x23
    5da0:	mov	x0, x19
    5da4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    5da8:	cmp	x26, x21
    5dac:	b.eq	5dcc <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x94>  // b.none
    5db0:	mov	x20, x21
    5db4:	nop
    5db8:	ldr	x1, [x20], #8
    5dbc:	mov	x0, x19
    5dc0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    5dc4:	cmp	x26, x20
    5dc8:	b.ne	5db8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x80>  // b.any
    5dcc:	add	x20, x24, #0x0
    5dd0:	add	x2, sp, #0x50
    5dd4:	add	x0, x20, #0x110
    5dd8:	mov	x1, x19
    5ddc:	str	xzr, [sp, #80]
    5de0:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    5de4:	cbz	x0, 5e6c <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x134>
    5de8:	sub	x20, x0, #0x18
    5dec:	ldr	x0, [sp, #96]
    5df0:	add	x19, x19, #0x10
    5df4:	cmp	x0, x19
    5df8:	b.eq	5e00 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xc8>  // b.none
    5dfc:	bl	0 <free>
    5e00:	mov	x0, x20
    5e04:	ldp	x19, x20, [sp, #16]
    5e08:	ldp	x21, x22, [sp, #32]
    5e0c:	ldp	x23, x24, [sp, #48]
    5e10:	ldp	x25, x26, [sp, #64]
    5e14:	ldp	x29, x30, [sp], #240
    5e18:	ret
    5e1c:	mov	x0, x19
    5e20:	bl	0 <__cxa_guard_acquire>
    5e24:	cbz	w0, 5d70 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x38>
    5e28:	add	x25, x20, #0x110
    5e2c:	mov	w1, #0x6                   	// #6
    5e30:	mov	x0, x25
    5e34:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    5e38:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e3c:	mov	x0, x19
    5e40:	ldr	x1, [x1]
    5e44:	add	x1, x1, #0x10
    5e48:	str	x1, [x20, #272]
    5e4c:	bl	0 <__cxa_guard_release>
    5e50:	mov	x1, x25
    5e54:	adrp	x2, 0 <__dso_handle>
    5e58:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e5c:	add	x2, x2, #0x0
    5e60:	add	x0, x0, #0x0
    5e64:	bl	0 <__cxa_atexit>
    5e68:	b	5d70 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x38>
    5e6c:	mov	w2, #0x3                   	// #3
    5e70:	add	x0, x20, #0xa0
    5e74:	add	x1, x25, #0x38
    5e78:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e7c:	mov	x1, #0x1                   	// #1
    5e80:	mov	x20, x0
    5e84:	add	x0, sp, #0x58
    5e88:	str	x23, [sp, #88]
    5e8c:	bl	5740 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    5e90:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5e94:	mov	w3, #0x16                  	// #22
    5e98:	ldr	x2, [sp, #88]
    5e9c:	strh	w3, [x20, #8]
    5ea0:	ldr	x1, [x1]
    5ea4:	stp	x0, xzr, [x20, #16]
    5ea8:	add	x1, x1, #0x10
    5eac:	str	x1, [x20]
    5eb0:	stp	x2, xzr, [x20, #32]
    5eb4:	str	w22, [x20, #48]
    5eb8:	cbz	x25, 5ecc <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x194>
    5ebc:	mov	x2, x25
    5ec0:	mov	x1, x21
    5ec4:	add	x0, x20, #0x38
    5ec8:	bl	0 <memcpy>
    5ecc:	ldr	x2, [sp, #80]
    5ed0:	add	x0, x24, #0x0
    5ed4:	add	x0, x0, #0x110
    5ed8:	add	x1, x20, #0x18
    5edc:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    5ee0:	b	5dec <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xb4>
    5ee4:	nop

0000000000005ee8 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>:
    5ee8:	stp	x29, x30, [sp, #-256]!
    5eec:	cmp	x1, x3
    5ef0:	mov	x29, sp
    5ef4:	stp	x19, x20, [sp, #16]
    5ef8:	stp	x21, x22, [sp, #32]
    5efc:	stp	x23, x24, [sp, #48]
    5f00:	stp	x25, x26, [sp, #64]
    5f04:	stp	x27, x28, [sp, #80]
    5f08:	b.ne	60c4 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x1dc>  // b.any
    5f0c:	adrp	x26, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5f10:	add	x20, x26, #0x0
    5f14:	mov	x22, x1
    5f18:	mov	x24, x3
    5f1c:	mov	x21, x0
    5f20:	mov	x25, x2
    5f24:	mov	x23, x4
    5f28:	add	x19, x20, #0x128
    5f2c:	ldarb	w0, [x19]
    5f30:	tbz	w0, #0, 5ff0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x108>
    5f34:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    5f38:	add	x19, sp, #0x70
    5f3c:	add	x2, x19, #0x10
    5f40:	lsl	x27, x22, #3
    5f44:	ldr	d0, [x0]
    5f48:	mov	x1, x23
    5f4c:	mov	x0, x19
    5f50:	str	x2, [sp, #112]
    5f54:	str	d0, [sp, #120]
    5f58:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    5f5c:	add	x0, x21, x27
    5f60:	cmp	x0, x21
    5f64:	b.eq	5f9c <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xb4>  // b.none
    5f68:	sub	x0, x0, x21
    5f6c:	mov	x20, #0x0                   	// #0
    5f70:	sub	x28, x0, #0x8
    5f74:	nop
    5f78:	ldr	x1, [x21, x20]
    5f7c:	mov	x0, x19
    5f80:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    5f84:	ldr	x1, [x25, x20]
    5f88:	mov	x0, x19
    5f8c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    5f90:	cmp	x20, x28
    5f94:	add	x20, x20, #0x8
    5f98:	b.ne	5f78 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x90>  // b.any
    5f9c:	add	x20, x26, #0x0
    5fa0:	add	x2, sp, #0x68
    5fa4:	add	x0, x20, #0x130
    5fa8:	mov	x1, x19
    5fac:	str	xzr, [sp, #104]
    5fb0:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    5fb4:	cbz	x0, 6040 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x158>
    5fb8:	sub	x20, x0, #0x18
    5fbc:	ldr	x0, [sp, #112]
    5fc0:	add	x19, x19, #0x10
    5fc4:	cmp	x0, x19
    5fc8:	b.eq	5fd0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xe8>  // b.none
    5fcc:	bl	0 <free>
    5fd0:	mov	x0, x20
    5fd4:	ldp	x19, x20, [sp, #16]
    5fd8:	ldp	x21, x22, [sp, #32]
    5fdc:	ldp	x23, x24, [sp, #48]
    5fe0:	ldp	x25, x26, [sp, #64]
    5fe4:	ldp	x27, x28, [sp, #80]
    5fe8:	ldp	x29, x30, [sp], #256
    5fec:	ret
    5ff0:	mov	x0, x19
    5ff4:	bl	0 <__cxa_guard_acquire>
    5ff8:	cbz	w0, 5f34 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x4c>
    5ffc:	add	x27, x20, #0x130
    6000:	mov	w1, #0x6                   	// #6
    6004:	mov	x0, x27
    6008:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    600c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6010:	mov	x0, x19
    6014:	ldr	x1, [x1]
    6018:	add	x1, x1, #0x10
    601c:	str	x1, [x20, #304]
    6020:	bl	0 <__cxa_guard_release>
    6024:	mov	x1, x27
    6028:	adrp	x2, 0 <__dso_handle>
    602c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6030:	add	x2, x2, #0x0
    6034:	add	x0, x0, #0x0
    6038:	bl	0 <__cxa_atexit>
    603c:	b	5f34 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x4c>
    6040:	lsl	x1, x22, #4
    6044:	add	x0, x20, #0xa0
    6048:	add	x1, x1, #0x30
    604c:	mov	w2, #0x3                   	// #3
    6050:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6054:	mov	x20, x0
    6058:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    605c:	mov	w0, #0xf                   	// #15
    6060:	ldr	x1, [x1]
    6064:	strh	w0, [x20, #8]
    6068:	stp	x23, xzr, [x20, #16]
    606c:	add	x1, x1, #0x10
    6070:	str	x1, [x20]
    6074:	str	w22, [x20, #32]
    6078:	str	x23, [x20, #40]
    607c:	cbz	x27, 6090 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x1a8>
    6080:	mov	x1, x21
    6084:	mov	x2, x27
    6088:	add	x0, x20, #0x30
    608c:	bl	0 <memcpy>
    6090:	cmp	xzr, x24, lsl #3
    6094:	lsl	x2, x24, #3
    6098:	b.eq	60ac <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x1c4>  // b.none
    609c:	add	x0, x27, #0x30
    60a0:	mov	x1, x25
    60a4:	add	x0, x20, x0
    60a8:	bl	0 <memcpy>
    60ac:	ldr	x2, [sp, #104]
    60b0:	add	x0, x26, #0x0
    60b4:	add	x0, x0, #0x130
    60b8:	add	x1, x20, #0x18
    60bc:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    60c0:	b	5fbc <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xd4>
    60c4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    60c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    60cc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    60d0:	add	x3, x3, #0x0
    60d4:	add	x1, x1, #0x0
    60d8:	add	x0, x0, #0x0
    60dc:	mov	w2, #0x710                 	// #1808
    60e0:	bl	0 <__assert_fail>
    60e4:	nop

00000000000060e8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>:
    60e8:	stp	x29, x30, [sp, #-256]!
    60ec:	mov	x29, sp
    60f0:	stp	x19, x20, [sp, #16]
    60f4:	stp	x25, x26, [sp, #64]
    60f8:	adrp	x25, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    60fc:	add	x20, x25, #0x0
    6100:	mov	x26, x5
    6104:	add	x19, x20, #0x148
    6108:	stp	x21, x22, [sp, #32]
    610c:	mov	x22, x0
    6110:	mov	x21, x1
    6114:	stp	x23, x24, [sp, #48]
    6118:	mov	x24, x2
    611c:	mov	x23, x4
    6120:	stp	x27, x28, [sp, #80]
    6124:	mov	x27, x3
    6128:	ldarb	w0, [x19]
    612c:	tbz	w0, #0, 61bc <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xd4>
    6130:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6134:	add	x20, sp, #0x70
    6138:	add	x7, x20, #0x10
    613c:	mov	x5, x23
    6140:	ldr	d0, [x0]
    6144:	mov	x6, x26
    6148:	mov	x3, x24
    614c:	mov	x4, x27
    6150:	mov	x0, x20
    6154:	mov	x2, x21
    6158:	mov	x1, x22
    615c:	add	x19, x25, #0x0
    6160:	str	x7, [sp, #112]
    6164:	str	d0, [sp, #120]
    6168:	bl	268 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>
    616c:	mov	x1, x20
    6170:	add	x0, x19, #0x150
    6174:	add	x2, sp, #0x68
    6178:	str	xzr, [sp, #104]
    617c:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    6180:	cbz	x0, 620c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x124>
    6184:	sub	x19, x0, #0x18
    6188:	ldr	x0, [sp, #112]
    618c:	add	x20, x20, #0x10
    6190:	cmp	x0, x20
    6194:	b.eq	619c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xb4>  // b.none
    6198:	bl	0 <free>
    619c:	mov	x0, x19
    61a0:	ldp	x19, x20, [sp, #16]
    61a4:	ldp	x21, x22, [sp, #32]
    61a8:	ldp	x23, x24, [sp, #48]
    61ac:	ldp	x25, x26, [sp, #64]
    61b0:	ldp	x27, x28, [sp, #80]
    61b4:	ldp	x29, x30, [sp], #256
    61b8:	ret
    61bc:	mov	x0, x19
    61c0:	bl	0 <__cxa_guard_acquire>
    61c4:	cbz	w0, 6130 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x48>
    61c8:	add	x28, x20, #0x150
    61cc:	mov	w1, #0x6                   	// #6
    61d0:	mov	x0, x28
    61d4:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    61d8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    61dc:	mov	x0, x19
    61e0:	ldr	x1, [x1]
    61e4:	add	x1, x1, #0x10
    61e8:	str	x1, [x20, #336]
    61ec:	bl	0 <__cxa_guard_release>
    61f0:	mov	x1, x28
    61f4:	adrp	x2, 0 <__dso_handle>
    61f8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    61fc:	add	x2, x2, #0x0
    6200:	add	x0, x0, #0x0
    6204:	bl	0 <__cxa_atexit>
    6208:	b	6130 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x48>
    620c:	add	x1, x27, x26
    6210:	mov	w2, #0x3                   	// #3
    6214:	add	x0, x19, #0xa0
    6218:	lsl	x1, x1, x2
    621c:	add	x1, x1, #0x38
    6220:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6224:	mov	x19, x0
    6228:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    622c:	adrp	x1, 3c8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x28>
    6230:	mov	w2, #0x5                   	// #5
    6234:	cmp	xzr, x27, lsl #3
    6238:	ldr	x0, [x0]
    623c:	strh	w2, [x19, #8]
    6240:	ldr	x1, [x1]
    6244:	add	x0, x0, #0x10
    6248:	str	x0, [x19]
    624c:	lsl	x2, x27, #3
    6250:	stp	x1, xzr, [x19, #16]
    6254:	stp	x22, x21, [x19, #32]
    6258:	stp	w27, w26, [x19, #48]
    625c:	b.eq	626c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x184>  // b.none
    6260:	mov	x1, x24
    6264:	add	x0, x19, #0x38
    6268:	bl	0 <memcpy>
    626c:	cmp	xzr, x26, lsl #3
    6270:	lsl	x2, x26, #3
    6274:	b.eq	628c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x1a4>  // b.none
    6278:	ubfiz	x0, x27, #3, #32
    627c:	mov	x1, x23
    6280:	add	x0, x0, #0x38
    6284:	add	x0, x19, x0
    6288:	bl	0 <memcpy>
    628c:	ldr	x2, [sp, #104]
    6290:	add	x0, x25, #0x0
    6294:	add	x0, x0, #0x150
    6298:	add	x1, x19, #0x18
    629c:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    62a0:	b	6188 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xa0>
    62a4:	nop

00000000000062a8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>:
    62a8:	stp	x29, x30, [sp, #-240]!
    62ac:	adrp	x4, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    62b0:	mov	x29, sp
    62b4:	ldr	d0, [x4]
    62b8:	stp	x21, x22, [sp, #32]
    62bc:	add	x21, sp, #0x50
    62c0:	add	x22, sp, #0xa0
    62c4:	stp	x19, x20, [sp, #16]
    62c8:	mov	x19, x2
    62cc:	add	x20, x22, #0x10
    62d0:	add	x2, x21, #0x10
    62d4:	stp	x23, x24, [sp, #48]
    62d8:	mov	x23, x0
    62dc:	stp	x25, x26, [sp, #64]
    62e0:	add	x26, x19, x3, lsl #4
    62e4:	cmp	x26, x19
    62e8:	str	x2, [sp, #80]
    62ec:	mov	x24, x1
    62f0:	str	x20, [sp, #160]
    62f4:	str	d0, [sp, #88]
    62f8:	str	d0, [sp, #168]
    62fc:	b.eq	6424 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x17c>  // b.none
    6300:	mov	x25, x2
    6304:	mov	w3, #0x0                   	// #0
    6308:	ldr	x0, [x19]
    630c:	str	x0, [x2, w3, uxtw #3]
    6310:	ldp	w2, w1, [sp, #88]
    6314:	mov	w0, w2
    6318:	add	x0, x0, #0x1
    631c:	cmp	x0, x1
    6320:	b.hi	6434 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x18c>  // b.pmore
    6324:	ldp	w0, w1, [sp, #168]
    6328:	add	w2, w2, #0x1
    632c:	str	w2, [sp, #88]
    6330:	cmp	w0, w1
    6334:	b.cs	6408 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x160>  // b.hs, b.nlast
    6338:	ldr	x1, [sp, #160]
    633c:	ldr	x2, [x19, #8]
    6340:	str	x2, [x1, w0, uxtw #3]
    6344:	ldp	w5, w1, [sp, #168]
    6348:	mov	w0, w5
    634c:	add	x0, x0, #0x1
    6350:	cmp	x0, x1
    6354:	b.hi	6434 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x18c>  // b.pmore
    6358:	add	w5, w5, #0x1
    635c:	str	w5, [sp, #168]
    6360:	add	x19, x19, #0x10
    6364:	ldr	w3, [sp, #88]
    6368:	cmp	x19, x26
    636c:	b.eq	63a4 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0xfc>  // b.none
    6370:	ldr	w0, [sp, #92]
    6374:	cmp	w0, w3
    6378:	b.ls	6384 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0xdc>  // b.plast
    637c:	ldr	x2, [sp, #80]
    6380:	b	6308 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x60>
    6384:	mov	x3, #0x8                   	// #8
    6388:	mov	x2, #0x0                   	// #0
    638c:	mov	x1, x25
    6390:	mov	x0, x21
    6394:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6398:	ldr	w3, [sp, #88]
    639c:	ldr	x2, [sp, #80]
    63a0:	b	6308 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x60>
    63a4:	ldr	x2, [sp, #80]
    63a8:	mov	w3, w3
    63ac:	ldr	x4, [sp, #160]
    63b0:	mov	x1, x24
    63b4:	mov	x0, x23
    63b8:	bl	60e8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    63bc:	ldr	x1, [sp, #160]
    63c0:	add	x22, x22, #0x10
    63c4:	mov	x19, x0
    63c8:	cmp	x1, x22
    63cc:	b.eq	63d8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x130>  // b.none
    63d0:	mov	x0, x1
    63d4:	bl	0 <free>
    63d8:	ldr	x0, [sp, #80]
    63dc:	add	x21, x21, #0x10
    63e0:	cmp	x0, x21
    63e4:	b.eq	63ec <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x144>  // b.none
    63e8:	bl	0 <free>
    63ec:	mov	x0, x19
    63f0:	ldp	x19, x20, [sp, #16]
    63f4:	ldp	x21, x22, [sp, #32]
    63f8:	ldp	x23, x24, [sp, #48]
    63fc:	ldp	x25, x26, [sp, #64]
    6400:	ldp	x29, x30, [sp], #240
    6404:	ret
    6408:	mov	x0, x22
    640c:	mov	x1, x20
    6410:	mov	x3, #0x8                   	// #8
    6414:	mov	x2, #0x0                   	// #0
    6418:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    641c:	ldr	w0, [sp, #168]
    6420:	b	6338 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x90>
    6424:	mov	x4, x20
    6428:	mov	x3, #0x0                   	// #0
    642c:	mov	x5, #0x0                   	// #0
    6430:	b	63b0 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x108>
    6434:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6438:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    643c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6440:	add	x3, x3, #0x0
    6444:	add	x1, x1, #0x0
    6448:	add	x0, x0, #0x0
    644c:	mov	w2, #0x43                  	// #67
    6450:	bl	0 <__assert_fail>
    6454:	nop

0000000000006458 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE>:
    6458:	stp	x29, x30, [sp, #-176]!
    645c:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6460:	mov	x29, sp
    6464:	stp	x23, x24, [sp, #48]
    6468:	mov	x23, x0
    646c:	ldr	d0, [x2]
    6470:	add	x24, sp, #0x60
    6474:	stp	x19, x20, [sp, #16]
    6478:	ldr	w2, [x23, #48]
    647c:	add	x0, x24, #0x10
    6480:	stp	x21, x22, [sp, #32]
    6484:	cmp	w2, #0x8
    6488:	stp	x25, x26, [sp, #64]
    648c:	mov	x22, x1
    6490:	mov	w2, w2
    6494:	str	x0, [sp, #96]
    6498:	str	d0, [sp, #104]
    649c:	b.hi	65c0 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x168>  // b.pmore
    64a0:	add	x26, x23, #0x38
    64a4:	add	x21, x26, x2, lsl #3
    64a8:	cmp	x21, x26
    64ac:	b.eq	65e4 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x18c>  // b.none
    64b0:	add	x25, x24, #0x10
    64b4:	mov	w20, #0x0                   	// #0
    64b8:	str	x27, [sp, #80]
    64bc:	nop
    64c0:	ldr	x27, [x26]
    64c4:	mov	x1, x22
    64c8:	mov	x0, x27
    64cc:	ldr	x2, [x27]
    64d0:	ldr	x2, [x2, #96]
    64d4:	blr	x2
    64d8:	mov	x19, x0
    64dc:	ldp	w1, w0, [sp, #104]
    64e0:	cmp	w1, w0
    64e4:	b.cs	65a4 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x14c>  // b.hs, b.nlast
    64e8:	ldr	x0, [sp, #96]
    64ec:	str	x19, [x0, w1, uxtw #3]
    64f0:	ldp	w2, w1, [sp, #104]
    64f4:	mov	w0, w2
    64f8:	add	x0, x0, #0x1
    64fc:	cmp	x0, x1
    6500:	b.hi	65ec <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x194>  // b.pmore
    6504:	cmp	x19, x27
    6508:	add	w2, w2, #0x1
    650c:	str	w2, [sp, #104]
    6510:	cset	w0, ne  // ne = any
    6514:	add	x26, x26, #0x8
    6518:	orr	w20, w20, w0
    651c:	cmp	x21, x26
    6520:	b.ne	64c0 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x68>  // b.any
    6524:	ldr	x27, [sp, #80]
    6528:	mov	x1, x22
    652c:	ldr	x0, [x23, #32]
    6530:	mov	x19, x23
    6534:	ldr	x2, [x0]
    6538:	ldr	x2, [x2, #96]
    653c:	blr	x2
    6540:	ldr	x1, [x23, #32]
    6544:	cmp	w20, #0x0
    6548:	ccmp	x1, x0, #0x0, eq  // eq = none
    654c:	b.eq	6574 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x11c>  // b.none
    6550:	ldp	w4, w5, [x23, #48]
    6554:	mov	x6, #0x38                  	// #56
    6558:	ldr	w3, [sp, #104]
    655c:	ldr	x1, [x23, #40]
    6560:	add	x4, x6, w4, uxtw #3
    6564:	ldr	x2, [sp, #96]
    6568:	add	x4, x23, x4
    656c:	bl	60e8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    6570:	mov	x19, x0
    6574:	ldr	x0, [sp, #96]
    6578:	add	x24, x24, #0x10
    657c:	cmp	x0, x24
    6580:	b.eq	6588 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x130>  // b.none
    6584:	bl	0 <free>
    6588:	mov	x0, x19
    658c:	ldp	x19, x20, [sp, #16]
    6590:	ldp	x21, x22, [sp, #32]
    6594:	ldp	x23, x24, [sp, #48]
    6598:	ldp	x25, x26, [sp, #64]
    659c:	ldp	x29, x30, [sp], #176
    65a0:	ret
    65a4:	mov	x1, x25
    65a8:	mov	x0, x24
    65ac:	mov	x3, #0x8                   	// #8
    65b0:	mov	x2, #0x0                   	// #0
    65b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    65b8:	ldr	w1, [sp, #104]
    65bc:	b	64e8 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x90>
    65c0:	mov	x1, x0
    65c4:	mov	x3, #0x8                   	// #8
    65c8:	mov	x0, x24
    65cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    65d0:	ldr	w2, [x23, #48]
    65d4:	add	x26, x23, #0x38
    65d8:	add	x21, x26, x2, lsl #3
    65dc:	cmp	x21, x26
    65e0:	b.ne	64b0 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x58>  // b.any
    65e4:	mov	w20, #0x0                   	// #0
    65e8:	b	6528 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xd0>
    65ec:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    65f0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    65f4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    65f8:	add	x3, x3, #0x0
    65fc:	add	x1, x1, #0x0
    6600:	add	x0, x0, #0x0
    6604:	mov	w2, #0x43                  	// #67
    6608:	bl	0 <__assert_fail>
    660c:	nop

0000000000006610 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>:
    6610:	stp	x29, x30, [sp, #-256]!
    6614:	mov	x29, sp
    6618:	stp	x19, x20, [sp, #16]
    661c:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6620:	stp	x27, x28, [sp, #80]
    6624:	add	x27, x19, #0x0
    6628:	add	x20, x27, #0x168
    662c:	stp	x21, x22, [sp, #32]
    6630:	mov	x22, x3
    6634:	mov	x21, x4
    6638:	stp	x23, x24, [sp, #48]
    663c:	mov	x24, x1
    6640:	mov	x23, x2
    6644:	stp	x25, x26, [sp, #64]
    6648:	mov	x25, x0
    664c:	mov	x26, x5
    6650:	ldarb	w0, [x20]
    6654:	tbz	w0, #0, 6710 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x100>
    6658:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    665c:	add	x20, x19, #0x0
    6660:	add	x19, sp, #0x70
    6664:	mov	x1, x23
    6668:	ldr	d0, [x0]
    666c:	add	x2, x19, #0x10
    6670:	mov	x0, x19
    6674:	str	x2, [sp, #112]
    6678:	add	x27, x20, #0x170
    667c:	str	d0, [sp, #120]
    6680:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6684:	mov	x1, x22
    6688:	mov	x0, x19
    668c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6690:	mov	x1, x25
    6694:	mov	x0, x19
    6698:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    669c:	mov	x1, x24
    66a0:	mov	x0, x19
    66a4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    66a8:	mov	x1, x21
    66ac:	mov	x0, x19
    66b0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    66b4:	mov	x1, x26
    66b8:	mov	x0, x19
    66bc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    66c0:	str	xzr, [sp, #104]
    66c4:	mov	x0, x27
    66c8:	mov	x1, x19
    66cc:	add	x2, sp, #0x68
    66d0:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    66d4:	cbz	x0, 6760 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x150>
    66d8:	sub	x20, x0, #0x18
    66dc:	ldr	x0, [sp, #112]
    66e0:	add	x19, x19, #0x10
    66e4:	cmp	x0, x19
    66e8:	b.eq	66f0 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0xe0>  // b.none
    66ec:	bl	0 <free>
    66f0:	mov	x0, x20
    66f4:	ldp	x19, x20, [sp, #16]
    66f8:	ldp	x21, x22, [sp, #32]
    66fc:	ldp	x23, x24, [sp, #48]
    6700:	ldp	x25, x26, [sp, #64]
    6704:	ldp	x27, x28, [sp, #80]
    6708:	ldp	x29, x30, [sp], #256
    670c:	ret
    6710:	mov	x0, x20
    6714:	bl	0 <__cxa_guard_acquire>
    6718:	cbz	w0, 6658 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x48>
    671c:	add	x28, x27, #0x170
    6720:	mov	w1, #0x6                   	// #6
    6724:	mov	x0, x28
    6728:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    672c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6730:	mov	x0, x20
    6734:	ldr	x1, [x1]
    6738:	add	x1, x1, #0x10
    673c:	str	x1, [x27, #368]
    6740:	bl	0 <__cxa_guard_release>
    6744:	mov	x1, x28
    6748:	adrp	x2, 0 <__dso_handle>
    674c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6750:	add	x2, x2, #0x0
    6754:	add	x0, x0, #0x0
    6758:	bl	0 <__cxa_atexit>
    675c:	b	6658 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x48>
    6760:	add	x0, x20, #0xa0
    6764:	mov	w2, #0x4                   	// #4
    6768:	mov	x1, #0x48                  	// #72
    676c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6770:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6774:	mov	x20, x0
    6778:	ldr	x2, [sp, #104]
    677c:	mov	w3, #0x10                  	// #16
    6780:	ldr	x1, [x1]
    6784:	strh	w3, [x20, #8]
    6788:	stp	x26, xzr, [x20, #16]
    678c:	mov	x0, x27
    6790:	add	x1, x1, #0x10
    6794:	str	x1, [x20]
    6798:	add	x1, x20, #0x18
    679c:	stp	x25, x24, [x20, #32]
    67a0:	stp	x23, x22, [x20, #48]
    67a4:	str	x21, [x20, #64]
    67a8:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    67ac:	b	66dc <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0xcc>

00000000000067b0 <_ZN4llvm6Record10getDefInitEv>:
    67b0:	stp	x29, x30, [sp, #-32]!
    67b4:	mov	x29, sp
    67b8:	stp	x19, x20, [sp, #16]
    67bc:	ldr	x20, [x0, #112]
    67c0:	cbz	x20, 67d4 <_ZN4llvm6Record10getDefInitEv+0x24>
    67c4:	mov	x0, x20
    67c8:	ldp	x19, x20, [sp, #16]
    67cc:	ldp	x29, x30, [sp], #32
    67d0:	ret
    67d4:	mov	x19, x0
    67d8:	mov	w2, #0x4                   	// #4
    67dc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    67e0:	add	x0, x0, #0x0
    67e4:	mov	x1, #0x20                  	// #32
    67e8:	add	x0, x0, #0xa0
    67ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    67f0:	mov	x20, x0
    67f4:	mov	x1, x19
    67f8:	bl	5cf0 <_ZN4llvm7DefInitC1EPNS_6RecordE>
    67fc:	str	x20, [x19, #112]
    6800:	mov	x0, x20
    6804:	ldp	x19, x20, [sp, #16]
    6808:	ldp	x29, x30, [sp], #32
    680c:	ret

0000000000006810 <_ZN4llvm7DefInit3getEPNS_6RecordE>:
    6810:	b	67b0 <_ZN4llvm6Record10getDefInitEv>
    6814:	nop

0000000000006818 <_ZN4llvm5RecTy9getListTyEv>:
    6818:	stp	x29, x30, [sp, #-32]!
    681c:	mov	x29, sp
    6820:	str	x19, [sp, #16]
    6824:	mov	x19, x0
    6828:	ldr	x0, [x0, #16]
    682c:	cbz	x0, 683c <_ZN4llvm5RecTy9getListTyEv+0x24>
    6830:	ldr	x19, [sp, #16]
    6834:	ldp	x29, x30, [sp], #32
    6838:	ret
    683c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6840:	add	x0, x0, #0x0
    6844:	mov	w2, #0x4                   	// #4
    6848:	mov	x1, #0x20                  	// #32
    684c:	add	x0, x0, #0xa0
    6850:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6854:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6858:	mov	w2, #0x5                   	// #5
    685c:	str	w2, [x0, #8]
    6860:	ldr	x1, [x1]
    6864:	stp	xzr, x19, [x0, #16]
    6868:	add	x1, x1, #0x10
    686c:	str	x1, [x0]
    6870:	str	x0, [x19, #16]
    6874:	ldr	x19, [sp, #16]
    6878:	ldp	x29, x30, [sp], #32
    687c:	ret

0000000000006880 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>:
    6880:	stp	x29, x30, [sp, #-160]!
    6884:	cmp	x0, x1
    6888:	mov	x29, sp
    688c:	stp	x19, x20, [sp, #16]
    6890:	mov	x19, x1
    6894:	b.eq	6a74 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1f4>  // b.none
    6898:	mov	x20, x0
    689c:	cbz	x0, 6b38 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2b8>
    68a0:	ldr	w0, [x0, #8]
    68a4:	cmp	w0, #0x7
    68a8:	b.eq	68f4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x74>  // b.none
    68ac:	ldr	x2, [x20]
    68b0:	mov	x1, x19
    68b4:	mov	x0, x20
    68b8:	ldr	x2, [x2, #24]
    68bc:	blr	x2
    68c0:	tst	w0, #0xff
    68c4:	b.ne	6a74 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1f4>  // b.any
    68c8:	ldr	x2, [x19]
    68cc:	mov	x1, x20
    68d0:	mov	x0, x19
    68d4:	ldr	x2, [x2, #24]
    68d8:	blr	x2
    68dc:	tst	w0, #0xff
    68e0:	b.eq	6a88 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x208>  // b.none
    68e4:	mov	x0, x20
    68e8:	ldp	x19, x20, [sp, #16]
    68ec:	ldp	x29, x30, [sp], #160
    68f0:	ret
    68f4:	cbz	x1, 6b38 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2b8>
    68f8:	ldr	w0, [x1, #8]
    68fc:	cmp	w0, #0x7
    6900:	b.ne	68ac <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2c>  // b.any
    6904:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6908:	ldr	w2, [x20, #32]
    690c:	stp	x21, x22, [sp, #32]
    6910:	add	x22, sp, #0x40
    6914:	ldr	d0, [x0]
    6918:	add	x21, sp, #0x70
    691c:	add	x0, x22, #0x10
    6920:	add	x1, x21, #0x10
    6924:	stp	x23, x24, [sp, #48]
    6928:	cmp	x2, #0x4
    692c:	str	x0, [sp, #64]
    6930:	lsl	x24, x2, #3
    6934:	str	x1, [sp, #112]
    6938:	mov	x23, x2
    693c:	str	d0, [sp, #72]
    6940:	mov	x0, x1
    6944:	str	d0, [sp, #120]
    6948:	mov	x2, #0x0                   	// #0
    694c:	b.hi	6af8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x278>  // b.pmore
    6950:	add	x3, x24, #0x28
    6954:	add	x1, x20, #0x28
    6958:	add	x20, x20, x3
    695c:	cmp	x1, x20
    6960:	b.eq	6970 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xf0>  // b.none
    6964:	mov	x2, x24
    6968:	bl	0 <memcpy>
    696c:	ldr	w2, [sp, #120]
    6970:	ldr	w3, [sp, #124]
    6974:	add	x2, x23, x2
    6978:	cmp	x2, x3
    697c:	b.hi	6b18 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x298>  // b.pmore
    6980:	str	w2, [sp, #120]
    6984:	mov	w0, w2
    6988:	add	x23, x22, #0x10
    698c:	mov	x20, #0xfffffffffffffff8    	// #-8
    6990:	cbnz	x2, 69d4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x154>
    6994:	b	6a20 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1a0>
    6998:	ldp	w0, w1, [sp, #72]
    699c:	cmp	w0, w1
    69a0:	b.cs	6adc <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x25c>  // b.hs, b.nlast
    69a4:	ldr	x1, [sp, #64]
    69a8:	str	x24, [x1, w0, uxtw #3]
    69ac:	ldp	w0, w2, [sp, #72]
    69b0:	mov	w1, w0
    69b4:	add	x1, x1, #0x1
    69b8:	cmp	x1, x2
    69bc:	b.hi	6b18 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x298>  // b.pmore
    69c0:	add	w0, w0, #0x1
    69c4:	str	w0, [sp, #72]
    69c8:	ldr	w0, [sp, #120]
    69cc:	cbz	w0, 6a20 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1a0>
    69d0:	ldr	w3, [sp, #124]
    69d4:	ldr	x4, [sp, #112]
    69d8:	add	x1, x20, w0, uxtw #3
    69dc:	mov	w2, w0
    69e0:	sub	x2, x2, #0x1
    69e4:	cmp	x2, x3
    69e8:	ldr	x24, [x4, x1]
    69ec:	b.hi	6b18 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x298>  // b.pmore
    69f0:	sub	w2, w0, #0x1
    69f4:	mov	x1, x24
    69f8:	mov	x0, x19
    69fc:	str	w2, [sp, #120]
    6a00:	bl	2b10 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    6a04:	tst	w0, #0xff
    6a08:	b.ne	6998 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x118>  // b.any
    6a0c:	mov	x0, x24
    6a10:	mov	x1, x21
    6a14:	bl	4208 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    6a18:	ldr	w0, [sp, #120]
    6a1c:	cbnz	w0, 69d0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x150>
    6a20:	ldr	w1, [sp, #72]
    6a24:	add	x21, x21, #0x10
    6a28:	ldr	x0, [sp, #64]
    6a2c:	bl	5740 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    6a30:	mov	x20, x0
    6a34:	ldr	x1, [sp, #112]
    6a38:	cmp	x1, x21
    6a3c:	b.eq	6a48 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1c8>  // b.none
    6a40:	mov	x0, x1
    6a44:	bl	0 <free>
    6a48:	ldr	x0, [sp, #64]
    6a4c:	add	x22, x22, #0x10
    6a50:	cmp	x0, x22
    6a54:	b.eq	6ad0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x250>  // b.none
    6a58:	bl	0 <free>
    6a5c:	mov	x0, x20
    6a60:	ldp	x19, x20, [sp, #16]
    6a64:	ldp	x21, x22, [sp, #32]
    6a68:	ldp	x23, x24, [sp, #48]
    6a6c:	ldp	x29, x30, [sp], #160
    6a70:	ret
    6a74:	mov	x20, x19
    6a78:	mov	x0, x20
    6a7c:	ldp	x19, x20, [sp, #16]
    6a80:	ldp	x29, x30, [sp], #160
    6a84:	ret
    6a88:	ldr	w0, [x20, #8]
    6a8c:	cmp	w0, #0x5
    6a90:	b.eq	6aa8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x228>  // b.none
    6a94:	mov	x20, #0x0                   	// #0
    6a98:	mov	x0, x20
    6a9c:	ldp	x19, x20, [sp, #16]
    6aa0:	ldp	x29, x30, [sp], #160
    6aa4:	ret
    6aa8:	ldr	w0, [x19, #8]
    6aac:	cmp	w0, #0x5
    6ab0:	b.ne	6a94 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x214>  // b.any
    6ab4:	ldr	x1, [x19, #24]
    6ab8:	ldr	x0, [x20, #24]
    6abc:	bl	6880 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    6ac0:	cbz	x0, 6a94 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x214>
    6ac4:	bl	6818 <_ZN4llvm5RecTy9getListTyEv>
    6ac8:	mov	x20, x0
    6acc:	b	68e4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x64>
    6ad0:	ldp	x21, x22, [sp, #32]
    6ad4:	ldp	x23, x24, [sp, #48]
    6ad8:	b	68e4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x64>
    6adc:	mov	x0, x22
    6ae0:	mov	x1, x23
    6ae4:	mov	x3, #0x8                   	// #8
    6ae8:	mov	x2, #0x0                   	// #0
    6aec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6af0:	ldr	w0, [sp, #72]
    6af4:	b	69a4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x124>
    6af8:	mov	x2, x23
    6afc:	mov	x0, x21
    6b00:	mov	x3, #0x8                   	// #8
    6b04:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6b08:	ldr	x0, [sp, #112]
    6b0c:	ldr	w2, [sp, #120]
    6b10:	add	x0, x0, x2, lsl #3
    6b14:	b	6950 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xd0>
    6b18:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6b1c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6b20:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6b24:	add	x3, x3, #0x0
    6b28:	add	x1, x1, #0x0
    6b2c:	add	x0, x0, #0x0
    6b30:	mov	w2, #0x43                  	// #67
    6b34:	bl	0 <__assert_fail>
    6b38:	stp	x21, x22, [sp, #32]
    6b3c:	stp	x23, x24, [sp, #48]
    6b40:	bl	658 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    6b44:	nop

0000000000006b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>:
    6b48:	stp	x29, x30, [sp, #-240]!
    6b4c:	mov	x29, sp
    6b50:	stp	x19, x20, [sp, #16]
    6b54:	stp	x23, x24, [sp, #48]
    6b58:	adrp	x24, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6b5c:	add	x20, x24, #0x0
    6b60:	mov	x23, x2
    6b64:	add	x19, x20, #0x188
    6b68:	stp	x21, x22, [sp, #32]
    6b6c:	mov	x21, x0
    6b70:	mov	x22, x1
    6b74:	stp	x25, x26, [sp, #64]
    6b78:	ldarb	w0, [x19]
    6b7c:	tbz	w0, #0, 6c2c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xe4>
    6b80:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6b84:	add	x19, sp, #0x60
    6b88:	add	x2, x19, #0x10
    6b8c:	mov	x1, x22
    6b90:	ldr	d0, [x0]
    6b94:	lsl	x25, x22, #3
    6b98:	mov	x0, x19
    6b9c:	str	x2, [sp, #96]
    6ba0:	add	x26, x21, x25
    6ba4:	str	d0, [sp, #104]
    6ba8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    6bac:	mov	x1, x23
    6bb0:	mov	x0, x19
    6bb4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6bb8:	cmp	x26, x21
    6bbc:	b.eq	6bdc <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x94>  // b.none
    6bc0:	mov	x20, x21
    6bc4:	nop
    6bc8:	ldr	x1, [x20], #8
    6bcc:	mov	x0, x19
    6bd0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6bd4:	cmp	x26, x20
    6bd8:	b.ne	6bc8 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x80>  // b.any
    6bdc:	add	x0, x24, #0x0
    6be0:	add	x2, sp, #0x58
    6be4:	add	x0, x0, #0x190
    6be8:	mov	x1, x19
    6bec:	str	xzr, [sp, #88]
    6bf0:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    6bf4:	cbz	x0, 6c7c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x134>
    6bf8:	sub	x20, x0, #0x18
    6bfc:	ldr	x0, [sp, #96]
    6c00:	add	x19, x19, #0x10
    6c04:	cmp	x0, x19
    6c08:	b.eq	6c10 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xc8>  // b.none
    6c0c:	bl	0 <free>
    6c10:	mov	x0, x20
    6c14:	ldp	x19, x20, [sp, #16]
    6c18:	ldp	x21, x22, [sp, #32]
    6c1c:	ldp	x23, x24, [sp, #48]
    6c20:	ldp	x25, x26, [sp, #64]
    6c24:	ldp	x29, x30, [sp], #240
    6c28:	ret
    6c2c:	mov	x0, x19
    6c30:	bl	0 <__cxa_guard_acquire>
    6c34:	cbz	w0, 6b80 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x38>
    6c38:	add	x25, x20, #0x190
    6c3c:	mov	w1, #0x6                   	// #6
    6c40:	mov	x0, x25
    6c44:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    6c48:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6c4c:	mov	x0, x19
    6c50:	ldr	x1, [x1]
    6c54:	add	x1, x1, #0x10
    6c58:	str	x1, [x20, #400]
    6c5c:	bl	0 <__cxa_guard_release>
    6c60:	mov	x1, x25
    6c64:	adrp	x2, 0 <__dso_handle>
    6c68:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6c6c:	add	x2, x2, #0x0
    6c70:	add	x0, x0, #0x0
    6c74:	bl	0 <__cxa_atexit>
    6c78:	b	6b80 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x38>
    6c7c:	cbz	x22, 6c9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x154>
    6c80:	ldr	x1, [x21]
    6c84:	cbz	x1, 6d44 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x1fc>
    6c88:	ldrb	w0, [x1, #8]
    6c8c:	sub	w0, w0, #0x1
    6c90:	and	w0, w0, #0xff
    6c94:	cmp	w0, #0x16
    6c98:	b.ls	6d08 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x1c0>  // b.plast
    6c9c:	add	x1, x25, #0x28
    6ca0:	mov	w2, #0x3                   	// #3
    6ca4:	add	x0, x24, #0x0
    6ca8:	add	x0, x0, #0xa0
    6cac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6cb0:	mov	x20, x0
    6cb4:	mov	x0, x23
    6cb8:	bl	6818 <_ZN4llvm5RecTy9getListTyEv>
    6cbc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6cc0:	mov	w2, #0x9                   	// #9
    6cc4:	strh	w2, [x20, #8]
    6cc8:	ldr	x1, [x1]
    6ccc:	stp	x0, xzr, [x20, #16]
    6cd0:	add	x1, x1, #0x10
    6cd4:	str	x1, [x20]
    6cd8:	str	w22, [x20, #32]
    6cdc:	cbz	x25, 6cf0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x1a8>
    6ce0:	mov	x2, x25
    6ce4:	mov	x1, x21
    6ce8:	add	x0, x20, #0x28
    6cec:	bl	0 <memcpy>
    6cf0:	ldr	x2, [sp, #88]
    6cf4:	add	x0, x24, #0x0
    6cf8:	add	x0, x0, #0x190
    6cfc:	add	x1, x20, #0x18
    6d00:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    6d04:	b	6bfc <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xb4>
    6d08:	ldr	x0, [x1, #16]
    6d0c:	mov	x1, x23
    6d10:	ldr	x2, [x0]
    6d14:	ldr	x2, [x2, #24]
    6d18:	blr	x2
    6d1c:	tst	w0, #0xff
    6d20:	b.ne	6c9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x154>  // b.any
    6d24:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6d28:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6d2c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6d30:	add	x3, x3, #0x0
    6d34:	add	x1, x1, #0x0
    6d38:	add	x0, x0, #0x0
    6d3c:	mov	w2, #0x244                 	// #580
    6d40:	bl	0 <__assert_fail>
    6d44:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6d48:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6d4c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6d50:	add	x3, x3, #0x0
    6d54:	add	x1, x1, #0x0
    6d58:	add	x0, x0, #0x0
    6d5c:	mov	w2, #0x69                  	// #105
    6d60:	bl	0 <__assert_fail>
    6d64:	nop

0000000000006d68 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE>:
    6d68:	stp	x29, x30, [sp, #-176]!
    6d6c:	mov	x29, sp
    6d70:	stp	x23, x24, [sp, #48]
    6d74:	mov	x23, x0
    6d78:	ldr	x0, [x0, #16]
    6d7c:	stp	x19, x20, [sp, #16]
    6d80:	mov	x19, x23
    6d84:	cmp	x1, x0
    6d88:	b.eq	6da4 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x3c>  // b.none
    6d8c:	mov	x20, x1
    6d90:	cbz	x1, 6f34 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x1cc>
    6d94:	ldr	w0, [x1, #8]
    6d98:	mov	x19, #0x0                   	// #0
    6d9c:	cmp	w0, #0x5
    6da0:	b.eq	6db8 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x50>  // b.none
    6da4:	mov	x0, x19
    6da8:	ldp	x19, x20, [sp, #16]
    6dac:	ldp	x23, x24, [sp, #48]
    6db0:	ldp	x29, x30, [sp], #176
    6db4:	ret
    6db8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6dbc:	stp	x25, x26, [sp, #64]
    6dc0:	add	x25, sp, #0x60
    6dc4:	ldr	d0, [x0]
    6dc8:	add	x1, x25, #0x10
    6dcc:	ldr	w2, [x23, #32]
    6dd0:	stp	x21, x22, [sp, #32]
    6dd4:	cmp	x2, #0x8
    6dd8:	stp	x27, x28, [sp, #80]
    6ddc:	add	x27, x23, #0x28
    6de0:	str	x1, [sp, #96]
    6de4:	str	d0, [sp, #104]
    6de8:	b.hi	6ef4 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x18c>  // b.pmore
    6dec:	add	x21, x27, x2, lsl #3
    6df0:	cmp	x27, x21
    6df4:	ldr	x22, [x20, #24]
    6df8:	b.eq	6f08 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x1a0>  // b.none
    6dfc:	add	x26, x25, #0x10
    6e00:	mov	w20, #0x0                   	// #0
    6e04:	mov	w24, #0x1                   	// #1
    6e08:	b	6e44 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0xdc>
    6e0c:	ldr	x1, [sp, #96]
    6e10:	str	x19, [x1, w0, uxtw #3]
    6e14:	ldp	w2, w0, [sp, #104]
    6e18:	mov	w1, w2
    6e1c:	add	x1, x1, #0x1
    6e20:	cmp	x1, x0
    6e24:	b.hi	6f14 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x1ac>  // b.pmore
    6e28:	add	w2, w2, #0x1
    6e2c:	str	w2, [sp, #104]
    6e30:	cmp	x28, x19
    6e34:	add	x27, x27, #0x8
    6e38:	csel	w20, w20, w24, eq  // eq = none
    6e3c:	cmp	x21, x27
    6e40:	b.eq	6e8c <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x124>  // b.none
    6e44:	ldr	x28, [x27]
    6e48:	mov	x1, x22
    6e4c:	mov	x0, x28
    6e50:	ldr	x2, [x28]
    6e54:	ldr	x2, [x2, #64]
    6e58:	blr	x2
    6e5c:	mov	x19, x0
    6e60:	cbz	x0, 6ea0 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x138>
    6e64:	ldp	w0, w1, [sp, #104]
    6e68:	cmp	w0, w1
    6e6c:	b.cc	6e0c <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0xa4>  // b.lo, b.ul, b.last
    6e70:	mov	x0, x25
    6e74:	mov	x1, x26
    6e78:	mov	x3, #0x8                   	// #8
    6e7c:	mov	x2, #0x0                   	// #0
    6e80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6e84:	ldr	w0, [sp, #104]
    6e88:	b	6e0c <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0xa4>
    6e8c:	ldr	x0, [sp, #96]
    6e90:	cbz	w20, 6f0c <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x1a4>
    6e94:	mov	x2, x22
    6e98:	bl	6b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    6e9c:	mov	x19, x0
    6ea0:	ldr	x0, [sp, #96]
    6ea4:	add	x25, x25, #0x10
    6ea8:	cmp	x0, x25
    6eac:	b.eq	6ed4 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x16c>  // b.none
    6eb0:	bl	0 <free>
    6eb4:	mov	x0, x19
    6eb8:	ldp	x19, x20, [sp, #16]
    6ebc:	ldp	x21, x22, [sp, #32]
    6ec0:	ldp	x23, x24, [sp, #48]
    6ec4:	ldp	x25, x26, [sp, #64]
    6ec8:	ldp	x27, x28, [sp, #80]
    6ecc:	ldp	x29, x30, [sp], #176
    6ed0:	ret
    6ed4:	mov	x0, x19
    6ed8:	ldp	x19, x20, [sp, #16]
    6edc:	ldp	x21, x22, [sp, #32]
    6ee0:	ldp	x23, x24, [sp, #48]
    6ee4:	ldp	x25, x26, [sp, #64]
    6ee8:	ldp	x27, x28, [sp, #80]
    6eec:	ldp	x29, x30, [sp], #176
    6ef0:	ret
    6ef4:	mov	x0, x25
    6ef8:	mov	x3, #0x8                   	// #8
    6efc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6f00:	ldr	w2, [x23, #32]
    6f04:	b	6dec <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x84>
    6f08:	ldr	x0, [sp, #96]
    6f0c:	mov	x19, x23
    6f10:	b	6ea4 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x13c>
    6f14:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6f18:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6f1c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6f20:	add	x3, x3, #0x0
    6f24:	add	x1, x1, #0x0
    6f28:	add	x0, x0, #0x0
    6f2c:	mov	w2, #0x43                  	// #67
    6f30:	bl	0 <__assert_fail>
    6f34:	stp	x21, x22, [sp, #32]
    6f38:	stp	x25, x26, [sp, #64]
    6f3c:	stp	x27, x28, [sp, #80]
    6f40:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    6f44:	nop

0000000000006f48 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE>:
    6f48:	stp	x29, x30, [sp, #-160]!
    6f4c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    6f50:	cmp	x2, #0x8
    6f54:	mov	x29, sp
    6f58:	ldr	d0, [x3]
    6f5c:	stp	x23, x24, [sp, #48]
    6f60:	add	x24, sp, #0x50
    6f64:	add	x3, x24, #0x10
    6f68:	stp	x19, x20, [sp, #16]
    6f6c:	mov	x20, x0
    6f70:	mov	x19, x1
    6f74:	stp	x21, x22, [sp, #32]
    6f78:	mov	x22, x2
    6f7c:	str	x3, [sp, #80]
    6f80:	str	d0, [sp, #88]
    6f84:	b.hi	7078 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x130>  // b.pmore
    6f88:	add	x22, x19, x22, lsl #2
    6f8c:	cmp	x22, x19
    6f90:	b.eq	708c <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x144>  // b.none
    6f94:	mov	x23, #0x28                  	// #40
    6f98:	str	x25, [sp, #64]
    6f9c:	add	x25, x24, #0x10
    6fa0:	b	6fd4 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x8c>
    6fa4:	ldr	x0, [sp, #80]
    6fa8:	str	x21, [x0, w3, uxtw #3]
    6fac:	ldp	w2, w0, [sp, #88]
    6fb0:	mov	w3, w2
    6fb4:	add	x3, x3, #0x1
    6fb8:	cmp	x3, x0
    6fbc:	b.hi	7094 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x14c>  // b.pmore
    6fc0:	add	w2, w2, #0x1
    6fc4:	str	w2, [sp, #88]
    6fc8:	add	x19, x19, #0x4
    6fcc:	cmp	x22, x19
    6fd0:	b.eq	7048 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x100>  // b.none
    6fd4:	ldr	w2, [x19]
    6fd8:	ldr	w0, [x20, #32]
    6fdc:	cmp	w2, w0
    6fe0:	b.cs	7014 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xcc>  // b.hs, b.nlast
    6fe4:	ldp	w3, w0, [sp, #88]
    6fe8:	add	x2, x23, w2, uxtw #3
    6fec:	cmp	w3, w0
    6ff0:	ldr	x21, [x20, x2]
    6ff4:	b.cc	6fa4 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x5c>  // b.lo, b.ul, b.last
    6ff8:	mov	x3, #0x8                   	// #8
    6ffc:	mov	x1, x25
    7000:	mov	x0, x24
    7004:	mov	x2, #0x0                   	// #0
    7008:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    700c:	ldr	w3, [sp, #88]
    7010:	b	6fa4 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x5c>
    7014:	ldr	x25, [sp, #64]
    7018:	mov	x19, #0x0                   	// #0
    701c:	ldr	x0, [sp, #80]
    7020:	add	x24, x24, #0x10
    7024:	cmp	x0, x24
    7028:	b.eq	7030 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xe8>  // b.none
    702c:	bl	0 <free>
    7030:	mov	x0, x19
    7034:	ldp	x19, x20, [sp, #16]
    7038:	ldp	x21, x22, [sp, #32]
    703c:	ldp	x23, x24, [sp, #48]
    7040:	ldp	x29, x30, [sp], #160
    7044:	ret
    7048:	ldr	x25, [sp, #64]
    704c:	mov	w1, w2
    7050:	ldr	x3, [x20, #16]
    7054:	ldr	x0, [sp, #80]
    7058:	cbz	x3, 70b4 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x16c>
    705c:	ldr	w2, [x3, #8]
    7060:	cmp	w2, #0x5
    7064:	b.ne	70bc <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x174>  // b.any
    7068:	ldr	x2, [x3, #24]
    706c:	bl	6b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    7070:	mov	x19, x0
    7074:	b	701c <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xd4>
    7078:	mov	x1, x3
    707c:	mov	x0, x24
    7080:	mov	x3, #0x8                   	// #8
    7084:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7088:	b	6f88 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x40>
    708c:	ldr	w2, [sp, #88]
    7090:	b	704c <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x104>
    7094:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7098:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    709c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    70a0:	add	x3, x3, #0x0
    70a4:	add	x1, x1, #0x0
    70a8:	add	x0, x0, #0x0
    70ac:	mov	w2, #0x43                  	// #67
    70b0:	bl	0 <__assert_fail>
    70b4:	str	x25, [sp, #64]
    70b8:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    70bc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    70c0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    70c4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    70c8:	add	x3, x3, #0x0
    70cc:	add	x1, x1, #0x0
    70d0:	add	x0, x0, #0x0
    70d4:	mov	w2, #0x108                 	// #264
    70d8:	str	x25, [sp, #64]
    70dc:	bl	0 <__assert_fail>

00000000000070e0 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE>:
    70e0:	stp	x29, x30, [sp, #-176]!
    70e4:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    70e8:	mov	x29, sp
    70ec:	stp	x23, x24, [sp, #48]
    70f0:	mov	x23, x0
    70f4:	ldr	d0, [x2]
    70f8:	add	x24, sp, #0x60
    70fc:	stp	x19, x20, [sp, #16]
    7100:	ldr	w2, [x23, #32]
    7104:	add	x0, x24, #0x10
    7108:	stp	x21, x22, [sp, #32]
    710c:	cmp	w2, #0x8
    7110:	str	x0, [sp, #96]
    7114:	mov	x22, x1
    7118:	str	d0, [sp, #104]
    711c:	mov	w2, w2
    7120:	b.hi	7200 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x120>  // b.pmore
    7124:	add	x20, x23, #0x28
    7128:	add	x21, x20, x2, lsl #3
    712c:	cmp	x21, x20
    7130:	b.eq	7224 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x144>  // b.none
    7134:	stp	x25, x26, [sp, #64]
    7138:	add	x25, x24, #0x10
    713c:	str	x27, [sp, #80]
    7140:	mov	w27, #0x0                   	// #0
    7144:	nop
    7148:	ldr	x26, [x20]
    714c:	mov	x1, x22
    7150:	mov	x0, x26
    7154:	ldr	x2, [x26]
    7158:	ldr	x2, [x2, #96]
    715c:	blr	x2
    7160:	cmp	x0, x26
    7164:	mov	x19, x0
    7168:	cset	w2, ne  // ne = any
    716c:	ldp	w0, w1, [sp, #104]
    7170:	orr	w27, w27, w2
    7174:	cmp	w0, w1
    7178:	b.cs	71e4 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x104>  // b.hs, b.nlast
    717c:	ldr	x1, [sp, #96]
    7180:	str	x19, [x1, w0, uxtw #3]
    7184:	ldp	w2, w0, [sp, #104]
    7188:	mov	w1, w2
    718c:	add	x1, x1, #0x1
    7190:	cmp	x1, x0
    7194:	b.hi	725c <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x17c>  // b.pmore
    7198:	add	w2, w2, #0x1
    719c:	str	w2, [sp, #104]
    71a0:	add	x20, x20, #0x8
    71a4:	cmp	x21, x20
    71a8:	b.ne	7148 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x68>  // b.any
    71ac:	ldr	x0, [sp, #96]
    71b0:	cbnz	w27, 722c <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x14c>
    71b4:	ldp	x25, x26, [sp, #64]
    71b8:	ldr	x27, [sp, #80]
    71bc:	add	x24, x24, #0x10
    71c0:	cmp	x0, x24
    71c4:	b.eq	71cc <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xec>  // b.none
    71c8:	bl	0 <free>
    71cc:	mov	x0, x23
    71d0:	ldp	x19, x20, [sp, #16]
    71d4:	ldp	x21, x22, [sp, #32]
    71d8:	ldp	x23, x24, [sp, #48]
    71dc:	ldp	x29, x30, [sp], #176
    71e0:	ret
    71e4:	mov	x0, x24
    71e8:	mov	x1, x25
    71ec:	mov	x3, #0x8                   	// #8
    71f0:	mov	x2, #0x0                   	// #0
    71f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    71f8:	ldr	w0, [sp, #104]
    71fc:	b	717c <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x9c>
    7200:	mov	x1, x0
    7204:	mov	x3, #0x8                   	// #8
    7208:	mov	x0, x24
    720c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7210:	ldr	w2, [x23, #32]
    7214:	add	x20, x23, #0x28
    7218:	add	x21, x20, x2, lsl #3
    721c:	cmp	x21, x20
    7220:	b.ne	7134 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x54>  // b.any
    7224:	ldr	x0, [sp, #96]
    7228:	b	71bc <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xdc>
    722c:	ldr	x2, [x23, #16]
    7230:	cbz	x2, 727c <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x19c>
    7234:	ldr	w3, [x2, #8]
    7238:	cmp	w3, #0x5
    723c:	b.ne	7280 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x1a0>  // b.any
    7240:	ldr	x2, [x2, #24]
    7244:	bl	6b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    7248:	mov	x23, x0
    724c:	ldp	x25, x26, [sp, #64]
    7250:	ldr	x27, [sp, #80]
    7254:	ldr	x0, [sp, #96]
    7258:	b	71bc <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xdc>
    725c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7260:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7264:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7268:	add	x3, x3, #0x0
    726c:	add	x1, x1, #0x0
    7270:	add	x0, x0, #0x0
    7274:	mov	w2, #0x43                  	// #67
    7278:	bl	0 <__assert_fail>
    727c:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    7280:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7284:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7288:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    728c:	add	x3, x3, #0x0
    7290:	add	x1, x1, #0x0
    7294:	add	x0, x0, #0x0
    7298:	mov	w2, #0x108                 	// #264
    729c:	bl	0 <__assert_fail>

00000000000072a0 <_ZN4llvm9BitsRecTy3getEj>:
    72a0:	stp	x29, x30, [sp, #-64]!
    72a4:	mov	x29, sp
    72a8:	stp	x19, x20, [sp, #16]
    72ac:	adrp	x20, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    72b0:	mov	w19, w0
    72b4:	stp	x21, x22, [sp, #32]
    72b8:	add	x22, x20, #0x0
    72bc:	add	x21, x22, #0x1a8
    72c0:	str	x23, [sp, #48]
    72c4:	ldarb	w0, [x21]
    72c8:	tbz	w0, #0, 730c <_ZN4llvm9BitsRecTy3getEj+0x6c>
    72cc:	add	x23, x20, #0x0
    72d0:	mov	w22, w19
    72d4:	add	x0, x23, #0x1b0
    72d8:	ldr	x3, [x0, #8]
    72dc:	ldr	x21, [x23, #432]
    72e0:	sub	x2, x3, x21
    72e4:	asr	x1, x2, #3
    72e8:	cmp	x22, x2, asr #3
    72ec:	b.cs	7348 <_ZN4llvm9BitsRecTy3getEj+0xa8>  // b.hs, b.nlast
    72f0:	ldr	x0, [x21, x22, lsl #3]
    72f4:	cbz	x0, 736c <_ZN4llvm9BitsRecTy3getEj+0xcc>
    72f8:	ldp	x19, x20, [sp, #16]
    72fc:	ldp	x21, x22, [sp, #32]
    7300:	ldr	x23, [sp, #48]
    7304:	ldp	x29, x30, [sp], #64
    7308:	ret
    730c:	mov	x0, x21
    7310:	bl	0 <__cxa_guard_acquire>
    7314:	cbz	w0, 72cc <_ZN4llvm9BitsRecTy3getEj+0x2c>
    7318:	stp	xzr, xzr, [x22, #432]
    731c:	mov	x0, x21
    7320:	add	x23, x22, #0x1b0
    7324:	str	xzr, [x22, #448]
    7328:	bl	0 <__cxa_guard_release>
    732c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7330:	mov	x1, x23
    7334:	adrp	x2, 0 <__dso_handle>
    7338:	add	x2, x2, #0x0
    733c:	ldr	x0, [x0]
    7340:	bl	0 <__cxa_atexit>
    7344:	b	72cc <_ZN4llvm9BitsRecTy3getEj+0x2c>
    7348:	add	w2, w19, #0x1
    734c:	cmp	x2, x1
    7350:	b.hi	73b8 <_ZN4llvm9BitsRecTy3getEj+0x118>  // b.pmore
    7354:	b.cs	72f0 <_ZN4llvm9BitsRecTy3getEj+0x50>  // b.hs, b.nlast
    7358:	add	x2, x21, x2, lsl #3
    735c:	cmp	x3, x2
    7360:	b.eq	72f0 <_ZN4llvm9BitsRecTy3getEj+0x50>  // b.none
    7364:	str	x2, [x0, #8]
    7368:	b	72f0 <_ZN4llvm9BitsRecTy3getEj+0x50>
    736c:	add	x0, x20, #0x0
    7370:	mov	w2, #0x4                   	// #4
    7374:	mov	x1, #0x20                  	// #32
    7378:	add	x0, x0, #0xa0
    737c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7380:	str	xzr, [x0, #16]
    7384:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7388:	mov	w2, #0x1                   	// #1
    738c:	str	w2, [x0, #8]
    7390:	ldr	x1, [x1]
    7394:	str	w19, [x0, #24]
    7398:	ldp	x19, x20, [sp, #16]
    739c:	add	x1, x1, #0x10
    73a0:	str	x1, [x0]
    73a4:	str	x0, [x21, x22, lsl #3]
    73a8:	ldp	x21, x22, [sp, #32]
    73ac:	ldr	x23, [sp, #48]
    73b0:	ldp	x29, x30, [sp], #64
    73b4:	ret
    73b8:	sub	x1, x2, x1
    73bc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    73c0:	ldr	x21, [x23, #432]
    73c4:	b	72f0 <_ZN4llvm9BitsRecTy3getEj+0x50>

00000000000073c8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>:
    73c8:	stp	x29, x30, [sp, #-240]!
    73cc:	mov	x29, sp
    73d0:	stp	x19, x20, [sp, #16]
    73d4:	stp	x23, x24, [sp, #48]
    73d8:	adrp	x23, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    73dc:	add	x20, x23, #0x0
    73e0:	add	x19, x20, #0x1c8
    73e4:	stp	x21, x22, [sp, #32]
    73e8:	mov	x21, x0
    73ec:	mov	x22, x1
    73f0:	str	x25, [sp, #64]
    73f4:	ldarb	w0, [x19]
    73f8:	tbz	w0, #0, 749c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0xd4>
    73fc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7400:	add	x20, sp, #0x60
    7404:	add	x2, x20, #0x10
    7408:	lsl	x24, x22, #3
    740c:	ldr	d0, [x0]
    7410:	mov	x1, x22
    7414:	mov	x0, x20
    7418:	add	x25, x21, x24
    741c:	str	x2, [sp, #96]
    7420:	str	d0, [sp, #104]
    7424:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    7428:	cmp	x25, x21
    742c:	b.eq	744c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x84>  // b.none
    7430:	mov	x19, x21
    7434:	nop
    7438:	ldr	x1, [x19], #8
    743c:	mov	x0, x20
    7440:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    7444:	cmp	x25, x19
    7448:	b.ne	7438 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x70>  // b.any
    744c:	add	x19, x23, #0x0
    7450:	add	x2, sp, #0x58
    7454:	add	x0, x19, #0x1d0
    7458:	mov	x1, x20
    745c:	str	xzr, [sp, #88]
    7460:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    7464:	cbz	x0, 74ec <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x124>
    7468:	sub	x19, x0, #0x18
    746c:	ldr	x0, [sp, #96]
    7470:	add	x20, x20, #0x10
    7474:	cmp	x0, x20
    7478:	b.eq	7480 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0xb8>  // b.none
    747c:	bl	0 <free>
    7480:	mov	x0, x19
    7484:	ldp	x19, x20, [sp, #16]
    7488:	ldp	x21, x22, [sp, #32]
    748c:	ldp	x23, x24, [sp, #48]
    7490:	ldr	x25, [sp, #64]
    7494:	ldp	x29, x30, [sp], #240
    7498:	ret
    749c:	mov	x0, x19
    74a0:	bl	0 <__cxa_guard_acquire>
    74a4:	cbz	w0, 73fc <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x34>
    74a8:	add	x24, x20, #0x1d0
    74ac:	mov	w1, #0x6                   	// #6
    74b0:	mov	x0, x24
    74b4:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    74b8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    74bc:	mov	x0, x19
    74c0:	ldr	x1, [x1]
    74c4:	add	x1, x1, #0x10
    74c8:	str	x1, [x20, #464]
    74cc:	bl	0 <__cxa_guard_release>
    74d0:	mov	x1, x24
    74d4:	adrp	x2, 0 <__dso_handle>
    74d8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    74dc:	add	x2, x2, #0x0
    74e0:	add	x0, x0, #0x0
    74e4:	bl	0 <__cxa_atexit>
    74e8:	b	73fc <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x34>
    74ec:	add	x1, x24, #0x28
    74f0:	mov	w2, #0x3                   	// #3
    74f4:	add	x0, x19, #0xa0
    74f8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    74fc:	mov	x19, x0
    7500:	mov	w0, w22
    7504:	bl	72a0 <_ZN4llvm9BitsRecTy3getEj>
    7508:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    750c:	mov	w2, #0x3                   	// #3
    7510:	strh	w2, [x19, #8]
    7514:	ldr	x1, [x1]
    7518:	stp	x0, xzr, [x19, #16]
    751c:	add	x1, x1, #0x10
    7520:	str	x1, [x19]
    7524:	str	w22, [x19, #32]
    7528:	cbz	x24, 753c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x174>
    752c:	mov	x2, x24
    7530:	mov	x1, x21
    7534:	add	x0, x19, #0x28
    7538:	bl	0 <memcpy>
    753c:	ldr	x2, [sp, #88]
    7540:	add	x0, x23, #0x0
    7544:	add	x0, x0, #0x1d0
    7548:	add	x1, x19, #0x18
    754c:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    7550:	b	746c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0xa4>
    7554:	nop

0000000000007558 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    7558:	stp	x29, x30, [sp, #-208]!
    755c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7560:	cmp	x2, #0x10
    7564:	mov	x29, sp
    7568:	ldr	d0, [x3]
    756c:	str	x23, [sp, #48]
    7570:	add	x23, sp, #0x40
    7574:	add	x3, x23, #0x10
    7578:	stp	x19, x20, [sp, #16]
    757c:	mov	x19, x2
    7580:	stp	x21, x22, [sp, #32]
    7584:	mov	x20, x0
    7588:	mov	x22, x1
    758c:	str	x3, [sp, #64]
    7590:	str	d0, [sp, #72]
    7594:	b.hi	7650 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf8>  // b.pmore
    7598:	str	w19, [sp, #72]
    759c:	add	x2, x3, x2, lsl #3
    75a0:	mov	x0, x3
    75a4:	mov	w21, w19
    75a8:	cmp	x2, x3
    75ac:	b.eq	75bc <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x64>  // b.none
    75b0:	sub	x2, x2, x0
    75b4:	mov	w1, #0x0                   	// #0
    75b8:	bl	0 <memset>
    75bc:	cbz	w21, 763c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xe4>
    75c0:	ldr	w1, [x20, #32]
    75c4:	sub	w0, w21, #0x1
    75c8:	mov	x3, #0x0                   	// #0
    75cc:	mov	x5, #0x28                  	// #40
    75d0:	b	7600 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xa8>
    75d4:	cmp	x19, x3
    75d8:	b.eq	76a0 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x148>  // b.none
    75dc:	add	x4, x5, w4, uxtw #3
    75e0:	cmp	x0, x3
    75e4:	ldr	x2, [sp, #64]
    75e8:	ldr	x4, [x20, x4]
    75ec:	str	x4, [x2, x3, lsl #3]
    75f0:	b.eq	763c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xe4>  // b.none
    75f4:	add	x3, x3, #0x1
    75f8:	cmp	x19, x3
    75fc:	b.eq	7680 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x128>  // b.none
    7600:	ldr	w4, [x22, x3, lsl #2]
    7604:	cmp	w4, w1
    7608:	b.cc	75d4 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x7c>  // b.lo, b.ul, b.last
    760c:	mov	x19, #0x0                   	// #0
    7610:	ldr	x0, [sp, #64]
    7614:	add	x23, x23, #0x10
    7618:	cmp	x0, x23
    761c:	b.eq	7624 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xcc>  // b.none
    7620:	bl	0 <free>
    7624:	mov	x0, x19
    7628:	ldp	x19, x20, [sp, #16]
    762c:	ldp	x21, x22, [sp, #32]
    7630:	ldr	x23, [sp, #48]
    7634:	ldp	x29, x30, [sp], #208
    7638:	ret
    763c:	ldr	x0, [sp, #64]
    7640:	mov	x1, x19
    7644:	bl	73c8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    7648:	mov	x19, x0
    764c:	b	7610 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xb8>
    7650:	mov	x1, x3
    7654:	mov	x0, x23
    7658:	mov	x3, #0x8                   	// #8
    765c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7660:	ldr	w0, [sp, #76]
    7664:	cmp	x19, x0
    7668:	b.hi	76c0 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x168>  // b.pmore
    766c:	ldr	x0, [sp, #64]
    7670:	mov	w21, w19
    7674:	str	w19, [sp, #72]
    7678:	add	x2, x0, x19, lsl #3
    767c:	b	75b0 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x58>
    7680:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7684:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7688:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    768c:	add	x3, x3, #0x0
    7690:	add	x1, x1, #0x0
    7694:	add	x0, x0, #0x0
    7698:	mov	w2, #0xfa                  	// #250
    769c:	bl	0 <__assert_fail>
    76a0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    76a4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    76a8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    76ac:	add	x3, x3, #0x0
    76b0:	add	x1, x1, #0x0
    76b4:	add	x0, x0, #0x0
    76b8:	mov	w2, #0x95                  	// #149
    76bc:	bl	0 <__assert_fail>
    76c0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    76c4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    76c8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    76cc:	add	x3, x3, #0x0
    76d0:	add	x1, x1, #0x0
    76d4:	add	x0, x0, #0x0
    76d8:	mov	w2, #0x43                  	// #67
    76dc:	bl	0 <__assert_fail>

00000000000076e0 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE>:
    76e0:	stp	x29, x30, [sp, #-256]!
    76e4:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    76e8:	mov	x29, sp
    76ec:	stp	x23, x24, [sp, #48]
    76f0:	mov	x24, x0
    76f4:	ldr	d0, [x2]
    76f8:	add	x0, sp, #0x70
    76fc:	stp	x19, x20, [sp, #16]
    7700:	ldr	w20, [x24, #32]
    7704:	stp	x21, x22, [sp, #32]
    7708:	mov	x22, x1
    770c:	cmp	w20, #0x10
    7710:	stp	x25, x26, [sp, #64]
    7714:	mov	w19, w20
    7718:	mov	w25, w20
    771c:	stp	x27, x28, [sp, #80]
    7720:	str	x0, [sp, #104]
    7724:	add	x0, sp, #0x80
    7728:	str	x0, [sp, #112]
    772c:	str	d0, [sp, #120]
    7730:	b.hi	78a8 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1c8>  // b.pmore
    7734:	lsl	x2, x19, #3
    7738:	str	w20, [sp, #120]
    773c:	add	x1, x0, x2
    7740:	cmp	x0, x1
    7744:	b.eq	7750 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x70>  // b.none
    7748:	mov	w1, #0x0                   	// #0
    774c:	bl	0 <memset>
    7750:	cbz	w25, 78d4 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1f4>
    7754:	mov	w0, w25
    7758:	add	x1, x24, #0x28
    775c:	mov	x28, #0x0                   	// #0
    7760:	mov	x27, #0x0                   	// #0
    7764:	mov	x23, #0x0                   	// #0
    7768:	mov	w20, #0x0                   	// #0
    776c:	str	x1, [sp, #96]
    7770:	cmp	w0, w28
    7774:	b.ls	792c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x24c>  // b.plast
    7778:	ldr	x0, [sp, #96]
    777c:	lsl	x21, x28, #3
    7780:	ldr	x26, [x0, x28, lsl #3]
    7784:	cbz	x26, 791c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x23c>
    7788:	ldrb	w0, [x26, #8]
    778c:	cmp	w0, #0x15
    7790:	b.eq	7818 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x138>  // b.none
    7794:	ldr	x4, [x26]
    7798:	mov	x1, x22
    779c:	mov	x0, x26
    77a0:	ldr	x4, [x4, #96]
    77a4:	blr	x4
    77a8:	ldr	x4, [x0]
    77ac:	mov	w1, #0x0                   	// #0
    77b0:	ldr	x4, [x4, #104]
    77b4:	blr	x4
    77b8:	mov	x19, x0
    77bc:	cbz	x19, 78fc <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x21c>
    77c0:	ldrb	w0, [x19, #8]
    77c4:	cmp	w0, #0x18
    77c8:	b.ne	77e4 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x104>  // b.any
    77cc:	ldr	x1, [x22]
    77d0:	mov	x0, x22
    77d4:	ldr	x1, [x1, #24]
    77d8:	blr	x1
    77dc:	tst	w0, #0xff
    77e0:	csel	x19, x19, x26, eq  // eq = none
    77e4:	ldr	w1, [sp, #120]
    77e8:	cmp	x1, x28
    77ec:	b.ls	78dc <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1fc>  // b.plast
    77f0:	ldr	x0, [sp, #112]
    77f4:	cmp	x19, x26
    77f8:	cset	w2, ne  // ne = any
    77fc:	add	x28, x28, #0x1
    7800:	orr	w20, w20, w2
    7804:	cmp	w25, w28
    7808:	str	x19, [x0, x21]
    780c:	b.eq	7860 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x180>  // b.none
    7810:	ldr	w0, [x24, #32]
    7814:	b	7770 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x90>
    7818:	ldr	x19, [x26, #24]
    781c:	cmp	x19, x23
    7820:	b.eq	783c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x15c>  // b.none
    7824:	ldr	x3, [x19]
    7828:	mov	x1, x22
    782c:	mov	x0, x19
    7830:	ldr	x3, [x3, #96]
    7834:	blr	x3
    7838:	mov	x27, x0
    783c:	cbz	x27, 794c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x26c>
    7840:	ldr	x4, [x27]
    7844:	mov	x0, x27
    7848:	ldr	w1, [x26, #32]
    784c:	mov	x23, x19
    7850:	ldr	x4, [x4, #104]
    7854:	blr	x4
    7858:	mov	x19, x0
    785c:	b	77bc <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0xdc>
    7860:	ldr	x0, [sp, #112]
    7864:	cbz	w20, 7874 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x194>
    7868:	bl	73c8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    786c:	mov	x24, x0
    7870:	ldr	x0, [sp, #112]
    7874:	ldr	x1, [sp, #104]
    7878:	add	x27, x1, #0x10
    787c:	cmp	x0, x27
    7880:	b.eq	7888 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1a8>  // b.none
    7884:	bl	0 <free>
    7888:	mov	x0, x24
    788c:	ldp	x19, x20, [sp, #16]
    7890:	ldp	x21, x22, [sp, #32]
    7894:	ldp	x23, x24, [sp, #48]
    7898:	ldp	x25, x26, [sp, #64]
    789c:	ldp	x27, x28, [sp, #80]
    78a0:	ldp	x29, x30, [sp], #256
    78a4:	ret
    78a8:	mov	x1, x0
    78ac:	mov	x2, x19
    78b0:	ldr	x0, [sp, #104]
    78b4:	mov	x3, #0x8                   	// #8
    78b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    78bc:	ldr	w0, [sp, #124]
    78c0:	cmp	x19, x0
    78c4:	b.hi	796c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x28c>  // b.pmore
    78c8:	ldr	w25, [x24, #32]
    78cc:	ldr	x0, [sp, #112]
    78d0:	b	7734 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x54>
    78d4:	ldr	x0, [sp, #112]
    78d8:	b	7874 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x194>
    78dc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    78e0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    78e4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    78e8:	add	x3, x3, #0x0
    78ec:	add	x1, x1, #0x0
    78f0:	add	x0, x0, #0x0
    78f4:	mov	w2, #0x95                  	// #149
    78f8:	bl	0 <__assert_fail>
    78fc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7900:	add	x3, x3, #0x0
    7904:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7908:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    790c:	add	x1, x1, #0x0
    7910:	add	x0, x0, #0x0
    7914:	mov	w2, #0x69                  	// #105
    7918:	bl	0 <__assert_fail>
    791c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7920:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7924:	add	x3, x3, #0x0
    7928:	b	7908 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x228>
    792c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7930:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7934:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7938:	add	x3, x3, #0x0
    793c:	add	x1, x1, #0x0
    7940:	add	x0, x0, #0x0
    7944:	mov	w2, #0x22e                 	// #558
    7948:	bl	0 <__assert_fail>
    794c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7950:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7954:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7958:	add	x3, x3, #0x0
    795c:	add	x1, x1, #0x0
    7960:	add	x0, x0, #0x0
    7964:	mov	w2, #0x1b9                 	// #441
    7968:	bl	0 <__assert_fail>
    796c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7970:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7974:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7978:	add	x3, x3, #0x0
    797c:	add	x1, x1, #0x0
    7980:	add	x0, x0, #0x0
    7984:	mov	w2, #0x43                  	// #67
    7988:	bl	0 <__assert_fail>
    798c:	nop

0000000000007990 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE>:
    7990:	stp	x29, x30, [sp, #-240]!
    7994:	mov	x29, sp
    7998:	stp	x19, x20, [sp, #16]
    799c:	cbz	x1, 7b6c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x1dc>
    79a0:	mov	x20, x1
    79a4:	ldr	w1, [x1, #8]
    79a8:	cmp	w1, #0x3
    79ac:	b.eq	79cc <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x3c>  // b.none
    79b0:	cbnz	w1, 79e0 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x50>
    79b4:	ldr	x0, [x0, #24]
    79b8:	mov	x19, #0x0                   	// #0
    79bc:	cmp	x0, #0x1
    79c0:	b.hi	79d0 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>  // b.pmore
    79c4:	and	w0, w0, #0x1
    79c8:	bl	3010 <_ZN4llvm7BitInit3getEb>
    79cc:	mov	x19, x0
    79d0:	mov	x0, x19
    79d4:	ldp	x19, x20, [sp, #16]
    79d8:	ldp	x29, x30, [sp], #240
    79dc:	ret
    79e0:	cmp	w1, #0x1
    79e4:	mov	x19, #0x0                   	// #0
    79e8:	b.ne	79d0 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>  // b.any
    79ec:	stp	x21, x22, [sp, #32]
    79f0:	ldr	w22, [x20, #24]
    79f4:	stp	x23, x24, [sp, #48]
    79f8:	cmp	w22, #0x3f
    79fc:	ldr	x23, [x0, #24]
    7a00:	b.ls	7ae8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x158>  // b.plast
    7a04:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7a08:	stp	x25, x26, [sp, #64]
    7a0c:	add	x25, sp, #0x60
    7a10:	ldr	d0, [x0]
    7a14:	add	x0, x25, #0x10
    7a18:	str	x27, [sp, #80]
    7a1c:	mov	w21, w22
    7a20:	str	x0, [sp, #96]
    7a24:	cmp	x21, #0x10
    7a28:	str	d0, [sp, #104]
    7a2c:	mov	x26, x21
    7a30:	mov	w27, w22
    7a34:	b.hi	7b20 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x190>  // b.pmore
    7a38:	lsl	x2, x21, #3
    7a3c:	str	w22, [sp, #104]
    7a40:	add	x1, x0, x2
    7a44:	cmp	x0, x1
    7a48:	b.eq	7a54 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xc4>  // b.none
    7a4c:	mov	w1, #0x0                   	// #0
    7a50:	bl	0 <memset>
    7a54:	mov	w19, #0x0                   	// #0
    7a58:	mov	x24, #0x1                   	// #1
    7a5c:	cbnz	w27, 7a68 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xd8>
    7a60:	b	7aac <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x11c>
    7a64:	ldr	w21, [sp, #104]
    7a68:	cmp	w19, #0x3f
    7a6c:	mov	w0, #0x0                   	// #0
    7a70:	b.hi	7a80 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xf0>  // b.pmore
    7a74:	lsl	x0, x24, x19
    7a78:	tst	x0, x23
    7a7c:	cset	w0, ne  // ne = any
    7a80:	cmp	x21, w19, uxtw
    7a84:	mov	w21, w19
    7a88:	b.ls	7b4c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x1bc>  // b.plast
    7a8c:	ldr	x22, [sp, #96]
    7a90:	bl	3010 <_ZN4llvm7BitInit3getEb>
    7a94:	ldr	w1, [x20, #24]
    7a98:	add	w19, w19, #0x1
    7a9c:	str	x0, [x22, x21, lsl #3]
    7aa0:	cmp	w1, w19
    7aa4:	b.ne	7a64 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xd4>  // b.any
    7aa8:	ldr	w26, [sp, #104]
    7aac:	ldr	x0, [sp, #96]
    7ab0:	mov	x1, x26
    7ab4:	add	x25, x25, #0x10
    7ab8:	bl	73c8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    7abc:	mov	x19, x0
    7ac0:	ldr	x1, [sp, #96]
    7ac4:	cmp	x1, x25
    7ac8:	b.eq	7b0c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x17c>  // b.none
    7acc:	mov	x0, x1
    7ad0:	bl	0 <free>
    7ad4:	ldp	x21, x22, [sp, #32]
    7ad8:	ldp	x23, x24, [sp, #48]
    7adc:	ldp	x25, x26, [sp, #64]
    7ae0:	ldr	x27, [sp, #80]
    7ae4:	b	79d0 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>
    7ae8:	asr	x0, x23, x22
    7aec:	cbz	x0, 7a04 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x74>
    7af0:	sub	w0, w22, #0x1
    7af4:	asr	x0, x23, x0
    7af8:	cmn	x0, #0x1
    7afc:	b.eq	7a04 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x74>  // b.none
    7b00:	ldp	x21, x22, [sp, #32]
    7b04:	ldp	x23, x24, [sp, #48]
    7b08:	b	79d0 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>
    7b0c:	ldp	x21, x22, [sp, #32]
    7b10:	ldp	x23, x24, [sp, #48]
    7b14:	ldp	x25, x26, [sp, #64]
    7b18:	ldr	x27, [sp, #80]
    7b1c:	b	79d0 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x40>
    7b20:	mov	x1, x0
    7b24:	mov	x2, x21
    7b28:	mov	x0, x25
    7b2c:	mov	x3, #0x8                   	// #8
    7b30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7b34:	ldr	w0, [sp, #108]
    7b38:	cmp	x21, x0
    7b3c:	b.hi	7b9c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x20c>  // b.pmore
    7b40:	ldr	w27, [x20, #24]
    7b44:	ldr	x0, [sp, #96]
    7b48:	b	7a38 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xa8>
    7b4c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7b50:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7b54:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7b58:	add	x3, x3, #0x0
    7b5c:	add	x1, x1, #0x0
    7b60:	add	x0, x0, #0x0
    7b64:	mov	w2, #0x95                  	// #149
    7b68:	bl	0 <__assert_fail>
    7b6c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7b70:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7b74:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7b78:	add	x3, x3, #0x0
    7b7c:	add	x1, x1, #0x0
    7b80:	add	x0, x0, #0x0
    7b84:	mov	w2, #0x69                  	// #105
    7b88:	stp	x21, x22, [sp, #32]
    7b8c:	stp	x23, x24, [sp, #48]
    7b90:	stp	x25, x26, [sp, #64]
    7b94:	str	x27, [sp, #80]
    7b98:	bl	0 <__assert_fail>
    7b9c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7ba0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7ba4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7ba8:	add	x3, x3, #0x0
    7bac:	add	x1, x1, #0x0
    7bb0:	add	x0, x0, #0x0
    7bb4:	mov	w2, #0x43                  	// #67
    7bb8:	bl	0 <__assert_fail>
    7bbc:	nop

0000000000007bc0 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    7bc0:	stp	x29, x30, [sp, #-224]!
    7bc4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7bc8:	cmp	x2, #0x10
    7bcc:	mov	x29, sp
    7bd0:	ldr	d0, [x3]
    7bd4:	stp	x23, x24, [sp, #48]
    7bd8:	add	x24, sp, #0x50
    7bdc:	add	x3, x24, #0x10
    7be0:	stp	x19, x20, [sp, #16]
    7be4:	mov	x23, x0
    7be8:	mov	x20, x2
    7bec:	stp	x21, x22, [sp, #32]
    7bf0:	mov	x22, x1
    7bf4:	str	x25, [sp, #64]
    7bf8:	str	x3, [sp, #80]
    7bfc:	str	d0, [sp, #88]
    7c00:	b.hi	7cc8 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x108>  // b.pmore
    7c04:	str	w20, [sp, #88]
    7c08:	add	x2, x3, x2, lsl #3
    7c0c:	mov	x0, x3
    7c10:	mov	w21, w20
    7c14:	cmp	x2, x3
    7c18:	b.eq	7c28 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x68>  // b.none
    7c1c:	sub	x2, x2, x0
    7c20:	mov	w1, #0x0                   	// #0
    7c24:	bl	0 <memset>
    7c28:	cbz	w21, 7cb4 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf4>
    7c2c:	sub	w21, w21, #0x1
    7c30:	mov	x19, #0x0                   	// #0
    7c34:	b	7c70 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xb0>
    7c38:	ldr	x0, [x23, #24]
    7c3c:	ldr	w1, [sp, #88]
    7c40:	asr	x0, x0, x3
    7c44:	cmp	x1, x19
    7c48:	and	w0, w0, #0x1
    7c4c:	b.ls	7cf8 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x138>  // b.plast
    7c50:	ldr	x25, [sp, #80]
    7c54:	bl	3010 <_ZN4llvm7BitInit3getEb>
    7c58:	cmp	x21, x19
    7c5c:	str	x0, [x25, x19, lsl #3]
    7c60:	b.eq	7cb0 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf0>  // b.none
    7c64:	add	x19, x19, #0x1
    7c68:	cmp	x20, x19
    7c6c:	b.eq	7d18 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x158>  // b.none
    7c70:	ldr	w3, [x22, x19, lsl #2]
    7c74:	cmp	w3, #0x3f
    7c78:	b.ls	7c38 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x78>  // b.plast
    7c7c:	mov	x19, #0x0                   	// #0
    7c80:	ldr	x0, [sp, #80]
    7c84:	add	x24, x24, #0x10
    7c88:	cmp	x0, x24
    7c8c:	b.eq	7c94 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd4>  // b.none
    7c90:	bl	0 <free>
    7c94:	mov	x0, x19
    7c98:	ldp	x19, x20, [sp, #16]
    7c9c:	ldp	x21, x22, [sp, #32]
    7ca0:	ldp	x23, x24, [sp, #48]
    7ca4:	ldr	x25, [sp, #64]
    7ca8:	ldp	x29, x30, [sp], #224
    7cac:	ret
    7cb0:	ldr	w21, [sp, #88]
    7cb4:	ldr	x0, [sp, #80]
    7cb8:	mov	w1, w21
    7cbc:	bl	73c8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    7cc0:	mov	x19, x0
    7cc4:	b	7c80 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xc0>
    7cc8:	mov	x1, x3
    7ccc:	mov	x0, x24
    7cd0:	mov	x3, #0x8                   	// #8
    7cd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7cd8:	ldr	w0, [sp, #92]
    7cdc:	cmp	x20, x0
    7ce0:	b.hi	7d38 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x178>  // b.pmore
    7ce4:	ldr	x0, [sp, #80]
    7ce8:	mov	w21, w20
    7cec:	str	w20, [sp, #88]
    7cf0:	add	x2, x0, x20, lsl #3
    7cf4:	b	7c1c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x5c>
    7cf8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7cfc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7d00:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7d04:	add	x3, x3, #0x0
    7d08:	add	x1, x1, #0x0
    7d0c:	add	x0, x0, #0x0
    7d10:	mov	w2, #0x95                  	// #149
    7d14:	bl	0 <__assert_fail>
    7d18:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7d1c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7d20:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7d24:	add	x3, x3, #0x0
    7d28:	add	x1, x1, #0x0
    7d2c:	add	x0, x0, #0x0
    7d30:	mov	w2, #0xfa                  	// #250
    7d34:	bl	0 <__assert_fail>
    7d38:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7d3c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7d40:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7d44:	add	x3, x3, #0x0
    7d48:	add	x1, x1, #0x0
    7d4c:	add	x0, x0, #0x0
    7d50:	mov	w2, #0x43                  	// #67
    7d54:	bl	0 <__assert_fail>

0000000000007d58 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE>:
    7d58:	stp	x29, x30, [sp, #-48]!
    7d5c:	mov	x29, sp
    7d60:	stp	x19, x20, [sp, #16]
    7d64:	mov	x19, x0
    7d68:	ldr	x0, [x0, #16]
    7d6c:	cmp	x0, x1
    7d70:	b.eq	7dbc <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x64>  // b.none
    7d74:	ldr	x2, [x0]
    7d78:	mov	x20, x1
    7d7c:	ldr	x2, [x2, #32]
    7d80:	blr	x2
    7d84:	tst	w0, #0xff
    7d88:	b.ne	7dbc <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x64>  // b.any
    7d8c:	ldr	x0, [x19, #16]
    7d90:	cbz	x0, 7e00 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0xa8>
    7d94:	ldr	w0, [x0, #8]
    7d98:	cbnz	w0, 7dcc <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x74>
    7d9c:	cbz	x20, 7dfc <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0xa4>
    7da0:	ldr	w1, [x20, #8]
    7da4:	mov	x0, #0x0                   	// #0
    7da8:	cmp	w1, #0x1
    7dac:	b.eq	7ddc <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x84>  // b.none
    7db0:	ldp	x19, x20, [sp, #16]
    7db4:	ldp	x29, x30, [sp], #48
    7db8:	ret
    7dbc:	mov	x0, x19
    7dc0:	ldp	x19, x20, [sp, #16]
    7dc4:	ldp	x29, x30, [sp], #48
    7dc8:	ret
    7dcc:	mov	x0, #0x0                   	// #0
    7dd0:	ldp	x19, x20, [sp, #16]
    7dd4:	ldp	x29, x30, [sp], #48
    7dd8:	ret
    7ddc:	ldr	w1, [x20, #24]
    7de0:	cmp	w1, #0x1
    7de4:	b.ne	7db0 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x58>  // b.any
    7de8:	add	x0, sp, #0x28
    7dec:	mov	x1, #0x1                   	// #1
    7df0:	str	x19, [sp, #40]
    7df4:	bl	73c8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    7df8:	b	7db0 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x58>
    7dfc:	bl	4e8 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    7e00:	bl	608 <_ZN4llvm3isaINS_8BitRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    7e04:	nop

0000000000007e08 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>:
    7e08:	sub	sp, sp, #0x250
    7e0c:	stp	x29, x30, [sp]
    7e10:	mov	x29, sp
    7e14:	stp	x23, x24, [sp, #48]
    7e18:	mov	x24, x0
    7e1c:	cbz	x1, 7f8c <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x184>
    7e20:	ldr	x2, [x1]
    7e24:	mov	x0, x1
    7e28:	ldr	x1, [x24, #8]
    7e2c:	ldr	x2, [x2, #56]
    7e30:	and	x1, x1, #0xfffffffffffffff8
    7e34:	blr	x2
    7e38:	str	x0, [x24, #16]
    7e3c:	cbz	x0, 7e78 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x70>
    7e40:	ldrb	w1, [x0, #8]
    7e44:	stp	x19, x20, [sp, #16]
    7e48:	sub	w1, w1, #0x1
    7e4c:	ldr	x19, [x24, #8]
    7e50:	and	w1, w1, #0xff
    7e54:	cmp	w1, #0x16
    7e58:	and	x19, x19, #0xfffffffffffffff8
    7e5c:	b.ls	7f64 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x15c>  // b.plast
    7e60:	cbz	x19, 8010 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x208>
    7e64:	ldr	w1, [x19, #8]
    7e68:	ldr	x0, [x24, #16]
    7e6c:	cmp	w1, #0x1
    7e70:	b.eq	7e90 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x88>  // b.none
    7e74:	ldp	x19, x20, [sp, #16]
    7e78:	cmp	x0, #0x0
    7e7c:	cset	w0, eq  // eq = none
    7e80:	ldp	x29, x30, [sp]
    7e84:	ldp	x23, x24, [sp, #48]
    7e88:	add	sp, sp, #0x250
    7e8c:	ret
    7e90:	cbz	x0, 8008 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x200>
    7e94:	ldrb	w1, [x0, #8]
    7e98:	cmp	w1, #0x3
    7e9c:	b.eq	7e74 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x6c>  // b.none
    7ea0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7ea4:	stp	x21, x22, [sp, #32]
    7ea8:	add	x22, sp, #0x40
    7eac:	ldr	d0, [x0]
    7eb0:	add	x1, x22, #0x10
    7eb4:	ldr	w21, [x19, #24]
    7eb8:	str	x1, [sp, #64]
    7ebc:	str	d0, [sp, #72]
    7ec0:	cmp	w21, #0x40
    7ec4:	mov	w2, w21
    7ec8:	b.hi	7fcc <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1c4>  // b.pmore
    7ecc:	cbz	w21, 7fe0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1d8>
    7ed0:	add	x23, x22, #0x10
    7ed4:	mov	w19, #0x0                   	// #0
    7ed8:	ldr	x0, [x24, #16]
    7edc:	mov	w1, w19
    7ee0:	ldr	x2, [x0]
    7ee4:	ldr	x2, [x2, #104]
    7ee8:	blr	x2
    7eec:	mov	x20, x0
    7ef0:	ldp	w1, w0, [sp, #72]
    7ef4:	cmp	w1, w0
    7ef8:	b.cs	7fa4 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x19c>  // b.hs, b.nlast
    7efc:	ldr	x0, [sp, #64]
    7f00:	str	x20, [x0, w1, uxtw #3]
    7f04:	ldp	w1, w0, [sp, #72]
    7f08:	mov	w2, w1
    7f0c:	add	x2, x2, #0x1
    7f10:	cmp	x2, x0
    7f14:	b.hi	7fe8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1e0>  // b.pmore
    7f18:	add	w1, w1, #0x1
    7f1c:	str	w1, [sp, #72]
    7f20:	add	w19, w19, #0x1
    7f24:	cmp	w19, w21
    7f28:	b.ne	7ed8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xd0>  // b.any
    7f2c:	ldr	x0, [sp, #64]
    7f30:	mov	w1, w1
    7f34:	add	x22, x22, #0x10
    7f38:	bl	73c8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    7f3c:	str	x0, [x24, #16]
    7f40:	ldr	x1, [sp, #64]
    7f44:	cmp	x1, x22
    7f48:	b.eq	7fc0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1b8>  // b.none
    7f4c:	mov	x0, x1
    7f50:	bl	0 <free>
    7f54:	ldr	x0, [x24, #16]
    7f58:	ldp	x19, x20, [sp, #16]
    7f5c:	ldp	x21, x22, [sp, #32]
    7f60:	b	7e78 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x70>
    7f64:	ldr	x0, [x0, #16]
    7f68:	mov	x1, x19
    7f6c:	ldr	x2, [x0]
    7f70:	ldr	x2, [x2, #32]
    7f74:	blr	x2
    7f78:	tst	w0, #0xff
    7f7c:	b.eq	8018 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x210>  // b.none
    7f80:	ldr	x19, [x24, #8]
    7f84:	and	x19, x19, #0xfffffffffffffff8
    7f88:	b	7e60 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x58>
    7f8c:	str	xzr, [x24, #16]
    7f90:	mov	w0, #0x0                   	// #0
    7f94:	ldp	x29, x30, [sp]
    7f98:	ldp	x23, x24, [sp, #48]
    7f9c:	add	sp, sp, #0x250
    7fa0:	ret
    7fa4:	mov	x1, x23
    7fa8:	mov	x0, x22
    7fac:	mov	x3, #0x8                   	// #8
    7fb0:	mov	x2, #0x0                   	// #0
    7fb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7fb8:	ldr	w1, [sp, #72]
    7fbc:	b	7efc <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xf4>
    7fc0:	ldp	x19, x20, [sp, #16]
    7fc4:	ldp	x21, x22, [sp, #32]
    7fc8:	b	7e78 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x70>
    7fcc:	mov	x0, x22
    7fd0:	mov	x3, #0x8                   	// #8
    7fd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7fd8:	ldr	w21, [x19, #24]
    7fdc:	b	7ecc <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xc4>
    7fe0:	ldr	w1, [sp, #72]
    7fe4:	b	7f2c <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x124>
    7fe8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7fec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7ff0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    7ff4:	add	x3, x3, #0x0
    7ff8:	add	x1, x1, #0x0
    7ffc:	add	x0, x0, #0x0
    8000:	mov	w2, #0x43                  	// #67
    8004:	bl	0 <__assert_fail>
    8008:	stp	x21, x22, [sp, #32]
    800c:	bl	6d0 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    8010:	stp	x21, x22, [sp, #32]
    8014:	bl	4e8 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    8018:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    801c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8020:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8024:	add	x3, x3, #0x0
    8028:	add	x1, x1, #0x0
    802c:	add	x0, x0, #0x0
    8030:	mov	w2, #0x7f4                 	// #2036
    8034:	stp	x21, x22, [sp, #32]
    8038:	bl	0 <__assert_fail>
    803c:	nop

0000000000008040 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>:
    8040:	stp	x29, x30, [sp, #-32]!
    8044:	tst	x2, #0x7
    8048:	mov	x29, sp
    804c:	str	x19, [sp, #16]
    8050:	stp	x1, xzr, [x0]
    8054:	b.ne	8094 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x54>  // b.any
    8058:	and	w3, w3, #0xff
    805c:	and	x2, x2, #0xfffffffffffffffb
    8060:	mov	x19, x0
    8064:	ubfiz	x3, x3, #2, #8
    8068:	orr	x2, x2, x3
    806c:	str	x2, [x0, #8]
    8070:	bl	2f78 <_ZN4llvm9UnsetInit3getEv>
    8074:	mov	x1, x0
    8078:	mov	x0, x19
    807c:	bl	7e08 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    8080:	ldr	x0, [x19, #16]
    8084:	cbz	x0, 80b4 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x74>
    8088:	ldr	x19, [sp, #16]
    808c:	ldp	x29, x30, [sp], #32
    8090:	ret
    8094:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8098:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    809c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    80a0:	add	x3, x3, #0x0
    80a4:	add	x1, x1, #0x0
    80a8:	add	x0, x0, #0x0
    80ac:	mov	w2, #0xb2                  	// #178
    80b0:	bl	0 <__assert_fail>
    80b4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    80b8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    80bc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    80c0:	add	x3, x3, #0x0
    80c4:	add	x1, x1, #0x0
    80c8:	add	x0, x0, #0x0
    80cc:	mov	w2, #0x7e9                 	// #2025
    80d0:	bl	0 <__assert_fail>
    80d4:	nop

00000000000080d8 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>:
    80d8:	sub	sp, sp, #0x2d0
    80dc:	mov	w3, #0x18                  	// #24
    80e0:	stp	x29, x30, [sp]
    80e4:	mov	x29, sp
    80e8:	stp	x19, x20, [sp, #16]
    80ec:	mov	x20, x0
    80f0:	stp	x21, x22, [sp, #32]
    80f4:	ldr	w21, [x0, #80]
    80f8:	ldr	x19, [x0, #72]
    80fc:	stp	x23, x24, [sp, #48]
    8100:	mov	x23, x1
    8104:	umaddl	x21, w21, w3, x19
    8108:	cmp	x21, x19
    810c:	b.eq	8160 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x88>  // b.none
    8110:	mov	x22, x2
    8114:	stp	x25, x26, [sp, #64]
    8118:	cmp	x22, x19
    811c:	b.eq	8150 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x78>  // b.none
    8120:	ldr	x0, [x19, #16]
    8124:	cbz	x0, 8150 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x78>
    8128:	ldr	x2, [x0]
    812c:	mov	x1, x23
    8130:	ldr	x2, [x2, #96]
    8134:	blr	x2
    8138:	mov	x25, x0
    813c:	mov	x1, x25
    8140:	mov	x0, x19
    8144:	bl	7e08 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    8148:	tst	w0, #0xff
    814c:	b.ne	81a4 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xcc>  // b.any
    8150:	add	x19, x19, #0x18
    8154:	cmp	x21, x19
    8158:	b.ne	8118 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x40>  // b.any
    815c:	ldp	x25, x26, [sp, #64]
    8160:	mov	x1, x23
    8164:	ldr	x19, [x20]
    8168:	mov	x0, x19
    816c:	ldr	x2, [x19]
    8170:	ldr	x2, [x2, #96]
    8174:	blr	x2
    8178:	mov	x1, x0
    817c:	cmp	x0, x19
    8180:	b.eq	818c <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xb4>  // b.none
    8184:	mov	x0, x20
    8188:	bl	4200 <_ZN4llvm6Record7setNameEPNS_4InitE>
    818c:	ldp	x29, x30, [sp]
    8190:	ldp	x19, x20, [sp, #16]
    8194:	ldp	x21, x22, [sp, #32]
    8198:	ldp	x23, x24, [sp, #48]
    819c:	add	sp, sp, #0x2d0
    81a0:	ret
    81a4:	stp	x27, x28, [sp, #80]
    81a8:	add	x28, sp, #0x250
    81ac:	add	x0, x28, #0x10
    81b0:	str	x0, [sp, #592]
    81b4:	str	xzr, [sp, #600]
    81b8:	strb	wzr, [sp, #608]
    81bc:	cbz	x25, 84ac <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x3d4>
    81c0:	ldrb	w0, [x25, #8]
    81c4:	sub	w0, w0, #0x1
    81c8:	and	w0, w0, #0xff
    81cc:	cmp	w0, #0x16
    81d0:	b.ls	83e8 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x310>  // b.plast
    81d4:	add	x22, sp, #0x290
    81d8:	add	x24, sp, #0x270
    81dc:	add	x21, sp, #0x2b0
    81e0:	add	x26, sp, #0x1f0
    81e4:	add	x27, sp, #0x208
    81e8:	add	x23, sp, #0x220
    81ec:	add	x0, sp, #0x238
    81f0:	str	x0, [sp, #96]
    81f4:	ldr	w6, [x20, #16]
    81f8:	add	x2, sp, #0xb8
    81fc:	ldr	x7, [x20, #8]
    8200:	add	x4, sp, #0xd0
    8204:	mov	x0, x2
    8208:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    820c:	add	x1, x1, #0x0
    8210:	stp	x4, x2, [sp, #104]
    8214:	add	x20, sp, #0xe8
    8218:	stp	x7, x6, [sp, #160]
    821c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8220:	mov	x1, x28
    8224:	ldr	x4, [sp, #104]
    8228:	mov	x28, x4
    822c:	mov	x0, x4
    8230:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8234:	ldr	x2, [sp, #112]
    8238:	mov	x8, x20
    823c:	mov	x1, x28
    8240:	add	x28, sp, #0x100
    8244:	mov	x0, x2
    8248:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    824c:	add	x11, sp, #0x118
    8250:	mov	x0, x28
    8254:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8258:	add	x1, x1, #0x0
    825c:	str	x11, [sp, #104]
    8260:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8264:	ldr	x11, [sp, #104]
    8268:	mov	x1, x28
    826c:	mov	x0, x20
    8270:	str	x11, [sp, #152]
    8274:	mov	x8, x11
    8278:	add	x28, sp, #0x1a8
    827c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8280:	add	x20, sp, #0x1d8
    8284:	ldr	x0, [x19]
    8288:	add	x2, sp, #0x1c0
    828c:	add	x5, sp, #0x190
    8290:	add	x4, sp, #0x178
    8294:	add	x10, sp, #0x160
    8298:	add	x9, sp, #0x148
    829c:	ldr	x1, [x0]
    82a0:	add	x12, sp, #0x130
    82a4:	stp	x12, x2, [sp, #104]
    82a8:	mov	x8, x24
    82ac:	ldr	x1, [x1, #48]
    82b0:	stp	x5, x4, [sp, #120]
    82b4:	stp	x10, x9, [sp, #136]
    82b8:	blr	x1
    82bc:	ldr	x12, [sp, #104]
    82c0:	mov	x1, x24
    82c4:	mov	x0, x12
    82c8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    82cc:	ldp	x9, x11, [sp, #144]
    82d0:	ldr	x0, [sp, #104]
    82d4:	mov	x1, x0
    82d8:	mov	x24, x9
    82dc:	mov	x8, x9
    82e0:	mov	x0, x11
    82e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    82e8:	ldr	x10, [sp, #136]
    82ec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    82f0:	add	x1, x1, #0x0
    82f4:	str	x10, [sp, #104]
    82f8:	mov	x0, x10
    82fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8300:	ldr	x4, [sp, #128]
    8304:	ldr	x0, [sp, #104]
    8308:	mov	x8, x4
    830c:	mov	x1, x0
    8310:	mov	x0, x24
    8314:	mov	x24, x4
    8318:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    831c:	ldr	x0, [x19, #8]
    8320:	mov	x8, x22
    8324:	and	x0, x0, #0xfffffffffffffff8
    8328:	ldr	x1, [x0]
    832c:	ldr	x1, [x1, #16]
    8330:	blr	x1
    8334:	ldr	x5, [sp, #120]
    8338:	mov	x1, x22
    833c:	mov	x0, x5
    8340:	mov	x22, x5
    8344:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8348:	mov	x8, x28
    834c:	mov	x1, x22
    8350:	mov	x0, x24
    8354:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8358:	ldr	x2, [sp, #112]
    835c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8360:	add	x1, x1, #0x0
    8364:	mov	x22, x2
    8368:	mov	x0, x2
    836c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8370:	mov	x1, x22
    8374:	mov	x0, x28
    8378:	mov	x8, x20
    837c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8380:	ldr	x1, [x25]
    8384:	mov	x8, x21
    8388:	mov	x0, x25
    838c:	ldr	x1, [x1, #48]
    8390:	blr	x1
    8394:	mov	x1, x21
    8398:	mov	x0, x26
    839c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    83a0:	mov	x8, x27
    83a4:	mov	x1, x26
    83a8:	mov	x0, x20
    83ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    83b0:	mov	x0, x23
    83b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    83b8:	add	x1, x1, #0x0
    83bc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    83c0:	ldr	x19, [sp, #96]
    83c4:	mov	x1, x23
    83c8:	mov	x0, x27
    83cc:	mov	x8, x19
    83d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    83d4:	ldp	x7, x6, [sp, #160]
    83d8:	mov	x2, x19
    83dc:	mov	x0, x7
    83e0:	mov	x1, x6
    83e4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    83e8:	add	x26, sp, #0x1f0
    83ec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    83f0:	mov	x0, x26
    83f4:	add	x1, x1, #0x0
    83f8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    83fc:	add	x22, sp, #0x290
    8400:	ldr	x0, [x25, #16]
    8404:	add	x1, sp, #0x238
    8408:	str	x1, [sp, #96]
    840c:	mov	x8, x22
    8410:	add	x27, sp, #0x208
    8414:	add	x23, sp, #0x220
    8418:	ldr	x1, [x0]
    841c:	add	x24, sp, #0x270
    8420:	add	x21, sp, #0x2b0
    8424:	ldr	x1, [x1, #16]
    8428:	blr	x1
    842c:	mov	x1, x22
    8430:	mov	x0, x27
    8434:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8438:	mov	x8, x23
    843c:	mov	x1, x27
    8440:	mov	x0, x26
    8444:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8448:	ldr	x0, [sp, #96]
    844c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8450:	add	x1, x1, #0x0
    8454:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8458:	ldr	x1, [sp, #96]
    845c:	mov	x0, x23
    8460:	mov	x8, x24
    8464:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8468:	mov	x8, x21
    846c:	mov	x0, x24
    8470:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    8474:	mov	x1, x21
    8478:	mov	x0, x28
    847c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
    8480:	ldr	x0, [sp, #688]
    8484:	add	x1, x21, #0x10
    8488:	cmp	x0, x1
    848c:	b.eq	8494 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x3bc>  // b.none
    8490:	bl	0 <_ZdlPv>
    8494:	ldr	x0, [sp, #656]
    8498:	add	x1, x22, #0x10
    849c:	cmp	x0, x1
    84a0:	b.eq	81f4 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x11c>  // b.none
    84a4:	bl	0 <_ZdlPv>
    84a8:	b	81f4 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x11c>
    84ac:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    84b0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    84b4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    84b8:	add	x3, x3, #0x0
    84bc:	add	x1, x1, #0x0
    84c0:	add	x0, x0, #0x0
    84c4:	mov	w2, #0x69                  	// #105
    84c8:	bl	0 <__assert_fail>
    84cc:	nop

00000000000084d0 <_ZN4llvm6Record17resolveReferencesEv>:
    84d0:	stp	x29, x30, [sp, #-144]!
    84d4:	mov	x3, #0x400000000           	// #17179869184
    84d8:	mov	w4, #0x1                   	// #1
    84dc:	mov	x29, sp
    84e0:	stp	x19, x20, [sp, #16]
    84e4:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    84e8:	add	x1, sp, #0x28
    84ec:	ldr	x19, [x19]
    84f0:	add	x20, x1, #0x48
    84f4:	mov	x2, #0x0                   	// #0
    84f8:	strb	w4, [sp, #56]
    84fc:	add	x19, x19, #0x10
    8500:	stp	x19, x0, [sp, #40]
    8504:	stp	xzr, xzr, [sp, #64]
    8508:	str	xzr, [sp, #80]
    850c:	str	wzr, [sp, #88]
    8510:	stp	x20, x3, [sp, #96]
    8514:	bl	80d8 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    8518:	ldr	x0, [sp, #96]
    851c:	str	x19, [sp, #40]
    8520:	cmp	x0, x20
    8524:	b.eq	852c <_ZN4llvm6Record17resolveReferencesEv+0x5c>  // b.none
    8528:	bl	0 <free>
    852c:	ldr	x0, [sp, #72]
    8530:	ldr	w1, [sp, #88]
    8534:	lsl	x1, x1, #4
    8538:	bl	0 <_ZdlPvm>
    853c:	ldp	x19, x20, [sp, #16]
    8540:	ldp	x29, x30, [sp], #144
    8544:	ret

0000000000008548 <_ZN4llvm6Record19resolveReferencesToEPKNS_9RecordValE>:
    8548:	stp	x29, x30, [sp, #-48]!
    854c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8550:	mov	x2, x1
    8554:	mov	x29, sp
    8558:	ldr	x3, [x3]
    855c:	add	x1, sp, #0x10
    8560:	strb	wzr, [sp, #32]
    8564:	add	x3, x3, #0x10
    8568:	stp	x3, x0, [sp, #16]
    856c:	str	x2, [sp, #40]
    8570:	bl	80d8 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    8574:	ldp	x29, x30, [sp], #48
    8578:	ret
    857c:	nop

0000000000008580 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>:
    8580:	stp	x29, x30, [sp, #-240]!
    8584:	mov	x29, sp
    8588:	stp	x19, x20, [sp, #16]
    858c:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8590:	stp	x23, x24, [sp, #48]
    8594:	add	x24, x19, #0x0
    8598:	and	w23, w0, #0xff
    859c:	add	x20, x24, #0x1e8
    85a0:	stp	x21, x22, [sp, #32]
    85a4:	mov	x21, x1
    85a8:	mov	x22, x2
    85ac:	ldarb	w0, [x20]
    85b0:	tbz	w0, #0, 8640 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xc0>
    85b4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    85b8:	add	x20, x19, #0x0
    85bc:	add	x19, sp, #0x60
    85c0:	mov	w1, w23
    85c4:	ldr	d0, [x0]
    85c8:	add	x2, x19, #0x10
    85cc:	mov	x0, x19
    85d0:	str	x2, [sp, #96]
    85d4:	add	x24, x20, #0x1f0
    85d8:	str	d0, [sp, #104]
    85dc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    85e0:	mov	x1, x21
    85e4:	mov	x0, x19
    85e8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    85ec:	mov	x1, x22
    85f0:	mov	x0, x19
    85f4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    85f8:	str	xzr, [sp, #88]
    85fc:	mov	x0, x24
    8600:	mov	x1, x19
    8604:	add	x2, sp, #0x58
    8608:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    860c:	cbz	x0, 8698 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x118>
    8610:	sub	x20, x0, #0x18
    8614:	ldr	x0, [sp, #96]
    8618:	add	x19, x19, #0x10
    861c:	cmp	x0, x19
    8620:	b.eq	8628 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xa8>  // b.none
    8624:	bl	0 <free>
    8628:	mov	x0, x20
    862c:	ldp	x19, x20, [sp, #16]
    8630:	ldp	x21, x22, [sp, #32]
    8634:	ldp	x23, x24, [sp, #48]
    8638:	ldp	x29, x30, [sp], #240
    863c:	ret
    8640:	mov	x0, x20
    8644:	bl	0 <__cxa_guard_acquire>
    8648:	cbz	w0, 85b4 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x34>
    864c:	str	x25, [sp, #64]
    8650:	add	x25, x24, #0x1f0
    8654:	mov	x0, x25
    8658:	mov	w1, #0x6                   	// #6
    865c:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    8660:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8664:	mov	x0, x20
    8668:	ldr	x1, [x1]
    866c:	add	x1, x1, #0x10
    8670:	str	x1, [x24, #496]
    8674:	bl	0 <__cxa_guard_release>
    8678:	mov	x1, x25
    867c:	adrp	x2, 0 <__dso_handle>
    8680:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8684:	add	x2, x2, #0x0
    8688:	add	x0, x0, #0x0
    868c:	bl	0 <__cxa_atexit>
    8690:	ldr	x25, [sp, #64]
    8694:	b	85b4 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x34>
    8698:	add	x0, x20, #0xa0
    869c:	mov	w2, #0x4                   	// #4
    86a0:	mov	x1, #0x28                  	// #40
    86a4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    86a8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    86ac:	mov	x20, x0
    86b0:	ldr	x2, [sp, #88]
    86b4:	mov	w3, #0xd                   	// #13
    86b8:	ldr	x1, [x1]
    86bc:	strb	w3, [x20, #8]
    86c0:	strb	w23, [x20, #9]
    86c4:	mov	x0, x24
    86c8:	add	x1, x1, #0x10
    86cc:	str	x1, [x20]
    86d0:	stp	x22, xzr, [x20, #16]
    86d4:	add	x1, x20, #0x18
    86d8:	str	x21, [x20, #32]
    86dc:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    86e0:	b	8614 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x94>
    86e4:	nop

00000000000086e8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>:
    86e8:	stp	x29, x30, [sp, #-224]!
    86ec:	mov	x29, sp
    86f0:	stp	x19, x20, [sp, #16]
    86f4:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    86f8:	stp	x23, x24, [sp, #48]
    86fc:	add	x23, x19, #0x0
    8700:	add	x20, x23, #0x208
    8704:	stp	x21, x22, [sp, #32]
    8708:	mov	x22, x0
    870c:	mov	x21, x1
    8710:	ldarb	w0, [x20]
    8714:	tbz	w0, #0, 8798 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0xb0>
    8718:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    871c:	add	x20, sp, #0x50
    8720:	add	x2, x20, #0x10
    8724:	mov	x1, x22
    8728:	ldr	d0, [x0]
    872c:	add	x19, x19, #0x0
    8730:	mov	x0, x20
    8734:	str	x2, [sp, #80]
    8738:	add	x23, x19, #0x210
    873c:	str	d0, [sp, #88]
    8740:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8744:	mov	x1, x21
    8748:	mov	x0, x20
    874c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8750:	str	xzr, [sp, #72]
    8754:	mov	x0, x23
    8758:	mov	x1, x20
    875c:	add	x2, sp, #0x48
    8760:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    8764:	cbz	x0, 87e8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x100>
    8768:	sub	x19, x0, #0x18
    876c:	ldr	x0, [sp, #80]
    8770:	add	x20, x20, #0x10
    8774:	cmp	x0, x20
    8778:	b.eq	8780 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x98>  // b.none
    877c:	bl	0 <free>
    8780:	mov	x0, x19
    8784:	ldp	x19, x20, [sp, #16]
    8788:	ldp	x21, x22, [sp, #32]
    878c:	ldp	x23, x24, [sp, #48]
    8790:	ldp	x29, x30, [sp], #224
    8794:	ret
    8798:	mov	x0, x20
    879c:	bl	0 <__cxa_guard_acquire>
    87a0:	cbz	w0, 8718 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x30>
    87a4:	add	x24, x23, #0x210
    87a8:	mov	w1, #0x6                   	// #6
    87ac:	mov	x0, x24
    87b0:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    87b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    87b8:	mov	x0, x20
    87bc:	ldr	x1, [x1]
    87c0:	add	x1, x1, #0x10
    87c4:	str	x1, [x23, #528]
    87c8:	bl	0 <__cxa_guard_release>
    87cc:	mov	x1, x24
    87d0:	adrp	x2, 0 <__dso_handle>
    87d4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    87d8:	add	x2, x2, #0x0
    87dc:	add	x0, x0, #0x0
    87e0:	bl	0 <__cxa_atexit>
    87e4:	b	8718 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x30>
    87e8:	add	x0, x19, #0xa0
    87ec:	mov	w2, #0x4                   	// #4
    87f0:	mov	x1, #0x30                  	// #48
    87f4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    87f8:	mov	x19, x0
    87fc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8800:	adrp	x1, 3f8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x58>
    8804:	mov	w3, #0x11                  	// #17
    8808:	ldr	x0, [x0]
    880c:	strh	w3, [x19, #8]
    8810:	ldr	x2, [sp, #72]
    8814:	add	x0, x0, #0x10
    8818:	ldr	x1, [x1]
    881c:	str	x0, [x19]
    8820:	stp	x1, xzr, [x19, #16]
    8824:	mov	x0, x23
    8828:	add	x1, x19, #0x18
    882c:	stp	x22, x21, [x19, #32]
    8830:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    8834:	b	876c <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x84>

0000000000008838 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>:
    8838:	stp	x29, x30, [sp, #-240]!
    883c:	mov	x29, sp
    8840:	stp	x19, x20, [sp, #16]
    8844:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8848:	stp	x25, x26, [sp, #64]
    884c:	add	x25, x19, #0x0
    8850:	add	x20, x25, #0x228
    8854:	stp	x21, x22, [sp, #32]
    8858:	mov	x22, x1
    885c:	mov	x21, x2
    8860:	stp	x23, x24, [sp, #48]
    8864:	mov	x23, x3
    8868:	and	w24, w0, #0xff
    886c:	ldarb	w0, [x20]
    8870:	tbz	w0, #0, 8910 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xd8>
    8874:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8878:	add	x20, x19, #0x0
    887c:	add	x19, sp, #0x60
    8880:	mov	w1, w24
    8884:	ldr	d0, [x0]
    8888:	add	x2, x19, #0x10
    888c:	mov	x0, x19
    8890:	str	x2, [sp, #96]
    8894:	add	x25, x20, #0x230
    8898:	str	d0, [sp, #104]
    889c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    88a0:	mov	x1, x22
    88a4:	mov	x0, x19
    88a8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    88ac:	mov	x1, x21
    88b0:	mov	x0, x19
    88b4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    88b8:	mov	x1, x23
    88bc:	mov	x0, x19
    88c0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    88c4:	str	xzr, [sp, #88]
    88c8:	mov	x0, x25
    88cc:	mov	x1, x19
    88d0:	add	x2, sp, #0x58
    88d4:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    88d8:	cbz	x0, 8960 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x128>
    88dc:	sub	x20, x0, #0x18
    88e0:	ldr	x0, [sp, #96]
    88e4:	add	x19, x19, #0x10
    88e8:	cmp	x0, x19
    88ec:	b.eq	88f4 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xbc>  // b.none
    88f0:	bl	0 <free>
    88f4:	mov	x0, x20
    88f8:	ldp	x19, x20, [sp, #16]
    88fc:	ldp	x21, x22, [sp, #32]
    8900:	ldp	x23, x24, [sp, #48]
    8904:	ldp	x25, x26, [sp, #64]
    8908:	ldp	x29, x30, [sp], #240
    890c:	ret
    8910:	mov	x0, x20
    8914:	bl	0 <__cxa_guard_acquire>
    8918:	cbz	w0, 8874 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x3c>
    891c:	add	x26, x25, #0x230
    8920:	mov	w1, #0x6                   	// #6
    8924:	mov	x0, x26
    8928:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    892c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8930:	mov	x0, x20
    8934:	ldr	x1, [x1]
    8938:	add	x1, x1, #0x10
    893c:	str	x1, [x25, #560]
    8940:	bl	0 <__cxa_guard_release>
    8944:	mov	x1, x26
    8948:	adrp	x2, 0 <__dso_handle>
    894c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8950:	add	x2, x2, #0x0
    8954:	add	x0, x0, #0x0
    8958:	bl	0 <__cxa_atexit>
    895c:	b	8874 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x3c>
    8960:	add	x0, x20, #0xa0
    8964:	mov	w2, #0x4                   	// #4
    8968:	mov	x1, #0x30                  	// #48
    896c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8970:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8974:	mov	x20, x0
    8978:	ldr	x2, [sp, #88]
    897c:	mov	w3, #0xb                   	// #11
    8980:	ldr	x1, [x1]
    8984:	strb	w3, [x20, #8]
    8988:	strb	w24, [x20, #9]
    898c:	mov	x0, x25
    8990:	add	x1, x1, #0x10
    8994:	str	x1, [x20]
    8998:	stp	x23, xzr, [x20, #16]
    899c:	add	x1, x20, #0x18
    89a0:	stp	x22, x21, [x20, #32]
    89a4:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    89a8:	b	88e0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xa8>
    89ac:	nop

00000000000089b0 <_ZN4llvm9BinOpInit12getListSplatEPNS_9TypedInitEPNS_4InitE>:
    89b0:	mov	x3, x0
    89b4:	mov	x2, x1
    89b8:	mov	x1, x0
    89bc:	mov	w0, #0x8                   	// #8
    89c0:	ldr	x3, [x3, #16]
    89c4:	b	8838 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>

00000000000089c8 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE>:
    89c8:	stp	x29, x30, [sp, #-144]!
    89cc:	mov	x29, sp
    89d0:	ldr	x3, [x0, #16]
    89d4:	stp	x19, x20, [sp, #16]
    89d8:	cbz	x3, 8b00 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x138>
    89dc:	mov	x19, x0
    89e0:	ldr	w0, [x3, #8]
    89e4:	cmp	w0, #0x5
    89e8:	b.ne	8b0c <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x144>  // b.any
    89ec:	ldrb	w0, [x19, #8]
    89f0:	mov	x20, x1
    89f4:	cmp	w0, #0x9
    89f8:	b.eq	8a20 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x58>  // b.none
    89fc:	mov	x2, x20
    8a00:	mov	x1, x19
    8a04:	mov	w0, #0x7                   	// #7
    8a08:	bl	8838 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    8a0c:	mov	x19, x0
    8a10:	mov	x0, x19
    8a14:	ldp	x19, x20, [sp, #16]
    8a18:	ldp	x29, x30, [sp], #144
    8a1c:	ret
    8a20:	cbz	x1, 8b34 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x16c>
    8a24:	ldrb	w0, [x1, #8]
    8a28:	cmp	w0, #0x9
    8a2c:	b.ne	89fc <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x34>  // b.any
    8a30:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8a34:	ldr	w3, [x19, #32]
    8a38:	str	x23, [sp, #48]
    8a3c:	mov	x23, #0x28                  	// #40
    8a40:	ldr	d0, [x0]
    8a44:	add	x2, x19, x23
    8a48:	add	x3, x23, w3, uxtw #3
    8a4c:	stp	x21, x22, [sp, #32]
    8a50:	add	x22, sp, #0x40
    8a54:	add	x21, sp, #0x50
    8a58:	add	x3, x19, x3
    8a5c:	mov	x1, x21
    8a60:	mov	x0, x22
    8a64:	str	x21, [sp, #64]
    8a68:	str	d0, [sp, #72]
    8a6c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8a70:	ldr	w3, [x20, #32]
    8a74:	add	x2, x20, x23
    8a78:	ldr	w4, [sp, #72]
    8a7c:	mov	x0, x22
    8a80:	ldr	x1, [sp, #64]
    8a84:	add	x3, x23, w3, uxtw #3
    8a88:	add	x3, x20, x3
    8a8c:	add	x1, x1, x4, lsl #3
    8a90:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8a94:	ldr	x2, [x19, #16]
    8a98:	ldr	w1, [sp, #72]
    8a9c:	ldr	x0, [sp, #64]
    8aa0:	cbz	x2, 8b08 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x140>
    8aa4:	ldr	w3, [x2, #8]
    8aa8:	cmp	w3, #0x5
    8aac:	b.ne	8b40 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x178>  // b.any
    8ab0:	ldr	x2, [x2, #24]
    8ab4:	bl	6b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    8ab8:	mov	x19, x0
    8abc:	ldr	x1, [sp, #64]
    8ac0:	cmp	x1, x21
    8ac4:	b.eq	8ae8 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x120>  // b.none
    8ac8:	mov	x0, x1
    8acc:	bl	0 <free>
    8ad0:	mov	x0, x19
    8ad4:	ldp	x19, x20, [sp, #16]
    8ad8:	ldp	x21, x22, [sp, #32]
    8adc:	ldr	x23, [sp, #48]
    8ae0:	ldp	x29, x30, [sp], #144
    8ae4:	ret
    8ae8:	mov	x0, x19
    8aec:	ldp	x19, x20, [sp, #16]
    8af0:	ldp	x21, x22, [sp, #32]
    8af4:	ldr	x23, [sp, #48]
    8af8:	ldp	x29, x30, [sp], #144
    8afc:	ret
    8b00:	stp	x21, x22, [sp, #32]
    8b04:	str	x23, [sp, #48]
    8b08:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    8b0c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8b10:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8b14:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8b18:	add	x3, x3, #0x0
    8b1c:	add	x1, x1, #0x0
    8b20:	add	x0, x0, #0x0
    8b24:	mov	w2, #0x375                 	// #885
    8b28:	stp	x21, x22, [sp, #32]
    8b2c:	str	x23, [sp, #48]
    8b30:	bl	0 <__assert_fail>
    8b34:	stp	x21, x22, [sp, #32]
    8b38:	str	x23, [sp, #48]
    8b3c:	bl	748 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    8b40:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8b44:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8b48:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8b4c:	add	x3, x3, #0x0
    8b50:	add	x1, x1, #0x0
    8b54:	add	x0, x0, #0x0
    8b58:	mov	w2, #0x108                 	// #264
    8b5c:	bl	0 <__assert_fail>

0000000000008b60 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>:
    8b60:	stp	x29, x30, [sp, #-256]!
    8b64:	mov	x29, sp
    8b68:	stp	x19, x20, [sp, #16]
    8b6c:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8b70:	stp	x25, x26, [sp, #64]
    8b74:	add	x26, x19, #0x0
    8b78:	and	w25, w0, #0xff
    8b7c:	add	x20, x26, #0x248
    8b80:	stp	x21, x22, [sp, #32]
    8b84:	mov	x22, x2
    8b88:	mov	x21, x3
    8b8c:	stp	x23, x24, [sp, #48]
    8b90:	mov	x23, x1
    8b94:	mov	x24, x4
    8b98:	ldarb	w0, [x20]
    8b9c:	tbz	w0, #0, 8c48 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xe8>
    8ba0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8ba4:	add	x20, x19, #0x0
    8ba8:	add	x19, sp, #0x70
    8bac:	mov	w1, w25
    8bb0:	ldr	d0, [x0]
    8bb4:	add	x2, x19, #0x10
    8bb8:	mov	x0, x19
    8bbc:	str	x2, [sp, #112]
    8bc0:	add	x26, x20, #0x250
    8bc4:	str	d0, [sp, #120]
    8bc8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    8bcc:	mov	x1, x23
    8bd0:	mov	x0, x19
    8bd4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8bd8:	mov	x1, x22
    8bdc:	mov	x0, x19
    8be0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8be4:	mov	x1, x21
    8be8:	mov	x0, x19
    8bec:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8bf0:	mov	x1, x24
    8bf4:	mov	x0, x19
    8bf8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8bfc:	str	xzr, [sp, #104]
    8c00:	mov	x0, x26
    8c04:	mov	x1, x19
    8c08:	add	x2, sp, #0x68
    8c0c:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    8c10:	cbz	x0, 8ca0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x140>
    8c14:	sub	x20, x0, #0x18
    8c18:	ldr	x0, [sp, #112]
    8c1c:	add	x19, x19, #0x10
    8c20:	cmp	x0, x19
    8c24:	b.eq	8c2c <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xcc>  // b.none
    8c28:	bl	0 <free>
    8c2c:	mov	x0, x20
    8c30:	ldp	x19, x20, [sp, #16]
    8c34:	ldp	x21, x22, [sp, #32]
    8c38:	ldp	x23, x24, [sp, #48]
    8c3c:	ldp	x25, x26, [sp, #64]
    8c40:	ldp	x29, x30, [sp], #256
    8c44:	ret
    8c48:	mov	x0, x20
    8c4c:	bl	0 <__cxa_guard_acquire>
    8c50:	cbz	w0, 8ba0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x40>
    8c54:	str	x27, [sp, #80]
    8c58:	add	x27, x26, #0x250
    8c5c:	mov	x0, x27
    8c60:	mov	w1, #0x6                   	// #6
    8c64:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    8c68:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8c6c:	mov	x0, x20
    8c70:	ldr	x1, [x1]
    8c74:	add	x1, x1, #0x10
    8c78:	str	x1, [x26, #592]
    8c7c:	bl	0 <__cxa_guard_release>
    8c80:	mov	x1, x27
    8c84:	adrp	x2, 0 <__dso_handle>
    8c88:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8c8c:	add	x2, x2, #0x0
    8c90:	add	x0, x0, #0x0
    8c94:	bl	0 <__cxa_atexit>
    8c98:	ldr	x27, [sp, #80]
    8c9c:	b	8ba0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x40>
    8ca0:	add	x0, x20, #0xa0
    8ca4:	mov	w2, #0x4                   	// #4
    8ca8:	mov	x1, #0x38                  	// #56
    8cac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8cb0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8cb4:	mov	x20, x0
    8cb8:	ldr	x2, [sp, #104]
    8cbc:	mov	w3, #0xc                   	// #12
    8cc0:	ldr	x1, [x1]
    8cc4:	strb	w3, [x20, #8]
    8cc8:	strb	w25, [x20, #9]
    8ccc:	mov	x0, x26
    8cd0:	add	x1, x1, #0x10
    8cd4:	str	x1, [x20]
    8cd8:	stp	x24, xzr, [x20, #16]
    8cdc:	add	x1, x20, #0x18
    8ce0:	stp	x23, x22, [x20, #32]
    8ce4:	str	x21, [x20, #48]
    8ce8:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    8cec:	b	8c18 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xb8>

0000000000008cf0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE>:
    8cf0:	stp	x29, x30, [sp, #-176]!
    8cf4:	mov	x29, sp
    8cf8:	stp	x19, x20, [sp, #16]
    8cfc:	ldr	x19, [x0, #16]
    8d00:	stp	x21, x22, [sp, #32]
    8d04:	stp	x23, x24, [sp, #48]
    8d08:	stp	x25, x26, [sp, #64]
    8d0c:	stp	x1, x2, [sp, #80]
    8d10:	ldr	x23, [sp, #88]
    8d14:	cbz	x19, 8d98 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xa8>
    8d18:	mov	x20, x0
    8d1c:	mov	x21, x8
    8d20:	add	x25, x0, #0x8
    8d24:	cbz	x23, 8de0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xf0>
    8d28:	mov	x26, x1
    8d2c:	mov	x24, x25
    8d30:	ldp	x0, x22, [x19, #32]
    8d34:	cmp	x23, x22
    8d38:	b.cc	8ea4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1b4>  // b.lo, b.ul, b.last
    8d3c:	cbz	x22, 8eb4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1c4>
    8d40:	mov	x2, x22
    8d44:	mov	x1, x26
    8d48:	bl	0 <memcmp>
    8d4c:	cbnz	w0, 8ec8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1d8>
    8d50:	cmp	x23, x22
    8d54:	b.ne	8eb4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1c4>  // b.any
    8d58:	mov	x24, x19
    8d5c:	ldr	x19, [x19, #16]
    8d60:	cbnz	x19, 8d30 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x40>
    8d64:	cmp	x25, x24
    8d68:	b.eq	8d98 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xa8>  // b.none
    8d6c:	ldp	x1, x19, [x24, #32]
    8d70:	cmp	x23, x19
    8d74:	b.hi	8ed4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1e4>  // b.pmore
    8d78:	mov	x0, x26
    8d7c:	mov	x2, x23
    8d80:	bl	0 <memcmp>
    8d84:	cbnz	w0, 8ee8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1f8>
    8d88:	cmp	x23, x19
    8d8c:	b.eq	8e00 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x110>  // b.none
    8d90:	cmp	x23, x19
    8d94:	b.cs	8e00 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x110>  // b.hs, b.nlast
    8d98:	add	x2, sp, #0x50
    8d9c:	add	x21, sp, #0x68
    8da0:	mov	x0, x21
    8da4:	add	x20, sp, #0x80
    8da8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8dac:	add	x1, x1, #0x0
    8db0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8db4:	add	x19, sp, #0x98
    8db8:	mov	x0, x20
    8dbc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8dc0:	add	x1, x1, #0x0
    8dc4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8dc8:	mov	x1, x20
    8dcc:	mov	x8, x19
    8dd0:	mov	x0, x21
    8dd4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8dd8:	mov	x0, x19
    8ddc:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    8de0:	mov	x24, x19
    8de4:	ldr	x19, [x19, #16]
    8de8:	cbnz	x19, 8de0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xf0>
    8dec:	cmp	x25, x24
    8df0:	b.eq	8d98 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xa8>  // b.none
    8df4:	ldr	x19, [x24, #40]
    8df8:	cmp	x23, x19
    8dfc:	b.ne	8d90 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xa0>  // b.any
    8e00:	ldr	x19, [x24, #64]
    8e04:	cbz	x19, 8d98 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xa8>
    8e08:	ldr	x24, [x20, #72]
    8e0c:	stp	xzr, xzr, [x21]
    8e10:	add	x20, x20, #0x38
    8e14:	str	xzr, [x21, #16]
    8e18:	cmp	x20, x24
    8e1c:	b.eq	8e88 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x198>  // b.none
    8e20:	add	x23, sp, #0x98
    8e24:	mov	w22, #0x18                  	// #24
    8e28:	ldr	x0, [x24, #64]
    8e2c:	ldr	w3, [x0, #96]
    8e30:	ldr	x1, [x0, #88]
    8e34:	umaddl	x3, w3, w22, x1
    8e38:	cmp	x1, x3
    8e3c:	b.ne	8e50 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x160>  // b.any
    8e40:	b	8e74 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x184>
    8e44:	add	x1, x1, #0x18
    8e48:	cmp	x3, x1
    8e4c:	b.eq	8e74 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x184>  // b.none
    8e50:	ldr	x2, [x1]
    8e54:	cmp	x19, x2
    8e58:	b.ne	8e44 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x154>  // b.any
    8e5c:	ldp	x1, x2, [x21, #8]
    8e60:	str	x0, [sp, #152]
    8e64:	cmp	x1, x2
    8e68:	b.eq	8ef0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x200>  // b.none
    8e6c:	str	x0, [x1], #8
    8e70:	str	x1, [x21, #8]
    8e74:	mov	x0, x24
    8e78:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    8e7c:	mov	x24, x0
    8e80:	cmp	x20, x0
    8e84:	b.ne	8e28 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x138>  // b.any
    8e88:	mov	x0, x21
    8e8c:	ldp	x19, x20, [sp, #16]
    8e90:	ldp	x21, x22, [sp, #32]
    8e94:	ldp	x23, x24, [sp, #48]
    8e98:	ldp	x25, x26, [sp, #64]
    8e9c:	ldp	x29, x30, [sp], #176
    8ea0:	ret
    8ea4:	mov	x2, x23
    8ea8:	mov	x1, x26
    8eac:	bl	0 <memcmp>
    8eb0:	cbnz	w0, 8ec8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1d8>
    8eb4:	cmp	x23, x22
    8eb8:	b.ls	8d58 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x68>  // b.plast
    8ebc:	ldr	x19, [x19, #24]
    8ec0:	cbnz	x19, 8d30 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x40>
    8ec4:	b	8d64 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x74>
    8ec8:	tbz	w0, #31, 8d58 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x68>
    8ecc:	ldr	x19, [x19, #24]
    8ed0:	b	8ec0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1d0>
    8ed4:	cbz	x19, 8e00 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x110>
    8ed8:	mov	x0, x26
    8edc:	mov	x2, x19
    8ee0:	bl	0 <memcmp>
    8ee4:	cbz	w0, 8d90 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xa0>
    8ee8:	tbz	w0, #31, 8e00 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x110>
    8eec:	b	8d98 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xa8>
    8ef0:	mov	x2, x23
    8ef4:	mov	x0, x21
    8ef8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8efc:	b	8e74 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x184>

0000000000008f00 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev>:
    8f00:	stp	x29, x30, [sp, #-160]!
    8f04:	mov	x29, sp
    8f08:	stp	x21, x22, [sp, #32]
    8f0c:	mov	x21, x8
    8f10:	str	x27, [sp, #80]
    8f14:	mov	x27, x0
    8f18:	ldr	w0, [x0, #32]
    8f1c:	cmp	w0, #0x1
    8f20:	b.ne	8f4c <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x4c>  // b.any
    8f24:	ldr	x0, [x27, #40]
    8f28:	ldr	x0, [x0]
    8f2c:	ldr	x1, [x0]
    8f30:	ldr	x1, [x1, #48]
    8f34:	blr	x1
    8f38:	mov	x0, x21
    8f3c:	ldp	x21, x22, [sp, #32]
    8f40:	ldr	x27, [sp, #80]
    8f44:	ldp	x29, x30, [sp], #160
    8f48:	ret
    8f4c:	stp	x19, x20, [sp, #16]
    8f50:	add	x19, sp, #0x60
    8f54:	add	x4, x19, #0x10
    8f58:	mov	x0, x19
    8f5c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8f60:	adrp	x2, b90 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x8>
    8f64:	add	x1, x1, #0x0
    8f68:	add	x2, x2, #0x0
    8f6c:	mov	w3, #0x0                   	// #0
    8f70:	str	x4, [sp, #96]
    8f74:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8f78:	ldr	w22, [x27, #32]
    8f7c:	add	x0, x27, #0x28
    8f80:	add	x22, x0, x22, lsl #3
    8f84:	cmp	x22, x0
    8f88:	b.eq	9088 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x188>  // b.none
    8f8c:	add	x20, x27, #0x30
    8f90:	stp	x23, x24, [sp, #48]
    8f94:	add	x23, sp, #0x80
    8f98:	ldr	x27, [x27, #40]
    8f9c:	add	x24, x23, #0x10
    8fa0:	stp	x25, x26, [sp, #64]
    8fa4:	adrp	x26, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    8fa8:	add	x26, x26, #0x0
    8fac:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    8fb0:	ldr	x0, [x27]
    8fb4:	mov	x8, x23
    8fb8:	ldr	x1, [x0]
    8fbc:	ldr	x1, [x1, #48]
    8fc0:	blr	x1
    8fc4:	ldp	x1, x2, [sp, #128]
    8fc8:	mov	x0, x19
    8fcc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8fd0:	ldr	x0, [sp, #128]
    8fd4:	cmp	x0, x24
    8fd8:	b.eq	8fe0 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0xe0>  // b.none
    8fdc:	bl	0 <_ZdlPv>
    8fe0:	cmp	x22, x20
    8fe4:	ldr	x0, [sp, #104]
    8fe8:	b.eq	9010 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x110>  // b.none
    8fec:	sub	x0, x25, x0
    8ff0:	cmp	x0, #0x1
    8ff4:	b.ls	9098 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x198>  // b.plast
    8ff8:	mov	x1, x26
    8ffc:	mov	x0, x19
    9000:	mov	x2, #0x2                   	// #2
    9004:	ldr	x27, [x20], #8
    9008:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    900c:	b	8fb0 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0xb0>
    9010:	ldp	x23, x24, [sp, #48]
    9014:	ldp	x25, x26, [sp, #64]
    9018:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
    901c:	cmp	x0, x1
    9020:	b.eq	9090 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x190>  // b.none
    9024:	mov	x0, x19
    9028:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    902c:	mov	x2, #0x1                   	// #1
    9030:	add	x1, x1, #0x0
    9034:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9038:	add	x19, x19, #0x10
    903c:	ldr	x1, [sp, #96]
    9040:	add	x0, x21, #0x10
    9044:	str	x0, [x21]
    9048:	cmp	x1, x19
    904c:	b.eq	907c <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x17c>  // b.none
    9050:	ldr	x0, [sp, #112]
    9054:	str	x1, [x21]
    9058:	str	x0, [x21, #16]
    905c:	ldr	x0, [sp, #104]
    9060:	ldp	x19, x20, [sp, #16]
    9064:	str	x0, [x21, #8]
    9068:	mov	x0, x21
    906c:	ldp	x21, x22, [sp, #32]
    9070:	ldr	x27, [sp, #80]
    9074:	ldp	x29, x30, [sp], #160
    9078:	ret
    907c:	ldp	x0, x1, [sp, #112]
    9080:	stp	x0, x1, [x21, #16]
    9084:	b	905c <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x15c>
    9088:	ldr	x0, [sp, #104]
    908c:	b	9018 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x118>
    9090:	stp	x23, x24, [sp, #48]
    9094:	stp	x25, x26, [sp, #64]
    9098:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    909c:	add	x0, x0, #0x0
    90a0:	bl	0 <_ZSt20__throw_length_errorPKc>
    90a4:	nop

00000000000090a8 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev>:
    90a8:	stp	x29, x30, [sp, #-32]!
    90ac:	mov	x29, sp
    90b0:	ldr	x0, [x0, #24]
    90b4:	ldr	x0, [x0]
    90b8:	str	x19, [sp, #16]
    90bc:	cbz	x0, 913c <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x94>
    90c0:	ldrb	w1, [x0, #8]
    90c4:	cmp	w1, #0x12
    90c8:	b.ne	911c <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x74>  // b.any
    90cc:	ldr	x1, [x0, #24]
    90d0:	mov	x19, x8
    90d4:	add	x3, x8, #0x10
    90d8:	cbz	x1, 9104 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x5c>
    90dc:	ldr	x2, [x0, #32]
    90e0:	str	x3, [x8]
    90e4:	mov	x0, x8
    90e8:	mov	w3, #0x0                   	// #0
    90ec:	add	x2, x1, x2
    90f0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    90f4:	mov	x0, x19
    90f8:	ldr	x19, [sp, #16]
    90fc:	ldp	x29, x30, [sp], #32
    9100:	ret
    9104:	stp	x3, xzr, [x8]
    9108:	mov	x0, x19
    910c:	strb	wzr, [x8, #16]
    9110:	ldr	x19, [sp, #16]
    9114:	ldp	x29, x30, [sp], #32
    9118:	ret
    911c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9120:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9124:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9128:	add	x3, x3, #0x0
    912c:	add	x1, x1, #0x0
    9130:	add	x0, x0, #0x0
    9134:	mov	w2, #0x108                 	// #264
    9138:	bl	0 <__assert_fail>
    913c:	bl	680 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

0000000000009140 <_ZNK4llvm8DagRecTy11getAsStringB5cxx11Ev>:
    9140:	stp	x29, x30, [sp, #-32]!
    9144:	add	x4, x8, #0x10
    9148:	mov	x0, x8
    914c:	mov	x29, sp
    9150:	str	x19, [sp, #16]
    9154:	mov	w3, #0x0                   	// #0
    9158:	str	x4, [x8]
    915c:	mov	x19, x8
    9160:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9164:	adrp	x2, 25d8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x138>
    9168:	add	x1, x1, #0x0
    916c:	add	x2, x2, #0x0
    9170:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9174:	mov	x0, x19
    9178:	ldr	x19, [sp, #16]
    917c:	ldp	x29, x30, [sp], #32
    9180:	ret
    9184:	nop

0000000000009188 <_ZNK4llvm11StringRecTy11getAsStringB5cxx11Ev>:
    9188:	stp	x29, x30, [sp, #-32]!
    918c:	add	x4, x8, #0x10
    9190:	mov	x0, x8
    9194:	mov	x29, sp
    9198:	str	x19, [sp, #16]
    919c:	mov	w3, #0x0                   	// #0
    91a0:	str	x4, [x8]
    91a4:	mov	x19, x8
    91a8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    91ac:	adrp	x2, 25e0 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x140>
    91b0:	add	x1, x1, #0x0
    91b4:	add	x2, x2, #0x0
    91b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    91bc:	mov	x0, x19
    91c0:	ldr	x19, [sp, #16]
    91c4:	ldp	x29, x30, [sp], #32
    91c8:	ret
    91cc:	nop

00000000000091d0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0>:
    91d0:	stp	x29, x30, [sp, #-336]!
    91d4:	mov	x2, x1
    91d8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    91dc:	mov	x29, sp
    91e0:	stp	x19, x20, [sp, #16]
    91e4:	mov	x19, x0
    91e8:	add	x1, x1, #0x0
    91ec:	stp	x21, x22, [sp, #32]
    91f0:	ldr	w21, [x2, #16]
    91f4:	ldr	x22, [x2, #8]
    91f8:	str	x23, [sp, #48]
    91fc:	add	x23, sp, #0xf8
    9200:	mov	x0, x23
    9204:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9208:	ldr	x0, [x19, #32]
    920c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9210:	add	x1, x1, #0x0
    9214:	ldr	x2, [x0]
    9218:	ldr	x2, [x2, #48]
    921c:	cmp	x2, x1
    9220:	b.ne	945c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x28c>  // b.any
    9224:	ldr	x1, [x0, #24]
    9228:	cbz	x1, 92ac <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xdc>
    922c:	add	x20, sp, #0x130
    9230:	mov	w3, #0x0                   	// #0
    9234:	add	x4, x20, #0x10
    9238:	str	x4, [sp, #304]
    923c:	ldr	x2, [x0, #32]
    9240:	mov	x0, x20
    9244:	add	x2, x1, x2
    9248:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    924c:	ldrb	w1, [sp, #264]
    9250:	cbz	w1, 92c0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xf0>
    9254:	cmp	w1, #0x1
    9258:	b.eq	946c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x29c>  // b.none
    925c:	ldrb	w0, [sp, #265]
    9260:	cmp	w0, #0x1
    9264:	b.eq	94f4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x324>  // b.none
    9268:	mov	w1, #0x2                   	// #2
    926c:	mov	w2, #0x4                   	// #4
    9270:	add	x0, sp, #0x50
    9274:	stp	x23, x20, [sp, #80]
    9278:	strb	w1, [sp, #96]
    927c:	strb	w2, [sp, #97]
    9280:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9284:	tst	w0, #0xff
    9288:	b.ne	92cc <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xfc>  // b.any
    928c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9290:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9294:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9298:	add	x3, x3, #0x0
    929c:	add	x1, x1, #0x0
    92a0:	add	x0, x0, #0x0
    92a4:	mov	w2, #0xb8                  	// #184
    92a8:	bl	0 <__assert_fail>
    92ac:	add	x20, sp, #0x130
    92b0:	strb	wzr, [sp, #320]
    92b4:	add	x0, x20, #0x10
    92b8:	stp	x0, xzr, [sp, #304]
    92bc:	b	924c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x7c>
    92c0:	mov	w0, #0x100                 	// #256
    92c4:	stp	xzr, xzr, [sp, #80]
    92c8:	strh	w0, [sp, #96]
    92cc:	add	x20, sp, #0xe0
    92d0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    92d4:	mov	x0, x20
    92d8:	add	x1, x1, #0x0
    92dc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    92e0:	ldrb	w1, [sp, #96]
    92e4:	cbz	w1, 9344 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x174>
    92e8:	ldrb	w2, [sp, #240]
    92ec:	cbz	w2, 9344 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x174>
    92f0:	cmp	w1, #0x1
    92f4:	b.eq	947c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x2ac>  // b.none
    92f8:	cmp	w2, #0x1
    92fc:	b.eq	94b8 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x2e8>  // b.none
    9300:	ldrb	w0, [sp, #97]
    9304:	cmp	w0, #0x1
    9308:	b.eq	94e4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x314>  // b.none
    930c:	add	x3, sp, #0x50
    9310:	mov	w1, #0x2                   	// #2
    9314:	ldrb	w0, [sp, #241]
    9318:	cmp	w0, #0x1
    931c:	b.eq	950c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x33c>  // b.none
    9320:	mov	w2, #0x2                   	// #2
    9324:	add	x0, sp, #0x70
    9328:	stp	x3, x20, [sp, #112]
    932c:	strb	w1, [sp, #128]
    9330:	strb	w2, [sp, #129]
    9334:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9338:	tst	w0, #0xff
    933c:	b.ne	9350 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x180>  // b.any
    9340:	b	928c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xbc>
    9344:	mov	w0, #0x100                 	// #256
    9348:	stp	xzr, xzr, [sp, #112]
    934c:	strh	w0, [sp, #128]
    9350:	ldr	x0, [x19, #24]
    9354:	add	x19, sp, #0x110
    9358:	mov	x8, x19
    935c:	ldr	x1, [x0]
    9360:	ldr	x1, [x1, #40]
    9364:	blr	x1
    9368:	ldrb	w1, [sp, #128]
    936c:	cbz	w1, 93b0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x1e0>
    9370:	cmp	w1, #0x1
    9374:	b.eq	9490 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x2c0>  // b.none
    9378:	ldrb	w0, [sp, #129]
    937c:	cmp	w0, #0x1
    9380:	b.eq	94ec <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x31c>  // b.none
    9384:	add	x3, sp, #0x70
    9388:	mov	w1, #0x2                   	// #2
    938c:	mov	w2, #0x4                   	// #4
    9390:	add	x0, sp, #0x90
    9394:	stp	x3, x19, [sp, #144]
    9398:	strb	w1, [sp, #160]
    939c:	strb	w2, [sp, #161]
    93a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    93a4:	tst	w0, #0xff
    93a8:	b.ne	93bc <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x1ec>  // b.any
    93ac:	b	928c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xbc>
    93b0:	mov	w0, #0x100                 	// #256
    93b4:	stp	xzr, xzr, [sp, #144]
    93b8:	strh	w0, [sp, #160]
    93bc:	add	x19, sp, #0xc8
    93c0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    93c4:	mov	x0, x19
    93c8:	add	x1, x1, #0x0
    93cc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    93d0:	ldrb	w1, [sp, #160]
    93d4:	cbz	w1, 9440 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x270>
    93d8:	ldrb	w3, [sp, #216]
    93dc:	cbz	w3, 9440 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x270>
    93e0:	cmp	w1, #0x1
    93e4:	b.eq	94a0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x2d0>  // b.none
    93e8:	cmp	w3, #0x1
    93ec:	b.eq	94cc <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x2fc>  // b.none
    93f0:	ldrb	w0, [sp, #161]
    93f4:	cmp	w0, #0x1
    93f8:	b.eq	9504 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x334>  // b.none
    93fc:	add	x0, sp, #0x90
    9400:	mov	w1, #0x2                   	// #2
    9404:	ldrb	w2, [sp, #217]
    9408:	cmp	w2, #0x1
    940c:	b.eq	94fc <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x32c>  // b.none
    9410:	mov	w3, #0x2                   	// #2
    9414:	add	x2, sp, #0xb0
    9418:	str	x2, [sp, #72]
    941c:	stp	x0, x19, [sp, #176]
    9420:	mov	x0, x2
    9424:	strb	w1, [sp, #192]
    9428:	strb	w3, [sp, #193]
    942c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9430:	tst	w0, #0xff
    9434:	ldr	x2, [sp, #72]
    9438:	b.ne	9450 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x280>  // b.any
    943c:	b	928c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xbc>
    9440:	add	x2, sp, #0xb0
    9444:	mov	w0, #0x100                 	// #256
    9448:	stp	xzr, xzr, [sp, #176]
    944c:	strh	w0, [sp, #192]
    9450:	mov	x0, x22
    9454:	mov	x1, x21
    9458:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    945c:	add	x20, sp, #0x130
    9460:	mov	x8, x20
    9464:	blr	x2
    9468:	b	924c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x7c>
    946c:	mov	w0, #0x104                 	// #260
    9470:	stp	x20, xzr, [sp, #80]
    9474:	strh	w0, [sp, #96]
    9478:	b	92cc <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0xfc>
    947c:	ldp	x0, x1, [x20]
    9480:	stp	x0, x1, [sp, #112]
    9484:	ldr	x0, [x20, #16]
    9488:	str	x0, [sp, #128]
    948c:	b	9350 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x180>
    9490:	mov	w0, #0x104                 	// #260
    9494:	stp	x19, xzr, [sp, #144]
    9498:	strh	w0, [sp, #160]
    949c:	b	93bc <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x1ec>
    94a0:	ldp	x4, x5, [x19]
    94a4:	add	x2, sp, #0xb0
    94a8:	ldr	x0, [x19, #16]
    94ac:	stp	x4, x5, [sp, #176]
    94b0:	str	x0, [sp, #192]
    94b4:	b	9450 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x280>
    94b8:	ldp	x0, x1, [sp, #80]
    94bc:	stp	x0, x1, [sp, #112]
    94c0:	ldr	x0, [sp, #96]
    94c4:	str	x0, [sp, #128]
    94c8:	b	9350 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x180>
    94cc:	ldp	x4, x5, [sp, #144]
    94d0:	add	x2, sp, #0xb0
    94d4:	ldr	x0, [sp, #160]
    94d8:	stp	x4, x5, [sp, #176]
    94dc:	str	x0, [sp, #192]
    94e0:	b	9450 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x280>
    94e4:	ldr	x3, [sp, #80]
    94e8:	b	9314 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x144>
    94ec:	ldr	x3, [sp, #112]
    94f0:	b	938c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x1bc>
    94f4:	ldr	x23, [sp, #248]
    94f8:	b	926c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x9c>
    94fc:	ldr	x19, [sp, #200]
    9500:	b	9414 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x244>
    9504:	ldr	x0, [sp, #144]
    9508:	b	9404 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x234>
    950c:	ldr	x20, [sp, #224]
    9510:	b	9324 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0+0x154>
    9514:	nop

0000000000009518 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>:
    9518:	stp	x29, x30, [sp, #-32]!
    951c:	mov	x29, sp
    9520:	ldr	x3, [x0, #24]
    9524:	stp	x19, x20, [sp, #16]
    9528:	cbz	x3, 95c0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xa8>
    952c:	ldrb	w4, [x3, #8]
    9530:	mov	x19, x0
    9534:	cmp	w4, #0x6
    9538:	b.eq	9550 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x38>  // b.none
    953c:	mov	x20, x19
    9540:	mov	x0, x20
    9544:	ldp	x19, x20, [sp, #16]
    9548:	ldp	x29, x30, [sp], #32
    954c:	ret
    9550:	ldr	x4, [x3, #24]
    9554:	cmp	x1, x4
    9558:	b.eq	95c4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xac>  // b.none
    955c:	ldr	w3, [x4, #80]
    9560:	mov	w0, #0x18                  	// #24
    9564:	ldr	x1, [x4, #72]
    9568:	ldr	x4, [x19, #32]
    956c:	umaddl	x3, w3, w0, x1
    9570:	cmp	x1, x3
    9574:	b.ne	9588 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x70>  // b.any
    9578:	b	95c8 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xb0>
    957c:	add	x1, x1, #0x18
    9580:	cmp	x3, x1
    9584:	b.eq	95c8 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xb0>  // b.none
    9588:	ldr	x2, [x1]
    958c:	cmp	x4, x2
    9590:	b.ne	957c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x64>  // b.any
    9594:	ldr	x20, [x1, #16]
    9598:	mov	x0, x20
    959c:	ldr	x1, [x20]
    95a0:	ldr	x1, [x1, #24]
    95a4:	blr	x1
    95a8:	tst	w0, #0xff
    95ac:	b.eq	953c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x24>  // b.none
    95b0:	mov	x0, x20
    95b4:	ldp	x19, x20, [sp, #16]
    95b8:	ldp	x29, x30, [sp], #32
    95bc:	ret
    95c0:	bl	6a8 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    95c4:	bl	91d0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE.part.0>
    95c8:	mov	x0, #0x0                   	// #0
    95cc:	ldr	x0, [x0, #16]
    95d0:	brk	#0x3e8
    95d4:	nop

00000000000095d8 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev>:
    95d8:	stp	x29, x30, [sp, #-160]!
    95dc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    95e0:	adrp	x2, ba0 <_ZZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEEENKUlS3_S3_E_clES3_S3_.isra.0+0x18>
    95e4:	mov	x29, sp
    95e8:	stp	x21, x22, [sp, #32]
    95ec:	add	x21, sp, #0x60
    95f0:	add	x4, x21, #0x10
    95f4:	stp	x19, x20, [sp, #16]
    95f8:	mov	x19, x0
    95fc:	add	x1, x1, #0x0
    9600:	mov	x0, x21
    9604:	add	x2, x2, #0x0
    9608:	mov	w3, #0x0                   	// #0
    960c:	stp	x23, x24, [sp, #48]
    9610:	mov	x23, x8
    9614:	str	x4, [sp, #96]
    9618:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    961c:	ldr	w22, [x19, #32]
    9620:	mov	x1, #0x28                  	// #40
    9624:	add	x0, x19, x1
    9628:	add	x22, x1, w22, uxtw #3
    962c:	add	x22, x19, x22
    9630:	cmp	x22, x0
    9634:	b.eq	9798 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x1c0>  // b.none
    9638:	stp	x25, x26, [sp, #64]
    963c:	add	x25, sp, #0x80
    9640:	add	x20, x19, #0x30
    9644:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9648:	adrp	x24, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    964c:	add	x26, x25, #0x10
    9650:	add	x1, x1, #0x0
    9654:	add	x24, x24, #0x0
    9658:	mov	x2, #0x0                   	// #0
    965c:	ldr	x19, [x19, #40]
    9660:	str	x27, [sp, #80]
    9664:	mov	x27, #0x3fffffffffffffff    	// #4611686018427387903
    9668:	b	9684 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xac>
    966c:	sub	x19, x27, x19
    9670:	mov	x1, x24
    9674:	cmp	x19, #0x1
    9678:	mov	x2, #0x2                   	// #2
    967c:	ldr	x19, [x20], #8
    9680:	b.ls	97a8 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x1d0>  // b.plast
    9684:	mov	x0, x21
    9688:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    968c:	ldr	x1, [x19]
    9690:	mov	x0, x19
    9694:	mov	x8, x25
    9698:	ldr	x1, [x1, #40]
    969c:	blr	x1
    96a0:	ldp	x1, x2, [sp, #128]
    96a4:	mov	x0, x21
    96a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    96ac:	ldr	x0, [sp, #128]
    96b0:	cmp	x0, x26
    96b4:	b.eq	96bc <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xe4>  // b.none
    96b8:	bl	0 <_ZdlPv>
    96bc:	cmp	x22, x20
    96c0:	ldr	x19, [sp, #104]
    96c4:	b.ne	966c <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x94>  // b.any
    96c8:	ldp	x25, x26, [sp, #64]
    96cc:	ldr	x27, [sp, #80]
    96d0:	add	x0, x23, #0x10
    96d4:	ldr	x20, [sp, #96]
    96d8:	str	x0, [x23]
    96dc:	cmn	x20, x19
    96e0:	ccmp	x20, #0x0, #0x0, ne  // ne = any
    96e4:	b.eq	97b4 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x1dc>  // b.none
    96e8:	str	x19, [sp, #128]
    96ec:	cmp	x19, #0xf
    96f0:	b.hi	9764 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x18c>  // b.pmore
    96f4:	cmp	x19, #0x1
    96f8:	b.ne	975c <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x184>  // b.any
    96fc:	ldrb	w1, [x20]
    9700:	strb	w1, [x23, #16]
    9704:	str	x19, [x23, #8]
    9708:	strb	wzr, [x0, x19]
    970c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9710:	ldr	x1, [x23, #8]
    9714:	cmp	x1, x0
    9718:	b.eq	97a0 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x1c8>  // b.none
    971c:	mov	x0, x23
    9720:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9724:	mov	x2, #0x1                   	// #1
    9728:	add	x1, x1, #0x0
    972c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9730:	add	x21, x21, #0x10
    9734:	ldr	x0, [sp, #96]
    9738:	cmp	x0, x21
    973c:	b.eq	9744 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x16c>  // b.none
    9740:	bl	0 <_ZdlPv>
    9744:	mov	x0, x23
    9748:	ldp	x19, x20, [sp, #16]
    974c:	ldp	x21, x22, [sp, #32]
    9750:	ldp	x23, x24, [sp, #48]
    9754:	ldp	x29, x30, [sp], #160
    9758:	ret
    975c:	cbz	x19, 9704 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x12c>
    9760:	b	9780 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x1a8>
    9764:	add	x1, sp, #0x80
    9768:	mov	x0, x23
    976c:	mov	x2, #0x0                   	// #0
    9770:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9774:	ldr	x1, [sp, #128]
    9778:	str	x0, [x23]
    977c:	str	x1, [x23, #16]
    9780:	mov	x2, x19
    9784:	mov	x1, x20
    9788:	bl	0 <memcpy>
    978c:	ldr	x0, [x23]
    9790:	ldr	x19, [sp, #128]
    9794:	b	9704 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x12c>
    9798:	ldr	x19, [sp, #104]
    979c:	b	96d0 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xf8>
    97a0:	stp	x25, x26, [sp, #64]
    97a4:	str	x27, [sp, #80]
    97a8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    97ac:	add	x0, x0, #0x0
    97b0:	bl	0 <_ZSt20__throw_length_errorPKc>
    97b4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    97b8:	add	x0, x0, #0x0
    97bc:	stp	x25, x26, [sp, #64]
    97c0:	str	x27, [sp, #80]
    97c4:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000097c8 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev>:
    97c8:	stp	x29, x30, [sp, #-160]!
    97cc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    97d0:	adrp	x2, 2630 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x190>
    97d4:	mov	x29, sp
    97d8:	stp	x21, x22, [sp, #32]
    97dc:	add	x21, sp, #0x60
    97e0:	add	x4, x21, #0x10
    97e4:	stp	x19, x20, [sp, #16]
    97e8:	mov	x20, x0
    97ec:	add	x1, x1, #0x0
    97f0:	mov	x0, x21
    97f4:	add	x2, x2, #0x0
    97f8:	mov	w3, #0x0                   	// #0
    97fc:	stp	x23, x24, [sp, #48]
    9800:	mov	x23, x8
    9804:	str	x4, [sp, #96]
    9808:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    980c:	ldr	w22, [x20, #32]
    9810:	cbz	w22, 98e8 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x120>
    9814:	stp	x25, x26, [sp, #64]
    9818:	add	x25, sp, #0x80
    981c:	sub	w19, w22, #0x1
    9820:	mov	w0, w22
    9824:	add	x26, x25, #0x10
    9828:	str	x27, [sp, #80]
    982c:	adrp	x27, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9830:	add	x27, x27, #0x0
    9834:	mov	x24, #0x28                  	// #40
    9838:	cmp	w19, w0
    983c:	b.cs	99b4 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1ec>  // b.hs, b.nlast
    9840:	add	x0, x24, w19, uxtw #3
    9844:	ldr	x0, [x20, x0]
    9848:	cbz	x0, 98b8 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xf0>
    984c:	ldr	x1, [x0]
    9850:	mov	x8, x25
    9854:	ldr	x1, [x1, #40]
    9858:	blr	x1
    985c:	ldp	x1, x2, [sp, #128]
    9860:	mov	x0, x21
    9864:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9868:	ldr	x0, [sp, #128]
    986c:	cmp	x0, x26
    9870:	b.eq	9878 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xb0>  // b.none
    9874:	bl	0 <_ZdlPv>
    9878:	cbz	w19, 98e0 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x118>
    987c:	cmp	w19, w22
    9880:	b.eq	98ac <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xe4>  // b.none
    9884:	ldr	x1, [sp, #104]
    9888:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    988c:	sub	x0, x0, x1
    9890:	cmp	x0, #0x1
    9894:	b.ls	99dc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x214>  // b.plast
    9898:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    989c:	mov	x0, x21
    98a0:	add	x1, x1, #0x0
    98a4:	mov	x2, #0x2                   	// #2
    98a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    98ac:	ldr	w0, [x20, #32]
    98b0:	sub	w19, w19, #0x1
    98b4:	b	9838 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x70>
    98b8:	ldr	x1, [sp, #104]
    98bc:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    98c0:	cmp	x1, x0
    98c4:	b.eq	99dc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x214>  // b.none
    98c8:	mov	x1, x27
    98cc:	mov	x0, x21
    98d0:	mov	x2, #0x1                   	// #1
    98d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    98d8:	cbnz	w19, 987c <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xb4>
    98dc:	nop
    98e0:	ldp	x25, x26, [sp, #64]
    98e4:	ldr	x27, [sp, #80]
    98e8:	add	x0, x23, #0x10
    98ec:	ldp	x20, x19, [sp, #96]
    98f0:	str	x0, [x23]
    98f4:	cmn	x20, x19
    98f8:	ccmp	x20, #0x0, #0x0, ne  // ne = any
    98fc:	b.eq	99e8 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x220>  // b.none
    9900:	str	x19, [sp, #128]
    9904:	cmp	x19, #0xf
    9908:	b.hi	9980 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1b8>  // b.pmore
    990c:	cmp	x19, #0x1
    9910:	b.ne	9978 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1b0>  // b.any
    9914:	ldrb	w1, [x20]
    9918:	strb	w1, [x23, #16]
    991c:	str	x19, [x23, #8]
    9920:	strb	wzr, [x0, x19]
    9924:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9928:	ldr	x1, [x23, #8]
    992c:	sub	x0, x0, x1
    9930:	cmp	x0, #0x1
    9934:	b.ls	99d4 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x20c>  // b.plast
    9938:	mov	x0, x23
    993c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9940:	mov	x2, #0x2                   	// #2
    9944:	add	x1, x1, #0x0
    9948:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    994c:	add	x21, x21, #0x10
    9950:	ldr	x0, [sp, #96]
    9954:	cmp	x0, x21
    9958:	b.eq	9960 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x198>  // b.none
    995c:	bl	0 <_ZdlPv>
    9960:	mov	x0, x23
    9964:	ldp	x19, x20, [sp, #16]
    9968:	ldp	x21, x22, [sp, #32]
    996c:	ldp	x23, x24, [sp, #48]
    9970:	ldp	x29, x30, [sp], #160
    9974:	ret
    9978:	cbz	x19, 991c <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x154>
    997c:	b	999c <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1d4>
    9980:	add	x1, sp, #0x80
    9984:	mov	x0, x23
    9988:	mov	x2, #0x0                   	// #0
    998c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9990:	ldr	x1, [sp, #128]
    9994:	str	x0, [x23]
    9998:	str	x1, [x23, #16]
    999c:	mov	x2, x19
    99a0:	mov	x1, x20
    99a4:	bl	0 <memcpy>
    99a8:	ldr	x0, [x23]
    99ac:	ldr	x19, [sp, #128]
    99b0:	b	991c <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x154>
    99b4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    99b8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    99bc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    99c0:	add	x3, x3, #0x0
    99c4:	add	x1, x1, #0x0
    99c8:	add	x0, x0, #0x0
    99cc:	mov	w2, #0x22e                 	// #558
    99d0:	bl	0 <__assert_fail>
    99d4:	stp	x25, x26, [sp, #64]
    99d8:	str	x27, [sp, #80]
    99dc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    99e0:	add	x0, x0, #0x0
    99e4:	bl	0 <_ZSt20__throw_length_errorPKc>
    99e8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    99ec:	add	x0, x0, #0x0
    99f0:	stp	x25, x26, [sp, #64]
    99f4:	str	x27, [sp, #80]
    99f8:	bl	0 <_ZSt19__throw_logic_errorPKc>
    99fc:	nop

0000000000009a00 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev>:
    9a00:	stp	x29, x30, [sp, #-192]!
    9a04:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9a08:	adrp	x2, 2648 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x1a8>
    9a0c:	mov	x29, sp
    9a10:	stp	x21, x22, [sp, #32]
    9a14:	add	x21, sp, #0x60
    9a18:	add	x4, x21, #0x10
    9a1c:	stp	x19, x20, [sp, #16]
    9a20:	mov	x20, x0
    9a24:	add	x1, x1, #0x0
    9a28:	mov	x0, x21
    9a2c:	add	x2, x2, #0x0
    9a30:	mov	w3, #0x0                   	// #0
    9a34:	stp	x25, x26, [sp, #64]
    9a38:	mov	x26, x8
    9a3c:	str	x4, [sp, #96]
    9a40:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9a44:	ldr	w0, [x20, #32]
    9a48:	cbz	w0, 9bb0 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1b0>
    9a4c:	str	x27, [sp, #80]
    9a50:	add	x27, sp, #0xa0
    9a54:	adrp	x25, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9a58:	add	x22, sp, #0x80
    9a5c:	add	x25, x25, #0x0
    9a60:	mov	w19, #0x0                   	// #0
    9a64:	stp	x23, x24, [sp, #48]
    9a68:	add	x23, x27, #0x10
    9a6c:	mov	x24, #0x30                  	// #48
    9a70:	b	9b4c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x14c>
    9a74:	str	x2, [sp, #160]
    9a78:	ldr	x2, [x1, #16]
    9a7c:	str	x2, [sp, #176]
    9a80:	ldr	x2, [x1, #8]
    9a84:	str	x2, [sp, #168]
    9a88:	stp	x0, xzr, [x1]
    9a8c:	mov	x0, x21
    9a90:	strb	wzr, [x1, #16]
    9a94:	ldp	x1, x2, [sp, #160]
    9a98:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9a9c:	ldr	x0, [sp, #160]
    9aa0:	cmp	x0, x23
    9aa4:	b.eq	9aac <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0xac>  // b.none
    9aa8:	bl	0 <_ZdlPv>
    9aac:	ldr	x0, [sp, #128]
    9ab0:	add	x1, x22, #0x10
    9ab4:	cmp	x0, x1
    9ab8:	b.eq	9ac0 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0xc0>  // b.none
    9abc:	bl	0 <_ZdlPv>
    9ac0:	ldr	w0, [x20, #32]
    9ac4:	cmp	w0, w19
    9ac8:	b.ls	9c8c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x28c>  // b.plast
    9acc:	add	w0, w0, w19
    9ad0:	mov	x8, x27
    9ad4:	add	x0, x24, w0, uxtw #3
    9ad8:	ldr	x0, [x20, x0]
    9adc:	ldr	x1, [x0]
    9ae0:	ldr	x1, [x1, #40]
    9ae4:	blr	x1
    9ae8:	ldp	x1, x2, [sp, #160]
    9aec:	mov	x0, x21
    9af0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9af4:	ldr	x0, [sp, #160]
    9af8:	cmp	x0, x23
    9afc:	b.eq	9b04 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x104>  // b.none
    9b00:	bl	0 <_ZdlPv>
    9b04:	ldr	w0, [x20, #32]
    9b08:	sub	w1, w0, #0x1
    9b0c:	cmp	w1, w19
    9b10:	b.eq	9b40 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x140>  // b.none
    9b14:	ldr	x1, [sp, #104]
    9b18:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9b1c:	sub	x0, x0, x1
    9b20:	cmp	x0, #0x1
    9b24:	b.ls	9c80 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x280>  // b.plast
    9b28:	mov	x0, x21
    9b2c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9b30:	mov	x2, #0x2                   	// #2
    9b34:	add	x1, x1, #0x0
    9b38:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9b3c:	ldr	w0, [x20, #32]
    9b40:	add	w19, w19, #0x1
    9b44:	cmp	w19, w0
    9b48:	b.cs	9ba8 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1a8>  // b.hs, b.nlast
    9b4c:	add	x0, x24, w19, uxtw #3
    9b50:	mov	x8, x22
    9b54:	ldr	x0, [x20, x0]
    9b58:	ldr	x1, [x0]
    9b5c:	ldr	x1, [x1, #40]
    9b60:	blr	x1
    9b64:	ldr	x1, [sp, #136]
    9b68:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9b6c:	sub	x0, x0, x1
    9b70:	cmp	x0, #0x1
    9b74:	b.ls	9c80 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x280>  // b.plast
    9b78:	mov	x1, x25
    9b7c:	mov	x2, #0x2                   	// #2
    9b80:	mov	x0, x22
    9b84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9b88:	str	x23, [sp, #160]
    9b8c:	mov	x1, x0
    9b90:	ldr	x2, [x0], #16
    9b94:	cmp	x2, x0
    9b98:	b.ne	9a74 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x74>  // b.any
    9b9c:	ldp	x2, x3, [x1, #16]
    9ba0:	stp	x2, x3, [sp, #176]
    9ba4:	b	9a80 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x80>
    9ba8:	ldp	x23, x24, [sp, #48]
    9bac:	ldr	x27, [sp, #80]
    9bb0:	add	x0, x26, #0x10
    9bb4:	ldp	x20, x19, [sp, #96]
    9bb8:	str	x0, [x26]
    9bbc:	cmn	x20, x19
    9bc0:	ccmp	x20, #0x0, #0x0, ne  // ne = any
    9bc4:	b.eq	9cac <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x2ac>  // b.none
    9bc8:	str	x19, [sp, #160]
    9bcc:	cmp	x19, #0xf
    9bd0:	b.hi	9c44 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x244>  // b.pmore
    9bd4:	cmp	x19, #0x1
    9bd8:	b.ne	9c3c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x23c>  // b.any
    9bdc:	ldrb	w1, [x20]
    9be0:	strb	w1, [x26, #16]
    9be4:	str	x19, [x26, #8]
    9be8:	strb	wzr, [x0, x19]
    9bec:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    9bf0:	ldr	x1, [x26, #8]
    9bf4:	cmp	x1, x0
    9bf8:	b.eq	9c78 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x278>  // b.none
    9bfc:	mov	x0, x26
    9c00:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9c04:	mov	x2, #0x1                   	// #1
    9c08:	add	x1, x1, #0x0
    9c0c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9c10:	add	x21, x21, #0x10
    9c14:	ldr	x0, [sp, #96]
    9c18:	cmp	x0, x21
    9c1c:	b.eq	9c24 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x224>  // b.none
    9c20:	bl	0 <_ZdlPv>
    9c24:	mov	x0, x26
    9c28:	ldp	x19, x20, [sp, #16]
    9c2c:	ldp	x21, x22, [sp, #32]
    9c30:	ldp	x25, x26, [sp, #64]
    9c34:	ldp	x29, x30, [sp], #192
    9c38:	ret
    9c3c:	cbz	x19, 9be4 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1e4>
    9c40:	b	9c60 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x260>
    9c44:	add	x1, sp, #0xa0
    9c48:	mov	x0, x26
    9c4c:	mov	x2, #0x0                   	// #0
    9c50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9c54:	ldr	x1, [sp, #160]
    9c58:	str	x0, [x26]
    9c5c:	str	x1, [x26, #16]
    9c60:	mov	x2, x19
    9c64:	mov	x1, x20
    9c68:	bl	0 <memcpy>
    9c6c:	ldr	x0, [x26]
    9c70:	ldr	x19, [sp, #160]
    9c74:	b	9be4 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1e4>
    9c78:	stp	x23, x24, [sp, #48]
    9c7c:	str	x27, [sp, #80]
    9c80:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9c84:	add	x0, x0, #0x0
    9c88:	bl	0 <_ZSt20__throw_length_errorPKc>
    9c8c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9c90:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9c94:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9c98:	add	x3, x3, #0x0
    9c9c:	add	x1, x1, #0x0
    9ca0:	add	x0, x0, #0x0
    9ca4:	mov	w2, #0x3bf                 	// #959
    9ca8:	bl	0 <__assert_fail>
    9cac:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9cb0:	add	x0, x0, #0x0
    9cb4:	stp	x23, x24, [sp, #48]
    9cb8:	str	x27, [sp, #80]
    9cbc:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000009cc0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>:
    9cc0:	stp	x29, x30, [sp, #-192]!
    9cc4:	mov	x29, sp
    9cc8:	stp	x19, x20, [sp, #16]
    9ccc:	mov	x19, x0
    9cd0:	ldr	w0, [x0, #32]
    9cd4:	stp	x21, x22, [sp, #32]
    9cd8:	mov	x21, x1
    9cdc:	stp	x23, x24, [sp, #48]
    9ce0:	cbz	w0, 9d58 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x98>
    9ce4:	adrp	x22, 3f8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x58>
    9ce8:	mov	w20, #0x0                   	// #0
    9cec:	mov	x23, #0x30                  	// #48
    9cf0:	ldr	x22, [x22]
    9cf4:	add	x3, x23, w20, uxtw #3
    9cf8:	add	w2, w20, w0
    9cfc:	mov	x1, x22
    9d00:	ldr	x0, [x19, x3]
    9d04:	add	x2, x23, w2, uxtw #3
    9d08:	ldr	x3, [x0]
    9d0c:	ldr	x24, [x19, x2]
    9d10:	ldr	x2, [x3, #64]
    9d14:	blr	x2
    9d18:	cbz	x0, 9d28 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x68>
    9d1c:	ldrb	w1, [x0, #8]
    9d20:	cmp	w1, #0x8
    9d24:	b.eq	9d40 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x80>  // b.none
    9d28:	mov	x0, x19
    9d2c:	ldp	x19, x20, [sp, #16]
    9d30:	ldp	x21, x22, [sp, #32]
    9d34:	ldp	x23, x24, [sp, #48]
    9d38:	ldp	x29, x30, [sp], #192
    9d3c:	ret
    9d40:	ldr	x0, [x0, #24]
    9d44:	cbnz	x0, 9de0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x120>
    9d48:	ldr	w0, [x19, #32]
    9d4c:	add	w20, w20, #0x1
    9d50:	cmp	w0, w20
    9d54:	b.hi	9cf4 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x34>  // b.pmore
    9d58:	ldp	x0, x24, [x21]
    9d5c:	add	x22, sp, #0x58
    9d60:	ldr	w23, [x21, #16]
    9d64:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9d68:	mov	x1, x0
    9d6c:	add	x4, sp, #0x48
    9d70:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9d74:	add	x2, x2, #0x0
    9d78:	stp	x4, x2, [sp, #88]
    9d7c:	mov	w3, #0x305                 	// #773
    9d80:	ldp	x4, x1, [x1, #24]
    9d84:	mov	x0, x22
    9d88:	stp	x4, x1, [sp, #72]
    9d8c:	strh	w3, [sp, #104]
    9d90:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9d94:	tst	w0, #0xff
    9d98:	b.eq	9df8 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x138>  // b.none
    9d9c:	add	x21, sp, #0xa0
    9da0:	mov	x0, x19
    9da4:	mov	x8, x21
    9da8:	add	x20, sp, #0x70
    9dac:	bl	9a00 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev>
    9db0:	add	x19, sp, #0x88
    9db4:	mov	x1, x21
    9db8:	mov	x0, x20
    9dbc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9dc0:	mov	x8, x19
    9dc4:	mov	x1, x20
    9dc8:	mov	x0, x22
    9dcc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9dd0:	mov	x2, x19
    9dd4:	mov	x0, x24
    9dd8:	mov	x1, x23
    9ddc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9de0:	ldr	x2, [x24]
    9de4:	mov	x0, x24
    9de8:	ldr	x1, [x19, #40]
    9dec:	ldr	x2, [x2, #64]
    9df0:	blr	x2
    9df4:	b	9d2c <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x6c>
    9df8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9dfc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9e00:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9e04:	add	x3, x3, #0x0
    9e08:	add	x1, x1, #0x0
    9e0c:	add	x0, x0, #0x0
    9e10:	mov	w2, #0x171                 	// #369
    9e14:	bl	0 <__assert_fail>

0000000000009e18 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE>:
    9e18:	stp	x29, x30, [sp, #-192]!
    9e1c:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9e20:	mov	x29, sp
    9e24:	stp	x21, x22, [sp, #32]
    9e28:	mov	x22, x0
    9e2c:	ldr	d0, [x2]
    9e30:	stp	x25, x26, [sp, #64]
    9e34:	add	x26, x0, #0x30
    9e38:	ldr	w0, [x0, #32]
    9e3c:	stp	x23, x24, [sp, #48]
    9e40:	add	x23, sp, #0x60
    9e44:	add	x24, x23, #0x10
    9e48:	mov	x21, x1
    9e4c:	lsl	x1, x0, #3
    9e50:	stp	x19, x20, [sp, #16]
    9e54:	add	x25, x26, x1
    9e58:	cmp	x26, x25
    9e5c:	stp	x27, x28, [sp, #80]
    9e60:	str	x24, [sp, #96]
    9e64:	str	d0, [sp, #104]
    9e68:	b.eq	a024 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x20c>  // b.none
    9e6c:	mov	w20, #0x0                   	// #0
    9e70:	ldr	x27, [x26]
    9e74:	mov	x1, x21
    9e78:	mov	x0, x27
    9e7c:	ldr	x2, [x27]
    9e80:	ldr	x2, [x2, #96]
    9e84:	blr	x2
    9e88:	mov	x19, x0
    9e8c:	ldp	w1, w0, [sp, #104]
    9e90:	cmp	w1, w0
    9e94:	b.cs	9fe4 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1cc>  // b.hs, b.nlast
    9e98:	ldr	x0, [sp, #96]
    9e9c:	str	x19, [x0, w1, uxtw #3]
    9ea0:	ldp	w2, w1, [sp, #104]
    9ea4:	mov	w0, w2
    9ea8:	add	x0, x0, #0x1
    9eac:	cmp	x0, x1
    9eb0:	b.hi	a050 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x238>  // b.pmore
    9eb4:	cmp	x19, x27
    9eb8:	add	w2, w2, #0x1
    9ebc:	str	w2, [sp, #104]
    9ec0:	cset	w0, ne  // ne = any
    9ec4:	add	x26, x26, #0x8
    9ec8:	orr	w20, w20, w0
    9ecc:	cmp	x25, x26
    9ed0:	b.ne	9e70 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x58>  // b.any
    9ed4:	ldr	w24, [x22, #32]
    9ed8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    9edc:	add	x25, sp, #0x90
    9ee0:	ldr	d0, [x0]
    9ee4:	add	x0, x25, #0x10
    9ee8:	lsl	x24, x24, #3
    9eec:	str	x0, [sp, #144]
    9ef0:	add	x27, x24, #0x30
    9ef4:	add	x27, x22, x27
    9ef8:	str	d0, [sp, #152]
    9efc:	add	x24, x27, x24
    9f00:	cmp	x24, x27
    9f04:	b.eq	a01c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x204>  // b.none
    9f08:	add	x26, x25, #0x10
    9f0c:	nop
    9f10:	ldr	x28, [x27]
    9f14:	mov	x1, x21
    9f18:	mov	x0, x28
    9f1c:	ldr	x2, [x28]
    9f20:	ldr	x2, [x2, #96]
    9f24:	blr	x2
    9f28:	mov	x19, x0
    9f2c:	ldp	w1, w0, [sp, #152]
    9f30:	cmp	w1, w0
    9f34:	b.cs	a000 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1e8>  // b.hs, b.nlast
    9f38:	ldr	x0, [sp, #144]
    9f3c:	str	x19, [x0, w1, uxtw #3]
    9f40:	ldp	w3, w1, [sp, #152]
    9f44:	mov	w0, w3
    9f48:	add	x0, x0, #0x1
    9f4c:	cmp	x0, x1
    9f50:	b.hi	a050 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x238>  // b.pmore
    9f54:	cmp	x19, x28
    9f58:	add	w3, w3, #0x1
    9f5c:	str	w3, [sp, #152]
    9f60:	cset	w0, ne  // ne = any
    9f64:	add	x27, x27, #0x8
    9f68:	orr	w20, w20, w0
    9f6c:	cmp	x24, x27
    9f70:	b.ne	9f10 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xf8>  // b.any
    9f74:	ldr	x0, [sp, #144]
    9f78:	cbz	w20, 9fa0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x188>
    9f7c:	mov	x2, x0
    9f80:	ldr	w1, [sp, #104]
    9f84:	ldr	x4, [x22, #40]
    9f88:	ldr	x0, [sp, #96]
    9f8c:	bl	5ee8 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>
    9f90:	ldr	x1, [x21, #8]
    9f94:	bl	9cc0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>
    9f98:	mov	x22, x0
    9f9c:	ldr	x0, [sp, #144]
    9fa0:	add	x25, x25, #0x10
    9fa4:	cmp	x0, x25
    9fa8:	b.eq	9fb0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x198>  // b.none
    9fac:	bl	0 <free>
    9fb0:	ldr	x0, [sp, #96]
    9fb4:	add	x23, x23, #0x10
    9fb8:	cmp	x0, x23
    9fbc:	b.eq	9fc4 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1ac>  // b.none
    9fc0:	bl	0 <free>
    9fc4:	mov	x0, x22
    9fc8:	ldp	x19, x20, [sp, #16]
    9fcc:	ldp	x21, x22, [sp, #32]
    9fd0:	ldp	x23, x24, [sp, #48]
    9fd4:	ldp	x25, x26, [sp, #64]
    9fd8:	ldp	x27, x28, [sp, #80]
    9fdc:	ldp	x29, x30, [sp], #192
    9fe0:	ret
    9fe4:	mov	x1, x24
    9fe8:	mov	x0, x23
    9fec:	mov	x3, #0x8                   	// #8
    9ff0:	mov	x2, #0x0                   	// #0
    9ff4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    9ff8:	ldr	w1, [sp, #104]
    9ffc:	b	9e98 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x80>
    a000:	mov	x1, x26
    a004:	mov	x0, x25
    a008:	mov	x3, #0x8                   	// #8
    a00c:	mov	x2, #0x0                   	// #0
    a010:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    a014:	ldr	w1, [sp, #152]
    a018:	b	9f38 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x120>
    a01c:	mov	x3, #0x0                   	// #0
    a020:	b	9f78 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x160>
    a024:	add	x27, x1, #0x30
    a028:	add	x25, sp, #0x90
    a02c:	add	x27, x22, x27
    a030:	add	x0, x25, #0x10
    a034:	str	x0, [sp, #144]
    a038:	add	x24, x27, x1
    a03c:	str	d0, [sp, #152]
    a040:	cmp	x24, x27
    a044:	b.eq	9fa0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x188>  // b.none
    a048:	mov	w20, #0x0                   	// #0
    a04c:	b	9f08 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xf0>
    a050:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a054:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a058:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a05c:	add	x3, x3, #0x0
    a060:	add	x1, x1, #0x0
    a064:	add	x0, x0, #0x0
    a068:	mov	w2, #0x43                  	// #67
    a06c:	bl	0 <__assert_fail>

000000000000a070 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>:
    a070:	stp	x29, x30, [sp, #-192]!
    a074:	mov	x29, sp
    a078:	stp	x21, x22, [sp, #32]
    a07c:	mov	x21, x0
    a080:	add	x22, sp, #0xa0
    a084:	ldr	x0, [x0, #32]
    a088:	stp	x19, x20, [sp, #16]
    a08c:	stp	x23, x24, [sp, #48]
    a090:	add	x23, sp, #0x60
    a094:	ldr	x1, [x0]
    a098:	stp	x25, x26, [sp, #64]
    a09c:	mov	x25, x8
    a0a0:	mov	x8, x22
    a0a4:	ldr	x1, [x1, #40]
    a0a8:	blr	x1
    a0ac:	mov	x2, #0x0                   	// #0
    a0b0:	mov	x1, #0x0                   	// #0
    a0b4:	mov	x0, x22
    a0b8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a0bc:	mov	x4, #0x1                   	// #1
    a0c0:	add	x3, x3, #0x0
    a0c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a0c8:	add	x1, x23, #0x10
    a0cc:	str	x1, [sp, #96]
    a0d0:	mov	x1, x0
    a0d4:	ldr	x2, [x1], #16
    a0d8:	cmp	x2, x1
    a0dc:	b.eq	a5e4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x574>  // b.none
    a0e0:	ldr	x3, [x0, #16]
    a0e4:	str	x2, [sp, #96]
    a0e8:	str	x3, [sp, #112]
    a0ec:	ldr	x2, [x0, #8]
    a0f0:	str	x2, [sp, #104]
    a0f4:	stp	x1, xzr, [x0]
    a0f8:	add	x1, x22, #0x10
    a0fc:	strb	wzr, [x0, #16]
    a100:	ldr	x0, [sp, #160]
    a104:	cmp	x0, x1
    a108:	b.eq	a110 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0xa0>  // b.none
    a10c:	bl	0 <_ZdlPv>
    a110:	ldr	x0, [x21, #40]
    a114:	cbz	x0, a1dc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x16c>
    a118:	ldr	x2, [x0]
    a11c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a120:	add	x1, x1, #0x0
    a124:	ldr	x2, [x2, #48]
    a128:	cmp	x2, x1
    a12c:	b.ne	a618 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5a8>  // b.any
    a130:	ldr	x1, [x0, #24]
    a134:	cbz	x1, a574 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x504>
    a138:	add	x19, sp, #0x80
    a13c:	mov	w3, #0x0                   	// #0
    a140:	add	x4, x19, #0x10
    a144:	ldr	x2, [x0, #32]
    a148:	mov	x0, x19
    a14c:	str	x4, [sp, #128]
    a150:	add	x2, x1, x2
    a154:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a158:	mov	x2, #0x0                   	// #0
    a15c:	mov	x1, #0x0                   	// #0
    a160:	mov	x0, x19
    a164:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a168:	mov	x4, #0x1                   	// #1
    a16c:	add	x3, x3, #0x0
    a170:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a174:	mov	x1, x0
    a178:	add	x2, x22, #0x10
    a17c:	str	x2, [sp, #160]
    a180:	ldr	x2, [x0], #16
    a184:	cmp	x2, x0
    a188:	b.eq	a5f0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x580>  // b.none
    a18c:	str	x2, [sp, #160]
    a190:	ldr	x2, [x1, #16]
    a194:	str	x2, [sp, #176]
    a198:	ldr	x2, [x1, #8]
    a19c:	str	x2, [sp, #168]
    a1a0:	stp	x0, xzr, [x1]
    a1a4:	mov	x0, x23
    a1a8:	strb	wzr, [x1, #16]
    a1ac:	ldp	x1, x2, [sp, #160]
    a1b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a1b4:	ldr	x0, [sp, #160]
    a1b8:	add	x1, x22, #0x10
    a1bc:	cmp	x0, x1
    a1c0:	b.eq	a1c8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x158>  // b.none
    a1c4:	bl	0 <_ZdlPv>
    a1c8:	ldr	x0, [sp, #128]
    a1cc:	add	x19, x19, #0x10
    a1d0:	cmp	x0, x19
    a1d4:	b.eq	a1dc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x16c>  // b.none
    a1d8:	bl	0 <_ZdlPv>
    a1dc:	ldr	w0, [x21, #48]
    a1e0:	cbz	w0, a4dc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x46c>
    a1e4:	ldr	x0, [x21, #56]
    a1e8:	add	x19, sp, #0x80
    a1ec:	mov	x8, x19
    a1f0:	ldr	x1, [x0]
    a1f4:	ldr	x1, [x1, #40]
    a1f8:	blr	x1
    a1fc:	mov	x2, #0x0                   	// #0
    a200:	mov	x1, #0x0                   	// #0
    a204:	mov	x0, x19
    a208:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a20c:	mov	x4, #0x1                   	// #1
    a210:	add	x3, x3, #0x0
    a214:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a218:	mov	x1, x0
    a21c:	add	x2, x22, #0x10
    a220:	str	x2, [sp, #160]
    a224:	ldr	x2, [x0], #16
    a228:	cmp	x2, x0
    a22c:	b.eq	a5fc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x58c>  // b.none
    a230:	str	x2, [sp, #160]
    a234:	ldr	x2, [x1, #16]
    a238:	str	x2, [sp, #176]
    a23c:	ldr	x2, [x1, #8]
    a240:	str	x2, [sp, #168]
    a244:	stp	x0, xzr, [x1]
    a248:	mov	x0, x23
    a24c:	strb	wzr, [x1, #16]
    a250:	ldp	x1, x2, [sp, #160]
    a254:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a258:	ldr	x0, [sp, #160]
    a25c:	add	x1, x22, #0x10
    a260:	cmp	x0, x1
    a264:	b.eq	a26c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x1fc>  // b.none
    a268:	bl	0 <_ZdlPv>
    a26c:	ldr	x0, [sp, #128]
    a270:	add	x1, x19, #0x10
    a274:	cmp	x0, x1
    a278:	b.eq	a280 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x210>  // b.none
    a27c:	bl	0 <_ZdlPv>
    a280:	ldr	w0, [x21, #52]
    a284:	cbz	w0, a634 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5c4>
    a288:	ldr	w26, [x21, #48]
    a28c:	add	x0, x21, w26, uxtw #3
    a290:	ldr	x0, [x0, #56]
    a294:	cbz	x0, a320 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2b0>
    a298:	ldr	x2, [x0]
    a29c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a2a0:	add	x1, x1, #0x0
    a2a4:	ldr	x2, [x2, #48]
    a2a8:	cmp	x2, x1
    a2ac:	b.ne	a628 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5b8>  // b.any
    a2b0:	ldr	x1, [x0, #24]
    a2b4:	cbz	x1, a608 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x598>
    a2b8:	add	x4, x19, #0x10
    a2bc:	mov	w3, #0x0                   	// #0
    a2c0:	ldr	x2, [x0, #32]
    a2c4:	mov	x0, x19
    a2c8:	str	x4, [sp, #128]
    a2cc:	add	x2, x1, x2
    a2d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a2d4:	mov	x8, x22
    a2d8:	mov	x1, x19
    a2dc:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a2e0:	add	x0, x0, #0x0
    a2e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a2e8:	ldp	x1, x2, [sp, #160]
    a2ec:	mov	x0, x23
    a2f0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a2f4:	ldr	x0, [sp, #160]
    a2f8:	add	x1, x22, #0x10
    a2fc:	cmp	x0, x1
    a300:	b.eq	a308 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x298>  // b.none
    a304:	bl	0 <_ZdlPv>
    a308:	ldr	x0, [sp, #128]
    a30c:	add	x1, x19, #0x10
    a310:	cmp	x0, x1
    a314:	b.eq	a31c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2ac>  // b.none
    a318:	bl	0 <_ZdlPv>
    a31c:	ldr	w26, [x21, #48]
    a320:	cmp	w26, #0x1
    a324:	b.eq	a4dc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x46c>  // b.none
    a328:	mov	w0, w26
    a32c:	mov	w20, #0x1                   	// #1
    a330:	stp	x27, x28, [sp, #80]
    a334:	adrp	x27, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a338:	adrp	x28, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a33c:	add	x27, x27, #0x0
    a340:	add	x28, x28, #0x0
    a344:	b	a47c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x40c>
    a348:	str	x2, [sp, #160]
    a34c:	ldr	x2, [x1, #16]
    a350:	str	x2, [sp, #176]
    a354:	ldr	x2, [x1, #8]
    a358:	str	x2, [sp, #168]
    a35c:	stp	x0, xzr, [x1]
    a360:	mov	x0, x23
    a364:	strb	wzr, [x1, #16]
    a368:	ldp	x1, x2, [sp, #160]
    a36c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a370:	ldr	x0, [sp, #160]
    a374:	add	x1, x22, #0x10
    a378:	cmp	x0, x1
    a37c:	b.eq	a384 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x314>  // b.none
    a380:	bl	0 <_ZdlPv>
    a384:	ldr	x0, [sp, #128]
    a388:	add	x1, x19, #0x10
    a38c:	cmp	x0, x1
    a390:	b.eq	a398 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x328>  // b.none
    a394:	bl	0 <_ZdlPv>
    a398:	ldr	w0, [x21, #52]
    a39c:	cmp	w0, w20
    a3a0:	b.ls	a638 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5c8>  // b.plast
    a3a4:	ldr	w0, [x21, #48]
    a3a8:	add	x24, x24, w0, uxtw #3
    a3ac:	ldr	x0, [x24, #56]
    a3b0:	cbz	x0, a46c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3fc>
    a3b4:	ldr	x1, [x0]
    a3b8:	ldr	x1, [x1, #48]
    a3bc:	cmp	x1, x28
    a3c0:	b.ne	a5a4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x534>  // b.any
    a3c4:	ldr	x1, [x0, #24]
    a3c8:	cbz	x1, a588 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x518>
    a3cc:	add	x4, x19, #0x10
    a3d0:	mov	w3, #0x0                   	// #0
    a3d4:	ldr	x2, [x0, #32]
    a3d8:	mov	x0, x19
    a3dc:	str	x4, [sp, #128]
    a3e0:	add	x2, x1, x2
    a3e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a3e8:	mov	x2, #0x0                   	// #0
    a3ec:	mov	x1, #0x0                   	// #0
    a3f0:	mov	x0, x19
    a3f4:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a3f8:	mov	x4, #0x2                   	// #2
    a3fc:	add	x3, x3, #0x0
    a400:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a404:	mov	x1, x0
    a408:	add	x2, x22, #0x10
    a40c:	str	x2, [sp, #160]
    a410:	ldr	x2, [x0], #16
    a414:	cmp	x2, x0
    a418:	b.eq	a598 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x528>  // b.none
    a41c:	str	x2, [sp, #160]
    a420:	ldr	x2, [x1, #16]
    a424:	str	x2, [sp, #176]
    a428:	ldr	x2, [x1, #8]
    a42c:	str	x2, [sp, #168]
    a430:	stp	x0, xzr, [x1]
    a434:	mov	x0, x23
    a438:	strb	wzr, [x1, #16]
    a43c:	ldp	x1, x2, [sp, #160]
    a440:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a444:	ldr	x0, [sp, #160]
    a448:	add	x1, x22, #0x10
    a44c:	cmp	x0, x1
    a450:	b.eq	a458 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3e8>  // b.none
    a454:	bl	0 <_ZdlPv>
    a458:	ldr	x0, [sp, #128]
    a45c:	add	x1, x19, #0x10
    a460:	cmp	x0, x1
    a464:	b.eq	a46c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3fc>  // b.none
    a468:	bl	0 <_ZdlPv>
    a46c:	add	w20, w20, #0x1
    a470:	cmp	w20, w26
    a474:	b.eq	a4d8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x468>  // b.none
    a478:	ldr	w0, [x21, #48]
    a47c:	cmp	w20, w0
    a480:	b.cs	a658 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x5e8>  // b.hs, b.nlast
    a484:	add	x24, x21, w20, uxtw #3
    a488:	mov	x8, x19
    a48c:	ldr	x0, [x24, #56]
    a490:	ldr	x1, [x0]
    a494:	ldr	x1, [x1, #40]
    a498:	blr	x1
    a49c:	mov	x2, #0x0                   	// #0
    a4a0:	mov	x1, #0x0                   	// #0
    a4a4:	mov	x3, x27
    a4a8:	mov	x0, x19
    a4ac:	mov	x4, #0x2                   	// #2
    a4b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a4b4:	add	x2, x22, #0x10
    a4b8:	str	x2, [sp, #160]
    a4bc:	mov	x1, x0
    a4c0:	ldr	x2, [x0], #16
    a4c4:	cmp	x2, x0
    a4c8:	b.ne	a348 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2d8>  // b.any
    a4cc:	ldp	x2, x3, [x1, #16]
    a4d0:	stp	x2, x3, [sp, #176]
    a4d4:	b	a354 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2e4>
    a4d8:	ldp	x27, x28, [sp, #80]
    a4dc:	add	x0, x25, #0x10
    a4e0:	ldp	x20, x19, [sp, #96]
    a4e4:	str	x0, [x25]
    a4e8:	cmn	x20, x19
    a4ec:	ccmp	x20, #0x0, #0x0, ne  // ne = any
    a4f0:	b.eq	a688 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x618>  // b.none
    a4f4:	str	x19, [sp, #160]
    a4f8:	cmp	x19, #0xf
    a4fc:	b.hi	a5b0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x540>  // b.pmore
    a500:	cmp	x19, #0x1
    a504:	b.ne	a56c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4fc>  // b.any
    a508:	ldrb	w1, [x20]
    a50c:	strb	w1, [x25, #16]
    a510:	str	x19, [x25, #8]
    a514:	strb	wzr, [x0, x19]
    a518:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    a51c:	ldr	x1, [x25, #8]
    a520:	cmp	x1, x0
    a524:	b.eq	a678 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x608>  // b.none
    a528:	mov	x0, x25
    a52c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a530:	mov	x2, #0x1                   	// #1
    a534:	add	x1, x1, #0x0
    a538:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a53c:	add	x23, x23, #0x10
    a540:	ldr	x0, [sp, #96]
    a544:	cmp	x0, x23
    a548:	b.eq	a550 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4e0>  // b.none
    a54c:	bl	0 <_ZdlPv>
    a550:	mov	x0, x25
    a554:	ldp	x19, x20, [sp, #16]
    a558:	ldp	x21, x22, [sp, #32]
    a55c:	ldp	x23, x24, [sp, #48]
    a560:	ldp	x25, x26, [sp, #64]
    a564:	ldp	x29, x30, [sp], #192
    a568:	ret
    a56c:	cbz	x19, a510 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4a0>
    a570:	b	a5cc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x55c>
    a574:	add	x19, sp, #0x80
    a578:	strb	wzr, [sp, #144]
    a57c:	add	x0, x19, #0x10
    a580:	stp	x0, xzr, [sp, #128]
    a584:	b	a158 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0xe8>
    a588:	add	x0, x19, #0x10
    a58c:	stp	x0, xzr, [sp, #128]
    a590:	strb	wzr, [sp, #144]
    a594:	b	a3e8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x378>
    a598:	ldp	x2, x3, [x1, #16]
    a59c:	stp	x2, x3, [sp, #176]
    a5a0:	b	a428 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3b8>
    a5a4:	mov	x8, x19
    a5a8:	blr	x1
    a5ac:	b	a3e8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x378>
    a5b0:	mov	x1, x22
    a5b4:	mov	x0, x25
    a5b8:	mov	x2, #0x0                   	// #0
    a5bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    a5c0:	ldr	x1, [sp, #160]
    a5c4:	str	x0, [x25]
    a5c8:	str	x1, [x25, #16]
    a5cc:	mov	x2, x19
    a5d0:	mov	x1, x20
    a5d4:	bl	0 <memcpy>
    a5d8:	ldr	x0, [x25]
    a5dc:	ldr	x19, [sp, #160]
    a5e0:	b	a510 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4a0>
    a5e4:	ldp	x2, x3, [x0, #16]
    a5e8:	stp	x2, x3, [sp, #112]
    a5ec:	b	a0ec <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x7c>
    a5f0:	ldp	x2, x3, [x1, #16]
    a5f4:	stp	x2, x3, [sp, #176]
    a5f8:	b	a198 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x128>
    a5fc:	ldp	x2, x3, [x1, #16]
    a600:	stp	x2, x3, [sp, #176]
    a604:	b	a23c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x1cc>
    a608:	add	x0, x19, #0x10
    a60c:	stp	x0, xzr, [sp, #128]
    a610:	strb	wzr, [sp, #144]
    a614:	b	a2d4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x264>
    a618:	add	x19, sp, #0x80
    a61c:	mov	x8, x19
    a620:	blr	x2
    a624:	b	a158 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0xe8>
    a628:	mov	x8, x19
    a62c:	blr	x2
    a630:	b	a2d4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x264>
    a634:	stp	x27, x28, [sp, #80]
    a638:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a63c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a640:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a644:	add	x3, x3, #0x0
    a648:	add	x1, x1, #0x0
    a64c:	add	x0, x0, #0x0
    a650:	mov	w2, #0x545                 	// #1349
    a654:	bl	0 <__assert_fail>
    a658:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a65c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a660:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a664:	add	x3, x3, #0x0
    a668:	add	x1, x1, #0x0
    a66c:	add	x0, x0, #0x0
    a670:	mov	w2, #0x540                 	// #1344
    a674:	bl	0 <__assert_fail>
    a678:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a67c:	add	x0, x0, #0x0
    a680:	stp	x27, x28, [sp, #80]
    a684:	bl	0 <_ZSt20__throw_length_errorPKc>
    a688:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a68c:	add	x0, x0, #0x0
    a690:	stp	x27, x28, [sp, #80]
    a694:	bl	0 <_ZSt19__throw_logic_errorPKc>

000000000000a698 <_ZN4llvm7IntInit3getEl>:
    a698:	stp	x29, x30, [sp, #-64]!
    a69c:	mov	x29, sp
    a6a0:	stp	x19, x20, [sp, #16]
    a6a4:	mov	x20, x0
    a6a8:	stp	x21, x22, [sp, #32]
    a6ac:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a6b0:	add	x19, x21, #0x0
    a6b4:	add	x22, x19, #0x298
    a6b8:	ldarb	w0, [x22]
    a6bc:	tbz	w0, #0, a7e4 <_ZN4llvm7IntInit3getEl+0x14c>
    a6c0:	add	x19, x21, #0x0
    a6c4:	add	x19, x19, #0x270
    a6c8:	ldr	x1, [x19, #8]
    a6cc:	cbz	x1, a71c <_ZN4llvm7IntInit3getEl+0x84>
    a6d0:	ldr	x0, [x1, #32]
    a6d4:	cmp	x0, x20
    a6d8:	b.lt	a7d8 <_ZN4llvm7IntInit3getEl+0x140>  // b.tstop
    a6dc:	mov	x19, x1
    a6e0:	ldr	x1, [x1, #16]
    a6e4:	cbnz	x1, a6d0 <_ZN4llvm7IntInit3getEl+0x38>
    a6e8:	add	x0, x21, #0x0
    a6ec:	add	x0, x0, #0x270
    a6f0:	cmp	x19, x0
    a6f4:	b.eq	a71c <_ZN4llvm7IntInit3getEl+0x84>  // b.none
    a6f8:	ldr	x0, [x19, #32]
    a6fc:	cmp	x0, x20
    a700:	b.gt	a71c <_ZN4llvm7IntInit3getEl+0x84>
    a704:	ldr	x0, [x19, #40]
    a708:	cbz	x0, a78c <_ZN4llvm7IntInit3getEl+0xf4>
    a70c:	ldp	x19, x20, [sp, #16]
    a710:	ldp	x21, x22, [sp, #32]
    a714:	ldp	x29, x30, [sp], #64
    a718:	ret
    a71c:	mov	x0, #0x30                  	// #48
    a720:	bl	0 <_Znwm>
    a724:	mov	x1, x19
    a728:	mov	x19, x0
    a72c:	add	x2, x0, #0x20
    a730:	add	x22, x21, #0x0
    a734:	add	x0, x22, #0x268
    a738:	stp	x20, xzr, [x19, #32]
    a73c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a740:	mov	x3, x0
    a744:	mov	x2, x1
    a748:	cbz	x1, a830 <_ZN4llvm7IntInit3getEl+0x198>
    a74c:	add	x22, x22, #0x270
    a750:	cmp	x1, x22
    a754:	cset	w0, eq  // eq = none
    a758:	cmp	x3, #0x0
    a75c:	csinc	w0, w0, wzr, eq  // eq = none
    a760:	cbz	w0, a840 <_ZN4llvm7IntInit3getEl+0x1a8>
    a764:	add	x3, x21, #0x0
    a768:	mov	x1, x19
    a76c:	add	x22, x3, #0x268
    a770:	add	x3, x3, #0x270
    a774:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
    a778:	ldr	x0, [x22, #40]
    a77c:	add	x0, x0, #0x1
    a780:	str	x0, [x22, #40]
    a784:	ldr	x0, [x19, #40]
    a788:	cbnz	x0, a70c <_ZN4llvm7IntInit3getEl+0x74>
    a78c:	add	x0, x21, #0x0
    a790:	mov	w2, #0x4                   	// #4
    a794:	mov	x1, #0x20                  	// #32
    a798:	add	x0, x0, #0xa0
    a79c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a7a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a7a4:	adrp	x2, 3f8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x58>
    a7a8:	mov	w3, #0x8                   	// #8
    a7ac:	strh	w3, [x0, #8]
    a7b0:	ldr	x1, [x1]
    a7b4:	ldr	x2, [x2]
    a7b8:	add	x1, x1, #0x10
    a7bc:	str	x1, [x0]
    a7c0:	stp	x2, x20, [x0, #16]
    a7c4:	str	x0, [x19, #40]
    a7c8:	ldp	x19, x20, [sp, #16]
    a7cc:	ldp	x21, x22, [sp, #32]
    a7d0:	ldp	x29, x30, [sp], #64
    a7d4:	ret
    a7d8:	ldr	x1, [x1, #24]
    a7dc:	cbnz	x1, a6d0 <_ZN4llvm7IntInit3getEl+0x38>
    a7e0:	b	a6e8 <_ZN4llvm7IntInit3getEl+0x50>
    a7e4:	mov	x0, x22
    a7e8:	bl	0 <__cxa_guard_acquire>
    a7ec:	cbz	w0, a6c0 <_ZN4llvm7IntInit3getEl+0x28>
    a7f0:	str	x23, [sp, #48]
    a7f4:	add	x23, x19, #0x268
    a7f8:	add	x19, x19, #0x270
    a7fc:	mov	x0, x22
    a800:	str	wzr, [x23, #8]
    a804:	stp	xzr, x19, [x23, #16]
    a808:	stp	x19, xzr, [x23, #32]
    a80c:	bl	0 <__cxa_guard_release>
    a810:	mov	x1, x23
    a814:	adrp	x2, 0 <__dso_handle>
    a818:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a81c:	add	x2, x2, #0x0
    a820:	add	x0, x0, #0x0
    a824:	bl	0 <__cxa_atexit>
    a828:	ldr	x23, [sp, #48]
    a82c:	b	a6c0 <_ZN4llvm7IntInit3getEl+0x28>
    a830:	mov	x0, x19
    a834:	mov	x19, x3
    a838:	bl	0 <_ZdlPv>
    a83c:	b	a704 <_ZN4llvm7IntInit3getEl+0x6c>
    a840:	ldr	x0, [x1, #32]
    a844:	ldr	x1, [x19, #32]
    a848:	cmp	x1, x0
    a84c:	cset	w0, lt  // lt = tstop
    a850:	b	a764 <_ZN4llvm7IntInit3getEl+0xcc>
    a854:	nop

000000000000a858 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE>:
    a858:	stp	x29, x30, [sp, #-16]!
    a85c:	mov	x29, sp
    a860:	cbz	x1, a91c <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xc4>
    a864:	mov	x2, x0
    a868:	ldr	w0, [x1, #8]
    a86c:	cbnz	w0, a88c <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x34>
    a870:	ldr	w1, [x2, #32]
    a874:	mov	x0, #0x0                   	// #0
    a878:	cmp	w1, #0x1
    a87c:	b.ne	a884 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.any
    a880:	ldr	x0, [x2, #40]
    a884:	ldp	x29, x30, [sp], #16
    a888:	ret
    a88c:	cmp	w0, #0x1
    a890:	b.eq	a8f8 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xa0>  // b.none
    a894:	cmp	w0, #0x3
    a898:	b.ne	a8ec <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x94>  // b.any
    a89c:	ldr	w6, [x2, #32]
    a8a0:	cbz	w6, a910 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xb8>
    a8a4:	add	x2, x2, #0x28
    a8a8:	sub	w7, w6, #0x1
    a8ac:	mov	x1, #0x0                   	// #0
    a8b0:	mov	x0, #0x0                   	// #0
    a8b4:	b	a8d8 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x80>
    a8b8:	ldrb	w3, [x3, #24]
    a8bc:	cmp	x7, x1
    a8c0:	lsl	x3, x3, x1
    a8c4:	orr	x0, x0, x3
    a8c8:	b.eq	a914 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xbc>  // b.none
    a8cc:	add	x1, x1, #0x1
    a8d0:	cmp	w6, w1
    a8d4:	b.ls	a940 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xe8>  // b.plast
    a8d8:	ldr	x3, [x2, x1, lsl #3]
    a8dc:	cbz	x3, a920 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xc8>
    a8e0:	ldrb	w4, [x3, #8]
    a8e4:	cmp	w4, #0x2
    a8e8:	b.eq	a8b8 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x60>  // b.none
    a8ec:	mov	x0, #0x0                   	// #0
    a8f0:	ldp	x29, x30, [sp], #16
    a8f4:	ret
    a8f8:	ldr	w0, [x2, #32]
    a8fc:	ldr	w1, [x1, #24]
    a900:	ldp	x29, x30, [sp], #16
    a904:	cmp	w1, w0
    a908:	csel	x0, x2, xzr, eq  // eq = none
    a90c:	ret
    a910:	mov	x0, #0x0                   	// #0
    a914:	ldp	x29, x30, [sp], #16
    a918:	b	a698 <_ZN4llvm7IntInit3getEl>
    a91c:	bl	608 <_ZN4llvm3isaINS_8BitRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    a920:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a924:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a928:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a92c:	add	x3, x3, #0x0
    a930:	add	x1, x1, #0x0
    a934:	add	x0, x0, #0x0
    a938:	mov	w2, #0x69                  	// #105
    a93c:	bl	0 <__assert_fail>
    a940:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a944:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a948:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    a94c:	add	x3, x3, #0x0
    a950:	add	x1, x1, #0x0
    a954:	add	x0, x0, #0x0
    a958:	mov	w2, #0x22e                 	// #558
    a95c:	bl	0 <__assert_fail>

000000000000a960 <_ZNK4llvm9IsAOpInit4FoldEv>:
    a960:	stp	x29, x30, [sp, #-32]!
    a964:	mov	x29, sp
    a968:	stp	x19, x20, [sp, #16]
    a96c:	ldr	x20, [x0, #40]
    a970:	cbz	x20, aa18 <_ZNK4llvm9IsAOpInit4FoldEv+0xb8>
    a974:	ldrb	w1, [x20, #8]
    a978:	mov	x19, x0
    a97c:	sub	w1, w1, #0x1
    a980:	and	w1, w1, #0xff
    a984:	cmp	w1, #0x16
    a988:	b.ls	a99c <_ZNK4llvm9IsAOpInit4FoldEv+0x3c>  // b.plast
    a98c:	mov	x0, x19
    a990:	ldp	x19, x20, [sp, #16]
    a994:	ldp	x29, x30, [sp], #32
    a998:	ret
    a99c:	ldr	x1, [x0, #32]
    a9a0:	ldr	x0, [x20, #16]
    a9a4:	ldr	x2, [x0]
    a9a8:	ldr	x2, [x2, #24]
    a9ac:	blr	x2
    a9b0:	tst	w0, #0xff
    a9b4:	b.ne	aa08 <_ZNK4llvm9IsAOpInit4FoldEv+0xa8>  // b.any
    a9b8:	ldr	x0, [x19, #32]
    a9bc:	cbz	x0, aa38 <_ZNK4llvm9IsAOpInit4FoldEv+0xd8>
    a9c0:	ldr	w1, [x0, #8]
    a9c4:	cmp	w1, #0x7
    a9c8:	b.ne	a9f8 <_ZNK4llvm9IsAOpInit4FoldEv+0x98>  // b.any
    a9cc:	ldr	x2, [x0]
    a9d0:	ldr	x1, [x20, #16]
    a9d4:	ldr	x2, [x2, #24]
    a9d8:	blr	x2
    a9dc:	tst	w0, #0xff
    a9e0:	b.eq	a9f8 <_ZNK4llvm9IsAOpInit4FoldEv+0x98>  // b.none
    a9e4:	ldr	x0, [x19, #40]
    a9e8:	cbz	x0, aa3c <_ZNK4llvm9IsAOpInit4FoldEv+0xdc>
    a9ec:	ldrb	w0, [x0, #8]
    a9f0:	cmp	w0, #0x6
    a9f4:	b.ne	a98c <_ZNK4llvm9IsAOpInit4FoldEv+0x2c>  // b.any
    a9f8:	ldp	x19, x20, [sp, #16]
    a9fc:	mov	x0, #0x0                   	// #0
    aa00:	ldp	x29, x30, [sp], #32
    aa04:	b	a698 <_ZN4llvm7IntInit3getEl>
    aa08:	ldp	x19, x20, [sp, #16]
    aa0c:	mov	x0, #0x1                   	// #1
    aa10:	ldp	x29, x30, [sp], #32
    aa14:	b	a698 <_ZN4llvm7IntInit3getEl>
    aa18:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aa1c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aa20:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    aa24:	add	x3, x3, #0x0
    aa28:	add	x1, x1, #0x0
    aa2c:	add	x0, x0, #0x0
    aa30:	mov	w2, #0x69                  	// #105
    aa34:	bl	0 <__assert_fail>
    aa38:	bl	658 <_ZN4llvm13isa_impl_wrapINS_11RecordRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    aa3c:	bl	6a8 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

000000000000aa40 <_ZNK4llvm9IsAOpInit17resolveReferencesERNS_8ResolverE>:
    aa40:	stp	x29, x30, [sp, #-32]!
    aa44:	mov	x29, sp
    aa48:	str	x19, [sp, #16]
    aa4c:	mov	x19, x0
    aa50:	ldr	x0, [x0, #40]
    aa54:	ldr	x2, [x0]
    aa58:	ldr	x2, [x2, #96]
    aa5c:	blr	x2
    aa60:	ldr	x2, [x19, #40]
    aa64:	cmp	x2, x0
    aa68:	b.eq	aa84 <_ZNK4llvm9IsAOpInit17resolveReferencesERNS_8ResolverE+0x44>  // b.none
    aa6c:	mov	x1, x0
    aa70:	ldr	x0, [x19, #32]
    aa74:	bl	86e8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>
    aa78:	ldr	x19, [sp, #16]
    aa7c:	ldp	x29, x30, [sp], #32
    aa80:	b	a960 <_ZNK4llvm9IsAOpInit4FoldEv>
    aa84:	mov	x0, x19
    aa88:	ldr	x19, [sp, #16]
    aa8c:	ldp	x29, x30, [sp], #32
    aa90:	ret
    aa94:	nop

000000000000aa98 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE>:
    aa98:	stp	x29, x30, [sp, #-32]!
    aa9c:	mov	x29, sp
    aaa0:	cbz	x1, ab0c <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x74>
    aaa4:	mov	x2, x0
    aaa8:	ldr	w0, [x1, #8]
    aaac:	cbz	w0, ab00 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x68>
    aab0:	cmp	w0, #0x3
    aab4:	b.eq	aacc <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x34>  // b.none
    aab8:	cmp	w0, #0x1
    aabc:	mov	x0, #0x0                   	// #0
    aac0:	b.eq	aadc <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x44>  // b.none
    aac4:	ldp	x29, x30, [sp], #32
    aac8:	ret
    aacc:	ldrb	w0, [x2, #24]
    aad0:	bl	a698 <_ZN4llvm7IntInit3getEl>
    aad4:	ldp	x29, x30, [sp], #32
    aad8:	ret
    aadc:	ldr	w1, [x1, #24]
    aae0:	cmp	w1, #0x1
    aae4:	b.ne	aac4 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.any
    aae8:	add	x0, sp, #0x18
    aaec:	mov	x1, #0x1                   	// #1
    aaf0:	str	x2, [sp, #24]
    aaf4:	bl	73c8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    aaf8:	ldp	x29, x30, [sp], #32
    aafc:	ret
    ab00:	mov	x0, x2
    ab04:	ldp	x29, x30, [sp], #32
    ab08:	ret
    ab0c:	bl	608 <_ZN4llvm3isaINS_8BitRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

000000000000ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>:
    ab10:	stp	x29, x30, [sp, #-96]!
    ab14:	mov	x29, sp
    ab18:	stp	x21, x22, [sp, #32]
    ab1c:	adrp	x22, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ab20:	add	x21, x22, #0x0
    ab24:	stp	x19, x20, [sp, #16]
    ab28:	mov	x19, x1
    ab2c:	add	x20, x21, #0x2a0
    ab30:	stp	x23, x24, [sp, #48]
    ab34:	mov	x23, x0
    ab38:	stp	x25, x26, [sp, #64]
    ab3c:	ldarb	w0, [x20]
    ab40:	tbz	w0, #0, ac9c <_ZN4llvm10StringInit3getENS_9StringRefE+0x18c>
    ab44:	add	x21, x22, #0x0
    ab48:	mov	x1, x23
    ab4c:	add	x25, x21, #0x2b0
    ab50:	mov	x2, x19
    ab54:	mov	x0, x25
    ab58:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    ab5c:	ldr	x24, [x21, #688]
    ab60:	mov	w26, w0
    ab64:	mov	x20, x26
    ab68:	ldr	x0, [x24, x26, lsl #3]
    ab6c:	add	x1, x24, w26, uxtw #3
    ab70:	cbz	x0, ac04 <_ZN4llvm10StringInit3getENS_9StringRefE+0xf4>
    ab74:	cmn	x0, #0x8
    ab78:	b.eq	abf8 <_ZN4llvm10StringInit3getENS_9StringRefE+0xe8>  // b.none
    ab7c:	add	x0, sp, #0x58
    ab80:	mov	w2, #0x0                   	// #0
    ab84:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ab88:	ldr	x0, [sp, #88]
    ab8c:	ldr	x19, [x0]
    ab90:	ldr	x0, [x19, #8]
    ab94:	cbnz	x0, ac84 <_ZN4llvm10StringInit3getENS_9StringRefE+0x174>
    ab98:	mov	x20, x19
    ab9c:	add	x0, x22, #0x0
    aba0:	mov	w2, #0x4                   	// #4
    aba4:	mov	x1, #0x28                  	// #40
    aba8:	add	x0, x0, #0xa0
    abac:	ldr	x21, [x20], #16
    abb0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    abb4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    abb8:	adrp	x2, 3e0 <_ZNK4llvm10CondOpInit10isCompleteEv+0x40>
    abbc:	mov	w3, #0x12                  	// #18
    abc0:	strh	w3, [x0, #8]
    abc4:	ldr	x1, [x1]
    abc8:	str	x21, [x0, #32]
    abcc:	ldr	x2, [x2]
    abd0:	add	x1, x1, #0x10
    abd4:	str	x1, [x0]
    abd8:	stp	x2, x20, [x0, #16]
    abdc:	str	x0, [x19, #8]
    abe0:	ldp	x19, x20, [sp, #16]
    abe4:	ldp	x21, x22, [sp, #32]
    abe8:	ldp	x23, x24, [sp, #48]
    abec:	ldp	x25, x26, [sp, #64]
    abf0:	ldp	x29, x30, [sp], #96
    abf4:	ret
    abf8:	ldr	w0, [x25, #16]
    abfc:	sub	w0, w0, #0x1
    ac00:	str	w0, [x25, #16]
    ac04:	add	x0, x22, #0x0
    ac08:	add	x1, x19, #0x11
    ac0c:	mov	w2, #0x3                   	// #3
    ac10:	ldr	x0, [x0, #712]
    ac14:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ac18:	stp	x19, xzr, [x0]
    ac1c:	mov	x21, x0
    ac20:	add	x3, x0, #0x10
    ac24:	cbnz	x19, ace8 <_ZN4llvm10StringInit3getENS_9StringRefE+0x1d8>
    ac28:	add	x23, x22, #0x0
    ac2c:	strb	wzr, [x3, x19]
    ac30:	add	x0, x23, #0x2b0
    ac34:	str	x21, [x24, x26, lsl #3]
    ac38:	ldr	w3, [x0, #16]
    ac3c:	ldp	w2, w1, [x0, #8]
    ac40:	add	w1, w1, #0x1
    ac44:	str	w1, [x0, #12]
    ac48:	add	w1, w1, w3
    ac4c:	cmp	w1, w2
    ac50:	b.hi	ad00 <_ZN4llvm10StringInit3getENS_9StringRefE+0x1f0>  // b.pmore
    ac54:	mov	w1, w20
    ac58:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    ac5c:	ldr	x1, [x23, #688]
    ac60:	mov	w3, w0
    ac64:	mov	w2, #0x0                   	// #0
    ac68:	add	x0, sp, #0x58
    ac6c:	add	x1, x1, w3, uxtw #3
    ac70:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ac74:	ldr	x0, [sp, #88]
    ac78:	ldr	x19, [x0]
    ac7c:	ldr	x0, [x19, #8]
    ac80:	cbz	x0, ab98 <_ZN4llvm10StringInit3getENS_9StringRefE+0x88>
    ac84:	ldp	x19, x20, [sp, #16]
    ac88:	ldp	x21, x22, [sp, #32]
    ac8c:	ldp	x23, x24, [sp, #48]
    ac90:	ldp	x25, x26, [sp, #64]
    ac94:	ldp	x29, x30, [sp], #96
    ac98:	ret
    ac9c:	mov	x0, x20
    aca0:	bl	0 <__cxa_guard_acquire>
    aca4:	cbz	w0, ab44 <_ZN4llvm10StringInit3getENS_9StringRefE+0x34>
    aca8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    acac:	add	x1, x21, #0xa0
    acb0:	add	x24, x21, #0x2b0
    acb4:	str	xzr, [x21, #688]
    acb8:	ldr	q0, [x0]
    acbc:	str	x1, [x21, #712]
    acc0:	mov	x0, x20
    acc4:	stur	q0, [x24, #8]
    acc8:	bl	0 <__cxa_guard_release>
    accc:	mov	x1, x24
    acd0:	adrp	x2, 0 <__dso_handle>
    acd4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    acd8:	add	x2, x2, #0x0
    acdc:	add	x0, x0, #0x0
    ace0:	bl	0 <__cxa_atexit>
    ace4:	b	ab44 <_ZN4llvm10StringInit3getENS_9StringRefE+0x34>
    ace8:	mov	x0, x3
    acec:	mov	x1, x23
    acf0:	mov	x2, x19
    acf4:	bl	0 <memcpy>
    acf8:	mov	x3, x0
    acfc:	b	ac28 <_ZN4llvm10StringInit3getENS_9StringRefE+0x118>
    ad00:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad04:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad08:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad0c:	add	x3, x3, #0x0
    ad10:	add	x1, x1, #0x0
    ad14:	add	x0, x0, #0x0
    ad18:	mov	w2, #0x1bb                 	// #443
    ad1c:	bl	0 <__assert_fail>

000000000000ad20 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE>:
    ad20:	cbz	x1, ad54 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x34>
    ad24:	mov	x2, x0
    ad28:	ldr	w0, [x1, #8]
    ad2c:	cmp	w0, #0x2
    ad30:	b.eq	ad4c <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.none
    ad34:	cmp	w0, #0x4
    ad38:	mov	x0, #0x0                   	// #0
    ad3c:	b.eq	ad44 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x24>  // b.none
    ad40:	ret
    ad44:	ldp	x0, x1, [x2, #24]
    ad48:	b	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    ad4c:	mov	x0, x2
    ad50:	ret
    ad54:	stp	x29, x30, [sp, #-16]!
    ad58:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad5c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad60:	mov	x29, sp
    ad64:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad68:	add	x3, x3, #0x0
    ad6c:	add	x1, x1, #0x0
    ad70:	add	x0, x0, #0x0
    ad74:	mov	w2, #0x69                  	// #105
    ad78:	bl	0 <__assert_fail>
    ad7c:	nop

000000000000ad80 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_>:
    ad80:	stp	x29, x30, [sp, #-144]!
    ad84:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ad88:	mov	x29, sp
    ad8c:	stp	x19, x20, [sp, #16]
    ad90:	ldr	d0, [x2]
    ad94:	ldp	x19, x20, [x0, #24]
    ad98:	stp	x21, x22, [sp, #32]
    ad9c:	add	x21, sp, #0x30
    ada0:	add	x2, x21, #0x10
    ada4:	str	x2, [sp, #48]
    ada8:	str	d0, [sp, #56]
    adac:	mov	x22, x1
    adb0:	cmp	x20, #0x50
    adb4:	b.hi	ae88 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x108>  // b.pmore
    adb8:	mov	x1, #0x50                  	// #80
    adbc:	cbnz	x20, ae48 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0xc8>
    adc0:	ldr	x19, [x22, #32]
    adc4:	str	w20, [sp, #56]
    adc8:	sub	x1, x1, x20
    adcc:	mov	w0, w20
    add0:	cmp	x19, x1
    add4:	ldr	x22, [x22, #24]
    add8:	b.hi	aeac <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x12c>  // b.pmore
    addc:	mov	w0, w0
    ade0:	cbz	x19, adfc <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x7c>
    ade4:	ldr	x3, [sp, #48]
    ade8:	mov	x1, x22
    adec:	mov	x2, x19
    adf0:	add	x0, x3, x0
    adf4:	bl	0 <memcpy>
    adf8:	ldr	w0, [sp, #56]
    adfc:	ldr	w2, [sp, #60]
    ae00:	add	x1, x19, x0
    ae04:	cmp	x1, x2
    ae08:	b.hi	ae68 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0xe8>  // b.pmore
    ae0c:	ldr	x0, [sp, #48]
    ae10:	str	w1, [sp, #56]
    ae14:	add	x21, x21, #0x10
    ae18:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    ae1c:	mov	x19, x0
    ae20:	ldr	x1, [sp, #48]
    ae24:	cmp	x1, x21
    ae28:	b.eq	ae34 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0xb4>  // b.none
    ae2c:	mov	x0, x1
    ae30:	bl	0 <free>
    ae34:	mov	x0, x19
    ae38:	ldp	x19, x20, [sp, #16]
    ae3c:	ldp	x21, x22, [sp, #32]
    ae40:	ldp	x29, x30, [sp], #144
    ae44:	ret
    ae48:	mov	x0, x2
    ae4c:	mov	x1, x19
    ae50:	mov	x2, x20
    ae54:	bl	0 <memcpy>
    ae58:	ldp	w0, w1, [sp, #56]
    ae5c:	add	x20, x20, x0
    ae60:	cmp	x20, x1
    ae64:	b.ls	adc0 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x40>  // b.plast
    ae68:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ae6c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ae70:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ae74:	add	x3, x3, #0x0
    ae78:	add	x1, x1, #0x0
    ae7c:	add	x0, x0, #0x0
    ae80:	mov	w2, #0x43                  	// #67
    ae84:	bl	0 <__assert_fail>
    ae88:	mov	x1, x2
    ae8c:	mov	x0, x21
    ae90:	mov	x2, x20
    ae94:	mov	x3, #0x1                   	// #1
    ae98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ae9c:	ldr	x0, [sp, #48]
    aea0:	ldr	w2, [sp, #56]
    aea4:	add	x0, x0, x2
    aea8:	b	ae4c <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0xcc>
    aeac:	mov	x0, x21
    aeb0:	add	x2, x19, x20
    aeb4:	add	x1, x21, #0x10
    aeb8:	mov	x3, #0x1                   	// #1
    aebc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    aec0:	ldr	w0, [sp, #56]
    aec4:	b	addc <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_+0x5c>

000000000000aec8 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>:
    aec8:	cbz	x0, af08 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x40>
    aecc:	ldrb	w3, [x0, #8]
    aed0:	mov	x4, x0
    aed4:	mov	x2, x1
    aed8:	cmp	w3, #0x12
    aedc:	b.eq	aef4 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x2c>  // b.none
    aee0:	adrp	x3, 3e0 <_ZNK4llvm10CondOpInit10isCompleteEv+0x40>
    aee4:	mov	x1, x4
    aee8:	mov	w0, #0x9                   	// #9
    aeec:	ldr	x3, [x3]
    aef0:	b	8838 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    aef4:	cbz	x1, af08 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x40>
    aef8:	ldrb	w3, [x1, #8]
    aefc:	cmp	w3, #0x12
    af00:	b.ne	aee0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x18>  // b.any
    af04:	b	ad80 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_>
    af08:	stp	x29, x30, [sp, #-16]!
    af0c:	mov	x29, sp
    af10:	bl	680 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    af14:	nop

000000000000af18 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>:
    af18:	sub	sp, sp, #0x290
    af1c:	stp	x29, x30, [sp]
    af20:	mov	x29, sp
    af24:	stp	x19, x20, [sp, #16]
    af28:	mov	x19, x0
    af2c:	ldrb	w0, [x0, #9]
    af30:	cmp	w0, #0x9
    af34:	b.eq	b1ac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x294>  // b.none
    af38:	b.hi	af84 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6c>  // b.pmore
    af3c:	cmp	w0, #0x7
    af40:	b.eq	b1e0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x2c8>  // b.none
    af44:	cmp	w0, #0x8
    af48:	b.ne	afcc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb4>  // b.any
    af4c:	ldr	x20, [x19, #32]
    af50:	cbz	x20, b520 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x608>
    af54:	ldrb	w0, [x20, #8]
    af58:	sub	w0, w0, #0x1
    af5c:	and	w0, w0, #0xff
    af60:	cmp	w0, #0x16
    af64:	ldr	x0, [x19, #40]
    af68:	b.ls	b7c8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8b0>  // b.plast
    af6c:	cbz	x0, bb10 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xbf8>
    af70:	mov	x0, x19
    af74:	ldp	x29, x30, [sp]
    af78:	ldp	x19, x20, [sp, #16]
    af7c:	add	sp, sp, #0x290
    af80:	ret
    af84:	cmp	w0, #0x10
    af88:	b.hi	b04c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x134>  // b.pmore
    af8c:	cmp	w0, #0xa
    af90:	b.ne	b07c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x164>  // b.any
    af94:	stp	x27, x28, [sp, #80]
    af98:	ldr	x28, [x19, #32]
    af9c:	cbz	x28, b550 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x638>
    afa0:	ldrb	w0, [x28, #8]
    afa4:	cmp	w0, #0x5
    afa8:	b.eq	b560 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x648>  // b.none
    afac:	ldr	x0, [x19, #40]
    afb0:	cbz	x0, b550 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x638>
    afb4:	ldp	x27, x28, [sp, #80]
    afb8:	mov	x0, x19
    afbc:	ldp	x29, x30, [sp]
    afc0:	ldp	x19, x20, [sp, #16]
    afc4:	add	sp, sp, #0x290
    afc8:	ret
    afcc:	cmp	w0, #0x7
    afd0:	b.eq	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>  // b.none
    afd4:	ldr	x0, [x19, #32]
    afd8:	stp	x21, x22, [sp, #32]
    afdc:	adrp	x21, 3f8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x58>
    afe0:	ldr	x2, [x0]
    afe4:	ldr	x1, [x21]
    afe8:	ldr	x2, [x2, #64]
    afec:	blr	x2
    aff0:	mov	x20, x0
    aff4:	cbz	x0, b010 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xf8>
    aff8:	ldrb	w1, [x0, #8]
    affc:	mov	x20, #0x0                   	// #0
    b000:	cmp	w1, #0x8
    b004:	b.ne	b010 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xf8>  // b.any
    b008:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b00c:	mov	x20, x0
    b010:	ldr	x0, [x19, #40]
    b014:	ldr	x1, [x21]
    b018:	ldr	x2, [x0]
    b01c:	ldr	x2, [x2, #64]
    b020:	blr	x2
    b024:	cbz	x0, b034 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x11c>
    b028:	ldrb	w1, [x0, #8]
    b02c:	cmp	w1, #0x8
    b030:	b.eq	b148 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x230>  // b.none
    b034:	mov	x0, x19
    b038:	ldp	x29, x30, [sp]
    b03c:	ldp	x19, x20, [sp, #16]
    b040:	ldp	x21, x22, [sp, #32]
    b044:	add	sp, sp, #0x290
    b048:	ret
    b04c:	cmp	w0, #0x11
    b050:	b.ne	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>  // b.any
    b054:	stp	x27, x28, [sp, #80]
    b058:	ldr	x28, [x19, #32]
    b05c:	cbz	x28, b550 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x638>
    b060:	ldrb	w1, [x28, #8]
    b064:	ldr	x0, [x19, #40]
    b068:	cmp	w1, #0x5
    b06c:	b.eq	b34c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x434>  // b.none
    b070:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b074:	ldp	x27, x28, [sp, #80]
    b078:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b07c:	ldr	x0, [x19, #32]
    b080:	stp	x21, x22, [sp, #32]
    b084:	adrp	x21, 3f8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x58>
    b088:	ldr	x2, [x0]
    b08c:	ldr	x1, [x21]
    b090:	ldr	x2, [x2, #64]
    b094:	blr	x2
    b098:	mov	x20, x0
    b09c:	cbz	x0, b0b0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x198>
    b0a0:	ldrb	w1, [x0, #8]
    b0a4:	mov	x20, #0x0                   	// #0
    b0a8:	cmp	w1, #0x8
    b0ac:	b.eq	b4cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5b4>  // b.none
    b0b0:	ldr	x0, [x19, #40]
    b0b4:	ldr	x1, [x21]
    b0b8:	ldr	x2, [x0]
    b0bc:	ldr	x2, [x2, #64]
    b0c0:	blr	x2
    b0c4:	cbz	x0, b8fc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9e4>
    b0c8:	ldrb	w1, [x0, #8]
    b0cc:	ldrb	w21, [x19, #9]
    b0d0:	cmp	w1, #0x8
    b0d4:	b.eq	b2e8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3d0>  // b.none
    b0d8:	sub	w0, w21, #0xb
    b0dc:	and	w0, w0, #0xff
    b0e0:	cmp	w0, #0x1
    b0e4:	b.hi	b034 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x11c>  // b.pmore
    b0e8:	ldr	x0, [x19, #32]
    b0ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b0f0:	mov	x20, x0
    b0f4:	ldr	x0, [x19, #40]
    b0f8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b0fc:	cmp	x20, #0x0
    b100:	cset	w1, ne  // ne = any
    b104:	cmp	x0, #0x0
    b108:	csel	w1, w1, wzr, ne  // ne = any
    b10c:	cbz	w1, b034 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x11c>
    b110:	ldr	x3, [x0, #32]
    b114:	ldr	x2, [x20, #32]
    b118:	cmp	x2, x3
    b11c:	b.eq	b988 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa70>  // b.none
    b120:	mov	w1, #0x0                   	// #0
    b124:	eor	w0, w1, #0x1
    b128:	cmp	w21, #0xb
    b12c:	and	w0, w0, #0xff
    b130:	csel	w0, w0, w1, ne  // ne = any
    b134:	nop
    b138:	bl	3010 <_ZN4llvm7BitInit3getEb>
    b13c:	mov	x19, x0
    b140:	ldp	x21, x22, [sp, #32]
    b144:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b148:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b14c:	cmp	x20, #0x0
    b150:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    b154:	b.eq	b034 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x11c>  // b.none
    b158:	ldrb	w1, [x19, #9]
    b15c:	ldr	x2, [x0, #24]
    b160:	cmp	w1, #0x3
    b164:	ldr	x3, [x20, #24]
    b168:	b.eq	b970 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa58>  // b.none
    b16c:	b.hi	b194 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x27c>  // b.pmore
    b170:	cmp	w1, #0x1
    b174:	b.eq	b510 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5f8>  // b.none
    b178:	cmp	w1, #0x2
    b17c:	and	x0, x3, x2
    b180:	b.ne	b2bc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3a4>  // b.any
    b184:	bl	a698 <_ZN4llvm7IntInit3getEl>
    b188:	mov	x19, x0
    b18c:	ldp	x21, x22, [sp, #32]
    b190:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b194:	cmp	w1, #0x5
    b198:	b.eq	b518 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x600>  // b.none
    b19c:	cmp	w1, #0x6
    b1a0:	b.ne	b2ac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x394>  // b.any
    b1a4:	lsr	x0, x3, x2
    b1a8:	b	b184 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    b1ac:	ldr	x0, [x19, #32]
    b1b0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1b4:	mov	x20, x0
    b1b8:	ldr	x0, [x19, #40]
    b1bc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1c0:	cmp	x20, #0x0
    b1c4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    b1c8:	b.eq	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>  // b.none
    b1cc:	mov	x1, x0
    b1d0:	mov	x0, x20
    b1d4:	bl	ad80 <_ZL17ConcatStringInitsPKN4llvm10StringInitES2_>
    b1d8:	mov	x19, x0
    b1dc:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b1e0:	ldr	x0, [x19, #32]
    b1e4:	stp	x21, x22, [sp, #32]
    b1e8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1ec:	mov	x20, x0
    b1f0:	ldr	x0, [x19, #40]
    b1f4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b1f8:	mov	x21, x0
    b1fc:	cmp	x20, #0x0
    b200:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    b204:	b.eq	b034 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x11c>  // b.none
    b208:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b20c:	stp	x23, x24, [sp, #48]
    b210:	mov	x23, #0x28                  	// #40
    b214:	ldr	d0, [x0]
    b218:	add	x19, sp, #0x240
    b21c:	add	x22, sp, #0x250
    b220:	add	x2, x20, x23
    b224:	mov	x0, x19
    b228:	mov	x1, x22
    b22c:	str	d0, [sp, #584]
    b230:	ldr	w3, [x20, #32]
    b234:	str	x22, [sp, #576]
    b238:	add	x3, x23, w3, uxtw #3
    b23c:	add	x3, x20, x3
    b240:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b244:	ldr	w4, [sp, #584]
    b248:	add	x2, x21, x23
    b24c:	ldr	w3, [x21, #32]
    b250:	mov	x0, x19
    b254:	ldr	x1, [sp, #576]
    b258:	add	x3, x23, w3, uxtw #3
    b25c:	add	x3, x21, x3
    b260:	add	x1, x1, x4, lsl #3
    b264:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b268:	ldr	x0, [x20, #16]
    b26c:	ldr	w21, [sp, #584]
    b270:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b274:	ldr	x2, [x0, #24]
    b278:	mov	x1, x21
    b27c:	ldr	x19, [sp, #576]
    b280:	mov	x0, x19
    b284:	bl	6b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    b288:	ldr	x1, [sp, #576]
    b28c:	mov	x19, x0
    b290:	cmp	x1, x22
    b294:	b.eq	b8f0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9d8>  // b.none
    b298:	mov	x0, x1
    b29c:	bl	0 <free>
    b2a0:	ldp	x21, x22, [sp, #32]
    b2a4:	ldp	x23, x24, [sp, #48]
    b2a8:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b2ac:	cmp	w1, #0x4
    b2b0:	b.ne	b2c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x3ac>  // b.any
    b2b4:	lsl	x0, x3, x2
    b2b8:	b	b184 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    b2bc:	add	x0, x3, x2
    b2c0:	cbz	w1, b184 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    b2c4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b2c8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b2cc:	add	x1, x1, #0x0
    b2d0:	add	x0, x0, #0x0
    b2d4:	mov	w2, #0x404                 	// #1028
    b2d8:	stp	x23, x24, [sp, #48]
    b2dc:	stp	x25, x26, [sp, #64]
    b2e0:	stp	x27, x28, [sp, #80]
    b2e4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b2e8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b2ec:	cmp	x20, #0x0
    b2f0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    b2f4:	b.eq	b0d8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x1c0>  // b.none
    b2f8:	cmp	w21, #0xe
    b2fc:	b.eq	b95c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa44>  // b.none
    b300:	b.hi	b328 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x410>  // b.pmore
    b304:	cmp	w21, #0xc
    b308:	b.eq	b4fc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5e4>  // b.none
    b30c:	cmp	w21, #0xd
    b310:	b.ne	b48c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x574>  // b.any
    b314:	ldr	x0, [x0, #24]
    b318:	ldr	x1, [x20, #24]
    b31c:	cmp	x1, x0
    b320:	cset	w0, le
    b324:	b	b138 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    b328:	cmp	w21, #0xf
    b32c:	b.eq	b4d8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5c0>  // b.none
    b330:	cmp	w21, #0x10
    b334:	b.ne	ba18 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb00>  // b.any
    b338:	ldr	x0, [x0, #24]
    b33c:	ldr	x1, [x20, #24]
    b340:	cmp	x1, x0
    b344:	cset	w0, gt
    b348:	b	b138 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    b34c:	stp	x23, x24, [sp, #48]
    b350:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b354:	mov	x24, x0
    b358:	cbz	x0, b578 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x660>
    b35c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b360:	add	x20, sp, #0x1f0
    b364:	add	x23, sp, #0x240
    b368:	add	x2, x20, #0x10
    b36c:	ldr	d0, [x0]
    b370:	stp	x25, x26, [sp, #64]
    b374:	add	x26, x23, #0x10
    b378:	str	d0, [sp, #504]
    b37c:	str	d0, [sp, #584]
    b380:	ldr	w19, [x28, #48]
    b384:	str	x2, [sp, #496]
    b388:	str	x26, [sp, #576]
    b38c:	cbz	w19, b978 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa60>
    b390:	mov	w0, w19
    b394:	add	x25, x28, #0x38
    b398:	mov	x27, #0x0                   	// #0
    b39c:	stp	x21, x22, [sp, #32]
    b3a0:	add	x22, sp, #0x1a0
    b3a4:	mov	x21, #0x38                  	// #56
    b3a8:	b	b3b0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x498>
    b3ac:	ldr	w0, [x28, #48]
    b3b0:	cmp	w27, w0
    b3b4:	b.cs	b9ac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa94>  // b.hs, b.nlast
    b3b8:	ldr	x2, [x25, x27, lsl #3]
    b3bc:	mov	x1, x22
    b3c0:	mov	x0, x20
    b3c4:	str	x2, [sp, #416]
    b3c8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b3cc:	ldr	w0, [x28, #52]
    b3d0:	lsl	x1, x27, #3
    b3d4:	cmp	w27, w0
    b3d8:	b.cs	b9f8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae0>  // b.hs, b.nlast
    b3dc:	ldr	w0, [x28, #48]
    b3e0:	add	x1, x28, x1
    b3e4:	ldr	w2, [sp, #584]
    b3e8:	ldr	w3, [sp, #588]
    b3ec:	add	x0, x21, w0, uxtw #3
    b3f0:	cmp	w2, w3
    b3f4:	ldr	x4, [x1, x0]
    b3f8:	b.cs	b4a8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x590>  // b.hs, b.nlast
    b3fc:	ldr	x0, [sp, #576]
    b400:	str	x4, [x0, w2, uxtw #3]
    b404:	ldr	w5, [sp, #584]
    b408:	ldr	w1, [sp, #588]
    b40c:	mov	w0, w5
    b410:	add	x0, x0, #0x1
    b414:	cmp	x0, x1
    b418:	b.hi	b9d8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xac0>  // b.pmore
    b41c:	add	w5, w5, #0x1
    b420:	str	w5, [sp, #584]
    b424:	add	x27, x27, #0x1
    b428:	cmp	w19, w27
    b42c:	b.ne	b3ac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x494>  // b.any
    b430:	ldp	x21, x22, [sp, #32]
    b434:	ldr	w3, [sp, #504]
    b438:	ldr	x2, [sp, #496]
    b43c:	ldr	x4, [sp, #576]
    b440:	mov	x1, #0x0                   	// #0
    b444:	mov	x0, x24
    b448:	bl	60e8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    b44c:	ldr	x1, [sp, #576]
    b450:	add	x23, x23, #0x10
    b454:	mov	x19, x0
    b458:	cmp	x1, x23
    b45c:	b.eq	b468 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x550>  // b.none
    b460:	mov	x0, x1
    b464:	bl	0 <free>
    b468:	ldr	x0, [sp, #496]
    b46c:	add	x20, x20, #0x10
    b470:	cmp	x0, x20
    b474:	b.eq	b4ec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5d4>  // b.none
    b478:	bl	0 <free>
    b47c:	ldp	x23, x24, [sp, #48]
    b480:	ldp	x25, x26, [sp, #64]
    b484:	ldp	x27, x28, [sp, #80]
    b488:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b48c:	cmp	w21, #0xb
    b490:	b.ne	ba18 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb00>  // b.any
    b494:	ldr	x0, [x0, #24]
    b498:	ldr	x1, [x20, #24]
    b49c:	cmp	x1, x0
    b4a0:	cset	w0, eq  // eq = none
    b4a4:	b	b138 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    b4a8:	mov	x2, #0x0                   	// #0
    b4ac:	mov	x1, x26
    b4b0:	mov	x0, x23
    b4b4:	mov	x3, #0x8                   	// #8
    b4b8:	str	x4, [sp, #96]
    b4bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b4c0:	ldr	w2, [sp, #584]
    b4c4:	ldr	x4, [sp, #96]
    b4c8:	b	b3fc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x4e4>
    b4cc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b4d0:	mov	x20, x0
    b4d4:	b	b0b0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x198>
    b4d8:	ldr	x0, [x0, #24]
    b4dc:	ldr	x1, [x20, #24]
    b4e0:	cmp	x1, x0
    b4e4:	cset	w0, ge  // ge = tcont
    b4e8:	b	b138 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    b4ec:	ldp	x23, x24, [sp, #48]
    b4f0:	ldp	x25, x26, [sp, #64]
    b4f4:	ldp	x27, x28, [sp, #80]
    b4f8:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b4fc:	ldr	x0, [x0, #24]
    b500:	ldr	x1, [x20, #24]
    b504:	cmp	x1, x0
    b508:	cset	w0, ne  // ne = any
    b50c:	b	b138 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    b510:	mul	x0, x3, x2
    b514:	b	b184 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    b518:	asr	x0, x3, x2
    b51c:	b	b184 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    b520:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b524:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b528:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b52c:	add	x3, x3, #0x0
    b530:	add	x1, x1, #0x0
    b534:	add	x0, x0, #0x0
    b538:	mov	w2, #0x69                  	// #105
    b53c:	stp	x21, x22, [sp, #32]
    b540:	stp	x23, x24, [sp, #48]
    b544:	stp	x25, x26, [sp, #64]
    b548:	stp	x27, x28, [sp, #80]
    b54c:	bl	0 <__assert_fail>
    b550:	stp	x23, x24, [sp, #48]
    b554:	stp	x21, x22, [sp, #32]
    b558:	stp	x25, x26, [sp, #64]
    b55c:	bl	770 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    b560:	stp	x23, x24, [sp, #48]
    b564:	ldr	x23, [x19, #40]
    b568:	cbz	x23, b554 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x63c>
    b56c:	ldrb	w0, [x23, #8]
    b570:	cmp	w0, #0x5
    b574:	b.eq	b584 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x66c>  // b.none
    b578:	ldp	x23, x24, [sp, #48]
    b57c:	ldp	x27, x28, [sp, #80]
    b580:	b	afb8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa0>
    b584:	ldr	x20, [x28, #32]
    b588:	stp	x21, x22, [sp, #32]
    b58c:	mov	x0, x20
    b590:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b594:	ldr	x21, [x23, #32]
    b598:	mov	x22, x0
    b59c:	str	x22, [sp, #96]
    b5a0:	mov	x0, x21
    b5a4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b5a8:	cbz	x22, b928 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa10>
    b5ac:	cbnz	x0, b5cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6b4>
    b5b0:	cbz	x21, bb24 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc0c>
    b5b4:	ldrb	w0, [x21, #8]
    b5b8:	cmp	w0, #0x18
    b5bc:	b.eq	b7b0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x898>  // b.none
    b5c0:	ldp	x21, x22, [sp, #32]
    b5c4:	ldp	x23, x24, [sp, #48]
    b5c8:	b	b57c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x664>
    b5cc:	ldr	x0, [x0, #24]
    b5d0:	stp	x25, x26, [sp, #64]
    b5d4:	ldr	x1, [x22, #24]
    b5d8:	cmp	x1, x0
    b5dc:	b.ne	ba3c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb24>  // b.any
    b5e0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b5e4:	add	x20, sp, #0x100
    b5e8:	add	x24, sp, #0x150
    b5ec:	ldr	d0, [x0]
    b5f0:	add	x26, x24, #0x10
    b5f4:	add	x0, x20, #0x10
    b5f8:	str	x0, [sp, #256]
    b5fc:	str	d0, [sp, #264]
    b600:	str	d0, [sp, #344]
    b604:	ldr	w19, [x28, #48]
    b608:	str	x26, [sp, #336]
    b60c:	cbz	w19, b9a4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa8c>
    b610:	mov	w0, w19
    b614:	add	x25, x28, #0x38
    b618:	add	x22, sp, #0x240
    b61c:	mov	x27, #0x0                   	// #0
    b620:	mov	x21, #0x38                  	// #56
    b624:	b	b62c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x714>
    b628:	ldr	w0, [x28, #48]
    b62c:	cmp	w0, w27
    b630:	b.ls	b9ac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa94>  // b.plast
    b634:	ldr	x2, [x25, x27, lsl #3]
    b638:	mov	x1, x22
    b63c:	mov	x0, x20
    b640:	str	x2, [sp, #576]
    b644:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b648:	ldr	w0, [x28, #52]
    b64c:	lsl	x1, x27, #3
    b650:	cmp	w27, w0
    b654:	b.cs	b9f8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae0>  // b.hs, b.nlast
    b658:	ldr	w0, [x28, #48]
    b65c:	add	x1, x28, x1
    b660:	ldr	w2, [sp, #344]
    b664:	ldr	w3, [sp, #348]
    b668:	add	x0, x21, w0, uxtw #3
    b66c:	cmp	w2, w3
    b670:	ldr	x5, [x1, x0]
    b674:	b.cs	b8b0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x998>  // b.hs, b.nlast
    b678:	ldr	x0, [sp, #336]
    b67c:	str	x5, [x0, w2, uxtw #3]
    b680:	ldr	w5, [sp, #344]
    b684:	ldr	w1, [sp, #348]
    b688:	mov	w0, w5
    b68c:	add	x0, x0, #0x1
    b690:	cmp	x0, x1
    b694:	b.hi	b9d8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xac0>  // b.pmore
    b698:	add	w5, w5, #0x1
    b69c:	str	w5, [sp, #344]
    b6a0:	add	x27, x27, #0x1
    b6a4:	cmp	w19, w27
    b6a8:	b.ne	b628 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x710>  // b.any
    b6ac:	ldr	w19, [x23, #48]
    b6b0:	cbz	w19, b754 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x83c>
    b6b4:	mov	w0, w19
    b6b8:	add	x25, x23, #0x38
    b6bc:	add	x22, sp, #0x240
    b6c0:	add	x26, x24, #0x10
    b6c4:	mov	x27, #0x0                   	// #0
    b6c8:	mov	x21, #0x38                  	// #56
    b6cc:	b	b6d4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7bc>
    b6d0:	ldr	w0, [x23, #48]
    b6d4:	cmp	w27, w0
    b6d8:	b.cs	b9ac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa94>  // b.hs, b.nlast
    b6dc:	ldr	x2, [x25, x27, lsl #3]
    b6e0:	mov	x1, x22
    b6e4:	mov	x0, x20
    b6e8:	str	x2, [sp, #576]
    b6ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b6f0:	ldr	w0, [x23, #52]
    b6f4:	lsl	x1, x27, #3
    b6f8:	cmp	w27, w0
    b6fc:	b.cs	b9f8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae0>  // b.hs, b.nlast
    b700:	ldr	w0, [x23, #48]
    b704:	add	x1, x23, x1
    b708:	ldr	w2, [sp, #344]
    b70c:	ldr	w3, [sp, #348]
    b710:	add	x0, x21, w0, uxtw #3
    b714:	cmp	w2, w3
    b718:	ldr	x28, [x1, x0]
    b71c:	b.cs	b8d4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9bc>  // b.hs, b.nlast
    b720:	ldr	x0, [sp, #336]
    b724:	str	x28, [x0, w2, uxtw #3]
    b728:	ldr	w5, [sp, #344]
    b72c:	ldr	w1, [sp, #348]
    b730:	mov	w0, w5
    b734:	add	x0, x0, #0x1
    b738:	cmp	x0, x1
    b73c:	b.hi	b9d8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xac0>  // b.pmore
    b740:	add	w5, w5, #0x1
    b744:	str	w5, [sp, #344]
    b748:	add	x27, x27, #0x1
    b74c:	cmp	w19, w27
    b750:	b.ne	b6d0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7b8>  // b.any
    b754:	ldr	w3, [sp, #264]
    b758:	mov	x1, #0x0                   	// #0
    b75c:	ldr	x0, [sp, #96]
    b760:	add	x24, x24, #0x10
    b764:	ldr	x2, [sp, #256]
    b768:	ldr	x4, [sp, #336]
    b76c:	bl	60e8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    b770:	mov	x19, x0
    b774:	ldr	x1, [sp, #336]
    b778:	cmp	x1, x24
    b77c:	b.eq	b788 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x870>  // b.none
    b780:	mov	x0, x1
    b784:	bl	0 <free>
    b788:	ldr	x0, [sp, #256]
    b78c:	add	x20, x20, #0x10
    b790:	cmp	x0, x20
    b794:	b.eq	b948 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa30>  // b.none
    b798:	bl	0 <free>
    b79c:	ldp	x21, x22, [sp, #32]
    b7a0:	ldp	x23, x24, [sp, #48]
    b7a4:	ldp	x25, x26, [sp, #64]
    b7a8:	ldp	x27, x28, [sp, #80]
    b7ac:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b7b0:	ldr	x0, [sp, #96]
    b7b4:	stp	x25, x26, [sp, #64]
    b7b8:	cbnz	x0, b5e0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6c8>
    b7bc:	bl	2f78 <_ZN4llvm9UnsetInit3getEv>
    b7c0:	str	x0, [sp, #96]
    b7c4:	b	b5e0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6c8>
    b7c8:	cbz	x0, bb10 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xbf8>
    b7cc:	ldrb	w1, [x0, #8]
    b7d0:	stp	x21, x22, [sp, #32]
    b7d4:	cmp	w1, #0x8
    b7d8:	b.ne	b034 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x11c>  // b.any
    b7dc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b7e0:	add	x21, sp, #0x1a0
    b7e4:	ldr	x19, [x0, #24]
    b7e8:	ldr	d0, [x1]
    b7ec:	add	x1, x21, #0x10
    b7f0:	str	x1, [sp, #416]
    b7f4:	mov	x5, x1
    b7f8:	cmp	x19, #0x8
    b7fc:	str	d0, [sp, #424]
    b800:	b.hi	b904 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9ec>  // b.pmore
    b804:	ubfiz	x3, x19, #3, #32
    b808:	str	w19, [sp, #424]
    b80c:	add	x0, x5, x3
    b810:	and	x1, x19, #0xffffffff
    b814:	cmp	x5, x0
    b818:	b.eq	b884 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x96c>  // b.none
    b81c:	sub	x3, x3, #0x8
    b820:	mov	x2, x5
    b824:	cmp	x3, #0x10
    b828:	lsr	x3, x3, #3
    b82c:	add	x3, x3, #0x1
    b830:	b.ls	b85c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x944>  // b.plast
    b834:	lsr	x4, x3, #1
    b838:	dup	v0.2d, x20
    b83c:	add	x4, x5, x4, lsl #4
    b840:	str	q0, [x2], #16
    b844:	cmp	x2, x4
    b848:	b.ne	b840 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x928>  // b.any
    b84c:	and	x2, x3, #0xfffffffffffffffe
    b850:	cmp	x2, x3
    b854:	add	x5, x5, x2, lsl #3
    b858:	b.eq	b880 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x968>  // b.none
    b85c:	mov	x2, x5
    b860:	str	x20, [x2], #8
    b864:	cmp	x0, x2
    b868:	b.eq	b880 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x968>  // b.none
    b86c:	str	x20, [x5, #8]
    b870:	add	x2, x5, #0x10
    b874:	cmp	x0, x2
    b878:	b.eq	b880 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x968>  // b.none
    b87c:	str	x20, [x5, #16]
    b880:	ldr	x0, [sp, #416]
    b884:	add	x21, x21, #0x10
    b888:	ldr	x2, [x20, #16]
    b88c:	bl	6b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    b890:	mov	x19, x0
    b894:	ldr	x1, [sp, #416]
    b898:	cmp	x1, x21
    b89c:	b.eq	b034 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x11c>  // b.none
    b8a0:	mov	x0, x1
    b8a4:	bl	0 <free>
    b8a8:	ldp	x21, x22, [sp, #32]
    b8ac:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b8b0:	mov	x2, #0x0                   	// #0
    b8b4:	mov	x1, x26
    b8b8:	mov	x0, x24
    b8bc:	mov	x3, #0x8                   	// #8
    b8c0:	str	x5, [sp, #104]
    b8c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b8c8:	ldr	w2, [sp, #344]
    b8cc:	ldr	x5, [sp, #104]
    b8d0:	b	b678 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x760>
    b8d4:	mov	x2, #0x0                   	// #0
    b8d8:	mov	x1, x26
    b8dc:	mov	x0, x24
    b8e0:	mov	x3, #0x8                   	// #8
    b8e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b8e8:	ldr	w2, [sp, #344]
    b8ec:	b	b720 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x808>
    b8f0:	ldp	x21, x22, [sp, #32]
    b8f4:	ldp	x23, x24, [sp, #48]
    b8f8:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b8fc:	ldrb	w21, [x19, #9]
    b900:	b	b0d8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x1c0>
    b904:	mov	x0, x21
    b908:	mov	x2, x19
    b90c:	mov	x3, #0x8                   	// #8
    b910:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b914:	ldr	w0, [sp, #428]
    b918:	cmp	x19, x0
    b91c:	b.hi	b9cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xab4>  // b.pmore
    b920:	ldr	x5, [sp, #416]
    b924:	b	b804 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8ec>
    b928:	cbz	x20, bb24 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc0c>
    b92c:	ldrb	w1, [x20, #8]
    b930:	cmp	w1, #0x18
    b934:	b.ne	b5c0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6a8>  // b.any
    b938:	cbz	x0, b5b0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x698>
    b93c:	stp	x25, x26, [sp, #64]
    b940:	str	x0, [sp, #96]
    b944:	b	b5e0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x6c8>
    b948:	ldp	x21, x22, [sp, #32]
    b94c:	ldp	x23, x24, [sp, #48]
    b950:	ldp	x25, x26, [sp, #64]
    b954:	ldp	x27, x28, [sp, #80]
    b958:	b	af70 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x58>
    b95c:	ldr	x0, [x0, #24]
    b960:	ldr	x1, [x20, #24]
    b964:	cmp	x1, x0
    b968:	cset	w0, lt  // lt = tstop
    b96c:	b	b138 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x220>
    b970:	orr	x0, x3, x2
    b974:	b	b184 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x26c>
    b978:	mov	x4, x26
    b97c:	mov	x3, #0x0                   	// #0
    b980:	mov	x5, #0x0                   	// #0
    b984:	b	b440 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x528>
    b988:	cbz	x2, b124 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x20c>
    b98c:	ldr	x1, [x0, #24]
    b990:	ldr	x0, [x20, #24]
    b994:	bl	0 <memcmp>
    b998:	cmp	w0, #0x0
    b99c:	cset	w1, eq  // eq = none
    b9a0:	b	b124 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x20c>
    b9a4:	mov	x5, #0x0                   	// #0
    b9a8:	b	b6ac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x794>
    b9ac:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b9b0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b9b4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b9b8:	add	x3, x3, #0x0
    b9bc:	add	x1, x1, #0x0
    b9c0:	add	x0, x0, #0x0
    b9c4:	mov	w2, #0x540                 	// #1344
    b9c8:	bl	0 <__assert_fail>
    b9cc:	stp	x23, x24, [sp, #48]
    b9d0:	stp	x25, x26, [sp, #64]
    b9d4:	stp	x27, x28, [sp, #80]
    b9d8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b9dc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b9e0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b9e4:	add	x3, x3, #0x0
    b9e8:	add	x1, x1, #0x0
    b9ec:	add	x0, x0, #0x0
    b9f0:	mov	w2, #0x43                  	// #67
    b9f4:	bl	0 <__assert_fail>
    b9f8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    b9fc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba00:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba04:	add	x3, x3, #0x0
    ba08:	add	x1, x1, #0x0
    ba0c:	add	x0, x0, #0x0
    ba10:	mov	w2, #0x545                 	// #1349
    ba14:	bl	0 <__assert_fail>
    ba18:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba1c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba20:	add	x1, x1, #0x0
    ba24:	add	x0, x0, #0x0
    ba28:	mov	w2, #0x3d5                 	// #981
    ba2c:	stp	x23, x24, [sp, #48]
    ba30:	stp	x25, x26, [sp, #64]
    ba34:	stp	x27, x28, [sp, #80]
    ba38:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    ba3c:	add	x19, sp, #0x70
    ba40:	add	x20, sp, #0x1f0
    ba44:	mov	x0, x19
    ba48:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba4c:	add	x1, x1, #0x0
    ba50:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba54:	mov	x8, x20
    ba58:	add	x21, sp, #0x88
    ba5c:	mov	x0, x28
    ba60:	add	x22, sp, #0xe8
    ba64:	bl	a070 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    ba68:	mov	x1, x20
    ba6c:	mov	x0, x21
    ba70:	add	x20, sp, #0xa0
    ba74:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba78:	mov	x8, x20
    ba7c:	mov	x1, x21
    ba80:	mov	x0, x19
    ba84:	add	x21, sp, #0xb8
    ba88:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba8c:	add	x19, sp, #0xd0
    ba90:	mov	x0, x21
    ba94:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ba98:	add	x1, x1, #0x0
    ba9c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    baa0:	mov	x1, x21
    baa4:	mov	x0, x20
    baa8:	mov	x8, x19
    baac:	add	x21, sp, #0x240
    bab0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bab4:	add	x20, sp, #0x100
    bab8:	mov	x8, x21
    babc:	mov	x0, x23
    bac0:	bl	a070 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    bac4:	mov	x1, x21
    bac8:	mov	x0, x22
    bacc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bad0:	add	x21, sp, #0x150
    bad4:	mov	x8, x20
    bad8:	mov	x0, x19
    badc:	mov	x1, x22
    bae0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bae4:	mov	x0, x21
    bae8:	add	x19, sp, #0x1a0
    baec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    baf0:	add	x1, x1, #0x0
    baf4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    baf8:	mov	x1, x21
    bafc:	mov	x8, x19
    bb00:	mov	x0, x20
    bb04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bb08:	mov	x0, x19
    bb0c:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    bb10:	stp	x21, x22, [sp, #32]
    bb14:	stp	x23, x24, [sp, #48]
    bb18:	stp	x25, x26, [sp, #64]
    bb1c:	stp	x27, x28, [sp, #80]
    bb20:	bl	720 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    bb24:	stp	x25, x26, [sp, #64]
    bb28:	bl	578 <_ZN4llvm3isaINS_9UnsetInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    bb2c:	nop

000000000000bb30 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE>:
    bb30:	stp	x29, x30, [sp, #-48]!
    bb34:	mov	x29, sp
    bb38:	stp	x19, x20, [sp, #16]
    bb3c:	mov	x19, x0
    bb40:	mov	x20, x1
    bb44:	ldr	x0, [x0, #32]
    bb48:	ldr	x2, [x0]
    bb4c:	ldr	x2, [x2, #96]
    bb50:	str	x21, [sp, #32]
    bb54:	blr	x2
    bb58:	mov	x21, x0
    bb5c:	ldr	x2, [x19, #40]
    bb60:	mov	x1, x20
    bb64:	mov	x0, x2
    bb68:	ldr	x2, [x2]
    bb6c:	ldr	x2, [x2, #96]
    bb70:	blr	x2
    bb74:	mov	x2, x0
    bb78:	ldr	x1, [x19, #32]
    bb7c:	cmp	x1, x21
    bb80:	b.eq	bba8 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE+0x78>  // b.none
    bb84:	ldrb	w0, [x19, #9]
    bb88:	mov	x1, x21
    bb8c:	ldr	x3, [x19, #16]
    bb90:	bl	8838 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    bb94:	ldr	x1, [x20, #8]
    bb98:	ldp	x19, x20, [sp, #16]
    bb9c:	ldr	x21, [sp, #32]
    bba0:	ldp	x29, x30, [sp], #48
    bba4:	b	af18 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    bba8:	ldr	x0, [x19, #40]
    bbac:	cmp	x0, x2
    bbb0:	b.ne	bb84 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE+0x54>  // b.any
    bbb4:	mov	x0, x19
    bbb8:	ldp	x19, x20, [sp, #16]
    bbbc:	ldr	x21, [sp, #32]
    bbc0:	ldp	x29, x30, [sp], #48
    bbc4:	ret

000000000000bbc8 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE>:
    bbc8:	stp	x29, x30, [sp, #-464]!
    bbcc:	mov	x29, sp
    bbd0:	stp	x19, x20, [sp, #16]
    bbd4:	mov	x20, x0
    bbd8:	mov	x0, x1
    bbdc:	stp	x21, x22, [sp, #32]
    bbe0:	stp	x23, x24, [sp, #48]
    bbe4:	stp	x25, x26, [sp, #64]
    bbe8:	stp	x27, x28, [sp, #80]
    bbec:	stp	x1, x2, [sp, #128]
    bbf0:	mov	x1, x2
    bbf4:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    bbf8:	ldr	w1, [x20, #80]
    bbfc:	mov	w2, #0x18                  	// #24
    bc00:	ldr	x19, [x20, #72]
    bc04:	umaddl	x1, w1, w2, x19
    bc08:	cmp	x19, x1
    bc0c:	b.ne	bc20 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x58>  // b.any
    bc10:	b	bda0 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x1d8>
    bc14:	add	x19, x19, #0x18
    bc18:	cmp	x1, x19
    bc1c:	b.eq	bda0 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x1d8>  // b.none
    bc20:	ldr	x2, [x19]
    bc24:	cmp	x0, x2
    bc28:	b.ne	bc14 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x4c>  // b.any
    bc2c:	ldr	x0, [x19, #16]
    bc30:	cbz	x0, bda0 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x1d8>
    bc34:	ldrb	w1, [x0, #8]
    bc38:	cmp	w1, #0x8
    bc3c:	b.eq	bd80 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x1b8>  // b.none
    bc40:	ldr	x3, [x20, #8]
    bc44:	add	x4, sp, #0xa8
    bc48:	mov	x0, x4
    bc4c:	ldr	w28, [x20, #16]
    bc50:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc54:	add	x1, x1, #0x0
    bc58:	stp	x3, x4, [sp, #112]
    bc5c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc60:	add	x2, sp, #0xf0
    bc64:	ldr	x0, [x20]
    bc68:	str	x2, [sp, #104]
    bc6c:	add	x21, sp, #0xc0
    bc70:	add	x27, sp, #0xd8
    bc74:	add	x26, sp, #0x108
    bc78:	add	x20, sp, #0x120
    bc7c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bc80:	mov	x5, x0
    bc84:	add	x1, sp, #0x98
    bc88:	mov	x0, x21
    bc8c:	str	x0, [sp, #96]
    bc90:	add	x24, sp, #0x138
    bc94:	ldp	x6, x5, [x5, #24]
    bc98:	stp	x6, x5, [sp, #152]
    bc9c:	add	x25, sp, #0x150
    bca0:	add	x21, sp, #0x168
    bca4:	add	x23, sp, #0x1b0
    bca8:	add	x22, sp, #0x180
    bcac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bcb0:	ldr	x4, [sp, #120]
    bcb4:	mov	x8, x27
    bcb8:	ldr	x0, [sp, #96]
    bcbc:	mov	x1, x0
    bcc0:	mov	x0, x4
    bcc4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bcc8:	ldr	x2, [sp, #104]
    bccc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bcd0:	add	x1, x1, #0x0
    bcd4:	str	x2, [sp, #96]
    bcd8:	mov	x0, x2
    bcdc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bce0:	ldr	x0, [sp, #96]
    bce4:	mov	x8, x26
    bce8:	mov	x1, x0
    bcec:	mov	x0, x27
    bcf0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bcf4:	mov	x0, x20
    bcf8:	add	x1, sp, #0x80
    bcfc:	str	x0, [sp, #96]
    bd00:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd04:	ldr	x0, [sp, #96]
    bd08:	mov	x8, x24
    bd0c:	add	x20, sp, #0x198
    bd10:	mov	x1, x0
    bd14:	mov	x0, x26
    bd18:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd1c:	mov	x0, x25
    bd20:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd24:	add	x1, x1, #0x0
    bd28:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd2c:	mov	x1, x25
    bd30:	mov	x0, x24
    bd34:	mov	x8, x21
    bd38:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd3c:	ldr	x0, [x19, #16]
    bd40:	mov	x8, x23
    bd44:	ldr	x1, [x0]
    bd48:	ldr	x1, [x1, #40]
    bd4c:	blr	x1
    bd50:	mov	x1, x23
    bd54:	mov	x0, x22
    bd58:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd5c:	mov	x1, x22
    bd60:	mov	x0, x21
    bd64:	mov	x8, x20
    bd68:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bd6c:	ldr	x3, [sp, #112]
    bd70:	mov	x2, x20
    bd74:	mov	x1, x28
    bd78:	mov	x0, x3
    bd7c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bd80:	ldp	x19, x20, [sp, #16]
    bd84:	ldr	x0, [x0, #24]
    bd88:	ldp	x21, x22, [sp, #32]
    bd8c:	ldp	x23, x24, [sp, #48]
    bd90:	ldp	x25, x26, [sp, #64]
    bd94:	ldp	x27, x28, [sp, #80]
    bd98:	ldp	x29, x30, [sp], #464
    bd9c:	ret
    bda0:	ldp	x0, x25, [x20]
    bda4:	add	x21, sp, #0x120
    bda8:	ldr	w24, [x20, #16]
    bdac:	add	x23, sp, #0x138
    bdb0:	add	x19, sp, #0x150
    bdb4:	add	x22, sp, #0x168
    bdb8:	add	x20, sp, #0x180
    bdbc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bdc0:	mov	x3, x0
    bdc4:	add	x2, sp, #0x108
    bdc8:	mov	x0, x21
    bdcc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bdd0:	add	x1, x1, #0x0
    bdd4:	ldp	x4, x3, [x3, #24]
    bdd8:	stp	x4, x3, [sp, #264]
    bddc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bde0:	mov	x0, x23
    bde4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bde8:	add	x1, x1, #0x0
    bdec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    bdf0:	mov	x8, x19
    bdf4:	mov	x0, x21
    bdf8:	mov	x1, x23
    bdfc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    be00:	mov	x0, x22
    be04:	add	x1, sp, #0x80
    be08:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    be0c:	add	x21, sp, #0x198
    be10:	mov	x8, x20
    be14:	mov	x0, x19
    be18:	mov	x1, x22
    be1c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    be20:	mov	x0, x21
    be24:	add	x19, sp, #0x1b0
    be28:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    be2c:	add	x1, x1, #0x0
    be30:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    be34:	mov	x8, x19
    be38:	mov	x1, x21
    be3c:	mov	x0, x20
    be40:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    be44:	mov	x2, x19
    be48:	mov	x0, x25
    be4c:	mov	x1, x24
    be50:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    be54:	nop

000000000000be58 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>:
    be58:	stp	x29, x30, [sp, #-128]!
    be5c:	mov	x29, sp
    be60:	ldr	w1, [x0, #168]
    be64:	stp	x19, x20, [sp, #16]
    be68:	add	w2, w1, #0x1
    be6c:	stp	x21, x22, [sp, #32]
    be70:	str	w2, [x0, #168]
    be74:	cbnz	w1, bf3c <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xe4>
    be78:	add	x20, sp, #0x40
    be7c:	add	x21, sp, #0x60
    be80:	add	x1, x20, #0x10
    be84:	mov	w0, #0x30                  	// #48
    be88:	str	x1, [sp, #64]
    be8c:	add	x2, x20, #0x10
    be90:	mov	x19, #0x1                   	// #1
    be94:	strb	w0, [sp, #80]
    be98:	str	x19, [sp, #72]
    be9c:	mov	x1, #0x0                   	// #0
    bea0:	strb	wzr, [x2, x19]
    bea4:	mov	x0, x20
    bea8:	mov	x2, #0x0                   	// #0
    beac:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    beb0:	mov	x4, #0xa                   	// #10
    beb4:	add	x3, x3, #0x0
    beb8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    bebc:	add	x1, x21, #0x10
    bec0:	str	x1, [sp, #96]
    bec4:	mov	x1, x0
    bec8:	ldr	x2, [x1], #16
    becc:	cmp	x2, x1
    bed0:	b.eq	bfc4 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x16c>  // b.none
    bed4:	str	x2, [sp, #96]
    bed8:	ldr	x2, [x0, #16]
    bedc:	str	x2, [sp, #112]
    bee0:	ldr	x2, [x0, #8]
    bee4:	str	x2, [sp, #104]
    bee8:	stp	x1, xzr, [x0]
    beec:	add	x21, x21, #0x10
    bef0:	strb	wzr, [x0, #16]
    bef4:	ldp	x0, x1, [sp, #96]
    bef8:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    befc:	mov	x19, x0
    bf00:	ldr	x1, [sp, #96]
    bf04:	cmp	x1, x21
    bf08:	b.eq	bf14 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xbc>  // b.none
    bf0c:	mov	x0, x1
    bf10:	bl	0 <_ZdlPv>
    bf14:	ldr	x0, [sp, #64]
    bf18:	add	x20, x20, #0x10
    bf1c:	cmp	x0, x20
    bf20:	b.eq	bf28 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xd0>  // b.none
    bf24:	bl	0 <_ZdlPv>
    bf28:	mov	x0, x19
    bf2c:	ldp	x19, x20, [sp, #16]
    bf30:	ldp	x21, x22, [sp, #32]
    bf34:	ldp	x29, x30, [sp], #128
    bf38:	ret
    bf3c:	add	x21, sp, #0x60
    bf40:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    bf44:	mov	w2, w1
    bf48:	add	x22, x21, #0x15
    bf4c:	movk	x3, #0xcccd
    bf50:	umulh	x1, x2, x3
    bf54:	cmp	x2, #0x9
    bf58:	lsr	x1, x1, #3
    bf5c:	add	x0, x1, x1, lsl #2
    bf60:	sub	x0, x2, x0, lsl #1
    bf64:	mov	x2, x1
    bf68:	add	w0, w0, #0x30
    bf6c:	and	w0, w0, #0xff
    bf70:	strb	w0, [x22, #-1]!
    bf74:	b.hi	bf50 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xf8>  // b.pmore
    bf78:	add	x19, x21, #0x15
    bf7c:	add	x20, sp, #0x40
    bf80:	sub	x19, x19, x22
    bf84:	add	x1, x20, #0x10
    bf88:	stp	x19, x1, [sp, #56]
    bf8c:	cmp	x19, #0xf
    bf90:	b.ls	bfd0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x178>  // b.plast
    bf94:	add	x1, sp, #0x38
    bf98:	mov	x0, x20
    bf9c:	mov	x2, #0x0                   	// #0
    bfa0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    bfa4:	ldr	x1, [sp, #56]
    bfa8:	str	x0, [sp, #64]
    bfac:	str	x1, [sp, #80]
    bfb0:	mov	x2, x19
    bfb4:	mov	x1, x22
    bfb8:	bl	0 <memcpy>
    bfbc:	ldp	x19, x2, [sp, #56]
    bfc0:	b	be98 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x40>
    bfc4:	ldp	x2, x3, [x0, #16]
    bfc8:	stp	x2, x3, [sp, #112]
    bfcc:	b	bee0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x88>
    bfd0:	cmp	x19, #0x1
    bfd4:	b.eq	be8c <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x34>  // b.none
    bfd8:	mov	x2, x1
    bfdc:	cbz	x19, be98 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x40>
    bfe0:	mov	x0, x1
    bfe4:	b	bfb0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x158>

000000000000bfe8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>:
    bfe8:	sub	sp, sp, #0x250
    bfec:	stp	x29, x30, [sp]
    bff0:	mov	x29, sp
    bff4:	stp	x19, x20, [sp, #16]
    bff8:	mov	x19, x0
    bffc:	ldrb	w3, [x0, #9]
    c000:	cmp	w3, #0x3
    c004:	b.eq	c198 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1b0>  // b.none
    c008:	stp	x23, x24, [sp, #48]
    c00c:	mov	x24, x1
    c010:	b.hi	c0d8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0xf0>  // b.pmore
    c014:	cmp	w3, #0x1
    c018:	b.eq	c170 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x188>  // b.none
    c01c:	cmp	w3, #0x2
    c020:	b.ne	c088 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0xa0>  // b.any
    c024:	ldr	x0, [x0, #32]
    c028:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c02c:	cbz	x0, c06c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x84>
    c030:	ldr	w1, [x0, #32]
    c034:	cbz	w1, c5d8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5f0>
    c038:	ldr	x2, [x0, #16]
    c03c:	mov	w1, w1
    c040:	sub	x1, x1, #0x1
    c044:	add	x0, x0, #0x30
    c048:	cbz	x2, c638 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x650>
    c04c:	ldr	w3, [x2, #8]
    c050:	cmp	w3, #0x5
    c054:	b.ne	c60c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x624>  // b.any
    c058:	ldr	x2, [x2, #24]
    c05c:	bl	6b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    c060:	mov	x20, x0
    c064:	ldp	x23, x24, [sp, #48]
    c068:	b	c074 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x8c>
    c06c:	ldp	x23, x24, [sp, #48]
    c070:	mov	x20, x19
    c074:	mov	x0, x20
    c078:	ldp	x29, x30, [sp]
    c07c:	ldp	x19, x20, [sp, #16]
    c080:	add	sp, sp, #0x250
    c084:	ret
    c088:	cbnz	w3, c06c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x84>
    c08c:	stp	x21, x22, [sp, #32]
    c090:	ldr	x21, [x0, #16]
    c094:	cbz	x21, c1c4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1dc>
    c098:	ldr	w0, [x21, #8]
    c09c:	ldr	x22, [x19, #32]
    c0a0:	cmp	w0, #0x4
    c0a4:	b.eq	c1f8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x210>  // b.none
    c0a8:	cmp	w0, #0x7
    c0ac:	b.eq	c214 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x22c>  // b.none
    c0b0:	ldr	x2, [x22]
    c0b4:	mov	x1, x21
    c0b8:	mov	x0, x22
    c0bc:	ldr	x2, [x2, #64]
    c0c0:	blr	x2
    c0c4:	mov	x20, x0
    c0c8:	ldp	x21, x22, [sp, #32]
    c0cc:	ldp	x23, x24, [sp, #48]
    c0d0:	cbnz	x0, c074 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x8c>
    c0d4:	b	c070 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x88>
    c0d8:	cmp	w3, #0x4
    c0dc:	b.eq	c134 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x14c>  // b.none
    c0e0:	cmp	w3, #0x5
    c0e4:	b.ne	c06c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x84>  // b.any
    c0e8:	ldr	x0, [x0, #32]
    c0ec:	cbz	x0, c1b4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1cc>
    c0f0:	ldrb	w1, [x0, #8]
    c0f4:	cmp	w1, #0x5
    c0f8:	b.ne	c06c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x84>  // b.any
    c0fc:	mov	x1, #0x0                   	// #0
    c100:	mov	x2, #0x0                   	// #0
    c104:	bl	3d50 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE>
    c108:	bl	6810 <_ZN4llvm7DefInit3getEPNS_6RecordE>
    c10c:	mov	x20, x0
    c110:	ldr	x0, [x0, #16]
    c114:	ldr	x1, [x19, #16]
    c118:	ldr	x2, [x0]
    c11c:	ldr	x2, [x2, #32]
    c120:	blr	x2
    c124:	tst	w0, #0xff
    c128:	b.eq	c604 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x61c>  // b.none
    c12c:	ldp	x23, x24, [sp, #48]
    c130:	b	c074 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x8c>
    c134:	ldr	x20, [x0, #32]
    c138:	mov	x0, x20
    c13c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c140:	cbz	x0, c1d0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1e8>
    c144:	ldr	w0, [x0, #32]
    c148:	cmp	w0, #0x0
    c14c:	cset	x0, eq  // eq = none
    c150:	bl	a698 <_ZN4llvm7IntInit3getEl>
    c154:	mov	x20, x0
    c158:	mov	x0, x20
    c15c:	ldp	x29, x30, [sp]
    c160:	ldp	x19, x20, [sp, #16]
    c164:	ldp	x23, x24, [sp, #48]
    c168:	add	sp, sp, #0x250
    c16c:	ret
    c170:	ldr	x0, [x0, #32]
    c174:	cbz	x0, c5a0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5b8>
    c178:	ldrb	w1, [x0, #8]
    c17c:	cmp	w1, #0x9
    c180:	b.ne	c06c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x84>  // b.any
    c184:	ldr	w1, [x0, #32]
    c188:	cbz	w1, c648 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x660>
    c18c:	ldr	x20, [x0, #40]
    c190:	ldp	x23, x24, [sp, #48]
    c194:	b	c074 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x8c>
    c198:	ldr	x0, [x0, #32]
    c19c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c1a0:	cbz	x0, c070 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x88>
    c1a4:	ldr	w0, [x0, #32]
    c1a8:	bl	a698 <_ZN4llvm7IntInit3getEl>
    c1ac:	mov	x20, x0
    c1b0:	b	c074 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x8c>
    c1b4:	stp	x21, x22, [sp, #32]
    c1b8:	stp	x25, x26, [sp, #64]
    c1bc:	stp	x27, x28, [sp, #80]
    c1c0:	bl	770 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    c1c4:	stp	x25, x26, [sp, #64]
    c1c8:	stp	x27, x28, [sp, #80]
    c1cc:	bl	630 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    c1d0:	mov	x0, x20
    c1d4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c1d8:	cbz	x0, c06c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x84>
    c1dc:	ldr	x0, [x0, #32]
    c1e0:	cmp	x0, #0x0
    c1e4:	cset	x0, eq  // eq = none
    c1e8:	bl	a698 <_ZN4llvm7IntInit3getEl>
    c1ec:	mov	x20, x0
    c1f0:	ldp	x23, x24, [sp, #48]
    c1f4:	b	c074 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x8c>
    c1f8:	mov	x0, x22
    c1fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c200:	mov	x20, x0
    c204:	cbz	x0, c460 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x478>
    c208:	ldp	x21, x22, [sp, #32]
    c20c:	ldp	x23, x24, [sp, #48]
    c210:	b	c074 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x8c>
    c214:	and	w20, w2, #0xff
    c218:	mov	x0, x22
    c21c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c220:	mov	x23, x0
    c224:	cbz	x0, c0b0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0xc8>
    c228:	cmp	x24, #0x0
    c22c:	eor	w0, w20, #0x1
    c230:	cset	w1, eq  // eq = none
    c234:	tst	w1, w0
    c238:	b.ne	c454 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x46c>  // b.any
    c23c:	cbz	x24, c5b0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5c8>
    c240:	ldr	x0, [x24]
    c244:	cmp	x23, x0
    c248:	b.eq	c4b4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4cc>  // b.none
    c24c:	ldp	x3, x2, [x23, #24]
    c250:	add	x22, sp, #0x230
    c254:	ldr	x21, [x24, #104]
    c258:	mov	x1, x22
    c25c:	str	x3, [sp, #560]
    c260:	add	x0, x21, #0x30
    c264:	add	x21, x21, #0x38
    c268:	str	x2, [sp, #568]
    c26c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c270:	cmp	x0, x21
    c274:	b.eq	c4c0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4d8>  // b.none
    c278:	ldr	x0, [x0, #64]
    c27c:	cbz	x0, c4c0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4d8>
    c280:	bl	6810 <_ZN4llvm7DefInit3getEPNS_6RecordE>
    c284:	mov	x20, x0
    c288:	ldr	x0, [x0, #16]
    c28c:	ldr	x1, [x19, #16]
    c290:	ldr	x2, [x0]
    c294:	ldr	x2, [x2, #32]
    c298:	blr	x2
    c29c:	tst	w0, #0xff
    c2a0:	b.ne	c208 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x220>  // b.any
    c2a4:	ldr	w3, [x24, #16]
    c2a8:	add	x10, sp, #0xb8
    c2ac:	ldr	x4, [x24, #8]
    c2b0:	mov	x0, x10
    c2b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c2b8:	add	x1, x1, #0x0
    c2bc:	stp	x25, x26, [sp, #64]
    c2c0:	add	x21, sp, #0x1f0
    c2c4:	add	x24, sp, #0x178
    c2c8:	stp	x27, x28, [sp, #80]
    c2cc:	add	x27, sp, #0x148
    c2d0:	add	x28, sp, #0x160
    c2d4:	stp	x4, x3, [sp, #152]
    c2d8:	add	x26, sp, #0x230
    c2dc:	add	x25, sp, #0x190
    c2e0:	str	x10, [sp, #168]
    c2e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c2e8:	ldr	x0, [x19, #16]
    c2ec:	add	x5, sp, #0x130
    c2f0:	add	x6, sp, #0x210
    c2f4:	add	x2, sp, #0x118
    c2f8:	add	x9, sp, #0x100
    c2fc:	mov	x1, x21
    c300:	ldr	x11, [x0]
    c304:	add	x7, sp, #0xe8
    c308:	mov	x8, x21
    c30c:	add	x21, sp, #0xd0
    c310:	add	x22, sp, #0x1a8
    c314:	add	x23, sp, #0x1c0
    c318:	ldr	x11, [x11, #16]
    c31c:	stp	x1, x7, [sp, #104]
    c320:	stp	x5, x6, [sp, #120]
    c324:	stp	x2, x9, [sp, #136]
    c328:	blr	x11
    c32c:	ldr	x1, [sp, #104]
    c330:	mov	x0, x21
    c334:	str	x0, [sp, #104]
    c338:	add	x21, sp, #0x1d8
    c33c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c340:	ldp	x0, x7, [sp, #104]
    c344:	ldr	x10, [sp, #168]
    c348:	mov	x8, x7
    c34c:	mov	x1, x0
    c350:	mov	x0, x10
    c354:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c358:	ldr	x9, [sp, #144]
    c35c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c360:	add	x1, x1, #0x0
    c364:	str	x9, [sp, #104]
    c368:	mov	x0, x9
    c36c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c370:	ldp	x0, x8, [sp, #104]
    c374:	ldr	x2, [sp, #136]
    c378:	str	x2, [sp, #112]
    c37c:	mov	x1, x0
    c380:	mov	x0, x8
    c384:	mov	x8, x2
    c388:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c38c:	ldr	x0, [x20, #16]
    c390:	ldr	x6, [sp, #128]
    c394:	ldr	x1, [x0]
    c398:	mov	x20, x6
    c39c:	mov	x8, x6
    c3a0:	ldr	x1, [x1, #16]
    c3a4:	blr	x1
    c3a8:	ldr	x5, [sp, #120]
    c3ac:	mov	x1, x20
    c3b0:	str	x5, [sp, #104]
    c3b4:	mov	x0, x5
    c3b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3bc:	ldp	x0, x2, [sp, #104]
    c3c0:	mov	x8, x27
    c3c4:	mov	x1, x0
    c3c8:	mov	x0, x2
    c3cc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3d0:	mov	x0, x28
    c3d4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3d8:	add	x1, x1, #0x0
    c3dc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3e0:	mov	x1, x28
    c3e4:	mov	x0, x27
    c3e8:	mov	x8, x24
    c3ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c3f0:	ldr	x1, [x19]
    c3f4:	mov	x8, x26
    c3f8:	mov	x0, x19
    c3fc:	ldr	x1, [x1, #40]
    c400:	blr	x1
    c404:	mov	x1, x26
    c408:	mov	x0, x25
    c40c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c410:	mov	x8, x22
    c414:	mov	x1, x25
    c418:	mov	x0, x24
    c41c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c420:	mov	x0, x23
    c424:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c428:	add	x1, x1, #0x0
    c42c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c430:	mov	x1, x23
    c434:	mov	x0, x22
    c438:	mov	x8, x21
    c43c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c440:	ldp	x4, x3, [sp, #152]
    c444:	mov	x2, x21
    c448:	mov	x0, x4
    c44c:	mov	x1, x3
    c450:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c454:	ldp	x21, x22, [sp, #32]
    c458:	ldp	x23, x24, [sp, #48]
    c45c:	b	c070 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x88>
    c460:	mov	x0, x22
    c464:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c468:	cbz	x0, c548 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x560>
    c46c:	ldr	x1, [x0]
    c470:	add	x19, sp, #0x230
    c474:	mov	x8, x19
    c478:	add	x19, x19, #0x10
    c47c:	ldr	x1, [x1, #40]
    c480:	blr	x1
    c484:	ldr	x0, [sp, #560]
    c488:	ldr	x1, [sp, #568]
    c48c:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    c490:	mov	x20, x0
    c494:	ldr	x1, [sp, #560]
    c498:	cmp	x1, x19
    c49c:	b.eq	c208 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x220>  // b.none
    c4a0:	mov	x0, x1
    c4a4:	bl	0 <_ZdlPv>
    c4a8:	ldp	x21, x22, [sp, #32]
    c4ac:	ldp	x23, x24, [sp, #48]
    c4b0:	b	c074 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x8c>
    c4b4:	cbz	w20, c454 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x46c>
    c4b8:	mov	x0, x24
    c4bc:	b	c280 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x298>
    c4c0:	cbz	w20, c454 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x46c>
    c4c4:	add	x20, sp, #0x1c0
    c4c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c4cc:	mov	x0, x20
    c4d0:	add	x1, x1, #0x0
    c4d4:	stp	x25, x26, [sp, #64]
    c4d8:	add	x21, sp, #0x1d8
    c4dc:	ldr	w25, [x24, #16]
    c4e0:	stp	x27, x28, [sp, #80]
    c4e4:	add	x19, sp, #0x1f0
    c4e8:	ldr	x24, [x24, #8]
    c4ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c4f0:	ldp	x3, x2, [x23, #24]
    c4f4:	mov	x0, x21
    c4f8:	add	x1, sp, #0x1a8
    c4fc:	stp	x3, x2, [sp, #424]
    c500:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c504:	mov	x8, x19
    c508:	mov	x0, x20
    c50c:	mov	x1, x21
    c510:	add	x20, sp, #0x210
    c514:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c518:	mov	x0, x20
    c51c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c520:	add	x1, x1, #0x0
    c524:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c528:	mov	x8, x22
    c52c:	mov	x1, x20
    c530:	mov	x0, x19
    c534:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c538:	mov	x2, x22
    c53c:	mov	x0, x24
    c540:	mov	x1, x25
    c544:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c548:	cbz	x22, c674 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x68c>
    c54c:	ldrb	w0, [x22, #8]
    c550:	cmp	w0, #0x8
    c554:	b.ne	c0b0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0xc8>  // b.any
    c558:	ldr	x1, [x22]
    c55c:	add	x19, sp, #0x230
    c560:	mov	x8, x19
    c564:	mov	x0, x22
    c568:	add	x19, x19, #0x10
    c56c:	ldr	x1, [x1, #40]
    c570:	blr	x1
    c574:	ldr	x0, [sp, #560]
    c578:	ldr	x1, [sp, #568]
    c57c:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    c580:	mov	x20, x0
    c584:	ldr	x0, [sp, #560]
    c588:	cmp	x0, x19
    c58c:	b.eq	c208 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x220>  // b.none
    c590:	bl	0 <_ZdlPv>
    c594:	ldp	x21, x22, [sp, #32]
    c598:	ldp	x23, x24, [sp, #48]
    c59c:	b	c074 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x8c>
    c5a0:	stp	x21, x22, [sp, #32]
    c5a4:	stp	x25, x26, [sp, #64]
    c5a8:	stp	x27, x28, [sp, #80]
    c5ac:	bl	748 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    c5b0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c5b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c5b8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c5bc:	add	x3, x3, #0x0
    c5c0:	add	x1, x1, #0x0
    c5c4:	add	x0, x0, #0x0
    c5c8:	mov	w2, #0x2d8                 	// #728
    c5cc:	stp	x25, x26, [sp, #64]
    c5d0:	stp	x27, x28, [sp, #80]
    c5d4:	bl	0 <__assert_fail>
    c5d8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c5dc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c5e0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c5e4:	add	x3, x3, #0x0
    c5e8:	add	x1, x1, #0x0
    c5ec:	add	x0, x0, #0x0
    c5f0:	mov	w2, #0x305                 	// #773
    c5f4:	stp	x21, x22, [sp, #32]
    c5f8:	stp	x25, x26, [sp, #64]
    c5fc:	stp	x27, x28, [sp, #80]
    c600:	bl	0 <__assert_fail>
    c604:	stp	x21, x22, [sp, #32]
    c608:	b	c2a4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x2bc>
    c60c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c610:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c614:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c618:	add	x3, x3, #0x0
    c61c:	add	x1, x1, #0x0
    c620:	add	x0, x0, #0x0
    c624:	mov	w2, #0x108                 	// #264
    c628:	stp	x21, x22, [sp, #32]
    c62c:	stp	x25, x26, [sp, #64]
    c630:	stp	x27, x28, [sp, #80]
    c634:	bl	0 <__assert_fail>
    c638:	stp	x21, x22, [sp, #32]
    c63c:	stp	x25, x26, [sp, #64]
    c640:	stp	x27, x28, [sp, #80]
    c644:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
    c648:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c64c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c650:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c654:	add	x3, x3, #0x0
    c658:	add	x1, x1, #0x0
    c65c:	add	x0, x0, #0x0
    c660:	mov	w2, #0x2fe                 	// #766
    c664:	stp	x21, x22, [sp, #32]
    c668:	stp	x25, x26, [sp, #64]
    c66c:	stp	x27, x28, [sp, #80]
    c670:	bl	0 <__assert_fail>
    c674:	stp	x25, x26, [sp, #64]
    c678:	stp	x27, x28, [sp, #80]
    c67c:	bl	720 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

000000000000c680 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE>:
    c680:	stp	x29, x30, [sp, #-32]!
    c684:	mov	x29, sp
    c688:	stp	x19, x20, [sp, #16]
    c68c:	mov	x19, x0
    c690:	mov	x20, x1
    c694:	ldr	x0, [x0, #32]
    c698:	ldr	x2, [x0]
    c69c:	ldr	x2, [x2, #96]
    c6a0:	blr	x2
    c6a4:	mov	x1, x0
    c6a8:	ldr	x2, [x19, #32]
    c6ac:	cmp	x2, x0
    c6b0:	b.eq	c6d4 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x54>  // b.none
    c6b4:	ldrb	w0, [x19, #9]
    c6b8:	ldr	x2, [x19, #16]
    c6bc:	bl	8580 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    c6c0:	ldrb	w2, [x20, #16]
    c6c4:	ldr	x1, [x20, #8]
    c6c8:	ldp	x19, x20, [sp, #16]
    c6cc:	ldp	x29, x30, [sp], #32
    c6d0:	b	bfe8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    c6d4:	ldrb	w0, [x20, #16]
    c6d8:	cbz	w0, c6e4 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x64>
    c6dc:	ldrb	w0, [x19, #9]
    c6e0:	cbz	w0, c6b8 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x38>
    c6e4:	mov	x0, x19
    c6e8:	ldp	x19, x20, [sp, #16]
    c6ec:	ldp	x29, x30, [sp], #32
    c6f0:	ret
    c6f4:	nop

000000000000c6f8 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE>:
    c6f8:	stp	x29, x30, [sp, #-48]!
    c6fc:	mov	x29, sp
    c700:	stp	x19, x20, [sp, #16]
    c704:	mov	x19, x0
    c708:	ldr	x0, [x0, #16]
    c70c:	str	x21, [sp, #32]
    c710:	cmp	x1, x0
    c714:	b.eq	c7b8 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xc0>  // b.none
    c718:	ldr	x2, [x0]
    c71c:	mov	x20, x1
    c720:	ldr	x2, [x2, #32]
    c724:	blr	x2
    c728:	tst	w0, #0xff
    c72c:	b.ne	c7b8 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xc0>  // b.any
    c730:	ldr	x2, [x19]
    c734:	mov	x1, x20
    c738:	mov	x0, x19
    c73c:	ldr	x2, [x2, #64]
    c740:	blr	x2
    c744:	mov	x21, x0
    c748:	cbz	x0, c774 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x7c>
    c74c:	ldrb	w0, [x0, #8]
    c750:	sub	w0, w0, #0x1
    c754:	and	w0, w0, #0xff
    c758:	cmp	w0, #0x16
    c75c:	b.ls	c7d0 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xd8>  // b.plast
    c760:	mov	x0, x21
    c764:	ldp	x19, x20, [sp, #16]
    c768:	ldr	x21, [sp, #32]
    c76c:	ldp	x29, x30, [sp], #48
    c770:	ret
    c774:	ldr	x0, [x19, #16]
    c778:	mov	x1, x20
    c77c:	ldr	x2, [x0]
    c780:	ldr	x2, [x2, #24]
    c784:	blr	x2
    c788:	tst	w0, #0xff
    c78c:	b.eq	c760 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x68>  // b.none
    c790:	mov	x2, x20
    c794:	mov	x1, x19
    c798:	mov	w0, #0x0                   	// #0
    c79c:	bl	8580 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    c7a0:	ldp	x19, x20, [sp, #16]
    c7a4:	mov	w2, #0x0                   	// #0
    c7a8:	ldr	x21, [sp, #32]
    c7ac:	mov	x1, #0x0                   	// #0
    c7b0:	ldp	x29, x30, [sp], #48
    c7b4:	b	bfe8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    c7b8:	mov	x21, x19
    c7bc:	mov	x0, x21
    c7c0:	ldp	x19, x20, [sp, #16]
    c7c4:	ldr	x21, [sp, #32]
    c7c8:	ldp	x29, x30, [sp], #48
    c7cc:	ret
    c7d0:	ldr	x0, [x21, #16]
    c7d4:	mov	x1, x20
    c7d8:	ldr	x2, [x0]
    c7dc:	ldr	x2, [x2, #32]
    c7e0:	blr	x2
    c7e4:	tst	w0, #0xff
    c7e8:	b.ne	c760 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x68>  // b.any
    c7ec:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c7f0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c7f4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c7f8:	add	x3, x3, #0x0
    c7fc:	add	x1, x1, #0x0
    c800:	add	x0, x0, #0x0
    c804:	mov	w2, #0x5c2                 	// #1474
    c808:	bl	0 <__assert_fail>
    c80c:	nop

000000000000c810 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>:
    c810:	stp	x29, x30, [sp, #-288]!
    c814:	mov	x29, sp
    c818:	stp	x19, x20, [sp, #16]
    c81c:	mov	x19, x0
    c820:	mov	x0, x1
    c824:	stp	x1, x2, [sp, #80]
    c828:	mov	x1, x2
    c82c:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    c830:	ldr	w2, [x19, #80]
    c834:	mov	w3, #0x18                  	// #24
    c838:	ldr	x1, [x19, #72]
    c83c:	umaddl	x2, w2, w3, x1
    c840:	cmp	x1, x2
    c844:	b.ne	c858 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x48>  // b.any
    c848:	b	c878 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x68>
    c84c:	add	x1, x1, #0x18
    c850:	cmp	x2, x1
    c854:	b.eq	c878 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x68>  // b.none
    c858:	ldr	x3, [x1]
    c85c:	cmp	x0, x3
    c860:	b.ne	c84c <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x3c>  // b.any
    c864:	ldr	x0, [x1, #16]
    c868:	cbz	x0, c878 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x68>
    c86c:	ldp	x19, x20, [sp, #16]
    c870:	ldp	x29, x30, [sp], #288
    c874:	ret
    c878:	stp	x23, x24, [sp, #48]
    c87c:	add	x20, sp, #0xd8
    c880:	ldr	w23, [x19, #16]
    c884:	ldp	x0, x24, [x19]
    c888:	stp	x21, x22, [sp, #32]
    c88c:	add	x22, sp, #0x78
    c890:	str	x25, [sp, #64]
    c894:	add	x25, sp, #0x90
    c898:	add	x21, sp, #0xa8
    c89c:	add	x19, sp, #0xc0
    c8a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c8a4:	mov	x3, x0
    c8a8:	add	x2, sp, #0x68
    c8ac:	mov	x0, x22
    c8b0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c8b4:	add	x1, x1, #0x0
    c8b8:	ldp	x4, x3, [x3, #24]
    c8bc:	stp	x4, x3, [sp, #104]
    c8c0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c8c4:	mov	x0, x25
    c8c8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c8cc:	add	x1, x1, #0x0
    c8d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c8d4:	mov	x8, x21
    c8d8:	mov	x0, x22
    c8dc:	mov	x1, x25
    c8e0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c8e4:	mov	x0, x19
    c8e8:	add	x1, sp, #0x50
    c8ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c8f0:	mov	x22, x19
    c8f4:	mov	x8, x20
    c8f8:	add	x19, sp, #0xf0
    c8fc:	mov	x0, x21
    c900:	mov	x1, x22
    c904:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c908:	mov	x21, x19
    c90c:	mov	x0, x19
    c910:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c914:	add	x19, sp, #0x108
    c918:	add	x1, x1, #0x0
    c91c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c920:	mov	x8, x19
    c924:	mov	x1, x21
    c928:	mov	x0, x20
    c92c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c930:	mov	x2, x19
    c934:	mov	x0, x24
    c938:	mov	x1, x23
    c93c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000c940 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE>:
    c940:	stp	x29, x30, [sp, #-304]!
    c944:	mov	x29, sp
    c948:	stp	x19, x20, [sp, #16]
    c94c:	mov	x19, x0
    c950:	mov	x0, x1
    c954:	stp	x21, x22, [sp, #32]
    c958:	stp	x23, x24, [sp, #48]
    c95c:	str	x25, [sp, #64]
    c960:	stp	x1, x2, [sp, #96]
    c964:	mov	x1, x2
    c968:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    c96c:	ldr	w2, [x19, #80]
    c970:	mov	w3, #0x18                  	// #24
    c974:	ldr	x1, [x19, #72]
    c978:	umaddl	x2, w2, w3, x1
    c97c:	cmp	x1, x2
    c980:	b.ne	c994 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x54>  // b.any
    c984:	b	ca88 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x148>
    c988:	add	x1, x1, #0x18
    c98c:	cmp	x2, x1
    c990:	b.eq	ca88 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x148>  // b.none
    c994:	ldr	x3, [x1]
    c998:	cmp	x0, x3
    c99c:	b.ne	c988 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x48>  // b.any
    c9a0:	ldr	x0, [x1, #16]
    c9a4:	cbz	x0, ca88 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x148>
    c9a8:	ldrb	w1, [x0, #8]
    c9ac:	cmp	w1, #0x3
    c9b0:	b.eq	ca70 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x130>  // b.none
    c9b4:	ldp	x0, x25, [x19]
    c9b8:	add	x22, sp, #0x88
    c9bc:	ldr	w24, [x19, #16]
    c9c0:	add	x23, sp, #0xa0
    c9c4:	add	x21, sp, #0xb8
    c9c8:	add	x19, sp, #0xd0
    c9cc:	add	x20, sp, #0xe8
    c9d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c9d4:	mov	x3, x0
    c9d8:	add	x2, sp, #0x78
    c9dc:	mov	x0, x22
    c9e0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c9e4:	add	x1, x1, #0x0
    c9e8:	ldp	x4, x3, [x3, #24]
    c9ec:	stp	x4, x3, [sp, #120]
    c9f0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c9f4:	mov	x0, x23
    c9f8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    c9fc:	add	x1, x1, #0x0
    ca00:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca04:	mov	x8, x21
    ca08:	mov	x0, x22
    ca0c:	mov	x1, x23
    ca10:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca14:	mov	x0, x19
    ca18:	add	x1, sp, #0x60
    ca1c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca20:	mov	x22, x19
    ca24:	mov	x8, x20
    ca28:	add	x19, sp, #0x100
    ca2c:	mov	x0, x21
    ca30:	mov	x1, x22
    ca34:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca38:	mov	x21, x19
    ca3c:	mov	x0, x19
    ca40:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca44:	add	x19, sp, #0x118
    ca48:	add	x1, x1, #0x0
    ca4c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca50:	mov	x8, x19
    ca54:	mov	x1, x21
    ca58:	mov	x0, x20
    ca5c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ca60:	mov	x2, x19
    ca64:	mov	x0, x25
    ca68:	mov	x1, x24
    ca6c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ca70:	ldp	x19, x20, [sp, #16]
    ca74:	ldp	x21, x22, [sp, #32]
    ca78:	ldp	x23, x24, [sp, #48]
    ca7c:	ldr	x25, [sp, #64]
    ca80:	ldp	x29, x30, [sp], #304
    ca84:	ret
    ca88:	ldp	x0, x25, [x19]
    ca8c:	add	x20, sp, #0x88
    ca90:	ldr	w24, [x19, #16]
    ca94:	add	x23, sp, #0xa0
    ca98:	add	x21, sp, #0xb8
    ca9c:	add	x22, sp, #0xd0
    caa0:	add	x19, sp, #0xe8
    caa4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    caa8:	mov	x3, x0
    caac:	add	x2, sp, #0x78
    cab0:	mov	x0, x20
    cab4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cab8:	add	x1, x1, #0x0
    cabc:	ldp	x4, x3, [x3, #24]
    cac0:	stp	x4, x3, [sp, #120]
    cac4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cac8:	mov	x0, x23
    cacc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cad0:	add	x1, x1, #0x0
    cad4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cad8:	mov	x8, x21
    cadc:	mov	x0, x20
    cae0:	mov	x1, x23
    cae4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cae8:	mov	x0, x22
    caec:	add	x1, sp, #0x60
    caf0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    caf4:	add	x20, sp, #0x100
    caf8:	mov	x8, x19
    cafc:	mov	x1, x22
    cb00:	mov	x0, x21
    cb04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb08:	mov	x0, x20
    cb0c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb10:	add	x1, x1, #0x0
    cb14:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb18:	add	x0, sp, #0x118
    cb1c:	mov	x1, x20
    cb20:	mov	x8, x0
    cb24:	str	x0, [sp, #88]
    cb28:	mov	x0, x19
    cb2c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cb30:	ldr	x2, [sp, #88]
    cb34:	mov	x0, x25
    cb38:	mov	x1, x24
    cb3c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000cb40 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>:
    cb40:	stp	x29, x30, [sp, #-288]!
    cb44:	mov	x29, sp
    cb48:	stp	x19, x20, [sp, #16]
    cb4c:	mov	x19, x0
    cb50:	mov	x0, x1
    cb54:	stp	x21, x22, [sp, #32]
    cb58:	stp	x23, x24, [sp, #48]
    cb5c:	str	x25, [sp, #64]
    cb60:	stp	x1, x2, [sp, #80]
    cb64:	mov	x1, x2
    cb68:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    cb6c:	ldr	w2, [x19, #80]
    cb70:	mov	w3, #0x18                  	// #24
    cb74:	ldr	x1, [x19, #72]
    cb78:	umaddl	x2, w2, w3, x1
    cb7c:	cmp	x1, x2
    cb80:	b.ne	cb94 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x54>  // b.any
    cb84:	b	cc88 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x148>
    cb88:	add	x1, x1, #0x18
    cb8c:	cmp	x2, x1
    cb90:	b.eq	cc88 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x148>  // b.none
    cb94:	ldr	x3, [x1]
    cb98:	cmp	x0, x3
    cb9c:	b.ne	cb88 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x48>  // b.any
    cba0:	ldr	x0, [x1, #16]
    cba4:	cbz	x0, cc88 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x148>
    cba8:	ldrb	w1, [x0, #8]
    cbac:	cmp	w1, #0x9
    cbb0:	b.eq	cc70 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x130>  // b.none
    cbb4:	ldp	x0, x25, [x19]
    cbb8:	add	x22, sp, #0x78
    cbbc:	ldr	w24, [x19, #16]
    cbc0:	add	x23, sp, #0x90
    cbc4:	add	x21, sp, #0xa8
    cbc8:	add	x19, sp, #0xc0
    cbcc:	add	x20, sp, #0xd8
    cbd0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cbd4:	mov	x3, x0
    cbd8:	add	x2, sp, #0x68
    cbdc:	mov	x0, x22
    cbe0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cbe4:	add	x1, x1, #0x0
    cbe8:	ldp	x4, x3, [x3, #24]
    cbec:	stp	x4, x3, [sp, #104]
    cbf0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cbf4:	mov	x0, x23
    cbf8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cbfc:	add	x1, x1, #0x0
    cc00:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc04:	mov	x8, x21
    cc08:	mov	x0, x22
    cc0c:	mov	x1, x23
    cc10:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc14:	mov	x0, x19
    cc18:	mov	x22, x19
    cc1c:	add	x1, sp, #0x50
    cc20:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc24:	add	x19, sp, #0xf0
    cc28:	mov	x0, x21
    cc2c:	mov	x1, x22
    cc30:	mov	x8, x20
    cc34:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc38:	mov	x21, x19
    cc3c:	mov	x0, x19
    cc40:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc44:	add	x19, sp, #0x108
    cc48:	add	x1, x1, #0x0
    cc4c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc50:	mov	x8, x19
    cc54:	mov	x1, x21
    cc58:	mov	x0, x20
    cc5c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cc60:	mov	x2, x19
    cc64:	mov	x0, x25
    cc68:	mov	x1, x24
    cc6c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    cc70:	ldp	x19, x20, [sp, #16]
    cc74:	ldp	x21, x22, [sp, #32]
    cc78:	ldp	x23, x24, [sp, #48]
    cc7c:	ldr	x25, [sp, #64]
    cc80:	ldp	x29, x30, [sp], #288
    cc84:	ret
    cc88:	ldp	x0, x25, [x19]
    cc8c:	add	x21, sp, #0x78
    cc90:	ldr	w24, [x19, #16]
    cc94:	add	x23, sp, #0x90
    cc98:	add	x19, sp, #0xa8
    cc9c:	add	x22, sp, #0xc0
    cca0:	add	x20, sp, #0xd8
    cca4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cca8:	mov	x3, x0
    ccac:	add	x2, sp, #0x68
    ccb0:	mov	x0, x21
    ccb4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ccb8:	add	x1, x1, #0x0
    ccbc:	ldp	x4, x3, [x3, #24]
    ccc0:	stp	x4, x3, [sp, #104]
    ccc4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ccc8:	mov	x0, x23
    cccc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ccd0:	add	x1, x1, #0x0
    ccd4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ccd8:	mov	x8, x19
    ccdc:	mov	x0, x21
    cce0:	mov	x1, x23
    cce4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cce8:	mov	x0, x22
    ccec:	add	x1, sp, #0x50
    ccf0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ccf4:	add	x21, sp, #0xf0
    ccf8:	mov	x0, x19
    ccfc:	mov	x1, x22
    cd00:	mov	x8, x20
    cd04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd08:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd0c:	mov	x0, x21
    cd10:	add	x19, sp, #0x108
    cd14:	add	x1, x1, #0x0
    cd18:	b	cc4c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x10c>
    cd1c:	nop

000000000000cd20 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE>:
    cd20:	stp	x29, x30, [sp, #-288]!
    cd24:	mov	x29, sp
    cd28:	stp	x19, x20, [sp, #16]
    cd2c:	mov	x20, x8
    cd30:	stp	x21, x22, [sp, #32]
    cd34:	mov	x21, x0
    cd38:	stp	x1, x2, [sp, #80]
    cd3c:	bl	cb40 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    cd40:	ldr	w22, [x0, #32]
    cd44:	add	x19, x0, #0x28
    cd48:	stp	xzr, xzr, [x20]
    cd4c:	str	xzr, [x20, #16]
    cd50:	add	x22, x19, x22, lsl #3
    cd54:	cmp	x22, x19
    cd58:	b.eq	ce64 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x144>  // b.none
    cd5c:	stp	x23, x24, [sp, #48]
    cd60:	add	x23, sp, #0x108
    cd64:	nop
    cd68:	ldr	x3, [x19]
    cd6c:	cbz	x3, ce90 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x170>
    cd70:	ldrb	w1, [x3, #8]
    cd74:	cmp	w1, #0x6
    cd78:	b.eq	ce38 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x118>  // b.none
    cd7c:	ldr	x0, [x21]
    cd80:	add	x19, sp, #0x78
    cd84:	ldr	w24, [x21, #16]
    cd88:	add	x23, sp, #0x90
    cd8c:	str	x25, [sp, #64]
    cd90:	add	x22, sp, #0xc0
    cd94:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cd98:	add	x20, sp, #0xd8
    cd9c:	ldp	x4, x3, [x0, #24]
    cda0:	add	x2, sp, #0x68
    cda4:	mov	x0, x19
    cda8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdac:	add	x1, x1, #0x0
    cdb0:	stp	x4, x3, [sp, #104]
    cdb4:	ldr	x25, [x21, #8]
    cdb8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdbc:	mov	x21, x19
    cdc0:	mov	x0, x23
    cdc4:	add	x19, sp, #0xa8
    cdc8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdcc:	add	x1, x1, #0x0
    cdd0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdd4:	mov	x8, x19
    cdd8:	mov	x0, x21
    cddc:	mov	x1, x23
    cde0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cde4:	mov	x0, x22
    cde8:	add	x1, sp, #0x50
    cdec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cdf0:	add	x21, sp, #0xf0
    cdf4:	mov	x8, x20
    cdf8:	mov	x0, x19
    cdfc:	mov	x1, x22
    ce00:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce04:	mov	x0, x21
    ce08:	add	x19, sp, #0x108
    ce0c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce10:	add	x1, x1, #0x0
    ce14:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce18:	mov	x8, x19
    ce1c:	mov	x1, x21
    ce20:	mov	x0, x20
    ce24:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce28:	mov	x2, x19
    ce2c:	mov	x0, x25
    ce30:	mov	x1, x24
    ce34:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ce38:	ldp	x1, x4, [x20, #8]
    ce3c:	add	x19, x19, #0x8
    ce40:	ldr	x3, [x3, #24]
    ce44:	str	x3, [sp, #264]
    ce48:	cmp	x1, x4
    ce4c:	b.eq	ce78 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x158>  // b.none
    ce50:	str	x3, [x1], #8
    ce54:	cmp	x22, x19
    ce58:	str	x1, [x20, #8]
    ce5c:	b.ne	cd68 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x48>  // b.any
    ce60:	ldp	x23, x24, [sp, #48]
    ce64:	mov	x0, x20
    ce68:	ldp	x19, x20, [sp, #16]
    ce6c:	ldp	x21, x22, [sp, #32]
    ce70:	ldp	x29, x30, [sp], #288
    ce74:	ret
    ce78:	mov	x2, x23
    ce7c:	mov	x0, x20
    ce80:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce84:	cmp	x22, x19
    ce88:	b.ne	cd68 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x48>  // b.any
    ce8c:	b	ce60 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x140>
    ce90:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce94:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce98:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ce9c:	add	x3, x3, #0x0
    cea0:	add	x1, x1, #0x0
    cea4:	add	x0, x0, #0x0
    cea8:	mov	w2, #0x69                  	// #105
    ceac:	str	x25, [sp, #64]
    ceb0:	bl	0 <__assert_fail>
    ceb4:	nop

000000000000ceb8 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE>:
    ceb8:	stp	x29, x30, [sp, #-464]!
    cebc:	mov	x29, sp
    cec0:	stp	x21, x22, [sp, #32]
    cec4:	mov	x21, x8
    cec8:	mov	x22, x0
    cecc:	stp	x19, x20, [sp, #16]
    ced0:	stp	x23, x24, [sp, #48]
    ced4:	stp	x1, x2, [sp, #128]
    ced8:	bl	cb40 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    cedc:	ldr	w23, [x0, #32]
    cee0:	add	x20, x0, #0x28
    cee4:	stp	xzr, xzr, [x21]
    cee8:	str	xzr, [x21, #16]
    ceec:	add	x23, x20, x23, lsl #3
    cef0:	cmp	x23, x20
    cef4:	b.eq	d07c <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x1c4>  // b.none
    cef8:	add	x24, sp, #0x1b0
    cefc:	stp	x25, x26, [sp, #64]
    cf00:	stp	x27, x28, [sp, #80]
    cf04:	nop
    cf08:	ldr	x19, [x20]
    cf0c:	cbz	x19, d0ac <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x1f4>
    cf10:	ldrb	w0, [x19, #8]
    cf14:	cmp	w0, #0x8
    cf18:	b.eq	d04c <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x194>  // b.none
    cf1c:	ldr	w3, [x22, #16]
    cf20:	add	x2, sp, #0xa8
    cf24:	ldr	x4, [x22, #8]
    cf28:	mov	x0, x2
    cf2c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf30:	add	x1, x1, #0x0
    cf34:	stp	x4, x3, [sp, #104]
    cf38:	add	x20, sp, #0xc0
    cf3c:	add	x27, sp, #0xd8
    cf40:	str	x2, [sp, #120]
    cf44:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf48:	ldr	x0, [x22]
    cf4c:	add	x28, sp, #0xf0
    cf50:	add	x25, sp, #0x108
    cf54:	add	x26, sp, #0x120
    cf58:	add	x23, sp, #0x138
    cf5c:	add	x24, sp, #0x150
    cf60:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf64:	mov	x5, x0
    cf68:	add	x1, sp, #0x98
    cf6c:	mov	x0, x20
    cf70:	str	x0, [sp, #96]
    cf74:	add	x20, sp, #0x168
    cf78:	ldp	x6, x5, [x5, #24]
    cf7c:	stp	x6, x5, [sp, #152]
    cf80:	add	x22, sp, #0x1b0
    cf84:	add	x21, sp, #0x180
    cf88:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cf8c:	ldr	x2, [sp, #120]
    cf90:	mov	x8, x27
    cf94:	ldr	x0, [sp, #96]
    cf98:	mov	x1, x0
    cf9c:	mov	x0, x2
    cfa0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfa4:	mov	x0, x28
    cfa8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfac:	add	x1, x1, #0x0
    cfb0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfb4:	mov	x8, x25
    cfb8:	mov	x1, x28
    cfbc:	mov	x0, x27
    cfc0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfc4:	mov	x0, x26
    cfc8:	add	x1, sp, #0x80
    cfcc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfd0:	mov	x8, x23
    cfd4:	mov	x1, x26
    cfd8:	mov	x0, x25
    cfdc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfe0:	mov	x0, x24
    cfe4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cfe8:	add	x1, x1, #0x0
    cfec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    cff0:	mov	x1, x24
    cff4:	mov	x0, x23
    cff8:	mov	x8, x20
    cffc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d000:	ldr	x1, [x19]
    d004:	mov	x8, x22
    d008:	mov	x0, x19
    d00c:	ldr	x1, [x1, #40]
    d010:	blr	x1
    d014:	mov	x1, x22
    d018:	mov	x0, x21
    d01c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d020:	add	x0, sp, #0x198
    d024:	mov	x1, x21
    d028:	mov	x8, x0
    d02c:	str	x0, [sp, #96]
    d030:	mov	x0, x20
    d034:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d038:	ldp	x2, x4, [sp, #96]
    d03c:	ldr	x3, [sp, #112]
    d040:	mov	x1, x3
    d044:	mov	x0, x4
    d048:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d04c:	ldp	x1, x0, [x21, #8]
    d050:	add	x20, x20, #0x8
    d054:	ldr	x3, [x19, #24]
    d058:	str	x3, [sp, #432]
    d05c:	cmp	x1, x0
    d060:	b.eq	d094 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x1dc>  // b.none
    d064:	str	x3, [x1], #8
    d068:	cmp	x23, x20
    d06c:	str	x1, [x21, #8]
    d070:	b.ne	cf08 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x50>  // b.any
    d074:	ldp	x25, x26, [sp, #64]
    d078:	ldp	x27, x28, [sp, #80]
    d07c:	mov	x0, x21
    d080:	ldp	x19, x20, [sp, #16]
    d084:	ldp	x21, x22, [sp, #32]
    d088:	ldp	x23, x24, [sp, #48]
    d08c:	ldp	x29, x30, [sp], #464
    d090:	ret
    d094:	mov	x2, x24
    d098:	mov	x0, x21
    d09c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d0a0:	cmp	x23, x20
    d0a4:	b.ne	cf08 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x50>  // b.any
    d0a8:	b	d074 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x1bc>
    d0ac:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d0b0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d0b4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d0b8:	add	x3, x3, #0x0
    d0bc:	add	x1, x1, #0x0
    d0c0:	add	x0, x0, #0x0
    d0c4:	mov	w2, #0x69                  	// #105
    d0c8:	bl	0 <__assert_fail>
    d0cc:	nop

000000000000d0d0 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE>:
    d0d0:	stp	x29, x30, [sp, #-464]!
    d0d4:	mov	x29, sp
    d0d8:	stp	x21, x22, [sp, #32]
    d0dc:	mov	x21, x8
    d0e0:	mov	x22, x0
    d0e4:	stp	x19, x20, [sp, #16]
    d0e8:	stp	x23, x24, [sp, #48]
    d0ec:	stp	x1, x2, [sp, #128]
    d0f0:	bl	cb40 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    d0f4:	ldr	w23, [x0, #32]
    d0f8:	add	x20, x0, #0x28
    d0fc:	stp	xzr, xzr, [x21]
    d100:	str	xzr, [x21, #16]
    d104:	add	x23, x20, x23, lsl #3
    d108:	cmp	x23, x20
    d10c:	b.eq	d294 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x1c4>  // b.none
    d110:	add	x24, sp, #0x1b0
    d114:	stp	x25, x26, [sp, #64]
    d118:	stp	x27, x28, [sp, #80]
    d11c:	nop
    d120:	ldr	x19, [x20]
    d124:	cbz	x19, d2c8 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x1f8>
    d128:	ldrb	w0, [x19, #8]
    d12c:	cmp	w0, #0x12
    d130:	b.eq	d260 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x190>  // b.none
    d134:	ldr	w3, [x22, #16]
    d138:	add	x2, sp, #0xa8
    d13c:	ldr	x4, [x22, #8]
    d140:	mov	x0, x2
    d144:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d148:	add	x1, x1, #0x0
    d14c:	stp	x4, x3, [sp, #104]
    d150:	add	x21, sp, #0xc0
    d154:	add	x20, sp, #0xd8
    d158:	str	x2, [sp, #120]
    d15c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d160:	ldr	x0, [x22]
    d164:	add	x28, sp, #0xf0
    d168:	add	x26, sp, #0x108
    d16c:	add	x27, sp, #0x120
    d170:	add	x24, sp, #0x138
    d174:	add	x25, sp, #0x150
    d178:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d17c:	mov	x5, x0
    d180:	add	x1, sp, #0x98
    d184:	mov	x0, x21
    d188:	str	x0, [sp, #96]
    d18c:	add	x21, sp, #0x168
    d190:	ldp	x6, x5, [x5, #24]
    d194:	stp	x6, x5, [sp, #152]
    d198:	add	x23, sp, #0x1b0
    d19c:	add	x22, sp, #0x180
    d1a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1a4:	ldr	x2, [sp, #120]
    d1a8:	mov	x8, x20
    d1ac:	ldr	x0, [sp, #96]
    d1b0:	mov	x1, x0
    d1b4:	mov	x0, x2
    d1b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1bc:	mov	x0, x28
    d1c0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1c4:	add	x1, x1, #0x0
    d1c8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1cc:	mov	x8, x26
    d1d0:	mov	x0, x20
    d1d4:	mov	x1, x28
    d1d8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1dc:	mov	x0, x27
    d1e0:	add	x1, sp, #0x80
    d1e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1e8:	add	x20, sp, #0x198
    d1ec:	mov	x8, x24
    d1f0:	mov	x1, x27
    d1f4:	mov	x0, x26
    d1f8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d1fc:	mov	x0, x25
    d200:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d204:	add	x1, x1, #0x0
    d208:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d20c:	mov	x1, x25
    d210:	mov	x0, x24
    d214:	mov	x8, x21
    d218:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d21c:	ldr	x1, [x19]
    d220:	mov	x8, x23
    d224:	mov	x0, x19
    d228:	ldr	x1, [x1, #40]
    d22c:	blr	x1
    d230:	mov	x1, x23
    d234:	mov	x0, x22
    d238:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d23c:	mov	x1, x22
    d240:	mov	x0, x21
    d244:	mov	x8, x20
    d248:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d24c:	ldp	x4, x3, [sp, #104]
    d250:	mov	x2, x20
    d254:	mov	x0, x4
    d258:	mov	x1, x3
    d25c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d260:	ldp	x1, x0, [x21, #8]
    d264:	ldp	x4, x3, [x19, #24]
    d268:	stp	x4, x3, [sp, #432]
    d26c:	cmp	x1, x0
    d270:	b.eq	d2ac <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x1dc>  // b.none
    d274:	stp	x4, x3, [x1]
    d278:	add	x0, x1, #0x10
    d27c:	add	x20, x20, #0x8
    d280:	str	x0, [x21, #8]
    d284:	cmp	x23, x20
    d288:	b.ne	d120 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x50>  // b.any
    d28c:	ldp	x25, x26, [sp, #64]
    d290:	ldp	x27, x28, [sp, #80]
    d294:	mov	x0, x21
    d298:	ldp	x19, x20, [sp, #16]
    d29c:	ldp	x21, x22, [sp, #32]
    d2a0:	ldp	x23, x24, [sp, #48]
    d2a4:	ldp	x29, x30, [sp], #464
    d2a8:	ret
    d2ac:	add	x20, x20, #0x8
    d2b0:	mov	x2, x24
    d2b4:	mov	x0, x21
    d2b8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2bc:	cmp	x23, x20
    d2c0:	b.ne	d120 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x50>  // b.any
    d2c4:	b	d28c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x1bc>
    d2c8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2cc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2d0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d2d4:	add	x3, x3, #0x0
    d2d8:	add	x1, x1, #0x0
    d2dc:	add	x0, x0, #0x0
    d2e0:	mov	w2, #0x69                  	// #105
    d2e4:	bl	0 <__assert_fail>

000000000000d2e8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE>:
    d2e8:	stp	x29, x30, [sp, #-304]!
    d2ec:	mov	x29, sp
    d2f0:	stp	x19, x20, [sp, #16]
    d2f4:	mov	x19, x0
    d2f8:	mov	x0, x1
    d2fc:	stp	x21, x22, [sp, #32]
    d300:	stp	x23, x24, [sp, #48]
    d304:	str	x25, [sp, #64]
    d308:	stp	x1, x2, [sp, #96]
    d30c:	mov	x1, x2
    d310:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d314:	str	x0, [sp, #88]
    d318:	mov	w3, #0x18                  	// #24
    d31c:	ldr	w0, [x19, #80]
    d320:	ldr	x1, [x19, #72]
    d324:	ldr	x2, [sp, #88]
    d328:	umaddl	x0, w0, w3, x1
    d32c:	cmp	x1, x0
    d330:	b.ne	d344 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x5c>  // b.any
    d334:	b	d438 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x150>
    d338:	add	x1, x1, #0x18
    d33c:	cmp	x0, x1
    d340:	b.eq	d438 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x150>  // b.none
    d344:	ldr	x3, [x1]
    d348:	cmp	x2, x3
    d34c:	b.ne	d338 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x50>  // b.any
    d350:	ldr	x0, [x1, #16]
    d354:	cbz	x0, d438 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x150>
    d358:	ldrb	w1, [x0, #8]
    d35c:	cmp	w1, #0x5
    d360:	b.eq	d420 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x138>  // b.none
    d364:	ldp	x0, x25, [x19]
    d368:	add	x22, sp, #0x88
    d36c:	ldr	w24, [x19, #16]
    d370:	add	x23, sp, #0xa0
    d374:	add	x21, sp, #0xb8
    d378:	add	x19, sp, #0xd0
    d37c:	add	x20, sp, #0xe8
    d380:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d384:	str	x0, [sp, #88]
    d388:	ldp	x4, x3, [x0, #24]
    d38c:	add	x2, sp, #0x78
    d390:	mov	x0, x22
    d394:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d398:	add	x1, x1, #0x0
    d39c:	stp	x4, x3, [sp, #120]
    d3a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3a4:	mov	x0, x23
    d3a8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3ac:	add	x1, x1, #0x0
    d3b0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3b4:	mov	x8, x21
    d3b8:	mov	x0, x22
    d3bc:	mov	x1, x23
    d3c0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3c4:	mov	x0, x19
    d3c8:	mov	x22, x19
    d3cc:	add	x1, sp, #0x60
    d3d0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3d4:	add	x19, sp, #0x100
    d3d8:	mov	x0, x21
    d3dc:	mov	x1, x22
    d3e0:	mov	x8, x20
    d3e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3e8:	mov	x21, x19
    d3ec:	mov	x0, x19
    d3f0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d3f4:	add	x19, sp, #0x118
    d3f8:	add	x1, x1, #0x0
    d3fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d400:	mov	x8, x19
    d404:	mov	x1, x21
    d408:	mov	x0, x20
    d40c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d410:	mov	x2, x19
    d414:	mov	x0, x25
    d418:	mov	x1, x24
    d41c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d420:	ldp	x19, x20, [sp, #16]
    d424:	ldp	x21, x22, [sp, #32]
    d428:	ldp	x23, x24, [sp, #48]
    d42c:	ldr	x25, [sp, #64]
    d430:	ldp	x29, x30, [sp], #304
    d434:	ret
    d438:	ldp	x0, x25, [x19]
    d43c:	add	x21, sp, #0x88
    d440:	ldr	w24, [x19, #16]
    d444:	add	x23, sp, #0xa0
    d448:	add	x19, sp, #0xb8
    d44c:	add	x22, sp, #0xd0
    d450:	add	x20, sp, #0xe8
    d454:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d458:	str	x0, [sp, #88]
    d45c:	ldp	x4, x3, [x0, #24]
    d460:	add	x2, sp, #0x78
    d464:	mov	x0, x21
    d468:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d46c:	add	x1, x1, #0x0
    d470:	stp	x4, x3, [sp, #120]
    d474:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d478:	mov	x0, x23
    d47c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d480:	add	x1, x1, #0x0
    d484:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d488:	mov	x8, x19
    d48c:	mov	x0, x21
    d490:	mov	x1, x23
    d494:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d498:	mov	x0, x22
    d49c:	add	x1, sp, #0x60
    d4a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d4a4:	add	x21, sp, #0x100
    d4a8:	mov	x0, x19
    d4ac:	mov	x1, x22
    d4b0:	mov	x8, x20
    d4b4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d4b8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d4bc:	mov	x0, x21
    d4c0:	add	x19, sp, #0x118
    d4c4:	add	x1, x1, #0x0
    d4c8:	b	d3fc <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x114>
    d4cc:	nop

000000000000d4d0 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE>:
    d4d0:	stp	x29, x30, [sp, #-304]!
    d4d4:	mov	x29, sp
    d4d8:	stp	x19, x20, [sp, #16]
    d4dc:	mov	x19, x0
    d4e0:	mov	x0, x1
    d4e4:	stp	x21, x22, [sp, #32]
    d4e8:	stp	x23, x24, [sp, #48]
    d4ec:	str	x25, [sp, #64]
    d4f0:	stp	x1, x2, [sp, #96]
    d4f4:	mov	x1, x2
    d4f8:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d4fc:	ldr	w2, [x19, #80]
    d500:	mov	w3, #0x18                  	// #24
    d504:	ldr	x1, [x19, #72]
    d508:	umaddl	x2, w2, w3, x1
    d50c:	cmp	x1, x2
    d510:	b.ne	d524 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x54>  // b.any
    d514:	b	d61c <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x14c>
    d518:	add	x1, x1, #0x18
    d51c:	cmp	x2, x1
    d520:	b.eq	d61c <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x14c>  // b.none
    d524:	ldr	x3, [x1]
    d528:	cmp	x0, x3
    d52c:	b.ne	d518 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x48>  // b.any
    d530:	ldr	x0, [x1, #16]
    d534:	cbz	x0, d61c <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x14c>
    d538:	ldrb	w1, [x0, #8]
    d53c:	cmp	w1, #0x6
    d540:	b.eq	d600 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x130>  // b.none
    d544:	ldp	x0, x25, [x19]
    d548:	add	x22, sp, #0x88
    d54c:	ldr	w24, [x19, #16]
    d550:	add	x23, sp, #0xa0
    d554:	add	x21, sp, #0xb8
    d558:	add	x19, sp, #0xd0
    d55c:	add	x20, sp, #0xe8
    d560:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d564:	str	x0, [sp, #88]
    d568:	ldp	x4, x3, [x0, #24]
    d56c:	add	x2, sp, #0x78
    d570:	mov	x0, x22
    d574:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d578:	add	x1, x1, #0x0
    d57c:	stp	x4, x3, [sp, #120]
    d580:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d584:	mov	x0, x23
    d588:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d58c:	add	x1, x1, #0x0
    d590:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d594:	mov	x8, x21
    d598:	mov	x0, x22
    d59c:	mov	x1, x23
    d5a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5a4:	mov	x0, x19
    d5a8:	mov	x22, x19
    d5ac:	add	x1, sp, #0x60
    d5b0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5b4:	add	x19, sp, #0x100
    d5b8:	mov	x0, x21
    d5bc:	mov	x1, x22
    d5c0:	mov	x8, x20
    d5c4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5c8:	mov	x21, x19
    d5cc:	mov	x0, x19
    d5d0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5d4:	add	x19, sp, #0x118
    d5d8:	add	x1, x1, #0x0
    d5dc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5e0:	mov	x8, x19
    d5e4:	mov	x1, x21
    d5e8:	mov	x0, x20
    d5ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d5f0:	mov	x2, x19
    d5f4:	mov	x0, x25
    d5f8:	mov	x1, x24
    d5fc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d600:	ldp	x19, x20, [sp, #16]
    d604:	ldr	x0, [x0, #24]
    d608:	ldp	x21, x22, [sp, #32]
    d60c:	ldp	x23, x24, [sp, #48]
    d610:	ldr	x25, [sp, #64]
    d614:	ldp	x29, x30, [sp], #304
    d618:	ret
    d61c:	ldp	x0, x25, [x19]
    d620:	add	x21, sp, #0x88
    d624:	ldr	w24, [x19, #16]
    d628:	add	x23, sp, #0xa0
    d62c:	add	x19, sp, #0xb8
    d630:	add	x22, sp, #0xd0
    d634:	add	x20, sp, #0xe8
    d638:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d63c:	str	x0, [sp, #88]
    d640:	ldp	x4, x3, [x0, #24]
    d644:	add	x2, sp, #0x78
    d648:	mov	x0, x21
    d64c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d650:	add	x1, x1, #0x0
    d654:	stp	x4, x3, [sp, #120]
    d658:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d65c:	mov	x0, x23
    d660:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d664:	add	x1, x1, #0x0
    d668:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d66c:	mov	x8, x19
    d670:	mov	x0, x21
    d674:	mov	x1, x23
    d678:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d67c:	mov	x0, x22
    d680:	add	x1, sp, #0x60
    d684:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d688:	add	x21, sp, #0x100
    d68c:	mov	x0, x19
    d690:	mov	x1, x22
    d694:	mov	x8, x20
    d698:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d69c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d6a0:	mov	x0, x21
    d6a4:	add	x19, sp, #0x118
    d6a8:	add	x1, x1, #0x0
    d6ac:	b	d5dc <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x10c>

000000000000d6b0 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE>:
    d6b0:	stp	x29, x30, [sp, #-304]!
    d6b4:	mov	x29, sp
    d6b8:	stp	x19, x20, [sp, #16]
    d6bc:	mov	x19, x0
    d6c0:	mov	x0, x1
    d6c4:	stp	x21, x22, [sp, #32]
    d6c8:	stp	x23, x24, [sp, #48]
    d6cc:	str	x25, [sp, #64]
    d6d0:	stp	x1, x2, [sp, #96]
    d6d4:	mov	x1, x2
    d6d8:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d6dc:	ldr	w2, [x19, #80]
    d6e0:	mov	w3, #0x18                  	// #24
    d6e4:	ldr	x1, [x19, #72]
    d6e8:	umaddl	x2, w2, w3, x1
    d6ec:	cmp	x1, x2
    d6f0:	b.ne	d704 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x54>  // b.any
    d6f4:	b	d7fc <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x14c>
    d6f8:	add	x1, x1, #0x18
    d6fc:	cmp	x2, x1
    d700:	b.eq	d7fc <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x14c>  // b.none
    d704:	ldr	x3, [x1]
    d708:	cmp	x0, x3
    d70c:	b.ne	d6f8 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x48>  // b.any
    d710:	ldr	x0, [x1, #16]
    d714:	cbz	x0, d7fc <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x14c>
    d718:	ldrb	w1, [x0, #8]
    d71c:	cmp	w1, #0x2
    d720:	b.eq	d7e0 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x130>  // b.none
    d724:	ldp	x0, x25, [x19]
    d728:	add	x22, sp, #0x88
    d72c:	ldr	w24, [x19, #16]
    d730:	add	x23, sp, #0xa0
    d734:	add	x21, sp, #0xb8
    d738:	add	x19, sp, #0xd0
    d73c:	add	x20, sp, #0xe8
    d740:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d744:	str	x0, [sp, #88]
    d748:	ldp	x4, x3, [x0, #24]
    d74c:	add	x2, sp, #0x78
    d750:	mov	x0, x22
    d754:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d758:	add	x1, x1, #0x0
    d75c:	stp	x4, x3, [sp, #120]
    d760:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d764:	mov	x0, x23
    d768:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d76c:	add	x1, x1, #0x0
    d770:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d774:	mov	x8, x21
    d778:	mov	x0, x22
    d77c:	mov	x1, x23
    d780:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d784:	mov	x0, x19
    d788:	mov	x22, x19
    d78c:	add	x1, sp, #0x60
    d790:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d794:	add	x19, sp, #0x100
    d798:	mov	x0, x21
    d79c:	mov	x1, x22
    d7a0:	mov	x8, x20
    d7a4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d7a8:	mov	x21, x19
    d7ac:	mov	x0, x19
    d7b0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d7b4:	add	x19, sp, #0x118
    d7b8:	add	x1, x1, #0x0
    d7bc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d7c0:	mov	x8, x19
    d7c4:	mov	x1, x21
    d7c8:	mov	x0, x20
    d7cc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d7d0:	mov	x2, x19
    d7d4:	mov	x0, x25
    d7d8:	mov	x1, x24
    d7dc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d7e0:	ldrb	w0, [x0, #24]
    d7e4:	ldp	x19, x20, [sp, #16]
    d7e8:	ldp	x21, x22, [sp, #32]
    d7ec:	ldp	x23, x24, [sp, #48]
    d7f0:	ldr	x25, [sp, #64]
    d7f4:	ldp	x29, x30, [sp], #304
    d7f8:	ret
    d7fc:	ldp	x0, x25, [x19]
    d800:	add	x21, sp, #0x88
    d804:	ldr	w24, [x19, #16]
    d808:	add	x23, sp, #0xa0
    d80c:	add	x19, sp, #0xb8
    d810:	add	x22, sp, #0xd0
    d814:	add	x20, sp, #0xe8
    d818:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d81c:	mov	x3, x0
    d820:	add	x2, sp, #0x78
    d824:	mov	x0, x21
    d828:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d82c:	add	x1, x1, #0x0
    d830:	ldp	x4, x3, [x3, #24]
    d834:	stp	x4, x3, [sp, #120]
    d838:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d83c:	mov	x0, x23
    d840:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d844:	add	x1, x1, #0x0
    d848:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d84c:	mov	x8, x19
    d850:	mov	x0, x21
    d854:	mov	x1, x23
    d858:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d85c:	mov	x0, x22
    d860:	add	x1, sp, #0x60
    d864:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d868:	add	x21, sp, #0x100
    d86c:	mov	x0, x19
    d870:	mov	x1, x22
    d874:	mov	x8, x20
    d878:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d87c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d880:	mov	x0, x21
    d884:	add	x19, sp, #0x118
    d888:	add	x1, x1, #0x0
    d88c:	b	d7bc <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x10c>

000000000000d890 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE>:
    d890:	stp	x29, x30, [sp, #-288]!
    d894:	mov	x29, sp
    d898:	stp	x19, x20, [sp, #16]
    d89c:	mov	x19, x0
    d8a0:	mov	x0, x1
    d8a4:	stp	x21, x22, [sp, #32]
    d8a8:	stp	x23, x24, [sp, #48]
    d8ac:	str	x25, [sp, #64]
    d8b0:	stp	x1, x2, [sp, #80]
    d8b4:	mov	x1, x2
    d8b8:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d8bc:	ldr	w2, [x19, #80]
    d8c0:	mov	w3, #0x18                  	// #24
    d8c4:	ldr	x1, [x19, #72]
    d8c8:	umaddl	x2, w2, w3, x1
    d8cc:	cmp	x1, x2
    d8d0:	b.ne	d8e4 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x54>  // b.any
    d8d4:	b	d944 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xb4>
    d8d8:	add	x1, x1, #0x18
    d8dc:	cmp	x2, x1
    d8e0:	b.eq	d944 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xb4>  // b.none
    d8e4:	ldr	x3, [x1]
    d8e8:	cmp	x0, x3
    d8ec:	b.ne	d8d8 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x48>  // b.any
    d8f0:	ldr	x0, [x1, #16]
    d8f4:	cbz	x0, d944 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xb4>
    d8f8:	ldrb	w1, [x0, #8]
    d8fc:	cmp	w1, #0x6
    d900:	b.eq	d928 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x98>  // b.none
    d904:	cmp	w1, #0x18
    d908:	mov	x0, #0x0                   	// #0
    d90c:	b.ne	d9f8 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x168>  // b.any
    d910:	ldp	x19, x20, [sp, #16]
    d914:	ldp	x21, x22, [sp, #32]
    d918:	ldp	x23, x24, [sp, #48]
    d91c:	ldr	x25, [sp, #64]
    d920:	ldp	x29, x30, [sp], #288
    d924:	ret
    d928:	ldp	x19, x20, [sp, #16]
    d92c:	ldr	x0, [x0, #24]
    d930:	ldp	x21, x22, [sp, #32]
    d934:	ldp	x23, x24, [sp, #48]
    d938:	ldr	x25, [sp, #64]
    d93c:	ldp	x29, x30, [sp], #288
    d940:	ret
    d944:	ldp	x0, x25, [x19]
    d948:	add	x21, sp, #0x78
    d94c:	ldr	w24, [x19, #16]
    d950:	add	x23, sp, #0x90
    d954:	add	x19, sp, #0xa8
    d958:	add	x22, sp, #0xc0
    d95c:	add	x20, sp, #0xd8
    d960:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d964:	mov	x3, x0
    d968:	add	x2, sp, #0x68
    d96c:	mov	x0, x21
    d970:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d974:	add	x1, x1, #0x0
    d978:	ldp	x4, x3, [x3, #24]
    d97c:	stp	x4, x3, [sp, #104]
    d980:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d984:	mov	x0, x23
    d988:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d98c:	add	x1, x1, #0x0
    d990:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d994:	mov	x8, x19
    d998:	mov	x0, x21
    d99c:	mov	x1, x23
    d9a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d9a4:	mov	x0, x22
    d9a8:	add	x1, sp, #0x50
    d9ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d9b0:	add	x21, sp, #0xf0
    d9b4:	mov	x0, x19
    d9b8:	mov	x1, x22
    d9bc:	mov	x8, x20
    d9c0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d9c4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d9c8:	mov	x0, x21
    d9cc:	add	x19, sp, #0x108
    d9d0:	add	x1, x1, #0x0
    d9d4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d9d8:	mov	x8, x19
    d9dc:	mov	x1, x21
    d9e0:	mov	x0, x20
    d9e4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    d9e8:	mov	x2, x19
    d9ec:	mov	x0, x25
    d9f0:	mov	x1, x24
    d9f4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d9f8:	ldp	x0, x25, [x19]
    d9fc:	add	x22, sp, #0x78
    da00:	ldr	w24, [x19, #16]
    da04:	add	x23, sp, #0x90
    da08:	add	x21, sp, #0xa8
    da0c:	add	x19, sp, #0xc0
    da10:	add	x20, sp, #0xd8
    da14:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    da18:	mov	x3, x0
    da1c:	add	x2, sp, #0x68
    da20:	mov	x0, x22
    da24:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    da28:	add	x1, x1, #0x0
    da2c:	ldp	x4, x3, [x3, #24]
    da30:	stp	x4, x3, [sp, #104]
    da34:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    da38:	mov	x0, x23
    da3c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    da40:	add	x1, x1, #0x0
    da44:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    da48:	mov	x8, x21
    da4c:	mov	x0, x22
    da50:	mov	x1, x23
    da54:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    da58:	mov	x0, x19
    da5c:	mov	x22, x19
    da60:	add	x1, sp, #0x50
    da64:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    da68:	add	x19, sp, #0xf0
    da6c:	mov	x0, x21
    da70:	mov	x1, x22
    da74:	mov	x8, x20
    da78:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    da7c:	mov	x21, x19
    da80:	mov	x0, x19
    da84:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    da88:	add	x19, sp, #0x108
    da8c:	add	x1, x1, #0x0
    da90:	b	d9d4 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x144>
    da94:	nop

000000000000da98 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE>:
    da98:	stp	x29, x30, [sp, #-320]!
    da9c:	mov	x29, sp
    daa0:	stp	x19, x20, [sp, #16]
    daa4:	mov	x19, x0
    daa8:	stp	x21, x22, [sp, #32]
    daac:	stp	x23, x24, [sp, #48]
    dab0:	str	x25, [sp, #64]
    dab4:	str	x0, [sp, #88]
    dab8:	mov	x0, x1
    dabc:	stp	x1, x2, [sp, #96]
    dac0:	stp	x1, x2, [sp, #112]
    dac4:	mov	x1, x2
    dac8:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    dacc:	ldr	w1, [x19, #80]
    dad0:	mov	w3, #0x18                  	// #24
    dad4:	str	x0, [sp, #88]
    dad8:	ldr	x0, [x19, #72]
    dadc:	ldr	x2, [sp, #88]
    dae0:	umaddl	x1, w1, w3, x0
    dae4:	cmp	x0, x1
    dae8:	b.ne	dafc <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x64>  // b.any
    daec:	b	dbfc <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x164>
    daf0:	add	x0, x0, #0x18
    daf4:	cmp	x1, x0
    daf8:	b.eq	dbfc <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x164>  // b.none
    dafc:	ldr	x3, [x0]
    db00:	cmp	x2, x3
    db04:	b.ne	daf0 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x58>  // b.any
    db08:	ldr	x1, [x0, #16]
    db0c:	cbz	x1, dbfc <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x164>
    db10:	ldrb	w0, [x1, #8]
    db14:	cmp	w0, #0x12
    db18:	b.eq	dbe0 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x148>  // b.none
    db1c:	cmp	w0, #0x4
    db20:	b.eq	dbe0 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x148>  // b.none
    db24:	ldp	x0, x25, [x19]
    db28:	add	x22, sp, #0x98
    db2c:	ldr	w24, [x19, #16]
    db30:	add	x23, sp, #0xb0
    db34:	add	x21, sp, #0xc8
    db38:	add	x19, sp, #0xe0
    db3c:	add	x20, sp, #0xf8
    db40:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    db44:	str	x0, [sp, #88]
    db48:	ldp	x4, x3, [x0, #24]
    db4c:	add	x2, sp, #0x88
    db50:	mov	x0, x22
    db54:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    db58:	add	x1, x1, #0x0
    db5c:	stp	x4, x3, [sp, #136]
    db60:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    db64:	mov	x0, x23
    db68:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    db6c:	add	x1, x1, #0x0
    db70:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    db74:	mov	x8, x21
    db78:	mov	x0, x22
    db7c:	mov	x1, x23
    db80:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    db84:	mov	x0, x19
    db88:	add	x1, sp, #0x70
    db8c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    db90:	mov	x22, x19
    db94:	mov	x8, x20
    db98:	add	x19, sp, #0x110
    db9c:	mov	x0, x21
    dba0:	mov	x1, x22
    dba4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dba8:	mov	x21, x19
    dbac:	mov	x0, x19
    dbb0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dbb4:	add	x19, sp, #0x128
    dbb8:	add	x1, x1, #0x0
    dbbc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dbc0:	mov	x8, x19
    dbc4:	mov	x1, x21
    dbc8:	mov	x0, x20
    dbcc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dbd0:	mov	x2, x19
    dbd4:	mov	x0, x25
    dbd8:	mov	x1, x24
    dbdc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    dbe0:	ldp	x19, x20, [sp, #16]
    dbe4:	ldp	x0, x1, [x1, #24]
    dbe8:	ldp	x21, x22, [sp, #32]
    dbec:	ldp	x23, x24, [sp, #48]
    dbf0:	ldr	x25, [sp, #64]
    dbf4:	ldp	x29, x30, [sp], #320
    dbf8:	ret
    dbfc:	ldp	x0, x23, [x19]
    dc00:	add	x21, sp, #0x98
    dc04:	ldr	w25, [x19, #16]
    dc08:	add	x24, sp, #0xb0
    dc0c:	add	x19, sp, #0xc8
    dc10:	add	x22, sp, #0xe0
    dc14:	add	x20, sp, #0xf8
    dc18:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc1c:	str	x0, [sp, #88]
    dc20:	ldp	x4, x3, [x0, #24]
    dc24:	add	x2, sp, #0x88
    dc28:	mov	x0, x21
    dc2c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc30:	add	x1, x1, #0x0
    dc34:	stp	x4, x3, [sp, #136]
    dc38:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc3c:	mov	x0, x24
    dc40:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc44:	add	x1, x1, #0x0
    dc48:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc4c:	mov	x8, x19
    dc50:	mov	x0, x21
    dc54:	mov	x1, x24
    dc58:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc5c:	mov	x0, x22
    dc60:	add	x1, sp, #0x70
    dc64:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc68:	add	x21, sp, #0x110
    dc6c:	mov	x8, x20
    dc70:	mov	x0, x19
    dc74:	mov	x1, x22
    dc78:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc7c:	mov	x0, x21
    dc80:	add	x19, sp, #0x128
    dc84:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc88:	add	x1, x1, #0x0
    dc8c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dc90:	mov	x8, x19
    dc94:	mov	x1, x21
    dc98:	mov	x0, x20
    dc9c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dca0:	mov	x2, x19
    dca4:	mov	x0, x23
    dca8:	mov	x1, x25
    dcac:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000dcb0 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb>:
    dcb0:	stp	x29, x30, [sp, #-352]!
    dcb4:	mov	x29, sp
    dcb8:	stp	x19, x20, [sp, #16]
    dcbc:	mov	x19, x0
    dcc0:	mov	x20, x3
    dcc4:	mov	x0, x1
    dcc8:	stp	x21, x22, [sp, #32]
    dccc:	stp	x23, x24, [sp, #48]
    dcd0:	str	x25, [sp, #64]
    dcd4:	stp	x1, x2, [sp, #80]
    dcd8:	str	x3, [sp, #104]
    dcdc:	stp	x1, x2, [sp, #112]
    dce0:	mov	x1, x2
    dce4:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    dce8:	ldr	w1, [x19, #80]
    dcec:	mov	w3, #0x18                  	// #24
    dcf0:	str	x0, [sp, #80]
    dcf4:	ldr	x0, [x19, #72]
    dcf8:	ldr	x2, [sp, #80]
    dcfc:	umaddl	x1, w1, w3, x0
    dd00:	cmp	x0, x1
    dd04:	b.ne	dd18 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x68>  // b.any
    dd08:	b	de40 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x190>
    dd0c:	add	x0, x0, #0x18
    dd10:	cmp	x1, x0
    dd14:	b.eq	de40 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x190>  // b.none
    dd18:	ldr	x3, [x0]
    dd1c:	cmp	x2, x3
    dd20:	b.ne	dd0c <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x5c>  // b.any
    dd24:	ldr	x0, [x0, #16]
    dd28:	cbz	x0, de40 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x190>
    dd2c:	ldrb	w1, [x0, #8]
    dd30:	cmp	w1, #0x18
    dd34:	b.eq	de1c <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x16c>  // b.none
    dd38:	strb	wzr, [x20]
    dd3c:	cmp	w1, #0x2
    dd40:	b.eq	de00 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x150>  // b.none
    dd44:	ldp	x0, x25, [x19]
    dd48:	add	x22, sp, #0xb0
    dd4c:	ldr	w24, [x19, #16]
    dd50:	add	x23, sp, #0xc8
    dd54:	add	x21, sp, #0xe0
    dd58:	add	x19, sp, #0xf8
    dd5c:	add	x20, sp, #0x110
    dd60:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dd64:	str	x0, [sp, #80]
    dd68:	ldp	x4, x3, [x0, #24]
    dd6c:	add	x2, sp, #0x98
    dd70:	mov	x0, x22
    dd74:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dd78:	add	x1, x1, #0x0
    dd7c:	stp	x4, x3, [sp, #152]
    dd80:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dd84:	mov	x0, x23
    dd88:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dd8c:	add	x1, x1, #0x0
    dd90:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dd94:	mov	x8, x21
    dd98:	mov	x0, x22
    dd9c:	mov	x1, x23
    dda0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dda4:	mov	x0, x19
    dda8:	add	x1, sp, #0x70
    ddac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ddb0:	mov	x22, x19
    ddb4:	mov	x8, x20
    ddb8:	add	x19, sp, #0x128
    ddbc:	mov	x0, x21
    ddc0:	mov	x1, x22
    ddc4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ddc8:	mov	x21, x19
    ddcc:	mov	x0, x19
    ddd0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ddd4:	add	x19, sp, #0x140
    ddd8:	add	x1, x1, #0x0
    dddc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dde0:	mov	x8, x19
    dde4:	mov	x1, x21
    dde8:	mov	x0, x20
    ddec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ddf0:	mov	x2, x19
    ddf4:	mov	x0, x25
    ddf8:	mov	x1, x24
    ddfc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    de00:	ldrb	w0, [x0, #24]
    de04:	ldp	x19, x20, [sp, #16]
    de08:	ldp	x21, x22, [sp, #32]
    de0c:	ldp	x23, x24, [sp, #48]
    de10:	ldr	x25, [sp, #64]
    de14:	ldp	x29, x30, [sp], #352
    de18:	ret
    de1c:	mov	w1, #0x1                   	// #1
    de20:	strb	w1, [x20]
    de24:	mov	w0, #0x0                   	// #0
    de28:	ldp	x19, x20, [sp, #16]
    de2c:	ldp	x21, x22, [sp, #32]
    de30:	ldp	x23, x24, [sp, #48]
    de34:	ldr	x25, [sp, #64]
    de38:	ldp	x29, x30, [sp], #352
    de3c:	ret
    de40:	ldp	x0, x23, [x19]
    de44:	add	x20, sp, #0x98
    de48:	add	x21, sp, #0xb0
    de4c:	ldr	w22, [x19, #16]
    de50:	add	x24, sp, #0xc8
    de54:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    de58:	str	x0, [sp, #80]
    de5c:	ldp	x4, x3, [x0, #24]
    de60:	add	x2, sp, #0x88
    de64:	mov	x0, x20
    de68:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    de6c:	add	x1, x1, #0x0
    de70:	stp	x4, x3, [sp, #136]
    de74:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    de78:	mov	x0, x21
    de7c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    de80:	add	x1, x1, #0x0
    de84:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    de88:	mov	x1, x21
    de8c:	mov	x0, x20
    de90:	mov	x8, x24
    de94:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    de98:	ldr	x1, [sp, #112]
    de9c:	cbz	x1, df1c <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x26c>
    dea0:	add	x4, sp, #0x150
    dea4:	add	x19, sp, #0x140
    dea8:	ldr	x2, [sp, #120]
    deac:	mov	x0, x19
    deb0:	mov	w3, #0x0                   	// #0
    deb4:	str	x4, [sp, #320]
    deb8:	add	x2, x1, x2
    debc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dec0:	add	x0, sp, #0xe0
    dec4:	mov	x1, x19
    dec8:	add	x20, sp, #0xf8
    decc:	mov	x19, x0
    ded0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ded4:	add	x21, sp, #0x110
    ded8:	mov	x8, x20
    dedc:	mov	x1, x19
    dee0:	mov	x0, x24
    dee4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dee8:	mov	x0, x21
    deec:	add	x19, sp, #0x128
    def0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    def4:	add	x1, x1, #0x0
    def8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    defc:	mov	x8, x19
    df00:	mov	x1, x21
    df04:	mov	x0, x20
    df08:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    df0c:	mov	x2, x19
    df10:	mov	x0, x23
    df14:	mov	x1, x22
    df18:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    df1c:	add	x19, sp, #0x140
    df20:	strb	wzr, [sp, #336]
    df24:	add	x0, x19, #0x10
    df28:	stp	x0, xzr, [sp, #320]
    df2c:	b	dec0 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x210>

000000000000df30 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>:
    df30:	stp	x29, x30, [sp, #-112]!
    df34:	mov	x29, sp
    df38:	stp	x23, x24, [sp, #48]
    df3c:	adrp	x24, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    df40:	add	x23, x24, #0x0
    df44:	stp	x19, x20, [sp, #16]
    df48:	mov	x19, x1
    df4c:	mov	x20, x2
    df50:	stp	x21, x22, [sp, #32]
    df54:	mov	x21, x0
    df58:	add	x22, x23, #0x2d0
    df5c:	ldarb	w0, [x22]
    df60:	tbz	w0, #0, e138 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x208>
    df64:	add	x1, x24, #0x0
    df68:	add	x0, x1, #0x300
    df6c:	add	x1, x1, #0x31c
    df70:	ldarb	w1, [x1]
    df74:	tst	w1, #0xff
    df78:	b.eq	e130 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x200>  // b.none
    df7c:	add	x22, x24, #0x0
    df80:	add	x0, x22, #0x318
    df84:	ldxr	w1, [x0]
    df88:	add	w1, w1, #0x1
    df8c:	stxr	w2, w1, [x0]
    df90:	cbnz	w2, df84 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x54>
    df94:	cbnz	x19, dff0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0xc0>
    df98:	add	x0, x22, #0xa0
    df9c:	mov	w2, #0x4                   	// #4
    dfa0:	mov	x1, #0x30                  	// #48
    dfa4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfa8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfac:	adrp	x3, 410 <_ZNK4llvm10CondOpInit10isCompleteEv+0x70>
    dfb0:	ldr	x4, [x20]
    dfb4:	mov	w5, #0x4                   	// #4
    dfb8:	ldr	x1, [x1]
    dfbc:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    dfc0:	ldr	x3, [x3]
    dfc4:	add	x1, x1, #0x10
    dfc8:	add	x2, x2, #0x0
    dfcc:	str	x1, [x0]
    dfd0:	strh	w5, [x0, #8]
    dfd4:	stp	x3, x2, [x0, #16]
    dfd8:	stp	xzr, x4, [x0, #32]
    dfdc:	ldp	x19, x20, [sp, #16]
    dfe0:	ldp	x21, x22, [sp, #32]
    dfe4:	ldp	x23, x24, [sp, #48]
    dfe8:	ldp	x29, x30, [sp], #112
    dfec:	ret
    dff0:	stp	x25, x26, [sp, #64]
    dff4:	add	x25, x22, #0x2e0
    dff8:	mov	x1, x21
    dffc:	mov	x0, x25
    e000:	mov	x2, x19
    e004:	stp	x27, x28, [sp, #80]
    e008:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    e00c:	mov	w28, w0
    e010:	ldr	x26, [x22, #736]
    e014:	mov	x23, x28
    e018:	ldr	x0, [x26, x28, lsl #3]
    e01c:	add	x1, x26, w28, uxtw #3
    e020:	cbz	x0, e0ac <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x17c>
    e024:	cmn	x0, #0x8
    e028:	b.eq	e0a0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x170>  // b.none
    e02c:	add	x0, sp, #0x68
    e030:	mov	w2, #0x0                   	// #0
    e034:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e038:	ldr	x1, [sp, #104]
    e03c:	add	x0, x24, #0x0
    e040:	ldr	x19, [x1]
    e044:	mov	w2, #0x4                   	// #4
    e048:	mov	x1, #0x30                  	// #48
    e04c:	add	x0, x0, #0xa0
    e050:	ldr	x21, [x19], #8
    e054:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e058:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e05c:	adrp	x2, 410 <_ZNK4llvm10CondOpInit10isCompleteEv+0x70>
    e060:	mov	w4, #0x4                   	// #4
    e064:	strh	w4, [x0, #8]
    e068:	ldr	x1, [x1]
    e06c:	ldr	x2, [x2]
    e070:	add	x1, x1, #0x10
    e074:	ldr	x3, [x20]
    e078:	ldp	x25, x26, [sp, #64]
    e07c:	ldp	x27, x28, [sp, #80]
    e080:	str	x1, [x0]
    e084:	stp	x2, x19, [x0, #16]
    e088:	stp	x21, x3, [x0, #32]
    e08c:	ldp	x19, x20, [sp, #16]
    e090:	ldp	x21, x22, [sp, #32]
    e094:	ldp	x23, x24, [sp, #48]
    e098:	ldp	x29, x30, [sp], #112
    e09c:	ret
    e0a0:	ldr	w0, [x25, #16]
    e0a4:	sub	w0, w0, #0x1
    e0a8:	str	w0, [x25, #16]
    e0ac:	add	x25, x24, #0x0
    e0b0:	add	x1, x19, #0x9
    e0b4:	mov	w2, #0x3                   	// #3
    e0b8:	add	x22, x25, #0x2e0
    e0bc:	ldr	x0, [x22, #24]
    e0c0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e0c4:	mov	x3, x0
    e0c8:	mov	x27, x0
    e0cc:	mov	x1, x21
    e0d0:	mov	x2, x19
    e0d4:	str	x19, [x3], #8
    e0d8:	mov	x0, x3
    e0dc:	bl	0 <memcpy>
    e0e0:	ldp	w1, w2, [x22, #12]
    e0e4:	strb	wzr, [x0, x19]
    e0e8:	str	x27, [x26, x28, lsl #3]
    e0ec:	add	w0, w1, #0x1
    e0f0:	ldr	w1, [x22, #8]
    e0f4:	str	w0, [x22, #12]
    e0f8:	add	w0, w0, w2
    e0fc:	cmp	w0, w1
    e100:	b.hi	e18c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x25c>  // b.pmore
    e104:	mov	w1, w23
    e108:	mov	x0, x22
    e10c:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    e110:	mov	w3, w0
    e114:	ldr	x1, [x25, #736]
    e118:	add	x0, sp, #0x68
    e11c:	mov	w2, #0x0                   	// #0
    e120:	add	x1, x1, w3, uxtw #3
    e124:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e128:	ldr	x1, [sp, #104]
    e12c:	b	e03c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x10c>
    e130:	bl	0 <_ZN4llvm17TrackingStatistic17RegisterStatisticEv>
    e134:	b	df7c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x4c>
    e138:	mov	x0, x22
    e13c:	bl	0 <__cxa_guard_acquire>
    e140:	cbz	w0, df64 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x34>
    e144:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e148:	add	x1, x23, #0xa0
    e14c:	stp	x25, x26, [sp, #64]
    e150:	add	x25, x23, #0x2e0
    e154:	ldr	q0, [x0]
    e158:	str	xzr, [x23, #736]
    e15c:	str	x1, [x23, #760]
    e160:	mov	x0, x22
    e164:	stur	q0, [x25, #8]
    e168:	bl	0 <__cxa_guard_release>
    e16c:	mov	x1, x25
    e170:	adrp	x2, 0 <__dso_handle>
    e174:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e178:	add	x2, x2, #0x0
    e17c:	add	x0, x0, #0x0
    e180:	bl	0 <__cxa_atexit>
    e184:	ldp	x25, x26, [sp, #64]
    e188:	b	df64 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x34>
    e18c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e190:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e194:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e198:	add	x3, x3, #0x0
    e19c:	add	x1, x1, #0x0
    e1a0:	add	x0, x0, #0x0
    e1a4:	mov	w2, #0x1bb                 	// #443
    e1a8:	bl	0 <__assert_fail>
    e1ac:	nop

000000000000e1b0 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE>:
    e1b0:	stp	x29, x30, [sp, #-32]!
    e1b4:	mov	x29, sp
    e1b8:	cbz	x1, e204 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x54>
    e1bc:	mov	x3, x0
    e1c0:	ldr	w0, [x1, #8]
    e1c4:	cmp	w0, #0x4
    e1c8:	b.eq	e1f8 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x48>  // b.none
    e1cc:	cmp	w0, #0x2
    e1d0:	mov	x0, #0x0                   	// #0
    e1d4:	b.eq	e1e0 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x30>  // b.none
    e1d8:	ldp	x29, x30, [sp], #32
    e1dc:	ret
    e1e0:	ldp	x0, x1, [x3, #24]
    e1e4:	add	x2, sp, #0x18
    e1e8:	str	xzr, [sp, #24]
    e1ec:	bl	df30 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>
    e1f0:	ldp	x29, x30, [sp], #32
    e1f4:	ret
    e1f8:	mov	x0, x3
    e1fc:	ldp	x29, x30, [sp], #32
    e200:	ret
    e204:	bl	630 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

000000000000e208 <_ZN4llvm11MapResolver7resolveEPNS_4InitE>:
    e208:	stp	x29, x30, [sp, #-80]!
    e20c:	mov	x29, sp
    e210:	ldr	w3, [x0, #48]
    e214:	stp	x19, x20, [sp, #16]
    e218:	str	x1, [sp, #56]
    e21c:	ldr	x20, [x0, #32]
    e220:	cbz	w3, e330 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x128>
    e224:	stp	x21, x22, [sp, #32]
    e228:	cmn	x1, #0x10
    e22c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    e230:	b.eq	e47c <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x274>  // b.none
    e234:	lsr	w2, w1, #9
    e238:	sub	w6, w3, #0x1
    e23c:	eor	w2, w2, w1, lsr #4
    e240:	mov	w5, #0x18                  	// #24
    e244:	and	w2, w2, w6
    e248:	mov	x19, x0
    e24c:	umull	x0, w2, w5
    e250:	add	x4, x20, x0
    e254:	ldr	x0, [x20, x0]
    e258:	cmp	x1, x0
    e25c:	b.ne	e348 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x140>  // b.any
    e260:	mov	w21, #0x18                  	// #24
    e264:	umaddl	x3, w3, w21, x20
    e268:	cmp	x4, x3
    e26c:	b.eq	e4cc <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x2c4>  // b.none
    e270:	ldrb	w0, [x4, #16]
    e274:	ldr	x20, [x4, #8]
    e278:	cbnz	w0, e31c <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x114>
    e27c:	ldr	w0, [x19, #40]
    e280:	cmp	w0, #0x1
    e284:	b.ls	e31c <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x114>  // b.plast
    e288:	ldr	x3, [x20]
    e28c:	mov	x5, #0xfffffffffffffff0    	// #-16
    e290:	ldr	w2, [x19, #44]
    e294:	sub	w1, w0, #0x1
    e298:	mov	x0, x20
    e29c:	add	x22, x19, #0x18
    e2a0:	ldr	x3, [x3, #96]
    e2a4:	add	w2, w2, #0x1
    e2a8:	str	x5, [x4]
    e2ac:	stp	w1, w2, [x19, #40]
    e2b0:	mov	x1, x19
    e2b4:	blr	x3
    e2b8:	mov	x20, x0
    e2bc:	ldr	w4, [x19, #48]
    e2c0:	cbz	w4, e360 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x158>
    e2c4:	ldr	x1, [sp, #56]
    e2c8:	cmn	x1, #0x8
    e2cc:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    e2d0:	b.eq	e49c <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x294>  // b.none
    e2d4:	lsr	w0, w1, #9
    e2d8:	sub	w6, w4, #0x1
    e2dc:	eor	w0, w0, w1, lsr #4
    e2e0:	and	w0, w0, w6
    e2e4:	ldr	x3, [x19, #32]
    e2e8:	umull	x5, w0, w21
    e2ec:	add	x2, x3, x5
    e2f0:	ldr	x5, [x3, x5]
    e2f4:	cmp	x5, x1
    e2f8:	b.ne	e3cc <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x1c4>  // b.any
    e2fc:	mov	w0, #0x1                   	// #1
    e300:	strb	w0, [x2, #16]
    e304:	ldp	x21, x22, [sp, #32]
    e308:	str	x20, [x2, #8]
    e30c:	mov	x0, x20
    e310:	ldp	x19, x20, [sp, #16]
    e314:	ldp	x29, x30, [sp], #80
    e318:	ret
    e31c:	ldp	x21, x22, [sp, #32]
    e320:	mov	x0, x20
    e324:	ldp	x19, x20, [sp, #16]
    e328:	ldp	x29, x30, [sp], #80
    e32c:	ret
    e330:	cbz	x20, e320 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x118>
    e334:	mov	x20, #0x0                   	// #0
    e338:	mov	x0, x20
    e33c:	ldp	x19, x20, [sp, #16]
    e340:	ldp	x29, x30, [sp], #80
    e344:	ret
    e348:	mov	w4, #0x1                   	// #1
    e34c:	cmn	x0, #0x8
    e350:	b.ne	e424 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x21c>  // b.any
    e354:	mov	x20, #0x0                   	// #0
    e358:	ldp	x21, x22, [sp, #32]
    e35c:	b	e338 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x130>
    e360:	ldr	x0, [x19, #24]
    e364:	mov	w6, #0x0                   	// #0
    e368:	add	x0, x0, #0x1
    e36c:	str	x0, [x19, #24]
    e370:	mov	w1, w6
    e374:	mov	x0, x22
    e378:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e37c:	add	x2, sp, #0x48
    e380:	mov	x0, x22
    e384:	add	x1, sp, #0x38
    e388:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e38c:	ldr	x2, [sp, #72]
    e390:	cbz	x2, e4ac <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x2a4>
    e394:	ldr	w3, [x19, #40]
    e398:	ldr	x1, [sp, #56]
    e39c:	nop
    e3a0:	add	w0, w3, #0x1
    e3a4:	ldr	x4, [x2]
    e3a8:	str	w0, [x19, #40]
    e3ac:	cmn	x4, #0x8
    e3b0:	b.eq	e3c0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x1b8>  // b.none
    e3b4:	ldr	w0, [x19, #44]
    e3b8:	sub	w0, w0, #0x1
    e3bc:	str	w0, [x19, #44]
    e3c0:	stp	x1, xzr, [x2]
    e3c4:	strb	wzr, [x2, #16]
    e3c8:	b	e2fc <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0xf4>
    e3cc:	mov	w8, #0x1                   	// #1
    e3d0:	mov	x7, #0x0                   	// #0
    e3d4:	cmn	x5, #0x8
    e3d8:	b.ne	e44c <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x244>  // b.any
    e3dc:	ldr	x0, [x19, #24]
    e3e0:	lsl	w6, w4, #1
    e3e4:	ldr	w3, [x19, #40]
    e3e8:	cmp	x7, #0x0
    e3ec:	add	x0, x0, #0x1
    e3f0:	str	x0, [x19, #24]
    e3f4:	add	w5, w3, #0x1
    e3f8:	add	w0, w6, w4
    e3fc:	csel	x2, x2, x7, eq  // eq = none
    e400:	cmp	w0, w5, lsl #2
    e404:	b.ls	e370 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x168>  // b.plast
    e408:	ldr	w0, [x19, #44]
    e40c:	sub	w0, w4, w0
    e410:	sub	w0, w0, w5
    e414:	cmp	w0, w4, lsr #3
    e418:	b.hi	e3a0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x198>  // b.pmore
    e41c:	mov	w1, w4
    e420:	b	e374 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x16c>
    e424:	add	w2, w2, w4
    e428:	add	w7, w4, #0x1
    e42c:	and	w2, w6, w2
    e430:	umull	x0, w2, w5
    e434:	add	x4, x20, x0
    e438:	ldr	x0, [x20, x0]
    e43c:	cmp	x1, x0
    e440:	b.eq	e260 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x58>  // b.none
    e444:	mov	w4, w7
    e448:	b	e34c <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x144>
    e44c:	add	w0, w0, w8
    e450:	cmp	x7, #0x0
    e454:	and	w0, w6, w0
    e458:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    e45c:	csel	x7, x7, x2, ne  // ne = any
    e460:	add	w8, w8, #0x1
    e464:	umull	x5, w0, w21
    e468:	add	x2, x3, x5
    e46c:	ldr	x5, [x3, x5]
    e470:	cmp	x1, x5
    e474:	b.eq	e2fc <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0xf4>  // b.none
    e478:	b	e3d4 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x1cc>
    e47c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e480:	add	x3, x3, #0x0
    e484:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e488:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e48c:	add	x1, x1, #0x0
    e490:	add	x0, x0, #0x0
    e494:	mov	w2, #0x250                 	// #592
    e498:	bl	0 <__assert_fail>
    e49c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e4a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e4a4:	add	x3, x3, #0x0
    e4a8:	b	e488 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x280>
    e4ac:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e4b0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e4b4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e4b8:	add	x3, x3, #0x0
    e4bc:	add	x1, x1, #0x0
    e4c0:	add	x0, x0, #0x0
    e4c4:	mov	w2, #0x22f                 	// #559
    e4c8:	bl	0 <__assert_fail>
    e4cc:	mov	x20, #0x0                   	// #0
    e4d0:	ldp	x21, x22, [sp, #32]
    e4d4:	b	e320 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x118>

000000000000e4d8 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>:
    e4d8:	stp	x29, x30, [sp, #-416]!
    e4dc:	mov	x29, sp
    e4e0:	stp	x27, x28, [sp, #80]
    e4e4:	mov	x28, x1
    e4e8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e4ec:	stp	x19, x20, [sp, #16]
    e4f0:	mov	x19, x2
    e4f4:	ldr	x1, [x1]
    e4f8:	stp	x21, x22, [sp, #32]
    e4fc:	mov	x22, x3
    e500:	add	x2, x1, #0x10
    e504:	mov	x3, #0x1                   	// #1
    e508:	stp	x25, x26, [sp, #64]
    e50c:	add	x25, sp, #0xa0
    e510:	add	x20, x25, #0x18
    e514:	mov	x21, x0
    e518:	mov	w1, #0x0                   	// #0
    e51c:	mov	x0, x20
    e520:	stp	x23, x24, [sp, #48]
    e524:	add	x24, sp, #0x110
    e528:	str	x21, [sp, #144]
    e52c:	stp	x2, x22, [sp, #160]
    e530:	strb	wzr, [sp, #176]
    e534:	stp	x3, xzr, [sp, #184]
    e538:	str	xzr, [sp, #200]
    e53c:	str	wzr, [sp, #208]
    e540:	ldr	x23, [x28, #32]
    e544:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e548:	mov	x0, x20
    e54c:	mov	x2, x24
    e550:	add	x1, sp, #0x90
    e554:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e558:	ldr	x0, [sp, #272]
    e55c:	cbz	x0, e858 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x380>
    e560:	ldr	w1, [sp, #200]
    e564:	ldr	x2, [x0]
    e568:	add	w1, w1, #0x1
    e56c:	str	w1, [sp, #200]
    e570:	cmn	x2, #0x8
    e574:	b.eq	e584 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0xac>  // b.none
    e578:	ldr	w1, [sp, #204]
    e57c:	sub	w1, w1, #0x1
    e580:	str	w1, [sp, #204]
    e584:	ldr	x1, [x19]
    e588:	ldr	x2, [sp, #144]
    e58c:	stp	x2, x23, [x0]
    e590:	ldr	x2, [x1, #96]
    e594:	strb	wzr, [x0, #16]
    e598:	mov	x1, x25
    e59c:	mov	x0, x19
    e5a0:	blr	x2
    e5a4:	mov	x20, x0
    e5a8:	ldr	w2, [sp, #208]
    e5ac:	mov	w1, #0x18                  	// #24
    e5b0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e5b4:	str	x20, [sp, #136]
    e5b8:	ldr	x0, [sp, #192]
    e5bc:	umull	x1, w2, w1
    e5c0:	ldr	x23, [x3]
    e5c4:	add	x23, x23, #0x10
    e5c8:	str	x23, [sp, #160]
    e5cc:	bl	0 <_ZdlPvm>
    e5d0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e5d4:	ldr	w4, [x28, #48]
    e5d8:	add	x2, x24, #0x10
    e5dc:	str	x2, [sp, #272]
    e5e0:	ldr	d0, [x0]
    e5e4:	ldr	x0, [x28, #32]
    e5e8:	str	d0, [sp, #280]
    e5ec:	cmp	x0, x20
    e5f0:	cset	w20, ne  // ne = any
    e5f4:	cbz	w4, e7d0 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x2f8>
    e5f8:	add	x0, sp, #0xd8
    e5fc:	stp	x23, x0, [sp, #112]
    e600:	add	x0, sp, #0xf0
    e604:	mov	w26, #0x0                   	// #0
    e608:	str	x0, [sp, #96]
    e60c:	add	x0, sp, #0x98
    e610:	str	x0, [sp, #128]
    e614:	add	x0, x28, w26, uxtw #3
    e618:	ldr	w1, [x28, #52]
    e61c:	cmp	w1, w26
    e620:	ldr	x27, [x0, #56]
    e624:	b.ls	e7f8 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x320>  // b.plast
    e628:	add	x4, x0, w4, uxtw #3
    e62c:	ldr	x23, [x4, #56]
    e630:	cbz	x27, e838 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x360>
    e634:	ldrb	w0, [x27, #8]
    e638:	cmp	w0, #0x5
    e63c:	b.eq	e788 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x2b0>  // b.none
    e640:	ldr	x0, [sp, #96]
    e644:	mov	x2, #0x1                   	// #1
    e648:	ldr	x3, [sp, #112]
    e64c:	mov	w1, #0x0                   	// #0
    e650:	str	x21, [sp, #152]
    e654:	stp	x3, x22, [sp, #216]
    e658:	strb	wzr, [sp, #232]
    e65c:	stp	x2, xzr, [sp, #240]
    e660:	str	xzr, [sp, #256]
    e664:	str	wzr, [sp, #264]
    e668:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e66c:	ldr	x0, [sp, #96]
    e670:	mov	x2, x25
    e674:	ldr	x1, [sp, #128]
    e678:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e67c:	ldr	x0, [sp, #160]
    e680:	cbz	x0, e858 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x380>
    e684:	ldr	w1, [sp, #256]
    e688:	ldr	x2, [x0]
    e68c:	add	w1, w1, #0x1
    e690:	str	w1, [sp, #256]
    e694:	cmn	x2, #0x8
    e698:	b.eq	e6a8 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1d0>  // b.none
    e69c:	ldr	w1, [sp, #260]
    e6a0:	sub	w1, w1, #0x1
    e6a4:	str	w1, [sp, #260]
    e6a8:	ldr	x1, [x19]
    e6ac:	ldr	x2, [sp, #152]
    e6b0:	stp	x2, x27, [x0]
    e6b4:	ldr	x2, [x1, #96]
    e6b8:	strb	wzr, [x0, #16]
    e6bc:	ldr	x1, [sp, #120]
    e6c0:	mov	x0, x19
    e6c4:	blr	x2
    e6c8:	mov	x8, x0
    e6cc:	ldr	w3, [sp, #264]
    e6d0:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e6d4:	mov	w1, #0x18                  	// #24
    e6d8:	str	x8, [sp, #104]
    e6dc:	ldr	x2, [x2]
    e6e0:	umull	x1, w3, w1
    e6e4:	ldr	x0, [sp, #248]
    e6e8:	add	x2, x2, #0x10
    e6ec:	str	x2, [sp, #216]
    e6f0:	bl	0 <_ZdlPvm>
    e6f4:	ldr	w3, [sp, #280]
    e6f8:	ldr	w0, [sp, #284]
    e6fc:	ldr	x8, [sp, #104]
    e700:	cmp	w3, w0
    e704:	b.cs	e7b0 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x2d8>  // b.hs, b.nlast
    e708:	ldr	x4, [sp, #272]
    e70c:	ubfiz	x1, x3, #4, #32
    e710:	mov	w2, w3
    e714:	add	x9, x4, x1
    e718:	add	x2, x2, #0x1
    e71c:	str	x8, [x4, x1]
    e720:	cmp	x2, w0, uxtw
    e724:	str	x23, [x9, #8]
    e728:	b.hi	e818 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x340>  // b.pmore
    e72c:	ldr	w4, [x28, #48]
    e730:	add	w3, w3, #0x1
    e734:	str	w3, [sp, #280]
    e738:	cmp	x8, x27
    e73c:	add	w26, w26, #0x1
    e740:	csinc	w20, w20, wzr, eq  // eq = none
    e744:	cmp	w26, w4
    e748:	b.cc	e614 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x13c>  // b.lo, b.ul, b.last
    e74c:	ldr	x2, [sp, #272]
    e750:	cbnz	w20, e7e0 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x308>
    e754:	add	x24, x24, #0x10
    e758:	cmp	x2, x24
    e75c:	b.eq	e768 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x290>  // b.none
    e760:	mov	x0, x2
    e764:	bl	0 <free>
    e768:	mov	x0, x28
    e76c:	ldp	x19, x20, [sp, #16]
    e770:	ldp	x21, x22, [sp, #32]
    e774:	ldp	x23, x24, [sp, #48]
    e778:	ldp	x25, x26, [sp, #64]
    e77c:	ldp	x27, x28, [sp, #80]
    e780:	ldp	x29, x30, [sp], #416
    e784:	ret
    e788:	mov	x3, x22
    e78c:	mov	x2, x19
    e790:	mov	x1, x27
    e794:	mov	x0, x21
    e798:	bl	e4d8 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>
    e79c:	mov	x8, x0
    e7a0:	ldr	w3, [sp, #280]
    e7a4:	ldr	w0, [sp, #284]
    e7a8:	cmp	w3, w0
    e7ac:	b.cc	e708 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x230>  // b.lo, b.ul, b.last
    e7b0:	mov	x0, x24
    e7b4:	mov	x1, #0x0                   	// #0
    e7b8:	str	x8, [sp, #104]
    e7bc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e7c0:	ldr	w3, [sp, #280]
    e7c4:	ldr	w0, [sp, #284]
    e7c8:	ldr	x8, [sp, #104]
    e7cc:	b	e708 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x230>
    e7d0:	ldr	x1, [sp, #136]
    e7d4:	cmp	x0, x1
    e7d8:	b.eq	e768 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x290>  // b.none
    e7dc:	mov	x3, #0x0                   	// #0
    e7e0:	ldr	x0, [sp, #136]
    e7e4:	mov	x1, #0x0                   	// #0
    e7e8:	bl	62a8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    e7ec:	mov	x28, x0
    e7f0:	ldr	x2, [sp, #272]
    e7f4:	b	e754 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x27c>
    e7f8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e7fc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e800:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e804:	add	x3, x3, #0x0
    e808:	add	x1, x1, #0x0
    e80c:	add	x0, x0, #0x0
    e810:	mov	w2, #0x545                 	// #1349
    e814:	bl	0 <__assert_fail>
    e818:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e81c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e820:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e824:	add	x3, x3, #0x0
    e828:	add	x1, x1, #0x0
    e82c:	add	x0, x0, #0x0
    e830:	mov	w2, #0x43                  	// #67
    e834:	bl	0 <__assert_fail>
    e838:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e83c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e840:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e844:	add	x3, x3, #0x0
    e848:	add	x1, x1, #0x0
    e84c:	add	x0, x0, #0x0
    e850:	mov	w2, #0x69                  	// #105
    e854:	bl	0 <__assert_fail>
    e858:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e85c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e860:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e864:	add	x3, x3, #0x0
    e868:	add	x1, x1, #0x0
    e86c:	add	x0, x0, #0x0
    e870:	mov	w2, #0x22f                 	// #559
    e874:	bl	0 <__assert_fail>

000000000000e878 <_ZN4llvm10VarDefInit11instantiateEv>:
    e878:	stp	x29, x30, [sp, #-272]!
    e87c:	mov	x29, sp
    e880:	stp	x27, x28, [sp, #80]
    e884:	mov	x28, x0
    e888:	ldr	x0, [x0, #40]
    e88c:	cbz	x0, e89c <_ZN4llvm10VarDefInit11instantiateEv+0x24>
    e890:	ldp	x27, x28, [sp, #80]
    e894:	ldp	x29, x30, [sp], #272
    e898:	ret
    e89c:	ldr	x0, [x28, #32]
    e8a0:	stp	x21, x22, [sp, #32]
    e8a4:	stp	x19, x20, [sp, #16]
    e8a8:	ldr	x22, [x0, #104]
    e8ac:	stp	x23, x24, [sp, #48]
    e8b0:	mov	x0, x22
    e8b4:	stp	x25, x26, [sp, #64]
    e8b8:	bl	be58 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    e8bc:	ldr	x1, [x28, #32]
    e8c0:	mov	x21, x0
    e8c4:	mov	x0, #0x80                  	// #128
    e8c8:	ldr	w19, [x1, #16]
    e8cc:	ldr	x23, [x1, #8]
    e8d0:	bl	0 <_Znwm>
    e8d4:	mov	x27, x0
    e8d8:	str	x21, [x0], #24
    e8dc:	mov	x1, #0x400000000           	// #17179869184
    e8e0:	mov	w20, w19
    e8e4:	ubfiz	x19, x19, #3, #32
    e8e8:	stp	x0, x1, [x27, #8]
    e8ec:	cmp	x19, #0x20
    e8f0:	b.hi	eed0 <_ZN4llvm10VarDefInit11instantiateEv+0x658>  // b.pmore
    e8f4:	cbnz	x19, eef0 <_ZN4llvm10VarDefInit11instantiateEv+0x678>
    e8f8:	ldr	w0, [x27, #20]
    e8fc:	add	x1, x20, x19
    e900:	cmp	x1, x0
    e904:	b.hi	f3fc <_ZN4llvm10VarDefInit11instantiateEv+0xb84>  // b.pmore
    e908:	adrp	x2, 3c0 <_ZNK4llvm10CondOpInit10isCompleteEv+0x20>
    e90c:	str	w1, [x27, #16]
    e910:	add	x5, x27, #0x68
    e914:	mov	w3, #0x1                   	// #1
    e918:	ldr	x2, [x2]
    e91c:	mov	x0, x27
    e920:	add	x19, x27, #0x48
    e924:	add	x20, x27, #0x58
    e928:	stp	x19, xzr, [x27, #56]
    e92c:	mov	w23, #0x18                  	// #24
    e930:	ldr	w1, [x2]
    e934:	stp	x20, xzr, [x27, #72]
    e938:	add	w4, w1, #0x1
    e93c:	str	w4, [x2]
    e940:	stp	x5, xzr, [x27, #88]
    e944:	stp	x22, xzr, [x27, #104]
    e948:	str	x5, [sp, #104]
    e94c:	str	w1, [x27, #120]
    e950:	strh	w3, [x27, #124]
    e954:	bl	40b0 <_ZN4llvm6Record9checkNameEv>
    e958:	ldr	x0, [x28, #32]
    e95c:	ldr	w25, [x0, #80]
    e960:	ldr	x21, [x0, #72]
    e964:	umaddl	x25, w25, w23, x21
    e968:	cmp	x21, x25
    e96c:	b.eq	ea10 <_ZN4llvm10VarDefInit11instantiateEv+0x198>  // b.none
    e970:	ldr	w4, [x27, #80]
    e974:	nop
    e978:	ldr	x2, [x27, #72]
    e97c:	ldr	x1, [x21]
    e980:	umaddl	x3, w4, w23, x2
    e984:	cmp	x2, x3
    e988:	b.ne	e99c <_ZN4llvm10VarDefInit11instantiateEv+0x124>  // b.any
    e98c:	b	e9c8 <_ZN4llvm10VarDefInit11instantiateEv+0x150>
    e990:	add	x2, x2, #0x18
    e994:	cmp	x3, x2
    e998:	b.eq	e9c8 <_ZN4llvm10VarDefInit11instantiateEv+0x150>  // b.none
    e99c:	ldr	x0, [x2]
    e9a0:	cmp	x1, x0
    e9a4:	b.ne	e990 <_ZN4llvm10VarDefInit11instantiateEv+0x118>  // b.any
    e9a8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e9ac:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e9b0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    e9b4:	add	x3, x3, #0x0
    e9b8:	add	x1, x1, #0x0
    e9bc:	add	x0, x0, #0x0
    e9c0:	mov	w2, #0x60a                 	// #1546
    e9c4:	bl	0 <__assert_fail>
    e9c8:	ldr	w0, [x27, #84]
    e9cc:	cmp	w0, w4
    e9d0:	b.ls	edd4 <_ZN4llvm10VarDefInit11instantiateEv+0x55c>  // b.plast
    e9d4:	ldp	x0, x1, [x21]
    e9d8:	stp	x0, x1, [x3]
    e9dc:	ldr	x0, [x21, #16]
    e9e0:	str	x0, [x3, #16]
    e9e4:	ldp	w4, w1, [x27, #80]
    e9e8:	mov	w0, w4
    e9ec:	add	x0, x0, #0x1
    e9f0:	cmp	x0, x1
    e9f4:	b.hi	f3fc <_ZN4llvm10VarDefInit11instantiateEv+0xb84>  // b.pmore
    e9f8:	add	w4, w4, #0x1
    e9fc:	str	w4, [x27, #80]
    ea00:	add	x21, x21, #0x18
    ea04:	cmp	x25, x21
    ea08:	b.ne	e978 <_ZN4llvm10VarDefInit11instantiateEv+0x100>  // b.any
    ea0c:	ldr	x0, [x28, #32]
    ea10:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ea14:	ldr	w19, [x0, #64]
    ea18:	ldr	x1, [x1]
    ea1c:	strb	wzr, [sp, #232]
    ea20:	stp	xzr, xzr, [sp, #240]
    ea24:	mov	w20, w19
    ea28:	add	x1, x1, #0x10
    ea2c:	stp	x1, x27, [sp, #216]
    ea30:	str	xzr, [sp, #256]
    ea34:	str	wzr, [sp, #264]
    ea38:	ldr	x8, [x0, #56]
    ea3c:	cbz	w19, eb74 <_ZN4llvm10VarDefInit11instantiateEv+0x2fc>
    ea40:	add	x0, sp, #0xc0
    ea44:	mov	x24, x8
    ea48:	add	x23, sp, #0xf0
    ea4c:	mov	x26, #0x0                   	// #0
    ea50:	mov	w25, #0x18                  	// #24
    ea54:	str	x0, [sp, #112]
    ea58:	add	x0, sp, #0xb8
    ea5c:	str	x0, [sp, #120]
    ea60:	ldr	w0, [x28, #48]
    ea64:	cmp	w0, w26
    ea68:	b.ls	ec2c <_ZN4llvm10VarDefInit11instantiateEv+0x3b4>  // b.plast
    ea6c:	cmp	x20, x26
    ea70:	b.ls	f43c <_ZN4llvm10VarDefInit11instantiateEv+0xbc4>  // b.plast
    ea74:	ldr	w1, [sp, #264]
    ea78:	add	x0, x28, #0x38
    ea7c:	ldr	x21, [x24]
    ea80:	ldr	x5, [x0, x26, lsl #3]
    ea84:	cbz	w1, edf8 <_ZN4llvm10VarDefInit11instantiateEv+0x580>
    ea88:	cmn	x21, #0x8
    ea8c:	ccmn	x21, #0x10, #0x4, ne  // ne = any
    ea90:	b.eq	f41c <_ZN4llvm10VarDefInit11instantiateEv+0xba4>  // b.none
    ea94:	lsr	w6, w21, #4
    ea98:	lsr	w11, w21, #9
    ea9c:	eor	w10, w6, w11
    eaa0:	sub	w13, w1, #0x1
    eaa4:	and	w12, w10, w13
    eaa8:	ldr	x3, [sp, #248]
    eaac:	umull	x4, w12, w25
    eab0:	add	x0, x3, x4
    eab4:	ldr	x4, [x3, x4]
    eab8:	cmp	x21, x4
    eabc:	b.ne	ed5c <_ZN4llvm10VarDefInit11instantiateEv+0x4e4>  // b.any
    eac0:	ldr	w4, [x27, #80]
    eac4:	str	x5, [x0, #8]
    eac8:	mov	w6, w4
    eacc:	strb	wzr, [x0, #16]
    ead0:	ldr	x10, [x24]
    ead4:	cbz	w4, f28c <_ZN4llvm10VarDefInit11instantiateEv+0xa14>
    ead8:	sub	w1, w4, #0x1
    eadc:	ldr	x2, [x27, #72]
    eae0:	umull	x1, w1, w25
    eae4:	add	x5, x2, #0x18
    eae8:	mov	x0, x2
    eaec:	add	x5, x5, x1
    eaf0:	add	x1, x1, x2
    eaf4:	b	eb0c <_ZN4llvm10VarDefInit11instantiateEv+0x294>
    eaf8:	cmp	x1, x0
    eafc:	b.eq	f28c <_ZN4llvm10VarDefInit11instantiateEv+0xa14>  // b.none
    eb00:	add	x0, x0, #0x18
    eb04:	cmp	x5, x0
    eb08:	b.eq	f26c <_ZN4llvm10VarDefInit11instantiateEv+0x9f4>  // b.none
    eb0c:	ldr	x3, [x0]
    eb10:	cmp	x10, x3
    eb14:	b.ne	eaf8 <_ZN4llvm10VarDefInit11instantiateEv+0x280>  // b.any
    eb18:	cmp	x2, x0
    eb1c:	b.hi	f47c <_ZN4llvm10VarDefInit11instantiateEv+0xc04>  // b.pmore
    eb20:	add	x1, x6, x6, lsl #1
    eb24:	add	x2, x2, x1, lsl #3
    eb28:	cmp	x0, x2
    eb2c:	b.cs	f45c <_ZN4llvm10VarDefInit11instantiateEv+0xbe4>  // b.hs, b.nlast
    eb30:	add	x1, x0, #0x18
    eb34:	cmp	x2, x1
    eb38:	b.eq	eb4c <_ZN4llvm10VarDefInit11instantiateEv+0x2d4>  // b.none
    eb3c:	sub	x2, x2, x1
    eb40:	bl	0 <memmove>
    eb44:	ldr	w4, [x27, #80]
    eb48:	mov	w6, w4
    eb4c:	ldr	w0, [x27, #84]
    eb50:	sub	x6, x6, #0x1
    eb54:	cmp	x6, x0
    eb58:	b.hi	f3fc <_ZN4llvm10VarDefInit11instantiateEv+0xb84>  // b.pmore
    eb5c:	sub	w4, w4, #0x1
    eb60:	str	w4, [x27, #80]
    eb64:	add	x26, x26, #0x1
    eb68:	add	x24, x24, #0x8
    eb6c:	cmp	w19, w26
    eb70:	b.ne	ea60 <_ZN4llvm10VarDefInit11instantiateEv+0x1e8>  // b.any
    eb74:	add	x1, sp, #0xd8
    eb78:	mov	x0, x27
    eb7c:	mov	x2, #0x0                   	// #0
    eb80:	bl	80d8 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    eb84:	ldr	x19, [x28, #32]
    eb88:	mov	w11, #0x18                  	// #24
    eb8c:	ldr	w12, [x19, #96]
    eb90:	ldr	x4, [x19, #88]
    eb94:	umaddl	x26, w12, w11, x4
    eb98:	cmp	x26, x4
    eb9c:	b.eq	ecfc <_ZN4llvm10VarDefInit11instantiateEv+0x484>  // b.none
    eba0:	mov	w21, #0xffffffe8            	// #-24
    eba4:	mov	x20, x4
    eba8:	mov	w23, w11
    ebac:	adrp	x19, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ebb0:	movk	x21, #0x17, lsl #32
    ebb4:	add	x0, x19, #0x0
    ebb8:	str	x0, [sp, #120]
    ebbc:	nop
    ebc0:	ldr	x0, [x27, #112]
    ebc4:	ldp	x24, x10, [x20]
    ebc8:	ldr	x9, [x20, #16]
    ebcc:	cbnz	x0, f4e8 <_ZN4llvm10VarDefInit11instantiateEv+0xc70>
    ebd0:	ldr	w3, [x27, #96]
    ebd4:	ldr	x5, [x27, #88]
    ebd8:	mov	w6, w3
    ebdc:	umull	x13, w3, w23
    ebe0:	add	x25, x5, x13
    ebe4:	cmp	x5, x25
    ebe8:	b.eq	ecc0 <_ZN4llvm10VarDefInit11instantiateEv+0x448>  // b.none
    ebec:	mov	x1, x5
    ebf0:	b	ec00 <_ZN4llvm10VarDefInit11instantiateEv+0x388>
    ebf4:	add	x1, x1, #0x18
    ebf8:	cmp	x25, x1
    ebfc:	b.eq	ecc0 <_ZN4llvm10VarDefInit11instantiateEv+0x448>  // b.none
    ec00:	ldr	x0, [x1]
    ec04:	cmp	x24, x0
    ec08:	b.ne	ebf4 <_ZN4llvm10VarDefInit11instantiateEv+0x37c>  // b.any
    ec0c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec10:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec14:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ec18:	add	x3, x3, #0x0
    ec1c:	add	x1, x1, #0x0
    ec20:	add	x0, x0, #0x0
    ec24:	mov	w2, #0x630                 	// #1584
    ec28:	bl	0 <__assert_fail>
    ec2c:	cmp	x20, x26
    ec30:	b.ls	f43c <_ZN4llvm10VarDefInit11instantiateEv+0xbc4>  // b.plast
    ec34:	ldr	w5, [x27, #80]
    ec38:	ldr	x2, [x27, #72]
    ec3c:	mov	w4, w5
    ec40:	mov	w6, w5
    ec44:	ldr	x3, [x24]
    ec48:	umaddl	x1, w5, w25, x2
    ec4c:	cmp	x2, x1
    ec50:	b.ne	ec64 <_ZN4llvm10VarDefInit11instantiateEv+0x3ec>  // b.any
    ec54:	b	f5b0 <_ZN4llvm10VarDefInit11instantiateEv+0xd38>
    ec58:	add	x2, x2, #0x18
    ec5c:	cmp	x1, x2
    ec60:	b.eq	f5b0 <_ZN4llvm10VarDefInit11instantiateEv+0xd38>  // b.none
    ec64:	ldr	x0, [x2]
    ec68:	cmp	x3, x0
    ec6c:	b.ne	ec58 <_ZN4llvm10VarDefInit11instantiateEv+0x3e0>  // b.any
    ec70:	ldr	w1, [sp, #264]
    ec74:	str	x3, [sp, #184]
    ec78:	ldr	x21, [x2, #16]
    ec7c:	ldr	x12, [sp, #248]
    ec80:	cbz	w1, f174 <_ZN4llvm10VarDefInit11instantiateEv+0x8fc>
    ec84:	cmn	x3, #0x10
    ec88:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    ec8c:	b.eq	f41c <_ZN4llvm10VarDefInit11instantiateEv+0xba4>  // b.none
    ec90:	lsr	w0, w3, #9
    ec94:	sub	w13, w1, #0x1
    ec98:	eor	w0, w0, w3, lsr #4
    ec9c:	and	w0, w0, w13
    eca0:	umull	x11, w0, w25
    eca4:	add	x2, x12, x11
    eca8:	ldr	x11, [x12, x11]
    ecac:	cmp	x3, x11
    ecb0:	b.ne	f0ec <_ZN4llvm10VarDefInit11instantiateEv+0x874>  // b.any
    ecb4:	str	x21, [x2, #8]
    ecb8:	strb	wzr, [x2, #16]
    ecbc:	b	ead0 <_ZN4llvm10VarDefInit11instantiateEv+0x258>
    ecc0:	ldr	w0, [x27, #100]
    ecc4:	cmp	w3, w0
    ecc8:	mov	w19, w0
    eccc:	b.cs	f010 <_ZN4llvm10VarDefInit11instantiateEv+0x798>  // b.hs, b.nlast
    ecd0:	stp	x24, x10, [x25]
    ecd4:	add	x6, x6, #0x1
    ecd8:	cmp	x6, x19
    ecdc:	str	x9, [x25, #16]
    ece0:	b.hi	f3fc <_ZN4llvm10VarDefInit11instantiateEv+0xb84>  // b.pmore
    ece4:	add	w3, w3, #0x1
    ece8:	str	w3, [x27, #96]
    ecec:	add	x20, x20, #0x18
    ecf0:	cmp	x26, x20
    ecf4:	b.ne	ebc0 <_ZN4llvm10VarDefInit11instantiateEv+0x348>  // b.any
    ecf8:	ldr	x19, [x28, #32]
    ecfc:	ldr	w0, [x19, #16]
    ed00:	ldr	x2, [x19, #8]
    ed04:	cbz	w0, f590 <_ZN4llvm10VarDefInit11instantiateEv+0xd18>
    ed08:	ldr	x1, [x27, #112]
    ed0c:	add	x0, x2, w0, uxtw #3
    ed10:	ldur	x5, [x0, #-8]
    ed14:	cbnz	x1, f4e8 <_ZN4llvm10VarDefInit11instantiateEv+0xc70>
    ed18:	ldr	w26, [x27, #96]
    ed1c:	mov	w3, #0x18                  	// #24
    ed20:	ldr	x4, [x27, #88]
    ed24:	mov	w6, w26
    ed28:	umull	x3, w26, w3
    ed2c:	add	x20, x4, x3
    ed30:	cmp	x4, x20
    ed34:	b.eq	ef04 <_ZN4llvm10VarDefInit11instantiateEv+0x68c>  // b.none
    ed38:	mov	x0, x4
    ed3c:	b	ed4c <_ZN4llvm10VarDefInit11instantiateEv+0x4d4>
    ed40:	add	x0, x0, #0x18
    ed44:	cmp	x20, x0
    ed48:	b.eq	ef04 <_ZN4llvm10VarDefInit11instantiateEv+0x68c>  // b.none
    ed4c:	ldr	x1, [x0]
    ed50:	cmp	x1, x19
    ed54:	b.ne	ed40 <_ZN4llvm10VarDefInit11instantiateEv+0x4c8>  // b.any
    ed58:	b	ec0c <_ZN4llvm10VarDefInit11instantiateEv+0x394>
    ed5c:	mov	x14, #0x0                   	// #0
    ed60:	mov	w15, #0x1                   	// #1
    ed64:	cmn	x4, #0x8
    ed68:	b.ne	f2a4 <_ZN4llvm10VarDefInit11instantiateEv+0xa2c>  // b.any
    ed6c:	ldr	x3, [sp, #240]
    ed70:	lsl	w12, w1, #1
    ed74:	ldr	w4, [sp, #256]
    ed78:	cmp	x14, #0x0
    ed7c:	add	x3, x3, #0x1
    ed80:	str	x3, [sp, #240]
    ed84:	add	w4, w4, #0x1
    ed88:	add	w3, w12, w1
    ed8c:	csel	x0, x0, x14, eq  // eq = none
    ed90:	cmp	w3, w4, lsl #2
    ed94:	b.ls	f49c <_ZN4llvm10VarDefInit11instantiateEv+0xc24>  // b.plast
    ed98:	ldr	w3, [sp, #260]
    ed9c:	sub	w3, w1, w3
    eda0:	sub	w3, w3, w4
    eda4:	cmp	w3, w1, lsr #3
    eda8:	b.ls	ee80 <_ZN4llvm10VarDefInit11instantiateEv+0x608>  // b.plast
    edac:	ldr	x1, [x0]
    edb0:	str	w4, [sp, #256]
    edb4:	cmn	x1, #0x8
    edb8:	b.eq	edc8 <_ZN4llvm10VarDefInit11instantiateEv+0x550>  // b.none
    edbc:	ldr	w1, [sp, #260]
    edc0:	sub	w1, w1, #0x1
    edc4:	str	w1, [sp, #260]
    edc8:	stp	x21, xzr, [x0]
    edcc:	strb	wzr, [x0, #16]
    edd0:	b	eac0 <_ZN4llvm10VarDefInit11instantiateEv+0x248>
    edd4:	mov	x0, x19
    edd8:	mov	x3, #0x18                  	// #24
    eddc:	mov	x1, x20
    ede0:	mov	x2, #0x0                   	// #0
    ede4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ede8:	ldr	w3, [x27, #80]
    edec:	ldr	x0, [x27, #72]
    edf0:	umaddl	x3, w3, w23, x0
    edf4:	b	e9d4 <_ZN4llvm10VarDefInit11instantiateEv+0x15c>
    edf8:	ldr	x3, [sp, #240]
    edfc:	mov	x0, x23
    ee00:	mov	w1, #0x0                   	// #0
    ee04:	str	x5, [sp, #128]
    ee08:	add	x3, x3, #0x1
    ee0c:	str	x3, [sp, #240]
    ee10:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ee14:	ldr	w0, [sp, #264]
    ee18:	ldr	x5, [sp, #128]
    ee1c:	cbz	w0, f4c8 <_ZN4llvm10VarDefInit11instantiateEv+0xc50>
    ee20:	cmn	x21, #0x10
    ee24:	ccmn	x21, #0x8, #0x4, ne  // ne = any
    ee28:	b.eq	f41c <_ZN4llvm10VarDefInit11instantiateEv+0xba4>  // b.none
    ee2c:	lsr	w6, w21, #4
    ee30:	lsr	w11, w21, #9
    ee34:	sub	w10, w0, #0x1
    ee38:	eor	w3, w6, w11
    ee3c:	and	w3, w3, w10
    ee40:	ldr	w4, [sp, #256]
    ee44:	ldr	x6, [sp, #248]
    ee48:	add	w4, w4, #0x1
    ee4c:	umull	x1, w3, w25
    ee50:	add	x0, x6, x1
    ee54:	ldr	x1, [x6, x1]
    ee58:	cmp	x21, x1
    ee5c:	b.eq	edb0 <_ZN4llvm10VarDefInit11instantiateEv+0x538>  // b.none
    ee60:	mov	x11, #0x0                   	// #0
    ee64:	mov	w12, #0x1                   	// #1
    ee68:	cmn	x1, #0x8
    ee6c:	b.ne	f23c <_ZN4llvm10VarDefInit11instantiateEv+0x9c4>  // b.any
    ee70:	cbz	x11, f3c8 <_ZN4llvm10VarDefInit11instantiateEv+0xb50>
    ee74:	mov	x0, x11
    ee78:	ldr	x1, [x11]
    ee7c:	b	edb0 <_ZN4llvm10VarDefInit11instantiateEv+0x538>
    ee80:	mov	x0, x23
    ee84:	str	x5, [sp, #128]
    ee88:	str	w10, [sp, #136]
    ee8c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ee90:	ldr	w0, [sp, #264]
    ee94:	cbz	w0, f4c8 <_ZN4llvm10VarDefInit11instantiateEv+0xc50>
    ee98:	ldr	w10, [sp, #136]
    ee9c:	sub	w1, w0, #0x1
    eea0:	ldr	x3, [sp, #248]
    eea4:	and	w10, w10, w1
    eea8:	ldr	w4, [sp, #256]
    eeac:	ldr	x5, [sp, #128]
    eeb0:	umull	x6, w10, w25
    eeb4:	add	w4, w4, #0x1
    eeb8:	add	x0, x3, x6
    eebc:	ldr	x6, [x3, x6]
    eec0:	cmp	x21, x6
    eec4:	b.ne	f1f8 <_ZN4llvm10VarDefInit11instantiateEv+0x980>  // b.any
    eec8:	str	w4, [sp, #256]
    eecc:	b	edbc <_ZN4llvm10VarDefInit11instantiateEv+0x544>
    eed0:	mov	x1, x0
    eed4:	mov	x3, #0x8                   	// #8
    eed8:	mov	x2, x20
    eedc:	add	x0, x27, x3
    eee0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    eee4:	ldr	x1, [x27, #8]
    eee8:	ldr	w0, [x27, #16]
    eeec:	add	x0, x1, x0, lsl #3
    eef0:	mov	x2, x19
    eef4:	mov	x1, x23
    eef8:	bl	0 <memcpy>
    eefc:	ldr	w19, [x27, #16]
    ef00:	b	e8f8 <_ZN4llvm10VarDefInit11instantiateEv+0x80>
    ef04:	ldr	w25, [x27, #100]
    ef08:	cmp	w26, w25
    ef0c:	mov	w25, w25
    ef10:	b.cs	f2d4 <_ZN4llvm10VarDefInit11instantiateEv+0xa5c>  // b.hs, b.nlast
    ef14:	stp	x19, x5, [x20]
    ef18:	add	x6, x6, #0x1
    ef1c:	cmp	x6, x25
    ef20:	str	x5, [x20, #16]
    ef24:	b.hi	f3fc <_ZN4llvm10VarDefInit11instantiateEv+0xb84>  // b.pmore
    ef28:	mov	x0, x27
    ef2c:	add	w26, w26, #0x1
    ef30:	str	w26, [x27, #96]
    ef34:	bl	84d0 <_ZN4llvm6Record17resolveReferencesEv>
    ef38:	ldr	x0, [x27]
    ef3c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ef40:	mov	x2, x0
    ef44:	add	x1, sp, #0xc0
    ef48:	add	x0, x22, #0x30
    ef4c:	ldp	x3, x2, [x2, #24]
    ef50:	stp	x3, x2, [sp, #192]
    ef54:	str	x27, [sp, #208]
    ef58:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ef5c:	and	w20, w1, #0xff
    ef60:	ldr	x19, [sp, #208]
    ef64:	cbz	x19, efc4 <_ZN4llvm10VarDefInit11instantiateEv+0x74c>
    ef68:	ldr	x0, [x19, #88]
    ef6c:	add	x1, x19, #0x68
    ef70:	add	x23, x19, #0x58
    ef74:	cmp	x0, x1
    ef78:	b.eq	ef80 <_ZN4llvm10VarDefInit11instantiateEv+0x708>  // b.none
    ef7c:	bl	0 <free>
    ef80:	ldr	x0, [x19, #72]
    ef84:	add	x22, x19, #0x48
    ef88:	cmp	x23, x0
    ef8c:	b.eq	ef94 <_ZN4llvm10VarDefInit11instantiateEv+0x71c>  // b.none
    ef90:	bl	0 <free>
    ef94:	ldr	x0, [x19, #56]
    ef98:	cmp	x22, x0
    ef9c:	b.eq	efa4 <_ZN4llvm10VarDefInit11instantiateEv+0x72c>  // b.none
    efa0:	bl	0 <free>
    efa4:	ldr	x0, [x19, #8]
    efa8:	add	x1, x19, #0x18
    efac:	cmp	x0, x1
    efb0:	b.eq	efb8 <_ZN4llvm10VarDefInit11instantiateEv+0x740>  // b.none
    efb4:	bl	0 <free>
    efb8:	mov	x0, x19
    efbc:	mov	x1, #0x80                  	// #128
    efc0:	bl	0 <_ZdlPvm>
    efc4:	cbz	w20, f538 <_ZN4llvm10VarDefInit11instantiateEv+0xcc0>
    efc8:	mov	x0, x27
    efcc:	bl	6810 <_ZN4llvm7DefInit3getEPNS_6RecordE>
    efd0:	ldr	w2, [sp, #264]
    efd4:	mov	w1, #0x18                  	// #24
    efd8:	str	x0, [x28, #40]
    efdc:	ldr	x0, [sp, #248]
    efe0:	umull	x1, w2, w1
    efe4:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    efe8:	ldr	x2, [x2]
    efec:	add	x2, x2, #0x10
    eff0:	str	x2, [sp, #216]
    eff4:	bl	0 <_ZdlPvm>
    eff8:	ldp	x19, x20, [sp, #16]
    effc:	ldp	x21, x22, [sp, #32]
    f000:	ldr	x0, [x28, #40]
    f004:	ldp	x23, x24, [sp, #48]
    f008:	ldp	x25, x26, [sp, #64]
    f00c:	b	e890 <_ZN4llvm10VarDefInit11instantiateEv+0x18>
    f010:	add	x0, x19, #0x2
    f014:	orr	x0, x0, x0, lsr #1
    f018:	orr	x0, x0, x0, lsr #2
    f01c:	orr	x0, x0, x0, lsr #4
    f020:	orr	x0, x0, x0, lsr #8
    f024:	orr	x0, x0, x0, lsr #16
    f028:	orr	x0, x0, x0, lsr #32
    f02c:	add	x19, x0, #0x1
    f030:	str	x19, [sp, #192]
    f034:	mov	x0, #0xffffffff            	// #4294967295
    f038:	cmp	x19, x0
    f03c:	b.hi	f1b0 <_ZN4llvm10VarDefInit11instantiateEv+0x938>  // b.pmore
    f040:	add	x0, x19, x19, lsl #1
    f044:	str	w19, [sp, #112]
    f048:	str	x5, [sp, #128]
    f04c:	lsl	x0, x0, #3
    f050:	str	w3, [sp, #136]
    f054:	stp	x6, x13, [sp, #144]
    f058:	stp	x9, x10, [sp, #160]
    f05c:	bl	0 <malloc>
    f060:	ldr	w3, [sp, #136]
    f064:	mov	x15, x0
    f068:	ldr	x5, [sp, #128]
    f06c:	ldp	x6, x13, [sp, #144]
    f070:	ldp	x9, x10, [sp, #160]
    f074:	cbz	x0, f508 <_ZN4llvm10VarDefInit11instantiateEv+0xc90>
    f078:	cmp	x5, x25
    f07c:	mov	x7, x5
    f080:	mov	x8, x15
    f084:	b.eq	f0a8 <_ZN4llvm10VarDefInit11instantiateEv+0x830>  // b.none
    f088:	ldp	x0, x1, [x7]
    f08c:	stp	x0, x1, [x8]
    f090:	add	x7, x7, #0x18
    f094:	ldur	x0, [x7, #-8]
    f098:	str	x0, [x8, #16]
    f09c:	cmp	x25, x7
    f0a0:	add	x8, x8, #0x18
    f0a4:	b.ne	f088 <_ZN4llvm10VarDefInit11instantiateEv+0x810>  // b.any
    f0a8:	ldr	x0, [sp, #104]
    f0ac:	cmp	x0, x5
    f0b0:	b.eq	f0d8 <_ZN4llvm10VarDefInit11instantiateEv+0x860>  // b.none
    f0b4:	mov	x0, x5
    f0b8:	stp	x15, x9, [sp, #128]
    f0bc:	str	x10, [sp, #144]
    f0c0:	bl	0 <free>
    f0c4:	ldr	w3, [x27, #96]
    f0c8:	ldp	x15, x9, [sp, #128]
    f0cc:	mov	w6, w3
    f0d0:	ldr	x10, [sp, #144]
    f0d4:	umull	x13, w3, w23
    f0d8:	ldr	w0, [sp, #112]
    f0dc:	add	x25, x15, x13
    f0e0:	str	x15, [x27, #88]
    f0e4:	str	w0, [x27, #100]
    f0e8:	b	ecd0 <_ZN4llvm10VarDefInit11instantiateEv+0x458>
    f0ec:	mov	x14, #0x0                   	// #0
    f0f0:	mov	w15, #0x1                   	// #1
    f0f4:	cmn	x11, #0x8
    f0f8:	b.ne	f398 <_ZN4llvm10VarDefInit11instantiateEv+0xb20>  // b.any
    f0fc:	ldr	x0, [sp, #240]
    f100:	lsl	w6, w1, #1
    f104:	ldr	w3, [sp, #256]
    f108:	cmp	x14, #0x0
    f10c:	add	x0, x0, #0x1
    f110:	str	x0, [sp, #240]
    f114:	add	w4, w3, #0x1
    f118:	add	w0, w6, w1
    f11c:	csel	x2, x2, x14, eq  // eq = none
    f120:	cmp	w0, w4, lsl #2
    f124:	b.ls	f184 <_ZN4llvm10VarDefInit11instantiateEv+0x90c>  // b.plast
    f128:	ldr	w0, [sp, #260]
    f12c:	sub	w0, w1, w0
    f130:	sub	w0, w0, w4
    f134:	cmp	w0, w1, lsr #3
    f138:	b.ls	f188 <_ZN4llvm10VarDefInit11instantiateEv+0x910>  // b.plast
    f13c:	ldr	x1, [x2]
    f140:	add	w0, w3, #0x1
    f144:	str	w0, [sp, #256]
    f148:	cmn	x1, #0x8
    f14c:	b.eq	f15c <_ZN4llvm10VarDefInit11instantiateEv+0x8e4>  // b.none
    f150:	ldr	w0, [sp, #260]
    f154:	sub	w0, w0, #0x1
    f158:	str	w0, [sp, #260]
    f15c:	mov	w6, w5
    f160:	strb	wzr, [x2, #16]
    f164:	ldr	x0, [sp, #184]
    f168:	mov	x4, x6
    f16c:	stp	x0, xzr, [x2]
    f170:	b	ecb4 <_ZN4llvm10VarDefInit11instantiateEv+0x43c>
    f174:	ldr	x0, [sp, #240]
    f178:	mov	w6, #0x0                   	// #0
    f17c:	add	x0, x0, #0x1
    f180:	str	x0, [sp, #240]
    f184:	mov	w1, w6
    f188:	mov	x0, x23
    f18c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f190:	ldp	x2, x1, [sp, #112]
    f194:	mov	x0, x23
    f198:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f19c:	ldr	x2, [sp, #192]
    f1a0:	cbz	x2, f4c8 <_ZN4llvm10VarDefInit11instantiateEv+0xc50>
    f1a4:	ldr	w5, [x27, #80]
    f1a8:	ldr	w3, [sp, #256]
    f1ac:	b	f13c <_ZN4llvm10VarDefInit11instantiateEv+0x8c4>
    f1b0:	mov	x0, x21
    f1b4:	str	x9, [sp, #112]
    f1b8:	str	x5, [sp, #128]
    f1bc:	mov	x19, #0xffffffff            	// #4294967295
    f1c0:	str	w3, [sp, #136]
    f1c4:	stp	x6, x13, [sp, #144]
    f1c8:	str	x10, [sp, #160]
    f1cc:	bl	0 <malloc>
    f1d0:	mov	x15, x0
    f1d4:	mov	w0, #0xffffffff            	// #-1
    f1d8:	ldr	x9, [sp, #112]
    f1dc:	str	w0, [sp, #112]
    f1e0:	ldr	x10, [sp, #160]
    f1e4:	cbz	x15, f508 <_ZN4llvm10VarDefInit11instantiateEv+0xc90>
    f1e8:	ldr	w3, [sp, #136]
    f1ec:	ldr	x5, [sp, #128]
    f1f0:	ldp	x6, x13, [sp, #144]
    f1f4:	b	f078 <_ZN4llvm10VarDefInit11instantiateEv+0x800>
    f1f8:	mov	x11, #0x0                   	// #0
    f1fc:	mov	w12, #0x1                   	// #1
    f200:	cmn	x6, #0x8
    f204:	b.eq	ee70 <_ZN4llvm10VarDefInit11instantiateEv+0x5f8>  // b.none
    f208:	add	w10, w12, w10
    f20c:	cmp	x11, #0x0
    f210:	and	w10, w1, w10
    f214:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    f218:	csel	x11, x11, x0, ne  // ne = any
    f21c:	add	w12, w12, #0x1
    f220:	umull	x6, w10, w25
    f224:	add	x0, x3, x6
    f228:	ldr	x6, [x3, x6]
    f22c:	cmp	x21, x6
    f230:	b.ne	f200 <_ZN4llvm10VarDefInit11instantiateEv+0x988>  // b.any
    f234:	str	w4, [sp, #256]
    f238:	b	edbc <_ZN4llvm10VarDefInit11instantiateEv+0x544>
    f23c:	add	w3, w3, w12
    f240:	cmp	x11, #0x0
    f244:	and	w3, w10, w3
    f248:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    f24c:	csel	x11, x11, x0, ne  // ne = any
    f250:	add	w12, w12, #0x1
    f254:	umull	x1, w3, w25
    f258:	add	x0, x6, x1
    f25c:	ldr	x1, [x6, x1]
    f260:	cmp	x21, x1
    f264:	b.eq	edb0 <_ZN4llvm10VarDefInit11instantiateEv+0x538>  // b.none
    f268:	b	ee68 <_ZN4llvm10VarDefInit11instantiateEv+0x5f0>
    f26c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f270:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f274:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f278:	add	x3, x3, #0x0
    f27c:	add	x1, x1, #0x0
    f280:	add	x0, x0, #0x0
    f284:	mov	w2, #0x95                  	// #149
    f288:	bl	0 <__assert_fail>
    f28c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f290:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f294:	add	x1, x1, #0x0
    f298:	add	x0, x0, #0x0
    f29c:	mov	w2, #0x614                 	// #1556
    f2a0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    f2a4:	add	w12, w12, w15
    f2a8:	cmp	x14, #0x0
    f2ac:	and	w12, w13, w12
    f2b0:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    f2b4:	csel	x14, x14, x0, ne  // ne = any
    f2b8:	add	w15, w15, #0x1
    f2bc:	umull	x4, w12, w25
    f2c0:	add	x0, x3, x4
    f2c4:	ldr	x4, [x3, x4]
    f2c8:	cmp	x21, x4
    f2cc:	b.eq	eac0 <_ZN4llvm10VarDefInit11instantiateEv+0x248>  // b.none
    f2d0:	b	ed64 <_ZN4llvm10VarDefInit11instantiateEv+0x4ec>
    f2d4:	add	x0, x25, #0x2
    f2d8:	stp	x5, x4, [sp, #112]
    f2dc:	mov	x23, #0xffffffff            	// #4294967295
    f2e0:	orr	x0, x0, x0, lsr #1
    f2e4:	stp	x6, x3, [sp, #128]
    f2e8:	orr	x0, x0, x0, lsr #2
    f2ec:	orr	x0, x0, x0, lsr #4
    f2f0:	orr	x0, x0, x0, lsr #8
    f2f4:	orr	x0, x0, x0, lsr #16
    f2f8:	orr	x0, x0, x0, lsr #32
    f2fc:	add	x25, x0, #0x1
    f300:	str	x25, [sp, #192]
    f304:	cmp	x25, x23
    f308:	b.hi	f3d0 <_ZN4llvm10VarDefInit11instantiateEv+0xb58>  // b.pmore
    f30c:	add	x0, x25, x25, lsl #1
    f310:	mov	w23, w25
    f314:	lsl	x0, x0, #3
    f318:	bl	0 <malloc>
    f31c:	mov	x8, x0
    f320:	ldp	x5, x4, [sp, #112]
    f324:	ldp	x6, x3, [sp, #128]
    f328:	cbz	x0, f558 <_ZN4llvm10VarDefInit11instantiateEv+0xce0>
    f32c:	cmp	x4, x20
    f330:	mov	x2, x4
    f334:	mov	x7, x8
    f338:	b.eq	f35c <_ZN4llvm10VarDefInit11instantiateEv+0xae4>  // b.none
    f33c:	ldp	x0, x1, [x2]
    f340:	stp	x0, x1, [x7]
    f344:	add	x2, x2, #0x18
    f348:	ldur	x0, [x2, #-8]
    f34c:	str	x0, [x7, #16]
    f350:	cmp	x20, x2
    f354:	add	x7, x7, #0x18
    f358:	b.ne	f33c <_ZN4llvm10VarDefInit11instantiateEv+0xac4>  // b.any
    f35c:	ldr	x0, [sp, #104]
    f360:	cmp	x0, x4
    f364:	b.eq	f388 <_ZN4llvm10VarDefInit11instantiateEv+0xb10>  // b.none
    f368:	mov	x0, x4
    f36c:	stp	x5, x8, [sp, #104]
    f370:	bl	0 <free>
    f374:	ldr	w26, [x27, #96]
    f378:	mov	w3, #0x18                  	// #24
    f37c:	ldp	x5, x8, [sp, #104]
    f380:	mov	w6, w26
    f384:	umull	x3, w26, w3
    f388:	add	x20, x8, x3
    f38c:	str	x8, [x27, #88]
    f390:	str	w23, [x27, #100]
    f394:	b	ef14 <_ZN4llvm10VarDefInit11instantiateEv+0x69c>
    f398:	add	w0, w0, w15
    f39c:	cmp	x14, #0x0
    f3a0:	and	w0, w13, w0
    f3a4:	ccmn	x11, #0x10, #0x0, eq  // eq = none
    f3a8:	csel	x14, x14, x2, ne  // ne = any
    f3ac:	add	w15, w15, #0x1
    f3b0:	umull	x11, w0, w25
    f3b4:	add	x2, x12, x11
    f3b8:	ldr	x11, [x12, x11]
    f3bc:	cmp	x3, x11
    f3c0:	b.eq	ecb4 <_ZN4llvm10VarDefInit11instantiateEv+0x43c>  // b.none
    f3c4:	b	f0f4 <_ZN4llvm10VarDefInit11instantiateEv+0x87c>
    f3c8:	str	w4, [sp, #256]
    f3cc:	b	edc8 <_ZN4llvm10VarDefInit11instantiateEv+0x550>
    f3d0:	mov	w0, #0xffffffe8            	// #-24
    f3d4:	mov	x25, x23
    f3d8:	movk	x0, #0x17, lsl #32
    f3dc:	bl	0 <malloc>
    f3e0:	mov	w23, #0xffffffff            	// #-1
    f3e4:	mov	x8, x0
    f3e8:	ldr	x5, [sp, #112]
    f3ec:	cbz	x0, f558 <_ZN4llvm10VarDefInit11instantiateEv+0xce0>
    f3f0:	ldp	x4, x6, [sp, #120]
    f3f4:	ldr	x3, [sp, #136]
    f3f8:	b	f32c <_ZN4llvm10VarDefInit11instantiateEv+0xab4>
    f3fc:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f400:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f404:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f408:	add	x3, x3, #0x0
    f40c:	add	x1, x1, #0x0
    f410:	add	x0, x0, #0x0
    f414:	mov	w2, #0x43                  	// #67
    f418:	bl	0 <__assert_fail>
    f41c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f420:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f424:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f428:	add	x3, x3, #0x0
    f42c:	add	x1, x1, #0x0
    f430:	add	x0, x0, #0x0
    f434:	mov	w2, #0x250                 	// #592
    f438:	bl	0 <__assert_fail>
    f43c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f440:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f444:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f448:	add	x3, x3, #0x0
    f44c:	add	x1, x1, #0x0
    f450:	add	x0, x0, #0x0
    f454:	mov	w2, #0xfa                  	// #250
    f458:	bl	0 <__assert_fail>
    f45c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f460:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f464:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f468:	add	x3, x3, #0x0
    f46c:	add	x1, x1, #0x0
    f470:	add	x0, x0, #0x0
    f474:	mov	w2, #0x1b7                 	// #439
    f478:	bl	0 <__assert_fail>
    f47c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f480:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f484:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f488:	add	x3, x3, #0x0
    f48c:	add	x1, x1, #0x0
    f490:	add	x0, x0, #0x0
    f494:	mov	w2, #0x1b6                 	// #438
    f498:	bl	0 <__assert_fail>
    f49c:	mov	x0, x23
    f4a0:	mov	w1, w12
    f4a4:	str	x5, [sp, #128]
    f4a8:	str	w6, [sp, #136]
    f4ac:	str	w11, [sp, #144]
    f4b0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f4b4:	ldr	w0, [sp, #264]
    f4b8:	ldr	w6, [sp, #136]
    f4bc:	ldr	w11, [sp, #144]
    f4c0:	ldr	x5, [sp, #128]
    f4c4:	cbnz	w0, ee34 <_ZN4llvm10VarDefInit11instantiateEv+0x5bc>
    f4c8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f4cc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f4d0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f4d4:	add	x3, x3, #0x0
    f4d8:	add	x1, x1, #0x0
    f4dc:	add	x0, x0, #0x0
    f4e0:	mov	w2, #0x22f                 	// #559
    f4e4:	bl	0 <__assert_fail>
    f4e8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f4ec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f4f0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f4f4:	add	x3, x3, #0x0
    f4f8:	add	x1, x1, #0x0
    f4fc:	add	x0, x0, #0x0
    f500:	mov	w2, #0x62f                 	// #1583
    f504:	bl	0 <__assert_fail>
    f508:	ldr	x0, [sp, #120]
    f50c:	mov	w1, #0x1                   	// #1
    f510:	stp	x9, x10, [sp, #128]
    f514:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    f518:	ldr	w3, [x27, #96]
    f51c:	mov	x15, #0x0                   	// #0
    f520:	ldr	x5, [x27, #88]
    f524:	mov	w6, w3
    f528:	ldp	x9, x10, [sp, #128]
    f52c:	umull	x13, w3, w23
    f530:	add	x25, x5, x13
    f534:	b	f078 <_ZN4llvm10VarDefInit11instantiateEv+0x800>
    f538:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f53c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f540:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f544:	add	x3, x3, #0x0
    f548:	add	x1, x1, #0x0
    f54c:	add	x0, x0, #0x0
    f550:	mov	w2, #0x6c7                 	// #1735
    f554:	bl	0 <__assert_fail>
    f558:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f55c:	mov	w1, #0x1                   	// #1
    f560:	add	x0, x0, #0x0
    f564:	str	x5, [sp, #112]
    f568:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    f56c:	ldr	w26, [x27, #96]
    f570:	mov	w3, #0x18                  	// #24
    f574:	mov	x8, #0x0                   	// #0
    f578:	ldr	x4, [x27, #88]
    f57c:	mov	w6, w26
    f580:	umull	x3, w26, w3
    f584:	ldr	x5, [sp, #112]
    f588:	add	x20, x4, x3
    f58c:	b	f32c <_ZN4llvm10VarDefInit11instantiateEv+0xab4>
    f590:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f594:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f598:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f59c:	add	x3, x3, #0x0
    f5a0:	add	x1, x1, #0x0
    f5a4:	add	x0, x0, #0x0
    f5a8:	mov	w2, #0xa8                  	// #168
    f5ac:	bl	0 <__assert_fail>
    f5b0:	mov	x0, #0x0                   	// #0
    f5b4:	ldr	x0, [x0, #16]
    f5b8:	brk	#0x3e8
    f5bc:	nop

000000000000f5c0 <_ZNK4llvm10VarDefInit4FoldEv>:
    f5c0:	stp	x29, x30, [sp, #-96]!
    f5c4:	mov	x29, sp
    f5c8:	stp	x21, x22, [sp, #32]
    f5cc:	mov	x21, x0
    f5d0:	ldr	x0, [x0, #40]
    f5d4:	cbz	x0, f5e4 <_ZNK4llvm10VarDefInit4FoldEv+0x24>
    f5d8:	ldp	x21, x22, [sp, #32]
    f5dc:	ldp	x29, x30, [sp], #96
    f5e0:	ret
    f5e4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f5e8:	stp	x19, x20, [sp, #16]
    f5ec:	ldr	w20, [x21, #48]
    f5f0:	ldr	x0, [x0]
    f5f4:	add	x19, x21, #0x38
    f5f8:	strb	wzr, [sp, #72]
    f5fc:	add	x20, x19, x20, lsl #3
    f600:	add	x0, x0, #0x10
    f604:	stp	x0, xzr, [sp, #56]
    f608:	add	x22, sp, #0x38
    f60c:	str	xzr, [sp, #80]
    f610:	cmp	x20, x19
    f614:	strb	wzr, [sp, #88]
    f618:	b.eq	f658 <_ZNK4llvm10VarDefInit4FoldEv+0x98>  // b.none
    f61c:	nop
    f620:	ldr	x0, [x19], #8
    f624:	mov	x1, x22
    f628:	ldr	x2, [x0]
    f62c:	ldr	x2, [x2, #96]
    f630:	blr	x2
    f634:	cmp	x20, x19
    f638:	b.ne	f620 <_ZNK4llvm10VarDefInit4FoldEv+0x60>  // b.any
    f63c:	ldrb	w0, [sp, #88]
    f640:	cbz	w0, f658 <_ZNK4llvm10VarDefInit4FoldEv+0x98>
    f644:	mov	x0, x21
    f648:	ldp	x19, x20, [sp, #16]
    f64c:	ldp	x21, x22, [sp, #32]
    f650:	ldp	x29, x30, [sp], #96
    f654:	ret
    f658:	mov	x0, x21
    f65c:	bl	e878 <_ZN4llvm10VarDefInit11instantiateEv>
    f660:	ldp	x19, x20, [sp, #16]
    f664:	ldp	x21, x22, [sp, #32]
    f668:	ldp	x29, x30, [sp], #96
    f66c:	ret

000000000000f670 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE>:
    f670:	stp	x29, x30, [sp, #-224]!
    f674:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f678:	mov	x3, x1
    f67c:	mov	x29, sp
    f680:	ldr	x2, [x2]
    f684:	stp	x21, x22, [sp, #32]
    f688:	mov	x22, x0
    f68c:	add	x2, x2, #0x10
    f690:	stp	x23, x24, [sp, #48]
    f694:	add	x24, sp, #0x90
    f698:	ldr	x4, [x3, #8]
    f69c:	add	x1, x24, #0x10
    f6a0:	mov	x0, #0x800000000           	// #34359738368
    f6a4:	stp	x19, x20, [sp, #16]
    f6a8:	stp	x2, x4, [sp, #104]
    f6ac:	ldr	w2, [x22, #48]
    f6b0:	strb	wzr, [sp, #120]
    f6b4:	str	x3, [sp, #128]
    f6b8:	cmp	w2, #0x8
    f6bc:	strb	wzr, [sp, #136]
    f6c0:	mov	w2, w2
    f6c4:	stp	x1, x0, [sp, #144]
    f6c8:	b.hi	f7ac <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x13c>  // b.pmore
    f6cc:	add	x20, x22, #0x38
    f6d0:	add	x21, x20, x2, lsl #3
    f6d4:	cmp	x21, x20
    f6d8:	b.eq	f7cc <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x15c>  // b.none
    f6dc:	add	x23, sp, #0x68
    f6e0:	stp	x25, x26, [sp, #64]
    f6e4:	add	x25, x24, #0x10
    f6e8:	str	x27, [sp, #80]
    f6ec:	mov	w27, #0x0                   	// #0
    f6f0:	ldr	x26, [x20]
    f6f4:	mov	x1, x23
    f6f8:	mov	x0, x26
    f6fc:	ldr	x2, [x26]
    f700:	ldr	x2, [x2, #96]
    f704:	blr	x2
    f708:	mov	x19, x0
    f70c:	ldp	w1, w0, [sp, #152]
    f710:	cmp	w1, w0
    f714:	b.cs	f790 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x120>  // b.hs, b.nlast
    f718:	ldr	x0, [sp, #144]
    f71c:	str	x19, [x0, w1, uxtw #3]
    f720:	ldp	w1, w0, [sp, #152]
    f724:	mov	w2, w1
    f728:	add	x2, x2, #0x1
    f72c:	cmp	x2, x0
    f730:	b.hi	f810 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x1a0>  // b.pmore
    f734:	cmp	x19, x26
    f738:	add	w1, w1, #0x1
    f73c:	str	w1, [sp, #152]
    f740:	cset	w0, ne  // ne = any
    f744:	add	x20, x20, #0x8
    f748:	orr	w27, w27, w0
    f74c:	cmp	x21, x20
    f750:	b.ne	f6f0 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x80>  // b.any
    f754:	ldr	x1, [sp, #144]
    f758:	cbnz	w27, f7d4 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x164>
    f75c:	ldp	x25, x26, [sp, #64]
    f760:	ldr	x27, [sp, #80]
    f764:	add	x24, x24, #0x10
    f768:	cmp	x1, x24
    f76c:	b.eq	f778 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x108>  // b.none
    f770:	mov	x0, x1
    f774:	bl	0 <free>
    f778:	mov	x0, x22
    f77c:	ldp	x19, x20, [sp, #16]
    f780:	ldp	x21, x22, [sp, #32]
    f784:	ldp	x23, x24, [sp, #48]
    f788:	ldp	x29, x30, [sp], #224
    f78c:	ret
    f790:	mov	x1, x25
    f794:	mov	x0, x24
    f798:	mov	x3, #0x8                   	// #8
    f79c:	mov	x2, #0x0                   	// #0
    f7a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    f7a4:	ldr	w1, [sp, #152]
    f7a8:	b	f718 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xa8>
    f7ac:	mov	x0, x24
    f7b0:	mov	x3, #0x8                   	// #8
    f7b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    f7b8:	add	x20, x22, #0x38
    f7bc:	ldr	w2, [x22, #48]
    f7c0:	add	x21, x20, x2, lsl #3
    f7c4:	cmp	x21, x20
    f7c8:	b.ne	f6dc <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x6c>  // b.any
    f7cc:	ldr	x1, [sp, #144]
    f7d0:	b	f764 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xf4>
    f7d4:	ldr	x0, [x22, #32]
    f7d8:	bl	5d38 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>
    f7dc:	mov	x22, x0
    f7e0:	ldrb	w1, [sp, #136]
    f7e4:	cbz	w1, f7f8 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x188>
    f7e8:	ldp	x25, x26, [sp, #64]
    f7ec:	ldr	x27, [sp, #80]
    f7f0:	ldr	x1, [sp, #144]
    f7f4:	b	f764 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xf4>
    f7f8:	bl	e878 <_ZN4llvm10VarDefInit11instantiateEv>
    f7fc:	mov	x22, x0
    f800:	ldp	x25, x26, [sp, #64]
    f804:	ldr	x27, [sp, #80]
    f808:	ldr	x1, [sp, #144]
    f80c:	b	f764 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xf4>
    f810:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f814:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f818:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f81c:	add	x3, x3, #0x0
    f820:	add	x1, x1, #0x0
    f824:	add	x0, x0, #0x0
    f828:	mov	w2, #0x43                  	// #67
    f82c:	bl	0 <__assert_fail>

000000000000f830 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE>:
    f830:	stp	x29, x30, [sp, #-176]!
    f834:	mov	x29, sp
    f838:	stp	x19, x20, [sp, #16]
    f83c:	mov	x19, x0
    f840:	mov	x20, x1
    f844:	ldr	x0, [x0, #32]
    f848:	stp	x21, x22, [sp, #32]
    f84c:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f850:	stp	x23, x24, [sp, #48]
    f854:	add	x24, sp, #0x68
    f858:	ldr	x2, [x0]
    f85c:	stp	x25, x26, [sp, #64]
    f860:	add	x25, sp, #0x70
    f864:	add	x26, x25, #0x20
    f868:	ldr	x2, [x2, #96]
    f86c:	blr	x2
    f870:	mov	x22, x0
    f874:	ldr	x2, [x19, #40]
    f878:	mov	x1, x20
    f87c:	mov	x0, x2
    f880:	ldr	x2, [x2]
    f884:	ldr	x2, [x2, #96]
    f888:	blr	x2
    f88c:	mov	x23, x0
    f890:	ldr	x2, [x21]
    f894:	mov	x3, #0x1                   	// #1
    f898:	ldrb	w4, [x20, #16]
    f89c:	mov	x0, x26
    f8a0:	ldr	x5, [x20, #8]
    f8a4:	add	x2, x2, #0x10
    f8a8:	ldr	x6, [x19, #48]
    f8ac:	mov	w1, #0x0                   	// #0
    f8b0:	str	x6, [sp, #96]
    f8b4:	stp	x2, x5, [sp, #112]
    f8b8:	strb	w4, [sp, #128]
    f8bc:	stp	x20, x3, [sp, #136]
    f8c0:	stp	xzr, xzr, [sp, #152]
    f8c4:	str	wzr, [sp, #168]
    f8c8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f8cc:	mov	x0, x26
    f8d0:	mov	x2, x24
    f8d4:	add	x1, sp, #0x60
    f8d8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    f8dc:	ldr	x0, [sp, #104]
    f8e0:	cbz	x0, fb08 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x2d8>
    f8e4:	ldr	w3, [sp, #160]
    f8e8:	ldr	x1, [x0]
    f8ec:	mov	w9, w3
    f8f0:	add	w3, w3, #0x1
    f8f4:	str	w3, [sp, #160]
    f8f8:	cmn	x1, #0x8
    f8fc:	b.eq	f90c <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0xdc>  // b.none
    f900:	ldr	w1, [sp, #164]
    f904:	sub	w1, w1, #0x1
    f908:	str	w1, [sp, #164]
    f90c:	ldr	x1, [sp, #96]
    f910:	ldr	w4, [sp, #168]
    f914:	str	x1, [x0]
    f918:	ldr	x0, [x19, #56]
    f91c:	str	x0, [sp, #88]
    f920:	cbz	w4, faa0 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x270>
    f924:	cmn	x0, #0x8
    f928:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    f92c:	b.eq	fae8 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x2b8>  // b.none
    f930:	lsr	w2, w0, #9
    f934:	sub	w8, w4, #0x1
    f938:	eor	w2, w2, w0, lsr #4
    f93c:	mov	w10, #0x1                   	// #1
    f940:	ldr	x6, [sp, #152]
    f944:	and	w7, w2, w8
    f948:	mov	x2, x7
    f94c:	ubfiz	x1, x7, #3, #28
    f950:	add	x5, x6, x1
    f954:	ldr	x1, [x6, x7, lsl #3]
    f958:	mov	x7, #0x0                   	// #0
    f95c:	cmp	x0, x1
    f960:	b.ne	fa30 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x200>  // b.any
    f964:	ldr	x0, [x19, #64]
    f968:	mov	x1, x25
    f96c:	ldr	x2, [x0]
    f970:	ldr	x2, [x2, #96]
    f974:	blr	x2
    f978:	mov	x4, x0
    f97c:	ldr	x1, [x19, #32]
    f980:	cmp	x1, x22
    f984:	b.eq	f9e0 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x1b0>  // b.none
    f988:	ldp	x2, x3, [x19, #48]
    f98c:	mov	x1, x23
    f990:	ldr	x5, [x19, #16]
    f994:	mov	x0, x22
    f998:	bl	6610 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>
    f99c:	ldr	x1, [x20, #8]
    f9a0:	bl	3478 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>
    f9a4:	mov	x19, x0
    f9a8:	ldr	x0, [sp, #152]
    f9ac:	ldr	w1, [sp, #168]
    f9b0:	ldr	x21, [x21]
    f9b4:	lsl	x1, x1, #3
    f9b8:	add	x21, x21, #0x10
    f9bc:	str	x21, [sp, #112]
    f9c0:	bl	0 <_ZdlPvm>
    f9c4:	mov	x0, x19
    f9c8:	ldp	x19, x20, [sp, #16]
    f9cc:	ldp	x21, x22, [sp, #32]
    f9d0:	ldp	x23, x24, [sp, #48]
    f9d4:	ldp	x25, x26, [sp, #64]
    f9d8:	ldp	x29, x30, [sp], #176
    f9dc:	ret
    f9e0:	ldr	x0, [x19, #40]
    f9e4:	cmp	x0, x23
    f9e8:	b.ne	f988 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x158>  // b.any
    f9ec:	ldr	x0, [x19, #64]
    f9f0:	cmp	x0, x4
    f9f4:	b.ne	f988 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x158>  // b.any
    f9f8:	b	f9a8 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x178>
    f9fc:	add	w2, w10, w2
    fa00:	cmp	x7, #0x0
    fa04:	and	w11, w8, w2
    fa08:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    fa0c:	csel	x5, x5, x7, eq  // eq = none
    fa10:	add	w10, w10, #0x1
    fa14:	and	w2, w8, w2
    fa18:	add	x12, x6, x11, lsl #3
    fa1c:	ldr	x1, [x6, x11, lsl #3]
    fa20:	cmp	x0, x1
    fa24:	b.eq	f964 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x134>  // b.none
    fa28:	mov	x7, x5
    fa2c:	mov	x5, x12
    fa30:	cmn	x1, #0x8
    fa34:	b.ne	f9fc <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x1cc>  // b.any
    fa38:	ldr	x0, [sp, #144]
    fa3c:	add	w2, w9, #0x2
    fa40:	lsl	w1, w4, #1
    fa44:	cmp	x7, #0x0
    fa48:	add	x0, x0, #0x1
    fa4c:	str	x0, [sp, #144]
    fa50:	add	w0, w1, w4
    fa54:	csel	x7, x7, x5, ne  // ne = any
    fa58:	cmp	w0, w2, lsl #2
    fa5c:	b.ls	fab0 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x280>  // b.plast
    fa60:	ldr	w0, [sp, #164]
    fa64:	sub	w0, w4, w0
    fa68:	sub	w0, w0, w2
    fa6c:	cmp	w0, w4, lsr #3
    fa70:	b.ls	fadc <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x2ac>  // b.plast
    fa74:	ldr	x0, [x7]
    fa78:	add	w3, w3, #0x1
    fa7c:	str	w3, [sp, #160]
    fa80:	cmn	x0, #0x8
    fa84:	b.eq	fa94 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x264>  // b.none
    fa88:	ldr	w0, [sp, #164]
    fa8c:	sub	w0, w0, #0x1
    fa90:	str	w0, [sp, #164]
    fa94:	ldr	x0, [sp, #88]
    fa98:	str	x0, [x7]
    fa9c:	b	f964 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x134>
    faa0:	ldr	x0, [sp, #144]
    faa4:	mov	w1, #0x0                   	// #0
    faa8:	add	x0, x0, #0x1
    faac:	str	x0, [sp, #144]
    fab0:	add	x26, x25, #0x20
    fab4:	mov	x0, x26
    fab8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fabc:	mov	x2, x24
    fac0:	mov	x0, x26
    fac4:	add	x1, sp, #0x58
    fac8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    facc:	ldr	x7, [sp, #104]
    fad0:	cbz	x7, fb08 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x2d8>
    fad4:	ldr	w3, [sp, #160]
    fad8:	b	fa74 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x244>
    fadc:	add	x26, x25, #0x20
    fae0:	mov	w1, w4
    fae4:	b	fab4 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x284>
    fae8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    faec:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    faf0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    faf4:	add	x3, x3, #0x0
    faf8:	add	x1, x1, #0x0
    fafc:	add	x0, x0, #0x0
    fb00:	mov	w2, #0x250                 	// #592
    fb04:	bl	0 <__assert_fail>
    fb08:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fb0c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fb10:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fb14:	add	x3, x3, #0x0
    fb18:	add	x1, x1, #0x0
    fb1c:	add	x0, x0, #0x0
    fb20:	mov	w2, #0x22f                 	// #559
    fb24:	bl	0 <__assert_fail>

000000000000fb28 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>:
    fb28:	stp	x29, x30, [sp, #-96]!
    fb2c:	mov	x29, sp
    fb30:	stp	x21, x22, [sp, #32]
    fb34:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fb38:	stp	x23, x24, [sp, #48]
    fb3c:	add	x23, x21, #0x0
    fb40:	add	x22, x23, #0x320
    fb44:	stp	x19, x20, [sp, #16]
    fb48:	mov	x20, x0
    fb4c:	mov	x19, x1
    fb50:	ldarb	w0, [x22]
    fb54:	tbz	w0, #0, fc20 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xf8>
    fb58:	add	x0, x21, #0x0
    fb5c:	stp	x19, x20, [sp, #80]
    fb60:	ldr	w3, [x0, #832]
    fb64:	cbz	w3, fc70 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x148>
    fb68:	cmn	x19, #0x8
    fb6c:	b.eq	fcc8 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x1a0>  // b.none
    fb70:	cmn	x19, #0x10
    fb74:	ccmn	x20, #0x10, #0x0, eq  // eq = none
    fb78:	b.eq	fcd0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x1a8>  // b.none
    fb7c:	lsr	w2, w20, #9
    fb80:	lsr	w0, w19, #9
    fb84:	eor	w0, w0, w19, lsr #4
    fb88:	add	x1, x21, #0x0
    fb8c:	eor	w2, w2, w20, lsr #4
    fb90:	sub	w6, w3, #0x1
    fb94:	orr	x0, x2, x0, lsl #32
    fb98:	mov	w7, #0x1                   	// #1
    fb9c:	sub	x0, x0, #0x1
    fba0:	mov	x22, #0x0                   	// #0
    fba4:	sub	x2, x0, x2, lsl #32
    fba8:	mov	w5, #0x18                  	// #24
    fbac:	ldr	x1, [x1, #816]
    fbb0:	eor	x2, x2, x2, lsr #22
    fbb4:	sub	x0, x2, #0x1
    fbb8:	sub	x2, x0, x2, lsl #13
    fbbc:	eor	x2, x2, x2, lsr #8
    fbc0:	add	x2, x2, x2, lsl #3
    fbc4:	eor	x2, x2, x2, lsr #15
    fbc8:	sub	x0, x2, #0x1
    fbcc:	sub	x2, x0, x2, lsl #27
    fbd0:	eor	x2, x2, x2, lsr #31
    fbd4:	and	w2, w6, w2
    fbd8:	umull	x0, w2, w5
    fbdc:	add	x4, x1, x0
    fbe0:	ldr	x0, [x1, x0]
    fbe4:	cmp	x19, x0
    fbe8:	b.eq	fcf0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x1c8>  // b.none
    fbec:	cmn	x0, #0x8
    fbf0:	b.eq	fd18 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x1f0>  // b.none
    fbf4:	cmn	x0, #0x10
    fbf8:	b.ne	fc10 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xe8>  // b.any
    fbfc:	ldr	x0, [x4, #8]
    fc00:	cmp	x22, #0x0
    fc04:	ccmn	x0, #0x10, #0x0, eq  // eq = none
    fc08:	csel	x22, x22, x4, ne  // ne = any
    fc0c:	nop
    fc10:	add	w2, w2, w7
    fc14:	add	w7, w7, #0x1
    fc18:	and	w2, w6, w2
    fc1c:	b	fbd8 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xb0>
    fc20:	mov	x0, x22
    fc24:	bl	0 <__cxa_guard_acquire>
    fc28:	cbz	w0, fb58 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x30>
    fc2c:	str	xzr, [x23, #808]
    fc30:	mov	x0, x22
    fc34:	str	xzr, [x23, #816]
    fc38:	add	x24, x23, #0x328
    fc3c:	str	xzr, [x23, #824]
    fc40:	str	wzr, [x23, #832]
    fc44:	bl	0 <__cxa_guard_release>
    fc48:	mov	x1, x24
    fc4c:	adrp	x2, 0 <__dso_handle>
    fc50:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fc54:	add	x2, x2, #0x0
    fc58:	add	x0, x0, #0x0
    fc5c:	bl	0 <__cxa_atexit>
    fc60:	add	x0, x21, #0x0
    fc64:	stp	x19, x20, [sp, #80]
    fc68:	ldr	w3, [x0, #832]
    fc6c:	cbnz	w3, fb68 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x40>
    fc70:	ldr	x2, [x0, #808]
    fc74:	mov	w1, #0x0                   	// #0
    fc78:	add	x2, x2, #0x1
    fc7c:	str	x2, [x0, #808]
    fc80:	add	x22, x21, #0x0
    fc84:	add	x22, x22, #0x328
    fc88:	mov	x0, x22
    fc8c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fc90:	mov	x0, x22
    fc94:	add	x2, sp, #0x48
    fc98:	add	x1, sp, #0x50
    fc9c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fca0:	ldr	x22, [sp, #72]
    fca4:	cbnz	x22, fd6c <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x244>
    fca8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fcac:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fcb0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fcb4:	add	x3, x3, #0x0
    fcb8:	add	x1, x1, #0x0
    fcbc:	add	x0, x0, #0x0
    fcc0:	mov	w2, #0x22f                 	// #559
    fcc4:	bl	0 <__assert_fail>
    fcc8:	cmn	x20, #0x8
    fccc:	b.ne	fb7c <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x54>  // b.any
    fcd0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fcd4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fcd8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fcdc:	add	x3, x3, #0x0
    fce0:	add	x1, x1, #0x0
    fce4:	add	x0, x0, #0x0
    fce8:	mov	w2, #0x250                 	// #592
    fcec:	bl	0 <__assert_fail>
    fcf0:	ldr	x8, [x4, #8]
    fcf4:	cmp	x20, x8
    fcf8:	b.ne	fbec <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xc4>  // b.any
    fcfc:	ldr	x0, [x4, #16]
    fd00:	cbz	x0, fe20 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2f8>
    fd04:	ldp	x19, x20, [sp, #16]
    fd08:	ldp	x21, x22, [sp, #32]
    fd0c:	ldp	x23, x24, [sp, #48]
    fd10:	ldp	x29, x30, [sp], #96
    fd14:	ret
    fd18:	ldr	x0, [x4, #8]
    fd1c:	cmn	x0, #0x8
    fd20:	b.ne	fc10 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xe8>  // b.any
    fd24:	add	x2, x21, #0x0
    fd28:	cmp	x22, #0x0
    fd2c:	csel	x22, x22, x4, ne  // ne = any
    fd30:	lsl	w1, w3, #1
    fd34:	add	w5, w1, w3
    fd38:	add	x23, x2, #0x328
    fd3c:	ldr	x4, [x2, #808]
    fd40:	ldr	w0, [x23, #16]
    fd44:	add	x4, x4, #0x1
    fd48:	str	x4, [x2, #808]
    fd4c:	add	w0, w0, #0x1
    fd50:	cmp	w5, w0, lsl #2
    fd54:	b.ls	fc80 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x158>  // b.plast
    fd58:	ldr	w1, [x23, #20]
    fd5c:	sub	w1, w3, w1
    fd60:	sub	w1, w1, w0
    fd64:	cmp	w1, w3, lsr #3
    fd68:	b.ls	fdfc <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2d4>  // b.plast
    fd6c:	add	x0, x21, #0x0
    fd70:	ldr	x2, [x22]
    fd74:	ldr	w1, [x0, #824]
    fd78:	cmn	x2, #0x8
    fd7c:	add	w1, w1, #0x1
    fd80:	str	w1, [x0, #824]
    fd84:	b.eq	fdec <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2c4>  // b.none
    fd88:	add	x0, x21, #0x0
    fd8c:	ldr	w1, [x0, #828]
    fd90:	sub	w1, w1, #0x1
    fd94:	str	w1, [x0, #828]
    fd98:	ldr	q0, [sp, #80]
    fd9c:	str	xzr, [x22, #16]
    fda0:	str	q0, [x22]
    fda4:	add	x0, x21, #0x0
    fda8:	mov	w2, #0x4                   	// #4
    fdac:	mov	x1, #0x20                  	// #32
    fdb0:	add	x0, x0, #0xa0
    fdb4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fdb8:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fdbc:	mov	w2, #0x13                  	// #19
    fdc0:	strh	w2, [x0, #8]
    fdc4:	ldr	x1, [x1]
    fdc8:	stp	x19, x20, [x0, #16]
    fdcc:	add	x1, x1, #0x10
    fdd0:	str	x1, [x0]
    fdd4:	str	x0, [x22, #16]
    fdd8:	ldp	x19, x20, [sp, #16]
    fddc:	ldp	x21, x22, [sp, #32]
    fde0:	ldp	x23, x24, [sp, #48]
    fde4:	ldp	x29, x30, [sp], #96
    fde8:	ret
    fdec:	ldr	x0, [x22, #8]
    fdf0:	cmn	x0, #0x8
    fdf4:	b.ne	fd88 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x260>  // b.any
    fdf8:	b	fd98 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x270>
    fdfc:	mov	w1, w3
    fe00:	mov	x0, x23
    fe04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fe08:	mov	x0, x23
    fe0c:	add	x2, sp, #0x48
    fe10:	add	x1, sp, #0x50
    fe14:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fe18:	ldr	x22, [sp, #72]
    fe1c:	b	fca4 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x17c>
    fe20:	mov	x22, x4
    fe24:	b	fda4 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x27c>

000000000000fe28 <_ZN4llvm7VarInit3getENS_9StringRefEPNS_5RecTyE>:
    fe28:	stp	x29, x30, [sp, #-32]!
    fe2c:	mov	x29, sp
    fe30:	str	x19, [sp, #16]
    fe34:	mov	x19, x2
    fe38:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
    fe3c:	mov	x1, x19
    fe40:	ldr	x19, [sp, #16]
    fe44:	ldp	x29, x30, [sp], #32
    fe48:	b	fb28 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    fe4c:	nop

000000000000fe50 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>:
    fe50:	stp	x29, x30, [sp, #-416]!
    fe54:	mov	x29, sp
    fe58:	stp	x19, x20, [sp, #16]
    fe5c:	stp	x27, x28, [sp, #80]
    fe60:	mov	x28, x0
    fe64:	ldrb	w0, [x0, #9]
    fe68:	cmp	w0, #0x2
    fe6c:	b.eq	10298 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x448>  // b.none
    fe70:	b.hi	10080 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x230>  // b.pmore
    fe74:	stp	x21, x22, [sp, #32]
    fe78:	stp	x25, x26, [sp, #64]
    fe7c:	cbz	w0, 100e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x298>
    fe80:	mov	x19, x1
    fe84:	ldp	x25, x1, [x28, #32]
    fe88:	ldr	x22, [x28, #48]
    fe8c:	cbz	x1, 105c0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x770>
    fe90:	ldrb	w0, [x1, #8]
    fe94:	cmp	w0, #0x5
    fe98:	b.eq	102e0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x490>  // b.none
    fe9c:	mov	x0, x1
    fea0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    fea4:	mov	x2, x0
    fea8:	cbz	x0, 105a8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x758>
    feac:	stp	x23, x24, [sp, #48]
    feb0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    feb4:	ldr	w24, [x2, #32]
    feb8:	ldr	d0, [x0]
    febc:	add	x21, sp, #0xc0
    fec0:	add	x26, x2, #0x28
    fec4:	add	x0, x21, #0x10
    fec8:	lsl	x24, x24, #3
    fecc:	str	x0, [sp, #192]
    fed0:	add	x20, x24, #0x28
    fed4:	str	d0, [sp, #200]
    fed8:	add	x20, x2, x20
    fedc:	cmp	x24, #0x40
    fee0:	ldr	x2, [x28, #16]
    fee4:	str	x2, [sp, #136]
    fee8:	asr	x23, x24, #3
    feec:	mov	x1, #0x0                   	// #0
    fef0:	b.hi	10780 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x930>  // b.pmore
    fef4:	cmp	x26, x20
    fef8:	b.eq	ff0c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbc>  // b.none
    fefc:	mov	x1, x26
    ff00:	mov	x2, x24
    ff04:	bl	0 <memcpy>
    ff08:	ldr	w1, [sp, #200]
    ff0c:	ldr	w0, [sp, #204]
    ff10:	add	x23, x23, x1
    ff14:	cmp	x23, x0
    ff18:	b.hi	108b8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa68>  // b.pmore
    ff1c:	ldr	x3, [sp, #192]
    ff20:	str	w23, [sp, #200]
    ff24:	mov	w1, w23
    ff28:	add	x0, x3, x23, lsl #3
    ff2c:	str	x0, [sp, #104]
    ff30:	cmp	x3, x0
    ff34:	b.eq	10040 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1f0>  // b.none
    ff38:	adrp	x27, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff3c:	add	x20, sp, #0x110
    ff40:	mov	x23, x3
    ff44:	add	x24, x20, #0x18
    ff48:	ldr	x0, [x27]
    ff4c:	add	x26, sp, #0xa0
    ff50:	add	x1, sp, #0x98
    ff54:	add	x0, x0, #0x10
    ff58:	stp	x0, x1, [sp, #112]
    ff5c:	str	x0, [sp, #128]
    ff60:	ldr	x2, [sp, #112]
    ff64:	mov	x0, x24
    ff68:	ldr	x27, [x23]
    ff6c:	stp	x2, x19, [sp, #272]
    ff70:	mov	x2, #0x1                   	// #1
    ff74:	mov	w1, #0x0                   	// #0
    ff78:	str	x25, [sp, #152]
    ff7c:	strb	wzr, [sp, #288]
    ff80:	str	x2, [sp, #296]
    ff84:	stp	xzr, xzr, [sp, #304]
    ff88:	str	wzr, [sp, #320]
    ff8c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ff90:	ldr	x1, [sp, #120]
    ff94:	mov	x2, x26
    ff98:	mov	x0, x24
    ff9c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
    ffa0:	ldr	x0, [sp, #160]
    ffa4:	cbz	x0, 108e0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa90>
    ffa8:	ldr	w1, [sp, #312]
    ffac:	ldr	x2, [x0]
    ffb0:	add	w1, w1, #0x1
    ffb4:	str	w1, [sp, #312]
    ffb8:	cmn	x2, #0x8
    ffbc:	b.eq	ffcc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x17c>  // b.none
    ffc0:	ldr	w1, [sp, #316]
    ffc4:	sub	w1, w1, #0x1
    ffc8:	str	w1, [sp, #316]
    ffcc:	ldr	x1, [x22]
    ffd0:	ldr	x2, [sp, #152]
    ffd4:	stp	x2, x27, [x0]
    ffd8:	ldr	x2, [x1, #96]
    ffdc:	strb	wzr, [x0, #16]
    ffe0:	mov	x1, x20
    ffe4:	mov	x0, x22
    ffe8:	blr	x2
    ffec:	mov	x2, x0
    fff0:	ldr	w5, [sp, #320]
    fff4:	mov	w1, #0x18                  	// #24
    fff8:	str	x2, [sp, #96]
    fffc:	ldr	x2, [sp, #128]
   10000:	str	x2, [sp, #272]
   10004:	umull	x1, w5, w1
   10008:	ldr	x0, [sp, #304]
   1000c:	bl	0 <_ZdlPvm>
   10010:	ldr	x0, [x23]
   10014:	ldr	x2, [sp, #96]
   10018:	cmp	x0, x2
   1001c:	b.eq	10024 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1d4>  // b.none
   10020:	str	x2, [x23]
   10024:	ldr	x0, [sp, #104]
   10028:	add	x23, x23, #0x8
   1002c:	cmp	x0, x23
   10030:	b.ne	ff60 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x110>  // b.any
   10034:	ldr	w1, [sp, #200]
   10038:	ldr	x0, [sp, #192]
   1003c:	str	x0, [sp, #104]
   10040:	ldr	x0, [sp, #136]
   10044:	mov	w19, w1
   10048:	add	x21, x21, #0x10
   1004c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10050:	ldr	x2, [x0, #24]
   10054:	mov	x1, x19
   10058:	ldr	x0, [sp, #104]
   1005c:	bl	6b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
   10060:	mov	x19, x0
   10064:	ldr	x1, [sp, #192]
   10068:	cmp	x1, x21
   1006c:	b.eq	10764 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x914>  // b.none
   10070:	mov	x0, x1
   10074:	bl	0 <free>
   10078:	ldp	x23, x24, [sp, #48]
   1007c:	b	102f4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4a4>
   10080:	cmp	w0, #0x3
   10084:	b.ne	100d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x280>  // b.any
   10088:	stp	x25, x26, [sp, #64]
   1008c:	ldr	x25, [x28, #40]
   10090:	cbz	x25, 105b4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x764>
   10094:	ldr	x26, [x28, #48]
   10098:	ldrb	w1, [x25, #8]
   1009c:	cmp	w1, #0x9
   100a0:	csel	x25, x25, xzr, eq  // eq = none
   100a4:	cbz	x26, 105b4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x764>
   100a8:	cmp	x25, #0x0
   100ac:	ldrb	w2, [x26, #8]
   100b0:	cset	w0, ne  // ne = any
   100b4:	cmp	w1, #0x18
   100b8:	csinc	w0, w0, wzr, ne  // ne = any
   100bc:	cmp	w2, #0x9
   100c0:	b.eq	10314 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4c4>  // b.none
   100c4:	cmp	w2, #0x18
   100c8:	b.eq	1051c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6cc>  // b.none
   100cc:	ldp	x25, x26, [sp, #64]
   100d0:	mov	x19, x28
   100d4:	mov	x0, x19
   100d8:	ldp	x19, x20, [sp, #16]
   100dc:	ldp	x27, x28, [sp, #80]
   100e0:	ldp	x29, x30, [sp], #416
   100e4:	ret
   100e8:	ldr	x19, [x28, #32]
   100ec:	stp	x23, x24, [sp, #48]
   100f0:	cbz	x19, 108dc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa8c>
   100f4:	ldrb	w1, [x19, #8]
   100f8:	cmp	w1, #0x6
   100fc:	b.eq	102d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x480>  // b.none
   10100:	cmp	w1, #0x13
   10104:	mov	x0, #0x0                   	// #0
   10108:	mov	x22, #0x0                   	// #0
   1010c:	b.ne	1042c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5dc>  // b.any
   10110:	ldr	x24, [x28, #40]
   10114:	cbz	x24, 108dc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa8c>
   10118:	ldrb	w1, [x24, #8]
   1011c:	cmp	w1, #0x6
   10120:	b.eq	10440 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5f0>  // b.none
   10124:	cmp	w1, #0x13
   10128:	mov	x26, #0x0                   	// #0
   1012c:	mov	x23, #0x0                   	// #0
   10130:	b.ne	10450 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x600>  // b.any
   10134:	ldr	x25, [x28, #48]
   10138:	cbz	x25, 108dc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa8c>
   1013c:	ldrb	w1, [x25, #8]
   10140:	cmp	w1, #0x6
   10144:	b.eq	10464 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x614>  // b.none
   10148:	cmp	w1, #0x13
   1014c:	b.ne	105f8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7a8>  // b.any
   10150:	cmp	x24, #0x0
   10154:	cset	w22, ne  // ne = any
   10158:	cmp	x19, #0x0
   1015c:	csel	w22, w22, wzr, ne  // ne = any
   10160:	cbz	w22, 1050c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6bc>
   10164:	mov	x0, x25
   10168:	add	x26, sp, #0xa0
   1016c:	bl	3bf0 <_ZNK4llvm7VarInit7getNameEv>
   10170:	mov	x2, x1
   10174:	mov	x1, x0
   10178:	cbz	x0, 10598 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x748>
   1017c:	add	x5, x26, #0x10
   10180:	add	x2, x0, x2
   10184:	mov	w3, #0x0                   	// #0
   10188:	mov	x0, x26
   1018c:	str	x5, [sp, #160]
   10190:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10194:	ldr	x1, [x19]
   10198:	adrp	x20, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1019c:	add	x0, x20, #0x0
   101a0:	ldr	x1, [x1, #40]
   101a4:	cmp	x1, x0
   101a8:	b.ne	1084c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9fc>  // b.any
   101ac:	mov	x0, x19
   101b0:	add	x21, sp, #0xc0
   101b4:	bl	3bf0 <_ZNK4llvm7VarInit7getNameEv>
   101b8:	mov	x2, x1
   101bc:	mov	x1, x0
   101c0:	cbz	x0, 107b8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x968>
   101c4:	add	x5, x21, #0x10
   101c8:	add	x2, x0, x2
   101cc:	mov	w3, #0x0                   	// #0
   101d0:	mov	x0, x21
   101d4:	str	x5, [sp, #192]
   101d8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   101dc:	ldr	x0, [x25]
   101e0:	add	x20, x20, #0x0
   101e4:	ldr	x1, [x0, #40]
   101e8:	cmp	x1, x20
   101ec:	b.ne	10834 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9e4>  // b.any
   101f0:	mov	x0, x25
   101f4:	add	x20, sp, #0x110
   101f8:	bl	3bf0 <_ZNK4llvm7VarInit7getNameEv>
   101fc:	mov	x2, x1
   10200:	mov	x1, x0
   10204:	cbz	x0, 107a4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x954>
   10208:	add	x5, x20, #0x10
   1020c:	add	x2, x0, x2
   10210:	mov	w3, #0x0                   	// #0
   10214:	mov	x0, x20
   10218:	str	x5, [sp, #272]
   1021c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10220:	ldp	x19, x2, [sp, #272]
   10224:	ldr	x0, [sp, #200]
   10228:	cmp	x0, x2
   1022c:	b.eq	107c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x978>  // b.none
   10230:	mov	w22, #0x0                   	// #0
   10234:	add	x0, x20, #0x10
   10238:	cmp	x19, x0
   1023c:	b.eq	10248 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3f8>  // b.none
   10240:	mov	x0, x19
   10244:	bl	0 <_ZdlPv>
   10248:	ldr	x0, [sp, #192]
   1024c:	add	x21, x21, #0x10
   10250:	cmp	x0, x21
   10254:	b.eq	1025c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x40c>  // b.none
   10258:	bl	0 <_ZdlPv>
   1025c:	cbnz	w22, 107e4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x994>
   10260:	ldp	x0, x1, [sp, #160]
   10264:	add	x26, x26, #0x10
   10268:	ldr	x2, [x28, #16]
   1026c:	bl	fe28 <_ZN4llvm7VarInit3getENS_9StringRefEPNS_5RecTyE>
   10270:	mov	x19, x0
   10274:	ldr	x1, [sp, #160]
   10278:	cmp	x1, x26
   1027c:	b.eq	1073c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8ec>  // b.none
   10280:	mov	x0, x1
   10284:	bl	0 <_ZdlPv>
   10288:	ldp	x21, x22, [sp, #32]
   1028c:	ldp	x23, x24, [sp, #48]
   10290:	ldp	x25, x26, [sp, #64]
   10294:	b	100d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x284>
   10298:	ldr	x0, [x28, #32]
   1029c:	adrp	x1, 3f8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x58>
   102a0:	ldr	x1, [x1]
   102a4:	ldr	x2, [x0]
   102a8:	ldr	x2, [x2, #64]
   102ac:	blr	x2
   102b0:	cbz	x0, 100d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x280>
   102b4:	ldrb	w1, [x0, #8]
   102b8:	cmp	w1, #0x8
   102bc:	b.ne	100d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x280>  // b.any
   102c0:	ldr	x0, [x0, #24]
   102c4:	cbz	x0, 10590 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x740>
   102c8:	ldr	x19, [x28, #40]
   102cc:	b	100d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x284>
   102d0:	mov	x0, x19
   102d4:	mov	x22, #0x0                   	// #0
   102d8:	mov	x19, #0x0                   	// #0
   102dc:	b	10110 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2c0>
   102e0:	mov	x3, x19
   102e4:	mov	x2, x22
   102e8:	mov	x0, x25
   102ec:	bl	e4d8 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>
   102f0:	mov	x19, x0
   102f4:	ldp	x21, x22, [sp, #32]
   102f8:	ldp	x25, x26, [sp, #64]
   102fc:	cbz	x19, 100d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x280>
   10300:	mov	x0, x19
   10304:	ldp	x19, x20, [sp, #16]
   10308:	ldp	x27, x28, [sp, #80]
   1030c:	ldp	x29, x30, [sp], #416
   10310:	ret
   10314:	cbz	w0, 100cc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x27c>
   10318:	cbz	x25, 10550 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x700>
   1031c:	ldr	w1, [x25, #32]
   10320:	ldr	w0, [x26, #32]
   10324:	cmp	w1, w0
   10328:	b.ne	100cc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x27c>  // b.any
   1032c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10330:	add	x20, sp, #0x110
   10334:	ldr	d0, [x0]
   10338:	add	x0, x20, #0x10
   1033c:	str	x0, [sp, #272]
   10340:	str	d0, [sp, #280]
   10344:	ldr	w19, [x25, #32]
   10348:	cbz	w19, 10870 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa20>
   1034c:	stp	x21, x22, [sp, #32]
   10350:	add	x22, x25, #0x28
   10354:	add	x21, x26, #0x28
   10358:	stp	x23, x24, [sp, #48]
   1035c:	mov	x23, #0x0                   	// #0
   10360:	cbz	x25, 105c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x778>
   10364:	ldr	w0, [x25, #32]
   10368:	cmp	w0, w23
   1036c:	b.ls	10878 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa28>  // b.plast
   10370:	ldr	x27, [x22, x23, lsl #3]
   10374:	cbz	x26, 105d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x784>
   10378:	ldr	w0, [x26, #32]
   1037c:	cmp	w0, w23
   10380:	b.ls	10878 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa28>  // b.plast
   10384:	ldr	x24, [x21, x23, lsl #3]
   10388:	cbz	x24, 108d8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa88>
   1038c:	ldrb	w1, [x24, #8]
   10390:	cmp	w1, #0x12
   10394:	b.eq	103a4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x554>  // b.none
   10398:	cmp	w1, #0x18
   1039c:	b.ne	10754 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x904>  // b.any
   103a0:	mov	x24, #0x0                   	// #0
   103a4:	ldr	w3, [sp, #280]
   103a8:	ldr	w5, [sp, #284]
   103ac:	cmp	w3, w5
   103b0:	b.cs	105e0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x790>  // b.hs, b.nlast
   103b4:	ldr	x6, [sp, #272]
   103b8:	ubfiz	x2, x3, #4, #32
   103bc:	mov	w1, w3
   103c0:	add	x0, x6, x2
   103c4:	add	x1, x1, #0x1
   103c8:	str	x27, [x6, x2]
   103cc:	cmp	x1, w5, uxtw
   103d0:	str	x24, [x0, #8]
   103d4:	b.hi	108b8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa68>  // b.pmore
   103d8:	add	w3, w3, #0x1
   103dc:	str	w3, [sp, #280]
   103e0:	cbz	w3, 10898 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa48>
   103e4:	add	x23, x23, #0x1
   103e8:	cmp	w19, w23
   103ec:	b.ne	10360 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x510>  // b.any
   103f0:	ldp	x21, x22, [sp, #32]
   103f4:	ldp	x23, x24, [sp, #48]
   103f8:	mov	w3, w3
   103fc:	ldr	x0, [x28, #32]
   10400:	mov	x1, #0x0                   	// #0
   10404:	ldr	x2, [sp, #272]
   10408:	bl	62a8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
   1040c:	mov	x19, x0
   10410:	ldr	x0, [sp, #272]
   10414:	add	x20, x20, #0x10
   10418:	cmp	x0, x20
   1041c:	b.eq	1074c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8fc>  // b.none
   10420:	bl	0 <free>
   10424:	ldp	x25, x26, [sp, #64]
   10428:	b	100d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x284>
   1042c:	cmp	w1, #0x12
   10430:	b.ne	1091c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xacc>  // b.any
   10434:	mov	x22, x19
   10438:	mov	x19, #0x0                   	// #0
   1043c:	b	10110 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2c0>
   10440:	mov	x26, x24
   10444:	mov	x23, #0x0                   	// #0
   10448:	mov	x24, #0x0                   	// #0
   1044c:	b	10134 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2e4>
   10450:	cmp	w1, #0x12
   10454:	b.ne	10924 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xad4>  // b.any
   10458:	mov	x23, x24
   1045c:	mov	x24, #0x0                   	// #0
   10460:	b	10134 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2e4>
   10464:	cmp	x0, #0x0
   10468:	cset	w19, ne  // ne = any
   1046c:	cmp	x26, #0x0
   10470:	csel	w19, w19, wzr, ne  // ne = any
   10474:	cbz	w19, 1050c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6bc>
   10478:	ldr	x1, [x0]
   1047c:	add	x21, sp, #0xc0
   10480:	mov	x8, x21
   10484:	add	x20, sp, #0x110
   10488:	ldr	x23, [x25, #24]
   1048c:	ldr	x1, [x1, #40]
   10490:	blr	x1
   10494:	ldr	x1, [x25]
   10498:	mov	x0, x25
   1049c:	mov	x8, x20
   104a0:	ldr	x1, [x1, #40]
   104a4:	blr	x1
   104a8:	ldr	x2, [sp, #200]
   104ac:	ldr	x0, [sp, #280]
   104b0:	cmp	x2, x0
   104b4:	b.eq	10570 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x720>  // b.none
   104b8:	ldr	x22, [sp, #272]
   104bc:	mov	w19, #0x0                   	// #0
   104c0:	add	x20, x20, #0x10
   104c4:	cmp	x22, x20
   104c8:	b.eq	104d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x684>  // b.none
   104cc:	mov	x0, x22
   104d0:	bl	0 <_ZdlPv>
   104d4:	ldr	x0, [sp, #192]
   104d8:	add	x21, x21, #0x10
   104dc:	cmp	x0, x21
   104e0:	b.eq	104e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x698>  // b.none
   104e4:	bl	0 <_ZdlPv>
   104e8:	cbz	w19, 104f0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6a0>
   104ec:	ldr	x23, [x26, #24]
   104f0:	mov	x0, x23
   104f4:	bl	6810 <_ZN4llvm7DefInit3getEPNS_6RecordE>
   104f8:	mov	x19, x0
   104fc:	ldp	x21, x22, [sp, #32]
   10500:	ldp	x23, x24, [sp, #48]
   10504:	ldp	x25, x26, [sp, #64]
   10508:	b	100d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x284>
   1050c:	ldp	x21, x22, [sp, #32]
   10510:	ldp	x23, x24, [sp, #48]
   10514:	ldp	x25, x26, [sp, #64]
   10518:	b	100d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x280>
   1051c:	cmp	w1, #0x18
   10520:	b.eq	100cc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x27c>  // b.none
   10524:	cbz	w0, 100cc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x27c>
   10528:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1052c:	add	x20, sp, #0x110
   10530:	mov	x26, #0x0                   	// #0
   10534:	ldr	d0, [x0]
   10538:	add	x0, x20, #0x10
   1053c:	str	x0, [sp, #272]
   10540:	str	d0, [sp, #280]
   10544:	cbnz	x25, 10344 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4f4>
   10548:	ldr	w19, [x26, #32]
   1054c:	b	10348 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4f8>
   10550:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10554:	add	x20, sp, #0x110
   10558:	ldr	d0, [x0]
   1055c:	add	x0, x20, #0x10
   10560:	str	x0, [sp, #272]
   10564:	str	d0, [sp, #280]
   10568:	ldr	w19, [x26, #32]
   1056c:	b	10348 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4f8>
   10570:	ldr	x22, [sp, #272]
   10574:	cbz	x2, 104c0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x670>
   10578:	ldr	x0, [sp, #192]
   1057c:	mov	x1, x22
   10580:	bl	0 <memcmp>
   10584:	cmp	w0, #0x0
   10588:	cset	w19, eq  // eq = none
   1058c:	b	104c0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x670>
   10590:	ldr	x19, [x28, #48]
   10594:	b	100d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x284>
   10598:	add	x0, x26, #0x10
   1059c:	stp	x0, xzr, [sp, #160]
   105a0:	strb	wzr, [sp, #176]
   105a4:	b	10194 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x344>
   105a8:	ldp	x21, x22, [sp, #32]
   105ac:	ldp	x25, x26, [sp, #64]
   105b0:	b	100d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x280>
   105b4:	stp	x21, x22, [sp, #32]
   105b8:	stp	x23, x24, [sp, #48]
   105bc:	bl	748 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
   105c0:	stp	x23, x24, [sp, #48]
   105c4:	bl	770 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
   105c8:	bl	2f78 <_ZN4llvm9UnsetInit3getEv>
   105cc:	mov	x27, x0
   105d0:	cbnz	x26, 10378 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x528>
   105d4:	bl	2f78 <_ZN4llvm9UnsetInit3getEv>
   105d8:	mov	x24, x0
   105dc:	b	10388 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x538>
   105e0:	mov	x0, x20
   105e4:	mov	x1, #0x0                   	// #0
   105e8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   105ec:	ldr	w3, [sp, #280]
   105f0:	ldr	w5, [sp, #284]
   105f4:	b	103b4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x564>
   105f8:	cmp	w1, #0x12
   105fc:	b.ne	1050c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6bc>  // b.any
   10600:	cmp	x22, #0x0
   10604:	ccmp	x23, #0x0, #0x4, ne  // ne = any
   10608:	b.eq	1050c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6bc>  // b.none
   1060c:	ldr	x1, [x25, #24]
   10610:	cbz	x1, 1076c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x91c>
   10614:	add	x21, sp, #0xc0
   10618:	mov	w3, #0x0                   	// #0
   1061c:	add	x4, x21, #0x10
   10620:	mov	x0, x21
   10624:	ldr	x2, [x25, #32]
   10628:	str	x4, [sp, #192]
   1062c:	add	x2, x1, x2
   10630:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10634:	add	x20, sp, #0x110
   10638:	mov	x19, #0x0                   	// #0
   1063c:	add	x24, x20, #0x10
   10640:	b	106f0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8a0>
   10644:	ldr	x2, [x22, #32]
   10648:	mov	w3, #0x0                   	// #0
   1064c:	mov	x0, x20
   10650:	str	x24, [sp, #272]
   10654:	add	x2, x1, x2
   10658:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1065c:	ldp	x1, x3, [sp, #272]
   10660:	mov	x2, x19
   10664:	mov	x0, x21
   10668:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm>
   1066c:	ldr	x1, [sp, #272]
   10670:	mov	x19, x0
   10674:	cmp	x1, x24
   10678:	b.eq	10684 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x834>  // b.none
   1067c:	mov	x0, x1
   10680:	bl	0 <_ZdlPv>
   10684:	cmn	x19, #0x1
   10688:	b.eq	10720 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8d0>  // b.none
   1068c:	ldr	x1, [x23, #24]
   10690:	ldr	x25, [x22, #32]
   10694:	cbz	x1, 1070c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8bc>
   10698:	ldr	x2, [x23, #32]
   1069c:	mov	w3, #0x0                   	// #0
   106a0:	mov	x0, x20
   106a4:	str	x24, [sp, #272]
   106a8:	add	x2, x1, x2
   106ac:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   106b0:	ldp	x3, x4, [sp, #272]
   106b4:	ldr	x2, [sp, #200]
   106b8:	cmp	x19, x2
   106bc:	b.hi	10900 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xab0>  // b.pmore
   106c0:	sub	x2, x2, x19
   106c4:	mov	x1, x19
   106c8:	cmp	x2, x25
   106cc:	mov	x0, x21
   106d0:	csel	x2, x2, x25, ls  // ls = plast
   106d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
   106d8:	ldr	x0, [sp, #272]
   106dc:	cmp	x0, x24
   106e0:	b.eq	106e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x898>  // b.none
   106e4:	bl	0 <_ZdlPv>
   106e8:	ldr	x0, [x23, #32]
   106ec:	add	x19, x19, x0
   106f0:	ldr	x1, [x22, #24]
   106f4:	cbnz	x1, 10644 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7f4>
   106f8:	mov	x1, x24
   106fc:	mov	x3, #0x0                   	// #0
   10700:	stp	x24, xzr, [sp, #272]
   10704:	strb	wzr, [sp, #288]
   10708:	b	10660 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x810>
   1070c:	mov	x3, x24
   10710:	mov	x4, #0x0                   	// #0
   10714:	stp	x24, xzr, [sp, #272]
   10718:	strb	wzr, [sp, #288]
   1071c:	b	106b4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x864>
   10720:	ldp	x0, x1, [sp, #192]
   10724:	add	x21, x21, #0x10
   10728:	bl	ab10 <_ZN4llvm10StringInit3getENS_9StringRefE>
   1072c:	mov	x19, x0
   10730:	ldr	x1, [sp, #192]
   10734:	cmp	x1, x21
   10738:	b.ne	10280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x430>  // b.any
   1073c:	ldp	x21, x22, [sp, #32]
   10740:	ldp	x23, x24, [sp, #48]
   10744:	ldp	x25, x26, [sp, #64]
   10748:	b	100d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x284>
   1074c:	ldp	x25, x26, [sp, #64]
   10750:	b	100d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x284>
   10754:	mov	x19, x28
   10758:	ldp	x21, x22, [sp, #32]
   1075c:	ldp	x23, x24, [sp, #48]
   10760:	b	10410 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5c0>
   10764:	ldp	x23, x24, [sp, #48]
   10768:	b	102f4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4a4>
   1076c:	add	x21, sp, #0xc0
   10770:	strb	wzr, [sp, #208]
   10774:	add	x0, x21, #0x10
   10778:	stp	x0, xzr, [sp, #192]
   1077c:	b	10634 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7e4>
   10780:	mov	x1, x0
   10784:	mov	x2, x23
   10788:	mov	x0, x21
   1078c:	mov	x3, #0x8                   	// #8
   10790:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10794:	ldr	x0, [sp, #192]
   10798:	ldr	w1, [sp, #200]
   1079c:	add	x0, x0, x1, lsl #3
   107a0:	b	fef4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa4>
   107a4:	add	x19, x20, #0x10
   107a8:	mov	x2, #0x0                   	// #0
   107ac:	stp	x19, xzr, [sp, #272]
   107b0:	strb	wzr, [sp, #288]
   107b4:	b	10224 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3d4>
   107b8:	add	x0, x21, #0x10
   107bc:	stp	x0, xzr, [sp, #192]
   107c0:	strb	wzr, [sp, #208]
   107c4:	b	101dc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x38c>
   107c8:	cbz	x2, 10234 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3e4>
   107cc:	ldr	x0, [sp, #192]
   107d0:	mov	x1, x19
   107d4:	bl	0 <memcmp>
   107d8:	cmp	w0, #0x0
   107dc:	cset	w22, eq  // eq = none
   107e0:	b	10234 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3e4>
   107e4:	mov	x0, x24
   107e8:	bl	3bf0 <_ZNK4llvm7VarInit7getNameEv>
   107ec:	mov	x2, x1
   107f0:	mov	x1, x0
   107f4:	cbz	x0, 10860 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa10>
   107f8:	add	x5, x20, #0x10
   107fc:	add	x2, x0, x2
   10800:	mov	w3, #0x0                   	// #0
   10804:	mov	x0, x20
   10808:	str	x5, [sp, #272]
   1080c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10810:	mov	x1, x20
   10814:	mov	x0, x26
   10818:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
   1081c:	add	x20, x20, #0x10
   10820:	ldr	x0, [sp, #272]
   10824:	cmp	x0, x20
   10828:	b.eq	10260 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x410>  // b.none
   1082c:	bl	0 <_ZdlPv>
   10830:	b	10260 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x410>
   10834:	add	x20, sp, #0x110
   10838:	mov	x0, x25
   1083c:	mov	x8, x20
   10840:	blr	x1
   10844:	ldp	x19, x2, [sp, #272]
   10848:	b	10224 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3d4>
   1084c:	add	x21, sp, #0xc0
   10850:	mov	x0, x19
   10854:	mov	x8, x21
   10858:	blr	x1
   1085c:	b	101dc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x38c>
   10860:	add	x0, x20, #0x10
   10864:	stp	x0, xzr, [sp, #272]
   10868:	strb	wzr, [sp, #288]
   1086c:	b	10810 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9c0>
   10870:	ldr	w3, [sp, #280]
   10874:	b	103f8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5a8>
   10878:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1087c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10880:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10884:	add	x3, x3, #0x0
   10888:	add	x1, x1, #0x0
   1088c:	add	x0, x0, #0x0
   10890:	mov	w2, #0x2af                 	// #687
   10894:	bl	0 <__assert_fail>
   10898:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1089c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108a0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108a4:	add	x3, x3, #0x0
   108a8:	add	x1, x1, #0x0
   108ac:	add	x0, x0, #0x0
   108b0:	mov	w2, #0xa7                  	// #167
   108b4:	bl	0 <__assert_fail>
   108b8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108bc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108c0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108c4:	add	x3, x3, #0x0
   108c8:	add	x1, x1, #0x0
   108cc:	add	x0, x0, #0x0
   108d0:	mov	w2, #0x43                  	// #67
   108d4:	bl	0 <__assert_fail>
   108d8:	bl	680 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
   108dc:	bl	6a8 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
   108e0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108e4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108e8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   108ec:	add	x3, x3, #0x0
   108f0:	add	x1, x1, #0x0
   108f4:	add	x0, x0, #0x0
   108f8:	mov	w2, #0x22f                 	// #559
   108fc:	bl	0 <__assert_fail>
   10900:	mov	x3, x2
   10904:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10908:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1090c:	mov	x2, x19
   10910:	add	x1, x1, #0x0
   10914:	add	x0, x0, #0x0
   10918:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>
   1091c:	mov	x19, #0x0                   	// #0
   10920:	b	10110 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2c0>
   10924:	mov	x24, #0x0                   	// #0
   10928:	b	10134 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2e4>
   1092c:	nop

0000000000010930 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE>:
   10930:	stp	x29, x30, [sp, #-208]!
   10934:	mov	x29, sp
   10938:	stp	x19, x20, [sp, #16]
   1093c:	mov	x19, x0
   10940:	mov	x20, x1
   10944:	ldr	x0, [x0, #32]
   10948:	stp	x21, x22, [sp, #32]
   1094c:	ldr	x2, [x0]
   10950:	ldr	x2, [x2, #96]
   10954:	blr	x2
   10958:	mov	x21, x0
   1095c:	ldrb	w1, [x19, #9]
   10960:	cmp	w1, #0x2
   10964:	b.eq	109fc <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0xcc>  // b.none
   10968:	ldr	x0, [x19, #40]
   1096c:	mov	x1, x20
   10970:	ldr	x2, [x0]
   10974:	ldr	x2, [x2, #96]
   10978:	blr	x2
   1097c:	mov	x22, x0
   10980:	ldrb	w1, [x19, #9]
   10984:	cmp	w1, #0x1
   10988:	b.eq	10a4c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x11c>  // b.none
   1098c:	ldr	x0, [x19, #48]
   10990:	mov	x1, x20
   10994:	ldr	x2, [x0]
   10998:	ldr	x2, [x2, #96]
   1099c:	blr	x2
   109a0:	mov	x3, x0
   109a4:	ldr	x0, [x19, #32]
   109a8:	cmp	x0, x21
   109ac:	b.eq	109dc <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0xac>  // b.none
   109b0:	ldrb	w0, [x19, #9]
   109b4:	mov	x1, x21
   109b8:	ldr	x4, [x19, #16]
   109bc:	mov	x2, x22
   109c0:	bl	8b60 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
   109c4:	ldr	x1, [x20, #8]
   109c8:	bl	fe50 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
   109cc:	ldp	x19, x20, [sp, #16]
   109d0:	ldp	x21, x22, [sp, #32]
   109d4:	ldp	x29, x30, [sp], #208
   109d8:	ret
   109dc:	ldr	x0, [x19, #40]
   109e0:	cmp	x0, x22
   109e4:	b.ne	109b0 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x80>  // b.any
   109e8:	ldr	x1, [x19, #48]
   109ec:	mov	x0, x19
   109f0:	cmp	x1, x3
   109f4:	b.ne	109b0 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x80>  // b.any
   109f8:	b	109cc <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x9c>
   109fc:	ldr	x1, [x19, #32]
   10a00:	cmp	x1, x0
   10a04:	b.eq	10968 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x38>  // b.none
   10a08:	ldr	x2, [x0]
   10a0c:	adrp	x1, 3f8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x58>
   10a10:	ldr	x1, [x1]
   10a14:	ldr	x2, [x2, #64]
   10a18:	blr	x2
   10a1c:	cbz	x0, 10968 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x38>
   10a20:	ldrb	w1, [x0, #8]
   10a24:	cmp	w1, #0x8
   10a28:	b.ne	10968 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x38>  // b.any
   10a2c:	ldr	x0, [x0, #24]
   10a30:	cbz	x0, 10ad0 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x1a0>
   10a34:	ldr	x0, [x19, #40]
   10a38:	mov	x1, x20
   10a3c:	ldr	x2, [x0]
   10a40:	ldr	x2, [x2, #96]
   10a44:	blr	x2
   10a48:	b	109cc <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x9c>
   10a4c:	stp	x23, x24, [sp, #48]
   10a50:	adrp	x23, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10a54:	ldrb	w3, [x20, #16]
   10a58:	ldr	x4, [x20, #8]
   10a5c:	add	x8, sp, #0x68
   10a60:	ldr	x23, [x23]
   10a64:	add	x0, sp, #0xb0
   10a68:	add	x2, sp, #0x58
   10a6c:	add	x1, sp, #0x60
   10a70:	add	x23, x23, #0x10
   10a74:	str	x21, [sp, #96]
   10a78:	stp	x23, x4, [sp, #144]
   10a7c:	add	x24, sp, #0x90
   10a80:	strb	w3, [sp, #160]
   10a84:	stp	x20, xzr, [sp, #168]
   10a88:	stp	xzr, xzr, [sp, #184]
   10a8c:	str	wzr, [sp, #200]
   10a90:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10a94:	ldr	x0, [x19, #48]
   10a98:	mov	x1, x24
   10a9c:	ldr	x2, [x0]
   10aa0:	ldr	x2, [x2, #96]
   10aa4:	blr	x2
   10aa8:	mov	x3, x0
   10aac:	ldr	x0, [sp, #184]
   10ab0:	str	x3, [sp, #72]
   10ab4:	ldr	w1, [sp, #200]
   10ab8:	str	x23, [sp, #144]
   10abc:	lsl	x1, x1, #3
   10ac0:	bl	0 <_ZdlPvm>
   10ac4:	ldp	x23, x24, [sp, #48]
   10ac8:	ldr	x3, [sp, #72]
   10acc:	b	109a4 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x74>
   10ad0:	ldr	x0, [x19, #48]
   10ad4:	mov	x1, x20
   10ad8:	ldr	x2, [x0]
   10adc:	ldr	x2, [x2, #96]
   10ae0:	blr	x2
   10ae4:	b	109cc <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x9c>

0000000000010ae8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>:
   10ae8:	stp	x29, x30, [sp, #-96]!
   10aec:	mov	x29, sp
   10af0:	stp	x21, x22, [sp, #32]
   10af4:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10af8:	stp	x23, x24, [sp, #48]
   10afc:	add	x23, x21, #0x0
   10b00:	add	x22, x23, #0x348
   10b04:	stp	x19, x20, [sp, #16]
   10b08:	mov	x19, x0
   10b0c:	mov	w20, w1
   10b10:	ldarb	w0, [x22]
   10b14:	tbz	w0, #0, 10be0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xf8>
   10b18:	add	x0, x21, #0x0
   10b1c:	str	x19, [sp, #80]
   10b20:	str	w20, [sp, #88]
   10b24:	ldr	w3, [x0, #872]
   10b28:	cbz	w3, 10c38 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x150>
   10b2c:	cmn	x19, #0x8
   10b30:	b.eq	10c90 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1a8>  // b.none
   10b34:	cmn	x19, #0x10
   10b38:	ccmn	w20, #0x2, #0x0, eq  // eq = none
   10b3c:	b.eq	10c98 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1b0>  // b.none
   10b40:	mov	w2, #0x25                  	// #37
   10b44:	lsr	w0, w19, #9
   10b48:	eor	w0, w0, w19, lsr #4
   10b4c:	add	x1, x21, #0x0
   10b50:	mul	w2, w20, w2
   10b54:	sub	w5, w3, #0x1
   10b58:	mov	w7, #0x1                   	// #1
   10b5c:	mov	x22, #0x0                   	// #0
   10b60:	ldr	x1, [x1, #856]
   10b64:	orr	x0, x2, x0, lsl #32
   10b68:	sub	x0, x0, #0x1
   10b6c:	mov	w6, #0x18                  	// #24
   10b70:	sub	x2, x0, x2, lsl #32
   10b74:	eor	x2, x2, x2, lsr #22
   10b78:	sub	x0, x2, #0x1
   10b7c:	sub	x2, x0, x2, lsl #13
   10b80:	eor	x2, x2, x2, lsr #8
   10b84:	add	x2, x2, x2, lsl #3
   10b88:	eor	x2, x2, x2, lsr #15
   10b8c:	sub	x0, x2, #0x1
   10b90:	sub	x2, x0, x2, lsl #27
   10b94:	eor	x2, x2, x2, lsr #31
   10b98:	and	w2, w5, w2
   10b9c:	umull	x0, w2, w6
   10ba0:	add	x4, x1, x0
   10ba4:	ldr	x0, [x1, x0]
   10ba8:	cmp	x19, x0
   10bac:	b.eq	10cb8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1d0>  // b.none
   10bb0:	cmn	x0, #0x8
   10bb4:	b.eq	10ce0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1f8>  // b.none
   10bb8:	cmn	x0, #0x10
   10bbc:	b.ne	10bd0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xe8>  // b.any
   10bc0:	ldr	w0, [x4, #8]
   10bc4:	cmp	x22, #0x0
   10bc8:	ccmn	w0, #0x2, #0x0, eq  // eq = none
   10bcc:	csel	x22, x22, x4, ne  // ne = any
   10bd0:	add	w2, w2, w7
   10bd4:	add	w7, w7, #0x1
   10bd8:	and	w2, w5, w2
   10bdc:	b	10b9c <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xb4>
   10be0:	mov	x0, x22
   10be4:	bl	0 <__cxa_guard_acquire>
   10be8:	cbz	w0, 10b18 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x30>
   10bec:	str	xzr, [x23, #848]
   10bf0:	mov	x0, x22
   10bf4:	str	xzr, [x23, #856]
   10bf8:	add	x24, x23, #0x350
   10bfc:	str	xzr, [x23, #864]
   10c00:	str	wzr, [x23, #872]
   10c04:	bl	0 <__cxa_guard_release>
   10c08:	mov	x1, x24
   10c0c:	adrp	x2, 0 <__dso_handle>
   10c10:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c14:	add	x2, x2, #0x0
   10c18:	add	x0, x0, #0x0
   10c1c:	bl	0 <__cxa_atexit>
   10c20:	add	x0, x21, #0x0
   10c24:	str	x19, [sp, #80]
   10c28:	str	w20, [sp, #88]
   10c2c:	ldr	w3, [x0, #872]
   10c30:	cbnz	w3, 10b2c <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x44>
   10c34:	nop
   10c38:	ldr	x2, [x0, #848]
   10c3c:	mov	w1, #0x0                   	// #0
   10c40:	add	x2, x2, #0x1
   10c44:	str	x2, [x0, #848]
   10c48:	add	x22, x21, #0x0
   10c4c:	add	x22, x22, #0x350
   10c50:	mov	x0, x22
   10c54:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c58:	mov	x0, x22
   10c5c:	add	x2, sp, #0x48
   10c60:	add	x1, sp, #0x50
   10c64:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c68:	ldr	x22, [sp, #72]
   10c6c:	cbnz	x22, 10d34 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x24c>
   10c70:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c74:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c78:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c7c:	add	x3, x3, #0x0
   10c80:	add	x1, x1, #0x0
   10c84:	add	x0, x0, #0x0
   10c88:	mov	w2, #0x22f                 	// #559
   10c8c:	bl	0 <__assert_fail>
   10c90:	cmn	w20, #0x1
   10c94:	b.ne	10b40 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x58>  // b.any
   10c98:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10c9c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10ca0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10ca4:	add	x3, x3, #0x0
   10ca8:	add	x1, x1, #0x0
   10cac:	add	x0, x0, #0x0
   10cb0:	mov	w2, #0x250                 	// #592
   10cb4:	bl	0 <__assert_fail>
   10cb8:	ldr	w8, [x4, #8]
   10cbc:	cmp	w20, w8
   10cc0:	b.ne	10bb0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xc8>  // b.any
   10cc4:	ldr	x0, [x4, #16]
   10cc8:	cbz	x0, 10e34 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x34c>
   10ccc:	ldp	x19, x20, [sp, #16]
   10cd0:	ldp	x21, x22, [sp, #32]
   10cd4:	ldp	x23, x24, [sp, #48]
   10cd8:	ldp	x29, x30, [sp], #96
   10cdc:	ret
   10ce0:	ldr	w0, [x4, #8]
   10ce4:	cmn	w0, #0x1
   10ce8:	b.ne	10bd0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xe8>  // b.any
   10cec:	add	x2, x21, #0x0
   10cf0:	cmp	x22, #0x0
   10cf4:	csel	x22, x22, x4, ne  // ne = any
   10cf8:	lsl	w1, w3, #1
   10cfc:	add	w5, w1, w3
   10d00:	add	x23, x2, #0x350
   10d04:	ldr	x4, [x2, #848]
   10d08:	ldr	w0, [x23, #16]
   10d0c:	add	x4, x4, #0x1
   10d10:	str	x4, [x2, #848]
   10d14:	add	w0, w0, #0x1
   10d18:	cmp	w5, w0, lsl #2
   10d1c:	b.ls	10c48 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x160>  // b.plast
   10d20:	ldr	w1, [x23, #20]
   10d24:	sub	w1, w3, w1
   10d28:	sub	w1, w1, w0
   10d2c:	cmp	w1, w3, lsr #3
   10d30:	b.ls	10df0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x308>  // b.plast
   10d34:	add	x0, x21, #0x0
   10d38:	ldr	x2, [x22]
   10d3c:	ldr	w1, [x0, #864]
   10d40:	cmn	x2, #0x8
   10d44:	add	w1, w1, #0x1
   10d48:	str	w1, [x0, #864]
   10d4c:	b.eq	10de0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x2f8>  // b.none
   10d50:	add	x0, x21, #0x0
   10d54:	ldr	w1, [x0, #868]
   10d58:	sub	w1, w1, #0x1
   10d5c:	str	w1, [x0, #868]
   10d60:	ldr	w0, [sp, #88]
   10d64:	ldr	x1, [sp, #80]
   10d68:	str	x1, [x22]
   10d6c:	str	w0, [x22, #8]
   10d70:	str	xzr, [x22, #16]
   10d74:	add	x0, x21, #0x0
   10d78:	mov	w2, #0x4                   	// #4
   10d7c:	mov	x1, #0x28                  	// #40
   10d80:	add	x0, x0, #0xa0
   10d84:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10d88:	str	w20, [x0, #32]
   10d8c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10d90:	mov	w3, #0x15                  	// #21
   10d94:	adrp	x2, 428 <_ZNK4llvm10CondOpInit10isCompleteEv+0x88>
   10d98:	strh	w3, [x0, #8]
   10d9c:	ldr	x1, [x1]
   10da0:	ldr	x3, [x19, #16]
   10da4:	add	x1, x1, #0x10
   10da8:	ldr	x2, [x2]
   10dac:	str	x1, [x0]
   10db0:	stp	x2, x19, [x0, #16]
   10db4:	cbz	x3, 10e14 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x32c>
   10db8:	ldr	w1, [x3, #8]
   10dbc:	cmp	w1, #0x3
   10dc0:	b.eq	10dd8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x2f0>  // b.none
   10dc4:	cmp	w1, #0x1
   10dc8:	b.ne	10e14 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x32c>  // b.any
   10dcc:	ldr	w1, [x3, #24]
   10dd0:	cmp	w20, w1
   10dd4:	b.cs	10e14 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x32c>  // b.hs, b.nlast
   10dd8:	str	x0, [x22, #16]
   10ddc:	b	10ccc <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x1e4>
   10de0:	ldr	w0, [x22, #8]
   10de4:	cmn	w0, #0x1
   10de8:	b.ne	10d50 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x268>  // b.any
   10dec:	b	10d60 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x278>
   10df0:	mov	w1, w3
   10df4:	mov	x0, x23
   10df8:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10dfc:	mov	x0, x23
   10e00:	add	x2, sp, #0x48
   10e04:	add	x1, sp, #0x50
   10e08:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10e0c:	ldr	x22, [sp, #72]
   10e10:	b	10c6c <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x184>
   10e14:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10e18:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10e1c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10e20:	add	x3, x3, #0x0
   10e24:	add	x1, x1, #0x0
   10e28:	add	x0, x0, #0x0
   10e2c:	mov	w2, #0x457                 	// #1111
   10e30:	bl	0 <__assert_fail>
   10e34:	mov	x22, x4
   10e38:	b	10d74 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x28c>
   10e3c:	nop

0000000000010e40 <_ZNK4llvm6OpInit6getBitEj>:
   10e40:	adrp	x2, 428 <_ZNK4llvm10CondOpInit10isCompleteEv+0x88>
   10e44:	ldr	x3, [x0, #16]
   10e48:	ldr	x2, [x2]
   10e4c:	cmp	x3, x2
   10e50:	b.eq	10e58 <_ZNK4llvm6OpInit6getBitEj+0x18>  // b.none
   10e54:	b	10ae8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10e58:	ret
   10e5c:	nop

0000000000010e60 <_ZNK4llvm10FoldOpInit6getBitEj>:
   10e60:	b	10ae8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10e64:	nop

0000000000010e68 <_ZNK4llvm9IsAOpInit6getBitEj>:
   10e68:	b	10ae8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10e6c:	nop

0000000000010e70 <_ZNK4llvm7VarInit6getBitEj>:
   10e70:	adrp	x2, 428 <_ZNK4llvm10CondOpInit10isCompleteEv+0x88>
   10e74:	ldr	x3, [x0, #16]
   10e78:	ldr	x2, [x2]
   10e7c:	cmp	x3, x2
   10e80:	b.eq	10e88 <_ZNK4llvm7VarInit6getBitEj+0x18>  // b.none
   10e84:	b	10ae8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10e88:	ret
   10e8c:	nop

0000000000010e90 <_ZNK4llvm18VarListElementInit6getBitEj>:
   10e90:	adrp	x2, 428 <_ZNK4llvm10CondOpInit10isCompleteEv+0x88>
   10e94:	ldr	x3, [x0, #16]
   10e98:	ldr	x2, [x2]
   10e9c:	cmp	x3, x2
   10ea0:	b.eq	10ea8 <_ZNK4llvm18VarListElementInit6getBitEj+0x18>  // b.none
   10ea4:	b	10ae8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10ea8:	ret
   10eac:	nop

0000000000010eb0 <_ZNK4llvm9FieldInit6getBitEj>:
   10eb0:	adrp	x2, 428 <_ZNK4llvm10CondOpInit10isCompleteEv+0x88>
   10eb4:	ldr	x3, [x0, #16]
   10eb8:	ldr	x2, [x2]
   10ebc:	cmp	x3, x2
   10ec0:	b.eq	10ec8 <_ZNK4llvm9FieldInit6getBitEj+0x18>  // b.none
   10ec4:	b	10ae8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10ec8:	ret
   10ecc:	nop

0000000000010ed0 <_ZNK4llvm10CondOpInit6getBitEj>:
   10ed0:	b	10ae8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10ed4:	nop

0000000000010ed8 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
   10ed8:	stp	x29, x30, [sp, #-224]!
   10edc:	mov	x29, sp
   10ee0:	ldr	x3, [x0, #16]
   10ee4:	cbz	x3, 11068 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x190>
   10ee8:	stp	x21, x22, [sp, #32]
   10eec:	mov	x21, x0
   10ef0:	ldr	w0, [x3, #8]
   10ef4:	mov	x22, #0x0                   	// #0
   10ef8:	cmp	w0, #0x1
   10efc:	b.eq	10f10 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x38>  // b.none
   10f00:	mov	x0, x22
   10f04:	ldp	x21, x22, [sp, #32]
   10f08:	ldp	x29, x30, [sp], #224
   10f0c:	ret
   10f10:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   10f14:	stp	x23, x24, [sp, #48]
   10f18:	add	x23, sp, #0x50
   10f1c:	ldr	d0, [x0]
   10f20:	cmp	x2, #0x10
   10f24:	stp	x19, x20, [sp, #16]
   10f28:	mov	x19, x1
   10f2c:	add	x1, x23, #0x10
   10f30:	str	x1, [sp, #80]
   10f34:	mov	x20, x2
   10f38:	str	d0, [sp, #88]
   10f3c:	ldr	w22, [x3, #24]
   10f40:	b.hi	11030 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x158>  // b.pmore
   10f44:	add	x20, x19, x20, lsl #2
   10f48:	cmp	x20, x19
   10f4c:	b.eq	11040 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x168>  // b.none
   10f50:	add	x24, x23, #0x10
   10f54:	str	x25, [sp, #64]
   10f58:	b	10f8c <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xb4>
   10f5c:	ldr	x0, [sp, #80]
   10f60:	str	x25, [x0, w1, uxtw #3]
   10f64:	ldp	w1, w0, [sp, #88]
   10f68:	mov	w2, w1
   10f6c:	add	x2, x2, #0x1
   10f70:	cmp	x2, x0
   10f74:	b.hi	11048 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x170>  // b.pmore
   10f78:	add	w1, w1, #0x1
   10f7c:	str	w1, [sp, #88]
   10f80:	add	x19, x19, #0x4
   10f84:	cmp	x20, x19
   10f88:	b.eq	11018 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x140>  // b.none
   10f8c:	ldr	w1, [x19]
   10f90:	cmp	w1, w22
   10f94:	b.cs	10fcc <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf4>  // b.hs, b.nlast
   10f98:	mov	x0, x21
   10f9c:	bl	10ae8 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
   10fa0:	mov	x25, x0
   10fa4:	ldp	w1, w0, [sp, #88]
   10fa8:	cmp	w1, w0
   10fac:	b.cc	10f5c <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x84>  // b.lo, b.ul, b.last
   10fb0:	mov	x1, x24
   10fb4:	mov	x0, x23
   10fb8:	mov	x3, #0x8                   	// #8
   10fbc:	mov	x2, #0x0                   	// #0
   10fc0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10fc4:	ldr	w1, [sp, #88]
   10fc8:	b	10f5c <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x84>
   10fcc:	ldr	x25, [sp, #64]
   10fd0:	mov	x22, #0x0                   	// #0
   10fd4:	ldr	x0, [sp, #80]
   10fd8:	add	x23, x23, #0x10
   10fdc:	cmp	x0, x23
   10fe0:	b.eq	11000 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x128>  // b.none
   10fe4:	bl	0 <free>
   10fe8:	mov	x0, x22
   10fec:	ldp	x19, x20, [sp, #16]
   10ff0:	ldp	x21, x22, [sp, #32]
   10ff4:	ldp	x23, x24, [sp, #48]
   10ff8:	ldp	x29, x30, [sp], #224
   10ffc:	ret
   11000:	mov	x0, x22
   11004:	ldp	x19, x20, [sp, #16]
   11008:	ldp	x21, x22, [sp, #32]
   1100c:	ldp	x23, x24, [sp, #48]
   11010:	ldp	x29, x30, [sp], #224
   11014:	ret
   11018:	ldr	x25, [sp, #64]
   1101c:	mov	w1, w1
   11020:	ldr	x0, [sp, #80]
   11024:	bl	73c8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
   11028:	mov	x22, x0
   1102c:	b	10fd4 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xfc>
   11030:	mov	x0, x23
   11034:	mov	x3, #0x8                   	// #8
   11038:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1103c:	b	10f44 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x6c>
   11040:	ldr	w1, [sp, #88]
   11044:	b	1101c <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x144>
   11048:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1104c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11050:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11054:	add	x3, x3, #0x0
   11058:	add	x1, x1, #0x0
   1105c:	add	x0, x0, #0x0
   11060:	mov	w2, #0x43                  	// #67
   11064:	bl	0 <__assert_fail>
   11068:	stp	x19, x20, [sp, #16]
   1106c:	stp	x21, x22, [sp, #32]
   11070:	stp	x23, x24, [sp, #48]
   11074:	str	x25, [sp, #64]
   11078:	bl	4e8 <_ZN4llvm13isa_impl_wrapINS_9BitsRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
   1107c:	nop

0000000000011080 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>:
   11080:	stp	x29, x30, [sp, #-96]!
   11084:	mov	x29, sp
   11088:	stp	x21, x22, [sp, #32]
   1108c:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11090:	stp	x23, x24, [sp, #48]
   11094:	add	x23, x21, #0x0
   11098:	add	x22, x23, #0x370
   1109c:	stp	x19, x20, [sp, #16]
   110a0:	mov	x19, x0
   110a4:	mov	w20, w1
   110a8:	ldarb	w0, [x22]
   110ac:	tbz	w0, #0, 11178 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xf8>
   110b0:	add	x0, x21, #0x0
   110b4:	str	x19, [sp, #80]
   110b8:	str	w20, [sp, #88]
   110bc:	ldr	w3, [x0, #912]
   110c0:	cbz	w3, 111d0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x150>
   110c4:	cmn	x19, #0x8
   110c8:	b.eq	11228 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1a8>  // b.none
   110cc:	cmn	x19, #0x10
   110d0:	ccmn	w20, #0x2, #0x0, eq  // eq = none
   110d4:	b.eq	11230 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1b0>  // b.none
   110d8:	mov	w2, #0x25                  	// #37
   110dc:	lsr	w0, w19, #9
   110e0:	eor	w0, w0, w19, lsr #4
   110e4:	add	x1, x21, #0x0
   110e8:	mul	w2, w20, w2
   110ec:	sub	w5, w3, #0x1
   110f0:	mov	w7, #0x1                   	// #1
   110f4:	mov	x22, #0x0                   	// #0
   110f8:	ldr	x1, [x1, #896]
   110fc:	orr	x0, x2, x0, lsl #32
   11100:	sub	x0, x0, #0x1
   11104:	mov	w6, #0x18                  	// #24
   11108:	sub	x2, x0, x2, lsl #32
   1110c:	eor	x2, x2, x2, lsr #22
   11110:	sub	x0, x2, #0x1
   11114:	sub	x2, x0, x2, lsl #13
   11118:	eor	x2, x2, x2, lsr #8
   1111c:	add	x2, x2, x2, lsl #3
   11120:	eor	x2, x2, x2, lsr #15
   11124:	sub	x0, x2, #0x1
   11128:	sub	x2, x0, x2, lsl #27
   1112c:	eor	x2, x2, x2, lsr #31
   11130:	and	w2, w5, w2
   11134:	umull	x0, w2, w6
   11138:	add	x4, x1, x0
   1113c:	ldr	x0, [x1, x0]
   11140:	cmp	x19, x0
   11144:	b.eq	11250 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1d0>  // b.none
   11148:	cmn	x0, #0x8
   1114c:	b.eq	11278 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1f8>  // b.none
   11150:	cmn	x0, #0x10
   11154:	b.ne	11168 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xe8>  // b.any
   11158:	ldr	w0, [x4, #8]
   1115c:	cmp	x22, #0x0
   11160:	ccmn	w0, #0x2, #0x0, eq  // eq = none
   11164:	csel	x22, x22, x4, ne  // ne = any
   11168:	add	w2, w2, w7
   1116c:	add	w7, w7, #0x1
   11170:	and	w2, w5, w2
   11174:	b	11134 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xb4>
   11178:	mov	x0, x22
   1117c:	bl	0 <__cxa_guard_acquire>
   11180:	cbz	w0, 110b0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x30>
   11184:	str	xzr, [x23, #888]
   11188:	mov	x0, x22
   1118c:	str	xzr, [x23, #896]
   11190:	add	x24, x23, #0x378
   11194:	str	xzr, [x23, #904]
   11198:	str	wzr, [x23, #912]
   1119c:	bl	0 <__cxa_guard_release>
   111a0:	mov	x1, x24
   111a4:	adrp	x2, 0 <__dso_handle>
   111a8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   111ac:	add	x2, x2, #0x0
   111b0:	add	x0, x0, #0x0
   111b4:	bl	0 <__cxa_atexit>
   111b8:	add	x0, x21, #0x0
   111bc:	str	x19, [sp, #80]
   111c0:	str	w20, [sp, #88]
   111c4:	ldr	w3, [x0, #912]
   111c8:	cbnz	w3, 110c4 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x44>
   111cc:	nop
   111d0:	ldr	x2, [x0, #888]
   111d4:	mov	w1, #0x0                   	// #0
   111d8:	add	x2, x2, #0x1
   111dc:	str	x2, [x0, #888]
   111e0:	add	x22, x21, #0x0
   111e4:	add	x22, x22, #0x378
   111e8:	mov	x0, x22
   111ec:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   111f0:	mov	x0, x22
   111f4:	add	x2, sp, #0x48
   111f8:	add	x1, sp, #0x50
   111fc:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11200:	ldr	x22, [sp, #72]
   11204:	cbnz	x22, 112cc <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x24c>
   11208:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1120c:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11210:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11214:	add	x3, x3, #0x0
   11218:	add	x1, x1, #0x0
   1121c:	add	x0, x0, #0x0
   11220:	mov	w2, #0x22f                 	// #559
   11224:	bl	0 <__assert_fail>
   11228:	cmn	w20, #0x1
   1122c:	b.ne	110d8 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x58>  // b.any
   11230:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11234:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11238:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1123c:	add	x3, x3, #0x0
   11240:	add	x1, x1, #0x0
   11244:	add	x0, x0, #0x0
   11248:	mov	w2, #0x250                 	// #592
   1124c:	bl	0 <__assert_fail>
   11250:	ldr	w8, [x4, #8]
   11254:	cmp	w20, w8
   11258:	b.ne	11148 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xc8>  // b.any
   1125c:	ldr	x0, [x4, #16]
   11260:	cbz	x0, 11394 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x314>
   11264:	ldp	x19, x20, [sp, #16]
   11268:	ldp	x21, x22, [sp, #32]
   1126c:	ldp	x23, x24, [sp, #48]
   11270:	ldp	x29, x30, [sp], #96
   11274:	ret
   11278:	ldr	w0, [x4, #8]
   1127c:	cmn	w0, #0x1
   11280:	b.ne	11168 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xe8>  // b.any
   11284:	add	x2, x21, #0x0
   11288:	cmp	x22, #0x0
   1128c:	csel	x22, x22, x4, ne  // ne = any
   11290:	lsl	w1, w3, #1
   11294:	add	w5, w1, w3
   11298:	add	x23, x2, #0x378
   1129c:	ldr	x4, [x2, #888]
   112a0:	ldr	w0, [x23, #16]
   112a4:	add	x4, x4, #0x1
   112a8:	str	x4, [x2, #888]
   112ac:	add	w0, w0, #0x1
   112b0:	cmp	w5, w0, lsl #2
   112b4:	b.ls	111e0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x160>  // b.plast
   112b8:	ldr	w1, [x23, #20]
   112bc:	sub	w1, w3, w1
   112c0:	sub	w1, w1, w0
   112c4:	cmp	w1, w3, lsr #3
   112c8:	b.ls	11370 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x2f0>  // b.plast
   112cc:	add	x0, x21, #0x0
   112d0:	ldr	x2, [x22]
   112d4:	ldr	w1, [x0, #904]
   112d8:	cmn	x2, #0x8
   112dc:	add	w1, w1, #0x1
   112e0:	str	w1, [x0, #904]
   112e4:	b.eq	11360 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x2e0>  // b.none
   112e8:	add	x0, x21, #0x0
   112ec:	ldr	w1, [x0, #908]
   112f0:	sub	w1, w1, #0x1
   112f4:	str	w1, [x0, #908]
   112f8:	ldr	w0, [sp, #88]
   112fc:	ldr	x1, [sp, #80]
   11300:	str	x1, [x22]
   11304:	str	w0, [x22, #8]
   11308:	str	xzr, [x22, #16]
   1130c:	add	x0, x21, #0x0
   11310:	mov	x1, #0x28                  	// #40
   11314:	add	x0, x0, #0xa0
   11318:	mov	w2, #0x4                   	// #4
   1131c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11320:	ldr	x1, [x19, #16]
   11324:	cbz	x1, 113bc <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x33c>
   11328:	ldr	w2, [x1, #8]
   1132c:	cmp	w2, #0x5
   11330:	b.ne	1139c <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x31c>  // b.any
   11334:	adrp	x2, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11338:	mov	w4, #0x14                  	// #20
   1133c:	ldr	x3, [x1, #24]
   11340:	strh	w4, [x0, #8]
   11344:	ldr	x1, [x2]
   11348:	stp	x3, x19, [x0, #16]
   1134c:	add	x1, x1, #0x10
   11350:	str	x1, [x0]
   11354:	str	w20, [x0, #32]
   11358:	str	x0, [x22, #16]
   1135c:	b	11264 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x1e4>
   11360:	ldr	w0, [x22, #8]
   11364:	cmn	w0, #0x1
   11368:	b.ne	112e8 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x268>  // b.any
   1136c:	b	112f8 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x278>
   11370:	mov	w1, w3
   11374:	mov	x0, x23
   11378:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1137c:	mov	x0, x23
   11380:	add	x2, sp, #0x48
   11384:	add	x1, sp, #0x50
   11388:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1138c:	ldr	x22, [sp, #72]
   11390:	b	11204 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x184>
   11394:	mov	x22, x4
   11398:	b	1130c <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x28c>
   1139c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113a0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113a4:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   113a8:	add	x3, x3, #0x0
   113ac:	add	x1, x1, #0x0
   113b0:	add	x0, x0, #0x0
   113b4:	mov	w2, #0x108                 	// #264
   113b8:	bl	0 <__assert_fail>
   113bc:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>

00000000000113c0 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE>:
   113c0:	stp	x29, x30, [sp, #-32]!
   113c4:	mov	x29, sp
   113c8:	str	x19, [sp, #16]
   113cc:	mov	x19, x0
   113d0:	ldr	x0, [x0, #24]
   113d4:	ldr	x2, [x0]
   113d8:	ldr	x2, [x2, #96]
   113dc:	blr	x2
   113e0:	cbz	x0, 11454 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x94>
   113e4:	ldrb	w1, [x0, #8]
   113e8:	mov	x2, x0
   113ec:	cmp	w1, #0x9
   113f0:	b.eq	1141c <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x5c>  // b.none
   113f4:	sub	w1, w1, #0x1
   113f8:	mov	x0, x19
   113fc:	ldr	x3, [x19, #24]
   11400:	and	w1, w1, #0xff
   11404:	cmp	w1, #0x16
   11408:	ccmp	x3, x2, #0x4, ls  // ls = plast
   1140c:	b.ne	11440 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x80>  // b.any
   11410:	ldr	x19, [sp, #16]
   11414:	ldp	x29, x30, [sp], #32
   11418:	ret
   1141c:	ldr	w3, [x0, #32]
   11420:	ldr	w0, [x19, #32]
   11424:	cmp	w3, w0
   11428:	b.ls	113f4 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x34>  // b.plast
   1142c:	add	x0, x2, w0, uxtw #3
   11430:	ldr	x19, [sp, #16]
   11434:	ldp	x29, x30, [sp], #32
   11438:	ldr	x0, [x0, #40]
   1143c:	ret
   11440:	ldr	w1, [x19, #32]
   11444:	mov	x0, x2
   11448:	ldr	x19, [sp, #16]
   1144c:	ldp	x29, x30, [sp], #32
   11450:	b	11080 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
   11454:	bl	748 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

0000000000011458 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE>:
   11458:	stp	x29, x30, [sp, #-160]!
   1145c:	mov	x29, sp
   11460:	stp	x23, x24, [sp, #48]
   11464:	ldr	x23, [x0, #16]
   11468:	stp	x19, x20, [sp, #16]
   1146c:	cbz	x23, 11600 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x1a8>
   11470:	mov	x19, x1
   11474:	ldr	w1, [x23, #8]
   11478:	mov	x24, #0x0                   	// #0
   1147c:	cmp	w1, #0x5
   11480:	b.eq	11498 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x40>  // b.none
   11484:	mov	x0, x24
   11488:	ldp	x19, x20, [sp, #16]
   1148c:	ldp	x23, x24, [sp, #48]
   11490:	ldp	x29, x30, [sp], #160
   11494:	ret
   11498:	mov	x20, x2
   1149c:	cmp	x2, #0x1
   114a0:	b.eq	115b8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x160>  // b.none
   114a4:	stp	x21, x22, [sp, #32]
   114a8:	mov	x21, x0
   114ac:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   114b0:	add	x22, sp, #0x50
   114b4:	cmp	x2, #0x8
   114b8:	ldr	d0, [x0]
   114bc:	add	x1, x22, #0x10
   114c0:	str	x1, [sp, #80]
   114c4:	str	d0, [sp, #88]
   114c8:	b.hi	115a8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x150>  // b.pmore
   114cc:	add	x20, x19, x20, lsl #2
   114d0:	cmp	x19, x20
   114d4:	b.eq	115d8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x180>  // b.none
   114d8:	add	x24, x22, #0x10
   114dc:	str	x25, [sp, #64]
   114e0:	ldr	w1, [x19]
   114e4:	mov	x0, x21
   114e8:	bl	11080 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
   114ec:	mov	x25, x0
   114f0:	ldp	w1, w0, [sp, #88]
   114f4:	cmp	w1, w0
   114f8:	b.cs	11574 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x11c>  // b.hs, b.nlast
   114fc:	ldr	x0, [sp, #80]
   11500:	str	x25, [x0, w1, uxtw #3]
   11504:	ldp	w1, w0, [sp, #88]
   11508:	mov	w2, w1
   1150c:	add	x2, x2, #0x1
   11510:	cmp	x2, x0
   11514:	b.hi	115e0 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x188>  // b.pmore
   11518:	add	w1, w1, #0x1
   1151c:	str	w1, [sp, #88]
   11520:	add	x19, x19, #0x4
   11524:	cmp	x20, x19
   11528:	b.ne	114e0 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x88>  // b.any
   1152c:	ldr	x25, [sp, #64]
   11530:	mov	w1, w1
   11534:	ldr	x2, [x23, #24]
   11538:	add	x22, x22, #0x10
   1153c:	ldr	x0, [sp, #80]
   11540:	bl	6b48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
   11544:	mov	x24, x0
   11548:	ldr	x1, [sp, #80]
   1154c:	cmp	x1, x22
   11550:	b.eq	11590 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x138>  // b.none
   11554:	mov	x0, x1
   11558:	bl	0 <free>
   1155c:	mov	x0, x24
   11560:	ldp	x19, x20, [sp, #16]
   11564:	ldp	x21, x22, [sp, #32]
   11568:	ldp	x23, x24, [sp, #48]
   1156c:	ldp	x29, x30, [sp], #160
   11570:	ret
   11574:	mov	x1, x24
   11578:	mov	x0, x22
   1157c:	mov	x3, #0x8                   	// #8
   11580:	mov	x2, #0x0                   	// #0
   11584:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11588:	ldr	w1, [sp, #88]
   1158c:	b	114fc <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xa4>
   11590:	mov	x0, x24
   11594:	ldp	x19, x20, [sp, #16]
   11598:	ldp	x21, x22, [sp, #32]
   1159c:	ldp	x23, x24, [sp, #48]
   115a0:	ldp	x29, x30, [sp], #160
   115a4:	ret
   115a8:	mov	x0, x22
   115ac:	mov	x3, #0x8                   	// #8
   115b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   115b4:	b	114cc <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x74>
   115b8:	ldr	w1, [x19]
   115bc:	bl	11080 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
   115c0:	mov	x24, x0
   115c4:	mov	x0, x24
   115c8:	ldp	x19, x20, [sp, #16]
   115cc:	ldp	x23, x24, [sp, #48]
   115d0:	ldp	x29, x30, [sp], #160
   115d4:	ret
   115d8:	ldr	w1, [sp, #88]
   115dc:	b	11530 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xd8>
   115e0:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   115e4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   115e8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   115ec:	add	x3, x3, #0x0
   115f0:	add	x1, x1, #0x0
   115f4:	add	x0, x0, #0x0
   115f8:	mov	w2, #0x43                  	// #67
   115fc:	bl	0 <__assert_fail>
   11600:	stp	x21, x22, [sp, #32]
   11604:	str	x25, [sp, #64]
   11608:	bl	510 <_ZN4llvm13isa_impl_wrapINS_9ListRecTyEPKNS_5RecTyES4_E4doitERKS4_.isra.0.part.0>
   1160c:	nop

0000000000011610 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>:
   11610:	stp	x29, x30, [sp, #-144]!
   11614:	mov	x29, sp
   11618:	stp	x21, x22, [sp, #32]
   1161c:	adrp	x21, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11620:	stp	x23, x24, [sp, #48]
   11624:	add	x23, x21, #0x0
   11628:	add	x22, x23, #0x398
   1162c:	stp	x19, x20, [sp, #16]
   11630:	mov	x19, x0
   11634:	mov	x20, x1
   11638:	ldarb	w0, [x22]
   1163c:	tbz	w0, #0, 11708 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xf8>
   11640:	add	x0, x21, #0x0
   11644:	stp	x19, x20, [sp, #64]
   11648:	ldr	w3, [x0, #952]
   1164c:	cbz	w3, 11758 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x148>
   11650:	cmn	x19, #0x8
   11654:	b.eq	117b0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1a0>  // b.none
   11658:	cmn	x19, #0x10
   1165c:	ccmn	x20, #0x10, #0x0, eq  // eq = none
   11660:	b.eq	117b8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1a8>  // b.none
   11664:	lsr	w2, w20, #9
   11668:	lsr	w0, w19, #9
   1166c:	eor	w0, w0, w19, lsr #4
   11670:	add	x1, x21, #0x0
   11674:	eor	w2, w2, w20, lsr #4
   11678:	sub	w8, w3, #0x1
   1167c:	orr	x0, x2, x0, lsl #32
   11680:	mov	w6, #0x1                   	// #1
   11684:	sub	x0, x0, #0x1
   11688:	mov	x23, #0x0                   	// #0
   1168c:	sub	x2, x0, x2, lsl #32
   11690:	mov	w5, #0x18                  	// #24
   11694:	ldr	x1, [x1, #936]
   11698:	eor	x2, x2, x2, lsr #22
   1169c:	sub	x0, x2, #0x1
   116a0:	sub	x2, x0, x2, lsl #13
   116a4:	eor	x2, x2, x2, lsr #8
   116a8:	add	x2, x2, x2, lsl #3
   116ac:	eor	x2, x2, x2, lsr #15
   116b0:	sub	x0, x2, #0x1
   116b4:	sub	x2, x0, x2, lsl #27
   116b8:	eor	x2, x2, x2, lsr #31
   116bc:	and	w2, w8, w2
   116c0:	umull	x0, w2, w5
   116c4:	add	x4, x1, x0
   116c8:	ldr	x0, [x1, x0]
   116cc:	cmp	x19, x0
   116d0:	b.eq	117d8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1c8>  // b.none
   116d4:	cmn	x0, #0x8
   116d8:	b.eq	11804 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1f4>  // b.none
   116dc:	cmn	x0, #0x10
   116e0:	b.ne	116f8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xe8>  // b.any
   116e4:	ldr	x0, [x4, #8]
   116e8:	cmp	x23, #0x0
   116ec:	ccmn	x0, #0x10, #0x0, eq  // eq = none
   116f0:	csel	x23, x23, x4, ne  // ne = any
   116f4:	nop
   116f8:	add	w2, w2, w6
   116fc:	add	w6, w6, #0x1
   11700:	and	w2, w8, w2
   11704:	b	116c0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xb0>
   11708:	mov	x0, x22
   1170c:	bl	0 <__cxa_guard_acquire>
   11710:	cbz	w0, 11640 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x30>
   11714:	str	xzr, [x23, #928]
   11718:	mov	x0, x22
   1171c:	str	xzr, [x23, #936]
   11720:	add	x24, x23, #0x3a0
   11724:	str	xzr, [x23, #944]
   11728:	str	wzr, [x23, #952]
   1172c:	bl	0 <__cxa_guard_release>
   11730:	mov	x1, x24
   11734:	adrp	x2, 0 <__dso_handle>
   11738:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1173c:	add	x2, x2, #0x0
   11740:	add	x0, x0, #0x0
   11744:	bl	0 <__cxa_atexit>
   11748:	add	x0, x21, #0x0
   1174c:	stp	x19, x20, [sp, #64]
   11750:	ldr	w3, [x0, #952]
   11754:	cbnz	w3, 11650 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x40>
   11758:	ldr	x2, [x0, #928]
   1175c:	mov	w1, #0x0                   	// #0
   11760:	add	x2, x2, #0x1
   11764:	str	x2, [x0, #928]
   11768:	add	x22, x21, #0x0
   1176c:	add	x22, x22, #0x3a0
   11770:	mov	x0, x22
   11774:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11778:	mov	x0, x22
   1177c:	add	x2, sp, #0x70
   11780:	add	x1, sp, #0x40
   11784:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11788:	ldr	x23, [sp, #112]
   1178c:	cbnz	x23, 11858 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x248>
   11790:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11794:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11798:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1179c:	add	x3, x3, #0x0
   117a0:	add	x1, x1, #0x0
   117a4:	add	x0, x0, #0x0
   117a8:	mov	w2, #0x22f                 	// #559
   117ac:	bl	0 <__assert_fail>
   117b0:	cmn	x20, #0x8
   117b4:	b.ne	11664 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x54>  // b.any
   117b8:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   117bc:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   117c0:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   117c4:	add	x3, x3, #0x0
   117c8:	add	x1, x1, #0x0
   117cc:	add	x0, x0, #0x0
   117d0:	mov	w2, #0x250                 	// #592
   117d4:	bl	0 <__assert_fail>
   117d8:	ldr	x7, [x4, #8]
   117dc:	cmp	x20, x7
   117e0:	b.ne	116d4 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xc4>  // b.any
   117e4:	ldr	x22, [x4, #16]
   117e8:	cbz	x22, 11900 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2f0>
   117ec:	mov	x0, x22
   117f0:	ldp	x19, x20, [sp, #16]
   117f4:	ldp	x21, x22, [sp, #32]
   117f8:	ldp	x23, x24, [sp, #48]
   117fc:	ldp	x29, x30, [sp], #144
   11800:	ret
   11804:	ldr	x0, [x4, #8]
   11808:	cmn	x0, #0x8
   1180c:	b.ne	116f8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xe8>  // b.any
   11810:	add	x2, x21, #0x0
   11814:	cmp	x23, #0x0
   11818:	csel	x23, x23, x4, ne  // ne = any
   1181c:	lsl	w1, w3, #1
   11820:	add	w5, w1, w3
   11824:	add	x22, x2, #0x3a0
   11828:	ldr	x4, [x2, #928]
   1182c:	ldr	w0, [x22, #16]
   11830:	add	x4, x4, #0x1
   11834:	str	x4, [x2, #928]
   11838:	add	w0, w0, #0x1
   1183c:	cmp	w5, w0, lsl #2
   11840:	b.ls	11768 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x158>  // b.plast
   11844:	ldr	w1, [x22, #20]
   11848:	sub	w1, w3, w1
   1184c:	sub	w1, w1, w0
   11850:	cmp	w1, w3, lsr #3
   11854:	b.ls	118f8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2e8>  // b.plast
   11858:	add	x0, x21, #0x0
   1185c:	ldr	x2, [x23]
   11860:	ldr	w1, [x0, #944]
   11864:	cmn	x2, #0x8
   11868:	add	w1, w1, #0x1
   1186c:	str	w1, [x0, #944]
   11870:	b.eq	118e8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2d8>  // b.none
   11874:	add	x0, x21, #0x0
   11878:	ldr	w1, [x0, #948]
   1187c:	sub	w1, w1, #0x1
   11880:	str	w1, [x0, #948]
   11884:	ldr	q0, [sp, #64]
   11888:	str	xzr, [x23, #16]
   1188c:	str	q0, [x23]
   11890:	add	x0, x21, #0x0
   11894:	mov	w2, #0x4                   	// #4
   11898:	mov	x1, #0x28                  	// #40
   1189c:	add	x0, x0, #0xa0
   118a0:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   118a4:	ldr	x2, [x19]
   118a8:	mov	x22, x0
   118ac:	mov	x1, x20
   118b0:	mov	x0, x19
   118b4:	ldr	x2, [x2, #88]
   118b8:	blr	x2
   118bc:	stp	x0, x19, [x22, #16]
   118c0:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   118c4:	mov	w2, #0x7                   	// #7
   118c8:	strh	w2, [x22, #8]
   118cc:	ldr	x1, [x1]
   118d0:	str	x20, [x22, #32]
   118d4:	add	x1, x1, #0x10
   118d8:	str	x1, [x22]
   118dc:	cbz	x0, 11908 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2f8>
   118e0:	str	x22, [x23, #16]
   118e4:	b	117ec <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x1dc>
   118e8:	ldr	x0, [x23, #8]
   118ec:	cmn	x0, #0x8
   118f0:	b.ne	11874 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x264>  // b.any
   118f4:	b	11884 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x274>
   118f8:	mov	w1, w3
   118fc:	b	11770 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x160>
   11900:	mov	x23, x4
   11904:	b	11890 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x280>
   11908:	bl	0 <_ZN4llvm4errsEv>
   1190c:	add	x20, sp, #0x50
   11910:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11914:	add	x1, x1, #0x0
   11918:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1191c:	mov	x21, x0
   11920:	ldr	x1, [x22, #24]
   11924:	mov	x8, x20
   11928:	add	x19, sp, #0x70
   1192c:	mov	x0, x1
   11930:	ldr	x1, [x1]
   11934:	ldr	x1, [x1, #40]
   11938:	blr	x1
   1193c:	ldp	x1, x2, [sp, #80]
   11940:	mov	x0, x21
   11944:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11948:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   1194c:	add	x1, x1, #0x0
   11950:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11954:	mov	x21, x0
   11958:	ldr	x1, [x22, #32]
   1195c:	mov	x8, x19
   11960:	add	x19, x19, #0x10
   11964:	mov	x0, x1
   11968:	ldr	x1, [x1]
   1196c:	ldr	x1, [x1, #40]
   11970:	blr	x1
   11974:	ldp	x1, x2, [sp, #112]
   11978:	mov	x0, x21
   1197c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11980:	ldr	x0, [sp, #112]
   11984:	cmp	x0, x19
   11988:	b.eq	11990 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x380>  // b.none
   1198c:	bl	0 <_ZdlPv>
   11990:	mov	x0, x21
   11994:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11998:	add	x1, x1, #0x0
   1199c:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   119a0:	ldr	x0, [sp, #80]
   119a4:	add	x20, x20, #0x10
   119a8:	cmp	x0, x20
   119ac:	b.eq	119b4 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x3a4>  // b.none
   119b0:	bl	0 <_ZdlPv>
   119b4:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   119b8:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   119bc:	add	x1, x1, #0x0
   119c0:	add	x0, x0, #0x0
   119c4:	mov	w2, #0x4f7                 	// #1271
   119c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   119cc:	nop

00000000000119d0 <_ZNK4llvm9FieldInit17resolveReferencesERNS_8ResolverE>:
   119d0:	stp	x29, x30, [sp, #-32]!
   119d4:	mov	x29, sp
   119d8:	stp	x19, x20, [sp, #16]
   119dc:	mov	x19, x0
   119e0:	mov	x20, x1
   119e4:	ldr	x0, [x0, #24]
   119e8:	ldr	x2, [x0]
   119ec:	ldr	x2, [x2, #96]
   119f0:	blr	x2
   119f4:	ldr	x1, [x19, #24]
   119f8:	cmp	x1, x0
   119fc:	b.eq	11a18 <_ZNK4llvm9FieldInit17resolveReferencesERNS_8ResolverE+0x48>  // b.none
   11a00:	ldr	x1, [x19, #32]
   11a04:	bl	11610 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>
   11a08:	ldr	x1, [x20, #8]
   11a0c:	ldp	x19, x20, [sp, #16]
   11a10:	ldp	x29, x30, [sp], #32
   11a14:	b	9518 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>
   11a18:	mov	x0, x19
   11a1c:	ldp	x19, x20, [sp, #16]
   11a20:	ldp	x29, x30, [sp], #32
   11a24:	ret

0000000000011a28 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE>:
   11a28:	stp	x29, x30, [sp, #-80]!
   11a2c:	mov	x29, sp
   11a30:	ldr	w5, [x0, #48]
   11a34:	stp	x19, x20, [sp, #16]
   11a38:	mov	x20, x0
   11a3c:	str	x1, [sp, #56]
   11a40:	ldr	x6, [x0, #32]
   11a44:	cbz	w5, 11aa0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x78>
   11a48:	cmn	x1, #0x10
   11a4c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
   11a50:	b.eq	11d0c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2e4>  // b.none
   11a54:	lsr	w2, w1, #9
   11a58:	sub	w4, w5, #0x1
   11a5c:	eor	w2, w2, w1, lsr #4
   11a60:	and	w2, w2, w4
   11a64:	lsl	w0, w2, #4
   11a68:	add	x3, x6, x0
   11a6c:	ldr	x0, [x6, x0]
   11a70:	cmp	x1, x0
   11a74:	b.ne	11a90 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x68>  // b.any
   11a78:	ldr	x19, [x3, #8]
   11a7c:	cbz	x19, 11aa0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x78>
   11a80:	mov	x0, x19
   11a84:	ldp	x19, x20, [sp, #16]
   11a88:	ldp	x29, x30, [sp], #80
   11a8c:	ret
   11a90:	mov	w3, #0x1                   	// #1
   11a94:	cmn	x0, #0x8
   11a98:	b.ne	11ca4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x27c>  // b.any
   11a9c:	nop
   11aa0:	ldr	x2, [x20, #56]
   11aa4:	ldr	w4, [x20, #64]
   11aa8:	add	x4, x2, x4, lsl #3
   11aac:	cmp	x2, x4
   11ab0:	b.ne	11ac4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x9c>  // b.any
   11ab4:	b	11ae4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xbc>
   11ab8:	add	x2, x2, #0x8
   11abc:	cmp	x4, x2
   11ac0:	b.eq	11ae4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xbc>  // b.none
   11ac4:	ldr	x3, [x2]
   11ac8:	cmp	x1, x3
   11acc:	b.ne	11ab8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x90>  // b.any
   11ad0:	mov	x19, #0x0                   	// #0
   11ad4:	mov	x0, x19
   11ad8:	ldp	x19, x20, [sp, #16]
   11adc:	ldp	x29, x30, [sp], #80
   11ae0:	ret
   11ae4:	ldr	x0, [x20, #8]
   11ae8:	mov	w3, #0x18                  	// #24
   11aec:	ldr	w4, [x0, #80]
   11af0:	ldr	x2, [x0, #72]
   11af4:	str	x21, [sp, #32]
   11af8:	umaddl	x4, w4, w3, x2
   11afc:	cmp	x2, x4
   11b00:	b.ne	11b14 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xec>  // b.any
   11b04:	b	11c1c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1f4>
   11b08:	add	x2, x2, #0x18
   11b0c:	cmp	x4, x2
   11b10:	b.eq	11c1c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1f4>  // b.none
   11b14:	ldr	x3, [x2]
   11b18:	cmp	x1, x3
   11b1c:	b.ne	11b08 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe0>  // b.any
   11b20:	ldr	x21, [x2, #16]
   11b24:	cbz	x21, 11d80 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x358>
   11b28:	ldrb	w0, [x21, #8]
   11b2c:	mov	x19, #0x0                   	// #0
   11b30:	cmp	w0, #0x18
   11b34:	b.ne	11b8c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x164>  // b.any
   11b38:	add	x21, x20, #0x18
   11b3c:	cbz	w5, 11bdc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1b4>
   11b40:	ldr	x1, [sp, #56]
   11b44:	cmn	x1, #0x8
   11b48:	ccmn	x1, #0x10, #0x4, ne  // ne = any
   11b4c:	b.eq	11d50 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x328>  // b.none
   11b50:	lsr	w2, w1, #9
   11b54:	sub	w7, w5, #0x1
   11b58:	eor	w2, w2, w1, lsr #4
   11b5c:	and	w2, w2, w7
   11b60:	lsl	w4, w2, #4
   11b64:	add	x3, x6, x4
   11b68:	ldr	x4, [x6, x4]
   11b6c:	cmp	x1, x4
   11b70:	b.ne	11c24 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1fc>  // b.any
   11b74:	ldr	x21, [sp, #32]
   11b78:	str	x19, [x3, #8]
   11b7c:	mov	x0, x19
   11b80:	ldp	x19, x20, [sp, #16]
   11b84:	ldp	x29, x30, [sp], #80
   11b88:	ret
   11b8c:	add	x1, sp, #0x38
   11b90:	add	x0, x20, #0x38
   11b94:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11b98:	ldr	x2, [x21]
   11b9c:	mov	x1, x20
   11ba0:	mov	x0, x21
   11ba4:	ldr	x2, [x2, #96]
   11ba8:	blr	x2
   11bac:	mov	x19, x0
   11bb0:	ldp	w1, w2, [x20, #64]
   11bb4:	mov	w0, w1
   11bb8:	sub	x0, x0, #0x1
   11bbc:	cmp	x0, x2
   11bc0:	b.hi	11d60 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x338>  // b.pmore
   11bc4:	ldr	w5, [x20, #48]
   11bc8:	sub	w1, w1, #0x1
   11bcc:	str	w1, [x20, #64]
   11bd0:	add	x21, x20, #0x18
   11bd4:	ldr	x6, [x20, #32]
   11bd8:	cbnz	w5, 11b40 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x118>
   11bdc:	ldr	x0, [x20, #24]
   11be0:	mov	w6, #0x0                   	// #0
   11be4:	add	x0, x0, #0x1
   11be8:	str	x0, [x20, #24]
   11bec:	mov	w1, w6
   11bf0:	mov	x0, x21
   11bf4:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11bf8:	mov	x0, x21
   11bfc:	add	x2, sp, #0x48
   11c00:	add	x1, sp, #0x38
   11c04:	bl	0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11c08:	ldr	x3, [sp, #72]
   11c0c:	cbz	x3, 11d30 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x308>
   11c10:	ldr	w4, [x20, #40]
   11c14:	ldr	x1, [sp, #56]
   11c18:	b	11c74 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x24c>
   11c1c:	mov	x19, #0x0                   	// #0
   11c20:	b	11b38 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x110>
   11c24:	mov	w8, #0x1                   	// #1
   11c28:	mov	x0, #0x0                   	// #0
   11c2c:	cmn	x4, #0x8
   11c30:	b.ne	11cd8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2b0>  // b.any
   11c34:	ldr	x2, [x20, #24]
   11c38:	lsl	w6, w5, #1
   11c3c:	ldr	w4, [x20, #40]
   11c40:	cmp	x0, #0x0
   11c44:	add	x2, x2, #0x1
   11c48:	str	x2, [x20, #24]
   11c4c:	add	w2, w4, #0x1
   11c50:	add	w7, w6, w5
   11c54:	csel	x3, x3, x0, eq  // eq = none
   11c58:	cmp	w7, w2, lsl #2
   11c5c:	b.ls	11bec <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1c4>  // b.plast
   11c60:	ldr	w0, [x20, #44]
   11c64:	add	w2, w2, w0
   11c68:	sub	w2, w5, w2
   11c6c:	cmp	w2, w5, lsr #3
   11c70:	b.ls	11cd0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2a8>  // b.plast
   11c74:	ldr	x2, [x3]
   11c78:	add	w0, w4, #0x1
   11c7c:	str	w0, [x20, #40]
   11c80:	cmn	x2, #0x8
   11c84:	b.eq	11c94 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x26c>  // b.none
   11c88:	ldr	w0, [x20, #44]
   11c8c:	sub	w0, w0, #0x1
   11c90:	str	w0, [x20, #44]
   11c94:	stp	x1, xzr, [x3]
   11c98:	ldr	x21, [sp, #32]
   11c9c:	str	x19, [x3, #8]
   11ca0:	b	11b7c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x154>
   11ca4:	add	w2, w3, w2
   11ca8:	add	w7, w3, #0x1
   11cac:	and	w0, w4, w2
   11cb0:	and	w2, w4, w2
   11cb4:	lsl	x0, x0, #4
   11cb8:	add	x3, x6, x0
   11cbc:	ldr	x0, [x6, x0]
   11cc0:	cmp	x1, x0
   11cc4:	b.eq	11a78 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x50>  // b.none
   11cc8:	mov	w3, w7
   11ccc:	b	11a94 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x6c>
   11cd0:	mov	w1, w5
   11cd4:	b	11bf0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1c8>
   11cd8:	add	w2, w2, w8
   11cdc:	cmp	x0, #0x0
   11ce0:	and	w9, w7, w2
   11ce4:	ccmn	x4, #0x10, #0x0, eq  // eq = none
   11ce8:	csel	x0, x0, x3, ne  // ne = any
   11cec:	add	w8, w8, #0x1
   11cf0:	lsl	x4, x9, #4
   11cf4:	and	w2, w7, w2
   11cf8:	add	x3, x6, x4
   11cfc:	ldr	x4, [x6, x4]
   11d00:	cmp	x1, x4
   11d04:	b.eq	11b74 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x14c>  // b.none
   11d08:	b	11c2c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x204>
   11d0c:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d10:	add	x3, x3, #0x0
   11d14:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d18:	str	x21, [sp, #32]
   11d1c:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d20:	add	x1, x1, #0x0
   11d24:	add	x0, x0, #0x0
   11d28:	mov	w2, #0x250                 	// #592
   11d2c:	bl	0 <__assert_fail>
   11d30:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d34:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d38:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d3c:	add	x3, x3, #0x0
   11d40:	add	x1, x1, #0x0
   11d44:	add	x0, x0, #0x0
   11d48:	mov	w2, #0x22f                 	// #559
   11d4c:	bl	0 <__assert_fail>
   11d50:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d54:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d58:	add	x3, x3, #0x0
   11d5c:	b	11d1c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2f4>
   11d60:	adrp	x3, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d64:	adrp	x1, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d68:	adrp	x0, 0 <_ZNK4llvm5RecTy7typeIsAEPKS0_>
   11d6c:	add	x3, x3, #0x0
   11d70:	add	x1, x1, #0x0
   11d74:	add	x0, x0, #0x0
   11d78:	mov	w2, #0x43                  	// #67
   11d7c:	bl	0 <__assert_fail>
   11d80:	bl	578 <_ZN4llvm3isaINS_9UnsetInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

Disassembly of section .text._ZNK4llvm4Init10isCompleteEv:

0000000000000000 <_ZNK4llvm4Init10isCompleteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm4Init10isConcreteEv:

0000000000000000 <_ZNK4llvm4Init10isConcreteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm4Init19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm4Init19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #40]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x8
  18:	blr	x1
  1c:	mov	x0, x19
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZNK4llvm4Init26convertInitializerBitRangeENS_8ArrayRefIjEE:

0000000000000000 <_ZNK4llvm4Init26convertInitializerBitRangeENS_8ArrayRefIjEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm4Init20convertInitListSliceENS_8ArrayRefIjEE:

0000000000000000 <_ZNK4llvm4Init20convertInitListSliceENS_8ArrayRefIjEE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm4Init12getFieldTypeEPNS_10StringInitE:

0000000000000000 <_ZNK4llvm4Init12getFieldTypeEPNS_10StringInitE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm4Init17resolveReferencesERNS_8ResolverE:

0000000000000000 <_ZNK4llvm4Init17resolveReferencesERNS_8ResolverE>:
   0:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit6getBitEj:

0000000000000000 <_ZNK4llvm9UnsetInit6getBitEj>:
   0:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit10isCompleteEv:

0000000000000000 <_ZNK4llvm9UnsetInit10isCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit10isConcreteEv:

0000000000000000 <_ZNK4llvm9UnsetInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7BitInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7BitInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7IntInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7IntInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm10StringInit10isConcreteEv:

0000000000000000 <_ZNK4llvm10StringInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8CodeInit10isConcreteEv:

0000000000000000 <_ZNK4llvm8CodeInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8UnOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm8UnOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm9BinOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm9BinOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZNK4llvm10TernOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm10TernOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x3                   	// #3
   4:	ret

Disassembly of section .text._ZNK4llvm10FoldOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm10FoldOpInit10isCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm9IsAOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm9IsAOpInit10isCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm7DefInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7DefInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8Resolver13keepUnsetBitsEv:

0000000000000000 <_ZNK4llvm8Resolver13keepUnsetBitsEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm14RecordResolver13keepUnsetBitsEv:

0000000000000000 <_ZNK4llvm14RecordResolver13keepUnsetBitsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm17RecordValResolver7resolveEPNS_4InitE:

0000000000000000 <_ZN4llvm17RecordValResolver7resolveEPNS_4InitE>:
   0:	ldr	x0, [x0, #24]
   4:	ldr	x2, [x0]
   8:	cmp	x2, x1
   c:	b.ne	18 <_ZN4llvm17RecordValResolver7resolveEPNS_4InitE+0x18>  // b.any
  10:	ldr	x0, [x0, #16]
  14:	ret
  18:	mov	x0, #0x0                   	// #0
  1c:	ret

Disassembly of section .text._ZN4llvm20HasReferenceResolverD2Ev:

0000000000000000 <_ZN4llvm20HasReferenceResolverD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm23TrackUnresolvedResolverD2Ev:

0000000000000000 <_ZN4llvm23TrackUnresolvedResolverD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7DagInitD2Ev:

0000000000000000 <_ZN4llvm7DagInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10CondOpInitD2Ev:

0000000000000000 <_ZN4llvm10CondOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9FieldInitD2Ev:

0000000000000000 <_ZN4llvm9FieldInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10VarDefInitD2Ev:

0000000000000000 <_ZN4llvm10VarDefInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7DefInitD2Ev:

0000000000000000 <_ZN4llvm7DefInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm18VarListElementInitD2Ev:

0000000000000000 <_ZN4llvm18VarListElementInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10VarBitInitD2Ev:

0000000000000000 <_ZN4llvm10VarBitInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7VarInitD2Ev:

0000000000000000 <_ZN4llvm7VarInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9IsAOpInitD2Ev:

0000000000000000 <_ZN4llvm9IsAOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10FoldOpInitD2Ev:

0000000000000000 <_ZN4llvm10FoldOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10TernOpInitD2Ev:

0000000000000000 <_ZN4llvm10TernOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9BinOpInitD2Ev:

0000000000000000 <_ZN4llvm9BinOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8UnOpInitD2Ev:

0000000000000000 <_ZN4llvm8UnOpInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8ListInitD2Ev:

0000000000000000 <_ZN4llvm8ListInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8CodeInitD2Ev:

0000000000000000 <_ZN4llvm8CodeInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm10StringInitD2Ev:

0000000000000000 <_ZN4llvm10StringInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7IntInitD2Ev:

0000000000000000 <_ZN4llvm7IntInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8BitsInitD2Ev:

0000000000000000 <_ZN4llvm8BitsInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7BitInitD2Ev:

0000000000000000 <_ZN4llvm7BitInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9UnsetInitD2Ev:

0000000000000000 <_ZN4llvm9UnsetInitD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm11RecordRecTyD2Ev:

0000000000000000 <_ZN4llvm11RecordRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8DagRecTyD2Ev:

0000000000000000 <_ZN4llvm8DagRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9ListRecTyD2Ev:

0000000000000000 <_ZN4llvm9ListRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm11StringRecTyD2Ev:

0000000000000000 <_ZN4llvm11StringRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9CodeRecTyD2Ev:

0000000000000000 <_ZN4llvm9CodeRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8IntRecTyD2Ev:

0000000000000000 <_ZN4llvm8IntRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm9BitsRecTyD2Ev:

0000000000000000 <_ZN4llvm9BitsRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8BitRecTyD2Ev:

0000000000000000 <_ZN4llvm8BitRecTyD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm17RecordValResolverD2Ev:

0000000000000000 <_ZN4llvm17RecordValResolverD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm11RecordRecTyD0Ev:

0000000000000000 <_ZN4llvm11RecordRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm8BitsInitD0Ev:

0000000000000000 <_ZN4llvm8BitsInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm8ListInitD0Ev:

0000000000000000 <_ZN4llvm8ListInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm10VarDefInitD0Ev:

0000000000000000 <_ZN4llvm10VarDefInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, c <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED1Ev+0xc>
   8:	b	0 <_ZdlPv>
   c:	ret

Disassembly of section .text._ZNK4llvm10VarBitInit6getBitEj:

0000000000000000 <_ZNK4llvm10VarBitInit6getBitEj>:
   0:	cbnz	w1, 8 <_ZNK4llvm10VarBitInit6getBitEj+0x8>
   4:	ret
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  10:	adrp	x1, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x46f                 	// #1135
  2c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm7BitInit6getBitEj:

0000000000000000 <_ZNK4llvm7BitInit6getBitEj>:
   0:	cbnz	w1, 8 <_ZNK4llvm7BitInit6getBitEj+0x8>
   4:	ret
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZNK4llvm7BitInit6getBitEj>
  10:	adrp	x1, 0 <_ZNK4llvm7BitInit6getBitEj>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZNK4llvm7BitInit6getBitEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x1f7                 	// #503
  2c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8UnOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm8UnOpInit10getOperandEj>:
   0:	cbnz	w1, c <_ZNK4llvm8UnOpInit10getOperandEj+0xc>
   4:	ldr	x0, [x0, #32]
   8:	ret
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  14:	adrp	x1, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x310                 	// #784
  30:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8BitsInit6getBitEj:

0000000000000000 <_ZNK4llvm8BitsInit6getBitEj>:
   0:	ldr	w2, [x0, #32]
   4:	cmp	w2, w1
   8:	b.ls	18 <_ZNK4llvm8BitsInit6getBitEj+0x18>  // b.plast
   c:	add	x1, x0, w1, uxtw #3
  10:	ldr	x0, [x1, #40]
  14:	ret
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x3, 0 <_ZNK4llvm8BitsInit6getBitEj>
  20:	adrp	x1, 0 <_ZNK4llvm8BitsInit6getBitEj>
  24:	mov	x29, sp
  28:	adrp	x0, 0 <_ZNK4llvm8BitsInit6getBitEj>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x22e                 	// #558
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9StringSetIRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev:

0000000000000000 <_ZN4llvm9StringSetIRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED1Ev>:
   0:	ldr	x0, [x0]
   4:	b	0 <free>

Disassembly of section .text._ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev:

0000000000000000 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED1Ev>:
   0:	ldr	x0, [x0]
   4:	b	0 <free>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	w20, [x0, #24]
  10:	ldr	x19, [x0, #16]
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	add	x20, x19, x20, lsl #3
  20:	cmp	x19, x20
  24:	b.eq	38 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x38>  // b.none
  28:	ldr	x0, [x19], #8
  2c:	bl	0 <free>
  30:	cmp	x20, x19
  34:	b.ne	28 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x28>  // b.any
  38:	ldr	x19, [x21, #64]
  3c:	ldr	w20, [x21, #72]
  40:	add	x20, x19, x20, lsl #4
  44:	cmp	x19, x20
  48:	b.eq	64 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x64>  // b.none
  4c:	nop
  50:	ldr	x0, [x19], #16
  54:	bl	0 <free>
  58:	cmp	x20, x19
  5c:	b.ne	50 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x50>  // b.any
  60:	ldr	x20, [x21, #64]
  64:	add	x0, x21, #0x50
  68:	cmp	x20, x0
  6c:	b.eq	78 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x78>  // b.none
  70:	mov	x0, x20
  74:	bl	0 <free>
  78:	ldr	x0, [x21, #16]
  7c:	add	x21, x21, #0x20
  80:	cmp	x0, x21
  84:	b.eq	98 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED1Ev+0x98>  // b.none
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <free>
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldr	x21, [sp, #32]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret

Disassembly of section .text._ZN4llvm8DagRecTyD0Ev:

0000000000000000 <_ZN4llvm8DagRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9ListRecTyD0Ev:

0000000000000000 <_ZN4llvm9ListRecTyD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm11StringRecTyD0Ev:

0000000000000000 <_ZN4llvm11StringRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9CodeRecTyD0Ev:

0000000000000000 <_ZN4llvm9CodeRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8IntRecTyD0Ev:

0000000000000000 <_ZN4llvm8IntRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9BitsRecTyD0Ev:

0000000000000000 <_ZN4llvm9BitsRecTyD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8BitRecTyD0Ev:

0000000000000000 <_ZN4llvm8BitRecTyD0Ev>:
   0:	mov	x1, #0x18                  	// #24
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9UnsetInitD0Ev:

0000000000000000 <_ZN4llvm9UnsetInitD0Ev>:
   0:	mov	x1, #0x10                  	// #16
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7BitInitD0Ev:

0000000000000000 <_ZN4llvm7BitInitD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7DagInitD0Ev:

0000000000000000 <_ZN4llvm7DagInitD0Ev>:
   0:	mov	x1, #0x38                  	// #56
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10CondOpInitD0Ev:

0000000000000000 <_ZN4llvm10CondOpInitD0Ev>:
   0:	mov	x1, #0x30                  	// #48
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9FieldInitD0Ev:

0000000000000000 <_ZN4llvm9FieldInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7DefInitD0Ev:

0000000000000000 <_ZN4llvm7DefInitD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm18VarListElementInitD0Ev:

0000000000000000 <_ZN4llvm18VarListElementInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10VarBitInitD0Ev:

0000000000000000 <_ZN4llvm10VarBitInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7VarInitD0Ev:

0000000000000000 <_ZN4llvm7VarInitD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9IsAOpInitD0Ev:

0000000000000000 <_ZN4llvm9IsAOpInitD0Ev>:
   0:	mov	x1, #0x30                  	// #48
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10FoldOpInitD0Ev:

0000000000000000 <_ZN4llvm10FoldOpInitD0Ev>:
   0:	mov	x1, #0x48                  	// #72
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8CodeInitD0Ev:

0000000000000000 <_ZN4llvm8CodeInitD0Ev>:
   0:	mov	x1, #0x30                  	// #48
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10StringInitD0Ev:

0000000000000000 <_ZN4llvm10StringInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm7IntInitD0Ev:

0000000000000000 <_ZN4llvm7IntInitD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10TernOpInitD0Ev:

0000000000000000 <_ZN4llvm10TernOpInitD0Ev>:
   0:	mov	x1, #0x38                  	// #56
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm9BinOpInitD0Ev:

0000000000000000 <_ZN4llvm9BinOpInitD0Ev>:
   0:	mov	x1, #0x30                  	// #48
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8UnOpInitD0Ev:

0000000000000000 <_ZN4llvm8UnOpInitD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm23TrackUnresolvedResolverD0Ev:

0000000000000000 <_ZN4llvm23TrackUnresolvedResolverD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm17RecordValResolverD0Ev:

0000000000000000 <_ZN4llvm17RecordValResolverD0Ev>:
   0:	mov	x1, #0x20                  	// #32
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm20HasReferenceResolverD0Ev:

0000000000000000 <_ZN4llvm20HasReferenceResolverD0Ev>:
   0:	mov	x1, #0x28                  	// #40
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm11MapResolverD2Ev:

0000000000000000 <_ZN4llvm11MapResolverD1Ev>:
   0:	adrp	x2, 0 <_ZN4llvm11MapResolverD1Ev>
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x2, [x2]
   c:	add	x2, x2, #0x10
  10:	str	x2, [x0], #24
  14:	ldr	w2, [x0, #24]
  18:	ldr	x0, [x0, #8]
  1c:	umull	x1, w2, w1
  20:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm11MapResolverD0Ev:

0000000000000000 <_ZN4llvm11MapResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZN4llvm11MapResolverD0Ev>
   8:	mov	w1, #0x18                  	// #24
   c:	mov	x29, sp
  10:	ldr	x2, [x2]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x2, x2, #0x10
  20:	str	x2, [x0], #24
  24:	ldr	w2, [x0, #24]
  28:	ldr	x0, [x0, #8]
  2c:	umull	x1, w2, w1
  30:	bl	0 <_ZdlPvm>
  34:	mov	x0, x19
  38:	mov	x1, #0x38                  	// #56
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm14RecordResolverD2Ev:

0000000000000000 <_ZN4llvm14RecordResolverD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm14RecordResolverD1Ev>
   8:	add	x2, x0, #0x48
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #56]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm14RecordResolverD1Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	w1, [x19, #48]
  38:	ldr	x0, [x19, #32]
  3c:	ldr	x19, [sp, #16]
  40:	lsl	x1, x1, #4
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm14ShadowResolverD2Ev:

0000000000000000 <_ZN4llvm14ShadowResolverD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm14ShadowResolverD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0], #32
  10:	ldr	w1, [x0, #24]
  14:	ldr	x0, [x0, #8]
  18:	lsl	x1, x1, #3
  1c:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm14ShadowResolverD0Ev:

0000000000000000 <_ZN4llvm14ShadowResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm14ShadowResolverD0Ev>
   8:	mov	x2, x0
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x2], #32
  24:	ldr	x0, [x2, #8]
  28:	ldr	w1, [x2, #24]
  2c:	lsl	x1, x1, #3
  30:	bl	0 <_ZdlPvm>
  34:	mov	x0, x19
  38:	mov	x1, #0x40                  	// #64
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED1Ev>:
   0:	ldr	w2, [x0, #24]
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x0, [x0, #8]
   c:	umull	x1, w2, w1
  10:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED1Ev>:
   0:	ldr	w2, [x0, #24]
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x0, [x0, #8]
   c:	umull	x1, w2, w1
  10:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED1Ev>:
   0:	ldr	w2, [x0, #24]
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x0, [x0, #8]
   c:	umull	x1, w2, w1
  10:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED1Ev>:
   0:	ldr	w2, [x0, #24]
   4:	mov	w1, #0x18                  	// #24
   8:	ldr	x0, [x0, #8]
   c:	umull	x1, w2, w1
  10:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm10FoldingSetINS_8BitsInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_8BitsInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_8BitsInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_8ListInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_8ListInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_8ListInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_8UnOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_8UnOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_8UnOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_9BinOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_9BinOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_9BinOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_10TernOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_10TernOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_10TernOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_10FoldOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_10FoldOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_10FoldOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_9IsAOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_9IsAOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_9IsAOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_10VarDefInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_10VarDefInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_10VarDefInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_10CondOpInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_10CondOpInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_10CondOpInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZN4llvm10FoldingSetINS_7DagInitEED2Ev:

0000000000000000 <_ZN4llvm10FoldingSetINS_7DagInitEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm10FoldingSetINS_7DagInitEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm14FoldingSetBaseD2Ev>

Disassembly of section .text._ZNK4llvm7DagInit6getBitEj:

0000000000000000 <_ZNK4llvm7DagInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm7DagInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm7DagInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x56b                 	// #1387
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm10VarDefInit6getBitEj:

0000000000000000 <_ZNK4llvm10VarDefInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm10VarDefInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm10VarDefInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x4e7                 	// #1255
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm7DefInit6getBitEj:

0000000000000000 <_ZNK4llvm7DefInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm7DefInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm7DefInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x4b3                 	// #1203
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8ListInit6getBitEj:

0000000000000000 <_ZNK4llvm8ListInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm8ListInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm8ListInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x2d1                 	// #721
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm8CodeInit6getBitEj:

0000000000000000 <_ZNK4llvm8CodeInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm8CodeInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm8CodeInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x28f                 	// #655
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm10StringInit6getBitEj:

0000000000000000 <_ZNK4llvm10StringInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZNK4llvm10StringInit6getBitEj>
   8:	adrp	x0, 0 <_ZNK4llvm10StringInit6getBitEj>
   c:	mov	x29, sp
  10:	add	x1, x1, #0x0
  14:	add	x0, x0, #0x0
  18:	mov	w2, #0x26c                 	// #620
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm9BinOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm9BinOpInit10getOperandEj>:
   0:	cbz	w1, 14 <_ZNK4llvm9BinOpInit10getOperandEj+0x14>
   4:	cmp	w1, #0x1
   8:	b.ne	1c <_ZNK4llvm9BinOpInit10getOperandEj+0x1c>  // b.any
   c:	ldr	x0, [x0, #40]
  10:	ret
  14:	ldr	x0, [x0, #32]
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x1, 0 <_ZNK4llvm9BinOpInit10getOperandEj>
  24:	adrp	x0, 0 <_ZNK4llvm9BinOpInit10getOperandEj>
  28:	mov	x29, sp
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x347                 	// #839
  38:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNK4llvm10TernOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm10TernOpInit10getOperandEj>:
   0:	cmp	w1, #0x1
   4:	b.eq	34 <_ZNK4llvm10TernOpInit10getOperandEj+0x34>  // b.none
   8:	cmp	w1, #0x2
   c:	b.eq	44 <_ZNK4llvm10TernOpInit10getOperandEj+0x44>  // b.none
  10:	cbz	w1, 3c <_ZNK4llvm10TernOpInit10getOperandEj+0x3c>
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x1, 0 <_ZNK4llvm10TernOpInit10getOperandEj>
  1c:	adrp	x0, 0 <_ZNK4llvm10TernOpInit10getOperandEj>
  20:	mov	x29, sp
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x37f                 	// #895
  30:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  34:	ldr	x0, [x0, #40]
  38:	ret
  3c:	ldr	x0, [x0, #32]
  40:	ret
  44:	ldr	x0, [x0, #48]
  48:	ret

Disassembly of section .text._ZNK4llvm10TernOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm10TernOpInit10isCompleteEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #32]
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #24]
  1c:	blr	x1
  20:	tst	w0, #0xff
  24:	b.eq	5c <_ZNK4llvm10TernOpInit10isCompleteEv+0x5c>  // b.none
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x1, [x0]
  30:	ldr	x1, [x1, #24]
  34:	blr	x1
  38:	tst	w0, #0xff
  3c:	b.eq	5c <_ZNK4llvm10TernOpInit10isCompleteEv+0x5c>  // b.none
  40:	ldr	x0, [x19, #48]
  44:	ldr	x19, [sp, #16]
  48:	ldr	x1, [x0]
  4c:	ldp	x29, x30, [sp], #32
  50:	ldr	x1, [x1, #24]
  54:	mov	x16, x1
  58:	br	x16
  5c:	mov	w0, #0x0                   	// #0
  60:	ldr	x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZN4llvm14ShadowResolver7resolveEPNS_4InitE:

0000000000000000 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>:
   0:	ldr	w3, [x0, #56]
   4:	cbz	w3, 4c <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x4c>
   8:	cmn	x1, #0x10
   c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
  10:	b.eq	80 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x80>  // b.none
  14:	lsr	w2, w1, #9
  18:	sub	w3, w3, #0x1
  1c:	eor	w2, w2, w1, lsr #4
  20:	ldr	x5, [x0, #40]
  24:	and	w4, w2, w3
  28:	mov	x2, x4
  2c:	ldr	x4, [x5, x4, lsl #3]
  30:	cmp	x1, x4
  34:	b.ne	40 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x40>  // b.any
  38:	mov	x0, #0x0                   	// #0
  3c:	ret
  40:	mov	w6, #0x1                   	// #1
  44:	cmn	x4, #0x8
  48:	b.ne	60 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x60>  // b.any
  4c:	ldr	x0, [x0, #24]
  50:	ldr	x2, [x0]
  54:	ldr	x2, [x2, #16]
  58:	mov	x16, x2
  5c:	br	x16
  60:	add	w2, w2, w6
  64:	add	w6, w6, #0x1
  68:	and	w4, w3, w2
  6c:	and	w2, w3, w2
  70:	ldr	x4, [x5, x4, lsl #3]
  74:	cmp	x1, x4
  78:	b.eq	38 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x38>  // b.none
  7c:	b	44 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x44>
  80:	stp	x29, x30, [sp, #-16]!
  84:	adrp	x3, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  88:	adrp	x1, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  8c:	mov	x29, sp
  90:	adrp	x0, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x250                 	// #592
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14RecordResolverD0Ev:

0000000000000000 <_ZN4llvm14RecordResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm14RecordResolverD0Ev>
   8:	add	x2, x0, #0x48
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #56]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm14RecordResolverD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #32]
  38:	ldr	w1, [x19, #48]
  3c:	lsl	x1, x1, #4
  40:	bl	0 <_ZdlPvm>
  44:	mov	x0, x19
  48:	mov	x1, #0x68                  	// #104
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm8BitsInit10isCompleteEv:

0000000000000000 <_ZNK4llvm8BitsInit10isCompleteEv>:
   0:	ldr	w1, [x0, #32]
   4:	cbz	w1, 80 <_ZNK4llvm8BitsInit10isCompleteEv+0x80>
   8:	stp	x29, x30, [sp, #-48]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	mov	w19, #0x0                   	// #0
  1c:	str	x21, [sp, #32]
  20:	mov	x21, #0x28                  	// #40
  24:	b	38 <_ZNK4llvm8BitsInit10isCompleteEv+0x38>
  28:	ldr	w1, [x20, #32]
  2c:	add	w19, w19, #0x1
  30:	cmp	w19, w1
  34:	b.eq	6c <_ZNK4llvm8BitsInit10isCompleteEv+0x6c>  // b.none
  38:	cmp	w19, w1
  3c:	b.cs	88 <_ZNK4llvm8BitsInit10isCompleteEv+0x88>  // b.hs, b.nlast
  40:	add	x0, x21, w19, uxtw #3
  44:	ldr	x0, [x20, x0]
  48:	ldr	x1, [x0]
  4c:	ldr	x1, [x1, #24]
  50:	blr	x1
  54:	ands	w0, w0, #0xff
  58:	b.ne	28 <_ZNK4llvm8BitsInit10isCompleteEv+0x28>  // b.any
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldr	x21, [sp, #32]
  64:	ldp	x29, x30, [sp], #48
  68:	ret
  6c:	mov	w0, #0x1                   	// #1
  70:	ldp	x19, x20, [sp, #16]
  74:	ldr	x21, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret
  88:	adrp	x3, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  8c:	adrp	x1, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  90:	adrp	x0, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x22e                 	// #558
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w2, [x0, #16]
   4:	mov	x1, x0
   8:	ldrb	w3, [x0, #17]
   c:	cmp	w2, #0x1
  10:	b.hi	20 <_ZNK4llvm5Twine7isValidEv+0x20>  // b.pmore
  14:	cmp	w3, #0x1
  18:	cset	w0, eq  // eq = none
  1c:	ret
  20:	mov	w0, #0x0                   	// #0
  24:	cbz	w3, 1c <_ZNK4llvm5Twine7isValidEv+0x1c>
  28:	cmp	w2, #0x2
  2c:	b.ne	48 <_ZNK4llvm5Twine7isValidEv+0x48>  // b.any
  30:	ldr	x2, [x1]
  34:	ldrb	w4, [x2, #16]
  38:	cbz	w4, 1c <_ZNK4llvm5Twine7isValidEv+0x1c>
  3c:	ldrb	w2, [x2, #17]
  40:	cmp	w2, #0x1
  44:	b.eq	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.none
  48:	cmp	w3, #0x2
  4c:	b.ne	70 <_ZNK4llvm5Twine7isValidEv+0x70>  // b.any
  50:	ldr	x1, [x1, #8]
  54:	mov	w0, #0x0                   	// #0
  58:	ldrb	w2, [x1, #16]
  5c:	cbz	w2, 1c <_ZNK4llvm5Twine7isValidEv+0x1c>
  60:	ldrb	w0, [x1, #17]
  64:	cmp	w0, #0x1
  68:	cset	w0, ne  // ne = any
  6c:	ret
  70:	mov	w0, #0x1                   	// #1
  74:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	w2, #0x104                 	// #260
   4:	stp	x1, xzr, [x0]
   8:	strh	w2, [x0, #16]
   c:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC1ERKNS_9StringRefE>:
   0:	mov	w2, #0x105                 	// #261
   4:	stp	x1, xzr, [x0]
   8:	strh	w2, [x0, #16]
   c:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKcRKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC1EPKcRKNS_9StringRefE>:
   0:	mov	w3, #0x503                 	// #1283
   4:	stp	x1, x2, [x0]
   8:	strh	w3, [x0, #16]
   c:	ret

Disassembly of section .text._ZNK4llvm5Twine6concatERKS0_:

0000000000000000 <_ZNK4llvm5Twine6concatERKS0_>:
   0:	ldrb	w2, [x0, #16]
   4:	cbz	w2, 10 <_ZNK4llvm5Twine6concatERKS0_+0x10>
   8:	ldrb	w3, [x1, #16]
   c:	cbnz	w3, 20 <_ZNK4llvm5Twine6concatERKS0_+0x20>
  10:	mov	w0, #0x100                 	// #256
  14:	stp	xzr, xzr, [x8]
  18:	strh	w0, [x8, #16]
  1c:	ret
  20:	cmp	w2, #0x1
  24:	b.eq	7c <_ZNK4llvm5Twine6concatERKS0_+0x7c>  // b.none
  28:	cmp	w3, #0x1
  2c:	b.eq	90 <_ZNK4llvm5Twine6concatERKS0_+0x90>  // b.none
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	ldrb	w4, [x0, #17]
  3c:	cmp	w4, #0x1
  40:	b.eq	a4 <_ZNK4llvm5Twine6concatERKS0_+0xa4>  // b.none
  44:	mov	w2, #0x2                   	// #2
  48:	ldrb	w4, [x1, #17]
  4c:	cmp	w4, #0x1
  50:	b.eq	ac <_ZNK4llvm5Twine6concatERKS0_+0xac>  // b.none
  54:	mov	w3, #0x2                   	// #2
  58:	stp	x0, x1, [x8]
  5c:	mov	x0, x8
  60:	strb	w2, [x8, #16]
  64:	strb	w3, [x8, #17]
  68:	bl	0 <_ZNK4llvm5Twine6concatERKS0_>
  6c:	tst	w0, #0xff
  70:	b.eq	b4 <_ZNK4llvm5Twine6concatERKS0_+0xb4>  // b.none
  74:	ldp	x29, x30, [sp], #16
  78:	ret
  7c:	ldp	x2, x3, [x1]
  80:	stp	x2, x3, [x8]
  84:	ldr	x0, [x1, #16]
  88:	str	x0, [x8, #16]
  8c:	ret
  90:	ldp	x2, x3, [x0]
  94:	stp	x2, x3, [x8]
  98:	ldr	x0, [x0, #16]
  9c:	str	x0, [x8, #16]
  a0:	ret
  a4:	ldr	x0, [x0]
  a8:	b	48 <_ZNK4llvm5Twine6concatERKS0_+0x48>
  ac:	ldr	x1, [x1]
  b0:	b	58 <_ZNK4llvm5Twine6concatERKS0_+0x58>
  b4:	adrp	x3, 0 <_ZNK4llvm5Twine6concatERKS0_>
  b8:	adrp	x1, 0 <_ZNK4llvm5Twine6concatERKS0_>
  bc:	adrp	x0, 0 <_ZNK4llvm5Twine6concatERKS0_>
  c0:	add	x3, x3, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x0, x0, #0x0
  cc:	mov	w2, #0xb8                  	// #184
  d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 58 <_ZN4llvm11raw_ostreamlsEPKc+0x58>
  14:	mov	x20, x1
  18:	mov	x0, x1
  1c:	str	x21, [sp, #32]
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x21, x1
  34:	b.hi	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.pmore
  38:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  3c:	mov	x2, x21
  40:	mov	x1, x20
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19, #24]
  4c:	add	x0, x0, x21
  50:	ldr	x21, [sp, #32]
  54:	str	x0, [x19, #24]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x2, x21
  6c:	mov	x1, x20
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZNK4llvm7IntInit6getBitEj:

0000000000000000 <_ZNK4llvm7IntInit6getBitEj>:
   0:	ldr	x0, [x0, #24]
   4:	lsr	x0, x0, x1
   8:	and	w0, w0, #0x1
   c:	b	3010 <_ZN4llvm7BitInit3getEb>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3148 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3148 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3148 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	31a8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	31a8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	31a8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	32d0 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	32d0 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	32d0 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3320 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3320 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3320 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3380 <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3380 <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3380 <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	33f8 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	33f8 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	33f8 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3bb8 <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3bb8 <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3bb8 <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3c40 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3c40 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3c40 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3cb0 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3cb0 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3cb0 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	mov	x0, x1
   4:	mov	x1, x2
   8:	cmp	x0, #0x0
   c:	sub	x2, x0, #0x18
  10:	csel	x0, x2, x0, ne  // ne = any
  14:	b	3d28 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x4
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	3d28 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x1, x20
  2c:	mov	x0, x19
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	sub	x0, x1, #0x18
   c:	mov	x29, sp
  10:	csel	x0, x0, x1, ne  // ne = any
  14:	mov	x1, x2
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x2
  20:	bl	3d28 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
   0:	mov	x5, x1
   4:	mov	x1, x0
   8:	stp	x29, x30, [sp, #-32]!
   c:	mov	x29, sp
  10:	ldr	x4, [x0, #8]
  14:	ldr	x2, [x5, #8]
  18:	ldr	x3, [x1], #16
  1c:	str	x19, [sp, #16]
  20:	add	x6, x4, x2
  24:	mov	x19, x8
  28:	cmp	x3, x1
  2c:	b.eq	f8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xf8>  // b.none
  30:	ldr	x1, [x0, #16]
  34:	cmp	x6, x1
  38:	ldr	x1, [x5]
  3c:	b.ls	58 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x58>  // b.plast
  40:	add	x7, x5, #0x10
  44:	cmp	x1, x7
  48:	b.eq	100 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x100>  // b.none
  4c:	ldr	x7, [x5, #16]
  50:	cmp	x6, x7
  54:	b.ls	a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xa4>  // b.plast
  58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  5c:	mov	x1, x0
  60:	mov	x2, x1
  64:	add	x0, x19, #0x10
  68:	str	x0, [x19]
  6c:	ldr	x0, [x2], #16
  70:	cmp	x0, x2
  74:	b.eq	d0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xd0>  // b.none
  78:	str	x0, [x19]
  7c:	ldr	x0, [x1, #8]
  80:	str	x0, [x19, #8]
  84:	ldr	x3, [x1, #16]
  88:	str	x3, [x19, #16]
  8c:	stp	x2, xzr, [x1]
  90:	mov	x0, x19
  94:	strb	wzr, [x1, #16]
  98:	ldr	x19, [sp, #16]
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	mov	x1, #0x0                   	// #0
  a8:	mov	x2, #0x0                   	// #0
  ac:	mov	x0, x5
  b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  b4:	mov	x1, x0
  b8:	add	x0, x19, #0x10
  bc:	mov	x2, x1
  c0:	str	x0, [x19]
  c4:	ldr	x0, [x2], #16
  c8:	cmp	x0, x2
  cc:	b.ne	78 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x78>  // b.any
  d0:	ldr	x0, [x1, #8]
  d4:	str	x0, [x19, #8]
  d8:	ldp	x4, x5, [x1, #16]
  dc:	stp	x4, x5, [x19, #16]
  e0:	mov	x0, x19
  e4:	stp	x2, xzr, [x1]
  e8:	strb	wzr, [x1, #16]
  ec:	ldr	x19, [sp, #16]
  f0:	ldp	x29, x30, [sp], #32
  f4:	ret
  f8:	mov	x1, #0xf                   	// #15
  fc:	b	34 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x34>
 100:	mov	x7, #0xf                   	// #15
 104:	b	50 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x50>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	bl	0 <strlen>
  20:	mov	x4, x0
  24:	mov	x2, #0x0                   	// #0
  28:	mov	x1, #0x0                   	// #0
  2c:	mov	x3, x21
  30:	mov	x0, x20
  34:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  38:	mov	x1, x0
  3c:	add	x2, x19, #0x10
  40:	str	x2, [x19]
  44:	mov	x2, x0
  48:	ldr	x0, [x2], #16
  4c:	cmp	x0, x2
  50:	b.eq	84 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x84>  // b.none
  54:	ldr	x3, [x1, #16]
  58:	str	x0, [x19]
  5c:	str	x3, [x19, #16]
  60:	ldr	x0, [x1, #8]
  64:	str	x0, [x19, #8]
  68:	stp	x2, xzr, [x1]
  6c:	mov	x0, x19
  70:	strb	wzr, [x1, #16]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	ldp	x4, x5, [x1, #16]
  88:	stp	x4, x5, [x19, #16]
  8c:	b	60 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x60>

Disassembly of section .text._ZN4llvm4castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldr	w1, [x0, #8]
  10:	cmp	w1, #0x5
  14:	b.ne	24 <_ZN4llvm4castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x24>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	bl	0 <_ZN4llvm4castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x3, 0 <_ZN4llvm4castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x1, 0 <_ZN4llvm4castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	adrp	x0, 0 <_ZN4llvm4castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x108                 	// #264
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w1, [x0, #8]
  10:	cmp	w1, #0x12
  14:	b.ne	24 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x24>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	bl	0 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x3, 0 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x1, 0 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	adrp	x0, 0 <_ZN4llvm4castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x108                 	// #264
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldp	w1, w2, [x0, #8]
  18:	cmp	w1, w2
  1c:	b.cs	54 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x54>  // b.hs, b.nlast
  20:	ldr	x0, [x19]
  24:	ldr	x2, [x20]
  28:	str	x2, [x0, w1, uxtw #3]
  2c:	ldp	w0, w2, [x19, #8]
  30:	mov	w1, w0
  34:	add	x1, x1, #0x1
  38:	cmp	x1, x2
  3c:	b.hi	6c <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x6c>  // b.pmore
  40:	add	w0, w0, #0x1
  44:	str	w0, [x19, #8]
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	add	x1, x0, #0x10
  58:	mov	x3, #0x8                   	// #8
  5c:	mov	x2, #0x0                   	// #0
  60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  64:	ldr	w1, [x19, #8]
  68:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x20>
  6c:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  70:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  74:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  78:	add	x3, x3, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x0, x0, #0x0
  84:	mov	w2, #0x43                  	// #67
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8dyn_castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #8]
   8:	cmp	w1, #0x12
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_10StringInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm8dyn_castINS_7DefInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_7DefInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_7DefInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #8]
   8:	cmp	w1, #0x6
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_7DefInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm8dyn_castINS_8ListInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_8ListInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_8ListInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #8]
   8:	cmp	w1, #0x9
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_8ListInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x23, x3
  10:	ldr	w3, [x0, #8]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x1
  1c:	mov	x20, x2
  20:	ldr	x1, [x0]
  24:	lsl	x4, x3, #3
  28:	stp	x21, x22, [sp, #32]
  2c:	mov	x21, x0
  30:	add	x24, x1, x4
  34:	stp	x27, x28, [sp, #80]
  38:	cmp	x19, x24
  3c:	sub	x27, x19, x1
  40:	b.eq	244 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x244>  // b.none
  44:	stp	x25, x26, [sp, #64]
  48:	cmp	x19, x1
  4c:	b.cc	2fc <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2fc>  // b.lo, b.ul, b.last
  50:	cmp	x19, x24
  54:	b.hi	340 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x340>  // b.pmore
  58:	sub	x28, x23, x2
  5c:	ldr	w5, [x0, #12]
  60:	asr	x22, x28, #3
  64:	add	x2, x22, x3
  68:	cmp	x2, x5
  6c:	b.hi	168 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x168>  // b.pmore
  70:	sub	x26, x4, x27
  74:	cmp	x22, x26, asr #3
  78:	asr	x25, x26, #3
  7c:	b.ls	198 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x198>  // b.plast
  80:	add	x22, x22, x3
  84:	cmp	x22, x5
  88:	b.hi	320 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x320>  // b.pmore
  8c:	str	w22, [x21, #8]
  90:	cmp	x24, x19
  94:	b.eq	ac <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xac>  // b.none
  98:	add	x22, x1, x22, lsl #3
  9c:	mov	x2, x26
  a0:	sub	x0, x22, x26
  a4:	mov	x1, x19
  a8:	bl	0 <memcpy>
  ac:	cbz	x25, 110 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x110>
  b0:	add	x0, x20, #0xf
  b4:	sub	x1, x25, #0x1
  b8:	sub	x0, x0, x19
  bc:	cmp	x0, #0x1e
  c0:	ccmp	x1, #0x9, #0x0, hi  // hi = pmore
  c4:	b.ls	224 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x224>  // b.plast
  c8:	sub	x0, x25, #0x2
  cc:	mov	x1, #0x0                   	// #0
  d0:	mov	x4, #0x0                   	// #0
  d4:	lsr	x0, x0, #1
  d8:	add	x0, x0, #0x1
  dc:	nop
  e0:	ldr	q0, [x20, x1]
  e4:	add	x4, x4, #0x1
  e8:	cmp	x0, x4
  ec:	str	q0, [x19, x1]
  f0:	add	x1, x1, #0x10
  f4:	b.hi	e0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xe0>  // b.pmore
  f8:	cmp	x25, x0, lsl #1
  fc:	lsl	x0, x0, #4
 100:	b.eq	10c <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x10c>  // b.none
 104:	ldr	x1, [x20, x0]
 108:	str	x1, [x19, x0]
 10c:	add	x20, x20, x26
 110:	cmp	x23, x20
 114:	b.eq	148 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x148>  // b.none
 118:	sub	x2, x23, x20
 11c:	mov	x1, x20
 120:	mov	x0, x24
 124:	bl	0 <memcpy>
 128:	ldp	x25, x26, [sp, #64]
 12c:	mov	x0, x19
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldp	x23, x24, [sp, #48]
 13c:	ldp	x27, x28, [sp, #80]
 140:	ldp	x29, x30, [sp], #112
 144:	ret
 148:	mov	x0, x19
 14c:	ldp	x19, x20, [sp, #16]
 150:	ldp	x21, x22, [sp, #32]
 154:	ldp	x23, x24, [sp, #48]
 158:	ldp	x25, x26, [sp, #64]
 15c:	ldp	x27, x28, [sp, #80]
 160:	ldp	x29, x30, [sp], #112
 164:	ret
 168:	add	x1, x0, #0x10
 16c:	mov	x3, #0x8                   	// #8
 170:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 174:	ldp	w3, w5, [x21, #8]
 178:	ldr	x1, [x21]
 17c:	lsl	x4, x3, #3
 180:	sub	x26, x4, x27
 184:	add	x24, x1, x4
 188:	add	x19, x1, x27
 18c:	cmp	x22, x26, asr #3
 190:	asr	x25, x26, #3
 194:	b.hi	80 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x80>  // b.pmore
 198:	sub	x6, x4, x28
 19c:	sub	x5, x5, x3
 1a0:	sub	x25, x4, x6
 1a4:	add	x22, x1, x6
 1a8:	mov	x0, x24
 1ac:	cmp	x5, x25, asr #3
 1b0:	asr	x26, x25, #3
 1b4:	b.cc	2d0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2d0>  // b.lo, b.ul, b.last
 1b8:	cmp	x22, x24
 1bc:	b.eq	1d8 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1d8>  // b.none
 1c0:	mov	x2, x25
 1c4:	mov	x1, x22
 1c8:	str	x6, [sp, #104]
 1cc:	bl	0 <memmove>
 1d0:	ldr	w3, [x21, #8]
 1d4:	ldr	x6, [sp, #104]
 1d8:	add	x3, x26, x3
 1dc:	ldr	w0, [x21, #12]
 1e0:	cmp	x3, x0
 1e4:	b.hi	320 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x320>  // b.pmore
 1e8:	str	w3, [x21, #8]
 1ec:	cmp	x22, x19
 1f0:	b.eq	204 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x204>  // b.none
 1f4:	sub	x2, x6, x27
 1f8:	mov	x1, x19
 1fc:	sub	x0, x24, x2
 200:	bl	0 <memmove>
 204:	cmp	x20, x23
 208:	b.eq	148 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x148>  // b.none
 20c:	mov	x2, x28
 210:	mov	x1, x20
 214:	mov	x0, x19
 218:	bl	0 <memmove>
 21c:	ldp	x25, x26, [sp, #64]
 220:	b	12c <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x12c>
 224:	mov	x0, #0x0                   	// #0
 228:	ldr	x1, [x20, x0, lsl #3]
 22c:	str	x1, [x19, x0, lsl #3]
 230:	add	x0, x0, #0x1
 234:	cmp	x25, x0
 238:	b.ne	228 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>  // b.any
 23c:	add	x20, x20, x26
 240:	b	110 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x110>
 244:	ldr	w1, [x0, #12]
 248:	sub	x22, x23, x2
 24c:	sub	x1, x1, x3
 250:	asr	x19, x22, #3
 254:	cmp	x1, x22, asr #3
 258:	b.cc	2b0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2b0>  // b.lo, b.ul, b.last
 25c:	cmp	x20, x23
 260:	b.eq	278 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x278>  // b.none
 264:	mov	x2, x22
 268:	mov	x1, x20
 26c:	mov	x0, x24
 270:	bl	0 <memcpy>
 274:	ldr	w3, [x21, #8]
 278:	ldr	w0, [x21, #12]
 27c:	add	x3, x19, x3
 280:	cmp	x3, x0
 284:	b.hi	31c <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x31c>  // b.pmore
 288:	ldr	x19, [x21]
 28c:	str	w3, [x21, #8]
 290:	ldp	x21, x22, [sp, #32]
 294:	add	x19, x19, x27
 298:	mov	x0, x19
 29c:	ldp	x19, x20, [sp, #16]
 2a0:	ldp	x23, x24, [sp, #48]
 2a4:	ldp	x27, x28, [sp, #80]
 2a8:	ldp	x29, x30, [sp], #112
 2ac:	ret
 2b0:	add	x2, x3, x19
 2b4:	add	x1, x0, #0x10
 2b8:	mov	x3, #0x8                   	// #8
 2bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 2c0:	ldr	x24, [x21]
 2c4:	ldr	w3, [x21, #8]
 2c8:	add	x24, x24, x3, lsl #3
 2cc:	b	25c <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x25c>
 2d0:	add	x2, x26, x3
 2d4:	mov	x0, x21
 2d8:	mov	x3, #0x8                   	// #8
 2dc:	add	x1, x21, #0x10
 2e0:	str	x6, [sp, #104]
 2e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 2e8:	ldr	x0, [x21]
 2ec:	ldr	w3, [x21, #8]
 2f0:	ldr	x6, [sp, #104]
 2f4:	add	x0, x0, x3, lsl #3
 2f8:	b	1b8 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1b8>
 2fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 300:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 304:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 308:	add	x3, x3, #0x0
 30c:	add	x1, x1, #0x0
 310:	add	x0, x0, #0x0
 314:	mov	w2, #0x24e                 	// #590
 318:	bl	0 <__assert_fail>
 31c:	stp	x25, x26, [sp, #64]
 320:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 324:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 328:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 32c:	add	x3, x3, #0x0
 330:	add	x1, x1, #0x0
 334:	add	x0, x0, #0x0
 338:	mov	w2, #0x43                  	// #67
 33c:	bl	0 <__assert_fail>
 340:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 344:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 348:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 34c:	add	x3, x3, #0x0
 350:	add	x1, x1, #0x0
 354:	add	x0, x0, #0x0
 358:	mov	w2, #0x24f                 	// #591
 35c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_:

0000000000000000 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x23, x24, [sp, #48]
  14:	add	x23, x0, #0x8
  18:	cbz	x19, 9c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x9c>
  1c:	ldp	x24, x20, [x1]
  20:	stp	x21, x22, [sp, #32]
  24:	cbz	x20, b0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xb0>
  28:	mov	x22, x23
  2c:	nop
  30:	ldp	x0, x21, [x19, #32]
  34:	cmp	x20, x21
  38:	b.cc	ec <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xec>  // b.lo, b.ul, b.last
  3c:	cbz	x21, 10c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x10c>
  40:	mov	x2, x21
  44:	mov	x1, x24
  48:	bl	0 <memcmp>
  4c:	cbnz	w0, fc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xfc>
  50:	cmp	x20, x21
  54:	b.ne	10c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x10c>  // b.any
  58:	mov	x22, x19
  5c:	ldr	x19, [x19, #16]
  60:	cbnz	x19, 30 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x30>
  64:	cmp	x22, x23
  68:	b.eq	98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>  // b.none
  6c:	ldp	x1, x19, [x22, #32]
  70:	cmp	x19, x20
  74:	b.cc	11c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x11c>  // b.lo, b.ul, b.last
  78:	mov	x0, x24
  7c:	mov	x2, x20
  80:	bl	0 <memcmp>
  84:	cbnz	w0, 130 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x130>
  88:	cmp	x20, x19
  8c:	b.eq	d0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xd0>  // b.none
  90:	cmp	x20, x19
  94:	b.cs	d0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xd0>  // b.hs, b.nlast
  98:	ldp	x21, x22, [sp, #32]
  9c:	mov	x0, x23
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret
  b0:	mov	x22, x19
  b4:	ldr	x19, [x19, #16]
  b8:	cbnz	x19, b0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xb0>
  bc:	cmp	x23, x22
  c0:	b.eq	98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>  // b.none
  c4:	ldr	x19, [x22, #40]
  c8:	cmp	x20, x19
  cc:	b.ne	90 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x90>  // b.any
  d0:	mov	x23, x22
  d4:	mov	x0, x23
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldp	x23, x24, [sp, #48]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret
  ec:	mov	x2, x20
  f0:	mov	x1, x24
  f4:	bl	0 <memcmp>
  f8:	cbz	w0, 10c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x10c>
  fc:	tbz	w0, #31, 58 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x58>
 100:	ldr	x19, [x19, #24]
 104:	cbnz	x19, 30 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x30>
 108:	b	64 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x64>
 10c:	cmp	x20, x21
 110:	b.ls	58 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x58>  // b.plast
 114:	ldr	x19, [x19, #24]
 118:	b	104 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x104>
 11c:	cbz	x19, d0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xd0>
 120:	mov	x0, x24
 124:	mov	x2, x19
 128:	bl	0 <memcmp>
 12c:	cbz	w0, 90 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x90>
 130:	cmp	w0, #0x0
 134:	csel	x23, x23, x22, lt  // lt = tstop
 138:	mov	x0, x23
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x21, x22, [sp, #32]
 144:	ldp	x23, x24, [sp, #48]
 148:	ldp	x29, x30, [sp], #64
 14c:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm>:
   0:	cbz	x1, 6c <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x6c>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	ldp	x22, x3, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x0
  1c:	ldr	x0, [x0, #16]
  20:	mov	x19, x1
  24:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
  28:	sub	x22, x3, x22
  2c:	sub	x0, x0, x3
  30:	asr	x21, x22, #3
  34:	cmp	x19, x0, asr #3
  38:	sub	x2, x1, x21
  3c:	b.hi	70 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x70>  // b.pmore
  40:	lsl	x19, x19, #3
  44:	mov	x0, x3
  48:	mov	x2, x19
  4c:	mov	w1, #0x0                   	// #0
  50:	bl	0 <memset>
  54:	add	x19, x0, x19
  58:	str	x19, [x20, #8]
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ret
  70:	stp	x23, x24, [sp, #48]
  74:	cmp	x2, x19
  78:	b.cc	104 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x104>  // b.lo, b.ul, b.last
  7c:	cmp	x21, x19
  80:	csel	x23, x21, x19, cs  // cs = hs, nlast
  84:	add	x23, x21, x23
  88:	cmp	x23, x1
  8c:	csel	x23, x23, x1, ls  // ls = plast
  90:	lsl	x23, x23, #3
  94:	mov	x0, x23
  98:	bl	0 <_Znwm>
  9c:	lsl	x2, x19, #3
  a0:	mov	x24, x0
  a4:	mov	w1, #0x0                   	// #0
  a8:	add	x0, x0, x22
  ac:	bl	0 <memset>
  b0:	ldp	x22, x2, [x20]
  b4:	sub	x2, x2, x22
  b8:	cmp	x2, #0x0
  bc:	b.gt	ec <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xec>
  c0:	cbnz	x22, f8 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xf8>
  c4:	add	x19, x21, x19
  c8:	add	x23, x24, x23
  cc:	str	x23, [x20, #16]
  d0:	add	x19, x24, x19, lsl #3
  d4:	stp	x24, x19, [x20]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldp	x23, x24, [sp, #48]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret
  ec:	mov	x1, x22
  f0:	mov	x0, x24
  f4:	bl	0 <memmove>
  f8:	mov	x0, x22
  fc:	bl	0 <_ZdlPv>
 100:	b	c4 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xc4>
 104:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm>
 108:	add	x0, x0, #0x0
 10c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x3, [x0]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x26, #0x1                   	// #1
  24:	lsl	x2, x26, x2
  28:	ldr	x1, [x0, #80]
  2c:	stp	x23, x24, [sp, #48]
  30:	sub	x23, x2, #0x1
  34:	neg	x22, x2
  38:	add	x0, x3, x23
  3c:	and	x0, x0, x22
  40:	add	x1, x1, x21
  44:	str	x1, [x20, #80]
  48:	sub	x0, x0, x3
  4c:	adds	x2, x21, x0
  50:	b.cs	294 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x294>  // b.hs, b.nlast
  54:	ldr	x1, [x20, #8]
  58:	sub	x1, x1, x3
  5c:	cmp	x2, x1
  60:	b.ls	198 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x198>  // b.plast
  64:	add	x25, x21, x23
  68:	cmp	x25, #0x1, lsl #12
  6c:	b.ls	fc <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xfc>  // b.plast
  70:	mov	x0, x25
  74:	stp	x27, x28, [sp, #80]
  78:	bl	0 <malloc>
  7c:	mov	x19, x0
  80:	cbz	x0, 324 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x324>
  84:	ldp	w24, w0, [x20, #72]
  88:	cmp	w24, w0
  8c:	mov	w26, w0
  90:	b.cs	1d8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1d8>  // b.hs, b.nlast
  94:	ldr	x28, [x20, #64]
  98:	mov	w2, w24
  9c:	ubfiz	x4, x24, #4, #32
  a0:	add	x0, x28, x4
  a4:	str	x19, [x28, x4]
  a8:	add	x2, x2, #0x1
  ac:	cmp	x2, x26
  b0:	str	x25, [x0, #8]
  b4:	b.hi	2e0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x2e0>  // b.pmore
  b8:	add	w24, w24, #0x1
  bc:	str	w24, [x20, #72]
  c0:	adds	x3, x19, x23
  c4:	b.cs	2bc <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x2bc>  // b.hs, b.nlast
  c8:	and	x3, x22, x3
  cc:	add	x19, x19, x25
  d0:	add	x21, x21, x3
  d4:	mov	x0, x3
  d8:	cmp	x21, x19
  dc:	b.hi	338 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x338>  // b.pmore
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x25, x26, [sp, #64]
  f0:	ldp	x27, x28, [sp, #80]
  f4:	ldp	x29, x30, [sp], #112
  f8:	ret
  fc:	ldr	w25, [x20, #24]
 100:	mov	x1, #0x40000000000         	// #4398046511104
 104:	mov	x24, #0x1000                	// #4096
 108:	lsr	w0, w25, #7
 10c:	cmp	w0, #0x1e
 110:	lsl	x24, x24, x0
 114:	csel	x24, x24, x1, cc  // cc = lo, ul, last
 118:	mov	x0, x24
 11c:	bl	0 <malloc>
 120:	mov	x19, x0
 124:	cbz	x0, 358 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x358>
 128:	ldr	w0, [x20, #28]
 12c:	cmp	w25, w0
 130:	b.cs	1bc <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1bc>  // b.hs, b.nlast
 134:	ldr	x0, [x20, #16]
 138:	str	x19, [x0, w25, uxtw #3]
 13c:	ldp	w0, w2, [x20, #24]
 140:	mov	w1, w0
 144:	add	x1, x1, #0x1
 148:	cmp	x1, x2
 14c:	b.hi	2dc <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x2dc>  // b.pmore
 150:	add	w0, w0, #0x1
 154:	add	x24, x19, x24
 158:	stp	x19, x24, [x20]
 15c:	adds	x3, x23, x19
 160:	str	w0, [x20, #24]
 164:	b.cs	2b8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x2b8>  // b.hs, b.nlast
 168:	and	x3, x22, x3
 16c:	add	x21, x21, x3
 170:	cmp	x24, x21
 174:	b.cc	300 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x300>  // b.lo, b.ul, b.last
 178:	str	x21, [x20]
 17c:	mov	x0, x3
 180:	ldp	x19, x20, [sp, #16]
 184:	ldp	x21, x22, [sp, #32]
 188:	ldp	x23, x24, [sp, #48]
 18c:	ldp	x25, x26, [sp, #64]
 190:	ldp	x29, x30, [sp], #112
 194:	ret
 198:	add	x0, x3, x0
 19c:	add	x21, x0, x21
 1a0:	str	x21, [x20]
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	ldp	x23, x24, [sp, #48]
 1b0:	ldp	x25, x26, [sp, #64]
 1b4:	ldp	x29, x30, [sp], #112
 1b8:	ret
 1bc:	add	x1, x20, #0x20
 1c0:	add	x0, x20, #0x10
 1c4:	mov	x3, #0x8                   	// #8
 1c8:	mov	x2, #0x0                   	// #0
 1cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1d0:	ldr	w25, [x20, #24]
 1d4:	b	134 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x134>
 1d8:	add	x1, x26, #0x2
 1dc:	mov	x0, #0xffffffff            	// #4294967295
 1e0:	orr	x1, x1, x1, lsr #1
 1e4:	orr	x1, x1, x1, lsr #2
 1e8:	orr	x1, x1, x1, lsr #4
 1ec:	orr	x1, x1, x1, lsr #8
 1f0:	orr	x1, x1, x1, lsr #16
 1f4:	orr	x1, x1, x1, lsr #32
 1f8:	add	x1, x1, #0x1
 1fc:	cmp	x1, x0
 200:	b.hi	280 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x280>  // b.pmore
 204:	lsl	x0, x1, #4
 208:	mov	w27, w1
 20c:	mov	x26, x1
 210:	str	x1, [sp, #104]
 214:	bl	0 <malloc>
 218:	mov	x28, x0
 21c:	cbz	x0, 370 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x370>
 220:	ldr	x0, [x20, #64]
 224:	ubfiz	x4, x24, #4, #32
 228:	mov	w2, w24
 22c:	mov	x3, x28
 230:	add	x7, x0, x4
 234:	mov	x1, x0
 238:	cmp	x0, x7
 23c:	b.eq	258 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x258>  // b.none
 240:	ldp	x6, x5, [x1]
 244:	stp	x6, x5, [x3]
 248:	add	x1, x1, #0x10
 24c:	cmp	x7, x1
 250:	add	x3, x3, #0x10
 254:	b.ne	240 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x240>  // b.any
 258:	add	x1, x20, #0x50
 25c:	cmp	x0, x1
 260:	b.eq	274 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x274>  // b.none
 264:	bl	0 <free>
 268:	ldr	w24, [x20, #72]
 26c:	mov	w2, w24
 270:	ubfiz	x4, x24, #4, #32
 274:	str	x28, [x20, #64]
 278:	str	w27, [x20, #76]
 27c:	b	a0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xa0>
 280:	mov	x26, x0
 284:	mov	x1, x0
 288:	mov	w27, #0xffffffff            	// #-1
 28c:	mov	x0, #0xffffffff0           	// #68719476720
 290:	b	210 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x210>
 294:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 298:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 29c:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2a0:	add	x3, x3, #0x0
 2a4:	add	x1, x1, #0x0
 2a8:	add	x0, x0, #0x0
 2ac:	mov	w2, #0xdc                  	// #220
 2b0:	stp	x27, x28, [sp, #80]
 2b4:	bl	0 <__assert_fail>
 2b8:	stp	x27, x28, [sp, #80]
 2bc:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2c0:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2c4:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2c8:	add	x3, x3, #0x0
 2cc:	add	x1, x1, #0x0
 2d0:	add	x0, x0, #0x0
 2d4:	mov	w2, #0xba                  	// #186
 2d8:	bl	0 <__assert_fail>
 2dc:	stp	x27, x28, [sp, #80]
 2e0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2e4:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2e8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 2ec:	add	x3, x3, #0x0
 2f0:	add	x1, x1, #0x0
 2f4:	add	x0, x0, #0x0
 2f8:	mov	w2, #0x43                  	// #67
 2fc:	bl	0 <__assert_fail>
 300:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 304:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 308:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 30c:	add	x3, x3, #0x0
 310:	add	x1, x1, #0x0
 314:	add	x0, x0, #0x0
 318:	mov	w2, #0x105                 	// #261
 31c:	stp	x27, x28, [sp, #80]
 320:	bl	0 <__assert_fail>
 324:	mov	w1, w26
 328:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 32c:	add	x0, x0, #0x0
 330:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 334:	b	84 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x84>
 338:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 33c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 340:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 344:	add	x3, x3, #0x0
 348:	add	x1, x1, #0x0
 34c:	add	x0, x0, #0x0
 350:	mov	w2, #0xfb                  	// #251
 354:	bl	0 <__assert_fail>
 358:	mov	w1, w26
 35c:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 360:	add	x0, x0, #0x0
 364:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 368:	ldr	w25, [x20, #24]
 36c:	b	128 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x128>
 370:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 374:	mov	w1, #0x1                   	// #1
 378:	add	x0, x0, #0x0
 37c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 380:	ldr	w24, [x20, #72]
 384:	b	220 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x220>

Disassembly of section .text._ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	cmp	x2, #0x1
   4:	b.ne	1c <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x1c>  // b.any
   8:	mov	x3, x0
   c:	ldrb	w0, [x0, #9]
  10:	ldr	x1, [x1]
  14:	ldr	x2, [x3, #16]
  18:	b	8580 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x3, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  24:	adrp	x1, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  28:	mov	x29, sp
  2c:	adrp	x0, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x308                 	// #776
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	cmp	x2, #0x2
   4:	b.ne	1c <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x1c>  // b.any
   8:	mov	x3, x0
   c:	ldrb	w0, [x0, #9]
  10:	ldp	x1, x2, [x1]
  14:	ldr	x3, [x3, #16]
  18:	b	8838 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x3, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  24:	adrp	x1, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  28:	mov	x29, sp
  2c:	adrp	x0, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x33f                 	// #831
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	cmp	x2, #0x3
   4:	b.ne	24 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x24>  // b.any
   8:	mov	x4, x0
   c:	mov	x3, x1
  10:	ldp	x1, x2, [x1]
  14:	ldrb	w0, [x0, #9]
  18:	ldr	x3, [x3, #16]
  1c:	ldr	x4, [x4, #16]
  20:	b	8b60 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
  24:	stp	x29, x30, [sp, #-16]!
  28:	adrp	x3, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  2c:	adrp	x1, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	mov	x29, sp
  34:	adrp	x0, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  38:	add	x3, x3, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, x0, #0x0
  44:	mov	w2, #0x376                 	// #886
  48:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	cbz	x1, 40 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x40>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	ldr	x1, [x19, #24]
  1c:	mov	x0, x20
  20:	bl	0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  24:	mov	x0, x19
  28:	ldr	x19, [x19, #16]
  2c:	bl	0 <_ZdlPv>
  30:	cbnz	x19, 18 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x18>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ret

Disassembly of section .text._ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED2Ev:

0000000000000000 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	cbz	x19, 34 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED1Ev+0x34>
  14:	mov	x20, x0
  18:	ldr	x1, [x19, #24]
  1c:	mov	x0, x20
  20:	bl	0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED1Ev>
  24:	mov	x0, x19
  28:	ldr	x19, [x19, #16]
  2c:	bl	0 <_ZdlPv>
  30:	cbnz	x19, 18 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED1Ev+0x18>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w1, [x0, #8]
  10:	cmp	w1, #0x8
  14:	b.ne	24 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x24>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	bl	0 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x3, 0 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x1, 0 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	adrp	x0, 0 <_ZN4llvm4castINS_7IntInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x108                 	// #264
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	str	x21, [sp, #32]
  14:	mov	x21, x0
  18:	str	x1, [sp, #56]
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	118 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x118>  // b.pmore
  28:	ldr	w2, [x21, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x19
  58:	csel	x1, x2, x19, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xe8>  // b.pmore
  64:	mov	w19, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, 100 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x100>
  7c:	ldr	x0, [x21]
  80:	ldr	w1, [x21, #8]
  84:	add	x1, x0, x1, lsl #4
  88:	cmp	x0, x1
  8c:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xc0>  // b.none
  90:	sub	x3, x1, x0
  94:	mov	x2, #0x0                   	// #0
  98:	sub	x3, x3, #0x10
  9c:	mov	x1, #0x0                   	// #0
  a0:	lsr	x3, x3, #4
  a4:	add	x3, x3, #0x1
  a8:	ldr	q0, [x0, x1]
  ac:	add	x2, x2, #0x1
  b0:	cmp	x3, x2
  b4:	str	q0, [x20, x1]
  b8:	add	x1, x1, #0x10
  bc:	b.hi	a8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xa8>  // b.pmore
  c0:	add	x1, x21, #0x10
  c4:	cmp	x0, x1
  c8:	b.eq	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xd0>  // b.none
  cc:	bl	0 <free>
  d0:	str	x20, [x21]
  d4:	str	w19, [x21, #12]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #80
  e4:	ret
  e8:	mov	x0, #0xffffffff0           	// #68719476720
  ec:	mov	w19, #0xffffffff            	// #-1
  f0:	str	x3, [sp, #64]
  f4:	bl	0 <malloc>
  f8:	mov	x20, x0
  fc:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x7c>
 100:	mov	x20, #0x0                   	// #0
 104:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
 108:	mov	w1, #0x1                   	// #1
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 114:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x7c>
 118:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
 11c:	mov	w1, #0x1                   	// #1
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 128:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x28>

Disassembly of section .text._ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x24, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x20, x24
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	148 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x148>  // b.none
  34:	mov	x23, x0
  38:	mov	x25, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x19, x24
  44:	cbz	x0, 130 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x130>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x26, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	11c <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x11c>  // b.plast
  58:	mov	x0, x26
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x26, x0, x26
  68:	add	x21, x0, #0x10
  6c:	add	x0, x22, x27
  70:	cmp	x19, x24
  74:	ldr	x1, [x25]
  78:	str	x1, [x22, x27]
  7c:	ldr	x1, [x25, #8]
  80:	str	x1, [x0, #8]
  84:	b.eq	b4 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xb4>  // b.none
  88:	mov	x3, x22
  8c:	mov	x2, x24
  90:	ldp	x4, x1, [x2]
  94:	stp	x4, x1, [x3]
  98:	add	x2, x2, #0x10
  9c:	cmp	x19, x2
  a0:	add	x3, x3, #0x10
  a4:	b.ne	90 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x90>  // b.any
  a8:	sub	x21, x19, x24
  ac:	add	x21, x21, #0x10
  b0:	add	x21, x22, x21
  b4:	cmp	x19, x20
  b8:	b.eq	ec <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>  // b.none
  bc:	mov	x2, x19
  c0:	mov	x3, x21
  c4:	nop
  c8:	ldr	x1, [x2, #8]
  cc:	str	x1, [x3, #8]
  d0:	ldr	x1, [x2], #16
  d4:	str	x1, [x3]
  d8:	add	x3, x3, #0x10
  dc:	cmp	x2, x20
  e0:	b.ne	c8 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc8>  // b.any
  e4:	sub	x2, x2, x19
  e8:	add	x21, x21, x2
  ec:	cbz	x24, f8 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf8>
  f0:	mov	x0, x24
  f4:	bl	0 <_ZdlPv>
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldr	x27, [sp, #80]
 100:	stp	x22, x21, [x23]
 104:	str	x26, [x23, #16]
 108:	ldp	x21, x22, [sp, #32]
 10c:	ldp	x23, x24, [sp, #48]
 110:	ldp	x25, x26, [sp, #64]
 114:	ldp	x29, x30, [sp], #96
 118:	ret
 11c:	cbnz	x0, 138 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x138>
 120:	mov	x21, #0x10                  	// #16
 124:	mov	x26, #0x0                   	// #0
 128:	mov	x22, #0x0                   	// #0
 12c:	b	6c <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x6c>
 130:	mov	x26, #0x10                  	// #16
 134:	b	58 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 138:	cmp	x0, x3
 13c:	csel	x0, x0, x3, ls  // ls = plast
 140:	lsl	x26, x0, #4
 144:	b	58 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 148:	adrp	x0, 0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 14c:	add	x0, x0, #0x0
 150:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>

Disassembly of section .text._ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_:

0000000000000000 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIlSaIlEE17_M_realloc_insertIJlEEEvN9__gnu_cxx17__normal_iteratorIPlS1_EEDpOT_+0x58>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x3, x8, #0x10
   8:	mov	x29, sp
   c:	ldr	x1, [x0, #24]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x8
  18:	cbz	x1, 44 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x44>
  1c:	ldr	x2, [x0, #32]
  20:	str	x3, [x8]
  24:	mov	x0, x8
  28:	mov	w3, #0x0                   	// #0
  2c:	add	x2, x1, x2
  30:	bl	0 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	stp	x3, xzr, [x8]
  48:	mov	x0, x19
  4c:	strb	wzr, [x8, #16]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x3, x8, #0x10
   8:	mov	x29, sp
   c:	ldr	x1, [x0, #24]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x8
  18:	cbz	x1, 44 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x44>
  1c:	ldr	x2, [x0, #32]
  20:	str	x3, [x8]
  24:	mov	x0, x8
  28:	mov	w3, #0x0                   	// #0
  2c:	add	x2, x1, x2
  30:	bl	0 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	stp	x3, xzr, [x8]
  48:	mov	x0, x19
  4c:	strb	wzr, [x8, #16]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZNK4llvm9FieldInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	add	x22, sp, #0x30
  14:	ldr	x0, [x0, #24]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x8
  20:	mov	x8, x22
  24:	ldr	x1, [x0]
  28:	ldr	x1, [x1, #40]
  2c:	blr	x1
  30:	ldr	x1, [sp, #56]
  34:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  38:	cmp	x1, x0
  3c:	b.eq	1e8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1e8>  // b.none
  40:	adrp	x1, 0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
  44:	add	x1, x1, #0x0
  48:	mov	x2, #0x1                   	// #1
  4c:	mov	x0, x22
  50:	add	x20, sp, #0x50
  54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  58:	mov	x1, x0
  5c:	add	x2, x20, #0x10
  60:	str	x2, [sp, #80]
  64:	ldr	x2, [x1], #16
  68:	cmp	x2, x1
  6c:	b.eq	1dc <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1dc>  // b.none
  70:	ldr	x3, [x0, #16]
  74:	str	x2, [sp, #80]
  78:	str	x3, [sp, #96]
  7c:	strb	wzr, [x0, #16]
  80:	ldr	x2, [x0, #8]
  84:	str	x2, [sp, #88]
  88:	ldr	x2, [x21, #32]
  8c:	stp	x1, xzr, [x0]
  90:	ldr	x1, [x2, #24]
  94:	cbz	x1, 1c4 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1c4>
  98:	add	x21, sp, #0x70
  9c:	mov	w3, #0x0                   	// #0
  a0:	add	x4, x21, #0x10
  a4:	mov	x0, x21
  a8:	ldr	x2, [x2, #32]
  ac:	str	x4, [sp, #112]
  b0:	add	x2, x1, x2
  b4:	bl	0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
  b8:	ldp	x1, x2, [sp, #112]
  bc:	add	x0, x20, #0x10
  c0:	ldp	x3, x4, [sp, #80]
  c4:	mov	x6, #0xf                   	// #15
  c8:	cmp	x3, x0
  cc:	add	x5, x4, x2
  d0:	ldr	x0, [sp, #96]
  d4:	csel	x0, x0, x6, ne  // ne = any
  d8:	cmp	x5, x0
  dc:	b.ls	f8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0xf8>  // b.plast
  e0:	ldr	x0, [sp, #128]
  e4:	add	x7, x21, #0x10
  e8:	cmp	x1, x7
  ec:	csel	x0, x0, x6, ne  // ne = any
  f0:	cmp	x5, x0
  f4:	b.ls	18c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x18c>  // b.plast
  f8:	mov	x0, x20
  fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 100:	mov	x1, x0
 104:	add	x2, x19, #0x10
 108:	mov	x0, x1
 10c:	str	x2, [x19]
 110:	ldr	x2, [x0], #16
 114:	cmp	x2, x0
 118:	b.eq	1b8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1b8>  // b.none
 11c:	ldr	x3, [x1, #16]
 120:	str	x2, [x19]
 124:	str	x3, [x19, #16]
 128:	str	x0, [x1]
 12c:	add	x21, x21, #0x10
 130:	ldr	x0, [x1, #8]
 134:	str	x0, [x19, #8]
 138:	ldr	x0, [sp, #112]
 13c:	str	xzr, [x1, #8]
 140:	strb	wzr, [x1, #16]
 144:	cmp	x0, x21
 148:	b.eq	150 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x150>  // b.none
 14c:	bl	0 <_ZdlPv>
 150:	ldr	x0, [sp, #80]
 154:	add	x20, x20, #0x10
 158:	cmp	x0, x20
 15c:	b.eq	164 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x164>  // b.none
 160:	bl	0 <_ZdlPv>
 164:	ldr	x0, [sp, #48]
 168:	add	x22, x22, #0x10
 16c:	cmp	x0, x22
 170:	b.eq	178 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x178>  // b.none
 174:	bl	0 <_ZdlPv>
 178:	mov	x0, x19
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x21, x22, [sp, #32]
 184:	ldp	x29, x30, [sp], #144
 188:	ret
 18c:	mov	x1, #0x0                   	// #0
 190:	mov	x2, #0x0                   	// #0
 194:	mov	x0, x21
 198:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 19c:	mov	x1, x0
 1a0:	add	x2, x19, #0x10
 1a4:	mov	x0, x1
 1a8:	str	x2, [x19]
 1ac:	ldr	x2, [x0], #16
 1b0:	cmp	x2, x0
 1b4:	b.ne	11c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x11c>  // b.any
 1b8:	ldp	x2, x3, [x1, #16]
 1bc:	stp	x2, x3, [x19, #16]
 1c0:	b	128 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x128>
 1c4:	add	x21, sp, #0x70
 1c8:	mov	x2, #0x0                   	// #0
 1cc:	add	x1, x21, #0x10
 1d0:	stp	x1, xzr, [sp, #112]
 1d4:	strb	wzr, [sp, #128]
 1d8:	b	bc <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0xbc>
 1dc:	ldp	x2, x3, [x0, #16]
 1e0:	stp	x2, x3, [sp, #96]
 1e4:	b	7c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x7c>
 1e8:	adrp	x0, 0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
 1ec:	add	x0, x0, #0x0
 1f0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8CodeInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x8
  14:	str	x21, [sp, #32]
  18:	cbz	x1, 12c <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x12c>
  1c:	add	x20, sp, #0x30
  20:	mov	w3, #0x0                   	// #0
  24:	add	x4, x20, #0x10
  28:	str	x4, [sp, #48]
  2c:	ldr	x2, [x0, #32]
  30:	mov	x0, x20
  34:	add	x2, x1, x2
  38:	bl	0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
  3c:	mov	x1, #0x0                   	// #0
  40:	mov	x2, #0x0                   	// #0
  44:	mov	x0, x20
  48:	add	x21, sp, #0x50
  4c:	adrp	x3, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
  50:	mov	x4, #0x2                   	// #2
  54:	add	x3, x3, #0x0
  58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  5c:	mov	x1, x0
  60:	add	x2, x21, #0x10
  64:	str	x2, [sp, #80]
  68:	ldr	x2, [x1], #16
  6c:	cmp	x2, x1
  70:	b.eq	140 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x140>  // b.none
  74:	ldr	x3, [x0, #16]
  78:	str	x2, [sp, #80]
  7c:	str	x3, [sp, #96]
  80:	ldr	x2, [x0, #8]
  84:	str	x2, [sp, #88]
  88:	stp	x1, xzr, [x0]
  8c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
  90:	ldr	x1, [sp, #88]
  94:	strb	wzr, [x0, #16]
  98:	sub	x0, x2, x1
  9c:	cmp	x0, #0x1
  a0:	b.ls	158 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x158>  // b.plast
  a4:	mov	x2, #0x2                   	// #2
  a8:	mov	x0, x21
  ac:	adrp	x1, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
  b0:	add	x1, x1, #0x0
  b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  b8:	mov	x1, x0
  bc:	add	x2, x19, #0x10
  c0:	str	x2, [x19]
  c4:	ldr	x2, [x0], #16
  c8:	cmp	x2, x0
  cc:	b.eq	14c <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x14c>  // b.none
  d0:	ldr	x3, [x1, #16]
  d4:	str	x2, [x19]
  d8:	str	x3, [x19, #16]
  dc:	str	x0, [x1]
  e0:	add	x21, x21, #0x10
  e4:	ldr	x0, [x1, #8]
  e8:	str	x0, [x19, #8]
  ec:	ldr	x0, [sp, #80]
  f0:	str	xzr, [x1, #8]
  f4:	strb	wzr, [x1, #16]
  f8:	cmp	x0, x21
  fc:	b.eq	104 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x104>  // b.none
 100:	bl	0 <_ZdlPv>
 104:	ldr	x0, [sp, #48]
 108:	add	x20, x20, #0x10
 10c:	cmp	x0, x20
 110:	b.eq	118 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x118>  // b.none
 114:	bl	0 <_ZdlPv>
 118:	mov	x0, x19
 11c:	ldp	x19, x20, [sp, #16]
 120:	ldr	x21, [sp, #32]
 124:	ldp	x29, x30, [sp], #112
 128:	ret
 12c:	add	x20, sp, #0x30
 130:	strb	wzr, [sp, #64]
 134:	add	x0, x20, #0x10
 138:	stp	x0, xzr, [sp, #48]
 13c:	b	3c <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x3c>
 140:	ldp	x2, x3, [x0, #16]
 144:	stp	x2, x3, [sp, #96]
 148:	b	80 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x80>
 14c:	ldp	x2, x3, [x1, #16]
 150:	stp	x2, x3, [x19, #16]
 154:	b	dc <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0xdc>
 158:	adrp	x0, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
 15c:	add	x0, x0, #0x0
 160:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm10StringInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x8
  14:	stp	x21, x22, [sp, #32]
  18:	cbz	x1, 124 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x124>
  1c:	add	x20, sp, #0x30
  20:	mov	w3, #0x0                   	// #0
  24:	add	x4, x20, #0x10
  28:	str	x4, [sp, #48]
  2c:	ldr	x2, [x0, #32]
  30:	mov	x0, x20
  34:	add	x2, x1, x2
  38:	bl	0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
  3c:	mov	x1, #0x0                   	// #0
  40:	mov	x2, #0x0                   	// #0
  44:	mov	x0, x20
  48:	add	x21, sp, #0x50
  4c:	adrp	x22, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
  50:	mov	x4, #0x1                   	// #1
  54:	add	x3, x22, #0x0
  58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  5c:	mov	x1, x0
  60:	add	x2, x21, #0x10
  64:	str	x2, [sp, #80]
  68:	ldr	x2, [x1], #16
  6c:	cmp	x2, x1
  70:	b.eq	138 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x138>  // b.none
  74:	ldr	x3, [x0, #16]
  78:	str	x2, [sp, #80]
  7c:	str	x3, [sp, #96]
  80:	ldr	x2, [x0, #8]
  84:	str	x2, [sp, #88]
  88:	stp	x1, xzr, [x0]
  8c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
  90:	ldr	x1, [sp, #88]
  94:	strb	wzr, [x0, #16]
  98:	cmp	x1, x2
  9c:	b.eq	150 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x150>  // b.none
  a0:	add	x1, x22, #0x0
  a4:	mov	x2, #0x1                   	// #1
  a8:	mov	x0, x21
  ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  b0:	add	x2, x19, #0x10
  b4:	str	x2, [x19]
  b8:	mov	x1, x0
  bc:	ldr	x2, [x0], #16
  c0:	cmp	x2, x0
  c4:	b.eq	144 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x144>  // b.none
  c8:	ldr	x3, [x1, #16]
  cc:	str	x2, [x19]
  d0:	str	x3, [x19, #16]
  d4:	str	x0, [x1]
  d8:	add	x21, x21, #0x10
  dc:	ldr	x0, [x1, #8]
  e0:	str	x0, [x19, #8]
  e4:	ldr	x0, [sp, #80]
  e8:	str	xzr, [x1, #8]
  ec:	strb	wzr, [x1, #16]
  f0:	cmp	x0, x21
  f4:	b.eq	fc <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xfc>  // b.none
  f8:	bl	0 <_ZdlPv>
  fc:	ldr	x0, [sp, #48]
 100:	add	x20, x20, #0x10
 104:	cmp	x0, x20
 108:	b.eq	110 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x110>  // b.none
 10c:	bl	0 <_ZdlPv>
 110:	mov	x0, x19
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x29, x30, [sp], #112
 120:	ret
 124:	add	x20, sp, #0x30
 128:	strb	wzr, [sp, #64]
 12c:	add	x0, x20, #0x10
 130:	stp	x0, xzr, [sp, #48]
 134:	b	3c <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x3c>
 138:	ldp	x2, x3, [x0, #16]
 13c:	stp	x2, x3, [sp, #96]
 140:	b	80 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x80>
 144:	ldp	x2, x3, [x1, #16]
 148:	stp	x2, x3, [x19, #16]
 14c:	b	d4 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xd4>
 150:	adrp	x0, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm7VarInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x8
  10:	bl	3bf0 <_ZNK4llvm7VarInit7getNameEv>
  14:	mov	x2, x1
  18:	mov	x1, x0
  1c:	add	x0, x19, #0x10
  20:	str	x0, [x19]
  24:	cbz	x1, 48 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x48>
  28:	mov	x0, x19
  2c:	add	x2, x1, x2
  30:	mov	w3, #0x0                   	// #0
  34:	bl	0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	str	xzr, [x19, #8]
  4c:	mov	x0, x19
  50:	strb	wzr, [x19, #16]
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x1
  10:	mov	x21, x0
  14:	mov	x0, #0x48                  	// #72
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	bl	0 <_Znwm>
  2c:	mov	x19, x0
  30:	ldr	x1, [x22]
  34:	cbz	x1, 23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x23c>
  38:	ldr	x2, [x22, #8]
  3c:	add	x25, x0, #0x30
  40:	mov	w3, #0x0                   	// #0
  44:	add	x0, x0, #0x20
  48:	add	x2, x1, x2
  4c:	str	x25, [x19, #32]
  50:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  54:	add	x24, x21, #0x8
  58:	ldr	x20, [x21, #16]
  5c:	ldr	x23, [x22, #16]
  60:	str	xzr, [x22, #16]
  64:	str	x23, [x19, #64]
  68:	cbz	x20, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x260>
  6c:	ldp	x26, x28, [x19, #32]
  70:	mov	x22, #0xffffffff80000000    	// #-2147483648
  74:	nop
  78:	ldp	x1, x27, [x20, #32]
  7c:	mov	x0, x26
  80:	cmp	x28, x27
  84:	csel	x2, x28, x27, ls  // ls = plast
  88:	cbz	x2, 9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x9c>
  8c:	stp	x1, x2, [sp, #96]
  90:	bl	0 <memcmp>
  94:	ldp	x1, x2, [sp, #96]
  98:	cbnz	w0, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xb8>
  9c:	sub	x3, x28, x27
  a0:	mov	x4, #0x7fffffff            	// #2147483647
  a4:	mov	w0, w3
  a8:	cmp	x3, x4
  ac:	b.gt	d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xd0>
  b0:	cmp	x3, x22
  b4:	b.lt	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xbc>  // b.tstop
  b8:	tbz	w0, #31, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xd0>
  bc:	ldr	x0, [x20, #16]
  c0:	mov	w3, #0x1                   	// #1
  c4:	cbz	x0, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xdc>
  c8:	mov	x20, x0
  cc:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x78>
  d0:	ldr	x0, [x20, #24]
  d4:	mov	w3, #0x0                   	// #0
  d8:	cbnz	x0, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xc8>
  dc:	mov	x22, x20
  e0:	cbnz	w3, 210 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x210>
  e4:	cbz	x2, f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xf8>
  e8:	mov	x0, x1
  ec:	mov	x1, x26
  f0:	bl	0 <memcmp>
  f4:	cbnz	w0, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x114>
  f8:	sub	x0, x27, x28
  fc:	mov	x1, #0x7fffffff            	// #2147483647
 100:	cmp	x0, x1
 104:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x118>
 108:	mov	x1, #0xffffffff80000000    	// #-2147483648
 10c:	cmp	x0, x1
 110:	b.lt	1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1b8>  // b.tstop
 114:	tbnz	w0, #31, 1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1b8>
 118:	cbz	x23, 17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x17c>
 11c:	ldr	x0, [x23, #88]
 120:	add	x1, x23, #0x68
 124:	add	x22, x23, #0x58
 128:	cmp	x0, x1
 12c:	b.eq	134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x134>  // b.none
 130:	bl	0 <free>
 134:	ldr	x0, [x23, #72]
 138:	add	x21, x23, #0x48
 13c:	cmp	x22, x0
 140:	b.eq	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x148>  // b.none
 144:	bl	0 <free>
 148:	ldr	x0, [x23, #56]
 14c:	cmp	x21, x0
 150:	b.eq	158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x158>  // b.none
 154:	bl	0 <free>
 158:	ldr	x0, [x23, #8]
 15c:	add	x1, x23, #0x18
 160:	cmp	x0, x1
 164:	b.eq	16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x16c>  // b.none
 168:	bl	0 <free>
 16c:	mov	x0, x23
 170:	mov	x1, #0x80                  	// #128
 174:	bl	0 <_ZdlPvm>
 178:	ldr	x26, [x19, #32]
 17c:	cmp	x26, x25
 180:	b.eq	18c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x18c>  // b.none
 184:	mov	x0, x26
 188:	bl	0 <_ZdlPv>
 18c:	mov	x0, x19
 190:	bl	0 <_ZdlPv>
 194:	mov	x0, x20
 198:	mov	x1, #0x0                   	// #0
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x23, x24, [sp, #48]
 1a8:	ldp	x25, x26, [sp, #64]
 1ac:	ldp	x27, x28, [sp, #80]
 1b0:	ldp	x29, x30, [sp], #112
 1b4:	ret
 1b8:	cbz	x22, 2cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2cc>
 1bc:	cmp	x24, x22
 1c0:	mov	w0, #0x1                   	// #1
 1c4:	b.ne	278 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x278>  // b.any
 1c8:	mov	x3, x24
 1cc:	mov	x2, x22
 1d0:	mov	x1, x19
 1d4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 1d8:	ldr	x2, [x21, #40]
 1dc:	mov	x3, #0x1                   	// #1
 1e0:	mov	x1, #0x0                   	// #0
 1e4:	mov	x0, x19
 1e8:	add	x2, x2, x3
 1ec:	str	x2, [x21, #40]
 1f0:	bfxil	x1, x3, #0, #8
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x21, x22, [sp, #32]
 1fc:	ldp	x23, x24, [sp, #48]
 200:	ldp	x25, x26, [sp, #64]
 204:	ldp	x27, x28, [sp, #80]
 208:	ldp	x29, x30, [sp], #112
 20c:	ret
 210:	ldr	x0, [x21, #24]
 214:	cmp	x0, x20
 218:	b.eq	2c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2c4>  // b.none
 21c:	mov	x0, x20
 220:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 224:	ldp	x1, x27, [x0, #32]
 228:	mov	x22, x20
 22c:	mov	x20, x0
 230:	cmp	x28, x27
 234:	csel	x2, x28, x27, ls  // ls = plast
 238:	b	e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe4>
 23c:	ldr	x20, [x21, #16]
 240:	add	x25, x0, #0x30
 244:	stp	x25, xzr, [x0, #32]
 248:	add	x24, x21, #0x8
 24c:	strb	wzr, [x0, #48]
 250:	ldr	x23, [x22, #16]
 254:	str	xzr, [x22, #16]
 258:	str	x23, [x19, #64]
 25c:	cbnz	x20, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x6c>
 260:	ldr	x0, [x21, #24]
 264:	mov	x22, x24
 268:	cmp	x24, x0
 26c:	b.ne	2d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2d8>  // b.any
 270:	mov	w0, #0x1                   	// #1
 274:	b	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 278:	ldr	x20, [x22, #40]
 27c:	cmp	x28, x20
 280:	csel	x2, x28, x20, ls  // ls = plast
 284:	cbz	x2, 298 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x298>
 288:	ldr	x1, [x22, #32]
 28c:	mov	x0, x26
 290:	bl	0 <memcmp>
 294:	cbnz	w0, 2bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2bc>
 298:	sub	x28, x28, x20
 29c:	mov	x1, #0x7fffffff            	// #2147483647
 2a0:	mov	w0, #0x0                   	// #0
 2a4:	cmp	x28, x1
 2a8:	b.gt	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 2ac:	mov	x0, #0xffffffff80000000    	// #-2147483648
 2b0:	cmp	x28, x0
 2b4:	b.lt	270 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x270>  // b.tstop
 2b8:	mov	w0, w28
 2bc:	lsr	w0, w0, #31
 2c0:	b	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 2c4:	mov	x22, x20
 2c8:	b	1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1bc>
 2cc:	mov	x20, #0x0                   	// #0
 2d0:	cbnz	x23, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x11c>
 2d4:	b	17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x17c>
 2d8:	mov	x20, x24
 2dc:	ldp	x26, x28, [x19, #32]
 2e0:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x21c>

Disassembly of section .text._ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x4, x8, #0x10
   8:	mov	x0, x8
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	w3, #0x0                   	// #0
  18:	str	x4, [x8]
  1c:	mov	x19, x8
  20:	adrp	x1, 0 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>
  24:	adrp	x2, 0 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>
  28:	add	x1, x1, #0x0
  2c:	add	x2, x2, #0x0
  30:	bl	0 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x4, x8, #0x10
   8:	mov	x0, x8
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	w3, #0x0                   	// #0
  18:	str	x4, [x8]
  1c:	mov	x19, x8
  20:	adrp	x1, 0 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>
  24:	adrp	x2, 0 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>
  28:	add	x1, x1, #0x0
  2c:	add	x2, x2, #0x0
  30:	bl	0 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x4, x8, #0x10
   8:	mov	x0, x8
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	w3, #0x0                   	// #0
  18:	str	x4, [x8]
  1c:	mov	x19, x8
  20:	adrp	x1, 0 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>
  24:	adrp	x2, 0 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>
  28:	add	x1, x1, #0x0
  2c:	add	x2, x2, #0x0
  30:	bl	0 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x4, x8, #0x10
   8:	mov	x0, x8
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	w3, #0x0                   	// #0
  18:	str	x4, [x8]
  1c:	mov	x19, x8
  20:	adrp	x1, 0 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>
  24:	adrp	x2, 0 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>
  28:	add	x1, x1, #0x0
  2c:	add	x2, x2, #0x0
  30:	bl	0 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNK4llvm7BitInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x3, x8, #0x10
   8:	adrp	x2, 0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
   c:	mov	x29, sp
  10:	ldrb	w0, [x0, #24]
  14:	add	x2, x2, #0x0
  18:	str	x19, [sp, #16]
  1c:	adrp	x1, 0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
  20:	cmp	w0, #0x0
  24:	add	x1, x1, #0x0
  28:	str	x3, [x8]
  2c:	csel	x1, x1, x2, ne  // ne = any
  30:	mov	x19, x8
  34:	mov	x0, x8
  38:	add	x2, x1, #0x1
  3c:	mov	w3, #0x0                   	// #0
  40:	bl	0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
  44:	mov	x0, x19
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, 58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x58>
   8:	ldr	x5, [x1]
   c:	mov	x3, x0
  10:	cmn	x5, #0x8
  14:	cset	w0, ne  // ne = any
  18:	cmn	x5, #0x10
  1c:	csel	w0, w0, wzr, ne  // ne = any
  20:	cbz	w0, b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0xb8>
  24:	lsr	w1, w5, #4
  28:	sub	w4, w4, #0x1
  2c:	eor	w1, w1, w5, lsr #9
  30:	mov	w7, #0x18                  	// #24
  34:	and	w1, w1, w4
  38:	ldr	x3, [x3, #8]
  3c:	umull	x6, w1, w7
  40:	add	x8, x3, x6
  44:	ldr	x6, [x3, x6]
  48:	cmp	x5, x6
  4c:	b.ne	64 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x64>  // b.any
  50:	str	x8, [x2]
  54:	ret
  58:	mov	w0, #0x0                   	// #0
  5c:	str	xzr, [x2]
  60:	ret
  64:	mov	w10, #0x1                   	// #1
  68:	mov	x9, #0x0                   	// #0
  6c:	cmn	x6, #0x8
  70:	b.ne	88 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x88>  // b.any
  74:	cmp	x9, #0x0
  78:	mov	w0, #0x0                   	// #0
  7c:	csel	x9, x9, x8, ne  // ne = any
  80:	str	x9, [x2]
  84:	ret
  88:	add	w1, w10, w1
  8c:	cmp	x9, #0x0
  90:	and	w1, w4, w1
  94:	ccmn	x6, #0x10, #0x0, eq  // eq = none
  98:	csel	x9, x9, x8, ne  // ne = any
  9c:	add	w10, w10, #0x1
  a0:	umull	x6, w1, w7
  a4:	add	x8, x3, x6
  a8:	ldr	x6, [x3, x6]
  ac:	cmp	x5, x6
  b0:	b.eq	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x50>  // b.none
  b4:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_+0x6c>
  b8:	stp	x29, x30, [sp, #-16]!
  bc:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_>
  c0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_>
  c4:	mov	x29, sp
  c8:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E15LookupBucketForIS3_EEbRKT_RPKSA_>
  cc:	add	x3, x3, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x0, x0, #0x0
  d8:	mov	w2, #0x250                 	// #592
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, 58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x58>
   8:	ldr	x5, [x1]
   c:	mov	x3, x0
  10:	cmn	x5, #0x8
  14:	cset	w0, ne  // ne = any
  18:	cmn	x5, #0x10
  1c:	csel	w0, w0, wzr, ne  // ne = any
  20:	cbz	w0, b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0xb8>
  24:	lsr	w1, w5, #4
  28:	sub	w4, w4, #0x1
  2c:	eor	w1, w1, w5, lsr #9
  30:	ldr	x6, [x3, #8]
  34:	and	w7, w1, w4
  38:	mov	x1, x7
  3c:	ubfiz	x3, x7, #3, #28
  40:	ldr	x7, [x6, x7, lsl #3]
  44:	add	x3, x6, x3
  48:	cmp	x5, x7
  4c:	b.ne	64 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x64>  // b.any
  50:	str	x3, [x2]
  54:	ret
  58:	mov	w0, #0x0                   	// #0
  5c:	str	xzr, [x2]
  60:	ret
  64:	mov	w9, #0x1                   	// #1
  68:	mov	x8, #0x0                   	// #0
  6c:	cmn	x7, #0x8
  70:	b.ne	88 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x88>  // b.any
  74:	cmp	x8, #0x0
  78:	mov	w0, #0x0                   	// #0
  7c:	csel	x8, x8, x3, ne  // ne = any
  80:	str	x8, [x2]
  84:	ret
  88:	add	w1, w9, w1
  8c:	cmp	x8, #0x0
  90:	and	w10, w4, w1
  94:	ccmn	x7, #0x10, #0x0, eq  // eq = none
  98:	csel	x8, x8, x3, ne  // ne = any
  9c:	add	w9, w9, #0x1
  a0:	and	w1, w4, w1
  a4:	add	x3, x6, x10, lsl #3
  a8:	ldr	x7, [x6, x10, lsl #3]
  ac:	cmp	x5, x7
  b0:	b.eq	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x50>  // b.none
  b4:	b	6c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_+0x6c>
  b8:	stp	x29, x30, [sp, #-16]!
  bc:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_>
  c0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_>
  c4:	mov	x29, sp
  c8:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E15LookupBucketForIS3_EEbRKT_RPKS9_>
  cc:	add	x3, x3, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x0, x0, #0x0
  d8:	mov	w2, #0x250                 	// #592
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	x19, [x0, #16]
  14:	cbz	x19, 78 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x78>
  18:	ldr	x5, [x1]
  1c:	mov	w4, #0x1                   	// #1
  20:	ldr	x3, [x19, #32]
  24:	cmp	x5, x3
  28:	b.ge	4c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x4c>  // b.tcont
  2c:	nop
  30:	ldr	x2, [x19, #16]
  34:	cbz	x2, 58 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x58>
  38:	mov	x19, x2
  3c:	mov	w4, #0x1                   	// #1
  40:	ldr	x3, [x19, #32]
  44:	cmp	x5, x3
  48:	b.lt	30 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x30>  // b.tstop
  4c:	ldr	x2, [x19, #24]
  50:	mov	w4, #0x0                   	// #0
  54:	cbnz	x2, 38 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x38>
  58:	mov	x1, x19
  5c:	cbnz	w4, 7c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x7c>
  60:	cmp	x5, x3
  64:	csel	x0, x19, xzr, le
  68:	csel	x1, x1, xzr, gt
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret
  78:	add	x19, x0, #0x8
  7c:	ldr	x0, [x0, #24]
  80:	cmp	x0, x19
  84:	b.eq	a4 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0xa4>  // b.none
  88:	mov	x0, x19
  8c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  90:	mov	x1, x19
  94:	mov	x19, x0
  98:	ldr	x5, [x20]
  9c:	ldr	x3, [x0, #32]
  a0:	b	60 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE24_M_get_insert_unique_posERS1_+0x60>
  a4:	mov	x1, x19
  a8:	mov	x0, #0x0                   	// #0
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	add	x0, x0, #0x8
  1c:	mov	x22, x2
  20:	cmp	x1, x0
  24:	b.eq	c4 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0xc4>  // b.none
  28:	ldr	x0, [x1, #32]
  2c:	str	x23, [sp, #48]
  30:	ldr	x23, [x2]
  34:	cmp	x23, x0
  38:	b.ge	84 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x84>  // b.tcont
  3c:	ldr	x19, [x21, #24]
  40:	cmp	x19, x1
  44:	b.eq	1a4 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1a4>  // b.none
  48:	mov	x0, x1
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	mov	x3, x0
  54:	ldr	x0, [x0, #32]
  58:	cmp	x23, x0
  5c:	b.le	188 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x188>
  60:	ldr	x1, [x3, #24]
  64:	ldp	x21, x22, [sp, #32]
  68:	cmp	x1, #0x0
  6c:	csel	x0, x20, xzr, ne  // ne = any
  70:	csel	x1, x3, x20, eq  // eq = none
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x23, [sp, #48]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	b.le	154 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x154>
  88:	ldr	x0, [x21, #32]
  8c:	cmp	x0, x1
  90:	b.eq	1ec <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1ec>  // b.none
  94:	mov	x0, x1
  98:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  9c:	mov	x3, x0
  a0:	ldr	x0, [x0, #32]
  a4:	cmp	x23, x0
  a8:	b.ge	188 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x188>  // b.tcont
  ac:	ldr	x1, [x20, #24]
  b0:	ldr	x23, [sp, #48]
  b4:	cmp	x1, #0x0
  b8:	csel	x0, x3, xzr, ne  // ne = any
  bc:	csel	x1, x3, x20, ne  // ne = any
  c0:	b	160 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x160>
  c4:	ldr	x0, [x21, #40]
  c8:	cbz	x0, e0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0xe0>
  cc:	ldr	x0, [x21, #32]
  d0:	ldr	x1, [x22]
  d4:	ldr	x2, [x0, #32]
  d8:	cmp	x2, x1
  dc:	b.lt	170 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x170>  // b.tstop
  e0:	ldr	x19, [x21, #16]
  e4:	cbz	x19, 1c0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1c0>
  e8:	ldr	x3, [x22]
  ec:	mov	w2, #0x1                   	// #1
  f0:	ldr	x1, [x19, #32]
  f4:	cmp	x3, x1
  f8:	b.ge	11c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x11c>  // b.tcont
  fc:	nop
 100:	ldr	x0, [x19, #16]
 104:	cbz	x0, 128 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x128>
 108:	mov	x19, x0
 10c:	mov	w2, #0x1                   	// #1
 110:	ldr	x1, [x19, #32]
 114:	cmp	x3, x1
 118:	b.lt	100 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x100>  // b.tstop
 11c:	ldr	x0, [x19, #24]
 120:	mov	w2, #0x0                   	// #0
 124:	cbnz	x0, 108 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x108>
 128:	mov	x20, x19
 12c:	cbnz	w2, 1c4 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1c4>
 130:	cmp	x3, x1
 134:	csel	x19, x19, xzr, le
 138:	csel	x20, x20, xzr, gt
 13c:	mov	x0, x19
 140:	mov	x1, x20
 144:	ldp	x19, x20, [sp, #16]
 148:	ldp	x21, x22, [sp, #32]
 14c:	ldp	x29, x30, [sp], #64
 150:	ret
 154:	ldr	x23, [sp, #48]
 158:	mov	x0, x1
 15c:	mov	x1, #0x0                   	// #0
 160:	ldp	x19, x20, [sp, #16]
 164:	ldp	x21, x22, [sp, #32]
 168:	ldp	x29, x30, [sp], #64
 16c:	ret
 170:	mov	x1, x0
 174:	mov	x0, #0x0                   	// #0
 178:	ldp	x19, x20, [sp, #16]
 17c:	ldp	x21, x22, [sp, #32]
 180:	ldp	x29, x30, [sp], #64
 184:	ret
 188:	mov	x1, x22
 18c:	mov	x0, x21
 190:	ldp	x19, x20, [sp, #16]
 194:	ldp	x21, x22, [sp, #32]
 198:	ldr	x23, [sp, #48]
 19c:	ldp	x29, x30, [sp], #64
 1a0:	b	0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_>
 1a4:	mov	x0, x19
 1a8:	mov	x1, x19
 1ac:	ldp	x19, x20, [sp, #16]
 1b0:	ldp	x21, x22, [sp, #32]
 1b4:	ldr	x23, [sp, #48]
 1b8:	ldp	x29, x30, [sp], #64
 1bc:	ret
 1c0:	mov	x19, x20
 1c4:	ldr	x0, [x21, #24]
 1c8:	cmp	x0, x19
 1cc:	b.eq	1fc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1fc>  // b.none
 1d0:	mov	x0, x19
 1d4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1d8:	mov	x20, x19
 1dc:	mov	x19, x0
 1e0:	ldr	x3, [x22]
 1e4:	ldr	x1, [x0, #32]
 1e8:	b	130 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x130>
 1ec:	mov	x1, x0
 1f0:	mov	x0, #0x0                   	// #0
 1f4:	ldr	x23, [sp, #48]
 1f8:	b	160 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x160>
 1fc:	mov	x20, x19
 200:	mov	x19, #0x0                   	// #0
 204:	b	13c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x13c>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIPNS_10StringInitEEENS_14StringMapEntryIS3_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>:
   0:	mov	x4, x0
   4:	ldr	w0, [x0, #24]
   8:	cbz	w0, c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc0>
   c:	ldp	x6, x7, [x1]
  10:	cmn	x6, #0x8
  14:	b.eq	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc8>  // b.none
  18:	cmn	x6, #0x10
  1c:	b.eq	f8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xf8>  // b.none
  20:	lsr	w1, w7, #9
  24:	lsr	w3, w6, #9
  28:	eor	w3, w3, w6, lsr #4
  2c:	sub	w5, w0, #0x1
  30:	eor	w1, w1, w7, lsr #4
  34:	mov	w10, #0x1                   	// #1
  38:	orr	x3, x1, x3, lsl #32
  3c:	mov	x9, #0x0                   	// #0
  40:	sub	x3, x3, #0x1
  44:	mov	w8, #0x18                  	// #24
  48:	sub	x0, x3, x1, lsl #32
  4c:	ldr	x3, [x4, #8]
  50:	eor	x0, x0, x0, lsr #22
  54:	sub	x1, x0, #0x1
  58:	sub	x0, x1, x0, lsl #13
  5c:	eor	x0, x0, x0, lsr #8
  60:	add	x0, x0, x0, lsl #3
  64:	eor	x0, x0, x0, lsr #15
  68:	sub	x1, x0, #0x1
  6c:	sub	x0, x1, x0, lsl #27
  70:	eor	x0, x0, x0, lsr #31
  74:	and	w0, w5, w0
  78:	umull	x1, w0, w8
  7c:	add	x4, x3, x1
  80:	ldr	x1, [x3, x1]
  84:	cmp	x6, x1
  88:	b.eq	104 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x104>  // b.none
  8c:	cmn	x1, #0x8
  90:	b.eq	11c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x11c>  // b.none
  94:	cmn	x1, #0x10
  98:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb0>  // b.any
  9c:	ldr	x1, [x4, #8]
  a0:	cmp	x9, #0x0
  a4:	ccmn	x1, #0x10, #0x0, eq  // eq = none
  a8:	csel	x9, x9, x4, ne  // ne = any
  ac:	nop
  b0:	add	w0, w0, w10
  b4:	add	w10, w10, #0x1
  b8:	and	w0, w5, w0
  bc:	b	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x78>
  c0:	str	xzr, [x2]
  c4:	ret
  c8:	cmn	x7, #0x8
  cc:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x20>  // b.any
  d0:	stp	x29, x30, [sp, #-16]!
  d4:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  d8:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  dc:	mov	x29, sp
  e0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  e4:	add	x3, x3, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	w2, #0x250                 	// #592
  f4:	bl	0 <__assert_fail>
  f8:	cmn	x7, #0x10
  fc:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x20>  // b.any
 100:	b	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd0>
 104:	ldr	x11, [x4, #8]
 108:	cmp	x11, x7
 10c:	b.ne	8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x8c>  // b.any
 110:	mov	w0, #0x1                   	// #1
 114:	str	x4, [x2]
 118:	ret
 11c:	ldr	x1, [x4, #8]
 120:	cmn	x1, #0x8
 124:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb0>  // b.any
 128:	cmp	x9, #0x0
 12c:	mov	w0, #0x0                   	// #0
 130:	csel	x9, x9, x4, ne  // ne = any
 134:	str	x9, [x2]
 138:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xc0>
   8:	ldr	x5, [x1]
   c:	ldr	w6, [x1, #8]
  10:	cmn	x5, #0x8
  14:	b.eq	cc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xcc>  // b.none
  18:	cmn	x5, #0x10
  1c:	b.eq	fc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xfc>  // b.none
  20:	mov	w1, #0x25                  	// #37
  24:	lsr	w3, w5, #9
  28:	eor	w3, w3, w5, lsr #4
  2c:	sub	w4, w4, #0x1
  30:	mul	w1, w6, w1
  34:	mov	w10, #0x1                   	// #1
  38:	ldr	x7, [x0, #8]
  3c:	mov	x9, #0x0                   	// #0
  40:	orr	x0, x1, x3, lsl #32
  44:	mov	w3, #0x18                  	// #24
  48:	sub	x0, x0, #0x1
  4c:	sub	x0, x0, x1, lsl #32
  50:	eor	x0, x0, x0, lsr #22
  54:	sub	x1, x0, #0x1
  58:	sub	x0, x1, x0, lsl #13
  5c:	eor	x0, x0, x0, lsr #8
  60:	add	x0, x0, x0, lsl #3
  64:	eor	x0, x0, x0, lsr #15
  68:	sub	x1, x0, #0x1
  6c:	sub	x0, x1, x0, lsl #27
  70:	eor	x0, x0, x0, lsr #31
  74:	and	w0, w4, w0
  78:	umull	x1, w0, w3
  7c:	add	x8, x7, x1
  80:	ldr	x1, [x7, x1]
  84:	cmp	x5, x1
  88:	b.eq	108 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x108>  // b.none
  8c:	cmn	x1, #0x8
  90:	b.eq	120 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x120>  // b.none
  94:	cmn	x1, #0x10
  98:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xb0>  // b.any
  9c:	ldr	w1, [x8, #8]
  a0:	cmp	x9, #0x0
  a4:	ccmn	w1, #0x2, #0x0, eq  // eq = none
  a8:	csel	x9, x9, x8, ne  // ne = any
  ac:	nop
  b0:	add	w0, w0, w10
  b4:	add	w10, w10, #0x1
  b8:	and	w0, w4, w0
  bc:	b	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x78>
  c0:	mov	w0, #0x0                   	// #0
  c4:	str	xzr, [x2]
  c8:	ret
  cc:	cmn	w6, #0x1
  d0:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x20>  // b.any
  d4:	stp	x29, x30, [sp, #-16]!
  d8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  dc:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  e0:	mov	x29, sp
  e4:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  e8:	add	x3, x3, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x0, x0, #0x0
  f4:	mov	w2, #0x250                 	// #592
  f8:	bl	0 <__assert_fail>
  fc:	cmn	w6, #0x2
 100:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x20>  // b.any
 104:	b	d4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xd4>
 108:	ldr	w11, [x8, #8]
 10c:	cmp	w11, w6
 110:	b.ne	8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x8c>  // b.any
 114:	mov	w0, #0x1                   	// #1
 118:	str	x8, [x2]
 11c:	ret
 120:	ldr	w1, [x8, #8]
 124:	cmn	w1, #0x1
 128:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xb0>  // b.any
 12c:	cmp	x9, #0x0
 130:	mov	w0, #0x0                   	// #0
 134:	csel	x9, x9, x8, ne  // ne = any
 138:	str	x9, [x2]
 13c:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xc0>
   8:	ldr	x5, [x1]
   c:	ldr	w6, [x1, #8]
  10:	cmn	x5, #0x8
  14:	b.eq	cc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xcc>  // b.none
  18:	cmn	x5, #0x10
  1c:	b.eq	fc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xfc>  // b.none
  20:	mov	w1, #0x25                  	// #37
  24:	lsr	w3, w5, #9
  28:	eor	w3, w3, w5, lsr #4
  2c:	sub	w4, w4, #0x1
  30:	mul	w1, w6, w1
  34:	mov	w10, #0x1                   	// #1
  38:	ldr	x7, [x0, #8]
  3c:	mov	x9, #0x0                   	// #0
  40:	orr	x0, x1, x3, lsl #32
  44:	mov	w3, #0x18                  	// #24
  48:	sub	x0, x0, #0x1
  4c:	sub	x0, x0, x1, lsl #32
  50:	eor	x0, x0, x0, lsr #22
  54:	sub	x1, x0, #0x1
  58:	sub	x0, x1, x0, lsl #13
  5c:	eor	x0, x0, x0, lsr #8
  60:	add	x0, x0, x0, lsl #3
  64:	eor	x0, x0, x0, lsr #15
  68:	sub	x1, x0, #0x1
  6c:	sub	x0, x1, x0, lsl #27
  70:	eor	x0, x0, x0, lsr #31
  74:	and	w0, w4, w0
  78:	umull	x1, w0, w3
  7c:	add	x8, x7, x1
  80:	ldr	x1, [x7, x1]
  84:	cmp	x5, x1
  88:	b.eq	108 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x108>  // b.none
  8c:	cmn	x1, #0x8
  90:	b.eq	120 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x120>  // b.none
  94:	cmn	x1, #0x10
  98:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xb0>  // b.any
  9c:	ldr	w1, [x8, #8]
  a0:	cmp	x9, #0x0
  a4:	ccmn	w1, #0x2, #0x0, eq  // eq = none
  a8:	csel	x9, x9, x8, ne  // ne = any
  ac:	nop
  b0:	add	w0, w0, w10
  b4:	add	w10, w10, #0x1
  b8:	and	w0, w4, w0
  bc:	b	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x78>
  c0:	mov	w0, #0x0                   	// #0
  c4:	str	xzr, [x2]
  c8:	ret
  cc:	cmn	w6, #0x1
  d0:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x20>  // b.any
  d4:	stp	x29, x30, [sp, #-16]!
  d8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  dc:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  e0:	mov	x29, sp
  e4:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  e8:	add	x3, x3, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x0, x0, #0x0
  f4:	mov	w2, #0x250                 	// #592
  f8:	bl	0 <__assert_fail>
  fc:	cmn	w6, #0x2
 100:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x20>  // b.any
 104:	b	d4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xd4>
 108:	ldr	w11, [x8, #8]
 10c:	cmp	w11, w6
 110:	b.ne	8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x8c>  // b.any
 114:	mov	w0, #0x1                   	// #1
 118:	str	x8, [x2]
 11c:	ret
 120:	ldr	w1, [x8, #8]
 124:	cmn	w1, #0x1
 128:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xb0>  // b.any
 12c:	cmp	x9, #0x0
 130:	mov	w0, #0x0                   	// #0
 134:	csel	x9, x9, x8, ne  // ne = any
 138:	str	x9, [x2]
 13c:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>:
   0:	mov	x4, x0
   4:	ldr	w0, [x0, #24]
   8:	cbz	w0, c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc0>
   c:	ldp	x6, x7, [x1]
  10:	cmn	x6, #0x8
  14:	b.eq	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc8>  // b.none
  18:	cmn	x6, #0x10
  1c:	b.eq	f8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xf8>  // b.none
  20:	lsr	w1, w7, #9
  24:	lsr	w3, w6, #9
  28:	eor	w3, w3, w6, lsr #4
  2c:	sub	w5, w0, #0x1
  30:	eor	w1, w1, w7, lsr #4
  34:	mov	w10, #0x1                   	// #1
  38:	orr	x3, x1, x3, lsl #32
  3c:	mov	x9, #0x0                   	// #0
  40:	sub	x3, x3, #0x1
  44:	mov	w8, #0x18                  	// #24
  48:	sub	x0, x3, x1, lsl #32
  4c:	ldr	x3, [x4, #8]
  50:	eor	x0, x0, x0, lsr #22
  54:	sub	x1, x0, #0x1
  58:	sub	x0, x1, x0, lsl #13
  5c:	eor	x0, x0, x0, lsr #8
  60:	add	x0, x0, x0, lsl #3
  64:	eor	x0, x0, x0, lsr #15
  68:	sub	x1, x0, #0x1
  6c:	sub	x0, x1, x0, lsl #27
  70:	eor	x0, x0, x0, lsr #31
  74:	and	w0, w5, w0
  78:	umull	x1, w0, w8
  7c:	add	x4, x3, x1
  80:	ldr	x1, [x3, x1]
  84:	cmp	x6, x1
  88:	b.eq	104 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x104>  // b.none
  8c:	cmn	x1, #0x8
  90:	b.eq	11c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x11c>  // b.none
  94:	cmn	x1, #0x10
  98:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb0>  // b.any
  9c:	ldr	x1, [x4, #8]
  a0:	cmp	x9, #0x0
  a4:	ccmn	x1, #0x10, #0x0, eq  // eq = none
  a8:	csel	x9, x9, x4, ne  // ne = any
  ac:	nop
  b0:	add	w0, w0, w10
  b4:	add	w10, w10, #0x1
  b8:	and	w0, w5, w0
  bc:	b	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x78>
  c0:	str	xzr, [x2]
  c4:	ret
  c8:	cmn	x7, #0x8
  cc:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x20>  // b.any
  d0:	stp	x29, x30, [sp, #-16]!
  d4:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  d8:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  dc:	mov	x29, sp
  e0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
  e4:	add	x3, x3, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	w2, #0x250                 	// #592
  f4:	bl	0 <__assert_fail>
  f8:	cmn	x7, #0x10
  fc:	b.ne	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x20>  // b.any
 100:	b	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd0>
 104:	ldr	x11, [x4, #8]
 108:	cmp	x11, x7
 10c:	b.ne	8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x8c>  // b.any
 110:	mov	w0, #0x1                   	// #1
 114:	str	x4, [x2]
 118:	ret
 11c:	ldr	x1, [x4, #8]
 120:	cmn	x1, #0x8
 124:	b.ne	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb0>  // b.any
 128:	cmp	x9, #0x0
 12c:	mov	w0, #0x0                   	// #0
 130:	csel	x9, x9, x4, ne  // ne = any
 134:	str	x9, [x2]
 138:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>:
   0:	ldr	w4, [x0, #24]
   4:	cbz	w4, 54 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x54>
   8:	ldr	x5, [x1]
   c:	mov	x3, x0
  10:	cmn	x5, #0x8
  14:	cset	w0, ne  // ne = any
  18:	cmn	x5, #0x10
  1c:	csel	w0, w0, wzr, ne  // ne = any
  20:	cbz	w0, b8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb8>
  24:	lsr	w1, w5, #4
  28:	sub	w4, w4, #0x1
  2c:	eor	w1, w1, w5, lsr #9
  30:	and	w1, w1, w4
  34:	ldr	x3, [x3, #8]
  38:	lsl	w6, w1, #4
  3c:	add	x7, x3, x6
  40:	ldr	x6, [x3, x6]
  44:	cmp	x5, x6
  48:	b.ne	60 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x60>  // b.any
  4c:	str	x7, [x2]
  50:	ret
  54:	mov	w0, #0x0                   	// #0
  58:	str	xzr, [x2]
  5c:	ret
  60:	mov	w9, #0x1                   	// #1
  64:	mov	x8, #0x0                   	// #0
  68:	cmn	x6, #0x8
  6c:	b.ne	84 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x84>  // b.any
  70:	cmp	x8, #0x0
  74:	mov	w0, #0x0                   	// #0
  78:	csel	x8, x8, x7, ne  // ne = any
  7c:	str	x8, [x2]
  80:	ret
  84:	add	w1, w9, w1
  88:	cmp	x8, #0x0
  8c:	and	w10, w4, w1
  90:	ccmn	x6, #0x10, #0x0, eq  // eq = none
  94:	csel	x8, x8, x7, ne  // ne = any
  98:	add	w9, w9, #0x1
  9c:	lsl	x6, x10, #4
  a0:	and	w1, w4, w1
  a4:	add	x7, x3, x6
  a8:	ldr	x6, [x3, x6]
  ac:	cmp	x5, x6
  b0:	b.eq	4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x4c>  // b.none
  b4:	b	68 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x68>
  b8:	stp	x29, x30, [sp, #-16]!
  bc:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  c0:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  c4:	mov	x29, sp
  c8:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  cc:	add	x3, x3, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x0, x0, #0x0
  d8:	mov	w2, #0x250                 	// #592
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	w20, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x21, x22, [sp, #32]
  28:	mov	x19, x0
  2c:	orr	x2, x2, x2, lsr #8
  30:	ldr	w21, [x0, #24]
  34:	ldr	x22, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w20
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w5, [x19, #24]
  5c:	sub	w6, w5, #0x1
  60:	and	w2, w6, w5
  64:	cbz	x22, 158 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x158>
  68:	umull	x1, w21, w20
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x22, x1
  74:	cbnz	w2, 1c4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1c4>
  78:	umaddl	x20, w5, w20, x0
  7c:	mov	x2, x0
  80:	mov	x3, #0xfffffffffffffff8    	// #-8
  84:	cmp	x0, x20
  88:	b.eq	9c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x9c>  // b.none
  8c:	nop
  90:	str	x3, [x2], #24
  94:	cmp	x20, x2
  98:	b.ne	90 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x90>  // b.any
  9c:	cmp	x8, x22
  a0:	mov	x4, x22
  a4:	mov	w10, #0x18                  	// #24
  a8:	b.ne	bc <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xbc>  // b.any
  ac:	b	110 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x110>
  b0:	add	x4, x4, #0x18
  b4:	cmp	x8, x4
  b8:	b.eq	110 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x110>  // b.none
  bc:	ldr	x2, [x4]
  c0:	cmn	x2, #0x10
  c4:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  c8:	b.eq	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xb0>  // b.none
  cc:	cbz	w5, 1e4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1e4>
  d0:	lsr	w3, w2, #9
  d4:	eor	w3, w3, w2, lsr #4
  d8:	and	w3, w3, w6
  dc:	umull	x7, w3, w10
  e0:	add	x11, x0, x7
  e4:	ldr	x7, [x0, x7]
  e8:	cmp	x2, x7
  ec:	b.ne	124 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x124>  // b.any
  f0:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  f4:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  f8:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  fc:	add	x3, x3, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x0, x0, #0x0
 108:	mov	w2, #0x17a                 	// #378
 10c:	bl	0 <__assert_fail>
 110:	mov	x0, x22
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x29, x30, [sp], #48
 120:	b	0 <_ZdlPvm>
 124:	mov	w12, #0x1                   	// #1
 128:	mov	x9, #0x0                   	// #0
 12c:	cmn	x7, #0x8
 130:	b.ne	18c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x18c>  // b.any
 134:	cmp	x9, #0x0
 138:	ldr	w7, [x19, #16]
 13c:	csel	x9, x9, x11, ne  // ne = any
 140:	add	w7, w7, #0x1
 144:	str	x2, [x9]
 148:	ldp	x2, x3, [x4, #8]
 14c:	stp	x2, x3, [x9, #8]
 150:	str	w7, [x19, #16]
 154:	b	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xb0>
 158:	str	xzr, [x19, #16]
 15c:	cbnz	w2, 1c4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1c4>
 160:	umaddl	x20, w5, w20, x0
 164:	mov	x1, #0xfffffffffffffff8    	// #-8
 168:	cmp	x0, x20
 16c:	b.eq	17c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x17c>  // b.none
 170:	str	x1, [x0], #24
 174:	cmp	x20, x0
 178:	b.ne	170 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x170>  // b.any
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x21, x22, [sp, #32]
 184:	ldp	x29, x30, [sp], #48
 188:	ret
 18c:	add	w3, w12, w3
 190:	cmp	x9, #0x0
 194:	and	w3, w6, w3
 198:	ccmn	x7, #0x10, #0x0, eq  // eq = none
 19c:	csel	x11, x11, x9, eq  // eq = none
 1a0:	add	w12, w12, #0x1
 1a4:	umull	x7, w3, w10
 1a8:	add	x13, x0, x7
 1ac:	ldr	x7, [x0, x7]
 1b0:	cmp	x2, x7
 1b4:	b.eq	f0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xf0>  // b.none
 1b8:	mov	x9, x11
 1bc:	mov	x11, x13
 1c0:	b	12c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x12c>
 1c4:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1c8:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1cc:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1d0:	add	x3, x3, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x0, x0, #0x0
 1dc:	mov	w2, #0x15b                 	// #347
 1e0:	bl	0 <__assert_fail>
 1e4:	mov	x0, #0x0                   	// #0
 1e8:	str	x2, [x0]
 1ec:	brk	#0x3e8

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	orr	x2, x1, x1, lsr #1
   c:	mov	x29, sp
  10:	orr	x2, x2, x2, lsr #2
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	orr	x2, x2, x2, lsr #4
  20:	mov	w0, #0x40                  	// #64
  24:	orr	x2, x2, x2, lsr #8
  28:	ldr	w20, [x19, #24]
  2c:	str	x21, [sp, #32]
  30:	orr	x2, x2, x2, lsr #16
  34:	add	x2, x2, #0x1
  38:	cmp	w2, w0
  3c:	csel	w0, w2, w0, cs  // cs = hs, nlast
  40:	str	w0, [x19, #24]
  44:	ldr	x21, [x19, #8]
  48:	ubfiz	x0, x0, #3, #32
  4c:	bl	0 <_Znwm>
  50:	str	x0, [x19, #8]
  54:	ldr	w3, [x19, #24]
  58:	str	xzr, [x19, #16]
  5c:	sub	w7, w3, #0x1
  60:	and	w2, w7, w3
  64:	cbz	x21, 1a8 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1a8>
  68:	ubfiz	x1, x20, #3, #32
  6c:	add	x8, x21, x1
  70:	cbnz	w2, 27c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x27c>
  74:	ubfiz	x2, x3, #3, #32
  78:	add	x6, x0, x2
  7c:	cmp	x0, x6
  80:	b.eq	f4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xf4>  // b.none
  84:	sub	x2, x2, #0x8
  88:	mov	x5, x0
  8c:	cmp	x2, #0x10
  90:	lsr	x2, x2, #3
  94:	add	x2, x2, #0x1
  98:	b.ls	23c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x23c>  // b.plast
  9c:	adrp	x9, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
  a0:	lsr	x4, x2, #1
  a4:	ldr	q0, [x9]
  a8:	add	x4, x0, x4, lsl #4
  ac:	nop
  b0:	str	q0, [x5], #16
  b4:	cmp	x5, x4
  b8:	b.ne	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xb0>  // b.any
  bc:	and	x4, x2, #0xfffffffffffffffe
  c0:	cmp	x2, x4
  c4:	add	x2, x0, x4, lsl #3
  c8:	b.eq	f4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xf4>  // b.none
  cc:	mov	x4, x2
  d0:	mov	x5, #0xfffffffffffffff8    	// #-8
  d4:	str	x5, [x4], #8
  d8:	cmp	x6, x4
  dc:	b.eq	f4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xf4>  // b.none
  e0:	str	x5, [x2, #8]
  e4:	add	x4, x2, #0x10
  e8:	cmp	x6, x4
  ec:	b.eq	f4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xf4>  // b.none
  f0:	str	x5, [x2, #16]
  f4:	cmp	x8, x21
  f8:	mov	x5, x21
  fc:	b.ne	110 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x110>  // b.any
 100:	b	168 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x168>
 104:	add	x5, x5, #0x8
 108:	cmp	x8, x5
 10c:	b.eq	168 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x168>  // b.none
 110:	ldr	x4, [x5]
 114:	cmn	x4, #0x10
 118:	ccmn	x4, #0x8, #0x4, ne  // ne = any
 11c:	b.eq	104 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x104>  // b.none
 120:	cbz	w3, 29c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x29c>
 124:	lsr	w2, w4, #9
 128:	eor	w2, w2, w4, lsr #4
 12c:	and	w9, w2, w7
 130:	mov	x2, x9
 134:	ubfiz	x6, x9, #3, #28
 138:	ldr	x9, [x0, x9, lsl #3]
 13c:	add	x6, x0, x6
 140:	cmp	x4, x9
 144:	b.ne	17c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x17c>  // b.any
 148:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 14c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 150:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 154:	add	x3, x3, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x0, x0, #0x0
 160:	mov	w2, #0x17a                 	// #378
 164:	bl	0 <__assert_fail>
 168:	mov	x0, x21
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldr	x21, [sp, #32]
 174:	ldp	x29, x30, [sp], #48
 178:	b	0 <_ZdlPvm>
 17c:	mov	w11, #0x1                   	// #1
 180:	mov	x10, #0x0                   	// #0
 184:	cmn	x9, #0x8
 188:	b.ne	244 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x244>  // b.any
 18c:	cmp	x10, #0x0
 190:	ldr	w2, [x19, #16]
 194:	csel	x10, x10, x6, ne  // ne = any
 198:	add	w2, w2, #0x1
 19c:	str	x4, [x10]
 1a0:	str	w2, [x19, #16]
 1a4:	b	104 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x104>
 1a8:	cbnz	w2, 27c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x27c>
 1ac:	ubfiz	x3, x3, #3, #32
 1b0:	add	x4, x0, x3
 1b4:	cmp	x0, x4
 1b8:	b.eq	22c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x22c>  // b.none
 1bc:	sub	x3, x3, #0x8
 1c0:	mov	x1, x0
 1c4:	cmp	x3, #0x10
 1c8:	lsr	x3, x3, #3
 1cc:	add	x2, x3, #0x1
 1d0:	b.ls	204 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x204>  // b.plast
 1d4:	adrp	x5, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 1d8:	lsr	x3, x2, #1
 1dc:	ldr	q0, [x5]
 1e0:	add	x3, x0, x3, lsl #4
 1e4:	nop
 1e8:	str	q0, [x1], #16
 1ec:	cmp	x1, x3
 1f0:	b.ne	1e8 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1e8>  // b.any
 1f4:	and	x1, x2, #0xfffffffffffffffe
 1f8:	cmp	x1, x2
 1fc:	add	x0, x0, x1, lsl #3
 200:	b.eq	22c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x22c>  // b.none
 204:	mov	x1, x0
 208:	mov	x2, #0xfffffffffffffff8    	// #-8
 20c:	str	x2, [x1], #8
 210:	cmp	x4, x1
 214:	b.eq	22c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x22c>  // b.none
 218:	str	x2, [x0, #8]
 21c:	add	x1, x0, #0x10
 220:	cmp	x4, x1
 224:	b.eq	22c <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x22c>  // b.none
 228:	str	x2, [x0, #16]
 22c:	ldp	x19, x20, [sp, #16]
 230:	ldr	x21, [sp, #32]
 234:	ldp	x29, x30, [sp], #48
 238:	ret
 23c:	mov	x2, x0
 240:	b	cc <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xcc>
 244:	add	w2, w11, w2
 248:	cmp	x10, #0x0
 24c:	and	w12, w7, w2
 250:	ccmn	x9, #0x10, #0x0, eq  // eq = none
 254:	csel	x6, x6, x10, eq  // eq = none
 258:	add	w11, w11, #0x1
 25c:	and	w2, w7, w2
 260:	add	x13, x0, x12, lsl #3
 264:	ldr	x9, [x0, x12, lsl #3]
 268:	cmp	x4, x9
 26c:	b.eq	148 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x148>  // b.none
 270:	mov	x10, x6
 274:	mov	x6, x13
 278:	b	184 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x184>
 27c:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 280:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 284:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 288:	add	x3, x3, #0x0
 28c:	add	x1, x1, #0x0
 290:	add	x0, x0, #0x0
 294:	mov	w2, #0x15b                 	// #347
 298:	bl	0 <__assert_fail>
 29c:	mov	x0, #0x0                   	// #0
 2a0:	str	x4, [x0]
 2a4:	brk	#0x3e8

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x8
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x1
  20:	cbz	w2, 158 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x158>
  24:	ldr	x3, [x1]
  28:	cmn	x3, #0x10
  2c:	ccmn	x3, #0x8, #0x4, ne  // ne = any
  30:	b.eq	19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x19c>  // b.none
  34:	lsr	w0, w3, #9
  38:	sub	w7, w2, #0x1
  3c:	eor	w0, w0, w3, lsr #4
  40:	ldr	x4, [x19, #8]
  44:	and	w1, w0, w7
  48:	mov	x0, x1
  4c:	ubfiz	x5, x1, #3, #28
  50:	ldr	x1, [x4, x1, lsl #3]
  54:	add	x5, x4, x5
  58:	cmp	x3, x1
  5c:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x84>  // b.any
  60:	ldr	x0, [x19]
  64:	add	x2, x4, w2, uxtw #3
  68:	stp	x19, x0, [x20]
  6c:	stp	x5, x2, [x20, #16]
  70:	strb	wzr, [x20, #32]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	mov	w8, #0x1                   	// #1
  88:	mov	x6, #0x0                   	// #0
  8c:	cmn	x1, #0x8
  90:	b.ne	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x16c>  // b.any
  94:	ldr	x0, [x19]
  98:	lsl	w1, w2, #1
  9c:	ldr	w7, [x19, #16]
  a0:	cmp	x6, #0x0
  a4:	add	x0, x0, #0x1
  a8:	str	x0, [x19]
  ac:	add	w8, w7, #0x1
  b0:	add	w0, w1, w2
  b4:	csel	x6, x6, x5, ne  // ne = any
  b8:	cmp	w0, w8, lsl #2
  bc:	b.ls	128 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x128>  // b.plast
  c0:	ldr	w0, [x19, #20]
  c4:	sub	w0, w2, w0
  c8:	sub	w0, w0, w8
  cc:	cmp	w0, w2, lsr #3
  d0:	b.ls	124 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x124>  // b.plast
  d4:	ldr	x1, [x6]
  d8:	add	w0, w7, #0x1
  dc:	str	w0, [x19, #16]
  e0:	cmn	x1, #0x8
  e4:	b.eq	f4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xf4>  // b.none
  e8:	ldr	w0, [x19, #20]
  ec:	sub	w0, w0, #0x1
  f0:	str	w0, [x19, #20]
  f4:	ldr	w2, [x19, #24]
  f8:	mov	w0, #0x1                   	// #1
  fc:	ldr	x1, [x19]
 100:	stp	x19, x1, [x20]
 104:	add	x2, x4, x2, lsl #3
 108:	str	x3, [x6]
 10c:	stp	x6, x2, [x20, #16]
 110:	strb	w0, [x20, #32]
 114:	ldp	x19, x20, [sp, #16]
 118:	ldr	x21, [sp, #32]
 11c:	ldp	x29, x30, [sp], #64
 120:	ret
 124:	mov	w1, w2
 128:	mov	x0, x19
 12c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 130:	add	x2, sp, #0x38
 134:	mov	x1, x21
 138:	mov	x0, x19
 13c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 140:	ldr	x6, [sp, #56]
 144:	cbz	x6, 1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x1bc>
 148:	ldr	w7, [x19, #16]
 14c:	ldr	x3, [x21]
 150:	ldr	x4, [x19, #8]
 154:	b	d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xd4>
 158:	ldr	x0, [x0]
 15c:	mov	w1, #0x0                   	// #0
 160:	add	x0, x0, #0x1
 164:	str	x0, [x19]
 168:	b	128 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x128>
 16c:	add	w0, w0, w8
 170:	cmp	x6, #0x0
 174:	and	w9, w7, w0
 178:	ccmn	x1, #0x10, #0x0, eq  // eq = none
 17c:	csel	x6, x6, x5, ne  // ne = any
 180:	add	w8, w8, #0x1
 184:	and	w0, w7, w0
 188:	add	x5, x4, x9, lsl #3
 18c:	ldr	x1, [x4, x9, lsl #3]
 190:	cmp	x3, x1
 194:	b.eq	60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x60>  // b.none
 198:	b	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x8c>
 19c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1a0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1a8:	add	x3, x3, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x0, x0, #0x0
 1b4:	mov	w2, #0x250                 	// #592
 1b8:	bl	0 <__assert_fail>
 1bc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1c0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 1c8:	add	x3, x3, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x0, x0, #0x0
 1d4:	mov	w2, #0x22f                 	// #559
 1d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	w22, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x19, x20, [sp, #16]
  28:	ldr	w21, [x0, #24]
  2c:	orr	x2, x2, x2, lsr #8
  30:	mov	x19, x0
  34:	ldr	x20, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w22
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w6, [x19, #24]
  5c:	sub	w7, w6, #0x1
  60:	and	w2, w6, w7
  64:	cbz	x20, 20c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x20c>
  68:	umull	x1, w21, w22
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x20, x1
  74:	cbnz	w2, 244 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x244>
  78:	umaddl	x22, w6, w22, x0
  7c:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
  80:	mov	x2, x0
  84:	ldr	q0, [x3]
  88:	cmp	x0, x22
  8c:	b.eq	9c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x9c>  // b.none
  90:	str	q0, [x2], #24
  94:	cmp	x22, x2
  98:	b.ne	90 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x90>  // b.any
  9c:	cmp	x8, x20
  a0:	mov	x4, x20
  a4:	mov	w10, #0x18                  	// #24
  a8:	b.eq	19c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x19c>  // b.none
  ac:	nop
  b0:	ldr	x9, [x4]
  b4:	cmn	x9, #0x8
  b8:	b.eq	150 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x150>  // b.none
  bc:	cmn	x9, #0x10
  c0:	b.eq	1b0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1b0>  // b.none
  c4:	cbz	w6, 160 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x160>
  c8:	ldr	x5, [x4, #8]
  cc:	lsr	w2, w5, #9
  d0:	lsr	w3, w9, #9
  d4:	mov	w11, #0x1                   	// #1
  d8:	eor	w3, w3, w9, lsr #4
  dc:	eor	w2, w2, w5, lsr #4
  e0:	mov	x12, #0x0                   	// #0
  e4:	orr	x3, x2, x3, lsl #32
  e8:	sub	x3, x3, #0x1
  ec:	sub	x2, x3, x2, lsl #32
  f0:	eor	x2, x2, x2, lsr #22
  f4:	sub	x3, x2, #0x1
  f8:	sub	x2, x3, x2, lsl #13
  fc:	eor	x2, x2, x2, lsr #8
 100:	add	x2, x2, x2, lsl #3
 104:	eor	x2, x2, x2, lsr #15
 108:	sub	x3, x2, #0x1
 10c:	sub	x2, x3, x2, lsl #27
 110:	eor	x2, x2, x2, lsr #31
 114:	and	w2, w7, w2
 118:	umull	x3, w2, w10
 11c:	add	x13, x0, x3
 120:	ldr	x3, [x0, x3]
 124:	cmp	x9, x3
 128:	b.eq	1c4 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1c4>  // b.none
 12c:	cmn	x3, #0x8
 130:	b.eq	1f0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1f0>  // b.none
 134:	cmn	x3, #0x10
 138:	b.ne	1fc <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1fc>  // b.any
 13c:	ldr	x3, [x13, #8]
 140:	cmp	x12, #0x0
 144:	ccmn	x3, #0x10, #0x0, eq  // eq = none
 148:	csel	x12, x12, x13, ne  // ne = any
 14c:	b	1fc <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1fc>
 150:	ldr	x5, [x4, #8]
 154:	cmn	x5, #0x8
 158:	b.eq	190 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x190>  // b.none
 15c:	cbnz	w6, cc <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xcc>
 160:	mov	x0, #0x0                   	// #0
 164:	str	x9, [x0]
 168:	brk	#0x3e8
 16c:	cmp	x12, #0x0
 170:	ldr	w2, [x19, #16]
 174:	csel	x12, x12, x13, ne  // ne = any
 178:	ldr	x3, [x4, #16]
 17c:	add	w2, w2, #0x1
 180:	stp	x9, x5, [x12]
 184:	str	x3, [x12, #16]
 188:	str	w2, [x19, #16]
 18c:	nop
 190:	add	x4, x4, #0x18
 194:	cmp	x8, x4
 198:	b.ne	b0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xb0>  // b.any
 19c:	mov	x0, x20
 1a0:	ldp	x19, x20, [sp, #16]
 1a4:	ldp	x21, x22, [sp, #32]
 1a8:	ldp	x29, x30, [sp], #48
 1ac:	b	0 <_ZdlPvm>
 1b0:	ldr	x5, [x4, #8]
 1b4:	cmn	x5, #0x10
 1b8:	b.eq	190 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x190>  // b.none
 1bc:	cbnz	w6, cc <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xcc>
 1c0:	b	160 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x160>
 1c4:	ldr	x14, [x13, #8]
 1c8:	cmp	x14, x5
 1cc:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x12c>  // b.any
 1d0:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1d4:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1d8:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1dc:	add	x3, x3, #0x0
 1e0:	add	x1, x1, #0x0
 1e4:	add	x0, x0, #0x0
 1e8:	mov	w2, #0x17a                 	// #378
 1ec:	bl	0 <__assert_fail>
 1f0:	ldr	x3, [x13, #8]
 1f4:	cmn	x3, #0x8
 1f8:	b.eq	16c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x16c>  // b.none
 1fc:	add	w2, w2, w11
 200:	add	w11, w11, #0x1
 204:	and	w2, w2, w7
 208:	b	118 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x118>
 20c:	str	xzr, [x19, #16]
 210:	cbnz	w2, 244 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x244>
 214:	umaddl	x22, w6, w22, x0
 218:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 21c:	cmp	x0, x22
 220:	ldr	q0, [x1]
 224:	b.eq	234 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x234>  // b.none
 228:	str	q0, [x0], #24
 22c:	cmp	x22, x0
 230:	b.ne	228 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x228>  // b.any
 234:	ldp	x19, x20, [sp, #16]
 238:	ldp	x21, x22, [sp, #32]
 23c:	ldp	x29, x30, [sp], #48
 240:	ret
 244:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 248:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 24c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 250:	add	x3, x3, #0x0
 254:	add	x1, x1, #0x0
 258:	add	x0, x0, #0x0
 25c:	mov	w2, #0x15b                 	// #347
 260:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	w22, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x19, x20, [sp, #16]
  28:	ldr	w21, [x0, #24]
  2c:	orr	x2, x2, x2, lsr #8
  30:	mov	x19, x0
  34:	ldr	x20, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w22
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w2, [x19, #24]
  5c:	sub	w1, w2, #0x1
  60:	and	w3, w1, w2
  64:	cbz	x20, 214 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x214>
  68:	umull	x1, w21, w22
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x20, x1
  74:	cbnz	w3, 254 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x254>
  78:	umaddl	x2, w2, w22, x0
  7c:	mov	x3, x0
  80:	mov	x5, #0xfffffffffffffff8    	// #-8
  84:	mov	w4, #0xffffffff            	// #-1
  88:	cmp	x0, x2
  8c:	b.eq	a4 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xa4>  // b.none
  90:	str	x5, [x3]
  94:	add	x3, x3, #0x18
  98:	stur	w4, [x3, #-16]
  9c:	cmp	x2, x3
  a0:	b.ne	90 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x90>  // b.any
  a4:	cmp	x8, x20
  a8:	mov	x5, x20
  ac:	mov	w10, #0x25                  	// #37
  b0:	mov	w9, #0x18                  	// #24
  b4:	b.eq	1a0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1a0>  // b.none
  b8:	ldr	x7, [x5]
  bc:	cmn	x7, #0x8
  c0:	b.eq	168 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x168>  // b.none
  c4:	cmn	x7, #0x10
  c8:	b.eq	188 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x188>  // b.none
  cc:	ldr	w4, [x19, #24]
  d0:	cbz	w4, 17c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x17c>
  d4:	ldr	w6, [x5, #8]
  d8:	mul	w2, w6, w10
  dc:	lsr	w3, w7, #9
  e0:	eor	w3, w3, w7, lsr #4
  e4:	sub	w4, w4, #0x1
  e8:	mov	w12, #0x1                   	// #1
  ec:	mov	x11, #0x0                   	// #0
  f0:	orr	x3, x2, x3, lsl #32
  f4:	sub	x3, x3, #0x1
  f8:	sub	x2, x3, x2, lsl #32
  fc:	eor	x2, x2, x2, lsr #22
 100:	sub	x3, x2, #0x1
 104:	sub	x2, x3, x2, lsl #13
 108:	eor	x2, x2, x2, lsr #8
 10c:	add	x2, x2, x2, lsl #3
 110:	eor	x2, x2, x2, lsr #15
 114:	sub	x3, x2, #0x1
 118:	sub	x2, x3, x2, lsl #27
 11c:	eor	x2, x2, x2, lsr #31
 120:	and	w2, w4, w2
 124:	umull	x3, w2, w9
 128:	add	x13, x0, x3
 12c:	ldr	x3, [x0, x3]
 130:	cmp	x7, x3
 134:	b.eq	1b4 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1b4>  // b.none
 138:	cmn	x3, #0x8
 13c:	b.eq	1e0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1e0>  // b.none
 140:	cmn	x3, #0x10
 144:	b.ne	158 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x158>  // b.any
 148:	ldr	w3, [x13, #8]
 14c:	cmp	x11, #0x0
 150:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 154:	csel	x11, x11, x13, ne  // ne = any
 158:	add	w2, w2, w12
 15c:	add	w12, w12, #0x1
 160:	and	w2, w4, w2
 164:	b	124 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x124>
 168:	ldr	w6, [x5, #8]
 16c:	cmn	w6, #0x1
 170:	b.eq	194 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x194>  // b.none
 174:	ldr	w4, [x19, #24]
 178:	cbnz	w4, d8 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xd8>
 17c:	mov	x0, #0x0                   	// #0
 180:	str	x7, [x0]
 184:	brk	#0x3e8
 188:	ldr	w6, [x5, #8]
 18c:	cmn	w6, #0x2
 190:	b.ne	174 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x174>  // b.any
 194:	add	x5, x5, #0x18
 198:	cmp	x8, x5
 19c:	b.ne	b8 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xb8>  // b.any
 1a0:	mov	x0, x20
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	ldp	x29, x30, [sp], #48
 1b0:	b	0 <_ZdlPvm>
 1b4:	ldr	w14, [x13, #8]
 1b8:	cmp	w6, w14
 1bc:	b.ne	138 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x138>  // b.any
 1c0:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1c4:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1c8:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1cc:	add	x3, x3, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x0, x0, #0x0
 1d8:	mov	w2, #0x17a                 	// #378
 1dc:	bl	0 <__assert_fail>
 1e0:	ldr	w3, [x13, #8]
 1e4:	cmn	w3, #0x1
 1e8:	b.ne	158 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x158>  // b.any
 1ec:	cmp	x11, #0x0
 1f0:	csel	x11, x11, x13, ne  // ne = any
 1f4:	ldr	x3, [x5, #16]
 1f8:	str	w6, [x11, #8]
 1fc:	str	x7, [x11]
 200:	ldr	w2, [x19, #16]
 204:	str	x3, [x11, #16]
 208:	add	w2, w2, #0x1
 20c:	str	w2, [x19, #16]
 210:	b	194 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x194>
 214:	str	xzr, [x19, #16]
 218:	cbnz	w3, 254 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x254>
 21c:	umaddl	x2, w2, w22, x0
 220:	mov	x3, #0xfffffffffffffff8    	// #-8
 224:	mov	w1, #0xffffffff            	// #-1
 228:	cmp	x0, x2
 22c:	b.eq	244 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x244>  // b.none
 230:	str	x3, [x0]
 234:	add	x0, x0, #0x18
 238:	stur	w1, [x0, #-16]
 23c:	cmp	x2, x0
 240:	b.ne	230 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x230>  // b.any
 244:	ldp	x19, x20, [sp, #16]
 248:	ldp	x21, x22, [sp, #32]
 24c:	ldp	x29, x30, [sp], #48
 250:	ret
 254:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 258:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 25c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 260:	add	x3, x3, #0x0
 264:	add	x1, x1, #0x0
 268:	add	x0, x0, #0x0
 26c:	mov	w2, #0x15b                 	// #347
 270:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	w22, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x19, x20, [sp, #16]
  28:	ldr	w21, [x0, #24]
  2c:	orr	x2, x2, x2, lsr #8
  30:	mov	x19, x0
  34:	ldr	x20, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w22
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w2, [x19, #24]
  5c:	sub	w1, w2, #0x1
  60:	and	w3, w1, w2
  64:	cbz	x20, 214 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x214>
  68:	umull	x1, w21, w22
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x20, x1
  74:	cbnz	w3, 254 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x254>
  78:	umaddl	x2, w2, w22, x0
  7c:	mov	x3, x0
  80:	mov	x5, #0xfffffffffffffff8    	// #-8
  84:	mov	w4, #0xffffffff            	// #-1
  88:	cmp	x0, x2
  8c:	b.eq	a4 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xa4>  // b.none
  90:	str	x5, [x3]
  94:	add	x3, x3, #0x18
  98:	stur	w4, [x3, #-16]
  9c:	cmp	x2, x3
  a0:	b.ne	90 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x90>  // b.any
  a4:	cmp	x8, x20
  a8:	mov	x5, x20
  ac:	mov	w10, #0x25                  	// #37
  b0:	mov	w9, #0x18                  	// #24
  b4:	b.eq	1a0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1a0>  // b.none
  b8:	ldr	x7, [x5]
  bc:	cmn	x7, #0x8
  c0:	b.eq	168 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x168>  // b.none
  c4:	cmn	x7, #0x10
  c8:	b.eq	188 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x188>  // b.none
  cc:	ldr	w4, [x19, #24]
  d0:	cbz	w4, 17c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x17c>
  d4:	ldr	w6, [x5, #8]
  d8:	mul	w2, w6, w10
  dc:	lsr	w3, w7, #9
  e0:	eor	w3, w3, w7, lsr #4
  e4:	sub	w4, w4, #0x1
  e8:	mov	w12, #0x1                   	// #1
  ec:	mov	x11, #0x0                   	// #0
  f0:	orr	x3, x2, x3, lsl #32
  f4:	sub	x3, x3, #0x1
  f8:	sub	x2, x3, x2, lsl #32
  fc:	eor	x2, x2, x2, lsr #22
 100:	sub	x3, x2, #0x1
 104:	sub	x2, x3, x2, lsl #13
 108:	eor	x2, x2, x2, lsr #8
 10c:	add	x2, x2, x2, lsl #3
 110:	eor	x2, x2, x2, lsr #15
 114:	sub	x3, x2, #0x1
 118:	sub	x2, x3, x2, lsl #27
 11c:	eor	x2, x2, x2, lsr #31
 120:	and	w2, w4, w2
 124:	umull	x3, w2, w9
 128:	add	x13, x0, x3
 12c:	ldr	x3, [x0, x3]
 130:	cmp	x7, x3
 134:	b.eq	1b4 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1b4>  // b.none
 138:	cmn	x3, #0x8
 13c:	b.eq	1e0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x1e0>  // b.none
 140:	cmn	x3, #0x10
 144:	b.ne	158 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x158>  // b.any
 148:	ldr	w3, [x13, #8]
 14c:	cmp	x11, #0x0
 150:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 154:	csel	x11, x11, x13, ne  // ne = any
 158:	add	w2, w2, w12
 15c:	add	w12, w12, #0x1
 160:	and	w2, w4, w2
 164:	b	124 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x124>
 168:	ldr	w6, [x5, #8]
 16c:	cmn	w6, #0x1
 170:	b.eq	194 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x194>  // b.none
 174:	ldr	w4, [x19, #24]
 178:	cbnz	w4, d8 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xd8>
 17c:	mov	x0, #0x0                   	// #0
 180:	str	x7, [x0]
 184:	brk	#0x3e8
 188:	ldr	w6, [x5, #8]
 18c:	cmn	w6, #0x2
 190:	b.ne	174 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x174>  // b.any
 194:	add	x5, x5, #0x18
 198:	cmp	x8, x5
 19c:	b.ne	b8 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xb8>  // b.any
 1a0:	mov	x0, x20
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	ldp	x29, x30, [sp], #48
 1b0:	b	0 <_ZdlPvm>
 1b4:	ldr	w14, [x13, #8]
 1b8:	cmp	w6, w14
 1bc:	b.ne	138 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x138>  // b.any
 1c0:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1c4:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1c8:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 1cc:	add	x3, x3, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x0, x0, #0x0
 1d8:	mov	w2, #0x17a                 	// #378
 1dc:	bl	0 <__assert_fail>
 1e0:	ldr	w3, [x13, #8]
 1e4:	cmn	w3, #0x1
 1e8:	b.ne	158 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x158>  // b.any
 1ec:	cmp	x11, #0x0
 1f0:	csel	x11, x11, x13, ne  // ne = any
 1f4:	ldr	x3, [x5, #16]
 1f8:	str	w6, [x11, #8]
 1fc:	str	x7, [x11]
 200:	ldr	w2, [x19, #16]
 204:	str	x3, [x11, #16]
 208:	add	w2, w2, #0x1
 20c:	str	w2, [x19, #16]
 210:	b	194 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x194>
 214:	str	xzr, [x19, #16]
 218:	cbnz	w3, 254 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x254>
 21c:	umaddl	x2, w2, w22, x0
 220:	mov	x3, #0xfffffffffffffff8    	// #-8
 224:	mov	w1, #0xffffffff            	// #-1
 228:	cmp	x0, x2
 22c:	b.eq	244 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x244>  // b.none
 230:	str	x3, [x0]
 234:	add	x0, x0, #0x18
 238:	stur	w1, [x0, #-16]
 23c:	cmp	x2, x0
 240:	b.ne	230 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x230>  // b.any
 244:	ldp	x19, x20, [sp, #16]
 248:	ldp	x21, x22, [sp, #32]
 24c:	ldp	x29, x30, [sp], #48
 250:	ret
 254:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 258:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 25c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 260:	add	x3, x3, #0x0
 264:	add	x1, x1, #0x0
 268:	add	x0, x0, #0x0
 26c:	mov	w2, #0x15b                 	// #347
 270:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	w22, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x19, x20, [sp, #16]
  28:	ldr	w21, [x0, #24]
  2c:	orr	x2, x2, x2, lsr #8
  30:	mov	x19, x0
  34:	ldr	x20, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w22
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w6, [x19, #24]
  5c:	sub	w7, w6, #0x1
  60:	and	w2, w6, w7
  64:	cbz	x20, 20c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x20c>
  68:	umull	x1, w21, w22
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x20, x1
  74:	cbnz	w2, 244 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x244>
  78:	umaddl	x22, w6, w22, x0
  7c:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
  80:	mov	x2, x0
  84:	ldr	q0, [x3]
  88:	cmp	x0, x22
  8c:	b.eq	9c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x9c>  // b.none
  90:	str	q0, [x2], #24
  94:	cmp	x22, x2
  98:	b.ne	90 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x90>  // b.any
  9c:	cmp	x8, x20
  a0:	mov	x4, x20
  a4:	mov	w10, #0x18                  	// #24
  a8:	b.eq	19c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x19c>  // b.none
  ac:	nop
  b0:	ldr	x9, [x4]
  b4:	cmn	x9, #0x8
  b8:	b.eq	150 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x150>  // b.none
  bc:	cmn	x9, #0x10
  c0:	b.eq	1b0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1b0>  // b.none
  c4:	cbz	w6, 160 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x160>
  c8:	ldr	x5, [x4, #8]
  cc:	lsr	w2, w5, #9
  d0:	lsr	w3, w9, #9
  d4:	mov	w11, #0x1                   	// #1
  d8:	eor	w3, w3, w9, lsr #4
  dc:	eor	w2, w2, w5, lsr #4
  e0:	mov	x12, #0x0                   	// #0
  e4:	orr	x3, x2, x3, lsl #32
  e8:	sub	x3, x3, #0x1
  ec:	sub	x2, x3, x2, lsl #32
  f0:	eor	x2, x2, x2, lsr #22
  f4:	sub	x3, x2, #0x1
  f8:	sub	x2, x3, x2, lsl #13
  fc:	eor	x2, x2, x2, lsr #8
 100:	add	x2, x2, x2, lsl #3
 104:	eor	x2, x2, x2, lsr #15
 108:	sub	x3, x2, #0x1
 10c:	sub	x2, x3, x2, lsl #27
 110:	eor	x2, x2, x2, lsr #31
 114:	and	w2, w7, w2
 118:	umull	x3, w2, w10
 11c:	add	x13, x0, x3
 120:	ldr	x3, [x0, x3]
 124:	cmp	x9, x3
 128:	b.eq	1c4 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1c4>  // b.none
 12c:	cmn	x3, #0x8
 130:	b.eq	1f0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1f0>  // b.none
 134:	cmn	x3, #0x10
 138:	b.ne	1fc <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1fc>  // b.any
 13c:	ldr	x3, [x13, #8]
 140:	cmp	x12, #0x0
 144:	ccmn	x3, #0x10, #0x0, eq  // eq = none
 148:	csel	x12, x12, x13, ne  // ne = any
 14c:	b	1fc <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x1fc>
 150:	ldr	x5, [x4, #8]
 154:	cmn	x5, #0x8
 158:	b.eq	190 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x190>  // b.none
 15c:	cbnz	w6, cc <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xcc>
 160:	mov	x0, #0x0                   	// #0
 164:	str	x9, [x0]
 168:	brk	#0x3e8
 16c:	cmp	x12, #0x0
 170:	ldr	w2, [x19, #16]
 174:	csel	x12, x12, x13, ne  // ne = any
 178:	ldr	x3, [x4, #16]
 17c:	add	w2, w2, #0x1
 180:	stp	x9, x5, [x12]
 184:	str	x3, [x12, #16]
 188:	str	w2, [x19, #16]
 18c:	nop
 190:	add	x4, x4, #0x18
 194:	cmp	x8, x4
 198:	b.ne	b0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xb0>  // b.any
 19c:	mov	x0, x20
 1a0:	ldp	x19, x20, [sp, #16]
 1a4:	ldp	x21, x22, [sp, #32]
 1a8:	ldp	x29, x30, [sp], #48
 1ac:	b	0 <_ZdlPvm>
 1b0:	ldr	x5, [x4, #8]
 1b4:	cmn	x5, #0x10
 1b8:	b.eq	190 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x190>  // b.none
 1bc:	cbnz	w6, cc <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xcc>
 1c0:	b	160 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x160>
 1c4:	ldr	x14, [x13, #8]
 1c8:	cmp	x14, x5
 1cc:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x12c>  // b.any
 1d0:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1d4:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1d8:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 1dc:	add	x3, x3, #0x0
 1e0:	add	x1, x1, #0x0
 1e4:	add	x0, x0, #0x0
 1e8:	mov	w2, #0x17a                 	// #378
 1ec:	bl	0 <__assert_fail>
 1f0:	ldr	x3, [x13, #8]
 1f4:	cmn	x3, #0x8
 1f8:	b.eq	16c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x16c>  // b.none
 1fc:	add	w2, w2, w11
 200:	add	w11, w11, #0x1
 204:	and	w2, w2, w7
 208:	b	118 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x118>
 20c:	str	xzr, [x19, #16]
 210:	cbnz	w2, 244 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x244>
 214:	umaddl	x22, w6, w22, x0
 218:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 21c:	cmp	x0, x22
 220:	ldr	q0, [x1]
 224:	b.eq	234 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x234>  // b.none
 228:	str	q0, [x0], #24
 22c:	cmp	x22, x0
 230:	b.ne	228 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x228>  // b.any
 234:	ldp	x19, x20, [sp, #16]
 238:	ldp	x21, x22, [sp, #32]
 23c:	ldp	x29, x30, [sp], #48
 240:	ret
 244:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 248:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 24c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 250:	add	x3, x3, #0x0
 254:	add	x1, x1, #0x0
 258:	add	x0, x0, #0x0
 25c:	mov	w2, #0x15b                 	// #347
 260:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	orr	x2, x1, x1, lsr #1
   c:	mov	x29, sp
  10:	orr	x2, x2, x2, lsr #2
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	orr	x2, x2, x2, lsr #4
  20:	mov	w0, #0x40                  	// #64
  24:	orr	x2, x2, x2, lsr #8
  28:	ldr	w20, [x19, #24]
  2c:	str	x21, [sp, #32]
  30:	orr	x2, x2, x2, lsr #16
  34:	add	x2, x2, #0x1
  38:	cmp	w2, w0
  3c:	csel	w0, w2, w0, cs  // cs = hs, nlast
  40:	str	w0, [x19, #24]
  44:	ldr	x21, [x19, #8]
  48:	ubfiz	x0, x0, #4, #32
  4c:	bl	0 <_Znwm>
  50:	str	x0, [x19, #8]
  54:	ldr	w2, [x19, #24]
  58:	str	xzr, [x19, #16]
  5c:	sub	w6, w2, #0x1
  60:	and	w3, w6, w2
  64:	cbz	x21, 154 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x154>
  68:	ubfiz	x1, x20, #4, #32
  6c:	add	x8, x21, x1
  70:	cbnz	w3, 1c8 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x1c8>
  74:	ubfiz	x3, x2, #4, #32
  78:	mov	x4, x0
  7c:	add	x3, x0, x3
  80:	mov	x5, #0xfffffffffffffff8    	// #-8
  84:	cmp	x0, x3
  88:	b.eq	9c <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x9c>  // b.none
  8c:	nop
  90:	str	x5, [x4], #16
  94:	cmp	x3, x4
  98:	b.ne	90 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x90>  // b.any
  9c:	cmp	x8, x21
  a0:	mov	x5, x21
  a4:	b.ne	b8 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xb8>  // b.any
  a8:	b	10c <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x10c>
  ac:	add	x5, x5, #0x10
  b0:	cmp	x8, x5
  b4:	b.eq	10c <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x10c>  // b.none
  b8:	ldr	x3, [x5]
  bc:	cmn	x3, #0x10
  c0:	ccmn	x3, #0x8, #0x4, ne  // ne = any
  c4:	b.eq	ac <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xac>  // b.none
  c8:	cbz	w2, 1e8 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x1e8>
  cc:	lsr	w4, w3, #9
  d0:	eor	w4, w4, w3, lsr #4
  d4:	and	w4, w4, w6
  d8:	lsl	w7, w4, #4
  dc:	add	x10, x0, x7
  e0:	ldr	x7, [x0, x7]
  e4:	cmp	x3, x7
  e8:	b.ne	120 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x120>  // b.any
  ec:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  f0:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  f4:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  f8:	add	x3, x3, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x0, x0, #0x0
 104:	mov	w2, #0x17a                 	// #378
 108:	bl	0 <__assert_fail>
 10c:	mov	x0, x21
 110:	ldp	x19, x20, [sp, #16]
 114:	ldr	x21, [sp, #32]
 118:	ldp	x29, x30, [sp], #48
 11c:	b	0 <_ZdlPvm>
 120:	mov	w11, #0x1                   	// #1
 124:	mov	x9, #0x0                   	// #0
 128:	cmn	x7, #0x8
 12c:	b.ne	18c <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x18c>  // b.any
 130:	cmp	x9, #0x0
 134:	ldr	w4, [x19, #16]
 138:	csel	x9, x9, x10, ne  // ne = any
 13c:	add	w4, w4, #0x1
 140:	str	x3, [x9]
 144:	ldr	x3, [x5, #8]
 148:	str	x3, [x9, #8]
 14c:	str	w4, [x19, #16]
 150:	b	ac <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xac>
 154:	cbnz	w3, 1c8 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x1c8>
 158:	ubfiz	x2, x2, #4, #32
 15c:	mov	x1, #0xfffffffffffffff8    	// #-8
 160:	add	x2, x0, x2
 164:	cmp	x0, x2
 168:	b.eq	17c <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x17c>  // b.none
 16c:	nop
 170:	str	x1, [x0], #16
 174:	cmp	x2, x0
 178:	b.ne	170 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x170>  // b.any
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldr	x21, [sp, #32]
 184:	ldp	x29, x30, [sp], #48
 188:	ret
 18c:	add	w4, w11, w4
 190:	cmp	x9, #0x0
 194:	and	w12, w6, w4
 198:	ccmn	x7, #0x10, #0x0, eq  // eq = none
 19c:	csel	x10, x10, x9, eq  // eq = none
 1a0:	add	w11, w11, #0x1
 1a4:	lsl	x7, x12, #4
 1a8:	and	w4, w6, w4
 1ac:	add	x12, x0, x7
 1b0:	ldr	x7, [x0, x7]
 1b4:	cmp	x3, x7
 1b8:	b.eq	ec <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xec>  // b.none
 1bc:	mov	x9, x10
 1c0:	mov	x10, x12
 1c4:	b	128 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x128>
 1c8:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 1cc:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 1d0:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 1d4:	add	x3, x3, #0x0
 1d8:	add	x1, x1, #0x0
 1dc:	add	x0, x0, #0x0
 1e0:	mov	w2, #0x15b                 	// #347
 1e4:	bl	0 <__assert_fail>
 1e8:	mov	x0, #0x0                   	// #0
 1ec:	str	x3, [x0]
 1f0:	brk	#0x3e8

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Record.cpp>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
   8:	mov	x4, #0x400000000           	// #17179869184
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	adrp	x20, 0 <_GLOBAL__sub_I_Record.cpp>
  18:	add	x20, x20, #0x0
  1c:	add	x1, x20, #0xa0
  20:	add	x5, x20, #0xc0
  24:	ldr	q0, [x0]
  28:	add	x3, x20, #0xf0
  2c:	stp	x5, x4, [x1, #16]
  30:	adrp	x19, 0 <__dso_handle>
  34:	add	x19, x19, #0x0
  38:	stp	x3, xzr, [x1, #64]
  3c:	mov	x2, x19
  40:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  44:	add	x0, x0, #0x0
  48:	str	q0, [x1, #80]
  4c:	stp	xzr, xzr, [x20, #160]
  50:	bl	0 <__cxa_atexit>
  54:	adrp	x1, 428 <_ZN4llvm8BitRecTy6SharedE>
  58:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
  5c:	adrp	x5, 0 <_GLOBAL__sub_I_Record.cpp>
  60:	ldr	x1, [x1]
  64:	add	x5, x5, #0x0
  68:	ldr	x3, [x3]
  6c:	adrp	x7, 0 <_GLOBAL__sub_I_Record.cpp>
  70:	adrp	x6, 0 <_GLOBAL__sub_I_Record.cpp>
  74:	add	x7, x7, #0x0
  78:	add	x6, x6, #0x0
  7c:	add	x3, x3, #0x10
  80:	str	x3, [x1]
  84:	mov	x2, x19
  88:	str	wzr, [x1, #8]
  8c:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  90:	str	xzr, [x1, #16]
  94:	add	x0, x0, #0x0
  98:	str	x5, [x20, #768]
  9c:	str	x7, [x20, #776]
  a0:	str	x6, [x20, #784]
  a4:	str	wzr, [x20, #792]
  a8:	strb	wzr, [x20, #796]
  ac:	bl	0 <__cxa_atexit>
  b0:	adrp	x1, 410 <_ZN4llvm9CodeRecTy6SharedE>
  b4:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
  b8:	mov	w4, #0x2                   	// #2
  bc:	mov	x2, x19
  c0:	ldr	x1, [x1]
  c4:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  c8:	ldr	x3, [x3]
  cc:	add	x0, x0, #0x0
  d0:	str	w4, [x1, #8]
  d4:	add	x3, x3, #0x10
  d8:	str	x3, [x1]
  dc:	str	xzr, [x1, #16]
  e0:	bl	0 <__cxa_atexit>
  e4:	adrp	x1, 3f8 <_ZN4llvm8IntRecTy6SharedE>
  e8:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
  ec:	mov	w4, #0x3                   	// #3
  f0:	mov	x2, x19
  f4:	ldr	x1, [x1]
  f8:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  fc:	ldr	x3, [x3]
 100:	add	x0, x0, #0x0
 104:	str	w4, [x1, #8]
 108:	add	x3, x3, #0x10
 10c:	str	x3, [x1]
 110:	str	xzr, [x1, #16]
 114:	bl	0 <__cxa_atexit>
 118:	adrp	x1, 3e0 <_ZN4llvm11StringRecTy6SharedE>
 11c:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
 120:	mov	w4, #0x4                   	// #4
 124:	mov	x2, x19
 128:	ldr	x1, [x1]
 12c:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
 130:	ldr	x3, [x3]
 134:	add	x0, x0, #0x0
 138:	str	w4, [x1, #8]
 13c:	add	x3, x3, #0x10
 140:	str	x3, [x1]
 144:	str	xzr, [x1, #16]
 148:	bl	0 <__cxa_atexit>
 14c:	adrp	x1, 3c8 <_ZN4llvm8DagRecTy6SharedE>
 150:	adrp	x3, 0 <_GLOBAL__sub_I_Record.cpp>
 154:	mov	x2, x19
 158:	mov	w4, #0x6                   	// #6
 15c:	ldr	x1, [x1]
 160:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
 164:	ldr	x3, [x3]
 168:	add	x0, x0, #0x0
 16c:	ldp	x19, x20, [sp, #16]
 170:	add	x3, x3, #0x10
 174:	str	x3, [x1]
 178:	str	w4, [x1, #8]
 17c:	str	xzr, [x1, #16]
 180:	ldp	x29, x30, [sp], #32
 184:	b	0 <__cxa_atexit>

SetTheory.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm9SetTheory8Expander6anchorEv>:
       0:	ret
       4:	nop

0000000000000008 <_ZN12_GLOBAL__N_15AddOpD1Ev>:
       8:	ret
       c:	nop

0000000000000010 <_ZN12_GLOBAL__N_15SubOpD1Ev>:
      10:	ret
      14:	nop

0000000000000018 <_ZN12_GLOBAL__N_15AndOpD1Ev>:
      18:	ret
      1c:	nop

0000000000000020 <_ZN12_GLOBAL__N_15ShlOpD1Ev>:
      20:	ret
      24:	nop

0000000000000028 <_ZN12_GLOBAL__N_17TruncOpD1Ev>:
      28:	ret
      2c:	nop

0000000000000030 <_ZN12_GLOBAL__N_15RotOpD1Ev>:
      30:	ret
      34:	nop

0000000000000038 <_ZN12_GLOBAL__N_110DecimateOpD1Ev>:
      38:	ret
      3c:	nop

0000000000000040 <_ZN12_GLOBAL__N_112InterleaveOpD1Ev>:
      40:	ret
      44:	nop

0000000000000048 <_ZN12_GLOBAL__N_110SequenceOpD1Ev>:
      48:	ret
      4c:	nop

0000000000000050 <_ZN12_GLOBAL__N_113FieldExpanderD1Ev>:
      50:	ret
      54:	nop

0000000000000058 <_ZN12_GLOBAL__N_15AddOpD0Ev>:
      58:	mov	x1, #0x8                   	// #8
      5c:	b	0 <_ZdlPvm>

0000000000000060 <_ZN12_GLOBAL__N_15SubOpD0Ev>:
      60:	mov	x1, #0x8                   	// #8
      64:	b	0 <_ZdlPvm>

0000000000000068 <_ZN12_GLOBAL__N_15AndOpD0Ev>:
      68:	mov	x1, #0x8                   	// #8
      6c:	b	0 <_ZdlPvm>

0000000000000070 <_ZN12_GLOBAL__N_15ShlOpD0Ev>:
      70:	mov	x1, #0x8                   	// #8
      74:	b	0 <_ZdlPvm>

0000000000000078 <_ZN12_GLOBAL__N_17TruncOpD0Ev>:
      78:	mov	x1, #0x8                   	// #8
      7c:	b	0 <_ZdlPvm>

0000000000000080 <_ZN12_GLOBAL__N_15RotOpD0Ev>:
      80:	mov	x1, #0x10                  	// #16
      84:	b	0 <_ZdlPvm>

0000000000000088 <_ZN12_GLOBAL__N_110DecimateOpD0Ev>:
      88:	mov	x1, #0x8                   	// #8
      8c:	b	0 <_ZdlPvm>

0000000000000090 <_ZN12_GLOBAL__N_112InterleaveOpD0Ev>:
      90:	mov	x1, #0x8                   	// #8
      94:	b	0 <_ZdlPvm>

0000000000000098 <_ZN12_GLOBAL__N_110SequenceOpD0Ev>:
      98:	mov	x1, #0x8                   	// #8
      9c:	b	0 <_ZdlPvm>

00000000000000a0 <_ZN12_GLOBAL__N_113FieldExpanderD0Ev>:
      a0:	mov	x1, #0x18                  	// #24
      a4:	b	0 <_ZdlPvm>

00000000000000a8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE15allocateBucketsEj.isra.0.part.0>:
      a8:	stp	x29, x30, [sp, #-16]!
      ac:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      b0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      b4:	mov	x29, sp
      b8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      bc:	add	x3, x3, #0x0
      c0:	add	x1, x1, #0x0
      c4:	add	x0, x0, #0x0
      c8:	mov	w2, #0x47d                 	// #1149
      cc:	bl	0 <__assert_fail>

00000000000000d0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      d0:	stp	x29, x30, [sp, #-16]!
      d4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      d8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      dc:	mov	x29, sp
      e0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
      e4:	add	x3, x3, #0x0
      e8:	add	x1, x1, #0x0
      ec:	add	x0, x0, #0x0
      f0:	mov	w2, #0x69                  	// #105
      f4:	bl	0 <__assert_fail>

00000000000000f8 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      f8:	stp	x29, x30, [sp, #-16]!
      fc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     100:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     104:	mov	x29, sp
     108:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     10c:	add	x3, x3, #0x0
     110:	add	x1, x1, #0x0
     114:	add	x0, x0, #0x0
     118:	mov	w2, #0x69                  	// #105
     11c:	bl	0 <__assert_fail>

0000000000000120 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     120:	stp	x29, x30, [sp, #-16]!
     124:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     128:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     12c:	mov	x29, sp
     130:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     134:	add	x3, x3, #0x0
     138:	add	x1, x1, #0x0
     13c:	add	x0, x0, #0x0
     140:	mov	w2, #0x69                  	// #105
     144:	bl	0 <__assert_fail>

0000000000000148 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     148:	stp	x29, x30, [sp, #-16]!
     14c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     150:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     154:	mov	x29, sp
     158:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     15c:	add	x3, x3, #0x0
     160:	add	x1, x1, #0x0
     164:	add	x0, x0, #0x0
     168:	mov	w2, #0x69                  	// #105
     16c:	bl	0 <__assert_fail>

0000000000000170 <_ZN4llvm3isaINS_7DagInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     170:	stp	x29, x30, [sp, #-16]!
     174:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     178:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     17c:	mov	x29, sp
     180:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     184:	add	x3, x3, #0x0
     188:	add	x1, x1, #0x0
     18c:	add	x0, x0, #0x0
     190:	mov	w2, #0x69                  	// #105
     194:	bl	0 <__assert_fail>

0000000000000198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>:
     198:	stp	x29, x30, [sp, #-112]!
     19c:	mov	x29, sp
     1a0:	stp	x21, x22, [sp, #32]
     1a4:	mov	x21, x0
     1a8:	add	x22, x0, #0x30
     1ac:	mov	x0, x22
     1b0:	stp	x19, x20, [sp, #16]
     1b4:	mov	x19, x2
     1b8:	stp	x23, x24, [sp, #48]
     1bc:	mov	x24, x3
     1c0:	stp	x25, x26, [sp, #64]
     1c4:	mov	x25, x1
     1c8:	stp	x27, x28, [sp, #80]
     1cc:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
     1d0:	mov	w27, w0
     1d4:	ldr	x26, [x21, #48]
     1d8:	mov	x20, x27
     1dc:	ldr	x0, [x26, x27, lsl #3]
     1e0:	add	x1, x26, w27, uxtw #3
     1e4:	cbz	x0, 210 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x78>
     1e8:	cmn	x0, #0x8
     1ec:	b.eq	204 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x6c>  // b.none
     1f0:	add	x0, sp, #0x68
     1f4:	mov	w2, #0x0                   	// #0
     1f8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     1fc:	ldr	x0, [sp, #104]
     200:	b	27c <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0xe4>
     204:	ldr	w0, [x22, #16]
     208:	sub	w0, w0, #0x1
     20c:	str	w0, [x22, #16]
     210:	add	x28, x19, #0x11
     214:	mov	x0, x28
     218:	bl	0 <malloc>
     21c:	mov	x23, x0
     220:	cbz	x0, 310 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x178>
     224:	stp	x19, xzr, [x0]
     228:	add	x3, x0, #0x10
     22c:	cbnz	x19, 2d8 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x140>
     230:	ldp	w1, w0, [x22, #8]
     234:	strb	wzr, [x3, x19]
     238:	ldr	w2, [x22, #16]
     23c:	str	x23, [x26, x27, lsl #3]
     240:	add	w0, w0, #0x1
     244:	str	w0, [x22, #12]
     248:	add	w0, w0, w2
     24c:	cmp	w0, w1
     250:	b.hi	2f0 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x158>  // b.pmore
     254:	mov	w1, w20
     258:	mov	x0, x22
     25c:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
     260:	mov	w3, w0
     264:	ldr	x1, [x21, #48]
     268:	add	x0, sp, #0x68
     26c:	mov	w2, #0x0                   	// #0
     270:	add	x1, x1, w3, uxtw #3
     274:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     278:	ldr	x0, [sp, #104]
     27c:	ldr	x1, [x0]
     280:	ldr	x2, [x24]
     284:	str	xzr, [x24]
     288:	ldr	x0, [x1, #8]
     28c:	str	x2, [x1, #8]
     290:	cbz	x0, 2a0 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x108>
     294:	ldr	x1, [x0]
     298:	ldr	x1, [x1, #16]
     29c:	blr	x1
     2a0:	ldp	x19, x20, [sp, #16]
     2a4:	ldp	x21, x22, [sp, #32]
     2a8:	ldp	x23, x24, [sp, #48]
     2ac:	ldp	x25, x26, [sp, #64]
     2b0:	ldp	x27, x28, [sp, #80]
     2b4:	ldp	x29, x30, [sp], #112
     2b8:	ret
     2bc:	mov	x0, #0x1                   	// #1
     2c0:	bl	0 <malloc>
     2c4:	mov	x23, x0
     2c8:	cbz	x0, 314 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x17c>
     2cc:	add	x3, x23, #0x10
     2d0:	mov	x0, #0xffffffffffffffef    	// #-17
     2d4:	stp	x0, xzr, [x23]
     2d8:	mov	x0, x3
     2dc:	mov	x1, x25
     2e0:	mov	x2, x19
     2e4:	bl	0 <memcpy>
     2e8:	mov	x3, x0
     2ec:	b	230 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x98>
     2f0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     2f4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     2f8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     2fc:	add	x3, x3, #0x0
     300:	add	x1, x1, #0x0
     304:	add	x0, x0, #0x0
     308:	mov	w2, #0x1bb                 	// #443
     30c:	bl	0 <__assert_fail>
     310:	cbz	x28, 2bc <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x124>
     314:	mov	w1, #0x1                   	// #1
     318:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     31c:	add	x0, x0, #0x0
     320:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     324:	brk	#0x3e8

0000000000000328 <_ZN4llvm9SetTheoryC1Ev>:
     328:	stp	x29, x30, [sp, #-64]!
     32c:	add	x2, x0, #0x8
     330:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     334:	mov	x29, sp
     338:	stp	x19, x20, [sp, #16]
     33c:	mov	x19, x0
     340:	mov	x0, #0x8                   	// #8
     344:	stp	x21, x22, [sp, #32]
     348:	adrp	x20, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     34c:	add	x21, sp, #0x38
     350:	ldr	q0, [x1]
     354:	str	wzr, [x19, #8]
     358:	str	xzr, [x19, #16]
     35c:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     360:	stp	x2, x2, [x2, #16]
     364:	add	x22, x22, #0x0
     368:	str	xzr, [x2, #32]
     36c:	str	xzr, [x19, #48]
     370:	str	xzr, [x19, #80]
     374:	stur	q0, [x19, #56]
     378:	stur	q0, [x19, #88]
     37c:	bl	0 <_Znwm>
     380:	mov	x4, x0
     384:	add	x5, x20, #0x0
     388:	mov	x0, x19
     38c:	add	x5, x5, #0x10
     390:	mov	x1, x22
     394:	str	x5, [x4]
     398:	mov	x3, x21
     39c:	mov	x2, #0x3                   	// #3
     3a0:	str	x4, [sp, #56]
     3a4:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     3a8:	ldr	x0, [sp, #56]
     3ac:	cbz	x0, 3bc <_ZN4llvm9SetTheoryC1Ev+0x94>
     3b0:	ldr	x1, [x0]
     3b4:	ldr	x1, [x1, #16]
     3b8:	blr	x1
     3bc:	mov	x0, #0x8                   	// #8
     3c0:	bl	0 <_Znwm>
     3c4:	mov	x5, x0
     3c8:	add	x4, x20, #0x0
     3cc:	add	x4, x4, #0x40
     3d0:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     3d4:	add	x22, x22, #0x0
     3d8:	mov	x0, x19
     3dc:	str	x4, [x5]
     3e0:	mov	x1, x22
     3e4:	mov	x3, x21
     3e8:	mov	x2, #0x3                   	// #3
     3ec:	str	x5, [sp, #56]
     3f0:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     3f4:	ldr	x0, [sp, #56]
     3f8:	cbz	x0, 408 <_ZN4llvm9SetTheoryC1Ev+0xe0>
     3fc:	ldr	x1, [x0]
     400:	ldr	x1, [x1, #16]
     404:	blr	x1
     408:	mov	x0, #0x8                   	// #8
     40c:	bl	0 <_Znwm>
     410:	mov	x5, x0
     414:	add	x4, x20, #0x0
     418:	add	x4, x4, #0x70
     41c:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     420:	add	x22, x22, #0x0
     424:	mov	x0, x19
     428:	str	x4, [x5]
     42c:	mov	x1, x22
     430:	mov	x3, x21
     434:	mov	x2, #0x3                   	// #3
     438:	str	x5, [sp, #56]
     43c:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     440:	ldr	x0, [sp, #56]
     444:	cbz	x0, 454 <_ZN4llvm9SetTheoryC1Ev+0x12c>
     448:	ldr	x1, [x0]
     44c:	ldr	x1, [x1, #16]
     450:	blr	x1
     454:	mov	x0, #0x8                   	// #8
     458:	bl	0 <_Znwm>
     45c:	mov	x5, x0
     460:	add	x4, x20, #0x0
     464:	add	x4, x4, #0xa0
     468:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     46c:	add	x22, x22, #0x0
     470:	mov	x0, x19
     474:	str	x4, [x5]
     478:	mov	x1, x22
     47c:	mov	x3, x21
     480:	mov	x2, #0x3                   	// #3
     484:	str	x5, [sp, #56]
     488:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     48c:	ldr	x0, [sp, #56]
     490:	cbz	x0, 4a0 <_ZN4llvm9SetTheoryC1Ev+0x178>
     494:	ldr	x1, [x0]
     498:	ldr	x1, [x1, #16]
     49c:	blr	x1
     4a0:	mov	x0, #0x8                   	// #8
     4a4:	bl	0 <_Znwm>
     4a8:	mov	x5, x0
     4ac:	add	x4, x20, #0x0
     4b0:	add	x4, x4, #0xd8
     4b4:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     4b8:	add	x22, x22, #0x0
     4bc:	mov	x0, x19
     4c0:	str	x4, [x5]
     4c4:	mov	x1, x22
     4c8:	mov	x3, x21
     4cc:	mov	x2, #0x5                   	// #5
     4d0:	str	x5, [sp, #56]
     4d4:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     4d8:	ldr	x0, [sp, #56]
     4dc:	cbz	x0, 4ec <_ZN4llvm9SetTheoryC1Ev+0x1c4>
     4e0:	ldr	x1, [x0]
     4e4:	ldr	x1, [x1, #16]
     4e8:	blr	x1
     4ec:	mov	x0, #0x10                  	// #16
     4f0:	bl	0 <_Znwm>
     4f4:	mov	x4, x0
     4f8:	add	x5, x20, #0x0
     4fc:	add	x5, x5, #0x110
     500:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     504:	add	x22, x22, #0x0
     508:	mov	x0, x19
     50c:	str	x5, [x4]
     510:	mov	x1, x22
     514:	strb	wzr, [x4, #8]
     518:	mov	x3, x21
     51c:	mov	x2, #0x4                   	// #4
     520:	str	x4, [sp, #56]
     524:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     528:	ldr	x0, [sp, #56]
     52c:	cbz	x0, 53c <_ZN4llvm9SetTheoryC1Ev+0x214>
     530:	ldr	x1, [x0]
     534:	ldr	x1, [x1, #16]
     538:	blr	x1
     53c:	mov	x0, #0x10                  	// #16
     540:	bl	0 <_Znwm>
     544:	mov	x4, x0
     548:	add	x5, x20, #0x0
     54c:	add	x5, x5, #0x110
     550:	mov	w6, #0x1                   	// #1
     554:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     558:	add	x22, x22, #0x0
     55c:	str	x5, [x4]
     560:	mov	x0, x19
     564:	strb	w6, [x4, #8]
     568:	mov	x1, x22
     56c:	mov	x3, x21
     570:	mov	x2, #0x4                   	// #4
     574:	str	x4, [sp, #56]
     578:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     57c:	ldr	x0, [sp, #56]
     580:	cbz	x0, 590 <_ZN4llvm9SetTheoryC1Ev+0x268>
     584:	ldr	x1, [x0]
     588:	ldr	x1, [x1, #16]
     58c:	blr	x1
     590:	mov	x0, #0x8                   	// #8
     594:	bl	0 <_Znwm>
     598:	mov	x5, x0
     59c:	add	x4, x20, #0x0
     5a0:	add	x4, x4, #0x148
     5a4:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     5a8:	add	x22, x22, #0x0
     5ac:	mov	x0, x19
     5b0:	str	x4, [x5]
     5b4:	mov	x1, x22
     5b8:	mov	x3, x21
     5bc:	mov	x2, #0x8                   	// #8
     5c0:	str	x5, [sp, #56]
     5c4:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     5c8:	ldr	x0, [sp, #56]
     5cc:	cbz	x0, 5dc <_ZN4llvm9SetTheoryC1Ev+0x2b4>
     5d0:	ldr	x1, [x0]
     5d4:	ldr	x1, [x1, #16]
     5d8:	blr	x1
     5dc:	mov	x0, #0x8                   	// #8
     5e0:	bl	0 <_Znwm>
     5e4:	mov	x5, x0
     5e8:	add	x4, x20, #0x0
     5ec:	add	x4, x4, #0x180
     5f0:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     5f4:	add	x22, x22, #0x0
     5f8:	mov	x0, x19
     5fc:	str	x4, [x5]
     600:	mov	x1, x22
     604:	mov	x3, x21
     608:	mov	x2, #0xa                   	// #10
     60c:	str	x5, [sp, #56]
     610:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     614:	ldr	x0, [sp, #56]
     618:	cbz	x0, 628 <_ZN4llvm9SetTheoryC1Ev+0x300>
     61c:	ldr	x1, [x0]
     620:	ldr	x1, [x1, #16]
     624:	blr	x1
     628:	mov	x0, #0x8                   	// #8
     62c:	bl	0 <_Znwm>
     630:	mov	x4, x0
     634:	add	x20, x20, #0x0
     638:	add	x20, x20, #0x1b0
     63c:	adrp	x22, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     640:	add	x22, x22, #0x0
     644:	mov	x0, x19
     648:	str	x20, [x4]
     64c:	mov	x1, x22
     650:	mov	x3, x21
     654:	mov	x2, #0x8                   	// #8
     658:	str	x4, [sp, #56]
     65c:	bl	198 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>
     660:	ldr	x0, [sp, #56]
     664:	cbz	x0, 674 <_ZN4llvm9SetTheoryC1Ev+0x34c>
     668:	ldr	x1, [x0]
     66c:	ldr	x1, [x1, #16]
     670:	blr	x1
     674:	ldp	x19, x20, [sp, #16]
     678:	ldp	x21, x22, [sp, #32]
     67c:	ldp	x29, x30, [sp], #64
     680:	ret
     684:	nop

0000000000000688 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE>:
     688:	stp	x29, x30, [sp, #-112]!
     68c:	mov	x29, sp
     690:	stp	x21, x22, [sp, #32]
     694:	mov	x21, x0
     698:	add	x22, x0, #0x50
     69c:	mov	x0, x22
     6a0:	stp	x19, x20, [sp, #16]
     6a4:	mov	x19, x2
     6a8:	stp	x23, x24, [sp, #48]
     6ac:	mov	x24, x3
     6b0:	stp	x25, x26, [sp, #64]
     6b4:	mov	x25, x1
     6b8:	stp	x27, x28, [sp, #80]
     6bc:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
     6c0:	mov	w27, w0
     6c4:	ldr	x26, [x21, #80]
     6c8:	mov	x20, x27
     6cc:	ldr	x0, [x26, x27, lsl #3]
     6d0:	add	x1, x26, w27, uxtw #3
     6d4:	cbz	x0, 700 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x78>
     6d8:	cmn	x0, #0x8
     6dc:	b.eq	6f4 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x6c>  // b.none
     6e0:	add	x0, sp, #0x68
     6e4:	mov	w2, #0x0                   	// #0
     6e8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     6ec:	ldr	x0, [sp, #104]
     6f0:	b	76c <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0xe4>
     6f4:	ldr	w0, [x22, #16]
     6f8:	sub	w0, w0, #0x1
     6fc:	str	w0, [x22, #16]
     700:	add	x28, x19, #0x11
     704:	mov	x0, x28
     708:	bl	0 <malloc>
     70c:	mov	x23, x0
     710:	cbz	x0, 800 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x178>
     714:	stp	x19, xzr, [x0]
     718:	add	x3, x0, #0x10
     71c:	cbnz	x19, 7c8 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x140>
     720:	ldp	w1, w0, [x22, #8]
     724:	strb	wzr, [x3, x19]
     728:	ldr	w2, [x22, #16]
     72c:	str	x23, [x26, x27, lsl #3]
     730:	add	w0, w0, #0x1
     734:	str	w0, [x22, #12]
     738:	add	w0, w0, w2
     73c:	cmp	w0, w1
     740:	b.hi	7e0 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x158>  // b.pmore
     744:	mov	w1, w20
     748:	mov	x0, x22
     74c:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
     750:	mov	w3, w0
     754:	ldr	x1, [x21, #80]
     758:	add	x0, sp, #0x68
     75c:	mov	w2, #0x0                   	// #0
     760:	add	x1, x1, w3, uxtw #3
     764:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     768:	ldr	x0, [sp, #104]
     76c:	ldr	x1, [x0]
     770:	ldr	x2, [x24]
     774:	str	xzr, [x24]
     778:	ldr	x0, [x1, #8]
     77c:	str	x2, [x1, #8]
     780:	cbz	x0, 790 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x108>
     784:	ldr	x1, [x0]
     788:	ldr	x1, [x1, #16]
     78c:	blr	x1
     790:	ldp	x19, x20, [sp, #16]
     794:	ldp	x21, x22, [sp, #32]
     798:	ldp	x23, x24, [sp, #48]
     79c:	ldp	x25, x26, [sp, #64]
     7a0:	ldp	x27, x28, [sp, #80]
     7a4:	ldp	x29, x30, [sp], #112
     7a8:	ret
     7ac:	mov	x0, #0x1                   	// #1
     7b0:	bl	0 <malloc>
     7b4:	mov	x23, x0
     7b8:	cbz	x0, 804 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x17c>
     7bc:	add	x3, x23, #0x10
     7c0:	mov	x0, #0xffffffffffffffef    	// #-17
     7c4:	stp	x0, xzr, [x23]
     7c8:	mov	x0, x3
     7cc:	mov	x1, x25
     7d0:	mov	x2, x19
     7d4:	bl	0 <memcpy>
     7d8:	mov	x3, x0
     7dc:	b	720 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x98>
     7e0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     7e4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     7e8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     7ec:	add	x3, x3, #0x0
     7f0:	add	x1, x1, #0x0
     7f4:	add	x0, x0, #0x0
     7f8:	mov	w2, #0x1bb                 	// #443
     7fc:	bl	0 <__assert_fail>
     800:	cbz	x28, 7ac <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x124>
     804:	mov	w1, #0x1                   	// #1
     808:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     80c:	add	x0, x0, #0x0
     810:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     814:	brk	#0x3e8

0000000000000818 <_ZN4llvm9SetTheory16addFieldExpanderENS_9StringRefES1_>:
     818:	stp	x29, x30, [sp, #-80]!
     81c:	mov	x29, sp
     820:	stp	x19, x20, [sp, #16]
     824:	mov	x20, x3
     828:	mov	x19, x4
     82c:	stp	x21, x22, [sp, #32]
     830:	mov	x21, x0
     834:	mov	x22, x2
     838:	mov	x0, #0x18                  	// #24
     83c:	str	x23, [sp, #48]
     840:	mov	x23, x1
     844:	bl	0 <_Znwm>
     848:	mov	x5, x0
     84c:	adrp	x6, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     850:	add	x6, x6, #0x0
     854:	mov	x0, x21
     858:	add	x6, x6, #0x1e0
     85c:	mov	x1, x23
     860:	stp	x6, x20, [x5]
     864:	mov	x2, x22
     868:	add	x3, sp, #0x48
     86c:	str	x19, [x5, #16]
     870:	str	x5, [sp, #72]
     874:	bl	688 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE>
     878:	ldr	x0, [sp, #72]
     87c:	cbz	x0, 88c <_ZN4llvm9SetTheory16addFieldExpanderENS_9StringRefES1_+0x74>
     880:	ldr	x1, [x0]
     884:	ldr	x1, [x1, #16]
     888:	blr	x1
     88c:	ldp	x19, x20, [sp, #16]
     890:	ldp	x21, x22, [sp, #32]
     894:	ldr	x23, [sp, #48]
     898:	ldp	x29, x30, [sp], #80
     89c:	ret

00000000000008a0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
     8a0:	stp	x29, x30, [sp, #-80]!
     8a4:	mov	x29, sp
     8a8:	stp	x19, x20, [sp, #16]
     8ac:	ldr	w20, [x3, #152]
     8b0:	ldrb	w0, [x0, #8]
     8b4:	cmp	w0, #0x0
     8b8:	cneg	x4, x4, ne  // ne = any
     8bc:	cbz	w20, b70 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2d0>
     8c0:	stp	x21, x22, [sp, #32]
     8c4:	mov	x19, x5
     8c8:	mov	w20, w20
     8cc:	stp	x23, x24, [sp, #48]
     8d0:	mov	x24, x3
     8d4:	stp	x25, x26, [sp, #64]
     8d8:	tbnz	x4, #63, b7c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2dc>
     8dc:	udiv	x25, x4, x20
     8e0:	msub	x4, x25, x20, x4
     8e4:	ldr	x21, [x24, #144]
     8e8:	lsl	x25, x4, #3
     8ec:	add	x23, x21, x25
     8f0:	add	x20, x21, x20, lsl #3
     8f4:	cmp	x23, x20
     8f8:	b.eq	a30 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x190>  // b.none
     8fc:	add	x22, x19, #0xa0
     900:	add	x21, x19, #0x90
     904:	add	x26, x19, #0x10
     908:	b	958 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb8>
     90c:	mov	x4, x26
     910:	mov	w1, #0x10                  	// #16
     914:	ldr	x3, [x23]
     918:	cmn	x3, #0x10
     91c:	ccmn	x3, #0x8, #0x4, ne  // ne = any
     920:	b.eq	ef4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     924:	lsr	w0, w3, #9
     928:	sub	w1, w1, #0x1
     92c:	eor	w0, w0, w3, lsr #4
     930:	and	w6, w0, w1
     934:	mov	x0, x6
     938:	ubfiz	x2, x6, #3, #28
     93c:	ldr	x6, [x4, x6, lsl #3]
     940:	add	x5, x4, x2
     944:	cmp	x3, x6
     948:	b.ne	b90 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2f0>  // b.any
     94c:	add	x23, x23, #0x8
     950:	cmp	x20, x23
     954:	b.eq	a28 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x188>  // b.none
     958:	ldrb	w0, [x19, #8]
     95c:	and	w7, w0, #0x1
     960:	tbnz	w0, #0, 90c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6c>
     964:	ldr	w1, [x19, #24]
     968:	ldr	x4, [x19, #16]
     96c:	cbnz	w1, 914 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x74>
     970:	ldr	w0, [x19, #8]
     974:	mov	x2, #0x0                   	// #0
     978:	ldr	x3, [x19]
     97c:	lsr	w5, w0, #1
     980:	add	w5, w5, #0x1
     984:	add	x3, x3, #0x1
     988:	str	x3, [x19]
     98c:	add	w3, w1, w1, lsl #1
     990:	cmp	w3, w5, lsl #2
     994:	b.ls	bd4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x334>  // b.plast
     998:	ldr	w3, [x19, #12]
     99c:	sub	w3, w1, w3
     9a0:	sub	w5, w3, w5
     9a4:	cmp	w5, w1, lsr #3
     9a8:	b.ls	d08 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x468>  // b.plast
     9ac:	cbz	x2, df4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     9b0:	lsr	w1, w0, #1
     9b4:	adds	w1, w1, #0x1
     9b8:	b.mi	f34 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x694>  // b.first
     9bc:	bfi	w0, w1, #1, #31
     9c0:	str	w0, [x19, #8]
     9c4:	ldr	x0, [x2]
     9c8:	cmn	x0, #0x8
     9cc:	b.eq	9dc <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x13c>  // b.none
     9d0:	ldr	w0, [x19, #12]
     9d4:	sub	w0, w0, #0x1
     9d8:	str	w0, [x19, #12]
     9dc:	ldr	x0, [x23]
     9e0:	ldr	w1, [x19, #156]
     9e4:	str	x0, [x2]
     9e8:	ldr	w0, [x19, #152]
     9ec:	cmp	w0, w1
     9f0:	b.cs	cd0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x430>  // b.hs, b.nlast
     9f4:	ldr	x1, [x19, #144]
     9f8:	ldr	x2, [x23]
     9fc:	str	x2, [x1, w0, uxtw #3]
     a00:	ldp	w0, w2, [x19, #152]
     a04:	mov	w1, w0
     a08:	add	x1, x1, #0x1
     a0c:	cmp	x1, x2
     a10:	b.hi	f14 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x674>  // b.pmore
     a14:	add	w0, w0, #0x1
     a18:	str	w0, [x19, #152]
     a1c:	add	x23, x23, #0x8
     a20:	cmp	x20, x23
     a24:	b.ne	958 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb8>  // b.any
     a28:	ldr	x21, [x24, #144]
     a2c:	add	x20, x21, x25
     a30:	cmp	x21, x20
     a34:	b.eq	b64 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>  // b.none
     a38:	add	x23, x19, #0xa0
     a3c:	add	x22, x19, #0x90
     a40:	add	x24, x19, #0x10
     a44:	b	a94 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1f4>
     a48:	mov	x4, x24
     a4c:	mov	w1, #0x10                  	// #16
     a50:	ldr	x3, [x21]
     a54:	cmn	x3, #0x10
     a58:	ccmn	x3, #0x8, #0x4, ne  // ne = any
     a5c:	b.eq	ef4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     a60:	lsr	w0, w3, #9
     a64:	sub	w1, w1, #0x1
     a68:	eor	w0, w0, w3, lsr #4
     a6c:	and	w6, w0, w1
     a70:	mov	x0, x6
     a74:	ubfiz	x2, x6, #3, #28
     a78:	ldr	x6, [x4, x6, lsl #3]
     a7c:	add	x5, x4, x2
     a80:	cmp	x6, x3
     a84:	b.ne	c30 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x390>  // b.any
     a88:	add	x21, x21, #0x8
     a8c:	cmp	x21, x20
     a90:	b.eq	b64 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>  // b.none
     a94:	ldrb	w0, [x19, #8]
     a98:	and	w7, w0, #0x1
     a9c:	tbnz	w0, #0, a48 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1a8>
     aa0:	ldr	w1, [x19, #24]
     aa4:	ldr	x4, [x19, #16]
     aa8:	cbnz	w1, a50 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1b0>
     aac:	ldr	w0, [x19, #8]
     ab0:	mov	x2, #0x0                   	// #0
     ab4:	ldr	x4, [x19]
     ab8:	lsr	w3, w0, #1
     abc:	add	w3, w3, #0x1
     ac0:	add	x4, x4, #0x1
     ac4:	str	x4, [x19]
     ac8:	add	w4, w1, w1, lsl #1
     acc:	cmp	w4, w3, lsl #2
     ad0:	b.ls	c74 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3d4>  // b.plast
     ad4:	ldr	w4, [x19, #12]
     ad8:	sub	w4, w1, w4
     adc:	sub	w3, w4, w3
     ae0:	cmp	w3, w1, lsr #3
     ae4:	b.ls	d78 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4d8>  // b.plast
     ae8:	cbz	x2, df4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     aec:	lsr	w1, w0, #1
     af0:	adds	w1, w1, #0x1
     af4:	b.mi	f34 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x694>  // b.first
     af8:	bfi	w0, w1, #1, #31
     afc:	str	w0, [x19, #8]
     b00:	ldr	x0, [x2]
     b04:	cmn	x0, #0x8
     b08:	b.eq	b18 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x278>  // b.none
     b0c:	ldr	w0, [x19, #12]
     b10:	sub	w0, w0, #0x1
     b14:	str	w0, [x19, #12]
     b18:	ldr	x0, [x21]
     b1c:	ldr	w1, [x19, #156]
     b20:	str	x0, [x2]
     b24:	ldr	w0, [x19, #152]
     b28:	cmp	w0, w1
     b2c:	b.cs	cec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x44c>  // b.hs, b.nlast
     b30:	ldr	x1, [x19, #144]
     b34:	ldr	x2, [x21]
     b38:	str	x2, [x1, w0, uxtw #3]
     b3c:	ldp	w0, w2, [x19, #152]
     b40:	mov	w1, w0
     b44:	add	x1, x1, #0x1
     b48:	cmp	x1, x2
     b4c:	b.hi	f14 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x674>  // b.pmore
     b50:	add	w0, w0, #0x1
     b54:	str	w0, [x19, #152]
     b58:	add	x21, x21, #0x8
     b5c:	cmp	x21, x20
     b60:	b.ne	a94 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1f4>  // b.any
     b64:	ldp	x21, x22, [sp, #32]
     b68:	ldp	x23, x24, [sp, #48]
     b6c:	ldp	x25, x26, [sp, #64]
     b70:	ldp	x19, x20, [sp, #16]
     b74:	ldp	x29, x30, [sp], #80
     b78:	ret
     b7c:	neg	x4, x4
     b80:	udiv	x25, x4, x20
     b84:	msub	x4, x25, x20, x4
     b88:	sub	x4, x20, x4
     b8c:	b	8e4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x44>
     b90:	mov	w8, #0x1                   	// #1
     b94:	mov	x2, #0x0                   	// #0
     b98:	cmn	x6, #0x8
     b9c:	b.ne	e84 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5e4>  // b.any
     ba0:	ldr	x1, [x19]
     ba4:	cmp	x2, #0x0
     ba8:	ldr	w0, [x19, #8]
     bac:	csel	x2, x2, x5, ne  // ne = any
     bb0:	add	x1, x1, #0x1
     bb4:	str	x1, [x19]
     bb8:	lsr	w5, w0, #1
     bbc:	add	w5, w5, #0x1
     bc0:	cbz	w7, 1024 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x784>
     bc4:	mov	w3, #0x30                  	// #48
     bc8:	mov	w1, #0x10                  	// #16
     bcc:	cmp	w3, w5, lsl #2
     bd0:	b.hi	998 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf8>  // b.pmore
     bd4:	mov	x0, x19
     bd8:	lsl	w1, w1, #1
     bdc:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     be0:	ldrb	w0, [x19, #8]
     be4:	tbz	w0, #0, e14 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x574>
     be8:	mov	x4, x26
     bec:	mov	w2, #0x10                  	// #16
     bf0:	ldr	x1, [x23]
     bf4:	cmn	x1, #0x8
     bf8:	ccmn	x1, #0x10, #0x4, ne  // ne = any
     bfc:	b.eq	ef4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     c00:	lsr	w0, w1, #9
     c04:	sub	w3, w2, #0x1
     c08:	eor	w0, w0, w1, lsr #4
     c0c:	and	w5, w0, w3
     c10:	mov	x0, x5
     c14:	ubfiz	x2, x5, #3, #28
     c18:	ldr	x5, [x4, x5, lsl #3]
     c1c:	add	x2, x4, x2
     c20:	cmp	x5, x1
     c24:	b.ne	e44 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5a4>  // b.any
     c28:	ldr	w0, [x19, #8]
     c2c:	b	9b0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     c30:	mov	w8, #0x1                   	// #1
     c34:	mov	x2, #0x0                   	// #0
     c38:	cmn	x6, #0x8
     c3c:	b.ne	ebc <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x61c>  // b.any
     c40:	ldr	x1, [x19]
     c44:	cmp	x2, #0x0
     c48:	ldr	w0, [x19, #8]
     c4c:	csel	x2, x2, x5, ne  // ne = any
     c50:	add	x1, x1, #0x1
     c54:	str	x1, [x19]
     c58:	lsr	w3, w0, #1
     c5c:	add	w3, w3, #0x1
     c60:	cbz	w7, 102c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x78c>
     c64:	mov	w4, #0x30                  	// #48
     c68:	mov	w1, #0x10                  	// #16
     c6c:	cmp	w4, w3, lsl #2
     c70:	b.hi	ad4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x234>  // b.pmore
     c74:	mov	x0, x19
     c78:	lsl	w1, w1, #1
     c7c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     c80:	ldrb	w0, [x19, #8]
     c84:	tbz	w0, #0, e24 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x584>
     c88:	mov	x4, x24
     c8c:	mov	w2, #0x10                  	// #16
     c90:	ldr	x1, [x21]
     c94:	cmn	x1, #0x10
     c98:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     c9c:	b.eq	ef4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     ca0:	lsr	w0, w1, #9
     ca4:	sub	w3, w2, #0x1
     ca8:	eor	w0, w0, w1, lsr #4
     cac:	and	w5, w0, w3
     cb0:	mov	x0, x5
     cb4:	ubfiz	x2, x5, #3, #28
     cb8:	ldr	x5, [x4, x5, lsl #3]
     cbc:	add	x2, x4, x2
     cc0:	cmp	x5, x1
     cc4:	b.ne	e64 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5c4>  // b.any
     cc8:	ldr	w0, [x19, #8]
     ccc:	b	aec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     cd0:	mov	x0, x21
     cd4:	mov	x1, x22
     cd8:	mov	x3, #0x8                   	// #8
     cdc:	mov	x2, #0x0                   	// #0
     ce0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ce4:	ldr	w0, [x19, #152]
     ce8:	b	9f4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x154>
     cec:	mov	x0, x22
     cf0:	mov	x1, x23
     cf4:	mov	x3, #0x8                   	// #8
     cf8:	mov	x2, #0x0                   	// #0
     cfc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     d00:	ldr	w0, [x19, #152]
     d04:	b	b30 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x290>
     d08:	mov	x0, x19
     d0c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     d10:	ldrb	w0, [x19, #8]
     d14:	tbz	w0, #0, de8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x548>
     d18:	mov	x4, x26
     d1c:	mov	w2, #0x10                  	// #16
     d20:	ldr	x1, [x23]
     d24:	cmn	x1, #0x10
     d28:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     d2c:	b.eq	ef4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     d30:	lsr	w0, w1, #9
     d34:	sub	w3, w2, #0x1
     d38:	eor	w0, w0, w1, lsr #4
     d3c:	and	w5, w0, w3
     d40:	mov	x0, x5
     d44:	ubfiz	x2, x5, #3, #28
     d48:	ldr	x5, [x4, x5, lsl #3]
     d4c:	add	x2, x4, x2
     d50:	cmp	x1, x5
     d54:	b.eq	c28 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x388>  // b.none
     d58:	mov	w7, #0x1                   	// #1
     d5c:	mov	x6, #0x0                   	// #0
     d60:	cmn	x5, #0x8
     d64:	b.ne	fbc <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x71c>  // b.any
     d68:	ldr	w0, [x19, #8]
     d6c:	cbz	x6, 9b0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     d70:	mov	x2, x6
     d74:	b	9b0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     d78:	mov	x0, x19
     d7c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     d80:	ldrb	w0, [x19, #8]
     d84:	tbz	w0, #0, e34 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x594>
     d88:	mov	x4, x24
     d8c:	mov	w2, #0x10                  	// #16
     d90:	ldr	x1, [x21]
     d94:	cmn	x1, #0x10
     d98:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     d9c:	b.eq	ef4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x654>  // b.none
     da0:	lsr	w0, w1, #9
     da4:	sub	w3, w2, #0x1
     da8:	eor	w0, w0, w1, lsr #4
     dac:	and	w5, w0, w3
     db0:	mov	x0, x5
     db4:	ubfiz	x2, x5, #3, #28
     db8:	ldr	x5, [x4, x5, lsl #3]
     dbc:	add	x2, x4, x2
     dc0:	cmp	x1, x5
     dc4:	b.eq	cc8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x428>  // b.none
     dc8:	mov	w7, #0x1                   	// #1
     dcc:	mov	x6, #0x0                   	// #0
     dd0:	cmn	x5, #0x8
     dd4:	b.ne	ff0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x750>  // b.any
     dd8:	ldr	w0, [x19, #8]
     ddc:	cbz	x6, aec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     de0:	mov	x2, x6
     de4:	b	aec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     de8:	ldr	w2, [x19, #24]
     dec:	ldr	x4, [x19, #16]
     df0:	cbnz	w2, d20 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x480>
     df4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     df8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     dfc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     e00:	add	x3, x3, #0x0
     e04:	add	x1, x1, #0x0
     e08:	add	x0, x0, #0x0
     e0c:	mov	w2, #0x22f                 	// #559
     e10:	bl	0 <__assert_fail>
     e14:	ldr	w2, [x19, #24]
     e18:	ldr	x4, [x19, #16]
     e1c:	cbnz	w2, bf0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x350>
     e20:	b	df4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     e24:	ldr	w2, [x19, #24]
     e28:	ldr	x4, [x19, #16]
     e2c:	cbnz	w2, c90 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3f0>
     e30:	b	df4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     e34:	ldr	w2, [x19, #24]
     e38:	ldr	x4, [x19, #16]
     e3c:	cbnz	w2, d90 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4f0>
     e40:	b	df4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x554>
     e44:	mov	w7, #0x1                   	// #1
     e48:	mov	x6, #0x0                   	// #0
     e4c:	cmn	x5, #0x8
     e50:	b.ne	f54 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6b4>  // b.any
     e54:	cbz	x6, c28 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x388>
     e58:	ldr	w0, [x19, #8]
     e5c:	mov	x2, x6
     e60:	b	9b0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     e64:	mov	w7, #0x1                   	// #1
     e68:	mov	x6, #0x0                   	// #0
     e6c:	cmn	x5, #0x8
     e70:	b.ne	f88 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6e8>  // b.any
     e74:	cbz	x6, cc8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x428>
     e78:	ldr	w0, [x19, #8]
     e7c:	mov	x2, x6
     e80:	b	aec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     e84:	add	w0, w0, w8
     e88:	cmp	x2, #0x0
     e8c:	and	w9, w1, w0
     e90:	ccmn	x6, #0x10, #0x0, eq  // eq = none
     e94:	csel	x5, x5, x2, eq  // eq = none
     e98:	add	w8, w8, #0x1
     e9c:	and	w0, w1, w0
     ea0:	add	x10, x4, x9, lsl #3
     ea4:	ldr	x6, [x4, x9, lsl #3]
     ea8:	cmp	x3, x6
     eac:	b.eq	94c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xac>  // b.none
     eb0:	mov	x2, x5
     eb4:	mov	x5, x10
     eb8:	b	b98 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2f8>
     ebc:	add	w0, w0, w8
     ec0:	cmp	x2, #0x0
     ec4:	and	w9, w1, w0
     ec8:	ccmn	x6, #0x10, #0x0, eq  // eq = none
     ecc:	csel	x5, x5, x2, eq  // eq = none
     ed0:	add	w8, w8, #0x1
     ed4:	and	w0, w1, w0
     ed8:	add	x10, x4, x9, lsl #3
     edc:	ldr	x6, [x4, x9, lsl #3]
     ee0:	cmp	x3, x6
     ee4:	b.eq	a88 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1e8>  // b.none
     ee8:	mov	x2, x5
     eec:	mov	x5, x10
     ef0:	b	c38 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x398>
     ef4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     ef8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     efc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f00:	add	x3, x3, #0x0
     f04:	add	x1, x1, #0x0
     f08:	add	x0, x0, #0x0
     f0c:	mov	w2, #0x250                 	// #592
     f10:	bl	0 <__assert_fail>
     f14:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f18:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f1c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f20:	add	x3, x3, #0x0
     f24:	add	x1, x1, #0x0
     f28:	add	x0, x0, #0x0
     f2c:	mov	w2, #0x43                  	// #67
     f30:	bl	0 <__assert_fail>
     f34:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f38:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f3c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
     f40:	add	x3, x3, #0x0
     f44:	add	x1, x1, #0x0
     f48:	add	x0, x0, #0x0
     f4c:	mov	w2, #0x441                 	// #1089
     f50:	bl	0 <__assert_fail>
     f54:	add	w0, w0, w7
     f58:	cmp	x6, #0x0
     f5c:	and	w8, w3, w0
     f60:	ccmn	x5, #0x10, #0x0, eq  // eq = none
     f64:	csel	x6, x6, x2, ne  // ne = any
     f68:	add	w7, w7, #0x1
     f6c:	and	w0, w3, w0
     f70:	add	x2, x4, x8, lsl #3
     f74:	ldr	x5, [x4, x8, lsl #3]
     f78:	cmp	x1, x5
     f7c:	b.ne	e4c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5ac>  // b.any
     f80:	ldr	w0, [x19, #8]
     f84:	b	9b0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     f88:	add	w0, w7, w0
     f8c:	cmp	x6, #0x0
     f90:	and	w8, w3, w0
     f94:	ccmn	x5, #0x10, #0x0, eq  // eq = none
     f98:	csel	x6, x6, x2, ne  // ne = any
     f9c:	add	w7, w7, #0x1
     fa0:	and	w0, w3, w0
     fa4:	add	x2, x4, x8, lsl #3
     fa8:	ldr	x5, [x4, x8, lsl #3]
     fac:	cmp	x1, x5
     fb0:	b.ne	e6c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5cc>  // b.any
     fb4:	ldr	w0, [x19, #8]
     fb8:	b	aec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
     fbc:	add	w0, w7, w0
     fc0:	cmp	x6, #0x0
     fc4:	and	w8, w3, w0
     fc8:	ccmn	x5, #0x10, #0x0, eq  // eq = none
     fcc:	csel	x6, x6, x2, ne  // ne = any
     fd0:	add	w7, w7, #0x1
     fd4:	and	w0, w3, w0
     fd8:	add	x2, x4, x8, lsl #3
     fdc:	ldr	x5, [x4, x8, lsl #3]
     fe0:	cmp	x1, x5
     fe4:	b.ne	d60 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4c0>  // b.any
     fe8:	ldr	w0, [x19, #8]
     fec:	b	9b0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
     ff0:	add	w0, w0, w7
     ff4:	cmp	x6, #0x0
     ff8:	and	w8, w3, w0
     ffc:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    1000:	csel	x6, x6, x2, ne  // ne = any
    1004:	add	w7, w7, #0x1
    1008:	and	w0, w3, w0
    100c:	add	x2, x4, x8, lsl #3
    1010:	ldr	x5, [x4, x8, lsl #3]
    1014:	cmp	x1, x5
    1018:	b.ne	dd0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x530>  // b.any
    101c:	ldr	w0, [x19, #8]
    1020:	b	aec <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
    1024:	ldr	w1, [x19, #24]
    1028:	b	98c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    102c:	ldr	w1, [x19, #24]
    1030:	b	ac8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x228>
    1034:	nop

0000000000001038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>:
    1038:	stp	x29, x30, [sp, #-176]!
    103c:	mov	x29, sp
    1040:	stp	x19, x20, [sp, #16]
    1044:	stp	x21, x22, [sp, #32]
    1048:	cbz	x1, 18ac <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x874>
    104c:	mov	x22, x1
    1050:	ldrb	w1, [x1, #8]
    1054:	mov	x19, x2
    1058:	cmp	w1, #0x6
    105c:	b.eq	10d4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x9c>  // b.none
    1060:	stp	x23, x24, [sp, #48]
    1064:	mov	x20, x0
    1068:	mov	x23, x3
    106c:	mov	x24, x4
    1070:	cmp	w1, #0x9
    1074:	b.eq	13e4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3ac>  // b.none
    1078:	str	x25, [sp, #64]
    107c:	cmp	w1, #0x5
    1080:	b.eq	1430 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3f8>  // b.none
    1084:	ldr	x1, [x22]
    1088:	add	x21, sp, #0x70
    108c:	mov	x0, x22
    1090:	mov	x8, x21
    1094:	add	x20, sp, #0x90
    1098:	add	x19, sp, #0x58
    109c:	ldr	x1, [x1, #40]
    10a0:	blr	x1
    10a4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    10a8:	mov	x8, x20
    10ac:	mov	x1, x21
    10b0:	add	x0, x0, #0x0
    10b4:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    10b8:	mov	x1, x20
    10bc:	mov	x0, x19
    10c0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    10c4:	mov	x2, x19
    10c8:	mov	x0, x23
    10cc:	mov	x1, x24
    10d0:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    10d4:	ldr	x1, [x22, #24]
    10d8:	bl	1a90 <_ZN4llvm9SetTheory6expandEPNS_6RecordE>
    10dc:	mov	x20, x0
    10e0:	cbz	x0, 1234 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1fc>
    10e4:	stp	x23, x24, [sp, #48]
    10e8:	add	x21, x19, #0xa0
    10ec:	add	x24, x19, #0x10
    10f0:	ldp	x22, x23, [x0]
    10f4:	add	x20, x19, #0x90
    10f8:	cmp	x22, x23
    10fc:	b.ne	1150 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x118>  // b.any
    1100:	b	1220 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e8>
    1104:	mov	x3, x24
    1108:	mov	w1, #0x10                  	// #16
    110c:	ldr	x2, [x22]
    1110:	cmn	x2, #0x8
    1114:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    1118:	b.eq	17c0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x788>  // b.none
    111c:	lsr	w0, w2, #9
    1120:	sub	w1, w1, #0x1
    1124:	eor	w0, w0, w2, lsr #4
    1128:	and	w5, w0, w1
    112c:	mov	x0, x5
    1130:	ubfiz	x4, x5, #3, #28
    1134:	ldr	x5, [x3, x5, lsl #3]
    1138:	add	x4, x3, x4
    113c:	cmp	x2, x5
    1140:	b.ne	1344 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x30c>  // b.any
    1144:	add	x22, x22, #0x8
    1148:	cmp	x23, x22
    114c:	b.eq	1220 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e8>  // b.none
    1150:	ldrb	w0, [x19, #8]
    1154:	and	w7, w0, #0x1
    1158:	tbnz	w0, #0, 1104 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xcc>
    115c:	ldr	w1, [x19, #24]
    1160:	ldr	x3, [x19, #16]
    1164:	cbnz	w1, 110c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xd4>
    1168:	ldr	w2, [x19, #8]
    116c:	mov	x6, #0x0                   	// #0
    1170:	ldr	x4, [x19]
    1174:	lsr	w0, w2, #1
    1178:	add	w3, w0, #0x1
    117c:	add	x0, x4, #0x1
    1180:	str	x0, [x19]
    1184:	add	w0, w1, w1, lsl #1
    1188:	cmp	w0, w3, lsl #2
    118c:	b.ls	1388 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x350>  // b.plast
    1190:	ldr	w0, [x19, #12]
    1194:	sub	w0, w1, w0
    1198:	sub	w0, w0, w3
    119c:	cmp	w0, w1, lsr #3
    11a0:	b.ls	1544 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x50c>  // b.plast
    11a4:	cbz	x6, 15c0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x588>
    11a8:	lsr	w0, w2, #1
    11ac:	adds	w0, w0, #0x1
    11b0:	b.mi	18bc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x884>  // b.first
    11b4:	bfi	w2, w0, #1, #31
    11b8:	str	w2, [x19, #8]
    11bc:	ldr	x0, [x6]
    11c0:	cmn	x0, #0x8
    11c4:	b.eq	11d4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x19c>  // b.none
    11c8:	ldr	w0, [x19, #12]
    11cc:	sub	w0, w0, #0x1
    11d0:	str	w0, [x19, #12]
    11d4:	ldr	x0, [x22]
    11d8:	ldr	w1, [x19, #156]
    11dc:	str	x0, [x6]
    11e0:	ldr	w0, [x19, #152]
    11e4:	cmp	w0, w1
    11e8:	b.cs	1528 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x4f0>  // b.hs, b.nlast
    11ec:	ldr	x1, [x19, #144]
    11f0:	ldr	x2, [x22]
    11f4:	str	x2, [x1, w0, uxtw #3]
    11f8:	ldp	w0, w2, [x19, #152]
    11fc:	mov	w1, w0
    1200:	add	x1, x1, #0x1
    1204:	cmp	x1, x2
    1208:	b.hi	1888 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x850>  // b.pmore
    120c:	add	w0, w0, #0x1
    1210:	str	w0, [x19, #152]
    1214:	add	x22, x22, #0x8
    1218:	cmp	x23, x22
    121c:	b.ne	1150 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x118>  // b.any
    1220:	ldp	x23, x24, [sp, #48]
    1224:	ldp	x19, x20, [sp, #16]
    1228:	ldp	x21, x22, [sp, #32]
    122c:	ldp	x29, x30, [sp], #176
    1230:	ret
    1234:	ldrb	w0, [x19, #8]
    1238:	ldr	x21, [x22, #24]
    123c:	and	w6, w0, #0x1
    1240:	tbnz	w0, #0, 1424 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3ec>
    1244:	ldr	w1, [x19, #24]
    1248:	ldr	x2, [x19, #16]
    124c:	cbz	w1, 1614 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x5dc>
    1250:	cmn	x21, #0x10
    1254:	ccmn	x21, #0x8, #0x4, ne  // ne = any
    1258:	b.eq	17bc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x784>  // b.none
    125c:	lsr	w0, w21, #9
    1260:	sub	w1, w1, #0x1
    1264:	eor	w0, w0, w21, lsr #4
    1268:	and	w4, w0, w1
    126c:	mov	x0, x4
    1270:	ubfiz	x3, x4, #3, #28
    1274:	ldr	x4, [x2, x4, lsl #3]
    1278:	add	x3, x2, x3
    127c:	cmp	x21, x4
    1280:	b.eq	1224 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1ec>  // b.none
    1284:	mov	x5, #0x0                   	// #0
    1288:	mov	w7, #0x1                   	// #1
    128c:	cmn	x4, #0x8
    1290:	b.ne	17e4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x7ac>  // b.any
    1294:	ldr	x0, [x19]
    1298:	cmp	x5, #0x0
    129c:	ldr	w2, [x19, #8]
    12a0:	csel	x5, x5, x3, ne  // ne = any
    12a4:	add	x0, x0, #0x1
    12a8:	str	x0, [x19]
    12ac:	lsr	w0, w2, #1
    12b0:	add	w3, w0, #0x1
    12b4:	cbz	w6, 1978 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x940>
    12b8:	mov	w0, #0x30                  	// #48
    12bc:	mov	w1, #0x10                  	// #16
    12c0:	cmp	w0, w3, lsl #2
    12c4:	b.ls	1694 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x65c>  // b.plast
    12c8:	ldr	w0, [x19, #12]
    12cc:	sub	w0, w1, w0
    12d0:	sub	w0, w0, w3
    12d4:	cmp	w0, w1, lsr #3
    12d8:	b.ls	1724 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6ec>  // b.plast
    12dc:	cbz	x5, 17a0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x768>
    12e0:	lsr	w0, w2, #1
    12e4:	adds	w0, w0, #0x1
    12e8:	b.mi	18b8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x880>  // b.first
    12ec:	bfi	w2, w0, #1, #31
    12f0:	str	w2, [x19, #8]
    12f4:	ldr	x0, [x5]
    12f8:	cmn	x0, #0x8
    12fc:	b.eq	130c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2d4>  // b.none
    1300:	ldr	w0, [x19, #12]
    1304:	sub	w0, w0, #0x1
    1308:	str	w0, [x19, #12]
    130c:	ldp	w0, w1, [x19, #152]
    1310:	str	x21, [x5]
    1314:	cmp	w0, w1
    1318:	b.cs	1708 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6d0>  // b.hs, b.nlast
    131c:	ldr	x1, [x19, #144]
    1320:	str	x21, [x1, w0, uxtw #3]
    1324:	ldp	w0, w2, [x19, #152]
    1328:	mov	w1, w0
    132c:	add	x1, x1, #0x1
    1330:	cmp	x1, x2
    1334:	b.hi	1884 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x84c>  // b.pmore
    1338:	add	w0, w0, #0x1
    133c:	str	w0, [x19, #152]
    1340:	b	1224 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1ec>
    1344:	mov	w8, #0x1                   	// #1
    1348:	mov	x6, #0x0                   	// #0
    134c:	cmn	x5, #0x8
    1350:	b.ne	165c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x624>  // b.any
    1354:	ldr	x0, [x19]
    1358:	cmp	x6, #0x0
    135c:	ldr	w2, [x19, #8]
    1360:	csel	x6, x6, x4, ne  // ne = any
    1364:	add	x0, x0, #0x1
    1368:	str	x0, [x19]
    136c:	lsr	w0, w2, #1
    1370:	add	w3, w0, #0x1
    1374:	cbz	w7, 1970 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x938>
    1378:	mov	w0, #0x30                  	// #48
    137c:	mov	w1, #0x10                  	// #16
    1380:	cmp	w0, w3, lsl #2
    1384:	b.hi	1190 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x158>  // b.pmore
    1388:	mov	x0, x19
    138c:	lsl	w1, w1, #1
    1390:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1394:	ldrb	w0, [x19, #8]
    1398:	tbz	w0, #0, 15b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x57c>
    139c:	mov	x3, x24
    13a0:	mov	w2, #0x10                  	// #16
    13a4:	ldr	x1, [x22]
    13a8:	cmn	x1, #0x8
    13ac:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    13b0:	b.eq	17c0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x788>  // b.none
    13b4:	lsr	w0, w1, #9
    13b8:	sub	w2, w2, #0x1
    13bc:	eor	w0, w0, w1, lsr #4
    13c0:	and	w4, w0, w2
    13c4:	mov	x0, x4
    13c8:	ubfiz	x6, x4, #3, #28
    13cc:	ldr	x4, [x3, x4, lsl #3]
    13d0:	add	x6, x3, x6
    13d4:	cmp	x1, x4
    13d8:	b.ne	15f4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x5bc>  // b.any
    13dc:	ldr	w2, [x19, #8]
    13e0:	b	11a8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    13e4:	ldr	w1, [x22, #32]
    13e8:	mov	x0, #0x28                  	// #40
    13ec:	add	x21, x22, x0
    13f0:	add	x1, x0, w1, uxtw #3
    13f4:	add	x22, x22, x1
    13f8:	cmp	x21, x22
    13fc:	b.eq	1220 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e8>  // b.none
    1400:	ldr	x1, [x21], #8
    1404:	mov	x3, x23
    1408:	mov	x4, x24
    140c:	mov	x2, x19
    1410:	mov	x0, x20
    1414:	bl	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1418:	cmp	x22, x21
    141c:	b.ne	1400 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3c8>  // b.any
    1420:	b	1220 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e8>
    1424:	add	x2, x19, #0x10
    1428:	mov	w1, #0x10                  	// #16
    142c:	b	1250 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x218>
    1430:	ldr	x0, [x22, #32]
    1434:	cbz	x0, 18b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x87c>
    1438:	ldrb	w1, [x0, #8]
    143c:	cmp	w1, #0x6
    1440:	b.eq	1478 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x440>  // b.none
    1444:	ldr	x1, [x22]
    1448:	add	x21, sp, #0x70
    144c:	mov	x8, x21
    1450:	mov	x0, x22
    1454:	add	x20, sp, #0x90
    1458:	add	x19, sp, #0x58
    145c:	ldr	x1, [x1, #40]
    1460:	blr	x1
    1464:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1468:	mov	x8, x20
    146c:	mov	x1, x21
    1470:	add	x0, x0, #0x0
    1474:	b	10b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x7c>
    1478:	ldr	x0, [x0, #24]
    147c:	ldr	x2, [x0]
    1480:	cbz	x2, 18e0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x8a8>
    1484:	ldrb	w0, [x2, #8]
    1488:	cmp	w0, #0x12
    148c:	b.ne	1918 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x8e0>  // b.any
    1490:	ldp	x1, x2, [x2, #24]
    1494:	add	x0, x20, #0x30
    1498:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    149c:	mov	w1, w0
    14a0:	cmn	w0, #0x1
    14a4:	b.eq	1638 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x600>  // b.none
    14a8:	ldr	x3, [x20, #48]
    14ac:	add	x21, sp, #0x90
    14b0:	mov	x0, x21
    14b4:	mov	w2, #0x1                   	// #1
    14b8:	add	x1, x3, w1, sxtw #3
    14bc:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    14c0:	ldr	x25, [sp, #144]
    14c4:	mov	x0, x21
    14c8:	ldr	w3, [x20, #56]
    14cc:	mov	w2, #0x1                   	// #1
    14d0:	ldr	x1, [x20, #48]
    14d4:	add	x1, x1, x3, lsl #3
    14d8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    14dc:	ldr	x0, [sp, #144]
    14e0:	cmp	x0, x25
    14e4:	b.eq	1938 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x900>  // b.none
    14e8:	ldr	x0, [x25]
    14ec:	mov	x4, x23
    14f0:	mov	x5, x24
    14f4:	mov	x3, x19
    14f8:	mov	x2, x22
    14fc:	mov	x1, x20
    1500:	ldr	x0, [x0, #8]
    1504:	ldr	x6, [x0]
    1508:	ldr	x6, [x6, #24]
    150c:	blr	x6
    1510:	ldp	x19, x20, [sp, #16]
    1514:	ldp	x21, x22, [sp, #32]
    1518:	ldp	x23, x24, [sp, #48]
    151c:	ldr	x25, [sp, #64]
    1520:	ldp	x29, x30, [sp], #176
    1524:	ret
    1528:	mov	x0, x20
    152c:	mov	x1, x21
    1530:	mov	x3, #0x8                   	// #8
    1534:	mov	x2, #0x0                   	// #0
    1538:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    153c:	ldr	w0, [x19, #152]
    1540:	b	11ec <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1b4>
    1544:	mov	x0, x19
    1548:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    154c:	ldrb	w0, [x19, #8]
    1550:	tbz	w0, #0, 15e4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x5ac>
    1554:	mov	x3, x24
    1558:	mov	w2, #0x10                  	// #16
    155c:	ldr	x1, [x22]
    1560:	cmn	x1, #0x10
    1564:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    1568:	b.eq	17c0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x788>  // b.none
    156c:	lsr	w0, w1, #9
    1570:	sub	w2, w2, #0x1
    1574:	eor	w0, w0, w1, lsr #4
    1578:	and	w4, w0, w2
    157c:	mov	x0, x4
    1580:	ubfiz	x6, x4, #3, #28
    1584:	ldr	x4, [x3, x4, lsl #3]
    1588:	add	x6, x3, x6
    158c:	cmp	x1, x4
    1590:	b.eq	13dc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3a4>  // b.none
    1594:	mov	w7, #0x1                   	// #1
    1598:	mov	x5, #0x0                   	// #0
    159c:	cmn	x4, #0x8
    15a0:	b.ne	1850 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x818>  // b.any
    15a4:	ldr	w2, [x19, #8]
    15a8:	cbz	x5, 11a8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    15ac:	mov	x6, x5
    15b0:	b	11a8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    15b4:	ldr	w2, [x19, #24]
    15b8:	ldr	x3, [x19, #16]
    15bc:	cbnz	w2, 13a4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x36c>
    15c0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    15c4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    15c8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    15cc:	add	x3, x3, #0x0
    15d0:	add	x1, x1, #0x0
    15d4:	add	x0, x0, #0x0
    15d8:	mov	w2, #0x22f                 	// #559
    15dc:	str	x25, [sp, #64]
    15e0:	bl	0 <__assert_fail>
    15e4:	ldr	w2, [x19, #24]
    15e8:	ldr	x3, [x19, #16]
    15ec:	cbnz	w2, 155c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x524>
    15f0:	b	15c0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x588>
    15f4:	mov	w7, #0x1                   	// #1
    15f8:	mov	x5, #0x0                   	// #0
    15fc:	cmn	x4, #0x8
    1600:	b.ne	181c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x7e4>  // b.any
    1604:	cbz	x5, 13dc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x3a4>
    1608:	ldr	w2, [x19, #8]
    160c:	mov	x6, x5
    1610:	b	11a8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    1614:	ldr	w2, [x19, #8]
    1618:	mov	x5, #0x0                   	// #0
    161c:	ldr	x4, [x19]
    1620:	lsr	w0, w2, #1
    1624:	add	w3, w0, #0x1
    1628:	add	x0, x4, #0x1
    162c:	str	x0, [x19]
    1630:	add	w0, w1, w1, lsl #1
    1634:	b	12c0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x288>
    1638:	ldr	w3, [x20, #56]
    163c:	add	x21, sp, #0x90
    1640:	ldr	x1, [x20, #48]
    1644:	mov	x0, x21
    1648:	mov	w2, #0x1                   	// #1
    164c:	add	x1, x1, x3, lsl #3
    1650:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1654:	ldr	x25, [sp, #144]
    1658:	b	14c4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x48c>
    165c:	add	w0, w8, w0
    1660:	cmp	x6, #0x0
    1664:	and	w9, w1, w0
    1668:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    166c:	csel	x4, x4, x6, eq  // eq = none
    1670:	add	w8, w8, #0x1
    1674:	and	w0, w1, w0
    1678:	add	x10, x3, x9, lsl #3
    167c:	ldr	x5, [x3, x9, lsl #3]
    1680:	cmp	x2, x5
    1684:	b.eq	1144 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x10c>  // b.none
    1688:	mov	x6, x4
    168c:	mov	x4, x10
    1690:	b	134c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x314>
    1694:	mov	x0, x19
    1698:	lsl	w1, w1, #1
    169c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    16a0:	ldrb	w0, [x19, #8]
    16a4:	tbz	w0, #0, 1794 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x75c>
    16a8:	add	x2, x19, #0x10
    16ac:	mov	w1, #0x10                  	// #16
    16b0:	cmn	x21, #0x10
    16b4:	ccmn	x21, #0x8, #0x4, ne  // ne = any
    16b8:	b.eq	17bc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x784>  // b.none
    16bc:	lsr	w0, w21, #9
    16c0:	sub	w1, w1, #0x1
    16c4:	eor	w0, w0, w21, lsr #4
    16c8:	and	w3, w0, w1
    16cc:	mov	x0, x3
    16d0:	ubfiz	x5, x3, #3, #28
    16d4:	ldr	x3, [x2, x3, lsl #3]
    16d8:	add	x5, x2, x5
    16dc:	cmp	x21, x3
    16e0:	b.ne	16ec <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6b4>  // b.any
    16e4:	ldr	w2, [x19, #8]
    16e8:	b	12e0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    16ec:	mov	w4, #0x1                   	// #1
    16f0:	cmn	x3, #0x8
    16f4:	b.ne	18e4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x8ac>  // b.any
    16f8:	cbz	x20, 16e4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6ac>
    16fc:	ldr	w2, [x19, #8]
    1700:	mov	x5, x20
    1704:	b	12e0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    1708:	add	x0, x19, #0x90
    170c:	add	x1, x19, #0xa0
    1710:	mov	x3, #0x8                   	// #8
    1714:	mov	x2, #0x0                   	// #0
    1718:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    171c:	ldr	w0, [x19, #152]
    1720:	b	131c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2e4>
    1724:	mov	x0, x19
    1728:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    172c:	ldrb	w0, [x19, #8]
    1730:	tbz	w0, #0, 17a8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x770>
    1734:	add	x2, x19, #0x10
    1738:	mov	w1, #0x10                  	// #16
    173c:	cmn	x21, #0x10
    1740:	ccmn	x21, #0x8, #0x4, ne  // ne = any
    1744:	b.eq	17bc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x784>  // b.none
    1748:	lsr	w0, w21, #9
    174c:	sub	w1, w1, #0x1
    1750:	eor	w0, w0, w21, lsr #4
    1754:	and	w3, w0, w1
    1758:	mov	x0, x3
    175c:	ubfiz	x5, x3, #3, #28
    1760:	ldr	x3, [x2, x3, lsl #3]
    1764:	add	x5, x2, x5
    1768:	cmp	x21, x3
    176c:	b.eq	16e4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6ac>  // b.none
    1770:	mov	x6, x5
    1774:	mov	w4, #0x1                   	// #1
    1778:	mov	x5, #0x0                   	// #0
    177c:	cmn	x3, #0x8
    1780:	b.ne	1984 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x94c>  // b.any
    1784:	cbnz	x5, 16e4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6ac>
    1788:	ldr	w2, [x19, #8]
    178c:	mov	x5, x6
    1790:	b	12e0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    1794:	ldr	w1, [x19, #24]
    1798:	ldr	x2, [x19, #16]
    179c:	cbnz	w1, 16b0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x678>
    17a0:	stp	x23, x24, [sp, #48]
    17a4:	b	15c0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x588>
    17a8:	ldr	w1, [x19, #24]
    17ac:	ldr	x2, [x19, #16]
    17b0:	cbnz	w1, 173c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x704>
    17b4:	stp	x23, x24, [sp, #48]
    17b8:	b	15c0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x588>
    17bc:	stp	x23, x24, [sp, #48]
    17c0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    17c4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    17c8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    17cc:	add	x3, x3, #0x0
    17d0:	add	x1, x1, #0x0
    17d4:	add	x0, x0, #0x0
    17d8:	mov	w2, #0x250                 	// #592
    17dc:	str	x25, [sp, #64]
    17e0:	bl	0 <__assert_fail>
    17e4:	add	w0, w0, w7
    17e8:	cmp	x5, #0x0
    17ec:	and	w8, w1, w0
    17f0:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    17f4:	csel	x3, x3, x5, eq  // eq = none
    17f8:	add	w7, w7, #0x1
    17fc:	and	w0, w1, w0
    1800:	add	x9, x2, x8, lsl #3
    1804:	ldr	x4, [x2, x8, lsl #3]
    1808:	cmp	x21, x4
    180c:	b.eq	1224 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1ec>  // b.none
    1810:	mov	x5, x3
    1814:	mov	x3, x9
    1818:	b	128c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x254>
    181c:	add	w0, w0, w7
    1820:	cmp	x5, #0x0
    1824:	and	w8, w2, w0
    1828:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    182c:	csel	x5, x5, x6, ne  // ne = any
    1830:	add	w7, w7, #0x1
    1834:	and	w0, w2, w0
    1838:	add	x6, x3, x8, lsl #3
    183c:	ldr	x4, [x3, x8, lsl #3]
    1840:	cmp	x1, x4
    1844:	b.ne	15fc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x5c4>  // b.any
    1848:	ldr	w2, [x19, #8]
    184c:	b	11a8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    1850:	add	w0, w7, w0
    1854:	cmp	x5, #0x0
    1858:	and	w8, w2, w0
    185c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    1860:	csel	x5, x5, x6, ne  // ne = any
    1864:	add	w7, w7, #0x1
    1868:	and	w0, w2, w0
    186c:	add	x6, x3, x8, lsl #3
    1870:	ldr	x4, [x3, x8, lsl #3]
    1874:	cmp	x1, x4
    1878:	b.ne	159c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x564>  // b.any
    187c:	ldr	w2, [x19, #8]
    1880:	b	11a8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x170>
    1884:	stp	x23, x24, [sp, #48]
    1888:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    188c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1890:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1894:	add	x3, x3, #0x0
    1898:	add	x1, x1, #0x0
    189c:	add	x0, x0, #0x0
    18a0:	mov	w2, #0x43                  	// #67
    18a4:	str	x25, [sp, #64]
    18a8:	bl	0 <__assert_fail>
    18ac:	stp	x23, x24, [sp, #48]
    18b0:	str	x25, [sp, #64]
    18b4:	bl	120 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    18b8:	stp	x23, x24, [sp, #48]
    18bc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    18c0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    18c4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    18c8:	add	x3, x3, #0x0
    18cc:	add	x1, x1, #0x0
    18d0:	add	x0, x0, #0x0
    18d4:	mov	w2, #0x441                 	// #1089
    18d8:	str	x25, [sp, #64]
    18dc:	bl	0 <__assert_fail>
    18e0:	bl	d0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    18e4:	add	w0, w0, w4
    18e8:	cmp	x20, #0x0
    18ec:	and	w6, w1, w0
    18f0:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    18f4:	csel	x20, x20, x5, ne  // ne = any
    18f8:	add	w4, w4, #0x1
    18fc:	and	w0, w1, w0
    1900:	add	x5, x2, x6, lsl #3
    1904:	ldr	x3, [x2, x6, lsl #3]
    1908:	cmp	x21, x3
    190c:	b.ne	16f0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6b8>  // b.any
    1910:	ldr	w2, [x19, #8]
    1914:	b	12e0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    1918:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    191c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1920:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1924:	add	x3, x3, #0x0
    1928:	add	x1, x1, #0x0
    192c:	add	x0, x0, #0x0
    1930:	mov	w2, #0x108                 	// #264
    1934:	bl	0 <__assert_fail>
    1938:	ldr	x1, [x22]
    193c:	add	x20, sp, #0x70
    1940:	mov	x0, x22
    1944:	mov	x8, x20
    1948:	add	x19, sp, #0x58
    194c:	ldr	x1, [x1, #40]
    1950:	blr	x1
    1954:	mov	x1, x20
    1958:	mov	x8, x21
    195c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1960:	add	x0, x0, #0x0
    1964:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1968:	mov	x1, x21
    196c:	b	10bc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x84>
    1970:	ldr	w1, [x19, #24]
    1974:	b	1184 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x14c>
    1978:	ldr	w1, [x19, #24]
    197c:	add	w0, w1, w1, lsl #1
    1980:	b	12c0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x288>
    1984:	add	w0, w4, w0
    1988:	cmp	x5, #0x0
    198c:	and	w7, w1, w0
    1990:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    1994:	csel	x5, x5, x6, ne  // ne = any
    1998:	add	w4, w4, #0x1
    199c:	and	w0, w1, w0
    19a0:	add	x6, x2, x7, lsl #3
    19a4:	ldr	x3, [x2, x7, lsl #3]
    19a8:	cmp	x21, x3
    19ac:	b.ne	177c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x744>  // b.any
    19b0:	ldr	w2, [x19, #8]
    19b4:	mov	x5, x6
    19b8:	b	12e0 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2a8>
    19bc:	nop

00000000000019c0 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    19c0:	stp	x29, x30, [sp, #-64]!
    19c4:	mov	x7, #0x38                  	// #56
    19c8:	mov	x29, sp
    19cc:	ldr	w6, [x2, #48]
    19d0:	stp	x19, x20, [sp, #16]
    19d4:	add	x19, x2, x7
    19d8:	add	x6, x7, w6, uxtw #3
    19dc:	add	x20, x2, x6
    19e0:	cmp	x20, x19
    19e4:	b.eq	1a28 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x68>  // b.none
    19e8:	stp	x21, x22, [sp, #32]
    19ec:	mov	x22, x4
    19f0:	mov	x21, x5
    19f4:	stp	x23, x24, [sp, #48]
    19f8:	mov	x24, x1
    19fc:	mov	x23, x3
    1a00:	ldr	x1, [x19], #8
    1a04:	mov	x3, x22
    1a08:	mov	x4, x21
    1a0c:	mov	x2, x23
    1a10:	mov	x0, x24
    1a14:	bl	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1a18:	cmp	x19, x20
    1a1c:	b.ne	1a00 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x40>  // b.any
    1a20:	ldp	x21, x22, [sp, #32]
    1a24:	ldp	x23, x24, [sp, #48]
    1a28:	ldp	x19, x20, [sp, #16]
    1a2c:	ldp	x29, x30, [sp], #64
    1a30:	ret
    1a34:	nop

0000000000001a38 <_ZN12_GLOBAL__N_113FieldExpander6expandERN4llvm9SetTheoryEPNS1_6RecordERNS1_14SmallSetVectorIS5_Lj16EEE>:
    1a38:	stp	x29, x30, [sp, #-48]!
    1a3c:	mov	x29, sp
    1a40:	ldp	x4, x5, [x0, #8]
    1a44:	stp	x19, x20, [sp, #16]
    1a48:	mov	x19, x2
    1a4c:	mov	x20, x1
    1a50:	mov	x0, x2
    1a54:	str	x21, [sp, #32]
    1a58:	mov	x21, x3
    1a5c:	mov	x1, x4
    1a60:	mov	x2, x5
    1a64:	bl	0 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>
    1a68:	mov	x1, x0
    1a6c:	ldr	w4, [x19, #16]
    1a70:	mov	x2, x21
    1a74:	mov	x0, x20
    1a78:	ldr	x3, [x19, #8]
    1a7c:	ldp	x19, x20, [sp, #16]
    1a80:	ldr	x21, [sp, #32]
    1a84:	ldp	x29, x30, [sp], #48
    1a88:	b	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1a8c:	nop

0000000000001a90 <_ZN4llvm9SetTheory6expandEPNS_6RecordE>:
    1a90:	stp	x29, x30, [sp, #-400]!
    1a94:	mov	x29, sp
    1a98:	ldr	x2, [x0, #16]
    1a9c:	stp	x19, x20, [sp, #16]
    1aa0:	mov	x20, x0
    1aa4:	stp	x21, x22, [sp, #32]
    1aa8:	add	x21, x0, #0x8
    1aac:	str	x1, [sp, #88]
    1ab0:	cbz	x2, 1ae8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x58>
    1ab4:	mov	x0, x21
    1ab8:	ldr	x3, [x2, #32]
    1abc:	cmp	x3, x1
    1ac0:	b.cc	1d60 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2d0>  // b.lo, b.ul, b.last
    1ac4:	mov	x0, x2
    1ac8:	ldr	x2, [x2, #16]
    1acc:	cbnz	x2, 1ab8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x28>
    1ad0:	cmp	x21, x0
    1ad4:	b.eq	1ae8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x58>  // b.none
    1ad8:	ldr	x2, [x0, #32]
    1adc:	add	x19, x0, #0x28
    1ae0:	cmp	x2, x1
    1ae4:	b.ls	1d4c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2bc>  // b.plast
    1ae8:	ldr	w22, [x1, #96]
    1aec:	mov	w2, #0x18                  	// #24
    1af0:	ldr	x0, [x1, #88]
    1af4:	stp	x23, x24, [sp, #48]
    1af8:	add	x24, x20, #0x50
    1afc:	add	x23, sp, #0x70
    1b00:	mov	x19, x0
    1b04:	umaddl	x22, w22, w2, x0
    1b08:	cmp	x22, x0
    1b0c:	b.eq	1d90 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x300>  // b.none
    1b10:	str	x25, [sp, #64]
    1b14:	b	1b24 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x94>
    1b18:	add	x19, x19, #0x18
    1b1c:	cmp	x22, x19
    1b20:	b.eq	1d8c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2fc>  // b.none
    1b24:	ldr	x1, [x19]
    1b28:	ldr	x2, [x1]
    1b2c:	cbz	x2, 1dd4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x344>
    1b30:	ldrb	w1, [x2, #8]
    1b34:	cmp	w1, #0x12
    1b38:	b.ne	1b18 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x88>  // b.any
    1b3c:	ldp	x1, x2, [x2, #24]
    1b40:	mov	x0, x24
    1b44:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    1b48:	mov	w1, w0
    1b4c:	cmn	w0, #0x1
    1b50:	b.eq	1d6c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2dc>  // b.none
    1b54:	ldr	x3, [x24]
    1b58:	mov	x0, x23
    1b5c:	mov	w2, #0x1                   	// #1
    1b60:	add	x1, x3, w1, sxtw #3
    1b64:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1b68:	ldr	x25, [sp, #112]
    1b6c:	mov	x0, x23
    1b70:	ldr	w3, [x20, #88]
    1b74:	mov	w2, #0x1                   	// #1
    1b78:	ldr	x1, [x20, #80]
    1b7c:	add	x1, x1, x3, lsl #3
    1b80:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1b84:	ldr	x0, [sp, #112]
    1b88:	cmp	x25, x0
    1b8c:	b.eq	1b18 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x88>  // b.none
    1b90:	ldr	x2, [x20, #16]
    1b94:	mov	x1, x21
    1b98:	cbz	x2, 1bcc <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x13c>
    1b9c:	ldr	x4, [sp, #88]
    1ba0:	ldr	x3, [x2, #32]
    1ba4:	cmp	x3, x4
    1ba8:	b.cc	1dac <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x31c>  // b.lo, b.ul, b.last
    1bac:	mov	x1, x2
    1bb0:	ldr	x2, [x2, #16]
    1bb4:	cbnz	x2, 1ba0 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x110>
    1bb8:	cmp	x21, x1
    1bbc:	b.eq	1bcc <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x13c>  // b.none
    1bc0:	ldr	x0, [x1, #32]
    1bc4:	cmp	x0, x4
    1bc8:	b.ls	1bf0 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x160>  // b.plast
    1bcc:	add	x5, sp, #0x58
    1bd0:	add	x4, sp, #0x68
    1bd4:	mov	x3, x23
    1bd8:	mov	x0, x20
    1bdc:	adrp	x2, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1be0:	add	x2, x2, #0x0
    1be4:	str	x5, [sp, #112]
    1be8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1bec:	mov	x1, x0
    1bf0:	mov	x0, #0x1                   	// #1
    1bf4:	stp	xzr, x0, [sp, #112]
    1bf8:	add	x19, x1, #0x28
    1bfc:	cbnz	x0, 1db4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x324>
    1c00:	ldr	w4, [sp, #136]
    1c04:	sub	w0, w4, #0x1
    1c08:	tst	w0, w4
    1c0c:	b.ne	1e14 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x384>  // b.any
    1c10:	ldr	x3, [sp, #128]
    1c14:	add	x4, x3, w4, uxtw #3
    1c18:	cmp	x3, x4
    1c1c:	b.eq	1c94 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x204>  // b.none
    1c20:	sub	x1, x4, #0x8
    1c24:	mov	x0, x3
    1c28:	sub	x1, x1, x3
    1c2c:	cmp	x1, #0x10
    1c30:	lsr	x1, x1, #3
    1c34:	add	x1, x1, #0x1
    1c38:	b.ls	1c6c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1dc>  // b.plast
    1c3c:	adrp	x5, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1c40:	lsr	x2, x1, #1
    1c44:	ldr	q0, [x5]
    1c48:	add	x2, x3, x2, lsl #4
    1c4c:	nop
    1c50:	str	q0, [x0], #16
    1c54:	cmp	x2, x0
    1c58:	b.ne	1c50 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1c0>  // b.any
    1c5c:	and	x0, x1, #0xfffffffffffffffe
    1c60:	cmp	x0, x1
    1c64:	add	x3, x3, x0, lsl #3
    1c68:	b.eq	1c94 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x204>  // b.none
    1c6c:	mov	x0, x3
    1c70:	mov	x1, #0xfffffffffffffff8    	// #-8
    1c74:	str	x1, [x0], #8
    1c78:	cmp	x4, x0
    1c7c:	b.eq	1c94 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x204>  // b.none
    1c80:	str	x1, [x3, #8]
    1c84:	add	x0, x3, #0x10
    1c88:	cmp	x4, x0
    1c8c:	b.eq	1c94 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x204>  // b.none
    1c90:	str	x1, [x3, #16]
    1c94:	add	x0, x23, #0xa0
    1c98:	str	x0, [sp, #256]
    1c9c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1ca0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1ca4:	add	x1, x1, #0x0
    1ca8:	ldr	d0, [x0]
    1cac:	ldr	x0, [x25]
    1cb0:	ldr	x21, [sp, #88]
    1cb4:	ldr	x0, [x0, #8]
    1cb8:	ldr	x2, [x0]
    1cbc:	ldr	x4, [x2, #24]
    1cc0:	str	d0, [sp, #264]
    1cc4:	cmp	x4, x1
    1cc8:	b.ne	1dc0 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x330>  // b.any
    1ccc:	ldp	x2, x3, [x0, #8]
    1cd0:	mov	x0, x21
    1cd4:	mov	x1, x2
    1cd8:	mov	x2, x3
    1cdc:	bl	0 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>
    1ce0:	mov	x1, x0
    1ce4:	ldr	w4, [x21, #16]
    1ce8:	mov	x0, x20
    1cec:	ldr	x3, [x21, #8]
    1cf0:	mov	x2, x23
    1cf4:	bl	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1cf8:	ldr	x1, [sp, #256]
    1cfc:	mov	x0, x19
    1d00:	ldr	w2, [sp, #264]
    1d04:	mov	w3, #0x0                   	// #0
    1d08:	add	x23, x23, #0xa0
    1d0c:	add	x2, x1, x2, lsl #3
    1d10:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1d14:	ldr	x0, [sp, #256]
    1d18:	cmp	x0, x23
    1d1c:	b.eq	1d24 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x294>  // b.none
    1d20:	bl	0 <free>
    1d24:	ldrb	w0, [sp, #120]
    1d28:	tbnz	w0, #0, 1d44 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x2b4>
    1d2c:	ldr	x0, [sp, #128]
    1d30:	ldr	w1, [sp, #136]
    1d34:	lsl	x1, x1, #3
    1d38:	bl	0 <_ZdlPvm>
    1d3c:	ldrb	w0, [sp, #120]
    1d40:	tbnz	w0, #0, 1df4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x364>
    1d44:	ldp	x23, x24, [sp, #48]
    1d48:	ldr	x25, [sp, #64]
    1d4c:	mov	x0, x19
    1d50:	ldp	x19, x20, [sp, #16]
    1d54:	ldp	x21, x22, [sp, #32]
    1d58:	ldp	x29, x30, [sp], #400
    1d5c:	ret
    1d60:	ldr	x2, [x2, #24]
    1d64:	cbnz	x2, 1ab8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x28>
    1d68:	b	1ad0 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x40>
    1d6c:	ldr	w3, [x20, #88]
    1d70:	mov	x0, x23
    1d74:	ldr	x1, [x20, #80]
    1d78:	mov	w2, #0x1                   	// #1
    1d7c:	add	x1, x1, x3, lsl #3
    1d80:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1d84:	ldr	x25, [sp, #112]
    1d88:	b	1b6c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0xdc>
    1d8c:	ldr	x25, [sp, #64]
    1d90:	mov	x19, #0x0                   	// #0
    1d94:	mov	x0, x19
    1d98:	ldp	x19, x20, [sp, #16]
    1d9c:	ldp	x21, x22, [sp, #32]
    1da0:	ldp	x23, x24, [sp, #48]
    1da4:	ldp	x29, x30, [sp], #400
    1da8:	ret
    1dac:	ldr	x2, [x2, #24]
    1db0:	b	1bb4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x124>
    1db4:	add	x4, x23, #0x90
    1db8:	add	x3, x23, #0x10
    1dbc:	b	1c20 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x190>
    1dc0:	mov	x2, x21
    1dc4:	mov	x1, x20
    1dc8:	mov	x3, x23
    1dcc:	blr	x4
    1dd0:	b	1cf8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x268>
    1dd4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1dd8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1ddc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1de0:	add	x3, x3, #0x0
    1de4:	add	x1, x1, #0x0
    1de8:	add	x0, x0, #0x0
    1dec:	mov	w2, #0x69                  	// #105
    1df0:	bl	0 <__assert_fail>
    1df4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1df8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1dfc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1e00:	add	x3, x3, #0x0
    1e04:	add	x1, x1, #0x0
    1e08:	add	x0, x0, #0x0
    1e0c:	mov	w2, #0x45b                 	// #1115
    1e10:	bl	0 <__assert_fail>
    1e14:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1e18:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1e1c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1e20:	add	x3, x3, #0x0
    1e24:	add	x1, x1, #0x0
    1e28:	add	x0, x0, #0x0
    1e2c:	mov	w2, #0x15b                 	// #347
    1e30:	bl	0 <__assert_fail>
    1e34:	nop

0000000000001e38 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    1e38:	sub	sp, sp, #0x740
    1e3c:	stp	x29, x30, [sp]
    1e40:	mov	x29, sp
    1e44:	stp	x19, x20, [sp, #16]
    1e48:	add	x19, sp, #0x190
    1e4c:	mov	x20, x3
    1e50:	mov	x0, x19
    1e54:	stp	x21, x22, [sp, #32]
    1e58:	mov	x21, x1
    1e5c:	mov	w1, #0x0                   	// #0
    1e60:	stp	x23, x24, [sp, #48]
    1e64:	mov	x23, x4
    1e68:	mov	x24, x5
    1e6c:	stp	x25, x26, [sp, #64]
    1e70:	stp	x27, x28, [sp, #80]
    1e74:	ldr	w27, [x2, #48]
    1e78:	str	x2, [sp, #104]
    1e7c:	mov	x2, #0x120                 	// #288
    1e80:	bl	0 <memset>
    1e84:	mov	w25, w27
    1e88:	mov	x0, #0x1                   	// #1
    1e8c:	str	x0, [sp, #408]
    1e90:	cbnz	x0, 317c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1344>
    1e94:	ldr	w5, [sp, #424]
    1e98:	sub	w0, w5, #0x1
    1e9c:	tst	w0, w5
    1ea0:	b.ne	32f4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x14bc>  // b.any
    1ea4:	ldr	x3, [sp, #416]
    1ea8:	add	x5, x3, w5, uxtw #3
    1eac:	cmp	x3, x5
    1eb0:	b.eq	1f24 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xec>  // b.none
    1eb4:	sub	x2, x5, #0x8
    1eb8:	mov	x0, x3
    1ebc:	sub	x2, x2, x3
    1ec0:	cmp	x2, #0x10
    1ec4:	lsr	x2, x2, #3
    1ec8:	add	x4, x2, #0x1
    1ecc:	b.ls	1efc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc4>  // b.plast
    1ed0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1ed4:	lsr	x2, x4, #1
    1ed8:	ldr	q0, [x1]
    1edc:	add	x2, x3, x2, lsl #4
    1ee0:	str	q0, [x0], #16
    1ee4:	cmp	x0, x2
    1ee8:	b.ne	1ee0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa8>  // b.any
    1eec:	and	x0, x4, #0xfffffffffffffffe
    1ef0:	cmp	x0, x4
    1ef4:	add	x3, x3, x0, lsl #3
    1ef8:	b.eq	1f24 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xec>  // b.none
    1efc:	mov	x1, x3
    1f00:	mov	x0, #0xfffffffffffffff8    	// #-8
    1f04:	str	x0, [x1], #8
    1f08:	cmp	x5, x1
    1f0c:	b.eq	1f24 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xec>  // b.none
    1f10:	str	x0, [x3, #8]
    1f14:	add	x1, x3, #0x10
    1f18:	cmp	x5, x1
    1f1c:	b.eq	1f24 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xec>  // b.none
    1f20:	str	x0, [x3, #16]
    1f24:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1f28:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1f2c:	add	x4, sp, #0x2c0
    1f30:	str	x4, [sp, #688]
    1f34:	ldr	d1, [x0]
    1f38:	add	x0, sp, #0x2b0
    1f3c:	ldr	d0, [x1]
    1f40:	mov	x22, x4
    1f44:	str	x0, [sp, #128]
    1f48:	add	x0, x19, #0xa0
    1f4c:	str	x0, [sp, #544]
    1f50:	cmp	x25, #0x4
    1f54:	str	d1, [sp, #552]
    1f58:	str	d0, [sp, #696]
    1f5c:	b.hi	315c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1324>  // b.pmore
    1f60:	mov	w0, #0x120                 	// #288
    1f64:	str	w27, [sp, #696]
    1f68:	umaddl	x27, w27, w0, x22
    1f6c:	cmp	x27, x22
    1f70:	b.eq	2134 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2fc>  // b.none
    1f74:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    1f78:	add	x28, x19, #0x10
    1f7c:	mov	w25, #0x1                   	// #1
    1f80:	mov	x26, #0xfffffffffffffff8    	// #-8
    1f84:	ldr	q0, [x0]
    1f88:	str	xzr, [x22]
    1f8c:	stp	w25, wzr, [x22, #8]
    1f90:	cbnz	w25, 2b74 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd3c>
    1f94:	ldr	w1, [x22, #24]
    1f98:	sub	w0, w1, #0x1
    1f9c:	tst	w0, w1
    1fa0:	b.ne	32f4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x14bc>  // b.any
    1fa4:	ldr	x0, [x22, #16]
    1fa8:	ubfiz	x1, x1, #3, #32
    1fac:	add	x5, x0, x1
    1fb0:	cmp	x5, x0
    1fb4:	b.eq	2034 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1fc>  // b.none
    1fb8:	sub	x2, x5, #0x8
    1fbc:	mov	x1, x0
    1fc0:	sub	x2, x2, x0
    1fc4:	cmp	x2, #0x10
    1fc8:	lsr	x2, x2, #3
    1fcc:	add	x2, x2, #0x1
    1fd0:	b.ls	1ffc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c4>  // b.plast
    1fd4:	lsr	x3, x2, #1
    1fd8:	add	x3, x0, x3, lsl #4
    1fdc:	nop
    1fe0:	str	q0, [x1], #16
    1fe4:	cmp	x1, x3
    1fe8:	b.ne	1fe0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1a8>  // b.any
    1fec:	and	x1, x2, #0xfffffffffffffffe
    1ff0:	cmp	x1, x2
    1ff4:	add	x0, x0, x1, lsl #3
    1ff8:	b.eq	2020 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1e8>  // b.none
    1ffc:	mov	x1, x0
    2000:	str	x26, [x1], #8
    2004:	cmp	x5, x1
    2008:	b.eq	2020 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1e8>  // b.none
    200c:	str	x26, [x0, #8]
    2010:	add	x1, x0, #0x10
    2014:	cmp	x5, x1
    2018:	b.eq	2020 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1e8>  // b.none
    201c:	str	x26, [x0, #16]
    2020:	ldrb	w0, [x22, #8]
    2024:	tbnz	w0, #0, 2040 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x208>
    2028:	ldr	w1, [x22, #24]
    202c:	ldr	x0, [x22, #16]
    2030:	lsl	x1, x1, #3
    2034:	bl	0 <_ZdlPvm>
    2038:	ldrb	w0, [x22, #8]
    203c:	tbnz	w0, #0, 3114 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x12dc>
    2040:	ldrb	w0, [x22, #8]
    2044:	orr	w0, w0, #0x1
    2048:	strb	w0, [x22, #8]
    204c:	ldrb	w1, [sp, #408]
    2050:	tbnz	w1, #0, 2094 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x25c>
    2054:	ldr	w1, [sp, #424]
    2058:	cmp	w1, #0x10
    205c:	b.ls	2094 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x25c>  // b.plast
    2060:	and	w0, w0, #0xfffffffe
    2064:	strb	w0, [x22, #8]
    2068:	ldrb	w0, [sp, #408]
    206c:	tbnz	w0, #0, 3454 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x161c>
    2070:	ldr	w1, [sp, #424]
    2074:	cmp	w1, #0x10
    2078:	b.ls	3454 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x161c>  // b.plast
    207c:	ubfiz	x0, x1, #3, #32
    2080:	str	w1, [sp, #112]
    2084:	bl	0 <_Znwm>
    2088:	str	x0, [x22, #16]
    208c:	ldr	w1, [sp, #112]
    2090:	str	w1, [x22, #24]
    2094:	cmp	x22, x19
    2098:	b.eq	3434 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x15fc>  // b.none
    209c:	ldrb	w1, [x22, #8]
    20a0:	ldrb	w0, [sp, #408]
    20a4:	and	w0, w0, #0x1
    20a8:	tbnz	w1, #0, 2b80 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd48>
    20ac:	ldr	w2, [x22, #24]
    20b0:	mov	w1, #0x10                  	// #16
    20b4:	cbnz	w0, 20bc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x284>
    20b8:	ldr	w1, [sp, #424]
    20bc:	cmp	w1, w2
    20c0:	b.ne	338c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1554>  // b.any
    20c4:	ldr	w0, [sp, #408]
    20c8:	ldr	w1, [x22, #8]
    20cc:	lsr	w0, w0, #1
    20d0:	bfi	w1, w0, #1, #31
    20d4:	str	w1, [x22, #8]
    20d8:	ldrb	w0, [x22, #8]
    20dc:	ldr	w1, [sp, #412]
    20e0:	str	w1, [x22, #12]
    20e4:	tbz	w0, #0, 2b54 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd1c>
    20e8:	ldrb	w1, [sp, #408]
    20ec:	add	x0, x22, #0x10
    20f0:	tbnz	w1, #0, 2f54 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x111c>
    20f4:	ldr	x1, [sp, #416]
    20f8:	mov	x2, #0x80                  	// #128
    20fc:	nop
    2100:	bl	0 <memcpy>
    2104:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2108:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    210c:	ldr	d1, [x0]
    2110:	add	x0, x22, #0xa0
    2114:	str	x0, [x22, #144]
    2118:	ldr	q0, [x1]
    211c:	str	d1, [x22, #152]
    2120:	ldr	w0, [sp, #552]
    2124:	cbnz	w0, 2b8c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd54>
    2128:	add	x22, x22, #0x120
    212c:	cmp	x27, x22
    2130:	b.ne	1f88 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>  // b.any
    2134:	ldr	x0, [sp, #544]
    2138:	add	x19, x19, #0xa0
    213c:	cmp	x0, x19
    2140:	b.eq	2148 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x310>  // b.none
    2144:	bl	0 <free>
    2148:	ldrb	w0, [sp, #408]
    214c:	tbz	w0, #0, 30fc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x12c4>
    2150:	ldr	x1, [sp, #104]
    2154:	ldr	w25, [x1, #48]
    2158:	cbz	w25, 3314 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x14dc>
    215c:	mov	w0, w25
    2160:	add	x27, x1, #0x38
    2164:	mov	x22, #0x0                   	// #0
    2168:	mov	x28, #0x0                   	// #0
    216c:	mov	w26, #0x0                   	// #0
    2170:	b	217c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x344>
    2174:	ldr	x0, [sp, #104]
    2178:	ldr	w0, [x0, #48]
    217c:	cmp	w0, w28
    2180:	b.ls	334c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1514>  // b.plast
    2184:	ldr	w0, [sp, #696]
    2188:	ldr	x1, [x27, x28, lsl #3]
    218c:	cmp	w0, w28
    2190:	b.ls	3230 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x13f8>  // b.plast
    2194:	ldr	x2, [sp, #688]
    2198:	mov	x3, x23
    219c:	mov	x4, x24
    21a0:	mov	x0, x21
    21a4:	add	x2, x2, x22
    21a8:	bl	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    21ac:	ldr	w2, [sp, #696]
    21b0:	cmp	w2, w28
    21b4:	b.ls	3230 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x13f8>  // b.plast
    21b8:	ldr	x19, [sp, #688]
    21bc:	add	x28, x28, #0x1
    21c0:	add	x0, x19, x22
    21c4:	add	x22, x22, #0x120
    21c8:	ldr	w0, [x0, #152]
    21cc:	cmp	w26, w0
    21d0:	csel	w26, w26, w0, cs  // cs = hs, nlast
    21d4:	cmp	w25, w28
    21d8:	b.ne	2174 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x33c>  // b.any
    21dc:	mov	w9, w2
    21e0:	cbz	w26, 24e8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6b0>
    21e4:	mov	w2, w2
    21e8:	add	x22, x20, #0x10
    21ec:	add	x0, sp, #0x110
    21f0:	mov	x25, #0x0                   	// #0
    21f4:	str	x0, [sp, #112]
    21f8:	ldr	x0, [sp, #104]
    21fc:	ldr	w27, [x0, #48]
    2200:	cbz	w27, 3148 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1310>
    2204:	lsl	x28, x25, #3
    2208:	mov	x24, #0x0                   	// #0
    220c:	mov	x23, #0x0                   	// #0
    2210:	b	2264 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x42c>
    2214:	mov	x3, x22
    2218:	mov	w19, #0x10                  	// #16
    221c:	ldr	x1, [x21, x28]
    2220:	cmn	x1, #0x8
    2224:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    2228:	b.eq	3294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x145c>  // b.none
    222c:	lsr	w0, w1, #9
    2230:	sub	w19, w19, #0x1
    2234:	eor	w0, w0, w1, lsr #4
    2238:	and	w8, w0, w19
    223c:	mov	x0, x8
    2240:	ubfiz	x7, x8, #3, #28
    2244:	ldr	x8, [x3, x8, lsl #3]
    2248:	add	x7, x3, x7
    224c:	cmp	x1, x8
    2250:	b.ne	2400 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5c8>  // b.any
    2254:	add	x23, x23, #0x1
    2258:	add	x24, x24, #0x120
    225c:	cmp	w27, w23
    2260:	b.eq	24d8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6a0>  // b.none
    2264:	cmp	x2, x23
    2268:	mov	x9, x2
    226c:	b.ls	3230 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x13f8>  // b.plast
    2270:	ldr	x19, [sp, #688]
    2274:	add	x0, x19, x24
    2278:	ldr	w1, [x0, #152]
    227c:	cmp	w1, w25
    2280:	b.ls	2254 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x41c>  // b.plast
    2284:	cmp	x25, w1, uxtw
    2288:	b.cs	32d4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x149c>  // b.hs, b.nlast
    228c:	ldrb	w1, [x20, #8]
    2290:	ldr	x21, [x0, #144]
    2294:	and	w10, w1, #0x1
    2298:	tbnz	w1, #0, 2214 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3dc>
    229c:	ldr	w19, [x20, #24]
    22a0:	ldr	x3, [x20, #16]
    22a4:	cbnz	w19, 221c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3e4>
    22a8:	ldr	x0, [x20]
    22ac:	add	x0, x0, #0x1
    22b0:	str	x0, [x20]
    22b4:	ldrb	w0, [x20, #8]
    22b8:	ldr	x9, [x20, #16]
    22bc:	orr	w0, w0, #0x1
    22c0:	strb	w0, [x20, #8]
    22c4:	ldr	x0, [x20, #8]
    22c8:	ubfiz	x1, x19, #3, #32
    22cc:	add	x11, x9, x1
    22d0:	and	x0, x0, #0x1
    22d4:	str	x0, [x20, #8]
    22d8:	cbnz	x0, 2fd4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x119c>
    22dc:	ldr	w0, [x20, #24]
    22e0:	sub	w2, w0, #0x1
    22e4:	tst	w2, w0
    22e8:	b.ne	32f4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x14bc>  // b.any
    22ec:	ldr	x7, [x20, #16]
    22f0:	ubfiz	x0, x0, #3, #32
    22f4:	add	x8, x7, x0
    22f8:	cmp	x7, x8
    22fc:	b.eq	236c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x534>  // b.none
    2300:	sub	x2, x0, #0x8
    2304:	mov	x0, x7
    2308:	cmp	x2, #0x10
    230c:	lsr	x2, x2, #3
    2310:	add	x2, x2, #0x1
    2314:	b.ls	2344 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x50c>  // b.plast
    2318:	adrp	x4, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    231c:	lsr	x3, x2, #1
    2320:	ldr	q0, [x4]
    2324:	add	x3, x7, x3, lsl #4
    2328:	str	q0, [x0], #16
    232c:	cmp	x0, x3
    2330:	b.ne	2328 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4f0>  // b.any
    2334:	and	x0, x2, #0xfffffffffffffffe
    2338:	cmp	x2, x0
    233c:	add	x7, x7, x0, lsl #3
    2340:	b.eq	236c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x534>  // b.none
    2344:	mov	x0, x7
    2348:	mov	x2, #0xfffffffffffffff8    	// #-8
    234c:	str	x2, [x0], #8
    2350:	cmp	x8, x0
    2354:	b.eq	236c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x534>  // b.none
    2358:	str	x2, [x7, #8]
    235c:	add	x0, x7, #0x10
    2360:	cmp	x8, x0
    2364:	b.eq	236c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x534>  // b.none
    2368:	str	x2, [x7, #16]
    236c:	cmp	x9, x11
    2370:	mov	x0, x9
    2374:	b.ne	2388 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x550>  // b.any
    2378:	b	2ba4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd6c>
    237c:	add	x0, x0, #0x8
    2380:	cmp	x11, x0
    2384:	b.eq	2ba4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd6c>  // b.none
    2388:	ldr	x2, [x0]
    238c:	cmn	x2, #0x8
    2390:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    2394:	b.eq	237c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x544>  // b.none
    2398:	ldrb	w3, [x20, #8]
    239c:	tbz	w3, #0, 23ec <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5b4>
    23a0:	mov	x10, x22
    23a4:	mov	w7, #0xf                   	// #15
    23a8:	lsr	w3, w2, #9
    23ac:	eor	w3, w3, w2, lsr #4
    23b0:	and	w12, w3, w7
    23b4:	mov	x3, x12
    23b8:	ubfiz	x8, x12, #3, #28
    23bc:	ldr	x12, [x10, x12, lsl #3]
    23c0:	add	x8, x10, x8
    23c4:	cmp	x2, x12
    23c8:	b.ne	2f60 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1128>  // b.any
    23cc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    23d0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    23d4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    23d8:	add	x3, x3, #0x0
    23dc:	add	x1, x1, #0x0
    23e0:	add	x0, x0, #0x0
    23e4:	mov	w2, #0x17a                 	// #378
    23e8:	bl	0 <__assert_fail>
    23ec:	ldr	w7, [x20, #24]
    23f0:	ldr	x10, [x20, #16]
    23f4:	cbz	w7, 3474 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x163c>
    23f8:	sub	w7, w7, #0x1
    23fc:	b	23a8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x570>
    2400:	mov	w12, #0x1                   	// #1
    2404:	mov	x11, #0x0                   	// #0
    2408:	cmn	x8, #0x8
    240c:	b.ne	2fe8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x11b0>  // b.any
    2410:	ldr	w0, [x20, #8]
    2414:	cmp	x11, #0x0
    2418:	ldr	x1, [x20]
    241c:	csel	x11, x11, x7, ne  // ne = any
    2420:	lsr	w0, w0, #1
    2424:	add	w0, w0, #0x1
    2428:	add	x1, x1, #0x1
    242c:	str	x1, [x20]
    2430:	lsl	w3, w0, #2
    2434:	cbz	w10, 291c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xae4>
    2438:	cmp	w3, #0x2f
    243c:	b.hi	2c70 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe38>  // b.pmore
    2440:	ldr	w2, [x20, #12]
    2444:	mov	w1, #0x10                  	// #16
    2448:	add	w2, w0, w2
    244c:	sub	w1, w1, w2
    2450:	cmp	w1, #0x2
    2454:	b.ls	2574 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x73c>  // b.plast
    2458:	tbnz	w0, #31, 32b4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x147c>
    245c:	ldr	w1, [x20, #8]
    2460:	bfi	w1, w0, #1, #31
    2464:	str	w1, [x20, #8]
    2468:	ldr	x0, [x11]
    246c:	cmn	x0, #0x8
    2470:	b.eq	2480 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x648>  // b.none
    2474:	ldr	w0, [x20, #12]
    2478:	sub	w0, w0, #0x1
    247c:	str	w0, [x20, #12]
    2480:	ldr	x0, [x21, x28]
    2484:	ldr	w1, [x20, #156]
    2488:	str	x0, [x11]
    248c:	ldr	w0, [x20, #152]
    2490:	cmp	w0, w1
    2494:	b.cs	2b38 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd00>  // b.hs, b.nlast
    2498:	ldr	x1, [x20, #144]
    249c:	ldr	x2, [x21, x28]
    24a0:	str	x2, [x1, w0, uxtw #3]
    24a4:	ldp	w0, w2, [x20, #152]
    24a8:	mov	w1, w0
    24ac:	add	x1, x1, #0x1
    24b0:	cmp	x1, x2
    24b4:	b.hi	336c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1534>  // b.pmore
    24b8:	ldr	w2, [sp, #696]
    24bc:	add	w0, w0, #0x1
    24c0:	str	w0, [x20, #152]
    24c4:	add	x23, x23, #0x1
    24c8:	mov	x9, x2
    24cc:	add	x24, x24, #0x120
    24d0:	cmp	w27, w23
    24d4:	b.ne	2264 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x42c>  // b.any
    24d8:	add	x25, x25, #0x1
    24dc:	cmp	w26, w25
    24e0:	b.ne	21f8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3c0>  // b.any
    24e4:	ldr	x19, [sp, #688]
    24e8:	add	x20, x9, x9, lsl #3
    24ec:	add	x20, x19, x20, lsl #5
    24f0:	cmp	x19, x20
    24f4:	b.eq	253c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x704>  // b.none
    24f8:	ldur	x0, [x20, #-144]
    24fc:	sub	x20, x20, #0x120
    2500:	add	x1, x20, #0xa0
    2504:	cmp	x0, x1
    2508:	b.eq	2510 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6d8>  // b.none
    250c:	bl	0 <free>
    2510:	ldrb	w0, [x20, #8]
    2514:	tbnz	w0, #0, 2530 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6f8>
    2518:	ldr	x0, [x20, #16]
    251c:	ldr	w1, [x20, #24]
    2520:	lsl	x1, x1, #3
    2524:	bl	0 <_ZdlPvm>
    2528:	ldrb	w0, [x20, #8]
    252c:	tbnz	w0, #0, 3114 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x12dc>
    2530:	cmp	x19, x20
    2534:	b.ne	24f8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c0>  // b.any
    2538:	ldr	x20, [sp, #688]
    253c:	ldr	x0, [sp, #128]
    2540:	add	x22, x0, #0x10
    2544:	cmp	x20, x22
    2548:	b.eq	2554 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x71c>  // b.none
    254c:	mov	x0, x20
    2550:	bl	0 <free>
    2554:	ldp	x29, x30, [sp]
    2558:	ldp	x19, x20, [sp, #16]
    255c:	ldp	x21, x22, [sp, #32]
    2560:	ldp	x23, x24, [sp, #48]
    2564:	ldp	x25, x26, [sp, #64]
    2568:	ldp	x27, x28, [sp, #80]
    256c:	add	sp, sp, #0x740
    2570:	ret
    2574:	ldr	x0, [x20, #16]
    2578:	cmn	x0, #0x8
    257c:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2580:	b.ne	3048 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1210>  // b.any
    2584:	ldr	x7, [sp, #112]
    2588:	ldr	x0, [x20, #24]
    258c:	cmn	x0, #0x8
    2590:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2594:	b.eq	25ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x774>  // b.none
    2598:	ldr	x1, [sp, #112]
    259c:	sub	x1, x7, x1
    25a0:	cmp	x1, #0x7f
    25a4:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    25a8:	str	x0, [x7], #8
    25ac:	ldr	x0, [x20, #32]
    25b0:	cmn	x0, #0x8
    25b4:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    25b8:	b.eq	25d0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x798>  // b.none
    25bc:	ldr	x1, [sp, #112]
    25c0:	sub	x1, x7, x1
    25c4:	cmp	x1, #0x7f
    25c8:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    25cc:	str	x0, [x7], #8
    25d0:	ldr	x0, [x20, #40]
    25d4:	cmn	x0, #0x10
    25d8:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    25dc:	b.eq	25f4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7bc>  // b.none
    25e0:	ldr	x1, [sp, #112]
    25e4:	sub	x1, x7, x1
    25e8:	cmp	x1, #0x7f
    25ec:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    25f0:	str	x0, [x7], #8
    25f4:	ldr	x0, [x20, #48]
    25f8:	cmn	x0, #0x10
    25fc:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2600:	b.eq	2618 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7e0>  // b.none
    2604:	ldr	x1, [sp, #112]
    2608:	sub	x1, x7, x1
    260c:	cmp	x1, #0x7f
    2610:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2614:	str	x0, [x7], #8
    2618:	ldr	x0, [x20, #56]
    261c:	cmn	x0, #0x8
    2620:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2624:	b.eq	263c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x804>  // b.none
    2628:	ldr	x1, [sp, #112]
    262c:	sub	x1, x7, x1
    2630:	cmp	x1, #0x7f
    2634:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2638:	str	x0, [x7], #8
    263c:	ldr	x0, [x20, #64]
    2640:	cmn	x0, #0x8
    2644:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2648:	b.eq	2660 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x828>  // b.none
    264c:	ldr	x1, [sp, #112]
    2650:	sub	x1, x7, x1
    2654:	cmp	x1, #0x7f
    2658:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    265c:	str	x0, [x7], #8
    2660:	ldr	x0, [x20, #72]
    2664:	cmn	x0, #0x10
    2668:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    266c:	b.eq	2684 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x84c>  // b.none
    2670:	ldr	x1, [sp, #112]
    2674:	sub	x1, x7, x1
    2678:	cmp	x1, #0x7f
    267c:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2680:	str	x0, [x7], #8
    2684:	ldr	x0, [x20, #80]
    2688:	cmn	x0, #0x10
    268c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2690:	b.eq	26a8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x870>  // b.none
    2694:	ldr	x1, [sp, #112]
    2698:	sub	x1, x7, x1
    269c:	cmp	x1, #0x7f
    26a0:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    26a4:	str	x0, [x7], #8
    26a8:	ldr	x0, [x20, #88]
    26ac:	cmn	x0, #0x10
    26b0:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    26b4:	b.eq	26cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x894>  // b.none
    26b8:	ldr	x1, [sp, #112]
    26bc:	sub	x1, x7, x1
    26c0:	cmp	x1, #0x7f
    26c4:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    26c8:	str	x0, [x7], #8
    26cc:	ldr	x0, [x20, #96]
    26d0:	cmn	x0, #0x10
    26d4:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    26d8:	b.eq	26f0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8b8>  // b.none
    26dc:	ldr	x1, [sp, #112]
    26e0:	sub	x1, x7, x1
    26e4:	cmp	x1, #0x7f
    26e8:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    26ec:	str	x0, [x7], #8
    26f0:	ldr	x0, [x20, #104]
    26f4:	cmn	x0, #0x10
    26f8:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    26fc:	b.eq	2714 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8dc>  // b.none
    2700:	ldr	x1, [sp, #112]
    2704:	sub	x1, x7, x1
    2708:	cmp	x1, #0x7f
    270c:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2710:	str	x0, [x7], #8
    2714:	ldr	x0, [x20, #112]
    2718:	cmn	x0, #0x10
    271c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2720:	b.ne	30e4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x12ac>  // b.any
    2724:	ldr	x0, [x20, #120]
    2728:	cmn	x0, #0x10
    272c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2730:	b.ne	306c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1234>  // b.any
    2734:	ldr	x0, [x20, #128]
    2738:	cmn	x0, #0x10
    273c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2740:	b.ne	30a8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1270>  // b.any
    2744:	ldr	x0, [x20, #136]
    2748:	cmn	x0, #0x10
    274c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2750:	b.ne	30cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1294>  // b.any
    2754:	ldr	x3, [x20, #8]
    2758:	and	x3, x3, #0x1
    275c:	str	x3, [x20, #8]
    2760:	and	w0, w3, #0xff
    2764:	cbnz	w3, 3058 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1220>
    2768:	ldr	w1, [x20, #24]
    276c:	sub	w2, w1, #0x1
    2770:	tst	w2, w1
    2774:	b.ne	32f4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x14bc>  // b.any
    2778:	ldr	x8, [x20, #16]
    277c:	ubfiz	x1, x1, #3, #32
    2780:	add	x9, x8, x1
    2784:	cmp	x8, x9
    2788:	b.eq	2808 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9d0>  // b.none
    278c:	sub	x1, x1, #0x8
    2790:	mov	x0, x8
    2794:	cmp	x1, #0x10
    2798:	lsr	x1, x1, #3
    279c:	add	x1, x1, #0x1
    27a0:	b.ls	27d4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x99c>  // b.plast
    27a4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    27a8:	lsr	x2, x1, #1
    27ac:	ldr	q0, [x3]
    27b0:	add	x2, x0, x2, lsl #4
    27b4:	nop
    27b8:	str	q0, [x0], #16
    27bc:	cmp	x2, x0
    27c0:	b.ne	27b8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x980>  // b.any
    27c4:	and	x0, x1, #0xfffffffffffffffe
    27c8:	cmp	x1, x0
    27cc:	add	x8, x8, x0, lsl #3
    27d0:	b.eq	27fc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c4>  // b.none
    27d4:	mov	x1, x8
    27d8:	mov	x0, #0xfffffffffffffff8    	// #-8
    27dc:	str	x0, [x1], #8
    27e0:	cmp	x9, x1
    27e4:	b.eq	27fc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c4>  // b.none
    27e8:	str	x0, [x8, #8]
    27ec:	add	x1, x8, #0x10
    27f0:	cmp	x9, x1
    27f4:	b.eq	27fc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c4>  // b.none
    27f8:	str	x0, [x8, #16]
    27fc:	ldrb	w0, [x20, #8]
    2800:	and	w3, w0, #0x1
    2804:	mov	w0, w3
    2808:	ldr	x1, [sp, #112]
    280c:	cmp	x7, x1
    2810:	b.ne	2824 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9ec>  // b.any
    2814:	b	28b0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa78>
    2818:	add	x1, x1, #0x8
    281c:	cmp	x1, x7
    2820:	b.eq	28b0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa78>  // b.none
    2824:	ldr	x2, [x1]
    2828:	and	w0, w3, #0xff
    282c:	cmn	x2, #0x8
    2830:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    2834:	b.eq	2818 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9e0>  // b.none
    2838:	cbz	w0, 3020 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x11e8>
    283c:	mov	x8, x22
    2840:	mov	w3, #0xf                   	// #15
    2844:	lsr	w0, w2, #9
    2848:	eor	w0, w0, w2, lsr #4
    284c:	and	w10, w0, w3
    2850:	mov	x0, x10
    2854:	ubfiz	x9, x10, #3, #28
    2858:	ldr	x10, [x8, x10, lsl #3]
    285c:	add	x9, x8, x9
    2860:	cmp	x10, x2
    2864:	b.eq	23cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x594>  // b.none
    2868:	mov	w12, #0x1                   	// #1
    286c:	mov	x11, #0x0                   	// #0
    2870:	cmn	x10, #0x8
    2874:	b.ne	31f8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x13c0>  // b.any
    2878:	cmp	x11, #0x0
    287c:	csel	x11, x11, x9, ne  // ne = any
    2880:	str	x2, [x11]
    2884:	ldr	w0, [x20, #8]
    2888:	lsr	w2, w0, #1
    288c:	adds	w2, w2, #0x1
    2890:	b.mi	32b4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x147c>  // b.first
    2894:	bfi	w0, w2, #1, #31
    2898:	str	w0, [x20, #8]
    289c:	and	w3, w0, #0x1
    28a0:	add	x1, x1, #0x8
    28a4:	mov	w0, w3
    28a8:	cmp	x1, x7
    28ac:	b.ne	2824 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9ec>  // b.any
    28b0:	cbz	w0, 2af8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcc0>
    28b4:	mov	x7, x22
    28b8:	mov	w0, #0x10                  	// #16
    28bc:	ldr	x2, [x21, x28]
    28c0:	cmn	x2, #0x8
    28c4:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    28c8:	b.eq	3294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x145c>  // b.none
    28cc:	lsr	w1, w2, #9
    28d0:	sub	w3, w0, #0x1
    28d4:	eor	w1, w1, w2, lsr #4
    28d8:	ldr	w0, [x20, #8]
    28dc:	and	w8, w1, w3
    28e0:	mov	x1, x8
    28e4:	ubfiz	x11, x8, #3, #28
    28e8:	lsr	w0, w0, #1
    28ec:	ldr	x8, [x7, x8, lsl #3]
    28f0:	add	x11, x7, x11
    28f4:	add	w0, w0, #0x1
    28f8:	cmp	x2, x8
    28fc:	b.eq	2458 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x620>  // b.none
    2900:	mov	w10, #0x1                   	// #1
    2904:	mov	x9, #0x0                   	// #0
    2908:	cmn	x8, #0x8
    290c:	b.ne	331c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x14e4>  // b.any
    2910:	cmp	x9, #0x0
    2914:	csel	x11, x11, x9, eq  // eq = none
    2918:	b	2458 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x620>
    291c:	ldr	w19, [x20, #24]
    2920:	lsl	w1, w19, #1
    2924:	add	w2, w1, w19
    2928:	cmp	w2, w3
    292c:	b.ls	33cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1594>  // b.plast
    2930:	ldr	w1, [x20, #12]
    2934:	add	w1, w0, w1
    2938:	sub	w1, w19, w1
    293c:	cmp	w1, w19, lsr #3
    2940:	b.hi	2458 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x620>  // b.pmore
    2944:	cmp	w19, #0x10
    2948:	b.ls	2f98 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1160>  // b.plast
    294c:	sub	w0, w19, #0x1
    2950:	orr	x0, x0, x0, lsr #1
    2954:	orr	x0, x0, x0, lsr #2
    2958:	orr	x0, x0, x0, lsr #4
    295c:	orr	x0, x0, x0, lsr #8
    2960:	orr	x0, x0, x0, lsr #16
    2964:	add	x0, x0, #0x1
    2968:	cmp	w0, #0x40
    296c:	mov	w1, w0
    2970:	b.hi	3288 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1450>  // b.pmore
    2974:	ldr	x9, [x20, #16]
    2978:	mov	x0, #0x200                 	// #512
    297c:	mov	w1, #0x40                  	// #64
    2980:	str	w1, [sp, #120]
    2984:	str	x9, [sp, #136]
    2988:	bl	0 <_Znwm>
    298c:	str	x0, [x20, #16]
    2990:	ldr	x0, [x20, #8]
    2994:	ldr	w1, [sp, #120]
    2998:	ldr	x9, [sp, #136]
    299c:	and	x0, x0, #0x1
    29a0:	str	x0, [x20, #8]
    29a4:	str	w1, [x20, #24]
    29a8:	ubfiz	x1, x19, #3, #32
    29ac:	add	x10, x9, x1
    29b0:	cbnz	x0, 2fc0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1188>
    29b4:	ldr	w0, [x20, #24]
    29b8:	sub	w2, w0, #0x1
    29bc:	tst	w2, w0
    29c0:	b.ne	32f4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x14bc>  // b.any
    29c4:	ldr	x7, [x20, #16]
    29c8:	ubfiz	x0, x0, #3, #32
    29cc:	add	x8, x7, x0
    29d0:	cmp	x7, x8
    29d4:	b.eq	2a44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc0c>  // b.none
    29d8:	sub	x2, x0, #0x8
    29dc:	mov	x0, x7
    29e0:	cmp	x2, #0x10
    29e4:	lsr	x2, x2, #3
    29e8:	add	x3, x2, #0x1
    29ec:	b.ls	2a1c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbe4>  // b.plast
    29f0:	adrp	x4, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    29f4:	lsr	x2, x3, #1
    29f8:	ldr	q0, [x4]
    29fc:	add	x2, x7, x2, lsl #4
    2a00:	str	q0, [x0], #16
    2a04:	cmp	x2, x0
    2a08:	b.ne	2a00 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbc8>  // b.any
    2a0c:	and	x0, x3, #0xfffffffffffffffe
    2a10:	cmp	x3, x0
    2a14:	add	x7, x7, x0, lsl #3
    2a18:	b.eq	2a44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc0c>  // b.none
    2a1c:	mov	x2, x7
    2a20:	mov	x0, #0xfffffffffffffff8    	// #-8
    2a24:	str	x0, [x2], #8
    2a28:	cmp	x8, x2
    2a2c:	b.eq	2a44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc0c>  // b.none
    2a30:	str	x0, [x7, #8]
    2a34:	add	x2, x7, #0x10
    2a38:	cmp	x8, x2
    2a3c:	b.eq	2a44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc0c>  // b.none
    2a40:	str	x0, [x7, #16]
    2a44:	cmp	x10, x9
    2a48:	mov	x0, x9
    2a4c:	b.ne	2a60 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc28>  // b.any
    2a50:	b	2ae4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcac>
    2a54:	add	x0, x0, #0x8
    2a58:	cmp	x10, x0
    2a5c:	b.eq	2ae4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcac>  // b.none
    2a60:	ldr	x2, [x0]
    2a64:	cmn	x2, #0x8
    2a68:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    2a6c:	b.eq	2a54 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc1c>  // b.none
    2a70:	ldrb	w3, [x20, #8]
    2a74:	tbz	w3, #0, 2b24 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcec>
    2a78:	mov	x11, x22
    2a7c:	mov	w8, #0xf                   	// #15
    2a80:	lsr	w3, w2, #9
    2a84:	eor	w3, w3, w2, lsr #4
    2a88:	and	w12, w3, w8
    2a8c:	mov	x3, x12
    2a90:	ubfiz	x7, x12, #3, #28
    2a94:	ldr	x12, [x11, x12, lsl #3]
    2a98:	add	x7, x11, x7
    2a9c:	cmp	x12, x2
    2aa0:	b.eq	23cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x594>  // b.none
    2aa4:	mov	w14, #0x1                   	// #1
    2aa8:	mov	x13, #0x0                   	// #0
    2aac:	cmn	x12, #0x8
    2ab0:	b.ne	3250 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1418>  // b.any
    2ab4:	cmp	x13, #0x0
    2ab8:	csel	x13, x13, x7, ne  // ne = any
    2abc:	str	x2, [x13]
    2ac0:	ldr	w2, [x20, #8]
    2ac4:	lsr	w3, w2, #1
    2ac8:	adds	w3, w3, #0x1
    2acc:	b.mi	32b4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x147c>  // b.first
    2ad0:	bfi	w2, w3, #1, #31
    2ad4:	str	w2, [x20, #8]
    2ad8:	add	x0, x0, #0x8
    2adc:	cmp	x10, x0
    2ae0:	b.ne	2a60 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc28>  // b.any
    2ae4:	mov	x0, x9
    2ae8:	bl	0 <_ZdlPvm>
    2aec:	ldrb	w0, [x20, #8]
    2af0:	and	w0, w0, #0x1
    2af4:	cbnz	w0, 28b4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa7c>
    2af8:	ldr	w0, [x20, #24]
    2afc:	ldr	x7, [x20, #16]
    2b00:	cbnz	w0, 28bc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa84>
    2b04:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2b08:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2b0c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2b10:	add	x3, x3, #0x0
    2b14:	add	x1, x1, #0x0
    2b18:	add	x0, x0, #0x0
    2b1c:	mov	w2, #0x22f                 	// #559
    2b20:	bl	0 <__assert_fail>
    2b24:	ldr	w8, [x20, #24]
    2b28:	ldr	x11, [x20, #16]
    2b2c:	cbz	w8, 3474 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x163c>
    2b30:	sub	w8, w8, #0x1
    2b34:	b	2a80 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc48>
    2b38:	add	x0, x20, #0x90
    2b3c:	add	x1, x20, #0xa0
    2b40:	mov	x3, #0x8                   	// #8
    2b44:	mov	x2, #0x0                   	// #0
    2b48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b4c:	ldr	w0, [x20, #152]
    2b50:	b	2498 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x660>
    2b54:	ldrb	w0, [sp, #408]
    2b58:	ldr	w2, [x22, #24]
    2b5c:	ldr	x1, [sp, #416]
    2b60:	tst	x0, #0x1
    2b64:	lsl	x2, x2, #3
    2b68:	csel	x1, x28, x1, ne  // ne = any
    2b6c:	ldr	x0, [x22, #16]
    2b70:	b	2100 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2c8>
    2b74:	add	x0, x22, #0x10
    2b78:	add	x5, x22, #0x90
    2b7c:	b	1fb8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x180>
    2b80:	mov	w2, #0x10                  	// #16
    2b84:	cbz	w0, 20b8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x280>
    2b88:	b	20c4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x28c>
    2b8c:	add	x1, x19, #0x90
    2b90:	add	x0, x22, #0x90
    2b94:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2b98:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2b9c:	ldr	q0, [x0]
    2ba0:	b	2128 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2f0>
    2ba4:	mov	x0, x9
    2ba8:	bl	0 <_ZdlPvm>
    2bac:	ldrb	w0, [x20, #8]
    2bb0:	and	w0, w0, #0x1
    2bb4:	cbz	w0, 2c44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe0c>
    2bb8:	mov	x7, x22
    2bbc:	mov	w0, #0x10                  	// #16
    2bc0:	ldr	x2, [x21, x28]
    2bc4:	cmn	x2, #0x8
    2bc8:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    2bcc:	b.eq	3294 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x145c>  // b.none
    2bd0:	lsr	w1, w2, #9
    2bd4:	sub	w3, w0, #0x1
    2bd8:	eor	w1, w1, w2, lsr #4
    2bdc:	ldr	w0, [x20, #8]
    2be0:	and	w8, w1, w3
    2be4:	mov	x1, x8
    2be8:	ubfiz	x11, x8, #3, #28
    2bec:	lsr	w0, w0, #1
    2bf0:	ldr	x8, [x7, x8, lsl #3]
    2bf4:	add	x11, x7, x11
    2bf8:	add	w0, w0, #0x1
    2bfc:	cmp	x2, x8
    2c00:	b.eq	2458 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x620>  // b.none
    2c04:	mov	w10, #0x1                   	// #1
    2c08:	mov	x9, #0x0                   	// #0
    2c0c:	cmn	x8, #0x8
    2c10:	b.eq	2910 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xad8>  // b.none
    2c14:	add	w1, w1, w10
    2c18:	cmp	x9, #0x0
    2c1c:	and	w12, w3, w1
    2c20:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    2c24:	csel	x9, x9, x11, ne  // ne = any
    2c28:	add	w10, w10, #0x1
    2c2c:	and	w1, w3, w1
    2c30:	add	x11, x7, x12, lsl #3
    2c34:	ldr	x8, [x7, x12, lsl #3]
    2c38:	cmp	x2, x8
    2c3c:	b.eq	2458 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x620>  // b.none
    2c40:	b	2c0c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdd4>
    2c44:	ldr	w0, [x20, #24]
    2c48:	ldr	x7, [x20, #16]
    2c4c:	cbnz	w0, 2bc0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd88>
    2c50:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2c54:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2c58:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2c5c:	add	x3, x3, #0x0
    2c60:	add	x1, x1, #0x0
    2c64:	add	x0, x0, #0x0
    2c68:	mov	w2, #0x22f                 	// #559
    2c6c:	bl	0 <__assert_fail>
    2c70:	ldr	x0, [x20, #16]
    2c74:	add	x1, sp, #0x90
    2c78:	mov	x19, x1
    2c7c:	cmn	x0, #0x10
    2c80:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2c84:	b.eq	2c90 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe58>  // b.none
    2c88:	add	x19, x1, #0x8
    2c8c:	str	x0, [sp, #144]
    2c90:	ldr	x0, [x20, #24]
    2c94:	cmn	x0, #0x10
    2c98:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    2c9c:	b.eq	2cb0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe78>  // b.none
    2ca0:	sub	x2, x19, x1
    2ca4:	cmp	x2, #0x7f
    2ca8:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2cac:	str	x0, [x19], #8
    2cb0:	ldr	x0, [x20, #32]
    2cb4:	cmn	x0, #0x8
    2cb8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2cbc:	b.eq	2cd0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe98>  // b.none
    2cc0:	sub	x2, x19, x1
    2cc4:	cmp	x2, #0x7f
    2cc8:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2ccc:	str	x0, [x19], #8
    2cd0:	ldr	x0, [x20, #40]
    2cd4:	cmn	x0, #0x8
    2cd8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2cdc:	b.eq	2cf0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xeb8>  // b.none
    2ce0:	sub	x2, x19, x1
    2ce4:	cmp	x2, #0x7f
    2ce8:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2cec:	str	x0, [x19], #8
    2cf0:	ldr	x0, [x20, #48]
    2cf4:	cmn	x0, #0x8
    2cf8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2cfc:	b.eq	2d10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xed8>  // b.none
    2d00:	sub	x2, x19, x1
    2d04:	cmp	x2, #0x7f
    2d08:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2d0c:	str	x0, [x19], #8
    2d10:	ldr	x0, [x20, #56]
    2d14:	cmn	x0, #0x8
    2d18:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2d1c:	b.eq	2d30 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xef8>  // b.none
    2d20:	sub	x2, x19, x1
    2d24:	cmp	x2, #0x7f
    2d28:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2d2c:	str	x0, [x19], #8
    2d30:	ldr	x0, [x20, #64]
    2d34:	cmn	x0, #0x8
    2d38:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2d3c:	b.eq	2d50 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf18>  // b.none
    2d40:	sub	x2, x19, x1
    2d44:	cmp	x2, #0x7f
    2d48:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2d4c:	str	x0, [x19], #8
    2d50:	ldr	x0, [x20, #72]
    2d54:	cmn	x0, #0x8
    2d58:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2d5c:	b.eq	2d70 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf38>  // b.none
    2d60:	sub	x2, x19, x1
    2d64:	cmp	x2, #0x7f
    2d68:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2d6c:	str	x0, [x19], #8
    2d70:	ldr	x0, [x20, #80]
    2d74:	cmn	x0, #0x8
    2d78:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2d7c:	b.eq	2d90 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf58>  // b.none
    2d80:	sub	x2, x19, x1
    2d84:	cmp	x2, #0x7f
    2d88:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2d8c:	str	x0, [x19], #8
    2d90:	ldr	x0, [x20, #88]
    2d94:	cmn	x0, #0x8
    2d98:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2d9c:	b.eq	2db0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf78>  // b.none
    2da0:	sub	x2, x19, x1
    2da4:	cmp	x2, #0x7f
    2da8:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2dac:	str	x0, [x19], #8
    2db0:	ldr	x0, [x20, #96]
    2db4:	cmn	x0, #0x8
    2db8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2dbc:	b.eq	2dd0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf98>  // b.none
    2dc0:	sub	x2, x19, x1
    2dc4:	cmp	x2, #0x7f
    2dc8:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2dcc:	str	x0, [x19], #8
    2dd0:	ldr	x0, [x20, #104]
    2dd4:	cmn	x0, #0x8
    2dd8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2ddc:	b.eq	2df0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xfb8>  // b.none
    2de0:	sub	x2, x19, x1
    2de4:	cmp	x2, #0x7f
    2de8:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2dec:	str	x0, [x19], #8
    2df0:	ldr	x0, [x20, #112]
    2df4:	cmn	x0, #0x8
    2df8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2dfc:	b.eq	2e10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xfd8>  // b.none
    2e00:	sub	x2, x19, x1
    2e04:	cmp	x2, #0x7f
    2e08:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2e0c:	str	x0, [x19], #8
    2e10:	ldr	x0, [x20, #120]
    2e14:	cmn	x0, #0x8
    2e18:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2e1c:	b.eq	2e30 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xff8>  // b.none
    2e20:	sub	x2, x19, x1
    2e24:	cmp	x2, #0x7f
    2e28:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    2e2c:	str	x0, [x19], #8
    2e30:	ldr	x0, [x20, #128]
    2e34:	cmn	x0, #0x8
    2e38:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2e3c:	b.ne	3134 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x12fc>  // b.any
    2e40:	ldr	x0, [x20, #136]
    2e44:	cmn	x0, #0x8
    2e48:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2e4c:	b.ne	3094 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x125c>  // b.any
    2e50:	ldrb	w2, [x20, #8]
    2e54:	mov	x0, #0x200                 	// #512
    2e58:	str	x1, [sp, #120]
    2e5c:	and	w2, w2, #0xfffffffe
    2e60:	strb	w2, [x20, #8]
    2e64:	bl	0 <_Znwm>
    2e68:	ldr	x3, [x20, #8]
    2e6c:	mov	w2, #0x40                  	// #64
    2e70:	str	w2, [x20, #24]
    2e74:	mov	x2, #0x40                  	// #64
    2e78:	and	x3, x3, #0x1
    2e7c:	stp	x3, x0, [x20, #8]
    2e80:	ldr	x1, [sp, #120]
    2e84:	cbz	w3, 2e90 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1058>
    2e88:	mov	x0, x22
    2e8c:	mov	x2, #0x10                  	// #16
    2e90:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    2e94:	add	x2, x0, x2, lsl #3
    2e98:	ldr	q0, [x3]
    2e9c:	nop
    2ea0:	str	q0, [x0], #16
    2ea4:	cmp	x0, x2
    2ea8:	b.ne	2ea0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1068>  // b.any
    2eac:	ldrb	w0, [x20, #8]
    2eb0:	cmp	x19, x1
    2eb4:	and	w3, w0, #0x1
    2eb8:	mov	w0, w3
    2ebc:	b.ne	2ed0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1098>  // b.any
    2ec0:	b	2bb4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd7c>
    2ec4:	add	x1, x1, #0x8
    2ec8:	cmp	x19, x1
    2ecc:	b.eq	2bb4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd7c>  // b.none
    2ed0:	ldr	x2, [x1]
    2ed4:	and	w0, w3, #0xff
    2ed8:	cmn	x2, #0x10
    2edc:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    2ee0:	b.eq	2ec4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x108c>  // b.none
    2ee4:	cbz	w0, 3034 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x11fc>
    2ee8:	mov	x7, x22
    2eec:	mov	w3, #0xf                   	// #15
    2ef0:	lsr	w0, w2, #9
    2ef4:	eor	w0, w0, w2, lsr #4
    2ef8:	and	w9, w0, w3
    2efc:	mov	x0, x9
    2f00:	ubfiz	x8, x9, #3, #28
    2f04:	ldr	x9, [x7, x9, lsl #3]
    2f08:	add	x8, x7, x8
    2f0c:	cmp	x9, x2
    2f10:	b.eq	23cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x594>  // b.none
    2f14:	mov	w11, #0x1                   	// #1
    2f18:	mov	x10, #0x0                   	// #0
    2f1c:	cmn	x9, #0x8
    2f20:	b.ne	3188 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1350>  // b.any
    2f24:	cmp	x10, #0x0
    2f28:	csel	x10, x10, x8, ne  // ne = any
    2f2c:	str	x2, [x10]
    2f30:	ldr	w0, [x20, #8]
    2f34:	lsr	w2, w0, #1
    2f38:	adds	w2, w2, #0x1
    2f3c:	b.mi	32b4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x147c>  // b.first
    2f40:	bfi	w0, w2, #1, #31
    2f44:	str	w0, [x20, #8]
    2f48:	and	w3, w0, #0x1
    2f4c:	mov	w0, w3
    2f50:	b	2ec4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x108c>
    2f54:	mov	x1, x28
    2f58:	mov	x2, #0x80                  	// #128
    2f5c:	b	2100 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2c8>
    2f60:	mov	w14, #0x1                   	// #1
    2f64:	mov	x13, #0x0                   	// #0
    2f68:	cmn	x12, #0x8
    2f6c:	b.ne	31c0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1388>  // b.any
    2f70:	cmp	x13, #0x0
    2f74:	csel	x13, x13, x8, ne  // ne = any
    2f78:	str	x2, [x13]
    2f7c:	ldr	w2, [x20, #8]
    2f80:	lsr	w3, w2, #1
    2f84:	adds	w3, w3, #0x1
    2f88:	b.mi	32b4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x147c>  // b.first
    2f8c:	bfi	w2, w3, #1, #31
    2f90:	str	w2, [x20, #8]
    2f94:	b	237c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x544>
    2f98:	ldrb	w0, [x20, #8]
    2f9c:	ubfiz	x1, x19, #3, #32
    2fa0:	ldr	x9, [x20, #16]
    2fa4:	orr	w0, w0, #0x1
    2fa8:	strb	w0, [x20, #8]
    2fac:	add	x10, x9, x1
    2fb0:	ldr	x0, [x20, #8]
    2fb4:	and	x0, x0, #0x1
    2fb8:	str	x0, [x20, #8]
    2fbc:	cbz	x0, 29b4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb7c>
    2fc0:	add	x7, x20, #0x10
    2fc4:	add	x8, x20, #0x90
    2fc8:	mov	x0, x7
    2fcc:	mov	x3, #0x10                  	// #16
    2fd0:	b	29f0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbb8>
    2fd4:	add	x7, x20, #0x10
    2fd8:	add	x8, x20, #0x90
    2fdc:	mov	x0, x7
    2fe0:	mov	x2, #0x10                  	// #16
    2fe4:	b	2318 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4e0>
    2fe8:	add	w0, w0, w12
    2fec:	cmp	x11, #0x0
    2ff0:	and	w13, w19, w0
    2ff4:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    2ff8:	csel	x7, x7, x11, eq  // eq = none
    2ffc:	add	w12, w12, #0x1
    3000:	and	w0, w19, w0
    3004:	add	x14, x3, x13, lsl #3
    3008:	ldr	x8, [x3, x13, lsl #3]
    300c:	cmp	x1, x8
    3010:	b.eq	2254 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x41c>  // b.none
    3014:	mov	x11, x7
    3018:	mov	x7, x14
    301c:	b	2408 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5d0>
    3020:	ldr	w3, [x20, #24]
    3024:	ldr	x8, [x20, #16]
    3028:	cbz	w3, 3474 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x163c>
    302c:	sub	w3, w3, #0x1
    3030:	b	2844 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa0c>
    3034:	ldr	w3, [x20, #24]
    3038:	ldr	x7, [x20, #16]
    303c:	cbz	w3, 3474 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x163c>
    3040:	sub	w3, w3, #0x1
    3044:	b	2ef0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x10b8>
    3048:	ldr	x1, [sp, #112]
    304c:	str	x0, [sp, #272]
    3050:	add	x7, x1, #0x8
    3054:	b	2588 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x750>
    3058:	add	x9, x20, #0x90
    305c:	mov	x0, x22
    3060:	mov	x8, x22
    3064:	mov	x1, #0x10                  	// #16
    3068:	b	27a4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x96c>
    306c:	ldr	x1, [sp, #112]
    3070:	sub	x1, x7, x1
    3074:	cmp	x1, #0x7f
    3078:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    307c:	str	x0, [x7], #8
    3080:	ldr	x0, [x20, #128]
    3084:	cmn	x0, #0x10
    3088:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    308c:	b.eq	2744 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x90c>  // b.none
    3090:	b	30a8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1270>
    3094:	sub	x2, x19, x1
    3098:	cmp	x2, #0x7f
    309c:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    30a0:	str	x0, [x19], #8
    30a4:	b	2e50 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1018>
    30a8:	ldr	x1, [sp, #112]
    30ac:	sub	x1, x7, x1
    30b0:	cmp	x1, #0x7f
    30b4:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    30b8:	str	x0, [x7], #8
    30bc:	ldr	x0, [x20, #136]
    30c0:	cmn	x0, #0x10
    30c4:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    30c8:	b.eq	2754 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x91c>  // b.none
    30cc:	ldr	x1, [sp, #112]
    30d0:	sub	x1, x7, x1
    30d4:	cmp	x1, #0x7f
    30d8:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    30dc:	str	x0, [x7], #8
    30e0:	b	2754 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x91c>
    30e4:	ldr	x1, [sp, #112]
    30e8:	sub	x1, x7, x1
    30ec:	cmp	x1, #0x7f
    30f0:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    30f4:	str	x0, [x7], #8
    30f8:	b	2724 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8ec>
    30fc:	ldr	x0, [sp, #416]
    3100:	ldr	w1, [sp, #424]
    3104:	lsl	x1, x1, #3
    3108:	bl	0 <_ZdlPvm>
    310c:	ldrb	w0, [sp, #408]
    3110:	tbz	w0, #0, 2150 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x318>
    3114:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3118:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    311c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3120:	add	x3, x3, #0x0
    3124:	add	x1, x1, #0x0
    3128:	add	x0, x0, #0x0
    312c:	mov	w2, #0x45b                 	// #1115
    3130:	bl	0 <__assert_fail>
    3134:	sub	x2, x19, x1
    3138:	cmp	x2, #0x7f
    313c:	b.hi	33ac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1574>  // b.pmore
    3140:	str	x0, [x19], #8
    3144:	b	2e40 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1008>
    3148:	add	x25, x25, #0x1
    314c:	mov	x9, x2
    3150:	cmp	w26, w25
    3154:	b.ne	21f8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3c0>  // b.any
    3158:	b	24e4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6ac>
    315c:	ldr	x0, [sp, #128]
    3160:	mov	x1, x25
    3164:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3168:	ldr	w0, [sp, #700]
    316c:	cmp	x25, x0
    3170:	b.hi	336c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1534>  // b.pmore
    3174:	ldr	x22, [sp, #688]
    3178:	b	1f60 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x128>
    317c:	add	x5, x19, #0x90
    3180:	add	x3, x19, #0x10
    3184:	b	1eb4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7c>
    3188:	add	w0, w11, w0
    318c:	cmp	x10, #0x0
    3190:	and	w12, w0, w3
    3194:	ccmn	x9, #0x10, #0x0, eq  // eq = none
    3198:	csel	x8, x8, x10, eq  // eq = none
    319c:	add	w11, w11, #0x1
    31a0:	and	w0, w0, w3
    31a4:	add	x13, x7, x12, lsl #3
    31a8:	ldr	x9, [x7, x12, lsl #3]
    31ac:	cmp	x2, x9
    31b0:	b.eq	23cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x594>  // b.none
    31b4:	mov	x10, x8
    31b8:	mov	x8, x13
    31bc:	b	2f1c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x10e4>
    31c0:	add	w3, w3, w14
    31c4:	cmp	x13, #0x0
    31c8:	and	w15, w3, w7
    31cc:	ccmn	x12, #0x10, #0x0, eq  // eq = none
    31d0:	csel	x8, x8, x13, eq  // eq = none
    31d4:	add	w14, w14, #0x1
    31d8:	and	w3, w3, w7
    31dc:	add	x16, x10, x15, lsl #3
    31e0:	ldr	x12, [x10, x15, lsl #3]
    31e4:	cmp	x2, x12
    31e8:	b.eq	23cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x594>  // b.none
    31ec:	mov	x13, x8
    31f0:	mov	x8, x16
    31f4:	b	2f68 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1130>
    31f8:	add	w0, w0, w12
    31fc:	cmp	x11, #0x0
    3200:	and	w13, w0, w3
    3204:	ccmn	x10, #0x10, #0x0, eq  // eq = none
    3208:	csel	x9, x9, x11, eq  // eq = none
    320c:	add	w12, w12, #0x1
    3210:	and	w0, w0, w3
    3214:	add	x14, x8, x13, lsl #3
    3218:	ldr	x10, [x8, x13, lsl #3]
    321c:	cmp	x2, x10
    3220:	b.eq	23cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x594>  // b.none
    3224:	mov	x11, x9
    3228:	mov	x9, x14
    322c:	b	2870 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa38>
    3230:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3234:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3238:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    323c:	add	x3, x3, #0x0
    3240:	add	x1, x1, #0x0
    3244:	add	x0, x0, #0x0
    3248:	mov	w2, #0x95                  	// #149
    324c:	bl	0 <__assert_fail>
    3250:	add	w3, w14, w3
    3254:	cmp	x13, #0x0
    3258:	and	w15, w3, w8
    325c:	ccmn	x12, #0x10, #0x0, eq  // eq = none
    3260:	csel	x7, x7, x13, eq  // eq = none
    3264:	add	w14, w14, #0x1
    3268:	and	w3, w3, w8
    326c:	add	x16, x11, x15, lsl #3
    3270:	ldr	x12, [x11, x15, lsl #3]
    3274:	cmp	x2, x12
    3278:	b.eq	23cc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x594>  // b.none
    327c:	mov	x13, x7
    3280:	mov	x7, x16
    3284:	b	2aac <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc74>
    3288:	ubfiz	x0, x0, #3, #32
    328c:	ldr	x9, [x20, #16]
    3290:	b	2980 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb48>
    3294:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3298:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    329c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32a0:	add	x3, x3, #0x0
    32a4:	add	x1, x1, #0x0
    32a8:	add	x0, x0, #0x0
    32ac:	mov	w2, #0x250                 	// #592
    32b0:	bl	0 <__assert_fail>
    32b4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32b8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32bc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32c0:	add	x3, x3, #0x0
    32c4:	add	x1, x1, #0x0
    32c8:	add	x0, x0, #0x0
    32cc:	mov	w2, #0x441                 	// #1089
    32d0:	bl	0 <__assert_fail>
    32d4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32d8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32dc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32e0:	add	x3, x3, #0x0
    32e4:	add	x1, x1, #0x0
    32e8:	add	x0, x0, #0x0
    32ec:	mov	w2, #0x87                  	// #135
    32f0:	bl	0 <__assert_fail>
    32f4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32f8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    32fc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3300:	add	x3, x3, #0x0
    3304:	add	x1, x1, #0x0
    3308:	add	x0, x0, #0x0
    330c:	mov	w2, #0x15b                 	// #347
    3310:	bl	0 <__assert_fail>
    3314:	ldr	w9, [sp, #696]
    3318:	b	24e4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6ac>
    331c:	add	w1, w10, w1
    3320:	cmp	x9, #0x0
    3324:	and	w12, w3, w1
    3328:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    332c:	csel	x9, x9, x11, ne  // ne = any
    3330:	add	w10, w10, #0x1
    3334:	and	w1, w3, w1
    3338:	add	x11, x7, x12, lsl #3
    333c:	ldr	x8, [x7, x12, lsl #3]
    3340:	cmp	x2, x8
    3344:	b.eq	2458 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x620>  // b.none
    3348:	b	2908 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xad0>
    334c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3350:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3354:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3358:	add	x3, x3, #0x0
    335c:	add	x1, x1, #0x0
    3360:	add	x0, x0, #0x0
    3364:	mov	w2, #0x540                 	// #1344
    3368:	bl	0 <__assert_fail>
    336c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3370:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3374:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3378:	add	x3, x3, #0x0
    337c:	add	x1, x1, #0x0
    3380:	add	x0, x0, #0x0
    3384:	mov	w2, #0x43                  	// #67
    3388:	bl	0 <__assert_fail>
    338c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3390:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3394:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3398:	add	x3, x3, #0x0
    339c:	add	x1, x1, #0x0
    33a0:	add	x0, x0, #0x0
    33a4:	mov	w2, #0x18a                 	// #394
    33a8:	bl	0 <__assert_fail>
    33ac:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    33b0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    33b4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    33b8:	add	x3, x3, #0x0
    33bc:	add	x1, x1, #0x0
    33c0:	add	x0, x0, #0x0
    33c4:	mov	w2, #0x401                 	// #1025
    33c8:	bl	0 <__assert_fail>
    33cc:	cmp	w1, #0x10
    33d0:	b.ls	22b4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x47c>  // b.plast
    33d4:	sub	w0, w1, #0x1
    33d8:	orr	x0, x0, x0, lsr #1
    33dc:	orr	x0, x0, x0, lsr #2
    33e0:	orr	x0, x0, x0, lsr #4
    33e4:	orr	x0, x0, x0, lsr #8
    33e8:	orr	x0, x0, x0, lsr #16
    33ec:	add	x0, x0, #0x1
    33f0:	cmp	w0, #0x40
    33f4:	mov	w1, w0
    33f8:	b.ls	3424 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x15ec>  // b.plast
    33fc:	ldr	x9, [x20, #16]
    3400:	ubfiz	x0, x0, #3, #32
    3404:	str	x9, [sp, #120]
    3408:	str	w1, [sp, #136]
    340c:	bl	0 <_Znwm>
    3410:	ldr	w1, [sp, #136]
    3414:	str	x0, [x20, #16]
    3418:	str	w1, [x20, #24]
    341c:	ldr	x9, [sp, #120]
    3420:	b	22c4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x48c>
    3424:	mov	x0, #0x200                 	// #512
    3428:	mov	w1, #0x40                  	// #64
    342c:	ldr	x9, [x20, #16]
    3430:	b	3404 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x15cc>
    3434:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3438:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    343c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3440:	add	x3, x3, #0x0
    3444:	add	x1, x1, #0x0
    3448:	add	x0, x0, #0x0
    344c:	mov	w2, #0x189                 	// #393
    3450:	bl	0 <__assert_fail>
    3454:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3458:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    345c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3460:	add	x3, x3, #0x0
    3464:	add	x1, x1, #0x0
    3468:	add	x0, x0, #0x0
    346c:	mov	w2, #0x47d                 	// #1149
    3470:	bl	0 <__assert_fail>
    3474:	mov	x0, #0x0                   	// #0
    3478:	str	x2, [x0]
    347c:	brk	#0x3e8

0000000000003480 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    3480:	sub	sp, sp, #0x2c0
    3484:	stp	x29, x30, [sp]
    3488:	mov	x29, sp
    348c:	ldr	w0, [x2, #48]
    3490:	stp	x19, x20, [sp, #16]
    3494:	cmp	w0, #0x1
    3498:	stp	x21, x22, [sp, #32]
    349c:	stp	x23, x24, [sp, #48]
    34a0:	mov	x24, x4
    34a4:	stp	x25, x26, [sp, #64]
    34a8:	mov	x25, x5
    34ac:	str	x27, [sp, #80]
    34b0:	mov	x27, x2
    34b4:	b.ls	3ba4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x724>  // b.plast
    34b8:	mov	x0, #0x1                   	// #1
    34bc:	stp	xzr, x0, [sp, #128]
    34c0:	mov	x26, x1
    34c4:	mov	x21, x3
    34c8:	cbnz	x0, 3938 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4b8>
    34cc:	ldr	w3, [sp, #152]
    34d0:	sub	w0, w3, #0x1
    34d4:	tst	w0, w3
    34d8:	b.ne	3a6c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5ec>  // b.any
    34dc:	ldr	x2, [sp, #144]
    34e0:	add	x20, sp, #0x80
    34e4:	add	x3, x2, w3, uxtw #3
    34e8:	cmp	x2, x3
    34ec:	b.eq	3564 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe4>  // b.none
    34f0:	sub	x0, x3, #0x8
    34f4:	mov	x6, x2
    34f8:	sub	x0, x0, x2
    34fc:	cmp	x0, #0x10
    3500:	lsr	x0, x0, #3
    3504:	add	x0, x0, #0x1
    3508:	b.ls	353c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbc>  // b.plast
    350c:	adrp	x4, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3510:	lsr	x1, x0, #1
    3514:	ldr	q0, [x4]
    3518:	add	x1, x2, x1, lsl #4
    351c:	nop
    3520:	str	q0, [x6], #16
    3524:	cmp	x1, x6
    3528:	b.ne	3520 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa0>  // b.any
    352c:	and	x1, x0, #0xfffffffffffffffe
    3530:	cmp	x1, x0
    3534:	add	x2, x2, x1, lsl #3
    3538:	b.eq	3564 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe4>  // b.none
    353c:	mov	x0, x2
    3540:	mov	x1, #0xfffffffffffffff8    	// #-8
    3544:	str	x1, [x0], #8
    3548:	cmp	x3, x0
    354c:	b.eq	3564 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe4>  // b.none
    3550:	str	x1, [x2, #8]
    3554:	add	x0, x2, #0x10
    3558:	cmp	x3, x0
    355c:	b.eq	3564 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe4>  // b.none
    3560:	str	x1, [x2, #16]
    3564:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3568:	add	x1, x20, #0xa0
    356c:	str	x1, [sp, #272]
    3570:	ldr	d0, [x0]
    3574:	mov	x0, #0x1                   	// #1
    3578:	stp	xzr, x0, [sp, #416]
    357c:	str	d0, [sp, #280]
    3580:	cbnz	x0, 3928 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4a8>
    3584:	ldr	w3, [sp, #440]
    3588:	sub	w0, w3, #0x1
    358c:	tst	w0, w3
    3590:	b.ne	3a6c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5ec>  // b.any
    3594:	ldr	x2, [sp, #432]
    3598:	add	x22, sp, #0x1a0
    359c:	add	x3, x2, w3, uxtw #3
    35a0:	cmp	x2, x3
    35a4:	b.eq	361c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>  // b.none
    35a8:	sub	x0, x3, #0x8
    35ac:	mov	x6, x2
    35b0:	sub	x0, x0, x2
    35b4:	cmp	x0, #0x10
    35b8:	lsr	x0, x0, #3
    35bc:	add	x0, x0, #0x1
    35c0:	b.ls	35f4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x174>  // b.plast
    35c4:	adrp	x4, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    35c8:	lsr	x1, x0, #1
    35cc:	ldr	q0, [x4]
    35d0:	add	x1, x2, x1, lsl #4
    35d4:	nop
    35d8:	str	q0, [x6], #16
    35dc:	cmp	x6, x1
    35e0:	b.ne	35d8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x158>  // b.any
    35e4:	and	x1, x0, #0xfffffffffffffffe
    35e8:	cmp	x0, x1
    35ec:	add	x2, x2, x1, lsl #3
    35f0:	b.eq	361c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>  // b.none
    35f4:	mov	x0, x2
    35f8:	mov	x1, #0xfffffffffffffff8    	// #-8
    35fc:	str	x1, [x0], #8
    3600:	cmp	x3, x0
    3604:	b.eq	361c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>  // b.none
    3608:	str	x1, [x2, #8]
    360c:	add	x0, x2, #0x10
    3610:	cmp	x3, x0
    3614:	b.eq	361c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>  // b.none
    3618:	str	x1, [x2, #16]
    361c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3620:	add	x5, x22, #0xa0
    3624:	ldr	x1, [x27, #56]
    3628:	mov	x3, x24
    362c:	ldr	d0, [x0]
    3630:	mov	x4, x25
    3634:	mov	x0, x26
    3638:	mov	x2, x20
    363c:	str	x5, [sp, #560]
    3640:	add	x19, x27, #0x40
    3644:	str	d0, [sp, #568]
    3648:	bl	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    364c:	ldr	w23, [x27, #48]
    3650:	mov	x0, #0x38                  	// #56
    3654:	add	x23, x0, w23, uxtw #3
    3658:	add	x23, x27, x23
    365c:	cmp	x19, x23
    3660:	b.eq	3688 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x208>  // b.none
    3664:	nop
    3668:	ldr	x1, [x19], #8
    366c:	mov	x3, x24
    3670:	mov	x4, x25
    3674:	mov	x2, x22
    3678:	mov	x0, x26
    367c:	bl	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    3680:	cmp	x19, x23
    3684:	b.ne	3668 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1e8>  // b.any
    3688:	ldr	x19, [sp, #272]
    368c:	ldr	w23, [sp, #280]
    3690:	add	x23, x19, x23, lsl #3
    3694:	cmp	x23, x19
    3698:	b.eq	3850 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d0>  // b.none
    369c:	add	x26, x21, #0xa0
    36a0:	add	x25, x21, #0x90
    36a4:	add	x24, x21, #0x10
    36a8:	b	36ec <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x26c>
    36ac:	add	x3, x22, #0x10
    36b0:	mov	w1, #0x10                  	// #16
    36b4:	cmn	x2, #0x8
    36b8:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    36bc:	b.eq	3ae4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x664>  // b.none
    36c0:	lsr	w0, w2, #9
    36c4:	sub	w1, w1, #0x1
    36c8:	eor	w0, w0, w2, lsr #4
    36cc:	and	w4, w0, w1
    36d0:	mov	x0, x4
    36d4:	ldr	x4, [x3, x4, lsl #3]
    36d8:	cmp	x2, x4
    36dc:	b.ne	38a8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x428>  // b.any
    36e0:	add	x19, x19, #0x8
    36e4:	cmp	x19, x23
    36e8:	b.eq	3850 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d0>  // b.none
    36ec:	ldrb	w0, [sp, #424]
    36f0:	ldr	x2, [x19]
    36f4:	tbnz	w0, #0, 36ac <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x22c>
    36f8:	ldr	w1, [sp, #440]
    36fc:	ldr	x3, [sp, #432]
    3700:	cbnz	w1, 36b4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x234>
    3704:	ldrb	w0, [x21, #8]
    3708:	and	w7, w0, #0x1
    370c:	tbz	w0, #0, 378c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x30c>
    3710:	mov	x3, x24
    3714:	mov	w1, #0x10                  	// #16
    3718:	cmn	x2, #0x8
    371c:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    3720:	b.eq	3b04 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x684>  // b.none
    3724:	lsr	w0, w2, #9
    3728:	sub	w1, w1, #0x1
    372c:	eor	w0, w0, w2, lsr #4
    3730:	and	w5, w0, w1
    3734:	mov	x0, x5
    3738:	ubfiz	x4, x5, #3, #28
    373c:	ldr	x5, [x3, x5, lsl #3]
    3740:	add	x4, x3, x4
    3744:	cmp	x2, x5
    3748:	b.eq	36e0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x260>  // b.none
    374c:	mov	w8, #0x1                   	// #1
    3750:	mov	x6, #0x0                   	// #0
    3754:	cmn	x5, #0x8
    3758:	b.ne	3a8c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x60c>  // b.any
    375c:	ldr	x1, [x21]
    3760:	cmp	x6, #0x0
    3764:	ldr	w0, [x21, #8]
    3768:	csel	x6, x6, x4, ne  // ne = any
    376c:	add	x1, x1, #0x1
    3770:	str	x1, [x21]
    3774:	lsr	w2, w0, #1
    3778:	add	w3, w2, #0x1
    377c:	cbz	w7, 3b7c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6fc>
    3780:	mov	w2, #0x30                  	// #48
    3784:	mov	w1, #0x10                  	// #16
    3788:	b	37b8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x338>
    378c:	ldr	w1, [x21, #24]
    3790:	ldr	x3, [x21, #16]
    3794:	cbnz	w1, 3718 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x298>
    3798:	ldr	w0, [x21, #8]
    379c:	mov	x6, #0x0                   	// #0
    37a0:	ldr	x4, [x21]
    37a4:	lsr	w2, w0, #1
    37a8:	add	w3, w2, #0x1
    37ac:	add	x2, x4, #0x1
    37b0:	str	x2, [x21]
    37b4:	add	w2, w1, w1, lsl #1
    37b8:	cmp	w2, w3, lsl #2
    37bc:	b.ls	3948 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4c8>  // b.plast
    37c0:	ldr	w2, [x21, #12]
    37c4:	sub	w2, w1, w2
    37c8:	sub	w2, w2, w3
    37cc:	cmp	w2, w1, lsr #3
    37d0:	b.ls	39ec <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x56c>  // b.plast
    37d4:	cbz	x6, 39b0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x530>
    37d8:	lsr	w1, w0, #1
    37dc:	adds	w1, w1, #0x1
    37e0:	b.mi	3bec <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x76c>  // b.first
    37e4:	bfi	w0, w1, #1, #31
    37e8:	str	w0, [x21, #8]
    37ec:	ldr	x0, [x6]
    37f0:	cmn	x0, #0x8
    37f4:	b.eq	3804 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x384>  // b.none
    37f8:	ldr	w0, [x21, #12]
    37fc:	sub	w0, w0, #0x1
    3800:	str	w0, [x21, #12]
    3804:	ldr	x0, [x19]
    3808:	ldr	w1, [x21, #156]
    380c:	str	x0, [x6]
    3810:	ldr	w0, [x21, #152]
    3814:	cmp	w0, w1
    3818:	b.cs	39d0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x550>  // b.hs, b.nlast
    381c:	ldr	x1, [x21, #144]
    3820:	ldr	x2, [x19]
    3824:	str	x2, [x1, w0, uxtw #3]
    3828:	ldp	w0, w2, [x21, #152]
    382c:	mov	w1, w0
    3830:	add	x1, x1, #0x1
    3834:	cmp	x1, x2
    3838:	b.hi	3b84 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x704>  // b.pmore
    383c:	add	w0, w0, #0x1
    3840:	str	w0, [x21, #152]
    3844:	add	x19, x19, #0x8
    3848:	cmp	x19, x23
    384c:	b.ne	36ec <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x26c>  // b.any
    3850:	ldr	x0, [sp, #560]
    3854:	add	x22, x22, #0xa0
    3858:	cmp	x0, x22
    385c:	b.eq	3864 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3e4>  // b.none
    3860:	bl	0 <free>
    3864:	ldrb	w0, [sp, #424]
    3868:	tbz	w0, #0, 390c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x48c>
    386c:	ldr	x0, [sp, #272]
    3870:	add	x20, x20, #0xa0
    3874:	cmp	x0, x20
    3878:	b.eq	3880 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x400>  // b.none
    387c:	bl	0 <free>
    3880:	ldrb	w0, [sp, #136]
    3884:	tbz	w0, #0, 38d4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x454>
    3888:	ldp	x29, x30, [sp]
    388c:	ldp	x19, x20, [sp, #16]
    3890:	ldp	x21, x22, [sp, #32]
    3894:	ldp	x23, x24, [sp, #48]
    3898:	ldp	x25, x26, [sp, #64]
    389c:	ldr	x27, [sp, #80]
    38a0:	add	sp, sp, #0x2c0
    38a4:	ret
    38a8:	mov	w5, #0x1                   	// #1
    38ac:	cmn	x4, #0x8
    38b0:	b.eq	3704 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x284>  // b.none
    38b4:	add	w0, w0, w5
    38b8:	add	w5, w5, #0x1
    38bc:	and	w4, w1, w0
    38c0:	and	w0, w1, w0
    38c4:	ldr	x4, [x3, x4, lsl #3]
    38c8:	cmp	x2, x4
    38cc:	b.eq	36e0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x260>  // b.none
    38d0:	b	38ac <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x42c>
    38d4:	ldr	x0, [sp, #144]
    38d8:	ldr	w1, [sp, #152]
    38dc:	lsl	x1, x1, #3
    38e0:	bl	0 <_ZdlPvm>
    38e4:	ldrb	w0, [sp, #136]
    38e8:	tbz	w0, #0, 3888 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x408>
    38ec:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    38f0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    38f4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    38f8:	add	x3, x3, #0x0
    38fc:	add	x1, x1, #0x0
    3900:	add	x0, x0, #0x0
    3904:	mov	w2, #0x45b                 	// #1115
    3908:	bl	0 <__assert_fail>
    390c:	ldr	x0, [sp, #432]
    3910:	ldr	w1, [sp, #440]
    3914:	lsl	x1, x1, #3
    3918:	bl	0 <_ZdlPvm>
    391c:	ldrb	w0, [sp, #424]
    3920:	tbz	w0, #0, 386c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3ec>
    3924:	b	38ec <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x46c>
    3928:	add	x22, sp, #0x1a0
    392c:	add	x3, x22, #0x90
    3930:	add	x2, x22, #0x10
    3934:	b	35a8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x128>
    3938:	add	x20, sp, #0x80
    393c:	add	x3, x20, #0x90
    3940:	add	x2, x20, #0x10
    3944:	b	34f0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70>
    3948:	mov	x0, x21
    394c:	lsl	w1, w1, #1
    3950:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3954:	ldrb	w0, [x21, #8]
    3958:	tbz	w0, #0, 39a4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x524>
    395c:	mov	x3, x24
    3960:	mov	w2, #0x10                  	// #16
    3964:	ldr	x1, [x19]
    3968:	cmn	x1, #0x10
    396c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    3970:	b.eq	3b04 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x684>  // b.none
    3974:	lsr	w0, w1, #9
    3978:	sub	w2, w2, #0x1
    397c:	eor	w0, w0, w1, lsr #4
    3980:	and	w4, w0, w2
    3984:	mov	x0, x4
    3988:	ubfiz	x6, x4, #3, #28
    398c:	ldr	x4, [x3, x4, lsl #3]
    3990:	add	x6, x3, x6
    3994:	cmp	x4, x1
    3998:	b.ne	3ac4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x644>  // b.any
    399c:	ldr	w0, [x21, #8]
    39a0:	b	37d8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x358>
    39a4:	ldr	w2, [x21, #24]
    39a8:	ldr	x3, [x21, #16]
    39ac:	cbnz	w2, 3964 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4e4>
    39b0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    39b4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    39b8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    39bc:	add	x3, x3, #0x0
    39c0:	add	x1, x1, #0x0
    39c4:	add	x0, x0, #0x0
    39c8:	mov	w2, #0x22f                 	// #559
    39cc:	bl	0 <__assert_fail>
    39d0:	mov	x0, x25
    39d4:	mov	x1, x26
    39d8:	mov	x3, #0x8                   	// #8
    39dc:	mov	x2, #0x0                   	// #0
    39e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    39e4:	ldr	w0, [x21, #152]
    39e8:	b	381c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x39c>
    39ec:	mov	x0, x21
    39f0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    39f4:	ldrb	w0, [x21, #8]
    39f8:	tbz	w0, #0, 3a5c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5dc>
    39fc:	mov	x3, x24
    3a00:	mov	w2, #0x10                  	// #16
    3a04:	ldr	x1, [x19]
    3a08:	cmn	x1, #0x10
    3a0c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    3a10:	b.eq	3b04 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x684>  // b.none
    3a14:	lsr	w0, w1, #9
    3a18:	sub	w2, w2, #0x1
    3a1c:	eor	w0, w0, w1, lsr #4
    3a20:	and	w4, w0, w2
    3a24:	mov	x0, x4
    3a28:	ubfiz	x6, x4, #3, #28
    3a2c:	ldr	x4, [x3, x4, lsl #3]
    3a30:	add	x6, x3, x6
    3a34:	cmp	x4, x1
    3a38:	b.eq	399c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x51c>  // b.none
    3a3c:	mov	w7, #0x1                   	// #1
    3a40:	mov	x5, #0x0                   	// #0
    3a44:	cmn	x4, #0x8
    3a48:	b.ne	3b14 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x694>  // b.any
    3a4c:	ldr	w0, [x21, #8]
    3a50:	cbz	x5, 37d8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x358>
    3a54:	mov	x6, x5
    3a58:	b	37d8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x358>
    3a5c:	ldr	w2, [x21, #24]
    3a60:	ldr	x3, [x21, #16]
    3a64:	cbnz	w2, 3a04 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x584>
    3a68:	b	39b0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x530>
    3a6c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3a70:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3a74:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3a78:	add	x3, x3, #0x0
    3a7c:	add	x1, x1, #0x0
    3a80:	add	x0, x0, #0x0
    3a84:	mov	w2, #0x15b                 	// #347
    3a88:	bl	0 <__assert_fail>
    3a8c:	add	w0, w0, w8
    3a90:	cmp	x6, #0x0
    3a94:	and	w9, w1, w0
    3a98:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    3a9c:	csel	x4, x4, x6, eq  // eq = none
    3aa0:	add	w8, w8, #0x1
    3aa4:	and	w0, w1, w0
    3aa8:	add	x10, x3, x9, lsl #3
    3aac:	ldr	x5, [x3, x9, lsl #3]
    3ab0:	cmp	x2, x5
    3ab4:	b.eq	36e0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x260>  // b.none
    3ab8:	mov	x6, x4
    3abc:	mov	x4, x10
    3ac0:	b	3754 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2d4>
    3ac4:	mov	w7, #0x1                   	// #1
    3ac8:	mov	x5, #0x0                   	// #0
    3acc:	cmn	x4, #0x8
    3ad0:	b.ne	3b48 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c8>  // b.any
    3ad4:	cbz	x5, 399c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x51c>
    3ad8:	ldr	w0, [x21, #8]
    3adc:	mov	x6, x5
    3ae0:	b	37d8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x358>
    3ae4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3ae8:	add	x3, x3, #0x0
    3aec:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3af0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3af4:	add	x1, x1, #0x0
    3af8:	add	x0, x0, #0x0
    3afc:	mov	w2, #0x250                 	// #592
    3b00:	bl	0 <__assert_fail>
    3b04:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b08:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b0c:	add	x3, x3, #0x0
    3b10:	b	3af0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x670>
    3b14:	add	w0, w0, w7
    3b18:	cmp	x5, #0x0
    3b1c:	and	w8, w2, w0
    3b20:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    3b24:	csel	x5, x5, x6, ne  // ne = any
    3b28:	add	w7, w7, #0x1
    3b2c:	and	w0, w2, w0
    3b30:	add	x6, x3, x8, lsl #3
    3b34:	ldr	x4, [x3, x8, lsl #3]
    3b38:	cmp	x1, x4
    3b3c:	b.ne	3a44 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5c4>  // b.any
    3b40:	ldr	w0, [x21, #8]
    3b44:	b	37d8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x358>
    3b48:	add	w0, w7, w0
    3b4c:	cmp	x5, #0x0
    3b50:	and	w8, w2, w0
    3b54:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    3b58:	csel	x5, x5, x6, ne  // ne = any
    3b5c:	add	w7, w7, #0x1
    3b60:	and	w0, w2, w0
    3b64:	add	x6, x3, x8, lsl #3
    3b68:	ldr	x4, [x3, x8, lsl #3]
    3b6c:	cmp	x1, x4
    3b70:	b.ne	3acc <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x64c>  // b.any
    3b74:	ldr	w0, [x21, #8]
    3b78:	b	37d8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x358>
    3b7c:	ldr	w1, [x21, #24]
    3b80:	b	37b4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x334>
    3b84:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b88:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b8c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3b90:	add	x3, x3, #0x0
    3b94:	add	x1, x1, #0x0
    3b98:	add	x0, x0, #0x0
    3b9c:	mov	w2, #0x43                  	// #67
    3ba0:	bl	0 <__assert_fail>
    3ba4:	add	x21, sp, #0x80
    3ba8:	mov	x0, x2
    3bac:	mov	x8, x21
    3bb0:	add	x20, sp, #0x1a0
    3bb4:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    3bb8:	add	x19, sp, #0x68
    3bbc:	mov	x8, x20
    3bc0:	mov	x1, x21
    3bc4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3bc8:	add	x0, x0, #0x0
    3bcc:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3bd0:	mov	x1, x20
    3bd4:	mov	x0, x19
    3bd8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3bdc:	mov	x2, x19
    3be0:	mov	x0, x24
    3be4:	mov	x1, x25
    3be8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3bec:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3bf0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3bf4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3bf8:	add	x3, x3, #0x0
    3bfc:	add	x1, x1, #0x0
    3c00:	add	x0, x0, #0x0
    3c04:	mov	w2, #0x441                 	// #1089
    3c08:	bl	0 <__assert_fail>
    3c0c:	nop

0000000000003c10 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    3c10:	sub	sp, sp, #0x2b0
    3c14:	stp	x29, x30, [sp]
    3c18:	mov	x29, sp
    3c1c:	ldr	w0, [x2, #48]
    3c20:	stp	x19, x20, [sp, #16]
    3c24:	mov	x19, x2
    3c28:	cmp	w0, #0x2
    3c2c:	stp	x21, x22, [sp, #32]
    3c30:	mov	x21, x4
    3c34:	stp	x23, x24, [sp, #48]
    3c38:	mov	x24, x5
    3c3c:	str	x25, [sp, #64]
    3c40:	b.ne	42d0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c0>  // b.any
    3c44:	mov	x0, #0x1                   	// #1
    3c48:	stp	xzr, x0, [sp, #112]
    3c4c:	mov	x25, x1
    3c50:	mov	x20, x3
    3c54:	cbnz	x0, 40bc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4ac>
    3c58:	ldr	w1, [sp, #136]
    3c5c:	sub	w0, w1, #0x1
    3c60:	tst	w0, w1
    3c64:	b.ne	41f0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5e0>  // b.any
    3c68:	ldr	x0, [sp, #128]
    3c6c:	add	x22, sp, #0x70
    3c70:	add	x1, x0, w1, uxtw #3
    3c74:	cmp	x0, x1
    3c78:	b.eq	3cec <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    3c7c:	sub	x7, x1, #0x8
    3c80:	mov	x6, x0
    3c84:	sub	x7, x7, x0
    3c88:	cmp	x7, #0x10
    3c8c:	lsr	x7, x7, #3
    3c90:	add	x7, x7, #0x1
    3c94:	b.ls	3cc4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb4>  // b.plast
    3c98:	adrp	x2, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3c9c:	lsr	x8, x7, #1
    3ca0:	ldr	q0, [x2]
    3ca4:	add	x8, x0, x8, lsl #4
    3ca8:	str	q0, [x6], #16
    3cac:	cmp	x8, x6
    3cb0:	b.ne	3ca8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x98>  // b.any
    3cb4:	and	x2, x7, #0xfffffffffffffffe
    3cb8:	cmp	x2, x7
    3cbc:	add	x0, x0, x2, lsl #3
    3cc0:	b.eq	3cec <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    3cc4:	mov	x2, x0
    3cc8:	mov	x3, #0xfffffffffffffff8    	// #-8
    3ccc:	str	x3, [x2], #8
    3cd0:	cmp	x1, x2
    3cd4:	b.eq	3cec <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    3cd8:	str	x3, [x0, #8]
    3cdc:	add	x2, x0, #0x10
    3ce0:	cmp	x1, x2
    3ce4:	b.eq	3cec <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    3ce8:	str	x3, [x0, #16]
    3cec:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3cf0:	add	x1, x22, #0xa0
    3cf4:	str	x1, [sp, #256]
    3cf8:	ldr	d0, [x0]
    3cfc:	mov	x0, #0x1                   	// #1
    3d00:	stp	xzr, x0, [sp, #400]
    3d04:	str	d0, [sp, #264]
    3d08:	cbnz	x0, 40ac <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x49c>
    3d0c:	ldr	w1, [sp, #424]
    3d10:	sub	w0, w1, #0x1
    3d14:	tst	w0, w1
    3d18:	b.ne	41f0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5e0>  // b.any
    3d1c:	ldr	x0, [sp, #416]
    3d20:	add	x23, sp, #0x190
    3d24:	add	x1, x0, w1, uxtw #3
    3d28:	cmp	x0, x1
    3d2c:	b.eq	3da4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x194>  // b.none
    3d30:	sub	x7, x1, #0x8
    3d34:	mov	x6, x0
    3d38:	sub	x7, x7, x0
    3d3c:	cmp	x7, #0x10
    3d40:	lsr	x7, x7, #3
    3d44:	add	x7, x7, #0x1
    3d48:	b.ls	3d7c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x16c>  // b.plast
    3d4c:	adrp	x2, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3d50:	lsr	x8, x7, #1
    3d54:	ldr	q0, [x2]
    3d58:	add	x8, x0, x8, lsl #4
    3d5c:	nop
    3d60:	str	q0, [x6], #16
    3d64:	cmp	x6, x8
    3d68:	b.ne	3d60 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>  // b.any
    3d6c:	and	x2, x7, #0xfffffffffffffffe
    3d70:	cmp	x7, x2
    3d74:	add	x0, x0, x2, lsl #3
    3d78:	b.eq	3da4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x194>  // b.none
    3d7c:	mov	x2, x0
    3d80:	mov	x3, #0xfffffffffffffff8    	// #-8
    3d84:	str	x3, [x2], #8
    3d88:	cmp	x1, x2
    3d8c:	b.eq	3da4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x194>  // b.none
    3d90:	str	x3, [x0, #8]
    3d94:	add	x2, x0, #0x10
    3d98:	cmp	x1, x2
    3d9c:	b.eq	3da4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x194>  // b.none
    3da0:	str	x3, [x0, #16]
    3da4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    3da8:	add	x5, x23, #0xa0
    3dac:	ldr	x1, [x19, #56]
    3db0:	mov	x3, x21
    3db4:	ldr	d0, [x0]
    3db8:	mov	x4, x24
    3dbc:	mov	x2, x22
    3dc0:	mov	x0, x25
    3dc4:	str	x5, [sp, #544]
    3dc8:	str	d0, [sp, #552]
    3dcc:	bl	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    3dd0:	ldr	x1, [x19, #64]
    3dd4:	mov	x3, x21
    3dd8:	mov	x4, x24
    3ddc:	mov	x2, x23
    3de0:	mov	x0, x25
    3de4:	bl	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    3de8:	ldr	w21, [sp, #264]
    3dec:	ldr	x19, [sp, #256]
    3df0:	add	x21, x19, x21, lsl #3
    3df4:	cmp	x21, x19
    3df8:	b.eq	3ea8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x298>  // b.none
    3dfc:	add	x25, x20, #0xa0
    3e00:	add	x24, x20, #0x90
    3e04:	b	3e84 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x274>
    3e08:	add	x3, x23, #0x10
    3e0c:	mov	w1, #0x10                  	// #16
    3e10:	ldr	x2, [x19]
    3e14:	cmn	x2, #0x8
    3e18:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    3e1c:	b.eq	4230 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x620>  // b.none
    3e20:	lsr	w0, w2, #9
    3e24:	sub	w1, w1, #0x1
    3e28:	eor	w0, w0, w2, lsr #4
    3e2c:	and	w4, w0, w1
    3e30:	mov	x5, x4
    3e34:	ldr	x4, [x3, x4, lsl #3]
    3e38:	cmp	x2, x4
    3e3c:	b.ne	3f10 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x300>  // b.any
    3e40:	ldrb	w1, [x20, #8]
    3e44:	and	w5, w1, #0x1
    3e48:	tbz	w1, #0, 3efc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2ec>
    3e4c:	add	x3, x20, #0x10
    3e50:	mov	w1, #0xf                   	// #15
    3e54:	and	w6, w0, w1
    3e58:	mov	w8, #0x1                   	// #1
    3e5c:	mov	x0, x6
    3e60:	mov	x7, #0x0                   	// #0
    3e64:	ubfiz	x4, x6, #3, #28
    3e68:	ldr	x6, [x3, x6, lsl #3]
    3e6c:	add	x4, x3, x4
    3e70:	cmp	x2, x6
    3e74:	b.ne	4020 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x410>  // b.any
    3e78:	add	x19, x19, #0x8
    3e7c:	cmp	x19, x21
    3e80:	b.eq	3ea8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x298>  // b.none
    3e84:	ldrb	w0, [sp, #408]
    3e88:	tbnz	w0, #0, 3e08 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1f8>
    3e8c:	ldr	w1, [sp, #424]
    3e90:	ldr	x3, [sp, #416]
    3e94:	cbnz	w1, 3e10 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x200>
    3e98:	add	x19, x19, #0x8
    3e9c:	cmp	x19, x21
    3ea0:	b.ne	3e84 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x274>  // b.any
    3ea4:	nop
    3ea8:	ldr	x0, [sp, #544]
    3eac:	add	x23, x23, #0xa0
    3eb0:	cmp	x0, x23
    3eb4:	b.eq	3ebc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2ac>  // b.none
    3eb8:	bl	0 <free>
    3ebc:	ldrb	w0, [sp, #408]
    3ec0:	tbz	w0, #0, 4090 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x480>
    3ec4:	ldr	x0, [sp, #256]
    3ec8:	add	x22, x22, #0xa0
    3ecc:	cmp	x0, x22
    3ed0:	b.eq	3ed8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2c8>  // b.none
    3ed4:	bl	0 <free>
    3ed8:	ldrb	w0, [sp, #120]
    3edc:	tbz	w0, #0, 4058 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x448>
    3ee0:	ldp	x29, x30, [sp]
    3ee4:	ldp	x19, x20, [sp, #16]
    3ee8:	ldp	x21, x22, [sp, #32]
    3eec:	ldp	x23, x24, [sp, #48]
    3ef0:	ldr	x25, [sp, #64]
    3ef4:	add	sp, sp, #0x2b0
    3ef8:	ret
    3efc:	ldr	w1, [x20, #24]
    3f00:	ldr	x3, [x20, #16]
    3f04:	cbz	w1, 3f3c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x32c>
    3f08:	sub	w1, w1, #0x1
    3f0c:	b	3e54 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x244>
    3f10:	mov	w6, #0x1                   	// #1
    3f14:	cmn	x4, #0x8
    3f18:	b.eq	3e78 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>  // b.none
    3f1c:	add	w5, w5, w6
    3f20:	add	w6, w6, #0x1
    3f24:	and	w4, w1, w5
    3f28:	and	w5, w1, w5
    3f2c:	ldr	x4, [x3, x4, lsl #3]
    3f30:	cmp	x2, x4
    3f34:	b.eq	3e40 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x230>  // b.none
    3f38:	b	3f14 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x304>
    3f3c:	ldr	w0, [x20, #8]
    3f40:	mov	x7, #0x0                   	// #0
    3f44:	ldr	x4, [x20]
    3f48:	lsr	w2, w0, #1
    3f4c:	add	w3, w2, #0x1
    3f50:	add	x2, x4, #0x1
    3f54:	str	x2, [x20]
    3f58:	add	w2, w1, w1, lsl #1
    3f5c:	cmp	w2, w3, lsl #2
    3f60:	b.ls	40e8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4d8>  // b.plast
    3f64:	ldr	w2, [x20, #12]
    3f68:	sub	w2, w1, w2
    3f6c:	sub	w2, w2, w3
    3f70:	cmp	w2, w1, lsr #3
    3f74:	b.ls	4170 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x560>  // b.plast
    3f78:	cbz	x7, 4150 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x540>
    3f7c:	lsr	w1, w0, #1
    3f80:	adds	w1, w1, #0x1
    3f84:	b.mi	4338 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x728>  // b.first
    3f88:	bfi	w0, w1, #1, #31
    3f8c:	str	w0, [x20, #8]
    3f90:	ldr	x0, [x7]
    3f94:	cmn	x0, #0x8
    3f98:	b.eq	3fa8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x398>  // b.none
    3f9c:	ldr	w0, [x20, #12]
    3fa0:	sub	w0, w0, #0x1
    3fa4:	str	w0, [x20, #12]
    3fa8:	ldr	x0, [x19]
    3fac:	ldr	w1, [x20, #156]
    3fb0:	str	x0, [x7]
    3fb4:	ldr	w0, [x20, #152]
    3fb8:	cmp	w0, w1
    3fbc:	b.cs	40cc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4bc>  // b.hs, b.nlast
    3fc0:	ldr	x1, [x20, #144]
    3fc4:	ldr	x2, [x19]
    3fc8:	str	x2, [x1, w0, uxtw #3]
    3fcc:	ldp	w0, w2, [x20, #152]
    3fd0:	mov	w1, w0
    3fd4:	add	x1, x1, #0x1
    3fd8:	cmp	x1, x2
    3fdc:	b.hi	4318 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x708>  // b.pmore
    3fe0:	add	w0, w0, #0x1
    3fe4:	str	w0, [x20, #152]
    3fe8:	b	3e78 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>
    3fec:	add	w0, w8, w0
    3ff0:	cmp	x7, #0x0
    3ff4:	and	w9, w0, w1
    3ff8:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    3ffc:	csel	x4, x4, x7, eq  // eq = none
    4000:	add	w8, w8, #0x1
    4004:	and	w0, w0, w1
    4008:	add	x10, x3, x9, lsl #3
    400c:	ldr	x6, [x3, x9, lsl #3]
    4010:	cmp	x2, x6
    4014:	b.eq	3e78 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>  // b.none
    4018:	mov	x7, x4
    401c:	mov	x4, x10
    4020:	cmn	x6, #0x8
    4024:	b.ne	3fec <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3dc>  // b.any
    4028:	ldr	x1, [x20]
    402c:	cmp	x7, #0x0
    4030:	ldr	w0, [x20, #8]
    4034:	csel	x7, x7, x4, ne  // ne = any
    4038:	add	x1, x1, #0x1
    403c:	str	x1, [x20]
    4040:	lsr	w2, w0, #1
    4044:	add	w3, w2, #0x1
    4048:	cbz	w5, 42c8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6b8>
    404c:	mov	w2, #0x30                  	// #48
    4050:	mov	w1, #0x10                  	// #16
    4054:	b	3f5c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x34c>
    4058:	ldr	x0, [sp, #128]
    405c:	ldr	w1, [sp, #136]
    4060:	lsl	x1, x1, #3
    4064:	bl	0 <_ZdlPvm>
    4068:	ldrb	w0, [sp, #120]
    406c:	tbz	w0, #0, 3ee0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2d0>
    4070:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4074:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4078:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    407c:	add	x3, x3, #0x0
    4080:	add	x1, x1, #0x0
    4084:	add	x0, x0, #0x0
    4088:	mov	w2, #0x45b                 	// #1115
    408c:	bl	0 <__assert_fail>
    4090:	ldr	x0, [sp, #416]
    4094:	ldr	w1, [sp, #424]
    4098:	lsl	x1, x1, #3
    409c:	bl	0 <_ZdlPvm>
    40a0:	ldrb	w0, [sp, #408]
    40a4:	tbz	w0, #0, 3ec4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b4>
    40a8:	b	4070 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x460>
    40ac:	add	x23, sp, #0x190
    40b0:	add	x1, x23, #0x90
    40b4:	add	x0, x23, #0x10
    40b8:	b	3d30 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x120>
    40bc:	add	x22, sp, #0x70
    40c0:	add	x1, x22, #0x90
    40c4:	add	x0, x22, #0x10
    40c8:	b	3c7c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    40cc:	mov	x0, x24
    40d0:	mov	x1, x25
    40d4:	mov	x3, #0x8                   	// #8
    40d8:	mov	x2, #0x0                   	// #0
    40dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    40e0:	ldr	w0, [x20, #152]
    40e4:	b	3fc0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3b0>
    40e8:	mov	x0, x20
    40ec:	lsl	w1, w1, #1
    40f0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    40f4:	ldrb	w0, [x20, #8]
    40f8:	tbz	w0, #0, 4144 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x534>
    40fc:	add	x3, x20, #0x10
    4100:	mov	w2, #0x10                  	// #16
    4104:	ldr	x1, [x19]
    4108:	cmn	x1, #0x10
    410c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    4110:	b.eq	42b8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6a8>  // b.none
    4114:	lsr	w0, w1, #9
    4118:	sub	w2, w2, #0x1
    411c:	eor	w0, w0, w1, lsr #4
    4120:	and	w4, w0, w2
    4124:	mov	x0, x4
    4128:	ubfiz	x7, x4, #3, #28
    412c:	ldr	x4, [x3, x4, lsl #3]
    4130:	add	x7, x3, x7
    4134:	cmp	x4, x1
    4138:	b.ne	4210 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x600>  // b.any
    413c:	ldr	w0, [x20, #8]
    4140:	b	3f7c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x36c>
    4144:	ldr	w2, [x20, #24]
    4148:	ldr	x3, [x20, #16]
    414c:	cbnz	w2, 4104 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4f4>
    4150:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4154:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4158:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    415c:	add	x3, x3, #0x0
    4160:	add	x1, x1, #0x0
    4164:	add	x0, x0, #0x0
    4168:	mov	w2, #0x22f                 	// #559
    416c:	bl	0 <__assert_fail>
    4170:	mov	x0, x20
    4174:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4178:	ldrb	w0, [x20, #8]
    417c:	tbz	w0, #0, 41e0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5d0>
    4180:	add	x3, x20, #0x10
    4184:	mov	w2, #0x10                  	// #16
    4188:	ldr	x1, [x19]
    418c:	cmn	x1, #0x10
    4190:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    4194:	b.eq	42b8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6a8>  // b.none
    4198:	lsr	w0, w1, #9
    419c:	sub	w2, w2, #0x1
    41a0:	eor	w0, w0, w1, lsr #4
    41a4:	and	w4, w0, w2
    41a8:	mov	x0, x4
    41ac:	ubfiz	x7, x4, #3, #28
    41b0:	ldr	x4, [x3, x4, lsl #3]
    41b4:	add	x7, x3, x7
    41b8:	cmp	x1, x4
    41bc:	b.eq	413c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x52c>  // b.none
    41c0:	mov	w6, #0x1                   	// #1
    41c4:	mov	x5, #0x0                   	// #0
    41c8:	cmn	x4, #0x8
    41cc:	b.ne	4250 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x640>  // b.any
    41d0:	ldr	w0, [x20, #8]
    41d4:	cbz	x5, 3f7c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x36c>
    41d8:	mov	x7, x5
    41dc:	b	3f7c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x36c>
    41e0:	ldr	w2, [x20, #24]
    41e4:	ldr	x3, [x20, #16]
    41e8:	cbnz	w2, 4188 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x578>
    41ec:	b	4150 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x540>
    41f0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    41f4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    41f8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    41fc:	add	x3, x3, #0x0
    4200:	add	x1, x1, #0x0
    4204:	add	x0, x0, #0x0
    4208:	mov	w2, #0x15b                 	// #347
    420c:	bl	0 <__assert_fail>
    4210:	mov	w6, #0x1                   	// #1
    4214:	mov	x5, #0x0                   	// #0
    4218:	cmn	x4, #0x8
    421c:	b.ne	4284 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x674>  // b.any
    4220:	cbz	x5, 413c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x52c>
    4224:	ldr	w0, [x20, #8]
    4228:	mov	x7, x5
    422c:	b	3f7c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x36c>
    4230:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4234:	add	x3, x3, #0x0
    4238:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    423c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4240:	add	x1, x1, #0x0
    4244:	add	x0, x0, #0x0
    4248:	mov	w2, #0x250                 	// #592
    424c:	bl	0 <__assert_fail>
    4250:	add	w0, w0, w6
    4254:	cmp	x5, #0x0
    4258:	and	w8, w2, w0
    425c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    4260:	csel	x5, x5, x7, ne  // ne = any
    4264:	add	w6, w6, #0x1
    4268:	and	w0, w2, w0
    426c:	add	x7, x3, x8, lsl #3
    4270:	ldr	x4, [x3, x8, lsl #3]
    4274:	cmp	x1, x4
    4278:	b.ne	41c8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5b8>  // b.any
    427c:	ldr	w0, [x20, #8]
    4280:	b	3f7c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x36c>
    4284:	add	w0, w6, w0
    4288:	cmp	x5, #0x0
    428c:	and	w8, w2, w0
    4290:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    4294:	csel	x5, x5, x7, ne  // ne = any
    4298:	add	w6, w6, #0x1
    429c:	and	w0, w2, w0
    42a0:	add	x7, x3, x8, lsl #3
    42a4:	ldr	x4, [x3, x8, lsl #3]
    42a8:	cmp	x1, x4
    42ac:	b.ne	4218 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x608>  // b.any
    42b0:	ldr	w0, [x20, #8]
    42b4:	b	3f7c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x36c>
    42b8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    42bc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    42c0:	add	x3, x3, #0x0
    42c4:	b	423c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x62c>
    42c8:	ldr	w1, [x20, #24]
    42cc:	b	3f58 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x348>
    42d0:	add	x22, sp, #0x70
    42d4:	mov	x0, x2
    42d8:	mov	x8, x22
    42dc:	add	x20, sp, #0x190
    42e0:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    42e4:	add	x19, sp, #0x58
    42e8:	mov	x8, x20
    42ec:	mov	x1, x22
    42f0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    42f4:	add	x0, x0, #0x0
    42f8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    42fc:	mov	x1, x20
    4300:	mov	x0, x19
    4304:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4308:	mov	x2, x19
    430c:	mov	x0, x21
    4310:	mov	x1, x24
    4314:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4318:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    431c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4320:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4324:	add	x3, x3, #0x0
    4328:	add	x1, x1, #0x0
    432c:	add	x0, x0, #0x0
    4330:	mov	w2, #0x43                  	// #67
    4334:	bl	0 <__assert_fail>
    4338:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    433c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4340:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4344:	add	x3, x3, #0x0
    4348:	add	x1, x1, #0x0
    434c:	add	x0, x0, #0x0
    4350:	mov	w2, #0x441                 	// #1089
    4354:	bl	0 <__assert_fail>

0000000000004358 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    4358:	stp	x29, x30, [sp, #-176]!
    435c:	mov	x29, sp
    4360:	tbnz	x4, #63, 472c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3d4>
    4364:	stp	x23, x24, [sp, #48]
    4368:	ldr	w23, [x3, #152]
    436c:	cmp	x23, w4, uxtw
    4370:	b.hi	4380 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x28>  // b.pmore
    4374:	ldp	x23, x24, [sp, #48]
    4378:	ldp	x29, x30, [sp], #176
    437c:	ret
    4380:	ldr	x0, [x3, #144]
    4384:	stp	x19, x20, [sp, #16]
    4388:	add	x23, x0, x23, lsl #3
    438c:	add	x20, x0, x4, lsl #3
    4390:	cmp	x20, x23
    4394:	b.eq	469c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x344>  // b.none
    4398:	mov	x19, x5
    439c:	add	x24, x5, #0x10
    43a0:	stp	x21, x22, [sp, #32]
    43a4:	add	x22, x5, #0xa0
    43a8:	add	x21, x5, #0x90
    43ac:	b	43fc <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa4>
    43b0:	mov	x4, x24
    43b4:	mov	w1, #0x10                  	// #16
    43b8:	ldr	x2, [x20]
    43bc:	cmn	x2, #0x10
    43c0:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    43c4:	b.eq	46a4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x34c>  // b.none
    43c8:	lsr	w0, w2, #9
    43cc:	sub	w1, w1, #0x1
    43d0:	eor	w0, w0, w2, lsr #4
    43d4:	and	w6, w0, w1
    43d8:	mov	x0, x6
    43dc:	ubfiz	x3, x6, #3, #28
    43e0:	ldr	x6, [x4, x6, lsl #3]
    43e4:	add	x5, x4, x3
    43e8:	cmp	x2, x6
    43ec:	b.ne	44e0 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x188>  // b.any
    43f0:	add	x20, x20, #0x8
    43f4:	cmp	x23, x20
    43f8:	b.eq	44cc <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x174>  // b.none
    43fc:	ldrb	w0, [x19, #8]
    4400:	and	w7, w0, #0x1
    4404:	tbnz	w0, #0, 43b0 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x58>
    4408:	ldr	w1, [x19, #24]
    440c:	ldr	x4, [x19, #16]
    4410:	cbnz	w1, 43b8 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x60>
    4414:	ldr	w0, [x19, #8]
    4418:	mov	x3, #0x0                   	// #0
    441c:	ldr	x5, [x19]
    4420:	lsr	w2, w0, #1
    4424:	add	w4, w2, #0x1
    4428:	add	x2, x5, #0x1
    442c:	str	x2, [x19]
    4430:	add	w2, w1, w1, lsl #1
    4434:	cmp	w2, w4, lsl #2
    4438:	b.ls	4520 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1c8>  // b.plast
    443c:	ldr	w2, [x19, #12]
    4440:	sub	w2, w1, w2
    4444:	sub	w2, w2, w4
    4448:	cmp	w2, w1, lsr #3
    444c:	b.ls	45c4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x26c>  // b.plast
    4450:	cbz	x3, 4588 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x230>
    4454:	lsr	w1, w0, #1
    4458:	adds	w1, w1, #0x1
    445c:	b.mi	4788 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x430>  // b.first
    4460:	bfi	w0, w1, #1, #31
    4464:	str	w0, [x19, #8]
    4468:	ldr	x0, [x3]
    446c:	cmn	x0, #0x8
    4470:	b.eq	4480 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x128>  // b.none
    4474:	ldr	w0, [x19, #12]
    4478:	sub	w0, w0, #0x1
    447c:	str	w0, [x19, #12]
    4480:	ldr	x0, [x20]
    4484:	ldr	w1, [x19, #156]
    4488:	str	x0, [x3]
    448c:	ldr	w0, [x19, #152]
    4490:	cmp	w0, w1
    4494:	b.cs	45a8 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x250>  // b.hs, b.nlast
    4498:	ldr	x1, [x19, #144]
    449c:	ldr	x2, [x20]
    44a0:	str	x2, [x1, w0, uxtw #3]
    44a4:	ldp	w0, w2, [x19, #152]
    44a8:	mov	w1, w0
    44ac:	add	x1, x1, #0x1
    44b0:	cmp	x1, x2
    44b4:	b.hi	47a8 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x450>  // b.pmore
    44b8:	add	w0, w0, #0x1
    44bc:	str	w0, [x19, #152]
    44c0:	add	x20, x20, #0x8
    44c4:	cmp	x23, x20
    44c8:	b.ne	43fc <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa4>  // b.any
    44cc:	ldp	x19, x20, [sp, #16]
    44d0:	ldp	x21, x22, [sp, #32]
    44d4:	ldp	x23, x24, [sp, #48]
    44d8:	ldp	x29, x30, [sp], #176
    44dc:	ret
    44e0:	mov	w8, #0x1                   	// #1
    44e4:	mov	x3, #0x0                   	// #0
    44e8:	cmn	x6, #0x8
    44ec:	b.ne	4644 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2ec>  // b.any
    44f0:	ldr	x1, [x19]
    44f4:	cmp	x3, #0x0
    44f8:	ldr	w0, [x19, #8]
    44fc:	csel	x3, x3, x5, ne  // ne = any
    4500:	add	x1, x1, #0x1
    4504:	str	x1, [x19]
    4508:	lsr	w2, w0, #1
    450c:	add	w4, w2, #0x1
    4510:	cbz	w7, 47c8 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x470>
    4514:	mov	w2, #0x30                  	// #48
    4518:	mov	w1, #0x10                  	// #16
    451c:	b	4434 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xdc>
    4520:	mov	x0, x19
    4524:	lsl	w1, w1, #1
    4528:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    452c:	ldrb	w0, [x19, #8]
    4530:	tbz	w0, #0, 457c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x224>
    4534:	mov	x4, x24
    4538:	mov	w2, #0x10                  	// #16
    453c:	ldr	x1, [x20]
    4540:	cmn	x1, #0x8
    4544:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    4548:	b.eq	46a4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x34c>  // b.none
    454c:	lsr	w0, w1, #9
    4550:	sub	w2, w2, #0x1
    4554:	eor	w0, w0, w1, lsr #4
    4558:	and	w5, w0, w2
    455c:	mov	x0, x5
    4560:	ubfiz	x3, x5, #3, #28
    4564:	ldr	x5, [x4, x5, lsl #3]
    4568:	add	x3, x4, x3
    456c:	cmp	x5, x1
    4570:	b.ne	467c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x324>  // b.any
    4574:	ldr	w0, [x19, #8]
    4578:	b	4454 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    457c:	ldr	w2, [x19, #24]
    4580:	ldr	x4, [x19, #16]
    4584:	cbnz	w2, 453c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1e4>
    4588:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    458c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4590:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4594:	add	x3, x3, #0x0
    4598:	add	x1, x1, #0x0
    459c:	add	x0, x0, #0x0
    45a0:	mov	w2, #0x22f                 	// #559
    45a4:	bl	0 <__assert_fail>
    45a8:	mov	x0, x21
    45ac:	mov	x1, x22
    45b0:	mov	x3, #0x8                   	// #8
    45b4:	mov	x2, #0x0                   	// #0
    45b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    45bc:	ldr	w0, [x19, #152]
    45c0:	b	4498 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x140>
    45c4:	mov	x0, x19
    45c8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    45cc:	ldrb	w0, [x19, #8]
    45d0:	tbz	w0, #0, 4634 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2dc>
    45d4:	mov	x4, x24
    45d8:	mov	w2, #0x10                  	// #16
    45dc:	ldr	x1, [x20]
    45e0:	cmn	x1, #0x8
    45e4:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    45e8:	b.eq	46a4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x34c>  // b.none
    45ec:	lsr	w0, w1, #9
    45f0:	sub	w2, w2, #0x1
    45f4:	eor	w0, w0, w1, lsr #4
    45f8:	and	w5, w0, w2
    45fc:	mov	x0, x5
    4600:	ubfiz	x3, x5, #3, #28
    4604:	ldr	x5, [x4, x5, lsl #3]
    4608:	add	x3, x4, x3
    460c:	cmp	x5, x1
    4610:	b.eq	4574 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x21c>  // b.none
    4614:	mov	w7, #0x1                   	// #1
    4618:	mov	x6, #0x0                   	// #0
    461c:	cmn	x5, #0x8
    4620:	b.ne	46f8 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3a0>  // b.any
    4624:	ldr	w0, [x19, #8]
    4628:	cbz	x6, 4454 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    462c:	mov	x3, x6
    4630:	b	4454 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    4634:	ldr	w2, [x19, #24]
    4638:	ldr	x4, [x19, #16]
    463c:	cbnz	w2, 45dc <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x284>
    4640:	b	4588 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x230>
    4644:	add	w0, w8, w0
    4648:	cmp	x3, #0x0
    464c:	and	w9, w1, w0
    4650:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    4654:	csel	x5, x5, x3, eq  // eq = none
    4658:	add	w8, w8, #0x1
    465c:	and	w0, w1, w0
    4660:	add	x10, x4, x9, lsl #3
    4664:	ldr	x6, [x4, x9, lsl #3]
    4668:	cmp	x2, x6
    466c:	b.eq	43f0 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x98>  // b.none
    4670:	mov	x3, x5
    4674:	mov	x5, x10
    4678:	b	44e8 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x190>
    467c:	mov	w7, #0x1                   	// #1
    4680:	mov	x6, #0x0                   	// #0
    4684:	cmn	x5, #0x8
    4688:	b.ne	46c4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x36c>  // b.any
    468c:	cbz	x6, 4574 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x21c>
    4690:	ldr	w0, [x19, #8]
    4694:	mov	x3, x6
    4698:	b	4454 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    469c:	ldp	x19, x20, [sp, #16]
    46a0:	b	4374 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1c>
    46a4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    46a8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    46ac:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    46b0:	add	x3, x3, #0x0
    46b4:	add	x1, x1, #0x0
    46b8:	add	x0, x0, #0x0
    46bc:	mov	w2, #0x250                 	// #592
    46c0:	bl	0 <__assert_fail>
    46c4:	add	w0, w0, w7
    46c8:	cmp	x6, #0x0
    46cc:	and	w8, w2, w0
    46d0:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    46d4:	csel	x6, x6, x3, ne  // ne = any
    46d8:	add	w7, w7, #0x1
    46dc:	and	w0, w2, w0
    46e0:	add	x3, x4, x8, lsl #3
    46e4:	ldr	x5, [x4, x8, lsl #3]
    46e8:	cmp	x1, x5
    46ec:	b.ne	4684 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x32c>  // b.any
    46f0:	ldr	w0, [x19, #8]
    46f4:	b	4454 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    46f8:	add	w0, w7, w0
    46fc:	cmp	x6, #0x0
    4700:	and	w8, w2, w0
    4704:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    4708:	csel	x6, x6, x3, ne  // ne = any
    470c:	add	w7, w7, #0x1
    4710:	and	w0, w2, w0
    4714:	add	x3, x4, x8, lsl #3
    4718:	ldr	x5, [x4, x8, lsl #3]
    471c:	cmp	x1, x5
    4720:	b.ne	461c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>  // b.any
    4724:	ldr	w0, [x19, #8]
    4728:	b	4454 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xfc>
    472c:	stp	x21, x22, [sp, #32]
    4730:	add	x21, sp, #0x70
    4734:	mov	x0, x2
    4738:	mov	x8, x21
    473c:	stp	x19, x20, [sp, #16]
    4740:	add	x20, sp, #0x90
    4744:	stp	x23, x24, [sp, #48]
    4748:	add	x19, sp, #0x58
    474c:	stp	x6, x7, [sp, #64]
    4750:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4754:	mov	x8, x20
    4758:	mov	x1, x21
    475c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4760:	add	x0, x0, #0x0
    4764:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4768:	mov	x1, x20
    476c:	mov	x0, x19
    4770:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4774:	ldp	x6, x7, [sp, #64]
    4778:	mov	x2, x19
    477c:	mov	x0, x6
    4780:	mov	x1, x7
    4784:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4788:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    478c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4790:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4794:	add	x3, x3, #0x0
    4798:	add	x1, x1, #0x0
    479c:	add	x0, x0, #0x0
    47a0:	mov	w2, #0x441                 	// #1089
    47a4:	bl	0 <__assert_fail>
    47a8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    47ac:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    47b0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    47b4:	add	x3, x3, #0x0
    47b8:	add	x1, x1, #0x0
    47bc:	add	x0, x0, #0x0
    47c0:	mov	w2, #0x43                  	// #67
    47c4:	bl	0 <__assert_fail>
    47c8:	ldr	w1, [x19, #24]
    47cc:	b	4430 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xd8>

00000000000047d0 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    47d0:	stp	x29, x30, [sp, #-464]!
    47d4:	mov	x29, sp
    47d8:	stp	x19, x20, [sp, #16]
    47dc:	mov	x19, x2
    47e0:	ldr	w2, [x2, #48]
    47e4:	stp	x21, x22, [sp, #32]
    47e8:	mov	x20, x5
    47ec:	mov	x21, x4
    47f0:	stp	x23, x24, [sp, #48]
    47f4:	cmp	w2, #0x2
    47f8:	stp	x25, x26, [sp, #64]
    47fc:	b.ne	49f8 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x228>  // b.any
    4800:	mov	x23, x0
    4804:	mov	x0, #0x1                   	// #1
    4808:	stp	xzr, x0, [sp, #176]
    480c:	mov	x22, x1
    4810:	mov	x25, x3
    4814:	cbnz	x0, 49c8 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1f8>
    4818:	ldr	w10, [sp, #200]
    481c:	sub	w0, w10, #0x1
    4820:	tst	w0, w10
    4824:	b.ne	49d8 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x208>  // b.any
    4828:	ldr	x9, [sp, #192]
    482c:	add	x24, sp, #0xb0
    4830:	add	x10, x9, w10, uxtw #3
    4834:	cmp	x9, x10
    4838:	b.eq	48ac <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    483c:	sub	x8, x10, #0x8
    4840:	mov	x0, x9
    4844:	sub	x8, x8, x9
    4848:	cmp	x8, #0x10
    484c:	lsr	x8, x8, #3
    4850:	add	x8, x8, #0x1
    4854:	b.ls	4884 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb4>  // b.plast
    4858:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    485c:	lsr	x11, x8, #1
    4860:	ldr	q0, [x1]
    4864:	add	x11, x9, x11, lsl #4
    4868:	str	q0, [x0], #16
    486c:	cmp	x0, x11
    4870:	b.ne	4868 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x98>  // b.any
    4874:	and	x0, x8, #0xfffffffffffffffe
    4878:	cmp	x8, x0
    487c:	add	x9, x9, x0, lsl #3
    4880:	b.eq	48ac <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    4884:	mov	x0, x9
    4888:	mov	x1, #0xfffffffffffffff8    	// #-8
    488c:	str	x1, [x0], #8
    4890:	cmp	x10, x0
    4894:	b.eq	48ac <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    4898:	str	x1, [x9, #8]
    489c:	add	x0, x9, #0x10
    48a0:	cmp	x10, x0
    48a4:	b.eq	48ac <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    48a8:	str	x1, [x9, #16]
    48ac:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    48b0:	add	x26, x24, #0xa0
    48b4:	ldr	x1, [x19, #56]
    48b8:	mov	x3, x21
    48bc:	ldr	d0, [x0]
    48c0:	mov	x4, x20
    48c4:	mov	x0, x22
    48c8:	mov	x2, x24
    48cc:	str	x26, [sp, #320]
    48d0:	str	d0, [sp, #328]
    48d4:	bl	1038 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    48d8:	ldr	x0, [x19, #64]
    48dc:	cbz	x0, 4a24 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x254>
    48e0:	ldrb	w1, [x0, #8]
    48e4:	cmp	w1, #0x8
    48e8:	b.eq	4934 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x164>  // b.none
    48ec:	add	x23, sp, #0x70
    48f0:	mov	x0, x19
    48f4:	mov	x8, x23
    48f8:	add	x22, sp, #0x90
    48fc:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4900:	add	x19, sp, #0x58
    4904:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4908:	mov	x8, x22
    490c:	mov	x1, x23
    4910:	add	x0, x0, #0x0
    4914:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4918:	mov	x1, x22
    491c:	mov	x0, x19
    4920:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4924:	mov	x2, x19
    4928:	mov	x0, x21
    492c:	mov	x1, x20
    4930:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4934:	ldr	x1, [x23]
    4938:	mov	x6, x21
    493c:	ldr	x4, [x0, #24]
    4940:	mov	x7, x20
    4944:	ldr	x8, [x1, #32]
    4948:	mov	x0, x23
    494c:	mov	x5, x25
    4950:	mov	x3, x24
    4954:	mov	x2, x19
    4958:	mov	x1, x22
    495c:	blr	x8
    4960:	ldr	x0, [sp, #320]
    4964:	cmp	x0, x26
    4968:	b.eq	4970 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1a0>  // b.none
    496c:	bl	0 <free>
    4970:	ldrb	w0, [sp, #184]
    4974:	tbz	w0, #0, 4990 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c0>
    4978:	ldp	x19, x20, [sp, #16]
    497c:	ldp	x21, x22, [sp, #32]
    4980:	ldp	x23, x24, [sp, #48]
    4984:	ldp	x25, x26, [sp, #64]
    4988:	ldp	x29, x30, [sp], #464
    498c:	ret
    4990:	ldr	x0, [sp, #192]
    4994:	ldr	w1, [sp, #200]
    4998:	lsl	x1, x1, #3
    499c:	bl	0 <_ZdlPvm>
    49a0:	ldrb	w0, [sp, #184]
    49a4:	tbz	w0, #0, 4978 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1a8>
    49a8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    49ac:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    49b0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    49b4:	add	x3, x3, #0x0
    49b8:	add	x1, x1, #0x0
    49bc:	add	x0, x0, #0x0
    49c0:	mov	w2, #0x45b                 	// #1115
    49c4:	bl	0 <__assert_fail>
    49c8:	add	x24, sp, #0xb0
    49cc:	add	x10, x24, #0x90
    49d0:	add	x9, x24, #0x10
    49d4:	b	483c <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    49d8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    49dc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    49e0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    49e4:	add	x3, x3, #0x0
    49e8:	add	x1, x1, #0x0
    49ec:	add	x0, x0, #0x0
    49f0:	mov	w2, #0x15b                 	// #347
    49f4:	bl	0 <__assert_fail>
    49f8:	add	x23, sp, #0x90
    49fc:	mov	x0, x19
    4a00:	mov	x8, x23
    4a04:	add	x22, sp, #0xb0
    4a08:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4a0c:	add	x19, sp, #0x70
    4a10:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4a14:	mov	x8, x22
    4a18:	mov	x1, x23
    4a1c:	add	x0, x0, #0x0
    4a20:	b	4914 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x144>
    4a24:	bl	f8 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>

0000000000004a28 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    4a28:	stp	x29, x30, [sp, #-192]!
    4a2c:	mov	x29, sp
    4a30:	stp	x19, x20, [sp, #16]
    4a34:	stp	x21, x22, [sp, #32]
    4a38:	stp	x23, x24, [sp, #48]
    4a3c:	tbnz	x4, #63, 4e2c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x404>
    4a40:	ldr	w21, [x3, #152]
    4a44:	mov	x19, x5
    4a48:	ldr	x20, [x3, #144]
    4a4c:	add	x24, x5, #0xa0
    4a50:	cmp	x21, w4, uxtw
    4a54:	add	x23, x5, #0x90
    4a58:	csel	x21, x21, x4, cc  // cc = lo, ul, last
    4a5c:	add	x22, x5, #0x10
    4a60:	add	x21, x20, x21, lsl #3
    4a64:	cmp	x21, x20
    4a68:	b.ne	4abc <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x94>  // b.any
    4a6c:	b	4b8c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x164>
    4a70:	mov	x4, x22
    4a74:	mov	w1, #0x10                  	// #16
    4a78:	ldr	x3, [x20]
    4a7c:	cmn	x3, #0x10
    4a80:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    4a84:	b.eq	4d64 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x33c>  // b.none
    4a88:	lsr	w0, w3, #9
    4a8c:	sub	w1, w1, #0x1
    4a90:	eor	w0, w0, w3, lsr #4
    4a94:	and	w6, w0, w1
    4a98:	mov	x0, x6
    4a9c:	ubfiz	x2, x6, #3, #28
    4aa0:	ldr	x6, [x4, x6, lsl #3]
    4aa4:	add	x5, x4, x2
    4aa8:	cmp	x3, x6
    4aac:	b.ne	4ba0 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x178>  // b.any
    4ab0:	add	x20, x20, #0x8
    4ab4:	cmp	x21, x20
    4ab8:	b.eq	4b8c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x164>  // b.none
    4abc:	ldrb	w0, [x19, #8]
    4ac0:	and	w7, w0, #0x1
    4ac4:	tbnz	w0, #0, 4a70 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x48>
    4ac8:	ldr	w1, [x19, #24]
    4acc:	ldr	x4, [x19, #16]
    4ad0:	cbnz	w1, 4a78 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x50>
    4ad4:	ldr	w0, [x19, #8]
    4ad8:	mov	x2, #0x0                   	// #0
    4adc:	ldr	x4, [x19]
    4ae0:	lsr	w3, w0, #1
    4ae4:	add	w3, w3, #0x1
    4ae8:	add	x4, x4, #0x1
    4aec:	str	x4, [x19]
    4af0:	add	w4, w1, w1, lsl #1
    4af4:	cmp	w4, w3, lsl #2
    4af8:	b.ls	4be4 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1bc>  // b.plast
    4afc:	ldr	w4, [x19, #12]
    4b00:	sub	w4, w1, w4
    4b04:	sub	w3, w4, w3
    4b08:	cmp	w3, w1, lsr #3
    4b0c:	b.ls	4c60 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x238>  // b.plast
    4b10:	cbz	x2, 4cec <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>
    4b14:	lsr	w1, w0, #1
    4b18:	adds	w1, w1, #0x1
    4b1c:	b.mi	4dec <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3c4>  // b.first
    4b20:	bfi	w0, w1, #1, #31
    4b24:	str	w0, [x19, #8]
    4b28:	ldr	x0, [x2]
    4b2c:	cmn	x0, #0x8
    4b30:	b.eq	4b40 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x118>  // b.none
    4b34:	ldr	w0, [x19, #12]
    4b38:	sub	w0, w0, #0x1
    4b3c:	str	w0, [x19, #12]
    4b40:	ldr	x0, [x20]
    4b44:	ldr	w1, [x19, #156]
    4b48:	str	x0, [x2]
    4b4c:	ldr	w0, [x19, #152]
    4b50:	cmp	w0, w1
    4b54:	b.cs	4c44 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x21c>  // b.hs, b.nlast
    4b58:	ldr	x1, [x19, #144]
    4b5c:	ldr	x2, [x20]
    4b60:	str	x2, [x1, w0, uxtw #3]
    4b64:	ldp	w0, w2, [x19, #152]
    4b68:	mov	w1, w0
    4b6c:	add	x1, x1, #0x1
    4b70:	cmp	x1, x2
    4b74:	b.hi	4e0c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3e4>  // b.pmore
    4b78:	add	w0, w0, #0x1
    4b7c:	str	w0, [x19, #152]
    4b80:	add	x20, x20, #0x8
    4b84:	cmp	x21, x20
    4b88:	b.ne	4abc <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x94>  // b.any
    4b8c:	ldp	x19, x20, [sp, #16]
    4b90:	ldp	x21, x22, [sp, #32]
    4b94:	ldp	x23, x24, [sp, #48]
    4b98:	ldp	x29, x30, [sp], #192
    4b9c:	ret
    4ba0:	mov	w8, #0x1                   	// #1
    4ba4:	mov	x2, #0x0                   	// #0
    4ba8:	cmn	x6, #0x8
    4bac:	b.ne	4d0c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2e4>  // b.any
    4bb0:	ldr	x1, [x19]
    4bb4:	cmp	x2, #0x0
    4bb8:	ldr	w0, [x19, #8]
    4bbc:	csel	x2, x2, x5, ne  // ne = any
    4bc0:	add	x1, x1, #0x1
    4bc4:	str	x1, [x19]
    4bc8:	lsr	w3, w0, #1
    4bcc:	add	w3, w3, #0x1
    4bd0:	cbz	w7, 4e84 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x45c>
    4bd4:	mov	w4, #0x30                  	// #48
    4bd8:	mov	w1, #0x10                  	// #16
    4bdc:	cmp	w4, w3, lsl #2
    4be0:	b.hi	4afc <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xd4>  // b.pmore
    4be4:	mov	x0, x19
    4be8:	lsl	w1, w1, #1
    4bec:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4bf0:	ldrb	w0, [x19, #8]
    4bf4:	tbnz	w0, #0, 4cd4 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2ac>
    4bf8:	ldr	w2, [x19, #24]
    4bfc:	ldr	x4, [x19, #16]
    4c00:	cbz	w2, 4cec <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>
    4c04:	ldr	x1, [x20]
    4c08:	cmn	x1, #0x8
    4c0c:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    4c10:	b.eq	4d64 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x33c>  // b.none
    4c14:	lsr	w0, w1, #9
    4c18:	sub	w3, w2, #0x1
    4c1c:	eor	w0, w0, w1, lsr #4
    4c20:	and	w5, w0, w3
    4c24:	mov	x0, x5
    4c28:	ubfiz	x2, x5, #3, #28
    4c2c:	ldr	x5, [x4, x5, lsl #3]
    4c30:	add	x2, x4, x2
    4c34:	cmp	x5, x1
    4c38:	b.ne	4d44 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x31c>  // b.any
    4c3c:	ldr	w0, [x19, #8]
    4c40:	b	4b14 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    4c44:	mov	x0, x23
    4c48:	mov	x1, x24
    4c4c:	mov	x3, #0x8                   	// #8
    4c50:	mov	x2, #0x0                   	// #0
    4c54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4c58:	ldr	w0, [x19, #152]
    4c5c:	b	4b58 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x130>
    4c60:	mov	x0, x19
    4c64:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4c68:	ldrb	w0, [x19, #8]
    4c6c:	tbnz	w0, #0, 4ce0 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2b8>
    4c70:	ldr	w2, [x19, #24]
    4c74:	ldr	x4, [x19, #16]
    4c78:	cbz	w2, 4cec <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2c4>
    4c7c:	ldr	x1, [x20]
    4c80:	cmn	x1, #0x8
    4c84:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    4c88:	b.eq	4d64 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x33c>  // b.none
    4c8c:	lsr	w0, w1, #9
    4c90:	sub	w3, w2, #0x1
    4c94:	eor	w0, w0, w1, lsr #4
    4c98:	and	w5, w0, w3
    4c9c:	mov	x0, x5
    4ca0:	ubfiz	x2, x5, #3, #28
    4ca4:	ldr	x5, [x4, x5, lsl #3]
    4ca8:	add	x2, x4, x2
    4cac:	cmp	x5, x1
    4cb0:	b.eq	4c3c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x214>  // b.none
    4cb4:	mov	w7, #0x1                   	// #1
    4cb8:	mov	x6, #0x0                   	// #0
    4cbc:	cmn	x5, #0x8
    4cc0:	b.ne	4db8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x390>  // b.any
    4cc4:	ldr	w0, [x19, #8]
    4cc8:	cbz	x6, 4b14 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    4ccc:	mov	x2, x6
    4cd0:	b	4b14 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    4cd4:	mov	x4, x22
    4cd8:	mov	w2, #0x10                  	// #16
    4cdc:	b	4c04 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1dc>
    4ce0:	mov	x4, x22
    4ce4:	mov	w2, #0x10                  	// #16
    4ce8:	b	4c7c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x254>
    4cec:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4cf0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4cf4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4cf8:	add	x3, x3, #0x0
    4cfc:	add	x1, x1, #0x0
    4d00:	add	x0, x0, #0x0
    4d04:	mov	w2, #0x22f                 	// #559
    4d08:	bl	0 <__assert_fail>
    4d0c:	add	w0, w8, w0
    4d10:	cmp	x2, #0x0
    4d14:	and	w9, w1, w0
    4d18:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    4d1c:	csel	x5, x5, x2, eq  // eq = none
    4d20:	add	w8, w8, #0x1
    4d24:	and	w0, w1, w0
    4d28:	add	x10, x4, x9, lsl #3
    4d2c:	ldr	x6, [x4, x9, lsl #3]
    4d30:	cmp	x3, x6
    4d34:	b.eq	4ab0 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x88>  // b.none
    4d38:	mov	x2, x5
    4d3c:	mov	x5, x10
    4d40:	b	4ba8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x180>
    4d44:	mov	w7, #0x1                   	// #1
    4d48:	mov	x6, #0x0                   	// #0
    4d4c:	cmn	x5, #0x8
    4d50:	b.ne	4d84 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x35c>  // b.any
    4d54:	cbz	x6, 4c3c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x214>
    4d58:	ldr	w0, [x19, #8]
    4d5c:	mov	x2, x6
    4d60:	b	4b14 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    4d64:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4d68:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4d6c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4d70:	add	x3, x3, #0x0
    4d74:	add	x1, x1, #0x0
    4d78:	add	x0, x0, #0x0
    4d7c:	mov	w2, #0x250                 	// #592
    4d80:	bl	0 <__assert_fail>
    4d84:	add	w0, w0, w7
    4d88:	cmp	x6, #0x0
    4d8c:	and	w8, w3, w0
    4d90:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    4d94:	csel	x6, x6, x2, ne  // ne = any
    4d98:	add	w7, w7, #0x1
    4d9c:	and	w0, w3, w0
    4da0:	add	x2, x4, x8, lsl #3
    4da4:	ldr	x5, [x4, x8, lsl #3]
    4da8:	cmp	x1, x5
    4dac:	b.ne	4d4c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x324>  // b.any
    4db0:	ldr	w0, [x19, #8]
    4db4:	b	4b14 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    4db8:	add	w0, w7, w0
    4dbc:	cmp	x6, #0x0
    4dc0:	and	w8, w3, w0
    4dc4:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    4dc8:	csel	x6, x6, x2, ne  // ne = any
    4dcc:	add	w7, w7, #0x1
    4dd0:	and	w0, w3, w0
    4dd4:	add	x2, x4, x8, lsl #3
    4dd8:	ldr	x5, [x4, x8, lsl #3]
    4ddc:	cmp	x1, x5
    4de0:	b.ne	4cbc <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x294>  // b.any
    4de4:	ldr	w0, [x19, #8]
    4de8:	b	4b14 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>
    4dec:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4df0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4df4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4df8:	add	x3, x3, #0x0
    4dfc:	add	x1, x1, #0x0
    4e00:	add	x0, x0, #0x0
    4e04:	mov	w2, #0x441                 	// #1089
    4e08:	bl	0 <__assert_fail>
    4e0c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4e10:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4e14:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4e18:	add	x3, x3, #0x0
    4e1c:	add	x1, x1, #0x0
    4e20:	add	x0, x0, #0x0
    4e24:	mov	w2, #0x43                  	// #67
    4e28:	bl	0 <__assert_fail>
    4e2c:	add	x1, sp, #0x80
    4e30:	mov	x0, x2
    4e34:	mov	x8, x1
    4e38:	str	x1, [sp, #64]
    4e3c:	stp	x6, x7, [sp, #80]
    4e40:	add	x19, sp, #0x68
    4e44:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    4e48:	ldr	x1, [sp, #64]
    4e4c:	add	x0, sp, #0xa0
    4e50:	mov	x8, x0
    4e54:	str	x0, [sp, #72]
    4e58:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4e5c:	add	x0, x0, #0x0
    4e60:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4e64:	ldr	x1, [sp, #72]
    4e68:	mov	x0, x19
    4e6c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    4e70:	ldp	x6, x7, [sp, #80]
    4e74:	mov	x2, x19
    4e78:	mov	x0, x6
    4e7c:	mov	x1, x7
    4e80:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4e84:	ldr	w1, [x19, #24]
    4e88:	b	4af0 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xc8>
    4e8c:	nop

0000000000004e90 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    4e90:	stp	x29, x30, [sp, #-208]!
    4e94:	cmp	x4, #0x0
    4e98:	mov	x29, sp
    4e9c:	stp	x19, x20, [sp, #16]
    4ea0:	stp	x21, x22, [sp, #32]
    4ea4:	stp	x23, x24, [sp, #48]
    4ea8:	stp	x25, x26, [sp, #64]
    4eac:	str	x27, [sp, #80]
    4eb0:	stp	x2, x3, [sp, #96]
    4eb4:	b.le	52e8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x458>
    4eb8:	mov	x19, x5
    4ebc:	add	x22, x5, #0x90
    4ec0:	add	x21, x5, #0xa0
    4ec4:	add	x27, x5, #0x10
    4ec8:	ldr	w5, [x3, #152]
    4ecc:	mov	x25, x4
    4ed0:	mov	x26, x3
    4ed4:	mov	w23, #0x0                   	// #0
    4ed8:	mov	x0, #0x0                   	// #0
    4edc:	cbnz	w5, 4f40 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb0>
    4ee0:	b	5024 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x194>
    4ee4:	mov	x3, x27
    4ee8:	mov	w1, #0x10                  	// #16
    4eec:	ldr	x2, [x24, x20]
    4ef0:	cmn	x2, #0x10
    4ef4:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    4ef8:	b.eq	5200 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x370>  // b.none
    4efc:	lsr	w0, w2, #9
    4f00:	sub	w1, w1, #0x1
    4f04:	eor	w0, w0, w2, lsr #4
    4f08:	and	w4, w0, w1
    4f0c:	mov	x0, x4
    4f10:	ubfiz	x6, x4, #3, #28
    4f14:	ldr	x4, [x3, x4, lsl #3]
    4f18:	add	x6, x3, x6
    4f1c:	cmp	x4, x2
    4f20:	b.ne	5040 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1b0>  // b.any
    4f24:	add	w0, w23, w25
    4f28:	mov	w1, w5
    4f2c:	mov	x23, x0
    4f30:	cmp	w5, w0
    4f34:	b.ls	5024 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x194>  // b.plast
    4f38:	cmp	x0, x1
    4f3c:	b.cs	5220 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x390>  // b.hs, b.nlast
    4f40:	ldrb	w1, [x19, #8]
    4f44:	lsl	x20, x0, #3
    4f48:	ldr	x24, [x26, #144]
    4f4c:	and	w8, w1, #0x1
    4f50:	tbnz	w1, #0, 4ee4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x54>
    4f54:	ldr	w1, [x19, #24]
    4f58:	ldr	x3, [x19, #16]
    4f5c:	cbnz	w1, 4eec <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x5c>
    4f60:	ldr	w0, [x19, #8]
    4f64:	mov	x7, #0x0                   	// #0
    4f68:	ldr	x4, [x19]
    4f6c:	lsr	w2, w0, #1
    4f70:	add	w3, w2, #0x1
    4f74:	add	x2, x4, #0x1
    4f78:	str	x2, [x19]
    4f7c:	add	w2, w1, w1, lsl #1
    4f80:	cmp	w2, w3, lsl #2
    4f84:	b.ls	5084 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1f4>  // b.plast
    4f88:	ldr	w2, [x19, #12]
    4f8c:	sub	w2, w1, w2
    4f90:	sub	w2, w2, w3
    4f94:	cmp	w2, w1, lsr #3
    4f98:	b.ls	510c <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x27c>  // b.plast
    4f9c:	cbz	x7, 5188 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2f8>
    4fa0:	lsr	w1, w0, #1
    4fa4:	adds	w1, w1, #0x1
    4fa8:	b.mi	52a8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x418>  // b.first
    4fac:	bfi	w0, w1, #1, #31
    4fb0:	str	w0, [x19, #8]
    4fb4:	ldr	x0, [x7]
    4fb8:	cmn	x0, #0x8
    4fbc:	b.eq	4fcc <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x13c>  // b.none
    4fc0:	ldr	w0, [x19, #12]
    4fc4:	sub	w0, w0, #0x1
    4fc8:	str	w0, [x19, #12]
    4fcc:	ldr	x0, [x24, x20]
    4fd0:	ldr	w1, [x19, #156]
    4fd4:	str	x0, [x7]
    4fd8:	ldr	w0, [x19, #152]
    4fdc:	cmp	w0, w1
    4fe0:	b.cs	50e4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x254>  // b.hs, b.nlast
    4fe4:	ldr	x1, [x19, #144]
    4fe8:	ldr	x2, [x24, x20]
    4fec:	str	x2, [x1, w0, uxtw #3]
    4ff0:	ldp	w0, w2, [x19, #152]
    4ff4:	mov	w1, w0
    4ff8:	add	x1, x1, #0x1
    4ffc:	cmp	x1, x2
    5000:	b.hi	52c8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x438>  // b.pmore
    5004:	add	w0, w0, #0x1
    5008:	str	w0, [x19, #152]
    500c:	add	w0, w23, w25
    5010:	ldr	w5, [x26, #152]
    5014:	mov	x23, x0
    5018:	mov	w1, w5
    501c:	cmp	w5, w0
    5020:	b.hi	4f38 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa8>  // b.pmore
    5024:	ldp	x19, x20, [sp, #16]
    5028:	ldp	x21, x22, [sp, #32]
    502c:	ldp	x23, x24, [sp, #48]
    5030:	ldp	x25, x26, [sp, #64]
    5034:	ldr	x27, [sp, #80]
    5038:	ldp	x29, x30, [sp], #208
    503c:	ret
    5040:	mov	w9, #0x1                   	// #1
    5044:	mov	x7, #0x0                   	// #0
    5048:	cmn	x4, #0x8
    504c:	b.ne	51a8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x318>  // b.any
    5050:	ldr	x1, [x19]
    5054:	cmp	x7, #0x0
    5058:	ldr	w0, [x19, #8]
    505c:	csel	x7, x7, x6, ne  // ne = any
    5060:	add	x1, x1, #0x1
    5064:	str	x1, [x19]
    5068:	lsr	w2, w0, #1
    506c:	add	w3, w2, #0x1
    5070:	cbz	w8, 5338 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4a8>
    5074:	mov	w2, #0x30                  	// #48
    5078:	mov	w1, #0x10                  	// #16
    507c:	cmp	w2, w3, lsl #2
    5080:	b.hi	4f88 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf8>  // b.pmore
    5084:	mov	x0, x19
    5088:	lsl	w1, w1, #1
    508c:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5090:	ldrb	w0, [x19, #8]
    5094:	tbnz	w0, #0, 5100 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x270>
    5098:	ldr	w2, [x19, #24]
    509c:	ldr	x3, [x19, #16]
    50a0:	cbz	w2, 5188 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2f8>
    50a4:	ldr	x1, [x24, x20]
    50a8:	cmn	x1, #0x8
    50ac:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    50b0:	b.eq	5200 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x370>  // b.none
    50b4:	lsr	w0, w1, #9
    50b8:	sub	w2, w2, #0x1
    50bc:	eor	w0, w0, w1, lsr #4
    50c0:	and	w4, w0, w2
    50c4:	mov	x0, x4
    50c8:	ubfiz	x7, x4, #3, #28
    50cc:	ldr	x4, [x3, x4, lsl #3]
    50d0:	add	x7, x3, x7
    50d4:	cmp	x1, x4
    50d8:	b.ne	51e0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x350>  // b.any
    50dc:	ldr	w0, [x19, #8]
    50e0:	b	4fa0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    50e4:	mov	x0, x22
    50e8:	mov	x1, x21
    50ec:	mov	x3, #0x8                   	// #8
    50f0:	mov	x2, #0x0                   	// #0
    50f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    50f8:	ldr	w0, [x19, #152]
    50fc:	b	4fe4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x154>
    5100:	mov	x3, x27
    5104:	mov	w2, #0x10                  	// #16
    5108:	b	50a4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x214>
    510c:	mov	x0, x19
    5110:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5114:	ldrb	w0, [x19, #8]
    5118:	tbz	w0, #0, 517c <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2ec>
    511c:	mov	x3, x27
    5120:	mov	w2, #0x10                  	// #16
    5124:	ldr	x1, [x24, x20]
    5128:	cmn	x1, #0x8
    512c:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    5130:	b.eq	5200 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x370>  // b.none
    5134:	lsr	w0, w1, #9
    5138:	sub	w2, w2, #0x1
    513c:	eor	w0, w0, w1, lsr #4
    5140:	and	w4, w0, w2
    5144:	mov	x0, x4
    5148:	ubfiz	x7, x4, #3, #28
    514c:	ldr	x4, [x3, x4, lsl #3]
    5150:	add	x7, x3, x7
    5154:	cmp	x1, x4
    5158:	b.eq	50dc <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>  // b.none
    515c:	mov	w6, #0x1                   	// #1
    5160:	mov	x5, #0x0                   	// #0
    5164:	cmn	x4, #0x8
    5168:	b.ne	5274 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3e4>  // b.any
    516c:	ldr	w0, [x19, #8]
    5170:	cbz	x5, 4fa0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    5174:	mov	x7, x5
    5178:	b	4fa0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    517c:	ldr	w2, [x19, #24]
    5180:	ldr	x3, [x19, #16]
    5184:	cbnz	w2, 5124 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x294>
    5188:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    518c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5190:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5194:	add	x3, x3, #0x0
    5198:	add	x1, x1, #0x0
    519c:	add	x0, x0, #0x0
    51a0:	mov	w2, #0x22f                 	// #559
    51a4:	bl	0 <__assert_fail>
    51a8:	add	w0, w0, w9
    51ac:	cmp	x7, #0x0
    51b0:	and	w10, w1, w0
    51b4:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    51b8:	csel	x6, x6, x7, eq  // eq = none
    51bc:	add	w9, w9, #0x1
    51c0:	and	w0, w1, w0
    51c4:	add	x11, x3, x10, lsl #3
    51c8:	ldr	x4, [x3, x10, lsl #3]
    51cc:	cmp	x2, x4
    51d0:	b.eq	4f24 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x94>  // b.none
    51d4:	mov	x7, x6
    51d8:	mov	x6, x11
    51dc:	b	5048 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x1b8>
    51e0:	mov	w6, #0x1                   	// #1
    51e4:	mov	x5, #0x0                   	// #0
    51e8:	cmn	x4, #0x8
    51ec:	b.ne	5240 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x3b0>  // b.any
    51f0:	cbz	x5, 50dc <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x24c>
    51f4:	ldr	w0, [x19, #8]
    51f8:	mov	x7, x5
    51fc:	b	4fa0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    5200:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5204:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5208:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    520c:	add	x3, x3, #0x0
    5210:	add	x1, x1, #0x0
    5214:	add	x0, x0, #0x0
    5218:	mov	w2, #0x250                 	// #592
    521c:	bl	0 <__assert_fail>
    5220:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5224:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5228:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    522c:	add	x3, x3, #0x0
    5230:	add	x1, x1, #0x0
    5234:	add	x0, x0, #0x0
    5238:	mov	w2, #0x87                  	// #135
    523c:	bl	0 <__assert_fail>
    5240:	add	w0, w6, w0
    5244:	cmp	x5, #0x0
    5248:	and	w8, w2, w0
    524c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    5250:	csel	x5, x5, x7, ne  // ne = any
    5254:	add	w6, w6, #0x1
    5258:	and	w0, w2, w0
    525c:	add	x7, x3, x8, lsl #3
    5260:	ldr	x4, [x3, x8, lsl #3]
    5264:	cmp	x1, x4
    5268:	b.ne	51e8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x358>  // b.any
    526c:	ldr	w0, [x19, #8]
    5270:	b	4fa0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    5274:	add	w0, w0, w6
    5278:	cmp	x5, #0x0
    527c:	and	w8, w2, w0
    5280:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    5284:	csel	x5, x5, x7, ne  // ne = any
    5288:	add	w6, w6, #0x1
    528c:	and	w0, w2, w0
    5290:	add	x7, x3, x8, lsl #3
    5294:	ldr	x4, [x3, x8, lsl #3]
    5298:	cmp	x1, x4
    529c:	b.ne	5164 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x2d4>  // b.any
    52a0:	ldr	w0, [x19, #8]
    52a4:	b	4fa0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x110>
    52a8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    52ac:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    52b0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    52b4:	add	x3, x3, #0x0
    52b8:	add	x1, x1, #0x0
    52bc:	add	x0, x0, #0x0
    52c0:	mov	w2, #0x441                 	// #1089
    52c4:	bl	0 <__assert_fail>
    52c8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    52cc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    52d0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    52d4:	add	x3, x3, #0x0
    52d8:	add	x1, x1, #0x0
    52dc:	add	x0, x0, #0x0
    52e0:	mov	w2, #0x43                  	// #67
    52e4:	bl	0 <__assert_fail>
    52e8:	add	x21, sp, #0x90
    52ec:	mov	x0, x2
    52f0:	mov	x8, x21
    52f4:	add	x20, sp, #0xb0
    52f8:	stp	x6, x7, [sp, #96]
    52fc:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    5300:	mov	x8, x20
    5304:	add	x19, sp, #0x78
    5308:	mov	x1, x21
    530c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5310:	add	x0, x0, #0x0
    5314:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5318:	mov	x1, x20
    531c:	mov	x0, x19
    5320:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5324:	ldp	x6, x7, [sp, #96]
    5328:	mov	x2, x19
    532c:	mov	x0, x6
    5330:	mov	x1, x7
    5334:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5338:	ldr	w1, [x19, #24]
    533c:	b	4f7c <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xec>

0000000000005340 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    5340:	stp	x29, x30, [sp, #-480]!
    5344:	mov	x29, sp
    5348:	ldr	w0, [x2, #48]
    534c:	str	x1, [sp, #120]
    5350:	str	x2, [sp, #176]
    5354:	cmp	x0, #0x4
    5358:	stp	x4, x5, [sp, #192]
    535c:	b.hi	61d4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe94>  // b.pmore
    5360:	mov	w0, #0x1                   	// #1
    5364:	stp	x23, x24, [sp, #48]
    5368:	mov	x24, x3
    536c:	str	w0, [sp, #108]
    5370:	b.eq	5de4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xaa4>  // b.none
    5374:	ldr	x0, [sp, #176]
    5378:	str	xzr, [sp, #248]
    537c:	strb	wzr, [sp, #256]
    5380:	ldr	x1, [x0, #56]
    5384:	add	x0, sp, #0xf0
    5388:	str	x0, [sp, #184]
    538c:	add	x0, sp, #0x100
    5390:	str	x0, [sp, #240]
    5394:	cbz	x1, 6214 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xed4>
    5398:	ldrb	w2, [x1, #8]
    539c:	stp	x19, x20, [sp, #16]
    53a0:	cmp	w2, #0x12
    53a4:	stp	x21, x22, [sp, #32]
    53a8:	b.eq	53f8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb8>  // b.none
    53ac:	ldr	x0, [sp, #176]
    53b0:	add	x21, sp, #0x190
    53b4:	mov	x8, x21
    53b8:	add	x20, sp, #0x1b0
    53bc:	stp	x25, x26, [sp, #64]
    53c0:	add	x19, sp, #0x170
    53c4:	stp	x27, x28, [sp, #80]
    53c8:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    53cc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    53d0:	mov	x8, x20
    53d4:	mov	x1, x21
    53d8:	add	x0, x0, #0x0
    53dc:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    53e0:	mov	x1, x20
    53e4:	mov	x0, x19
    53e8:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    53ec:	ldp	x0, x1, [sp, #192]
    53f0:	mov	x2, x19
    53f4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    53f8:	ldr	x21, [x1, #24]
    53fc:	add	x20, sp, #0x1b0
    5400:	cbz	x21, 5480 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x140>
    5404:	ldr	x19, [x1, #32]
    5408:	add	x0, x20, #0x10
    540c:	str	x19, [sp, #400]
    5410:	str	x0, [sp, #432]
    5414:	cmp	x19, #0xf
    5418:	b.hi	5e4c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb0c>  // b.pmore
    541c:	cmp	x19, #0x1
    5420:	b.ne	5e40 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb00>  // b.any
    5424:	ldrb	w2, [x21]
    5428:	mov	x1, x0
    542c:	strb	w2, [sp, #448]
    5430:	str	x19, [sp, #440]
    5434:	add	x2, x20, #0x10
    5438:	strb	wzr, [x1, x19]
    543c:	ldr	x1, [sp, #432]
    5440:	ldr	x0, [sp, #240]
    5444:	cmp	x1, x2
    5448:	b.eq	611c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xddc>  // b.none
    544c:	ldr	x2, [sp, #184]
    5450:	ldr	x3, [sp, #440]
    5454:	stp	x1, x3, [sp, #240]
    5458:	add	x2, x2, #0x10
    545c:	cmp	x0, x2
    5460:	ldr	x2, [sp, #448]
    5464:	b.eq	5ea0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb60>  // b.none
    5468:	ldr	x1, [sp, #256]
    546c:	str	x2, [sp, #256]
    5470:	cbz	x0, 5ea4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb64>
    5474:	str	x0, [sp, #432]
    5478:	str	x1, [sp, #448]
    547c:	b	549c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x15c>
    5480:	add	x1, x20, #0x10
    5484:	mov	x2, #0x0                   	// #0
    5488:	str	x1, [sp, #432]
    548c:	strb	wzr, [sp, #448]
    5490:	str	x2, [sp, #248]
    5494:	strb	wzr, [x0, x2]
    5498:	ldr	x0, [sp, #432]
    549c:	str	xzr, [sp, #440]
    54a0:	strb	wzr, [x0]
    54a4:	add	x1, x20, #0x10
    54a8:	ldr	x0, [sp, #432]
    54ac:	cmp	x0, x1
    54b0:	b.eq	54b8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x178>  // b.none
    54b4:	bl	0 <_ZdlPv>
    54b8:	ldr	x0, [sp, #176]
    54bc:	ldr	x0, [x0, #64]
    54c0:	cbz	x0, 6110 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdd0>
    54c4:	ldrb	w1, [x0, #8]
    54c8:	cmp	w1, #0x8
    54cc:	b.eq	5500 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c0>  // b.none
    54d0:	ldr	x0, [sp, #176]
    54d4:	add	x19, sp, #0x190
    54d8:	mov	x8, x19
    54dc:	stp	x25, x26, [sp, #64]
    54e0:	stp	x27, x28, [sp, #80]
    54e4:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    54e8:	mov	x1, x19
    54ec:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    54f0:	mov	x8, x20
    54f4:	add	x19, sp, #0x170
    54f8:	add	x0, x0, #0x0
    54fc:	b	53dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c>
    5500:	ldr	x19, [x0, #24]
    5504:	mov	x1, #0x3fffffff            	// #1073741823
    5508:	cmp	x19, x1
    550c:	b.hi	6164 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe24>  // b.pmore
    5510:	ldr	x0, [sp, #176]
    5514:	ldr	x0, [x0, #72]
    5518:	cbz	x0, 6110 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdd0>
    551c:	ldrb	w2, [x0, #8]
    5520:	cmp	w2, #0x8
    5524:	b.eq	5558 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x218>  // b.none
    5528:	ldr	x0, [sp, #176]
    552c:	add	x19, sp, #0x190
    5530:	mov	x8, x19
    5534:	stp	x25, x26, [sp, #64]
    5538:	stp	x27, x28, [sp, #80]
    553c:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    5540:	mov	x1, x19
    5544:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5548:	mov	x8, x20
    554c:	add	x19, sp, #0x170
    5550:	add	x0, x0, #0x0
    5554:	b	53dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c>
    5558:	ldr	x21, [x0, #24]
    555c:	cmp	x21, x1
    5560:	b.hi	6188 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe48>  // b.pmore
    5564:	ldr	x0, [sp, #176]
    5568:	ldr	x0, [x0, #32]
    556c:	cbz	x0, 61a0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe60>
    5570:	ldrb	w1, [x0, #8]
    5574:	cmp	w1, #0x6
    5578:	b.ne	61ac <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe6c>  // b.any
    557c:	ldr	x0, [x0, #24]
    5580:	cmp	x19, x21
    5584:	ldr	w1, [sp, #108]
    5588:	ldr	x0, [x0, #104]
    558c:	lsr	w2, w1, #31
    5590:	str	x0, [sp, #112]
    5594:	str	w2, [sp, #160]
    5598:	b.le	5dd0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa90>
    559c:	cmp	w1, #0x0
    55a0:	neg	w0, w1
    55a4:	b.lt	5a24 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6e4>  // b.tstop
    55a8:	str	w0, [sp, #108]
    55ac:	cset	w0, gt
    55b0:	str	w0, [sp, #160]
    55b4:	str	wzr, [sp, #164]
    55b8:	ldr	w0, [sp, #160]
    55bc:	cmp	w0, #0x0
    55c0:	ccmp	x19, x21, #0x0, ne  // ne = any
    55c4:	b.lt	5a24 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6e4>  // b.tstop
    55c8:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
    55cc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    55d0:	ldr	x3, [sp, #112]
    55d4:	add	x22, sp, #0x120
    55d8:	ldr	x1, [x1]
    55dc:	stp	x25, x26, [sp, #64]
    55e0:	mov	x26, x24
    55e4:	ldr	x0, [x0]
    55e8:	add	x1, x1, #0x10
    55ec:	add	x2, sp, #0x110
    55f0:	add	x3, x3, #0x38
    55f4:	add	x0, x0, #0x10
    55f8:	stp	x1, x0, [sp, #136]
    55fc:	add	x1, sp, #0x190
    5600:	stp	x27, x28, [sp, #80]
    5604:	str	x3, [sp, #96]
    5608:	str	x1, [sp, #128]
    560c:	add	x1, x24, #0x10
    5610:	str	x2, [sp, #152]
    5614:	str	x1, [sp, #168]
    5618:	mov	w2, #0x1                   	// #1
    561c:	str	w2, [sp, #464]
    5620:	ldr	x4, [sp, #144]
    5624:	mov	x0, x20
    5628:	ldr	x3, [sp, #240]
    562c:	stp	x4, x3, [sp, #400]
    5630:	ldr	x1, [sp, #128]
    5634:	stp	x22, xzr, [sp, #272]
    5638:	ldr	x3, [sp, #136]
    563c:	strb	wzr, [sp, #288]
    5640:	ldr	x2, [sp, #152]
    5644:	str	w19, [sp, #416]
    5648:	str	x3, [sp, #432]
    564c:	stp	xzr, xzr, [sp, #440]
    5650:	str	xzr, [sp, #456]
    5654:	str	x2, [sp, #472]
    5658:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    565c:	ldr	x0, [sp, #440]
    5660:	ldr	x1, [sp, #456]
    5664:	cmp	x1, x0
    5668:	b.eq	5674 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x334>  // b.none
    566c:	mov	x0, x20
    5670:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    5674:	ldr	x1, [sp, #112]
    5678:	ldr	x0, [sp, #472]
    567c:	ldr	x24, [x1, #64]
    5680:	ldp	x23, x28, [x0]
    5684:	cbz	x24, 56fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3bc>
    5688:	cbz	x28, 5860 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x520>
    568c:	ldr	x25, [sp, #96]
    5690:	ldp	x0, x27, [x24, #32]
    5694:	cmp	x28, x27
    5698:	b.cc	5a50 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x710>  // b.lo, b.ul, b.last
    569c:	cbz	x27, 5a60 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x720>
    56a0:	mov	x2, x27
    56a4:	mov	x1, x23
    56a8:	bl	0 <memcmp>
    56ac:	cbnz	w0, 5a74 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x734>
    56b0:	cmp	x28, x27
    56b4:	b.ne	5a60 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x720>  // b.any
    56b8:	mov	x25, x24
    56bc:	ldr	x24, [x24, #16]
    56c0:	cbnz	x24, 5690 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x350>
    56c4:	ldr	x0, [sp, #96]
    56c8:	cmp	x0, x25
    56cc:	b.eq	56fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3bc>  // b.none
    56d0:	ldp	x1, x24, [x25, #32]
    56d4:	cmp	x28, x24
    56d8:	b.hi	5c28 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8e8>  // b.pmore
    56dc:	mov	x0, x23
    56e0:	mov	x2, x28
    56e4:	bl	0 <memcmp>
    56e8:	cbnz	w0, 5c3c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8fc>
    56ec:	cmp	x28, x24
    56f0:	b.eq	5888 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x548>  // b.none
    56f4:	cmp	x28, x24
    56f8:	b.cs	5888 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x548>  // b.hs, b.nlast
    56fc:	add	x19, sp, #0x130
    5700:	strb	wzr, [sp, #320]
    5704:	add	x2, x19, #0x10
    5708:	mov	x0, x19
    570c:	ldr	x1, [sp, #280]
    5710:	stp	x2, xzr, [sp, #304]
    5714:	mov	x20, #0x3fffffffffffffff    	// #4611686018427387903
    5718:	add	x1, x1, #0xe
    571c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    5720:	ldr	x0, [sp, #312]
    5724:	sub	x0, x20, x0
    5728:	cmp	x0, #0xd
    572c:	b.ls	6228 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xee8>  // b.plast
    5730:	mov	x2, #0xe                   	// #14
    5734:	mov	x0, x19
    5738:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    573c:	add	x1, x1, #0x0
    5740:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5744:	ldp	x1, x2, [sp, #272]
    5748:	mov	x0, x19
    574c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5750:	ldr	x0, [sp, #312]
    5754:	sub	x20, x20, x0
    5758:	cmp	x20, #0x2
    575c:	b.ls	6228 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xee8>  // b.plast
    5760:	mov	x0, x19
    5764:	mov	x2, #0x3                   	// #3
    5768:	add	x19, sp, #0x150
    576c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5770:	add	x1, x1, #0x0
    5774:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5778:	add	x2, x19, #0x10
    577c:	str	x2, [sp, #336]
    5780:	mov	x1, x0
    5784:	ldr	x2, [x0], #16
    5788:	cmp	x2, x0
    578c:	b.eq	6070 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd30>  // b.none
    5790:	ldr	x3, [x1, #16]
    5794:	str	x2, [sp, #336]
    5798:	str	x3, [sp, #352]
    579c:	ldr	x2, [x1, #8]
    57a0:	str	x2, [sp, #344]
    57a4:	stp	x0, xzr, [x1]
    57a8:	add	x20, sp, #0x170
    57ac:	mov	x8, x20
    57b0:	ldr	x0, [sp, #176]
    57b4:	strb	wzr, [x1, #16]
    57b8:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    57bc:	ldp	x3, x4, [sp, #336]
    57c0:	add	x0, x19, #0x10
    57c4:	ldp	x1, x2, [sp, #368]
    57c8:	mov	x6, #0xf                   	// #15
    57cc:	cmp	x3, x0
    57d0:	ldr	x0, [sp, #352]
    57d4:	add	x5, x4, x2
    57d8:	csel	x0, x0, x6, ne  // ne = any
    57dc:	cmp	x5, x0
    57e0:	b.ls	57fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4bc>  // b.plast
    57e4:	ldr	x0, [sp, #384]
    57e8:	add	x7, x20, #0x10
    57ec:	cmp	x1, x7
    57f0:	csel	x0, x0, x6, ne  // ne = any
    57f4:	cmp	x5, x0
    57f8:	b.ls	60f0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdb0>  // b.plast
    57fc:	mov	x0, x19
    5800:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5804:	mov	x2, x0
    5808:	ldr	x1, [sp, #128]
    580c:	mov	x0, x2
    5810:	add	x1, x1, #0x10
    5814:	str	x1, [sp, #400]
    5818:	ldr	x1, [x0], #16
    581c:	cmp	x1, x0
    5820:	b.eq	607c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd3c>  // b.none
    5824:	str	x1, [sp, #400]
    5828:	ldr	x1, [x2, #16]
    582c:	str	x1, [sp, #416]
    5830:	ldr	x1, [x2, #8]
    5834:	str	x1, [sp, #408]
    5838:	stp	x0, xzr, [x2]
    583c:	mov	w3, #0x104                 	// #260
    5840:	ldr	x4, [sp, #128]
    5844:	strb	wzr, [x2, #16]
    5848:	ldr	x0, [sp, #192]
    584c:	add	x2, sp, #0xd8
    5850:	ldr	x1, [sp, #200]
    5854:	stp	x4, xzr, [sp, #216]
    5858:	strh	w3, [sp, #232]
    585c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5860:	mov	x25, x24
    5864:	ldr	x24, [x24, #16]
    5868:	cbnz	x24, 5860 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x520>
    586c:	ldr	x0, [sp, #96]
    5870:	cmp	x0, x25
    5874:	b.eq	56fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3bc>  // b.none
    5878:	ldr	x24, [x25, #40]
    587c:	cmp	x28, x24
    5880:	b.ne	56f4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3b4>  // b.any
    5884:	nop
    5888:	ldr	x24, [x25, #64]
    588c:	cbz	x24, 56fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3bc>
    5890:	ldr	x0, [sp, #120]
    5894:	mov	x1, x24
    5898:	bl	1a90 <_ZN4llvm9SetTheory6expandEPNS_6RecordE>
    589c:	mov	x28, x0
    58a0:	cbz	x0, 5b20 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7e0>
    58a4:	ldp	x25, x23, [x0]
    58a8:	add	x24, x26, #0xa0
    58ac:	add	x28, x26, #0x90
    58b0:	cmp	x25, x23
    58b4:	b.eq	59dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x69c>  // b.none
    58b8:	ldr	x27, [sp, #168]
    58bc:	b	590c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5cc>
    58c0:	mov	x4, x27
    58c4:	mov	w1, #0x10                  	// #16
    58c8:	ldr	x3, [x25]
    58cc:	cmn	x3, #0x10
    58d0:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    58d4:	b.eq	5f70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc30>  // b.none
    58d8:	lsr	w0, w3, #9
    58dc:	sub	w1, w1, #0x1
    58e0:	eor	w0, w0, w3, lsr #4
    58e4:	and	w6, w0, w1
    58e8:	mov	x0, x6
    58ec:	ubfiz	x2, x6, #3, #28
    58f0:	ldr	x6, [x4, x6, lsl #3]
    58f4:	add	x5, x4, x2
    58f8:	cmp	x3, x6
    58fc:	b.ne	5a80 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x740>  // b.any
    5900:	add	x25, x25, #0x8
    5904:	cmp	x23, x25
    5908:	b.eq	59dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x69c>  // b.none
    590c:	ldrb	w0, [x26, #8]
    5910:	and	w7, w0, #0x1
    5914:	tbnz	w0, #0, 58c0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x580>
    5918:	ldr	w1, [x26, #24]
    591c:	ldr	x4, [x26, #16]
    5920:	cbnz	w1, 58c8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x588>
    5924:	ldr	w0, [x26, #8]
    5928:	mov	x2, #0x0                   	// #0
    592c:	ldr	x5, [x26]
    5930:	lsr	w3, w0, #1
    5934:	add	w4, w3, #0x1
    5938:	add	x3, x5, #0x1
    593c:	str	x3, [x26]
    5940:	add	w3, w1, w1, lsl #1
    5944:	cmp	w3, w4, lsl #2
    5948:	b.ls	5ac4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x784>  // b.plast
    594c:	ldr	w3, [x26, #12]
    5950:	sub	w3, w1, w3
    5954:	sub	w3, w3, w4
    5958:	cmp	w3, w1, lsr #3
    595c:	b.ls	5cec <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9ac>  // b.plast
    5960:	cbz	x2, 5d68 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa28>
    5964:	lsr	w1, w0, #1
    5968:	adds	w1, w1, #0x1
    596c:	b.mi	6050 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd10>  // b.first
    5970:	bfi	w0, w1, #1, #31
    5974:	str	w0, [x26, #8]
    5978:	ldr	x0, [x2]
    597c:	cmn	x0, #0x8
    5980:	b.eq	5990 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x650>  // b.none
    5984:	ldr	w0, [x26, #12]
    5988:	sub	w0, w0, #0x1
    598c:	str	w0, [x26, #12]
    5990:	ldr	x0, [x25]
    5994:	ldr	w1, [x26, #156]
    5998:	str	x0, [x2]
    599c:	ldr	w0, [x26, #152]
    59a0:	cmp	w0, w1
    59a4:	b.cs	5cd0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x990>  // b.hs, b.nlast
    59a8:	ldr	x1, [x26, #144]
    59ac:	ldr	x2, [x25]
    59b0:	str	x2, [x1, w0, uxtw #3]
    59b4:	ldp	w0, w2, [x26, #152]
    59b8:	mov	w1, w0
    59bc:	add	x1, x1, #0x1
    59c0:	cmp	x1, x2
    59c4:	b.hi	6030 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcf0>  // b.pmore
    59c8:	add	w0, w0, #0x1
    59cc:	str	w0, [x26, #152]
    59d0:	add	x25, x25, #0x8
    59d4:	cmp	x23, x25
    59d8:	b.ne	590c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5cc>  // b.any
    59dc:	mov	x0, x20
    59e0:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    59e4:	ldr	w1, [sp, #108]
    59e8:	ldr	x0, [sp, #272]
    59ec:	add	x19, x19, w1, sxtw
    59f0:	cmp	x0, x22
    59f4:	b.eq	59fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6bc>  // b.none
    59f8:	bl	0 <_ZdlPv>
    59fc:	ldr	w0, [sp, #164]
    5a00:	cmp	w0, #0x0
    5a04:	ccmp	x19, x21, #0x4, ne  // ne = any
    5a08:	b.gt	5a1c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6dc>
    5a0c:	ldr	w0, [sp, #160]
    5a10:	cmp	w0, #0x0
    5a14:	ccmp	x19, x21, #0x0, ne  // ne = any
    5a18:	b.ge	5618 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2d8>  // b.tcont
    5a1c:	ldp	x25, x26, [sp, #64]
    5a20:	ldp	x27, x28, [sp, #80]
    5a24:	ldr	x1, [sp, #184]
    5a28:	ldr	x0, [sp, #240]
    5a2c:	add	x1, x1, #0x10
    5a30:	cmp	x0, x1
    5a34:	b.eq	5a3c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6fc>  // b.none
    5a38:	bl	0 <_ZdlPv>
    5a3c:	ldp	x19, x20, [sp, #16]
    5a40:	ldp	x21, x22, [sp, #32]
    5a44:	ldp	x23, x24, [sp, #48]
    5a48:	ldp	x29, x30, [sp], #480
    5a4c:	ret
    5a50:	mov	x2, x28
    5a54:	mov	x1, x23
    5a58:	bl	0 <memcmp>
    5a5c:	cbnz	w0, 5a74 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x734>
    5a60:	cmp	x28, x27
    5a64:	b.ls	56b8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x378>  // b.plast
    5a68:	ldr	x24, [x24, #24]
    5a6c:	cbnz	x24, 5690 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x350>
    5a70:	b	56c4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x384>
    5a74:	tbz	w0, #31, 56b8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x378>
    5a78:	ldr	x24, [x24, #24]
    5a7c:	b	5a6c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x72c>
    5a80:	mov	w8, #0x1                   	// #1
    5a84:	mov	x2, #0x0                   	// #0
    5a88:	cmn	x6, #0x8
    5a8c:	b.ne	5d98 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa58>  // b.any
    5a90:	ldr	x1, [x26]
    5a94:	cmp	x2, #0x0
    5a98:	ldr	w0, [x26, #8]
    5a9c:	csel	x2, x2, x5, ne  // ne = any
    5aa0:	add	x1, x1, #0x1
    5aa4:	str	x1, [x26]
    5aa8:	lsr	w3, w0, #1
    5aac:	add	w4, w3, #0x1
    5ab0:	cbz	w7, 6150 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe10>
    5ab4:	mov	w3, #0x30                  	// #48
    5ab8:	mov	w1, #0x10                  	// #16
    5abc:	cmp	w3, w4, lsl #2
    5ac0:	b.hi	594c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x60c>  // b.pmore
    5ac4:	mov	x0, x26
    5ac8:	lsl	w1, w1, #1
    5acc:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5ad0:	ldrb	w0, [x26, #8]
    5ad4:	tbz	w0, #0, 5d5c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa1c>
    5ad8:	mov	x4, x27
    5adc:	mov	w2, #0x10                  	// #16
    5ae0:	ldr	x1, [x25]
    5ae4:	cmn	x1, #0x10
    5ae8:	ccmn	x1, #0x8, #0x4, ne  // ne = any
    5aec:	b.eq	5f70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc30>  // b.none
    5af0:	lsr	w0, w1, #9
    5af4:	sub	w3, w2, #0x1
    5af8:	eor	w0, w0, w1, lsr #4
    5afc:	and	w5, w0, w3
    5b00:	mov	x0, x5
    5b04:	ubfiz	x2, x5, #3, #28
    5b08:	ldr	x5, [x4, x5, lsl #3]
    5b0c:	add	x2, x4, x2
    5b10:	cmp	x1, x5
    5b14:	b.ne	5e80 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb40>  // b.any
    5b18:	ldr	w0, [x26, #8]
    5b1c:	b	5964 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x624>
    5b20:	ldrb	w0, [x26, #8]
    5b24:	and	w7, w0, #0x1
    5b28:	tbz	w0, #0, 5c44 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x904>
    5b2c:	ldr	x2, [sp, #168]
    5b30:	mov	w1, #0x10                  	// #16
    5b34:	cmn	x24, #0x8
    5b38:	ccmn	x24, #0x10, #0x4, ne  // ne = any
    5b3c:	b.eq	5f70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc30>  // b.none
    5b40:	lsr	w0, w24, #9
    5b44:	sub	w1, w1, #0x1
    5b48:	eor	w0, w0, w24, lsr #4
    5b4c:	and	w5, w0, w1
    5b50:	mov	x0, x5
    5b54:	ubfiz	x3, x5, #3, #28
    5b58:	ldr	x5, [x2, x5, lsl #3]
    5b5c:	add	x3, x2, x3
    5b60:	cmp	x24, x5
    5b64:	b.eq	59dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x69c>  // b.none
    5b68:	mov	x6, #0x0                   	// #0
    5b6c:	mov	w8, #0x1                   	// #1
    5b70:	cmn	x5, #0x8
    5b74:	b.ne	5f90 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc50>  // b.any
    5b78:	ldr	x1, [x26]
    5b7c:	cmp	x6, #0x0
    5b80:	ldr	w0, [x26, #8]
    5b84:	csel	x6, x6, x3, ne  // ne = any
    5b88:	add	x1, x1, #0x1
    5b8c:	str	x1, [x26]
    5b90:	lsr	w2, w0, #1
    5b94:	add	w3, w2, #0x1
    5b98:	cbz	w7, 6158 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe18>
    5b9c:	mov	w2, #0x30                  	// #48
    5ba0:	mov	w1, #0x10                  	// #16
    5ba4:	cmp	w2, w3, lsl #2
    5ba8:	b.ls	5c78 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x938>  // b.plast
    5bac:	ldr	w2, [x26, #12]
    5bb0:	sub	w2, w1, w2
    5bb4:	sub	w2, w2, w3
    5bb8:	cmp	w2, w1, lsr #3
    5bbc:	b.ls	5ecc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb8c>  // b.plast
    5bc0:	cbz	x6, 5d68 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa28>
    5bc4:	lsr	w1, w0, #1
    5bc8:	adds	w1, w1, #0x1
    5bcc:	b.mi	6050 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd10>  // b.first
    5bd0:	bfi	w0, w1, #1, #31
    5bd4:	str	w0, [x26, #8]
    5bd8:	ldr	x0, [x6]
    5bdc:	cmn	x0, #0x8
    5be0:	b.eq	5bf0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8b0>  // b.none
    5be4:	ldr	w0, [x26, #12]
    5be8:	sub	w0, w0, #0x1
    5bec:	str	w0, [x26, #12]
    5bf0:	ldp	w0, w1, [x26, #152]
    5bf4:	str	x24, [x6]
    5bf8:	cmp	w0, w1
    5bfc:	b.cs	5eb0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb70>  // b.hs, b.nlast
    5c00:	ldr	x1, [x26, #144]
    5c04:	str	x24, [x1, w0, uxtw #3]
    5c08:	ldp	w0, w2, [x26, #152]
    5c0c:	mov	w1, w0
    5c10:	add	x1, x1, #0x1
    5c14:	cmp	x1, x2
    5c18:	b.hi	6030 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcf0>  // b.pmore
    5c1c:	add	w0, w0, #0x1
    5c20:	str	w0, [x26, #152]
    5c24:	b	59dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x69c>
    5c28:	cbz	x24, 5888 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x548>
    5c2c:	mov	x0, x23
    5c30:	mov	x2, x24
    5c34:	bl	0 <memcmp>
    5c38:	cbz	w0, 56f4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3b4>
    5c3c:	tbz	w0, #31, 5888 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x548>
    5c40:	b	56fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3bc>
    5c44:	ldr	w1, [x26, #24]
    5c48:	ldr	x2, [x26, #16]
    5c4c:	cbnz	w1, 5b34 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7f4>
    5c50:	ldr	w0, [x26, #8]
    5c54:	mov	x6, #0x0                   	// #0
    5c58:	ldr	x5, [x26]
    5c5c:	lsr	w2, w0, #1
    5c60:	add	w3, w2, #0x1
    5c64:	add	x2, x5, #0x1
    5c68:	str	x2, [x26]
    5c6c:	add	w2, w1, w1, lsl #1
    5c70:	cmp	w2, w3, lsl #2
    5c74:	b.hi	5bac <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x86c>  // b.pmore
    5c78:	mov	x0, x26
    5c7c:	lsl	w1, w1, #1
    5c80:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5c84:	ldrb	w0, [x26, #8]
    5c88:	tbz	w0, #0, 5f34 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbf4>
    5c8c:	ldr	x2, [sp, #168]
    5c90:	mov	w1, #0x10                  	// #16
    5c94:	cmn	x24, #0x8
    5c98:	ccmn	x24, #0x10, #0x4, ne  // ne = any
    5c9c:	b.eq	5f70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc30>  // b.none
    5ca0:	lsr	w0, w24, #9
    5ca4:	sub	w1, w1, #0x1
    5ca8:	eor	w0, w0, w24, lsr #4
    5cac:	and	w3, w0, w1
    5cb0:	mov	x0, x3
    5cb4:	ubfiz	x6, x3, #3, #28
    5cb8:	ldr	x3, [x2, x3, lsl #3]
    5cbc:	add	x6, x2, x6
    5cc0:	cmp	x24, x3
    5cc4:	b.ne	5f54 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc14>  // b.any
    5cc8:	ldr	w0, [x26, #8]
    5ccc:	b	5bc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x884>
    5cd0:	mov	x0, x28
    5cd4:	mov	x1, x24
    5cd8:	mov	x3, #0x8                   	// #8
    5cdc:	mov	x2, #0x0                   	// #0
    5ce0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5ce4:	ldr	w0, [x26, #152]
    5ce8:	b	59a8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x668>
    5cec:	mov	x0, x26
    5cf0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5cf4:	ldrb	w0, [x26, #8]
    5cf8:	tbz	w0, #0, 5d88 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa48>
    5cfc:	mov	x4, x27
    5d00:	mov	w2, #0x10                  	// #16
    5d04:	ldr	x1, [x25]
    5d08:	cmn	x1, #0x8
    5d0c:	ccmn	x1, #0x10, #0x4, ne  // ne = any
    5d10:	b.eq	5f70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc30>  // b.none
    5d14:	lsr	w0, w1, #9
    5d18:	sub	w3, w2, #0x1
    5d1c:	eor	w0, w0, w1, lsr #4
    5d20:	and	w5, w0, w3
    5d24:	mov	x0, x5
    5d28:	ubfiz	x2, x5, #3, #28
    5d2c:	ldr	x5, [x4, x5, lsl #3]
    5d30:	add	x2, x4, x2
    5d34:	cmp	x1, x5
    5d38:	b.eq	5b18 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7d8>  // b.none
    5d3c:	mov	w7, #0x1                   	// #1
    5d40:	mov	x6, #0x0                   	// #0
    5d44:	cmn	x5, #0x8
    5d48:	b.ne	5ffc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xcbc>  // b.any
    5d4c:	ldr	w0, [x26, #8]
    5d50:	cbz	x6, 5964 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x624>
    5d54:	mov	x2, x6
    5d58:	b	5964 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x624>
    5d5c:	ldr	w2, [x26, #24]
    5d60:	ldr	x4, [x26, #16]
    5d64:	cbnz	w2, 5ae0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7a0>
    5d68:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5d6c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5d70:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5d74:	add	x3, x3, #0x0
    5d78:	add	x1, x1, #0x0
    5d7c:	add	x0, x0, #0x0
    5d80:	mov	w2, #0x22f                 	// #559
    5d84:	bl	0 <__assert_fail>
    5d88:	ldr	w2, [x26, #24]
    5d8c:	ldr	x4, [x26, #16]
    5d90:	cbnz	w2, 5d04 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c4>
    5d94:	b	5d68 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa28>
    5d98:	add	w0, w0, w8
    5d9c:	cmp	x2, #0x0
    5da0:	and	w9, w1, w0
    5da4:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    5da8:	csel	x5, x5, x2, eq  // eq = none
    5dac:	add	w8, w8, #0x1
    5db0:	and	w0, w1, w0
    5db4:	add	x10, x4, x9, lsl #3
    5db8:	ldr	x6, [x4, x9, lsl #3]
    5dbc:	cmp	x3, x6
    5dc0:	b.eq	5900 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5c0>  // b.none
    5dc4:	mov	x2, x5
    5dc8:	mov	x5, x10
    5dcc:	b	5a88 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x748>
    5dd0:	ldr	w0, [sp, #108]
    5dd4:	cmp	w0, #0x0
    5dd8:	cset	w0, gt
    5ddc:	str	w0, [sp, #164]
    5de0:	b	55b8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x278>
    5de4:	ldr	x0, [x2, #80]
    5de8:	cbz	x0, 6108 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc8>
    5dec:	ldrb	w1, [x0, #8]
    5df0:	cmp	w1, #0x8
    5df4:	b.eq	5e34 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xaf4>  // b.none
    5df8:	ldr	x0, [sp, #176]
    5dfc:	stp	x21, x22, [sp, #32]
    5e00:	add	x21, sp, #0x190
    5e04:	mov	x8, x21
    5e08:	stp	x19, x20, [sp, #16]
    5e0c:	add	x20, sp, #0x1b0
    5e10:	stp	x25, x26, [sp, #64]
    5e14:	add	x19, sp, #0x170
    5e18:	stp	x27, x28, [sp, #80]
    5e1c:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    5e20:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5e24:	mov	x8, x20
    5e28:	mov	x1, x21
    5e2c:	add	x0, x0, #0x0
    5e30:	b	53dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c>
    5e34:	ldr	w0, [x0, #24]
    5e38:	str	w0, [sp, #108]
    5e3c:	b	5374 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x34>
    5e40:	mov	x1, x0
    5e44:	cbz	x19, 5430 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf0>
    5e48:	b	5e68 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb28>
    5e4c:	add	x1, sp, #0x190
    5e50:	mov	x0, x20
    5e54:	mov	x2, #0x0                   	// #0
    5e58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    5e5c:	ldr	x1, [sp, #400]
    5e60:	str	x0, [sp, #432]
    5e64:	str	x1, [sp, #448]
    5e68:	mov	x2, x19
    5e6c:	mov	x1, x21
    5e70:	bl	0 <memcpy>
    5e74:	ldr	x19, [sp, #400]
    5e78:	ldr	x1, [sp, #432]
    5e7c:	b	5430 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf0>
    5e80:	mov	w7, #0x1                   	// #1
    5e84:	mov	x6, #0x0                   	// #0
    5e88:	cmn	x5, #0x8
    5e8c:	b.ne	5fc8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc88>  // b.any
    5e90:	cbz	x6, 5b18 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x7d8>
    5e94:	ldr	w0, [x26, #8]
    5e98:	mov	x2, x6
    5e9c:	b	5964 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x624>
    5ea0:	str	x2, [sp, #256]
    5ea4:	add	x0, x20, #0x10
    5ea8:	str	x0, [sp, #432]
    5eac:	b	549c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x15c>
    5eb0:	add	x0, x26, #0x90
    5eb4:	add	x1, x26, #0xa0
    5eb8:	mov	x3, #0x8                   	// #8
    5ebc:	mov	x2, #0x0                   	// #0
    5ec0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5ec4:	ldr	w0, [x26, #152]
    5ec8:	b	5c00 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x8c0>
    5ecc:	mov	x0, x26
    5ed0:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5ed4:	ldrb	w0, [x26, #8]
    5ed8:	tbz	w0, #0, 5f44 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc04>
    5edc:	ldr	x2, [sp, #168]
    5ee0:	mov	w1, #0x10                  	// #16
    5ee4:	cmn	x24, #0x8
    5ee8:	ccmn	x24, #0x10, #0x4, ne  // ne = any
    5eec:	b.eq	5f70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc30>  // b.none
    5ef0:	lsr	w0, w24, #9
    5ef4:	sub	w1, w1, #0x1
    5ef8:	eor	w0, w0, w24, lsr #4
    5efc:	and	w3, w0, w1
    5f00:	mov	x0, x3
    5f04:	ubfiz	x6, x3, #3, #28
    5f08:	ldr	x3, [x2, x3, lsl #3]
    5f0c:	add	x6, x2, x6
    5f10:	cmp	x24, x3
    5f14:	b.eq	5cc8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x988>  // b.none
    5f18:	mov	w5, #0x1                   	// #1
    5f1c:	cmn	x3, #0x8
    5f20:	b.ne	60bc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd7c>  // b.any
    5f24:	ldr	w0, [x26, #8]
    5f28:	cbz	x28, 5bc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x884>
    5f2c:	mov	x6, x28
    5f30:	b	5bc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x884>
    5f34:	ldr	w1, [x26, #24]
    5f38:	ldr	x2, [x26, #16]
    5f3c:	cbnz	w1, 5c94 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x954>
    5f40:	b	5d68 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa28>
    5f44:	ldr	w1, [x26, #24]
    5f48:	ldr	x2, [x26, #16]
    5f4c:	cbnz	w1, 5ee4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xba4>
    5f50:	b	5d68 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa28>
    5f54:	mov	w5, #0x1                   	// #1
    5f58:	cmn	x3, #0x8
    5f5c:	b.ne	6088 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd48>  // b.any
    5f60:	cbz	x28, 5cc8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x988>
    5f64:	ldr	w0, [x26, #8]
    5f68:	mov	x6, x28
    5f6c:	b	5bc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x884>
    5f70:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5f74:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5f78:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    5f7c:	add	x3, x3, #0x0
    5f80:	add	x1, x1, #0x0
    5f84:	add	x0, x0, #0x0
    5f88:	mov	w2, #0x250                 	// #592
    5f8c:	bl	0 <__assert_fail>
    5f90:	add	w0, w8, w0
    5f94:	cmp	x6, #0x0
    5f98:	and	w4, w1, w0
    5f9c:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    5fa0:	csel	x3, x3, x6, eq  // eq = none
    5fa4:	add	w8, w8, #0x1
    5fa8:	and	w0, w1, w0
    5fac:	add	x9, x2, x4, lsl #3
    5fb0:	ldr	x5, [x2, x4, lsl #3]
    5fb4:	cmp	x24, x5
    5fb8:	b.eq	59dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x69c>  // b.none
    5fbc:	mov	x6, x3
    5fc0:	mov	x3, x9
    5fc4:	b	5b70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x830>
    5fc8:	add	w0, w0, w7
    5fcc:	cmp	x6, #0x0
    5fd0:	and	w8, w3, w0
    5fd4:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    5fd8:	csel	x6, x6, x2, ne  // ne = any
    5fdc:	add	w7, w7, #0x1
    5fe0:	and	w0, w3, w0
    5fe4:	add	x2, x4, x8, lsl #3
    5fe8:	ldr	x5, [x4, x8, lsl #3]
    5fec:	cmp	x1, x5
    5ff0:	b.ne	5e88 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xb48>  // b.any
    5ff4:	ldr	w0, [x26, #8]
    5ff8:	b	5964 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x624>
    5ffc:	add	w0, w7, w0
    6000:	cmp	x6, #0x0
    6004:	and	w8, w3, w0
    6008:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    600c:	csel	x6, x6, x2, ne  // ne = any
    6010:	add	w7, w7, #0x1
    6014:	and	w0, w3, w0
    6018:	add	x2, x4, x8, lsl #3
    601c:	ldr	x5, [x4, x8, lsl #3]
    6020:	cmp	x1, x5
    6024:	b.ne	5d44 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xa04>  // b.any
    6028:	ldr	w0, [x26, #8]
    602c:	b	5964 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x624>
    6030:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    6034:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    6038:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    603c:	add	x3, x3, #0x0
    6040:	add	x1, x1, #0x0
    6044:	add	x0, x0, #0x0
    6048:	mov	w2, #0x43                  	// #67
    604c:	bl	0 <__assert_fail>
    6050:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    6054:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    6058:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    605c:	add	x3, x3, #0x0
    6060:	add	x1, x1, #0x0
    6064:	add	x0, x0, #0x0
    6068:	mov	w2, #0x441                 	// #1089
    606c:	bl	0 <__assert_fail>
    6070:	ldp	x2, x3, [x1, #16]
    6074:	stp	x2, x3, [sp, #352]
    6078:	b	579c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x45c>
    607c:	ldp	x4, x5, [x2, #16]
    6080:	stp	x4, x5, [sp, #416]
    6084:	b	5830 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4f0>
    6088:	add	w0, w5, w0
    608c:	cmp	x28, #0x0
    6090:	and	w4, w1, w0
    6094:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    6098:	csel	x28, x28, x6, ne  // ne = any
    609c:	add	w5, w5, #0x1
    60a0:	and	w0, w1, w0
    60a4:	add	x6, x2, x4, lsl #3
    60a8:	ldr	x3, [x2, x4, lsl #3]
    60ac:	cmp	x24, x3
    60b0:	b.ne	5f58 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xc18>  // b.any
    60b4:	ldr	w0, [x26, #8]
    60b8:	b	5bc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x884>
    60bc:	add	w0, w0, w5
    60c0:	cmp	x28, #0x0
    60c4:	and	w4, w1, w0
    60c8:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    60cc:	csel	x28, x28, x6, ne  // ne = any
    60d0:	add	w5, w5, #0x1
    60d4:	and	w0, w1, w0
    60d8:	add	x6, x2, x4, lsl #3
    60dc:	ldr	x3, [x2, x4, lsl #3]
    60e0:	cmp	x24, x3
    60e4:	b.ne	5f1c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xbdc>  // b.any
    60e8:	ldr	w0, [x26, #8]
    60ec:	b	5bc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x884>
    60f0:	mov	x2, #0x0                   	// #0
    60f4:	mov	x0, x20
    60f8:	mov	x1, #0x0                   	// #0
    60fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    6100:	mov	x2, x0
    6104:	b	5808 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4c8>
    6108:	stp	x19, x20, [sp, #16]
    610c:	stp	x21, x22, [sp, #32]
    6110:	stp	x25, x26, [sp, #64]
    6114:	stp	x27, x28, [sp, #80]
    6118:	bl	f8 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    611c:	ldr	x2, [sp, #440]
    6120:	cbz	x2, 5490 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>
    6124:	cmp	x2, #0x1
    6128:	b.eq	613c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdfc>  // b.none
    612c:	bl	0 <memcpy>
    6130:	ldr	x0, [sp, #240]
    6134:	ldr	x2, [sp, #440]
    6138:	b	5490 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>
    613c:	ldrb	w1, [sp, #448]
    6140:	strb	w1, [x0]
    6144:	ldr	x0, [sp, #240]
    6148:	ldr	x2, [sp, #440]
    614c:	b	5490 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>
    6150:	ldr	w1, [x26, #24]
    6154:	b	5940 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x600>
    6158:	ldr	w1, [x26, #24]
    615c:	add	w2, w1, w1, lsl #1
    6160:	b	5c70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x930>
    6164:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    6168:	mov	x0, x20
    616c:	add	x1, x1, #0x0
    6170:	stp	x25, x26, [sp, #64]
    6174:	stp	x27, x28, [sp, #80]
    6178:	bl	0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    617c:	ldp	x0, x1, [sp, #192]
    6180:	mov	x2, x20
    6184:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6188:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    618c:	mov	x0, x20
    6190:	add	x1, x1, #0x0
    6194:	stp	x25, x26, [sp, #64]
    6198:	stp	x27, x28, [sp, #80]
    619c:	b	6178 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe38>
    61a0:	stp	x25, x26, [sp, #64]
    61a4:	stp	x27, x28, [sp, #80]
    61a8:	bl	120 <_ZN4llvm3isaINS_7DefInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    61ac:	adrp	x3, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    61b0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    61b4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    61b8:	add	x3, x3, #0x0
    61bc:	add	x1, x1, #0x0
    61c0:	add	x0, x0, #0x0
    61c4:	mov	w2, #0x108                 	// #264
    61c8:	stp	x25, x26, [sp, #64]
    61cc:	stp	x27, x28, [sp, #80]
    61d0:	bl	0 <__assert_fail>
    61d4:	stp	x21, x22, [sp, #32]
    61d8:	add	x21, sp, #0x190
    61dc:	mov	x0, x2
    61e0:	mov	x8, x21
    61e4:	stp	x19, x20, [sp, #16]
    61e8:	add	x20, sp, #0x1b0
    61ec:	stp	x23, x24, [sp, #48]
    61f0:	add	x19, sp, #0x170
    61f4:	stp	x25, x26, [sp, #64]
    61f8:	stp	x27, x28, [sp, #80]
    61fc:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    6200:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    6204:	mov	x8, x20
    6208:	mov	x1, x21
    620c:	add	x0, x0, #0x0
    6210:	b	53dc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x9c>
    6214:	stp	x19, x20, [sp, #16]
    6218:	stp	x21, x22, [sp, #32]
    621c:	stp	x25, x26, [sp, #64]
    6220:	stp	x27, x28, [sp, #80]
    6224:	bl	d0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    6228:	adrp	x0, 0 <_ZN4llvm9SetTheory8Expander6anchorEv>
    622c:	add	x0, x0, #0x0
    6230:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm13format_objectIJjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjEE7snprintEPcj>:
   0:	mov	x3, x0
   4:	mov	x0, x1
   8:	mov	w1, w2
   c:	ldr	x2, [x3, #8]
  10:	ldr	w3, [x3, #16]
  14:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	w2, #0x104                 	// #260
   4:	stp	x1, xzr, [x0]
   8:	strh	w2, [x0, #16]
   c:	ret

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	bl	0 <strlen>
  20:	mov	x4, x0
  24:	mov	x2, #0x0                   	// #0
  28:	mov	x1, #0x0                   	// #0
  2c:	mov	x3, x21
  30:	mov	x0, x20
  34:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  38:	mov	x1, x0
  3c:	add	x2, x19, #0x10
  40:	str	x2, [x19]
  44:	mov	x2, x0
  48:	ldr	x0, [x2], #16
  4c:	cmp	x0, x2
  50:	b.eq	84 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x84>  // b.none
  54:	ldr	x3, [x1, #16]
  58:	str	x0, [x19]
  5c:	str	x3, [x19, #16]
  60:	ldr	x0, [x1, #8]
  64:	str	x0, [x19, #8]
  68:	stp	x2, xzr, [x1]
  6c:	mov	x0, x19
  70:	strb	wzr, [x1, #16]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	ldp	x4, x5, [x1, #16]
  88:	stp	x4, x5, [x19, #16]
  8c:	b	60 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x60>

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x3
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x1
  18:	stp	x23, x24, [sp, #48]
  1c:	mov	x24, x0
  20:	mov	x0, #0x40                  	// #64
  24:	str	x25, [sp, #64]
  28:	bl	0 <_Znwm>
  2c:	ldr	x4, [x20]
  30:	add	x25, x24, #0x8
  34:	mov	x19, x0
  38:	cmp	x25, x22
  3c:	ldr	x21, [x4]
  40:	stp	x21, xzr, [x0, #32]
  44:	stp	xzr, xzr, [x0, #48]
  48:	b.eq	144 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x144>  // b.none
  4c:	mov	x20, x22
  50:	ldr	x22, [x22, #32]
  54:	cmp	x21, x22
  58:	b.cs	d4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xd4>  // b.hs, b.nlast
  5c:	ldr	x22, [x24, #24]
  60:	mov	x0, x20
  64:	cmp	x22, x20
  68:	b.eq	88 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x88>  // b.none
  6c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  70:	ldr	x1, [x0, #32]
  74:	cmp	x1, x21
  78:	b.cs	1c4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x1c4>  // b.hs, b.nlast
  7c:	ldr	x1, [x0, #24]
  80:	cbz	x1, 1a0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x1a0>
  84:	mov	x0, x20
  88:	cmp	x0, #0x0
  8c:	cset	w1, ne  // ne = any
  90:	cmp	x25, x20
  94:	csinc	w0, w1, wzr, ne  // ne = any
  98:	cbz	w0, 1b4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x1b4>
  9c:	mov	x3, x25
  a0:	mov	x2, x20
  a4:	mov	x1, x19
  a8:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  ac:	ldr	x1, [x24, #40]
  b0:	mov	x0, x19
  b4:	ldp	x19, x20, [sp, #16]
  b8:	add	x1, x1, #0x1
  bc:	str	x1, [x24, #40]
  c0:	ldp	x21, x22, [sp, #32]
  c4:	ldp	x23, x24, [sp, #48]
  c8:	ldr	x25, [sp, #64]
  cc:	ldp	x29, x30, [sp], #80
  d0:	ret
  d4:	b.ls	120 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x120>  // b.plast
  d8:	ldr	x0, [x24, #32]
  dc:	cmp	x0, x20
  e0:	b.eq	22c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x22c>  // b.none
  e4:	mov	x0, x20
  e8:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  ec:	ldr	x1, [x0, #32]
  f0:	cmp	x1, x21
  f4:	b.ls	298 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x298>  // b.plast
  f8:	ldr	x1, [x20, #24]
  fc:	cbz	x1, 1b8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x1b8>
 100:	mov	x20, x0
 104:	mov	w0, #0x1                   	// #1
 108:	b	9c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x9c>
 10c:	mov	x20, x23
 110:	cbnz	w0, 238 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x238>
 114:	cmp	x21, x2
 118:	b.hi	228 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x228>  // b.pmore
 11c:	mov	x20, x23
 120:	mov	x0, x19
 124:	bl	0 <_ZdlPv>
 128:	mov	x0, x20
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x21, x22, [sp, #32]
 134:	ldp	x23, x24, [sp, #48]
 138:	ldr	x25, [sp, #64]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	ldr	x0, [x24, #40]
 148:	cbz	x0, 15c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x15c>
 14c:	ldr	x0, [x24, #32]
 150:	ldr	x1, [x0, #32]
 154:	cmp	x1, x21
 158:	b.cc	1a0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x1a0>  // b.lo, b.ul, b.last
 15c:	ldr	x23, [x24, #16]
 160:	cbz	x23, 234 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x234>
 164:	ldr	x2, [x23, #32]
 168:	mov	w0, #0x1                   	// #1
 16c:	cmp	x2, x21
 170:	b.ls	194 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x194>  // b.plast
 174:	nop
 178:	ldr	x1, [x23, #16]
 17c:	cbz	x1, 10c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x10c>
 180:	mov	x23, x1
 184:	mov	w0, #0x1                   	// #1
 188:	ldr	x2, [x23, #32]
 18c:	cmp	x2, x21
 190:	b.hi	178 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x178>  // b.pmore
 194:	mov	w0, #0x0                   	// #0
 198:	ldr	x1, [x23, #24]
 19c:	b	17c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x17c>
 1a0:	mov	x20, x0
 1a4:	mov	w1, #0x0                   	// #0
 1a8:	cmp	x25, x20
 1ac:	csinc	w0, w1, wzr, ne  // ne = any
 1b0:	cbnz	w0, 9c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x9c>
 1b4:	ldr	x22, [x20, #32]
 1b8:	cmp	x22, x21
 1bc:	cset	w0, hi  // hi = pmore
 1c0:	b	9c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x9c>
 1c4:	ldr	x20, [x24, #16]
 1c8:	cbz	x20, 274 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x274>
 1cc:	ldr	x1, [x20, #32]
 1d0:	mov	w2, #0x1                   	// #1
 1d4:	cmp	x21, x1
 1d8:	b.cs	1fc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x1fc>  // b.hs, b.nlast
 1dc:	nop
 1e0:	ldr	x0, [x20, #16]
 1e4:	cbz	x0, 25c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x25c>
 1e8:	mov	x20, x0
 1ec:	mov	w2, #0x1                   	// #1
 1f0:	ldr	x1, [x20, #32]
 1f4:	cmp	x21, x1
 1f8:	b.cc	1e0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x1e0>  // b.lo, b.ul, b.last
 1fc:	mov	w2, #0x0                   	// #0
 200:	ldr	x0, [x20, #24]
 204:	b	1e4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x1e4>
 208:	mov	x3, x20
 20c:	cbz	w2, 264 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x264>
 210:	ldr	x0, [x24, #24]
 214:	cmp	x0, x20
 218:	b.ne	280 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x280>  // b.any
 21c:	mov	x3, x20
 220:	mov	x20, x3
 224:	nop
 228:	cbz	x20, 120 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x120>
 22c:	mov	x0, #0x0                   	// #0
 230:	b	88 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x88>
 234:	mov	x23, x22
 238:	ldr	x0, [x24, #24]
 23c:	cmp	x0, x23
 240:	b.eq	2d8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x2d8>  // b.none
 244:	mov	x0, x23
 248:	mov	x20, x23
 24c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 250:	mov	x23, x0
 254:	ldr	x2, [x0, #32]
 258:	b	114 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x114>
 25c:	mov	x3, x20
 260:	cbnz	w2, 278 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x278>
 264:	cmp	x21, x1
 268:	b.ls	120 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x120>  // b.plast
 26c:	mov	x20, x3
 270:	b	228 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x228>
 274:	mov	x20, x25
 278:	cmp	x22, x20
 27c:	b.eq	2e4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x2e4>  // b.none
 280:	mov	x0, x20
 284:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 288:	mov	x3, x20
 28c:	mov	x20, x0
 290:	ldr	x1, [x0, #32]
 294:	b	264 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x264>
 298:	ldr	x20, [x24, #16]
 29c:	cbz	x20, 2f0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x2f0>
 2a0:	ldr	x1, [x20, #32]
 2a4:	mov	w2, #0x1                   	// #1
 2a8:	cmp	x21, x1
 2ac:	b.cs	2cc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x2cc>  // b.hs, b.nlast
 2b0:	ldr	x0, [x20, #16]
 2b4:	cbz	x0, 208 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x208>
 2b8:	mov	x20, x0
 2bc:	mov	w2, #0x1                   	// #1
 2c0:	ldr	x1, [x20, #32]
 2c4:	cmp	x21, x1
 2c8:	b.cc	2b0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x2b0>  // b.lo, b.ul, b.last
 2cc:	mov	w2, #0x0                   	// #0
 2d0:	ldr	x0, [x20, #24]
 2d4:	b	2b4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x2b4>
 2d8:	mov	x20, x23
 2dc:	cbnz	x20, 22c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x22c>
 2e0:	b	120 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x120>
 2e4:	mov	x3, x22
 2e8:	mov	x20, x3
 2ec:	b	228 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x228>
 2f0:	mov	x20, x25
 2f4:	b	210 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x210>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	stp	x23, x24, [sp, #48]
  20:	cmp	x1, x0
  24:	str	x1, [sp, #104]
  28:	b.hi	4d8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x4d8>  // b.pmore
  2c:	ldr	w0, [x22, #12]
  30:	mov	x20, #0xffffffff            	// #4294967295
  34:	str	x20, [sp, #120]
  38:	add	x0, x0, #0x2
  3c:	orr	x0, x0, x0, lsr #1
  40:	orr	x0, x0, x0, lsr #2
  44:	orr	x0, x0, x0, lsr #4
  48:	orr	x0, x0, x0, lsr #8
  4c:	orr	x21, x0, x0, lsr #16
  50:	orr	x21, x21, x0, lsr #32
  54:	add	x21, x21, #0x1
  58:	cmp	x21, x19
  5c:	csel	x21, x21, x19, cs  // cs = hs, nlast
  60:	cmp	x21, x20
  64:	b.hi	4a4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x4a4>  // b.pmore
  68:	add	x0, x21, x21, lsl #3
  6c:	str	x21, [sp, #112]
  70:	lsl	x0, x0, #5
  74:	bl	0 <malloc>
  78:	mov	x23, x0
  7c:	cbz	x0, 4c0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x4c0>
  80:	ldr	w24, [x22, #8]
  84:	mov	w0, #0x120                 	// #288
  88:	ldr	x20, [x22]
  8c:	umaddl	x24, w24, w0, x20
  90:	cmp	x20, x24
  94:	b.eq	24c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x24c>  // b.none
  98:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  9c:	mov	x19, x23
  a0:	stp	x25, x26, [sp, #64]
  a4:	mov	w25, #0x1                   	// #1
  a8:	mov	x26, #0xfffffffffffffff8    	// #-8
  ac:	ldr	q1, [x0]
  b0:	stp	x27, x28, [sp, #80]
  b4:	nop
  b8:	str	xzr, [x19]
  bc:	stp	w25, wzr, [x19, #8]
  c0:	cbnz	w25, 410 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x410>
  c4:	ldr	w1, [x19, #24]
  c8:	sub	w0, w1, #0x1
  cc:	tst	w0, w1
  d0:	b.ne	560 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x560>  // b.any
  d4:	ldr	x0, [x19, #16]
  d8:	ubfiz	x1, x1, #3, #32
  dc:	add	x4, x0, x1
  e0:	cmp	x0, x4
  e4:	b.eq	424 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x424>  // b.none
  e8:	sub	x1, x1, #0x8
  ec:	mov	x2, x0
  f0:	cmp	x1, #0x10
  f4:	lsr	x1, x1, #3
  f8:	add	x1, x1, #0x1
  fc:	b.ls	124 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x124>  // b.plast
 100:	lsr	x3, x1, #1
 104:	add	x3, x0, x3, lsl #4
 108:	str	q1, [x2], #16
 10c:	cmp	x3, x2
 110:	b.ne	108 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x108>  // b.any
 114:	and	x2, x1, #0xfffffffffffffffe
 118:	cmp	x1, x2
 11c:	add	x0, x0, x2, lsl #3
 120:	b.eq	148 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x148>  // b.none
 124:	mov	x1, x0
 128:	str	x26, [x1], #8
 12c:	cmp	x4, x1
 130:	b.eq	148 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x148>  // b.none
 134:	str	x26, [x0, #8]
 138:	add	x1, x0, #0x10
 13c:	cmp	x4, x1
 140:	b.eq	148 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x148>  // b.none
 144:	str	x26, [x0, #16]
 148:	ldr	w1, [x19, #8]
 14c:	lsr	w1, w1, #1
 150:	ldr	w0, [x20, #8]
 154:	mov	w2, w0
 158:	lsr	w0, w0, #1
 15c:	bfi	w2, w1, #1, #31
 160:	str	w2, [x20, #8]
 164:	ldp	w1, w2, [x19, #8]
 168:	bfi	w1, w0, #1, #31
 16c:	str	w1, [x19, #8]
 170:	ldr	w0, [x20, #12]
 174:	str	w0, [x19, #12]
 178:	str	w2, [x20, #12]
 17c:	ldrb	w0, [x19, #8]
 180:	tbnz	w0, #0, 27c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x27c>
 184:	ldrb	w0, [x20, #8]
 188:	tbnz	w0, #0, 464 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x464>
 18c:	ldr	x1, [x20, #16]
 190:	ldr	x0, [x19, #16]
 194:	str	x1, [x19, #16]
 198:	str	x0, [x20, #16]
 19c:	ldrb	w0, [x19, #8]
 1a0:	tbnz	w0, #0, 540 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x540>
 1a4:	ldrb	w0, [x20, #8]
 1a8:	tbnz	w0, #0, 540 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x540>
 1ac:	ldr	w1, [x20, #24]
 1b0:	ldr	w0, [x19, #24]
 1b4:	str	w1, [x19, #24]
 1b8:	str	w0, [x20, #24]
 1bc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 1c0:	ldr	d0, [x0]
 1c4:	add	x0, x19, #0xa0
 1c8:	str	x0, [x19, #144]
 1cc:	str	d0, [x19, #152]
 1d0:	ldr	w27, [x20, #152]
 1d4:	cbnz	w27, 3d4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x3d4>
 1d8:	add	x20, x20, #0x120
 1dc:	add	x19, x19, #0x120
 1e0:	cmp	x24, x20
 1e4:	b.ne	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xb8>  // b.any
 1e8:	ldr	w24, [x22, #8]
 1ec:	mov	w0, #0x120                 	// #288
 1f0:	ldr	x19, [x22]
 1f4:	umaddl	x24, w24, w0, x19
 1f8:	cmp	x19, x24
 1fc:	b.eq	5a0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x5a0>  // b.none
 200:	ldur	x0, [x24, #-144]
 204:	sub	x24, x24, #0x120
 208:	add	x1, x24, #0xa0
 20c:	cmp	x0, x1
 210:	b.eq	218 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x218>  // b.none
 214:	bl	0 <free>
 218:	ldrb	w0, [x24, #8]
 21c:	tbnz	w0, #0, 238 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x238>
 220:	ldr	x0, [x24, #16]
 224:	ldr	w1, [x24, #24]
 228:	lsl	x1, x1, #3
 22c:	bl	0 <_ZdlPvm>
 230:	ldrb	w0, [x24, #8]
 234:	tbnz	w0, #0, 540 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x540>
 238:	cmp	x24, x19
 23c:	b.ne	200 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x200>  // b.any
 240:	ldp	x25, x26, [sp, #64]
 244:	ldp	x27, x28, [sp, #80]
 248:	ldr	x24, [x22]
 24c:	add	x0, x22, #0x10
 250:	cmp	x24, x0
 254:	b.eq	260 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x260>  // b.none
 258:	mov	x0, x24
 25c:	bl	0 <free>
 260:	ldp	x19, x20, [sp, #16]
 264:	str	x23, [x22]
 268:	str	w21, [x22, #12]
 26c:	ldp	x21, x22, [sp, #32]
 270:	ldp	x23, x24, [sp, #48]
 274:	ldp	x29, x30, [sp], #128
 278:	ret
 27c:	ldrb	w1, [x20, #8]
 280:	and	w2, w1, #0x1
 284:	tbnz	w1, #0, 42c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x42c>
 288:	mov	x1, x19
 28c:	mov	x0, x20
 290:	ldrb	w2, [x0, #8]
 294:	ldr	w3, [x0, #24]
 298:	orr	w2, w2, #0x1
 29c:	strb	w2, [x0, #8]
 2a0:	ldr	x4, [x0, #16]
 2a4:	ldrb	w2, [x1, #8]
 2a8:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 2ac:	ldr	x2, [x1, #16]
 2b0:	str	x2, [x0, #16]
 2b4:	ldrb	w2, [x1, #8]
 2b8:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 2bc:	ldr	x2, [x1, #24]
 2c0:	str	x2, [x0, #24]
 2c4:	ldrb	w2, [x1, #8]
 2c8:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 2cc:	ldr	x2, [x1, #32]
 2d0:	str	x2, [x0, #32]
 2d4:	ldrb	w2, [x1, #8]
 2d8:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 2dc:	ldr	x2, [x1, #40]
 2e0:	str	x2, [x0, #40]
 2e4:	ldrb	w2, [x1, #8]
 2e8:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 2ec:	ldr	x2, [x1, #48]
 2f0:	str	x2, [x0, #48]
 2f4:	ldrb	w2, [x1, #8]
 2f8:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 2fc:	ldr	x2, [x1, #56]
 300:	str	x2, [x0, #56]
 304:	ldrb	w2, [x1, #8]
 308:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 30c:	ldr	x2, [x1, #64]
 310:	str	x2, [x0, #64]
 314:	ldrb	w2, [x1, #8]
 318:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 31c:	ldr	x2, [x1, #72]
 320:	str	x2, [x0, #72]
 324:	ldrb	w2, [x1, #8]
 328:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 32c:	ldr	x2, [x1, #80]
 330:	str	x2, [x0, #80]
 334:	ldrb	w2, [x1, #8]
 338:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 33c:	ldr	x2, [x1, #88]
 340:	str	x2, [x0, #88]
 344:	ldrb	w2, [x1, #8]
 348:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 34c:	ldr	x2, [x1, #96]
 350:	str	x2, [x0, #96]
 354:	ldrb	w2, [x1, #8]
 358:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 35c:	ldr	x2, [x1, #104]
 360:	str	x2, [x0, #104]
 364:	ldrb	w2, [x1, #8]
 368:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 36c:	ldr	x2, [x1, #112]
 370:	str	x2, [x0, #112]
 374:	ldrb	w2, [x1, #8]
 378:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 37c:	ldr	x2, [x1, #120]
 380:	str	x2, [x0, #120]
 384:	ldrb	w2, [x1, #8]
 388:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 38c:	ldr	x2, [x1, #128]
 390:	str	x2, [x0, #128]
 394:	ldrb	w2, [x1, #8]
 398:	tbz	w2, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 39c:	ldr	x2, [x1, #136]
 3a0:	str	x2, [x0, #136]
 3a4:	str	x4, [x1, #16]
 3a8:	ldrb	w0, [x1, #8]
 3ac:	str	w3, [x1, #24]
 3b0:	and	w0, w0, #0xfffffffe
 3b4:	strb	w0, [x1, #8]
 3b8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 3bc:	ldr	d0, [x0]
 3c0:	add	x0, x19, #0xa0
 3c4:	str	x0, [x19, #144]
 3c8:	str	d0, [x19, #152]
 3cc:	ldr	w27, [x20, #152]
 3d0:	cbz	w27, 1d8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1d8>
 3d4:	add	x3, x19, #0x90
 3d8:	add	x1, x20, #0x90
 3dc:	cmp	x3, x1
 3e0:	b.eq	1d8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1d8>  // b.none
 3e4:	ldr	x2, [x20, #144]
 3e8:	add	x1, x20, #0xa0
 3ec:	cmp	x2, x1
 3f0:	b.eq	470 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x470>  // b.none
 3f4:	str	w27, [x19, #152]
 3f8:	str	x2, [x19, #144]
 3fc:	ldr	w0, [x20, #156]
 400:	str	w0, [x19, #156]
 404:	str	x1, [x20, #144]
 408:	str	xzr, [x20, #152]
 40c:	b	1d8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1d8>
 410:	add	x0, x19, #0x10
 414:	mov	x1, #0x80                  	// #128
 418:	add	x4, x0, x1
 41c:	cmp	x0, x4
 420:	b.ne	e8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xe8>  // b.any
 424:	mov	w1, #0x0                   	// #0
 428:	b	150 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x150>
 42c:	mov	x0, #0x10                  	// #16
 430:	cbz	w2, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 434:	ldr	x2, [x20, x0]
 438:	cmp	x0, #0x88
 43c:	ldr	x1, [x19, x0]
 440:	str	x2, [x19, x0]
 444:	str	x1, [x20, x0]
 448:	b.eq	1bc <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1bc>  // b.none
 44c:	ldrb	w1, [x19, #8]
 450:	add	x0, x0, #0x8
 454:	tbz	w1, #0, 520 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x520>
 458:	ldrb	w1, [x20, #8]
 45c:	and	w2, w1, #0x1
 460:	b	430 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x430>
 464:	mov	x1, x20
 468:	mov	x0, x19
 46c:	b	290 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x290>
 470:	cmp	w27, #0x10
 474:	mov	w28, w27
 478:	ubfiz	x2, x27, #3, #32
 47c:	b.hi	4ec <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x4ec>  // b.pmore
 480:	bl	0 <memcpy>
 484:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 488:	ldr	q1, [x0]
 48c:	ldr	w0, [x19, #156]
 490:	cmp	x28, x0
 494:	b.hi	580 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x580>  // b.pmore
 498:	str	w27, [x19, #152]
 49c:	str	wzr, [x20, #152]
 4a0:	b	1d8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1d8>
 4a4:	mov	w0, #0xfffffee0            	// #-288
 4a8:	mov	x21, x20
 4ac:	movk	x0, #0x11f, lsl #32
 4b0:	str	x20, [sp, #112]
 4b4:	bl	0 <malloc>
 4b8:	mov	x23, x0
 4bc:	cbnz	x0, 80 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x80>
 4c0:	mov	x23, #0x0                   	// #0
 4c4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 4c8:	mov	w1, #0x1                   	// #1
 4cc:	add	x0, x0, #0x0
 4d0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 4d4:	b	80 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x80>
 4d8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 4dc:	mov	w1, #0x1                   	// #1
 4e0:	add	x0, x0, #0x0
 4e4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 4e8:	b	2c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x2c>
 4ec:	mov	x1, x0
 4f0:	mov	x2, x28
 4f4:	mov	x0, x3
 4f8:	mov	x3, #0x8                   	// #8
 4fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 500:	ldr	w3, [x20, #152]
 504:	adrp	x4, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 508:	ldr	x0, [x19, #144]
 50c:	ldr	q1, [x4]
 510:	lsl	x2, x3, #3
 514:	ldr	x1, [x20, #144]
 518:	cbz	x3, 48c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x48c>
 51c:	b	480 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x480>
 520:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 524:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 528:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 52c:	add	x3, x3, #0x0
 530:	add	x1, x1, #0x0
 534:	add	x0, x0, #0x0
 538:	mov	w2, #0x44e                 	// #1102
 53c:	bl	0 <__assert_fail>
 540:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 544:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 548:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 54c:	add	x3, x3, #0x0
 550:	add	x1, x1, #0x0
 554:	add	x0, x0, #0x0
 558:	mov	w2, #0x45b                 	// #1115
 55c:	bl	0 <__assert_fail>
 560:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 564:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 568:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 56c:	add	x3, x3, #0x0
 570:	add	x1, x1, #0x0
 574:	add	x0, x0, #0x0
 578:	mov	w2, #0x15b                 	// #347
 57c:	bl	0 <__assert_fail>
 580:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 584:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 588:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 58c:	add	x3, x3, #0x0
 590:	add	x1, x1, #0x0
 594:	add	x0, x0, #0x0
 598:	mov	w2, #0x43                  	// #67
 59c:	bl	0 <__assert_fail>
 5a0:	ldp	x25, x26, [sp, #64]
 5a4:	ldp	x27, x28, [sp, #80]
 5a8:	b	24c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x24c>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS4_EEEENS_14StringMapEntryIS7_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	sub	x20, x2, x1
  14:	stp	x23, x24, [sp, #48]
  18:	asr	x3, x20, #3
  1c:	ldr	x23, [x0]
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x21, x2
  28:	ldr	x0, [x0, #16]
  2c:	mov	x22, x1
  30:	sub	x0, x0, x23
  34:	asr	x0, x0, #3
  38:	cmp	x0, x20, asr #3
  3c:	b.cs	a8 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xa8>  // b.hs, b.nlast
  40:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
  44:	cmp	x3, x0
  48:	b.hi	144 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x144>  // b.pmore
  4c:	mov	x24, #0x0                   	// #0
  50:	cbz	x3, 64 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x64>
  54:	mov	x0, x20
  58:	bl	0 <_Znwm>
  5c:	ldr	x23, [x19]
  60:	mov	x24, x0
  64:	cmp	x22, x21
  68:	b.eq	7c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x7c>  // b.none
  6c:	mov	x1, x22
  70:	mov	x2, x20
  74:	mov	x0, x24
  78:	bl	0 <memcpy>
  7c:	cbz	x23, 88 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x88>
  80:	mov	x0, x23
  84:	bl	0 <_ZdlPv>
  88:	add	x20, x24, x20
  8c:	stp	x24, x20, [x19]
  90:	str	x20, [x19, #16]
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x21, x22, [sp, #32]
  9c:	ldp	x23, x24, [sp, #48]
  a0:	ldp	x29, x30, [sp], #64
  a4:	ret
  a8:	ldr	x4, [x19, #8]
  ac:	sub	x2, x4, x23
  b0:	cmp	x3, x2, asr #3
  b4:	b.hi	f4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>  // b.pmore
  b8:	cmp	x1, x21
  bc:	b.eq	d0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xd0>  // b.none
  c0:	mov	x2, x20
  c4:	mov	x0, x23
  c8:	bl	0 <memmove>
  cc:	ldr	x4, [x19, #8]
  d0:	add	x20, x23, x20
  d4:	cmp	x20, x4
  d8:	b.eq	94 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x94>  // b.none
  dc:	str	x20, [x19, #8]
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x29, x30, [sp], #64
  f0:	ret
  f4:	add	x20, x1, x2
  f8:	cmp	x1, x20
  fc:	b.eq	10c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x10c>  // b.none
 100:	mov	x0, x23
 104:	bl	0 <memmove>
 108:	ldr	x4, [x19, #8]
 10c:	subs	x21, x21, x20
 110:	b.eq	128 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x128>  // b.none
 114:	mov	x0, x4
 118:	mov	x1, x20
 11c:	mov	x2, x21
 120:	bl	0 <memmove>
 124:	mov	x4, x0
 128:	add	x21, x4, x21
 12c:	str	x21, [x19, #8]
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldp	x23, x24, [sp, #48]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	cmp	w1, #0x10
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	str	x23, [sp, #48]
  1c:	mov	w23, w1
  20:	ldrb	w0, [x0, #8]
  24:	and	w2, w0, #0x1
  28:	b.ls	180 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x180>  // b.plast
  2c:	sub	w0, w1, #0x1
  30:	orr	x0, x0, x0, lsr #1
  34:	orr	x0, x0, x0, lsr #2
  38:	orr	x0, x0, x0, lsr #4
  3c:	orr	x0, x0, x0, lsr #8
  40:	orr	x0, x0, x0, lsr #16
  44:	add	x0, x0, #0x1
  48:	cmp	w0, #0x40
  4c:	mov	w23, w0
  50:	b.hi	644 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x644>  // b.pmore
  54:	cbnz	w2, 660 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x660>
  58:	ldr	w21, [x19, #24]
  5c:	mov	x0, #0x200                 	// #512
  60:	ldr	x20, [x19, #16]
  64:	mov	w23, #0x40                  	// #64
  68:	bl	0 <_Znwm>
  6c:	str	x0, [x19, #16]
  70:	ldr	x0, [x19, #8]
  74:	str	w23, [x19, #24]
  78:	ubfiz	x1, x21, #3, #32
  7c:	and	x0, x0, #0x1
  80:	str	x0, [x19, #8]
  84:	add	x7, x20, x1
  88:	cbz	x0, 1ac <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1ac>
  8c:	add	x4, x19, #0x10
  90:	add	x5, x19, #0x90
  94:	sub	x2, x5, x4
  98:	mov	x0, x4
  9c:	sub	x2, x2, #0x8
  a0:	lsr	x2, x2, #3
  a4:	add	x2, x2, #0x1
  a8:	adrp	x6, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
  ac:	lsr	x3, x2, #1
  b0:	ldr	q0, [x6]
  b4:	add	x3, x4, x3, lsl #4
  b8:	str	q0, [x0], #16
  bc:	cmp	x0, x3
  c0:	b.ne	b8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xb8>  // b.any
  c4:	and	x0, x2, #0xfffffffffffffffe
  c8:	cmp	x0, x2
  cc:	add	x4, x4, x0, lsl #3
  d0:	b.eq	fc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xfc>  // b.none
  d4:	mov	x0, x4
  d8:	mov	x2, #0xfffffffffffffff8    	// #-8
  dc:	str	x2, [x0], #8
  e0:	cmp	x5, x0
  e4:	b.eq	fc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xfc>  // b.none
  e8:	str	x2, [x4, #8]
  ec:	add	x0, x4, #0x10
  f0:	cmp	x5, x0
  f4:	b.eq	fc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xfc>  // b.none
  f8:	str	x2, [x4, #16]
  fc:	cmp	x7, x20
 100:	mov	x2, x20
 104:	add	x9, x19, #0x10
 108:	b.ne	11c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x11c>  // b.any
 10c:	b	5b8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x5b8>
 110:	add	x2, x2, #0x8
 114:	cmp	x7, x2
 118:	b.eq	5b8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x5b8>  // b.none
 11c:	ldr	x0, [x2]
 120:	cmn	x0, #0x8
 124:	ccmn	x0, #0x10, #0x4, ne  // ne = any
 128:	b.eq	110 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x110>  // b.none
 12c:	ldrb	w3, [x19, #8]
 130:	tbz	w3, #0, 590 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x590>
 134:	mov	x5, x9
 138:	mov	w4, #0xf                   	// #15
 13c:	lsr	w3, w0, #9
 140:	eor	w3, w3, w0, lsr #4
 144:	and	w8, w3, w4
 148:	mov	x3, x8
 14c:	ubfiz	x6, x8, #3, #28
 150:	ldr	x8, [x5, x8, lsl #3]
 154:	add	x6, x5, x6
 158:	cmp	x8, x0
 15c:	b.ne	5d0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x5d0>  // b.any
 160:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 164:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 168:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 16c:	add	x3, x3, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x0, x0, #0x0
 178:	mov	w2, #0x17a                 	// #378
 17c:	bl	0 <__assert_fail>
 180:	cbnz	w2, 1ec <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1ec>
 184:	orr	w0, w0, #0x1
 188:	strb	w0, [x19, #8]
 18c:	ldr	w21, [x19, #24]
 190:	ldr	x0, [x19, #8]
 194:	ldr	x20, [x19, #16]
 198:	and	x0, x0, #0x1
 19c:	str	x0, [x19, #8]
 1a0:	ubfiz	x1, x21, #3, #32
 1a4:	add	x7, x20, x1
 1a8:	cbnz	x0, 8c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x8c>
 1ac:	ldr	w0, [x19, #24]
 1b0:	sub	w2, w0, #0x1
 1b4:	tst	w2, w0
 1b8:	b.ne	7e0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7e0>  // b.any
 1bc:	ldr	x4, [x19, #16]
 1c0:	ubfiz	x0, x0, #3, #32
 1c4:	add	x5, x4, x0
 1c8:	cmp	x4, x5
 1cc:	b.eq	fc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xfc>  // b.none
 1d0:	sub	x2, x0, #0x8
 1d4:	mov	x0, x4
 1d8:	cmp	x2, #0x10
 1dc:	lsr	x2, x2, #3
 1e0:	add	x2, x2, #0x1
 1e4:	b.hi	a8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xa8>  // b.pmore
 1e8:	b	d4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xd4>
 1ec:	add	x22, x19, #0x10
 1f0:	add	x1, x19, #0x90
 1f4:	ldr	x0, [x22]
 1f8:	add	x20, sp, #0x40
 1fc:	mov	x21, x20
 200:	cmn	x0, #0x8
 204:	ccmn	x0, #0x10, #0x4, ne  // ne = any
 208:	b.eq	214 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x214>  // b.none
 20c:	add	x21, x20, #0x8
 210:	str	x0, [sp, #64]
 214:	add	x0, x22, #0x8
 218:	cmp	x1, x0
 21c:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 220:	ldr	x0, [x22, #8]
 224:	cmn	x0, #0x8
 228:	ccmn	x0, #0x10, #0x4, ne  // ne = any
 22c:	b.eq	240 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x240>  // b.none
 230:	sub	x2, x21, x20
 234:	cmp	x2, #0x7f
 238:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 23c:	str	x0, [x21], #8
 240:	add	x0, x22, #0x10
 244:	cmp	x1, x0
 248:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 24c:	ldr	x0, [x22, #16]
 250:	cmn	x0, #0x8
 254:	ccmn	x0, #0x10, #0x4, ne  // ne = any
 258:	b.eq	26c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x26c>  // b.none
 25c:	sub	x2, x21, x20
 260:	cmp	x2, #0x7f
 264:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 268:	str	x0, [x21], #8
 26c:	add	x0, x22, #0x18
 270:	cmp	x1, x0
 274:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 278:	ldr	x0, [x22, #24]
 27c:	cmn	x0, #0x8
 280:	ccmn	x0, #0x10, #0x4, ne  // ne = any
 284:	b.ne	608 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x608>  // b.any
 288:	add	x0, x22, #0x20
 28c:	cmp	x1, x0
 290:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 294:	ldr	x0, [x22, #32]
 298:	cmn	x0, #0x10
 29c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 2a0:	b.ne	61c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x61c>  // b.any
 2a4:	add	x0, x22, #0x28
 2a8:	cmp	x1, x0
 2ac:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 2b0:	ldr	x0, [x22, #40]
 2b4:	cmn	x0, #0x10
 2b8:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 2bc:	b.ne	630 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x630>  // b.any
 2c0:	add	x0, x22, #0x30
 2c4:	cmp	x1, x0
 2c8:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 2cc:	ldr	x0, [x22, #48]
 2d0:	cmn	x0, #0x10
 2d4:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 2d8:	b.ne	670 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x670>  // b.any
 2dc:	add	x0, x22, #0x38
 2e0:	cmp	x1, x0
 2e4:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 2e8:	ldr	x0, [x22, #56]
 2ec:	cmn	x0, #0x10
 2f0:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 2f4:	b.ne	684 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x684>  // b.any
 2f8:	add	x0, x22, #0x40
 2fc:	cmp	x1, x0
 300:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 304:	ldr	x0, [x22, #64]
 308:	cmn	x0, #0x10
 30c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 310:	b.ne	698 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x698>  // b.any
 314:	add	x0, x22, #0x48
 318:	cmp	x1, x0
 31c:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 320:	ldr	x0, [x22, #72]
 324:	cmn	x0, #0x10
 328:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 32c:	b.ne	6ac <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x6ac>  // b.any
 330:	add	x0, x22, #0x50
 334:	cmp	x1, x0
 338:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 33c:	ldr	x0, [x22, #80]
 340:	cmn	x0, #0x10
 344:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 348:	b.ne	6c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x6c0>  // b.any
 34c:	add	x0, x22, #0x58
 350:	cmp	x1, x0
 354:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 358:	ldr	x0, [x22, #88]
 35c:	cmn	x0, #0x10
 360:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 364:	b.ne	6d4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x6d4>  // b.any
 368:	add	x0, x22, #0x60
 36c:	cmp	x1, x0
 370:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 374:	ldr	x0, [x22, #96]
 378:	cmn	x0, #0x10
 37c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 380:	b.ne	6e8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x6e8>  // b.any
 384:	add	x0, x22, #0x68
 388:	cmp	x1, x0
 38c:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 390:	ldr	x0, [x22, #104]
 394:	cmn	x0, #0x10
 398:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 39c:	b.ne	6fc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x6fc>  // b.any
 3a0:	add	x0, x22, #0x70
 3a4:	cmp	x1, x0
 3a8:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 3ac:	ldr	x0, [x22, #112]
 3b0:	cmn	x0, #0x10
 3b4:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 3b8:	b.ne	710 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x710>  // b.any
 3bc:	add	x0, x22, #0x78
 3c0:	cmp	x1, x0
 3c4:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 3c8:	ldr	x0, [x22, #120]
 3cc:	cmn	x0, #0x10
 3d0:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 3d4:	b.eq	3e8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x3e8>  // b.none
 3d8:	sub	x2, x21, x20
 3dc:	cmp	x2, #0x7f
 3e0:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 3e4:	str	x0, [x21], #8
 3e8:	add	x0, x22, #0x80
 3ec:	cmp	x1, x0
 3f0:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 3f4:	ldr	x0, [x22, #128]
 3f8:	cmn	x0, #0x8
 3fc:	ccmn	x0, #0x10, #0x4, ne  // ne = any
 400:	b.eq	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.none
 404:	sub	x1, x21, x20
 408:	cmp	x1, #0x7f
 40c:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 410:	str	x0, [x21], #8
 414:	nop
 418:	cmp	w23, #0x10
 41c:	b.ls	43c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x43c>  // b.plast
 420:	ldrb	w1, [x19, #8]
 424:	ubfiz	x0, x23, #3, #32
 428:	and	w1, w1, #0xfffffffe
 42c:	strb	w1, [x19, #8]
 430:	bl	0 <_Znwm>
 434:	str	x0, [x19, #16]
 438:	str	w23, [x19, #24]
 43c:	ldr	x0, [x19, #8]
 440:	and	x0, x0, #0x1
 444:	str	x0, [x19, #8]
 448:	cbnz	x0, 724 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x724>
 44c:	ldr	w0, [x19, #24]
 450:	sub	w1, w0, #0x1
 454:	tst	w1, w0
 458:	b.ne	7e0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7e0>  // b.any
 45c:	ldr	x3, [x19, #16]
 460:	ubfiz	x0, x0, #3, #32
 464:	add	x4, x3, x0
 468:	cmp	x3, x4
 46c:	b.eq	4dc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x4dc>  // b.none
 470:	sub	x1, x0, #0x8
 474:	mov	x0, x3
 478:	cmp	x1, #0x10
 47c:	lsr	x1, x1, #3
 480:	add	x1, x1, #0x1
 484:	b.ls	4b4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x4b4>  // b.plast
 488:	adrp	x5, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 48c:	lsr	x2, x1, #1
 490:	ldr	q0, [x5]
 494:	add	x2, x3, x2, lsl #4
 498:	str	q0, [x0], #16
 49c:	cmp	x2, x0
 4a0:	b.ne	498 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x498>  // b.any
 4a4:	and	x0, x1, #0xfffffffffffffffe
 4a8:	cmp	x1, x0
 4ac:	add	x3, x3, x0, lsl #3
 4b0:	b.eq	4dc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x4dc>  // b.none
 4b4:	mov	x0, x3
 4b8:	mov	x1, #0xfffffffffffffff8    	// #-8
 4bc:	str	x1, [x0], #8
 4c0:	cmp	x4, x0
 4c4:	b.eq	4dc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x4dc>  // b.none
 4c8:	str	x1, [x3, #8]
 4cc:	add	x0, x3, #0x10
 4d0:	cmp	x4, x0
 4d4:	b.eq	4dc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x4dc>  // b.none
 4d8:	str	x1, [x3, #16]
 4dc:	mov	x1, x20
 4e0:	cmp	x21, x20
 4e4:	b.ne	4f8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x4f8>  // b.any
 4e8:	b	57c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x57c>
 4ec:	add	x1, x1, #0x8
 4f0:	cmp	x1, x21
 4f4:	b.eq	57c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x57c>  // b.none
 4f8:	ldr	x0, [x1]
 4fc:	cmn	x0, #0x8
 500:	ccmn	x0, #0x10, #0x4, ne  // ne = any
 504:	b.eq	4ec <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x4ec>  // b.none
 508:	ldrb	w2, [x19, #8]
 50c:	tbz	w2, #0, 5a4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x5a4>
 510:	mov	x4, x22
 514:	mov	w3, #0xf                   	// #15
 518:	lsr	w2, w0, #9
 51c:	eor	w2, w2, w0, lsr #4
 520:	and	w6, w2, w3
 524:	mov	x2, x6
 528:	ubfiz	x5, x6, #3, #28
 52c:	ldr	x6, [x4, x6, lsl #3]
 530:	add	x5, x4, x5
 534:	cmp	x0, x6
 538:	b.eq	160 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x160>  // b.none
 53c:	mov	w8, #0x1                   	// #1
 540:	mov	x7, #0x0                   	// #0
 544:	cmn	x6, #0x8
 548:	b.ne	730 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x730>  // b.any
 54c:	cmp	x7, #0x0
 550:	csel	x7, x7, x5, ne  // ne = any
 554:	str	x0, [x7]
 558:	ldr	w0, [x19, #8]
 55c:	lsr	w2, w0, #1
 560:	adds	w2, w2, #0x1
 564:	b.mi	7a0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7a0>  // b.first
 568:	bfi	w0, w2, #1, #31
 56c:	str	w0, [x19, #8]
 570:	add	x1, x1, #0x8
 574:	cmp	x1, x21
 578:	b.ne	4f8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x4f8>  // b.any
 57c:	ldp	x19, x20, [sp, #16]
 580:	ldp	x21, x22, [sp, #32]
 584:	ldr	x23, [sp, #48]
 588:	ldp	x29, x30, [sp], #192
 58c:	ret
 590:	ldr	w3, [x19, #24]
 594:	ldr	x5, [x19, #16]
 598:	cbz	w3, 800 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x800>
 59c:	sub	w4, w3, #0x1
 5a0:	b	13c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x13c>
 5a4:	ldr	w2, [x19, #24]
 5a8:	ldr	x4, [x19, #16]
 5ac:	cbz	w2, 800 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x800>
 5b0:	sub	w3, w2, #0x1
 5b4:	b	518 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x518>
 5b8:	mov	x0, x20
 5bc:	ldp	x19, x20, [sp, #16]
 5c0:	ldp	x21, x22, [sp, #32]
 5c4:	ldr	x23, [sp, #48]
 5c8:	ldp	x29, x30, [sp], #192
 5cc:	b	0 <_ZdlPvm>
 5d0:	mov	w11, #0x1                   	// #1
 5d4:	mov	x10, #0x0                   	// #0
 5d8:	cmn	x8, #0x8
 5dc:	b.ne	768 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x768>  // b.any
 5e0:	cmp	x10, #0x0
 5e4:	csel	x10, x10, x6, ne  // ne = any
 5e8:	str	x0, [x10]
 5ec:	ldr	w0, [x19, #8]
 5f0:	lsr	w3, w0, #1
 5f4:	adds	w3, w3, #0x1
 5f8:	b.mi	7a0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7a0>  // b.first
 5fc:	bfi	w0, w3, #1, #31
 600:	str	w0, [x19, #8]
 604:	b	110 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x110>
 608:	sub	x2, x21, x20
 60c:	cmp	x2, #0x7f
 610:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 614:	str	x0, [x21], #8
 618:	b	288 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x288>
 61c:	sub	x2, x21, x20
 620:	cmp	x2, #0x7f
 624:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 628:	str	x0, [x21], #8
 62c:	b	2a4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2a4>
 630:	sub	x2, x21, x20
 634:	cmp	x2, #0x7f
 638:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 63c:	str	x0, [x21], #8
 640:	b	2c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2c0>
 644:	add	x22, x19, #0x10
 648:	add	x1, x19, #0x90
 64c:	cbnz	w2, 1f4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1f4>
 650:	ldr	w21, [x19, #24]
 654:	ubfiz	x0, x0, #3, #32
 658:	ldr	x20, [x19, #16]
 65c:	b	68 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x68>
 660:	add	x22, x19, #0x10
 664:	add	x1, x19, #0x90
 668:	mov	w23, #0x40                  	// #64
 66c:	b	1f4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1f4>
 670:	sub	x2, x21, x20
 674:	cmp	x2, #0x7f
 678:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 67c:	str	x0, [x21], #8
 680:	b	2dc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2dc>
 684:	sub	x2, x21, x20
 688:	cmp	x2, #0x7f
 68c:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 690:	str	x0, [x21], #8
 694:	b	2f8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2f8>
 698:	sub	x2, x21, x20
 69c:	cmp	x2, #0x7f
 6a0:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 6a4:	str	x0, [x21], #8
 6a8:	b	314 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x314>
 6ac:	sub	x2, x21, x20
 6b0:	cmp	x2, #0x7f
 6b4:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 6b8:	str	x0, [x21], #8
 6bc:	b	330 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x330>
 6c0:	sub	x2, x21, x20
 6c4:	cmp	x2, #0x7f
 6c8:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 6cc:	str	x0, [x21], #8
 6d0:	b	34c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x34c>
 6d4:	sub	x2, x21, x20
 6d8:	cmp	x2, #0x7f
 6dc:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 6e0:	str	x0, [x21], #8
 6e4:	b	368 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x368>
 6e8:	sub	x2, x21, x20
 6ec:	cmp	x2, #0x7f
 6f0:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 6f4:	str	x0, [x21], #8
 6f8:	b	384 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x384>
 6fc:	sub	x2, x21, x20
 700:	cmp	x2, #0x7f
 704:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 708:	str	x0, [x21], #8
 70c:	b	3a0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x3a0>
 710:	sub	x2, x21, x20
 714:	cmp	x2, #0x7f
 718:	b.hi	7c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x7c0>  // b.pmore
 71c:	str	x0, [x21], #8
 720:	b	3bc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x3bc>
 724:	mov	x3, x22
 728:	mov	x0, #0x80                  	// #128
 72c:	b	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>
 730:	add	w2, w8, w2
 734:	cmp	x7, #0x0
 738:	and	w9, w2, w3
 73c:	ccmn	x6, #0x10, #0x0, eq  // eq = none
 740:	csel	x5, x5, x7, eq  // eq = none
 744:	add	w8, w8, #0x1
 748:	and	w2, w2, w3
 74c:	add	x10, x4, x9, lsl #3
 750:	ldr	x6, [x4, x9, lsl #3]
 754:	cmp	x0, x6
 758:	b.eq	160 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x160>  // b.none
 75c:	mov	x7, x5
 760:	mov	x5, x10
 764:	b	544 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x544>
 768:	add	w3, w11, w3
 76c:	cmp	x10, #0x0
 770:	and	w12, w4, w3
 774:	ccmn	x8, #0x10, #0x0, eq  // eq = none
 778:	csel	x6, x6, x10, eq  // eq = none
 77c:	add	w11, w11, #0x1
 780:	and	w3, w4, w3
 784:	add	x13, x5, x12, lsl #3
 788:	ldr	x8, [x5, x12, lsl #3]
 78c:	cmp	x0, x8
 790:	b.eq	160 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x160>  // b.none
 794:	mov	x10, x6
 798:	mov	x6, x13
 79c:	b	5d8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x5d8>
 7a0:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 7a4:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 7a8:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 7ac:	add	x3, x3, #0x0
 7b0:	add	x1, x1, #0x0
 7b4:	add	x0, x0, #0x0
 7b8:	mov	w2, #0x441                 	// #1089
 7bc:	bl	0 <__assert_fail>
 7c0:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 7c4:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 7c8:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 7cc:	add	x3, x3, #0x0
 7d0:	add	x1, x1, #0x0
 7d4:	add	x0, x0, #0x0
 7d8:	mov	w2, #0x401                 	// #1025
 7dc:	bl	0 <__assert_fail>
 7e0:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 7e4:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 7e8:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 7ec:	add	x3, x3, #0x0
 7f0:	add	x1, x1, #0x0
 7f4:	add	x0, x0, #0x0
 7f8:	mov	w2, #0x15b                 	// #347
 7fc:	bl	0 <__assert_fail>
 800:	mov	x1, #0x0                   	// #0
 804:	str	x0, [x1]
 808:	brk	#0x3e8

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #3
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #3
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xd4>
  8c:	lsl	x2, x22, #3
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #3
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x8                   	// #8
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

StringMatcher.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>:
       0:	stp	x29, x30, [sp, #-272]!
       4:	mov	x29, sp
       8:	stp	x25, x26, [sp, #64]
       c:	mov	x25, x1
      10:	stp	x19, x20, [sp, #16]
      14:	mov	x19, x0
      18:	ldr	x0, [x1]
      1c:	and	w1, w4, #0xff
      20:	str	w1, [sp, #104]
      24:	ldr	x1, [x25, #8]
      28:	stp	x21, x22, [sp, #32]
      2c:	stp	x23, x24, [sp, #48]
      30:	cmp	x1, x0
      34:	stp	x27, x28, [sp, #80]
      38:	str	w2, [sp, #112]
      3c:	str	w3, [sp, #124]
      40:	b.eq	fb4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xfb4>  // b.none
      44:	ldr	w0, [sp, #124]
      48:	add	x23, sp, #0xa0
      4c:	add	x3, x23, #0x10
      50:	mov	w2, #0x20                  	// #32
      54:	add	w1, w0, #0x2
      58:	mov	x0, x23
      5c:	str	x3, [sp, #160]
      60:	lsl	w1, w1, #1
      64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc>
      68:	ldr	x2, [x25]
      6c:	ldr	w1, [sp, #112]
      70:	ldr	x4, [x2]
      74:	mov	w27, w1
      78:	ldr	x0, [x4, #8]
      7c:	cmp	x0, w1, uxtw
      80:	ldr	x0, [x25, #8]
      84:	b.eq	8ec <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x8ec>  // b.none
      88:	add	x20, sp, #0xe0
      8c:	sub	x0, x0, x2
      90:	add	x3, x20, #0x8
      94:	str	wzr, [sp, #232]
      98:	stp	xzr, x3, [sp, #240]
      9c:	asr	x0, x0, #3
      a0:	stp	x3, xzr, [sp, #256]
      a4:	cbz	w0, 1dc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1dc>
      a8:	sub	w26, w0, #0x1
      ac:	mov	x24, x3
      b0:	add	x26, x26, #0x1
      b4:	mov	x22, #0x0                   	// #0
      b8:	mov	x0, #0x0                   	// #0
      bc:	lsl	x26, x26, #3
      c0:	ldr	x21, [x4]
      c4:	cbz	x0, 13c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x13c>
      c8:	ldrb	w1, [x21, x27]
      cc:	mov	x28, x24
      d0:	ldrb	w6, [x0, #32]
      d4:	cmp	w6, w1
      d8:	b.cc	544 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x544>  // b.lo, b.ul, b.last
      dc:	mov	x28, x0
      e0:	ldr	x0, [x0, #16]
      e4:	cbnz	x0, d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd0>
      e8:	cmp	x28, x24
      ec:	b.eq	140 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x140>  // b.none
      f0:	ldrb	w0, [x28, #32]
      f4:	cmp	w0, w1
      f8:	b.hi	140 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x140>  // b.pmore
      fc:	add	x21, x28, #0x28
     100:	add	x2, x2, x22
     104:	ldp	x1, x0, [x21, #8]
     108:	cmp	x1, x0
     10c:	b.eq	1bc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1bc>  // b.none
     110:	ldr	x0, [x2]
     114:	str	x0, [x1], #8
     118:	add	x22, x22, #0x8
     11c:	str	x1, [x21, #8]
     120:	cmp	x26, x22
     124:	b.eq	1d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1d0>  // b.none
     128:	ldr	x2, [x25]
     12c:	ldr	x0, [sp, #240]
     130:	ldr	x4, [x2, x22]
     134:	ldr	x21, [x4]
     138:	cbnz	x0, c8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc8>
     13c:	mov	x28, x24
     140:	mov	x0, #0x40                  	// #64
     144:	bl	0 <_Znwm>
     148:	mov	x1, x28
     14c:	mov	x28, x0
     150:	ldrb	w6, [x21, x27]
     154:	mov	x21, x0
     158:	add	x2, x0, #0x20
     15c:	mov	x0, x20
     160:	strb	w6, [x28, #32]
     164:	stp	xzr, xzr, [x21, #40]!
     168:	str	xzr, [x21, #16]
     16c:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     170:	mov	x6, x0
     174:	mov	x2, x1
     178:	cbz	x1, 550 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x550>
     17c:	cmp	x1, x24
     180:	cset	w0, eq  // eq = none
     184:	cmp	x6, #0x0
     188:	csinc	w0, w0, wzr, eq  // eq = none
     18c:	cbz	w0, 8d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x8d8>
     190:	mov	x1, x28
     194:	mov	x3, x24
     198:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
     19c:	ldr	x0, [sp, #264]
     1a0:	add	x0, x0, #0x1
     1a4:	str	x0, [sp, #264]
     1a8:	ldp	x1, x0, [x21, #8]
     1ac:	ldr	x2, [x25]
     1b0:	add	x2, x2, x22
     1b4:	cmp	x1, x0
     1b8:	b.ne	110 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x110>  // b.any
     1bc:	mov	x0, x21
     1c0:	add	x22, x22, #0x8
     1c4:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     1c8:	cmp	x26, x22
     1cc:	b.ne	128 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x128>  // b.any
     1d0:	ldr	x0, [sp, #264]
     1d4:	cmp	x0, #0x1
     1d8:	b.eq	574 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x574>  // b.none
     1dc:	ldp	x1, x2, [sp, #160]
     1e0:	ldr	x0, [x19, #24]
     1e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     1e8:	mov	x25, x0
     1ec:	ldp	x1, x2, [x0, #16]
     1f0:	sub	x1, x1, x2
     1f4:	cmp	x1, #0x7
     1f8:	b.ls	d3c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd3c>  // b.plast
     1fc:	mov	x0, #0x7773                	// #30579
     200:	movk	x0, #0x7469, lsl #16
     204:	movk	x0, #0x6863, lsl #32
     208:	movk	x0, #0x2820, lsl #48
     20c:	str	x0, [x2]
     210:	ldr	x0, [x25, #24]
     214:	add	x0, x0, #0x8
     218:	str	x0, [x25, #24]
     21c:	ldp	x1, x26, [x19]
     220:	ldr	x3, [x25, #16]
     224:	sub	x2, x3, x0
     228:	cmp	x2, x26
     22c:	b.cc	cd4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcd4>  // b.lo, b.ul, b.last
     230:	cbnz	x26, b48 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb48>
     234:	cmp	x0, x3
     238:	b.eq	cf0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcf0>  // b.none
     23c:	mov	w1, #0x5b                  	// #91
     240:	strb	w1, [x0]
     244:	mov	x1, x27
     248:	ldr	x0, [x25, #24]
     24c:	add	x0, x0, #0x1
     250:	str	x0, [x25, #24]
     254:	mov	x0, x25
     258:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     25c:	mov	x1, x0
     260:	ldp	x2, x3, [x0, #16]
     264:	sub	x2, x2, x3
     268:	cmp	x2, #0x4
     26c:	b.ls	d28 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd28>  // b.plast
     270:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     274:	add	x0, x0, #0x0
     278:	ldr	w2, [x0]
     27c:	ldrb	w0, [x0, #4]
     280:	str	w2, [x3]
     284:	strb	w0, [x3, #4]
     288:	ldr	x0, [x1, #24]
     28c:	add	x0, x0, #0x5
     290:	str	x0, [x1, #24]
     294:	ldp	x1, x2, [sp, #160]
     298:	ldr	x0, [x19, #24]
     29c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2a0:	mov	x1, x0
     2a4:	ldp	x2, x3, [x0, #16]
     2a8:	sub	x2, x2, x3
     2ac:	cmp	x2, #0xf
     2b0:	b.ls	cc0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcc0>  // b.plast
     2b4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     2b8:	add	x0, x0, #0x0
     2bc:	ldp	x4, x5, [x0]
     2c0:	stp	x4, x5, [x3]
     2c4:	ldr	x0, [x1, #24]
     2c8:	add	x0, x0, #0x10
     2cc:	str	x0, [x1, #24]
     2d0:	ldr	x27, [sp, #248]
     2d4:	add	x0, x20, #0x8
     2d8:	cmp	x27, x0
     2dc:	b.eq	480 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x480>  // b.none
     2e0:	ldr	w0, [sp, #112]
     2e4:	adrp	x26, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     2e8:	adrp	x25, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     2ec:	add	x26, x26, #0x0
     2f0:	add	w21, w0, #0x1
     2f4:	ldr	w0, [sp, #124]
     2f8:	add	x25, x25, #0x0
     2fc:	adrp	x28, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     300:	add	w22, w0, #0x1
     304:	adrp	x24, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     308:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     30c:	add	x0, x0, #0x0
     310:	str	x0, [sp, #112]
     314:	ldp	x1, x2, [sp, #160]
     318:	ldr	x0, [x19, #24]
     31c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     320:	mov	x2, x0
     324:	ldp	x1, x3, [x0, #16]
     328:	sub	x1, x1, x3
     32c:	cmp	x1, #0x5
     330:	b.ls	8c0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x8c0>  // b.plast
     334:	ldrh	w0, [x26, #4]
     338:	ldr	w1, [x26]
     33c:	str	w1, [x3]
     340:	strh	w0, [x3, #4]
     344:	ldr	x0, [x2, #24]
     348:	add	x0, x0, #0x6
     34c:	str	x0, [x2, #24]
     350:	ldr	x3, [x2, #16]
     354:	ldrb	w1, [x27, #32]
     358:	cmp	x3, x0
     35c:	b.ls	8b0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x8b0>  // b.plast
     360:	add	x3, x0, #0x1
     364:	str	x3, [x2, #24]
     368:	strb	w1, [x0]
     36c:	ldp	x0, x1, [x2, #16]
     370:	sub	x0, x0, x1
     374:	cmp	x0, #0x6
     378:	b.ls	898 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x898>  // b.plast
     37c:	ldr	w0, [x25]
     380:	str	w0, [x1]
     384:	ldur	w0, [x25, #3]
     388:	stur	w0, [x1, #3]
     38c:	ldr	x0, [x2, #24]
     390:	add	x0, x0, #0x7
     394:	str	x0, [x2, #24]
     398:	ldp	x3, x1, [x27, #40]
     39c:	mov	x0, x2
     3a0:	sub	x1, x1, x3
     3a4:	asr	x1, x1, #3
     3a8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     3ac:	ldp	x2, x3, [x0, #16]
     3b0:	mov	x1, x0
     3b4:	sub	x2, x2, x3
     3b8:	cmp	x2, #0x6
     3bc:	b.ls	888 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x888>  // b.plast
     3c0:	add	x0, x28, #0x0
     3c4:	ldr	w2, [x0]
     3c8:	ldur	w0, [x0, #3]
     3cc:	str	w2, [x3]
     3d0:	stur	w0, [x3, #3]
     3d4:	ldr	x0, [x1, #24]
     3d8:	add	x0, x0, #0x7
     3dc:	str	x0, [x1, #24]
     3e0:	ldp	x3, x2, [x27, #40]
     3e4:	ldr	x0, [x19, #24]
     3e8:	sub	x2, x2, x3
     3ec:	cmp	x2, #0x8
     3f0:	ldr	x1, [x0, #16]
     3f4:	ldr	x2, [x0, #24]
     3f8:	b.eq	41c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x41c>  // b.none
     3fc:	cmp	x1, x2
     400:	b.ls	b20 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb20>  // b.plast
     404:	add	x1, x2, #0x1
     408:	str	x1, [x0, #24]
     40c:	mov	w0, #0x73                  	// #115
     410:	strb	w0, [x2]
     414:	ldr	x0, [x19, #24]
     418:	ldp	x1, x2, [x0, #16]
     41c:	sub	x1, x1, x2
     420:	cmp	x1, #0xa
     424:	b.ls	878 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x878>  // b.plast
     428:	add	x1, x24, #0x0
     42c:	ldr	x3, [x1]
     430:	str	x3, [x2]
     434:	ldur	w1, [x1, #7]
     438:	stur	w1, [x2, #7]
     43c:	ldr	x1, [x0, #24]
     440:	add	x1, x1, #0xb
     444:	str	x1, [x0, #24]
     448:	ldrb	w4, [sp, #104]
     44c:	mov	w3, w22
     450:	mov	w2, w21
     454:	add	x1, x27, #0x28
     458:	mov	x0, x19
     45c:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     460:	tst	w0, #0xff
     464:	b.ne	834 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x834>  // b.any
     468:	mov	x0, x27
     46c:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
     470:	add	x1, x20, #0x8
     474:	mov	x27, x0
     478:	cmp	x0, x1
     47c:	b.ne	314 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x314>  // b.any
     480:	ldp	x1, x2, [sp, #160]
     484:	ldr	x0, [x19, #24]
     488:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     48c:	mov	x1, x0
     490:	ldp	x2, x3, [x0, #16]
     494:	sub	x2, x2, x3
     498:	cmp	x2, #0x1
     49c:	b.ls	cac <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcac>  // b.plast
     4a0:	mov	w0, #0xa7d                 	// #2685
     4a4:	strh	w0, [x3]
     4a8:	ldr	x0, [x1, #24]
     4ac:	add	x0, x0, #0x2
     4b0:	str	x0, [x1, #24]
     4b4:	mov	w22, #0x1                   	// #1
     4b8:	ldr	x19, [sp, #240]
     4bc:	cbz	x19, 510 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x510>
     4c0:	ldr	x1, [x19, #24]
     4c4:	mov	x0, x20
     4c8:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     4cc:	ldr	x0, [x19, #40]
     4d0:	ldr	x21, [x19, #16]
     4d4:	cbz	x0, 504 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x504>
     4d8:	bl	0 <_ZdlPv>
     4dc:	mov	x0, x19
     4e0:	bl	0 <_ZdlPv>
     4e4:	cbz	x21, 510 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x510>
     4e8:	mov	x19, x21
     4ec:	mov	x0, x20
     4f0:	ldr	x1, [x19, #24]
     4f4:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     4f8:	ldr	x0, [x19, #40]
     4fc:	ldr	x21, [x19, #16]
     500:	cbnz	x0, 4d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4d8>
     504:	mov	x0, x19
     508:	bl	0 <_ZdlPv>
     50c:	cbnz	x21, 4e8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4e8>
     510:	ldr	x0, [sp, #160]
     514:	add	x23, x23, #0x10
     518:	cmp	x0, x23
     51c:	b.eq	524 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x524>  // b.none
     520:	bl	0 <_ZdlPv>
     524:	mov	w0, w22
     528:	ldp	x19, x20, [sp, #16]
     52c:	ldp	x21, x22, [sp, #32]
     530:	ldp	x23, x24, [sp, #48]
     534:	ldp	x25, x26, [sp, #64]
     538:	ldp	x27, x28, [sp, #80]
     53c:	ldp	x29, x30, [sp], #272
     540:	ret
     544:	ldr	x0, [x0, #24]
     548:	cbnz	x0, d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd0>
     54c:	b	e8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe8>
     550:	ldr	x0, [x28, #40]
     554:	cbz	x0, 564 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x564>
     558:	str	x6, [sp, #128]
     55c:	bl	0 <_ZdlPv>
     560:	ldr	x6, [sp, #128]
     564:	add	x21, x6, #0x28
     568:	mov	x0, x28
     56c:	bl	0 <_ZdlPv>
     570:	b	1a8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1a8>
     574:	ldp	x6, x0, [x25]
     578:	cmp	x6, x0
     57c:	b.eq	1020 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1020>  // b.none
     580:	ldr	x3, [x6]
     584:	ldr	x1, [x3, #8]
     588:	mov	w8, w1
     58c:	cbz	w1, fac <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xfac>
     590:	sub	x0, x0, x6
     594:	mov	x2, #0x0                   	// #0
     598:	ldr	x7, [x3]
     59c:	asr	x0, x0, #3
     5a0:	sub	w3, w0, #0x1
     5a4:	mov	w5, w0
     5a8:	add	x3, x6, w3, uxtw #3
     5ac:	ldrb	w4, [x7, x2]
     5b0:	mov	w28, w2
     5b4:	cbz	w5, b34 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb34>
     5b8:	mov	x0, x6
     5bc:	nop
     5c0:	cmp	x0, x3
     5c4:	b.eq	b34 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb34>  // b.none
     5c8:	ldr	x1, [x0, #8]!
     5cc:	ldr	x1, [x1]
     5d0:	ldrb	w1, [x1, x2]
     5d4:	cmp	w4, w1
     5d8:	b.eq	5c0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5c0>  // b.none
     5dc:	ldr	w0, [sp, #112]
     5e0:	ldp	x1, x2, [sp, #160]
     5e4:	sub	w26, w28, w0
     5e8:	cmp	w26, #0x1
     5ec:	ldr	x0, [x19, #24]
     5f0:	b.eq	b60 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb60>  // b.none
     5f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5f8:	mov	x3, x0
     5fc:	ldp	x1, x2, [x0, #16]
     600:	sub	x1, x1, x2
     604:	cmp	x1, #0xa
     608:	b.ls	ee0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xee0>  // b.plast
     60c:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     610:	add	x0, x0, #0x0
     614:	ldr	x1, [x0]
     618:	str	x1, [x2]
     61c:	ldur	w0, [x0, #7]
     620:	stur	w0, [x2, #7]
     624:	ldr	x0, [x3, #24]
     628:	add	x0, x0, #0xb
     62c:	str	x0, [x3, #24]
     630:	ldp	x1, x2, [x19]
     634:	ldr	x4, [x3, #16]
     638:	sub	x4, x4, x0
     63c:	cmp	x4, x2
     640:	b.cc	ec8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xec8>  // b.lo, b.ul, b.last
     644:	cbnz	x2, efc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xefc>
     648:	cmp	x4, #0x7
     64c:	b.ls	eac <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xeac>  // b.plast
     650:	mov	x1, #0x642e                	// #25646
     654:	movk	x1, #0x7461, lsl #16
     658:	movk	x1, #0x2861, lsl #32
     65c:	movk	x1, #0x2b29, lsl #48
     660:	str	x1, [x0]
     664:	ldr	x0, [x3, #24]
     668:	add	x0, x0, #0x8
     66c:	str	x0, [x3, #24]
     670:	mov	x1, x27
     674:	mov	x0, x3
     678:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     67c:	mov	x4, x0
     680:	ldp	x1, x2, [x0, #16]
     684:	sub	x1, x1, x2
     688:	cmp	x1, #0x2
     68c:	b.ls	e94 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe94>  // b.plast
     690:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     694:	add	x0, x0, #0x0
     698:	ldrh	w1, [x0]
     69c:	ldrb	w0, [x0, #2]
     6a0:	strh	w1, [x2]
     6a4:	strb	w0, [x2, #2]
     6a8:	ldr	x0, [x4, #24]
     6ac:	add	x0, x0, #0x3
     6b0:	str	x0, [x4, #24]
     6b4:	ldr	x0, [x25]
     6b8:	mov	w5, w26
     6bc:	ldr	x1, [x0]
     6c0:	ldr	x3, [x1, #8]
     6c4:	cmp	x27, x3
     6c8:	b.hi	ff8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xff8>  // b.pmore
     6cc:	add	x26, sp, #0xc0
     6d0:	ldr	x3, [x1, #8]
     6d4:	add	x0, x26, #0x10
     6d8:	str	x0, [sp, #192]
     6dc:	cmp	x27, x3
     6e0:	ldr	x1, [x1]
     6e4:	b.hi	fe0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xfe0>  // b.pmore
     6e8:	sub	x3, x3, x27
     6ec:	add	x6, x1, x27
     6f0:	cmp	x3, x5
     6f4:	csel	x27, x3, x5, ls  // ls = plast
     6f8:	cmn	x6, x27
     6fc:	ccmp	x6, #0x0, #0x0, ne  // ne = any
     700:	b.eq	fd4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xfd4>  // b.none
     704:	str	x27, [sp, #152]
     708:	cmp	x27, #0xf
     70c:	b.hi	e64 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe64>  // b.pmore
     710:	cmp	x27, #0x1
     714:	b.ne	e04 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe04>  // b.any
     718:	ldr	w2, [sp, #112]
     71c:	ldrb	w2, [x1, w2, uxtw]
     720:	mov	x1, x0
     724:	strb	w2, [sp, #208]
     728:	str	x27, [sp, #200]
     72c:	mov	x0, x4
     730:	strb	wzr, [x1, x27]
     734:	str	x5, [sp, #112]
     738:	ldp	x1, x2, [sp, #192]
     73c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     740:	mov	x2, x0
     744:	ldp	x1, x3, [x0, #16]
     748:	ldr	x5, [sp, #112]
     74c:	sub	x1, x1, x3
     750:	cmp	x1, #0x2
     754:	b.ls	e34 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe34>  // b.plast
     758:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     75c:	add	x0, x0, #0x0
     760:	ldrh	w1, [x0]
     764:	ldrb	w0, [x0, #2]
     768:	strh	w1, [x3]
     76c:	strb	w0, [x3, #2]
     770:	ldr	x0, [x2, #24]
     774:	add	x0, x0, #0x3
     778:	str	x0, [x2, #24]
     77c:	mov	x1, x5
     780:	mov	x0, x2
     784:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     788:	mov	x1, x0
     78c:	ldp	x2, x3, [x0, #16]
     790:	sub	x2, x2, x3
     794:	cmp	x2, #0x7
     798:	b.ls	e50 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe50>  // b.plast
     79c:	mov	x0, #0x2029                	// #8233
     7a0:	movk	x0, #0x3d21, lsl #16
     7a4:	movk	x0, #0x3020, lsl #32
     7a8:	movk	x0, #0xa29, lsl #48
     7ac:	str	x0, [x3]
     7b0:	ldr	x0, [x1, #24]
     7b4:	add	x0, x0, #0x8
     7b8:	str	x0, [x1, #24]
     7bc:	ldr	x0, [sp, #192]
     7c0:	add	x26, x26, #0x10
     7c4:	cmp	x0, x26
     7c8:	b.eq	7d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7d0>  // b.none
     7cc:	bl	0 <_ZdlPv>
     7d0:	ldp	x1, x2, [sp, #160]
     7d4:	ldr	x0, [x19, #24]
     7d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     7dc:	mov	x1, x0
     7e0:	ldp	x2, x3, [x0, #16]
     7e4:	sub	x2, x2, x3
     7e8:	cmp	x2, #0x8
     7ec:	b.ls	dd4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xdd4>  // b.plast
     7f0:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     7f4:	add	x0, x0, #0x0
     7f8:	ldr	x2, [x0]
     7fc:	str	x2, [x3]
     800:	ldrb	w0, [x0, #8]
     804:	strb	w0, [x3, #8]
     808:	ldr	x0, [x1, #24]
     80c:	add	x0, x0, #0x9
     810:	str	x0, [x1, #24]
     814:	ldrb	w4, [sp, #104]
     818:	mov	w2, w28
     81c:	ldr	w3, [sp, #124]
     820:	mov	x1, x25
     824:	mov	x0, x19
     828:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     82c:	and	w22, w0, #0xff
     830:	b	4b8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4b8>
     834:	ldp	x1, x2, [sp, #160]
     838:	ldr	x0, [x19, #24]
     83c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     840:	mov	x1, x0
     844:	ldp	x2, x3, [x0, #16]
     848:	sub	x2, x2, x3
     84c:	cmp	x2, #0x8
     850:	b.ls	c9c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc9c>  // b.plast
     854:	ldr	x2, [sp, #112]
     858:	ldr	x0, [x2]
     85c:	str	x0, [x3]
     860:	ldrb	w0, [x2, #8]
     864:	strb	w0, [x3, #8]
     868:	ldr	x0, [x1, #24]
     86c:	add	x0, x0, #0x9
     870:	str	x0, [x1, #24]
     874:	b	468 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x468>
     878:	add	x1, x24, #0x0
     87c:	mov	x2, #0xb                   	// #11
     880:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     884:	b	448 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x448>
     888:	add	x1, x28, #0x0
     88c:	mov	x2, #0x7                   	// #7
     890:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     894:	b	3e0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x3e0>
     898:	mov	x0, x2
     89c:	mov	x2, #0x7                   	// #7
     8a0:	mov	x1, x25
     8a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8a8:	mov	x2, x0
     8ac:	b	398 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x398>
     8b0:	mov	x0, x2
     8b4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     8b8:	mov	x2, x0
     8bc:	b	36c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x36c>
     8c0:	mov	x2, #0x6                   	// #6
     8c4:	mov	x1, x26
     8c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8cc:	mov	x2, x0
     8d0:	ldr	x0, [x0, #24]
     8d4:	b	350 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x350>
     8d8:	ldrb	w0, [x2, #32]
     8dc:	ldrb	w1, [x28, #32]
     8e0:	cmp	w1, w0
     8e4:	cset	w0, cc  // cc = lo, ul, last
     8e8:	b	190 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x190>
     8ec:	ldr	w1, [sp, #104]
     8f0:	sub	x2, x0, x2
     8f4:	cmp	w1, #0x0
     8f8:	asr	x2, x2, #3
     8fc:	ccmp	x2, #0x1, #0x0, eq  // eq = none
     900:	b.hi	1010 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1010>  // b.pmore
     904:	ldp	x5, x4, [x4, #32]
     908:	mov	w6, #0xa                   	// #10
     90c:	add	x26, sp, #0xc0
     910:	add	x20, sp, #0xe0
     914:	mov	x1, x26
     918:	mov	x0, x20
     91c:	mov	x3, #0x0                   	// #0
     920:	mov	x2, #0x1                   	// #1
     924:	strb	w6, [sp, #192]
     928:	stp	x5, x4, [sp, #224]
     92c:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
     930:	cmn	x0, #0x1
     934:	b.eq	d58 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd58>  // b.none
     938:	mov	x24, #0x0                   	// #0
     93c:	ldr	x27, [sp, #232]
     940:	cbnz	x0, c6c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc6c>
     944:	ldp	x1, x2, [sp, #160]
     948:	add	x21, x0, #0x1
     94c:	ldr	x0, [x19, #24]
     950:	cmp	x21, x27
     954:	csel	x21, x21, x27, ls  // ls = plast
     958:	ldr	x28, [sp, #224]
     95c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     960:	ldp	x1, x2, [x0, #16]
     964:	sub	x27, x27, x21
     968:	mov	x22, x0
     96c:	add	x21, x28, x21
     970:	sub	x1, x1, x2
     974:	cmp	x24, x1
     978:	b.hi	d84 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd84>  // b.pmore
     97c:	cbnz	x24, c78 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc78>
     980:	cmp	x1, #0x5
     984:	b.ls	da4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xda4>  // b.plast
     988:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     98c:	add	x0, x0, #0x0
     990:	ldr	w1, [x0]
     994:	ldrh	w0, [x0, #4]
     998:	str	w1, [x2]
     99c:	strh	w0, [x2, #4]
     9a0:	ldr	x0, [x22, #24]
     9a4:	add	x0, x0, #0x6
     9a8:	str	x0, [x22, #24]
     9ac:	ldr	x1, [x25]
     9b0:	mov	x0, x22
     9b4:	ldr	x2, [x1]
     9b8:	ldp	x1, x2, [x2]
     9bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9c0:	mov	x1, x0
     9c4:	ldp	x2, x3, [x0, #16]
     9c8:	sub	x2, x2, x3
     9cc:	cmp	x2, #0x1
     9d0:	b.ls	dc0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xdc0>  // b.plast
     9d4:	mov	w0, #0xa22                 	// #2594
     9d8:	strh	w0, [x3]
     9dc:	ldr	x0, [x1, #24]
     9e0:	add	x0, x0, #0x2
     9e4:	str	x0, [x1, #24]
     9e8:	adrp	x24, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     9ec:	add	x0, x24, #0x0
     9f0:	str	x0, [sp, #104]
     9f4:	mov	w22, #0xa                   	// #10
     9f8:	stp	x21, x27, [sp, #224]
     9fc:	cbz	x27, a90 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa90>
     a00:	mov	x1, x26
     a04:	mov	x0, x20
     a08:	mov	x3, #0x0                   	// #0
     a0c:	mov	x2, #0x1                   	// #1
     a10:	strb	w22, [sp, #192]
     a14:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
     a18:	cmn	x0, #0x1
     a1c:	b.eq	a98 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa98>  // b.none
     a20:	mov	x28, #0x0                   	// #0
     a24:	ldr	x27, [sp, #232]
     a28:	cbz	x0, a34 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa34>
     a2c:	cmp	x0, x27
     a30:	csel	x28, x0, x27, ls  // ls = plast
     a34:	ldp	x1, x2, [sp, #160]
     a38:	add	x21, x0, #0x1
     a3c:	ldr	x0, [x19, #24]
     a40:	cmp	x21, x27
     a44:	csel	x21, x21, x27, ls  // ls = plast
     a48:	ldr	x24, [sp, #224]
     a4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a50:	ldp	x1, x2, [x0, #16]
     a54:	sub	x27, x27, x21
     a58:	mov	x25, x0
     a5c:	add	x21, x24, x21
     a60:	sub	x4, x1, x2
     a64:	cmp	x4, x28
     a68:	b.cc	ac4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xac4>  // b.lo, b.ul, b.last
     a6c:	cbnz	x28, b00 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb00>
     a70:	cmp	x2, x1
     a74:	b.eq	ae0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xae0>  // b.none
     a78:	strb	w22, [x2]
     a7c:	ldr	x0, [x25, #24]
     a80:	add	x0, x0, #0x1
     a84:	str	x0, [x25, #24]
     a88:	stp	x21, x27, [sp, #224]
     a8c:	cbnz	x27, a00 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa00>
     a90:	mov	w22, #0x0                   	// #0
     a94:	b	510 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x510>
     a98:	ldp	x1, x2, [sp, #160]
     a9c:	mov	x27, #0x0                   	// #0
     aa0:	ldr	x0, [x19, #24]
     aa4:	mov	x21, #0x0                   	// #0
     aa8:	ldp	x24, x28, [sp, #224]
     aac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ab0:	mov	x25, x0
     ab4:	ldp	x1, x2, [x0, #16]
     ab8:	sub	x4, x1, x2
     abc:	cmp	x4, x28
     ac0:	b.cs	a6c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa6c>  // b.hs, b.nlast
     ac4:	mov	x2, x28
     ac8:	mov	x1, x24
     acc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ad0:	mov	x25, x0
     ad4:	ldp	x1, x2, [x0, #16]
     ad8:	cmp	x2, x1
     adc:	b.ne	a78 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa78>  // b.any
     ae0:	ldr	x1, [sp, #104]
     ae4:	mov	x0, x25
     ae8:	mov	x2, #0x1                   	// #1
     aec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     af0:	stp	x21, x27, [sp, #224]
     af4:	cbnz	x27, a00 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa00>
     af8:	mov	w22, #0x0                   	// #0
     afc:	b	510 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x510>
     b00:	mov	x1, x24
     b04:	mov	x0, x2
     b08:	mov	x2, x28
     b0c:	bl	0 <memcpy>
     b10:	ldp	x1, x2, [x25, #16]
     b14:	add	x2, x2, x28
     b18:	str	x2, [x25, #24]
     b1c:	b	a70 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa70>
     b20:	mov	w1, #0x73                  	// #115
     b24:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     b28:	ldr	x0, [x19, #24]
     b2c:	ldp	x1, x2, [x0, #16]
     b30:	b	41c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x41c>
     b34:	add	x2, x2, #0x1
     b38:	add	w28, w28, #0x1
     b3c:	cmp	w8, w2
     b40:	b.ne	5ac <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5ac>  // b.any
     b44:	b	5dc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5dc>
     b48:	mov	x2, x26
     b4c:	bl	0 <memcpy>
     b50:	ldp	x3, x0, [x25, #16]
     b54:	add	x0, x0, x26
     b58:	str	x0, [x25, #24]
     b5c:	b	234 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x234>
     b60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b64:	mov	x26, x0
     b68:	ldp	x1, x2, [x0, #16]
     b6c:	sub	x1, x1, x2
     b70:	cmp	x1, #0x3
     b74:	b.ls	f1c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf1c>  // b.plast
     b78:	mov	w0, #0x6669                	// #26217
     b7c:	movk	w0, #0x2820, lsl #16
     b80:	str	w0, [x2]
     b84:	ldr	x0, [x26, #24]
     b88:	add	x0, x0, #0x4
     b8c:	str	x0, [x26, #24]
     b90:	ldp	x1, x2, [x19]
     b94:	ldr	x3, [x26, #16]
     b98:	sub	x4, x3, x0
     b9c:	cmp	x4, x2
     ba0:	b.cc	f38 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf38>  // b.lo, b.ul, b.last
     ba4:	cbnz	x2, de8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xde8>
     ba8:	cmp	x3, x0
     bac:	b.eq	f90 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf90>  // b.none
     bb0:	mov	w1, #0x5b                  	// #91
     bb4:	strb	w1, [x0]
     bb8:	ldr	x0, [x26, #24]
     bbc:	add	x0, x0, #0x1
     bc0:	str	x0, [x26, #24]
     bc4:	mov	x1, x27
     bc8:	mov	x0, x26
     bcc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     bd0:	mov	x2, x0
     bd4:	ldp	x1, x3, [x0, #16]
     bd8:	sub	x1, x1, x3
     bdc:	cmp	x1, #0x5
     be0:	b.ls	f74 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf74>  // b.plast
     be4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     be8:	add	x0, x0, #0x0
     bec:	ldr	w1, [x0]
     bf0:	ldrh	w0, [x0, #4]
     bf4:	str	w1, [x3]
     bf8:	strh	w0, [x3, #4]
     bfc:	ldr	x0, [x2, #24]
     c00:	add	x0, x0, #0x6
     c04:	str	x0, [x2, #24]
     c08:	ldr	x1, [x25]
     c0c:	ldr	x3, [x2, #16]
     c10:	ldr	x1, [x1]
     c14:	cmp	x3, x0
     c18:	ldr	w3, [sp, #112]
     c1c:	ldr	x1, [x1]
     c20:	ldrb	w1, [x1, w3, uxtw]
     c24:	b.ls	f64 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf64>  // b.plast
     c28:	add	x3, x0, #0x1
     c2c:	str	x3, [x2, #24]
     c30:	strb	w1, [x0]
     c34:	ldp	x0, x1, [x2, #16]
     c38:	sub	x0, x0, x1
     c3c:	cmp	x0, #0x2
     c40:	b.ls	f4c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xf4c>  // b.plast
     c44:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     c48:	add	x0, x0, #0x0
     c4c:	ldrh	w3, [x0]
     c50:	ldrb	w0, [x0, #2]
     c54:	strh	w3, [x1]
     c58:	strb	w0, [x1, #2]
     c5c:	ldr	x0, [x2, #24]
     c60:	add	x0, x0, #0x3
     c64:	str	x0, [x2, #24]
     c68:	b	7d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7d0>
     c6c:	cmp	x0, x27
     c70:	csel	x24, x0, x27, ls  // ls = plast
     c74:	b	944 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x944>
     c78:	mov	x1, x28
     c7c:	mov	x0, x2
     c80:	mov	x2, x24
     c84:	bl	0 <memcpy>
     c88:	ldp	x1, x2, [x22, #16]
     c8c:	add	x2, x2, x24
     c90:	str	x2, [x22, #24]
     c94:	sub	x1, x1, x2
     c98:	b	980 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x980>
     c9c:	ldr	x1, [sp, #112]
     ca0:	mov	x2, #0x9                   	// #9
     ca4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ca8:	b	468 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x468>
     cac:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     cb0:	mov	x2, #0x2                   	// #2
     cb4:	add	x1, x1, #0x0
     cb8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cbc:	b	4b4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4b4>
     cc0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     cc4:	mov	x2, #0x10                  	// #16
     cc8:	add	x1, x1, #0x0
     ccc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cd0:	b	2d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x2d0>
     cd4:	mov	x0, x25
     cd8:	mov	x2, x26
     cdc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ce0:	mov	x25, x0
     ce4:	ldp	x3, x0, [x0, #16]
     ce8:	cmp	x0, x3
     cec:	b.ne	23c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x23c>  // b.any
     cf0:	mov	x2, #0x1                   	// #1
     cf4:	mov	x0, x25
     cf8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     cfc:	add	x1, x1, #0x0
     d00:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d04:	mov	x25, x0
     d08:	mov	x1, x27
     d0c:	mov	x0, x25
     d10:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     d14:	mov	x1, x0
     d18:	ldp	x2, x3, [x0, #16]
     d1c:	sub	x2, x2, x3
     d20:	cmp	x2, #0x4
     d24:	b.hi	270 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x270>  // b.pmore
     d28:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d2c:	mov	x2, #0x5                   	// #5
     d30:	add	x1, x1, #0x0
     d34:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d38:	b	294 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x294>
     d3c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d40:	mov	x2, #0x8                   	// #8
     d44:	add	x1, x1, #0x0
     d48:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d4c:	mov	x25, x0
     d50:	ldr	x0, [x0, #24]
     d54:	b	21c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x21c>
     d58:	ldp	x1, x2, [sp, #160]
     d5c:	mov	x27, #0x0                   	// #0
     d60:	ldr	x0, [x19, #24]
     d64:	mov	x21, #0x0                   	// #0
     d68:	ldp	x28, x24, [sp, #224]
     d6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d70:	mov	x22, x0
     d74:	ldp	x1, x2, [x0, #16]
     d78:	sub	x1, x1, x2
     d7c:	cmp	x24, x1
     d80:	b.ls	97c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x97c>  // b.plast
     d84:	mov	x2, x24
     d88:	mov	x1, x28
     d8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d90:	mov	x22, x0
     d94:	ldp	x1, x2, [x0, #16]
     d98:	sub	x1, x1, x2
     d9c:	cmp	x1, #0x5
     da0:	b.hi	988 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x988>  // b.pmore
     da4:	mov	x0, x22
     da8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     dac:	mov	x2, #0x6                   	// #6
     db0:	add	x1, x1, #0x0
     db4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     db8:	mov	x22, x0
     dbc:	b	9ac <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9ac>
     dc0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     dc4:	mov	x2, #0x2                   	// #2
     dc8:	add	x1, x1, #0x0
     dcc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     dd0:	b	9e8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9e8>
     dd4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     dd8:	mov	x2, #0x9                   	// #9
     ddc:	add	x1, x1, #0x0
     de0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     de4:	b	814 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x814>
     de8:	str	x2, [sp, #128]
     dec:	bl	0 <memcpy>
     df0:	ldp	x3, x0, [x26, #16]
     df4:	ldr	x2, [sp, #128]
     df8:	add	x0, x0, x2
     dfc:	str	x0, [x26, #24]
     e00:	b	ba8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xba8>
     e04:	mov	x1, x0
     e08:	cbz	x27, 728 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x728>
     e0c:	mov	x2, x27
     e10:	mov	x1, x6
     e14:	str	x5, [sp, #112]
     e18:	str	x4, [sp, #128]
     e1c:	bl	0 <memcpy>
     e20:	ldr	x5, [sp, #112]
     e24:	ldr	x4, [sp, #128]
     e28:	ldr	x27, [sp, #152]
     e2c:	ldr	x1, [sp, #192]
     e30:	b	728 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x728>
     e34:	mov	x2, #0x3                   	// #3
     e38:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e3c:	add	x1, x1, #0x0
     e40:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e44:	mov	x2, x0
     e48:	ldr	x5, [sp, #112]
     e4c:	b	77c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x77c>
     e50:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e54:	mov	x2, #0x8                   	// #8
     e58:	add	x1, x1, #0x0
     e5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e60:	b	7bc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7bc>
     e64:	add	x1, sp, #0x98
     e68:	mov	x0, x26
     e6c:	mov	x2, #0x0                   	// #0
     e70:	str	x5, [sp, #112]
     e74:	stp	x4, x6, [sp, #128]
     e78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     e7c:	ldr	x1, [sp, #152]
     e80:	str	x0, [sp, #192]
     e84:	str	x1, [sp, #208]
     e88:	ldr	x5, [sp, #112]
     e8c:	ldp	x4, x6, [sp, #128]
     e90:	b	e0c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe0c>
     e94:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e98:	mov	x2, #0x3                   	// #3
     e9c:	add	x1, x1, #0x0
     ea0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ea4:	mov	x4, x0
     ea8:	b	6b4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6b4>
     eac:	mov	x0, x3
     eb0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     eb4:	mov	x2, #0x8                   	// #8
     eb8:	add	x1, x1, #0x0
     ebc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ec0:	mov	x3, x0
     ec4:	b	670 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x670>
     ec8:	mov	x0, x3
     ecc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ed0:	mov	x3, x0
     ed4:	ldp	x4, x0, [x0, #16]
     ed8:	sub	x4, x4, x0
     edc:	b	648 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x648>
     ee0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     ee4:	mov	x2, #0xb                   	// #11
     ee8:	add	x1, x1, #0x0
     eec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ef0:	mov	x3, x0
     ef4:	ldr	x0, [x0, #24]
     ef8:	b	630 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x630>
     efc:	stp	x2, x3, [sp, #128]
     f00:	bl	0 <memcpy>
     f04:	ldp	x2, x3, [sp, #128]
     f08:	ldp	x4, x0, [x3, #16]
     f0c:	add	x0, x0, x2
     f10:	str	x0, [x3, #24]
     f14:	sub	x4, x4, x0
     f18:	b	648 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x648>
     f1c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f20:	mov	x2, #0x4                   	// #4
     f24:	add	x1, x1, #0x0
     f28:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f2c:	mov	x26, x0
     f30:	ldr	x0, [x0, #24]
     f34:	b	b90 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb90>
     f38:	mov	x0, x26
     f3c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f40:	mov	x26, x0
     f44:	ldp	x3, x0, [x0, #16]
     f48:	b	ba8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xba8>
     f4c:	mov	x0, x2
     f50:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f54:	mov	x2, #0x3                   	// #3
     f58:	add	x1, x1, #0x0
     f5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f60:	b	7d0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7d0>
     f64:	mov	x0, x2
     f68:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     f6c:	mov	x2, x0
     f70:	b	c34 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc34>
     f74:	mov	x2, #0x6                   	// #6
     f78:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f7c:	add	x1, x1, #0x0
     f80:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f84:	mov	x2, x0
     f88:	ldr	x0, [x0, #24]
     f8c:	b	c08 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc08>
     f90:	mov	x0, x26
     f94:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f98:	mov	x2, #0x1                   	// #1
     f9c:	add	x1, x1, #0x0
     fa0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     fa4:	mov	x26, x0
     fa8:	b	bc4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xbc4>
     fac:	mov	w28, #0x0                   	// #0
     fb0:	b	5dc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5dc>
     fb4:	adrp	x3, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fb8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fbc:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fc0:	add	x3, x3, #0x0
     fc4:	add	x1, x1, #0x0
     fc8:	add	x0, x0, #0x0
     fcc:	mov	w2, #0x33                  	// #51
     fd0:	bl	0 <__assert_fail>
     fd4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fd8:	add	x0, x0, #0x0
     fdc:	bl	0 <_ZSt19__throw_logic_errorPKc>
     fe0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fe4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     fe8:	mov	x2, x27
     fec:	add	x1, x1, #0x0
     ff0:	add	x0, x0, #0x0
     ff4:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>
     ff8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     ffc:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1000:	mov	x2, x27
    1004:	add	x1, x1, #0x0
    1008:	add	x0, x0, #0x0
    100c:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>
    1010:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1014:	mov	w1, #0x1                   	// #1
    1018:	add	x0, x0, #0x0
    101c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1020:	adrp	x3, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1024:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1028:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    102c:	add	x3, x3, #0x0
    1030:	add	x1, x1, #0x0
    1034:	add	x0, x0, #0x0
    1038:	mov	w2, #0x1e                  	// #30
    103c:	bl	0 <__assert_fail>

0000000000001040 <_ZNK4llvm13StringMatcher4EmitEjb>:
    1040:	stp	x29, x30, [sp, #-176]!
    1044:	mov	x29, sp
    1048:	stp	x19, x20, [sp, #16]
    104c:	mov	x19, x0
    1050:	ldr	x0, [x0, #16]
    1054:	stp	x21, x22, [sp, #32]
    1058:	mov	w22, w1
    105c:	ldp	x1, x0, [x0]
    1060:	cmp	x0, x1
    1064:	b.eq	15e0 <_ZNK4llvm13StringMatcher4EmitEjb+0x5a0>  // b.none
    1068:	add	x20, sp, #0x80
    106c:	sub	x0, x0, x1
    1070:	add	x3, x20, #0x8
    1074:	stp	x23, x24, [sp, #48]
    1078:	asr	x0, x0, #6
    107c:	stp	x25, x26, [sp, #64]
    1080:	and	w23, w2, #0xff
    1084:	stp	x27, x28, [sp, #80]
    1088:	str	wzr, [sp, #136]
    108c:	stp	xzr, x3, [sp, #144]
    1090:	stp	x3, xzr, [sp, #160]
    1094:	cbz	w0, 1248 <_ZNK4llvm13StringMatcher4EmitEjb+0x208>
    1098:	sub	w24, w0, #0x1
    109c:	mov	x25, x3
    10a0:	add	x24, x24, #0x1
    10a4:	mov	x28, #0x0                   	// #0
    10a8:	mov	x0, #0x0                   	// #0
    10ac:	lsl	x2, x24, #6
    10b0:	str	x2, [sp, #104]
    10b4:	nop
    10b8:	add	x27, x1, x28
    10bc:	mov	x26, x25
    10c0:	ldr	x21, [x27, #8]
    10c4:	mov	w4, w21
    10c8:	cbz	x0, 1100 <_ZNK4llvm13StringMatcher4EmitEjb+0xc0>
    10cc:	nop
    10d0:	ldr	w2, [x0, #32]
    10d4:	cmp	w4, w2
    10d8:	b.hi	11a4 <_ZNK4llvm13StringMatcher4EmitEjb+0x164>  // b.pmore
    10dc:	mov	x26, x0
    10e0:	ldr	x0, [x0, #16]
    10e4:	cbnz	x0, 10d0 <_ZNK4llvm13StringMatcher4EmitEjb+0x90>
    10e8:	cmp	x26, x25
    10ec:	b.eq	1100 <_ZNK4llvm13StringMatcher4EmitEjb+0xc0>  // b.none
    10f0:	ldr	w0, [x26, #32]
    10f4:	add	x24, x26, #0x28
    10f8:	cmp	w21, w0
    10fc:	b.cs	1170 <_ZNK4llvm13StringMatcher4EmitEjb+0x130>  // b.hs, b.nlast
    1100:	mov	x0, #0x40                  	// #64
    1104:	bl	0 <_Znwm>
    1108:	mov	x1, x26
    110c:	mov	x26, x0
    1110:	mov	x24, x0
    1114:	add	x2, x0, #0x20
    1118:	mov	x0, x20
    111c:	str	w21, [x26, #32]
    1120:	stp	xzr, xzr, [x24, #40]!
    1124:	str	xzr, [x24, #16]
    1128:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    112c:	mov	x21, x0
    1130:	mov	x2, x1
    1134:	cbz	x1, 11b0 <_ZNK4llvm13StringMatcher4EmitEjb+0x170>
    1138:	cmp	x0, #0x0
    113c:	cset	w0, ne  // ne = any
    1140:	cmp	x1, x25
    1144:	csinc	w0, w0, wzr, ne  // ne = any
    1148:	cbz	w0, 1688 <_ZNK4llvm13StringMatcher4EmitEjb+0x648>
    114c:	mov	x3, x25
    1150:	mov	x1, x26
    1154:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
    1158:	ldr	x0, [sp, #168]
    115c:	add	x0, x0, #0x1
    1160:	str	x0, [sp, #168]
    1164:	ldr	x0, [x19, #16]
    1168:	ldr	x1, [x0]
    116c:	add	x27, x1, x28
    1170:	ldp	x2, x0, [x24, #8]
    1174:	cmp	x2, x0
    1178:	b.eq	11d0 <_ZNK4llvm13StringMatcher4EmitEjb+0x190>  // b.none
    117c:	str	x27, [x2], #8
    1180:	add	x28, x28, #0x40
    1184:	ldr	x0, [sp, #104]
    1188:	str	x2, [x24, #8]
    118c:	cmp	x0, x28
    1190:	b.eq	1248 <_ZNK4llvm13StringMatcher4EmitEjb+0x208>  // b.none
    1194:	ldr	x1, [x19, #16]
    1198:	ldr	x0, [sp, #144]
    119c:	ldr	x1, [x1]
    11a0:	b	10b8 <_ZNK4llvm13StringMatcher4EmitEjb+0x78>
    11a4:	ldr	x0, [x0, #24]
    11a8:	cbnz	x0, 10d0 <_ZNK4llvm13StringMatcher4EmitEjb+0x90>
    11ac:	b	10e8 <_ZNK4llvm13StringMatcher4EmitEjb+0xa8>
    11b0:	ldr	x0, [x26, #40]
    11b4:	cbz	x0, 11bc <_ZNK4llvm13StringMatcher4EmitEjb+0x17c>
    11b8:	bl	0 <_ZdlPv>
    11bc:	mov	x0, x26
    11c0:	add	x24, x21, #0x28
    11c4:	mov	x26, x21
    11c8:	bl	0 <_ZdlPv>
    11cc:	b	1164 <_ZNK4llvm13StringMatcher4EmitEjb+0x124>
    11d0:	ldr	x1, [x26, #40]
    11d4:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    11d8:	sub	x21, x2, x1
    11dc:	cmp	x0, x21, asr #3
    11e0:	asr	x0, x21, #3
    11e4:	b.eq	1778 <_ZNK4llvm13StringMatcher4EmitEjb+0x738>  // b.none
    11e8:	cbz	x0, 16ac <_ZNK4llvm13StringMatcher4EmitEjb+0x66c>
    11ec:	cmp	x0, x0, lsl #1
    11f0:	mov	x5, #0x7ffffffffffffff8    	// #9223372036854775800
    11f4:	lsl	x0, x0, #1
    11f8:	b.ls	169c <_ZNK4llvm13StringMatcher4EmitEjb+0x65c>  // b.plast
    11fc:	mov	x0, x5
    1200:	stp	x5, x1, [sp, #112]
    1204:	bl	0 <_Znwm>
    1208:	ldp	x5, x1, [sp, #112]
    120c:	mov	x26, x0
    1210:	add	x5, x0, x5
    1214:	str	x27, [x26, x21]
    1218:	add	x27, x21, #0x8
    121c:	cmp	x21, #0x0
    1220:	add	x27, x26, x27
    1224:	b.gt	1660 <_ZNK4llvm13StringMatcher4EmitEjb+0x620>
    1228:	cbnz	x1, 1674 <_ZNK4llvm13StringMatcher4EmitEjb+0x634>
    122c:	ldr	x0, [sp, #104]
    1230:	stp	x26, x27, [x24]
    1234:	add	x28, x28, #0x40
    1238:	str	x5, [x24, #16]
    123c:	cmp	x0, x28
    1240:	b.ne	1194 <_ZNK4llvm13StringMatcher4EmitEjb+0x154>  // b.any
    1244:	nop
    1248:	add	w21, w22, #0x1
    124c:	ldr	x0, [x19, #24]
    1250:	lsl	w21, w21, #1
    1254:	mov	w1, w21
    1258:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    125c:	mov	x24, x0
    1260:	ldp	x1, x2, [x0, #16]
    1264:	sub	x1, x1, x2
    1268:	cmp	x1, #0x7
    126c:	b.ls	16b4 <_ZNK4llvm13StringMatcher4EmitEjb+0x674>  // b.plast
    1270:	mov	x0, #0x7773                	// #30579
    1274:	movk	x0, #0x7469, lsl #16
    1278:	movk	x0, #0x6863, lsl #32
    127c:	movk	x0, #0x2820, lsl #48
    1280:	str	x0, [x2]
    1284:	ldp	x1, x25, [x19]
    1288:	ldr	x0, [x24, #24]
    128c:	ldr	x3, [x24, #16]
    1290:	add	x0, x0, #0x8
    1294:	str	x0, [x24, #24]
    1298:	sub	x3, x3, x0
    129c:	cmp	x3, x25
    12a0:	b.cc	16e0 <_ZNK4llvm13StringMatcher4EmitEjb+0x6a0>  // b.lo, b.ul, b.last
    12a4:	cbnz	x25, 175c <_ZNK4llvm13StringMatcher4EmitEjb+0x71c>
    12a8:	cmp	x3, #0xa
    12ac:	b.ls	1700 <_ZNK4llvm13StringMatcher4EmitEjb+0x6c0>  // b.plast
    12b0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12b4:	add	x1, x1, #0x0
    12b8:	ldr	x2, [x1]
    12bc:	str	x2, [x0]
    12c0:	ldur	w1, [x1, #7]
    12c4:	stur	w1, [x0, #7]
    12c8:	mov	w1, w21
    12cc:	ldr	x0, [x24, #24]
    12d0:	add	x0, x0, #0xb
    12d4:	str	x0, [x24, #24]
    12d8:	ldr	x0, [x19, #24]
    12dc:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    12e0:	mov	x1, x0
    12e4:	ldp	x2, x3, [x0, #16]
    12e8:	sub	x2, x2, x3
    12ec:	cmp	x2, #0xf
    12f0:	b.ls	1734 <_ZNK4llvm13StringMatcher4EmitEjb+0x6f4>  // b.plast
    12f4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12f8:	add	x0, x0, #0x0
    12fc:	ldp	x4, x5, [x0]
    1300:	stp	x4, x5, [x3]
    1304:	ldr	x0, [x1, #24]
    1308:	add	x0, x0, #0x10
    130c:	str	x0, [x1, #24]
    1310:	ldr	x25, [sp, #152]
    1314:	add	x0, x20, #0x8
    1318:	cmp	x25, x0
    131c:	b.eq	1548 <_ZNK4llvm13StringMatcher4EmitEjb+0x508>  // b.none
    1320:	adrp	x24, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1324:	adrp	x27, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1328:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    132c:	add	x24, x24, #0x0
    1330:	add	x0, x0, #0x0
    1334:	add	x27, x27, #0x0
    1338:	add	w28, w21, #0x2
    133c:	adrp	x26, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1340:	str	x0, [sp, #104]
    1344:	b	13d0 <_ZNK4llvm13StringMatcher4EmitEjb+0x390>
    1348:	cmp	x2, x0
    134c:	b.ne	1634 <_ZNK4llvm13StringMatcher4EmitEjb+0x5f4>  // b.any
    1350:	mov	x0, x1
    1354:	mov	x2, #0x1                   	// #1
    1358:	mov	x1, x27
    135c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1360:	mov	x1, x0
    1364:	ldp	x0, x2, [x0, #16]
    1368:	sub	x0, x0, x2
    136c:	cmp	x0, #0xa
    1370:	b.ls	14b8 <_ZNK4llvm13StringMatcher4EmitEjb+0x478>  // b.plast
    1374:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1378:	add	x0, x0, #0x0
    137c:	mov	w4, w23
    1380:	ldr	x3, [x0]
    1384:	str	x3, [x2]
    1388:	ldur	w0, [x0, #7]
    138c:	mov	w3, w22
    1390:	stur	w0, [x2, #7]
    1394:	mov	w2, #0x0                   	// #0
    1398:	ldr	x0, [x1, #24]
    139c:	add	x0, x0, #0xb
    13a0:	str	x0, [x1, #24]
    13a4:	add	x1, x25, #0x28
    13a8:	mov	x0, x19
    13ac:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    13b0:	tst	w0, #0xff
    13b4:	b.ne	14ec <_ZNK4llvm13StringMatcher4EmitEjb+0x4ac>  // b.any
    13b8:	mov	x0, x25
    13bc:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    13c0:	add	x1, x20, #0x8
    13c4:	mov	x25, x0
    13c8:	cmp	x0, x1
    13cc:	b.eq	1548 <_ZNK4llvm13StringMatcher4EmitEjb+0x508>  // b.none
    13d0:	ldr	x0, [x19, #24]
    13d4:	mov	w1, w21
    13d8:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    13dc:	mov	x2, x0
    13e0:	ldp	x1, x3, [x0, #16]
    13e4:	sub	x1, x1, x3
    13e8:	cmp	x1, #0x4
    13ec:	b.ls	1620 <_ZNK4llvm13StringMatcher4EmitEjb+0x5e0>  // b.plast
    13f0:	ldrb	w0, [x24, #4]
    13f4:	ldr	w1, [x24]
    13f8:	str	w1, [x3]
    13fc:	strb	w0, [x3, #4]
    1400:	ldr	x0, [x2, #24]
    1404:	add	x0, x0, #0x5
    1408:	str	x0, [x2, #24]
    140c:	ldr	w1, [x25, #32]
    1410:	mov	x0, x2
    1414:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1418:	mov	x2, x0
    141c:	ldp	x1, x3, [x0, #16]
    1420:	sub	x1, x1, x3
    1424:	cmp	x1, #0x5
    1428:	b.ls	160c <_ZNK4llvm13StringMatcher4EmitEjb+0x5cc>  // b.plast
    142c:	add	x0, x26, #0x0
    1430:	ldr	w1, [x0]
    1434:	ldrh	w0, [x0, #4]
    1438:	str	w1, [x3]
    143c:	strh	w0, [x3, #4]
    1440:	ldr	x0, [x2, #24]
    1444:	add	x0, x0, #0x6
    1448:	str	x0, [x2, #24]
    144c:	ldp	x3, x1, [x25, #40]
    1450:	mov	x0, x2
    1454:	sub	x1, x1, x3
    1458:	asr	x1, x1, #3
    145c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1460:	ldp	x2, x3, [x0, #16]
    1464:	mov	x1, x0
    1468:	sub	x2, x2, x3
    146c:	cmp	x2, #0x6
    1470:	b.ls	15f0 <_ZNK4llvm13StringMatcher4EmitEjb+0x5b0>  // b.plast
    1474:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1478:	add	x0, x0, #0x0
    147c:	ldr	w2, [x0]
    1480:	ldur	w0, [x0, #3]
    1484:	str	w2, [x3]
    1488:	stur	w0, [x3, #3]
    148c:	ldr	x2, [x1, #24]
    1490:	add	x2, x2, #0x7
    1494:	str	x2, [x1, #24]
    1498:	ldp	x4, x3, [x25, #40]
    149c:	ldr	x0, [x1, #16]
    14a0:	sub	x3, x3, x4
    14a4:	cmp	x3, #0x8
    14a8:	b.ne	1348 <_ZNK4llvm13StringMatcher4EmitEjb+0x308>  // b.any
    14ac:	sub	x0, x0, x2
    14b0:	cmp	x0, #0xa
    14b4:	b.hi	1374 <_ZNK4llvm13StringMatcher4EmitEjb+0x334>  // b.pmore
    14b8:	mov	x0, x1
    14bc:	mov	x2, #0xb                   	// #11
    14c0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    14c4:	add	x1, x1, #0x0
    14c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    14cc:	mov	w4, w23
    14d0:	mov	w3, w22
    14d4:	add	x1, x25, #0x28
    14d8:	mov	x0, x19
    14dc:	mov	w2, #0x0                   	// #0
    14e0:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    14e4:	tst	w0, #0xff
    14e8:	b.eq	13b8 <_ZNK4llvm13StringMatcher4EmitEjb+0x378>  // b.none
    14ec:	ldr	x0, [x19, #24]
    14f0:	mov	w1, w28
    14f4:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    14f8:	mov	x1, x0
    14fc:	ldp	x2, x3, [x0, #16]
    1500:	sub	x2, x2, x3
    1504:	cmp	x2, #0x6
    1508:	b.ls	1650 <_ZNK4llvm13StringMatcher4EmitEjb+0x610>  // b.plast
    150c:	ldr	x2, [sp, #104]
    1510:	ldr	w0, [x2]
    1514:	str	w0, [x3]
    1518:	ldur	w0, [x2, #3]
    151c:	stur	w0, [x3, #3]
    1520:	ldr	x0, [x1, #24]
    1524:	add	x0, x0, #0x7
    1528:	str	x0, [x1, #24]
    152c:	mov	x0, x25
    1530:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    1534:	mov	x25, x0
    1538:	add	x1, x20, #0x8
    153c:	cmp	x0, x1
    1540:	b.ne	13d0 <_ZNK4llvm13StringMatcher4EmitEjb+0x390>  // b.any
    1544:	nop
    1548:	ldr	x0, [x19, #24]
    154c:	mov	w1, w21
    1550:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1554:	mov	x1, x0
    1558:	ldp	x2, x3, [x0, #16]
    155c:	sub	x2, x2, x3
    1560:	cmp	x2, #0x1
    1564:	b.ls	1748 <_ZNK4llvm13StringMatcher4EmitEjb+0x708>  // b.plast
    1568:	mov	w0, #0xa7d                 	// #2685
    156c:	strh	w0, [x3]
    1570:	ldr	x0, [x1, #24]
    1574:	add	x0, x0, #0x2
    1578:	str	x0, [x1, #24]
    157c:	ldr	x19, [sp, #144]
    1580:	cbz	x19, 15d4 <_ZNK4llvm13StringMatcher4EmitEjb+0x594>
    1584:	ldr	x1, [x19, #24]
    1588:	mov	x0, x20
    158c:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1590:	ldr	x0, [x19, #40]
    1594:	ldr	x21, [x19, #16]
    1598:	cbz	x0, 15c8 <_ZNK4llvm13StringMatcher4EmitEjb+0x588>
    159c:	bl	0 <_ZdlPv>
    15a0:	mov	x0, x19
    15a4:	bl	0 <_ZdlPv>
    15a8:	cbz	x21, 15d4 <_ZNK4llvm13StringMatcher4EmitEjb+0x594>
    15ac:	mov	x19, x21
    15b0:	mov	x0, x20
    15b4:	ldr	x1, [x19, #24]
    15b8:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    15bc:	ldr	x0, [x19, #40]
    15c0:	ldr	x21, [x19, #16]
    15c4:	cbnz	x0, 159c <_ZNK4llvm13StringMatcher4EmitEjb+0x55c>
    15c8:	mov	x0, x19
    15cc:	bl	0 <_ZdlPv>
    15d0:	cbnz	x21, 15ac <_ZNK4llvm13StringMatcher4EmitEjb+0x56c>
    15d4:	ldp	x23, x24, [sp, #48]
    15d8:	ldp	x25, x26, [sp, #64]
    15dc:	ldp	x27, x28, [sp, #80]
    15e0:	ldp	x19, x20, [sp, #16]
    15e4:	ldp	x21, x22, [sp, #32]
    15e8:	ldp	x29, x30, [sp], #176
    15ec:	ret
    15f0:	mov	x2, #0x7                   	// #7
    15f4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    15f8:	add	x1, x1, #0x0
    15fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1600:	mov	x1, x0
    1604:	ldr	x2, [x0, #24]
    1608:	b	1498 <_ZNK4llvm13StringMatcher4EmitEjb+0x458>
    160c:	mov	x2, #0x6                   	// #6
    1610:	add	x1, x26, #0x0
    1614:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1618:	mov	x2, x0
    161c:	b	144c <_ZNK4llvm13StringMatcher4EmitEjb+0x40c>
    1620:	mov	x2, #0x5                   	// #5
    1624:	mov	x1, x24
    1628:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    162c:	mov	x2, x0
    1630:	b	140c <_ZNK4llvm13StringMatcher4EmitEjb+0x3cc>
    1634:	mov	w0, #0x73                  	// #115
    1638:	strb	w0, [x2]
    163c:	ldp	x0, x2, [x1, #16]
    1640:	add	x2, x2, #0x1
    1644:	str	x2, [x1, #24]
    1648:	sub	x0, x0, x2
    164c:	b	14b0 <_ZNK4llvm13StringMatcher4EmitEjb+0x470>
    1650:	ldr	x1, [sp, #104]
    1654:	mov	x2, #0x7                   	// #7
    1658:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    165c:	b	13b8 <_ZNK4llvm13StringMatcher4EmitEjb+0x378>
    1660:	mov	x2, x21
    1664:	mov	x0, x26
    1668:	stp	x1, x5, [sp, #112]
    166c:	bl	0 <memmove>
    1670:	ldp	x1, x5, [sp, #112]
    1674:	mov	x0, x1
    1678:	str	x5, [sp, #112]
    167c:	bl	0 <_ZdlPv>
    1680:	ldr	x5, [sp, #112]
    1684:	b	122c <_ZNK4llvm13StringMatcher4EmitEjb+0x1ec>
    1688:	ldr	w0, [x1, #32]
    168c:	ldr	w1, [x26, #32]
    1690:	cmp	w1, w0
    1694:	cset	w0, cc  // cc = lo, ul, last
    1698:	b	114c <_ZNK4llvm13StringMatcher4EmitEjb+0x10c>
    169c:	cbnz	x0, 1784 <_ZNK4llvm13StringMatcher4EmitEjb+0x744>
    16a0:	mov	x5, #0x0                   	// #0
    16a4:	mov	x26, #0x0                   	// #0
    16a8:	b	1214 <_ZNK4llvm13StringMatcher4EmitEjb+0x1d4>
    16ac:	mov	x5, #0x8                   	// #8
    16b0:	b	11fc <_ZNK4llvm13StringMatcher4EmitEjb+0x1bc>
    16b4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    16b8:	mov	x2, #0x8                   	// #8
    16bc:	add	x1, x1, #0x0
    16c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    16c4:	mov	x24, x0
    16c8:	ldp	x1, x25, [x19]
    16cc:	ldr	x3, [x24, #16]
    16d0:	ldr	x0, [x0, #24]
    16d4:	sub	x3, x3, x0
    16d8:	cmp	x3, x25
    16dc:	b.cs	12a4 <_ZNK4llvm13StringMatcher4EmitEjb+0x264>  // b.hs, b.nlast
    16e0:	mov	x0, x24
    16e4:	mov	x2, x25
    16e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    16ec:	mov	x24, x0
    16f0:	ldp	x3, x0, [x0, #16]
    16f4:	sub	x3, x3, x0
    16f8:	cmp	x3, #0xa
    16fc:	b.hi	12b0 <_ZNK4llvm13StringMatcher4EmitEjb+0x270>  // b.pmore
    1700:	mov	x2, #0xb                   	// #11
    1704:	mov	x0, x24
    1708:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    170c:	add	x1, x1, #0x0
    1710:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1714:	ldr	x0, [x19, #24]
    1718:	mov	w1, w21
    171c:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1720:	mov	x1, x0
    1724:	ldp	x2, x3, [x0, #16]
    1728:	sub	x2, x2, x3
    172c:	cmp	x2, #0xf
    1730:	b.hi	12f4 <_ZNK4llvm13StringMatcher4EmitEjb+0x2b4>  // b.pmore
    1734:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1738:	mov	x2, #0x10                  	// #16
    173c:	add	x1, x1, #0x0
    1740:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1744:	b	1310 <_ZNK4llvm13StringMatcher4EmitEjb+0x2d0>
    1748:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    174c:	mov	x2, #0x2                   	// #2
    1750:	add	x1, x1, #0x0
    1754:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1758:	b	157c <_ZNK4llvm13StringMatcher4EmitEjb+0x53c>
    175c:	mov	x2, x25
    1760:	bl	0 <memcpy>
    1764:	ldp	x3, x0, [x24, #16]
    1768:	add	x0, x0, x25
    176c:	str	x0, [x24, #24]
    1770:	sub	x3, x3, x0
    1774:	b	12a8 <_ZNK4llvm13StringMatcher4EmitEjb+0x268>
    1778:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    177c:	add	x0, x0, #0x0
    1780:	bl	0 <_ZSt20__throw_length_errorPKc>
    1784:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
    1788:	cmp	x0, x2
    178c:	csel	x0, x0, x2, ls  // ls = plast
    1790:	lsl	x5, x0, #3
    1794:	b	11fc <_ZNK4llvm13StringMatcher4EmitEjb+0x1bc>

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	cbz	x1, 84 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x84>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x21
  24:	bl	0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  28:	ldr	x1, [x19, #40]
  2c:	mov	x0, x19
  30:	ldr	x20, [x19, #16]
  34:	cbz	x1, 6c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x6c>
  38:	mov	x0, x1
  3c:	bl	0 <_ZdlPv>
  40:	mov	x0, x19
  44:	bl	0 <_ZdlPv>
  48:	cbz	x20, 74 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x74>
  4c:	mov	x19, x20
  50:	mov	x0, x21
  54:	ldr	x1, [x19, #24]
  58:	bl	0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  5c:	ldr	x1, [x19, #40]
  60:	mov	x0, x19
  64:	ldr	x20, [x19, #16]
  68:	cbnz	x1, 38 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x38>
  6c:	bl	0 <_ZdlPv>
  70:	cbnz	x20, 4c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x4c>
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	ret

Disassembly of section .text._ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x58>

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	cbz	x1, 84 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x84>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x21
  24:	bl	0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  28:	ldr	x1, [x19, #40]
  2c:	mov	x0, x19
  30:	ldr	x20, [x19, #16]
  34:	cbz	x1, 6c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x6c>
  38:	mov	x0, x1
  3c:	bl	0 <_ZdlPv>
  40:	mov	x0, x19
  44:	bl	0 <_ZdlPv>
  48:	cbz	x20, 74 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x74>
  4c:	mov	x19, x20
  50:	mov	x0, x21
  54:	ldr	x1, [x19, #24]
  58:	bl	0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  5c:	ldr	x1, [x19, #40]
  60:	mov	x0, x19
  64:	ldr	x20, [x19, #16]
  68:	cbnz	x1, 38 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x38>
  6c:	bl	0 <_ZdlPv>
  70:	cbnz	x20, 4c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x4c>
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	ret

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x22, x2
  1c:	str	x23, [sp, #48]
  20:	add	x23, x0, #0x8
  24:	cmp	x23, x1
  28:	b.eq	c8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xc8>  // b.none
  2c:	ldrb	w22, [x2]
  30:	ldrb	w0, [x1, #32]
  34:	cmp	w22, w0
  38:	b.cs	8c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x8c>  // b.hs, b.nlast
  3c:	ldr	x19, [x21, #24]
  40:	mov	x0, x19
  44:	mov	x1, x19
  48:	cmp	x19, x20
  4c:	b.eq	78 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x78>  // b.none
  50:	mov	x0, x20
  54:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  58:	mov	x1, x0
  5c:	ldrb	w0, [x0, #32]
  60:	cmp	w0, w22
  64:	b.cs	188 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x188>  // b.hs, b.nlast
  68:	ldr	x2, [x1, #24]
  6c:	cmp	x2, #0x0
  70:	csel	x0, x20, xzr, ne  // ne = any
  74:	csel	x1, x1, x20, eq  // eq = none
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x21, x22, [sp, #32]
  80:	ldr	x23, [sp, #48]
  84:	ldp	x29, x30, [sp], #64
  88:	ret
  8c:	b.ls	154 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x154>  // b.plast
  90:	ldr	x1, [x21, #32]
  94:	cmp	x1, x20
  98:	b.eq	170 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x170>  // b.none
  9c:	mov	x0, x20
  a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  a4:	mov	x1, x0
  a8:	ldrb	w0, [x0, #32]
  ac:	cmp	w0, w22
  b0:	b.ls	234 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x234>  // b.plast
  b4:	ldr	x2, [x20, #24]
  b8:	cmp	x2, #0x0
  bc:	csel	x0, x1, xzr, ne  // ne = any
  c0:	csel	x1, x1, x20, ne  // ne = any
  c4:	b	78 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x78>
  c8:	ldr	x0, [x0, #40]
  cc:	cbz	x0, e4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xe4>
  d0:	ldr	x1, [x21, #32]
  d4:	ldrb	w0, [x2]
  d8:	ldrb	w2, [x1, #32]
  dc:	cmp	w2, w0
  e0:	b.cc	170 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x170>  // b.lo, b.ul, b.last
  e4:	ldr	x19, [x21, #16]
  e8:	cbz	x19, 1c8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1c8>
  ec:	ldrb	w4, [x22]
  f0:	mov	w3, #0x1                   	// #1
  f4:	ldrb	w2, [x19, #32]
  f8:	cmp	w4, w2
  fc:	b.cs	11c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x11c>  // b.hs, b.nlast
 100:	ldr	x0, [x19, #16]
 104:	cbz	x0, 128 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x128>
 108:	mov	x19, x0
 10c:	mov	w3, #0x1                   	// #1
 110:	ldrb	w2, [x19, #32]
 114:	cmp	w4, w2
 118:	b.cc	100 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x100>  // b.lo, b.ul, b.last
 11c:	ldr	x0, [x19, #24]
 120:	mov	w3, #0x0                   	// #0
 124:	cbnz	x0, 108 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x108>
 128:	mov	x1, x19
 12c:	cbnz	w3, 1cc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1cc>
 130:	cmp	w2, w4
 134:	csel	x19, x19, xzr, cs  // cs = hs, nlast
 138:	csel	x1, x1, xzr, cc  // cc = lo, ul, last
 13c:	mov	x0, x19
 140:	ldp	x19, x20, [sp, #16]
 144:	ldp	x21, x22, [sp, #32]
 148:	ldr	x23, [sp, #48]
 14c:	ldp	x29, x30, [sp], #64
 150:	ret
 154:	mov	x0, x1
 158:	mov	x1, #0x0                   	// #0
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldr	x23, [sp, #48]
 168:	ldp	x29, x30, [sp], #64
 16c:	ret
 170:	mov	x0, #0x0                   	// #0
 174:	ldp	x19, x20, [sp, #16]
 178:	ldp	x21, x22, [sp, #32]
 17c:	ldr	x23, [sp, #48]
 180:	ldp	x29, x30, [sp], #64
 184:	ret
 188:	ldr	x20, [x21, #16]
 18c:	cbz	x20, 210 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x210>
 190:	ldrb	w2, [x20, #32]
 194:	mov	w3, #0x1                   	// #1
 198:	cmp	w22, w2
 19c:	b.cs	1bc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1bc>  // b.hs, b.nlast
 1a0:	ldr	x0, [x20, #16]
 1a4:	cbz	x0, 1f4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f4>
 1a8:	mov	x20, x0
 1ac:	mov	w3, #0x1                   	// #1
 1b0:	ldrb	w2, [x20, #32]
 1b4:	cmp	w22, w2
 1b8:	b.cc	1a0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1a0>  // b.lo, b.ul, b.last
 1bc:	mov	w3, #0x0                   	// #0
 1c0:	ldr	x0, [x20, #24]
 1c4:	b	1a4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1a4>
 1c8:	mov	x19, x20
 1cc:	ldr	x0, [x21, #24]
 1d0:	cmp	x0, x19
 1d4:	b.eq	294 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x294>  // b.none
 1d8:	mov	x0, x19
 1dc:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1e0:	mov	x1, x19
 1e4:	ldrb	w4, [x22]
 1e8:	ldrb	w2, [x0, #32]
 1ec:	mov	x19, x0
 1f0:	b	130 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x130>
 1f4:	mov	x1, x20
 1f8:	cbnz	w3, 214 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x214>
 1fc:	cmp	w22, w2
 200:	csel	x20, x20, xzr, ls  // ls = plast
 204:	csel	x1, x1, xzr, hi  // hi = pmore
 208:	mov	x0, x20
 20c:	b	78 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x78>
 210:	mov	x20, x23
 214:	cmp	x19, x20
 218:	b.eq	2cc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x2cc>  // b.none
 21c:	mov	x0, x20
 220:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 224:	mov	x1, x20
 228:	ldrb	w2, [x0, #32]
 22c:	mov	x20, x0
 230:	b	1fc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1fc>
 234:	ldr	x19, [x21, #16]
 238:	cbz	x19, 2a4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x2a4>
 23c:	ldrb	w2, [x19, #32]
 240:	mov	w3, #0x1                   	// #1
 244:	cmp	w22, w2
 248:	b.cs	26c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x26c>  // b.hs, b.nlast
 24c:	nop
 250:	ldr	x0, [x19, #16]
 254:	cbz	x0, 278 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x278>
 258:	mov	x19, x0
 25c:	mov	w3, #0x1                   	// #1
 260:	ldrb	w2, [x19, #32]
 264:	cmp	w22, w2
 268:	b.cc	250 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x250>  // b.lo, b.ul, b.last
 26c:	mov	w3, #0x0                   	// #0
 270:	ldr	x0, [x19, #24]
 274:	b	254 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x254>
 278:	mov	x1, x19
 27c:	cbnz	w3, 2a8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x2a8>
 280:	cmp	w22, w2
 284:	csel	x19, x19, xzr, ls  // ls = plast
 288:	csel	x1, x1, xzr, hi  // hi = pmore
 28c:	mov	x0, x19
 290:	b	140 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x140>
 294:	mov	x1, x19
 298:	mov	x19, #0x0                   	// #0
 29c:	mov	x0, x19
 2a0:	b	140 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x140>
 2a4:	mov	x19, x23
 2a8:	ldr	x0, [x21, #24]
 2ac:	cmp	x0, x19
 2b0:	b.eq	294 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x294>  // b.none
 2b4:	mov	x0, x19
 2b8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 2bc:	mov	x1, x19
 2c0:	ldrb	w2, [x0, #32]
 2c4:	mov	x19, x0
 2c8:	b	280 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x280>
 2cc:	mov	x1, x20
 2d0:	mov	x20, #0x0                   	// #0
 2d4:	mov	x0, x20
 2d8:	b	78 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x78>

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x22, x2
  1c:	str	x23, [sp, #48]
  20:	add	x23, x0, #0x8
  24:	cmp	x23, x1
  28:	b.eq	c8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xc8>  // b.none
  2c:	ldr	w0, [x1, #32]
  30:	ldr	w22, [x2]
  34:	cmp	w22, w0
  38:	b.cs	8c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x8c>  // b.hs, b.nlast
  3c:	ldr	x19, [x21, #24]
  40:	mov	x0, x19
  44:	mov	x1, x19
  48:	cmp	x19, x20
  4c:	b.eq	78 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x78>  // b.none
  50:	mov	x0, x20
  54:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  58:	mov	x1, x0
  5c:	ldr	w0, [x0, #32]
  60:	cmp	w22, w0
  64:	b.ls	188 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x188>  // b.plast
  68:	ldr	x2, [x1, #24]
  6c:	cmp	x2, #0x0
  70:	csel	x0, x20, xzr, ne  // ne = any
  74:	csel	x1, x1, x20, eq  // eq = none
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x21, x22, [sp, #32]
  80:	ldr	x23, [sp, #48]
  84:	ldp	x29, x30, [sp], #64
  88:	ret
  8c:	b.ls	154 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x154>  // b.plast
  90:	ldr	x1, [x21, #32]
  94:	cmp	x1, x20
  98:	b.eq	170 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x170>  // b.none
  9c:	mov	x0, x20
  a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  a4:	mov	x1, x0
  a8:	ldr	w0, [x0, #32]
  ac:	cmp	w22, w0
  b0:	b.cs	234 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x234>  // b.hs, b.nlast
  b4:	ldr	x2, [x20, #24]
  b8:	cmp	x2, #0x0
  bc:	csel	x0, x1, xzr, ne  // ne = any
  c0:	csel	x1, x1, x20, ne  // ne = any
  c4:	b	78 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x78>
  c8:	ldr	x0, [x0, #40]
  cc:	cbz	x0, e4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xe4>
  d0:	ldr	x1, [x21, #32]
  d4:	ldr	w0, [x2]
  d8:	ldr	w2, [x1, #32]
  dc:	cmp	w2, w0
  e0:	b.cc	170 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x170>  // b.lo, b.ul, b.last
  e4:	ldr	x19, [x21, #16]
  e8:	cbz	x19, 1c8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1c8>
  ec:	ldr	w4, [x22]
  f0:	mov	w3, #0x1                   	// #1
  f4:	ldr	w2, [x19, #32]
  f8:	cmp	w4, w2
  fc:	b.cs	11c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x11c>  // b.hs, b.nlast
 100:	ldr	x0, [x19, #16]
 104:	cbz	x0, 128 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x128>
 108:	mov	x19, x0
 10c:	mov	w3, #0x1                   	// #1
 110:	ldr	w2, [x19, #32]
 114:	cmp	w4, w2
 118:	b.cc	100 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x100>  // b.lo, b.ul, b.last
 11c:	ldr	x0, [x19, #24]
 120:	mov	w3, #0x0                   	// #0
 124:	cbnz	x0, 108 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x108>
 128:	mov	x1, x19
 12c:	cbnz	w3, 1cc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1cc>
 130:	cmp	w2, w4
 134:	csel	x19, x19, xzr, cs  // cs = hs, nlast
 138:	csel	x1, x1, xzr, cc  // cc = lo, ul, last
 13c:	mov	x0, x19
 140:	ldp	x19, x20, [sp, #16]
 144:	ldp	x21, x22, [sp, #32]
 148:	ldr	x23, [sp, #48]
 14c:	ldp	x29, x30, [sp], #64
 150:	ret
 154:	mov	x0, x1
 158:	mov	x1, #0x0                   	// #0
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldr	x23, [sp, #48]
 168:	ldp	x29, x30, [sp], #64
 16c:	ret
 170:	mov	x0, #0x0                   	// #0
 174:	ldp	x19, x20, [sp, #16]
 178:	ldp	x21, x22, [sp, #32]
 17c:	ldr	x23, [sp, #48]
 180:	ldp	x29, x30, [sp], #64
 184:	ret
 188:	ldr	x20, [x21, #16]
 18c:	cbz	x20, 210 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x210>
 190:	ldr	w2, [x20, #32]
 194:	mov	w3, #0x1                   	// #1
 198:	cmp	w22, w2
 19c:	b.cs	1bc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1bc>  // b.hs, b.nlast
 1a0:	ldr	x0, [x20, #16]
 1a4:	cbz	x0, 1f4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f4>
 1a8:	mov	x20, x0
 1ac:	mov	w3, #0x1                   	// #1
 1b0:	ldr	w2, [x20, #32]
 1b4:	cmp	w22, w2
 1b8:	b.cc	1a0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1a0>  // b.lo, b.ul, b.last
 1bc:	mov	w3, #0x0                   	// #0
 1c0:	ldr	x0, [x20, #24]
 1c4:	b	1a4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1a4>
 1c8:	mov	x19, x20
 1cc:	ldr	x0, [x21, #24]
 1d0:	cmp	x0, x19
 1d4:	b.eq	294 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x294>  // b.none
 1d8:	mov	x0, x19
 1dc:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1e0:	mov	x1, x19
 1e4:	ldr	w2, [x0, #32]
 1e8:	ldr	w4, [x22]
 1ec:	mov	x19, x0
 1f0:	b	130 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x130>
 1f4:	mov	x1, x20
 1f8:	cbnz	w3, 214 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x214>
 1fc:	cmp	w22, w2
 200:	csel	x20, x20, xzr, ls  // ls = plast
 204:	csel	x1, x1, xzr, hi  // hi = pmore
 208:	mov	x0, x20
 20c:	b	78 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x78>
 210:	mov	x20, x23
 214:	cmp	x19, x20
 218:	b.eq	2cc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x2cc>  // b.none
 21c:	mov	x0, x20
 220:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 224:	mov	x1, x20
 228:	ldr	w2, [x0, #32]
 22c:	mov	x20, x0
 230:	b	1fc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1fc>
 234:	ldr	x19, [x21, #16]
 238:	cbz	x19, 2a4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x2a4>
 23c:	ldr	w2, [x19, #32]
 240:	mov	w3, #0x1                   	// #1
 244:	cmp	w22, w2
 248:	b.cs	26c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x26c>  // b.hs, b.nlast
 24c:	nop
 250:	ldr	x0, [x19, #16]
 254:	cbz	x0, 278 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x278>
 258:	mov	x19, x0
 25c:	mov	w3, #0x1                   	// #1
 260:	ldr	w2, [x19, #32]
 264:	cmp	w22, w2
 268:	b.cc	250 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x250>  // b.lo, b.ul, b.last
 26c:	mov	w3, #0x0                   	// #0
 270:	ldr	x0, [x19, #24]
 274:	b	254 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x254>
 278:	mov	x1, x19
 27c:	cbnz	w3, 2a8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x2a8>
 280:	cmp	w22, w2
 284:	csel	x19, x19, xzr, ls  // ls = plast
 288:	csel	x1, x1, xzr, hi  // hi = pmore
 28c:	mov	x0, x19
 290:	b	140 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x140>
 294:	mov	x1, x19
 298:	mov	x19, #0x0                   	// #0
 29c:	mov	x0, x19
 2a0:	b	140 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x140>
 2a4:	mov	x19, x23
 2a8:	ldr	x0, [x21, #24]
 2ac:	cmp	x0, x19
 2b0:	b.eq	294 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x294>  // b.none
 2b4:	mov	x0, x19
 2b8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 2bc:	mov	x1, x19
 2c0:	ldr	w2, [x0, #32]
 2c4:	mov	x19, x0
 2c8:	b	280 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x280>
 2cc:	mov	x1, x20
 2d0:	mov	x20, #0x0                   	// #0
 2d4:	mov	x0, x20
 2d8:	b	78 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x78>

TableGenBackend.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x24, x1
  10:	mov	x23, x3
  14:	ldr	x1, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x0
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x22, x4
  28:	and	w21, w2, #0xff
  2c:	ldr	x1, [x1, #72]
  30:	stp	x25, x26, [sp, #64]
  34:	add	x26, sp, #0x60
  38:	str	x27, [sp, #80]
  3c:	blr	x1
  40:	mov	x27, x0
  44:	ldr	x1, [x19, #8]
  48:	mov	x0, x24
  4c:	ldr	x20, [x19, #24]
  50:	mov	x8, x26
  54:	sub	x25, x20, x1
  58:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
  5c:	ldr	x0, [sp, #104]
  60:	add	x0, x22, x0
  64:	cmp	x0, #0x50
  68:	b.hi	1c8 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x1c8>  // b.pmore
  6c:	ldr	x0, [sp, #96]
  70:	add	x26, x26, #0x10
  74:	cmp	x0, x26
  78:	b.eq	80 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x80>  // b.none
  7c:	bl	0 <_ZdlPv>
  80:	mov	x0, x24
  84:	mov	x1, x19
  88:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
  8c:	mov	x24, #0x50                  	// #80
  90:	ldr	x1, [x19]
  94:	mov	x0, x19
  98:	sub	x24, x24, x22
  9c:	ldr	x1, [x1, #72]
  a0:	blr	x1
  a4:	sub	x2, x0, x27
  a8:	ldr	x1, [x19, #8]
  ac:	ldr	x0, [x19, #24]
  b0:	sub	x20, x0, x1
  b4:	sub	x20, x20, x25
  b8:	add	x20, x20, x2
  bc:	cmp	x20, x24
  c0:	b.cs	f0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0xf0>  // b.hs, b.nlast
  c4:	nop
  c8:	ldr	x1, [x19, #16]
  cc:	cmp	x1, x0
  d0:	b.ls	138 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x138>  // b.plast
  d4:	add	x1, x0, #0x1
  d8:	str	x1, [x19, #24]
  dc:	strb	w21, [x0]
  e0:	add	x20, x20, #0x1
  e4:	cmp	x24, x20
  e8:	ldr	x0, [x19, #24]
  ec:	b.ne	c8 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0xc8>  // b.any
  f0:	ldr	x1, [x19, #16]
  f4:	sub	x2, x1, x0
  f8:	cmp	x22, x2
  fc:	b.hi	164 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x164>  // b.pmore
 100:	cbnz	x22, 1ac <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x1ac>
 104:	cmp	x0, x1
 108:	b.cs	184 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x184>  // b.hs, b.nlast
 10c:	add	x1, x0, #0x1
 110:	str	x1, [x19, #24]
 114:	mov	w1, #0xa                   	// #10
 118:	strb	w1, [x0]
 11c:	ldp	x19, x20, [sp, #16]
 120:	ldp	x21, x22, [sp, #32]
 124:	ldp	x23, x24, [sp, #48]
 128:	ldp	x25, x26, [sp, #64]
 12c:	ldr	x27, [sp, #80]
 130:	ldp	x29, x30, [sp], #128
 134:	ret
 138:	add	x20, x20, #0x1
 13c:	mov	w1, w21
 140:	mov	x0, x19
 144:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 148:	cmp	x24, x20
 14c:	ldr	x0, [x19, #24]
 150:	b.ne	c8 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0xc8>  // b.any
 154:	ldr	x1, [x19, #16]
 158:	sub	x2, x1, x0
 15c:	cmp	x22, x2
 160:	b.ls	100 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x100>  // b.plast
 164:	mov	x1, x23
 168:	mov	x0, x19
 16c:	mov	x2, x22
 170:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 174:	mov	x19, x0
 178:	ldp	x1, x0, [x0, #16]
 17c:	cmp	x0, x1
 180:	b.cc	10c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x10c>  // b.lo, b.ul, b.last
 184:	mov	x0, x19
 188:	mov	w1, #0xa                   	// #10
 18c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 190:	ldp	x19, x20, [sp, #16]
 194:	ldp	x21, x22, [sp, #32]
 198:	ldp	x23, x24, [sp, #48]
 19c:	ldp	x25, x26, [sp, #64]
 1a0:	ldr	x27, [sp, #80]
 1a4:	ldp	x29, x30, [sp], #128
 1a8:	ret
 1ac:	mov	x1, x23
 1b0:	mov	x2, x22
 1b4:	bl	0 <memcpy>
 1b8:	ldp	x1, x0, [x19, #16]
 1bc:	add	x0, x0, x22
 1c0:	str	x0, [x19, #24]
 1c4:	b	104 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x104>
 1c8:	adrp	x3, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1cc:	adrp	x1, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1d0:	adrp	x0, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1d4:	add	x3, x3, #0x0
 1d8:	add	x1, x1, #0x0
 1dc:	add	x0, x0, #0x0
 1e0:	mov	w2, #0x18                  	// #24
 1e4:	bl	0 <__assert_fail>

00000000000001e8 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>:
 1e8:	stp	x29, x30, [sp, #-160]!
 1ec:	adrp	x5, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1f0:	add	x5, x5, #0x0
 1f4:	mov	x29, sp
 1f8:	mov	w6, #0x103                 	// #259
 1fc:	mov	x4, #0xf                   	// #15
 200:	stp	x25, x26, [sp, #64]
 204:	add	x25, sp, #0x88
 208:	adrp	x3, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 20c:	add	x3, x3, #0x0
 210:	stp	x19, x20, [sp, #16]
 214:	mov	x20, x1
 218:	mov	x1, x25
 21c:	stp	x21, x22, [sp, #32]
 220:	mov	x22, x0
 224:	mov	x0, x2
 228:	stp	x23, x24, [sp, #48]
 22c:	add	x21, sp, #0x68
 230:	stp	x27, x28, [sp, #80]
 234:	mov	x28, x2
 238:	mov	w2, #0x2d                  	// #45
 23c:	stp	x5, xzr, [sp, #136]
 240:	adrp	x27, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 244:	add	x27, x27, #0x0
 248:	strh	w6, [sp, #152]
 24c:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 250:	adrp	x5, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 254:	add	x5, x5, #0x0
 258:	mov	w6, #0x105                 	// #261
 25c:	mov	x0, x28
 260:	mov	x4, #0x3                   	// #3
 264:	mov	x3, x27
 268:	mov	x1, x25
 26c:	mov	w2, #0x20                  	// #32
 270:	stp	x5, x4, [sp, #104]
 274:	stp	x21, xzr, [sp, #136]
 278:	strh	w6, [sp, #152]
 27c:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 280:	ldr	x26, [sp, #112]
 284:	add	x0, x26, #0x3
 288:	cmp	x0, #0x4f
 28c:	b.hi	3fc <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x214>  // b.pmore
 290:	mov	x26, #0x50                  	// #80
 294:	add	x24, sp, #0x78
 298:	sub	x26, x26, x0
 29c:	mov	x19, #0x0                   	// #0
 2a0:	mov	w23, #0x505                 	// #1285
 2a4:	nop
 2a8:	sub	x5, x20, x19
 2ac:	mov	x3, x27
 2b0:	cmp	x5, x26
 2b4:	mov	x0, x28
 2b8:	csel	x5, x5, x26, ls  // ls = plast
 2bc:	cmp	x19, x20
 2c0:	csel	x1, x19, x20, ls  // ls = plast
 2c4:	add	x19, x19, x5
 2c8:	sub	x6, x20, x1
 2cc:	add	x7, x22, x1
 2d0:	cmp	x6, x5
 2d4:	mov	x1, x25
 2d8:	csel	x5, x6, x5, ls  // ls = plast
 2dc:	mov	x4, #0x3                   	// #3
 2e0:	mov	w2, #0x20                  	// #32
 2e4:	stp	x7, x5, [sp, #120]
 2e8:	stp	x21, x24, [sp, #136]
 2ec:	strh	w23, [sp, #152]
 2f0:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 2f4:	cmp	x19, x20
 2f8:	b.cc	2a8 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0xc0>  // b.lo, b.ul, b.last
 2fc:	mov	x3, x27
 300:	mov	x1, x25
 304:	mov	x0, x28
 308:	mov	w19, #0x105                 	// #261
 30c:	mov	x4, #0x3                   	// #3
 310:	mov	w2, #0x20                  	// #32
 314:	stp	x21, xzr, [sp, #136]
 318:	strh	w19, [sp, #152]
 31c:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 320:	adrp	x5, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 324:	add	x5, x5, #0x0
 328:	mov	w6, #0x305                 	// #773
 32c:	mov	x3, x27
 330:	mov	x1, x25
 334:	mov	x0, x28
 338:	mov	x4, #0x3                   	// #3
 33c:	mov	w2, #0x20                  	// #32
 340:	stp	x21, x5, [sp, #136]
 344:	strh	w6, [sp, #152]
 348:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 34c:	mov	x3, x27
 350:	mov	x1, x25
 354:	mov	x0, x28
 358:	mov	x4, #0x3                   	// #3
 35c:	mov	w2, #0x20                  	// #32
 360:	stp	x21, xzr, [sp, #136]
 364:	strh	w19, [sp, #152]
 368:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 36c:	adrp	x5, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 370:	add	x5, x5, #0x0
 374:	mov	w6, #0x103                 	// #259
 378:	mov	x1, x25
 37c:	mov	x0, x28
 380:	adrp	x3, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 384:	mov	x4, #0x5                   	// #5
 388:	add	x3, x3, #0x0
 38c:	mov	w2, #0x2d                  	// #45
 390:	stp	x5, xzr, [sp, #136]
 394:	strh	w6, [sp, #152]
 398:	bl	0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 39c:	ldp	x1, x0, [x28, #16]
 3a0:	cmp	x0, x1
 3a4:	b.cs	3d4 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x1ec>  // b.hs, b.nlast
 3a8:	add	x1, x0, #0x1
 3ac:	str	x1, [x28, #24]
 3b0:	mov	w1, #0xa                   	// #10
 3b4:	strb	w1, [x0]
 3b8:	ldp	x19, x20, [sp, #16]
 3bc:	ldp	x21, x22, [sp, #32]
 3c0:	ldp	x23, x24, [sp, #48]
 3c4:	ldp	x25, x26, [sp, #64]
 3c8:	ldp	x27, x28, [sp, #80]
 3cc:	ldp	x29, x30, [sp], #160
 3d0:	ret
 3d4:	mov	x0, x28
 3d8:	mov	w1, #0xa                   	// #10
 3dc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3e0:	ldp	x19, x20, [sp, #16]
 3e4:	ldp	x21, x22, [sp, #32]
 3e8:	ldp	x23, x24, [sp, #48]
 3ec:	ldp	x25, x26, [sp, #64]
 3f0:	ldp	x27, x28, [sp, #80]
 3f4:	ldp	x29, x30, [sp], #160
 3f8:	ret
 3fc:	adrp	x3, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 400:	adrp	x1, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 404:	adrp	x0, 0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 408:	add	x3, x3, #0x0
 40c:	add	x1, x1, #0x0
 410:	add	x0, x0, #0x0
 414:	mov	w2, #0x27                  	// #39
 418:	bl	0 <__assert_fail>

TGLexer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm7TGLexer6getLocEv>:
       0:	ldr	x0, [x0, #32]
       4:	ret

0000000000000008 <_ZN4llvm7TGLexer11ReturnErrorENS_5SMLocERKNS_5TwineE>:
       8:	stp	x29, x30, [sp, #-48]!
       c:	mov	x29, sp
      10:	add	x0, sp, #0x28
      14:	str	x19, [sp, #16]
      18:	mov	x19, #0x1                   	// #1
      1c:	str	x1, [sp, #40]
      20:	mov	x1, x19
      24:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
      28:	mov	w0, w19
      2c:	ldr	x19, [sp, #16]
      30:	ldp	x29, x30, [sp], #48
      34:	ret

0000000000000038 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>:
      38:	b	8 <_ZN4llvm7TGLexer11ReturnErrorENS_5SMLocERKNS_5TwineE>
      3c:	nop

0000000000000040 <_ZN4llvm7TGLexer11getNextCharEv>:
      40:	mov	x1, x0
      44:	ldr	x3, [x0, #8]
      48:	add	x0, x3, #0x1
      4c:	str	x0, [x1, #8]
      50:	ldrb	w2, [x3]
      54:	cmp	w2, #0xa
      58:	b.eq	90 <_ZN4llvm7TGLexer11getNextCharEv+0x50>  // b.none
      5c:	cmp	w2, #0xd
      60:	b.eq	90 <_ZN4llvm7TGLexer11getNextCharEv+0x50>  // b.none
      64:	mov	w0, w2
      68:	cbz	w2, 70 <_ZN4llvm7TGLexer11getNextCharEv+0x30>
      6c:	ret
      70:	ldp	x2, x4, [x1, #16]
      74:	mov	w0, #0x0                   	// #0
      78:	add	x2, x2, x4
      7c:	cmp	x3, x2
      80:	b.ne	6c <_ZN4llvm7TGLexer11getNextCharEv+0x2c>  // b.any
      84:	mov	w0, #0xffffffff            	// #-1
      88:	str	x3, [x1, #8]
      8c:	ret
      90:	ldrb	w4, [x3, #1]
      94:	mov	w0, #0xa                   	// #10
      98:	cmp	w4, w0
      9c:	ccmp	w4, #0xd, #0x4, ne  // ne = any
      a0:	ccmp	w4, w2, #0x4, eq  // eq = none
      a4:	b.eq	6c <_ZN4llvm7TGLexer11getNextCharEv+0x2c>  // b.none
      a8:	add	x3, x3, #0x2
      ac:	str	x3, [x1, #8]
      b0:	ret
      b4:	nop

00000000000000b8 <_ZNK4llvm7TGLexer12peekNextCharEi>:
      b8:	ldr	x0, [x0, #8]
      bc:	ldrb	w0, [x0, w1, sxtw]
      c0:	ret
      c4:	nop

00000000000000c8 <_ZN4llvm7TGLexer9LexStringEv>:
      c8:	stp	x29, x30, [sp, #-128]!
      cc:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
      d0:	mov	x4, #0x0                   	// #0
      d4:	mov	x29, sp
      d8:	stp	x19, x20, [sp, #16]
      dc:	mov	x19, x0
      e0:	add	x3, x3, #0x0
      e4:	stp	x21, x22, [sp, #32]
      e8:	add	x21, x0, #0x30
      ec:	mov	x0, x21
      f0:	ldr	x2, [x19, #56]
      f4:	mov	x1, #0x0                   	// #0
      f8:	ldr	x20, [x19, #8]
      fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     100:	ldr	x2, [x19, #8]
     104:	ldrb	w0, [x2]
     108:	cmp	w0, #0x22
     10c:	b.eq	190 <_ZN4llvm7TGLexer9LexStringEv+0xc8>  // b.none
     110:	stp	x23, x24, [sp, #48]
     114:	add	x24, x19, #0x40
     118:	stp	x25, x26, [sp, #64]
     11c:	mov	w26, #0x9                   	// #9
     120:	str	x27, [sp, #80]
     124:	mov	w27, #0xa                   	// #10
     128:	cbnz	w0, 1a0 <_ZN4llvm7TGLexer9LexStringEv+0xd8>
     12c:	ldp	x0, x1, [x19, #16]
     130:	add	x0, x0, x1
     134:	cmp	x2, x0
     138:	b.eq	35c <_ZN4llvm7TGLexer9LexStringEv+0x294>  // b.none
     13c:	add	x1, x2, #0x1
     140:	ldp	x0, x23, [x19, #48]
     144:	str	x1, [x19, #8]
     148:	ldrb	w25, [x2]
     14c:	cmp	x0, x24
     150:	add	x22, x23, #0x1
     154:	b.eq	204 <_ZN4llvm7TGLexer9LexStringEv+0x13c>  // b.none
     158:	ldr	x1, [x21, #16]
     15c:	cmp	x22, x1
     160:	b.hi	210 <_ZN4llvm7TGLexer9LexStringEv+0x148>  // b.pmore
     164:	strb	w25, [x0, x23]
     168:	str	x22, [x19, #56]
     16c:	ldr	x0, [x19, #48]
     170:	strb	wzr, [x0, x22]
     174:	ldr	x2, [x19, #8]
     178:	ldrb	w0, [x2]
     17c:	cmp	w0, #0x22
     180:	b.ne	128 <_ZN4llvm7TGLexer9LexStringEv+0x60>  // b.any
     184:	ldp	x23, x24, [sp, #48]
     188:	ldp	x25, x26, [sp, #64]
     18c:	ldr	x27, [sp, #80]
     190:	add	x2, x2, #0x1
     194:	mov	w0, #0x49                  	// #73
     198:	str	x2, [x19, #8]
     19c:	b	2bc <_ZN4llvm7TGLexer9LexStringEv+0x1f4>
     1a0:	cmp	w0, #0xa
     1a4:	ccmp	w0, #0xd, #0x4, ne  // ne = any
     1a8:	b.eq	37c <_ZN4llvm7TGLexer9LexStringEv+0x2b4>  // b.none
     1ac:	cmp	w0, #0x5c
     1b0:	add	x1, x2, #0x1
     1b4:	b.ne	140 <_ZN4llvm7TGLexer9LexStringEv+0x78>  // b.any
     1b8:	str	x1, [x19, #8]
     1bc:	ldrb	w0, [x2, #1]
     1c0:	cmp	w0, #0x27
     1c4:	b.eq	1e8 <_ZN4llvm7TGLexer9LexStringEv+0x120>  // b.none
     1c8:	b.hi	230 <_ZN4llvm7TGLexer9LexStringEv+0x168>  // b.pmore
     1cc:	cmp	w0, #0xa
     1d0:	b.eq	2d8 <_ZN4llvm7TGLexer9LexStringEv+0x210>  // b.none
     1d4:	b.ls	27c <_ZN4llvm7TGLexer9LexStringEv+0x1b4>  // b.plast
     1d8:	cmp	w0, #0xd
     1dc:	b.eq	2d8 <_ZN4llvm7TGLexer9LexStringEv+0x210>  // b.none
     1e0:	cmp	w0, #0x22
     1e4:	b.ne	290 <_ZN4llvm7TGLexer9LexStringEv+0x1c8>  // b.any
     1e8:	ldp	x0, x23, [x19, #48]
     1ec:	add	x1, x2, #0x2
     1f0:	str	x1, [x19, #8]
     1f4:	ldrb	w25, [x2, #1]
     1f8:	cmp	x0, x24
     1fc:	add	x22, x23, #0x1
     200:	b.ne	158 <_ZN4llvm7TGLexer9LexStringEv+0x90>  // b.any
     204:	mov	x1, #0xf                   	// #15
     208:	cmp	x22, x1
     20c:	b.ls	164 <_ZN4llvm7TGLexer9LexStringEv+0x9c>  // b.plast
     210:	mov	x0, x21
     214:	mov	x1, x23
     218:	mov	x4, #0x1                   	// #1
     21c:	mov	x3, #0x0                   	// #0
     220:	mov	x2, #0x0                   	// #0
     224:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
     228:	ldr	x0, [x19, #48]
     22c:	b	164 <_ZN4llvm7TGLexer9LexStringEv+0x9c>
     230:	cmp	w0, #0x6e
     234:	b.eq	2ec <_ZN4llvm7TGLexer9LexStringEv+0x224>  // b.none
     238:	cmp	w0, #0x74
     23c:	b.ne	2cc <_ZN4llvm7TGLexer9LexStringEv+0x204>  // b.any
     240:	ldp	x0, x23, [x19, #48]
     244:	cmp	x0, x24
     248:	add	x22, x23, #0x1
     24c:	b.eq	354 <_ZN4llvm7TGLexer9LexStringEv+0x28c>  // b.none
     250:	ldr	x1, [x21, #16]
     254:	cmp	x22, x1
     258:	b.hi	334 <_ZN4llvm7TGLexer9LexStringEv+0x26c>  // b.pmore
     25c:	strb	w26, [x0, x23]
     260:	ldr	x0, [x19, #48]
     264:	str	x22, [x19, #56]
     268:	strb	wzr, [x0, x22]
     26c:	ldr	x2, [x19, #8]
     270:	add	x2, x2, #0x1
     274:	str	x2, [x19, #8]
     278:	b	178 <_ZN4llvm7TGLexer9LexStringEv+0xb0>
     27c:	cbnz	w0, 290 <_ZN4llvm7TGLexer9LexStringEv+0x1c8>
     280:	ldp	x0, x2, [x19, #16]
     284:	add	x0, x0, x2
     288:	cmp	x1, x0
     28c:	b.eq	35c <_ZN4llvm7TGLexer9LexStringEv+0x294>  // b.none
     290:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     294:	mov	x0, x19
     298:	add	x3, x3, #0x0
     29c:	mov	w4, #0x103                 	// #259
     2a0:	add	x2, sp, #0x68
     2a4:	stp	x3, xzr, [sp, #104]
     2a8:	strh	w4, [sp, #120]
     2ac:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     2b0:	ldp	x23, x24, [sp, #48]
     2b4:	ldp	x25, x26, [sp, #64]
     2b8:	ldr	x27, [sp, #80]
     2bc:	ldp	x19, x20, [sp, #16]
     2c0:	ldp	x21, x22, [sp, #32]
     2c4:	ldp	x29, x30, [sp], #128
     2c8:	ret
     2cc:	cmp	w0, #0x5c
     2d0:	b.ne	290 <_ZN4llvm7TGLexer9LexStringEv+0x1c8>  // b.any
     2d4:	b	1e8 <_ZN4llvm7TGLexer9LexStringEv+0x120>
     2d8:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     2dc:	mov	x0, x19
     2e0:	add	x3, x3, #0x0
     2e4:	mov	w4, #0x103                 	// #259
     2e8:	b	2a0 <_ZN4llvm7TGLexer9LexStringEv+0x1d8>
     2ec:	ldp	x0, x23, [x19, #48]
     2f0:	cmp	x0, x24
     2f4:	add	x22, x23, #0x1
     2f8:	b.eq	374 <_ZN4llvm7TGLexer9LexStringEv+0x2ac>  // b.none
     2fc:	ldr	x1, [x21, #16]
     300:	cmp	x22, x1
     304:	b.hi	310 <_ZN4llvm7TGLexer9LexStringEv+0x248>  // b.pmore
     308:	strb	w27, [x0, x23]
     30c:	b	260 <_ZN4llvm7TGLexer9LexStringEv+0x198>
     310:	mov	x0, x21
     314:	mov	x1, x23
     318:	mov	x4, #0x1                   	// #1
     31c:	mov	x3, #0x0                   	// #0
     320:	mov	x2, #0x0                   	// #0
     324:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
     328:	ldr	x0, [x19, #48]
     32c:	strb	w27, [x0, x23]
     330:	b	260 <_ZN4llvm7TGLexer9LexStringEv+0x198>
     334:	mov	x0, x21
     338:	mov	x1, x23
     33c:	mov	x4, #0x1                   	// #1
     340:	mov	x3, #0x0                   	// #0
     344:	mov	x2, #0x0                   	// #0
     348:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
     34c:	ldr	x0, [x19, #48]
     350:	b	25c <_ZN4llvm7TGLexer9LexStringEv+0x194>
     354:	mov	x1, #0xf                   	// #15
     358:	b	254 <_ZN4llvm7TGLexer9LexStringEv+0x18c>
     35c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     360:	mov	x1, x20
     364:	mov	x0, x19
     368:	add	x3, x3, #0x0
     36c:	mov	w4, #0x103                 	// #259
     370:	b	2a0 <_ZN4llvm7TGLexer9LexStringEv+0x1d8>
     374:	mov	x1, #0xf                   	// #15
     378:	b	300 <_ZN4llvm7TGLexer9LexStringEv+0x238>
     37c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     380:	mov	x1, x20
     384:	mov	x0, x19
     388:	add	x3, x3, #0x0
     38c:	mov	w4, #0x103                 	// #259
     390:	b	2a0 <_ZN4llvm7TGLexer9LexStringEv+0x1d8>
     394:	nop

0000000000000398 <_ZN4llvm7TGLexer10LexVarNameEv>:
     398:	stp	x29, x30, [sp, #-80]!
     39c:	mov	x29, sp
     3a0:	stp	x21, x22, [sp, #32]
     3a4:	mov	x21, x0
     3a8:	ldr	x22, [x0, #8]
     3ac:	stp	x19, x20, [sp, #16]
     3b0:	ldrb	w19, [x22]
     3b4:	mov	w0, w19
     3b8:	bl	0 <isalpha>
     3bc:	cmp	w19, #0x5f
     3c0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     3c4:	b.eq	428 <_ZN4llvm7TGLexer10LexVarNameEv+0x90>  // b.none
     3c8:	add	x20, x22, #0x1
     3cc:	str	x20, [x21, #8]
     3d0:	b	3dc <_ZN4llvm7TGLexer10LexVarNameEv+0x44>
     3d4:	add	x20, x20, #0x1
     3d8:	str	x20, [x21, #8]
     3dc:	ldrb	w19, [x20]
     3e0:	mov	w0, w19
     3e4:	bl	0 <isalpha>
     3e8:	sub	w1, w19, #0x30
     3ec:	cmp	w19, #0x5f
     3f0:	cbnz	w0, 3d4 <_ZN4llvm7TGLexer10LexVarNameEv+0x3c>
     3f4:	ccmp	w1, #0x9, #0x0, ne  // ne = any
     3f8:	b.ls	3d4 <_ZN4llvm7TGLexer10LexVarNameEv+0x3c>  // b.plast
     3fc:	ldr	x2, [x21, #56]
     400:	sub	x4, x20, x22
     404:	mov	x3, x22
     408:	add	x0, x21, #0x30
     40c:	mov	x1, #0x0                   	// #0
     410:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     414:	mov	w0, #0x4a                  	// #74
     418:	ldp	x19, x20, [sp, #16]
     41c:	ldp	x21, x22, [sp, #32]
     420:	ldp	x29, x30, [sp], #80
     424:	ret
     428:	ldr	x1, [x21, #32]
     42c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     430:	add	x3, x3, #0x0
     434:	mov	w4, #0x103                 	// #259
     438:	add	x2, sp, #0x38
     43c:	mov	x0, x21
     440:	stp	x3, xzr, [sp, #56]
     444:	strh	w4, [sp, #72]
     448:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     44c:	ldp	x19, x20, [sp, #16]
     450:	ldp	x21, x22, [sp, #32]
     454:	ldp	x29, x30, [sp], #80
     458:	ret
     45c:	nop

0000000000000460 <_ZN4llvm7TGLexer15SkipBCPLCommentEv>:
     460:	ldr	x1, [x0, #8]
     464:	add	x1, x1, #0x1
     468:	str	x1, [x0, #8]
     46c:	ldrb	w2, [x1]
     470:	cmp	w2, #0xa
     474:	b.eq	494 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x34>  // b.none
     478:	cmp	w2, #0xd
     47c:	b.eq	494 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x34>  // b.none
     480:	cbnz	w2, 464 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x4>
     484:	ldp	x2, x3, [x0, #16]
     488:	add	x2, x2, x3
     48c:	cmp	x1, x2
     490:	b.ne	464 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x4>  // b.any
     494:	ret

0000000000000498 <_ZN4llvm7TGLexer12SkipCCommentEv>:
     498:	stp	x29, x30, [sp, #-64]!
     49c:	mov	x29, sp
     4a0:	stp	x19, x20, [sp, #16]
     4a4:	mov	x19, x0
     4a8:	mov	w20, #0x1                   	// #1
     4ac:	ldr	x0, [x0, #8]
     4b0:	add	x0, x0, #0x1
     4b4:	str	x0, [x19, #8]
     4b8:	mov	x0, x19
     4bc:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
     4c0:	cmp	w0, #0x2a
     4c4:	b.eq	538 <_ZN4llvm7TGLexer12SkipCCommentEv+0xa0>  // b.none
     4c8:	cmp	w0, #0x2f
     4cc:	b.eq	508 <_ZN4llvm7TGLexer12SkipCCommentEv+0x70>  // b.none
     4d0:	cmn	w0, #0x1
     4d4:	b.ne	4b8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x20>  // b.any
     4d8:	ldr	x0, [x19, #32]
     4dc:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
     4e0:	add	x2, x2, #0x0
     4e4:	mov	w3, #0x103                 	// #259
     4e8:	add	x1, sp, #0x28
     4ec:	stp	x2, xzr, [sp, #40]
     4f0:	strh	w3, [sp, #56]
     4f4:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
     4f8:	mov	w0, #0x1                   	// #1
     4fc:	ldp	x19, x20, [sp, #16]
     500:	ldp	x29, x30, [sp], #64
     504:	ret
     508:	ldr	x0, [x19, #8]
     50c:	ldrb	w1, [x0]
     510:	cmp	w1, #0x2a
     514:	b.ne	4b8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x20>  // b.any
     518:	add	x0, x0, #0x1
     51c:	str	x0, [x19, #8]
     520:	add	w20, w20, #0x1
     524:	mov	x0, x19
     528:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
     52c:	cmp	w0, #0x2a
     530:	b.ne	4c8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x30>  // b.any
     534:	nop
     538:	ldr	x0, [x19, #8]
     53c:	ldrb	w1, [x0]
     540:	cmp	w1, #0x2f
     544:	b.ne	4b8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x20>  // b.any
     548:	add	x0, x0, #0x1
     54c:	str	x0, [x19, #8]
     550:	subs	w20, w20, #0x1
     554:	b.ne	4b8 <_ZN4llvm7TGLexer12SkipCCommentEv+0x20>  // b.any
     558:	mov	w0, #0x0                   	// #0
     55c:	b	4fc <_ZN4llvm7TGLexer12SkipCCommentEv+0x64>

0000000000000560 <_ZN4llvm7TGLexer9LexNumberEv>:
     560:	stp	x29, x30, [sp, #-80]!
     564:	mov	x29, sp
     568:	ldr	x1, [x0, #8]
     56c:	stp	x19, x20, [sp, #16]
     570:	mov	x20, x0
     574:	ldurb	w2, [x1, #-1]
     578:	ldrb	w0, [x1]
     57c:	cmp	w2, #0x30
     580:	b.eq	5cc <_ZN4llvm7TGLexer9LexNumberEv+0x6c>  // b.none
     584:	sub	w0, w0, #0x30
     588:	cmp	w0, #0x9
     58c:	b.ls	5e8 <_ZN4llvm7TGLexer9LexNumberEv+0x88>  // b.plast
     590:	cmp	w2, #0x2d
     594:	b.eq	6f0 <_ZN4llvm7TGLexer9LexNumberEv+0x190>  // b.none
     598:	cmp	w2, #0x2b
     59c:	mov	w0, #0x3                   	// #3
     5a0:	b.eq	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>  // b.none
     5a4:	ldr	x0, [x20, #32]
     5a8:	mov	x1, #0x0                   	// #0
     5ac:	mov	w2, #0xa                   	// #10
     5b0:	bl	0 <strtoll>
     5b4:	mov	x1, x0
     5b8:	mov	w0, #0x46                  	// #70
     5bc:	str	x1, [x20, #80]
     5c0:	ldp	x19, x20, [sp, #16]
     5c4:	ldp	x29, x30, [sp], #80
     5c8:	ret
     5cc:	cmp	w0, #0x78
     5d0:	b.eq	680 <_ZN4llvm7TGLexer9LexNumberEv+0x120>  // b.none
     5d4:	cmp	w0, #0x62
     5d8:	b.eq	60c <_ZN4llvm7TGLexer9LexNumberEv+0xac>  // b.none
     5dc:	sub	w0, w0, #0x30
     5e0:	cmp	w0, #0x9
     5e4:	b.hi	5a4 <_ZN4llvm7TGLexer9LexNumberEv+0x44>  // b.pmore
     5e8:	add	x1, x1, #0x1
     5ec:	nop
     5f0:	str	x1, [x20, #8]
     5f4:	add	x1, x1, #0x1
     5f8:	ldurb	w2, [x1, #-1]
     5fc:	sub	w2, w2, #0x30
     600:	cmp	w2, #0x9
     604:	b.ls	5f0 <_ZN4llvm7TGLexer9LexNumberEv+0x90>  // b.plast
     608:	b	5a4 <_ZN4llvm7TGLexer9LexNumberEv+0x44>
     60c:	add	x0, x1, #0x1
     610:	str	x0, [x20, #8]
     614:	ldrb	w2, [x1, #1]
     618:	sub	w2, w2, #0x30
     61c:	and	w2, w2, #0xff
     620:	cmp	w2, #0x1
     624:	b.hi	780 <_ZN4llvm7TGLexer9LexNumberEv+0x220>  // b.pmore
     628:	add	x1, x1, #0x2
     62c:	nop
     630:	mov	x3, x1
     634:	str	x1, [x20, #8]
     638:	add	x1, x1, #0x1
     63c:	ldrb	w2, [x3]
     640:	sub	w2, w2, #0x30
     644:	and	w2, w2, #0xff
     648:	cmp	w2, #0x1
     64c:	b.ls	630 <_ZN4llvm7TGLexer9LexNumberEv+0xd0>  // b.plast
     650:	cmp	x0, x3
     654:	b.ne	764 <_ZN4llvm7TGLexer9LexNumberEv+0x204>  // b.any
     658:	sub	x1, x3, #0x2
     65c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     660:	add	x3, x3, #0x0
     664:	mov	w4, #0x103                 	// #259
     668:	mov	x0, x20
     66c:	add	x2, sp, #0x38
     670:	stp	x3, xzr, [sp, #56]
     674:	strh	w4, [sp, #72]
     678:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     67c:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     680:	add	x19, x1, #0x1
     684:	stp	x21, x22, [sp, #32]
     688:	mov	x21, x19
     68c:	str	x19, [x20, #8]
     690:	b	698 <_ZN4llvm7TGLexer9LexNumberEv+0x138>
     694:	str	x21, [x20, #8]
     698:	mov	x22, x21
     69c:	ldrb	w0, [x21], #1
     6a0:	bl	0 <isxdigit>
     6a4:	cbnz	w0, 694 <_ZN4llvm7TGLexer9LexNumberEv+0x134>
     6a8:	cmp	x19, x22
     6ac:	b.eq	6f8 <_ZN4llvm7TGLexer9LexNumberEv+0x198>  // b.none
     6b0:	bl	0 <__errno_location>
     6b4:	mov	x21, x0
     6b8:	mov	w2, #0x10                  	// #16
     6bc:	mov	x0, x19
     6c0:	mov	x1, #0x0                   	// #0
     6c4:	str	wzr, [x21]
     6c8:	bl	0 <strtoll>
     6cc:	str	x0, [x20, #80]
     6d0:	ldr	w0, [x21]
     6d4:	cmp	w0, #0x16
     6d8:	b.eq	6f8 <_ZN4llvm7TGLexer9LexNumberEv+0x198>  // b.none
     6dc:	cmp	w0, #0x22
     6e0:	b.eq	724 <_ZN4llvm7TGLexer9LexNumberEv+0x1c4>  // b.none
     6e4:	mov	w0, #0x46                  	// #70
     6e8:	ldp	x21, x22, [sp, #32]
     6ec:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     6f0:	mov	w0, #0x2                   	// #2
     6f4:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     6f8:	ldr	x1, [x20, #32]
     6fc:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     700:	add	x3, x3, #0x0
     704:	mov	w4, #0x103                 	// #259
     708:	mov	x0, x20
     70c:	add	x2, sp, #0x38
     710:	stp	x3, xzr, [sp, #56]
     714:	strh	w4, [sp, #72]
     718:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     71c:	ldp	x21, x22, [sp, #32]
     720:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     724:	str	wzr, [x21]
     728:	mov	x0, x19
     72c:	mov	w2, #0x10                  	// #16
     730:	mov	x1, #0x0                   	// #0
     734:	bl	0 <strtoull>
     738:	str	x0, [x20, #80]
     73c:	ldr	w0, [x21]
     740:	cmp	w0, #0x16
     744:	b.eq	6f8 <_ZN4llvm7TGLexer9LexNumberEv+0x198>  // b.none
     748:	cmp	w0, #0x22
     74c:	b.ne	6e4 <_ZN4llvm7TGLexer9LexNumberEv+0x184>  // b.any
     750:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     754:	mov	w4, #0x103                 	// #259
     758:	add	x3, x3, #0x0
     75c:	ldr	x1, [x20, #32]
     760:	b	708 <_ZN4llvm7TGLexer9LexNumberEv+0x1a8>
     764:	mov	x1, #0x0                   	// #0
     768:	mov	w2, #0x2                   	// #2
     76c:	bl	0 <strtoll>
     770:	mov	x1, x0
     774:	mov	w0, #0x47                  	// #71
     778:	str	x1, [x20, #80]
     77c:	b	5c0 <_ZN4llvm7TGLexer9LexNumberEv+0x60>
     780:	mov	x3, x0
     784:	b	658 <_ZN4llvm7TGLexer9LexNumberEv+0xf8>

0000000000000788 <_ZN4llvm7TGLexer10LexBracketEv>:
     788:	stp	x29, x30, [sp, #-80]!
     78c:	mov	x29, sp
     790:	stp	x19, x20, [sp, #16]
     794:	mov	x19, x0
     798:	ldr	x20, [x0, #8]
     79c:	ldrb	w0, [x20]
     7a0:	cmp	w0, #0x7b
     7a4:	b.ne	850 <_ZN4llvm7TGLexer10LexBracketEv+0xc8>  // b.any
     7a8:	str	x21, [sp, #32]
     7ac:	add	x21, x20, #0x1
     7b0:	str	x21, [x19, #8]
     7b4:	nop
     7b8:	mov	x0, x19
     7bc:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
     7c0:	cmn	w0, #0x1
     7c4:	b.eq	81c <_ZN4llvm7TGLexer10LexBracketEv+0x94>  // b.none
     7c8:	cmp	w0, #0x7d
     7cc:	b.ne	7b8 <_ZN4llvm7TGLexer10LexBracketEv+0x30>  // b.any
     7d0:	mov	x0, x19
     7d4:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
     7d8:	cmn	w0, #0x1
     7dc:	b.eq	81c <_ZN4llvm7TGLexer10LexBracketEv+0x94>  // b.none
     7e0:	cmp	w0, #0x5d
     7e4:	b.ne	7b8 <_ZN4llvm7TGLexer10LexBracketEv+0x30>  // b.any
     7e8:	ldr	x4, [x19, #8]
     7ec:	mov	x3, x21
     7f0:	ldr	x2, [x19, #56]
     7f4:	sub	x4, x4, #0x2
     7f8:	sub	x4, x4, x21
     7fc:	add	x0, x19, #0x30
     800:	mov	x1, #0x0                   	// #0
     804:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     808:	mov	w0, #0x4b                  	// #75
     80c:	ldp	x19, x20, [sp, #16]
     810:	ldr	x21, [sp, #32]
     814:	ldp	x29, x30, [sp], #80
     818:	ret
     81c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     820:	add	x3, x3, #0x0
     824:	mov	w4, #0x103                 	// #259
     828:	sub	x1, x20, #0x1
     82c:	add	x2, sp, #0x38
     830:	mov	x0, x19
     834:	stp	x3, xzr, [sp, #56]
     838:	strh	w4, [sp, #72]
     83c:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     840:	ldp	x19, x20, [sp, #16]
     844:	ldr	x21, [sp, #32]
     848:	ldp	x29, x30, [sp], #80
     84c:	ret
     850:	mov	w0, #0x4                   	// #4
     854:	ldp	x19, x20, [sp, #16]
     858:	ldp	x29, x30, [sp], #80
     85c:	ret

0000000000000860 <_ZN4llvm7TGLexer10LexExclaimEv>:
     860:	stp	x29, x30, [sp, #-80]!
     864:	mov	x29, sp
     868:	stp	x21, x22, [sp, #32]
     86c:	ldr	x22, [x0, #8]
     870:	stp	x19, x20, [sp, #16]
     874:	mov	x20, x0
     878:	add	x19, x22, #0x1
     87c:	ldrb	w0, [x22]
     880:	bl	0 <isalpha>
     884:	cbz	w0, 8d0 <_ZN4llvm7TGLexer10LexExclaimEv+0x70>
     888:	str	x19, [x20, #8]
     88c:	mov	x21, x19
     890:	ldrb	w0, [x19], #1
     894:	bl	0 <isalpha>
     898:	cbnz	w0, 888 <_ZN4llvm7TGLexer10LexExclaimEv+0x28>
     89c:	sub	x21, x21, x22
     8a0:	cmp	x21, #0x2
     8a4:	b.eq	904 <_ZN4llvm7TGLexer10LexExclaimEv+0xa4>  // b.none
     8a8:	cmp	x21, #0x4
     8ac:	b.ne	a48 <_ZN4llvm7TGLexer10LexExclaimEv+0x1e8>  // b.any
     8b0:	ldr	w0, [x22]
     8b4:	mov	w1, #0x6f63                	// #28515
     8b8:	movk	w1, #0x646e, lsl #16
     8bc:	cmp	w0, w1
     8c0:	b.ne	948 <_ZN4llvm7TGLexer10LexExclaimEv+0xe8>  // b.any
     8c4:	mov	w0, #0x3b                  	// #59
     8c8:	str	w0, [sp, #72]
     8cc:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     8d0:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     8d4:	sub	x1, x22, #0x1
     8d8:	mov	x0, x20
     8dc:	add	x3, x3, #0x0
     8e0:	mov	w4, #0x103                 	// #259
     8e4:	add	x2, sp, #0x38
     8e8:	stp	x3, xzr, [sp, #56]
     8ec:	strh	w4, [sp, #72]
     8f0:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
     8f4:	ldp	x19, x20, [sp, #16]
     8f8:	ldp	x21, x22, [sp, #32]
     8fc:	ldp	x29, x30, [sp], #80
     900:	ret
     904:	ldrh	w0, [x22]
     908:	mov	w1, #0x7165                	// #29029
     90c:	cmp	w0, w1
     910:	b.ne	980 <_ZN4llvm7TGLexer10LexExclaimEv+0x120>  // b.any
     914:	mov	w0, #0x3c                  	// #60
     918:	str	w0, [sp, #72]
     91c:	nop
     920:	ldr	w0, [sp, #72]
     924:	cmp	w0, #0x1
     928:	b.ne	8f4 <_ZN4llvm7TGLexer10LexExclaimEv+0x94>  // b.any
     92c:	nop
     930:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
     934:	sub	x1, x22, #0x1
     938:	mov	x0, x20
     93c:	add	x3, x3, #0x0
     940:	mov	w4, #0x103                 	// #259
     944:	b	8e4 <_ZN4llvm7TGLexer10LexExclaimEv+0x84>
     948:	mov	w1, #0x6568                	// #25960
     94c:	movk	w1, #0x6461, lsl #16
     950:	cmp	w0, w1
     954:	b.ne	964 <_ZN4llvm7TGLexer10LexExclaimEv+0x104>  // b.any
     958:	mov	w0, #0x36                  	// #54
     95c:	str	w0, [sp, #72]
     960:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     964:	mov	w1, #0x6174                	// #24948
     968:	movk	w1, #0x6c69, lsl #16
     96c:	cmp	w0, w1
     970:	b.ne	a10 <_ZN4llvm7TGLexer10LexExclaimEv+0x1b0>  // b.any
     974:	mov	w0, #0x37                  	// #55
     978:	str	w0, [sp, #72]
     97c:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     980:	mov	w1, #0x656e                	// #25966
     984:	cmp	w0, w1
     988:	b.ne	998 <_ZN4llvm7TGLexer10LexExclaimEv+0x138>  // b.any
     98c:	mov	w0, #0x3f                  	// #63
     990:	str	w0, [sp, #72]
     994:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     998:	mov	w1, #0x656c                	// #25964
     99c:	cmp	w0, w1
     9a0:	b.ne	9b0 <_ZN4llvm7TGLexer10LexExclaimEv+0x150>  // b.any
     9a4:	mov	w0, #0x40                  	// #64
     9a8:	str	w0, [sp, #72]
     9ac:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     9b0:	mov	w1, #0x746c                	// #29804
     9b4:	cmp	w0, w1
     9b8:	b.ne	9c8 <_ZN4llvm7TGLexer10LexExclaimEv+0x168>  // b.any
     9bc:	mov	w0, #0x41                  	// #65
     9c0:	str	w0, [sp, #72]
     9c4:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     9c8:	mov	w1, #0x6567                	// #25959
     9cc:	cmp	w0, w1
     9d0:	b.ne	9e0 <_ZN4llvm7TGLexer10LexExclaimEv+0x180>  // b.any
     9d4:	mov	w0, #0x42                  	// #66
     9d8:	str	w0, [sp, #72]
     9dc:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     9e0:	mov	w1, #0x7467                	// #29799
     9e4:	cmp	w0, w1
     9e8:	b.eq	a04 <_ZN4llvm7TGLexer10LexExclaimEv+0x1a4>  // b.none
     9ec:	mov	w1, #0x6669                	// #26217
     9f0:	cmp	w0, w1
     9f4:	b.ne	af0 <_ZN4llvm7TGLexer10LexExclaimEv+0x290>  // b.any
     9f8:	mov	w0, #0x3a                  	// #58
     9fc:	str	w0, [sp, #72]
     a00:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     a04:	mov	w0, #0x43                  	// #67
     a08:	str	w0, [sp, #72]
     a0c:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     a10:	mov	w1, #0x6973                	// #26995
     a14:	movk	w1, #0x657a, lsl #16
     a18:	cmp	w0, w1
     a1c:	b.eq	a3c <_ZN4llvm7TGLexer10LexExclaimEv+0x1dc>  // b.none
     a20:	mov	w1, #0x6163                	// #24931
     a24:	movk	w1, #0x7473, lsl #16
     a28:	cmp	w0, w1
     a2c:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     a30:	mov	w0, #0x32                  	// #50
     a34:	str	w0, [sp, #72]
     a38:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     a3c:	mov	w0, #0x38                  	// #56
     a40:	str	w0, [sp, #72]
     a44:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     a48:	cmp	x21, #0x3
     a4c:	b.ne	ae4 <_ZN4llvm7TGLexer10LexExclaimEv+0x284>  // b.any
     a50:	ldrh	w0, [x22]
     a54:	mov	w1, #0x7369                	// #29545
     a58:	cmp	w0, w1
     a5c:	b.eq	cb8 <_ZN4llvm7TGLexer10LexExclaimEv+0x458>  // b.none
     a60:	mov	w1, #0x6f63                	// #28515
     a64:	cmp	w0, w1
     a68:	b.eq	cd0 <_ZN4llvm7TGLexer10LexExclaimEv+0x470>  // b.none
     a6c:	mov	w1, #0x6164                	// #24932
     a70:	cmp	w0, w1
     a74:	b.eq	d00 <_ZN4llvm7TGLexer10LexExclaimEv+0x4a0>  // b.none
     a78:	mov	w1, #0x6461                	// #25697
     a7c:	cmp	w0, w1
     a80:	b.eq	ce8 <_ZN4llvm7TGLexer10LexExclaimEv+0x488>  // b.none
     a84:	mov	w1, #0x756d                	// #30061
     a88:	cmp	w0, w1
     a8c:	b.eq	d18 <_ZN4llvm7TGLexer10LexExclaimEv+0x4b8>  // b.none
     a90:	mov	w1, #0x6e61                	// #28257
     a94:	cmp	w0, w1
     a98:	b.eq	d48 <_ZN4llvm7TGLexer10LexExclaimEv+0x4e8>  // b.none
     a9c:	mov	w1, #0x6873                	// #26739
     aa0:	cmp	w0, w1
     aa4:	b.eq	d60 <_ZN4llvm7TGLexer10LexExclaimEv+0x500>  // b.none
     aa8:	mov	w1, #0x7273                	// #29299
     aac:	cmp	w0, w1
     ab0:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     ab4:	ldrb	w1, [x22, #2]
     ab8:	cmp	w1, #0x61
     abc:	b.eq	d78 <_ZN4llvm7TGLexer10LexExclaimEv+0x518>  // b.none
     ac0:	mov	w1, #0x7273                	// #29299
     ac4:	cmp	w0, w1
     ac8:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     acc:	ldrb	w0, [x22, #2]
     ad0:	cmp	w0, #0x6c
     ad4:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     ad8:	mov	w0, #0x2d                  	// #45
     adc:	str	w0, [sp, #72]
     ae0:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     ae4:	cmp	x21, #0x2
     ae8:	b.ne	b90 <_ZN4llvm7TGLexer10LexExclaimEv+0x330>  // b.any
     aec:	ldrh	w0, [x22]
     af0:	mov	w1, #0x726f                	// #29295
     af4:	cmp	w0, w1
     af8:	b.eq	b3c <_ZN4llvm7TGLexer10LexExclaimEv+0x2dc>  // b.none
     afc:	cmp	x21, #0xa
     b00:	b.ne	b48 <_ZN4llvm7TGLexer10LexExclaimEv+0x2e8>  // b.any
     b04:	mov	x0, #0x696c                	// #26988
     b08:	ldr	x1, [x22]
     b0c:	movk	x0, #0x7473, lsl #16
     b10:	movk	x0, #0x6f63, lsl #32
     b14:	movk	x0, #0x636e, lsl #48
     b18:	cmp	x1, x0
     b1c:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b20:	ldrh	w1, [x22, #8]
     b24:	mov	w0, #0x7461                	// #29793
     b28:	cmp	w1, w0
     b2c:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b30:	mov	w0, #0x2f                  	// #47
     b34:	str	w0, [sp, #72]
     b38:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     b3c:	mov	w0, #0x2b                  	// #43
     b40:	str	w0, [sp, #72]
     b44:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     b48:	cmp	x21, #0x9
     b4c:	b.eq	bdc <_ZN4llvm7TGLexer10LexExclaimEv+0x37c>  // b.none
     b50:	cmp	x21, #0x5
     b54:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b58:	ldr	w0, [x22]
     b5c:	mov	w1, #0x6573                	// #25971
     b60:	movk	w1, #0x6f74, lsl #16
     b64:	cmp	w0, w1
     b68:	b.eq	ca4 <_ZN4llvm7TGLexer10LexExclaimEv+0x444>  // b.none
     b6c:	mov	w1, #0x6567                	// #25959
     b70:	movk	w1, #0x6f74, lsl #16
     b74:	cmp	w0, w1
     b78:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b7c:	ldrb	w0, [x22, #4]
     b80:	cmp	w0, #0x70
     b84:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     b88:	mov	w0, #0x45                  	// #69
     b8c:	b	8f4 <_ZN4llvm7TGLexer10LexExclaimEv+0x94>
     b90:	cmp	x21, #0x5
     b94:	b.eq	c28 <_ZN4llvm7TGLexer10LexExclaimEv+0x3c8>  // b.none
     b98:	cmp	x21, #0x7
     b9c:	b.ne	afc <_ZN4llvm7TGLexer10LexExclaimEv+0x29c>  // b.any
     ba0:	ldr	w1, [x22]
     ba4:	mov	w0, #0x6f66                	// #28518
     ba8:	movk	w0, #0x6572, lsl #16
     bac:	cmp	w1, w0
     bb0:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     bb4:	ldrh	w1, [x22, #4]
     bb8:	mov	w0, #0x6361                	// #25441
     bbc:	cmp	w1, w0
     bc0:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     bc4:	ldrb	w0, [x22, #6]
     bc8:	cmp	w0, #0x68
     bcc:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     bd0:	mov	w0, #0x34                  	// #52
     bd4:	str	w0, [sp, #72]
     bd8:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     bdc:	mov	x1, #0x696c                	// #26988
     be0:	ldr	x0, [x22]
     be4:	movk	x1, #0x7473, lsl #16
     be8:	movk	x1, #0x7073, lsl #32
     bec:	movk	x1, #0x616c, lsl #48
     bf0:	cmp	x0, x1
     bf4:	b.eq	c8c <_ZN4llvm7TGLexer10LexExclaimEv+0x42c>  // b.none
     bf8:	mov	x1, #0x7473                	// #29811
     bfc:	movk	x1, #0x6372, lsl #16
     c00:	movk	x1, #0x6e6f, lsl #32
     c04:	movk	x1, #0x6163, lsl #48
     c08:	cmp	x0, x1
     c0c:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     c10:	ldrb	w0, [x22, #8]
     c14:	cmp	w0, #0x74
     c18:	b.ne	930 <_ZN4llvm7TGLexer10LexExclaimEv+0xd0>  // b.any
     c1c:	mov	w0, #0x31                  	// #49
     c20:	str	w0, [sp, #72]
     c24:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     c28:	ldr	w0, [x22]
     c2c:	mov	w1, #0x6d65                	// #28005
     c30:	movk	w1, #0x7470, lsl #16
     c34:	cmp	w0, w1
     c38:	b.eq	c74 <_ZN4llvm7TGLexer10LexExclaimEv+0x414>  // b.none
     c3c:	mov	w1, #0x7573                	// #30067
     c40:	movk	w1, #0x7362, lsl #16
     c44:	cmp	w0, w1
     c48:	b.eq	d30 <_ZN4llvm7TGLexer10LexExclaimEv+0x4d0>  // b.none
     c4c:	mov	w1, #0x6f66                	// #28518
     c50:	movk	w1, #0x646c, lsl #16
     c54:	cmp	w0, w1
     c58:	b.ne	b5c <_ZN4llvm7TGLexer10LexExclaimEv+0x2fc>  // b.any
     c5c:	ldrb	w1, [x22, #4]
     c60:	cmp	w1, #0x6c
     c64:	b.ne	b5c <_ZN4llvm7TGLexer10LexExclaimEv+0x2fc>  // b.any
     c68:	mov	w0, #0x35                  	// #53
     c6c:	str	w0, [sp, #72]
     c70:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     c74:	ldrb	w1, [x22, #4]
     c78:	cmp	w1, #0x79
     c7c:	b.ne	c3c <_ZN4llvm7TGLexer10LexExclaimEv+0x3dc>  // b.any
     c80:	mov	w0, #0x39                  	// #57
     c84:	str	w0, [sp, #72]
     c88:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     c8c:	ldrb	w1, [x22, #8]
     c90:	cmp	w1, #0x74
     c94:	b.ne	bf8 <_ZN4llvm7TGLexer10LexExclaimEv+0x398>  // b.any
     c98:	mov	w0, #0x30                  	// #48
     c9c:	str	w0, [sp, #72]
     ca0:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     ca4:	ldrb	w1, [x22, #4]
     ca8:	cmp	w1, #0x70
     cac:	b.ne	b6c <_ZN4llvm7TGLexer10LexExclaimEv+0x30c>  // b.any
     cb0:	mov	w0, #0x44                  	// #68
     cb4:	b	8f4 <_ZN4llvm7TGLexer10LexExclaimEv+0x94>
     cb8:	ldrb	w1, [x22, #2]
     cbc:	cmp	w1, #0x61
     cc0:	b.ne	a60 <_ZN4llvm7TGLexer10LexExclaimEv+0x200>  // b.any
     cc4:	mov	w0, #0x3d                  	// #61
     cc8:	str	w0, [sp, #72]
     ccc:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     cd0:	ldrb	w1, [x22, #2]
     cd4:	cmp	w1, #0x6e
     cd8:	b.ne	a6c <_ZN4llvm7TGLexer10LexExclaimEv+0x20c>  // b.any
     cdc:	mov	w0, #0x27                  	// #39
     ce0:	str	w0, [sp, #72]
     ce4:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     ce8:	ldrb	w1, [x22, #2]
     cec:	cmp	w1, #0x64
     cf0:	b.ne	a84 <_ZN4llvm7TGLexer10LexExclaimEv+0x224>  // b.any
     cf4:	mov	w0, #0x28                  	// #40
     cf8:	str	w0, [sp, #72]
     cfc:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d00:	ldrb	w1, [x22, #2]
     d04:	cmp	w1, #0x67
     d08:	b.ne	a78 <_ZN4llvm7TGLexer10LexExclaimEv+0x218>  // b.any
     d0c:	mov	w0, #0x3e                  	// #62
     d10:	str	w0, [sp, #72]
     d14:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d18:	ldrb	w1, [x22, #2]
     d1c:	cmp	w1, #0x6c
     d20:	b.ne	a90 <_ZN4llvm7TGLexer10LexExclaimEv+0x230>  // b.any
     d24:	mov	w0, #0x29                  	// #41
     d28:	str	w0, [sp, #72]
     d2c:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d30:	ldrb	w1, [x22, #4]
     d34:	cmp	w1, #0x74
     d38:	b.ne	c4c <_ZN4llvm7TGLexer10LexExclaimEv+0x3ec>  // b.any
     d3c:	mov	w0, #0x33                  	// #51
     d40:	str	w0, [sp, #72]
     d44:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d48:	ldrb	w1, [x22, #2]
     d4c:	cmp	w1, #0x64
     d50:	b.ne	a9c <_ZN4llvm7TGLexer10LexExclaimEv+0x23c>  // b.any
     d54:	mov	w0, #0x2a                  	// #42
     d58:	str	w0, [sp, #72]
     d5c:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d60:	ldrb	w1, [x22, #2]
     d64:	cmp	w1, #0x6c
     d68:	b.ne	aa8 <_ZN4llvm7TGLexer10LexExclaimEv+0x248>  // b.any
     d6c:	mov	w0, #0x2e                  	// #46
     d70:	str	w0, [sp, #72]
     d74:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d78:	mov	w0, #0x2c                  	// #44
     d7c:	str	w0, [sp, #72]
     d80:	b	920 <_ZN4llvm7TGLexer10LexExclaimEv+0xc0>
     d84:	nop

0000000000000d88 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>:
     d88:	stp	x29, x30, [sp, #-64]!
     d8c:	mov	x1, #0x5                   	// #5
     d90:	mov	x29, sp
     d94:	stp	x21, x22, [sp, #32]
     d98:	adrp	x22, 0 <_ZNK4llvm7TGLexer6getLocEv>
     d9c:	add	x22, x22, #0x0
     da0:	stp	x23, x24, [sp, #48]
     da4:	mov	x24, x0
     da8:	add	x23, x22, #0x50
     dac:	stp	x19, x20, [sp, #16]
     db0:	mov	w19, #0x0                   	// #0
     db4:	ldr	x0, [x24, #8]
     db8:	ldrb	w20, [x0]
     dbc:	b	de8 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x60>
     dc0:	ldrb	w2, [x21, w19, uxtw]
     dc4:	add	w19, w19, #0x1
     dc8:	mov	w1, w19
     dcc:	cmp	w2, w20
     dd0:	b.ne	e20 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x98>  // b.any
     dd4:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
     dd8:	mov	w20, w0
     ddc:	mov	x0, x21
     de0:	bl	0 <strlen>
     de4:	mov	x1, x0
     de8:	mov	x0, x24
     dec:	cmp	x1, w19, uxtw
     df0:	ldr	x21, [x22, #8]
     df4:	b.hi	dc0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x38>  // b.pmore
     df8:	cmp	w20, #0x20
     dfc:	sub	w0, w20, #0x9
     e00:	ldr	w21, [x22]
     e04:	ccmp	w0, #0x1, #0x0, ne  // ne = any
     e08:	b.ls	e40 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xb8>  // b.plast
     e0c:	cmp	w20, #0xd
     e10:	ccmn	w20, #0x1, #0x4, ne  // ne = any
     e14:	b.eq	e40 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xb8>  // b.none
     e18:	cmp	w20, #0x2f
     e1c:	b.eq	e58 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xd0>  // b.none
     e20:	add	x22, x22, #0x10
     e24:	cmp	x23, x22
     e28:	b.eq	e3c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xb4>  // b.none
     e2c:	ldr	x0, [x22, #8]
     e30:	bl	0 <strlen>
     e34:	mov	x1, x0
     e38:	b	db0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x28>
     e3c:	mov	w21, #0x1                   	// #1
     e40:	mov	w0, w21
     e44:	ldp	x19, x20, [sp, #16]
     e48:	ldp	x21, x22, [sp, #32]
     e4c:	ldp	x23, x24, [sp, #48]
     e50:	ldp	x29, x30, [sp], #64
     e54:	ret
     e58:	add	w1, w19, #0x1
     e5c:	mov	x0, x24
     e60:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
     e64:	cmp	w0, #0x2a
     e68:	ccmp	w0, w20, #0x4, ne  // ne = any
     e6c:	b.ne	e20 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x98>  // b.any
     e70:	b	e40 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xb8>
     e74:	nop

0000000000000e78 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE>:
     e78:	mov	x2, x0
     e7c:	cmp	w1, #0x4c
     e80:	ldr	x0, [x0, #8]
     e84:	str	x0, [x2, #32]
     e88:	b.eq	ed0 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x58>  // b.none
     e8c:	cmp	w1, #0x4d
     e90:	b.eq	ee4 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x6c>  // b.none
     e94:	cmp	w1, #0x4e
     e98:	b.eq	eec <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x74>  // b.none
     e9c:	cmp	w1, #0x4f
     ea0:	b.eq	ed0 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x58>  // b.none
     ea4:	cmp	w1, #0x50
     ea8:	b.eq	ee4 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x6c>  // b.none
     eac:	stp	x29, x30, [sp, #-48]!
     eb0:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
     eb4:	add	x1, x1, #0x0
     eb8:	mov	w2, #0x103                 	// #259
     ebc:	mov	x29, sp
     ec0:	add	x0, sp, #0x18
     ec4:	stp	x1, xzr, [sp, #24]
     ec8:	strh	w2, [sp, #40]
     ecc:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
     ed0:	mov	x1, #0x5                   	// #5
     ed4:	add	x1, x0, x1
     ed8:	mov	w0, #0x1                   	// #1
     edc:	str	x1, [x2, #8]
     ee0:	ret
     ee4:	mov	x1, #0x6                   	// #6
     ee8:	b	ed4 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x5c>
     eec:	mov	x1, #0x4                   	// #4
     ef0:	b	ed4 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x5c>
     ef4:	nop

0000000000000ef8 <_ZN4llvm7TGLexer16prepLexMacroNameEv>:
     ef8:	stp	x29, x30, [sp, #-48]!
     efc:	mov	x29, sp
     f00:	stp	x21, x22, [sp, #32]
     f04:	mov	x21, x0
     f08:	ldr	x22, [x0, #8]
     f0c:	stp	x19, x20, [sp, #16]
     f10:	ldrb	w0, [x22]
     f14:	cmp	w0, #0x20
     f18:	ccmp	w0, #0x9, #0x4, ne  // ne = any
     f1c:	b.ne	f40 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x48>  // b.any
     f20:	add	x1, x22, #0x1
     f24:	nop
     f28:	str	x1, [x21, #8]
     f2c:	mov	x22, x1
     f30:	ldrb	w2, [x1], #1
     f34:	cmp	w2, #0x20
     f38:	ccmp	w2, #0x9, #0x4, ne  // ne = any
     f3c:	b.eq	f28 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x30>  // b.none
     f40:	str	x22, [x21, #32]
     f44:	ldrb	w0, [x22]
     f48:	cmp	w0, #0x5f
     f4c:	b.eq	f58 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x60>  // b.none
     f50:	bl	0 <isalpha>
     f54:	cbz	w0, fa0 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0xa8>
     f58:	mov	x19, x22
     f5c:	b	f68 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x70>
     f60:	add	x19, x19, #0x1
     f64:	str	x19, [x21, #8]
     f68:	ldrb	w20, [x19]
     f6c:	mov	w0, w20
     f70:	bl	0 <isalpha>
     f74:	sub	w1, w20, #0x30
     f78:	cmp	w20, #0x5f
     f7c:	cbnz	w0, f60 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x68>
     f80:	ccmp	w1, #0x9, #0x0, ne  // ne = any
     f84:	b.ls	f60 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x68>  // b.plast
     f88:	sub	x1, x19, x22
     f8c:	mov	x0, x22
     f90:	ldp	x19, x20, [sp, #16]
     f94:	ldp	x21, x22, [sp, #32]
     f98:	ldp	x29, x30, [sp], #48
     f9c:	ret
     fa0:	mov	x1, #0x0                   	// #0
     fa4:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
     fa8:	add	x0, x0, #0x0
     fac:	ldp	x19, x20, [sp, #16]
     fb0:	ldp	x21, x22, [sp, #32]
     fb4:	ldp	x29, x30, [sp], #48
     fb8:	ret
     fbc:	nop

0000000000000fc0 <_ZN4llvm7TGLexer17prepSkipLineBeginEv>:
     fc0:	stp	x29, x30, [sp, #-32]!
     fc4:	mov	x29, sp
     fc8:	ldp	x3, x2, [x0, #16]
     fcc:	str	x19, [sp, #16]
     fd0:	mov	x19, x0
     fd4:	ldr	x0, [x0, #8]
     fd8:	add	x1, x3, x2
     fdc:	cmp	x0, x1
     fe0:	b.eq	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>  // b.none
     fe4:	ldrb	w1, [x0]
     fe8:	cmp	w1, #0x2f
     fec:	b.eq	1040 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x80>  // b.none
     ff0:	b.hi	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>  // b.pmore
     ff4:	cmp	w1, #0xd
     ff8:	b.eq	1008 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x48>  // b.none
     ffc:	b.ls	102c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x6c>  // b.plast
    1000:	cmp	w1, #0x20
    1004:	b.ne	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>  // b.any
    1008:	add	x0, x0, #0x1
    100c:	str	x0, [x19, #8]
    1010:	add	x1, x3, x2
    1014:	cmp	x0, x1
    1018:	b.ne	fe4 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x24>  // b.any
    101c:	mov	w0, #0x1                   	// #1
    1020:	ldr	x19, [sp, #16]
    1024:	ldp	x29, x30, [sp], #32
    1028:	ret
    102c:	sub	w1, w1, #0x9
    1030:	and	w1, w1, #0xff
    1034:	cmp	w1, #0x1
    1038:	b.ls	1008 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x48>  // b.plast
    103c:	b	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>
    1040:	mov	x0, x19
    1044:	mov	w1, #0x1                   	// #1
    1048:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
    104c:	cmp	w0, #0x2a
    1050:	b.ne	101c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x5c>  // b.any
    1054:	ldr	x1, [x19, #8]
    1058:	str	x1, [x19, #32]
    105c:	mov	x0, x19
    1060:	add	x1, x1, #0x1
    1064:	str	x1, [x19, #8]
    1068:	bl	498 <_ZN4llvm7TGLexer12SkipCCommentEv>
    106c:	tst	w0, #0xff
    1070:	b.eq	1084 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xc4>  // b.none
    1074:	mov	w0, #0x0                   	// #0
    1078:	ldr	x19, [sp, #16]
    107c:	ldp	x29, x30, [sp], #32
    1080:	ret
    1084:	ldp	x0, x3, [x19, #8]
    1088:	ldr	x2, [x19, #24]
    108c:	b	1010 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x50>

0000000000001090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>:
    1090:	stp	x29, x30, [sp, #-64]!
    1094:	mov	x29, sp
    1098:	ldr	x3, [x0, #16]
    109c:	str	x19, [sp, #16]
    10a0:	mov	x19, x0
    10a4:	ldr	x0, [x0, #24]
    10a8:	ldr	x2, [x19, #8]
    10ac:	add	x1, x3, x0
    10b0:	cmp	x2, x1
    10b4:	b.eq	1108 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x78>  // b.none
    10b8:	ldrb	w1, [x2]
    10bc:	cmp	w1, #0x20
    10c0:	b.eq	10f4 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x64>  // b.none
    10c4:	b.hi	1118 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x88>  // b.pmore
    10c8:	cmp	w1, #0xa
    10cc:	b.eq	1108 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x78>  // b.none
    10d0:	cmp	w1, #0xd
    10d4:	b.eq	1108 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x78>  // b.none
    10d8:	cmp	w1, #0x9
    10dc:	b.eq	10f4 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x64>  // b.none
    10e0:	str	x2, [x19, #32]
    10e4:	mov	w0, #0x0                   	// #0
    10e8:	ldr	x19, [sp, #16]
    10ec:	ldp	x29, x30, [sp], #64
    10f0:	ret
    10f4:	add	x2, x2, #0x1
    10f8:	str	x2, [x19, #8]
    10fc:	add	x1, x3, x0
    1100:	cmp	x2, x1
    1104:	b.ne	10b8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x28>  // b.any
    1108:	mov	w0, #0x1                   	// #1
    110c:	ldr	x19, [sp, #16]
    1110:	ldp	x29, x30, [sp], #64
    1114:	ret
    1118:	cmp	w1, #0x2f
    111c:	b.ne	10e0 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x50>  // b.any
    1120:	mov	x0, x19
    1124:	mov	w1, #0x1                   	// #1
    1128:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
    112c:	cmp	w0, #0x2f
    1130:	b.eq	1178 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe8>  // b.none
    1134:	cmp	w0, #0x2a
    1138:	ldr	x0, [x19, #8]
    113c:	b.ne	1198 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x108>  // b.any
    1140:	add	x1, x0, #0x1
    1144:	str	x1, [x19, #8]
    1148:	str	x0, [x19, #32]
    114c:	mov	x0, x19
    1150:	bl	498 <_ZN4llvm7TGLexer12SkipCCommentEv>
    1154:	tst	w0, #0xff
    1158:	b.eq	116c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xdc>  // b.none
    115c:	mov	w0, #0x0                   	// #0
    1160:	ldr	x19, [sp, #16]
    1164:	ldp	x29, x30, [sp], #64
    1168:	ret
    116c:	ldp	x2, x3, [x19, #8]
    1170:	ldr	x0, [x19, #24]
    1174:	b	10fc <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x6c>
    1178:	ldr	x1, [x19, #8]
    117c:	mov	x0, x19
    1180:	add	x1, x1, #0x1
    1184:	str	x1, [x19, #8]
    1188:	bl	460 <_ZN4llvm7TGLexer15SkipBCPLCommentEv>
    118c:	ldp	x2, x3, [x19, #8]
    1190:	ldr	x0, [x19, #24]
    1194:	b	10fc <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x6c>
    1198:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
    119c:	add	x2, x2, #0x0
    11a0:	mov	w3, #0x103                 	// #259
    11a4:	str	x0, [x19, #32]
    11a8:	add	x1, sp, #0x28
    11ac:	stp	x2, xzr, [sp, #40]
    11b0:	strh	w3, [sp, #56]
    11b4:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    11b8:	mov	w0, #0x0                   	// #0
    11bc:	b	110c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x7c>

00000000000011c0 <_ZN4llvm7TGLexer17prepSkipToLineEndEv>:
    11c0:	ldr	x1, [x0, #8]
    11c4:	ldrb	w2, [x1]
    11c8:	cmp	w2, #0xa
    11cc:	ccmp	w2, #0xd, #0x4, ne  // ne = any
    11d0:	b.eq	1200 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x40>  // b.none
    11d4:	ldp	x3, x2, [x0, #16]
    11d8:	add	x3, x3, x2
    11dc:	b	11f4 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x34>
    11e0:	str	x1, [x0, #8]
    11e4:	ldrb	w2, [x1]
    11e8:	cmp	w2, #0xa
    11ec:	ccmp	w2, #0xd, #0x4, ne  // ne = any
    11f0:	b.eq	1200 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x40>  // b.none
    11f4:	cmp	x3, x1
    11f8:	add	x1, x1, #0x1
    11fc:	b.ne	11e0 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x20>  // b.any
    1200:	ret
    1204:	nop

0000000000001208 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv>:
    1208:	ldr	x0, [x0, #184]
    120c:	ldur	x0, [x0, #-8]
    1210:	ldp	x2, x1, [x0]
    1214:	cmp	x1, x2
    1218:	b.ne	1224 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x1c>  // b.any
    121c:	b	1238 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x30>
    1220:	b.eq	1234 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x2c>  // b.none
    1224:	ldurb	w0, [x1, #-12]
    1228:	sub	x1, x1, #0x10
    122c:	cmp	x2, x1
    1230:	cbnz	w0, 1220 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x18>
    1234:	ret
    1238:	mov	w0, #0x1                   	// #1
    123c:	ret

0000000000001240 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv>:
    1240:	stp	x29, x30, [sp, #-80]!
    1244:	mov	x29, sp
    1248:	stp	x19, x20, [sp, #16]
    124c:	mov	x19, x0
    1250:	ldr	x0, [x0, #184]
    1254:	stp	x21, x22, [sp, #32]
    1258:	ldur	x0, [x0, #-8]
    125c:	ldp	x1, x21, [x0]
    1260:	cmp	x21, x1
    1264:	b.eq	12c8 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv+0x88>  // b.none
    1268:	ldp	x3, x0, [x19, #16]
    126c:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1270:	add	x2, x2, #0x0
    1274:	add	x20, sp, #0x38
    1278:	mov	x1, x20
    127c:	mov	w22, #0x103                 	// #259
    1280:	stp	x2, xzr, [sp, #56]
    1284:	add	x0, x3, x0
    1288:	strh	w22, [sp, #72]
    128c:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    1290:	strh	w22, [sp, #72]
    1294:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1298:	add	x3, x3, #0x0
    129c:	mov	x2, x20
    12a0:	sub	x0, x21, #0x8
    12a4:	mov	x1, #0x1                   	// #1
    12a8:	stp	x3, xzr, [sp, #56]
    12ac:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    12b0:	ldr	x0, [x19, #8]
    12b4:	ldp	x21, x22, [sp, #32]
    12b8:	str	x0, [x19, #32]
    12bc:	ldp	x19, x20, [sp, #16]
    12c0:	ldp	x29, x30, [sp], #80
    12c4:	ret
    12c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    12cc:	add	x1, x1, #0x0
    12d0:	mov	w2, #0x103                 	// #259
    12d4:	add	x0, sp, #0x38
    12d8:	stp	x1, xzr, [sp, #56]
    12dc:	strh	w2, [sp, #72]
    12e0:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    12e4:	nop

00000000000012e8 <_ZN4llvm7TGLexer15prepExitIncludeEb>:
    12e8:	stp	x29, x30, [sp, #-96]!
    12ec:	mov	x29, sp
    12f0:	str	x21, [sp, #32]
    12f4:	and	w21, w1, #0xff
    12f8:	ldr	x1, [x0, #184]
    12fc:	stp	x19, x20, [sp, #16]
    1300:	str	x0, [sp, #56]
    1304:	ldur	x20, [x1, #-8]
    1308:	ldp	x2, x3, [x20]
    130c:	cmp	x2, x3
    1310:	b.ne	1398 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xb0>  // b.any
    1314:	mov	x19, x0
    1318:	ldr	x0, [x0, #176]
    131c:	cmp	x1, x0
    1320:	b.eq	13b4 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xcc>  // b.none
    1324:	sub	x1, x1, #0x8
    1328:	str	x1, [x19, #184]
    132c:	cbz	x2, 1338 <_ZN4llvm7TGLexer15prepExitIncludeEb+0x50>
    1330:	mov	x0, x2
    1334:	bl	0 <_ZdlPv>
    1338:	mov	x1, #0x18                  	// #24
    133c:	mov	x0, x20
    1340:	bl	0 <_ZdlPvm>
    1344:	ldr	x1, [x19, #176]
    1348:	cbnz	w21, 1370 <_ZN4llvm7TGLexer15prepExitIncludeEb+0x88>
    134c:	ldr	x0, [x19, #184]
    1350:	mov	w21, #0x1                   	// #1
    1354:	cmp	x1, x0
    1358:	b.eq	13b4 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xcc>  // b.none
    135c:	mov	w0, w21
    1360:	ldp	x19, x20, [sp, #16]
    1364:	ldr	x21, [sp, #32]
    1368:	ldp	x29, x30, [sp], #96
    136c:	ret
    1370:	ldr	x0, [x19, #184]
    1374:	cmp	x1, x0
    1378:	b.eq	135c <_ZN4llvm7TGLexer15prepExitIncludeEb+0x74>  // b.none
    137c:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1380:	add	x1, x1, #0x0
    1384:	add	x19, sp, #0x48
    1388:	mov	x0, x19
    138c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1390:	mov	x0, x19
    1394:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    1398:	bl	1240 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv>
    139c:	mov	w21, #0x0                   	// #0
    13a0:	mov	w0, w21
    13a4:	ldp	x19, x20, [sp, #16]
    13a8:	ldr	x21, [sp, #32]
    13ac:	ldp	x29, x30, [sp], #96
    13b0:	ret
    13b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    13b8:	add	x1, x1, #0x0
    13bc:	b	1384 <_ZN4llvm7TGLexer15prepExitIncludeEb+0x9c>

00000000000013c0 <_ZN4llvm7TGLexer10processEOFEv>:
    13c0:	stp	x29, x30, [sp, #-64]!
    13c4:	mov	x29, sp
    13c8:	ldr	w2, [x0, #88]
    13cc:	stp	x19, x20, [sp, #16]
    13d0:	stp	x21, x22, [sp, #32]
    13d4:	str	x23, [sp, #48]
    13d8:	cbz	w2, 1440 <_ZN4llvm7TGLexer10processEOFEv+0x80>
    13dc:	ldr	x1, [x0]
    13e0:	mov	x20, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    13e4:	movk	x20, #0xaaab
    13e8:	mov	x19, x0
    13ec:	ldp	x3, x1, [x1]
    13f0:	sub	x1, x1, x3
    13f4:	asr	x1, x1, #3
    13f8:	mul	x1, x1, x20
    13fc:	cmp	x1, w2, uxtw
    1400:	b.cc	1440 <_ZN4llvm7TGLexer10processEOFEv+0x80>  // b.lo, b.ul, b.last
    1404:	sub	w2, w2, #0x1
    1408:	mov	w23, #0x18                  	// #24
    140c:	umaddl	x2, w2, w23, x3
    1410:	ldr	x22, [x2, #16]
    1414:	cbz	x22, 1460 <_ZN4llvm7TGLexer10processEOFEv+0xa0>
    1418:	mov	w1, #0x0                   	// #0
    141c:	bl	12e8 <_ZN4llvm7TGLexer15prepExitIncludeEb>
    1420:	ands	w21, w0, #0xff
    1424:	b.ne	1470 <_ZN4llvm7TGLexer10processEOFEv+0xb0>  // b.any
    1428:	mov	w0, w21
    142c:	ldp	x19, x20, [sp, #16]
    1430:	ldp	x21, x22, [sp, #32]
    1434:	ldr	x23, [sp, #48]
    1438:	ldp	x29, x30, [sp], #64
    143c:	ret
    1440:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1444:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1448:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    144c:	add	x3, x3, #0x0
    1450:	add	x1, x1, #0x0
    1454:	add	x0, x0, #0x0
    1458:	mov	w2, #0x93                  	// #147
    145c:	bl	0 <__assert_fail>
    1460:	mov	w21, #0x0                   	// #0
    1464:	mov	w1, #0x1                   	// #1
    1468:	bl	12e8 <_ZN4llvm7TGLexer15prepExitIncludeEb>
    146c:	b	1428 <_ZN4llvm7TGLexer10processEOFEv+0x68>
    1470:	ldr	x0, [x19]
    1474:	mov	x1, x22
    1478:	bl	0 <_ZNK4llvm9SourceMgr23FindBufferContainingLocENS_5SMLocE>
    147c:	str	w0, [x19, #88]
    1480:	cbz	w0, 14c0 <_ZN4llvm7TGLexer10processEOFEv+0x100>
    1484:	ldr	x1, [x19]
    1488:	ldp	x2, x1, [x1]
    148c:	sub	x1, x1, x2
    1490:	asr	x1, x1, #3
    1494:	mul	x20, x1, x20
    1498:	cmp	x20, w0, uxtw
    149c:	b.cc	14c0 <_ZN4llvm7TGLexer10processEOFEv+0x100>  // b.lo, b.ul, b.last
    14a0:	sub	w0, w0, #0x1
    14a4:	umull	x23, w0, w23
    14a8:	ldr	x0, [x2, x23]
    14ac:	ldp	x1, x0, [x0, #8]
    14b0:	stp	x22, x1, [x19, #8]
    14b4:	sub	x0, x0, x1
    14b8:	stp	x0, x22, [x19, #24]
    14bc:	b	1428 <_ZN4llvm7TGLexer10processEOFEv+0x68>
    14c0:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    14c4:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    14c8:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    14cc:	add	x3, x3, #0x0
    14d0:	add	x1, x1, #0x0
    14d4:	add	x0, x0, #0x0
    14d8:	mov	w2, #0x85                  	// #133
    14dc:	bl	0 <__assert_fail>

00000000000014e0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>:
    14e0:	stp	x29, x30, [sp, #-160]!
    14e4:	mov	x29, sp
    14e8:	stp	x19, x20, [sp, #16]
    14ec:	mov	x20, x0
    14f0:	mov	w19, w1
    14f4:	stp	x21, x22, [sp, #32]
    14f8:	and	w21, w2, #0xff
    14fc:	bl	e78 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE>
    1500:	tst	w0, #0xff
    1504:	b.eq	1a98 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5b8>  // b.none
    1508:	sub	w0, w19, #0x4c
    150c:	cmp	w0, #0x1
    1510:	b.ls	1680 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1a0>  // b.plast
    1514:	cmp	w19, #0x4e
    1518:	b.eq	1608 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x128>  // b.none
    151c:	cmp	w19, #0x4f
    1520:	b.eq	1874 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x394>  // b.none
    1524:	cmp	w19, #0x50
    1528:	b.ne	1ad8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5f8>  // b.any
    152c:	mov	x0, x20
    1530:	bl	ef8 <_ZN4llvm7TGLexer16prepLexMacroNameEv>
    1534:	stp	x0, x1, [sp, #112]
    1538:	ldr	x19, [sp, #120]
    153c:	cbz	x19, 1794 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2b4>
    1540:	stp	x25, x26, [sp, #64]
    1544:	mov	x2, x19
    1548:	ldr	x26, [sp, #112]
    154c:	stp	x23, x24, [sp, #48]
    1550:	add	x23, x20, #0x90
    1554:	mov	x1, x26
    1558:	mov	x0, x23
    155c:	stp	x27, x28, [sp, #80]
    1560:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    1564:	mov	w27, w0
    1568:	ldr	x25, [x20, #144]
    156c:	mov	x22, x27
    1570:	ldr	x0, [x25, x27, lsl #3]
    1574:	add	x1, x25, w27, uxtw #3
    1578:	cbz	x0, 18e0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x400>
    157c:	cmn	x0, #0x8
    1580:	b.eq	18d4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3f4>  // b.none
    1584:	mov	w2, #0x0                   	// #0
    1588:	add	x22, sp, #0x88
    158c:	mov	x0, x22
    1590:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1594:	mov	x0, x20
    1598:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    159c:	add	x3, sp, #0x70
    15a0:	mov	x6, x0
    15a4:	adrp	x4, 0 <_ZNK4llvm7TGLexer6getLocEv>
    15a8:	add	x4, x4, #0x0
    15ac:	mov	w5, #0x503                 	// #1283
    15b0:	mov	x2, x22
    15b4:	add	x0, sp, #0x60
    15b8:	mov	x1, #0x1                   	// #1
    15bc:	str	x6, [sp, #96]
    15c0:	stp	x4, x3, [sp, #136]
    15c4:	strh	w5, [sp, #152]
    15c8:	bl	0 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    15cc:	mov	x0, x20
    15d0:	bl	1090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    15d4:	tst	w0, #0xff
    15d8:	b.eq	195c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x47c>  // b.none
    15dc:	cbz	w21, 1af0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x610>
    15e0:	mov	x0, x20
    15e4:	mov	w1, #0x0                   	// #0
    15e8:	bl	1b60 <_ZN4llvm7TGLexer8LexTokenEb>
    15ec:	ldp	x23, x24, [sp, #48]
    15f0:	ldp	x25, x26, [sp, #64]
    15f4:	ldp	x27, x28, [sp, #80]
    15f8:	ldp	x19, x20, [sp, #16]
    15fc:	ldp	x21, x22, [sp, #32]
    1600:	ldp	x29, x30, [sp], #160
    1604:	ret
    1608:	ldr	x1, [x20, #184]
    160c:	ldr	x0, [x20, #32]
    1610:	ldur	x3, [x1, #-8]
    1614:	ldp	x1, x2, [x3]
    1618:	cmp	x2, x1
    161c:	b.eq	19d8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4f8>  // b.none
    1620:	ldur	w1, [x2, #-16]
    1624:	ldur	x22, [x2, #-8]
    1628:	cmp	w1, #0x4c
    162c:	b.eq	1804 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x324>  // b.none
    1630:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1634:	add	x2, x2, #0x0
    1638:	add	x19, sp, #0x88
    163c:	mov	w21, #0x103                 	// #259
    1640:	mov	x1, x19
    1644:	stp	x2, xzr, [sp, #136]
    1648:	strh	w21, [sp, #152]
    164c:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    1650:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1654:	add	x3, x3, #0x0
    1658:	mov	x2, x19
    165c:	mov	x1, x22
    1660:	mov	x0, x20
    1664:	stp	x3, xzr, [sp, #136]
    1668:	strh	w21, [sp, #152]
    166c:	bl	8 <_ZN4llvm7TGLexer11ReturnErrorENS_5SMLocERKNS_5TwineE>
    1670:	ldp	x19, x20, [sp, #16]
    1674:	ldp	x21, x22, [sp, #32]
    1678:	ldp	x29, x30, [sp], #160
    167c:	ret
    1680:	mov	x0, x20
    1684:	stp	x23, x24, [sp, #48]
    1688:	bl	ef8 <_ZN4llvm7TGLexer16prepLexMacroNameEv>
    168c:	cmp	w19, #0x4c
    1690:	adrp	x2, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1694:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1698:	add	x2, x2, #0x0
    169c:	add	x3, x3, #0x0
    16a0:	mov	x22, x1
    16a4:	csel	x3, x3, x2, eq  // eq = none
    16a8:	mov	x23, x0
    16ac:	mov	x0, x3
    16b0:	str	x3, [sp, #96]
    16b4:	bl	0 <strlen>
    16b8:	str	x0, [sp, #104]
    16bc:	cbz	x22, 17c8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2e8>
    16c0:	mov	x1, x23
    16c4:	mov	x2, x22
    16c8:	add	x0, x20, #0x90
    16cc:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    16d0:	mov	w1, w0
    16d4:	cmn	w0, #0x1
    16d8:	b.eq	19fc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x51c>  // b.none
    16dc:	ldr	x3, [x20, #144]
    16e0:	add	x22, sp, #0x88
    16e4:	mov	x0, x22
    16e8:	mov	w2, #0x1                   	// #1
    16ec:	add	x1, x3, w1, sxtw #3
    16f0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    16f4:	ldr	x23, [sp, #136]
    16f8:	mov	x0, x22
    16fc:	ldr	w3, [x20, #152]
    1700:	mov	w2, #0x1                   	// #1
    1704:	ldr	x1, [x20, #144]
    1708:	add	x1, x1, x3, lsl #3
    170c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1710:	cmp	w19, #0x4d
    1714:	ldr	x0, [sp, #136]
    1718:	b.eq	19f0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x510>  // b.none
    171c:	cmp	x0, x23
    1720:	cset	w19, ne  // ne = any
    1724:	ldr	x0, [x20, #184]
    1728:	mov	w3, #0x4c                  	// #76
    172c:	ldr	x2, [x20, #32]
    1730:	ldur	x0, [x0, #-8]
    1734:	ldp	x1, x4, [x0, #8]
    1738:	str	w3, [sp, #136]
    173c:	strb	w19, [sp, #140]
    1740:	str	x2, [sp, #144]
    1744:	cmp	x1, x4
    1748:	b.eq	1a7c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x59c>  // b.none
    174c:	and	w5, w19, #0xff
    1750:	str	w3, [x1]
    1754:	strb	w5, [x1, #4]
    1758:	add	x4, x1, #0x10
    175c:	str	x2, [x1, #8]
    1760:	str	x4, [x0, #8]
    1764:	mov	x0, x20
    1768:	bl	1090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    176c:	tst	w0, #0xff
    1770:	b.eq	1a20 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x540>  // b.none
    1774:	mov	w0, #0x4c                  	// #76
    1778:	cbz	w21, 19a8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4c8>
    177c:	cbz	w19, 1990 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4b0>
    1780:	mov	x0, x20
    1784:	mov	w1, #0x0                   	// #0
    1788:	bl	1b60 <_ZN4llvm7TGLexer8LexTokenEb>
    178c:	ldp	x23, x24, [sp, #48]
    1790:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    1794:	ldr	x1, [x20, #32]
    1798:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    179c:	add	x3, x3, #0x0
    17a0:	mov	w4, #0x103                 	// #259
    17a4:	mov	x0, x20
    17a8:	add	x2, sp, #0x88
    17ac:	stp	x3, xzr, [sp, #136]
    17b0:	strh	w4, [sp, #152]
    17b4:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    17b8:	ldp	x19, x20, [sp, #16]
    17bc:	ldp	x21, x22, [sp, #32]
    17c0:	ldp	x29, x30, [sp], #160
    17c4:	ret
    17c8:	ldr	x1, [x20, #32]
    17cc:	add	x3, sp, #0x60
    17d0:	adrp	x4, 0 <_ZNK4llvm7TGLexer6getLocEv>
    17d4:	add	x4, x4, #0x0
    17d8:	mov	w5, #0x503                 	// #1283
    17dc:	add	x2, sp, #0x88
    17e0:	mov	x0, x20
    17e4:	stp	x4, x3, [sp, #136]
    17e8:	strh	w5, [sp, #152]
    17ec:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    17f0:	ldp	x19, x20, [sp, #16]
    17f4:	ldp	x21, x22, [sp, #32]
    17f8:	ldp	x23, x24, [sp, #48]
    17fc:	ldp	x29, x30, [sp], #160
    1800:	ret
    1804:	ldurb	w4, [x2, #-12]
    1808:	sub	x1, x2, #0x10
    180c:	str	x1, [x3, #8]
    1810:	ldr	x5, [x3, #16]
    1814:	eor	w4, w4, #0x1
    1818:	str	w19, [sp, #136]
    181c:	strb	w4, [sp, #140]
    1820:	cmp	x1, x5
    1824:	str	x0, [sp, #144]
    1828:	b.eq	1a88 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5a8>  // b.none
    182c:	and	w1, w4, #0xff
    1830:	stur	w19, [x2, #-16]
    1834:	sturb	w1, [x2, #-12]
    1838:	stur	x0, [x2, #-8]
    183c:	str	x2, [x3, #8]
    1840:	mov	x0, x20
    1844:	bl	1090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    1848:	tst	w0, #0xff
    184c:	b.eq	19b0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4d0>  // b.none
    1850:	mov	w0, #0x4e                  	// #78
    1854:	cbz	w21, 15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    1858:	mov	x0, x20
    185c:	mov	w1, #0x1                   	// #1
    1860:	bl	2790 <_ZN4llvm7TGLexer14prepSkipRegionEb>
    1864:	tst	w0, #0xff
    1868:	mov	w0, #0x1                   	// #1
    186c:	b.eq	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>  // b.none
    1870:	b	18c4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3e4>
    1874:	ldr	x0, [x20, #184]
    1878:	ldur	x0, [x0, #-8]
    187c:	ldp	x1, x0, [x0]
    1880:	cmp	x1, x0
    1884:	b.eq	1a68 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x588>  // b.none
    1888:	ldur	w0, [x0, #-16]
    188c:	and	w0, w0, #0xfffffffd
    1890:	cmp	w0, #0x4c
    1894:	b.ne	1ac0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5e0>  // b.any
    1898:	mov	x0, x20
    189c:	bl	1090 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    18a0:	tst	w0, #0xff
    18a4:	b.eq	19c4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4e4>  // b.none
    18a8:	ldr	x1, [x20, #184]
    18ac:	mov	w0, w19
    18b0:	ldur	x2, [x1, #-8]
    18b4:	ldr	x1, [x2, #8]
    18b8:	sub	x1, x1, #0x10
    18bc:	str	x1, [x2, #8]
    18c0:	cbz	w21, 15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    18c4:	mov	x0, x20
    18c8:	mov	w1, #0x0                   	// #0
    18cc:	bl	1b60 <_ZN4llvm7TGLexer8LexTokenEb>
    18d0:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    18d4:	ldr	w0, [x23, #16]
    18d8:	sub	w0, w0, #0x1
    18dc:	str	w0, [x23, #16]
    18e0:	add	x28, x19, #0x9
    18e4:	mov	x0, x28
    18e8:	bl	0 <malloc>
    18ec:	mov	x24, x0
    18f0:	cbz	x0, 1b28 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x648>
    18f4:	mov	x3, x0
    18f8:	str	x19, [x3], #8
    18fc:	mov	x1, x26
    1900:	mov	x2, x19
    1904:	mov	x0, x3
    1908:	bl	0 <memcpy>
    190c:	ldp	w1, w2, [x23, #12]
    1910:	strb	wzr, [x0, x19]
    1914:	str	x24, [x25, x27, lsl #3]
    1918:	add	w0, w1, #0x1
    191c:	ldr	w1, [x23, #8]
    1920:	str	w0, [x23, #12]
    1924:	add	w0, w0, w2
    1928:	cmp	w0, w1
    192c:	b.hi	1b08 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x628>  // b.pmore
    1930:	mov	w1, w22
    1934:	mov	x0, x23
    1938:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    193c:	mov	w3, w0
    1940:	ldr	x1, [x20, #144]
    1944:	add	x22, sp, #0x88
    1948:	mov	x0, x22
    194c:	mov	w2, #0x0                   	// #0
    1950:	add	x1, x1, w3, uxtw #3
    1954:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1958:	b	15cc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0xec>
    195c:	ldr	x1, [x20, #8]
    1960:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1964:	add	x3, x3, #0x0
    1968:	mov	w4, #0x103                 	// #259
    196c:	mov	x2, x22
    1970:	mov	x0, x20
    1974:	stp	x3, xzr, [sp, #136]
    1978:	strh	w4, [sp, #152]
    197c:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    1980:	ldp	x23, x24, [sp, #48]
    1984:	ldp	x25, x26, [sp, #64]
    1988:	ldp	x27, x28, [sp, #80]
    198c:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    1990:	mov	x0, x20
    1994:	mov	w1, #0x1                   	// #1
    1998:	bl	2790 <_ZN4llvm7TGLexer14prepSkipRegionEb>
    199c:	tst	w0, #0xff
    19a0:	mov	w0, #0x1                   	// #1
    19a4:	b.ne	1780 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2a0>  // b.any
    19a8:	ldp	x23, x24, [sp, #48]
    19ac:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    19b0:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    19b4:	mov	w4, #0x103                 	// #259
    19b8:	add	x3, x3, #0x0
    19bc:	ldr	x1, [x20, #8]
    19c0:	b	17a4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2c4>
    19c4:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    19c8:	mov	w4, #0x103                 	// #259
    19cc:	add	x3, x3, #0x0
    19d0:	ldr	x1, [x20, #8]
    19d4:	b	17a4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2c4>
    19d8:	mov	x1, x0
    19dc:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    19e0:	mov	x0, x20
    19e4:	add	x3, x3, #0x0
    19e8:	mov	w4, #0x103                 	// #259
    19ec:	b	17a8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2c8>
    19f0:	cmp	x0, x23
    19f4:	cset	w19, eq  // eq = none
    19f8:	b	1724 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x244>
    19fc:	ldr	w3, [x20, #152]
    1a00:	add	x22, sp, #0x88
    1a04:	ldr	x1, [x20, #144]
    1a08:	mov	x0, x22
    1a0c:	mov	w2, #0x1                   	// #1
    1a10:	add	x1, x1, x3, lsl #3
    1a14:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1a18:	ldr	x23, [sp, #136]
    1a1c:	b	16f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x218>
    1a20:	ldr	x1, [x20, #8]
    1a24:	add	x5, sp, #0x60
    1a28:	add	x4, sp, #0x70
    1a2c:	adrp	x6, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1a30:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1a34:	add	x6, x6, #0x0
    1a38:	add	x3, x3, #0x0
    1a3c:	mov	w8, #0x503                 	// #1283
    1a40:	mov	w7, #0x302                 	// #770
    1a44:	mov	x2, x22
    1a48:	mov	x0, x20
    1a4c:	stp	x6, x5, [sp, #112]
    1a50:	strh	w8, [sp, #128]
    1a54:	stp	x4, x3, [sp, #136]
    1a58:	strh	w7, [sp, #152]
    1a5c:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    1a60:	ldp	x23, x24, [sp, #48]
    1a64:	b	15f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x118>
    1a68:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1a6c:	mov	w4, #0x103                 	// #259
    1a70:	add	x3, x3, #0x0
    1a74:	ldr	x1, [x20, #32]
    1a78:	b	17a4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2c4>
    1a7c:	mov	x2, x22
    1a80:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1a84:	b	1764 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x284>
    1a88:	mov	x0, x3
    1a8c:	add	x2, sp, #0x88
    1a90:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1a94:	b	1840 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x360>
    1a98:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1a9c:	add	x1, x1, #0x0
    1aa0:	stp	x23, x24, [sp, #48]
    1aa4:	stp	x25, x26, [sp, #64]
    1aa8:	stp	x27, x28, [sp, #80]
    1aac:	add	x19, sp, #0x88
    1ab0:	mov	x0, x19
    1ab4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1ab8:	mov	x0, x19
    1abc:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    1ac0:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1ac4:	add	x1, x1, #0x0
    1ac8:	stp	x23, x24, [sp, #48]
    1acc:	stp	x25, x26, [sp, #64]
    1ad0:	stp	x27, x28, [sp, #80]
    1ad4:	b	1aac <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5cc>
    1ad8:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1adc:	add	x1, x1, #0x0
    1ae0:	stp	x23, x24, [sp, #48]
    1ae4:	stp	x25, x26, [sp, #64]
    1ae8:	stp	x27, x28, [sp, #80]
    1aec:	b	1aac <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5cc>
    1af0:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1af4:	add	x1, x1, #0x0
    1af8:	mov	x0, x22
    1afc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1b00:	mov	x0, x22
    1b04:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    1b08:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1b0c:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1b10:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1b14:	add	x3, x3, #0x0
    1b18:	add	x1, x1, #0x0
    1b1c:	add	x0, x0, #0x0
    1b20:	mov	w2, #0x1bb                 	// #443
    1b24:	bl	0 <__assert_fail>
    1b28:	cbz	x28, 1b40 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x660>
    1b2c:	mov	w1, #0x1                   	// #1
    1b30:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1b34:	add	x0, x0, #0x0
    1b38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1b3c:	brk	#0x3e8
    1b40:	mov	x0, #0x1                   	// #1
    1b44:	bl	0 <malloc>
    1b48:	mov	x24, x0
    1b4c:	cbz	x0, 1b2c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x64c>
    1b50:	mov	x3, x0
    1b54:	mov	x0, #0xfffffffffffffff7    	// #-9
    1b58:	str	x0, [x3], #8
    1b5c:	b	18fc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x41c>

0000000000001b60 <_ZN4llvm7TGLexer8LexTokenEb>:
    1b60:	stp	x29, x30, [sp, #-80]!
    1b64:	mov	x29, sp
    1b68:	str	x21, [sp, #32]
    1b6c:	and	w21, w1, #0xff
    1b70:	ldr	x1, [x0, #8]
    1b74:	stp	x19, x20, [sp, #16]
    1b78:	mov	x19, x0
    1b7c:	str	x1, [x0, #32]
    1b80:	bl	40 <_ZN4llvm7TGLexer11getNextCharEv>
    1b84:	mov	w20, w0
    1b88:	add	w0, w0, #0x1
    1b8c:	cmp	w0, #0x7e
    1b90:	b.ls	1bc0 <_ZN4llvm7TGLexer8LexTokenEb+0x60>  // b.plast
    1b94:	mov	w0, w20
    1b98:	bl	0 <isalpha>
    1b9c:	cmp	w20, #0x5f
    1ba0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1ba4:	b.eq	1c54 <_ZN4llvm7TGLexer8LexTokenEb+0xf4>  // b.none
    1ba8:	mov	x0, x19
    1bac:	bl	21d0 <_ZN4llvm7TGLexer13LexIdentifierEv>
    1bb0:	ldp	x19, x20, [sp, #16]
    1bb4:	ldr	x21, [sp, #32]
    1bb8:	ldp	x29, x30, [sp], #80
    1bbc:	ret
    1bc0:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1bc4:	add	x1, x1, #0x0
    1bc8:	ldrb	w0, [x1, w0, uxtw]
    1bcc:	adr	x1, 1bd8 <_ZN4llvm7TGLexer8LexTokenEb+0x78>
    1bd0:	add	x0, x1, w0, sxtb #2
    1bd4:	br	x0
    1bd8:	mov	x0, x19
    1bdc:	bl	460 <_ZN4llvm7TGLexer15SkipBCPLCommentEv>
    1be0:	mov	w1, w21
    1be4:	mov	x0, x19
    1be8:	bl	1b60 <_ZN4llvm7TGLexer8LexTokenEb>
    1bec:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1bf0:	sub	w20, w20, #0x30
    1bf4:	cmp	w20, #0x9
    1bf8:	b.hi	1dcc <_ZN4llvm7TGLexer8LexTokenEb+0x26c>  // b.pmore
    1bfc:	mov	w21, #0x0                   	// #0
    1c00:	mov	w1, w21
    1c04:	mov	x0, x19
    1c08:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
    1c0c:	mov	w20, w0
    1c10:	sub	w0, w0, #0x30
    1c14:	add	w21, w21, #0x1
    1c18:	cmp	w0, #0x9
    1c1c:	b.ls	1c00 <_ZN4llvm7TGLexer8LexTokenEb+0xa0>  // b.plast
    1c20:	cmp	w20, #0x78
    1c24:	mov	w0, #0x62                  	// #98
    1c28:	ccmp	w20, w0, #0x4, ne  // ne = any
    1c2c:	b.eq	1ddc <_ZN4llvm7TGLexer8LexTokenEb+0x27c>  // b.none
    1c30:	mov	w0, w20
    1c34:	bl	0 <isalpha>
    1c38:	cmp	w20, #0x5f
    1c3c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1c40:	b.ne	1ba8 <_ZN4llvm7TGLexer8LexTokenEb+0x48>  // b.any
    1c44:	nop
    1c48:	mov	x0, x19
    1c4c:	bl	560 <_ZN4llvm7TGLexer9LexNumberEv>
    1c50:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c54:	ldr	x1, [x19, #32]
    1c58:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1c5c:	add	x3, x3, #0x0
    1c60:	mov	w4, #0x103                 	// #259
    1c64:	mov	x0, x19
    1c68:	add	x2, sp, #0x38
    1c6c:	stp	x3, xzr, [sp, #56]
    1c70:	strh	w4, [sp, #72]
    1c74:	bl	38 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>
    1c78:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c7c:	mov	x0, x19
    1c80:	mov	w1, #0x1                   	// #1
    1c84:	bl	1b60 <_ZN4llvm7TGLexer8LexTokenEb>
    1c88:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1c8c:	mov	x0, x19
    1c90:	bl	13c0 <_ZN4llvm7TGLexer10processEOFEv>
    1c94:	mov	w1, w0
    1c98:	mov	w0, #0x0                   	// #0
    1c9c:	tst	w1, #0xff
    1ca0:	b.eq	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>  // b.none
    1ca4:	mov	x0, x19
    1ca8:	mov	w1, #0x0                   	// #0
    1cac:	bl	1b60 <_ZN4llvm7TGLexer8LexTokenEb>
    1cb0:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cb4:	mov	w0, #0x9                   	// #9
    1cb8:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cbc:	mov	w0, #0x7                   	// #7
    1cc0:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cc4:	mov	w0, #0x6                   	// #6
    1cc8:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1ccc:	mov	w0, #0x5                   	// #5
    1cd0:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cd4:	mov	x0, x19
    1cd8:	bl	788 <_ZN4llvm7TGLexer10LexBracketEv>
    1cdc:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1ce0:	mov	w0, #0x11                  	// #17
    1ce4:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1ce8:	mov	w0, #0xb                   	// #11
    1cec:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cf0:	mov	w0, #0x10                  	// #16
    1cf4:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1cf8:	mov	w0, #0xa                   	// #10
    1cfc:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d00:	ldr	x0, [x19, #8]
    1d04:	ldrb	w0, [x0]
    1d08:	cmp	w0, #0x2f
    1d0c:	b.eq	1bd8 <_ZN4llvm7TGLexer8LexTokenEb+0x78>  // b.none
    1d10:	cmp	w0, #0x2a
    1d14:	b.ne	1c54 <_ZN4llvm7TGLexer8LexTokenEb+0xf4>  // b.any
    1d18:	mov	x0, x19
    1d1c:	bl	498 <_ZN4llvm7TGLexer12SkipCCommentEv>
    1d20:	mov	w1, w0
    1d24:	mov	w0, #0x1                   	// #1
    1d28:	tst	w1, #0xff
    1d2c:	b.eq	1be0 <_ZN4llvm7TGLexer8LexTokenEb+0x80>  // b.none
    1d30:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d34:	mov	w0, #0xf                   	// #15
    1d38:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d3c:	cbz	w21, 1dc4 <_ZN4llvm7TGLexer8LexTokenEb+0x264>
    1d40:	mov	x0, x19
    1d44:	bl	d88 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>
    1d48:	mov	w1, w0
    1d4c:	cmp	w0, #0x1
    1d50:	b.eq	1dc4 <_ZN4llvm7TGLexer8LexTokenEb+0x264>  // b.none
    1d54:	mov	x0, x19
    1d58:	mov	w2, #0x1                   	// #1
    1d5c:	bl	14e0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>
    1d60:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d64:	mov	x0, x19
    1d68:	bl	c8 <_ZN4llvm7TGLexer9LexStringEv>
    1d6c:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d70:	mov	x0, x19
    1d74:	bl	860 <_ZN4llvm7TGLexer10LexExclaimEv>
    1d78:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d7c:	mov	w0, #0x8                   	// #8
    1d80:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d84:	mov	x0, x19
    1d88:	bl	398 <_ZN4llvm7TGLexer10LexVarNameEv>
    1d8c:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d90:	mov	w0, #0xe                   	// #14
    1d94:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1d98:	mov	w0, #0xc                   	// #12
    1d9c:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1da0:	mov	w0, #0xd                   	// #13
    1da4:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1da8:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1dac:	add	x1, x1, #0x0
    1db0:	add	x19, sp, #0x38
    1db4:	mov	x0, x19
    1db8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1dbc:	mov	x0, x19
    1dc0:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    1dc4:	mov	w0, #0x12                  	// #18
    1dc8:	b	1bb0 <_ZN4llvm7TGLexer8LexTokenEb+0x50>
    1dcc:	mov	w0, #0x0                   	// #0
    1dd0:	bl	0 <isalpha>
    1dd4:	cbz	w0, 1c48 <_ZN4llvm7TGLexer8LexTokenEb+0xe8>
    1dd8:	b	1ba8 <_ZN4llvm7TGLexer8LexTokenEb+0x48>
    1ddc:	mov	w1, w21
    1de0:	mov	x0, x19
    1de4:	bl	b8 <_ZNK4llvm7TGLexer12peekNextCharEi>
    1de8:	cmp	w0, #0x39
    1dec:	b.gt	1e08 <_ZN4llvm7TGLexer8LexTokenEb+0x2a8>
    1df0:	cmp	w0, #0x31
    1df4:	b.gt	1e18 <_ZN4llvm7TGLexer8LexTokenEb+0x2b8>
    1df8:	sub	w0, w0, #0x30
    1dfc:	cmp	w0, #0x1
    1e00:	b.ls	1c48 <_ZN4llvm7TGLexer8LexTokenEb+0xe8>  // b.plast
    1e04:	b	1c30 <_ZN4llvm7TGLexer8LexTokenEb+0xd0>
    1e08:	cmp	w0, #0x46
    1e0c:	b.gt	1e24 <_ZN4llvm7TGLexer8LexTokenEb+0x2c4>
    1e10:	cmp	w0, #0x40
    1e14:	b.le	1c30 <_ZN4llvm7TGLexer8LexTokenEb+0xd0>
    1e18:	cmp	w20, #0x78
    1e1c:	b.ne	1c30 <_ZN4llvm7TGLexer8LexTokenEb+0xd0>  // b.any
    1e20:	b	1c48 <_ZN4llvm7TGLexer8LexTokenEb+0xe8>
    1e24:	sub	w0, w0, #0x61
    1e28:	cmp	w0, #0x5
    1e2c:	b.ls	1e18 <_ZN4llvm7TGLexer8LexTokenEb+0x2b8>  // b.plast
    1e30:	b	1c30 <_ZN4llvm7TGLexer8LexTokenEb+0xd0>
    1e34:	nop

0000000000001e38 <_ZN4llvm7TGLexer10LexIncludeEv>:
    1e38:	stp	x29, x30, [sp, #-224]!
    1e3c:	mov	w1, #0x0                   	// #0
    1e40:	mov	x29, sp
    1e44:	stp	x19, x20, [sp, #16]
    1e48:	mov	x19, x0
    1e4c:	bl	1b60 <_ZN4llvm7TGLexer8LexTokenEb>
    1e50:	cmp	w0, #0x1
    1e54:	b.eq	2010 <_ZN4llvm7TGLexer10LexIncludeEv+0x1d8>  // b.none
    1e58:	cmp	w0, #0x49
    1e5c:	b.ne	1fc8 <_ZN4llvm7TGLexer10LexIncludeEv+0x190>  // b.any
    1e60:	stp	x21, x22, [sp, #32]
    1e64:	add	x22, sp, #0x60
    1e68:	add	x1, x22, #0x10
    1e6c:	ldr	x21, [x19, #56]
    1e70:	str	x23, [sp, #48]
    1e74:	ldr	x23, [x19, #48]
    1e78:	str	x1, [sp, #96]
    1e7c:	cmn	x23, x21
    1e80:	cset	w0, ne  // ne = any
    1e84:	cmp	x23, #0x0
    1e88:	csel	w20, w0, wzr, eq  // eq = none
    1e8c:	cbnz	w20, 21c4 <_ZN4llvm7TGLexer10LexIncludeEv+0x38c>
    1e90:	str	x21, [sp, #192]
    1e94:	cmp	x21, #0xf
    1e98:	b.hi	215c <_ZN4llvm7TGLexer10LexIncludeEv+0x324>  // b.pmore
    1e9c:	cmp	x21, #0x1
    1ea0:	b.ne	2024 <_ZN4llvm7TGLexer10LexIncludeEv+0x1ec>  // b.any
    1ea4:	ldrb	w2, [x23]
    1ea8:	mov	x0, x1
    1eac:	strb	w2, [sp, #112]
    1eb0:	str	x21, [sp, #104]
    1eb4:	mov	x1, x22
    1eb8:	strb	wzr, [x0, x21]
    1ebc:	add	x21, sp, #0x80
    1ec0:	add	x4, x21, #0x10
    1ec4:	mov	x3, x21
    1ec8:	ldp	x0, x2, [x19]
    1ecc:	stp	x4, xzr, [sp, #128]
    1ed0:	strb	wzr, [sp, #144]
    1ed4:	bl	0 <_ZN4llvm9SourceMgr14AddIncludeFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_5SMLocERS6_>
    1ed8:	str	w0, [x19, #88]
    1edc:	cbz	w0, 2050 <_ZN4llvm7TGLexer10LexIncludeEv+0x218>
    1ee0:	mov	x1, x21
    1ee4:	add	x0, x19, #0x60
    1ee8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1eec:	ldr	w1, [x19, #88]
    1ef0:	cbz	w1, 2030 <_ZN4llvm7TGLexer10LexIncludeEv+0x1f8>
    1ef4:	ldr	x2, [x19]
    1ef8:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1efc:	movk	x4, #0xaaab
    1f00:	ldp	x3, x0, [x2]
    1f04:	sub	x0, x0, x3
    1f08:	asr	x0, x0, #3
    1f0c:	mul	x0, x0, x4
    1f10:	cmp	x0, w1, uxtw
    1f14:	b.cc	2030 <_ZN4llvm7TGLexer10LexIncludeEv+0x1f8>  // b.lo, b.ul, b.last
    1f18:	sub	w1, w1, #0x1
    1f1c:	mov	w2, #0x18                  	// #24
    1f20:	mov	x0, #0x18                  	// #24
    1f24:	umull	x1, w1, w2
    1f28:	ldr	x1, [x3, x1]
    1f2c:	ldp	x2, x1, [x1, #8]
    1f30:	stp	x2, x2, [x19, #8]
    1f34:	add	x19, x19, #0xb0
    1f38:	sub	x1, x1, x2
    1f3c:	stur	x1, [x19, #-152]
    1f40:	bl	0 <_Znwm>
    1f44:	stp	xzr, xzr, [x0]
    1f48:	ldp	x1, x2, [x19, #8]
    1f4c:	str	xzr, [x0, #16]
    1f50:	str	x0, [sp, #192]
    1f54:	cmp	x1, x2
    1f58:	b.eq	21a8 <_ZN4llvm7TGLexer10LexIncludeEv+0x370>  // b.none
    1f5c:	str	xzr, [sp, #192]
    1f60:	str	x0, [x1], #8
    1f64:	str	x1, [x19, #8]
    1f68:	ldr	x19, [sp, #192]
    1f6c:	cbz	x19, 1f88 <_ZN4llvm7TGLexer10LexIncludeEv+0x150>
    1f70:	ldr	x0, [x19]
    1f74:	cbz	x0, 1f7c <_ZN4llvm7TGLexer10LexIncludeEv+0x144>
    1f78:	bl	0 <_ZdlPv>
    1f7c:	mov	x0, x19
    1f80:	mov	x1, #0x18                  	// #24
    1f84:	bl	0 <_ZdlPvm>
    1f88:	ldr	x0, [sp, #128]
    1f8c:	add	x3, x21, #0x10
    1f90:	cmp	x0, x3
    1f94:	b.eq	1f9c <_ZN4llvm7TGLexer10LexIncludeEv+0x164>  // b.none
    1f98:	bl	0 <_ZdlPv>
    1f9c:	ldr	x0, [sp, #96]
    1fa0:	add	x22, x22, #0x10
    1fa4:	cmp	x0, x22
    1fa8:	b.eq	2190 <_ZN4llvm7TGLexer10LexIncludeEv+0x358>  // b.none
    1fac:	bl	0 <_ZdlPv>
    1fb0:	mov	w0, w20
    1fb4:	ldp	x19, x20, [sp, #16]
    1fb8:	ldp	x21, x22, [sp, #32]
    1fbc:	ldr	x23, [sp, #48]
    1fc0:	ldp	x29, x30, [sp], #224
    1fc4:	ret
    1fc8:	mov	x0, x19
    1fcc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1fd0:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    1fd4:	mov	x5, x0
    1fd8:	add	x3, x3, #0x0
    1fdc:	mov	w4, #0x103                 	// #259
    1fe0:	add	x2, sp, #0xc0
    1fe4:	add	x0, sp, #0xa0
    1fe8:	mov	x1, #0x1                   	// #1
    1fec:	mov	w20, #0x1                   	// #1
    1ff0:	str	x5, [sp, #160]
    1ff4:	stp	x3, xzr, [sp, #192]
    1ff8:	strh	w4, [sp, #208]
    1ffc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2000:	mov	w0, w20
    2004:	ldp	x19, x20, [sp, #16]
    2008:	ldp	x29, x30, [sp], #224
    200c:	ret
    2010:	mov	w20, w0
    2014:	mov	w0, w20
    2018:	ldp	x19, x20, [sp, #16]
    201c:	ldp	x29, x30, [sp], #224
    2020:	ret
    2024:	mov	x0, x1
    2028:	cbz	x21, 1eb0 <_ZN4llvm7TGLexer10LexIncludeEv+0x78>
    202c:	b	2178 <_ZN4llvm7TGLexer10LexIncludeEv+0x340>
    2030:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2034:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2038:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    203c:	add	x3, x3, #0x0
    2040:	add	x1, x1, #0x0
    2044:	add	x0, x0, #0x0
    2048:	mov	w2, #0x85                  	// #133
    204c:	bl	0 <__assert_fail>
    2050:	mov	x0, x19
    2054:	add	x19, sp, #0xc0
    2058:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    205c:	mov	x3, x0
    2060:	add	x2, x19, #0x10
    2064:	mov	x0, x19
    2068:	ldr	x1, [sp, #104]
    206c:	str	x3, [sp, #64]
    2070:	stp	x2, xzr, [sp, #192]
    2074:	mov	x20, #0x3fffffffffffffff    	// #4611686018427387903
    2078:	add	x1, x1, #0x1d
    207c:	strb	wzr, [sp, #208]
    2080:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    2084:	ldr	x0, [sp, #200]
    2088:	add	x23, sp, #0x40
    208c:	sub	x0, x20, x0
    2090:	cmp	x0, #0x1c
    2094:	b.ls	21b8 <_ZN4llvm7TGLexer10LexIncludeEv+0x380>  // b.plast
    2098:	mov	x2, #0x1d                  	// #29
    209c:	mov	x0, x19
    20a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    20a4:	add	x1, x1, #0x0
    20a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    20ac:	ldp	x1, x2, [sp, #96]
    20b0:	mov	x0, x19
    20b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    20b8:	ldr	x0, [sp, #200]
    20bc:	cmp	x0, x20
    20c0:	b.eq	21b8 <_ZN4llvm7TGLexer10LexIncludeEv+0x380>  // b.none
    20c4:	mov	x2, #0x1                   	// #1
    20c8:	mov	x0, x19
    20cc:	add	x20, sp, #0xa0
    20d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    20d4:	add	x1, x1, #0x0
    20d8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    20dc:	add	x2, x20, #0x10
    20e0:	str	x2, [sp, #160]
    20e4:	mov	x1, x0
    20e8:	ldr	x2, [x0], #16
    20ec:	cmp	x2, x0
    20f0:	b.eq	219c <_ZN4llvm7TGLexer10LexIncludeEv+0x364>  // b.none
    20f4:	str	x2, [sp, #160]
    20f8:	ldr	x2, [x1, #16]
    20fc:	str	x2, [sp, #176]
    2100:	ldr	x2, [x1, #8]
    2104:	str	x2, [sp, #168]
    2108:	mov	w3, #0x104                 	// #260
    210c:	stp	x0, xzr, [x1]
    2110:	add	x2, sp, #0x48
    2114:	strb	wzr, [x1, #16]
    2118:	mov	x0, x23
    211c:	mov	x1, #0x1                   	// #1
    2120:	stp	x20, xzr, [sp, #72]
    2124:	add	x20, x20, #0x10
    2128:	strh	w3, [sp, #88]
    212c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2130:	ldr	x0, [sp, #160]
    2134:	cmp	x0, x20
    2138:	b.eq	2140 <_ZN4llvm7TGLexer10LexIncludeEv+0x308>  // b.none
    213c:	bl	0 <_ZdlPv>
    2140:	ldr	x0, [sp, #192]
    2144:	add	x19, x19, #0x10
    2148:	cmp	x0, x19
    214c:	b.eq	2154 <_ZN4llvm7TGLexer10LexIncludeEv+0x31c>  // b.none
    2150:	bl	0 <_ZdlPv>
    2154:	mov	w20, #0x1                   	// #1
    2158:	b	1f88 <_ZN4llvm7TGLexer10LexIncludeEv+0x150>
    215c:	add	x1, sp, #0xc0
    2160:	mov	x0, x22
    2164:	mov	x2, #0x0                   	// #0
    2168:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    216c:	ldr	x1, [sp, #192]
    2170:	str	x0, [sp, #96]
    2174:	str	x1, [sp, #112]
    2178:	mov	x2, x21
    217c:	mov	x1, x23
    2180:	bl	0 <memcpy>
    2184:	ldr	x0, [sp, #96]
    2188:	ldr	x21, [sp, #192]
    218c:	b	1eb0 <_ZN4llvm7TGLexer10LexIncludeEv+0x78>
    2190:	ldp	x21, x22, [sp, #32]
    2194:	ldr	x23, [sp, #48]
    2198:	b	2000 <_ZN4llvm7TGLexer10LexIncludeEv+0x1c8>
    219c:	ldp	x2, x3, [x1, #16]
    21a0:	stp	x2, x3, [sp, #176]
    21a4:	b	2100 <_ZN4llvm7TGLexer10LexIncludeEv+0x2c8>
    21a8:	mov	x0, x19
    21ac:	add	x2, sp, #0xc0
    21b0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    21b4:	b	1f68 <_ZN4llvm7TGLexer10LexIncludeEv+0x130>
    21b8:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    21bc:	add	x0, x0, #0x0
    21c0:	bl	0 <_ZSt20__throw_length_errorPKc>
    21c4:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    21c8:	add	x0, x0, #0x0
    21cc:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000021d0 <_ZN4llvm7TGLexer13LexIdentifierEv>:
    21d0:	stp	x29, x30, [sp, #-80]!
    21d4:	mov	x29, sp
    21d8:	stp	x19, x20, [sp, #16]
    21dc:	stp	x21, x22, [sp, #32]
    21e0:	mov	x21, x0
    21e4:	ldr	x19, [x0, #8]
    21e8:	ldr	x22, [x0, #32]
    21ec:	b	21f8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x28>
    21f0:	add	x19, x19, #0x1
    21f4:	str	x19, [x21, #8]
    21f8:	ldrb	w20, [x19]
    21fc:	mov	w0, w20
    2200:	bl	0 <isalpha>
    2204:	sub	w1, w20, #0x30
    2208:	cmp	w1, #0x9
    220c:	cbnz	w0, 21f0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x20>
    2210:	cset	w1, hi  // hi = pmore
    2214:	cmp	w20, #0x5f
    2218:	csel	w1, w1, wzr, ne  // ne = any
    221c:	cbz	w1, 21f0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x20>
    2220:	sub	x4, x19, x22
    2224:	cmp	x4, #0x7
    2228:	b.eq	2294 <_ZN4llvm7TGLexer13LexIdentifierEv+0xc4>  // b.none
    222c:	strb	wzr, [sp, #72]
    2230:	cmp	x4, #0x6
    2234:	cset	w6, eq  // eq = none
    2238:	cmp	x4, #0x3
    223c:	b.eq	22b4 <_ZN4llvm7TGLexer13LexIdentifierEv+0xe4>  // b.none
    2240:	cmp	x4, #0x4
    2244:	b.eq	23b8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1e8>  // b.none
    2248:	cmp	x4, #0x6
    224c:	mov	w2, #0x0                   	// #0
    2250:	b.eq	22d8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x108>  // b.none
    2254:	cmp	x4, #0x5
    2258:	mov	w6, #0x0                   	// #0
    225c:	cset	w3, eq  // eq = none
    2260:	cbz	w2, 22f8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x128>
    2264:	ldrh	w0, [x22]
    2268:	mov	w1, #0x6164                	// #24932
    226c:	cmp	w0, w1
    2270:	b.eq	2698 <_ZN4llvm7TGLexer13LexIdentifierEv+0x4c8>  // b.none
    2274:	mov	w1, #0x6564                	// #25956
    2278:	cmp	w0, w1
    227c:	b.eq	2718 <_ZN4llvm7TGLexer13LexIdentifierEv+0x548>  // b.none
    2280:	mov	w0, w2
    2284:	mov	w6, #0x0                   	// #0
    2288:	mov	w7, #0x0                   	// #0
    228c:	mov	w1, #0x0                   	// #0
    2290:	b	233c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>
    2294:	ldr	w2, [x22]
    2298:	mov	w0, #0x6e69                	// #28265
    229c:	movk	w0, #0x6c63, lsl #16
    22a0:	cmp	w2, w0
    22a4:	b.eq	24d8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x308>  // b.none
    22a8:	mov	w2, #0x0                   	// #0
    22ac:	strb	wzr, [sp, #72]
    22b0:	b	2254 <_ZN4llvm7TGLexer13LexIdentifierEv+0x84>
    22b4:	ldrh	w0, [x22]
    22b8:	mov	w2, #0x6e69                	// #28265
    22bc:	cmp	w0, w2
    22c0:	b.eq	2740 <_ZN4llvm7TGLexer13LexIdentifierEv+0x570>  // b.none
    22c4:	mov	w2, #0x6962                	// #26978
    22c8:	cmp	w0, w2
    22cc:	b.eq	26c0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x4f0>  // b.none
    22d0:	mov	w2, w1
    22d4:	b	2254 <_ZN4llvm7TGLexer13LexIdentifierEv+0x84>
    22d8:	ldr	w3, [x22]
    22dc:	mov	w0, #0x7473                	// #29811
    22e0:	movk	w0, #0x6972, lsl #16
    22e4:	cmp	w3, w0
    22e8:	b.eq	26e4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x514>  // b.none
    22ec:	cmp	x4, #0x5
    22f0:	mov	w6, w1
    22f4:	cset	w3, eq  // eq = none
    22f8:	mov	w7, #0x0                   	// #0
    22fc:	cmp	x4, #0x7
    2300:	cset	w5, eq  // eq = none
    2304:	cbz	w3, 277c <_ZN4llvm7TGLexer13LexIdentifierEv+0x5ac>
    2308:	ldr	w1, [x22]
    230c:	mov	w0, #0x6c63                	// #27747
    2310:	movk	w0, #0x7361, lsl #16
    2314:	cmp	w1, w0
    2318:	b.eq	2758 <_ZN4llvm7TGLexer13LexIdentifierEv+0x588>  // b.none
    231c:	mov	w0, w3
    2320:	mov	w1, #0x0                   	// #0
    2324:	mov	w2, #0x0                   	// #0
    2328:	cbnz	w5, 23f8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x228>
    232c:	nop
    2330:	and	w5, w0, w7
    2334:	ands	w5, w5, #0xff
    2338:	b.ne	2590 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3c0>  // b.any
    233c:	and	w5, w0, w6
    2340:	and	w5, w5, #0xff
    2344:	cbnz	w5, 2654 <_ZN4llvm7TGLexer13LexIdentifierEv+0x484>
    2348:	cmp	x4, #0xa
    234c:	cset	w5, eq  // eq = none
    2350:	and	w5, w0, w5
    2354:	cbnz	w5, 2614 <_ZN4llvm7TGLexer13LexIdentifierEv+0x444>
    2358:	and	w3, w0, w3
    235c:	cbnz	w3, 25e0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x410>
    2360:	and	w2, w0, w2
    2364:	and	w2, w2, #0xff
    2368:	cbnz	w2, 25b8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3e8>
    236c:	cmp	x4, #0x2
    2370:	cset	w2, eq  // eq = none
    2374:	and	w2, w0, w2
    2378:	cbnz	w2, 255c <_ZN4llvm7TGLexer13LexIdentifierEv+0x38c>
    237c:	and	w0, w0, w6
    2380:	and	w0, w0, #0xff
    2384:	cbnz	w0, 243c <_ZN4llvm7TGLexer13LexIdentifierEv+0x26c>
    2388:	cbnz	w1, 2468 <_ZN4llvm7TGLexer13LexIdentifierEv+0x298>
    238c:	cbnz	w7, 2528 <_ZN4llvm7TGLexer13LexIdentifierEv+0x358>
    2390:	ldr	x2, [x21, #56]
    2394:	mov	x3, x22
    2398:	add	x0, x21, #0x30
    239c:	mov	x1, #0x0                   	// #0
    23a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    23a4:	mov	w0, #0x48                  	// #72
    23a8:	ldp	x19, x20, [sp, #16]
    23ac:	ldp	x21, x22, [sp, #32]
    23b0:	ldp	x29, x30, [sp], #80
    23b4:	ret
    23b8:	ldr	w0, [x22]
    23bc:	mov	w2, #0x6962                	// #26978
    23c0:	movk	w2, #0x7374, lsl #16
    23c4:	cmp	w0, w2
    23c8:	b.ne	2484 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2b4>  // b.any
    23cc:	mov	w7, w1
    23d0:	mov	w0, #0x14                  	// #20
    23d4:	mov	w2, #0x0                   	// #0
    23d8:	str	w0, [sp, #72]
    23dc:	cmp	x4, #0x5
    23e0:	mov	w0, #0x0                   	// #0
    23e4:	cset	w3, eq  // eq = none
    23e8:	cmp	x4, #0x7
    23ec:	cset	w5, eq  // eq = none
    23f0:	and	w5, w5, w0
    23f4:	cbz	w5, 2330 <_ZN4llvm7TGLexer13LexIdentifierEv+0x160>
    23f8:	ldr	w9, [x22]
    23fc:	mov	w8, #0x6f66                	// #28518
    2400:	movk	w8, #0x6572, lsl #16
    2404:	cmp	w9, w8
    2408:	b.ne	233c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>  // b.any
    240c:	ldrh	w9, [x22, #4]
    2410:	mov	w8, #0x6361                	// #25441
    2414:	cmp	w9, w8
    2418:	b.ne	233c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>  // b.any
    241c:	ldrb	w8, [x22, #6]
    2420:	cmp	w8, #0x68
    2424:	b.ne	233c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>  // b.any
    2428:	mov	w1, w5
    242c:	mov	w0, #0x0                   	// #0
    2430:	mov	w5, #0x19                  	// #25
    2434:	str	w5, [sp, #72]
    2438:	b	2348 <_ZN4llvm7TGLexer13LexIdentifierEv+0x178>
    243c:	ldr	w2, [x22]
    2440:	mov	w0, #0x6564                	// #25956
    2444:	movk	w0, #0x7666, lsl #16
    2448:	cmp	w2, w0
    244c:	b.ne	2388 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1b8>  // b.any
    2450:	ldrh	w2, [x22, #4]
    2454:	mov	w0, #0x7261                	// #29281
    2458:	cmp	w2, w0
    245c:	b.ne	2388 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1b8>  // b.any
    2460:	mov	w0, #0x23                  	// #35
    2464:	str	w0, [sp, #72]
    2468:	ldr	w0, [sp, #72]
    246c:	cmp	w0, #0x48
    2470:	b.eq	2390 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1c0>  // b.none
    2474:	ldp	x19, x20, [sp, #16]
    2478:	ldp	x21, x22, [sp, #32]
    247c:	ldp	x29, x30, [sp], #80
    2480:	ret
    2484:	mov	w2, #0x696c                	// #26988
    2488:	movk	w2, #0x7473, lsl #16
    248c:	cmp	w0, w2
    2490:	b.ne	24a0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2d0>  // b.any
    2494:	mov	w0, #0x1f                  	// #31
    2498:	str	w0, [sp, #72]
    249c:	b	24b8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2e8>
    24a0:	mov	w2, #0x6f63                	// #28515
    24a4:	movk	w2, #0x6564, lsl #16
    24a8:	cmp	w0, w2
    24ac:	b.ne	268c <_ZN4llvm7TGLexer13LexIdentifierEv+0x4bc>  // b.any
    24b0:	mov	w0, #0x16                  	// #22
    24b4:	str	w0, [sp, #72]
    24b8:	cmp	x4, #0x5
    24bc:	mov	w0, #0x0                   	// #0
    24c0:	mov	w5, #0x0                   	// #0
    24c4:	mov	w7, w1
    24c8:	cset	w3, eq  // eq = none
    24cc:	and	w5, w5, w0
    24d0:	mov	w2, #0x0                   	// #0
    24d4:	b	23f4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x224>
    24d8:	ldrh	w2, [x22, #4]
    24dc:	mov	w0, #0x6475                	// #25717
    24e0:	cmp	w2, w0
    24e4:	b.ne	22a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0xd8>  // b.any
    24e8:	ldrb	w0, [x22, #6]
    24ec:	cmp	w0, #0x65
    24f0:	b.ne	22a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0xd8>  // b.any
    24f4:	mov	x0, x21
    24f8:	bl	1e38 <_ZN4llvm7TGLexer10LexIncludeEv>
    24fc:	mov	w1, w0
    2500:	mov	w0, #0x1                   	// #1
    2504:	tst	w1, #0xff
    2508:	b.ne	23a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1d8>  // b.any
    250c:	ldp	x2, x1, [x21, #8]
    2510:	mov	x0, x21
    2514:	cmp	x2, x1
    2518:	cset	w1, eq  // eq = none
    251c:	bl	1b60 <_ZN4llvm7TGLexer8LexTokenEb>
    2520:	str	w0, [x21, #40]
    2524:	b	23a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1d8>
    2528:	ldr	w1, [x22]
    252c:	mov	w0, #0x6874                	// #26740
    2530:	movk	w0, #0x6e65, lsl #16
    2534:	cmp	w1, w0
    2538:	b.ne	2544 <_ZN4llvm7TGLexer13LexIdentifierEv+0x374>  // b.any
    253c:	mov	w0, #0x25                  	// #37
    2540:	b	23a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1d8>
    2544:	mov	w2, #0x6c65                	// #27749
    2548:	mov	w0, #0x26                  	// #38
    254c:	movk	w2, #0x6573, lsl #16
    2550:	cmp	w1, w2
    2554:	b.eq	23a8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1d8>  // b.none
    2558:	b	2390 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1c0>
    255c:	ldrh	w0, [x22]
    2560:	mov	w1, #0x6e69                	// #28265
    2564:	cmp	w0, w1
    2568:	b.ne	2578 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3a8>  // b.any
    256c:	mov	w0, #0x1c                  	// #28
    2570:	str	w0, [sp, #72]
    2574:	b	2468 <_ZN4llvm7TGLexer13LexIdentifierEv+0x298>
    2578:	mov	w1, #0x6669                	// #26217
    257c:	cmp	w0, w1
    2580:	b.ne	2390 <_ZN4llvm7TGLexer13LexIdentifierEv+0x1c0>  // b.any
    2584:	mov	w0, #0x24                  	// #36
    2588:	str	w0, [sp, #72]
    258c:	b	2468 <_ZN4llvm7TGLexer13LexIdentifierEv+0x298>
    2590:	ldr	w9, [x22]
    2594:	mov	w8, #0x6564                	// #25956
    2598:	movk	w8, #0x6d66, lsl #16
    259c:	cmp	w9, w8
    25a0:	b.ne	2348 <_ZN4llvm7TGLexer13LexIdentifierEv+0x178>  // b.any
    25a4:	mov	w1, w5
    25a8:	mov	w0, #0x0                   	// #0
    25ac:	mov	w5, #0x1a                  	// #26
    25b0:	str	w5, [sp, #72]
    25b4:	b	2358 <_ZN4llvm7TGLexer13LexIdentifierEv+0x188>
    25b8:	ldrh	w3, [x22]
    25bc:	mov	w2, #0x656c                	// #25964
    25c0:	cmp	w3, w2
    25c4:	b.ne	237c <_ZN4llvm7TGLexer13LexIdentifierEv+0x1ac>  // b.any
    25c8:	ldrb	w2, [x22, #2]
    25cc:	cmp	w2, #0x74
    25d0:	b.ne	237c <_ZN4llvm7TGLexer13LexIdentifierEv+0x1ac>  // b.any
    25d4:	mov	w0, #0x1e                  	// #30
    25d8:	str	w0, [sp, #72]
    25dc:	b	2468 <_ZN4llvm7TGLexer13LexIdentifierEv+0x298>
    25e0:	ldr	w5, [x22]
    25e4:	mov	w2, #0x6966                	// #26982
    25e8:	movk	w2, #0x6c65, lsl #16
    25ec:	cmp	w5, w2
    25f0:	b.ne	236c <_ZN4llvm7TGLexer13LexIdentifierEv+0x19c>  // b.any
    25f4:	ldrb	w2, [x22, #4]
    25f8:	cmp	w2, #0x64
    25fc:	b.ne	236c <_ZN4llvm7TGLexer13LexIdentifierEv+0x19c>  // b.any
    2600:	mov	w2, #0x1b                  	// #27
    2604:	mov	w1, w3
    2608:	mov	w0, #0x0                   	// #0
    260c:	str	w2, [sp, #72]
    2610:	b	237c <_ZN4llvm7TGLexer13LexIdentifierEv+0x1ac>
    2614:	mov	x3, #0x756d                	// #30061
    2618:	ldr	x8, [x22]
    261c:	movk	x3, #0x746c, lsl #16
    2620:	movk	x3, #0x6369, lsl #32
    2624:	movk	x3, #0x616c, lsl #48
    2628:	cmp	x8, x3
    262c:	b.ne	2360 <_ZN4llvm7TGLexer13LexIdentifierEv+0x190>  // b.any
    2630:	ldrh	w8, [x22, #8]
    2634:	mov	w3, #0x7373                	// #29555
    2638:	cmp	w8, w3
    263c:	b.ne	2360 <_ZN4llvm7TGLexer13LexIdentifierEv+0x190>  // b.any
    2640:	mov	w2, #0x20                  	// #32
    2644:	mov	w1, w5
    2648:	mov	w0, #0x0                   	// #0
    264c:	str	w2, [sp, #72]
    2650:	b	236c <_ZN4llvm7TGLexer13LexIdentifierEv+0x19c>
    2654:	ldr	w9, [x22]
    2658:	mov	w8, #0x6564                	// #25956
    265c:	movk	w8, #0x7366, lsl #16
    2660:	cmp	w9, w8
    2664:	b.ne	2358 <_ZN4llvm7TGLexer13LexIdentifierEv+0x188>  // b.any
    2668:	ldrh	w9, [x22, #4]
    266c:	mov	w8, #0x7465                	// #29797
    2670:	cmp	w9, w8
    2674:	b.ne	2358 <_ZN4llvm7TGLexer13LexIdentifierEv+0x188>  // b.any
    2678:	mov	w3, #0x22                  	// #34
    267c:	mov	w1, w5
    2680:	mov	w0, #0x0                   	// #0
    2684:	str	w3, [sp, #72]
    2688:	b	2360 <_ZN4llvm7TGLexer13LexIdentifierEv+0x190>
    268c:	mov	w7, w1
    2690:	mov	w3, #0x0                   	// #0
    2694:	b	22fc <_ZN4llvm7TGLexer13LexIdentifierEv+0x12c>
    2698:	ldrb	w1, [x22, #2]
    269c:	cmp	w1, #0x67
    26a0:	b.ne	2274 <_ZN4llvm7TGLexer13LexIdentifierEv+0xa4>  // b.any
    26a4:	mov	w5, #0x17                  	// #23
    26a8:	mov	w1, w2
    26ac:	mov	w6, #0x0                   	// #0
    26b0:	mov	w7, #0x0                   	// #0
    26b4:	mov	w0, #0x0                   	// #0
    26b8:	str	w5, [sp, #72]
    26bc:	b	2330 <_ZN4llvm7TGLexer13LexIdentifierEv+0x160>
    26c0:	ldrb	w0, [x22, #2]
    26c4:	cmp	w0, #0x74
    26c8:	b.ne	22d0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x100>  // b.any
    26cc:	mov	w0, #0x13                  	// #19
    26d0:	str	w0, [sp, #72]
    26d4:	mov	w2, w1
    26d8:	mov	w6, #0x0                   	// #0
    26dc:	mov	w7, #0x0                   	// #0
    26e0:	b	23dc <_ZN4llvm7TGLexer13LexIdentifierEv+0x20c>
    26e4:	ldrh	w3, [x22, #4]
    26e8:	mov	w0, #0x676e                	// #26478
    26ec:	cmp	w3, w0
    26f0:	b.ne	22ec <_ZN4llvm7TGLexer13LexIdentifierEv+0x11c>  // b.any
    26f4:	mov	w8, #0x21                  	// #33
    26f8:	mov	w0, #0x0                   	// #0
    26fc:	mov	w5, #0x0                   	// #0
    2700:	mov	w6, w1
    2704:	and	w5, w5, w0
    2708:	mov	w3, #0x0                   	// #0
    270c:	mov	w7, #0x0                   	// #0
    2710:	str	w8, [sp, #72]
    2714:	b	23f4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x224>
    2718:	ldrb	w0, [x22, #2]
    271c:	cmp	w0, #0x66
    2720:	b.ne	2280 <_ZN4llvm7TGLexer13LexIdentifierEv+0xb0>  // b.any
    2724:	mov	w5, #0x18                  	// #24
    2728:	mov	w1, w2
    272c:	mov	w6, #0x0                   	// #0
    2730:	mov	w7, #0x0                   	// #0
    2734:	mov	w0, #0x0                   	// #0
    2738:	str	w5, [sp, #72]
    273c:	b	233c <_ZN4llvm7TGLexer13LexIdentifierEv+0x16c>
    2740:	ldrb	w2, [x22, #2]
    2744:	cmp	w2, #0x74
    2748:	b.ne	22c4 <_ZN4llvm7TGLexer13LexIdentifierEv+0xf4>  // b.any
    274c:	mov	w0, #0x1d                  	// #29
    2750:	str	w0, [sp, #72]
    2754:	b	26d4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x504>
    2758:	ldrb	w0, [x22, #4]
    275c:	cmp	w0, #0x73
    2760:	b.ne	231c <_ZN4llvm7TGLexer13LexIdentifierEv+0x14c>  // b.any
    2764:	mov	w5, #0x15                  	// #21
    2768:	mov	w1, w3
    276c:	mov	w2, #0x0                   	// #0
    2770:	mov	w0, #0x0                   	// #0
    2774:	str	w5, [sp, #72]
    2778:	b	2330 <_ZN4llvm7TGLexer13LexIdentifierEv+0x160>
    277c:	mov	w0, w1
    2780:	mov	w2, #0x0                   	// #0
    2784:	and	w5, w5, w0
    2788:	mov	w1, #0x0                   	// #0
    278c:	b	23f4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x224>

0000000000002790 <_ZN4llvm7TGLexer14prepSkipRegionEb>:
    2790:	stp	x29, x30, [sp, #-64]!
    2794:	tst	w1, #0xff
    2798:	mov	x29, sp
    279c:	stp	x19, x20, [sp, #16]
    27a0:	mov	x19, x0
    27a4:	b.ne	27bc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x2c>  // b.any
    27a8:	b	28a4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x114>
    27ac:	ldp	x1, x2, [x19, #16]
    27b0:	add	x1, x1, x2
    27b4:	cmp	x0, x1
    27b8:	b.eq	2848 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xb8>  // b.none
    27bc:	mov	x0, x19
    27c0:	bl	11c0 <_ZN4llvm7TGLexer17prepSkipToLineEndEv>
    27c4:	mov	x0, x19
    27c8:	bl	fc0 <_ZN4llvm7TGLexer17prepSkipLineBeginEv>
    27cc:	tst	w0, #0xff
    27d0:	b.eq	2850 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xc0>  // b.none
    27d4:	ldr	x0, [x19, #8]
    27d8:	ldrb	w1, [x0]
    27dc:	cmp	w1, #0x23
    27e0:	b.ne	27ac <_ZN4llvm7TGLexer14prepSkipRegionEb+0x1c>  // b.any
    27e4:	add	x0, x0, #0x1
    27e8:	str	x0, [x19, #8]
    27ec:	mov	x0, x19
    27f0:	bl	d88 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>
    27f4:	cmp	w0, #0x50
    27f8:	mov	w20, w0
    27fc:	ccmp	w0, #0x1, #0x4, ne  // ne = any
    2800:	b.eq	2834 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xa4>  // b.none
    2804:	mov	w1, w0
    2808:	mov	w2, #0x0                   	// #0
    280c:	mov	x0, x19
    2810:	bl	14e0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>
    2814:	cmp	w0, #0x1
    2818:	b.eq	2850 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xc0>  // b.none
    281c:	cmp	w20, w0
    2820:	b.ne	2888 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xf8>  // b.any
    2824:	mov	x0, x19
    2828:	bl	1208 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv>
    282c:	ands	w0, w0, #0xff
    2830:	b.ne	2860 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xd0>  // b.any
    2834:	ldp	x1, x2, [x19, #16]
    2838:	ldr	x0, [x19, #8]
    283c:	add	x1, x1, x2
    2840:	cmp	x0, x1
    2844:	b.ne	27bc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x2c>  // b.any
    2848:	mov	x0, x19
    284c:	bl	1240 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv>
    2850:	mov	w0, #0x0                   	// #0
    2854:	ldp	x19, x20, [sp, #16]
    2858:	ldp	x29, x30, [sp], #64
    285c:	ret
    2860:	sub	w20, w20, #0x4e
    2864:	cmp	w20, #0x1
    2868:	b.ls	2854 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xc4>  // b.plast
    286c:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2870:	add	x1, x1, #0x0
    2874:	add	x19, sp, #0x28
    2878:	mov	x0, x19
    287c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    2880:	mov	x0, x19
    2884:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    2888:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    288c:	add	x1, x1, #0x0
    2890:	mov	w2, #0x103                 	// #259
    2894:	add	x0, sp, #0x28
    2898:	stp	x1, xzr, [sp, #40]
    289c:	strh	w2, [sp, #56]
    28a0:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    28a4:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    28a8:	add	x1, x1, #0x0
    28ac:	b	2874 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xe4>

00000000000028b0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>:
    28b0:	stp	x29, x30, [sp, #-128]!
    28b4:	adrp	x4, 0 <_ZNK4llvm7TGLexer6getLocEv>
    28b8:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    28bc:	mov	x29, sp
    28c0:	ldr	q1, [x4]
    28c4:	stp	x19, x20, [sp, #16]
    28c8:	mov	x19, x0
    28cc:	ldp	x4, x5, [x1]
    28d0:	add	x0, x0, #0x68
    28d4:	stp	x1, xzr, [x19]
    28d8:	add	x7, x19, #0x40
    28dc:	movk	x6, #0xaaab
    28e0:	movi	v0.4s, #0x0
    28e4:	stp	xzr, xzr, [x19, #16]
    28e8:	mov	x20, x19
    28ec:	sub	x1, x5, x4
    28f0:	str	xzr, [x19, #32]
    28f4:	str	wzr, [x19, #40]
    28f8:	asr	x1, x1, #3
    28fc:	stp	x7, xzr, [x19, #48]
    2900:	strb	wzr, [x19, #64]
    2904:	str	xzr, [x19, #80]
    2908:	mul	x1, x1, x6
    290c:	str	wzr, [x19, #88]
    2910:	str	wzr, [x19, #104]
    2914:	str	xzr, [x19, #112]
    2918:	stp	x0, x0, [x0, #16]
    291c:	str	xzr, [x0, #32]
    2920:	str	xzr, [x19, #144]
    2924:	stur	q1, [x19, #152]
    2928:	str	q0, [x20, #176]!
    292c:	str	xzr, [x20, #16]
    2930:	cbz	w1, 2b6c <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x2bc>
    2934:	mov	w0, #0x1                   	// #1
    2938:	str	w0, [x19, #88]
    293c:	stp	x21, x22, [sp, #32]
    2940:	cmp	x4, x5
    2944:	stp	x23, x24, [sp, #48]
    2948:	b.eq	2adc <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x22c>  // b.none
    294c:	ldr	x1, [x4]
    2950:	mov	x21, x2
    2954:	mov	x22, x2
    2958:	mov	x23, x3
    295c:	mov	x0, #0x18                  	// #24
    2960:	ldp	x2, x1, [x1, #8]
    2964:	stp	x2, x2, [x19, #8]
    2968:	sub	x1, x1, x2
    296c:	str	x1, [x19, #24]
    2970:	bl	0 <_Znwm>
    2974:	str	xzr, [x0, #16]
    2978:	ldp	x1, x2, [x20, #8]
    297c:	str	x0, [sp, #120]
    2980:	movi	v0.4s, #0x0
    2984:	str	q0, [x0]
    2988:	cmp	x1, x2
    298c:	b.eq	2b04 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x254>  // b.none
    2990:	str	xzr, [sp, #120]
    2994:	str	x0, [x1], #8
    2998:	str	x1, [x20, #8]
    299c:	ldr	x20, [sp, #120]
    29a0:	cbz	x20, 29bc <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x10c>
    29a4:	ldr	x0, [x20]
    29a8:	cbz	x0, 29b0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x100>
    29ac:	bl	0 <_ZdlPv>
    29b0:	mov	x0, x20
    29b4:	mov	x1, #0x18                  	// #24
    29b8:	bl	0 <_ZdlPvm>
    29bc:	add	x23, x21, x23, lsl #5
    29c0:	cmp	x21, x23
    29c4:	b.eq	2ac8 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x218>  // b.none
    29c8:	add	x19, x19, #0x90
    29cc:	add	x24, sp, #0x78
    29d0:	stp	x25, x26, [sp, #64]
    29d4:	stp	x27, x28, [sp, #80]
    29d8:	b	29f4 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x144>
    29dc:	mov	x0, x24
    29e0:	add	x22, x22, #0x20
    29e4:	mov	w2, #0x0                   	// #0
    29e8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    29ec:	cmp	x23, x22
    29f0:	b.eq	2ac0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x210>  // b.none
    29f4:	ldp	x25, x20, [x22]
    29f8:	cbz	x20, 2b14 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x264>
    29fc:	mov	x1, x25
    2a00:	mov	x2, x20
    2a04:	mov	x0, x19
    2a08:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    2a0c:	ldr	x26, [x19]
    2a10:	mov	w27, w0
    2a14:	mov	x28, x27
    2a18:	ldr	x0, [x26, x27, lsl #3]
    2a1c:	add	x1, x26, w27, uxtw #3
    2a20:	cbz	x0, 2a38 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x188>
    2a24:	cmn	x0, #0x8
    2a28:	b.ne	29dc <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x12c>  // b.any
    2a2c:	ldr	w0, [x19, #16]
    2a30:	sub	w0, w0, #0x1
    2a34:	str	w0, [x19, #16]
    2a38:	add	x2, x20, #0x9
    2a3c:	str	x2, [sp, #104]
    2a40:	mov	x0, x2
    2a44:	bl	0 <malloc>
    2a48:	mov	x21, x0
    2a4c:	ldr	x2, [sp, #104]
    2a50:	cbz	x0, 2b54 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x2a4>
    2a54:	mov	x3, x0
    2a58:	str	x20, [x3], #8
    2a5c:	mov	x1, x25
    2a60:	mov	x2, x20
    2a64:	mov	x0, x3
    2a68:	bl	0 <memcpy>
    2a6c:	strb	wzr, [x0, x20]
    2a70:	ldp	w0, w1, [x19, #8]
    2a74:	ldr	w2, [x19, #16]
    2a78:	str	x21, [x26, x27, lsl #3]
    2a7c:	add	w1, w1, #0x1
    2a80:	str	w1, [x19, #12]
    2a84:	add	w1, w1, w2
    2a88:	cmp	w1, w0
    2a8c:	b.hi	2b34 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x284>  // b.pmore
    2a90:	mov	w1, w28
    2a94:	mov	x0, x19
    2a98:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    2a9c:	mov	w3, w0
    2aa0:	ldr	x1, [x19]
    2aa4:	mov	x0, x24
    2aa8:	add	x22, x22, #0x20
    2aac:	mov	w2, #0x0                   	// #0
    2ab0:	add	x1, x1, w3, uxtw #3
    2ab4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    2ab8:	cmp	x23, x22
    2abc:	b.ne	29f4 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x144>  // b.any
    2ac0:	ldp	x25, x26, [sp, #64]
    2ac4:	ldp	x27, x28, [sp, #80]
    2ac8:	ldp	x19, x20, [sp, #16]
    2acc:	ldp	x21, x22, [sp, #32]
    2ad0:	ldp	x23, x24, [sp, #48]
    2ad4:	ldp	x29, x30, [sp], #128
    2ad8:	ret
    2adc:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2ae0:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2ae4:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2ae8:	add	x3, x3, #0x0
    2aec:	add	x1, x1, #0x0
    2af0:	add	x0, x0, #0x0
    2af4:	mov	w2, #0x85                  	// #133
    2af8:	stp	x25, x26, [sp, #64]
    2afc:	stp	x27, x28, [sp, #80]
    2b00:	bl	0 <__assert_fail>
    2b04:	mov	x0, x20
    2b08:	add	x2, sp, #0x78
    2b0c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    2b10:	b	299c <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0xec>
    2b14:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b18:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b1c:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b20:	add	x3, x3, #0x0
    2b24:	add	x1, x1, #0x0
    2b28:	add	x0, x0, #0x0
    2b2c:	mov	w2, #0x27                  	// #39
    2b30:	bl	0 <__assert_fail>
    2b34:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b38:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b3c:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b40:	add	x3, x3, #0x0
    2b44:	add	x1, x1, #0x0
    2b48:	add	x0, x0, #0x0
    2b4c:	mov	w2, #0x1bb                 	// #443
    2b50:	bl	0 <__assert_fail>
    2b54:	cbz	x2, 2b9c <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x2ec>
    2b58:	mov	w1, #0x1                   	// #1
    2b5c:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b60:	add	x0, x0, #0x0
    2b64:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2b68:	brk	#0x3e8
    2b6c:	adrp	x3, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b70:	adrp	x1, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b74:	adrp	x0, 0 <_ZNK4llvm7TGLexer6getLocEv>
    2b78:	add	x3, x3, #0x0
    2b7c:	add	x1, x1, #0x0
    2b80:	add	x0, x0, #0x0
    2b84:	mov	w2, #0x8e                  	// #142
    2b88:	stp	x21, x22, [sp, #32]
    2b8c:	stp	x23, x24, [sp, #48]
    2b90:	stp	x25, x26, [sp, #64]
    2b94:	stp	x27, x28, [sp, #80]
    2b98:	bl	0 <__assert_fail>
    2b9c:	mov	x0, #0x1                   	// #1
    2ba0:	bl	0 <malloc>
    2ba4:	mov	x21, x0
    2ba8:	cbz	x0, 2b58 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x2a8>
    2bac:	mov	x3, x0
    2bb0:	mov	x0, #0xfffffffffffffff7    	// #-9
    2bb4:	str	x0, [x3], #8
    2bb8:	b	2a5c <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x1ac>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x19, [x0, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	stp	x23, x24, [sp, #48]
  20:	add	x23, x0, #0x8
  24:	stp	x25, x26, [sp, #64]
  28:	stp	x27, x28, [sp, #80]
  2c:	cbz	x19, 264 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x264>
  30:	ldp	x25, x26, [x1]
  34:	mov	x24, #0xffffffff80000000    	// #-2147483648
  38:	ldp	x28, x22, [x19, #32]
  3c:	cmp	x26, x22
  40:	csel	x27, x26, x22, ls  // ls = plast
  44:	cbz	x27, 5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x5c>
  48:	mov	x2, x27
  4c:	mov	x1, x28
  50:	mov	x0, x25
  54:	bl	0 <memcmp>
  58:	cbnz	w0, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x74>
  5c:	sub	x0, x26, x22
  60:	mov	x1, #0x7fffffff            	// #2147483647
  64:	cmp	x0, x1
  68:	b.gt	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x8c>
  6c:	cmp	x0, x24
  70:	b.lt	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x78>  // b.tstop
  74:	tbz	w0, #31, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x8c>
  78:	ldr	x0, [x19, #16]
  7c:	mov	w1, #0x1                   	// #1
  80:	cbz	x0, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x98>
  84:	mov	x19, x0
  88:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x38>
  8c:	ldr	x0, [x19, #24]
  90:	mov	w1, #0x0                   	// #0
  94:	cbnz	x0, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x84>
  98:	mov	x24, x19
  9c:	cbnz	w1, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xfc>
  a0:	cbz	x27, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xb8>
  a4:	mov	x2, x27
  a8:	mov	x0, x28
  ac:	mov	x1, x25
  b0:	bl	0 <memcmp>
  b4:	cbnz	w0, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xd4>
  b8:	sub	x0, x22, x26
  bc:	mov	x1, #0x7fffffff            	// #2147483647
  c0:	cmp	x0, x1
  c4:	b.gt	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xd8>
  c8:	mov	x1, #0xffffffff80000000    	// #-2147483648
  cc:	cmp	x0, x1
  d0:	b.lt	128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x128>  // b.tstop
  d4:	tbnz	w0, #31, 128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x128>
  d8:	mov	x0, x19
  dc:	mov	x1, #0x0                   	// #0
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x25, x26, [sp, #64]
  f0:	ldp	x27, x28, [sp, #80]
  f4:	ldp	x29, x30, [sp], #112
  f8:	ret
  fc:	ldr	x0, [x20, #24]
 100:	cmp	x0, x19
 104:	b.eq	20c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x20c>  // b.none
 108:	mov	x0, x19
 10c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 110:	ldp	x28, x22, [x0, #32]
 114:	mov	x24, x19
 118:	mov	x19, x0
 11c:	cmp	x22, x26
 120:	csel	x27, x22, x26, ls  // ls = plast
 124:	b	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xa0>
 128:	cbz	x24, 294 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x294>
 12c:	cmp	x23, x24
 130:	mov	w22, #0x1                   	// #1
 134:	b.ne	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x21c>  // b.any
 138:	mov	x0, #0x40                  	// #64
 13c:	bl	0 <_Znwm>
 140:	ldp	x25, x21, [x21]
 144:	mov	x19, x0
 148:	add	x0, x0, #0x30
 14c:	add	x1, x19, #0x20
 150:	str	x0, [x19, #32]
 154:	cmn	x25, x21
 158:	ccmp	x25, #0x0, #0x0, ne  // ne = any
 15c:	b.eq	288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x288>  // b.none
 160:	str	x21, [sp, #104]
 164:	cmp	x21, #0xf
 168:	b.hi	1d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x1d8>  // b.pmore
 16c:	cmp	x21, #0x1
 170:	b.ne	1d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x1d0>  // b.any
 174:	ldrb	w1, [x25]
 178:	strb	w1, [x19, #48]
 17c:	str	x21, [x19, #40]
 180:	mov	x3, x23
 184:	strb	wzr, [x0, x21]
 188:	mov	x2, x24
 18c:	mov	x1, x19
 190:	mov	w0, w22
 194:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 198:	ldr	x2, [x20, #40]
 19c:	mov	x3, #0x1                   	// #1
 1a0:	mov	x1, #0x0                   	// #0
 1a4:	mov	x0, x19
 1a8:	add	x2, x2, x3
 1ac:	str	x2, [x20, #40]
 1b0:	bfxil	x1, x3, #0, #8
 1b4:	ldp	x19, x20, [sp, #16]
 1b8:	ldp	x21, x22, [sp, #32]
 1bc:	ldp	x23, x24, [sp, #48]
 1c0:	ldp	x25, x26, [sp, #64]
 1c4:	ldp	x27, x28, [sp, #80]
 1c8:	ldp	x29, x30, [sp], #112
 1cc:	ret
 1d0:	cbz	x21, 17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x17c>
 1d4:	b	1f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x1f4>
 1d8:	mov	x0, x1
 1dc:	mov	x2, #0x0                   	// #0
 1e0:	add	x1, sp, #0x68
 1e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 1e8:	ldr	x1, [sp, #104]
 1ec:	str	x0, [x19, #32]
 1f0:	str	x1, [x19, #48]
 1f4:	mov	x2, x21
 1f8:	mov	x1, x25
 1fc:	bl	0 <memcpy>
 200:	ldr	x0, [x19, #32]
 204:	ldr	x21, [sp, #104]
 208:	b	17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x17c>
 20c:	mov	x24, x19
 210:	mov	w22, #0x1                   	// #1
 214:	cmp	x23, x24
 218:	b.eq	138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x138>  // b.none
 21c:	ldr	x22, [x24, #40]
 220:	cmp	x26, x22
 224:	csel	x2, x26, x22, ls  // ls = plast
 228:	cbz	x2, 23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x23c>
 22c:	ldr	x1, [x24, #32]
 230:	mov	x0, x25
 234:	bl	0 <memcmp>
 238:	cbnz	w0, 25c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x25c>
 23c:	sub	x0, x26, x22
 240:	mov	x1, #0x7fffffff            	// #2147483647
 244:	mov	w22, #0x0                   	// #0
 248:	cmp	x0, x1
 24c:	b.gt	138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x138>
 250:	mov	x1, #0xffffffff80000000    	// #-2147483648
 254:	cmp	x0, x1
 258:	b.lt	280 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x280>  // b.tstop
 25c:	lsr	w22, w0, #31
 260:	b	138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x138>
 264:	ldr	x0, [x0, #24]
 268:	cmp	x23, x0
 26c:	b.eq	27c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x27c>  // b.none
 270:	mov	x19, x23
 274:	ldp	x25, x26, [x1]
 278:	b	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x108>
 27c:	mov	x24, x23
 280:	mov	w22, #0x1                   	// #1
 284:	b	138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0x138>
 288:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_>
 28c:	add	x0, x0, #0x0
 290:	bl	0 <_ZSt19__throw_logic_errorPKc>
 294:	mov	x19, #0x0                   	// #0
 298:	b	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE16_M_insert_uniqueIRKS5_EESt4pairISt17_Rb_tree_iteratorIS5_EbEOT_+0xd8>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	ldp	x26, x23, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x22, x1
  24:	stp	x27, x28, [sp, #80]
  28:	mov	x28, x1
  2c:	sub	x1, x23, x26
  30:	cmp	x3, x1, asr #3
  34:	b.eq	1a0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x1a0>  // b.none
  38:	mov	x24, x0
  3c:	mov	x20, x2
  40:	asr	x0, x1, #3
  44:	sub	x21, x22, x26
  48:	cbz	x0, 180 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x180>
  4c:	cmp	x0, x0, lsl #1
  50:	mov	x27, #0x7ffffffffffffff8    	// #9223372036854775800
  54:	lsl	x0, x0, #1
  58:	b.ls	16c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x16c>  // b.plast
  5c:	mov	x0, x27
  60:	bl	0 <_Znwm>
  64:	mov	x25, x0
  68:	add	x27, x0, x27
  6c:	add	x19, x0, #0x8
  70:	ldr	x0, [x20]
  74:	str	x0, [x25, x21]
  78:	str	xzr, [x20]
  7c:	cmp	x22, x26
  80:	b.eq	d8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xd8>  // b.none
  84:	mov	x20, x25
  88:	mov	x19, x26
  8c:	nop
  90:	ldr	x0, [x19]
  94:	str	xzr, [x19]
  98:	str	x0, [x20]
  9c:	ldr	x21, [x19]
  a0:	cbz	x21, bc <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xbc>
  a4:	ldr	x0, [x21]
  a8:	cbz	x0, b0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xb0>
  ac:	bl	0 <_ZdlPv>
  b0:	mov	x0, x21
  b4:	mov	x1, #0x18                  	// #24
  b8:	bl	0 <_ZdlPvm>
  bc:	add	x19, x19, #0x8
  c0:	add	x20, x20, #0x8
  c4:	cmp	x22, x19
  c8:	b.ne	90 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x90>  // b.any
  cc:	sub	x19, x22, x26
  d0:	add	x19, x19, #0x8
  d4:	add	x19, x25, x19
  d8:	cmp	x22, x23
  dc:	b.eq	13c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x13c>  // b.none
  e0:	sub	x23, x23, x22
  e4:	sub	x23, x23, #0x8
  e8:	lsr	x1, x23, #3
  ec:	add	x1, x1, #0x1
  f0:	cbz	x23, 188 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x188>
  f4:	lsr	x0, x1, #1
  f8:	mov	x2, #0x0                   	// #0
  fc:	lsl	x0, x0, #4
 100:	ldr	q0, [x22, x2]
 104:	str	q0, [x19, x2]
 108:	add	x2, x2, #0x10
 10c:	cmp	x2, x0
 110:	b.ne	100 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x100>  // b.any
 114:	and	x0, x1, #0xfffffffffffffffe
 118:	cmp	x1, x0
 11c:	lsl	x0, x0, #3
 120:	add	x28, x22, x0
 124:	add	x0, x19, x0
 128:	b.eq	134 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x134>  // b.none
 12c:	ldr	x1, [x28]
 130:	str	x1, [x0]
 134:	add	x23, x23, #0x8
 138:	add	x19, x19, x23
 13c:	cbz	x26, 148 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x148>
 140:	mov	x0, x26
 144:	bl	0 <_ZdlPv>
 148:	ldp	x21, x22, [sp, #32]
 14c:	stp	x25, x19, [x24]
 150:	str	x27, [x24, #16]
 154:	ldp	x19, x20, [sp, #16]
 158:	ldp	x23, x24, [sp, #48]
 15c:	ldp	x25, x26, [sp, #64]
 160:	ldp	x27, x28, [sp, #80]
 164:	ldp	x29, x30, [sp], #96
 168:	ret
 16c:	cbnz	x0, 190 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x190>
 170:	mov	x19, #0x8                   	// #8
 174:	mov	x27, #0x0                   	// #0
 178:	mov	x25, #0x0                   	// #0
 17c:	b	70 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x70>
 180:	mov	x27, #0x8                   	// #8
 184:	b	5c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x5c>
 188:	mov	x0, x19
 18c:	b	12c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x12c>
 190:	cmp	x0, x3
 194:	csel	x0, x0, x3, ls  // ls = plast
 198:	lsl	x27, x0, #3
 19c:	b	5c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x5c>
 1a0:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_>
 1a4:	add	x0, x0, #0x0
 1a8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x24, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x20, x24
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	168 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x168>  // b.none
  34:	mov	x23, x0
  38:	mov	x25, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x19, x24
  44:	cbz	x0, 150 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x26, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	13c <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x13c>  // b.plast
  58:	mov	x0, x26
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x26, x0, x26
  68:	add	x21, x0, #0x10
  6c:	add	x0, x22, x27
  70:	ldr	w1, [x25]
  74:	ldrb	w2, [x25, #4]
  78:	cmp	x19, x24
  7c:	str	w1, [x22, x27]
  80:	ldr	x1, [x25, #8]
  84:	strb	w2, [x0, #4]
  88:	str	x1, [x0, #8]
  8c:	b.eq	cc <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xcc>  // b.none
  90:	mov	x3, x22
  94:	mov	x2, x24
  98:	ldrb	w4, [x2, #4]
  9c:	add	x2, x2, #0x10
  a0:	ldur	w5, [x2, #-16]
  a4:	add	x3, x3, #0x10
  a8:	ldur	x1, [x2, #-8]
  ac:	stur	w5, [x3, #-16]
  b0:	sturb	w4, [x3, #-12]
  b4:	cmp	x19, x2
  b8:	stur	x1, [x3, #-8]
  bc:	b.ne	98 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>  // b.any
  c0:	sub	x21, x19, x24
  c4:	add	x21, x21, #0x10
  c8:	add	x21, x22, x21
  cc:	cmp	x19, x20
  d0:	b.eq	10c <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x10c>  // b.none
  d4:	mov	x2, x19
  d8:	mov	x3, x21
  dc:	nop
  e0:	ldrb	w4, [x2, #4]
  e4:	add	x3, x3, #0x10
  e8:	sturb	w4, [x3, #-12]
  ec:	ldr	x1, [x2, #8]
  f0:	stur	x1, [x3, #-8]
  f4:	ldr	w4, [x2], #16
  f8:	stur	w4, [x3, #-16]
  fc:	cmp	x2, x20
 100:	b.ne	e0 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.any
 104:	sub	x2, x2, x19
 108:	add	x21, x21, x2
 10c:	cbz	x24, 118 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>
 110:	mov	x0, x24
 114:	bl	0 <_ZdlPv>
 118:	ldp	x19, x20, [sp, #16]
 11c:	ldr	x27, [sp, #80]
 120:	stp	x22, x21, [x23]
 124:	str	x26, [x23, #16]
 128:	ldp	x21, x22, [sp, #32]
 12c:	ldp	x23, x24, [sp, #48]
 130:	ldp	x25, x26, [sp, #64]
 134:	ldp	x29, x30, [sp], #96
 138:	ret
 13c:	cbnz	x0, 158 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x158>
 140:	mov	x21, #0x10                  	// #16
 144:	mov	x26, #0x0                   	// #0
 148:	mov	x22, #0x0                   	// #0
 14c:	b	6c <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x6c>
 150:	mov	x26, #0x10                  	// #16
 154:	b	58 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 158:	cmp	x0, x3
 15c:	csel	x0, x0, x3, ls  // ls = plast
 160:	lsl	x26, x0, #4
 164:	b	58 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 168:	adrp	x0, 0 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 16c:	add	x0, x0, #0x0
 170:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_22StringMapConstIteratorINS_8NoneTypeEEEKNS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorINS_8NoneTypeEEENS_14StringMapEntryIS2_EEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

TGParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x75                  	// #117
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm.isra.0.part.0>:
      28:	stp	x29, x30, [sp, #-16]!
      2c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      30:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      34:	mov	x29, sp
      38:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      3c:	add	x3, x3, #0x0
      40:	add	x1, x1, #0x0
      44:	add	x0, x0, #0x0
      48:	mov	w2, #0xfa                  	// #250
      4c:	bl	0 <__assert_fail>

0000000000000050 <_ZN4llvm3isaINS_9BitsRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      58:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      5c:	mov	x29, sp
      60:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      64:	add	x3, x3, #0x0
      68:	add	x1, x1, #0x0
      6c:	add	x0, x0, #0x0
      70:	mov	w2, #0x69                  	// #105
      74:	bl	0 <__assert_fail>

0000000000000078 <_ZN4llvm3isaINS_9ListRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
      78:	stp	x29, x30, [sp, #-16]!
      7c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      80:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      84:	mov	x29, sp
      88:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      8c:	add	x3, x3, #0x0
      90:	add	x1, x1, #0x0
      94:	add	x0, x0, #0x0
      98:	mov	w2, #0x69                  	// #105
      9c:	bl	0 <__assert_fail>

00000000000000a0 <_ZN4llvm3isaINS_7VarInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      a0:	stp	x29, x30, [sp, #-16]!
      a4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      a8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      ac:	mov	x29, sp
      b0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      b4:	add	x3, x3, #0x0
      b8:	add	x1, x1, #0x0
      bc:	add	x0, x0, #0x0
      c0:	mov	w2, #0x69                  	// #105
      c4:	bl	0 <__assert_fail>

00000000000000c8 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      c8:	stp	x29, x30, [sp, #-16]!
      cc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      d4:	mov	x29, sp
      d8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      dc:	add	x3, x3, #0x0
      e0:	add	x1, x1, #0x0
      e4:	add	x0, x0, #0x0
      e8:	mov	w2, #0x69                  	// #105
      ec:	bl	0 <__assert_fail>

00000000000000f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
      f0:	stp	x29, x30, [sp, #-16]!
      f4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      f8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
      fc:	mov	x29, sp
     100:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     104:	add	x3, x3, #0x0
     108:	add	x1, x1, #0x0
     10c:	add	x0, x0, #0x0
     110:	mov	w2, #0x69                  	// #105
     114:	bl	0 <__assert_fail>

0000000000000118 <_ZN4llvm3isaINS_8DagRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
     118:	stp	x29, x30, [sp, #-16]!
     11c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     120:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     124:	mov	x29, sp
     128:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     12c:	add	x3, x3, #0x0
     130:	add	x1, x1, #0x0
     134:	add	x0, x0, #0x0
     138:	mov	w2, #0x69                  	// #105
     13c:	bl	0 <__assert_fail>

0000000000000140 <_ZN4llvm3isaINS_9BinOpInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     140:	stp	x29, x30, [sp, #-16]!
     144:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     148:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     14c:	mov	x29, sp
     150:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     154:	add	x3, x3, #0x0
     158:	add	x1, x1, #0x0
     15c:	add	x0, x0, #0x0
     160:	mov	w2, #0x69                  	// #105
     164:	bl	0 <__assert_fail>

0000000000000168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>:
     168:	stp	x29, x30, [sp, #-64]!
     16c:	mov	x29, sp
     170:	stp	x23, x24, [sp, #48]
     174:	mov	x23, x3
     178:	ldr	x24, [x0]
     17c:	stp	x19, x20, [sp, #16]
     180:	mov	x19, x2
     184:	mov	x20, x4
     188:	stp	x21, x22, [sp, #32]
     18c:	mov	x22, x0
     190:	mov	x21, x1
     194:	mov	x0, x3
     198:	mov	x1, x4
     19c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
     1a0:	mov	x1, x0
     1a4:	mov	x0, x24
     1a8:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
     1ac:	mov	x1, x19
     1b0:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
     1b4:	mov	x19, x0
     1b8:	cbz	x21, 1f0 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x88>
     1bc:	cmp	x20, #0x2
     1c0:	b.eq	234 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xcc>  // b.none
     1c4:	ldr	x20, [x21]
     1c8:	mov	x1, #0x2                   	// #2
     1cc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     1d0:	add	x0, x0, #0x0
     1d4:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
     1d8:	mov	x1, x0
     1dc:	mov	x0, x20
     1e0:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
     1e4:	mov	x1, x19
     1e8:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
     1ec:	mov	x19, x0
     1f0:	cbz	x19, 248 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xe0>
     1f4:	ldrb	w0, [x19, #8]
     1f8:	cmp	w0, #0xb
     1fc:	b.eq	218 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xb0>  // b.none
     200:	mov	x0, x19
     204:	ldp	x19, x20, [sp, #16]
     208:	ldp	x21, x22, [sp, #32]
     20c:	ldp	x23, x24, [sp, #48]
     210:	ldp	x29, x30, [sp], #64
     214:	ret
     218:	mov	x1, x22
     21c:	mov	x0, x19
     220:	ldp	x19, x20, [sp, #16]
     224:	ldp	x21, x22, [sp, #32]
     228:	ldp	x23, x24, [sp, #48]
     22c:	ldp	x29, x30, [sp], #64
     230:	b	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
     234:	ldrh	w1, [x23]
     238:	mov	w0, #0x3a3a                	// #14906
     23c:	cmp	w1, w0
     240:	b.ne	1c4 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x5c>  // b.any
     244:	b	1f0 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x88>
     248:	bl	140 <_ZN4llvm3isaINS_9BinOpInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
     24c:	nop

0000000000000250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>:
     250:	stp	x29, x30, [sp, #-48]!
     254:	mov	x29, sp
     258:	stp	x19, x20, [sp, #16]
     25c:	mov	x20, x1
     260:	mov	x1, #0x4                   	// #4
     264:	stp	x21, x22, [sp, #32]
     268:	mov	x21, x0
     26c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     270:	add	x0, x0, #0x0
     274:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
     278:	cmp	x20, #0x0
     27c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     280:	add	x3, x3, #0x0
     284:	adrp	x19, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     288:	add	x19, x19, #0x0
     28c:	mov	x22, x0
     290:	csel	x19, x19, x3, ne  // ne = any
     294:	mov	x0, x19
     298:	bl	0 <strlen>
     29c:	mov	x3, x19
     2a0:	mov	x4, x0
     2a4:	mov	x2, x22
     2a8:	mov	x1, x20
     2ac:	mov	x0, x21
     2b0:	ldp	x19, x20, [sp, #16]
     2b4:	ldp	x21, x22, [sp, #32]
     2b8:	ldp	x29, x30, [sp], #48
     2bc:	b	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>

00000000000002c0 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     2c0:	stp	x29, x30, [sp, #-16]!
     2c4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2cc:	mov	x29, sp
     2d0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2d4:	add	x3, x3, #0x0
     2d8:	add	x1, x1, #0x0
     2dc:	add	x0, x0, #0x0
     2e0:	mov	w2, #0x69                  	// #105
     2e4:	bl	0 <__assert_fail>

00000000000002e8 <_ZN4llvm3isaINS_7IntInitEPNS_4InitEEEbRKT0_.isra.0.part.0>:
     2e8:	stp	x29, x30, [sp, #-16]!
     2ec:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2f0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2f4:	mov	x29, sp
     2f8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     2fc:	add	x3, x3, #0x0
     300:	add	x1, x1, #0x0
     304:	add	x0, x0, #0x0
     308:	mov	w2, #0x69                  	// #105
     30c:	bl	0 <__assert_fail>

0000000000000310 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>:
     310:	stp	x29, x30, [sp, #-16]!
     314:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     318:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     31c:	mov	x29, sp
     320:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     324:	add	x3, x3, #0x0
     328:	add	x1, x1, #0x0
     32c:	add	x0, x0, #0x0
     330:	mov	w2, #0x69                  	// #105
     334:	bl	0 <__assert_fail>

0000000000000338 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0>:
     338:	stp	x29, x30, [sp, #-48]!
     33c:	add	x1, x0, #0x68
     340:	mov	x29, sp
     344:	stp	x19, x20, [sp, #16]
     348:	mov	x19, x0
     34c:	str	x21, [sp, #32]
     350:	add	x21, x0, #0x58
     354:	ldr	x0, [x0, #88]
     358:	cmp	x0, x1
     35c:	b.eq	364 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0+0x2c>  // b.none
     360:	bl	0 <free>
     364:	ldr	x0, [x19, #72]
     368:	add	x20, x19, #0x48
     36c:	cmp	x21, x0
     370:	b.eq	378 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0+0x40>  // b.none
     374:	bl	0 <free>
     378:	ldr	x0, [x19, #56]
     37c:	cmp	x20, x0
     380:	b.eq	388 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0+0x50>  // b.none
     384:	bl	0 <free>
     388:	ldr	x0, [x19, #8]
     38c:	add	x1, x19, #0x18
     390:	cmp	x0, x1
     394:	b.eq	39c <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0+0x64>  // b.none
     398:	bl	0 <free>
     39c:	mov	x0, x19
     3a0:	mov	x1, #0x80                  	// #128
     3a4:	ldp	x19, x20, [sp, #16]
     3a8:	ldr	x21, [sp, #32]
     3ac:	ldp	x29, x30, [sp], #48
     3b0:	b	0 <_ZdlPvm>
     3b4:	nop

00000000000003b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>:
     3b8:	sub	sp, sp, #0x220
     3bc:	stp	x29, x30, [sp]
     3c0:	mov	x29, sp
     3c4:	stp	x19, x20, [sp, #16]
     3c8:	mov	x20, x1
     3cc:	stp	x21, x22, [sp, #32]
     3d0:	mov	x21, x2
     3d4:	mov	x22, x3
     3d8:	stp	x23, x24, [sp, #48]
     3dc:	cbz	x1, 6dc <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x324>
     3e0:	ldr	w1, [x20, #80]
     3e4:	mov	w5, #0x18                  	// #24
     3e8:	ldr	x4, [x20, #72]
     3ec:	ldr	x6, [x22]
     3f0:	umaddl	x5, w1, w5, x4
     3f4:	cmp	x5, x4
     3f8:	b.eq	684 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2cc>  // b.none
     3fc:	mov	x19, x4
     400:	b	410 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x58>
     404:	add	x19, x19, #0x18
     408:	cmp	x5, x19
     40c:	b.eq	458 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0xa0>  // b.none
     410:	ldr	x0, [x19]
     414:	cmp	x6, x0
     418:	b.ne	404 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4c>  // b.any
     41c:	ldr	x1, [x22, #16]
     420:	mov	x0, x19
     424:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
     428:	ands	w23, w0, #0xff
     42c:	b.ne	48c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0xd4>  // b.any
     430:	mov	w0, w23
     434:	ldp	x29, x30, [sp]
     438:	ldp	x19, x20, [sp, #16]
     43c:	ldp	x21, x22, [sp, #32]
     440:	ldp	x23, x24, [sp, #48]
     444:	add	sp, sp, #0x220
     448:	ret
     44c:	add	x4, x4, #0x18
     450:	cmp	x5, x4
     454:	b.eq	684 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2cc>  // b.none
     458:	ldr	x0, [x4]
     45c:	cmp	x6, x0
     460:	b.ne	44c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x94>  // b.any
     464:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     468:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     46c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     470:	add	x3, x3, #0x0
     474:	add	x1, x1, #0x0
     478:	add	x0, x0, #0x0
     47c:	mov	w2, #0x60a                 	// #1546
     480:	stp	x25, x26, [sp, #64]
     484:	stp	x27, x28, [sp, #80]
     488:	bl	0 <__assert_fail>
     48c:	mov	x0, x22
     490:	stp	x25, x26, [sp, #64]
     494:	add	x25, sp, #0xc0
     498:	stp	x27, x28, [sp, #80]
     49c:	bl	0 <_ZNK4llvm9RecordVal7getNameEv>
     4a0:	mov	x4, x0
     4a4:	mov	x5, x1
     4a8:	add	x7, sp, #0xf0
     4ac:	add	x2, sp, #0x98
     4b0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     4b4:	add	x3, x3, #0x0
     4b8:	stp	x4, x5, [sp, #152]
     4bc:	add	x5, sp, #0x120
     4c0:	add	x4, sp, #0x108
     4c4:	mov	w6, #0x503                 	// #1283
     4c8:	mov	x0, x25
     4cc:	add	x20, sp, #0xd8
     4d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     4d4:	add	x1, x1, #0x0
     4d8:	str	x7, [sp, #96]
     4dc:	add	x24, sp, #0x1e0
     4e0:	str	x4, [sp, #112]
     4e4:	add	x27, sp, #0x168
     4e8:	str	x5, [sp, #136]
     4ec:	add	x28, sp, #0x180
     4f0:	stp	x3, x2, [sp, #168]
     4f4:	add	x26, sp, #0x1b0
     4f8:	strh	w6, [sp, #184]
     4fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     500:	mov	x1, x25
     504:	mov	x8, x20
     508:	add	x0, sp, #0xa8
     50c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     510:	ldr	x0, [x22, #8]
     514:	add	x6, sp, #0x200
     518:	add	x3, sp, #0x150
     51c:	add	x2, sp, #0x138
     520:	and	x0, x0, #0xfffffffffffffff8
     524:	str	x2, [sp, #104]
     528:	stp	x6, x3, [sp, #120]
     52c:	mov	x8, x24
     530:	add	x25, sp, #0x198
     534:	ldr	x1, [x0]
     538:	add	x22, sp, #0x1c8
     53c:	ldr	x1, [x1, #16]
     540:	blr	x1
     544:	ldr	x7, [sp, #96]
     548:	mov	x1, x24
     54c:	mov	x0, x7
     550:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     554:	ldr	x4, [sp, #112]
     558:	ldr	x0, [sp, #96]
     55c:	mov	x8, x4
     560:	mov	x1, x0
     564:	mov	x0, x20
     568:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     56c:	ldr	x5, [sp, #136]
     570:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     574:	add	x1, x1, #0x0
     578:	str	x5, [sp, #96]
     57c:	mov	x0, x5
     580:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     584:	ldp	x0, x2, [sp, #96]
     588:	ldr	x4, [sp, #112]
     58c:	mov	x8, x2
     590:	mov	x1, x0
     594:	mov	x0, x4
     598:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     59c:	ldr	x3, [sp, #128]
     5a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     5a4:	add	x1, x1, #0x0
     5a8:	str	x3, [sp, #96]
     5ac:	mov	x0, x3
     5b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     5b4:	ldp	x0, x8, [sp, #96]
     5b8:	mov	x1, x0
     5bc:	mov	x0, x8
     5c0:	mov	x8, x27
     5c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     5c8:	ldr	x0, [x19, #8]
     5cc:	ldr	x6, [sp, #120]
     5d0:	and	x0, x0, #0xfffffffffffffff8
     5d4:	mov	x8, x6
     5d8:	mov	x19, x6
     5dc:	ldr	x1, [x0]
     5e0:	ldr	x1, [x1, #16]
     5e4:	blr	x1
     5e8:	mov	x1, x19
     5ec:	mov	x0, x28
     5f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     5f4:	add	x19, x19, #0x10
     5f8:	mov	x8, x25
     5fc:	mov	x1, x28
     600:	mov	x0, x27
     604:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     608:	mov	x0, x26
     60c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     610:	add	x1, x1, #0x0
     614:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     618:	mov	x8, x22
     61c:	mov	x1, x26
     620:	mov	x0, x25
     624:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     628:	add	x0, sp, #0x90
     62c:	mov	x2, x22
     630:	mov	x1, #0x1                   	// #1
     634:	str	x21, [sp, #144]
     638:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     63c:	ldr	x0, [sp, #512]
     640:	cmp	x0, x19
     644:	b.eq	64c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x294>  // b.none
     648:	bl	0 <_ZdlPv>
     64c:	ldr	x0, [sp, #480]
     650:	add	x24, x24, #0x10
     654:	cmp	x0, x24
     658:	b.eq	6e4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x32c>  // b.none
     65c:	bl	0 <_ZdlPv>
     660:	mov	w0, w23
     664:	ldp	x29, x30, [sp]
     668:	ldp	x19, x20, [sp, #16]
     66c:	ldp	x21, x22, [sp, #32]
     670:	ldp	x23, x24, [sp, #48]
     674:	ldp	x25, x26, [sp, #64]
     678:	ldp	x27, x28, [sp, #80]
     67c:	add	sp, sp, #0x220
     680:	ret
     684:	ldr	w0, [x20, #84]
     688:	cmp	w1, w0
     68c:	b.cs	708 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x350>  // b.hs, b.nlast
     690:	ldp	x0, x1, [x22]
     694:	stp	x0, x1, [x5]
     698:	ldr	x0, [x22, #16]
     69c:	str	x0, [x5, #16]
     6a0:	ldp	w0, w2, [x20, #80]
     6a4:	mov	w1, w0
     6a8:	add	x1, x1, #0x1
     6ac:	cmp	x1, x2
     6b0:	b.hi	730 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x378>  // b.pmore
     6b4:	add	w0, w0, #0x1
     6b8:	str	w0, [x20, #80]
     6bc:	mov	w23, #0x0                   	// #0
     6c0:	mov	w0, w23
     6c4:	ldp	x29, x30, [sp]
     6c8:	ldp	x19, x20, [sp, #16]
     6cc:	ldp	x21, x22, [sp, #32]
     6d0:	ldp	x23, x24, [sp, #48]
     6d4:	add	sp, sp, #0x220
     6d8:	ret
     6dc:	ldr	x20, [x0, #328]
     6e0:	b	3e0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x28>
     6e4:	mov	w0, w23
     6e8:	ldp	x29, x30, [sp]
     6ec:	ldp	x19, x20, [sp, #16]
     6f0:	ldp	x21, x22, [sp, #32]
     6f4:	ldp	x23, x24, [sp, #48]
     6f8:	ldp	x25, x26, [sp, #64]
     6fc:	ldp	x27, x28, [sp, #80]
     700:	add	sp, sp, #0x220
     704:	ret
     708:	add	x1, x20, #0x58
     70c:	add	x0, x20, #0x48
     710:	mov	x3, #0x18                  	// #24
     714:	mov	x2, #0x0                   	// #0
     718:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     71c:	ldr	w5, [x20, #80]
     720:	mov	w1, #0x18                  	// #24
     724:	ldr	x0, [x20, #72]
     728:	umaddl	x5, w5, w1, x0
     72c:	b	690 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2d8>
     730:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     734:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     738:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     73c:	add	x3, x3, #0x0
     740:	add	x1, x1, #0x0
     744:	add	x0, x0, #0x0
     748:	mov	w2, #0x43                  	// #67
     74c:	stp	x25, x26, [sp, #64]
     750:	stp	x27, x28, [sp, #80]
     754:	bl	0 <__assert_fail>

0000000000000758 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE>:
     758:	stp	x29, x30, [sp, #-208]!
     75c:	mov	x29, sp
     760:	stp	x19, x20, [sp, #16]
     764:	stp	x21, x22, [sp, #32]
     768:	mov	x21, x2
     76c:	stp	x23, x24, [sp, #48]
     770:	mov	x24, x1
     774:	stp	x25, x26, [sp, #64]
     778:	mov	x26, x0
     77c:	str	w4, [sp, #100]
     780:	str	x3, [sp, #104]
     784:	cbz	x1, 81c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xc4>
     788:	ldr	w2, [x24, #80]
     78c:	mov	w1, #0x18                  	// #24
     790:	ldr	x0, [x24, #72]
     794:	umaddl	x2, w2, w1, x0
     798:	cmp	x0, x2
     79c:	b.ne	7b0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x58>  // b.any
     7a0:	b	7ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x94>
     7a4:	add	x0, x0, #0x18
     7a8:	cmp	x2, x0
     7ac:	b.eq	7ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x94>  // b.none
     7b0:	ldr	x1, [x0]
     7b4:	cmp	x21, x1
     7b8:	b.ne	7a4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x4c>  // b.any
     7bc:	ldr	x1, [x0, #8]
     7c0:	mov	x0, x21
     7c4:	and	x1, x1, #0xfffffffffffffff8
     7c8:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
     7cc:	mov	x19, x0
     7d0:	mov	x0, x19
     7d4:	ldp	x19, x20, [sp, #16]
     7d8:	ldp	x21, x22, [sp, #32]
     7dc:	ldp	x23, x24, [sp, #48]
     7e0:	ldp	x25, x26, [sp, #64]
     7e4:	ldp	x29, x30, [sp], #208
     7e8:	ret
     7ec:	ldrb	w0, [x24, #125]
     7f0:	ldr	x1, [x26, #328]
     7f4:	cbz	w0, 820 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xc8>
     7f8:	cbnz	x1, 824 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xcc>
     7fc:	mov	x2, x21
     800:	mov	x0, x24
     804:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     808:	mov	x4, #0x1                   	// #1
     80c:	add	x3, x3, #0x0
     810:	mov	x1, #0x0                   	// #0
     814:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
     818:	b	83c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xe4>
     81c:	ldr	x1, [x0, #328]
     820:	cbz	x1, 8e4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x18c>
     824:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     828:	mov	x2, x21
     82c:	add	x3, x3, #0x0
     830:	mov	x0, x1
     834:	mov	x4, #0x2                   	// #2
     838:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
     83c:	ldr	x4, [x26, #328]
     840:	cmp	x4, #0x0
     844:	csel	x4, x24, x4, eq  // eq = none
     848:	ldr	x1, [x4, #56]
     84c:	ldr	w3, [x4, #64]
     850:	add	x3, x1, x3, lsl #3
     854:	cmp	x1, x3
     858:	b.ne	86c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x114>  // b.any
     85c:	b	8d8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x180>
     860:	add	x1, x1, #0x8
     864:	cmp	x3, x1
     868:	b.eq	8d8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x180>  // b.none
     86c:	ldr	x2, [x1]
     870:	cmp	x0, x2
     874:	b.ne	860 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x108>  // b.any
     878:	ldr	w3, [x4, #80]
     87c:	mov	w2, #0x18                  	// #24
     880:	ldr	x1, [x4, #72]
     884:	umaddl	x3, w3, w2, x1
     888:	cmp	x1, x3
     88c:	b.ne	8a0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x148>  // b.any
     890:	b	b4c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x3f4>
     894:	add	x1, x1, #0x18
     898:	cmp	x3, x1
     89c:	b.eq	b4c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x3f4>  // b.none
     8a0:	ldr	x2, [x1]
     8a4:	cmp	x0, x2
     8a8:	b.ne	894 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x13c>  // b.any
     8ac:	ldr	x1, [x1, #8]
     8b0:	and	x1, x1, #0xfffffffffffffff8
     8b4:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
     8b8:	mov	x19, x0
     8bc:	mov	x0, x19
     8c0:	ldp	x19, x20, [sp, #16]
     8c4:	ldp	x21, x22, [sp, #32]
     8c8:	ldp	x23, x24, [sp, #48]
     8cc:	ldp	x25, x26, [sp, #64]
     8d0:	ldp	x29, x30, [sp], #208
     8d4:	ret
     8d8:	ldr	x1, [x21, #32]
     8dc:	cmp	x1, #0x4
     8e0:	b.eq	b00 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x3a8>  // b.none
     8e4:	ldr	x22, [x26, #336]
     8e8:	cbz	x22, 984 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x22c>
     8ec:	stp	x27, x28, [sp, #80]
     8f0:	ldp	x23, x27, [x21, #24]
     8f4:	nop
     8f8:	add	x25, x22, #0x8
     8fc:	ldr	x19, [x22, #16]
     900:	cbz	x19, 978 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x220>
     904:	cbz	x27, a5c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x304>
     908:	mov	x28, x25
     90c:	nop
     910:	ldp	x0, x20, [x19, #32]
     914:	cmp	x27, x20
     918:	b.cc	aa8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x350>  // b.lo, b.ul, b.last
     91c:	cbz	x20, ab8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x360>
     920:	mov	x2, x20
     924:	mov	x1, x23
     928:	bl	0 <memcmp>
     92c:	cbnz	w0, acc <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x374>
     930:	cmp	x27, x20
     934:	b.ne	ab8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x360>  // b.any
     938:	mov	x28, x19
     93c:	ldr	x19, [x19, #16]
     940:	cbnz	x19, 910 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1b8>
     944:	cmp	x25, x28
     948:	b.eq	978 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x220>  // b.none
     94c:	ldp	x1, x19, [x28, #32]
     950:	cmp	x27, x19
     954:	b.hi	ad8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x380>  // b.pmore
     958:	mov	x2, x27
     95c:	mov	x0, x23
     960:	bl	0 <memcmp>
     964:	cbnz	w0, aec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x394>
     968:	cmp	x27, x19
     96c:	b.eq	a80 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x328>  // b.none
     970:	cmp	x27, x19
     974:	b.cs	a80 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x328>  // b.hs, b.nlast
     978:	ldr	x22, [x22, #48]
     97c:	cbnz	x22, 8f8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1a0>
     980:	ldp	x27, x28, [sp, #80]
     984:	ldp	x0, x2, [x26, #272]
     988:	cmp	x2, x0
     98c:	b.eq	9b4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x25c>  // b.none
     990:	ldr	x1, [x0]
     994:	ldr	x19, [x1, #8]
     998:	cbz	x19, 9a8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x250>
     99c:	ldr	x1, [x19, #24]
     9a0:	cmp	x21, x1
     9a4:	b.eq	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>  // b.none
     9a8:	add	x0, x0, #0x8
     9ac:	cmp	x2, x0
     9b0:	b.ne	990 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x238>  // b.any
     9b4:	ldr	w0, [sp, #100]
     9b8:	mov	x19, x21
     9bc:	cmp	w0, #0x1
     9c0:	b.eq	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>  // b.none
     9c4:	ldp	x1, x2, [x21, #24]
     9c8:	ldr	x0, [x26, #344]
     9cc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     9d0:	mov	x19, x0
     9d4:	cbnz	x0, 7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>
     9d8:	cbz	x24, 9f8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a0>
     9dc:	ldrb	w0, [x24, #125]
     9e0:	cbnz	w0, 9f8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a0>
     9e4:	ldr	x0, [x26, #328]
     9e8:	cbnz	x0, 9f8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a0>
     9ec:	ldr	x0, [x24]
     9f0:	cmp	x21, x0
     9f4:	b.eq	b2c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x3d4>  // b.none
     9f8:	ldp	x4, x3, [x21, #24]
     9fc:	add	x2, sp, #0x78
     a00:	add	x22, sp, #0x88
     a04:	add	x21, sp, #0xa0
     a08:	mov	x0, x22
     a0c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     a10:	add	x1, x1, #0x0
     a14:	stp	x4, x3, [sp, #120]
     a18:	add	x20, sp, #0xb8
     a1c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     a20:	mov	x0, x21
     a24:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     a28:	add	x1, x1, #0x0
     a2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     a30:	mov	x1, x21
     a34:	mov	x0, x22
     a38:	mov	x8, x20
     a3c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     a40:	ldr	x3, [sp, #104]
     a44:	mov	x2, x20
     a48:	add	x0, sp, #0x70
     a4c:	mov	x1, #0x1                   	// #1
     a50:	str	x3, [sp, #112]
     a54:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     a58:	b	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>
     a5c:	mov	x28, x19
     a60:	ldr	x19, [x19, #16]
     a64:	cbnz	x19, a5c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x304>
     a68:	cmp	x25, x28
     a6c:	b.eq	978 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x220>  // b.none
     a70:	ldr	x19, [x28, #40]
     a74:	cmp	x27, x19
     a78:	b.ne	970 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x218>  // b.any
     a7c:	nop
     a80:	ldr	x19, [x28, #64]
     a84:	ldp	x27, x28, [sp, #80]
     a88:	cbz	x19, 984 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x22c>
     a8c:	mov	x0, x19
     a90:	ldp	x19, x20, [sp, #16]
     a94:	ldp	x21, x22, [sp, #32]
     a98:	ldp	x23, x24, [sp, #48]
     a9c:	ldp	x25, x26, [sp, #64]
     aa0:	ldp	x29, x30, [sp], #208
     aa4:	ret
     aa8:	mov	x2, x27
     aac:	mov	x1, x23
     ab0:	bl	0 <memcmp>
     ab4:	cbnz	w0, acc <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x374>
     ab8:	cmp	x27, x20
     abc:	b.ls	938 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1e0>  // b.plast
     ac0:	ldr	x19, [x19, #24]
     ac4:	cbnz	x19, 910 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1b8>
     ac8:	b	944 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1ec>
     acc:	tbz	w0, #31, 938 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1e0>
     ad0:	ldr	x19, [x19, #24]
     ad4:	b	ac4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x36c>
     ad8:	cbz	x19, a80 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x328>
     adc:	mov	x2, x19
     ae0:	mov	x0, x23
     ae4:	bl	0 <memcmp>
     ae8:	cbz	w0, 970 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x218>
     aec:	tbnz	w0, #31, 978 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x220>
     af0:	ldr	x19, [x28, #64]
     af4:	ldp	x27, x28, [sp, #80]
     af8:	cbnz	x19, a8c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x334>
     afc:	b	984 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x22c>
     b00:	ldr	x2, [x21, #24]
     b04:	mov	w1, #0x414e                	// #16718
     b08:	movk	w1, #0x454d, lsl #16
     b0c:	ldr	w2, [x2]
     b10:	cmp	w2, w1
     b14:	b.ne	8e4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x18c>  // b.any
     b18:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
     b1c:	ldr	x1, [x1]
     b20:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
     b24:	mov	x19, x0
     b28:	b	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>
     b2c:	mov	x0, x24
     b30:	bl	0 <_ZN4llvm6Record7getTypeEv>
     b34:	mov	x1, x21
     b38:	mov	x2, x0
     b3c:	mov	w0, #0x0                   	// #0
     b40:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
     b44:	mov	x19, x0
     b48:	b	7d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x78>
     b4c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     b50:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     b54:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     b58:	add	x3, x3, #0x0
     b5c:	add	x1, x1, #0x0
     b60:	add	x0, x0, #0x0
     b64:	mov	w2, #0x363                 	// #867
     b68:	stp	x27, x28, [sp, #80]
     b6c:	bl	0 <__assert_fail>

0000000000000b70 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>:
     b70:	sub	sp, sp, #0x270
     b74:	stp	x29, x30, [sp]
     b78:	mov	x29, sp
     b7c:	str	x2, [sp, #96]
     b80:	cbz	x6, dc0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x250>
     b84:	stp	x21, x22, [sp, #32]
     b88:	and	w7, w7, #0xff
     b8c:	mov	x21, x5
     b90:	stp	x23, x24, [sp, #48]
     b94:	mov	x23, x4
     b98:	stp	x25, x26, [sp, #64]
     b9c:	mov	x26, x3
     ba0:	stp	x27, x28, [sp, #80]
     ba4:	mov	x28, x6
     ba8:	cbz	x1, dd0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x260>
     bac:	ldr	w2, [x1, #80]
     bb0:	mov	w0, #0x18                  	// #24
     bb4:	ldr	x9, [x1, #72]
     bb8:	umaddl	x2, w2, w0, x9
     bbc:	cmp	x2, x9
     bc0:	b.eq	c80 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x110>  // b.none
     bc4:	mov	x22, x9
     bc8:	b	bd8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x68>
     bcc:	add	x22, x22, #0x18
     bd0:	cmp	x2, x22
     bd4:	b.eq	c80 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x110>  // b.none
     bd8:	ldr	x1, [x22]
     bdc:	cmp	x26, x1
     be0:	b.ne	bcc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5c>  // b.any
     be4:	cbz	x21, d90 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x220>
     be8:	ldr	x0, [x22, #16]
     bec:	stp	x19, x20, [sp, #16]
     bf0:	str	x0, [sp, #104]
     bf4:	cbz	x0, 14ac <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x93c>
     bf8:	ldrb	w0, [x0, #8]
     bfc:	cmp	w0, #0x3
     c00:	b.eq	dd8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x268>  // b.none
     c04:	ldr	x1, [x26]
     c08:	add	x21, sp, #0x1a0
     c0c:	mov	x8, x21
     c10:	mov	x0, x26
     c14:	add	x20, sp, #0x1c0
     c18:	ldr	x1, [x1, #48]
     c1c:	blr	x1
     c20:	mov	x2, #0x0                   	// #0
     c24:	mov	x1, #0x0                   	// #0
     c28:	mov	x0, x21
     c2c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     c30:	mov	x4, #0x7                   	// #7
     c34:	add	x3, x3, #0x0
     c38:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     c3c:	add	x1, x20, #0x10
     c40:	str	x1, [sp, #448]
     c44:	mov	x1, x0
     c48:	ldr	x2, [x1], #16
     c4c:	cmp	x2, x1
     c50:	b.eq	14f0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x980>  // b.none
     c54:	str	x2, [sp, #448]
     c58:	ldr	x2, [x0, #16]
     c5c:	str	x2, [sp, #464]
     c60:	ldr	x2, [x0, #8]
     c64:	add	x22, sp, #0x1e0
     c68:	str	x2, [sp, #456]
     c6c:	mov	x8, x22
     c70:	stp	x1, xzr, [x0]
     c74:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     c78:	add	x1, x1, #0x0
     c7c:	b	cfc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x18c>
     c80:	ldr	x1, [x26]
     c84:	add	x21, sp, #0x1a0
     c88:	mov	x8, x21
     c8c:	stp	x19, x20, [sp, #16]
     c90:	mov	x0, x26
     c94:	ldr	x1, [x1, #48]
     c98:	add	x20, sp, #0x1c0
     c9c:	blr	x1
     ca0:	mov	x2, #0x0                   	// #0
     ca4:	mov	x1, #0x0                   	// #0
     ca8:	mov	x0, x21
     cac:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     cb0:	mov	x4, #0x7                   	// #7
     cb4:	add	x3, x3, #0x0
     cb8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     cbc:	add	x1, x20, #0x10
     cc0:	str	x1, [sp, #448]
     cc4:	mov	x1, x0
     cc8:	ldr	x2, [x1], #16
     ccc:	cmp	x2, x1
     cd0:	b.eq	13d8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x868>  // b.none
     cd4:	str	x2, [sp, #448]
     cd8:	ldr	x2, [x0, #16]
     cdc:	str	x2, [sp, #464]
     ce0:	ldr	x2, [x0, #8]
     ce4:	add	x22, sp, #0x1e0
     ce8:	str	x2, [sp, #456]
     cec:	mov	x8, x22
     cf0:	stp	x1, xzr, [x0]
     cf4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     cf8:	add	x1, x1, #0x0
     cfc:	strb	wzr, [x0, #16]
     d00:	add	x23, sp, #0x180
     d04:	mov	x0, x20
     d08:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     d0c:	mov	x1, x22
     d10:	mov	x0, x23
     d14:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     d18:	add	x22, x22, #0x10
     d1c:	ldr	x0, [sp, #96]
     d20:	mov	x2, x23
     d24:	mov	x1, #0x1                   	// #1
     d28:	str	x0, [sp, #352]
     d2c:	add	x0, sp, #0x160
     d30:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     d34:	ldr	x0, [sp, #480]
     d38:	cmp	x0, x22
     d3c:	b.eq	d44 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1d4>  // b.none
     d40:	bl	0 <_ZdlPv>
     d44:	ldr	x0, [sp, #448]
     d48:	add	x20, x20, #0x10
     d4c:	cmp	x0, x20
     d50:	b.eq	d58 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1e8>  // b.none
     d54:	bl	0 <_ZdlPv>
     d58:	ldr	x0, [sp, #416]
     d5c:	add	x21, x21, #0x10
     d60:	cmp	x0, x21
     d64:	b.eq	d6c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1fc>  // b.none
     d68:	bl	0 <_ZdlPv>
     d6c:	mov	w0, #0x1                   	// #1
     d70:	ldp	x29, x30, [sp]
     d74:	ldp	x19, x20, [sp, #16]
     d78:	ldp	x21, x22, [sp, #32]
     d7c:	ldp	x23, x24, [sp, #48]
     d80:	ldp	x25, x26, [sp, #64]
     d84:	ldp	x27, x28, [sp, #80]
     d88:	add	sp, sp, #0x270
     d8c:	ret
     d90:	ldrb	w0, [x28, #8]
     d94:	cmp	w0, #0x13
     d98:	b.eq	fb4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x444>  // b.none
     d9c:	mov	x1, x28
     da0:	mov	x0, x22
     da4:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
     da8:	tst	w0, #0xff
     dac:	b.ne	ff8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x488>  // b.any
     db0:	ldp	x21, x22, [sp, #32]
     db4:	ldp	x23, x24, [sp, #48]
     db8:	ldp	x25, x26, [sp, #64]
     dbc:	ldp	x27, x28, [sp, #80]
     dc0:	mov	w0, #0x0                   	// #0
     dc4:	ldp	x29, x30, [sp]
     dc8:	add	sp, sp, #0x270
     dcc:	ret
     dd0:	ldr	x1, [x0, #328]
     dd4:	b	bac <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3c>
     dd8:	ldr	x1, [x28]
     ddc:	mov	w0, w21
     de0:	ldr	x20, [x1, #56]
     de4:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
     de8:	mov	x1, x0
     dec:	mov	x0, x28
     df0:	blr	x20
     df4:	mov	x25, x0
     df8:	cbz	x0, 14dc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x96c>
     dfc:	ldr	x1, [sp, #104]
     e00:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     e04:	ldr	d0, [x0]
     e08:	add	x0, sp, #0x1e0
     e0c:	ldr	w24, [x1, #32]
     e10:	str	x0, [sp, #112]
     e14:	add	x0, sp, #0x1f0
     e18:	str	x0, [sp, #480]
     e1c:	mov	w28, w24
     e20:	str	d0, [sp, #488]
     e24:	cmp	x28, #0x10
     e28:	mov	x20, x28
     e2c:	b.hi	14fc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x98c>  // b.pmore
     e30:	lsl	x2, x28, #3
     e34:	str	w24, [sp, #488]
     e38:	add	x1, x0, x2
     e3c:	cmp	x0, x1
     e40:	b.eq	e4c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2dc>  // b.none
     e44:	mov	w1, #0x0                   	// #0
     e48:	bl	0 <memset>
     e4c:	cbz	w21, 13e8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x878>
     e50:	sub	w27, w21, #0x1
     e54:	mov	x20, #0x0                   	// #0
     e58:	b	e8c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x31c>
     e5c:	ldr	x3, [x25]
     e60:	mov	w1, w20
     e64:	mov	x0, x25
     e68:	ldr	x3, [x3, #104]
     e6c:	blr	x3
     e70:	str	x0, [x28, x19, lsl #3]
     e74:	cmp	x27, x20
     e78:	b.eq	13e4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x874>  // b.none
     e7c:	add	x20, x20, #0x1
     e80:	cmp	x21, x20
     e84:	b.eq	157c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa0c>  // b.none
     e88:	ldr	w28, [sp, #488]
     e8c:	ldr	w24, [x23, x20, lsl #2]
     e90:	mov	w19, w24
     e94:	cmp	x28, w24, uxtw
     e98:	b.ls	159c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa2c>  // b.plast
     e9c:	ldr	x28, [sp, #480]
     ea0:	ldr	x0, [x28, x19, lsl #3]
     ea4:	cbz	x0, e5c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2ec>
     ea8:	add	x20, sp, #0xc0
     eac:	add	x21, sp, #0xe0
     eb0:	mov	x0, x20
     eb4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     eb8:	add	x1, x1, #0x0
     ebc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     ec0:	mov	w2, #0x109                 	// #265
     ec4:	mov	x8, x21
     ec8:	stp	xzr, xzr, [sp, #160]
     ecc:	mov	x0, x20
     ed0:	add	x23, sp, #0x100
     ed4:	add	x1, sp, #0xa0
     ed8:	str	w24, [sp, #160]
     edc:	strh	w2, [sp, #176]
     ee0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     ee4:	mov	x0, x23
     ee8:	add	x25, sp, #0x120
     eec:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     ef0:	add	x1, x1, #0x0
     ef4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     ef8:	add	x20, sp, #0x1c0
     efc:	mov	x1, x23
     f00:	mov	x0, x21
     f04:	mov	x8, x25
     f08:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f0c:	ldr	x1, [x26]
     f10:	mov	x8, x20
     f14:	mov	x0, x26
     f18:	add	x26, sp, #0x140
     f1c:	add	x23, sp, #0x160
     f20:	add	x24, sp, #0x180
     f24:	ldr	x1, [x1, #48]
     f28:	add	x21, sp, #0x1a0
     f2c:	blr	x1
     f30:	mov	x1, x20
     f34:	mov	x0, x26
     f38:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f3c:	add	x20, x20, #0x10
     f40:	mov	x8, x23
     f44:	mov	x1, x26
     f48:	mov	x0, x25
     f4c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f50:	mov	x0, x24
     f54:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f58:	add	x1, x1, #0x0
     f5c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f60:	mov	x8, x21
     f64:	mov	x1, x24
     f68:	mov	x0, x23
     f6c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     f70:	ldr	x3, [sp, #96]
     f74:	add	x0, sp, #0x88
     f78:	mov	x2, x21
     f7c:	mov	x1, #0x1                   	// #1
     f80:	str	x3, [sp, #136]
     f84:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     f88:	ldr	x0, [sp, #448]
     f8c:	cmp	x0, x20
     f90:	b.eq	f98 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x428>  // b.none
     f94:	bl	0 <_ZdlPv>
     f98:	ldr	x1, [sp, #112]
     f9c:	ldr	x0, [sp, #480]
     fa0:	add	x22, x1, #0x10
     fa4:	cmp	x0, x22
     fa8:	b.eq	d6c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1fc>  // b.none
     fac:	bl	0 <free>
     fb0:	b	d6c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1fc>
     fb4:	ldr	x0, [x28, #24]
     fb8:	cmp	w7, #0x0
     fbc:	ccmp	x0, x26, #0x0, eq  // eq = none
     fc0:	b.ne	d9c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x22c>  // b.any
     fc4:	stp	x19, x20, [sp, #16]
     fc8:	add	x20, sp, #0x1e0
     fcc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     fd0:	mov	x0, x20
     fd4:	add	x1, x1, #0x0
     fd8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
     fdc:	ldr	x0, [sp, #96]
     fe0:	mov	x2, x20
     fe4:	mov	x1, #0x1                   	// #1
     fe8:	str	x0, [sp, #448]
     fec:	add	x0, sp, #0x1c0
     ff0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     ff4:	b	d6c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1fc>
     ff8:	add	x0, sp, #0xa0
     ffc:	add	x1, sp, #0x1e0
    1000:	stp	x19, x20, [sp, #16]
    1004:	stp	x1, x0, [sp, #112]
    1008:	add	x0, sp, #0xb0
    100c:	str	x0, [sp, #160]
    1010:	str	xzr, [sp, #168]
    1014:	strb	wzr, [sp, #176]
    1018:	ldrb	w0, [x28, #8]
    101c:	cmp	w0, #0x3
    1020:	b.eq	10cc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x55c>  // b.none
    1024:	mov	x0, x28
    1028:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    102c:	mov	x21, x0
    1030:	cbz	x0, 14c4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x954>
    1034:	add	x24, sp, #0x160
    1038:	adrp	x27, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    103c:	mov	x0, x24
    1040:	add	x1, x27, #0x0
    1044:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1048:	add	x20, sp, #0x1c0
    104c:	ldr	x0, [x21, #16]
    1050:	mov	x8, x20
    1054:	add	x23, sp, #0x180
    1058:	add	x21, sp, #0x1a0
    105c:	ldr	x1, [x0]
    1060:	ldr	x1, [x1, #16]
    1064:	blr	x1
    1068:	mov	x1, x20
    106c:	mov	x0, x23
    1070:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1074:	mov	x1, x23
    1078:	mov	x0, x24
    107c:	mov	x8, x21
    1080:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1084:	ldr	x19, [sp, #112]
    1088:	mov	x0, x21
    108c:	mov	x8, x19
    1090:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1094:	ldr	x0, [sp, #120]
    1098:	mov	x1, x19
    109c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
    10a0:	ldr	x0, [sp, #480]
    10a4:	add	x1, x19, #0x10
    10a8:	cmp	x0, x1
    10ac:	b.eq	10b4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x544>  // b.none
    10b0:	bl	0 <_ZdlPv>
    10b4:	ldr	x0, [sp, #448]
    10b8:	add	x1, x20, #0x10
    10bc:	cmp	x0, x1
    10c0:	b.eq	1188 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x618>  // b.none
    10c4:	bl	0 <_ZdlPv>
    10c8:	b	1188 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x618>
    10cc:	add	x21, sp, #0x1a0
    10d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    10d4:	mov	x0, x21
    10d8:	add	x1, x1, #0x0
    10dc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    10e0:	add	x20, sp, #0x1c0
    10e4:	ldr	w3, [x28, #32]
    10e8:	mov	w2, #0x109                 	// #265
    10ec:	add	x23, sp, #0x180
    10f0:	stp	xzr, xzr, [sp, #384]
    10f4:	mov	x1, x23
    10f8:	mov	x0, x21
    10fc:	mov	x8, x20
    1100:	str	w3, [sp, #384]
    1104:	strh	w2, [sp, #400]
    1108:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    110c:	ldr	x19, [sp, #112]
    1110:	mov	x0, x20
    1114:	mov	x8, x19
    1118:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    111c:	ldr	x1, [sp, #480]
    1120:	add	x2, x19, #0x10
    1124:	ldr	x0, [sp, #160]
    1128:	cmp	x1, x2
    112c:	b.eq	153c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9cc>  // b.none
    1130:	ldr	x2, [sp, #120]
    1134:	ldr	x3, [sp, #488]
    1138:	stp	x1, x3, [sp, #160]
    113c:	add	x2, x2, #0x10
    1140:	cmp	x0, x2
    1144:	ldr	x2, [sp, #496]
    1148:	b.eq	14b0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x940>  // b.none
    114c:	ldr	x1, [sp, #176]
    1150:	str	x2, [sp, #176]
    1154:	cbz	x0, 14b4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x944>
    1158:	str	x0, [sp, #480]
    115c:	str	x1, [sp, #496]
    1160:	str	xzr, [sp, #488]
    1164:	add	x24, sp, #0x160
    1168:	strb	wzr, [x0]
    116c:	ldr	x1, [sp, #112]
    1170:	ldr	x0, [sp, #480]
    1174:	add	x1, x1, #0x10
    1178:	cmp	x0, x1
    117c:	b.eq	1184 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x614>  // b.none
    1180:	bl	0 <_ZdlPv>
    1184:	adrp	x27, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1188:	ldr	x1, [x26]
    118c:	add	x25, sp, #0xc0
    1190:	mov	x8, x25
    1194:	add	x19, sp, #0xe0
    1198:	str	x19, [sp, #104]
    119c:	mov	x0, x26
    11a0:	ldr	x1, [x1, #48]
    11a4:	blr	x1
    11a8:	mov	x2, #0x0                   	// #0
    11ac:	mov	x1, #0x0                   	// #0
    11b0:	mov	x0, x25
    11b4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    11b8:	mov	x4, #0x7                   	// #7
    11bc:	add	x3, x3, #0x0
    11c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    11c4:	add	x1, x19, #0x10
    11c8:	str	x1, [sp, #224]
    11cc:	mov	x1, x0
    11d0:	ldr	x2, [x1], #16
    11d4:	cmp	x2, x1
    11d8:	b.eq	1524 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9b4>  // b.none
    11dc:	str	x2, [sp, #224]
    11e0:	ldr	x2, [x0, #16]
    11e4:	str	x2, [sp, #240]
    11e8:	ldr	x2, [x0, #8]
    11ec:	str	x2, [sp, #232]
    11f0:	stp	x1, xzr, [x0]
    11f4:	add	x26, sp, #0x100
    11f8:	add	x1, x27, #0x0
    11fc:	strb	wzr, [x0, #16]
    1200:	mov	x8, x26
    1204:	ldr	x0, [sp, #104]
    1208:	add	x27, sp, #0x120
    120c:	add	x19, sp, #0x140
    1210:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1214:	ldr	x0, [x22, #8]
    1218:	mov	x8, x27
    121c:	and	x0, x0, #0xfffffffffffffff8
    1220:	ldr	x1, [x0]
    1224:	ldr	x1, [x1, #16]
    1228:	blr	x1
    122c:	mov	x1, x27
    1230:	mov	x0, x26
    1234:	mov	x8, x19
    1238:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    123c:	mov	x0, x19
    1240:	mov	x8, x24
    1244:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1248:	add	x1, x1, #0x0
    124c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1250:	ldr	x1, [x28]
    1254:	mov	x0, x28
    1258:	mov	x8, x23
    125c:	ldr	x1, [x1, #40]
    1260:	blr	x1
    1264:	mov	x8, x21
    1268:	mov	x1, x23
    126c:	mov	x0, x24
    1270:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1274:	ldp	x1, x2, [sp, #160]
    1278:	mov	x0, x21
    127c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1280:	mov	x1, x0
    1284:	add	x2, x20, #0x10
    1288:	str	x2, [sp, #448]
    128c:	ldr	x2, [x1], #16
    1290:	cmp	x2, x1
    1294:	b.eq	1530 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9c0>  // b.none
    1298:	str	x2, [sp, #448]
    129c:	ldr	x2, [x0, #16]
    12a0:	str	x2, [sp, #464]
    12a4:	ldr	x28, [sp, #112]
    12a8:	add	x22, sp, #0x88
    12ac:	ldr	x2, [x0, #8]
    12b0:	str	x2, [sp, #456]
    12b4:	mov	x8, x28
    12b8:	stp	x1, xzr, [x0]
    12bc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    12c0:	strb	wzr, [x0, #16]
    12c4:	add	x1, x1, #0x0
    12c8:	mov	x0, x20
    12cc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    12d0:	mov	x0, x22
    12d4:	mov	x1, x28
    12d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    12dc:	ldr	x0, [sp, #96]
    12e0:	mov	x2, x22
    12e4:	mov	x1, #0x1                   	// #1
    12e8:	str	x0, [sp, #128]
    12ec:	add	x0, sp, #0x80
    12f0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    12f4:	ldr	x0, [sp, #480]
    12f8:	add	x22, x28, #0x10
    12fc:	cmp	x0, x22
    1300:	b.eq	1308 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x798>  // b.none
    1304:	bl	0 <_ZdlPv>
    1308:	ldr	x0, [sp, #448]
    130c:	add	x20, x20, #0x10
    1310:	cmp	x0, x20
    1314:	b.eq	131c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7ac>  // b.none
    1318:	bl	0 <_ZdlPv>
    131c:	ldr	x0, [sp, #416]
    1320:	add	x21, x21, #0x10
    1324:	cmp	x0, x21
    1328:	b.eq	1330 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7c0>  // b.none
    132c:	bl	0 <_ZdlPv>
    1330:	ldr	x0, [sp, #384]
    1334:	add	x23, x23, #0x10
    1338:	cmp	x0, x23
    133c:	b.eq	1344 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7d4>  // b.none
    1340:	bl	0 <_ZdlPv>
    1344:	ldr	x0, [sp, #352]
    1348:	add	x24, x24, #0x10
    134c:	cmp	x0, x24
    1350:	b.eq	1358 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7e8>  // b.none
    1354:	bl	0 <_ZdlPv>
    1358:	ldr	x0, [sp, #320]
    135c:	add	x28, x19, #0x10
    1360:	cmp	x0, x28
    1364:	b.eq	136c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7fc>  // b.none
    1368:	bl	0 <_ZdlPv>
    136c:	ldr	x0, [sp, #288]
    1370:	add	x27, x27, #0x10
    1374:	cmp	x0, x27
    1378:	b.eq	1380 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x810>  // b.none
    137c:	bl	0 <_ZdlPv>
    1380:	ldr	x0, [sp, #256]
    1384:	add	x26, x26, #0x10
    1388:	cmp	x0, x26
    138c:	b.eq	1394 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x824>  // b.none
    1390:	bl	0 <_ZdlPv>
    1394:	ldr	x1, [sp, #104]
    1398:	ldr	x0, [sp, #224]
    139c:	add	x1, x1, #0x10
    13a0:	cmp	x0, x1
    13a4:	b.eq	13ac <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x83c>  // b.none
    13a8:	bl	0 <_ZdlPv>
    13ac:	ldr	x0, [sp, #192]
    13b0:	add	x25, x25, #0x10
    13b4:	cmp	x0, x25
    13b8:	b.eq	13c0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x850>  // b.none
    13bc:	bl	0 <_ZdlPv>
    13c0:	ldr	x1, [sp, #120]
    13c4:	ldr	x0, [sp, #160]
    13c8:	add	x1, x1, #0x10
    13cc:	cmp	x0, x1
    13d0:	b.ne	d68 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1f8>  // b.any
    13d4:	b	d6c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1fc>
    13d8:	ldp	x2, x3, [x0, #16]
    13dc:	stp	x2, x3, [sp, #464]
    13e0:	b	ce0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x170>
    13e4:	ldr	w20, [sp, #488]
    13e8:	ldr	x0, [sp, #104]
    13ec:	add	x25, x0, #0x28
    13f0:	ldr	w3, [x0, #32]
    13f4:	mov	x0, #0x0                   	// #0
    13f8:	cbnz	w3, 1474 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x904>
    13fc:	ldr	x0, [sp, #480]
    1400:	mov	x1, x20
    1404:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    1408:	mov	x28, x0
    140c:	ldr	x1, [sp, #112]
    1410:	ldr	x2, [sp, #480]
    1414:	add	x1, x1, #0x10
    1418:	cmp	x2, x1
    141c:	b.eq	1428 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x8b8>  // b.none
    1420:	mov	x0, x2
    1424:	bl	0 <free>
    1428:	mov	x1, x28
    142c:	mov	x0, x22
    1430:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    1434:	tst	w0, #0xff
    1438:	b.ne	1490 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x920>  // b.any
    143c:	mov	w0, #0x0                   	// #0
    1440:	ldp	x19, x20, [sp, #16]
    1444:	ldp	x21, x22, [sp, #32]
    1448:	ldp	x23, x24, [sp, #48]
    144c:	ldp	x25, x26, [sp, #64]
    1450:	ldp	x27, x28, [sp, #80]
    1454:	b	dc4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x254>
    1458:	cmp	w3, w0
    145c:	b.ls	15dc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa6c>  // b.plast
    1460:	ldr	x2, [x25, x0, lsl #3]
    1464:	str	x2, [x1, x4]
    1468:	add	x0, x0, #0x1
    146c:	cmp	w3, w0
    1470:	b.eq	13fc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x88c>  // b.none
    1474:	cmp	x0, x20
    1478:	b.eq	159c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa2c>  // b.none
    147c:	ldr	x1, [sp, #480]
    1480:	lsl	x4, x0, #3
    1484:	ldr	x2, [x1, x0, lsl #3]
    1488:	cbnz	x2, 1468 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x8f8>
    148c:	b	1458 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x8e8>
    1490:	add	x0, sp, #0xa0
    1494:	str	x0, [sp, #120]
    1498:	add	x0, sp, #0xb0
    149c:	str	x0, [sp, #160]
    14a0:	str	xzr, [sp, #168]
    14a4:	strb	wzr, [sp, #176]
    14a8:	cbnz	x28, 1018 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x4a8>
    14ac:	bl	c8 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    14b0:	str	x2, [sp, #176]
    14b4:	ldr	x0, [sp, #112]
    14b8:	add	x0, x0, #0x10
    14bc:	str	x0, [sp, #480]
    14c0:	b	1160 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5f0>
    14c4:	add	x20, sp, #0x1c0
    14c8:	add	x23, sp, #0x180
    14cc:	add	x24, sp, #0x160
    14d0:	add	x21, sp, #0x1a0
    14d4:	adrp	x27, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    14d8:	b	1188 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x618>
    14dc:	add	x20, sp, #0x1e0
    14e0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    14e4:	mov	x0, x20
    14e8:	add	x1, x1, #0x0
    14ec:	b	fd8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x468>
    14f0:	ldp	x2, x3, [x0, #16]
    14f4:	stp	x2, x3, [sp, #464]
    14f8:	b	c60 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xf0>
    14fc:	mov	x1, x0
    1500:	mov	x2, x28
    1504:	ldr	x0, [sp, #112]
    1508:	mov	x3, #0x8                   	// #8
    150c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1510:	ldr	w0, [sp, #492]
    1514:	cmp	x28, x0
    1518:	b.hi	15bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa4c>  // b.pmore
    151c:	ldr	x0, [sp, #480]
    1520:	b	e30 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2c0>
    1524:	ldp	x2, x3, [x0, #16]
    1528:	stp	x2, x3, [sp, #240]
    152c:	b	11e8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x678>
    1530:	ldp	x2, x3, [x0, #16]
    1534:	stp	x2, x3, [sp, #464]
    1538:	b	12a4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x734>
    153c:	ldr	x2, [sp, #488]
    1540:	cbz	x2, 1558 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9e8>
    1544:	cmp	x2, #0x1
    1548:	b.eq	1568 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9f8>  // b.none
    154c:	bl	0 <memcpy>
    1550:	ldr	x0, [sp, #160]
    1554:	ldr	x2, [sp, #488]
    1558:	str	x2, [sp, #168]
    155c:	strb	wzr, [x0, x2]
    1560:	ldr	x0, [sp, #480]
    1564:	b	1160 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5f0>
    1568:	ldrb	w1, [sp, #496]
    156c:	strb	w1, [x0]
    1570:	ldr	x0, [sp, #160]
    1574:	ldr	x2, [sp, #488]
    1578:	b	1558 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9e8>
    157c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1580:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1584:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1588:	add	x3, x3, #0x0
    158c:	add	x1, x1, #0x0
    1590:	add	x0, x0, #0x0
    1594:	mov	w2, #0xfa                  	// #250
    1598:	bl	0 <__assert_fail>
    159c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15a4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15a8:	add	x3, x3, #0x0
    15ac:	add	x1, x1, #0x0
    15b0:	add	x0, x0, #0x0
    15b4:	mov	w2, #0x95                  	// #149
    15b8:	bl	0 <__assert_fail>
    15bc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15c4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15c8:	add	x3, x3, #0x0
    15cc:	add	x1, x1, #0x0
    15d0:	add	x0, x0, #0x0
    15d4:	mov	w2, #0x43                  	// #67
    15d8:	bl	0 <__assert_fail>
    15dc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15e0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15e4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    15e8:	add	x3, x3, #0x0
    15ec:	add	x1, x1, #0x0
    15f0:	add	x0, x0, #0x0
    15f4:	mov	w2, #0x22e                 	// #558
    15f8:	bl	0 <__assert_fail>
    15fc:	nop

0000000000001600 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE>:
    1600:	stp	x29, x30, [sp, #-80]!
    1604:	mov	x29, sp
    1608:	stp	x21, x22, [sp, #32]
    160c:	stp	x23, x24, [sp, #48]
    1610:	ldp	x22, x23, [x0, #200]
    1614:	cmp	x22, x23
    1618:	b.eq	16ac <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0xac>  // b.none
    161c:	mov	x21, x0
    1620:	str	x25, [sp, #64]
    1624:	mov	x25, x1
    1628:	mov	w24, #0x30                  	// #48
    162c:	stp	x19, x20, [sp, #16]
    1630:	ldr	w20, [x22, #8]
    1634:	ldr	x19, [x22]
    1638:	umaddl	x20, w20, w24, x19
    163c:	cmp	x19, x20
    1640:	b.ne	1650 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x50>  // b.any
    1644:	b	1698 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x98>
    1648:	cmp	x20, x19
    164c:	b.eq	1698 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x98>  // b.none
    1650:	ldp	x3, x4, [x19]
    1654:	mov	x1, x25
    1658:	ldp	x6, x2, [x19, #32]
    165c:	mov	x0, x21
    1660:	ldr	x5, [x19, #16]
    1664:	mov	w7, #0x0                   	// #0
    1668:	add	x19, x19, #0x30
    166c:	sub	x5, x5, x4
    1670:	asr	x5, x5, #2
    1674:	bl	b70 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    1678:	ands	w0, w0, #0xff
    167c:	b.eq	1648 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x48>  // b.none
    1680:	ldp	x19, x20, [sp, #16]
    1684:	ldp	x21, x22, [sp, #32]
    1688:	ldp	x23, x24, [sp, #48]
    168c:	ldr	x25, [sp, #64]
    1690:	ldp	x29, x30, [sp], #80
    1694:	ret
    1698:	add	x22, x22, #0xd0
    169c:	cmp	x23, x22
    16a0:	b.ne	1630 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x30>  // b.any
    16a4:	ldp	x19, x20, [sp, #16]
    16a8:	ldr	x25, [sp, #64]
    16ac:	mov	w0, #0x0                   	// #0
    16b0:	ldp	x21, x22, [sp, #32]
    16b4:	ldp	x23, x24, [sp, #48]
    16b8:	ldp	x29, x30, [sp], #80
    16bc:	ret

00000000000016c0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>:
    16c0:	mov	x2, x1
    16c4:	ldr	x1, [x1]
    16c8:	cbz	x1, 16d0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x10>
    16cc:	b	1600 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE>
    16d0:	stp	x29, x30, [sp, #-48]!
    16d4:	mov	x29, sp
    16d8:	stp	x19, x20, [sp, #16]
    16dc:	mov	x20, x0
    16e0:	ldr	x0, [x2, #8]
    16e4:	ldr	x19, [x0, #24]
    16e8:	str	x21, [sp, #32]
    16ec:	ldr	x21, [x0, #32]
    16f0:	cmp	x19, x21
    16f4:	b.eq	1718 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x58>  // b.none
    16f8:	mov	x1, x19
    16fc:	mov	x0, x20
    1700:	add	x19, x19, #0x10
    1704:	bl	16c0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>
    1708:	ands	w0, w0, #0xff
    170c:	b.ne	171c <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x5c>  // b.any
    1710:	cmp	x21, x19
    1714:	b.ne	16f8 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x38>  // b.any
    1718:	mov	w0, #0x0                   	// #0
    171c:	ldp	x19, x20, [sp, #16]
    1720:	ldr	x21, [sp, #32]
    1724:	ldp	x29, x30, [sp], #48
    1728:	ret
    172c:	nop

0000000000001730 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>:
    1730:	stp	x29, x30, [sp, #-64]!
    1734:	mov	x29, sp
    1738:	stp	x19, x20, [sp, #16]
    173c:	mov	x20, x0
    1740:	str	x0, [sp, #56]
    1744:	ldr	x0, [x0, #48]
    1748:	cbz	x0, 1750 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0+0x20>
    174c:	bl	1730 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    1750:	ldr	x19, [x20, #16]
    1754:	cbz	x19, 17a8 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0+0x78>
    1758:	str	x21, [sp, #32]
    175c:	ldr	x1, [x19, #24]
    1760:	mov	x0, x20
    1764:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1768:	ldr	x2, [x19, #32]
    176c:	add	x1, x19, #0x30
    1770:	mov	x0, x19
    1774:	cmp	x2, x1
    1778:	ldr	x21, [x19, #16]
    177c:	b.eq	179c <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0+0x6c>  // b.none
    1780:	mov	x0, x2
    1784:	bl	0 <_ZdlPv>
    1788:	mov	x0, x19
    178c:	bl	0 <_ZdlPv>
    1790:	cbz	x21, 17a4 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0+0x74>
    1794:	mov	x19, x21
    1798:	b	175c <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0+0x2c>
    179c:	bl	0 <_ZdlPv>
    17a0:	cbnz	x21, 1794 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0+0x64>
    17a4:	ldr	x21, [sp, #32]
    17a8:	mov	x0, x20
    17ac:	ldp	x19, x20, [sp, #16]
    17b0:	mov	x1, #0x38                  	// #56
    17b4:	ldp	x29, x30, [sp], #64
    17b8:	b	0 <_ZdlPvm>
    17bc:	nop

00000000000017c0 <_ZN4llvm8TGParser17ParseMultiClassIDEv>:
    17c0:	stp	x29, x30, [sp, #-192]!
    17c4:	mov	x29, sp
    17c8:	stp	x19, x20, [sp, #16]
    17cc:	mov	x19, x0
    17d0:	ldr	w0, [x0, #40]
    17d4:	stp	x21, x22, [sp, #32]
    17d8:	cmp	w0, #0x48
    17dc:	b.ne	1a28 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x268>  // b.any
    17e0:	ldr	x20, [x19, #240]
    17e4:	stp	x23, x24, [sp, #48]
    17e8:	stp	x25, x26, [sp, #64]
    17ec:	add	x26, x19, #0xe8
    17f0:	cbz	x20, 1a88 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x2c8>
    17f4:	ldr	x22, [x19, #56]
    17f8:	str	x27, [sp, #80]
    17fc:	ldr	x27, [x19, #48]
    1800:	mov	x21, x26
    1804:	mov	x25, #0x7fffffff            	// #2147483647
    1808:	mov	x24, #0xffffffff80000000    	// #-2147483648
    180c:	nop
    1810:	ldr	x23, [x20, #40]
    1814:	cmp	x23, x22
    1818:	csel	x2, x23, x22, ls  // ls = plast
    181c:	cbz	x2, 1830 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x70>
    1820:	ldr	x0, [x20, #32]
    1824:	mov	x1, x27
    1828:	bl	0 <memcmp>
    182c:	cbnz	w0, 1844 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x84>
    1830:	sub	x0, x23, x22
    1834:	cmp	x0, x25
    1838:	b.gt	1848 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x88>
    183c:	cmp	x0, x24
    1840:	b.lt	1904 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x144>  // b.tstop
    1844:	tbnz	w0, #31, 1904 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x144>
    1848:	mov	x21, x20
    184c:	ldr	x20, [x20, #16]
    1850:	cbnz	x20, 1810 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x50>
    1854:	cmp	x26, x21
    1858:	b.eq	1a90 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x2d0>  // b.none
    185c:	ldr	x20, [x21, #40]
    1860:	cmp	x22, x20
    1864:	csel	x2, x22, x20, ls  // ls = plast
    1868:	cbz	x2, 187c <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xbc>
    186c:	ldr	x1, [x21, #32]
    1870:	mov	x0, x27
    1874:	bl	0 <memcmp>
    1878:	cbnz	w0, 1898 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xd8>
    187c:	sub	x0, x22, x20
    1880:	mov	x1, #0x7fffffff            	// #2147483647
    1884:	cmp	x0, x1
    1888:	b.gt	1a80 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x2c0>
    188c:	mov	x1, #0xffffffff80000000    	// #-2147483648
    1890:	cmp	x0, x1
    1894:	b.lt	1a90 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x2d0>  // b.tstop
    1898:	ldr	x27, [sp, #80]
    189c:	tbz	w0, #31, 18c8 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x108>
    18a0:	add	x5, x19, #0x30
    18a4:	mov	x1, x21
    18a8:	add	x4, sp, #0x80
    18ac:	add	x3, sp, #0xa0
    18b0:	add	x0, x19, #0xe0
    18b4:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    18b8:	add	x2, x2, #0x0
    18bc:	str	x5, [sp, #160]
    18c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    18c4:	mov	x21, x0
    18c8:	ldr	x21, [x21, #64]
    18cc:	cbz	x21, 1910 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x150>
    18d0:	ldp	x2, x1, [x19, #8]
    18d4:	mov	x0, x19
    18d8:	cmp	x2, x1
    18dc:	cset	w1, eq  // eq = none
    18e0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    18e4:	ldp	x23, x24, [sp, #48]
    18e8:	ldp	x25, x26, [sp, #64]
    18ec:	str	w0, [x19, #40]
    18f0:	mov	x0, x21
    18f4:	ldp	x19, x20, [sp, #16]
    18f8:	ldp	x21, x22, [sp, #32]
    18fc:	ldp	x29, x30, [sp], #192
    1900:	ret
    1904:	ldr	x20, [x20, #24]
    1908:	cbnz	x20, 1810 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x50>
    190c:	b	1854 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x94>
    1910:	ldr	w0, [x19, #40]
    1914:	sub	w0, w0, #0x48
    1918:	cmp	w0, #0x3
    191c:	b.hi	1aa8 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x2e8>  // b.pmore
    1920:	add	x20, sp, #0x80
    1924:	strb	wzr, [sp, #144]
    1928:	add	x2, x20, #0x10
    192c:	mov	x0, x20
    1930:	ldr	x1, [x19, #56]
    1934:	stp	x2, xzr, [sp, #128]
    1938:	mov	x22, #0x3fffffffffffffff    	// #4611686018427387903
    193c:	add	x1, x1, #0x1a
    1940:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    1944:	ldr	x0, [sp, #136]
    1948:	sub	x0, x22, x0
    194c:	cmp	x0, #0x19
    1950:	b.ls	1a98 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x2d8>  // b.plast
    1954:	mov	x2, #0x1a                  	// #26
    1958:	mov	x0, x20
    195c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1960:	add	x1, x1, #0x0
    1964:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1968:	ldp	x1, x2, [x19, #48]
    196c:	mov	x0, x20
    1970:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1974:	ldr	x0, [sp, #136]
    1978:	cmp	x0, x22
    197c:	b.eq	1a98 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x2d8>  // b.none
    1980:	mov	x0, x20
    1984:	add	x22, sp, #0xa0
    1988:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    198c:	mov	x2, #0x1                   	// #1
    1990:	add	x1, x1, #0x0
    1994:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1998:	add	x1, x22, #0x10
    199c:	str	x1, [sp, #160]
    19a0:	mov	x3, x0
    19a4:	ldr	x1, [x0], #16
    19a8:	cmp	x1, x0
    19ac:	b.eq	1a74 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x2b4>  // b.none
    19b0:	str	x1, [sp, #160]
    19b4:	ldr	x1, [x3, #16]
    19b8:	str	x1, [sp, #176]
    19bc:	ldr	x2, [x3, #8]
    19c0:	str	x2, [sp, #168]
    19c4:	mov	x1, x22
    19c8:	stp	x0, xzr, [x3]
    19cc:	add	x23, sp, #0x68
    19d0:	strb	wzr, [x3, #16]
    19d4:	mov	x0, x23
    19d8:	add	x22, x22, #0x10
    19dc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    19e0:	mov	x0, x19
    19e4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    19e8:	mov	x3, x0
    19ec:	mov	x2, x23
    19f0:	add	x0, sp, #0x60
    19f4:	mov	x1, #0x1                   	// #1
    19f8:	str	x3, [sp, #96]
    19fc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1a00:	ldr	x0, [sp, #160]
    1a04:	cmp	x0, x22
    1a08:	b.eq	1a10 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x250>  // b.none
    1a0c:	bl	0 <_ZdlPv>
    1a10:	ldr	x0, [sp, #128]
    1a14:	add	x20, x20, #0x10
    1a18:	cmp	x0, x20
    1a1c:	b.eq	18d0 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x110>  // b.none
    1a20:	bl	0 <_ZdlPv>
    1a24:	b	18d0 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x110>
    1a28:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1a2c:	add	x1, x1, #0x0
    1a30:	add	x20, sp, #0xa0
    1a34:	mov	x21, #0x0                   	// #0
    1a38:	mov	x0, x20
    1a3c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1a40:	mov	x0, x19
    1a44:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    1a48:	mov	x3, x0
    1a4c:	mov	x2, x20
    1a50:	add	x0, sp, #0x80
    1a54:	mov	x1, #0x1                   	// #1
    1a58:	str	x3, [sp, #128]
    1a5c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1a60:	mov	x0, x21
    1a64:	ldp	x19, x20, [sp, #16]
    1a68:	ldp	x21, x22, [sp, #32]
    1a6c:	ldp	x29, x30, [sp], #192
    1a70:	ret
    1a74:	ldp	x4, x5, [x3, #16]
    1a78:	stp	x4, x5, [sp, #176]
    1a7c:	b	19bc <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x1fc>
    1a80:	ldr	x27, [sp, #80]
    1a84:	b	18c8 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x108>
    1a88:	mov	x21, x26
    1a8c:	b	18a0 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xe0>
    1a90:	ldr	x27, [sp, #80]
    1a94:	b	18a0 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xe0>
    1a98:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1a9c:	add	x0, x0, #0x0
    1aa0:	str	x27, [sp, #80]
    1aa4:	bl	0 <_ZSt20__throw_length_errorPKc>
    1aa8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1aac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ab0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ab4:	add	x3, x3, #0x0
    1ab8:	add	x1, x1, #0x0
    1abc:	add	x0, x0, #0x0
    1ac0:	mov	w2, #0x6f                  	// #111
    1ac4:	str	x27, [sp, #80]
    1ac8:	bl	0 <__assert_fail>
    1acc:	nop

0000000000001ad0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
    1ad0:	sub	sp, sp, #0x230
    1ad4:	stp	x29, x30, [sp]
    1ad8:	mov	x29, sp
    1adc:	stp	x21, x22, [sp, #32]
    1ae0:	str	x0, [sp, #104]
    1ae4:	ldr	x21, [x0, #344]
    1ae8:	stp	x19, x20, [sp, #16]
    1aec:	mov	x19, x1
    1af0:	ldr	x0, [x1]
    1af4:	stp	x23, x24, [sp, #48]
    1af8:	add	x20, sp, #0x210
    1afc:	stp	x25, x26, [sp, #64]
    1b00:	mov	x8, x20
    1b04:	add	x25, x21, #0x38
    1b08:	ldr	x0, [x0]
    1b0c:	stp	x27, x28, [sp, #80]
    1b10:	ldr	x1, [x0]
    1b14:	ldr	x1, [x1, #48]
    1b18:	blr	x1
    1b1c:	ldr	x21, [x21, #64]
    1b20:	ldr	x27, [sp, #528]
    1b24:	ldr	x24, [sp, #536]
    1b28:	cbz	x21, 1ba0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd0>
    1b2c:	cbz	x24, 1bbc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xec>
    1b30:	mov	x26, x25
    1b34:	nop
    1b38:	ldp	x0, x23, [x21, #32]
    1b3c:	cmp	x24, x23
    1b40:	b.cc	1d08 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x238>  // b.lo, b.ul, b.last
    1b44:	cbz	x23, 1d18 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x248>
    1b48:	mov	x2, x23
    1b4c:	mov	x1, x27
    1b50:	bl	0 <memcmp>
    1b54:	cbnz	w0, 1d2c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x25c>
    1b58:	cmp	x24, x23
    1b5c:	b.ne	1d18 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x248>  // b.any
    1b60:	mov	x26, x21
    1b64:	ldr	x21, [x21, #16]
    1b68:	cbnz	x21, 1b38 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x68>
    1b6c:	cmp	x25, x26
    1b70:	b.eq	1ba0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd0>  // b.none
    1b74:	ldp	x1, x21, [x26, #32]
    1b78:	cmp	x24, x21
    1b7c:	b.hi	1d38 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x268>  // b.pmore
    1b80:	mov	x2, x24
    1b84:	mov	x0, x27
    1b88:	bl	0 <memcmp>
    1b8c:	cbnz	w0, 1d4c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x27c>
    1b90:	cmp	x24, x21
    1b94:	b.eq	1be0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x110>  // b.none
    1b98:	cmp	x24, x21
    1b9c:	b.cs	1be0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x110>  // b.hs, b.nlast
    1ba0:	add	x0, x20, #0x10
    1ba4:	cmp	x27, x0
    1ba8:	b.eq	1d6c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x29c>  // b.none
    1bac:	mov	x0, x27
    1bb0:	bl	0 <_ZdlPv>
    1bb4:	ldr	x21, [x19]
    1bb8:	b	1d70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2a0>
    1bbc:	mov	x26, x21
    1bc0:	ldr	x21, [x21, #16]
    1bc4:	cbnz	x21, 1bbc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xec>
    1bc8:	cmp	x26, x25
    1bcc:	b.eq	1ba0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd0>  // b.none
    1bd0:	ldr	x21, [x26, #40]
    1bd4:	cmp	x24, x21
    1bd8:	b.ne	1b98 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xc8>  // b.any
    1bdc:	nop
    1be0:	add	x0, x20, #0x10
    1be4:	cmp	x27, x0
    1be8:	ldr	x23, [x26, #64]
    1bec:	b.eq	1bf8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x128>  // b.none
    1bf0:	mov	x0, x27
    1bf4:	bl	0 <_ZdlPv>
    1bf8:	ldr	x21, [x19]
    1bfc:	cbz	x23, 1d70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2a0>
    1c00:	ldrb	w0, [x21, #124]
    1c04:	cbnz	w0, 1d54 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x284>
    1c08:	ldp	x0, x25, [x21]
    1c0c:	add	x19, sp, #0x1f0
    1c10:	mov	x8, x19
    1c14:	ldr	w24, [x21, #16]
    1c18:	add	x22, x20, #0x10
    1c1c:	ldr	x1, [x0]
    1c20:	ldr	x1, [x1, #48]
    1c24:	blr	x1
    1c28:	str	x22, [sp, #528]
    1c2c:	ldr	x1, [sp, #504]
    1c30:	mov	x0, x20
    1c34:	str	xzr, [sp, #536]
    1c38:	add	x1, x1, #0x14
    1c3c:	strb	wzr, [sp, #544]
    1c40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    1c44:	ldr	x1, [sp, #536]
    1c48:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    1c4c:	sub	x0, x0, x1
    1c50:	cmp	x0, #0x13
    1c54:	b.ls	242c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x95c>  // b.plast
    1c58:	mov	x2, #0x14                  	// #20
    1c5c:	mov	x0, x20
    1c60:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1c64:	add	x1, x1, #0x0
    1c68:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1c6c:	add	x21, sp, #0x1d0
    1c70:	ldp	x1, x2, [sp, #496]
    1c74:	mov	x0, x20
    1c78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1c7c:	mov	x0, x21
    1c80:	mov	x1, x20
    1c84:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1c88:	mov	x0, x25
    1c8c:	mov	x2, x21
    1c90:	mov	x1, x24
    1c94:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1c98:	ldr	x0, [sp, #528]
    1c9c:	cmp	x0, x22
    1ca0:	b.eq	1ca8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1d8>  // b.none
    1ca4:	bl	0 <_ZdlPv>
    1ca8:	ldr	x0, [sp, #496]
    1cac:	add	x19, x19, #0x10
    1cb0:	cmp	x0, x19
    1cb4:	b.eq	1cbc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1ec>  // b.none
    1cb8:	bl	0 <_ZdlPv>
    1cbc:	ldr	x21, [x23, #8]
    1cc0:	mov	x0, x20
    1cc4:	ldr	w19, [x23, #16]
    1cc8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ccc:	add	x1, x1, #0x0
    1cd0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1cd4:	mov	x0, x21
    1cd8:	mov	x2, x20
    1cdc:	mov	x1, x19
    1ce0:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1ce4:	mov	w0, #0x1                   	// #1
    1ce8:	ldp	x29, x30, [sp]
    1cec:	ldp	x19, x20, [sp, #16]
    1cf0:	ldp	x21, x22, [sp, #32]
    1cf4:	ldp	x23, x24, [sp, #48]
    1cf8:	ldp	x25, x26, [sp, #64]
    1cfc:	ldp	x27, x28, [sp, #80]
    1d00:	add	sp, sp, #0x230
    1d04:	ret
    1d08:	mov	x2, x24
    1d0c:	mov	x1, x27
    1d10:	bl	0 <memcmp>
    1d14:	cbnz	w0, 1d2c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x25c>
    1d18:	cmp	x24, x23
    1d1c:	b.ls	1b60 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x90>  // b.plast
    1d20:	ldr	x21, [x21, #24]
    1d24:	cbnz	x21, 1b38 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x68>
    1d28:	b	1b6c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x9c>
    1d2c:	tbz	w0, #31, 1b60 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x90>
    1d30:	ldr	x21, [x21, #24]
    1d34:	b	1d24 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x254>
    1d38:	cbz	x21, 1be0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x110>
    1d3c:	mov	x2, x21
    1d40:	mov	x0, x27
    1d44:	bl	0 <memcmp>
    1d48:	cbz	w0, 1b98 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xc8>
    1d4c:	tbz	w0, #31, 1be0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x110>
    1d50:	b	1ba0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd0>
    1d54:	ldr	x0, [sp, #104]
    1d58:	ldr	x0, [x0, #344]
    1d5c:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    1d60:	mov	x1, x0
    1d64:	mov	x0, x21
    1d68:	bl	0 <_ZN4llvm6Record7setNameEPNS_4InitE>
    1d6c:	ldr	x21, [x19]
    1d70:	mov	x0, x21
    1d74:	bl	0 <_ZN4llvm6Record17resolveReferencesEv>
    1d78:	ldr	x28, [x19]
    1d7c:	mov	w0, #0x18                  	// #24
    1d80:	ldr	w21, [x28, #80]
    1d84:	ldr	x3, [x28, #72]
    1d88:	umaddl	x21, w21, w0, x3
    1d8c:	cmp	x3, x21
    1d90:	b.eq	1f94 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4c4>  // b.none
    1d94:	add	x0, sp, #0x1f0
    1d98:	add	x1, sp, #0x1d0
    1d9c:	stp	x0, x1, [sp, #160]
    1da0:	add	x0, sp, #0x200
    1da4:	mov	x25, x3
    1da8:	str	x0, [sp, #184]
    1dac:	add	x0, sp, #0x1e0
    1db0:	str	x0, [sp, #176]
    1db4:	add	x0, sp, #0x128
    1db8:	str	x0, [sp, #152]
    1dbc:	b	1dcc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2fc>
    1dc0:	add	x25, x25, #0x18
    1dc4:	cmp	x21, x25
    1dc8:	b.eq	1f90 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4c0>  // b.none
    1dcc:	ldr	x0, [x25, #8]
    1dd0:	tst	w0, #0x4
    1dd4:	b.ne	1dc0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2f0>  // b.any
    1dd8:	ldr	x27, [x25, #16]
    1ddc:	cbz	x27, 1dc0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2f0>
    1de0:	ldrb	w0, [x27, #8]
    1de4:	cmp	w0, #0x3
    1de8:	b.eq	2054 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x584>  // b.none
    1dec:	ldr	x1, [x27]
    1df0:	mov	x0, x27
    1df4:	ldr	x1, [x1, #32]
    1df8:	blr	x1
    1dfc:	tst	w0, #0xff
    1e00:	b.ne	1dc0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2f0>  // b.any
    1e04:	ldr	x0, [x25]
    1e08:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e0c:	add	x1, x1, #0x0
    1e10:	str	x1, [sp, #320]
    1e14:	ldr	w6, [x28, #16]
    1e18:	mov	w9, #0x103                 	// #259
    1e1c:	ldr	x1, [x0]
    1e20:	str	w9, [sp, #124]
    1e24:	ldr	x7, [x28, #8]
    1e28:	stp	x7, x6, [sp, #136]
    1e2c:	mov	x8, x20
    1e30:	ldr	x1, [x1, #48]
    1e34:	str	xzr, [sp, #328]
    1e38:	strh	w9, [sp, #336]
    1e3c:	add	x27, sp, #0x158
    1e40:	mov	w23, #0x104                 	// #260
    1e44:	add	x24, sp, #0x170
    1e48:	blr	x1
    1e4c:	stp	x20, xzr, [sp, #296]
    1e50:	mov	x8, x27
    1e54:	ldr	x1, [sp, #152]
    1e58:	add	x0, sp, #0x140
    1e5c:	strh	w23, [sp, #312]
    1e60:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e64:	ldr	w9, [sp, #124]
    1e68:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1e6c:	add	x2, x2, #0x0
    1e70:	mov	x4, x24
    1e74:	stp	x2, xzr, [sp, #272]
    1e78:	add	x2, sp, #0x188
    1e7c:	mov	x0, x27
    1e80:	mov	x8, x24
    1e84:	add	x1, sp, #0x110
    1e88:	str	x2, [sp, #112]
    1e8c:	add	x27, sp, #0x1a0
    1e90:	str	w9, [sp, #124]
    1e94:	add	x24, sp, #0x1b8
    1e98:	str	x4, [sp, #128]
    1e9c:	strh	w9, [sp, #288]
    1ea0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ea4:	ldr	x0, [x28]
    1ea8:	ldr	x22, [sp, #160]
    1eac:	ldr	x1, [x0]
    1eb0:	mov	x8, x22
    1eb4:	ldr	x1, [x1, #48]
    1eb8:	blr	x1
    1ebc:	stp	x22, xzr, [sp, #248]
    1ec0:	add	x1, sp, #0xf8
    1ec4:	ldr	x2, [sp, #112]
    1ec8:	strh	w23, [sp, #264]
    1ecc:	ldr	x4, [sp, #128]
    1ed0:	mov	x8, x2
    1ed4:	mov	x0, x4
    1ed8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1edc:	ldr	w9, [sp, #124]
    1ee0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1ee4:	ldr	x8, [sp, #112]
    1ee8:	add	x1, x1, #0x0
    1eec:	stp	x1, xzr, [sp, #224]
    1ef0:	add	x1, sp, #0xe0
    1ef4:	mov	x0, x8
    1ef8:	mov	x8, x27
    1efc:	strh	w9, [sp, #240]
    1f00:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1f04:	ldr	x0, [x25, #16]
    1f08:	ldr	x22, [sp, #168]
    1f0c:	ldr	x1, [x0]
    1f10:	mov	x8, x22
    1f14:	ldr	x1, [x1, #40]
    1f18:	blr	x1
    1f1c:	stp	x22, xzr, [sp, #200]
    1f20:	mov	x8, x24
    1f24:	mov	x0, x27
    1f28:	add	x1, sp, #0xc8
    1f2c:	strh	w23, [sp, #216]
    1f30:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    1f34:	ldp	x7, x6, [sp, #136]
    1f38:	mov	x2, x24
    1f3c:	mov	x0, x7
    1f40:	mov	x1, x6
    1f44:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1f48:	ldr	x1, [sp, #176]
    1f4c:	ldr	x0, [sp, #464]
    1f50:	cmp	x0, x1
    1f54:	b.eq	1f5c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x48c>  // b.none
    1f58:	bl	0 <_ZdlPv>
    1f5c:	ldr	x1, [sp, #184]
    1f60:	ldr	x0, [sp, #496]
    1f64:	cmp	x0, x1
    1f68:	b.eq	1f70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4a0>  // b.none
    1f6c:	bl	0 <_ZdlPv>
    1f70:	ldr	x0, [sp, #528]
    1f74:	add	x1, x20, #0x10
    1f78:	cmp	x0, x1
    1f7c:	b.eq	1dc0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2f0>  // b.none
    1f80:	add	x25, x25, #0x18
    1f84:	bl	0 <_ZdlPv>
    1f88:	cmp	x21, x25
    1f8c:	b.ne	1dcc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2fc>  // b.any
    1f90:	ldr	x28, [x19]
    1f94:	ldr	x2, [x28]
    1f98:	cbz	x2, 23e8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x918>
    1f9c:	ldrb	w0, [x2, #8]
    1fa0:	cmp	w0, #0x12
    1fa4:	b.ne	210c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x63c>  // b.any
    1fa8:	ldr	w0, [x28, #64]
    1fac:	cbnz	w0, 23ec <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x91c>
    1fb0:	ldr	x0, [sp, #104]
    1fb4:	ldr	x25, [x0, #296]
    1fb8:	ldr	w24, [x0, #304]
    1fbc:	add	x24, x25, x24, lsl #3
    1fc0:	cmp	x25, x24
    1fc4:	b.ne	2000 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x530>  // b.any
    1fc8:	b	236c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x89c>
    1fcc:	ldr	x1, [x21, #16]
    1fd0:	str	x23, [x1, w0, uxtw #3]
    1fd4:	ldp	w0, w2, [x21, #24]
    1fd8:	mov	w1, w0
    1fdc:	add	x1, x1, #0x1
    1fe0:	cmp	x1, x2
    1fe4:	b.hi	23c8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>  // b.pmore
    1fe8:	add	w0, w0, #0x1
    1fec:	add	x25, x25, #0x8
    1ff0:	ldr	x28, [x19]
    1ff4:	str	w0, [x21, #24]
    1ff8:	cmp	x24, x25
    1ffc:	b.eq	22a0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7d0>  // b.none
    2000:	mov	x0, x28
    2004:	ldr	x21, [x25]
    2008:	bl	0 <_ZN4llvm6Record10getDefInitEv>
    200c:	mov	x23, x0
    2010:	ldr	x0, [x0, #16]
    2014:	ldr	x1, [x21, #8]
    2018:	ldr	x2, [x0]
    201c:	ldr	x2, [x2, #32]
    2020:	blr	x2
    2024:	tst	w0, #0xff
    2028:	b.eq	21d4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x704>  // b.none
    202c:	ldp	w0, w1, [x21, #24]
    2030:	cmp	w0, w1
    2034:	b.cc	1fcc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4fc>  // b.lo, b.ul, b.last
    2038:	add	x0, x21, #0x10
    203c:	add	x1, x21, #0x20
    2040:	mov	x3, #0x8                   	// #8
    2044:	mov	x2, #0x0                   	// #0
    2048:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    204c:	ldr	w0, [x21, #24]
    2050:	b	1fcc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4fc>
    2054:	ldr	w23, [x27, #32]
    2058:	cbz	w23, 1dc0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2f0>
    205c:	mov	w0, w23
    2060:	add	x24, x27, #0x28
    2064:	mov	x26, #0x0                   	// #0
    2068:	b	209c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5cc>
    206c:	cmp	w0, #0x13
    2070:	b.eq	208c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5bc>  // b.none
    2074:	ldr	x1, [x22]
    2078:	mov	x0, x22
    207c:	ldr	x1, [x1, #32]
    2080:	blr	x1
    2084:	tst	w0, #0xff
    2088:	b.eq	1e04 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x334>  // b.none
    208c:	add	x26, x26, #0x1
    2090:	cmp	w23, w26
    2094:	b.eq	1dc0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2f0>  // b.none
    2098:	ldr	w0, [x27, #32]
    209c:	cmp	w0, w26
    20a0:	b.ls	2378 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8a8>  // b.plast
    20a4:	ldr	x22, [x24, x26, lsl #3]
    20a8:	cbz	x22, 2398 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8c8>
    20ac:	ldrb	w0, [x22, #8]
    20b0:	cmp	w0, #0x15
    20b4:	b.ne	206c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x59c>  // b.any
    20b8:	ldr	x0, [x22, #24]
    20bc:	cbz	x0, 23b8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8e8>
    20c0:	ldrb	w1, [x0, #8]
    20c4:	cmp	w1, #0x13
    20c8:	b.ne	2074 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5a4>  // b.any
    20cc:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    20d0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    20d4:	ldr	w7, [x28, #80]
    20d8:	mov	w2, #0x18                  	// #24
    20dc:	ldr	x1, [x28, #72]
    20e0:	umaddl	x7, w7, w2, x1
    20e4:	cmp	x1, x7
    20e8:	b.ne	20fc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x62c>  // b.any
    20ec:	b	2074 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5a4>
    20f0:	add	x1, x1, #0x18
    20f4:	cmp	x7, x1
    20f8:	b.eq	2074 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5a4>  // b.none
    20fc:	ldr	x8, [x1]
    2100:	cmp	x0, x8
    2104:	b.ne	20f0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x620>  // b.any
    2108:	b	208c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5bc>
    210c:	add	x23, sp, #0x188
    2110:	ldr	w25, [x28, #16]
    2114:	mov	x0, x23
    2118:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    211c:	add	x1, x1, #0x0
    2120:	add	x24, sp, #0x1a0
    2124:	ldr	x26, [x28, #8]
    2128:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    212c:	ldr	x0, [x19]
    2130:	mov	x8, x20
    2134:	add	x21, sp, #0x1b8
    2138:	add	x22, sp, #0x1d0
    213c:	add	x19, sp, #0x1f0
    2140:	ldr	x0, [x0]
    2144:	ldr	x1, [x0]
    2148:	ldr	x1, [x1, #40]
    214c:	blr	x1
    2150:	mov	x1, x20
    2154:	mov	x0, x24
    2158:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    215c:	add	x20, x20, #0x10
    2160:	mov	x8, x21
    2164:	mov	x1, x24
    2168:	mov	x0, x23
    216c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2170:	mov	x0, x22
    2174:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2178:	add	x1, x1, #0x0
    217c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2180:	mov	x8, x19
    2184:	mov	x1, x22
    2188:	mov	x0, x21
    218c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2190:	mov	x0, x26
    2194:	mov	x2, x19
    2198:	mov	x1, x25
    219c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    21a0:	ldr	x0, [sp, #528]
    21a4:	cmp	x0, x20
    21a8:	b.eq	21b0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x6e0>  // b.none
    21ac:	bl	0 <_ZdlPv>
    21b0:	mov	w0, #0x1                   	// #1
    21b4:	ldp	x29, x30, [sp]
    21b8:	ldp	x19, x20, [sp, #16]
    21bc:	ldp	x21, x22, [sp, #32]
    21c0:	ldp	x23, x24, [sp, #48]
    21c4:	ldp	x25, x26, [sp, #64]
    21c8:	ldp	x27, x28, [sp, #80]
    21cc:	add	sp, sp, #0x230
    21d0:	ret
    21d4:	ldr	x2, [x19]
    21d8:	add	x25, sp, #0x188
    21dc:	mov	x0, x25
    21e0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    21e4:	add	x1, x1, #0x0
    21e8:	add	x24, sp, #0x1a0
    21ec:	ldr	w26, [x2, #16]
    21f0:	add	x22, sp, #0x1b8
    21f4:	ldr	x27, [x2, #8]
    21f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    21fc:	ldr	x0, [x23, #16]
    2200:	mov	x8, x20
    2204:	add	x23, sp, #0x1d0
    2208:	add	x19, sp, #0x1f0
    220c:	ldr	x1, [x0]
    2210:	ldr	x1, [x1, #16]
    2214:	blr	x1
    2218:	mov	x0, x24
    221c:	mov	x1, x20
    2220:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2224:	mov	x8, x22
    2228:	mov	x1, x24
    222c:	mov	x0, x25
    2230:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2234:	mov	x0, x23
    2238:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    223c:	add	x1, x1, #0x0
    2240:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2244:	mov	x8, x19
    2248:	mov	x1, x23
    224c:	mov	x0, x22
    2250:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2254:	mov	x0, x27
    2258:	mov	x1, x26
    225c:	mov	x2, x19
    2260:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2264:	ldr	x0, [sp, #528]
    2268:	add	x1, x20, #0x10
    226c:	cmp	x0, x1
    2270:	b.eq	2278 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7a8>  // b.none
    2274:	bl	0 <_ZdlPv>
    2278:	mov	x0, x20
    227c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2280:	add	x1, x1, #0x0
    2284:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2288:	mov	x0, x21
    228c:	mov	x2, x20
    2290:	mov	x1, #0x1                   	// #1
    2294:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2298:	mov	w0, #0x1                   	// #1
    229c:	b	21b4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x6e4>
    22a0:	ldr	x0, [sp, #104]
    22a4:	ldr	x2, [x28]
    22a8:	ldr	x0, [x0, #344]
    22ac:	str	xzr, [x19]
    22b0:	cbz	x2, 23e8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x918>
    22b4:	ldrb	w1, [x2, #8]
    22b8:	cmp	w1, #0x12
    22bc:	b.ne	240c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x93c>  // b.any
    22c0:	ldp	x3, x2, [x2, #24]
    22c4:	mov	x1, x20
    22c8:	add	x0, x0, #0x30
    22cc:	str	x3, [sp, #528]
    22d0:	str	x2, [sp, #536]
    22d4:	str	x28, [sp, #544]
    22d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    22dc:	and	w20, w1, #0xff
    22e0:	ldr	x19, [sp, #544]
    22e4:	cbz	x19, 2344 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x874>
    22e8:	ldr	x0, [x19, #88]
    22ec:	add	x1, x19, #0x68
    22f0:	add	x22, x19, #0x58
    22f4:	cmp	x0, x1
    22f8:	b.eq	2300 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x830>  // b.none
    22fc:	bl	0 <free>
    2300:	ldr	x0, [x19, #72]
    2304:	add	x21, x19, #0x48
    2308:	cmp	x22, x0
    230c:	b.eq	2314 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x844>  // b.none
    2310:	bl	0 <free>
    2314:	ldr	x0, [x19, #56]
    2318:	cmp	x21, x0
    231c:	b.eq	2324 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x854>  // b.none
    2320:	bl	0 <free>
    2324:	ldr	x0, [x19, #8]
    2328:	add	x1, x19, #0x18
    232c:	cmp	x0, x1
    2330:	b.eq	2338 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x868>  // b.none
    2334:	bl	0 <free>
    2338:	mov	x0, x19
    233c:	mov	x1, #0x80                  	// #128
    2340:	bl	0 <_ZdlPvm>
    2344:	mov	w0, #0x0                   	// #0
    2348:	cbnz	w20, 1ce8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x218>
    234c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2350:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2354:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2358:	add	x3, x3, #0x0
    235c:	add	x1, x1, #0x0
    2360:	add	x0, x0, #0x0
    2364:	mov	w2, #0x6c7                 	// #1735
    2368:	bl	0 <__assert_fail>
    236c:	ldr	x0, [x0, #344]
    2370:	str	xzr, [x19]
    2374:	b	22b4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7e4>
    2378:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    237c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2380:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2384:	add	x3, x3, #0x0
    2388:	add	x1, x1, #0x0
    238c:	add	x0, x0, #0x0
    2390:	mov	w2, #0x22e                 	// #558
    2394:	bl	0 <__assert_fail>
    2398:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    239c:	add	x3, x3, #0x0
    23a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23a4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23a8:	add	x1, x1, #0x0
    23ac:	add	x0, x0, #0x0
    23b0:	mov	w2, #0x69                  	// #105
    23b4:	bl	0 <__assert_fail>
    23b8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23bc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23c0:	add	x3, x3, #0x0
    23c4:	b	23a4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8d4>
    23c8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23d0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23d4:	add	x3, x3, #0x0
    23d8:	add	x1, x1, #0x0
    23dc:	add	x0, x0, #0x0
    23e0:	mov	w2, #0x43                  	// #67
    23e4:	bl	0 <__assert_fail>
    23e8:	bl	f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    23ec:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23f0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23f4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    23f8:	add	x3, x3, #0x0
    23fc:	add	x1, x1, #0x0
    2400:	add	x0, x0, #0x0
    2404:	mov	w2, #0x1cd                 	// #461
    2408:	bl	0 <__assert_fail>
    240c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2410:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2414:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2418:	add	x3, x3, #0x0
    241c:	add	x1, x1, #0x0
    2420:	add	x0, x0, #0x0
    2424:	mov	w2, #0x108                 	// #264
    2428:	bl	0 <__assert_fail>
    242c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2430:	add	x0, x0, #0x0
    2434:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000002438 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>:
    2438:	stp	x29, x30, [sp, #-240]!
    243c:	mov	x29, sp
    2440:	stp	x19, x20, [sp, #16]
    2444:	stp	x23, x24, [sp, #48]
    2448:	mov	x23, x0
    244c:	add	x0, sp, #0xb8
    2450:	ldp	x19, x24, [x1]
    2454:	stp	x27, x28, [sp, #80]
    2458:	stp	x5, x0, [sp, #96]
    245c:	cmp	x19, x24
    2460:	b.eq	24bc <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x84>  // b.none
    2464:	stp	x21, x22, [sp, #32]
    2468:	mov	x22, x2
    246c:	mov	x21, x4
    2470:	stp	x25, x26, [sp, #64]
    2474:	and	w25, w3, #0xff
    2478:	mov	w20, #0x18                  	// #24
    247c:	nop
    2480:	ldr	x1, [x19, #8]
    2484:	cbz	x1, 24d8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa0>
    2488:	mov	x4, x21
    248c:	mov	w3, w25
    2490:	mov	x2, x22
    2494:	mov	x0, x23
    2498:	mov	x5, #0x0                   	// #0
    249c:	bl	2e80 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>
    24a0:	and	w27, w0, #0xff
    24a4:	cbnz	w27, 28d0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x498>
    24a8:	add	x19, x19, #0x10
    24ac:	cmp	x24, x19
    24b0:	b.ne	2480 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x48>  // b.any
    24b4:	ldp	x21, x22, [sp, #32]
    24b8:	ldp	x25, x26, [sp, #64]
    24bc:	mov	w27, #0x0                   	// #0
    24c0:	mov	w0, w27
    24c4:	ldp	x19, x20, [sp, #16]
    24c8:	ldp	x23, x24, [sp, #48]
    24cc:	ldp	x27, x28, [sp, #80]
    24d0:	ldp	x29, x30, [sp], #240
    24d4:	ret
    24d8:	ldr	x27, [x19]
    24dc:	mov	x0, #0x80                  	// #128
    24e0:	bl	0 <_Znwm>
    24e4:	mov	x28, x0
    24e8:	mov	x26, x0
    24ec:	add	x0, x0, #0x18
    24f0:	mov	x2, x0
    24f4:	mov	x1, #0x400000000           	// #17179869184
    24f8:	ldr	x0, [x27]
    24fc:	str	x0, [x28], #8
    2500:	stp	x2, x1, [x26, #8]
    2504:	ldr	w0, [x27, #16]
    2508:	str	x2, [sp, #112]
    250c:	cbnz	w0, 2ac8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x690>
    2510:	str	xzr, [x26, #64]
    2514:	add	x3, x26, #0x48
    2518:	ldr	w0, [x27, #64]
    251c:	str	x3, [x26, #56]
    2520:	cbnz	w0, 2a68 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x630>
    2524:	str	xzr, [x26, #80]
    2528:	add	x2, x26, #0x58
    252c:	ldr	w0, [x27, #80]
    2530:	str	x2, [x26, #72]
    2534:	cbnz	w0, 2a90 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x658>
    2538:	str	xzr, [x26, #96]
    253c:	add	x0, x26, #0x68
    2540:	str	x0, [x26, #88]
    2544:	ldr	w0, [x27, #96]
    2548:	cbnz	w0, 2ab8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x680>
    254c:	adrp	x0, 0 <_ZN4llvm6Record6LastIDE>
    2550:	ldrh	w1, [x27, #124]
    2554:	ldr	x2, [x27, #104]
    2558:	stp	x2, xzr, [x26, #104]
    255c:	ldr	x0, [x0]
    2560:	strh	w1, [x26, #124]
    2564:	ldr	x2, [sp, #96]
    2568:	ldr	w1, [x0]
    256c:	str	w1, [x26, #120]
    2570:	add	w1, w1, #0x1
    2574:	str	w1, [x0]
    2578:	cbz	x2, 25b0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x178>
    257c:	ldp	w0, w1, [x26, #16]
    2580:	ldr	x27, [x2]
    2584:	cmp	w0, w1
    2588:	b.cs	2cd4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x89c>  // b.hs, b.nlast
    258c:	ldr	x1, [x26, #8]
    2590:	str	x27, [x1, w0, uxtw #3]
    2594:	ldp	w0, w2, [x26, #16]
    2598:	mov	w1, w0
    259c:	add	x1, x1, #0x1
    25a0:	cmp	x1, x2
    25a4:	b.hi	2e30 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9f8>  // b.pmore
    25a8:	add	w0, w0, #0x1
    25ac:	str	w0, [x26, #16]
    25b0:	adrp	x0, 0 <_ZTVN4llvm11MapResolverE>
    25b4:	ldr	w9, [x22, #8]
    25b8:	ldr	x27, [x22]
    25bc:	strb	wzr, [sp, #200]
    25c0:	ldr	x0, [x0]
    25c4:	stp	xzr, xzr, [sp, #208]
    25c8:	add	x9, x27, x9, lsl #4
    25cc:	add	x0, x0, #0x10
    25d0:	stp	x0, x26, [sp, #184]
    25d4:	cmp	x27, x9
    25d8:	str	xzr, [sp, #224]
    25dc:	mov	x5, #0x0                   	// #0
    25e0:	str	wzr, [sp, #232]
    25e4:	mov	w3, #0x0                   	// #0
    25e8:	b.ne	2634 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1fc>  // b.any
    25ec:	b	274c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x314>
    25f0:	cmn	x28, #0x10
    25f4:	ccmn	x28, #0x8, #0x4, ne  // ne = any
    25f8:	b.eq	2e10 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9d8>  // b.none
    25fc:	lsr	w2, w28, #9
    2600:	sub	w6, w3, #0x1
    2604:	eor	w2, w2, w28, lsr #4
    2608:	and	w10, w2, w6
    260c:	umull	x0, w10, w20
    2610:	add	x1, x5, x0
    2614:	ldr	x7, [x5, x0]
    2618:	cmp	x28, x7
    261c:	b.ne	2858 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x420>  // b.any
    2620:	str	x8, [x1, #8]
    2624:	add	x27, x27, #0x10
    2628:	strb	wzr, [x1, #16]
    262c:	cmp	x9, x27
    2630:	b.eq	274c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x314>  // b.none
    2634:	ldp	x28, x8, [x27]
    2638:	cbnz	w3, 25f0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1b8>
    263c:	ldr	x1, [sp, #208]
    2640:	mov	w0, #0x0                   	// #0
    2644:	add	x1, x1, #0x1
    2648:	str	x1, [sp, #208]
    264c:	sub	w0, w0, #0x1
    2650:	mov	w1, #0x40                  	// #64
    2654:	stp	x8, x9, [sp, #112]
    2658:	orr	x0, x0, x0, lsr #1
    265c:	str	w3, [sp, #128]
    2660:	orr	x0, x0, x0, lsr #2
    2664:	str	x5, [sp, #136]
    2668:	orr	x0, x0, x0, lsr #4
    266c:	orr	x0, x0, x0, lsr #8
    2670:	orr	x0, x0, x0, lsr #16
    2674:	add	x0, x0, #0x1
    2678:	cmp	w0, w1
    267c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    2680:	str	w0, [sp, #232]
    2684:	umull	x0, w0, w20
    2688:	bl	0 <_Znwm>
    268c:	str	x0, [sp, #216]
    2690:	ldr	x5, [sp, #136]
    2694:	ldr	w3, [sp, #128]
    2698:	ldp	x8, x9, [sp, #112]
    269c:	cbz	x5, 2c5c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x824>
    26a0:	ldr	w12, [sp, #232]
    26a4:	umull	x1, w3, w20
    26a8:	str	xzr, [sp, #224]
    26ac:	sub	w13, w12, #0x1
    26b0:	add	x10, x5, x1
    26b4:	tst	w12, w13
    26b8:	b.ne	2e50 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa18>  // b.any
    26bc:	umaddl	x3, w12, w20, x0
    26c0:	mov	x2, x0
    26c4:	mov	x6, #0xfffffffffffffff8    	// #-8
    26c8:	cmp	x0, x3
    26cc:	b.eq	26dc <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2a4>  // b.none
    26d0:	str	x6, [x2], #24
    26d4:	cmp	x3, x2
    26d8:	b.ne	26d0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x298>  // b.any
    26dc:	cmp	x10, x5
    26e0:	mov	x2, x5
    26e4:	b.ne	26f8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2c0>  // b.any
    26e8:	b	2ad8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6a0>
    26ec:	add	x2, x2, #0x18
    26f0:	cmp	x10, x2
    26f4:	b.eq	2ad8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6a0>  // b.none
    26f8:	ldr	x6, [x2]
    26fc:	cmn	x6, #0x8
    2700:	ccmn	x6, #0x10, #0x4, ne  // ne = any
    2704:	b.eq	26ec <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2b4>  // b.none
    2708:	cbz	w12, 2e70 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa38>
    270c:	lsr	w7, w6, #9
    2710:	eor	w7, w7, w6, lsr #4
    2714:	and	w7, w7, w13
    2718:	umull	x11, w7, w20
    271c:	add	x14, x0, x11
    2720:	ldr	x3, [x0, x11]
    2724:	cmp	x6, x3
    2728:	b.ne	2c18 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7e0>  // b.any
    272c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2730:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2734:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2738:	add	x3, x3, #0x0
    273c:	add	x1, x1, #0x0
    2740:	add	x0, x0, #0x0
    2744:	mov	w2, #0x17a                 	// #378
    2748:	bl	0 <__assert_fail>
    274c:	ldr	x1, [sp, #104]
    2750:	mov	x0, x26
    2754:	mov	x2, #0x0                   	// #0
    2758:	bl	0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    275c:	cbz	x21, 2b4c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x714>
    2760:	ldp	x1, x0, [x21, #8]
    2764:	stp	x26, xzr, [sp, #168]
    2768:	cmp	x1, x0
    276c:	b.eq	2c4c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x814>  // b.none
    2770:	str	xzr, [sp, #168]
    2774:	add	x0, x1, #0x10
    2778:	ldr	x2, [sp, #176]
    277c:	str	x26, [x1]
    2780:	str	xzr, [sp, #176]
    2784:	str	x2, [x1, #8]
    2788:	str	x0, [x21, #8]
    278c:	ldr	x28, [sp, #176]
    2790:	cbz	x28, 27d0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x398>
    2794:	ldp	x26, x27, [x28, #24]
    2798:	cmp	x26, x27
    279c:	b.eq	27b8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x380>  // b.none
    27a0:	mov	x0, x26
    27a4:	add	x26, x26, #0x10
    27a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    27ac:	cmp	x27, x26
    27b0:	b.ne	27a0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x368>  // b.any
    27b4:	ldr	x27, [x28, #24]
    27b8:	cbz	x27, 27c4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x38c>
    27bc:	mov	x0, x27
    27c0:	bl	0 <_ZdlPv>
    27c4:	mov	x0, x28
    27c8:	mov	x1, #0x30                  	// #48
    27cc:	bl	0 <_ZdlPvm>
    27d0:	ldr	x27, [sp, #168]
    27d4:	cbz	x27, 2834 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3fc>
    27d8:	ldr	x0, [x27, #88]
    27dc:	add	x1, x27, #0x68
    27e0:	add	x26, x27, #0x58
    27e4:	cmp	x0, x1
    27e8:	b.eq	27f0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3b8>  // b.none
    27ec:	bl	0 <free>
    27f0:	ldr	x0, [x27, #72]
    27f4:	add	x28, x27, #0x48
    27f8:	cmp	x26, x0
    27fc:	b.eq	2804 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3cc>  // b.none
    2800:	bl	0 <free>
    2804:	ldr	x0, [x27, #56]
    2808:	cmp	x28, x0
    280c:	b.eq	2814 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3dc>  // b.none
    2810:	bl	0 <free>
    2814:	ldr	x0, [x27, #8]
    2818:	add	x1, x27, #0x18
    281c:	cmp	x0, x1
    2820:	b.eq	2828 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x3f0>  // b.none
    2824:	bl	0 <free>
    2828:	mov	x0, x27
    282c:	mov	x1, #0x80                  	// #128
    2830:	bl	0 <_ZdlPvm>
    2834:	ldr	w1, [sp, #232]
    2838:	adrp	x2, 0 <_ZTVN4llvm11MapResolverE>
    283c:	ldr	x0, [sp, #216]
    2840:	ldr	x26, [x2]
    2844:	umull	x1, w1, w20
    2848:	add	x26, x26, #0x10
    284c:	str	x26, [sp, #184]
    2850:	bl	0 <_ZdlPvm>
    2854:	b	24a8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x70>
    2858:	mov	x12, #0x0                   	// #0
    285c:	mov	w0, #0x1                   	// #1
    2860:	cmn	x7, #0x8
    2864:	b.ne	2cf0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x8b8>  // b.any
    2868:	ldr	x11, [sp, #208]
    286c:	lsl	w0, w3, #1
    2870:	ldr	w10, [sp, #224]
    2874:	cmp	x12, #0x0
    2878:	add	x11, x11, #0x1
    287c:	str	x11, [sp, #208]
    2880:	add	w10, w10, #0x1
    2884:	add	w11, w0, w3
    2888:	csel	x1, x1, x12, eq  // eq = none
    288c:	cmp	w11, w10, lsl #2
    2890:	b.ls	264c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x214>  // b.plast
    2894:	ldr	w0, [sp, #228]
    2898:	add	w0, w10, w0
    289c:	sub	w0, w3, w0
    28a0:	cmp	w0, w3, lsr #3
    28a4:	b.ls	28f0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x4b8>  // b.plast
    28a8:	ldr	x0, [x1]
    28ac:	str	w10, [sp, #224]
    28b0:	cmn	x0, #0x8
    28b4:	b.eq	28c4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x48c>  // b.none
    28b8:	ldr	w0, [sp, #228]
    28bc:	sub	w0, w0, #0x1
    28c0:	str	w0, [sp, #228]
    28c4:	stp	x28, xzr, [x1]
    28c8:	strb	wzr, [x1, #16]
    28cc:	b	2620 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1e8>
    28d0:	mov	w0, w27
    28d4:	ldp	x19, x20, [sp, #16]
    28d8:	ldp	x21, x22, [sp, #32]
    28dc:	ldp	x23, x24, [sp, #48]
    28e0:	ldp	x25, x26, [sp, #64]
    28e4:	ldp	x27, x28, [sp, #80]
    28e8:	ldp	x29, x30, [sp], #240
    28ec:	ret
    28f0:	mov	w1, w6
    28f4:	lsr	w0, w6, #1
    28f8:	orr	x0, x0, x1
    28fc:	mov	w1, #0x40                  	// #64
    2900:	stp	x8, x9, [sp, #112]
    2904:	orr	x0, x0, x0, lsr #2
    2908:	str	x7, [sp, #128]
    290c:	orr	x0, x0, x0, lsr #4
    2910:	str	w2, [sp, #136]
    2914:	str	w3, [sp, #148]
    2918:	orr	x0, x0, x0, lsr #8
    291c:	str	x5, [sp, #152]
    2920:	orr	x0, x0, x0, lsr #16
    2924:	add	x0, x0, #0x1
    2928:	cmp	w0, w1
    292c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    2930:	str	w0, [sp, #232]
    2934:	umull	x0, w0, w20
    2938:	bl	0 <_Znwm>
    293c:	str	x0, [sp, #216]
    2940:	ldr	x5, [sp, #152]
    2944:	ldr	w2, [sp, #136]
    2948:	ldr	w3, [sp, #148]
    294c:	ldp	x8, x9, [sp, #112]
    2950:	ldr	x7, [sp, #128]
    2954:	cbz	x5, 2c9c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x864>
    2958:	ldr	w12, [sp, #232]
    295c:	umull	x1, w3, w20
    2960:	str	xzr, [sp, #224]
    2964:	sub	w13, w12, #0x1
    2968:	add	x11, x5, x1
    296c:	tst	w12, w13
    2970:	b.ne	2e50 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa18>  // b.any
    2974:	umaddl	x3, w12, w20, x0
    2978:	mov	x6, x0
    297c:	cmp	x0, x3
    2980:	b.eq	2994 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x55c>  // b.none
    2984:	nop
    2988:	str	x7, [x6], #24
    298c:	cmp	x3, x6
    2990:	b.ne	2988 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x550>  // b.any
    2994:	mov	x10, x5
    2998:	b	29a8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x570>
    299c:	add	x10, x10, #0x18
    29a0:	cmp	x11, x10
    29a4:	b.eq	2a18 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x5e0>  // b.none
    29a8:	ldr	x6, [x10]
    29ac:	cmn	x6, #0x8
    29b0:	ccmn	x6, #0x10, #0x4, ne  // ne = any
    29b4:	b.eq	299c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x564>  // b.none
    29b8:	cbz	w12, 2e70 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa38>
    29bc:	lsr	w7, w6, #9
    29c0:	eor	w7, w7, w6, lsr #4
    29c4:	and	w7, w7, w13
    29c8:	umull	x3, w7, w20
    29cc:	add	x14, x0, x3
    29d0:	ldr	x3, [x0, x3]
    29d4:	cmp	x6, x3
    29d8:	b.eq	272c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2f4>  // b.none
    29dc:	mov	x15, #0x0                   	// #0
    29e0:	mov	w16, #0x1                   	// #1
    29e4:	cmn	x3, #0x8
    29e8:	b.ne	2dd8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9a0>  // b.any
    29ec:	cmp	x15, #0x0
    29f0:	ldr	w3, [sp, #224]
    29f4:	csel	x15, x15, x14, ne  // ne = any
    29f8:	add	x10, x10, #0x18
    29fc:	add	w3, w3, #0x1
    2a00:	str	x6, [x15]
    2a04:	ldp	x6, x7, [x10, #-16]
    2a08:	stp	x6, x7, [x15, #8]
    2a0c:	cmp	x11, x10
    2a10:	str	w3, [sp, #224]
    2a14:	b.ne	29a8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x570>  // b.any
    2a18:	mov	x0, x5
    2a1c:	stp	x8, x9, [sp, #112]
    2a20:	str	w2, [sp, #128]
    2a24:	bl	0 <_ZdlPvm>
    2a28:	ldp	x8, x9, [sp, #112]
    2a2c:	ldr	w2, [sp, #128]
    2a30:	ldr	w3, [sp, #232]
    2a34:	ldr	x5, [sp, #216]
    2a38:	cbz	w3, 2bf8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7c0>
    2a3c:	sub	w6, w3, #0x1
    2a40:	ldr	w10, [sp, #224]
    2a44:	and	w2, w2, w6
    2a48:	add	w10, w10, #0x1
    2a4c:	umull	x0, w2, w20
    2a50:	add	x1, x5, x0
    2a54:	ldr	x0, [x5, x0]
    2a58:	cmp	x28, x0
    2a5c:	b.ne	2d20 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x8e8>  // b.any
    2a60:	str	w10, [sp, #224]
    2a64:	b	28b8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x480>
    2a68:	add	x1, x27, #0x38
    2a6c:	add	x0, x26, #0x38
    2a70:	str	x3, [sp, #120]
    2a74:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2a78:	str	xzr, [x26, #80]
    2a7c:	add	x2, x26, #0x58
    2a80:	ldr	x3, [sp, #120]
    2a84:	ldr	w0, [x27, #80]
    2a88:	str	x2, [x26, #72]
    2a8c:	cbz	w0, 2538 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x100>
    2a90:	mov	x0, x3
    2a94:	add	x1, x27, #0x48
    2a98:	str	x2, [sp, #120]
    2a9c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2aa0:	str	xzr, [x26, #96]
    2aa4:	add	x0, x26, #0x68
    2aa8:	str	x0, [x26, #88]
    2aac:	ldr	w0, [x27, #96]
    2ab0:	ldr	x2, [sp, #120]
    2ab4:	cbz	w0, 254c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x114>
    2ab8:	mov	x0, x2
    2abc:	add	x1, x27, #0x58
    2ac0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2ac4:	b	254c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x114>
    2ac8:	add	x1, x27, #0x8
    2acc:	mov	x0, x28
    2ad0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2ad4:	b	2510 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xd8>
    2ad8:	mov	x0, x5
    2adc:	stp	x8, x9, [sp, #112]
    2ae0:	bl	0 <_ZdlPvm>
    2ae4:	ldp	x8, x9, [sp, #112]
    2ae8:	ldr	w3, [sp, #232]
    2aec:	ldr	x5, [sp, #216]
    2af0:	cbz	w3, 2bf8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7c0>
    2af4:	cmn	x28, #0x10
    2af8:	ccmn	x28, #0x8, #0x4, ne  // ne = any
    2afc:	b.eq	2e10 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x9d8>  // b.none
    2b00:	lsr	w0, w28, #9
    2b04:	sub	w6, w3, #0x1
    2b08:	eor	w0, w0, w28, lsr #4
    2b0c:	ldr	w10, [sp, #224]
    2b10:	and	w0, w0, w6
    2b14:	add	w10, w10, #0x1
    2b18:	umull	x2, w0, w20
    2b1c:	add	x1, x5, x2
    2b20:	ldr	x2, [x5, x2]
    2b24:	cmp	x28, x2
    2b28:	b.eq	2a60 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x628>  // b.none
    2b2c:	mov	x7, #0x0                   	// #0
    2b30:	mov	w11, #0x1                   	// #1
    2b34:	cmn	x2, #0x8
    2b38:	b.ne	2d64 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x92c>  // b.any
    2b3c:	cbz	x7, 2dd0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x998>
    2b40:	mov	x1, x7
    2b44:	ldr	x0, [x7]
    2b48:	b	28ac <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x474>
    2b4c:	add	x1, sp, #0xa8
    2b50:	mov	x0, x23
    2b54:	str	x26, [sp, #168]
    2b58:	bl	1ad0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
    2b5c:	ldr	x28, [sp, #168]
    2b60:	and	w27, w0, #0xff
    2b64:	cbz	x28, 2bd4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x79c>
    2b68:	ldr	x0, [x28, #88]
    2b6c:	add	x1, x28, #0x68
    2b70:	add	x2, x28, #0x58
    2b74:	cmp	x0, x1
    2b78:	b.eq	2b88 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x750>  // b.none
    2b7c:	str	x2, [sp, #112]
    2b80:	bl	0 <free>
    2b84:	ldr	x2, [sp, #112]
    2b88:	add	x1, x28, #0x48
    2b8c:	ldr	x0, [x28, #72]
    2b90:	cmp	x2, x0
    2b94:	b.eq	2ba4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x76c>  // b.none
    2b98:	str	x1, [sp, #112]
    2b9c:	bl	0 <free>
    2ba0:	ldr	x1, [sp, #112]
    2ba4:	ldr	x0, [x28, #56]
    2ba8:	cmp	x1, x0
    2bac:	b.eq	2bb4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x77c>  // b.none
    2bb0:	bl	0 <free>
    2bb4:	ldr	x0, [x28, #8]
    2bb8:	add	x1, x28, #0x18
    2bbc:	cmp	x0, x1
    2bc0:	b.eq	2bc8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x790>  // b.none
    2bc4:	bl	0 <free>
    2bc8:	mov	x0, x28
    2bcc:	mov	x1, #0x80                  	// #128
    2bd0:	bl	0 <_ZdlPvm>
    2bd4:	ldr	w1, [sp, #232]
    2bd8:	adrp	x2, 0 <_ZTVN4llvm11MapResolverE>
    2bdc:	ldr	x0, [sp, #216]
    2be0:	ldr	x26, [x2]
    2be4:	umull	x1, w1, w20
    2be8:	add	x26, x26, #0x10
    2bec:	str	x26, [sp, #184]
    2bf0:	bl	0 <_ZdlPvm>
    2bf4:	b	24a4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6c>
    2bf8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2bfc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2c00:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2c04:	add	x3, x3, #0x0
    2c08:	add	x1, x1, #0x0
    2c0c:	add	x0, x0, #0x0
    2c10:	mov	w2, #0x22f                 	// #559
    2c14:	bl	0 <__assert_fail>
    2c18:	mov	x11, #0x0                   	// #0
    2c1c:	mov	w15, #0x1                   	// #1
    2c20:	cmn	x3, #0x8
    2c24:	b.ne	2d98 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x960>  // b.any
    2c28:	cmp	x11, #0x0
    2c2c:	ldr	w3, [sp, #224]
    2c30:	csel	x11, x11, x14, ne  // ne = any
    2c34:	add	w3, w3, #0x1
    2c38:	str	x6, [x11]
    2c3c:	ldp	x6, x7, [x2, #8]
    2c40:	stp	x6, x7, [x11, #8]
    2c44:	str	w3, [sp, #224]
    2c48:	b	26ec <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2b4>
    2c4c:	add	x2, sp, #0xa8
    2c50:	mov	x0, x21
    2c54:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2c58:	b	278c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x354>
    2c5c:	ldr	w3, [sp, #232]
    2c60:	str	xzr, [sp, #224]
    2c64:	sub	w1, w3, #0x1
    2c68:	tst	w1, w3
    2c6c:	b.ne	2e50 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa18>  // b.any
    2c70:	umaddl	x5, w3, w20, x0
    2c74:	cmp	x0, x5
    2c78:	b.eq	2af0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6b8>  // b.none
    2c7c:	mov	x2, x0
    2c80:	mov	x1, #0xfffffffffffffff8    	// #-8
    2c84:	nop
    2c88:	str	x1, [x2], #24
    2c8c:	cmp	x5, x2
    2c90:	b.ne	2c88 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x850>  // b.any
    2c94:	mov	x5, x0
    2c98:	b	2af0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6b8>
    2c9c:	ldr	w3, [sp, #232]
    2ca0:	str	xzr, [sp, #224]
    2ca4:	sub	w1, w3, #0x1
    2ca8:	tst	w1, w3
    2cac:	b.ne	2e50 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xa18>  // b.any
    2cb0:	umaddl	x5, w3, w20, x0
    2cb4:	cmp	x0, x5
    2cb8:	b.eq	2a38 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x600>  // b.none
    2cbc:	mov	x1, x0
    2cc0:	str	x7, [x1], #24
    2cc4:	cmp	x5, x1
    2cc8:	b.ne	2cc0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x888>  // b.any
    2ccc:	mov	x5, x0
    2cd0:	b	2a38 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x600>
    2cd4:	ldr	x1, [sp, #112]
    2cd8:	mov	x0, x28
    2cdc:	mov	x3, #0x8                   	// #8
    2ce0:	mov	x2, #0x0                   	// #0
    2ce4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ce8:	ldr	w0, [x26, #16]
    2cec:	b	258c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x154>
    2cf0:	add	w10, w10, w0
    2cf4:	cmp	x12, #0x0
    2cf8:	and	w10, w6, w10
    2cfc:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    2d00:	csel	x12, x12, x1, ne  // ne = any
    2d04:	add	w0, w0, #0x1
    2d08:	umull	x7, w10, w20
    2d0c:	add	x1, x5, x7
    2d10:	ldr	x7, [x5, x7]
    2d14:	cmp	x28, x7
    2d18:	b.eq	2620 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1e8>  // b.none
    2d1c:	b	2860 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x428>
    2d20:	mov	x7, #0x0                   	// #0
    2d24:	mov	w11, #0x1                   	// #1
    2d28:	cmn	x0, #0x8
    2d2c:	b.eq	2b3c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x704>  // b.none
    2d30:	add	w2, w2, w11
    2d34:	cmp	x7, #0x0
    2d38:	and	w2, w6, w2
    2d3c:	ccmn	x0, #0x10, #0x0, eq  // eq = none
    2d40:	csel	x7, x7, x1, ne  // ne = any
    2d44:	add	w11, w11, #0x1
    2d48:	umull	x0, w2, w20
    2d4c:	add	x1, x5, x0
    2d50:	ldr	x0, [x5, x0]
    2d54:	cmp	x28, x0
    2d58:	b.ne	2d28 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x8f0>  // b.any
    2d5c:	str	w10, [sp, #224]
    2d60:	b	28b8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x480>
    2d64:	add	w0, w0, w11
    2d68:	cmp	x7, #0x0
    2d6c:	and	w0, w6, w0
    2d70:	ccmn	x2, #0x10, #0x0, eq  // eq = none
    2d74:	csel	x7, x7, x1, ne  // ne = any
    2d78:	add	w11, w11, #0x1
    2d7c:	umull	x2, w0, w20
    2d80:	add	x1, x5, x2
    2d84:	ldr	x2, [x5, x2]
    2d88:	cmp	x28, x2
    2d8c:	b.ne	2b34 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x6fc>  // b.any
    2d90:	str	w10, [sp, #224]
    2d94:	b	28b8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x480>
    2d98:	add	w7, w15, w7
    2d9c:	cmp	x11, #0x0
    2da0:	and	w7, w13, w7
    2da4:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    2da8:	csel	x14, x14, x11, eq  // eq = none
    2dac:	add	w15, w15, #0x1
    2db0:	umull	x3, w7, w20
    2db4:	add	x16, x0, x3
    2db8:	ldr	x3, [x0, x3]
    2dbc:	cmp	x6, x3
    2dc0:	b.eq	272c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2f4>  // b.none
    2dc4:	mov	x11, x14
    2dc8:	mov	x14, x16
    2dcc:	b	2c20 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7e8>
    2dd0:	str	w10, [sp, #224]
    2dd4:	b	28c4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x48c>
    2dd8:	add	w7, w16, w7
    2ddc:	cmp	x15, #0x0
    2de0:	and	w7, w13, w7
    2de4:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    2de8:	csel	x14, x14, x15, eq  // eq = none
    2dec:	add	w16, w16, #0x1
    2df0:	umull	x3, w7, w20
    2df4:	add	x17, x0, x3
    2df8:	ldr	x3, [x0, x3]
    2dfc:	cmp	x6, x3
    2e00:	b.eq	272c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x2f4>  // b.none
    2e04:	mov	x15, x14
    2e08:	mov	x14, x17
    2e0c:	b	29e4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x5ac>
    2e10:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2e14:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2e18:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2e1c:	add	x3, x3, #0x0
    2e20:	add	x1, x1, #0x0
    2e24:	add	x0, x0, #0x0
    2e28:	mov	w2, #0x250                 	// #592
    2e2c:	bl	0 <__assert_fail>
    2e30:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2e34:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2e38:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2e3c:	add	x3, x3, #0x0
    2e40:	add	x1, x1, #0x0
    2e44:	add	x0, x0, #0x0
    2e48:	mov	w2, #0x43                  	// #67
    2e4c:	bl	0 <__assert_fail>
    2e50:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2e54:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2e58:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    2e5c:	add	x3, x3, #0x0
    2e60:	add	x1, x1, #0x0
    2e64:	add	x0, x0, #0x0
    2e68:	mov	w2, #0x15b                 	// #347
    2e6c:	bl	0 <__assert_fail>
    2e70:	mov	x0, #0x0                   	// #0
    2e74:	str	x6, [x0]
    2e78:	brk	#0x3e8
    2e7c:	nop

0000000000002e80 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>:
    2e80:	stp	x29, x30, [sp, #-352]!
    2e84:	mov	x7, #0x0                   	// #0
    2e88:	mov	x29, sp
    2e8c:	stp	x23, x24, [sp, #48]
    2e90:	mov	x24, x2
    2e94:	adrp	x2, 0 <_ZTVN4llvm11MapResolverE>
    2e98:	stp	x19, x20, [sp, #16]
    2e9c:	mov	x23, x0
    2ea0:	ldr	w9, [x24, #8]
    2ea4:	ldr	x2, [x2]
    2ea8:	stp	x21, x22, [sp, #32]
    2eac:	mov	x21, x1
    2eb0:	ldr	x19, [x24]
    2eb4:	add	x2, x2, #0x10
    2eb8:	stp	x25, x26, [sp, #64]
    2ebc:	mov	x22, x4
    2ec0:	and	w26, w3, #0xff
    2ec4:	stp	x27, x28, [sp, #80]
    2ec8:	add	x9, x19, x9, lsl #4
    2ecc:	cmp	x9, x19
    2ed0:	str	x5, [sp, #104]
    2ed4:	mov	w28, #0x0                   	// #0
    2ed8:	stp	x2, xzr, [sp, #296]
    2edc:	mov	w25, #0x18                  	// #24
    2ee0:	strb	wzr, [sp, #312]
    2ee4:	stp	xzr, xzr, [sp, #320]
    2ee8:	str	xzr, [sp, #336]
    2eec:	str	wzr, [sp, #344]
    2ef0:	b.ne	2f3c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xbc>  // b.any
    2ef4:	b	304c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1cc>
    2ef8:	cmn	x20, #0x10
    2efc:	ccmn	x20, #0x8, #0x4, ne  // ne = any
    2f00:	b.eq	3764 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x8e4>  // b.none
    2f04:	lsr	w27, w20, #9
    2f08:	sub	w1, w28, #0x1
    2f0c:	eor	w27, w27, w20, lsr #4
    2f10:	and	w4, w27, w1
    2f14:	umull	x0, w4, w25
    2f18:	add	x3, x7, x0
    2f1c:	ldr	x2, [x7, x0]
    2f20:	cmp	x20, x2
    2f24:	b.ne	31dc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x35c>  // b.any
    2f28:	str	x8, [x3, #8]
    2f2c:	add	x19, x19, #0x10
    2f30:	strb	wzr, [x3, #16]
    2f34:	cmp	x9, x19
    2f38:	b.eq	304c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1cc>  // b.none
    2f3c:	ldp	x20, x8, [x19]
    2f40:	cbnz	w28, 2ef8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x78>
    2f44:	ldr	x1, [sp, #320]
    2f48:	mov	w0, #0x0                   	// #0
    2f4c:	add	x1, x1, #0x1
    2f50:	str	x1, [sp, #320]
    2f54:	sub	w0, w0, #0x1
    2f58:	mov	w1, #0x40                  	// #64
    2f5c:	stp	x8, x9, [sp, #112]
    2f60:	orr	x0, x0, x0, lsr #1
    2f64:	str	x7, [sp, #128]
    2f68:	orr	x0, x0, x0, lsr #2
    2f6c:	orr	x0, x0, x0, lsr #4
    2f70:	orr	x0, x0, x0, lsr #8
    2f74:	orr	x0, x0, x0, lsr #16
    2f78:	add	x0, x0, #0x1
    2f7c:	cmp	w0, w1
    2f80:	csel	w0, w0, w1, cs  // cs = hs, nlast
    2f84:	str	w0, [sp, #344]
    2f88:	umull	x0, w0, w25
    2f8c:	bl	0 <_Znwm>
    2f90:	str	x0, [sp, #328]
    2f94:	ldr	x7, [sp, #128]
    2f98:	ldp	x8, x9, [sp, #112]
    2f9c:	cbz	x7, 3654 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7d4>
    2fa0:	ldr	w12, [sp, #344]
    2fa4:	umull	x1, w28, w25
    2fa8:	str	xzr, [sp, #336]
    2fac:	sub	w13, w12, #0x1
    2fb0:	add	x11, x7, x1
    2fb4:	tst	w12, w13
    2fb8:	b.ne	382c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9ac>  // b.any
    2fbc:	umaddl	x3, w12, w25, x0
    2fc0:	mov	x2, x0
    2fc4:	mov	x4, #0xfffffffffffffff8    	// #-8
    2fc8:	cmp	x0, x3
    2fcc:	b.eq	2fdc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x15c>  // b.none
    2fd0:	str	x4, [x2], #24
    2fd4:	cmp	x3, x2
    2fd8:	b.ne	2fd0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x150>  // b.any
    2fdc:	cmp	x11, x7
    2fe0:	mov	x2, x7
    2fe4:	b.ne	2ff8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x178>  // b.any
    2fe8:	b	33bc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x53c>
    2fec:	add	x2, x2, #0x18
    2ff0:	cmp	x11, x2
    2ff4:	b.eq	33bc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x53c>  // b.none
    2ff8:	ldr	x3, [x2]
    2ffc:	cmn	x3, #0x8
    3000:	ccmn	x3, #0x10, #0x4, ne  // ne = any
    3004:	b.eq	2fec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x16c>  // b.none
    3008:	cbz	w12, 385c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9dc>
    300c:	lsr	w4, w3, #9
    3010:	eor	w4, w4, w3, lsr #4
    3014:	and	w4, w4, w13
    3018:	umull	x5, w4, w25
    301c:	add	x14, x0, x5
    3020:	ldr	x5, [x0, x5]
    3024:	cmp	x3, x5
    3028:	b.ne	3524 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x6a4>  // b.any
    302c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3030:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3034:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3038:	add	x3, x3, #0x0
    303c:	add	x1, x1, #0x0
    3040:	add	x0, x0, #0x0
    3044:	mov	w2, #0x17a                 	// #378
    3048:	bl	0 <__assert_fail>
    304c:	ldr	x0, [x21, #16]
    3050:	add	x1, sp, #0x128
    3054:	ldr	x2, [x0]
    3058:	ldr	x2, [x2, #96]
    305c:	blr	x2
    3060:	mov	x20, x0
    3064:	cbz	x0, 384c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9cc>
    3068:	ldrb	w0, [x0, #8]
    306c:	cmp	w0, #0x9
    3070:	b.eq	3114 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x294>  // b.none
    3074:	cbnz	w26, 3450 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x5d0>
    3078:	mov	x0, #0x30                  	// #48
    307c:	ldp	x26, x19, [x21]
    3080:	bl	0 <_Znwm>
    3084:	ldp	x1, x3, [x22, #8]
    3088:	stp	x26, x19, [x0]
    308c:	stp	x20, xzr, [x0, #16]
    3090:	stp	xzr, xzr, [x0, #32]
    3094:	cmp	x1, x3
    3098:	str	x0, [sp, #264]
    309c:	b.eq	3558 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x6d8>  // b.none
    30a0:	stp	xzr, x0, [x1]
    30a4:	add	x2, x1, #0x10
    30a8:	str	x2, [x22, #8]
    30ac:	ldr	x5, [sp, #104]
    30b0:	add	x1, x21, #0x18
    30b4:	ldur	x4, [x2, #-8]
    30b8:	mov	x0, x23
    30bc:	mov	x2, x24
    30c0:	mov	w3, #0x0                   	// #0
    30c4:	add	x4, x4, #0x18
    30c8:	bl	2438 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    30cc:	and	w19, w0, #0xff
    30d0:	ldr	w2, [sp, #344]
    30d4:	mov	w1, #0x18                  	// #24
    30d8:	adrp	x3, 0 <_ZTVN4llvm11MapResolverE>
    30dc:	ldr	x0, [sp, #328]
    30e0:	umull	x1, w2, w1
    30e4:	ldr	x24, [x3]
    30e8:	add	x24, x24, #0x10
    30ec:	str	x24, [sp, #296]
    30f0:	bl	0 <_ZdlPvm>
    30f4:	mov	w0, w19
    30f8:	ldp	x19, x20, [sp, #16]
    30fc:	ldp	x21, x22, [sp, #32]
    3100:	ldp	x23, x24, [sp, #48]
    3104:	ldp	x25, x26, [sp, #64]
    3108:	ldp	x27, x28, [sp, #80]
    310c:	ldp	x29, x30, [sp], #352
    3110:	ret
    3114:	ldr	w0, [x20, #32]
    3118:	mov	x1, #0x28                  	// #40
    311c:	add	x27, x20, x1
    3120:	add	x0, x1, w0, uxtw #3
    3124:	add	x20, x20, x0
    3128:	cmp	x20, x27
    312c:	b.eq	31d4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x354>  // b.none
    3130:	ldr	x1, [x21, #8]
    3134:	add	x25, x21, #0x18
    3138:	cbz	x1, 3180 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x300>
    313c:	ldp	w0, w3, [x24, #8]
    3140:	ldr	x19, [x27]
    3144:	cmp	w0, w3
    3148:	ldr	x28, [x1, #24]
    314c:	b.cs	33a8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x528>  // b.hs, b.nlast
    3150:	ldr	x4, [x24]
    3154:	ubfiz	x2, x0, #4, #32
    3158:	mov	w1, w0
    315c:	add	x5, x4, x2
    3160:	add	x1, x1, #0x1
    3164:	str	x28, [x4, x2]
    3168:	cmp	x1, w3, uxtw
    316c:	str	x19, [x5, #8]
    3170:	b.hi	3784 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x904>  // b.pmore
    3174:	add	w0, w0, #0x1
    3178:	str	w0, [x24, #8]
    317c:	cbz	w0, 380c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x98c>
    3180:	mov	x1, x25
    3184:	mov	x4, x22
    3188:	mov	w3, w26
    318c:	mov	x2, x24
    3190:	mov	x0, x23
    3194:	mov	x5, #0x0                   	// #0
    3198:	bl	2438 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    319c:	and	w19, w0, #0xff
    31a0:	ldr	x1, [x21, #8]
    31a4:	cbz	x1, 31c4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x344>
    31a8:	ldp	w0, w3, [x24, #8]
    31ac:	mov	w2, w0
    31b0:	sub	x2, x2, #0x1
    31b4:	cmp	x2, x3
    31b8:	b.hi	3784 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x904>  // b.pmore
    31bc:	sub	w0, w0, #0x1
    31c0:	str	w0, [x24, #8]
    31c4:	cbnz	w19, 30d0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x250>
    31c8:	add	x27, x27, #0x8
    31cc:	cmp	x20, x27
    31d0:	b.ne	3138 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2b8>  // b.any
    31d4:	mov	w19, #0x0                   	// #0
    31d8:	b	30d0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x250>
    31dc:	mov	w0, #0x1                   	// #1
    31e0:	mov	x11, #0x0                   	// #0
    31e4:	cmn	x2, #0x8
    31e8:	b.ne	34f4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x674>  // b.any
    31ec:	ldr	x5, [sp, #320]
    31f0:	lsl	w0, w28, #1
    31f4:	ldr	w4, [sp, #336]
    31f8:	cmp	x11, #0x0
    31fc:	add	x5, x5, #0x1
    3200:	str	x5, [sp, #320]
    3204:	add	w4, w4, #0x1
    3208:	add	w5, w0, w28
    320c:	csel	x3, x3, x11, eq  // eq = none
    3210:	cmp	w5, w4, lsl #2
    3214:	b.ls	2f54 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xd4>  // b.plast
    3218:	ldr	w0, [sp, #340]
    321c:	add	w0, w4, w0
    3220:	sub	w0, w28, w0
    3224:	cmp	w0, w28, lsr #3
    3228:	b.ls	3254 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3d4>  // b.plast
    322c:	ldr	x0, [x3]
    3230:	str	w4, [sp, #336]
    3234:	cmn	x0, #0x8
    3238:	b.eq	3248 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3c8>  // b.none
    323c:	ldr	w0, [sp, #340]
    3240:	sub	w0, w0, #0x1
    3244:	str	w0, [sp, #340]
    3248:	stp	x20, xzr, [x3]
    324c:	strb	wzr, [x3, #16]
    3250:	b	2f28 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xa8>
    3254:	mov	w3, w1
    3258:	lsr	w0, w1, #1
    325c:	orr	x0, x0, x3
    3260:	mov	w1, #0x40                  	// #64
    3264:	stp	x8, x9, [sp, #112]
    3268:	orr	x0, x0, x0, lsr #2
    326c:	stp	x2, x7, [sp, #128]
    3270:	orr	x0, x0, x0, lsr #4
    3274:	orr	x0, x0, x0, lsr #8
    3278:	orr	x0, x0, x0, lsr #16
    327c:	add	x0, x0, #0x1
    3280:	cmp	w0, w1
    3284:	csel	w0, w0, w1, cs  // cs = hs, nlast
    3288:	str	w0, [sp, #344]
    328c:	umull	x0, w0, w25
    3290:	bl	0 <_Znwm>
    3294:	str	x0, [sp, #328]
    3298:	ldp	x2, x7, [sp, #128]
    329c:	ldp	x8, x9, [sp, #112]
    32a0:	cbz	x7, 3694 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x814>
    32a4:	ldr	w11, [sp, #344]
    32a8:	umull	x1, w28, w25
    32ac:	str	xzr, [sp, #336]
    32b0:	sub	w12, w11, #0x1
    32b4:	add	x5, x7, x1
    32b8:	tst	w11, w12
    32bc:	b.ne	382c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9ac>  // b.any
    32c0:	umaddl	x4, w11, w25, x0
    32c4:	mov	x3, x0
    32c8:	cmp	x0, x4
    32cc:	b.eq	32dc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x45c>  // b.none
    32d0:	str	x2, [x3], #24
    32d4:	cmp	x4, x3
    32d8:	b.ne	32d0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x450>  // b.any
    32dc:	mov	x4, x7
    32e0:	b	32f0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x470>
    32e4:	add	x4, x4, #0x18
    32e8:	cmp	x5, x4
    32ec:	b.eq	3360 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x4e0>  // b.none
    32f0:	ldr	x2, [x4]
    32f4:	cmn	x2, #0x10
    32f8:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    32fc:	b.eq	32e4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x464>  // b.none
    3300:	cbz	w11, 3850 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9d0>
    3304:	lsr	w3, w2, #9
    3308:	eor	w3, w3, w2, lsr #4
    330c:	and	w3, w3, w12
    3310:	umull	x13, w3, w25
    3314:	add	x14, x0, x13
    3318:	ldr	x13, [x0, x13]
    331c:	cmp	x13, x2
    3320:	b.eq	302c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1ac>  // b.none
    3324:	mov	w16, #0x1                   	// #1
    3328:	mov	x15, #0x0                   	// #0
    332c:	cmn	x13, #0x8
    3330:	b.ne	372c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x8ac>  // b.any
    3334:	cmp	x15, #0x0
    3338:	ldr	w13, [sp, #336]
    333c:	csel	x15, x15, x14, ne  // ne = any
    3340:	add	x4, x4, #0x18
    3344:	add	w13, w13, #0x1
    3348:	str	x2, [x15]
    334c:	ldp	x2, x3, [x4, #-16]
    3350:	stp	x2, x3, [x15, #8]
    3354:	cmp	x5, x4
    3358:	str	w13, [sp, #336]
    335c:	b.ne	32f0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x470>  // b.any
    3360:	mov	x0, x7
    3364:	stp	x8, x9, [sp, #112]
    3368:	bl	0 <_ZdlPvm>
    336c:	ldp	x8, x9, [sp, #112]
    3370:	ldr	w28, [sp, #344]
    3374:	ldr	x7, [sp, #328]
    3378:	cbz	w28, 3430 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x5b0>
    337c:	sub	w1, w28, #0x1
    3380:	ldr	w4, [sp, #336]
    3384:	and	w27, w27, w1
    3388:	add	w4, w4, #0x1
    338c:	umull	x0, w27, w25
    3390:	add	x3, x7, x0
    3394:	ldr	x0, [x7, x0]
    3398:	cmp	x20, x0
    339c:	b.ne	36cc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x84c>  // b.any
    33a0:	str	w4, [sp, #336]
    33a4:	b	323c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3bc>
    33a8:	mov	x0, x24
    33ac:	mov	x1, #0x0                   	// #0
    33b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    33b4:	ldp	w0, w3, [x24, #8]
    33b8:	b	3150 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2d0>
    33bc:	mov	x0, x7
    33c0:	stp	x8, x9, [sp, #112]
    33c4:	bl	0 <_ZdlPvm>
    33c8:	ldp	x8, x9, [sp, #112]
    33cc:	ldr	w28, [sp, #344]
    33d0:	ldr	x7, [sp, #328]
    33d4:	cbz	w28, 3430 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x5b0>
    33d8:	cmn	x20, #0x8
    33dc:	ccmn	x20, #0x10, #0x4, ne  // ne = any
    33e0:	b.eq	3764 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x8e4>  // b.none
    33e4:	lsr	w0, w20, #9
    33e8:	sub	w2, w28, #0x1
    33ec:	eor	w0, w0, w20, lsr #4
    33f0:	ldr	w4, [sp, #336]
    33f4:	and	w0, w0, w2
    33f8:	add	w4, w4, #0x1
    33fc:	umull	x1, w0, w25
    3400:	add	x3, x7, x1
    3404:	ldr	x1, [x7, x1]
    3408:	cmp	x20, x1
    340c:	b.eq	33a0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x520>  // b.none
    3410:	mov	w11, #0x1                   	// #1
    3414:	mov	x5, #0x0                   	// #0
    3418:	cmn	x1, #0x8
    341c:	b.ne	37d8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x958>  // b.any
    3420:	cbz	x5, 3724 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x8a4>
    3424:	mov	x3, x5
    3428:	ldr	x0, [x5]
    342c:	b	3230 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3b0>
    3430:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3434:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3438:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    343c:	add	x3, x3, #0x0
    3440:	add	x1, x1, #0x0
    3444:	add	x0, x0, #0x0
    3448:	mov	w2, #0x22f                 	// #559
    344c:	bl	0 <__assert_fail>
    3450:	add	x25, sp, #0x90
    3454:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3458:	mov	x0, x25
    345c:	add	x1, x1, #0x0
    3460:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3464:	add	x19, sp, #0x108
    3468:	ldr	x1, [x20]
    346c:	mov	x8, x19
    3470:	mov	x0, x20
    3474:	add	x27, sp, #0xa8
    3478:	add	x22, sp, #0xc0
    347c:	add	x23, sp, #0xd8
    3480:	ldr	x1, [x1, #40]
    3484:	add	x20, sp, #0xf0
    3488:	blr	x1
    348c:	mov	x1, x19
    3490:	mov	x0, x27
    3494:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3498:	add	x19, x19, #0x10
    349c:	mov	x8, x22
    34a0:	mov	x1, x27
    34a4:	mov	x0, x25
    34a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    34ac:	mov	x0, x23
    34b0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    34b4:	add	x1, x1, #0x0
    34b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    34bc:	mov	x8, x20
    34c0:	mov	x1, x23
    34c4:	mov	x0, x22
    34c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    34cc:	mov	x0, x21
    34d0:	mov	x2, x20
    34d4:	mov	x1, #0x1                   	// #1
    34d8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    34dc:	ldr	x0, [sp, #264]
    34e0:	cmp	x0, x19
    34e4:	b.eq	34ec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x66c>  // b.none
    34e8:	bl	0 <_ZdlPv>
    34ec:	mov	w19, w26
    34f0:	b	30d0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x250>
    34f4:	add	w4, w4, w0
    34f8:	cmp	x11, #0x0
    34fc:	and	w4, w1, w4
    3500:	ccmn	x2, #0x10, #0x0, eq  // eq = none
    3504:	csel	x11, x11, x3, ne  // ne = any
    3508:	add	w0, w0, #0x1
    350c:	umull	x2, w4, w25
    3510:	add	x3, x7, x2
    3514:	ldr	x2, [x7, x2]
    3518:	cmp	x20, x2
    351c:	b.eq	2f28 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xa8>  // b.none
    3520:	b	31e4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x364>
    3524:	mov	w16, #0x1                   	// #1
    3528:	mov	x15, #0x0                   	// #0
    352c:	cmn	x5, #0x8
    3530:	b.ne	36ec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x86c>  // b.any
    3534:	cmp	x15, #0x0
    3538:	ldr	w4, [sp, #336]
    353c:	csel	x15, x15, x14, ne  // ne = any
    3540:	add	w14, w4, #0x1
    3544:	str	x3, [x15]
    3548:	ldp	x4, x5, [x2, #8]
    354c:	stp	x4, x5, [x15, #8]
    3550:	str	w14, [sp, #336]
    3554:	b	2fec <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x16c>
    3558:	add	x2, sp, #0x108
    355c:	mov	x0, x22
    3560:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3564:	ldr	x28, [sp, #264]
    3568:	cbz	x28, 364c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7cc>
    356c:	ldp	x20, x27, [x28, #24]
    3570:	cmp	x20, x27
    3574:	b.eq	3634 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7b4>  // b.none
    3578:	ldr	x26, [x20, #8]
    357c:	cbz	x26, 35c0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x740>
    3580:	ldp	x25, x19, [x26, #24]
    3584:	cmp	x25, x19
    3588:	b.eq	35a8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x728>  // b.none
    358c:	nop
    3590:	mov	x0, x25
    3594:	add	x25, x25, #0x10
    3598:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    359c:	cmp	x19, x25
    35a0:	b.ne	3590 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x710>  // b.any
    35a4:	ldr	x19, [x26, #24]
    35a8:	cbz	x19, 35b4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x734>
    35ac:	mov	x0, x19
    35b0:	bl	0 <_ZdlPv>
    35b4:	mov	x0, x26
    35b8:	mov	x1, #0x30                  	// #48
    35bc:	bl	0 <_ZdlPvm>
    35c0:	ldr	x19, [x20]
    35c4:	cbz	x19, 3624 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7a4>
    35c8:	ldr	x0, [x19, #88]
    35cc:	add	x1, x19, #0x68
    35d0:	add	x25, x19, #0x58
    35d4:	cmp	x0, x1
    35d8:	b.eq	35e0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x760>  // b.none
    35dc:	bl	0 <free>
    35e0:	ldr	x0, [x19, #72]
    35e4:	add	x26, x19, #0x48
    35e8:	cmp	x25, x0
    35ec:	b.eq	35f4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x774>  // b.none
    35f0:	bl	0 <free>
    35f4:	ldr	x0, [x19, #56]
    35f8:	cmp	x26, x0
    35fc:	b.eq	3604 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x784>  // b.none
    3600:	bl	0 <free>
    3604:	ldr	x0, [x19, #8]
    3608:	add	x1, x19, #0x18
    360c:	cmp	x0, x1
    3610:	b.eq	3618 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x798>  // b.none
    3614:	bl	0 <free>
    3618:	mov	x0, x19
    361c:	mov	x1, #0x80                  	// #128
    3620:	bl	0 <_ZdlPvm>
    3624:	add	x20, x20, #0x10
    3628:	cmp	x27, x20
    362c:	b.ne	3578 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x6f8>  // b.any
    3630:	ldr	x27, [x28, #24]
    3634:	cbz	x27, 3640 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7c0>
    3638:	mov	x0, x27
    363c:	bl	0 <_ZdlPv>
    3640:	mov	x0, x28
    3644:	mov	x1, #0x30                  	// #48
    3648:	bl	0 <_ZdlPvm>
    364c:	ldr	x2, [x22, #8]
    3650:	b	30ac <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x22c>
    3654:	ldr	w28, [sp, #344]
    3658:	str	xzr, [sp, #336]
    365c:	sub	w1, w28, #0x1
    3660:	tst	w1, w28
    3664:	b.ne	382c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9ac>  // b.any
    3668:	umaddl	x7, w28, w25, x0
    366c:	cmp	x0, x7
    3670:	b.eq	33d4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x554>  // b.none
    3674:	mov	x2, x0
    3678:	mov	x1, #0xfffffffffffffff8    	// #-8
    367c:	nop
    3680:	str	x1, [x2], #24
    3684:	cmp	x7, x2
    3688:	b.ne	3680 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x800>  // b.any
    368c:	mov	x7, x0
    3690:	b	33d4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x554>
    3694:	ldr	w28, [sp, #344]
    3698:	str	xzr, [sp, #336]
    369c:	sub	w1, w28, #0x1
    36a0:	tst	w1, w28
    36a4:	b.ne	382c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x9ac>  // b.any
    36a8:	umaddl	x7, w28, w25, x0
    36ac:	cmp	x0, x7
    36b0:	b.eq	3378 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x4f8>  // b.none
    36b4:	mov	x1, x0
    36b8:	str	x2, [x1], #24
    36bc:	cmp	x7, x1
    36c0:	b.ne	36b8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x838>  // b.any
    36c4:	mov	x7, x0
    36c8:	b	3378 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x4f8>
    36cc:	mov	w5, #0x1                   	// #1
    36d0:	mov	x2, #0x0                   	// #0
    36d4:	cmn	x0, #0x8
    36d8:	b.ne	37a4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x924>  // b.any
    36dc:	cbz	x2, 3724 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x8a4>
    36e0:	mov	x3, x2
    36e4:	ldr	x0, [x2]
    36e8:	b	3230 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3b0>
    36ec:	add	w4, w4, w16
    36f0:	cmp	x15, #0x0
    36f4:	and	w4, w13, w4
    36f8:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    36fc:	csel	x14, x14, x15, eq  // eq = none
    3700:	add	w16, w16, #0x1
    3704:	umull	x5, w4, w25
    3708:	add	x17, x0, x5
    370c:	ldr	x5, [x0, x5]
    3710:	cmp	x3, x5
    3714:	b.eq	302c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1ac>  // b.none
    3718:	mov	x15, x14
    371c:	mov	x14, x17
    3720:	b	352c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x6ac>
    3724:	str	w4, [sp, #336]
    3728:	b	3248 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3c8>
    372c:	add	w3, w16, w3
    3730:	cmp	x15, #0x0
    3734:	and	w3, w12, w3
    3738:	ccmn	x13, #0x10, #0x0, eq  // eq = none
    373c:	csel	x14, x14, x15, eq  // eq = none
    3740:	add	w16, w16, #0x1
    3744:	umull	x13, w3, w25
    3748:	add	x17, x0, x13
    374c:	ldr	x13, [x0, x13]
    3750:	cmp	x2, x13
    3754:	b.eq	302c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1ac>  // b.none
    3758:	mov	x15, x14
    375c:	mov	x14, x17
    3760:	b	332c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x4ac>
    3764:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3768:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    376c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3770:	add	x3, x3, #0x0
    3774:	add	x1, x1, #0x0
    3778:	add	x0, x0, #0x0
    377c:	mov	w2, #0x250                 	// #592
    3780:	bl	0 <__assert_fail>
    3784:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3788:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    378c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3790:	add	x3, x3, #0x0
    3794:	add	x1, x1, #0x0
    3798:	add	x0, x0, #0x0
    379c:	mov	w2, #0x43                  	// #67
    37a0:	bl	0 <__assert_fail>
    37a4:	add	w27, w5, w27
    37a8:	cmp	x2, #0x0
    37ac:	and	w27, w1, w27
    37b0:	ccmn	x0, #0x10, #0x0, eq  // eq = none
    37b4:	csel	x2, x2, x3, ne  // ne = any
    37b8:	add	w5, w5, #0x1
    37bc:	umull	x0, w27, w25
    37c0:	add	x3, x7, x0
    37c4:	ldr	x0, [x7, x0]
    37c8:	cmp	x20, x0
    37cc:	b.ne	36d4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x854>  // b.any
    37d0:	str	w4, [sp, #336]
    37d4:	b	323c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3bc>
    37d8:	add	w0, w11, w0
    37dc:	cmp	x5, #0x0
    37e0:	and	w0, w2, w0
    37e4:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    37e8:	csel	x5, x5, x3, ne  // ne = any
    37ec:	add	w11, w11, #0x1
    37f0:	umull	x1, w0, w25
    37f4:	add	x3, x7, x1
    37f8:	ldr	x1, [x7, x1]
    37fc:	cmp	x20, x1
    3800:	b.ne	3418 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x598>  // b.any
    3804:	str	w4, [sp, #336]
    3808:	b	323c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x3bc>
    380c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3810:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3814:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3818:	add	x3, x3, #0x0
    381c:	add	x1, x1, #0x0
    3820:	add	x0, x0, #0x0
    3824:	mov	w2, #0xa7                  	// #167
    3828:	bl	0 <__assert_fail>
    382c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3830:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3834:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3838:	add	x3, x3, #0x0
    383c:	add	x1, x1, #0x0
    3840:	add	x0, x0, #0x0
    3844:	mov	w2, #0x15b                 	// #347
    3848:	bl	0 <__assert_fail>
    384c:	bl	2c0 <_ZN4llvm3isaINS_8ListInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    3850:	mov	x0, #0x0                   	// #0
    3854:	str	x2, [x0]
    3858:	brk	#0x3e8
    385c:	mov	x0, #0x0                   	// #0
    3860:	str	x3, [x0]
    3864:	brk	#0x3e8

0000000000003868 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE>:
    3868:	sub	sp, sp, #0x2a0
    386c:	stp	x29, x30, [sp]
    3870:	mov	x29, sp
    3874:	stp	x23, x24, [sp, #48]
    3878:	ldr	x24, [x2, #16]
    387c:	stp	x19, x20, [sp, #16]
    3880:	stp	x25, x26, [sp, #64]
    3884:	mov	x25, x2
    3888:	stp	x27, x28, [sp, #80]
    388c:	ldr	w27, [x24, #64]
    3890:	stp	x1, x0, [sp, #104]
    3894:	ldr	w0, [x2, #32]
    3898:	cmp	w27, w0
    389c:	b.cc	3b90 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x328>  // b.lo, b.ul, b.last
    38a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    38a4:	stp	x21, x22, [sp, #32]
    38a8:	add	x21, sp, #0x210
    38ac:	ldr	d0, [x1]
    38b0:	add	x1, x21, #0x10
    38b4:	ldr	x26, [x24, #56]
    38b8:	str	x1, [sp, #528]
    38bc:	str	d0, [sp, #536]
    38c0:	cbz	w27, 3a44 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x1dc>
    38c4:	mov	w28, w27
    38c8:	mov	x19, #0x0                   	// #0
    38cc:	mov	w20, #0x18                  	// #24
    38d0:	b	3944 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xdc>
    38d4:	cmp	x28, x19
    38d8:	b.ls	3d94 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x52c>  // b.plast
    38dc:	cmp	x19, w0, uxtw
    38e0:	lsl	x22, x19, #3
    38e4:	b.cs	3dd4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x56c>  // b.hs, b.nlast
    38e8:	ldr	w3, [sp, #536]
    38ec:	ldr	w1, [sp, #540]
    38f0:	ldr	x23, [x25, #24]
    38f4:	cmp	w3, w1
    38f8:	b.cs	3a14 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x1ac>  // b.hs, b.nlast
    38fc:	ldr	x2, [sp, #528]
    3900:	ubfiz	x0, x3, #4, #32
    3904:	ldr	x7, [x26, x19, lsl #3]
    3908:	add	x4, x2, x0
    390c:	str	x7, [x2, x0]
    3910:	mov	w0, w3
    3914:	ldr	x2, [x23, x22]
    3918:	str	x2, [x4, #8]
    391c:	add	x0, x0, #0x1
    3920:	cmp	x0, w1, uxtw
    3924:	b.hi	3db4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x54c>  // b.pmore
    3928:	add	w3, w3, #0x1
    392c:	str	w3, [sp, #536]
    3930:	cbz	w3, 39f4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x18c>
    3934:	add	x19, x19, #0x1
    3938:	cmp	w27, w19
    393c:	b.eq	3a44 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x1dc>  // b.none
    3940:	ldr	w0, [x25, #32]
    3944:	cmp	w0, w19
    3948:	mov	w22, w19
    394c:	b.hi	38d4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x6c>  // b.pmore
    3950:	cmp	x28, x19
    3954:	b.ls	3d94 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x52c>  // b.plast
    3958:	ldr	w0, [x24, #80]
    395c:	add	x2, x26, x19, lsl #3
    3960:	ldr	x3, [x24, #72]
    3964:	ldr	x1, [x26, x19, lsl #3]
    3968:	umaddl	x0, w0, w20, x3
    396c:	cmp	x3, x0
    3970:	b.ne	3984 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x11c>  // b.any
    3974:	b	3df4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x58c>
    3978:	add	x3, x3, #0x18
    397c:	cmp	x0, x3
    3980:	b.eq	3df4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x58c>  // b.none
    3984:	ldr	x4, [x3]
    3988:	cmp	x1, x4
    398c:	b.ne	3978 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x110>  // b.any
    3990:	ldr	x23, [x3, #16]
    3994:	str	x2, [sp, #96]
    3998:	mov	x0, x23
    399c:	ldr	x1, [x23]
    39a0:	ldr	x1, [x1, #24]
    39a4:	blr	x1
    39a8:	tst	w0, #0xff
    39ac:	b.eq	3bf8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x390>  // b.none
    39b0:	ldr	w0, [sp, #536]
    39b4:	ldr	w2, [sp, #540]
    39b8:	cmp	w0, w2
    39bc:	b.cs	3a2c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x1c4>  // b.hs, b.nlast
    39c0:	ldr	x3, [sp, #528]
    39c4:	ubfiz	x1, x0, #4, #32
    39c8:	ldr	x6, [x26, x19, lsl #3]
    39cc:	add	x5, x3, x1
    39d0:	str	x6, [x3, x1]
    39d4:	mov	w1, w0
    39d8:	add	x1, x1, #0x1
    39dc:	str	x23, [x5, #8]
    39e0:	cmp	x1, w2, uxtw
    39e4:	b.hi	3db4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x54c>  // b.pmore
    39e8:	add	w0, w0, #0x1
    39ec:	str	w0, [sp, #536]
    39f0:	cbnz	w0, 3934 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xcc>
    39f4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    39f8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    39fc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3a00:	add	x3, x3, #0x0
    3a04:	add	x1, x1, #0x0
    3a08:	add	x0, x0, #0x0
    3a0c:	mov	w2, #0xa7                  	// #167
    3a10:	bl	0 <__assert_fail>
    3a14:	mov	x1, #0x0                   	// #0
    3a18:	mov	x0, x21
    3a1c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3a20:	ldr	w3, [sp, #536]
    3a24:	ldr	w1, [sp, #540]
    3a28:	b	38fc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x94>
    3a2c:	mov	x0, x21
    3a30:	mov	x1, #0x0                   	// #0
    3a34:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3a38:	ldr	w0, [sp, #536]
    3a3c:	ldr	w2, [sp, #540]
    3a40:	b	39c0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x158>
    3a44:	adrp	x26, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3a48:	add	x26, x26, #0x0
    3a4c:	mov	x0, x26
    3a50:	mov	x1, #0x4                   	// #4
    3a54:	adrp	x19, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3a58:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    3a5c:	add	x25, x19, #0x0
    3a60:	mov	x2, x0
    3a64:	mov	x3, x25
    3a68:	mov	x4, #0x2                   	// #2
    3a6c:	mov	x1, x24
    3a70:	mov	x0, x24
    3a74:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    3a78:	mov	x20, x0
    3a7c:	mov	x1, #0x4                   	// #4
    3a80:	mov	x0, x26
    3a84:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    3a88:	adrp	x19, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3a8c:	ldr	x22, [sp, #104]
    3a90:	add	x19, x19, #0x0
    3a94:	mov	x26, x0
    3a98:	cmp	x22, #0x0
    3a9c:	csel	x19, x19, x25, eq  // eq = none
    3aa0:	mov	x0, x19
    3aa4:	bl	0 <strlen>
    3aa8:	mov	x4, x0
    3aac:	mov	x3, x19
    3ab0:	mov	x2, x26
    3ab4:	mov	x1, x22
    3ab8:	mov	x0, x22
    3abc:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    3ac0:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    3ac4:	ldr	x1, [x1]
    3ac8:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    3acc:	mov	x19, x0
    3ad0:	ldr	w1, [sp, #536]
    3ad4:	ldr	w0, [sp, #540]
    3ad8:	cmp	w1, w0
    3adc:	b.cs	3be0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x378>  // b.hs, b.nlast
    3ae0:	ldr	x4, [sp, #528]
    3ae4:	ubfiz	x3, x1, #4, #32
    3ae8:	mov	w2, w1
    3aec:	add	x5, x4, x3
    3af0:	add	x2, x2, #0x1
    3af4:	str	x20, [x4, x3]
    3af8:	cmp	x2, w0, uxtw
    3afc:	str	x19, [x5, #8]
    3b00:	b.hi	3db4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x54c>  // b.pmore
    3b04:	add	w1, w1, #0x1
    3b08:	str	w1, [sp, #536]
    3b0c:	cbz	w1, 39f4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x18c>
    3b10:	ldr	x0, [sp, #104]
    3b14:	add	x1, x24, #0x80
    3b18:	mov	x2, x21
    3b1c:	mov	x5, #0x0                   	// #0
    3b20:	add	x4, x0, #0x80
    3b24:	mov	w3, #0x0                   	// #0
    3b28:	ldr	x0, [sp, #112]
    3b2c:	bl	2438 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    3b30:	and	w19, w0, #0xff
    3b34:	ldr	x0, [sp, #528]
    3b38:	add	x21, x21, #0x10
    3b3c:	cmp	x0, x21
    3b40:	b.eq	3b6c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x304>  // b.none
    3b44:	bl	0 <free>
    3b48:	mov	w0, w19
    3b4c:	ldp	x29, x30, [sp]
    3b50:	ldp	x19, x20, [sp, #16]
    3b54:	ldp	x21, x22, [sp, #32]
    3b58:	ldp	x23, x24, [sp, #48]
    3b5c:	ldp	x25, x26, [sp, #64]
    3b60:	ldp	x27, x28, [sp, #80]
    3b64:	add	sp, sp, #0x2a0
    3b68:	ret
    3b6c:	mov	w0, w19
    3b70:	ldp	x29, x30, [sp]
    3b74:	ldp	x19, x20, [sp, #16]
    3b78:	ldp	x21, x22, [sp, #32]
    3b7c:	ldp	x23, x24, [sp, #48]
    3b80:	ldp	x25, x26, [sp, #64]
    3b84:	ldp	x27, x28, [sp, #80]
    3b88:	add	sp, sp, #0x2a0
    3b8c:	ret
    3b90:	add	x20, sp, #0x210
    3b94:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3b98:	mov	x0, x20
    3b9c:	add	x1, x1, #0x0
    3ba0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3ba4:	mov	w19, #0x1                   	// #1
    3ba8:	ldr	x3, [x25]
    3bac:	mov	x2, x20
    3bb0:	add	x0, sp, #0x1f0
    3bb4:	mov	x1, #0x1                   	// #1
    3bb8:	str	x3, [sp, #496]
    3bbc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3bc0:	mov	w0, w19
    3bc4:	ldp	x29, x30, [sp]
    3bc8:	ldp	x19, x20, [sp, #16]
    3bcc:	ldp	x23, x24, [sp, #48]
    3bd0:	ldp	x25, x26, [sp, #64]
    3bd4:	ldp	x27, x28, [sp, #80]
    3bd8:	add	sp, sp, #0x2a0
    3bdc:	ret
    3be0:	mov	x0, x21
    3be4:	mov	x1, #0x0                   	// #0
    3be8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3bec:	ldr	w1, [sp, #536]
    3bf0:	ldr	w0, [sp, #540]
    3bf4:	b	3ae0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x278>
    3bf8:	add	x19, sp, #0xb0
    3bfc:	add	x20, sp, #0xc8
    3c00:	mov	x0, x19
    3c04:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3c08:	add	x1, x1, #0x0
    3c0c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3c10:	mov	w3, #0x109                 	// #265
    3c14:	mov	x8, x20
    3c18:	stp	xzr, xzr, [sp, #144]
    3c1c:	mov	x0, x19
    3c20:	add	x23, sp, #0xe0
    3c24:	add	x1, sp, #0x90
    3c28:	str	w22, [sp, #144]
    3c2c:	strh	w3, [sp, #160]
    3c30:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3c34:	add	x19, sp, #0xf8
    3c38:	mov	x0, x23
    3c3c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3c40:	add	x1, x1, #0x0
    3c44:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3c48:	add	x27, sp, #0x158
    3c4c:	mov	x4, x19
    3c50:	mov	x1, x23
    3c54:	mov	x0, x20
    3c58:	mov	x8, x19
    3c5c:	str	x4, [sp, #120]
    3c60:	add	x20, sp, #0x1d0
    3c64:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3c68:	add	x19, sp, #0x1f0
    3c6c:	ldr	x2, [sp, #96]
    3c70:	add	x3, sp, #0x140
    3c74:	add	x5, sp, #0x110
    3c78:	str	x3, [sp, #112]
    3c7c:	mov	x8, x20
    3c80:	add	x28, sp, #0x170
    3c84:	ldr	x0, [x2]
    3c88:	add	x2, sp, #0x128
    3c8c:	stp	x5, x2, [sp, #96]
    3c90:	add	x23, sp, #0x188
    3c94:	add	x26, sp, #0x1a0
    3c98:	ldr	x1, [x0]
    3c9c:	add	x22, sp, #0x1b8
    3ca0:	ldr	x1, [x1, #48]
    3ca4:	blr	x1
    3ca8:	ldr	x5, [sp, #96]
    3cac:	mov	x1, x20
    3cb0:	mov	x0, x5
    3cb4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3cb8:	ldp	x0, x2, [sp, #96]
    3cbc:	ldr	x4, [sp, #120]
    3cc0:	mov	x8, x2
    3cc4:	mov	x1, x0
    3cc8:	mov	x0, x4
    3ccc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3cd0:	ldr	x3, [sp, #112]
    3cd4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3cd8:	add	x1, x1, #0x0
    3cdc:	str	x3, [sp, #96]
    3ce0:	mov	x0, x3
    3ce4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3ce8:	ldp	x0, x8, [sp, #96]
    3cec:	mov	x1, x0
    3cf0:	mov	x0, x8
    3cf4:	mov	x8, x27
    3cf8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3cfc:	ldr	x0, [x24]
    3d00:	mov	x8, x19
    3d04:	ldr	x1, [x0]
    3d08:	ldr	x1, [x1, #48]
    3d0c:	blr	x1
    3d10:	mov	x1, x19
    3d14:	mov	x0, x28
    3d18:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d1c:	add	x19, x19, #0x10
    3d20:	mov	x8, x23
    3d24:	mov	x1, x28
    3d28:	mov	x0, x27
    3d2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d30:	mov	x0, x26
    3d34:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d38:	add	x1, x1, #0x0
    3d3c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d40:	mov	x8, x22
    3d44:	mov	x1, x26
    3d48:	mov	x0, x23
    3d4c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d50:	ldr	x3, [x25]
    3d54:	add	x0, sp, #0x88
    3d58:	mov	x2, x22
    3d5c:	mov	x1, #0x1                   	// #1
    3d60:	str	x3, [sp, #136]
    3d64:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3d68:	ldr	x0, [sp, #496]
    3d6c:	cmp	x0, x19
    3d70:	b.eq	3d78 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x510>  // b.none
    3d74:	bl	0 <_ZdlPv>
    3d78:	ldr	x0, [sp, #464]
    3d7c:	add	x20, x20, #0x10
    3d80:	cmp	x0, x20
    3d84:	b.eq	3d8c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x524>  // b.none
    3d88:	bl	0 <_ZdlPv>
    3d8c:	mov	w19, #0x1                   	// #1
    3d90:	b	3b34 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x2cc>
    3d94:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3d9c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3da0:	add	x3, x3, #0x0
    3da4:	add	x1, x1, #0x0
    3da8:	add	x0, x0, #0x0
    3dac:	mov	w2, #0xfa                  	// #250
    3db0:	bl	0 <__assert_fail>
    3db4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3db8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3dbc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3dc0:	add	x3, x3, #0x0
    3dc4:	add	x1, x1, #0x0
    3dc8:	add	x0, x0, #0x0
    3dcc:	mov	w2, #0x43                  	// #67
    3dd0:	bl	0 <__assert_fail>
    3dd4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3dd8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3ddc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3de0:	add	x3, x3, #0x0
    3de4:	add	x1, x1, #0x0
    3de8:	add	x0, x0, #0x0
    3dec:	mov	w2, #0x95                  	// #149
    3df0:	bl	0 <__assert_fail>
    3df4:	mov	x0, #0x0                   	// #0
    3df8:	ldr	x0, [x0, #16]
    3dfc:	brk	#0x3e8

0000000000003e00 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>:
    3e00:	stp	x29, x30, [sp, #-192]!
    3e04:	mov	x2, x1
    3e08:	mov	x3, x0
    3e0c:	mov	x29, sp
    3e10:	ldr	x5, [x1]
    3e14:	stp	x19, x20, [sp, #16]
    3e18:	cbz	x5, 3e74 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x74>
    3e1c:	ldr	x0, [x1, #8]
    3e20:	cbnz	x0, 3f90 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x190>
    3e24:	ldp	x0, x1, [x3, #272]
    3e28:	cmp	x1, x0
    3e2c:	b.eq	3ee4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xe4>  // b.none
    3e30:	ldur	x0, [x1, #-8]
    3e34:	add	x0, x0, #0x18
    3e38:	ldp	x1, x3, [x0, #8]
    3e3c:	cmp	x1, x3
    3e40:	b.eq	3efc <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xfc>  // b.none
    3e44:	ldp	x3, x4, [x2]
    3e48:	str	xzr, [x2]
    3e4c:	str	x3, [x1]
    3e50:	mov	w19, #0x0                   	// #0
    3e54:	str	xzr, [x2, #8]
    3e58:	add	x3, x1, #0x10
    3e5c:	str	x4, [x1, #8]
    3e60:	str	x3, [x0, #8]
    3e64:	mov	w0, w19
    3e68:	ldp	x19, x20, [sp, #16]
    3e6c:	ldp	x29, x30, [sp], #192
    3e70:	ret
    3e74:	ldp	x4, x1, [x0, #272]
    3e78:	cmp	x1, x4
    3e7c:	b.ne	3e30 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x30>  // b.any
    3e80:	ldr	x1, [x2, #8]
    3e84:	ldr	x4, [x0, #328]
    3e88:	cbz	x1, 3ee8 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xe8>
    3e8c:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3e90:	cmp	x4, #0x0
    3e94:	add	x5, x4, #0x80
    3e98:	cset	w3, eq  // eq = none
    3e9c:	ldr	d0, [x2]
    3ea0:	add	x2, sp, #0x30
    3ea4:	add	x20, x2, #0x10
    3ea8:	csel	x4, x5, x4, ne  // ne = any
    3eac:	mov	x5, #0x0                   	// #0
    3eb0:	str	x20, [sp, #48]
    3eb4:	str	d0, [sp, #56]
    3eb8:	bl	2e80 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>
    3ebc:	ldr	x1, [sp, #48]
    3ec0:	and	w19, w0, #0xff
    3ec4:	cmp	x1, x20
    3ec8:	b.eq	3e64 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x64>  // b.none
    3ecc:	mov	x0, x1
    3ed0:	bl	0 <free>
    3ed4:	mov	w0, w19
    3ed8:	ldp	x19, x20, [sp, #16]
    3edc:	ldp	x29, x30, [sp], #192
    3ee0:	ret
    3ee4:	ldr	x4, [x3, #328]
    3ee8:	cbz	x4, 3f08 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x108>
    3eec:	add	x0, x4, #0x80
    3ef0:	ldp	x1, x3, [x0, #8]
    3ef4:	cmp	x1, x3
    3ef8:	b.ne	3e44 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x44>  // b.any
    3efc:	mov	w19, #0x0                   	// #0
    3f00:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3f04:	b	3e64 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x64>
    3f08:	str	xzr, [x2]
    3f0c:	mov	x0, x3
    3f10:	add	x1, sp, #0x30
    3f14:	str	x5, [sp, #48]
    3f18:	bl	1ad0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
    3f1c:	and	w19, w0, #0xff
    3f20:	ldr	x20, [sp, #48]
    3f24:	cbz	x20, 3e64 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x64>
    3f28:	ldr	x0, [x20, #88]
    3f2c:	stp	x21, x22, [sp, #32]
    3f30:	add	x1, x20, #0x68
    3f34:	add	x22, x20, #0x58
    3f38:	cmp	x0, x1
    3f3c:	b.eq	3f44 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x144>  // b.none
    3f40:	bl	0 <free>
    3f44:	ldr	x0, [x20, #72]
    3f48:	add	x21, x20, #0x48
    3f4c:	cmp	x22, x0
    3f50:	b.eq	3f58 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x158>  // b.none
    3f54:	bl	0 <free>
    3f58:	ldr	x0, [x20, #56]
    3f5c:	cmp	x21, x0
    3f60:	b.eq	3f68 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x168>  // b.none
    3f64:	bl	0 <free>
    3f68:	ldr	x0, [x20, #8]
    3f6c:	add	x1, x20, #0x18
    3f70:	cmp	x0, x1
    3f74:	b.eq	3f7c <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x17c>  // b.none
    3f78:	bl	0 <free>
    3f7c:	mov	x0, x20
    3f80:	mov	x1, #0x80                  	// #128
    3f84:	bl	0 <_ZdlPvm>
    3f88:	ldp	x21, x22, [sp, #32]
    3f8c:	b	3e64 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x64>
    3f90:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3f94:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3f98:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3f9c:	add	x3, x3, #0x0
    3fa0:	add	x1, x1, #0x0
    3fa4:	add	x0, x0, #0x0
    3fa8:	mov	w2, #0x159                 	// #345
    3fac:	stp	x21, x22, [sp, #32]
    3fb0:	bl	0 <__assert_fail>
    3fb4:	nop

0000000000003fb8 <_ZNK4llvm11ForeachLoop4dumpEv>:
    3fb8:	stp	x29, x30, [sp, #-112]!
    3fbc:	mov	x29, sp
    3fc0:	stp	x19, x20, [sp, #16]
    3fc4:	mov	x20, x0
    3fc8:	stp	x21, x22, [sp, #32]
    3fcc:	bl	0 <_ZN4llvm4errsEv>
    3fd0:	ldp	x1, x2, [x0, #16]
    3fd4:	sub	x1, x1, x2
    3fd8:	cmp	x1, #0x7
    3fdc:	b.ls	41c8 <_ZNK4llvm11ForeachLoop4dumpEv+0x210>  // b.plast
    3fe0:	mov	x19, x0
    3fe4:	mov	x0, #0x6f66                	// #28518
    3fe8:	movk	x0, #0x6572, lsl #16
    3fec:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    3ff0:	movk	x0, #0x6361, lsl #32
    3ff4:	add	x1, x1, #0x0
    3ff8:	movk	x0, #0x2068, lsl #48
    3ffc:	str	x0, [x2]
    4000:	ldr	x0, [x19, #24]
    4004:	add	x0, x0, #0x8
    4008:	str	x0, [x19, #24]
    400c:	ldr	x0, [x20, #8]
    4010:	ldr	x2, [x0]
    4014:	ldr	x2, [x2, #40]
    4018:	cmp	x2, x1
    401c:	b.ne	41f8 <_ZNK4llvm11ForeachLoop4dumpEv+0x240>  // b.any
    4020:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    4024:	add	x21, sp, #0x30
    4028:	mov	x2, x1
    402c:	mov	x1, x0
    4030:	cbz	x0, 4170 <_ZNK4llvm11ForeachLoop4dumpEv+0x1b8>
    4034:	add	x4, x21, #0x10
    4038:	add	x2, x0, x2
    403c:	mov	w3, #0x0                   	// #0
    4040:	mov	x0, x21
    4044:	str	x4, [sp, #48]
    4048:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    404c:	ldp	x1, x2, [sp, #48]
    4050:	mov	x0, x19
    4054:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4058:	mov	x19, x0
    405c:	ldp	x1, x2, [x0, #16]
    4060:	sub	x1, x1, x2
    4064:	cmp	x1, #0x2
    4068:	b.ls	419c <_ZNK4llvm11ForeachLoop4dumpEv+0x1e4>  // b.plast
    406c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4070:	add	x0, x0, #0x0
    4074:	ldrh	w1, [x0]
    4078:	ldrb	w0, [x0, #2]
    407c:	strh	w1, [x2]
    4080:	strb	w0, [x2, #2]
    4084:	ldr	x0, [x19, #24]
    4088:	add	x0, x0, #0x3
    408c:	str	x0, [x19, #24]
    4090:	ldr	x0, [x20, #16]
    4094:	add	x22, sp, #0x50
    4098:	mov	x8, x22
    409c:	ldr	x1, [x0]
    40a0:	ldr	x1, [x1, #40]
    40a4:	blr	x1
    40a8:	ldp	x1, x2, [sp, #80]
    40ac:	mov	x0, x19
    40b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    40b4:	mov	x1, x0
    40b8:	ldp	x2, x3, [x0, #16]
    40bc:	sub	x2, x2, x3
    40c0:	cmp	x2, #0x5
    40c4:	b.ls	41b4 <_ZNK4llvm11ForeachLoop4dumpEv+0x1fc>  // b.plast
    40c8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    40cc:	add	x0, x0, #0x0
    40d0:	ldr	w2, [x0]
    40d4:	ldrh	w0, [x0, #4]
    40d8:	str	w2, [x3]
    40dc:	strh	w0, [x3, #4]
    40e0:	ldr	x0, [x1, #24]
    40e4:	add	x0, x0, #0x6
    40e8:	str	x0, [x1, #24]
    40ec:	ldr	x0, [sp, #80]
    40f0:	add	x22, x22, #0x10
    40f4:	cmp	x0, x22
    40f8:	b.eq	4100 <_ZNK4llvm11ForeachLoop4dumpEv+0x148>  // b.none
    40fc:	bl	0 <_ZdlPv>
    4100:	ldr	x0, [sp, #48]
    4104:	add	x21, x21, #0x10
    4108:	cmp	x0, x21
    410c:	b.eq	4114 <_ZNK4llvm11ForeachLoop4dumpEv+0x15c>  // b.none
    4110:	bl	0 <_ZdlPv>
    4114:	ldp	x19, x20, [x20, #24]
    4118:	cmp	x19, x20
    411c:	b.eq	4134 <_ZNK4llvm11ForeachLoop4dumpEv+0x17c>  // b.none
    4120:	mov	x0, x19
    4124:	add	x19, x19, #0x10
    4128:	bl	4230 <_ZNK4llvm12RecordsEntry4dumpEv>
    412c:	cmp	x20, x19
    4130:	b.ne	4120 <_ZNK4llvm11ForeachLoop4dumpEv+0x168>  // b.any
    4134:	bl	0 <_ZN4llvm4errsEv>
    4138:	mov	x1, x0
    413c:	ldp	x2, x3, [x0, #16]
    4140:	sub	x2, x2, x3
    4144:	cmp	x2, #0x1
    4148:	b.ls	420c <_ZNK4llvm11ForeachLoop4dumpEv+0x254>  // b.plast
    414c:	mov	w0, #0xa7d                 	// #2685
    4150:	strh	w0, [x3]
    4154:	ldr	x0, [x1, #24]
    4158:	ldp	x19, x20, [sp, #16]
    415c:	add	x0, x0, #0x2
    4160:	str	x0, [x1, #24]
    4164:	ldp	x21, x22, [sp, #32]
    4168:	ldp	x29, x30, [sp], #112
    416c:	ret
    4170:	add	x1, x21, #0x10
    4174:	mov	x2, #0x0                   	// #0
    4178:	mov	x0, x19
    417c:	stp	x1, xzr, [sp, #48]
    4180:	strb	wzr, [sp, #64]
    4184:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4188:	ldp	x1, x2, [x0, #16]
    418c:	mov	x19, x0
    4190:	sub	x1, x1, x2
    4194:	cmp	x1, #0x2
    4198:	b.hi	406c <_ZNK4llvm11ForeachLoop4dumpEv+0xb4>  // b.pmore
    419c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    41a0:	mov	x2, #0x3                   	// #3
    41a4:	add	x1, x1, #0x0
    41a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    41ac:	mov	x19, x0
    41b0:	b	4090 <_ZNK4llvm11ForeachLoop4dumpEv+0xd8>
    41b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    41b8:	mov	x2, #0x6                   	// #6
    41bc:	add	x1, x1, #0x0
    41c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    41c4:	b	40ec <_ZNK4llvm11ForeachLoop4dumpEv+0x134>
    41c8:	mov	x2, #0x8                   	// #8
    41cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    41d0:	add	x1, x1, #0x0
    41d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    41d8:	mov	x19, x0
    41dc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    41e0:	ldr	x0, [x20, #8]
    41e4:	add	x1, x1, #0x0
    41e8:	ldr	x2, [x0]
    41ec:	ldr	x2, [x2, #40]
    41f0:	cmp	x2, x1
    41f4:	b.eq	4020 <_ZNK4llvm11ForeachLoop4dumpEv+0x68>  // b.none
    41f8:	add	x21, sp, #0x30
    41fc:	mov	x8, x21
    4200:	blr	x2
    4204:	ldp	x1, x2, [sp, #48]
    4208:	b	4050 <_ZNK4llvm11ForeachLoop4dumpEv+0x98>
    420c:	mov	x2, #0x2                   	// #2
    4210:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4214:	add	x1, x1, #0x0
    4218:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    421c:	ldp	x19, x20, [sp, #16]
    4220:	ldp	x21, x22, [sp, #32]
    4224:	ldp	x29, x30, [sp], #112
    4228:	ret
    422c:	nop

0000000000004230 <_ZNK4llvm12RecordsEntry4dumpEv>:
    4230:	stp	x29, x30, [sp, #-32]!
    4234:	mov	x29, sp
    4238:	str	x19, [sp, #16]
    423c:	mov	x19, x0
    4240:	ldr	x0, [x0, #8]
    4244:	cbz	x0, 424c <_ZNK4llvm12RecordsEntry4dumpEv+0x1c>
    4248:	bl	3fb8 <_ZNK4llvm11ForeachLoop4dumpEv>
    424c:	ldr	x0, [x19]
    4250:	cbz	x0, 4260 <_ZNK4llvm12RecordsEntry4dumpEv+0x30>
    4254:	ldr	x19, [sp, #16]
    4258:	ldp	x29, x30, [sp], #32
    425c:	b	0 <_ZNK4llvm6Record4dumpEv>
    4260:	ldr	x19, [sp, #16]
    4264:	ldp	x29, x30, [sp], #32
    4268:	ret
    426c:	nop

0000000000004270 <_ZNK4llvm10MultiClass4dumpEv>:
    4270:	stp	x29, x30, [sp, #-32]!
    4274:	mov	x29, sp
    4278:	stp	x19, x20, [sp, #16]
    427c:	mov	x20, x0
    4280:	bl	0 <_ZN4llvm4errsEv>
    4284:	ldp	x2, x3, [x0, #16]
    4288:	sub	x2, x2, x3
    428c:	cmp	x2, #0x7
    4290:	b.ls	4328 <_ZNK4llvm10MultiClass4dumpEv+0xb8>  // b.plast
    4294:	mov	x1, x0
    4298:	mov	x0, #0x6552                	// #25938
    429c:	movk	x0, #0x6f63, lsl #16
    42a0:	movk	x0, #0x6472, lsl #32
    42a4:	movk	x0, #0xa3a, lsl #48
    42a8:	str	x0, [x3]
    42ac:	ldr	x0, [x1, #24]
    42b0:	add	x0, x0, #0x8
    42b4:	str	x0, [x1, #24]
    42b8:	mov	x0, x20
    42bc:	bl	0 <_ZNK4llvm6Record4dumpEv>
    42c0:	bl	0 <_ZN4llvm4errsEv>
    42c4:	mov	x1, x0
    42c8:	ldp	x2, x3, [x0, #16]
    42cc:	sub	x2, x2, x3
    42d0:	cmp	x2, #0x5
    42d4:	b.ls	4358 <_ZNK4llvm10MultiClass4dumpEv+0xe8>  // b.plast
    42d8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    42dc:	add	x0, x0, #0x0
    42e0:	ldr	w2, [x0]
    42e4:	ldrh	w0, [x0, #4]
    42e8:	str	w2, [x3]
    42ec:	strh	w0, [x3, #4]
    42f0:	ldr	x0, [x1, #24]
    42f4:	add	x0, x0, #0x6
    42f8:	str	x0, [x1, #24]
    42fc:	ldp	x19, x20, [x20, #128]
    4300:	cmp	x19, x20
    4304:	b.eq	431c <_ZNK4llvm10MultiClass4dumpEv+0xac>  // b.none
    4308:	mov	x0, x19
    430c:	add	x19, x19, #0x10
    4310:	bl	4230 <_ZNK4llvm12RecordsEntry4dumpEv>
    4314:	cmp	x20, x19
    4318:	b.ne	4308 <_ZNK4llvm10MultiClass4dumpEv+0x98>  // b.any
    431c:	ldp	x19, x20, [sp, #16]
    4320:	ldp	x29, x30, [sp], #32
    4324:	ret
    4328:	mov	x2, #0x8                   	// #8
    432c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4330:	add	x1, x1, #0x0
    4334:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4338:	mov	x0, x20
    433c:	bl	0 <_ZNK4llvm6Record4dumpEv>
    4340:	bl	0 <_ZN4llvm4errsEv>
    4344:	mov	x1, x0
    4348:	ldp	x2, x3, [x0, #16]
    434c:	sub	x2, x2, x3
    4350:	cmp	x2, #0x5
    4354:	b.hi	42d8 <_ZNK4llvm10MultiClass4dumpEv+0x68>  // b.pmore
    4358:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    435c:	mov	x2, #0x6                   	// #6
    4360:	add	x1, x1, #0x0
    4364:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4368:	b	42fc <_ZNK4llvm10MultiClass4dumpEv+0x8c>
    436c:	nop

0000000000004370 <_ZNK4llvm22SubMultiClassReference4dumpEv>:
    4370:	stp	x29, x30, [sp, #-32]!
    4374:	mov	x29, sp
    4378:	stp	x19, x20, [sp, #16]
    437c:	mov	x20, x0
    4380:	bl	0 <_ZN4llvm4errsEv>
    4384:	ldp	x2, x3, [x0, #16]
    4388:	sub	x2, x2, x3
    438c:	cmp	x2, #0xb
    4390:	b.ls	4434 <_ZNK4llvm22SubMultiClassReference4dumpEv+0xc4>  // b.plast
    4394:	mov	x1, x0
    4398:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    439c:	add	x0, x0, #0x0
    43a0:	ldr	x2, [x0]
    43a4:	str	x2, [x3]
    43a8:	ldr	w0, [x0, #8]
    43ac:	str	w0, [x3, #8]
    43b0:	ldr	x0, [x1, #24]
    43b4:	add	x0, x0, #0xc
    43b8:	str	x0, [x1, #24]
    43bc:	ldr	x0, [x20, #16]
    43c0:	bl	4270 <_ZNK4llvm10MultiClass4dumpEv>
    43c4:	bl	0 <_ZN4llvm4errsEv>
    43c8:	mov	x1, x0
    43cc:	ldp	x2, x3, [x0, #16]
    43d0:	sub	x2, x2, x3
    43d4:	cmp	x2, #0xe
    43d8:	b.ls	4464 <_ZNK4llvm22SubMultiClassReference4dumpEv+0xf4>  // b.plast
    43dc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    43e0:	add	x0, x0, #0x0
    43e4:	ldr	x2, [x0]
    43e8:	str	x2, [x3]
    43ec:	ldur	x0, [x0, #7]
    43f0:	stur	x0, [x3, #7]
    43f4:	ldr	x0, [x1, #24]
    43f8:	add	x0, x0, #0xf
    43fc:	str	x0, [x1, #24]
    4400:	ldr	x19, [x20, #24]
    4404:	ldr	w20, [x20, #32]
    4408:	add	x20, x19, x20, lsl #3
    440c:	cmp	x19, x20
    4410:	b.eq	4428 <_ZNK4llvm22SubMultiClassReference4dumpEv+0xb8>  // b.none
    4414:	nop
    4418:	ldr	x0, [x19], #8
    441c:	bl	0 <_ZNK4llvm4Init4dumpEv>
    4420:	cmp	x20, x19
    4424:	b.ne	4418 <_ZNK4llvm22SubMultiClassReference4dumpEv+0xa8>  // b.any
    4428:	ldp	x19, x20, [sp, #16]
    442c:	ldp	x29, x30, [sp], #32
    4430:	ret
    4434:	mov	x2, #0xc                   	// #12
    4438:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    443c:	add	x1, x1, #0x0
    4440:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4444:	ldr	x0, [x20, #16]
    4448:	bl	4270 <_ZNK4llvm10MultiClass4dumpEv>
    444c:	bl	0 <_ZN4llvm4errsEv>
    4450:	mov	x1, x0
    4454:	ldp	x2, x3, [x0, #16]
    4458:	sub	x2, x2, x3
    445c:	cmp	x2, #0xe
    4460:	b.hi	43dc <_ZNK4llvm22SubMultiClassReference4dumpEv+0x6c>  // b.pmore
    4464:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4468:	mov	x2, #0xf                   	// #15
    446c:	add	x1, x1, #0x0
    4470:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4474:	b	4400 <_ZNK4llvm22SubMultiClassReference4dumpEv+0x90>

0000000000004478 <_ZN4llvm8TGParser12ParseClassIDEv>:
    4478:	stp	x29, x30, [sp, #-272]!
    447c:	mov	x29, sp
    4480:	stp	x19, x20, [sp, #16]
    4484:	mov	x20, x0
    4488:	ldr	w0, [x0, #40]
    448c:	stp	x21, x22, [sp, #32]
    4490:	cmp	w0, #0x48
    4494:	b.ne	48bc <_ZN4llvm8TGParser12ParseClassIDEv+0x444>  // b.any
    4498:	ldr	x0, [x20, #344]
    449c:	stp	x23, x24, [sp, #48]
    44a0:	stp	x25, x26, [sp, #64]
    44a4:	add	x25, x0, #0x8
    44a8:	ldr	x19, [x0, #16]
    44ac:	ldp	x24, x21, [x20, #48]
    44b0:	cbz	x19, 4528 <_ZN4llvm8TGParser12ParseClassIDEv+0xb0>
    44b4:	cbz	x21, 4808 <_ZN4llvm8TGParser12ParseClassIDEv+0x390>
    44b8:	mov	x23, x25
    44bc:	nop
    44c0:	ldp	x0, x22, [x19, #32]
    44c4:	cmp	x21, x22
    44c8:	b.cc	488c <_ZN4llvm8TGParser12ParseClassIDEv+0x414>  // b.lo, b.ul, b.last
    44cc:	cbz	x22, 489c <_ZN4llvm8TGParser12ParseClassIDEv+0x424>
    44d0:	mov	x2, x22
    44d4:	mov	x1, x24
    44d8:	bl	0 <memcmp>
    44dc:	cbnz	w0, 48b0 <_ZN4llvm8TGParser12ParseClassIDEv+0x438>
    44e0:	cmp	x21, x22
    44e4:	b.ne	489c <_ZN4llvm8TGParser12ParseClassIDEv+0x424>  // b.any
    44e8:	mov	x23, x19
    44ec:	ldr	x19, [x19, #16]
    44f0:	cbnz	x19, 44c0 <_ZN4llvm8TGParser12ParseClassIDEv+0x48>
    44f4:	cmp	x25, x23
    44f8:	b.eq	4528 <_ZN4llvm8TGParser12ParseClassIDEv+0xb0>  // b.none
    44fc:	ldp	x1, x19, [x23, #32]
    4500:	cmp	x21, x19
    4504:	b.hi	4838 <_ZN4llvm8TGParser12ParseClassIDEv+0x3c0>  // b.pmore
    4508:	mov	x0, x24
    450c:	mov	x2, x21
    4510:	bl	0 <memcmp>
    4514:	cbnz	w0, 484c <_ZN4llvm8TGParser12ParseClassIDEv+0x3d4>
    4518:	cmp	x21, x19
    451c:	b.eq	4850 <_ZN4llvm8TGParser12ParseClassIDEv+0x3d8>  // b.none
    4520:	cmp	x21, x19
    4524:	b.cs	4850 <_ZN4llvm8TGParser12ParseClassIDEv+0x3d8>  // b.hs, b.nlast
    4528:	add	x19, sp, #0xf0
    452c:	add	x1, x21, #0x15
    4530:	add	x2, x19, #0x10
    4534:	stp	x2, xzr, [sp, #240]
    4538:	add	x2, x20, #0x30
    453c:	mov	x0, x19
    4540:	stp	x27, x28, [sp, #80]
    4544:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
    4548:	str	x2, [sp, #96]
    454c:	strb	wzr, [sp, #256]
    4550:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    4554:	ldr	x0, [sp, #248]
    4558:	sub	x0, x21, x0
    455c:	cmp	x0, #0x14
    4560:	b.ls	4974 <_ZN4llvm8TGParser12ParseClassIDEv+0x4fc>  // b.plast
    4564:	mov	x2, #0x15                  	// #21
    4568:	mov	x0, x19
    456c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4570:	add	x1, x1, #0x0
    4574:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4578:	ldp	x1, x2, [x20, #48]
    457c:	mov	x0, x19
    4580:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4584:	ldr	x0, [sp, #248]
    4588:	cmp	x0, x21
    458c:	b.eq	4974 <_ZN4llvm8TGParser12ParseClassIDEv+0x4fc>  // b.none
    4590:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4594:	add	x1, x0, #0x0
    4598:	mov	x2, #0x1                   	// #1
    459c:	mov	x0, x19
    45a0:	add	x22, sp, #0x90
    45a4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    45a8:	mov	x1, x0
    45ac:	add	x2, x22, #0x10
    45b0:	str	x2, [sp, #144]
    45b4:	ldr	x2, [x1], #16
    45b8:	cmp	x2, x1
    45bc:	b.eq	4940 <_ZN4llvm8TGParser12ParseClassIDEv+0x4c8>  // b.none
    45c0:	ldr	x3, [x0, #16]
    45c4:	str	x2, [sp, #144]
    45c8:	str	x3, [sp, #160]
    45cc:	ldr	x2, [x0, #8]
    45d0:	str	x2, [sp, #152]
    45d4:	stp	x1, xzr, [x0]
    45d8:	add	x1, x19, #0x10
    45dc:	strb	wzr, [x0, #16]
    45e0:	ldr	x0, [sp, #240]
    45e4:	cmp	x0, x1
    45e8:	b.eq	45f0 <_ZN4llvm8TGParser12ParseClassIDEv+0x178>  // b.none
    45ec:	bl	0 <_ZdlPv>
    45f0:	ldr	w0, [x20, #40]
    45f4:	sub	w0, w0, #0x48
    45f8:	cmp	w0, #0x3
    45fc:	b.hi	4980 <_ZN4llvm8TGParser12ParseClassIDEv+0x508>  // b.pmore
    4600:	ldr	x28, [x20, #240]
    4604:	add	x0, x20, #0xe8
    4608:	str	x0, [sp, #104]
    460c:	mov	x21, x0
    4610:	cbz	x28, 4908 <_ZN4llvm8TGParser12ParseClassIDEv+0x490>
    4614:	ldp	x25, x26, [x20, #48]
    4618:	mov	x24, #0x7fffffff            	// #2147483647
    461c:	mov	x23, #0xffffffff80000000    	// #-2147483648
    4620:	ldr	x27, [x28, #40]
    4624:	cmp	x27, x26
    4628:	csel	x2, x27, x26, ls  // ls = plast
    462c:	cbz	x2, 4640 <_ZN4llvm8TGParser12ParseClassIDEv+0x1c8>
    4630:	ldr	x0, [x28, #32]
    4634:	mov	x1, x25
    4638:	bl	0 <memcmp>
    463c:	cbnz	w0, 4654 <_ZN4llvm8TGParser12ParseClassIDEv+0x1dc>
    4640:	sub	x0, x27, x26
    4644:	cmp	x0, x24
    4648:	b.gt	4658 <_ZN4llvm8TGParser12ParseClassIDEv+0x1e0>
    464c:	cmp	x0, x23
    4650:	b.lt	482c <_ZN4llvm8TGParser12ParseClassIDEv+0x3b4>  // b.tstop
    4654:	tbnz	w0, #31, 482c <_ZN4llvm8TGParser12ParseClassIDEv+0x3b4>
    4658:	mov	x21, x28
    465c:	ldr	x28, [x28, #16]
    4660:	cbnz	x28, 4620 <_ZN4llvm8TGParser12ParseClassIDEv+0x1a8>
    4664:	ldr	x0, [sp, #104]
    4668:	cmp	x0, x21
    466c:	b.eq	4908 <_ZN4llvm8TGParser12ParseClassIDEv+0x490>  // b.none
    4670:	ldr	x0, [sp, #96]
    4674:	add	x1, x21, #0x20
    4678:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
    467c:	tbnz	w0, #31, 4908 <_ZN4llvm8TGParser12ParseClassIDEv+0x490>
    4680:	ldr	x0, [x21, #64]
    4684:	cbz	x0, 494c <_ZN4llvm8TGParser12ParseClassIDEv+0x4d4>
    4688:	ldp	x1, x2, [sp, #144]
    468c:	add	x21, sp, #0xb0
    4690:	add	x4, x21, #0x10
    4694:	mov	x0, x21
    4698:	mov	w3, #0x0                   	// #0
    469c:	str	x4, [sp, #176]
    46a0:	add	x2, x1, x2
    46a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    46a8:	ldr	x1, [sp, #184]
    46ac:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    46b0:	sub	x0, x0, x1
    46b4:	cmp	x0, #0x2c
    46b8:	b.ls	4974 <_ZN4llvm8TGParser12ParseClassIDEv+0x4fc>  // b.plast
    46bc:	mov	x0, x21
    46c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    46c4:	mov	x2, #0x2d                  	// #45
    46c8:	add	x1, x1, #0x0
    46cc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    46d0:	ldr	w0, [x20, #40]
    46d4:	sub	w0, w0, #0x48
    46d8:	cmp	w0, #0x3
    46dc:	b.hi	4980 <_ZN4llvm8TGParser12ParseClassIDEv+0x508>  // b.pmore
    46e0:	ldp	x1, x2, [x20, #48]
    46e4:	mov	x0, x21
    46e8:	add	x23, sp, #0xd0
    46ec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    46f0:	mov	x1, x0
    46f4:	add	x2, x23, #0x10
    46f8:	str	x2, [sp, #208]
    46fc:	ldr	x2, [x1], #16
    4700:	cmp	x2, x1
    4704:	b.eq	4934 <_ZN4llvm8TGParser12ParseClassIDEv+0x4bc>  // b.none
    4708:	str	x2, [sp, #208]
    470c:	ldr	x2, [x0, #16]
    4710:	str	x2, [sp, #224]
    4714:	ldr	x2, [x0, #8]
    4718:	str	x2, [sp, #216]
    471c:	stp	x1, xzr, [x0]
    4720:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    4724:	strb	wzr, [x0, #16]
    4728:	ldr	x0, [sp, #216]
    472c:	cmp	x0, x2
    4730:	b.eq	4974 <_ZN4llvm8TGParser12ParseClassIDEv+0x4fc>  // b.none
    4734:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4738:	mov	x2, #0x1                   	// #1
    473c:	add	x1, x0, #0x0
    4740:	mov	x0, x23
    4744:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4748:	mov	x3, x0
    474c:	add	x1, x19, #0x10
    4750:	str	x1, [sp, #240]
    4754:	ldr	x1, [x0], #16
    4758:	cmp	x1, x0
    475c:	b.eq	4968 <_ZN4llvm8TGParser12ParseClassIDEv+0x4f0>  // b.none
    4760:	str	x1, [sp, #240]
    4764:	ldr	x1, [x3, #16]
    4768:	str	x1, [sp, #256]
    476c:	ldr	x2, [x3, #8]
    4770:	str	x2, [sp, #248]
    4774:	mov	x1, x19
    4778:	stp	x0, xzr, [x3]
    477c:	add	x24, sp, #0x78
    4780:	strb	wzr, [x3, #16]
    4784:	mov	x0, x24
    4788:	add	x19, x19, #0x10
    478c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4790:	mov	x0, x20
    4794:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4798:	mov	x3, x0
    479c:	mov	x2, x24
    47a0:	add	x0, sp, #0x70
    47a4:	mov	x1, #0x1                   	// #1
    47a8:	str	x3, [sp, #112]
    47ac:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    47b0:	ldr	x0, [sp, #240]
    47b4:	cmp	x0, x19
    47b8:	b.eq	47c0 <_ZN4llvm8TGParser12ParseClassIDEv+0x348>  // b.none
    47bc:	bl	0 <_ZdlPv>
    47c0:	ldr	x0, [sp, #208]
    47c4:	add	x23, x23, #0x10
    47c8:	cmp	x0, x23
    47cc:	b.eq	47d4 <_ZN4llvm8TGParser12ParseClassIDEv+0x35c>  // b.none
    47d0:	bl	0 <_ZdlPv>
    47d4:	ldr	x0, [sp, #176]
    47d8:	add	x21, x21, #0x10
    47dc:	cmp	x0, x21
    47e0:	b.eq	47e8 <_ZN4llvm8TGParser12ParseClassIDEv+0x370>  // b.none
    47e4:	bl	0 <_ZdlPv>
    47e8:	ldr	x0, [sp, #144]
    47ec:	add	x22, x22, #0x10
    47f0:	cmp	x0, x22
    47f4:	b.eq	47fc <_ZN4llvm8TGParser12ParseClassIDEv+0x384>  // b.none
    47f8:	bl	0 <_ZdlPv>
    47fc:	mov	x19, #0x0                   	// #0
    4800:	ldp	x27, x28, [sp, #80]
    4804:	b	4858 <_ZN4llvm8TGParser12ParseClassIDEv+0x3e0>
    4808:	mov	x23, x19
    480c:	ldr	x19, [x19, #16]
    4810:	cbnz	x19, 4808 <_ZN4llvm8TGParser12ParseClassIDEv+0x390>
    4814:	cmp	x25, x23
    4818:	b.eq	4528 <_ZN4llvm8TGParser12ParseClassIDEv+0xb0>  // b.none
    481c:	ldr	x19, [x23, #40]
    4820:	cmp	x21, x19
    4824:	b.ne	4520 <_ZN4llvm8TGParser12ParseClassIDEv+0xa8>  // b.any
    4828:	b	4850 <_ZN4llvm8TGParser12ParseClassIDEv+0x3d8>
    482c:	ldr	x28, [x28, #24]
    4830:	cbnz	x28, 4620 <_ZN4llvm8TGParser12ParseClassIDEv+0x1a8>
    4834:	b	4664 <_ZN4llvm8TGParser12ParseClassIDEv+0x1ec>
    4838:	cbz	x19, 4850 <_ZN4llvm8TGParser12ParseClassIDEv+0x3d8>
    483c:	mov	x0, x24
    4840:	mov	x2, x19
    4844:	bl	0 <memcmp>
    4848:	cbz	w0, 4520 <_ZN4llvm8TGParser12ParseClassIDEv+0xa8>
    484c:	tbnz	w0, #31, 4528 <_ZN4llvm8TGParser12ParseClassIDEv+0xb0>
    4850:	ldr	x19, [x23, #64]
    4854:	cbz	x19, 4528 <_ZN4llvm8TGParser12ParseClassIDEv+0xb0>
    4858:	ldp	x2, x1, [x20, #8]
    485c:	mov	x0, x20
    4860:	cmp	x2, x1
    4864:	cset	w1, eq  // eq = none
    4868:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    486c:	ldp	x23, x24, [sp, #48]
    4870:	ldp	x25, x26, [sp, #64]
    4874:	str	w0, [x20, #40]
    4878:	mov	x0, x19
    487c:	ldp	x19, x20, [sp, #16]
    4880:	ldp	x21, x22, [sp, #32]
    4884:	ldp	x29, x30, [sp], #272
    4888:	ret
    488c:	mov	x2, x21
    4890:	mov	x1, x24
    4894:	bl	0 <memcmp>
    4898:	cbnz	w0, 48b0 <_ZN4llvm8TGParser12ParseClassIDEv+0x438>
    489c:	cmp	x21, x22
    48a0:	b.ls	44e8 <_ZN4llvm8TGParser12ParseClassIDEv+0x70>  // b.plast
    48a4:	ldr	x19, [x19, #24]
    48a8:	cbnz	x19, 44c0 <_ZN4llvm8TGParser12ParseClassIDEv+0x48>
    48ac:	b	44f4 <_ZN4llvm8TGParser12ParseClassIDEv+0x7c>
    48b0:	tbz	w0, #31, 44e8 <_ZN4llvm8TGParser12ParseClassIDEv+0x70>
    48b4:	ldr	x19, [x19, #24]
    48b8:	b	48a8 <_ZN4llvm8TGParser12ParseClassIDEv+0x430>
    48bc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    48c0:	add	x1, x1, #0x0
    48c4:	add	x21, sp, #0xf0
    48c8:	mov	x19, #0x0                   	// #0
    48cc:	mov	x0, x21
    48d0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    48d4:	mov	x0, x20
    48d8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    48dc:	mov	x3, x0
    48e0:	mov	x2, x21
    48e4:	add	x0, sp, #0xd0
    48e8:	mov	x1, #0x1                   	// #1
    48ec:	str	x3, [sp, #208]
    48f0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    48f4:	mov	x0, x19
    48f8:	ldp	x19, x20, [sp, #16]
    48fc:	ldp	x21, x22, [sp, #32]
    4900:	ldp	x29, x30, [sp], #272
    4904:	ret
    4908:	ldr	x5, [sp, #96]
    490c:	mov	x1, x21
    4910:	add	x4, sp, #0xd0
    4914:	mov	x3, x19
    4918:	add	x0, x20, #0xe0
    491c:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4920:	add	x2, x2, #0x0
    4924:	str	x5, [sp, #240]
    4928:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    492c:	mov	x21, x0
    4930:	b	4680 <_ZN4llvm8TGParser12ParseClassIDEv+0x208>
    4934:	ldp	x2, x3, [x0, #16]
    4938:	stp	x2, x3, [sp, #224]
    493c:	b	4714 <_ZN4llvm8TGParser12ParseClassIDEv+0x29c>
    4940:	ldp	x2, x3, [x0, #16]
    4944:	stp	x2, x3, [sp, #160]
    4948:	b	45cc <_ZN4llvm8TGParser12ParseClassIDEv+0x154>
    494c:	mov	x1, x22
    4950:	mov	x0, x19
    4954:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4958:	mov	x1, x19
    495c:	mov	x0, x20
    4960:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4964:	b	47e8 <_ZN4llvm8TGParser12ParseClassIDEv+0x370>
    4968:	ldp	x4, x5, [x3, #16]
    496c:	stp	x4, x5, [sp, #256]
    4970:	b	476c <_ZN4llvm8TGParser12ParseClassIDEv+0x2f4>
    4974:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4978:	add	x0, x0, #0x0
    497c:	bl	0 <_ZSt20__throw_length_errorPKc>
    4980:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4984:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4988:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    498c:	add	x3, x3, #0x0
    4990:	add	x1, x1, #0x0
    4994:	add	x0, x0, #0x0
    4998:	mov	w2, #0x6f                  	// #111
    499c:	bl	0 <__assert_fail>

00000000000049a0 <_ZN4llvm8TGParser9ParseTypeEv>:
    49a0:	stp	x29, x30, [sp, #-80]!
    49a4:	mov	x29, sp
    49a8:	ldr	w1, [x0, #40]
    49ac:	stp	x19, x20, [sp, #16]
    49b0:	mov	x19, x0
    49b4:	cmp	w1, #0x1d
    49b8:	b.eq	4b88 <_ZN4llvm8TGParser9ParseTypeEv+0x1e8>  // b.none
    49bc:	b.hi	4a98 <_ZN4llvm8TGParser9ParseTypeEv+0xf8>  // b.pmore
    49c0:	cmp	w1, #0x16
    49c4:	b.eq	4c0c <_ZN4llvm8TGParser9ParseTypeEv+0x26c>  // b.none
    49c8:	b.ls	4a00 <_ZN4llvm8TGParser9ParseTypeEv+0x60>  // b.plast
    49cc:	cmp	w1, #0x17
    49d0:	b.ne	4b4c <_ZN4llvm8TGParser9ParseTypeEv+0x1ac>  // b.any
    49d4:	ldp	x2, x1, [x0, #8]
    49d8:	adrp	x20, 0 <_ZN4llvm8DagRecTy6SharedE>
    49dc:	cmp	x2, x1
    49e0:	cset	w1, eq  // eq = none
    49e4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    49e8:	str	w0, [x19, #40]
    49ec:	ldr	x20, [x20]
    49f0:	mov	x0, x20
    49f4:	ldp	x19, x20, [sp, #16]
    49f8:	ldp	x29, x30, [sp], #80
    49fc:	ret
    4a00:	cmp	w1, #0x13
    4a04:	b.eq	4bb4 <_ZN4llvm8TGParser9ParseTypeEv+0x214>  // b.none
    4a08:	cmp	w1, #0x14
    4a0c:	b.ne	4b4c <_ZN4llvm8TGParser9ParseTypeEv+0x1ac>  // b.any
    4a10:	ldp	x2, x1, [x0, #8]
    4a14:	cmp	x2, x1
    4a18:	cset	w1, eq  // eq = none
    4a1c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4a20:	str	w0, [x19, #40]
    4a24:	cmp	w0, #0xa
    4a28:	b.ne	4c50 <_ZN4llvm8TGParser9ParseTypeEv+0x2b0>  // b.any
    4a2c:	ldp	x2, x1, [x19, #8]
    4a30:	mov	x0, x19
    4a34:	cmp	x2, x1
    4a38:	cset	w1, eq  // eq = none
    4a3c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4a40:	str	w0, [x19, #40]
    4a44:	cmp	w0, #0x46
    4a48:	b.ne	4c98 <_ZN4llvm8TGParser9ParseTypeEv+0x2f8>  // b.any
    4a4c:	ldp	x2, x1, [x19, #8]
    4a50:	mov	x0, x19
    4a54:	ldr	x20, [x19, #80]
    4a58:	cmp	x2, x1
    4a5c:	cset	w1, eq  // eq = none
    4a60:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4a64:	str	w0, [x19, #40]
    4a68:	cmp	w0, #0xb
    4a6c:	b.ne	4c80 <_ZN4llvm8TGParser9ParseTypeEv+0x2e0>  // b.any
    4a70:	ldp	x2, x1, [x19, #8]
    4a74:	mov	x0, x19
    4a78:	cmp	x2, x1
    4a7c:	cset	w1, eq  // eq = none
    4a80:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4a84:	str	w0, [x19, #40]
    4a88:	mov	w0, w20
    4a8c:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    4a90:	mov	x20, x0
    4a94:	b	49f0 <_ZN4llvm8TGParser9ParseTypeEv+0x50>
    4a98:	cmp	w1, #0x21
    4a9c:	b.eq	4be0 <_ZN4llvm8TGParser9ParseTypeEv+0x240>  // b.none
    4aa0:	cmp	w1, #0x48
    4aa4:	b.ne	4acc <_ZN4llvm8TGParser9ParseTypeEv+0x12c>  // b.any
    4aa8:	bl	4478 <_ZN4llvm8TGParser12ParseClassIDEv>
    4aac:	str	x0, [sp, #56]
    4ab0:	mov	x20, x0
    4ab4:	cbz	x0, 4c68 <_ZN4llvm8TGParser9ParseTypeEv+0x2c8>
    4ab8:	add	x0, sp, #0x38
    4abc:	mov	x1, #0x1                   	// #1
    4ac0:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    4ac4:	mov	x20, x0
    4ac8:	b	49f0 <_ZN4llvm8TGParser9ParseTypeEv+0x50>
    4acc:	cmp	w1, #0x1f
    4ad0:	b.ne	4b4c <_ZN4llvm8TGParser9ParseTypeEv+0x1ac>  // b.any
    4ad4:	ldp	x2, x1, [x0, #8]
    4ad8:	cmp	x2, x1
    4adc:	cset	w1, eq  // eq = none
    4ae0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4ae4:	str	w0, [x19, #40]
    4ae8:	cmp	w0, #0xa
    4aec:	b.ne	4c38 <_ZN4llvm8TGParser9ParseTypeEv+0x298>  // b.any
    4af0:	ldp	x2, x1, [x19, #8]
    4af4:	mov	x0, x19
    4af8:	cmp	x2, x1
    4afc:	cset	w1, eq  // eq = none
    4b00:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4b04:	str	w0, [x19, #40]
    4b08:	mov	x0, x19
    4b0c:	bl	49a0 <_ZN4llvm8TGParser9ParseTypeEv>
    4b10:	mov	x20, x0
    4b14:	cbz	x0, 49f0 <_ZN4llvm8TGParser9ParseTypeEv+0x50>
    4b18:	ldr	w0, [x19, #40]
    4b1c:	cmp	w0, #0xb
    4b20:	b.ne	4cb0 <_ZN4llvm8TGParser9ParseTypeEv+0x310>  // b.any
    4b24:	ldp	x2, x1, [x19, #8]
    4b28:	mov	x0, x19
    4b2c:	cmp	x2, x1
    4b30:	cset	w1, eq  // eq = none
    4b34:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4b38:	str	w0, [x19, #40]
    4b3c:	mov	x0, x20
    4b40:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    4b44:	mov	x20, x0
    4b48:	b	49f0 <_ZN4llvm8TGParser9ParseTypeEv+0x50>
    4b4c:	str	x21, [sp, #32]
    4b50:	add	x21, sp, #0x38
    4b54:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4b58:	mov	x0, x21
    4b5c:	add	x1, x1, #0x0
    4b60:	mov	x20, #0x0                   	// #0
    4b64:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4b68:	mov	x1, x21
    4b6c:	mov	x0, x19
    4b70:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4b74:	mov	x0, x20
    4b78:	ldp	x19, x20, [sp, #16]
    4b7c:	ldr	x21, [sp, #32]
    4b80:	ldp	x29, x30, [sp], #80
    4b84:	ret
    4b88:	ldp	x2, x1, [x0, #8]
    4b8c:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    4b90:	cmp	x2, x1
    4b94:	cset	w1, eq  // eq = none
    4b98:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4b9c:	str	w0, [x19, #40]
    4ba0:	ldr	x20, [x20]
    4ba4:	mov	x0, x20
    4ba8:	ldp	x19, x20, [sp, #16]
    4bac:	ldp	x29, x30, [sp], #80
    4bb0:	ret
    4bb4:	ldp	x2, x1, [x0, #8]
    4bb8:	adrp	x20, 0 <_ZN4llvm8BitRecTy6SharedE>
    4bbc:	cmp	x2, x1
    4bc0:	cset	w1, eq  // eq = none
    4bc4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4bc8:	str	w0, [x19, #40]
    4bcc:	ldr	x20, [x20]
    4bd0:	mov	x0, x20
    4bd4:	ldp	x19, x20, [sp, #16]
    4bd8:	ldp	x29, x30, [sp], #80
    4bdc:	ret
    4be0:	ldp	x1, x2, [x0, #8]
    4be4:	adrp	x20, 0 <_ZN4llvm11StringRecTy6SharedE>
    4be8:	cmp	x2, x1
    4bec:	cset	w1, eq  // eq = none
    4bf0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4bf4:	str	w0, [x19, #40]
    4bf8:	ldr	x20, [x20]
    4bfc:	mov	x0, x20
    4c00:	ldp	x19, x20, [sp, #16]
    4c04:	ldp	x29, x30, [sp], #80
    4c08:	ret
    4c0c:	ldp	x1, x2, [x0, #8]
    4c10:	adrp	x20, 0 <_ZN4llvm9CodeRecTy6SharedE>
    4c14:	cmp	x2, x1
    4c18:	cset	w1, eq  // eq = none
    4c1c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4c20:	str	w0, [x19, #40]
    4c24:	ldr	x20, [x20]
    4c28:	mov	x0, x20
    4c2c:	ldp	x19, x20, [sp, #16]
    4c30:	ldp	x29, x30, [sp], #80
    4c34:	ret
    4c38:	str	x21, [sp, #32]
    4c3c:	add	x21, sp, #0x38
    4c40:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4c44:	mov	x0, x21
    4c48:	add	x1, x1, #0x0
    4c4c:	b	4b60 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>
    4c50:	str	x21, [sp, #32]
    4c54:	add	x21, sp, #0x38
    4c58:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4c5c:	mov	x0, x21
    4c60:	add	x1, x1, #0x0
    4c64:	b	4b60 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>
    4c68:	str	x21, [sp, #32]
    4c6c:	add	x21, sp, #0x38
    4c70:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4c74:	mov	x0, x21
    4c78:	add	x1, x1, #0x0
    4c7c:	b	4b64 <_ZN4llvm8TGParser9ParseTypeEv+0x1c4>
    4c80:	str	x21, [sp, #32]
    4c84:	add	x21, sp, #0x38
    4c88:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4c8c:	mov	x0, x21
    4c90:	add	x1, x1, #0x0
    4c94:	b	4b60 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>
    4c98:	str	x21, [sp, #32]
    4c9c:	add	x21, sp, #0x38
    4ca0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4ca4:	mov	x0, x21
    4ca8:	add	x1, x1, #0x0
    4cac:	b	4b60 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>
    4cb0:	str	x21, [sp, #32]
    4cb4:	add	x21, sp, #0x38
    4cb8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4cbc:	mov	x0, x21
    4cc0:	add	x1, x1, #0x0
    4cc4:	b	4b60 <_ZN4llvm8TGParser9ParseTypeEv+0x1c0>

0000000000004cc8 <_ZN4llvm8TGParser17ParseOperatorTypeEv>:
    4cc8:	stp	x29, x30, [sp, #-80]!
    4ccc:	mov	x29, sp
    4cd0:	ldr	w1, [x0, #40]
    4cd4:	stp	x19, x20, [sp, #16]
    4cd8:	mov	x19, x0
    4cdc:	cmp	w1, #0xa
    4ce0:	b.ne	4d3c <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x74>  // b.any
    4ce4:	ldp	x2, x1, [x0, #8]
    4ce8:	cmp	x2, x1
    4cec:	cset	w1, eq  // eq = none
    4cf0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4cf4:	str	w0, [x19, #40]
    4cf8:	mov	x0, x19
    4cfc:	bl	49a0 <_ZN4llvm8TGParser9ParseTypeEv>
    4d00:	mov	x20, x0
    4d04:	cbz	x0, 4d8c <_ZN4llvm8TGParser17ParseOperatorTypeEv+0xc4>
    4d08:	ldr	w0, [x19, #40]
    4d0c:	cmp	w0, #0xb
    4d10:	b.ne	4d3c <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x74>  // b.any
    4d14:	ldp	x2, x1, [x19, #8]
    4d18:	mov	x0, x19
    4d1c:	cmp	x2, x1
    4d20:	cset	w1, eq  // eq = none
    4d24:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4d28:	str	w0, [x19, #40]
    4d2c:	mov	x0, x20
    4d30:	ldp	x19, x20, [sp, #16]
    4d34:	ldp	x29, x30, [sp], #80
    4d38:	ret
    4d3c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4d40:	add	x1, x1, #0x0
    4d44:	str	x21, [sp, #32]
    4d48:	add	x21, sp, #0x38
    4d4c:	mov	x0, x21
    4d50:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4d54:	mov	x0, x19
    4d58:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4d5c:	mov	x3, x0
    4d60:	mov	x2, x21
    4d64:	add	x0, sp, #0x30
    4d68:	mov	x20, #0x0                   	// #0
    4d6c:	mov	x1, #0x1                   	// #1
    4d70:	str	x3, [sp, #48]
    4d74:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4d78:	mov	x0, x20
    4d7c:	ldp	x19, x20, [sp, #16]
    4d80:	ldr	x21, [sp, #32]
    4d84:	ldp	x29, x30, [sp], #80
    4d88:	ret
    4d8c:	str	x21, [sp, #32]
    4d90:	add	x21, sp, #0x38
    4d94:	mov	x0, x21
    4d98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4d9c:	add	x1, x1, #0x0
    4da0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4da4:	mov	x1, x21
    4da8:	mov	x0, x19
    4dac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4db0:	ldr	x21, [sp, #32]
    4db4:	b	4d2c <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x64>

0000000000004db8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>:
    4db8:	sub	sp, sp, #0x4c0
    4dbc:	stp	x29, x30, [sp]
    4dc0:	mov	x29, sp
    4dc4:	ldr	w5, [x0, #40]
    4dc8:	stp	x19, x20, [sp, #16]
    4dcc:	mov	x19, x0
    4dd0:	mov	w20, w3
    4dd4:	stp	x21, x22, [sp, #32]
    4dd8:	cmp	w5, #0x45
    4ddc:	mov	x21, x1
    4de0:	stp	x27, x28, [sp, #80]
    4de4:	b.hi	5004 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x24c>  // b.pmore
    4de8:	cmp	w5, #0x26
    4dec:	b.hi	5234 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x47c>  // b.pmore
    4df0:	cmp	w5, #0x8
    4df4:	b.eq	5240 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x488>  // b.none
    4df8:	mov	x22, x2
    4dfc:	b.ls	4e58 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa0>  // b.plast
    4e00:	cmp	w5, #0x11
    4e04:	b.eq	5308 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x550>  // b.none
    4e08:	cmp	w5, #0x12
    4e0c:	b.ne	5344 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x58c>  // b.any
    4e10:	ldp	x1, x2, [x0, #8]
    4e14:	cmp	x2, x1
    4e18:	cset	w1, eq  // eq = none
    4e1c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4e20:	str	w0, [x19, #40]
    4e24:	mov	w3, w20
    4e28:	mov	x2, x22
    4e2c:	mov	x1, x21
    4e30:	mov	x0, x19
    4e34:	bl	4db8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    4e38:	mov	x28, x0
    4e3c:	mov	x0, x28
    4e40:	ldp	x29, x30, [sp]
    4e44:	ldp	x19, x20, [sp, #16]
    4e48:	ldp	x21, x22, [sp, #32]
    4e4c:	ldp	x27, x28, [sp, #80]
    4e50:	add	sp, sp, #0x4c0
    4e54:	ret
    4e58:	cmp	w5, #0x4
    4e5c:	b.eq	517c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3c4>  // b.none
    4e60:	cmp	w5, #0x6
    4e64:	b.ne	5344 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x58c>  // b.any
    4e68:	stp	x23, x24, [sp, #48]
    4e6c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4e70:	add	x20, sp, #0x3a0
    4e74:	ldp	x2, x1, [x19, #8]
    4e78:	stp	x20, x0, [sp, #112]
    4e7c:	mov	x0, x19
    4e80:	cmp	x2, x1
    4e84:	cset	w1, eq  // eq = none
    4e88:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4e8c:	str	w0, [x19, #40]
    4e90:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4e94:	cmp	w0, #0x7
    4e98:	ldr	d0, [x1]
    4e9c:	add	x1, x20, #0x10
    4ea0:	str	x1, [sp, #928]
    4ea4:	str	d0, [sp, #936]
    4ea8:	b.ne	5468 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6b0>  // b.any
    4eac:	ldp	x2, x1, [x19, #8]
    4eb0:	mov	x0, x19
    4eb4:	add	x20, sp, #0x430
    4eb8:	cmp	x2, x1
    4ebc:	cset	w1, eq  // eq = none
    4ec0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4ec4:	ldr	w22, [sp, #936]
    4ec8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4ecc:	str	w0, [x19, #40]
    4ed0:	ldr	d0, [x1]
    4ed4:	add	x1, x20, #0x10
    4ed8:	str	x1, [sp, #1072]
    4edc:	str	d0, [sp, #1080]
    4ee0:	cbz	w22, 6194 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13dc>
    4ee4:	stp	x25, x26, [sp, #64]
    4ee8:	adrp	x25, 0 <_ZN4llvm8BitRecTy6SharedE>
    4eec:	mov	w0, w22
    4ef0:	ldr	x25, [x25]
    4ef4:	add	x24, sp, #0x310
    4ef8:	add	x27, sp, #0x1c0
    4efc:	mov	x26, #0x0                   	// #0
    4f00:	mov	x21, #0x28                  	// #40
    4f04:	b	4f4c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x194>
    4f08:	cmp	w0, #0x13
    4f0c:	b.eq	55f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x838>  // b.none
    4f10:	ldr	x3, [x28]
    4f14:	mov	x0, x28
    4f18:	mov	x1, x25
    4f1c:	ldr	x3, [x3, #56]
    4f20:	blr	x3
    4f24:	str	x0, [sp, #448]
    4f28:	mov	x28, x0
    4f2c:	cbz	x0, 5a70 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xcb8>
    4f30:	mov	x1, x27
    4f34:	mov	x0, x20
    4f38:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    4f3c:	add	x26, x26, #0x1
    4f40:	cmp	w22, w26
    4f44:	b.eq	5724 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x96c>  // b.none
    4f48:	ldr	w0, [sp, #936]
    4f4c:	cmp	x26, w0, uxtw
    4f50:	mov	w23, w26
    4f54:	b.cs	61f8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1440>  // b.hs, b.nlast
    4f58:	ldr	x0, [sp, #928]
    4f5c:	lsl	x19, x26, #3
    4f60:	ldr	x28, [x0, x26, lsl #3]
    4f64:	cbz	x28, 624c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1494>
    4f68:	ldrb	w0, [x28, #8]
    4f6c:	cmp	w0, #0x3
    4f70:	b.ne	4f08 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x150>  // b.any
    4f74:	ldr	w0, [x28, #32]
    4f78:	cbz	w0, 4f3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x184>
    4f7c:	sub	w19, w0, #0x1
    4f80:	add	x23, x20, #0x10
    4f84:	b	4fc0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x208>
    4f88:	ldr	x0, [sp, #1072]
    4f8c:	str	x5, [x0, w2, uxtw #3]
    4f90:	ldr	w2, [sp, #1080]
    4f94:	ldr	w3, [sp, #1084]
    4f98:	mov	w0, w2
    4f9c:	add	x0, x0, #0x1
    4fa0:	cmp	x0, x3
    4fa4:	b.hi	6218 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1460>  // b.pmore
    4fa8:	add	w2, w2, #0x1
    4fac:	str	w2, [sp, #1080]
    4fb0:	sub	w19, w19, #0x1
    4fb4:	cmn	w19, #0x1
    4fb8:	b.eq	4f3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x184>  // b.none
    4fbc:	ldr	w0, [x28, #32]
    4fc0:	cmp	w19, w0
    4fc4:	b.cs	61ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13f4>  // b.hs, b.nlast
    4fc8:	add	x0, x21, w19, uxtw #3
    4fcc:	ldr	w2, [sp, #1080]
    4fd0:	ldr	w3, [sp, #1084]
    4fd4:	cmp	w2, w3
    4fd8:	ldr	x5, [x28, x0]
    4fdc:	b.cc	4f88 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1d0>  // b.lo, b.ul, b.last
    4fe0:	mov	x2, #0x0                   	// #0
    4fe4:	mov	x1, x23
    4fe8:	mov	x0, x20
    4fec:	mov	x3, #0x8                   	// #8
    4ff0:	str	x5, [sp, #104]
    4ff4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4ff8:	ldr	w2, [sp, #1080]
    4ffc:	ldr	x5, [sp, #104]
    5000:	b	4f88 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1d0>
    5004:	cmp	w5, #0x48
    5008:	b.eq	53fc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x644>  // b.none
    500c:	b.ls	5060 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2a8>  // b.plast
    5010:	cmp	w5, #0x49
    5014:	b.eq	536c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5b4>  // b.none
    5018:	cmp	w5, #0x4b
    501c:	b.ne	5344 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x58c>  // b.any
    5020:	ldp	x20, x21, [x0, #48]
    5024:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5028:	mov	x3, x0
    502c:	add	x2, sp, #0x430
    5030:	str	x3, [sp, #1072]
    5034:	mov	x1, x21
    5038:	mov	x0, x20
    503c:	bl	0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>
    5040:	mov	x28, x0
    5044:	ldp	x1, x2, [x19, #8]
    5048:	mov	x0, x19
    504c:	cmp	x2, x1
    5050:	cset	w1, eq  // eq = none
    5054:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5058:	str	w0, [x19, #40]
    505c:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5060:	cmp	w5, #0x46
    5064:	b.eq	53e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x630>  // b.none
    5068:	cmp	w5, #0x47
    506c:	b.ne	5344 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x58c>  // b.any
    5070:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5074:	add	x22, sp, #0x310
    5078:	ldr	x20, [x19, #8]
    507c:	add	x1, x22, #0x10
    5080:	ldr	x2, [x19, #32]
    5084:	stp	x23, x24, [sp, #48]
    5088:	ldr	d0, [x0]
    508c:	sub	x20, x20, x2
    5090:	stp	x25, x26, [sp, #64]
    5094:	sub	x20, x20, #0x2
    5098:	str	x1, [sp, #784]
    509c:	cmp	w20, #0x10
    50a0:	str	d0, [sp, #792]
    50a4:	mov	w23, w20
    50a8:	and	x21, x20, #0xffffffff
    50ac:	mov	x0, #0x10                  	// #16
    50b0:	ldr	x24, [x19, #80]
    50b4:	b.hi	5558 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7a0>  // b.pmore
    50b8:	cmp	x21, x0
    50bc:	b.hi	6218 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1460>  // b.pmore
    50c0:	ldr	x0, [sp, #784]
    50c4:	str	w20, [sp, #792]
    50c8:	add	x25, x0, x21, lsl #3
    50cc:	cmp	x0, x25
    50d0:	b.eq	50e4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x32c>  // b.none
    50d4:	sub	x2, x25, x0
    50d8:	mov	w1, #0x0                   	// #0
    50dc:	bl	0 <memset>
    50e0:	ldr	x25, [sp, #784]
    50e4:	cbz	w20, 5130 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x378>
    50e8:	and	w0, w24, #0x1
    50ec:	mov	x21, #0x1                   	// #1
    50f0:	b	5110 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x358>
    50f4:	ldr	w1, [sp, #792]
    50f8:	asr	x0, x24, x21
    50fc:	and	w0, w0, #0x1
    5100:	cmp	x21, x1
    5104:	b.cs	61f8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1440>  // b.hs, b.nlast
    5108:	ldr	x25, [sp, #784]
    510c:	add	x21, x21, #0x1
    5110:	lsl	x20, x21, #3
    5114:	bl	0 <_ZN4llvm7BitInit3getEb>
    5118:	sub	x20, x20, #0x8
    511c:	cmp	w21, w23
    5120:	str	x0, [x25, x20]
    5124:	b.ne	50f4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x33c>  // b.any
    5128:	ldr	w21, [sp, #792]
    512c:	ldr	x25, [sp, #784]
    5130:	mov	x1, x21
    5134:	mov	x0, x25
    5138:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    513c:	ldp	x1, x2, [x19, #8]
    5140:	mov	x28, x0
    5144:	mov	x0, x19
    5148:	add	x22, x22, #0x10
    514c:	cmp	x2, x1
    5150:	cset	w1, eq  // eq = none
    5154:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5158:	str	w0, [x19, #40]
    515c:	ldr	x1, [sp, #784]
    5160:	cmp	x1, x22
    5164:	b.eq	554c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x794>  // b.none
    5168:	mov	x0, x1
    516c:	bl	0 <free>
    5170:	ldp	x23, x24, [sp, #48]
    5174:	ldp	x25, x26, [sp, #64]
    5178:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    517c:	ldp	x2, x1, [x0, #8]
    5180:	stp	x23, x24, [sp, #48]
    5184:	add	x20, sp, #0x430
    5188:	cmp	x2, x1
    518c:	cset	w1, eq  // eq = none
    5190:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5194:	str	w0, [x19, #40]
    5198:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    519c:	ldr	d0, [x1]
    51a0:	add	x1, x20, #0x10
    51a4:	str	x1, [sp, #1072]
    51a8:	str	d0, [sp, #1080]
    51ac:	cbz	x22, 54d8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x720>
    51b0:	ldr	w1, [x22, #8]
    51b4:	cmp	w1, #0x5
    51b8:	b.eq	5a38 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc80>  // b.none
    51bc:	add	x23, sp, #0x2a0
    51c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    51c4:	mov	x0, x23
    51c8:	add	x1, x1, #0x0
    51cc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    51d0:	add	x21, sp, #0x3a0
    51d4:	ldr	x1, [x22]
    51d8:	mov	x8, x21
    51dc:	mov	x0, x22
    51e0:	add	x24, sp, #0x2c0
    51e4:	add	x22, sp, #0x310
    51e8:	ldr	x1, [x1, #16]
    51ec:	blr	x1
    51f0:	mov	x1, x21
    51f4:	mov	x0, x24
    51f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    51fc:	add	x21, x21, #0x10
    5200:	mov	x8, x22
    5204:	mov	x1, x24
    5208:	mov	x0, x23
    520c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5210:	mov	x1, x22
    5214:	mov	x0, x19
    5218:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    521c:	ldr	x0, [sp, #928]
    5220:	cmp	x0, x21
    5224:	b.eq	522c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x474>  // b.none
    5228:	bl	0 <_ZdlPv>
    522c:	mov	x28, #0x0                   	// #0
    5230:	b	5534 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x77c>
    5234:	bl	7610 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE>
    5238:	mov	x28, x0
    523c:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5240:	ldp	x2, x1, [x0, #8]
    5244:	cmp	x2, x1
    5248:	cset	w1, eq  // eq = none
    524c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5250:	cmp	w0, #0x32
    5254:	mov	w1, #0x48                  	// #72
    5258:	ccmp	w0, w1, #0x4, ne  // ne = any
    525c:	cset	w1, ne  // ne = any
    5260:	cmp	w0, #0x45
    5264:	str	w0, [x19, #40]
    5268:	ccmp	w0, #0x11, #0x4, ne  // ne = any
    526c:	csel	w0, w1, wzr, ne  // ne = any
    5270:	cbnz	w0, 5a5c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xca4>
    5274:	mov	x1, x21
    5278:	mov	x0, x19
    527c:	mov	w3, #0x0                   	// #0
    5280:	mov	x2, #0x0                   	// #0
    5284:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    5288:	mov	x28, x0
    528c:	cbz	x0, 4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5290:	ldr	w0, [x19, #40]
    5294:	mov	x22, #0x0                   	// #0
    5298:	cmp	w0, #0xc
    529c:	b.eq	55bc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x804>  // b.none
    52a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    52a4:	add	x20, sp, #0x430
    52a8:	cmp	w0, #0x9
    52ac:	ldr	d0, [x1]
    52b0:	add	x1, x20, #0x10
    52b4:	str	x1, [sp, #1072]
    52b8:	str	d0, [sp, #1080]
    52bc:	b.ne	5570 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7b8>  // b.any
    52c0:	ldp	x2, x1, [x19, #8]
    52c4:	mov	x0, x19
    52c8:	cmp	x2, x1
    52cc:	cset	w1, eq  // eq = none
    52d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    52d4:	str	w0, [x19, #40]
    52d8:	ldr	w3, [sp, #1080]
    52dc:	mov	x0, x28
    52e0:	ldr	x2, [sp, #1072]
    52e4:	mov	x1, x22
    52e8:	bl	0 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    52ec:	mov	x28, x0
    52f0:	ldr	x0, [sp, #1072]
    52f4:	add	x20, x20, #0x10
    52f8:	cmp	x0, x20
    52fc:	b.eq	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>  // b.none
    5300:	bl	0 <free>
    5304:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5308:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    530c:	mov	x28, x0
    5310:	ldp	x2, x1, [x19, #8]
    5314:	cmp	x2, x1
    5318:	mov	x0, x19
    531c:	cset	w1, eq  // eq = none
    5320:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5324:	str	w0, [x19, #40]
    5328:	mov	x0, x28
    532c:	ldp	x29, x30, [sp]
    5330:	ldp	x19, x20, [sp, #16]
    5334:	ldp	x21, x22, [sp, #32]
    5338:	ldp	x27, x28, [sp, #80]
    533c:	add	sp, sp, #0x4c0
    5340:	ret
    5344:	add	x20, sp, #0x430
    5348:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    534c:	mov	x0, x20
    5350:	add	x1, x1, #0x0
    5354:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5358:	mov	x28, #0x0                   	// #0
    535c:	mov	x1, x20
    5360:	mov	x0, x19
    5364:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5368:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    536c:	ldp	x1, x2, [x19, #48]
    5370:	add	x20, sp, #0x430
    5374:	add	x4, x20, #0x10
    5378:	mov	x0, x20
    537c:	mov	w3, #0x0                   	// #0
    5380:	str	x4, [sp, #1072]
    5384:	add	x2, x1, x2
    5388:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    538c:	b	539c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5e4>
    5390:	ldp	x1, x2, [x19, #48]
    5394:	mov	x0, x20
    5398:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    539c:	ldp	x1, x2, [x19, #8]
    53a0:	mov	x0, x19
    53a4:	cmp	x2, x1
    53a8:	cset	w1, eq  // eq = none
    53ac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    53b0:	str	w0, [x19, #40]
    53b4:	cmp	w0, #0x49
    53b8:	b.eq	5390 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5d8>  // b.none
    53bc:	ldr	x0, [sp, #1072]
    53c0:	add	x20, x20, #0x10
    53c4:	ldr	x1, [sp, #1080]
    53c8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    53cc:	mov	x28, x0
    53d0:	ldr	x1, [sp, #1072]
    53d4:	cmp	x1, x20
    53d8:	b.eq	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>  // b.none
    53dc:	mov	x0, x1
    53e0:	bl	0 <_ZdlPv>
    53e4:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    53e8:	ldr	x0, [x0, #80]
    53ec:	bl	0 <_ZN4llvm7IntInit3getEl>
    53f0:	mov	x28, x0
    53f4:	ldp	x1, x2, [x19, #8]
    53f8:	b	5314 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x55c>
    53fc:	stp	x23, x24, [sp, #48]
    5400:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5404:	ldr	w1, [x19, #40]
    5408:	mov	x24, x0
    540c:	sub	w1, w1, #0x48
    5410:	cmp	w1, #0x3
    5414:	b.hi	6270 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x14b8>  // b.pmore
    5418:	ldp	x0, x1, [x19, #48]
    541c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    5420:	mov	x22, x0
    5424:	ldp	x2, x1, [x19, #8]
    5428:	mov	x0, x19
    542c:	cmp	x2, x1
    5430:	cset	w1, eq  // eq = none
    5434:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5438:	str	w0, [x19, #40]
    543c:	cmp	w0, #0xa
    5440:	b.eq	5648 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x890>  // b.none
    5444:	mov	x3, x24
    5448:	mov	w4, w20
    544c:	mov	x2, x22
    5450:	mov	x1, x21
    5454:	mov	x0, x19
    5458:	bl	758 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE>
    545c:	mov	x28, x0
    5460:	ldp	x23, x24, [sp, #48]
    5464:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5468:	mov	x0, x19
    546c:	mov	x2, x21
    5470:	mov	x1, x20
    5474:	mov	x4, #0x0                   	// #0
    5478:	mov	x3, #0x0                   	// #0
    547c:	bl	9d60 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    5480:	ldr	w0, [sp, #936]
    5484:	cbz	w0, 5a4c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc94>
    5488:	ldr	w0, [x19, #40]
    548c:	cmp	w0, #0x7
    5490:	b.eq	4eac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf4>  // b.none
    5494:	add	x20, sp, #0x430
    5498:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    549c:	mov	x0, x20
    54a0:	add	x1, x1, #0x0
    54a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    54a8:	mov	x28, #0x0                   	// #0
    54ac:	mov	x1, x20
    54b0:	mov	x0, x19
    54b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    54b8:	ldr	x1, [sp, #112]
    54bc:	ldr	x0, [sp, #928]
    54c0:	add	x23, x1, #0x10
    54c4:	cmp	x0, x23
    54c8:	b.eq	5544 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x78c>  // b.none
    54cc:	bl	0 <free>
    54d0:	ldp	x23, x24, [sp, #48]
    54d4:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    54d8:	cmp	w0, #0x5
    54dc:	mov	x23, #0x0                   	// #0
    54e0:	mov	x4, #0x0                   	// #0
    54e4:	b.eq	5818 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa60>  // b.none
    54e8:	mov	x0, x19
    54ec:	mov	x2, x21
    54f0:	mov	x1, x20
    54f4:	mov	x3, #0x0                   	// #0
    54f8:	bl	9d60 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    54fc:	ldr	w0, [sp, #1080]
    5500:	cbz	w0, 522c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x474>
    5504:	ldr	w0, [x19, #40]
    5508:	cmp	w0, #0x5
    550c:	b.eq	5a54 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc9c>  // b.none
    5510:	add	x21, sp, #0x3a0
    5514:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5518:	mov	x0, x21
    551c:	add	x1, x1, #0x0
    5520:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5524:	mov	x28, #0x0                   	// #0
    5528:	mov	x1, x21
    552c:	mov	x0, x19
    5530:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5534:	ldr	x0, [sp, #1072]
    5538:	add	x20, x20, #0x10
    553c:	cmp	x0, x20
    5540:	b.ne	54cc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x714>  // b.any
    5544:	ldp	x23, x24, [sp, #48]
    5548:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    554c:	ldp	x23, x24, [sp, #48]
    5550:	ldp	x25, x26, [sp, #64]
    5554:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5558:	mov	x0, x22
    555c:	mov	x2, x21
    5560:	mov	x3, #0x8                   	// #8
    5564:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5568:	ldr	w0, [sp, #796]
    556c:	b	50b8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x300>
    5570:	mov	x0, x19
    5574:	mov	x2, x21
    5578:	mov	x1, x20
    557c:	bl	9b30 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE>
    5580:	ldr	w0, [sp, #1080]
    5584:	cbz	w0, 5be0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe28>
    5588:	ldr	w0, [x19, #40]
    558c:	cmp	w0, #0x9
    5590:	b.eq	52c0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x508>  // b.none
    5594:	add	x21, sp, #0x3a0
    5598:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    559c:	mov	x0, x21
    55a0:	add	x1, x1, #0x0
    55a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    55a8:	mov	x28, #0x0                   	// #0
    55ac:	mov	x1, x21
    55b0:	mov	x0, x19
    55b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    55b8:	b	52f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x538>
    55bc:	ldp	x2, x1, [x19, #8]
    55c0:	mov	x0, x19
    55c4:	cmp	x2, x1
    55c8:	cset	w1, eq  // eq = none
    55cc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    55d0:	str	w0, [x19, #40]
    55d4:	cmp	w0, #0x4a
    55d8:	b.eq	5ef0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1138>  // b.none
    55dc:	add	x20, sp, #0x430
    55e0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    55e4:	mov	x0, x20
    55e8:	add	x1, x1, #0x0
    55ec:	b	5354 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x59c>
    55f0:	ldr	x0, [x28, #16]
    55f4:	cbz	x0, 6294 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x14dc>
    55f8:	ldr	w1, [x0, #8]
    55fc:	cmp	w1, #0x1
    5600:	b.ne	4f10 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x158>  // b.any
    5604:	ldr	w19, [x0, #24]
    5608:	cbz	w19, 4f3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x184>
    560c:	sub	w19, w19, #0x1
    5610:	ldr	x2, [x28]
    5614:	mov	w1, w19
    5618:	mov	x0, x28
    561c:	sub	w19, w19, #0x1
    5620:	ldr	x2, [x2, #104]
    5624:	blr	x2
    5628:	mov	x2, x0
    562c:	mov	x1, x24
    5630:	mov	x0, x20
    5634:	str	x2, [sp, #784]
    5638:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    563c:	cmn	w19, #0x1
    5640:	b.ne	5610 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x858>  // b.any
    5644:	b	4f3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x184>
    5648:	ldp	x2, x1, [x19, #8]
    564c:	mov	x0, x19
    5650:	cmp	x2, x1
    5654:	cset	w1, eq  // eq = none
    5658:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    565c:	str	w0, [x19, #40]
    5660:	cmp	w0, #0xb
    5664:	b.eq	5f18 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1160>  // b.none
    5668:	ldp	x3, x2, [x22, #24]
    566c:	add	x20, sp, #0x430
    5670:	ldr	x23, [x19, #344]
    5674:	mov	x1, x20
    5678:	str	x3, [sp, #1072]
    567c:	mov	x0, x23
    5680:	add	x23, x23, #0x8
    5684:	str	x2, [sp, #1080]
    5688:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    568c:	cmp	x0, x23
    5690:	b.eq	5b78 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xdc0>  // b.none
    5694:	ldr	x28, [x0, #64]
    5698:	cbz	x28, 5b78 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xdc0>
    569c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    56a0:	stp	x25, x26, [sp, #64]
    56a4:	add	x25, sp, #0x2c0
    56a8:	ldr	d0, [x0]
    56ac:	add	x5, x25, #0x10
    56b0:	mov	x0, x19
    56b4:	mov	x2, x21
    56b8:	mov	x1, x25
    56bc:	mov	x3, x28
    56c0:	mov	x4, #0x0                   	// #0
    56c4:	str	x5, [sp, #704]
    56c8:	str	d0, [sp, #712]
    56cc:	bl	9d60 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    56d0:	ldr	w0, [sp, #712]
    56d4:	cbz	w0, 5e8c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10d4>
    56d8:	ldr	w0, [x19, #40]
    56dc:	cmp	w0, #0xb
    56e0:	b.eq	5f4c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1194>  // b.none
    56e4:	mov	x0, x20
    56e8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    56ec:	add	x1, x1, #0x0
    56f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    56f4:	mov	x1, x20
    56f8:	mov	x0, x19
    56fc:	mov	x28, #0x0                   	// #0
    5700:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5704:	ldr	x0, [sp, #704]
    5708:	add	x25, x25, #0x10
    570c:	cmp	x0, x25
    5710:	b.eq	554c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x794>  // b.none
    5714:	bl	0 <free>
    5718:	ldp	x23, x24, [sp, #48]
    571c:	ldp	x25, x26, [sp, #64]
    5720:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5724:	ldr	w1, [sp, #1080]
    5728:	ldr	x2, [sp, #1072]
    572c:	lsl	x4, x1, #3
    5730:	add	x0, x2, x4
    5734:	cmp	x2, x0
    5738:	b.eq	6180 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13c8>  // b.none
    573c:	sub	x3, x0, #0x8
    5740:	cmp	x2, x3
    5744:	b.cs	6188 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13d0>  // b.hs, b.nlast
    5748:	sub	x0, x0, x2
    574c:	sub	x8, x4, #0x8
    5750:	sub	x0, x0, #0x9
    5754:	cmp	x4, #0x0
    5758:	mov	x9, #0x4f                  	// #79
    575c:	mov	x5, x2
    5760:	lsr	x6, x0, #4
    5764:	add	x7, x6, #0x1
    5768:	sub	x6, x8, x6, lsl #3
    576c:	lsl	x8, x7, #3
    5770:	ccmp	x6, x8, #0x0, gt
    5774:	ccmp	x0, x9, #0x0, ge  // ge = tcont
    5778:	b.ls	57fc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa44>  // b.plast
    577c:	neg	x6, x7, lsr #1
    5780:	sub	x4, x4, #0x10
    5784:	add	x4, x2, x4
    5788:	mov	x0, #0x0                   	// #0
    578c:	lsl	x6, x6, #4
    5790:	ldr	q1, [x4, x0]
    5794:	ldr	q0, [x5]
    5798:	ext	v1.16b, v1.16b, v1.16b, #8
    579c:	ext	v0.16b, v0.16b, v0.16b, #8
    57a0:	str	q1, [x5], #16
    57a4:	str	q0, [x4, x0]
    57a8:	sub	x0, x0, #0x10
    57ac:	cmp	x6, x0
    57b0:	b.ne	5790 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9d8>  // b.any
    57b4:	and	x0, x7, #0xfffffffffffffffe
    57b8:	cmp	x0, x7
    57bc:	neg	x4, x0, lsl #3
    57c0:	b.eq	57d4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa1c>  // b.none
    57c4:	ldr	x6, [x3, x4]
    57c8:	ldr	x5, [x2, x0, lsl #3]
    57cc:	str	x6, [x2, x0, lsl #3]
    57d0:	str	x5, [x3, x4]
    57d4:	ldp	x25, x26, [sp, #64]
    57d8:	ldr	x0, [sp, #1072]
    57dc:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    57e0:	mov	x28, x0
    57e4:	ldr	x0, [sp, #1072]
    57e8:	add	x20, x20, #0x10
    57ec:	cmp	x0, x20
    57f0:	b.eq	54b8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x700>  // b.none
    57f4:	bl	0 <free>
    57f8:	b	54b8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x700>
    57fc:	ldr	x4, [x3]
    5800:	ldr	x0, [x2]
    5804:	str	x4, [x2], #8
    5808:	str	x0, [x3], #-8
    580c:	cmp	x3, x2
    5810:	b.hi	57fc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa44>  // b.pmore
    5814:	b	57d4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa1c>
    5818:	mov	x23, x22
    581c:	stp	x25, x26, [sp, #64]
    5820:	mov	x0, x19
    5824:	ldp	x2, x1, [x19, #8]
    5828:	cmp	x2, x1
    582c:	cset	w1, eq  // eq = none
    5830:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5834:	str	w0, [x19, #40]
    5838:	cmp	w0, #0xa
    583c:	b.eq	5ea8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10f0>  // b.none
    5840:	ldr	x21, [sp, #1072]
    5844:	mov	x24, #0x0                   	// #0
    5848:	ldr	w25, [sp, #1080]
    584c:	add	x25, x21, x25, lsl #3
    5850:	cmp	x21, x25
    5854:	b.eq	58a0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xae8>  // b.none
    5858:	mov	x28, #0x0                   	// #0
    585c:	b	587c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xac4>
    5860:	mov	x0, x28
    5864:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    5868:	mov	x28, x0
    586c:	cbz	x0, 5e94 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10dc>
    5870:	add	x21, x21, #0x8
    5874:	cmp	x25, x21
    5878:	b.eq	58c4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb0c>  // b.none
    587c:	ldr	x0, [x21]
    5880:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5884:	cbz	x0, 5870 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xab8>
    5888:	ldr	x1, [x0, #16]
    588c:	cbnz	x28, 5860 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xaa8>
    5890:	mov	x28, x1
    5894:	b	5870 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xab8>
    5898:	mov	x24, x28
    589c:	cbnz	x28, 58e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb30>
    58a0:	cbz	x22, 6238 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1480>
    58a4:	ldr	x24, [x23, #24]
    58a8:	mov	x2, x24
    58ac:	ldr	w1, [sp, #1080]
    58b0:	ldr	x0, [sp, #1072]
    58b4:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    58b8:	mov	x28, x0
    58bc:	ldp	x25, x26, [sp, #64]
    58c0:	b	5534 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x77c>
    58c4:	cbz	x24, 5898 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xae0>
    58c8:	cbz	x28, 58e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb30>
    58cc:	ldr	x2, [x28]
    58d0:	mov	x0, x28
    58d4:	mov	x1, x24
    58d8:	ldr	x2, [x2, #24]
    58dc:	blr	x2
    58e0:	tst	w0, #0xff
    58e4:	b.eq	5a0c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc54>  // b.none
    58e8:	cbz	x23, 58a8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xaf0>
    58ec:	ldr	x2, [x24]
    58f0:	mov	x0, x24
    58f4:	ldr	x1, [x23, #24]
    58f8:	ldr	x2, [x2, #24]
    58fc:	blr	x2
    5900:	tst	w0, #0xff
    5904:	b.ne	58a8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xaf0>  // b.any
    5908:	add	x2, sp, #0x228
    590c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5910:	mov	x0, x2
    5914:	add	x1, x1, #0x0
    5918:	str	x2, [sp, #112]
    591c:	add	x22, sp, #0x310
    5920:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5924:	add	x27, sp, #0x258
    5928:	ldr	x1, [x24]
    592c:	add	x3, sp, #0x240
    5930:	str	x3, [sp, #104]
    5934:	mov	x8, x22
    5938:	mov	x0, x24
    593c:	add	x28, sp, #0x270
    5940:	ldr	x1, [x1, #16]
    5944:	add	x25, sp, #0x288
    5948:	add	x21, sp, #0x3a0
    594c:	add	x26, sp, #0x2a0
    5950:	add	x24, sp, #0x2c0
    5954:	blr	x1
    5958:	ldr	x3, [sp, #104]
    595c:	mov	x1, x22
    5960:	mov	x0, x3
    5964:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5968:	ldp	x0, x2, [sp, #104]
    596c:	mov	x8, x27
    5970:	mov	x1, x0
    5974:	mov	x0, x2
    5978:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    597c:	mov	x0, x28
    5980:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5984:	add	x1, x1, #0x0
    5988:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    598c:	mov	x1, x28
    5990:	mov	x0, x27
    5994:	mov	x8, x25
    5998:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    599c:	ldr	x0, [x23, #24]
    59a0:	mov	x8, x21
    59a4:	ldr	x1, [x0]
    59a8:	ldr	x1, [x1, #16]
    59ac:	blr	x1
    59b0:	mov	x1, x21
    59b4:	mov	x0, x26
    59b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    59bc:	add	x21, x21, #0x10
    59c0:	mov	x8, x24
    59c4:	mov	x1, x26
    59c8:	mov	x0, x25
    59cc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    59d0:	mov	x1, x24
    59d4:	mov	x0, x19
    59d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    59dc:	ldr	x0, [sp, #928]
    59e0:	cmp	x0, x21
    59e4:	b.eq	59ec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc34>  // b.none
    59e8:	bl	0 <_ZdlPv>
    59ec:	ldr	x0, [sp, #784]
    59f0:	add	x22, x22, #0x10
    59f4:	cmp	x0, x22
    59f8:	b.eq	5a00 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc48>  // b.none
    59fc:	bl	0 <_ZdlPv>
    5a00:	mov	x28, #0x0                   	// #0
    5a04:	ldp	x25, x26, [sp, #64]
    5a08:	b	5534 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x77c>
    5a0c:	add	x21, sp, #0x3a0
    5a10:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a14:	mov	x0, x21
    5a18:	add	x1, x1, #0x0
    5a1c:	mov	x28, #0x0                   	// #0
    5a20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a24:	mov	x1, x21
    5a28:	mov	x0, x19
    5a2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a30:	ldp	x25, x26, [sp, #64]
    5a34:	b	5534 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x77c>
    5a38:	cmp	w0, #0x5
    5a3c:	b.eq	5818 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa60>  // b.none
    5a40:	mov	x23, x22
    5a44:	ldr	x4, [x22, #24]
    5a48:	b	54e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x730>
    5a4c:	mov	x28, #0x0                   	// #0
    5a50:	b	54b8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x700>
    5a54:	stp	x25, x26, [sp, #64]
    5a58:	b	5820 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa68>
    5a5c:	add	x20, sp, #0x430
    5a60:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a64:	mov	x0, x20
    5a68:	add	x1, x1, #0x0
    5a6c:	b	5354 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x59c>
    5a70:	add	x22, sp, #0x210
    5a74:	add	x21, sp, #0x228
    5a78:	mov	x0, x22
    5a7c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a80:	add	x1, x1, #0x0
    5a84:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5a88:	mov	w3, #0x109                 	// #265
    5a8c:	mov	x8, x21
    5a90:	stp	xzr, xzr, [sp, #496]
    5a94:	mov	x0, x22
    5a98:	add	x1, sp, #0x1f0
    5a9c:	add	x22, sp, #0x240
    5aa0:	str	w23, [sp, #496]
    5aa4:	strh	w3, [sp, #512]
    5aa8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5aac:	mov	x0, x22
    5ab0:	add	x24, sp, #0x258
    5ab4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ab8:	add	x1, x1, #0x0
    5abc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ac0:	mov	x0, x21
    5ac4:	mov	x1, x22
    5ac8:	mov	x8, x24
    5acc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ad0:	ldr	w0, [sp, #936]
    5ad4:	cmp	x26, x0
    5ad8:	b.cs	61f8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1440>  // b.hs, b.nlast
    5adc:	ldr	x0, [sp, #928]
    5ae0:	add	x21, sp, #0x310
    5ae4:	mov	x8, x21
    5ae8:	add	x27, sp, #0x270
    5aec:	add	x22, sp, #0x288
    5af0:	add	x25, sp, #0x2a0
    5af4:	ldr	x0, [x0, x19]
    5af8:	add	x19, sp, #0x2c0
    5afc:	ldr	x1, [x0]
    5b00:	ldr	x1, [x1, #40]
    5b04:	blr	x1
    5b08:	mov	x1, x21
    5b0c:	mov	x0, x27
    5b10:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5b14:	add	x21, x21, #0x10
    5b18:	mov	x8, x22
    5b1c:	mov	x1, x27
    5b20:	mov	x0, x24
    5b24:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5b28:	mov	x0, x25
    5b2c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5b30:	add	x1, x1, #0x0
    5b34:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5b38:	mov	x8, x19
    5b3c:	mov	x1, x25
    5b40:	mov	x0, x22
    5b44:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5b48:	ldr	x3, [sp, #120]
    5b4c:	add	x0, sp, #0x1d8
    5b50:	mov	x2, x19
    5b54:	mov	x1, #0x1                   	// #1
    5b58:	str	x3, [sp, #472]
    5b5c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5b60:	ldr	x0, [sp, #784]
    5b64:	cmp	x0, x21
    5b68:	b.eq	5f44 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x118c>  // b.none
    5b6c:	bl	0 <_ZdlPv>
    5b70:	ldp	x25, x26, [sp, #64]
    5b74:	b	57e4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa2c>
    5b78:	ldp	x4, x3, [x22, #24]
    5b7c:	add	x2, sp, #0x2c0
    5b80:	add	x19, sp, #0x310
    5b84:	add	x21, sp, #0x3a0
    5b88:	mov	x0, x19
    5b8c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5b90:	add	x1, x1, #0x0
    5b94:	str	x4, [sp, #704]
    5b98:	str	x3, [sp, #712]
    5b9c:	mov	x28, #0x0                   	// #0
    5ba0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ba4:	mov	x0, x21
    5ba8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5bac:	add	x1, x1, #0x0
    5bb0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5bb4:	mov	x8, x20
    5bb8:	mov	x1, x21
    5bbc:	mov	x0, x19
    5bc0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5bc4:	mov	x2, x20
    5bc8:	add	x0, sp, #0x2a0
    5bcc:	mov	x1, #0x1                   	// #1
    5bd0:	str	x24, [sp, #672]
    5bd4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5bd8:	ldp	x23, x24, [sp, #48]
    5bdc:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5be0:	mov	x28, #0x0                   	// #0
    5be4:	b	52f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x538>
    5be8:	add	x23, sp, #0xe8
    5bec:	add	x21, sp, #0x100
    5bf0:	mov	x0, x23
    5bf4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5bf8:	add	x1, x1, #0x0
    5bfc:	stp	x2, x3, [sp, #176]
    5c00:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5c04:	mov	w4, #0x109                 	// #265
    5c08:	mov	x8, x21
    5c0c:	stp	xzr, xzr, [sp, #208]
    5c10:	mov	x0, x23
    5c14:	add	x1, sp, #0xd0
    5c18:	add	x23, sp, #0x118
    5c1c:	str	w22, [sp, #208]
    5c20:	strh	w4, [sp, #224]
    5c24:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5c28:	add	x26, sp, #0x130
    5c2c:	mov	x0, x23
    5c30:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5c34:	add	x1, x1, #0x0
    5c38:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5c3c:	add	x27, sp, #0x178
    5c40:	mov	x10, x26
    5c44:	mov	x1, x23
    5c48:	mov	x0, x21
    5c4c:	mov	x8, x26
    5c50:	str	x10, [sp, #128]
    5c54:	add	x23, sp, #0x148
    5c58:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5c5c:	add	x26, sp, #0x160
    5c60:	ldr	x0, [x19]
    5c64:	add	x6, sp, #0x210
    5c68:	add	x5, sp, #0x1f0
    5c6c:	add	x9, sp, #0x1d8
    5c70:	add	x7, sp, #0x1c0
    5c74:	add	x11, sp, #0x1a8
    5c78:	ldr	x1, [x0]
    5c7c:	add	x2, sp, #0x3a0
    5c80:	add	x19, sp, #0x2a0
    5c84:	stp	x2, x7, [sp, #112]
    5c88:	mov	x8, x19
    5c8c:	ldr	x1, [x1, #48]
    5c90:	stp	x6, x5, [sp, #144]
    5c94:	add	x21, sp, #0x190
    5c98:	stp	x9, x11, [sp, #160]
    5c9c:	add	x22, sp, #0x310
    5ca0:	add	x28, sp, #0x228
    5ca4:	blr	x1
    5ca8:	mov	x0, x23
    5cac:	mov	x1, x19
    5cb0:	str	x0, [sp, #104]
    5cb4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5cb8:	ldr	x10, [sp, #128]
    5cbc:	mov	x8, x26
    5cc0:	ldr	x0, [sp, #104]
    5cc4:	add	x23, sp, #0x240
    5cc8:	mov	x1, x0
    5ccc:	mov	x0, x10
    5cd0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5cd4:	mov	x0, x27
    5cd8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5cdc:	add	x1, x1, #0x0
    5ce0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ce4:	mov	x10, x21
    5ce8:	mov	x1, x27
    5cec:	mov	x0, x26
    5cf0:	mov	x8, x21
    5cf4:	str	x10, [sp, #136]
    5cf8:	add	x26, sp, #0x258
    5cfc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5d00:	add	x27, sp, #0x270
    5d04:	ldr	x2, [sp, #176]
    5d08:	str	x2, [sp, #128]
    5d0c:	mov	x8, x22
    5d10:	add	x21, sp, #0x288
    5d14:	ldr	x0, [x2, #16]
    5d18:	ldr	x1, [x0]
    5d1c:	ldr	x1, [x1, #16]
    5d20:	blr	x1
    5d24:	ldr	x11, [sp, #168]
    5d28:	mov	x1, x22
    5d2c:	str	x11, [sp, #104]
    5d30:	mov	x0, x11
    5d34:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5d38:	ldr	x7, [sp, #120]
    5d3c:	ldr	x10, [sp, #136]
    5d40:	mov	x8, x7
    5d44:	ldr	x0, [sp, #104]
    5d48:	mov	x1, x0
    5d4c:	mov	x0, x10
    5d50:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5d54:	ldr	x9, [sp, #160]
    5d58:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5d5c:	add	x1, x1, #0x0
    5d60:	str	x9, [sp, #104]
    5d64:	mov	x0, x9
    5d68:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5d6c:	ldr	x5, [sp, #152]
    5d70:	ldr	x0, [sp, #104]
    5d74:	ldr	x8, [sp, #120]
    5d78:	mov	x1, x0
    5d7c:	str	x5, [sp, #120]
    5d80:	mov	x0, x8
    5d84:	mov	x8, x5
    5d88:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5d8c:	ldr	x3, [sp, #184]
    5d90:	ldr	x8, [sp, #112]
    5d94:	mov	x0, x3
    5d98:	ldr	x1, [x3]
    5d9c:	ldr	x1, [x1, #16]
    5da0:	blr	x1
    5da4:	ldr	x1, [sp, #112]
    5da8:	ldr	x6, [sp, #144]
    5dac:	str	x6, [sp, #104]
    5db0:	mov	x0, x6
    5db4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5db8:	ldr	x5, [sp, #120]
    5dbc:	mov	x8, x28
    5dc0:	ldr	x0, [sp, #104]
    5dc4:	mov	x1, x0
    5dc8:	mov	x0, x5
    5dcc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5dd0:	mov	x0, x23
    5dd4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5dd8:	add	x1, x1, #0x0
    5ddc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5de0:	mov	x1, x23
    5de4:	mov	x0, x28
    5de8:	mov	x8, x26
    5dec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5df0:	ldr	x2, [sp, #128]
    5df4:	mov	x8, x20
    5df8:	mov	x0, x2
    5dfc:	ldr	x1, [x2]
    5e00:	ldr	x1, [x1, #40]
    5e04:	blr	x1
    5e08:	mov	x1, x20
    5e0c:	mov	x0, x27
    5e10:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5e14:	add	x20, x20, #0x10
    5e18:	mov	x8, x21
    5e1c:	mov	x1, x27
    5e20:	mov	x0, x26
    5e24:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5e28:	add	x0, sp, #0xc8
    5e2c:	mov	x2, x21
    5e30:	mov	x1, #0x1                   	// #1
    5e34:	str	x24, [sp, #200]
    5e38:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5e3c:	ldr	x0, [sp, #1072]
    5e40:	cmp	x0, x20
    5e44:	b.eq	5e4c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1094>  // b.none
    5e48:	bl	0 <_ZdlPv>
    5e4c:	ldr	x1, [sp, #112]
    5e50:	ldr	x0, [sp, #928]
    5e54:	add	x23, x1, #0x10
    5e58:	cmp	x0, x23
    5e5c:	b.eq	5e64 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10ac>  // b.none
    5e60:	bl	0 <_ZdlPv>
    5e64:	ldr	x0, [sp, #784]
    5e68:	add	x22, x22, #0x10
    5e6c:	cmp	x0, x22
    5e70:	b.eq	5e78 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10c0>  // b.none
    5e74:	bl	0 <_ZdlPv>
    5e78:	ldr	x0, [sp, #672]
    5e7c:	add	x19, x19, #0x10
    5e80:	cmp	x0, x19
    5e84:	b.eq	5e8c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10d4>  // b.none
    5e88:	bl	0 <_ZdlPv>
    5e8c:	mov	x28, #0x0                   	// #0
    5e90:	b	5704 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x94c>
    5e94:	add	x21, sp, #0x3a0
    5e98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5e9c:	mov	x0, x21
    5ea0:	add	x1, x1, #0x0
    5ea4:	b	5a20 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc68>
    5ea8:	ldp	x2, x1, [x19, #8]
    5eac:	mov	x0, x19
    5eb0:	cmp	x2, x1
    5eb4:	cset	w1, eq  // eq = none
    5eb8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5ebc:	str	w0, [x19, #40]
    5ec0:	mov	x0, x19
    5ec4:	bl	49a0 <_ZN4llvm8TGParser9ParseTypeEv>
    5ec8:	mov	x24, x0
    5ecc:	cbz	x0, 61a0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13e8>
    5ed0:	ldr	w0, [x19, #40]
    5ed4:	cmp	w0, #0xb
    5ed8:	b.eq	6150 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1398>  // b.none
    5edc:	add	x21, sp, #0x3a0
    5ee0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5ee4:	mov	x0, x21
    5ee8:	add	x1, x1, #0x0
    5eec:	b	5a1c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc64>
    5ef0:	ldp	x0, x1, [x19, #48]
    5ef4:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    5ef8:	mov	x22, x0
    5efc:	ldp	x2, x1, [x19, #8]
    5f00:	mov	x0, x19
    5f04:	cmp	x2, x1
    5f08:	cset	w1, eq  // eq = none
    5f0c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5f10:	str	w0, [x19, #40]
    5f14:	b	52a0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4e8>
    5f18:	add	x20, sp, #0x430
    5f1c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f20:	mov	x0, x20
    5f24:	add	x1, x1, #0x0
    5f28:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f2c:	mov	x28, #0x0                   	// #0
    5f30:	mov	x1, x20
    5f34:	mov	x0, x19
    5f38:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5f3c:	ldp	x23, x24, [sp, #48]
    5f40:	b	4e3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84>
    5f44:	ldp	x25, x26, [sp, #64]
    5f48:	b	57e4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa2c>
    5f4c:	ldp	x2, x1, [x19, #8]
    5f50:	mov	x0, x19
    5f54:	cmp	x2, x1
    5f58:	cset	w1, eq  // eq = none
    5f5c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5f60:	ldr	w21, [x28, #64]
    5f64:	ldr	w5, [sp, #712]
    5f68:	str	w0, [x19, #40]
    5f6c:	mov	w0, w21
    5f70:	str	x0, [sp, #104]
    5f74:	cmp	w5, w21
    5f78:	b.hi	61cc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1414>  // b.pmore
    5f7c:	cbz	w21, 6254 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x149c>
    5f80:	ldr	x23, [x28, #56]
    5f84:	sub	w21, w21, #0x1
    5f88:	mov	x27, #0x0                   	// #0
    5f8c:	mov	w26, #0x18                  	// #24
    5f90:	ldr	w2, [x28, #80]
    5f94:	mov	w22, w27
    5f98:	ldr	x0, [x28, #72]
    5f9c:	lsl	x6, x27, #3
    5fa0:	ldr	x3, [x23]
    5fa4:	umaddl	x2, w2, w26, x0
    5fa8:	cmp	x0, x2
    5fac:	b.ne	5fc0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1208>  // b.any
    5fb0:	b	6044 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x128c>
    5fb4:	add	x0, x0, #0x18
    5fb8:	cmp	x2, x0
    5fbc:	b.eq	6044 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x128c>  // b.none
    5fc0:	ldr	x1, [x0]
    5fc4:	mov	x19, x0
    5fc8:	cmp	x3, x1
    5fcc:	b.ne	5fb4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11fc>  // b.any
    5fd0:	cmp	w5, w22
    5fd4:	b.ls	604c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1294>  // b.plast
    5fd8:	cmp	x27, w5, uxtw
    5fdc:	b.cs	61f8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1440>  // b.hs, b.nlast
    5fe0:	ldr	x0, [sp, #704]
    5fe4:	ldr	x0, [x0, x6]
    5fe8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    5fec:	mov	x2, x0
    5ff0:	cbz	x0, 6064 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x12ac>
    5ff4:	ldr	x0, [x0, #16]
    5ff8:	ldr	x3, [x19, #8]
    5ffc:	ldr	x5, [x0]
    6000:	and	x3, x3, #0xfffffffffffffff8
    6004:	stp	x3, x2, [sp, #112]
    6008:	mov	x1, x3
    600c:	ldr	x5, [x5, #24]
    6010:	blr	x5
    6014:	tst	w0, #0xff
    6018:	ldp	x3, x2, [sp, #112]
    601c:	b.eq	5be8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe30>  // b.none
    6020:	cmp	x27, x21
    6024:	b.eq	6254 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x149c>  // b.none
    6028:	ldr	x0, [sp, #104]
    602c:	add	x27, x27, #0x1
    6030:	add	x23, x23, #0x8
    6034:	cmp	x27, x0
    6038:	b.eq	6250 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1498>  // b.none
    603c:	ldr	w5, [sp, #712]
    6040:	b	5f90 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11d8>
    6044:	mov	x19, #0x0                   	// #0
    6048:	b	5fd0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1218>
    604c:	ldr	x0, [x19, #16]
    6050:	ldr	x1, [x0]
    6054:	ldr	x1, [x1, #24]
    6058:	blr	x1
    605c:	tst	w0, #0xff
    6060:	b.ne	6020 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1268>  // b.any
    6064:	add	x21, sp, #0x228
    6068:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    606c:	mov	x0, x21
    6070:	add	x1, x1, #0x0
    6074:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6078:	add	x19, sp, #0x240
    607c:	add	x1, sp, #0x210
    6080:	mov	w2, #0x109                 	// #265
    6084:	mov	x8, x19
    6088:	mov	x0, x21
    608c:	add	x21, sp, #0x258
    6090:	add	x26, sp, #0x270
    6094:	stp	xzr, xzr, [x1]
    6098:	str	w22, [sp, #528]
    609c:	add	x22, sp, #0x310
    60a0:	strh	w2, [sp, #544]
    60a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    60a8:	mov	x0, x21
    60ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    60b0:	add	x1, x1, #0x0
    60b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    60b8:	mov	x1, x21
    60bc:	mov	x0, x19
    60c0:	mov	x8, x26
    60c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    60c8:	ldr	x0, [x23]
    60cc:	mov	x8, x20
    60d0:	add	x23, sp, #0x288
    60d4:	add	x21, sp, #0x2a0
    60d8:	add	x19, sp, #0x3a0
    60dc:	ldr	x1, [x0]
    60e0:	ldr	x1, [x1, #48]
    60e4:	blr	x1
    60e8:	mov	x1, x20
    60ec:	mov	x0, x23
    60f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    60f4:	add	x20, x20, #0x10
    60f8:	mov	x8, x21
    60fc:	mov	x1, x23
    6100:	mov	x0, x26
    6104:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6108:	mov	x0, x22
    610c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6110:	add	x1, x1, #0x0
    6114:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6118:	mov	x8, x19
    611c:	mov	x1, x22
    6120:	mov	x0, x21
    6124:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6128:	add	x0, sp, #0x1f0
    612c:	mov	x2, x19
    6130:	mov	x1, #0x1                   	// #1
    6134:	str	x24, [sp, #496]
    6138:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    613c:	ldr	x0, [sp, #1072]
    6140:	cmp	x0, x20
    6144:	b.eq	5e8c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10d4>  // b.none
    6148:	bl	0 <_ZdlPv>
    614c:	b	5e8c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10d4>
    6150:	ldp	x2, x1, [x19, #8]
    6154:	mov	x0, x19
    6158:	cmp	x2, x1
    615c:	cset	w1, eq  // eq = none
    6160:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6164:	ldr	w25, [sp, #1080]
    6168:	ldr	x21, [sp, #1072]
    616c:	str	w0, [x19, #40]
    6170:	add	x25, x21, x25, lsl #3
    6174:	cmp	x21, x25
    6178:	b.ne	5858 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xaa0>  // b.any
    617c:	b	58e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb30>
    6180:	ldp	x25, x26, [sp, #64]
    6184:	b	57dc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa24>
    6188:	mov	x0, x2
    618c:	ldp	x25, x26, [sp, #64]
    6190:	b	57dc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa24>
    6194:	mov	x0, x1
    6198:	mov	x1, #0x0                   	// #0
    619c:	b	57dc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa24>
    61a0:	mov	x28, #0x0                   	// #0
    61a4:	ldp	x25, x26, [sp, #64]
    61a8:	b	5534 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x77c>
    61ac:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    61b0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    61b4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    61b8:	add	x3, x3, #0x0
    61bc:	add	x1, x1, #0x0
    61c0:	add	x0, x0, #0x0
    61c4:	mov	w2, #0x22e                 	// #558
    61c8:	bl	0 <__assert_fail>
    61cc:	mov	x0, x20
    61d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    61d4:	add	x1, x1, #0x0
    61d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    61dc:	mov	x2, x20
    61e0:	add	x0, sp, #0x3a0
    61e4:	mov	x1, #0x1                   	// #1
    61e8:	mov	x28, #0x0                   	// #0
    61ec:	str	x24, [sp, #928]
    61f0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    61f4:	b	5704 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x94c>
    61f8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    61fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6200:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6204:	add	x3, x3, #0x0
    6208:	add	x1, x1, #0x0
    620c:	add	x0, x0, #0x0
    6210:	mov	w2, #0x95                  	// #149
    6214:	bl	0 <__assert_fail>
    6218:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    621c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6220:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6224:	add	x3, x3, #0x0
    6228:	add	x1, x1, #0x0
    622c:	add	x0, x0, #0x0
    6230:	mov	w2, #0x43                  	// #67
    6234:	bl	0 <__assert_fail>
    6238:	add	x21, sp, #0x3a0
    623c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6240:	mov	x0, x21
    6244:	add	x1, x1, #0x0
    6248:	b	5a1c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc64>
    624c:	bl	c8 <_ZN4llvm3isaINS_8BitsInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    6250:	bl	28 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm.isra.0.part.0>
    6254:	ldr	w2, [sp, #712]
    6258:	mov	x0, x28
    625c:	ldr	x1, [sp, #704]
    6260:	bl	0 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>
    6264:	bl	0 <_ZNK4llvm10VarDefInit4FoldEv>
    6268:	mov	x28, x0
    626c:	b	5704 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x94c>
    6270:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6274:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6278:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    627c:	add	x3, x3, #0x0
    6280:	add	x1, x1, #0x0
    6284:	add	x0, x0, #0x0
    6288:	mov	w2, #0x6f                  	// #111
    628c:	stp	x25, x26, [sp, #64]
    6290:	bl	0 <__assert_fail>
    6294:	bl	50 <_ZN4llvm3isaINS_9BitsRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

0000000000006298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>:
    6298:	stp	x29, x30, [sp, #-352]!
    629c:	mov	x29, sp
    62a0:	stp	x19, x20, [sp, #16]
    62a4:	mov	x19, x0
    62a8:	mov	x20, x1
    62ac:	stp	x21, x22, [sp, #32]
    62b0:	mov	w22, w3
    62b4:	stp	x23, x24, [sp, #48]
    62b8:	str	x2, [sp, #96]
    62bc:	bl	4db8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    62c0:	mov	x24, x0
    62c4:	cbz	x0, 6580 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e8>
    62c8:	stp	x25, x26, [sp, #64]
    62cc:	adrp	x25, 0 <_ZN4llvm11StringRecTy6SharedE>
    62d0:	add	x23, sp, #0x110
    62d4:	ldr	x26, [x25]
    62d8:	add	x21, x23, #0x10
    62dc:	ldr	w4, [x19, #40]
    62e0:	stp	x27, x28, [sp, #80]
    62e4:	adrp	x27, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    62e8:	cmp	w4, #0xf
    62ec:	b.eq	6498 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x200>  // b.none
    62f0:	b.hi	6514 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x27c>  // b.pmore
    62f4:	cmp	w4, #0x4
    62f8:	b.eq	6598 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x300>  // b.none
    62fc:	cmp	w4, #0x6
    6300:	b.ne	6578 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e0>  // b.any
    6304:	cmp	w22, #0x1
    6308:	b.eq	6578 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e0>  // b.none
    630c:	mov	x0, x19
    6310:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6314:	ldp	x1, x2, [x19, #8]
    6318:	mov	x28, x0
    631c:	mov	x0, x19
    6320:	cmp	x2, x1
    6324:	cset	w1, eq  // eq = none
    6328:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    632c:	str	w0, [x19, #40]
    6330:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6334:	mov	x0, x19
    6338:	str	x21, [sp, #272]
    633c:	ldr	d0, [x1]
    6340:	mov	x1, x23
    6344:	str	d0, [sp, #280]
    6348:	bl	6d98 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    634c:	ldr	w2, [sp, #280]
    6350:	cbz	w2, 68cc <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x634>
    6354:	ldr	x1, [sp, #272]
    6358:	ubfiz	x0, x2, #2, #32
    635c:	sub	x7, x0, #0x4
    6360:	mov	w2, w2
    6364:	add	x3, x1, x7
    6368:	cmp	x3, x1
    636c:	b.ls	643c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1a4>  // b.plast
    6370:	sub	x4, x0, #0x5
    6374:	mov	x2, x1
    6378:	cmp	x4, #0x27
    637c:	lsr	x4, x4, #3
    6380:	add	x6, x4, #0x1
    6384:	sub	x4, x7, x4, lsl #2
    6388:	lsl	x7, x6, #2
    638c:	ccmp	x7, x4, #0x0, hi  // hi = pmore
    6390:	b.gt	6880 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5e8>
    6394:	adrp	x5, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6398:	lsr	x4, x6, #2
    639c:	sub	x0, x0, #0x10
    63a0:	ldr	q2, [x5]
    63a4:	add	x0, x1, x0
    63a8:	add	x4, x1, x4, lsl #4
    63ac:	nop
    63b0:	ldr	q1, [x0]
    63b4:	ldr	q0, [x2]
    63b8:	tbl	v1.16b, {v1.16b}, v2.16b
    63bc:	tbl	v0.16b, {v0.16b}, v2.16b
    63c0:	str	q1, [x2], #16
    63c4:	cmp	x2, x4
    63c8:	str	q0, [x0], #-16
    63cc:	b.ne	63b0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x118>  // b.any
    63d0:	and	x0, x6, #0xfffffffffffffffc
    63d4:	cmp	x6, x0
    63d8:	neg	x8, x0
    63dc:	sub	x2, x3, x0, lsl #2
    63e0:	add	x4, x1, x0, lsl #2
    63e4:	b.eq	6438 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1a0>  // b.none
    63e8:	ldr	w10, [x3, x8, lsl #2]
    63ec:	add	x7, x4, #0x4
    63f0:	ldr	w9, [x1, x0, lsl #2]
    63f4:	sub	x6, x2, #0x4
    63f8:	str	w10, [x1, x0, lsl #2]
    63fc:	cmp	x7, x6
    6400:	str	w9, [x3, x8, lsl #2]
    6404:	b.cs	6438 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1a0>  // b.hs, b.nlast
    6408:	ldur	w7, [x2, #-4]
    640c:	add	x3, x4, #0x8
    6410:	ldr	w6, [x4, #4]
    6414:	sub	x0, x2, #0x8
    6418:	str	w7, [x4, #4]
    641c:	cmp	x3, x0
    6420:	stur	w6, [x2, #-4]
    6424:	b.cs	6438 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1a0>  // b.hs, b.nlast
    6428:	ldur	w3, [x2, #-8]
    642c:	ldr	w0, [x4, #8]
    6430:	str	w3, [x4, #8]
    6434:	stur	w0, [x2, #-8]
    6438:	ldr	w2, [sp, #280]
    643c:	ldr	x3, [x24]
    6440:	mov	x0, x24
    6444:	ldr	x3, [x3, #72]
    6448:	blr	x3
    644c:	mov	x24, x0
    6450:	cbz	x0, 68a4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60c>
    6454:	ldr	w0, [x19, #40]
    6458:	cmp	w0, #0x7
    645c:	b.ne	6a54 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7bc>  // b.any
    6460:	ldp	x2, x1, [x19, #8]
    6464:	mov	x0, x19
    6468:	cmp	x2, x1
    646c:	cset	w1, eq  // eq = none
    6470:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6474:	mov	w4, w0
    6478:	ldr	x0, [sp, #272]
    647c:	str	w4, [x19, #40]
    6480:	cmp	x0, x21
    6484:	b.eq	62e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>  // b.none
    6488:	bl	0 <free>
    648c:	ldr	w4, [x19, #40]
    6490:	cmp	w4, #0xf
    6494:	b.ne	62f0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x58>  // b.any
    6498:	ldp	x2, x1, [x19, #8]
    649c:	mov	x0, x19
    64a0:	cmp	x2, x1
    64a4:	cset	w1, eq  // eq = none
    64a8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    64ac:	str	w0, [x19, #40]
    64b0:	cmp	w0, #0x48
    64b4:	b.ne	68f0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x658>  // b.any
    64b8:	ldp	x0, x1, [x19, #48]
    64bc:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    64c0:	mov	x28, x0
    64c4:	ldr	x2, [x24]
    64c8:	mov	x1, x0
    64cc:	mov	x0, x24
    64d0:	ldr	x2, [x2, #88]
    64d4:	blr	x2
    64d8:	cbz	x0, 694c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6b4>
    64dc:	mov	x1, x28
    64e0:	mov	x0, x24
    64e4:	bl	0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>
    64e8:	mov	x1, x20
    64ec:	bl	0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>
    64f0:	ldp	x2, x1, [x19, #8]
    64f4:	mov	x24, x0
    64f8:	mov	x0, x19
    64fc:	cmp	x2, x1
    6500:	cset	w1, eq  // eq = none
    6504:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6508:	mov	w4, w0
    650c:	str	w0, [x19, #40]
    6510:	b	62e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>
    6514:	cmp	w4, #0x12
    6518:	b.ne	6578 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e0>  // b.any
    651c:	mov	x0, x19
    6520:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6524:	mov	x28, x0
    6528:	cbz	x24, 6a90 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7f8>
    652c:	ldrb	w0, [x24, #8]
    6530:	sub	w0, w0, #0x1
    6534:	and	w0, w0, #0xff
    6538:	cmp	w0, #0x16
    653c:	b.ls	6650 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3b8>  // b.plast
    6540:	add	x19, sp, #0x110
    6544:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6548:	mov	x0, x19
    654c:	add	x1, x1, #0x0
    6550:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6554:	mov	x24, #0x0                   	// #0
    6558:	mov	x2, x19
    655c:	add	x0, sp, #0xf0
    6560:	mov	x1, #0x1                   	// #1
    6564:	str	x28, [sp, #240]
    6568:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    656c:	ldp	x25, x26, [sp, #64]
    6570:	ldp	x27, x28, [sp, #80]
    6574:	b	6580 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e8>
    6578:	ldp	x25, x26, [sp, #64]
    657c:	ldp	x27, x28, [sp, #80]
    6580:	mov	x0, x24
    6584:	ldp	x19, x20, [sp, #16]
    6588:	ldp	x21, x22, [sp, #32]
    658c:	ldp	x23, x24, [sp, #48]
    6590:	ldp	x29, x30, [sp], #352
    6594:	ret
    6598:	mov	x0, x19
    659c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    65a0:	ldp	x2, x1, [x19, #8]
    65a4:	mov	x28, x0
    65a8:	mov	x0, x19
    65ac:	cmp	x2, x1
    65b0:	cset	w1, eq  // eq = none
    65b4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    65b8:	str	w0, [x19, #40]
    65bc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    65c0:	mov	x0, x19
    65c4:	str	x21, [sp, #272]
    65c8:	ldr	d0, [x1]
    65cc:	mov	x1, x23
    65d0:	str	d0, [sp, #280]
    65d4:	bl	6d98 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    65d8:	ldr	w2, [sp, #280]
    65dc:	cbz	w2, 662c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x394>
    65e0:	ldr	x3, [x24]
    65e4:	mov	x0, x24
    65e8:	ldr	x1, [sp, #272]
    65ec:	mov	w2, w2
    65f0:	ldr	x3, [x3, #80]
    65f4:	blr	x3
    65f8:	mov	x24, x0
    65fc:	cbz	x0, 6920 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x688>
    6600:	ldr	w0, [x19, #40]
    6604:	cmp	w0, #0x5
    6608:	b.eq	6460 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1c8>  // b.none
    660c:	add	x20, sp, #0xf0
    6610:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6614:	mov	x0, x20
    6618:	add	x1, x1, #0x0
    661c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6620:	mov	x1, x20
    6624:	mov	x0, x19
    6628:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    662c:	ldr	x0, [sp, #272]
    6630:	add	x23, x23, #0x10
    6634:	cmp	x0, x23
    6638:	b.eq	6640 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3a8>  // b.none
    663c:	bl	0 <free>
    6640:	mov	x24, #0x0                   	// #0
    6644:	ldp	x25, x26, [sp, #64]
    6648:	ldp	x27, x28, [sp, #80]
    664c:	b	6580 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e8>
    6650:	ldr	x0, [x24, #16]
    6654:	cbz	x0, 6a8c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7f4>
    6658:	ldr	w1, [x0, #8]
    665c:	cmp	w1, #0x5
    6660:	b.eq	6824 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x58c>  // b.none
    6664:	cmp	x0, x26
    6668:	b.eq	6748 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4b0>  // b.none
    666c:	mov	x2, x26
    6670:	mov	x1, x24
    6674:	mov	w0, #0x0                   	// #0
    6678:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    667c:	mov	x1, x20
    6680:	mov	w2, #0x0                   	// #0
    6684:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    6688:	cbz	x0, 6a90 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7f8>
    668c:	ldrb	w1, [x0, #8]
    6690:	sub	w1, w1, #0x1
    6694:	and	w1, w1, #0xff
    6698:	cmp	w1, #0x16
    669c:	b.ls	6744 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4ac>  // b.plast
    66a0:	add	x23, sp, #0x78
    66a4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66a8:	mov	x0, x23
    66ac:	add	x1, x1, #0x0
    66b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66b4:	add	x19, sp, #0x110
    66b8:	ldr	x1, [x24]
    66bc:	mov	x8, x19
    66c0:	mov	x0, x24
    66c4:	ldr	x1, [x1, #40]
    66c8:	add	x24, sp, #0x90
    66cc:	add	x21, sp, #0xb0
    66d0:	add	x22, sp, #0xd0
    66d4:	add	x20, sp, #0xf0
    66d8:	blr	x1
    66dc:	mov	x1, x19
    66e0:	mov	x0, x24
    66e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66e8:	add	x19, x19, #0x10
    66ec:	mov	x8, x21
    66f0:	mov	x1, x24
    66f4:	mov	x0, x23
    66f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    66fc:	mov	x0, x22
    6700:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6704:	add	x1, x1, #0x0
    6708:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    670c:	mov	x8, x20
    6710:	mov	x1, x22
    6714:	mov	x0, x21
    6718:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    671c:	add	x0, sp, #0x70
    6720:	mov	x2, x20
    6724:	mov	x1, #0x1                   	// #1
    6728:	str	x28, [sp, #112]
    672c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6730:	ldr	x0, [sp, #272]
    6734:	cmp	x0, x19
    6738:	b.eq	6640 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3a8>  // b.none
    673c:	bl	0 <_ZdlPv>
    6740:	b	6640 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3a8>
    6744:	mov	x24, x0
    6748:	ldp	x2, x1, [x19, #8]
    674c:	mov	x0, x19
    6750:	cmp	x2, x1
    6754:	cset	w1, eq  // eq = none
    6758:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    675c:	str	w0, [x19, #40]
    6760:	cmp	w0, #0x6
    6764:	b.eq	6774 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4dc>  // b.none
    6768:	sub	w0, w0, #0xc
    676c:	cmp	w0, #0x1
    6770:	b.hi	6798 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x500>  // b.pmore
    6774:	mov	x1, #0x0                   	// #0
    6778:	add	x0, x27, #0x0
    677c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    6780:	mov	x1, x0
    6784:	mov	x0, x24
    6788:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    678c:	ldr	w4, [x19, #40]
    6790:	mov	x24, x0
    6794:	b	62e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>
    6798:	mov	x1, x20
    679c:	mov	w3, #0x1                   	// #1
    67a0:	mov	x2, #0x0                   	// #0
    67a4:	mov	x0, x19
    67a8:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    67ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    67b0:	mov	x3, x0
    67b4:	cbz	x0, 6a78 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7e0>
    67b8:	ldr	x2, [x25]
    67bc:	mov	x1, x0
    67c0:	ldr	x0, [x0, #16]
    67c4:	cmp	x0, x2
    67c8:	b.eq	6784 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4ec>  // b.none
    67cc:	mov	w0, #0x0                   	// #0
    67d0:	str	x3, [sp, #104]
    67d4:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    67d8:	mov	x1, x20
    67dc:	mov	w2, #0x0                   	// #0
    67e0:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    67e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    67e8:	mov	x1, x0
    67ec:	ldr	x3, [sp, #104]
    67f0:	cbnz	x0, 6784 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4ec>
    67f4:	add	x23, sp, #0x78
    67f8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    67fc:	mov	x0, x23
    6800:	add	x1, x1, #0x0
    6804:	str	x3, [sp, #96]
    6808:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    680c:	ldr	x3, [sp, #96]
    6810:	add	x19, sp, #0x110
    6814:	mov	x8, x19
    6818:	mov	x0, x3
    681c:	ldr	x1, [x3]
    6820:	b	66c4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x42c>
    6824:	ldp	x2, x1, [x19, #8]
    6828:	mov	x0, x19
    682c:	cmp	x2, x1
    6830:	cset	w1, eq  // eq = none
    6834:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6838:	str	w0, [x19, #40]
    683c:	mov	w4, w0
    6840:	cmp	w0, #0x6
    6844:	b.eq	6304 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6c>  // b.none
    6848:	sub	w0, w0, #0xc
    684c:	cmp	w0, #0x1
    6850:	b.ls	62e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>  // b.plast
    6854:	ldr	x2, [sp, #96]
    6858:	mov	w3, #0x1                   	// #1
    685c:	mov	x1, x20
    6860:	mov	x0, x19
    6864:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6868:	mov	x1, x0
    686c:	mov	x0, x24
    6870:	bl	0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE>
    6874:	ldr	w4, [x19, #40]
    6878:	mov	x24, x0
    687c:	b	62e8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x50>
    6880:	mov	x0, x1
    6884:	nop
    6888:	ldr	w4, [x3]
    688c:	ldr	w2, [x0]
    6890:	str	w4, [x0], #4
    6894:	str	w2, [x3], #-4
    6898:	cmp	x0, x3
    689c:	b.cc	6888 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5f0>  // b.lo, b.ul, b.last
    68a0:	b	6438 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1a0>
    68a4:	add	x19, sp, #0xf0
    68a8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    68ac:	mov	x0, x19
    68b0:	add	x1, x1, #0x0
    68b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    68b8:	str	x28, [sp, #208]
    68bc:	mov	x2, x19
    68c0:	add	x0, sp, #0xd0
    68c4:	mov	x1, #0x1                   	// #1
    68c8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    68cc:	ldr	x0, [sp, #272]
    68d0:	add	x23, x23, #0x10
    68d4:	mov	x24, #0x0                   	// #0
    68d8:	cmp	x0, x23
    68dc:	b.eq	6578 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e0>  // b.none
    68e0:	bl	0 <free>
    68e4:	ldp	x25, x26, [sp, #64]
    68e8:	ldp	x27, x28, [sp, #80]
    68ec:	b	6580 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e8>
    68f0:	add	x20, sp, #0x110
    68f4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    68f8:	mov	x0, x20
    68fc:	add	x1, x1, #0x0
    6900:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6904:	mov	x24, #0x0                   	// #0
    6908:	mov	x1, x20
    690c:	mov	x0, x19
    6910:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6914:	ldp	x25, x26, [sp, #64]
    6918:	ldp	x27, x28, [sp, #80]
    691c:	b	6580 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e8>
    6920:	add	x19, sp, #0xf0
    6924:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6928:	mov	x0, x19
    692c:	add	x1, x1, #0x0
    6930:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6934:	str	x28, [sp, #208]
    6938:	mov	x2, x19
    693c:	add	x0, sp, #0xd0
    6940:	mov	x1, #0x1                   	// #1
    6944:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6948:	b	662c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x394>
    694c:	ldr	w0, [x19, #40]
    6950:	sub	w0, w0, #0x48
    6954:	cmp	w0, #0x3
    6958:	b.hi	6ab0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x818>  // b.pmore
    695c:	add	x21, sp, #0x90
    6960:	add	x1, x19, #0x30
    6964:	mov	x8, x21
    6968:	add	x22, sp, #0xb0
    696c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6970:	add	x0, x0, #0x0
    6974:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6978:	add	x23, sp, #0xd0
    697c:	mov	x0, x21
    6980:	mov	x8, x22
    6984:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6988:	add	x1, x1, #0x0
    698c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6990:	add	x20, sp, #0x110
    6994:	ldr	x1, [x24]
    6998:	mov	x0, x24
    699c:	mov	x8, x23
    69a0:	add	x24, sp, #0xf0
    69a4:	add	x25, sp, #0x78
    69a8:	ldr	x1, [x1, #40]
    69ac:	blr	x1
    69b0:	mov	x1, x23
    69b4:	mov	x0, x22
    69b8:	mov	x8, x24
    69bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    69c0:	mov	x8, x20
    69c4:	mov	x0, x24
    69c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    69cc:	add	x1, x1, #0x0
    69d0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    69d4:	mov	x1, x20
    69d8:	mov	x0, x25
    69dc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    69e0:	add	x20, x20, #0x10
    69e4:	mov	x1, x25
    69e8:	mov	x0, x19
    69ec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    69f0:	ldr	x0, [sp, #272]
    69f4:	cmp	x0, x20
    69f8:	b.eq	6a00 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x768>  // b.none
    69fc:	bl	0 <_ZdlPv>
    6a00:	ldr	x0, [sp, #240]
    6a04:	add	x24, x24, #0x10
    6a08:	cmp	x0, x24
    6a0c:	b.eq	6a14 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x77c>  // b.none
    6a10:	bl	0 <_ZdlPv>
    6a14:	ldr	x0, [sp, #208]
    6a18:	add	x23, x23, #0x10
    6a1c:	cmp	x0, x23
    6a20:	b.eq	6a28 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x790>  // b.none
    6a24:	bl	0 <_ZdlPv>
    6a28:	ldr	x0, [sp, #176]
    6a2c:	add	x22, x22, #0x10
    6a30:	cmp	x0, x22
    6a34:	b.eq	6a3c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7a4>  // b.none
    6a38:	bl	0 <_ZdlPv>
    6a3c:	ldr	x0, [sp, #144]
    6a40:	add	x21, x21, #0x10
    6a44:	cmp	x0, x21
    6a48:	b.eq	6640 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3a8>  // b.none
    6a4c:	bl	0 <_ZdlPv>
    6a50:	b	6640 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3a8>
    6a54:	add	x20, sp, #0xf0
    6a58:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6a5c:	mov	x0, x20
    6a60:	add	x1, x1, #0x0
    6a64:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6a68:	mov	x1, x20
    6a6c:	mov	x0, x19
    6a70:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6a74:	b	68cc <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x634>
    6a78:	add	x19, sp, #0x110
    6a7c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6a80:	mov	x0, x19
    6a84:	add	x1, x1, #0x0
    6a88:	b	6550 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2b8>
    6a8c:	bl	78 <_ZN4llvm3isaINS_9ListRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    6a90:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6a94:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6a98:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6a9c:	add	x3, x3, #0x0
    6aa0:	add	x1, x1, #0x0
    6aa4:	add	x0, x0, #0x0
    6aa8:	mov	w2, #0x69                  	// #105
    6aac:	bl	0 <__assert_fail>
    6ab0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6ab4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6ab8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6abc:	add	x3, x3, #0x0
    6ac0:	add	x1, x1, #0x0
    6ac4:	add	x0, x0, #0x0
    6ac8:	mov	w2, #0x6f                  	// #111
    6acc:	bl	0 <__assert_fail>

0000000000006ad0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>:
    6ad0:	stp	x29, x30, [sp, #-96]!
    6ad4:	mov	x3, x2
    6ad8:	mov	x29, sp
    6adc:	stp	x19, x20, [sp, #16]
    6ae0:	mov	x19, x1
    6ae4:	mov	x20, x0
    6ae8:	cbz	x2, 6bc4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xf4>
    6aec:	ldrb	w0, [x3, #8]
    6af0:	cmp	w0, #0x8
    6af4:	b.eq	6b3c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x6c>  // b.none
    6af8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6afc:	add	x1, x1, #0x0
    6b00:	add	x19, sp, #0x48
    6b04:	mov	x0, x19
    6b08:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6b0c:	mov	x0, x20
    6b10:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6b14:	mov	x3, x0
    6b18:	mov	x2, x19
    6b1c:	add	x0, sp, #0x40
    6b20:	mov	x1, #0x1                   	// #1
    6b24:	str	x3, [sp, #64]
    6b28:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6b2c:	mov	w0, #0x1                   	// #1
    6b30:	ldp	x19, x20, [sp, #16]
    6b34:	ldp	x29, x30, [sp], #96
    6b38:	ret
    6b3c:	stp	x21, x22, [sp, #32]
    6b40:	ldr	x21, [x3, #24]
    6b44:	tbnz	x21, #63, 6b98 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xc8>
    6b48:	ldr	w0, [x20, #40]
    6b4c:	cmp	w0, #0x2
    6b50:	b.eq	6c64 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x194>  // b.none
    6b54:	cmp	w0, #0x46
    6b58:	b.eq	6bd8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x108>  // b.none
    6b5c:	ldp	w0, w1, [x19, #8]
    6b60:	cmp	w0, w1
    6b64:	b.cs	6d58 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x288>  // b.hs, b.nlast
    6b68:	ldr	x1, [x19]
    6b6c:	str	w21, [x1, w0, uxtw #2]
    6b70:	ldp	w0, w2, [x19, #8]
    6b74:	mov	w1, w0
    6b78:	add	x1, x1, #0x1
    6b7c:	cmp	x1, x2
    6b80:	b.hi	6d74 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x2a4>  // b.pmore
    6b84:	add	w1, w0, #0x1
    6b88:	mov	w0, #0x0                   	// #0
    6b8c:	ldp	x21, x22, [sp, #32]
    6b90:	str	w1, [x19, #8]
    6b94:	b	6b30 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x60>
    6b98:	add	x19, sp, #0x48
    6b9c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6ba0:	mov	x0, x19
    6ba4:	add	x1, x1, #0x0
    6ba8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6bac:	mov	x1, x19
    6bb0:	mov	x0, x20
    6bb4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6bb8:	and	w0, w0, #0xff
    6bbc:	ldp	x21, x22, [sp, #32]
    6bc0:	b	6b30 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x60>
    6bc4:	mov	x1, #0x0                   	// #0
    6bc8:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6bcc:	mov	x3, x0
    6bd0:	cbz	x0, 6af8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x28>
    6bd4:	b	6aec <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1c>
    6bd8:	ldp	x2, x1, [x20, #8]
    6bdc:	mov	x0, x20
    6be0:	ldr	x22, [x20, #80]
    6be4:	neg	x22, x22
    6be8:	cmp	x2, x1
    6bec:	cset	w1, eq  // eq = none
    6bf0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6bf4:	str	w0, [x20, #40]
    6bf8:	tbnz	x22, #63, 6b98 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xc8>
    6bfc:	ldr	w0, [x19, #8]
    6c00:	cmp	x22, x21
    6c04:	str	x23, [sp, #48]
    6c08:	b.le	6ccc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1fc>
    6c0c:	ldr	w3, [x19, #12]
    6c10:	add	x23, x19, #0x10
    6c14:	nop
    6c18:	cmp	w0, w3
    6c1c:	mov	w20, w21
    6c20:	b.cs	6d34 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x264>  // b.hs, b.nlast
    6c24:	ldr	x2, [x19]
    6c28:	str	w20, [x2, w0, uxtw #2]
    6c2c:	ldp	w0, w3, [x19, #8]
    6c30:	mov	w2, w0
    6c34:	add	x2, x2, #0x1
    6c38:	cmp	x2, w3, uxtw
    6c3c:	b.hi	6d78 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x2a8>  // b.pmore
    6c40:	add	w0, w0, #0x1
    6c44:	str	w0, [x19, #8]
    6c48:	add	x21, x21, #0x1
    6c4c:	cmp	x22, x21
    6c50:	b.ge	6c18 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x148>  // b.tcont
    6c54:	mov	w0, #0x0                   	// #0
    6c58:	ldp	x21, x22, [sp, #32]
    6c5c:	ldr	x23, [sp, #48]
    6c60:	b	6b30 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x60>
    6c64:	ldp	x2, x1, [x20, #8]
    6c68:	mov	x0, x20
    6c6c:	cmp	x2, x1
    6c70:	cset	w1, eq  // eq = none
    6c74:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6c78:	str	w0, [x20, #40]
    6c7c:	mov	w3, #0x0                   	// #0
    6c80:	mov	x0, x20
    6c84:	mov	x2, #0x0                   	// #0
    6c88:	mov	x1, #0x0                   	// #0
    6c8c:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6c90:	cbz	x0, 6ca0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1d0>
    6c94:	ldrb	w1, [x0, #8]
    6c98:	cmp	w1, #0x8
    6c9c:	b.eq	6d50 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x280>  // b.none
    6ca0:	add	x19, sp, #0x48
    6ca4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6ca8:	mov	x0, x19
    6cac:	add	x1, x1, #0x0
    6cb0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6cb4:	mov	x1, x19
    6cb8:	mov	x0, x20
    6cbc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6cc0:	mov	w0, #0x1                   	// #1
    6cc4:	ldp	x21, x22, [sp, #32]
    6cc8:	b	6b30 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x60>
    6ccc:	ldr	w3, [x19, #12]
    6cd0:	sub	x22, x22, #0x1
    6cd4:	add	x23, x19, #0x10
    6cd8:	cmp	w0, w3
    6cdc:	mov	w20, w21
    6ce0:	b.cs	6d18 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x248>  // b.hs, b.nlast
    6ce4:	ldr	x2, [x19]
    6ce8:	str	w20, [x2, w0, uxtw #2]
    6cec:	ldp	w0, w3, [x19, #8]
    6cf0:	mov	w2, w0
    6cf4:	add	x2, x2, #0x1
    6cf8:	cmp	x2, w3, uxtw
    6cfc:	b.hi	6d78 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x2a8>  // b.pmore
    6d00:	add	w0, w0, #0x1
    6d04:	str	w0, [x19, #8]
    6d08:	sub	x21, x21, #0x1
    6d0c:	cmp	x21, x22
    6d10:	b.ne	6cd8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x208>  // b.any
    6d14:	b	6c54 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x184>
    6d18:	mov	x0, x19
    6d1c:	mov	x1, x23
    6d20:	mov	x3, #0x4                   	// #4
    6d24:	mov	x2, #0x0                   	// #0
    6d28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6d2c:	ldr	w0, [x19, #8]
    6d30:	b	6ce4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x214>
    6d34:	mov	x0, x19
    6d38:	mov	x1, x23
    6d3c:	mov	x3, #0x4                   	// #4
    6d40:	mov	x2, #0x0                   	// #0
    6d44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6d48:	ldr	w0, [x19, #8]
    6d4c:	b	6c24 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x154>
    6d50:	ldr	x22, [x0, #24]
    6d54:	b	6bf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x128>
    6d58:	mov	x0, x19
    6d5c:	add	x1, x19, #0x10
    6d60:	mov	x3, #0x4                   	// #4
    6d64:	mov	x2, #0x0                   	// #0
    6d68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6d6c:	ldr	w0, [x19, #8]
    6d70:	b	6b68 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x98>
    6d74:	str	x23, [sp, #48]
    6d78:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6d7c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6d80:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6d84:	add	x3, x3, #0x0
    6d88:	add	x1, x1, #0x0
    6d8c:	add	x0, x0, #0x0
    6d90:	mov	w2, #0x43                  	// #67
    6d94:	bl	0 <__assert_fail>

0000000000006d98 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>:
    6d98:	stp	x29, x30, [sp, #-32]!
    6d9c:	mov	x2, #0x0                   	// #0
    6da0:	mov	x29, sp
    6da4:	stp	x19, x20, [sp, #16]
    6da8:	mov	x19, x0
    6dac:	mov	x20, x1
    6db0:	bl	6ad0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    6db4:	tst	w0, #0xff
    6db8:	b.eq	6dec <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x54>  // b.none
    6dbc:	b	6e08 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x70>
    6dc0:	ldp	x3, x2, [x19, #8]
    6dc4:	cmp	x3, x2
    6dc8:	cset	w1, eq  // eq = none
    6dcc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6dd0:	str	w0, [x19, #40]
    6dd4:	mov	x1, x20
    6dd8:	mov	x0, x19
    6ddc:	mov	x2, #0x0                   	// #0
    6de0:	bl	6ad0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    6de4:	tst	w0, #0xff
    6de8:	b.ne	6e08 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x70>  // b.any
    6dec:	ldr	w2, [x19, #40]
    6df0:	mov	x0, x19
    6df4:	cmp	w2, #0xe
    6df8:	b.eq	6dc0 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x28>  // b.none
    6dfc:	ldp	x19, x20, [sp, #16]
    6e00:	ldp	x29, x30, [sp], #32
    6e04:	ret
    6e08:	str	wzr, [x20, #8]
    6e0c:	ldp	x19, x20, [sp, #16]
    6e10:	ldp	x29, x30, [sp], #32
    6e14:	ret

0000000000006e18 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE>:
    6e18:	stp	x29, x30, [sp, #-96]!
    6e1c:	mov	x29, sp
    6e20:	stp	x19, x20, [sp, #16]
    6e24:	mov	x20, x1
    6e28:	ldr	w1, [x0, #40]
    6e2c:	stp	x21, x22, [sp, #32]
    6e30:	mov	w21, #0x0                   	// #0
    6e34:	cmp	w1, #0xa
    6e38:	b.eq	6e50 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x38>  // b.none
    6e3c:	mov	w0, w21
    6e40:	ldp	x19, x20, [sp, #16]
    6e44:	ldp	x21, x22, [sp, #32]
    6e48:	ldp	x29, x30, [sp], #96
    6e4c:	ret
    6e50:	mov	x19, x0
    6e54:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6e58:	mov	x22, x0
    6e5c:	mov	x0, x19
    6e60:	mov	w21, #0x1                   	// #1
    6e64:	ldp	x2, x1, [x19, #8]
    6e68:	cmp	x2, x1
    6e6c:	cset	w1, eq  // eq = none
    6e70:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6e74:	str	w0, [x19, #40]
    6e78:	mov	x1, x20
    6e7c:	mov	x0, x19
    6e80:	bl	6d98 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    6e84:	ldr	w0, [x20, #8]
    6e88:	cbz	w0, 6e3c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x24>
    6e8c:	ldr	w0, [x19, #40]
    6e90:	cmp	w0, #0xb
    6e94:	b.eq	6f10 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xf8>  // b.none
    6e98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6e9c:	add	x1, x1, #0x0
    6ea0:	add	x20, sp, #0x48
    6ea4:	str	x23, [sp, #48]
    6ea8:	mov	x0, x20
    6eac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6eb0:	mov	x0, x19
    6eb4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6eb8:	mov	x3, x0
    6ebc:	mov	x2, x20
    6ec0:	add	x23, sp, #0x40
    6ec4:	mov	x1, #0x1                   	// #1
    6ec8:	mov	x0, x23
    6ecc:	str	x3, [sp, #64]
    6ed0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6ed4:	mov	x0, x20
    6ed8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6edc:	add	x1, x1, #0x0
    6ee0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6ee4:	mov	x2, x20
    6ee8:	mov	x0, x23
    6eec:	mov	x1, #0x1                   	// #1
    6ef0:	str	x22, [sp, #64]
    6ef4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6ef8:	mov	w0, w21
    6efc:	ldp	x19, x20, [sp, #16]
    6f00:	ldp	x21, x22, [sp, #32]
    6f04:	ldr	x23, [sp, #48]
    6f08:	ldp	x29, x30, [sp], #96
    6f0c:	ret
    6f10:	ldp	x2, x1, [x19, #8]
    6f14:	mov	x0, x19
    6f18:	mov	w21, #0x0                   	// #0
    6f1c:	cmp	x2, x1
    6f20:	cset	w1, eq  // eq = none
    6f24:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6f28:	str	w0, [x19, #40]
    6f2c:	b	6e3c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x24>

0000000000006f30 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE>:
    6f30:	stp	x29, x30, [sp, #-96]!
    6f34:	mov	x29, sp
    6f38:	stp	x19, x20, [sp, #16]
    6f3c:	mov	x20, x1
    6f40:	ldr	w1, [x0, #40]
    6f44:	stp	x21, x22, [sp, #32]
    6f48:	mov	w21, #0x0                   	// #0
    6f4c:	cmp	w1, #0x6
    6f50:	b.eq	6f68 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x38>  // b.none
    6f54:	mov	w0, w21
    6f58:	ldp	x19, x20, [sp, #16]
    6f5c:	ldp	x21, x22, [sp, #32]
    6f60:	ldp	x29, x30, [sp], #96
    6f64:	ret
    6f68:	mov	x19, x0
    6f6c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6f70:	mov	x22, x0
    6f74:	mov	x0, x19
    6f78:	mov	w21, #0x1                   	// #1
    6f7c:	ldp	x2, x1, [x19, #8]
    6f80:	cmp	x2, x1
    6f84:	cset	w1, eq  // eq = none
    6f88:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6f8c:	str	w0, [x19, #40]
    6f90:	mov	x1, x20
    6f94:	mov	x0, x19
    6f98:	bl	6d98 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    6f9c:	ldr	w0, [x20, #8]
    6fa0:	cbz	w0, 6f54 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x24>
    6fa4:	ldr	w0, [x19, #40]
    6fa8:	cmp	w0, #0x7
    6fac:	b.eq	7028 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xf8>  // b.none
    6fb0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6fb4:	add	x1, x1, #0x0
    6fb8:	add	x20, sp, #0x48
    6fbc:	str	x23, [sp, #48]
    6fc0:	mov	x0, x20
    6fc4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6fc8:	mov	x0, x19
    6fcc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6fd0:	mov	x3, x0
    6fd4:	mov	x2, x20
    6fd8:	add	x23, sp, #0x40
    6fdc:	mov	x1, #0x1                   	// #1
    6fe0:	mov	x0, x23
    6fe4:	str	x3, [sp, #64]
    6fe8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6fec:	mov	x0, x20
    6ff0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6ff4:	add	x1, x1, #0x0
    6ff8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    6ffc:	mov	x2, x20
    7000:	mov	x0, x23
    7004:	mov	x1, #0x1                   	// #1
    7008:	str	x22, [sp, #64]
    700c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7010:	mov	w0, w21
    7014:	ldp	x19, x20, [sp, #16]
    7018:	ldp	x21, x22, [sp, #32]
    701c:	ldr	x23, [sp, #48]
    7020:	ldp	x29, x30, [sp], #96
    7024:	ret
    7028:	ldp	x2, x1, [x19, #8]
    702c:	mov	x0, x19
    7030:	mov	w21, #0x0                   	// #0
    7034:	cmp	x2, x1
    7038:	cset	w1, eq  // eq = none
    703c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7040:	str	w0, [x19, #40]
    7044:	b	6f54 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x24>

0000000000007048 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE>:
    7048:	sub	sp, sp, #0x210
    704c:	stp	x29, x30, [sp]
    7050:	mov	x29, sp
    7054:	stp	x21, x22, [sp, #32]
    7058:	mov	x21, x1
    705c:	mov	x22, x2
    7060:	ldp	x1, x2, [x0, #8]
    7064:	stp	x19, x20, [sp, #16]
    7068:	mov	x19, x0
    706c:	cmp	x2, x1
    7070:	cset	w1, eq  // eq = none
    7074:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7078:	str	w0, [x19, #40]
    707c:	cmp	w0, #0x8
    7080:	b.ne	7210 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1c8>  // b.any
    7084:	ldp	x1, x2, [x19, #8]
    7088:	mov	x0, x19
    708c:	stp	x23, x24, [sp, #48]
    7090:	add	x23, sp, #0x1b0
    7094:	add	x24, sp, #0x1e0
    7098:	stp	x25, x26, [sp, #64]
    709c:	add	x25, x23, #0x10
    70a0:	add	x26, x24, #0x10
    70a4:	cmp	x2, x1
    70a8:	cset	w1, eq  // eq = none
    70ac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    70b0:	str	w0, [x19, #40]
    70b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    70b8:	str	x25, [sp, #432]
    70bc:	str	x26, [sp, #480]
    70c0:	cmp	w0, #0x9
    70c4:	ldr	d0, [x1]
    70c8:	str	d0, [sp, #440]
    70cc:	str	d0, [sp, #488]
    70d0:	b.ne	71ac <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x164>  // b.any
    70d4:	b	72b8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x270>
    70d8:	ldr	x1, [sp, #432]
    70dc:	str	x20, [x1, w0, uxtw #3]
    70e0:	ldr	w0, [sp, #440]
    70e4:	ldr	w2, [sp, #444]
    70e8:	mov	w1, w0
    70ec:	add	x1, x1, #0x1
    70f0:	cmp	x1, x2
    70f4:	b.hi	75c8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x580>  // b.pmore
    70f8:	add	w0, w0, #0x1
    70fc:	str	w0, [sp, #440]
    7100:	ldr	w0, [x19, #40]
    7104:	cmp	w0, #0xc
    7108:	b.ne	73d4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x38c>  // b.any
    710c:	ldp	x2, x1, [x19, #8]
    7110:	mov	x0, x19
    7114:	cmp	x2, x1
    7118:	cset	w1, eq  // eq = none
    711c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7120:	str	w0, [x19, #40]
    7124:	mov	x2, x22
    7128:	mov	x1, x21
    712c:	mov	x0, x19
    7130:	mov	w3, #0x0                   	// #0
    7134:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7138:	mov	x20, x0
    713c:	cbz	x0, 724c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x204>
    7140:	ldr	w0, [sp, #488]
    7144:	ldr	w1, [sp, #492]
    7148:	cmp	w0, w1
    714c:	b.cs	71f4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1ac>  // b.hs, b.nlast
    7150:	ldr	x1, [sp, #480]
    7154:	str	x20, [x1, w0, uxtw #3]
    7158:	ldr	w0, [sp, #488]
    715c:	ldr	w2, [sp, #492]
    7160:	mov	w1, w0
    7164:	add	x1, x1, #0x1
    7168:	cmp	x1, x2
    716c:	b.hi	75c8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x580>  // b.pmore
    7170:	add	w0, w0, #0x1
    7174:	str	w0, [sp, #488]
    7178:	ldr	w0, [x19, #40]
    717c:	cmp	w0, #0x9
    7180:	b.eq	73fc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3b4>  // b.none
    7184:	cmp	w0, #0xe
    7188:	b.ne	7418 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3d0>  // b.any
    718c:	ldp	x2, x1, [x19, #8]
    7190:	mov	x0, x19
    7194:	cmp	x2, x1
    7198:	cset	w1, eq  // eq = none
    719c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    71a0:	str	w0, [x19, #40]
    71a4:	cmp	w0, #0x9
    71a8:	b.eq	72b8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x270>  // b.none
    71ac:	mov	x1, x21
    71b0:	mov	x0, x19
    71b4:	mov	w3, #0x0                   	// #0
    71b8:	mov	x2, #0x0                   	// #0
    71bc:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    71c0:	mov	x20, x0
    71c4:	cbz	x0, 724c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x204>
    71c8:	ldr	w0, [sp, #440]
    71cc:	ldr	w1, [sp, #444]
    71d0:	cmp	w0, w1
    71d4:	b.cc	70d8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x90>  // b.lo, b.ul, b.last
    71d8:	mov	x0, x23
    71dc:	mov	x1, x25
    71e0:	mov	x3, #0x8                   	// #8
    71e4:	mov	x2, #0x0                   	// #0
    71e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    71ec:	ldr	w0, [sp, #440]
    71f0:	b	70d8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x90>
    71f4:	mov	x0, x24
    71f8:	mov	x1, x26
    71fc:	mov	x3, #0x8                   	// #8
    7200:	mov	x2, #0x0                   	// #0
    7204:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7208:	ldr	w0, [sp, #488]
    720c:	b	7150 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x108>
    7210:	add	x21, sp, #0x1e0
    7214:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7218:	mov	x0, x21
    721c:	add	x1, x1, #0x0
    7220:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7224:	mov	x20, #0x0                   	// #0
    7228:	mov	x1, x21
    722c:	mov	x0, x19
    7230:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7234:	mov	x0, x20
    7238:	ldp	x29, x30, [sp]
    723c:	ldp	x19, x20, [sp, #16]
    7240:	ldp	x21, x22, [sp, #32]
    7244:	add	sp, sp, #0x210
    7248:	ret
    724c:	mov	x20, #0x0                   	// #0
    7250:	ldr	x0, [sp, #480]
    7254:	add	x24, x24, #0x10
    7258:	cmp	x0, x24
    725c:	b.eq	7264 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x21c>  // b.none
    7260:	bl	0 <free>
    7264:	ldr	x0, [sp, #432]
    7268:	add	x23, x23, #0x10
    726c:	cmp	x0, x23
    7270:	b.eq	7298 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x250>  // b.none
    7274:	bl	0 <free>
    7278:	mov	x0, x20
    727c:	ldp	x29, x30, [sp]
    7280:	ldp	x19, x20, [sp, #16]
    7284:	ldp	x21, x22, [sp, #32]
    7288:	ldp	x23, x24, [sp, #48]
    728c:	ldp	x25, x26, [sp, #64]
    7290:	add	sp, sp, #0x210
    7294:	ret
    7298:	mov	x0, x20
    729c:	ldp	x29, x30, [sp]
    72a0:	ldp	x19, x20, [sp, #16]
    72a4:	ldp	x21, x22, [sp, #32]
    72a8:	ldp	x23, x24, [sp, #48]
    72ac:	ldp	x25, x26, [sp, #64]
    72b0:	add	sp, sp, #0x210
    72b4:	ret
    72b8:	ldp	x1, x2, [x19, #8]
    72bc:	mov	x0, x19
    72c0:	cmp	x2, x1
    72c4:	cset	w1, eq  // eq = none
    72c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    72cc:	str	w0, [x19, #40]
    72d0:	ldr	w0, [sp, #440]
    72d4:	cbz	w0, 742c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3e4>
    72d8:	ldr	x0, [sp, #480]
    72dc:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    72e0:	ldr	w25, [sp, #488]
    72e4:	stp	x27, x28, [sp, #80]
    72e8:	mov	x22, x0
    72ec:	mov	x27, #0x0                   	// #0
    72f0:	add	x25, x0, x25, lsl #3
    72f4:	ldr	x26, [x1]
    72f8:	cmp	x0, x25
    72fc:	b.ne	731c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2d4>  // b.any
    7300:	b	7594 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x54c>
    7304:	cmp	w1, #0x18
    7308:	cbz	x27, 73c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x378>
    730c:	b.ne	734c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x304>  // b.any
    7310:	add	x22, x22, #0x8
    7314:	cmp	x25, x22
    7318:	b.eq	7370 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x328>  // b.none
    731c:	ldr	x20, [x22]
    7320:	cbz	x20, 75ec <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x5a4>
    7324:	ldrb	w1, [x20, #8]
    7328:	sub	w0, w1, #0x1
    732c:	and	w0, w0, #0xff
    7330:	cmp	w0, #0x16
    7334:	b.ls	73a0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x358>  // b.plast
    7338:	mov	x28, #0x0                   	// #0
    733c:	cmp	w1, #0x2
    7340:	b.ne	7304 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2bc>  // b.any
    7344:	mov	x28, x26
    7348:	cbz	x27, 73c8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x380>
    734c:	mov	x1, x28
    7350:	mov	x0, x27
    7354:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    7358:	mov	x20, x0
    735c:	cbz	x0, 7440 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3f8>
    7360:	add	x22, x22, #0x8
    7364:	mov	x27, x0
    7368:	cmp	x25, x22
    736c:	b.ne	731c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2d4>  // b.any
    7370:	cbz	x27, 7594 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x54c>
    7374:	ldr	w1, [sp, #440]
    7378:	mov	x4, x27
    737c:	ldr	w3, [sp, #488]
    7380:	ldr	x0, [sp, #432]
    7384:	ldr	x2, [sp, #480]
    7388:	bl	0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>
    738c:	mov	x1, x21
    7390:	bl	0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>
    7394:	mov	x20, x0
    7398:	ldp	x27, x28, [sp, #80]
    739c:	b	7250 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x208>
    73a0:	cmp	w1, #0x3
    73a4:	ldr	x28, [x20, #16]
    73a8:	b.ne	733c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2f4>  // b.any
    73ac:	ldr	w0, [x20, #32]
    73b0:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    73b4:	mov	x28, x0
    73b8:	ldrb	w1, [x20, #8]
    73bc:	b	733c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2f4>
    73c0:	csel	x27, xzr, x28, eq  // eq = none
    73c4:	b	7310 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2c8>
    73c8:	adrp	x0, 0 <_ZN4llvm8BitRecTy6SharedE>
    73cc:	ldr	x27, [x0]
    73d0:	b	7310 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2c8>
    73d4:	add	x21, sp, #0x190
    73d8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    73dc:	mov	x0, x21
    73e0:	add	x1, x1, #0x0
    73e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    73e8:	mov	x20, #0x0                   	// #0
    73ec:	mov	x1, x21
    73f0:	mov	x0, x19
    73f4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    73f8:	b	7250 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x208>
    73fc:	ldp	x2, x1, [x19, #8]
    7400:	mov	x0, x19
    7404:	cmp	x2, x1
    7408:	cset	w1, eq  // eq = none
    740c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7410:	str	w0, [x19, #40]
    7414:	b	72d0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x288>
    7418:	add	x21, sp, #0x190
    741c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7420:	mov	x0, x21
    7424:	add	x1, x1, #0x0
    7428:	b	73e4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x39c>
    742c:	add	x21, sp, #0x190
    7430:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7434:	mov	x0, x21
    7438:	add	x1, x1, #0x0
    743c:	b	73e4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x39c>
    7440:	add	x6, sp, #0x98
    7444:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7448:	mov	x0, x6
    744c:	add	x1, x1, #0x0
    7450:	str	x6, [sp, #136]
    7454:	add	x22, sp, #0x170
    7458:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    745c:	add	x21, sp, #0x190
    7460:	ldr	x1, [x27]
    7464:	add	x3, sp, #0x110
    7468:	add	x2, sp, #0xf8
    746c:	add	x5, sp, #0xe0
    7470:	add	x4, sp, #0xc8
    7474:	add	x7, sp, #0xb0
    7478:	ldr	x1, [x1, #16]
    747c:	stp	x7, x4, [sp, #96]
    7480:	mov	x8, x22
    7484:	stp	x3, x2, [sp, #112]
    7488:	mov	x0, x27
    748c:	add	x26, sp, #0x128
    7490:	str	x5, [sp, #128]
    7494:	add	x27, sp, #0x140
    7498:	add	x25, sp, #0x158
    749c:	blr	x1
    74a0:	ldr	x7, [sp, #96]
    74a4:	mov	x1, x22
    74a8:	mov	x0, x7
    74ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    74b0:	ldp	x0, x4, [sp, #96]
    74b4:	ldr	x6, [sp, #136]
    74b8:	mov	x8, x4
    74bc:	mov	x1, x0
    74c0:	mov	x0, x6
    74c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    74c8:	ldr	x5, [sp, #128]
    74cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    74d0:	add	x1, x1, #0x0
    74d4:	str	x5, [sp, #96]
    74d8:	mov	x0, x5
    74dc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    74e0:	ldp	x0, x8, [sp, #96]
    74e4:	ldr	x2, [sp, #120]
    74e8:	str	x2, [sp, #96]
    74ec:	mov	x1, x0
    74f0:	mov	x0, x8
    74f4:	mov	x8, x2
    74f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    74fc:	ldr	x1, [x28]
    7500:	mov	x8, x21
    7504:	mov	x0, x28
    7508:	ldr	x1, [x1, #16]
    750c:	blr	x1
    7510:	ldr	x3, [sp, #112]
    7514:	mov	x1, x21
    7518:	add	x21, x21, #0x10
    751c:	mov	x28, x3
    7520:	mov	x0, x3
    7524:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7528:	ldr	x2, [sp, #96]
    752c:	mov	x8, x26
    7530:	mov	x1, x28
    7534:	mov	x0, x2
    7538:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    753c:	mov	x0, x27
    7540:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7544:	add	x1, x1, #0x0
    7548:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    754c:	mov	x8, x25
    7550:	mov	x1, x27
    7554:	mov	x0, x26
    7558:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    755c:	mov	x1, x25
    7560:	mov	x0, x19
    7564:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7568:	ldr	x0, [sp, #400]
    756c:	cmp	x0, x21
    7570:	b.eq	7578 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x530>  // b.none
    7574:	bl	0 <_ZdlPv>
    7578:	ldr	x0, [sp, #368]
    757c:	add	x22, x22, #0x10
    7580:	cmp	x0, x22
    7584:	b.eq	75c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x578>  // b.none
    7588:	bl	0 <_ZdlPv>
    758c:	ldp	x27, x28, [sp, #80]
    7590:	b	7250 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x208>
    7594:	add	x21, sp, #0x190
    7598:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    759c:	mov	x0, x21
    75a0:	add	x1, x1, #0x0
    75a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    75a8:	mov	x20, #0x0                   	// #0
    75ac:	mov	x1, x21
    75b0:	mov	x0, x19
    75b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    75b8:	ldp	x27, x28, [sp, #80]
    75bc:	b	7250 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x208>
    75c0:	ldp	x27, x28, [sp, #80]
    75c4:	b	7250 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x208>
    75c8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    75cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    75d0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    75d4:	add	x3, x3, #0x0
    75d8:	add	x1, x1, #0x0
    75dc:	add	x0, x0, #0x0
    75e0:	mov	w2, #0x43                  	// #67
    75e4:	stp	x27, x28, [sp, #80]
    75e8:	bl	0 <__assert_fail>
    75ec:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    75f0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    75f4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    75f8:	add	x3, x3, #0x0
    75fc:	add	x1, x1, #0x0
    7600:	add	x0, x0, #0x0
    7604:	mov	w2, #0x69                  	// #105
    7608:	bl	0 <__assert_fail>
    760c:	nop

0000000000007610 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE>:
    7610:	stp	x29, x30, [sp, #-464]!
    7614:	mov	x29, sp
    7618:	stp	x19, x20, [sp, #16]
    761c:	mov	x19, x1
    7620:	ldr	w20, [x0, #40]
    7624:	stp	x21, x22, [sp, #32]
    7628:	mov	x21, x2
    762c:	cmp	w20, #0x3a
    7630:	stp	x23, x24, [sp, #48]
    7634:	stp	x27, x28, [sp, #80]
    7638:	mov	x28, x0
    763c:	b.eq	839c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xd8c>  // b.none
    7640:	b.hi	7798 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x188>  // b.pmore
    7644:	cmp	w20, #0x34
    7648:	b.eq	7b54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x544>  // b.none
    764c:	b.ls	78f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2e0>  // b.plast
    7650:	cmp	w20, #0x35
    7654:	b.ne	7820 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x210>  // b.any
    7658:	ldp	x2, x1, [x0, #8]
    765c:	cmp	x2, x1
    7660:	cset	w1, eq  // eq = none
    7664:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7668:	str	w0, [x28, #40]
    766c:	cmp	w0, #0x8
    7670:	b.ne	7e2c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x81c>  // b.any
    7674:	ldp	x2, x1, [x28, #8]
    7678:	mov	x0, x28
    767c:	cmp	x2, x1
    7680:	cset	w1, eq  // eq = none
    7684:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7688:	str	w0, [x28, #40]
    768c:	mov	x1, x19
    7690:	mov	x0, x28
    7694:	mov	w3, #0x0                   	// #0
    7698:	mov	x2, #0x0                   	// #0
    769c:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    76a0:	mov	x20, x0
    76a4:	cbz	x0, 7b38 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>
    76a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    76ac:	mov	x21, x0
    76b0:	cbz	x0, 7a9c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x48c>
    76b4:	ldr	w0, [x28, #40]
    76b8:	cmp	w0, #0xe
    76bc:	b.ne	83bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xdac>  // b.any
    76c0:	ldp	x2, x1, [x28, #8]
    76c4:	mov	x0, x28
    76c8:	cmp	x2, x1
    76cc:	cset	w1, eq  // eq = none
    76d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    76d4:	str	w0, [x28, #40]
    76d8:	mov	x1, x19
    76dc:	mov	x0, x28
    76e0:	mov	w3, #0x0                   	// #0
    76e4:	mov	x2, #0x0                   	// #0
    76e8:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    76ec:	mov	x22, x0
    76f0:	cbz	x0, 7b38 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>
    76f4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    76f8:	mov	x20, x0
    76fc:	cbz	x0, 8e50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1840>
    7700:	ldr	x0, [x0, #16]
    7704:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7708:	mov	x22, x0
    770c:	cbz	x0, 9064 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a54>
    7710:	ldr	w0, [x28, #40]
    7714:	cmp	w0, #0xe
    7718:	b.ne	83bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xdac>  // b.any
    771c:	ldp	x2, x1, [x28, #8]
    7720:	mov	x0, x28
    7724:	cmp	x2, x1
    7728:	cset	w1, eq  // eq = none
    772c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7730:	str	w0, [x28, #40]
    7734:	cmp	w0, #0x48
    7738:	b.ne	8bb4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15a4>  // b.any
    773c:	ldp	x0, x1, [x28, #48]
    7740:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    7744:	mov	x23, x0
    7748:	cbz	x19, 8768 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1158>
    774c:	ldr	w3, [x19, #80]
    7750:	mov	w0, #0x18                  	// #24
    7754:	ldr	x1, [x19, #72]
    7758:	umaddl	x3, w3, w0, x1
    775c:	cmp	x1, x3
    7760:	b.ne	7774 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x164>  // b.any
    7764:	b	8768 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1158>
    7768:	add	x1, x1, #0x18
    776c:	cmp	x3, x1
    7770:	b.eq	8768 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1158>  // b.none
    7774:	ldr	x2, [x1]
    7778:	cmp	x23, x2
    777c:	b.ne	7768 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x158>  // b.any
    7780:	add	x24, sp, #0xf8
    7784:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7788:	mov	x0, x24
    778c:	add	x1, x1, #0x0
    7790:	stp	x25, x26, [sp, #64]
    7794:	b	7ca8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x698>
    7798:	cmp	w20, #0x3d
    779c:	b.eq	7b90 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x580>  // b.none
    77a0:	b.ls	796c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x35c>  // b.plast
    77a4:	cmp	w20, #0x44
    77a8:	b.hi	7924 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x314>  // b.pmore
    77ac:	cmp	w20, #0x3e
    77b0:	b.ne	7a7c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x46c>  // b.any
    77b4:	ldp	x2, x1, [x0, #8]
    77b8:	adrp	x23, 0 <_ZN4llvm8DagRecTy6SharedE>
    77bc:	mov	x21, #0x0                   	// #0
    77c0:	mov	w22, #0x3                   	// #3
    77c4:	cmp	x2, x1
    77c8:	cset	w1, eq  // eq = none
    77cc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    77d0:	str	w0, [x28, #40]
    77d4:	ldr	x23, [x23]
    77d8:	cmp	w0, #0x8
    77dc:	b.eq	7d70 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x760>  // b.none
    77e0:	add	x19, sp, #0x1b0
    77e4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    77e8:	mov	x0, x19
    77ec:	add	x1, x1, #0x0
    77f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    77f4:	mov	x20, #0x0                   	// #0
    77f8:	mov	x1, x19
    77fc:	mov	x0, x28
    7800:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7804:	mov	x0, x20
    7808:	ldp	x19, x20, [sp, #16]
    780c:	ldp	x21, x22, [sp, #32]
    7810:	ldp	x23, x24, [sp, #48]
    7814:	ldp	x27, x28, [sp, #80]
    7818:	ldp	x29, x30, [sp], #464
    781c:	ret
    7820:	cmp	w20, #0x38
    7824:	b.eq	86c4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10b4>  // b.none
    7828:	cmp	w20, #0x39
    782c:	b.eq	8698 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1088>  // b.none
    7830:	cmp	w20, #0x36
    7834:	b.eq	8710 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1100>  // b.none
    7838:	cmp	w20, #0x37
    783c:	b.ne	9a64 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2454>  // b.any
    7840:	ldp	x1, x2, [x0, #8]
    7844:	mov	w20, #0x1                   	// #1
    7848:	mov	w22, w20
    784c:	mov	x23, #0x0                   	// #0
    7850:	mov	w21, #0x2                   	// #2
    7854:	cmp	x2, x1
    7858:	cset	w1, eq  // eq = none
    785c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7860:	str	w0, [x28, #40]
    7864:	nop
    7868:	cmp	w0, #0x8
    786c:	b.ne	83d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xdc0>  // b.any
    7870:	ldp	x1, x2, [x28, #8]
    7874:	mov	x0, x28
    7878:	cmp	x2, x1
    787c:	cset	w1, eq  // eq = none
    7880:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7884:	str	w0, [x28, #40]
    7888:	mov	x1, x19
    788c:	mov	x0, x28
    7890:	mov	w3, #0x0                   	// #0
    7894:	mov	x2, #0x0                   	// #0
    7898:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    789c:	mov	x24, x0
    78a0:	cbz	x0, 7b38 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>
    78a4:	cbnz	w20, 84d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xec0>
    78a8:	ldr	w0, [x28, #40]
    78ac:	cmp	w0, #0x9
    78b0:	b.ne	851c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf0c>  // b.any
    78b4:	ldp	x1, x2, [x28, #8]
    78b8:	mov	x0, x28
    78bc:	cmp	x2, x1
    78c0:	cset	w1, eq  // eq = none
    78c4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    78c8:	str	w0, [x28, #40]
    78cc:	mov	x2, x23
    78d0:	mov	x1, x24
    78d4:	mov	w0, w21
    78d8:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    78dc:	mov	x1, x19
    78e0:	mov	w2, #0x0                   	// #0
    78e4:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    78e8:	mov	x20, x0
    78ec:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    78f0:	cmp	w20, #0x32
    78f4:	b.eq	86d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10c8>  // b.none
    78f8:	b.ls	7a20 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x410>  // b.plast
    78fc:	cmp	w20, #0x33
    7900:	b.ne	7b40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x530>  // b.any
    7904:	ldp	x1, x2, [x0, #8]
    7908:	mov	x23, #0x0                   	// #0
    790c:	mov	w22, #0x0                   	// #0
    7910:	cmp	x2, x1
    7914:	cset	w1, eq  // eq = none
    7918:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    791c:	str	w0, [x28, #40]
    7920:	b	77d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c8>
    7924:	cmp	w20, #0x45
    7928:	b.ne	7b40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x530>  // b.any
    792c:	ldp	x1, x2, [x0, #8]
    7930:	cmp	x2, x1
    7934:	cset	w1, eq  // eq = none
    7938:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    793c:	str	w0, [x28, #40]
    7940:	cmp	w0, #0xa
    7944:	b.eq	7e68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x858>  // b.none
    7948:	mov	x0, #0x0                   	// #0
    794c:	mov	x1, #0x0                   	// #0
    7950:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    7954:	mov	w20, #0x0                   	// #0
    7958:	mov	x23, x0
    795c:	mov	w22, #0x4                   	// #4
    7960:	ldr	w0, [x28, #40]
    7964:	mov	w21, #0x5                   	// #5
    7968:	b	7868 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x258>
    796c:	cmp	w20, #0x3b
    7970:	b.ne	7998 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x388>  // b.any
    7974:	bl	7048 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE>
    7978:	mov	x20, x0
    797c:	mov	x0, x20
    7980:	ldp	x19, x20, [sp, #16]
    7984:	ldp	x21, x22, [sp, #32]
    7988:	ldp	x23, x24, [sp, #48]
    798c:	ldp	x27, x28, [sp, #80]
    7990:	ldp	x29, x30, [sp], #464
    7994:	ret
    7998:	cmp	w20, #0x3c
    799c:	b.ne	7b40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x530>  // b.any
    79a0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    79a4:	str	x0, [sp, #136]
    79a8:	ldp	x1, x2, [x28, #8]
    79ac:	mov	x0, x28
    79b0:	cmp	x2, x1
    79b4:	cset	w1, eq  // eq = none
    79b8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    79bc:	str	w0, [x28, #40]
    79c0:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    79c4:	mov	w2, #0x1                   	// #1
    79c8:	mov	w23, #0xb                   	// #11
    79cc:	mov	x20, #0x0                   	// #0
    79d0:	ldr	x1, [x1]
    79d4:	str	w2, [sp, #96]
    79d8:	str	x1, [sp, #112]
    79dc:	str	w2, [sp, #120]
    79e0:	cbz	x21, 7a04 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3f4>
    79e4:	ldr	x0, [sp, #112]
    79e8:	mov	x1, x21
    79ec:	ldr	x2, [x0]
    79f0:	ldr	x2, [x2, #24]
    79f4:	blr	x2
    79f8:	tst	w0, #0xff
    79fc:	b.eq	8850 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1240>  // b.none
    7a00:	ldr	w0, [x28, #40]
    7a04:	cmp	w0, #0x8
    7a08:	b.eq	80d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xac4>  // b.none
    7a0c:	add	x19, sp, #0x1b0
    7a10:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a14:	mov	x0, x19
    7a18:	add	x1, x1, #0x0
    7a1c:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7a20:	sub	w20, w20, #0x27
    7a24:	cmp	w20, #0xa
    7a28:	b.hi	7b40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x530>  // b.pmore
    7a2c:	mov	x0, x28
    7a30:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7a34:	mov	x2, x0
    7a38:	str	x2, [sp, #136]
    7a3c:	ldr	x1, [x28, #8]
    7a40:	mov	x0, x28
    7a44:	ldr	x2, [x28, #16]
    7a48:	cmp	x2, x1
    7a4c:	cset	w1, eq  // eq = none
    7a50:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7a54:	str	w0, [x28, #40]
    7a58:	cmp	w20, #0x1d
    7a5c:	b.ls	7a84 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x474>  // b.plast
    7a60:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a64:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a68:	add	x1, x1, #0x0
    7a6c:	add	x0, x0, #0x0
    7a70:	mov	w2, #0x449                 	// #1097
    7a74:	stp	x25, x26, [sp, #64]
    7a78:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7a7c:	sub	w20, w20, #0x27
    7a80:	b	7a2c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x41c>
    7a84:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7a88:	add	x1, x1, #0x0
    7a8c:	ldrh	w1, [x1, w20, uxtw #1]
    7a90:	adr	x2, 7a9c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x48c>
    7a94:	add	x1, x2, w1, sxth #2
    7a98:	br	x1
    7a9c:	add	x23, sp, #0x128
    7aa0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7aa4:	mov	x0, x23
    7aa8:	add	x1, x1, #0x0
    7aac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7ab0:	add	x19, sp, #0x1b0
    7ab4:	ldr	x1, [x20]
    7ab8:	mov	x8, x19
    7abc:	mov	x0, x20
    7ac0:	add	x24, sp, #0x140
    7ac4:	add	x21, sp, #0x158
    7ac8:	add	x22, sp, #0x170
    7acc:	ldr	x1, [x1, #40]
    7ad0:	add	x20, sp, #0x190
    7ad4:	blr	x1
    7ad8:	mov	x1, x19
    7adc:	mov	x0, x24
    7ae0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7ae4:	mov	x8, x21
    7ae8:	mov	x1, x24
    7aec:	mov	x0, x23
    7af0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7af4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7af8:	mov	x0, x22
    7afc:	add	x1, x1, #0x0
    7b00:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7b04:	mov	x8, x20
    7b08:	mov	x1, x22
    7b0c:	mov	x0, x21
    7b10:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7b14:	mov	x1, x20
    7b18:	mov	x0, x28
    7b1c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7b20:	add	x19, x19, #0x10
    7b24:	ldr	x0, [sp, #432]
    7b28:	cmp	x0, x19
    7b2c:	b.eq	7b38 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>  // b.none
    7b30:	bl	0 <_ZdlPv>
    7b34:	nop
    7b38:	mov	x20, #0x0                   	// #0
    7b3c:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    7b40:	add	x19, sp, #0x1b0
    7b44:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7b48:	mov	x0, x19
    7b4c:	add	x1, x1, #0x0
    7b50:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7b54:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7b58:	mov	x22, x0
    7b5c:	ldp	x2, x1, [x28, #8]
    7b60:	mov	x0, x28
    7b64:	cmp	x2, x1
    7b68:	cset	w1, eq  // eq = none
    7b6c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7b70:	str	w0, [x28, #40]
    7b74:	cmp	w0, #0x8
    7b78:	b.eq	7c30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x620>  // b.none
    7b7c:	add	x19, sp, #0x1b0
    7b80:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7b84:	mov	x0, x19
    7b88:	add	x1, x1, #0x0
    7b8c:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7b90:	ldp	x1, x2, [x0, #8]
    7b94:	cmp	x2, x1
    7b98:	cset	w1, eq  // eq = none
    7b9c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7ba0:	str	w0, [x28, #40]
    7ba4:	mov	x0, x28
    7ba8:	bl	4cc8 <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    7bac:	mov	x20, x0
    7bb0:	cbz	x0, 7b38 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>
    7bb4:	ldr	w0, [x28, #40]
    7bb8:	cmp	w0, #0x8
    7bbc:	b.ne	8418 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe08>  // b.any
    7bc0:	ldp	x2, x1, [x28, #8]
    7bc4:	mov	x0, x28
    7bc8:	cmp	x2, x1
    7bcc:	cset	w1, eq  // eq = none
    7bd0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7bd4:	str	w0, [x28, #40]
    7bd8:	mov	x1, x19
    7bdc:	mov	x0, x28
    7be0:	mov	w3, #0x0                   	// #0
    7be4:	mov	x2, #0x0                   	// #0
    7be8:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7bec:	mov	x19, x0
    7bf0:	cbz	x0, 7b38 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>
    7bf4:	ldr	w0, [x28, #40]
    7bf8:	cmp	w0, #0x9
    7bfc:	b.ne	8684 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1074>  // b.any
    7c00:	ldp	x1, x2, [x28, #8]
    7c04:	mov	x0, x28
    7c08:	cmp	x2, x1
    7c0c:	cset	w1, eq  // eq = none
    7c10:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7c14:	str	w0, [x28, #40]
    7c18:	mov	x1, x19
    7c1c:	mov	x0, x20
    7c20:	bl	0 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>
    7c24:	bl	0 <_ZNK4llvm9IsAOpInit4FoldEv>
    7c28:	mov	x20, x0
    7c2c:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    7c30:	ldp	x2, x1, [x28, #8]
    7c34:	mov	x0, x28
    7c38:	cmp	x2, x1
    7c3c:	cset	w1, eq  // eq = none
    7c40:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7c44:	str	w0, [x28, #40]
    7c48:	cmp	w0, #0x48
    7c4c:	b.ne	7e40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x830>  // b.any
    7c50:	ldp	x0, x1, [x28, #48]
    7c54:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    7c58:	mov	x23, x0
    7c5c:	cbz	x19, 8530 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf20>
    7c60:	ldr	w3, [x19, #80]
    7c64:	mov	w0, #0x18                  	// #24
    7c68:	ldr	x1, [x19, #72]
    7c6c:	umaddl	x3, w3, w0, x1
    7c70:	cmp	x1, x3
    7c74:	b.ne	7c88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x678>  // b.any
    7c78:	b	8530 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf20>
    7c7c:	add	x1, x1, #0x18
    7c80:	cmp	x3, x1
    7c84:	b.eq	8530 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf20>  // b.none
    7c88:	ldr	x2, [x1]
    7c8c:	cmp	x23, x2
    7c90:	b.ne	7c7c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x66c>  // b.any
    7c94:	add	x24, sp, #0xf8
    7c98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7c9c:	mov	x0, x24
    7ca0:	add	x1, x1, #0x0
    7ca4:	stp	x25, x26, [sp, #64]
    7ca8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7cac:	ldr	x1, [x23]
    7cb0:	add	x26, sp, #0x190
    7cb4:	mov	x8, x26
    7cb8:	mov	x0, x23
    7cbc:	add	x25, sp, #0x110
    7cc0:	add	x22, sp, #0x128
    7cc4:	ldr	x1, [x1, #40]
    7cc8:	add	x21, sp, #0x158
    7ccc:	add	x19, sp, #0x1b0
    7cd0:	add	x20, sp, #0x170
    7cd4:	add	x23, sp, #0x140
    7cd8:	blr	x1
    7cdc:	mov	x1, x26
    7ce0:	mov	x0, x25
    7ce4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7ce8:	mov	x8, x22
    7cec:	mov	x1, x25
    7cf0:	mov	x0, x24
    7cf4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7cf8:	mov	x0, x23
    7cfc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7d00:	add	x1, x1, #0x0
    7d04:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7d08:	mov	x1, x23
    7d0c:	mov	x0, x22
    7d10:	mov	x8, x21
    7d14:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7d18:	mov	x8, x19
    7d1c:	mov	x0, x21
    7d20:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    7d24:	mov	x1, x19
    7d28:	mov	x0, x20
    7d2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7d30:	add	x19, x19, #0x10
    7d34:	mov	x1, x20
    7d38:	mov	x0, x28
    7d3c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7d40:	ldr	x0, [sp, #432]
    7d44:	cmp	x0, x19
    7d48:	b.eq	7d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x740>  // b.none
    7d4c:	bl	0 <_ZdlPv>
    7d50:	ldr	x0, [sp, #400]
    7d54:	add	x26, x26, #0x10
    7d58:	cmp	x0, x26
    7d5c:	b.eq	7d64 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x754>  // b.none
    7d60:	bl	0 <_ZdlPv>
    7d64:	mov	x20, #0x0                   	// #0
    7d68:	ldp	x25, x26, [sp, #64]
    7d6c:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    7d70:	ldp	x2, x1, [x28, #8]
    7d74:	mov	x0, x28
    7d78:	cmp	x2, x1
    7d7c:	cset	w1, eq  // eq = none
    7d80:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7d84:	str	w0, [x28, #40]
    7d88:	mov	x1, x19
    7d8c:	mov	x0, x28
    7d90:	mov	w3, #0x0                   	// #0
    7d94:	mov	x2, #0x0                   	// #0
    7d98:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7d9c:	mov	x27, x0
    7da0:	cbz	x0, 7b38 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>
    7da4:	ldr	w0, [x28, #40]
    7da8:	cmp	w0, #0xe
    7dac:	b.ne	7e54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x844>  // b.any
    7db0:	ldp	x2, x1, [x28, #8]
    7db4:	mov	x0, x28
    7db8:	stp	x25, x26, [sp, #64]
    7dbc:	cmp	x2, x1
    7dc0:	cset	w1, eq  // eq = none
    7dc4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7dc8:	str	w0, [x28, #40]
    7dcc:	mov	x0, x28
    7dd0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7dd4:	mov	x25, x0
    7dd8:	mov	x2, x21
    7ddc:	mov	x1, x19
    7de0:	mov	x0, x28
    7de4:	mov	w3, #0x0                   	// #0
    7de8:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7dec:	mov	x24, x0
    7df0:	cbz	x0, 8ba8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1598>
    7df4:	ldr	w0, [x28, #40]
    7df8:	cmp	w0, #0xe
    7dfc:	b.eq	8968 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1358>  // b.none
    7e00:	add	x19, sp, #0x1b0
    7e04:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e08:	mov	x0, x19
    7e0c:	add	x1, x1, #0x0
    7e10:	mov	x20, #0x0                   	// #0
    7e14:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e18:	mov	x1, x19
    7e1c:	mov	x0, x28
    7e20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e24:	ldp	x25, x26, [sp, #64]
    7e28:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    7e2c:	add	x19, sp, #0x1b0
    7e30:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e34:	mov	x0, x19
    7e38:	add	x1, x1, #0x0
    7e3c:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7e40:	add	x19, sp, #0x1b0
    7e44:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e48:	mov	x0, x19
    7e4c:	add	x1, x1, #0x0
    7e50:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7e54:	add	x19, sp, #0x1b0
    7e58:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    7e5c:	mov	x0, x19
    7e60:	add	x1, x1, #0x0
    7e64:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    7e68:	mov	x0, x28
    7e6c:	bl	4cc8 <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    7e70:	mov	x23, x0
    7e74:	cbz	x0, 93d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1dc8>
    7e78:	ldr	w0, [x0, #8]
    7e7c:	cmp	w0, #0x7
    7e80:	b.ne	8ef4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18e4>  // b.any
    7e84:	ldr	w0, [x28, #40]
    7e88:	mov	w20, #0x0                   	// #0
    7e8c:	mov	w22, #0x4                   	// #4
    7e90:	mov	w21, #0x5                   	// #5
    7e94:	b	7868 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x258>
    7e98:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    7e9c:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7ea0:	mov	w2, #0x1                   	// #1
    7ea4:	mov	w23, #0xe                   	// #14
    7ea8:	ldr	x1, [x1]
    7eac:	str	w2, [sp, #96]
    7eb0:	ldr	x20, [x20]
    7eb4:	str	x1, [sp, #112]
    7eb8:	str	w2, [sp, #120]
    7ebc:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7ec0:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    7ec4:	mov	w2, #0x1                   	// #1
    7ec8:	mov	w23, #0xc                   	// #12
    7ecc:	mov	x20, #0x0                   	// #0
    7ed0:	ldr	x1, [x1]
    7ed4:	str	w2, [sp, #96]
    7ed8:	str	x1, [sp, #112]
    7edc:	str	w2, [sp, #120]
    7ee0:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7ee4:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    7ee8:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7eec:	mov	w2, #0x1                   	// #1
    7ef0:	mov	w23, #0xd                   	// #13
    7ef4:	ldr	x1, [x1]
    7ef8:	str	w2, [sp, #96]
    7efc:	ldr	x20, [x20]
    7f00:	str	x1, [sp, #112]
    7f04:	str	w2, [sp, #120]
    7f08:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7f0c:	adrp	x20, 0 <_ZN4llvm8DagRecTy6SharedE>
    7f10:	mov	w1, #0x1                   	// #1
    7f14:	mov	w23, #0x11                  	// #17
    7f18:	str	w1, [sp, #96]
    7f1c:	ldr	x20, [x20]
    7f20:	str	x20, [sp, #112]
    7f24:	str	w1, [sp, #120]
    7f28:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7f2c:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7f30:	mov	w1, #0x1                   	// #1
    7f34:	mov	w23, #0x0                   	// #0
    7f38:	str	wzr, [sp, #96]
    7f3c:	ldr	x20, [x20]
    7f40:	str	x20, [sp, #112]
    7f44:	str	w1, [sp, #120]
    7f48:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7f4c:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7f50:	mov	w1, #0x1                   	// #1
    7f54:	mov	w23, #0x4                   	// #4
    7f58:	str	w1, [sp, #96]
    7f5c:	ldr	x20, [x20]
    7f60:	str	x20, [sp, #112]
    7f64:	str	wzr, [sp, #120]
    7f68:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7f6c:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7f70:	mov	w1, #0x1                   	// #1
    7f74:	mov	w23, #0x6                   	// #6
    7f78:	str	w1, [sp, #96]
    7f7c:	ldr	x20, [x20]
    7f80:	str	x20, [sp, #112]
    7f84:	str	wzr, [sp, #120]
    7f88:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7f8c:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7f90:	mov	w1, #0x1                   	// #1
    7f94:	mov	w23, #0x5                   	// #5
    7f98:	str	w1, [sp, #96]
    7f9c:	ldr	x20, [x20]
    7fa0:	str	x20, [sp, #112]
    7fa4:	str	w1, [sp, #120]
    7fa8:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7fac:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7fb0:	mov	w1, #0x1                   	// #1
    7fb4:	mov	w23, #0x3                   	// #3
    7fb8:	str	wzr, [sp, #96]
    7fbc:	ldr	x20, [x20]
    7fc0:	str	x20, [sp, #112]
    7fc4:	str	w1, [sp, #120]
    7fc8:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7fcc:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7fd0:	mov	w1, #0x1                   	// #1
    7fd4:	mov	w23, #0x2                   	// #2
    7fd8:	str	wzr, [sp, #96]
    7fdc:	ldr	x20, [x20]
    7fe0:	str	x20, [sp, #112]
    7fe4:	str	w1, [sp, #120]
    7fe8:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    7fec:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    7ff0:	mov	w1, #0x1                   	// #1
    7ff4:	mov	w23, w1
    7ff8:	str	w1, [sp, #96]
    7ffc:	ldr	x20, [x20]
    8000:	str	x20, [sp, #112]
    8004:	str	wzr, [sp, #120]
    8008:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    800c:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    8010:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    8014:	mov	w2, #0x1                   	// #1
    8018:	mov	w23, #0x10                  	// #16
    801c:	ldr	x1, [x1]
    8020:	str	w2, [sp, #96]
    8024:	ldr	x20, [x20]
    8028:	str	x1, [sp, #112]
    802c:	str	w2, [sp, #120]
    8030:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    8034:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    8038:	adrp	x20, 0 <_ZN4llvm8IntRecTy6SharedE>
    803c:	mov	w2, #0x1                   	// #1
    8040:	mov	w23, #0xf                   	// #15
    8044:	ldr	x1, [x1]
    8048:	str	w2, [sp, #96]
    804c:	ldr	x20, [x20]
    8050:	str	x1, [sp, #112]
    8054:	str	w2, [sp, #120]
    8058:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    805c:	adrp	x20, 0 <_ZN4llvm11StringRecTy6SharedE>
    8060:	mov	w1, #0x1                   	// #1
    8064:	mov	w23, #0x9                   	// #9
    8068:	str	w1, [sp, #96]
    806c:	ldr	x20, [x20]
    8070:	str	x20, [sp, #112]
    8074:	str	w1, [sp, #120]
    8078:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    807c:	mov	w1, #0x1                   	// #1
    8080:	mov	x20, x21
    8084:	mov	w23, #0x7                   	// #7
    8088:	str	w1, [sp, #96]
    808c:	str	xzr, [sp, #112]
    8090:	str	w1, [sp, #120]
    8094:	b	7a04 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3f4>
    8098:	adrp	x20, 0 <_ZN4llvm8DagRecTy6SharedE>
    809c:	mov	w1, #0x1                   	// #1
    80a0:	mov	w23, #0xa                   	// #10
    80a4:	str	w1, [sp, #96]
    80a8:	ldr	x20, [x20]
    80ac:	str	x20, [sp, #112]
    80b0:	str	w1, [sp, #120]
    80b4:	b	79e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d0>
    80b8:	mov	w1, #0x1                   	// #1
    80bc:	mov	w23, #0x8                   	// #8
    80c0:	mov	x20, #0x0                   	// #0
    80c4:	str	w1, [sp, #96]
    80c8:	str	xzr, [sp, #112]
    80cc:	str	w1, [sp, #120]
    80d0:	b	7a04 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3f4>
    80d4:	ldp	x1, x2, [x28, #8]
    80d8:	mov	x0, x28
    80dc:	stp	x25, x26, [sp, #64]
    80e0:	add	x24, sp, #0x170
    80e4:	add	x25, sp, #0x1b0
    80e8:	mov	x26, #0xfffffffffffffff8    	// #-8
    80ec:	cmp	x2, x1
    80f0:	cset	w1, eq  // eq = none
    80f4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    80f8:	str	w0, [x28, #40]
    80fc:	sub	w2, w23, #0xb
    8100:	adrp	x1, 0 <_ZN4llvm8IntRecTy6SharedE>
    8104:	and	w2, w2, #0xff
    8108:	str	w2, [sp, #104]
    810c:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8110:	ldr	x1, [x1]
    8114:	str	x1, [sp, #128]
    8118:	ldr	d0, [x2]
    811c:	add	x1, x24, #0x10
    8120:	str	x1, [sp, #368]
    8124:	str	d0, [sp, #376]
    8128:	mov	x0, x28
    812c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8130:	mov	x2, x20
    8134:	mov	x1, x19
    8138:	mov	w3, #0x0                   	// #0
    813c:	mov	x22, x0
    8140:	mov	x0, x28
    8144:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    8148:	mov	x2, x0
    814c:	mov	x1, x25
    8150:	mov	x0, x24
    8154:	str	x2, [sp, #432]
    8158:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    815c:	ldr	w2, [sp, #376]
    8160:	cbz	w2, 97e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21d4>
    8164:	ldr	x0, [sp, #368]
    8168:	add	x1, x26, w2, uxtw #3
    816c:	ldr	x1, [x0, x1]
    8170:	cbz	x1, 82ec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcdc>
    8174:	ldrb	w0, [x1, #8]
    8178:	sub	w0, w0, #0x1
    817c:	and	w0, w0, #0xff
    8180:	cmp	w0, #0x16
    8184:	b.ls	81a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb98>  // b.plast
    8188:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    818c:	add	x3, x3, #0x0
    8190:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8194:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8198:	add	x1, x1, #0x0
    819c:	add	x0, x0, #0x0
    81a0:	mov	w2, #0x108                 	// #264
    81a4:	bl	0 <__assert_fail>
    81a8:	ldr	x27, [x1, #16]
    81ac:	cbz	x20, 821c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc0c>
    81b0:	mov	x1, x27
    81b4:	mov	x0, x20
    81b8:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    81bc:	cbz	x0, 89c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13b8>
    81c0:	ldr	w1, [sp, #96]
    81c4:	cbz	w1, 81dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbcc>
    81c8:	cmp	w23, #0x5
    81cc:	b.eq	81f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbe4>  // b.none
    81d0:	ldr	w1, [sp, #120]
    81d4:	cmp	w1, #0x0
    81d8:	csel	x20, x20, x0, eq  // eq = none
    81dc:	cmp	w23, #0x11
    81e0:	b.ne	81f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbe4>  // b.any
    81e4:	mov	x0, #0x0                   	// #0
    81e8:	mov	x1, #0x0                   	// #0
    81ec:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    81f0:	mov	x20, x0
    81f4:	ldr	w0, [x28, #40]
    81f8:	cmp	w0, #0xe
    81fc:	b.ne	8738 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1128>  // b.any
    8200:	ldp	x1, x2, [x28, #8]
    8204:	mov	x0, x28
    8208:	cmp	x2, x1
    820c:	cset	w1, eq  // eq = none
    8210:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8214:	str	w0, [x28, #40]
    8218:	b	8128 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb18>
    821c:	cmp	w23, #0x8
    8220:	b.eq	8364 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xd54>  // b.none
    8224:	b.hi	8308 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcf8>  // b.pmore
    8228:	cmp	w23, #0x7
    822c:	b.ne	99ac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x239c>  // b.any
    8230:	cbz	x27, 99d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23c4>
    8234:	ldr	w0, [x27, #8]
    8238:	cmp	w0, #0x5
    823c:	b.ne	8248 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc38>  // b.any
    8240:	mov	x20, x27
    8244:	b	81f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbe4>
    8248:	add	x23, sp, #0x110
    824c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8250:	mov	x0, x23
    8254:	add	x1, x1, #0x0
    8258:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    825c:	add	x26, sp, #0x128
    8260:	ldr	x1, [x27]
    8264:	mov	x8, x25
    8268:	mov	x0, x27
    826c:	add	x20, sp, #0x140
    8270:	add	x21, sp, #0x158
    8274:	add	x19, sp, #0x190
    8278:	ldr	x1, [x1, #16]
    827c:	blr	x1
    8280:	mov	x0, x26
    8284:	mov	x1, x25
    8288:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    828c:	mov	x8, x20
    8290:	mov	x1, x26
    8294:	mov	x0, x23
    8298:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    829c:	mov	x0, x21
    82a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    82a4:	add	x1, x1, #0x0
    82a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    82ac:	mov	x1, x21
    82b0:	mov	x0, x20
    82b4:	mov	x8, x19
    82b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    82bc:	mov	x2, x19
    82c0:	add	x0, sp, #0xf8
    82c4:	mov	x1, #0x1                   	// #1
    82c8:	str	x22, [sp, #248]
    82cc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    82d0:	add	x25, x25, #0x10
    82d4:	ldr	x0, [sp, #432]
    82d8:	cmp	x0, x25
    82dc:	b.eq	82e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd8>  // b.none
    82e0:	bl	0 <_ZdlPv>
    82e4:	nop
    82e8:	ldr	x0, [sp, #368]
    82ec:	mov	x20, #0x0                   	// #0
    82f0:	add	x24, x24, #0x10
    82f4:	cmp	x0, x24
    82f8:	b.eq	84c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xeb8>  // b.none
    82fc:	bl	0 <free>
    8300:	ldp	x25, x26, [sp, #64]
    8304:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8308:	ldr	w0, [sp, #104]
    830c:	cmp	w0, #0x1
    8310:	b.hi	99ac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x239c>  // b.pmore
    8314:	ldr	x2, [x27]
    8318:	mov	x0, x27
    831c:	ldr	x1, [sp, #128]
    8320:	ldr	x2, [x2, #24]
    8324:	blr	x2
    8328:	tst	w0, #0xff
    832c:	b.ne	8240 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc30>  // b.any
    8330:	ldr	x2, [x27]
    8334:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    8338:	mov	x0, x27
    833c:	ldr	x1, [x1]
    8340:	ldr	x2, [x2, #24]
    8344:	blr	x2
    8348:	tst	w0, #0xff
    834c:	b.ne	8240 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc30>  // b.any
    8350:	add	x23, sp, #0x110
    8354:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8358:	mov	x0, x23
    835c:	add	x1, x1, #0x0
    8360:	b	8258 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc48>
    8364:	cmp	x21, #0x0
    8368:	ccmp	w2, #0x1, #0x0, ne  // ne = any
    836c:	b.eq	83e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xdd4>  // b.none
    8370:	cmp	w2, #0x2
    8374:	b.ne	81f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbe4>  // b.any
    8378:	cbz	x27, 9b1c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x250c>
    837c:	ldr	w0, [x27, #8]
    8380:	cmp	w0, #0x3
    8384:	b.eq	81f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbe4>  // b.none
    8388:	add	x23, sp, #0x110
    838c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8390:	mov	x0, x23
    8394:	add	x1, x1, #0x0
    8398:	b	8258 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc48>
    839c:	ldp	x1, x2, [x0, #8]
    83a0:	mov	x23, #0x0                   	// #0
    83a4:	mov	w22, #0x2                   	// #2
    83a8:	cmp	x2, x1
    83ac:	cset	w1, eq  // eq = none
    83b0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    83b4:	str	w0, [x28, #40]
    83b8:	b	77d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c8>
    83bc:	add	x19, sp, #0x1b0
    83c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    83c4:	mov	x0, x19
    83c8:	add	x1, x1, #0x0
    83cc:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    83d0:	add	x19, sp, #0x1b0
    83d4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    83d8:	mov	x0, x19
    83dc:	add	x1, x1, #0x0
    83e0:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    83e4:	ldr	w0, [x21, #8]
    83e8:	cmp	w0, #0x5
    83ec:	b.ne	9658 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2048>  // b.any
    83f0:	mov	x0, x27
    83f4:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    83f8:	ldr	x2, [x0]
    83fc:	mov	x1, x21
    8400:	ldr	x2, [x2, #24]
    8404:	blr	x2
    8408:	tst	w0, #0xff
    840c:	b.eq	955c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4c>  // b.none
    8410:	ldr	w2, [sp, #376]
    8414:	b	8370 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xd60>
    8418:	add	x19, sp, #0x1b0
    841c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8420:	mov	x0, x19
    8424:	add	x1, x1, #0x0
    8428:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    842c:	add	x25, sp, #0x140
    8430:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8434:	mov	x0, x25
    8438:	add	x1, x1, #0x0
    843c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8440:	add	x19, sp, #0x1b0
    8444:	ldr	x1, [x21]
    8448:	mov	x8, x19
    844c:	mov	x0, x21
    8450:	add	x26, sp, #0x128
    8454:	add	x23, sp, #0x158
    8458:	add	x24, sp, #0x170
    845c:	ldr	x1, [x1, #16]
    8460:	add	x21, sp, #0x190
    8464:	blr	x1
    8468:	mov	x1, x19
    846c:	mov	x0, x26
    8470:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8474:	mov	x1, x26
    8478:	mov	x0, x25
    847c:	mov	x8, x23
    8480:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8484:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8488:	mov	x0, x24
    848c:	add	x1, x1, #0x0
    8490:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8494:	add	x19, x19, #0x10
    8498:	mov	x8, x21
    849c:	mov	x1, x24
    84a0:	mov	x0, x23
    84a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    84a8:	add	x0, sp, #0x110
    84ac:	mov	x2, x21
    84b0:	mov	x1, #0x1                   	// #1
    84b4:	str	x22, [sp, #272]
    84b8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    84bc:	ldr	x0, [sp, #432]
    84c0:	cmp	x0, x19
    84c4:	b.ne	8ee8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18d8>  // b.any
    84c8:	ldp	x25, x26, [sp, #64]
    84cc:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    84d0:	ldrb	w1, [x0, #8]
    84d4:	cmp	w1, #0x9
    84d8:	b.eq	8c48 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1638>  // b.none
    84dc:	cmp	w1, #0x12
    84e0:	b.ne	8bc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15b8>  // b.any
    84e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    84e8:	mov	x20, x0
    84ec:	cbnz	x0, 9528 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f18>
    84f0:	cmp	w22, #0x2
    84f4:	b.hi	78a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x298>  // b.pmore
    84f8:	add	x19, sp, #0x1b0
    84fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8500:	mov	x0, x19
    8504:	add	x1, x1, #0x0
    8508:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    850c:	mov	x1, x19
    8510:	mov	x0, x28
    8514:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8518:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    851c:	add	x19, sp, #0x1b0
    8520:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8524:	mov	x0, x19
    8528:	add	x1, x1, #0x0
    852c:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    8530:	ldp	x2, x1, [x28, #8]
    8534:	mov	x0, x28
    8538:	cmp	x2, x1
    853c:	cset	w1, eq  // eq = none
    8540:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8544:	str	w0, [x28, #40]
    8548:	cmp	w0, #0xe
    854c:	b.ne	7e54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x844>  // b.any
    8550:	ldp	x2, x1, [x28, #8]
    8554:	mov	x0, x28
    8558:	cmp	x2, x1
    855c:	cset	w1, eq  // eq = none
    8560:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8564:	str	w0, [x28, #40]
    8568:	mov	x1, x19
    856c:	mov	x0, x28
    8570:	mov	w3, #0x0                   	// #0
    8574:	mov	x2, #0x0                   	// #0
    8578:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    857c:	mov	x24, x0
    8580:	cbz	x0, 7b38 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x528>
    8584:	ldr	w0, [x28, #40]
    8588:	cmp	w0, #0xe
    858c:	b.ne	7e54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x844>  // b.any
    8590:	ldp	x2, x1, [x28, #8]
    8594:	mov	x0, x28
    8598:	cmp	x2, x1
    859c:	cset	w1, eq  // eq = none
    85a0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    85a4:	str	w0, [x28, #40]
    85a8:	mov	x0, x24
    85ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    85b0:	mov	x20, x0
    85b4:	cbz	x0, 9538 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f28>
    85b8:	stp	x25, x26, [sp, #64]
    85bc:	ldr	x26, [x0, #16]
    85c0:	mov	x0, x26
    85c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    85c8:	mov	x20, x0
    85cc:	cbz	x0, 96e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20d4>
    85d0:	ldr	x26, [x0, #24]
    85d4:	cbz	x21, 9360 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1d50>
    85d8:	mov	x0, x21
    85dc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    85e0:	mov	x20, x0
    85e4:	cbz	x0, 842c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe1c>
    85e8:	ldr	x21, [x0, #24]
    85ec:	mov	w27, #0x0                   	// #0
    85f0:	cbz	x19, 9738 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2128>
    85f4:	mov	x2, x26
    85f8:	mov	w3, #0x0                   	// #0
    85fc:	add	x25, sp, #0x1b0
    8600:	mov	x1, x23
    8604:	mov	x0, x25
    8608:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    860c:	mov	x1, x25
    8610:	mov	x0, x19
    8614:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8618:	mov	x2, x21
    861c:	mov	w3, #0x0                   	// #0
    8620:	mov	x1, x19
    8624:	mov	x0, x28
    8628:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    862c:	mov	x20, x0
    8630:	mov	x1, x23
    8634:	mov	x0, x19
    8638:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    863c:	cbz	x20, 8ba8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1598>
    8640:	mov	x22, #0x0                   	// #0
    8644:	ldr	w0, [x28, #40]
    8648:	cmp	w0, #0x9
    864c:	b.eq	937c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1d6c>  // b.none
    8650:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8654:	mov	x0, x25
    8658:	add	x1, x1, #0x0
    865c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8660:	mov	x20, #0x0                   	// #0
    8664:	mov	x1, x25
    8668:	mov	x0, x28
    866c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8670:	cbz	x22, 84c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xeb8>
    8674:	mov	x0, x22
    8678:	bl	338 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0>
    867c:	ldp	x25, x26, [sp, #64]
    8680:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8684:	add	x19, sp, #0x1b0
    8688:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    868c:	mov	x0, x19
    8690:	add	x1, x1, #0x0
    8694:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    8698:	ldp	x1, x2, [x0, #8]
    869c:	mov	w20, #0x1                   	// #1
    86a0:	mov	w22, #0x3                   	// #3
    86a4:	mov	w21, #0x4                   	// #4
    86a8:	cmp	x2, x1
    86ac:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    86b0:	cset	w1, eq  // eq = none
    86b4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    86b8:	str	w0, [x28, #40]
    86bc:	ldr	x23, [x23]
    86c0:	b	7868 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x258>
    86c4:	mov	w20, #0x0                   	// #0
    86c8:	mov	w22, #0x2                   	// #2
    86cc:	mov	w21, #0x3                   	// #3
    86d0:	ldp	x2, x1, [x0, #8]
    86d4:	b	86a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1098>
    86d8:	ldp	x1, x2, [x0, #8]
    86dc:	cmp	x2, x1
    86e0:	cset	w1, eq  // eq = none
    86e4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    86e8:	str	w0, [x28, #40]
    86ec:	mov	x0, x28
    86f0:	bl	4cc8 <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    86f4:	mov	x23, x0
    86f8:	cbz	x0, 93d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1dc8>
    86fc:	ldr	w0, [x28, #40]
    8700:	mov	w20, #0x0                   	// #0
    8704:	mov	w22, #0xff                  	// #255
    8708:	mov	w21, #0x0                   	// #0
    870c:	b	7868 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x258>
    8710:	ldp	x1, x2, [x0, #8]
    8714:	mov	w20, #0x1                   	// #1
    8718:	mov	w22, #0x0                   	// #0
    871c:	mov	w21, w20
    8720:	mov	x23, #0x0                   	// #0
    8724:	cmp	x2, x1
    8728:	cset	w1, eq  // eq = none
    872c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8730:	str	w0, [x28, #40]
    8734:	b	7868 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x258>
    8738:	cmp	w0, #0x9
    873c:	b.eq	8b0c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14fc>  // b.none
    8740:	mov	x0, x25
    8744:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8748:	add	x1, x1, #0x0
    874c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8750:	mov	x1, x25
    8754:	mov	x0, x28
    8758:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    875c:	mov	x20, #0x0                   	// #0
    8760:	ldr	x0, [sp, #368]
    8764:	b	82f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xce0>
    8768:	ldp	x2, x1, [x28, #8]
    876c:	mov	x0, x28
    8770:	cmp	x2, x1
    8774:	cset	w1, eq  // eq = none
    8778:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    877c:	str	w0, [x28, #40]
    8780:	cmp	w0, #0xe
    8784:	b.ne	83bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xdac>  // b.any
    8788:	ldp	x2, x1, [x28, #8]
    878c:	mov	x0, x28
    8790:	cmp	x2, x1
    8794:	cset	w1, eq  // eq = none
    8798:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    879c:	str	w0, [x28, #40]
    87a0:	cmp	w0, #0x48
    87a4:	b.ne	8f28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1918>  // b.any
    87a8:	ldp	x0, x1, [x28, #48]
    87ac:	stp	x25, x26, [sp, #64]
    87b0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    87b4:	mov	x24, x0
    87b8:	cbz	x19, 90c0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ab0>
    87bc:	ldr	w3, [x19, #80]
    87c0:	mov	w0, #0x18                  	// #24
    87c4:	ldr	x1, [x19, #72]
    87c8:	umaddl	x3, w3, w0, x1
    87cc:	cmp	x1, x3
    87d0:	b.ne	87e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x11d4>  // b.any
    87d4:	b	8c70 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1660>
    87d8:	add	x1, x1, #0x18
    87dc:	cmp	x3, x1
    87e0:	b.eq	8c70 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1660>  // b.none
    87e4:	ldr	x2, [x1]
    87e8:	cmp	x24, x2
    87ec:	b.ne	87d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x11c8>  // b.any
    87f0:	add	x25, sp, #0xf8
    87f4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    87f8:	mov	x0, x25
    87fc:	add	x1, x1, #0x0
    8800:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8804:	add	x26, sp, #0x190
    8808:	ldr	x1, [x24]
    880c:	mov	x8, x26
    8810:	mov	x0, x24
    8814:	add	x24, sp, #0x110
    8818:	add	x22, sp, #0x128
    881c:	add	x23, sp, #0x140
    8820:	ldr	x1, [x1, #40]
    8824:	add	x21, sp, #0x158
    8828:	add	x19, sp, #0x1b0
    882c:	add	x20, sp, #0x170
    8830:	blr	x1
    8834:	mov	x1, x26
    8838:	mov	x0, x24
    883c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8840:	mov	x8, x22
    8844:	mov	x1, x24
    8848:	mov	x0, x25
    884c:	b	7cf4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x6e4>
    8850:	add	x20, sp, #0xb0
    8854:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8858:	mov	x0, x20
    885c:	add	x1, x1, #0x0
    8860:	stp	x25, x26, [sp, #64]
    8864:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8868:	add	x2, sp, #0xc8
    886c:	ldr	x1, [x21]
    8870:	str	x2, [sp, #96]
    8874:	add	x26, sp, #0x190
    8878:	mov	x0, x21
    887c:	mov	x8, x26
    8880:	add	x25, sp, #0xe0
    8884:	ldr	x1, [x1, #16]
    8888:	add	x27, sp, #0xf8
    888c:	add	x23, sp, #0x110
    8890:	add	x19, sp, #0x1b0
    8894:	add	x24, sp, #0x128
    8898:	add	x21, sp, #0x140
    889c:	blr	x1
    88a0:	add	x22, sp, #0x158
    88a4:	ldr	x2, [sp, #96]
    88a8:	mov	x1, x26
    88ac:	add	x28, sp, #0x170
    88b0:	mov	x0, x2
    88b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    88b8:	ldr	x0, [sp, #96]
    88bc:	mov	x8, x25
    88c0:	mov	x1, x0
    88c4:	mov	x0, x20
    88c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    88cc:	mov	x0, x27
    88d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    88d4:	add	x1, x1, #0x0
    88d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    88dc:	mov	x1, x27
    88e0:	mov	x0, x25
    88e4:	mov	x8, x23
    88e8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    88ec:	ldr	x0, [sp, #112]
    88f0:	mov	x8, x19
    88f4:	ldr	x1, [x0]
    88f8:	ldr	x1, [x1, #16]
    88fc:	blr	x1
    8900:	mov	x1, x19
    8904:	mov	x0, x24
    8908:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    890c:	add	x19, x19, #0x10
    8910:	mov	x8, x21
    8914:	mov	x1, x24
    8918:	mov	x0, x23
    891c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8920:	mov	x0, x22
    8924:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8928:	add	x1, x1, #0x0
    892c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8930:	mov	x8, x28
    8934:	mov	x1, x22
    8938:	mov	x0, x21
    893c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8940:	ldr	x3, [sp, #136]
    8944:	add	x0, sp, #0x98
    8948:	mov	x2, x28
    894c:	mov	x1, #0x1                   	// #1
    8950:	str	x3, [sp, #152]
    8954:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8958:	ldr	x0, [sp, #432]
    895c:	cmp	x0, x19
    8960:	b.ne	7d4c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x73c>  // b.any
    8964:	b	7d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x740>
    8968:	ldp	x2, x1, [x28, #8]
    896c:	mov	x0, x28
    8970:	cmp	x2, x1
    8974:	cset	w1, eq  // eq = none
    8978:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    897c:	str	w0, [x28, #40]
    8980:	mov	x0, x28
    8984:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8988:	mov	x26, x0
    898c:	mov	x2, x21
    8990:	mov	x1, x19
    8994:	mov	x0, x28
    8998:	mov	w3, #0x0                   	// #0
    899c:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    89a0:	mov	x21, x0
    89a4:	cbz	x0, 8ba8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1598>
    89a8:	ldr	w0, [x28, #40]
    89ac:	cmp	w0, #0x9
    89b0:	b.eq	8d90 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1780>  // b.none
    89b4:	add	x19, sp, #0x1b0
    89b8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    89bc:	mov	x0, x19
    89c0:	add	x1, x1, #0x0
    89c4:	b	7e10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x800>
    89c8:	add	x4, sp, #0x98
    89cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    89d0:	mov	x0, x4
    89d4:	add	x1, x1, #0x0
    89d8:	str	x4, [sp, #120]
    89dc:	add	x26, sp, #0x190
    89e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    89e4:	add	x28, sp, #0xc8
    89e8:	ldr	x1, [x20]
    89ec:	add	x3, sp, #0x110
    89f0:	add	x2, sp, #0xe0
    89f4:	add	x5, sp, #0xb0
    89f8:	stp	x5, x3, [sp, #96]
    89fc:	mov	x8, x26
    8a00:	mov	x0, x20
    8a04:	ldr	x1, [x1, #16]
    8a08:	str	x2, [sp, #112]
    8a0c:	add	x23, sp, #0xf8
    8a10:	add	x20, sp, #0x128
    8a14:	add	x21, sp, #0x140
    8a18:	add	x19, sp, #0x158
    8a1c:	blr	x1
    8a20:	ldr	x5, [sp, #96]
    8a24:	mov	x1, x26
    8a28:	mov	x0, x5
    8a2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a30:	ldr	x4, [sp, #120]
    8a34:	mov	x8, x28
    8a38:	ldr	x0, [sp, #96]
    8a3c:	mov	x1, x0
    8a40:	mov	x0, x4
    8a44:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a48:	ldr	x2, [sp, #112]
    8a4c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a50:	add	x1, x1, #0x0
    8a54:	str	x2, [sp, #96]
    8a58:	mov	x0, x2
    8a5c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a60:	ldr	x0, [sp, #96]
    8a64:	mov	x8, x23
    8a68:	mov	x1, x0
    8a6c:	mov	x0, x28
    8a70:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a74:	ldr	x1, [x27]
    8a78:	mov	x8, x25
    8a7c:	mov	x0, x27
    8a80:	ldr	x1, [x1, #16]
    8a84:	blr	x1
    8a88:	ldr	x3, [sp, #104]
    8a8c:	mov	x1, x25
    8a90:	mov	x27, x3
    8a94:	mov	x0, x3
    8a98:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8a9c:	mov	x8, x20
    8aa0:	mov	x1, x27
    8aa4:	mov	x0, x23
    8aa8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8aac:	mov	x0, x21
    8ab0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8ab4:	add	x1, x1, #0x0
    8ab8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8abc:	mov	x1, x21
    8ac0:	mov	x0, x20
    8ac4:	mov	x8, x19
    8ac8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8acc:	mov	x2, x19
    8ad0:	add	x0, sp, #0x90
    8ad4:	mov	x1, #0x1                   	// #1
    8ad8:	str	x22, [sp, #144]
    8adc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8ae0:	add	x25, x25, #0x10
    8ae4:	ldr	x0, [sp, #432]
    8ae8:	cmp	x0, x25
    8aec:	b.eq	8af4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14e4>  // b.none
    8af0:	bl	0 <_ZdlPv>
    8af4:	ldr	x0, [sp, #400]
    8af8:	add	x26, x26, #0x10
    8afc:	cmp	x0, x26
    8b00:	b.eq	82e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd8>  // b.none
    8b04:	bl	0 <_ZdlPv>
    8b08:	b	82e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd8>
    8b0c:	ldp	x1, x2, [x28, #8]
    8b10:	mov	x0, x28
    8b14:	cmp	x2, x1
    8b18:	cset	w1, eq  // eq = none
    8b1c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8b20:	str	w0, [x28, #40]
    8b24:	cmp	w23, #0x7
    8b28:	b.eq	8f3c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x192c>  // b.none
    8b2c:	ldr	w1, [sp, #376]
    8b30:	cmp	w23, #0x8
    8b34:	b.ne	8ffc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x19ec>  // b.any
    8b38:	cbz	w1, 9ae8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24d8>
    8b3c:	ldr	x0, [sp, #368]
    8b40:	ldr	x1, [x0]
    8b44:	cbz	x1, 9ac8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24b8>
    8b48:	ldrb	w0, [x1, #8]
    8b4c:	sub	w0, w0, #0x1
    8b50:	and	w0, w0, #0xff
    8b54:	cmp	w0, #0x16
    8b58:	b.hi	8188 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb78>  // b.pmore
    8b5c:	ldr	x0, [x1, #16]
    8b60:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    8b64:	str	x0, [sp, #112]
    8b68:	ldr	w1, [sp, #376]
    8b6c:	cmp	w1, #0x2
    8b70:	b.eq	8fd4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x19c4>  // b.none
    8b74:	mov	x0, x25
    8b78:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8b7c:	add	x1, x1, #0x0
    8b80:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8b84:	ldr	x3, [sp, #136]
    8b88:	add	x0, sp, #0x190
    8b8c:	mov	x2, x25
    8b90:	mov	x1, #0x1                   	// #1
    8b94:	str	x3, [sp, #400]
    8b98:	mov	x20, #0x0                   	// #0
    8b9c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8ba0:	ldr	x0, [sp, #368]
    8ba4:	b	82f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xce0>
    8ba8:	mov	x20, #0x0                   	// #0
    8bac:	ldp	x25, x26, [sp, #64]
    8bb0:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8bb4:	add	x19, sp, #0x1b0
    8bb8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8bbc:	mov	x0, x19
    8bc0:	add	x1, x1, #0x0
    8bc4:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    8bc8:	stp	x25, x26, [sp, #64]
    8bcc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8bd0:	mov	x25, x0
    8bd4:	cbz	x0, 9708 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20f8>
    8bd8:	mov	x27, #0x0                   	// #0
    8bdc:	ldr	x26, [x25, #16]
    8be0:	mov	x0, x26
    8be4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8be8:	mov	x20, x0
    8bec:	cbz	x26, 9b2c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x251c>
    8bf0:	ldr	w0, [x26, #8]
    8bf4:	cmp	w0, #0x4
    8bf8:	b.eq	8c00 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15f0>  // b.none
    8bfc:	cbz	x20, 9368 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1d58>
    8c00:	cmp	w22, #0x2
    8c04:	b.hi	8c68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1658>  // b.pmore
    8c08:	b.eq	8c68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1658>  // b.none
    8c0c:	cbz	x27, 902c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a1c>
    8c10:	ldr	w0, [x27, #32]
    8c14:	cbz	w0, 97a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2198>
    8c18:	ldr	x0, [x27, #40]
    8c1c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8c20:	mov	x20, x0
    8c24:	cbz	x0, 990c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22fc>
    8c28:	cmp	w21, #0x1
    8c2c:	ldr	x23, [x0, #16]
    8c30:	b.eq	8c68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1658>  // b.none
    8c34:	mov	x0, x23
    8c38:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    8c3c:	mov	x23, x0
    8c40:	ldp	x25, x26, [sp, #64]
    8c44:	b	78a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x298>
    8c48:	stp	x25, x26, [sp, #64]
    8c4c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8c50:	mov	x25, x0
    8c54:	cbnz	x0, 98e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22d0>
    8c58:	cmp	w22, #0x2
    8c5c:	b.hi	8c68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1658>  // b.pmore
    8c60:	mov	x27, x24
    8c64:	b.ne	8c10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1600>  // b.any
    8c68:	ldp	x25, x26, [sp, #64]
    8c6c:	b	78a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x298>
    8c70:	ldp	x2, x1, [x28, #8]
    8c74:	mov	x0, x28
    8c78:	cmp	x2, x1
    8c7c:	cset	w1, eq  // eq = none
    8c80:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8c84:	str	w0, [x28, #40]
    8c88:	cmp	w0, #0xe
    8c8c:	b.ne	9050 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a40>  // b.any
    8c90:	ldp	x2, x1, [x28, #8]
    8c94:	mov	x0, x28
    8c98:	add	x25, sp, #0x1b0
    8c9c:	mov	x27, #0x0                   	// #0
    8ca0:	cmp	x2, x1
    8ca4:	cset	w1, eq  // eq = none
    8ca8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8cac:	ldr	x2, [x21, #16]
    8cb0:	str	w0, [x28, #40]
    8cb4:	mov	w3, #0x0                   	// #0
    8cb8:	mov	x1, x23
    8cbc:	mov	x0, x25
    8cc0:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    8cc4:	mov	x1, x25
    8cc8:	mov	x0, x19
    8ccc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8cd0:	ldr	x2, [x22, #24]
    8cd4:	mov	w3, #0x0                   	// #0
    8cd8:	mov	x0, x25
    8cdc:	mov	x1, x24
    8ce0:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    8ce4:	mov	x1, x25
    8ce8:	mov	x0, x19
    8cec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8cf0:	mov	w3, #0x0                   	// #0
    8cf4:	mov	x2, #0x0                   	// #0
    8cf8:	mov	x1, x19
    8cfc:	mov	x0, x28
    8d00:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    8d04:	mov	x22, x0
    8d08:	mov	x1, x23
    8d0c:	mov	x0, x19
    8d10:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d14:	mov	x1, x24
    8d18:	mov	x0, x19
    8d1c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d20:	cbz	x22, 8ba8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1598>
    8d24:	mov	x0, x22
    8d28:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d2c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d30:	mov	x22, x0
    8d34:	add	x1, x1, #0x0
    8d38:	mov	x0, x25
    8d3c:	cbz	x22, 8d68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1758>
    8d40:	ldr	x0, [x21, #16]
    8d44:	ldr	x1, [x22, #16]
    8d48:	cmp	x1, x0
    8d4c:	b.ne	93ec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ddc>  // b.any
    8d50:	ldr	w0, [x28, #40]
    8d54:	cmp	w0, #0x9
    8d58:	b.eq	94e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ed4>  // b.none
    8d5c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d60:	mov	x0, x25
    8d64:	add	x1, x1, #0x0
    8d68:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d6c:	mov	x20, #0x0                   	// #0
    8d70:	mov	x1, x25
    8d74:	mov	x0, x28
    8d78:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8d7c:	cbz	x27, 84c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xeb8>
    8d80:	mov	x0, x27
    8d84:	bl	338 <_ZNKSt14default_deleteIN4llvm6RecordEEclEPS1_.isra.0.part.0>
    8d88:	ldp	x25, x26, [sp, #64]
    8d8c:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8d90:	ldp	x2, x1, [x28, #8]
    8d94:	mov	x0, x28
    8d98:	cmp	x2, x1
    8d9c:	cset	w1, eq  // eq = none
    8da0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8da4:	str	w0, [x28, #40]
    8da8:	cmp	w20, #0x3a
    8dac:	b.eq	9198 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b88>  // b.none
    8db0:	cmp	w20, #0x3e
    8db4:	b.ne	8e30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1820>  // b.any
    8db8:	mov	x0, x24
    8dbc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8dc0:	mov	x20, x0
    8dc4:	cbz	x0, 98a4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2294>
    8dc8:	ldr	x0, [x0, #16]
    8dcc:	cbz	x0, 99d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23c4>
    8dd0:	ldr	w0, [x0, #8]
    8dd4:	cmp	w0, #0x5
    8dd8:	b.ne	9804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21f4>  // b.any
    8ddc:	mov	x0, x21
    8de0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8de4:	mov	x28, x0
    8de8:	cbz	x0, 98e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22d8>
    8dec:	adrp	x0, 0 <_ZN4llvm11StringRecTy6SharedE>
    8df0:	ldr	x0, [x0]
    8df4:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    8df8:	ldr	x1, [x28, #16]
    8dfc:	cmp	x1, x0
    8e00:	b.ne	9920 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2310>  // b.any
    8e04:	mov	x4, x23
    8e08:	mov	x3, x21
    8e0c:	mov	x2, x24
    8e10:	mov	x1, x27
    8e14:	mov	w0, w22
    8e18:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    8e1c:	mov	x1, x19
    8e20:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    8e24:	mov	x20, x0
    8e28:	ldp	x25, x26, [sp, #64]
    8e2c:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8e30:	cmp	w20, #0x33
    8e34:	b.eq	90a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a98>  // b.none
    8e38:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e3c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e40:	add	x1, x1, #0x0
    8e44:	add	x0, x0, #0x0
    8e48:	mov	w2, #0x5be                 	// #1470
    8e4c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8e50:	add	x24, sp, #0x128
    8e54:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e58:	mov	x0, x24
    8e5c:	add	x1, x1, #0x0
    8e60:	stp	x25, x26, [sp, #64]
    8e64:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e68:	add	x19, sp, #0x1b0
    8e6c:	ldr	x1, [x22]
    8e70:	mov	x8, x19
    8e74:	mov	x0, x22
    8e78:	add	x25, sp, #0x140
    8e7c:	add	x22, sp, #0x158
    8e80:	add	x23, sp, #0x170
    8e84:	ldr	x1, [x1, #40]
    8e88:	add	x21, sp, #0x190
    8e8c:	blr	x1
    8e90:	mov	x1, x19
    8e94:	mov	x0, x25
    8e98:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8e9c:	add	x19, x19, #0x10
    8ea0:	mov	x8, x22
    8ea4:	mov	x1, x25
    8ea8:	mov	x0, x24
    8eac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8eb0:	mov	x0, x23
    8eb4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8eb8:	add	x1, x1, #0x0
    8ebc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8ec0:	mov	x8, x21
    8ec4:	mov	x1, x23
    8ec8:	mov	x0, x22
    8ecc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8ed0:	mov	x1, x21
    8ed4:	mov	x0, x28
    8ed8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8edc:	ldr	x0, [sp, #432]
    8ee0:	cmp	x0, x19
    8ee4:	b.eq	84c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xeb8>  // b.none
    8ee8:	bl	0 <_ZdlPv>
    8eec:	ldp	x25, x26, [sp, #64]
    8ef0:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    8ef4:	add	x21, sp, #0x1b0
    8ef8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8efc:	mov	x0, x21
    8f00:	add	x1, x1, #0x0
    8f04:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8f08:	mov	w20, #0x0                   	// #0
    8f0c:	mov	x1, x21
    8f10:	mov	x0, x28
    8f14:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8f18:	mov	w22, #0x4                   	// #4
    8f1c:	ldr	w0, [x28, #40]
    8f20:	mov	w21, #0x5                   	// #5
    8f24:	b	7868 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x258>
    8f28:	add	x19, sp, #0x1b0
    8f2c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8f30:	mov	x0, x19
    8f34:	add	x1, x1, #0x0
    8f38:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    8f3c:	ldr	w1, [sp, #376]
    8f40:	str	x20, [sp, #112]
    8f44:	cmp	w1, #0x2
    8f48:	mov	x20, #0xfffffffffffffff8    	// #-8
    8f4c:	b.hi	8f94 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1984>  // b.pmore
    8f50:	b	8b6c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x155c>
    8f54:	sub	w1, w1, #0x1
    8f58:	str	w1, [sp, #376]
    8f5c:	ldr	x3, [sp, #112]
    8f60:	add	x5, x20, w1, uxtw #3
    8f64:	mov	w0, w23
    8f68:	ldr	x1, [x4, x5]
    8f6c:	bl	0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    8f70:	mov	x1, x19
    8f74:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    8f78:	ldr	w1, [sp, #376]
    8f7c:	cbz	w1, 97e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21d4>
    8f80:	ldr	x3, [sp, #368]
    8f84:	add	x2, x20, w1, uxtw #3
    8f88:	cmp	w1, #0x2
    8f8c:	str	x0, [x3, x2]
    8f90:	b.ls	8b6c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x155c>  // b.plast
    8f94:	ldr	x4, [sp, #368]
    8f98:	add	x2, x20, w1, uxtw #3
    8f9c:	ldr	w3, [sp, #380]
    8fa0:	mov	w0, w1
    8fa4:	sub	x0, x0, #0x1
    8fa8:	cmp	x0, x3
    8fac:	ldr	x2, [x4, x2]
    8fb0:	b.ls	8f54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1944>  // b.plast
    8fb4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8fb8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8fbc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    8fc0:	add	x3, x3, #0x0
    8fc4:	add	x1, x1, #0x0
    8fc8:	add	x0, x0, #0x0
    8fcc:	mov	w2, #0x43                  	// #67
    8fd0:	bl	0 <__assert_fail>
    8fd4:	ldr	x2, [sp, #368]
    8fd8:	mov	w0, w23
    8fdc:	ldr	x3, [sp, #112]
    8fe0:	ldp	x1, x2, [x2]
    8fe4:	bl	0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    8fe8:	mov	x1, x19
    8fec:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    8ff0:	mov	x20, x0
    8ff4:	ldr	x0, [sp, #368]
    8ff8:	b	82f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xce0>
    8ffc:	sub	w0, w23, #0x7
    9000:	mov	w2, #0xfd                  	// #253
    9004:	tst	w0, w2
    9008:	b.eq	8f44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1934>  // b.none
    900c:	cmp	w23, #0x0
    9010:	ccmp	w23, #0xa, #0x4, ne  // ne = any
    9014:	b.eq	8f44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1934>  // b.none
    9018:	sub	w0, w23, #0x1
    901c:	and	w0, w0, #0xff
    9020:	cmp	w0, #0x2
    9024:	b.ls	8f44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1934>  // b.plast
    9028:	b	8b6c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x155c>
    902c:	ldr	x0, [x25, #16]
    9030:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9034:	mov	x23, x0
    9038:	cbz	x0, 9a50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2440>
    903c:	cmp	w21, #0x1
    9040:	b.ne	8c68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1658>  // b.any
    9044:	ldr	x23, [x0, #24]
    9048:	ldp	x25, x26, [sp, #64]
    904c:	b	78a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x298>
    9050:	add	x19, sp, #0x1b0
    9054:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9058:	mov	x0, x19
    905c:	add	x1, x1, #0x0
    9060:	b	7e10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x800>
    9064:	add	x21, sp, #0x158
    9068:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    906c:	mov	x0, x21
    9070:	add	x1, x1, #0x0
    9074:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9078:	add	x19, sp, #0x1b0
    907c:	ldr	x0, [x20, #16]
    9080:	mov	x8, x19
    9084:	add	x22, sp, #0x170
    9088:	add	x20, sp, #0x190
    908c:	ldr	x1, [x0]
    9090:	ldr	x1, [x1, #16]
    9094:	blr	x1
    9098:	mov	x1, x19
    909c:	mov	x0, x22
    90a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    90a4:	b	7b04 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x4f4>
    90a8:	mov	x0, x21
    90ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    90b0:	mov	x20, x0
    90b4:	cbz	x0, 9a80 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2470>
    90b8:	ldr	x23, [x0, #16]
    90bc:	b	8e04 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17f4>
    90c0:	ldp	x2, x1, [x28, #8]
    90c4:	mov	x0, x28
    90c8:	cmp	x2, x1
    90cc:	cset	w1, eq  // eq = none
    90d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    90d4:	str	w0, [x28, #40]
    90d8:	cmp	w0, #0xe
    90dc:	b.ne	9050 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a40>  // b.any
    90e0:	ldp	x2, x1, [x28, #8]
    90e4:	mov	x0, x28
    90e8:	add	x25, sp, #0x1b0
    90ec:	cmp	x2, x1
    90f0:	cset	w1, eq  // eq = none
    90f4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    90f8:	str	w0, [x28, #40]
    90fc:	ldr	x2, [x28, #344]
    9100:	add	x8, sp, #0x190
    9104:	mov	x1, x25
    9108:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    910c:	add	x0, x0, #0x0
    9110:	stp	xzr, xzr, [sp, #432]
    9114:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9118:	ldr	x2, [x21, #16]
    911c:	mov	w3, #0x0                   	// #0
    9120:	ldr	x27, [sp, #400]
    9124:	mov	x0, x25
    9128:	mov	x1, x23
    912c:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    9130:	mov	x1, x25
    9134:	mov	x0, x27
    9138:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    913c:	ldr	x2, [x22, #24]
    9140:	mov	w3, #0x0                   	// #0
    9144:	mov	x0, x25
    9148:	mov	x1, x24
    914c:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    9150:	mov	x1, x25
    9154:	mov	x0, x27
    9158:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    915c:	mov	w3, #0x0                   	// #0
    9160:	mov	x2, #0x0                   	// #0
    9164:	mov	x1, x27
    9168:	mov	x0, x28
    916c:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    9170:	mov	x22, x0
    9174:	mov	x1, x23
    9178:	mov	x0, x27
    917c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9180:	mov	x1, x24
    9184:	mov	x0, x27
    9188:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    918c:	cbnz	x22, 8d24 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1714>
    9190:	mov	x20, #0x0                   	// #0
    9194:	b	8d7c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x176c>
    9198:	mov	x0, x24
    919c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    91a0:	mov	x20, x0
    91a4:	cbz	x0, 91ac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b9c>
    91a8:	ldr	x20, [x0, #16]
    91ac:	mov	x0, x24
    91b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    91b4:	cbz	x0, 91c4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1bb4>
    91b8:	ldr	w0, [x0, #32]
    91bc:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    91c0:	mov	x20, x0
    91c4:	adrp	x1, 0 <_ZN4llvm8BitRecTy6SharedE>
    91c8:	ldrb	w2, [x24, #8]
    91cc:	mov	x0, x21
    91d0:	ldr	x1, [x1]
    91d4:	cmp	w2, #0x2
    91d8:	csel	x20, x1, x20, eq  // eq = none
    91dc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    91e0:	mov	x25, x0
    91e4:	cbz	x0, 91ec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1bdc>
    91e8:	ldr	x25, [x0, #16]
    91ec:	mov	x0, x21
    91f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    91f4:	cbz	x0, 9204 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1bf4>
    91f8:	ldr	w0, [x0, #32]
    91fc:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    9200:	mov	x25, x0
    9204:	ldrb	w1, [x21, #8]
    9208:	ldrb	w0, [x24, #8]
    920c:	cmp	w1, #0x2
    9210:	b.eq	97d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21c0>  // b.none
    9214:	cmp	w0, #0x18
    9218:	csel	x20, x20, x25, ne  // ne = any
    921c:	cmp	w1, #0x18
    9220:	csel	x25, x25, x20, ne  // ne = any
    9224:	cmp	x20, #0x0
    9228:	ccmp	x25, #0x0, #0x4, ne  // ne = any
    922c:	b.eq	97bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21ac>  // b.none
    9230:	mov	x1, x25
    9234:	mov	x0, x20
    9238:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    923c:	mov	x23, x0
    9240:	cbnz	x0, 8e04 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17f4>
    9244:	add	x2, sp, #0xb0
    9248:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    924c:	mov	x0, x2
    9250:	add	x1, x1, #0x0
    9254:	str	x2, [sp, #112]
    9258:	add	x26, sp, #0x190
    925c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9260:	add	x27, sp, #0xe0
    9264:	ldr	x1, [x20]
    9268:	add	x4, sp, #0xf8
    926c:	add	x3, sp, #0xc8
    9270:	stp	x3, x4, [sp, #96]
    9274:	mov	x8, x26
    9278:	ldr	x1, [x1, #16]
    927c:	mov	x0, x20
    9280:	add	x23, sp, #0x110
    9284:	add	x19, sp, #0x1b0
    9288:	add	x24, sp, #0x128
    928c:	add	x21, sp, #0x140
    9290:	blr	x1
    9294:	add	x22, sp, #0x158
    9298:	ldr	x3, [sp, #96]
    929c:	mov	x1, x26
    92a0:	add	x20, sp, #0x170
    92a4:	mov	x0, x3
    92a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    92ac:	ldr	x2, [sp, #112]
    92b0:	mov	x8, x27
    92b4:	ldr	x0, [sp, #96]
    92b8:	mov	x1, x0
    92bc:	mov	x0, x2
    92c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    92c4:	ldr	x4, [sp, #104]
    92c8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    92cc:	add	x1, x1, #0x0
    92d0:	str	x4, [sp, #96]
    92d4:	mov	x0, x4
    92d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    92dc:	ldr	x0, [sp, #96]
    92e0:	mov	x8, x23
    92e4:	mov	x1, x0
    92e8:	mov	x0, x27
    92ec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    92f0:	ldr	x1, [x25]
    92f4:	mov	x8, x19
    92f8:	mov	x0, x25
    92fc:	ldr	x1, [x1, #16]
    9300:	blr	x1
    9304:	mov	x1, x19
    9308:	mov	x0, x24
    930c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9310:	add	x19, x19, #0x10
    9314:	mov	x8, x21
    9318:	mov	x1, x24
    931c:	mov	x0, x23
    9320:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9324:	mov	x0, x22
    9328:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    932c:	add	x1, x1, #0x0
    9330:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9334:	mov	x8, x20
    9338:	mov	x1, x22
    933c:	mov	x0, x21
    9340:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9344:	mov	x1, x20
    9348:	mov	x0, x28
    934c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9350:	ldr	x0, [sp, #432]
    9354:	cmp	x0, x19
    9358:	b.ne	7d4c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x73c>  // b.any
    935c:	b	7d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x740>
    9360:	mov	w27, #0x0                   	// #0
    9364:	b	85f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfe0>
    9368:	add	x19, sp, #0x1b0
    936c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9370:	mov	x0, x19
    9374:	add	x1, x1, #0x0
    9378:	b	7e14 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x804>
    937c:	ldp	x2, x1, [x28, #8]
    9380:	mov	x0, x28
    9384:	cmp	x2, x1
    9388:	cset	w1, eq  // eq = none
    938c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9390:	str	w0, [x28, #40]
    9394:	cbnz	w27, 93b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1da0>
    9398:	mov	x0, x20
    939c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    93a0:	cbz	x0, 99d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23c8>
    93a4:	ldr	x0, [x0, #16]
    93a8:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    93ac:	mov	x26, x0
    93b0:	mov	x3, x20
    93b4:	mov	x4, x26
    93b8:	mov	x2, x24
    93bc:	mov	x1, x23
    93c0:	mov	w0, #0x1                   	// #1
    93c4:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    93c8:	mov	x1, x19
    93cc:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    93d0:	mov	x20, x0
    93d4:	b	8670 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1060>
    93d8:	add	x19, sp, #0x1b0
    93dc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    93e0:	mov	x0, x19
    93e4:	add	x1, x1, #0x0
    93e8:	b	77f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e0>
    93ec:	add	x0, sp, #0xe0
    93f0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    93f4:	add	x1, x1, #0x0
    93f8:	str	x0, [sp, #104]
    93fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9400:	add	x26, sp, #0x190
    9404:	ldr	x0, [x21, #16]
    9408:	add	x3, sp, #0xf8
    940c:	str	x3, [sp, #96]
    9410:	mov	x8, x26
    9414:	add	x23, sp, #0x110
    9418:	add	x24, sp, #0x128
    941c:	ldr	x1, [x0]
    9420:	add	x20, sp, #0x140
    9424:	add	x21, sp, #0x158
    9428:	add	x19, sp, #0x170
    942c:	ldr	x1, [x1, #16]
    9430:	blr	x1
    9434:	ldr	x3, [sp, #96]
    9438:	mov	x1, x26
    943c:	mov	x0, x3
    9440:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9444:	ldp	x0, x2, [sp, #96]
    9448:	mov	x8, x23
    944c:	mov	x1, x0
    9450:	mov	x0, x2
    9454:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9458:	mov	x0, x24
    945c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9460:	add	x1, x1, #0x0
    9464:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9468:	mov	x1, x24
    946c:	mov	x0, x23
    9470:	mov	x8, x20
    9474:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9478:	ldr	x0, [x22, #16]
    947c:	mov	x8, x25
    9480:	ldr	x1, [x0]
    9484:	ldr	x1, [x1, #16]
    9488:	blr	x1
    948c:	mov	x1, x25
    9490:	mov	x0, x21
    9494:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9498:	add	x25, x25, #0x10
    949c:	mov	x8, x19
    94a0:	mov	x1, x21
    94a4:	mov	x0, x20
    94a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    94ac:	mov	x1, x19
    94b0:	mov	x0, x28
    94b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    94b8:	ldr	x0, [sp, #432]
    94bc:	cmp	x0, x25
    94c0:	b.eq	94c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1eb8>  // b.none
    94c4:	bl	0 <_ZdlPv>
    94c8:	ldr	x0, [sp, #400]
    94cc:	add	x26, x26, #0x10
    94d0:	cmp	x0, x26
    94d4:	b.eq	9190 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b80>  // b.none
    94d8:	mov	x20, #0x0                   	// #0
    94dc:	bl	0 <_ZdlPv>
    94e0:	b	8d7c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x176c>
    94e4:	ldp	x2, x1, [x28, #8]
    94e8:	mov	x0, x28
    94ec:	cmp	x2, x1
    94f0:	cset	w1, eq  // eq = none
    94f4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    94f8:	ldr	x5, [x21, #16]
    94fc:	mov	x4, x22
    9500:	mov	x3, x24
    9504:	mov	x2, x23
    9508:	str	w0, [x28, #40]
    950c:	mov	x1, x20
    9510:	mov	x0, x21
    9514:	bl	0 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>
    9518:	mov	x1, x19
    951c:	bl	0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>
    9520:	mov	x20, x0
    9524:	b	8d7c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x176c>
    9528:	mov	x27, #0x0                   	// #0
    952c:	stp	x25, x26, [sp, #64]
    9530:	mov	x25, x0
    9534:	b	8bdc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15cc>
    9538:	add	x19, sp, #0x1b0
    953c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9540:	mov	x0, x19
    9544:	add	x1, x1, #0x0
    9548:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    954c:	mov	x1, x19
    9550:	mov	x0, x28
    9554:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9558:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    955c:	add	x23, sp, #0x98
    9560:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9564:	mov	x0, x23
    9568:	add	x1, x1, #0x0
    956c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9570:	add	x26, sp, #0x190
    9574:	ldr	x1, [x27]
    9578:	mov	x8, x26
    957c:	mov	x0, x27
    9580:	add	x27, sp, #0xb0
    9584:	add	x19, sp, #0xc8
    9588:	add	x20, sp, #0xe0
    958c:	ldr	x1, [x1, #16]
    9590:	add	x22, sp, #0xf8
    9594:	blr	x1
    9598:	mov	x1, x26
    959c:	mov	x0, x27
    95a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95a4:	mov	x8, x19
    95a8:	mov	x1, x27
    95ac:	mov	x0, x23
    95b0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95b4:	mov	x0, x20
    95b8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95bc:	add	x1, x1, #0x0
    95c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95c4:	mov	x0, x19
    95c8:	mov	x1, x20
    95cc:	mov	x8, x22
    95d0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    95d4:	ldr	w0, [x21, #8]
    95d8:	cmp	w0, #0x5
    95dc:	b.ne	9b0c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24fc>  // b.any
    95e0:	ldr	x0, [x21, #24]
    95e4:	mov	x8, x25
    95e8:	add	x23, sp, #0x110
    95ec:	add	x20, sp, #0x128
    95f0:	add	x21, sp, #0x140
    95f4:	add	x19, sp, #0x158
    95f8:	ldr	x1, [x0]
    95fc:	ldr	x1, [x1, #16]
    9600:	blr	x1
    9604:	mov	x0, x23
    9608:	mov	x1, x25
    960c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9610:	mov	x8, x20
    9614:	mov	x1, x23
    9618:	mov	x0, x22
    961c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9620:	mov	x0, x21
    9624:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9628:	add	x1, x1, #0x0
    962c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9630:	mov	x1, x21
    9634:	mov	x0, x20
    9638:	mov	x8, x19
    963c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9640:	ldr	x3, [sp, #136]
    9644:	mov	x2, x19
    9648:	add	x0, sp, #0x90
    964c:	mov	x1, #0x1                   	// #1
    9650:	str	x3, [sp, #144]
    9654:	b	8adc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14cc>
    9658:	add	x22, sp, #0x110
    965c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9660:	mov	x0, x22
    9664:	add	x1, x1, #0x0
    9668:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    966c:	add	x23, sp, #0x128
    9670:	ldr	x1, [x21]
    9674:	mov	x8, x25
    9678:	mov	x0, x21
    967c:	add	x20, sp, #0x140
    9680:	add	x21, sp, #0x158
    9684:	add	x19, sp, #0x190
    9688:	ldr	x1, [x1, #16]
    968c:	blr	x1
    9690:	mov	x0, x23
    9694:	mov	x1, x25
    9698:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    969c:	mov	x8, x20
    96a0:	mov	x1, x23
    96a4:	mov	x0, x22
    96a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    96ac:	mov	x0, x21
    96b0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    96b4:	add	x1, x1, #0x0
    96b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    96bc:	mov	x1, x21
    96c0:	mov	x0, x20
    96c4:	mov	x8, x19
    96c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    96cc:	ldr	x3, [sp, #136]
    96d0:	mov	x2, x19
    96d4:	add	x0, sp, #0xf8
    96d8:	mov	x1, #0x1                   	// #1
    96dc:	str	x3, [sp, #248]
    96e0:	b	82cc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcbc>
    96e4:	cbz	x26, 9b08 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24f8>
    96e8:	ldr	w0, [x26, #8]
    96ec:	cmp	w0, #0x6
    96f0:	b.eq	971c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x210c>  // b.none
    96f4:	add	x19, sp, #0x1b0
    96f8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    96fc:	mov	x0, x19
    9700:	add	x1, x1, #0x0
    9704:	b	7e14 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x804>
    9708:	add	x19, sp, #0x1b0
    970c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9710:	mov	x0, x19
    9714:	add	x1, x1, #0x0
    9718:	b	7e10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x800>
    971c:	cbz	x21, 9730 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2120>
    9720:	ldr	w0, [x21, #8]
    9724:	cmp	w0, #0x6
    9728:	b.ne	99e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23d8>  // b.any
    972c:	mov	x21, #0x0                   	// #0
    9730:	mov	w27, #0x1                   	// #1
    9734:	b	85f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfe0>
    9738:	ldr	x2, [x28, #344]
    973c:	add	x25, sp, #0x1b0
    9740:	add	x8, sp, #0x190
    9744:	mov	x1, x25
    9748:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    974c:	add	x0, x0, #0x0
    9750:	stp	xzr, xzr, [sp, #432]
    9754:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9758:	mov	x2, x26
    975c:	ldr	x22, [sp, #400]
    9760:	mov	w3, #0x0                   	// #0
    9764:	mov	x0, x25
    9768:	mov	x1, x23
    976c:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    9770:	mov	x1, x25
    9774:	mov	x0, x22
    9778:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    977c:	mov	x2, x21
    9780:	mov	w3, #0x0                   	// #0
    9784:	mov	x1, x22
    9788:	mov	x0, x28
    978c:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    9790:	mov	x20, x0
    9794:	mov	x1, x23
    9798:	mov	x0, x22
    979c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    97a0:	cbnz	x20, 8644 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1034>
    97a4:	b	8670 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1060>
    97a8:	add	x19, sp, #0x1b0
    97ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    97b0:	mov	x0, x19
    97b4:	add	x1, x1, #0x0
    97b8:	b	7e10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x800>
    97bc:	add	x19, sp, #0x1b0
    97c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    97c4:	mov	x0, x19
    97c8:	add	x1, x1, #0x0
    97cc:	b	7e10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x800>
    97d0:	cmp	w0, #0x18
    97d4:	b.eq	99c4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23b4>  // b.none
    97d8:	adrp	x25, 0 <_ZN4llvm8BitRecTy6SharedE>
    97dc:	ldr	x25, [x25]
    97e0:	b	9224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c14>
    97e4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    97e8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    97ec:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    97f0:	add	x3, x3, #0x0
    97f4:	add	x1, x1, #0x0
    97f8:	add	x0, x0, #0x0
    97fc:	mov	w2, #0xa7                  	// #167
    9800:	bl	0 <__assert_fail>
    9804:	add	x23, sp, #0x128
    9808:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    980c:	mov	x0, x23
    9810:	add	x1, x1, #0x0
    9814:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9818:	add	x19, sp, #0x1b0
    981c:	ldr	x0, [x20, #16]
    9820:	mov	x8, x19
    9824:	add	x24, sp, #0x140
    9828:	add	x21, sp, #0x158
    982c:	add	x22, sp, #0x170
    9830:	add	x20, sp, #0x190
    9834:	ldr	x1, [x0]
    9838:	ldr	x1, [x1, #16]
    983c:	blr	x1
    9840:	mov	x1, x19
    9844:	mov	x0, x24
    9848:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    984c:	mov	x8, x21
    9850:	mov	x1, x24
    9854:	mov	x0, x23
    9858:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    985c:	mov	x0, x22
    9860:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9864:	add	x1, x1, #0x0
    9868:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    986c:	mov	x1, x22
    9870:	mov	x0, x21
    9874:	mov	x8, x20
    9878:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    987c:	mov	x2, x20
    9880:	add	x0, sp, #0x110
    9884:	mov	x1, #0x1                   	// #1
    9888:	str	x25, [sp, #272]
    988c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9890:	add	x19, x19, #0x10
    9894:	ldr	x0, [sp, #432]
    9898:	cmp	x0, x19
    989c:	b.ne	7d60 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x750>  // b.any
    98a0:	b	7d64 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x754>
    98a4:	ldrb	w0, [x24, #8]
    98a8:	cmp	w0, #0x18
    98ac:	b.eq	8ddc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17cc>  // b.none
    98b0:	add	x19, sp, #0x1b0
    98b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    98b8:	mov	x0, x19
    98bc:	add	x1, x1, #0x0
    98c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    98c4:	str	x25, [sp, #400]
    98c8:	mov	x2, x19
    98cc:	add	x0, sp, #0x190
    98d0:	mov	x1, #0x1                   	// #1
    98d4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    98d8:	ldp	x25, x26, [sp, #64]
    98dc:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    98e0:	mov	x27, x24
    98e4:	b	8bdc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15cc>
    98e8:	ldrb	w0, [x21, #8]
    98ec:	cmp	w0, #0x18
    98f0:	b.ne	9a94 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2484>  // b.any
    98f4:	cbnz	x20, 8e04 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17f4>
    98f8:	add	x19, sp, #0x1b0
    98fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9900:	mov	x0, x19
    9904:	add	x1, x1, #0x0
    9908:	b	98c0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22b0>
    990c:	add	x19, sp, #0x1b0
    9910:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9914:	mov	x0, x19
    9918:	add	x1, x1, #0x0
    991c:	b	7e14 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x804>
    9920:	add	x23, sp, #0x128
    9924:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9928:	mov	x0, x23
    992c:	add	x1, x1, #0x0
    9930:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9934:	add	x19, sp, #0x1b0
    9938:	ldr	x0, [x28, #16]
    993c:	mov	x8, x19
    9940:	add	x24, sp, #0x140
    9944:	add	x21, sp, #0x158
    9948:	add	x22, sp, #0x170
    994c:	add	x20, sp, #0x190
    9950:	ldr	x1, [x0]
    9954:	ldr	x1, [x1, #16]
    9958:	blr	x1
    995c:	mov	x1, x19
    9960:	mov	x0, x24
    9964:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9968:	mov	x8, x21
    996c:	mov	x1, x24
    9970:	mov	x0, x23
    9974:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9978:	mov	x0, x22
    997c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9980:	add	x1, x1, #0x0
    9984:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9988:	mov	x1, x22
    998c:	mov	x0, x21
    9990:	mov	x8, x20
    9994:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9998:	mov	x2, x20
    999c:	add	x0, sp, #0x110
    99a0:	mov	x1, #0x1                   	// #1
    99a4:	str	x26, [sp, #272]
    99a8:	b	988c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x227c>
    99ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    99b0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    99b4:	add	x1, x1, #0x0
    99b8:	add	x0, x0, #0x0
    99bc:	mov	w2, #0x4cf                 	// #1231
    99c0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    99c4:	adrp	x20, 0 <_ZN4llvm8BitRecTy6SharedE>
    99c8:	ldr	x20, [x20]
    99cc:	mov	x25, x20
    99d0:	b	9230 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c20>
    99d4:	bl	78 <_ZN4llvm3isaINS_9ListRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    99d8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    99dc:	mov	x0, x25
    99e0:	add	x1, x1, #0x0
    99e4:	b	865c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x104c>
    99e8:	add	x25, sp, #0x140
    99ec:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    99f0:	mov	x0, x25
    99f4:	add	x1, x1, #0x0
    99f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    99fc:	add	x19, sp, #0x1b0
    9a00:	ldr	x1, [x21]
    9a04:	mov	x8, x19
    9a08:	mov	x0, x21
    9a0c:	add	x26, sp, #0x128
    9a10:	add	x23, sp, #0x158
    9a14:	add	x24, sp, #0x170
    9a18:	ldr	x1, [x1, #16]
    9a1c:	add	x21, sp, #0x190
    9a20:	blr	x1
    9a24:	mov	x1, x19
    9a28:	mov	x0, x26
    9a2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9a30:	mov	x1, x26
    9a34:	mov	x0, x25
    9a38:	mov	x8, x23
    9a3c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9a40:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9a44:	mov	x0, x24
    9a48:	add	x1, x1, #0x0
    9a4c:	b	8490 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe80>
    9a50:	add	x19, sp, #0x1b0
    9a54:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9a58:	mov	x0, x19
    9a5c:	add	x1, x1, #0x0
    9a60:	b	7e10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x800>
    9a64:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9a68:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9a6c:	add	x1, x1, #0x0
    9a70:	add	x0, x0, #0x0
    9a74:	mov	w2, #0x39a                 	// #922
    9a78:	stp	x25, x26, [sp, #64]
    9a7c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    9a80:	add	x19, sp, #0x1b0
    9a84:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9a88:	mov	x0, x19
    9a8c:	add	x1, x1, #0x0
    9a90:	b	7e14 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x804>
    9a94:	add	x19, sp, #0x1b0
    9a98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9a9c:	mov	x0, x19
    9aa0:	add	x1, x1, #0x0
    9aa4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9aa8:	mov	x20, #0x0                   	// #0
    9aac:	mov	x2, x19
    9ab0:	add	x0, sp, #0x190
    9ab4:	mov	x1, #0x1                   	// #1
    9ab8:	str	x26, [sp, #400]
    9abc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9ac0:	ldp	x25, x26, [sp, #64]
    9ac4:	b	7804 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f4>
    9ac8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9acc:	add	x3, x3, #0x0
    9ad0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9ad4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9ad8:	add	x1, x1, #0x0
    9adc:	add	x0, x0, #0x0
    9ae0:	mov	w2, #0x69                  	// #105
    9ae4:	bl	0 <__assert_fail>
    9ae8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9aec:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9af0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9af4:	add	x3, x3, #0x0
    9af8:	add	x1, x1, #0x0
    9afc:	add	x0, x0, #0x0
    9b00:	mov	w2, #0x9e                  	// #158
    9b04:	bl	0 <__assert_fail>
    9b08:	bl	118 <_ZN4llvm3isaINS_8DagRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>
    9b0c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9b10:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9b14:	add	x3, x3, #0x0
    9b18:	b	8194 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb84>
    9b1c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9b20:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9b24:	add	x3, x3, #0x0
    9b28:	b	9ad4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24c4>
    9b2c:	bl	310 <_ZN4llvm3isaINS_11StringRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

0000000000009b30 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE>:
    9b30:	stp	x29, x30, [sp, #-96]!
    9b34:	mov	x29, sp
    9b38:	stp	x19, x20, [sp, #16]
    9b3c:	mov	x19, x0
    9b40:	mov	x20, x1
    9b44:	ldr	w0, [x0, #40]
    9b48:	stp	x21, x22, [sp, #32]
    9b4c:	mov	x21, x2
    9b50:	str	x23, [sp, #48]
    9b54:	b	9be0 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0xb0>
    9b58:	mov	x1, x21
    9b5c:	mov	x0, x19
    9b60:	mov	w3, #0x0                   	// #0
    9b64:	mov	x2, #0x0                   	// #0
    9b68:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    9b6c:	mov	x22, x0
    9b70:	cbz	x0, 9d04 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1d4>
    9b74:	ldr	w0, [x19, #40]
    9b78:	mov	x23, #0x0                   	// #0
    9b7c:	cmp	w0, #0xc
    9b80:	b.eq	9c6c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x13c>  // b.none
    9b84:	ldp	w3, w4, [x20, #8]
    9b88:	cmp	w3, w4
    9b8c:	b.cs	9cbc <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x18c>  // b.hs, b.nlast
    9b90:	ldr	x0, [x20]
    9b94:	ubfiz	x2, x3, #4, #32
    9b98:	mov	w1, w3
    9b9c:	add	x5, x0, x2
    9ba0:	add	x1, x1, #0x1
    9ba4:	str	x22, [x0, x2]
    9ba8:	cmp	x1, w4, uxtw
    9bac:	str	x23, [x5, #8]
    9bb0:	b.hi	9d1c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1ec>  // b.pmore
    9bb4:	ldr	w0, [x19, #40]
    9bb8:	add	w3, w3, #0x1
    9bbc:	str	w3, [x20, #8]
    9bc0:	cmp	w0, #0xe
    9bc4:	b.ne	9c58 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x128>  // b.any
    9bc8:	ldp	x2, x1, [x19, #8]
    9bcc:	mov	x0, x19
    9bd0:	cmp	x2, x1
    9bd4:	cset	w1, eq  // eq = none
    9bd8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9bdc:	str	w0, [x19, #40]
    9be0:	cmp	w0, #0x4a
    9be4:	b.ne	9b58 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x28>  // b.any
    9be8:	ldp	x0, x1, [x19, #48]
    9bec:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    9bf0:	mov	x22, x0
    9bf4:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    9bf8:	mov	x23, x0
    9bfc:	ldp	w1, w4, [x20, #8]
    9c00:	cmp	w1, w4
    9c04:	b.cs	9cd0 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1a0>  // b.hs, b.nlast
    9c08:	ldr	x0, [x20]
    9c0c:	ubfiz	x3, x1, #4, #32
    9c10:	mov	w2, w1
    9c14:	add	x5, x0, x3
    9c18:	add	x2, x2, #0x1
    9c1c:	str	x23, [x0, x3]
    9c20:	cmp	x2, w4, uxtw
    9c24:	str	x22, [x5, #8]
    9c28:	b.hi	9d1c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1ec>  // b.pmore
    9c2c:	add	w1, w1, #0x1
    9c30:	str	w1, [x20, #8]
    9c34:	cbz	w1, 9d3c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x20c>
    9c38:	ldp	x1, x2, [x19, #8]
    9c3c:	mov	x0, x19
    9c40:	cmp	x2, x1
    9c44:	cset	w1, eq  // eq = none
    9c48:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9c4c:	str	w0, [x19, #40]
    9c50:	cmp	w0, #0xe
    9c54:	b.eq	9bc8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x98>  // b.none
    9c58:	ldp	x19, x20, [sp, #16]
    9c5c:	ldp	x21, x22, [sp, #32]
    9c60:	ldr	x23, [sp, #48]
    9c64:	ldp	x29, x30, [sp], #96
    9c68:	ret
    9c6c:	ldp	x2, x1, [x19, #8]
    9c70:	mov	x0, x19
    9c74:	cmp	x2, x1
    9c78:	cset	w1, eq  // eq = none
    9c7c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9c80:	str	w0, [x19, #40]
    9c84:	cmp	w0, #0x4a
    9c88:	b.ne	9ce4 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1b4>  // b.any
    9c8c:	ldp	x0, x1, [x19, #48]
    9c90:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    9c94:	mov	x23, x0
    9c98:	ldp	x2, x1, [x19, #8]
    9c9c:	mov	x0, x19
    9ca0:	cmp	x2, x1
    9ca4:	cset	w1, eq  // eq = none
    9ca8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9cac:	str	w0, [x19, #40]
    9cb0:	ldp	w3, w4, [x20, #8]
    9cb4:	cmp	w3, w4
    9cb8:	b.cc	9b90 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x60>  // b.lo, b.ul, b.last
    9cbc:	mov	x0, x20
    9cc0:	mov	x1, #0x0                   	// #0
    9cc4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9cc8:	ldp	w3, w4, [x20, #8]
    9ccc:	b	9b90 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x60>
    9cd0:	mov	x1, #0x0                   	// #0
    9cd4:	mov	x0, x20
    9cd8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9cdc:	ldp	w1, w4, [x20, #8]
    9ce0:	b	9c08 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0xd8>
    9ce4:	add	x21, sp, #0x48
    9ce8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9cec:	mov	x0, x21
    9cf0:	add	x1, x1, #0x0
    9cf4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9cf8:	mov	x1, x21
    9cfc:	mov	x0, x19
    9d00:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9d04:	str	wzr, [x20, #8]
    9d08:	ldp	x19, x20, [sp, #16]
    9d0c:	ldp	x21, x22, [sp, #32]
    9d10:	ldr	x23, [sp, #48]
    9d14:	ldp	x29, x30, [sp], #96
    9d18:	ret
    9d1c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9d20:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9d24:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9d28:	add	x3, x3, #0x0
    9d2c:	add	x1, x1, #0x0
    9d30:	add	x0, x0, #0x0
    9d34:	mov	w2, #0x43                  	// #67
    9d38:	bl	0 <__assert_fail>
    9d3c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9d40:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9d44:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9d48:	add	x3, x3, #0x0
    9d4c:	add	x1, x1, #0x0
    9d50:	add	x0, x0, #0x0
    9d54:	mov	w2, #0xa7                  	// #167
    9d58:	bl	0 <__assert_fail>
    9d5c:	nop

0000000000009d60 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>:
    9d60:	stp	x29, x30, [sp, #-144]!
    9d64:	cmp	x3, #0x0
    9d68:	mov	x29, sp
    9d6c:	stp	x19, x20, [sp, #16]
    9d70:	mov	x20, x3
    9d74:	mov	x19, x1
    9d78:	stp	x21, x22, [sp, #32]
    9d7c:	cset	w22, ne  // ne = any
    9d80:	cmp	x4, #0x0
    9d84:	stp	x23, x24, [sp, #48]
    9d88:	csel	w22, w22, wzr, eq  // eq = none
    9d8c:	mov	x23, x2
    9d90:	stp	x25, x26, [sp, #64]
    9d94:	stp	x27, x28, [sp, #80]
    9d98:	mov	x27, x0
    9d9c:	cbz	w22, 9f9c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x23c>
    9da0:	ldr	w0, [x3, #64]
    9da4:	cbz	w0, 9fa8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x248>
    9da8:	ldr	w2, [x3, #80]
    9dac:	mov	w1, #0x18                  	// #24
    9db0:	ldr	x0, [x3, #72]
    9db4:	ldr	x21, [x3, #56]
    9db8:	umaddl	x2, w2, w1, x0
    9dbc:	cmp	x2, x0
    9dc0:	ldr	x3, [x21]
    9dc4:	b.ne	9dd8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x78>  // b.any
    9dc8:	b	9fe8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x288>
    9dcc:	add	x0, x0, #0x18
    9dd0:	cmp	x2, x0
    9dd4:	b.eq	9fe8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x288>  // b.none
    9dd8:	ldr	x1, [x0]
    9ddc:	cmp	x3, x1
    9de0:	b.ne	9dcc <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x6c>  // b.any
    9de4:	ldr	x26, [x0, #8]
    9de8:	mov	w21, #0x1                   	// #1
    9dec:	and	x26, x26, #0xfffffffffffffff8
    9df0:	mov	x1, x23
    9df4:	mov	x2, x26
    9df8:	mov	x0, x27
    9dfc:	mov	w3, #0x0                   	// #0
    9e00:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    9e04:	mov	x24, x0
    9e08:	ldp	w1, w0, [x19, #8]
    9e0c:	cmp	w1, w0
    9e10:	b.cs	a0b4 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x354>  // b.hs, b.nlast
    9e14:	ldr	x0, [x19]
    9e18:	str	x24, [x0, w1, uxtw #3]
    9e1c:	ldp	w1, w2, [x19, #8]
    9e20:	mov	w0, w1
    9e24:	add	x0, x0, #0x1
    9e28:	cmp	x0, x2
    9e2c:	b.hi	a114 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3b4>  // b.pmore
    9e30:	add	w1, w1, #0x1
    9e34:	str	w1, [x19, #8]
    9e38:	cbz	w1, a134 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3d4>
    9e3c:	ldr	x1, [x19]
    9e40:	add	x25, x19, #0x10
    9e44:	mov	w24, #0x18                  	// #24
    9e48:	add	x0, x1, x0, lsl #3
    9e4c:	ldur	x0, [x0, #-8]
    9e50:	cbnz	x0, 9eb4 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x154>
    9e54:	b	9f60 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x200>
    9e58:	mov	x1, x23
    9e5c:	mov	x2, x26
    9e60:	mov	x0, x27
    9e64:	mov	w3, #0x0                   	// #0
    9e68:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    9e6c:	mov	x28, x0
    9e70:	ldp	w1, w0, [x19, #8]
    9e74:	cmp	w1, w0
    9e78:	b.cs	9f80 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x220>  // b.hs, b.nlast
    9e7c:	ldr	x0, [x19]
    9e80:	str	x28, [x0, w1, uxtw #3]
    9e84:	ldp	w0, w2, [x19, #8]
    9e88:	mov	w1, w0
    9e8c:	add	x1, x1, #0x1
    9e90:	cmp	x1, x2
    9e94:	b.hi	a114 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3b4>  // b.pmore
    9e98:	add	w0, w0, #0x1
    9e9c:	str	w0, [x19, #8]
    9ea0:	cbz	w0, a134 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3d4>
    9ea4:	ldr	x0, [x19]
    9ea8:	add	x1, x0, x1, lsl #3
    9eac:	ldur	x0, [x1, #-8]
    9eb0:	cbz	x0, 9f60 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x200>
    9eb4:	ldr	w0, [x27, #40]
    9eb8:	cmp	w0, #0xe
    9ebc:	b.ne	9f64 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x204>  // b.any
    9ec0:	ldp	x2, x1, [x27, #8]
    9ec4:	mov	x0, x27
    9ec8:	cmp	x2, x1
    9ecc:	cset	w1, eq  // eq = none
    9ed0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9ed4:	str	w0, [x27, #40]
    9ed8:	cmp	w0, #0x5
    9edc:	b.eq	9f64 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x204>  // b.none
    9ee0:	cbz	w22, 9e58 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0xf8>
    9ee4:	ldr	w0, [x20, #64]
    9ee8:	mov	w2, w21
    9eec:	ldr	x1, [x20, #56]
    9ef0:	cmp	x0, w21, uxtw
    9ef4:	b.ls	9f3c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1dc>  // b.plast
    9ef8:	ldr	w0, [x20, #80]
    9efc:	ldr	x4, [x20, #72]
    9f00:	ldr	x2, [x1, x2, lsl #3]
    9f04:	umaddl	x0, w0, w24, x4
    9f08:	cmp	x4, x0
    9f0c:	b.ne	9f20 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1c0>  // b.any
    9f10:	b	a154 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3f4>
    9f14:	add	x4, x4, #0x18
    9f18:	cmp	x0, x4
    9f1c:	b.eq	a154 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3f4>  // b.none
    9f20:	ldr	x1, [x4]
    9f24:	cmp	x2, x1
    9f28:	b.ne	9f14 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1b4>  // b.any
    9f2c:	ldr	x26, [x4, #8]
    9f30:	add	w21, w21, #0x1
    9f34:	and	x26, x26, #0xfffffffffffffff8
    9f38:	b	9e58 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0xf8>
    9f3c:	add	x20, sp, #0x78
    9f40:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9f44:	mov	x0, x20
    9f48:	add	x1, x1, #0x0
    9f4c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9f50:	mov	x1, x20
    9f54:	mov	x0, x27
    9f58:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9f5c:	nop
    9f60:	str	wzr, [x19, #8]
    9f64:	ldp	x19, x20, [sp, #16]
    9f68:	ldp	x21, x22, [sp, #32]
    9f6c:	ldp	x23, x24, [sp, #48]
    9f70:	ldp	x25, x26, [sp, #64]
    9f74:	ldp	x27, x28, [sp, #80]
    9f78:	ldp	x29, x30, [sp], #144
    9f7c:	ret
    9f80:	mov	x1, x25
    9f84:	mov	x0, x19
    9f88:	mov	x3, #0x8                   	// #8
    9f8c:	mov	x2, #0x0                   	// #0
    9f90:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    9f94:	ldr	w1, [x19, #8]
    9f98:	b	9e7c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x11c>
    9f9c:	mov	x26, x4
    9fa0:	mov	w21, #0x0                   	// #0
    9fa4:	b	9df0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x90>
    9fa8:	add	x0, sp, #0x78
    9fac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9fb0:	add	x1, x1, #0x0
    9fb4:	str	x0, [sp, #104]
    9fb8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9fbc:	ldr	x1, [sp, #104]
    9fc0:	mov	x0, x27
    9fc4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    9fc8:	str	wzr, [x19, #8]
    9fcc:	ldp	x19, x20, [sp, #16]
    9fd0:	ldp	x21, x22, [sp, #32]
    9fd4:	ldp	x23, x24, [sp, #48]
    9fd8:	ldp	x25, x26, [sp, #64]
    9fdc:	ldp	x27, x28, [sp, #80]
    9fe0:	ldp	x29, x30, [sp], #144
    9fe4:	ret
    9fe8:	bl	0 <_ZN4llvm4errsEv>
    9fec:	mov	x1, x0
    9ff0:	ldp	x2, x3, [x0, #16]
    9ff4:	sub	x2, x2, x3
    9ff8:	cmp	x2, #0x18
    9ffc:	b.ls	a0d0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x370>  // b.plast
    a000:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a004:	add	x0, x0, #0x0
    a008:	ldrb	w2, [x0, #24]
    a00c:	ldp	x4, x5, [x0]
    a010:	stp	x4, x5, [x3]
    a014:	ldr	x0, [x0, #16]
    a018:	str	x0, [x3, #16]
    a01c:	strb	w2, [x3, #24]
    a020:	ldr	x0, [x1, #24]
    a024:	add	x0, x0, #0x19
    a028:	str	x0, [x1, #24]
    a02c:	mov	x0, x1
    a030:	mov	x1, #0x0                   	// #0
    a034:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    a038:	mov	x2, x0
    a03c:	ldp	x1, x3, [x0, #16]
    a040:	sub	x1, x1, x3
    a044:	cmp	x1, #0x1
    a048:	b.ls	a0fc <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x39c>  // b.plast
    a04c:	mov	w0, #0x2820                	// #10272
    a050:	strh	w0, [x3]
    a054:	ldr	x0, [x2, #24]
    a058:	add	x0, x0, #0x2
    a05c:	str	x0, [x2, #24]
    a060:	ldr	x1, [x21]
    a064:	mov	x0, x2
    a068:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    a06c:	mov	x1, x0
    a070:	ldp	x2, x3, [x0, #16]
    a074:	sub	x2, x2, x3
    a078:	cmp	x2, #0x1
    a07c:	b.ls	a0e8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x388>  // b.plast
    a080:	mov	w0, #0xa29                 	// #2601
    a084:	strh	w0, [x3]
    a088:	ldr	x0, [x1, #24]
    a08c:	add	x0, x0, #0x2
    a090:	str	x0, [x1, #24]
    a094:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a098:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a09c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a0a0:	add	x3, x3, #0x0
    a0a4:	add	x1, x1, #0x0
    a0a8:	add	x0, x0, #0x0
    a0ac:	mov	w2, #0x945                 	// #2373
    a0b0:	bl	0 <__assert_fail>
    a0b4:	add	x1, x19, #0x10
    a0b8:	mov	x0, x19
    a0bc:	mov	x3, #0x8                   	// #8
    a0c0:	mov	x2, #0x0                   	// #0
    a0c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    a0c8:	ldr	w1, [x19, #8]
    a0cc:	b	9e14 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0xb4>
    a0d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a0d4:	add	x1, x1, #0x0
    a0d8:	mov	x2, #0x19                  	// #25
    a0dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    a0e0:	mov	x1, x0
    a0e4:	b	a02c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2cc>
    a0e8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a0ec:	mov	x2, #0x2                   	// #2
    a0f0:	add	x1, x1, #0x0
    a0f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    a0f8:	b	a094 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x334>
    a0fc:	mov	x2, #0x2                   	// #2
    a100:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a104:	add	x1, x1, #0x0
    a108:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    a10c:	mov	x2, x0
    a110:	b	a060 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x300>
    a114:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a118:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a11c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a120:	add	x3, x3, #0x0
    a124:	add	x1, x1, #0x0
    a128:	add	x0, x0, #0x0
    a12c:	mov	w2, #0x43                  	// #67
    a130:	bl	0 <__assert_fail>
    a134:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a138:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a13c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a140:	add	x3, x3, #0x0
    a144:	add	x1, x1, #0x0
    a148:	add	x0, x0, #0x0
    a14c:	mov	w2, #0xa7                  	// #167
    a150:	bl	0 <__assert_fail>
    a154:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a158:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a15c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a160:	add	x3, x3, #0x0
    a164:	add	x1, x1, #0x0
    a168:	add	x0, x0, #0x0
    a16c:	mov	w2, #0x95e                 	// #2398
    a170:	bl	0 <__assert_fail>
    a174:	nop

000000000000a178 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>:
    a178:	stp	x29, x30, [sp, #-80]!
    a17c:	add	x4, x8, #0x28
    a180:	mov	x3, #0x400000000           	// #17179869184
    a184:	mov	x29, sp
    a188:	stp	x19, x20, [sp, #16]
    a18c:	mov	x19, x8
    a190:	mov	x20, x0
    a194:	stp	x21, x22, [sp, #32]
    a198:	mov	x22, x1
    a19c:	and	w21, w2, #0xff
    a1a0:	stp	xzr, xzr, [x8]
    a1a4:	stp	xzr, x4, [x8, #16]
    a1a8:	str	x3, [x8, #32]
    a1ac:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a1b0:	str	x0, [x19]
    a1b4:	mov	x0, x20
    a1b8:	cbz	w21, a1f4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x7c>
    a1bc:	bl	17c0 <_ZN4llvm8TGParser17ParseMultiClassIDEv>
    a1c0:	cbz	x0, a290 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x118>
    a1c4:	str	x0, [x19, #16]
    a1c8:	ldr	w0, [x20, #40]
    a1cc:	cmp	w0, #0xa
    a1d0:	b.eq	a20c <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x94>  // b.none
    a1d4:	mov	x0, x20
    a1d8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a1dc:	str	x0, [x19, #8]
    a1e0:	mov	x0, x19
    a1e4:	ldp	x19, x20, [sp, #16]
    a1e8:	ldp	x21, x22, [sp, #32]
    a1ec:	ldp	x29, x30, [sp], #80
    a1f0:	ret
    a1f4:	bl	4478 <_ZN4llvm8TGParser12ParseClassIDEv>
    a1f8:	str	x0, [x19, #16]
    a1fc:	cbz	x0, a1e0 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x68>
    a200:	ldr	w0, [x20, #40]
    a204:	cmp	w0, #0xa
    a208:	b.ne	a1d4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x5c>  // b.any
    a20c:	ldp	x2, x1, [x20, #8]
    a210:	mov	x0, x20
    a214:	cmp	x2, x1
    a218:	cset	w1, eq  // eq = none
    a21c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a220:	str	w0, [x20, #40]
    a224:	cmp	w0, #0xb
    a228:	b.eq	a29c <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x124>  // b.none
    a22c:	ldr	x3, [x19, #16]
    a230:	mov	x0, x20
    a234:	mov	x2, x22
    a238:	add	x1, x19, #0x18
    a23c:	mov	x4, #0x0                   	// #0
    a240:	bl	9d60 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    a244:	ldr	w0, [x19, #32]
    a248:	cbz	w0, a278 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x100>
    a24c:	ldr	w0, [x20, #40]
    a250:	cmp	w0, #0xb
    a254:	b.eq	a2b0 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x138>  // b.none
    a258:	add	x21, sp, #0x38
    a25c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a260:	mov	x0, x21
    a264:	add	x1, x1, #0x0
    a268:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a26c:	mov	x1, x21
    a270:	mov	x0, x20
    a274:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a278:	str	xzr, [x19, #16]
    a27c:	mov	x0, x19
    a280:	ldp	x19, x20, [sp, #16]
    a284:	ldp	x21, x22, [sp, #32]
    a288:	ldp	x29, x30, [sp], #80
    a28c:	ret
    a290:	ldr	x0, [x19, #16]
    a294:	cbnz	x0, a200 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x88>
    a298:	b	a1e0 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x68>
    a29c:	add	x21, sp, #0x38
    a2a0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a2a4:	mov	x0, x21
    a2a8:	add	x1, x1, #0x0
    a2ac:	b	a268 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0xf0>
    a2b0:	ldp	x2, x1, [x20, #8]
    a2b4:	mov	x0, x20
    a2b8:	cmp	x2, x1
    a2bc:	cset	w1, eq  // eq = none
    a2c0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a2c4:	str	w0, [x20, #40]
    a2c8:	b	a1d4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x5c>
    a2cc:	nop

000000000000a2d0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>:
    a2d0:	stp	x29, x30, [sp, #-80]!
    a2d4:	add	x4, x8, #0x28
    a2d8:	mov	x3, #0x400000000           	// #17179869184
    a2dc:	mov	x29, sp
    a2e0:	stp	x19, x20, [sp, #16]
    a2e4:	mov	x19, x8
    a2e8:	mov	x20, x0
    a2ec:	str	x21, [sp, #32]
    a2f0:	mov	x21, x1
    a2f4:	stp	xzr, xzr, [x8]
    a2f8:	stp	xzr, x4, [x8, #16]
    a2fc:	str	x3, [x8, #32]
    a300:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a304:	str	x0, [x19]
    a308:	mov	x0, x20
    a30c:	bl	17c0 <_ZN4llvm8TGParser17ParseMultiClassIDEv>
    a310:	str	x0, [x19, #16]
    a314:	cbz	x0, a330 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x60>
    a318:	ldr	w0, [x20, #40]
    a31c:	cmp	w0, #0xa
    a320:	b.eq	a344 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x74>  // b.none
    a324:	mov	x0, x20
    a328:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a32c:	str	x0, [x19, #8]
    a330:	mov	x0, x19
    a334:	ldp	x19, x20, [sp, #16]
    a338:	ldr	x21, [sp, #32]
    a33c:	ldp	x29, x30, [sp], #80
    a340:	ret
    a344:	ldp	x2, x1, [x20, #8]
    a348:	mov	x0, x20
    a34c:	cmp	x2, x1
    a350:	cset	w1, eq  // eq = none
    a354:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a358:	str	w0, [x20, #40]
    a35c:	cmp	w0, #0xb
    a360:	b.eq	a3c8 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xf8>  // b.none
    a364:	ldr	x3, [x19, #16]
    a368:	mov	x0, x20
    a36c:	mov	x2, x21
    a370:	add	x1, x19, #0x18
    a374:	mov	x4, #0x0                   	// #0
    a378:	bl	9d60 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    a37c:	ldr	w0, [x19, #32]
    a380:	cbz	w0, a3b0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xe0>
    a384:	ldr	w0, [x20, #40]
    a388:	cmp	w0, #0xb
    a38c:	b.eq	a3dc <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x10c>  // b.none
    a390:	add	x21, sp, #0x38
    a394:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a398:	mov	x0, x21
    a39c:	add	x1, x1, #0x0
    a3a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a3a4:	mov	x1, x21
    a3a8:	mov	x0, x20
    a3ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a3b0:	str	xzr, [x19, #16]
    a3b4:	mov	x0, x19
    a3b8:	ldp	x19, x20, [sp, #16]
    a3bc:	ldr	x21, [sp, #32]
    a3c0:	ldp	x29, x30, [sp], #80
    a3c4:	ret
    a3c8:	add	x21, sp, #0x38
    a3cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a3d0:	mov	x0, x21
    a3d4:	add	x1, x1, #0x0
    a3d8:	b	a3a0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xd0>
    a3dc:	ldp	x2, x1, [x20, #8]
    a3e0:	mov	x0, x20
    a3e4:	cmp	x2, x1
    a3e8:	cset	w1, eq  // eq = none
    a3ec:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a3f0:	str	w0, [x20, #40]
    a3f4:	b	a324 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x54>

000000000000a3f8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE>:
    a3f8:	stp	x29, x30, [sp, #-368]!
    a3fc:	mov	x29, sp
    a400:	stp	x19, x20, [sp, #16]
    a404:	mov	x19, x0
    a408:	ldr	w0, [x0, #40]
    a40c:	stp	x21, x22, [sp, #32]
    a410:	cmp	w0, #0x48
    a414:	b.ne	a684 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x28c>  // b.any
    a418:	mov	x20, x1
    a41c:	ldp	x0, x1, [x19, #48]
    a420:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a424:	mov	x22, x0
    a428:	ldp	x1, x2, [x19, #8]
    a42c:	mov	x0, x19
    a430:	cmp	x2, x1
    a434:	cset	w1, eq  // eq = none
    a438:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a43c:	str	w0, [x19, #40]
    a440:	cmp	w0, #0x10
    a444:	b.ne	a6bc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2c4>  // b.any
    a448:	ldp	x1, x2, [x19, #8]
    a44c:	mov	x0, x19
    a450:	add	x21, sp, #0x120
    a454:	cmp	x2, x1
    a458:	cset	w1, eq  // eq = none
    a45c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a460:	str	w0, [x19, #40]
    a464:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a468:	cmp	w0, #0x6
    a46c:	ldr	d0, [x1]
    a470:	add	x1, x21, #0x10
    a474:	str	x1, [sp, #288]
    a478:	str	d0, [sp, #296]
    a47c:	b.eq	a6d0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2d8>  // b.none
    a480:	mov	x0, x19
    a484:	stp	x23, x24, [sp, #48]
    a488:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a48c:	mov	x2, #0x0                   	// #0
    a490:	mov	x23, x0
    a494:	mov	w3, #0x0                   	// #0
    a498:	mov	x0, x19
    a49c:	mov	x1, #0x0                   	// #0
    a4a0:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    a4a4:	mov	x2, x0
    a4a8:	cbz	x0, a654 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x25c>
    a4ac:	ldrb	w1, [x0, #8]
    a4b0:	sub	w1, w1, #0x1
    a4b4:	and	w1, w1, #0xff
    a4b8:	cmp	w1, #0x16
    a4bc:	b.ls	a728 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x330>  // b.plast
    a4c0:	strb	wzr, [sp, #144]
    a4c4:	add	x22, sp, #0x80
    a4c8:	add	x3, x22, #0x10
    a4cc:	add	x20, sp, #0xa0
    a4d0:	ldr	x1, [x0]
    a4d4:	mov	x8, x20
    a4d8:	stp	x25, x26, [sp, #64]
    a4dc:	add	x24, sp, #0xc0
    a4e0:	ldr	x1, [x1, #40]
    a4e4:	str	x27, [sp, #80]
    a4e8:	stp	x3, xzr, [sp, #128]
    a4ec:	blr	x1
    a4f0:	mov	x2, #0x0                   	// #0
    a4f4:	mov	x1, #0x0                   	// #0
    a4f8:	mov	x0, x20
    a4fc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a500:	mov	x4, #0x16                  	// #22
    a504:	add	x3, x3, #0x0
    a508:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a50c:	mov	x2, x0
    a510:	add	x1, x24, #0x10
    a514:	str	x1, [sp, #192]
    a518:	ldr	x1, [x0], #16
    a51c:	cmp	x1, x0
    a520:	b.eq	a898 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4a0>  // b.none
    a524:	ldr	x3, [x2, #16]
    a528:	str	x1, [sp, #192]
    a52c:	str	x3, [sp, #208]
    a530:	ldr	x1, [x2, #8]
    a534:	str	x1, [sp, #200]
    a538:	stp	x0, xzr, [x2]
    a53c:	add	x25, sp, #0xe0
    a540:	mov	x0, x24
    a544:	strb	wzr, [x2, #16]
    a548:	ldp	x1, x2, [sp, #128]
    a54c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a550:	mov	x1, x0
    a554:	add	x2, x25, #0x10
    a558:	str	x2, [sp, #224]
    a55c:	ldr	x2, [x1], #16
    a560:	cmp	x2, x1
    a564:	b.eq	a88c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x494>  // b.none
    a568:	str	x2, [sp, #224]
    a56c:	ldr	x2, [x0, #16]
    a570:	str	x2, [sp, #240]
    a574:	ldr	x2, [x0, #8]
    a578:	add	x26, sp, #0x100
    a57c:	str	x2, [sp, #232]
    a580:	mov	x8, x26
    a584:	stp	x1, xzr, [x0]
    a588:	add	x27, sp, #0x68
    a58c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a590:	strb	wzr, [x0, #16]
    a594:	add	x1, x1, #0x0
    a598:	mov	x0, x25
    a59c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a5a0:	mov	x1, x26
    a5a4:	mov	x0, x27
    a5a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a5ac:	str	x23, [sp, #96]
    a5b0:	add	x0, sp, #0x60
    a5b4:	mov	x1, #0x1                   	// #1
    a5b8:	mov	x2, x27
    a5bc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a5c0:	ldr	x0, [sp, #256]
    a5c4:	add	x1, x26, #0x10
    a5c8:	cmp	x0, x1
    a5cc:	b.eq	a5d4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x1dc>  // b.none
    a5d0:	bl	0 <_ZdlPv>
    a5d4:	ldr	x0, [sp, #224]
    a5d8:	add	x25, x25, #0x10
    a5dc:	cmp	x0, x25
    a5e0:	b.eq	a5e8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x1f0>  // b.none
    a5e4:	bl	0 <_ZdlPv>
    a5e8:	ldr	x0, [sp, #192]
    a5ec:	add	x24, x24, #0x10
    a5f0:	cmp	x0, x24
    a5f4:	b.eq	a5fc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x204>  // b.none
    a5f8:	bl	0 <_ZdlPv>
    a5fc:	ldr	x0, [sp, #160]
    a600:	add	x20, x20, #0x10
    a604:	cmp	x0, x20
    a608:	b.eq	a610 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x218>  // b.none
    a60c:	bl	0 <_ZdlPv>
    a610:	ldr	x0, [x19, #328]
    a614:	cbz	x0, a638 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x240>
    a618:	mov	x0, x26
    a61c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a620:	add	x1, x1, #0x0
    a624:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a628:	mov	x2, x26
    a62c:	mov	x0, #0x0                   	// #0
    a630:	mov	x1, #0x0                   	// #0
    a634:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a638:	ldr	x0, [sp, #128]
    a63c:	add	x22, x22, #0x10
    a640:	cmp	x0, x22
    a644:	b.eq	a844 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x44c>  // b.none
    a648:	bl	0 <_ZdlPv>
    a64c:	ldp	x25, x26, [sp, #64]
    a650:	ldr	x27, [sp, #80]
    a654:	mov	x20, #0x0                   	// #0
    a658:	ldp	x23, x24, [sp, #48]
    a65c:	add	x21, x21, #0x10
    a660:	ldr	x0, [sp, #288]
    a664:	cmp	x0, x21
    a668:	b.eq	a6a8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2b0>  // b.none
    a66c:	bl	0 <free>
    a670:	mov	x0, x20
    a674:	ldp	x19, x20, [sp, #16]
    a678:	ldp	x21, x22, [sp, #32]
    a67c:	ldp	x29, x30, [sp], #368
    a680:	ret
    a684:	add	x21, sp, #0x120
    a688:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a68c:	mov	x0, x21
    a690:	add	x1, x1, #0x0
    a694:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a698:	mov	x20, #0x0                   	// #0
    a69c:	mov	x1, x21
    a6a0:	mov	x0, x19
    a6a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a6a8:	mov	x0, x20
    a6ac:	ldp	x19, x20, [sp, #16]
    a6b0:	ldp	x21, x22, [sp, #32]
    a6b4:	ldp	x29, x30, [sp], #368
    a6b8:	ret
    a6bc:	add	x21, sp, #0x120
    a6c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a6c4:	mov	x0, x21
    a6c8:	add	x1, x1, #0x0
    a6cc:	b	a694 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x29c>
    a6d0:	ldp	x2, x1, [x19, #8]
    a6d4:	mov	x0, x19
    a6d8:	cmp	x2, x1
    a6dc:	cset	w1, eq  // eq = none
    a6e0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a6e4:	str	w0, [x19, #40]
    a6e8:	mov	x1, x21
    a6ec:	mov	x0, x19
    a6f0:	bl	6d98 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>
    a6f4:	ldr	w0, [x19, #40]
    a6f8:	cmp	w0, #0x7
    a6fc:	b.eq	a80c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x414>  // b.none
    a700:	add	x22, sp, #0x100
    a704:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a708:	mov	x0, x22
    a70c:	add	x1, x1, #0x0
    a710:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a714:	mov	x20, #0x0                   	// #0
    a718:	mov	x1, x22
    a71c:	mov	x0, x19
    a720:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a724:	b	a65c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x264>
    a728:	ldr	x0, [x0, #16]
    a72c:	cbz	x0, a8a4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4ac>
    a730:	ldr	w1, [x0, #8]
    a734:	cmp	w1, #0x5
    a738:	b.eq	a850 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x458>  // b.none
    a73c:	mov	x0, x19
    a740:	mov	x1, x21
    a744:	bl	6ad0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    a748:	tst	w0, #0xff
    a74c:	b.ne	a654 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x25c>  // b.any
    a750:	ldr	w3, [sp, #296]
    a754:	cbz	w3, a838 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x440>
    a758:	ldr	x19, [sp, #288]
    a75c:	add	x24, sp, #0xe0
    a760:	add	x23, sp, #0x100
    a764:	stp	x25, x26, [sp, #64]
    a768:	mov	x25, x19
    a76c:	add	x19, x19, w3, uxtw #2
    a770:	stp	xzr, xzr, [sp, #256]
    a774:	str	xzr, [sp, #272]
    a778:	ldr	w0, [x25]
    a77c:	bl	0 <_ZN4llvm7IntInit3getEl>
    a780:	str	x0, [sp, #224]
    a784:	ldp	x2, x1, [sp, #264]
    a788:	cmp	x2, x1
    a78c:	b.eq	a7ec <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3f4>  // b.none
    a790:	str	x0, [x2], #8
    a794:	add	x25, x25, #0x4
    a798:	cmp	x19, x25
    a79c:	str	x2, [sp, #264]
    a7a0:	b.ne	a778 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x380>  // b.any
    a7a4:	ldp	x0, x1, [sp, #256]
    a7a8:	adrp	x19, 0 <_ZN4llvm8IntRecTy6SharedE>
    a7ac:	ldr	x2, [x19]
    a7b0:	sub	x1, x1, x0
    a7b4:	asr	x1, x1, #3
    a7b8:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    a7bc:	ldr	x1, [sp, #256]
    a7c0:	str	x0, [x20]
    a7c4:	cbz	x1, a7d0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3d8>
    a7c8:	mov	x0, x1
    a7cc:	bl	0 <_ZdlPv>
    a7d0:	ldp	x25, x26, [sp, #64]
    a7d4:	ldr	x1, [x19]
    a7d8:	mov	x0, x22
    a7dc:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    a7e0:	mov	x20, x0
    a7e4:	ldp	x23, x24, [sp, #48]
    a7e8:	b	a65c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x264>
    a7ec:	mov	x1, x2
    a7f0:	add	x25, x25, #0x4
    a7f4:	mov	x2, x24
    a7f8:	mov	x0, x23
    a7fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a800:	cmp	x19, x25
    a804:	b.ne	a778 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x380>  // b.any
    a808:	b	a7a4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3ac>
    a80c:	ldp	x2, x1, [x19, #8]
    a810:	mov	x0, x19
    a814:	cmp	x2, x1
    a818:	cset	w1, eq  // eq = none
    a81c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a820:	str	w0, [x19, #40]
    a824:	ldr	w3, [sp, #296]
    a828:	cbz	w3, a83c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x444>
    a82c:	stp	x23, x24, [sp, #48]
    a830:	b	a758 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x360>
    a834:	cbnz	x1, a7d8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3e0>
    a838:	ldp	x23, x24, [sp, #48]
    a83c:	mov	x20, #0x0                   	// #0
    a840:	b	a65c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x264>
    a844:	ldp	x25, x26, [sp, #64]
    a848:	ldr	x27, [sp, #80]
    a84c:	b	a654 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x25c>
    a850:	ldr	w3, [sp, #296]
    a854:	ldr	x1, [x0, #24]
    a858:	str	x2, [x20]
    a85c:	cbz	w3, a834 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x43c>
    a860:	cbz	x1, a758 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x360>
    a864:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a868:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a86c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a870:	add	x3, x3, #0x0
    a874:	add	x1, x1, #0x0
    a878:	add	x0, x0, #0x0
    a87c:	mov	w2, #0x9f2                 	// #2546
    a880:	stp	x25, x26, [sp, #64]
    a884:	str	x27, [sp, #80]
    a888:	bl	0 <__assert_fail>
    a88c:	ldp	x2, x3, [x0, #16]
    a890:	stp	x2, x3, [sp, #240]
    a894:	b	a574 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x17c>
    a898:	ldp	x4, x5, [x2, #16]
    a89c:	stp	x4, x5, [sp, #208]
    a8a0:	b	a530 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x138>
    a8a4:	stp	x25, x26, [sp, #64]
    a8a8:	str	x27, [sp, #80]
    a8ac:	bl	78 <_ZN4llvm3isaINS_9ListRecTyEPNS_5RecTyEEEbRKT0_.isra.0.part.0>

000000000000a8b0 <_ZN4llvm8TGParser11ParseDefvarEv>:
    a8b0:	stp	x29, x30, [sp, #-112]!
    a8b4:	mov	x29, sp
    a8b8:	ldr	w1, [x0, #40]
    a8bc:	stp	x19, x20, [sp, #16]
    a8c0:	cmp	w1, #0x23
    a8c4:	b.ne	abb4 <_ZN4llvm8TGParser11ParseDefvarEv+0x304>  // b.any
    a8c8:	ldp	x1, x2, [x0, #8]
    a8cc:	mov	x19, x0
    a8d0:	cmp	x2, x1
    a8d4:	cset	w1, eq  // eq = none
    a8d8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a8dc:	str	w0, [x19, #40]
    a8e0:	cmp	w0, #0x48
    a8e4:	b.eq	a92c <_ZN4llvm8TGParser11ParseDefvarEv+0x7c>  // b.none
    a8e8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a8ec:	add	x1, x1, #0x0
    a8f0:	add	x20, sp, #0x58
    a8f4:	mov	x0, x20
    a8f8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    a8fc:	mov	x0, x19
    a900:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a904:	mov	x3, x0
    a908:	mov	x2, x20
    a90c:	add	x0, sp, #0x50
    a910:	mov	x1, #0x1                   	// #1
    a914:	str	x3, [sp, #80]
    a918:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a91c:	mov	w0, #0x1                   	// #1
    a920:	ldp	x19, x20, [sp, #16]
    a924:	ldp	x29, x30, [sp], #112
    a928:	ret
    a92c:	ldp	x0, x1, [x19, #48]
    a930:	stp	x23, x24, [sp, #48]
    a934:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a938:	mov	x24, x0
    a93c:	ldr	x23, [x19, #336]
    a940:	cbz	x23, aac8 <_ZN4llvm8TGParser11ParseDefvarEv+0x218>
    a944:	ldr	x20, [x23, #16]
    a948:	stp	x21, x22, [sp, #32]
    a94c:	add	x23, x23, #0x8
    a950:	stp	x25, x26, [sp, #64]
    a954:	ldp	x26, x22, [x0, #24]
    a958:	cbz	x20, a9d0 <_ZN4llvm8TGParser11ParseDefvarEv+0x120>
    a95c:	cbz	x22, aa2c <_ZN4llvm8TGParser11ParseDefvarEv+0x17c>
    a960:	mov	x25, x23
    a964:	nop
    a968:	ldp	x0, x21, [x20, #32]
    a96c:	cmp	x22, x21
    a970:	b.cc	aa48 <_ZN4llvm8TGParser11ParseDefvarEv+0x198>  // b.lo, b.ul, b.last
    a974:	cbz	x21, aa58 <_ZN4llvm8TGParser11ParseDefvarEv+0x1a8>
    a978:	mov	x2, x21
    a97c:	mov	x1, x26
    a980:	bl	0 <memcmp>
    a984:	cbnz	w0, aa68 <_ZN4llvm8TGParser11ParseDefvarEv+0x1b8>
    a988:	cmp	x22, x21
    a98c:	b.ne	aa58 <_ZN4llvm8TGParser11ParseDefvarEv+0x1a8>  // b.any
    a990:	mov	x25, x20
    a994:	ldr	x20, [x20, #16]
    a998:	cbnz	x20, a968 <_ZN4llvm8TGParser11ParseDefvarEv+0xb8>
    a99c:	cmp	x23, x25
    a9a0:	b.eq	a9d0 <_ZN4llvm8TGParser11ParseDefvarEv+0x120>  // b.none
    a9a4:	ldp	x1, x20, [x25, #32]
    a9a8:	cmp	x22, x20
    a9ac:	b.hi	aa74 <_ZN4llvm8TGParser11ParseDefvarEv+0x1c4>  // b.pmore
    a9b0:	mov	x0, x26
    a9b4:	mov	x2, x22
    a9b8:	bl	0 <memcmp>
    a9bc:	cbnz	w0, aa88 <_ZN4llvm8TGParser11ParseDefvarEv+0x1d8>
    a9c0:	cmp	x22, x20
    a9c4:	b.eq	aa8c <_ZN4llvm8TGParser11ParseDefvarEv+0x1dc>  // b.none
    a9c8:	cmp	x22, x20
    a9cc:	b.cs	aa8c <_ZN4llvm8TGParser11ParseDefvarEv+0x1dc>  // b.hs, b.nlast
    a9d0:	ldp	x21, x22, [sp, #32]
    a9d4:	ldp	x25, x26, [sp, #64]
    a9d8:	mov	x0, x19
    a9dc:	ldp	x2, x1, [x19, #8]
    a9e0:	cmp	x2, x1
    a9e4:	cset	w1, eq  // eq = none
    a9e8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a9ec:	str	w0, [x19, #40]
    a9f0:	cmp	w0, #0x10
    a9f4:	b.eq	aaec <_ZN4llvm8TGParser11ParseDefvarEv+0x23c>  // b.none
    a9f8:	add	x20, sp, #0x58
    a9fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aa00:	mov	x0, x20
    aa04:	add	x1, x1, #0x0
    aa08:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aa0c:	mov	x1, x20
    aa10:	mov	x0, x19
    aa14:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aa18:	and	w0, w0, #0xff
    aa1c:	ldp	x19, x20, [sp, #16]
    aa20:	ldp	x23, x24, [sp, #48]
    aa24:	ldp	x29, x30, [sp], #112
    aa28:	ret
    aa2c:	mov	x0, x20
    aa30:	ldr	x20, [x20, #16]
    aa34:	cbnz	x20, aa2c <_ZN4llvm8TGParser11ParseDefvarEv+0x17c>
    aa38:	cmp	x23, x0
    aa3c:	b.eq	a9d0 <_ZN4llvm8TGParser11ParseDefvarEv+0x120>  // b.none
    aa40:	ldr	x20, [x0, #40]
    aa44:	b	a9c0 <_ZN4llvm8TGParser11ParseDefvarEv+0x110>
    aa48:	mov	x2, x22
    aa4c:	mov	x1, x26
    aa50:	bl	0 <memcmp>
    aa54:	cbnz	w0, aa68 <_ZN4llvm8TGParser11ParseDefvarEv+0x1b8>
    aa58:	cmp	x22, x21
    aa5c:	b.ls	a990 <_ZN4llvm8TGParser11ParseDefvarEv+0xe0>  // b.plast
    aa60:	ldr	x20, [x20, #24]
    aa64:	b	a998 <_ZN4llvm8TGParser11ParseDefvarEv+0xe8>
    aa68:	tbz	w0, #31, a990 <_ZN4llvm8TGParser11ParseDefvarEv+0xe0>
    aa6c:	ldr	x20, [x20, #24]
    aa70:	b	a998 <_ZN4llvm8TGParser11ParseDefvarEv+0xe8>
    aa74:	cbz	x20, aa8c <_ZN4llvm8TGParser11ParseDefvarEv+0x1dc>
    aa78:	mov	x0, x26
    aa7c:	mov	x2, x20
    aa80:	bl	0 <memcmp>
    aa84:	cbz	w0, a9c8 <_ZN4llvm8TGParser11ParseDefvarEv+0x118>
    aa88:	tbnz	w0, #31, a9d0 <_ZN4llvm8TGParser11ParseDefvarEv+0x120>
    aa8c:	add	x20, sp, #0x58
    aa90:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aa94:	mov	x0, x20
    aa98:	add	x1, x1, #0x0
    aa9c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aaa0:	mov	x1, x20
    aaa4:	mov	x0, x19
    aaa8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aaac:	and	w0, w0, #0xff
    aab0:	ldp	x19, x20, [sp, #16]
    aab4:	ldp	x21, x22, [sp, #32]
    aab8:	ldp	x23, x24, [sp, #48]
    aabc:	ldp	x25, x26, [sp, #64]
    aac0:	ldp	x29, x30, [sp], #112
    aac4:	ret
    aac8:	ldp	x1, x2, [x24, #24]
    aacc:	ldr	x0, [x19, #344]
    aad0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aad4:	cbz	x0, a9d8 <_ZN4llvm8TGParser11ParseDefvarEv+0x128>
    aad8:	add	x20, sp, #0x58
    aadc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aae0:	mov	x0, x20
    aae4:	add	x1, x1, #0x0
    aae8:	b	aa08 <_ZN4llvm8TGParser11ParseDefvarEv+0x158>
    aaec:	ldp	x2, x1, [x19, #8]
    aaf0:	mov	x0, x19
    aaf4:	cmp	x2, x1
    aaf8:	cset	w1, eq  // eq = none
    aafc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ab00:	str	w0, [x19, #40]
    ab04:	mov	w3, #0x0                   	// #0
    ab08:	mov	x0, x19
    ab0c:	mov	x2, #0x0                   	// #0
    ab10:	mov	x1, #0x0                   	// #0
    ab14:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    ab18:	mov	x20, x0
    ab1c:	cbz	x0, ab40 <_ZN4llvm8TGParser11ParseDefvarEv+0x290>
    ab20:	ldr	w0, [x19, #40]
    ab24:	cmp	w0, #0xd
    ab28:	b.eq	ab4c <_ZN4llvm8TGParser11ParseDefvarEv+0x29c>  // b.none
    ab2c:	add	x20, sp, #0x58
    ab30:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ab34:	mov	x0, x20
    ab38:	add	x1, x1, #0x0
    ab3c:	b	aa08 <_ZN4llvm8TGParser11ParseDefvarEv+0x158>
    ab40:	mov	w0, #0x1                   	// #1
    ab44:	ldp	x23, x24, [sp, #48]
    ab48:	b	a920 <_ZN4llvm8TGParser11ParseDefvarEv+0x70>
    ab4c:	ldp	x2, x1, [x19, #8]
    ab50:	mov	x0, x19
    ab54:	cmp	x2, x1
    ab58:	cset	w1, eq  // eq = none
    ab5c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ab60:	str	w0, [x19, #40]
    ab64:	ldr	x1, [x19, #336]
    ab68:	cbz	x1, ab98 <_ZN4llvm8TGParser11ParseDefvarEv+0x2e8>
    ab6c:	ldp	x3, x2, [x24, #24]
    ab70:	mov	x0, x1
    ab74:	add	x1, sp, #0x58
    ab78:	stp	x3, x2, [sp, #88]
    ab7c:	str	x20, [sp, #104]
    ab80:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ab84:	tst	w1, #0xff
    ab88:	mov	w0, #0x0                   	// #0
    ab8c:	b.eq	abe0 <_ZN4llvm8TGParser11ParseDefvarEv+0x330>  // b.none
    ab90:	ldp	x23, x24, [sp, #48]
    ab94:	b	a920 <_ZN4llvm8TGParser11ParseDefvarEv+0x70>
    ab98:	ldp	x1, x2, [x24, #24]
    ab9c:	mov	x3, x20
    aba0:	ldr	x0, [x19, #344]
    aba4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aba8:	mov	w0, #0x0                   	// #0
    abac:	ldp	x23, x24, [sp, #48]
    abb0:	b	a920 <_ZN4llvm8TGParser11ParseDefvarEv+0x70>
    abb4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    abb8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    abbc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    abc0:	add	x3, x3, #0x0
    abc4:	add	x1, x1, #0x0
    abc8:	add	x0, x0, #0x0
    abcc:	mov	w2, #0xb09                 	// #2825
    abd0:	stp	x21, x22, [sp, #32]
    abd4:	stp	x23, x24, [sp, #48]
    abd8:	stp	x25, x26, [sp, #64]
    abdc:	bl	0 <__assert_fail>
    abe0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    abe4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    abe8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    abec:	add	x3, x3, #0x0
    abf0:	add	x1, x1, #0x0
    abf4:	add	x0, x0, #0x0
    abf8:	mov	w2, #0x75                  	// #117
    abfc:	stp	x21, x22, [sp, #32]
    ac00:	stp	x25, x26, [sp, #64]
    ac04:	bl	0 <__assert_fail>

000000000000ac08 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE>:
    ac08:	stp	x29, x30, [sp, #-240]!
    ac0c:	mov	x29, sp
    ac10:	stp	x19, x20, [sp, #16]
    ac14:	mov	x19, x0
    ac18:	ldr	w0, [x0, #40]
    ac1c:	stp	x21, x22, [sp, #32]
    ac20:	mov	x20, x1
    ac24:	cmp	w0, #0x48
    ac28:	stp	x23, x24, [sp, #48]
    ac2c:	add	x24, sp, #0xa0
    ac30:	b.ne	aec0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2b8>  // b.any
    ac34:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ac38:	add	x23, x24, #0x10
    ac3c:	str	d8, [sp, #96]
    ac40:	ldr	d8, [x0]
    ac44:	stp	x25, x26, [sp, #64]
    ac48:	stp	x27, x28, [sp, #80]
    ac4c:	nop
    ac50:	ldp	x0, x1, [x19, #48]
    ac54:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    ac58:	mov	x22, x0
    ac5c:	mov	x0, x19
    ac60:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ac64:	ldp	x1, x2, [x19, #8]
    ac68:	str	x0, [sp, #112]
    ac6c:	mov	x0, x19
    ac70:	cmp	x2, x1
    ac74:	cset	w1, eq  // eq = none
    ac78:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ac7c:	str	w0, [x19, #40]
    ac80:	mov	x1, x24
    ac84:	mov	x0, x19
    ac88:	str	x23, [sp, #160]
    ac8c:	str	d8, [sp, #168]
    ac90:	bl	6e18 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE>
    ac94:	tst	w0, #0xff
    ac98:	b.ne	b048 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x440>  // b.any
    ac9c:	ldr	w2, [sp, #168]
    aca0:	ldr	x1, [sp, #160]
    aca4:	lsl	x2, x2, #2
    aca8:	add	x3, x1, x2
    acac:	cmp	x1, x3
    acb0:	b.eq	ad90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x188>  // b.none
    acb4:	sub	x3, x3, #0x4
    acb8:	cmp	x1, x3
    acbc:	b.cs	ad90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x188>  // b.hs, b.nlast
    acc0:	sub	x4, x2, #0x5
    acc4:	sub	x7, x2, #0x4
    acc8:	cmp	x2, #0x0
    accc:	mov	x0, x1
    acd0:	lsr	x5, x4, #3
    acd4:	add	x6, x5, #0x1
    acd8:	sub	x5, x7, x5, lsl #2
    acdc:	lsl	x7, x6, #2
    ace0:	ccmp	x5, x7, #0x0, gt
    ace4:	mov	x5, #0x27                  	// #39
    ace8:	ccmp	x4, x5, #0x0, ge  // ge = tcont
    acec:	b.ls	af38 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x330>  // b.plast
    acf0:	lsr	x4, x6, #2
    acf4:	sub	x2, x2, #0x10
    acf8:	add	x2, x1, x2
    acfc:	add	x4, x1, x4, lsl #4
    ad00:	adrp	x5, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ad04:	ldr	q1, [x2]
    ad08:	ldr	q2, [x5]
    ad0c:	ldr	q0, [x0]
    ad10:	tbl	v1.16b, {v1.16b}, v2.16b
    ad14:	tbl	v0.16b, {v0.16b}, v2.16b
    ad18:	str	q1, [x0], #16
    ad1c:	cmp	x4, x0
    ad20:	str	q0, [x2], #-16
    ad24:	b.ne	ad00 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xf8>  // b.any
    ad28:	and	x0, x6, #0xfffffffffffffffc
    ad2c:	cmp	x6, x0
    ad30:	neg	x7, x0
    ad34:	add	x4, x1, x0, lsl #2
    ad38:	sub	x2, x3, x0, lsl #2
    ad3c:	b.eq	ad90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x188>  // b.none
    ad40:	ldr	w9, [x3, x7, lsl #2]
    ad44:	sub	x6, x2, #0x4
    ad48:	ldr	w8, [x1, x0, lsl #2]
    ad4c:	add	x5, x4, #0x4
    ad50:	str	w9, [x1, x0, lsl #2]
    ad54:	cmp	x6, x5
    ad58:	str	w8, [x3, x7, lsl #2]
    ad5c:	b.ls	ad90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x188>  // b.plast
    ad60:	ldur	w5, [x2, #-4]
    ad64:	add	x1, x4, #0x8
    ad68:	ldr	w3, [x4, #4]
    ad6c:	sub	x0, x2, #0x8
    ad70:	str	w5, [x4, #4]
    ad74:	cmp	x1, x0
    ad78:	stur	w3, [x2, #-4]
    ad7c:	b.cs	ad90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x188>  // b.hs, b.nlast
    ad80:	ldur	w1, [x2, #-8]
    ad84:	ldr	w0, [x4, #8]
    ad88:	str	w1, [x4, #8]
    ad8c:	stur	w0, [x2, #-8]
    ad90:	ldr	w0, [x19, #40]
    ad94:	cmp	w0, #0x10
    ad98:	b.ne	af6c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x364>  // b.any
    ad9c:	ldp	x2, x1, [x19, #8]
    ada0:	mov	x0, x19
    ada4:	cmp	x2, x1
    ada8:	cset	w1, eq  // eq = none
    adac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    adb0:	str	w0, [x19, #40]
    adb4:	mov	w3, #0x0                   	// #0
    adb8:	mov	x0, x19
    adbc:	mov	x2, #0x0                   	// #0
    adc0:	mov	x1, #0x0                   	// #0
    adc4:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    adc8:	mov	x25, x0
    adcc:	cbz	x0, b080 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x478>
    add0:	ldp	w27, w0, [x20, #8]
    add4:	cmp	w27, w0
    add8:	b.cs	b014 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x40c>  // b.hs, b.nlast
    addc:	mov	w0, #0x30                  	// #48
    ade0:	ldr	w28, [sp, #168]
    ade4:	ldr	x2, [x20]
    ade8:	umull	x0, w27, w0
    adec:	ldr	x1, [sp, #160]
    adf0:	add	x26, x2, x0
    adf4:	add	x21, x26, #0x8
    adf8:	str	x1, [sp, #120]
    adfc:	str	x22, [x2, x0]
    ae00:	mov	w5, w27
    ae04:	str	xzr, [x26, #8]
    ae08:	ubfiz	x28, x28, #2, #32
    ae0c:	stp	xzr, xzr, [x21, #8]
    ae10:	mov	x22, #0x0                   	// #0
    ae14:	cbz	x28, ae48 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x240>
    ae18:	mov	x0, x28
    ae1c:	bl	0 <_Znwm>
    ae20:	ldr	w27, [x20, #8]
    ae24:	add	x22, x0, x28
    ae28:	ldr	x1, [sp, #120]
    ae2c:	mov	w5, w27
    ae30:	str	x0, [x26, #8]
    ae34:	mov	x2, x28
    ae38:	str	x22, [x21, #16]
    ae3c:	str	x5, [sp, #120]
    ae40:	bl	0 <memcpy>
    ae44:	ldr	x5, [sp, #120]
    ae48:	add	x5, x5, #0x1
    ae4c:	ldr	w0, [x20, #12]
    ae50:	str	x22, [x21, #8]
    ae54:	ldr	x1, [sp, #112]
    ae58:	stp	x25, x1, [x26, #32]
    ae5c:	cmp	x5, x0
    ae60:	b.hi	b0b8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x4b0>  // b.pmore
    ae64:	add	w27, w27, #0x1
    ae68:	str	w27, [x20, #8]
    ae6c:	cbz	w27, b0d8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x4d0>
    ae70:	ldr	w0, [x19, #40]
    ae74:	cmp	w0, #0xe
    ae78:	b.ne	afd4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3cc>  // b.any
    ae7c:	ldp	x2, x1, [x19, #8]
    ae80:	mov	x0, x19
    ae84:	cmp	x2, x1
    ae88:	cset	w1, eq  // eq = none
    ae8c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ae90:	str	w0, [x19, #40]
    ae94:	ldr	x2, [sp, #160]
    ae98:	cmp	x2, x23
    ae9c:	b.eq	b008 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x400>  // b.none
    aea0:	mov	x0, x2
    aea4:	bl	0 <free>
    aea8:	ldr	w0, [x19, #40]
    aeac:	cmp	w0, #0x48
    aeb0:	b.eq	ac50 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x48>  // b.none
    aeb4:	ldp	x25, x26, [sp, #64]
    aeb8:	ldp	x27, x28, [sp, #80]
    aebc:	ldr	d8, [sp, #96]
    aec0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aec4:	add	x1, x1, #0x0
    aec8:	mov	x0, x24
    aecc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    aed0:	mov	x0, x19
    aed4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    aed8:	mov	x3, x0
    aedc:	mov	x2, x24
    aee0:	add	x0, sp, #0x88
    aee4:	mov	x1, #0x1                   	// #1
    aee8:	str	x3, [sp, #136]
    aeec:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    aef0:	ldr	w19, [x20, #8]
    aef4:	ldr	x21, [x20]
    aef8:	mov	w0, #0x30                  	// #48
    aefc:	umaddl	x19, w19, w0, x21
    af00:	cmp	x21, x19
    af04:	b.eq	af20 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x318>  // b.none
    af08:	ldur	x0, [x19, #-40]
    af0c:	sub	x19, x19, #0x30
    af10:	cbz	x0, af00 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2f8>
    af14:	bl	0 <_ZdlPv>
    af18:	cmp	x21, x19
    af1c:	b.ne	af08 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x300>  // b.any
    af20:	str	wzr, [x20, #8]
    af24:	ldp	x19, x20, [sp, #16]
    af28:	ldp	x21, x22, [sp, #32]
    af2c:	ldp	x23, x24, [sp, #48]
    af30:	ldp	x29, x30, [sp], #240
    af34:	ret
    af38:	ldr	w2, [x3]
    af3c:	ldr	w0, [x1]
    af40:	str	w2, [x1], #4
    af44:	str	w0, [x3], #-4
    af48:	cmp	x3, x1
    af4c:	b.ls	ad90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x188>  // b.plast
    af50:	ldr	w2, [x3]
    af54:	ldr	w0, [x1]
    af58:	str	w2, [x1], #4
    af5c:	str	w0, [x3], #-4
    af60:	cmp	x3, x1
    af64:	b.hi	af38 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x330>  // b.pmore
    af68:	b	ad90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x188>
    af6c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    af70:	add	x1, x1, #0x0
    af74:	add	x21, sp, #0x88
    af78:	mov	x0, x21
    af7c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    af80:	mov	x0, x19
    af84:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    af88:	mov	x3, x0
    af8c:	mov	x2, x21
    af90:	add	x0, sp, #0x80
    af94:	mov	x1, #0x1                   	// #1
    af98:	str	x3, [sp, #128]
    af9c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    afa0:	ldr	w19, [x20, #8]
    afa4:	ldr	x21, [x20]
    afa8:	mov	w0, #0x30                  	// #48
    afac:	umaddl	x19, w19, w0, x21
    afb0:	cmp	x21, x19
    afb4:	b.eq	afd0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3c8>  // b.none
    afb8:	ldur	x0, [x19, #-40]
    afbc:	sub	x19, x19, #0x30
    afc0:	cbz	x0, afb0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3a8>
    afc4:	bl	0 <_ZdlPv>
    afc8:	cmp	x21, x19
    afcc:	b.ne	afb8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3b0>  // b.any
    afd0:	str	wzr, [x20, #8]
    afd4:	ldr	x0, [sp, #160]
    afd8:	add	x24, x24, #0x10
    afdc:	cmp	x0, x24
    afe0:	b.eq	b028 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x420>  // b.none
    afe4:	bl	0 <free>
    afe8:	ldp	x19, x20, [sp, #16]
    afec:	ldp	x21, x22, [sp, #32]
    aff0:	ldp	x23, x24, [sp, #48]
    aff4:	ldp	x25, x26, [sp, #64]
    aff8:	ldp	x27, x28, [sp, #80]
    affc:	ldr	d8, [sp, #96]
    b000:	ldp	x29, x30, [sp], #240
    b004:	ret
    b008:	cmp	w0, #0x48
    b00c:	b.eq	ac50 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x48>  // b.none
    b010:	b	aeb4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2ac>
    b014:	mov	x0, x20
    b018:	mov	x1, #0x0                   	// #0
    b01c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b020:	ldr	w27, [x20, #8]
    b024:	b	addc <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1d4>
    b028:	ldp	x19, x20, [sp, #16]
    b02c:	ldp	x21, x22, [sp, #32]
    b030:	ldp	x23, x24, [sp, #48]
    b034:	ldp	x25, x26, [sp, #64]
    b038:	ldp	x27, x28, [sp, #80]
    b03c:	ldr	d8, [sp, #96]
    b040:	ldp	x29, x30, [sp], #240
    b044:	ret
    b048:	ldr	w19, [x20, #8]
    b04c:	mov	w0, #0x30                  	// #48
    b050:	ldr	x21, [x20]
    b054:	umaddl	x19, w19, w0, x21
    b058:	cmp	x21, x19
    b05c:	b.eq	afd0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3c8>  // b.none
    b060:	ldur	x0, [x19, #-40]
    b064:	sub	x19, x19, #0x30
    b068:	cbz	x0, b058 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x450>
    b06c:	bl	0 <_ZdlPv>
    b070:	cmp	x21, x19
    b074:	b.ne	b060 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x458>  // b.any
    b078:	str	wzr, [x20, #8]
    b07c:	b	afd4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3cc>
    b080:	ldr	w19, [x20, #8]
    b084:	mov	w0, #0x30                  	// #48
    b088:	ldr	x21, [x20]
    b08c:	umaddl	x19, w19, w0, x21
    b090:	cmp	x21, x19
    b094:	b.eq	afd0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3c8>  // b.none
    b098:	ldur	x0, [x19, #-40]
    b09c:	sub	x19, x19, #0x30
    b0a0:	cbz	x0, b090 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x488>
    b0a4:	bl	0 <_ZdlPv>
    b0a8:	cmp	x21, x19
    b0ac:	b.ne	b098 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x490>  // b.any
    b0b0:	str	wzr, [x20, #8]
    b0b4:	b	afd4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x3cc>
    b0b8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b0bc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b0c0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b0c4:	add	x3, x3, #0x0
    b0c8:	add	x1, x1, #0x0
    b0cc:	add	x0, x0, #0x0
    b0d0:	mov	w2, #0x43                  	// #67
    b0d4:	bl	0 <__assert_fail>
    b0d8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b0dc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b0e0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b0e4:	add	x3, x3, #0x0
    b0e8:	add	x1, x1, #0x0
    b0ec:	add	x0, x0, #0x0
    b0f0:	mov	w2, #0xa7                  	// #167
    b0f4:	bl	0 <__assert_fail>

000000000000b0f8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0>:
    b0f8:	stp	x29, x30, [sp, #-240]!
    b0fc:	mov	x29, sp
    b100:	stp	x19, x20, [sp, #16]
    b104:	mov	x20, x1
    b108:	mov	x19, x0
    b10c:	ldp	x2, x1, [x0, #8]
    b110:	stp	x21, x22, [sp, #32]
    b114:	cmp	x2, x1
    b118:	cset	w1, eq  // eq = none
    b11c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b120:	str	w0, [x19, #40]
    b124:	cmp	w0, #0x48
    b128:	b.eq	b178 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x80>  // b.none
    b12c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b130:	add	x1, x1, #0x0
    b134:	add	x20, sp, #0xa0
    b138:	mov	w22, #0x1                   	// #1
    b13c:	mov	x0, x20
    b140:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b144:	mov	x0, x19
    b148:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b14c:	mov	x3, x0
    b150:	mov	x2, x20
    b154:	add	x0, sp, #0x88
    b158:	mov	x1, #0x1                   	// #1
    b15c:	str	x3, [sp, #136]
    b160:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b164:	mov	w0, w22
    b168:	ldp	x19, x20, [sp, #16]
    b16c:	ldp	x21, x22, [sp, #32]
    b170:	ldp	x29, x30, [sp], #240
    b174:	ret
    b178:	mov	x0, x19
    b17c:	stp	x23, x24, [sp, #48]
    b180:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b184:	ldr	w1, [x19, #40]
    b188:	mov	x22, x0
    b18c:	sub	w1, w1, #0x48
    b190:	cmp	w1, #0x3
    b194:	b.hi	b4d4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x3dc>  // b.pmore
    b198:	ldp	x0, x1, [x19, #48]
    b19c:	add	x21, sp, #0xa0
    b1a0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    b1a4:	mov	x23, x0
    b1a8:	ldp	x2, x1, [x19, #8]
    b1ac:	mov	x0, x19
    b1b0:	cmp	x2, x1
    b1b4:	cset	w1, eq  // eq = none
    b1b8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b1bc:	str	w0, [x19, #40]
    b1c0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b1c4:	add	x2, x21, #0x10
    b1c8:	mov	x0, x19
    b1cc:	str	x2, [sp, #160]
    b1d0:	ldr	d0, [x1]
    b1d4:	mov	x1, x21
    b1d8:	str	d0, [sp, #168]
    b1dc:	bl	6f30 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE>
    b1e0:	tst	w0, #0xff
    b1e4:	b.ne	b408 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x310>  // b.any
    b1e8:	ldr	w3, [sp, #168]
    b1ec:	ldr	x1, [sp, #160]
    b1f0:	lsl	x3, x3, #2
    b1f4:	add	x0, x1, x3
    b1f8:	cmp	x1, x0
    b1fc:	b.eq	b2ec <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x1f4>  // b.none
    b200:	sub	x5, x0, #0x4
    b204:	cmp	x1, x5
    b208:	b.cs	b2ec <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x1f4>  // b.hs, b.nlast
    b20c:	sub	x0, x0, x1
    b210:	sub	x7, x3, #0x4
    b214:	sub	x0, x0, #0x5
    b218:	cmp	x3, #0x0
    b21c:	mov	x8, #0x27                  	// #39
    b220:	mov	x4, x1
    b224:	lsr	x2, x0, #3
    b228:	add	x6, x2, #0x1
    b22c:	sub	x2, x7, x2, lsl #2
    b230:	lsl	x7, x6, #2
    b234:	ccmp	x7, x2, #0x4, gt
    b238:	ccmp	x0, x8, #0x0, le
    b23c:	b.ls	b348 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x250>  // b.plast
    b240:	neg	x0, x6, lsr #2
    b244:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b248:	sub	x3, x3, #0x10
    b24c:	add	x3, x1, x3
    b250:	lsl	x0, x0, #4
    b254:	ldr	q2, [x2]
    b258:	mov	x2, #0x0                   	// #0
    b25c:	nop
    b260:	ldr	q1, [x3, x2]
    b264:	ldr	q0, [x4]
    b268:	tbl	v1.16b, {v1.16b}, v2.16b
    b26c:	tbl	v0.16b, {v0.16b}, v2.16b
    b270:	str	q1, [x4], #16
    b274:	str	q0, [x3, x2]
    b278:	sub	x2, x2, #0x10
    b27c:	cmp	x2, x0
    b280:	b.ne	b260 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x168>  // b.any
    b284:	and	x0, x6, #0xfffffffffffffffc
    b288:	cmp	x6, x0
    b28c:	neg	x4, x0, lsl #2
    b290:	add	x3, x1, x0, lsl #2
    b294:	add	x2, x5, x4
    b298:	b.eq	b2ec <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x1f4>  // b.none
    b29c:	ldr	w9, [x5, x4]
    b2a0:	sub	x7, x2, #0x4
    b2a4:	ldr	w8, [x1, x0, lsl #2]
    b2a8:	add	x6, x3, #0x4
    b2ac:	str	w9, [x1, x0, lsl #2]
    b2b0:	cmp	x7, x6
    b2b4:	str	w8, [x5, x4]
    b2b8:	b.ls	b2ec <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x1f4>  // b.plast
    b2bc:	ldur	w5, [x2, #-4]
    b2c0:	add	x1, x3, #0x8
    b2c4:	ldr	w4, [x3, #4]
    b2c8:	sub	x0, x2, #0x8
    b2cc:	str	w5, [x3, #4]
    b2d0:	cmp	x1, x0
    b2d4:	stur	w4, [x2, #-4]
    b2d8:	b.cs	b2ec <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x1f4>  // b.hs, b.nlast
    b2dc:	ldur	w1, [x2, #-8]
    b2e0:	ldr	w0, [x3, #8]
    b2e4:	str	w1, [x3, #8]
    b2e8:	stur	w0, [x2, #-8]
    b2ec:	ldr	w0, [x19, #40]
    b2f0:	cmp	w0, #0x10
    b2f4:	b.eq	b37c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x284>  // b.none
    b2f8:	add	x20, sp, #0x88
    b2fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b300:	mov	x0, x20
    b304:	add	x1, x1, #0x0
    b308:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b30c:	mov	x1, x20
    b310:	mov	x0, x19
    b314:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b318:	and	w22, w0, #0xff
    b31c:	ldr	x0, [sp, #160]
    b320:	add	x21, x21, #0x10
    b324:	cmp	x0, x21
    b328:	b.eq	b41c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x324>  // b.none
    b32c:	bl	0 <free>
    b330:	mov	w0, w22
    b334:	ldp	x19, x20, [sp, #16]
    b338:	ldp	x21, x22, [sp, #32]
    b33c:	ldp	x23, x24, [sp, #48]
    b340:	ldp	x29, x30, [sp], #240
    b344:	ret
    b348:	ldr	w2, [x5]
    b34c:	ldr	w0, [x1]
    b350:	str	w2, [x1], #4
    b354:	str	w0, [x5], #-4
    b358:	cmp	x1, x5
    b35c:	b.cs	b2ec <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x1f4>  // b.hs, b.nlast
    b360:	ldr	w2, [x5]
    b364:	ldr	w0, [x1]
    b368:	str	w2, [x1], #4
    b36c:	str	w0, [x5], #-4
    b370:	cmp	x1, x5
    b374:	b.cc	b348 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x250>  // b.lo, b.ul, b.last
    b378:	b	b2ec <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x1f4>
    b37c:	ldp	x2, x1, [x19, #8]
    b380:	mov	x0, x19
    b384:	cmp	x2, x1
    b388:	cset	w1, eq  // eq = none
    b38c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b390:	ldr	w2, [x20, #80]
    b394:	mov	w3, #0x18                  	// #24
    b398:	ldr	x1, [x20, #72]
    b39c:	str	w0, [x19, #40]
    b3a0:	umaddl	x2, w2, w3, x1
    b3a4:	cmp	x1, x2
    b3a8:	b.ne	b3bc <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x2c4>  // b.any
    b3ac:	b	b434 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x33c>
    b3b0:	add	x1, x1, #0x18
    b3b4:	cmp	x2, x1
    b3b8:	b.eq	b434 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x33c>  // b.none
    b3bc:	ldr	x0, [x1]
    b3c0:	cmp	x23, x0
    b3c4:	b.ne	b3b0 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x2b8>  // b.any
    b3c8:	ldr	x2, [x1, #8]
    b3cc:	mov	x0, x19
    b3d0:	mov	x1, x20
    b3d4:	mov	w3, #0x0                   	// #0
    b3d8:	and	x2, x2, #0xfffffffffffffff8
    b3dc:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    b3e0:	mov	x24, x0
    b3e4:	cbz	x0, b408 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x310>
    b3e8:	ldr	w0, [x19, #40]
    b3ec:	cmp	w0, #0xd
    b3f0:	b.eq	b490 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x398>  // b.none
    b3f4:	add	x20, sp, #0x88
    b3f8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b3fc:	mov	x0, x20
    b400:	add	x1, x1, #0x0
    b404:	b	b308 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x210>
    b408:	ldr	x0, [sp, #160]
    b40c:	add	x21, x21, #0x10
    b410:	mov	w22, #0x1                   	// #1
    b414:	cmp	x0, x21
    b418:	b.ne	b32c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x234>  // b.any
    b41c:	mov	w0, w22
    b420:	ldp	x19, x20, [sp, #16]
    b424:	ldp	x21, x22, [sp, #32]
    b428:	ldp	x23, x24, [sp, #48]
    b42c:	ldp	x29, x30, [sp], #240
    b430:	ret
    b434:	ldp	x4, x3, [x23, #24]
    b438:	add	x2, sp, #0x48
    b43c:	add	x22, sp, #0x70
    b440:	add	x23, sp, #0x58
    b444:	mov	x0, x22
    b448:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b44c:	add	x1, x1, #0x0
    b450:	stp	x4, x3, [sp, #72]
    b454:	add	x20, sp, #0x88
    b458:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b45c:	mov	x0, x23
    b460:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b464:	add	x1, x1, #0x0
    b468:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b46c:	mov	x8, x20
    b470:	mov	x0, x22
    b474:	mov	x1, x23
    b478:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b47c:	mov	x1, x20
    b480:	mov	x0, x19
    b484:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b488:	and	w22, w0, #0xff
    b48c:	b	b31c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x224>
    b490:	ldp	x2, x1, [x19, #8]
    b494:	mov	x0, x19
    b498:	cmp	x2, x1
    b49c:	cset	w1, eq  // eq = none
    b4a0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b4a4:	str	w0, [x19, #40]
    b4a8:	ldr	w5, [sp, #168]
    b4ac:	mov	x2, x22
    b4b0:	ldr	x4, [sp, #160]
    b4b4:	mov	x6, x24
    b4b8:	mov	x3, x23
    b4bc:	mov	x1, x20
    b4c0:	mov	x0, x19
    b4c4:	mov	w7, #0x0                   	// #0
    b4c8:	bl	b70 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    b4cc:	and	w22, w0, #0xff
    b4d0:	b	b31c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0+0x224>
    b4d4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b4d8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b4dc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b4e0:	add	x3, x3, #0x0
    b4e4:	add	x1, x1, #0x0
    b4e8:	add	x0, x0, #0x0
    b4ec:	mov	w2, #0x6f                  	// #111
    b4f0:	bl	0 <__assert_fail>
    b4f4:	nop

000000000000b4f8 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>:
    b4f8:	stp	x29, x30, [sp, #-96]!
    b4fc:	mov	x29, sp
    b500:	ldr	w2, [x0, #40]
    b504:	stp	x19, x20, [sp, #16]
    b508:	cmp	w2, #0x6
    b50c:	b.eq	b51c <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0x24>  // b.none
    b510:	sub	w2, w2, #0xc
    b514:	cmp	w2, #0x1
    b518:	b.hi	b534 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0x3c>  // b.pmore
    b51c:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    b520:	mov	x19, x0
    b524:	mov	x0, x19
    b528:	ldp	x19, x20, [sp, #16]
    b52c:	ldp	x29, x30, [sp], #96
    b530:	ret
    b534:	mov	x20, x1
    b538:	cbz	x1, b5d8 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xe0>
    b53c:	str	x21, [sp, #32]
    b540:	adrp	x21, 0 <_ZN4llvm11StringRecTy6SharedE>
    b544:	mov	w3, #0x1                   	// #1
    b548:	ldr	x21, [x21]
    b54c:	mov	x2, x21
    b550:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    b554:	mov	x19, x0
    b558:	cbz	x0, b5c4 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xcc>
    b55c:	mov	x1, #0x4                   	// #4
    b560:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b564:	add	x0, x0, #0x0
    b568:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    b56c:	mov	x1, x20
    b570:	mov	x2, x0
    b574:	mov	x4, #0x2                   	// #2
    b578:	mov	x0, x20
    b57c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b580:	add	x3, x3, #0x0
    b584:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    b588:	mov	x20, x0
    b58c:	ldr	x2, [x19]
    b590:	adrp	x1, 0 <_ZTVN4llvm20HasReferenceResolverE>
    b594:	strb	wzr, [sp, #72]
    b598:	mov	x0, x19
    b59c:	ldr	x1, [x1]
    b5a0:	str	x20, [sp, #80]
    b5a4:	ldr	x2, [x2, #96]
    b5a8:	add	x1, x1, #0x10
    b5ac:	stp	x1, xzr, [sp, #56]
    b5b0:	add	x1, sp, #0x38
    b5b4:	strb	wzr, [sp, #88]
    b5b8:	blr	x2
    b5bc:	ldrb	w0, [sp, #88]
    b5c0:	cbz	w0, b5fc <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0x104>
    b5c4:	mov	x0, x19
    b5c8:	ldp	x19, x20, [sp, #16]
    b5cc:	ldr	x21, [sp, #32]
    b5d0:	ldp	x29, x30, [sp], #96
    b5d4:	ret
    b5d8:	adrp	x2, 0 <_ZN4llvm11StringRecTy6SharedE>
    b5dc:	mov	w3, #0x1                   	// #1
    b5e0:	ldr	x2, [x2]
    b5e4:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    b5e8:	mov	x19, x0
    b5ec:	mov	x0, x19
    b5f0:	ldp	x19, x20, [sp, #16]
    b5f4:	ldp	x29, x30, [sp], #96
    b5f8:	ret
    b5fc:	mov	x1, x21
    b600:	mov	x0, x20
    b604:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    b608:	mov	x1, x19
    b60c:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    b610:	mov	x19, x0
    b614:	mov	x0, x19
    b618:	ldp	x19, x20, [sp, #16]
    b61c:	ldr	x21, [sp, #32]
    b620:	ldp	x29, x30, [sp], #96
    b624:	ret

000000000000b628 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>:
    b628:	stp	x29, x30, [sp, #-208]!
    b62c:	mov	x29, sp
    b630:	stp	x19, x20, [sp, #16]
    b634:	mov	x19, x0
    b638:	stp	x21, x22, [sp, #32]
    b63c:	ldr	w21, [x0, #40]
    b640:	stp	x23, x24, [sp, #48]
    b644:	mov	x24, x1
    b648:	cmp	w21, #0x1b
    b64c:	stp	x25, x26, [sp, #64]
    b650:	and	w25, w2, #0xff
    b654:	b.eq	b8ac <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x284>  // b.none
    b658:	mov	x0, x19
    b65c:	bl	49a0 <_ZN4llvm8TGParser9ParseTypeEv>
    b660:	mov	x23, x0
    b664:	cbz	x0, b8e8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2c0>
    b668:	ldr	w0, [x19, #40]
    b66c:	cmp	w0, #0x48
    b670:	b.ne	b858 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x230>  // b.any
    b674:	ldp	x1, x2, [x19, #48]
    b678:	add	x22, sp, #0x70
    b67c:	add	x4, x22, #0x10
    b680:	mov	w3, #0x0                   	// #0
    b684:	mov	x0, x22
    b688:	str	x4, [sp, #112]
    b68c:	add	x2, x1, x2
    b690:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b694:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b698:	mov	x0, x22
    b69c:	add	x1, x1, #0x0
    b6a0:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    b6a4:	cbz	w0, b7b0 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x188>
    b6a8:	mov	x0, x19
    b6ac:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b6b0:	mov	x26, x0
    b6b4:	ldp	x0, x1, [sp, #112]
    b6b8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    b6bc:	mov	x20, x0
    b6c0:	ldp	x2, x1, [x19, #8]
    b6c4:	mov	x0, x19
    b6c8:	cmp	x2, x1
    b6cc:	cset	w1, eq  // eq = none
    b6d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b6d4:	str	w0, [x19, #40]
    b6d8:	cbz	w25, b708 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xe0>
    b6dc:	ldr	x1, [x19, #328]
    b6e0:	cbz	x24, b8c4 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x29c>
    b6e4:	mov	x2, x20
    b6e8:	mov	x0, x24
    b6ec:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b6f0:	mov	x4, #0x1                   	// #1
    b6f4:	add	x3, x3, #0x0
    b6f8:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    b6fc:	ldr	x1, [x19, #328]
    b700:	mov	x20, x0
    b704:	cbnz	x1, b8c8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2a0>
    b708:	cmp	w21, #0x1b
    b70c:	add	x21, sp, #0xb0
    b710:	cset	w3, eq  // eq = none
    b714:	mov	x0, x21
    b718:	mov	x2, x23
    b71c:	mov	x1, x20
    b720:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    b724:	mov	x3, x21
    b728:	mov	x2, x26
    b72c:	mov	x1, x24
    b730:	mov	x0, x19
    b734:	bl	3b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>
    b738:	tst	w0, #0xff
    b73c:	b.ne	b824 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x1fc>  // b.any
    b740:	ldr	w0, [x19, #40]
    b744:	cmp	w0, #0x10
    b748:	b.ne	b828 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x200>  // b.any
    b74c:	ldp	x2, x1, [x19, #8]
    b750:	mov	x0, x19
    b754:	cmp	x2, x1
    b758:	cset	w1, eq  // eq = none
    b75c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b760:	str	w0, [x19, #40]
    b764:	mov	x0, x19
    b768:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b76c:	mov	x21, x0
    b770:	mov	x2, x23
    b774:	mov	x1, x24
    b778:	mov	x0, x19
    b77c:	mov	w3, #0x0                   	// #0
    b780:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    b784:	mov	x6, x0
    b788:	cbz	x0, b828 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x200>
    b78c:	mov	x2, x21
    b790:	mov	x1, x24
    b794:	mov	x0, x19
    b798:	mov	x3, x20
    b79c:	mov	w7, #0x0                   	// #0
    b7a0:	mov	x4, #0x0                   	// #0
    b7a4:	mov	x5, #0x0                   	// #0
    b7a8:	bl	b70 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    b7ac:	b	b828 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x200>
    b7b0:	add	x21, sp, #0x90
    b7b4:	add	x20, sp, #0xb0
    b7b8:	mov	x8, x21
    b7bc:	mov	x1, x22
    b7c0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b7c4:	add	x0, x0, #0x0
    b7c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b7cc:	add	x23, sp, #0x58
    b7d0:	mov	x8, x20
    b7d4:	mov	x0, x21
    b7d8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b7dc:	add	x1, x1, #0x0
    b7e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b7e4:	mov	x1, x20
    b7e8:	mov	x0, x23
    b7ec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b7f0:	add	x20, x20, #0x10
    b7f4:	mov	x1, x23
    b7f8:	mov	x0, x19
    b7fc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b800:	ldr	x0, [sp, #176]
    b804:	cmp	x0, x20
    b808:	b.eq	b810 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x1e8>  // b.none
    b80c:	bl	0 <_ZdlPv>
    b810:	ldr	x0, [sp, #144]
    b814:	add	x21, x21, #0x10
    b818:	cmp	x0, x21
    b81c:	b.eq	b824 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x1fc>  // b.none
    b820:	bl	0 <_ZdlPv>
    b824:	mov	x20, #0x0                   	// #0
    b828:	ldr	x0, [sp, #112]
    b82c:	add	x1, x22, #0x10
    b830:	cmp	x0, x1
    b834:	b.eq	b83c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x214>  // b.none
    b838:	bl	0 <_ZdlPv>
    b83c:	mov	x0, x20
    b840:	ldp	x19, x20, [sp, #16]
    b844:	ldp	x21, x22, [sp, #32]
    b848:	ldp	x23, x24, [sp, #48]
    b84c:	ldp	x25, x26, [sp, #64]
    b850:	ldp	x29, x30, [sp], #208
    b854:	ret
    b858:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b85c:	add	x1, x1, #0x0
    b860:	add	x21, sp, #0xb0
    b864:	mov	x20, #0x0                   	// #0
    b868:	mov	x0, x21
    b86c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b870:	mov	x0, x19
    b874:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b878:	mov	x3, x0
    b87c:	mov	x2, x21
    b880:	add	x0, sp, #0x90
    b884:	mov	x1, #0x1                   	// #1
    b888:	str	x3, [sp, #144]
    b88c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b890:	mov	x0, x20
    b894:	ldp	x19, x20, [sp, #16]
    b898:	ldp	x21, x22, [sp, #32]
    b89c:	ldp	x23, x24, [sp, #48]
    b8a0:	ldp	x25, x26, [sp, #64]
    b8a4:	ldp	x29, x30, [sp], #208
    b8a8:	ret
    b8ac:	ldp	x1, x2, [x0, #8]
    b8b0:	cmp	x2, x1
    b8b4:	cset	w1, eq  // eq = none
    b8b8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b8bc:	str	w0, [x19, #40]
    b8c0:	b	b658 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x30>
    b8c4:	cbz	x1, b8f0 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2c8>
    b8c8:	mov	x2, x20
    b8cc:	mov	x0, x1
    b8d0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b8d4:	mov	x4, #0x2                   	// #2
    b8d8:	add	x3, x3, #0x0
    b8dc:	bl	168 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    b8e0:	mov	x20, x0
    b8e4:	b	b708 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xe0>
    b8e8:	mov	x20, #0x0                   	// #0
    b8ec:	b	b83c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x214>
    b8f0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b8f4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b8f8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b8fc:	add	x3, x3, #0x0
    b900:	add	x1, x1, #0x0
    b904:	add	x0, x0, #0x0
    b908:	mov	w2, #0x990                 	// #2448
    b90c:	bl	0 <__assert_fail>

000000000000b910 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>:
    b910:	stp	x29, x30, [sp, #-128]!
    b914:	mov	x29, sp
    b918:	stp	x19, x20, [sp, #16]
    b91c:	mov	x20, x1
    b920:	ldr	w1, [x0, #40]
    b924:	cmp	w1, #0xa
    b928:	b.ne	bbd8 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2c8>  // b.any
    b92c:	ldp	x1, x2, [x0, #8]
    b930:	stp	x23, x24, [sp, #48]
    b934:	mov	x24, x0
    b938:	str	x25, [sp, #64]
    b93c:	mov	x25, x20
    b940:	cmp	x2, x1
    b944:	cset	w1, eq  // eq = none
    b948:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b94c:	str	w0, [x24, #40]
    b950:	cbz	x20, bb84 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x274>
    b954:	mov	x1, x20
    b958:	mov	x0, x24
    b95c:	mov	w2, #0x1                   	// #1
    b960:	bl	b628 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    b964:	mov	x19, x0
    b968:	cbz	x0, bb6c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x25c>
    b96c:	ldr	x1, [x25, #56]
    b970:	stp	x21, x22, [sp, #32]
    b974:	ldr	w3, [x25, #64]
    b978:	add	x0, x1, w3, uxtw #3
    b97c:	cmp	x1, x0
    b980:	b.ne	b994 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x84>  // b.any
    b984:	b	b9c0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xb0>
    b988:	add	x1, x1, #0x8
    b98c:	cmp	x0, x1
    b990:	b.eq	b9c0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xb0>  // b.none
    b994:	ldr	x2, [x1]
    b998:	cmp	x19, x2
    b99c:	b.ne	b988 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x78>  // b.any
    b9a0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b9a4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b9a8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    b9ac:	add	x3, x3, #0x0
    b9b0:	add	x1, x1, #0x0
    b9b4:	add	x0, x0, #0x0
    b9b8:	mov	w2, #0x605                 	// #1541
    b9bc:	bl	0 <__assert_fail>
    b9c0:	ldr	w1, [x25, #68]
    b9c4:	add	x21, x25, #0x38
    b9c8:	cmp	w3, w1
    b9cc:	b.cs	bbb4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2a4>  // b.hs, b.nlast
    b9d0:	str	x19, [x0]
    b9d4:	ldp	w0, w2, [x25, #64]
    b9d8:	mov	w1, w0
    b9dc:	add	x1, x1, #0x1
    b9e0:	cmp	x1, x2
    b9e4:	b.hi	bc04 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2f4>  // b.pmore
    b9e8:	add	w0, w0, #0x1
    b9ec:	str	w0, [x25, #64]
    b9f0:	ldr	w0, [x24, #40]
    b9f4:	cmp	w0, #0xe
    b9f8:	b.ne	bb08 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1f8>  // b.any
    b9fc:	add	x22, x25, #0x48
    ba00:	ldp	x2, x1, [x24, #8]
    ba04:	mov	x0, x24
    ba08:	cmp	x2, x1
    ba0c:	cset	w1, eq  // eq = none
    ba10:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ba14:	str	w0, [x24, #40]
    ba18:	mov	x0, x24
    ba1c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ba20:	mov	x23, x0
    ba24:	mov	x1, x20
    ba28:	mov	x0, x24
    ba2c:	mov	w2, #0x1                   	// #1
    ba30:	bl	b628 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    ba34:	mov	x19, x0
    ba38:	cbz	x0, ba98 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x188>
    ba3c:	ldr	x2, [x25, #56]
    ba40:	ldr	w0, [x25, #64]
    ba44:	add	x4, x2, w0, uxtw #3
    ba48:	cmp	x2, x4
    ba4c:	b.eq	bad0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1c0>  // b.none
    ba50:	mov	x3, x2
    ba54:	b	ba64 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x154>
    ba58:	add	x3, x3, #0x8
    ba5c:	cmp	x4, x3
    ba60:	b.eq	bac0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1b0>  // b.none
    ba64:	ldr	x1, [x3]
    ba68:	cmp	x19, x1
    ba6c:	b.ne	ba58 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x148>  // b.any
    ba70:	add	x0, sp, #0x68
    ba74:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ba78:	add	x1, x1, #0x0
    ba7c:	str	x0, [sp, #88]
    ba80:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ba84:	str	x23, [sp, #96]
    ba88:	ldr	x2, [sp, #88]
    ba8c:	add	x0, sp, #0x60
    ba90:	mov	x1, #0x1                   	// #1
    ba94:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ba98:	ldp	x21, x22, [sp, #32]
    ba9c:	mov	w0, #0x1                   	// #1
    baa0:	ldp	x19, x20, [sp, #16]
    baa4:	ldp	x23, x24, [sp, #48]
    baa8:	ldr	x25, [sp, #64]
    baac:	ldp	x29, x30, [sp], #128
    bab0:	ret
    bab4:	add	x2, x2, #0x8
    bab8:	cmp	x4, x2
    babc:	b.eq	bad0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1c0>  // b.none
    bac0:	ldr	x1, [x2]
    bac4:	cmp	x19, x1
    bac8:	b.ne	bab4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1a4>  // b.any
    bacc:	b	b9a0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x90>
    bad0:	ldr	w1, [x25, #68]
    bad4:	cmp	w0, w1
    bad8:	b.cs	bb48 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x238>  // b.hs, b.nlast
    badc:	str	x19, [x4]
    bae0:	ldp	w0, w2, [x25, #64]
    bae4:	mov	w1, w0
    bae8:	add	x1, x1, #0x1
    baec:	cmp	x1, x2
    baf0:	b.hi	bc04 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2f4>  // b.pmore
    baf4:	add	w0, w0, #0x1
    baf8:	str	w0, [x25, #64]
    bafc:	ldr	w0, [x24, #40]
    bb00:	cmp	w0, #0xe
    bb04:	b.eq	ba00 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xf0>  // b.none
    bb08:	cmp	w0, #0xb
    bb0c:	b.eq	bb8c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x27c>  // b.none
    bb10:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bb14:	add	x1, x1, #0x0
    bb18:	add	x19, sp, #0x68
    bb1c:	mov	x0, x19
    bb20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bb24:	mov	x0, x24
    bb28:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    bb2c:	mov	x3, x0
    bb30:	mov	x2, x19
    bb34:	add	x0, sp, #0x60
    bb38:	mov	x1, #0x1                   	// #1
    bb3c:	str	x3, [sp, #96]
    bb40:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bb44:	b	ba98 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x188>
    bb48:	mov	x0, x21
    bb4c:	mov	x1, x22
    bb50:	mov	x3, #0x8                   	// #8
    bb54:	mov	x2, #0x0                   	// #0
    bb58:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    bb5c:	ldr	x0, [x25, #56]
    bb60:	ldr	w4, [x25, #64]
    bb64:	add	x4, x0, x4, lsl #3
    bb68:	b	badc <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1cc>
    bb6c:	mov	w0, #0x1                   	// #1
    bb70:	ldp	x19, x20, [sp, #16]
    bb74:	ldp	x23, x24, [sp, #48]
    bb78:	ldr	x25, [sp, #64]
    bb7c:	ldp	x29, x30, [sp], #128
    bb80:	ret
    bb84:	ldr	x25, [x24, #328]
    bb88:	b	b954 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x44>
    bb8c:	ldp	x2, x1, [x24, #8]
    bb90:	mov	x0, x24
    bb94:	cmp	x2, x1
    bb98:	cset	w1, eq  // eq = none
    bb9c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bba0:	mov	w1, w0
    bba4:	mov	w0, #0x0                   	// #0
    bba8:	ldp	x21, x22, [sp, #32]
    bbac:	str	w1, [x24, #40]
    bbb0:	b	baa0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x190>
    bbb4:	add	x1, x25, #0x48
    bbb8:	mov	x0, x21
    bbbc:	mov	x3, #0x8                   	// #8
    bbc0:	mov	x2, #0x0                   	// #0
    bbc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    bbc8:	ldr	x1, [x25, #56]
    bbcc:	ldr	w0, [x25, #64]
    bbd0:	add	x0, x1, x0, lsl #3
    bbd4:	b	b9d0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xc0>
    bbd8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bbdc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bbe0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bbe4:	add	x3, x3, #0x0
    bbe8:	add	x1, x1, #0x0
    bbec:	add	x0, x0, #0x0
    bbf0:	mov	w2, #0xa08                 	// #2568
    bbf4:	stp	x21, x22, [sp, #32]
    bbf8:	stp	x23, x24, [sp, #48]
    bbfc:	str	x25, [sp, #64]
    bc00:	bl	0 <__assert_fail>
    bc04:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bc08:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bc0c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bc10:	add	x3, x3, #0x0
    bc14:	add	x1, x1, #0x0
    bc18:	add	x0, x0, #0x0
    bc1c:	mov	w2, #0x43                  	// #67
    bc20:	bl	0 <__assert_fail>
    bc24:	nop

000000000000bc28 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE>:
    bc28:	stp	x29, x30, [sp, #-64]!
    bc2c:	mov	x29, sp
    bc30:	ldr	w2, [x0, #40]
    bc34:	cmp	w2, #0x23
    bc38:	b.eq	bcb8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x90>  // b.none
    bc3c:	cmp	w2, #0x1e
    bc40:	b.eq	bca8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x80>  // b.none
    bc44:	mov	w2, #0x0                   	// #0
    bc48:	stp	x19, x20, [sp, #16]
    bc4c:	mov	x19, x0
    bc50:	bl	b628 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    bc54:	cbz	x0, bcc8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0xa0>
    bc58:	ldr	w0, [x19, #40]
    bc5c:	cmp	w0, #0xd
    bc60:	b.eq	bcd4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0xac>  // b.none
    bc64:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bc68:	add	x1, x1, #0x0
    bc6c:	add	x20, sp, #0x28
    bc70:	mov	x0, x20
    bc74:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bc78:	mov	x0, x19
    bc7c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    bc80:	mov	x3, x0
    bc84:	mov	x2, x20
    bc88:	add	x0, sp, #0x20
    bc8c:	mov	x1, #0x1                   	// #1
    bc90:	str	x3, [sp, #32]
    bc94:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bc98:	ldp	x19, x20, [sp, #16]
    bc9c:	mov	w0, #0x1                   	// #1
    bca0:	ldp	x29, x30, [sp], #64
    bca4:	ret
    bca8:	bl	b0f8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE.part.0>
    bcac:	and	w0, w0, #0xff
    bcb0:	ldp	x29, x30, [sp], #64
    bcb4:	ret
    bcb8:	bl	a8b0 <_ZN4llvm8TGParser11ParseDefvarEv>
    bcbc:	and	w0, w0, #0xff
    bcc0:	ldp	x29, x30, [sp], #64
    bcc4:	ret
    bcc8:	mov	w0, #0x1                   	// #1
    bccc:	ldp	x19, x20, [sp, #16]
    bcd0:	b	bca0 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x78>
    bcd4:	ldp	x1, x2, [x19, #8]
    bcd8:	mov	x0, x19
    bcdc:	cmp	x2, x1
    bce0:	cset	w1, eq  // eq = none
    bce4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bce8:	mov	w1, w0
    bcec:	mov	w0, #0x0                   	// #0
    bcf0:	str	w1, [x19, #40]
    bcf4:	ldp	x19, x20, [sp, #16]
    bcf8:	b	bca0 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x78>
    bcfc:	nop

000000000000bd00 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE>:
    bd00:	stp	x29, x30, [sp, #-128]!
    bd04:	mov	x29, sp
    bd08:	ldr	w2, [x0, #40]
    bd0c:	stp	x19, x20, [sp, #16]
    bd10:	mov	x19, x0
    bd14:	cmp	w2, #0xd
    bd18:	b.eq	c00c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x30c>  // b.none
    bd1c:	cmp	w2, #0x6
    bd20:	b.eq	bd64 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x64>  // b.none
    bd24:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd28:	add	x1, x1, #0x0
    bd2c:	mov	w2, #0x103                 	// #259
    bd30:	stp	x1, xzr, [sp, #104]
    bd34:	strh	w2, [sp, #120]
    bd38:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    bd3c:	mov	x3, x0
    bd40:	add	x2, sp, #0x68
    bd44:	add	x0, sp, #0x60
    bd48:	mov	x1, #0x1                   	// #1
    bd4c:	str	x3, [sp, #96]
    bd50:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bd54:	mov	w0, #0x1                   	// #1
    bd58:	ldp	x19, x20, [sp, #16]
    bd5c:	ldp	x29, x30, [sp], #128
    bd60:	ret
    bd64:	mov	x20, x1
    bd68:	stp	x21, x22, [sp, #32]
    bd6c:	ldp	x2, x1, [x0, #8]
    bd70:	cmp	x2, x1
    bd74:	cset	w1, eq  // eq = none
    bd78:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bd7c:	str	w0, [x19, #40]
    bd80:	mov	x0, x19
    bd84:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bd88:	mov	x21, x0
    bd8c:	b	bda4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0xa4>
    bd90:	mov	x1, x20
    bd94:	mov	x0, x19
    bd98:	bl	bc28 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE>
    bd9c:	ands	w0, w0, #0xff
    bda0:	b.ne	bfe8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x2e8>  // b.any
    bda4:	ldr	w2, [x19, #40]
    bda8:	cmp	w2, #0x7
    bdac:	b.ne	bd90 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x90>  // b.any
    bdb0:	ldr	x0, [x19, #336]
    bdb4:	cmp	x21, x0
    bdb8:	b.ne	c084 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x384>  // b.any
    bdbc:	ldr	x0, [x21, #48]
    bdc0:	str	xzr, [x21, #48]
    bdc4:	ldr	x21, [x19, #336]
    bdc8:	str	x0, [x19, #336]
    bdcc:	cbz	x21, bfc8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x2c8>
    bdd0:	ldr	x22, [x21, #48]
    bdd4:	cbz	x22, bf84 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x284>
    bdd8:	stp	x23, x24, [sp, #48]
    bddc:	ldr	x23, [x22, #48]
    bde0:	cbz	x23, bf3c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x23c>
    bde4:	ldr	x24, [x23, #48]
    bde8:	cbz	x24, bef8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x1f8>
    bdec:	stp	x25, x26, [sp, #64]
    bdf0:	ldr	x25, [x24, #48]
    bdf4:	cbz	x25, beb0 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x1b0>
    bdf8:	ldr	x26, [x25, #48]
    bdfc:	cbz	x26, be6c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x16c>
    be00:	ldr	x0, [x26, #48]
    be04:	cbz	x0, be0c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x10c>
    be08:	bl	1730 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    be0c:	ldr	x20, [x26, #16]
    be10:	cbz	x20, be60 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x160>
    be14:	str	x27, [sp, #80]
    be18:	ldr	x1, [x20, #24]
    be1c:	mov	x0, x26
    be20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    be24:	ldr	x0, [x20, #32]
    be28:	add	x1, x20, #0x30
    be2c:	ldr	x27, [x20, #16]
    be30:	cmp	x0, x1
    be34:	b.eq	be50 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x150>  // b.none
    be38:	bl	0 <_ZdlPv>
    be3c:	mov	x0, x20
    be40:	bl	0 <_ZdlPv>
    be44:	cbz	x27, be5c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x15c>
    be48:	mov	x20, x27
    be4c:	b	be18 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x118>
    be50:	mov	x0, x20
    be54:	bl	0 <_ZdlPv>
    be58:	cbnz	x27, be48 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x148>
    be5c:	ldr	x27, [sp, #80]
    be60:	mov	x0, x26
    be64:	mov	x1, #0x38                  	// #56
    be68:	bl	0 <_ZdlPvm>
    be6c:	ldr	x20, [x25, #16]
    be70:	cbz	x20, bea4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x1a4>
    be74:	ldr	x1, [x20, #24]
    be78:	mov	x0, x25
    be7c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    be80:	ldr	x0, [x20, #32]
    be84:	add	x1, x20, #0x30
    be88:	ldr	x26, [x20, #16]
    be8c:	cmp	x0, x1
    be90:	b.eq	c034 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x334>  // b.none
    be94:	bl	0 <_ZdlPv>
    be98:	mov	x0, x20
    be9c:	bl	0 <_ZdlPv>
    bea0:	cbnz	x26, c040 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x340>
    bea4:	mov	x0, x25
    bea8:	mov	x1, #0x38                  	// #56
    beac:	bl	0 <_ZdlPvm>
    beb0:	ldr	x20, [x24, #16]
    beb4:	cbz	x20, bee8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x1e8>
    beb8:	ldr	x1, [x20, #24]
    bebc:	mov	x0, x24
    bec0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bec4:	ldr	x0, [x20, #32]
    bec8:	add	x1, x20, #0x30
    becc:	ldr	x25, [x20, #16]
    bed0:	cmp	x0, x1
    bed4:	b.eq	c048 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x348>  // b.none
    bed8:	bl	0 <_ZdlPv>
    bedc:	mov	x0, x20
    bee0:	bl	0 <_ZdlPv>
    bee4:	cbnz	x25, c054 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x354>
    bee8:	mov	x0, x24
    beec:	mov	x1, #0x38                  	// #56
    bef0:	bl	0 <_ZdlPvm>
    bef4:	ldp	x25, x26, [sp, #64]
    bef8:	ldr	x20, [x23, #16]
    befc:	cbz	x20, bf30 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x230>
    bf00:	ldr	x1, [x20, #24]
    bf04:	mov	x0, x23
    bf08:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bf0c:	ldr	x0, [x20, #32]
    bf10:	add	x1, x20, #0x30
    bf14:	ldr	x24, [x20, #16]
    bf18:	cmp	x0, x1
    bf1c:	b.eq	c05c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x35c>  // b.none
    bf20:	bl	0 <_ZdlPv>
    bf24:	mov	x0, x20
    bf28:	bl	0 <_ZdlPv>
    bf2c:	cbnz	x24, c068 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x368>
    bf30:	mov	x0, x23
    bf34:	mov	x1, #0x38                  	// #56
    bf38:	bl	0 <_ZdlPvm>
    bf3c:	ldr	x20, [x22, #16]
    bf40:	cbz	x20, bf74 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x274>
    bf44:	ldr	x1, [x20, #24]
    bf48:	mov	x0, x22
    bf4c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bf50:	ldr	x0, [x20, #32]
    bf54:	add	x1, x20, #0x30
    bf58:	ldr	x23, [x20, #16]
    bf5c:	cmp	x0, x1
    bf60:	b.eq	c070 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x370>  // b.none
    bf64:	bl	0 <_ZdlPv>
    bf68:	mov	x0, x20
    bf6c:	bl	0 <_ZdlPv>
    bf70:	cbnz	x23, c07c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x37c>
    bf74:	mov	x0, x22
    bf78:	mov	x1, #0x38                  	// #56
    bf7c:	bl	0 <_ZdlPvm>
    bf80:	ldp	x23, x24, [sp, #48]
    bf84:	ldr	x20, [x21, #16]
    bf88:	cbz	x20, bfbc <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x2bc>
    bf8c:	ldr	x1, [x20, #24]
    bf90:	mov	x0, x21
    bf94:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    bf98:	ldr	x0, [x20, #32]
    bf9c:	add	x1, x20, #0x30
    bfa0:	ldr	x22, [x20, #16]
    bfa4:	cmp	x0, x1
    bfa8:	b.eq	bff8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x2f8>  // b.none
    bfac:	bl	0 <_ZdlPv>
    bfb0:	mov	x0, x20
    bfb4:	bl	0 <_ZdlPv>
    bfb8:	cbnz	x22, c004 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x304>
    bfbc:	mov	x0, x21
    bfc0:	mov	x1, #0x38                  	// #56
    bfc4:	bl	0 <_ZdlPvm>
    bfc8:	ldp	x2, x1, [x19, #8]
    bfcc:	mov	x0, x19
    bfd0:	cmp	x2, x1
    bfd4:	cset	w1, eq  // eq = none
    bfd8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bfdc:	mov	w1, w0
    bfe0:	mov	w0, #0x0                   	// #0
    bfe4:	str	w1, [x19, #40]
    bfe8:	ldp	x19, x20, [sp, #16]
    bfec:	ldp	x21, x22, [sp, #32]
    bff0:	ldp	x29, x30, [sp], #128
    bff4:	ret
    bff8:	mov	x0, x20
    bffc:	bl	0 <_ZdlPv>
    c000:	cbz	x22, bfbc <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x2bc>
    c004:	mov	x20, x22
    c008:	b	bf8c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x28c>
    c00c:	ldp	x1, x2, [x0, #8]
    c010:	cmp	x2, x1
    c014:	cset	w1, eq  // eq = none
    c018:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c01c:	mov	w1, w0
    c020:	str	w1, [x19, #40]
    c024:	mov	w0, #0x0                   	// #0
    c028:	ldp	x19, x20, [sp, #16]
    c02c:	ldp	x29, x30, [sp], #128
    c030:	ret
    c034:	mov	x0, x20
    c038:	bl	0 <_ZdlPv>
    c03c:	cbz	x26, bea4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x1a4>
    c040:	mov	x20, x26
    c044:	b	be74 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x174>
    c048:	mov	x0, x20
    c04c:	bl	0 <_ZdlPv>
    c050:	cbz	x25, bee8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x1e8>
    c054:	mov	x20, x25
    c058:	b	beb8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x1b8>
    c05c:	mov	x0, x20
    c060:	bl	0 <_ZdlPv>
    c064:	cbz	x24, bf30 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x230>
    c068:	mov	x20, x24
    c06c:	b	bf00 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x200>
    c070:	mov	x0, x20
    c074:	bl	0 <_ZdlPv>
    c078:	cbz	x23, bf74 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x274>
    c07c:	mov	x20, x23
    c080:	b	bf44 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x244>
    c084:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c088:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c08c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c090:	add	x3, x3, #0x0
    c094:	add	x1, x1, #0x0
    c098:	add	x0, x0, #0x0
    c09c:	mov	w2, #0xc0                  	// #192
    c0a0:	stp	x23, x24, [sp, #48]
    c0a4:	stp	x25, x26, [sp, #64]
    c0a8:	str	x27, [sp, #80]
    c0ac:	bl	0 <__assert_fail>

000000000000c0b0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>:
    c0b0:	sub	sp, sp, #0x250
    c0b4:	mov	w3, #0x18                  	// #24
    c0b8:	stp	x29, x30, [sp]
    c0bc:	mov	x29, sp
    c0c0:	stp	x21, x22, [sp, #32]
    c0c4:	ldr	x22, [x2, #16]
    c0c8:	stp	x19, x20, [sp, #16]
    c0cc:	mov	x20, x0
    c0d0:	stp	x23, x24, [sp, #48]
    c0d4:	mov	x19, x2
    c0d8:	ldr	w23, [x22, #80]
    c0dc:	ldr	x0, [x22, #72]
    c0e0:	stp	x25, x26, [sp, #64]
    c0e4:	mov	x25, x1
    c0e8:	mov	x21, x0
    c0ec:	umaddl	x23, w23, w3, x0
    c0f0:	cmp	x0, x23
    c0f4:	b.ne	c108 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x58>  // b.any
    c0f8:	b	c144 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x94>
    c0fc:	add	x21, x21, #0x18
    c100:	cmp	x23, x21
    c104:	b.eq	c144 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x94>  // b.none
    c108:	ldr	x2, [x19]
    c10c:	mov	x3, x21
    c110:	mov	x1, x25
    c114:	mov	x0, x20
    c118:	bl	3b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>
    c11c:	ands	w3, w0, #0xff
    c120:	b.eq	c0fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4c>  // b.none
    c124:	mov	w0, w3
    c128:	ldp	x29, x30, [sp]
    c12c:	ldp	x19, x20, [sp, #16]
    c130:	ldp	x21, x22, [sp, #32]
    c134:	ldp	x23, x24, [sp, #48]
    c138:	ldp	x25, x26, [sp, #64]
    c13c:	add	sp, sp, #0x250
    c140:	ret
    c144:	ldr	w21, [x22, #64]
    c148:	ldr	w0, [x19, #32]
    c14c:	mov	w23, w21
    c150:	cmp	w21, w0
    c154:	b.cc	c54c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x49c>  // b.lo, b.ul, b.last
    c158:	adrp	x1, 0 <_ZTVN4llvm11MapResolverE>
    c15c:	add	x2, sp, #0x218
    c160:	stp	x27, x28, [sp, #80]
    c164:	ldr	x1, [x1]
    c168:	ldr	x27, [x22, #56]
    c16c:	strb	wzr, [sp, #552]
    c170:	add	x1, x1, #0x10
    c174:	stp	x1, x25, [x2]
    c178:	stp	xzr, xzr, [x2, #24]
    c17c:	str	xzr, [sp, #576]
    c180:	str	wzr, [sp, #584]
    c184:	cbz	w21, c934 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x884>
    c188:	mov	x26, #0x0                   	// #0
    c18c:	mov	w28, #0x18                  	// #24
    c190:	cmp	w26, w0
    c194:	mov	w24, w26
    c198:	b.cs	c314 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x264>  // b.hs, b.nlast
    c19c:	nop
    c1a0:	cmp	x23, x26
    c1a4:	b.ls	ced0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe20>  // b.plast
    c1a8:	cmp	x26, w0, uxtw
    c1ac:	ldr	x3, [x27]
    c1b0:	b.cs	ce60 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xdb0>  // b.hs, b.nlast
    c1b4:	ldr	x0, [x19, #24]
    c1b8:	mov	x1, x25
    c1bc:	ldr	x2, [x19]
    c1c0:	mov	w7, #0x0                   	// #0
    c1c4:	ldr	x6, [x0, x26, lsl #3]
    c1c8:	mov	x4, #0x0                   	// #0
    c1cc:	mov	x0, x20
    c1d0:	mov	x5, #0x0                   	// #0
    c1d4:	bl	b70 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    c1d8:	ands	w3, w0, #0xff
    c1dc:	b.ne	c4fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x44c>  // b.any
    c1e0:	ldr	w5, [x25, #80]
    c1e4:	ldr	x3, [x25, #72]
    c1e8:	mov	w6, w5
    c1ec:	ldr	x24, [x27]
    c1f0:	umaddl	x1, w5, w28, x3
    c1f4:	cmp	x3, x1
    c1f8:	b.ne	c20c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x15c>  // b.any
    c1fc:	b	cf48 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe98>
    c200:	add	x3, x3, #0x18
    c204:	cmp	x1, x3
    c208:	b.eq	cf48 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe98>  // b.none
    c20c:	ldr	x0, [x3]
    c210:	cmp	x24, x0
    c214:	b.ne	c200 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x150>  // b.any
    c218:	ldr	w1, [sp, #584]
    c21c:	ldr	x7, [x3, #16]
    c220:	ldr	x4, [sp, #568]
    c224:	cbz	w1, c61c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x56c>
    c228:	cmn	x24, #0x10
    c22c:	ccmn	x24, #0x8, #0x4, ne  // ne = any
    c230:	b.eq	ce40 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd90>  // b.none
    c234:	lsr	w3, w24, #9
    c238:	sub	w10, w1, #0x1
    c23c:	eor	w3, w3, w24, lsr #4
    c240:	and	w11, w3, w10
    c244:	umull	x0, w11, w28
    c248:	add	x9, x4, x0
    c24c:	ldr	x8, [x4, x0]
    c250:	cmp	x24, x8
    c254:	b.ne	c5a4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4f4>  // b.any
    c258:	str	x7, [x9, #8]
    c25c:	strb	wzr, [x9, #16]
    c260:	ldr	x1, [x27]
    c264:	cbz	w5, cc3c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb8c>
    c268:	sub	w2, w5, #0x1
    c26c:	ldr	x7, [x25, #72]
    c270:	umull	x2, w2, w28
    c274:	add	x4, x7, #0x18
    c278:	mov	x0, x7
    c27c:	add	x4, x4, x2
    c280:	add	x2, x2, x7
    c284:	b	c29c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1ec>
    c288:	cmp	x2, x0
    c28c:	b.eq	cc3c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb8c>  // b.none
    c290:	add	x0, x0, #0x18
    c294:	cmp	x4, x0
    c298:	b.eq	cc54 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xba4>  // b.none
    c29c:	ldr	x3, [x0]
    c2a0:	cmp	x1, x3
    c2a4:	b.ne	c288 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1d8>  // b.any
    c2a8:	cmp	x7, x0
    c2ac:	b.hi	ce70 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xdc0>  // b.pmore
    c2b0:	add	x2, x6, x6, lsl #1
    c2b4:	add	x2, x7, x2, lsl #3
    c2b8:	cmp	x0, x2
    c2bc:	b.cs	ce90 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xde0>  // b.hs, b.nlast
    c2c0:	add	x1, x0, #0x18
    c2c4:	cmp	x2, x1
    c2c8:	b.eq	c2dc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x22c>  // b.none
    c2cc:	sub	x2, x2, x1
    c2d0:	bl	0 <memmove>
    c2d4:	ldr	w5, [x25, #80]
    c2d8:	mov	w6, w5
    c2dc:	ldr	w0, [x25, #84]
    c2e0:	sub	x6, x6, #0x1
    c2e4:	cmp	x6, x0
    c2e8:	b.hi	ceb0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe00>  // b.pmore
    c2ec:	sub	w5, w5, #0x1
    c2f0:	str	w5, [x25, #80]
    c2f4:	add	x26, x26, #0x1
    c2f8:	add	x27, x27, #0x8
    c2fc:	cmp	w21, w26
    c300:	b.eq	c934 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x884>  // b.none
    c304:	ldr	w0, [x19, #32]
    c308:	mov	w24, w26
    c30c:	cmp	w26, w0
    c310:	b.cc	c1a0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xf0>  // b.lo, b.ul, b.last
    c314:	cmp	x23, x26
    c318:	b.ls	ced0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe20>  // b.plast
    c31c:	ldr	w2, [x25, #80]
    c320:	ldr	x0, [x25, #72]
    c324:	ldr	x3, [x27]
    c328:	umaddl	x2, w2, w28, x0
    c32c:	cmp	x0, x2
    c330:	b.ne	c344 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x294>  // b.any
    c334:	b	cf48 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe98>
    c338:	add	x0, x0, #0x18
    c33c:	cmp	x2, x0
    c340:	b.eq	cf48 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe98>  // b.none
    c344:	ldr	x1, [x0]
    c348:	cmp	x3, x1
    c34c:	b.ne	c338 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x288>  // b.any
    c350:	ldr	x0, [x0, #16]
    c354:	ldr	x1, [x0]
    c358:	ldr	x1, [x1, #24]
    c35c:	blr	x1
    c360:	tst	w0, #0xff
    c364:	b.ne	c1e0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x130>  // b.any
    c368:	add	x21, sp, #0xb8
    c36c:	add	x20, sp, #0xd0
    c370:	mov	x0, x21
    c374:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c378:	add	x1, x1, #0x0
    c37c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c380:	mov	w2, #0x109                 	// #265
    c384:	mov	x8, x20
    c388:	stp	xzr, xzr, [sp, #160]
    c38c:	mov	x0, x21
    c390:	add	x23, sp, #0xe8
    c394:	add	x1, sp, #0xa0
    c398:	str	w24, [sp, #160]
    c39c:	strh	w2, [sp, #176]
    c3a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c3a4:	add	x25, sp, #0x100
    c3a8:	mov	x0, x23
    c3ac:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c3b0:	add	x1, x1, #0x0
    c3b4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c3b8:	add	x21, sp, #0x1d8
    c3bc:	mov	x1, x23
    c3c0:	mov	x0, x20
    c3c4:	mov	x8, x25
    c3c8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c3cc:	ldr	x0, [x27]
    c3d0:	add	x2, sp, #0x1c0
    c3d4:	add	x4, sp, #0x1a8
    c3d8:	add	x3, sp, #0x190
    c3dc:	add	x5, sp, #0x178
    c3e0:	mov	x8, x21
    c3e4:	ldr	x1, [x0]
    c3e8:	stp	x2, x4, [sp, #104]
    c3ec:	add	x27, sp, #0x118
    c3f0:	stp	x3, x5, [sp, #120]
    c3f4:	add	x28, sp, #0x130
    c3f8:	add	x23, sp, #0x148
    c3fc:	ldr	x1, [x1, #48]
    c400:	add	x26, sp, #0x160
    c404:	add	x20, sp, #0x1f8
    c408:	blr	x1
    c40c:	mov	x0, x27
    c410:	mov	x1, x21
    c414:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c418:	mov	x8, x28
    c41c:	mov	x1, x27
    c420:	mov	x0, x25
    c424:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c428:	mov	x0, x23
    c42c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c430:	add	x1, x1, #0x0
    c434:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c438:	mov	x1, x23
    c43c:	mov	x0, x28
    c440:	mov	x8, x26
    c444:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c448:	ldr	x0, [x22]
    c44c:	mov	x8, x20
    c450:	ldr	x1, [x0]
    c454:	ldr	x1, [x1, #48]
    c458:	blr	x1
    c45c:	ldr	x5, [sp, #128]
    c460:	mov	x1, x20
    c464:	add	x20, x20, #0x10
    c468:	mov	x27, x5
    c46c:	mov	x0, x5
    c470:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c474:	ldr	x3, [sp, #120]
    c478:	mov	x1, x27
    c47c:	mov	x0, x26
    c480:	mov	x23, x3
    c484:	mov	x8, x3
    c488:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c48c:	ldr	x4, [sp, #112]
    c490:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c494:	add	x1, x1, #0x0
    c498:	mov	x25, x4
    c49c:	mov	x0, x4
    c4a0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c4a4:	ldr	x2, [sp, #104]
    c4a8:	mov	x1, x25
    c4ac:	mov	x0, x23
    c4b0:	mov	x8, x2
    c4b4:	mov	x22, x2
    c4b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c4bc:	ldr	x3, [x19]
    c4c0:	add	x0, sp, #0x98
    c4c4:	mov	x2, x22
    c4c8:	mov	x1, #0x1                   	// #1
    c4cc:	str	x3, [sp, #152]
    c4d0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c4d4:	ldr	x0, [sp, #504]
    c4d8:	cmp	x0, x20
    c4dc:	b.eq	c4e4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x434>  // b.none
    c4e0:	bl	0 <_ZdlPv>
    c4e4:	ldr	x0, [sp, #472]
    c4e8:	add	x21, x21, #0x10
    c4ec:	cmp	x0, x21
    c4f0:	b.eq	c4f8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x448>  // b.none
    c4f4:	bl	0 <_ZdlPv>
    c4f8:	mov	w3, #0x1                   	// #1
    c4fc:	ldr	w2, [sp, #584]
    c500:	mov	w1, #0x18                  	// #24
    c504:	str	w3, [sp, #104]
    c508:	adrp	x3, 0 <_ZTVN4llvm11MapResolverE>
    c50c:	ldr	x0, [sp, #568]
    c510:	umull	x1, w2, w1
    c514:	ldr	x24, [x3]
    c518:	add	x24, x24, #0x10
    c51c:	str	x24, [sp, #536]
    c520:	bl	0 <_ZdlPvm>
    c524:	ldr	w3, [sp, #104]
    c528:	ldp	x29, x30, [sp]
    c52c:	mov	w0, w3
    c530:	ldp	x19, x20, [sp, #16]
    c534:	ldp	x21, x22, [sp, #32]
    c538:	ldp	x23, x24, [sp, #48]
    c53c:	ldp	x25, x26, [sp, #64]
    c540:	ldp	x27, x28, [sp, #80]
    c544:	add	sp, sp, #0x250
    c548:	ret
    c54c:	add	x20, sp, #0x218
    c550:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c554:	mov	x0, x20
    c558:	add	x1, x1, #0x0
    c55c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c560:	ldr	x4, [x19]
    c564:	mov	w3, #0x1                   	// #1
    c568:	mov	x2, x20
    c56c:	add	x0, sp, #0x1f8
    c570:	mov	x1, #0x1                   	// #1
    c574:	str	w3, [sp, #104]
    c578:	str	x4, [sp, #504]
    c57c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c580:	ldr	w3, [sp, #104]
    c584:	ldp	x29, x30, [sp]
    c588:	mov	w0, w3
    c58c:	ldp	x19, x20, [sp, #16]
    c590:	ldp	x21, x22, [sp, #32]
    c594:	ldp	x23, x24, [sp, #48]
    c598:	ldp	x25, x26, [sp, #64]
    c59c:	add	sp, sp, #0x250
    c5a0:	ret
    c5a4:	mov	w0, #0x1                   	// #1
    c5a8:	mov	x13, #0x0                   	// #0
    c5ac:	cmn	x8, #0x8
    c5b0:	b.ne	cccc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc1c>  // b.any
    c5b4:	ldr	x12, [sp, #560]
    c5b8:	lsl	w0, w1, #1
    c5bc:	ldr	w11, [sp, #576]
    c5c0:	cmp	x13, #0x0
    c5c4:	add	x12, x12, #0x1
    c5c8:	str	x12, [sp, #560]
    c5cc:	add	w11, w11, #0x1
    c5d0:	add	w12, w0, w1
    c5d4:	csel	x9, x9, x13, eq  // eq = none
    c5d8:	cmp	w12, w11, lsl #2
    c5dc:	b.ls	c62c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x57c>  // b.plast
    c5e0:	ldr	w0, [sp, #580]
    c5e4:	sub	w0, w1, w0
    c5e8:	sub	w0, w0, w11
    c5ec:	cmp	w0, w1, lsr #3
    c5f0:	b.ls	c724 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x674>  // b.plast
    c5f4:	ldr	x0, [x9]
    c5f8:	str	w11, [sp, #576]
    c5fc:	cmn	x0, #0x8
    c600:	b.eq	c610 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x560>  // b.none
    c604:	ldr	w0, [sp, #580]
    c608:	sub	w0, w0, #0x1
    c60c:	str	w0, [sp, #580]
    c610:	stp	x24, xzr, [x9]
    c614:	strb	wzr, [x9, #16]
    c618:	b	c258 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1a8>
    c61c:	ldr	x3, [sp, #560]
    c620:	mov	w0, #0x0                   	// #0
    c624:	add	x3, x3, #0x1
    c628:	str	x3, [sp, #560]
    c62c:	sub	w0, w0, #0x1
    c630:	mov	w3, #0x40                  	// #64
    c634:	stp	x7, x4, [sp, #104]
    c638:	orr	x0, x0, x0, lsr #1
    c63c:	str	w1, [sp, #120]
    c640:	orr	x0, x0, x0, lsr #2
    c644:	orr	x0, x0, x0, lsr #4
    c648:	orr	x0, x0, x0, lsr #8
    c64c:	orr	x0, x0, x0, lsr #16
    c650:	add	x0, x0, #0x1
    c654:	cmp	w0, w3
    c658:	csel	w0, w0, w3, cs  // cs = hs, nlast
    c65c:	str	w0, [sp, #584]
    c660:	umull	x0, w0, w28
    c664:	bl	0 <_Znwm>
    c668:	str	x0, [sp, #568]
    c66c:	ldp	x7, x4, [sp, #104]
    c670:	mov	x8, x0
    c674:	ldr	w1, [sp, #120]
    c678:	cbz	x4, cc74 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xbc4>
    c67c:	ldr	w10, [sp, #584]
    c680:	umull	x12, w1, w28
    c684:	str	xzr, [sp, #576]
    c688:	sub	w11, w10, #0x1
    c68c:	add	x6, x4, x12
    c690:	tst	w10, w11
    c694:	b.ne	cef8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe48>  // b.any
    c698:	umaddl	x3, w10, w28, x0
    c69c:	mov	x1, #0xfffffffffffffff8    	// #-8
    c6a0:	cmp	x0, x3
    c6a4:	b.eq	c6b4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x604>  // b.none
    c6a8:	str	x1, [x0], #24
    c6ac:	cmp	x3, x0
    c6b0:	b.ne	c6a8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x5f8>  // b.any
    c6b4:	cmp	x4, x6
    c6b8:	mov	x3, x4
    c6bc:	b.ne	c6d0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x620>  // b.any
    c6c0:	b	c838 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x788>
    c6c4:	add	x3, x3, #0x18
    c6c8:	cmp	x6, x3
    c6cc:	b.eq	c838 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x788>  // b.none
    c6d0:	ldr	x0, [x3]
    c6d4:	cmn	x0, #0x8
    c6d8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    c6dc:	b.eq	c6c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x614>  // b.none
    c6e0:	cbz	w10, cf3c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe8c>
    c6e4:	lsr	w5, w0, #9
    c6e8:	eor	w5, w5, w0, lsr #4
    c6ec:	and	w5, w5, w11
    c6f0:	umull	x9, w5, w28
    c6f4:	add	x1, x8, x9
    c6f8:	ldr	x9, [x8, x9]
    c6fc:	cmp	x0, x9
    c700:	b.ne	cb74 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xac4>  // b.any
    c704:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c708:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c70c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c710:	add	x3, x3, #0x0
    c714:	add	x1, x1, #0x0
    c718:	add	x0, x0, #0x0
    c71c:	mov	w2, #0x17a                 	// #378
    c720:	bl	0 <__assert_fail>
    c724:	mov	w5, w10
    c728:	lsr	w0, w10, #1
    c72c:	orr	x0, x0, x5
    c730:	mov	w5, #0x40                  	// #64
    c734:	stp	x7, x4, [sp, #104]
    c738:	orr	x0, x0, x0, lsr #2
    c73c:	str	w1, [sp, #120]
    c740:	orr	x0, x0, x0, lsr #4
    c744:	str	w3, [sp, #128]
    c748:	str	x8, [sp, #136]
    c74c:	orr	x0, x0, x0, lsr #8
    c750:	orr	x0, x0, x0, lsr #16
    c754:	add	x0, x0, #0x1
    c758:	cmp	w0, w5
    c75c:	csel	w0, w0, w5, cs  // cs = hs, nlast
    c760:	str	w0, [sp, #584]
    c764:	umull	x0, w0, w28
    c768:	bl	0 <_Znwm>
    c76c:	str	x0, [sp, #568]
    c770:	ldp	x7, x4, [sp, #104]
    c774:	mov	x10, x0
    c778:	ldr	w1, [sp, #120]
    c77c:	ldr	w3, [sp, #128]
    c780:	ldr	x8, [sp, #136]
    c784:	cbz	x4, cd00 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc50>
    c788:	ldr	w11, [sp, #584]
    c78c:	umull	x13, w1, w28
    c790:	str	xzr, [sp, #576]
    c794:	sub	w12, w11, #0x1
    c798:	add	x9, x4, x13
    c79c:	tst	w11, w12
    c7a0:	b.ne	cef8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe48>  // b.any
    c7a4:	umaddl	x1, w11, w28, x0
    c7a8:	cmp	x0, x1
    c7ac:	b.eq	c7bc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x70c>  // b.none
    c7b0:	str	x8, [x0], #24
    c7b4:	cmp	x1, x0
    c7b8:	b.ne	c7b0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x700>  // b.any
    c7bc:	mov	x5, x4
    c7c0:	b	c7d0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x720>
    c7c4:	add	x5, x5, #0x18
    c7c8:	cmp	x9, x5
    c7cc:	b.eq	c8a0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7f0>  // b.none
    c7d0:	ldr	x0, [x5]
    c7d4:	cmn	x0, #0x8
    c7d8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    c7dc:	b.eq	c7c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x714>  // b.none
    c7e0:	cbz	w11, cf3c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe8c>
    c7e4:	lsr	w6, w0, #9
    c7e8:	eor	w6, w6, w0, lsr #4
    c7ec:	and	w6, w6, w12
    c7f0:	umull	x1, w6, w28
    c7f4:	add	x14, x10, x1
    c7f8:	ldr	x1, [x10, x1]
    c7fc:	cmp	x0, x1
    c800:	b.eq	c704 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x654>  // b.none
    c804:	mov	w8, #0x1                   	// #1
    c808:	mov	x15, #0x0                   	// #0
    c80c:	cmn	x1, #0x8
    c810:	b.ne	cdc8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd18>  // b.any
    c814:	cmp	x15, #0x0
    c818:	ldr	w6, [sp, #576]
    c81c:	csel	x15, x15, x14, ne  // ne = any
    c820:	add	w6, w6, #0x1
    c824:	str	x0, [x15]
    c828:	ldp	x0, x1, [x5, #8]
    c82c:	stp	x0, x1, [x15, #8]
    c830:	str	w6, [sp, #576]
    c834:	b	c7c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x714>
    c838:	mov	x1, x12
    c83c:	mov	x0, x4
    c840:	str	x7, [sp, #104]
    c844:	bl	0 <_ZdlPvm>
    c848:	ldr	w1, [sp, #584]
    c84c:	ldr	x7, [sp, #104]
    c850:	ldr	x8, [sp, #568]
    c854:	cbz	w1, c914 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x864>
    c858:	cmn	x24, #0x8
    c85c:	ccmn	x24, #0x10, #0x4, ne  // ne = any
    c860:	b.eq	ce40 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd90>  // b.none
    c864:	lsr	w0, w24, #9
    c868:	sub	w1, w1, #0x1
    c86c:	eor	w0, w0, w24, lsr #4
    c870:	ldr	w5, [x25, #80]
    c874:	and	w0, w0, w1
    c878:	ldr	w11, [sp, #576]
    c87c:	mov	w6, w5
    c880:	add	w11, w11, #0x1
    c884:	umull	x3, w0, w28
    c888:	add	x9, x8, x3
    c88c:	ldr	x3, [x8, x3]
    c890:	cmp	x24, x3
    c894:	b.ne	cbcc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb1c>  // b.any
    c898:	str	w11, [sp, #576]
    c89c:	b	c604 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x554>
    c8a0:	mov	x0, x4
    c8a4:	mov	x1, x13
    c8a8:	str	x7, [sp, #104]
    c8ac:	str	w3, [sp, #112]
    c8b0:	bl	0 <_ZdlPvm>
    c8b4:	ldr	w3, [sp, #112]
    c8b8:	ldr	w0, [sp, #584]
    c8bc:	ldr	x7, [sp, #104]
    c8c0:	ldr	x10, [sp, #568]
    c8c4:	cbz	w0, c914 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x864>
    c8c8:	sub	w0, w0, #0x1
    c8cc:	ldr	w5, [x25, #80]
    c8d0:	and	w3, w3, w0
    c8d4:	ldr	w11, [sp, #576]
    c8d8:	mov	w6, w5
    c8dc:	add	w11, w11, #0x1
    c8e0:	umull	x1, w3, w28
    c8e4:	add	x9, x10, x1
    c8e8:	ldr	x1, [x10, x1]
    c8ec:	cmp	x24, x1
    c8f0:	b.eq	c898 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7e8>  // b.none
    c8f4:	mov	w8, #0x1                   	// #1
    c8f8:	mov	x4, #0x0                   	// #0
    c8fc:	cmn	x1, #0x8
    c900:	b.ne	ce0c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd5c>  // b.any
    c904:	cbz	x4, cdf8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd48>
    c908:	mov	x9, x4
    c90c:	ldr	x0, [x4]
    c910:	b	c5f8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x548>
    c914:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c918:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c91c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c920:	add	x3, x3, #0x0
    c924:	add	x1, x1, #0x0
    c928:	add	x0, x0, #0x0
    c92c:	mov	w2, #0x22f                 	// #559
    c930:	bl	0 <__assert_fail>
    c934:	ldrb	w0, [x25, #125]
    c938:	cbnz	w0, ccac <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xbfc>
    c93c:	ldr	x21, [x25]
    c940:	mov	x1, #0x0                   	// #0
    c944:	mov	x0, x22
    c948:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    c94c:	mov	x2, x0
    c950:	add	x20, sp, #0x1f8
    c954:	mov	x1, x20
    c958:	add	x0, sp, #0x230
    c95c:	str	x2, [sp, #504]
    c960:	add	x23, sp, #0x218
    c964:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    c968:	mov	x3, x0
    c96c:	mov	x1, x23
    c970:	mov	x0, x25
    c974:	mov	x2, #0x0                   	// #0
    c978:	mov	w26, #0x18                  	// #24
    c97c:	str	x21, [x3, #8]
    c980:	strb	wzr, [x3, #16]
    c984:	bl	0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    c988:	ldr	w7, [x22, #96]
    c98c:	ldr	x23, [x22, #88]
    c990:	ldr	w5, [x25, #96]
    c994:	umaddl	x7, w7, w26, x23
    c998:	cmp	x7, x23
    c99c:	b.eq	cadc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa2c>  // b.none
    c9a0:	add	x0, x25, #0x58
    c9a4:	nop
    c9a8:	ldr	x1, [x25, #88]
    c9ac:	mov	w6, w5
    c9b0:	ldr	x21, [x23]
    c9b4:	umaddl	x3, w5, w26, x1
    c9b8:	cmp	x1, x3
    c9bc:	b.eq	cc10 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb60>  // b.none
    c9c0:	mov	x2, x1
    c9c4:	b	c9d4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x924>
    c9c8:	add	x2, x2, #0x18
    c9cc:	cmp	x3, x2
    c9d0:	b.eq	ca60 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9b0>  // b.none
    c9d4:	ldr	x4, [x2]
    c9d8:	cmp	x21, x4
    c9dc:	b.ne	c9c8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x918>  // b.any
    c9e0:	ldr	x0, [x21]
    c9e4:	cbz	x0, cef4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe44>
    c9e8:	ldrb	w1, [x0, #8]
    c9ec:	cmp	w1, #0x12
    c9f0:	b.ne	ced4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe24>  // b.any
    c9f4:	ldp	x3, x6, [x0, #24]
    c9f8:	add	x2, sp, #0x1a8
    c9fc:	adrp	x4, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ca00:	add	x4, x4, #0x0
    ca04:	mov	w5, #0x503                 	// #1283
    ca08:	stp	x3, x6, [sp, #424]
    ca0c:	mov	w3, #0x1                   	// #1
    ca10:	add	x21, sp, #0x1d8
    ca14:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ca18:	mov	x0, x21
    ca1c:	add	x1, x1, #0x0
    ca20:	str	w3, [sp, #104]
    ca24:	stp	x4, x2, [sp, #448]
    ca28:	strh	w5, [sp, #464]
    ca2c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ca30:	mov	x8, x20
    ca34:	mov	x1, x21
    ca38:	add	x0, sp, #0x1c0
    ca3c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ca40:	ldr	x4, [x19]
    ca44:	mov	x2, x20
    ca48:	add	x0, sp, #0x190
    ca4c:	mov	x1, #0x1                   	// #1
    ca50:	str	x4, [sp, #400]
    ca54:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ca58:	ldr	w3, [sp, #104]
    ca5c:	b	c4fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x44c>
    ca60:	ldr	x2, [x25, #112]
    ca64:	ldp	x28, x27, [x23, #8]
    ca68:	cbz	x2, ca7c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9cc>
    ca6c:	b	cc1c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb6c>
    ca70:	add	x1, x1, #0x18
    ca74:	cmp	x3, x1
    ca78:	b.eq	caa8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9f8>  // b.none
    ca7c:	ldr	x2, [x1]
    ca80:	cmp	x21, x2
    ca84:	b.ne	ca70 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9c0>  // b.any
    ca88:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ca8c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ca90:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ca94:	add	x3, x3, #0x0
    ca98:	add	x1, x1, #0x0
    ca9c:	add	x0, x0, #0x0
    caa0:	mov	w2, #0x630                 	// #1584
    caa4:	bl	0 <__assert_fail>
    caa8:	ldr	w1, [x25, #100]
    caac:	cmp	w1, w5
    cab0:	b.ls	cba8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xaf8>  // b.plast
    cab4:	stp	x21, x28, [x3]
    cab8:	add	x6, x6, #0x1
    cabc:	cmp	x6, w1, uxtw
    cac0:	str	x27, [x3, #16]
    cac4:	b.hi	ceb0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe00>  // b.pmore
    cac8:	add	w5, w5, #0x1
    cacc:	str	w5, [x25, #96]
    cad0:	add	x23, x23, #0x18
    cad4:	cmp	x7, x23
    cad8:	b.ne	c9a8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x8f8>  // b.any
    cadc:	ldr	x2, [x25, #88]
    cae0:	mov	w1, #0x18                  	// #24
    cae4:	mov	w4, w5
    cae8:	umaddl	x1, w5, w1, x2
    caec:	cmp	x2, x1
    caf0:	b.eq	cd5c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xcac>  // b.none
    caf4:	mov	x0, x2
    caf8:	b	cb08 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa58>
    cafc:	add	x0, x0, #0x18
    cb00:	cmp	x1, x0
    cb04:	b.eq	cd34 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc84>  // b.none
    cb08:	ldr	x3, [x0]
    cb0c:	cmp	x22, x3
    cb10:	b.ne	cafc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa4c>  // b.any
    cb14:	ldr	x1, [x22]
    cb18:	cbz	x1, cef4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe44>
    cb1c:	ldrb	w0, [x1, #8]
    cb20:	cmp	w0, #0x12
    cb24:	b.ne	ced4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe24>  // b.any
    cb28:	ldp	x3, x4, [x1, #24]
    cb2c:	add	x2, sp, #0x1a8
    cb30:	stp	x3, x4, [sp, #424]
    cb34:	add	x21, sp, #0x1c0
    cb38:	mov	x0, x21
    cb3c:	mov	w3, #0x1                   	// #1
    cb40:	add	x22, sp, #0x1d8
    cb44:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cb48:	add	x1, x1, #0x0
    cb4c:	str	w3, [sp, #104]
    cb50:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cb54:	mov	x0, x22
    cb58:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cb5c:	add	x1, x1, #0x0
    cb60:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cb64:	mov	x8, x20
    cb68:	mov	x1, x22
    cb6c:	mov	x0, x21
    cb70:	b	ca3c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x98c>
    cb74:	mov	w13, #0x1                   	// #1
    cb78:	mov	x14, #0x0                   	// #0
    cb7c:	cmn	x9, #0x8
    cb80:	b.ne	cd98 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xce8>  // b.any
    cb84:	cmp	x14, #0x0
    cb88:	ldr	w5, [sp, #576]
    cb8c:	csel	x14, x14, x1, ne  // ne = any
    cb90:	add	w5, w5, #0x1
    cb94:	str	x0, [x14]
    cb98:	ldp	x0, x1, [x3, #8]
    cb9c:	stp	x0, x1, [x14, #8]
    cba0:	str	w5, [sp, #576]
    cba4:	b	c6c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x614>
    cba8:	mov	x1, #0x0                   	// #0
    cbac:	stp	x0, x7, [sp, #104]
    cbb0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cbb4:	ldp	w5, w1, [x25, #96]
    cbb8:	ldr	x3, [x25, #88]
    cbbc:	mov	w6, w5
    cbc0:	ldp	x0, x7, [sp, #104]
    cbc4:	umaddl	x3, w5, w26, x3
    cbc8:	b	cab4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xa04>
    cbcc:	mov	w10, #0x1                   	// #1
    cbd0:	mov	x4, #0x0                   	// #0
    cbd4:	cmn	x3, #0x8
    cbd8:	b.eq	c904 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x854>  // b.none
    cbdc:	add	w0, w0, w10
    cbe0:	cmp	x4, #0x0
    cbe4:	and	w0, w1, w0
    cbe8:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    cbec:	csel	x4, x4, x9, ne  // ne = any
    cbf0:	add	w10, w10, #0x1
    cbf4:	umull	x3, w0, w28
    cbf8:	add	x9, x8, x3
    cbfc:	ldr	x3, [x8, x3]
    cc00:	cmp	x24, x3
    cc04:	b.ne	cbd4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb24>  // b.any
    cc08:	str	w11, [sp, #576]
    cc0c:	b	c604 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x554>
    cc10:	ldr	x1, [x25, #112]
    cc14:	ldp	x28, x27, [x23, #8]
    cc18:	cbz	x1, caa8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9f8>
    cc1c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc20:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc24:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc28:	add	x3, x3, #0x0
    cc2c:	add	x1, x1, #0x0
    cc30:	add	x0, x0, #0x0
    cc34:	mov	w2, #0x62f                 	// #1583
    cc38:	bl	0 <__assert_fail>
    cc3c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc40:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc44:	add	x1, x1, #0x0
    cc48:	add	x0, x0, #0x0
    cc4c:	mov	w2, #0x614                 	// #1556
    cc50:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    cc54:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc58:	add	x3, x3, #0x0
    cc5c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc60:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cc64:	add	x1, x1, #0x0
    cc68:	add	x0, x0, #0x0
    cc6c:	mov	w2, #0x95                  	// #149
    cc70:	bl	0 <__assert_fail>
    cc74:	ldr	w1, [sp, #584]
    cc78:	str	xzr, [sp, #576]
    cc7c:	sub	w0, w1, #0x1
    cc80:	tst	w0, w1
    cc84:	b.ne	cef8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe48>  // b.any
    cc88:	umaddl	x3, w1, w28, x8
    cc8c:	cmp	x8, x3
    cc90:	b.eq	c854 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7a4>  // b.none
    cc94:	mov	x0, x8
    cc98:	mov	x4, #0xfffffffffffffff8    	// #-8
    cc9c:	str	x4, [x0], #24
    cca0:	cmp	x3, x0
    cca4:	b.ne	cc9c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xbec>  // b.any
    cca8:	b	c854 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7a4>
    ccac:	mov	x1, #0x0                   	// #0
    ccb0:	mov	x0, x25
    ccb4:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    ccb8:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    ccbc:	ldr	x1, [x1]
    ccc0:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    ccc4:	mov	x21, x0
    ccc8:	b	c940 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x890>
    cccc:	add	w11, w11, w0
    ccd0:	cmp	x13, #0x0
    ccd4:	and	w11, w10, w11
    ccd8:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    ccdc:	csel	x9, x9, x13, eq  // eq = none
    cce0:	add	w0, w0, #0x1
    cce4:	umull	x8, w11, w28
    cce8:	add	x12, x4, x8
    ccec:	ldr	x8, [x4, x8]
    ccf0:	cmp	x24, x8
    ccf4:	b.ne	ce00 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xd50>  // b.any
    ccf8:	mov	x9, x12
    ccfc:	b	c258 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1a8>
    cd00:	ldr	w0, [sp, #584]
    cd04:	str	xzr, [sp, #576]
    cd08:	sub	w1, w0, #0x1
    cd0c:	tst	w1, w0
    cd10:	b.ne	cef8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe48>  // b.any
    cd14:	umaddl	x4, w0, w28, x10
    cd18:	cmp	x10, x4
    cd1c:	b.eq	c8c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x814>  // b.none
    cd20:	mov	x1, x10
    cd24:	str	x8, [x1], #24
    cd28:	cmp	x4, x1
    cd2c:	b.ne	cd24 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc74>  // b.any
    cd30:	b	c8c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x814>
    cd34:	ldr	x0, [x25, #112]
    cd38:	cbz	x0, cd4c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc9c>
    cd3c:	b	cc1c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb6c>
    cd40:	add	x2, x2, #0x18
    cd44:	cmp	x1, x2
    cd48:	b.eq	cd64 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xcb4>  // b.none
    cd4c:	ldr	x0, [x2]
    cd50:	cmp	x22, x0
    cd54:	b.ne	cd40 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xc90>  // b.any
    cd58:	b	ca88 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x9d8>
    cd5c:	ldr	x0, [x25, #112]
    cd60:	cbnz	x0, cc1c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xb6c>
    cd64:	ldr	w0, [x25, #100]
    cd68:	ldp	x20, x19, [x19]
    cd6c:	cmp	w0, w5
    cd70:	b.ls	cf18 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe68>  // b.plast
    cd74:	stp	x22, x20, [x1]
    cd78:	add	x4, x4, #0x1
    cd7c:	cmp	x4, w0, uxtw
    cd80:	str	x19, [x1, #16]
    cd84:	b.hi	ceb0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe00>  // b.pmore
    cd88:	add	w5, w5, #0x1
    cd8c:	mov	w3, #0x0                   	// #0
    cd90:	str	w5, [x25, #96]
    cd94:	b	c4fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x44c>
    cd98:	add	w5, w13, w5
    cd9c:	cmp	x14, #0x0
    cda0:	and	w5, w11, w5
    cda4:	ccmn	x9, #0x10, #0x0, eq  // eq = none
    cda8:	csel	x14, x14, x1, ne  // ne = any
    cdac:	add	w13, w13, #0x1
    cdb0:	umull	x9, w5, w28
    cdb4:	add	x1, x8, x9
    cdb8:	ldr	x9, [x8, x9]
    cdbc:	cmp	x0, x9
    cdc0:	b.eq	c704 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x654>  // b.none
    cdc4:	b	cb7c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xacc>
    cdc8:	add	w6, w6, w8
    cdcc:	cmp	x15, #0x0
    cdd0:	and	w6, w12, w6
    cdd4:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    cdd8:	csel	x15, x15, x14, ne  // ne = any
    cddc:	add	w8, w8, #0x1
    cde0:	umull	x1, w6, w28
    cde4:	add	x14, x10, x1
    cde8:	ldr	x1, [x10, x1]
    cdec:	cmp	x0, x1
    cdf0:	b.eq	c704 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x654>  // b.none
    cdf4:	b	c80c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x75c>
    cdf8:	str	w11, [sp, #576]
    cdfc:	b	c610 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x560>
    ce00:	mov	x13, x9
    ce04:	mov	x9, x12
    ce08:	b	c5ac <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4fc>
    ce0c:	add	w3, w8, w3
    ce10:	cmp	x4, #0x0
    ce14:	and	w3, w0, w3
    ce18:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    ce1c:	csel	x4, x4, x9, ne  // ne = any
    ce20:	add	w8, w8, #0x1
    ce24:	umull	x1, w3, w28
    ce28:	add	x9, x10, x1
    ce2c:	ldr	x1, [x10, x1]
    ce30:	cmp	x24, x1
    ce34:	b.ne	c8fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x84c>  // b.any
    ce38:	str	w11, [sp, #576]
    ce3c:	b	c604 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x554>
    ce40:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce44:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce48:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce4c:	add	x3, x3, #0x0
    ce50:	add	x1, x1, #0x0
    ce54:	add	x0, x0, #0x0
    ce58:	mov	w2, #0x250                 	// #592
    ce5c:	bl	0 <__assert_fail>
    ce60:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce64:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce68:	add	x3, x3, #0x0
    ce6c:	b	cc60 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xbb0>
    ce70:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce74:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce78:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce7c:	add	x3, x3, #0x0
    ce80:	add	x1, x1, #0x0
    ce84:	add	x0, x0, #0x0
    ce88:	mov	w2, #0x1b6                 	// #438
    ce8c:	bl	0 <__assert_fail>
    ce90:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce94:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce98:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ce9c:	add	x3, x3, #0x0
    cea0:	add	x1, x1, #0x0
    cea4:	add	x0, x0, #0x0
    cea8:	mov	w2, #0x1b7                 	// #439
    ceac:	bl	0 <__assert_fail>
    ceb0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ceb4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ceb8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cebc:	add	x3, x3, #0x0
    cec0:	add	x1, x1, #0x0
    cec4:	add	x0, x0, #0x0
    cec8:	mov	w2, #0x43                  	// #67
    cecc:	bl	0 <__assert_fail>
    ced0:	bl	28 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm.isra.0.part.0>
    ced4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ced8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cedc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cee0:	add	x3, x3, #0x0
    cee4:	add	x1, x1, #0x0
    cee8:	add	x0, x0, #0x0
    ceec:	mov	w2, #0x108                 	// #264
    cef0:	bl	0 <__assert_fail>
    cef4:	bl	f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    cef8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cefc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cf00:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cf04:	add	x3, x3, #0x0
    cf08:	add	x1, x1, #0x0
    cf0c:	add	x0, x0, #0x0
    cf10:	mov	w2, #0x15b                 	// #347
    cf14:	bl	0 <__assert_fail>
    cf18:	add	x0, x25, #0x58
    cf1c:	mov	x1, #0x0                   	// #0
    cf20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    cf24:	ldp	w5, w0, [x25, #96]
    cf28:	mov	w1, #0x18                  	// #24
    cf2c:	ldr	x2, [x25, #88]
    cf30:	mov	w4, w5
    cf34:	umaddl	x1, w5, w1, x2
    cf38:	b	cd74 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xcc4>
    cf3c:	mov	x1, #0x0                   	// #0
    cf40:	str	x0, [x1]
    cf44:	brk	#0x3e8
    cf48:	mov	x0, #0x0                   	// #0
    cf4c:	ldr	x0, [x0, #16]
    cf50:	brk	#0x3e8
    cf54:	nop

000000000000cf58 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>:
    cf58:	mov	x3, x1
    cf5c:	ldr	x1, [x1]
    cf60:	cbz	x1, cf68 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x10>
    cf64:	b	c0b0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>
    cf68:	stp	x29, x30, [sp, #-48]!
    cf6c:	mov	x29, sp
    cf70:	stp	x19, x20, [sp, #16]
    cf74:	mov	x20, x0
    cf78:	ldr	x0, [x3, #8]
    cf7c:	stp	x21, x22, [sp, #32]
    cf80:	mov	x21, x2
    cf84:	ldp	x19, x22, [x0, #24]
    cf88:	cmp	x19, x22
    cf8c:	b.eq	cfb4 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x5c>  // b.none
    cf90:	mov	x1, x19
    cf94:	mov	x2, x21
    cf98:	mov	x0, x20
    cf9c:	add	x19, x19, #0x10
    cfa0:	bl	cf58 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>
    cfa4:	ands	w0, w0, #0xff
    cfa8:	b.ne	cfb8 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x60>  // b.any
    cfac:	cmp	x22, x19
    cfb0:	b.ne	cf90 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x38>  // b.any
    cfb4:	mov	w0, #0x0                   	// #0
    cfb8:	ldp	x19, x20, [sp, #16]
    cfbc:	ldp	x21, x22, [sp, #32]
    cfc0:	ldp	x29, x30, [sp], #48
    cfc4:	ret

000000000000cfc8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE>:
    cfc8:	sub	sp, sp, #0x360
    cfcc:	stp	x29, x30, [sp]
    cfd0:	mov	x29, sp
    cfd4:	str	x1, [sp, #120]
    cfd8:	ldr	w1, [x0, #40]
    cfdc:	stp	x19, x20, [sp, #16]
    cfe0:	cmp	w1, #0x1a
    cfe4:	b.ne	dd94 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xdcc>  // b.any
    cfe8:	ldp	x1, x2, [x0, #8]
    cfec:	mov	x19, x0
    cff0:	cmp	x2, x1
    cff4:	cset	w1, eq  // eq = none
    cff8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    cffc:	str	w0, [x19, #40]
    d000:	ldr	x1, [sp, #120]
    d004:	mov	x0, x19
    d008:	bl	b4f8 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>
    d00c:	str	x0, [sp, #128]
    d010:	cbz	x0, d880 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8b8>
    d014:	ldrb	w0, [x0, #8]
    d018:	stp	x21, x22, [sp, #32]
    d01c:	cmp	w0, #0x18
    d020:	b.eq	d898 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8d0>  // b.none
    d024:	ldr	w0, [x19, #40]
    d028:	cmp	w0, #0xc
    d02c:	b.eq	d080 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb8>  // b.none
    d030:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d034:	add	x1, x1, #0x0
    d038:	add	x21, sp, #0x2d0
    d03c:	mov	w20, #0x1                   	// #1
    d040:	mov	x0, x21
    d044:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d048:	mov	x0, x19
    d04c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d050:	mov	x3, x0
    d054:	mov	x2, x21
    d058:	add	x0, sp, #0x288
    d05c:	mov	x1, #0x1                   	// #1
    d060:	str	x3, [sp, #648]
    d064:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d068:	mov	w0, w20
    d06c:	ldp	x29, x30, [sp]
    d070:	ldp	x19, x20, [sp, #16]
    d074:	ldp	x21, x22, [sp, #32]
    d078:	add	sp, sp, #0x360
    d07c:	ret
    d080:	ldp	x1, x2, [x19, #8]
    d084:	add	x20, sp, #0x240
    d088:	mov	x0, x19
    d08c:	stp	x23, x24, [sp, #48]
    d090:	stp	x27, x28, [sp, #80]
    d094:	cmp	x2, x1
    d098:	str	x20, [sp, #144]
    d09c:	cset	w1, eq  // eq = none
    d0a0:	stp	xzr, xzr, [sp, #192]
    d0a4:	str	xzr, [sp, #208]
    d0a8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d0ac:	str	w0, [x19, #40]
    d0b0:	mov	x0, x19
    d0b4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d0b8:	mov	x3, x0
    d0bc:	mov	x8, x20
    d0c0:	mov	x0, x19
    d0c4:	mov	w2, #0x1                   	// #1
    d0c8:	mov	x1, #0x0                   	// #0
    d0cc:	str	x3, [sp, #176]
    d0d0:	bl	a178 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    d0d4:	ldr	x0, [sp, #592]
    d0d8:	cbz	x0, d4cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x504>
    d0dc:	add	x1, sp, #0x288
    d0e0:	add	x21, sp, #0x2d0
    d0e4:	str	x1, [sp, #136]
    d0e8:	add	x1, sp, #0x2a0
    d0ec:	add	x2, x21, #0x10
    d0f0:	stp	x25, x26, [sp, #64]
    d0f4:	str	x2, [sp, #152]
    d0f8:	str	x1, [sp, #168]
    d0fc:	add	x1, sp, #0xb0
    d100:	str	x1, [sp, #160]
    d104:	ldr	x0, [x0]
    d108:	cbz	x0, dd90 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xdc8>
    d10c:	ldrb	w1, [x0, #8]
    d110:	cmp	w1, #0x12
    d114:	b.ne	dd50 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xd88>  // b.any
    d118:	ldr	x1, [x0, #24]
    d11c:	cbz	x1, d59c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5d4>
    d120:	ldr	x4, [sp, #152]
    d124:	mov	w3, #0x0                   	// #0
    d128:	ldr	x2, [x0, #32]
    d12c:	mov	x0, x21
    d130:	str	x4, [sp, #720]
    d134:	add	x2, x1, x2
    d138:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d13c:	ldr	x27, [x19, #240]
    d140:	add	x26, x19, #0xe8
    d144:	mov	x20, x26
    d148:	cbz	x27, d4f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x52c>
    d14c:	ldr	x22, [sp, #720]
    d150:	mov	x23, #0x7fffffff            	// #2147483647
    d154:	ldr	x24, [sp, #728]
    d158:	mov	x25, #0xffffffff80000000    	// #-2147483648
    d15c:	nop
    d160:	ldr	x28, [x27, #40]
    d164:	cmp	x28, x24
    d168:	csel	x2, x28, x24, ls  // ls = plast
    d16c:	cbz	x2, d180 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1b8>
    d170:	ldr	x0, [x27, #32]
    d174:	mov	x1, x22
    d178:	bl	0 <memcmp>
    d17c:	cbnz	w0, d194 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1cc>
    d180:	sub	x0, x28, x24
    d184:	cmp	x0, x23
    d188:	b.gt	d198 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1d0>
    d18c:	cmp	x0, x25
    d190:	b.lt	d33c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x374>  // b.tstop
    d194:	tbnz	w0, #31, d33c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x374>
    d198:	mov	x20, x27
    d19c:	ldr	x27, [x27, #16]
    d1a0:	cbnz	x27, d160 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x198>
    d1a4:	cmp	x26, x20
    d1a8:	b.eq	d4f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x52c>  // b.none
    d1ac:	add	x1, x20, #0x20
    d1b0:	mov	x0, x21
    d1b4:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
    d1b8:	tbnz	w0, #31, d4f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x52c>
    d1bc:	add	x0, x21, #0x10
    d1c0:	cmp	x22, x0
    d1c4:	ldr	x28, [x20, #64]
    d1c8:	b.eq	d1d4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x20c>  // b.none
    d1cc:	mov	x0, x22
    d1d0:	bl	0 <_ZdlPv>
    d1d4:	cbz	x28, dd70 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xda8>
    d1d8:	ldr	w26, [x28, #64]
    d1dc:	ldr	w20, [sp, #608]
    d1e0:	mov	w22, w26
    d1e4:	ldr	x25, [x28, #56]
    d1e8:	cmp	x20, w26, uxtw
    d1ec:	ldr	x27, [sp, #600]
    d1f0:	b.hi	daac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xae4>  // b.pmore
    d1f4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d1f8:	mov	x23, #0x0                   	// #0
    d1fc:	ldr	d0, [x0]
    d200:	add	x0, x21, #0x10
    d204:	str	x0, [sp, #720]
    d208:	str	d0, [sp, #728]
    d20c:	cbnz	w26, d270 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2a8>
    d210:	b	d360 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x398>
    d214:	cmp	x22, x23
    d218:	b.ls	dc6c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xca4>  // b.plast
    d21c:	ldr	w0, [sp, #728]
    d220:	ldr	w2, [sp, #732]
    d224:	cmp	w0, w2
    d228:	b.cs	d348 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x380>  // b.hs, b.nlast
    d22c:	ldr	x7, [sp, #720]
    d230:	ubfiz	x1, x0, #4, #32
    d234:	ldr	x9, [x25, x23, lsl #3]
    d238:	add	x8, x7, x1
    d23c:	str	x9, [x7, x1]
    d240:	mov	w1, w0
    d244:	add	x1, x1, #0x1
    d248:	ldr	x7, [x27, x23, lsl #3]
    d24c:	str	x7, [x8, #8]
    d250:	cmp	x1, w2, uxtw
    d254:	b.hi	d31c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x354>  // b.pmore
    d258:	add	w0, w0, #0x1
    d25c:	str	w0, [sp, #728]
    d260:	cbz	w0, dba0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbd8>
    d264:	add	x23, x23, #0x1
    d268:	cmp	w26, w23
    d26c:	b.eq	d360 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x398>  // b.none
    d270:	cmp	x20, x23
    d274:	mov	w24, w23
    d278:	b.hi	d214 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x24c>  // b.pmore
    d27c:	cmp	x22, x23
    d280:	b.ls	dd4c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xd84>  // b.plast
    d284:	ldr	w2, [x28, #80]
    d288:	mov	w1, #0x18                  	// #24
    d28c:	ldr	x0, [x28, #72]
    d290:	add	x4, x25, x23, lsl #3
    d294:	ldr	x8, [x25, x23, lsl #3]
    d298:	umaddl	x2, w2, w1, x0
    d29c:	cmp	x0, x2
    d2a0:	b.ne	d2b4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2ec>  // b.any
    d2a4:	b	dde4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xe1c>
    d2a8:	add	x0, x0, #0x18
    d2ac:	cmp	x2, x0
    d2b0:	b.eq	dde4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xe1c>  // b.none
    d2b4:	ldr	x1, [x0]
    d2b8:	cmp	x8, x1
    d2bc:	b.ne	d2a8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2e0>  // b.any
    d2c0:	ldr	x2, [x0, #16]
    d2c4:	stp	x2, x4, [sp, #104]
    d2c8:	mov	x0, x2
    d2cc:	ldr	x1, [x2]
    d2d0:	ldr	x1, [x1, #24]
    d2d4:	blr	x1
    d2d8:	tst	w0, #0xff
    d2dc:	ldp	x2, x4, [sp, #104]
    d2e0:	b.eq	d5c0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5f8>  // b.none
    d2e4:	ldr	w0, [sp, #728]
    d2e8:	ldr	w7, [sp, #732]
    d2ec:	cmp	w0, w7
    d2f0:	b.cs	d4d4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x50c>  // b.hs, b.nlast
    d2f4:	ldr	x8, [sp, #720]
    d2f8:	ubfiz	x1, x0, #4, #32
    d2fc:	ldr	x10, [x25, x23, lsl #3]
    d300:	add	x9, x8, x1
    d304:	str	x10, [x8, x1]
    d308:	mov	w1, w0
    d30c:	add	x1, x1, #0x1
    d310:	str	x2, [x9, #8]
    d314:	cmp	x1, w7, uxtw
    d318:	b.ls	d258 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x290>  // b.plast
    d31c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d320:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d324:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d328:	add	x3, x3, #0x0
    d32c:	add	x1, x1, #0x0
    d330:	add	x0, x0, #0x0
    d334:	mov	w2, #0x43                  	// #67
    d338:	bl	0 <__assert_fail>
    d33c:	ldr	x27, [x27, #24]
    d340:	cbnz	x27, d160 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x198>
    d344:	b	d1a4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1dc>
    d348:	mov	x0, x21
    d34c:	mov	x1, #0x0                   	// #0
    d350:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d354:	ldr	w0, [sp, #728]
    d358:	ldr	w2, [sp, #732]
    d35c:	b	d22c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x264>
    d360:	mov	x1, x28
    d364:	mov	x0, x28
    d368:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    d36c:	mov	x20, x0
    d370:	ldr	w1, [sp, #728]
    d374:	ldr	w0, [sp, #732]
    d378:	cmp	w1, w0
    d37c:	b.cs	da80 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xab8>  // b.hs, b.nlast
    d380:	ldr	x4, [sp, #720]
    d384:	ubfiz	x3, x1, #4, #32
    d388:	mov	w2, w1
    d38c:	add	x6, x4, x3
    d390:	add	x2, x2, #0x1
    d394:	cmp	x2, w0, uxtw
    d398:	str	x20, [x4, x3]
    d39c:	ldr	x0, [sp, #128]
    d3a0:	str	x0, [x6, #8]
    d3a4:	b.hi	d31c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x354>  // b.pmore
    d3a8:	add	w1, w1, #0x1
    d3ac:	str	w1, [sp, #728]
    d3b0:	cbz	w1, dba0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbd8>
    d3b4:	ldr	x0, [sp, #120]
    d3b8:	add	x1, x28, #0x80
    d3bc:	ldr	x5, [sp, #160]
    d3c0:	cmp	x0, #0x0
    d3c4:	cset	w3, eq  // eq = none
    d3c8:	add	x4, sp, #0xc0
    d3cc:	mov	x2, x21
    d3d0:	mov	x0, x19
    d3d4:	bl	2438 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    d3d8:	ands	w20, w0, #0xff
    d3dc:	b.ne	d758 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x790>  // b.any
    d3e0:	ldr	w0, [x19, #40]
    d3e4:	cmp	w0, #0xe
    d3e8:	b.ne	dbc0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbf8>  // b.any
    d3ec:	ldp	x2, x1, [x19, #8]
    d3f0:	mov	x0, x19
    d3f4:	cmp	x2, x1
    d3f8:	cset	w1, eq  // eq = none
    d3fc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d400:	str	w0, [x19, #40]
    d404:	cmp	w0, #0x48
    d408:	b.ne	db78 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbb0>  // b.any
    d40c:	mov	x0, x19
    d410:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d414:	ldr	w1, [x19, #40]
    d418:	str	x0, [sp, #176]
    d41c:	sub	w1, w1, #0x48
    d420:	cmp	w1, #0x3
    d424:	ldr	x23, [x19, #344]
    d428:	b.hi	ddc4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xdfc>  // b.pmore
    d42c:	ldp	x3, x2, [x19, #48]
    d430:	mov	x0, x23
    d434:	ldr	x1, [sp, #136]
    d438:	add	x23, x23, #0x8
    d43c:	str	x3, [sp, #648]
    d440:	str	x2, [sp, #656]
    d444:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d448:	cmp	x0, x23
    d44c:	b.eq	d458 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x490>  // b.none
    d450:	ldr	x0, [x0, #64]
    d454:	cbnz	x0, dae0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb18>
    d458:	ldr	x20, [sp, #136]
    d45c:	mov	x0, x19
    d460:	mov	w2, #0x1                   	// #1
    d464:	mov	x1, #0x0                   	// #0
    d468:	mov	x8, x20
    d46c:	bl	a178 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    d470:	add	x0, sp, #0x250
    d474:	add	x3, sp, #0x200
    d478:	ldr	x1, [sp, #168]
    d47c:	ldp	x4, x5, [x0, #56]
    d480:	stp	x4, x5, [x3, #64]
    d484:	ldr	x2, [sp, #664]
    d488:	str	x2, [sp, #592]
    d48c:	ldr	x0, [sp, #144]
    d490:	add	x0, x0, #0x18
    d494:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d498:	ldr	x0, [sp, #672]
    d49c:	add	x1, x20, #0x28
    d4a0:	cmp	x0, x1
    d4a4:	b.eq	d4ac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4e4>  // b.none
    d4a8:	bl	0 <free>
    d4ac:	ldr	x0, [sp, #720]
    d4b0:	add	x1, x21, #0x10
    d4b4:	cmp	x0, x1
    d4b8:	b.eq	d5b0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5e8>  // b.none
    d4bc:	bl	0 <free>
    d4c0:	ldr	x0, [sp, #592]
    d4c4:	cbnz	x0, d104 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x13c>
    d4c8:	ldp	x25, x26, [sp, #64]
    d4cc:	mov	w20, #0x1                   	// #1
    d4d0:	b	d770 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7a8>
    d4d4:	mov	x0, x21
    d4d8:	mov	x1, #0x0                   	// #0
    d4dc:	str	x2, [sp, #104]
    d4e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d4e4:	ldr	w0, [sp, #728]
    d4e8:	ldr	w7, [sp, #732]
    d4ec:	ldr	x2, [sp, #104]
    d4f0:	b	d2f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x32c>
    d4f4:	mov	x0, #0x48                  	// #72
    d4f8:	bl	0 <_Znwm>
    d4fc:	mov	x1, x20
    d500:	mov	x20, x0
    d504:	ldr	x3, [sp, #720]
    d508:	add	x24, x20, #0x30
    d50c:	str	x24, [x20, #32]
    d510:	add	x0, x21, #0x10
    d514:	add	x27, x20, #0x20
    d518:	cmp	x3, x0
    d51c:	b.eq	da48 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa80>  // b.none
    d520:	ldr	x0, [sp, #736]
    d524:	str	x3, [x20, #32]
    d528:	str	x0, [x20, #48]
    d52c:	add	x3, x21, #0x10
    d530:	str	xzr, [x20, #64]
    d534:	ldr	x0, [sp, #728]
    d538:	str	x0, [x20, #40]
    d53c:	add	x25, x19, #0xe0
    d540:	mov	x2, x27
    d544:	mov	x0, x25
    d548:	str	x3, [sp, #720]
    d54c:	str	xzr, [sp, #728]
    d550:	strb	wzr, [sp, #736]
    d554:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d558:	mov	x23, x1
    d55c:	mov	x22, x0
    d560:	cbz	x1, d8d8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x910>
    d564:	cmp	x0, #0x0
    d568:	cset	w0, ne  // ne = any
    d56c:	cmp	x26, x1
    d570:	csinc	w0, w0, wzr, ne  // ne = any
    d574:	cbz	w0, da98 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xad0>
    d578:	mov	x3, x26
    d57c:	mov	x2, x23
    d580:	mov	x1, x20
    d584:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
    d588:	ldr	x0, [x25, #40]
    d58c:	ldr	x22, [sp, #720]
    d590:	add	x0, x0, #0x1
    d594:	str	x0, [x25, #40]
    d598:	b	d1bc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1f4>
    d59c:	ldr	x0, [sp, #152]
    d5a0:	str	x0, [sp, #720]
    d5a4:	str	xzr, [sp, #728]
    d5a8:	strb	wzr, [sp, #736]
    d5ac:	b	d13c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x174>
    d5b0:	ldr	x0, [sp, #592]
    d5b4:	cbnz	x0, d104 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x13c>
    d5b8:	ldp	x25, x26, [sp, #64]
    d5bc:	b	d4cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x504>
    d5c0:	add	x19, sp, #0x100
    d5c4:	add	x20, sp, #0x118
    d5c8:	mov	x0, x19
    d5cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d5d0:	add	x1, x1, #0x0
    d5d4:	str	x4, [sp, #104]
    d5d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d5dc:	stp	xzr, xzr, [sp, #224]
    d5e0:	mov	w2, #0x109                 	// #265
    d5e4:	mov	x8, x20
    d5e8:	add	x22, sp, #0x130
    d5ec:	mov	x0, x19
    d5f0:	add	x1, sp, #0xe0
    d5f4:	str	w24, [sp, #224]
    d5f8:	add	x19, sp, #0x148
    d5fc:	strh	w2, [sp, #240]
    d600:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d604:	mov	x0, x22
    d608:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d60c:	add	x1, x1, #0x0
    d610:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d614:	mov	x3, x19
    d618:	mov	x1, x22
    d61c:	mov	x0, x20
    d620:	mov	x8, x19
    d624:	str	x3, [sp, #120]
    d628:	add	x20, sp, #0x220
    d62c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d630:	add	x27, sp, #0x178
    d634:	ldr	x4, [sp, #104]
    d638:	add	x2, sp, #0x190
    d63c:	mov	x8, x20
    d640:	add	x25, sp, #0x1a8
    d644:	add	x19, sp, #0x288
    d648:	add	x26, sp, #0x1c0
    d64c:	ldr	x0, [x4]
    d650:	add	x4, sp, #0x160
    d654:	stp	x4, x2, [sp, #104]
    d658:	add	x23, sp, #0x1d8
    d65c:	add	x24, sp, #0x1f0
    d660:	ldr	x1, [x0]
    d664:	add	x22, sp, #0x208
    d668:	ldr	x1, [x1, #48]
    d66c:	blr	x1
    d670:	ldr	x4, [sp, #104]
    d674:	mov	x1, x20
    d678:	mov	x0, x4
    d67c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d680:	ldr	x3, [sp, #120]
    d684:	mov	x8, x27
    d688:	ldr	x0, [sp, #104]
    d68c:	mov	x1, x0
    d690:	mov	x0, x3
    d694:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d698:	ldr	x2, [sp, #112]
    d69c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6a0:	add	x1, x1, #0x0
    d6a4:	str	x2, [sp, #104]
    d6a8:	mov	x0, x2
    d6ac:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6b0:	ldr	x0, [sp, #104]
    d6b4:	mov	x8, x25
    d6b8:	mov	x1, x0
    d6bc:	mov	x0, x27
    d6c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6c4:	ldr	x0, [x28]
    d6c8:	mov	x8, x19
    d6cc:	ldr	x1, [x0]
    d6d0:	ldr	x1, [x1, #48]
    d6d4:	blr	x1
    d6d8:	mov	x1, x19
    d6dc:	mov	x0, x26
    d6e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6e4:	add	x19, x19, #0x10
    d6e8:	mov	x8, x23
    d6ec:	mov	x1, x26
    d6f0:	mov	x0, x25
    d6f4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d6f8:	mov	x0, x24
    d6fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d700:	add	x1, x1, #0x0
    d704:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d708:	mov	x8, x22
    d70c:	mov	x1, x24
    d710:	mov	x0, x23
    d714:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d718:	ldr	x3, [sp, #176]
    d71c:	add	x0, sp, #0xb8
    d720:	mov	x2, x22
    d724:	mov	x1, #0x1                   	// #1
    d728:	str	x3, [sp, #184]
    d72c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d730:	ldr	x0, [sp, #648]
    d734:	cmp	x0, x19
    d738:	b.eq	d740 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x778>  // b.none
    d73c:	bl	0 <_ZdlPv>
    d740:	ldr	x0, [sp, #544]
    d744:	add	x20, x20, #0x10
    d748:	cmp	x0, x20
    d74c:	b.eq	d754 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x78c>  // b.none
    d750:	bl	0 <_ZdlPv>
    d754:	mov	w20, #0x1                   	// #1
    d758:	ldr	x0, [sp, #720]
    d75c:	add	x21, x21, #0x10
    d760:	cmp	x0, x21
    d764:	b.eq	da78 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xab0>  // b.none
    d768:	bl	0 <free>
    d76c:	ldp	x25, x26, [sp, #64]
    d770:	ldr	x1, [sp, #144]
    d774:	ldr	x0, [sp, #600]
    d778:	add	x28, x1, #0x28
    d77c:	cmp	x0, x28
    d780:	b.eq	d788 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7c0>  // b.none
    d784:	bl	0 <free>
    d788:	ldp	x22, x24, [sp, #192]
    d78c:	cmp	x22, x24
    d790:	b.eq	d854 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x88c>  // b.none
    d794:	nop
    d798:	ldr	x23, [x22, #8]
    d79c:	cbz	x23, d7e0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x818>
    d7a0:	ldp	x19, x21, [x23, #24]
    d7a4:	cmp	x19, x21
    d7a8:	b.eq	d7c8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x800>  // b.none
    d7ac:	nop
    d7b0:	mov	x0, x19
    d7b4:	add	x19, x19, #0x10
    d7b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d7bc:	cmp	x21, x19
    d7c0:	b.ne	d7b0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7e8>  // b.any
    d7c4:	ldr	x21, [x23, #24]
    d7c8:	cbz	x21, d7d4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x80c>
    d7cc:	mov	x0, x21
    d7d0:	bl	0 <_ZdlPv>
    d7d4:	mov	x0, x23
    d7d8:	mov	x1, #0x30                  	// #48
    d7dc:	bl	0 <_ZdlPvm>
    d7e0:	ldr	x19, [x22]
    d7e4:	cbz	x19, d844 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x87c>
    d7e8:	ldr	x0, [x19, #88]
    d7ec:	add	x1, x19, #0x68
    d7f0:	add	x23, x19, #0x58
    d7f4:	cmp	x0, x1
    d7f8:	b.eq	d800 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x838>  // b.none
    d7fc:	bl	0 <free>
    d800:	ldr	x0, [x19, #72]
    d804:	add	x21, x19, #0x48
    d808:	cmp	x23, x0
    d80c:	b.eq	d814 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x84c>  // b.none
    d810:	bl	0 <free>
    d814:	ldr	x0, [x19, #56]
    d818:	cmp	x21, x0
    d81c:	b.eq	d824 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x85c>  // b.none
    d820:	bl	0 <free>
    d824:	ldr	x0, [x19, #8]
    d828:	add	x1, x19, #0x18
    d82c:	cmp	x0, x1
    d830:	b.eq	d838 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x870>  // b.none
    d834:	bl	0 <free>
    d838:	mov	x0, x19
    d83c:	mov	x1, #0x80                  	// #128
    d840:	bl	0 <_ZdlPvm>
    d844:	add	x22, x22, #0x10
    d848:	cmp	x24, x22
    d84c:	b.ne	d798 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7d0>  // b.any
    d850:	ldr	x24, [sp, #192]
    d854:	cbz	x24, da58 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa90>
    d858:	mov	x0, x24
    d85c:	bl	0 <_ZdlPv>
    d860:	mov	w0, w20
    d864:	ldp	x29, x30, [sp]
    d868:	ldp	x19, x20, [sp, #16]
    d86c:	ldp	x21, x22, [sp, #32]
    d870:	ldp	x23, x24, [sp, #48]
    d874:	ldp	x27, x28, [sp, #80]
    d878:	add	sp, sp, #0x360
    d87c:	ret
    d880:	mov	w20, #0x1                   	// #1
    d884:	mov	w0, w20
    d888:	ldp	x29, x30, [sp]
    d88c:	ldp	x19, x20, [sp, #16]
    d890:	add	sp, sp, #0x360
    d894:	ret
    d898:	ldr	x0, [x19, #344]
    d89c:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    d8a0:	str	x0, [sp, #128]
    d8a4:	ldr	x2, [sp, #120]
    d8a8:	mov	x20, x0
    d8ac:	cbz	x2, d024 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5c>
    d8b0:	mov	x1, x2
    d8b4:	mov	x0, x2
    d8b8:	bl	250 <_ZL27QualifiedNameOfImplicitNameRN4llvm6RecordEPNS_10MultiClassE>
    d8bc:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    d8c0:	ldr	x1, [x1]
    d8c4:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    d8c8:	mov	x1, x20
    d8cc:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    d8d0:	str	x0, [sp, #128]
    d8d4:	b	d024 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5c>
    d8d8:	ldr	x27, [x20, #64]
    d8dc:	cbz	x27, da24 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa5c>
    d8e0:	ldp	x25, x0, [x27, #128]
    d8e4:	str	x0, [sp, #104]
    d8e8:	cmp	x25, x0
    d8ec:	b.eq	d9bc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9f4>  // b.none
    d8f0:	ldr	x26, [x25, #8]
    d8f4:	cbz	x26, d938 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x970>
    d8f8:	ldp	x28, x23, [x26, #24]
    d8fc:	cmp	x28, x23
    d900:	b.eq	d920 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x958>  // b.none
    d904:	nop
    d908:	mov	x0, x28
    d90c:	add	x28, x28, #0x10
    d910:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    d914:	cmp	x23, x28
    d918:	b.ne	d908 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x940>  // b.any
    d91c:	ldr	x23, [x26, #24]
    d920:	cbz	x23, d92c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x964>
    d924:	mov	x0, x23
    d928:	bl	0 <_ZdlPv>
    d92c:	mov	x0, x26
    d930:	mov	x1, #0x30                  	// #48
    d934:	bl	0 <_ZdlPvm>
    d938:	ldr	x23, [x25]
    d93c:	cbz	x23, d9a4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9dc>
    d940:	ldr	x0, [x23, #88]
    d944:	add	x1, x23, #0x68
    d948:	add	x2, x23, #0x58
    d94c:	cmp	x0, x1
    d950:	b.eq	d960 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x998>  // b.none
    d954:	str	x2, [sp, #112]
    d958:	bl	0 <free>
    d95c:	ldr	x2, [sp, #112]
    d960:	add	x26, x23, #0x48
    d964:	ldr	x0, [x23, #72]
    d968:	cmp	x2, x0
    d96c:	b.eq	d974 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9ac>  // b.none
    d970:	bl	0 <free>
    d974:	ldr	x0, [x23, #56]
    d978:	cmp	x26, x0
    d97c:	b.eq	d984 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9bc>  // b.none
    d980:	bl	0 <free>
    d984:	ldr	x0, [x23, #8]
    d988:	add	x1, x23, #0x18
    d98c:	cmp	x0, x1
    d990:	b.eq	d998 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9d0>  // b.none
    d994:	bl	0 <free>
    d998:	mov	x0, x23
    d99c:	mov	x1, #0x80                  	// #128
    d9a0:	bl	0 <_ZdlPvm>
    d9a4:	ldr	x0, [sp, #104]
    d9a8:	add	x25, x25, #0x10
    d9ac:	cmp	x0, x25
    d9b0:	b.ne	d8f0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x928>  // b.any
    d9b4:	ldr	x0, [x27, #128]
    d9b8:	str	x0, [sp, #104]
    d9bc:	ldr	x0, [sp, #104]
    d9c0:	cbz	x0, d9c8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa00>
    d9c4:	bl	0 <_ZdlPv>
    d9c8:	ldr	x0, [x27, #88]
    d9cc:	add	x1, x27, #0x68
    d9d0:	add	x25, x27, #0x58
    d9d4:	cmp	x0, x1
    d9d8:	b.eq	d9e0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa18>  // b.none
    d9dc:	bl	0 <free>
    d9e0:	ldr	x0, [x27, #72]
    d9e4:	add	x23, x27, #0x48
    d9e8:	cmp	x25, x0
    d9ec:	b.eq	d9f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa2c>  // b.none
    d9f0:	bl	0 <free>
    d9f4:	ldr	x0, [x27, #56]
    d9f8:	cmp	x23, x0
    d9fc:	b.eq	da04 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa3c>  // b.none
    da00:	bl	0 <free>
    da04:	ldr	x0, [x27, #8]
    da08:	add	x1, x27, #0x18
    da0c:	cmp	x0, x1
    da10:	b.eq	da18 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa50>  // b.none
    da14:	bl	0 <free>
    da18:	mov	x0, x27
    da1c:	mov	x1, #0x98                  	// #152
    da20:	bl	0 <_ZdlPvm>
    da24:	ldr	x0, [x20, #32]
    da28:	cmp	x24, x0
    da2c:	b.eq	da34 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa6c>  // b.none
    da30:	bl	0 <_ZdlPv>
    da34:	mov	x0, x20
    da38:	mov	x20, x22
    da3c:	bl	0 <_ZdlPv>
    da40:	ldr	x22, [sp, #720]
    da44:	b	d1bc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1f4>
    da48:	add	x0, sp, #0x250
    da4c:	ldp	x4, x5, [x0, #144]
    da50:	stp	x4, x5, [x20, #48]
    da54:	b	d52c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x564>
    da58:	mov	w0, w20
    da5c:	ldp	x29, x30, [sp]
    da60:	ldp	x19, x20, [sp, #16]
    da64:	ldp	x21, x22, [sp, #32]
    da68:	ldp	x23, x24, [sp, #48]
    da6c:	ldp	x27, x28, [sp, #80]
    da70:	add	sp, sp, #0x360
    da74:	ret
    da78:	ldp	x25, x26, [sp, #64]
    da7c:	b	d770 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7a8>
    da80:	mov	x0, x21
    da84:	mov	x1, #0x0                   	// #0
    da88:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    da8c:	ldr	w1, [sp, #728]
    da90:	ldr	w0, [sp, #732]
    da94:	b	d380 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x3b8>
    da98:	mov	x0, x27
    da9c:	add	x1, x1, #0x20
    daa0:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
    daa4:	lsr	w0, w0, #31
    daa8:	b	d578 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5b0>
    daac:	mov	x0, x21
    dab0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dab4:	add	x1, x1, #0x0
    dab8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dabc:	ldr	x3, [sp, #176]
    dac0:	mov	x2, x21
    dac4:	add	x0, sp, #0x288
    dac8:	mov	x1, #0x1                   	// #1
    dacc:	mov	w20, #0x1                   	// #1
    dad0:	str	x3, [sp, #648]
    dad4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    dad8:	ldp	x25, x26, [sp, #64]
    dadc:	b	d770 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7a8>
    dae0:	ldr	x0, [sp, #720]
    dae4:	add	x1, x21, #0x10
    dae8:	cmp	x0, x1
    daec:	b.eq	daf4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb2c>  // b.none
    daf0:	bl	0 <free>
    daf4:	ldr	x22, [sp, #136]
    daf8:	mov	x0, x19
    dafc:	mov	w2, #0x0                   	// #0
    db00:	mov	x1, #0x0                   	// #0
    db04:	mov	x8, x22
    db08:	bl	a178 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    db0c:	ldr	x0, [sp, #664]
    db10:	cbz	x0, db54 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb8c>
    db14:	add	x26, x21, #0x18
    db18:	add	x25, x22, #0x18
    db1c:	add	x24, x21, #0x28
    db20:	ldp	x22, x23, [sp, #192]
    db24:	cmp	x23, x22
    db28:	b.ne	db3c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb74>  // b.any
    db2c:	b	dc8c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xcc4>
    db30:	add	x22, x22, #0x10
    db34:	cmp	x23, x22
    db38:	b.eq	dc8c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xcc4>  // b.none
    db3c:	ldr	x2, [sp, #136]
    db40:	mov	x1, x22
    db44:	mov	x0, x19
    db48:	bl	cf58 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>
    db4c:	tst	w0, #0xff
    db50:	b.eq	db30 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb68>  // b.none
    db54:	ldr	x1, [sp, #136]
    db58:	ldr	x0, [sp, #672]
    db5c:	add	x27, x1, #0x28
    db60:	cmp	x0, x27
    db64:	b.eq	db6c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xba4>  // b.none
    db68:	bl	0 <free>
    db6c:	mov	w20, #0x1                   	// #1
    db70:	ldp	x25, x26, [sp, #64]
    db74:	b	d770 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7a8>
    db78:	add	x20, sp, #0x288
    db7c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    db80:	mov	x0, x20
    db84:	add	x1, x1, #0x0
    db88:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    db8c:	mov	x1, x20
    db90:	mov	x0, x19
    db94:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    db98:	and	w20, w0, #0xff
    db9c:	b	d758 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x790>
    dba0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dba4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dba8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dbac:	add	x3, x3, #0x0
    dbb0:	add	x1, x1, #0x0
    dbb4:	add	x0, x0, #0x0
    dbb8:	mov	w2, #0xa7                  	// #167
    dbbc:	bl	0 <__assert_fail>
    dbc0:	ldr	x0, [sp, #720]
    dbc4:	add	x1, x21, #0x10
    dbc8:	cmp	x0, x1
    dbcc:	b.eq	dbd4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc0c>  // b.none
    dbd0:	bl	0 <free>
    dbd4:	ldp	x22, x23, [sp, #192]
    dbd8:	cmp	x23, x22
    dbdc:	b.ne	dc18 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc50>  // b.any
    dbe0:	b	dc38 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc70>
    dbe4:	ldp	x0, x2, [x22]
    dbe8:	str	xzr, [x22]
    dbec:	str	x0, [sp, #720]
    dbf0:	mov	x1, x21
    dbf4:	str	xzr, [x22, #8]
    dbf8:	mov	x0, x19
    dbfc:	str	x2, [sp, #728]
    dc00:	add	x22, x22, #0x10
    dc04:	bl	3e00 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    dc08:	mov	x0, x21
    dc0c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dc10:	cmp	x23, x22
    dc14:	b.eq	dc38 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc70>  // b.none
    dc18:	mov	x1, x22
    dc1c:	mov	x0, x19
    dc20:	bl	16c0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>
    dc24:	ands	w0, w0, #0xff
    dc28:	b.eq	dbe4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc1c>  // b.none
    dc2c:	mov	w20, w0
    dc30:	ldp	x25, x26, [sp, #64]
    dc34:	b	d770 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7a8>
    dc38:	ldr	w0, [x19, #40]
    dc3c:	cmp	w0, #0xd
    dc40:	b.eq	dd2c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xd64>  // b.none
    dc44:	mov	x0, x21
    dc48:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dc4c:	add	x1, x1, #0x0
    dc50:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dc54:	mov	x1, x21
    dc58:	mov	x0, x19
    dc5c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dc60:	and	w20, w0, #0xff
    dc64:	ldp	x25, x26, [sp, #64]
    dc68:	b	d770 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7a8>
    dc6c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dc70:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dc74:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dc78:	add	x3, x3, #0x0
    dc7c:	add	x1, x1, #0x0
    dc80:	add	x0, x0, #0x0
    dc84:	mov	w2, #0xfa                  	// #250
    dc88:	bl	0 <__assert_fail>
    dc8c:	ldr	w0, [x19, #40]
    dc90:	cmp	w0, #0xe
    dc94:	b.ne	dd10 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xd48>  // b.any
    dc98:	ldp	x2, x1, [x19, #8]
    dc9c:	mov	x0, x19
    dca0:	cmp	x2, x1
    dca4:	cset	w1, eq  // eq = none
    dca8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dcac:	str	w0, [x19, #40]
    dcb0:	mov	x8, x21
    dcb4:	mov	x0, x19
    dcb8:	mov	w2, #0x0                   	// #0
    dcbc:	mov	x1, #0x0                   	// #0
    dcc0:	bl	a178 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    dcc4:	add	x0, sp, #0x250
    dcc8:	add	x3, sp, #0x250
    dccc:	ldr	x2, [sp, #736]
    dcd0:	mov	x1, x26
    dcd4:	ldp	x4, x5, [x0, #128]
    dcd8:	mov	x0, x25
    dcdc:	stp	x4, x5, [x3, #56]
    dce0:	str	x2, [sp, #664]
    dce4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dce8:	ldr	x0, [sp, #744]
    dcec:	cmp	x0, x24
    dcf0:	b.eq	dd04 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xd3c>  // b.none
    dcf4:	bl	0 <free>
    dcf8:	ldr	x0, [sp, #664]
    dcfc:	cbnz	x0, db20 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb58>
    dd00:	b	db54 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb8c>
    dd04:	ldr	x0, [sp, #664]
    dd08:	cbnz	x0, db20 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb58>
    dd0c:	b	db54 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb8c>
    dd10:	ldr	x1, [sp, #136]
    dd14:	ldr	x0, [sp, #672]
    dd18:	add	x27, x1, #0x28
    dd1c:	cmp	x0, x27
    dd20:	b.eq	dbd4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc0c>  // b.none
    dd24:	bl	0 <free>
    dd28:	b	dbd4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc0c>
    dd2c:	ldp	x2, x1, [x19, #8]
    dd30:	mov	x0, x19
    dd34:	cmp	x2, x1
    dd38:	cset	w1, eq  // eq = none
    dd3c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dd40:	ldp	x25, x26, [sp, #64]
    dd44:	str	w0, [x19, #40]
    dd48:	b	d770 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7a8>
    dd4c:	bl	28 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm.isra.0.part.0>
    dd50:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dd54:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dd58:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dd5c:	add	x3, x3, #0x0
    dd60:	add	x1, x1, #0x0
    dd64:	add	x0, x0, #0x0
    dd68:	mov	w2, #0x108                 	// #264
    dd6c:	bl	0 <__assert_fail>
    dd70:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dd74:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dd78:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dd7c:	add	x3, x3, #0x0
    dd80:	add	x1, x1, #0x0
    dd84:	add	x0, x0, #0x0
    dd88:	mov	w2, #0xce2                 	// #3298
    dd8c:	bl	0 <__assert_fail>
    dd90:	bl	f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    dd94:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dd98:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dd9c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dda0:	add	x3, x3, #0x0
    dda4:	add	x1, x1, #0x0
    dda8:	add	x0, x0, #0x0
    ddac:	mov	w2, #0xcbd                 	// #3261
    ddb0:	stp	x21, x22, [sp, #32]
    ddb4:	stp	x23, x24, [sp, #48]
    ddb8:	stp	x25, x26, [sp, #64]
    ddbc:	stp	x27, x28, [sp, #80]
    ddc0:	bl	0 <__assert_fail>
    ddc4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ddc8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ddcc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ddd0:	add	x3, x3, #0x0
    ddd4:	add	x1, x1, #0x0
    ddd8:	add	x0, x0, #0x0
    dddc:	mov	w2, #0x6f                  	// #111
    dde0:	bl	0 <__assert_fail>
    dde4:	mov	x0, #0x0                   	// #0
    dde8:	ldr	x0, [x0, #16]
    ddec:	brk	#0x3e8

000000000000ddf0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>:
    ddf0:	stp	x29, x30, [sp, #-224]!
    ddf4:	mov	x29, sp
    ddf8:	stp	x19, x20, [sp, #16]
    ddfc:	mov	x20, x1
    de00:	ldr	w1, [x0, #40]
    de04:	mov	x19, x0
    de08:	cmp	w1, #0xc
    de0c:	b.eq	de4c <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x5c>  // b.none
    de10:	mov	x1, x20
    de14:	mov	x0, x19
    de18:	bl	1600 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE>
    de1c:	ands	w0, w0, #0xff
    de20:	b.eq	de30 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x40>  // b.none
    de24:	ldp	x19, x20, [sp, #16]
    de28:	ldp	x29, x30, [sp], #224
    de2c:	ret
    de30:	mov	x1, x20
    de34:	mov	x0, x19
    de38:	bl	bd00 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE>
    de3c:	and	w0, w0, #0xff
    de40:	ldp	x19, x20, [sp, #16]
    de44:	ldp	x29, x30, [sp], #224
    de48:	ret
    de4c:	ldp	x2, x1, [x0, #8]
    de50:	stp	x21, x22, [sp, #32]
    de54:	add	x21, sp, #0x50
    de58:	cmp	x2, x1
    de5c:	cset	w1, eq  // eq = none
    de60:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    de64:	str	w0, [x19, #40]
    de68:	mov	x8, x21
    de6c:	mov	x0, x19
    de70:	mov	x1, x20
    de74:	mov	w2, #0x0                   	// #0
    de78:	bl	a178 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    de7c:	ldr	x0, [sp, #96]
    de80:	cbz	x0, df30 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x140>
    de84:	add	x22, sp, #0x98
    de88:	stp	x23, x24, [sp, #48]
    de8c:	add	x24, x22, #0x18
    de90:	add	x23, x22, #0x28
    de94:	str	x25, [sp, #64]
    de98:	add	x25, x21, #0x18
    de9c:	nop
    dea0:	mov	x1, x20
    dea4:	mov	x2, x21
    dea8:	mov	x0, x19
    deac:	bl	c0b0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>
    deb0:	mov	w1, w0
    deb4:	mov	x0, x19
    deb8:	tst	w1, #0xff
    debc:	b.ne	df28 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x138>  // b.any
    dec0:	ldr	w1, [x19, #40]
    dec4:	cmp	w1, #0xe
    dec8:	b.ne	df64 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x174>  // b.any
    decc:	ldp	x2, x1, [x19, #8]
    ded0:	cmp	x2, x1
    ded4:	cset	w1, eq  // eq = none
    ded8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dedc:	str	w0, [x19, #40]
    dee0:	mov	x8, x22
    dee4:	mov	x1, x20
    dee8:	mov	x0, x19
    deec:	mov	w2, #0x0                   	// #0
    def0:	bl	a178 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    def4:	ldp	x4, x5, [sp, #152]
    def8:	mov	x1, x24
    defc:	ldr	x2, [sp, #168]
    df00:	mov	x0, x25
    df04:	stp	x4, x5, [sp, #80]
    df08:	str	x2, [sp, #96]
    df0c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    df10:	ldr	x0, [sp, #176]
    df14:	cmp	x0, x23
    df18:	b.eq	df58 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x168>  // b.none
    df1c:	bl	0 <free>
    df20:	ldr	x0, [sp, #96]
    df24:	cbnz	x0, dea0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0xb0>
    df28:	ldp	x23, x24, [sp, #48]
    df2c:	ldr	x25, [sp, #64]
    df30:	add	x21, x21, #0x28
    df34:	ldr	x0, [sp, #104]
    df38:	cmp	x0, x21
    df3c:	b.eq	df44 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x154>  // b.none
    df40:	bl	0 <free>
    df44:	mov	w0, #0x1                   	// #1
    df48:	ldp	x19, x20, [sp, #16]
    df4c:	ldp	x21, x22, [sp, #32]
    df50:	ldp	x29, x30, [sp], #224
    df54:	ret
    df58:	ldr	x0, [sp, #96]
    df5c:	cbnz	x0, dea0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0xb0>
    df60:	b	df28 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x138>
    df64:	ldr	x0, [sp, #104]
    df68:	add	x21, x21, #0x28
    df6c:	cmp	x0, x21
    df70:	b.eq	df88 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x198>  // b.none
    df74:	bl	0 <free>
    df78:	ldp	x21, x22, [sp, #32]
    df7c:	ldp	x23, x24, [sp, #48]
    df80:	ldr	x25, [sp, #64]
    df84:	b	de10 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x20>
    df88:	ldp	x21, x22, [sp, #32]
    df8c:	ldp	x23, x24, [sp, #48]
    df90:	ldr	x25, [sp, #64]
    df94:	b	de10 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x20>

000000000000df98 <_ZN4llvm8TGParser10ParseClassEv>:
    df98:	stp	x29, x30, [sp, #-208]!
    df9c:	mov	x29, sp
    dfa0:	ldr	w1, [x0, #40]
    dfa4:	stp	x19, x20, [sp, #16]
    dfa8:	cmp	w1, #0x15
    dfac:	b.ne	e384 <_ZN4llvm8TGParser10ParseClassEv+0x3ec>  // b.any
    dfb0:	ldp	x1, x2, [x0, #8]
    dfb4:	mov	x20, x0
    dfb8:	cmp	x2, x1
    dfbc:	cset	w1, eq  // eq = none
    dfc0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dfc4:	str	w0, [x20, #40]
    dfc8:	cmp	w0, #0x48
    dfcc:	b.eq	e014 <_ZN4llvm8TGParser10ParseClassEv+0x7c>  // b.none
    dfd0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dfd4:	add	x1, x1, #0x0
    dfd8:	add	x19, sp, #0xb0
    dfdc:	mov	x0, x19
    dfe0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    dfe4:	mov	x0, x20
    dfe8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    dfec:	mov	x3, x0
    dff0:	mov	x2, x19
    dff4:	add	x0, sp, #0x90
    dff8:	mov	x1, #0x1                   	// #1
    dffc:	str	x3, [sp, #144]
    e000:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e004:	mov	w0, #0x1                   	// #1
    e008:	ldp	x19, x20, [sp, #16]
    e00c:	ldp	x29, x30, [sp], #208
    e010:	ret
    e014:	ldr	x0, [x20, #344]
    e018:	stp	x21, x22, [sp, #32]
    e01c:	stp	x23, x24, [sp, #48]
    e020:	add	x24, x0, #0x8
    e024:	ldr	x19, [x0, #16]
    e028:	ldr	x22, [x20, #56]
    e02c:	str	x25, [sp, #64]
    e030:	ldr	x25, [x20, #48]
    e034:	cbz	x19, e0a8 <_ZN4llvm8TGParser10ParseClassEv+0x110>
    e038:	cbz	x22, e210 <_ZN4llvm8TGParser10ParseClassEv+0x278>
    e03c:	mov	x23, x24
    e040:	ldp	x0, x21, [x19, #32]
    e044:	cmp	x22, x21
    e048:	b.cc	e22c <_ZN4llvm8TGParser10ParseClassEv+0x294>  // b.lo, b.ul, b.last
    e04c:	cbz	x21, e23c <_ZN4llvm8TGParser10ParseClassEv+0x2a4>
    e050:	mov	x2, x21
    e054:	mov	x1, x25
    e058:	bl	0 <memcmp>
    e05c:	cbnz	w0, e24c <_ZN4llvm8TGParser10ParseClassEv+0x2b4>
    e060:	cmp	x22, x21
    e064:	b.ne	e23c <_ZN4llvm8TGParser10ParseClassEv+0x2a4>  // b.any
    e068:	mov	x23, x19
    e06c:	ldr	x19, [x19, #16]
    e070:	cbnz	x19, e040 <_ZN4llvm8TGParser10ParseClassEv+0xa8>
    e074:	cmp	x24, x23
    e078:	b.eq	e0a8 <_ZN4llvm8TGParser10ParseClassEv+0x110>  // b.none
    e07c:	ldp	x1, x19, [x23, #32]
    e080:	cmp	x22, x19
    e084:	b.hi	e258 <_ZN4llvm8TGParser10ParseClassEv+0x2c0>  // b.pmore
    e088:	mov	x0, x25
    e08c:	mov	x2, x22
    e090:	bl	0 <memcmp>
    e094:	cbnz	w0, e26c <_ZN4llvm8TGParser10ParseClassEv+0x2d4>
    e098:	cmp	x22, x19
    e09c:	b.eq	e270 <_ZN4llvm8TGParser10ParseClassEv+0x2d8>  // b.none
    e0a0:	cmp	x22, x19
    e0a4:	b.cs	e270 <_ZN4llvm8TGParser10ParseClassEv+0x2d8>  // b.hs, b.nlast
    e0a8:	mov	x0, x20
    e0ac:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e0b0:	ldp	x23, x19, [x20, #48]
    e0b4:	mov	x21, x0
    e0b8:	mov	x0, #0x80                  	// #128
    e0bc:	ldr	x22, [x20, #344]
    e0c0:	bl	0 <_Znwm>
    e0c4:	mov	x1, x19
    e0c8:	mov	x19, x0
    e0cc:	mov	x0, x23
    e0d0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    e0d4:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
    e0d8:	mov	x2, x19
    e0dc:	mov	x3, #0x1                   	// #1
    e0e0:	add	x7, x19, #0x48
    e0e4:	ldr	x1, [x1]
    e0e8:	str	x0, [x2], #24
    e0ec:	movk	x3, #0x4, lsl #32
    e0f0:	add	x6, x19, #0x58
    e0f4:	stp	x2, x3, [x19, #8]
    e0f8:	add	x5, x19, #0x68
    e0fc:	ldr	w2, [x1]
    e100:	mov	w4, #0x100                 	// #256
    e104:	str	x21, [x19, #24]
    e108:	add	w3, w2, #0x1
    e10c:	stp	x7, xzr, [x19, #56]
    e110:	mov	x0, x19
    e114:	stp	x6, xzr, [x19, #72]
    e118:	stp	x5, xzr, [x19, #88]
    e11c:	stp	x22, xzr, [x19, #104]
    e120:	str	w2, [x19, #120]
    e124:	strh	w4, [x19, #124]
    e128:	str	w3, [x1]
    e12c:	bl	0 <_ZN4llvm6Record9checkNameEv>
    e130:	ldr	x1, [x19]
    e134:	ldr	x0, [x20, #344]
    e138:	cbz	x1, e3b0 <_ZN4llvm8TGParser10ParseClassEv+0x418>
    e13c:	ldrb	w2, [x1, #8]
    e140:	cmp	w2, #0x12
    e144:	b.ne	e3b4 <_ZN4llvm8TGParser10ParseClassEv+0x41c>  // b.any
    e148:	ldp	x3, x2, [x1, #24]
    e14c:	add	x1, sp, #0xb0
    e150:	stp	x3, x2, [sp, #176]
    e154:	str	x19, [sp, #192]
    e158:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e15c:	and	w22, w1, #0xff
    e160:	ldr	x21, [sp, #192]
    e164:	cbz	x21, e1c4 <_ZN4llvm8TGParser10ParseClassEv+0x22c>
    e168:	ldr	x0, [x21, #88]
    e16c:	add	x1, x21, #0x68
    e170:	add	x24, x21, #0x58
    e174:	cmp	x0, x1
    e178:	b.eq	e180 <_ZN4llvm8TGParser10ParseClassEv+0x1e8>  // b.none
    e17c:	bl	0 <free>
    e180:	ldr	x0, [x21, #72]
    e184:	add	x23, x21, #0x48
    e188:	cmp	x24, x0
    e18c:	b.eq	e194 <_ZN4llvm8TGParser10ParseClassEv+0x1fc>  // b.none
    e190:	bl	0 <free>
    e194:	ldr	x0, [x21, #56]
    e198:	cmp	x23, x0
    e19c:	b.eq	e1a4 <_ZN4llvm8TGParser10ParseClassEv+0x20c>  // b.none
    e1a0:	bl	0 <free>
    e1a4:	ldr	x0, [x21, #8]
    e1a8:	add	x1, x21, #0x18
    e1ac:	cmp	x0, x1
    e1b0:	b.eq	e1b8 <_ZN4llvm8TGParser10ParseClassEv+0x220>  // b.none
    e1b4:	bl	0 <free>
    e1b8:	mov	x0, x21
    e1bc:	mov	x1, #0x80                  	// #128
    e1c0:	bl	0 <_ZdlPvm>
    e1c4:	cbz	w22, e3d4 <_ZN4llvm8TGParser10ParseClassEv+0x43c>
    e1c8:	ldp	x2, x1, [x20, #8]
    e1cc:	mov	x0, x20
    e1d0:	cmp	x2, x1
    e1d4:	cset	w1, eq  // eq = none
    e1d8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e1dc:	str	w0, [x20, #40]
    e1e0:	cmp	w0, #0xa
    e1e4:	b.eq	e360 <_ZN4llvm8TGParser10ParseClassEv+0x3c8>  // b.none
    e1e8:	mov	x1, x19
    e1ec:	mov	x0, x20
    e1f0:	bl	ddf0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>
    e1f4:	and	w0, w0, #0xff
    e1f8:	ldp	x19, x20, [sp, #16]
    e1fc:	ldp	x21, x22, [sp, #32]
    e200:	ldp	x23, x24, [sp, #48]
    e204:	ldr	x25, [sp, #64]
    e208:	ldp	x29, x30, [sp], #208
    e20c:	ret
    e210:	mov	x23, x19
    e214:	ldr	x19, [x19, #16]
    e218:	cbnz	x19, e210 <_ZN4llvm8TGParser10ParseClassEv+0x278>
    e21c:	cmp	x24, x23
    e220:	b.eq	e0a8 <_ZN4llvm8TGParser10ParseClassEv+0x110>  // b.none
    e224:	ldr	x19, [x23, #40]
    e228:	b	e098 <_ZN4llvm8TGParser10ParseClassEv+0x100>
    e22c:	mov	x2, x22
    e230:	mov	x1, x25
    e234:	bl	0 <memcmp>
    e238:	cbnz	w0, e24c <_ZN4llvm8TGParser10ParseClassEv+0x2b4>
    e23c:	cmp	x22, x21
    e240:	b.ls	e068 <_ZN4llvm8TGParser10ParseClassEv+0xd0>  // b.plast
    e244:	ldr	x19, [x19, #24]
    e248:	b	e070 <_ZN4llvm8TGParser10ParseClassEv+0xd8>
    e24c:	tbz	w0, #31, e068 <_ZN4llvm8TGParser10ParseClassEv+0xd0>
    e250:	ldr	x19, [x19, #24]
    e254:	b	e070 <_ZN4llvm8TGParser10ParseClassEv+0xd8>
    e258:	cbz	x19, e270 <_ZN4llvm8TGParser10ParseClassEv+0x2d8>
    e25c:	mov	x0, x25
    e260:	mov	x2, x19
    e264:	bl	0 <memcmp>
    e268:	cbz	w0, e0a0 <_ZN4llvm8TGParser10ParseClassEv+0x108>
    e26c:	tbnz	w0, #31, e0a8 <_ZN4llvm8TGParser10ParseClassEv+0x110>
    e270:	ldr	x19, [x23, #64]
    e274:	cbz	x19, e0a8 <_ZN4llvm8TGParser10ParseClassEv+0x110>
    e278:	ldr	w0, [x19, #80]
    e27c:	cbnz	w0, e290 <_ZN4llvm8TGParser10ParseClassEv+0x2f8>
    e280:	ldr	w0, [x19, #96]
    e284:	cbnz	w0, e290 <_ZN4llvm8TGParser10ParseClassEv+0x2f8>
    e288:	ldr	w0, [x19, #64]
    e28c:	cbz	w0, e1c8 <_ZN4llvm8TGParser10ParseClassEv+0x230>
    e290:	ldr	x0, [x19]
    e294:	add	x21, sp, #0x70
    e298:	mov	x8, x21
    e29c:	add	x22, sp, #0x90
    e2a0:	add	x19, sp, #0xb0
    e2a4:	add	x23, sp, #0x58
    e2a8:	ldr	x1, [x0]
    e2ac:	ldr	x1, [x1, #48]
    e2b0:	blr	x1
    e2b4:	mov	x1, x21
    e2b8:	mov	x8, x22
    e2bc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e2c0:	add	x0, x0, #0x0
    e2c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e2c8:	mov	x8, x19
    e2cc:	mov	x0, x22
    e2d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e2d4:	add	x1, x1, #0x0
    e2d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e2dc:	mov	x1, x19
    e2e0:	mov	x0, x23
    e2e4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e2e8:	add	x19, x19, #0x10
    e2ec:	mov	x0, x20
    e2f0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e2f4:	mov	x3, x0
    e2f8:	mov	x2, x23
    e2fc:	add	x0, sp, #0x50
    e300:	mov	x1, #0x1                   	// #1
    e304:	str	x3, [sp, #80]
    e308:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e30c:	ldr	x0, [sp, #176]
    e310:	cmp	x0, x19
    e314:	b.eq	e31c <_ZN4llvm8TGParser10ParseClassEv+0x384>  // b.none
    e318:	bl	0 <_ZdlPv>
    e31c:	ldr	x0, [sp, #144]
    e320:	add	x22, x22, #0x10
    e324:	cmp	x0, x22
    e328:	b.eq	e330 <_ZN4llvm8TGParser10ParseClassEv+0x398>  // b.none
    e32c:	bl	0 <_ZdlPv>
    e330:	ldr	x0, [sp, #112]
    e334:	add	x21, x21, #0x10
    e338:	cmp	x0, x21
    e33c:	b.eq	e344 <_ZN4llvm8TGParser10ParseClassEv+0x3ac>  // b.none
    e340:	bl	0 <_ZdlPv>
    e344:	mov	w0, #0x1                   	// #1
    e348:	ldp	x19, x20, [sp, #16]
    e34c:	ldp	x21, x22, [sp, #32]
    e350:	ldp	x23, x24, [sp, #48]
    e354:	ldr	x25, [sp, #64]
    e358:	ldp	x29, x30, [sp], #208
    e35c:	ret
    e360:	mov	x1, x19
    e364:	mov	x0, x20
    e368:	bl	b910 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>
    e36c:	ands	w0, w0, #0xff
    e370:	b.eq	e1e8 <_ZN4llvm8TGParser10ParseClassEv+0x250>  // b.none
    e374:	ldp	x21, x22, [sp, #32]
    e378:	ldp	x23, x24, [sp, #48]
    e37c:	ldr	x25, [sp, #64]
    e380:	b	e008 <_ZN4llvm8TGParser10ParseClassEv+0x70>
    e384:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e388:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e38c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e390:	add	x3, x3, #0x0
    e394:	add	x1, x1, #0x0
    e398:	add	x0, x0, #0x0
    e39c:	mov	w2, #0xbd6                 	// #3030
    e3a0:	stp	x21, x22, [sp, #32]
    e3a4:	stp	x23, x24, [sp, #48]
    e3a8:	str	x25, [sp, #64]
    e3ac:	bl	0 <__assert_fail>
    e3b0:	bl	f0 <_ZN4llvm3isaINS_10StringInitEPNS_4InitEEEbRKT0_.isra.0.part.0>
    e3b4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3b8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3bc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3c0:	add	x3, x3, #0x0
    e3c4:	add	x1, x1, #0x0
    e3c8:	add	x0, x0, #0x0
    e3cc:	mov	w2, #0x108                 	// #264
    e3d0:	bl	0 <__assert_fail>
    e3d4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3d8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3dc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e3e0:	add	x3, x3, #0x0
    e3e4:	add	x1, x1, #0x0
    e3e8:	add	x0, x0, #0x0
    e3ec:	mov	w2, #0x6c0                 	// #1728
    e3f0:	bl	0 <__assert_fail>
    e3f4:	nop

000000000000e3f8 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE>:
    e3f8:	stp	x29, x30, [sp, #-112]!
    e3fc:	mov	x29, sp
    e400:	stp	x19, x20, [sp, #16]
    e404:	mov	x20, x0
    e408:	mov	x19, x1
    e40c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e410:	ldr	w1, [x20, #40]
    e414:	stp	x21, x22, [sp, #32]
    e418:	cmp	w1, #0x18
    e41c:	b.ne	e6b0 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x2b8>  // b.any
    e420:	ldp	x1, x2, [x20, #8]
    e424:	mov	x22, x0
    e428:	mov	x0, x20
    e42c:	cmp	x2, x1
    e430:	cset	w1, eq  // eq = none
    e434:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e438:	str	w0, [x20, #40]
    e43c:	mov	x1, x19
    e440:	mov	x0, x20
    e444:	bl	b4f8 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>
    e448:	mov	x21, x0
    e44c:	cbz	x0, e698 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x2a0>
    e450:	ldrb	w0, [x0, #8]
    e454:	stp	x23, x24, [sp, #48]
    e458:	cmp	w0, #0x18
    e45c:	stp	x25, x26, [sp, #64]
    e460:	str	x27, [sp, #80]
    e464:	ldr	x27, [x20, #344]
    e468:	b.eq	e600 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x208>  // b.none
    e46c:	mov	x0, #0x80                  	// #128
    e470:	bl	0 <_Znwm>
    e474:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
    e478:	mov	x23, x0
    e47c:	mov	x2, #0x1                   	// #1
    e480:	add	x24, x0, #0x48
    e484:	ldr	x1, [x1]
    e488:	str	x21, [x23], #24
    e48c:	movk	x2, #0x4, lsl #32
    e490:	add	x25, x0, #0x58
    e494:	stp	x23, x2, [x0, #8]
    e498:	add	x26, x0, #0x68
    e49c:	ldr	w2, [x1]
    e4a0:	str	x22, [x0, #24]
    e4a4:	mov	x19, x0
    e4a8:	add	w3, w2, #0x1
    e4ac:	stp	x24, xzr, [x0, #56]
    e4b0:	stp	x25, xzr, [x0, #72]
    e4b4:	stp	x26, xzr, [x0, #88]
    e4b8:	stp	x27, xzr, [x0, #104]
    e4bc:	str	w2, [x0, #120]
    e4c0:	strh	wzr, [x0, #124]
    e4c4:	str	w3, [x1]
    e4c8:	bl	0 <_ZN4llvm6Record9checkNameEv>
    e4cc:	mov	x1, x19
    e4d0:	mov	x0, x20
    e4d4:	bl	ddf0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>
    e4d8:	ands	w21, w0, #0xff
    e4dc:	b.ne	e5bc <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x1c4>  // b.any
    e4e0:	mov	x0, x20
    e4e4:	add	x1, sp, #0x60
    e4e8:	stp	x19, xzr, [sp, #96]
    e4ec:	bl	3e00 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    e4f0:	and	w21, w0, #0xff
    e4f4:	ldr	x22, [sp, #104]
    e4f8:	cbz	x22, e538 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x140>
    e4fc:	ldp	x19, x20, [x22, #24]
    e500:	cmp	x19, x20
    e504:	b.eq	e520 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x128>  // b.none
    e508:	mov	x0, x19
    e50c:	add	x19, x19, #0x10
    e510:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e514:	cmp	x20, x19
    e518:	b.ne	e508 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x110>  // b.any
    e51c:	ldr	x20, [x22, #24]
    e520:	cbz	x20, e52c <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x134>
    e524:	mov	x0, x20
    e528:	bl	0 <_ZdlPv>
    e52c:	mov	x0, x22
    e530:	mov	x1, #0x30                  	// #48
    e534:	bl	0 <_ZdlPvm>
    e538:	ldr	x19, [sp, #96]
    e53c:	cbz	x19, e678 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x280>
    e540:	ldr	x0, [x19, #88]
    e544:	add	x1, x19, #0x68
    e548:	add	x22, x19, #0x58
    e54c:	cmp	x0, x1
    e550:	b.eq	e558 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x160>  // b.none
    e554:	bl	0 <free>
    e558:	ldr	x0, [x19, #72]
    e55c:	add	x20, x19, #0x48
    e560:	cmp	x22, x0
    e564:	b.eq	e56c <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x174>  // b.none
    e568:	bl	0 <free>
    e56c:	ldr	x0, [x19, #56]
    e570:	cmp	x20, x0
    e574:	b.eq	e57c <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x184>  // b.none
    e578:	bl	0 <free>
    e57c:	ldr	x0, [x19, #8]
    e580:	add	x1, x19, #0x18
    e584:	cmp	x0, x1
    e588:	b.eq	e590 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x198>  // b.none
    e58c:	bl	0 <free>
    e590:	mov	x0, x19
    e594:	mov	x1, #0x80                  	// #128
    e598:	bl	0 <_ZdlPvm>
    e59c:	mov	w0, w21
    e5a0:	ldp	x19, x20, [sp, #16]
    e5a4:	ldp	x21, x22, [sp, #32]
    e5a8:	ldp	x23, x24, [sp, #48]
    e5ac:	ldp	x25, x26, [sp, #64]
    e5b0:	ldr	x27, [sp, #80]
    e5b4:	ldp	x29, x30, [sp], #112
    e5b8:	ret
    e5bc:	ldr	x0, [x19, #88]
    e5c0:	cmp	x0, x26
    e5c4:	b.eq	e5cc <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x1d4>  // b.none
    e5c8:	bl	0 <free>
    e5cc:	ldr	x0, [x19, #72]
    e5d0:	cmp	x0, x25
    e5d4:	b.eq	e5dc <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x1e4>  // b.none
    e5d8:	bl	0 <free>
    e5dc:	ldr	x0, [x19, #56]
    e5e0:	cmp	x0, x24
    e5e4:	b.eq	e5ec <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x1f4>  // b.none
    e5e8:	bl	0 <free>
    e5ec:	ldr	x0, [x19, #8]
    e5f0:	cmp	x0, x23
    e5f4:	b.eq	e590 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x198>  // b.none
    e5f8:	bl	0 <free>
    e5fc:	b	e590 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x198>
    e600:	mov	x0, x27
    e604:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    e608:	mov	x21, x0
    e60c:	mov	x0, #0x80                  	// #128
    e610:	ldr	x27, [x20, #344]
    e614:	bl	0 <_Znwm>
    e618:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
    e61c:	mov	x23, x0
    e620:	mov	x2, #0x1                   	// #1
    e624:	add	x24, x0, #0x48
    e628:	ldr	x1, [x1]
    e62c:	str	x21, [x23], #24
    e630:	movk	x2, #0x4, lsl #32
    e634:	add	x25, x0, #0x58
    e638:	stp	x23, x2, [x0, #8]
    e63c:	add	x26, x0, #0x68
    e640:	ldr	w2, [x1]
    e644:	mov	w4, #0x1                   	// #1
    e648:	str	x22, [x0, #24]
    e64c:	add	w3, w2, #0x1
    e650:	stp	x24, xzr, [x0, #56]
    e654:	mov	x19, x0
    e658:	stp	x25, xzr, [x0, #72]
    e65c:	stp	x26, xzr, [x0, #88]
    e660:	stp	x27, xzr, [x0, #104]
    e664:	str	w2, [x0, #120]
    e668:	strh	w4, [x0, #124]
    e66c:	str	w3, [x1]
    e670:	bl	0 <_ZN4llvm6Record9checkNameEv>
    e674:	b	e4cc <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0xd4>
    e678:	mov	w0, w21
    e67c:	ldp	x19, x20, [sp, #16]
    e680:	ldp	x21, x22, [sp, #32]
    e684:	ldp	x23, x24, [sp, #48]
    e688:	ldp	x25, x26, [sp, #64]
    e68c:	ldr	x27, [sp, #80]
    e690:	ldp	x29, x30, [sp], #112
    e694:	ret
    e698:	mov	w21, #0x1                   	// #1
    e69c:	mov	w0, w21
    e6a0:	ldp	x19, x20, [sp, #16]
    e6a4:	ldp	x21, x22, [sp, #32]
    e6a8:	ldp	x29, x30, [sp], #112
    e6ac:	ret
    e6b0:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e6b4:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e6b8:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e6bc:	add	x3, x3, #0x0
    e6c0:	add	x1, x1, #0x0
    e6c4:	add	x0, x0, #0x0
    e6c8:	mov	w2, #0xac0                 	// #2752
    e6cc:	stp	x23, x24, [sp, #48]
    e6d0:	stp	x25, x26, [sp, #64]
    e6d4:	str	x27, [sp, #80]
    e6d8:	bl	0 <__assert_fail>
    e6dc:	nop

000000000000e6e0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE>:
    e6e0:	sub	sp, sp, #0x2c0
    e6e4:	stp	x29, x30, [sp]
    e6e8:	mov	x29, sp
    e6ec:	stp	x23, x24, [sp, #48]
    e6f0:	mov	x23, x1
    e6f4:	ldr	w1, [x0, #40]
    e6f8:	stp	x19, x20, [sp, #16]
    e6fc:	cmp	w1, #0x1e
    e700:	stp	x21, x22, [sp, #32]
    e704:	b.ne	ea2c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x34c>  // b.any
    e708:	ldp	x1, x2, [x0, #8]
    e70c:	mov	x19, x0
    e710:	add	x21, sp, #0x130
    e714:	mov	w22, #0x1                   	// #1
    e718:	cmp	x2, x1
    e71c:	cset	w1, eq  // eq = none
    e720:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e724:	str	w0, [x19, #40]
    e728:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e72c:	add	x2, x21, #0x10
    e730:	mov	x0, x19
    e734:	str	x2, [sp, #304]
    e738:	ldr	d0, [x1]
    e73c:	mov	x1, x21
    e740:	str	d0, [sp, #312]
    e744:	bl	ac08 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE>
    e748:	ldr	w0, [sp, #312]
    e74c:	cbnz	w0, e780 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xa0>
    e750:	ldr	x0, [sp, #304]
    e754:	add	x21, x21, #0x10
    e758:	cmp	x0, x21
    e75c:	b.eq	e764 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x84>  // b.none
    e760:	bl	0 <free>
    e764:	mov	w0, w22
    e768:	ldp	x29, x30, [sp]
    e76c:	ldp	x19, x20, [sp, #16]
    e770:	ldp	x21, x22, [sp, #32]
    e774:	ldp	x23, x24, [sp, #48]
    e778:	add	sp, sp, #0x2c0
    e77c:	ret
    e780:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e784:	add	x24, sp, #0x60
    e788:	add	x2, x24, #0x10
    e78c:	str	d8, [sp, #64]
    e790:	ldr	d8, [x0]
    e794:	add	x22, x19, #0xc8
    e798:	mov	x1, x21
    e79c:	mov	x0, x24
    e7a0:	str	x2, [sp, #96]
    e7a4:	str	d8, [sp, #104]
    e7a8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e7ac:	ldp	x0, x1, [x22, #8]
    e7b0:	cmp	x0, x1
    e7b4:	b.eq	e96c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x28c>  // b.none
    e7b8:	str	d8, [x0, #8]
    e7bc:	add	x1, x0, #0x10
    e7c0:	ldr	w20, [sp, #104]
    e7c4:	str	x1, [x0]
    e7c8:	cbnz	w20, e95c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x27c>
    e7cc:	ldr	x0, [x22, #8]
    e7d0:	add	x0, x0, #0xd0
    e7d4:	str	x0, [x22, #8]
    e7d8:	ldr	x22, [sp, #96]
    e7dc:	mov	w0, #0x30                  	// #48
    e7e0:	umaddl	x20, w20, w0, x22
    e7e4:	cmp	x22, x20
    e7e8:	b.eq	e80c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x12c>  // b.none
    e7ec:	nop
    e7f0:	ldur	x0, [x20, #-40]
    e7f4:	sub	x20, x20, #0x30
    e7f8:	cbz	x0, e898 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x1b8>
    e7fc:	bl	0 <_ZdlPv>
    e800:	cmp	x22, x20
    e804:	b.ne	e7f0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x110>  // b.any
    e808:	ldr	x20, [sp, #96]
    e80c:	add	x0, x24, #0x10
    e810:	cmp	x20, x0
    e814:	b.eq	e820 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x140>  // b.none
    e818:	mov	x0, x20
    e81c:	bl	0 <free>
    e820:	ldr	w0, [x19, #40]
    e824:	cmp	w0, #0x1c
    e828:	b.eq	e8a4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x1c4>  // b.none
    e82c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e830:	add	x1, x1, #0x0
    e834:	mov	x0, x24
    e838:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e83c:	mov	x0, x19
    e840:	mov	w22, #0x1                   	// #1
    e844:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e848:	mov	x3, x0
    e84c:	mov	x2, x24
    e850:	add	x0, sp, #0x58
    e854:	mov	x1, #0x1                   	// #1
    e858:	str	x3, [sp, #88]
    e85c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e860:	ldr	w19, [sp, #312]
    e864:	mov	w0, #0x30                  	// #48
    e868:	ldr	x20, [sp, #304]
    e86c:	umaddl	x19, w19, w0, x20
    e870:	cmp	x20, x19
    e874:	b.eq	e890 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x1b0>  // b.none
    e878:	ldur	x0, [x19, #-40]
    e87c:	sub	x19, x19, #0x30
    e880:	cbz	x0, e870 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x190>
    e884:	bl	0 <_ZdlPv>
    e888:	cmp	x20, x19
    e88c:	b.ne	e878 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x198>  // b.any
    e890:	ldr	d8, [sp, #64]
    e894:	b	e750 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x70>
    e898:	cmp	x22, x20
    e89c:	b.ne	e7f0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x110>  // b.any
    e8a0:	b	e808 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x128>
    e8a4:	ldp	x2, x1, [x19, #8]
    e8a8:	mov	x0, x19
    e8ac:	cmp	x2, x1
    e8b0:	cset	w1, eq  // eq = none
    e8b4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e8b8:	str	w0, [x19, #40]
    e8bc:	mov	x0, x19
    e8c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e8c4:	mov	x20, x0
    e8c8:	ldr	w2, [x19, #40]
    e8cc:	cmp	w2, #0x6
    e8d0:	b.eq	e984 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2a4>  // b.none
    e8d4:	mov	x1, x23
    e8d8:	mov	x0, x19
    e8dc:	bl	ea50 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    e8e0:	ands	w22, w0, #0xff
    e8e4:	b.ne	e860 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x180>  // b.any
    e8e8:	mov	x1, x20
    e8ec:	mov	x0, x19
    e8f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e8f4:	ldr	x22, [x19, #208]
    e8f8:	mov	w0, #0x30                  	// #48
    e8fc:	sub	x1, x22, #0xd0
    e900:	str	x1, [x19, #208]
    e904:	ldur	w19, [x22, #-200]
    e908:	ldur	x20, [x22, #-208]
    e90c:	umaddl	x19, w19, w0, x20
    e910:	cmp	x20, x19
    e914:	b.eq	e934 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x254>  // b.none
    e918:	ldur	x0, [x19, #-40]
    e91c:	sub	x19, x19, #0x30
    e920:	cbz	x0, e950 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x270>
    e924:	bl	0 <_ZdlPv>
    e928:	cmp	x20, x19
    e92c:	b.ne	e918 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x238>  // b.any
    e930:	ldur	x19, [x22, #-208]
    e934:	sub	x22, x22, #0xc0
    e938:	cmp	x19, x22
    e93c:	b.eq	e948 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x268>  // b.none
    e940:	mov	x0, x19
    e944:	bl	0 <free>
    e948:	mov	w22, #0x0                   	// #0
    e94c:	b	e860 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x180>
    e950:	cmp	x20, x19
    e954:	b.ne	e918 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x238>  // b.any
    e958:	b	e930 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x250>
    e95c:	mov	x1, x24
    e960:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e964:	ldr	w20, [sp, #104]
    e968:	b	e7cc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xec>
    e96c:	mov	x1, x0
    e970:	mov	x2, x24
    e974:	mov	x0, x22
    e978:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e97c:	ldr	w20, [sp, #104]
    e980:	b	e7d8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xf8>
    e984:	mov	x0, x19
    e988:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e98c:	ldp	x2, x1, [x19, #8]
    e990:	mov	x22, x0
    e994:	mov	x0, x19
    e998:	cmp	x2, x1
    e99c:	cset	w1, eq  // eq = none
    e9a0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e9a4:	str	w0, [x19, #40]
    e9a8:	mov	x1, x23
    e9ac:	mov	x0, x19
    e9b0:	bl	f240 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    e9b4:	tst	w0, #0xff
    e9b8:	b.ne	ea08 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x328>  // b.any
    e9bc:	ldr	w0, [x19, #40]
    e9c0:	cmp	w0, #0x7
    e9c4:	b.eq	ea10 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x330>  // b.none
    e9c8:	mov	x0, x24
    e9cc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e9d0:	add	x1, x1, #0x0
    e9d4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e9d8:	mov	x1, x24
    e9dc:	mov	x0, x19
    e9e0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e9e4:	mov	x0, x24
    e9e8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e9ec:	add	x1, x1, #0x0
    e9f0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    e9f4:	mov	x2, x24
    e9f8:	add	x0, sp, #0x58
    e9fc:	mov	x1, #0x1                   	// #1
    ea00:	str	x22, [sp, #88]
    ea04:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ea08:	mov	w22, #0x1                   	// #1
    ea0c:	b	e860 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x180>
    ea10:	ldp	x2, x1, [x19, #8]
    ea14:	mov	x0, x19
    ea18:	cmp	x2, x1
    ea1c:	cset	w1, eq  // eq = none
    ea20:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ea24:	str	w0, [x19, #40]
    ea28:	b	e8e8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x208>
    ea2c:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ea30:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ea34:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ea38:	add	x3, x3, #0x0
    ea3c:	add	x1, x1, #0x0
    ea40:	add	x0, x0, #0x0
    ea44:	mov	w2, #0xc2d                 	// #3117
    ea48:	str	d8, [sp, #64]
    ea4c:	bl	0 <__assert_fail>

000000000000ea50 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>:
    ea50:	stp	x29, x30, [sp, #-64]!
    ea54:	mov	x29, sp
    ea58:	ldr	w2, [x0, #40]
    ea5c:	cmp	w2, #0x1e
    ea60:	b.eq	eb28 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd8>  // b.none
    ea64:	stp	x19, x20, [sp, #16]
    ea68:	mov	x19, x0
    ea6c:	b.ls	eadc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x8c>  // b.plast
    ea70:	cmp	w2, #0x23
    ea74:	b.eq	eb98 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x148>  // b.none
    ea78:	b.ls	ea98 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x48>  // b.plast
    ea7c:	cmp	w2, #0x24
    ea80:	b.ne	eb64 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>  // b.any
    ea84:	bl	fde0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE>
    ea88:	and	w0, w0, #0xff
    ea8c:	ldp	x19, x20, [sp, #16]
    ea90:	ldp	x29, x30, [sp], #64
    ea94:	ret
    ea98:	cmp	w2, #0x20
    ea9c:	b.eq	eb78 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x128>  // b.none
    eaa0:	cmp	w2, #0x22
    eaa4:	b.ne	eb64 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>  // b.any
    eaa8:	cbz	x1, ebac <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x15c>
    eaac:	add	x20, sp, #0x28
    eab0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eab4:	mov	x0, x20
    eab8:	add	x1, x1, #0x0
    eabc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eac0:	mov	x1, x20
    eac4:	mov	x0, x19
    eac8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eacc:	and	w0, w0, #0xff
    ead0:	ldp	x19, x20, [sp, #16]
    ead4:	ldp	x29, x30, [sp], #64
    ead8:	ret
    eadc:	cmp	w2, #0x19
    eae0:	b.eq	eb38 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xe8>  // b.none
    eae4:	b.ls	eb04 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xb4>  // b.plast
    eae8:	cmp	w2, #0x1a
    eaec:	b.ne	eb64 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>  // b.any
    eaf0:	bl	cfc8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE>
    eaf4:	and	w0, w0, #0xff
    eaf8:	ldp	x19, x20, [sp, #16]
    eafc:	ldp	x29, x30, [sp], #64
    eb00:	ret
    eb04:	cmp	w2, #0x15
    eb08:	b.eq	eb4c <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xfc>  // b.none
    eb0c:	cmp	w2, #0x18
    eb10:	b.ne	eb64 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>  // b.any
    eb14:	bl	e3f8 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE>
    eb18:	and	w0, w0, #0xff
    eb1c:	ldp	x19, x20, [sp, #16]
    eb20:	ldp	x29, x30, [sp], #64
    eb24:	ret
    eb28:	bl	e6e0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE>
    eb2c:	and	w0, w0, #0xff
    eb30:	ldp	x29, x30, [sp], #64
    eb34:	ret
    eb38:	bl	f688 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE>
    eb3c:	and	w0, w0, #0xff
    eb40:	ldp	x19, x20, [sp, #16]
    eb44:	ldp	x29, x30, [sp], #64
    eb48:	ret
    eb4c:	cbz	x1, ebbc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x16c>
    eb50:	add	x20, sp, #0x28
    eb54:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eb58:	mov	x0, x20
    eb5c:	add	x1, x1, #0x0
    eb60:	b	eabc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x6c>
    eb64:	add	x20, sp, #0x28
    eb68:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eb6c:	mov	x0, x20
    eb70:	add	x1, x1, #0x0
    eb74:	b	eabc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x6c>
    eb78:	ldp	x2, x1, [x0, #272]
    eb7c:	cmp	x2, x1
    eb80:	b.eq	ebdc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x18c>  // b.none
    eb84:	add	x20, sp, #0x28
    eb88:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eb8c:	mov	x0, x20
    eb90:	add	x1, x1, #0x0
    eb94:	b	eabc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x6c>
    eb98:	bl	a8b0 <_ZN4llvm8TGParser11ParseDefvarEv>
    eb9c:	and	w0, w0, #0xff
    eba0:	ldp	x19, x20, [sp, #16]
    eba4:	ldp	x29, x30, [sp], #64
    eba8:	ret
    ebac:	bl	f2b0 <_ZN4llvm8TGParser11ParseDefsetEv>
    ebb0:	and	w0, w0, #0xff
    ebb4:	ldp	x19, x20, [sp, #16]
    ebb8:	b	ea90 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x40>
    ebbc:	ldp	x1, x2, [x0, #272]
    ebc0:	cmp	x2, x1
    ebc4:	b.eq	ebec <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x19c>  // b.none
    ebc8:	add	x20, sp, #0x28
    ebcc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ebd0:	mov	x0, x20
    ebd4:	add	x1, x1, #0x0
    ebd8:	b	eabc <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x6c>
    ebdc:	bl	ec00 <_ZN4llvm8TGParser15ParseMultiClassEv>
    ebe0:	and	w0, w0, #0xff
    ebe4:	ldp	x19, x20, [sp, #16]
    ebe8:	b	ea90 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x40>
    ebec:	bl	df98 <_ZN4llvm8TGParser10ParseClassEv>
    ebf0:	and	w0, w0, #0xff
    ebf4:	ldp	x19, x20, [sp, #16]
    ebf8:	b	ea90 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x40>
    ebfc:	nop

000000000000ec00 <_ZN4llvm8TGParser15ParseMultiClassEv>:
    ec00:	stp	x29, x30, [sp, #-320]!
    ec04:	mov	x29, sp
    ec08:	ldr	w1, [x0, #40]
    ec0c:	stp	x19, x20, [sp, #16]
    ec10:	cmp	w1, #0x20
    ec14:	stp	x21, x22, [sp, #32]
    ec18:	b.ne	f214 <_ZN4llvm8TGParser15ParseMultiClassEv+0x614>  // b.any
    ec1c:	ldp	x1, x2, [x0, #8]
    ec20:	mov	x19, x0
    ec24:	cmp	x2, x1
    ec28:	cset	w1, eq  // eq = none
    ec2c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ec30:	str	w0, [x19, #40]
    ec34:	cmp	w0, #0x48
    ec38:	b.eq	ec88 <_ZN4llvm8TGParser15ParseMultiClassEv+0x88>  // b.none
    ec3c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ec40:	add	x1, x1, #0x0
    ec44:	add	x20, sp, #0xf8
    ec48:	mov	w21, #0x1                   	// #1
    ec4c:	mov	x0, x20
    ec50:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ec54:	mov	x0, x19
    ec58:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ec5c:	mov	x3, x0
    ec60:	mov	x2, x20
    ec64:	add	x0, sp, #0xb0
    ec68:	mov	x1, #0x1                   	// #1
    ec6c:	str	x3, [sp, #176]
    ec70:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ec74:	mov	w0, w21
    ec78:	ldp	x19, x20, [sp, #16]
    ec7c:	ldp	x21, x22, [sp, #32]
    ec80:	ldp	x29, x30, [sp], #320
    ec84:	ret
    ec88:	ldp	x1, x2, [x19, #48]
    ec8c:	stp	x23, x24, [sp, #48]
    ec90:	add	x23, sp, #0x90
    ec94:	add	x4, x23, #0x10
    ec98:	mov	w3, #0x0                   	// #0
    ec9c:	mov	x0, x23
    eca0:	stp	x25, x26, [sp, #64]
    eca4:	add	x22, sp, #0xf8
    eca8:	add	x2, x1, x2
    ecac:	str	x4, [sp, #144]
    ecb0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ecb4:	mov	x0, x19
    ecb8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ecbc:	mov	x21, x0
    ecc0:	ldp	x25, x20, [sp, #144]
    ecc4:	mov	x0, #0x98                  	// #152
    ecc8:	ldr	x24, [x19, #344]
    eccc:	bl	0 <_Znwm>
    ecd0:	mov	x1, x20
    ecd4:	mov	x20, x0
    ecd8:	mov	x0, x25
    ecdc:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    ece0:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
    ece4:	mov	x2, x20
    ece8:	mov	x6, #0x1                   	// #1
    ecec:	add	x5, x20, #0x48
    ecf0:	ldr	x1, [x1]
    ecf4:	str	x0, [x2], #24
    ecf8:	movk	x6, #0x4, lsl #32
    ecfc:	add	x4, x20, #0x58
    ed00:	stp	x2, x6, [x20, #8]
    ed04:	add	x3, x20, #0x68
    ed08:	ldr	w2, [x1]
    ed0c:	str	x21, [x20, #24]
    ed10:	mov	x0, x20
    ed14:	add	w6, w2, #0x1
    ed18:	stp	x5, xzr, [x20, #56]
    ed1c:	stp	x4, xzr, [x20, #72]
    ed20:	stp	x3, xzr, [x20, #88]
    ed24:	stp	x24, xzr, [x20, #104]
    ed28:	str	w2, [x20, #120]
    ed2c:	strh	wzr, [x20, #124]
    ed30:	str	w6, [x1]
    ed34:	bl	0 <_ZN4llvm6Record9checkNameEv>
    ed38:	ldp	x1, x2, [sp, #144]
    ed3c:	mov	x4, x20
    ed40:	add	x5, x22, #0x10
    ed44:	mov	w3, #0x0                   	// #0
    ed48:	mov	x0, x22
    ed4c:	str	x5, [sp, #248]
    ed50:	stp	xzr, xzr, [x4, #128]!
    ed54:	add	x2, x1, x2
    ed58:	str	xzr, [x4, #16]
    ed5c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ed60:	str	x20, [sp, #280]
    ed64:	mov	x1, x22
    ed68:	add	x0, x19, #0xe0
    ed6c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ed70:	str	x0, [sp, #96]
    ed74:	ldr	x25, [sp, #280]
    ed78:	and	w21, w1, #0xff
    ed7c:	cbz	x25, eec0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2c0>
    ed80:	ldp	x24, x26, [x25, #128]
    ed84:	cmp	x24, x26
    ed88:	b.eq	ee58 <_ZN4llvm8TGParser15ParseMultiClassEv+0x258>  // b.none
    ed8c:	stp	x27, x28, [sp, #80]
    ed90:	ldr	x28, [x24, #8]
    ed94:	cbz	x28, edd8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1d8>
    ed98:	ldp	x20, x27, [x28, #24]
    ed9c:	cmp	x20, x27
    eda0:	b.eq	edc0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1c0>  // b.none
    eda4:	nop
    eda8:	mov	x0, x20
    edac:	add	x20, x20, #0x10
    edb0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    edb4:	cmp	x27, x20
    edb8:	b.ne	eda8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1a8>  // b.any
    edbc:	ldr	x27, [x28, #24]
    edc0:	cbz	x27, edcc <_ZN4llvm8TGParser15ParseMultiClassEv+0x1cc>
    edc4:	mov	x0, x27
    edc8:	bl	0 <_ZdlPv>
    edcc:	mov	x0, x28
    edd0:	mov	x1, #0x30                  	// #48
    edd4:	bl	0 <_ZdlPvm>
    edd8:	ldr	x20, [x24]
    eddc:	cbz	x20, ee44 <_ZN4llvm8TGParser15ParseMultiClassEv+0x244>
    ede0:	ldr	x0, [x20, #88]
    ede4:	add	x1, x20, #0x68
    ede8:	add	x2, x20, #0x58
    edec:	cmp	x0, x1
    edf0:	b.eq	ee00 <_ZN4llvm8TGParser15ParseMultiClassEv+0x200>  // b.none
    edf4:	str	x2, [sp, #104]
    edf8:	bl	0 <free>
    edfc:	ldr	x2, [sp, #104]
    ee00:	add	x28, x20, #0x48
    ee04:	ldr	x0, [x20, #72]
    ee08:	cmp	x2, x0
    ee0c:	b.eq	ee14 <_ZN4llvm8TGParser15ParseMultiClassEv+0x214>  // b.none
    ee10:	bl	0 <free>
    ee14:	ldr	x0, [x20, #56]
    ee18:	cmp	x28, x0
    ee1c:	b.eq	ee24 <_ZN4llvm8TGParser15ParseMultiClassEv+0x224>  // b.none
    ee20:	bl	0 <free>
    ee24:	ldr	x0, [x20, #8]
    ee28:	add	x1, x20, #0x18
    ee2c:	cmp	x0, x1
    ee30:	b.eq	ee38 <_ZN4llvm8TGParser15ParseMultiClassEv+0x238>  // b.none
    ee34:	bl	0 <free>
    ee38:	mov	x0, x20
    ee3c:	mov	x1, #0x80                  	// #128
    ee40:	bl	0 <_ZdlPvm>
    ee44:	add	x24, x24, #0x10
    ee48:	cmp	x26, x24
    ee4c:	b.ne	ed90 <_ZN4llvm8TGParser15ParseMultiClassEv+0x190>  // b.any
    ee50:	ldp	x27, x28, [sp, #80]
    ee54:	ldr	x26, [x25, #128]
    ee58:	cbz	x26, ee64 <_ZN4llvm8TGParser15ParseMultiClassEv+0x264>
    ee5c:	mov	x0, x26
    ee60:	bl	0 <_ZdlPv>
    ee64:	ldr	x0, [x25, #88]
    ee68:	add	x1, x25, #0x68
    ee6c:	add	x24, x25, #0x58
    ee70:	cmp	x0, x1
    ee74:	b.eq	ee7c <_ZN4llvm8TGParser15ParseMultiClassEv+0x27c>  // b.none
    ee78:	bl	0 <free>
    ee7c:	ldr	x0, [x25, #72]
    ee80:	add	x20, x25, #0x48
    ee84:	cmp	x24, x0
    ee88:	b.eq	ee90 <_ZN4llvm8TGParser15ParseMultiClassEv+0x290>  // b.none
    ee8c:	bl	0 <free>
    ee90:	ldr	x0, [x25, #56]
    ee94:	cmp	x20, x0
    ee98:	b.eq	eea0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2a0>  // b.none
    ee9c:	bl	0 <free>
    eea0:	ldr	x0, [x25, #8]
    eea4:	add	x1, x25, #0x18
    eea8:	cmp	x0, x1
    eeac:	b.eq	eeb4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2b4>  // b.none
    eeb0:	bl	0 <free>
    eeb4:	mov	x0, x25
    eeb8:	mov	x1, #0x98                  	// #152
    eebc:	bl	0 <_ZdlPvm>
    eec0:	ldr	x0, [sp, #248]
    eec4:	add	x1, x22, #0x10
    eec8:	cmp	x0, x1
    eecc:	b.eq	eed4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2d4>  // b.none
    eed0:	bl	0 <_ZdlPv>
    eed4:	cbnz	w21, ef80 <_ZN4llvm8TGParser15ParseMultiClassEv+0x380>
    eed8:	add	x20, sp, #0xb0
    eedc:	mov	x1, x23
    eee0:	mov	x8, x20
    eee4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eee8:	add	x0, x0, #0x0
    eeec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    eef0:	mov	x8, x22
    eef4:	add	x21, sp, #0x78
    eef8:	mov	x0, x20
    eefc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ef00:	add	x1, x1, #0x0
    ef04:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ef08:	mov	x0, x21
    ef0c:	mov	x1, x22
    ef10:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ef14:	add	x22, x22, #0x10
    ef18:	mov	x1, x21
    ef1c:	mov	x0, x19
    ef20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ef24:	and	w21, w0, #0xff
    ef28:	ldr	x2, [sp, #248]
    ef2c:	cmp	x2, x22
    ef30:	b.eq	ef3c <_ZN4llvm8TGParser15ParseMultiClassEv+0x33c>  // b.none
    ef34:	mov	x0, x2
    ef38:	bl	0 <_ZdlPv>
    ef3c:	ldr	x0, [sp, #176]
    ef40:	add	x20, x20, #0x10
    ef44:	cmp	x0, x20
    ef48:	b.eq	ef50 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>  // b.none
    ef4c:	bl	0 <_ZdlPv>
    ef50:	ldr	x0, [sp, #144]
    ef54:	add	x23, x23, #0x10
    ef58:	cmp	x0, x23
    ef5c:	b.eq	efe0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3e0>  // b.none
    ef60:	bl	0 <_ZdlPv>
    ef64:	mov	w0, w21
    ef68:	ldp	x19, x20, [sp, #16]
    ef6c:	ldp	x21, x22, [sp, #32]
    ef70:	ldp	x23, x24, [sp, #48]
    ef74:	ldp	x25, x26, [sp, #64]
    ef78:	ldp	x29, x30, [sp], #320
    ef7c:	ret
    ef80:	ldp	x3, x2, [x19, #8]
    ef84:	mov	x0, x19
    ef88:	ldr	x1, [sp, #96]
    ef8c:	cmp	x3, x2
    ef90:	ldr	x1, [x1, #64]
    ef94:	str	x1, [x19, #328]
    ef98:	cset	w1, eq  // eq = none
    ef9c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    efa0:	str	w0, [x19, #40]
    efa4:	cmp	w0, #0xa
    efa8:	b.eq	effc <_ZN4llvm8TGParser15ParseMultiClassEv+0x3fc>  // b.none
    efac:	cmp	w0, #0xc
    efb0:	b.eq	f018 <_ZN4llvm8TGParser15ParseMultiClassEv+0x418>  // b.none
    efb4:	cmp	w0, #0x6
    efb8:	b.eq	f0fc <_ZN4llvm8TGParser15ParseMultiClassEv+0x4fc>  // b.none
    efbc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    efc0:	mov	x0, x22
    efc4:	add	x1, x1, #0x0
    efc8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    efcc:	mov	x1, x22
    efd0:	mov	x0, x19
    efd4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    efd8:	and	w21, w0, #0xff
    efdc:	b	ef50 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>
    efe0:	mov	w0, w21
    efe4:	ldp	x19, x20, [sp, #16]
    efe8:	ldp	x21, x22, [sp, #32]
    efec:	ldp	x23, x24, [sp, #48]
    eff0:	ldp	x25, x26, [sp, #64]
    eff4:	ldp	x29, x30, [sp], #320
    eff8:	ret
    effc:	mov	x0, x19
    f000:	mov	x1, #0x0                   	// #0
    f004:	bl	b910 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>
    f008:	tst	w0, #0xff
    f00c:	b.ne	ef50 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>  // b.any
    f010:	ldr	w0, [x19, #40]
    f014:	b	efac <_ZN4llvm8TGParser15ParseMultiClassEv+0x3ac>
    f018:	ldp	x2, x1, [x19, #8]
    f01c:	mov	x0, x19
    f020:	add	x20, sp, #0xb0
    f024:	cmp	x2, x1
    f028:	cset	w1, eq  // eq = none
    f02c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f030:	str	w0, [x19, #40]
    f034:	ldr	x1, [x19, #328]
    f038:	mov	x0, x19
    f03c:	mov	x8, x20
    f040:	bl	a2d0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>
    f044:	ldr	x0, [sp, #192]
    f048:	cbz	x0, f0d8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4d8>
    f04c:	add	x26, x22, #0x18
    f050:	add	x25, x20, #0x18
    f054:	add	x24, x22, #0x28
    f058:	ldr	x1, [x19, #328]
    f05c:	mov	x2, x20
    f060:	mov	x0, x19
    f064:	bl	3868 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE>
    f068:	tst	w0, #0xff
    f06c:	b.ne	f0d8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4d8>  // b.any
    f070:	ldr	w1, [x19, #40]
    f074:	cmp	w1, #0xe
    f078:	b.ne	f180 <_ZN4llvm8TGParser15ParseMultiClassEv+0x580>  // b.any
    f07c:	ldp	x2, x1, [x19, #8]
    f080:	mov	x0, x19
    f084:	cmp	x2, x1
    f088:	cset	w1, eq  // eq = none
    f08c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f090:	str	w0, [x19, #40]
    f094:	ldr	x1, [x19, #328]
    f098:	mov	x8, x22
    f09c:	mov	x0, x19
    f0a0:	bl	a2d0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>
    f0a4:	ldp	x4, x5, [sp, #248]
    f0a8:	mov	x1, x26
    f0ac:	ldr	x2, [sp, #264]
    f0b0:	mov	x0, x25
    f0b4:	stp	x4, x5, [sp, #176]
    f0b8:	str	x2, [sp, #192]
    f0bc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f0c0:	ldr	x0, [sp, #272]
    f0c4:	cmp	x0, x24
    f0c8:	b.eq	f0f0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4f0>  // b.none
    f0cc:	bl	0 <free>
    f0d0:	ldr	x0, [sp, #192]
    f0d4:	cbnz	x0, f058 <_ZN4llvm8TGParser15ParseMultiClassEv+0x458>
    f0d8:	ldr	x0, [sp, #200]
    f0dc:	add	x20, x20, #0x28
    f0e0:	cmp	x0, x20
    f0e4:	b.eq	ef50 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>  // b.none
    f0e8:	bl	0 <free>
    f0ec:	b	ef50 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>
    f0f0:	ldr	x0, [sp, #192]
    f0f4:	cbnz	x0, f058 <_ZN4llvm8TGParser15ParseMultiClassEv+0x458>
    f0f8:	b	f0d8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4d8>
    f0fc:	ldp	x2, x1, [x19, #8]
    f100:	mov	x0, x19
    f104:	cmp	x2, x1
    f108:	cset	w1, eq  // eq = none
    f10c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f110:	str	w0, [x19, #40]
    f114:	cmp	w0, #0x7
    f118:	b.eq	f1dc <_ZN4llvm8TGParser15ParseMultiClassEv+0x5dc>  // b.none
    f11c:	mov	x0, x19
    f120:	mov	x20, #0x47000000            	// #1191182336
    f124:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f128:	mov	x25, x0
    f12c:	mov	x24, #0x1                   	// #1
    f130:	movk	x20, #0x18, lsl #32
    f134:	nop
    f138:	ldr	w1, [x19, #40]
    f13c:	cmp	w1, #0x7
    f140:	b.eq	f1ec <_ZN4llvm8TGParser15ParseMultiClassEv+0x5ec>  // b.none
    f144:	cmp	w1, #0x24
    f148:	b.hi	f158 <_ZN4llvm8TGParser15ParseMultiClassEv+0x558>  // b.pmore
    f14c:	lsl	x1, x24, x1
    f150:	tst	x1, x20
    f154:	b.ne	f168 <_ZN4llvm8TGParser15ParseMultiClassEv+0x568>  // b.any
    f158:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f15c:	mov	x0, x22
    f160:	add	x1, x1, #0x0
    f164:	b	efc8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3c8>
    f168:	ldr	x1, [x19, #328]
    f16c:	mov	x0, x19
    f170:	bl	ea50 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    f174:	tst	w0, #0xff
    f178:	b.eq	f138 <_ZN4llvm8TGParser15ParseMultiClassEv+0x538>  // b.none
    f17c:	b	ef50 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>
    f180:	ldr	x0, [sp, #200]
    f184:	add	x20, x20, #0x28
    f188:	cmp	x0, x20
    f18c:	b.eq	f198 <_ZN4llvm8TGParser15ParseMultiClassEv+0x598>  // b.none
    f190:	bl	0 <free>
    f194:	ldr	w1, [x19, #40]
    f198:	cmp	w1, #0x6
    f19c:	b.eq	f0fc <_ZN4llvm8TGParser15ParseMultiClassEv+0x4fc>  // b.none
    f1a0:	cmp	w1, #0xd
    f1a4:	b.eq	f1b8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5b8>  // b.none
    f1a8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f1ac:	mov	x0, x22
    f1b0:	add	x1, x1, #0x0
    f1b4:	b	efc8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3c8>
    f1b8:	ldp	x2, x1, [x19, #8]
    f1bc:	mov	x0, x19
    f1c0:	cmp	x2, x1
    f1c4:	cset	w1, eq  // eq = none
    f1c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f1cc:	str	w0, [x19, #40]
    f1d0:	mov	w21, #0x0                   	// #0
    f1d4:	str	xzr, [x19, #328]
    f1d8:	b	ef50 <_ZN4llvm8TGParser15ParseMultiClassEv+0x350>
    f1dc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f1e0:	mov	x0, x22
    f1e4:	add	x1, x1, #0x0
    f1e8:	b	efc8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3c8>
    f1ec:	ldp	x2, x1, [x19, #8]
    f1f0:	mov	x0, x19
    f1f4:	cmp	x2, x1
    f1f8:	cset	w1, eq  // eq = none
    f1fc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f200:	str	w0, [x19, #40]
    f204:	mov	x1, x25
    f208:	mov	x0, x19
    f20c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f210:	b	f1d0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5d0>
    f214:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f218:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f21c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f220:	add	x3, x3, #0x0
    f224:	add	x1, x1, #0x0
    f228:	add	x0, x0, #0x0
    f22c:	mov	w2, #0xc63                 	// #3171
    f230:	stp	x23, x24, [sp, #48]
    f234:	stp	x25, x26, [sp, #64]
    f238:	stp	x27, x28, [sp, #80]
    f23c:	bl	0 <__assert_fail>

000000000000f240 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>:
    f240:	stp	x29, x30, [sp, #-32]!
    f244:	mov	x29, sp
    f248:	stp	x19, x20, [sp, #16]
    f24c:	mov	x19, x0
    f250:	mov	x20, x1
    f254:	b	f264 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x24>
    f258:	bl	ea50 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    f25c:	ands	w2, w0, #0xff
    f260:	b.ne	f2a0 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x60>  // b.any
    f264:	ldr	w3, [x19, #40]
    f268:	mov	x1, x20
    f26c:	mov	x0, x19
    f270:	sub	w2, w3, #0x18
    f274:	sub	w4, w3, #0x1e
    f278:	cmp	w2, #0x2
    f27c:	cset	w2, ls  // ls = plast
    f280:	cmp	w3, #0x15
    f284:	csinc	w2, w2, wzr, ne  // ne = any
    f288:	cbnz	w2, f258 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x18>
    f28c:	sub	w3, w3, #0x22
    f290:	tst	w4, #0xfffffffd
    f294:	b.eq	f258 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x18>  // b.none
    f298:	cmp	w3, #0x2
    f29c:	b.ls	f258 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x18>  // b.plast
    f2a0:	mov	w0, w2
    f2a4:	ldp	x19, x20, [sp, #16]
    f2a8:	ldp	x29, x30, [sp], #32
    f2ac:	ret

000000000000f2b0 <_ZN4llvm8TGParser11ParseDefsetEv>:
    f2b0:	stp	x29, x30, [sp, #-256]!
    f2b4:	mov	x29, sp
    f2b8:	ldr	w1, [x0, #40]
    f2bc:	stp	x19, x20, [sp, #16]
    f2c0:	cmp	w1, #0x22
    f2c4:	stp	x21, x22, [sp, #32]
    f2c8:	b.ne	f594 <_ZN4llvm8TGParser11ParseDefsetEv+0x2e4>  // b.any
    f2cc:	ldp	x1, x2, [x0, #8]
    f2d0:	mov	x19, x0
    f2d4:	add	x21, sp, #0x60
    f2d8:	cmp	x2, x1
    f2dc:	cset	w1, eq  // eq = none
    f2e0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f2e4:	str	w0, [x19, #40]
    f2e8:	add	x2, x21, #0x20
    f2ec:	mov	x1, #0x1000000000          	// #68719476736
    f2f0:	mov	x0, x19
    f2f4:	stp	xzr, xzr, [sp, #96]
    f2f8:	stp	x2, x1, [sp, #112]
    f2fc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f300:	str	x0, [sp, #96]
    f304:	mov	x0, x19
    f308:	bl	49a0 <_ZN4llvm8TGParser9ParseTypeEv>
    f30c:	cbz	x0, f3e8 <_ZN4llvm8TGParser11ParseDefsetEv+0x138>
    f310:	ldr	w1, [x0, #8]
    f314:	cmp	w1, #0x5
    f318:	b.eq	f374 <_ZN4llvm8TGParser11ParseDefsetEv+0xc4>  // b.none
    f31c:	add	x19, sp, #0x48
    f320:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f324:	mov	x0, x19
    f328:	add	x1, x1, #0x0
    f32c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f330:	mov	w20, #0x1                   	// #1
    f334:	ldr	x3, [sp, #96]
    f338:	mov	x2, x19
    f33c:	add	x0, sp, #0x40
    f340:	mov	x1, #0x1                   	// #1
    f344:	str	x3, [sp, #64]
    f348:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f34c:	ldr	x0, [sp, #112]
    f350:	add	x1, x21, #0x20
    f354:	cmp	x0, x1
    f358:	b.eq	f360 <_ZN4llvm8TGParser11ParseDefsetEv+0xb0>  // b.none
    f35c:	bl	0 <free>
    f360:	mov	w0, w20
    f364:	ldp	x19, x20, [sp, #16]
    f368:	ldp	x21, x22, [sp, #32]
    f36c:	ldp	x29, x30, [sp], #256
    f370:	ret
    f374:	ldr	x0, [x0, #24]
    f378:	str	x0, [sp, #104]
    f37c:	ldr	w0, [x19, #40]
    f380:	cmp	w0, #0x48
    f384:	b.eq	f3b0 <_ZN4llvm8TGParser11ParseDefsetEv+0x100>  // b.none
    f388:	add	x20, sp, #0x48
    f38c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f390:	mov	x0, x20
    f394:	add	x1, x1, #0x0
    f398:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f39c:	mov	x1, x20
    f3a0:	mov	x0, x19
    f3a4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f3a8:	and	w20, w0, #0xff
    f3ac:	b	f34c <_ZN4llvm8TGParser11ParseDefsetEv+0x9c>
    f3b0:	ldp	x0, x1, [x19, #48]
    f3b4:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    f3b8:	mov	x22, x0
    f3bc:	ldr	x0, [x19, #344]
    f3c0:	ldp	x1, x2, [x22, #24]
    f3c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f3c8:	cbz	x0, f3f0 <_ZN4llvm8TGParser11ParseDefsetEv+0x140>
    f3cc:	add	x20, sp, #0x48
    f3d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f3d4:	mov	x0, x20
    f3d8:	add	x1, x1, #0x0
    f3dc:	b	f398 <_ZN4llvm8TGParser11ParseDefsetEv+0xe8>
    f3e0:	ldp	x23, x24, [sp, #48]
    f3e4:	nop
    f3e8:	mov	w20, #0x1                   	// #1
    f3ec:	b	f34c <_ZN4llvm8TGParser11ParseDefsetEv+0x9c>
    f3f0:	ldp	x2, x1, [x19, #8]
    f3f4:	mov	x0, x19
    f3f8:	cmp	x2, x1
    f3fc:	cset	w1, eq  // eq = none
    f400:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f404:	str	w0, [x19, #40]
    f408:	cmp	w0, #0x10
    f40c:	b.eq	f424 <_ZN4llvm8TGParser11ParseDefsetEv+0x174>  // b.none
    f410:	add	x20, sp, #0x48
    f414:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f418:	mov	x0, x20
    f41c:	add	x1, x1, #0x0
    f420:	b	f398 <_ZN4llvm8TGParser11ParseDefsetEv+0xe8>
    f424:	ldp	x2, x1, [x19, #8]
    f428:	mov	x0, x19
    f42c:	cmp	x2, x1
    f430:	cset	w1, eq  // eq = none
    f434:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f438:	str	w0, [x19, #40]
    f43c:	cmp	w0, #0x6
    f440:	b.eq	f458 <_ZN4llvm8TGParser11ParseDefsetEv+0x1a8>  // b.none
    f444:	add	x20, sp, #0x48
    f448:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f44c:	mov	x0, x20
    f450:	add	x1, x1, #0x0
    f454:	b	f398 <_ZN4llvm8TGParser11ParseDefsetEv+0xe8>
    f458:	mov	x0, x19
    f45c:	stp	x23, x24, [sp, #48]
    f460:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f464:	ldp	x2, x1, [x19, #8]
    f468:	mov	x23, x0
    f46c:	mov	x0, x19
    f470:	cmp	x2, x1
    f474:	cset	w1, eq  // eq = none
    f478:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f47c:	str	w0, [x19, #40]
    f480:	ldr	w1, [x19, #308]
    f484:	ldr	w0, [x19, #304]
    f488:	cmp	w0, w1
    f48c:	b.cs	f5b8 <_ZN4llvm8TGParser11ParseDefsetEv+0x308>  // b.hs, b.nlast
    f490:	ldr	x1, [x19, #296]
    f494:	str	x21, [x1, w0, uxtw #3]
    f498:	ldr	w0, [x19, #304]
    f49c:	ldr	w2, [x19, #308]
    f4a0:	mov	w1, w0
    f4a4:	add	x1, x1, #0x1
    f4a8:	cmp	x1, x2
    f4ac:	b.hi	f5d4 <_ZN4llvm8TGParser11ParseDefsetEv+0x324>  // b.pmore
    f4b0:	add	w2, w0, #0x1
    f4b4:	str	w2, [x19, #304]
    f4b8:	mov	x1, #0x0                   	// #0
    f4bc:	mov	x0, x19
    f4c0:	bl	f240 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    f4c4:	and	w20, w0, #0xff
    f4c8:	ldr	w1, [x19, #304]
    f4cc:	ldr	w2, [x19, #308]
    f4d0:	mov	w0, w1
    f4d4:	sub	x0, x0, #0x1
    f4d8:	cmp	x0, x2
    f4dc:	b.hi	f5d4 <_ZN4llvm8TGParser11ParseDefsetEv+0x324>  // b.pmore
    f4e0:	sub	w1, w1, #0x1
    f4e4:	str	w1, [x19, #304]
    f4e8:	cbnz	w20, f3e0 <_ZN4llvm8TGParser11ParseDefsetEv+0x130>
    f4ec:	ldr	w0, [x19, #40]
    f4f0:	cmp	w0, #0x7
    f4f4:	b.eq	f548 <_ZN4llvm8TGParser11ParseDefsetEv+0x298>  // b.none
    f4f8:	add	x20, sp, #0x48
    f4fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f500:	mov	x0, x20
    f504:	add	x1, x1, #0x0
    f508:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f50c:	mov	x1, x20
    f510:	mov	x0, x19
    f514:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f518:	mov	x0, x20
    f51c:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f520:	add	x1, x1, #0x0
    f524:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f528:	mov	x2, x20
    f52c:	add	x0, sp, #0x40
    f530:	mov	x1, #0x1                   	// #1
    f534:	mov	w20, #0x1                   	// #1
    f538:	str	x23, [sp, #64]
    f53c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f540:	ldp	x23, x24, [sp, #48]
    f544:	b	f34c <_ZN4llvm8TGParser11ParseDefsetEv+0x9c>
    f548:	ldp	x2, x1, [x19, #8]
    f54c:	mov	x0, x19
    f550:	cmp	x2, x1
    f554:	cset	w1, eq  // eq = none
    f558:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f55c:	ldp	x23, x22, [x22, #24]
    f560:	str	w0, [x19, #40]
    f564:	ldr	w1, [sp, #120]
    f568:	ldr	x2, [sp, #104]
    f56c:	ldr	x0, [sp, #112]
    f570:	ldr	x19, [x19, #344]
    f574:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    f578:	mov	x3, x0
    f57c:	mov	x1, x23
    f580:	mov	x2, x22
    f584:	mov	x0, x19
    f588:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f58c:	ldp	x23, x24, [sp, #48]
    f590:	b	f34c <_ZN4llvm8TGParser11ParseDefsetEv+0x9c>
    f594:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f598:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f59c:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5a0:	add	x3, x3, #0x0
    f5a4:	add	x1, x1, #0x0
    f5a8:	add	x0, x0, #0x0
    f5ac:	mov	w2, #0xada                 	// #2778
    f5b0:	stp	x23, x24, [sp, #48]
    f5b4:	bl	0 <__assert_fail>
    f5b8:	add	x0, x19, #0x128
    f5bc:	add	x1, x19, #0x138
    f5c0:	mov	x3, #0x8                   	// #8
    f5c4:	mov	x2, #0x0                   	// #0
    f5c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    f5cc:	ldr	w0, [x19, #304]
    f5d0:	b	f490 <_ZN4llvm8TGParser11ParseDefsetEv+0x1e0>
    f5d4:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5d8:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5dc:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f5e0:	add	x3, x3, #0x0
    f5e4:	add	x1, x1, #0x0
    f5e8:	add	x0, x0, #0x0
    f5ec:	mov	w2, #0x43                  	// #67
    f5f0:	bl	0 <__assert_fail>
    f5f4:	nop

000000000000f5f8 <_ZN4llvm8TGParser9ParseFileEv>:
    f5f8:	stp	x29, x30, [sp, #-64]!
    f5fc:	mov	x29, sp
    f600:	ldp	x2, x1, [x0, #8]
    f604:	stp	x19, x20, [sp, #16]
    f608:	mov	x19, x0
    f60c:	cmp	x2, x1
    f610:	cset	w1, eq  // eq = none
    f614:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f618:	str	w0, [x19, #40]
    f61c:	mov	x1, #0x0                   	// #0
    f620:	mov	x0, x19
    f624:	bl	f240 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    f628:	ands	w0, w0, #0xff
    f62c:	b.ne	f638 <_ZN4llvm8TGParser9ParseFileEv+0x40>  // b.any
    f630:	ldr	w1, [x19, #40]
    f634:	cbnz	w1, f644 <_ZN4llvm8TGParser9ParseFileEv+0x4c>
    f638:	ldp	x19, x20, [sp, #16]
    f63c:	ldp	x29, x30, [sp], #64
    f640:	ret
    f644:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f648:	add	x1, x1, #0x0
    f64c:	add	x20, sp, #0x28
    f650:	mov	x0, x20
    f654:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f658:	mov	x0, x19
    f65c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f660:	mov	x3, x0
    f664:	mov	x2, x20
    f668:	add	x0, sp, #0x20
    f66c:	mov	x1, #0x1                   	// #1
    f670:	str	x3, [sp, #32]
    f674:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f678:	mov	w0, #0x1                   	// #1
    f67c:	ldp	x19, x20, [sp, #16]
    f680:	ldp	x29, x30, [sp], #64
    f684:	ret

000000000000f688 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE>:
    f688:	stp	x29, x30, [sp, #-128]!
    f68c:	mov	x29, sp
    f690:	stp	x19, x20, [sp, #16]
    f694:	mov	x19, x0
    f698:	stp	x23, x24, [sp, #48]
    f69c:	mov	x24, x1
    f6a0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f6a4:	ldr	w1, [x19, #40]
    f6a8:	stp	x21, x22, [sp, #32]
    f6ac:	cmp	w1, #0x19
    f6b0:	b.ne	f9cc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x344>  // b.any
    f6b4:	ldp	x1, x2, [x19, #8]
    f6b8:	mov	x21, x0
    f6bc:	mov	x0, x19
    f6c0:	cmp	x2, x1
    f6c4:	cset	w1, eq  // eq = none
    f6c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f6cc:	str	w0, [x19, #40]
    f6d0:	add	x1, sp, #0x58
    f6d4:	mov	x0, x19
    f6d8:	str	xzr, [sp, #88]
    f6dc:	bl	a3f8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE>
    f6e0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f6e4:	mov	x20, x0
    f6e8:	add	x1, x1, #0x0
    f6ec:	cbz	x0, f704 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x7c>
    f6f0:	ldr	w0, [x19, #40]
    f6f4:	cmp	w0, #0x1c
    f6f8:	b.eq	f74c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xc4>  // b.none
    f6fc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f700:	add	x1, x1, #0x0
    f704:	add	x21, sp, #0x68
    f708:	mov	w20, #0x1                   	// #1
    f70c:	mov	x0, x21
    f710:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f714:	mov	x0, x19
    f718:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f71c:	mov	x3, x0
    f720:	mov	x2, x21
    f724:	add	x0, sp, #0x60
    f728:	mov	x1, #0x1                   	// #1
    f72c:	str	x3, [sp, #96]
    f730:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f734:	mov	w0, w20
    f738:	ldp	x19, x20, [sp, #16]
    f73c:	ldp	x21, x22, [sp, #32]
    f740:	ldp	x23, x24, [sp, #48]
    f744:	ldp	x29, x30, [sp], #128
    f748:	ret
    f74c:	ldp	x2, x1, [x19, #8]
    f750:	mov	x0, x19
    f754:	stp	x25, x26, [sp, #64]
    f758:	cmp	x2, x1
    f75c:	cset	w1, eq  // eq = none
    f760:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f764:	str	w0, [x19, #40]
    f768:	mov	x0, #0x30                  	// #48
    f76c:	ldr	x22, [sp, #88]
    f770:	bl	0 <_Znwm>
    f774:	add	x3, x19, #0x110
    f778:	stp	x21, x20, [x0]
    f77c:	stp	x22, xzr, [x0, #16]
    f780:	ldp	x1, x4, [x3, #8]
    f784:	stp	xzr, xzr, [x0, #32]
    f788:	str	x0, [sp, #104]
    f78c:	cmp	x1, x4
    f790:	b.eq	f9bc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x334>  // b.none
    f794:	str	xzr, [sp, #104]
    f798:	str	x0, [x1], #8
    f79c:	str	x1, [x3, #8]
    f7a0:	ldr	x26, [sp, #104]
    f7a4:	cbz	x26, f88c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x204>
    f7a8:	ldp	x21, x25, [x26, #24]
    f7ac:	cmp	x21, x25
    f7b0:	b.eq	f874 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1ec>  // b.none
    f7b4:	nop
    f7b8:	ldr	x22, [x21, #8]
    f7bc:	cbz	x22, f800 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x178>
    f7c0:	ldp	x20, x23, [x22, #24]
    f7c4:	cmp	x20, x23
    f7c8:	b.eq	f7e8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x160>  // b.none
    f7cc:	nop
    f7d0:	mov	x0, x20
    f7d4:	add	x20, x20, #0x10
    f7d8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f7dc:	cmp	x23, x20
    f7e0:	b.ne	f7d0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x148>  // b.any
    f7e4:	ldr	x23, [x22, #24]
    f7e8:	cbz	x23, f7f4 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x16c>
    f7ec:	mov	x0, x23
    f7f0:	bl	0 <_ZdlPv>
    f7f4:	mov	x0, x22
    f7f8:	mov	x1, #0x30                  	// #48
    f7fc:	bl	0 <_ZdlPvm>
    f800:	ldr	x20, [x21]
    f804:	cbz	x20, f864 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1dc>
    f808:	ldr	x0, [x20, #88]
    f80c:	add	x1, x20, #0x68
    f810:	add	x23, x20, #0x58
    f814:	cmp	x0, x1
    f818:	b.eq	f820 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x198>  // b.none
    f81c:	bl	0 <free>
    f820:	ldr	x0, [x20, #72]
    f824:	add	x22, x20, #0x48
    f828:	cmp	x23, x0
    f82c:	b.eq	f834 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1ac>  // b.none
    f830:	bl	0 <free>
    f834:	ldr	x0, [x20, #56]
    f838:	cmp	x22, x0
    f83c:	b.eq	f844 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1bc>  // b.none
    f840:	bl	0 <free>
    f844:	ldr	x0, [x20, #8]
    f848:	add	x1, x20, #0x18
    f84c:	cmp	x0, x1
    f850:	b.eq	f858 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1d0>  // b.none
    f854:	bl	0 <free>
    f858:	mov	x0, x20
    f85c:	mov	x1, #0x80                  	// #128
    f860:	bl	0 <_ZdlPvm>
    f864:	add	x21, x21, #0x10
    f868:	cmp	x25, x21
    f86c:	b.ne	f7b8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x130>  // b.any
    f870:	ldr	x25, [x26, #24]
    f874:	cbz	x25, f880 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1f8>
    f878:	mov	x0, x25
    f87c:	bl	0 <_ZdlPv>
    f880:	mov	x0, x26
    f884:	mov	x1, #0x30                  	// #48
    f888:	bl	0 <_ZdlPvm>
    f88c:	mov	x0, x19
    f890:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f894:	ldr	w2, [x19, #40]
    f898:	mov	x21, x0
    f89c:	cmp	w2, #0x6
    f8a0:	b.eq	f90c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x284>  // b.none
    f8a4:	mov	x1, x24
    f8a8:	mov	x0, x19
    f8ac:	bl	ea50 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    f8b0:	ands	w20, w0, #0xff
    f8b4:	b.ne	f8f0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x268>  // b.any
    f8b8:	mov	x1, x21
    f8bc:	mov	x0, x19
    f8c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f8c4:	add	x21, sp, #0x68
    f8c8:	ldr	x2, [x19, #280]
    f8cc:	mov	x1, x21
    f8d0:	mov	x0, x19
    f8d4:	ldr	x3, [x2, #-8]!
    f8d8:	str	x2, [x19, #280]
    f8dc:	stp	xzr, x3, [sp, #104]
    f8e0:	bl	3e00 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    f8e4:	and	w20, w0, #0xff
    f8e8:	mov	x0, x21
    f8ec:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f8f0:	mov	w0, w20
    f8f4:	ldp	x19, x20, [sp, #16]
    f8f8:	ldp	x21, x22, [sp, #32]
    f8fc:	ldp	x23, x24, [sp, #48]
    f900:	ldp	x25, x26, [sp, #64]
    f904:	ldp	x29, x30, [sp], #128
    f908:	ret
    f90c:	mov	x0, x19
    f910:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    f914:	ldp	x2, x1, [x19, #8]
    f918:	mov	x22, x0
    f91c:	mov	x0, x19
    f920:	cmp	x2, x1
    f924:	cset	w1, eq  // eq = none
    f928:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f92c:	str	w0, [x19, #40]
    f930:	mov	x1, x24
    f934:	mov	x0, x19
    f938:	bl	f240 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    f93c:	tst	w0, #0xff
    f940:	b.ne	f994 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x30c>  // b.any
    f944:	ldr	w0, [x19, #40]
    f948:	cmp	w0, #0x7
    f94c:	b.eq	f9a0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x318>  // b.none
    f950:	add	x20, sp, #0x68
    f954:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f958:	mov	x0, x20
    f95c:	add	x1, x1, #0x0
    f960:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f964:	mov	x1, x20
    f968:	mov	x0, x19
    f96c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f970:	mov	x0, x20
    f974:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f978:	add	x1, x1, #0x0
    f97c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f980:	mov	x2, x20
    f984:	add	x0, sp, #0x60
    f988:	mov	x1, #0x1                   	// #1
    f98c:	str	x22, [sp, #96]
    f990:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    f994:	mov	w20, #0x1                   	// #1
    f998:	ldp	x25, x26, [sp, #64]
    f99c:	b	f734 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xac>
    f9a0:	ldp	x2, x1, [x19, #8]
    f9a4:	mov	x0, x19
    f9a8:	cmp	x2, x1
    f9ac:	cset	w1, eq  // eq = none
    f9b0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    f9b4:	str	w0, [x19, #40]
    f9b8:	b	f8b8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x230>
    f9bc:	mov	x0, x3
    f9c0:	add	x2, sp, #0x68
    f9c4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f9c8:	b	f7a0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x118>
    f9cc:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f9d0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f9d4:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    f9d8:	add	x3, x3, #0x0
    f9dc:	add	x1, x1, #0x0
    f9e0:	add	x0, x0, #0x0
    f9e4:	mov	w2, #0xb33                 	// #2867
    f9e8:	stp	x25, x26, [sp, #64]
    f9ec:	bl	0 <__assert_fail>

000000000000f9f0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>:
    f9f0:	stp	x29, x30, [sp, #-176]!
    f9f4:	mov	x29, sp
    f9f8:	stp	x19, x20, [sp, #16]
    f9fc:	mov	x19, x0
    fa00:	stp	x21, x22, [sp, #32]
    fa04:	mov	x21, x1
    fa08:	stp	x2, x3, [sp, #80]
    fa0c:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fa10:	ldr	w1, [x19, #40]
    fa14:	mov	x20, x0
    fa18:	cmp	w1, #0x6
    fa1c:	b.eq	fc70 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x280>  // b.none
    fa20:	mov	x1, x21
    fa24:	mov	x0, x19
    fa28:	bl	ea50 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    fa2c:	ands	w0, w0, #0xff
    fa30:	b.ne	fc4c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x25c>  // b.any
    fa34:	ldr	x0, [x19, #336]
    fa38:	cmp	x20, x0
    fa3c:	b.ne	fdb8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x3c8>  // b.any
    fa40:	ldr	x1, [x20, #48]
    fa44:	str	xzr, [x20, #48]
    fa48:	mov	w0, #0x0                   	// #0
    fa4c:	ldr	x20, [x19, #336]
    fa50:	str	x1, [x19, #336]
    fa54:	cbz	x20, fc4c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x25c>
    fa58:	ldr	x21, [x20, #48]
    fa5c:	cbz	x21, fc04 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x214>
    fa60:	ldr	x22, [x21, #48]
    fa64:	cbz	x22, fbc0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1d0>
    fa68:	stp	x23, x24, [sp, #48]
    fa6c:	ldr	x23, [x22, #48]
    fa70:	cbz	x23, fb78 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x188>
    fa74:	ldr	x24, [x23, #48]
    fa78:	cbz	x24, fb34 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x144>
    fa7c:	stp	x25, x26, [sp, #64]
    fa80:	ldr	x25, [x24, #48]
    fa84:	cbz	x25, faec <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xfc>
    fa88:	ldr	x0, [x25, #48]
    fa8c:	cbz	x0, fa94 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xa4>
    fa90:	bl	1730 <_ZNKSt14default_deleteIN4llvm15TGLocalVarScopeEEclEPS1_.isra.0.part.0>
    fa94:	ldr	x19, [x25, #16]
    fa98:	cbz	x19, fae0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xf0>
    fa9c:	ldr	x1, [x19, #24]
    faa0:	mov	x0, x25
    faa4:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    faa8:	ldr	x0, [x19, #32]
    faac:	add	x1, x19, #0x30
    fab0:	ldr	x26, [x19, #16]
    fab4:	cmp	x0, x1
    fab8:	b.eq	fad4 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xe4>  // b.none
    fabc:	bl	0 <_ZdlPv>
    fac0:	mov	x0, x19
    fac4:	bl	0 <_ZdlPv>
    fac8:	cbz	x26, fae0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xf0>
    facc:	mov	x19, x26
    fad0:	b	fa9c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xac>
    fad4:	mov	x0, x19
    fad8:	bl	0 <_ZdlPv>
    fadc:	cbnz	x26, facc <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xdc>
    fae0:	mov	x0, x25
    fae4:	mov	x1, #0x38                  	// #56
    fae8:	bl	0 <_ZdlPvm>
    faec:	ldr	x19, [x24, #16]
    faf0:	cbz	x19, fb24 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x134>
    faf4:	ldr	x1, [x19, #24]
    faf8:	mov	x0, x24
    fafc:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fb00:	ldr	x0, [x19, #32]
    fb04:	add	x1, x19, #0x30
    fb08:	ldr	x25, [x19, #16]
    fb0c:	cmp	x0, x1
    fb10:	b.eq	fd90 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x3a0>  // b.none
    fb14:	bl	0 <_ZdlPv>
    fb18:	mov	x0, x19
    fb1c:	bl	0 <_ZdlPv>
    fb20:	cbnz	x25, fd9c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x3ac>
    fb24:	mov	x0, x24
    fb28:	mov	x1, #0x38                  	// #56
    fb2c:	bl	0 <_ZdlPvm>
    fb30:	ldp	x25, x26, [sp, #64]
    fb34:	ldr	x19, [x23, #16]
    fb38:	cbz	x19, fb6c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x17c>
    fb3c:	ldr	x1, [x19, #24]
    fb40:	mov	x0, x23
    fb44:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fb48:	ldr	x0, [x19, #32]
    fb4c:	add	x1, x19, #0x30
    fb50:	ldr	x24, [x19, #16]
    fb54:	cmp	x0, x1
    fb58:	b.eq	fda4 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x3b4>  // b.none
    fb5c:	bl	0 <_ZdlPv>
    fb60:	mov	x0, x19
    fb64:	bl	0 <_ZdlPv>
    fb68:	cbnz	x24, fdb0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x3c0>
    fb6c:	mov	x0, x23
    fb70:	mov	x1, #0x38                  	// #56
    fb74:	bl	0 <_ZdlPvm>
    fb78:	ldr	x19, [x22, #16]
    fb7c:	cbz	x19, fbb0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1c0>
    fb80:	ldr	x1, [x19, #24]
    fb84:	mov	x0, x22
    fb88:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fb8c:	ldr	x0, [x19, #32]
    fb90:	add	x1, x19, #0x30
    fb94:	ldr	x23, [x19, #16]
    fb98:	cmp	x0, x1
    fb9c:	b.eq	fd68 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x378>  // b.none
    fba0:	bl	0 <_ZdlPv>
    fba4:	mov	x0, x19
    fba8:	bl	0 <_ZdlPv>
    fbac:	cbnz	x23, fd74 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x384>
    fbb0:	mov	x0, x22
    fbb4:	mov	x1, #0x38                  	// #56
    fbb8:	bl	0 <_ZdlPvm>
    fbbc:	ldp	x23, x24, [sp, #48]
    fbc0:	ldr	x19, [x21, #16]
    fbc4:	cbz	x19, fbf8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x208>
    fbc8:	ldr	x1, [x19, #24]
    fbcc:	mov	x0, x21
    fbd0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fbd4:	ldr	x0, [x19, #32]
    fbd8:	add	x1, x19, #0x30
    fbdc:	ldr	x22, [x19, #16]
    fbe0:	cmp	x0, x1
    fbe4:	b.eq	fd7c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x38c>  // b.none
    fbe8:	bl	0 <_ZdlPv>
    fbec:	mov	x0, x19
    fbf0:	bl	0 <_ZdlPv>
    fbf4:	cbnz	x22, fd88 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x398>
    fbf8:	mov	x0, x21
    fbfc:	mov	x1, #0x38                  	// #56
    fc00:	bl	0 <_ZdlPvm>
    fc04:	ldr	x19, [x20, #16]
    fc08:	cbz	x19, fc3c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x24c>
    fc0c:	ldr	x1, [x19, #24]
    fc10:	mov	x0, x20
    fc14:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fc18:	ldr	x0, [x19, #32]
    fc1c:	add	x1, x19, #0x30
    fc20:	ldr	x21, [x19, #16]
    fc24:	cmp	x0, x1
    fc28:	b.eq	fc5c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x26c>  // b.none
    fc2c:	bl	0 <_ZdlPv>
    fc30:	mov	x0, x19
    fc34:	bl	0 <_ZdlPv>
    fc38:	cbnz	x21, fc68 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x278>
    fc3c:	mov	x0, x20
    fc40:	mov	x1, #0x38                  	// #56
    fc44:	bl	0 <_ZdlPvm>
    fc48:	mov	w0, #0x0                   	// #0
    fc4c:	ldp	x19, x20, [sp, #16]
    fc50:	ldp	x21, x22, [sp, #32]
    fc54:	ldp	x29, x30, [sp], #176
    fc58:	ret
    fc5c:	mov	x0, x19
    fc60:	bl	0 <_ZdlPv>
    fc64:	cbz	x21, fc3c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x24c>
    fc68:	mov	x19, x21
    fc6c:	b	fc0c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x21c>
    fc70:	mov	x0, x19
    fc74:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    fc78:	ldp	x2, x1, [x19, #8]
    fc7c:	mov	x22, x0
    fc80:	mov	x0, x19
    fc84:	cmp	x2, x1
    fc88:	cset	w1, eq  // eq = none
    fc8c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    fc90:	str	w0, [x19, #40]
    fc94:	mov	x1, x21
    fc98:	mov	x0, x19
    fc9c:	bl	f240 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>
    fca0:	tst	w0, #0xff
    fca4:	b.ne	fd38 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x348>  // b.any
    fca8:	ldr	w0, [x19, #40]
    fcac:	cmp	w0, #0x7
    fcb0:	b.eq	fd4c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x35c>  // b.none
    fcb4:	add	x2, sp, #0x50
    fcb8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fcbc:	add	x3, x3, #0x0
    fcc0:	mov	w4, #0x503                 	// #1283
    fcc4:	add	x21, sp, #0x80
    fcc8:	add	x20, sp, #0x98
    fccc:	mov	x0, x21
    fcd0:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fcd4:	add	x1, x1, #0x0
    fcd8:	stp	x3, x2, [sp, #104]
    fcdc:	strh	w4, [sp, #120]
    fce0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fce4:	mov	x8, x20
    fce8:	mov	x1, x21
    fcec:	add	x0, sp, #0x68
    fcf0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fcf4:	mov	x0, x19
    fcf8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    fcfc:	mov	x3, x0
    fd00:	mov	x2, x20
    fd04:	add	x0, sp, #0x60
    fd08:	mov	x1, #0x1                   	// #1
    fd0c:	str	x3, [sp, #96]
    fd10:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    fd14:	mov	x0, x20
    fd18:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fd1c:	add	x1, x1, #0x0
    fd20:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fd24:	mov	x2, x20
    fd28:	mov	x0, x21
    fd2c:	mov	x1, #0x1                   	// #1
    fd30:	str	x22, [sp, #128]
    fd34:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    fd38:	mov	w0, #0x1                   	// #1
    fd3c:	ldp	x19, x20, [sp, #16]
    fd40:	ldp	x21, x22, [sp, #32]
    fd44:	ldp	x29, x30, [sp], #176
    fd48:	ret
    fd4c:	ldp	x2, x1, [x19, #8]
    fd50:	mov	x0, x19
    fd54:	cmp	x2, x1
    fd58:	cset	w1, eq  // eq = none
    fd5c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    fd60:	str	w0, [x19, #40]
    fd64:	b	fa34 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x44>
    fd68:	mov	x0, x19
    fd6c:	bl	0 <_ZdlPv>
    fd70:	cbz	x23, fbb0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1c0>
    fd74:	mov	x19, x23
    fd78:	b	fb80 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x190>
    fd7c:	mov	x0, x19
    fd80:	bl	0 <_ZdlPv>
    fd84:	cbz	x22, fbf8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x208>
    fd88:	mov	x19, x22
    fd8c:	b	fbc8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1d8>
    fd90:	mov	x0, x19
    fd94:	bl	0 <_ZdlPv>
    fd98:	cbz	x25, fb24 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x134>
    fd9c:	mov	x19, x25
    fda0:	b	faf4 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x104>
    fda4:	mov	x0, x19
    fda8:	bl	0 <_ZdlPv>
    fdac:	cbz	x24, fb6c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x17c>
    fdb0:	mov	x19, x24
    fdb4:	b	fb3c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x14c>
    fdb8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fdbc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fdc0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fdc4:	add	x3, x3, #0x0
    fdc8:	add	x1, x1, #0x0
    fdcc:	add	x0, x0, #0x0
    fdd0:	mov	w2, #0xc0                  	// #192
    fdd4:	stp	x23, x24, [sp, #48]
    fdd8:	stp	x25, x26, [sp, #64]
    fddc:	bl	0 <__assert_fail>

000000000000fde0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE>:
    fde0:	stp	x29, x30, [sp, #-176]!
    fde4:	mov	x29, sp
    fde8:	stp	x19, x20, [sp, #16]
    fdec:	mov	x19, x0
    fdf0:	stp	x21, x22, [sp, #32]
    fdf4:	mov	x22, x1
    fdf8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    fdfc:	str	x0, [sp, #96]
    fe00:	ldr	w0, [x19, #40]
    fe04:	stp	x23, x24, [sp, #48]
    fe08:	cmp	w0, #0x24
    fe0c:	b.ne	102d8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x4f8>  // b.any
    fe10:	ldp	x1, x2, [x19, #8]
    fe14:	mov	x0, x19
    fe18:	cmp	x2, x1
    fe1c:	cset	w1, eq  // eq = none
    fe20:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    fe24:	str	w0, [x19, #40]
    fe28:	mov	w3, #0x0                   	// #0
    fe2c:	mov	x0, x19
    fe30:	mov	x2, #0x0                   	// #0
    fe34:	mov	x1, #0x0                   	// #0
    fe38:	bl	6298 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    fe3c:	mov	x21, x0
    fe40:	cbz	x0, 100a8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2c8>
    fe44:	ldr	w0, [x19, #40]
    fe48:	cmp	w0, #0x25
    fe4c:	b.eq	fea0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0xc0>  // b.none
    fe50:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fe54:	add	x1, x1, #0x0
    fe58:	add	x20, sp, #0x98
    fe5c:	mov	w24, #0x1                   	// #1
    fe60:	mov	x0, x20
    fe64:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    fe68:	mov	x0, x19
    fe6c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    fe70:	mov	x3, x0
    fe74:	mov	x2, x20
    fe78:	add	x0, sp, #0x90
    fe7c:	mov	x1, #0x1                   	// #1
    fe80:	str	x3, [sp, #144]
    fe84:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    fe88:	mov	w0, w24
    fe8c:	ldp	x19, x20, [sp, #16]
    fe90:	ldp	x21, x22, [sp, #32]
    fe94:	ldp	x23, x24, [sp, #48]
    fe98:	ldp	x29, x30, [sp], #176
    fe9c:	ret
    fea0:	ldp	x2, x1, [x19, #8]
    fea4:	adrp	x20, 0 <_ZN4llvm8BitRecTy6SharedE>
    fea8:	mov	x0, x19
    feac:	stp	x25, x26, [sp, #64]
    feb0:	add	x25, x19, #0x110
    feb4:	stp	x27, x28, [sp, #80]
    feb8:	add	x28, sp, #0x98
    febc:	cmp	x2, x1
    fec0:	cset	w1, eq  // eq = none
    fec4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    fec8:	str	w0, [x19, #40]
    fecc:	ldr	x20, [x20]
    fed0:	mov	x1, #0x0                   	// #0
    fed4:	mov	x0, #0x0                   	// #0
    fed8:	mov	x2, x20
    fedc:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    fee0:	mov	x1, x0
    fee4:	mov	w0, #0x1                   	// #1
    fee8:	mov	x24, x1
    feec:	str	x1, [sp, #120]
    fef0:	bl	0 <_ZN4llvm7BitInit3getEb>
    fef4:	mov	x3, x0
    fef8:	mov	x2, x20
    fefc:	mov	x1, #0x1                   	// #1
    ff00:	mov	x0, x28
    ff04:	str	x3, [sp, #152]
    ff08:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    ff0c:	mov	x23, x0
    ff10:	mov	x0, x20
    ff14:	str	x23, [sp, #128]
    ff18:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    ff1c:	mov	x4, x0
    ff20:	mov	x3, x24
    ff24:	mov	x2, x23
    ff28:	mov	x1, x21
    ff2c:	mov	w0, #0x2                   	// #2
    ff30:	str	x4, [sp, #136]
    ff34:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    ff38:	mov	x1, #0x0                   	// #0
    ff3c:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    ff40:	mov	x20, x0
    ff44:	mov	x0, #0x30                  	// #48
    ff48:	bl	0 <_Znwm>
    ff4c:	stp	x20, xzr, [x0, #16]
    ff50:	ldr	x3, [sp, #96]
    ff54:	stp	x3, xzr, [x0]
    ff58:	ldr	x1, [x25, #8]
    ff5c:	stp	xzr, xzr, [x0, #32]
    ff60:	ldr	x3, [x25, #16]
    ff64:	str	x0, [sp, #152]
    ff68:	cmp	x1, x3
    ff6c:	b.eq	10108 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x328>  // b.none
    ff70:	str	xzr, [sp, #152]
    ff74:	str	x0, [x1], #8
    ff78:	str	x1, [x25, #8]
    ff7c:	ldr	x0, [sp, #152]
    ff80:	str	x0, [sp, #112]
    ff84:	cbz	x0, 10080 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2a0>
    ff88:	ldp	x20, x24, [x0, #24]
    ff8c:	cmp	x20, x24
    ff90:	b.eq	10068 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x288>  // b.none
    ff94:	nop
    ff98:	ldr	x27, [x20, #8]
    ff9c:	cbz	x27, ffe0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x200>
    ffa0:	ldp	x23, x26, [x27, #24]
    ffa4:	cmp	x23, x26
    ffa8:	b.eq	ffc8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1e8>  // b.none
    ffac:	nop
    ffb0:	mov	x0, x23
    ffb4:	add	x23, x23, #0x10
    ffb8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
    ffbc:	cmp	x26, x23
    ffc0:	b.ne	ffb0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1d0>  // b.any
    ffc4:	ldr	x26, [x27, #24]
    ffc8:	cbz	x26, ffd4 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1f4>
    ffcc:	mov	x0, x26
    ffd0:	bl	0 <_ZdlPv>
    ffd4:	mov	x0, x27
    ffd8:	mov	x1, #0x30                  	// #48
    ffdc:	bl	0 <_ZdlPvm>
    ffe0:	ldr	x27, [x20]
    ffe4:	cbz	x27, 10054 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x274>
    ffe8:	ldr	x0, [x27, #88]
    ffec:	add	x2, x27, #0x68
    fff0:	add	x3, x27, #0x58
    fff4:	cmp	x0, x2
    fff8:	b.eq	10008 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x228>  // b.none
    fffc:	str	x3, [sp, #104]
   10000:	bl	0 <free>
   10004:	ldr	x3, [sp, #104]
   10008:	add	x2, x27, #0x48
   1000c:	ldr	x0, [x27, #72]
   10010:	cmp	x3, x0
   10014:	b.eq	10024 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x244>  // b.none
   10018:	str	x2, [sp, #104]
   1001c:	bl	0 <free>
   10020:	ldr	x2, [sp, #104]
   10024:	ldr	x0, [x27, #56]
   10028:	cmp	x2, x0
   1002c:	b.eq	10034 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x254>  // b.none
   10030:	bl	0 <free>
   10034:	ldr	x0, [x27, #8]
   10038:	add	x2, x27, #0x18
   1003c:	cmp	x0, x2
   10040:	b.eq	10048 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x268>  // b.none
   10044:	bl	0 <free>
   10048:	mov	x0, x27
   1004c:	mov	x1, #0x80                  	// #128
   10050:	bl	0 <_ZdlPvm>
   10054:	add	x20, x20, #0x10
   10058:	cmp	x24, x20
   1005c:	b.ne	ff98 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1b8>  // b.any
   10060:	ldr	x0, [sp, #112]
   10064:	ldr	x24, [x0, #24]
   10068:	cbz	x24, 10074 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x294>
   1006c:	mov	x0, x24
   10070:	bl	0 <_ZdlPv>
   10074:	ldr	x0, [sp, #112]
   10078:	mov	x1, #0x30                  	// #48
   1007c:	bl	0 <_ZdlPvm>
   10080:	mov	x1, x22
   10084:	mov	x0, x19
   10088:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   1008c:	mov	x3, #0x4                   	// #4
   10090:	add	x2, x2, #0x0
   10094:	bl	f9f0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>
   10098:	tst	w0, #0xff
   1009c:	b.eq	100c4 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2e4>  // b.none
   100a0:	ldp	x25, x26, [sp, #64]
   100a4:	ldp	x27, x28, [sp, #80]
   100a8:	mov	w24, #0x1                   	// #1
   100ac:	mov	w0, w24
   100b0:	ldp	x19, x20, [sp, #16]
   100b4:	ldp	x21, x22, [sp, #32]
   100b8:	ldp	x23, x24, [sp, #48]
   100bc:	ldp	x29, x30, [sp], #176
   100c0:	ret
   100c4:	ldr	x2, [x19, #280]
   100c8:	mov	x1, x28
   100cc:	mov	x0, x19
   100d0:	ldr	x3, [x2, #-8]!
   100d4:	str	x2, [x19, #280]
   100d8:	stp	xzr, x3, [sp, #152]
   100dc:	bl	3e00 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
   100e0:	and	w24, w0, #0xff
   100e4:	mov	x0, x28
   100e8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   100ec:	cbnz	w24, 100a0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2c0>
   100f0:	ldr	w0, [x19, #40]
   100f4:	cmp	w0, #0x26
   100f8:	b.eq	10118 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x338>  // b.none
   100fc:	ldp	x25, x26, [sp, #64]
   10100:	ldp	x27, x28, [sp, #80]
   10104:	b	fe88 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0xa8>
   10108:	mov	x2, x28
   1010c:	mov	x0, x25
   10110:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   10114:	b	ff7c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x19c>
   10118:	ldp	x2, x1, [x19, #8]
   1011c:	mov	x0, x19
   10120:	cmp	x2, x1
   10124:	cset	w1, eq  // eq = none
   10128:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
   1012c:	str	w0, [x19, #40]
   10130:	ldp	x2, x3, [sp, #120]
   10134:	mov	x1, x21
   10138:	ldr	x4, [sp, #136]
   1013c:	mov	w0, #0x2                   	// #2
   10140:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
   10144:	mov	x1, #0x0                   	// #0
   10148:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
   1014c:	mov	x20, x0
   10150:	mov	x0, #0x30                  	// #48
   10154:	bl	0 <_Znwm>
   10158:	stp	x20, xzr, [x0, #16]
   1015c:	ldr	x3, [sp, #96]
   10160:	stp	x3, xzr, [x0]
   10164:	ldr	x1, [x25, #8]
   10168:	stp	xzr, xzr, [x0, #32]
   1016c:	ldr	x3, [x25, #16]
   10170:	str	x0, [sp, #152]
   10174:	cmp	x1, x3
   10178:	b.eq	102c8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x4e8>  // b.none
   1017c:	str	xzr, [sp, #152]
   10180:	str	x0, [x1], #8
   10184:	str	x1, [x25, #8]
   10188:	ldr	x26, [sp, #152]
   1018c:	cbz	x26, 10274 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x494>
   10190:	ldp	x23, x25, [x26, #24]
   10194:	cmp	x23, x25
   10198:	b.eq	1025c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x47c>  // b.none
   1019c:	nop
   101a0:	ldr	x24, [x23, #8]
   101a4:	cbz	x24, 101e8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x408>
   101a8:	ldp	x20, x21, [x24, #24]
   101ac:	cmp	x20, x21
   101b0:	b.eq	101d0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3f0>  // b.none
   101b4:	nop
   101b8:	mov	x0, x20
   101bc:	add	x20, x20, #0x10
   101c0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   101c4:	cmp	x21, x20
   101c8:	b.ne	101b8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3d8>  // b.any
   101cc:	ldr	x21, [x24, #24]
   101d0:	cbz	x21, 101dc <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3fc>
   101d4:	mov	x0, x21
   101d8:	bl	0 <_ZdlPv>
   101dc:	mov	x0, x24
   101e0:	mov	x1, #0x30                  	// #48
   101e4:	bl	0 <_ZdlPvm>
   101e8:	ldr	x20, [x23]
   101ec:	cbz	x20, 1024c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x46c>
   101f0:	ldr	x0, [x20, #88]
   101f4:	add	x1, x20, #0x68
   101f8:	add	x24, x20, #0x58
   101fc:	cmp	x0, x1
   10200:	b.eq	10208 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x428>  // b.none
   10204:	bl	0 <free>
   10208:	ldr	x0, [x20, #72]
   1020c:	add	x21, x20, #0x48
   10210:	cmp	x24, x0
   10214:	b.eq	1021c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x43c>  // b.none
   10218:	bl	0 <free>
   1021c:	ldr	x0, [x20, #56]
   10220:	cmp	x21, x0
   10224:	b.eq	1022c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x44c>  // b.none
   10228:	bl	0 <free>
   1022c:	ldr	x0, [x20, #8]
   10230:	add	x1, x20, #0x18
   10234:	cmp	x0, x1
   10238:	b.eq	10240 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x460>  // b.none
   1023c:	bl	0 <free>
   10240:	mov	x0, x20
   10244:	mov	x1, #0x80                  	// #128
   10248:	bl	0 <_ZdlPvm>
   1024c:	add	x23, x23, #0x10
   10250:	cmp	x25, x23
   10254:	b.ne	101a0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3c0>  // b.any
   10258:	ldr	x25, [x26, #24]
   1025c:	cbz	x25, 10268 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x488>
   10260:	mov	x0, x25
   10264:	bl	0 <_ZdlPv>
   10268:	mov	x0, x26
   1026c:	mov	x1, #0x30                  	// #48
   10270:	bl	0 <_ZdlPvm>
   10274:	mov	x1, x22
   10278:	mov	x0, x19
   1027c:	adrp	x2, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   10280:	mov	x3, #0x4                   	// #4
   10284:	add	x2, x2, #0x0
   10288:	bl	f9f0 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>
   1028c:	tst	w0, #0xff
   10290:	b.ne	100a0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2c0>  // b.any
   10294:	ldr	x2, [x19, #280]
   10298:	mov	x1, x28
   1029c:	mov	x0, x19
   102a0:	ldr	x3, [x2, #-8]!
   102a4:	str	x2, [x19, #280]
   102a8:	stp	xzr, x3, [sp, #152]
   102ac:	bl	3e00 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
   102b0:	and	w24, w0, #0xff
   102b4:	mov	x0, x28
   102b8:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   102bc:	ldp	x25, x26, [sp, #64]
   102c0:	ldp	x27, x28, [sp, #80]
   102c4:	b	fe88 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0xa8>
   102c8:	mov	x0, x25
   102cc:	mov	x2, x28
   102d0:	bl	0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   102d4:	b	10188 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x3a8>
   102d8:	adrp	x3, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   102dc:	adrp	x1, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   102e0:	adrp	x0, 0 <_ZNK4llvm7TGLexer12getCurIntValEv.isra.0.part.0>
   102e4:	add	x3, x3, #0x0
   102e8:	add	x1, x1, #0x0
   102ec:	add	x0, x0, #0x0
   102f0:	mov	w2, #0xb6b                 	// #2923
   102f4:	stp	x25, x26, [sp, #64]
   102f8:	stp	x27, x28, [sp, #80]
   102fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	mov	w2, #0x104                 	// #260
   4:	stp	x1, xzr, [x0]
   8:	strh	w2, [x0, #16]
   c:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKcRKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC1EPKcRKNS_9StringRefE>:
   0:	mov	w3, #0x503                 	// #1283
   4:	stp	x1, x2, [x0]
   8:	strh	w3, [x0, #16]
   c:	ret

Disassembly of section .text._ZNK4llvm5Twine6concatERKS0_:

0000000000000000 <_ZNK4llvm5Twine6concatERKS0_>:
   0:	ldrb	w2, [x0, #16]
   4:	cbz	w2, 10 <_ZNK4llvm5Twine6concatERKS0_+0x10>
   8:	ldrb	w3, [x1, #16]
   c:	cbnz	w3, 20 <_ZNK4llvm5Twine6concatERKS0_+0x20>
  10:	mov	w0, #0x100                 	// #256
  14:	stp	xzr, xzr, [x8]
  18:	strh	w0, [x8, #16]
  1c:	ret
  20:	cmp	w2, #0x1
  24:	b.eq	7c <_ZNK4llvm5Twine6concatERKS0_+0x7c>  // b.none
  28:	cmp	w3, #0x1
  2c:	b.eq	90 <_ZNK4llvm5Twine6concatERKS0_+0x90>  // b.none
  30:	ldrb	w4, [x0, #17]
  34:	cmp	w4, #0x1
  38:	b.eq	a4 <_ZNK4llvm5Twine6concatERKS0_+0xa4>  // b.none
  3c:	ldrb	w2, [x1, #17]
  40:	cmp	w2, #0x1
  44:	b.eq	100 <_ZNK4llvm5Twine6concatERKS0_+0x100>  // b.none
  48:	mov	w2, #0x202                 	// #514
  4c:	mov	w3, #0x2                   	// #2
  50:	stp	x0, x1, [x8]
  54:	strh	w2, [x8, #16]
  58:	ldrb	w2, [x0, #16]
  5c:	cbz	w2, d8 <_ZNK4llvm5Twine6concatERKS0_+0xd8>
  60:	ldrb	w0, [x0, #17]
  64:	cmp	w0, #0x1
  68:	b.eq	d8 <_ZNK4llvm5Twine6concatERKS0_+0xd8>  // b.none
  6c:	nop
  70:	cmp	w3, #0x2
  74:	b.eq	d0 <_ZNK4llvm5Twine6concatERKS0_+0xd0>  // b.none
  78:	ret
  7c:	ldp	x2, x3, [x1]
  80:	stp	x2, x3, [x8]
  84:	ldr	x0, [x1, #16]
  88:	str	x0, [x8, #16]
  8c:	ret
  90:	ldp	x2, x3, [x0]
  94:	stp	x2, x3, [x8]
  98:	ldr	x0, [x0, #16]
  9c:	str	x0, [x8, #16]
  a0:	ret
  a4:	ldrb	w4, [x1, #17]
  a8:	ldr	x0, [x0]
  ac:	cmp	w4, #0x1
  b0:	b.ne	118 <_ZNK4llvm5Twine6concatERKS0_+0x118>  // b.any
  b4:	ldr	x1, [x1]
  b8:	stp	x0, x1, [x8]
  bc:	cmp	w2, #0x2
  c0:	strb	w2, [x8, #16]
  c4:	strb	w3, [x8, #17]
  c8:	b.ne	70 <_ZNK4llvm5Twine6concatERKS0_+0x70>  // b.any
  cc:	b	58 <_ZNK4llvm5Twine6concatERKS0_+0x58>
  d0:	ldrb	w0, [x1, #16]
  d4:	cbnz	w0, 130 <_ZNK4llvm5Twine6concatERKS0_+0x130>
  d8:	stp	x29, x30, [sp, #-16]!
  dc:	adrp	x3, 0 <_ZNK4llvm5Twine6concatERKS0_>
  e0:	adrp	x1, 0 <_ZNK4llvm5Twine6concatERKS0_>
  e4:	mov	x29, sp
  e8:	adrp	x0, 0 <_ZNK4llvm5Twine6concatERKS0_>
  ec:	add	x3, x3, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x0, x0, #0x0
  f8:	mov	w2, #0xb8                  	// #184
  fc:	bl	0 <__assert_fail>
 100:	ldr	x1, [x1]
 104:	mov	w2, #0x2                   	// #2
 108:	stp	x0, x1, [x8]
 10c:	strb	w2, [x8, #16]
 110:	strb	w3, [x8, #17]
 114:	b	58 <_ZNK4llvm5Twine6concatERKS0_+0x58>
 118:	mov	w3, #0x2                   	// #2
 11c:	stp	x0, x1, [x8]
 120:	cmp	w2, #0x2
 124:	strb	w2, [x8, #16]
 128:	strb	w3, [x8, #17]
 12c:	b.eq	140 <_ZNK4llvm5Twine6concatERKS0_+0x140>  // b.none
 130:	ldrb	w0, [x1, #17]
 134:	cmp	w0, #0x1
 138:	b.eq	d8 <_ZNK4llvm5Twine6concatERKS0_+0xd8>  // b.none
 13c:	ret
 140:	mov	w3, w2
 144:	b	58 <_ZNK4llvm5Twine6concatERKS0_+0x58>

Disassembly of section .text._ZN4llvm6Record8addValueERKNS_9RecordValE:

0000000000000000 <_ZN4llvm6Record8addValueERKNS_9RecordValE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	w4, #0x18                  	// #24
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	ldr	x2, [x0, #72]
  1c:	ldr	w0, [x0, #80]
  20:	ldr	x5, [x1]
  24:	umaddl	x4, w0, w4, x2
  28:	cmp	x2, x4
  2c:	b.ne	40 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x40>  // b.any
  30:	b	6c <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x6c>
  34:	add	x2, x2, #0x18
  38:	cmp	x4, x2
  3c:	b.eq	6c <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x6c>  // b.none
  40:	ldr	x3, [x2]
  44:	cmp	x5, x3
  48:	b.ne	34 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x34>  // b.any
  4c:	adrp	x3, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  50:	adrp	x1, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  54:	adrp	x0, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  58:	add	x3, x3, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x0, x0, #0x0
  64:	mov	w2, #0x60a                 	// #1546
  68:	bl	0 <__assert_fail>
  6c:	ldr	w1, [x19, #84]
  70:	cmp	w0, w1
  74:	b.cs	b0 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0xb0>  // b.hs, b.nlast
  78:	ldp	x0, x1, [x20]
  7c:	stp	x0, x1, [x4]
  80:	ldr	x0, [x20, #16]
  84:	str	x0, [x4, #16]
  88:	ldp	w0, w2, [x19, #80]
  8c:	mov	w1, w0
  90:	add	x1, x1, #0x1
  94:	cmp	x1, x2
  98:	b.hi	d8 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0xd8>  // b.pmore
  9c:	add	w0, w0, #0x1
  a0:	str	w0, [x19, #80]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret
  b0:	add	x1, x19, #0x58
  b4:	add	x0, x19, #0x48
  b8:	mov	x3, #0x18                  	// #24
  bc:	mov	x2, #0x0                   	// #0
  c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  c4:	ldr	w4, [x19, #80]
  c8:	mov	w1, #0x18                  	// #24
  cc:	ldr	x0, [x19, #72]
  d0:	umaddl	x4, w4, w1, x0
  d4:	b	78 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x78>
  d8:	adrp	x3, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  dc:	adrp	x1, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  e0:	adrp	x0, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  e4:	add	x3, x3, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6Record11removeValueEPNS_4InitE:

0000000000000000 <_ZN4llvm6Record11removeValueEPNS_4InitE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w6, [x0, #80]
   c:	str	x19, [sp, #16]
  10:	cbz	w6, ac <_ZN4llvm6Record11removeValueEPNS_4InitE+0xac>
  14:	ldr	x7, [x0, #72]
  18:	mov	x19, x0
  1c:	mov	w4, w6
  20:	sub	w5, w6, #0x1
  24:	mov	x0, x7
  28:	mov	x2, #0x0                   	// #0
  2c:	b	48 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x48>
  30:	cmp	x5, x2
  34:	b.eq	ac <_ZN4llvm6Record11removeValueEPNS_4InitE+0xac>  // b.none
  38:	add	x2, x2, #0x1
  3c:	add	x0, x0, #0x18
  40:	cmp	x4, x2
  44:	b.eq	c4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xc4>  // b.none
  48:	ldr	x3, [x0]
  4c:	cmp	x1, x3
  50:	b.ne	30 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x30>  // b.any
  54:	cmp	x7, x0
  58:	b.hi	e4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xe4>  // b.pmore
  5c:	mov	w2, #0x18                  	// #24
  60:	umaddl	x2, w6, w2, x7
  64:	cmp	x0, x2
  68:	b.cs	124 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x124>  // b.hs, b.nlast
  6c:	add	x1, x0, #0x18
  70:	cmp	x2, x1
  74:	b.eq	88 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x88>  // b.none
  78:	sub	x2, x2, x1
  7c:	bl	0 <memmove>
  80:	ldr	w6, [x19, #80]
  84:	mov	w4, w6
  88:	ldr	w0, [x19, #84]
  8c:	sub	x4, x4, #0x1
  90:	cmp	x4, x0
  94:	b.hi	104 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x104>  // b.pmore
  98:	sub	w6, w6, #0x1
  9c:	str	w6, [x19, #80]
  a0:	ldr	x19, [sp, #16]
  a4:	ldp	x29, x30, [sp], #32
  a8:	ret
  ac:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  b0:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  b4:	add	x1, x1, #0x0
  b8:	add	x0, x0, #0x0
  bc:	mov	w2, #0x614                 	// #1556
  c0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  c4:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  c8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  cc:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  d0:	add	x3, x3, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x0, x0, #0x0
  dc:	mov	w2, #0x95                  	// #149
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  e8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  ec:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  f0:	add	x3, x3, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x0, x0, #0x0
  fc:	mov	w2, #0x1b6                 	// #438
 100:	bl	0 <__assert_fail>
 104:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 108:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 10c:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 110:	add	x3, x3, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x0, x0, #0x0
 11c:	mov	w2, #0x43                  	// #67
 120:	bl	0 <__assert_fail>
 124:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 128:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 12c:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
 130:	add	x3, x3, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x0, x0, #0x0
 13c:	mov	w2, #0x1b7                 	// #439
 140:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE:

0000000000000000 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x2
  10:	ldr	x20, [x0, #64]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x0
  1c:	stp	x23, x24, [sp, #48]
  20:	str	x25, [sp, #64]
  24:	mov	x25, x1
  28:	cbz	x20, a0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa0>
  2c:	add	x24, x0, #0x38
  30:	cbz	x2, 13c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x13c>
  34:	mov	x23, x24
  38:	ldp	x0, x22, [x20, #32]
  3c:	cmp	x19, x22
  40:	b.cc	180 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x180>  // b.lo, b.ul, b.last
  44:	cbz	x22, 1a0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1a0>
  48:	mov	x2, x22
  4c:	mov	x1, x25
  50:	bl	0 <memcmp>
  54:	cbnz	w0, 190 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x190>
  58:	cmp	x19, x22
  5c:	b.ne	1a0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1a0>  // b.any
  60:	mov	x23, x20
  64:	ldr	x20, [x20, #16]
  68:	cbnz	x20, 38 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x38>
  6c:	cmp	x24, x23
  70:	b.eq	a0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa0>  // b.none
  74:	ldp	x1, x20, [x23, #32]
  78:	cmp	x20, x19
  7c:	b.cc	1cc <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1cc>  // b.lo, b.ul, b.last
  80:	mov	x2, x19
  84:	mov	x0, x25
  88:	bl	0 <memcmp>
  8c:	cbnz	w0, 1e0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1e0>
  90:	cmp	x20, x19
  94:	b.eq	160 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x160>  // b.none
  98:	cmp	x19, x20
  9c:	b.cs	160 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x160>  // b.hs, b.nlast
  a0:	ldr	x20, [x21, #136]
  a4:	add	x21, x21, #0x80
  a8:	cbz	x20, 120 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x120>
  ac:	cbz	x19, 1b0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1b0>
  b0:	mov	x23, x21
  b4:	nop
  b8:	ldp	x0, x22, [x20, #32]
  bc:	cmp	x19, x22
  c0:	b.cc	1e8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1e8>  // b.lo, b.ul, b.last
  c4:	cbz	x22, 1f8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1f8>
  c8:	mov	x2, x22
  cc:	mov	x1, x25
  d0:	bl	0 <memcmp>
  d4:	cbnz	w0, 20c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x20c>
  d8:	cmp	x19, x22
  dc:	b.ne	1f8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1f8>  // b.any
  e0:	mov	x23, x20
  e4:	ldr	x20, [x20, #16]
  e8:	cbnz	x20, b8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xb8>
  ec:	cmp	x21, x23
  f0:	b.eq	120 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x120>  // b.none
  f4:	ldp	x1, x20, [x23, #32]
  f8:	cmp	x20, x19
  fc:	b.cc	218 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x218>  // b.lo, b.ul, b.last
 100:	mov	x0, x25
 104:	mov	x2, x19
 108:	bl	0 <memcmp>
 10c:	cbnz	w0, 22c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x22c>
 110:	cmp	x20, x19
 114:	b.eq	230 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x230>  // b.none
 118:	cmp	x20, x19
 11c:	b.ls	230 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x230>  // b.plast
 120:	mov	x0, #0x0                   	// #0
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x21, x22, [sp, #32]
 12c:	ldp	x23, x24, [sp, #48]
 130:	ldr	x25, [sp, #64]
 134:	ldp	x29, x30, [sp], #80
 138:	ret
 13c:	mov	x23, x20
 140:	ldr	x20, [x20, #16]
 144:	cbnz	x20, 13c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x13c>
 148:	cmp	x24, x23
 14c:	b.eq	a0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa0>  // b.none
 150:	ldr	x20, [x23, #40]
 154:	cmp	x20, x19
 158:	b.ne	98 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x98>  // b.any
 15c:	nop
 160:	ldr	x0, [x23, #64]
 164:	cbz	x0, a0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa0>
 168:	ldp	x19, x20, [sp, #16]
 16c:	ldp	x21, x22, [sp, #32]
 170:	ldp	x23, x24, [sp, #48]
 174:	ldr	x25, [sp, #64]
 178:	ldp	x29, x30, [sp], #80
 17c:	b	0 <_ZN4llvm6Record10getDefInitEv>
 180:	mov	x2, x19
 184:	mov	x1, x25
 188:	bl	0 <memcmp>
 18c:	cbz	w0, 1a0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1a0>
 190:	tbz	w0, #31, 60 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x60>
 194:	ldr	x20, [x20, #24]
 198:	cbnz	x20, 38 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x38>
 19c:	b	6c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x6c>
 1a0:	cmp	x19, x22
 1a4:	b.ls	60 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x60>  // b.plast
 1a8:	ldr	x20, [x20, #24]
 1ac:	b	198 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x198>
 1b0:	mov	x23, x20
 1b4:	ldr	x20, [x20, #16]
 1b8:	cbnz	x20, 1b0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x1b0>
 1bc:	cmp	x23, x21
 1c0:	b.eq	120 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x120>  // b.none
 1c4:	ldr	x20, [x23, #40]
 1c8:	b	110 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x110>
 1cc:	cbz	x20, 160 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x160>
 1d0:	mov	x2, x20
 1d4:	mov	x0, x25
 1d8:	bl	0 <memcmp>
 1dc:	cbz	w0, 98 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x98>
 1e0:	tbz	w0, #31, 160 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x160>
 1e4:	b	a0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xa0>
 1e8:	mov	x2, x19
 1ec:	mov	x1, x25
 1f0:	bl	0 <memcmp>
 1f4:	cbnz	w0, 20c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x20c>
 1f8:	cmp	x19, x22
 1fc:	b.ls	e0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xe0>  // b.plast
 200:	ldr	x20, [x20, #24]
 204:	cbnz	x20, b8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xb8>
 208:	b	ec <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xec>
 20c:	tbz	w0, #31, e0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xe0>
 210:	ldr	x20, [x20, #24]
 214:	b	204 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x204>
 218:	cbz	x20, 230 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x230>
 21c:	mov	x0, x25
 220:	mov	x2, x20
 224:	bl	0 <memcmp>
 228:	cbz	w0, 118 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x118>
 22c:	tbnz	w0, #31, 120 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x120>
 230:	ldp	x19, x20, [sp, #16]
 234:	ldp	x21, x22, [sp, #32]
 238:	ldr	x0, [x23, #64]
 23c:	ldp	x23, x24, [sp, #48]
 240:	ldr	x25, [sp, #64]
 244:	ldp	x29, x30, [sp], #80
 248:	ret

Disassembly of section .text._ZNK4llvm8TGParser8TokErrorERKNS_5TwineE:

0000000000000000 <_ZNK4llvm8TGParser8TokErrorERKNS_5TwineE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
  14:	mov	x3, x0
  18:	mov	x2, x19
  1c:	add	x0, sp, #0x28
  20:	mov	x20, #0x1                   	// #1
  24:	mov	x1, x20
  28:	str	x3, [sp, #40]
  2c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
  30:	mov	w0, w20
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZN4llvm12RecordsEntryD2Ev:

0000000000000000 <_ZN4llvm12RecordsEntryD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	ldr	x21, [x0, #8]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	cbz	x21, 58 <_ZN4llvm12RecordsEntryD1Ev+0x58>
  1c:	ldp	x19, x22, [x21, #24]
  20:	cmp	x19, x22
  24:	b.eq	40 <_ZN4llvm12RecordsEntryD1Ev+0x40>  // b.none
  28:	mov	x0, x19
  2c:	add	x19, x19, #0x10
  30:	bl	0 <_ZN4llvm12RecordsEntryD1Ev>
  34:	cmp	x22, x19
  38:	b.ne	28 <_ZN4llvm12RecordsEntryD1Ev+0x28>  // b.any
  3c:	ldr	x22, [x21, #24]
  40:	cbz	x22, 4c <_ZN4llvm12RecordsEntryD1Ev+0x4c>
  44:	mov	x0, x22
  48:	bl	0 <_ZdlPv>
  4c:	mov	x0, x21
  50:	mov	x1, #0x30                  	// #48
  54:	bl	0 <_ZdlPvm>
  58:	ldr	x19, [x20]
  5c:	cbz	x19, c8 <_ZN4llvm12RecordsEntryD1Ev+0xc8>
  60:	ldr	x0, [x19, #88]
  64:	add	x1, x19, #0x68
  68:	add	x21, x19, #0x58
  6c:	cmp	x0, x1
  70:	b.eq	78 <_ZN4llvm12RecordsEntryD1Ev+0x78>  // b.none
  74:	bl	0 <free>
  78:	ldr	x0, [x19, #72]
  7c:	add	x20, x19, #0x48
  80:	cmp	x21, x0
  84:	b.eq	8c <_ZN4llvm12RecordsEntryD1Ev+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	ldr	x0, [x19, #56]
  90:	cmp	x20, x0
  94:	b.eq	9c <_ZN4llvm12RecordsEntryD1Ev+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	ldr	x0, [x19, #8]
  a0:	add	x1, x19, #0x18
  a4:	cmp	x0, x1
  a8:	b.eq	b0 <_ZN4llvm12RecordsEntryD1Ev+0xb0>  // b.none
  ac:	bl	0 <free>
  b0:	mov	x0, x19
  b4:	mov	x1, #0x80                  	// #128
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x21, x22, [sp, #32]
  c0:	ldp	x29, x30, [sp], #48
  c4:	b	0 <_ZdlPvm>
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
   0:	mov	x5, x1
   4:	mov	x1, x0
   8:	stp	x29, x30, [sp, #-32]!
   c:	mov	x29, sp
  10:	ldr	x4, [x0, #8]
  14:	ldr	x2, [x5, #8]
  18:	ldr	x3, [x1], #16
  1c:	str	x19, [sp, #16]
  20:	add	x6, x4, x2
  24:	mov	x19, x8
  28:	cmp	x3, x1
  2c:	b.eq	f8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xf8>  // b.none
  30:	ldr	x1, [x0, #16]
  34:	cmp	x6, x1
  38:	ldr	x1, [x5]
  3c:	b.ls	58 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x58>  // b.plast
  40:	add	x7, x5, #0x10
  44:	cmp	x1, x7
  48:	b.eq	100 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x100>  // b.none
  4c:	ldr	x7, [x5, #16]
  50:	cmp	x6, x7
  54:	b.ls	a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xa4>  // b.plast
  58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  5c:	mov	x1, x0
  60:	mov	x2, x1
  64:	add	x0, x19, #0x10
  68:	str	x0, [x19]
  6c:	ldr	x0, [x2], #16
  70:	cmp	x0, x2
  74:	b.eq	d0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xd0>  // b.none
  78:	str	x0, [x19]
  7c:	ldr	x0, [x1, #8]
  80:	str	x0, [x19, #8]
  84:	ldr	x3, [x1, #16]
  88:	str	x3, [x19, #16]
  8c:	stp	x2, xzr, [x1]
  90:	mov	x0, x19
  94:	strb	wzr, [x1, #16]
  98:	ldr	x19, [sp, #16]
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	mov	x1, #0x0                   	// #0
  a8:	mov	x2, #0x0                   	// #0
  ac:	mov	x0, x5
  b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  b4:	mov	x1, x0
  b8:	add	x0, x19, #0x10
  bc:	mov	x2, x1
  c0:	str	x0, [x19]
  c4:	ldr	x0, [x2], #16
  c8:	cmp	x0, x2
  cc:	b.ne	78 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x78>  // b.any
  d0:	ldr	x0, [x1, #8]
  d4:	str	x0, [x19, #8]
  d8:	ldp	x4, x5, [x1, #16]
  dc:	stp	x4, x5, [x19, #16]
  e0:	mov	x0, x19
  e4:	stp	x2, xzr, [x1]
  e8:	strb	wzr, [x1, #16]
  ec:	ldr	x19, [sp, #16]
  f0:	ldp	x29, x30, [sp], #32
  f4:	ret
  f8:	mov	x1, #0xf                   	// #15
  fc:	b	34 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x34>
 100:	mov	x7, #0xf                   	// #15
 104:	b	50 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x50>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x8
  14:	mov	x0, x1
  18:	str	x21, [sp, #32]
  1c:	mov	x21, x1
  20:	bl	0 <strlen>
  24:	ldr	x3, [x20, #8]
  28:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  2c:	sub	x1, x1, x3
  30:	cmp	x0, x1
  34:	b.hi	a0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0xa0>  // b.pmore
  38:	mov	x2, x0
  3c:	mov	x1, x21
  40:	mov	x0, x20
  44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  48:	add	x2, x19, #0x10
  4c:	str	x2, [x19]
  50:	mov	x2, x0
  54:	mov	x1, x0
  58:	ldr	x0, [x2], #16
  5c:	cmp	x0, x2
  60:	b.eq	94 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x94>  // b.none
  64:	ldr	x3, [x1, #16]
  68:	str	x0, [x19]
  6c:	str	x3, [x19, #16]
  70:	ldr	x0, [x1, #8]
  74:	str	x0, [x19, #8]
  78:	stp	x2, xzr, [x1]
  7c:	mov	x0, x19
  80:	strb	wzr, [x1, #16]
  84:	ldp	x19, x20, [sp, #16]
  88:	ldr	x21, [sp, #32]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	ldp	x4, x5, [x1, #16]
  98:	stp	x4, x5, [x19, #16]
  9c:	b	70 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x70>
  a0:	adrp	x0, 0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldp	w1, w2, [x0, #8]
  18:	cmp	w1, w2
  1c:	b.cs	54 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x54>  // b.hs, b.nlast
  20:	ldr	x0, [x19]
  24:	ldr	x2, [x20]
  28:	str	x2, [x0, w1, uxtw #3]
  2c:	ldp	w0, w2, [x19, #8]
  30:	mov	w1, w0
  34:	add	x1, x1, #0x1
  38:	cmp	x1, x2
  3c:	b.hi	6c <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x6c>  // b.pmore
  40:	add	w0, w0, #0x1
  44:	str	w0, [x19, #8]
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	add	x1, x0, #0x10
  58:	mov	x3, #0x8                   	// #8
  5c:	mov	x2, #0x0                   	// #0
  60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  64:	ldr	w1, [x19, #8]
  68:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_+0x20>
  6c:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  70:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  74:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_4InitELb1EE9push_backERKS2_>
  78:	add	x3, x3, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x0, x0, #0x0
  84:	mov	w2, #0x43                  	// #67
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	ldp	x20, x23, [x0]
  14:	cmp	x20, x23
  18:	b.eq	e8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xe8>  // b.none
  1c:	mov	x24, x0
  20:	stp	x21, x22, [sp, #32]
  24:	nop
  28:	ldr	x21, [x20, #8]
  2c:	cbz	x21, 70 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x70>
  30:	ldp	x19, x22, [x21, #24]
  34:	cmp	x19, x22
  38:	b.eq	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x58>  // b.none
  3c:	nop
  40:	mov	x0, x19
  44:	add	x19, x19, #0x10
  48:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev>
  4c:	cmp	x22, x19
  50:	b.ne	40 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x40>  // b.any
  54:	ldr	x22, [x21, #24]
  58:	cbz	x22, 64 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x64>
  5c:	mov	x0, x22
  60:	bl	0 <_ZdlPv>
  64:	mov	x0, x21
  68:	mov	x1, #0x30                  	// #48
  6c:	bl	0 <_ZdlPvm>
  70:	ldr	x19, [x20]
  74:	cbz	x19, d4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xd4>
  78:	ldr	x0, [x19, #88]
  7c:	add	x1, x19, #0x68
  80:	add	x22, x19, #0x58
  84:	cmp	x0, x1
  88:	b.eq	90 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x0, [x19, #72]
  94:	add	x21, x19, #0x48
  98:	cmp	x22, x0
  9c:	b.eq	a4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x19, #56]
  a8:	cmp	x21, x0
  ac:	b.eq	b4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xb4>  // b.none
  b0:	bl	0 <free>
  b4:	ldr	x0, [x19, #8]
  b8:	add	x1, x19, #0x18
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	mov	x0, x19
  cc:	mov	x1, #0x80                  	// #128
  d0:	bl	0 <_ZdlPvm>
  d4:	add	x20, x20, #0x10
  d8:	cmp	x23, x20
  dc:	b.ne	28 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x28>  // b.any
  e0:	ldp	x21, x22, [sp, #32]
  e4:	ldr	x23, [x24]
  e8:	cbz	x23, 100 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EED1Ev+0x100>
  ec:	mov	x0, x23
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x23, x24, [sp, #48]
  f8:	ldp	x29, x30, [sp], #64
  fc:	b	0 <_ZdlPv>
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x23, x24, [sp, #48]
 108:	ldp	x29, x30, [sp], #64
 10c:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_8BitsInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_8BitsInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_8BitsInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #8]
   8:	cmp	w1, #0x3
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_8BitsInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 1c <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x1c>
   4:	ldrb	w1, [x0, #8]
   8:	sub	w1, w1, #0x1
   c:	and	w1, w1, #0xff
  10:	cmp	w1, #0x16
  14:	csel	x0, x0, xzr, ls  // ls = plast
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	mov	x29, sp
  2c:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_9TypedInitENS_4InitEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x69                  	// #105
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x1
  18:	mov	x22, x0
  1c:	bl	0 <strlen>
  20:	strb	wzr, [x19, #16]
  24:	add	x1, x19, #0x10
  28:	stp	x1, xzr, [x19]
  2c:	mov	x20, x0
  30:	ldr	x1, [x21, #8]
  34:	mov	x0, x19
  38:	add	x1, x20, x1
  3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
  40:	ldr	x0, [x19, #8]
  44:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  48:	sub	x1, x1, x0
  4c:	cmp	x20, x1
  50:	b.hi	84 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x84>  // b.pmore
  54:	mov	x2, x20
  58:	mov	x1, x22
  5c:	mov	x0, x19
  60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  64:	ldp	x1, x2, [x21]
  68:	mov	x0, x19
  6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
  88:	add	x0, x0, #0x0
  8c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm8dyn_castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldr	w1, [x0, #8]
   8:	cmp	w1, #0x5
   c:	csel	x0, x0, xzr, eq  // eq = none
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_9ListRecTyENS_5RecTyEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_:

0000000000000000 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x8
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x23, x2
  24:	str	x25, [sp, #64]
  28:	bl	0 <strlen>
  2c:	mov	x25, x0
  30:	mov	x0, #0x80                  	// #128
  34:	ldp	x24, x21, [x19]
  38:	bl	0 <_Znwm>
  3c:	mov	x1, x25
  40:	mov	x19, x0
  44:	mov	x0, x20
  48:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
  4c:	mov	x3, x19
  50:	mov	x2, #0x400000000           	// #17179869184
  54:	mov	x1, #0x0                   	// #0
  58:	sbfx	x20, x21, #0, #61
  5c:	lsl	x21, x21, #3
  60:	str	x0, [x3], #24
  64:	cmp	x20, #0x4
  68:	stp	x3, x2, [x19, #8]
  6c:	b.hi	fc <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0xfc>  // b.pmore
  70:	cbz	x21, 88 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x88>
  74:	mov	x1, x24
  78:	mov	x2, x21
  7c:	mov	x0, x3
  80:	bl	0 <memcpy>
  84:	ldr	w1, [x19, #16]
  88:	ldr	w0, [x19, #20]
  8c:	add	x20, x20, x1
  90:	cmp	x20, x0
  94:	b.hi	120 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x120>  // b.pmore
  98:	adrp	x1, 0 <_ZN4llvm6Record6LastIDE>
  9c:	add	x2, x19, #0x48
  a0:	stp	x2, xzr, [x19, #56]
  a4:	add	x4, x19, #0x58
  a8:	add	x3, x19, #0x68
  ac:	ldr	x1, [x1]
  b0:	str	w20, [x19, #16]
  b4:	stp	x4, xzr, [x19, #72]
  b8:	mov	x0, x19
  bc:	ldr	w2, [x1]
  c0:	stp	x3, xzr, [x19, #88]
  c4:	add	w5, w2, #0x1
  c8:	stp	x23, xzr, [x19, #104]
  cc:	str	w2, [x19, #120]
  d0:	strh	wzr, [x19, #124]
  d4:	str	w5, [x1]
  d8:	bl	0 <_ZN4llvm6Record9checkNameEv>
  dc:	ldp	x23, x24, [sp, #48]
  e0:	mov	x0, x22
  e4:	ldr	x25, [sp, #64]
  e8:	str	x19, [x22]
  ec:	ldp	x19, x20, [sp, #16]
  f0:	ldp	x21, x22, [sp, #32]
  f4:	ldp	x29, x30, [sp], #80
  f8:	ret
  fc:	mov	x1, x3
 100:	mov	x2, x20
 104:	mov	x3, #0x8                   	// #8
 108:	add	x0, x19, x3
 10c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 110:	ldr	x3, [x19, #8]
 114:	ldr	w1, [x19, #16]
 118:	add	x3, x3, x1, lsl #3
 11c:	b	70 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x70>
 120:	adrp	x3, 0 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
 124:	adrp	x1, 0 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
 128:	adrp	x0, 0 <_ZSt11make_uniqueIN4llvm6RecordEJRA7_KcNS0_8ArrayRefINS0_5SMLocEEERNS0_12RecordKeeperEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
 12c:	add	x3, x3, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x0, x0, #0x0
 138:	mov	w2, #0x43                  	// #67
 13c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #3
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #3
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xd4>
  8c:	lsl	x2, x22, #3
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #3
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x8                   	// #8
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #3
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #3
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xd4>
  8c:	lsl	x2, x22, #3
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #3
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x8                   	// #8
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	6c <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x6c>  // b.none
  18:	ldr	w3, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w22, [x1, #8]
  28:	str	x23, [sp, #48]
  2c:	mov	w4, w3
  30:	cmp	w22, w3
  34:	mov	w23, w22
  38:	b.hi	7c <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x7c>  // b.pmore
  3c:	cbz	x23, 60 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x60>
  40:	mov	w2, #0x18                  	// #24
  44:	ldr	x0, [x0]
  48:	umull	x2, w22, w2
  4c:	ldr	x1, [x1]
  50:	bl	0 <memmove>
  54:	ldr	w0, [x19, #12]
  58:	cmp	x23, x0
  5c:	b.hi	11c <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x11c>  // b.pmore
  60:	ldr	x23, [sp, #48]
  64:	str	w22, [x19, #8]
  68:	ldp	x21, x22, [sp, #32]
  6c:	mov	x0, x19
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	ldr	w1, [x0, #12]
  80:	cmp	x23, x1
  84:	b.hi	f4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xf4>  // b.pmore
  88:	mov	w2, #0x18                  	// #24
  8c:	ldr	x0, [x0]
  90:	umull	x21, w3, w2
  94:	ldr	x5, [x20]
  98:	cbz	x4, d0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xd0>
  9c:	mov	x2, x21
  a0:	mov	x1, x5
  a4:	bl	0 <memmove>
  a8:	ldr	w2, [x20, #8]
  ac:	ldr	x0, [x19]
  b0:	ldr	x3, [x20]
  b4:	add	x2, x2, x2, lsl #1
  b8:	add	x1, x3, x21
  bc:	lsl	x2, x2, #3
  c0:	add	x3, x3, x2
  c4:	cmp	x1, x3
  c8:	b.ne	e4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xe4>  // b.any
  cc:	b	54 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x54>
  d0:	umull	x2, w22, w2
  d4:	add	x1, x5, x21
  d8:	add	x5, x5, x2
  dc:	cmp	x1, x5
  e0:	b.eq	60 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x60>  // b.none
  e4:	sub	x2, x2, x21
  e8:	add	x0, x0, x21
  ec:	bl	0 <memcpy>
  f0:	b	54 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x54>
  f4:	str	wzr, [x0, #8]
  f8:	mov	x2, x23
  fc:	add	x1, x0, #0x10
 100:	mov	x3, #0x18                  	// #24
 104:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 108:	mov	x21, #0x0                   	// #0
 10c:	ldr	w2, [x20, #8]
 110:	ldr	x0, [x19]
 114:	ldr	x3, [x20]
 118:	b	b4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xb4>
 11c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
 120:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
 124:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
 128:	add	x3, x3, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x0, x0, #0x0
 134:	mov	w2, #0x43                  	// #67
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	118 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x118>  // b.pmore
  28:	ldr	w2, [x20, #12]
  2c:	mov	x0, #0xffffffff            	// #4294967295
  30:	add	x2, x2, #0x2
  34:	orr	x2, x2, x2, lsr #1
  38:	orr	x2, x2, x2, lsr #2
  3c:	orr	x2, x2, x2, lsr #4
  40:	orr	x2, x2, x2, lsr #8
  44:	orr	x1, x2, x2, lsr #16
  48:	orr	x2, x1, x2, lsr #32
  4c:	add	x2, x2, #0x1
  50:	str	x2, [sp, #72]
  54:	cmp	x19, x2
  58:	csel	x2, x19, x2, cs  // cs = hs, nlast
  5c:	cmp	x2, x0
  60:	b.hi	e8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xe8>  // b.pmore
  64:	add	x0, x2, x2, lsl #1
  68:	mov	w19, w2
  6c:	lsl	x0, x0, #3
  70:	bl	0 <malloc>
  74:	mov	x21, x0
  78:	cbz	x0, 100 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x100>
  7c:	ldr	w6, [x20, #8]
  80:	mov	w3, #0x18                  	// #24
  84:	ldr	x0, [x20]
  88:	mov	x2, x21
  8c:	mov	x1, x0
  90:	umaddl	x6, w6, w3, x0
  94:	cmp	x0, x6
  98:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xc0>  // b.none
  9c:	nop
  a0:	ldp	x4, x5, [x1]
  a4:	stp	x4, x5, [x2]
  a8:	add	x1, x1, #0x18
  ac:	ldur	x3, [x1, #-8]
  b0:	str	x3, [x2, #16]
  b4:	cmp	x6, x1
  b8:	add	x2, x2, #0x18
  bc:	b.ne	a0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xa0>  // b.any
  c0:	add	x1, x20, #0x10
  c4:	cmp	x0, x1
  c8:	b.eq	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xd0>  // b.none
  cc:	bl	0 <free>
  d0:	str	x21, [x20]
  d4:	str	w19, [x20, #12]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #80
  e4:	ret
  e8:	mov	w0, #0xffffffe8            	// #-24
  ec:	mov	w19, #0xffffffff            	// #-1
  f0:	movk	x0, #0x17, lsl #32
  f4:	bl	0 <malloc>
  f8:	mov	x21, x0
  fc:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x7c>
 100:	mov	x21, #0x0                   	// #0
 104:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
 108:	mov	w1, #0x1                   	// #1
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 114:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x7c>
 118:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
 11c:	mov	w1, #0x1                   	// #1
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 128:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x28>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	84 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x84>  // b.none
  18:	ldr	w4, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w2, w4
  2c:	mov	w22, w21
  30:	cmp	w21, w4
  34:	b.hi	94 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x94>  // b.pmore
  38:	cbz	x22, 7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x7c>
  3c:	ldr	x2, [x0]
  40:	mov	w1, #0x18                  	// #24
  44:	ldr	x0, [x20]
  48:	umaddl	x1, w21, w1, x2
  4c:	nop
  50:	ldr	x3, [x0]
  54:	add	x2, x2, #0x18
  58:	ldp	x4, x5, [x0, #8]
  5c:	stur	x3, [x2, #-24]
  60:	stp	x4, x5, [x2, #-16]
  64:	add	x0, x0, #0x18
  68:	cmp	x2, x1
  6c:	b.ne	50 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x50>  // b.any
  70:	ldr	w0, [x19, #12]
  74:	cmp	x22, x0
  78:	b.hi	120 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x120>  // b.pmore
  7c:	str	w21, [x19, #8]
  80:	ldp	x21, x22, [sp, #32]
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	ldr	w6, [x0, #12]
  98:	cmp	x22, x6
  9c:	b.hi	140 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x140>  // b.pmore
  a0:	ldr	x3, [x0]
  a4:	ldr	x0, [x1]
  a8:	cbz	x2, e4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xe4>
  ac:	mov	w2, #0x18                  	// #24
  b0:	umull	x2, w4, w2
  b4:	add	x7, x0, x2
  b8:	ldr	x1, [x0]
  bc:	add	x0, x0, #0x18
  c0:	ldp	x4, x5, [x0, #-16]
  c4:	str	x1, [x3]
  c8:	stp	x4, x5, [x3, #8]
  cc:	cmp	x0, x7
  d0:	add	x3, x3, #0x18
  d4:	b.ne	b8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xb8>  // b.any
  d8:	ldr	x3, [x19]
  dc:	ldr	x0, [x20]
  e0:	add	x3, x3, x2
  e4:	mov	w4, #0x18                  	// #24
  e8:	add	x2, x0, x2
  ec:	umaddl	x0, w21, w4, x0
  f0:	cmp	x0, x2
  f4:	b.eq	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x7c>  // b.none
  f8:	ldp	x4, x5, [x2]
  fc:	stp	x4, x5, [x3]
 100:	add	x2, x2, #0x18
 104:	ldur	x4, [x2, #-8]
 108:	str	x4, [x3, #16]
 10c:	cmp	x2, x0
 110:	add	x3, x3, #0x18
 114:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xf8>  // b.any
 118:	cmp	x22, x6
 11c:	b.ls	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x7c>  // b.plast
 120:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 124:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 128:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 12c:	add	x3, x3, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x0, x0, #0x0
 138:	mov	w2, #0x43                  	// #67
 13c:	bl	0 <__assert_fail>
 140:	str	wzr, [x0, #8]
 144:	mov	x1, x22
 148:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 14c:	ldr	w0, [x20, #8]
 150:	mov	w1, #0x18                  	// #24
 154:	ldr	x2, [x20]
 158:	ldr	x3, [x19]
 15c:	umaddl	x0, w0, w1, x2
 160:	cmp	x2, x0
 164:	b.eq	170 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x170>  // b.none
 168:	ldr	w6, [x19, #12]
 16c:	b	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xf8>
 170:	ldr	w6, [x19, #12]
 174:	b	118 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x118>

Disassembly of section .text._ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_:

0000000000000000 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x23, x24, [sp, #48]
  14:	add	x23, x0, #0x8
  18:	cbz	x19, 9c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x9c>
  1c:	ldp	x24, x20, [x1]
  20:	stp	x21, x22, [sp, #32]
  24:	cbz	x20, b0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xb0>
  28:	mov	x22, x23
  2c:	nop
  30:	ldp	x0, x21, [x19, #32]
  34:	cmp	x20, x21
  38:	b.cc	ec <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xec>  // b.lo, b.ul, b.last
  3c:	cbz	x21, 10c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x10c>
  40:	mov	x2, x21
  44:	mov	x1, x24
  48:	bl	0 <memcmp>
  4c:	cbnz	w0, fc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xfc>
  50:	cmp	x20, x21
  54:	b.ne	10c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x10c>  // b.any
  58:	mov	x22, x19
  5c:	ldr	x19, [x19, #16]
  60:	cbnz	x19, 30 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x30>
  64:	cmp	x22, x23
  68:	b.eq	98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>  // b.none
  6c:	ldp	x1, x19, [x22, #32]
  70:	cmp	x19, x20
  74:	b.cc	11c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x11c>  // b.lo, b.ul, b.last
  78:	mov	x0, x24
  7c:	mov	x2, x20
  80:	bl	0 <memcmp>
  84:	cbnz	w0, 130 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x130>
  88:	cmp	x20, x19
  8c:	b.eq	d0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xd0>  // b.none
  90:	cmp	x20, x19
  94:	b.cs	d0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xd0>  // b.hs, b.nlast
  98:	ldp	x21, x22, [sp, #32]
  9c:	mov	x0, x23
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret
  b0:	mov	x22, x19
  b4:	ldr	x19, [x19, #16]
  b8:	cbnz	x19, b0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xb0>
  bc:	cmp	x23, x22
  c0:	b.eq	98 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x98>  // b.none
  c4:	ldr	x19, [x22, #40]
  c8:	cmp	x20, x19
  cc:	b.ne	90 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x90>  // b.any
  d0:	mov	x23, x22
  d4:	mov	x0, x23
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldp	x23, x24, [sp, #48]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret
  ec:	mov	x2, x20
  f0:	mov	x1, x24
  f4:	bl	0 <memcmp>
  f8:	cbz	w0, 10c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x10c>
  fc:	tbz	w0, #31, 58 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x58>
 100:	ldr	x19, [x19, #24]
 104:	cbnz	x19, 30 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x30>
 108:	b	64 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x64>
 10c:	cmp	x20, x21
 110:	b.ls	58 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x58>  // b.plast
 114:	ldr	x19, [x19, #24]
 118:	b	104 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x104>
 11c:	cbz	x19, d0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0xd0>
 120:	mov	x0, x24
 124:	mov	x2, x19
 128:	bl	0 <memcmp>
 12c:	cbz	w0, 90 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE10_M_find_trINS9_9StringRefEvEESt23_Rb_tree_const_iteratorISE_ERKT_+0x90>
 130:	cmp	w0, #0x0
 134:	csel	x23, x23, x22, lt  // lt = tstop
 138:	mov	x0, x23
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x21, x22, [sp, #32]
 144:	ldp	x23, x24, [sp, #48]
 148:	ldp	x29, x30, [sp], #64
 14c:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	cbz	x1, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x74>
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x0
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x21
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  28:	ldr	x2, [x19, #32]
  2c:	add	x1, x19, #0x30
  30:	mov	x0, x19
  34:	cmp	x2, x1
  38:	ldr	x20, [x19, #16]
  3c:	b.eq	5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x5c>  // b.none
  40:	mov	x0, x2
  44:	bl	0 <_ZdlPv>
  48:	mov	x0, x19
  4c:	bl	0 <_ZdlPv>
  50:	cbz	x20, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x64>
  54:	mov	x19, x20
  58:	b	1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x1c>
  5c:	bl	0 <_ZdlPv>
  60:	cbnz	x20, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x54>
  64:	ldp	x19, x20, [sp, #16]
  68:	ldr	x21, [sp, #32]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	ret

Disassembly of section .text._ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE:

0000000000000000 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0, #336]
   c:	stp	x19, x20, [sp, #16]
  10:	cmp	x1, x2
  14:	b.ne	2b8 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x2b8>  // b.any
  18:	ldr	x2, [x1, #48]
  1c:	str	xzr, [x1, #48]
  20:	ldr	x20, [x0, #336]
  24:	str	x2, [x0, #336]
  28:	cbz	x20, 270 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x270>
  2c:	stp	x21, x22, [sp, #32]
  30:	ldr	x21, [x20, #48]
  34:	cbz	x21, 1dc <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x1dc>
  38:	ldr	x22, [x21, #48]
  3c:	cbz	x22, 198 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x198>
  40:	stp	x23, x24, [sp, #48]
  44:	ldr	x23, [x22, #48]
  48:	cbz	x23, 150 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x150>
  4c:	ldr	x24, [x23, #48]
  50:	cbz	x24, 10c <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x10c>
  54:	stp	x25, x26, [sp, #64]
  58:	ldr	x25, [x24, #48]
  5c:	cbz	x25, c4 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xc4>
  60:	ldr	x0, [x25, #48]
  64:	cbz	x0, 6c <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x6c>
  68:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  6c:	ldr	x19, [x25, #16]
  70:	cbz	x19, b8 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xb8>
  74:	ldr	x1, [x19, #24]
  78:	mov	x0, x25
  7c:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  80:	ldr	x0, [x19, #32]
  84:	add	x1, x19, #0x30
  88:	ldr	x26, [x19, #16]
  8c:	cmp	x0, x1
  90:	b.eq	ac <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xac>  // b.none
  94:	bl	0 <_ZdlPv>
  98:	mov	x0, x19
  9c:	bl	0 <_ZdlPv>
  a0:	cbz	x26, b8 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xb8>
  a4:	mov	x19, x26
  a8:	b	74 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x74>
  ac:	mov	x0, x19
  b0:	bl	0 <_ZdlPv>
  b4:	cbnz	x26, a4 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xa4>
  b8:	mov	x0, x25
  bc:	mov	x1, #0x38                  	// #56
  c0:	bl	0 <_ZdlPvm>
  c4:	ldr	x19, [x24, #16]
  c8:	cbz	x19, fc <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xfc>
  cc:	ldr	x1, [x19, #24]
  d0:	mov	x0, x24
  d4:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
  d8:	ldr	x0, [x19, #32]
  dc:	add	x1, x19, #0x30
  e0:	ldr	x25, [x19, #16]
  e4:	cmp	x0, x1
  e8:	b.eq	2a4 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x2a4>  // b.none
  ec:	bl	0 <_ZdlPv>
  f0:	mov	x0, x19
  f4:	bl	0 <_ZdlPv>
  f8:	cbnz	x25, 2b0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x2b0>
  fc:	mov	x0, x24
 100:	mov	x1, #0x38                  	// #56
 104:	bl	0 <_ZdlPvm>
 108:	ldp	x25, x26, [sp, #64]
 10c:	ldr	x19, [x23, #16]
 110:	cbz	x19, 144 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x144>
 114:	ldr	x1, [x19, #24]
 118:	mov	x0, x23
 11c:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 120:	ldr	x0, [x19, #32]
 124:	add	x1, x19, #0x30
 128:	ldr	x24, [x19, #16]
 12c:	cmp	x0, x1
 130:	b.eq	27c <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x27c>  // b.none
 134:	bl	0 <_ZdlPv>
 138:	mov	x0, x19
 13c:	bl	0 <_ZdlPv>
 140:	cbnz	x24, 288 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x288>
 144:	mov	x0, x23
 148:	mov	x1, #0x38                  	// #56
 14c:	bl	0 <_ZdlPvm>
 150:	ldr	x19, [x22, #16]
 154:	cbz	x19, 188 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x188>
 158:	ldr	x1, [x19, #24]
 15c:	mov	x0, x22
 160:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 164:	ldr	x0, [x19, #32]
 168:	add	x1, x19, #0x30
 16c:	ldr	x23, [x19, #16]
 170:	cmp	x0, x1
 174:	b.eq	290 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x290>  // b.none
 178:	bl	0 <_ZdlPv>
 17c:	mov	x0, x19
 180:	bl	0 <_ZdlPv>
 184:	cbnz	x23, 29c <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x29c>
 188:	mov	x0, x22
 18c:	mov	x1, #0x38                  	// #56
 190:	bl	0 <_ZdlPvm>
 194:	ldp	x23, x24, [sp, #48]
 198:	ldr	x19, [x21, #16]
 19c:	cbz	x19, 1d0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x1d0>
 1a0:	ldr	x1, [x19, #24]
 1a4:	mov	x0, x21
 1a8:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 1ac:	ldr	x0, [x19, #32]
 1b0:	add	x1, x19, #0x30
 1b4:	ldr	x22, [x19, #16]
 1b8:	cmp	x0, x1
 1bc:	b.eq	25c <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x25c>  // b.none
 1c0:	bl	0 <_ZdlPv>
 1c4:	mov	x0, x19
 1c8:	bl	0 <_ZdlPv>
 1cc:	cbnz	x22, 268 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x268>
 1d0:	mov	x0, x21
 1d4:	mov	x1, #0x38                  	// #56
 1d8:	bl	0 <_ZdlPvm>
 1dc:	ldr	x19, [x20, #16]
 1e0:	cbz	x19, 244 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x244>
 1e4:	ldr	x1, [x19, #24]
 1e8:	mov	x0, x20
 1ec:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 1f0:	ldr	x0, [x19, #32]
 1f4:	add	x1, x19, #0x30
 1f8:	ldr	x21, [x19, #16]
 1fc:	cmp	x0, x1
 200:	b.eq	238 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x238>  // b.none
 204:	bl	0 <_ZdlPv>
 208:	mov	x0, x19
 20c:	bl	0 <_ZdlPv>
 210:	cbz	x21, 244 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x244>
 214:	mov	x19, x21
 218:	mov	x0, x20
 21c:	ldr	x1, [x19, #24]
 220:	bl	0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 224:	ldr	x0, [x19, #32]
 228:	add	x1, x19, #0x30
 22c:	ldr	x21, [x19, #16]
 230:	cmp	x0, x1
 234:	b.ne	204 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x204>  // b.any
 238:	mov	x0, x19
 23c:	bl	0 <_ZdlPv>
 240:	cbnz	x21, 214 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x214>
 244:	mov	x0, x20
 248:	mov	x1, #0x38                  	// #56
 24c:	ldp	x19, x20, [sp, #16]
 250:	ldp	x21, x22, [sp, #32]
 254:	ldp	x29, x30, [sp], #80
 258:	b	0 <_ZdlPvm>
 25c:	mov	x0, x19
 260:	bl	0 <_ZdlPv>
 264:	cbz	x22, 1d0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x1d0>
 268:	mov	x19, x22
 26c:	b	1a0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x1a0>
 270:	ldp	x19, x20, [sp, #16]
 274:	ldp	x29, x30, [sp], #80
 278:	ret
 27c:	mov	x0, x19
 280:	bl	0 <_ZdlPv>
 284:	cbz	x24, 144 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x144>
 288:	mov	x19, x24
 28c:	b	114 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x114>
 290:	mov	x0, x19
 294:	bl	0 <_ZdlPv>
 298:	cbz	x23, 188 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x188>
 29c:	mov	x19, x23
 2a0:	b	158 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0x158>
 2a4:	mov	x0, x19
 2a8:	bl	0 <_ZdlPv>
 2ac:	cbz	x25, fc <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xfc>
 2b0:	mov	x19, x25
 2b4:	b	cc <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE+0xcc>
 2b8:	adrp	x3, 0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 2bc:	adrp	x1, 0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 2c0:	adrp	x0, 0 <_ZN4llvm8TGParser13PopLocalScopeEPNS_15TGLocalVarScopeE>
 2c4:	add	x3, x3, #0x0
 2c8:	add	x1, x1, #0x0
 2cc:	add	x0, x0, #0x0
 2d0:	mov	w2, #0xc0                  	// #192
 2d4:	stp	x21, x22, [sp, #32]
 2d8:	stp	x23, x24, [sp, #48]
 2dc:	stp	x25, x26, [sp, #64]
 2e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8TGParser14PushLocalScopeEv:

0000000000000000 <_ZN4llvm8TGParser14PushLocalScopeEv>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #104]
   c:	mov	x0, #0x38                  	// #56
  10:	stp	x19, x20, [sp, #16]
  14:	ldr	x20, [sp, #104]
  18:	stp	x21, x22, [sp, #32]
  1c:	ldr	x19, [x20, #336]
  20:	str	xzr, [x20, #336]
  24:	bl	0 <_Znwm>
  28:	add	x1, x0, #0x8
  2c:	str	wzr, [x0, #8]
  30:	str	xzr, [x0, #16]
  34:	ldr	x21, [x20, #336]
  38:	stp	x1, x1, [x1, #16]
  3c:	str	xzr, [x1, #32]
  40:	str	x19, [x0, #48]
  44:	str	x0, [sp, #104]
  48:	str	x0, [x20, #336]
  4c:	cbz	x21, 288 <_ZN4llvm8TGParser14PushLocalScopeEv+0x288>
  50:	ldr	x22, [x21, #48]
  54:	cbz	x22, 228 <_ZN4llvm8TGParser14PushLocalScopeEv+0x228>
  58:	stp	x23, x24, [sp, #48]
  5c:	ldr	x23, [x22, #48]
  60:	cbz	x23, 1d8 <_ZN4llvm8TGParser14PushLocalScopeEv+0x1d8>
  64:	ldr	x24, [x23, #48]
  68:	cbz	x24, 18c <_ZN4llvm8TGParser14PushLocalScopeEv+0x18c>
  6c:	stp	x25, x26, [sp, #64]
  70:	ldr	x25, [x24, #48]
  74:	cbz	x25, 13c <_ZN4llvm8TGParser14PushLocalScopeEv+0x13c>
  78:	ldr	x26, [x25, #48]
  7c:	cbz	x26, f0 <_ZN4llvm8TGParser14PushLocalScopeEv+0xf0>
  80:	ldr	x0, [x26, #48]
  84:	cbz	x0, 8c <_ZN4llvm8TGParser14PushLocalScopeEv+0x8c>
  88:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  8c:	ldr	x19, [x26, #16]
  90:	cbz	x19, e4 <_ZN4llvm8TGParser14PushLocalScopeEv+0xe4>
  94:	str	x27, [sp, #80]
  98:	ldr	x1, [x19, #24]
  9c:	mov	x0, x26
  a0:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  a4:	ldr	x2, [x19, #32]
  a8:	add	x1, x19, #0x30
  ac:	mov	x0, x19
  b0:	cmp	x2, x1
  b4:	ldr	x27, [x19, #16]
  b8:	b.eq	d8 <_ZN4llvm8TGParser14PushLocalScopeEv+0xd8>  // b.none
  bc:	mov	x0, x2
  c0:	bl	0 <_ZdlPv>
  c4:	mov	x0, x19
  c8:	bl	0 <_ZdlPv>
  cc:	cbz	x27, e0 <_ZN4llvm8TGParser14PushLocalScopeEv+0xe0>
  d0:	mov	x19, x27
  d4:	b	98 <_ZN4llvm8TGParser14PushLocalScopeEv+0x98>
  d8:	bl	0 <_ZdlPv>
  dc:	cbnz	x27, d0 <_ZN4llvm8TGParser14PushLocalScopeEv+0xd0>
  e0:	ldr	x27, [sp, #80]
  e4:	mov	x0, x26
  e8:	mov	x1, #0x38                  	// #56
  ec:	bl	0 <_ZdlPvm>
  f0:	ldr	x19, [x25, #16]
  f4:	cbz	x19, 130 <_ZN4llvm8TGParser14PushLocalScopeEv+0x130>
  f8:	ldr	x1, [x19, #24]
  fc:	mov	x0, x25
 100:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
 104:	ldr	x2, [x19, #32]
 108:	add	x1, x19, #0x30
 10c:	mov	x0, x19
 110:	cmp	x2, x1
 114:	ldr	x26, [x19, #16]
 118:	b.eq	2c8 <_ZN4llvm8TGParser14PushLocalScopeEv+0x2c8>  // b.none
 11c:	mov	x0, x2
 120:	bl	0 <_ZdlPv>
 124:	mov	x0, x19
 128:	bl	0 <_ZdlPv>
 12c:	cbnz	x26, 2d0 <_ZN4llvm8TGParser14PushLocalScopeEv+0x2d0>
 130:	mov	x0, x25
 134:	mov	x1, #0x38                  	// #56
 138:	bl	0 <_ZdlPvm>
 13c:	ldr	x19, [x24, #16]
 140:	cbz	x19, 17c <_ZN4llvm8TGParser14PushLocalScopeEv+0x17c>
 144:	ldr	x1, [x19, #24]
 148:	mov	x0, x24
 14c:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
 150:	ldr	x2, [x19, #32]
 154:	add	x1, x19, #0x30
 158:	mov	x0, x19
 15c:	cmp	x2, x1
 160:	ldr	x25, [x19, #16]
 164:	b.eq	2a8 <_ZN4llvm8TGParser14PushLocalScopeEv+0x2a8>  // b.none
 168:	mov	x0, x2
 16c:	bl	0 <_ZdlPv>
 170:	mov	x0, x19
 174:	bl	0 <_ZdlPv>
 178:	cbnz	x25, 2b0 <_ZN4llvm8TGParser14PushLocalScopeEv+0x2b0>
 17c:	mov	x0, x24
 180:	mov	x1, #0x38                  	// #56
 184:	bl	0 <_ZdlPvm>
 188:	ldp	x25, x26, [sp, #64]
 18c:	ldr	x19, [x23, #16]
 190:	cbz	x19, 1cc <_ZN4llvm8TGParser14PushLocalScopeEv+0x1cc>
 194:	ldr	x1, [x19, #24]
 198:	mov	x0, x23
 19c:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
 1a0:	ldr	x2, [x19, #32]
 1a4:	add	x1, x19, #0x30
 1a8:	mov	x0, x19
 1ac:	cmp	x2, x1
 1b0:	ldr	x24, [x19, #16]
 1b4:	b.eq	2b8 <_ZN4llvm8TGParser14PushLocalScopeEv+0x2b8>  // b.none
 1b8:	mov	x0, x2
 1bc:	bl	0 <_ZdlPv>
 1c0:	mov	x0, x19
 1c4:	bl	0 <_ZdlPv>
 1c8:	cbnz	x24, 2c0 <_ZN4llvm8TGParser14PushLocalScopeEv+0x2c0>
 1cc:	mov	x0, x23
 1d0:	mov	x1, #0x38                  	// #56
 1d4:	bl	0 <_ZdlPvm>
 1d8:	ldr	x19, [x22, #16]
 1dc:	cbz	x19, 218 <_ZN4llvm8TGParser14PushLocalScopeEv+0x218>
 1e0:	ldr	x1, [x19, #24]
 1e4:	mov	x0, x22
 1e8:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
 1ec:	ldr	x2, [x19, #32]
 1f0:	add	x1, x19, #0x30
 1f4:	mov	x0, x19
 1f8:	cmp	x2, x1
 1fc:	ldr	x23, [x19, #16]
 200:	b.eq	298 <_ZN4llvm8TGParser14PushLocalScopeEv+0x298>  // b.none
 204:	mov	x0, x2
 208:	bl	0 <_ZdlPv>
 20c:	mov	x0, x19
 210:	bl	0 <_ZdlPv>
 214:	cbnz	x23, 2a0 <_ZN4llvm8TGParser14PushLocalScopeEv+0x2a0>
 218:	mov	x0, x22
 21c:	mov	x1, #0x38                  	// #56
 220:	bl	0 <_ZdlPvm>
 224:	ldp	x23, x24, [sp, #48]
 228:	ldr	x19, [x21, #16]
 22c:	cbz	x19, 278 <_ZN4llvm8TGParser14PushLocalScopeEv+0x278>
 230:	ldr	x1, [x19, #24]
 234:	mov	x0, x21
 238:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
 23c:	ldr	x2, [x19, #32]
 240:	add	x1, x19, #0x30
 244:	mov	x0, x19
 248:	cmp	x2, x1
 24c:	ldr	x22, [x19, #16]
 250:	b.eq	270 <_ZN4llvm8TGParser14PushLocalScopeEv+0x270>  // b.none
 254:	mov	x0, x2
 258:	bl	0 <_ZdlPv>
 25c:	mov	x0, x19
 260:	bl	0 <_ZdlPv>
 264:	cbz	x22, 278 <_ZN4llvm8TGParser14PushLocalScopeEv+0x278>
 268:	mov	x19, x22
 26c:	b	230 <_ZN4llvm8TGParser14PushLocalScopeEv+0x230>
 270:	bl	0 <_ZdlPv>
 274:	cbnz	x22, 268 <_ZN4llvm8TGParser14PushLocalScopeEv+0x268>
 278:	mov	x0, x21
 27c:	mov	x1, #0x38                  	// #56
 280:	bl	0 <_ZdlPvm>
 284:	ldr	x0, [x20, #336]
 288:	ldp	x19, x20, [sp, #16]
 28c:	ldp	x21, x22, [sp, #32]
 290:	ldp	x29, x30, [sp], #112
 294:	ret
 298:	bl	0 <_ZdlPv>
 29c:	cbz	x23, 218 <_ZN4llvm8TGParser14PushLocalScopeEv+0x218>
 2a0:	mov	x19, x23
 2a4:	b	1e0 <_ZN4llvm8TGParser14PushLocalScopeEv+0x1e0>
 2a8:	bl	0 <_ZdlPv>
 2ac:	cbz	x25, 17c <_ZN4llvm8TGParser14PushLocalScopeEv+0x17c>
 2b0:	mov	x19, x25
 2b4:	b	144 <_ZN4llvm8TGParser14PushLocalScopeEv+0x144>
 2b8:	bl	0 <_ZdlPv>
 2bc:	cbz	x24, 1cc <_ZN4llvm8TGParser14PushLocalScopeEv+0x1cc>
 2c0:	mov	x19, x24
 2c4:	b	194 <_ZN4llvm8TGParser14PushLocalScopeEv+0x194>
 2c8:	bl	0 <_ZdlPv>
 2cc:	cbz	x26, 130 <_ZN4llvm8TGParser14PushLocalScopeEv+0x130>
 2d0:	mov	x19, x26
 2d4:	b	f8 <_ZN4llvm8TGParser14PushLocalScopeEv+0xf8>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	str	x21, [sp, #32]
  14:	mov	x21, x0
  18:	str	x1, [sp, #56]
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	118 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x118>  // b.pmore
  28:	ldr	w2, [x21, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x19
  58:	csel	x1, x2, x19, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xe8>  // b.pmore
  64:	mov	w19, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, 100 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x100>
  7c:	ldr	x0, [x21]
  80:	ldr	w1, [x21, #8]
  84:	add	x1, x0, x1, lsl #4
  88:	cmp	x0, x1
  8c:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xc0>  // b.none
  90:	sub	x3, x1, x0
  94:	mov	x2, #0x0                   	// #0
  98:	sub	x3, x3, #0x10
  9c:	mov	x1, #0x0                   	// #0
  a0:	lsr	x3, x3, #4
  a4:	add	x3, x3, #0x1
  a8:	ldr	q0, [x0, x1]
  ac:	add	x2, x2, #0x1
  b0:	cmp	x3, x2
  b4:	str	q0, [x20, x1]
  b8:	add	x1, x1, #0x10
  bc:	b.hi	a8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xa8>  // b.pmore
  c0:	add	x1, x21, #0x10
  c4:	cmp	x0, x1
  c8:	b.eq	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xd0>  // b.none
  cc:	bl	0 <free>
  d0:	str	x20, [x21]
  d4:	str	w19, [x21, #12]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #80
  e4:	ret
  e8:	mov	x0, #0xffffffff0           	// #68719476720
  ec:	mov	w19, #0xffffffff            	// #-1
  f0:	str	x3, [sp, #64]
  f4:	bl	0 <malloc>
  f8:	mov	x20, x0
  fc:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x7c>
 100:	mov	x20, #0x0                   	// #0
 104:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
 108:	mov	w1, #0x1                   	// #1
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 114:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x7c>
 118:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
 11c:	mov	w1, #0x1                   	// #1
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 128:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x28>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x25, x26, [sp, #64]
  10:	stp	x27, x28, [sp, #80]
  14:	ldp	x25, x27, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x22, x1
  24:	stp	x23, x24, [sp, #48]
  28:	sub	x1, x27, x25
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	218 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x218>  // b.none
  34:	mov	x24, x0
  38:	mov	x20, x2
  3c:	asr	x0, x1, #4
  40:	sub	x21, x22, x25
  44:	cbz	x0, 200 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x200>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x26, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	1ec <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1ec>  // b.plast
  58:	mov	x0, x26
  5c:	bl	0 <_Znwm>
  60:	mov	x23, x0
  64:	add	x0, x0, x26
  68:	add	x19, x23, #0x10
  6c:	str	x0, [sp, #104]
  70:	add	x0, x23, x21
  74:	str	xzr, [x23, x21]
  78:	ldr	x1, [x20]
  7c:	str	xzr, [x20]
  80:	str	x1, [x0, #8]
  84:	cmp	x22, x25
  88:	b.eq	178 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x178>  // b.none
  8c:	mov	x21, x23
  90:	mov	x19, x25
  94:	nop
  98:	ldr	x0, [x19]
  9c:	str	xzr, [x19]
  a0:	str	x0, [x21]
  a4:	ldr	x0, [x19, #8]
  a8:	str	xzr, [x19, #8]
  ac:	str	x0, [x21, #8]
  b0:	ldr	x28, [x19, #8]
  b4:	cbz	x28, f8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf8>
  b8:	ldp	x20, x26, [x28, #24]
  bc:	cmp	x20, x26
  c0:	b.eq	e0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe0>  // b.none
  c4:	nop
  c8:	mov	x0, x20
  cc:	add	x20, x20, #0x10
  d0:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  d4:	cmp	x26, x20
  d8:	b.ne	c8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc8>  // b.any
  dc:	ldr	x26, [x28, #24]
  e0:	cbz	x26, ec <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>
  e4:	mov	x0, x26
  e8:	bl	0 <_ZdlPv>
  ec:	mov	x0, x28
  f0:	mov	x1, #0x30                  	// #48
  f4:	bl	0 <_ZdlPvm>
  f8:	ldr	x20, [x19]
  fc:	cbz	x20, 15c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x15c>
 100:	ldr	x0, [x20, #88]
 104:	add	x1, x20, #0x68
 108:	add	x26, x20, #0x58
 10c:	cmp	x0, x1
 110:	b.eq	118 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x118>  // b.none
 114:	bl	0 <free>
 118:	ldr	x0, [x20, #72]
 11c:	add	x28, x20, #0x48
 120:	cmp	x26, x0
 124:	b.eq	12c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	ldr	x0, [x20, #56]
 130:	cmp	x28, x0
 134:	b.eq	13c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x13c>  // b.none
 138:	bl	0 <free>
 13c:	ldr	x0, [x20, #8]
 140:	add	x1, x20, #0x18
 144:	cmp	x0, x1
 148:	b.eq	150 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x150>  // b.none
 14c:	bl	0 <free>
 150:	mov	x0, x20
 154:	mov	x1, #0x80                  	// #128
 158:	bl	0 <_ZdlPvm>
 15c:	add	x19, x19, #0x10
 160:	add	x21, x21, #0x10
 164:	cmp	x22, x19
 168:	b.ne	98 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x98>  // b.any
 16c:	sub	x19, x22, x25
 170:	add	x19, x19, #0x10
 174:	add	x19, x23, x19
 178:	cmp	x22, x27
 17c:	b.eq	1b8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1b8>  // b.none
 180:	sub	x27, x27, x22
 184:	mov	x2, #0x0                   	// #0
 188:	sub	x27, x27, #0x10
 18c:	mov	x0, #0x0                   	// #0
 190:	lsr	x1, x27, #4
 194:	add	x1, x1, #0x1
 198:	ldr	q0, [x22, x2]
 19c:	add	x0, x0, #0x1
 1a0:	cmp	x0, x1
 1a4:	str	q0, [x19, x2]
 1a8:	add	x2, x2, #0x10
 1ac:	b.cc	198 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x198>  // b.lo, b.ul, b.last
 1b0:	add	x27, x27, #0x10
 1b4:	add	x19, x19, x27
 1b8:	cbz	x25, 1c4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1c4>
 1bc:	mov	x0, x25
 1c0:	bl	0 <_ZdlPv>
 1c4:	ldr	x0, [sp, #104]
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	ldp	x25, x26, [sp, #64]
 1d0:	ldp	x27, x28, [sp, #80]
 1d4:	stp	x23, x19, [x24]
 1d8:	str	x0, [x24, #16]
 1dc:	ldp	x19, x20, [sp, #16]
 1e0:	ldp	x23, x24, [sp, #48]
 1e4:	ldp	x29, x30, [sp], #112
 1e8:	ret
 1ec:	cbnz	x0, 208 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x208>
 1f0:	mov	x19, #0x10                  	// #16
 1f4:	mov	x23, #0x0                   	// #0
 1f8:	str	xzr, [sp, #104]
 1fc:	b	70 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x70>
 200:	mov	x26, #0x10                  	// #16
 204:	b	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 208:	cmp	x0, x3
 20c:	csel	x0, x0, x3, ls  // ls = plast
 210:	lsl	x26, x0, #4
 214:	b	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 218:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 21c:	add	x0, x0, #0x0
 220:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	60 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x60>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x1
  20:	mov	x20, x1
  24:	ldr	x1, [x21], #16
  28:	cmp	x21, x1
  2c:	b.eq	70 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x70>  // b.none
  30:	mov	x2, x0
  34:	ldr	x0, [x2], #16
  38:	cmp	x0, x2
  3c:	b.eq	48 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x48>  // b.none
  40:	bl	0 <free>
  44:	ldr	x1, [x20]
  48:	ldr	d0, [x20, #8]
  4c:	str	x1, [x19]
  50:	str	d0, [x19, #8]
  54:	str	x21, [x20]
  58:	ldp	x21, x22, [sp, #32]
  5c:	str	xzr, [x20, #8]
  60:	mov	x0, x19
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #64
  6c:	ret
  70:	ldr	w22, [x20, #8]
  74:	ldr	w1, [x0, #8]
  78:	stp	x23, x24, [sp, #48]
  7c:	mov	w23, w22
  80:	cmp	x1, w22, uxtw
  84:	b.cs	104 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x104>  // b.hs, b.nlast
  88:	ldr	w2, [x0, #12]
  8c:	cmp	x23, x2
  90:	b.hi	134 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x134>  // b.pmore
  94:	lsl	x24, x1, #3
  98:	ldr	x0, [x0]
  9c:	cbz	x1, 11c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x11c>
  a0:	mov	x1, x21
  a4:	mov	x2, x24
  a8:	bl	0 <memmove>
  ac:	ldr	w2, [x20, #8]
  b0:	ldr	x0, [x19]
  b4:	ldr	x1, [x20]
  b8:	lsl	x2, x2, #3
  bc:	add	x3, x1, x2
  c0:	add	x1, x1, x24
  c4:	cmp	x1, x3
  c8:	b.eq	d8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xd8>  // b.none
  cc:	sub	x2, x2, x24
  d0:	add	x0, x0, x24
  d4:	bl	0 <memcpy>
  d8:	ldr	w0, [x19, #12]
  dc:	cmp	x23, x0
  e0:	b.hi	15c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x15c>  // b.pmore
  e4:	ldp	x23, x24, [sp, #48]
  e8:	str	w22, [x19, #8]
  ec:	ldp	x21, x22, [sp, #32]
  f0:	str	wzr, [x20, #8]
  f4:	mov	x0, x19
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret
 104:	cbz	x23, e4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xe4>
 108:	ldr	x0, [x0]
 10c:	mov	x1, x21
 110:	lsl	x2, x23, #3
 114:	bl	0 <memmove>
 118:	b	d8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xd8>
 11c:	lsl	x2, x23, #3
 120:	add	x1, x21, x24
 124:	add	x21, x21, x2
 128:	cmp	x1, x21
 12c:	b.ne	cc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xcc>  // b.any
 130:	b	e4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xe4>
 134:	str	wzr, [x0, #8]
 138:	add	x1, x0, #0x10
 13c:	mov	x2, x23
 140:	mov	x3, #0x8                   	// #8
 144:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 148:	mov	x24, #0x0                   	// #0
 14c:	ldr	w2, [x20, #8]
 150:	ldr	x0, [x19]
 154:	ldr	x1, [x20]
 158:	b	b8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xb8>
 15c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 160:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 164:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 168:	add	x3, x3, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x0, x0, #0x0
 174:	mov	w2, #0x43                  	// #67
 178:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	str	x21, [sp, #32]
  14:	mov	x21, x0
  18:	str	x1, [sp, #56]
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	118 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x118>  // b.pmore
  28:	ldr	w2, [x21, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x19
  58:	csel	x1, x2, x19, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xe8>  // b.pmore
  64:	mov	w19, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, 100 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x100>
  7c:	ldr	x0, [x21]
  80:	ldr	w1, [x21, #8]
  84:	add	x1, x0, x1, lsl #4
  88:	cmp	x0, x1
  8c:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xc0>  // b.none
  90:	sub	x3, x1, x0
  94:	mov	x2, #0x0                   	// #0
  98:	sub	x3, x3, #0x10
  9c:	mov	x1, #0x0                   	// #0
  a0:	lsr	x3, x3, #4
  a4:	add	x3, x3, #0x1
  a8:	ldr	q0, [x0, x1]
  ac:	add	x2, x2, #0x1
  b0:	cmp	x3, x2
  b4:	str	q0, [x20, x1]
  b8:	add	x1, x1, #0x10
  bc:	b.hi	a8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xa8>  // b.pmore
  c0:	add	x1, x21, #0x10
  c4:	cmp	x0, x1
  c8:	b.eq	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xd0>  // b.none
  cc:	bl	0 <free>
  d0:	str	x20, [x21]
  d4:	str	w19, [x21, #12]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #80
  e4:	ret
  e8:	mov	x0, #0xffffffff0           	// #68719476720
  ec:	mov	w19, #0xffffffff            	// #-1
  f0:	str	x3, [sp, #64]
  f4:	bl	0 <malloc>
  f8:	mov	x20, x0
  fc:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x7c>
 100:	mov	x20, #0x0                   	// #0
 104:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
 108:	mov	w1, #0x1                   	// #1
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 114:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x7c>
 118:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
 11c:	mov	w1, #0x1                   	// #1
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 128:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x28>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	cmp	x1, x0
  20:	str	x1, [sp, #72]
  24:	b.hi	184 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x184>  // b.pmore
  28:	ldr	w2, [x20, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #88]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x19
  58:	csel	x1, x2, x19, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	150 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x150>  // b.pmore
  64:	add	x0, x1, x1, lsl #1
  68:	mov	w21, w1
  6c:	str	x1, [sp, #80]
  70:	lsl	x0, x0, #4
  74:	bl	0 <malloc>
  78:	mov	x22, x0
  7c:	cbz	x0, 16c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x16c>
  80:	ldr	w5, [x20, #8]
  84:	mov	w0, #0x30                  	// #48
  88:	ldr	x1, [x20]
  8c:	umull	x5, w5, w0
  90:	add	x19, x1, x5
  94:	cmp	x1, x19
  98:	b.eq	11c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x11c>  // b.none
  9c:	movi	v0.4s, #0x0
  a0:	mov	x2, x22
  a4:	str	x23, [sp, #48]
  a8:	ldp	x0, x3, [x1]
  ac:	add	x1, x1, #0x30
  b0:	ldur	x4, [x1, #-16]
  b4:	stp	x0, x3, [x2]
  b8:	ldur	x0, [x1, #-32]
  bc:	ldur	x3, [x1, #-8]
  c0:	str	x0, [x2, #16]
  c4:	ldur	x0, [x1, #-24]
  c8:	str	x0, [x2, #24]
  cc:	stur	xzr, [x1, #-24]
  d0:	stur	q0, [x1, #-40]
  d4:	cmp	x19, x1
  d8:	stp	x4, x3, [x2, #32]
  dc:	add	x2, x2, #0x30
  e0:	b.ne	a8 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xa8>  // b.any
  e4:	ldr	x23, [x20]
  e8:	add	x19, x23, x5
  ec:	cmp	x23, x19
  f0:	b.eq	198 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x198>  // b.none
  f4:	nop
  f8:	ldur	x0, [x19, #-40]
  fc:	sub	x19, x19, #0x30
 100:	cmp	x19, x23
 104:	cbz	x0, 148 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x148>
 108:	bl	0 <_ZdlPv>
 10c:	cmp	x19, x23
 110:	b.ne	f8 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xf8>  // b.any
 114:	ldr	x19, [x20]
 118:	ldr	x23, [sp, #48]
 11c:	add	x0, x20, #0x10
 120:	cmp	x19, x0
 124:	b.eq	130 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x130>  // b.none
 128:	mov	x0, x19
 12c:	bl	0 <free>
 130:	str	x22, [x20]
 134:	str	w21, [x20, #12]
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x29, x30, [sp], #96
 144:	ret
 148:	b.ne	f8 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xf8>  // b.any
 14c:	b	114 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x114>
 150:	mov	w0, #0xffffffd0            	// #-48
 154:	mov	w21, #0xffffffff            	// #-1
 158:	movk	x0, #0x2f, lsl #32
 15c:	str	x3, [sp, #80]
 160:	bl	0 <malloc>
 164:	mov	x22, x0
 168:	cbnz	x0, 80 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x80>
 16c:	mov	x22, #0x0                   	// #0
 170:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
 174:	mov	w1, #0x1                   	// #1
 178:	add	x0, x0, #0x0
 17c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 180:	b	80 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x80>
 184:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
 188:	mov	w1, #0x1                   	// #1
 18c:	add	x0, x0, #0x0
 190:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 194:	b	28 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x28>
 198:	ldr	x23, [sp, #48]
 19c:	b	11c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x11c>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	b.eq	ac <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xac>  // b.none
  18:	stp	x23, x24, [sp, #48]
  1c:	mov	x23, x1
  20:	mov	x22, x1
  24:	stp	x25, x26, [sp, #64]
  28:	ldr	x25, [x23], #16
  2c:	stp	x19, x20, [sp, #16]
  30:	ldr	w20, [x0, #8]
  34:	cmp	x23, x25
  38:	mov	w0, w20
  3c:	ldr	x19, [x21]
  40:	b.eq	bc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xbc>  // b.none
  44:	mov	w0, #0x30                  	// #48
  48:	umaddl	x20, w20, w0, x19
  4c:	cmp	x20, x19
  50:	b.eq	74 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x74>  // b.none
  54:	nop
  58:	ldur	x0, [x20, #-40]
  5c:	sub	x20, x20, #0x30
  60:	cbz	x0, 1e0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1e0>
  64:	bl	0 <_ZdlPv>
  68:	cmp	x20, x19
  6c:	b.ne	58 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x58>  // b.any
  70:	ldr	x19, [x21]
  74:	add	x0, x21, #0x10
  78:	cmp	x19, x0
  7c:	b.eq	88 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x88>  // b.none
  80:	mov	x0, x19
  84:	bl	0 <free>
  88:	ldr	d0, [x22, #8]
  8c:	ldr	x0, [x22]
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x25, x26, [sp, #64]
  98:	str	x0, [x21]
  9c:	str	d0, [x21, #8]
  a0:	str	x23, [x22]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	str	xzr, [x22, #8]
  ac:	mov	x0, x21
  b0:	ldp	x21, x22, [sp, #32]
  b4:	ldp	x29, x30, [sp], #80
  b8:	ret
  bc:	ldr	w23, [x1, #8]
  c0:	mov	w24, w23
  c4:	cmp	x0, w23, uxtw
  c8:	b.cs	1ec <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1ec>  // b.hs, b.nlast
  cc:	ldr	w4, [x21, #12]
  d0:	cmp	x24, x4
  d4:	b.ls	2e0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2e0>  // b.plast
  d8:	mov	w0, #0x30                  	// #48
  dc:	umaddl	x20, w20, w0, x19
  e0:	cmp	x20, x19
  e4:	b.eq	100 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x100>  // b.none
  e8:	ldur	x0, [x20, #-40]
  ec:	sub	x20, x20, #0x30
  f0:	cbz	x0, e0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xe0>
  f4:	bl	0 <_ZdlPv>
  f8:	cmp	x20, x19
  fc:	b.ne	e8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xe8>  // b.any
 100:	str	wzr, [x21, #8]
 104:	mov	x0, x21
 108:	mov	x1, x24
 10c:	mov	x20, #0x0                   	// #0
 110:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 114:	ldr	x0, [x22]
 118:	ldr	w4, [x21, #12]
 11c:	ldr	w3, [x22, #8]
 120:	mov	x25, x0
 124:	ldr	x19, [x21]
 128:	add	x3, x3, x3, lsl #1
 12c:	add	x19, x19, x20
 130:	add	x3, x0, x3, lsl #4
 134:	cmp	x3, x25
 138:	b.eq	184 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x184>  // b.none
 13c:	movi	v0.4s, #0x0
 140:	mov	x2, x25
 144:	nop
 148:	ldp	x0, x1, [x2]
 14c:	stp	x0, x1, [x19]
 150:	add	x2, x2, #0x30
 154:	ldur	x0, [x2, #-32]
 158:	ldur	x1, [x2, #-16]
 15c:	str	x0, [x19, #16]
 160:	ldur	x0, [x2, #-24]
 164:	str	x0, [x19, #24]
 168:	stur	xzr, [x2, #-24]
 16c:	stur	q0, [x2, #-40]
 170:	ldur	x0, [x2, #-8]
 174:	stp	x1, x0, [x19, #32]
 178:	cmp	x3, x2
 17c:	add	x19, x19, #0x30
 180:	b.ne	148 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x148>  // b.any
 184:	cmp	x4, x24
 188:	b.cc	394 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x394>  // b.lo, b.ul, b.last
 18c:	ldr	x20, [x22]
 190:	str	w23, [x21, #8]
 194:	mov	w0, #0x30                  	// #48
 198:	ldr	w19, [x22, #8]
 19c:	umaddl	x19, w19, w0, x20
 1a0:	cmp	x20, x19
 1a4:	b.eq	1c0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1c0>  // b.none
 1a8:	ldur	x0, [x19, #-40]
 1ac:	sub	x19, x19, #0x30
 1b0:	cbz	x0, 1a0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1a0>
 1b4:	bl	0 <_ZdlPv>
 1b8:	cmp	x20, x19
 1bc:	b.ne	1a8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1a8>  // b.any
 1c0:	ldp	x19, x20, [sp, #16]
 1c4:	mov	x0, x21
 1c8:	ldp	x23, x24, [sp, #48]
 1cc:	ldp	x25, x26, [sp, #64]
 1d0:	str	wzr, [x22, #8]
 1d4:	ldp	x21, x22, [sp, #32]
 1d8:	ldp	x29, x30, [sp], #80
 1dc:	ret
 1e0:	cmp	x20, x19
 1e4:	b.ne	58 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x58>  // b.any
 1e8:	b	70 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x70>
 1ec:	cbz	x24, 350 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x350>
 1f0:	movi	v2.4s, #0x0
 1f4:	mov	w26, #0x30                  	// #48
 1f8:	umaddl	x26, w23, w26, x19
 1fc:	nop
 200:	ldp	q1, q0, [x25]
 204:	ldr	x0, [x19, #8]
 208:	stp	q1, q0, [x19]
 20c:	str	xzr, [x25, #24]
 210:	stur	q2, [x25, #8]
 214:	cbz	x0, 2bc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2bc>
 218:	bl	0 <_ZdlPv>
 21c:	add	x19, x19, #0x30
 220:	ldr	x0, [x25, #32]
 224:	stur	x0, [x19, #-16]
 228:	ldr	x0, [x25, #40]
 22c:	stur	x0, [x19, #-8]
 230:	movi	v2.4s, #0x0
 234:	add	x25, x25, #0x30
 238:	cmp	x19, x26
 23c:	b.ne	200 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x200>  // b.any
 240:	ldr	w20, [x21, #8]
 244:	mov	w1, #0x30                  	// #48
 248:	ldr	x0, [x21]
 24c:	mov	x19, x26
 250:	umaddl	x20, w20, w1, x0
 254:	nop
 258:	cmp	x20, x19
 25c:	b.eq	278 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x278>  // b.none
 260:	ldur	x0, [x20, #-40]
 264:	sub	x20, x20, #0x30
 268:	cbz	x0, 258 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x258>
 26c:	bl	0 <_ZdlPv>
 270:	cmp	x20, x19
 274:	b.ne	260 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x260>  // b.any
 278:	ldr	w0, [x21, #12]
 27c:	cmp	x24, x0
 280:	b.hi	394 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x394>  // b.pmore
 284:	ldr	x25, [x22]
 288:	str	w23, [x21, #8]
 28c:	mov	w0, #0x30                  	// #48
 290:	ldr	w19, [x22, #8]
 294:	umaddl	x19, w19, w0, x25
 298:	cmp	x19, x25
 29c:	b.eq	1c0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1c0>  // b.none
 2a0:	ldur	x0, [x19, #-40]
 2a4:	sub	x19, x19, #0x30
 2a8:	cbz	x0, 298 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x298>
 2ac:	bl	0 <_ZdlPv>
 2b0:	cmp	x19, x25
 2b4:	b.ne	2a0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2a0>  // b.any
 2b8:	b	1c0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1c0>
 2bc:	ldr	x0, [x25, #32]
 2c0:	str	x0, [x19, #32]
 2c4:	ldr	x0, [x25, #40]
 2c8:	str	x0, [x19, #40]
 2cc:	add	x19, x19, #0x30
 2d0:	add	x25, x25, #0x30
 2d4:	cmp	x19, x26
 2d8:	b.ne	200 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x200>  // b.any
 2dc:	b	240 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x240>
 2e0:	cbz	x0, 364 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x364>
 2e4:	movi	v2.4s, #0x0
 2e8:	mov	w0, #0x30                  	// #48
 2ec:	umull	x20, w20, w0
 2f0:	add	x26, x19, x20
 2f4:	nop
 2f8:	ldp	q1, q0, [x25]
 2fc:	ldr	x0, [x19, #8]
 300:	stp	q1, q0, [x19]
 304:	str	xzr, [x25, #24]
 308:	stur	q2, [x25, #8]
 30c:	cbz	x0, 370 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x370>
 310:	bl	0 <_ZdlPv>
 314:	add	x19, x19, #0x30
 318:	ldr	x0, [x25, #32]
 31c:	stur	x0, [x19, #-16]
 320:	ldr	x0, [x25, #40]
 324:	stur	x0, [x19, #-8]
 328:	movi	v2.4s, #0x0
 32c:	add	x25, x25, #0x30
 330:	cmp	x19, x26
 334:	b.ne	2f8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2f8>  // b.any
 338:	ldr	x0, [x22]
 33c:	ldr	w4, [x21, #12]
 340:	ldr	w3, [x22, #8]
 344:	add	x25, x0, x20
 348:	ldr	x19, [x21]
 34c:	b	128 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x128>
 350:	mov	w0, #0x30                  	// #48
 354:	umaddl	x20, w20, w0, x19
 358:	cmp	x19, x20
 35c:	b.ne	260 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x260>  // b.any
 360:	b	288 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x288>
 364:	mov	w3, #0x30                  	// #48
 368:	umaddl	x3, w23, w3, x25
 36c:	b	13c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x13c>
 370:	ldr	x0, [x25, #32]
 374:	str	x0, [x19, #32]
 378:	ldr	x0, [x25, #40]
 37c:	str	x0, [x19, #40]
 380:	add	x19, x19, #0x30
 384:	add	x25, x25, #0x30
 388:	cmp	x26, x19
 38c:	b.ne	2f8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2f8>  // b.any
 390:	b	338 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x338>
 394:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 398:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 39c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 3a0:	add	x3, x3, #0x0
 3a4:	add	x1, x1, #0x0
 3a8:	add	x0, x0, #0x0
 3ac:	mov	w2, #0x43                  	// #67
 3b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x25, x26, [sp, #64]
  10:	stp	x27, x28, [sp, #80]
  14:	ldp	x25, x27, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x22, x1
  24:	stp	x23, x24, [sp, #48]
  28:	sub	x1, x27, x25
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	218 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x218>  // b.none
  34:	mov	x24, x0
  38:	mov	x20, x2
  3c:	asr	x0, x1, #4
  40:	sub	x21, x22, x25
  44:	cbz	x0, 200 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x200>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x26, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	1ec <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1ec>  // b.plast
  58:	mov	x0, x26
  5c:	bl	0 <_Znwm>
  60:	mov	x23, x0
  64:	add	x0, x0, x26
  68:	add	x19, x23, #0x10
  6c:	str	x0, [sp, #104]
  70:	add	x0, x23, x21
  74:	cmp	x22, x25
  78:	ldr	x1, [x20]
  7c:	str	x1, [x23, x21]
  80:	ldr	x1, [x20, #8]
  84:	stp	xzr, xzr, [x20]
  88:	str	x1, [x0, #8]
  8c:	b.eq	178 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x178>  // b.none
  90:	mov	x21, x23
  94:	mov	x19, x25
  98:	ldr	x0, [x19]
  9c:	str	xzr, [x19]
  a0:	str	x0, [x21]
  a4:	ldr	x0, [x19, #8]
  a8:	str	xzr, [x19, #8]
  ac:	str	x0, [x21, #8]
  b0:	ldr	x28, [x19, #8]
  b4:	cbz	x28, f8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf8>
  b8:	ldp	x20, x26, [x28, #24]
  bc:	cmp	x20, x26
  c0:	b.eq	e0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe0>  // b.none
  c4:	nop
  c8:	mov	x0, x20
  cc:	add	x20, x20, #0x10
  d0:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  d4:	cmp	x26, x20
  d8:	b.ne	c8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc8>  // b.any
  dc:	ldr	x26, [x28, #24]
  e0:	cbz	x26, ec <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>
  e4:	mov	x0, x26
  e8:	bl	0 <_ZdlPv>
  ec:	mov	x0, x28
  f0:	mov	x1, #0x30                  	// #48
  f4:	bl	0 <_ZdlPvm>
  f8:	ldr	x20, [x19]
  fc:	cbz	x20, 15c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x15c>
 100:	ldr	x0, [x20, #88]
 104:	add	x1, x20, #0x68
 108:	add	x26, x20, #0x58
 10c:	cmp	x0, x1
 110:	b.eq	118 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x118>  // b.none
 114:	bl	0 <free>
 118:	ldr	x0, [x20, #72]
 11c:	add	x28, x20, #0x48
 120:	cmp	x26, x0
 124:	b.eq	12c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	ldr	x0, [x20, #56]
 130:	cmp	x28, x0
 134:	b.eq	13c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x13c>  // b.none
 138:	bl	0 <free>
 13c:	ldr	x0, [x20, #8]
 140:	add	x1, x20, #0x18
 144:	cmp	x0, x1
 148:	b.eq	150 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x150>  // b.none
 14c:	bl	0 <free>
 150:	mov	x0, x20
 154:	mov	x1, #0x80                  	// #128
 158:	bl	0 <_ZdlPvm>
 15c:	add	x19, x19, #0x10
 160:	add	x21, x21, #0x10
 164:	cmp	x22, x19
 168:	b.ne	98 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x98>  // b.any
 16c:	sub	x19, x22, x25
 170:	add	x19, x19, #0x10
 174:	add	x19, x23, x19
 178:	cmp	x22, x27
 17c:	b.eq	1b8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1b8>  // b.none
 180:	sub	x27, x27, x22
 184:	mov	x2, #0x0                   	// #0
 188:	sub	x27, x27, #0x10
 18c:	mov	x0, #0x0                   	// #0
 190:	lsr	x1, x27, #4
 194:	add	x1, x1, #0x1
 198:	ldr	q0, [x22, x2]
 19c:	add	x0, x0, #0x1
 1a0:	cmp	x0, x1
 1a4:	str	q0, [x19, x2]
 1a8:	add	x2, x2, #0x10
 1ac:	b.cc	198 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x198>  // b.lo, b.ul, b.last
 1b0:	add	x27, x27, #0x10
 1b4:	add	x19, x19, x27
 1b8:	cbz	x25, 1c4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1c4>
 1bc:	mov	x0, x25
 1c0:	bl	0 <_ZdlPv>
 1c4:	ldr	x0, [sp, #104]
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	ldp	x25, x26, [sp, #64]
 1d0:	ldp	x27, x28, [sp, #80]
 1d4:	stp	x23, x19, [x24]
 1d8:	str	x0, [x24, #16]
 1dc:	ldp	x19, x20, [sp, #16]
 1e0:	ldp	x23, x24, [sp, #48]
 1e4:	ldp	x29, x30, [sp], #112
 1e8:	ret
 1ec:	cbnz	x0, 208 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x208>
 1f0:	mov	x19, #0x10                  	// #16
 1f4:	mov	x23, #0x0                   	// #0
 1f8:	str	xzr, [sp, #104]
 1fc:	b	70 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x70>
 200:	mov	x26, #0x10                  	// #16
 204:	b	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 208:	cmp	x0, x3
 20c:	csel	x0, x0, x3, ls  // ls = plast
 210:	lsl	x26, x0, #4
 214:	b	58 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x58>
 218:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 21c:	add	x0, x0, #0x0
 220:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	ldp	x24, x21, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x21, x24
  2c:	cmp	x3, x1, asr #3
  30:	b.eq	10c <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x10c>  // b.none
  34:	mov	x19, x0
  38:	mov	x22, x2
  3c:	asr	x0, x1, #3
  40:	sub	x26, x23, x24
  44:	cbz	x0, 104 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x104>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  50:	lsl	x0, x0, #1
  54:	b.ls	dc <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xdc>  // b.plast
  58:	mov	x0, x25
  5c:	bl	0 <_Znwm>
  60:	mov	x20, x0
  64:	add	x25, x0, x25
  68:	ldr	x0, [x22]
  6c:	add	x22, x26, #0x8
  70:	str	x0, [x20, x26]
  74:	sub	x21, x21, x23
  78:	add	x22, x20, x22
  7c:	cmp	x26, #0x0
  80:	add	x27, x22, x21
  84:	b.gt	b8 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>
  88:	cmp	x21, #0x0
  8c:	b.gt	ec <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  90:	cbnz	x24, d0 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
  94:	ldp	x21, x22, [sp, #32]
  98:	ldp	x23, x24, [sp, #48]
  9c:	stp	x20, x27, [x19]
  a0:	str	x25, [x19, #16]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x25, x26, [sp, #64]
  ac:	ldr	x27, [sp, #80]
  b0:	ldp	x29, x30, [sp], #96
  b4:	ret
  b8:	mov	x2, x26
  bc:	mov	x1, x24
  c0:	mov	x0, x20
  c4:	bl	0 <memmove>
  c8:	cmp	x21, #0x0
  cc:	b.gt	ec <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>
  d0:	mov	x0, x24
  d4:	bl	0 <_ZdlPv>
  d8:	b	94 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
  dc:	cbnz	x0, 118 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>
  e0:	mov	x25, #0x0                   	// #0
  e4:	mov	x20, #0x0                   	// #0
  e8:	b	68 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>
  ec:	mov	x2, x21
  f0:	mov	x1, x23
  f4:	mov	x0, x22
  f8:	bl	0 <memcpy>
  fc:	cbz	x24, 94 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>
 100:	b	d0 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>
 104:	mov	x25, #0x8                   	// #8
 108:	b	58 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 10c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	cmp	x0, x3
 11c:	csel	x0, x0, x3, ls  // ls = plast
 120:	lsl	x25, x0, #3
 124:	b	58 <_ZNSt6vectorIPN4llvm4InitESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x3, #0xfffffffffffffff     	// #1152921504606846975
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	mov	x24, x1
  14:	stp	x27, x28, [sp, #80]
  18:	mov	x27, x1
  1c:	str	x0, [sp, #136]
  20:	ldr	x1, [x0]
  24:	str	x1, [sp, #104]
  28:	ldr	x0, [x0, #8]
  2c:	stp	x19, x20, [sp, #16]
  30:	sub	x1, x0, x1
  34:	stp	x21, x22, [sp, #32]
  38:	str	x0, [sp, #128]
  3c:	cmp	x3, x1, asr #3
  40:	b.eq	264 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x264>  // b.none
  44:	asr	x0, x1, #3
  48:	mov	x20, x2
  4c:	ldr	x1, [sp, #104]
  50:	sub	x21, x24, x1
  54:	cbz	x0, 244 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x244>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x19, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	234 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x234>  // b.plast
  68:	mov	x0, x19
  6c:	bl	0 <_Znwm>
  70:	add	x1, x0, x19
  74:	add	x19, x0, #0x8
  78:	stp	x0, x1, [sp, #112]
  7c:	ldr	x23, [sp, #112]
  80:	ldr	x0, [x20]
  84:	str	xzr, [x20]
  88:	ldr	x20, [sp, #104]
  8c:	str	x0, [x23, x21]
  90:	cmp	x24, x20
  94:	b.eq	190 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x190>  // b.none
  98:	ldr	x0, [x20]
  9c:	str	xzr, [x20]
  a0:	str	x0, [x23]
  a4:	ldr	x21, [x20]
  a8:	cbz	x21, 16c <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x16c>
  ac:	ldp	x19, x22, [x21, #24]
  b0:	cmp	x19, x22
  b4:	b.eq	154 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x154>  // b.none
  b8:	stp	x25, x26, [sp, #64]
  bc:	nop
  c0:	ldr	x25, [x19, #8]
  c4:	cbz	x25, dc <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>
  c8:	add	x0, x25, #0x18
  cc:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  d0:	mov	x0, x25
  d4:	mov	x1, #0x30                  	// #48
  d8:	bl	0 <_ZdlPvm>
  dc:	ldr	x25, [x19]
  e0:	cbz	x25, 140 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x140>
  e4:	ldr	x0, [x25, #88]
  e8:	add	x2, x25, #0x68
  ec:	add	x28, x25, #0x58
  f0:	cmp	x0, x2
  f4:	b.eq	fc <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	ldr	x0, [x25, #72]
 100:	add	x26, x25, #0x48
 104:	cmp	x28, x0
 108:	b.eq	110 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x110>  // b.none
 10c:	bl	0 <free>
 110:	ldr	x0, [x25, #56]
 114:	cmp	x26, x0
 118:	b.eq	120 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x120>  // b.none
 11c:	bl	0 <free>
 120:	ldr	x0, [x25, #8]
 124:	add	x2, x25, #0x18
 128:	cmp	x0, x2
 12c:	b.eq	134 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x134>  // b.none
 130:	bl	0 <free>
 134:	mov	x0, x25
 138:	mov	x1, #0x80                  	// #128
 13c:	bl	0 <_ZdlPvm>
 140:	add	x19, x19, #0x10
 144:	cmp	x22, x19
 148:	b.ne	c0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc0>  // b.any
 14c:	ldp	x25, x26, [sp, #64]
 150:	ldr	x22, [x21, #24]
 154:	cbz	x22, 160 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x160>
 158:	mov	x0, x22
 15c:	bl	0 <_ZdlPv>
 160:	mov	x0, x21
 164:	mov	x1, #0x30                  	// #48
 168:	bl	0 <_ZdlPvm>
 16c:	add	x20, x20, #0x8
 170:	add	x23, x23, #0x8
 174:	cmp	x24, x20
 178:	b.ne	98 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x98>  // b.any
 17c:	ldr	x0, [sp, #104]
 180:	sub	x19, x24, x0
 184:	ldr	x0, [sp, #112]
 188:	add	x19, x19, #0x8
 18c:	add	x19, x0, x19
 190:	ldr	x0, [sp, #128]
 194:	cmp	x24, x0
 198:	b.eq	1fc <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1fc>  // b.none
 19c:	sub	x2, x0, x24
 1a0:	sub	x2, x2, #0x8
 1a4:	lsr	x3, x2, #3
 1a8:	add	x3, x3, #0x1
 1ac:	cbz	x2, 24c <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x24c>
 1b0:	lsr	x1, x3, #1
 1b4:	mov	x0, #0x0                   	// #0
 1b8:	lsl	x1, x1, #4
 1bc:	nop
 1c0:	ldr	q0, [x24, x0]
 1c4:	str	q0, [x19, x0]
 1c8:	add	x0, x0, #0x10
 1cc:	cmp	x1, x0
 1d0:	b.ne	1c0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c0>  // b.any
 1d4:	and	x0, x3, #0xfffffffffffffffe
 1d8:	cmp	x3, x0
 1dc:	lsl	x0, x0, #3
 1e0:	add	x27, x24, x0
 1e4:	add	x0, x19, x0
 1e8:	b.eq	1f4 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1f4>  // b.none
 1ec:	ldr	x1, [x27]
 1f0:	str	x1, [x0]
 1f4:	add	x2, x2, #0x8
 1f8:	add	x19, x19, x2
 1fc:	ldr	x0, [sp, #104]
 200:	cbz	x0, 208 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x208>
 204:	bl	0 <_ZdlPv>
 208:	ldr	x0, [sp, #136]
 20c:	ldr	x1, [sp, #112]
 210:	ldp	x21, x22, [sp, #32]
 214:	ldp	x23, x24, [sp, #48]
 218:	ldp	x27, x28, [sp, #80]
 21c:	stp	x1, x19, [x0]
 220:	ldr	x1, [sp, #120]
 224:	ldp	x19, x20, [sp, #16]
 228:	str	x1, [x0, #16]
 22c:	ldp	x29, x30, [sp], #144
 230:	ret
 234:	cbnz	x0, 254 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x254>
 238:	mov	x19, #0x8                   	// #8
 23c:	stp	xzr, xzr, [sp, #112]
 240:	b	7c <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>
 244:	mov	x19, #0x8                   	// #8
 248:	b	68 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x68>
 24c:	mov	x0, x19
 250:	b	1ec <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1ec>
 254:	cmp	x0, x3
 258:	csel	x0, x0, x3, ls  // ls = plast
 25c:	lsl	x19, x0, #3
 260:	b	68 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x68>
 264:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 268:	add	x0, x0, #0x0
 26c:	stp	x25, x26, [sp, #64]
 270:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x23, x1
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x25, x0
  24:	stp	x27, x28, [sp, #80]
  28:	cbz	x19, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xfc>
  2c:	ldp	x28, x21, [x1]
  30:	mov	x22, #0x7fffffff            	// #2147483647
  34:	mov	x24, #0xffffffff80000000    	// #-2147483648
  38:	ldp	x27, x20, [x19, #32]
  3c:	mov	x0, x28
  40:	cmp	x21, x20
  44:	csel	x26, x21, x20, ls  // ls = plast
  48:	cbz	x26, 5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x5c>
  4c:	mov	x2, x26
  50:	mov	x1, x27
  54:	bl	0 <memcmp>
  58:	cbnz	w0, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x74>
  5c:	sub	x1, x21, x20
  60:	mov	w0, w1
  64:	cmp	x1, x22
  68:	b.gt	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x8c>
  6c:	cmp	x1, x24
  70:	b.lt	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x78>  // b.tstop
  74:	tbz	w0, #31, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x8c>
  78:	ldr	x3, [x19, #16]
  7c:	mov	w0, #0x1                   	// #1
  80:	cbz	x3, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x98>
  84:	mov	x19, x3
  88:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  8c:	ldr	x3, [x19, #24]
  90:	mov	w0, #0x0                   	// #0
  94:	cbnz	x3, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x84>
  98:	mov	x22, x19
  9c:	cbnz	w0, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x100>
  a0:	cbz	x26, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xb8>
  a4:	mov	x2, x26
  a8:	mov	x1, x28
  ac:	mov	x0, x27
  b0:	bl	0 <memcmp>
  b4:	cbnz	w0, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xd4>
  b8:	sub	x0, x20, x21
  bc:	mov	x1, #0x7fffffff            	// #2147483647
  c0:	cmp	x0, x1
  c4:	b.gt	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xd8>
  c8:	mov	x1, #0xffffffff80000000    	// #-2147483648
  cc:	cmp	x0, x1
  d0:	b.lt	130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x130>  // b.tstop
  d4:	tbnz	w0, #31, 130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x130>
  d8:	mov	x0, x19
  dc:	mov	x1, #0x0                   	// #0
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x25, x26, [sp, #64]
  f0:	ldp	x27, x28, [sp, #80]
  f4:	ldp	x29, x30, [sp], #96
  f8:	ret
  fc:	add	x19, x0, #0x8
 100:	ldr	x0, [x25, #24]
 104:	cmp	x19, x0
 108:	b.eq	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x154>  // b.none
 10c:	mov	x0, x19
 110:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 114:	ldp	x28, x21, [x23]
 118:	mov	x22, x19
 11c:	ldp	x27, x20, [x0, #32]
 120:	mov	x19, x0
 124:	cmp	x20, x21
 128:	csel	x26, x20, x21, ls  // ls = plast
 12c:	b	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xa0>
 130:	mov	x1, x22
 134:	mov	x0, #0x0                   	// #0
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x23, x24, [sp, #48]
 144:	ldp	x25, x26, [sp, #64]
 148:	ldp	x27, x28, [sp, #80]
 14c:	ldp	x29, x30, [sp], #96
 150:	ret
 154:	mov	x1, x19
 158:	mov	x0, #0x0                   	// #0
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x27, x28, [sp, #80]
 170:	ldp	x29, x30, [sp], #96
 174:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	add	x3, x0, #0x8
   8:	cmp	x1, x3
   c:	mov	x29, sp
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x0
  18:	mov	x24, x2
  1c:	b.eq	140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x140>  // b.none
  20:	stp	x19, x20, [sp, #16]
  24:	mov	x19, x1
  28:	stp	x21, x22, [sp, #32]
  2c:	stp	x25, x26, [sp, #64]
  30:	ldp	x25, x20, [x2]
  34:	ldp	x26, x21, [x1, #32]
  38:	cmp	x20, x21
  3c:	csel	x22, x20, x21, ls  // ls = plast
  40:	cbz	x22, d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xd8>
  44:	mov	x2, x22
  48:	mov	x1, x26
  4c:	mov	x0, x25
  50:	bl	0 <memcmp>
  54:	cmp	w0, #0x0
  58:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xec>
  5c:	sub	x0, x20, x21
  60:	mov	x1, #0x7fffffff            	// #2147483647
  64:	cmp	x0, x1
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x80>
  6c:	mov	x1, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x0, x1
  74:	b.lt	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xf0>  // b.tstop
  78:	tbnz	w0, #31, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xf0>
  7c:	cbz	x22, 98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x98>
  80:	mov	x1, x25
  84:	mov	x2, x22
  88:	mov	x0, x26
  8c:	bl	0 <memcmp>
  90:	mov	w1, w0
  94:	cbnz	w0, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xb4>
  98:	sub	x1, x21, x20
  9c:	mov	x0, #0x7fffffff            	// #2147483647
  a0:	cmp	x1, x0
  a4:	b.gt	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xb8>
  a8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  ac:	cmp	x1, x0
  b0:	b.lt	178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x178>  // b.tstop
  b4:	tbnz	w1, #31, 178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x178>
  b8:	ldp	x21, x22, [sp, #32]
  bc:	mov	x0, x19
  c0:	ldp	x25, x26, [sp, #64]
  c4:	mov	x1, #0x0                   	// #0
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	sub	x0, x20, x21
  dc:	mov	x1, #0x7fffffff            	// #2147483647
  e0:	cmp	x0, x1
  e4:	b.le	6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x6c>
  e8:	b	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x98>
  ec:	b.ge	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x80>  // b.tcont
  f0:	ldr	x0, [x23, #24]
  f4:	cmp	x0, x19
  f8:	mov	x0, x19
  fc:	b.eq	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>  // b.none
 100:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 104:	mov	x20, x0
 108:	mov	x1, x24
 10c:	add	x0, x0, #0x20
 110:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 114:	tbz	w0, #31, 1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1bc>
 118:	ldr	x1, [x20, #24]
 11c:	ldp	x21, x22, [sp, #32]
 120:	cmp	x1, #0x0
 124:	csel	x0, x19, xzr, ne  // ne = any
 128:	csel	x1, x20, x19, eq  // eq = none
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x23, x24, [sp, #48]
 134:	ldp	x25, x26, [sp, #64]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
 140:	ldr	x0, [x0, #40]
 144:	cbz	x0, 164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x164>
 148:	stp	x19, x20, [sp, #16]
 14c:	mov	x1, x2
 150:	ldr	x19, [x23, #32]
 154:	add	x0, x19, #0x20
 158:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 15c:	tbnz	w0, #31, 1dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1dc>
 160:	ldp	x19, x20, [sp, #16]
 164:	mov	x1, x24
 168:	mov	x0, x23
 16c:	ldp	x23, x24, [sp, #48]
 170:	ldp	x29, x30, [sp], #80
 174:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>
 178:	ldr	x0, [x23, #32]
 17c:	cmp	x0, x19
 180:	b.eq	1f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1f8>  // b.none
 184:	mov	x0, x19
 188:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 18c:	mov	x20, x0
 190:	mov	x0, x24
 194:	add	x1, x20, #0x20
 198:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 19c:	tbz	w0, #31, 1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1bc>
 1a0:	ldr	x1, [x19, #24]
 1a4:	ldp	x21, x22, [sp, #32]
 1a8:	cmp	x1, #0x0
 1ac:	csel	x0, x20, xzr, ne  // ne = any
 1b0:	csel	x1, x20, x19, ne  // ne = any
 1b4:	ldp	x25, x26, [sp, #64]
 1b8:	b	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xc8>
 1bc:	mov	x1, x24
 1c0:	mov	x0, x23
 1c4:	ldp	x19, x20, [sp, #16]
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	ldp	x23, x24, [sp, #48]
 1d0:	ldp	x25, x26, [sp, #64]
 1d4:	ldp	x29, x30, [sp], #80
 1d8:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>
 1dc:	mov	x1, x19
 1e0:	mov	x0, #0x0                   	// #0
 1e4:	b	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xc8>
 1e8:	mov	x1, x19
 1ec:	ldp	x21, x22, [sp, #32]
 1f0:	ldp	x25, x26, [sp, #64]
 1f4:	b	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xc8>
 1f8:	mov	x1, x19
 1fc:	mov	x0, #0x0                   	// #0
 200:	ldp	x21, x22, [sp, #32]
 204:	ldp	x25, x26, [sp, #64]
 208:	b	c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xc8>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x3
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x0, #0x48                  	// #72
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x23, x1
  24:	stp	x25, x26, [sp, #64]
  28:	bl	0 <_Znwm>
  2c:	mov	x19, x0
  30:	add	x24, x0, #0x30
  34:	ldr	x0, [x20]
  38:	ldr	x20, [x0, #8]
  3c:	str	x24, [x19, #32]
  40:	ldr	x25, [x0]
  44:	cmn	x25, x20
  48:	cset	w22, ne  // ne = any
  4c:	cmp	x25, #0x0
  50:	csel	w22, w22, wzr, eq  // eq = none
  54:	cbnz	w22, 2fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x2fc>
  58:	str	x20, [sp, #120]
  5c:	add	x26, x19, #0x20
  60:	cmp	x20, #0xf
  64:	b.hi	14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x14c>  // b.pmore
  68:	cmp	x20, #0x1
  6c:	b.ne	e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xe8>  // b.any
  70:	ldrb	w1, [x25]
  74:	mov	x0, x24
  78:	strb	w1, [x19, #48]
  7c:	str	x20, [x19, #40]
  80:	mov	x1, x23
  84:	strb	wzr, [x0, x20]
  88:	mov	x2, x26
  8c:	mov	x0, x21
  90:	str	xzr, [x19, #64]
  94:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  98:	mov	x20, x1
  9c:	mov	x23, x0
  a0:	cbz	x1, 180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x180>
  a4:	add	x3, x21, #0x8
  a8:	cbz	x0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xf4>
  ac:	mov	w22, #0x1                   	// #1
  b0:	mov	x2, x20
  b4:	mov	w0, w22
  b8:	mov	x1, x19
  bc:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  c0:	ldr	x1, [x21, #40]
  c4:	mov	x0, x19
  c8:	ldp	x19, x20, [sp, #16]
  cc:	add	x1, x1, #0x1
  d0:	str	x1, [x21, #40]
  d4:	ldp	x21, x22, [sp, #32]
  d8:	ldp	x23, x24, [sp, #48]
  dc:	ldp	x25, x26, [sp, #64]
  e0:	ldp	x29, x30, [sp], #128
  e4:	ret
  e8:	mov	x0, x24
  ec:	cbz	x20, 7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x7c>
  f0:	b	168 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x168>
  f4:	cmp	x1, x3
  f8:	b.eq	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xac>  // b.none
  fc:	ldr	x24, [x19, #40]
 100:	ldr	x23, [x1, #40]
 104:	cmp	x24, x23
 108:	csel	x2, x24, x23, ls  // ls = plast
 10c:	cbz	x2, 128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x128>
 110:	ldr	x0, [x19, #32]
 114:	str	x3, [sp, #104]
 118:	ldr	x1, [x1, #32]
 11c:	bl	0 <memcmp>
 120:	ldr	x3, [sp, #104]
 124:	cbnz	w0, 144 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x144>
 128:	sub	x0, x24, x23
 12c:	mov	x1, #0x7fffffff            	// #2147483647
 130:	cmp	x0, x1
 134:	b.gt	b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xb0>
 138:	mov	x1, #0xffffffff80000000    	// #-2147483648
 13c:	cmp	x0, x1
 140:	b.lt	ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xac>  // b.tstop
 144:	lsr	w22, w0, #31
 148:	b	b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xb0>
 14c:	add	x1, sp, #0x78
 150:	mov	x0, x26
 154:	mov	x2, #0x0                   	// #0
 158:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 15c:	ldr	x1, [sp, #120]
 160:	str	x0, [x19, #32]
 164:	str	x1, [x19, #48]
 168:	mov	x2, x20
 16c:	mov	x1, x25
 170:	bl	0 <memcpy>
 174:	ldr	x0, [x19, #32]
 178:	ldr	x20, [sp, #120]
 17c:	b	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x7c>
 180:	ldr	x26, [x19, #64]
 184:	cbz	x26, 2c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x2c8>
 188:	ldr	x21, [x26, #128]
 18c:	str	x27, [sp, #80]
 190:	ldr	x27, [x26, #136]
 194:	cmp	x21, x27
 198:	b.eq	25c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x25c>  // b.none
 19c:	nop
 1a0:	ldr	x22, [x21, #8]
 1a4:	cbz	x22, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1e8>
 1a8:	ldp	x20, x25, [x22, #24]
 1ac:	cmp	x20, x25
 1b0:	b.eq	1d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1d0>  // b.none
 1b4:	nop
 1b8:	mov	x0, x20
 1bc:	add	x20, x20, #0x10
 1c0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
 1c4:	cmp	x25, x20
 1c8:	b.ne	1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1b8>  // b.any
 1cc:	ldr	x25, [x22, #24]
 1d0:	cbz	x25, 1dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1dc>
 1d4:	mov	x0, x25
 1d8:	bl	0 <_ZdlPv>
 1dc:	mov	x0, x22
 1e0:	mov	x1, #0x30                  	// #48
 1e4:	bl	0 <_ZdlPvm>
 1e8:	ldr	x20, [x21]
 1ec:	cbz	x20, 24c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x24c>
 1f0:	ldr	x0, [x20, #88]
 1f4:	add	x1, x20, #0x68
 1f8:	add	x25, x20, #0x58
 1fc:	cmp	x0, x1
 200:	b.eq	208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x208>  // b.none
 204:	bl	0 <free>
 208:	ldr	x0, [x20, #72]
 20c:	add	x22, x20, #0x48
 210:	cmp	x25, x0
 214:	b.eq	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x21c>  // b.none
 218:	bl	0 <free>
 21c:	ldr	x0, [x20, #56]
 220:	cmp	x22, x0
 224:	b.eq	22c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x22c>  // b.none
 228:	bl	0 <free>
 22c:	ldr	x0, [x20, #8]
 230:	add	x1, x20, #0x18
 234:	cmp	x0, x1
 238:	b.eq	240 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x240>  // b.none
 23c:	bl	0 <free>
 240:	mov	x0, x20
 244:	mov	x1, #0x80                  	// #128
 248:	bl	0 <_ZdlPvm>
 24c:	add	x21, x21, #0x10
 250:	cmp	x27, x21
 254:	b.ne	1a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x1a0>  // b.any
 258:	ldr	x27, [x26, #128]
 25c:	cbz	x27, 268 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x268>
 260:	mov	x0, x27
 264:	bl	0 <_ZdlPv>
 268:	ldr	x0, [x26, #88]
 26c:	add	x1, x26, #0x68
 270:	add	x21, x26, #0x58
 274:	cmp	x0, x1
 278:	b.eq	280 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x280>  // b.none
 27c:	bl	0 <free>
 280:	ldr	x0, [x26, #72]
 284:	add	x20, x26, #0x48
 288:	cmp	x21, x0
 28c:	b.eq	294 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x294>  // b.none
 290:	bl	0 <free>
 294:	ldr	x0, [x26, #56]
 298:	cmp	x20, x0
 29c:	b.eq	2a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x2a4>  // b.none
 2a0:	bl	0 <free>
 2a4:	ldr	x0, [x26, #8]
 2a8:	add	x1, x26, #0x18
 2ac:	cmp	x0, x1
 2b0:	b.eq	2b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x2b8>  // b.none
 2b4:	bl	0 <free>
 2b8:	mov	x0, x26
 2bc:	mov	x1, #0x98                  	// #152
 2c0:	bl	0 <_ZdlPvm>
 2c4:	ldr	x27, [sp, #80]
 2c8:	ldr	x0, [x19, #32]
 2cc:	cmp	x24, x0
 2d0:	b.eq	2d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x2d8>  // b.none
 2d4:	bl	0 <_ZdlPv>
 2d8:	mov	x0, x19
 2dc:	bl	0 <_ZdlPv>
 2e0:	mov	x0, x23
 2e4:	ldp	x19, x20, [sp, #16]
 2e8:	ldp	x21, x22, [sp, #32]
 2ec:	ldp	x23, x24, [sp, #48]
 2f0:	ldp	x25, x26, [sp, #64]
 2f4:	ldp	x29, x30, [sp], #128
 2f8:	ret
 2fc:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
 300:	add	x0, x0, #0x0
 304:	str	x27, [sp, #80]
 308:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x0, #0x48                  	// #72
  1c:	stp	x23, x24, [sp, #48]
  20:	bl	0 <_Znwm>
  24:	mov	x1, x20
  28:	mov	x19, x0
  2c:	add	x22, x0, #0x30
  30:	ldr	x0, [x1], #16
  34:	str	x22, [x19, #32]
  38:	cmp	x0, x1
  3c:	b.eq	2a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2a8>  // b.none
  40:	ldr	x2, [x20, #16]
  44:	str	x0, [x19, #32]
  48:	str	x2, [x19, #48]
  4c:	ldr	x3, [x20, #8]
  50:	stp	x1, xzr, [x20]
  54:	mov	x0, x21
  58:	ldr	x2, [x20, #32]
  5c:	strb	wzr, [x20, #16]
  60:	str	xzr, [x20, #32]
  64:	add	x1, x19, #0x20
  68:	str	x3, [x19, #40]
  6c:	str	x2, [x19, #64]
  70:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  74:	mov	x20, x1
  78:	mov	x24, x0
  7c:	cbz	x1, 128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x128>
  80:	add	x3, x21, #0x8
  84:	mov	w0, #0x1                   	// #1
  88:	cbz	x24, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xc8>
  8c:	mov	x2, x20
  90:	mov	x1, x19
  94:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  98:	ldr	x2, [x21, #40]
  9c:	mov	x3, #0x1                   	// #1
  a0:	mov	x1, #0x0                   	// #0
  a4:	mov	x0, x19
  a8:	add	x2, x2, x3
  ac:	str	x2, [x21, #40]
  b0:	bfxil	x1, x3, #0, #8
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x21, x22, [sp, #32]
  bc:	ldp	x23, x24, [sp, #48]
  c0:	ldp	x29, x30, [sp], #112
  c4:	ret
  c8:	cmp	x1, x3
  cc:	b.eq	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x8c>  // b.none
  d0:	ldr	x23, [x19, #40]
  d4:	ldr	x22, [x1, #40]
  d8:	cmp	x23, x22
  dc:	csel	x2, x23, x22, ls  // ls = plast
  e0:	cbz	x2, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xfc>
  e4:	ldr	x0, [x19, #32]
  e8:	str	x3, [sp, #104]
  ec:	ldr	x1, [x1, #32]
  f0:	bl	0 <memcmp>
  f4:	ldr	x3, [sp, #104]
  f8:	cbnz	w0, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x120>
  fc:	sub	x1, x23, x22
 100:	mov	x2, #0x7fffffff            	// #2147483647
 104:	mov	w0, #0x0                   	// #0
 108:	cmp	x1, x2
 10c:	b.gt	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x8c>
 110:	mov	x0, #0xffffffff80000000    	// #-2147483648
 114:	cmp	x1, x0
 118:	b.lt	2b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2b4>  // b.tstop
 11c:	mov	w0, w1
 120:	lsr	w0, w0, #31
 124:	b	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x8c>
 128:	stp	x25, x26, [sp, #64]
 12c:	ldr	x26, [x19, #64]
 130:	cbz	x26, 270 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x270>
 134:	ldr	x25, [x26, #128]
 138:	str	x27, [sp, #80]
 13c:	ldr	x27, [x26, #136]
 140:	cmp	x25, x27
 144:	b.eq	204 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x204>  // b.none
 148:	ldr	x21, [x25, #8]
 14c:	cbz	x21, 190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x190>
 150:	ldp	x20, x23, [x21, #24]
 154:	cmp	x20, x23
 158:	b.eq	178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x178>  // b.none
 15c:	nop
 160:	mov	x0, x20
 164:	add	x20, x20, #0x10
 168:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
 16c:	cmp	x23, x20
 170:	b.ne	160 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x160>  // b.any
 174:	ldr	x23, [x21, #24]
 178:	cbz	x23, 184 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x184>
 17c:	mov	x0, x23
 180:	bl	0 <_ZdlPv>
 184:	mov	x0, x21
 188:	mov	x1, #0x30                  	// #48
 18c:	bl	0 <_ZdlPvm>
 190:	ldr	x20, [x25]
 194:	cbz	x20, 1f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1f4>
 198:	ldr	x0, [x20, #88]
 19c:	add	x1, x20, #0x68
 1a0:	add	x23, x20, #0x58
 1a4:	cmp	x0, x1
 1a8:	b.eq	1b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1b0>  // b.none
 1ac:	bl	0 <free>
 1b0:	ldr	x0, [x20, #72]
 1b4:	add	x21, x20, #0x48
 1b8:	cmp	x23, x0
 1bc:	b.eq	1c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c4>  // b.none
 1c0:	bl	0 <free>
 1c4:	ldr	x0, [x20, #56]
 1c8:	cmp	x21, x0
 1cc:	b.eq	1d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1d4>  // b.none
 1d0:	bl	0 <free>
 1d4:	ldr	x0, [x20, #8]
 1d8:	add	x1, x20, #0x18
 1dc:	cmp	x0, x1
 1e0:	b.eq	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1e8>  // b.none
 1e4:	bl	0 <free>
 1e8:	mov	x0, x20
 1ec:	mov	x1, #0x80                  	// #128
 1f0:	bl	0 <_ZdlPvm>
 1f4:	add	x25, x25, #0x10
 1f8:	cmp	x27, x25
 1fc:	b.ne	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x148>  // b.any
 200:	ldr	x27, [x26, #128]
 204:	cbz	x27, 210 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x210>
 208:	mov	x0, x27
 20c:	bl	0 <_ZdlPv>
 210:	ldr	x0, [x26, #88]
 214:	add	x1, x26, #0x68
 218:	add	x21, x26, #0x58
 21c:	cmp	x0, x1
 220:	b.eq	228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x228>  // b.none
 224:	bl	0 <free>
 228:	ldr	x0, [x26, #72]
 22c:	add	x20, x26, #0x48
 230:	cmp	x21, x0
 234:	b.eq	23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x23c>  // b.none
 238:	bl	0 <free>
 23c:	ldr	x0, [x26, #56]
 240:	cmp	x20, x0
 244:	b.eq	24c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x24c>  // b.none
 248:	bl	0 <free>
 24c:	ldr	x0, [x26, #8]
 250:	add	x1, x26, #0x18
 254:	cmp	x0, x1
 258:	b.eq	260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x260>  // b.none
 25c:	bl	0 <free>
 260:	mov	x0, x26
 264:	mov	x1, #0x98                  	// #152
 268:	bl	0 <_ZdlPvm>
 26c:	ldr	x27, [sp, #80]
 270:	ldr	x0, [x19, #32]
 274:	cmp	x22, x0
 278:	b.eq	280 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x280>  // b.none
 27c:	bl	0 <_ZdlPv>
 280:	mov	x0, x19
 284:	bl	0 <_ZdlPv>
 288:	mov	x0, x24
 28c:	mov	x1, #0x0                   	// #0
 290:	ldp	x19, x20, [sp, #16]
 294:	ldp	x21, x22, [sp, #32]
 298:	ldp	x23, x24, [sp, #48]
 29c:	ldp	x25, x26, [sp, #64]
 2a0:	ldp	x29, x30, [sp], #112
 2a4:	ret
 2a8:	ldp	x2, x3, [x20, #16]
 2ac:	stp	x2, x3, [x19, #48]
 2b0:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x4c>
 2b4:	mov	w0, #0x1                   	// #1
 2b8:	b	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x8c>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm7VarInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x8
  10:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
  14:	mov	x2, x1
  18:	mov	x1, x0
  1c:	add	x0, x19, #0x10
  20:	str	x0, [x19]
  24:	cbz	x1, 48 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x48>
  28:	mov	x0, x19
  2c:	add	x2, x1, x2
  30:	mov	w3, #0x0                   	// #0
  34:	bl	0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret
  48:	str	xzr, [x19, #8]
  4c:	mov	x0, x19
  50:	strb	wzr, [x19, #16]
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x1
  10:	mov	x21, x0
  14:	mov	x0, #0x48                  	// #72
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	bl	0 <_Znwm>
  2c:	mov	x19, x0
  30:	ldr	x1, [x22]
  34:	cbz	x1, 23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x23c>
  38:	ldr	x2, [x22, #8]
  3c:	add	x25, x0, #0x30
  40:	mov	w3, #0x0                   	// #0
  44:	add	x0, x0, #0x20
  48:	add	x2, x1, x2
  4c:	str	x25, [x19, #32]
  50:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  54:	add	x24, x21, #0x8
  58:	ldr	x20, [x21, #16]
  5c:	ldr	x23, [x22, #16]
  60:	str	xzr, [x22, #16]
  64:	str	x23, [x19, #64]
  68:	cbz	x20, 260 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x260>
  6c:	ldp	x26, x28, [x19, #32]
  70:	mov	x22, #0xffffffff80000000    	// #-2147483648
  74:	nop
  78:	ldp	x1, x27, [x20, #32]
  7c:	mov	x0, x26
  80:	cmp	x28, x27
  84:	csel	x2, x28, x27, ls  // ls = plast
  88:	cbz	x2, 9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x9c>
  8c:	stp	x1, x2, [sp, #96]
  90:	bl	0 <memcmp>
  94:	ldp	x1, x2, [sp, #96]
  98:	cbnz	w0, b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xb8>
  9c:	sub	x3, x28, x27
  a0:	mov	x4, #0x7fffffff            	// #2147483647
  a4:	mov	w0, w3
  a8:	cmp	x3, x4
  ac:	b.gt	d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xd0>
  b0:	cmp	x3, x22
  b4:	b.lt	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xbc>  // b.tstop
  b8:	tbz	w0, #31, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xd0>
  bc:	ldr	x0, [x20, #16]
  c0:	mov	w3, #0x1                   	// #1
  c4:	cbz	x0, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xdc>
  c8:	mov	x20, x0
  cc:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x78>
  d0:	ldr	x0, [x20, #24]
  d4:	mov	w3, #0x0                   	// #0
  d8:	cbnz	x0, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xc8>
  dc:	mov	x22, x20
  e0:	cbnz	w3, 210 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x210>
  e4:	cbz	x2, f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xf8>
  e8:	mov	x0, x1
  ec:	mov	x1, x26
  f0:	bl	0 <memcmp>
  f4:	cbnz	w0, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x114>
  f8:	sub	x0, x27, x28
  fc:	mov	x1, #0x7fffffff            	// #2147483647
 100:	cmp	x0, x1
 104:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x118>
 108:	mov	x1, #0xffffffff80000000    	// #-2147483648
 10c:	cmp	x0, x1
 110:	b.lt	1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1b8>  // b.tstop
 114:	tbnz	w0, #31, 1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1b8>
 118:	cbz	x23, 17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x17c>
 11c:	ldr	x0, [x23, #88]
 120:	add	x1, x23, #0x68
 124:	add	x22, x23, #0x58
 128:	cmp	x0, x1
 12c:	b.eq	134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x134>  // b.none
 130:	bl	0 <free>
 134:	ldr	x0, [x23, #72]
 138:	add	x21, x23, #0x48
 13c:	cmp	x22, x0
 140:	b.eq	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x148>  // b.none
 144:	bl	0 <free>
 148:	ldr	x0, [x23, #56]
 14c:	cmp	x21, x0
 150:	b.eq	158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x158>  // b.none
 154:	bl	0 <free>
 158:	ldr	x0, [x23, #8]
 15c:	add	x1, x23, #0x18
 160:	cmp	x0, x1
 164:	b.eq	16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x16c>  // b.none
 168:	bl	0 <free>
 16c:	mov	x0, x23
 170:	mov	x1, #0x80                  	// #128
 174:	bl	0 <_ZdlPvm>
 178:	ldr	x26, [x19, #32]
 17c:	cmp	x26, x25
 180:	b.eq	18c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x18c>  // b.none
 184:	mov	x0, x26
 188:	bl	0 <_ZdlPv>
 18c:	mov	x0, x19
 190:	bl	0 <_ZdlPv>
 194:	mov	x0, x20
 198:	mov	x1, #0x0                   	// #0
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x23, x24, [sp, #48]
 1a8:	ldp	x25, x26, [sp, #64]
 1ac:	ldp	x27, x28, [sp, #80]
 1b0:	ldp	x29, x30, [sp], #112
 1b4:	ret
 1b8:	cbz	x22, 2d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2d8>
 1bc:	cmp	x24, x22
 1c0:	mov	w0, #0x1                   	// #1
 1c4:	b.ne	278 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x278>  // b.any
 1c8:	mov	x3, x24
 1cc:	mov	x2, x22
 1d0:	mov	x1, x19
 1d4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 1d8:	ldr	x2, [x21, #40]
 1dc:	mov	x3, #0x1                   	// #1
 1e0:	mov	x1, #0x0                   	// #0
 1e4:	mov	x0, x19
 1e8:	add	x2, x2, x3
 1ec:	str	x2, [x21, #40]
 1f0:	bfxil	x1, x3, #0, #8
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x21, x22, [sp, #32]
 1fc:	ldp	x23, x24, [sp, #48]
 200:	ldp	x25, x26, [sp, #64]
 204:	ldp	x27, x28, [sp, #80]
 208:	ldp	x29, x30, [sp], #112
 20c:	ret
 210:	ldr	x0, [x21, #24]
 214:	cmp	x0, x20
 218:	b.eq	2c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2c4>  // b.none
 21c:	mov	x0, x20
 220:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 224:	ldp	x1, x27, [x0, #32]
 228:	mov	x22, x20
 22c:	mov	x20, x0
 230:	cmp	x27, x28
 234:	csel	x2, x27, x28, ls  // ls = plast
 238:	b	e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe4>
 23c:	ldr	x20, [x21, #16]
 240:	add	x25, x0, #0x30
 244:	stp	x25, xzr, [x0, #32]
 248:	add	x24, x21, #0x8
 24c:	strb	wzr, [x0, #48]
 250:	ldr	x23, [x22, #16]
 254:	str	xzr, [x22, #16]
 258:	str	x23, [x19, #64]
 25c:	cbnz	x20, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x6c>
 260:	ldr	x0, [x21, #24]
 264:	mov	x22, x24
 268:	cmp	x24, x0
 26c:	b.ne	2cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2cc>  // b.any
 270:	mov	w0, #0x1                   	// #1
 274:	b	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 278:	ldr	x20, [x22, #40]
 27c:	cmp	x28, x20
 280:	csel	x2, x28, x20, ls  // ls = plast
 284:	cbz	x2, 298 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x298>
 288:	ldr	x1, [x22, #32]
 28c:	mov	x0, x26
 290:	bl	0 <memcmp>
 294:	cbnz	w0, 2bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x2bc>
 298:	sub	x28, x28, x20
 29c:	mov	x1, #0x7fffffff            	// #2147483647
 2a0:	mov	w0, #0x0                   	// #0
 2a4:	cmp	x28, x1
 2a8:	b.gt	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 2ac:	mov	x0, #0xffffffff80000000    	// #-2147483648
 2b0:	cmp	x28, x0
 2b4:	b.lt	270 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x270>  // b.tstop
 2b8:	mov	w0, w28
 2bc:	lsr	w0, w0, #31
 2c0:	b	1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1c8>
 2c4:	mov	x22, x20
 2c8:	b	1bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x1bc>
 2cc:	mov	x20, x24
 2d0:	ldp	x26, x28, [x19, #32]
 2d4:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x21c>
 2d8:	mov	x20, #0x0                   	// #0
 2dc:	cbnz	x23, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x11c>
 2e0:	b	17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x17c>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x1
  10:	mov	x21, x0
  14:	mov	x0, #0x48                  	// #72
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	bl	0 <_Znwm>
  2c:	mov	x19, x0
  30:	ldr	x1, [x22]
  34:	cbz	x1, 1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x1e4>
  38:	ldr	x2, [x22, #8]
  3c:	add	x25, x0, #0x20
  40:	mov	x0, x25
  44:	add	x24, x19, #0x30
  48:	add	x2, x1, x2
  4c:	mov	w3, #0x0                   	// #0
  50:	str	x24, [x19, #32]
  54:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_>
  58:	ldr	x20, [x21, #16]
  5c:	add	x23, x21, #0x8
  60:	ldr	x0, [x22, #16]
  64:	str	x0, [x25, #32]
  68:	cbz	x20, 208 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x208>
  6c:	ldp	x26, x27, [x19, #32]
  70:	mov	x25, #0xffffffff80000000    	// #-2147483648
  74:	nop
  78:	ldp	x1, x22, [x20, #32]
  7c:	mov	x0, x26
  80:	cmp	x27, x22
  84:	csel	x28, x27, x22, ls  // ls = plast
  88:	cbz	x28, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xa0>
  8c:	mov	x2, x28
  90:	str	x1, [sp, #104]
  94:	bl	0 <memcmp>
  98:	ldr	x1, [sp, #104]
  9c:	cbnz	w0, bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xbc>
  a0:	sub	x2, x27, x22
  a4:	mov	x3, #0x7fffffff            	// #2147483647
  a8:	mov	w0, w2
  ac:	cmp	x2, x3
  b0:	b.gt	d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xd4>
  b4:	cmp	x2, x25
  b8:	b.lt	c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xc0>  // b.tstop
  bc:	tbz	w0, #31, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xd4>
  c0:	ldr	x0, [x20, #16]
  c4:	mov	w2, #0x1                   	// #1
  c8:	cbz	x0, e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xe0>
  cc:	mov	x20, x0
  d0:	b	78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x78>
  d4:	ldr	x0, [x20, #24]
  d8:	mov	w2, #0x0                   	// #0
  dc:	cbnz	x0, cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xcc>
  e0:	mov	x25, x20
  e4:	cbnz	w2, 1b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x1b8>
  e8:	cbz	x28, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x100>
  ec:	mov	x0, x1
  f0:	mov	x2, x28
  f4:	mov	x1, x26
  f8:	bl	0 <memcmp>
  fc:	cbnz	w0, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x11c>
 100:	sub	x0, x22, x27
 104:	mov	x1, #0x7fffffff            	// #2147483647
 108:	cmp	x0, x1
 10c:	b.gt	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x120>
 110:	mov	x1, #0xffffffff80000000    	// #-2147483648
 114:	cmp	x0, x1
 118:	b.lt	15c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x15c>  // b.tstop
 11c:	tbnz	w0, #31, 15c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x15c>
 120:	cmp	x26, x24
 124:	b.eq	130 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x130>  // b.none
 128:	mov	x0, x26
 12c:	bl	0 <_ZdlPv>
 130:	mov	x0, x19
 134:	bl	0 <_ZdlPv>
 138:	mov	x0, x20
 13c:	mov	x1, #0x0                   	// #0
 140:	ldp	x19, x20, [sp, #16]
 144:	ldp	x21, x22, [sp, #32]
 148:	ldp	x23, x24, [sp, #48]
 14c:	ldp	x25, x26, [sp, #64]
 150:	ldp	x27, x28, [sp, #80]
 154:	ldp	x29, x30, [sp], #112
 158:	ret
 15c:	mov	x20, #0x0                   	// #0
 160:	cbz	x25, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x120>
 164:	cmp	x23, x25
 168:	mov	w0, #0x1                   	// #1
 16c:	b.ne	220 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x220>  // b.any
 170:	mov	x3, x23
 174:	mov	x2, x25
 178:	mov	x1, x19
 17c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 180:	ldr	x2, [x21, #40]
 184:	mov	x3, #0x1                   	// #1
 188:	mov	x1, #0x0                   	// #0
 18c:	mov	x0, x19
 190:	add	x2, x2, x3
 194:	str	x2, [x21, #40]
 198:	bfxil	x1, x3, #0, #8
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x23, x24, [sp, #48]
 1a8:	ldp	x25, x26, [sp, #64]
 1ac:	ldp	x27, x28, [sp, #80]
 1b0:	ldp	x29, x30, [sp], #112
 1b4:	ret
 1b8:	ldr	x0, [x21, #24]
 1bc:	cmp	x0, x20
 1c0:	b.eq	26c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x26c>  // b.none
 1c4:	mov	x0, x20
 1c8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1cc:	ldp	x1, x22, [x0, #32]
 1d0:	mov	x25, x20
 1d4:	mov	x20, x0
 1d8:	cmp	x27, x22
 1dc:	csel	x28, x27, x22, ls  // ls = plast
 1e0:	b	e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xe8>
 1e4:	add	x25, x0, #0x20
 1e8:	add	x24, x0, #0x30
 1ec:	ldr	x20, [x21, #16]
 1f0:	stp	x24, xzr, [x0, #32]
 1f4:	add	x23, x21, #0x8
 1f8:	strb	wzr, [x0, #48]
 1fc:	ldr	x0, [x22, #16]
 200:	str	x0, [x25, #32]
 204:	cbnz	x20, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x6c>
 208:	ldr	x0, [x21, #24]
 20c:	mov	x25, x23
 210:	cmp	x23, x0
 214:	b.ne	274 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x274>  // b.any
 218:	mov	w0, #0x1                   	// #1
 21c:	b	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x170>
 220:	ldr	x20, [x25, #40]
 224:	cmp	x27, x20
 228:	csel	x2, x27, x20, ls  // ls = plast
 22c:	cbz	x2, 240 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x240>
 230:	ldr	x1, [x25, #32]
 234:	mov	x0, x26
 238:	bl	0 <memcmp>
 23c:	cbnz	w0, 264 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x264>
 240:	sub	x27, x27, x20
 244:	mov	x1, #0x7fffffff            	// #2147483647
 248:	mov	w0, #0x0                   	// #0
 24c:	cmp	x27, x1
 250:	b.gt	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x170>
 254:	mov	x0, #0xffffffff80000000    	// #-2147483648
 258:	cmp	x27, x0
 25c:	b.lt	218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x218>  // b.tstop
 260:	mov	w0, w27
 264:	lsr	w0, w0, #31
 268:	b	170 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x170>
 26c:	mov	x25, x20
 270:	b	164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x164>
 274:	mov	x20, x23
 278:	ldp	x26, x27, [x19, #32]
 27c:	b	1c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x1c4>

Disassembly of section .text._ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE:

0000000000000000 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x2
  14:	add	x0, x0, #0x78
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x1
  20:	add	x1, sp, #0x58
  24:	stp	x23, x24, [sp, #48]
  28:	add	x24, x19, #0x38
  2c:	str	x25, [sp, #64]
  30:	stp	x21, x2, [sp, #88]
  34:	str	x3, [sp, #104]
  38:	bl	0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
  3c:	ldr	x19, [x19, #64]
  40:	and	w25, w1, #0xff
  44:	cbz	x19, b8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xb8>
  48:	cbz	x20, d4 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xd4>
  4c:	mov	x23, x24
  50:	ldp	x0, x22, [x19, #32]
  54:	cmp	x20, x22
  58:	b.cc	120 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x120>  // b.lo, b.ul, b.last
  5c:	cbz	x22, 140 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x140>
  60:	mov	x2, x22
  64:	mov	x1, x21
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 130 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x130>
  70:	cmp	x20, x22
  74:	b.ne	140 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x140>  // b.any
  78:	mov	x23, x19
  7c:	ldr	x19, [x19, #16]
  80:	cbnz	x19, 50 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x50>
  84:	cmp	x23, x24
  88:	b.eq	b8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xb8>  // b.none
  8c:	ldp	x1, x19, [x23, #32]
  90:	cmp	x20, x19
  94:	b.hi	150 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x150>  // b.pmore
  98:	mov	x0, x21
  9c:	mov	x2, x20
  a0:	bl	0 <memcmp>
  a4:	cbnz	w0, 164 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x164>
  a8:	cmp	x20, x19
  ac:	b.eq	f8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xf8>  // b.none
  b0:	cmp	x20, x19
  b4:	b.cs	f8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xf8>  // b.hs, b.nlast
  b8:	cbz	w25, 16c <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x16c>
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x21, x22, [sp, #32]
  c4:	ldp	x23, x24, [sp, #48]
  c8:	ldr	x25, [sp, #64]
  cc:	ldp	x29, x30, [sp], #112
  d0:	ret
  d4:	mov	x23, x19
  d8:	ldr	x19, [x19, #16]
  dc:	cbnz	x19, d4 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xd4>
  e0:	cmp	x24, x23
  e4:	b.eq	b8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xb8>  // b.none
  e8:	ldr	x19, [x23, #40]
  ec:	cmp	x20, x19
  f0:	b.ne	b0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xb0>  // b.any
  f4:	nop
  f8:	ldr	x0, [x23, #64]
  fc:	cbz	x0, b8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xb8>
 100:	adrp	x3, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 104:	adrp	x1, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 108:	adrp	x0, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 10c:	add	x3, x3, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x0, x0, #0x0
 118:	mov	w2, #0x6cd                 	// #1741
 11c:	bl	0 <__assert_fail>
 120:	mov	x2, x20
 124:	mov	x1, x21
 128:	bl	0 <memcmp>
 12c:	cbz	w0, 140 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x140>
 130:	tbz	w0, #31, 78 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x78>
 134:	ldr	x19, [x19, #24]
 138:	cbnz	x19, 50 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x50>
 13c:	b	84 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x84>
 140:	cmp	x20, x22
 144:	b.ls	78 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x78>  // b.plast
 148:	ldr	x19, [x19, #24]
 14c:	b	138 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x138>
 150:	cbz	x19, f8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xf8>
 154:	mov	x0, x21
 158:	mov	x2, x19
 15c:	bl	0 <memcmp>
 160:	cbz	w0, b0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xb0>
 164:	tbz	w0, #31, f8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xf8>
 168:	b	b8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xb8>
 16c:	adrp	x3, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 170:	adrp	x1, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 174:	adrp	x0, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 178:	add	x3, x3, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x0, x0, #0x0
 184:	mov	w2, #0x6ce                 	// #1742
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-48]!
   8:	mov	w3, #0x40                  	// #64
   c:	orr	x2, x1, x1, lsr #1
  10:	mov	x29, sp
  14:	orr	x2, x2, x2, lsr #2
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	w20, #0x18                  	// #24
  20:	orr	x2, x2, x2, lsr #4
  24:	stp	x21, x22, [sp, #32]
  28:	mov	x19, x0
  2c:	orr	x2, x2, x2, lsr #8
  30:	ldr	w21, [x0, #24]
  34:	ldr	x22, [x0, #8]
  38:	orr	x2, x2, x2, lsr #16
  3c:	add	x2, x2, #0x1
  40:	cmp	w2, w3
  44:	csel	w2, w2, w3, cs  // cs = hs, nlast
  48:	str	w2, [x0, #24]
  4c:	umull	x0, w2, w20
  50:	bl	0 <_Znwm>
  54:	str	x0, [x19, #8]
  58:	ldr	w5, [x19, #24]
  5c:	sub	w6, w5, #0x1
  60:	and	w2, w6, w5
  64:	cbz	x22, 158 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x158>
  68:	umull	x1, w21, w20
  6c:	str	xzr, [x19, #16]
  70:	add	x8, x22, x1
  74:	cbnz	w2, 1c4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1c4>
  78:	umaddl	x20, w5, w20, x0
  7c:	mov	x2, x0
  80:	mov	x3, #0xfffffffffffffff8    	// #-8
  84:	cmp	x0, x20
  88:	b.eq	9c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x9c>  // b.none
  8c:	nop
  90:	str	x3, [x2], #24
  94:	cmp	x20, x2
  98:	b.ne	90 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x90>  // b.any
  9c:	cmp	x8, x22
  a0:	mov	x4, x22
  a4:	mov	w10, #0x18                  	// #24
  a8:	b.ne	bc <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xbc>  // b.any
  ac:	b	110 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x110>
  b0:	add	x4, x4, #0x18
  b4:	cmp	x8, x4
  b8:	b.eq	110 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x110>  // b.none
  bc:	ldr	x2, [x4]
  c0:	cmn	x2, #0x10
  c4:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  c8:	b.eq	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xb0>  // b.none
  cc:	cbz	w5, 1e4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1e4>
  d0:	lsr	w3, w2, #9
  d4:	eor	w3, w3, w2, lsr #4
  d8:	and	w3, w3, w6
  dc:	umull	x7, w3, w10
  e0:	add	x11, x0, x7
  e4:	ldr	x7, [x0, x7]
  e8:	cmp	x2, x7
  ec:	b.ne	124 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x124>  // b.any
  f0:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  f4:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  f8:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  fc:	add	x3, x3, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x0, x0, #0x0
 108:	mov	w2, #0x17a                 	// #378
 10c:	bl	0 <__assert_fail>
 110:	mov	x0, x22
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x29, x30, [sp], #48
 120:	b	0 <_ZdlPvm>
 124:	mov	w12, #0x1                   	// #1
 128:	mov	x9, #0x0                   	// #0
 12c:	cmn	x7, #0x8
 130:	b.ne	18c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x18c>  // b.any
 134:	cmp	x9, #0x0
 138:	ldr	w7, [x19, #16]
 13c:	csel	x9, x9, x11, ne  // ne = any
 140:	add	w7, w7, #0x1
 144:	str	x2, [x9]
 148:	ldp	x2, x3, [x4, #8]
 14c:	stp	x2, x3, [x9, #8]
 150:	str	w7, [x19, #16]
 154:	b	b0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xb0>
 158:	str	xzr, [x19, #16]
 15c:	cbnz	w2, 1c4 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x1c4>
 160:	umaddl	x20, w5, w20, x0
 164:	mov	x1, #0xfffffffffffffff8    	// #-8
 168:	cmp	x0, x20
 16c:	b.eq	17c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x17c>  // b.none
 170:	str	x1, [x0], #24
 174:	cmp	x20, x0
 178:	b.ne	170 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x170>  // b.any
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x21, x22, [sp, #32]
 184:	ldp	x29, x30, [sp], #48
 188:	ret
 18c:	add	w3, w12, w3
 190:	cmp	x9, #0x0
 194:	and	w3, w6, w3
 198:	ccmn	x7, #0x10, #0x0, eq  // eq = none
 19c:	csel	x11, x11, x9, eq  // eq = none
 1a0:	add	w12, w12, #0x1
 1a4:	umull	x7, w3, w10
 1a8:	add	x13, x0, x7
 1ac:	ldr	x7, [x0, x7]
 1b0:	cmp	x2, x7
 1b4:	b.eq	f0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xf0>  // b.none
 1b8:	mov	x9, x11
 1bc:	mov	x11, x13
 1c0:	b	12c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x12c>
 1c4:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1c8:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1cc:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 1d0:	add	x3, x3, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x0, x0, #0x0
 1dc:	mov	w2, #0x15b                 	// #347
 1e0:	bl	0 <__assert_fail>
 1e4:	mov	x0, #0x0                   	// #0
 1e8:	str	x2, [x0]
 1ec:	brk	#0x3e8

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w4, [x0, #24]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cbz	w4, e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xe4>
  1c:	ldr	x3, [x1]
  20:	cmn	x3, #0x10
  24:	ccmn	x3, #0x8, #0x4, ne  // ne = any
  28:	b.eq	26c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x26c>  // b.none
  2c:	lsr	w2, w3, #9
  30:	sub	w7, w4, #0x1
  34:	eor	w2, w2, w3, lsr #4
  38:	mov	w6, #0x18                  	// #24
  3c:	and	w2, w2, w7
  40:	ldr	x1, [x0, #8]
  44:	umull	x5, w2, w6
  48:	add	x0, x1, x5
  4c:	ldr	x5, [x1, x5]
  50:	cmp	x3, x5
  54:	b.ne	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x64>  // b.any
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
  64:	mov	w9, #0x1                   	// #1
  68:	mov	x8, #0x0                   	// #0
  6c:	cmn	x5, #0x8
  70:	b.ne	234 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x234>  // b.any
  74:	ldr	x2, [x19]
  78:	lsl	w1, w4, #1
  7c:	ldr	w5, [x19, #16]
  80:	cmp	x8, #0x0
  84:	add	x2, x2, #0x1
  88:	str	x2, [x19]
  8c:	add	w5, w5, #0x1
  90:	add	w2, w1, w4
  94:	csel	x0, x0, x8, eq  // eq = none
  98:	cmp	w2, w5, lsl #2
  9c:	b.ls	f4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xf4>  // b.plast
  a0:	ldr	w2, [x19, #20]
  a4:	sub	w2, w4, w2
  a8:	sub	w2, w2, w5
  ac:	cmp	w2, w4, lsr #3
  b0:	b.ls	1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x1a4>  // b.plast
  b4:	ldr	x1, [x0]
  b8:	str	w5, [x19, #16]
  bc:	cmn	x1, #0x8
  c0:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xd0>  // b.none
  c4:	ldr	w1, [x19, #20]
  c8:	sub	w1, w1, #0x1
  cc:	str	w1, [x19, #20]
  d0:	stp	x3, xzr, [x0]
  d4:	strb	wzr, [x0, #16]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x29, x30, [sp], #32
  e0:	ret
  e4:	ldr	x0, [x0]
  e8:	mov	w1, #0x0                   	// #0
  ec:	add	x0, x0, #0x1
  f0:	str	x0, [x19]
  f4:	mov	x0, x19
  f8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  fc:	ldr	w0, [x19, #24]
 100:	cbz	w0, 214 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x214>
 104:	ldr	x3, [x20]
 108:	cmn	x3, #0x10
 10c:	ccmn	x3, #0x8, #0x4, ne  // ne = any
 110:	b.eq	26c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x26c>  // b.none
 114:	lsr	w1, w3, #9
 118:	sub	w2, w0, #0x1
 11c:	eor	w1, w1, w3, lsr #4
 120:	mov	w7, #0x18                  	// #24
 124:	and	w1, w1, w2
 128:	ldr	w5, [x19, #16]
 12c:	ldr	x4, [x19, #8]
 130:	add	w5, w5, #0x1
 134:	umull	x6, w1, w7
 138:	add	x0, x4, x6
 13c:	ldr	x6, [x4, x6]
 140:	cmp	x6, x3
 144:	b.ne	150 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x150>  // b.any
 148:	str	w5, [x19, #16]
 14c:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xc4>
 150:	mov	w9, #0x1                   	// #1
 154:	mov	x8, #0x0                   	// #0
 158:	cmn	x6, #0x8
 15c:	b.ne	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x170>  // b.any
 160:	cbz	x8, 264 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x264>
 164:	mov	x0, x8
 168:	ldr	x1, [x8]
 16c:	b	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xb8>
 170:	add	w1, w9, w1
 174:	cmp	x8, #0x0
 178:	and	w1, w2, w1
 17c:	ccmn	x6, #0x10, #0x0, eq  // eq = none
 180:	csel	x8, x8, x0, ne  // ne = any
 184:	add	w9, w9, #0x1
 188:	umull	x6, w1, w7
 18c:	add	x0, x4, x6
 190:	ldr	x6, [x4, x6]
 194:	cmp	x3, x6
 198:	b.ne	158 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x158>  // b.any
 19c:	str	w5, [x19, #16]
 1a0:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xc4>
 1a4:	mov	x0, x19
 1a8:	mov	w1, w4
 1ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 1b0:	ldr	w0, [x19, #24]
 1b4:	cbz	w0, 214 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x214>
 1b8:	ldr	x2, [x20]
 1bc:	cmn	x2, #0x10
 1c0:	ccmn	x2, #0x8, #0x4, ne  // ne = any
 1c4:	b.eq	26c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x26c>  // b.none
 1c8:	lsr	w1, w2, #9
 1cc:	sub	w4, w0, #0x1
 1d0:	eor	w1, w1, w2, lsr #4
 1d4:	mov	w7, #0x18                  	// #24
 1d8:	and	w1, w1, w4
 1dc:	ldr	w5, [x19, #16]
 1e0:	ldr	x6, [x19, #8]
 1e4:	add	w5, w5, #0x1
 1e8:	umull	x3, w1, w7
 1ec:	add	x0, x6, x3
 1f0:	ldr	x3, [x6, x3]
 1f4:	cmp	x2, x3
 1f8:	b.eq	148 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x148>  // b.none
 1fc:	mov	w9, #0x1                   	// #1
 200:	mov	x8, #0x0                   	// #0
 204:	cmn	x3, #0x8
 208:	b.ne	28c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x28c>  // b.any
 20c:	mov	x3, x2
 210:	b	160 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x160>
 214:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 218:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 21c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 220:	add	x3, x3, #0x0
 224:	add	x1, x1, #0x0
 228:	add	x0, x0, #0x0
 22c:	mov	w2, #0x22f                 	// #559
 230:	bl	0 <__assert_fail>
 234:	add	w2, w2, w9
 238:	cmp	x8, #0x0
 23c:	and	w2, w7, w2
 240:	ccmn	x5, #0x10, #0x0, eq  // eq = none
 244:	csel	x8, x8, x0, ne  // ne = any
 248:	add	w9, w9, #0x1
 24c:	umull	x5, w2, w6
 250:	add	x0, x1, x5
 254:	ldr	x5, [x1, x5]
 258:	cmp	x3, x5
 25c:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x58>  // b.none
 260:	b	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x6c>
 264:	str	w5, [x19, #16]
 268:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xd0>
 26c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 270:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 274:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
 278:	add	x3, x3, #0x0
 27c:	add	x1, x1, #0x0
 280:	add	x0, x0, #0x0
 284:	mov	w2, #0x250                 	// #592
 288:	bl	0 <__assert_fail>
 28c:	add	w1, w9, w1
 290:	cmp	x8, #0x0
 294:	and	w1, w4, w1
 298:	ccmn	x3, #0x10, #0x0, eq  // eq = none
 29c:	csel	x8, x8, x0, ne  // ne = any
 2a0:	add	w9, w9, #0x1
 2a4:	umull	x3, w1, w7
 2a8:	add	x0, x6, x3
 2ac:	ldr	x3, [x6, x3]
 2b0:	cmp	x2, x3
 2b4:	b.ne	204 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x204>  // b.any
 2b8:	str	w5, [x19, #16]
 2bc:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xc4>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x22, x0
  14:	b.eq	15c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x15c>  // b.none
  18:	stp	x25, x26, [sp, #64]
  1c:	mov	x25, x1
  20:	ldr	w0, [x0, #8]
  24:	stp	x19, x20, [sp, #16]
  28:	mov	w1, w0
  2c:	stp	x23, x24, [sp, #48]
  30:	ldr	w24, [x25, #8]
  34:	ldr	x19, [x22]
  38:	mov	w26, w24
  3c:	cmp	w24, w0
  40:	b.ls	16c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x16c>  // b.plast
  44:	ldr	w2, [x22, #12]
  48:	cmp	x26, x2
  4c:	b.ls	1b0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1b0>  // b.plast
  50:	mov	w20, #0x30                  	// #48
  54:	umaddl	x20, w0, w20, x19
  58:	cmp	x20, x19
  5c:	b.eq	78 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x78>  // b.none
  60:	ldur	x0, [x20, #-40]
  64:	sub	x20, x20, #0x30
  68:	cbz	x0, 58 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x58>
  6c:	bl	0 <_ZdlPv>
  70:	cmp	x20, x19
  74:	b.ne	60 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x60>  // b.any
  78:	str	wzr, [x22, #8]
  7c:	mov	x1, x26
  80:	mov	x0, x22
  84:	mov	x21, #0x0                   	// #0
  88:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
  8c:	ldr	w23, [x25, #8]
  90:	mov	w1, #0x30                  	// #48
  94:	ldr	x0, [x25]
  98:	ldr	x19, [x22]
  9c:	add	x20, x0, x21
  a0:	umaddl	x23, w23, w1, x0
  a4:	add	x19, x19, x21
  a8:	cmp	x20, x23
  ac:	b.eq	140 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x140>  // b.none
  b0:	mov	x25, #0x1fffffffffffffff    	// #2305843009213693951
  b4:	nop
  b8:	ldp	x0, x1, [x20]
  bc:	mov	x3, #0x0                   	// #0
  c0:	ldr	x21, [x20, #16]
  c4:	stp	x0, xzr, [x19]
  c8:	stp	xzr, xzr, [x19, #16]
  cc:	sub	x21, x21, x1
  d0:	cmp	xzr, x21, asr #2
  d4:	asr	x0, x21, #2
  d8:	b.eq	f0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xf0>  // b.none
  dc:	cmp	x0, x25
  e0:	b.hi	448 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x448>  // b.pmore
  e4:	mov	x0, x21
  e8:	bl	0 <_Znwm>
  ec:	mov	x3, x0
  f0:	dup	v0.2d, x3
  f4:	add	x21, x3, x21
  f8:	str	x21, [x19, #24]
  fc:	stur	q0, [x19, #8]
 100:	ldp	x1, x2, [x20, #8]
 104:	cmp	x1, x2
 108:	sub	x21, x2, x1
 10c:	b.eq	120 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x120>  // b.none
 110:	mov	x0, x3
 114:	mov	x2, x21
 118:	bl	0 <memmove>
 11c:	mov	x3, x0
 120:	ldp	x1, x0, [x20, #32]
 124:	add	x3, x3, x21
 128:	str	x3, [x19, #16]
 12c:	add	x20, x20, #0x30
 130:	stp	x1, x0, [x19, #32]
 134:	cmp	x23, x20
 138:	add	x19, x19, #0x30
 13c:	b.ne	b8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xb8>  // b.any
 140:	ldr	w0, [x22, #12]
 144:	cmp	x26, x0
 148:	b.hi	450 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x450>  // b.pmore
 14c:	ldp	x19, x20, [sp, #16]
 150:	ldp	x25, x26, [sp, #64]
 154:	str	w24, [x22, #8]
 158:	ldp	x23, x24, [sp, #48]
 15c:	mov	x0, x22
 160:	ldp	x21, x22, [sp, #32]
 164:	ldp	x29, x30, [sp], #112
 168:	ret
 16c:	cbnz	x26, 29c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x29c>
 170:	mov	w20, #0x30                  	// #48
 174:	umaddl	x20, w0, w20, x19
 178:	cmp	x20, x19
 17c:	b.eq	14c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x14c>  // b.none
 180:	ldur	x0, [x20, #-40]
 184:	sub	x20, x20, #0x30
 188:	cbz	x0, 1a4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1a4>
 18c:	bl	0 <_ZdlPv>
 190:	cmp	x20, x19
 194:	b.eq	140 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x140>  // b.none
 198:	ldur	x0, [x20, #-40]
 19c:	sub	x20, x20, #0x30
 1a0:	cbnz	x0, 18c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x18c>
 1a4:	cmp	x20, x19
 1a8:	b.ne	180 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x180>  // b.any
 1ac:	b	140 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x140>
 1b0:	ldr	x20, [x25]
 1b4:	cbnz	x1, 1c4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1c4>
 1b8:	mov	w23, #0x30                  	// #48
 1bc:	umaddl	x23, w24, w23, x20
 1c0:	b	b0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xb0>
 1c4:	mov	w21, #0x30                  	// #48
 1c8:	stp	x27, x28, [sp, #80]
 1cc:	umull	x21, w0, w21
 1d0:	add	x28, x20, x21
 1d4:	nop
 1d8:	ldr	x0, [x20]
 1dc:	str	x0, [x19]
 1e0:	cmp	x20, x19
 1e4:	b.eq	23c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x23c>  // b.none
 1e8:	ldp	x1, x27, [x20, #8]
 1ec:	ldr	x0, [x19, #8]
 1f0:	ldr	x3, [x19, #24]
 1f4:	sub	x23, x27, x1
 1f8:	sub	x3, x3, x0
 1fc:	asr	x3, x3, #2
 200:	cmp	x3, x23, asr #2
 204:	asr	x3, x23, #2
 208:	b.cc	3e8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x3e8>  // b.lo, b.ul, b.last
 20c:	ldr	x5, [x19, #16]
 210:	sub	x2, x5, x0
 214:	cmp	x3, x2, asr #2
 218:	b.hi	264 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x264>  // b.pmore
 21c:	cmp	x1, x27
 220:	b.eq	294 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x294>  // b.none
 224:	mov	x2, x23
 228:	bl	0 <memmove>
 22c:	ldr	x0, [x19, #8]
 230:	add	x23, x0, x23
 234:	nop
 238:	str	x23, [x19, #16]
 23c:	ldr	x0, [x20, #32]
 240:	str	x0, [x19, #32]
 244:	ldr	x0, [x20, #40]
 248:	str	x0, [x19, #40]
 24c:	add	x20, x20, #0x30
 250:	add	x19, x19, #0x30
 254:	cmp	x28, x20
 258:	b.ne	1d8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1d8>  // b.any
 25c:	ldp	x27, x28, [sp, #80]
 260:	b	8c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x8c>
 264:	cbz	x2, 278 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x278>
 268:	bl	0 <memmove>
 26c:	ldp	x0, x5, [x19, #8]
 270:	ldp	x1, x27, [x20, #8]
 274:	sub	x2, x5, x0
 278:	add	x1, x1, x2
 27c:	cmp	x1, x27
 280:	b.eq	294 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x294>  // b.none
 284:	sub	x2, x27, x1
 288:	mov	x0, x5
 28c:	bl	0 <memmove>
 290:	ldr	x0, [x19, #8]
 294:	add	x23, x0, x23
 298:	b	238 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x238>
 29c:	ldr	x20, [x25]
 2a0:	mov	w23, #0x30                  	// #48
 2a4:	stp	x27, x28, [sp, #80]
 2a8:	umaddl	x23, w24, w23, x20
 2ac:	nop
 2b0:	ldr	x0, [x20]
 2b4:	str	x0, [x19]
 2b8:	cmp	x20, x19
 2bc:	b.eq	314 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x314>  // b.none
 2c0:	ldp	x27, x28, [x20, #8]
 2c4:	ldr	x0, [x19, #8]
 2c8:	ldr	x3, [x19, #24]
 2cc:	sub	x21, x28, x27
 2d0:	sub	x3, x3, x0
 2d4:	asr	x2, x21, #2
 2d8:	asr	x3, x3, #2
 2dc:	cmp	x3, x21, asr #2
 2e0:	b.cc	394 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x394>  // b.lo, b.ul, b.last
 2e4:	ldr	x3, [x19, #16]
 2e8:	sub	x1, x3, x0
 2ec:	cmp	x2, x1, asr #2
 2f0:	b.hi	354 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x354>  // b.pmore
 2f4:	cmp	x27, x28
 2f8:	b.eq	38c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x38c>  // b.none
 2fc:	mov	x2, x21
 300:	mov	x1, x27
 304:	bl	0 <memmove>
 308:	ldr	x0, [x19, #8]
 30c:	add	x21, x0, x21
 310:	str	x21, [x19, #16]
 314:	ldr	x0, [x20, #32]
 318:	str	x0, [x19, #32]
 31c:	ldr	x0, [x20, #40]
 320:	str	x0, [x19, #40]
 324:	add	x20, x20, #0x30
 328:	add	x19, x19, #0x30
 32c:	cmp	x20, x23
 330:	b.ne	2b0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x2b0>  // b.any
 334:	ldr	w20, [x22, #8]
 338:	mov	w1, #0x30                  	// #48
 33c:	ldr	x0, [x22]
 340:	ldp	x27, x28, [sp, #80]
 344:	umaddl	x20, w20, w1, x0
 348:	cmp	x20, x19
 34c:	b.ne	180 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x180>  // b.any
 350:	b	140 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x140>
 354:	cbz	x1, 370 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x370>
 358:	mov	x2, x1
 35c:	mov	x1, x27
 360:	bl	0 <memmove>
 364:	ldp	x0, x3, [x19, #8]
 368:	ldp	x27, x28, [x20, #8]
 36c:	sub	x1, x3, x0
 370:	add	x1, x27, x1
 374:	cmp	x1, x28
 378:	b.eq	38c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x38c>  // b.none
 37c:	sub	x2, x28, x1
 380:	mov	x0, x3
 384:	bl	0 <memmove>
 388:	ldr	x0, [x19, #8]
 38c:	add	x21, x0, x21
 390:	b	310 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x310>
 394:	mov	x25, #0x0                   	// #0
 398:	cbz	x2, 3b4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x3b4>
 39c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
 3a0:	cmp	x2, x0
 3a4:	b.hi	44c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x44c>  // b.pmore
 3a8:	mov	x0, x21
 3ac:	bl	0 <_Znwm>
 3b0:	mov	x25, x0
 3b4:	cmp	x27, x28
 3b8:	b.eq	3cc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x3cc>  // b.none
 3bc:	mov	x1, x27
 3c0:	mov	x2, x21
 3c4:	mov	x0, x25
 3c8:	bl	0 <memcpy>
 3cc:	ldr	x0, [x19, #8]
 3d0:	cbz	x0, 3d8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x3d8>
 3d4:	bl	0 <_ZdlPv>
 3d8:	add	x21, x25, x21
 3dc:	str	x25, [x19, #8]
 3e0:	str	x21, [x19, #24]
 3e4:	b	310 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x310>
 3e8:	cbz	x3, 40c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x40c>
 3ec:	str	x1, [sp, #104]
 3f0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
 3f4:	cmp	x3, x0
 3f8:	b.hi	44c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x44c>  // b.pmore
 3fc:	mov	x0, x23
 400:	bl	0 <_Znwm>
 404:	ldr	x1, [sp, #104]
 408:	mov	x3, x0
 40c:	cmp	x1, x27
 410:	b.eq	424 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x424>  // b.none
 414:	mov	x0, x3
 418:	mov	x2, x23
 41c:	bl	0 <memcpy>
 420:	mov	x3, x0
 424:	ldr	x0, [x19, #8]
 428:	cbz	x0, 438 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x438>
 42c:	str	x3, [sp, #104]
 430:	bl	0 <_ZdlPv>
 434:	ldr	x3, [sp, #104]
 438:	add	x23, x3, x23
 43c:	str	x3, [x19, #8]
 440:	str	x23, [x19, #24]
 444:	b	238 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x238>
 448:	stp	x27, x28, [sp, #80]
 44c:	bl	0 <_ZSt17__throw_bad_allocv>
 450:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 454:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 458:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 45c:	add	x3, x3, #0x0
 460:	add	x1, x1, #0x0
 464:	add	x0, x0, #0x0
 468:	mov	w2, #0x43                  	// #67
 46c:	stp	x27, x28, [sp, #80]
 470:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x3, #0x4ec5                	// #20165
   8:	movk	x3, #0xc4ec, lsl #16
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	movk	x3, #0xec4e, lsl #32
  18:	movk	x3, #0x4ec4, lsl #48
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x22, #0xd89d                	// #55453
  24:	movk	x22, #0x9d89, lsl #16
  28:	ldp	x23, x21, [x0]
  2c:	stp	x25, x26, [sp, #64]
  30:	mov	x25, x0
  34:	stp	x19, x20, [sp, #16]
  38:	movk	x22, #0x89d8, lsl #32
  3c:	movk	x22, #0x9d, lsl #48
  40:	stp	x27, x28, [sp, #80]
  44:	sub	x0, x21, x23
  48:	str	d8, [sp, #96]
  4c:	asr	x0, x0, #4
  50:	mul	x0, x0, x3
  54:	cmp	x0, x22
  58:	b.eq	2e4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x2e4>  // b.none
  5c:	mov	x27, x1
  60:	mov	x19, x2
  64:	sub	x20, x1, x23
  68:	cbz	x0, 2c8 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x2c8>
  6c:	cmp	x0, x0, lsl #1
  70:	lsl	x0, x0, #1
  74:	b.ls	270 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x270>  // b.plast
  78:	mov	x22, #0xffffffffffffff90    	// #-112
  7c:	movk	x22, #0x7fff, lsl #48
  80:	mov	x0, x22
  84:	bl	0 <_Znwm>
  88:	adrp	x1, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  8c:	mov	x24, x0
  90:	add	x22, x0, x22
  94:	add	x26, x0, #0xd0
  98:	ldr	d0, [x1]
  9c:	add	x0, x24, x20
  a0:	ldr	w1, [x19, #8]
  a4:	add	x2, x0, #0x10
  a8:	str	x2, [x24, x20]
  ac:	str	d0, [x0, #8]
  b0:	cbnz	w1, 2a0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x2a0>
  b4:	cmp	x27, x23
  b8:	b.eq	144 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x144>  // b.none
  bc:	adrp	x0, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  c0:	mov	x19, x24
  c4:	mov	x20, x23
  c8:	ldr	d8, [x0]
  cc:	b	e0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe0>
  d0:	add	x20, x20, #0xd0
  d4:	add	x19, x19, #0xd0
  d8:	cmp	x27, x20
  dc:	b.eq	110 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x110>  // b.none
  e0:	str	d8, [x19, #8]
  e4:	add	x0, x19, #0x10
  e8:	ldr	w1, [x20, #8]
  ec:	str	x0, [x19]
  f0:	cbz	w1, d0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd0>
  f4:	mov	x1, x20
  f8:	mov	x0, x19
  fc:	add	x20, x20, #0xd0
 100:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 104:	add	x19, x19, #0xd0
 108:	cmp	x27, x20
 10c:	b.ne	e0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe0>  // b.any
 110:	sub	x0, x27, #0xd0
 114:	mov	x1, #0x4ec5                	// #20165
 118:	sub	x0, x0, x23
 11c:	movk	x1, #0xc4ec, lsl #16
 120:	movk	x1, #0xec4e, lsl #32
 124:	lsr	x0, x0, #4
 128:	movk	x1, #0xec4, lsl #48
 12c:	mul	x0, x0, x1
 130:	and	x0, x0, #0xfffffffffffffff
 134:	add	x0, x0, #0x2
 138:	add	x26, x0, x0, lsl #1
 13c:	add	x26, x0, x26, lsl #2
 140:	add	x26, x24, x26, lsl #4
 144:	adrp	x0, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 148:	cmp	x27, x21
 14c:	mov	x19, x26
 150:	mov	x20, x27
 154:	ldr	d8, [x0]
 158:	b.ne	170 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x170>  // b.any
 15c:	b	1d4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1d4>
 160:	add	x20, x20, #0xd0
 164:	add	x19, x19, #0xd0
 168:	cmp	x21, x20
 16c:	b.eq	1a0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a0>  // b.none
 170:	ldr	w0, [x20, #8]
 174:	add	x1, x19, #0x10
 178:	str	x1, [x19]
 17c:	str	d8, [x19, #8]
 180:	cbz	w0, 160 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x160>
 184:	mov	x1, x20
 188:	mov	x0, x19
 18c:	add	x20, x20, #0xd0
 190:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 194:	add	x19, x19, #0xd0
 198:	cmp	x21, x20
 19c:	b.ne	170 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x170>  // b.any
 1a0:	sub	x0, x21, x27
 1a4:	mov	x1, #0x4ec5                	// #20165
 1a8:	sub	x0, x0, #0xd0
 1ac:	movk	x1, #0xc4ec, lsl #16
 1b0:	movk	x1, #0xec4e, lsl #32
 1b4:	lsr	x0, x0, #4
 1b8:	movk	x1, #0xec4, lsl #48
 1bc:	mul	x0, x0, x1
 1c0:	and	x0, x0, #0xfffffffffffffff
 1c4:	add	x0, x0, #0x1
 1c8:	add	x1, x0, x0, lsl #1
 1cc:	add	x0, x0, x1, lsl #2
 1d0:	add	x26, x26, x0, lsl #4
 1d4:	cmp	x23, x21
 1d8:	mov	x20, x23
 1dc:	mov	w27, #0x30                  	// #48
 1e0:	b.eq	23c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x23c>  // b.none
 1e4:	nop
 1e8:	ldr	w19, [x20, #8]
 1ec:	ldr	x28, [x20]
 1f0:	umaddl	x19, w19, w27, x28
 1f4:	cmp	x28, x19
 1f8:	b.eq	21c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x21c>  // b.none
 1fc:	nop
 200:	ldur	x0, [x19, #-40]
 204:	sub	x19, x19, #0x30
 208:	cbz	x0, 2ac <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x2ac>
 20c:	bl	0 <_ZdlPv>
 210:	cmp	x28, x19
 214:	b.ne	200 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x200>  // b.any
 218:	ldr	x19, [x20]
 21c:	add	x0, x20, #0x10
 220:	cmp	x19, x0
 224:	b.eq	2b8 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x2b8>  // b.none
 228:	mov	x0, x19
 22c:	add	x20, x20, #0xd0
 230:	bl	0 <free>
 234:	cmp	x20, x21
 238:	b.ne	1e8 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1e8>  // b.any
 23c:	cbz	x23, 248 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x248>
 240:	mov	x0, x23
 244:	bl	0 <_ZdlPv>
 248:	ldp	x19, x20, [sp, #16]
 24c:	ldp	x27, x28, [sp, #80]
 250:	ldr	d8, [sp, #96]
 254:	stp	x24, x26, [x25]
 258:	str	x22, [x25, #16]
 25c:	ldp	x21, x22, [sp, #32]
 260:	ldp	x23, x24, [sp, #48]
 264:	ldp	x25, x26, [sp, #64]
 268:	ldp	x29, x30, [sp], #112
 26c:	ret
 270:	cbnz	x0, 2d0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x2d0>
 274:	adrp	x1, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 278:	mov	x24, #0x0                   	// #0
 27c:	add	x0, x24, x20
 280:	mov	x26, #0xd0                  	// #208
 284:	ldr	d0, [x1]
 288:	add	x2, x0, #0x10
 28c:	ldr	w1, [x19, #8]
 290:	mov	x22, #0x0                   	// #0
 294:	str	x2, [x24, x20]
 298:	str	d0, [x0, #8]
 29c:	cbz	w1, b4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb4>
 2a0:	mov	x1, x19
 2a4:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 2a8:	b	b4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb4>
 2ac:	cmp	x28, x19
 2b0:	b.ne	200 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x200>  // b.any
 2b4:	b	218 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x218>
 2b8:	add	x20, x20, #0xd0
 2bc:	cmp	x20, x21
 2c0:	b.ne	1e8 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1e8>  // b.any
 2c4:	b	23c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x23c>
 2c8:	mov	x22, #0xd0                  	// #208
 2cc:	b	80 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x80>
 2d0:	cmp	x0, x22
 2d4:	mov	x1, #0xd0                  	// #208
 2d8:	csel	x0, x0, x22, ls  // ls = plast
 2dc:	mul	x22, x0, x1
 2e0:	b	80 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x80>
 2e4:	adrp	x0, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 2e8:	add	x0, x0, #0x0
 2ec:	bl	0 <_ZSt20__throw_length_errorPKc>
