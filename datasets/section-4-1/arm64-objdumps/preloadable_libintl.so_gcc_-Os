
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//preloadable_libintl.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001c90 <.init>:
    1c90:	stp	x29, x30, [sp, #-16]!
    1c94:	mov	x29, sp
    1c98:	bl	21d0 <libintl_ngettext@plt+0x10>
    1c9c:	ldp	x29, x30, [sp], #16
    1ca0:	ret

Disassembly of section .plt:

0000000000001cb0 <memcpy@plt-0x20>:
    1cb0:	stp	x16, x30, [sp, #-16]!
    1cb4:	adrp	x16, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    1cb8:	ldr	x17, [x16, #4088]
    1cbc:	add	x16, x16, #0xff8
    1cc0:	br	x17
    1cc4:	nop
    1cc8:	nop
    1ccc:	nop

0000000000001cd0 <memcpy@plt>:
    1cd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16]
    1cd8:	add	x16, x16, #0x0
    1cdc:	br	x17

0000000000001ce0 <libintl_dngettext@plt>:
    1ce0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #8]
    1ce8:	add	x16, x16, #0x8
    1cec:	br	x17

0000000000001cf0 <pthread_rwlockattr_init@plt>:
    1cf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #16]
    1cf8:	add	x16, x16, #0x10
    1cfc:	br	x17

0000000000001d00 <getcwd@plt>:
    1d00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #24]
    1d08:	add	x16, x16, #0x18
    1d0c:	br	x17

0000000000001d10 <strtoul@plt>:
    1d10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #32]
    1d18:	add	x16, x16, #0x20
    1d1c:	br	x17

0000000000001d20 <strlen@plt>:
    1d20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #40]
    1d28:	add	x16, x16, #0x28
    1d2c:	br	x17

0000000000001d30 <fputs@plt>:
    1d30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #48]
    1d38:	add	x16, x16, #0x30
    1d3c:	br	x17

0000000000001d40 <raise@plt>:
    1d40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #56]
    1d48:	add	x16, x16, #0x38
    1d4c:	br	x17

0000000000001d50 <pthread_mutexattr_settype@plt>:
    1d50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #64]
    1d58:	add	x16, x16, #0x40
    1d5c:	br	x17

0000000000001d60 <pthread_rwlock_rdlock@plt>:
    1d60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #72]
    1d68:	add	x16, x16, #0x48
    1d6c:	br	x17

0000000000001d70 <getegid@plt>:
    1d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #80]
    1d78:	add	x16, x16, #0x50
    1d7c:	br	x17

0000000000001d80 <geteuid@plt>:
    1d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #88]
    1d88:	add	x16, x16, #0x58
    1d8c:	br	x17

0000000000001d90 <pthread_rwlock_init@plt>:
    1d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #96]
    1d98:	add	x16, x16, #0x60
    1d9c:	br	x17

0000000000001da0 <pthread_rwlockattr_setkind_np@plt>:
    1da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #104]
    1da8:	add	x16, x16, #0x68
    1dac:	br	x17

0000000000001db0 <fgets_unlocked@plt>:
    1db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #112]
    1db8:	add	x16, x16, #0x70
    1dbc:	br	x17

0000000000001dc0 <__cxa_finalize@plt>:
    1dc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #120]
    1dc8:	add	x16, x16, #0x78
    1dcc:	br	x17

0000000000001dd0 <getuid@plt>:
    1dd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #128]
    1dd8:	add	x16, x16, #0x80
    1ddc:	br	x17

0000000000001de0 <putc@plt>:
    1de0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #136]
    1de8:	add	x16, x16, #0x88
    1dec:	br	x17

0000000000001df0 <qsort@plt>:
    1df0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #144]
    1df8:	add	x16, x16, #0x90
    1dfc:	br	x17

0000000000001e00 <libintl_textdomain@plt>:
    1e00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #152]
    1e08:	add	x16, x16, #0x98
    1e0c:	br	x17

0000000000001e10 <libintl_dcgettext@plt>:
    1e10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #160]
    1e18:	add	x16, x16, #0xa0
    1e1c:	br	x17

0000000000001e20 <__ctype_tolower_loc@plt>:
    1e20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #168]
    1e28:	add	x16, x16, #0xa8
    1e2c:	br	x17

0000000000001e30 <tfind@plt>:
    1e30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #176]
    1e38:	add	x16, x16, #0xb0
    1e3c:	br	x17

0000000000001e40 <stpcpy@plt>:
    1e40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #184]
    1e48:	add	x16, x16, #0xb8
    1e4c:	br	x17

0000000000001e50 <fclose@plt>:
    1e50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #192]
    1e58:	add	x16, x16, #0xc0
    1e5c:	br	x17

0000000000001e60 <nl_langinfo@plt>:
    1e60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #200]
    1e68:	add	x16, x16, #0xc8
    1e6c:	br	x17

0000000000001e70 <fopen@plt>:
    1e70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #208]
    1e78:	add	x16, x16, #0xd0
    1e7c:	br	x17

0000000000001e80 <malloc@plt>:
    1e80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #216]
    1e88:	add	x16, x16, #0xd8
    1e8c:	br	x17

0000000000001e90 <pthread_rwlock_destroy@plt>:
    1e90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #224]
    1e98:	add	x16, x16, #0xe0
    1e9c:	br	x17

0000000000001ea0 <open@plt>:
    1ea0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #232]
    1ea8:	add	x16, x16, #0xe8
    1eac:	br	x17

0000000000001eb0 <strncmp@plt>:
    1eb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #240]
    1eb8:	add	x16, x16, #0xf0
    1ebc:	br	x17

0000000000001ec0 <_nl_expand_alias@plt>:
    1ec0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #248]
    1ec8:	add	x16, x16, #0xf8
    1ecc:	br	x17

0000000000001ed0 <libintl_dcngettext@plt>:
    1ed0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #256]
    1ed8:	add	x16, x16, #0x100
    1edc:	br	x17

0000000000001ee0 <tsearch@plt>:
    1ee0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #264]
    1ee8:	add	x16, x16, #0x108
    1eec:	br	x17

0000000000001ef0 <libintl_bind_textdomain_codeset@plt>:
    1ef0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #272]
    1ef8:	add	x16, x16, #0x110
    1efc:	br	x17

0000000000001f00 <libintl_bindtextdomain@plt>:
    1f00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #280]
    1f08:	add	x16, x16, #0x118
    1f0c:	br	x17

0000000000001f10 <calloc@plt>:
    1f10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #288]
    1f18:	add	x16, x16, #0x120
    1f1c:	br	x17

0000000000001f20 <argz_stringify@plt>:
    1f20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #296]
    1f28:	add	x16, x16, #0x128
    1f2c:	br	x17

0000000000001f30 <bsearch@plt>:
    1f30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #304]
    1f38:	add	x16, x16, #0x130
    1f3c:	br	x17

0000000000001f40 <strcasecmp@plt>:
    1f40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #312]
    1f48:	add	x16, x16, #0x138
    1f4c:	br	x17

0000000000001f50 <realloc@plt>:
    1f50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #320]
    1f58:	add	x16, x16, #0x140
    1f5c:	br	x17

0000000000001f60 <strdup@plt>:
    1f60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #328]
    1f68:	add	x16, x16, #0x148
    1f6c:	br	x17

0000000000001f70 <pthread_mutex_init@plt>:
    1f70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #336]
    1f78:	add	x16, x16, #0x150
    1f7c:	br	x17

0000000000001f80 <close@plt>:
    1f80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #344]
    1f88:	add	x16, x16, #0x158
    1f8c:	br	x17

0000000000001f90 <__gmon_start__@plt>:
    1f90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #352]
    1f98:	add	x16, x16, #0x160
    1f9c:	br	x17

0000000000001fa0 <abort@plt>:
    1fa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #360]
    1fa8:	add	x16, x16, #0x168
    1fac:	br	x17

0000000000001fb0 <pthread_rwlock_wrlock@plt>:
    1fb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #368]
    1fb8:	add	x16, x16, #0x170
    1fbc:	br	x17

0000000000001fc0 <dcgettext@plt>:
    1fc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #376]
    1fc8:	add	x16, x16, #0x178
    1fcc:	br	x17

0000000000001fd0 <argz_next@plt>:
    1fd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #384]
    1fd8:	add	x16, x16, #0x180
    1fdc:	br	x17

0000000000001fe0 <argz_count@plt>:
    1fe0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #392]
    1fe8:	add	x16, x16, #0x188
    1fec:	br	x17

0000000000001ff0 <strcmp@plt>:
    1ff0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #400]
    1ff8:	add	x16, x16, #0x190
    1ffc:	br	x17

0000000000002000 <iconv@plt>:
    2000:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #408]
    2008:	add	x16, x16, #0x198
    200c:	br	x17

0000000000002010 <__ctype_b_loc@plt>:
    2010:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #416]
    2018:	add	x16, x16, #0x1a0
    201c:	br	x17

0000000000002020 <mmap@plt>:
    2020:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2024:	ldr	x17, [x16, #424]
    2028:	add	x16, x16, #0x1a8
    202c:	br	x17

0000000000002030 <uselocale@plt>:
    2030:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2034:	ldr	x17, [x16, #432]
    2038:	add	x16, x16, #0x1b0
    203c:	br	x17

0000000000002040 <free@plt>:
    2040:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2044:	ldr	x17, [x16, #440]
    2048:	add	x16, x16, #0x1b8
    204c:	br	x17

0000000000002050 <getgid@plt>:
    2050:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2054:	ldr	x17, [x16, #448]
    2058:	add	x16, x16, #0x1c0
    205c:	br	x17

0000000000002060 <mempcpy@plt>:
    2060:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2064:	ldr	x17, [x16, #456]
    2068:	add	x16, x16, #0x1c8
    206c:	br	x17

0000000000002070 <pthread_rwlock_unlock@plt>:
    2070:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2074:	ldr	x17, [x16, #464]
    2078:	add	x16, x16, #0x1d0
    207c:	br	x17

0000000000002080 <libintl_dgettext@plt>:
    2080:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2084:	ldr	x17, [x16, #472]
    2088:	add	x16, x16, #0x1d8
    208c:	br	x17

0000000000002090 <strchr@plt>:
    2090:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2094:	ldr	x17, [x16, #480]
    2098:	add	x16, x16, #0x1e0
    209c:	br	x17

00000000000020a0 <feof_unlocked@plt>:
    20a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16, #488]
    20a8:	add	x16, x16, #0x1e8
    20ac:	br	x17

00000000000020b0 <munmap@plt>:
    20b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #496]
    20b8:	add	x16, x16, #0x1f0
    20bc:	br	x17

00000000000020c0 <strcpy@plt>:
    20c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #504]
    20c8:	add	x16, x16, #0x1f8
    20cc:	br	x17

00000000000020d0 <iconv_open@plt>:
    20d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #512]
    20d8:	add	x16, x16, #0x200
    20dc:	br	x17

00000000000020e0 <read@plt>:
    20e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #520]
    20e8:	add	x16, x16, #0x208
    20ec:	br	x17

00000000000020f0 <pthread_mutexattr_init@plt>:
    20f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #528]
    20f8:	add	x16, x16, #0x210
    20fc:	br	x17

0000000000002100 <__fxstat@plt>:
    2100:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #536]
    2108:	add	x16, x16, #0x218
    210c:	br	x17

0000000000002110 <pthread_mutexattr_destroy@plt>:
    2110:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #544]
    2118:	add	x16, x16, #0x220
    211c:	br	x17

0000000000002120 <strstr@plt>:
    2120:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #552]
    2128:	add	x16, x16, #0x228
    212c:	br	x17

0000000000002130 <pthread_rwlockattr_destroy@plt>:
    2130:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #560]
    2138:	add	x16, x16, #0x230
    213c:	br	x17

0000000000002140 <__fsetlocking@plt>:
    2140:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #568]
    2148:	add	x16, x16, #0x238
    214c:	br	x17

0000000000002150 <strcspn@plt>:
    2150:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #576]
    2158:	add	x16, x16, #0x240
    215c:	br	x17

0000000000002160 <__errno_location@plt>:
    2160:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #584]
    2168:	add	x16, x16, #0x248
    216c:	br	x17

0000000000002170 <getenv@plt>:
    2170:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #592]
    2178:	add	x16, x16, #0x250
    217c:	br	x17

0000000000002180 <pthread_mutex_lock@plt>:
    2180:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #600]
    2188:	add	x16, x16, #0x258
    218c:	br	x17

0000000000002190 <pthread_mutex_unlock@plt>:
    2190:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #608]
    2198:	add	x16, x16, #0x260
    219c:	br	x17

00000000000021a0 <libintl_gettext@plt>:
    21a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #616]
    21a8:	add	x16, x16, #0x268
    21ac:	br	x17

00000000000021b0 <setlocale@plt>:
    21b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21b4:	ldr	x17, [x16, #624]
    21b8:	add	x16, x16, #0x270
    21bc:	br	x17

00000000000021c0 <libintl_ngettext@plt>:
    21c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21c4:	ldr	x17, [x16, #632]
    21c8:	add	x16, x16, #0x278
    21cc:	br	x17

Disassembly of section .text:

00000000000021d0 <libintl_bindtextdomain@@Base-0x3d4>:
    21d0:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    21d4:	ldr	x0, [x0, #4016]
    21d8:	cbz	x0, 21e0 <libintl_ngettext@plt+0x20>
    21dc:	b	1f90 <__gmon_start__@plt>
    21e0:	ret
    21e4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    21e8:	add	x0, x0, #0x370
    21ec:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    21f0:	add	x1, x1, #0x370
    21f4:	cmp	x1, x0
    21f8:	b.eq	2210 <libintl_ngettext@plt+0x50>  // b.none
    21fc:	adrp	x1, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    2200:	ldr	x1, [x1, #3984]
    2204:	cbz	x1, 2210 <libintl_ngettext@plt+0x50>
    2208:	mov	x16, x1
    220c:	br	x16
    2210:	ret
    2214:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    2218:	add	x0, x0, #0x370
    221c:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    2220:	add	x1, x1, #0x370
    2224:	sub	x1, x1, x0
    2228:	mov	x2, #0x2                   	// #2
    222c:	asr	x1, x1, #3
    2230:	sdiv	x1, x1, x2
    2234:	cbz	x1, 224c <libintl_ngettext@plt+0x8c>
    2238:	adrp	x2, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    223c:	ldr	x2, [x2, #4056]
    2240:	cbz	x2, 224c <libintl_ngettext@plt+0x8c>
    2244:	mov	x16, x2
    2248:	br	x16
    224c:	ret
    2250:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    2254:	ldrb	w1, [x0, #880]
    2258:	cbnz	w1, 229c <libintl_ngettext@plt+0xdc>
    225c:	stp	x29, x30, [sp, #-32]!
    2260:	mov	x29, sp
    2264:	str	x19, [sp, #16]
    2268:	mov	x19, x0
    226c:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    2270:	ldr	x0, [x0, #3992]
    2274:	cbz	x0, 2284 <libintl_ngettext@plt+0xc4>
    2278:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    227c:	ldr	x0, [x0, #640]
    2280:	bl	1dc0 <__cxa_finalize@plt>
    2284:	bl	21e4 <libintl_ngettext@plt+0x24>
    2288:	mov	w0, #0x1                   	// #1
    228c:	strb	w0, [x19, #880]
    2290:	ldr	x19, [sp, #16]
    2294:	ldp	x29, x30, [sp], #32
    2298:	ret
    229c:	ret
    22a0:	b	2214 <libintl_ngettext@plt+0x54>
    22a4:	stp	x29, x30, [sp, #-96]!
    22a8:	mov	x29, sp
    22ac:	stp	x25, x26, [sp, #64]
    22b0:	adrp	x25, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    22b4:	stp	x23, x24, [sp, #48]
    22b8:	mov	x24, x0
    22bc:	ldr	x0, [x25, #4064]
    22c0:	stp	x19, x20, [sp, #16]
    22c4:	mov	x20, x1
    22c8:	stp	x21, x22, [sp, #32]
    22cc:	mov	x19, x2
    22d0:	stp	x27, x28, [sp, #80]
    22d4:	cbz	x0, 22ec <libintl_ngettext@plt+0x12c>
    22d8:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    22dc:	ldr	x0, [x0, #4048]
    22e0:	bl	1fb0 <pthread_rwlock_wrlock@plt>
    22e4:	cbz	w0, 22ec <libintl_ngettext@plt+0x12c>
    22e8:	bl	1fa0 <abort@plt>
    22ec:	adrp	x26, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    22f0:	ldr	x0, [x26, #4000]
    22f4:	ldr	x22, [x0]
    22f8:	mov	x23, x22
    22fc:	cbnz	x23, 230c <libintl_ngettext@plt+0x14c>
    2300:	cbnz	x20, 23e4 <libintl_ngettext@plt+0x224>
    2304:	cbnz	x19, 23f0 <libintl_ngettext@plt+0x230>
    2308:	b	2410 <libintl_ngettext@plt+0x250>
    230c:	add	x1, x23, #0x18
    2310:	mov	x0, x24
    2314:	bl	1ff0 <strcmp@plt>
    2318:	cmp	w0, #0x0
    231c:	cbz	w0, 2574 <libintl_ngettext@plt+0x3b4>
    2320:	b.lt	2300 <libintl_ngettext@plt+0x140>  // b.tstop
    2324:	ldr	x23, [x23]
    2328:	b	22fc <libintl_ngettext@plt+0x13c>
    232c:	mov	x1, x24
    2330:	mov	x0, x26
    2334:	bl	1ff0 <strcmp@plt>
    2338:	mov	w22, w0
    233c:	cbz	w0, 2394 <libintl_ngettext@plt+0x1d4>
    2340:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    2344:	mov	x0, x26
    2348:	ldr	x21, [x22, #4040]
    234c:	mov	x1, x21
    2350:	bl	1ff0 <strcmp@plt>
    2354:	cbz	w0, 2368 <libintl_ngettext@plt+0x1a8>
    2358:	mov	x0, x26
    235c:	bl	1f60 <strdup@plt>
    2360:	mov	x21, x0
    2364:	cbz	x0, 239c <libintl_ngettext@plt+0x1dc>
    2368:	ldr	x22, [x22, #4040]
    236c:	cmp	x24, x22
    2370:	b.eq	237c <libintl_ngettext@plt+0x1bc>  // b.none
    2374:	mov	x0, x24
    2378:	bl	2040 <free@plt>
    237c:	mov	w22, #0x1                   	// #1
    2380:	str	x21, [x23, #8]
    2384:	str	x21, [x20]
    2388:	cbnz	x19, 2590 <libintl_ngettext@plt+0x3d0>
    238c:	cbnz	w22, 252c <libintl_ngettext@plt+0x36c>
    2390:	b	2410 <libintl_ngettext@plt+0x250>
    2394:	mov	x21, x24
    2398:	b	2384 <libintl_ngettext@plt+0x1c4>
    239c:	mov	w22, #0x0                   	// #0
    23a0:	b	2384 <libintl_ngettext@plt+0x1c4>
    23a4:	cbz	x20, 23b8 <libintl_ngettext@plt+0x1f8>
    23a8:	mov	x1, x20
    23ac:	mov	x0, x21
    23b0:	bl	1ff0 <strcmp@plt>
    23b4:	cbz	w0, 259c <libintl_ngettext@plt+0x3dc>
    23b8:	mov	x0, x21
    23bc:	bl	1f60 <strdup@plt>
    23c0:	mov	x21, x0
    23c4:	cbz	x0, 23dc <libintl_ngettext@plt+0x21c>
    23c8:	mov	x0, x20
    23cc:	bl	2040 <free@plt>
    23d0:	str	x21, [x23, #16]
    23d4:	str	x21, [x19]
    23d8:	b	252c <libintl_ngettext@plt+0x36c>
    23dc:	mov	x20, #0x0                   	// #0
    23e0:	b	259c <libintl_ngettext@plt+0x3dc>
    23e4:	ldr	x0, [x20]
    23e8:	cbnz	x0, 2444 <libintl_ngettext@plt+0x284>
    23ec:	cbz	x19, 23fc <libintl_ngettext@plt+0x23c>
    23f0:	ldr	x0, [x19]
    23f4:	cbnz	x0, 2444 <libintl_ngettext@plt+0x284>
    23f8:	cbz	x20, 240c <libintl_ngettext@plt+0x24c>
    23fc:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    2400:	ldr	x0, [x0, #4040]
    2404:	str	x0, [x20]
    2408:	cbz	x19, 2410 <libintl_ngettext@plt+0x250>
    240c:	str	xzr, [x19]
    2410:	ldr	x25, [x25, #4064]
    2414:	cbz	x25, 2428 <libintl_ngettext@plt+0x268>
    2418:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    241c:	ldr	x0, [x0, #4048]
    2420:	bl	2070 <pthread_rwlock_unlock@plt>
    2424:	cbnz	w0, 22e8 <libintl_ngettext@plt+0x128>
    2428:	ldp	x19, x20, [sp, #16]
    242c:	ldp	x21, x22, [sp, #32]
    2430:	ldp	x23, x24, [sp, #48]
    2434:	ldp	x25, x26, [sp, #64]
    2438:	ldp	x27, x28, [sp, #80]
    243c:	ldp	x29, x30, [sp], #96
    2440:	ret
    2444:	mov	x0, x24
    2448:	bl	1d20 <strlen@plt>
    244c:	add	x23, x0, #0x1
    2450:	add	x0, x0, #0x19
    2454:	bl	1e80 <malloc@plt>
    2458:	mov	x21, x0
    245c:	cbz	x0, 24ac <libintl_ngettext@plt+0x2ec>
    2460:	mov	x2, x23
    2464:	mov	x1, x24
    2468:	add	x0, x0, #0x18
    246c:	adrp	x27, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    2470:	bl	1cd0 <memcpy@plt>
    2474:	cbz	x20, 24f8 <libintl_ngettext@plt+0x338>
    2478:	ldr	x28, [x20]
    247c:	cbz	x28, 24b8 <libintl_ngettext@plt+0x2f8>
    2480:	ldr	x23, [x27, #4040]
    2484:	mov	x0, x28
    2488:	mov	x1, x23
    248c:	bl	1ff0 <strcmp@plt>
    2490:	cbz	w0, 24f0 <libintl_ngettext@plt+0x330>
    2494:	mov	x0, x28
    2498:	bl	1f60 <strdup@plt>
    249c:	mov	x1, x0
    24a0:	cbnz	x0, 24bc <libintl_ngettext@plt+0x2fc>
    24a4:	mov	x0, x21
    24a8:	bl	2040 <free@plt>
    24ac:	cbz	x20, 2408 <libintl_ngettext@plt+0x248>
    24b0:	str	xzr, [x20]
    24b4:	b	2408 <libintl_ngettext@plt+0x248>
    24b8:	ldr	x1, [x27, #4040]
    24bc:	str	x1, [x20]
    24c0:	str	x1, [x21, #8]
    24c4:	cbz	x19, 2544 <libintl_ngettext@plt+0x384>
    24c8:	ldr	x0, [x19]
    24cc:	cbz	x0, 2504 <libintl_ngettext@plt+0x344>
    24d0:	bl	1f60 <strdup@plt>
    24d4:	cbnz	x0, 2504 <libintl_ngettext@plt+0x344>
    24d8:	ldr	x27, [x27, #4040]
    24dc:	ldr	x0, [x21, #8]
    24e0:	cmp	x0, x27
    24e4:	b.eq	24a4 <libintl_ngettext@plt+0x2e4>  // b.none
    24e8:	bl	2040 <free@plt>
    24ec:	b	24a4 <libintl_ngettext@plt+0x2e4>
    24f0:	mov	x1, x23
    24f4:	b	24bc <libintl_ngettext@plt+0x2fc>
    24f8:	ldr	x0, [x27, #4040]
    24fc:	str	x0, [x21, #8]
    2500:	b	24c4 <libintl_ngettext@plt+0x304>
    2504:	str	x0, [x19]
    2508:	str	x0, [x21, #16]
    250c:	cbz	x22, 2520 <libintl_ngettext@plt+0x360>
    2510:	add	x1, x22, #0x18
    2514:	mov	x0, x24
    2518:	bl	1ff0 <strcmp@plt>
    251c:	tbz	w0, #31, 254c <libintl_ngettext@plt+0x38c>
    2520:	ldr	x26, [x26, #4000]
    2524:	str	x22, [x21]
    2528:	str	x21, [x26]
    252c:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    2530:	ldr	x0, [x0, #4032]
    2534:	ldr	w1, [x0]
    2538:	add	w1, w1, #0x1
    253c:	str	w1, [x0]
    2540:	b	2410 <libintl_ngettext@plt+0x250>
    2544:	str	xzr, [x21, #16]
    2548:	b	250c <libintl_ngettext@plt+0x34c>
    254c:	mov	x19, x22
    2550:	ldr	x22, [x22]
    2554:	cbz	x22, 256c <libintl_ngettext@plt+0x3ac>
    2558:	add	x1, x22, #0x18
    255c:	mov	x0, x24
    2560:	bl	1ff0 <strcmp@plt>
    2564:	cmp	w0, #0x0
    2568:	b.gt	254c <libintl_ngettext@plt+0x38c>
    256c:	str	x22, [x21]
    2570:	b	23d4 <libintl_ngettext@plt+0x214>
    2574:	cbz	x20, 2588 <libintl_ngettext@plt+0x3c8>
    2578:	ldr	x26, [x20]
    257c:	ldr	x24, [x23, #8]
    2580:	cbnz	x26, 232c <libintl_ngettext@plt+0x16c>
    2584:	str	x24, [x20]
    2588:	cbz	x19, 2410 <libintl_ngettext@plt+0x250>
    258c:	mov	w22, #0x0                   	// #0
    2590:	ldr	x21, [x19]
    2594:	ldr	x20, [x23, #16]
    2598:	cbnz	x21, 23a4 <libintl_ngettext@plt+0x1e4>
    259c:	str	x20, [x19]
    25a0:	b	238c <libintl_ngettext@plt+0x1cc>

00000000000025a4 <libintl_bindtextdomain@@Base>:
    25a4:	stp	x29, x30, [sp, #-32]!
    25a8:	mov	x29, sp
    25ac:	str	x1, [sp, #24]
    25b0:	cbz	x0, 25bc <libintl_bindtextdomain@@Base+0x18>
    25b4:	ldrb	w1, [x0]
    25b8:	cbnz	w1, 25cc <libintl_bindtextdomain@@Base+0x28>
    25bc:	str	xzr, [sp, #24]
    25c0:	ldr	x0, [sp, #24]
    25c4:	ldp	x29, x30, [sp], #32
    25c8:	ret
    25cc:	add	x1, sp, #0x18
    25d0:	mov	x2, #0x0                   	// #0
    25d4:	bl	22a4 <libintl_ngettext@plt+0xe4>
    25d8:	b	25c0 <libintl_bindtextdomain@@Base+0x1c>

00000000000025dc <libintl_bind_textdomain_codeset@@Base>:
    25dc:	stp	x29, x30, [sp, #-32]!
    25e0:	mov	x29, sp
    25e4:	str	x1, [sp, #24]
    25e8:	cbz	x0, 25f4 <libintl_bind_textdomain_codeset@@Base+0x18>
    25ec:	ldrb	w1, [x0]
    25f0:	cbnz	w1, 2604 <libintl_bind_textdomain_codeset@@Base+0x28>
    25f4:	str	xzr, [sp, #24]
    25f8:	ldr	x0, [sp, #24]
    25fc:	ldp	x29, x30, [sp], #32
    2600:	ret
    2604:	add	x2, sp, #0x18
    2608:	mov	x1, #0x0                   	// #0
    260c:	bl	22a4 <libintl_ngettext@plt+0xe4>
    2610:	b	25f8 <libintl_bind_textdomain_codeset@@Base+0x1c>

0000000000002614 <libintl_dcgettext@@Base>:
    2614:	mov	w5, w2
    2618:	mov	x4, #0x0                   	// #0
    261c:	mov	w3, #0x0                   	// #0
    2620:	mov	x2, #0x0                   	// #0
    2624:	b	5250 <libintl_textdomain@@Base+0x11b4>

0000000000002628 <libintl_dgettext@@Base>:
    2628:	mov	w2, #0x5                   	// #5
    262c:	b	1e10 <libintl_dcgettext@plt>

0000000000002630 <libintl_gettext@@Base>:
    2630:	mov	x1, x0
    2634:	mov	w2, #0x5                   	// #5
    2638:	mov	x0, #0x0                   	// #0
    263c:	b	1e10 <libintl_dcgettext@plt>
    2640:	sub	sp, sp, #0xb0
    2644:	stp	x29, x30, [sp, #32]
    2648:	add	x29, sp, #0x20
    264c:	stp	x21, x22, [sp, #64]
    2650:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    2654:	mov	x22, x3
    2658:	stp	x23, x24, [sp, #80]
    265c:	mov	x23, x0
    2660:	ldr	x0, [x21, #4064]
    2664:	stp	x19, x20, [sp, #48]
    2668:	mov	x20, x1
    266c:	stp	x25, x26, [sp, #96]
    2670:	str	x27, [sp, #112]
    2674:	mov	x27, x2
    2678:	cbz	x0, 2690 <libintl_gettext@@Base+0x60>
    267c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    2680:	add	x0, x0, #0x288
    2684:	bl	1d60 <pthread_rwlock_rdlock@plt>
    2688:	cbz	w0, 2690 <libintl_gettext@@Base+0x60>
    268c:	bl	1fa0 <abort@plt>
    2690:	mov	x0, x23
    2694:	bl	1d20 <strlen@plt>
    2698:	stp	xzr, x27, [sp]
    269c:	add	x2, x0, #0x1
    26a0:	mov	x4, x20
    26a4:	str	wzr, [sp, #16]
    26a8:	mov	x1, x23
    26ac:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    26b0:	mov	x7, #0x0                   	// #0
    26b4:	add	x0, x26, #0x378
    26b8:	mov	x6, #0x0                   	// #0
    26bc:	mov	x5, #0x0                   	// #0
    26c0:	mov	w3, #0x0                   	// #0
    26c4:	bl	41a8 <libintl_textdomain@@Base+0x10c>
    26c8:	mov	x19, x0
    26cc:	ldr	x0, [x21, #4064]
    26d0:	cbz	x0, 26e4 <libintl_gettext@@Base+0xb4>
    26d4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    26d8:	add	x0, x0, #0x288
    26dc:	bl	2070 <pthread_rwlock_unlock@plt>
    26e0:	cbnz	w0, 268c <libintl_gettext@@Base+0x5c>
    26e4:	cbz	x19, 2760 <libintl_gettext@@Base+0x130>
    26e8:	ldr	w0, [x19, #8]
    26ec:	cmp	w0, #0x0
    26f0:	b.gt	2700 <libintl_gettext@@Base+0xd0>
    26f4:	mov	x1, x22
    26f8:	mov	x0, x19
    26fc:	bl	28c8 <libintl_gettext@@Base+0x298>
    2700:	ldr	x0, [x19, #16]
    2704:	cbnz	x0, 273c <libintl_gettext@@Base+0x10c>
    2708:	add	x20, x19, #0x20
    270c:	ldr	x0, [x20]
    2710:	mov	x21, x20
    2714:	cbz	x0, 273c <libintl_gettext@@Base+0x10c>
    2718:	ldr	w1, [x0, #8]
    271c:	cmp	w1, #0x0
    2720:	b.gt	272c <libintl_gettext@@Base+0xfc>
    2724:	mov	x1, x22
    2728:	bl	28c8 <libintl_gettext@@Base+0x298>
    272c:	ldr	x0, [x21]
    2730:	add	x20, x20, #0x8
    2734:	ldr	x0, [x0, #16]
    2738:	cbz	x0, 270c <libintl_gettext@@Base+0xdc>
    273c:	mov	x0, x19
    2740:	ldp	x29, x30, [sp, #32]
    2744:	ldp	x19, x20, [sp, #48]
    2748:	ldp	x21, x22, [sp, #64]
    274c:	ldp	x23, x24, [sp, #80]
    2750:	ldp	x25, x26, [sp, #96]
    2754:	ldr	x27, [sp, #112]
    2758:	add	sp, sp, #0xb0
    275c:	ret
    2760:	mov	x0, x20
    2764:	bl	1ec0 <_nl_expand_alias@plt>
    2768:	mov	x25, x0
    276c:	cbz	x0, 277c <libintl_gettext@@Base+0x14c>
    2770:	bl	1f60 <strdup@plt>
    2774:	mov	x20, x0
    2778:	cbz	x0, 273c <libintl_gettext@@Base+0x10c>
    277c:	add	x5, sp, #0xa8
    2780:	add	x4, sp, #0xa0
    2784:	add	x3, sp, #0x98
    2788:	add	x2, sp, #0x90
    278c:	add	x1, sp, #0x88
    2790:	mov	x0, x20
    2794:	bl	4694 <libintl_textdomain@@Base+0x5f8>
    2798:	mov	w24, w0
    279c:	cmn	w0, #0x1
    27a0:	b.eq	273c <libintl_gettext@@Base+0x10c>  // b.none
    27a4:	ldr	x0, [x21, #4064]
    27a8:	cbz	x0, 27bc <libintl_gettext@@Base+0x18c>
    27ac:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    27b0:	add	x0, x0, #0x288
    27b4:	bl	1fb0 <pthread_rwlock_wrlock@plt>
    27b8:	cbnz	w0, 268c <libintl_gettext@@Base+0x5c>
    27bc:	mov	x0, x23
    27c0:	bl	1d20 <strlen@plt>
    27c4:	ldp	x5, x6, [sp, #152]
    27c8:	mov	w1, #0x1                   	// #1
    27cc:	ldr	x4, [sp, #136]
    27d0:	str	w1, [sp, #16]
    27d4:	ldr	x7, [sp, #168]
    27d8:	str	x27, [sp, #8]
    27dc:	ldr	x1, [sp, #144]
    27e0:	str	x1, [sp]
    27e4:	add	x2, x0, #0x1
    27e8:	mov	w3, w24
    27ec:	add	x0, x26, #0x378
    27f0:	mov	x1, x23
    27f4:	bl	41a8 <libintl_textdomain@@Base+0x10c>
    27f8:	mov	x19, x0
    27fc:	ldr	x21, [x21, #4064]
    2800:	cbz	x21, 2814 <libintl_gettext@@Base+0x1e4>
    2804:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    2808:	add	x0, x0, #0x288
    280c:	bl	2070 <pthread_rwlock_unlock@plt>
    2810:	cbnz	w0, 268c <libintl_gettext@@Base+0x5c>
    2814:	cbz	x19, 2870 <libintl_gettext@@Base+0x240>
    2818:	ldr	w0, [x19, #8]
    281c:	cmp	w0, #0x0
    2820:	b.gt	2830 <libintl_gettext@@Base+0x200>
    2824:	mov	x1, x22
    2828:	mov	x0, x19
    282c:	bl	28c8 <libintl_gettext@@Base+0x298>
    2830:	ldr	x0, [x19, #16]
    2834:	cbnz	x0, 286c <libintl_gettext@@Base+0x23c>
    2838:	add	x21, x19, #0x20
    283c:	ldr	x0, [x21]
    2840:	mov	x23, x21
    2844:	cbz	x0, 286c <libintl_gettext@@Base+0x23c>
    2848:	ldr	w1, [x0, #8]
    284c:	cmp	w1, #0x0
    2850:	b.gt	285c <libintl_gettext@@Base+0x22c>
    2854:	mov	x1, x22
    2858:	bl	28c8 <libintl_gettext@@Base+0x298>
    285c:	ldr	x0, [x23]
    2860:	add	x21, x21, #0x8
    2864:	ldr	x0, [x0, #16]
    2868:	cbz	x0, 283c <libintl_gettext@@Base+0x20c>
    286c:	cbnz	x25, 2880 <libintl_gettext@@Base+0x250>
    2870:	tbz	w24, #0, 273c <libintl_gettext@@Base+0x10c>
    2874:	ldr	x0, [sp, #168]
    2878:	bl	2040 <free@plt>
    287c:	b	273c <libintl_gettext@@Base+0x10c>
    2880:	mov	x0, x20
    2884:	bl	2040 <free@plt>
    2888:	b	2870 <libintl_gettext@@Base+0x240>
    288c:	mov	x1, x0
    2890:	mov	x0, #0x0                   	// #0
    2894:	ldrb	w2, [x1]
    2898:	cbnz	w2, 28a0 <libintl_gettext@@Base+0x270>
    289c:	ret
    28a0:	and	x2, x2, #0xff
    28a4:	add	x1, x1, #0x1
    28a8:	add	x0, x2, x0, lsl #4
    28ac:	ands	x2, x0, #0xf0000000
    28b0:	b.eq	2894 <libintl_gettext@@Base+0x264>  // b.none
    28b4:	and	x0, x0, #0xffffffff0fffffff
    28b8:	eor	x0, x0, x2, lsr #24
    28bc:	b	2894 <libintl_gettext@@Base+0x264>
    28c0:	rev	w0, w0
    28c4:	ret
    28c8:	stp	x29, x30, [sp, #-400]!
    28cc:	mov	x29, sp
    28d0:	stp	x19, x20, [sp, #16]
    28d4:	str	x0, [x29, #240]
    28d8:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    28dc:	str	x1, [x29, #120]
    28e0:	ldr	x1, [x0, #4064]
    28e4:	stp	x21, x22, [sp, #32]
    28e8:	stp	x23, x24, [sp, #48]
    28ec:	stp	x25, x26, [sp, #64]
    28f0:	stp	x27, x28, [sp, #80]
    28f4:	str	x0, [x29, #136]
    28f8:	cbz	x1, 2910 <libintl_gettext@@Base+0x2e0>
    28fc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    2900:	add	x0, x0, #0x2c0
    2904:	bl	2180 <pthread_mutex_lock@plt>
    2908:	cbz	w0, 2910 <libintl_gettext@@Base+0x2e0>
    290c:	bl	1fa0 <abort@plt>
    2910:	ldr	x0, [x29, #240]
    2914:	ldr	w0, [x0, #8]
    2918:	cbnz	w0, 29e0 <libintl_gettext@@Base+0x3b0>
    291c:	ldr	x1, [x29, #240]
    2920:	mov	w0, #0xffffffff            	// #-1
    2924:	str	w0, [x1, #8]
    2928:	ldr	x0, [x1]
    292c:	str	xzr, [x1, #16]
    2930:	cbz	x0, 29d4 <libintl_gettext@@Base+0x3a4>
    2934:	mov	w1, #0x0                   	// #0
    2938:	bl	1ea0 <open@plt>
    293c:	mov	w19, w0
    2940:	cmn	w0, #0x1
    2944:	b.eq	29d4 <libintl_gettext@@Base+0x3a4>  // b.none
    2948:	add	x1, x29, #0x110
    294c:	bl	6a48 <bind_textdomain_codeset@@Base+0x8>
    2950:	cbnz	w0, 3be8 <libintl_gettext@@Base+0x15b8>
    2954:	ldr	x28, [x29, #320]
    2958:	cmp	x28, #0x2f
    295c:	b.ls	3be8 <libintl_gettext@@Base+0x15b8>  // b.plast
    2960:	mov	w4, w19
    2964:	mov	x1, x28
    2968:	mov	x5, #0x0                   	// #0
    296c:	mov	w3, #0x2                   	// #2
    2970:	mov	w2, #0x1                   	// #1
    2974:	mov	x0, #0x0                   	// #0
    2978:	bl	2020 <mmap@plt>
    297c:	mov	x27, x0
    2980:	cmn	x0, #0x1
    2984:	b.eq	3b98 <libintl_gettext@@Base+0x1568>  // b.none
    2988:	mov	w0, w19
    298c:	bl	1f80 <close@plt>
    2990:	mov	w0, #0x1                   	// #1
    2994:	str	w0, [x29, #204]
    2998:	ldr	w26, [x27]
    299c:	mov	w20, #0x12de                	// #4830
    29a0:	movk	w20, #0x9504, lsl #16
    29a4:	mov	w0, #0x495                 	// #1173
    29a8:	cmp	w26, w20
    29ac:	movk	w0, #0xde12, lsl #16
    29b0:	cset	w19, ne  // ne = any
    29b4:	cmp	w19, #0x0
    29b8:	ccmp	w26, w0, #0x4, ne  // ne = any
    29bc:	b.eq	2a38 <libintl_gettext@@Base+0x408>  // b.none
    29c0:	ldr	w0, [x29, #204]
    29c4:	cbz	w0, 2b58 <libintl_gettext@@Base+0x528>
    29c8:	mov	x1, x28
    29cc:	mov	x0, x27
    29d0:	bl	20b0 <munmap@plt>
    29d4:	ldr	x1, [x29, #240]
    29d8:	mov	w0, #0x1                   	// #1
    29dc:	str	w0, [x1, #8]
    29e0:	ldr	x0, [x29, #136]
    29e4:	ldr	x0, [x0, #4064]
    29e8:	cbz	x0, 29fc <libintl_gettext@@Base+0x3cc>
    29ec:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    29f0:	add	x0, x0, #0x2c0
    29f4:	bl	2190 <pthread_mutex_unlock@plt>
    29f8:	cbnz	w0, 290c <libintl_gettext@@Base+0x2dc>
    29fc:	mov	sp, x29
    2a00:	ldp	x19, x20, [sp, #16]
    2a04:	ldp	x21, x22, [sp, #32]
    2a08:	ldp	x23, x24, [sp, #48]
    2a0c:	ldp	x25, x26, [sp, #64]
    2a10:	ldp	x27, x28, [sp, #80]
    2a14:	ldp	x29, x30, [sp], #400
    2a18:	ret
    2a1c:	add	x21, x21, x0
    2a20:	subs	x20, x20, x0
    2a24:	b.ne	3bb0 <libintl_gettext@@Base+0x1580>  // b.any
    2a28:	mov	w0, w19
    2a2c:	bl	1f80 <close@plt>
    2a30:	str	wzr, [x29, #204]
    2a34:	b	2998 <libintl_gettext@@Base+0x368>
    2a38:	mov	x0, #0xc8                  	// #200
    2a3c:	bl	1e80 <malloc@plt>
    2a40:	mov	x25, x0
    2a44:	cbz	x0, 29c0 <libintl_gettext@@Base+0x390>
    2a48:	ldr	x0, [x29, #240]
    2a4c:	str	x27, [x25]
    2a50:	str	x28, [x25, #16]
    2a54:	cmp	w26, w20
    2a58:	str	w19, [x25, #24]
    2a5c:	str	x25, [x0, #16]
    2a60:	ldr	w0, [x29, #204]
    2a64:	str	w0, [x25, #8]
    2a68:	str	xzr, [x25, #32]
    2a6c:	ldr	w0, [x27, #4]
    2a70:	b.eq	2a78 <libintl_gettext@@Base+0x448>  // b.none
    2a74:	bl	28c0 <libintl_gettext@@Base+0x290>
    2a78:	mov	w2, w0
    2a7c:	asr	w0, w0, #16
    2a80:	cmp	w0, #0x1
    2a84:	b.hi	2dc8 <libintl_gettext@@Base+0x798>  // b.pmore
    2a88:	mov	w1, #0x12de                	// #4830
    2a8c:	ldr	w0, [x27, #8]
    2a90:	movk	w1, #0x9504, lsl #16
    2a94:	cmp	w26, w1
    2a98:	b.eq	2aa0 <libintl_gettext@@Base+0x470>  // b.none
    2a9c:	bl	28c0 <libintl_gettext@@Base+0x290>
    2aa0:	str	w0, [x25, #40]
    2aa4:	cmp	w26, w1
    2aa8:	ldr	w0, [x27, #12]
    2aac:	b.eq	2ab4 <libintl_gettext@@Base+0x484>  // b.none
    2ab0:	bl	28c0 <libintl_gettext@@Base+0x290>
    2ab4:	mov	w1, w0
    2ab8:	ldr	w0, [x27, #16]
    2abc:	add	x1, x27, x1
    2ac0:	str	x1, [x25, #48]
    2ac4:	mov	w1, #0x12de                	// #4830
    2ac8:	movk	w1, #0x9504, lsl #16
    2acc:	cmp	w26, w1
    2ad0:	mov	w3, w1
    2ad4:	b.eq	2adc <libintl_gettext@@Base+0x4ac>  // b.none
    2ad8:	bl	28c0 <libintl_gettext@@Base+0x290>
    2adc:	mov	w1, w0
    2ae0:	ldr	w0, [x27, #20]
    2ae4:	add	x1, x27, x1
    2ae8:	str	x1, [x25, #56]
    2aec:	str	w0, [x29, #232]
    2af0:	cmp	w26, w3
    2af4:	b.eq	2b04 <libintl_gettext@@Base+0x4d4>  // b.none
    2af8:	mov	w0, w0
    2afc:	bl	28c0 <libintl_gettext@@Base+0x290>
    2b00:	str	w0, [x29, #232]
    2b04:	ldr	w0, [x29, #232]
    2b08:	str	w0, [x25, #88]
    2b0c:	cmp	w0, #0x2
    2b10:	b.ls	2b64 <libintl_gettext@@Base+0x534>  // b.plast
    2b14:	mov	w1, #0x12de                	// #4830
    2b18:	ldr	w0, [x27, #24]
    2b1c:	movk	w1, #0x9504, lsl #16
    2b20:	cmp	w26, w1
    2b24:	b.eq	2b2c <libintl_gettext@@Base+0x4fc>  // b.none
    2b28:	bl	28c0 <libintl_gettext@@Base+0x290>
    2b2c:	mov	w0, w0
    2b30:	add	x0, x27, x0
    2b34:	str	x0, [x29, #176]
    2b38:	ldr	x0, [x29, #176]
    2b3c:	str	x0, [x25, #96]
    2b40:	str	w19, [x25, #104]
    2b44:	tst	w2, #0xffff
    2b48:	b.ne	2b6c <libintl_gettext@@Base+0x53c>  // b.any
    2b4c:	str	wzr, [x25, #64]
    2b50:	stp	xzr, xzr, [x25, #72]
    2b54:	b	2d70 <libintl_gettext@@Base+0x740>
    2b58:	mov	x0, x27
    2b5c:	bl	2040 <free@plt>
    2b60:	b	29d4 <libintl_gettext@@Base+0x3a4>
    2b64:	str	xzr, [x29, #176]
    2b68:	b	2b38 <libintl_gettext@@Base+0x508>
    2b6c:	ldr	x0, [x29, #176]
    2b70:	cbz	x0, 2dc8 <libintl_gettext@@Base+0x798>
    2b74:	ldr	w0, [x27, #36]
    2b78:	str	w0, [x29, #228]
    2b7c:	mov	w0, #0x12de                	// #4830
    2b80:	movk	w0, #0x9504, lsl #16
    2b84:	cmp	w26, w0
    2b88:	ldr	w0, [x29, #228]
    2b8c:	b.eq	2df8 <libintl_gettext@@Base+0x7c8>  // b.none
    2b90:	bl	28c0 <libintl_gettext@@Base+0x290>
    2b94:	str	w0, [x29, #228]
    2b98:	mov	w0, w0
    2b9c:	cbz	w0, 2b4c <libintl_gettext@@Base+0x51c>
    2ba0:	ldr	w0, [x27, #28]
    2ba4:	bl	28c0 <libintl_gettext@@Base+0x290>
    2ba8:	mov	w20, w0
    2bac:	ldr	w0, [x27, #32]
    2bb0:	bl	28c0 <libintl_gettext@@Base+0x290>
    2bb4:	mov	w1, w0
    2bb8:	ubfiz	x2, x20, #3, #32
    2bbc:	mov	w14, #0x12de                	// #4830
    2bc0:	add	x2, x2, #0xf
    2bc4:	adrp	x15, 6000 <libintl_ngettext@@Base+0x628>
    2bc8:	and	x2, x2, #0xffffffff0
    2bcc:	adrp	x3, 6000 <libintl_ngettext@@Base+0x628>
    2bd0:	sub	sp, sp, x2
    2bd4:	adrp	x4, 6000 <libintl_ngettext@@Base+0x628>
    2bd8:	adrp	x2, 6000 <libintl_ngettext@@Base+0x628>
    2bdc:	adrp	x5, 6000 <libintl_ngettext@@Base+0x628>
    2be0:	adrp	x6, 6000 <libintl_ngettext@@Base+0x628>
    2be4:	adrp	x7, 6000 <libintl_ngettext@@Base+0x628>
    2be8:	adrp	x8, 6000 <libintl_ngettext@@Base+0x628>
    2bec:	adrp	x9, 6000 <libintl_ngettext@@Base+0x628>
    2bf0:	adrp	x10, 6000 <libintl_ngettext@@Base+0x628>
    2bf4:	adrp	x11, 6000 <libintl_ngettext@@Base+0x628>
    2bf8:	adrp	x12, 6000 <libintl_ngettext@@Base+0x628>
    2bfc:	add	x1, x27, x1
    2c00:	add	x15, x15, #0xdf4
    2c04:	add	x2, x2, #0xa6b
    2c08:	add	x3, x3, #0xa71
    2c0c:	add	x4, x4, #0xa6e
    2c10:	add	x5, x5, #0xa68
    2c14:	add	x6, x6, #0xa77
    2c18:	add	x7, x7, #0xa74
    2c1c:	add	x8, x8, #0xb84
    2c20:	add	x9, x9, #0xa72
    2c24:	add	x10, x10, #0xa6f
    2c28:	add	x11, x11, #0xa69
    2c2c:	add	x12, x12, #0xa78
    2c30:	mov	x0, sp
    2c34:	mov	x13, #0x0                   	// #0
    2c38:	movk	w14, #0x9504, lsl #16
    2c3c:	str	x0, [x29, #168]
    2c40:	cmp	w20, w13
    2c44:	b.hi	2e04 <libintl_gettext@@Base+0x7d4>  // b.pmore
    2c48:	ldr	w0, [x27, #40]
    2c4c:	cmp	w26, w14
    2c50:	b.eq	2c58 <libintl_gettext@@Base+0x628>  // b.none
    2c54:	bl	28c0 <libintl_gettext@@Base+0x290>
    2c58:	mov	w0, w0
    2c5c:	mov	w1, #0x12de                	// #4830
    2c60:	add	x0, x27, x0
    2c64:	str	x0, [x29, #216]
    2c68:	movk	w1, #0x9504, lsl #16
    2c6c:	ldr	w0, [x27, #44]
    2c70:	cmp	w26, w1
    2c74:	b.eq	2c7c <libintl_gettext@@Base+0x64c>  // b.none
    2c78:	bl	28c0 <libintl_gettext@@Base+0x290>
    2c7c:	mov	w0, w0
    2c80:	mov	w23, #0x12de                	// #4830
    2c84:	add	x0, x27, x0
    2c88:	str	x0, [x29, #208]
    2c8c:	ldr	x0, [x29, #232]
    2c90:	mov	x22, #0x0                   	// #0
    2c94:	movk	w23, #0x9504, lsl #16
    2c98:	str	wzr, [x29, #248]
    2c9c:	ubfiz	x0, x0, #2, #32
    2ca0:	str	x0, [x29, #160]
    2ca4:	str	x0, [x29, #192]
    2ca8:	add	x0, x29, #0x100
    2cac:	str	x0, [x29, #152]
    2cb0:	ldr	w0, [x29, #228]
    2cb4:	cmp	w0, w22
    2cb8:	b.hi	3720 <libintl_gettext@@Base+0x10f0>  // b.pmore
    2cbc:	ldr	w0, [x29, #248]
    2cc0:	cbz	w0, 2b4c <libintl_gettext@@Base+0x51c>
    2cc4:	ldr	x1, [x29, #192]
    2cc8:	lsl	w0, w0, #1
    2ccc:	add	x0, x1, w0, uxtw #4
    2cd0:	bl	1e80 <malloc@plt>
    2cd4:	mov	x21, x0
    2cd8:	cbz	x0, 2dc8 <libintl_gettext@@Base+0x798>
    2cdc:	ldr	x0, [x29, #248]
    2ce0:	mov	w24, #0x12de                	// #4830
    2ce4:	mov	x20, #0x0                   	// #0
    2ce8:	movk	w24, #0x9504, lsl #16
    2cec:	str	x21, [x25, #32]
    2cf0:	ubfiz	x22, x0, #4, #32
    2cf4:	str	wzr, [x29, #192]
    2cf8:	add	x0, x21, x22
    2cfc:	str	x0, [x29, #128]
    2d00:	ldr	x0, [x29, #160]
    2d04:	add	x22, x21, x22, lsl #1
    2d08:	add	x19, x22, x0
    2d0c:	ldr	w0, [x29, #228]
    2d10:	cmp	w0, w20
    2d14:	b.hi	3860 <libintl_gettext@@Base+0x1230>  // b.pmore
    2d18:	ldr	w1, [x29, #192]
    2d1c:	ldr	w0, [x29, #248]
    2d20:	cmp	w0, w1
    2d24:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    2d28:	mov	w2, #0x12de                	// #4830
    2d2c:	mov	x1, #0x0                   	// #0
    2d30:	movk	w2, #0x9504, lsl #16
    2d34:	ldr	w0, [x29, #232]
    2d38:	cmp	w0, w1
    2d3c:	b.hi	3ab8 <libintl_gettext@@Base+0x1488>  // b.pmore
    2d40:	add	x20, x21, #0x8
    2d44:	mov	x19, #0x0                   	// #0
    2d48:	ldr	w0, [x29, #248]
    2d4c:	mov	w23, w19
    2d50:	cmp	w0, w19
    2d54:	b.hi	3ad8 <libintl_gettext@@Base+0x14a8>  // b.pmore
    2d58:	str	w0, [x25, #64]
    2d5c:	ldr	x0, [x29, #128]
    2d60:	str	x21, [x25, #72]
    2d64:	str	x0, [x25, #80]
    2d68:	str	x22, [x25, #96]
    2d6c:	str	wzr, [x25, #104]
    2d70:	ldr	x0, [x29, #136]
    2d74:	stp	xzr, xzr, [x25, #112]
    2d78:	ldr	x0, [x0, #4064]
    2d7c:	cbz	x0, 2d8c <libintl_gettext@@Base+0x75c>
    2d80:	add	x0, x25, #0x80
    2d84:	bl	6200 <libintl_ngettext@@Base+0x828>
    2d88:	cbnz	w0, 290c <libintl_gettext@@Base+0x2dc>
    2d8c:	ldr	x1, [x29, #120]
    2d90:	add	x4, x29, #0x100
    2d94:	ldr	x0, [x29, #240]
    2d98:	mov	w3, #0x0                   	// #0
    2d9c:	adrp	x2, 6000 <libintl_ngettext@@Base+0x628>
    2da0:	add	x2, x2, #0xad5
    2da4:	bl	4b10 <libintl_textdomain@@Base+0xa74>
    2da8:	cmn	x0, #0x1
    2dac:	b.ne	3b50 <libintl_gettext@@Base+0x1520>  // b.any
    2db0:	ldr	x0, [x29, #136]
    2db4:	ldr	x0, [x0, #4064]
    2db8:	cbz	x0, 2dc8 <libintl_gettext@@Base+0x798>
    2dbc:	add	x0, x25, #0x80
    2dc0:	bl	1e90 <pthread_rwlock_destroy@plt>
    2dc4:	cbnz	w0, 290c <libintl_gettext@@Base+0x2dc>
    2dc8:	ldr	x0, [x25, #32]
    2dcc:	bl	2040 <free@plt>
    2dd0:	ldr	w0, [x29, #204]
    2dd4:	cbz	w0, 3b44 <libintl_gettext@@Base+0x1514>
    2dd8:	mov	x1, x28
    2ddc:	mov	x0, x27
    2de0:	bl	20b0 <munmap@plt>
    2de4:	mov	x0, x25
    2de8:	bl	2040 <free@plt>
    2dec:	ldr	x0, [x29, #240]
    2df0:	str	xzr, [x0, #16]
    2df4:	b	29d4 <libintl_gettext@@Base+0x3a4>
    2df8:	cbz	w0, 2b4c <libintl_gettext@@Base+0x51c>
    2dfc:	ldp	w20, w1, [x27, #28]
    2e00:	b	2bb8 <libintl_gettext@@Base+0x588>
    2e04:	ldr	w0, [x1, #4]
    2e08:	cmp	w26, w14
    2e0c:	b.eq	2e14 <libintl_gettext@@Base+0x7e4>  // b.none
    2e10:	bl	28c0 <libintl_gettext@@Base+0x290>
    2e14:	mov	w0, w0
    2e18:	cmp	w26, w14
    2e1c:	add	x18, x27, x0
    2e20:	ldr	w0, [x1]
    2e24:	b.eq	2e2c <libintl_gettext@@Base+0x7fc>  // b.none
    2e28:	bl	28c0 <libintl_gettext@@Base+0x290>
    2e2c:	cbz	w0, 2dc8 <libintl_gettext@@Base+0x798>
    2e30:	sub	w0, w0, #0x1
    2e34:	ldrb	w0, [x18, x0]
    2e38:	cbnz	w0, 2dc8 <libintl_gettext@@Base+0x798>
    2e3c:	ldrb	w0, [x18]
    2e40:	cmp	w0, #0x50
    2e44:	b.ne	3378 <libintl_gettext@@Base+0xd48>  // b.any
    2e48:	ldrb	w0, [x18, #1]
    2e4c:	cmp	w0, #0x52
    2e50:	b.ne	33a0 <libintl_gettext@@Base+0xd70>  // b.any
    2e54:	ldrb	w0, [x18, #2]
    2e58:	cmp	w0, #0x49
    2e5c:	b.ne	33a8 <libintl_gettext@@Base+0xd78>  // b.any
    2e60:	ldrb	w0, [x18, #3]
    2e64:	cmp	w0, #0x64
    2e68:	cset	w16, eq  // eq = none
    2e6c:	cmp	w0, #0x69
    2e70:	csinc	w16, w16, wzr, ne  // ne = any
    2e74:	cbnz	w16, 2e98 <libintl_gettext@@Base+0x868>
    2e78:	sub	w17, w0, #0x58
    2e7c:	and	w17, w17, #0xff
    2e80:	cmp	w17, #0x20
    2e84:	b.hi	33b0 <libintl_gettext@@Base+0xd80>  // b.pmore
    2e88:	mov	x19, #0x100000001           	// #4294967297
    2e8c:	movk	x19, #0x2080, lsl #16
    2e90:	lsr	x17, x19, x17
    2e94:	tbz	w17, #0, 33b8 <libintl_gettext@@Base+0xd88>
    2e98:	ldrb	w17, [x18, #4]
    2e9c:	cmp	w17, #0x38
    2ea0:	b.ne	2ee4 <libintl_gettext@@Base+0x8b4>  // b.any
    2ea4:	ldrb	w17, [x18, #5]
    2ea8:	cbnz	w17, 33c0 <libintl_gettext@@Base+0xd90>
    2eac:	cmp	w0, #0x64
    2eb0:	b.eq	33c8 <libintl_gettext@@Base+0xd98>  // b.none
    2eb4:	cbnz	w16, 33d0 <libintl_gettext@@Base+0xda0>
    2eb8:	cmp	w0, #0x6f
    2ebc:	b.eq	33d8 <libintl_gettext@@Base+0xda8>  // b.none
    2ec0:	cmp	w0, #0x75
    2ec4:	b.eq	33e0 <libintl_gettext@@Base+0xdb0>  // b.none
    2ec8:	cmp	w0, #0x78
    2ecc:	b.eq	33e8 <libintl_gettext@@Base+0xdb8>  // b.none
    2ed0:	cmp	w0, #0x58
    2ed4:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    2ed8:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    2edc:	add	x0, x0, #0xb3f
    2ee0:	b	338c <libintl_gettext@@Base+0xd5c>
    2ee4:	cmp	w17, #0x31
    2ee8:	b.ne	2f38 <libintl_gettext@@Base+0x908>  // b.any
    2eec:	ldrb	w17, [x18, #5]
    2ef0:	cmp	w17, #0x36
    2ef4:	b.ne	33f0 <libintl_gettext@@Base+0xdc0>  // b.any
    2ef8:	ldrb	w17, [x18, #6]
    2efc:	cbnz	w17, 33f8 <libintl_gettext@@Base+0xdc8>
    2f00:	cmp	w0, #0x64
    2f04:	b.eq	3400 <libintl_gettext@@Base+0xdd0>  // b.none
    2f08:	cbnz	w16, 3408 <libintl_gettext@@Base+0xdd8>
    2f0c:	cmp	w0, #0x6f
    2f10:	b.eq	3410 <libintl_gettext@@Base+0xde0>  // b.none
    2f14:	cmp	w0, #0x75
    2f18:	b.eq	3418 <libintl_gettext@@Base+0xde8>  // b.none
    2f1c:	cmp	w0, #0x78
    2f20:	b.eq	3420 <libintl_gettext@@Base+0xdf0>  // b.none
    2f24:	cmp	w0, #0x58
    2f28:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    2f2c:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    2f30:	add	x0, x0, #0xb3f
    2f34:	b	338c <libintl_gettext@@Base+0xd5c>
    2f38:	cmp	w17, #0x33
    2f3c:	b.ne	2f8c <libintl_gettext@@Base+0x95c>  // b.any
    2f40:	ldrb	w17, [x18, #5]
    2f44:	cmp	w17, #0x32
    2f48:	b.ne	3428 <libintl_gettext@@Base+0xdf8>  // b.any
    2f4c:	ldrb	w17, [x18, #6]
    2f50:	cbnz	w17, 3430 <libintl_gettext@@Base+0xe00>
    2f54:	cmp	w0, #0x64
    2f58:	b.eq	3438 <libintl_gettext@@Base+0xe08>  // b.none
    2f5c:	cbnz	w16, 3440 <libintl_gettext@@Base+0xe10>
    2f60:	cmp	w0, #0x6f
    2f64:	b.eq	3448 <libintl_gettext@@Base+0xe18>  // b.none
    2f68:	cmp	w0, #0x75
    2f6c:	b.eq	3450 <libintl_gettext@@Base+0xe20>  // b.none
    2f70:	cmp	w0, #0x78
    2f74:	b.eq	3458 <libintl_gettext@@Base+0xe28>  // b.none
    2f78:	cmp	w0, #0x58
    2f7c:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    2f80:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    2f84:	add	x0, x0, #0xb3f
    2f88:	b	338c <libintl_gettext@@Base+0xd5c>
    2f8c:	cmp	w17, #0x36
    2f90:	b.ne	2fdc <libintl_gettext@@Base+0x9ac>  // b.any
    2f94:	ldrb	w17, [x18, #5]
    2f98:	cmp	w17, #0x34
    2f9c:	b.ne	3460 <libintl_gettext@@Base+0xe30>  // b.any
    2fa0:	ldrb	w17, [x18, #6]
    2fa4:	cbnz	w17, 3468 <libintl_gettext@@Base+0xe38>
    2fa8:	cmp	w0, #0x64
    2fac:	b.eq	3470 <libintl_gettext@@Base+0xe40>  // b.none
    2fb0:	cbnz	w16, 3478 <libintl_gettext@@Base+0xe48>
    2fb4:	cmp	w0, #0x6f
    2fb8:	b.eq	3480 <libintl_gettext@@Base+0xe50>  // b.none
    2fbc:	cmp	w0, #0x75
    2fc0:	b.eq	3488 <libintl_gettext@@Base+0xe58>  // b.none
    2fc4:	cmp	w0, #0x78
    2fc8:	b.eq	3490 <libintl_gettext@@Base+0xe60>  // b.none
    2fcc:	cmp	w0, #0x58
    2fd0:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    2fd4:	mov	x0, x7
    2fd8:	b	338c <libintl_gettext@@Base+0xd5c>
    2fdc:	cmp	w17, #0x4c
    2fe0:	b.ne	3158 <libintl_gettext@@Base+0xb28>  // b.any
    2fe4:	ldrb	w17, [x18, #5]
    2fe8:	cmp	w17, #0x45
    2fec:	b.ne	3498 <libintl_gettext@@Base+0xe68>  // b.any
    2ff0:	ldrb	w17, [x18, #6]
    2ff4:	cmp	w17, #0x41
    2ff8:	b.ne	34a0 <libintl_gettext@@Base+0xe70>  // b.any
    2ffc:	ldrb	w17, [x18, #7]
    3000:	cmp	w17, #0x53
    3004:	b.ne	34a8 <libintl_gettext@@Base+0xe78>  // b.any
    3008:	ldrb	w17, [x18, #8]
    300c:	cmp	w17, #0x54
    3010:	b.ne	34b0 <libintl_gettext@@Base+0xe80>  // b.any
    3014:	ldrb	w17, [x18, #9]
    3018:	cmp	w17, #0x38
    301c:	b.ne	3060 <libintl_gettext@@Base+0xa30>  // b.any
    3020:	ldrb	w17, [x18, #10]
    3024:	cbnz	w17, 34b8 <libintl_gettext@@Base+0xe88>
    3028:	cmp	w0, #0x64
    302c:	b.eq	34c0 <libintl_gettext@@Base+0xe90>  // b.none
    3030:	cbnz	w16, 34c8 <libintl_gettext@@Base+0xe98>
    3034:	cmp	w0, #0x6f
    3038:	b.eq	34d0 <libintl_gettext@@Base+0xea0>  // b.none
    303c:	cmp	w0, #0x75
    3040:	b.eq	34d8 <libintl_gettext@@Base+0xea8>  // b.none
    3044:	cmp	w0, #0x78
    3048:	b.eq	34e0 <libintl_gettext@@Base+0xeb0>  // b.none
    304c:	cmp	w0, #0x58
    3050:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    3054:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    3058:	add	x0, x0, #0xb3f
    305c:	b	338c <libintl_gettext@@Base+0xd5c>
    3060:	cmp	w17, #0x31
    3064:	b.ne	30b4 <libintl_gettext@@Base+0xa84>  // b.any
    3068:	ldrb	w17, [x18, #10]
    306c:	cmp	w17, #0x36
    3070:	b.ne	34e8 <libintl_gettext@@Base+0xeb8>  // b.any
    3074:	ldrb	w17, [x18, #11]
    3078:	cbnz	w17, 34f0 <libintl_gettext@@Base+0xec0>
    307c:	cmp	w0, #0x64
    3080:	b.eq	34f8 <libintl_gettext@@Base+0xec8>  // b.none
    3084:	cbnz	w16, 3500 <libintl_gettext@@Base+0xed0>
    3088:	cmp	w0, #0x6f
    308c:	b.eq	3508 <libintl_gettext@@Base+0xed8>  // b.none
    3090:	cmp	w0, #0x75
    3094:	b.eq	3510 <libintl_gettext@@Base+0xee0>  // b.none
    3098:	cmp	w0, #0x78
    309c:	b.eq	3518 <libintl_gettext@@Base+0xee8>  // b.none
    30a0:	cmp	w0, #0x58
    30a4:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    30a8:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    30ac:	add	x0, x0, #0xb3f
    30b0:	b	338c <libintl_gettext@@Base+0xd5c>
    30b4:	cmp	w17, #0x33
    30b8:	b.ne	3108 <libintl_gettext@@Base+0xad8>  // b.any
    30bc:	ldrb	w17, [x18, #10]
    30c0:	cmp	w17, #0x32
    30c4:	b.ne	3520 <libintl_gettext@@Base+0xef0>  // b.any
    30c8:	ldrb	w17, [x18, #11]
    30cc:	cbnz	w17, 3528 <libintl_gettext@@Base+0xef8>
    30d0:	cmp	w0, #0x64
    30d4:	b.eq	3530 <libintl_gettext@@Base+0xf00>  // b.none
    30d8:	cbnz	w16, 3538 <libintl_gettext@@Base+0xf08>
    30dc:	cmp	w0, #0x6f
    30e0:	b.eq	3540 <libintl_gettext@@Base+0xf10>  // b.none
    30e4:	cmp	w0, #0x75
    30e8:	b.eq	3548 <libintl_gettext@@Base+0xf18>  // b.none
    30ec:	cmp	w0, #0x78
    30f0:	b.eq	3550 <libintl_gettext@@Base+0xf20>  // b.none
    30f4:	cmp	w0, #0x58
    30f8:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    30fc:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    3100:	add	x0, x0, #0xb3f
    3104:	b	338c <libintl_gettext@@Base+0xd5c>
    3108:	cmp	w17, #0x36
    310c:	b.ne	3558 <libintl_gettext@@Base+0xf28>  // b.any
    3110:	ldrb	w17, [x18, #10]
    3114:	cmp	w17, #0x34
    3118:	b.ne	3560 <libintl_gettext@@Base+0xf30>  // b.any
    311c:	ldrb	w17, [x18, #11]
    3120:	cbnz	w17, 3568 <libintl_gettext@@Base+0xf38>
    3124:	cmp	w0, #0x64
    3128:	b.eq	3570 <libintl_gettext@@Base+0xf40>  // b.none
    312c:	cbnz	w16, 3578 <libintl_gettext@@Base+0xf48>
    3130:	cmp	w0, #0x6f
    3134:	b.eq	3580 <libintl_gettext@@Base+0xf50>  // b.none
    3138:	cmp	w0, #0x75
    313c:	b.eq	3588 <libintl_gettext@@Base+0xf58>  // b.none
    3140:	cmp	w0, #0x78
    3144:	b.eq	3590 <libintl_gettext@@Base+0xf60>  // b.none
    3148:	cmp	w0, #0x58
    314c:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    3150:	mov	x0, x7
    3154:	b	338c <libintl_gettext@@Base+0xd5c>
    3158:	cmp	w17, #0x46
    315c:	b.ne	32c0 <libintl_gettext@@Base+0xc90>  // b.any
    3160:	ldrb	w17, [x18, #5]
    3164:	cmp	w17, #0x41
    3168:	b.ne	3598 <libintl_gettext@@Base+0xf68>  // b.any
    316c:	ldrb	w17, [x18, #6]
    3170:	cmp	w17, #0x53
    3174:	b.ne	35a0 <libintl_gettext@@Base+0xf70>  // b.any
    3178:	ldrb	w17, [x18, #7]
    317c:	cmp	w17, #0x54
    3180:	b.ne	35a8 <libintl_gettext@@Base+0xf78>  // b.any
    3184:	ldrb	w17, [x18, #8]
    3188:	cmp	w17, #0x38
    318c:	b.ne	31d0 <libintl_gettext@@Base+0xba0>  // b.any
    3190:	ldrb	w17, [x18, #9]
    3194:	cbnz	w17, 35b0 <libintl_gettext@@Base+0xf80>
    3198:	cmp	w0, #0x64
    319c:	b.eq	35b8 <libintl_gettext@@Base+0xf88>  // b.none
    31a0:	cbnz	w16, 35c0 <libintl_gettext@@Base+0xf90>
    31a4:	cmp	w0, #0x6f
    31a8:	b.eq	35c8 <libintl_gettext@@Base+0xf98>  // b.none
    31ac:	cmp	w0, #0x75
    31b0:	b.eq	35d0 <libintl_gettext@@Base+0xfa0>  // b.none
    31b4:	cmp	w0, #0x78
    31b8:	b.eq	35d8 <libintl_gettext@@Base+0xfa8>  // b.none
    31bc:	cmp	w0, #0x58
    31c0:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    31c4:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    31c8:	add	x0, x0, #0xb3f
    31cc:	b	338c <libintl_gettext@@Base+0xd5c>
    31d0:	cmp	w17, #0x31
    31d4:	b.ne	3220 <libintl_gettext@@Base+0xbf0>  // b.any
    31d8:	ldrb	w17, [x18, #9]
    31dc:	cmp	w17, #0x36
    31e0:	b.ne	35e0 <libintl_gettext@@Base+0xfb0>  // b.any
    31e4:	ldrb	w17, [x18, #10]
    31e8:	cbnz	w17, 35e8 <libintl_gettext@@Base+0xfb8>
    31ec:	cmp	w0, #0x64
    31f0:	b.eq	35f0 <libintl_gettext@@Base+0xfc0>  // b.none
    31f4:	cbnz	w16, 35f8 <libintl_gettext@@Base+0xfc8>
    31f8:	cmp	w0, #0x6f
    31fc:	b.eq	3600 <libintl_gettext@@Base+0xfd0>  // b.none
    3200:	cmp	w0, #0x75
    3204:	b.eq	3608 <libintl_gettext@@Base+0xfd8>  // b.none
    3208:	cmp	w0, #0x78
    320c:	b.eq	3610 <libintl_gettext@@Base+0xfe0>  // b.none
    3210:	cmp	w0, #0x58
    3214:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    3218:	mov	x0, x7
    321c:	b	338c <libintl_gettext@@Base+0xd5c>
    3220:	cmp	w17, #0x33
    3224:	b.ne	3270 <libintl_gettext@@Base+0xc40>  // b.any
    3228:	ldrb	w17, [x18, #9]
    322c:	cmp	w17, #0x32
    3230:	b.ne	3618 <libintl_gettext@@Base+0xfe8>  // b.any
    3234:	ldrb	w17, [x18, #10]
    3238:	cbnz	w17, 3620 <libintl_gettext@@Base+0xff0>
    323c:	cmp	w0, #0x64
    3240:	b.eq	3628 <libintl_gettext@@Base+0xff8>  // b.none
    3244:	cbnz	w16, 3630 <libintl_gettext@@Base+0x1000>
    3248:	cmp	w0, #0x6f
    324c:	b.eq	3638 <libintl_gettext@@Base+0x1008>  // b.none
    3250:	cmp	w0, #0x75
    3254:	b.eq	3640 <libintl_gettext@@Base+0x1010>  // b.none
    3258:	cmp	w0, #0x78
    325c:	b.eq	3648 <libintl_gettext@@Base+0x1018>  // b.none
    3260:	cmp	w0, #0x58
    3264:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    3268:	mov	x0, x7
    326c:	b	338c <libintl_gettext@@Base+0xd5c>
    3270:	cmp	w17, #0x36
    3274:	b.ne	3650 <libintl_gettext@@Base+0x1020>  // b.any
    3278:	ldrb	w17, [x18, #9]
    327c:	cmp	w17, #0x34
    3280:	b.ne	3658 <libintl_gettext@@Base+0x1028>  // b.any
    3284:	ldrb	w17, [x18, #10]
    3288:	cbnz	w17, 3660 <libintl_gettext@@Base+0x1030>
    328c:	cmp	w0, #0x64
    3290:	b.eq	3668 <libintl_gettext@@Base+0x1038>  // b.none
    3294:	cbnz	w16, 3670 <libintl_gettext@@Base+0x1040>
    3298:	cmp	w0, #0x6f
    329c:	b.eq	3678 <libintl_gettext@@Base+0x1048>  // b.none
    32a0:	cmp	w0, #0x75
    32a4:	b.eq	3680 <libintl_gettext@@Base+0x1050>  // b.none
    32a8:	cmp	w0, #0x78
    32ac:	b.eq	3688 <libintl_gettext@@Base+0x1058>  // b.none
    32b0:	cmp	w0, #0x58
    32b4:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    32b8:	mov	x0, x7
    32bc:	b	338c <libintl_gettext@@Base+0xd5c>
    32c0:	cmp	w17, #0x4d
    32c4:	b.ne	331c <libintl_gettext@@Base+0xcec>  // b.any
    32c8:	ldrb	w17, [x18, #5]
    32cc:	cmp	w17, #0x41
    32d0:	b.ne	3690 <libintl_gettext@@Base+0x1060>  // b.any
    32d4:	ldrb	w17, [x18, #6]
    32d8:	cmp	w17, #0x58
    32dc:	b.ne	3698 <libintl_gettext@@Base+0x1068>  // b.any
    32e0:	ldrb	w17, [x18, #7]
    32e4:	cbnz	w17, 36a0 <libintl_gettext@@Base+0x1070>
    32e8:	cmp	w0, #0x64
    32ec:	b.eq	36a8 <libintl_gettext@@Base+0x1078>  // b.none
    32f0:	cbnz	w16, 36b0 <libintl_gettext@@Base+0x1080>
    32f4:	cmp	w0, #0x6f
    32f8:	b.eq	36b8 <libintl_gettext@@Base+0x1088>  // b.none
    32fc:	cmp	w0, #0x75
    3300:	b.eq	36c0 <libintl_gettext@@Base+0x1090>  // b.none
    3304:	cmp	w0, #0x78
    3308:	b.eq	36c8 <libintl_gettext@@Base+0x1098>  // b.none
    330c:	cmp	w0, #0x58
    3310:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    3314:	mov	x0, x7
    3318:	b	338c <libintl_gettext@@Base+0xd5c>
    331c:	cmp	w17, #0x50
    3320:	b.ne	36d0 <libintl_gettext@@Base+0x10a0>  // b.any
    3324:	ldrb	w17, [x18, #5]
    3328:	cmp	w17, #0x54
    332c:	b.ne	36d8 <libintl_gettext@@Base+0x10a8>  // b.any
    3330:	ldrb	w17, [x18, #6]
    3334:	cmp	w17, #0x52
    3338:	b.ne	36e0 <libintl_gettext@@Base+0x10b0>  // b.any
    333c:	ldrb	w17, [x18, #7]
    3340:	cbnz	w17, 36e8 <libintl_gettext@@Base+0x10b8>
    3344:	cmp	w0, #0x64
    3348:	b.eq	36f0 <libintl_gettext@@Base+0x10c0>  // b.none
    334c:	cbnz	w16, 36f8 <libintl_gettext@@Base+0x10c8>
    3350:	cmp	w0, #0x6f
    3354:	b.eq	3700 <libintl_gettext@@Base+0x10d0>  // b.none
    3358:	cmp	w0, #0x75
    335c:	b.eq	3708 <libintl_gettext@@Base+0x10d8>  // b.none
    3360:	cmp	w0, #0x78
    3364:	b.eq	3710 <libintl_gettext@@Base+0x10e0>  // b.none
    3368:	cmp	w0, #0x58
    336c:	b.ne	290c <libintl_gettext@@Base+0x2dc>  // b.any
    3370:	mov	x0, x7
    3374:	b	338c <libintl_gettext@@Base+0xd5c>
    3378:	cmp	w0, #0x49
    337c:	b.ne	3718 <libintl_gettext@@Base+0x10e8>  // b.any
    3380:	ldrb	w0, [x18, #1]
    3384:	cmp	w0, #0x0
    3388:	csel	x0, x15, xzr, eq  // eq = none
    338c:	ldr	x16, [x29, #168]
    3390:	add	x1, x1, #0x8
    3394:	str	x0, [x16, x13, lsl #3]
    3398:	add	x13, x13, #0x1
    339c:	b	2c40 <libintl_gettext@@Base+0x610>
    33a0:	mov	x0, #0x0                   	// #0
    33a4:	b	338c <libintl_gettext@@Base+0xd5c>
    33a8:	mov	x0, #0x0                   	// #0
    33ac:	b	338c <libintl_gettext@@Base+0xd5c>
    33b0:	mov	x0, #0x0                   	// #0
    33b4:	b	338c <libintl_gettext@@Base+0xd5c>
    33b8:	mov	x0, #0x0                   	// #0
    33bc:	b	338c <libintl_gettext@@Base+0xd5c>
    33c0:	mov	x0, #0x0                   	// #0
    33c4:	b	338c <libintl_gettext@@Base+0xd5c>
    33c8:	mov	x0, x8
    33cc:	b	338c <libintl_gettext@@Base+0xd5c>
    33d0:	mov	x0, x9
    33d4:	b	338c <libintl_gettext@@Base+0xd5c>
    33d8:	mov	x0, x10
    33dc:	b	338c <libintl_gettext@@Base+0xd5c>
    33e0:	mov	x0, x11
    33e4:	b	338c <libintl_gettext@@Base+0xd5c>
    33e8:	mov	x0, x12
    33ec:	b	338c <libintl_gettext@@Base+0xd5c>
    33f0:	mov	x0, #0x0                   	// #0
    33f4:	b	338c <libintl_gettext@@Base+0xd5c>
    33f8:	mov	x0, #0x0                   	// #0
    33fc:	b	338c <libintl_gettext@@Base+0xd5c>
    3400:	mov	x0, x8
    3404:	b	338c <libintl_gettext@@Base+0xd5c>
    3408:	mov	x0, x9
    340c:	b	338c <libintl_gettext@@Base+0xd5c>
    3410:	mov	x0, x10
    3414:	b	338c <libintl_gettext@@Base+0xd5c>
    3418:	mov	x0, x11
    341c:	b	338c <libintl_gettext@@Base+0xd5c>
    3420:	mov	x0, x12
    3424:	b	338c <libintl_gettext@@Base+0xd5c>
    3428:	mov	x0, #0x0                   	// #0
    342c:	b	338c <libintl_gettext@@Base+0xd5c>
    3430:	mov	x0, #0x0                   	// #0
    3434:	b	338c <libintl_gettext@@Base+0xd5c>
    3438:	mov	x0, x8
    343c:	b	338c <libintl_gettext@@Base+0xd5c>
    3440:	mov	x0, x9
    3444:	b	338c <libintl_gettext@@Base+0xd5c>
    3448:	mov	x0, x10
    344c:	b	338c <libintl_gettext@@Base+0xd5c>
    3450:	mov	x0, x11
    3454:	b	338c <libintl_gettext@@Base+0xd5c>
    3458:	mov	x0, x12
    345c:	b	338c <libintl_gettext@@Base+0xd5c>
    3460:	mov	x0, #0x0                   	// #0
    3464:	b	338c <libintl_gettext@@Base+0xd5c>
    3468:	mov	x0, #0x0                   	// #0
    346c:	b	338c <libintl_gettext@@Base+0xd5c>
    3470:	mov	x0, x2
    3474:	b	338c <libintl_gettext@@Base+0xd5c>
    3478:	mov	x0, x3
    347c:	b	338c <libintl_gettext@@Base+0xd5c>
    3480:	mov	x0, x4
    3484:	b	338c <libintl_gettext@@Base+0xd5c>
    3488:	mov	x0, x5
    348c:	b	338c <libintl_gettext@@Base+0xd5c>
    3490:	mov	x0, x6
    3494:	b	338c <libintl_gettext@@Base+0xd5c>
    3498:	mov	x0, #0x0                   	// #0
    349c:	b	338c <libintl_gettext@@Base+0xd5c>
    34a0:	mov	x0, #0x0                   	// #0
    34a4:	b	338c <libintl_gettext@@Base+0xd5c>
    34a8:	mov	x0, #0x0                   	// #0
    34ac:	b	338c <libintl_gettext@@Base+0xd5c>
    34b0:	mov	x0, #0x0                   	// #0
    34b4:	b	338c <libintl_gettext@@Base+0xd5c>
    34b8:	mov	x0, #0x0                   	// #0
    34bc:	b	338c <libintl_gettext@@Base+0xd5c>
    34c0:	mov	x0, x8
    34c4:	b	338c <libintl_gettext@@Base+0xd5c>
    34c8:	mov	x0, x9
    34cc:	b	338c <libintl_gettext@@Base+0xd5c>
    34d0:	mov	x0, x10
    34d4:	b	338c <libintl_gettext@@Base+0xd5c>
    34d8:	mov	x0, x11
    34dc:	b	338c <libintl_gettext@@Base+0xd5c>
    34e0:	mov	x0, x12
    34e4:	b	338c <libintl_gettext@@Base+0xd5c>
    34e8:	mov	x0, #0x0                   	// #0
    34ec:	b	338c <libintl_gettext@@Base+0xd5c>
    34f0:	mov	x0, #0x0                   	// #0
    34f4:	b	338c <libintl_gettext@@Base+0xd5c>
    34f8:	mov	x0, x8
    34fc:	b	338c <libintl_gettext@@Base+0xd5c>
    3500:	mov	x0, x9
    3504:	b	338c <libintl_gettext@@Base+0xd5c>
    3508:	mov	x0, x10
    350c:	b	338c <libintl_gettext@@Base+0xd5c>
    3510:	mov	x0, x11
    3514:	b	338c <libintl_gettext@@Base+0xd5c>
    3518:	mov	x0, x12
    351c:	b	338c <libintl_gettext@@Base+0xd5c>
    3520:	mov	x0, #0x0                   	// #0
    3524:	b	338c <libintl_gettext@@Base+0xd5c>
    3528:	mov	x0, #0x0                   	// #0
    352c:	b	338c <libintl_gettext@@Base+0xd5c>
    3530:	mov	x0, x8
    3534:	b	338c <libintl_gettext@@Base+0xd5c>
    3538:	mov	x0, x9
    353c:	b	338c <libintl_gettext@@Base+0xd5c>
    3540:	mov	x0, x10
    3544:	b	338c <libintl_gettext@@Base+0xd5c>
    3548:	mov	x0, x11
    354c:	b	338c <libintl_gettext@@Base+0xd5c>
    3550:	mov	x0, x12
    3554:	b	338c <libintl_gettext@@Base+0xd5c>
    3558:	mov	x0, #0x0                   	// #0
    355c:	b	338c <libintl_gettext@@Base+0xd5c>
    3560:	mov	x0, #0x0                   	// #0
    3564:	b	338c <libintl_gettext@@Base+0xd5c>
    3568:	mov	x0, #0x0                   	// #0
    356c:	b	338c <libintl_gettext@@Base+0xd5c>
    3570:	mov	x0, x2
    3574:	b	338c <libintl_gettext@@Base+0xd5c>
    3578:	mov	x0, x3
    357c:	b	338c <libintl_gettext@@Base+0xd5c>
    3580:	mov	x0, x4
    3584:	b	338c <libintl_gettext@@Base+0xd5c>
    3588:	mov	x0, x5
    358c:	b	338c <libintl_gettext@@Base+0xd5c>
    3590:	mov	x0, x6
    3594:	b	338c <libintl_gettext@@Base+0xd5c>
    3598:	mov	x0, #0x0                   	// #0
    359c:	b	338c <libintl_gettext@@Base+0xd5c>
    35a0:	mov	x0, #0x0                   	// #0
    35a4:	b	338c <libintl_gettext@@Base+0xd5c>
    35a8:	mov	x0, #0x0                   	// #0
    35ac:	b	338c <libintl_gettext@@Base+0xd5c>
    35b0:	mov	x0, #0x0                   	// #0
    35b4:	b	338c <libintl_gettext@@Base+0xd5c>
    35b8:	mov	x0, x8
    35bc:	b	338c <libintl_gettext@@Base+0xd5c>
    35c0:	mov	x0, x9
    35c4:	b	338c <libintl_gettext@@Base+0xd5c>
    35c8:	mov	x0, x10
    35cc:	b	338c <libintl_gettext@@Base+0xd5c>
    35d0:	mov	x0, x11
    35d4:	b	338c <libintl_gettext@@Base+0xd5c>
    35d8:	mov	x0, x12
    35dc:	b	338c <libintl_gettext@@Base+0xd5c>
    35e0:	mov	x0, #0x0                   	// #0
    35e4:	b	338c <libintl_gettext@@Base+0xd5c>
    35e8:	mov	x0, #0x0                   	// #0
    35ec:	b	338c <libintl_gettext@@Base+0xd5c>
    35f0:	mov	x0, x2
    35f4:	b	338c <libintl_gettext@@Base+0xd5c>
    35f8:	mov	x0, x3
    35fc:	b	338c <libintl_gettext@@Base+0xd5c>
    3600:	mov	x0, x4
    3604:	b	338c <libintl_gettext@@Base+0xd5c>
    3608:	mov	x0, x5
    360c:	b	338c <libintl_gettext@@Base+0xd5c>
    3610:	mov	x0, x6
    3614:	b	338c <libintl_gettext@@Base+0xd5c>
    3618:	mov	x0, #0x0                   	// #0
    361c:	b	338c <libintl_gettext@@Base+0xd5c>
    3620:	mov	x0, #0x0                   	// #0
    3624:	b	338c <libintl_gettext@@Base+0xd5c>
    3628:	mov	x0, x2
    362c:	b	338c <libintl_gettext@@Base+0xd5c>
    3630:	mov	x0, x3
    3634:	b	338c <libintl_gettext@@Base+0xd5c>
    3638:	mov	x0, x4
    363c:	b	338c <libintl_gettext@@Base+0xd5c>
    3640:	mov	x0, x5
    3644:	b	338c <libintl_gettext@@Base+0xd5c>
    3648:	mov	x0, x6
    364c:	b	338c <libintl_gettext@@Base+0xd5c>
    3650:	mov	x0, #0x0                   	// #0
    3654:	b	338c <libintl_gettext@@Base+0xd5c>
    3658:	mov	x0, #0x0                   	// #0
    365c:	b	338c <libintl_gettext@@Base+0xd5c>
    3660:	mov	x0, #0x0                   	// #0
    3664:	b	338c <libintl_gettext@@Base+0xd5c>
    3668:	mov	x0, x2
    366c:	b	338c <libintl_gettext@@Base+0xd5c>
    3670:	mov	x0, x3
    3674:	b	338c <libintl_gettext@@Base+0xd5c>
    3678:	mov	x0, x4
    367c:	b	338c <libintl_gettext@@Base+0xd5c>
    3680:	mov	x0, x5
    3684:	b	338c <libintl_gettext@@Base+0xd5c>
    3688:	mov	x0, x6
    368c:	b	338c <libintl_gettext@@Base+0xd5c>
    3690:	mov	x0, #0x0                   	// #0
    3694:	b	338c <libintl_gettext@@Base+0xd5c>
    3698:	mov	x0, #0x0                   	// #0
    369c:	b	338c <libintl_gettext@@Base+0xd5c>
    36a0:	mov	x0, #0x0                   	// #0
    36a4:	b	338c <libintl_gettext@@Base+0xd5c>
    36a8:	mov	x0, x2
    36ac:	b	338c <libintl_gettext@@Base+0xd5c>
    36b0:	mov	x0, x3
    36b4:	b	338c <libintl_gettext@@Base+0xd5c>
    36b8:	mov	x0, x4
    36bc:	b	338c <libintl_gettext@@Base+0xd5c>
    36c0:	mov	x0, x5
    36c4:	b	338c <libintl_gettext@@Base+0xd5c>
    36c8:	mov	x0, x6
    36cc:	b	338c <libintl_gettext@@Base+0xd5c>
    36d0:	mov	x0, #0x0                   	// #0
    36d4:	b	338c <libintl_gettext@@Base+0xd5c>
    36d8:	mov	x0, #0x0                   	// #0
    36dc:	b	338c <libintl_gettext@@Base+0xd5c>
    36e0:	mov	x0, #0x0                   	// #0
    36e4:	b	338c <libintl_gettext@@Base+0xd5c>
    36e8:	mov	x0, #0x0                   	// #0
    36ec:	b	338c <libintl_gettext@@Base+0xd5c>
    36f0:	mov	x0, x2
    36f4:	b	338c <libintl_gettext@@Base+0xd5c>
    36f8:	mov	x0, x3
    36fc:	b	338c <libintl_gettext@@Base+0xd5c>
    3700:	mov	x0, x4
    3704:	b	338c <libintl_gettext@@Base+0xd5c>
    3708:	mov	x0, x5
    370c:	b	338c <libintl_gettext@@Base+0xd5c>
    3710:	mov	x0, x6
    3714:	b	338c <libintl_gettext@@Base+0xd5c>
    3718:	mov	x0, #0x0                   	// #0
    371c:	b	338c <libintl_gettext@@Base+0xd5c>
    3720:	mov	x24, #0x0                   	// #0
    3724:	b	378c <libintl_gettext@@Base+0x115c>
    3728:	ldr	x0, [x29, #208]
    372c:	b	379c <libintl_gettext@@Base+0x116c>
    3730:	cbnz	x24, 3740 <libintl_gettext@@Base+0x1110>
    3734:	ldr	x0, [x29, #216]
    3738:	ldr	w0, [x0, x22, lsl #2]
    373c:	b	37a8 <libintl_gettext@@Base+0x1178>
    3740:	ldr	x0, [x29, #208]
    3744:	b	3738 <libintl_gettext@@Base+0x1108>
    3748:	mov	w0, #0x1                   	// #1
    374c:	str	w0, [x29, #224]
    3750:	ldr	w0, [x19]
    3754:	cmp	w26, w23
    3758:	b.eq	3760 <libintl_gettext@@Base+0x1130>  // b.none
    375c:	bl	28c0 <libintl_gettext@@Base+0x290>
    3760:	cbz	w0, 2dc8 <libintl_gettext@@Base+0x798>
    3764:	ldr	x1, [x29, #184]
    3768:	sub	w0, w0, #0x1
    376c:	ldrb	w0, [x1, x0]
    3770:	cbnz	w0, 2dc8 <libintl_gettext@@Base+0x798>
    3774:	ldr	x0, [x29, #152]
    3778:	str	x21, [x0, x24, lsl #3]
    377c:	ldr	w0, [x29, #224]
    3780:	cbz	w0, 3b84 <libintl_gettext@@Base+0x1554>
    3784:	cbnz	x24, 3b60 <libintl_gettext@@Base+0x1530>
    3788:	mov	x24, #0x1                   	// #1
    378c:	cmp	w26, w23
    3790:	b.eq	3730 <libintl_gettext@@Base+0x1100>  // b.none
    3794:	cbnz	x24, 3728 <libintl_gettext@@Base+0x10f8>
    3798:	ldr	x0, [x29, #216]
    379c:	ldr	w0, [x0, x22, lsl #2]
    37a0:	bl	28c0 <libintl_gettext@@Base+0x290>
    37a4:	mov	w0, w0
    37a8:	add	x1, x27, x0
    37ac:	cmp	w26, w23
    37b0:	ldr	w0, [x27, x0]
    37b4:	b.eq	37bc <libintl_gettext@@Base+0x118c>  // b.none
    37b8:	bl	28c0 <libintl_gettext@@Base+0x290>
    37bc:	mov	w0, w0
    37c0:	add	x19, x1, #0x4
    37c4:	add	x0, x27, x0
    37c8:	str	x0, [x29, #184]
    37cc:	cmp	w26, w23
    37d0:	ldr	w0, [x1, #8]
    37d4:	b.eq	37dc <libintl_gettext@@Base+0x11ac>  // b.none
    37d8:	bl	28c0 <libintl_gettext@@Base+0x290>
    37dc:	cmn	w0, #0x1
    37e0:	mov	x21, #0x0                   	// #0
    37e4:	cset	w0, ne  // ne = any
    37e8:	cbz	w0, 3748 <libintl_gettext@@Base+0x1118>
    37ec:	mov	w0, #0x1                   	// #1
    37f0:	str	w0, [x29, #224]
    37f4:	ldr	w0, [x19]
    37f8:	cmp	w26, w23
    37fc:	b.eq	3804 <libintl_gettext@@Base+0x11d4>  // b.none
    3800:	bl	28c0 <libintl_gettext@@Base+0x290>
    3804:	mov	w1, w0
    3808:	add	x21, x21, w0, uxtw
    380c:	cmp	w26, w23
    3810:	ldr	w0, [x19, #4]
    3814:	b.eq	381c <libintl_gettext@@Base+0x11ec>  // b.none
    3818:	bl	28c0 <libintl_gettext@@Base+0x290>
    381c:	cmn	w0, #0x1
    3820:	b.eq	3750 <libintl_gettext@@Base+0x1120>  // b.none
    3824:	ldr	x2, [x29, #184]
    3828:	cmp	w0, w20
    382c:	add	x1, x2, x1
    3830:	str	x1, [x29, #184]
    3834:	b.cs	2dc8 <libintl_gettext@@Base+0x798>  // b.hs, b.nlast
    3838:	ldr	x1, [x29, #168]
    383c:	add	x19, x19, #0x8
    3840:	ldr	x0, [x1, w0, uxtw #3]
    3844:	ldr	w1, [x29, #224]
    3848:	cmp	x0, #0x0
    384c:	csel	w1, w1, wzr, ne  // ne = any
    3850:	str	w1, [x29, #224]
    3854:	bl	1d20 <strlen@plt>
    3858:	add	x21, x0, x21
    385c:	b	37f4 <libintl_gettext@@Base+0x11c4>
    3860:	mov	w2, #0x0                   	// #0
    3864:	cmp	w26, w24
    3868:	b.eq	38d8 <libintl_gettext@@Base+0x12a8>  // b.none
    386c:	cbnz	w2, 38d0 <libintl_gettext@@Base+0x12a0>
    3870:	ldr	x0, [x29, #216]
    3874:	ldr	w0, [x0, x20, lsl #2]
    3878:	bl	28c0 <libintl_gettext@@Base+0x290>
    387c:	mov	w0, w0
    3880:	add	x1, x27, x0
    3884:	cmp	w26, w24
    3888:	ldr	w0, [x1, #8]
    388c:	b.eq	3894 <libintl_gettext@@Base+0x1264>  // b.none
    3890:	bl	28c0 <libintl_gettext@@Base+0x290>
    3894:	cmn	w0, #0x1
    3898:	cset	w0, ne  // ne = any
    389c:	cbz	w0, 3b8c <libintl_gettext@@Base+0x155c>
    38a0:	add	x1, x1, #0x4
    38a4:	ldr	w0, [x1, #4]
    38a8:	cmp	w26, w24
    38ac:	b.eq	38b4 <libintl_gettext@@Base+0x1284>  // b.none
    38b0:	bl	28c0 <libintl_gettext@@Base+0x290>
    38b4:	cmn	w0, #0x1
    38b8:	b.eq	3b8c <libintl_gettext@@Base+0x155c>  // b.none
    38bc:	ldr	x3, [x29, #168]
    38c0:	ldr	x0, [x3, w0, uxtw #3]
    38c4:	cbz	x0, 3a98 <libintl_gettext@@Base+0x1468>
    38c8:	add	x1, x1, #0x8
    38cc:	b	38a4 <libintl_gettext@@Base+0x1274>
    38d0:	ldr	x0, [x29, #208]
    38d4:	b	3874 <libintl_gettext@@Base+0x1244>
    38d8:	cbnz	w2, 38e8 <libintl_gettext@@Base+0x12b8>
    38dc:	ldr	x0, [x29, #216]
    38e0:	ldr	w0, [x0, x20, lsl #2]
    38e4:	b	3880 <libintl_gettext@@Base+0x1250>
    38e8:	ldr	x0, [x29, #208]
    38ec:	b	38e0 <libintl_gettext@@Base+0x12b0>
    38f0:	ldr	x0, [x29, #192]
    38f4:	str	wzr, [x29, #224]
    38f8:	ubfiz	x0, x0, #4, #32
    38fc:	str	x0, [x29, #160]
    3900:	ldr	w0, [x29, #224]
    3904:	cmp	w26, w24
    3908:	b.eq	3a3c <libintl_gettext@@Base+0x140c>  // b.none
    390c:	cbnz	w0, 3a34 <libintl_gettext@@Base+0x1404>
    3910:	ldr	x0, [x29, #216]
    3914:	ldr	w0, [x0, x20, lsl #2]
    3918:	bl	28c0 <libintl_gettext@@Base+0x290>
    391c:	mov	w0, w0
    3920:	add	x23, x27, x0
    3924:	cmp	w26, w24
    3928:	ldr	w0, [x27, x0]
    392c:	b.eq	3934 <libintl_gettext@@Base+0x1304>  // b.none
    3930:	bl	28c0 <libintl_gettext@@Base+0x290>
    3934:	mov	w0, w0
    3938:	add	x0, x27, x0
    393c:	str	x0, [x29, #184]
    3940:	ldr	w0, [x29, #224]
    3944:	ldr	x1, [x29, #160]
    3948:	cmp	w0, #0x0
    394c:	ldr	x0, [x29, #128]
    3950:	csel	x0, x21, x0, eq  // eq = none
    3954:	str	x0, [x29, #152]
    3958:	add	x0, x0, x1
    395c:	str	x0, [x29, #144]
    3960:	ldr	w1, [x23, #4]
    3964:	cmp	w26, w24
    3968:	ldr	w0, [x23, #8]
    396c:	b.eq	3a54 <libintl_gettext@@Base+0x1424>  // b.none
    3970:	bl	28c0 <libintl_gettext@@Base+0x290>
    3974:	cmn	w0, #0x1
    3978:	b.eq	3a64 <libintl_gettext@@Base+0x1434>  // b.none
    397c:	ldr	x0, [x29, #144]
    3980:	add	x23, x23, #0x4
    3984:	str	x19, [x0, #8]
    3988:	ldp	w2, w3, [x23]
    398c:	cmp	w26, w24
    3990:	b.eq	39b4 <libintl_gettext@@Base+0x1384>  // b.none
    3994:	mov	w0, w2
    3998:	str	w3, [x29, #112]
    399c:	bl	28c0 <libintl_gettext@@Base+0x290>
    39a0:	mov	w2, w0
    39a4:	ldr	w3, [x29, #112]
    39a8:	mov	w0, w3
    39ac:	bl	28c0 <libintl_gettext@@Base+0x290>
    39b0:	mov	w3, w0
    39b4:	cbz	w2, 39e8 <libintl_gettext@@Base+0x13b8>
    39b8:	ldr	x1, [x29, #184]
    39bc:	mov	w2, w2
    39c0:	mov	x0, x19
    39c4:	str	w3, [x29, #104]
    39c8:	str	x2, [x29, #112]
    39cc:	bl	1cd0 <memcpy@plt>
    39d0:	ldr	x2, [x29, #112]
    39d4:	ldr	x0, [x29, #184]
    39d8:	add	x19, x19, x2
    39dc:	ldr	w3, [x29, #104]
    39e0:	add	x0, x0, x2
    39e4:	str	x0, [x29, #184]
    39e8:	cmn	w3, #0x1
    39ec:	b.eq	3aa0 <libintl_gettext@@Base+0x1470>  // b.none
    39f0:	ldr	x0, [x29, #168]
    39f4:	add	x23, x23, #0x8
    39f8:	ldr	x1, [x0, w3, uxtw #3]
    39fc:	str	x1, [x29, #104]
    3a00:	mov	x0, x1
    3a04:	bl	1d20 <strlen@plt>
    3a08:	mov	x2, x0
    3a0c:	ldr	x1, [x29, #104]
    3a10:	mov	x0, x19
    3a14:	str	x2, [x29, #112]
    3a18:	bl	1cd0 <memcpy@plt>
    3a1c:	ldr	x2, [x29, #112]
    3a20:	add	x19, x19, x2
    3a24:	b	3988 <libintl_gettext@@Base+0x1358>
    3a28:	mov	w0, #0x1                   	// #1
    3a2c:	str	w0, [x29, #224]
    3a30:	b	3900 <libintl_gettext@@Base+0x12d0>
    3a34:	ldr	x0, [x29, #208]
    3a38:	b	3914 <libintl_gettext@@Base+0x12e4>
    3a3c:	cbnz	w0, 3a4c <libintl_gettext@@Base+0x141c>
    3a40:	ldr	x0, [x29, #216]
    3a44:	ldr	w0, [x0, x20, lsl #2]
    3a48:	b	3920 <libintl_gettext@@Base+0x12f0>
    3a4c:	ldr	x0, [x29, #208]
    3a50:	b	3a44 <libintl_gettext@@Base+0x1414>
    3a54:	cmn	w0, #0x1
    3a58:	b.ne	397c <libintl_gettext@@Base+0x134c>  // b.any
    3a5c:	mov	w1, w1
    3a60:	b	3a70 <libintl_gettext@@Base+0x1440>
    3a64:	mov	w0, w1
    3a68:	bl	28c0 <libintl_gettext@@Base+0x290>
    3a6c:	mov	w1, w0
    3a70:	ldp	x0, x2, [x29, #152]
    3a74:	str	x1, [x0, x2]
    3a78:	ldr	x0, [x29, #144]
    3a7c:	ldr	x1, [x29, #184]
    3a80:	str	x1, [x0, #8]
    3a84:	ldr	w0, [x29, #224]
    3a88:	cbz	w0, 3a28 <libintl_gettext@@Base+0x13f8>
    3a8c:	ldr	w0, [x29, #192]
    3a90:	add	w0, w0, #0x1
    3a94:	str	w0, [x29, #192]
    3a98:	add	x20, x20, #0x1
    3a9c:	b	2d0c <libintl_gettext@@Base+0x6dc>
    3aa0:	ldp	x0, x1, [x29, #144]
    3aa4:	ldr	x2, [x29, #160]
    3aa8:	ldr	x0, [x0, #8]
    3aac:	sub	x0, x19, x0
    3ab0:	str	x0, [x1, x2]
    3ab4:	b	3a84 <libintl_gettext@@Base+0x1454>
    3ab8:	ldr	x0, [x29, #176]
    3abc:	cmp	w26, w2
    3ac0:	ldr	w0, [x0, x1, lsl #2]
    3ac4:	b.eq	3acc <libintl_gettext@@Base+0x149c>  // b.none
    3ac8:	bl	28c0 <libintl_gettext@@Base+0x290>
    3acc:	str	w0, [x22, x1, lsl #2]
    3ad0:	add	x1, x1, #0x1
    3ad4:	b	2d34 <libintl_gettext@@Base+0x704>
    3ad8:	lsl	x0, x19, #4
    3adc:	ldr	x0, [x20, x0]
    3ae0:	bl	288c <libintl_gettext@@Base+0x25c>
    3ae4:	ldr	w3, [x25, #88]
    3ae8:	sub	w4, w3, #0x2
    3aec:	udiv	w1, w0, w3
    3af0:	udiv	w2, w0, w4
    3af4:	msub	w1, w1, w3, w0
    3af8:	msub	w0, w2, w4, w0
    3afc:	add	w0, w0, #0x1
    3b00:	sub	w5, w3, w0
    3b04:	sub	w3, w0, w3
    3b08:	ubfiz	x2, x1, #2, #32
    3b0c:	add	x4, x22, x2
    3b10:	ldr	w2, [x22, x2]
    3b14:	cbnz	w2, 3b30 <libintl_gettext@@Base+0x1500>
    3b18:	ldr	w0, [x25, #40]
    3b1c:	add	x19, x19, #0x1
    3b20:	add	w0, w0, #0x1
    3b24:	add	w0, w0, w23
    3b28:	str	w0, [x4]
    3b2c:	b	2d48 <libintl_gettext@@Base+0x718>
    3b30:	add	w2, w1, w3
    3b34:	add	w4, w1, w0
    3b38:	cmp	w5, w1
    3b3c:	csel	w1, w4, w2, hi  // hi = pmore
    3b40:	b	3b08 <libintl_gettext@@Base+0x14d8>
    3b44:	mov	x0, x27
    3b48:	bl	2040 <free@plt>
    3b4c:	b	2de4 <libintl_gettext@@Base+0x7b4>
    3b50:	add	x2, x25, #0xc0
    3b54:	add	x1, x25, #0xb8
    3b58:	bl	60e4 <libintl_ngettext@@Base+0x70c>
    3b5c:	b	29d4 <libintl_gettext@@Base+0x3a4>
    3b60:	ldr	w0, [x29, #248]
    3b64:	ldr	x1, [x29, #264]
    3b68:	add	w0, w0, #0x1
    3b6c:	str	w0, [x29, #248]
    3b70:	ldr	x0, [x29, #256]
    3b74:	add	x0, x0, x1
    3b78:	ldr	x1, [x29, #192]
    3b7c:	add	x0, x1, x0
    3b80:	str	x0, [x29, #192]
    3b84:	add	x22, x22, #0x1
    3b88:	b	2cb0 <libintl_gettext@@Base+0x680>
    3b8c:	cbnz	w2, 38f0 <libintl_gettext@@Base+0x12c0>
    3b90:	mov	w2, #0x1                   	// #1
    3b94:	b	3864 <libintl_gettext@@Base+0x1234>
    3b98:	mov	x0, x28
    3b9c:	bl	1e80 <malloc@plt>
    3ba0:	mov	x27, x0
    3ba4:	cbz	x0, 3be8 <libintl_gettext@@Base+0x15b8>
    3ba8:	mov	x21, x0
    3bac:	mov	x20, x28
    3bb0:	mov	x2, x20
    3bb4:	mov	x1, x21
    3bb8:	mov	w0, w19
    3bbc:	bl	20e0 <read@plt>
    3bc0:	cmp	x0, #0x0
    3bc4:	b.gt	2a1c <libintl_gettext@@Base+0x3ec>
    3bc8:	cmn	x0, #0x1
    3bcc:	b.ne	3be0 <libintl_gettext@@Base+0x15b0>  // b.any
    3bd0:	bl	2160 <__errno_location@plt>
    3bd4:	ldr	w0, [x0]
    3bd8:	cmp	w0, #0x4
    3bdc:	b.eq	3bb0 <libintl_gettext@@Base+0x1580>  // b.none
    3be0:	mov	x0, x27
    3be4:	bl	2040 <free@plt>
    3be8:	mov	w0, w19
    3bec:	bl	1f80 <close@plt>
    3bf0:	b	29d4 <libintl_gettext@@Base+0x3a4>
    3bf4:	ldr	x0, [x0]
    3bf8:	ldr	x1, [x1]
    3bfc:	b	1f40 <strcasecmp@plt>
    3c00:	sub	sp, sp, #0x240
    3c04:	sxtw	x2, w1
    3c08:	add	x1, x2, #0x1d
    3c0c:	and	x1, x1, #0xfffffffffffffff0
    3c10:	stp	x29, x30, [sp]
    3c14:	mov	x29, sp
    3c18:	stp	x19, x20, [sp, #16]
    3c1c:	stp	x21, x22, [sp, #32]
    3c20:	stp	x23, x24, [sp, #48]
    3c24:	stp	x25, x26, [sp, #64]
    3c28:	stp	x27, x28, [sp, #80]
    3c2c:	sub	sp, sp, x1
    3c30:	mov	x19, sp
    3c34:	mov	x1, x0
    3c38:	mov	x0, x19
    3c3c:	bl	2060 <mempcpy@plt>
    3c40:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    3c44:	add	x1, x1, #0xa7a
    3c48:	ldr	x2, [x1]
    3c4c:	str	x2, [x0]
    3c50:	ldur	x1, [x1, #6]
    3c54:	stur	x1, [x0, #6]
    3c58:	add	x1, x29, #0xa8
    3c5c:	mov	x0, x19
    3c60:	bl	6494 <libintl_set_relocation_prefix@@Base+0x18c>
    3c64:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    3c68:	add	x1, x1, #0xb65
    3c6c:	bl	1e70 <fopen@plt>
    3c70:	mov	x21, x0
    3c74:	ldr	x0, [x29, #168]
    3c78:	bl	2040 <free@plt>
    3c7c:	cbz	x21, 3f50 <libintl_gettext@@Base+0x1920>
    3c80:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    3c84:	add	x24, x29, #0xb0
    3c88:	add	x20, x26, #0x380
    3c8c:	mov	x23, #0x0                   	// #0
    3c90:	mov	x0, x21
    3c94:	mov	w1, #0x2                   	// #2
    3c98:	bl	2140 <__fsetlocking@plt>
    3c9c:	mov	x0, x21
    3ca0:	bl	20a0 <feof_unlocked@plt>
    3ca4:	cbz	w0, 3cfc <libintl_gettext@@Base+0x16cc>
    3ca8:	mov	x0, x21
    3cac:	bl	1e50 <fclose@plt>
    3cb0:	cbz	x23, 3cd4 <libintl_gettext@@Base+0x16a4>
    3cb4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    3cb8:	add	x4, x0, #0x380
    3cbc:	adrp	x3, 3000 <libintl_gettext@@Base+0x9d0>
    3cc0:	mov	x2, #0x10                  	// #16
    3cc4:	ldr	x1, [x0, #896]
    3cc8:	add	x3, x3, #0xbf4
    3ccc:	ldr	x0, [x4, #16]
    3cd0:	bl	1df0 <qsort@plt>
    3cd4:	mov	sp, x29
    3cd8:	mov	x0, x23
    3cdc:	ldp	x29, x30, [sp]
    3ce0:	ldp	x19, x20, [sp, #16]
    3ce4:	ldp	x21, x22, [sp, #32]
    3ce8:	ldp	x23, x24, [sp, #48]
    3cec:	ldp	x25, x26, [sp, #64]
    3cf0:	ldp	x27, x28, [sp, #80]
    3cf4:	add	sp, sp, #0x240
    3cf8:	ret
    3cfc:	mov	x2, x21
    3d00:	mov	x0, x24
    3d04:	mov	w1, #0x190                 	// #400
    3d08:	bl	1db0 <fgets_unlocked@plt>
    3d0c:	cbz	x0, 3ca8 <libintl_gettext@@Base+0x1678>
    3d10:	mov	w1, #0xa                   	// #10
    3d14:	mov	x0, x24
    3d18:	bl	2090 <strchr@plt>
    3d1c:	str	x0, [x29, #144]
    3d20:	bl	2010 <__ctype_b_loc@plt>
    3d24:	mov	x25, x24
    3d28:	ldr	x1, [x0]
    3d2c:	ldrb	w2, [x25]
    3d30:	ldrb	w0, [x25]
    3d34:	ldrh	w2, [x1, x2, lsl #1]
    3d38:	tbnz	w2, #13, 3d74 <libintl_gettext@@Base+0x1744>
    3d3c:	cmp	w0, #0x23
    3d40:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    3d44:	b.eq	3f00 <libintl_gettext@@Base+0x18d0>  // b.none
    3d48:	add	x19, x25, #0x1
    3d4c:	ldrb	w0, [x19]
    3d50:	ldrb	w2, [x19]
    3d54:	ldrh	w0, [x1, x0, lsl #1]
    3d58:	and	w0, w0, #0x2000
    3d5c:	cbz	w2, 3d88 <libintl_gettext@@Base+0x1758>
    3d60:	add	x2, x19, #0x1
    3d64:	cbz	w0, 3d7c <libintl_gettext@@Base+0x174c>
    3d68:	strb	wzr, [x19]
    3d6c:	mov	x19, x2
    3d70:	b	3d88 <libintl_gettext@@Base+0x1758>
    3d74:	add	x25, x25, #0x1
    3d78:	b	3d2c <libintl_gettext@@Base+0x16fc>
    3d7c:	mov	x19, x2
    3d80:	b	3d4c <libintl_gettext@@Base+0x171c>
    3d84:	add	x19, x19, #0x1
    3d88:	ldrb	w2, [x19]
    3d8c:	ldrb	w0, [x19]
    3d90:	ldrh	w2, [x1, x2, lsl #1]
    3d94:	tbnz	w2, #13, 3d84 <libintl_gettext@@Base+0x1754>
    3d98:	cbz	w0, 3f00 <libintl_gettext@@Base+0x18d0>
    3d9c:	add	x0, x19, #0x1
    3da0:	ldrb	w2, [x0]
    3da4:	cbz	w2, 3dd4 <libintl_gettext@@Base+0x17a4>
    3da8:	ubfiz	x4, x2, #1, #8
    3dac:	ldrh	w4, [x1, x4]
    3db0:	tbz	w4, #13, 3dc4 <libintl_gettext@@Base+0x1794>
    3db4:	cmp	w2, #0xa
    3db8:	b.eq	3dcc <libintl_gettext@@Base+0x179c>  // b.none
    3dbc:	strb	wzr, [x0]
    3dc0:	b	3dd4 <libintl_gettext@@Base+0x17a4>
    3dc4:	add	x0, x0, #0x1
    3dc8:	b	3da0 <libintl_gettext@@Base+0x1770>
    3dcc:	mov	w1, #0xa00                 	// #2560
    3dd0:	strh	w1, [x0]
    3dd4:	add	x0, x26, #0x380
    3dd8:	ldr	x22, [x26, #896]
    3ddc:	ldr	x0, [x0, #8]
    3de0:	cmp	x22, x0
    3de4:	b.cc	3e0c <libintl_gettext@@Base+0x17dc>  // b.lo, b.ul, b.last
    3de8:	lsl	x27, x0, #1
    3dec:	cmp	x0, #0x0
    3df0:	mov	x0, #0x64                  	// #100
    3df4:	csel	x27, x27, x0, ne  // ne = any
    3df8:	ldr	x0, [x20, #16]
    3dfc:	lsl	x1, x27, #4
    3e00:	bl	1f50 <realloc@plt>
    3e04:	cbz	x0, 3ca8 <libintl_gettext@@Base+0x1678>
    3e08:	stp	x27, x0, [x20, #8]
    3e0c:	mov	x0, x25
    3e10:	bl	1d20 <strlen@plt>
    3e14:	add	x28, x0, #0x1
    3e18:	mov	x0, x19
    3e1c:	bl	1d20 <strlen@plt>
    3e20:	ldr	x9, [x20, #24]
    3e24:	add	x27, x0, #0x1
    3e28:	add	x0, x9, x28
    3e2c:	str	x0, [x29, #136]
    3e30:	add	x0, x0, x27
    3e34:	str	x0, [x29, #152]
    3e38:	ldr	x0, [x20, #32]
    3e3c:	ldr	x1, [x29, #152]
    3e40:	cmp	x1, x0
    3e44:	b.ls	3e9c <libintl_gettext@@Base+0x186c>  // b.plast
    3e48:	add	x1, x28, x27
    3e4c:	mov	x4, #0x400                 	// #1024
    3e50:	ldr	x5, [x20, #40]
    3e54:	cmp	x1, #0x400
    3e58:	csel	x1, x1, x4, cs  // cs = hs, nlast
    3e5c:	str	x5, [x29, #128]
    3e60:	add	x1, x1, x0
    3e64:	mov	x0, x5
    3e68:	stp	x9, x1, [x29, #112]
    3e6c:	bl	1f50 <realloc@plt>
    3e70:	cbz	x0, 3ca8 <libintl_gettext@@Base+0x1678>
    3e74:	ldr	x5, [x29, #128]
    3e78:	ldp	x9, x1, [x29, #112]
    3e7c:	cmp	x5, x0
    3e80:	b.eq	3e98 <libintl_gettext@@Base+0x1868>  // b.none
    3e84:	ldr	x4, [x20, #16]
    3e88:	sub	x5, x0, x5
    3e8c:	mov	x7, #0x0                   	// #0
    3e90:	cmp	x22, x7
    3e94:	b.ne	3f2c <libintl_gettext@@Base+0x18fc>  // b.any
    3e98:	stp	x1, x0, [x20, #32]
    3e9c:	lsl	x8, x22, #4
    3ea0:	ldr	x5, [x20, #16]
    3ea4:	mov	x2, x28
    3ea8:	ldr	x4, [x20, #40]
    3eac:	mov	x1, x25
    3eb0:	add	x7, x5, x22, lsl #4
    3eb4:	stp	x8, x5, [x29, #104]
    3eb8:	add	x0, x4, x9
    3ebc:	stp	x7, x4, [x29, #120]
    3ec0:	add	x23, x23, #0x1
    3ec4:	bl	1cd0 <memcpy@plt>
    3ec8:	ldp	x8, x5, [x29, #104]
    3ecc:	mov	x2, x27
    3ed0:	ldr	x4, [x29, #128]
    3ed4:	mov	x1, x19
    3ed8:	add	x22, x22, #0x1
    3edc:	str	x0, [x5, x8]
    3ee0:	ldr	x0, [x29, #136]
    3ee4:	add	x0, x4, x0
    3ee8:	bl	1cd0 <memcpy@plt>
    3eec:	ldr	x7, [x29, #120]
    3ef0:	str	x22, [x20]
    3ef4:	str	x0, [x7, #8]
    3ef8:	ldr	x0, [x29, #152]
    3efc:	str	x0, [x20, #24]
    3f00:	ldr	x0, [x29, #144]
    3f04:	cbnz	x0, 3c9c <libintl_gettext@@Base+0x166c>
    3f08:	mov	x2, x21
    3f0c:	mov	x0, x24
    3f10:	mov	w1, #0x190                 	// #400
    3f14:	bl	1db0 <fgets_unlocked@plt>
    3f18:	cbz	x0, 3c9c <libintl_gettext@@Base+0x166c>
    3f1c:	mov	x0, x24
    3f20:	mov	w1, #0xa                   	// #10
    3f24:	bl	2090 <strchr@plt>
    3f28:	b	3f04 <libintl_gettext@@Base+0x18d4>
    3f2c:	ldr	x8, [x4]
    3f30:	add	x7, x7, #0x1
    3f34:	add	x4, x4, #0x10
    3f38:	add	x8, x8, x5
    3f3c:	stur	x8, [x4, #-16]
    3f40:	ldur	x8, [x4, #-8]
    3f44:	add	x8, x8, x5
    3f48:	stur	x8, [x4, #-8]
    3f4c:	b	3e90 <libintl_gettext@@Base+0x1860>
    3f50:	mov	x23, #0x0                   	// #0
    3f54:	b	3cd4 <libintl_gettext@@Base+0x16a4>

0000000000003f58 <_nl_expand_alias@@Base>:
    3f58:	stp	x29, x30, [sp, #-80]!
    3f5c:	mov	x29, sp
    3f60:	stp	x19, x20, [sp, #16]
    3f64:	adrp	x20, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    3f68:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    3f6c:	stp	x21, x22, [sp, #32]
    3f70:	mov	x21, x0
    3f74:	ldr	x0, [x20, #4064]
    3f78:	str	x23, [sp, #48]
    3f7c:	cbz	x0, 3f94 <_nl_expand_alias@@Base+0x3c>
    3f80:	add	x0, x19, #0x380
    3f84:	add	x0, x0, #0x30
    3f88:	bl	2180 <pthread_mutex_lock@plt>
    3f8c:	cbz	w0, 3f94 <_nl_expand_alias@@Base+0x3c>
    3f90:	bl	1fa0 <abort@plt>
    3f94:	add	x1, x19, #0x380
    3f98:	ldr	x0, [x1, #96]
    3f9c:	cbnz	x0, 3fac <_nl_expand_alias@@Base+0x54>
    3fa0:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    3fa4:	add	x0, x0, #0xad5
    3fa8:	str	x0, [x1, #96]
    3fac:	add	x22, sp, #0x40
    3fb0:	ldr	x2, [x19, #896]
    3fb4:	str	x21, [sp, #64]
    3fb8:	add	x0, x19, #0x380
    3fbc:	cbz	x2, 4080 <_nl_expand_alias@@Base+0x128>
    3fc0:	ldr	x1, [x0, #16]
    3fc4:	adrp	x4, 3000 <libintl_gettext@@Base+0x9d0>
    3fc8:	mov	x0, x22
    3fcc:	add	x4, x4, #0xbf4
    3fd0:	mov	x3, #0x10                  	// #16
    3fd4:	bl	1f30 <bsearch@plt>
    3fd8:	cbz	x0, 4080 <_nl_expand_alias@@Base+0x128>
    3fdc:	ldr	x21, [x0, #8]
    3fe0:	ldr	x20, [x20, #4064]
    3fe4:	cbz	x20, 3ff8 <_nl_expand_alias@@Base+0xa0>
    3fe8:	add	x0, x19, #0x380
    3fec:	add	x0, x0, #0x30
    3ff0:	bl	2190 <pthread_mutex_unlock@plt>
    3ff4:	cbnz	w0, 3f90 <_nl_expand_alias@@Base+0x38>
    3ff8:	mov	x0, x21
    3ffc:	ldp	x19, x20, [sp, #16]
    4000:	ldp	x21, x22, [sp, #32]
    4004:	ldr	x23, [sp, #48]
    4008:	ldp	x29, x30, [sp], #80
    400c:	ret
    4010:	mov	w2, #0x1                   	// #1
    4014:	mov	x0, x1
    4018:	mov	x4, x1
    401c:	ldrb	w3, [x1], #1
    4020:	cmp	w3, #0x3a
    4024:	b.eq	4010 <_nl_expand_alias@@Base+0xb8>  // b.none
    4028:	mov	x1, x4
    402c:	ldrb	w4, [x4]
    4030:	mov	w3, w2
    4034:	cmp	w4, #0x0
    4038:	cset	w2, ne  // ne = any
    403c:	cmp	w4, #0x3a
    4040:	csel	w2, w2, wzr, ne  // ne = any
    4044:	add	x4, x1, #0x1
    4048:	cbnz	w2, 4028 <_nl_expand_alias@@Base+0xd0>
    404c:	cmp	x0, x1
    4050:	b.cs	4070 <_nl_expand_alias@@Base+0x118>  // b.hs, b.nlast
    4054:	cbz	w3, 405c <_nl_expand_alias@@Base+0x104>
    4058:	str	x1, [x23, #96]
    405c:	sub	w1, w1, w0
    4060:	bl	3c00 <libintl_gettext@@Base+0x15d0>
    4064:	cbnz	x0, 3fb0 <_nl_expand_alias@@Base+0x58>
    4068:	ldr	x1, [x23, #96]
    406c:	mov	w3, #0x0                   	// #0
    4070:	ldrb	w0, [x1]
    4074:	cbz	w0, 4088 <_nl_expand_alias@@Base+0x130>
    4078:	mov	w2, w3
    407c:	b	4014 <_nl_expand_alias@@Base+0xbc>
    4080:	add	x23, x19, #0x380
    4084:	b	4068 <_nl_expand_alias@@Base+0x110>
    4088:	cbz	w3, 4094 <_nl_expand_alias@@Base+0x13c>
    408c:	add	x0, x19, #0x380
    4090:	str	x1, [x0, #96]
    4094:	mov	x21, #0x0                   	// #0
    4098:	b	3fe0 <_nl_expand_alias@@Base+0x88>

000000000000409c <libintl_textdomain@@Base>:
    409c:	stp	x29, x30, [sp, #-64]!
    40a0:	mov	x29, sp
    40a4:	stp	x19, x20, [sp, #16]
    40a8:	adrp	x20, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    40ac:	stp	x21, x22, [sp, #32]
    40b0:	stp	x23, x24, [sp, #48]
    40b4:	cbnz	x0, 40d8 <libintl_textdomain@@Base+0x3c>
    40b8:	ldr	x20, [x20, #4008]
    40bc:	ldr	x19, [x20]
    40c0:	mov	x0, x19
    40c4:	ldp	x19, x20, [sp, #16]
    40c8:	ldp	x21, x22, [sp, #32]
    40cc:	ldp	x23, x24, [sp, #48]
    40d0:	ldp	x29, x30, [sp], #64
    40d4:	ret
    40d8:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    40dc:	mov	x19, x0
    40e0:	ldr	x0, [x21, #4064]
    40e4:	cbz	x0, 40fc <libintl_textdomain@@Base+0x60>
    40e8:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    40ec:	ldr	x0, [x0, #4048]
    40f0:	bl	1fb0 <pthread_rwlock_wrlock@plt>
    40f4:	cbz	w0, 40fc <libintl_textdomain@@Base+0x60>
    40f8:	bl	1fa0 <abort@plt>
    40fc:	ldr	x24, [x20, #4008]
    4100:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    4104:	ldrb	w0, [x19]
    4108:	ldr	x22, [x24]
    410c:	cbz	w0, 4120 <libintl_textdomain@@Base+0x84>
    4110:	ldr	x1, [x23, #4024]
    4114:	mov	x0, x19
    4118:	bl	1ff0 <strcmp@plt>
    411c:	cbnz	w0, 4178 <libintl_textdomain@@Base+0xdc>
    4120:	ldr	x20, [x20, #4008]
    4124:	ldr	x19, [x23, #4024]
    4128:	str	x19, [x20]
    412c:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    4130:	cmp	x22, x19
    4134:	ldr	x0, [x0, #4032]
    4138:	ldr	w1, [x0]
    413c:	add	w1, w1, #0x1
    4140:	str	w1, [x0]
    4144:	b.eq	415c <libintl_textdomain@@Base+0xc0>  // b.none
    4148:	ldr	x23, [x23, #4024]
    414c:	cmp	x22, x23
    4150:	b.eq	415c <libintl_textdomain@@Base+0xc0>  // b.none
    4154:	mov	x0, x22
    4158:	bl	2040 <free@plt>
    415c:	ldr	x21, [x21, #4064]
    4160:	cbz	x21, 40c0 <libintl_textdomain@@Base+0x24>
    4164:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    4168:	ldr	x0, [x0, #4048]
    416c:	bl	2070 <pthread_rwlock_unlock@plt>
    4170:	cbz	w0, 40c0 <libintl_textdomain@@Base+0x24>
    4174:	b	40f8 <libintl_textdomain@@Base+0x5c>
    4178:	mov	x1, x22
    417c:	mov	x0, x19
    4180:	bl	1ff0 <strcmp@plt>
    4184:	cbz	w0, 41a0 <libintl_textdomain@@Base+0x104>
    4188:	mov	x0, x19
    418c:	bl	1f60 <strdup@plt>
    4190:	mov	x19, x0
    4194:	cbz	x0, 415c <libintl_textdomain@@Base+0xc0>
    4198:	str	x0, [x24]
    419c:	b	412c <libintl_textdomain@@Base+0x90>
    41a0:	mov	x19, x22
    41a4:	b	412c <libintl_textdomain@@Base+0x90>
    41a8:	sub	sp, sp, #0xb0
    41ac:	stp	x29, x30, [sp, #32]
    41b0:	add	x29, sp, #0x20
    41b4:	stp	x19, x20, [sp, #48]
    41b8:	mov	w19, w3
    41bc:	stp	x21, x22, [sp, #64]
    41c0:	and	w22, w3, #0x4
    41c4:	stp	x23, x24, [sp, #80]
    41c8:	mov	x23, x4
    41cc:	stp	x25, x26, [sp, #96]
    41d0:	mov	x25, x1
    41d4:	mov	x26, x5
    41d8:	stp	x27, x28, [sp, #112]
    41dc:	mov	x27, x6
    41e0:	mov	x28, x7
    41e4:	str	x0, [sp, #144]
    41e8:	ldrb	w0, [x4]
    41ec:	cmp	w0, #0x2f
    41f0:	mov	x0, x4
    41f4:	csel	x21, x2, xzr, ne  // ne = any
    41f8:	bl	1d20 <strlen@plt>
    41fc:	add	x24, x0, x21
    4200:	tbz	w19, #2, 4370 <libintl_textdomain@@Base+0x2d4>
    4204:	mov	x0, x26
    4208:	bl	1d20 <strlen@plt>
    420c:	add	x0, x0, #0x1
    4210:	add	x20, x0, #0x2
    4214:	and	w0, w19, #0x2
    4218:	str	w0, [sp, #136]
    421c:	add	x20, x20, x24
    4220:	tbz	w19, #1, 4378 <libintl_textdomain@@Base+0x2dc>
    4224:	mov	x0, x27
    4228:	bl	1d20 <strlen@plt>
    422c:	add	x24, x0, #0x1
    4230:	and	w0, w19, #0x1
    4234:	str	w0, [sp, #136]
    4238:	tbz	w19, #0, 4380 <libintl_textdomain@@Base+0x2e4>
    423c:	mov	x0, x28
    4240:	bl	1d20 <strlen@plt>
    4244:	add	x0, x0, #0x1
    4248:	add	x1, x24, x0
    424c:	and	w24, w19, #0x8
    4250:	add	x20, x1, x20
    4254:	tbz	w19, #3, 4388 <libintl_textdomain@@Base+0x2ec>
    4258:	ldr	x0, [sp, #176]
    425c:	bl	1d20 <strlen@plt>
    4260:	add	x1, x0, #0x1
    4264:	ldr	x0, [sp, #184]
    4268:	str	x1, [sp, #136]
    426c:	bl	1d20 <strlen@plt>
    4270:	ldr	x1, [sp, #136]
    4274:	add	x0, x0, x1
    4278:	add	x0, x0, x20
    427c:	bl	1e80 <malloc@plt>
    4280:	mov	x20, x0
    4284:	cbz	x0, 4590 <libintl_textdomain@@Base+0x4f4>
    4288:	cbz	x21, 42b4 <libintl_textdomain@@Base+0x218>
    428c:	mov	x2, x21
    4290:	mov	x1, x25
    4294:	bl	1cd0 <memcpy@plt>
    4298:	mov	x1, x21
    429c:	mov	x0, x20
    42a0:	mov	w2, #0x3a                  	// #58
    42a4:	bl	1f20 <argz_stringify@plt>
    42a8:	add	x0, x20, x21
    42ac:	mov	w1, #0x2f                  	// #47
    42b0:	sturb	w1, [x0, #-1]
    42b4:	mov	x1, x23
    42b8:	bl	1e40 <stpcpy@plt>
    42bc:	cbz	w22, 42d0 <libintl_textdomain@@Base+0x234>
    42c0:	mov	w1, #0x5f                  	// #95
    42c4:	strb	w1, [x0], #1
    42c8:	mov	x1, x26
    42cc:	bl	1e40 <stpcpy@plt>
    42d0:	and	w1, w19, #0x2
    42d4:	cbz	w1, 42e8 <libintl_textdomain@@Base+0x24c>
    42d8:	mov	w1, #0x2e                  	// #46
    42dc:	strb	w1, [x0], #1
    42e0:	mov	x1, x27
    42e4:	bl	1e40 <stpcpy@plt>
    42e8:	and	w1, w19, #0x1
    42ec:	cbz	w1, 4300 <libintl_textdomain@@Base+0x264>
    42f0:	mov	w1, #0x2e                  	// #46
    42f4:	strb	w1, [x0], #1
    42f8:	mov	x1, x28
    42fc:	bl	1e40 <stpcpy@plt>
    4300:	cbz	w24, 4314 <libintl_textdomain@@Base+0x278>
    4304:	mov	w1, #0x40                  	// #64
    4308:	strb	w1, [x0], #1
    430c:	ldr	x1, [sp, #176]
    4310:	bl	1e40 <stpcpy@plt>
    4314:	mov	w1, #0x2f                  	// #47
    4318:	strb	w1, [x0], #1
    431c:	ldr	x1, [sp, #184]
    4320:	bl	20c0 <strcpy@plt>
    4324:	ldr	x0, [sp, #144]
    4328:	mov	x22, x0
    432c:	ldr	x24, [x0]
    4330:	cbnz	x24, 4390 <libintl_textdomain@@Base+0x2f4>
    4334:	ldr	w0, [sp, #192]
    4338:	cmp	x24, #0x0
    433c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    4340:	b.ne	43c0 <libintl_textdomain@@Base+0x324>  // b.any
    4344:	mov	x0, x20
    4348:	bl	2040 <free@plt>
    434c:	mov	x0, x24
    4350:	ldp	x29, x30, [sp, #32]
    4354:	ldp	x19, x20, [sp, #48]
    4358:	ldp	x21, x22, [sp, #64]
    435c:	ldp	x23, x24, [sp, #80]
    4360:	ldp	x25, x26, [sp, #96]
    4364:	ldp	x27, x28, [sp, #112]
    4368:	add	sp, sp, #0xb0
    436c:	ret
    4370:	mov	x0, #0x0                   	// #0
    4374:	b	4210 <libintl_textdomain@@Base+0x174>
    4378:	mov	x24, #0x0                   	// #0
    437c:	b	4230 <libintl_textdomain@@Base+0x194>
    4380:	mov	x0, #0x0                   	// #0
    4384:	b	4248 <libintl_textdomain@@Base+0x1ac>
    4388:	mov	x1, #0x0                   	// #0
    438c:	b	4264 <libintl_textdomain@@Base+0x1c8>
    4390:	ldr	x0, [x24]
    4394:	cbz	x0, 43b0 <libintl_textdomain@@Base+0x314>
    4398:	mov	x1, x20
    439c:	bl	1ff0 <strcmp@plt>
    43a0:	cmp	w0, #0x0
    43a4:	cbz	w0, 4334 <libintl_textdomain@@Base+0x298>
    43a8:	b.lt	43b8 <libintl_textdomain@@Base+0x31c>  // b.tstop
    43ac:	add	x22, x24, #0x18
    43b0:	ldr	x24, [x24, #24]
    43b4:	b	4330 <libintl_textdomain@@Base+0x294>
    43b8:	mov	x24, #0x0                   	// #0
    43bc:	b	4334 <libintl_textdomain@@Base+0x298>
    43c0:	cbz	x21, 4490 <libintl_textdomain@@Base+0x3f4>
    43c4:	mov	x1, x21
    43c8:	mov	x0, x25
    43cc:	bl	1fe0 <argz_count@plt>
    43d0:	mov	w1, #0xffffd555            	// #-10923
    43d4:	str	x0, [sp, #136]
    43d8:	and	w1, w1, w19, asr #1
    43dc:	mov	w0, #0x5555                	// #21845
    43e0:	and	w0, w19, w0
    43e4:	mov	w2, #0x3333                	// #13107
    43e8:	add	w1, w1, w0
    43ec:	mov	w0, #0xfffff333            	// #-3277
    43f0:	and	w0, w0, w1, asr #2
    43f4:	and	w1, w1, w2
    43f8:	add	w0, w0, w1
    43fc:	mov	w1, #0xf0f                 	// #3855
    4400:	add	w0, w0, w0, asr #4
    4404:	and	w0, w0, w1
    4408:	ldr	x1, [sp, #136]
    440c:	add	w0, w0, w0, lsr #8
    4410:	cmp	x1, #0x1
    4414:	lsl	x0, x1, x0
    4418:	add	x0, x0, #0x5
    441c:	cinc	x0, x0, hi  // hi = pmore
    4420:	lsl	x0, x0, #3
    4424:	bl	1e80 <malloc@plt>
    4428:	mov	x24, x0
    442c:	cbz	x0, 4344 <libintl_textdomain@@Base+0x2a8>
    4430:	ldr	x0, [sp, #136]
    4434:	str	x20, [x24]
    4438:	cmp	x0, #0x1
    443c:	b.hi	4498 <libintl_textdomain@@Base+0x3fc>  // b.pmore
    4440:	and	w0, w19, #0x3
    4444:	cmp	w0, #0x3
    4448:	cset	w0, eq  // eq = none
    444c:	str	xzr, [x24, #16]
    4450:	mov	x20, #0x0                   	// #0
    4454:	str	w0, [x24, #8]
    4458:	ldr	x0, [x22]
    445c:	str	x0, [x24, #24]
    4460:	ldr	x0, [sp, #136]
    4464:	str	x24, [x22]
    4468:	cmp	x0, #0x2
    446c:	mvn	w0, w19
    4470:	sbc	w22, w19, wzr
    4474:	str	w0, [sp, #156]
    4478:	add	x0, x24, #0x18
    447c:	str	x0, [sp, #160]
    4480:	tbz	w22, #31, 44a0 <libintl_textdomain@@Base+0x404>
    4484:	add	x9, x20, #0x4
    4488:	str	xzr, [x24, x9, lsl #3]
    448c:	b	434c <libintl_textdomain@@Base+0x2b0>
    4490:	mov	x0, #0x1                   	// #1
    4494:	b	43d0 <libintl_textdomain@@Base+0x334>
    4498:	mov	w0, #0x1                   	// #1
    449c:	b	444c <libintl_textdomain@@Base+0x3b0>
    44a0:	ldr	w0, [sp, #156]
    44a4:	tst	w0, w22
    44a8:	b.ne	4530 <libintl_textdomain@@Base+0x494>  // b.any
    44ac:	and	w0, w22, #0x3
    44b0:	cmp	w0, #0x3
    44b4:	b.eq	4530 <libintl_textdomain@@Base+0x494>  // b.none
    44b8:	ldr	x0, [sp, #136]
    44bc:	cmp	x0, #0x1
    44c0:	b.ls	4538 <libintl_textdomain@@Base+0x49c>  // b.plast
    44c4:	mov	x19, #0x0                   	// #0
    44c8:	b	4518 <libintl_textdomain@@Base+0x47c>
    44cc:	bl	1d20 <strlen@plt>
    44d0:	add	x2, x0, #0x1
    44d4:	mov	w1, #0x1                   	// #1
    44d8:	str	w1, [sp, #16]
    44dc:	ldr	x0, [sp, #144]
    44e0:	mov	x7, x28
    44e4:	ldr	x1, [sp, #184]
    44e8:	str	x1, [sp, #8]
    44ec:	ldr	x1, [sp, #176]
    44f0:	str	x1, [sp]
    44f4:	mov	x6, x27
    44f8:	mov	x1, x19
    44fc:	mov	x5, x26
    4500:	mov	x4, x23
    4504:	mov	w3, w22
    4508:	bl	41a8 <libintl_textdomain@@Base+0x10c>
    450c:	ldr	x1, [sp, #160]
    4510:	add	x20, x20, #0x1
    4514:	str	x0, [x1, x20, lsl #3]
    4518:	mov	x2, x19
    451c:	mov	x1, x21
    4520:	mov	x0, x25
    4524:	bl	1fd0 <argz_next@plt>
    4528:	mov	x19, x0
    452c:	cbnz	x0, 44cc <libintl_textdomain@@Base+0x430>
    4530:	sub	w22, w22, #0x1
    4534:	b	4480 <libintl_textdomain@@Base+0x3e4>
    4538:	mov	w0, #0x1                   	// #1
    453c:	str	w0, [sp, #16]
    4540:	ldr	x0, [sp, #184]
    4544:	str	x0, [sp, #8]
    4548:	ldr	x0, [sp, #176]
    454c:	str	x0, [sp]
    4550:	ldr	x0, [sp, #144]
    4554:	add	x10, x20, #0x1
    4558:	mov	x7, x28
    455c:	mov	x6, x27
    4560:	mov	x5, x26
    4564:	mov	x4, x23
    4568:	mov	w3, w22
    456c:	mov	x2, x21
    4570:	mov	x1, x25
    4574:	str	x10, [sp, #168]
    4578:	bl	41a8 <libintl_textdomain@@Base+0x10c>
    457c:	add	x9, x20, #0x4
    4580:	ldr	x10, [sp, #168]
    4584:	str	x0, [x24, x9, lsl #3]
    4588:	mov	x20, x10
    458c:	b	4530 <libintl_textdomain@@Base+0x494>
    4590:	mov	x24, #0x0                   	// #0
    4594:	b	434c <libintl_textdomain@@Base+0x2b0>
    4598:	stp	x29, x30, [sp, #-64]!
    459c:	mov	x29, sp
    45a0:	stp	x19, x20, [sp, #16]
    45a4:	mov	x20, x0
    45a8:	mov	w19, #0x1                   	// #1
    45ac:	stp	x21, x22, [sp, #32]
    45b0:	mov	x22, x0
    45b4:	stp	x23, x24, [sp, #48]
    45b8:	add	x23, x0, x1
    45bc:	mov	x24, #0x0                   	// #0
    45c0:	add	x21, x24, #0x1
    45c4:	cmp	x23, x22
    45c8:	b.ne	4620 <libintl_textdomain@@Base+0x584>  // b.any
    45cc:	cmp	w19, #0x0
    45d0:	mov	x0, #0x3                   	// #3
    45d4:	csel	x0, x0, xzr, ne  // ne = any
    45d8:	add	x0, x0, x21
    45dc:	bl	1e80 <malloc@plt>
    45e0:	mov	x21, x0
    45e4:	cbz	x0, 4608 <libintl_textdomain@@Base+0x56c>
    45e8:	cbz	w19, 4650 <libintl_textdomain@@Base+0x5b4>
    45ec:	mov	x19, x0
    45f0:	mov	w0, #0x7369                	// #29545
    45f4:	movk	w0, #0x6f, lsl #16
    45f8:	str	w0, [x19], #3
    45fc:	cmp	x20, x22
    4600:	b.ne	4658 <libintl_textdomain@@Base+0x5bc>  // b.any
    4604:	strb	wzr, [x19]
    4608:	mov	x0, x21
    460c:	ldp	x19, x20, [sp, #16]
    4610:	ldp	x21, x22, [sp, #32]
    4614:	ldp	x23, x24, [sp, #48]
    4618:	ldp	x29, x30, [sp], #64
    461c:	ret
    4620:	bl	2010 <__ctype_b_loc@plt>
    4624:	ldrb	w1, [x22]
    4628:	ldr	x0, [x0]
    462c:	ldrh	w0, [x0, x1, lsl #1]
    4630:	tbz	w0, #3, 4648 <libintl_textdomain@@Base+0x5ac>
    4634:	tst	x0, #0x400
    4638:	csel	w19, w19, wzr, eq  // eq = none
    463c:	add	x22, x22, #0x1
    4640:	mov	x24, x21
    4644:	b	45c0 <libintl_textdomain@@Base+0x524>
    4648:	mov	x21, x24
    464c:	b	463c <libintl_textdomain@@Base+0x5a0>
    4650:	mov	x19, x0
    4654:	b	45fc <libintl_textdomain@@Base+0x560>
    4658:	bl	2010 <__ctype_b_loc@plt>
    465c:	ldrb	w23, [x20]
    4660:	ldr	x0, [x0]
    4664:	ldrb	w1, [x20]
    4668:	ldrh	w0, [x0, x23, lsl #1]
    466c:	tbz	w0, #10, 4688 <libintl_textdomain@@Base+0x5ec>
    4670:	bl	1e20 <__ctype_tolower_loc@plt>
    4674:	ldr	x0, [x0]
    4678:	ldr	w0, [x0, x23, lsl #2]
    467c:	strb	w0, [x19], #1
    4680:	add	x20, x20, #0x1
    4684:	b	45fc <libintl_textdomain@@Base+0x560>
    4688:	tbz	w0, #11, 4680 <libintl_textdomain@@Base+0x5e4>
    468c:	strb	w1, [x19], #1
    4690:	b	4680 <libintl_textdomain@@Base+0x5e4>
    4694:	stp	x29, x30, [sp, #-80]!
    4698:	mov	x29, sp
    469c:	stp	x19, x20, [sp, #16]
    46a0:	mov	x19, x0
    46a4:	stp	x21, x22, [sp, #32]
    46a8:	mov	x21, x4
    46ac:	stp	x23, x24, [sp, #48]
    46b0:	mov	x24, x2
    46b4:	mov	x23, x3
    46b8:	stp	x25, x26, [sp, #64]
    46bc:	mov	x26, x5
    46c0:	str	xzr, [x2]
    46c4:	str	xzr, [x3]
    46c8:	str	xzr, [x4]
    46cc:	str	xzr, [x5]
    46d0:	str	x0, [x1]
    46d4:	mov	x1, x0
    46d8:	ldrb	w0, [x1]
    46dc:	cmp	w0, #0x5f
    46e0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    46e4:	b.eq	4710 <libintl_textdomain@@Base+0x674>  // b.none
    46e8:	cmp	w0, #0x40
    46ec:	b.eq	46f8 <libintl_textdomain@@Base+0x65c>  // b.none
    46f0:	cmp	w0, #0x2e
    46f4:	b.ne	4708 <libintl_textdomain@@Base+0x66c>  // b.any
    46f8:	cmp	x19, x1
    46fc:	b.eq	4718 <libintl_textdomain@@Base+0x67c>  // b.none
    4700:	mov	w25, #0x0                   	// #0
    4704:	b	47b8 <libintl_textdomain@@Base+0x71c>
    4708:	add	x1, x1, #0x1
    470c:	b	46d8 <libintl_textdomain@@Base+0x63c>
    4710:	cmp	x19, x1
    4714:	b.ne	4790 <libintl_textdomain@@Base+0x6f4>  // b.any
    4718:	mov	x0, x19
    471c:	bl	1d20 <strlen@plt>
    4720:	add	x19, x19, x0
    4724:	mov	w20, #0x0                   	// #0
    4728:	ldrb	w0, [x19]
    472c:	cmp	w0, #0x40
    4730:	b.ne	474c <libintl_textdomain@@Base+0x6b0>  // b.any
    4734:	mov	x0, x19
    4738:	strb	wzr, [x0], #1
    473c:	str	x0, [x24]
    4740:	ldrb	w0, [x19, #1]
    4744:	cbz	w0, 474c <libintl_textdomain@@Base+0x6b0>
    4748:	orr	w20, w20, #0x8
    474c:	ldr	x0, [x23]
    4750:	cbz	x0, 4760 <libintl_textdomain@@Base+0x6c4>
    4754:	ldrb	w0, [x0]
    4758:	cbnz	w0, 4760 <libintl_textdomain@@Base+0x6c4>
    475c:	and	w20, w20, #0xfffffffb
    4760:	ldr	x0, [x21]
    4764:	cbz	x0, 4774 <libintl_textdomain@@Base+0x6d8>
    4768:	ldrb	w0, [x0]
    476c:	cbnz	w0, 4774 <libintl_textdomain@@Base+0x6d8>
    4770:	and	w20, w20, #0xfffffffd
    4774:	mov	w0, w20
    4778:	ldp	x19, x20, [sp, #16]
    477c:	ldp	x21, x22, [sp, #32]
    4780:	ldp	x23, x24, [sp, #48]
    4784:	ldp	x25, x26, [sp, #64]
    4788:	ldp	x29, x30, [sp], #80
    478c:	ret
    4790:	cmp	w0, #0x5f
    4794:	b.ne	4700 <libintl_textdomain@@Base+0x664>  // b.any
    4798:	strb	wzr, [x1], #1
    479c:	str	x1, [x23]
    47a0:	ldrb	w0, [x1]
    47a4:	and	w2, w0, #0xffffffbf
    47a8:	cmp	w0, #0x2e
    47ac:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    47b0:	b.ne	4828 <libintl_textdomain@@Base+0x78c>  // b.any
    47b4:	mov	w25, #0x4                   	// #4
    47b8:	ldrb	w0, [x1]
    47bc:	cmp	w0, #0x2e
    47c0:	b.ne	4840 <libintl_textdomain@@Base+0x7a4>  // b.any
    47c4:	mov	x0, x1
    47c8:	strb	wzr, [x0], #1
    47cc:	mov	x19, x0
    47d0:	str	x0, [x21]
    47d4:	ldrb	w3, [x19]
    47d8:	mov	w2, #0xbf                  	// #191
    47dc:	tst	w3, w2
    47e0:	b.ne	4830 <libintl_textdomain@@Base+0x794>  // b.any
    47e4:	orr	w20, w25, #0x2
    47e8:	cmp	x19, x0
    47ec:	b.eq	4728 <libintl_textdomain@@Base+0x68c>  // b.none
    47f0:	ldrb	w1, [x1, #1]
    47f4:	cbz	w1, 4728 <libintl_textdomain@@Base+0x68c>
    47f8:	sub	x1, x19, x0
    47fc:	bl	4598 <libintl_textdomain@@Base+0x4fc>
    4800:	str	x0, [x26]
    4804:	mov	x22, x0
    4808:	cbz	x0, 484c <libintl_textdomain@@Base+0x7b0>
    480c:	mov	x1, x0
    4810:	ldr	x0, [x21]
    4814:	bl	1ff0 <strcmp@plt>
    4818:	cbnz	w0, 4838 <libintl_textdomain@@Base+0x79c>
    481c:	mov	x0, x22
    4820:	bl	2040 <free@plt>
    4824:	b	4728 <libintl_textdomain@@Base+0x68c>
    4828:	add	x1, x1, #0x1
    482c:	b	47a0 <libintl_textdomain@@Base+0x704>
    4830:	add	x19, x19, #0x1
    4834:	b	47d4 <libintl_textdomain@@Base+0x738>
    4838:	orr	w20, w25, #0x3
    483c:	b	4728 <libintl_textdomain@@Base+0x68c>
    4840:	mov	w20, w25
    4844:	mov	x19, x1
    4848:	b	4728 <libintl_textdomain@@Base+0x68c>
    484c:	mov	w20, #0xffffffff            	// #-1
    4850:	b	4774 <libintl_textdomain@@Base+0x6d8>
    4854:	rev	w0, w0
    4858:	ret
    485c:	stp	x29, x30, [sp, #-48]!
    4860:	mov	x29, sp
    4864:	stp	x19, x20, [sp, #16]
    4868:	adrp	x20, 6000 <libintl_ngettext@@Base+0x628>
    486c:	mov	x19, x1
    4870:	add	x20, x20, #0xa88
    4874:	str	x21, [sp, #32]
    4878:	mov	x21, x0
    487c:	ldr	w0, [x21]
    4880:	cmp	w0, #0x3
    4884:	b.hi	4a14 <libintl_textdomain@@Base+0x978>  // b.pmore
    4888:	ldrb	w0, [x20, w0, uxtw]
    488c:	adr	x1, 4898 <libintl_textdomain@@Base+0x7fc>
    4890:	add	x0, x1, w0, sxtb #2
    4894:	br	x0
    4898:	ldr	w0, [x21, #4]
    489c:	cbz	w0, 48ac <libintl_textdomain@@Base+0x810>
    48a0:	cmp	w0, #0x1
    48a4:	b.ne	4a14 <libintl_textdomain@@Base+0x978>  // b.any
    48a8:	ldr	x19, [x21, #8]
    48ac:	mov	x0, x19
    48b0:	ldp	x19, x20, [sp, #16]
    48b4:	ldr	x21, [sp, #32]
    48b8:	ldp	x29, x30, [sp], #48
    48bc:	ret
    48c0:	ldr	x0, [x21, #8]
    48c4:	mov	x1, x19
    48c8:	bl	485c <libintl_textdomain@@Base+0x7c0>
    48cc:	cmp	x0, #0x0
    48d0:	cset	x19, eq  // eq = none
    48d4:	b	48ac <libintl_textdomain@@Base+0x810>
    48d8:	ldr	x0, [x21, #8]
    48dc:	mov	x1, x19
    48e0:	bl	485c <libintl_textdomain@@Base+0x7c0>
    48e4:	mov	x20, x0
    48e8:	ldr	w0, [x21, #4]
    48ec:	cmp	w0, #0xf
    48f0:	b.ne	491c <libintl_textdomain@@Base+0x880>  // b.any
    48f4:	cbnz	x20, 4910 <libintl_textdomain@@Base+0x874>
    48f8:	ldr	x0, [x21, #16]
    48fc:	mov	x1, x19
    4900:	bl	485c <libintl_textdomain@@Base+0x7c0>
    4904:	cmp	x0, #0x0
    4908:	cset	w19, ne  // ne = any
    490c:	b	4914 <libintl_textdomain@@Base+0x878>
    4910:	mov	w19, #0x1                   	// #1
    4914:	sxtw	x19, w19
    4918:	b	48ac <libintl_textdomain@@Base+0x810>
    491c:	cmp	w0, #0xe
    4920:	b.ne	4930 <libintl_textdomain@@Base+0x894>  // b.any
    4924:	cbnz	x20, 48f8 <libintl_textdomain@@Base+0x85c>
    4928:	mov	w19, #0x0                   	// #0
    492c:	b	4914 <libintl_textdomain@@Base+0x878>
    4930:	ldr	x0, [x21, #16]
    4934:	mov	x1, x19
    4938:	bl	485c <libintl_textdomain@@Base+0x7c0>
    493c:	mov	x19, x0
    4940:	ldr	w0, [x21, #4]
    4944:	sub	w0, w0, #0x3
    4948:	cmp	w0, #0xa
    494c:	b.hi	4a14 <libintl_textdomain@@Base+0x978>  // b.pmore
    4950:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    4954:	add	x1, x1, #0xa8c
    4958:	ldrb	w0, [x1, w0, uxtw]
    495c:	adr	x1, 4968 <libintl_textdomain@@Base+0x8cc>
    4960:	add	x0, x1, w0, sxtb #2
    4964:	br	x0
    4968:	mul	x19, x20, x19
    496c:	b	48ac <libintl_textdomain@@Base+0x810>
    4970:	cbnz	x19, 497c <libintl_textdomain@@Base+0x8e0>
    4974:	mov	w0, #0x8                   	// #8
    4978:	bl	1d40 <raise@plt>
    497c:	udiv	x19, x20, x19
    4980:	b	48ac <libintl_textdomain@@Base+0x810>
    4984:	cbnz	x19, 4990 <libintl_textdomain@@Base+0x8f4>
    4988:	mov	w0, #0x8                   	// #8
    498c:	bl	1d40 <raise@plt>
    4990:	udiv	x1, x20, x19
    4994:	msub	x19, x1, x19, x20
    4998:	b	48ac <libintl_textdomain@@Base+0x810>
    499c:	add	x19, x20, x19
    49a0:	b	48ac <libintl_textdomain@@Base+0x810>
    49a4:	sub	x19, x20, x19
    49a8:	b	48ac <libintl_textdomain@@Base+0x810>
    49ac:	cmp	x20, x19
    49b0:	cset	x19, cc  // cc = lo, ul, last
    49b4:	b	48ac <libintl_textdomain@@Base+0x810>
    49b8:	cmp	x20, x19
    49bc:	cset	x19, hi  // hi = pmore
    49c0:	b	48ac <libintl_textdomain@@Base+0x810>
    49c4:	cmp	x20, x19
    49c8:	cset	x19, ls  // ls = plast
    49cc:	b	48ac <libintl_textdomain@@Base+0x810>
    49d0:	cmp	x20, x19
    49d4:	cset	x19, cs  // cs = hs, nlast
    49d8:	b	48ac <libintl_textdomain@@Base+0x810>
    49dc:	cmp	x20, x19
    49e0:	b	48d0 <libintl_textdomain@@Base+0x834>
    49e4:	cmp	x20, x19
    49e8:	cset	x19, ne  // ne = any
    49ec:	b	48ac <libintl_textdomain@@Base+0x810>
    49f0:	ldr	x0, [x21, #8]
    49f4:	mov	x1, x19
    49f8:	bl	485c <libintl_textdomain@@Base+0x7c0>
    49fc:	cmp	x0, #0x0
    4a00:	cset	w0, eq  // eq = none
    4a04:	add	w0, w0, #0x1
    4a08:	add	x21, x21, w0, sxtw #3
    4a0c:	ldr	x21, [x21, #8]
    4a10:	b	487c <libintl_textdomain@@Base+0x7e0>
    4a14:	mov	x19, #0x0                   	// #0
    4a18:	b	48ac <libintl_textdomain@@Base+0x810>
    4a1c:	stp	x29, x30, [sp, #-32]!
    4a20:	mov	x29, sp
    4a24:	stp	x19, x20, [sp, #16]
    4a28:	mov	x20, x0
    4a2c:	mov	x19, x1
    4a30:	ldr	x0, [x0, #32]
    4a34:	cbz	x0, 4a88 <libintl_textdomain@@Base+0x9ec>
    4a38:	add	x0, x20, #0x38
    4a3c:	ldr	x1, [x19, #32]
    4a40:	cbz	x1, 4a90 <libintl_textdomain@@Base+0x9f4>
    4a44:	add	x1, x19, #0x38
    4a48:	bl	1ff0 <strcmp@plt>
    4a4c:	cbnz	w0, 4a7c <libintl_textdomain@@Base+0x9e0>
    4a50:	ldr	x1, [x19]
    4a54:	ldr	x0, [x20]
    4a58:	bl	1ff0 <strcmp@plt>
    4a5c:	cbnz	w0, 4a7c <libintl_textdomain@@Base+0x9e0>
    4a60:	ldr	x1, [x19, #16]
    4a64:	ldr	x0, [x20, #16]
    4a68:	bl	1ff0 <strcmp@plt>
    4a6c:	cbnz	w0, 4a7c <libintl_textdomain@@Base+0x9e0>
    4a70:	ldr	w1, [x19, #8]
    4a74:	ldr	w0, [x20, #8]
    4a78:	sub	w0, w0, w1
    4a7c:	ldp	x19, x20, [sp, #16]
    4a80:	ldp	x29, x30, [sp], #32
    4a84:	ret
    4a88:	ldr	x0, [x20, #56]
    4a8c:	b	4a3c <libintl_textdomain@@Base+0x9a0>
    4a90:	ldr	x1, [x19, #56]
    4a94:	b	4a48 <libintl_textdomain@@Base+0x9ac>
    4a98:	stp	x29, x30, [sp, #-48]!
    4a9c:	mov	x29, sp
    4aa0:	stp	x19, x20, [sp, #16]
    4aa4:	mov	x20, x0
    4aa8:	mov	x19, x2
    4aac:	ldr	x0, [x0, #184]
    4ab0:	stp	x21, x22, [sp, #32]
    4ab4:	mov	x22, x3
    4ab8:	bl	485c <libintl_textdomain@@Base+0x7c0>
    4abc:	mov	x21, x0
    4ac0:	ldr	x0, [x20, #192]
    4ac4:	mov	x20, x19
    4ac8:	cmp	x21, x0
    4acc:	b.cs	4ad8 <libintl_textdomain@@Base+0xa3c>  // b.hs, b.nlast
    4ad0:	add	x22, x19, x22
    4ad4:	cbnz	x21, 4ae0 <libintl_textdomain@@Base+0xa44>
    4ad8:	mov	x19, x20
    4adc:	b	4afc <libintl_textdomain@@Base+0xa60>
    4ae0:	mov	x0, x20
    4ae4:	bl	1d20 <strlen@plt>
    4ae8:	add	x0, x0, #0x1
    4aec:	sub	x21, x21, #0x1
    4af0:	add	x20, x20, x0
    4af4:	cmp	x20, x22
    4af8:	b.cc	4ad4 <libintl_textdomain@@Base+0xa38>  // b.lo, b.ul, b.last
    4afc:	mov	x0, x19
    4b00:	ldp	x19, x20, [sp, #16]
    4b04:	ldp	x21, x22, [sp, #32]
    4b08:	ldp	x29, x30, [sp], #48
    4b0c:	ret
    4b10:	stp	x29, x30, [sp, #-176]!
    4b14:	mov	x29, sp
    4b18:	stp	x19, x20, [sp, #16]
    4b1c:	stp	x21, x22, [sp, #32]
    4b20:	mov	x21, x2
    4b24:	ldr	w2, [x0, #8]
    4b28:	stp	x23, x24, [sp, #48]
    4b2c:	cmp	w2, #0x0
    4b30:	stp	x25, x26, [sp, #64]
    4b34:	mov	x26, x0
    4b38:	stp	x27, x28, [sp, #80]
    4b3c:	mov	x27, x1
    4b40:	str	x4, [x29, #112]
    4b44:	str	w3, [x29, #120]
    4b48:	b.gt	4b50 <libintl_textdomain@@Base+0xab4>
    4b4c:	bl	28c8 <libintl_gettext@@Base+0x298>
    4b50:	ldr	x19, [x26, #16]
    4b54:	cbnz	x19, 4b60 <libintl_textdomain@@Base+0xac4>
    4b58:	mov	x23, #0x0                   	// #0
    4b5c:	b	4e50 <libintl_textdomain@@Base+0xdb4>
    4b60:	ldr	x0, [x19, #96]
    4b64:	ldr	w24, [x19, #40]
    4b68:	cbz	x0, 4c78 <libintl_textdomain@@Base+0xbdc>
    4b6c:	mov	x0, x21
    4b70:	bl	1d20 <strlen@plt>
    4b74:	mov	x25, x0
    4b78:	mov	x0, x21
    4b7c:	str	w25, [x29, #128]
    4b80:	bl	288c <libintl_gettext@@Base+0x25c>
    4b84:	ldr	w1, [x19, #88]
    4b88:	and	x25, x25, #0xffffffff
    4b8c:	ldr	x28, [x19, #96]
    4b90:	sub	w2, w1, #0x2
    4b94:	udiv	w22, w0, w1
    4b98:	udiv	w23, w0, w2
    4b9c:	msub	w22, w22, w1, w0
    4ba0:	msub	w0, w23, w2, w0
    4ba4:	add	w23, w0, #0x1
    4ba8:	ldr	w0, [x19, #104]
    4bac:	str	w0, [x29, #136]
    4bb0:	sub	w0, w1, w23
    4bb4:	str	w0, [x29, #108]
    4bb8:	sub	w0, w23, w1
    4bbc:	str	w0, [x29, #104]
    4bc0:	ldr	w1, [x29, #136]
    4bc4:	ldr	w0, [x28, w22, uxtw #2]
    4bc8:	cbz	w1, 4bd0 <libintl_textdomain@@Base+0xb34>
    4bcc:	bl	4854 <libintl_textdomain@@Base+0x7b8>
    4bd0:	cbz	w0, 4b58 <libintl_textdomain@@Base+0xabc>
    4bd4:	sub	w20, w0, #0x1
    4bd8:	cmp	w24, w20
    4bdc:	b.ls	4c4c <libintl_textdomain@@Base+0xbb0>  // b.plast
    4be0:	ldr	w2, [x19, #24]
    4be4:	ubfiz	x0, x20, #3, #32
    4be8:	ldr	x1, [x19, #48]
    4bec:	add	x3, x1, x0
    4bf0:	ldr	w0, [x1, x0]
    4bf4:	cbz	w2, 4bfc <libintl_textdomain@@Base+0xb60>
    4bf8:	bl	4854 <libintl_textdomain@@Base+0x7b8>
    4bfc:	ldr	w1, [x29, #128]
    4c00:	cmp	w0, w1
    4c04:	b.cc	4c70 <libintl_textdomain@@Base+0xbd4>  // b.lo, b.ul, b.last
    4c08:	ldr	w0, [x3, #4]
    4c0c:	ldr	x1, [x19]
    4c10:	cbz	w2, 4c18 <libintl_textdomain@@Base+0xb7c>
    4c14:	bl	4854 <libintl_textdomain@@Base+0x7b8>
    4c18:	mov	w0, w0
    4c1c:	add	x1, x1, x0
    4c20:	mov	x0, x21
    4c24:	bl	1ff0 <strcmp@plt>
    4c28:	cmp	w0, #0x0
    4c2c:	cset	w0, eq  // eq = none
    4c30:	cbnz	w0, 4cd8 <libintl_textdomain@@Base+0xc3c>
    4c34:	ldp	w0, w2, [x29, #104]
    4c38:	add	w1, w22, w23
    4c3c:	add	w0, w22, w0
    4c40:	cmp	w2, w22
    4c44:	csel	w22, w1, w0, hi  // hi = pmore
    4c48:	b	4bc0 <libintl_textdomain@@Base+0xb24>
    4c4c:	sub	w0, w20, w24
    4c50:	ldr	x1, [x19, #72]
    4c54:	lsl	x2, x0, #4
    4c58:	add	x0, x1, x0, lsl #4
    4c5c:	ldr	x1, [x1, x2]
    4c60:	cmp	x1, x25
    4c64:	b.ls	4c70 <libintl_textdomain@@Base+0xbd4>  // b.plast
    4c68:	ldr	x1, [x0, #8]
    4c6c:	b	4c20 <libintl_textdomain@@Base+0xb84>
    4c70:	mov	w0, #0x0                   	// #0
    4c74:	b	4c30 <libintl_textdomain@@Base+0xb94>
    4c78:	mov	w23, w24
    4c7c:	mov	x22, #0x0                   	// #0
    4c80:	cmp	x23, x22
    4c84:	b.ls	4b58 <libintl_textdomain@@Base+0xabc>  // b.plast
    4c88:	add	x20, x23, x22
    4c8c:	ldr	w2, [x19, #24]
    4c90:	ldr	x0, [x19, #48]
    4c94:	lsr	x20, x20, #1
    4c98:	ldr	x1, [x19]
    4c9c:	add	x0, x0, x20, lsl #3
    4ca0:	ldr	w0, [x0, #4]
    4ca4:	cbz	w2, 4cac <libintl_textdomain@@Base+0xc10>
    4ca8:	bl	4854 <libintl_textdomain@@Base+0x7b8>
    4cac:	mov	w0, w0
    4cb0:	add	x1, x1, x0
    4cb4:	mov	x0, x21
    4cb8:	bl	1ff0 <strcmp@plt>
    4cbc:	cmp	w0, #0x0
    4cc0:	b.lt	4cd0 <libintl_textdomain@@Base+0xc34>  // b.tstop
    4cc4:	b.eq	4cd8 <libintl_textdomain@@Base+0xc3c>  // b.none
    4cc8:	add	x22, x20, #0x1
    4ccc:	b	4c80 <libintl_textdomain@@Base+0xbe4>
    4cd0:	mov	x23, x20
    4cd4:	b	4c80 <libintl_textdomain@@Base+0xbe4>
    4cd8:	mov	w0, w24
    4cdc:	cmp	x20, w24, uxtw
    4ce0:	b.cs	4dc0 <libintl_textdomain@@Base+0xd24>  // b.hs, b.nlast
    4ce4:	ldr	x2, [x19, #56]
    4ce8:	lsl	x3, x20, #3
    4cec:	ldr	w1, [x19, #24]
    4cf0:	ldr	x23, [x19]
    4cf4:	add	x0, x2, x20, lsl #3
    4cf8:	ldr	w0, [x0, #4]
    4cfc:	cbz	w1, 4d04 <libintl_textdomain@@Base+0xc68>
    4d00:	bl	4854 <libintl_textdomain@@Base+0x7b8>
    4d04:	mov	w0, w0
    4d08:	add	x23, x23, x0
    4d0c:	ldr	w0, [x2, x3]
    4d10:	cbz	w1, 4d18 <libintl_textdomain@@Base+0xc7c>
    4d14:	bl	4854 <libintl_textdomain@@Base+0x7b8>
    4d18:	add	w25, w0, #0x1
    4d1c:	ldr	w0, [x29, #120]
    4d20:	cbz	w0, 51a0 <libintl_textdomain@@Base+0x1104>
    4d24:	cbz	x27, 4d30 <libintl_textdomain@@Base+0xc94>
    4d28:	ldr	x28, [x27, #16]
    4d2c:	cbnz	x28, 4da4 <libintl_textdomain@@Base+0xd08>
    4d30:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    4d34:	ldr	w0, [x21, #1000]
    4d38:	cbnz	w0, 4d90 <libintl_textdomain@@Base+0xcf4>
    4d3c:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    4d40:	add	x0, x0, #0xaba
    4d44:	bl	2170 <getenv@plt>
    4d48:	mov	x22, x0
    4d4c:	cbz	x0, 4d88 <libintl_textdomain@@Base+0xcec>
    4d50:	ldrb	w1, [x0]
    4d54:	cbz	w1, 4d88 <libintl_textdomain@@Base+0xcec>
    4d58:	bl	1d20 <strlen@plt>
    4d5c:	add	x2, x0, #0x1
    4d60:	mov	x0, x2
    4d64:	str	x2, [x29, #136]
    4d68:	bl	1e80 <malloc@plt>
    4d6c:	mov	x28, x0
    4d70:	cbz	x0, 4d80 <libintl_textdomain@@Base+0xce4>
    4d74:	ldr	x2, [x29, #136]
    4d78:	mov	x1, x22
    4d7c:	bl	1cd0 <memcpy@plt>
    4d80:	add	x0, x21, #0x3e8
    4d84:	str	x28, [x0, #8]
    4d88:	mov	w0, #0x1                   	// #1
    4d8c:	str	w0, [x21, #1000]
    4d90:	add	x21, x21, #0x3e8
    4d94:	ldr	x28, [x21, #8]
    4d98:	cbnz	x28, 4da4 <libintl_textdomain@@Base+0xd08>
    4d9c:	bl	61d4 <libintl_ngettext@@Base+0x7fc>
    4da0:	mov	x28, x0
    4da4:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    4da8:	ldr	x0, [x21, #4064]
    4dac:	cbz	x0, 4ddc <libintl_textdomain@@Base+0xd40>
    4db0:	add	x0, x19, #0x80
    4db4:	bl	1d60 <pthread_rwlock_rdlock@plt>
    4db8:	cbz	w0, 4ddc <libintl_textdomain@@Base+0xd40>
    4dbc:	bl	1fa0 <abort@plt>
    4dc0:	ldr	x1, [x19, #80]
    4dc4:	sub	x0, x20, x0
    4dc8:	lsl	x2, x0, #4
    4dcc:	add	x0, x1, x0, lsl #4
    4dd0:	ldr	x25, [x1, x2]
    4dd4:	ldr	x23, [x0, #8]
    4dd8:	b	4d1c <libintl_textdomain@@Base+0xc80>
    4ddc:	ldr	x2, [x19, #120]
    4de0:	mov	x4, #0x18                  	// #24
    4de4:	cbnz	x2, 4e74 <libintl_textdomain@@Base+0xdd8>
    4de8:	ldr	x0, [x21, #4064]
    4dec:	cbz	x0, 4e04 <libintl_textdomain@@Base+0xd68>
    4df0:	mov	x22, #0x0                   	// #0
    4df4:	add	x0, x19, #0x80
    4df8:	bl	2070 <pthread_rwlock_unlock@plt>
    4dfc:	cbnz	w0, 4dbc <libintl_textdomain@@Base+0xd20>
    4e00:	cbnz	x22, 4ef0 <libintl_textdomain@@Base+0xe54>
    4e04:	ldr	x0, [x21, #4064]
    4e08:	cbz	x0, 4e18 <libintl_textdomain@@Base+0xd7c>
    4e0c:	add	x0, x19, #0x80
    4e10:	bl	1fb0 <pthread_rwlock_wrlock@plt>
    4e14:	cbnz	w0, 4dbc <libintl_textdomain@@Base+0xd20>
    4e18:	ldp	x2, x5, [x19, #112]
    4e1c:	mov	x4, #0x18                  	// #24
    4e20:	mov	x3, x5
    4e24:	cbnz	x3, 4eac <libintl_textdomain@@Base+0xe10>
    4e28:	madd	x22, x5, x4, x4
    4e2c:	cbz	x2, 4f30 <libintl_textdomain@@Base+0xe94>
    4e30:	mov	x1, x22
    4e34:	mov	x0, x2
    4e38:	bl	1f50 <realloc@plt>
    4e3c:	mov	x1, x0
    4e40:	cbnz	x0, 4f4c <libintl_textdomain@@Base+0xeb0>
    4e44:	ldr	x21, [x21, #4064]
    4e48:	cbnz	x21, 4f3c <libintl_textdomain@@Base+0xea0>
    4e4c:	mov	x23, #0xffffffffffffffff    	// #-1
    4e50:	mov	sp, x29
    4e54:	mov	x0, x23
    4e58:	ldp	x19, x20, [sp, #16]
    4e5c:	ldp	x21, x22, [sp, #32]
    4e60:	ldp	x23, x24, [sp, #48]
    4e64:	ldp	x25, x26, [sp, #64]
    4e68:	ldp	x27, x28, [sp, #80]
    4e6c:	ldp	x29, x30, [sp], #176
    4e70:	ret
    4e74:	sub	x2, x2, #0x1
    4e78:	mov	x1, x28
    4e7c:	ldr	x3, [x19, #112]
    4e80:	str	x2, [x29, #136]
    4e84:	mul	x0, x2, x4
    4e88:	add	x22, x3, x0
    4e8c:	ldr	x0, [x3, x0]
    4e90:	bl	1ff0 <strcmp@plt>
    4e94:	mov	x4, #0x18                  	// #24
    4e98:	ldr	x2, [x29, #136]
    4e9c:	cbnz	w0, 4de4 <libintl_textdomain@@Base+0xd48>
    4ea0:	ldr	x0, [x21, #4064]
    4ea4:	cbnz	x0, 4df4 <libintl_textdomain@@Base+0xd58>
    4ea8:	b	4ef0 <libintl_textdomain@@Base+0xe54>
    4eac:	sub	x3, x3, #0x1
    4eb0:	mov	x1, x28
    4eb4:	stp	x5, x3, [x29, #120]
    4eb8:	mul	x0, x3, x4
    4ebc:	str	x2, [x29, #136]
    4ec0:	add	x22, x2, x0
    4ec4:	ldr	x0, [x2, x0]
    4ec8:	bl	1ff0 <strcmp@plt>
    4ecc:	mov	x4, #0x18                  	// #24
    4ed0:	ldp	x5, x3, [x29, #120]
    4ed4:	ldr	x2, [x29, #136]
    4ed8:	cbnz	w0, 4e24 <libintl_textdomain@@Base+0xd88>
    4edc:	ldr	x0, [x21, #4064]
    4ee0:	cbz	x0, 4ef0 <libintl_textdomain@@Base+0xe54>
    4ee4:	add	x0, x19, #0x80
    4ee8:	bl	2070 <pthread_rwlock_unlock@plt>
    4eec:	cbnz	w0, 4dbc <libintl_textdomain@@Base+0xd20>
    4ef0:	ldr	x0, [x22, #8]
    4ef4:	cmn	x0, #0x1
    4ef8:	b.eq	51a0 <libintl_textdomain@@Base+0x1104>  // b.none
    4efc:	ldr	x0, [x22, #16]
    4f00:	cbnz	x0, 50bc <libintl_textdomain@@Base+0x1020>
    4f04:	ldr	x0, [x21, #4064]
    4f08:	cbnz	x0, 5084 <libintl_textdomain@@Base+0xfe8>
    4f0c:	ldr	w0, [x19, #64]
    4f10:	mov	x1, #0x8                   	// #8
    4f14:	add	w0, w24, w0
    4f18:	bl	1f10 <calloc@plt>
    4f1c:	str	x0, [x22, #16]
    4f20:	cbnz	x0, 50ec <libintl_textdomain@@Base+0x1050>
    4f24:	mov	x0, #0xffffffffffffffff    	// #-1
    4f28:	str	x0, [x22, #16]
    4f2c:	b	50a0 <libintl_textdomain@@Base+0x1004>
    4f30:	mov	x0, x22
    4f34:	bl	1e80 <malloc@plt>
    4f38:	b	4e3c <libintl_textdomain@@Base+0xda0>
    4f3c:	add	x0, x19, #0x80
    4f40:	bl	2070 <pthread_rwlock_unlock@plt>
    4f44:	cbz	w0, 4e4c <libintl_textdomain@@Base+0xdb0>
    4f48:	b	4dbc <libintl_textdomain@@Base+0xd20>
    4f4c:	str	x1, [x19, #112]
    4f50:	mov	x0, x28
    4f54:	str	x1, [x29, #136]
    4f58:	bl	1f60 <strdup@plt>
    4f5c:	mov	x28, x0
    4f60:	cbz	x0, 4e44 <libintl_textdomain@@Base+0xda8>
    4f64:	ldr	x1, [x29, #136]
    4f68:	sub	x0, x22, #0x18
    4f6c:	add	x4, x29, #0xa8
    4f70:	mov	w3, #0x0                   	// #0
    4f74:	add	x22, x1, x0
    4f78:	adrp	x2, 6000 <libintl_ngettext@@Base+0x628>
    4f7c:	str	x28, [x1, x0]
    4f80:	mov	x0, #0xffffffffffffffff    	// #-1
    4f84:	add	x2, x2, #0xad5
    4f88:	mov	x1, x27
    4f8c:	str	x0, [x22, #8]
    4f90:	mov	x0, x26
    4f94:	bl	4b10 <libintl_textdomain@@Base+0xa74>
    4f98:	cmn	x0, #0x1
    4f9c:	b.ne	4fac <libintl_textdomain@@Base+0xf10>  // b.any
    4fa0:	mov	x0, x28
    4fa4:	bl	2040 <free@plt>
    4fa8:	b	4e44 <libintl_textdomain@@Base+0xda8>
    4fac:	cbz	x0, 5064 <libintl_textdomain@@Base+0xfc8>
    4fb0:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    4fb4:	add	x1, x1, #0xac9
    4fb8:	bl	2120 <strstr@plt>
    4fbc:	cbz	x0, 5064 <libintl_textdomain@@Base+0xfc8>
    4fc0:	add	x26, x0, #0x8
    4fc4:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    4fc8:	mov	x0, x26
    4fcc:	add	x1, x1, #0xad2
    4fd0:	bl	2150 <strcspn@plt>
    4fd4:	mov	x2, x0
    4fd8:	add	x0, x0, #0x10
    4fdc:	mov	x1, x26
    4fe0:	and	x0, x0, #0xfffffffffffffff0
    4fe4:	sub	sp, sp, x0
    4fe8:	mov	x27, sp
    4fec:	mov	x0, x27
    4ff0:	bl	2060 <mempcpy@plt>
    4ff4:	strb	wzr, [x0]
    4ff8:	mov	w1, #0x2f                  	// #47
    4ffc:	mov	x0, x28
    5000:	bl	2090 <strchr@plt>
    5004:	cbnz	x0, 5078 <libintl_textdomain@@Base+0xfdc>
    5008:	mov	x0, x28
    500c:	bl	1d20 <strlen@plt>
    5010:	mov	x26, x0
    5014:	add	x0, x0, #0x1a
    5018:	and	x0, x0, #0xfffffffffffffff0
    501c:	mov	x2, x26
    5020:	sub	sp, sp, x0
    5024:	mov	x1, x28
    5028:	mov	x3, sp
    502c:	mov	x0, x3
    5030:	bl	1cd0 <memcpy@plt>
    5034:	mov	x3, x0
    5038:	add	x1, x0, x26
    503c:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    5040:	add	x0, x0, #0xad6
    5044:	ldr	x2, [x0]
    5048:	str	x2, [x3, x26]
    504c:	ldur	w0, [x0, #7]
    5050:	stur	w0, [x1, #7]
    5054:	mov	x1, x27
    5058:	mov	x0, x3
    505c:	bl	20d0 <iconv_open@plt>
    5060:	str	x0, [x22, #8]
    5064:	ldr	x0, [x19, #120]
    5068:	str	xzr, [x22, #16]
    506c:	add	x0, x0, #0x1
    5070:	str	x0, [x19, #120]
    5074:	b	4edc <libintl_textdomain@@Base+0xe40>
    5078:	mov	x1, x27
    507c:	mov	x0, x28
    5080:	b	505c <libintl_textdomain@@Base+0xfc0>
    5084:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    5088:	add	x0, x0, #0x3e8
    508c:	add	x0, x0, #0x10
    5090:	bl	2180 <pthread_mutex_lock@plt>
    5094:	cbnz	w0, 4dbc <libintl_textdomain@@Base+0xd20>
    5098:	ldr	x0, [x22, #16]
    509c:	cbz	x0, 4f0c <libintl_textdomain@@Base+0xe70>
    50a0:	ldr	x0, [x21, #4064]
    50a4:	cbz	x0, 50bc <libintl_textdomain@@Base+0x1020>
    50a8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    50ac:	add	x0, x0, #0x3e8
    50b0:	add	x0, x0, #0x10
    50b4:	bl	2190 <pthread_mutex_unlock@plt>
    50b8:	cbnz	w0, 4dbc <libintl_textdomain@@Base+0xd20>
    50bc:	ldr	x0, [x22, #16]
    50c0:	cmn	x0, #0x1
    50c4:	b.eq	4e4c <libintl_textdomain@@Base+0xdb0>  // b.none
    50c8:	ldr	x0, [x0, x20, lsl #3]
    50cc:	cbnz	x0, 5194 <libintl_textdomain@@Base+0x10f8>
    50d0:	ldr	x0, [x21, #4064]
    50d4:	cbz	x0, 50ec <libintl_textdomain@@Base+0x1050>
    50d8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    50dc:	add	x0, x0, #0x3e8
    50e0:	add	x0, x0, #0x10
    50e4:	bl	2180 <pthread_mutex_lock@plt>
    50e8:	cbnz	w0, 4dbc <libintl_textdomain@@Base+0xd20>
    50ec:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    50f0:	add	x5, x19, #0x3e8
    50f4:	add	x0, x29, #0xa8
    50f8:	add	x27, x29, #0x98
    50fc:	add	x28, x29, #0x90
    5100:	stp	x0, x19, [x29, #128]
    5104:	mov	x19, x5
    5108:	ldr	x1, [x5, #64]
    510c:	add	x0, x29, #0xa0
    5110:	mov	x24, #0x0                   	// #0
    5114:	mov	w26, #0x0                   	// #0
    5118:	add	x1, x1, #0x8
    511c:	str	x0, [x29, #120]
    5120:	ldr	x0, [x19, #72]
    5124:	stp	x23, x25, [x29, #144]
    5128:	str	x1, [x29, #160]
    512c:	cmp	x0, #0x7
    5130:	b.ls	51d4 <libintl_textdomain@@Base+0x1138>  // b.plast
    5134:	ldp	x3, x4, [x29, #120]
    5138:	sub	x0, x0, #0x8
    513c:	str	x0, [x29, #168]
    5140:	mov	x2, x27
    5144:	ldr	x0, [x22, #8]
    5148:	mov	x1, x28
    514c:	bl	2000 <iconv@plt>
    5150:	cmn	x0, #0x1
    5154:	b.eq	51ac <libintl_textdomain@@Base+0x1110>  // b.none
    5158:	ldr	x2, [x19, #64]
    515c:	ldr	x1, [x29, #160]
    5160:	ldr	x21, [x21, #4064]
    5164:	sub	x3, x1, x2
    5168:	sub	x0, x3, #0x8
    516c:	str	x0, [x2]
    5170:	ldr	x0, [x22, #16]
    5174:	str	x2, [x0, x20, lsl #3]
    5178:	ldr	x0, [x19, #72]
    517c:	sub	x0, x0, x3
    5180:	and	x2, x0, #0x7
    5184:	and	x0, x0, #0xfffffffffffffff8
    5188:	add	x1, x1, x2
    518c:	stp	x1, x0, [x19, #64]
    5190:	cbnz	x21, 5240 <libintl_textdomain@@Base+0x11a4>
    5194:	ldr	x0, [x22, #16]
    5198:	ldr	x23, [x0, x20, lsl #3]
    519c:	ldr	x25, [x23], #8
    51a0:	ldr	x0, [x29, #112]
    51a4:	str	x25, [x0]
    51a8:	b	4e50 <libintl_textdomain@@Base+0xdb4>
    51ac:	bl	2160 <__errno_location@plt>
    51b0:	ldr	w0, [x0]
    51b4:	cmp	w0, #0x7
    51b8:	b.eq	51d4 <libintl_textdomain@@Base+0x1138>  // b.none
    51bc:	ldr	x21, [x21, #4064]
    51c0:	cbz	x21, 4b58 <libintl_textdomain@@Base+0xabc>
    51c4:	add	x0, x19, #0x10
    51c8:	bl	2190 <pthread_mutex_unlock@plt>
    51cc:	cbz	w0, 4b58 <libintl_textdomain@@Base+0xabc>
    51d0:	b	4dbc <libintl_textdomain@@Base+0xd20>
    51d4:	cbz	w26, 521c <libintl_textdomain@@Base+0x1180>
    51d8:	add	w26, w26, #0x1
    51dc:	mov	w1, #0xff0                 	// #4080
    51e0:	mov	x0, x24
    51e4:	mul	w1, w26, w1
    51e8:	sxtw	x1, w1
    51ec:	str	x1, [x19, #72]
    51f0:	bl	1f50 <realloc@plt>
    51f4:	mov	x24, x0
    51f8:	cbnz	x24, 5234 <libintl_textdomain@@Base+0x1198>
    51fc:	ldr	x0, [x29, #136]
    5200:	ldr	x21, [x21, #4064]
    5204:	add	x0, x0, #0x3e8
    5208:	stp	xzr, xzr, [x0, #64]
    520c:	cbz	x21, 4e4c <libintl_textdomain@@Base+0xdb0>
    5210:	add	x0, x0, #0x10
    5214:	bl	2190 <pthread_mutex_unlock@plt>
    5218:	b	4f44 <libintl_textdomain@@Base+0xea8>
    521c:	mov	x0, #0xff0                 	// #4080
    5220:	mov	w26, #0x1                   	// #1
    5224:	str	x0, [x19, #72]
    5228:	bl	1e80 <malloc@plt>
    522c:	mov	x24, x0
    5230:	b	51f8 <libintl_textdomain@@Base+0x115c>
    5234:	add	x1, x24, #0x8
    5238:	str	x24, [x19, #64]
    523c:	b	5120 <libintl_textdomain@@Base+0x1084>
    5240:	add	x0, x19, #0x10
    5244:	bl	2190 <pthread_mutex_unlock@plt>
    5248:	cbz	w0, 5194 <libintl_textdomain@@Base+0x10f8>
    524c:	b	4dbc <libintl_textdomain@@Base+0xd20>
    5250:	stp	x29, x30, [sp, #-320]!
    5254:	mov	x29, sp
    5258:	stp	x19, x20, [sp, #16]
    525c:	mov	x19, x1
    5260:	stp	x21, x22, [sp, #32]
    5264:	stp	x23, x24, [sp, #48]
    5268:	stp	x25, x26, [sp, #64]
    526c:	stp	x27, x28, [sp, #80]
    5270:	str	x2, [x29, #168]
    5274:	str	x4, [x29, #184]
    5278:	str	w3, [x29, #196]
    527c:	cbz	x1, 53f0 <libintl_textdomain@@Base+0x1354>
    5280:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    5284:	mov	x24, x0
    5288:	mov	w26, w5
    528c:	bl	2160 <__errno_location@plt>
    5290:	str	x0, [x29, #232]
    5294:	ldr	w0, [x0]
    5298:	str	w0, [x29, #192]
    529c:	ldr	x0, [x21, #4064]
    52a0:	cbz	x0, 52b8 <libintl_textdomain@@Base+0x121c>
    52a4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    52a8:	add	x0, x0, #0x2f0
    52ac:	bl	1d60 <pthread_rwlock_rdlock@plt>
    52b0:	cbz	w0, 52b8 <libintl_textdomain@@Base+0x121c>
    52b4:	bl	1fa0 <abort@plt>
    52b8:	cbnz	x24, 52c4 <libintl_textdomain@@Base+0x1228>
    52bc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    52c0:	ldr	x24, [x0, #864]
    52c4:	str	x24, [x29, #256]
    52c8:	str	w26, [x29, #264]
    52cc:	cmp	w26, #0x6
    52d0:	str	xzr, [x29, #288]
    52d4:	str	x19, [x29, #312]
    52d8:	b.hi	5450 <libintl_textdomain@@Base+0x13b4>  // b.pmore
    52dc:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    52e0:	add	x0, x0, #0xa98
    52e4:	ldrb	w0, [x0, w26, uxtw]
    52e8:	adr	x1, 52f4 <libintl_textdomain@@Base+0x1258>
    52ec:	add	x0, x1, w0, sxtb #2
    52f0:	br	x0
    52f4:	adrp	x25, 6000 <libintl_ngettext@@Base+0x628>
    52f8:	add	x25, x25, #0xb25
    52fc:	mov	x1, x25
    5300:	mov	w0, w26
    5304:	bl	64cc <libintl_set_relocation_prefix@@Base+0x1c4>
    5308:	str	x0, [x29, #224]
    530c:	cbnz	x0, 531c <libintl_textdomain@@Base+0x1280>
    5310:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    5314:	add	x0, x0, #0xad5
    5318:	str	x0, [x29, #224]
    531c:	ldr	x0, [x29, #224]
    5320:	str	x0, [x29, #272]
    5324:	ldr	x0, [x21, #4064]
    5328:	cbz	x0, 5340 <libintl_textdomain@@Base+0x12a4>
    532c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    5330:	add	x0, x0, #0x2f0
    5334:	add	x0, x0, #0x38
    5338:	bl	1d60 <pthread_rwlock_rdlock@plt>
    533c:	cbnz	w0, 52b4 <libintl_textdomain@@Base+0x1218>
    5340:	adrp	x20, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    5344:	add	x1, x20, #0x3e8
    5348:	adrp	x22, 4000 <_nl_expand_alias@@Base+0xa8>
    534c:	add	x1, x1, #0x50
    5350:	add	x2, x22, #0xa1c
    5354:	add	x0, x29, #0x100
    5358:	bl	1e30 <tfind@plt>
    535c:	stp	x0, x20, [x29, #208]
    5360:	ldr	x0, [x21, #4064]
    5364:	str	x22, [x29, #144]
    5368:	cbz	x0, 5380 <libintl_textdomain@@Base+0x12e4>
    536c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    5370:	add	x0, x0, #0x2f0
    5374:	add	x0, x0, #0x38
    5378:	bl	2070 <pthread_rwlock_unlock@plt>
    537c:	cbnz	w0, 52b4 <libintl_textdomain@@Base+0x1218>
    5380:	ldr	x0, [x29, #208]
    5384:	cbz	x0, 5468 <libintl_textdomain@@Base+0x13cc>
    5388:	adrp	x1, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    538c:	ldr	x0, [x0]
    5390:	ldr	x1, [x1, #4032]
    5394:	ldr	w2, [x0, #24]
    5398:	ldr	w1, [x1]
    539c:	cmp	w2, w1
    53a0:	b.ne	5468 <libintl_textdomain@@Base+0x13cc>  // b.any
    53a4:	ldr	w1, [x29, #196]
    53a8:	ldr	x19, [x0, #40]
    53ac:	cbz	w1, 53cc <libintl_textdomain@@Base+0x1330>
    53b0:	ldr	x4, [x0, #32]
    53b4:	mov	x2, x19
    53b8:	ldr	x3, [x0, #48]
    53bc:	ldr	x0, [x4, #16]
    53c0:	ldr	x1, [x29, #184]
    53c4:	bl	4a98 <libintl_textdomain@@Base+0x9fc>
    53c8:	mov	x19, x0
    53cc:	ldr	x21, [x21, #4064]
    53d0:	cbz	x21, 53e4 <libintl_textdomain@@Base+0x1348>
    53d4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    53d8:	add	x0, x0, #0x2f0
    53dc:	bl	2070 <pthread_rwlock_unlock@plt>
    53e0:	cbnz	w0, 52b4 <libintl_textdomain@@Base+0x1218>
    53e4:	ldr	x0, [x29, #232]
    53e8:	ldr	w1, [x29, #192]
    53ec:	str	w1, [x0]
    53f0:	mov	sp, x29
    53f4:	mov	x0, x19
    53f8:	ldp	x19, x20, [sp, #16]
    53fc:	ldp	x21, x22, [sp, #32]
    5400:	ldp	x23, x24, [sp, #48]
    5404:	ldp	x25, x26, [sp, #64]
    5408:	ldp	x27, x28, [sp, #80]
    540c:	ldp	x29, x30, [sp], #320
    5410:	ret
    5414:	adrp	x25, 6000 <libintl_ngettext@@Base+0x628>
    5418:	add	x25, x25, #0xaf3
    541c:	b	52fc <libintl_textdomain@@Base+0x1260>
    5420:	adrp	x25, 6000 <libintl_ngettext@@Base+0x628>
    5424:	add	x25, x25, #0xaff
    5428:	b	52fc <libintl_textdomain@@Base+0x1260>
    542c:	adrp	x25, 6000 <libintl_ngettext@@Base+0x628>
    5430:	add	x25, x25, #0xb0a
    5434:	b	52fc <libintl_textdomain@@Base+0x1260>
    5438:	adrp	x25, 6000 <libintl_ngettext@@Base+0x628>
    543c:	add	x25, x25, #0xb12
    5440:	b	52fc <libintl_textdomain@@Base+0x1260>
    5444:	adrp	x25, 6000 <libintl_ngettext@@Base+0x628>
    5448:	add	x25, x25, #0xb1e
    544c:	b	52fc <libintl_textdomain@@Base+0x1260>
    5450:	adrp	x25, 6000 <libintl_ngettext@@Base+0x628>
    5454:	add	x25, x25, #0xae1
    5458:	b	52fc <libintl_textdomain@@Base+0x1260>
    545c:	adrp	x25, 6000 <libintl_ngettext@@Base+0x628>
    5460:	add	x25, x25, #0xae8
    5464:	b	52fc <libintl_textdomain@@Base+0x1260>
    5468:	ldr	x0, [x29, #216]
    546c:	add	x22, x0, #0x3e8
    5470:	ldr	w0, [x22, #88]
    5474:	cbnz	w0, 549c <libintl_textdomain@@Base+0x1400>
    5478:	bl	1dd0 <getuid@plt>
    547c:	mov	w20, w0
    5480:	bl	1d80 <geteuid@plt>
    5484:	cmp	w20, w0
    5488:	b.eq	57c8 <libintl_textdomain@@Base+0x172c>  // b.none
    548c:	ldr	x0, [x29, #216]
    5490:	mov	w1, #0x1                   	// #1
    5494:	add	x0, x0, #0x3e8
    5498:	str	w1, [x0, #88]
    549c:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    54a0:	ldr	x0, [x0, #4000]
    54a4:	ldr	x27, [x0]
    54a8:	cbnz	x27, 57e8 <libintl_textdomain@@Base+0x174c>
    54ac:	adrp	x23, 6000 <libintl_ngettext@@Base+0x628>
    54b0:	add	x23, x23, #0xa9f
    54b4:	mov	x1, x25
    54b8:	mov	w0, w26
    54bc:	bl	64cc <libintl_set_relocation_prefix@@Base+0x1c4>
    54c0:	mov	x20, x0
    54c4:	cbnz	x0, 5810 <libintl_textdomain@@Base+0x1774>
    54c8:	mov	x1, x25
    54cc:	mov	w0, w26
    54d0:	bl	6678 <libintl_set_relocation_prefix@@Base+0x370>
    54d4:	mov	x20, x0
    54d8:	cbnz	x0, 5810 <libintl_textdomain@@Base+0x1774>
    54dc:	bl	66e4 <libintl_set_relocation_prefix@@Base+0x3dc>
    54e0:	mov	x20, x0
    54e4:	mov	w28, #0x1                   	// #1
    54e8:	adrp	x22, 6000 <libintl_ngettext@@Base+0x628>
    54ec:	mov	x0, x20
    54f0:	add	x1, x22, #0xb08
    54f4:	bl	1ff0 <strcmp@plt>
    54f8:	cbz	w0, 5524 <libintl_textdomain@@Base+0x1488>
    54fc:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    5500:	add	x0, x0, #0xb2e
    5504:	bl	2170 <getenv@plt>
    5508:	cbz	x0, 5514 <libintl_textdomain@@Base+0x1478>
    550c:	ldrb	w1, [x0]
    5510:	cbnz	w1, 5818 <libintl_textdomain@@Base+0x177c>
    5514:	cbz	w28, 5524 <libintl_textdomain@@Base+0x1488>
    5518:	bl	64c4 <libintl_set_relocation_prefix@@Base+0x1bc>
    551c:	cmp	x0, #0x0
    5520:	csel	x20, x20, x0, eq  // eq = none
    5524:	mov	x0, x24
    5528:	bl	1d20 <strlen@plt>
    552c:	str	x0, [x29, #200]
    5530:	add	x0, x0, #0x3a
    5534:	str	x0, [x29, #152]
    5538:	mov	x0, x25
    553c:	bl	1d20 <strlen@plt>
    5540:	ldr	x1, [x29, #200]
    5544:	add	x0, x0, x1
    5548:	mov	x1, x25
    554c:	add	x0, x0, #0x14
    5550:	and	x0, x0, #0xfffffffffffffff0
    5554:	sub	sp, sp, x0
    5558:	mov	x0, sp
    555c:	str	x0, [x29, #176]
    5560:	bl	1e40 <stpcpy@plt>
    5564:	ldr	x2, [x29, #200]
    5568:	mov	w1, #0x2f                  	// #47
    556c:	strh	w1, [x0], #1
    5570:	mov	x1, x24
    5574:	bl	2060 <mempcpy@plt>
    5578:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    557c:	add	x1, x1, #0xb37
    5580:	bl	20c0 <strcpy@plt>
    5584:	mov	x0, x20
    5588:	bl	1d20 <strlen@plt>
    558c:	add	x0, x0, #0x10
    5590:	and	x0, x0, #0xfffffffffffffff0
    5594:	sub	sp, sp, x0
    5598:	add	x0, x22, #0xb08
    559c:	mov	x28, sp
    55a0:	str	x0, [x29, #136]
    55a4:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    55a8:	add	x0, x0, #0xb3b
    55ac:	str	x0, [x29, #128]
    55b0:	add	x0, x29, #0xf8
    55b4:	str	x0, [x29, #160]
    55b8:	ldrb	w0, [x20]
    55bc:	cmp	w0, #0x3a
    55c0:	b.eq	5820 <libintl_textdomain@@Base+0x1784>  // b.none
    55c4:	cbnz	w0, 586c <libintl_textdomain@@Base+0x17d0>
    55c8:	mov	w0, #0x43                  	// #67
    55cc:	strh	w0, [x28]
    55d0:	ldr	x1, [x29, #136]
    55d4:	mov	x0, x28
    55d8:	bl	1ff0 <strcmp@plt>
    55dc:	cbz	w0, 5940 <libintl_textdomain@@Base+0x18a4>
    55e0:	ldr	x1, [x29, #128]
    55e4:	mov	x0, x28
    55e8:	bl	1ff0 <strcmp@plt>
    55ec:	cbz	w0, 5940 <libintl_textdomain@@Base+0x18a4>
    55f0:	ldr	x2, [x29, #176]
    55f4:	mov	x3, x27
    55f8:	mov	x1, x28
    55fc:	mov	x0, x23
    5600:	bl	2640 <libintl_gettext@@Base+0x10>
    5604:	mov	x25, x0
    5608:	cbz	x0, 55b8 <libintl_textdomain@@Base+0x151c>
    560c:	ldr	x4, [x29, #160]
    5610:	mov	x2, x19
    5614:	mov	x1, x27
    5618:	mov	w3, #0x1                   	// #1
    561c:	bl	4b10 <libintl_textdomain@@Base+0xa74>
    5620:	mov	x22, x0
    5624:	cbnz	x0, 5938 <libintl_textdomain@@Base+0x189c>
    5628:	add	x7, x25, #0x20
    562c:	mov	x5, #0x0                   	// #0
    5630:	ldr	x0, [x7, x5, lsl #3]
    5634:	mov	w6, w5
    5638:	cbz	x0, 55b8 <libintl_textdomain@@Base+0x151c>
    563c:	ldr	x4, [x29, #160]
    5640:	mov	x2, x19
    5644:	mov	x1, x27
    5648:	mov	w3, #0x1                   	// #1
    564c:	stp	x7, x5, [x29, #104]
    5650:	str	w6, [x29, #124]
    5654:	bl	4b10 <libintl_textdomain@@Base+0xa74>
    5658:	mov	x22, x0
    565c:	cmn	x0, #0x1
    5660:	b.eq	5940 <libintl_textdomain@@Base+0x18a4>  // b.none
    5664:	ldp	x7, x5, [x29, #104]
    5668:	ldr	w6, [x29, #124]
    566c:	add	x5, x5, #0x1
    5670:	cbz	x0, 5630 <libintl_textdomain@@Base+0x1594>
    5674:	add	x25, x25, w6, sxtw #3
    5678:	ldr	x25, [x25, #32]
    567c:	ldr	x0, [x29, #208]
    5680:	cbnz	x0, 5874 <libintl_textdomain@@Base+0x17d8>
    5684:	mov	x0, x19
    5688:	bl	1d20 <strlen@plt>
    568c:	add	x23, x0, #0x1
    5690:	ldr	x0, [x29, #224]
    5694:	bl	1d20 <strlen@plt>
    5698:	add	x0, x0, x23
    569c:	ldr	x1, [x29, #152]
    56a0:	add	x0, x0, x1
    56a4:	bl	1e80 <malloc@plt>
    56a8:	mov	x20, x0
    56ac:	cbz	x0, 5780 <libintl_textdomain@@Base+0x16e4>
    56b0:	mov	x2, x23
    56b4:	mov	x1, x19
    56b8:	add	x0, x0, #0x38
    56bc:	bl	2060 <mempcpy@plt>
    56c0:	ldr	x1, [x29, #200]
    56c4:	mov	x19, x0
    56c8:	add	x23, x1, #0x1
    56cc:	mov	x1, x24
    56d0:	mov	x2, x23
    56d4:	bl	1cd0 <memcpy@plt>
    56d8:	ldr	x1, [x29, #224]
    56dc:	add	x23, x19, x23
    56e0:	mov	x0, x23
    56e4:	bl	20c0 <strcpy@plt>
    56e8:	str	x19, [x20]
    56ec:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    56f0:	str	w26, [x20, #8]
    56f4:	str	x23, [x20, #16]
    56f8:	ldr	x0, [x0, #4032]
    56fc:	stp	x25, x22, [x20, #32]
    5700:	ldr	w0, [x0]
    5704:	str	w0, [x20, #24]
    5708:	ldr	x0, [x29, #248]
    570c:	str	x0, [x20, #48]
    5710:	ldr	x0, [x21, #4064]
    5714:	cbz	x0, 572c <libintl_textdomain@@Base+0x1690>
    5718:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    571c:	add	x0, x0, #0x2f0
    5720:	add	x0, x0, #0x38
    5724:	bl	1fb0 <pthread_rwlock_wrlock@plt>
    5728:	cbnz	w0, 52b4 <libintl_textdomain@@Base+0x1218>
    572c:	ldr	x0, [x29, #216]
    5730:	add	x1, x0, #0x3e8
    5734:	ldr	x0, [x29, #144]
    5738:	add	x1, x1, #0x50
    573c:	add	x2, x0, #0xa1c
    5740:	mov	x0, x20
    5744:	bl	1ee0 <tsearch@plt>
    5748:	mov	x19, x0
    574c:	ldr	x0, [x21, #4064]
    5750:	cbz	x0, 5768 <libintl_textdomain@@Base+0x16cc>
    5754:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    5758:	add	x0, x0, #0x2f0
    575c:	add	x0, x0, #0x38
    5760:	bl	2070 <pthread_rwlock_unlock@plt>
    5764:	cbnz	w0, 52b4 <libintl_textdomain@@Base+0x1218>
    5768:	cbz	x19, 5778 <libintl_textdomain@@Base+0x16dc>
    576c:	ldr	x0, [x19]
    5770:	cmp	x0, x20
    5774:	b.eq	5780 <libintl_textdomain@@Base+0x16e4>  // b.none
    5778:	mov	x0, x20
    577c:	bl	2040 <free@plt>
    5780:	ldr	x0, [x29, #232]
    5784:	ldr	w1, [x29, #192]
    5788:	str	w1, [x0]
    578c:	ldr	w0, [x29, #196]
    5790:	cbz	w0, 589c <libintl_textdomain@@Base+0x1800>
    5794:	ldr	x0, [x25, #16]
    5798:	mov	x2, x22
    579c:	ldr	x1, [x29, #184]
    57a0:	ldr	x3, [x29, #248]
    57a4:	bl	4a98 <libintl_textdomain@@Base+0x9fc>
    57a8:	mov	x19, x0
    57ac:	ldr	x21, [x21, #4064]
    57b0:	cbz	x21, 53f0 <libintl_textdomain@@Base+0x1354>
    57b4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    57b8:	add	x0, x0, #0x2f0
    57bc:	bl	2070 <pthread_rwlock_unlock@plt>
    57c0:	cbz	w0, 53f0 <libintl_textdomain@@Base+0x1354>
    57c4:	b	52b4 <libintl_textdomain@@Base+0x1218>
    57c8:	bl	2050 <getgid@plt>
    57cc:	mov	w20, w0
    57d0:	bl	1d70 <getegid@plt>
    57d4:	cmp	w20, w0
    57d8:	b.ne	548c <libintl_textdomain@@Base+0x13f0>  // b.any
    57dc:	mov	w0, #0xffffffff            	// #-1
    57e0:	str	w0, [x22, #88]
    57e4:	b	549c <libintl_textdomain@@Base+0x1400>
    57e8:	add	x1, x27, #0x18
    57ec:	mov	x0, x24
    57f0:	bl	1ff0 <strcmp@plt>
    57f4:	cmp	w0, #0x0
    57f8:	cbz	w0, 58cc <libintl_textdomain@@Base+0x1830>
    57fc:	b.lt	5808 <libintl_textdomain@@Base+0x176c>  // b.tstop
    5800:	ldr	x27, [x27]
    5804:	b	54a8 <libintl_textdomain@@Base+0x140c>
    5808:	mov	x27, #0x0                   	// #0
    580c:	b	54ac <libintl_textdomain@@Base+0x1410>
    5810:	mov	w28, #0x0                   	// #0
    5814:	b	54e8 <libintl_textdomain@@Base+0x144c>
    5818:	mov	x20, x0
    581c:	b	5524 <libintl_textdomain@@Base+0x1488>
    5820:	add	x20, x20, #0x1
    5824:	b	55b8 <libintl_textdomain@@Base+0x151c>
    5828:	add	x20, x20, #0x1
    582c:	strb	w1, [x0], #1
    5830:	ldrb	w1, [x20]
    5834:	cmp	w1, #0x3a
    5838:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    583c:	b.ne	5828 <libintl_textdomain@@Base+0x178c>  // b.any
    5840:	strb	wzr, [x0]
    5844:	ldr	x0, [x29, #216]
    5848:	add	x0, x0, #0x3e8
    584c:	ldr	w0, [x0, #88]
    5850:	cmp	w0, #0x1
    5854:	b.ne	55d0 <libintl_textdomain@@Base+0x1534>  // b.any
    5858:	mov	x0, x28
    585c:	mov	w1, #0x2f                  	// #47
    5860:	bl	2090 <strchr@plt>
    5864:	cbnz	x0, 55b8 <libintl_textdomain@@Base+0x151c>
    5868:	b	55d0 <libintl_textdomain@@Base+0x1534>
    586c:	mov	x0, x28
    5870:	b	5830 <libintl_textdomain@@Base+0x1794>
    5874:	ldr	x0, [x29, #208]
    5878:	adrp	x1, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    587c:	ldr	x1, [x1, #4032]
    5880:	ldr	x0, [x0]
    5884:	ldr	w1, [x1]
    5888:	str	w1, [x0, #24]
    588c:	ldr	x1, [x29, #248]
    5890:	stp	x25, x22, [x0, #32]
    5894:	str	x1, [x0, #48]
    5898:	b	5780 <libintl_textdomain@@Base+0x16e4>
    589c:	mov	x19, x22
    58a0:	b	57ac <libintl_textdomain@@Base+0x1710>
    58a4:	mov	x0, x20
    58a8:	bl	1d20 <strlen@plt>
    58ac:	add	x2, x20, x0
    58b0:	mov	w1, #0x2f                  	// #47
    58b4:	strh	w1, [x20, x0]
    58b8:	mov	x1, x23
    58bc:	add	x0, x2, #0x1
    58c0:	mov	x23, x20
    58c4:	bl	20c0 <strcpy@plt>
    58c8:	b	54b4 <libintl_textdomain@@Base+0x1418>
    58cc:	ldr	x23, [x27, #8]
    58d0:	ldrb	w0, [x23]
    58d4:	cmp	w0, #0x2f
    58d8:	b.eq	54b4 <libintl_textdomain@@Base+0x1418>  // b.none
    58dc:	mov	x0, x23
    58e0:	bl	1d20 <strlen@plt>
    58e4:	add	x28, x0, #0x1
    58e8:	mov	x22, #0x1002                	// #4098
    58ec:	ldr	x0, [x29, #232]
    58f0:	add	x1, x22, x28
    58f4:	add	x1, x1, #0xf
    58f8:	and	x1, x1, #0xfffffffffffffff0
    58fc:	sub	sp, sp, x1
    5900:	str	wzr, [x0]
    5904:	mov	x20, sp
    5908:	mov	x1, x22
    590c:	mov	x0, x20
    5910:	bl	1d00 <getcwd@plt>
    5914:	cbnz	x0, 58a4 <libintl_textdomain@@Base+0x1808>
    5918:	ldr	x0, [x29, #232]
    591c:	ldr	w0, [x0]
    5920:	cmp	w0, #0x22
    5924:	b.ne	5940 <libintl_textdomain@@Base+0x18a4>  // b.any
    5928:	lsr	x1, x22, #1
    592c:	add	x1, x1, #0x20
    5930:	add	x22, x22, x1
    5934:	b	58ec <libintl_textdomain@@Base+0x1850>
    5938:	cmn	x0, #0x1
    593c:	b.ne	567c <libintl_textdomain@@Base+0x15e0>  // b.any
    5940:	ldr	x21, [x21, #4064]
    5944:	cbz	x21, 5958 <libintl_textdomain@@Base+0x18bc>
    5948:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    594c:	add	x0, x0, #0x2f0
    5950:	bl	2070 <pthread_rwlock_unlock@plt>
    5954:	cbnz	w0, 52b4 <libintl_textdomain@@Base+0x1218>
    5958:	ldr	x0, [x29, #216]
    595c:	add	x1, x0, #0x3e8
    5960:	ldr	w0, [x1, #88]
    5964:	cmp	w0, #0x1
    5968:	b.eq	5998 <libintl_textdomain@@Base+0x18fc>  // b.none
    596c:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    5970:	add	x0, x0, #0xb41
    5974:	bl	2170 <getenv@plt>
    5978:	cbz	x0, 5998 <libintl_textdomain@@Base+0x18fc>
    597c:	ldrb	w1, [x0]
    5980:	cbz	w1, 5998 <libintl_textdomain@@Base+0x18fc>
    5984:	ldr	w4, [x29, #196]
    5988:	mov	x2, x19
    598c:	ldr	x3, [x29, #168]
    5990:	mov	x1, x24
    5994:	bl	67fc <libintl_set_relocation_prefix@@Base+0x4f4>
    5998:	ldr	x0, [x29, #232]
    599c:	ldr	w1, [x29, #192]
    59a0:	str	w1, [x0]
    59a4:	ldr	w0, [x29, #196]
    59a8:	cbz	w0, 53f0 <libintl_textdomain@@Base+0x1354>
    59ac:	ldr	x0, [x29, #184]
    59b0:	cmp	x0, #0x1
    59b4:	ldr	x0, [x29, #168]
    59b8:	csel	x19, x19, x0, eq  // eq = none
    59bc:	b	53f0 <libintl_textdomain@@Base+0x1354>

00000000000059c0 <libintl_dcngettext@@Base>:
    59c0:	mov	w5, w4
    59c4:	mov	x4, x3
    59c8:	mov	w3, #0x1                   	// #1
    59cc:	b	5250 <libintl_textdomain@@Base+0x11b4>

00000000000059d0 <libintl_dngettext@@Base>:
    59d0:	mov	w4, #0x5                   	// #5
    59d4:	b	1ed0 <libintl_dcngettext@plt>

00000000000059d8 <libintl_ngettext@@Base>:
    59d8:	mov	x3, x2
    59dc:	mov	w4, #0x5                   	// #5
    59e0:	mov	x2, x1
    59e4:	mov	x1, x0
    59e8:	mov	x0, #0x0                   	// #0
    59ec:	b	1ed0 <libintl_dcngettext@plt>
    59f0:	cbz	x0, 5a4c <libintl_ngettext@@Base+0x74>
    59f4:	stp	x29, x30, [sp, #-32]!
    59f8:	mov	x29, sp
    59fc:	str	x19, [sp, #16]
    5a00:	mov	x19, x0
    5a04:	ldr	w0, [x0]
    5a08:	cmp	w0, #0x2
    5a0c:	b.eq	5a40 <libintl_ngettext@@Base+0x68>  // b.none
    5a10:	cmp	w0, #0x3
    5a14:	b.eq	5a38 <libintl_ngettext@@Base+0x60>  // b.none
    5a18:	cmp	w0, #0x1
    5a1c:	b.ne	5a28 <libintl_ngettext@@Base+0x50>  // b.any
    5a20:	ldr	x0, [x19, #8]
    5a24:	bl	59f0 <libintl_ngettext@@Base+0x18>
    5a28:	mov	x0, x19
    5a2c:	ldr	x19, [sp, #16]
    5a30:	ldp	x29, x30, [sp], #32
    5a34:	b	2040 <free@plt>
    5a38:	ldr	x0, [x19, #24]
    5a3c:	bl	59f0 <libintl_ngettext@@Base+0x18>
    5a40:	ldr	x0, [x19, #16]
    5a44:	bl	59f0 <libintl_ngettext@@Base+0x18>
    5a48:	b	5a20 <libintl_ngettext@@Base+0x48>
    5a4c:	ret
    5a50:	stp	x29, x30, [sp, #-48]!
    5a54:	mov	x29, sp
    5a58:	stp	x19, x20, [sp, #16]
    5a5c:	sub	w19, w0, #0x1
    5a60:	mov	x20, x2
    5a64:	sxtw	x19, w19
    5a68:	stp	x21, x22, [sp, #32]
    5a6c:	mov	w21, w0
    5a70:	mov	w22, w1
    5a74:	mov	x0, x19
    5a78:	add	x1, x2, #0x8
    5a7c:	cmn	w0, #0x1
    5a80:	b.ne	5ab0 <libintl_ngettext@@Base+0xd8>  // b.any
    5a84:	mov	x0, #0x20                  	// #32
    5a88:	bl	1e80 <malloc@plt>
    5a8c:	cbz	x0, 5abc <libintl_ngettext@@Base+0xe4>
    5a90:	add	x1, x0, #0x8
    5a94:	stp	w21, w22, [x0]
    5a98:	cmn	w19, #0x1
    5a9c:	b.ne	5acc <libintl_ngettext@@Base+0xf4>  // b.any
    5aa0:	ldp	x19, x20, [sp, #16]
    5aa4:	ldp	x21, x22, [sp, #32]
    5aa8:	ldp	x29, x30, [sp], #48
    5aac:	ret
    5ab0:	sub	x0, x0, #0x1
    5ab4:	ldr	x2, [x1, x0, lsl #3]
    5ab8:	cbnz	x2, 5a7c <libintl_ngettext@@Base+0xa4>
    5abc:	cmn	w19, #0x1
    5ac0:	b.ne	5adc <libintl_ngettext@@Base+0x104>  // b.any
    5ac4:	mov	x0, #0x0                   	// #0
    5ac8:	b	5aa0 <libintl_ngettext@@Base+0xc8>
    5acc:	ldr	x2, [x20, x19, lsl #3]
    5ad0:	str	x2, [x1, x19, lsl #3]
    5ad4:	sub	x19, x19, #0x1
    5ad8:	b	5a98 <libintl_ngettext@@Base+0xc0>
    5adc:	ldr	x0, [x20, x19, lsl #3]
    5ae0:	sub	x19, x19, #0x1
    5ae4:	bl	59f0 <libintl_ngettext@@Base+0x18>
    5ae8:	b	5abc <libintl_ngettext@@Base+0xe4>
    5aec:	stp	x29, x30, [sp, #-32]!
    5af0:	mov	x29, sp
    5af4:	stp	x1, x2, [sp, #16]
    5af8:	add	x2, sp, #0x10
    5afc:	mov	w1, w0
    5b00:	mov	w0, #0x2                   	// #2
    5b04:	bl	5a50 <libintl_ngettext@@Base+0x78>
    5b08:	ldp	x29, x30, [sp], #32
    5b0c:	ret
    5b10:	sub	sp, sp, #0x880
    5b14:	stp	x29, x30, [sp]
    5b18:	mov	x29, sp
    5b1c:	stp	x19, x20, [sp, #16]
    5b20:	add	x19, sp, #0xb0
    5b24:	stp	x21, x22, [sp, #32]
    5b28:	mov	x21, x19
    5b2c:	mov	x22, #0xc8                  	// #200
    5b30:	str	x0, [sp, #104]
    5b34:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    5b38:	add	x20, x0, #0xbcc
    5b3c:	stp	x23, x24, [sp, #48]
    5b40:	add	x0, x20, #0x122
    5b44:	mov	w23, #0x0                   	// #0
    5b48:	mov	w24, #0xfffffffe            	// #-2
    5b4c:	stp	x25, x26, [sp, #64]
    5b50:	stp	x27, x28, [sp, #80]
    5b54:	add	x27, sp, #0x240
    5b58:	str	wzr, [sp, #100]
    5b5c:	str	x0, [sp, #112]
    5b60:	stp	x27, x19, [sp, #120]
    5b64:	lsl	x0, x22, #1
    5b68:	sub	x1, x0, #0x2
    5b6c:	strh	w23, [x19]
    5b70:	add	x1, x21, x1
    5b74:	cmp	x19, x1
    5b78:	b.cc	5c2c <libintl_ngettext@@Base+0x254>  // b.lo, b.ul, b.last
    5b7c:	sub	x19, x19, x21
    5b80:	mov	x1, #0x270f                	// #9999
    5b84:	cmp	x22, x1
    5b88:	asr	x26, x19, #1
    5b8c:	add	x26, x26, #0x1
    5b90:	b.hi	607c <libintl_ngettext@@Base+0x6a4>  // b.pmore
    5b94:	mov	x22, #0x2710                	// #10000
    5b98:	cmp	x0, x22
    5b9c:	csel	x22, x0, x22, ls  // ls = plast
    5ba0:	mov	x0, #0xa                   	// #10
    5ba4:	mul	x0, x22, x0
    5ba8:	add	x0, x0, #0x7
    5bac:	bl	1e80 <malloc@plt>
    5bb0:	mov	x28, x0
    5bb4:	cbz	x0, 607c <libintl_ngettext@@Base+0x6a4>
    5bb8:	add	x2, x19, #0x2
    5bbc:	mov	x1, x21
    5bc0:	bl	1cd0 <memcpy@plt>
    5bc4:	lsl	x26, x26, #3
    5bc8:	ldr	x1, [sp, #120]
    5bcc:	add	x8, x28, x22, lsl #1
    5bd0:	lsl	x0, x22, #1
    5bd4:	mov	x2, x26
    5bd8:	str	x0, [sp, #136]
    5bdc:	mov	x0, x8
    5be0:	bl	1cd0 <memcpy@plt>
    5be4:	mov	x8, x0
    5be8:	ldr	x0, [sp, #128]
    5bec:	cmp	x21, x0
    5bf0:	b.eq	5c04 <libintl_ngettext@@Base+0x22c>  // b.none
    5bf4:	mov	x0, x21
    5bf8:	str	x8, [sp, #120]
    5bfc:	bl	2040 <free@plt>
    5c00:	ldr	x8, [sp, #120]
    5c04:	lsl	x0, x22, #1
    5c08:	sub	x0, x0, #0x2
    5c0c:	add	x19, x28, x19
    5c10:	sub	x26, x26, #0x8
    5c14:	add	x0, x28, x0
    5c18:	add	x27, x8, x26
    5c1c:	cmp	x19, x0
    5c20:	b.cs	60d0 <libintl_ngettext@@Base+0x6f8>  // b.hs, b.nlast
    5c24:	mov	x21, x28
    5c28:	str	x8, [sp, #120]
    5c2c:	cmp	w23, #0x9
    5c30:	b.eq	60c8 <libintl_ngettext@@Base+0x6f0>  // b.none
    5c34:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    5c38:	add	x0, x0, #0xbcc
    5c3c:	sxtw	x9, w23
    5c40:	ldrsb	w6, [x0, w23, sxtw]
    5c44:	cmn	w6, #0xa
    5c48:	b.eq	5e6c <libintl_ngettext@@Base+0x494>  // b.none
    5c4c:	cmn	w24, #0x2
    5c50:	b.ne	5cd8 <libintl_ngettext@@Base+0x300>  // b.any
    5c54:	ldr	x0, [sp, #104]
    5c58:	ldr	x0, [x0]
    5c5c:	ldrb	w1, [x0]
    5c60:	cbnz	w1, 5c80 <libintl_ngettext@@Base+0x2a8>
    5c64:	ldr	x1, [sp, #104]
    5c68:	str	x0, [x1]
    5c6c:	mov	w1, #0x0                   	// #0
    5c70:	mov	w24, #0x0                   	// #0
    5c74:	b	5ce8 <libintl_ngettext@@Base+0x310>
    5c78:	mov	x0, x2
    5c7c:	b	5c5c <libintl_ngettext@@Base+0x284>
    5c80:	cmp	w1, #0x20
    5c84:	add	x2, x0, #0x1
    5c88:	ccmp	w1, #0x9, #0x4, ne  // ne = any
    5c8c:	b.eq	5c78 <libintl_ngettext@@Base+0x2a0>  // b.none
    5c90:	mov	w24, w1
    5c94:	cmp	w1, #0x3f
    5c98:	b.hi	5d44 <libintl_ngettext@@Base+0x36c>  // b.pmore
    5c9c:	cmp	w1, #0x9
    5ca0:	b.ls	5d54 <libintl_ngettext@@Base+0x37c>  // b.plast
    5ca4:	sub	w10, w1, #0xa
    5ca8:	cmp	w10, #0x35
    5cac:	b.hi	5d54 <libintl_ngettext@@Base+0x37c>  // b.pmore
    5cb0:	adrp	x8, 6000 <libintl_ngettext@@Base+0x628>
    5cb4:	add	x8, x8, #0xb88
    5cb8:	ldrb	w3, [x8, w10, uxtw]
    5cbc:	adr	x4, 5cc8 <libintl_ngettext@@Base+0x2f0>
    5cc0:	add	x3, x4, w3, sxtb #2
    5cc4:	br	x3
    5cc8:	mov	x2, x0
    5ccc:	mov	w24, #0x0                   	// #0
    5cd0:	ldr	x0, [sp, #104]
    5cd4:	str	x2, [x0]
    5cd8:	cmp	w24, #0x0
    5cdc:	b.le	5c6c <libintl_ngettext@@Base+0x294>
    5ce0:	add	x0, x20, #0x1b
    5ce4:	ldrb	w1, [x0, w24, sxtw]
    5ce8:	add	w0, w1, w6
    5cec:	cmp	w0, #0x36
    5cf0:	b.hi	5e6c <libintl_ngettext@@Base+0x494>  // b.pmore
    5cf4:	ldr	x3, [sp, #112]
    5cf8:	sxtw	x2, w0
    5cfc:	ldrsb	w0, [x3, w0, sxtw]
    5d00:	cmp	w0, w1
    5d04:	b.ne	5e6c <libintl_ngettext@@Base+0x494>  // b.any
    5d08:	add	x0, x20, #0x159
    5d0c:	ldrb	w1, [x0, x2]
    5d10:	cbz	w1, 5ee4 <libintl_ngettext@@Base+0x50c>
    5d14:	ldr	w0, [sp, #100]
    5d18:	add	x27, x27, #0x8
    5d1c:	ldr	w2, [sp, #100]
    5d20:	mov	w24, #0xfffffffe            	// #-2
    5d24:	cmp	w0, #0x0
    5d28:	str	x25, [x27]
    5d2c:	cset	w0, ne  // ne = any
    5d30:	sub	w0, w2, w0
    5d34:	str	w0, [sp, #100]
    5d38:	add	x19, x19, #0x2
    5d3c:	mov	w23, w1
    5d40:	b	5b64 <libintl_ngettext@@Base+0x18c>
    5d44:	cmp	w1, #0x6e
    5d48:	b.eq	5cd0 <libintl_ngettext@@Base+0x2f8>  // b.none
    5d4c:	cmp	w1, #0x7c
    5d50:	b.eq	5dd0 <libintl_ngettext@@Base+0x3f8>  // b.none
    5d54:	mov	w24, #0x100                 	// #256
    5d58:	b	5cd0 <libintl_ngettext@@Base+0x2f8>
    5d5c:	sub	w5, w1, #0x30
    5d60:	mov	x4, #0xa                   	// #10
    5d64:	sxtw	x5, w5
    5d68:	ldrb	w0, [x2]
    5d6c:	sub	w0, w0, #0x30
    5d70:	and	w1, w0, #0xff
    5d74:	cmp	w1, #0x9
    5d78:	b.ls	5d88 <libintl_ngettext@@Base+0x3b0>  // b.plast
    5d7c:	mov	x25, x5
    5d80:	mov	w24, #0x106                 	// #262
    5d84:	b	5cd0 <libintl_ngettext@@Base+0x2f8>
    5d88:	sxtw	x0, w0
    5d8c:	add	x2, x2, #0x1
    5d90:	madd	x5, x5, x4, x0
    5d94:	b	5d68 <libintl_ngettext@@Base+0x390>
    5d98:	ldrb	w1, [x0, #1]
    5d9c:	cmp	w1, #0x3d
    5da0:	b.ne	5d54 <libintl_ngettext@@Base+0x37c>  // b.any
    5da4:	add	x2, x0, #0x2
    5da8:	mov	x0, #0xc                   	// #12
    5dac:	bfxil	x25, x0, #0, #32
    5db0:	mov	w24, #0x102                 	// #258
    5db4:	b	5cd0 <libintl_ngettext@@Base+0x2f8>
    5db8:	ldrb	w1, [x0, #1]
    5dbc:	cmp	w1, #0x3d
    5dc0:	b.ne	5e64 <libintl_ngettext@@Base+0x48c>  // b.any
    5dc4:	add	x2, x0, #0x2
    5dc8:	mov	x0, #0xd                   	// #13
    5dcc:	b	5dac <libintl_ngettext@@Base+0x3d4>
    5dd0:	ldrb	w8, [x0, #1]
    5dd4:	cmp	w8, w1
    5dd8:	b.ne	5d54 <libintl_ngettext@@Base+0x37c>  // b.any
    5ddc:	add	x2, x0, #0x2
    5de0:	b	5cd0 <libintl_ngettext@@Base+0x2f8>
    5de4:	ldrb	w1, [x0, #1]
    5de8:	cmp	w1, #0x3d
    5dec:	b.ne	5e04 <libintl_ngettext@@Base+0x42c>  // b.any
    5df0:	add	x2, x0, #0x2
    5df4:	mov	x0, #0xa                   	// #10
    5df8:	bfxil	x25, x0, #0, #32
    5dfc:	mov	w24, #0x103                 	// #259
    5e00:	b	5cd0 <libintl_ngettext@@Base+0x2f8>
    5e04:	mov	x0, #0x8                   	// #8
    5e08:	b	5df8 <libintl_ngettext@@Base+0x420>
    5e0c:	ldrb	w1, [x0, #1]
    5e10:	cmp	w1, #0x3d
    5e14:	b.ne	5e24 <libintl_ngettext@@Base+0x44c>  // b.any
    5e18:	add	x2, x0, #0x2
    5e1c:	mov	x0, #0xb                   	// #11
    5e20:	b	5df8 <libintl_ngettext@@Base+0x420>
    5e24:	mov	x0, #0x9                   	// #9
    5e28:	b	5df8 <libintl_ngettext@@Base+0x420>
    5e2c:	mov	x0, #0x3                   	// #3
    5e30:	bfxil	x25, x0, #0, #32
    5e34:	mov	w24, #0x105                 	// #261
    5e38:	b	5cd0 <libintl_ngettext@@Base+0x2f8>
    5e3c:	mov	x0, #0x4                   	// #4
    5e40:	b	5e30 <libintl_ngettext@@Base+0x458>
    5e44:	mov	x0, #0x5                   	// #5
    5e48:	b	5e30 <libintl_ngettext@@Base+0x458>
    5e4c:	mov	x0, #0x6                   	// #6
    5e50:	bfxil	x25, x0, #0, #32
    5e54:	mov	w24, #0x104                 	// #260
    5e58:	b	5cd0 <libintl_ngettext@@Base+0x2f8>
    5e5c:	mov	x0, #0x7                   	// #7
    5e60:	b	5e50 <libintl_ngettext@@Base+0x478>
    5e64:	mov	w24, #0x21                  	// #33
    5e68:	b	5cd0 <libintl_ngettext@@Base+0x2f8>
    5e6c:	add	x0, x20, #0x190
    5e70:	ldrb	w1, [x0, x9]
    5e74:	cbnz	w1, 5ee4 <libintl_ngettext@@Base+0x50c>
    5e78:	ldr	w0, [sp, #100]
    5e7c:	cbnz	w0, 6040 <libintl_ngettext@@Base+0x668>
    5e80:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    5e84:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    5e88:	add	x1, x1, #0xb5a
    5e8c:	add	x0, x0, #0xb67
    5e90:	mov	w2, #0x5                   	// #5
    5e94:	bl	1fc0 <dcgettext@plt>
    5e98:	add	x2, x20, #0x159
    5e9c:	ldrsb	w0, [x20, w23, sxtw]
    5ea0:	cmn	w0, #0xa
    5ea4:	b.eq	5ed0 <libintl_ngettext@@Base+0x4f8>  // b.none
    5ea8:	add	w0, w0, #0x1
    5eac:	cmp	w0, #0x36
    5eb0:	b.hi	5ed0 <libintl_ngettext@@Base+0x4f8>  // b.pmore
    5eb4:	ldr	x3, [sp, #112]
    5eb8:	sxtw	x1, w0
    5ebc:	ldrsb	w0, [x3, w0, sxtw]
    5ec0:	cmp	w0, #0x1
    5ec4:	b.ne	5ed0 <libintl_ngettext@@Base+0x4f8>  // b.any
    5ec8:	ldrb	w1, [x2, x1]
    5ecc:	cbnz	w1, 6068 <libintl_ngettext@@Base+0x690>
    5ed0:	cmp	x21, x19
    5ed4:	b.eq	6058 <libintl_ngettext@@Base+0x680>  // b.none
    5ed8:	ldrsh	w23, [x19, #-2]!
    5edc:	sub	x27, x27, #0x8
    5ee0:	b	5e9c <libintl_ngettext@@Base+0x4c4>
    5ee4:	add	x0, x20, #0x1ab
    5ee8:	sxtw	x23, w1
    5eec:	ldrb	w26, [x0, w1, sxtw]
    5ef0:	mov	w0, #0x1                   	// #1
    5ef4:	sub	w1, w1, #0x2
    5ef8:	sub	w0, w0, w26
    5efc:	cmp	w1, #0xb
    5f00:	ldr	x0, [x27, w0, sxtw #3]
    5f04:	b.hi	5f30 <libintl_ngettext@@Base+0x558>  // b.pmore
    5f08:	adrp	x2, 6000 <libintl_ngettext@@Base+0x628>
    5f0c:	add	x2, x2, #0xbc0
    5f10:	ldrb	w1, [x2, w1, uxtw]
    5f14:	adr	x2, 5f20 <libintl_ngettext@@Base+0x548>
    5f18:	add	x1, x2, w1, sxtb #2
    5f1c:	br	x1
    5f20:	ldr	x1, [x27]
    5f24:	cbz	x1, 6058 <libintl_ngettext@@Base+0x680>
    5f28:	ldr	x2, [sp, #104]
    5f2c:	str	x1, [x2, #8]
    5f30:	sub	x1, x27, w26, uxtb #3
    5f34:	sub	x19, x19, w26, uxtb #1
    5f38:	add	x27, x1, #0x8
    5f3c:	ldrsh	w2, [x19]
    5f40:	str	x0, [x1, #8]
    5f44:	add	x0, x20, #0x1b9
    5f48:	add	x1, x20, #0x1c7
    5f4c:	ldrb	w0, [x0, x23]
    5f50:	sub	w0, w0, #0x10
    5f54:	sxtw	x6, w0
    5f58:	ldrsb	w0, [x1, w0, sxtw]
    5f5c:	add	w0, w0, w2
    5f60:	cmp	w0, #0x36
    5f64:	b.hi	6034 <libintl_ngettext@@Base+0x65c>  // b.pmore
    5f68:	ldr	x3, [sp, #112]
    5f6c:	sxtw	x1, w0
    5f70:	ldrsb	w0, [x3, w0, sxtw]
    5f74:	cmp	w0, w2
    5f78:	b.ne	6034 <libintl_ngettext@@Base+0x65c>  // b.any
    5f7c:	add	x0, x20, #0x159
    5f80:	ldrb	w1, [x0, x1]
    5f84:	b	5d38 <libintl_ngettext@@Base+0x360>
    5f88:	ldur	x2, [x27, #-32]
    5f8c:	ldur	x1, [x27, #-16]
    5f90:	stp	x2, x1, [sp, #152]
    5f94:	add	x2, sp, #0x98
    5f98:	ldr	x0, [x27]
    5f9c:	mov	w1, #0x10                  	// #16
    5fa0:	str	x0, [sp, #168]
    5fa4:	mov	w0, #0x3                   	// #3
    5fa8:	bl	5a50 <libintl_ngettext@@Base+0x78>
    5fac:	b	5f30 <libintl_ngettext@@Base+0x558>
    5fb0:	ldur	x1, [x27, #-16]
    5fb4:	mov	w0, #0xf                   	// #15
    5fb8:	ldr	x2, [x27]
    5fbc:	bl	5aec <libintl_ngettext@@Base+0x114>
    5fc0:	b	5f30 <libintl_ngettext@@Base+0x558>
    5fc4:	mov	w0, #0xe                   	// #14
    5fc8:	ldur	x1, [x27, #-16]
    5fcc:	ldr	x2, [x27]
    5fd0:	b	5fbc <libintl_ngettext@@Base+0x5e4>
    5fd4:	ldur	w0, [x27, #-8]
    5fd8:	ldur	x1, [x27, #-16]
    5fdc:	ldr	x2, [x27]
    5fe0:	b	5fbc <libintl_ngettext@@Base+0x5e4>
    5fe4:	ldr	x0, [x27]
    5fe8:	add	x2, sp, #0x98
    5fec:	mov	w1, #0x2                   	// #2
    5ff0:	str	x0, [sp, #152]
    5ff4:	mov	w0, #0x1                   	// #1
    5ff8:	b	5fa8 <libintl_ngettext@@Base+0x5d0>
    5ffc:	mov	x2, #0x0                   	// #0
    6000:	mov	w1, #0x0                   	// #0
    6004:	mov	w0, #0x0                   	// #0
    6008:	b	5fa8 <libintl_ngettext@@Base+0x5d0>
    600c:	mov	x2, #0x0                   	// #0
    6010:	mov	w1, #0x1                   	// #1
    6014:	mov	w0, #0x0                   	// #0
    6018:	bl	5a50 <libintl_ngettext@@Base+0x78>
    601c:	cbz	x0, 5f30 <libintl_ngettext@@Base+0x558>
    6020:	ldr	x1, [x27]
    6024:	str	x1, [x0, #8]
    6028:	b	5f30 <libintl_ngettext@@Base+0x558>
    602c:	ldur	x0, [x27, #-8]
    6030:	b	5f30 <libintl_ngettext@@Base+0x558>
    6034:	add	x0, x20, #0x1ca
    6038:	ldrsb	w1, [x0, x6]
    603c:	b	5d38 <libintl_ngettext@@Base+0x360>
    6040:	ldr	w0, [sp, #100]
    6044:	cmp	w0, #0x3
    6048:	b.ne	5e98 <libintl_ngettext@@Base+0x4c0>  // b.any
    604c:	cmp	w24, #0x0
    6050:	b.gt	6060 <libintl_ngettext@@Base+0x688>
    6054:	b.ne	5e98 <libintl_ngettext@@Base+0x4c0>  // b.any
    6058:	mov	w19, #0x1                   	// #1
    605c:	b	6098 <libintl_ngettext@@Base+0x6c0>
    6060:	mov	w24, #0xfffffffe            	// #-2
    6064:	b	5e98 <libintl_ngettext@@Base+0x4c0>
    6068:	mov	w0, #0x3                   	// #3
    606c:	add	x27, x27, #0x8
    6070:	str	x25, [x27]
    6074:	str	w0, [sp, #100]
    6078:	b	5d38 <libintl_ngettext@@Base+0x360>
    607c:	mov	w19, #0x2                   	// #2
    6080:	mov	w2, #0x5                   	// #5
    6084:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    6088:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    608c:	add	x1, x1, #0xb75
    6090:	add	x0, x0, #0xb67
    6094:	bl	1fc0 <dcgettext@plt>
    6098:	ldr	x0, [sp, #128]
    609c:	cmp	x21, x0
    60a0:	b.ne	60d8 <libintl_ngettext@@Base+0x700>  // b.any
    60a4:	mov	w0, w19
    60a8:	ldp	x29, x30, [sp]
    60ac:	ldp	x19, x20, [sp, #16]
    60b0:	ldp	x21, x22, [sp, #32]
    60b4:	ldp	x23, x24, [sp, #48]
    60b8:	ldp	x25, x26, [sp, #64]
    60bc:	ldp	x27, x28, [sp, #80]
    60c0:	add	sp, sp, #0x880
    60c4:	ret
    60c8:	mov	w19, #0x0                   	// #0
    60cc:	b	6098 <libintl_ngettext@@Base+0x6c0>
    60d0:	mov	x21, x28
    60d4:	mov	w19, #0x1                   	// #1
    60d8:	mov	x0, x21
    60dc:	bl	2040 <free@plt>
    60e0:	b	60a4 <libintl_ngettext@@Base+0x6cc>
    60e4:	stp	x29, x30, [sp, #-96]!
    60e8:	mov	x29, sp
    60ec:	stp	x19, x20, [sp, #16]
    60f0:	stp	x21, x22, [sp, #32]
    60f4:	mov	x22, x2
    60f8:	str	x23, [sp, #48]
    60fc:	mov	x23, x1
    6100:	cbz	x0, 61bc <libintl_ngettext@@Base+0x7e4>
    6104:	mov	x19, x0
    6108:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    610c:	add	x1, x1, #0xd99
    6110:	bl	2120 <strstr@plt>
    6114:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    6118:	mov	x21, x0
    611c:	add	x1, x1, #0xda1
    6120:	mov	x0, x19
    6124:	bl	2120 <strstr@plt>
    6128:	cmp	x21, #0x0
    612c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    6130:	b.eq	61bc <libintl_ngettext@@Base+0x7e4>  // b.none
    6134:	add	x19, x0, #0x9
    6138:	ldrb	w20, [x19]
    613c:	cbz	w20, 61bc <libintl_ngettext@@Base+0x7e4>
    6140:	bl	2010 <__ctype_b_loc@plt>
    6144:	ldr	x0, [x0]
    6148:	ubfiz	x1, x20, #1, #8
    614c:	ldrh	w0, [x0, x1]
    6150:	tbnz	w0, #13, 61b4 <libintl_ngettext@@Base+0x7dc>
    6154:	sub	w20, w20, #0x30
    6158:	and	w20, w20, #0xff
    615c:	cmp	w20, #0x9
    6160:	b.hi	61bc <libintl_ngettext@@Base+0x7e4>  // b.pmore
    6164:	add	x1, sp, #0x48
    6168:	mov	x0, x19
    616c:	mov	w2, #0xa                   	// #10
    6170:	bl	1d10 <strtoul@plt>
    6174:	ldr	x1, [sp, #72]
    6178:	cmp	x1, x19
    617c:	b.eq	61bc <libintl_ngettext@@Base+0x7e4>  // b.none
    6180:	str	x0, [x22]
    6184:	add	x21, x21, #0x7
    6188:	add	x0, sp, #0x50
    618c:	str	x21, [sp, #80]
    6190:	bl	5b10 <libintl_ngettext@@Base+0x138>
    6194:	cbnz	w0, 61bc <libintl_ngettext@@Base+0x7e4>
    6198:	ldr	x0, [sp, #88]
    619c:	str	x0, [x23]
    61a0:	ldp	x19, x20, [sp, #16]
    61a4:	ldp	x21, x22, [sp, #32]
    61a8:	ldr	x23, [sp, #48]
    61ac:	ldp	x29, x30, [sp], #96
    61b0:	ret
    61b4:	add	x19, x19, #0x1
    61b8:	b	6138 <libintl_ngettext@@Base+0x760>
    61bc:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    61c0:	add	x0, x0, #0xd88
    61c4:	str	x0, [x23]
    61c8:	mov	x0, #0x2                   	// #2
    61cc:	str	x0, [x22]
    61d0:	b	61a0 <libintl_ngettext@@Base+0x7c8>
    61d4:	stp	x29, x30, [sp, #-16]!
    61d8:	mov	w0, #0xe                   	// #14
    61dc:	mov	x29, sp
    61e0:	bl	1e60 <nl_langinfo@plt>
    61e4:	cbz	x0, 61f0 <libintl_ngettext@@Base+0x818>
    61e8:	ldrb	w1, [x0]
    61ec:	cbnz	w1, 61f8 <libintl_ngettext@@Base+0x820>
    61f0:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    61f4:	add	x0, x0, #0xdf0
    61f8:	ldp	x29, x30, [sp], #16
    61fc:	ret
    6200:	stp	x29, x30, [sp, #-64]!
    6204:	mov	x29, sp
    6208:	stp	x19, x20, [sp, #16]
    620c:	add	x20, sp, #0x38
    6210:	str	x21, [sp, #32]
    6214:	mov	x21, x0
    6218:	mov	x0, x20
    621c:	bl	1cf0 <pthread_rwlockattr_init@plt>
    6220:	cbnz	w0, 6264 <libintl_ngettext@@Base+0x88c>
    6224:	mov	x0, x20
    6228:	mov	w1, #0x2                   	// #2
    622c:	bl	1da0 <pthread_rwlockattr_setkind_np@plt>
    6230:	mov	w19, w0
    6234:	cbnz	w0, 6248 <libintl_ngettext@@Base+0x870>
    6238:	mov	x1, x20
    623c:	mov	x0, x21
    6240:	bl	1d90 <pthread_rwlock_init@plt>
    6244:	mov	w19, w0
    6248:	mov	x0, x20
    624c:	bl	2130 <pthread_rwlockattr_destroy@plt>
    6250:	mov	w0, w19
    6254:	ldp	x19, x20, [sp, #16]
    6258:	ldr	x21, [sp, #32]
    625c:	ldp	x29, x30, [sp], #64
    6260:	ret
    6264:	mov	w19, w0
    6268:	b	6250 <libintl_ngettext@@Base+0x878>
    626c:	stp	x29, x30, [sp, #-64]!
    6270:	mov	x29, sp
    6274:	stp	x19, x20, [sp, #16]
    6278:	add	x20, sp, #0x38
    627c:	str	x21, [sp, #32]
    6280:	mov	x21, x0
    6284:	mov	x0, x20
    6288:	bl	20f0 <pthread_mutexattr_init@plt>
    628c:	mov	w19, w0
    6290:	cbnz	w0, 62b0 <libintl_ngettext@@Base+0x8d8>
    6294:	mov	x0, x20
    6298:	mov	w1, #0x1                   	// #1
    629c:	bl	1d50 <pthread_mutexattr_settype@plt>
    62a0:	mov	w19, w0
    62a4:	cbz	w0, 62c4 <libintl_ngettext@@Base+0x8ec>
    62a8:	mov	x0, x20
    62ac:	bl	2110 <pthread_mutexattr_destroy@plt>
    62b0:	mov	w0, w19
    62b4:	ldp	x19, x20, [sp, #16]
    62b8:	ldr	x21, [sp, #32]
    62bc:	ldp	x29, x30, [sp], #64
    62c0:	ret
    62c4:	mov	x1, x20
    62c8:	mov	x0, x21
    62cc:	bl	1f70 <pthread_mutex_init@plt>
    62d0:	mov	w19, w0
    62d4:	mov	x0, x20
    62d8:	cbnz	w19, 62ac <libintl_ngettext@@Base+0x8d4>
    62dc:	bl	2110 <pthread_mutexattr_destroy@plt>
    62e0:	mov	w19, w0
    62e4:	b	62b0 <libintl_ngettext@@Base+0x8d8>
    62e8:	ldrb	w1, [x0]
    62ec:	cbnz	w1, 6300 <libintl_ngettext@@Base+0x928>
    62f0:	mov	w1, #0xffffffff            	// #-1
    62f4:	strb	w1, [x0]
    62f8:	mov	w0, #0x1                   	// #1
    62fc:	ret
    6300:	mov	w0, #0x0                   	// #0
    6304:	b	62fc <libintl_ngettext@@Base+0x924>

0000000000006308 <libintl_set_relocation_prefix@@Base>:
    6308:	stp	x29, x30, [sp, #-80]!
    630c:	cmp	x0, #0x0
    6310:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    6314:	mov	x29, sp
    6318:	stp	x19, x20, [sp, #16]
    631c:	stp	x21, x22, [sp, #32]
    6320:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    6324:	stp	x23, x24, [sp, #48]
    6328:	str	x25, [sp, #64]
    632c:	b.eq	63bc <libintl_set_relocation_prefix@@Base+0xb4>  // b.none
    6330:	mov	x25, x0
    6334:	mov	x22, x1
    6338:	bl	1ff0 <strcmp@plt>
    633c:	cbz	w0, 63bc <libintl_set_relocation_prefix@@Base+0xb4>
    6340:	add	x24, x21, #0x448
    6344:	mov	x0, x25
    6348:	bl	1d20 <strlen@plt>
    634c:	mov	x20, x0
    6350:	str	x0, [x21, #1096]
    6354:	mov	x0, x22
    6358:	bl	1d20 <strlen@plt>
    635c:	mov	x23, x0
    6360:	add	x0, x20, x0
    6364:	str	x23, [x24, #8]
    6368:	add	x0, x0, #0x2
    636c:	bl	1e80 <malloc@plt>
    6370:	mov	x19, x0
    6374:	cbz	x0, 63bc <libintl_set_relocation_prefix@@Base+0xb4>
    6378:	add	x20, x20, #0x1
    637c:	mov	x1, x25
    6380:	mov	x2, x20
    6384:	bl	1cd0 <memcpy@plt>
    6388:	str	x19, [x24, #16]
    638c:	add	x19, x19, x20
    6390:	add	x2, x23, #0x1
    6394:	mov	x1, x22
    6398:	mov	x0, x19
    639c:	bl	1cd0 <memcpy@plt>
    63a0:	str	x19, [x24, #24]
    63a4:	ldp	x19, x20, [sp, #16]
    63a8:	ldp	x21, x22, [sp, #32]
    63ac:	ldp	x23, x24, [sp, #48]
    63b0:	ldr	x25, [sp, #64]
    63b4:	ldp	x29, x30, [sp], #80
    63b8:	ret
    63bc:	add	x21, x21, #0x448
    63c0:	stp	xzr, xzr, [x21, #16]
    63c4:	b	63a4 <libintl_set_relocation_prefix@@Base+0x9c>
    63c8:	stp	x29, x30, [sp, #-64]!
    63cc:	adrp	x2, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    63d0:	mov	x29, sp
    63d4:	stp	x19, x20, [sp, #16]
    63d8:	add	x19, x2, #0x448
    63dc:	mov	x20, x0
    63e0:	stp	x21, x22, [sp, #32]
    63e4:	ldr	x1, [x19, #16]
    63e8:	str	x23, [sp, #48]
    63ec:	cbnz	x1, 640c <libintl_set_relocation_prefix@@Base+0x104>
    63f0:	mov	x19, x20
    63f4:	mov	x0, x19
    63f8:	ldp	x19, x20, [sp, #16]
    63fc:	ldp	x21, x22, [sp, #32]
    6400:	ldr	x23, [sp, #48]
    6404:	ldp	x29, x30, [sp], #64
    6408:	ret
    640c:	ldr	x21, [x19, #24]
    6410:	cbz	x21, 63f0 <libintl_set_relocation_prefix@@Base+0xe8>
    6414:	ldr	x22, [x2, #1096]
    6418:	mov	x2, x22
    641c:	bl	1eb0 <strncmp@plt>
    6420:	cbnz	w0, 63f0 <libintl_set_relocation_prefix@@Base+0xe8>
    6424:	ldrb	w0, [x20, x22]
    6428:	add	x23, x20, x22
    642c:	cbnz	w0, 6454 <libintl_set_relocation_prefix@@Base+0x14c>
    6430:	mov	x0, x21
    6434:	bl	1d20 <strlen@plt>
    6438:	add	x0, x0, #0x1
    643c:	bl	1e80 <malloc@plt>
    6440:	mov	x19, x0
    6444:	cbz	x0, 63f0 <libintl_set_relocation_prefix@@Base+0xe8>
    6448:	mov	x1, x21
    644c:	bl	20c0 <strcpy@plt>
    6450:	b	63f4 <libintl_set_relocation_prefix@@Base+0xec>
    6454:	cmp	w0, #0x2f
    6458:	b.ne	63f0 <libintl_set_relocation_prefix@@Base+0xe8>  // b.any
    645c:	mov	x0, x23
    6460:	bl	1d20 <strlen@plt>
    6464:	ldr	x22, [x19, #8]
    6468:	add	x1, x22, #0x1
    646c:	add	x0, x1, x0
    6470:	bl	1e80 <malloc@plt>
    6474:	mov	x19, x0
    6478:	cbz	x0, 63f0 <libintl_set_relocation_prefix@@Base+0xe8>
    647c:	mov	x1, x21
    6480:	mov	x2, x22
    6484:	bl	1cd0 <memcpy@plt>
    6488:	mov	x1, x23
    648c:	add	x0, x19, x22
    6490:	b	644c <libintl_set_relocation_prefix@@Base+0x144>
    6494:	stp	x29, x30, [sp, #-32]!
    6498:	mov	x29, sp
    649c:	stp	x19, x20, [sp, #16]
    64a0:	mov	x19, x1
    64a4:	mov	x20, x0
    64a8:	bl	63c8 <libintl_set_relocation_prefix@@Base+0xc0>
    64ac:	cmp	x20, x0
    64b0:	csel	x2, x0, xzr, ne  // ne = any
    64b4:	str	x2, [x19]
    64b8:	ldp	x19, x20, [sp, #16]
    64bc:	ldp	x29, x30, [sp], #32
    64c0:	ret
    64c4:	mov	x0, #0x0                   	// #0
    64c8:	ret
    64cc:	stp	x29, x30, [sp, #-32]!
    64d0:	mov	x29, sp
    64d4:	stp	x19, x20, [sp, #16]
    64d8:	mov	w19, w0
    64dc:	mov	x0, #0x0                   	// #0
    64e0:	bl	2030 <uselocale@plt>
    64e4:	cmn	x0, #0x1
    64e8:	b.eq	6518 <libintl_set_relocation_prefix@@Base+0x210>  // b.none
    64ec:	mov	x20, x0
    64f0:	lsl	w0, w19, #16
    64f4:	orr	w0, w0, #0xffff
    64f8:	bl	1e60 <nl_langinfo@plt>
    64fc:	ldrb	w1, [x0]
    6500:	cbnz	w1, 650c <libintl_set_relocation_prefix@@Base+0x204>
    6504:	add	x19, x20, w19, sxtw #3
    6508:	ldr	x0, [x19, #128]
    650c:	ldp	x19, x20, [sp, #16]
    6510:	ldp	x29, x30, [sp], #32
    6514:	ret
    6518:	mov	x0, #0x0                   	// #0
    651c:	b	650c <libintl_set_relocation_prefix@@Base+0x204>
    6520:	stp	x29, x30, [sp, #-64]!
    6524:	mov	x29, sp
    6528:	stp	x19, x20, [sp, #16]
    652c:	stp	x21, x22, [sp, #32]
    6530:	stp	x23, x24, [sp, #48]
    6534:	bl	64cc <libintl_set_relocation_prefix@@Base+0x1c4>
    6538:	cbnz	x0, 65e0 <libintl_set_relocation_prefix@@Base+0x2d8>
    653c:	mov	x19, #0x0                   	// #0
    6540:	mov	x0, x19
    6544:	ldp	x19, x20, [sp, #16]
    6548:	ldp	x21, x22, [sp, #32]
    654c:	ldp	x23, x24, [sp, #48]
    6550:	ldp	x29, x30, [sp], #64
    6554:	ret
    6558:	add	x0, x0, #0x1
    655c:	ror	x20, x20, #55
    6560:	add	x20, x20, w1, uxtb
    6564:	ldrb	w1, [x0]
    6568:	cbnz	w1, 6558 <libintl_set_relocation_prefix@@Base+0x250>
    656c:	mov	x0, #0x101                 	// #257
    6570:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    6574:	udiv	x0, x20, x0
    6578:	add	x0, x0, x0, lsl #8
    657c:	sub	x20, x20, x0
    6580:	add	x0, x21, #0x468
    6584:	ldr	x22, [x0, x20, lsl #3]
    6588:	cbnz	x22, 65ec <libintl_set_relocation_prefix@@Base+0x2e4>
    658c:	mov	x0, x23
    6590:	bl	1d20 <strlen@plt>
    6594:	add	x19, x0, #0x1
    6598:	add	x0, x0, #0x10
    659c:	and	x0, x0, #0xfffffffffffffff8
    65a0:	bl	1e80 <malloc@plt>
    65a4:	mov	x22, x0
    65a8:	cbz	x0, 666c <libintl_set_relocation_prefix@@Base+0x364>
    65ac:	mov	x1, x23
    65b0:	mov	x2, x19
    65b4:	add	x0, x0, #0x8
    65b8:	bl	1cd0 <memcpy@plt>
    65bc:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    65c0:	mov	x24, x0
    65c4:	ldr	x1, [x0, #4064]
    65c8:	cbz	x1, 6608 <libintl_set_relocation_prefix@@Base+0x300>
    65cc:	add	x0, x21, #0x468
    65d0:	add	x0, x0, #0x808
    65d4:	bl	2180 <pthread_mutex_lock@plt>
    65d8:	cbz	w0, 6608 <libintl_set_relocation_prefix@@Base+0x300>
    65dc:	bl	1fa0 <abort@plt>
    65e0:	mov	x23, x0
    65e4:	mov	x20, #0x0                   	// #0
    65e8:	b	6564 <libintl_set_relocation_prefix@@Base+0x25c>
    65ec:	add	x19, x22, #0x8
    65f0:	mov	x1, x23
    65f4:	mov	x0, x19
    65f8:	bl	1ff0 <strcmp@plt>
    65fc:	cbz	w0, 6540 <libintl_set_relocation_prefix@@Base+0x238>
    6600:	ldr	x22, [x22]
    6604:	b	6588 <libintl_set_relocation_prefix@@Base+0x280>
    6608:	add	x0, x21, #0x468
    660c:	ldr	x19, [x0, x20, lsl #3]
    6610:	cbnz	x19, 662c <libintl_set_relocation_prefix@@Base+0x324>
    6614:	add	x1, x21, #0x468
    6618:	mov	x19, x22
    661c:	ldr	x0, [x1, x20, lsl #3]
    6620:	str	x0, [x22]
    6624:	str	x22, [x1, x20, lsl #3]
    6628:	b	6644 <libintl_set_relocation_prefix@@Base+0x33c>
    662c:	mov	x1, x23
    6630:	add	x0, x19, #0x8
    6634:	bl	1ff0 <strcmp@plt>
    6638:	cbnz	w0, 6664 <libintl_set_relocation_prefix@@Base+0x35c>
    663c:	mov	x0, x22
    6640:	bl	2040 <free@plt>
    6644:	ldr	x0, [x24, #4064]
    6648:	cbz	x0, 665c <libintl_set_relocation_prefix@@Base+0x354>
    664c:	add	x0, x21, #0x468
    6650:	add	x0, x0, #0x808
    6654:	bl	2190 <pthread_mutex_unlock@plt>
    6658:	cbnz	w0, 65dc <libintl_set_relocation_prefix@@Base+0x2d4>
    665c:	add	x19, x19, #0x8
    6660:	b	6540 <libintl_set_relocation_prefix@@Base+0x238>
    6664:	ldr	x19, [x19]
    6668:	b	6610 <libintl_set_relocation_prefix@@Base+0x308>
    666c:	adrp	x19, 6000 <libintl_ngettext@@Base+0x628>
    6670:	add	x19, x19, #0xb08
    6674:	b	6540 <libintl_set_relocation_prefix@@Base+0x238>
    6678:	mov	x1, #0x0                   	// #0
    667c:	b	21b0 <setlocale@plt>
    6680:	stp	x29, x30, [sp, #-32]!
    6684:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    6688:	add	x0, x0, #0xb1e
    668c:	mov	x29, sp
    6690:	str	x19, [sp, #16]
    6694:	mov	x19, x1
    6698:	bl	2170 <getenv@plt>
    669c:	cbz	x0, 66a8 <libintl_set_relocation_prefix@@Base+0x3a0>
    66a0:	ldrb	w1, [x0]
    66a4:	cbnz	w1, 66d8 <libintl_set_relocation_prefix@@Base+0x3d0>
    66a8:	mov	x0, x19
    66ac:	bl	2170 <getenv@plt>
    66b0:	cbz	x0, 66bc <libintl_set_relocation_prefix@@Base+0x3b4>
    66b4:	ldrb	w1, [x0]
    66b8:	cbnz	w1, 66d8 <libintl_set_relocation_prefix@@Base+0x3d0>
    66bc:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    66c0:	add	x0, x0, #0xdf6
    66c4:	bl	2170 <getenv@plt>
    66c8:	cbz	x0, 66d8 <libintl_set_relocation_prefix@@Base+0x3d0>
    66cc:	ldrb	w1, [x0]
    66d0:	cmp	w1, #0x0
    66d4:	csel	x0, x0, xzr, ne  // ne = any
    66d8:	ldr	x19, [sp, #16]
    66dc:	ldp	x29, x30, [sp], #32
    66e0:	ret
    66e4:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    66e8:	add	x0, x0, #0xb08
    66ec:	ret
    66f0:	stp	x29, x30, [sp, #-32]!
    66f4:	mov	x29, sp
    66f8:	str	x19, [sp, #16]
    66fc:	mov	w19, w0
    6700:	bl	6520 <libintl_set_relocation_prefix@@Base+0x218>
    6704:	cbnz	x0, 6720 <libintl_set_relocation_prefix@@Base+0x418>
    6708:	mov	w0, w19
    670c:	mov	x1, #0x0                   	// #0
    6710:	bl	21b0 <setlocale@plt>
    6714:	cbnz	x0, 6720 <libintl_set_relocation_prefix@@Base+0x418>
    6718:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    671c:	add	x0, x0, #0xb08
    6720:	ldr	x19, [sp, #16]
    6724:	ldp	x29, x30, [sp], #32
    6728:	ret
    672c:	stp	x29, x30, [sp, #-64]!
    6730:	mov	x29, sp
    6734:	stp	x21, x22, [sp, #32]
    6738:	adrp	x22, 6000 <libintl_ngettext@@Base+0x628>
    673c:	add	x22, x22, #0xdfb
    6740:	stp	x23, x24, [sp, #48]
    6744:	adrp	x23, 6000 <libintl_ngettext@@Base+0x628>
    6748:	add	x23, x23, #0xdff
    674c:	mov	w24, #0x5c                  	// #92
    6750:	mov	x21, x2
    6754:	stp	x19, x20, [sp, #16]
    6758:	mov	x19, x0
    675c:	mov	x20, x1
    6760:	mov	x1, x0
    6764:	mov	w0, #0x22                  	// #34
    6768:	bl	1de0 <putc@plt>
    676c:	cmp	x20, x21
    6770:	b.ne	6790 <libintl_set_relocation_prefix@@Base+0x488>  // b.any
    6774:	mov	x1, x19
    6778:	mov	w0, #0x22                  	// #34
    677c:	ldp	x19, x20, [sp, #16]
    6780:	ldp	x21, x22, [sp, #32]
    6784:	ldp	x23, x24, [sp, #48]
    6788:	ldp	x29, x30, [sp], #64
    678c:	b	1de0 <putc@plt>
    6790:	ldrb	w0, [x20], #1
    6794:	cmp	w0, #0xa
    6798:	b.ne	67c0 <libintl_set_relocation_prefix@@Base+0x4b8>  // b.any
    679c:	mov	x1, x19
    67a0:	mov	x0, x22
    67a4:	bl	1d30 <fputs@plt>
    67a8:	cmp	x21, x20
    67ac:	b.eq	67e8 <libintl_set_relocation_prefix@@Base+0x4e0>  // b.none
    67b0:	mov	x1, x19
    67b4:	mov	x0, x23
    67b8:	bl	1d30 <fputs@plt>
    67bc:	b	676c <libintl_set_relocation_prefix@@Base+0x464>
    67c0:	cmp	w0, #0x22
    67c4:	ccmp	w0, w24, #0x4, ne  // ne = any
    67c8:	b.ne	67d8 <libintl_set_relocation_prefix@@Base+0x4d0>  // b.any
    67cc:	mov	x1, x19
    67d0:	mov	w0, #0x5c                  	// #92
    67d4:	bl	1de0 <putc@plt>
    67d8:	ldurb	w0, [x20, #-1]
    67dc:	mov	x1, x19
    67e0:	bl	1de0 <putc@plt>
    67e4:	b	676c <libintl_set_relocation_prefix@@Base+0x464>
    67e8:	ldp	x19, x20, [sp, #16]
    67ec:	ldp	x21, x22, [sp, #32]
    67f0:	ldp	x23, x24, [sp, #48]
    67f4:	ldp	x29, x30, [sp], #64
    67f8:	ret
    67fc:	stp	x29, x30, [sp, #-80]!
    6800:	mov	x29, sp
    6804:	stp	x21, x22, [sp, #32]
    6808:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0x105c0>
    680c:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x115c0>
    6810:	stp	x19, x20, [sp, #16]
    6814:	mov	x19, x0
    6818:	mov	x20, x2
    681c:	ldr	x0, [x22, #4064]
    6820:	stp	x23, x24, [sp, #48]
    6824:	mov	x24, x1
    6828:	stp	x25, x26, [sp, #64]
    682c:	mov	x23, x3
    6830:	mov	w25, w4
    6834:	cbz	x0, 6848 <libintl_set_relocation_prefix@@Base+0x540>
    6838:	add	x0, x21, #0xca0
    683c:	bl	2180 <pthread_mutex_lock@plt>
    6840:	cbz	w0, 6848 <libintl_set_relocation_prefix@@Base+0x540>
    6844:	bl	1fa0 <abort@plt>
    6848:	add	x26, x21, #0xca0
    684c:	ldr	x1, [x26, #48]
    6850:	cbz	x1, 6934 <libintl_set_relocation_prefix@@Base+0x62c>
    6854:	mov	x0, x19
    6858:	bl	1ff0 <strcmp@plt>
    685c:	cbnz	w0, 6918 <libintl_set_relocation_prefix@@Base+0x610>
    6860:	add	x0, x21, #0xca0
    6864:	ldr	x19, [x0, #56]
    6868:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    686c:	add	x0, x0, #0xe02
    6870:	mov	x1, x19
    6874:	bl	1d30 <fputs@plt>
    6878:	mov	x0, x24
    687c:	bl	1d20 <strlen@plt>
    6880:	add	x2, x24, x0
    6884:	mov	x1, x24
    6888:	mov	x0, x19
    688c:	bl	672c <libintl_set_relocation_prefix@@Base+0x424>
    6890:	mov	x0, x20
    6894:	mov	w1, #0x4                   	// #4
    6898:	bl	2090 <strchr@plt>
    689c:	mov	x24, x0
    68a0:	cbnz	x0, 699c <libintl_set_relocation_prefix@@Base+0x694>
    68a4:	mov	x1, x19
    68a8:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    68ac:	add	x0, x0, #0xe16
    68b0:	bl	1d30 <fputs@plt>
    68b4:	mov	x0, x20
    68b8:	bl	1d20 <strlen@plt>
    68bc:	add	x2, x20, x0
    68c0:	mov	x1, x20
    68c4:	mov	x0, x19
    68c8:	bl	672c <libintl_set_relocation_prefix@@Base+0x424>
    68cc:	mov	x1, x19
    68d0:	cbz	w25, 69c4 <libintl_set_relocation_prefix@@Base+0x6bc>
    68d4:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    68d8:	add	x0, x0, #0xe1e
    68dc:	bl	1d30 <fputs@plt>
    68e0:	mov	x0, x23
    68e4:	bl	1d20 <strlen@plt>
    68e8:	mov	x1, x23
    68ec:	add	x2, x23, x0
    68f0:	mov	x0, x19
    68f4:	bl	672c <libintl_set_relocation_prefix@@Base+0x424>
    68f8:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    68fc:	mov	x1, x19
    6900:	add	x0, x0, #0xe2d
    6904:	bl	1d30 <fputs@plt>
    6908:	mov	x1, x19
    690c:	mov	w0, #0xa                   	// #10
    6910:	bl	1de0 <putc@plt>
    6914:	b	6970 <libintl_set_relocation_prefix@@Base+0x668>
    6918:	ldr	x0, [x26, #56]
    691c:	cbz	x0, 6928 <libintl_set_relocation_prefix@@Base+0x620>
    6920:	bl	1e50 <fclose@plt>
    6924:	str	xzr, [x26, #56]
    6928:	add	x0, x21, #0xca0
    692c:	ldr	x0, [x0, #48]
    6930:	bl	2040 <free@plt>
    6934:	add	x26, x21, #0xca0
    6938:	mov	x0, x19
    693c:	bl	1d20 <strlen@plt>
    6940:	add	x0, x0, #0x1
    6944:	bl	1e80 <malloc@plt>
    6948:	str	x0, [x26, #48]
    694c:	cbz	x0, 6970 <libintl_set_relocation_prefix@@Base+0x668>
    6950:	mov	x1, x19
    6954:	bl	20c0 <strcpy@plt>
    6958:	mov	x0, x19
    695c:	adrp	x1, 6000 <libintl_ngettext@@Base+0x628>
    6960:	add	x1, x1, #0xe0a
    6964:	bl	1e70 <fopen@plt>
    6968:	str	x0, [x26, #56]
    696c:	cbnz	x0, 6860 <libintl_set_relocation_prefix@@Base+0x558>
    6970:	ldr	x22, [x22, #4064]
    6974:	cbz	x22, 6984 <libintl_set_relocation_prefix@@Base+0x67c>
    6978:	add	x0, x21, #0xca0
    697c:	bl	2190 <pthread_mutex_unlock@plt>
    6980:	cbnz	w0, 6844 <libintl_set_relocation_prefix@@Base+0x53c>
    6984:	ldp	x19, x20, [sp, #16]
    6988:	ldp	x21, x22, [sp, #32]
    698c:	ldp	x23, x24, [sp, #48]
    6990:	ldp	x25, x26, [sp, #64]
    6994:	ldp	x29, x30, [sp], #80
    6998:	ret
    699c:	mov	x1, x19
    69a0:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    69a4:	add	x0, x0, #0xe0c
    69a8:	bl	1d30 <fputs@plt>
    69ac:	mov	x1, x20
    69b0:	mov	x2, x24
    69b4:	mov	x0, x19
    69b8:	add	x20, x24, #0x1
    69bc:	bl	672c <libintl_set_relocation_prefix@@Base+0x424>
    69c0:	b	68a4 <libintl_set_relocation_prefix@@Base+0x59c>
    69c4:	adrp	x0, 6000 <libintl_ngettext@@Base+0x628>
    69c8:	add	x0, x0, #0xe3c
    69cc:	b	6904 <libintl_set_relocation_prefix@@Base+0x5fc>
    69d0:	adds	x0, x0, x1
    69d4:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
    69d8:	ret
    69dc:	adds	x1, x0, x1
    69e0:	mov	x3, #0xffffffffffffffff    	// #-1
    69e4:	csel	x1, x1, x3, cc  // cc = lo, ul, last
    69e8:	adds	x1, x2, x1
    69ec:	csel	x0, x1, x3, cc  // cc = lo, ul, last
    69f0:	ret
    69f4:	adds	x1, x0, x1
    69f8:	mov	x4, #0xffffffffffffffff    	// #-1
    69fc:	csel	x1, x1, x4, cc  // cc = lo, ul, last
    6a00:	adds	x2, x2, x1
    6a04:	csel	x2, x2, x4, cc  // cc = lo, ul, last
    6a08:	adds	x2, x3, x2
    6a0c:	csel	x0, x2, x4, cc  // cc = lo, ul, last
    6a10:	ret
    6a14:	cmp	x0, x1
    6a18:	csel	x0, x0, x1, cs  // cs = hs, nlast
    6a1c:	ret

0000000000006a20 <gettext@@Base>:
    6a20:	b	21a0 <libintl_gettext@plt>

0000000000006a24 <dgettext@@Base>:
    6a24:	b	2080 <libintl_dgettext@plt>

0000000000006a28 <dcgettext@@Base>:
    6a28:	b	1e10 <libintl_dcgettext@plt>

0000000000006a2c <ngettext@@Base>:
    6a2c:	b	21c0 <libintl_ngettext@plt>

0000000000006a30 <dngettext@@Base>:
    6a30:	b	1ce0 <libintl_dngettext@plt>

0000000000006a34 <dcngettext@@Base>:
    6a34:	b	1ed0 <libintl_dcngettext@plt>

0000000000006a38 <textdomain@@Base>:
    6a38:	b	1e00 <libintl_textdomain@plt>

0000000000006a3c <bindtextdomain@@Base>:
    6a3c:	b	1f00 <libintl_bindtextdomain@plt>

0000000000006a40 <bind_textdomain_codeset@@Base>:
    6a40:	b	1ef0 <libintl_bind_textdomain_codeset@plt>
    6a44:	nop
    6a48:	mov	x2, x1
    6a4c:	mov	w1, w0
    6a50:	mov	w0, #0x0                   	// #0
    6a54:	b	2100 <__fxstat@plt>

Disassembly of section .fini:

0000000000006a58 <.fini>:
    6a58:	stp	x29, x30, [sp, #-16]!
    6a5c:	mov	x29, sp
    6a60:	ldp	x29, x30, [sp], #16
    6a64:	ret
