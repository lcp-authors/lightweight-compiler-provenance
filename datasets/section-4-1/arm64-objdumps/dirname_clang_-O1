
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//dirname_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000710 <_init>:
 710:	stp	x29, x30, [sp, #-16]!
 714:	mov	x29, sp
 718:	bl	7c0 <call_weak_fn>
 71c:	ldp	x29, x30, [sp], #16
 720:	ret

Disassembly of section .plt:

0000000000000730 <.plt>:
 730:	stp	x16, x30, [sp, #-16]!
 734:	adrp	x16, 10000 <__FRAME_END__+0xf49c>
 738:	ldr	x17, [x16, #4088]
 73c:	add	x16, x16, #0xff8
 740:	br	x17
 744:	nop
 748:	nop
 74c:	nop

0000000000000750 <strlen@plt>:
 750:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 754:	ldr	x17, [x16]
 758:	add	x16, x16, #0x0
 75c:	br	x17

0000000000000760 <__cxa_finalize@plt>:
 760:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 764:	ldr	x17, [x16, #8]
 768:	add	x16, x16, #0x8
 76c:	br	x17

0000000000000770 <builtin_usage@plt>:
 770:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 774:	ldr	x17, [x16, #16]
 778:	add	x16, x16, #0x10
 77c:	br	x17

0000000000000780 <__gmon_start__@plt>:
 780:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 784:	ldr	x17, [x16, #24]
 788:	add	x16, x16, #0x18
 78c:	br	x17

0000000000000790 <puts@plt>:
 790:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 794:	ldr	x17, [x16, #32]
 798:	add	x16, x16, #0x20
 79c:	br	x17

00000000000007a0 <no_options@plt>:
 7a0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #40]
 7a8:	add	x16, x16, #0x28
 7ac:	br	x17

00000000000007b0 <fwrite@plt>:
 7b0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #48]
 7b8:	add	x16, x16, #0x30
 7bc:	br	x17

Disassembly of section .text:

00000000000007c0 <call_weak_fn>:
 7c0:	adrp	x0, 10000 <__FRAME_END__+0xf49c>
 7c4:	ldr	x0, [x0, #4048]
 7c8:	cbz	x0, 7d0 <call_weak_fn+0x10>
 7cc:	b	780 <__gmon_start__@plt>
 7d0:	ret
 7d4:	nop

00000000000007d8 <deregister_tm_clones>:
 7d8:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 7dc:	add	x0, x0, #0x98
 7e0:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 7e4:	add	x1, x1, #0x98
 7e8:	cmp	x1, x0
 7ec:	b.eq	804 <deregister_tm_clones+0x2c>  // b.none
 7f0:	adrp	x1, 10000 <__FRAME_END__+0xf49c>
 7f4:	ldr	x1, [x1, #4024]
 7f8:	cbz	x1, 804 <deregister_tm_clones+0x2c>
 7fc:	mov	x16, x1
 800:	br	x16
 804:	ret

0000000000000808 <register_tm_clones>:
 808:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 80c:	add	x0, x0, #0x98
 810:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 814:	add	x1, x1, #0x98
 818:	sub	x1, x1, x0
 81c:	lsr	x2, x1, #63
 820:	add	x1, x2, x1, asr #3
 824:	cmp	xzr, x1, asr #1
 828:	asr	x1, x1, #1
 82c:	b.eq	844 <register_tm_clones+0x3c>  // b.none
 830:	adrp	x2, 10000 <__FRAME_END__+0xf49c>
 834:	ldr	x2, [x2, #4064]
 838:	cbz	x2, 844 <register_tm_clones+0x3c>
 83c:	mov	x16, x2
 840:	br	x16
 844:	ret

0000000000000848 <__do_global_dtors_aux>:
 848:	stp	x29, x30, [sp, #-32]!
 84c:	mov	x29, sp
 850:	str	x19, [sp, #16]
 854:	adrp	x19, 11000 <strlen@GLIBC_2.17>
 858:	ldrb	w0, [x19, #152]
 85c:	cbnz	w0, 884 <__do_global_dtors_aux+0x3c>
 860:	adrp	x0, 10000 <__FRAME_END__+0xf49c>
 864:	ldr	x0, [x0, #4032]
 868:	cbz	x0, 878 <__do_global_dtors_aux+0x30>
 86c:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 870:	ldr	x0, [x0, #56]
 874:	bl	760 <__cxa_finalize@plt>
 878:	bl	7d8 <deregister_tm_clones>
 87c:	mov	w0, #0x1                   	// #1
 880:	strb	w0, [x19, #152]
 884:	ldr	x19, [sp, #16]
 888:	ldp	x29, x30, [sp], #32
 88c:	ret

0000000000000890 <frame_dummy>:
 890:	b	808 <register_tm_clones>

0000000000000894 <dirname_builtin>:
 894:	stp	x29, x30, [sp, #-32]!
 898:	str	x19, [sp, #16]
 89c:	mov	x29, sp
 8a0:	bl	7a0 <no_options@plt>
 8a4:	cbz	w0, 8b0 <dirname_builtin+0x1c>
 8a8:	mov	w0, #0x102                 	// #258
 8ac:	b	9dc <dirname_builtin+0x148>
 8b0:	adrp	x8, 10000 <__FRAME_END__+0xf49c>
 8b4:	ldr	x8, [x8, #4056]
 8b8:	ldr	x8, [x8]
 8bc:	cbz	x8, 8c8 <dirname_builtin+0x34>
 8c0:	ldr	x9, [x8]
 8c4:	cbz	x9, 8d4 <dirname_builtin+0x40>
 8c8:	bl	770 <builtin_usage@plt>
 8cc:	mov	w0, #0x102                 	// #258
 8d0:	b	9dc <dirname_builtin+0x148>
 8d4:	ldr	x8, [x8, #8]
 8d8:	ldr	x19, [x8]
 8dc:	mov	x0, x19
 8e0:	bl	750 <strlen@plt>
 8e4:	lsl	x12, x0, #32
 8e8:	sxtw	x9, w0
 8ec:	mov	x10, #0xffffffff00000000    	// #-4294967296
 8f0:	mov	x8, x9
 8f4:	subs	x9, x9, #0x1
 8f8:	mov	x11, x12
 8fc:	b.lt	914 <dirname_builtin+0x80>  // b.tstop
 900:	add	x12, x19, x8
 904:	ldurb	w12, [x12, #-1]
 908:	cmp	w12, #0x2f
 90c:	add	x12, x11, x10
 910:	b.eq	8f0 <dirname_builtin+0x5c>  // b.none
 914:	cbz	w8, 9a4 <dirname_builtin+0x110>
 918:	mov	x10, #0xffffffff00000000    	// #-4294967296
 91c:	asr	x9, x11, #32
 920:	add	x12, x10, x8, lsl #32
 924:	strb	wzr, [x19, x9]
 928:	mov	x11, x9
 92c:	subs	x9, x9, #0x1
 930:	mov	x8, x12
 934:	b.lt	94c <dirname_builtin+0xb8>  // b.tstop
 938:	add	x12, x19, x11
 93c:	ldurb	w12, [x12, #-1]
 940:	cmp	w12, #0x2f
 944:	add	x12, x8, x10
 948:	b.ne	928 <dirname_builtin+0x94>  // b.any
 94c:	subs	w9, w11, #0x1
 950:	b.lt	9b8 <dirname_builtin+0x124>  // b.tstop
 954:	asr	x8, x8, #32
 958:	lsl	x12, x9, #32
 95c:	mov	x10, #0xffffffff00000000    	// #-4294967296
 960:	mov	x9, x8
 964:	subs	x8, x8, #0x1
 968:	mov	x11, x12
 96c:	b.lt	984 <dirname_builtin+0xf0>  // b.tstop
 970:	add	x12, x19, x9
 974:	ldurb	w12, [x12, #-1]
 978:	cmp	w12, #0x2f
 97c:	add	x12, x11, x10
 980:	b.eq	960 <dirname_builtin+0xcc>  // b.none
 984:	adrp	x10, 0 <_init-0x710>
 988:	add	x10, x10, #0x9fe
 98c:	cmp	w9, #0x0
 990:	asr	x8, x11, #32
 994:	csel	x0, x10, x19, eq  // eq = none
 998:	strb	wzr, [x19, x8]
 99c:	bl	790 <puts@plt>
 9a0:	b	9d8 <dirname_builtin+0x144>
 9a4:	adrp	x8, 10000 <__FRAME_END__+0xf49c>
 9a8:	ldr	x8, [x8, #4040]
 9ac:	adrp	x0, 0 <_init-0x710>
 9b0:	add	x0, x0, #0x9f8
 9b4:	b	9c8 <dirname_builtin+0x134>
 9b8:	adrp	x8, 10000 <__FRAME_END__+0xf49c>
 9bc:	ldr	x8, [x8, #4040]
 9c0:	adrp	x0, 0 <_init-0x710>
 9c4:	add	x0, x0, #0x9fb
 9c8:	ldr	x3, [x8]
 9cc:	mov	w1, #0x2                   	// #2
 9d0:	mov	w2, #0x1                   	// #1
 9d4:	bl	7b0 <fwrite@plt>
 9d8:	mov	w0, wzr
 9dc:	ldr	x19, [sp, #16]
 9e0:	ldp	x29, x30, [sp], #32
 9e4:	ret

Disassembly of section .fini:

00000000000009e8 <_fini>:
 9e8:	stp	x29, x30, [sp, #-16]!
 9ec:	mov	x29, sp
 9f0:	ldp	x29, x30, [sp], #16
 9f4:	ret
